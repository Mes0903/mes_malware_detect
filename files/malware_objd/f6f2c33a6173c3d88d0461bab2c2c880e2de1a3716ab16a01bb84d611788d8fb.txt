
f6f2c33a6173c3d88d0461bab2c2c880e2de1a3716ab16a01bb84d611788d8fb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	mov    DWORD PTR ds:0x447958,0x401b6c
  40100d:	pop    ebp
  40100e:	ret    
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    DWORD PTR ds:0x447958,0x43f737
  40101d:	pop    ebp
  40101e:	ret    
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0x8
  401036:	mov    DWORD PTR [ebp-0x4],0x0
  40103d:	jmp    0x401048
  40103f:	mov    eax,DWORD PTR [ebp-0x4]
  401042:	add    eax,0x1
  401045:	mov    DWORD PTR [ebp-0x4],eax
  401048:	mov    ecx,DWORD PTR [ebp-0x4]
  40104b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40104e:	jae    0x40109b
  401050:	mov    edx,DWORD PTR [ebp-0x4]
  401053:	mov    eax,DWORD PTR [ebp+0xc]
  401056:	movzx  ecx,WORD PTR [eax+edx*2]
  40105a:	sar    ecx,0xc
  40105d:	cmp    ecx,0x3
  401060:	jne    0x401099
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	mov    eax,DWORD PTR [ebp+0xc]
  401068:	movzx  ecx,WORD PTR [eax+edx*2]
  40106c:	and    ecx,0xfff
  401072:	add    ecx,0x43
  401075:	mov    DWORD PTR [ebp-0x8],ecx
  401078:	mov    edx,DWORD PTR [ebp+0x18]
  40107b:	mov    eax,DWORD PTR [ebp+0x10]
  40107e:	add    eax,DWORD PTR [edx]
  401080:	mov    ecx,DWORD PTR [ebp-0x8]
  401083:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  401087:	add    edx,DWORD PTR [ebp+0x14]
  40108a:	mov    eax,DWORD PTR [ebp+0x18]
  40108d:	mov    ecx,DWORD PTR [ebp+0x10]
  401090:	add    ecx,DWORD PTR [eax]
  401092:	mov    eax,DWORD PTR [ebp-0x8]
  401095:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  401099:	jmp    0x40103f
  40109b:	mov    esp,ebp
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	sub    esp,0x14
  4010a6:	mov    eax,DWORD PTR [ebp+0x8]
  4010a9:	cmp    DWORD PTR [eax+0x4],0x0
  4010ad:	je     0x4010f7
  4010af:	mov    DWORD PTR [ebp-0x14],0x2a1
  4010b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010b9:	mov    edx,DWORD PTR [ecx+0x4]
  4010bc:	sub    edx,0x8
  4010bf:	shr    edx,1
  4010c1:	mov    DWORD PTR [ebp-0xc],edx
  4010c4:	mov    eax,DWORD PTR [ebp+0x8]
  4010c7:	add    eax,0x8
  4010ca:	mov    DWORD PTR [ebp-0x10],eax
  4010cd:	mov    ecx,DWORD PTR [ebp+0x8]
  4010d0:	push   ecx
  4010d1:	mov    edx,DWORD PTR [ebp+0x10]
  4010d4:	push   edx
  4010d5:	mov    eax,DWORD PTR [ebp+0xc]
  4010d8:	push   eax
  4010d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4010dc:	push   ecx
  4010dd:	mov    edx,DWORD PTR [ebp-0xc]
  4010e0:	push   edx
  4010e1:	call   0x401030
  4010e6:	add    esp,0x14
  4010e9:	mov    eax,DWORD PTR [ebp+0x8]
  4010ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ef:	add    ecx,DWORD PTR [eax+0x4]
  4010f2:	mov    DWORD PTR [ebp+0x8],ecx
  4010f5:	jmp    0x4010a6
  4010f7:	mov    esp,ebp
  4010f9:	pop    ebp
  4010fa:	ret    
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	pop    ebp
  401104:	ret    
  401105:	int3   
  401106:	int3   
  401107:	int3   
  401108:	int3   
  401109:	int3   
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	push   ecx
  401114:	mov    DWORD PTR [ebp-0x4],0x4
  40111b:	push   0x40
  40111d:	push   0x3000
  401122:	mov    eax,DWORD PTR [ebp+0x8]
  401125:	push   eax
  401126:	push   0x0
  401128:	call   DWORD PTR ds:0x443df4
  40112e:	mov    esp,ebp
  401130:	pop    ebp
  401131:	ret    
  401132:	int3   
  401133:	int3   
  401134:	int3   
  401135:	int3   
  401136:	int3   
  401137:	int3   
  401138:	int3   
  401139:	int3   
  40113a:	int3   
  40113b:	int3   
  40113c:	int3   
  40113d:	int3   
  40113e:	int3   
  40113f:	int3   
  401140:	push   ebp
  401141:	mov    ebp,esp
  401143:	pop    ebp
  401144:	ret    
  401145:	int3   
  401146:	int3   
  401147:	int3   
  401148:	int3   
  401149:	int3   
  40114a:	int3   
  40114b:	int3   
  40114c:	int3   
  40114d:	int3   
  40114e:	int3   
  40114f:	int3   
  401150:	push   ebp
  401151:	mov    ebp,esp
  401153:	sub    esp,0x8
  401156:	mov    eax,DWORD PTR [ebp+0x8]
  401159:	mov    DWORD PTR [ebp-0x4],eax
  40115c:	mov    ecx,DWORD PTR [ebp+0xc]
  40115f:	mov    DWORD PTR [ebp-0x8],ecx
  401162:	mov    edx,DWORD PTR [ebp-0x4]
  401165:	cmp    edx,DWORD PTR [ebp-0x8]
  401168:	jae    0x401171
  40116a:	mov    eax,DWORD PTR [ebp-0x4]
  40116d:	jmp    0x401174
  40116f:	jmp    0x401174
  401171:	mov    eax,DWORD PTR [ebp-0x8]
  401174:	mov    esp,ebp
  401176:	pop    ebp
  401177:	ret    
  401178:	int3   
  401179:	int3   
  40117a:	int3   
  40117b:	int3   
  40117c:	int3   
  40117d:	int3   
  40117e:	int3   
  40117f:	int3   
  401180:	push   ebp
  401181:	mov    ebp,esp
  401183:	sub    esp,0x13c
  401189:	mov    DWORD PTR [ebp-0x11c],0x37
  401193:	mov    eax,ds:0x443df8
  401198:	mov    DWORD PTR [ebp-0x4],eax
  40119b:	push   0x44306c
  4011a0:	push   0x443078
  4011a5:	call   DWORD PTR ds:0x443dfc
  4011ab:	push   eax
  4011ac:	call   DWORD PTR ds:0x443e00
  4011b2:	mov    DWORD PTR [ebp-0x124],eax
  4011b8:	mov    ecx,DWORD PTR ds:0x443e04
  4011be:	mov    DWORD PTR [ebp-0x120],ecx
  4011c4:	mov    edx,DWORD PTR ds:0x443e08
  4011ca:	mov    DWORD PTR [ebp-0x114],edx
  4011d0:	mov    DWORD PTR [ebp-0x12c],0x0
  4011da:	jmp    0x4011eb
  4011dc:	mov    eax,DWORD PTR [ebp-0x12c]
  4011e2:	add    eax,0x4
  4011e5:	mov    DWORD PTR [ebp-0x12c],eax
  4011eb:	mov    ecx,DWORD PTR [ebp-0x12c]
  4011f1:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011f4:	jae    0x4012fc
  4011fa:	mov    DWORD PTR [ebp-0x11c],0x1425
  401204:	mov    DWORD PTR [ebp-0x11c],0x37
  40120e:	mov    edx,DWORD PTR [ebp-0x12c]
  401214:	add    edx,0x29d
  40121a:	mov    DWORD PTR ds:0x44795c,edx
  401220:	mov    eax,DWORD PTR [ebp+0x8]
  401223:	add    eax,DWORD PTR [ebp-0x12c]
  401229:	mov    ecx,DWORD PTR [eax]
  40122b:	add    ecx,DWORD PTR [ebp-0x12c]
  401231:	mov    edx,DWORD PTR [ebp+0x8]
  401234:	add    edx,DWORD PTR [ebp-0x12c]
  40123a:	mov    DWORD PTR [edx],ecx
  40123c:	mov    eax,DWORD PTR [ebp-0x128]
  401242:	mov    DWORD PTR [ebp-0x130],eax
  401248:	mov    DWORD PTR [ebp-0x11c],0x1425
  401252:	mov    ecx,DWORD PTR ds:0x44795c
  401258:	mov    DWORD PTR [ebp-0x13c],ecx
  40125e:	mov    edx,DWORD PTR [ebp-0x13c]
  401264:	mov    DWORD PTR [ebp-0x138],edx
  40126a:	mov    eax,DWORD PTR [ebp-0x138]
  401270:	mov    DWORD PTR [ebp-0x134],eax
  401276:	cmp    DWORD PTR [ebp-0x12c],0x0
  40127d:	jne    0x4012db
  40127f:	push   0x104
  401284:	lea    ecx,[ebp-0x110]
  40128a:	push   ecx
  40128b:	call   DWORD PTR [ebp-0x4]
  40128e:	push   0x443084
  401293:	lea    edx,[ebp-0x110]
  401299:	push   edx
  40129a:	call   DWORD PTR [ebp-0x120]
  4012a0:	push   0x0
  4012a2:	push   0x80
  4012a7:	push   0x3
  4012a9:	push   0x0
  4012ab:	push   0x3
  4012ad:	push   0x1
  4012af:	lea    eax,[ebp-0x110]
  4012b5:	push   eax
  4012b6:	call   DWORD PTR [ebp-0x114]
  4012bc:	mov    DWORD PTR [ebp-0x118],eax
  4012c2:	cmp    DWORD PTR [ebp-0x118],0xffffffff
  4012c9:	je     0x4012d4
  4012cb:	cmp    DWORD PTR [ebp-0x118],0x0
  4012d2:	jne    0x4012db
  4012d4:	mov    eax,0x42
  4012d9:	jmp    0x4012fc
  4012db:	mov    ecx,DWORD PTR [ebp+0x8]
  4012de:	add    ecx,DWORD PTR [ebp-0x12c]
  4012e4:	mov    edx,DWORD PTR [ecx]
  4012e6:	xor    edx,DWORD PTR [ebp-0x134]
  4012ec:	mov    eax,DWORD PTR [ebp+0x8]
  4012ef:	add    eax,DWORD PTR [ebp-0x12c]
  4012f5:	mov    DWORD PTR [eax],edx
  4012f7:	jmp    0x4011dc
  4012fc:	mov    esp,ebp
  4012fe:	pop    ebp
  4012ff:	ret    
  401300:	push   ebp
  401301:	mov    ebp,esp
  401303:	sub    esp,0x5c
  401306:	xor    eax,eax
  401308:	jmp    0x40146f
  40130d:	mov    eax,DWORD PTR [ebp+0xc]
  401310:	mov    DWORD PTR [ebp-0x5c],eax
  401313:	cmp    DWORD PTR [ebp-0x5c],0x1
  401317:	je     0x401332
  401319:	cmp    DWORD PTR [ebp-0x5c],0x2
  40131d:	je     0x401440
  401323:	cmp    DWORD PTR [ebp-0x5c],0xf
  401327:	je     0x4013b9
  40132d:	jmp    0x401459
  401332:	push   0x0
  401334:	push   0x0
  401336:	push   0x0
  401338:	push   0x0
  40133a:	call   DWORD PTR ds:0x44436c
  401340:	mov    DWORD PTR [ebp-0x54],eax
  401343:	push   0xc8
  401348:	push   0xc8
  40134d:	push   0x64
  40134f:	push   0x64
  401351:	mov    ecx,DWORD PTR [ebp-0x54]
  401354:	push   ecx
  401355:	call   DWORD PTR ds:0x444370
  40135b:	push   0x0
  40135d:	push   0x64
  40135f:	push   0x64
  401361:	mov    edx,DWORD PTR [ebp-0x54]
  401364:	push   edx
  401365:	call   DWORD PTR ds:0x444374
  40136b:	push   0xc8
  401370:	push   0xc8
  401375:	mov    eax,DWORD PTR [ebp-0x54]
  401378:	push   eax
  401379:	call   DWORD PTR ds:0x444378
  40137f:	push   0x0
  401381:	push   0x64
  401383:	push   0xc8
  401388:	mov    ecx,DWORD PTR [ebp-0x54]
  40138b:	push   ecx
  40138c:	call   DWORD PTR ds:0x444374
  401392:	push   0xc8
  401397:	push   0x64
  401399:	mov    edx,DWORD PTR [ebp-0x54]
  40139c:	push   edx
  40139d:	call   DWORD PTR ds:0x444378
  4013a3:	mov    eax,DWORD PTR [ebp-0x54]
  4013a6:	push   eax
  4013a7:	call   DWORD PTR ds:0x44437c
  4013ad:	mov    ds:0x44794c,eax
  4013b2:	xor    eax,eax
  4013b4:	jmp    0x40146f
  4013b9:	lea    ecx,[ebp-0x50]
  4013bc:	push   ecx
  4013bd:	mov    edx,DWORD PTR [ebp+0x8]
  4013c0:	push   edx
  4013c1:	call   DWORD PTR ds:0x4440c0
  4013c7:	mov    DWORD PTR [ebp-0x58],eax
  4013ca:	lea    eax,[ebp-0x10]
  4013cd:	push   eax
  4013ce:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d1:	push   ecx
  4013d2:	call   DWORD PTR ds:0x4440c4
  4013d8:	mov    eax,DWORD PTR [ebp-0x8]
  4013db:	cdq    
  4013dc:	and    edx,0x3
  4013df:	add    eax,edx
  4013e1:	sar    eax,0x2
  4013e4:	mov    DWORD PTR [ebp-0x10],eax
  4013e7:	mov    eax,DWORD PTR [ebp-0x8]
  4013ea:	imul   eax,eax,0x3
  4013ed:	cdq    
  4013ee:	and    edx,0x3
  4013f1:	add    eax,edx
  4013f3:	sar    eax,0x2
  4013f6:	mov    DWORD PTR [ebp-0x8],eax
  4013f9:	mov    eax,DWORD PTR [ebp-0x4]
  4013fc:	cdq    
  4013fd:	and    edx,0x3
  401400:	add    eax,edx
  401402:	sar    eax,0x2
  401405:	mov    DWORD PTR [ebp-0xc],eax
  401408:	mov    eax,DWORD PTR [ebp-0x4]
  40140b:	imul   eax,eax,0x3
  40140e:	cdq    
  40140f:	and    edx,0x3
  401412:	add    eax,edx
  401414:	sar    eax,0x2
  401417:	mov    DWORD PTR [ebp-0x4],eax
  40141a:	lea    edx,[ebp-0x10]
  40141d:	push   edx
  40141e:	mov    eax,ds:0x44794c
  401423:	push   eax
  401424:	mov    ecx,DWORD PTR [ebp-0x58]
  401427:	push   ecx
  401428:	call   DWORD PTR ds:0x444380
  40142e:	lea    edx,[ebp-0x50]
  401431:	push   edx
  401432:	mov    eax,DWORD PTR [ebp+0x8]
  401435:	push   eax
  401436:	call   DWORD PTR ds:0x4440c8
  40143c:	xor    eax,eax
  40143e:	jmp    0x40146f
  401440:	mov    ecx,DWORD PTR ds:0x44794c
  401446:	push   ecx
  401447:	call   DWORD PTR ds:0x444384
  40144d:	push   0x0
  40144f:	call   DWORD PTR ds:0x4440cc
  401455:	xor    eax,eax
  401457:	jmp    0x40146f
  401459:	mov    edx,DWORD PTR [ebp+0x14]
  40145c:	push   edx
  40145d:	mov    eax,DWORD PTR [ebp+0x10]
  401460:	push   eax
  401461:	mov    ecx,DWORD PTR [ebp+0xc]
  401464:	push   ecx
  401465:	mov    edx,DWORD PTR [ebp+0x8]
  401468:	push   edx
  401469:	call   DWORD PTR ds:0x4440d0
  40146f:	mov    esp,ebp
  401471:	pop    ebp
  401472:	ret    0x10
  401475:	int3   
  401476:	int3   
  401477:	int3   
  401478:	int3   
  401479:	int3   
  40147a:	int3   
  40147b:	int3   
  40147c:	int3   
  40147d:	int3   
  40147e:	int3   
  40147f:	int3   
  401480:	push   ebp
  401481:	mov    ebp,esp
  401483:	sub    esp,0x1bc
  401489:	pusha  
  40148a:	mov    DWORD PTR ds:0x447960,ebp
  401490:	push   0x104
  401495:	lea    eax,[ebp-0x110]
  40149b:	push   eax
  40149c:	call   DWORD PTR ds:0x443df8
  4014a2:	mov    DWORD PTR [ebp-0x14c],0x30
  4014ac:	mov    DWORD PTR [ebp-0x148],0x3
  4014b6:	mov    DWORD PTR [ebp-0x144],0x401300
  4014c0:	mov    DWORD PTR [ebp-0x140],0x0
  4014ca:	mov    DWORD PTR [ebp-0x13c],0x0
  4014d4:	mov    DWORD PTR [ebp-0x138],0x2
  4014de:	push   0x7f00
  4014e3:	push   0x0
  4014e5:	call   DWORD PTR ds:0x4440d4
  4014eb:	mov    DWORD PTR [ebp-0x134],eax
  4014f1:	push   0x7f00
  4014f6:	push   0x0
  4014f8:	call   DWORD PTR ds:0x4440d8
  4014fe:	mov    DWORD PTR [ebp-0x130],eax
  401504:	push   0x0
  401506:	call   DWORD PTR ds:0x444388
  40150c:	mov    DWORD PTR [ebp-0x12c],eax
  401512:	mov    DWORD PTR [ebp-0x128],0x0
  40151c:	mov    DWORD PTR [ebp-0x124],0x44309c
  401526:	push   0x7f00
  40152b:	push   0x0
  40152d:	call   DWORD PTR ds:0x4440d4
  401533:	mov    DWORD PTR [ebp-0x120],eax
  401539:	lea    ecx,[ebp-0x14c]
  40153f:	push   ecx
  401540:	call   DWORD PTR ds:0x4440dc
  401546:	push   0x0
  401548:	push   0x2
  40154a:	push   0x0
  40154c:	push   0x0
  40154e:	push   0x80000000
  401553:	push   0x80000000
  401558:	push   0x80000000
  40155d:	push   0x80000000
  401562:	push   0xcf0000
  401567:	push   0x4430a8
  40156c:	push   0x44309c
  401571:	push   0x0
  401573:	call   DWORD PTR ds:0x4440e0
  401579:	mov    DWORD PTR [ebp-0x18c],eax
  40157f:	mov    DWORD PTR [ebp-0x194],0x0
  401589:	mov    edx,DWORD PTR ds:0x443e08
  40158f:	mov    DWORD PTR [ebp-0x1a8],edx
  401595:	mov    DWORD PTR [ebp-0x114],0x0
  40159f:	mov    DWORD PTR [ebp-0x188],0x64
  4015a9:	mov    DWORD PTR [ebp-0x11c],0x1
  4015b3:	mov    DWORD PTR [ebp-0x194],0x0
  4015bd:	mov    DWORD PTR [ebp-0x154],0x0
  4015c7:	mov    DWORD PTR [ebp-0x184],0x1
  4015d1:	mov    DWORD PTR [ebp-0x118],0x3
  4015db:	mov    DWORD PTR [ebp-0x114],0x0
  4015e5:	mov    DWORD PTR [ebp-0x188],0x64
  4015ef:	mov    DWORD PTR [ebp-0x11c],0x1
  4015f9:	mov    DWORD PTR [ebp-0x194],0x0
  401603:	mov    DWORD PTR [ebp-0x154],0x0
  40160d:	mov    DWORD PTR [ebp-0x184],0x1
  401617:	mov    DWORD PTR [ebp-0x118],0x3
  401621:	mov    DWORD PTR [ebp-0x114],0x0
  40162b:	mov    DWORD PTR [ebp-0x188],0x64
  401635:	mov    DWORD PTR [ebp-0x11c],0x1
  40163f:	mov    DWORD PTR [ebp-0x194],0x0
  401649:	mov    DWORD PTR [ebp-0x154],0x0
  401653:	mov    DWORD PTR [ebp-0x184],0x1
  40165d:	mov    DWORD PTR [ebp-0x118],0x3
  401667:	push   0x104
  40166c:	lea    eax,[ebp-0x110]
  401672:	push   eax
  401673:	call   DWORD PTR ds:0x443df8
  401679:	call   0x401ac0
  40167e:	push   0x4430b0
  401683:	push   0x4430c0
  401688:	call   DWORD PTR ds:0x443dfc
  40168e:	push   eax
  40168f:	call   DWORD PTR ds:0x443e00
  401695:	mov    DWORD PTR [ebp-0x17c],eax
  40169b:	lea    ecx,[ebp-0x158]
  4016a1:	push   ecx
  4016a2:	push   0x20019
  4016a7:	push   0x0
  4016a9:	push   0x4430cc
  4016ae:	push   0x80000002
  4016b3:	call   DWORD PTR [ebp-0x17c]
  4016b9:	test   eax,eax
  4016bb:	je     0x4016cc
  4016bd:	push   0x4
  4016bf:	call   DWORD PTR ds:0x443e0c
  4016c5:	xor    eax,eax
  4016c7:	jmp    0x401ab6
  4016cc:	lea    edx,[ebp-0x158]
  4016d2:	push   edx
  4016d3:	push   0x20019
  4016d8:	push   0x0
  4016da:	push   0x4430e0
  4016df:	mov    eax,DWORD PTR [ebp-0x158]
  4016e5:	push   eax
  4016e6:	call   DWORD PTR [ebp-0x17c]
  4016ec:	test   eax,eax
  4016ee:	je     0x4016ff
  4016f0:	push   0x4
  4016f2:	call   DWORD PTR ds:0x443e0c
  4016f8:	xor    eax,eax
  4016fa:	jmp    0x401ab6
  4016ff:	lea    ecx,[ebp-0x158]
  401705:	push   ecx
  401706:	push   0x20019
  40170b:	push   0x0
  40170d:	push   0x4430f0
  401712:	mov    edx,DWORD PTR [ebp-0x158]
  401718:	push   edx
  401719:	call   DWORD PTR [ebp-0x17c]
  40171f:	test   eax,eax
  401721:	je     0x401732
  401723:	push   0x4
  401725:	call   DWORD PTR ds:0x443e0c
  40172b:	xor    eax,eax
  40172d:	jmp    0x401ab6
  401732:	lea    eax,[ebp-0x158]
  401738:	push   eax
  401739:	push   0x20019
  40173e:	push   0x0
  401740:	push   0x447950
  401745:	mov    ecx,DWORD PTR [ebp-0x158]
  40174b:	push   ecx
  40174c:	call   DWORD PTR [ebp-0x17c]
  401752:	test   eax,eax
  401754:	je     0x401765
  401756:	push   0x4
  401758:	call   DWORD PTR ds:0x443e0c
  40175e:	xor    eax,eax
  401760:	jmp    0x401ab6
  401765:	lea    edx,[ebp-0x158]
  40176b:	push   edx
  40176c:	push   0x20019
  401771:	push   0x0
  401773:	push   0x447954
  401778:	mov    eax,DWORD PTR [ebp-0x158]
  40177e:	push   eax
  40177f:	call   DWORD PTR [ebp-0x17c]
  401785:	test   eax,eax
  401787:	je     0x401798
  401789:	push   0x4
  40178b:	call   DWORD PTR ds:0x443e0c
  401791:	xor    eax,eax
  401793:	jmp    0x401ab6
  401798:	lea    ecx,[ebp-0x158]
  40179e:	push   ecx
  40179f:	push   0x20019
  4017a4:	push   0x0
  4017a6:	push   0x443110
  4017ab:	mov    edx,DWORD PTR [ebp-0x158]
  4017b1:	push   edx
  4017b2:	call   DWORD PTR [ebp-0x17c]
  4017b8:	test   eax,eax
  4017ba:	je     0x4017cb
  4017bc:	push   0x4
  4017be:	call   DWORD PTR ds:0x443e0c
  4017c4:	xor    eax,eax
  4017c6:	jmp    0x401ab6
  4017cb:	lea    eax,[ebp-0x158]
  4017d1:	push   eax
  4017d2:	push   0x20019
  4017d7:	push   0x0
  4017d9:	push   0x4430fc
  4017de:	mov    ecx,DWORD PTR [ebp-0x158]
  4017e4:	push   ecx
  4017e5:	call   DWORD PTR [ebp-0x17c]
  4017eb:	test   eax,eax
  4017ed:	jne    0x4017fe
  4017ef:	push   0x4
  4017f1:	call   DWORD PTR ds:0x443e0c
  4017f7:	xor    eax,eax
  4017f9:	jmp    0x401ab6
  4017fe:	call   0x401000
  401803:	mov    edx,DWORD PTR ds:0x447958
  401809:	push   edx
  40180a:	call   0x401020
  40180f:	add    esp,0x4
  401812:	mov    DWORD PTR [ebp-0x198],eax
  401818:	mov    eax,DWORD PTR [ebp-0x198]
  40181e:	push   eax
  40181f:	call   0x401110
  401824:	add    esp,0x4
  401827:	mov    DWORD PTR [ebp-0x190],eax
  40182d:	mov    ecx,DWORD PTR [ebp-0x198]
  401833:	push   ecx
  401834:	push   0x0
  401836:	mov    edx,DWORD PTR [ebp-0x190]
  40183c:	push   edx
  40183d:	call   0x401140
  401842:	add    esp,0xc
  401845:	mov    eax,DWORD PTR [ebp-0x198]
  40184b:	mov    DWORD PTR [ebp-0x1a0],eax
  401851:	mov    ecx,DWORD PTR [ebp-0x194]
  401857:	cmp    ecx,DWORD PTR [ebp-0x198]
  40185d:	jae    0x4018e9
  401863:	mov    edx,DWORD PTR [ebp-0x1a0]
  401869:	push   edx
  40186a:	mov    eax,DWORD PTR [ebp-0x188]
  401870:	push   eax
  401871:	call   0x401150
  401876:	add    esp,0x8
  401879:	mov    DWORD PTR [ebp-0x1a4],eax
  40187f:	mov    ecx,DWORD PTR [ebp-0x1a4]
  401885:	push   ecx
  401886:	mov    edx,DWORD PTR ds:0x447958
  40188c:	add    edx,DWORD PTR [ebp-0x154]
  401892:	push   edx
  401893:	mov    eax,DWORD PTR [ebp-0x190]
  401899:	add    eax,DWORD PTR [ebp-0x194]
  40189f:	push   eax
  4018a0:	call   0x44185a
  4018a5:	add    esp,0xc
  4018a8:	mov    ecx,DWORD PTR [ebp-0x11c]
  4018ae:	add    ecx,DWORD PTR [ebp-0x188]
  4018b4:	add    ecx,DWORD PTR [ebp-0x154]
  4018ba:	mov    DWORD PTR [ebp-0x154],ecx
  4018c0:	mov    edx,DWORD PTR [ebp-0x194]
  4018c6:	add    edx,DWORD PTR [ebp-0x188]
  4018cc:	mov    DWORD PTR [ebp-0x194],edx
  4018d2:	mov    eax,DWORD PTR [ebp-0x1a0]
  4018d8:	sub    eax,DWORD PTR [ebp-0x1a4]
  4018de:	mov    DWORD PTR [ebp-0x1a0],eax
  4018e4:	jmp    0x401851
  4018e9:	mov    ecx,DWORD PTR [ebp-0x198]
  4018ef:	push   ecx
  4018f0:	mov    edx,DWORD PTR [ebp-0x190]
  4018f6:	push   edx
  4018f7:	call   0x401180
  4018fc:	add    esp,0x8
  4018ff:	mov    DWORD PTR [ebp-0x154],0x0
  401909:	mov    DWORD PTR [ebp-0x1ac],0x0
  401913:	call   0x401010
  401918:	mov    eax,ds:0x447958
  40191d:	push   eax
  40191e:	call   0x401020
  401923:	add    esp,0x4
  401926:	mov    DWORD PTR [ebp-0x1b0],eax
  40192c:	mov    ecx,DWORD PTR [ebp-0x1b0]
  401932:	push   ecx
  401933:	call   0x401110
  401938:	add    esp,0x4
  40193b:	mov    DWORD PTR [ebp-0x150],eax
  401941:	mov    edx,DWORD PTR [ebp-0x1b0]
  401947:	push   edx
  401948:	push   0x0
  40194a:	mov    eax,DWORD PTR [ebp-0x150]
  401950:	push   eax
  401951:	call   0x401140
  401956:	add    esp,0xc
  401959:	mov    ecx,DWORD PTR [ebp-0x1b0]
  40195f:	mov    DWORD PTR [ebp-0x1b8],ecx
  401965:	mov    edx,DWORD PTR [ebp-0x1ac]
  40196b:	cmp    edx,DWORD PTR [ebp-0x1b0]
  401971:	jae    0x4019fc
  401977:	mov    eax,DWORD PTR [ebp-0x1b8]
  40197d:	push   eax
  40197e:	mov    ecx,DWORD PTR [ebp-0x188]
  401984:	push   ecx
  401985:	call   0x401150
  40198a:	add    esp,0x8
  40198d:	mov    DWORD PTR [ebp-0x1bc],eax
  401993:	mov    edx,DWORD PTR [ebp-0x1bc]
  401999:	push   edx
  40199a:	mov    eax,ds:0x447958
  40199f:	add    eax,DWORD PTR [ebp-0x154]
  4019a5:	push   eax
  4019a6:	mov    ecx,DWORD PTR [ebp-0x150]
  4019ac:	add    ecx,DWORD PTR [ebp-0x1ac]
  4019b2:	push   ecx
  4019b3:	call   0x44185a
  4019b8:	add    esp,0xc
  4019bb:	mov    edx,DWORD PTR [ebp-0x11c]
  4019c1:	add    edx,DWORD PTR [ebp-0x188]
  4019c7:	add    edx,DWORD PTR [ebp-0x154]
  4019cd:	mov    DWORD PTR [ebp-0x154],edx
  4019d3:	mov    eax,DWORD PTR [ebp-0x1ac]
  4019d9:	add    eax,DWORD PTR [ebp-0x188]
  4019df:	mov    DWORD PTR [ebp-0x1ac],eax
  4019e5:	mov    ecx,DWORD PTR [ebp-0x1b8]
  4019eb:	sub    ecx,DWORD PTR [ebp-0x1bc]
  4019f1:	mov    DWORD PTR [ebp-0x1b8],ecx
  4019f7:	jmp    0x401965
  4019fc:	mov    edx,DWORD PTR [ebp-0x1b0]
  401a02:	push   edx
  401a03:	mov    eax,DWORD PTR [ebp-0x150]
  401a09:	push   eax
  401a0a:	call   0x401180
  401a0f:	add    esp,0x8
  401a12:	mov    ecx,DWORD PTR [ebp-0x190]
  401a18:	mov    edx,DWORD PTR [ebp-0x150]
  401a1e:	mov    DWORD PTR [ecx],edx
  401a20:	push   0x40000
  401a25:	call   0x401110
  401a2a:	add    esp,0x4
  401a2d:	mov    DWORD PTR [ebp-0x4],eax
  401a30:	lea    eax,[ebp-0x158]
  401a36:	push   eax
  401a37:	push   0x20019
  401a3c:	push   0x0
  401a3e:	push   0x44316c
  401a43:	push   0x80000002
  401a48:	call   DWORD PTR ds:0x4443f0
  401a4e:	test   eax,eax
  401a50:	je     0x401a56
  401a52:	xor    eax,eax
  401a54:	jmp    0x401ab6
  401a56:	push   0x3d200
  401a5b:	mov    ecx,DWORD PTR [ebp-0x190]
  401a61:	push   ecx
  401a62:	mov    edx,DWORD PTR [ebp-0x4]
  401a65:	add    edx,0x300
  401a6b:	push   edx
  401a6c:	call   0x44185a
  401a71:	add    esp,0xc
  401a74:	mov    eax,DWORD PTR [ebp-0x4]
  401a77:	sub    eax,0x400000
  401a7c:	push   eax
  401a7d:	mov    ecx,DWORD PTR [ebp-0x4]
  401a80:	push   ecx
  401a81:	mov    edx,DWORD PTR [ebp-0x150]
  401a87:	push   edx
  401a88:	call   0x4010a0
  401a8d:	add    esp,0xc
  401a90:	mov    esp,DWORD PTR ds:0x447960
  401a96:	pop    ecx
  401a97:	mov    ecx,DWORD PTR [ebp-0x4]
  401a9a:	add    ecx,0x3d190
  401aa0:	mov    edx,ecx
  401aa2:	call   0x401aa7
  401aa7:	pop    eax
  401aa8:	call   0x401aad
  401aad:	pop    eax
  401aae:	call   0x401ab3
  401ab3:	pop    eax
  401ab4:	jmp    edx
  401ab6:	mov    esp,ebp
  401ab8:	pop    ebp
  401ab9:	ret    
  401aba:	int3   
  401abb:	int3   
  401abc:	int3   
  401abd:	int3   
  401abe:	int3   
  401abf:	int3   
  401ac0:	push   ebp
  401ac1:	mov    ebp,esp
  401ac3:	mov    eax,ds:0x443014
  401ac8:	mov    BYTE PTR [eax+0x3],0x73
  401acc:	mov    ecx,DWORD PTR ds:0x443014
  401ad2:	mov    BYTE PTR [ecx+0x4],0x74
  401ad6:	mov    edx,DWORD PTR ds:0x443014
  401adc:	mov    BYTE PTR [edx+0x5],0x65
  401ae0:	mov    eax,ds:0x443014
  401ae5:	mov    BYTE PTR [eax+0x6],0x6d
  401ae9:	mov    ecx,DWORD PTR ds:0x443014
  401aef:	mov    BYTE PTR [ecx+0x7],0x33
  401af3:	mov    edx,DWORD PTR ds:0x443014
  401af9:	mov    BYTE PTR [edx+0x8],0x32
  401afd:	mov    eax,ds:0x443014
  401b02:	mov    BYTE PTR [eax+0x9],0x5c
  401b06:	mov    ecx,DWORD PTR ds:0x443014
  401b0c:	mov    BYTE PTR [ecx+0xa],0x61
  401b10:	mov    edx,DWORD PTR ds:0x443014
  401b16:	mov    BYTE PTR [edx+0xb],0x74
  401b1a:	mov    eax,ds:0x443014
  401b1f:	mov    BYTE PTR [eax+0xc],0x6c
  401b23:	mov    ecx,DWORD PTR ds:0x443014
  401b29:	mov    BYTE PTR [ecx+0xd],0x2e
  401b2d:	mov    edx,DWORD PTR ds:0x443014
  401b33:	mov    BYTE PTR [edx+0xe],0x64
  401b37:	mov    eax,ds:0x443014
  401b3c:	mov    BYTE PTR [eax+0xf],0x6c
  401b40:	mov    ecx,DWORD PTR ds:0x443014
  401b46:	mov    BYTE PTR [ecx+0x10],0x6c
  401b4a:	mov    edx,DWORD PTR ds:0x443014
  401b50:	mov    BYTE PTR [edx],0x5c
  401b53:	mov    eax,ds:0x443014
  401b58:	mov    BYTE PTR [eax+0x1],0x73
  401b5c:	mov    ecx,DWORD PTR ds:0x443014
  401b62:	mov    BYTE PTR [ecx+0x2],0x79
  401b66:	pop    ebp
  401b67:	ret    
  401b68:	add    dl,dl
  401b6a:	add    eax,DWORD PTR [eax]
  401b6c:	popf   
  401b6d:	xlat   BYTE PTR ds:[ebx]
  401b6e:	inc    ebx
  401b6f:	add    dl,ah
  401b71:	addr16 je 0x401bc4
  401b74:	iret   
  401b75:	ins    DWORD PTR es:[edi],dx
  401b76:	arpl   WORD PTR [ecx-0x3f],ax
  401b79:	data16 jb 0x401be1
  401b7c:	into   
  401b7d:	jno    0x401b7f
  401b7f:	add    cl,ch
  401b81:	ins    DWORD PTR es:[edi],dx
  401b82:	popa   
  401b83:	fs loope 0x401bf1
  401b86:	bound  esi,QWORD PTR [edx-0x44]
  401b89:	jo     0x401c04
  401b8b:	inc    ebp
  401b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8d:	inc    ebx
  401b8e:	add    BYTE PTR [eax],al
  401b90:	imul   ebp,DWORD PTR [ebp+0x61],0x626b6164
  401b97:	jb     0x401c15
  401b99:	jo     0x401c14
  401b9b:	inc    ebp
  401b9c:	test   DWORD PTR [ebp+0x0],edx
  401b9f:	add    BYTE PTR [edx+0x67],ah
  401ba2:	je     0x401bf1
  401ba4:	and    BYTE PTR [esi+0x75],0x6c
  401ba8:	or     BYTE PTR [edx+0x61],0x6e
  401bac:	jns    0x401c1c
  401bae:	gs inc ecx
  401bb0:	popf   
  401bb1:	add    al,BYTE PTR [eax]
  401bb3:	add    BYTE PTR [esi+0x70],bl
  401bb6:	gs popa 
  401bb8:	push   ecx
  401bb9:	addr16 inc esi
  401bbb:	imul   esi,DWORD PTR [ecx],0x49004167
  401bc1:	jno    0x401c37
  401bc3:	jb     0x401c03
  401bc5:	arpl   WORD PTR [ecx+eax*2-0x63],si
  401bc9:	add    al,BYTE PTR [eax]
  401bcb:	add    BYTE PTR [edx+0x67],bl
  401bce:	je     0x401c27
  401bd0:	add    BYTE PTR [ebp*2+0x700a6f64],al
  401bd7:	inc    esp
  401bd8:	imul   ecx,DWORD PTR [edi],0xf2746366
  401bde:	jo     0x401c59
  401be0:	inc    ecx
  401be1:	popf   
  401be2:	add    al,BYTE PTR [eax]
  401be4:	add    dl,bl
  401be6:	gs je  0x401c36
  401be9:	cli    
  401bea:	data16 jne 0x401c59
  401bed:	clc    
  401bee:	dec    edx
  401bef:	popa   
  401bf0:	outs   dx,BYTE PTR ds:[esi]
  401bf1:	shr    DWORD PTR [esi+0x65],0x57
  401bf5:	popf   
  401bf6:	add    al,BYTE PTR [eax]
  401bf8:	add    BYTE PTR [ecx-0x56ffc001],ah
  401bfe:	(bad)  
  401bff:	aas    
  401c00:	add    BYTE PTR [ecx+0x69003fff],al
  401c06:	(bad)  
  401c07:	aas    
  401c08:	add    ch,dl
  401c0a:	(bad)  
  401c0b:	aas    
  401c0c:	add    cl,cl
  401c0e:	(bad)  
  401c0f:	aas    
  401c10:	add    BYTE PTR [ebp-0x1],bh
  401c13:	aas    
  401c14:	add    BYTE PTR [ebp+0x62003fff],dl
  401c1a:	gs je  0x401c6d
  401c1d:	(bad)  
  401c1e:	imul   esp,DWORD PTR [ebx+0x41],0xffffff81
  401c22:	data16 jb 0x401c8a
  401c25:	outs   dx,BYTE PTR ds:[esi]
  401c26:	outs   dx,DWORD PTR ds:[esi]
  401c27:	add    BYTE PTR [eax],al
  401c29:	pop    ecx
  401c2a:	imul   esp,DWORD PTR [ecx+0x64],0x51
  401c2e:	imul   esp,DWORD PTR [edx+0x72],0x4579703c
  401c35:	add    BYTE PTR [ebp+0x41],dl
  401c38:	add    BYTE PTR [eax],al
  401c3a:	ss gs jb 0x401cac
  401c3e:	cmp    BYTE PTR [esi+0x33],ch
  401c41:	xor    cl,BYTE PTR [ebx-0x6293939a]
  401c47:	add    al,BYTE PTR [eax]
  401c49:	add    BYTE PTR [eax],bh
  401c4b:	outs   dx,DWORD PTR ds:[esi]
  401c4c:	jbe    0x401cb1
  401c4e:	das    
  401c4f:	jbe    0x401c7f
  401c51:	or     DWORD PTR fs:[edi+0x0],ebp
  401c55:	add    BYTE PTR [eax],al
  401c57:	ins    WORD PTR es:[edi],dx
  401c59:	jae    0x401c5b
  401c5b:	ja     0x401c5d
  401c5d:	add    al,dh
  401c5f:	outs   dx,DWORD PTR ds:[esi]
  401c60:	jbe    0x401cc5
  401c62:	out    dx,eax
  401c63:	jbe    0x401c93
  401c65:	add    DWORD PTR fs:[edi+0x0],ebp
  401c69:	add    al,bh
  401c6b:	gs ins DWORD PTR es:[edi],dx
  401c6d:	arpl   bp,bp
  401c6f:	jns    0x401c71
  401c71:	add    bl,dh
  401c73:	imul   esi,DWORD PTR [edx+0x74],0x416c61c8
  401c7a:	mov    ecx,0x9d636f6e
  401c7f:	add    al,BYTE PTR [eax]
  401c81:	add    bl,dl
  401c83:	imul   esi,DWORD PTR [edx+0x74],0x416c61a8
  401c8a:	mov    ecx,0x9d636f6e
  401c8f:	add    al,BYTE PTR [eax]
  401c91:	add    BYTE PTR [eax+0x6c],dh
  401c94:	ins    DWORD PTR es:[edi],dx
  401c95:	popa   
  401c96:	lea    edx,[ecx+ebp*2+0x65]
  401c9a:	add    BYTE PTR [edx+0x7446664b],dl
  401ca0:	outs   dx,BYTE PTR ds:[esi]
  401ca1:	add    BYTE PTR gs:[ebx+0x69],dl
  401ca5:	jb     0x401d1b
  401ca7:	push   0x6f506c61
  401cac:	imul   esi,DWORD PTR [ebp+eiz*2+0x7e],0x76
  401cb1:	add    BYTE PTR [eax],al
  401cb3:	gs gs popa 
  401cb6:	jo     0x401d14
  401cb8:	outs   dx,BYTE PTR ds:[esi]
  401cb9:	ins    BYTE PTR es:[edi],dx
  401cba:	outs   dx,DWORD PTR ds:[esi]
  401cbb:	add    al,BYTE PTR ds:[eax]
  401cbe:	add    BYTE PTR [esi],dh
  401cc0:	gs jb  0x401d31
  401cc3:	inc    eax
  401cc4:	outs   dx,BYTE PTR ds:[esi]
  401cc5:	xor    esi,DWORD PTR [edx]
  401cc7:	and    DWORD PTR [esi+0x6c],0x6c
  401ccb:	popf   
  401ccc:	add    al,BYTE PTR [eax]
  401cce:	add    BYTE PTR [edx+0x65],bl
  401cd1:	je     0x401d23
  401cd3:	punpckhdq mm4,QWORD PTR [ebx+0x65]
  401cd7:	push   cs
  401cd8:	jbe    0x401d22
  401cda:	gs cld 
  401cdc:	jb     0x401cde
  401cde:	add    BYTE PTR [ebp-0x62fc43fe],bl
  401ce4:	sahf   
  401ce5:	pop    ecx
  401ce6:	add    BYTE PTR [ebp-0x62fffc15],bl
  401cec:	jmp    0x401cf1
  401cee:	add    BYTE PTR [ebp-0x62fffc15],bl
  401cf4:	jmp    0x401cf9
  401cf6:	add    BYTE PTR [ebp-0x62fffc15],bl
  401cfc:	jmp    0x401d01
  401cfe:	add    BYTE PTR [eax],al
  401d00:	popf   
  401d01:	jmp    0x401d06
  401d03:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d09:	jmp    0x401d0e
  401d0b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d11:	jmp    0x401d16
  401d13:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d19:	jmp    0x401d1e
  401d1b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d21:	mov    ds:0xeb9d0004,eax
  401d26:	add    eax,DWORD PTR [eax]
  401d28:	popf   
  401d29:	jmp    0x401d2e
  401d2b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d31:	jmp    0x401d36
  401d33:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d39:	jmp    0x401d3e
  401d3b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d41:	jmp    0x401d46
  401d43:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d49:	jmp    0x401d4e
  401d4b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d51:	jmp    0x401d56
  401d53:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d59:	jmp    0x401d5e
  401d5b:	add    BYTE PTR [ebp-0x62fc16fe],bl
  401d61:	add    ch,cl
  401d63:	add    eax,DWORD PTR [eax]
  401d65:	popf   
  401d66:	add    ch,cl
  401d68:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d6e:	add    ch,cl
  401d70:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d76:	add    ch,cl
  401d78:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d7e:	add    ch,cl
  401d80:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d86:	add    ch,cl
  401d88:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d8e:	add    ch,cl
  401d90:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d96:	add    ch,cl
  401d98:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d9e:	add    ch,cl
  401da0:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401da6:	add    ch,cl
  401da8:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401dae:	add    ch,cl
  401db0:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401db6:	add    ch,cl
  401db8:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401dbe:	add    ch,cl
  401dc0:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401dc6:	add    ch,cl
  401dc8:	add    eax,DWORD PTR [eax]
  401dca:	popf   
  401dcb:	add    ch,cl
  401dcd:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401dd3:	add    ch,cl
  401dd5:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  401ddb:	add    al,BYTE PTR [eax]
  401ddd:	jmp    0xb9402080
  401de2:	fld    QWORD PTR [edx]
  401de4:	add    BYTE PTR [ebp+0x80003a1],ch
  401dea:	pushf  
  401deb:	outs   dx,BYTE PTR ds:[esi]
  401dec:	dec    edi
  401ded:	jmp    0xe9402090
  401df2:	sahf   
  401df3:	add    al,BYTE PTR [eax]
  401df5:	or     DWORD PTR [esi-0x661dfefc],ebx
  401dfb:	or     al,0x0
  401dfd:	jmp    0xe94021cc
  401e02:	out    dx,al
  401e03:	add    al,BYTE PTR [eax]
  401e05:	jmp    0x904020a8
  401e0a:	out    dx,eax
  401e0b:	add    al,BYTE PTR [eax]
  401e0d:	jmp    0xe94020a0
  401e12:	inc    BYTE PTR [ebx]
  401e14:	add    cl,ch
  401e16:	sahf   
  401e17:	inc    edx
  401e18:	add    cl,ch
  401e1a:	scas   al,BYTE PTR es:[edi]
  401e1b:	add    al,BYTE PTR [eax]
  401e1d:	jmp    0xec4020c2
  401e22:	sahf   
  401e23:	add    DWORD PTR [eax],eax
  401e25:	call   0xec4020c8
  401e2a:	sahf   
  401e2b:	add    DWORD PTR [eax],eax
  401e2d:	jmp    0x42bc32
  401e32:	jmp    0xe9401cd5
  401e37:	(bad)  
  401e39:	(bad)  
  401e3a:	jmp    0xeb4020dd
  401e3f:	sahf   
  401e40:	add    al,BYTE PTR [ecx+0x129ee9]
  401e46:	jmp    0xe94020d9
  401e4b:	sahf   
  401e4c:	adc    al,BYTE PTR [eax]
  401e4e:	jmp    0x4020e1
  401e53:	mov    ah,0x3
  401e55:	add    BYTE PTR [eax],al
  401e57:	je     0x401e5c
  401e59:	add    BYTE PTR [eax],al
  401e5b:	test   BYTE PTR [ebx],al
  401e5d:	add    BYTE PTR [eax],al
  401e5f:	je     0x401e64
  401e61:	add    BYTE PTR [eax],al
  401e63:	mov    al,ds:0x4400036c
  401e68:	add    al,0x0
  401e6a:	add    BYTE PTR [ebx+eax*1+0x3740000],al
  401e71:	add    BYTE PTR [eax],al
  401e73:	je     0x401e78
  401e75:	add    BYTE PTR [eax],al
  401e77:	inc    esp
  401e78:	add    eax,DWORD PTR [eax]
  401e7a:	add    BYTE PTR [ebx+eax*1+0x0],al
  401e7e:	add    BYTE PTR [ebx+eax*1],dh
  401e81:	add    BYTE PTR [eax],al
  401e83:	xor    al,0xd3
  401e85:	add    eax,DWORD PTR [eax]
  401e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e88:	sbb    al,0x0
  401e8a:	add    BYTE PTR [ebx+eax*1+0x0],al
  401e8e:	add    BYTE PTR [ebx+eax*1],dh
  401e91:	add    BYTE PTR [eax],al
  401e93:	add    BYTE PTR [ebx+eax*1],dh
  401e96:	add    BYTE PTR [eax],al
  401e98:	add    al,0x3
  401e9a:	add    BYTE PTR [eax],al
  401e9c:	add    al,0x3
  401e9e:	add    BYTE PTR [eax],al
  401ea0:	hlt    
  401ea1:	add    al,BYTE PTR [eax]
  401ea3:	add    ah,dh
  401ea5:	add    al,BYTE PTR [eax]
  401ea7:	add    BYTE PTR [ebx+eax*1],al
  401eaa:	add    BYTE PTR [eax],al
  401eac:	add    al,0x3
  401eae:	add    BYTE PTR [eax],al
  401eb0:	hlt    
  401eb1:	add    al,BYTE PTR [eax]
  401eb3:	add    ah,dh
  401eb5:	add    al,BYTE PTR [eax]
  401eb7:	add    ah,al
  401eb9:	add    al,BYTE PTR [eax]
  401ebb:	add    ah,al
  401ebd:	adc    al,BYTE PTR [eax]
  401ebf:	add    BYTE PTR [eax+0x1],bl
  401ec2:	add    BYTE PTR [eax],al
  401ec4:	mov    ah,0x2
  401ec6:	add    BYTE PTR [eax],al
  401ec8:	les    eax,FWORD PTR [edx]
  401eca:	add    BYTE PTR [eax],al
  401ecc:	popf   
  401ecd:	jmp    0xe9dd1ed5
  401ed2:	add    eax,DWORD PTR [eax]
  401ed4:	popf   
  401ed5:	jmp    0xebdd1edd
  401eda:	add    eax,DWORD PTR [eax]
  401edc:	popf   
  401edd:	std    
  401ede:	outs   dx,DWORD PTR ds:[esi]
  401edf:	gs add eax,0x9d0003b0
  401ee5:	adc    eax,DWORD PTR [ebp+0x13eb9d03]
  401eeb:	add    BYTE PTR [ebp-0x62fc8015],bl
  401ef1:	jmp    0x401ef2
  401ef3:	jmp    DWORD PTR [edx-0x14]
  401ef6:	add    eax,DWORD PTR [eax]
  401ef8:	add    BYTE PTR [ebp-0x62fffc15],bl
  401efe:	jmp    0x401f03
  401f00:	add    BYTE PTR [ebp-0x42fffc35],bl
  401f06:	or     eax,0x4ab16160
  401f0b:	add    al,0x0
  401f0d:	popf   
  401f0e:	and    ebx,DWORD PTR [esi]
  401f10:	add    BYTE PTR [ebp-0x62fc5c15],bl
  401f16:	jmp    0x401f21
  401f18:	add    BYTE PTR [ebp-0x62fc7415],bl
  401f1e:	jmp    0x401f23
  401f20:	add    BYTE PTR [ebp-0x62fffc15],bl
  401f26:	jmp    0x401f2b
  401f28:	add    BYTE PTR [ebp-0x22fffbd5],bl
  401f2e:	mov    ebp,0xf4796571
  401f33:	bound  eax,QWORD PTR [eax]
  401f35:	popf   
  401f36:	lods   eax,DWORD PTR ds:[esi]
  401f37:	pop    ds
  401f38:	add    BYTE PTR [ebp-0x62fc2c15],bl
  401f3e:	jmp    0x401f6b
  401f40:	add    BYTE PTR [ebp-0x62fc6e15],bl
  401f46:	add    ch,cl
  401f48:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f4e:	add    ch,cl
  401f50:	add    ebx,DWORD PTR [ebp-0x62fc56fe]
  401f56:	inc    eax
  401f57:	jmp    0xe942bc5f
  401f5c:	add    eax,DWORD PTR [eax]
  401f5e:	popf   
  401f5f:	add    ch,cl
  401f61:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f67:	add    ch,cl
  401f69:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f6f:	add    ch,cl
  401f71:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f77:	add    ch,cl
  401f79:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f7f:	add    ch,cl
  401f81:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f87:	add    ch,cl
  401f89:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f8f:	add    ch,cl
  401f91:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f97:	add    ch,cl
  401f99:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f9f:	add    ch,cl
  401fa1:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fa7:	add    ch,cl
  401fa9:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401faf:	add    ch,cl
  401fb1:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fb7:	add    ch,cl
  401fb9:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fbf:	add    al,BYTE PTR [eax]
  401fc1:	jmp    0x42bdc6
  401fc6:	jmp    0xe9402269
  401fcb:	sahf   
  401fcc:	add    al,BYTE PTR [eax]
  401fce:	jmp    0xe9402271
  401fd3:	sahf   
  401fd4:	add    al,BYTE PTR [eax]
  401fd6:	jmp    0xe9402279
  401fdb:	sahf   
  401fdc:	add    al,BYTE PTR [eax]
  401fde:	jmp    0xe9402281
  401fe3:	sahf   
  401fe4:	add    al,BYTE PTR [eax]
  401fe6:	jmp    0xe9402289
  401feb:	sahf   
  401fec:	add    al,BYTE PTR [eax]
  401fee:	jmp    0xe9402291
  401ff3:	sahf   
  401ff4:	add    al,BYTE PTR [eax]
  401ff6:	jmp    0xe9402299
  401ffb:	sahf   
  401ffc:	add    al,BYTE PTR [eax]
  401ffe:	jmp    0xe94022a1
  402003:	sahf   
  402004:	add    al,BYTE PTR [eax]
  402006:	jmp    0xe94022a9
  40200b:	sahf   
  40200c:	add    al,BYTE PTR [eax]
  40200e:	jmp    0xe94022b1
  402013:	sahf   
  402014:	add    al,BYTE PTR [eax]
  402016:	jmp    0xe94022b9
  40201b:	sahf   
  40201c:	add    al,BYTE PTR [eax]
  40201e:	jmp    0xe94022c1
  402023:	sahf   
  402024:	add    al,BYTE PTR [eax]
  402026:	jmp    0x42be2b
  40202b:	jmp    0xe94022ce
  402030:	sahf   
  402031:	add    al,BYTE PTR [eax]
  402033:	jmp    0xe94022d6
  402038:	sahf   
  402039:	add    al,BYTE PTR [eax]
  40203b:	add    ah,al
  40203d:	(bad)  
  40203e:	(bad)  
  40203f:	inc    esp
  402041:	(bad)  
  402042:	(bad)  
  402043:	push   DWORD PTR [edi+edi*8-0x4b0001]
  40204a:	(bad)  
  40204b:	inc    esp
  40204d:	(bad)  
  40204e:	(bad)  
  40204f:	inc    esp
  402051:	(bad)  
  402052:	(bad)  
  402053:	push   DWORD PTR [edi+edi*8-0x4b0001]
  40205a:	(bad)  
  40205b:	inc    DWORD PTR [edi+edi*8-0x7b0001]
  402062:	(bad)  
  402063:	push   DWORD PTR [edi+edi*8-0x1]
  402067:	push   DWORD PTR [edi+edi*8-0x1]
  40206b:	inc    DWORD PTR [edi+edi*8-0x7b0001]
  402072:	(bad)  
  402073:	push   DWORD PTR [edi+edi*8-0x1]
  402077:	push   DWORD PTR [edi+edi*8-0x1]
  40207b:	inc    DWORD PTR [edi+edi*8-0x1]
  40207f:	inc    DWORD PTR [edi+edi*8-0x1]
  402083:	push   DWORD PTR [edi+edi*8]
  402086:	(bad)  
  402087:	push   DWORD PTR [edi+edi*8]
  40208a:	(bad)  
  40208b:	inc    DWORD PTR [eax]
  40208d:	inc    esp
  40208e:	(bad)  
  40208f:	(bad)  
  402090:	inc    DWORD PTR [edi+edi*8-0x1]
  402094:	push   DWORD PTR [edi+edi*8]
  402097:	(bad)  
  402098:	push   DWORD PTR [edi+edi*8]
  40209b:	(bad)  
  40209c:	inc    DWORD PTR [edi+edi*8]
  40209f:	(bad)  
  4020a0:	inc    DWORD PTR [edi+edi*8]
  4020a3:	(bad)  
  4020a4:	push   esp
  4020a6:	(bad)  
  4020a7:	(bad)  
  4020a8:	push   esp
  4020aa:	(bad)  
  4020ab:	(bad)  
  4020ac:	inc    DWORD PTR [edi+edi*8]
  4020af:	(bad)  
  4020b0:	inc    DWORD PTR [edi+edi*8]
  4020b3:	(bad)  
  4020b4:	call   FWORD PTR [ebp-0x62fffc17]
  4020ba:	jmp    0xe9dd20c2
  4020bf:	add    eax,DWORD PTR [eax]
  4020c1:	popf   
  4020c2:	jmp    0xe9dd20ca
  4020c7:	add    eax,DWORD PTR [eax]
  4020c9:	popf   
  4020ca:	jmp    0xe9dd20d2
  4020cf:	add    eax,DWORD PTR [eax]
  4020d1:	popf   
  4020d2:	jmp    0xe9dd20da
  4020d7:	add    eax,DWORD PTR [eax]
  4020d9:	popf   
  4020da:	jmp    0xdbdd20e2
  4020df:	add    eax,DWORD PTR [eax]
  4020e1:	popf   
  4020e2:	fild   DWORD PTR [ebx]
  4020e4:	add    BYTE PTR [ebp-0x62fffc25],bl
  4020ea:	fild   DWORD PTR [ebx]
  4020ec:	add    BYTE PTR [ebp+0x3db],bl
  4020f2:	popf   
  4020f3:	fild   DWORD PTR [ebx]
  4020f5:	add    BYTE PTR [ebp-0x62fc8363],bl
  4020fb:	xchg   DWORD PTR [ebx+eax*1-0x63],edi
  4020ff:	mov    DWORD PTR [ebx+eax*1-0x63],edi
  402103:	dec    ebp
  402104:	jl     0x402109
  402106:	popf   
  402107:	inc    ebp
  402108:	jl     0x40210d
  40210a:	popf   
  40210b:	sbb    edi,DWORD PTR [ebx+eax*1-0x63]
  40210f:	lods   eax,DWORD PTR ds:[esi]
  402110:	mov    eax,DWORD PTR [ebx]
  402112:	popf   
  402113:	leave  
  402114:	mov    eax,DWORD PTR [ebx]
  402116:	popf   
  402117:	ror    DWORD PTR [ebx+0x7be59d03],1
  40211d:	add    ebx,DWORD PTR [ebp-0x62fc8405]
  402123:	in     eax,dx
  402124:	jnp    0x402129
  402126:	popf   
  402127:	daa    
  402128:	jl     0x40212d
  40212a:	popf   
  40212b:	cmp    eax,0x29d037c
  402130:	and    edi,DWORD PTR [esi+ebx*4+0x2]
  402134:	jnp    0x4021b2
  402136:	sahf   
  402137:	add    al,BYTE PTR [ebx+0x7c]
  40213a:	sahf   
  40213b:	add    ch,BYTE PTR [ebx-0x60fd6184]
  402141:	jl     0x4020e1
  402143:	add    dl,BYTE PTR [ecx+0x73029e7c]
  402149:	jl     0x4020e9
  40214b:	add    dl,bh
  40214d:	jl     0x4020ed
  40214f:	add    bl,BYTE PTR [edi]
  402151:	jge    0x4020f1
  402153:	add    bh,BYTE PTR [ebx+0x29e007c]
  402159:	arpl   WORD PTR [ebp-0x62],di
  40215c:	add    al,BYTE PTR [edi+0x2b029e7d]
  402162:	jge    0x402102
  402164:	add    dl,BYTE PTR ds:0x41029e7d
  40216a:	jge    0x40210a
  40216c:	add    dh,BYTE PTR [ecx]
  40216e:	jge    0x40210e
  402170:	add    ch,bh
  402172:	jge    0x402112
  402174:	add    al,BYTE PTR [ecx]
  402176:	jle    0x402116
  402178:	add    bh,BYTE PTR [ebp-0x16fd6176]
  40217e:	add    ebx,DWORD PTR [ebp-0x617dfcfe]
  402184:	add    bl,BYTE PTR ds:0x23029e82
  40218a:	sbb    BYTE PTR [esi-0x617dc4fe],0x2
  402191:	jns    0x402114
  402193:	sahf   
  402194:	add    ah,BYTE PTR [ebx-0x7e]
  402197:	sahf   
  402198:	add    cl,BYTE PTR [ebp-0x7e]
  40219b:	sahf   
  40219c:	add    ch,ch
  40219e:	sbb    BYTE PTR [esi-0x62fc16fe],0x2
  4021a5:	outs   dx,DWORD PTR ds:[esi]
  4021a6:	sbb    BYTE PTR [esi+0x1ddb0002],0x5
  4021ad:	add    BYTE PTR [ecx+0x6d00057a],dh
  4021b3:	sbb    eax,0x1c210005
  4021b8:	add    eax,0x1c000d00
  4021bd:	add    eax,0x51c3100
  4021c2:	add    BYTE PTR [ebx],dh
  4021c4:	sbb    al,0x5
  4021c6:	add    BYTE PTR [ecx],ch
  4021c8:	sbb    al,0x5
  4021ca:	add    BYTE PTR [ebp-0x3efffae3],bh
  4021d0:	sbb    eax,0x32510005
  4021d5:	add    eax,0x51d8300
  4021da:	add    BYTE PTR [ecx],ah
  4021dc:	and    al,BYTE PTR ds:0x41a3100
  4021e2:	add    cl,ch
  4021e4:	sahf   
  4021e5:	add    al,BYTE PTR [eax]
  4021e7:	pop    ecx
  4021e8:	xor    DWORD PTR [eax+eax*1],eax
  4021eb:	jmp    0xaf40248e
  4021f0:	or     eax,DWORD PTR [eax+eax*1]
  4021f3:	jns    0x4021f8
  4021f5:	add    al,0x0
  4021f7:	inc    edi
  4021f8:	sti    
  4021f9:	add    eax,DWORD PTR [eax]
  4021fb:	push   ebx
  4021fc:	repz add eax,DWORD PTR [eax]
  4021ff:	pop    ds
  402200:	retf   
  402201:	add    eax,DWORD PTR [eax]
  402203:	movnti DWORD PTR [ebx],eax
  402206:	add    bl,bh
  402208:	mov    eax,0xb0f70003
  40220d:	add    eax,DWORD PTR [eax]
  40220f:	jecxz  0x4021db
  402211:	add    eax,DWORD PTR [eax]
  402213:	inc    edx
  402215:	add    eax,DWORD PTR [eax]
  402217:	pop    es
  402218:	lods   eax,DWORD PTR ds:[esi]
  402219:	add    eax,DWORD PTR [eax]
  40221b:	pop    ds
  40221c:	lods   eax,DWORD PTR ds:[esi]
  40221d:	add    eax,DWORD PTR [eax]
  40221f:	and    eax,DWORD PTR [eax]
  402221:	lea    eax,[ebx]
  402223:	add    BYTE PTR [eax],al
  402225:	pusha  
  402226:	jb     0x40222b
  402228:	add    dl,dl
  40222a:	jb     0x40222f
  40222c:	add    BYTE PTR [eax+0x72],dh
  40222f:	add    eax,DWORD PTR [eax]
  402231:	push   eax
  402232:	jb     0x402237
  402234:	add    BYTE PTR [eax+0x72],ah
  402237:	add    eax,DWORD PTR [eax]
  402239:	xor    al,0x73
  40223b:	add    eax,DWORD PTR [eax]
  40223d:	sub    BYTE PTR [ebx+0x3],dh
  402240:	add    BYTE PTR [eax],dh
  402242:	jae    0x402247
  402244:	add    ah,dh
  402246:	pusha  
  402247:	add    eax,DWORD PTR [eax]
  402249:	out    dx,al
  40224a:	pusha  
  40224b:	add    eax,DWORD PTR [eax]
  40224d:	or     ah,BYTE PTR [ecx+0x3]
  402250:	add    BYTE PTR [esi-0x19fffca1],dl
  402256:	pusha  
  402257:	add    eax,DWORD PTR [eax]
  402259:	(bad)  
  40225a:	pusha  
  40225b:	add    eax,DWORD PTR [eax]
  40225d:	cmp    al,0x5f
  40225f:	add    eax,DWORD PTR [eax]
  402261:	adc    BYTE PTR [eax+0x3],ah
  402264:	add    dl,bh
  402266:	pop    edi
  402267:	add    eax,DWORD PTR [eax]
  402269:	sbb    BYTE PTR [edi+0x3],bl
  40226c:	add    BYTE PTR [esi],cl
  40226e:	pusha  
  40226f:	add    eax,DWORD PTR [eax]
  402271:	call   0x35f:0xd800035f
  402278:	add    BYTE PTR [eax+0x1a00035f],dl
  40227e:	pop    esi
  40227f:	add    eax,DWORD PTR [eax]
  402281:	dec    esp
  402282:	jno    0x402287
  402284:	add    BYTE PTR [eax],al
  402286:	push   ss
  402287:	jno    0x40228c
  402289:	add    BYTE PTR [eax],al
  40228b:	jno    0x402290
  40228d:	add    BYTE PTR [ecx+esi*2],ah
  402290:	add    eax,DWORD PTR [eax]
  402292:	and    al,0x71
  402294:	add    eax,DWORD PTR [eax]
  402296:	mov    esi,0xac000374
  40229b:	jno    0x4022a0
  40229d:	add    BYTE PTR [ebp-0x62fc8e89],bl
  4022a3:	outs   dx,DWORD PTR ds:[esi]
  4022a4:	jno    0x4022a9
  4022a6:	popf   
  4022a7:	mov    ch,0x71
  4022a9:	add    ebx,DWORD PTR [ebp-0x62fc8e47]
  4022af:	stos   DWORD PTR es:[edi],eax
  4022b0:	jno    0x4022b5
  4022b2:	popf   
  4022b3:	lahf   
  4022b4:	jno    0x4022b9
  4022b6:	popf   
  4022b7:	out    dx,eax
  4022b8:	jo     0x4022bd
  4022ba:	popf   
  4022bb:	retf   
  4022bc:	jo     0x4022c1
  4022be:	popf   
  4022bf:	and    DWORD PTR [ecx+0x3],esi
  4022c2:	popf   
  4022c3:	stc    
  4022c4:	jo     0x4022c9
  4022c6:	popf   
  4022c7:	out    dx,eax
  4022c8:	jo     0x4022cd
  4022ca:	popf   
  4022cb:	jno    0x40233d
  4022cd:	add    ebx,DWORD PTR [ebp-0x62fc8fad]
  4022d3:	inc    ecx
  4022d4:	jo     0x4022d9
  4022d6:	popf   
  4022d7:	mov    eax,ds:0x319d0370
  4022dc:	jo     0x4022e1
  4022de:	popf   
  4022df:	xor    eax,0x419d0370
  4022e4:	jo     0x4022e9
  4022e6:	popf   
  4022e7:	inc    ecx
  4022e8:	jo     0x4022ed
  4022ea:	add    BYTE PTR [ebp-0x62fc7c23],bl
  4022f0:	xlat   BYTE PTR ds:[ebx]
  4022f1:	add    DWORD PTR [ebx],0xffffff9d
  4022f4:	fwait
  4022f5:	add    DWORD PTR [ebx],0xffffff9d
  4022f8:	stos   DWORD PTR es:[edi],eax
  4022f9:	add    DWORD PTR [ebx],0xffffff9d
  4022fc:	push   ebp
  4022fd:	xchg   ebp,eax
  4022fe:	add    ebx,DWORD PTR [ebp-0x62fc6a8f]
  402304:	gs xchg ebp,eax
  402306:	add    ebx,DWORD PTR [ebp-0x62fc6a7f]
  40230c:	xchg   DWORD PTR [ebp+0x6ca39d03],edx
  402312:	add    ebx,DWORD PTR [ebp-0x62fc9383]
  402318:	add    dl,BYTE PTR [ebx]
  40231a:	imul   ebx,DWORD PTR [esi-0x619502fe],0x2
  402321:	out    0x6a,eax
  402323:	sahf   
  402324:	add    cl,bh
  402326:	push   0xffffff9e
  402328:	add    dl,bh
  40232a:	push   0xffffff9e
  40232c:	add    ah,BYTE PTR [ebx-0x5afd6196]
  402332:	push   0xffffff9e
  402334:	add    ch,BYTE PTR [ecx+0x53029e6a]
  40233a:	push   0xffffff9e
  40233c:	add    bh,BYTE PTR [edi+0x6a]
  40233f:	sahf   
  402340:	add    bh,BYTE PTR [ecx+0x6a]
  402343:	sahf   
  402344:	add    cl,BYTE PTR ds:0x15029e6a
  40234a:	push   0xffffff9e
  40234c:	add    ah,BYTE PTR [ebx]
  40234e:	push   0x0
  402350:	sahf   
  402351:	add    ah,BYTE PTR [ebx]
  402353:	push   0xffffff9e
  402355:	add    dh,BYTE PTR [ecx+0x11029e69]
  40235b:	push   0xffffff9e
  40235d:	add    al,BYTE PTR [ebx]
  40235f:	push   0xffffff9e
  402361:	add    ah,cl
  402363:	imul   ebx,DWORD PTR [esi-0x6192aafe],0x9e6d4902
  40236d:	add    ch,BYTE PTR [edi]
  40236f:	ins    DWORD PTR es:[edi],dx
  402370:	sahf   
  402371:	add    dh,BYTE PTR [ecx+0x6d]
  402374:	sahf   
  402375:	add    cl,BYTE PTR [ebx+0x7f029e6d]
  40237b:	ins    DWORD PTR es:[edi],dx
  40237c:	sahf   
  40237d:	add    dh,BYTE PTR [ebx+0x6d]
  402380:	sahf   
  402381:	add    dl,BYTE PTR [edi+0x7f029e6c]
  402387:	ins    BYTE PTR es:[edi],dx
  402388:	sahf   
  402389:	add    ah,BYTE PTR [edi-0x32fd6194]
  40238f:	ins    BYTE PTR es:[edi],dx
  402390:	sahf   
  402391:	add    al,BYTE PTR [eax]
  402393:	lods   eax,DWORD PTR ds:[esi]
  402394:	leave  
  402395:	add    DWORD PTR [eax],eax
  402397:	xlat   BYTE PTR ds:[ebx]
  402398:	rol    DWORD PTR [ecx],0x0
  40239b:	repz mov ecx,0xb6d50001
  4023a1:	add    DWORD PTR [eax],eax
  4023a3:	iret   
  4023a4:	xchg   BYTE PTR [ecx],al
  4023a6:	add    BYTE PTR [ebp-0x50fffe7a],dh
  4023ac:	jbe    0x4023af
  4023ae:	add    BYTE PTR [ebx-0x78fffe8a],al
  4023b4:	add    BYTE PTR [esi-0x79aaffff],al
  4023ba:	add    DWORD PTR [eax],eax
  4023bc:	ins    DWORD PTR es:[edi],dx
  4023bd:	jbe    0x4023c0
  4023bf:	add    BYTE PTR [ebx],bl
  4023c1:	jno    0x4023c4
  4023c3:	add    BYTE PTR ds:0x1d000149,dh
  4023c9:	inc    ecx
  4023ca:	add    DWORD PTR [eax],eax
  4023cc:	sub    eax,0xb5000139
  4023d1:	add    DWORD PTR ss:[eax],eax
  4023d4:	leave  
  4023d5:	inc    esi
  4023d6:	add    DWORD PTR [eax],eax
  4023d8:	aad    0x46
  4023da:	add    DWORD PTR [eax],eax
  4023dc:	jmp    0x59402517
  4023e1:	sub    eax,DWORD PTR [ecx]
  4023e3:	add    BYTE PTR [edi],dh
  4023e5:	adc    eax,DWORD PTR [eax]
  4023e7:	add    BYTE PTR [ecx],bh
  4023e9:	or     eax,DWORD PTR [eax]
  4023eb:	add    BYTE PTR [ecx-0x76ffffed],al
  4023f1:	or     eax,DWORD PTR [eax]
  4023f3:	add    BYTE PTR [ecx-0xd],ah
  4023f6:	(bad)  
  4023f7:	(bad)  
  4023f8:	mov    esp,0xc6ffffeb
  4023fd:	repz (bad) 
  4023ff:	jmp    FWORD PTR [ebx+ebp*8-0x2c570001]
  402406:	(bad)  
  402407:	call   esp
  402409:	retf   
  40240a:	(bad)  
  40240b:	(bad)  
  40240c:	call   FWORD PTR [edx+0x75]
  40240f:	add    eax,DWORD PTR [eax]
  402411:	push   0x75
  402413:	add    eax,DWORD PTR [eax]
  402415:	inc    esp
  402416:	jne    0x40241b
  402418:	add    BYTE PTR [eax],al
  40241a:	pushf  
  40241b:	jne    0x402420
  40241d:	add    BYTE PTR [esi+ebx*2],ch
  402420:	add    eax,DWORD PTR [eax]
  402422:	in     al,0x74
  402424:	add    eax,DWORD PTR [eax]
  402426:	add    al,0x0
  402428:	add    BYTE PTR [eax],al
  40242a:	push   0x5400038f
  40242f:	pop    DWORD PTR [ebx]
  402431:	add    BYTE PTR [edx+0x400038f],dh
  402437:	add    BYTE PTR [eax],al
  402439:	add    ah,bh
  40243b:	(bad)  
  40243c:	(bad)  
  40243d:	jg     0x40242c
  40243f:	(bad)  
  402440:	(bad)  
  402441:	jg     0x402439
  402443:	(bad)  
  402444:	(bad)  
  402445:	jg     0x402411
  402447:	(bad)  
  402448:	(bad)  
  402449:	jg     0x40240f
  40244b:	(bad)  
  40244c:	(bad)  
  40244d:	jmp    FWORD PTR [eax]
  40244f:	push   0x3
  402451:	add    BYTE PTR [edx+0x5e000369],al
  402457:	imul   eax,DWORD PTR [ebx],0xffffc400
  40245d:	jmp    DWORD PTR [esi]
  40245f:	imul   eax,DWORD PTR [ebx],0x36ac200
  402465:	add    BYTE PTR [esi+0x6a],bl
  402468:	add    eax,DWORD PTR [eax]
  40246a:	dec    eax
  40246b:	push   0x3
  40246d:	add    BYTE PTR [eax],bh
  40246f:	push   0x3
  402471:	add    BYTE PTR [esi-0x55fffc96],al
  402477:	imul   eax,DWORD PTR [ebx],0x36a4a00
  40247d:	add    BYTE PTR [eax],al
  40247f:	js     0x4024eb
  402481:	add    eax,DWORD PTR [eax]
  402483:	nop
  402484:	push   0x2b9d0003
  402489:	jp     0x40248e
  40248b:	popf   
  40248c:	pop    ss
  40248d:	jp     0x402492
  40248f:	popf   
  402490:	push   ebx
  402491:	jp     0x402496
  402493:	popf   
  402494:	aaa    
  402495:	jp     0x40249a
  402497:	popf   
  402498:	gs jp  0x40249e
  40249b:	popf   
  40249c:	jno    0x402517
  40249e:	add    ebx,DWORD PTR [ebp-0x62fc85b1]
  4024a4:	sub    edi,DWORD PTR [edx+0x3]
  4024a7:	popf   
  4024a8:	and    edi,DWORD PTR [edx+0x3]
  4024ab:	popf   
  4024ac:	retf   
  4024ad:	add    eax,DWORD PTR [eax]
  4024af:	sbb    eax,0x9d037a19
  4024b4:	out    0x79,eax
  4024b6:	add    ebx,DWORD PTR [ebp-0x62fffc27]
  4024bc:	test   eax,0xd99d0378
  4024c1:	add    eax,DWORD PTR [eax]
  4024c3:	popf   
  4024c4:	sub    DWORD PTR [eax-0x782e62fd],ecx
  4024ca:	add    ebx,DWORD PTR [ebp-0x62fc783f]
  4024d0:	loope  0x402459
  4024d2:	add    ebx,DWORD PTR [ebp-0x62fc781b]
  4024d8:	add    DWORD PTR [eax-0x7f8262fd],0x3
  4024df:	popf   
  4024e0:	sbb    DWORD PTR [eax-0x7662fffd],eax
  4024e6:	add    BYTE PTR [ebx],0x9d
  4024e9:	jns    0x40246b
  4024eb:	add    ebx,DWORD PTR [ebp-0x62fc7f9b]
  4024f1:	ret    
  4024f2:	add    BYTE PTR [ebx],0x9d
  4024f5:	aad    0x80
  4024f7:	add    ebx,DWORD PTR [ebp-0x62fc7f6b]
  4024fd:	xchg   DWORD PTR [eax-0x1cfd62fd],eax
  402503:	sbb    BYTE PTR [esi-0x617f2efe],0x2
  40250a:	inc    DWORD PTR [eax-0x7f16fd62]
  402510:	sahf   
  402511:	add    ch,BYTE PTR [ecx-0x79]
  402514:	sahf   
  402515:	add    dl,BYTE PTR [ebp-0x79]
  402518:	sahf   
  402519:	add    cl,BYTE PTR [ebp-0x79]
  40251c:	sahf   
  40251d:	add    al,BYTE PTR [ebp-0x50fd6179]
  402523:	sbb    BYTE PTR [esi-0x617f48fe],0x2
  40252a:	ret    
  40252b:	sbb    BYTE PTR [esi-0x617f1afe],0x2
  402532:	fild   DWORD PTR [eax-0x7ef6fd62]
  402538:	sahf   
  402539:	add    al,BYTE PTR ds:0xed029e81
  40253f:	sbb    BYTE PTR [esi-0x617ecefe],0x2
  402546:	inc    ecx
  402547:	add    DWORD PTR [eax],0x8101029e
  40254d:	sahf   
  40254e:	add    dl,BYTE PTR ds:0xcd029e81
  402554:	sbb    BYTE PTR [esi-0x617d0efe],0x2
  40255b:	jge    0x4024df
  40255d:	sahf   
  40255e:	add    al,BYTE PTR [ebp+0x41029e82]
  402564:	sbb    BYTE PTR [esi-0x617dcefe],0x2
  40256b:	xchg   ebx,eax
  40256c:	sbb    BYTE PTR [esi-0x617d7cfe],0x2
  402573:	sbb    BYTE PTR [bp+0x6d02],0x82
  402579:	sahf   
  40257a:	add    al,BYTE PTR [eax]
  40257c:	mov    cl,0x1c
  40257e:	add    eax,0x51d7b00
  402583:	add    BYTE PTR [edi-0x72fffa1e],bl
  402589:	sbb    al,0x5
  40258b:	add    BYTE PTR [ecx-0x44fffae4],cl
  402591:	sbb    al,0x5
  402593:	add    BYTE PTR [ebp+0x7f00051c],ch
  402599:	push   ds
  40259a:	add    eax,0x5196700
  40259f:	add    BYTE PTR [ebp+0x21],cl
  4025a2:	add    eax,0x51e9900
  4025a7:	add    BYTE PTR [ebx-0x44fffae2],ch
  4025ad:	add    BYTE PTR [esi],bl
  4025af:	add    eax,0x51ecb00
  4025b4:	add    BYTE PTR [ebp-0x18fffae2],bh
  4025ba:	and    DWORD PTR ds:0x519d100,eax
  4025c0:	add    BYTE PTR [ebp-0x6efffae0],dh
  4025c6:	sbb    BYTE PTR ds:0x520c300,al
  4025cc:	add    BYTE PTR [ebx+0x4d000518],ah
  4025d2:	and    BYTE PTR ds:0x5185100,al
  4025d8:	add    BYTE PTR [ebx+0x20],ah
  4025db:	add    eax,0x5186500
  4025e0:	add    bh,ch
  4025e2:	and    BYTE PTR ds:0x518d700,al
  4025e8:	add    bl,al
  4025ea:	and    BYTE PTR [eax+eax*1],al
  4025ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025ee:	sbb    BYTE PTR [eax+eax*1],al
  4025f1:	or     eax,0x423
  4025f6:	cmp    BYTE PTR [esi+0x3],0x0
  4025fa:	mov    ds:0x56000380,al
  4025ff:	jle    0x402604
  402601:	add    BYTE PTR [edx-0x75fffc82],bh
  402607:	jle    0x40260c
  402609:	add    dh,bl
  40260b:	jle    0x402610
  40260d:	add    BYTE PTR [esi+0x7e],bh
  402610:	add    eax,DWORD PTR [eax]
  402612:	add    BYTE PTR [edx+eax*4+0x3],ah
  402616:	add    BYTE PTR [esi-0x7e],dl
  402619:	add    eax,DWORD PTR [eax]
  40261b:	push   esp
  40261c:	add    BYTE PTR [ebx],0x0
  40261f:	xor    ch,BYTE PTR [eax+0x3]
  402622:	add    BYTE PTR [edx+eax*4+0x67ec0003],dl
  402629:	add    eax,DWORD PTR [eax]
  40262b:	sub    ch,BYTE PTR [eax+0x3]
  40262e:	add    BYTE PTR [edx+0x7e000367],cl
  402634:	add    eax,DWORD PTR [bx+si]
  402637:	cwde   
  402638:	add    DWORD PTR [ebx],0x0
  40263b:	xchg   esp,eax
  40263c:	add    DWORD PTR [ebx],0x0
  40263f:	mov    al,BYTE PTR [ebx-0x7c55fffd]
  402645:	add    eax,DWORD PTR [eax]
  402647:	jbe    0x4025cc
  402649:	add    eax,DWORD PTR [eax]
  40264b:	push   esi
  40264c:	add    DWORD PTR [ebx],0x0
  40264f:	pusha  
  402650:	add    DWORD PTR [ebx],0x0
  402653:	add    DWORD PTR fs:[ebx],0x0
  402657:	hlt    
  402658:	add    DWORD PTR [ebx],0x0
  40265b:	into   
  40265c:	test   BYTE PTR [ebx],al
  40265e:	add    ah,al
  402660:	add    eax,DWORD PTR [eax]
  402662:	add    dh,cl
  402664:	xchg   esp,eax
  402665:	add    eax,DWORD PTR [eax]
  402667:	mov    dh,0x94
  402669:	add    eax,DWORD PTR [eax]
  40266b:	call   0x9d4029fe
  402670:	xor    DWORD PTR [ebx+eax*1+0x394199d],edx
  402677:	add    BYTE PTR [ebp-0x62fc6b97],bl
  40267d:	dec    edi
  40267e:	xchg   esp,eax
  40267f:	add    ebx,DWORD PTR [ebp-0x62fc6ba5]
  402685:	ret    
  402686:	xchg   ebx,eax
  402687:	add    ebx,DWORD PTR [ebp-0x62fc6c59]
  40268d:	cdq    
  40268e:	xchg   ebx,eax
  40268f:	add    ebx,DWORD PTR [ebp-0x62fc6c43]
  402695:	(bad)  
  402696:	xchg   ebx,eax
  402697:	add    ebx,DWORD PTR [ebp-0x62fc86fd]
  40269d:	std    
  40269e:	js     0x4026a3
  4026a0:	popf   
  4026a1:	or     DWORD PTR [ecx+0x3],edi
  4026a4:	popf   
  4026a5:	xor    edi,DWORD PTR [ecx+0x3]
  4026a8:	popf   
  4026a9:	jge    0x402723
  4026ab:	add    ebx,DWORD PTR [ebp-0x62fc86b9]
  4026b1:	inc    ecx
  4026b2:	jns    0x4026b7
  4026b4:	popf   
  4026b5:	das    
  4026b6:	jns    0x4026bb
  4026b8:	popf   
  4026b9:	sbb    DWORD PTR [ecx+0x3],edi
  4026bc:	popf   
  4026bd:	fld    DWORD PTR [ebx]
  4026bf:	add    BYTE PTR [ebp+0x1d0003cb],bl
  4026c5:	jne    0x40273d
  4026c7:	add    ebx,DWORD PTR [ebp+0x1d0003ea]
  4026cd:	fiadd  WORD PTR [ebx]
  4026cf:	add    BYTE PTR ds:0x1d0003da,bl
  4026d5:	xor    DWORD PTR [esi+0x3],0xffffff9d
  4026d9:	out    dx,al
  4026da:	add    eax,DWORD PTR [eax]
  4026dc:	add    BYTE PTR ds:0x1d0003e0,bl
  4026e2:	and    DWORD PTR [edx+0x3],edi
  4026e5:	popf   
  4026e6:	xchg   ebp,eax
  4026e7:	jns    0x4026ec
  4026e9:	popf   
  4026ea:	add    ch,ch
  4026ec:	add    ebx,DWORD PTR [ebp-0x62fc257e]
  4026f2:	or     BYTE PTR ds:0xfb029e7a,0x79
  4026f9:	sahf   
  4026fa:	add    bl,bh
  4026fc:	add    ebx,DWORD PTR [ebp-0x62fc2b7e]
  402702:	cmp    BYTE PTR [ebp-0x147d62fd],0x3
  402709:	popf   
  40270a:	cmp    dh,0x3
  40270d:	popf   
  40270e:	sub    cl,0x79
  402711:	sahf   
  402712:	add    ch,bh
  402714:	add    ebx,DWORD PTR [ebp-0x62fc0a7e]
  40271a:	xor    BYTE PTR ds:0x2b029e76,0x76
  402721:	sahf   
  402722:	add    dh,BYTE PTR [ecx]
  402724:	jbe    0x4026c4
  402726:	add    bh,BYTE PTR [esi+0x3]
  402729:	popf   
  40272a:	cmp    cl,0x3
  40272d:	popf   
  40272e:	sub    dl,0x3
  402731:	popf   
  402732:	cmp    dl,0x3
  402735:	popf   
  402736:	sbb    BYTE PTR [ecx+0x4],0x9d
  40273a:	sub    cl,0x3
  40273d:	popf   
  40273e:	add    dh,BYTE PTR [edi-0x6b]
  402741:	add    BYTE PTR [esi-0x616a56fe],bl
  402747:	add    ah,BYTE PTR [ebx-0x42fd616b]
  40274d:	xchg   ebp,eax
  40274e:	sahf   
  40274f:	add    bh,BYTE PTR [edi-0x7efd616b]
  402755:	xchg   ebp,eax
  402756:	sahf   
  402757:	add    bl,BYTE PTR [ecx-0x78fd616b]
  40275d:	xchg   ebp,eax
  40275e:	sahf   
  40275f:	add    ch,ch
  402761:	xchg   ecx,eax
  402762:	sahf   
  402763:	add    al,BYTE PTR [eax]
  402765:	fisttp WORD PTR [edx+eax*1]
  402768:	add    cl,cl
  40276a:	or     al,0x2
  40276c:	add    BYTE PTR [ebx],dl
  40276e:	das    
  40276f:	add    DWORD PTR [eax],eax
  402771:	adc    eax,0xa900012f
  402776:	sub    al,0x1
  402778:	add    BYTE PTR [ebx+0x1d00012c],bh
  40277e:	sgdtd  [eax]
  402781:	mov    ds:0xe900010c,eax
  402786:	sahf   
  402787:	add    al,BYTE PTR [eax]
  402789:	arpl   bp,sp
  40278b:	add    DWORD PTR [eax],eax
  40278d:	adc    ebp,0x1
  402790:	add    BYTE PTR [ebp-0x2b],cl
  402793:	add    DWORD PTR [eax],eax
  402795:	fwait
  402796:	rol    BYTE PTR [ecx],cl
  402798:	add    BYTE PTR [edi-0x4afffe36],ch
  40279e:	mov    dl,0x1
  4027a0:	add    BYTE PTR [ebp-0x34fffe56],dh
  4027a6:	add    BYTE PTR [edx-0x5520ffff],dh
  4027ac:	add    DWORD PTR [eax],eax
  4027ae:	jmp    0xe9402a51
  4027b3:	sahf   
  4027b4:	add    al,BYTE PTR [eax]
  4027b6:	mov    dl,0x1d
  4027b8:	lods   al,BYTE PTR ds:[esi]
  4027b9:	sar    BYTE PTR ds:[ebp-0x14],1
  4027bd:	dec    esp
  4027be:	mov    esp,eax
  4027c0:	loope  0x4027b1
  4027c2:	inc    esp
  4027c3:	outs   dx,DWORD PTR ds:[esi]
  4027c4:	test   DWORD PTR ds:0xa522418d,edi
  4027ca:	imul   edx,DWORD PTR [ebx-0x599bb014],0xdc2a730c
  4027d4:	xchg   esp,eax
  4027d5:	push   ss
  4027d6:	push   ds
  4027d7:	xchg   ebx,eax
  4027d8:	ret    
  4027d9:	sbb    al,BYTE PTR [esi+0x4e479c]
  4027df:	jnp    0x402806
  4027e1:	cs mov cl,0x62
  4027e4:	dec    esi
  4027e5:	cwde   
  4027e6:	mov    bh,0xb8
  4027e8:	aam    0x8b
  4027ea:	repz ja 0x4027e8
  4027ed:	icebp  
  4027ee:	inc    edx
  4027ef:	pop    ss
  4027f0:	add    esp,DWORD PTR [edi-0x22]
  4027f3:	(bad)  
  4027f7:	add    eax,DWORD PTR [ebx-0x1369a194]
  4027fd:	pop    edi
  4027fe:	inc    edi
  4027ff:	(bad)  
  402800:	fucomp st(2)
  402802:	xor    ecx,DWORD PTR [ebx-0x6a]
  402805:	jno    0x40287a
  402807:	cmc    
  402808:	pushf  
  402809:	xor    ebp,DWORD PTR [ecx]
  40280b:	add    BYTE PTR [edx+0x59],ch
  40280e:	rcl    BYTE PTR [ecx],cl
  402810:	imul   ch
  402812:	(bad)  
  402813:	mov    edi,0x603e7803
  402818:	leave  
  402819:	pushf  
  40281a:	xor    ebp,DWORD PTR [ecx]
  40281c:	push   0x59
  40281e:	rcl    BYTE PTR [ecx],cl
  402820:	jbe    0x40280f
  402822:	(bad)  
  402823:	mov    edi,0x603e7803
  402828:	out    0x6c,al
  40282a:	pop    es
  40282b:	cmc    
  40282c:	add    eax,0x8d11d3c3
  402831:	xchg   edi,eax
  402832:	add    BYTE PTR [eax],al
  402834:	cld    
  402835:	std    
  402836:	loope  0x402859
  402838:	mov    WORD PTR [ebx],ds
  40283a:	push   ebp
  40283b:	lods   eax,DWORD PTR ds:[esi]
  40283c:	and    eax,0x72474abd
  402841:	cmc    
  402842:	sti    
  402843:	or     al,0xa4
  402845:	push   ebx
  402846:	mov    bh,0x38
  402848:	adc    DWORD PTR [esi],eax
  40284a:	fnsave [eax+0x71]
  40284d:	cmp    ch,al
  40284f:	inc    esi
  402850:	inc    edx
  402851:	out    dx,al
  402852:	and    esi,DWORD PTR [esi-0x70d7db89]
  402858:	popf   
  402859:	inc    eax
  40285a:	mov    esp,0x95614c65
  40285f:	mov    ebp,0x53e7535f
  402864:	lea    ebp,ds:0x399f5a1c
  40286a:	sub    DWORD PTR [eax-0x43],ecx
  40286d:	push   esp
  40286e:	cmp    eax,0x73e8009c
  402873:	into   
  402874:	ja     0x402852
  402876:	sub    DWORD PTR [ebx+0x7a469295],esi
  40287c:	mov    DWORD PTR [edx-0x1ccd45e3],ecx
  402882:	ja     0x40285c
  402884:	ficomp DWORD PTR [ebx+0x6f1a133e]
  40288a:	adc    edi,DWORD PTR [edi]
  40288c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288d:	xchg   ecx,eax
  40288e:	sub    ax,0xe76c
  402892:	pop    esp
  402893:	xchg   edx,eax
  402894:	lahf   
  402895:	retf   
  402896:	jmp    0x9790a698
  40289b:	fimul  DWORD PTR [ebp+ecx*4-0x2e]
  40289f:	push   ebp
  4028a0:	fcomp  st(5)
  4028a2:	inc    ebp
  4028a3:	sub    bh,BYTE PTR [ecx-0x6407e272]
  4028a9:	push   ecx
  4028aa:	jmp    0x402839
  4028ac:	shl    DWORD PTR [ebx-0x532e8c22],0x8e
  4028b3:	xchg   ebx,eax
  4028b4:	add    ch,bl
  4028b6:	adc    ecx,esp
  4028b8:	std    
  4028b9:	or     bl,BYTE PTR [edx-0x63]
  4028bc:	adc    ah,cl
  4028be:	xor    esi,DWORD PTR [ecx-0x31]
  4028c1:	mov    WORD PTR [ecx+0x36],?
  4028c4:	add    BYTE PTR [edi-0x27],al
  4028c7:	cmp    BYTE PTR [esi],ch
  4028c9:	ror    DWORD PTR [edi+0x27],0x35
  4028cd:	push   esp
  4028ce:	inc    eax
  4028cf:	push   ebx
  4028d0:	shr    DWORD PTR [edx+eax*1-0x62ff62a9],1
  4028d7:	ret    0xae2e
  4028da:	adc    eax,0xaf9d6922
  4028df:	(bad)  
  4028e0:	push   cs
  4028e1:	jno    0x4028cd
  4028e3:	adc    BYTE PTR [ecx+0x36],dh
  4028e6:	popf   
  4028e7:	cwde   
  4028e8:	jmp    0x505ea425
  4028ed:	(bad)  
  4028ee:	dec    ebx
  4028ef:	lea    ebx,[ebp-0x7f]
  4028f2:	push   0xfffffff4
  4028f4:	mov    DWORD PTR [ebp-0x63],esp
  4028f7:	lods   al,BYTE PTR ds:[esi]
  4028f8:	jmp    0x6f0a062e
  4028fd:	popf   
  4028fe:	scas   eax,DWORD PTR es:[edi]
  4028ff:	mov    esi,0xf46a70ce
  402904:	jo     0x40293c
  402906:	popf   
  402907:	lods   al,BYTE PTR ds:[esi]
  402908:	jmp    0xe866e445
  40290d:	imul   ebx,DWORD PTR [eax],0x5f
  402910:	push   0x70f46a70
  402915:	ss popf 
  402917:	lods   al,BYTE PTR ds:[esi]
  402918:	jmp    0x866a455
  40291d:	cmp    al,0xc4
  40291f:	add    al,0xd8
  402921:	int3   
  402922:	imul   esi,esp,0x49
  402925:	dec    esp
  402926:	popf   
  402927:	add    ch,cl
  402929:	add    ebx,DWORD PTR [ebp-0xe6283fd]
  40292f:	inc    esi
  402930:	in     eax,dx
  402931:	(bad)  
  402933:	xrelease mov BYTE PTR [eax-0x63],ah
  402937:	ret    0x9a2e
  40293a:	add    BYTE PTR ds:0x31aa5d23,dl
  402940:	inc    edi
  402941:	int    0xec
  402943:	int    0xf3
  402945:	mov    BYTE PTR [eax-0x63],ah
  402948:	ret    0x9a2e
  40294b:	adc    eax,0x3650023
  402950:	fstp   QWORD PTR [edx+ecx*1]
  402953:	aam    0xb2
  402955:	adc    DWORD PTR [eax+esi*2+0x2],edx
  402959:	shr    BYTE PTR [esi],0x9
  40295c:	loopne 0x40295d
  40295e:	in     eax,dx
  40295f:	sbb    eax,0x95183156
  402964:	(bad)  
  402965:	dec    esp
  402966:	arpl   WORD PTR ds:0xb633a439,di
  40296c:	sti    
  40296d:	push   ebp
  40296e:	xor    eax,0xbaeb89b8
  402973:	mov    al,0xb4
  402975:	adc    DWORD PTR [edi-0x513ffda0],edx
  40297b:	and    al,0x8a
  40297d:	and    BYTE PTR [esi],ch
  40297f:	stos   DWORD PTR es:[edi],eax
  402980:	add    ah,0x62
  402983:	cmp    eax,0x356c11b4
  402988:	add    dl,BYTE PTR [eax]
  40298a:	mov    ds:0x2c04859f,eax
  40298f:	pop    edi
  402990:	cmp    esp,DWORD PTR [ebx+0x481646da]
  402996:	jae    0x40291b
  402998:	pushf  
  402999:	jg     0x402997
  40299b:	out    0x5f,eax
  40299d:	jbe    0x402a0f
  40299f:	add    BYTE PTR [ebp+0x17],bh
  4029a2:	dec    ecx
  4029a3:	xor    BYTE PTR [ecx-0x4d],0x11
  4029a7:	push   edi
  4029a8:	pop    es
  4029a9:	add    al,al
  4029ab:	scas   al,BYTE PTR es:[edi]
  4029ac:	add    al,0x8a
  4029ae:	and    BYTE PTR [ecx+0x5b],ah
  4029b1:	pop    es
  4029b2:	daa    
  4029b3:	aas    
  4029b4:	js     0x40296a
  4029b6:	adc    DWORD PTR [edx+0x43100266],ebx
  4029bc:	sahf   
  4029bd:	xor    DWORD PTR [edi+0x7b],0xffffffa2
  4029c1:	pop    ss
  4029c2:	dec    ecx
  4029c3:	inc    edx
  4029c4:	mov    al,0xb3
  4029c6:	adc    DWORD PTR [eax],eax
  4029c8:	or     ch,BYTE PTR [ebx+0x7cbbc000]
  4029ce:	mov    BYTE PTR [eax],ah
  4029d0:	lds    edi,FWORD PTR [eax+edx*4-0x2ffe31bb]
  4029d7:	adc    DWORD PTR [ebp+0x4],ecx
  4029da:	add    BYTE PTR [edx+0x242e4fb4],ch
  4029e0:	dec    esp
  4029e1:	imul   ecx,DWORD PTR [ebx+0x67],0x36
  4029e5:	rcl    eax,cl
  4029e7:	adc    DWORD PTR [ecx+0x36],ecx
  4029ea:	add    al,al
  4029ec:	jnp    0x40298c
  4029ee:	std    
  4029ef:	(bad)  
  4029f0:	fsub   QWORD PTR [edi*4-0x2f2498b7]
  4029f7:	adc    DWORD PTR [ecx],ebp
  4029f9:	aas    
  4029fa:	add    al,al
  4029fc:	cmp    ebx,DWORD PTR [ebp+edi*8+0x64f3f2ff]
  402a03:	call   0xf111:0xd1dd1b00
  402a0a:	mov    esi,0x342f1000
  402a0f:	ds std 
  402a11:	add    ebx,DWORD PTR [ebp-0x51]
  402a14:	ins    DWORD PTR es:[edi],dx
  402a15:	push   ebx
  402a16:	adc    dl,dl
  402a18:	adc    edx,ebp
  402a1a:	into   
  402a1b:	add    al,al
  402a1d:	sti    
  402a1e:	jns    0x4029a8
  402a20:	and    cl,ch
  402a22:	out    0x87,al
  402a24:	jmp    0x402a7d
  402a26:	not    cl
  402a28:	adc    edx,ecx
  402a2a:	into   
  402a2b:	add    al,al
  402a2d:	sti    
  402a2e:	jns    0x4029b8
  402a30:	and    BYTE PTR [edx-0xb],dh
  402a33:	popf   
  402a34:	les    edi,FWORD PTR [edi+0x7f]
  402a37:	rcl    BYTE PTR [ecx],cl
  402a39:	sbb    DWORD PTR [edx+0x15e1000],0xbb9d0483
  402a43:	push   0x15
  402a45:	loop   0x402a36
  402a47:	cmp    ecx,edx
  402a49:	mov    WORD PTR [esi-0x77],?
  402a4c:	add    ch,bl
  402a4e:	xor    BYTE PTR [ebp+edi*8+0x1c3736e2],bh
  402a55:	sub    BYTE PTR [edx+0x5066b388],bl
  402a5b:	mov    bh,0x56
  402a5d:	add    ch,BYTE PTR ds:0x72fb9b3e
  402a63:	push   DWORD PTR [edx-0x2c49290e]
  402a69:	add    BYTE PTR [edx+ecx*2+0x238d0000],cl
  402a70:	add    DWORD PTR [ecx+0x47],edx
  402a73:	xchg   ebx,eax
  402a74:	mov    edi,DWORD PTR [edi-0x2c3187a6]
  402a7a:	lods   al,BYTE PTR ds:[esi]
  402a7b:	mov    bh,ch
  402a7d:	call   FWORD PTR [edx-0x18aeff3d]
  402a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a84:	js     0x402a35
  402a86:	or     cl,bh
  402a88:	xor    edx,edx
  402a8a:	mov    WORD PTR [edi-0x35],?
  402a8d:	add    BYTE PTR [ebp-0x50],bl
  402a90:	cdq    
  402a91:	mov    BYTE PTR [ebp-0x43898e5e],bh
  402a97:	popf   
  402a98:	push   0x64
  402a9a:	jge    0x402b15
  402a9c:	bound  esi,QWORD PTR [edx-0x44]
  402a9f:	mov    fs,WORD PTR [esi+0x74]
  402aa2:	mov    eax,0xbc70237b
  402aa7:	jl     0x402afd
  402aa9:	gs mov ecx,0x7d6f57c9
  402aaf:	lods   al,BYTE PTR ds:[esi]
  402ab0:	and    esi,DWORD PTR [edx-0x58]
  402ab3:	xchg   DWORD PTR [edi+0x69],edx
  402ab6:	mov    BYTE PTR [esi+0x2886623],al
  402abc:	push   edi
  402abd:	gs xchg ecx,eax
  402abf:	imul   ecx,DWORD PTR [esi+0x72],0x3e90cb3
  402ac6:	popf   
  402ac7:	add    ch,BYTE PTR [ecx-0x26fda155]
  402acd:	stos   BYTE PTR es:[edi],al
  402ace:	add    BYTE PTR [esi+0x2],bl
  402ad1:	jmp    0xef42c7d9
  402ad6:	sbb    DWORD PTR ds:0x1d826988,0x2
  402add:	jmp    0x69c8cad5
  402ae2:	mov    DWORD PTR [edi],ebx
  402ae4:	cmp    ch,0x6
  402ae7:	mov    al,ds:0x18472445
  402aec:	test   DWORD PTR [esi+eax*1-0x63],ebp
  402af0:	add    bh,BYTE PTR [ecx+0x69321d13]
  402af6:	sbb    DWORD PTR [ebp-0x45d416f6],0x1a
  402afd:	mov    ecx,0xe6031d38
  402b02:	add    ecx,edx
  402b04:	adc    bl,BYTE PTR [ecx]
  402b06:	xor    al,0xcd
  402b08:	mov    ch,cl
  402b0a:	add    ebx,DWORD PTR [ebp+0x15841122]
  402b10:	sub    DWORD PTR [ecx+0x3],0xffffff9d
  402b14:	add    cl,cl
  402b16:	arpl   WORD PTR [ebp-0x5a943e96],di
  402b1c:	or     ch,dh
  402b1e:	pop    ebx
  402b1f:	int    0x52
  402b21:	xchg   esi,eax
  402b22:	push   ebx
  402b23:	int    0xa
  402b25:	loope  0x402b2a
  402b27:	popf   
  402b28:	or     ch,cl
  402b2a:	or     ebx,DWORD PTR [ebp-0x62fc0efb]
  402b30:	add    ch,cl
  402b32:	add    eax,DWORD PTR [eax]
  402b34:	popf   
  402b35:	add    al,BYTE PTR [eax]
  402b37:	jmp    0xe9402dda
  402b3c:	sahf   
  402b3d:	add    al,BYTE PTR [eax]
  402b3f:	fst    DWORD PTR [ebp-0x611affbf]
  402b45:	push   es
  402b46:	add    cl,ah
  402b48:	sahf   
  402b49:	push   es
  402b4a:	add    BYTE PTR [ecx],bl
  402b4c:	fwait
  402b4d:	inc    ecx
  402b4e:	add    ch,ch
  402b50:	sahf   
  402b51:	pop    es
  402b52:	add    cl,bl
  402b54:	sahf   
  402b55:	or     al,BYTE PTR [eax]
  402b57:	stc    
  402b58:	mov    al,ds:0x9ee50041
  402b5d:	add    al,0x0
  402b5f:	leave  
  402b60:	sahf   
  402b61:	and    al,BYTE PTR [eax]
  402b63:	fstp   DWORD PTR [eax-0x6112ffbf]
  402b69:	push   es
  402b6a:	add    cl,bh
  402b6c:	sahf   
  402b6d:	repnz (bad) 
  402b6f:	fcomp  DWORD PTR [ecx-0x610effbf]
  402b75:	repnz dec eax
  402b78:	sahf   
  402b79:	and    al,BYTE PTR [eax]
  402b7b:	fldenv [ecx-0x610effbf]
  402b81:	repnz jmp FWORD PTR [eax-0x67]
  402b85:	add    BYTE PTR [eax],0xf9
  402b88:	test   eax,0x9ee10041
  402b8d:	and    al,BYTE PTR [eax]
  402b8f:	imul   esp,DWORD PTR [ecx-0x6e26fefe],0x90041
  402b99:	mov    eax,ds:0x99eb0082
  402b9e:	add    al,BYTE PTR [ecx+edi*8]
  402ba1:	cdq    
  402ba2:	inc    ecx
  402ba3:	add    cl,cl
  402ba5:	sahf   
  402ba6:	add    BYTE PTR [ecx],al
  402ba8:	jmp    0x402b4b
  402baa:	add    dl,BYTE PTR [eax]
  402bac:	stc    
  402bad:	mov    eax,ds:0xe5000041
  402bb2:	xor    ch,BYTE PTR cs:[esi]
  402bb5:	jmp    0x24402bba
  402bba:	add    al,0x0
  402bbc:	add    BYTE PTR [ecx+ecx*1],al
  402bbf:	push   eax
  402bc0:	add    ah,dh
  402bc2:	or     BYTE PTR [eax],dl
  402bc4:	add    BYTE PTR [eax],cl
  402bc6:	or     DWORD PTR [ebx+0x0],esi
  402bc9:	test   BYTE PTR [ebx],0x1f
  402bcc:	add    BYTE PTR [ecx+ecx*1],al
  402bcf:	jo     0x402bd1
  402bd1:	hlt    
  402bd2:	or     BYTE PTR [eax],dh
  402bd4:	add    ah,dh
  402bd6:	or     eax,0x3f400c0
  402bdb:	or     al,BYTE PTR [eax]
  402bdd:	les    ecx,FWORD PTR [eax]
  402bdf:	pusha  
  402be0:	add    BYTE PTR [eax+ecx*1+0xdb40020],dh
  402be7:	mov    al,ds:0x8c400
  402bec:	add    ah,al
  402bee:	or     BYTE PTR [eax+0x4008b400],al
  402bf4:	add    BYTE PTR [ebp+ecx*1+0x57400e0],dh
  402bfb:	push   es
  402bfc:	add    BYTE PTR [eax],al
  402bfe:	test   BYTE PTR [eax],cl
  402c00:	pop    eax
  402c01:	add    BYTE PTR [eax+ecx*1+0x18],dh
  402c05:	add    BYTE PTR [edi+ecx*1-0x70],dh
  402c09:	add    BYTE PTR [edi+0x5],dh
  402c0c:	cmp    eax,DWORD PTR [eax]
  402c0e:	test   BYTE PTR [eax],cl
  402c10:	js     0x402c12
  402c12:	je     0x402c1c
  402c14:	cmp    BYTE PTR [eax],al
  402c16:	je     0x402c27
  402c18:	rol    BYTE PTR [eax],1
  402c1a:	jne    0x402c21
  402c1c:	adc    DWORD PTR [eax],eax
  402c1e:	inc    esp
  402c1f:	or     BYTE PTR [eax+0x0],ch
  402c22:	xor    al,0x8
  402c24:	sub    BYTE PTR [eax],al
  402c26:	xor    al,0xf
  402c28:	mov    al,0x0
  402c2a:	popf   
  402c2b:	jmp    0xe9dd343b
  402c30:	or     ecx,DWORD PTR [eax+0x480be99d]
  402c36:	popf   
  402c37:	jmp    0xb9de1c48
  402c3c:	push   es
  402c3d:	add    al,0x9d
  402c3f:	jmp    0xe9dd804f
  402c44:	or     edx,DWORD PTR [ebx*4-0x621cf42a]
  402c4b:	fadd   DWORD PTR [ebx+ebp*1]
  402c4e:	popf   
  402c4f:	jmp    0xe9dda05f
  402c54:	or     esi,DWORD PTR [ebx*4-0x6237f517]
  402c5b:	mov    edx,0xe99d0d04
  402c60:	or     esp,DWORD PTR [eax+eax*1-0x63]
  402c64:	jmp    0xe9dd5074
  402c69:	or     ch,BYTE PTR [eax+0x40be99d]
  402c6f:	popf   
  402c70:	jmp    0xe9ddb080
  402c75:	or     eax,DWORD PTR [ebp+ebx*4-0x17]
  402c79:	or     ch,al
  402c7b:	popf   
  402c7c:	mov    ecx,0xe99d0804
  402c81:	or     ebx,DWORD PTR [ebp+ebx*4-0x17]
  402c85:	or     ebx,DWORD PTR [ebx*4-0x6267f517]
  402c8c:	fld    QWORD PTR [ebx+edx*2]
  402c8f:	popf   
  402c90:	jmp    0xe9dda8a0
  402c95:	or     edi,DWORD PTR [ebx*4-0x6227f517]
  402c9c:	mov    bh,0x4
  402c9e:	pop    ss
  402c9f:	popf   
  402ca0:	jmp    0x2dd98b0
  402ca5:	jmp    0xe9429db5
  402caa:	or     dh,ch
  402cac:	add    ecx,ebp
  402cae:	or     esp,DWORD PTR [ecx+0x190be902]
  402cb4:	add    ch,cl
  402cb6:	or     edx,ecx
  402cb8:	add    ch,cl
  402cba:	or     dl,BYTE PTR ds:0x9e04d902
  402cc0:	add    ch,cl
  402cc2:	or     ebp,DWORD PTR [edi+0x2]
  402cc5:	jmp    0x2ef2cd5
  402cca:	hlt    
  402ccb:	or     edi,DWORD PTR [esi]
  402ccd:	add    bh,dl
  402ccf:	add    al,0xbe
  402cd1:	add    ch,cl
  402cd3:	or     ebp,DWORD PTR [edi+0x2]
  402cd6:	jmp    0xe942dbe6
  402cdb:	or     ah,cl
  402cdd:	add    eax,ebx
  402cdf:	add    al,0xa6
  402ce1:	add    ch,cl
  402ce3:	or     edi,DWORD PTR [edi]
  402ce5:	add    ch,cl
  402ce7:	or     edi,DWORD PTR [edi+0x2]
  402cea:	jmp    0xe9422df9
  402cef:	or     ebx,DWORD PTR [edi+0x1f0be902]
  402cf5:	add    ch,cl
  402cf7:	or     ebx,DWORD PTR [edi+0x2]
  402cfa:	jmp    0xd943ae09
  402cff:	add    al,0x9a
  402d01:	add    ch,cl
  402d03:	or     esp,edi
  402d05:	add    ch,cl
  402d07:	or     esp,DWORD PTR [edi+0x110ae902]
  402d0d:	add    edi,ebp
  402d0f:	add    al,0xde
  402d11:	add    ch,cl
  402d13:	or     esp,edi
  402d15:	add    ch,cl
  402d17:	or     esp,DWORD PTR [edi+0x710ae902]
  402d1d:	add    eax,DWORD PTR [eax]
  402d1f:	fistp  DWORD PTR [ecx-0x6917000b]
  402d25:	ins    BYTE PTR es:[edi],dx
  402d26:	add    cl,ch
  402d28:	xchg   esi,eax
  402d29:	sub    al,0x0
  402d2b:	jmp    0xced430
  402d30:	jmp    0xe94039db
  402d35:	xchg   esi,eax
  402d36:	mov    WORD PTR [eax],es
  402d38:	jmp    0xe94079d3
  402d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d3e:	into   
  402d3f:	add    cl,bl
  402d41:	cdq    
  402d42:	(bad)  
  402d43:	(bad)  
  402d44:	call   0xe9405ddf
  402d49:	xchg   esi,eax
  402d4a:	lock jmp FWORD PTR [eax]
  402d4d:	test   eax,0x9ffa0002
  402d52:	adc    eax,0x5096e900
  402d57:	add    cl,ch
  402d59:	xchg   esi,eax
  402d5a:	adc    BYTE PTR [eax],al
  402d5c:	jmp    0xd840f40a
  402d61:	lahf   
  402d62:	or     DWORD PTR [eax],eax
  402d64:	jmp    0xe9408dff
  402d69:	xchg   esi,eax
  402d6a:	and    BYTE PTR [eax],al
  402d6c:	jmp    0xe940d41a
  402d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d72:	add    BYTE PTR [eax],al
  402d74:	jmp    0xe940ae0f
  402d79:	xchg   esi,eax
  402d7a:	inc    eax
  402d7b:	add    cl,ch
  402d7d:	test   eax,0x9fd900e6
  402d82:	or     eax,DWORD PTR [eax]
  402d84:	jmp    0xe940661f
  402d89:	xchg   esi,eax
  402d8a:	clc    
  402d8b:	(bad)  
  402d8c:	call   0xfd40a43a
  402d91:	add    BYTE PTR [edi-0x6916ff9b],bl
  402d97:	pop    eax
  402d98:	add    BYTE PTR [eax],al
  402d9a:	je     0x402da9
  402d9c:	add    BYTE PTR ds:[esi+eax*1-0x24],al
  402da1:	add    BYTE PTR [esi+0x4],dh
  402da4:	sbb    eax,DWORD PTR [eax]
  402da6:	xor    al,0xd
  402da8:	outs   dx,BYTE PTR ds:[esi]
  402da9:	add    BYTE PTR [ecx*1+0x644002e],dh
  402db0:	mov    esp,0xe0d4400
  402db5:	add    BYTE PTR [ecx*1+0xd34008e],dh
  402dbc:	dec    esi
  402dbd:	add    BYTE PTR [esi+eax*1],al
  402dc0:	cld    
  402dc1:	add    BYTE PTR [esp+eax*1],ah
  402dc4:	add    BYTE PTR [eax],al
  402dc6:	hlt    
  402dc7:	or     al,0x51
  402dc9:	add    ah,dh
  402dcb:	or     al,0x11
  402dcd:	add    cl,dh
  402dcf:	or     al,0x83
  402dd1:	add    dh,dh
  402dd3:	add    ebx,DWORD PTR [edi]
  402dd5:	add    ah,dh
  402dd7:	or     al,0x71
  402dd9:	add    ah,dh
  402ddb:	or     al,0x31
  402ddd:	add    ah,al
  402ddf:	add    eax,0x3f400c2
  402de4:	or     al,BYTE PTR [eax]
  402de6:	mov    ah,0xc
  402de8:	popa   
  402de9:	add    BYTE PTR [esp+ecx*1+0x5c40021],dh
  402df0:	mov    ds:0x10cc400,al
  402df5:	add    BYTE PTR [eax],al
  402df7:	mov    ah,0xc
  402df9:	add    DWORD PTR [eax],0x410cb4
  402dff:	test   BYTE PTR [edi],al
  402e01:	loop   0x402e03
  402e03:	je     0x402e0a
  402e05:	push   es
  402e06:	add    BYTE PTR [esp+ecx*1+0x59],dh
  402e0a:	add    BYTE PTR [esp+ecx*1+0x19],dh
  402e0e:	add    BYTE PTR [edi+eax*1-0x2362ff6e],al
  402e15:	add    bh,BYTE PTR [ebx]
  402e17:	popf   
  402e18:	jmp    0xe9dda728
  402e1d:	or     edi,DWORD PTR [ecx]
  402e1f:	popf   
  402e20:	jmp    0xbade0031
  402e25:	add    dl,BYTE PTR [ecx]
  402e27:	popf   
  402e28:	jmp    0xe9dd9738
  402e2d:	or     ebp,DWORD PTR [ecx]
  402e2f:	popf   
  402e30:	jmp    0xe9dde041
  402e35:	or     ecx,DWORD PTR [ecx]
  402e37:	popf   
  402e38:	jmp    0xe9ddb748
  402e3d:	or     ecx,DWORD PTR [ecx-0x63]
  402e40:	jmp    0xb9de2051
  402e45:	add    al,BYTE PTR [ebx*4-0x62aaf417]
  402e4c:	jmp    0xd9dd435c
  402e51:	or     eax,DWORD PTR [edx]
  402e53:	pushf  
  402e54:	fadd   QWORD PTR [eax]
  402e56:	sub    ebx,DWORD PTR [ebp+0x750be9]
  402e5c:	popf   
  402e5d:	jmp    0xe9dd636d
  402e62:	or     cl,dl
  402e64:	popf   
  402e65:	mov    edx,0xe99d0d00
  402e6a:	or     esp,DWORD PTR [ebp-0x63]
  402e6d:	jmp    0xe9dd537d
  402e72:	or     ch,BYTE PTR [edx+0x50be99d]
  402e78:	popf   
  402e79:	jmp    0xe9ddb389
  402e7e:	or     eax,DWORD PTR [ebp-0x63]
  402e81:	jmp    0xb9de1890
  402e86:	add    BYTE PTR [eax],cl
  402e88:	popf   
  402e89:	jmp    0x2dd8b99
  402e8e:	jmp    0xe942c69e
  402e93:	or     dl,BYTE PTR [edi]
  402e95:	add    bh,ch
  402e97:	add    dh,cl
  402e99:	add    ch,cl
  402e9b:	or     esp,eax
  402e9d:	add    ch,cl
  402e9f:	or     ebx,DWORD PTR [eax+0x770ae902]
  402ea5:	add    bl,bl
  402ea7:	add    BYTE PTR [edx-0x4ff416fe],dh
  402ead:	add    ch,cl
  402eaf:	or     ecx,DWORD PTR [eax-0x8f516fe]
  402eb5:	add    ecx,ebp
  402eb7:	or     ebx,DWORD PTR [eax+0x100be902]
  402ebd:	add    ch,cl
  402ebf:	or     eax,DWORD PTR [eax]
  402ec1:	push   0x170ae902
  402ec6:	add    bl,cl
  402ec8:	add    BYTE PTR [esi+0x6e0be902],bl
  402ece:	add    ch,cl
  402ed0:	or     ecx,DWORD PTR [esi-0x21f40bfe]
  402ed6:	add    edx,edi
  402ed8:	add    BYTE PTR [esi+0x6e0be902],bh
  402ede:	add    ch,cl
  402ee0:	or     ecx,DWORD PTR [esi-0x24f516fe]
  402ee6:	add    eax,ebx
  402ee8:	add    BYTE PTR [esi+0x3e0be902],dl
  402eee:	add    ch,cl
  402ef0:	or     edi,DWORD PTR [esi+0x2]
  402ef3:	jmp    0xe9422a02
  402ef8:	or     ebx,DWORD PTR [esi+0x1e0be902]
  402efe:	add    ch,cl
  402f00:	or     ebx,esi
  402f02:	add    ch,cl
  402f04:	or     bh,BYTE PTR [ebx+0x3]
  402f07:	add    cl,bl
  402f09:	popf   
  402f0a:	std    
  402f0b:	(bad)  
  402f0c:	call   0xe94068a7
  402f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f12:	stc    
  402f13:	(bad)  
  402f14:	call   0xfd409bc0
  402f19:	popf   
  402f1a:	inc    ecx
  402f1b:	add    cl,ch
  402f1d:	xchg   esi,eax
  402f1e:	pop    ecx
  402f1f:	add    cl,ch
  402f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f22:	sbb    DWORD PTR [eax],eax
  402f24:	jmp    0xecd629
  402f29:	fistp  DWORD PTR [ebp-0x6917000f]
  402f2f:	imul   eax,DWORD PTR [eax],0x29a6e9
  402f35:	jmp    0xe940bbe1
  402f3a:	xchg   esi,eax
  402f3b:	or     DWORD PTR [eax],eax
  402f3d:	jmp    0xe940b8d8
  402f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f43:	dec    ecx
  402f44:	add    cl,ch
  402f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f47:	int3   
  402f48:	add    cl,bl
  402f4a:	popf   
  402f4b:	(bad)  
  402f4c:	(bad)  
  402f4d:	call   0xe9405ce8
  402f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f53:	in     eax,dx
  402f54:	jmp    FWORD PTR [eax]
  402f56:	mov    eax,ds:0xebfa0002
  402f5b:	adc    BYTE PTR [eax],al
  402f5d:	jmp    0xe9407cf8
  402f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f63:	or     eax,0xc4a1e900
  402f68:	add    al,bl
  402f6a:	retf   
  402f6b:	add    al,0x0
  402f6d:	jmp    0xe9408d08
  402f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f73:	sbb    eax,0xa4a1e900
  402f78:	add    cl,ch
  402f7a:	xchg   esi,eax
  402f7b:	std    
  402f7c:	(bad)  
  402f7d:	call   0x40ad18
  402f82:	test   BYTE PTR [ecx],cl
  402f84:	inc    edi
  402f85:	add    BYTE PTR [esi+eax*1+0x640000ee],al
  402f8c:	aam    0x8
  402f8e:	add    BYTE PTR [ecx+ecx*1+0x5f],dh
  402f92:	add    BYTE PTR [ecx+ecx*1+0x684001f],al
  402f99:	sahf   
  402f9a:	add    BYTE PTR [eax-0x2c],ch
  402f9d:	bound  eax,QWORD PTR [eax]
  402f9f:	je     0x402faa
  402fa1:	jg     0x402fa3
  402fa3:	inc    esp
  402fa4:	or     DWORD PTR [edi],edi
  402fa6:	add    BYTE PTR [esi+eax*1-0x22],al
  402faa:	add    BYTE PTR [esi-0x2c],ah
  402fad:	sbb    al,BYTE PTR [eax]
  402faf:	xor    al,0x9
  402fb1:	outs   dx,DWORD PTR ds:[esi]
  402fb2:	add    BYTE PTR [ecx+ecx*1+0x2f],al
  402fb6:	add    BYTE PTR [esi+eax*1-0x42],al
  402fba:	add    BYTE PTR [ecx+ecx*1],dh
  402fbd:	(bad)  
  402fbf:	xor    al,0x9
  402fc1:	pop    DWORD PTR [eax]
  402fc3:	add    al,0x9
  402fc5:	dec    edi
  402fc6:	add    BYTE PTR [esi+eax*1],al
  402fc9:	inc    BYTE PTR [eax]
  402fcb:	adc    al,0xd4
  402fcd:	(bad)  
  402fce:	push   esp
  402fd0:	or     BYTE PTR [eax+0x0],dl
  402fd3:	add    al,0x9
  402fd5:	adc    BYTE PTR [eax],al
  402fd7:	call   0xe640a2e4
  402fdc:	rcr    DWORD PTR [esi],cl
  402fde:	add    ah,dh
  402fe0:	or     BYTE PTR [eax+0x0],dh
  402fe3:	les    ecx,FWORD PTR [eax]
  402fe5:	xor    BYTE PTR [eax],al
  402fe7:	les    eax,FWORD PTR ds:0xd3e400c1
  402fed:	or     DWORD PTR [eax],eax
  402fef:	add    BYTE PTR [eax+ecx*1+0x8c40060],dh
  402ff6:	and    BYTE PTR [eax],al
  402ff8:	les    eax,FWORD PTR ds:0xeb9d00a1
  402ffe:	or     eax,DWORD PTR [eax]
  403000:	popf   
  403001:	jmp    0x40300e
  403003:	sbb    BYTE PTR [ebp-0x62bff417],0xe9
  40300a:	or     al,0xe1
  40300c:	popf   
  40300d:	mov    ecx,0xe99d05fe
  403012:	or     ebx,DWORD PTR [eax-0x63]
  403015:	jmp    0xe9dd4825
  40301a:	or     al,0x91
  40301c:	popf   
  40301d:	fdivr  st,st(6)
  40301f:	cmp    bl,BYTE PTR [ebp-0x6287f417]
  403025:	jmp    0xe9dd6835
  40302a:	or     al,0xd1
  40302c:	popf   
  40302d:	mov    edx,0xe99d10fe
  403032:	or     ebp,DWORD PTR [eax-0x63]
  403035:	jmp    0xe9dd5845
  40303a:	or     al,0xb1
  40303c:	popf   
  40303d:	jmp    0xe9dd384d
  403042:	or     ecx,DWORD PTR [eax+0x480be99d]
  403048:	popf   
  403049:	jmp    0xb9de215a
  40304e:	inc    BYTE PTR [ebx]
  403050:	popf   
  403051:	jmp    0x9d408461
  403056:	jmp    0xcedd4466
  40305b:	or     esp,ebx
  40305d:	popf   
  40305e:	fdivr  st,st(4)
  403060:	sub    bl,BYTE PTR [ebp-0x628bf417]
  403066:	jmp    0xe9dd6476
  40306b:	or     cl,cl
  40306d:	popf   
  40306e:	mov    edx,0xe99d0cfc
  403073:	or     esp,DWORD PTR [ebp+ebx*4+0x2]
  403077:	jmp    0xe942a987
  40307c:	or     dh,ah
  40307e:	add    ch,cl
  403080:	or     ebx,DWORD PTR [ecx+0x210be902]
  403086:	add    ch,cl
  403088:	or     ebx,ecx
  40308a:	add    ch,cl
  40308c:	or     dh,BYTE PTR [edx+eax*1-0x27]
  403090:	cld    
  403091:	call   0xe902:0xd90be902
  403098:	or     edx,DWORD PTR [ecx+0x40ae902]
  40309e:	add    bh,ch
  4030a0:	cld    
  4030a1:	iret   
  4030a2:	add    ch,cl
  4030a4:	or     ebx,ecx
  4030a6:	add    ch,cl
  4030a8:	or     edx,DWORD PTR [ecx+0x640ae902]
  4030ae:	add    bl,bl
  4030b0:	cld    
  4030b1:	stos   DWORD PTR es:[edi],eax
  4030b2:	add    ch,cl
  4030b4:	or     ecx,ecx
  4030b6:	add    ch,cl
  4030b8:	or     eax,DWORD PTR [eax]
  4030ba:	add    DWORD PTR [edx],0x1e40ae9
  4030c0:	jmp    0xe942c1d0
  4030c5:	or     ebp,DWORD PTR [ecx]
  4030c7:	add    ch,cl
  4030c9:	or     esp,DWORD PTR [ecx+0x2]
  4030cc:	jmp    0xd94234db
  4030d1:	cld    
  4030d2:	lahf   
  4030d3:	add    ch,cl
  4030d5:	or     ecx,DWORD PTR [edi+0x2]
  4030d8:	jmp    0xf442bfe8
  4030dd:	or     edi,DWORD PTR [esi]
  4030df:	add    bh,dl
  4030e1:	cld    
  4030e2:	mov    edi,0x4f0be902
  4030e7:	add    ch,cl
  4030e9:	or     ecx,DWORD PTR [edi-0x1ff516fe]
  4030ef:	add    DWORD PTR [eax],eax
  4030f1:	fadd   st,st(1)
  4030f3:	pop    es
  4030f4:	add    cl,ch
  4030f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f7:	pusha  
  4030f8:	add    cl,ch
  4030fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030fb:	and    BYTE PTR [eax],al
  4030fd:	jmp    0xe940ce99
  403102:	xchg   esi,eax
  403103:	add    BYTE PTR [eax],al
  403105:	jmp    0xe940b5b0
  40310a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310b:	inc    esp
  40310c:	add    cl,ch
  40310e:	xchg   edi,eax
  40310f:	out    0x0,eax
  403111:	fld    DWORD PTR [ecx-0x5916fff7]
  403117:	sub    al,0x0
  403119:	jmp    0xe9401dc4
  40311e:	add    BYTE PTR [edi+0x61fd0077],dl
  403124:	inc    ebp
  403125:	add    cl,ch
  403127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403128:	dec    esp
  403129:	add    cl,ch
  40312b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312c:	or     al,0x0
  40312e:	jmp    0xdb40e8ca
  403133:	inc    ecx
  403134:	cmc    
  403135:	(bad)  
  403136:	call   0xe9408de1
  40313b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40313c:	sbb    al,0x0
  40313e:	jmp    0xe940c8da
  403143:	xchg   esi,eax
  403144:	cld    
  403145:	(bad)  
  403146:	call   0xe940adf1
  40314b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40314c:	cmp    al,0x0
  40314e:	jmp    0xd94108ea
  403153:	add    DWORD PTR [edi],eax
  403155:	add    cl,ch
  403157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403158:	cmp    BYTE PTR [eax],al
  40315a:	jmp    0x29402955
  40315f:	jmp    0x983b3135
  403164:	adc    eax,0x57d6e900
  403169:	add    BYTE PTR [eax],al
  40316b:	(bad)  
  40316c:	int    0x35
  40316e:	add    BYTE PTR [esi+ecx*8-0x31aff34],dh
  403175:	push   cs
  403176:	add    ah,al
  403178:	int    0x65
  40317a:	add    ah,al
  40317c:	int    0x25
  40317e:	add    BYTE PTR [esi+ecx*8-0x4bffff54],dh
  403185:	int    0x5
  403187:	add    BYTE PTR [ebp+ecx*8-0x327bff7b],al
  40318e:	inc    ebp
  40318f:	add    BYTE PTR [esi+ecx*8-0x14],dh
  403193:	add    BYTE PTR [esp+edi*8+0x8],ah
  403197:	add    BYTE PTR [ebp+ecx*8-0x327bffa3],al
  40319e:	sbb    eax,0x9cce7400
  4031a3:	add    BYTE PTR [eax-0x4],ah
  4031a6:	bound  eax,QWORD PTR [eax]
  4031a8:	inc    esp
  4031a9:	int    0x7d
  4031ab:	add    BYTE PTR [ebp+ecx*8+0x3d],al
  4031af:	add    BYTE PTR [esi+ecx*8],dh
  4031b2:	fadd   QWORD PTR [eax]
  4031b4:	data16 cld 
  4031b6:	sbb    al,BYTE PTR [eax]
  4031b8:	inc    esp
  4031b9:	int    0x6d
  4031bb:	add    BYTE PTR [ebp+ecx*8+0x2d],al
  4031bf:	add    BYTE PTR [esi+ecx*8],dh
  4031c2:	mov    esp,0xdcd3400
  4031c7:	add    BYTE PTR [ecx*8-0x32fbff73],al
  4031ce:	dec    ebp
  4031cf:	add    ah,dh
  4031d1:	int    0xfc
  4031d3:	add    BYTE PTR [esp+edi*8],dl
  4031d6:	(bad)  
  4031d7:	inc    DWORD PTR [ecx*8-0x32fbffb0]
  4031de:	adc    BYTE PTR [eax],al
  4031e0:	icebp  
  4031e1:	int3   
  4031e2:	add    BYTE PTR [eax],0x9d
  4031e5:	int    0xa
  4031e7:	pop    ds
  4031e8:	add    BYTE PTR [ebp-0x628f0425],bl
  4031ee:	(bad)  
  4031f0:	xor    BYTE PTR [ebp-0x623d0325],bl
  4031f6:	stos   DWORD PTR es:[edi],eax
  4031f7:	or     cl,BYTE PTR [edx]
  4031f9:	popf   
  4031fa:	(bad)  
  4031fc:	pusha  
  4031fd:	popf   
  4031fe:	(bad)  
  403200:	and    BYTE PTR [ebp-0x625d0325],bl
  403206:	(bad)  
  403208:	add    BYTE PTR [ebp-0x627f0427],bl
  40320e:	fsincos 
  403210:	inc    eax
  403211:	popf   
  403212:	frndint 
  403214:	loop   0x4031b3
  403216:	test   eax,0xd99d060a
  40321b:	sti    
  40321c:	pop    eax
  40321d:	popf   
  40321e:	fsincos 
  403220:	sbb    BYTE PTR [ebp-0x626d0327],bl
  403226:	int3   
  403227:	or     bh,BYTE PTR [ebx]
  403229:	popf   
  40322a:	fsincos 
  40322c:	js     0x4031cb
  40322e:	fsincos 
  403230:	cmp    BYTE PTR [ebp-0x622d0327],bl
  403236:	stos   BYTE PTR es:[edi],al
  403237:	or     dl,BYTE PTR [ecx]
  403239:	popf   
  40323a:	fsincos 
  40323c:	push   0x28fbd99d
  403241:	popf   
  403242:	frndint 
  403244:	mov    dl,0x9d
  403246:	fsincos 
  403248:	or     BYTE PTR [ebp+0x88fbd9],bl
  40324e:	popf   
  40324f:	fsincos 
  403251:	dec    eax
  403252:	popf   
  403253:	frndint 
  403255:	repnz popf 
  403257:	test   eax,0xd99d040a
  40325c:	sti    
  40325d:	push   esp
  40325e:	popf   
  40325f:	add    ch,cl
  403261:	sti    
  403262:	xchg   ecx,eax
  403263:	add    bh,cl
  403265:	sti    
  403266:	pushf  
  403267:	add    edx,edi
  403269:	or     BYTE PTR [esi+0x49fbe902],al
  40326f:	add    ch,cl
  403271:	sti    
  403272:	xchg   ecx,eax
  403273:	add    ch,cl
  403275:	cli    
  403276:	xlat   BYTE PTR ds:[ebx]
  403277:	add    bl,al
  403279:	or     BYTE PTR [eax+0x39fbe902],ch
  40327f:	add    ch,cl
  403281:	sti    
  403282:	add    DWORD PTR [edx],0x2f7fae9
  403288:	jmp    0xe942d488
  40328d:	sti    
  40328e:	sbb    DWORD PTR [edx],eax
  403290:	jmp    0xe9431490
  403295:	cli    
  403296:	ja     0x40329a
  403298:	(bad)  [eax]
  40329a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40329b:	add    ch,cl
  40329d:	sti    
  40329e:	rol    DWORD PTR [edx],1
  4032a0:	jmp    0xe942bca0
  4032a5:	cli    
  4032a6:	pop    es
  4032a7:	add    bh,ch
  4032a9:	or     dh,ch
  4032ab:	add    ch,cl
  4032ad:	sti    
  4032ae:	rol    DWORD PTR [edx],1
  4032b0:	jmp    0x2c933b0
  4032b5:	jmp    0xdb429ab4
  4032ba:	or     BYTE PTR [edx-0x3e0416fe],dl
  4032c0:	add    ch,cl
  4032c2:	sti    
  4032c3:	jns    0x4032c7
  4032c5:	jmp    0xe9421ac4
  4032ca:	sti    
  4032cb:	test   eax,0x21fbe902
  4032d0:	add    ch,cl
  4032d2:	sti    
  4032d3:	pop    ecx
  4032d4:	add    ch,cl
  4032d6:	cli    
  4032d7:	pop    es
  4032d8:	add    al,BYTE PTR [eax]
  4032da:	fldenv [ebp-0x916fffd]
  4032e0:	xor    eax,DWORD PTR [eax]
  4032e2:	jmp    0xf44026cd
  4032e7:	out    0xc3,al
  4032e9:	add    dl,bh
  4032eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ec:	and    eax,DWORD PTR [eax]
  4032ee:	jmp    0xe94086c9
  4032f3:	(bad)  
  4032f4:	adc    eax,DWORD PTR [eax]
  4032f6:	jmp    0xd840fac2
  4032fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032fc:	sti    
  4032fd:	(bad)  
  4032fe:	call   0xe94096b9
  403303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403304:	and    eax,DWORD PTR [eax]
  403306:	jmp    0xe940dab2
  40330b:	xchg   esi,eax
  40330c:	add    DWORD PTR [eax],eax
  40330e:	jmp    0xe940b4a9
  403313:	xchg   BYTE PTR [ecx+0x0],al
  403316:	jmp    0x125ba1b
  40331b:	fldenv [ebp+0x76e90005]
  403321:	sub    DWORD PTR [eax],eax
  403323:	jmp    0xe9401c8e
  403328:	addr16 jne 0x40332b
  40332b:	std    
  40332c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40332d:	inc    ecx
  40332e:	add    cl,ch
  403330:	push   esi
  403331:	dec    ecx
  403332:	add    cl,ch
  403334:	inc    esi
  403335:	or     DWORD PTR [eax],eax
  403337:	jmp    0xdb40e883
  40333c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40333d:	icebp  
  40333e:	(bad)  
  40333f:	call   0xe9408c7a
  403344:	sbb    DWORD PTR es:[eax],eax
  403347:	jmp    0xe940c873
  40334c:	push   ss
  40334d:	stc    
  40334e:	(bad)  
  40334f:	call   0x40ac6a
  403354:	hlt    
  403355:	leave  
  403356:	dec    edx
  403357:	add    ah,dh
  403359:	enter  0xf6,0xd4
  40335d:	cli    
  40335e:	add    al,0x0
  403360:	add    al,0xca
  403362:	push   esi
  403363:	add    ah,dh
  403365:	leave  
  403366:	push   ss
  403367:	add    BYTE PTR [esi+ecx*8+0x4d7ffff],dh
  40336e:	xor    eax,DWORD PTR [eax]
  403370:	(bad)  
  403371:	leave  
  403372:	jbe    0x403374
  403374:	mov    ah,0xc9
  403376:	add    BYTE PTR ss:[esi+ecx*8-0x2affff32],dh
  40337e:	add    al,0xf
  403380:	add    ah,al
  403382:	leave  
  403383:	data16 add BYTE PTR [ecx+ecx*8-0x314bffda],dh
  40338b:	scas   al,BYTE PTR es:[edi]
  40338c:	add    BYTE PTR [ecx+ecx*8-0x367bfffa],al
  403393:	xchg   BYTE PTR [eax],al
  403395:	je     0x403360
  403397:	inc    esi
  403398:	add    BYTE PTR [esi+ecx*8-0x12],dh
  40339c:	add    BYTE PTR [esp+eax*1+0x9],dl
  4033a0:	add    BYTE PTR [ecx+ecx*8-0x368bffa2],al
  4033a7:	push   ds
  4033a8:	add    BYTE PTR [esi+ecx*8-0x62],dh
  4033ac:	add    BYTE PTR [eax+0x4],bl
  4033af:	arpl   WORD PTR [eax],ax
  4033b1:	inc    esp
  4033b2:	leave  
  4033b3:	jle    0x4033b5
  4033b5:	xor    al,0xc9
  4033b7:	add    BYTE PTR ds:[esi+ecx*8],dh
  4033bb:	fiadd  WORD PTR [eax]
  4033bd:	push   esi
  4033be:	add    al,0x1b
  4033c0:	add    BYTE PTR [ecx+ecx*8+0x6e],al
  4033c4:	add    BYTE PTR [ecx+ecx*8],dh
  4033c7:	add    BYTE PTR cs:[esi+ecx*8],dh
  4033cb:	mov    esi,0xfbdb9d00
  4033d0:	push   cs
  4033d1:	popf   
  4033d2:	(bad)  
  4033d4:	mov    ds,WORD PTR [ebp-0x62b10425]
  4033da:	(bad)  
  4033dc:	(bad)  
  4033dd:	popf   
  4033de:	stos   DWORD PTR es:[edi],eax
  4033df:	or     BYTE PTR [ecx],al
  4033e1:	add    BYTE PTR [ebp-0x63fef74c],bl
  4033e7:	enter  0x1108,0x9d
  4033eb:	add    BYTE PTR [ecx],cl
  4033ed:	add    DWORD PTR [ebp-0x62faf736],ebp
  4033f3:	ror    BYTE PTR [eax],cl
  4033f5:	add    DWORD PTR [ecx-0x62bef752],esp
  4033fb:	scas   al,BYTE PTR es:[edi]
  4033fc:	or     BYTE PTR [ecx],al
  4033fe:	pop    ebp
  4033ff:	stos   DWORD PTR es:[edi],eax
  403400:	or     BYTE PTR [ebx],al
  403402:	popf   
  403403:	mov    bl,0x8
  403405:	add    DWORD PTR [edi-0x62def731],ebx
  40340b:	iret   
  40340c:	or     BYTE PTR [ecx],al
  40340e:	mov    ebp,0x9d0908c7
  403413:	iret   
  403414:	or     BYTE PTR [ecx],al
  403416:	xchg   ebp,eax
  403417:	stos   DWORD PTR es:[edi],eax
  403418:	or     BYTE PTR [ecx+0x9199d],al
  40341e:	popf   
  40341f:	test   eax,0xb49d0208
  403424:	or     BYTE PTR [ecx+0x1908c89c],al
  40342a:	popf   
  40342b:	add    BYTE PTR [ecx],cl
  40342d:	add    DWORD PTR [ebp-0x62f8f736],esi
  403433:	ror    BYTE PTR [eax],cl
  403435:	add    DWORD PTR [ebx-0x629ef752],esp
  40343b:	scas   al,BYTE PTR es:[edi]
  40343c:	or     BYTE PTR [ecx],al
  40343e:	mov    ebp,0x9d0408a9
  403443:	mov    cl,0x8
  403445:	add    DWORD PTR [eax],eax
  403447:	sahf   
  403448:	add    bh,ch
  40344a:	or     BYTE PTR [edx+eax*1-0x3],ch
  40344e:	or     BYTE PTR [edx+edx*1+0x2a008fb],bl
  403455:	repz or BYTE PTR [esi+edi*8+0x2dc08de],bl
  40345d:	test   eax,0xd9029d08
  403462:	add    ecx,DWORD PTR [edx+eax*1+0x29d03db]
  403469:	icebp  
  40346a:	add    ebx,DWORD PTR [edx-0x5cfc0ffe]
  403470:	add    ah,bl
  403472:	add    ebx,DWORD PTR [eax-0x5efc1dfe]
  403478:	add    dh,ch
  40347a:	add    ebx,DWORD PTR [esi-0x60fc13fe]
  403480:	add    ah,bh
  403482:	add    ebx,DWORD PTR [edx+eax*1+0x29d03de]
  403489:	jmp    0x7742d191
  40348e:	adc    al,0xa2
  403490:	push   ebx
  403491:	lds    esp,FWORD PTR [edx-0x5d]
  403494:	fcom   QWORD PTR [ebx+0x33]
  403497:	xchg   esp,eax
  403498:	imul   esp,eax,0x6e03f0c7
  40349e:	fadd   DWORD PTR [edi]
  4034a0:	push   ebx
  4034a1:	mov    esp,0x4ad9fea6
  4034a6:	ja     0x4034a9
  4034a8:	ins    DWORD PTR es:[edi],dx
  4034a9:	sbb    edi,DWORD PTR [eax+eax*1+0x46]
  4034ad:	cld    
  4034ae:	test   BYTE PTR [ecx+edi*2+0x68daf749],cl
  4034b5:	loop   0x403518
  4034b7:	stos   DWORD PTR es:[edi],eax
  4034b8:	outs   dx,DWORD PTR ds:[esi]
  4034b9:	jae    0x4034cd
  4034bb:	inc    eax
  4034bc:	or     edi,ecx
  4034be:	jnp    0x403510
  4034c0:	in     al,dx
  4034c1:	dec    ebx
  4034c2:	add    dh,ch
  4034c4:	xchg   ebx,eax
  4034c5:	mov    ah,bh
  4034c7:	pop    eax
  4034c8:	cmp    cl,BYTE PTR [eax+edx*4+0x1d942e8d]
  4034cf:	sbb    eax,ecx
  4034d1:	xchg   edx,eax
  4034d2:	push   0xffffffa1
  4034d4:	outs   dx,DWORD PTR ds:[esi]
  4034d5:	mov    ebx,esi
  4034d7:	das    
  4034d8:	pop    esi
  4034d9:	mov    WORD PTR [esp+eax*4+0x121aa84a],es
  4034e0:	add    eax,0xb986dad
  4034e5:	mov    dh,0xf4
  4034e7:	and    ch,BYTE PTR es:[edi+0x5e713f83]
  4034ee:	adc    ebp,DWORD PTR [ecx+0x53645736]
  4034f4:	out    0x5f,al
  4034f6:	std    
  4034f7:	mov    ebp,0x368a6507
  4034fc:	lea    eax,[ecx]
  4034fe:	adc    al,0xa0
  403500:	pop    edx
  403501:	add    al,0x63
  403503:	dec    edx
  403504:	mov    ds:0xabb4f9fb,al
  403509:	add    cl,BYTE PTR [ebp+0x3b5c7eb1]
  40350f:	aas    
  403510:	add    BYTE PTR [ecx-0x2072b3a5],dl
  403516:	(bad)  
  403517:	aad    0x1b
  403519:	out    dx,al
  40351a:	popa   
  40351b:	mov    ds:0x3c067a98,al
  403520:	es xor eax,0x1b744aff
  403526:	clc    
  403527:	rol    DWORD PTR [edx],1
  403529:	adc    bh,ch
  40352b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352c:	arpl   WORD PTR [esi],ax
  40352e:	nop
  40352f:	xor    eax,0x4294c6cd
  403534:	aas    
  403535:	pop    ss
  403536:	mov    ds,ebx
  403538:	test   eax,0xac8757
  40353d:	xlat   BYTE PTR ds:[ebx]
  40353e:	sub    eax,ebx
  403540:	xor    dh,cl
  403542:	sbb    edi,ebx
  403544:	inc    ebp
  403545:	jnp    0x40350f
  403547:	aad    0xdc
  403549:	or     eax,0xc8abd0f9
  40354e:	cmc    
  40354f:	fsub   DWORD PTR [esi]
  403551:	inc    BYTE PTR ds:0x148451de
  403557:	xlat   BYTE PTR ds:[ebx]
  403558:	enter  0x6512,0xd0
  40355c:	mov    edi,0x21b4b1c1
  403561:	out    0xc1,eax
  403563:	mov    bl,0x56
  403565:	dec    ebp
  403566:	push   eax
  403567:	mov    edx,0xbda0cbcf
  40356c:	mov    eax,0x2802771a
  403571:	int3   
  403572:	dec    ebp
  403573:	add    eax,0x9836005f
  403578:	or     al,0xc6
  40357a:	mov    al,ds:0x33b10ba7
  40357f:	cmp    ch,BYTE PTR [edi+0x2f]
  403582:	aad    0x11
  403584:	push   0x60dc1f58
  403589:	sar    DWORD PTR [ecx+0x24b665ea],0x3f
  403590:	fdiv   QWORD PTR [esi-0x7e]
  403593:	fild   DWORD PTR cs:[ecx]
  403596:	call   0x5ed907b9
  40359b:	aad    0xd4
  40359d:	out    dx,eax
  40359e:	or     eax,0x5b71b184
  4035a3:	jb     0x40355b
  4035a5:	push   es
  4035a6:	loope  0x40358a
  4035a8:	mov    edi,0xb899279f
  4035ad:	call   0x7847bcc8
  4035b2:	mov    al,0xb7
  4035b4:	add    BYTE PTR [edi],cl
  4035b6:	popf   
  4035b7:	popa   
  4035b8:	pushf  
  4035b9:	or     DWORD PTR [ebx],esi
  4035bb:	shr    DWORD PTR [ebx+0xe],cl
  4035be:	cmp    al,0x84
  4035c0:	stc    
  4035c1:	imul   edi,DWORD PTR [edx-0x5a92f70a],0xc645828
  4035cb:	fisub  DWORD PTR [edi]
  4035cd:	arpl   WORD PTR [ebx],di
  4035cf:	out    0x34,eax
  4035d1:	imul   eax,DWORD PTR [esi-0x4e939b83],0x13
  4035d8:	adc    al,0x65
  4035da:	add    BYTE PTR [eax],ah
  4035dc:	imul   eax,DWORD PTR [ebx],0x70ee0f62
  4035e2:	push   es
  4035e3:	mov    DWORD PTR [eax+eiz*4-0x2fe569ff],eax
  4035ea:	or     BYTE PTR [edi],bl
  4035ec:	jo     0x4035ad
  4035ee:	psubsb mm3,QWORD PTR [eax+0xb40b0ac]
  4035f5:	fnsave [edi-0x41743a51]
  4035fb:	push   ss
  4035fc:	aaa    
  4035fd:	jl     0x4035b8
  4035ff:	rcr    DWORD PTR [edi+0x123fdce8],0x19
  403606:	fimul  DWORD PTR [eax+0x19d3478c]
  40360c:	ds cmp ah,dl
  40360f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403610:	inc    edx
  403611:	gs mov dl,0xe8
  403614:	xchg   edi,eax
  403615:	xor    al,0xb5
  403617:	xlat   BYTE PTR ds:[ebx]
  403618:	in     eax,0x3
  40361a:	mov    esp,0xbb137c3e
  40361f:	imul   ebx,DWORD PTR [ebx],0x70e7dfa1
  403625:	jo     0x4035ff
  403627:	mov    al,0xfe
  403629:	mov    edi,0xcf5541d1
  40362e:	(bad)  
  40362f:	dec    esi
  403630:	add    edx,ebx
  403632:	fadd   st(4),st
  403634:	inc    ebx
  403635:	pop    ebp
  403636:	lods   al,BYTE PTR ds:[esi]
  403637:	ret    
  403638:	push   cs
  403639:	scas   eax,DWORD PTR es:[edi]
  40363a:	jnp    0x4035fe
  40363c:	xchg   ebp,eax
  40363d:	cmp    DWORD PTR [ebx-0x45534300],ecx
  403643:	sbb    BYTE PTR [ecx-0x6017bbc2],ah
  403649:	adc    edx,DWORD PTR [esi+0x209c9737]
  40364f:	inc    edi
  403650:	nop
  403651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403652:	in     eax,0x54
  403654:	mov    al,ds:0x9f445332
  403659:	pop    ds
  40365a:	stc    
  40365b:	repz xchg edi,eax
  40365d:	mov    BYTE PTR [edi+0x23],ah
  403660:	xchg   ecx,eax
  403661:	mov    ecx,0x2f8590cc
  403666:	cmp    al,BYTE PTR [eax-0x501fdd7e]
  40366c:	or     DWORD PTR [ecx-0x478320b2],0xfffffff7
  403673:	retf   0x28fb
  403676:	cmp    DWORD PTR [ebx+0x6c0b19f4],0x9c9592ed
  403680:	jmp    0x6829:0xee06debf
  403687:	imul   esi
  403689:	sbb    dl,dh
  40368b:	daa    
  40368c:	call   0xe798b320
  403691:	ret    0x84c9
  403694:	push   ebp
  403695:	aad    0x57
  403697:	xchg   ebp,eax
  403698:	push   edx
  403699:	ins    BYTE PTR es:[edi],dx
  40369a:	in     eax,0xe5
  40369c:	push   ebx
  40369d:	add    esi,DWORD PTR [ebx-0x4a]
  4036a0:	dec    esp
  4036a1:	dec    esi
  4036a2:	rol    BYTE PTR [eax+0x0],0x50
  4036a6:	fmul   QWORD PTR [esi+0x51]
  4036a9:	dec    edi
  4036aa:	gs add ah,bl
  4036ad:	mov    esp,0x6f6a04ab
  4036b2:	stos   DWORD PTR es:[edi],eax
  4036b3:	jae    0x4036b0
  4036b5:	pop    ecx
  4036b6:	fs jecxz 0x40371e
  4036b9:	mov    al,ds:0xeb17945e
  4036be:	push   ebp
  4036bf:	or     eax,0x7a5c7381
  4036c4:	repnz cmc 
  4036c6:	mul    ebx
  4036c8:	pop    esp
  4036c9:	fs stc 
  4036cb:	xchg   edx,eax
  4036cc:	push   cs
  4036cd:	pop    es
  4036ce:	add    cl,BYTE PTR [edx]
  4036d0:	js     0x403689
  4036d2:	(bad)  
  4036d3:	jl     0x403682
  4036d5:	xchg   ecx,eax
  4036d6:	imul   edi
  4036d8:	cmp    edi,DWORD PTR [eax]
  4036da:	cli    
  4036db:	xchg   BYTE PTR [ecx+0xf1e00f0],al
  4036e1:	(bad)  
  4036e3:	push   0xf764ada4
  4036e8:	xor    bh,BYTE PTR [ebp+ebx*2-0x80]
  4036ec:	js     0x40367a
  4036ee:	push   esi
  4036ef:	sbb    DWORD PTR [esi],eax
  4036f1:	lahf   
  4036f2:	pop    ebx
  4036f3:	outs   dx,BYTE PTR ds:[esi]
  4036f4:	pop    edi
  4036f5:	enter  0xfeb2,0xc9
  4036f9:	mov    cl,0xb3
  4036fb:	mov    DWORD PTR [ebx],esi
  4036fd:	pop    ebx
  4036fe:	lods   al,BYTE PTR ds:[esi]
  4036ff:	adc    BYTE PTR [ebp+0x5667a580],bl
  403705:	add    al,0x89
  403707:	stc    
  403708:	rol    BYTE PTR [eax],0xd5
  40370b:	xchg   DWORD PTR [esi+0x178f172a],ecx
  403711:	xchg   esp,eax
  403712:	and    al,0x92
  403714:	pusha  
  403715:	xchg   ecx,eax
  403716:	inc    ecx
  403717:	lods   eax,DWORD PTR ds:[esi]
  403718:	(bad)  
  403719:	pop    ds
  40371a:	or     BYTE PTR [ecx+eiz*4+0x38ab60ad],dh
  403721:	cmp    ebp,DWORD PTR [ebx-0x5a]
  403724:	dec    edi
  403725:	add    ch,dh
  403727:	bound  edi,QWORD PTR [ebx-0x43ec642f]
  40372d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40372e:	adc    DWORD PTR [esi*4-0x4e0f40c1],eax
  403735:	dec    eax
  403736:	fsubrp st(6),st
  403738:	or     al,0xd8
  40373a:	add    bh,dl
  40373c:	or     DWORD PTR [edi+0x360307ea],ebp
  403742:	push   esp
  403743:	cmp    BYTE PTR [ecx+eax*2],al
  403746:	xchg   DWORD PTR [edx-0x64f620a0],ebp
  40374c:	addr16 test al,0xe3
  40374f:	dec    ebx
  403750:	outs   dx,BYTE PTR ds:[esi]
  403751:	xor    ebp,ebp
  403753:	jnp    0x4037be
  403755:	inc    esi
  403756:	nop
  403757:	outs   dx,BYTE PTR ds:[esi]
  403758:	popa   
  403759:	retf   
  40375a:	sahf   
  40375b:	jg     0x4037c3
  40375d:	mov    esp,0x256f8f54
  403762:	jmp    0xc32:0x595268df
  403769:	int3   
  40376a:	pop    es
  40376b:	inc    ebx
  40376c:	or     edi,DWORD PTR [ebx+0x1d3ad00]
  403772:	and    ah,BYTE PTR [ebx]
  403774:	and    al,0x5
  403776:	push   ebp
  403777:	add    bh,dl
  403779:	mov    ecx,0xbcc9acc5
  40377e:	mov    dl,0x46
  403780:	sbb    BYTE PTR [ebx+ebp*1+0x5cb32bb8],dh
  403787:	sub    edi,DWORD PTR [esi-0x734a3d29]
  40378d:	shl    BYTE PTR [ebp+0x2cd95c3f],1
  403793:	shr    DWORD PTR [edi-0x22],1
  403796:	pop    ebx
  403797:	hlt    
  403798:	shl    BYTE PTR [ebx+ebx*4+0x5a],0xb3
  40379d:	arpl   sp,bp
  40379f:	popf   
  4037a0:	dec    edi
  4037a1:	mov    ds:0x72e2086a,eax
  4037a6:	ins    DWORD PTR es:[edi],dx
  4037a7:	lahf   
  4037a8:	xor    bh,dh
  4037aa:	or     BYTE PTR [ecx],dl
  4037ac:	test   BYTE PTR ds:0x5f56760e,cl
  4037b2:	pop    es
  4037b3:	out    dx,eax
  4037b4:	test   al,0x2e
  4037b6:	add    BYTE PTR [eax+0x28bf3a59],ah
  4037bc:	iret   
  4037bd:	dec    ecx
  4037be:	mov    eax,0xb11b7d3f
  4037c3:	(bad)  
  4037c4:	repz jmp 0xfd2:0x7660a9b5
  4037cc:	(bad)  
  4037cd:	test   ebp,edx
  4037cf:	inc    eax
  4037d0:	inc    esp
  4037d1:	xlat   BYTE PTR ds:[ebx]
  4037d2:	fadd   QWORD PTR [eax]
  4037d4:	mov    eax,ds:0xa6dba6fa
  4037d9:	pop    es
  4037da:	mov    dl,0xd3
  4037dc:	sbb    ebx,DWORD PTR [ecx-0xcf32b1f]
  4037e2:	xchg   edx,eax
  4037e3:	fnsave [ebp+0x45]
  4037e6:	sbb    dl,0x9a
  4037e9:	push   cs
  4037ea:	out    dx,al
  4037eb:	mov    ebp,0xb91da01c
  4037f0:	repz stc 
  4037f2:	dec    esi
  4037f3:	mov    al,0x72
  4037f5:	dec    esp
  4037f6:	ds mov bh,0xb5
  4037f9:	mov    ch,0x29
  4037fb:	or     BYTE PTR ds:0xca0f5a2b,ah
  403801:	mov    al,ds:0x173b060a
  403806:	sti    
  403807:	add    BYTE PTR [esp+edi*4+0x32226565],cl
  40380e:	xchg   esi,eax
  40380f:	bound  esp,QWORD PTR [ebp+0x3c6bc667]
  403815:	push   ds
  403816:	mov    bh,0x6c
  403818:	mov    bl,0x2
  40381a:	and    edx,esp
  40381c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40381d:	mov    ds:0xab98b18f,al
  403822:	cmp    eax,0xab349983
  403827:	xchg   edx,eax
  403828:	sahf   
  403829:	or     DWORD PTR [eax],ecx
  40382b:	push   ds
  40382c:	cli    
  40382d:	fwait
  40382e:	jbe    0x40381d
  403830:	retf   0x24b2
  403833:	aas    
  403834:	hlt    
  403835:	cmp    DWORD PTR [edx+0x4cb004e],edx
  40383b:	mov    bl,0x59
  40383d:	ins    BYTE PTR es:[edi],dx
  40383e:	xchg   ebp,eax
  40383f:	cmp    eax,0xcfaa7329
  403844:	cli    
  403845:	arpl   WORD PTR [ebx+0x59],ax
  403848:	or     dl,BYTE PTR [ebp+0xc]
  40384b:	call   0xe665:0x2499f195
  403852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403853:	mov    dh,0xb6
  403855:	out    dx,eax
  403856:	cmp    eax,DWORD PTR [eax-0x3a]
  403859:	push   eax
  40385a:	adc    eax,DWORD PTR ds:0x738650d2
  403860:	rol    DWORD PTR [edi-0x47],0xd9
  403864:	jb     0x4038b4
  403866:	xor    BYTE PTR [edi-0x5e],al
  403869:	xor    DWORD PTR [edi],ebx
  40386b:	in     al,dx
  40386c:	or     eax,0xfd5a88cd
  403871:	shl    DWORD PTR [ebp+0x2ec32ec0],cl
  403877:	cs pop esi
  403879:	hlt    
  40387a:	pop    ds
  40387b:	pop    ss
  40387c:	dec    edx
  40387d:	cmp    ecx,DWORD PTR [edi-0x41c3c55f]
  403883:	jmp    0x40386d
  403885:	cmp    ah,BYTE PTR ds:0x184a1975
  40388b:	inc    BYTE PTR [ebp+0x76888ea6]
  403891:	cdq    
  403892:	mov    edi,0xfdf9d200
  403897:	pop    ecx
  403898:	pop    esp
  403899:	jo     0x40389b
  40389b:	sub    eax,0x29e00e9
  4038a0:	add    BYTE PTR [eax],ch
  4038a2:	scas   al,BYTE PTR es:[edi]
  4038a3:	out    0x18,eax
  4038a5:	imul   edi,edi,0xc
  4038a8:	xor    ch,BYTE PTR [edx-0x12d4ea54]
  4038ae:	xor    edx,DWORD PTR [esi+0x64]
  4038b1:	and    al,0x4d
  4038b3:	dec    ebx
  4038b4:	jge    0x403925
  4038b6:	add    BYTE PTR [eax],ch
  4038b8:	push   esi
  4038b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ba:	retf   
  4038bb:	inc    ecx
  4038bc:	dec    edi
  4038bd:	icebp  
  4038be:	aam    0xa9
  4038c0:	enter  0x15b0,0xc0
  4038c4:	shl    DWORD PTR [ebx+0x61],1
  4038c7:	sar    edx,cl
  4038c9:	and    al,BYTE PTR [esi]
  4038cb:	into   
  4038cc:	jecxz  0x4038c3
  4038ce:	imul   ecx,DWORD PTR [ebp-0x6b1f5354],0x7f8a67b5
  4038d8:	sahf   
  4038d9:	push   ds
  4038da:	add    eax,0xcb8876b
  4038df:	ror    DWORD PTR [edx-0x7],0xbd
  4038e3:	test   eax,0xce693a53
  4038e8:	js     0x403965
  4038ea:	pop    esi
  4038eb:	shl    DWORD PTR [ecx-0x64],cl
  4038ee:	inc    ecx
  4038ef:	xchg   esp,eax
  4038f0:	cs aad 0xc8
  4038f3:	mov    WORD PTR [edi],?
  4038f5:	push   ds
  4038f6:	adc    ch,BYTE PTR [edx+0x1c]
  4038f9:	push   edi
  4038fa:	sbb    eax,0x4140057f
  4038ff:	out    0x81,eax
  403901:	add    DWORD PTR [eax],eax
  403903:	add    bl,BYTE PTR es:[ebx-0x4feb2b4e]
  40390a:	jae    0x403901
  40390c:	or     ebp,DWORD PTR [ecx+0x771b7900]
  403912:	out    0xc8,al
  403914:	sub    ch,BYTE PTR [edi+edi*8+0xb]
  403918:	inc    BYTE PTR [eax-0x2c]
  40391b:	jmp    0x8421:0xe6cd59b7
  403922:	xchg   ebp,eax
  403923:	pop    ss
  403924:	mov    cl,0x9e
  403926:	mov    WORD PTR [eax+eax*1-0x4e],ss
  40392a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40392b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40392c:	dec    edi
  40392d:	test   eax,0xe8a4e2be
  403932:	icebp  
  403933:	and    esi,DWORD PTR [esi-0xd]
  403936:	call   0xc41ebc8b
  40393b:	mov    eax,ds:0x2edac594
  403940:	cwde   
  403941:	pop    ebp
  403942:	pop    ebp
  403943:	out    dx,eax
  403944:	es inc esi
  403946:	inc    esp
  403947:	pushf  
  403948:	jp     0x4039b5
  40394a:	outs   dx,DWORD PTR ds:[esi]
  40394b:	pop    ebp
  40394c:	leave  
  40394d:	jo     0x4039c5
  40394f:	or     bl,BYTE PTR [ebx+0x31]
  403952:	cmp    ebx,ebx
  403954:	jmp    0x40397f
  403956:	and    BYTE PTR [eax+0x590b06bd],bl
  40395c:	push   cs
  40395d:	sbb    al,0x12
  40395f:	mov    bh,0xf
  403961:	inc    esi
  403962:	fbld   TBYTE PTR [esi-0x42]
  403965:	pop    esp
  403966:	mov    BYTE PTR [eax],0x25
  403969:	repnz outs dx,DWORD PTR ds:[esi]
  40396b:	in     eax,dx
  40396c:	aam    0x60
  40396e:	imul   esi,esp,0xfffffff3
  403971:	shr    DWORD PTR [edx],1
  403973:	mov    ebx,0xa231c3b2
  403978:	popa   
  403979:	xor    al,0x1c
  40397b:	mov    DWORD PTR [eax],edx
  40397d:	popw   es
  40397f:	nop
  403980:	mov    edi,0xfe179f82
  403985:	xchg   ebx,eax
  403986:	test   BYTE PTR [esi],cl
  403988:	popf   
  403989:	push   edx
  40398a:	loop   0x403935
  40398c:	adc    BYTE PTR [ebx],0xb3
  40398f:	mov    dl,0x71
  403991:	enter  0xf33d,0x2e
  403995:	inc    ecx
  403996:	dec    esp
  403997:	call   0xc55f2fd3
  40399c:	fsubr  QWORD PTR [edi-0x510a2213]
  4039a2:	push   edx
  4039a3:	jns    0x403932
  4039a5:	out    0x41,eax
  4039a7:	bound  esi,QWORD PTR [eax+esi*1-0xf]
  4039ab:	dec    esi
  4039ac:	pop    edi
  4039ad:	imul   esp,DWORD PTR [eax],0x8daa5654
  4039b3:	adc    eax,0xe7eeb11
  4039b8:	adc    BYTE PTR [esp+ebp*4],ch
  4039bb:	and    eax,DWORD PTR [ebx]
  4039bd:	ins    DWORD PTR es:[edi],dx
  4039be:	fnstsw WORD PTR [eax]
  4039c0:	adc    dh,BYTE PTR [esi+0x6f85a0c8]
  4039c6:	mov    bh,0xbb
  4039c8:	jl     0x4039f2
  4039ca:	imul   edx,DWORD PTR [esi-0x65de5900],0xffffff8d
  4039d1:	mov    ?,WORD PTR [edx+0x73c9cc03]
  4039d7:	hlt    
  4039d8:	(bad)  
  4039d9:	fsub   DWORD PTR [esi+eiz*1]
  4039dc:	cli    
  4039dd:	mov    esp,ebp
  4039df:	push   esi
  4039e0:	loope  0x40396c
  4039e2:	jg     0x403a44
  4039e4:	mov    ebx,0xa02fb647
  4039e9:	add    DWORD PTR ds:[ebx],eax
  4039ec:	lea    esp,ds:0xc961238
  4039f2:	fwait
  4039f3:	fwait
  4039f4:	xlat   BYTE PTR ds:[ebx]
  4039f5:	retf   
  4039f6:	fldcw  WORD PTR [esp+ecx*8-0x26]
  4039fa:	sbb    al,0xbe
  4039fc:	loope  0x4039c7
  4039fe:	pop    ebx
  4039ff:	iret   
  403a00:	cli    
  403a01:	enter  0x4501,0xdb
  403a05:	aas    
  403a06:	xor    al,0xfc
  403a08:	test   eax,0x78b72d44
  403a0d:	push   ecx
  403a0e:	inc    edx
  403a0f:	outs   dx,BYTE PTR ds:[esi]
  403a10:	xchg   DWORD PTR [edx+0x5b],esp
  403a13:	and    DWORD PTR [esi],edx
  403a15:	fwait
  403a16:	sbb    al,ah
  403a18:	out    0x89,al
  403a1a:	adc    DWORD PTR [ebx+0x51e6d533],edx
  403a20:	inc    esp
  403a21:	mov    esi,0x882e4dfd
  403a26:	xchg   DWORD PTR es:[ebp+0x7b],ebx
  403a2a:	aas    
  403a2b:	int3   
  403a2c:	or     al,0x66
  403a2e:	pop    eax
  403a2f:	add    eax,0x516200fc
  403a34:	dec    edx
  403a35:	jno    0x403a43
  403a37:	add    cl,BYTE PTR [ebx-0x37e4e85e]
  403a3d:	iret   
  403a3e:	add    dh,ah
  403a40:	or     cl,al
  403a42:	adc    ebp,ebp
  403a44:	xchg   ebp,eax
  403a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a46:	sub    DWORD PTR [ebp+0x4f],0x47682d3
  403a4d:	xchg   DWORD PTR [edi-0x5b8a4261],ecx
  403a53:	mov    BYTE PTR [edx+0x53c9e2e7],dl
  403a59:	sbb    dh,cl
  403a5b:	rol    BYTE PTR [eax],cl
  403a5d:	dec    edx
  403a5e:	fwait
  403a5f:	mov    ebx,0xa4783ac1
  403a64:	pop    ds
  403a65:	cmp    al,0xca
  403a67:	out    dx,eax
  403a68:	push   ebp
  403a69:	dec    ebx
  403a6a:	mov    ecx,0xa41e9cf8
  403a6f:	sbb    eax,0x68cedd4
  403a74:	sti    
  403a75:	jle    0x403ac5
  403a77:	dec    ebx
  403a78:	cmp    dl,BYTE PTR [eax+0x79005455]
  403a7e:	mov    esp,0xfb87925
  403a83:	inc    ecx
  403a84:	pusha  
  403a85:	out    0x10,eax
  403a87:	test   eax,0xbddb9ee7
  403a8c:	(bad)  
  403a8d:	push   ebp
  403a8e:	push   cs
  403a8f:	rcl    ebp,cl
  403a91:	or     al,0x39
  403a93:	retf   
  403a94:	int3   
  403a95:	ret    
  403a96:	add    BYTE PTR [edi-0x6b7d7c77],ah
  403a9c:	xchg   ecx,eax
  403a9d:	call   0xbbf0:0xb17ef531
  403aa4:	addr16 test al,0x32
  403aa7:	sub    DWORD PTR [ebx-0x65080cc5],eax
  403aad:	and    ah,BYTE PTR [eax+0x6109753b]
  403ab3:	pusha  
  403ab4:	jo     0x403ac6
  403ab6:	ss retf 0x5faf
  403aba:	out    dx,eax
  403abb:	mov    dl,0xb6
  403abd:	inc    esi
  403abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403abf:	pushf  
  403ac0:	fldcw  WORD PTR [ebp+0x5d]
  403ac3:	scas   eax,DWORD PTR es:[edi]
  403ac4:	les    esi,FWORD PTR [edx+ebp*4-0x50]
  403ac8:	pop    esp
  403ac9:	repz jmp 0x403b05
  403acc:	inc    edx
  403acd:	jmp    0xde69:0xc12e7128
  403ad4:	aaa    
  403ad5:	fsubr  DWORD PTR [esi-0x186907bb]
  403adb:	hlt    
  403adc:	in     al,dx
  403add:	lea    ebp,[edx+edx*4]
  403ae0:	add    ah,BYTE PTR [ebp-0x43e4da9b]
  403ae6:	add    ebx,DWORD PTR [ebx]
  403ae8:	inc    ecx
  403ae9:	jno    0x403aad
  403aeb:	sbb    DWORD PTR [eax+ebp*2+0x71],0x30433749
  403af3:	(bad)  
  403af4:	sub    eax,0x5202005a
  403af9:	sub    eax,0x41030015
  403afe:	ss or  al,0x70
  403b01:	scas   eax,DWORD PTR es:[edi]
  403b02:	sbb    ah,BYTE PTR [edi]
  403b04:	mov    eax,ds:0xc63dffe2
  403b09:	add    bl,BYTE PTR [eax-0x7d4c7847]
  403b0f:	mov    al,ds:0x8bade534
  403b14:	cmc    
  403b15:	push   ebp
  403b16:	mov    ch,0x92
  403b18:	retf   0xf4c7
  403b1b:	fisttp QWORD PTR [ebx-0x73b1086]
  403b21:	sub    al,dl
  403b23:	out    dx,eax
  403b24:	sub    DWORD PTR [ecx+ebx*8+0x73e2df6],ebx
  403b2b:	scas   al,BYTE PTR es:[edi]
  403b2c:	in     al,dx
  403b2d:	mov    WORD PTR [edi+esi*4],ds
  403b30:	lahf   
  403b31:	mov    al,ds:0x735e9c31
  403b36:	sub    al,BYTE PTR [ebp-0x359506ef]
  403b3c:	ror    BYTE PTR [ecx+0x70],1
  403b3f:	shl    DWORD PTR [ebx+0x12f85d1f],cl
  403b45:	mov    al,0x45
  403b47:	loope  0x403b1e
  403b49:	mov    ebx,0xb1466dd
  403b4e:	lds    edi,FWORD PTR [edi+0x67]
  403b51:	push   esi
  403b52:	call   0xf325e1ab
  403b57:	dec    ebp
  403b58:	fnstenv [esi-0x4e]
  403b5b:	add    bl,BYTE PTR [eax]
  403b5d:	enter  0x1ba9,0x0
  403b61:	jmp    0x403af3
  403b63:	test   BYTE PTR [eax],dh
  403b65:	call   0xc533:0x7c299f26
  403b6c:	in     al,0xbd
  403b6e:	(bad)  
  403b6f:	fdivp  st(5),st
  403b71:	popf   
  403b72:	ror    edi,1
  403b74:	repz retf 
  403b76:	nop
  403b77:	mov    esi,0x2c47dae8
  403b7c:	test   eax,0xb25cbf1d
  403b81:	xor    al,0x76
  403b83:	or     bl,BYTE PTR [edi-0x7c04d2f1]
  403b89:	neg    BYTE PTR [ebx-0x258ee418]
  403b8f:	sbb    DWORD PTR [edi],eax
  403b91:	jo     0x403bac
  403b93:	inc    esi
  403b94:	sub    dl,BYTE PTR [ebx-0x5dcec8a8]
  403b9a:	aas    
  403b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b9c:	jo     0x403bf3
  403b9e:	jbe    0x403b74
  403ba0:	imul   ebp,esp,0xffffffbd
  403ba3:	add    BYTE PTR [esi+0x17],0xf5
  403ba7:	jno    0x403c06
  403ba9:	(bad)  
  403baa:	cmc    
  403bab:	(bad)  
  403bac:	cli    
  403bad:	push   esi
  403bae:	lods   al,BYTE PTR ds:[esi]
  403baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb0:	loope  0x403c01
  403bb2:	addr16 jns 0x403b81
  403bb5:	je     0x403c15
  403bb7:	mov    bh,dl
  403bb9:	jge    0x403bac
  403bbb:	adc    DWORD PTR [esi-0x731d4fce],edx
  403bc1:	adc    esp,DWORD PTR [ebx+0x34]
  403bc4:	mov    al,ds:0x45223000
  403bc9:	mov    ebx,0x23606d21
  403bce:	sahf   
  403bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd0:	das    
  403bd1:	cmp    BYTE PTR [edi+0x6c14feef],dl
  403bd7:	es push cs
  403bd9:	push   cs
  403bda:	jne    0x403c45
  403bdc:	fwait
  403bdd:	dec    edi
  403bde:	mov    edx,0x9b546ca8
  403be3:	jmp    0x403b9e
  403be5:	jns    0x403c4f
  403be7:	sub    cl,bl
  403be9:	bound  ebx,QWORD PTR [ecx+0x2]
  403bec:	push   es
  403bed:	leave  
  403bee:	lds    eax,FWORD PTR [ebx-0x65414841]
  403bf4:	je     0x403c5d
  403bf6:	mov    ds:0x90962d71,eax
  403bfb:	push   0xa74903e2
  403c00:	mov    ds:0x50be6bf4,eax
  403c05:	and    bh,BYTE PTR [edi]
  403c07:	aad    0x11
  403c09:	push   ebx
  403c0a:	inc    esp
  403c0b:	int3   
  403c0c:	dec    BYTE PTR [esi-0x44]
  403c0f:	dec    edx
  403c10:	aaa    
  403c11:	ds mov bh,0x51
  403c14:	jl     0x403c06
  403c16:	retf   
  403c17:	cmp    BYTE PTR [ebp-0x25e026e1],dh
  403c1d:	mov    DWORD PTR [eax],edx
  403c1f:	out    dx,eax
  403c20:	sbb    bh,BYTE PTR [ebx+0x33]
  403c23:	not    DWORD PTR [edi-0x55]
  403c26:	push   esi
  403c27:	sbb    al,0x99
  403c29:	fadd   QWORD PTR [eax]
  403c2b:	cmp    eax,0x3b29505
  403c30:	pop    ebp
  403c31:	dec    esp
  403c32:	rol    DWORD PTR [eax],0x44
  403c35:	pop    es
  403c36:	xchg   ebp,eax
  403c37:	in     eax,0x2e
  403c39:	mov    esi,0x9135ce63
  403c3e:	cmc    
  403c3f:	mov    eax,?
  403c41:	dec    edi
  403c42:	push   es
  403c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c44:	fild   WORD PTR [edx]
  403c46:	pop    eax
  403c47:	jns    0x403c53
  403c49:	ret    0x8a28
  403c4c:	adc    DWORD PTR [ebp+0x3c],ecx
  403c4f:	cli    
  403c50:	xchg   esp,eax
  403c51:	test   BYTE PTR [ebx-0x7],cl
  403c54:	mov    ecx,edi
  403c56:	sbb    cl,BYTE PTR [edi+eiz*2]
  403c59:	push   es
  403c5a:	jmp    0xb156:0x7f497e14
  403c61:	mov    BYTE PTR [eax-0x34ff5813],dl
  403c67:	lock mov ebp,0xa53a0ac0
  403c6d:	fldenv [ecx+edi*1+0x7f]
  403c71:	adc    al,0x1d
  403c73:	into   
  403c74:	arpl   WORD PTR ds:0x26891fd6,cx
  403c7a:	(bad)  
  403c7b:	ins    BYTE PTR es:[edi],dx
  403c7c:	xchg   ecx,eax
  403c7d:	aas    
  403c7e:	inc    eax
  403c7f:	cli    
  403c80:	retf   
  403c81:	jo     0x403c84
  403c83:	mov    ch,0xc7
  403c85:	imul   esi,DWORD PTR [edx+0x7342a458],0x9c5bbd93
  403c8f:	add    BYTE PTR [ebp+eiz*1-0x24],dh
  403c93:	aad    0x57
  403c95:	cmp    al,0xc5
  403c97:	push   ds
  403c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c99:	dec    edi
  403c9a:	out    dx,al
  403c9b:	push   edi
  403c9c:	test   eax,0x3378f743
  403ca1:	or     DWORD PTR [eax-0x5eefc747],edi
  403ca7:	cli    
  403ca8:	(bad)  
  403ca9:	sti    
  403caa:	mov    DWORD PTR [ebx],edi
  403cac:	dec    edx
  403cad:	out    0x92,al
  403caf:	jmp    0xd6403f52
  403cb4:	(bad)  
  403cb5:	rol    BYTE PTR [ecx],0x7
  403cb8:	push   ebp
  403cb9:	xchg   BYTE PTR [ebx],al
  403cbb:	xor    bl,ch
  403cbd:	inc    esp
  403cbe:	add    ah,BYTE PTR [ebp-0x6df8f60f]
  403cc4:	pop    edi
  403cc5:	mov    DWORD PTR [esi],0x48ddd3b
  403ccb:	fs mov bl,0x4b
  403cce:	add    eax,0xe0feea1
  403cd3:	outs   dx,BYTE PTR ds:[esi]
  403cd4:	xor    al,0xd2
  403cd6:	(bad)  
  403cd8:	sbb    dl,BYTE PTR [ebx+0x54f8480d]
  403cde:	or     al,0x0
  403ce0:	push   eax
  403ce1:	js     0x403cfd
  403ce3:	or     DWORD PTR [edi],esi
  403ce5:	xchg   edx,eax
  403ce6:	fmul   DWORD PTR [eax]
  403ce8:	(bad)  
  403ce9:	stos   DWORD PTR es:[edi],eax
  403cea:	popf   
  403ceb:	or     bh,cl
  403ced:	inc    ebp
  403cee:	pop    esp
  403cef:	or     esp,DWORD PTR [edx+eiz*1]
  403cf2:	es sbb al,0x0
  403cf5:	inc    ebx
  403cf6:	enter  0x1de4,0xea
  403cfa:	cmc    
  403cfb:	mov    eax,ds:0x601bdd1f
  403d00:	push   ds
  403d01:	dec    eax
  403d02:	or     DWORD PTR [edi],ebp
  403d04:	sbb    edi,DWORD PTR [edi]
  403d06:	fucomip st,st(4)
  403d08:	sbb    al,BYTE PTR [esi-0x2ee75423]
  403d0e:	xor    ebp,DWORD PTR [ecx+0x19]
  403d11:	or     al,0x71
  403d13:	xor    eax,0xf796db12
  403d18:	adc    esp,DWORD PTR [edx]
  403d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d1b:	mov    al,0x11
  403d1d:	and    eax,0xc010734b
  403d22:	pop    eax
  403d23:	cmp    al,0x15
  403d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d26:	scas   al,BYTE PTR es:[edi]
  403d27:	std    
  403d28:	adc    al,0xce
  403d2a:	mov    BYTE PTR [eax+0x7a6aa916],bh
  403d30:	pop    ss
  403d31:	adc    al,0x40
  403d33:	dec    ebp
  403d34:	cmp    BYTE PTR [ebx],dh
  403d36:	stos   BYTE PTR es:[edi],al
  403d37:	mov    ?,WORD PTR [ecx]
  403d39:	cli    
  403d3a:	xchg   ebx,eax
  403d3b:	leave  
  403d3c:	cmp    ecx,ebp
  403d3e:	jge    0x403d4b
  403d40:	cmp    bl,BYTE PTR [eax+0x68]
  403d43:	inc    esp
  403d44:	aas    
  403d45:	dec    edi
  403d46:	add    BYTE PTR [esi-0x404349c2],0x3c
  403d4d:	mov    eax,ds:0x5c3d024e
  403d52:	divps  xmm6,XMMWORD PTR [esi]
  403d55:	imul   edi,ecx,0xffffff9b
  403d58:	aaa    
  403d59:	add    BYTE PTR [ebp+0x70dac119],bl
  403d5f:	stos   BYTE PTR es:[edi],al
  403d60:	push   0x18
  403d62:	imul   esp,DWORD PTR [edi],0x3ccc577c
  403d68:	(bad)  
  403d69:	xchg   ebp,eax
  403d6a:	int    0x45
  403d6c:	sub    bl,dl
  403d6e:	iret   
  403d6f:	push   es
  403d70:	add    dl,BYTE PTR [ecx]
  403d72:	into   
  403d73:	cmp    esp,DWORD PTR [esi-0x73bf3e95]
  403d79:	test   eax,0xeef211b8
  403d7e:	ret    0x57e2
  403d81:	sub    eax,0x624e6fbb
  403d86:	jle    0x403d0c
  403d88:	in     al,0x9f
  403d8a:	jg     0x403d59
  403d8c:	call   0x7c24:0xb0ce7de6
  403d93:	adc    esi,DWORD PTR [eax+0x78]
  403d96:	xchg   DWORD PTR [eax-0x16794527],edi
  403d9c:	and    edi,esp
  403d9e:	je     0x403dfa
  403da0:	push   cs
  403da1:	ds jne 0x403e1b
  403da4:	sbb    BYTE PTR [ecx-0x38],dh
  403da7:	ins    BYTE PTR es:[edi],dx
  403da8:	xor    dh,BYTE PTR [ebx-0xa33aa3f]
  403dae:	mov    ebx,0xb2376636
  403db3:	imul   ecx,DWORD PTR [ecx-0x5c6f1266],0x58
  403dba:	in     al,dx
  403dbb:	inc    ecx
  403dbc:	pop    ebp
  403dbd:	push   ds
  403dbe:	add    dh,ch
  403dc0:	xor    dh,bh
  403dc2:	fucomi st,st(7)
  403dc4:	lahf   
  403dc5:	loopne 0x403d59
  403dc7:	rcl    ah,cl
  403dc9:	dec    edx
  403dca:	push   ecx
  403dcb:	retf   
  403dcc:	mov    ebp,0xded117b4
  403dd1:	sahf   
  403dd2:	aad    0xc8
  403dd4:	add    ah,cl
  403dd6:	xlat   BYTE PTR ds:[ebx]
  403dd7:	and    al,0x38
  403dd9:	scas   al,BYTE PTR es:[edi]
  403dda:	jno    0x403dc2
  403ddc:	cmp    edi,edi
  403dde:	or     ebx,DWORD PTR [eax+0x52260837]
  403de4:	lea    esi,ss:[eax]
  403de7:	sbb    eax,0x5f1a5a3b
  403dec:	cmp    ah,BYTE PTR [ebx]
  403dee:	mov    eax,fs:0xdbce2c3c
  403df4:	cmp    al,0x59
  403df6:	jmp    0x2773:0x40662636
  403dfd:	aaa    
  403dfe:	mov    esi,0x940029a5
  403e03:	out    0x27,eax
  403e05:	xchg   ebp,eax
  403e06:	adc    DWORD PTR [eax],0x4aa7a22d
  403e0c:	sub    al,0xeb
  403e0e:	push   ebp
  403e0f:	mov    WORD PTR [edx],gs
  403e11:	mov    ah,0xfb
  403e13:	iret   
  403e14:	sub    dh,cl
  403e16:	cmp    cl,BYTE PTR [edx]
  403e18:	and    al,0x1e
  403e1a:	adc    DWORD PTR [eax+0x25],eax
  403e1d:	dec    edi
  403e1e:	outs   dx,DWORD PTR ds:[esi]
  403e1f:	jbe    0x403e44
  403e21:	cmp    ch,al
  403e23:	add    BYTE PTR [ecx+eiz*1+0x1e43d29d],dh
  403e2a:	retf   0xf978
  403e2d:	push   ds
  403e2e:	jae    0x403e36
  403e30:	mov    edi,0x7d2c5c20
  403e35:	and    cl,cl
  403e37:	into   
  403e38:	push   edx
  403e39:	dec    ebx
  403e3a:	mul    BYTE PTR [eax+ecx*4+0x49]
  403e3e:	daa    
  403e3f:	sbb    ecx,esi
  403e41:	dec    ebx
  403e42:	adc    BYTE PTR [ecx],dh
  403e44:	or     al,0x4d
  403e46:	test   DWORD PTR [esi],esp
  403e48:	jnp    0x403e92
  403e4a:	mov    dl,0xc
  403e4c:	mov    cl,0x48
  403e4e:	add    BYTE PTR [ebx-0x31],bl
  403e51:	pop    esp
  403e52:	dec    esp
  403e53:	inc    esp
  403e54:	gs fwait
  403e56:	dec    ebp
  403e57:	sbb    DWORD PTR [eax],0xee8e46bf
  403e5d:	add    BYTE PTR [edi+0x5f],al
  403e60:	aam    0x42
  403e62:	inc    ebp
  403e63:	sub    BYTE PTR [edx-0x7e],al
  403e66:	inc    esp
  403e67:	lods   eax,DWORD PTR ds:[esi]
  403e68:	adc    bh,al
  403e6a:	inc    ecx
  403e6b:	mov    edx,0x3400776
  403e70:	aas    
  403e71:	dec    edx
  403e72:	inc    edx
  403e73:	int3   
  403e74:	sbb    cl,BYTE PTR [ebx+eax*2+0x54b1c6b9]
  403e7b:	xchg   BYTE PTR [eax+0x72d754f3],bl
  403e81:	sub    eax,0x6fcce057
  403e86:	push   esi
  403e87:	jne    0x403e89
  403e89:	fidivr WORD PTR [edx-0x3bfbdad]
  403e8f:	push   ecx
  403e90:	or     ebx,DWORD PTR [edx-0x7bebafca]
  403e96:	js     0x403ee9
  403e98:	shl    DWORD PTR [esi+0x48be5aa1],1
  403e9e:	loop   0x403efa
  403ea0:	outs   dx,DWORD PTR ds:[esi]
  403ea1:	add    ah,BYTE PTR [ecx]
  403ea3:	pop    ecx
  403ea4:	cwde   
  403ea5:	sbb    al,0x5f
  403ea7:	pop    eax
  403ea8:	std    
  403ea9:	das    
  403eaa:	stos   DWORD PTR es:[edi],eax
  403eab:	pop    ebp
  403eac:	jmp    0x27ca:0x135be951
  403eb3:	pop    esi
  403eb4:	cmp    al,0x74
  403eb6:	pop    di
  403eb8:	imul   ebx,DWORD PTR [eax-0x51a91f13],0x5487e0af
  403ec2:	jno    0x403ea6
  403ec4:	mov    al,0xc2
  403ec6:	xor    esp,ebx
  403ec8:	add    BYTE PTR [eax-0x5019c3d3],al
  403ece:	(bad)  
  403ed0:	out    0x6,eax
  403ed2:	loop   0x403e8b
  403ed4:	in     eax,0x39
  403ed6:	add    BYTE PTR [edx-0x1c],bh
  403ed9:	jl     0x403f23
  403edb:	es out dx,eax
  403edd:	inc    ebx
  403ede:	mov    ds:0x98eaeee3,eax
  403ee3:	mov    ds:0x606755ec,al
  403ee8:	in     eax,dx
  403ee9:	push   0xe82f60
  403eee:	mov    bh,0x86
  403ef0:	in     eax,dx
  403ef1:	jmp    0xebeaf374
  403ef6:	jno    0x403f52
  403ef8:	imul   ebp,edx,0xfd133694
  403efe:	mov    ebx,0x72fcd1d0
  403f03:	jmp    0xff55:0x45dfe96
  403f0a:	lock adc bl,BYTE PTR [edx]
  403f0d:	cli    
  403f0e:	mov    edi,0xf6fbd7f4
  403f13:	jbe    0x403eb3
  403f15:	stc    
  403f16:	dec    ecx
  403f17:	sub    DWORD PTR [eax+edi*8+0x6c],ebx
  403f1b:	imul   eax,DWORD PTR [eax],0xfffffff3
  403f1e:	push   ebx
  403f1f:	jge    0x403ee3
  403f21:	repnz call 0x4651:0xa5f083af
  403f29:	icebp  
  403f2a:	clc    
  403f2b:	inc    eax
  403f2c:	or     esp,esi
  403f2e:	daa    
  403f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f30:	retf   0x4ef5
  403f33:	test   DWORD PTR [ebp+0x4f7b21f7],ecx
  403f39:	mul    BYTE PTR [ebp+ecx*2-0x4c542688]
  403f40:	mov    ecx,0x8a9d9dd8
  403f45:	cld    
  403f46:	inc    edi
  403f47:	shl    DWORD PTR [esi+edi*1+0x71ae4076],cl
  403f4e:	jae    0x403f81
  403f50:	cwde   
  403f51:	mov    bl,0x0
  403f53:	push   0xffffff9a
  403f55:	loop   0x403f4b
  403f57:	pusha  
  403f58:	jg     0x403fa6
  403f5a:	aaa    
  403f5b:	pop    ecx
  403f5c:	inc    esp
  403f5d:	pop    es
  403f5e:	imul   ecx,DWORD PTR [edx+0x45],0x21
  403f62:	test   eax,0xefdb9653
  403f67:	dec    ecx
  403f68:	sub    esi,DWORD PTR [ebp+0x2d]
  403f6b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f6d:	pop    edi
  403f6e:	(bad)  
  403f6f:	in     eax,dx
  403f70:	mov    eax,0xc1eca0c9
  403f75:	xor    esp,esi
  403f77:	out    dx,al
  403f78:	xchg   BYTE PTR ds:0xb9bbcf24,bl
  403f7e:	pop    esi
  403f7f:	fdivr  DWORD PTR [edi+ecx*4-0x12721e64]
  403f86:	(bad)  
  403f88:	bound  eax,QWORD PTR [ebx+0x18]
  403f8b:	loop   0x403f7c
  403f8d:	push   eax
  403f8e:	push   edi
  403f8f:	fild   WORD PTR [eax]
  403f91:	not    DWORD PTR [esi+ebx*8-0x232c7ab7]
  403f98:	dec    esi
  403f99:	stos   DWORD PTR es:[edi],eax
  403f9a:	adc    ebp,ebx
  403f9c:	xchg   ebx,eax
  403f9d:	addr16 dec ebp
  403f9f:	out    0x34,al
  403fa1:	ror    DWORD PTR [edi-0x36c49a29],0xd5
  403fa8:	ficom  DWORD PTR ds:0xfef7640b
  403fae:	inc    ebx
  403faf:	popa   
  403fb0:	call   0xd198c5dd
  403fb5:	rol    al,cl
  403fb7:	add    BYTE PTR [edx-0x4a],dl
  403fba:	jl     0x403fbe
  403fbc:	imul   eax,DWORD PTR [edx],0x29
  403fbf:	mov    es,WORD PTR [edx-0x6d]
  403fc2:	push   ss
  403fc3:	mov    eax,0x41c792f8
  403fc8:	mov    dh,0x90
  403fca:	lock jmp 0x404012
  403fcd:	xchg   ecx,eax
  403fce:	gs idiv al
  403fd1:	mov    edx,DWORD PTR [edx+0x50]
  403fd4:	ror    DWORD PTR [ebp-0x70805585],0xa4
  403fdb:	test   BYTE PTR ds:0xf1bf618e,bh
  403fe1:	xchg   esp,eax
  403fe2:	imul   ebp,DWORD PTR cs:[ebx+0x65137f94],0x173d8896
  403fed:	xchg   edi,eax
  403fee:	or     eax,0xda9a4827
  403ff3:	add    BYTE PTR [edx-0x33855c65],dl
  403ff9:	cdq    
  403ffa:	lods   al,BYTE PTR ds:[esi]
  403ffb:	aam    0xee
  403ffd:	xchg   edi,eax
  403ffe:	f2xm1  
  404000:	and    eax,0x5656e687
  404005:	xchg   BYTE PTR [edi-0x7f7b6f5c],dh
  40400b:	mov    ch,dl
  40400d:	test   BYTE PTR ds:0x22881d99,dl
  404013:	scas   eax,DWORD PTR es:[edi]
  404014:	pop    edi
  404015:	mov    DWORD PTR [ebx+0x4d],ebp
  404018:	cdq    
  404019:	mov    esi,DWORD PTR [ebx+eiz*8]
  40401c:	add    al,ah
  40401e:	mov    DWORD PTR [ecx+0x1f],esi
  404021:	pop    ss
  404022:	sbb    DWORD PTR [esi-0x307fbafb],0xb8828373
  40402c:	fnstcw WORD PTR [ecx-0x7e]
  40402f:	sbb    eax,0x4a7f2ec8
  404034:	pop    esi
  404035:	in     al,dx
  404036:	jge    0x404038
  404038:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403a:	or     eax,DWORD PTR [edi-0x79325324]
  404040:	dec    ecx
  404041:	dec    esi
  404042:	mov    eax,ds:0xe2e476a9
  404047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404049:	bound  ebx,QWORD PTR [esi]
  40404b:	stos   BYTE PTR es:[edi],al
  40404c:	nop
  40404d:	sbb    BYTE PTR [esi-0x55],0x5
  404051:	xchg   ecx,eax
  404052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404053:	scas   al,BYTE PTR es:[edi]
  404054:	xor    ch,BYTE PTR [edi-0x45245117]
  40405a:	and    ebp,DWORD PTR [ebp-0x539a073c]
  404060:	add    DWORD PTR [eax],ebx
  404062:	mov    dl,0xa7
  404064:	push   cs
  404065:	imul   bh
  404067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404068:	(bad)  
  40406a:	sub    eax,0x6d13a8a4
  40406f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404070:	sub    eax,0x3aa0ac01
  404075:	pop    edi
  404076:	clc    
  404077:	mov    al,ds:0xa3374583
  40407c:	dec    esp
  40407d:	sub    esi,DWORD PTR [ebp-0x5e]
  404080:	cmp    DWORD PTR [eax],eax
  404082:	scas   eax,DWORD PTR es:[edi]
  404083:	mov    esi,0xfc8906b5
  404088:	mov    bl,0x57
  40408a:	inc    ebx
  40408b:	inc    edx
  40408c:	mov    dh,0x60
  40408e:	in     eax,0x80
  404090:	mov    bh,0xf5
  404092:	test   ebp,0x351c2b2
  404098:	mov    bl,0x8b
  40409a:	fwait
  40409b:	dec    ecx
  40409c:	mov    cl,0x94
  40409e:	jge    0x404027
  4040a0:	mov    al,0x51
  4040a2:	mov    edi,0x593ebbcc
  4040a7:	or     eax,0x4ff0efba
  4040ac:	mov    eax,0xb9913518
  4040b1:	add    BYTE PTR [eax],dl
  4040b3:	mov    esi,ebx
  4040b5:	mov    esp,0xbd1c5ef7
  4040ba:	cs dec esp
  4040bc:	pop    edx
  4040bd:	mov    edi,0xbe97b239
  4040c2:	test   bh,bh
  4040c4:	(bad)  
  4040c5:	jmp    DWORD PTR [ecx-0x4743eb]
  4040cb:	(bad)  
  4040cc:	or     DWORD PTR [edx+0x12b51dda],ebp
  4040d2:	mov    bl,0x85
  4040d4:	bound  ecx,QWORD PTR [edi+0x37de6f06]
  4040da:	sub    BYTE PTR [ebp+0x6b],cl
  4040dd:	and    eax,0x9dd6b66d
  4040e2:	retf   
  4040e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e4:	mov    bl,0xc5
  4040e6:	add    BYTE PTR [esi+0x507d083d],ch
  4040ec:	pop    edi
  4040ed:	mov    ebp,0x136056f
  4040f2:	xlat   BYTE PTR ds:[ebx]
  4040f3:	sbb    al,0x2d
  4040f5:	(bad)  
  4040f6:	dec    edx
  4040f7:	test   eax,0x7f26ad6
  4040fc:	out    0xde,al
  4040fe:	loopne 0x404112
  404100:	packsswb mm3,QWORD PTR [eax+0x1b]
  404104:	inc    ebp
  404105:	sbb    DWORD PTR [eax-0x42],edx
  404108:	scas   al,BYTE PTR es:[edi]
  404109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410a:	call   0xfa50ceef
  40410f:	xor    eax,0x8c42ac77
  404114:	mov    esi,0x5559df7b
  404119:	(bad)  
  40411a:	test   DWORD PTR ds:0x7572,0xcdcddde2
  404123:	push   esp
  404124:	in     eax,dx
  404125:	lods   al,BYTE PTR ds:[esi]
  404126:	xchg   ebp,eax
  404127:	mov    cl,0x16
  404129:	adc    DWORD PTR ds:0xa46cd09d,ebp
  40412f:	fisub  DWORD PTR [ecx]
  404131:	rcr    DWORD PTR [eax],cl
  404133:	sbb    al,BYTE PTR [ecx]
  404135:	lods   al,BYTE PTR ds:[esi]
  404136:	iret   
  404137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404138:	fld    QWORD PTR [ebx+esi*2-0x3a1c77c1]
  40413f:	sub    eax,0xa57a3c63
  404144:	test   eax,0x453d3264
  404149:	int3   
  40414a:	mov    es,WORD PTR [eax]
  40414c:	test   DWORD PTR [esi+0x1c],ecx
  40414f:	cmp    esp,DWORD PTR [edi+0xf87036b]
  404155:	adc    edi,esp
  404157:	dec    edi
  404158:	jp     0x4040f9
  40415a:	push   esp
  40415b:	in     al,dx
  40415c:	sub    bh,BYTE PTR [esi-0x4d]
  40415f:	pop    ecx
  404160:	and    BYTE PTR [ecx],ch
  404162:	mov    ebp,fs
  404164:	jo     0x404150
  404166:	jnp    0x4040ee
  404168:	rcl    BYTE PTR [edi+0x76403aa3],0x44
  40416f:	(bad)
  404173:	xor    cl,BYTE PTR [edx-0x81becdf]
  404179:	cmp    al,0x2c
  40417b:	pop    eax
  40417c:	outs   dx,DWORD PTR ds:[esi]
  40417d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40417e:	fucomi st,st(5)
  404180:	pop    ebp
  404181:	ret    
  404182:	je     0x4041d5
  404184:	cmc    
  404185:	cmp    bh,BYTE PTR [ebx-0x6c1812d5]
  40418b:	xchg   edi,eax
  40418c:	push   ebp
  40418d:	(bad)
  404190:	ja     0x404122
  404192:	dec    esp
  404193:	sahf   
  404194:	mov    edi,0x4a4923b1
  404199:	dec    esp
  40419a:	or     esi,ebp
  40419c:	fidiv  DWORD PTR [esi]
  40419e:	pop    esp
  40419f:	inc    eax
  4041a0:	rcl    bl,1
  4041a2:	ret    
  4041a3:	cld    
  4041a4:	inc    eax
  4041a5:	add    dh,BYTE PTR [edi]
  4041a7:	aam    0xa
  4041a9:	clc    
  4041aa:	adc    DWORD PTR [ebx+0x7e],edi
  4041ad:	jg     0x40415b
  4041af:	or     al,0x0
  4041b1:	xor    edx,DWORD PTR [ecx-0x1638cc77]
  4041b7:	fisttp WORD PTR [edx-0x78]
  4041ba:	ins    BYTE PTR es:[edi],dx
  4041bb:	cmp    eax,0x5b04dde4
  4041c0:	xor    DWORD PTR [ecx+0x12],0xffffffb6
  4041c4:	pushf  
  4041c5:	in     eax,0x5a
  4041c7:	in     al,0x4b
  4041c9:	xchg   ecx,eax
  4041ca:	lea    eax,[ecx-0xd]
  4041cd:	cmp    ah,ch
  4041cf:	pop    esi
  4041d0:	xchg   esp,eax
  4041d1:	mov    eax,0xfcbbb9f3
  4041d6:	jp     0x4041eb
  4041d8:	ret    
  4041d9:	rcl    DWORD PTR [esi],cl
  4041db:	out    dx,al
  4041dc:	pop    ebx
  4041dd:	push   edi
  4041de:	pop    esi
  4041df:	mov    BYTE PTR [ebx],cl
  4041e1:	mov    edx,0x5e246570
  4041e6:	or     BYTE PTR [ebx],bh
  4041e8:	xor    al,0xfd
  4041ea:	dec    edi
  4041eb:	xchg   esi,eax
  4041ec:	sbb    eax,DWORD PTR [ecx+0x446bb0a8]
  4041f2:	mov    dh,0xd
  4041f4:	shr    DWORD PTR [eax-0x205493c2],cl
  4041fa:	ror    BYTE PTR [ecx-0x7c],cl
  4041fd:	sbb    DWORD PTR [ebx],0xffffffe7
  404200:	loop   0x4041e9
  404202:	sub    al,0xc2
  404204:	cmp    ebp,DWORD PTR [edx-0x3b]
  404207:	dec    ebx
  404208:	add    ebx,DWORD PTR [eax+0x2c1c26bd]
  40420e:	xor    eax,0x23a1cac0
  404213:	popf   
  404214:	arpl   WORD PTR [eax],ax
  404216:	adc    eax,0x3a8bfccb
  40421b:	inc    esi
  40421c:	pop    ecx
  40421d:	mov    bl,0xee
  40421f:	lods   eax,DWORD PTR ds:[esi]
  404220:	add    BYTE PTR [edi+0x4e],dh
  404223:	sub    dh,ch
  404225:	shl    BYTE PTR [edi-0x49cba936],cl
  40422b:	imul   ecx,DWORD PTR [esi],0xb6075911
  404231:	scas   eax,DWORD PTR es:[edi]
  404232:	aas    
  404233:	jae    0x4041d9
  404235:	mov    dl,BYTE PTR [esi]
  404237:	call   FWORD PTR [ebx]
  404239:	jecxz  0x404249
  40423b:	int3   
  40423c:	cmp    DWORD PTR [esi],0x58392866
  404242:	(bad)  
  404243:	aam    0x2b
  404245:	mov    ch,0x8f
  404247:	and    BYTE PTR [ebx+0x3ae927ea],dl
  40424d:	pop    es
  40424e:	or     DWORD PTR [ebp-0x1eb09e7d],ecx
  404254:	nop
  404255:	jl     0x40423d
  404257:	xchg   ebx,eax
  404258:	sub    DWORD PTR ds:0xb8b44681,ebx
  40425e:	xchg   edi,eax
  40425f:	stos   BYTE PTR es:[edi],al
  404260:	or     al,0x96
  404262:	(bad)  
  404263:	cmp    eax,0xb25f331e
  404268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404269:	push   ebp
  40426a:	dec    edi
  40426b:	xchg   ebp,eax
  40426c:	(bad)  
  40426d:	jo     0x404225
  40426f:	loopne 0x4042b6
  404271:	into   
  404272:	mov    bh,0x8b
  404274:	push   esp
  404275:	jmp    0x404245
  404277:	out    0xeb,eax
  404279:	add    BYTE PTR [eax],0xc6
  40427c:	mov    dl,0x71
  40427e:	pop    ds
  40427f:	(bad)  
  404280:	cmp    ecx,ecx
  404282:	stc    
  404283:	push   ds
  404284:	stos   BYTE PTR es:[edi],al
  404285:	fist   DWORD PTR [edi+eax*2+0x7e856346]
  40428c:	out    dx,eax
  40428d:	push   0x20
  40428f:	xlat   BYTE PTR ds:[ebx]
  404290:	adc    ebx,0xfffffffe
  404293:	mov    dh,0xf8
  404295:	rcr    BYTE PTR [ebx+0x797c9f],0x8f
  40429c:	lods   al,BYTE PTR ds:[esi]
  40429d:	pop    esp
  40429e:	in     al,0x52
  4042a0:	push   ebx
  4042a1:	loope  0x4042ff
  4042a3:	add    al,0x75
  4042a5:	push   esp
  4042a6:	dec    esi
  4042a7:	fnstcw WORD PTR [ebx-0x18]
  4042aa:	test   BYTE PTR [edi+0x2e],0x8b
  4042ae:	scas   al,BYTE PTR es:[edi]
  4042af:	stos   BYTE PTR es:[edi],al
  4042b0:	bound  esi,QWORD PTR [edi]
  4042b2:	push   ss
  4042b3:	ins    BYTE PTR es:[edi],dx
  4042b4:	inc    esi
  4042b5:	add    BYTE PTR [ecx+eax*1],0x9a
  4042b9:	cmp    eax,0xe91198bc
  4042be:	and    DWORD PTR [ebp+0x239954de],esi
  4042c4:	leave  
  4042c5:	loopne 0x404252
  4042c7:	ds ss pop esp
  4042ca:	xor    edi,DWORD PTR [edi+0x29]
  4042cd:	pop    ecx
  4042ce:	in     eax,dx
  4042cf:	mov    ds:0xf455e5d3,al
  4042d4:	hlt    
  4042d5:	dec    edi
  4042d6:	inc    edi
  4042d7:	or     ebx,edi
  4042d9:	jmp    0x4042da
  4042db:	mov    al,0xa3
  4042dd:	cmp    ah,BYTE PTR [edx+0x0]
  4042e0:	dec    ebp
  4042e1:	cmp    DWORD PTR [edi+0x328b2bda],eax
  4042e7:	enter  0x84c6,0x8e
  4042eb:	jo     0x404355
  4042ed:	xchg   esp,eax
  4042ee:	in     eax,dx
  4042ef:	sub    BYTE PTR ds:0x5390515b,al
  4042f5:	dec    ecx
  4042f6:	in     al,0x82
  4042f8:	scas   al,BYTE PTR es:[edi]
  4042f9:	mov    bl,0x57
  4042fb:	cmp    dh,BYTE PTR [edi-0x55]
  4042fe:	mov    fs,WORD PTR [edi+0x1f32e45a]
  404304:	cld    
  404305:	ret    
  404306:	xchg   BYTE PTR ds:0xb53a1931,cl
  40430c:	pop    eax
  40430d:	arpl   WORD PTR [eax-0x43],ax
  404310:	mov    ch,0x7c
  404312:	cld    
  404313:	add    eax,0x48dac89d
  404318:	stos   BYTE PTR es:[edi],al
  404319:	arpl   WORD PTR [ecx-0xb],ax
  40431c:	cli    
  40431d:	stos   DWORD PTR es:[edi],eax
  40431e:	cmp    DWORD PTR [edx],esp
  404320:	(bad)  
  404321:	push   edi
  404322:	adc    ebx,DWORD PTR [esi+0x2b713127]
  404328:	adc    eax,0x7d97cabe
  40432d:	hlt    
  40432e:	mov    edx,0x61ff25f4
  404333:	dec    eax
  404334:	pop    ebp
  404335:	pop    esp
  404336:	add    bh,ch
  404338:	outs   dx,DWORD PTR ds:[esi]
  404339:	xchg   DWORD PTR [ecx],ebp
  40433b:	inc    ecx
  40433c:	mul    DWORD PTR [edi+0x438a9651]
  404342:	jmp    0x40436d
  404344:	add    dl,ch
  404346:	dec    esp
  404347:	cdq    
  404348:	lahf   
  404349:	shr    BYTE PTR [ecx-0x4e],1
  40434c:	and    eax,DWORD PTR [eax-0x2f94f561]
  404352:	sti    
  404353:	xor    edi,edx
  404355:	push   eax
  404356:	shl    BYTE PTR es:[edx+0x3a],cl
  40435a:	cmp    DWORD PTR [ecx-0x22],0x98209ea
  404361:	pop    edi
  404362:	jne    0x4042fe
  404364:	mov    ch,0xb7
  404366:	xchg   edx,eax
  404367:	dec    ecx
  404368:	add    ch,al
  40436a:	(bad)  
  40436c:	mov    ebx,0xdef2524d
  404371:	adc    eax,0xcd63591d
  404376:	mov    edx,0xa7bfd6aa
  40437b:	xchg   ecx,eax
  40437c:	push   0x27
  40437e:	xchg   DWORD PTR [ecx-0x43],ebp
  404381:	call   0x21ae:0x3a01c1e3
  404388:	mov    ah,0x40
  40438a:	mov    edx,edi
  40438c:	pop    es
  40438d:	nop
  40438e:	add    al,BYTE PTR [ebx+0x1e0f6f41]
  404394:	(bad)  
  404396:	addr16 clc 
  404398:	mov    DWORD PTR [esi+0x75],edx
  40439b:	xchg   ebp,eax
  40439c:	mov    ds:0xca33fde2,al
  4043a1:	lods   eax,DWORD PTR ds:[esi]
  4043a2:	nop
  4043a3:	push   ecx
  4043a4:	jno    0x4043af
  4043a6:	fldcw  WORD PTR [esi-0x156bffee]
  4043ac:	leave  
  4043ad:	cmp    DWORD PTR [eax],eax
  4043af:	sbb    DWORD PTR [esi+eiz*1-0x25],0xffffffca
  4043b4:	stc    
  4043b5:	add    al,0x17
  4043b7:	and    edx,edi
  4043b9:	pop    esi
  4043ba:	bound  esi,QWORD PTR [eax]
  4043bc:	jb     0x40437b
  4043be:	push   cs
  4043bf:	mov    ecx,0x5539b50b
  4043c4:	es xchg esi,eax
  4043c6:	xchg   ebp,eax
  4043c7:	popf   
  4043c8:	sub    ch,0x41
  4043cb:	scas   eax,DWORD PTR es:[edi]
  4043cc:	popf   
  4043cd:	dec    esi
  4043ce:	mov    WORD PTR [edi-0x11],es
  4043d1:	popf   
  4043d2:	shl    BYTE PTR [edx+ecx*1],1
  4043d5:	jge    0x404423
  4043d7:	mov    esp,0xcedee664
  4043dc:	add    DWORD PTR [ebp+0x45],0x722d1826
  4043e3:	stos   DWORD PTR es:[edi],eax
  4043e4:	mov    ch,0xd
  4043e6:	push   cs
  4043e7:	inc    ebx
  4043e8:	xchg   ebx,eax
  4043e9:	jne    0x404466
  4043eb:	push   ecx
  4043ec:	cs (bad) 
  4043ee:	pop    es
  4043ef:	cdq    
  4043f0:	push   eax
  4043f1:	(bad)  
  4043f2:	and    al,0x71
  4043f4:	ins    DWORD PTR es:[edi],dx
  4043f5:	gs pusha 
  4043f7:	stc    
  4043f8:	retf   0x2fd
  4043fb:	or     esp,esi
  4043fd:	sbb    al,0x59
  4043ff:	arpl   WORD PTR [edi+0x21ee2655],ax
  404405:	test   bl,0x86
  404408:	add    ah,bh
  40440a:	and    DWORD PTR [eax+0x38009996],edx
  404410:	fsubr  QWORD PTR ds:0x26567080
  404416:	sbb    eax,0xfb9e99eb
  40441b:	mov    DWORD PTR [edi-0x74],ecx
  40441e:	xchg   esi,eax
  40441f:	mov    al,0xa3
  404421:	xor    al,0x37
  404423:	jecxz  0x40441b
  404425:	test   al,0x52
  404427:	js     0x4044a1
  404429:	adc    DWORD PTR [eax+edi*8+0x21c902ec],ebp
  404430:	cmp    DWORD PTR [ebx-0x1c5df7a1],0x5b4f50fa
  40443a:	aam    0xe1
  40443c:	cdq    
  40443d:	dec    ecx
  40443e:	jno    0x4044b8
  404440:	push   edi
  404441:	icebp  
  404442:	or     BYTE PTR [ebx-0x3fda9380],bl
  404448:	in     al,dx
  404449:	rol    DWORD PTR [ebx-0x613987d0],cl
  40444f:	leave  
  404450:	repz jge 0x404434
  404453:	fldcw  WORD PTR [ebx]
  404455:	(bad)  
  404456:	cmp    al,0x43
  404458:	shr    DWORD PTR [esi+0x5a],0xd1
  40445c:	xor    al,0x7c
  40445e:	mov    bh,0x28
  404460:	mov    ecx,0xe6b16c4
  404465:	pop    ecx
  404466:	repz mov cl,0x61
  404469:	loope  0x4043f8
  40446b:	mov    al,ds:0x7968f316
  404470:	pop    edx
  404471:	dec    ebx
  404472:	add    BYTE PTR ds:[ecx+0x189b13b7],al
  404479:	xor    eax,0xc079b5ab
  40447e:	mov    ecx,0x12ce310
  404483:	add    BYTE PTR [ebp+ebx*2-0x57],dh
  404487:	pushf  
  404488:	popa   
  404489:	jle    0x4044a0
  40448b:	and    al,0xff
  40448d:	mov    ch,0x9f
  40448f:	sub    dl,BYTE PTR ss:[edi+0x1c]
  404493:	mov    ss,WORD PTR [ebx+0x15]
  404496:	data16 xchg BYTE PTR [esi-0x27c1260a],al
  40449d:	mov    ebp,0x1efd2c6f
  4044a2:	rcl    DWORD PTR [esp+eax*8+0x5109047f],cl
  4044a9:	gs mov eax,0xcee2fb1
  4044af:	mov    ds:0x1bb0cdda,eax
  4044b4:	ins    BYTE PTR es:[edi],dx
  4044b5:	pushf  
  4044b6:	rol    DWORD PTR [ebx-0x57],1
  4044b9:	aaa    
  4044ba:	outs   dx,BYTE PTR ds:[esi]
  4044bb:	sti    
  4044bc:	inc    edi
  4044bd:	je     0x40449a
  4044bf:	jmp    0x51a7d3e6
  4044c4:	jnp    0x40450e
  4044c6:	mov    al,0xcc
  4044c8:	fisubr WORD PTR [esp+ecx*1+0x74]
  4044cc:	rcr    bh,1
  4044ce:	mov    eax,0x5042566
  4044d3:	fidiv  WORD PTR [edi+edi*8-0x1]
  4044d7:	inc    DWORD PTR [eax]
  4044d9:	mov    bl,0x5
  4044db:	xor    BYTE PTR [esi+0x2c60ac1a],dl
  4044e1:	int    0xa7
  4044e3:	push   eax
  4044e4:	mov    edx,0x19c40c33
  4044e9:	xor    al,0x9
  4044eb:	hlt    
  4044ec:	(bad)  
  4044ed:	sbb    eax,0xda35a4e1
  4044f2:	ficom  DWORD PTR [ebx+eiz*4+0x3288ba2a]
  4044f9:	std    
  4044fa:	mov    edx,0x399da4b8
  4044ff:	xlat   BYTE PTR ds:[ebx]
  404500:	jmp    0xda1279b0
  404505:	adc    eax,0xc64c75b2
  40450a:	imul   esi,DWORD PTR [edx+0x7c],0x30
  40450e:	cmp    al,0x6c
  404510:	sub    eax,0x1d6d49a2
  404515:	or     al,0x6
  404517:	jne    0x404529
  404519:	inc    ecx
  40451a:	(bad)  
  40451b:	jae    0x40453d
  40451d:	iret   
  40451e:	pop    es
  40451f:	imul   esi,DWORD PTR [ecx+0x55],0x25
  404523:	outs   dx,BYTE PTR ds:[esi]
  404524:	inc    ecx
  404525:	jecxz  0x4044c5
  404527:	leave  
  404528:	aam    0x38
  40452a:	jle    0x4044fa
  40452c:	in     al,0xc6
  40452e:	lods   al,BYTE PTR ds:[esi]
  40452f:	xlat   BYTE PTR ds:[ebx]
  404530:	mov    ch,0x4c
  404532:	sbb    cl,dl
  404534:	test   edx,ebx
  404536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404537:	pop    ds
  404538:	cwde   
  404539:	repz aas 
  40453b:	sbb    DWORD PTR [eax+0x21cf5d00],ebp
  404541:	stc    
  404542:	pop    es
  404543:	es es leave 
  404546:	jno    0x404510
  404548:	add    bl,BYTE PTR [edx+ebp*8+0x3c]
  40454c:	push   es
  40454d:	ins    BYTE PTR es:[edi],dx
  40454e:	push   esp
  40454f:	jbe    0x40454d
  404551:	cmp    al,0xfe
  404553:	inc    esi
  404554:	sti    
  404555:	or     al,0x68
  404557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404558:	sbb    eax,0x1ad86520
  40455d:	adc    bl,dh
  40455f:	and    ax,WORD PTR [ecx+0x41]
  404563:	ds and al,0x71
  404566:	iret   
  404567:	mov    edi,0xf54ce400
  40456c:	pop    es
  40456d:	aam    0xda
  40456f:	(bad)  
  404570:	inc    BYTE PTR [eax+ebp*1-0x494b06c1]
  404577:	add    bl,BYTE PTR [edi+esi*2]
  40457a:	inc    ebp
  40457b:	lods   eax,DWORD PTR ds:[esi]
  40457c:	stos   DWORD PTR es:[edi],eax
  40457d:	jno    0x4045b4
  40457f:	pop    ss
  404580:	xor    ch,BYTE PTR [eax-0x2c]
  404583:	sar    BYTE PTR [ebp+0x6f],1
  404586:	add    al,0x43
  404588:	sti    
  404589:	retf   
  40458a:	mov    DWORD PTR [ebp+0x2f51cca4],esp
  404590:	adc    eax,0x82b998d5
  404595:	shl    BYTE PTR [eax-0x723530b5],cl
  40459b:	push   esi
  40459c:	mov    eax,0x20ec9dcd
  4045a1:	aam    0x0
  4045a3:	ins    BYTE PTR es:[edi],dx
  4045a4:	or     BYTE PTR [esi-0x2d],0x3c
  4045a8:	adc    al,cl
  4045aa:	ja     0x40455d
  4045ac:	outs   dx,DWORD PTR ds:[esi]
  4045ad:	xchg   edi,eax
  4045ae:	jo     0x404589
  4045b0:	in     eax,0x25
  4045b2:	imul   edx,DWORD PTR [eax],0xf86e318c
  4045b8:	stc    
  4045b9:	adc    BYTE PTR [esi],al
  4045bb:	push   ebp
  4045bc:	mov    BYTE PTR [esi],bh
  4045be:	add    DWORD PTR ds:0x65f8aefa,esp
  4045c4:	je     0x40455e
  4045c6:	push   DWORD PTR [ebp-0x22]
  4045c9:	adc    eax,0x2181f91b
  4045ce:	sbb    al,0xe1
  4045d0:	adc    ebp,DWORD PTR [eax+0x775d8825]
  4045d6:	and    dh,BYTE PTR [eax-0x2337e119]
  4045dc:	xchg   edx,eax
  4045dd:	call   0x714112b0
  4045e2:	(bad)  
  4045e3:	jge    0x40464b
  4045e5:	jle    0x4045b8
  4045e7:	lods   eax,DWORD PTR ds:[esi]
  4045e8:	fdivr  st(7),st
  4045ea:	je     0x40460c
  4045ec:	jnp    0x4045d5
  4045ee:	jno    0x4045d8
  4045f0:	or     BYTE PTR [eax],al
  4045f2:	push   esi
  4045f3:	mov    dh,0x9e
  4045f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f6:	xor    DWORD PTR [ecx-0x601ecc32],0x9eeea2bb
  404600:	stos   DWORD PTR es:[edi],eax
  404601:	xor    al,0x7f
  404603:	or     BYTE PTR [ecx-0x72],ah
  404606:	dec    eax
  404607:	add    BYTE PTR [edi],al
  404609:	xchg   ecx,eax
  40460a:	sbb    dh,al
  40460c:	cwde   
  40460d:	idiv   DWORD PTR [edx+0x2ce795f1]
  404613:	pop    eax
  404614:	mov    ebp,0xba479716
  404619:	inc    esi
  40461a:	add    DWORD PTR [edx-0x20bac45],edx
  404620:	stos   BYTE PTR es:[edi],al
  404621:	and    esp,DWORD PTR [edx+0x6c]
  404624:	jl     0x404618
  404626:	xlat   BYTE PTR ds:[ebx]
  404627:	sbb    edi,DWORD PTR [ebx+0x2]
  40462a:	dec    esi
  40462b:	xchg   ebp,eax
  40462c:	pushf  
  40462d:	(bad)  
  40462e:	in     eax,dx
  40462f:	loop   0x4045ca
  404631:	pop    edi
  404632:	jnp    0x40469f
  404634:	test   eax,0xa7f4c1b4
  404639:	les    edx,FWORD PTR [edi+0x4c]
  40463c:	adc    edx,ecx
  40463e:	(bad)  
  40463f:	sti    
  404640:	setp   BYTE PTR [eax+0x62]
  404644:	hlt    
  404645:	push   0xffffffea
  404647:	int    0xf1
  404649:	jp     0x4046c7
  40464b:	dec    ebx
  40464c:	fs push es
  40464e:	(bad)  
  404650:	pusha  
  404651:	(bad)  
  404652:	dec    eax
  404653:	gs push ebx
  404655:	daa    
  404656:	repz mov dl,0x52
  404659:	aaa    
  40465a:	gs xor al,0xd3
  40465d:	and    DWORD PTR [eax-0x1d],ebx
  404660:	int    0x51
  404662:	into   
  404663:	dec    edx
  404664:	ret    0x7402
  404667:	mov    ch,0xb3
  404669:	repnz loope 0x40466c
  40466c:	add    BYTE PTR [esi-0x45],ch
  40466f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404670:	inc    ecx
  404671:	icebp  
  404672:	mov    ebx,0xced8d795
  404677:	les    ebp,FWORD PTR [ebp+0x7]
  40467a:	shl    ah,cl
  40467c:	sti    
  40467d:	inc    edi
  40467e:	pop    es
  40467f:	jmp    0xd94ceeee
  404684:	cld    
  404685:	and    ebp,esp
  404687:	xchg   DWORD PTR [esi-0x32],eax
  40468a:	jecxz  0x404643
  40468c:	ror    BYTE PTR [eax-0x58],1
  40468f:	sub    al,0x73
  404691:	test   DWORD PTR [eax],0xa61ee51d
  404697:	dec    ebx
  404698:	pop    edi
  404699:	xchg   ecx,eax
  40469a:	stos   BYTE PTR es:[edi],al
  40469b:	jnp    0x404666
  40469d:	adc    al,0x3
  40469f:	jno    0x4046dd
  4046a1:	(bad)  
  4046a3:	inc    eax
  4046a4:	stos   BYTE PTR es:[edi],al
  4046a5:	jb     0x40464f
  4046a7:	movups xmm7,XMMWORD PTR [ebp-0x51]
  4046ab:	pop    ds
  4046ac:	xchg   BYTE PTR [ebx],bl
  4046ae:	or     al,0xb5
  4046b0:	and    eax,0xb3850ce4
  4046b5:	ins    DWORD PTR es:[edi],dx
  4046b6:	loope  0x40468b
  4046b8:	or     DWORD PTR [edx-0x1d601c22],eax
  4046be:	mov    esp,0xbbad0ef9
  4046c3:	leave  
  4046c4:	cwde   
  4046c5:	and    al,0xce
  4046c7:	cwde   
  4046c8:	and    bh,BYTE PTR [ebx]
  4046ca:	shr    DWORD PTR [eax+0x3d2dbdb4],1
  4046d0:	pop    ss
  4046d1:	add    BYTE PTR [edx-0x147ef2ce],ah
  4046d7:	pop    ds
  4046d8:	pop    esp
  4046d9:	cmp    esi,DWORD PTR [eax+ebx*1]
  4046dc:	ins    BYTE PTR es:[edi],dx
  4046dd:	lods   eax,DWORD PTR ds:[esi]
  4046de:	xor    DWORD PTR [esi],edx
  4046e0:	and    DWORD PTR [eax],0x1e
  4046e3:	sbb    DWORD PTR [ebx+0x719c9db6],esi
  4046e9:	loop   0x40467c
  4046eb:	or     eax,0x9317d273
  4046f0:	iret   
  4046f1:	inc    edi
  4046f2:	je     0x40473a
  4046f4:	(bad)  
  4046f5:	ja     0x4046f1
  4046f7:	xchg   esp,eax
  4046f8:	int3   
  4046f9:	mov    BYTE PTR es:[edi+eax*8+0x253c1e16],ch
  404701:	or     ebp,DWORD PTR [edi+0x213b202d]
  404707:	sahf   
  404708:	push   ss
  404709:	push   0xffffffc3
  40470b:	rcr    DWORD PTR ds:0xfa35455a,cl
  404711:	into   
  404712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404713:	dec    esp
  404714:	sti    
  404715:	dec    BYTE PTR [eax]
  404717:	mov    ds:0x56baae03,eax
  40471c:	add    BYTE PTR [esi-0x6d06f6f4],bl
  404722:	pop    ecx
  404723:	and    ah,bh
  404725:	mov    ds:0xf202aeef,al
  40472a:	xor    eax,0xbbc20182
  40472f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404730:	and    eax,0x1f195057
  404735:	addr16 add dh,dl
  404738:	rcl    DWORD PTR [edi],1
  40473a:	ss sub al,0x27
  40473d:	sbb    al,0x6
  40473f:	sbb    BYTE PTR [esi+0x330b1bcf],0xd4
  404746:	sub    edi,DWORD PTR [ebp-0x54]
  404749:	int    0x7a
  40474b:	out    0x3c,eax
  40474d:	(bad)  
  40474e:	dec    edx
  40474f:	imul   eax,ebx,0x1602df6a
  404755:	imul   ebp,edi,0xbe70c564
  40475b:	fidivr WORD PTR [ebx]
  40475d:	je     0x4046ed
  40475f:	jo     0x404764
  404761:	mov    edi,0x489afed1
  404766:	shr    BYTE PTR [esi],cl
  404768:	and    eax,0xbf5fcbd1
  40476d:	push   ds
  40476e:	leave  
  40476f:	das    
  404770:	push   ecx
  404771:	cwde   
  404772:	ins    BYTE PTR es:[edi],dx
  404773:	mov    edx,0xd26747b3
  404778:	sbb    eax,0xc79b6eb6
  40477d:	and    DWORD PTR [esi-0x2d],esi
  404780:	cmp    DWORD PTR [ecx-0xa],eax
  404783:	(bad)  
  404784:	enter  0xfd8e,0xa7
  404788:	ss pop ds
  40478a:	add    eax,0xffa8ac57
  40478f:	je     0x4047b3
  404791:	and    eax,DWORD PTR es:[edx]
  404794:	ret    0x2091
  404797:	retf   0xf84f
  40479a:	sbb    DWORD PTR [eax],eax
  40479c:	adc    edx,DWORD PTR [esi+0x2c1b1aa7]
  4047a2:	xor    ah,BYTE PTR [edx]
  4047a4:	push   cs
  4047a5:	ja     0x404804
  4047a7:	and    DWORD PTR [esi],ebx
  4047a9:	or     esp,ecx
  4047ab:	sbb    bh,ch
  4047ad:	bound  edi,QWORD PTR [ebx+0x34ecbf1b]
  4047b3:	imul   DWORD PTR [ebx]
  4047b5:	pop    DWORD PTR [edx-0x4]
  4047b8:	arpl   WORD PTR [ecx],ax
  4047ba:	retf   
  4047bb:	add    eax,0xfe946b8b
  4047c0:	rcl    ch,0xab
  4047c3:	push   0xffffffd6
  4047c5:	fs fwait
  4047c7:	imul   edx,DWORD PTR [esi-0x188ffe26],0x7732d90
  4047d1:	jmp    FWORD PTR [edx+0x745d72cf]
  4047d7:	aam    0x5a
  4047d9:	repz inc DWORD PTR [eax+edx*2]
  4047dd:	test   BYTE PTR [ebx+0x1d546312],cl
  4047e3:	cmp    BYTE PTR [ebp-0x40],0xb0
  4047e7:	lea    edi,[esi-0x50]
  4047ea:	es sbb al,0xa7
  4047ed:	popa   
  4047ee:	pushf  
  4047ef:	jmp    0x404786
  4047f1:	xchg   ecx,eax
  4047f2:	or     ah,BYTE PTR [ebp+0x30]
  4047f5:	jmp    FWORD PTR [eax+0x3eef3392]
  4047fb:	sti    
  4047fc:	and    ebx,DWORD PTR [eax*4+0x4d9e00e4]
  404803:	adc    edi,DWORD PTR [edx+edi*2+0x38]
  404807:	or     BYTE PTR [ebx+0x79],0x28
  40480b:	adc    al,0xd2
  40480d:	mov    ecx,ebx
  40480f:	lods   eax,DWORD PTR ds:[esi]
  404810:	fisttp QWORD PTR [eax-0x30a4c7f7]
  404816:	jae    0x4047b3
  404818:	inc    esp
  404819:	int3   
  40481a:	arpl   WORD PTR ds:0xb794dab5,cx
  404820:	loop   0x404809
  404822:	les    esp,FWORD PTR [ecx]
  404824:	outs   dx,DWORD PTR ds:[esi]
  404825:	out    dx,al
  404826:	iret   
  404827:	aam    0x18
  404829:	in     eax,dx
  40482a:	lahf   
  40482b:	inc    edx
  40482c:	adc    ebp,0xe4eef870
  404832:	sub    BYTE PTR [esi+0x68],0x3b
  404836:	or     al,0xcd
  404838:	idiv   DWORD PTR [ecx]
  40483a:	fcomp  QWORD PTR [edx-0x7a]
  40483d:	cs sub eax,0x3c0bd1e1
  404843:	ja     0x4048b6
  404845:	xchg   esi,eax
  404846:	dec    edx
  404847:	out    0xde,al
  404849:	xchg   ebx,eax
  40484a:	sbb    dh,BYTE PTR [eax+0x4f]
  40484d:	sub    ecx,0xffffffc9
  404850:	clc    
  404851:	mov    eax,ds:0xeb005bf7
  404856:	loop   0x4047f5
  404858:	call   FWORD PTR [edx+eiz*8-0x53]
  40485c:	imul   edx,ebp,0x72d3ff07
  404862:	or     al,0xcf
  404864:	inc    ebp
  404865:	add    ah,ah
  404867:	test   eax,0xab1378e1
  40486c:	shr    esi,1
  40486e:	jp     0x404872
  404870:	adc    DWORD PTR [ebp+ecx*2+0x1],0xffffffb3
  404875:	ret    0x4e3
  404878:	es popa 
  40487a:	add    al,0xe0
  40487c:	adc    eax,0x47057df7
  404881:	dec    ebp
  404882:	dec    edx
  404883:	push   cs
  404884:	ja     0x404861
  404886:	sub    cl,bh
  404888:	push   0x4a
  40488a:	pop    ebp
  40488b:	mov    ch,0x5a
  40488d:	fdiv   QWORD PTR [edi*4-0x496c99f5]
  404894:	cmp    esi,eax
  404896:	or     eax,0x8a53ae1c
  40489b:	sbb    BYTE PTR [esi-0x30cdcc3b],bl
  4048a1:	jg     0x404877
  4048a3:	xor    bh,bh
  4048a5:	jmp    0x1d3262e3
  4048aa:	mov    ds,WORD PTR [ecx]
  4048ac:	ret    0x78a
  4048af:	xor    DWORD PTR [ebx-0x5cec1fd0],edx
  4048b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b6:	pop    esi
  4048b7:	iret   
  4048b8:	ss add eax,0x9306b479
  4048be:	add    BYTE PTR [esi-0x4998d6a9],bh
  4048c4:	addr16 mov edi,0x2e7a0437
  4048ca:	add    BYTE PTR [eax-0x21],al
  4048cd:	dec    ecx
  4048ce:	mov    eax,0x1b1bee9d
  4048d3:	lahf   
  4048d4:	call   DWORD PTR [ebx+ebp*1]
  4048d7:	or     DWORD PTR ds:0x58b2bdf9,esp
  4048dd:	clc    
  4048de:	lea    edi,[edi+ecx*1]
  4048e1:	(bad)  
  4048e2:	fidiv  WORD PTR [esi+0x20ef01a6]
  4048e8:	cdq    
  4048e9:	add    eax,DWORD PTR [eax]
  4048eb:	popf   
  4048ec:	add    cl,BYTE PTR [ecx]
  4048ee:	xor    esp,ebx
  4048f0:	(bad)  
  4048f1:	in     eax,dx
  4048f2:	popa   
  4048f3:	pop    ds
  4048f4:	rcl    dh,0x52
  4048f7:	pop    esi
  4048f8:	cmc    
  4048f9:	pop    ss
  4048fa:	lds    esp,FWORD PTR [ecx-0x270bd35a]
  404900:	add    ecx,DWORD PTR [edx-0x59]
  404903:	and    eax,DWORD PTR [ebx+eax*2]
  404906:	xchg   esi,eax
  404907:	(bad)  
  404909:	retf   0x958a
  40490c:	jmp    0xe895:0x4f54bbc1
  404913:	daa    
  404914:	cmp    BYTE PTR [eax+0x6f8ce6d9],dh
  40491a:	dec    edi
  40491b:	cdq    
  40491c:	cs push esi
  40491e:	jle    0x404970
  404920:	dec    ebx
  404921:	sub    DWORD PTR ds:0x1c8c1c2b,0x12c16ee2
  40492b:	ins    BYTE PTR es:[edi],dx
  40492c:	push   0xad0023ca
  404931:	xchg   ecx,eax
  404932:	scas   eax,DWORD PTR es:[edi]
  404933:	jo     0x404903
  404935:	jns    0x4048cb
  404937:	inc    ecx
  404938:	bswap  ebx
  40493a:	push   ebp
  40493b:	xlat   BYTE PTR ds:[ebx]
  40493c:	push   eax
  40493d:	ins    BYTE PTR es:[edi],dx
  40493e:	outs   dx,BYTE PTR ds:[esi]
  40493f:	out    0x89,al
  404941:	int    0x8b
  404943:	mov    ch,0x72
  404945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404946:	add    BYTE PTR [ebx+ebp*1+0x25086b03],0x3c
  40494e:	add    BYTE PTR [ebx],0x34
  404951:	sti    
  404952:	cwde   
  404953:	(bad)  
  404954:	je     0x404914
  404956:	sub    ch,0x67
  404959:	jge    0x40492a
  40495b:	sub    al,0xc8
  40495d:	aas    
  40495e:	mov    esi,0x9cfef117
  404963:	inc    edx
  404964:	call   0x7c80:0xa3499cc1
  40496b:	jg     0x4048ee
  40496d:	fs ins DWORD PTR es:[edi],dx
  40496f:	test   BYTE PTR [eax-0x1c8eb15b],ch
  404975:	loop   0x4049c5
  404977:	pop    edx
  404978:	stos   BYTE PTR es:[edi],al
  404979:	and    edi,DWORD PTR [eax-0x65]
  40497c:	cmp    al,0x69
  40497e:	xchg   ecx,eax
  40497f:	mov    al,0x4d
  404981:	stos   BYTE PTR es:[edi],al
  404982:	stos   BYTE PTR es:[edi],al
  404983:	lds    ebx,FWORD PTR [esi]
  404985:	out    0x92,eax
  404987:	mov    esi,0x46c4284f
  40498c:	cmp    ebp,DWORD PTR [ebp-0x5b]
  40498f:	cmp    eax,0x18c6ae22
  404994:	add    cl,ch
  404996:	jmp    0xf300:0x2bf033d6
  40499d:	ja     0x404a0f
  40499f:	or     edx,ebx
  4049a1:	inc    esp
  4049a2:	mov    cl,0xe2
  4049a4:	cld    
  4049a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a6:	out    dx,al
  4049a7:	fiadd  DWORD PTR [edi]
  4049a9:	xchg   ebp,eax
  4049aa:	das    
  4049ab:	inc    esi
  4049ac:	cmp    eax,0x46279593
  4049b1:	call   0x1513:0x51330454
  4049b8:	sbb    BYTE PTR [eax],bh
  4049ba:	rol    BYTE PTR [ecx-0x27],cl
  4049bd:	scas   eax,DWORD PTR es:[edi]
  4049be:	cdq    
  4049bf:	dec    ebx
  4049c0:	repnz fcomp QWORD PTR [eax+0x0]
  4049c4:	pusha  
  4049c5:	mov    ds:0x91597573,al
  4049ca:	xor    DWORD PTR [esi+edi*8],0xeffb5e1f
  4049d1:	sbb    cl,BYTE PTR [edi-0x3ef7f346]
  4049d7:	jns    0x4049e6
  4049d9:	retf   
  4049da:	mov    cl,0x38
  4049dc:	cmp    dl,BYTE PTR [edx]
  4049de:	sbb    edi,edi
  4049e0:	push   ebx
  4049e1:	xor    DWORD PTR [edx-0x42],ecx
  4049e4:	sub    BYTE PTR [ebp+edi*8+0x7c],ah
  4049e8:	adc    DWORD PTR [edi-0x14],ebx
  4049eb:	cmp    ebx,DWORD PTR [ecx-0x6ffaae58]
  4049f1:	jnp    0x404a13
  4049f3:	inc    esp
  4049f4:	stos   DWORD PTR es:[edi],eax
  4049f5:	into   
  4049f6:	out    dx,eax
  4049f7:	xchg   BYTE PTR [edx-0x3a018b00],dh
  4049fd:	pop    ebp
  4049fe:	and    al,0x8b
  404a00:	add    DWORD PTR [edi+ecx*4+0x5d],ebp
  404a04:	inc    eax
  404a05:	dec    edi
  404a06:	add    ch,BYTE PTR [ecx-0x460ed17d]
  404a0c:	ret    0x8121
  404a0f:	(bad)  
  404a10:	or     eax,0x4c966208
  404a15:	jecxz  0x404a8b
  404a17:	imul   ecx,DWORD PTR [edi-0x3187f206],0x901daa5
  404a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a22:	daa    
  404a23:	rol    DWORD PTR [edi-0x39],cl
  404a26:	cmp    BYTE PTR [ebx+ecx*4],ah
  404a29:	mov    dh,0xf9
  404a2b:	xor    al,0xca
  404a2d:	arpl   WORD PTR [edx+0x3f],bp
  404a30:	push   esp
  404a31:	dec    edx
  404a32:	cmp    DWORD PTR [esi],ebp
  404a34:	adc    eax,0xd5e10c61
  404a39:	js     0x404a72
  404a3b:	adc    BYTE PTR [edi-0x67a27e00],dl
  404a41:	push   eax
  404a42:	jnp    0x4049f6
  404a44:	test   eax,0xfa65a011
  404a49:	ror    BYTE PTR [ecx-0x196c3482],cl
  404a4f:	call   0xfe2fa72a
  404a54:	in     eax,0x1d
  404a56:	(bad)  
  404a57:	fidiv  DWORD PTR [esi+ebx*8-0x607bcc53]
  404a5e:	add    BYTE PTR [edx-0xe],cl
  404a61:	adc    DWORD PTR [eax+0x73],ebx
  404a64:	fwait
  404a65:	and    bl,BYTE PTR [ecx]
  404a67:	test   al,0xbe
  404a69:	outs   dx,DWORD PTR ds:[esi]
  404a6a:	fiadd  DWORD PTR [ecx-0x57]
  404a6d:	inc    eax
  404a6e:	fwait
  404a6f:	cdq    
  404a70:	popa   
  404a71:	imul   esp,DWORD PTR [edi-0x19a59360],0x7b
  404a78:	iret   
  404a79:	or     DWORD PTR ds:0x64385692,esp
  404a7f:	xor    eax,0x3ca3ae17
  404a84:	mov    ds,WORD PTR [edi-0x33d2a81e]
  404a8a:	and    esi,ebx
  404a8c:	aas    
  404a8d:	std    
  404a8e:	pusha  
  404a8f:	xor    DWORD PTR [eax-0x5ad75020],ebp
  404a95:	iret   
  404a96:	out    dx,al
  404a97:	jae    0x404a2e
  404a99:	sub    BYTE PTR ds:0x6cb20e7a,0xad
  404aa0:	dec    ebx
  404aa1:	and    al,0xab
  404aa3:	test   al,bl
  404aa5:	adc    al,0xea
  404aa7:	(bad)  
  404aa8:	loope  0x404aef
  404aaa:	sub    DWORD PTR [esi-0x16],esp
  404aad:	jbe    0x404b17
  404aaf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab1:	js     0x404aa9
  404ab3:	jmp    0xc96:0x9db747a7
  404aba:	sbb    ebp,DWORD PTR [ecx]
  404abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404abd:	cmc    
  404abe:	sub    DWORD PTR [eax+0x54],esi
  404ac1:	ss mov esp,0x4b7baf00
  404ac7:	lea    ecx,[esi+0x12]
  404aca:	sub    dh,bl
  404acc:	or     eax,0xccef218a
  404ad1:	shr    BYTE PTR [edx-0x60407c0d],1
  404ad7:	ret    0x5e3a
  404ada:	mov    ah,0x91
  404adc:	icebp  
  404add:	jge    0x404aac
  404adf:	mov    al,ds:0x368e2ca8
  404ae4:	and    esi,DWORD PTR [bp+di+0x7]
  404ae8:	push   ss
  404ae9:	sbb    ah,BYTE PTR [eax+0x54]
  404aec:	aad    0x81
  404aee:	imul   esp,DWORD PTR [ebp-0x7c],0xd69884a4
  404af5:	retf   
  404af6:	jnp    0x404aa1
  404af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af9:	mov    ds:0x9964fa56,al
  404afe:	jno    0x404acb
  404b00:	adc    eax,0xd25db0e8
  404b05:	out    0x97,eax
  404b07:	ins    BYTE PTR es:[edi],dx
  404b08:	stos   DWORD PTR es:[edi],eax
  404b09:	push   es
  404b0a:	mov    ebx,0xc594e03f
  404b0f:	push   cs
  404b10:	sbb    DWORD PTR [esi+edi*1],edi
  404b13:	adc    bl,BYTE PTR [esi+0x33]
  404b16:	inc    ebx
  404b17:	and    ebx,DWORD PTR [edi-0x238fd016]
  404b1d:	rcr    BYTE PTR [eax],1
  404b1f:	inc    ecx
  404b20:	sbb    eax,0x5ad6da40
  404b25:	das    
  404b26:	out    dx,eax
  404b27:	in     eax,0x0
  404b29:	mov    ds:0xd8b5048e,eax
  404b2e:	sub    al,0xfd
  404b30:	and    DWORD PTR [ecx],0x2
  404b33:	cwde   
  404b34:	inc    edx
  404b35:	pop    ss
  404b36:	cld    
  404b37:	nop
  404b38:	cmp    eax,0x18aa3af6
  404b3d:	lds    edi,FWORD PTR [ecx-0x4d]
  404b40:	das    
  404b41:	les    edi,FWORD PTR [eax+0x53eedc]
  404b47:	in     eax,dx
  404b48:	fstp   DWORD PTR [eax]
  404b4a:	ds into 
  404b4c:	cld    
  404b4d:	sar    DWORD PTR [esi-0x51],0x3
  404b51:	test   eax,0x9d7ba0bf
  404b56:	lock mov BYTE PTR [esp+ebp*4-0x8e9dcf],al
  404b5e:	jb     0x404bdb
  404b60:	push   esi
  404b61:	into   
  404b62:	mov    bl,0xa4
  404b64:	xchg   edi,eax
  404b65:	pop    eax
  404b66:	cmc    
  404b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b68:	mov    al,0x51
  404b6a:	ss mov ch,0xfa
  404b6e:	jbe    0x404b27
  404b70:	mov    edx,0x857b833
  404b75:	add    DWORD PTR [esi+edx*2+0x756b29ff],ebp
  404b7c:	rcl    BYTE PTR [eax+0x2a],cl
  404b7f:	fs in  eax,dx
  404b81:	cmp    ebp,ecx
  404b83:	mov    dl,0x2c
  404b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b86:	scas   eax,DWORD PTR es:[edi]
  404b87:	call   0x3e:0x716e6513
  404b8e:	mov    dh,0x2d
  404b90:	mov    BYTE PTR [ecx-0x49],cl
  404b93:	in     al,dx
  404b94:	into   
  404b95:	ror    ebx,0xa3
  404b98:	faddp  st(6),st
  404b9a:	mov    ds:0x49abbd62,al
  404b9f:	and    DWORD PTR [esp+edx*4+0x55eae080],ebx
  404ba6:	out    dx,al
  404ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba8:	loop   0x404c14
  404baa:	fbld   TBYTE PTR [esi+0x0]
  404bad:	stc    
  404bae:	sbb    dh,BYTE PTR [edi+eiz*2+0x0]
  404bb2:	sbb    al,0x63
  404bb4:	es or  eax,0x1cb86cdb
  404bba:	fdivr  QWORD PTR [ebp-0x7]
  404bbd:	aas    
  404bbe:	or     edi,ecx
  404bc0:	cmp    bl,BYTE PTR [esi]
  404bc2:	neg    BYTE PTR [edi+0x2937697b]
  404bc8:	mov    esp,0xfd38f060
  404bcd:	cmp    ebx,DWORD PTR ds:0x22423e0b
  404bd3:	fidivr DWORD PTR [esi+0x15]
  404bd6:	popf   
  404bd7:	out    0xaf,al
  404bd9:	adc    al,0xa2
  404bdb:	div    eax
  404bdd:	test   DWORD PTR [edi+eax*2+0x1451e632],0xa3893173
  404be8:	mov    ah,0x18
  404bea:	xchg   BYTE PTR [edx-0x7e24cc0b],dh
  404bf0:	ss dec edx
  404bf2:	add    ah,bl
  404bf4:	push   eax
  404bf5:	ja     0x404ba9
  404bf7:	daa    
  404bf8:	mov    ch,0x4e
  404bfa:	mov    ebx,0x900fa400
  404bff:	dec    ebp
  404c00:	push   edi
  404c01:	int3   
  404c02:	mov    edx,esi
  404c04:	test   DWORD PTR [ebp+0x49f0ab56],ecx
  404c0a:	aaa    
  404c0b:	sub    al,0xe1
  404c0d:	or     dl,BYTE PTR [ecx+edi*2+0x12]
  404c11:	enter  0x6665,0x43
  404c15:	mov    edx,ebp
  404c17:	(bad)  
  404c18:	cmp    eax,0x28d90346
  404c1d:	pop    es
  404c1e:	sbb    ah,dh
  404c20:	fcmovnb st,st(3)
  404c22:	add    DWORD PTR [ebx-0x2cff7af4],ebx
  404c28:	dec    ebx
  404c29:	cwde   
  404c2a:	inc    edx
  404c2b:	sbb    dl,ch
  404c2d:	test   al,0x3
  404c2f:	xor    esi,edi
  404c31:	stc    
  404c32:	shr    BYTE PTR [eax],0xe3
  404c35:	retf   0x3581
  404c38:	mov    esi,0xa11c1fc4
  404c3d:	repz pop esi
  404c3f:	push   edi
  404c40:	or     al,0xa7
  404c42:	popf   
  404c43:	pop    esi
  404c44:	fwait
  404c45:	xchg   ebp,eax
  404c46:	fcom   QWORD PTR [ecx-0x67e50026]
  404c4c:	dec    ebp
  404c4d:	xor    DWORD PTR [edx-0x4d],ebx
  404c50:	loopne 0x404cb3
  404c52:	cdq    
  404c53:	stos   BYTE PTR es:[edi],al
  404c54:	std    
  404c55:	push   edx
  404c56:	fadd   DWORD PTR [eax]
  404c58:	int    0x65
  404c5a:	dec    edi
  404c5b:	pop    ss
  404c5c:	mov    ah,0x78
  404c5e:	jle    0x404cb6
  404c60:	iret   
  404c61:	push   ebx
  404c62:	sub    eax,0x1cb2d695
  404c67:	aam    0x89
  404c69:	jno    0x404bf5
  404c6b:	adc    edx,DWORD PTR [eax+0x16]
  404c6e:	mov    ebx,0xe8396b52
  404c73:	xchg   ecx,eax
  404c74:	inc    edx
  404c75:	and    cl,bl
  404c77:	rcr    dl,1
  404c79:	cld    
  404c7a:	repnz in al,dx
  404c7c:	sub    ecx,0xffffffc1
  404c7f:	lods   eax,DWORD PTR ds:[esi]
  404c80:	cwde   
  404c81:	dec    esi
  404c82:	xchg   ecx,eax
  404c83:	outs   dx,BYTE PTR ds:[esi]
  404c84:	xchg   ecx,eax
  404c85:	iret   
  404c86:	lahf   
  404c87:	das    
  404c88:	pop    esi
  404c89:	xchg   edx,eax
  404c8a:	xor    eax,0x70ee7e8
  404c8f:	test   eax,0x6a53a3fc
  404c94:	in     eax,0xbc
  404c96:	sub    eax,DWORD PTR fs:[edx-0x741b86dc]
  404c9d:	cmp    ecx,DWORD PTR [eax-0x5b]
  404ca0:	popf   
  404ca1:	lea    esi,[ebx+ebx*1-0x7d]
  404ca5:	mov    cs,WORD PTR [ecx-0x362845d6]
  404cab:	mov    esp,0x8db330bd
  404cb0:	cld    
  404cb1:	jmp    0xf2802b55
  404cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb7:	out    dx,eax
  404cb8:	jle    0x404c57
  404cba:	pop    edi
  404cbb:	loope  0x404cbd
  404cbd:	clc    
  404cbe:	scas   al,BYTE PTR es:[edi]
  404cbf:	data16 shl BYTE PTR [ecx+0x6a8389cb],1
  404cc6:	int3   
  404cc7:	je     0x404c7b
  404cc9:	and    ebx,DWORD PTR [ecx]
  404ccb:	mov    bl,0x24
  404ccd:	push   esp
  404cce:	jb     0x404c9a
  404cd0:	adc    eax,0x46a56795
  404cd5:	(bad)  
  404cd6:	jo     0x404c78
  404cd8:	ja     0x404ce1
  404cda:	(bad)  
  404cdb:	daa    
  404cdc:	imul   esi,DWORD PTR [eax],0x66
  404cdf:	push   ds
  404ce0:	pop    edx
  404ce1:	imul   eax,ebx,0xb4b20931
  404ce7:	dec    esp
  404ce8:	cmp    bl,ch
  404cea:	or     DWORD PTR [ebx],0xf28a0cae
  404cf0:	sahf   
  404cf1:	dec    ebp
  404cf2:	pop    ds
  404cf3:	(bad)  
  404cf5:	mov    ?,WORD PTR [eax]
  404cf7:	call   0x3ea1cf8
  404cfc:	add    BYTE PTR [ebp+0x6a6ac1aa],bl
  404d02:	test   al,0x87
  404d04:	aam    0xbb
  404d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d07:	inc    ebp
  404d08:	mov    esi,0xa80aacc4
  404d0d:	stc    
  404d0e:	mov    ds:0xad06c2c8,al
  404d13:	mov    ?,WORD PTR [edi+ecx*2-0x5a]
  404d17:	dec    esp
  404d18:	push   ss
  404d19:	sbb    BYTE PTR [edx],al
  404d1b:	div    eax
  404d1d:	dec    ebp
  404d1e:	pop    edx
  404d1f:	out    dx,al
  404d20:	mov    dl,0x0
  404d22:	mov    dh,0x8b
  404d24:	in     al,0x74
  404d26:	and    BYTE PTR [ebp+ebx*8-0xf5f0dca],dh
  404d2d:	stc    
  404d2e:	aad    0x25
  404d30:	icebp  
  404d31:	mov    ebx,0x7de32f2e
  404d36:	js     0x404d40
  404d38:	loop   0x404d79
  404d3a:	pop    edx
  404d3b:	fld    QWORD PTR [esi+eiz*8]
  404d3e:	call   DWORD PTR [ecx]
  404d40:	cld    
  404d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d42:	in     al,0x42
  404d44:	mul    BYTE PTR [ecx+0x32]
  404d47:	cld    
  404d48:	out    dx,al
  404d49:	and    eax,DWORD PTR [eax-0x58131e17]
  404d4f:	data16 jecxz 0x404d00
  404d52:	cld    
  404d53:	jge    0x404d26
  404d55:	push   0x2ad0c56a
  404d5a:	dec    eax
  404d5b:	nop
  404d5c:	sti    
  404d5d:	(bad)  
  404d5e:	ins    BYTE PTR es:[edi],dx
  404d5f:	retf   
  404d60:	cli    
  404d61:	xchg   esp,eax
  404d62:	adc    eax,0xc352f89a
  404d67:	pusha  
  404d68:	stc    
  404d69:	adc    cl,dl
  404d6b:	jae    0x404d49
  404d6d:	fcomip st,st(4)
  404d6f:	out    dx,al
  404d70:	aam    0x9d
  404d72:	(bad)  
  404d73:	in     eax,0xde
  404d75:	pop    ebx
  404d76:	sbb    ebx,DWORD PTR ds:0x483919d6
  404d7c:	loope  0x404dcc
  404d7e:	jecxz  0x404d22
  404d80:	loopne 0x404d0e
  404d82:	xor    DWORD PTR [ecx+0xf00cad2],0x2508d389
  404d8c:	pop    esp
  404d8d:	mov    BYTE PTR [edi+0xb],0xd7
  404d91:	mov    esi,0xe1985
  404d96:	mov    ch,0xde
  404d98:	fcom   QWORD PTR [ecx-0x54]
  404d9b:	pushf  
  404d9c:	xor    ah,BYTE PTR [ebp+0x1f]
  404d9f:	mov    ebx,0x1d1657f1
  404da4:	sbb    BYTE PTR [edi+0x1c],ch
  404da7:	daa    
  404da8:	(bad)  
  404da9:	ss adc eax,0xf8016ae1
  404daf:	xchg   ecx,eax
  404db0:	pop    ecx
  404db1:	test   cl,bh
  404db3:	dec    ebx
  404db4:	scas   eax,DWORD PTR es:[edi]
  404db5:	mov    bl,0xfb
  404db7:	or     eax,0xcffaea2e
  404dbc:	add    bl,ch
  404dbe:	int    0x85
  404dc0:	lahf   
  404dc1:	nop
  404dc2:	les    eax,FWORD PTR [edi-0x77]
  404dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc6:	into   
  404dc7:	stc    
  404dc8:	sar    ebp,cl
  404dca:	(bad)  
  404dcb:	mov    bl,0x3c
  404dcd:	leave  
  404dce:	retf   0x47bc
  404dd1:	dec    esp
  404dd2:	retf   
  404dd3:	(bad)  
  404dd4:	loope  0x404e50
  404dd6:	leave  
  404dd7:	inc    eax
  404dd8:	jnp    0x404dfc
  404dda:	enter  0x947a,0x15
  404dde:	adc    ebx,DWORD PTR [ecx-0x2cedd7b2]
  404de4:	mov    eax,0x2205001f
  404de9:	inc    esi
  404dea:	add    DWORD PTR [eax],eax
  404dec:	inc    edi
  404ded:	or     esi,DWORD PTR [ecx+0x14]
  404df0:	mov    al,0xf6
  404df2:	repz or eax,0x7c310ea
  404df8:	sub    al,0xca
  404dfa:	call   0xbb19:0xad636ffe
  404e01:	xchg   eax,eax
  404e03:	sbb    BYTE PTR [ecx-0x5f],dh
  404e06:	neg    DWORD PTR [edx]
  404e08:	daa    
  404e09:	cmp    ch,BYTE PTR [esi-0x672b1ae5]
  404e0f:	add    BYTE PTR [ebx],bl
  404e11:	adc    BYTE PTR ds:0x4ece0a1c,ah
  404e17:	sub    ecx,DWORD PTR [eax]
  404e19:	xchg   esp,eax
  404e1a:	lock jb 0x404e26
  404e1d:	push   edx
  404e1e:	fwait
  404e1f:	inc    ebp
  404e20:	add    al,BYTE PTR [esi+0x47d378dc]
  404e26:	mov    dh,0x4f
  404e28:	ror    DWORD PTR [ecx],1
  404e2a:	or     BYTE PTR [esi],dl
  404e2c:	ror    bl,1
  404e2e:	bound  esp,QWORD PTR [ecx]
  404e30:	fld    QWORD PTR [esp+esi*2+0x1e3edca4]
  404e37:	xchg   ebx,eax
  404e38:	push   cs
  404e39:	cdq    
  404e3a:	lahf   
  404e3b:	retf   0xc30f
  404e3e:	retf   0x10fd
  404e41:	xor    DWORD PTR [esi],ebp
  404e43:	mov    al,0x21
  404e45:	sti    
  404e46:	inc    ebx
  404e47:	xchg   DWORD PTR [ebx],esp
  404e49:	mov    ebp,0x7722def9
  404e4e:	nop
  404e4f:	jmp    0x86737d54
  404e54:	ins    BYTE PTR es:[edi],dx
  404e55:	cs cmc 
  404e57:	jmp    0x404eb4
  404e59:	sbb    al,0xaf
  404e5b:	push   ecx
  404e5c:	add    bl,BYTE PTR ds:0xe6353871
  404e62:	sub    edi,DWORD PTR [edi+0x8]
  404e65:	out    0xe9,eax
  404e67:	adc    al,0x3f
  404e69:	aad    0xa7
  404e6b:	stos   BYTE PTR es:[edi],al
  404e6c:	data16 aam 0x65
  404e6f:	rcl    DWORD PTR [ecx-0x17],0x24
  404e73:	xlat   BYTE PTR ds:[ebx]
  404e74:	aam    0xd8
  404e76:	loop   0x404e34
  404e78:	jecxz  0x404e54
  404e7a:	mov    al,ds:0x5edbba02
  404e7f:	imul   ecx,DWORD PTR [ebp+0x20cb536c],0x17a0916d
  404e89:	popf   
  404e8a:	in     al,0x36
  404e8c:	pop    ds
  404e8d:	shl    ebx,cl
  404e8f:	je     0x404f06
  404e91:	xchg   esp,eax
  404e92:	sar    BYTE PTR [ecx-0x817ee9d],1
  404e98:	or     dh,dl
  404e9a:	fnstsw WORD PTR ds:0x7bf72fb7
  404ea0:	fld    QWORD PTR [eax+0x68]
  404ea3:	mov    edi,0x161159a
  404ea8:	lock cmp ah,BYTE PTR [edi+0x43]
  404eac:	dec    esi
  404ead:	jmp    0x404f0c
  404eaf:	test   DWORD PTR [esp+ebx*8],esp
  404eb2:	push   0xffffffc8
  404eb4:	xor    al,BYTE PTR [eax]
  404eb6:	pop    ecx
  404eb7:	imul   ecx,DWORD PTR [edx],0x4c6b4e58
  404ebd:	out    0x77,al
  404ebf:	ins    BYTE PTR es:[edi],dx
  404ec0:	mov    cs,WORD PTR [eax+ebx*4+0x4d689455]
  404ec7:	dec    esi
  404ec8:	(bad)  
  404ec9:	add    DWORD PTR [edx+0x58],eax
  404ecc:	adc    BYTE PTR [ebx+eiz*2-0x5b29adb1],bh
  404ed3:	jl     0x404e70
  404ed5:	shl    BYTE PTR [ecx],0x7b
  404ed8:	(bad)  [ecx+0x14177946]
  404ede:	jg     0x404f5a
  404ee0:	pop    ecx
  404ee1:	jle    0x404f33
  404ee3:	inc    ebx
  404ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee5:	cmp    DWORD PTR [ebp+0x4a52e444],eax
  404eeb:	shl    BYTE PTR [ecx],cl
  404eed:	in     eax,dx
  404eee:	sbb    edx,ecx
  404ef0:	pop    edi
  404ef1:	xchg   DWORD PTR [esi+ebx*8],ecx
  404ef4:	lods   al,BYTE PTR ds:[esi]
  404ef5:	xchg   ecx,eax
  404ef6:	mov    ebp,esi
  404ef8:	jmp    0xe745:0x28ef9efa
  404eff:	or     BYTE PTR [edi+0x2f],ah
  404f02:	enter  0x8802,0xcf
  404f06:	xchg   edi,eax
  404f07:	or     BYTE PTR [ecx-0x74b0536f],0x53
  404f0e:	push   edx
  404f0f:	test   al,0x8a
  404f11:	adc    eax,0xd88fb940
  404f16:	dec    edi
  404f17:	xchg   BYTE PTR ss:[edx-0x73d51c00],bl
  404f1e:	pop    esp
  404f1f:	jp     0x404ef5
  404f21:	test   BYTE PTR [esi],bl
  404f23:	test   al,0xfd
  404f25:	push   ebp
  404f26:	loop   0x404f8c
  404f28:	fimul  DWORD PTR [esi-0x60]
  404f2b:	mov    ebp,0x3664507
  404f30:	xor    BYTE PTR [esp],bh
  404f33:	shl    DWORD PTR [eax],1
  404f35:	push   ecx
  404f36:	jmp    0xa790ecf7
  404f3b:	adc    eax,0x8b6d42b3
  404f40:	mov    WORD PTR [ebx+0x2b],es
  404f43:	pop    ecx
  404f44:	push   ebp
  404f45:	and    al,0xf5
  404f47:	jmp    0x17be:0xcfb31d91
  404f4e:	jno    0x404f81
  404f50:	js     0x404f60
  404f52:	das    
  404f53:	mov    ds:0xa2fe036b,eax
  404f58:	out    0x1,al
  404f5a:	mov    esp,0x79effa07
  404f5f:	pop    ecx
  404f60:	inc    ecx
  404f61:	icebp  
  404f62:	aaa    
  404f63:	dec    ebx
  404f64:	adc    dl,bl
  404f66:	add    eax,DWORD PTR [ebx+ecx*2+0x161ec5db]
  404f6d:	fnstcw WORD PTR [edi-0x60]
  404f70:	(bad)  
  404f72:	inc    ecx
  404f73:	repnz repz mov esp,0xb46edc0a
  404f7a:	int3   
  404f7b:	jbe    0x404fde
  404f7d:	add    BYTE PTR [esi-0x58fe500],bh
  404f83:	mov    bh,0xe5
  404f85:	xchg   ebp,eax
  404f86:	int    0xc0
  404f88:	xchg   esi,eax
  404f89:	aaa    
  404f8a:	pusha  
  404f8b:	ror    eax,0xcd
  404f8e:	push   esi
  404f8f:	mov    bl,0xa
  404f91:	mov    WORD PTR [esi],cs
  404f93:	mov    dl,0xf4
  404f95:	mov    al,ds:0x8fafa739
  404f9a:	mov    esp,0x8b75719e
  404f9f:	xchg   esp,eax
  404fa0:	adc    esp,esp
  404fa2:	ror    DWORD PTR [ebp+0x3ee548cd],1
  404fa8:	rol    DWORD PTR [esi],0xd8
  404fab:	aaa    
  404fac:	ja     0x404fca
  404fae:	out    dx,eax
  404faf:	cmp    eax,0x34b6bb35
  404fb4:	ret    
  404fb5:	push   ebx
  404fb6:	sbb    DWORD PTR [ecx],0x18045e78
  404fbc:	les    esi,FWORD PTR ds:[ebx]
  404fbf:	sbb    bh,ah
  404fc1:	adc    ch,BYTE PTR [edx+0x1b]
  404fc4:	(bad)  
  404fc6:	pop    esp
  404fc7:	sub    al,0x74
  404fc9:	xchg   esp,eax
  404fca:	adc    BYTE PTR ds:0x2f276e32,ah
  404fd0:	loopne 0x404fba
  404fd2:	jge    0x404ffa
  404fd4:	xchg   esi,eax
  404fd5:	aad    0x48
  404fd7:	sub    ecx,ebp
  404fd9:	sub    al,0xcc
  404fdb:	sub    bh,bl
  404fdd:	(bad)  
  404fde:	cli    
  404fdf:	sub    BYTE PTR [ecx-0x80],cl
  404fe2:	mov    ds:0x9d6f0029,al
  404fe7:	xchg   ebp,eax
  404fe8:	mov    dl,0xe4
  404fea:	gs test al,0xb3
  404fed:	and    bh,BYTE PTR [edi+0x1950a19f]
  404ff3:	(bad)  
  404ff4:	mov    al,ds:0xf0f3a6
  404ff9:	or     BYTE PTR [edx+0x7],al
  404ffc:	je     0x404ff7
  404ffe:	adc    ebp,DWORD PTR [ebp+0x43]
  405001:	sti    
  405002:	mov    ebp,0x1a1ad3
  405007:	mov    ecx,0x961db52d
  40500c:	inc    eax
  40500d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500e:	jmp    0x40500b
  405010:	ja     0x404fb8
  405012:	test   eax,0x67972e41
  405017:	sub    BYTE PTR [ecx],bl
  405019:	jb     0x40504f
  40501b:	ds pushf 
  40501d:	jae    0x405001
  40501f:	push   ebx
  405020:	stos   DWORD PTR es:[edi],eax
  405021:	popa   
  405022:	mov    al,ds:0x5e50f2e9
  405027:	add    ch,0x1b
  40502a:	cmp    al,bh
  40502c:	clc    
  40502d:	push   0xffffffec
  40502f:	lods   al,BYTE PTR ds:[esi]
  405030:	iret   
  405031:	push   0x499612b6
  405036:	js     0x4050b1
  405038:	mov    eax,ds:0x246f333c
  40503d:	cmp    eax,0x6f130505
  405042:	scas   eax,DWORD PTR es:[edi]
  405043:	mov    edx,0xd1714e4a
  405048:	jge    0x40504a
  40504a:	sub    DWORD PTR [edi+0x49383035],eax
  405050:	pop    edi
  405051:	pop    es
  405052:	cmp    cl,BYTE PTR [ebx]
  405054:	loope  0x4050b4
  405056:	sti    
  405057:	mov    ebx,0x7f0e698b
  40505c:	popf   
  40505d:	in     al,dx
  40505e:	cmovno esi,edi
  405061:	(bad)  
  405063:	add    cl,BYTE PTR [ecx-0x7e]
  405066:	cld    
  405067:	push   esp
  405068:	and    esi,DWORD PTR [ebp-0x779be5f9]
  40506e:	not    bh
  405070:	or     eax,0xf5299dbf
  405075:	scas   eax,DWORD PTR es:[edi]
  405076:	inc    ebx
  405077:	sub    esi,DWORD PTR [edi+0x72266cda]
  40507d:	int3   
  40507e:	icebp  
  40507f:	push   ds
  405080:	xor    al,0xa6
  405082:	mov    esi,0x7717ee24
  405087:	sbb    esi,DWORD PTR [eax-0x5ecd5f8e]
  40508d:	sar    ch,1
  40508f:	xor    ebx,esp
  405091:	mov    ecx,0x41d400a
  405096:	jmp    0x4050d8
  405098:	pop    edi
  405099:	outs   dx,BYTE PTR ds:[esi]
  40509a:	adc    al,0x2c
  40509c:	stos   BYTE PTR es:[edi],al
  40509d:	js     0x405028
  40509f:	inc    esp
  4050a0:	in     al,dx
  4050a1:	adc    DWORD PTR [esi+0x3e],edx
  4050a4:	lods   al,BYTE PTR es:[esi]
  4050a6:	(bad)  
  4050a7:	aad    0x67
  4050a9:	(bad)  
  4050aa:	mov    eax,0x819484
  4050af:	test   DWORD PTR [ebx-0x2e],edi
  4050b2:	jmp    0x7e53:0x551085b2
  4050b9:	dec    esi
  4050ba:	aas    
  4050bb:	pop    esp
  4050bc:	mov    DWORD PTR [ebx-0x26751ed7],ebx
  4050c2:	inc    edx
  4050c3:	into   
  4050c4:	mov    BYTE PTR [edi],dl
  4050c6:	std    
  4050c7:	pop    es
  4050c8:	mov    BYTE PTR [ebp-0x69],dl
  4050cb:	adc    BYTE PTR [edi],dh
  4050cd:	mov    edi,0xfd2dcd73
  4050d2:	sbb    BYTE PTR [edx+0x5ba74333],bh
  4050d8:	sub    al,0x81
  4050da:	int    0x24
  4050dc:	xlat   BYTE PTR ds:[ebx]
  4050dd:	(bad)  
  4050de:	fistp  DWORD PTR [ecx-0x394efa28]
  4050e4:	fimul  DWORD PTR [ebx+0xf]
  4050e7:	(bad)  
  4050e8:	(bad)  [ecx-0x5dfd379b]
  4050ee:	lods   eax,DWORD PTR ds:[esi]
  4050ef:	mov    edi,0xdaefa32a
  4050f4:	xor    edx,DWORD PTR [ecx-0x7003accf]
  4050fa:	jae    0x40512d
  4050fc:	rol    DWORD PTR [esi+esi*4-0x783b1e9],1
  405103:	bound  edi,QWORD PTR [edi+0x76]
  405106:	cmp    bl,bl
  405108:	mov    eax,0xa5697c6f
  40510d:	jmp    0x6142ee15
  405112:	pop    eax
  405113:	add    BYTE PTR [edx-0x1af4bce3],bh
  405119:	xchg   bl,bh
  40511b:	dec    esi
  40511c:	inc    edx
  40511d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40511e:	jbe    0x405142
  405120:	xor    ch,BYTE PTR [ebx]
  405122:	mov    dh,0xb5
  405124:	or     eax,0x5a28cbd0
  405129:	mov    dh,0x4c
  40512b:	lods   eax,DWORD PTR ds:[esi]
  40512c:	mov    ch,0x59
  40512e:	sub    al,0x50
  405130:	mov    ch,0xa3
  405132:	fmul   QWORD PTR [ebx]
  405134:	push   edx
  405135:	mov    dh,al
  405137:	push   esi
  405138:	mov    ebp,0x1a03361d
  40513d:	add    DWORD PTR [ebx+0x3b5a0aad],esi
  405143:	sub    ah,ch
  405145:	mov    ah,0x49
  405147:	mov    ch,0x32
  405149:	iret   
  40514a:	nop
  40514b:	and    BYTE PTR [ebp+0x53fab92c],cl
  405151:	jae    0x405164
  405153:	pop    edi
  405154:	ins    DWORD PTR es:[edi],dx
  405155:	cwde   
  405156:	adc    esi,esp
  405158:	cmp    esi,edi
  40515a:	stos   BYTE PTR es:[edi],al
  40515b:	addr16 xchg ebp,eax
  40515d:	adc    al,0x26
  40515f:	sbb    DWORD PTR [ebp-0x45],ebx
  405162:	xchg   BYTE PTR [edx+edi*1-0x7383ffa0],bh
  405169:	cli    
  40516a:	inc    edx
  40516b:	sbb    al,0x5b
  40516d:	and    ah,BYTE PTR [esi]
  40516f:	jl     0x405174
  405171:	adc    dh,BYTE PTR [eax+0xc]
  405174:	outs   dx,BYTE PTR ds:[esi]
  405175:	cli    
  405176:	adc    al,0x16
  405178:	add    BYTE PTR [ebp+0x5666fb59],bh
  40517e:	ret    0xe39e
  405181:	popa   
  405182:	fwait
  405183:	daa    
  405184:	mov    ebp,DWORD PTR [ebp-0x786bd7f]
  40518a:	loop   0x405137
  40518c:	loope  0x405122
  40518e:	dec    ecx
  40518f:	leave  
  405190:	dec    ecx
  405191:	dec    esp
  405192:	popa   
  405193:	add    DWORD PTR ds:[ebx],ebx
  405196:	mov    ebx,0x28f5e35b
  40519b:	mov    ch,0x5b
  40519d:	xchg   ecx,eax
  40519e:	add    dl,al
  4051a0:	(bad)  
  4051a1:	into   
  4051a2:	retf   0x5668
  4051a5:	cmp    dh,BYTE PTR [edx]
  4051a7:	or     al,0x6c
  4051a9:	mov    bh,0x92
  4051ab:	loop   0x405159
  4051ad:	adc    edi,DWORD PTR [edx-0x79]
  4051b0:	int3   
  4051b1:	push   0xc43cd189
  4051b6:	mov    cl,0xb4
  4051b8:	and    DWORD PTR es:[edx+0x5a],eax
  4051bc:	(bad)  
  4051bd:	in     eax,dx
  4051be:	jmp    0xf36aa501
  4051c3:	test   DWORD PTR [ebx-0x561ce67a],ebx
  4051c9:	add    ebp,DWORD PTR [ebx+0x516f310d]
  4051cf:	push   0xa199b519
  4051d4:	mov    cl,0x31
  4051d6:	jno    0x40519c
  4051d8:	mov    bl,0x7c
  4051da:	loope  0x405205
  4051dc:	or     eax,DWORD PTR [eax]
  4051de:	or     BYTE PTR [edx],bh
  4051e0:	dec    edi
  4051e1:	add    BYTE PTR [ebx],ah
  4051e3:	cmp    al,0x6f
  4051e5:	idiv   BYTE PTR [ebx-0x666cf780]
  4051eb:	inc    ebp
  4051ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051ed:	jge    0x4051e0
  4051ef:	jns    0x4051b1
  4051f1:	sbb    BYTE PTR [ecx-0xeb12feb],cl
  4051f7:	test   eax,0xcd32bb6
  4051fc:	sbb    ch,al
  4051fe:	fwait
  4051ff:	mov    al,0x7e
  405201:	mov    al,ds:0x1947731e
  405206:	ss inc esi
  405208:	and    BYTE PTR [esp+edx*2+0x79],bh
  40520c:	(bad)  
  40520d:	xchg   edx,eax
  40520e:	sbb    al,0xce
  405210:	out    0xf7,eax
  405212:	pop    ds
  405213:	mov    dl,BYTE PTR [edi+0x3d]
  405216:	push   edi
  405217:	sub    eax,0x91f5583f
  40521c:	(bad)  
  40521d:	mov    dh,0x7d
  40521f:	daa    
  405220:	not    ebx
  405222:	call   0x50ab2111
  405227:	push   eax
  405228:	test   al,0xf
  40522a:	mov    dl,0xf5
  40522c:	push   es
  40522d:	loope  0x405229
  40522f:	(bad)  
  405230:	pusha  
  405231:	test   dl,ah
  405233:	and    al,0x70
  405235:	rcr    BYTE PTR [edx-0x6e],cl
  405238:	push   ss
  405239:	mov    bh,0x78
  40523b:	das    
  40523c:	mov    eax,0xde8a3059
  405241:	cmp    al,0x0
  405243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405244:	enter  0x85e7,0xed
  405248:	bnd jg 0x40522b
  40524b:	out    dx,eax
  40524c:	dec    edi
  40524d:	das    
  40524e:	push   cs
  40524f:	xchg   ebp,ebp
  405251:	inc    edi
  405252:	imul   ebp,DWORD PTR [edi+0x3],0xf
  405256:	mov    ds:0xc7683607,al
  40525b:	popf   
  40525c:	jp     0x405265
  40525e:	mov    esp,0xd9a04bd2
  405264:	pop    ebp
  405265:	and    bl,BYTE PTR [eax-0x497178]
  40526b:	or     eax,0xf3502a08
  405270:	ja     0x40521f
  405272:	aaa    
  405273:	xchg   BYTE PTR [edi+0x77d0274c],dl
  405279:	or     BYTE PTR [eax-0x7b],al
  40527c:	jge    0x4052d1
  40527e:	out    dx,eax
  40527f:	pop    ebx
  405280:	sahf   
  405281:	inc    DWORD PTR [edi-0x4f51e502]
  405287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405288:	add    ch,BYTE PTR [ebx]
  40528a:	xlat   BYTE PTR ds:[ebx]
  40528b:	mov    edx,0xc78b604
  405290:	sub    eax,0xa5311f21
  405295:	jmp    0x6d5cf190
  40529a:	nop
  40529b:	or     DWORD PTR [edx],0xffffffe2
  40529e:	ds and eax,0xf85876c3
  4052a4:	int    0x46
  4052a6:	pusha  
  4052a7:	add    BYTE PTR [ecx-0x63],ch
  4052aa:	mov    eax,DWORD PTR [edi]
  4052ac:	lods   al,BYTE PTR ds:[esi]
  4052ad:	mov    bh,0x40
  4052af:	test   al,0xd2
  4052b1:	inc    edi
  4052b2:	xchg   esp,eax
  4052b3:	iret   
  4052b4:	daa    
  4052b5:	sub    BYTE PTR [ebp-0x21],dh
  4052b8:	icebp  
  4052b9:	addr16 loope 0x405273
  4052bc:	and    al,0x4e
  4052be:	outs   dx,BYTE PTR ds:[esi]
  4052bf:	pop    ss
  4052c0:	cmp    cl,ch
  4052c2:	jmp    0x938af236
  4052c7:	dec    eax
  4052c8:	push   es
  4052c9:	sar    DWORD PTR [esi],cl
  4052cb:	das    
  4052cc:	fcomi  st,st(4)
  4052ce:	mov    eax,DWORD PTR [eax-0x18b74393]
  4052d4:	push   eax
  4052d5:	add    dl,BYTE PTR [edx+0x3a6f02d2]
  4052db:	xchg   BYTE PTR [edx-0x77],ah
  4052de:	sub    cl,bl
  4052e0:	cli    
  4052e1:	test   DWORD PTR [edi+0xd149a7d],0x9dbbca30
  4052eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ec:	int    0x60
  4052ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ef:	aaa    
  4052f0:	jb     0x405334
  4052f2:	neg    DWORD PTR [edx+0x7d96e505]
  4052f8:	adc    eax,0x4bd8f713
  4052fd:	clc    
  4052fe:	in     al,dx
  4052ff:	test   ebp,ebx
  405301:	mov    cl,BYTE PTR [ebp+0x86d83d2]
  405307:	fwait
  405308:	mov    ds:0x375fe6,al
  40530d:	mov    ch,0x41
  40530f:	bound  esp,QWORD PTR [edx+ecx*2-0x12d005a1]
  405316:	mov    ebx,0xcaeb2b94
  40531b:	xor    esp,DWORD PTR [edi+0x342e2fec]
  405321:	xchg   ebx,eax
  405322:	push   edx
  405323:	mov    fs,WORD PTR [eax-0x32f44a5c]
  405329:	mov    ebp,0x6389a31e
  40532e:	stc    
  40532f:	mov    al,ds:0xf9a705d6
  405334:	sbb    DWORD PTR [ebx],0x39f1184
  40533a:	mov    dh,0x79
  40533c:	xor    edx,esp
  40533e:	push   eax
  40533f:	imul   ebp,DWORD PTR [eax+0x2c132f6b],0xffffff8c
  405346:	int3   
  405347:	lea    eax,[ecx-0x2b217c6c]
  40534d:	dec    eax
  40534e:	test   al,0x0
  405350:	in     al,0x24
  405352:	ror    DWORD PTR [eax],0x74
  405355:	(bad)  [ebp+ebp*2+0x64]
  405359:	pop    ecx
  40535a:	mov    eax,ds:0x852ae4a4
  40535f:	sar    esi,0xd7
  405362:	fld    TBYTE PTR [esi]
  405364:	xor    bh,BYTE PTR ds:0x1878bb4a
  40536b:	repz jae 0x40535d
  40536e:	repz xchg ebp,eax
  405370:	push   ecx
  405371:	add    BYTE PTR [eax+0x50],dl
  405374:	js     0x40533f
  405376:	in     eax,0xab
  405378:	sbb    eax,0x4bbc0561
  40537d:	test   eax,0xbb2e5c96
  405382:	and    eax,DWORD PTR [eax+eax*8]
  405385:	inc    ebx
  405386:	fisub  WORD PTR [eiz*4+0x1c2cc4be]
  40538d:	cs pop ebx
  40538f:	retf   
  405390:	js     0x4053a6
  405392:	lods   al,BYTE PTR ds:[esi]
  405393:	je     0x40532c
  405395:	les    eax,FWORD PTR [ecx-0x6d]
  405398:	repnz xor al,0x80
  40539b:	jmp    0x4053a1
  40539d:	xchg   esp,eax
  40539e:	push   ebp
  40539f:	or     eax,0xb3b88e60
  4053a4:	mov    gs,WORD PTR [esi]
  4053a6:	dec    edi
  4053a7:	push   ebp
  4053a8:	jmp    0x405355
  4053aa:	pop    es
  4053ab:	adc    BYTE PTR [edx+0x3],0x52
  4053af:	fwait
  4053b0:	aaa    
  4053b1:	add    DWORD PTR [ecx+0x5a99d944],ebx
  4053b7:	jecxz  0x405374
  4053b9:	jno    0x4053e8
  4053bb:	aam    0xe9
  4053bd:	sbb    DWORD PTR [eax+0x170b8f34],eax
  4053c3:	mov    WORD PTR [ecx+0x73],fs
  4053c6:	test   al,0x6c
  4053c8:	add    al,0x0
  4053ca:	mov    bl,0x3c
  4053cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053cd:	mov    ebp,0xd8c1003b
  4053d2:	sbb    DWORD PTR [esi],esi
  4053d4:	outs   dx,BYTE PTR ds:[esi]
  4053d5:	ss add cl,dl
  4053d8:	mov    DWORD PTR [eax],ecx
  4053da:	push   ebx
  4053db:	cdq    
  4053dc:	hlt    
  4053dd:	dec    ebp
  4053de:	call   0xfef3:0xff29c3e1
  4053e5:	test   DWORD PTR [ecx],edx
  4053e7:	imul   edi,DWORD PTR [edx-0x6e198b1f],0xffffffd8
  4053ee:	int    0x4e
  4053f0:	sub    eax,0x982ca8be
  4053f5:	adc    BYTE PTR [esi-0xc],al
  4053f8:	and    al,0x76
  4053fa:	and    ebx,DWORD PTR [esp+eax*8+0x66]
  4053fe:	jne    0x4053e4
  405400:	clc    
  405401:	add    BYTE PTR [eax],dl
  405403:	test   BYTE PTR [ebp-0x52],0xfe
  405407:	(bad)  
  405408:	lock enter 0xa39b,0x1a
  40540d:	icebp  
  40540e:	and    ch,BYTE PTR [ebx-0x62]
  405411:	xchg   ebp,eax
  405412:	inc    edi
  405413:	jmp    0x81e98d3a
  405418:	xchg   edi,eax
  405419:	pop    ebp
  40541a:	int3   
  40541b:	add    BYTE PTR [ebx-0x12],0x6
  40541f:	dec    edx
  405420:	ja     0x4053ab
  405422:	arpl   WORD PTR [eax+0x3a],cx
  405425:	lea    esp,es:[eax+0x1de8417e]
  40542c:	lods   eax,DWORD PTR ds:[esi]
  40542d:	js     0x405480
  40542f:	lds    edx,FWORD PTR [ecx]
  405431:	push   ds
  405432:	xor    al,0x97
  405434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405435:	mov    al,0xda
  405437:	pop    ds
  405438:	sbb    dh,dl
  40543a:	mov    edi,0xc67f0700
  40543f:	jmp    0x8ce18e13
  405444:	popf   
  405445:	xchg   edx,eax
  405446:	xchg   ebx,eax
  405447:	push   cs
  405448:	aas    
  405449:	jp     0x40548b
  40544b:	imul   ebx,DWORD PTR [edx-0x4ae94f9],0xd635e726
  405455:	sub    al,0x72
  405457:	cdq    
  405458:	jo     0x4053e7
  40545a:	(bad)  
  40545c:	dec    ebp
  40545d:	mov    ebp,0xc34b937
  405462:	pushf  
  405463:	ficom  WORD PTR [ecx-0x508eceda]
  405469:	mov    ch,0xa4
  40546b:	push   ss
  40546c:	or     dh,BYTE PTR [ebx]
  40546e:	(bad)  
  40546f:	sub    eax,0x4979ab6b
  405474:	inc    esi
  405475:	cdq    
  405476:	into   
  405477:	in     eax,0xe0
  405479:	rol    BYTE PTR [edx-0x5c47427f],1
  40547f:	xchg   ecx,eax
  405480:	rol    DWORD PTR [eax+0x30],cl
  405483:	imul   BYTE PTR [esi+0x48599ce2]
  405489:	stos   DWORD PTR es:[edi],eax
  40548a:	cmp    BYTE PTR [esi],bh
  40548c:	and    eax,0x7c068236
  405491:	jne    0x405460
  405493:	pusha  
  405494:	fstp   DWORD PTR [ebx+0x7a]
  405497:	into   
  405498:	neg    ebx
  40549a:	(bad)  
  40549b:	test   al,0x52
  40549d:	dec    esp
  40549e:	push   cs
  40549f:	inc    ecx
  4054a0:	add    ch,dl
  4054a2:	sti    
  4054a3:	ret    0x7026
  4054a6:	cmc    
  4054a7:	adc    eax,0xb9664e89
  4054ac:	out    dx,al
  4054ad:	jmp    0x405491
  4054af:	lock aad 0x8a
  4054b2:	jp     0x405518
  4054b4:	mov    cl,0xa7
  4054b6:	or     bh,dh
  4054b8:	sbb    eax,0x795be101
  4054bd:	sbb    al,0x3
  4054bf:	cli    
  4054c0:	mov    edx,0x1692b344
  4054c5:	mov    ds:0xfcc19050,eax
  4054ca:	cs call 0x650a2fdd
  4054d0:	pop    esp
  4054d1:	mov    ebx,0x15f90582
  4054d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d7:	jmp    DWORD PTR [ebx+0x73]
  4054da:	neg    DWORD PTR [esi-0x11]
  4054dd:	dec    ebp
  4054de:	sbb    al,0x6f
  4054e0:	and    eax,0xa9df63b3
  4054e5:	or     al,0xc1
  4054e7:	lds    ebx,FWORD PTR [esi]
  4054e9:	imul   ebx,esi,0x74
  4054ec:	mov    dl,0x44
  4054ee:	cmp    eax,esi
  4054f0:	pop    es
  4054f1:	sbb    al,0x92
  4054f3:	cmp    BYTE PTR [ebx+0x7b],cl
  4054f6:	jne    0x405542
  4054f8:	add    ah,dl
  4054fa:	pop    es
  4054fb:	rcl    BYTE PTR [ebx+esi*4-0x14],cl
  4054ff:	sub    DWORD PTR [edx+0x1ee23a9b],esi
  405505:	add    ah,dh
  405507:	fnstsw WORD PTR [edi+0x38bf53a9]
  40550d:	and    eax,0x54b5642c
  405512:	add    al,0xeb
  405514:	xor    al,0x0
  405516:	arpl   WORD PTR [eax],cx
  405518:	dec    edi
  405519:	dec    ebx
  40551a:	mov    esp,0x9b078f76
  40551f:	xchg   ecx,eax
  405520:	jmp    0xe942f228
  405525:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  40552b:	add    ch,cl
  40552d:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  405533:	add    ch,cl
  405535:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  40553b:	add    al,BYTE PTR [eax]
  40553d:	jmp    0xe84057e0
  405542:	sahf   
  405543:	add    al,BYTE PTR [eax]
  405545:	call   0xe84057e8
  40554a:	sahf   
  40554b:	add    al,BYTE PTR [eax]
  40554d:	call   0xeb4057f0
  405552:	sahf   
  405553:	add    al,BYTE PTR [eax]
  405555:	jmp    0x4054f5
  405557:	add    al,BYTE PTR [eax]
  405559:	jmp    0x4054f9
  40555b:	add    al,BYTE PTR [eax]
  40555d:	jmp    0x4054fd
  40555f:	add    al,BYTE PTR [eax]
  405561:	jmp    0x29e:0xea00029e
  405568:	add    dl,ch
  40556a:	add    BYTE PTR [esi-0x6115fffe],bl
  405570:	add    al,BYTE PTR [eax]
  405572:	in     eax,dx
  405573:	sahf   
  405574:	add    al,BYTE PTR [eax]
  405576:	in     eax,0x9e
  405578:	add    al,BYTE PTR [eax]
  40557a:	in     eax,dx
  40557b:	sahf   
  40557c:	add    al,BYTE PTR [eax]
  40557e:	in     eax,0x9e
  405580:	add    al,BYTE PTR [eax]
  405582:	in     al,dx
  405583:	sahf   
  405584:	add    al,BYTE PTR [eax]
  405586:	in     al,0x9e
  405588:	add    al,BYTE PTR [eax]
  40558a:	in     al,dx
  40558b:	sahf   
  40558c:	add    al,BYTE PTR [eax]
  40558e:	in     al,0x9e
  405590:	add    al,BYTE PTR [eax]
  405592:	jmp    0xd9405835
  405597:	das    
  405598:	hlt    
  405599:	jmp    eax
  40559b:	mov    eax,ds:0x9be305fb
  4055a0:	std    
  4055a1:	add    esi,ebp
  4055a3:	popf   
  4055a4:	test   DWORD PTR [ecx],0xfff99fef
  4055aa:	call   0xe940584d
  4055af:	sahf   
  4055b0:	add    al,BYTE PTR [eax]
  4055b2:	add    BYTE PTR [esi+eax*1],al
  4055b5:	add    BYTE PTR [eax],al
  4055b7:	add    al,0x6
  4055b9:	add    BYTE PTR [eax],al
  4055bb:	cmc    
  4055bc:	add    eax,0x5f50000
  4055c1:	add    BYTE PTR [eax],al
  4055c3:	mov    BYTE PTR ds:0x5c60000,0x0
  4055ca:	add    BYTE PTR [edi+0x5],dh
  4055d0:	mov    bh,0x5
  4055d2:	add    BYTE PTR [eax],al
  4055d4:	enter  0x5,0x0
  4055d8:	mov    eax,0xb9000005
  4055dd:	add    eax,0x5b90000
  4055e2:	add    BYTE PTR [eax],al
  4055e4:	mov    al,BYTE PTR ds:0x57a0000
  4055ea:	add    BYTE PTR [eax],al
  4055ec:	jnp    0x4055f3
  4055ee:	add    BYTE PTR [eax],al
  4055f0:	jnp    0x4055f7
  4055f2:	add    BYTE PTR [eax],al
  4055f4:	ins    BYTE PTR es:[edi],dx
  4055f5:	add    eax,0x56c0000
  4055fa:	add    BYTE PTR [eax],al
  4055fc:	jge    0x405603
  4055fe:	add    BYTE PTR [eax],al
  405600:	jge    0x405607
  405602:	add    BYTE PTR [eax],al
  405604:	dec    esi
  405605:	add    eax,0x54e0000
  40560a:	add    BYTE PTR [eax],al
  40560c:	aas    
  40560d:	add    eax,0x53f0000
  405612:	add    BYTE PTR [eax],al
  405614:	xor    BYTE PTR ds:0x5400000,al
  40561a:	add    BYTE PTR [eax],al
  40561c:	inc    ecx
  40561d:	add    eax,0x5410000
  405622:	add    BYTE PTR [eax],al
  405624:	add    al,0x5
  405626:	add    BYTE PTR [eax],al
  405628:	add    al,0x5
  40562a:	add    BYTE PTR [eax],al
  40562c:	popf   
  40562d:	fwait
  40562e:	add    eax,DWORD PTR [eax]
  405630:	popf   
  405631:	fwait
  405632:	add    eax,DWORD PTR [eax]
  405634:	add    BYTE PTR [ebp-0x62fffc65],bl
  40563a:	fwait
  40563b:	add    eax,DWORD PTR [eax]
  40563d:	popf   
  40563e:	fwait
  40563f:	add    eax,DWORD PTR [eax]
  405641:	popf   
  405642:	fwait
  405643:	add    eax,DWORD PTR [eax]
  405645:	popf   
  405646:	fwait
  405647:	add    eax,DWORD PTR [eax]
  405649:	popf   
  40564a:	fwait
  40564b:	add    eax,DWORD PTR [eax]
  40564d:	popf   
  40564e:	fwait
  40564f:	add    eax,DWORD PTR [eax]
  405651:	popf   
  405652:	fwait
  405653:	add    eax,DWORD PTR [eax]
  405655:	popf   
  405656:	fwait
  405657:	add    eax,DWORD PTR [eax]
  405659:	popf   
  40565a:	fwait
  40565b:	add    eax,DWORD PTR [eax]
  40565d:	popf   
  40565e:	fwait
  40565f:	add    eax,DWORD PTR [eax]
  405661:	popf   
  405662:	fwait
  405663:	add    eax,DWORD PTR [eax]
  405665:	popf   
  405666:	fwait
  405667:	add    eax,DWORD PTR [eax]
  405669:	popf   
  40566a:	pushf  
  40566b:	add    eax,DWORD PTR [eax]
  40566d:	popf   
  40566e:	cwde   
  40566f:	add    eax,DWORD PTR [eax]
  405671:	popf   
  405672:	cdq    
  405673:	add    eax,DWORD PTR [eax]
  405675:	popf   
  405676:	lea    eax,[ebx]
  405678:	or     BYTE PTR [ebp-0x62f7fbeb],bl
  40567e:	pop    ebp
  40567f:	add    ecx,DWORD PTR [eax]
  405681:	popf   
  405682:	in     eax,0x3
  405684:	or     BYTE PTR [ebp-0x62f7fc13],bl
  40568a:	jne    0x40568f
  40568c:	or     BYTE PTR [ebp-0x62f7fbc3],bl
  405692:	inc    ebp
  405693:	add    ecx,DWORD PTR [eax]
  405695:	popf   
  405696:	popf   
  405697:	add    ecx,DWORD PTR [eax]
  405699:	add    BYTE PTR [ebp-0x62f7fcdb],bl
  40569f:	in     eax,dx
  4056a0:	add    ecx,DWORD PTR [eax]
  4056a2:	popf   
  4056a3:	jne    0x4056a8
  4056a5:	or     BYTE PTR [ebp-0x5afc1afe],bl
  4056ab:	add    bl,BYTE PTR [ebp+0x3]
  4056ae:	xchg   ebp,eax
  4056af:	add    dl,BYTE PTR ds:0x8d029504
  4056b5:	add    esp,DWORD PTR [ebp-0x5afc14fe]
  4056bb:	add    ch,BYTE PTR [ebx+0x3]
  4056be:	xchg   ebp,eax
  4056bf:	add    ch,BYTE PTR [ebx]
  4056c1:	add    al,0x95
  4056c3:	add    ch,BYTE PTR [ebx+0xb02a503]
  4056c9:	add    al,0xa5
  4056cb:	add    cl,BYTE PTR [ebx-0x34fd6afd]
  4056d1:	add    edx,DWORD PTR [ebp-0x5afcb4fe]
  4056d7:	add    bl,bl
  4056d9:	add    esp,DWORD PTR [ebp-0x6afca4fe]
  4056df:	add    bl,BYTE PTR [ebx+0x1b029503]
  4056e5:	add    esp,DWORD PTR [ebp-0x5afc24fe]
  4056eb:	add    bl,BYTE PTR [ebx+0x3]
  4056ee:	xchg   ebp,eax
  4056ef:	add    bl,BYTE PTR [ebx+0x1b029503]
  4056f5:	add    esp,DWORD PTR [ebp-0x5afc0cfe]
  4056fb:	add    dh,BYTE PTR [ebx+0x3]
  4056fe:	add    BYTE PTR [ebp-0x6afc5cfe],dl
  405704:	add    ah,BYTE PTR [ebx]
  405706:	add    esp,DWORD PTR [ebp-0x5afbecfe]
  40570c:	add    dl,BYTE PTR [ebx+0x43029504]
  405712:	add    al,0x95
  405714:	add    al,bl
  405716:	add    al,0xa5
  405718:	add    ah,bl
  40571a:	add    esp,DWORD PTR [ebp-0x6afb9cfe]
  405720:	add    al,BYTE PTR [eax]
  405722:	adc    ebx,DWORD PTR [ecx-0x5e6d0006]
  405728:	cli    
  405729:	jmp    edx
  40572b:	sahf   
  40572c:	cli    
  40572d:	jmp    DWORD PTR [edx-0x5f]
  405730:	cli    
  405731:	call   DWORD PTR [edx]
  405733:	cdq    
  405734:	cli    
  405735:	call   DWORD PTR [edx-0x1100055f]
  40573b:	sahf   
  40573c:	cli    
  40573d:	jmp    DWORD PTR [esi-0x5f]
  405740:	cli    
  405741:	jmp    FWORD PTR [esi]
  405743:	cdq    
  405744:	cli    
  405745:	jmp    DWORD PTR [esi+0xefffaa1]
  40574b:	cdq    
  40574c:	cli    
  40574d:	inc    DWORD PTR [esi-0x3100055f]
  405753:	sahf   
  405754:	cli    
  405755:	inc    DWORD PTR [esi-0x5f]
  405758:	cli    
  405759:	(bad)  
  40575a:	ficomp WORD PTR [esi-0x5ea90006]
  405760:	cli    
  405761:	call   FWORD PTR [esi-0x56200]
  405767:	push   ss
  405768:	mov    eax,ds:0x9edefffa
  40576d:	cli    
  40576e:	call   DWORD PTR [esi-0x5f]
  405771:	cli    
  405772:	call   FWORD PTR [esi+0x16fffa9e]
  405778:	mov    eax,ds:0x9ef6fffa
  40577d:	cli    
  40577e:	jmp    FWORD PTR [esi-0x5f]
  405781:	cli    
  405782:	jmp    DWORD PTR [esi+0x1efffa9e]
  405788:	mov    eax,ds:0x9916fffa
  40578d:	cli    
  40578e:	dec    DWORD PTR [esi+0x46fffa9e]
  405794:	cdq    
  405795:	cli    
  405796:	(bad)  
  405797:	mov    esi,0xfffffa9e
  40579c:	cmp    al,BYTE PTR [edx]
  40579e:	or     BYTE PTR [eax],al
  4057a0:	retf   0x801
  4057a3:	add    BYTE PTR [edx+0x2a0007fe],cl
  4057a9:	add    cl,BYTE PTR [eax]
  4057ab:	add    dl,bh
  4057ad:	add    DWORD PTR [eax],ecx
  4057af:	add    BYTE PTR [edx+0x1],ch
  4057b2:	or     BYTE PTR [eax],al
  4057b4:	stos   BYTE PTR es:[edi],al
  4057b5:	inc    BYTE PTR [edi]
  4057b7:	add    BYTE PTR [edx],ch
  4057b9:	add    cl,BYTE PTR [eax]
  4057bb:	add    BYTE PTR ds:0x75000802,al
  4057c1:	add    DWORD PTR [eax],ecx
  4057c3:	add    BYTE PTR [ebp+0x7fe],dh
  4057c9:	add    eax,0xa5000802
  4057ce:	inc    BYTE PTR [edi]
  4057d0:	add    BYTE PTR ds:0xd5000802,dl
  4057d6:	add    DWORD PTR [eax],ecx
  4057d8:	add    BYTE PTR [ebp+0x1],ah
  4057db:	or     BYTE PTR [eax],al
  4057dd:	aad    0x1
  4057df:	or     BYTE PTR [eax],al
  4057e1:	inc    ebp
  4057e2:	add    DWORD PTR [eax],ecx
  4057e4:	add    BYTE PTR ds:0xb5000802,al
  4057ea:	add    DWORD PTR [eax],ecx
  4057ec:	add    BYTE PTR [ebp+0x1],dh
  4057ef:	or     BYTE PTR [eax],al
  4057f1:	in     eax,0x1
  4057f3:	or     BYTE PTR [eax],al
  4057f5:	and    eax,0x95000801
  4057fa:	add    DWORD PTR [eax],ecx
  4057fc:	add    BYTE PTR [ebp+0x1],ch
  4057ff:	or     BYTE PTR [eax],al
  405801:	in     eax,dx
  405802:	add    DWORD PTR [eax],ecx
  405804:	add    BYTE PTR ds:0x7d000801,bh
  40580a:	add    DWORD PTR [eax],ecx
  40580c:	add    BYTE PTR [ebp+0x2d0007fe],ch
  405812:	inc    BYTE PTR [edi]
  405814:	add    BYTE PTR [ebp-0x62f7fbbe],bl
  40581a:	ret    0x804
  40581d:	popf   
  40581e:	mov    ds:0x229d0803,al
  405823:	add    al,0x8
  405825:	popf   
  405826:	repnz add ecx,DWORD PTR [eax]
  405829:	popf   
  40582a:	jb     0x405830
  40582c:	or     BYTE PTR [eax],al
  40582e:	popf   
  40582f:	mov    ds:0x229d0803,al
  405834:	add    al,0x8
  405836:	popf   
  405837:	repnz add ecx,DWORD PTR [eax]
  40583a:	popf   
  40583b:	jb     0x405841
  40583d:	or     BYTE PTR [ebp-0x62f7fc6a],bl
  405843:	push   ds
  405844:	add    al,0x8
  405846:	popf   
  405847:	(bad)  
  405848:	add    ecx,DWORD PTR [eax]
  40584a:	popf   
  40584b:	pop    esi
  40584c:	add    al,0x8
  40584e:	popf   
  40584f:	test   BYTE PTR [ebx],0x8
  405852:	popf   
  405853:	jle    0x405859
  405855:	or     BYTE PTR [ebp-0x62f7fc4a],bl
  40585b:	ds add al,0x8
  40585e:	popf   
  40585f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405860:	add    ecx,DWORD PTR [eax]
  405862:	popf   
  405863:	cs add al,0x8
  405866:	popf   
  405867:	add    cx,WORD PTR [eax]
  40586a:	popf   
  40586b:	out    dx,al
  40586c:	add    ecx,DWORD PTR [eax]
  40586e:	popf   
  40586f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405870:	add    ecx,DWORD PTR [eax]
  405872:	popf   
  405873:	cs add al,0x8
  405876:	popf   
  405877:	add    cx,WORD PTR [eax]
  40587a:	popf   
  40587b:	out    dx,al
  40587c:	add    ecx,DWORD PTR [eax]
  40587e:	popf   
  40587f:	mov    es,WORD PTR [ebx]
  405881:	or     BYTE PTR [ebp-0x62f7fbea],bl
  405887:	pop    esi
  405888:	add    ecx,DWORD PTR [eax]
  40588a:	popf   
  40588b:	out    0x3,al
  40588d:	or     BYTE PTR [ebp+0x41402],bl
  405893:	xchg   ebp,eax
  405894:	add    cl,BYTE PTR [ebx+eax*1+0x4440295]
  40589b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40589c:	add    bh,BYTE PTR [ebx+eax*1+0x3e402a5]
  4058a3:	xchg   ebp,eax
  4058a4:	add    bl,BYTE PTR [ebx+eax*1-0x6b]
  4058a8:	add    dl,BYTE PTR [esp+eax*1]
  4058ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ac:	add    cl,BYTE PTR [ebx+eax*1+0x3e402a5]
  4058b3:	xchg   ebp,eax
  4058b4:	add    bl,BYTE PTR [ebx+eax*1-0x6b]
  4058b8:	add    dl,BYTE PTR [esp+eax*1]
  4058bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058bc:	add    cl,BYTE PTR [ebx+eax*1+0x3da02a5]
  4058c3:	xchg   esp,eax
  4058c4:	add    bl,dl
  4058c6:	add    al,0x94
  4058c8:	add    bl,BYTE PTR [edx+0x3]
  4058cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058cc:	add    bl,BYTE PTR [edx+0x4]
  4058cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d0:	add    bh,BYTE PTR [edx-0x45fd6bfd]
  4058d6:	add    al,0x94
  4058d8:	add    bh,BYTE PTR [edx]
  4058da:	add    esp,DWORD PTR [edx+eax*1+0x2a4043a]
  4058e1:	cli    
  4058e2:	add    edx,DWORD PTR [edx+eax*1+0x29404fa]
  4058e9:	jp     0x4058ee
  4058eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ec:	add    bh,BYTE PTR [edx+0x4]
  4058ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f0:	add    bl,BYTE PTR [edx-0x65fd6bfd]
  4058f6:	add    al,0x0
  4058f8:	xchg   esp,eax
  4058f9:	add    bl,BYTE PTR [edx]
  4058fb:	add    esp,DWORD PTR [edx+eax*1+0x2a4041a]
  405902:	repnz add edx,DWORD PTR [edx+eax*1+0x29404f2]
  40590a:	add    BYTE PTR [edx-0x62],ah
  40590d:	stc    
  40590e:	jmp    DWORD PTR [ecx-0x67]
  405911:	stc    
  405912:	push   DWORD PTR [ecx]
  405914:	mov    eax,ds:0x9e31fff9
  405919:	stc    
  40591a:	jmp    DWORD PTR [ecx-0x5e00065f]
  405920:	sahf   
  405921:	stc    
  405922:	call   DWORD PTR [ecx]
  405924:	mov    eax,ds:0x9e11fff9
  405929:	stc    
  40592a:	inc    DWORD PTR [ecx-0x7e00065f]
  405930:	sahf   
  405931:	stc    
  405932:	call   DWORD PTR [ecx]
  405934:	mov    eax,ds:0x9e11fff9
  405939:	stc    
  40593a:	inc    DWORD PTR [ecx-0x7e00065f]
  405940:	sahf   
  405941:	stc    
  405942:	jmp    ecx
  405944:	sahf   
  405945:	stc    
  405946:	jmp    ecx
  405948:	lahf   
  405949:	stc    
  40594a:	call   DWORD PTR [ecx-0x5f]
  40594d:	stc    
  40594e:	call   DWORD PTR [ecx-0x62]
  405951:	stc    
  405952:	inc    ecx
  405954:	sahf   
  405955:	stc    
  405956:	inc    ecx
  405958:	lahf   
  405959:	stc    
  40595a:	push   DWORD PTR [ecx]
  40595c:	add    BYTE PTR [ecx-0x61ce0007],ah
  405962:	stc    
  405963:	inc    DWORD PTR [ecx]
  405965:	mov    eax,ds:0x9e01fff9
  40596a:	stc    
  40596b:	push   DWORD PTR [ecx-0x5f]
  40596e:	or     eax,DWORD PTR [eax]
  405970:	jb     0x405910
  405972:	or     eax,DWORD PTR [eax]
  405974:	mov    ds:0xa2000b9e,al
  405979:	lahf   
  40597a:	or     eax,DWORD PTR [eax]
  40597c:	adc    ah,BYTE PTR [ecx-0x61edfff5]
  405982:	or     eax,DWORD PTR [eax]
  405984:	add    BYTE PTR [ebx+0x6],bh
  405987:	or     DWORD PTR [eax],eax
  405989:	jnp    0x405990
  40598b:	or     DWORD PTR [eax],eax
  40598d:	retf   
  40598e:	push   es
  40598f:	or     DWORD PTR [eax],eax
  405991:	mov    ebx,0x7b000905
  405996:	push   es
  405997:	or     DWORD PTR [eax],eax
  405999:	jnp    0x4059a0
  40599b:	or     DWORD PTR [eax],eax
  40599d:	or     eax,DWORD PTR [esi]
  40599f:	or     DWORD PTR [eax],eax
  4059a1:	sti    
  4059a2:	add    al,0x9
  4059a4:	add    BYTE PTR [ebx-0x64fff6fa],bl
  4059aa:	add    eax,0x62b0009
  4059af:	or     DWORD PTR [eax],eax
  4059b1:	sbb    eax,DWORD PTR ds:0x69b0009
  4059b7:	or     DWORD PTR [eax],eax
  4059b9:	fwait
  4059ba:	add    eax,0x62b0009
  4059bf:	or     DWORD PTR [eax],eax
  4059c1:	add    BYTE PTR [ebx],bl
  4059c3:	add    eax,0x5cb0009
  4059c8:	or     DWORD PTR [eax],eax
  4059ca:	retf   
  4059cb:	add    al,0x9
  4059cd:	add    BYTE PTR [ebx+0x5],bh
  4059d0:	or     DWORD PTR [eax],eax
  4059d2:	imul   eax,DWORD PTR [ecx+ecx*1],0x0
  4059d6:	or     eax,DWORD PTR [esi]
  4059d8:	or     DWORD PTR [eax],eax
  4059da:	or     eax,DWORD PTR ds:0x57b0009
  4059e0:	or     DWORD PTR [eax],eax
  4059e2:	imul   eax,DWORD PTR [ecx+ecx*1],0x0
  4059e6:	stos   DWORD PTR es:[edi],eax
  4059e7:	add    eax,0x4ab0009
  4059ec:	or     DWORD PTR [eax],eax
  4059ee:	sbb    eax,DWORD PTR [esi]
  4059f0:	or     DWORD PTR [eax],eax
  4059f2:	or     eax,DWORD PTR ds:0x52b0009
  4059f8:	or     DWORD PTR [eax],eax
  4059fa:	sub    eax,DWORD PTR [ecx+ecx*1]
  4059fd:	add    BYTE PTR [ebp-0x62f6fce0],bl
  405a03:	sbb    BYTE PTR [edx],al
  405a05:	or     DWORD PTR [ebp-0x62f6fc88],ebx
  405a0b:	jo     0x405a0f
  405a0d:	or     DWORD PTR [ebp-0x62f6fd18],ebx
  405a13:	loopne 0x405a16
  405a15:	or     DWORD PTR [ebp-0x62f6fbc8],ebx
  405a1b:	xor    BYTE PTR ds:0x4a89d09,al
  405a21:	or     DWORD PTR [ebp+0x905a0],ebx
  405a27:	popf   
  405a28:	sbb    BYTE PTR [ecx+ecx*1],al
  405a2b:	popf   
  405a2c:	adc    BYTE PTR ds:0x4889d09,al
  405a32:	or     DWORD PTR [ebp-0x62f6fb00],ebx
  405a38:	sbb    BYTE PTR [ecx+ecx*1],al
  405a3b:	popf   
  405a3c:	adc    BYTE PTR ds:0x4889d09,al
  405a42:	or     DWORD PTR [ebp-0x62f6fb00],ebx
  405a48:	push   0x609d0903
  405a4d:	add    al,0x9
  405a4f:	popf   
  405a50:	fadd   DWORD PTR [ebx]
  405a52:	or     DWORD PTR [ebp-0x62f6fb30],ebx
  405a58:	dec    eax
  405a59:	add    ecx,DWORD PTR [ecx]
  405a5b:	popf   
  405a5c:	rol    BYTE PTR [ecx+ecx*1],0x9d
  405a60:	cmp    BYTE PTR [ecx+ecx*1],al
  405a63:	popf   
  405a64:	xor    BYTE PTR ds:0x4089d09,al
  405a6a:	or     DWORD PTR [ebp-0x62f6fb80],ebx
  405a70:	clc    
  405a71:	add    ecx,DWORD PTR [ecx]
  405a73:	popf   
  405a74:	lock add al,0x9
  405a77:	popf   
  405a78:	add    ah,BYTE PTR [esi-0x61fd6bfd]
  405a7e:	add    al,0xa4
  405a80:	add    dl,BYTE PTR [esi]
  405a82:	add    al,0xa4
  405a84:	add    cl,BYTE PTR [esi]
  405a86:	add    eax,0x3e90294
  405a8b:	add    BYTE PTR [edx-0x5dfc56fe],bl
  405a91:	add    cl,cl
  405a93:	add    ebx,DWORD PTR [edx-0x5dfc76fe]
  405a99:	add    bh,cl
  405a9b:	add    ebx,DWORD PTR [edx-0x5dfbc6fe]
  405aa1:	add    bl,BYTE PTR [ecx]
  405aa3:	add    al,0x9a
  405aa5:	add    bl,BYTE PTR [ecx+0x4]
  405aa8:	mov    ds:0x9a03f102,al
  405aad:	add    dh,BYTE PTR [ecx]
  405aaf:	add    al,0xa2
  405ab1:	add    al,BYTE PTR [ecx]
  405ab3:	add    al,0x9a
  405ab5:	add    al,BYTE PTR [ecx+0x4]
  405ab8:	mov    ds:0x9a040102,al
  405abd:	add    al,BYTE PTR [ecx+0x4]
  405ac0:	mov    ds:0x9a03d102,al
  405ac5:	add    dl,BYTE PTR [ecx]
  405ac7:	add    al,0xa2
  405ac9:	add    ch,ch
  405acb:	add    ebx,DWORD PTR [edx-0x5dfbdafe]
  405ad1:	add    cl,ch
  405ad3:	add    ebx,DWORD PTR [edx-0x5dfbfafe]
  405ad9:	add    bh,ch
  405adb:	add    ebx,DWORD PTR [edx-0x5dfc4afe]
  405ae1:	add    bl,BYTE PTR ds:0xd5029a04
  405ae7:	add    esp,DWORD PTR [edx-0x6afc15fe]
  405aed:	add    ch,BYTE PTR [edx+0x3]
  405af0:	add    BYTE PTR [ebp-0x6155fffe],ah
  405af6:	or     al,BYTE PTR [eax]
  405af8:	sub    bl,BYTE PTR [esi-0x6135fff6]
  405afe:	or     al,BYTE PTR [eax]
  405b00:	dec    edx
  405b01:	sahf   
  405b02:	or     al,BYTE PTR [eax]
  405b04:	mov    bl,BYTE PTR [esi-0x61f5fff6]
  405b0a:	or     al,BYTE PTR [eax]
  405b0c:	jmp    0xd94060af
  405b11:	sahf   
  405b12:	add    eax,0x59ee100
  405b17:	add    cl,dl
  405b19:	sahf   
  405b1a:	add    eax,0x59eed00
  405b1f:	add    ch,dh
  405b21:	sahf   
  405b22:	add    eax,0x59ee500
  405b27:	add    ch,ch
  405b29:	sahf   
  405b2a:	add    eax,0x59eeb00
  405b2f:	add    bl,bl
  405b31:	sahf   
  405b32:	add    eax,0x59ee300
  405b37:	add    bl,dl
  405b39:	sahf   
  405b3a:	add    eax,0x59eef00
  405b3f:	add    bh,dh
  405b41:	sahf   
  405b42:	add    eax,0x59ee700
  405b47:	add    bh,ch
  405b49:	sahf   
  405b4a:	add    eax,0x59ee800
  405b4f:	add    al,bl
  405b51:	sahf   
  405b52:	add    eax,0x9e00e000
  405b57:	add    eax,0x59ed000
  405b5c:	add    ah,ch
  405b5e:	sahf   
  405b5f:	add    eax,0x59ef400
  405b64:	add    ah,ah
  405b66:	sahf   
  405b67:	add    eax,0x59eec00
  405b6c:	add    BYTE PTR [eax],al
  405b6e:	mov    bh,0x2
  405b70:	add    eax,0x5027700
  405b75:	add    BYTE PTR [edi+0x2],bh
  405b78:	add    eax,0x5026f00
  405b7d:	add    BYTE PTR [ebx+0x2],dh
  405b80:	add    eax,0x5027300
  405b85:	add    BYTE PTR [ecx+eax*1+0x6800302],al
  405b8c:	add    eax,0x60c7205
  405b91:	push   es
  405b92:	inc    ebx
  405b93:	or     eax,DWORD PTR [edi]
  405b95:	pop    es
  405b96:	cmp    al,0xa
  405b98:	or     BYTE PTR [eax],cl
  405b9a:	cmp    al,0xa
  405b9c:	or     BYTE PTR [eax],cl
  405b9e:	dec    ebp
  405b9f:	or     DWORD PTR [ecx],ecx
  405ba1:	or     DWORD PTR ds:0x3e090909,ebp
  405ba7:	adc    BYTE PTR [edx],cl
  405ba9:	or     bh,BYTE PTR [esi]
  405bab:	adc    BYTE PTR [edx],cl
  405bad:	or     ch,BYTE PTR [esi]
  405baf:	adc    BYTE PTR [edx],cl
  405bb1:	or     cl,BYTE PTR [esi]
  405bb3:	adc    BYTE PTR [edx],cl
  405bb5:	or     bh,bh
  405bb7:	push   cs
  405bb8:	or     ecx,DWORD PTR [ebx]
  405bba:	add    bh,bh
  405bbc:	push   cs
  405bbd:	or     ecx,DWORD PTR [ebx]
  405bbf:	(bad)  
  405bc0:	ud2    
  405bc2:	or     ebp,edi
  405bc4:	push   cs
  405bc5:	or     ecx,DWORD PTR [ebx]
  405bc7:	clc    
  405bc8:	or     eax,0xdc80c0c
  405bcd:	or     al,0xc
  405bcf:	call   0xc84c67e1
  405bd4:	or     eax,0xdb80c0c
  405bd9:	or     al,0xc
  405bdb:	call   0xc84c67ed
  405be0:	or     eax,0xdc80c0c
  405be5:	or     al,0xc
  405be7:	popf   
  405be8:	pushw  cs
  405bea:	or     eax,0xd0e5e98
  405bef:	nop
  405bf0:	jbe    0x405c00
  405bf2:	or     eax,0xd0e6ea8
  405bf7:	mov    al,ds:0x980d0e66
  405bfc:	pop    esi
  405bfd:	push   cs
  405bfe:	or     eax,0xd0e7690
  405c03:	test   al,0x6e
  405c05:	push   cs
  405c06:	or     eax,0xe1165a0
  405c0b:	fwait
  405c0c:	pop    ebp
  405c0d:	adc    DWORD PTR [esi],ecx
  405c0f:	xchg   ebx,eax
  405c10:	jne    0x405c23
  405c12:	push   cs
  405c13:	stos   DWORD PTR es:[edi],eax
  405c14:	ins    DWORD PTR es:[edi],dx
  405c15:	adc    DWORD PTR [esi],ecx
  405c17:	mov    ds:0x9b0e1165,eax
  405c1c:	pop    ebp
  405c1d:	adc    DWORD PTR [esi],ecx
  405c1f:	add    BYTE PTR [ebx-0x54f1f28b],dl
  405c25:	ins    DWORD PTR es:[edi],dx
  405c26:	or     eax,0xd65a30e
  405c2b:	push   cs
  405c2c:	fwait
  405c2d:	pop    ebp
  405c2e:	or     eax,0xd75930e
  405c33:	push   cs
  405c34:	stos   DWORD PTR es:[edi],eax
  405c35:	ins    DWORD PTR es:[edi],dx
  405c36:	or     eax,0xd65a30e
  405c3b:	push   cs
  405c3c:	fwait
  405c3d:	pop    ebp
  405c3e:	or     eax,0xd75930e
  405c43:	push   cs
  405c44:	stos   DWORD PTR es:[edi],eax
  405c45:	ins    DWORD PTR es:[edi],dx
  405c46:	or     eax,0xe64a30e
  405c4b:	setp   BYTE PTR [esi+ecx*1+0xf]
  405c50:	xchg   edx,eax
  405c51:	je     0x405c61
  405c53:	rsm    
  405c55:	ins    BYTE PTR es:[edi],dx
  405c56:	push   cs
  405c57:	cpuid  
  405c59:	fs push cs
  405c5b:	setp   BYTE PTR [esi+ecx*1+0xf]
  405c60:	xchg   edx,eax
  405c61:	add    dh,dh
  405c63:	push   cs
  405c64:	stos   BYTE PTR es:[edi],al
  405c65:	or     eax,0xda20eee
  405c6a:	out    0xe,al
  405c6c:	call   0xf60d:0x920ede0d
  405c73:	push   cs
  405c74:	stos   BYTE PTR es:[edi],al
  405c75:	or     ebp,esi
  405c77:	push   cs
  405c78:	mov    ds:0x9a0ee60b,al
  405c7d:	or     ebx,esi
  405c7f:	push   cs
  405c80:	xchg   edx,eax
  405c81:	or     esi,esi
  405c83:	push   cs
  405c84:	add    BYTE PTR [edx-0x5df111f5],ch
  405c8a:	or     ebp,ecx
  405c8c:	add    ecx,DWORD PTR [ebp-0x71ee04ef]
  405c92:	paddusw mm2,QWORD PTR [edi]
  405c95:	mov    cl,0x16
  405c97:	aam    0x18
  405c99:	test   al,0x15
  405c9b:	fist   WORD PTR ds:0x15d714b3
  405ca1:	stos   DWORD PTR es:[edi],eax
  405ca2:	adc    al,0xfe
  405ca4:	push   ss
  405ca5:	xchg   edx,eax
  405ca6:	adc    esi,esi
  405ca8:	push   ss
  405ca9:	mov    dl,BYTE PTR [ebx]
  405cab:	icebp  
  405cac:	sbb    eax,DWORD PTR [ebp-0x7ae40ee6]
  405cb2:	sbb    ah,cl
  405cb4:	sbb    esi,DWORD PTR [ebp-0x4ae41ee6]
  405cba:	sbb    dl,al
  405cbc:	sbb    al,0xa4
  405cbe:	sbb    eax,edx
  405cc0:	sbb    al,0xa4
  405cc2:	sbb    DWORD PTR [eax],eax
  405cc4:	sbb    eax,0x1d001994
  405cc9:	xchg   esp,eax
  405cca:	sbb    ebx,esi
  405ccc:	sbb    DWORD PTR [edi-0x78e60ce8],eax
  405cd2:	sbb    bl,ah
  405cd4:	sbb    DWORD PTR [edi-0x48e61ce8],esi
  405cda:	sbb    BYTE PTR [eax],al
  405cdc:	shl    DWORD PTR [eax+ebx*1+0x18a4d31a],cl
  405ce3:	sbb    al,BYTE PTR [ebx]
  405ce5:	xchg   edi,eax
  405ce6:	sbb    BYTE PTR [edx],bl
  405ce8:	add    eax,DWORD PTR [eax]
  405cea:	xchg   edi,eax
  405ceb:	sbb    BYTE PTR [edx],bl
  405ced:	xacquire xchg DWORD PTR [edi],edx
  405cf0:	sbb    esi,edx
  405cf2:	xchg   DWORD PTR [edi],edx
  405cf4:	sbb    esp,edx
  405cf6:	mov    bh,0x17
  405cf8:	sbb    esp,edx
  405cfa:	mov    bh,0x17
  405cfc:	sbb    edx,edx
  405cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cff:	pop    ss
  405d00:	sbb    edx,edx
  405d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d03:	pop    ss
  405d04:	sbb    eax,DWORD PTR [edx]
  405d06:	xchg   esi,eax
  405d07:	pop    ss
  405d08:	sbb    eax,DWORD PTR [edx]
  405d0a:	xchg   esi,eax
  405d0b:	pop    ss
  405d0c:	sbb    esi,ebp
  405d0e:	mov    bl,BYTE PTR [esi]
  405d10:	sbb    al,0xed
  405d12:	sbb    BYTE PTR [esi],0x1c
  405d15:	in     eax,0xba
  405d17:	push   ds
  405d18:	sbb    al,0xdd
  405d1a:	mov    dl,0x1e
  405d1c:	sbb    al,0xd5
  405d1e:	stos   BYTE PTR es:[edi],al
  405d1f:	push   ds
  405d20:	sbb    al,0xcd
  405d22:	mov    ds:0x7d051c1e,al
  405d27:	push   ds
  405d28:	sbb    al,0xfd
  405d2a:	xchg   edx,eax
  405d2b:	push   ds
  405d2c:	sbb    al,0xf5
  405d2e:	mov    bl,BYTE PTR [esi]
  405d30:	sbb    al,0xed
  405d32:	sbb    BYTE PTR [esi],0x1c
  405d35:	in     eax,0xba
  405d37:	push   ds
  405d38:	sbb    al,0xdd
  405d3a:	mov    dl,0x1e
  405d3c:	sbb    al,0xd5
  405d3e:	stos   BYTE PTR es:[edi],al
  405d3f:	push   ds
  405d40:	sbb    al,0xcd
  405d42:	mov    ds:0xbd051c1e,al
  405d47:	push   ds
  405d48:	sbb    al,0xfd
  405d4a:	xchg   edx,eax
  405d4b:	push   ds
  405d4c:	sbb    al,0xf4
  405d4e:	add    BYTE PTR [ebx-0x7c13e2e3],cl
  405d54:	sbb    eax,0x1bc1001d
  405d59:	sbb    eax,0x1d1bf11d
  405d5e:	sbb    eax,0x1d1d1bf1
  405d63:	rcr    DWORD PTR [ebx],1
  405d65:	sbb    eax,0x1d1ba11d
  405d6a:	sbb    eax,0x1d1d1bb1
  405d6f:	mov    cl,0x1b
  405d71:	sbb    eax,0x1d1bb11d
  405d76:	sbb    eax,0x1d1d1981
  405d7b:	jno    0x405d96
  405d7d:	sbb    eax,0x1d19711d
  405d82:	sbb    eax,0x1d1d1951
  405d87:	mov    eax,ds:0x711d1d19
  405d8c:	sbb    DWORD PTR ds:0x205741d,ebx
  405d92:	add    edi,DWORD PTR [eax+0x1]
  405d95:	push   es
  405d96:	pop    es
  405d97:	dec    esp
  405d98:	push   cs
  405d99:	or     DWORD PTR [ecx],ecx
  405d9b:	dec    esi
  405d9c:	or     al,0xb
  405d9e:	or     eax,DWORD PTR [eax+0xa]
  405da1:	or     al,0xc
  405da3:	popa   
  405da4:	or     DWORD PTR ds:0xe08320d,ecx
  405daa:	push   cs
  405dab:	inc    ebx
  405dac:	pop    es
  405dad:	(bad)  
  405dae:	(bad)  
  405db0:	push   ss
  405db1:	adc    BYTE PTR [eax],dl
  405db3:	add    BYTE PTR [esi+edx*1],ah
  405db6:	adc    BYTE PTR [eax],dl
  405db8:	cmc    
  405db9:	adc    al,0x11
  405dbb:	adc    ebp,esi
  405dbd:	adc    al,0x11
  405dbf:	adc    esi,esp
  405dc1:	adc    edx,DWORD PTR [edx]
  405dc3:	adc    ah,dh
  405dc5:	adc    edx,DWORD PTR [edx]
  405dc7:	adc    dh,bh
  405dc9:	adc    dl,BYTE PTR [ebx]
  405dcb:	adc    esi,edi
  405dcd:	adc    dl,BYTE PTR [ebx]
  405dcf:	adc    ebx,DWORD PTR [ebp-0x76ebe889]
  405dd5:	outs   dx,DWORD PTR ds:[esi]
  405dd6:	pop    ss
  405dd7:	adc    al,0xb1
  405dd9:	push   edi
  405dda:	pop    ss
  405ddb:	adc    al,0xa9
  405ddd:	dec    edi
  405dde:	pop    ss
  405ddf:	adc    al,0xb1
  405de1:	push   esi
  405de2:	push   ss
  405de3:	adc    eax,0x15164ea8
  405de8:	nop
  405de9:	jbe    0x405e01
  405deb:	adc    eax,0x15166e88
  405df0:	nop
  405df1:	jns    0x405e08
  405df3:	push   ss
  405df4:	mov    esi,DWORD PTR [ecx+0x15]
  405df7:	push   ss
  405df8:	mov    bl,0x59
  405dfa:	adc    eax,0x1551ab16
  405dff:	push   ss
  405e00:	mov    bl,0x58
  405e02:	adc    al,0x17
  405e04:	stos   BYTE PTR es:[edi],al
  405e05:	push   eax
  405e06:	adc    al,0x17
  405e08:	xchg   edx,eax
  405e09:	js     0x405e1f
  405e0b:	pop    ss
  405e0c:	mov    dh,BYTE PTR [eax+0x14]
  405e0f:	pop    ss
  405e10:	xchg   edx,eax
  405e11:	jae    0x405e2e
  405e13:	sbb    BYTE PTR [ebp+0x181b73],al
  405e19:	mov    ch,0x63
  405e1b:	sbb    ebx,DWORD PTR [eax]
  405e1d:	mov    ch,0x63
  405e1f:	sbb    ebx,DWORD PTR [eax]
  405e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e22:	push   ebx
  405e23:	sbb    ebx,DWORD PTR [eax]
  405e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e26:	push   ebx
  405e27:	sbb    ebx,DWORD PTR [eax]
  405e29:	xchg   ebp,eax
  405e2a:	add    ebx,DWORD PTR [eax+ebx*1]
  405e2d:	xchg   ebp,eax
  405e2e:	add    ebx,DWORD PTR [eax+ebx*1]
  405e31:	test   DWORD PTR [edx+0x1c],esi
  405e34:	sbb    DWORD PTR [edx+esi*2+0x62b4191c],eax
  405e3b:	sbb    al,0x19
  405e3d:	mov    ah,0x62
  405e3f:	sbb    al,0x19
  405e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e42:	push   edx
  405e43:	sbb    al,0x19
  405e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e46:	push   edx
  405e47:	sbb    al,0x19
  405e49:	xchg   esp,eax
  405e4a:	add    al,BYTE PTR [eax]
  405e4c:	sbb    eax,0x1d001b94
  405e51:	test   BYTE PTR [ebx],bl
  405e53:	repz sbb eax,0x1df31c87
  405e59:	mov    bh,0x1c
  405e5b:	jecxz  0x405e7a
  405e5d:	mov    bh,0x1c
  405e5f:	jecxz  0x405e7e
  405e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e62:	sbb    al,0xd3
  405e64:	sbb    eax,0x1dd31ca7
  405e69:	xchg   edi,eax
  405e6a:	sbb    al,0x3
  405e6c:	push   ds
  405e6d:	xchg   edi,eax
  405e6e:	sbb    al,0x3
  405e70:	push   ds
  405e71:	xchg   DWORD PTR [edx+esi*8],ebx
  405e74:	push   ds
  405e75:	xchg   BYTE PTR ds:0x1bb61ef2,bl
  405e7b:	loop   0x405e9b
  405e7d:	add    BYTE PTR [esi-0x59e11de5],dh
  405e83:	sbb    edx,edx
  405e85:	push   ds
  405e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e87:	sbb    edx,edx
  405e89:	push   ds
  405e8a:	xchg   esi,eax
  405e8b:	sbb    eax,DWORD PTR [edx]
  405e8d:	pop    ds
  405e8e:	xchg   esi,eax
  405e8f:	sbb    eax,DWORD PTR [edx]
  405e91:	pop    ds
  405e92:	xchg   BYTE PTR [esi],dl
  405e94:	jmp    0xe842fb9c
  405e99:	add    ebx,DWORD PTR [ebp-0x62fc14fe]
  405e9f:	add    ch,dl
  405ea1:	add    ebx,DWORD PTR [ebp-0x62fc12fe]
  405ea7:	add    ah,ah
  405ea9:	add    ebx,DWORD PTR [ebp-0x62fc10fe]
  405eaf:	add    ah,dh
  405eb1:	add    ebx,DWORD PTR [ebp-0x62fc1efe]
  405eb7:	add    ah,bl
  405eb9:	add    ebx,DWORD PTR [ebp-0x62fc0afe]
  405ebf:	add    ch,bh
  405ec1:	add    ebx,DWORD PTR [ebp-0x6126fffe]
  405ec7:	add    al,BYTE PTR [eax]
  405ec9:	aad    0x9e
  405ecb:	add    al,BYTE PTR [eax]
  405ecd:	add    DWORD PTR [ecx-0x6102fffe],ebx
  405ed3:	add    al,BYTE PTR [eax]
  405ed5:	leave  
  405ed6:	sahf   
  405ed7:	add    al,BYTE PTR [eax]
  405ed9:	rcr    DWORD PTR [esi-0x6146fffe],0x2
  405ee0:	add    cl,al
  405ee2:	add    BYTE PTR [esi-0x66d6fffe],bl
  405ee8:	add    al,BYTE PTR [eax]
  405eea:	sbb    DWORD PTR [ecx-0x6136fffe],esp
  405ef0:	add    al,BYTE PTR [eax]
  405ef2:	fstp   DWORD PTR [esi-0x6196fffe]
  405ef8:	add    al,BYTE PTR [eax]
  405efa:	mov    DWORD PTR [esi-0x61d6fffe],ebx
  405f00:	add    al,BYTE PTR [eax]
  405f02:	dec    ecx
  405f03:	sahf   
  405f04:	add    al,BYTE PTR [eax]
  405f06:	jmp    0xe94061a9
  405f0b:	sahf   
  405f0c:	add    al,BYTE PTR [eax]
  405f0e:	jmp    0xe84061b1
  405f13:	sahf   
  405f14:	add    al,BYTE PTR [eax]
  405f16:	jmp    0x405eb6
  405f18:	add    al,BYTE PTR [eax]
  405f1a:	jmp    0x29e:0xed00029e
  405f21:	add    bh,ah
  405f23:	sahf   
  405f24:	add    al,BYTE PTR [eax]
  405f26:	loope  0x405ec6
  405f28:	add    al,BYTE PTR [eax]
  405f2a:	fstp   QWORD PTR [esi-0x6106fffe]
  405f30:	add    al,BYTE PTR [eax]
  405f32:	add    DWORD PTR [ecx-0x66f6fffe],esp
  405f38:	add    al,BYTE PTR [eax]
  405f3a:	sbb    DWORD PTR [ecx-0x3bfffffe],esp
  405f40:	(bad)  
  405f41:	(bad)  
  405f42:	call   DWORD PTR [esi+edi*8-0x1]
  405f46:	inc    DWORD PTR [eax]
  405f48:	je     0x405f48
  405f4a:	(bad)  
  405f4b:	inc    DWORD PTR [esi+edi*8-0x1]
  405f4f:	inc    DWORD PTR [esp+eax*1]
  405f52:	add    BYTE PTR [eax],al
  405f54:	je     0x405f59
  405f56:	add    BYTE PTR [eax],al
  405f58:	hlt    
  405f59:	cld    
  405f5a:	(bad)  
  405f5b:	inc    esp
  405f5d:	std    
  405f5e:	(bad)  
  405f5f:	inc    esp
  405f61:	jbe    0x405f62
  405f63:	push   DWORD PTR [eax+eax*1+0xab40000]
  405f6a:	add    BYTE PTR [eax],al
  405f6c:	(bad)  
  405f6d:	(bad)  
  405f6e:	(bad)  
  405f6f:	inc    esp
  405f71:	adc    al,BYTE PTR [eax]
  405f73:	add    BYTE PTR [edx+ebx*1+0x22b40000],dh
  405f7a:	add    BYTE PTR [eax],al
  405f7c:	test   BYTE PTR [edx],dh
  405f7e:	add    BYTE PTR [eax],al
  405f80:	test   BYTE PTR [edx-0x1],al
  405f83:	push   DWORD PTR [edx+eiz*2-0x1]
  405f87:	push   DWORD PTR [eax]
  405f89:	gs aas 
  405f8b:	add    BYTE PTR [eax+0x65],al
  405f8e:	aas    
  405f8f:	add    BYTE PTR [eax+0x65],al
  405f92:	aas    
  405f93:	add    BYTE PTR [eax+0x65],al
  405f96:	aas    
  405f97:	add    BYTE PTR [eax],dh
  405f99:	gs aas 
  405f9b:	add    BYTE PTR [eax],al
  405f9d:	gs aas 
  405f9f:	add    BYTE PTR [eax],al
  405fa1:	gs aas 
  405fa3:	add    BYTE PTR [eax],al
  405fa5:	gs aas 
  405fa7:	add    al,dh
  405fa9:	fs aas 
  405fab:	add    BYTE PTR [eax],al
  405fad:	add    BYTE PTR [ebp+0x3f],ah
  405fb0:	add    BYTE PTR [edi+0x2],al
  405fb3:	add    al,0x0
  405fb5:	inc    ecx
  405fb6:	add    al,BYTE PTR [esi]
  405fb8:	add    BYTE PTR [ebp-0x62f7fc9c],bl
  405fbe:	bound  eax,QWORD PTR [ebx]
  405fc0:	or     bl,BYTE PTR [ebp-0x62f2fc90]
  405fc6:	add    edx,DWORD PTR fs:[ecx]
  405fc9:	popf   
  405fca:	pop    eax
  405fcb:	add    edx,DWORD PTR [edi]
  405fcd:	popf   
  405fce:	push   eax
  405fcf:	add    ebx,DWORD PTR [edi]
  405fd1:	popf   
  405fd2:	dec    eax
  405fd3:	add    ebp,DWORD PTR [ebx]
  405fd5:	popf   
  405fd6:	pop    eax
  405fd7:	add    edi,DWORD PTR [ebx]
  405fd9:	popf   
  405fda:	sub    BYTE PTR [ebx+edx*2],al
  405fdd:	popf   
  405fde:	or     BYTE PTR [ebx+esi*2],al
  405fe1:	popf   
  405fe2:	call   0xa8de02e9
  405fe7:	add    esp,ebx
  405fe9:	popf   
  405fea:	imul   eax,DWORD PTR [edx],0x36b9d00
  405ff0:	add    BYTE PTR [ebp-0x62effc85],bl
  405ff6:	jnp    0x405ffb
  405ff8:	adc    BYTE PTR [ebp-0x62effc85],bl
  405ffe:	jnp    0x406003
  406000:	adc    BYTE PTR [ebp-0x62eefca6],bl
  406006:	pop    edx
  406007:	add    edx,DWORD PTR [ecx]
  406009:	popf   
  40600a:	pop    ecx
  40600b:	add    edx,DWORD PTR [edx]
  40600d:	popf   
  40600e:	pop    ecx
  40600f:	add    edx,DWORD PTR [edx]
  406011:	add    BYTE PTR [ebp-0x62ecfc88],bl
  406017:	js     0x40601c
  406019:	adc    ebx,DWORD PTR [ebp-0x62ebfc89]
  40601f:	outs   dx,DWORD PTR ds:[esi]
  406020:	add    edx,DWORD PTR [ebx*4-0x62eafcaa]
  406027:	dec    esi
  406028:	add    edx,DWORD PTR ds:0x49035b9d
  40602e:	popf   
  40602f:	sub    BYTE PTR [ebx],al
  406031:	add    BYTE PTR [ebp-0x60fc17fe],bl
  406037:	add    ch,dl
  406039:	add    ebx,DWORD PTR [ecx-0x5dfc13fe]
  40603f:	add    ah,al
  406041:	add    esp,DWORD PTR [eax-0x5bfc27fe]
  406047:	add    cl,BYTE PTR [eax]
  406049:	add    al,0xcc
  40604b:	add    ch,BYTE PTR [eax]
  40604d:	add    al,0x7c
  40604f:	add    ch,BYTE PTR [eax+0x4]
  406052:	fadd   QWORD PTR [ecx]
  406054:	call   0xe8437c5d
  406059:	add    DWORD PTR [ecx+eax*1-0x3620018],ebx
  406060:	out    0xb,eax
  406062:	pushf  
  406063:	push   es
  406064:	call   0xe85afc7c
  406069:	and    ebx,DWORD PTR [edx+esi*1-0x1d623c18]
  406070:	call   0xf942fd78
  406075:	add    eax,DWORD PTR [eax]
  406077:	lea    eax,[edx]
  406079:	stc    
  40607a:	add    ecx,DWORD PTR [ebp-0x53fc07fe]
  406080:	add    bh,bl
  406082:	add    ebp,DWORD PTR [edi-0x51fc25fe]
  406088:	add    dl,ch
  40608a:	add    ebp,DWORD PTR [ecx-0x6ffc23fe]
  406090:	add    dl,bh
  406092:	add    ecx,DWORD PTR [ebx-0x6dfc01fe]
  406098:	add    al,BYTE PTR [ecx]
  40609a:	add    al,0x85
  40609c:	add    dh,al
  40609e:	add    esi,DWORD PTR [edx+eax*1+0x2b703f3]
  4060a5:	loop   0x4060aa
  4060a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a8:	add    bl,ch
  4060aa:	add    esp,DWORD PTR [ecx-0x612bfffe]
  4060b0:	adc    eax,0xc29ea900
  4060b5:	dec    DWORD PTR [eax]
  4060b7:	or     al,0xc3
  4060b9:	call   FWORD PTR [eax]
  4060bb:	adc    al,bl
  4060bd:	jmp    DWORD PTR [eax+esi*1-0x3d]
  4060c1:	(bad)  
  4060c2:	cmp    esp,DWORD PTR [edx]
  4060c4:	ret    
  4060c5:	call   FWORD PTR [ecx]
  4060c7:	and    eax,0x9ee8ffc3
  4060cc:	add    al,BYTE PTR [eax]
  4060ce:	mov    BYTE PTR [ecx-0x6674ff02],ah
  4060d4:	pop    edx
  4060d5:	add    cl,BYTE PTR [edx-0x5f]
  4060d8:	rol    DWORD PTR [eax],0x44
  4060db:	add    BYTE PTR [ecx-0x5eb0fecb],bl
  4060e1:	fadd   DWORD PTR [eax]
  4060e3:	inc    eax
  4060e4:	cdq    
  4060e5:	loop   0x4060e7
  4060e7:	push   ebx
  4060e8:	mov    eax,ds:0x995200d4
  4060ed:	fiadd  WORD PTR [eax]
  4060ef:	inc    ebp
  4060f0:	mov    eax,ds:0x993f00f9
  4060f5:	cmc    
  4060f6:	add    BYTE PTR [esi-0x67ff085f],dl
  4060fc:	cdq    
  4060fd:	std    
  4060fe:	add    BYTE PTR [ebx-0x65fda85f],bl
  406104:	cdq    
  406105:	rol    BYTE PTR [eax],0x7c
  406108:	mov    eax,ds:0x99770134
  40610d:	xlat   BYTE PTR ds:[ebx]
  40610e:	add    BYTE PTR [esi-0x5f],bh
  406111:	cmp    eax,DWORD PTR [edx]
  406113:	jo     0x4060ae
  406115:	loope  0x406117
  406117:	arpl   WORD PTR [ecx-0x669dff2d],sp
  40611d:	fld    QWORD PTR [eax]
  40611f:	push   ebp
  406120:	mov    eax,ds:0x994c00f8
  406125:	push   ebp
  406126:	add    al,BYTE PTR [eax]
  406128:	loop   0x406128
  40612a:	jge    0x40612d
  40612c:	cmp    esi,0x7b
  40612f:	add    DWORD PTR [esi+edi*8-0x178fead],eax
  406136:	add    DWORD PTR [ecx],eax
  406138:	stc    
  406139:	(bad)  
  40613a:	cmp    BYTE PTR [ecx],al
  40613c:	cli    
  40613d:	inc    BYTE PTR ds:0xff3c0001
  406143:	or     eax,DWORD PTR [ecx]
  406145:	notrack call DWORD PTR [edi]
  406148:	add    DWORD PTR [eax-0x1],edx
  40614b:	sbb    DWORD PTR [ecx],eax
  40614d:	xor    edi,edi
  40614f:	or     eax,0xfff1401
  406154:	add    DWORD PTR ds:0x260142ff,edx
  40615a:	inc    DWORD PTR [esi+0x1]
  40615d:	sub    edi,edi
  40615f:	dec    edi
  406160:	add    DWORD PTR [edi+edi*8],ecx
  406163:	push   edi
  406164:	add    DWORD PTR ds:0xff016dff,ecx
  40616a:	(bad)  
  40616b:	outs   dx,DWORD PTR ds:[esi]
  40616c:	add    DWORD PTR [edx],esp
  40616e:	jmp    DWORD PTR [ecx+0x1]
  406171:	and    al,0xff
  406173:	push   esp
  406174:	add    DWORD PTR [edi],esp
  406176:	inc    DWORD PTR [edx]
  406178:	add    DWORD PTR [ecx-0x1],ebx
  40617b:	cmp    DWORD PTR [ecx],eax
  40617d:	pop    edx
  40617e:	inc    DWORD PTR [esi]
  406180:	add    esp,ebx
  406182:	add    eax,0x5de010d
  406187:	sbb    DWORD PTR [ecx],eax
  406189:	lock add eax,0x5d3011b
  40618f:	lmsw   WORD PTR [ebp+eax*1+0x5b50111]
  406197:	inc    esp
  406198:	add    DWORD PTR [esi-0x76feb7fb],eax
  40619e:	add    eax,0x139d0151
  4061a3:	add    ebx,DWORD PTR [ecx+0x0]
  4061a6:	pushf  
  4061a7:	adc    al,BYTE PTR [ebx]
  4061a9:	outs   dx,DWORD PTR ds:[esi]
  4061aa:	pushf  
  4061ab:	add    al,0x3
  4061ad:	jno    0x40614b
  4061af:	jno    0x4061b3
  4061b1:	arpl   WORD PTR [eax+edi*2-0x456026fe],bx
  4061b8:	add    DWORD PTR [esi],esp
  4061ba:	pushf  
  4061bb:	add    DWORD PTR [ecx],0x1929c24
  4061c1:	xor    BYTE PTR [esp+eax*4-0x1063e1ff],bl
  4061c8:	add    BYTE PTR [esp+ebx*4],dh
  4061cb:	jmp    0x2500:0xf99c2700
  4061d2:	pushf  
  4061d3:	repnz add BYTE PTR [ecx],dh
  4061d6:	pushf  
  4061d7:	hlt    
  4061d8:	add    BYTE PTR [edi],bl
  4061da:	pushf  
  4061db:	out    0x0,eax
  4061dd:	xor    eax,0xa01a69c
  4061e2:	pushf  
  4061e3:	mov    eax,ds:0xb69c0801
  4061e8:	add    DWORD PTR [eax],esp
  4061ea:	pushf  
  4061eb:	mov    ds:0x8e9c1c01,eax
  4061f0:	add    DWORD PTR [esp+ebx*4-0x67],ebp
  4061f4:	add    DWORD PTR [esp+ebx*4-0x7a],ebx
  4061f8:	add    DWORD PTR [ebx],ecx
  4061fa:	pushf  
  4061fb:	rol    DWORD PTR [eax],0x9
  4061fe:	pushf  
  4061ff:	(bad)  
  406200:	add    BYTE PTR [ecx],ah
  406202:	pushf  
  406203:	rol    DWORD PTR [eax],cl
  406205:	sbb    eax,0x6d00be9c
  40620a:	add    BYTE PTR [ecx+ecx*8+0x7d9c5d00],bl
  406211:	add    BYTE PTR [eax],bh
  406213:	pushf  
  406214:	jl     0x406216
  406216:	push   esi
  406217:	pushf  
  406218:	xchg   BYTE PTR [eax],al
  40621a:	sub    BYTE PTR [edx+eax*1+0x3a6004f],bl
  406221:	push   ebx
  406222:	add    BYTE PTR [edi+0x7f004203],ch
  406228:	add    edi,DWORD PTR ds:0x3a03c300
  40622e:	add    dl,ch
  406230:	add    esi,DWORD PTR [eax+eax*1]
  406233:	test   BYTE PTR [ebx],al
  406235:	aas    
  406236:	add    BYTE PTR [ecx+0x3],dh
  406239:	xor    eax,DWORD PTR [eax]
  40623b:	mov    es,WORD PTR [ebx]
  40623d:	mov    ds:0x9d037e07,al
  406242:	pop    es
  406243:	add    BYTE PTR [ebx],0x94
  406246:	pop    es
  406247:	add    ecx,DWORD PTR [bp+0x5607]
  40624c:	add    ebp,DWORD PTR [ecx-0x59fc62f9]
  406252:	pop    es
  406253:	retf   
  406254:	add    esp,DWORD PTR [ebp-0x61fc74f9]
  40625a:	pop    es
  40625b:	mov    bh,0x3
  40625d:	mov    eax,0xbb035807
  406262:	pop    es
  406263:	imul   eax,DWORD PTR [ebx],0x38b07ba
  406269:	mov    al,0x7
  40626b:	dec    edi
  40626c:	add    esp,DWORD PTR [edi+eax*1-0x60fccb00]
  406273:	pop    es
  406274:	inc    edi
  406275:	add    ecx,DWORD PTR [ecx-0x79fc63f9]
  40627b:	pop    es
  40627c:	jp     0x406281
  40627e:	push   ebp
  40627f:	pop    es
  406280:	mov    al,BYTE PTR [ebx]
  406282:	dec    esi
  406283:	pop    es
  406284:	mov    BYTE PTR [ecx],0x58
  406287:	pop    es
  406288:	fild   DWORD PTR [ecx]
  40628a:	pop    ebx
  40628b:	pop    es
  40628c:	fadd   DWORD PTR [ecx]
  40628e:	cmp    al,BYTE PTR [edi]
  406290:	retf   0x4001
  406293:	pop    es
  406294:	out    dx,al
  406295:	add    DWORD PTR [eax],eax
  406297:	xor    al,0x9a
  406299:	fld    DWORD PTR [eax]
  40629b:	das    
  40629c:	mov    ds:0x9aa700db,al
  4062a1:	xor    BYTE PTR [eax],ah
  4062a3:	dec    eax
  4062a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a5:	add    al,0x30
  4062a7:	dec    ebx
  4062a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a9:	(bad)  
  4062aa:	das    
  4062ab:	dec    edx
  4062ac:	xchg   ebp,eax
  4062ad:	std    
  4062ae:	das    
  4062af:	dec    ebp
  4062b0:	xchg   ebp,eax
  4062b1:	add    DWORD PTR [eax],esi
  4062b3:	inc    esp
  4062b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062b5:	imul   esi,DWORD PTR [eax],0x4f
  4062b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062b9:	je     0x4062eb
  4062bb:	inc    esi
  4062bc:	xchg   ebp,eax
  4062bd:	mov    eax,ds:0xa39a9130
  4062c2:	xor    BYTE PTR [eax-0x7ccf5a5e],dl
  4062c8:	call   0x3099:0xa28230a7
  4062cf:	xchg   ebp,eax
  4062d0:	call   0x65a2:0x8c3063
  4062d7:	xor    BYTE PTR [edi+0x7e30679a],al
  4062dd:	mov    ds:0x9a593043,al
  4062e2:	outs   dx,BYTE PTR ds:[esi]
  4062e3:	xor    BYTE PTR [eax-0x5e],bl
  4062e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062e7:	xor    BYTE PTR [ebx-0x66],bl
  4062ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062eb:	xor    BYTE PTR [edx-0x5e],bl
  4062ee:	test   al,0x30
  4062f0:	cmp    eax,0x34309a9a
  4062f5:	mov    ds:0x9a3f309c,al
  4062fa:	fwait
  4062fb:	xor    BYTE PTR [esi],dh
  4062fd:	mov    ds:0x9aa1309d,al
  406302:	lahf   
  406303:	xor    BYTE PTR [eax-0x6ccf4e5e],ah
  406309:	call   0x30b5:0xa29230b3
  406310:	add    BYTE PTR [eax],bl
  406312:	pop    es
  406313:	mov    bh,0x30
  406315:	stc    
  406316:	pop    es
  406317:	mov    ecx,0xbb07ea30
  40631c:	xor    bl,bh
  40631e:	pop    es
  40631f:	mov    ebp,0xbf07b430
  406324:	xor    BYTE PTR [ebp-0x79cf3ef9],al
  40632a:	pop    es
  40632b:	les    esi,FWORD PTR [eax]
  40632d:	ja     0x406336
  40632f:	(bad)  
  406330:	xor    BYTE PTR [eax+0x7],dh
  406333:	enter  0x8130,0x7
  406337:	retf   0x30
  40633a:	add    BYTE PTR [edi],0xcb
  40633d:	xor    BYTE PTR [ebx-0x13cf33f9],al
  406343:	stc    
  406344:	int3   
  406345:	xor    BYTE PTR [ebp-0x6],cl
  406348:	int    0x30
  40634a:	ds cli 
  40634c:	into   
  40634d:	xor    BYTE PTR [edi],bh
  40634f:	cli    
  406350:	shl    DWORD PTR [eax],1
  406352:	dec    eax
  406353:	cli    
  406354:	aam    0x30
  406356:	dec    ecx
  406357:	cli    
  406358:	xlat   BYTE PTR ds:[ebx]
  406359:	xor    BYTE PTR [edx],bh
  40635b:	cli    
  40635c:	fidiv  DWORD PTR [eax]
  40635e:	or     edi,edx
  406360:	fnsave [eax]
  406362:	and    al,0xfa
  406364:	fidiv  WORD PTR [eax]
  406366:	adc    eax,0x1630dffa
  40636b:	cli    
  40636c:	loopne 0x40639e
  40636e:	pop    es
  40636f:	cli    
  406370:	loope  0x4063a2
  406372:	and    dl,bh
  406374:	jecxz  0x4063a6
  406376:	adc    edx,edi
  406378:	in     eax,0x30
  40637a:	adc    bh,dl
  40637c:	out    0x30,eax
  40637e:	adc    edi,edx
  406380:	call   0xea3abfb5
  406385:	xor    ch,bl
  406387:	cli    
  406388:	jmp    0xcdec:0x8319d30
  40638f:	xor    BYTE PTR [eax],cl
  406391:	in     eax,dx
  406392:	int    0x27
  406394:	or     bh,ch
  406396:	lods   eax,DWORD PTR ds:[esi]
  406397:	push   cs
  406398:	or     bl,dh
  40639a:	lods   eax,DWORD PTR ds:[esi]
  40639b:	adc    eax,0xad009b08
  4063a0:	cld    
  4063a1:	pop    es
  4063a2:	pushf  
  4063a3:	lods   eax,DWORD PTR ds:[esi]
  4063a4:	xlat   BYTE PTR ds:[ebx]
  4063a5:	push   es
  4063a6:	or     al,0xa3
  4063a8:	loopne 0x4063b0
  4063aa:	sbb    ebx,DWORD PTR [ebx-0x5ce0f92c]
  4063b0:	sbb    al,BYTE PTR [edi]
  4063b2:	and    DWORD PTR [ebx-0x5cddf8e7],ebx
  4063b8:	sbb    BYTE PTR [edi],al
  4063ba:	and    ebx,DWORD PTR [ebx-0x5cdbf8e1]
  4063c0:	es pop es
  4063c2:	and    eax,0x26069d9b
  4063c7:	mov    ds:0x9b2706a4,eax
  4063cc:	mov    ds:0xa2a32806,eax
  4063d1:	push   es
  4063d2:	sub    DWORD PTR [ebx-0x5cd5f94f],ebx
  4063d8:	mov    al,0x6
  4063da:	sub    ebx,DWORD PTR [ebx-0x5cd3f959]
  4063e0:	mov    es,WORD PTR [esi]
  4063e2:	sub    eax,0x2e06b59b
  4063e7:	mov    ds:0x9b2f069c,eax
  4063ec:	stos   DWORD PTR es:[edi],eax
  4063ed:	push   es
  4063ee:	xor    BYTE PTR [ebx-0x64cef956],ah
  4063f4:	mov    DWORD PTR [esi],eax
  4063f6:	xor    ah,BYTE PTR [ebx-0x64ccf978]
  4063fc:	pop    DWORD PTR [esi]
  4063fe:	xor    al,0xa3
  406400:	xchg   esi,eax
  406401:	push   es
  406402:	xor    eax,0x3f029b00
  406407:	push   es
  406408:	rol    DWORD PTR [esi+esi*1],cl
  40640b:	push   es
  40640c:	retf   0x3104
  40640f:	push   es
  406410:	lds    eax,FWORD PTR [eax+esi*1]
  406413:	push   es
  406414:	les    eax,FWORD PTR [ebx+eiz*1]
  406417:	push   es
  406418:	mov    bh,0x4
  40641a:	dec    ecx
  40641b:	push   es
  40641c:	fld    QWORD PTR [eax+ecx*2]
  40641f:	push   es
  406420:	fadd   QWORD PTR [ebx+ecx*2]
  406423:	push   es
  406424:	fild   WORD PTR [edx+ecx*1]
  406427:	push   es
  406428:	fiadd  WORD PTR [eax*1+0xc04d906]
  40642f:	push   es
  406430:	loopne 0x406436
  406432:	pop    es
  406433:	push   es
  406434:	fild   DWORD PTR [esi+ecx*1]
  406437:	push   es
  406438:	loop   0x40643e
  40643a:	adc    DWORD PTR [esi],eax
  40643c:	in     eax,0x4
  40643e:	add    BYTE PTR [esi],al
  406440:	aam    0x4
  406442:	add    eax,DWORD PTR [esi]
  406444:	xlat   BYTE PTR ds:[ebx]
  406445:	add    al,0xd2
  406447:	or     DWORD PTR [esi+0x4],esp
  40644a:	int    0x9
  40644c:	popa   
  40644d:	add    al,0xc4
  40644f:	or     DWORD PTR [eax+0x4],ebx
  406452:	mov    edi,0xd6045309
  406457:	or     DWORD PTR [edx+0x4],ebp
  40645a:	mov    ecx,0xb8044d09
  40645f:	or     DWORD PTR [esp+eax*1-0x45],ecx
  406463:	or     DWORD PTR [edi+0x4],ecx
  406466:	dec    eax
  406467:	push   es
  406468:	add    BYTE PTR [edi+0x6],ch
  40646b:	dec    ebx
  40646c:	push   es
  40646d:	outs   dx,BYTE PTR ds:[esi]
  40646e:	push   es
  40646f:	dec    edx
  406470:	push   es
  406471:	ins    BYTE PTR es:[edi],dx
  406472:	push   es
  406473:	inc    ebp
  406474:	push   es
  406475:	imul   eax,DWORD PTR [esi],0x650064c
  40647b:	inc    edi
  40647c:	push   es
  40647d:	dec    ebx
  40647e:	push   es
  40647f:	add    BYTE PTR [esi-0x5d],cl
  406482:	aad    0x3
  406484:	inc    ecx
  406485:	fwait
  406486:	retf   0x9003
  406489:	mov    ds:0x9b9303c9,eax
  40648e:	enter  0x8203,0xa3
  406492:	mov    DWORD PTR [ebx],0x3ce9b7d
  406498:	xchg   esp,eax
  406499:	mov    ds:0x9b8f0491,eax
  40649e:	int3   
  40649f:	add    eax,DWORD PTR [esi+0x7903cba3]
  4064a5:	fwait
  4064a6:	adc    al,0x21
  4064a8:	pop    eax
  4064a9:	mov    ds:0x9b5b0400,eax
  4064ae:	inc    DWORD PTR [ebx]
  4064b0:	pop    edx
  4064b1:	mov    ds:0x9b550401,eax
  4064b6:	push   es
  4064b7:	add    al,0x3c
  4064b9:	mov    ds:0x9b370405,eax
  4064be:	add    al,0x4
  4064c0:	mov    ds:0x9b310403,eax
  4064c6:	cli    
  4064c7:	add    esp,DWORD PTR [eax-0x5cfc0660]
  4064cd:	add    BYTE PTR [eax-0x5f6dfc08],bl
  4064d3:	test   DWORD PTR [ebx],0x3fe988d
  4064d9:	test   BYTE PTR [eax-0x6780fb6e],ah
  4064df:	cld    
  4064e0:	add    esi,DWORD PTR [esi-0x60]
  4064e3:	sti    
  4064e4:	add    ebp,DWORD PTR [ecx-0x57fc4368]
  4064ea:	mov    al,ds:0x98ab0432
  4064ef:	xor    DWORD PTR [edx+ebp*4],eax
  4064f2:	mov    al,ds:0x98a503c4
  4064f7:	ss add al,0x0
  4064fa:	or     DWORD PTR [esi],eax
  4064fc:	xor    eax,0x4405fa04
  406501:	add    al,0xfb
  406503:	add    eax,0x5fc0433
  406508:	inc    ebp
  406509:	add    al,0xcd
  40650b:	add    eax,0x5ce0438
  406510:	cmp    DWORD PTR [edi+edi*4],eax
  406513:	add    eax,0x5a0043a
  406518:	cmp    eax,DWORD PTR [ecx+esi*4]
  40651b:	add    eax,0x5c2043c
  406520:	cmp    eax,0x3e05c304
  406525:	add    al,0x84
  406527:	add    eax,0x595043f
  40652c:	dec    edi
  40652d:	add    al,0x96
  40652f:	add    eax,0x87000440
  406534:	add    eax,0x5880441
  406539:	inc    edx
  40653a:	add    al,0x99
  40653c:	add    eax,0x58a0443
  406541:	ss add al,0x8b
  406544:	add    eax,0x58c0432
  406549:	dec    esp
  40654a:	add    al,0xdd
  40654c:	add    ecx,DWORD PTR [ebx+0x4]
  40654f:	fiadd  WORD PTR [ebx]
  406551:	aaa    
  406552:	add    al,0x4f
  406554:	add    al,0x48
  406556:	add    al,0x30
  406558:	add    al,0x4d
  40655a:	add    al,0x41
  40655c:	add    al,0x49
  40655e:	add    al,0x12
  406560:	add    al,0x47
  406562:	add    al,0x13
  406564:	add    al,0x4a
  406566:	add    al,0xd4
  406568:	add    ebp,DWORD PTR [esi]
  40656a:	add    al,0x25
  40656c:	add    al,0x10
  40656e:	add    al,0x26
  406570:	add    al,0x11
  406572:	add    al,0x9d
  406574:	js     0x40657c
  406576:	es cdq 
  406578:	test   DWORD PTR [esi],eax
  40657a:	adc    al,0xa1
  40657c:	jle    0x406584
  40657e:	adc    eax,0x24068399
  406583:	mov    eax,ds:0x9913067c
  406588:	add    DWORD PTR [esi],0x5d2a125
  40658e:	sbb    BYTE PTR [ecx-0x5ee6fa2b],bl
  406594:	les    eax,FWORD PTR ds:0x2799001a
  40659a:	push   es
  40659b:	sbb    esp,DWORD PTR [ecx-0x66e3fa32]
  4065a1:	mov    ecx,0xc0a11d05
  4065a6:	add    eax,0x62b991e
  4065ab:	pop    ds
  4065ac:	mov    eax,ds:0x992f060a
  4065b1:	or     eax,0xca12006
  4065b6:	push   es
  4065b7:	and    DWORD PTR [ecx-0x5eddf9f1],ebx
  4065bd:	add    ax,0x9923
  4065c1:	jno    0x4065c8
  4065c3:	push   ss
  4065c4:	mov    eax,ds:0x99120568
  4065c9:	jae    0x4065d0
  4065cb:	sub    al,0xa1
  4065cd:	bound  eax,QWORD PTR ds:0x565992b
  4065d3:	pop    ss
  4065d4:	mov    eax,ds:0x99280554
  4065d9:	aaa    
  4065da:	add    eax,0x53ea12d
  4065df:	sub    DWORD PTR [ecx-0x5ed8fa57],ebx
  4065e5:	mov    al,0x5
  4065e7:	sub    bl,BYTE PTR [ecx-0x6179fb86]
  4065ed:	add    cl,BYTE PTR [ebx+0x4]
  4065f0:	and    eax,0x14044a06
  4065f5:	push   es
  4065f6:	dec    ebp
  4065f7:	add    al,0x17
  4065f9:	push   es
  4065fa:	inc    esp
  4065fb:	add    al,0x0
  4065fd:	pop    es
  4065fe:	push   es
  4065ff:	dec    esi
  406600:	add    al,0x21
  406602:	push   es
  406603:	push   ecx
  406604:	add    al,0x1b
  406606:	push   es
  406607:	inc    eax
  406608:	add    al,0xf6
  40660a:	add    eax,0x52a0442
  40660f:	xchg   edi,eax
  406610:	add    al,0x18
  406612:	add    eax,0x22b0048e
  406617:	cwde   
  406618:	add    al,0x31
  40661a:	add    eax,0x548049b
  40661f:	jp     0x406625
  406621:	inc    ebx
  406622:	add    eax,0x53a0475
  406627:	jl     0x40662d
  406629:	push   edi
  40662a:	add    eax,0x52d0477
  40662f:	pop    esi
  406630:	add    al,0x61
  406632:	add    eax,0x5580461
  406637:	push   eax
  406638:	add    al,0x56
  40663a:	add    eax,0x4ed0453
  40663f:	inc    edx
  406640:	add    al,0x63
  406642:	add    eax,0x50c0428
  406647:	sub    eax,DWORD PTR [edi+ecx*1]
  40664a:	add    eax,0x52e042a
  40664f:	lods   eax,DWORD PTR ds:[esi]
  406650:	add    ebp,DWORD PTR [ecx]
  406652:	add    eax,0x53003a4
  406657:	scas   eax,DWORD PTR es:[edi]
  406658:	add    ebp,DWORD PTR [ebx]
  40665a:	add    eax,0x51203a6
  40665f:	mov    cl,0x3
  406661:	add    BYTE PTR ds:0x403b005,dl
  406667:	add    eax,0x8c9ea300
  40666c:	add    esp,DWORD PTR [edx-0x4afc7262]
  406672:	sahf   
  406673:	xchg   BYTE PTR [ebx],al
  406675:	lods   al,BYTE PTR ds:[esi]
  406676:	sahf   
  406677:	xchg   DWORD PTR [ebx],eax
  406679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40667a:	sahf   
  40667b:	mov    BYTE PTR [ebx],al
  40667d:	sahf   
  40667e:	sahf   
  40667f:	mov    DWORD PTR [ebx],eax
  406681:	cdq    
  406682:	sahf   
  406683:	mov    ds:0xa39e9803,al
  406688:	add    ebx,DWORD PTR [ebx-0x6afc5a62]
  40668e:	sahf   
  40668f:	sahf   
  406690:	add    edi,DWORD PTR [esi+ebx*4]
  406693:	popf   
  406694:	add    esi,DWORD PTR [edi]
  406696:	sahf   
  406697:	mov    al,ds:0x9f9e3e03
  40669c:	add    esi,DWORD PTR [ecx]
  40669e:	sahf   
  40669f:	call   0x4803:0x999e2003
  4066a6:	sahf   
  4066a7:	mov    cl,0x3
  4066a9:	dec    ebx
  4066aa:	sahf   
  4066ab:	mov    ah,0x3
  4066ad:	dec    edx
  4066ae:	sahf   
  4066af:	mov    bl,0x3
  4066b1:	or     eax,0x403ae9e
  4066b6:	sahf   
  4066b7:	lods   eax,DWORD PTR ds:[esi]
  4066b8:	add    ecx,DWORD PTR [edi]
  4066ba:	sahf   
  4066bb:	mov    al,0x3
  4066bd:	push   es
  4066be:	sahf   
  4066bf:	scas   eax,DWORD PTR es:[edi]
  4066c0:	add    edx,DWORD PTR [ecx]
  4066c2:	sahf   
  4066c3:	stos   BYTE PTR es:[edi],al
  4066c4:	add    edx,DWORD PTR [eax]
  4066c6:	add    BYTE PTR [esi-0x61fcfc57],bl
  4066cc:	lods   al,BYTE PTR ds:[esi]
  4066cd:	add    eax,DWORD PTR [edx]
  4066cf:	sahf   
  4066d0:	stos   DWORD PTR es:[edi],eax
  4066d1:	add    edx,ebp
  4066d3:	lahf   
  4066d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d5:	add    ecx,esp
  4066d7:	lahf   
  4066d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066d9:	add    eax,edi
  4066db:	lahf   
  4066dc:	test   al,0x3
  4066de:	mov    esi,0x3a79f
  4066e3:	xor    al,0x5
  4066e5:	rol    BYTE PTR [ebx],0x25
  4066e8:	add    eax,0x52603c1
  4066ed:	ret    
  4066ee:	add    edx,DWORD PTR [edi]
  4066f0:	add    eax,0x53003c2
  4066f5:	les    eax,FWORD PTR [ebx]
  4066f7:	xor    DWORD PTR ds:0x52203c5,eax
  4066fd:	mov    BYTE PTR [ebx],0x13
  406700:	add    eax,0x51c03c7
  406705:	enter  0x1d03,0x5
  406709:	leave  
  40670a:	add    edx,DWORD PTR [ebp+0x6b]
  40670d:	mov    dh,0x23
  40670f:	out    0x6b,al
  406711:	or     esp,DWORD PTR ds:0x24ff6b27
  406717:	and    BYTE PTR [ebx+0x1f],ch
  40671a:	and    edx,DWORD PTR [ecx]
  40671c:	imul   esp,DWORD PTR [eax],0x23
  40671f:	and    ch,BYTE PTR [ebx+0x1]
  406722:	and    eax,0x23a06b23
  406727:	or     al,0x6b
  406729:	mov    ds:0x6b1d0023,al
  40672e:	mov    ds:0xa56b1e23,eax
  406733:	and    ebp,edi
  406735:	imul   ebx,DWORD PTR [edx-0x639427dd],0x23
  40673c:	fldcw  WORD PTR [ebx-0x63]
  40673f:	and    edi,DWORD PTR [edx+0x6b]
  406742:	lahf   
  406743:	and    ecx,ebx
  406745:	imul   esp,DWORD PTR [edi-0x54949bdd],0x23
  40674c:	push   0xc922636b
  406751:	imul   ebx,DWORD PTR [edi+0x22],0x3a
  406755:	data16 and ch,BYTE PTR fs:[ebx]
  406759:	data16 sub ah,BYTE PTR [edx]
  40675c:	popf   
  40675d:	cdq    
  40675e:	cld    
  40675f:	xor    edi,DWORD PTR [edi-0x40e30366]
  406765:	fwait
  406766:	cld    
  406767:	sbb    eax,0x6fc9ebf
  40676c:	mov    edi,0x7f3bfca1
  406771:	mov    ds:0xae7f42fc,al
  406776:	cld    
  406777:	sar    DWORD PTR [edi+edx*4-0x4],cl
  40677b:	sar    DWORD PTR [eax+eiz*4-0x4],1
  40677f:	pusha  
  406780:	jg     0x406731
  406782:	cld    
  406783:	sbb    DWORD PTR [edi-0x5d],edi
  406786:	cld    
  406787:	cmp    DWORD PTR [edi-0x5c],0x8d7f82fc
  40678e:	cld    
  40678f:	sub    BYTE PTR [eax],al
  406791:	mov    edi,0xbf29fc76
  406796:	mov    ebp,0x24bf26fb
  40679b:	cld    
  40679c:	daa    
  40679d:	mov    edi,0xbf01fbbc
  4067a2:	int    0xfb
  4067a4:	xchg   ecx,eax
  4067a5:	pushf  
  4067a6:	sar    bl,0x8f
  4067a9:	mov    esp,0xbc90fc27
  4067ae:	cs cld 
  4067b0:	xchg   ecx,eax
  4067b1:	jl     0x4067c8
  4067b3:	cld    
  4067b4:	xchg   edx,eax
  4067b5:	jl     0x406773
  4067b7:	cli    
  4067b8:	and    DWORD PTR [ecx+0x78c5fafb],eax
  4067be:	cli    
  4067bf:	cli    
  4067c0:	xchg   ecx,eax
  4067c1:	cmp    cl,0xfa
  4067c4:	or     BYTE PTR [ecx-0x8],bh
  4067c7:	cli    
  4067c8:	or     eax,DWORD PTR [ecx+0x790cfaff]
  4067ce:	idiv   dl
  4067d0:	or     ecx,eax
  4067d2:	add    edi,ebx
  4067d4:	and    edi,DWORD PTR [ecx-0x68052ffe]
  4067da:	push   ds
  4067db:	sar    edx,cl
  4067dd:	stos   BYTE PTR es:[edi],al
  4067de:	pop    ds
  4067df:	ret    0xaafa
  4067e2:	pop    ds
  4067e3:	mov    ebp,0xd41fa6fa
  4067e8:	cli    
  4067e9:	mov    ds,WORD PTR [edi]
  4067eb:	iret   
  4067ec:	cli    
  4067ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ee:	pop    ds
  4067ef:	(bad)  
  4067f0:	cli    
  4067f1:	adc    al,0x22
  4067f3:	mov    ecx,0x221700fa
  4067f8:	cwde   
  4067f9:	cli    
  4067fa:	retf   0x9b1e
  4067fd:	cli    
  4067fe:	push   es
  4067ff:	and    bl,BYTE PTR [edx-0x6ade0606]
  406805:	cli    
  406806:	xchg   esi,eax
  406807:	pop    ds
  406808:	jl     0x406804
  40680a:	jle    0x40682b
  40680c:	ja     0x406808
  40680e:	outs   dx,BYTE PTR ds:[esi]
  40680f:	pop    ds
  406810:	jle    0x40680c
  406812:	(bad)  
  406813:	pop    ds
  406814:	jno    0x406810
  406816:	pushf  
  406817:	pop    ds
  406818:	mov    ch,bh
  40681a:	lahf   
  40681b:	and    cl,BYTE PTR [ebx-0x75dd6303]
  406821:	std    
  406822:	sahf   
  406823:	and    al,BYTE PTR [ebp-0x73dd6603]
  406829:	std    
  40682a:	mov    ds:0x9afd8722,eax
  40682f:	and    cl,BYTE PTR [esi-0x7edd5a03]
  406835:	std    
  406836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406837:	and    dl,BYTE PTR [eax-0x3]
  40683a:	scas   al,BYTE PTR es:[edi]
  40683b:	and    dl,BYTE PTR [ebx-0x3]
  40683e:	scas   eax,DWORD PTR es:[edi]
  40683f:	and    al,BYTE PTR [ebp-0x3]
  406842:	jg     0x406862
  406844:	aas    
  406845:	std    
  406846:	js     0x40686a
  406848:	push   esi
  406849:	std    
  40684a:	and    DWORD PTR [edx],0x23cffd39
  406850:	add    BYTE PTR [eax],bh
  406852:	sbb    cl,dl
  406854:	and    BYTE PTR [ebx],bh
  406856:	adc    dh,cl
  406858:	and    BYTE PTR [edx+0x20cf0700],bl
  40685e:	xchg   ebp,eax
  40685f:	pop    es
  406860:	int3   
  406861:	and    BYTE PTR [edi+esi*8-0x868df34],bl
  406868:	leave  
  406869:	and    BYTE PTR [esi-0x19],bh
  40686c:	retf   0x8120
  40686f:	out    0xfd,eax
  406871:	and    BYTE PTR [edx-0x29],dh
  406874:	adc    ah,BYTE PTR [eax]
  406876:	ins    DWORD PTR es:[edi],dx
  406877:	xlat   BYTE PTR ds:[ebx]
  406878:	sbb    DWORD PTR [ebx],esp
  40687a:	fs (bad) 
  40687c:	push   ss
  40687d:	add    BYTE PTR [edi-0x39],bl
  406880:	sbb    ah,BYTE PTR [ebx]
  406882:	stos   BYTE PTR es:[edi],al
  406883:	mov    bh,0xc7
  406885:	and    BYTE PTR [ebp-0x53df3749],ah
  40688b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688c:	lds    esp,FWORD PTR [eax]
  40688e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406890:	(bad)  
  406891:	and    BYTE PTR [eax-0x5cdedd69],ah
  406897:	xchg   edi,eax
  406898:	adc    DWORD PTR [esi],esp
  40689a:	xor    eax,0x2c254387
  40689f:	xchg   DWORD PTR [ebp+0x39772725],ebp
  4068a5:	and    eax,0x2595771e
  4068aa:	sbb    DWORD PTR [edi+0xc],esp
  4068ad:	and    BYTE PTR [eax],bl
  4068af:	or     esp,DWORD PTR [bx+si]
  4068b2:	sbb    edx,DWORD PTR [edi+0x8]
  4068b5:	and    BYTE PTR [edx],bl
  4068b7:	push   edi
  4068b8:	pop    es
  4068b9:	and    BYTE PTR ds:0x37210647,bh
  4068bf:	add    BYTE PTR [edi+0x32],al
  4068c2:	and    BYTE PTR [esi],bh
  4068c4:	aaa    
  4068c5:	xor    DWORD PTR [eax],esp
  4068c7:	xor    BYTE PTR [edi],dh
  4068c9:	pop    es
  4068ca:	daa    
  4068cb:	add    BYTE PTR [edi+0x68],bh
  4068ce:	stos   DWORD PTR es:[edi],eax
  4068cf:	and    eax,0x25bf6880
  4068d4:	mov    cl,0x68
  4068d6:	mov    ch,0x25
  4068d8:	mov    ds:0xe325ce68,al
  4068dd:	imul   ebp,DWORD PTR [ebp-0x1a962bdb],0xaa69e525
  4068e7:	and    eax,0x25ac69e6
  4068ec:	xlat   BYTE PTR ds:[ebx]
  4068ed:	imul   esi,DWORD PTR [edx-0x439627db],0x569e925
  4068f7:	fisubr DWORD PTR es:[ecx+0x21]
  4068fb:	and    BYTE PTR [ebx],bl
  4068fd:	push   0xffffffa9
  4068ff:	and    eax,0x25b16a2c
  406904:	sbb    eax,0x1e25bb6a
  406909:	push   0x1b
  40690b:	punpckhdq mm3,QWORD PTR es:0x626a1026
  406913:	and    DWORD PTR es:[ecx+0x65],ebp
  406917:	adc    ch,BYTE PTR es:[edx+0x64]
  40691b:	es in  al,0x69
  40691e:	pop    ds
  40691f:	daa    
  406920:	in     eax,0x69
  406922:	pop    ds
  406923:	and    BYTE PTR [eax],al
  406925:	(bad)  
  406926:	imul   esp,DWORD PTR [eax],0x1269d720
  40692c:	daa    
  40692d:	test   al,0x69
  40692f:	push   ss
  406930:	daa    
  406931:	test   eax,0x9a266e69
  406936:	imul   ebp,DWORD PTR [esi+eiz*1-0x75],0x7c264169
  40693e:	imul   edi,DWORD PTR [edi],0xd697d26
  406944:	es popf 
  406946:	psubw  mm2,QWORD PTR [esi+edi*2]
  40694a:	adc    cl,bh
  40694c:	push   ss
  40694d:	jl     0x40694c
  40694f:	clc    
  406950:	aaa    
  406951:	jge    0x4069b9
  406953:	clc    
  406954:	sbb    DWORD PTR [ebp-0x42e20795],edi
  40695a:	mov    eax,0x739d3bf9
  40695f:	stc    
  406960:	cmp    eax,0x27f9919d
  406965:	mov    edi,0xbf26f982
  40696a:	cdq    
  40696b:	stc    
  40696c:	scas   al,BYTE PTR es:[edi]
  40696d:	popf   
  40696e:	xchg   edi,eax
  40696f:	stc    
  406970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406971:	mov    edi,0x7f28f998
  406976:	xchg   ebp,eax
  406977:	stc    
  406978:	or     DWORD PTR [esi-0x65],edi
  40697b:	stc    
  40697c:	pop    esi
  40697d:	popf   
  40697e:	scas   eax,DWORD PTR es:[edi]
  40697f:	stc    
  406980:	pop    ss
  406981:	jg     0x406918
  406983:	stc    
  406984:	xchg   esp,eax
  406985:	jle    0x406922
  406987:	stc    
  406988:	mov    ds:0xf9847f00,eax
  40698d:	retf   0x8880
  406990:	stc    
  406991:	pop    es
  406992:	jle    0x40691f
  406994:	stc    
  406995:	sub    DWORD PTR [edi-0x407d068d],edi
  40699b:	jne    0x406996
  40699d:	cmp    DWORD PTR [edi-0x405e0739],0xbfa2f8bf
  4069a7:	sbb    al,bh
  4069a9:	push   ss
  4069aa:	mov    ebp,0xa0cff7cb
  4069af:	retf   0xd0f7
  4069b2:	cwde   
  4069b3:	int    0xf7
  4069b5:	shl    DWORD PTR [eax-0x672d0834],1
  4069bb:	(bad)  
  4069bc:	not    ebx
  4069be:	mov    al,ds:0x69f80c02
  4069c3:	or     BYTE PTR [edi],al
  4069c5:	clc    
  4069c6:	push   eax
  4069c7:	or     BYTE PTR [esi],cl
  4069c9:	clc    
  4069ca:	dec    ebx
  4069cb:	or     BYTE PTR [ecx],al
  4069cd:	clc    
  4069ce:	push   edx
  4069cf:	or     BYTE PTR [eax],dl
  4069d1:	clc    
  4069d2:	inc    ebp
  4069d3:	or     BYTE PTR [ebx],dl
  4069d5:	clc    
  4069d6:	hlt    
  4069d7:	pop    es
  4069d8:	add    bh,al
  4069da:	test   DWORD PTR [edi],0x7e6f7fd
  4069e0:	aam    0xf7
  4069e2:	loope  0x4069eb
  4069e4:	iret   
  4069e5:	neg    eax
  4069e7:	pop    es
  4069e8:	(bad)  
  4069e9:	not    ebx
  4069eb:	pop    es
  4069ec:	fincstp 
  4069ee:	add    dl,cl
  4069f0:	pop    es
  4069f1:	mov    eax,0xbb07fdf7
  4069f6:	idiv   DWORD PTR [edi+eax*1+0x7bff7ba]
  4069fd:	mov    ch,0xf7
  4069ff:	mov    esi,0xb9f79c07
  406a04:	pop    es
  406a05:	xchg   edi,eax
  406a06:	test   eax,0xbbf79e07
  406a0c:	pop    es
  406a0d:	xchg   ecx,eax
  406a0e:	test   edx,0xb5f78007
  406a14:	pop    es
  406a15:	xor    edi,0xffffff84
  406a18:	pop    es
  406a19:	dec    eax
  406a1a:	neg    BYTE PTR [ebp-0x6309b4f0]
  406a20:	adc    BYTE PTR [edx-0x7aef600a],cl
  406a26:	neg    BYTE PTR [esi-0x660973f0]
  406a2c:	adc    BYTE PTR [edi-0x71ef5f0a],al
  406a32:	neg    BYTE PTR [ebx-0x5d096ef0]
  406a38:	adc    BYTE PTR [eax],al
  406a3a:	or     BYTE PTR [ebx+0xa],0xe
  406a3e:	adc    DWORD PTR [ebx+0xb],0xe
  406a42:	push   edx
  406a43:	dec    ebx
  406a44:	or     al,0xe
  406a46:	dec    ebp
  406a47:	xor    ecx,DWORD PTR ds:0xe2b440e
  406a4d:	push   cs
  406a4e:	aas    
  406a4f:	xor    ecx,DWORD PTR [edi]
  406a51:	push   cs
  406a52:	push   esi
  406a53:	add    BYTE PTR [ebx],ch
  406a55:	adc    BYTE PTR [esi],cl
  406a57:	cmp    DWORD PTR [ebx],edx
  406a59:	adc    DWORD PTR [esi],ecx
  406a5b:	cmp    BYTE PTR [ebx],cl
  406a5d:	repnz or eax,0xdf3133b
  406a63:	call   0xf68c:0x950df5ac
  406a6a:	or     eax,0xdf78c9c
  406a6f:	xchg   edi,eax
  406a70:	mov    eax,?
  406a72:	or     eax,0xdf98c7e
  406a77:	sub    DWORD PTR [edx+edi*8-0x4538ff3],0xfcac730d
  406a82:	or     eax,0xdfdac62
  406a87:	pop    ebp
  406a88:	mov    esi,?
  406a8a:	or     eax,0xdff8c54
  406a8f:	dec    edi
  406a90:	mov    WORD PTR [eax],es
  406a92:	push   cs
  406a93:	inc    esi
  406a94:	mov    WORD PTR [ecx],es
  406a96:	push   cs
  406a97:	test   eax,0xa80e22ac
  406a9c:	lods   al,BYTE PTR ds:[esi]
  406a9d:	and    DWORD PTR [esi],ecx
  406a9f:	stos   DWORD PTR es:[edi],eax
  406aa0:	lods   al,BYTE PTR ds:[esi]
  406aa1:	and    al,0xe
  406aa3:	sub    ch,BYTE PTR [ebx+eiz*1+0x268c250e]
  406aaa:	push   cs
  406aab:	sub    al,0x8c
  406aad:	and    eax,0x288c270e
  406ab2:	push   cs
  406ab3:	add    BYTE PTR [ebx+0xe26f1],dh
  406ab9:	mov    ecx,?
  406abb:	daa    
  406abc:	push   cs
  406abd:	jge    0x406ab0
  406abf:	sub    BYTE PTR [esi],cl
  406ac1:	jle    0x406ab4
  406ac3:	sub    DWORD PTR [esi],ecx
  406ac5:	(bad)  
  406ac6:	icebp  
  406ac7:	sub    cl,BYTE PTR [esi]
  406ac9:	mov    cl,dh
  406acb:	sub    ecx,DWORD PTR [esi]
  406acd:	jns    0x406ac0
  406acf:	sub    al,0xe
  406ad1:	mov    dh,cl
  406ad3:	sub    eax,0x2ef16b0e
  406ad8:	push   cs
  406ad9:	mov    ah,0xf1
  406adb:	das    
  406adc:	push   cs
  406add:	mov    ch,0xf1
  406adf:	xor    BYTE PTR [esi],cl
  406ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae2:	icebp  
  406ae3:	xor    DWORD PTR [esi],ecx
  406ae5:	inc    edi
  406ae6:	repz xor cl,BYTE PTR [esi]
  406ae9:	xor    bl,dh
  406aeb:	xor    ecx,DWORD PTR [esi]
  406aed:	xor    ebx,esi
  406aef:	xor    al,0xe
  406af1:	xor    dh,bl
  406af3:	xor    eax,0x36f3030e
  406af8:	push   cs
  406af9:	cld    
  406afa:	repnz aaa 
  406afc:	push   cs
  406afd:	sub    eax,0x2e0e38f3
  406b02:	repz cmp DWORD PTR [esi],ecx
  406b05:	(bad)  
  406b07:	cmp    eax,0x3ef2fb0e
  406b0c:	push   cs
  406b0d:	and    al,0xf3
  406b0f:	aas    
  406b10:	push   cs
  406b11:	adc    eax,0x160e40f3
  406b16:	repz inc ecx
  406b18:	push   cs
  406b19:	daa    
  406b1a:	repnz inc edx
  406b1c:	push   cs
  406b1d:	add    BYTE PTR [eax],ah
  406b1f:	repnz inc ebx
  406b21:	push   cs
  406b22:	and    edx,esi
  406b24:	inc    esp
  406b25:	push   cs
  406b26:	shl    dl,cl
  406b28:	inc    ebp
  406b29:	push   cs
  406b2a:	jecxz  0x406b1e
  406b2c:	inc    esi
  406b2d:	push   cs
  406b2e:	popf   
  406b2f:	ror    DWORD PTR [edi],0x48
  406b32:	fwait
  406b33:	ret    0x490f
  406b36:	xchg   ebx,eax
  406b37:	mov    bl,0xf
  406b39:	dec    edx
  406b3a:	stos   DWORD PTR es:[edi],eax
  406b3b:	mov    ah,0xf
  406b3d:	dec    ebx
  406b3e:	mov    ds:0x9b4c0fc5,eax
  406b43:	push   ds
  406b44:	adc    BYTE PTR [ebp-0x6d],cl
  406b47:	stc    
  406b48:	(bad)  
  406b4a:	stos   DWORD PTR es:[edi],eax
  406b4b:	cli    
  406b4c:	sqrtps xmm4,XMMWORD PTR [ebx-0x64adf005]
  406b53:	cld    
  406b54:	rcpps  xmm2,XMMWORD PTR [ebx-0x54abf0a3]
  406b5b:	push   esi
  406b5c:	andnps xmm4,XMMWORD PTR [ebx-0x64a9f0a1]
  406b63:	pop    eax
  406b64:	xorps  xmm2,XMMWORD PTR [ebx-0x54a7f09f]
  406b6b:	bound  ecx,QWORD PTR [edi]
  406b6d:	pop    ecx
  406b6e:	mov    ds:0xac31128a,eax
  406b73:	mov    edx,DWORD PTR [edx]
  406b75:	xor    ch,BYTE PTR [esp+ecx*4-0x7a73ccee]
  406b7c:	adc    dh,BYTE PTR [esp+ecx*4]
  406b7f:	mov    ss,WORD PTR [edx]
  406b81:	xor    eax,0x12878c00
  406b86:	ss mov eax,ss
  406b89:	adc    DWORD PTR [edi],esi
  406b8b:	ins    BYTE PTR es:[edi],dx
  406b8c:	mov    cl,0x11
  406b8e:	cmp    BYTE PTR [edx+eax*8+0x11],ch
  406b92:	cmp    DWORD PTR [ebx+eax*8+0x11],ebp
  406b96:	cmp    ch,BYTE PTR [esp+esi*4+0x11]
  406b9a:	cmp    ecx,esp
  406b9c:	iret   
  406b9d:	adc    DWORD PTR [esp+ecx*8],edi
  406ba0:	(bad)  
  406ba1:	adc    DWORD PTR ds:0x3e121dcc,edi
  406ba7:	int3   
  406ba8:	add    dl,BYTE PTR [esi-0x66ec45ee]
  406bae:	adc    bl,ch
  406bb0:	adc    ebx,DWORD PTR [eax-0x64ec23ee]
  406bb6:	adc    bl,bh
  406bb8:	adc    edi,DWORD PTR [edx+0x12]
  406bbb:	ficom  WORD PTR [ebx]
  406bbd:	jne    0x406bd1
  406bbf:	fst    DWORD PTR [ebx]
  406bc1:	jl     0x406bd5
  406bc3:	loopne 0x406bd8
  406bc5:	ja     0x406bd9
  406bc7:	fist   DWORD PTR [ebx]
  406bc9:	pop    esi
  406bca:	adc    ah,dl
  406bcc:	adc    esp,DWORD PTR [ecx+0x12]
  406bcf:	in     eax,0x13
  406bd1:	push   eax
  406bd2:	adc    dl,ah
  406bd4:	adc    edx,DWORD PTR [ebx+0x12]
  406bd7:	xlat   BYTE PTR ds:[ebx]
  406bd8:	adc    eax,DWORD PTR [edx+0x12]
  406bdb:	adc    di,WORD PTR ds:0x34136112
  406be2:	adc    bl,BYTE PTR [eax+0x13]
  406be5:	das    
  406be6:	adc    al,BYTE PTR [eax]
  406be8:	push   ebx
  406be9:	adc    esp,DWORD PTR [esi-0x56ec95ef]
  406bef:	adc    DWORD PTR [ebp+0x13],ecx
  406bf2:	test   al,0x11
  406bf4:	dec    esp
  406bf5:	adc    ebp,DWORD PTR [ebx-0x55ecb0ef]
  406bfb:	adc    DWORD PTR [esi+0x13],ebp
  406bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bff:	adc    DWORD PTR [ecx+0x13],ebp
  406c02:	lods   al,BYTE PTR ds:[esi]
  406c03:	adc    DWORD PTR [eax+0x13],esi
  406c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c07:	adc    DWORD PTR [ebx+0x13],ebp
  406c0a:	scas   al,BYTE PTR es:[edi]
  406c0b:	adc    DWORD PTR [edx+0x13],edx
  406c0e:	mov    cl,0x11
  406c10:	push   ebp
  406c11:	adc    esp,DWORD PTR [eax-0x5cecbbef]
  406c17:	adc    DWORD PTR [edi+0x13],eax
  406c1a:	mov    dl,0x11
  406c1c:	not    BYTE PTR [ebx]
  406c1e:	lods   eax,DWORD PTR ds:[esi]
  406c1f:	adc    ecx,esi
  406c21:	adc    eax,DWORD PTR [eax]
  406c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c24:	lods   al,BYTE PTR ds:[esi]
  406c25:	mov    edi,0xbcac9f30
  406c2a:	xor    BYTE PTR [esi],dh
  406c2c:	mov    WORD PTR [ebp-0x1d73c6d0],?
  406c32:	xor    BYTE PTR [eax],bh
  406c34:	mov    ebx,fs
  406c36:	xor    BYTE PTR [ebx],bh
  406c38:	mov    eax,fs
  406c3a:	xor    BYTE PTR [edx],bl
  406c3c:	lods   al,BYTE PTR ds:[esi]
  406c3d:	loope  0x406c6f
  406c3f:	adc    eax,0x1c11aaac
  406c44:	lods   al,BYTE PTR ds:[esi]
  406c45:	stos   DWORD PTR es:[edi],eax
  406c46:	adc    DWORD PTR [edi],edx
  406c48:	lods   al,BYTE PTR ds:[esi]
  406c49:	test   al,0x11
  406c4b:	add    BYTE PTR ds:[ecx+ebp*4-0x5173beef],cl
  406c53:	adc    DWORD PTR [eax],esi
  406c55:	mov    WORD PTR [edi-0x5373ccef],gs
  406c5b:	adc    DWORD PTR [edx],esp
  406c5d:	lods   al,BYTE PTR ds:[esi]
  406c5e:	lods   eax,DWORD PTR ds:[esi]
  406c5f:	adc    DWORD PTR ds:0x141192ac,ebx
  406c65:	lods   al,BYTE PTR ds:[esi]
  406c66:	xchg   ebx,eax
  406c67:	adc    DWORD PTR [edi],ecx
  406c69:	lods   al,BYTE PTR ds:[esi]
  406c6a:	nop
  406c6b:	adc    esi,eax
  406c6d:	stos   DWORD PTR es:[edi],eax
  406c6e:	xchg   ecx,eax
  406c6f:	adc    ecx,ecx
  406c71:	mov    ds:0x9bc81196,eax
  406c76:	xchg   edi,eax
  406c77:	adc    ebx,ecx
  406c79:	xchg   ebx,eax
  406c7a:	xchg   esp,eax
  406c7b:	adc    edx,ecx
  406c7d:	stos   DWORD PTR es:[edi],eax
  406c7e:	xchg   ebp,eax
  406c7f:	adc    ebp,eax
  406c81:	mov    ds:0x9bcc119a,eax
  406c86:	fwait
  406c87:	adc    edi,eax
  406c89:	xchg   ebx,eax
  406c8a:	cwde   
  406c8b:	adc    DWORD PTR [esi-0x6eee6655],ecx
  406c91:	mov    ds:0x9b80119e,eax
  406c96:	lahf   
  406c97:	adc    DWORD PTR [ebx+0x119c93],eax
  406c9d:	das    
  406c9e:	or     eax,0xd2011bf
  406ca3:	rcl    BYTE PTR [ecx],0x21
  406ca6:	or     eax,0xd0211c1
  406cab:	ret    0xd311
  406cae:	or     al,0x6d
  406cb0:	xor    DWORD PTR [eax],eax
  406cb2:	aam    0xc
  406cb4:	jno    0x406ce7
  406cb6:	lds    ecx,FWORD PTR [eax+edi*2]
  406cb9:	xor    esi,eax
  406cbb:	or     al,0x7f
  406cbd:	xor    DWORD PTR [edi-0x77ce7ef4],edx
  406cc3:	or     al,0x84
  406cc5:	xor    DWORD PTR [ecx-0x75ce79f4],ecx
  406ccb:	or     al,0x8d
  406ccd:	xor    DWORD PTR [ebx+0x7c318e0c],ebx
  406cd3:	or     al,0xeb
  406cd5:	adc    DWORD PTR [ebp-0x71ee0ff4],ecx
  406cdb:	or     al,0xf9
  406cdd:	adc    DWORD PTR [ebx+0x5820a90c],esp
  406ce3:	dec    edi
  406ce4:	stos   DWORD PTR es:[edi],eax
  406ce5:	and    al,dl
  406ce7:	dec    edi
  406ce8:	push   ecx
  406ce9:	add    DWORD PTR [ecx+0x4201524f],esi
  406cef:	push   ecx
  406cf0:	ja     0x406cf3
  406cf2:	and    al,0x20
  406cf4:	mov    al,ds:0xa1201520
  406cf9:	and    BYTE PTR [esi],dl
  406cfb:	and    BYTE PTR [edx-0x5cdfd8e0],ah
  406d01:	and    BYTE PTR [eax],bl
  406d03:	and    BYTE PTR [eax+eiz*1+0x20a52019],ah
  406d0a:	sbb    ah,BYTE PTR [eax]
  406d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d0d:	and    BYTE PTR [ebx+0x1f],ch
  406d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d11:	and    BYTE PTR [edi+ebx*1-0x58],cl
  406d15:	and    BYTE PTR [eax],al
  406d17:	popf   
  406d18:	ret    0xa922
  406d1b:	jge    0x406cdc
  406d1d:	and    ch,BYTE PTR [edx-0x54dd4f43]
  406d23:	mov    ebp,0xbdac22cd
  406d28:	popa   
  406d29:	pop    esi
  406d2a:	add    BYTE PTR [ebp-0x62fffc9f],bl
  406d30:	push   edx
  406d31:	pop    esi
  406d32:	add    BYTE PTR [ebp-0x62fffcae],bl
  406d38:	pusha  
  406d39:	pop    esi
  406d3a:	add    BYTE PTR [ebp-0x62fffcc3],bl
  406d40:	push   esi
  406d41:	pop    esi
  406d42:	add    BYTE PTR [ebp-0x62fffc92],bl
  406d48:	cmp    BYTE PTR [esi+0x0],bl
  406d4b:	popf   
  406d4c:	cmp    BYTE PTR [ebx],al
  406d4e:	add    BYTE PTR [ebp-0x62ffa100],bl
  406d54:	add    BYTE PTR [eax+eax*1],al
  406d57:	popf   
  406d58:	hlt    
  406d59:	pop    ebp
  406d5a:	add    BYTE PTR [ebp-0x62fffb65],bl
  406d60:	jns    0x406dc0
  406d62:	add    BYTE PTR [ebp-0x62fffbbb],bl
  406d68:	jp     0x406dc8
  406d6a:	add    BYTE PTR [ebp-0x62fffbba],bl
  406d70:	pop    ss
  406d71:	pop    ebp
  406d72:	add    BYTE PTR [ebp-0x62fffcfd],bl
  406d78:	sbb    BYTE PTR [ebp+0x0],bl
  406d7b:	add    BYTE PTR [ebp-0x62fffcfc],bl
  406d81:	std    
  406d82:	pop    esp
  406d83:	add    BYTE PTR [ebp-0x62fffd0f],bl
  406d89:	(bad)  
  406d8a:	pop    esp
  406d8b:	add    BYTE PTR [ebp-0x62fffcf6],bl
  406d91:	add    bh,BYTE PTR [edi]
  406d93:	pop    ebp
  406d94:	popf   
  406d95:	add    cl,bl
  406d97:	add    bl,BYTE PTR [ebp-0x62a2c1fe]
  406d9d:	add    cl,dl
  406d9f:	add    bl,BYTE PTR [ebp-0x62a2f6fe]
  406da5:	add    dl,al
  406da7:	add    ebx,DWORD PTR [ebp-0x62a2f7fe]
  406dad:	add    bh,BYTE PTR [ebp-0x34fd62fd]
  406db3:	pop    esp
  406db4:	popf   
  406db5:	add    dl,BYTE PTR [edx]
  406db7:	add    al,0x9d
  406db9:	add    cl,dl
  406dbb:	pop    esp
  406dbc:	popf   
  406dbd:	add    bh,ah
  406dbf:	add    bl,BYTE PTR [ebp-0x62a32cfe]
  406dc5:	add    cl,BYTE PTR [esi]
  406dc7:	add    al,0x9d
  406dc9:	add    al,dl
  406dcb:	pop    esp
  406dcc:	popf   
  406dcd:	add    ch,dl
  406dcf:	add    bl,BYTE PTR [ebp-0x62a296fe]
  406dd5:	add    cl,cl
  406dd7:	add    ebx,DWORD PTR [ebp-0x62a29ffe]
  406ddd:	add    ah,al
  406ddf:	add    eax,DWORD PTR [eax]
  406de1:	popf   
  406de2:	add    dh,BYTE PTR [ebp+ebx*2-0x63]
  406de6:	add    ch,ah
  406de8:	add    bl,BYTE PTR [ebp-0x62a2a7fe]
  406dee:	add    bh,BYTE PTR [ecx+0x3]
  406df1:	popf   
  406df2:	add    bh,BYTE PTR [ebx+0x5c]
  406df5:	popf   
  406df6:	add    bl,BYTE PTR [eax+0x4]
  406df9:	popf   
  406dfa:	add    bh,BYTE PTR [edx+0x5c]
  406dfd:	popf   
  406dfe:	add    bl,BYTE PTR [ebx+0x4]
  406e01:	popf   
  406e02:	add    bl,BYTE PTR [ebp+0x5c]
  406e05:	popf   
  406e06:	add    bh,BYTE PTR [edx]
  406e08:	add    al,0x9d
  406e0a:	add    al,BYTE PTR [eax]
  406e0c:	pop    esp
  406e0d:	popa   
  406e0e:	add    al,BYTE PTR [eax]
  406e10:	add    eax,0x7f0002a1
  406e15:	push   ecx
  406e16:	add    al,BYTE PTR [eax]
  406e18:	les    ebx,FWORD PTR [esi+0x417e0002]
  406e1e:	add    al,BYTE PTR [eax]
  406e20:	(bad)  
  406e21:	sahf   
  406e22:	add    al,BYTE PTR [eax]
  406e24:	popa   
  406e25:	icebp  
  406e26:	add    al,BYTE PTR [eax]
  406e28:	(bad)  
  406e29:	sahf   
  406e2a:	add    al,BYTE PTR [eax]
  406e2c:	push   eax
  406e2d:	loope  0x406e31
  406e2f:	add    cl,al
  406e31:	sahf   
  406e32:	add    al,BYTE PTR [eax]
  406e34:	test   ecx,edx
  406e36:	add    al,BYTE PTR [eax]
  406e38:	or     ah,BYTE PTR [ecx-0x3e8cfffe]
  406e3e:	add    al,BYTE PTR [eax]
  406e40:	or     BYTE PTR [ecx+0x620002],ah
  406e46:	icebp  
  406e47:	add    al,BYTE PTR [eax]
  406e49:	or     esp,DWORD PTR [ecx-0x1eabfffe]
  406e4f:	add    al,BYTE PTR [eax]
  406e51:	fstp   QWORD PTR [esi-0x2e78fffe]
  406e57:	add    al,BYTE PTR [eax]
  406e59:	int3   
  406e5a:	sahf   
  406e5b:	add    al,BYTE PTR [eax]
  406e5d:	jbe    0x406e20
  406e5f:	add    al,BYTE PTR [eax]
  406e61:	mov    edi,0x5300029e
  406e66:	jno    0x406e6a
  406e68:	add    BYTE PTR [ebx+0x4200029e],dl
  406e6e:	popa   
  406e6f:	add    al,BYTE PTR [eax]
  406e71:	sbb    BYTE PTR [esi+0x56950002],0x2
  406e78:	add    BYTE PTR [ebp-0x5f],cl
  406e7b:	add    al,BYTE PTR [eax]
  406e7d:	test   BYTE PTR [esi+0x2],al
  406e80:	add    BYTE PTR [ecx+eiz*4],bh
  406e83:	add    al,BYTE PTR [eax]
  406e85:	add    BYTE PTR [edx],ch
  406e87:	mov    ebp,0xfe5affff
  406e8c:	(bad)  
  406e8d:	call   FWORD PTR [ebx]
  406e8f:	mov    ebp,0xff7bffff
  406e94:	(bad)  
  406e95:	call   DWORD PTR [ebp+edi*4-0x1]
  406e99:	call   DWORD PTR [esi+edi*8-0x42ba0001]
  406ea0:	(bad)  
  406ea1:	jmp    DWORD PTR [ebp-0x29000002]
  406ea7:	mov    ebx,0x9600ffff
  406eac:	(bad)  
  406ead:	(bad)  
  406eae:	inc    edi
  406eb0:	mov    ebx,0xfea7ffff
  406eb5:	(bad)  
  406eb6:	call   DWORD PTR [eax]
  406eb8:	mov    esp,0x460ffff
  406ebd:	add    BYTE PTR [eax],al
  406ebf:	add    DWORD PTR [edi+edi*8+0x461ff],edi
  406ec6:	add    dl,dl
  406ec8:	mov    ebx,0x462ffff
  406ecd:	add    BYTE PTR [eax],al
  406ecf:	ret    
  406ed0:	mov    ebx,0x463ffff
  406ed5:	add    BYTE PTR [eax],al
  406ed7:	mov    esp,0xcffffbb
  406edc:	add    al,0x0
  406ede:	add    ch,cl
  406ee0:	mov    ebx,0x41dffff
  406ee5:	add    BYTE PTR [eax],al
  406ee7:	pop    edx
  406ee8:	mov    ebx,0x384ffff
  406eed:	add    BYTE PTR [eax],al
  406eef:	retf   
  406ef0:	mov    ebx,0x375ffff
  406ef5:	add    BYTE PTR [eax],al
  406ef7:	inc    esp
  406ef8:	mov    ebp,0xfe46ffff
  406efd:	(bad)  
  406efe:	call   FWORD PTR [ebp-0x62ffa556]
  406f04:	mov    esp,0xab9d0003
  406f09:	pop    edx
  406f0a:	add    BYTE PTR [ebp+0x40d],bl
  406f10:	popf   
  406f11:	lods   al,BYTE PTR ds:[esi]
  406f12:	pop    edx
  406f13:	add    BYTE PTR [ebp-0x62fffbf2],bl
  406f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f1a:	pop    edx
  406f1b:	add    BYTE PTR [ebp-0x62fffc11],bl
  406f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f22:	pop    edx
  406f23:	add    BYTE PTR [ebp-0x62fffc10],bl
  406f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2a:	pop    edx
  406f2b:	add    BYTE PTR [ebp-0x62fffbff],bl
  406f31:	test   al,0x5a
  406f33:	add    BYTE PTR [ebp-0x62fffcae],bl
  406f39:	adc    DWORD PTR [edx+0x0],ebx
  406f3c:	popf   
  406f3d:	arpl   WORD PTR [ebx],ax
  406f3f:	add    BYTE PTR [ebp-0x62ffa5de],bl
  406f45:	xor    al,0x3
  406f47:	add    BYTE PTR [ebp-0x62ffa5ed],bl
  406f4d:	xchg   ebp,eax
  406f4e:	add    eax,DWORD PTR [eax]
  406f50:	popf   
  406f51:	and    al,0x5a
  406f53:	add    BYTE PTR [ebp-0x62fffc5a],bl
  406f59:	or     eax,0x779d005a
  406f5e:	add    eax,DWORD PTR [eax]
  406f60:	popf   
  406f61:	push   ds
  406f62:	pop    edx
  406f63:	add    BYTE PTR [ebp-0x62fffc78],bl
  406f69:	cvtps2pd xmm0,QWORD PTR [eax]
  406f6c:	popf   
  406f6d:	jmp    0x20dd6f74
  406f72:	pop    edx
  406f73:	add    BYTE PTR [eax],al
  406f75:	popf   
  406f76:	jmp    0x59b9:0x29d0002
  406f7d:	popf   
  406f7e:	add    ch,BYTE PTR [ebx+0x4]
  406f81:	popf   
  406f82:	add    bh,BYTE PTR [eax+0x6a029d59]
  406f88:	add    al,0x9d
  406f8a:	add    bl,BYTE PTR [ebx+0x65029d59]
  406f90:	add    al,0x9d
  406f92:	add    bl,BYTE PTR [edx+0x64029d59]
  406f98:	add    al,0x9d
  406f9a:	add    bh,BYTE PTR [ebp+0x67029d59]
  406fa0:	add    al,0x9d
  406fa2:	add    bh,BYTE PTR [ecx+ebx*2+0x466029d]
  406fa9:	popf   
  406faa:	add    cl,BYTE PTR [eax+0x49029d59]
  406fb0:	add    al,0x9d
  406fb2:	add    cl,BYTE PTR [ebx+0x48029d59]
  406fb8:	add    al,0x9d
  406fba:	add    cl,BYTE PTR [edx+0x59]
  406fbd:	popf   
  406fbe:	add    cl,BYTE PTR [ebx+0x4d029d04]
  406fc4:	pop    ecx
  406fc5:	popf   
  406fc6:	add    cl,BYTE PTR [edx+0x50029d03]
  406fcc:	pop    ecx
  406fcd:	popf   
  406fce:	add    al,BYTE PTR [ebp+0x43029d04]
  406fd4:	pop    ecx
  406fd5:	popf   
  406fd6:	add    al,BYTE PTR [ebx+eax*1+0x12029d00]
  406fdd:	pop    ecx
  406fde:	popf   
  406fdf:	add    al,dl
  406fe1:	add    ebx,DWORD PTR [ebp-0x62a6fafe]
  406fe7:	add    ch,BYTE PTR [ebp-0x71fd62fd]
  406fed:	pop    eax
  406fee:	popf   
  406fef:	add    bl,BYTE PTR [ebx+eax*1-0x17fffd63]
  406ff6:	lahf   
  406ff7:	add    eax,DWORD PTR [ecx]
  406ff9:	call   0xe841739d
  406ffe:	lahf   
  406fff:	add    eax,DWORD PTR [ecx]
  407001:	call   0xea4373a5
  407006:	lahf   
  407007:	add    eax,DWORD PTR [ecx]
  407009:	call   0xe84173ad
  40700e:	mov    al,ds:0x98eb0103
  407013:	add    BYTE PTR [edx],al
  407015:	jmp    0x406fb7
  407017:	add    BYTE PTR [edx],al
  407019:	jmp    0x406fcd
  40701b:	add    DWORD PTR [ebx+ebp*8],eax
  40701e:	mov    al,ds:0x98eb0400
  407023:	add    BYTE PTR [edx],al
  407025:	jmp    0x406fc7
  407027:	inc    BYTE PTR [ebx]
  407029:	in     eax,0x98
  40702b:	add    BYTE PTR [edx],al
  40702d:	in     eax,dx
  40702e:	mov    al,ds:0x98eb0200
  407033:	add    BYTE PTR [ebp*8-0x14fdfc86],al
  40703a:	jb     0x40703e
  40703c:	add    eax,ebp
  40703e:	add    BYTE PTR [edi+0x63e40103],bl
  407044:	and    ah,BYTE PTR [ecx]
  407046:	jmp    0xea4671ec
  40704b:	cdq    
  40704c:	add    DWORD PTR [ebx],eax
  40704e:	jmp    0x199:0xea0301a1
  407055:	add    eax,0x2ffa1ea
  40705a:	jmp    0x39f:0xe8030199
  407061:	add    ebp,eax
  407063:	cdq    
  407064:	add    eax,DWORD PTR [ebx]
  407066:	call   0xe841740c
  40706b:	cdq    
  40706c:	add    eax,DWORD PTR [eax]
  40706e:	add    ah,dh
  407070:	add    BYTE PTR [eax],al
  407072:	add    ah,dh
  407074:	add    BYTE PTR [eax],al
  407076:	add    BYTE PTR [ecx+eax*1],al
  407079:	add    BYTE PTR [eax],al
  40707b:	add    al,0x1
  40707d:	add    BYTE PTR [eax],al
  40707f:	hlt    
  407080:	add    BYTE PTR [eax],al
  407082:	add    ah,dh
  407084:	add    BYTE PTR [eax],al
  407086:	add    ah,al
  407088:	add    BYTE PTR [eax],al
  40708a:	add    ah,al
  40708c:	add    BYTE PTR [eax],al
  40708e:	add    BYTE PTR [ebp+ebx*1+0x23982300],dh
  407095:	es daa 
  407097:	les    eax,FWORD PTR [eax]
  407099:	sub    ch,BYTE PTR [ebx]
  40709b:	les    ebp,FWORD PTR [ecx]
  40709d:	cs add ah,al
  4070a0:	in     eax,dx
  4070a1:	xor    DWORD PTR [ebx],esi
  4070a3:	add    al,cl
  4070a5:	icebp  
  4070a6:	xor    eax,0xfff76c37
  4070ab:	inc    DWORD PTR [eax+eax*1+0x5f740000]
  4070b2:	popa   
  4070b3:	arpl   WORD PTR [eax-0x63989a9f],bx
  4070b9:	imul   ebp,DWORD PTR gs:[ebx+0x70],0x446f6d6b
  4070c1:	das    
  4070c2:	jno    0x407137
  4070c4:	dec    eax
  4070c5:	xor    esi,DWORD PTR [ebp+0x77]
  4070c8:	ins    BYTE PTR es:[edi],dx
  4070c9:	aaa    
  4070ca:	jns    0x4070cc
  4070cc:	inc    esp
  4070cd:	add    BYTE PTR [esi+0x5f],bl
  4070d0:	push   esp
  4070d1:	pop    edi
  4070d2:	popa   
  4070d3:	arpl   WORD PTR [eax+0x63],bx
  4070d6:	gs addr16 pop esp
  4070d9:	imul   ebp,DWORD PTR [bp+di-0x10],0x46f6d6a
  4070e1:	das    
  4070e2:	jno    0x407157
  4070e4:	or     BYTE PTR [ebx],dh
  4070e6:	jne    0x40715f
  4070e8:	popf   
  4070e9:	jno    0x4070c7
  4070eb:	jns    0x40708a
  4070ed:	test   DWORD PTR [ebx],eax
  4070ef:	jle    0x40708e
  4070f1:	imul   eax,DWORD PTR [ebx],0x3699d00
  4070f7:	add    BYTE PTR [ebp-0x62fffc97],bl
  4070fd:	imul   eax,DWORD PTR [ebx],0x3699d00
  407103:	add    BYTE PTR [ebp+0x369],bl
  407109:	popf   
  40710a:	imul   eax,DWORD PTR [ebx],0x3699d00
  407110:	add    BYTE PTR [ebp-0x62fffc97],bl
  407116:	imul   eax,DWORD PTR [ebx],0x3699d00
  40711c:	add    BYTE PTR [ebp-0x62fffc97],bl
  407122:	imul   eax,DWORD PTR [ebx],0x3699d00
  407128:	add    BYTE PTR [ebp-0x62fffc97],bl
  40712e:	imul   eax,DWORD PTR [ebx],0x3699d00
  407134:	add    BYTE PTR [ebp-0x62fffc97],bl
  40713a:	imul   eax,DWORD PTR [ebx],0x3699d00
  407140:	add    BYTE PTR [ebp-0x62fffc97],bl
  407146:	imul   eax,DWORD PTR [ebx],0x3699d00
  40714c:	add    BYTE PTR [ebp-0x62fffc97],bl
  407152:	imul   eax,DWORD PTR [ebx],0x3699d00
  407158:	add    BYTE PTR [ebp-0x62fffc97],bl
  40715e:	imul   eax,DWORD PTR [ebx],0xe9029d00
  407164:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  40716a:	add    ch,cl
  40716c:	add    eax,DWORD PTR [eax]
  40716e:	popf   
  40716f:	add    ch,cl
  407171:	add    ebx,DWORD PTR [ebp+0x2560602]
  407177:	push   ebx
  407178:	(bad)  
  407179:	push   ebp
  40717a:	cli    
  40717b:	push   edx
  40717c:	not    BYTE PTR [ebp-0xe]
  40717f:	push   edx
  407180:	out    dx,al
  407181:	push   ebp
  407182:	jmp    0xde52:0xe255e652
  407189:	push   ebp
  40718a:	ficom  DWORD PTR [edx-0x2a]
  40718d:	push   ebp
  40718e:	rcl    BYTE PTR [edx-0x32],cl
  407191:	push   ebp
  407192:	retf   0xc652
  407195:	push   ebp
  407196:	ret    0xbe52
  407199:	push   ebp
  40719a:	mov    edx,0xb255b652
  40719f:	push   edx
  4071a0:	scas   al,BYTE PTR es:[edi]
  4071a1:	push   ebp
  4071a2:	stos   BYTE PTR es:[edi],al
  4071a3:	push   edx
  4071a4:	jmp    0xe54010ab
  4071a9:	(bad)  
  4071aa:	mov    al,ds:0x920ae109
  4071af:	push   edx
  4071b0:	mov    ss,WORD PTR [ebp-0x76]
  4071b3:	push   edx
  4071b4:	xchg   BYTE PTR [edx],cl
  4071b6:	xchg   esi,eax
  4071b7:	(bad)  
  4071b8:	jmp    0x4071bf
  4071ba:	stos   BYTE PTR es:[edi],al
  4071bb:	push   ecx
  4071bc:	jbe    0x407213
  4071be:	jb     0x407212
  4071c0:	outs   dx,BYTE PTR ds:[esi]
  4071c1:	push   ebp
  4071c2:	push   0x52
  4071c4:	push   bp
  4071c6:	bound  edx,QWORD PTR [edx+0x5e]
  4071c9:	push   ebp
  4071ca:	pop    edx
  4071cb:	push   edx
  4071cc:	push   esi
  4071cd:	push   ebp
  4071ce:	push   edx
  4071cf:	push   edx
  4071d0:	dec    esi
  4071d1:	push   ebp
  4071d2:	add    BYTE PTR [edx+0x52],cl
  4071d5:	inc    esi
  4071d6:	or     dl,BYTE PTR [esi-0x55fa1402]
  4071dc:	push   ecx
  4071dd:	add    BYTE PTR [esi],dh
  4071df:	enter  0xff51,0x2e
  4071e3:	rcl    BYTE PTR [ecx-0x1],1
  4071e6:	es enter 0xff51,0x1e
  4071eb:	jo     0x40723e
  4071ed:	call   DWORD PTR [esi]
  4071ef:	push   0x700eff51
  4071f4:	push   ecx
  4071f5:	(bad)  
  4071f6:	jmp    0xe9407499
  4071fb:	sahf   
  4071fc:	add    al,BYTE PTR [eax]
  4071fe:	jmp    0xe94074a1
  407203:	sahf   
  407204:	add    al,BYTE PTR [eax]
  407206:	jmp    0xe94074a9
  40720b:	sahf   
  40720c:	add    al,BYTE PTR [eax]
  40720e:	jmp    0xe94074b1
  407213:	sahf   
  407214:	add    al,BYTE PTR [eax]
  407216:	jmp    0xe94074b9
  40721b:	sahf   
  40721c:	add    al,BYTE PTR [eax]
  40721e:	jmp    0xe94074c1
  407223:	sahf   
  407224:	add    al,BYTE PTR [eax]
  407226:	jmp    0xe94074c9
  40722b:	sahf   
  40722c:	add    al,BYTE PTR [eax]
  40722e:	jmp    0xe94074d1
  407233:	sahf   
  407234:	add    al,BYTE PTR [eax]
  407236:	jmp    0x43103b
  40723b:	jmp    0xe94074de
  407240:	sahf   
  407241:	add    al,BYTE PTR [eax]
  407243:	jmp    0xe94074e6
  407248:	sahf   
  407249:	add    al,BYTE PTR [eax]
  40724b:	jmp    0xe94074ee
  407250:	sahf   
  407251:	add    al,BYTE PTR [eax]
  407253:	jmp    0x4074f6
  407258:	xor    al,0x5
  40725a:	add    BYTE PTR [eax],al
  40725c:	inc    esp
  40725d:	add    eax,0x5440000
  407262:	add    BYTE PTR [eax],al
  407264:	xor    al,0x5
  407266:	add    BYTE PTR [eax],al
  407268:	xor    al,0x5
  40726a:	add    BYTE PTR [eax],al
  40726c:	add    al,0x5
  40726e:	add    BYTE PTR [eax],al
  407270:	add    al,0x5
  407272:	add    BYTE PTR [eax],al
  407274:	hlt    
  407275:	add    al,0x0
  407277:	add    ah,dh
  407279:	add    al,0x0
  40727b:	add    BYTE PTR [eax*1+0x5040000],al
  407282:	add    BYTE PTR [eax],al
  407284:	hlt    
  407285:	add    al,0x0
  407287:	add    ah,dh
  407289:	add    al,0x0
  40728b:	add    ah,al
  40728d:	add    al,0x0
  40728f:	add    ah,al
  407291:	add    al,0x0
  407293:	add    BYTE PTR [esp+eax*1+0x5b40000],dh
  40729a:	add    DWORD PTR [eax],eax
  40729c:	add    ch,al
  40729e:	add    eax,0x5c50101
  4072a3:	add    DWORD PTR [ecx],eax
  4072a5:	mov    ch,0x5
  4072a7:	add    DWORD PTR [ecx],eax
  4072a9:	mov    ch,0x5
  4072ab:	add    DWORD PTR [ecx],eax
  4072ad:	test   DWORD PTR [edi],eax
  4072af:	add    DWORD PTR [ecx],eax
  4072b1:	test   DWORD PTR [edi],eax
  4072b3:	add    DWORD PTR [ecx],eax
  4072b5:	jne    0x4072be
  4072b7:	add    DWORD PTR [eax],eax
  4072b9:	jne    0x4072c2
  4072bb:	add    DWORD PTR [ecx],eax
  4072bd:	test   DWORD PTR [edi],eax
  4072bf:	add    DWORD PTR [ecx],eax
  4072c1:	test   DWORD PTR [edi],eax
  4072c3:	add    DWORD PTR [ecx],eax
  4072c5:	jne    0x4072ce
  4072c7:	add    DWORD PTR [ecx],eax
  4072c9:	jne    0x4072d2
  4072cb:	add    DWORD PTR [ecx],eax
  4072cd:	inc    ebp
  4072ce:	pop    es
  4072cf:	add    DWORD PTR [ecx],eax
  4072d1:	popf   
  4072d2:	pop    edx
  4072d3:	add    al,0x1
  4072d5:	pushf  
  4072d6:	pop    edx
  4072d7:	add    al,0x1
  4072d9:	pushf  
  4072da:	pop    edx
  4072db:	add    al,0x1
  4072dd:	pushf  
  4072de:	pop    edx
  4072df:	add    al,0x1
  4072e1:	pushf  
  4072e2:	pop    edx
  4072e3:	add    al,0x1
  4072e5:	pushf  
  4072e6:	pop    edx
  4072e7:	add    al,0x1
  4072e9:	pushf  
  4072ea:	pop    edx
  4072eb:	add    al,0x1
  4072ed:	pushf  
  4072ee:	pop    edx
  4072ef:	add    al,0x1
  4072f1:	pushf  
  4072f2:	pop    edx
  4072f3:	add    al,0x1
  4072f5:	pushf  
  4072f6:	pop    edx
  4072f7:	add    al,0x1
  4072f9:	popf   
  4072fa:	pop    ecx
  4072fb:	add    eax,DWORD PTR [eax]
  4072fd:	popf   
  4072fe:	pop    ecx
  4072ff:	add    eax,DWORD PTR [eax]
  407301:	add    BYTE PTR [ebp-0x62fffca7],bl
  407307:	pop    ecx
  407308:	add    eax,DWORD PTR [eax]
  40730a:	popf   
  40730b:	pop    ecx
  40730c:	add    eax,DWORD PTR [eax]
  40730e:	popf   
  40730f:	pop    ecx
  407310:	add    eax,DWORD PTR [eax]
  407312:	popf   
  407313:	pop    ecx
  407314:	add    eax,DWORD PTR [eax]
  407316:	popf   
  407317:	pop    ecx
  407318:	add    eax,DWORD PTR [eax]
  40731a:	popf   
  40731b:	pop    ecx
  40731c:	add    eax,DWORD PTR [eax]
  40731e:	popf   
  40731f:	pop    ecx
  407320:	add    eax,DWORD PTR [eax]
  407322:	popf   
  407323:	pop    ecx
  407324:	add    eax,DWORD PTR [eax]
  407326:	popf   
  407327:	pop    ecx
  407328:	add    eax,DWORD PTR [eax]
  40732a:	popf   
  40732b:	pop    ecx
  40732c:	add    eax,DWORD PTR [eax]
  40732e:	popf   
  40732f:	pop    ecx
  407330:	add    eax,DWORD PTR [eax]
  407332:	popf   
  407333:	pop    ecx
  407334:	add    eax,DWORD PTR [eax]
  407336:	popf   
  407337:	pop    ecx
  407338:	add    eax,DWORD PTR [eax]
  40733a:	popf   
  40733b:	pop    ecx
  40733c:	add    eax,DWORD PTR [eax]
  40733e:	popf   
  40733f:	pop    ecx
  407340:	add    eax,DWORD PTR [eax]
  407342:	popf   
  407343:	pop    ecx
  407344:	add    eax,DWORD PTR [eax]
  407346:	popf   
  407347:	pop    ecx
  407348:	add    eax,DWORD PTR [eax]
  40734a:	popf   
  40734b:	add    ch,cl
  40734d:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407353:	add    ch,cl
  407355:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  40735b:	add    ch,cl
  40735d:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407363:	add    ch,cl
  407365:	add    eax,DWORD PTR [eax]
  407367:	popf   
  407368:	add    ch,cl
  40736a:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407370:	add    ch,cl
  407372:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407378:	add    ch,cl
  40737a:	add    ebx,DWORD PTR [ebp+0x3bc85902]
  407380:	test   BYTE PTR [edi+ebx*4-0x58],ah
  407384:	push   edx
  407385:	popa   
  407386:	sub    eax,0xf79243de
  40738b:	lods   al,BYTE PTR ds:[esi]
  40738c:	cdq    
  40738d:	test   al,0x13
  40738f:	mov    es,WORD PTR ds:0x47b9c20e
  407395:	int3   
  407396:	in     eax,0xb8
  407398:	shl    DWORD PTR [eax-0x693dd327],cl
  40739e:	mov    esp,0x5f624eba
  4073a3:	sub    DWORD PTR [ebx],0xaabb5b61
  4073a9:	dec    eax
  4073aa:	mov    edx,0x50693b4b
  4073af:	add    DWORD PTR [ebx-0x18ff96dc],ebp
  4073b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b6:	xchg   esp,eax
  4073b7:	push   0x64987f4c
  4073bc:	fnsave [edi]
  4073be:	out    0x56,al
  4073c0:	ss (bad) 
  4073c2:	fisttp WORD PTR [edi-0x7d]
  4073c5:	add    BYTE PTR [eax+0x52],dl
  4073c8:	loope  0x4073c9
  4073ca:	cwde   
  4073cb:	add    BYTE PTR [esi-0x4886fffe],bl
  4073d1:	outs   dx,BYTE PTR ds:[esi]
  4073d2:	mov    DWORD PTR ss:[edi-0x587ac966],esi
  4073d9:	xchg   esi,eax
  4073da:	lea    esp,ss:[edi+0x7919e227]
  4073e1:	xchg   ebx,eax
  4073e2:	push   ds
  4073e3:	outs   dx,BYTE PTR ds:[esi]
  4073e4:	aad    0xd8
  4073e6:	adc    al,0xf9
  4073e8:	sahf   
  4073e9:	test   BYTE PTR [edi],dl
  4073eb:	aas    
  4073ec:	daa    
  4073ed:	inc    ebx
  4073ee:	jns    0x407435
  4073f0:	push   ecx
  4073f1:	pushf  
  4073f2:	sub    eax,0x6e79f385
  4073f7:	lds    esp,FWORD PTR [ebp-0x5a32c8ea]
  4073fd:	(bad)  
  4073fe:	ss mov ch,0x95
  407401:	mov    dh,0x36
  407403:	popf   
  407404:	xchg   ebp,eax
  407405:	out    0x36,al
  407407:	test   DWORD PTR [ebp-0x48d9092a],eax
  40740d:	pop    es
  40740e:	push   edi
  40740f:	icebp  
  407410:	fwait
  407411:	dec    ebx
  407412:	push   ebx
  407413:	ret    
  407414:	imul   eax,eax,0xd2c24f4a
  40741a:	cdq    
  40741b:	out    dx,eax
  40741c:	pusha  
  40741d:	stc    
  40741e:	push   0xc842a677
  407423:	ins    DWORD PTR es:[edi],dx
  407424:	xchg   ebp,eax
  407425:	data16 aaa 
  407427:	lds    eax,FWORD PTR [ebp-0x7a52c8aa]
  40742d:	push   es
  40742e:	cmp    ch,dh
  407430:	add    BYTE PTR [esi-0x5902c80a],ah
  407436:	cmp    BYTE PTR es:[esi+0x28],al
  40743a:	push   0xbf227ff1
  40743f:	jmp    0x3168:0xaccd0100
  407446:	or     ch,bh
  407448:	mov    esi,0xd2959f8f
  40744d:	push   edi
  40744e:	lock push DWORD PTR [ecx+0x38934eac]
  407455:	sar    cl,1
  407457:	mov    ds:0xb3f92038,eax
  40745c:	cmp    BYTE PTR [eax],dl
  40745e:	stc    
  40745f:	ret    
  407460:	cmp    BYTE PTR [eax-0x7],dh
  407463:	sar    DWORD PTR [eax],cl
  407465:	nop
  407466:	mov    bh,0x7
  407468:	jp     0x40746e
  40746a:	add    eax,DWORD PTR [edx]
  40746c:	sbb    bh,BYTE PTR [eax+0x378d5d07]
  407472:	add    eax,0x50c8e4fe
  407477:	outs   dx,DWORD PTR ds:[esi]
  407478:	xchg   ecx,eax
  407479:	lds    edi,FWORD PTR [edx+0x32]
  40747c:	push   DWORD PTR [edx-0x6]
  40747f:	adc    BYTE PTR [ecx],bh
  407481:	xor    al,bh
  407483:	push   ebx
  407484:	cmp    DWORD PTR [eax],edx
  407486:	clc    
  407487:	arpl   WORD PTR [ecx],di
  407489:	and    al,bh
  40748b:	jae    0x4074c6
  40748d:	jo     0x407487
  40748f:	cmp    DWORD PTR [ecx],0x50
  407492:	inc    DWORD PTR [ebp-0x78]
  407495:	add    BYTE PTR [ecx-0x719b9adc],dl
  40749b:	cld    
  40749c:	lock mov ebp,0x6b757d14
  4074a2:	(bad)  
  4074a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a5:	sub    edi,DWORD PTR [esi-0x401e279a]
  4074ab:	sub    al,0x4b
  4074ad:	pop    edi
  4074ae:	lock inc BYTE PTR [ebx]
  4074b1:	cmp    dl,BYTE PTR [eax-0x6fc5ec06]
  4074b7:	cli    
  4074b8:	and    edi,DWORD PTR [edx]
  4074ba:	popf   
  4074bb:	inc    ebp
  4074bc:	or     DWORD PTR [edi+eax*8],esi
  4074bf:	cmp    eax,0xef784409
  4074c4:	ins    DWORD PTR es:[edi],dx
  4074c5:	sub    BYTE PTR [ebx+0xb2c9201],ch
  4074cb:	jne    0x407505
  4074cd:	push   edi
  4074ce:	div    DWORD PTR [ebx]
  4074d0:	(bad)  
  4074d1:	aad    0xfd
  4074d3:	(bad)  
  4074d4:	jno    0x4074e9
  4074d6:	lds    esp,FWORD PTR ds:0xc546cacb
  4074dc:	or     DWORD PTR [edi+eax*4+0x77c40a7d],esi
  4074e3:	adc    eax,0xed77d40a
  4074e8:	or     esp,esp
  4074ea:	lds    ecx,FWORD PTR [bx+di]
  4074ed:	hlt    
  4074ee:	addr16 pop esi
  4074f0:	pop    ebp
  4074f1:	sbb    ah,BYTE PTR [ebp+0x5cbf293]
  4074f7:	mov    al,ds:0x3d003626
  4074fc:	inc    ecx
  4074fd:	mov    ecx,0xaaafa29c
  407502:	(bad)  
  407503:	jg     0x40748e
  407505:	adc    eax,0xfbed6a81
  40750a:	arpl   WORD PTR [esi-0x598bf57b],sp
  407510:	fisttp QWORD PTR [ecx]
  407512:	test   BYTE PTR [esi-0x696bf62b],dl
  407518:	int    0x9
  40751a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751b:	xchg   BYTE PTR [ebp-0x380dbcb0],al
  407521:	imul   ebx,DWORD PTR [ecx+eiz*1-0x71],0x53
  407526:	cmp    al,0x44
  407528:	ret    0x1d0b
  40752b:	sub    ebp,DWORD PTR [edi+ebp*4-0x69]
  40752f:	outs   dx,DWORD PTR ds:[esi]
  407530:	xor    al,0xd9
  407532:	inc    ebx
  407533:	ds add al,al
  407536:	std    
  407537:	fisttp WORD PTR [esi]
  407539:	std    
  40753a:	xadd   DWORD PTR [esi],ecx
  40753d:	lds    ecx,FWORD PTR [edi]
  40753f:	leave  
  407540:	push   cs
  407541:	int    0xf
  407543:	loope  0x407553
  407545:	xor    eax,0x1d0ec910
  40754a:	adc    BYTE PTR [edx+0x44],al
  40754d:	push   eax
  40754e:	pop    ebx
  40754f:	jmp    0xe23b:0x18cd475
  407556:	or     al,0xd
  407558:	inc    ecx
  407559:	sub    ecx,DWORD PTR [ebp-0x7c]
  40755c:	fstp   QWORD PTR ds:0x6a530022
  407562:	sbb    eax,0x20e10447
  407567:	(bad)  
  407569:	push   cs
  40756a:	cmp    DWORD PTR [edi],ecx
  40756c:	sub    DWORD PTR [esi],ecx
  40756e:	add    eax,0xed0d6911
  407573:	adc    BYTE PTR [ecx+0xd],ah
  407576:	mov    ch,0x10
  407578:	imul   ecx,ebp,0x66a3e10e
  40757e:	sbb    DWORD PTR [ecx-0x3b38cc1c],0xc5ad1432
  407588:	sub    DWORD PTR [ecx+0x7d],eax
  40758b:	jecxz  0x407604
  40758d:	jge    0x40759b
  40758f:	mov    esi,0x10135fa1
  407594:	loope  0x4075a2
  407596:	mov    ch,0xf
  407598:	jmp    0xc15032a9
  40759d:	or     al,0xe9
  40759f:	rol    edx,cl
  4075a1:	dec    edx
  4075a2:	adc    DWORD PTR [ebx*4-0x24904bfe],eax
  4075a9:	inc    esi
  4075aa:	cdq    
  4075ab:	mov    BYTE PTR [ebx],dl
  4075ad:	cmp    eax,0xd1b81a00
  4075b2:	imul   esp,DWORD PTR [ebx-0x22],0x443be276
  4075b9:	adc    BYTE PTR [edi],ch
  4075bb:	clc    
  4075bc:	inc    ebx
  4075bd:	out    dx,al
  4075be:	repz ret 
  4075c0:	popa   
  4075c1:	ds xor eax,0x9a930045
  4075c7:	ss push ebp
  4075c9:	mov    edx,DWORD PTR [edx+0x3e933536]
  4075cf:	cmp    BYTE PTR [ecx+0x71384e91],ah
  4075d5:	sub    ecx,eax
  4075d7:	jge    0x40761f
  4075d9:	mov    esp,0x25b21c81
  4075de:	or     bh,BYTE PTR [ebp+0x78b51bf2]
  4075e4:	pop    edx
  4075e5:	(bad)  
  4075e7:	pushf  
  4075e8:	push   ebx
  4075e9:	ds cmp eax,0xdefd6bf2
  4075ef:	cmp    ebp,esp
  4075f1:	xchg   esp,eax
  4075f2:	cmp    dl,BYTE PTR cs:[ecx]
  4075f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f6:	cmp    cl,BYTE PTR es:[ecx]
  4075f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075fa:	pop    esi
  4075fb:	cmp    bl,BYTE PTR [ecx]
  4075fd:	xchg   edi,eax
  4075fe:	dec    esi
  4075ff:	cmp    dl,BYTE PTR [ecx]
  407601:	xchg   edi,eax
  407602:	cmp    BYTE PTR [edx-0x1a],ah
  407605:	aas    
  407606:	mov    bl,0xf2
  407608:	mov    ebp,0xdf954bad
  40760d:	xchg   ebx,eax
  40760e:	icebp  
  40760f:	sub    al,0xcf
  407611:	push   ds
  407612:	jl     0x407616
  407614:	adc    al,0x24
  407617:	fisub  WORD PTR [edx]
  407619:	int    0x6c
  40761b:	pop    ecx
  40761c:	jno    0x4075b3
  40761e:	jbe    0x40765b
  407620:	jns    0x4075b7
  407622:	outs   dx,BYTE PTR ds:[esi]
  407623:	cmp    esi,DWORD PTR [ecx-0x5b]
  407626:	mov    bh,BYTE PTR [ebx]
  407628:	add    BYTE PTR [eax],al
  40762a:	sbb    bl,bh
  40762c:	mov    edi,0xe3fafc3b
  407631:	std    
  407632:	mov    ss,WORD PTR [edx-0x66b56cb6]
  407638:	jg     0x407683
  40763a:	mov    ebp,0x45a8cc1c
  40763f:	leave  
  407640:	sar    DWORD PTR [ebx-0xb303ff6],cl
  407646:	pop    esi
  407647:	sti    
  407648:	fist   WORD PTR [ecx]
  40764a:	push   ebp
  40764b:	clc    
  40764c:	and    edi,DWORD PTR ds:0xffffd574
  407652:	cwde   
  407653:	(bad)  
  407654:	(bad)  
  407655:	dec    DWORD PTR [eax-0xf]
  407658:	jg     0x40768e
  40765a:	shl    cl,0x87
  40765d:	xor    al,0xd
  40765f:	pop    es
  407660:	lea    esi,[edx+ebx*8-0x7272a319]
  407667:	push   edi
  407668:	popa   
  407669:	(bad)  
  40766a:	out    dx,al
  40766b:	or     ch,BYTE PTR [eax-0x15d2a931]
  407671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407672:	sar    WORD PTR [edx+0x525ac6c5],1
  407679:	aaa    
  40767a:	(bad)  
  40767b:	sti    
  40767c:	call   0xb53b72ba
  407681:	cmp    ch,BYTE PTR [edx+0xd3c63fa]
  407687:	stc    
  407688:	mov    ch,0x3c
  40768a:	les    edi,FWORD PTR [edx]
  40768c:	xchg   ecx,eax
  40768d:	add    BYTE PTR [eax],0x36
  407690:	ds enter 0x51e2,0x5c
  407695:	jae    0x407626
  407697:	mov    DWORD PTR [ebx],edi
  407699:	call   FWORD PTR [ecx+0x63]
  40769c:	ss test al,0x8
  40769f:	inc    edx
  4076a0:	daa    
  4076a1:	les    edi,FWORD PTR [esi+0x28dc209d]
  4076a7:	jp     0x407702
  4076a9:	or     ah,BYTE PTR [edx+esi*2]
  4076ac:	add    BYTE PTR [ebx],cl
  4076ae:	inc    ebp
  4076af:	push   0xffffffe6
  4076b1:	or     ah,BYTE PTR [ebx+0x62]
  4076b4:	adc    cl,BYTE PTR [ebx]
  4076b6:	jg     0x407692
  4076b8:	mov    WORD PTR [ebx],cs
  4076ba:	prefetchw BYTE PTR [eax+0x39d60b21]
  4076c1:	cwde   
  4076c2:	outs   dx,BYTE PTR ds:[esi]
  4076c3:	mov    eax,0xf072b3c4
  4076c8:	lods   eax,DWORD PTR ds:[esi]
  4076c9:	mov    al,0x5f
  4076cb:	xor    ebx,DWORD PTR [ebp+ecx*4-0x65]
  4076cf:	add    al,0x3c
  4076d1:	cli    
  4076d2:	(bad)  
  4076d4:	pop    ds
  4076d5:	adc    eax,0x15028c5d
  4076da:	outs   dx,DWORD PTR ds:[esi]
  4076db:	mov    esp,ds
  4076dd:	adc    al,0x90
  4076df:	mov    WORD PTR [eax+0x15],gs
  4076e2:	retf   0x78c
  4076e5:	adc    eax,0x97a06fdd
  4076ea:	cmp    cl,ch
  4076ec:	fisub  DWORD PTR [ebp+esi*4+0x11090aed]
  4076f3:	add    BYTE PTR [ecx+edx*2],ah
  4076f6:	or     eax,0x815358b6
  4076fb:	jmp    0xb5524079
  407700:	in     eax,0xa2
  407702:	setnp  cl
  407705:	dec    BYTE PTR [edi]
  407707:	ins    BYTE PTR es:[edi],dx
  407708:	mov    al,0x6d
  40770a:	adc    BYTE PTR [ebx+0x22114da8],ah
  407710:	mov    bl,0x37
  407712:	adc    DWORD PTR [edi],esi
  407714:	stos   DWORD PTR es:[edi],eax
  407715:	xlat   BYTE PTR ds:[ebx]
  407716:	mov    ebx,DWORD PTR ds:0xa66d4b17
  40771c:	mov    edi,0xd5220202
  407721:	mov    al,ds:0xc472e5ab
  407726:	pop    edx
  407727:	or     esp,DWORD PTR [edx+0x24]
  40772a:	(bad)  
  40772b:	push   eax
  40772c:	daa    
  40772d:	jae    0x407716
  40772f:	in     al,dx
  407730:	loope  0x407742
  407732:	mov    bl,0x11
  407734:	int3   
  407735:	adc    BYTE PTR [esi-0x35ef86ef],bl
  40773b:	adc    DWORD PTR [eax+edx*1+0x10901197],eax
  407742:	lods   eax,DWORD PTR ds:[esi]
  407743:	sub    ebx,DWORD PTR [edx]
  407745:	dec    ebp
  407746:	sbb    eax,DWORD PTR [ebx+0x692b2d71]
  40774c:	leave  
  40774d:	aad    0xc3
  40774f:	xor    al,0xf8
  407751:	mov    ds:0xb12bd96e,al
  407756:	inc    eax
  407757:	fadd   QWORD PTR [eax]
  407759:	std    
  40775a:	add    al,0xa0
  40775c:	scas   eax,DWORD PTR es:[edi]
  40775d:	jecxz  0x4076eb
  40775f:	jl     0x407791
  407761:	pop    es
  407762:	fimul  WORD PTR [eax+0x3f44e1a6]
  407768:	sub    al,0xe
  40776a:	into   
  40776b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40776d:	ins    DWORD PTR es:[edi],dx
  40776e:	push   ebx
  40776f:	jmp    0x534ab87f
  407774:	or     eax,DWORD PTR [ecx]
  407776:	or     ch,BYTE PTR [ebx+0xb]
  407779:	out    dx,al
  40777a:	or     DWORD PTR [eax-0x66cb321],esp
  407780:	and    eax,0xb6ee6372
  407785:	and    eax,0x98a46faa
  40778a:	sub    eax,0x88ec3749
  40778f:	adc    DWORD PTR [ecx-0xf],0x2f
  407793:	dec    ebx
  407794:	ins    BYTE PTR es:[edi],dx
  407795:	jp     0x407809
  407797:	add    ah,dl
  407799:	daa    
  40779a:	and    ebp,esp
  40779c:	pusha  
  40779d:	xchg   ecx,eax
  40779e:	cli    
  40779f:	cdq    
  4077a0:	mov    ch,0x35
  4077a2:	das    
  4077a3:	out    dx,eax
  4077a4:	hlt    
  4077a5:	xchg   BYTE PTR ds:[ebp-0x2ee9e3dc],dl
  4077ac:	or     eax,0x6b19a9c6
  4077b1:	(bad)  
  4077b3:	push   0xfc399653
  4077b8:	mov    eax,0xe1365006
  4077bd:	add    BYTE PTR [ecx+0x3c327918],bl
  4077c3:	sub    DWORD PTR [ecx],eax
  4077c5:	fdiv   DWORD PTR [esi-0x52]
  4077c8:	jge    0x4077e4
  4077ca:	lock push 0x21
  4077cd:	ret    
  4077ce:	mov    ah,BYTE PTR ds:0x732a308c
  4077d4:	loope  0x4077cd
  4077d6:	dec    esi
  4077d7:	clc    
  4077d8:	add    DWORD PTR [ebx],esi
  4077da:	ds je  0x407843
  4077dd:	xor    DWORD PTR [ebx-0x1c],esp
  4077e0:	dec    eax
  4077e2:	out    dx,al
  4077e3:	rcl    ch,0x31
  4077e6:	and    bl,BYTE PTR [ebx+ebp*8]
  4077e9:	mov    edi,0xe121c355
  4077ee:	es retf 0xefe4
  4077f2:	push   eax
  4077f3:	mov    eax,0x27e4ccd5
  4077f8:	sub    eax,0xd1728953
  4077fd:	pop    ebp
  4077fe:	mov    eax,edi
  407800:	cmp    ecx,DWORD PTR [ecx-0x2e]
  407803:	aad    0x23
  407805:	rcr    BYTE PTR [esi+0x4af05291],cl
  40780b:	mov    DWORD PTR [ecx+esi*8+0x6b8191],ebp
  407812:	bound  esi,QWORD PTR [edx-0x2222a5bf]
  407818:	daa    
  407819:	xchg   ebp,eax
  40781a:	or     ebp,DWORD PTR [edx+0x6f]
  40781d:	xchg   esi,eax
  40781e:	mov    DWORD PTR [esi+0x5900a836],esi
  407824:	inc    ebx
  407825:	rcl    BYTE PTR [edx],1
  407827:	addr16 or eax,0xa9eade5
  40782d:	pop    esi
  40782e:	sti    
  40782f:	adc    bh,BYTE PTR [ebx+0x2]
  407832:	shl    al,1
  407834:	leave  
  407835:	mov    edi,0x36710e76
  40783a:	dec    ebx
  40783b:	mov    ds,WORD PTR [edx+0x33]
  40783e:	cmp    bl,BYTE PTR [edx-0x7c]
  407841:	cs loopne 0x40782f
  407844:	imul   esi,DWORD PTR [edx],0x2d
  407847:	add    al,al
  407849:	out    dx,eax
  40784a:	push   ecx
  40784b:	xchg   edx,eax
  40784c:	xor    ecx,eax
  40784e:	cwde   
  40784f:	pop    ebp
  407850:	push   ecx
  407851:	jmp    0xa792:0xa42281ed
  407858:	shl    DWORD PTR [ecx],cl
  40785a:	mov    edx,0x57f011e8
  40785f:	and    cl,ch
  407861:	xor    ah,dh
  407863:	jle    0x4078e4
  407865:	inc    edi
  407866:	sbb    BYTE PTR [edx+ebp*8+0x76482996],0xbe
  40786e:	pop    eax
  40786f:	jmp    0x2ab8:0xb8e2153d
  407876:	or     esi,DWORD PTR es:[ebp+0x4441b330]
  40787d:	xchg   cl,ch
  40787f:	xchg   DWORD PTR [esi-0x4e572ea5],esp
  407885:	xchg   al,ah
  407887:	add    BYTE PTR [edx-0x6272aac2],ah
  40788d:	jns    0x40781b
  40788f:	or     al,0xa
  407891:	and    ah,ch
  407893:	dec    esp
  407894:	aam    0x39
  407896:	xor    dh,dh
  407898:	and    BYTE PTR [edx-0x72],al
  40789b:	retf   0xa5ff
  40789e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40789f:	mov    ecx,0xcd9aa30f
  4078a4:	in     al,dx
  4078a5:	dec    eax
  4078a6:	fst    QWORD PTR [edx+0x51e0e0c1]
  4078ac:	xchg   esi,eax
  4078ad:	outs   dx,BYTE PTR ds:[esi]
  4078ae:	jbe    0x407841
  4078b0:	xor    ebp,DWORD PTR [ebp-0xd]
  4078b3:	out    0x6c,eax
  4078b5:	pop    edx
  4078b6:	jmp    0x4078e3
  4078b8:	mov    ds:0xc41336d9,al
  4078bd:	add    eax,0xd980c10a
  4078c2:	(bad)  
  4078c3:	loope  0x407855
  4078c5:	daa    
  4078c6:	pop    edi
  4078c7:	pop    ss
  4078c8:	push   edi
  4078c9:	sbb    bh,BYTE PTR [ecx+0x16]
  4078cc:	call   FWORD PTR [ecx]
  4078ce:	das    
  4078cf:	adc    eax,0x882c23f6
  4078d4:	aam    0x91
  4078d6:	(bad)  
  4078d7:	pop    DWORD PTR [esi]
  4078d9:	retf   
  4078da:	sbb    ebp,DWORD PTR [eax+0x75cde31a]
  4078e0:	xor    bl,BYTE PTR [esi+0x4e71c5b4]
  4078e6:	xchg   esp,eax
  4078e7:	pop    eax
  4078e8:	jb     0x40789b
  4078ea:	mov    esi,0x69ed0013
  4078ef:	push   ecx
  4078f0:	xlat   BYTE PTR ds:[ebx]
  4078f1:	and    al,BYTE PTR [ecx+0x45bcbb9d]
  4078f7:	fwait
  4078f8:	ret    0x7d54
  4078fb:	arpl   WORD PTR [ecx+0xc6ae2fc],di
  407901:	fstp   st(1)
  407903:	push   0xffffffd9
  407905:	jle    0x407909
  407907:	retf   0x508d
  40790a:	scas   eax,DWORD PTR es:[edi]
  40790b:	cs (bad) 
  40790d:	sub    al,0x5a
  40790f:	shl    DWORD PTR [eax+ebx*2],cl
  407912:	daa    
  407913:	in     al,dx
  407914:	ja     0x4078b0
  407916:	mov    ebp,0x88416b08
  40791b:	(bad)
  40791e:	(bad)  
  40791f:	shl    DWORD PTR [esi+0x3e9025f],1
  407925:	popf   
  407926:	add    ch,cl
  407928:	add    ebx,DWORD PTR [ebp+0x5c909602]
  40792e:	add    dh,BYTE PTR [esi]
  407930:	mov    ds,WORD PTR [edx+eax*1-0x17]
  407934:	add    ebx,DWORD PTR [ebp+0x5c8d7902]
  40793a:	add    bl,BYTE PTR [edi-0x6dfd2373]
  407940:	add    edx,eax
  407942:	add    bh,BYTE PTR [ebp+0x7c]
  407945:	fld    QWORD PTR [edx]
  407947:	mov    al,ds:0x45029803
  40794c:	jl     0x40792b
  40794e:	add    ah,bl
  407950:	add    eax,DWORD PTR [eax]
  407952:	ret    0x1502
  407955:	jge    0x407934
  407957:	add    dh,BYTE PTR [ecx]
  407959:	add    al,0x98
  40795b:	add    cl,BYTE PTR ds:0xfa02dd7d
  407961:	add    ebx,DWORD PTR [eax-0x2282fafe]
  407967:	add    ah,BYTE PTR [ebp+0x3]
  40796a:	xchg   ebx,eax
  40796b:	add    dh,BYTE PTR [ebp+0x602dd7c]
  407971:	add    al,0x89
  407973:	add    cl,BYTE PTR ds:0xac02dd7d
  407979:	add    edx,DWORD PTR [edx+eax*1+0x25d7cf9]
  407980:	add    BYTE PTR [eax+0xfffc9e],ch
  407986:	mov    dl,al
  407988:	call   FWORD PTR ds:0xc8fffd9e
  40798e:	jns    0x407952
  407990:	call   DWORD PTR [eax-0x13000062]
  407996:	imul   eax,edx,0xef9eabff
  40799c:	push   eax
  40799e:	pop    ecx
  40799f:	ret    0xdeff
  4079a2:	sahf   
  4079a3:	clc    
  4079a4:	(bad)  
  4079a5:	in     al,dx
  4079a6:	inc    edi
  4079a7:	ret    0x1dff
  4079aa:	cdq    
  4079ab:	cld    
  4079ac:	call   esp
  4079ae:	cmp    edx,eax
  4079b0:	inc    DWORD PTR [esi-0x67]
  4079b3:	cld    
  4079b4:	(bad)  
  4079b5:	mov    esp,0xffc22900
  4079ba:	mov    eax,0xc8fff999
  4079bf:	sbb    ebx,eax
  4079c1:	dec    esi
  4079c3:	cdq    
  4079c4:	push   es
  4079c5:	add    BYTE PTR [ecx-0x35003cf7],dl
  4079cb:	sahf   
  4079cc:	or     al,BYTE PTR [eax]
  4079ce:	lods   eax,DWORD PTR ds:[esi]
  4079cf:	stc    
  4079d0:	ret    0x9eff
  4079d3:	cdq    
  4079d4:	adc    BYTE PTR [eax],al
  4079d6:	dec    ebp
  4079d7:	jmp    0x9975799e
  4079dc:	add    eax,0xc2d94100
  4079e1:	(bad)  
  4079e2:	ficomp DWORD PTR [esi-0x36c6fffa]
  4079e8:	ret    0xafff
  4079eb:	sahf   
  4079ec:	or     eax,DWORD PTR [eax]
  4079ee:	test   DWORD PTR [ecx-0x66c7003e],edi
  4079f4:	repnz (bad) 
  4079f6:	fsub   DWORD PTR [esi+0x27ffffc2]
  4079fc:	push   es
  4079fd:	pop    es
  4079fe:	add    ah,ch
  407a00:	mov    ebp,0x6a9003f
  407a05:	or     DWORD PTR [eax],eax
  407a07:	sbb    BYTE PTR [esi+0x691003f],bh
  407a0d:	or     al,BYTE PTR [eax]
  407a0f:	xor    al,0xbe
  407a11:	aas    
  407a12:	add    BYTE PTR [edi],ch
  407a14:	push   es
  407a15:	adc    al,BYTE PTR [eax]
  407a17:	fdivr  DWORD PTR [ebp+0x5900003f]
  407a1d:	push   es
  407a1e:	and    BYTE PTR [eax],al
  407a20:	mov    esp,0xe0003fbd
  407a25:	add    eax,0xbde40004
  407a2a:	aas    
  407a2b:	add    ch,bh
  407a2d:	add    eax,0xbee80021
  407a32:	aas    
  407a33:	add    BYTE PTR [ebx+0xc003206],ah
  407a39:	mov    edi,0x663003f
  407a3e:	and    al,BYTE PTR [eax]
  407a40:	lock mov esi,0x5f9003f
  407a46:	or     al,0x0
  407a48:	add    BYTE PTR [edi+0x560003f],bh
  407a4e:	sbb    eax,DWORD PTR [eax]
  407a50:	mov    WORD PTR [edi+0x53c003f],?
  407a56:	verw   WORD PTR [edi+edi*4+0x5a6003f]
  407a5e:	or     BYTE PTR [eax],al
  407a60:	mov    BYTE PTR [edi+0x503003f],bh
  407a66:	add    eax,0x3fbf8000
  407a6b:	add    BYTE PTR [ebp+eax*1+0x2],ch
  407a6f:	add    BYTE PTR [esi+edi*4],al
  407a72:	aas    
  407a73:	add    BYTE PTR [ebp-0x62ebfcd7],bl
  407a79:	add    edi,DWORD PTR [ebp+0x40]
  407a7c:	popf   
  407a7d:	mov    dl,0x2
  407a7f:	adc    DWORD PTR [eax],eax
  407a81:	popf   
  407a82:	push   edi
  407a83:	jl     0x407ac5
  407a85:	popf   
  407a86:	(bad)  
  407a87:	add    dl,BYTE PTR [ecx]
  407a89:	popf   
  407a8a:	sub    edi,DWORD PTR [eax+eax*2-0x63]
  407a8e:	int3   
  407a8f:	add    al,BYTE PTR [edi]
  407a91:	popf   
  407a92:	jecxz  0x407b10
  407a94:	inc    eax
  407a95:	popf   
  407a96:	popf   
  407a97:	add    ecx,DWORD PTR [esi]
  407a99:	popf   
  407a9a:	add    edi,DWORD PTR [ebp+0x40]
  407a9d:	popf   
  407a9e:	imul   eax,DWORD PTR [ebx],0xc
  407aa1:	popf   
  407aa2:	jecxz  0x407b20
  407aa4:	inc    eax
  407aa5:	popf   
  407aa6:	lsl    eax,WORD PTR [ebx*4-0x62bf82e5]
  407aae:	fs add al,0x7
  407ab1:	popf   
  407ab2:	jae    0x407a3e
  407ab4:	inc    eax
  407ab5:	popf   
  407ab6:	add    ecx,DWORD PTR es:0x408a939d
  407abd:	popf   
  407abe:	jae    0x407ac4
  407ac0:	or     BYTE PTR [ebp-0x62bf7573],bl
  407ac6:	jno    0x407acc
  407ac8:	or     BYTE PTR [ebp-0x62bf7577],bl
  407ace:	xor    eax,0x819d0703
  407ad3:	mov    al,BYTE PTR [eax-0x63]
  407ad6:	popf   
  407ad7:	add    al,0x15
  407ad9:	popf   
  407ada:	test   eax,0x9d4089
  407adf:	add    al,0xb
  407ae1:	popf   
  407ae2:	xor    eax,0x9d004089
  407ae7:	add    eax,0x19d0b04
  407aec:	mov    al,BYTE PTR [eax-0x63]
  407aef:	add    dl,BYTE PTR [eax+0x4]
  407af2:	pop    DWORD PTR [edx]
  407af4:	mov    ch,0x89
  407af6:	fld    QWORD PTR [edx]
  407af8:	add    BYTE PTR [esp+edx*4],al
  407afb:	add    ah,BYTE PTR [ecx+0x302dd89]
  407b01:	add    al,0xae
  407b03:	add    dh,ch
  407b05:	mov    DWORD PTR [ebp+0x2],ebx
  407b08:	sahf   
  407b09:	add    edx,DWORD PTR [ebp+0x5d8a0102]
  407b0f:	add    dh,BYTE PTR [ebx]
  407b11:	add    al,0xaa
  407b13:	add    al,BYTE PTR [ecx]
  407b15:	mov    bl,BYTE PTR [ebp+0x2]
  407b18:	cmp    BYTE PTR [edx+eiz*4],al
  407b1b:	add    bh,cl
  407b1d:	mov    DWORD PTR [ebp+0x2],ebx
  407b20:	push   esi
  407b21:	add    al,0xa9
  407b23:	add    ch,cl
  407b25:	mov    DWORD PTR [ebp+0x2],ebx
  407b28:	push   ecx
  407b29:	add    al,0x94
  407b2b:	add    dh,ch
  407b2d:	mov    BYTE PTR [ebp+0x2],bl
  407b30:	fild   WORD PTR [ebx]
  407b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b33:	add    dl,cl
  407b35:	mov    BYTE PTR [ebp+0x2],bl
  407b38:	add    al,0x4
  407b3a:	mov    eax,ds:0x5d88c902
  407b3f:	add    al,BYTE PTR [ebx+eax*1-0x789efe1d]
  407b46:	fld    QWORD PTR [edx]
  407b48:	fadd   QWORD PTR [ebx]
  407b4a:	add    al,dh
  407b4c:	add    ch,BYTE PTR [ecx]
  407b4e:	mov    ch,bl
  407b50:	add    dh,BYTE PTR [eax+0x3]
  407b53:	les    eax,FWORD PTR [edx]
  407b55:	cmc    
  407b56:	xchg   ebp,ebx
  407b58:	add    ah,BYTE PTR [edi-0x1efd68fd]
  407b5e:	xchg   ebp,ebx
  407b60:	add    ch,BYTE PTR [ecx+0x3]
  407b63:	mov    es,WORD PTR [edx]
  407b65:	xchg   ebp,eax
  407b66:	xchg   ch,bl
  407b68:	add    al,BYTE PTR [eax]
  407b6a:	mov    ds:0x9d00079e,al
  407b6f:	sbb    eax,edx
  407b71:	push   DWORD PTR [eax+0x2900099e]
  407b77:	sbb    eax,edx
  407b79:	jmp    DWORD PTR [ebp-0x62]
  407b7c:	out    dx,al
  407b7d:	(bad)  
  407b7e:	js     0x407b9b
  407b80:	ret    0xeeff
  407b83:	sahf   
  407b84:	push   cs
  407b85:	add    BYTE PTR [ecx+0x1b],ch
  407b88:	ret    0x9aff
  407b8b:	sahf   
  407b8c:	(bad)  
  407b8d:	push   eax
  407b8f:	sbb    eax,edx
  407b91:	jmp    FWORD PTR [edx-0x26fff962]
  407b97:	sbb    eax,edx
  407b99:	call   edx
  407b9b:	sahf   
  407b9c:	push   es
  407b9d:	add    cl,al
  407b9f:	sbb    eax,edx
  407ba1:	jmp    DWORD PTR [esi+ebx*4+0xc]
  407ba5:	add    ch,bl
  407ba7:	sbb    eax,edx
  407ba9:	dec    DWORD PTR ds:0xd500089e
  407baf:	add    BYTE PTR [ebx],bl
  407bb1:	ret    0xe7ff
  407bb4:	sahf   
  407bb5:	call   0xc25c48b9
  407bba:	(bad)  
  407bbb:	jmp    0x407b5b
  407bbd:	add    eax,0xc21bc500
  407bc2:	(bad)  
  407bc3:	aas    
  407bc4:	mov    eax,ds:0x1b9d0005
  407bc9:	ret    
  407bca:	jmp    FWORD PTR [esi]
  407bcc:	mov    eax,ds:0x1b910001
  407bd1:	ret    
  407bd2:	inc    DWORD PTR [ecx-0x56ffea5f]
  407bd8:	sbb    eax,ebx
  407bda:	dec    edi
  407bdc:	sahf   
  407bdd:	or     eax,0xc31b5900
  407be2:	(bad)  
  407be3:	jmp    DWORD PTR [ebp+0x2]
  407be6:	add    eax,0x4084ec00
  407beb:	add    BYTE PTR [ebx+0x2],dh
  407bee:	adc    al,0x0
  407bf0:	in     al,0x84
  407bf2:	inc    eax
  407bf3:	add    BYTE PTR [esi+eax*1-0x77abffe2],bl
  407bfa:	inc    eax
  407bfb:	add    BYTE PTR [ebx+0x6],bh
  407bfe:	pop    es
  407bff:	add    BYTE PTR [eax+ecx*4+0x40],bl
  407c03:	add    BYTE PTR [edi],cl
  407c05:	add    dl,BYTE PTR [eax]
  407c07:	add    BYTE PTR [eax],ch
  407c09:	mov    BYTE PTR [eax+0x0],al
  407c0c:	mov    ecx,0x20000606
  407c11:	mov    BYTE PTR [eax+0x0],al
  407c14:	add    BYTE PTR [ecx],al
  407c16:	add    al,BYTE PTR [ebx]
  407c18:	add    BYTE PTR [eax+ecx*4],ch
  407c1b:	inc    eax
  407c1c:	add    BYTE PTR [eax],dh
  407c1e:	add    ch,BYTE PTR [edi]
  407c20:	add    ah,ch
  407c22:	xchg   DWORD PTR [eax+0x0],eax
  407c25:	jg     0x407c2d
  407c27:	pop    ss
  407c28:	add    ah,al
  407c2a:	xchg   DWORD PTR [eax+0x0],eax
  407c2d:	mov    DWORD PTR [esi],eax
  407c2f:	sbb    al,BYTE PTR [eax]
  407c31:	cwde   
  407c32:	add    DWORD PTR [eax+0x0],0xf064f
  407c39:	call   0xba40bcbe
  407c3e:	add    DWORD PTR [eax+eax*1],edx
  407c41:	adc    BYTE PTR [ecx+0x11f0040],al
  407c47:	pop    ds
  407c48:	add    al,dh
  407c4a:	add    BYTE PTR [eax+0x0],0x88
  407c4e:	add    DWORD PTR [eax+eax*1],esp
  407c51:	enter  0x4081,0x0
  407c55:	pop    ss
  407c56:	add    DWORD PTR [edx],ecx
  407c58:	add    BYTE PTR [ecx+eax*4+0x7c9d0040],cl
  407c5f:	add    eax,DWORD PTR [ebx*4-0x62bf7cf5]
  407c66:	pop    ebp
  407c67:	add    eax,DWORD PTR [ebx*4-0x62bf7d1d]
  407c6e:	and    DWORD PTR [ebx],eax
  407c70:	or     al,0x9d
  407c72:	jecxz  0x407bf6
  407c74:	inc    eax
  407c75:	popf   
  407c76:	dec    esi
  407c77:	add    edx,DWORD PTR [ecx]
  407c79:	add    BYTE PTR [ebp-0x62bf7ce9],bl
  407c7f:	rol    DWORD PTR [edx],1
  407c81:	push   cs
  407c82:	popf   
  407c83:	pop    es
  407c84:	add    DWORD PTR [eax-0x63],0x4e
  407c88:	add    ecx,DWORD PTR [ebx*4-0x62bf7da9]
  407c8f:	(bad)  
  407c91:	adc    bl,BYTE PTR [ebp-0x62bf7dd5]
  407c97:	xchg   esp,eax
  407c98:	add    ebx,DWORD PTR [esi]
  407c9a:	popf   
  407c9b:	or     eax,DWORD PTR [ebx+0x2b59d40]
  407ca1:	xor    DWORD PTR [ebp-0x62bf7d01],ebx
  407ca7:	sbb    eax,DWORD PTR [ebx]
  407ca9:	or     DWORD PTR [ebp-0x62bf7d35],ebx
  407caf:	add    BYTE PTR [ebx],0xc
  407cb2:	popf   
  407cb3:	fild   DWORD PTR [edx+0x3b99d40]
  407cb9:	or     al,0x9d
  407cbb:	stos   DWORD PTR es:[edi],eax
  407cbc:	add    DWORD PTR [eax-0x63],0xffffffc2
  407cc0:	add    eax,DWORD PTR [edi]
  407cc2:	popf   
  407cc3:	rol    DWORD PTR [ebx+0x3c49d40],cl
  407cc9:	adc    al,0x9d
  407ccb:	leave  
  407ccc:	add    DWORD PTR [eax-0x63],0xffffffb1
  407cd0:	add    eax,DWORD PTR [ebx*4-0x62bf7bef]
  407cd7:	add    ch,bh
  407cd9:	add    ebx,DWORD PTR [ecx+0x843902]
  407cdf:	fld    QWORD PTR [edx]
  407ce1:	out    dx,eax
  407ce2:	add    ebx,DWORD PTR [ecx-0x227bdefe]
  407ce8:	add    dl,bh
  407cea:	add    ebx,DWORD PTR [ebx-0x227bd6fe]
  407cf0:	add    bl,BYTE PTR [ecx-0x46fd6efc]
  407cf6:	sbb    ebp,0x2
  407cf9:	fiadd  WORD PTR [ebx]
  407cfb:	cdq    
  407cfc:	add    dl,BYTE PTR [ecx]
  407cfe:	test   ch,bl
  407d00:	add    bl,BYTE PTR [edx+0x4]
  407d03:	add    DWORD PTR [edx],0xffffffe1
  407d06:	sbb    DWORD PTR [ebp+0x2],0xffffff8a
  407d0a:	add    al,0x9a
  407d0c:	add    ch,cl
  407d0e:	sbb    DWORD PTR [ebp+0x2],0xffffffdd
  407d12:	add    edx,DWORD PTR [edx-0x4540c6fe]
  407d18:	add    ah,BYTE PTR [edi+0x502a603]
  407d1e:	mov    edi,0x42202aa
  407d23:	xchg   esp,eax
  407d24:	add    dh,BYTE PTR [ecx]
  407d26:	mov    edi,0x3aa029a
  407d2b:	mov    al,ds:0x8abf3102
  407d30:	add    ch,dl
  407d32:	add    edx,DWORD PTR [edi+0x7abf2d02]
  407d38:	add    bl,BYTE PTR [ebx+eax*1-0x4172fd60]
  407d3f:	push   0x2
  407d41:	fiadd  DWORD PTR [ebx]
  407d43:	add    BYTE PTR [ebx-0x25418afe],cl
  407d49:	add    al,bh
  407d4b:	add    ebp,DWORD PTR [eax-0x3540c2fe]
  407d51:	add    al,BYTE PTR [eax]
  407d53:	popa   
  407d54:	sahf   
  407d55:	adc    BYTE PTR [eax],al
  407d57:	inc    ecx
  407d58:	cmp    bh,bl
  407d5a:	jmp    FWORD PTR [esi+ebx*4+0x7]
  407d5e:	add    BYTE PTR ds:0x1dfffb2a,bh
  407d64:	cdq    
  407d65:	or     eax,0xfb1a1d00
  407d6a:	push   DWORD PTR [ebp-0x62]
  407d6d:	adc    al,BYTE PTR [eax]
  407d6f:	ror    DWORD PTR [ebx],0xfb
  407d72:	call   FWORD PTR [esi]
  407d74:	cdq    
  407d75:	push   cs
  407d76:	add    cl,al
  407d78:	sti    
  407d79:	cli    
  407d7a:	push   ebp
  407d7c:	sahf   
  407d7d:	pop    es
  407d7e:	add    ch,bh
  407d80:	jmp    0x407d7c
  407d82:	call   FWORD PTR [eax]
  407d84:	cdq    
  407d85:	push   cs
  407d86:	add    ch,bl
  407d88:	pop    ebx
  407d89:	sti    
  407d8a:	call   ecx
  407d8c:	sahf   
  407d8d:	adc    al,BYTE PTR [eax]
  407d8f:	inc    ecx
  407d90:	dec    eax
  407d91:	sti    
  407d92:	(bad)  
  407d93:	in     al,dx
  407d94:	sahf   
  407d95:	sldt   WORD PTR [ebp+0x38]
  407d99:	sti    
  407d9a:	jmp    FWORD PTR [edx+0x35000c9e]
  407da0:	sub    bl,bh
  407da2:	dec    DWORD PTR [edi]
  407da4:	sahf   
  407da5:	adc    DWORD PTR [eax],eax
  407da7:	sub    DWORD PTR [eax],eax
  407da9:	sbb    bl,bh
  407dab:	dec    DWORD PTR [ebx+0x39000c9e]
  407db1:	or     bl,bh
  407db3:	call   FWORD PTR [ecx-0x62]
  407db6:	adc    al,BYTE PTR [eax]
  407db8:	dec    ebp
  407db9:	clc    
  407dba:	cli    
  407dbb:	(bad)  
  407dbc:	std    
  407dbd:	sahf   
  407dbe:	adc    DWORD PTR [eax],eax
  407dc0:	jno    0x407dad
  407dc2:	cli    
  407dc3:	call   esi
  407dc5:	cdq    
  407dc6:	adc    eax,0xfa5b5900
  407dcb:	(bad)  
  407dcc:	jmp    FWORD PTR [edi+edi*8+0x13]
  407dd0:	add    BYTE PTR [eax+edi*2-0x16dffc1],bh
  407dd7:	push   ss
  407dd8:	add    ah,al
  407dda:	js     0x407e1b
  407ddc:	add    BYTE PTR [ebx+0x580011fe],ah
  407de2:	js     0x407e23
  407de4:	add    bl,ch
  407de6:	(bad)  
  407de7:	pop    ss
  407de8:	add    BYTE PTR [eax+edi*2+0x3f],dl
  407dec:	add    BYTE PTR [eax],cl
  407dee:	jmp    DWORD PTR [edx]
  407df0:	add    BYTE PTR [eax],bl
  407df2:	jp     0x407e33
  407df4:	add    BYTE PTR [edx+0x6],ah
  407df7:	and    eax,0x3f7a0000
  407dfc:	add    BYTE PTR [ecx-0x2],ch
  407dff:	sbb    al,BYTE PTR [eax]
  407e01:	or     al,0x7a
  407e03:	aas    
  407e04:	add    BYTE PTR [edi+0x200002fe],dh
  407e0a:	jp     0x407e4b
  407e0c:	add    BYTE PTR [eax],al
  407e0e:	fiadd  DWORD PTR ds:0x79680007
  407e14:	aas    
  407e15:	add    dl,ch
  407e17:	add    eax,0x79500007
  407e1c:	aas    
  407e1d:	add    dl,ch
  407e1f:	add    eax,0x7910001c
  407e24:	aas    
  407e25:	add    dh,dh
  407e27:	add    eax,0x78580007
  407e2c:	aas    
  407e2d:	add    BYTE PTR [esi],ch
  407e2f:	push   es
  407e30:	or     al,BYTE PTR [eax]
  407e32:	adc    al,0x79
  407e34:	aas    
  407e35:	add    bl,bl
  407e37:	add    eax,0x78d4004c
  407e3c:	aas    
  407e3d:	add    BYTE PTR [ebp-0x2],ah
  407e40:	and    DWORD PTR [eax],eax
  407e42:	int3   
  407e43:	jns    0x407e84
  407e45:	add    BYTE PTR [ebp-0x62d1fcce],bl
  407e4b:	xchg   ebx,eax
  407e4c:	mov    edi,0x3719d3f
  407e51:	add    al,0x9d
  407e53:	mov    ebx,0xb09d3fbe
  407e58:	add    dl,BYTE PTR [ebx]
  407e5a:	popf   
  407e5b:	(bad)  
  407e5c:	mov    esi,0x3eb9d3f
  407e61:	adc    al,0x9d
  407e63:	lahf   
  407e64:	mov    esi,0x3329d3f
  407e69:	push   ds
  407e6a:	popf   
  407e6b:	(bad)  
  407e6c:	mov    edi,0x39b9d3f
  407e71:	sbb    eax,0xbfdf9d00
  407e76:	aas    
  407e77:	popf   
  407e78:	retf   
  407e79:	add    ah,BYTE PTR [eax]
  407e7b:	popf   
  407e7c:	dec    ebx
  407e7d:	mov    edi,0x2dc9d3f
  407e82:	addr16 popf 
  407e84:	arpl   WORD PTR [eax+0x3769d3f],di
  407e8a:	add    eax,0x3fb7b79d
  407e8f:	popf   
  407e90:	adc    al,0x4
  407e92:	or     bl,BYTE PTR [ebp-0x62c04775]
  407e98:	and    DWORD PTR [ebx],eax
  407e9a:	cmp    DWORD PTR [ebp-0x62c047c1],ebx
  407ea0:	aaa    
  407ea1:	add    ebp,DWORD PTR ds:0x3fb84f9d
  407ea7:	popf   
  407ea8:	or     BYTE PTR [ebx],al
  407eaa:	pop    es
  407eab:	popf   
  407eac:	ja     0x407e66
  407eae:	aas    
  407eaf:	popf   
  407eb0:	or     al,BYTE PTR [ebx]
  407eb2:	or     al,0x9d
  407eb4:	push   edi
  407eb5:	mov    eax,0x3929d3f
  407eba:	or     ebx,DWORD PTR [ebp-0x62c047a5]
  407ec0:	add    bl,BYTE PTR [ecx+0x4]
  407ec3:	xchg   esi,eax
  407ec4:	add    ah,ch
  407ec6:	mov    esi,0x4430262
  407ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ecc:	add    dl,cl
  407ece:	mov    esi,0x4aa02d2
  407ed3:	xchg   esi,eax
  407ed4:	add    cl,ch
  407ed6:	mov    esi,0xdf02c200
  407edb:	add    ebp,DWORD PTR [ecx-0x4d4172fe]
  407ee1:	add    al,dh
  407ee3:	add    al,0xb9
  407ee5:	add    cl,BYTE PTR [ebp-0x42]
  407ee8:	mov    ds:0xa603f502,al
  407eed:	add    cl,BYTE PTR [ecx-0x42]
  407ef0:	xchg   edx,eax
  407ef1:	add    cl,BYTE PTR [esi+0x4]
  407ef4:	lods   eax,DWORD PTR ds:[esi]
  407ef5:	add    ch,BYTE PTR [ebp-0x42]
  407ef8:	add    BYTE PTR [edx],0xe1
  407efb:	add    esp,DWORD PTR [esi+0x72be6902]
  407f01:	add    bh,BYTE PTR [ecx-0x2afd69fd]
  407f07:	mov    ebp,0x3ee0262
  407f0c:	mov    ds:0xd2bdbd02,al
  407f11:	add    ch,BYTE PTR [ecx]
  407f13:	add    al,0xaf
  407f15:	add    ah,BYTE PTR [ecx+0x2f02c2bd]
  407f1b:	add    al,0xc3
  407f1d:	add    bh,cl
  407f1f:	mov    ebp,0x38f02b2
  407f24:	cdq    
  407f25:	add    cl,cl
  407f27:	mov    ebp,0x3be02a2
  407f2c:	mov    al,0x2
  407f2e:	loope  0x407eed
  407f30:	xchg   edx,eax
  407f31:	add    dh,dl
  407f33:	add    ebx,DWORD PTR [eax-0x7d42fefe]
  407f39:	add    al,BYTE PTR [eax]
  407f3b:	fiadd  WORD PTR [eax]
  407f3d:	sahf   
  407f3e:	adc    DWORD PTR [eax],eax
  407f40:	add    eax,0x6fff7f0
  407f45:	mov    eax,ds:0xe1c1000b
  407f4a:	idiv   edi
  407f4c:	mov    ebx,DWORD PTR [esi+0x51910017]
  407f52:	idiv   edi
  407f54:	xchg   ebx,eax
  407f55:	sahf   
  407f56:	or     DWORD PTR [eax],eax
  407f58:	lea    eax,[ecx-0x9]
  407f5b:	jmp    DWORD PTR [ebx-0x62]
  407f5e:	add    eax,DWORD PTR [eax]
  407f60:	xor    DWORD PTR [ecx],0x9ee8fff7
  407f66:	add    al,BYTE PTR [eax]
  407f68:	jmp    0x6540820b
  407f6d:	sbb    edi,esi
  407f6f:	(bad)  
  407f70:	fistp  WORD PTR [esi-0x6117fffe]
  407f76:	add    al,BYTE PTR [eax]
  407f78:	std    
  407f79:	add    edi,esi
  407f7b:	(bad)  
  407f7c:	out    dx,al
  407f7d:	sahf   
  407f7e:	add    al,BYTE PTR [eax]
  407f80:	add    DWORD PTR [ecx-0x1642fffe],ebx
  407f86:	idiv   bh
  407f88:	cli    
  407f89:	sahf   
  407f8a:	add    al,BYTE PTR [eax]
  407f8c:	icebp  
  407f8d:	sahf   
  407f8e:	add    al,BYTE PTR [eax]
  407f90:	sbb    DWORD PTR [eax-0x9],edx
  407f93:	(bad)  
  407f94:	fcomp  DWORD PTR [esi-0x611efffe]
  407f9a:	add    al,BYTE PTR [eax]
  407f9c:	aad    0x39
  407f9e:	idiv   edi
  407fa0:	fild   WORD PTR [eax]
  407fa2:	sahf   
  407fa3:	add    al,BYTE PTR [eax]
  407fa5:	add    DWORD PTR [ecx+0x21e90002],esp
  407fab:	idiv   edi
  407fad:	jecxz  0x407f4d
  407faf:	add    al,BYTE PTR [eax]
  407fb1:	in     eax,0x9e
  407fb3:	add    al,BYTE PTR [eax]
  407fb5:	add    BYTE PTR [ebp-0x4b000004],dh
  407fbb:	add    al,BYTE PTR [eax]
  407fbd:	add    dh,al
  407fbf:	cld    
  407fc0:	(bad)  
  407fc1:	inc    esi
  407fc3:	add    al,BYTE PTR [eax]
  407fc5:	add    BYTE PTR [ebp-0x47fffffd],dh
  407fcb:	add    al,BYTE PTR [eax]
  407fcd:	add    BYTE PTR [esi+0x7a000001],al
  407fd3:	add    al,BYTE PTR [eax]
  407fd5:	add    ch,bl
  407fd7:	(bad)  
  407fd8:	(bad)  
  407fd9:	call   FWORD PTR [eax-0x3e]
  407fdc:	inc    eax
  407fdd:	add    BYTE PTR [esi+0x32fffffe],ch
  407fe3:	ret    0x40
  407fe6:	mov    edi,0x3cfffffe
  407feb:	ret    0x40
  407fee:	mov    al,0xfe
  407ff0:	(bad)  
  407ff1:	dec    DWORD PTR [eax+eax*8]
  407ff4:	inc    eax
  407ff5:	add    BYTE PTR [ecx-0x37000002],ah
  407ffb:	mov    edi,0x2320040
  408000:	add    BYTE PTR [eax],al
  408002:	push   esp
  408003:	test   BYTE PTR [eax+0x0],0x0
  408007:	inc    ebx
  408008:	add    al,BYTE PTR [eax]
  40800a:	add    BYTE PTR [eax],ah
  40800c:	test   BYTE PTR [eax+0x0],0x84
  408010:	(bad)  
  408011:	(bad)  
  408012:	call   FWORD PTR [edx+eax*8-0x18affc0]
  408019:	(bad)  
  40801a:	jmp    FWORD PTR [eax-0xb]
  40801d:	inc    eax
  40801e:	add    BYTE PTR [esi+0x48fffffe],al
  408024:	cmc    
  408025:	inc    eax
  408026:	add    BYTE PTR [edi-0x2],dh
  408029:	(bad)  
  40802a:	jmp    FWORD PTR [eax-0xb]
  40802d:	inc    eax
  40802e:	add    BYTE PTR [ebp-0x62fffc59],bl
  408034:	lods   al,BYTE PTR ds:[esi]
  408035:	ds inc ecx
  408037:	popf   
  408038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408039:	add    eax,DWORD PTR [eax]
  40803b:	popf   
  40803c:	retf   0x413e
  40803f:	popf   
  408040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408041:	add    eax,DWORD PTR [eax]
  408043:	popf   
  408044:	sar    BYTE PTR [esi],0x41
  408047:	popf   
  408048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408049:	add    al,BYTE PTR [eax]
  40804b:	popf   
  40804c:	sub    DWORD PTR [eax+0x41],eax
  40804f:	popf   
  408050:	mov    ds:0x219d0002,eax
  408055:	inc    eax
  408056:	inc    ecx
  408057:	popf   
  408058:	mov    dl,0x2
  40805a:	add    BYTE PTR [ebp-0x62bebfe0],bl
  408060:	mov    eax,ds:0xb9d0002
  408065:	inc    ecx
  408066:	inc    ecx
  408067:	popf   
  408068:	mov    al,0x2
  40806a:	add    BYTE PTR [eax],al
  40806c:	popf   
  40806d:	sbb    eax,DWORD PTR [ecx+0x41]
  408070:	popf   
  408071:	lahf   
  408072:	add    al,BYTE PTR [eax]
  408074:	popf   
  408075:	pop    es
  408076:	inc    ecx
  408077:	inc    ecx
  408078:	popf   
  408079:	scas   al,BYTE PTR es:[edi]
  40807a:	add    al,BYTE PTR [eax]
  40807c:	popf   
  40807d:	mov    bl,0x3f
  40807f:	inc    ecx
  408080:	popf   
  408081:	popf   
  408082:	add    al,BYTE PTR [eax]
  408084:	popf   
  408085:	jmp    0x4080d2
  408087:	inc    ecx
  408088:	popf   
  408089:	lods   al,BYTE PTR ds:[esi]
  40808a:	add    al,BYTE PTR [eax]
  40808c:	popf   
  40808d:	and    DWORD PTR [ebx+0x41],ecx
  408090:	popf   
  408091:	mov    ebx,0xa99d0002
  408096:	dec    edx
  408097:	inc    ecx
  408098:	popf   
  408099:	sub    eax,DWORD PTR [ebx]
  40809b:	add    DWORD PTR [ebx+ebp*1+0x2b9d0003],ebx
  4080a2:	add    eax,DWORD PTR [eax]
  4080a4:	popf   
  4080a5:	sub    al,BYTE PTR [edx]
  4080a7:	add    BYTE PTR [ebp-0x62fc14fe],bl
  4080ad:	add    cl,cl
  4080af:	leave  
  4080b0:	fidiv  DWORD PTR [esp+eiz*4]
  4080b3:	add    ebx,DWORD PTR [ebp-0x62fc17fe]
  4080b9:	add    ch,bh
  4080bb:	add    ebx,DWORD PTR [ebp-0x455146fe]
  4080c1:	xor    al,0xec
  4080c3:	add    ebx,DWORD PTR [ebp-0x555146fe]
  4080c9:	xor    al,0xe9
  4080cb:	add    al,0x9f
  4080cd:	add    ebp,esp
  4080cf:	add    BYTE PTR [eax],al
  4080d1:	mov    ds:0xa70ce0fb,eax
  4080d6:	pop    es
  4080d7:	fisttp QWORD PTR [eax]
  4080d9:	fwait
  4080da:	add    ebx,ecx
  4080dc:	adc    al,0xaf
  4080de:	pmullw mm2,QWORD PTR [eax]
  4080e1:	xchg   ebx,eax
  4080e2:	or     edx,ecx
  4080e4:	sbb    al,0x97
  4080e6:	pop    ss
  4080e7:	int    0x18
  4080e9:	mov    edx,DWORD PTR [ebx]
  4080eb:	leave  
  4080ec:	in     al,0xbc
  4080ee:	ffreep st(4)
  4080f0:	loopne 0x408072
  4080f2:	fcmovnb st,st(0)
  4080f4:	in     al,dx
  4080f5:	test   bh,ah
  4080f7:	mov    esp,0xb8e378e8
  4080fc:	hlt    
  4080fd:	mov    edi,gs
  4080ff:	mov    ah,0xf0
  408101:	jo     0x4080ee
  408103:	mov    al,0xfc
  408105:	je     0x4080fe
  408107:	lods   al,BYTE PTR ds:[esi]
  408108:	clc    
  408109:	push   0xbca4a8f3
  40810e:	lahf   
  40810f:	les    esp,FWORD PTR [eax-0x533f6480]
  408115:	test   BYTE PTR [edi-0x5c875744],ah
  40811b:	mov    eax,0xb4af8cb4
  408120:	mov    al,0x70
  408122:	stos   DWORD PTR es:[edi],eax
  408123:	push   DWORD PTR [eax-0x72a545cf]
  408129:	vdivpd ymm1,ymm5,YMMWORD PTR [ecx-0x7a9d5dc7]
  408131:	std    
  408132:	popf   
  408133:	add    WORD PTR [eax],0xaa01
  408138:	push   0x7d
  40813a:	cmc    
  40813b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40813c:	outs   dx,BYTE PTR ds:[esi]
  40813d:	jns    0x408148
  40813f:	mov    dl,0x72
  408141:	jne    0x408130
  408143:	lods   eax,DWORD PTR ds:[esi]
  408144:	jbe    0x4081b7
  408146:	icebp  
  408147:	mov    ecx,0xb5e56d7a
  40814c:	jle    0x4081b7
  40814e:	sbb    DWORD PTR [ecx+0x7c1d6583],eax
  408154:	xchg   DWORD PTR [ecx+0x21],esp
  408157:	mov    BYTE PTR [ebx-0x707beaa3],cl
  40815d:	pop    ecx
  40815e:	sub    DWORD PTR [eax-0x73f2aa6d],edx
  408164:	xchg   edi,eax
  408165:	push   ecx
  408166:	adc    DWORD PTR [eax-0x6bfab265],ebx
  40816c:	lahf   
  40816d:	dec    ecx
  40816e:	stc    
  40816f:	pusha  
  408170:	mov    ds:0xa75cbd45,eax
  408175:	inc    ecx
  408176:	shr    DWORD PTR [eax-0x55],0x3d
  40817a:	mov    ch,0x64
  40817c:	scas   eax,DWORD PTR es:[edi]
  40817d:	cmp    ecx,ecx
  40817f:	jo     0x408134
  408181:	xor    eax,0x31b76cad
  408186:	mov    cl,0x78
  408188:	mov    ebx,0xbf74a52d
  40818d:	sub    ecx,ebx
  40818f:	inc    eax
  408190:	ret    
  408191:	and    eax,0x21c73c5d
  408196:	popa   
  408197:	dec    eax
  408198:	retf   
  408199:	sbb    eax,0xcf445500
  40819e:	add    BYTE PTR [esi+ecx*8-0x2d6f2c2f],ah
  4081a5:	aad    0xd7
  4081a7:	mov    esi,ss
  4081a9:	(bad)  
  4081ab:	cwde   
  4081ac:	fcmovu st,st(5)
  4081ae:	fist   WORD PTR [esi+ebx*8-0x1d5f1c1f]
  4081b5:	in     eax,0xe7
  4081b7:	pushf  
  4081b8:	out    0xe9,al
  4081ba:	jmp    0x408184
  4081bc:	(bad)  
  4081be:	out    dx,eax
  4081bf:	(bad)  
  4081c0:	out    dx,al
  4081c1:	icebp  
  4081c2:	repz mov al,0xe2
  4081c5:	cmc    
  4081c6:	imul   DWORD PTR [esi+esi*8-0x15470407]
  4081cd:	std    
  4081ce:	push   DWORD PTR [edi+edi*8+0x31800301]
  4081d5:	add    eax,0x9fd7c07
  4081da:	or     ebp,DWORD PTR [eax+0x9]
  4081dd:	push   cs
  4081de:	pcmpgtb mm2,QWORD PTR ds:0x1501312
  4081e5:	push   ss
  4081e6:	pop    ss
  4081e7:	dec    esp
  4081e8:	or     eax,0x19581b1a
  4081ed:	push   ds
  4081ee:	pop    ds
  4081ef:	push   esp
  4081f0:	and    eax,0x51602321
  4081f5:	and    eax,0x291d5c27
  4081fa:	sub    ecx,DWORD PTR [eax]
  4081fc:	sub    DWORD PTR ds:0x3504002f,ebp
  408202:	xor    DWORD PTR [ebx],esi
  408204:	lock and BYTE PTR ds:0x392cec37,dh
  40820b:	cmp    edi,eax
  40820d:	cmp    BYTE PTR ds:0x6164f43f,bh
  408213:	arpl   ax,sp
  408215:	nop
  408216:	gs addr16 popf 
  408219:	inc    ebx
  40821a:	stos   BYTE PTR es:[edi],al
  40821b:	imul   esi,DWORD PTR [esi+0x6f],0x6b726da6
  408222:	mov    dl,0x71
  408224:	outs   dx,BYTE PTR ds:[esi]
  408225:	ja     0x4081d5
  408227:	jne    0x408293
  408229:	jae    0x4081e5
  40822b:	jns    0x408273
  40822d:	jg     0x408205
  40822f:	pop    ebp
  408230:	inc    edx
  408231:	jnp    0x4081f5
  408233:	inc    ecx
  408234:	pop    esi
  408235:	addr16 mov esi,0xca635a45
  40823b:	dec    ecx
  40823c:	push   esi
  40823d:	pop    esi
  40823f:	dec    ebp
  408240:	push   edx
  408241:	mov    edx,edx
  408243:	push   ecx
  408244:	dec    esi
  408245:	xchg   edi,eax
  408246:	into   
  408247:	push   ebp
  408248:	dec    edx
  408249:	xchg   ebx,eax
  40824a:	ficomp DWORD PTR [ecx+0x26]
  40824d:	lahf   
  40824e:	mov    ch,0x7d
  408250:	and    bl,BYTE PTR [ebx-0x58e17d7f]
  408256:	jge    0x4081de
  408258:	sbb    ah,BYTE PTR [ebx-0x30e97577]
  40825e:	test   DWORD PTR [esi-0x6d6e34ee],ecx
  408264:	add    BYTE PTR [esi],cl
  408266:	xlat   BYTE PTR ds:[ebx]
  408267:	lea    edx,[esi-0x65662cf6]
  40826d:	push   es
  40826e:	mov    edi,0xbb029e95
  408273:	popa   
  408274:	mov    ds:0xa65dc6fe,al
  408279:	cli    
  40827a:	ret    0xaa69
  40827d:	imul   dh
  40827f:	gs scas al,BYTE PTR es:[edi]
  408281:	repnz jmp 0xb66d:0xf6eeb271
  408289:	jmp    0x75de:0xe6ba79f2
  408290:	mov    esi,0x422901e2
  408295:	fild   WORD PTR [ebp+eiz*1+0x3e]
  408299:	fisttp DWORD PTR [eax+0x21]
  40829c:	dec    edx
  40829d:	xlat   BYTE PTR ds:[ebx]
  40829e:	cmp    al,0x1d
  4082a0:	inc    esi
  4082a1:	rol    DWORD PTR [eax+0x19],cl
  4082a4:	push   edx
  4082a5:	iret   
  4082a6:	push   esp
  4082a7:	adc    eax,0x1158cb4e
  4082ac:	pop    edx
  4082ad:	(bad)  
  4082ae:	dec    esp
  4082af:	or     eax,0x950c356
  4082b4:	and    bh,BYTE PTR [edi-0x44e1fadc]
  4082ba:	sub    BYTE PTR [ecx],al
  4082bc:	sub    dh,BYTE PTR [edi-0x4cda02e4]
  4082c2:	and    cl,bh
  4082c4:	xor    DWORD PTR [edi+0x2df534],ebp
  4082ca:	stos   DWORD PTR es:[edi],eax
  4082cb:	cmp    cl,dh
  4082cd:	cmp    DWORD PTR [edi-0x5cca12d4],esp
  4082d3:	xor    cl,ch
  4082d5:	icebp  
  4082d6:	call   0xe902:0x9d03e830
  4082dd:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4082e3:	add    ch,cl
  4082e5:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4082eb:	add    ch,cl
  4082ed:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4082f3:	add    ch,cl
  4082f5:	add    ebx,DWORD PTR [ebp+0x5203e902]
  4082fb:	add    al,0x17
  4082fd:	add    al,0x9d
  4082ff:	add    cl,BYTE PTR [edi]
  408301:	add    al,0x9d
  408303:	add    ch,cl
  408305:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  40830b:	add    al,BYTE PTR [eax]
  40830d:	jmp    0xe94085b0
  408312:	sahf   
  408313:	add    al,BYTE PTR [eax]
  408315:	jmp    0xe94085b8
  40831a:	sahf   
  40831b:	das    
  40831c:	add    ebp,ecx
  40831e:	sahf   
  40831f:	add    al,BYTE PTR [eax]
  408321:	jmp    0xe94085c4
  408326:	sahf   
  408327:	add    al,BYTE PTR [eax]
  408329:	jmp    0xe94085cc
  40832e:	add    BYTE PTR [esi-0x6116fffe],bl
  408334:	add    al,BYTE PTR [eax]
  408336:	jmp    0xe94085d9
  40833b:	sahf   
  40833c:	add    al,BYTE PTR [eax]
  40833e:	pop    ss
  40833f:	mov    gs,WORD PTR [edi]
  408341:	pop    es
  408342:	jmp    0xe94085e5
  408347:	sahf   
  408348:	add    al,BYTE PTR [eax]
  40834a:	jmp    0xe94085ed
  40834f:	sahf   
  408350:	add    al,BYTE PTR [eax]
  408352:	jmp    0xe94085f5
  408357:	sahf   
  408358:	add    al,BYTE PTR [eax]
  40835a:	jmp    0xe94085fd
  40835f:	sahf   
  408360:	add    al,BYTE PTR [eax]
  408362:	iret   
  408363:	iret   
  408364:	das    
  408365:	pop    es
  408366:	jmp    0xe9408609
  40836b:	sahf   
  40836c:	add    al,BYTE PTR [eax]
  40836e:	jmp    0xe9408611
  408373:	sahf   
  408374:	add    al,BYTE PTR [eax]
  408376:	jmp    0xe9408619
  40837b:	sahf   
  40837c:	das    
  40837d:	add    edx,DWORD PTR [edi-0x7078d071]
  408383:	(bad)  
  408384:	das    
  408385:	pop    es
  408386:	add    BYTE PTR [ebx+eax*1+0x0],al
  40838a:	add    BYTE PTR [ebx+eax*1+0x0],al
  40838e:	add    BYTE PTR [ebx+eax*1],dh
  408391:	add    BYTE PTR [eax],al
  408393:	add    BYTE PTR [ebx+eax*1],dh
  408396:	add    BYTE PTR [eax],al
  408398:	add    al,0x3
  40839a:	add    BYTE PTR [eax],al
  40839c:	jb     0x408392
  40839e:	(bad)  
  40839f:	push   DWORD PTR [ebx-0xc]
  4083a2:	(bad)  
  4083a3:	call   DWORD PTR [ebx-0xc]
  4083a6:	(bad)  
  4083a7:	jg     0x4083ad
  4083a9:	add    eax,DWORD PTR [eax]
  4083ab:	add    BYTE PTR [ebx+eax*1],al
  4083ae:	add    BYTE PTR [eax],al
  4083b0:	hlt    
  4083b1:	add    al,BYTE PTR [eax]
  4083b3:	add    ah,dh
  4083b5:	add    al,BYTE PTR [eax]
  4083b7:	add    ah,al
  4083b9:	add    al,BYTE PTR [eax]
  4083bb:	add    BYTE PTR [ebx-0x4c00010c],dh
  4083c1:	hlt    
  4083c2:	(bad)  
  4083c3:	call   DWORD PTR [ebx-0x3b80010c]
  4083c9:	add    al,BYTE PTR [eax]
  4083cb:	add    ah,al
  4083cd:	add    al,BYTE PTR [eax]
  4083cf:	add    BYTE PTR [edx+eax*1+0x2b40000],dh
  4083d6:	add    BYTE PTR [eax],al
  4083d8:	test   BYTE PTR [edx],al
  4083da:	add    BYTE PTR [eax],al
  4083dc:	jb     0x4083d2
  4083de:	(bad)  
  4083df:	sti    
  4083e0:	jne    0x4083e4
  4083e2:	add    al,bh
  4083e4:	jne    0x4083e8
  4083e6:	add    BYTE PTR [eax-0x7c],bh
  4083e9:	add    al,BYTE PTR [eax]
  4083eb:	add    BYTE PTR [edx+eax*1+0x2740000],al
  4083f2:	add    BYTE PTR [eax],al
  4083f4:	je     0x4083f8
  4083f6:	add    BYTE PTR [eax],al
  4083f8:	add    BYTE PTR [ebx],al
  4083fa:	hlt    
  4083fb:	(bad)  
  4083fc:	inc    DWORD PTR [edx+eax*1+0x0]
  408400:	add    BYTE PTR [ebp-0x62fffce5],bl
  408406:	sbb    eax,DWORD PTR [ebx]
  408408:	add    BYTE PTR ds:0x9d00031c,bl
  40840e:	sbb    eax,DWORD PTR [ebx]
  408410:	add    BYTE PTR [ebp-0x62fffce5],bl
  408416:	sbb    eax,DWORD PTR [ebx]
  408418:	add    BYTE PTR [ebp-0x62fffc65],bl
  40841e:	sbb    eax,DWORD PTR [ebx]
  408420:	add    BYTE PTR [ebp-0x62fefde5],bl
  408426:	sbb    al,BYTE PTR [edx]
  408428:	add    BYTE PTR [ebp-0x62fffce5],bl
  40842e:	sbb    eax,DWORD PTR [ebx]
  408430:	add    BYTE PTR [ebp-0x62fffce5],bl
  408436:	sbb    eax,DWORD PTR [ebx]
  408438:	add    BYTE PTR [ebp-0x62fffce6],bl
  40843e:	fwait
  40843f:	add    eax,DWORD PTR [eax]
  408441:	popf   
  408442:	fwait
  408443:	add    DWORD PTR [eax-0x7ffce3e3],0xffffff9d
  40844a:	daa    
  40844b:	nop    DWORD PTR [ecx-0x76e3f0b1]
  408452:	push   edi
  408453:	ltr    WORD PTR [ebp+0x1d00031b]
  40845a:	sbb    ecx,DWORD PTR ds:0x1b7001a
  408460:	push   cs
  408461:	sbb    ch,BYTE PTR [edi-0x50edead7]
  408467:	sub    DWORD PTR ds:0x15498f12,edx
  40846d:	adc    cl,BYTE PTR [edi-0x70edeab7]
  408473:	dec    ecx
  408474:	adc    eax,0x29b1d12
  408479:	sub    BYTE PTR [ebp-0x48f216fe],0x8
  408480:	add    ecx,DWORD PTR [esi]
  408482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408483:	adc    bl,bh
  408485:	adc    eax,0x15fb10af
  40848a:	(bad)  
  40848b:	adc    bl,bl
  40848d:	adc    eax,0x15db108f
  408492:	(bad)  
  408493:	adc    bl,bl
  408495:	adc    eax,0x369828f
  40849a:	popf   
  40849b:	add    ch,cl
  40849d:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084a3:	add    ch,cl
  4084a5:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084ab:	add    ch,cl
  4084ad:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084b3:	add    ch,cl
  4084b5:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084bb:	add    ch,cl
  4084bd:	add    ebx,DWORD PTR [ebp+0x3e902]
  4084c3:	popf   
  4084c4:	add    ch,cl
  4084c6:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084cc:	add    ch,cl
  4084ce:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084d4:	add    ch,cl
  4084d6:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084dc:	add    ch,cl
  4084de:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084e4:	add    ch,cl
  4084e6:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084ec:	add    ch,cl
  4084ee:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4084f4:	add    al,BYTE PTR [eax]
  4084f6:	jmp    0xe9408799
  4084fb:	sahf   
  4084fc:	add    al,BYTE PTR [eax]
  4084fe:	jmp    0xe94087a1
  408503:	sahf   
  408504:	add    al,BYTE PTR [eax]
  408506:	jmp    0xe94087a9
  40850b:	sahf   
  40850c:	add    al,BYTE PTR [eax]
  40850e:	jmp    0xe94087b1
  408513:	sahf   
  408514:	add    al,BYTE PTR [eax]
  408516:	jmp    0xe94087b9
  40851b:	sahf   
  40851c:	add    al,BYTE PTR [eax]
  40851e:	push   ebp
  40851f:	jg     0x4084b3
  408521:	jo     0x408576
  408523:	adc    eax,0x917093
  408528:	into   
  408529:	push   ecx
  40852a:	inc    ecx
  40852b:	inc    ebx
  40852c:	pop    ecx
  40852d:	xchg   edx,eax
  40852e:	jo     0x408582
  408530:	jns    0x4084c3
  408532:	jo     0x40855c
  408534:	jmp    0x19e90db
  408539:	sub    al,0x32
  40853b:	mov    eax,0x3dd929eb
  408540:	into   
  408541:	nop
  408542:	jnp    0x4085b9
  408544:	inc    edx
  408545:	mov    ch,0xc2
  408547:	xor    ebx,DWORD PTR [esp+ebp*1-0xf1b3b07]
  40854e:	inc    esi
  40854f:	into   
  408550:	inc    ecx
  408551:	iret   
  408552:	shr    BYTE PTR [ecx],0xd1
  408555:	inc    ebx
  408556:	mov    ebx,0x704931ed
  40855b:	mov    dh,al
  40855d:	push   0xca20877a
  408562:	cdq    
  408563:	pop    edx
  408564:	idiv   DWORD PTR [esi-0x44]
  408567:	mov    edx,0xf47ffe49
  40856c:	pop    ss
  40856d:	icebp  
  40856e:	ins    DWORD PTR es:[edi],dx
  40856f:	add    BYTE PTR [edx],bl
  408571:	and    al,0x53
  408573:	fucomip st,st(1)
  408575:	pusha  
  408576:	out    0xf0,eax
  408578:	fs ins BYTE PTR es:[edi],dx
  40857a:	(bad)  
  40857b:	jae    0x4085e0
  40857d:	cmp    BYTE PTR [ebx-0x44c335df],0xc3
  408584:	out    dx,al
  408585:	outs   dx,DWORD PTR ds:[esi]
  408586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408587:	sub    DWORD PTR [edx-0x64],ecx
  40858a:	lock mov dh,0x0
  40858d:	sbb    bl,ch
  40858f:	adc    DWORD PTR [edi+0x64a66656],ebx
  408595:	xor    eax,0x6d90522e
  40859a:	inc    edx
  40859b:	scas   al,BYTE PTR es:[edi]
  40859c:	add    BYTE PTR [edi+ebx*8-0x2496e6b5],0x76
  4085a4:	pop    esi
  4085a5:	pop    esp
  4085a6:	mov    bh,0x89
  4085a8:	aaa    
  4085a9:	cs push esi
  4085ab:	sbb    al,0x28
  4085ad:	dec    ecx
  4085ae:	pop    esi
  4085af:	(bad)  
  4085b0:	fwait
  4085b1:	rcl    BYTE PTR ds:0x2cb822d5,0xac
  4085b8:	popa   
  4085b9:	pop    ebp
  4085ba:	jmp    0xe42c:0x9aa2c3e2
  4085c1:	mov    WORD PTR [ebx],ss
  4085c3:	adc    dl,BYTE PTR [ecx]
  4085c5:	(bad)  
  4085c6:	adc    dh,BYTE PTR [ebx-0x418856df]
  4085cc:	in     eax,dx
  4085cd:	pop    ecx
  4085ce:	mov    ecx,0xa1d297b5
  4085d3:	inc    esp
  4085d4:	fwait
  4085d5:	dec    esi
  4085d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d7:	repz mov dl,0xc1
  4085da:	mov    dh,0xcc
  4085dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085dd:	xchg   ebp,eax
  4085de:	in     eax,0x27
  4085e0:	xchg   esp,eax
  4085e1:	cmp    eax,0x2855b904
  4085e6:	pop    es
  4085e7:	clc    
  4085e8:	bound  ebx,QWORD PTR [ebp-0x42f5b0a8]
  4085ee:	pop    edi
  4085ef:	in     al,dx
  4085f0:	fiadd  WORD PTR [eax]
  4085f2:	clc    
  4085f3:	pop    eax
  4085f4:	push   esp
  4085f5:	jns    0x408615
  4085f7:	push   ebx
  4085f8:	das    
  4085f9:	and    esi,DWORD PTR [ebp+0x79b9861e]
  4085ff:	sub    BYTE PTR [eax],al
  408601:	jg     0x408621
  408603:	mov    cl,0xdf
  408605:	mov    al,ds:0x32f6b57
  40860a:	xchg   esp,eax
  40860b:	xchg   edx,eax
  40860c:	out    dx,al
  40860d:	push   ds
  40860e:	fwait
  40860f:	xor    al,0x2f
  408611:	inc    ecx
  408612:	mov    ch,dl
  408614:	push   edx
  408615:	je     0x408681
  408617:	push   ss
  408618:	shr    DWORD PTR [ebp-0x6d],1
  40861b:	test   al,0x87
  40861d:	ja     0x408670
  40861f:	add    ebp,ecx
  408621:	fstp   st(6)
  408623:	pop    esp
  408624:	inc    edi
  408625:	push   ds
  408626:	sti    
  408627:	push   esp
  408628:	aaa    
  408629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862a:	mov    cl,0xfa
  40862c:	mov    cl,0x92
  40862e:	sbb    eax,0x1462450f
  408633:	int    0xd9
  408635:	ror    al,0x1b
  408638:	add    eax,DWORD PTR [eax]
  40863a:	popf   
  40863b:	test   DWORD PTR [eax+eax*1],eax
  40863e:	popf   
  40863f:	fwait
  408640:	add    DWORD PTR [eax],eax
  408642:	popf   
  408643:	add    eax,DWORD PTR ss:[eax]
  408646:	popf   
  408647:	aam    0x3
  408649:	add    BYTE PTR [ebp-0x45000305],bl
  40864f:	add    eax,DWORD PTR ds:[eax]
  408652:	popf   
  408653:	iret   
  408654:	add    eax,DWORD PTR [eax]
  408656:	add    BYTE PTR [ebp-0x5d000305],bl
  40865c:	add    eax,DWORD PTR ss:[eax]
  40865f:	popf   
  408660:	out    0x3,al
  408662:	add    BYTE PTR [ebp-0x62fe96fe],bl
  408668:	add    al,BYTE PTR [esp+eax*1]
  40866b:	popf   
  40866c:	add    al,BYTE PTR [edi+0x69029d03]
  408672:	add    DWORD PTR [ebp-0x62fbf3fe],ebx
  408678:	add    cl,BYTE PTR [esi+0x69029d03]
  40867e:	add    DWORD PTR [ebp-0x62fbfbfe],ebx
  408684:	add    bl,BYTE PTR [ecx+0x3]
  408687:	popf   
  408688:	add    cl,BYTE PTR [ecx-0x32d6bd04]
  40868e:	add    ebx,DWORD PTR [ebp-0x5158d9fe]
  408694:	sar    dl,cl
  408696:	pushf  
  408697:	mov    edi,0xaca804c3
  40869c:	lahf   
  40869d:	stc    
  40869e:	mov    al,0x1a
  4086a0:	sub    DWORD PTR ds:0xb49e7d9d,ebx
  4086a6:	call   0xc385:0xb1c7b47c
  4086ad:	call   0x9f4323b5
  4086b2:	mov    bh,0x5f
  4086b4:	mov    ah,0xcb
  4086b6:	mov    ds:0x9b949f6e,al
  4086bb:	add    BYTE PTR [edi+ebx*4-0x39],ch
  4086bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c0:	fisubr DWORD PTR [eax]
  4086c2:	lahf   
  4086c3:	mov    bh,0x5f
  4086c5:	mov    ah,0x8b
  4086c7:	mov    ds:0xb0b39f4e,al
  4086cc:	cmp    DWORD PTR [eax+edi*4-0x7c5ab44f],esi
  4086d3:	mov    al,0x2f
  4086d5:	add    dh,BYTE PTR [edi-0x7c50b249]
  4086db:	mov    cl,0x25
  4086dd:	mov    ebx,0x994086ff
  4086e2:	jno    0x408760
  4086e4:	aas    
  4086e5:	mov    ah,0x68
  4086e7:	push   esi
  4086e8:	daa    
  4086e9:	mov    eax,0x9f3a4e71
  4086ee:	jb     0x40874a
  4086f0:	mov    eax,ds:0x2d3b0002
  4086f5:	pushf  
  4086f6:	push   esp
  4086f7:	cmp    bh,BYTE PTR [edx+esi*4]
  4086fa:	push   ebx
  4086fb:	push   ecx
  4086fc:	sub    ebx,DWORD PTR [edi-0x4b8db2a0]
  408702:	pusha  
  408703:	cmp    ecx,DWORD PTR ds:0xfd35ff28
  408709:	mov    cl,0x4b
  40870b:	push   cs
  40870c:	clc    
  40870d:	mov    ds:0x28150543,eax
  408712:	call   FWORD PTR ds:0xc46b1fd
  408718:	in     eax,dx
  408719:	ret    
  40871a:	imul   ecx,DWORD PTR ds:0xd6da2e1,0x0
  408721:	xor    eax,0x9ebeff9f
  408726:	sahf   
  408727:	inc    edi
  408729:	sahf   
  40872a:	scas   al,BYTE PTR es:[edi]
  40872b:	(bad)  
  40872c:	call   0xba4089cf
  408731:	sahf   
  408732:	mov    bh,0xff
  408734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408735:	sahf   
  408736:	into   
  408737:	call   FWORD PTR [ebp-0x65003e62]
  40873d:	sahf   
  40873e:	mov    ebp,0xb59e94ff
  408743:	(bad)  
  408744:	mov    edi,0x9affa39e
  408749:	sahf   
  40874a:	xchg   edi,eax
  40874b:	call   FWORD PTR [ecx-0x71006862]
  408751:	sahf   
  408752:	scas   al,BYTE PTR es:[edi]
  408753:	jmp    FWORD PTR [esi+ebx*4+0xdffffcf]
  40875a:	add    al,0x6e
  40875c:	add    BYTE PTR [eax],bl
  40875e:	add    al,0x6f
  408760:	add    BYTE PTR [ebx],bl
  408762:	add    al,0x73
  408764:	add    BYTE PTR [ebx+eax*1+0x4e],ah
  408768:	add    al,cl
  40876a:	(bad)  
  40876b:	pop    ebx
  40876c:	add    BYTE PTR [edi-0x29ff8b02],dh
  408772:	(bad)  
  408773:	jno    0x408775
  408775:	fsin   
  408777:	ins    DWORD PTR es:[edi],dx
  408778:	add    BYTE PTR [eax-0x26ffaa02],ch
  40877e:	(bad)  
  40877f:	jno    0x408781
  408781:	xchg   edi,eax
  408782:	(bad)  
  408783:	push   0xfe930000
  408788:	ins    DWORD PTR es:[edi],dx
  408789:	add    al,ah
  40878b:	dec    BYTE PTR [edi+0x0]
  40878e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40878f:	(bad)  
  408790:	outs   dx,BYTE PTR ds:[esi]
  408791:	add    BYTE PTR [edx+0x300068fe],ch
  408797:	add    esp,DWORD PTR [ebp+0x0]
  40879a:	jo     0x40879a
  40879c:	push   0x74032700
  4087a1:	add    BYTE PTR [eax+0x170024fe],dh
  4087a7:	add    eax,DWORD PTR [eax]
  4087a9:	add    BYTE PTR [ebx+eax*1+0x72],al
  4087ad:	add    bl,dl
  4087af:	add    ah,BYTE PTR [esi+0x0]
  4087b2:	fld    QWORD PTR [edx]
  4087b4:	ins    BYTE PTR es:[edi],dx
  4087b5:	add    cl,bl
  4087b7:	add    cl,BYTE PTR [ecx+0x0]
  4087ba:	rol    DWORD PTR [edx],1
  4087bc:	popa   
  4087bd:	add    bl,bl
  4087bf:	add    ah,BYTE PTR [ebp+0x0]
  4087c2:	xor    al,0x3
  4087c4:	popa   
  4087c5:	add    BYTE PTR [eax],cl
  4087c7:	add    ebp,DWORD PTR [eax+0x0]
  4087ca:	mov    ah,0x2
  4087cc:	add    BYTE PTR [eax],al
  4087ce:	mov    ah,0x56
  4087d0:	xor    eax,0xaf1a9d19
  4087d5:	xor    eax,0xd0452c94
  4087da:	and    eax,0x25d04545
  4087df:	dec    ebx
  4087e0:	out    0x39,al
  4087e2:	aas    
  4087e3:	pop    ds
  4087e4:	add    eax,DWORD PTR [eax]
  4087e6:	popf   
  4087e7:	inc    esi
  4087e8:	std    
  4087e9:	inc    DWORD PTR [eax]
  4087eb:	mov    ah,dl
  4087ed:	jecxz  0x4087ee
  4087ef:	add    BYTE PTR [ebp+0x1f9d4071],0x6b
  4087f6:	inc    eax
  4087f7:	popf   
  4087f8:	adc    ebp,DWORD PTR [ebx+0x40]
  4087fb:	popf   
  4087fc:	mov    edi,0xc29d41c1
  408801:	push   0x40
  408803:	popf   
  408804:	cmp    ebp,DWORD PTR [ebx+0x40]
  408807:	popf   
  408808:	adc    al,0x6a
  40880a:	inc    eax
  40880b:	popf   
  40880c:	ffreep st(1)
  40880e:	inc    ecx
  40880f:	popf   
  408810:	loop   0x4087d3
  408812:	inc    ecx
  408813:	popf   
  408814:	mov    al,ds:0x1b9d406c
  408819:	add    eax,DWORD PTR [eax]
  40881b:	popf   
  40881c:	sbb    eax,DWORD PTR [ebx]
  40881e:	add    BYTE PTR [ebp-0x62bfcc3a],bl
  408824:	jp     0x408826
  408826:	dec    ebx
  408827:	and    BYTE PTR [ebx+0x14],ch
  40882a:	shr    BYTE PTR [edx+ebx*4+0x54dd006b],1
  408831:	dec    ebx
  408832:	pop    edx
  408833:	xor    DWORD PTR [ebx-0x600fba31],ebx
  408839:	adc    al,0xd0
  40883b:	mov    WORD PTR [eax+0x74bd0067],ss
  408841:	dec    ecx
  408842:	shl    DWORD PTR [edi-0x2f7b17f2],1
  408848:	popf   
  408849:	test   al,0xcf
  40884b:	lods   al,BYTE PTR ds:[esi]
  40884c:	add    ch,BYTE PTR [ebx-0x2a]
  40884f:	add    dl,al
  408851:	gs scas al,BYTE PTR es:[edi]
  408853:	dec    ebx
  408854:	push   edi
  408855:	outs   dx,BYTE PTR ds:[esi]
  408856:	mov    eax,0x673f5584
  40885b:	test   eax,0xd66b13da
  408860:	mov    ds:0xf74bae65,al
  408865:	outs   dx,BYTE PTR ds:[esi]
  408866:	sbb    al,0xe8
  408868:	sbb    DWORD PTR [edi],esp
  40886a:	addr16 test eax,0xd56b135a
  408870:	and    BYTE PTR [ebp+0x2e],0x4c
  408874:	xlat   BYTE PTR ds:[ebx]
  408875:	outs   dx,BYTE PTR ds:[esi]
  408876:	adc    BYTE PTR [ebp-0x4333e25f],0x4d
  40887d:	adc    esi,DWORD PTR [ebx-0x72]
  408880:	popf   
  408881:	inc    edx
  408882:	cs imul ebp,esp,0x31
  408886:	adc    DWORD PTR [ebp-0x4353e25f],0x6d
  40888d:	adc    esi,DWORD PTR [ebx-0x72]
  408890:	popf   
  408891:	inc    edx
  408892:	cs imul ecx,esp,0x31
  408896:	jecxz  0x40889b
  408898:	popf   
  408899:	add    dh,BYTE PTR [ecx+0x35]
  40889c:	fld    QWORD PTR [edx]
  40889e:	cmp    DWORD PTR [edi],esp
  4088a0:	fld    QWORD PTR [edx]
  4088a2:	mov    dl,0x29
  4088a4:	pop    ebp
  4088a5:	add    al,BYTE PTR [edx]
  4088a7:	add    al,0x78
  4088a9:	add    bh,bl
  4088ab:	add    edi,DWORD PTR [ebx+0x2]
  4088ae:	int3   
  4088af:	add    esi,DWORD PTR [ecx+0x2]
  4088b2:	sbb    al,BYTE PTR [eax+eax*1]
  4088b5:	scas   eax,DWORD PTR es:[edi]
  4088b6:	add    al,BYTE PTR [edi]
  4088b8:	add    al,0x79
  4088ba:	add    bh,BYTE PTR [ebp-0x16fd86fd]
  4088c0:	add    ebx,DWORD PTR [ebp+0x4e9ea602]
  4088c6:	mov    esp,0x9e2abfff
  4088cb:	dec    eax
  4088cc:	mov    edi,0x947193fc
  4088d1:	push   DWORD PTR [eax-0x3ceb7198]
  4088d7:	js     0x40887a
  4088d9:	call   DWORD PTR [esi-0x41f4829d]
  4088df:	ja     0x4088ca
  4088e1:	sahf   
  4088e2:	add    al,BYTE PTR [eax]
  4088e4:	call   0x9f2a:0x8045b03b
  4088eb:	dec    eax
  4088ec:	jg     0x40892a
  4088ee:	xchg   ebp,eax
  4088ef:	jno    0x408945
  4088f1:	cmp    BYTE PTR [eax-0x3decb198],dh
  4088f7:	js     0x40891a
  4088f9:	cmp    BYTE PTR [esi+0x243c3d63],dl
  4088ff:	call   FWORD PTR [ebx]
  408901:	and    eax,edx
  408903:	pop    ds
  408904:	stc    
  408905:	dec    esi
  408906:	icebp  
  408907:	sub    eax,0x9f14ef9
  40890c:	jmp    0x3b408baf
  408911:	add    eax,edx
  408913:	pop    ds
  408914:	jmp    0x7408bb7
  408919:	add    BYTE PTR [ecx-0x5ee70051],bl
  40891f:	mov    al,0xff
  408921:	mov    esp,0x4ffd49e
  408926:	mov    eax,ds:0x9904ff96
  40892b:	add    al,BYTE PTR [eax]
  40892d:	sbb    edi,ebp
  40892f:	les    ecx,FWORD PTR [esi-0x27]
  408932:	cmp    eax,0xceaa5396
  408937:	shr    BYTE PTR [esi-0x36],1
  40893a:	pop    ss
  40893b:	lahf   
  40893c:	jae    0x408927
  40893e:	sahf   
  40893f:	add    al,BYTE PTR [eax]
  408941:	add    BYTE PTR [edx+edx*2],al
  408944:	pop    esi
  408945:	inc    ebx
  408946:	call   0xc4a5fbd7
  40894b:	(bad)  
  40894c:	(bad)  
  40894d:	jmp    DWORD PTR [edx+edx*2]
  408950:	pop    esi
  408951:	push   eax
  408952:	sub    ecx,DWORD PTR [ebx+ebp*2+0x5e51f400]
  408959:	push   edx
  40895a:	and    DWORD PTR [edi+0x63],ebx
  40895d:	add    ah,ah
  40895f:	push   ecx
  408960:	pop    esi
  408961:	push   edi
  408962:	xchg   BYTE PTR es:[ebx+0x65],dh
  408966:	test   bh,bh
  408968:	(bad)  
  408969:	inc    DWORD PTR [edi+edi*8-0x8b0001]
  408970:	(bad)  
  408971:	push   DWORD PTR [edi+edi*8-0x1]
  408975:	inc    DWORD PTR [edi+edi*8+0x18940000]
  40897c:	das    
  40897d:	add    BYTE PTR [eax],al
  40897f:	data16 adc al,0x40
  408982:	add    BYTE PTR [ecx+0x1b],ah
  408985:	inc    eax
  408986:	add    BYTE PTR [esi],dh
  408988:	sbb    eax,DWORD PTR [eax+0x0]
  40898b:	inc    ecx
  40898c:	sbb    al,BYTE PTR [eax+0x0]
  40898f:	lock sbb al,BYTE PTR [eax+0x0]
  408993:	imul   edi,edi,0x45ffff
  408999:	add    al,0x0
  40899b:	pop    esi
  40899c:	dec    esp
  40899d:	sub    DWORD PTR [eax],eax
  40899f:	imul   edx,DWORD PTR fs:[edx+0x54],0x34
  4089a4:	(bad)  
  4089a5:	(bad)  
  4089a6:	inc    ebx
  4089a8:	inc    ecx
  4089a9:	push   ebx
  4089aa:	add    BYTE PTR [edx+edx*2+0x2e4b5053],bh
  4089b1:	sub    eax,0xfffef431
  4089b6:	inc    DWORD PTR [ebp+0x60]
  4089b9:	bound  esp,QWORD PTR [ebp-0x63]
  4089bc:	dec    ecx
  4089bd:	scas   eax,DWORD PTR es:[edi]
  4089be:	sub    al,0x59
  4089c0:	cmp    dl,BYTE PTR [ebp-0x61c5979a]
  4089c6:	fs xchg edi,eax
  4089c8:	stc    
  4089c9:	add    eax,DWORD PTR [eax]
  4089cb:	popf   
  4089cc:	pop    eax
  4089cd:	xchg   esi,eax
  4089ce:	ins    DWORD PTR es:[edi],dx
  4089cf:	cmp    edi,DWORD PTR [esi]
  4089d1:	mov    ds:0x958c3473,al
  4089d6:	cmp    DWORD PTR [ebp+0x58],edi
  4089d9:	xchg   edi,eax
  4089da:	outs   dx,BYTE PTR ds:[esi]
  4089db:	cs jbe 0x4089d6
  4089de:	or     DWORD PTR [ebp+0x6bb18e],ebx
  4089e4:	xor    BYTE PTR [ebp+edx*4-0x686ffed3],cl
  4089eb:	call   DWORD PTR [edx-0x38c5e97]
  4089f1:	adc    BYTE PTR [ebp-0x4e30f1ac],0x40
  4089f8:	add    al,bh
  4089fa:	xchg   ebp,eax
  4089fb:	jae    0x4089cb
  4089fd:	mov    edi,0xc8fb68b1
  408a02:	add    eax,DWORD PTR [eax]
  408a04:	popf   
  408a05:	lock mov esi,0x32b7d53
  408a0b:	add    BYTE PTR [ebp-0xead4b05],bl
  408a11:	or     eax,DWORD PTR [eax+eax*1]
  408a14:	popf   
  408a15:	neg    DWORD PTR [edx-0x120bc501]
  408a1b:	push   DWORD PTR [edx]
  408a1d:	add    al,0xef
  408a1f:	jmp    FWORD PTR [edx]
  408a21:	add    al,0xf0
  408a23:	jmp    DWORD PTR [edx]
  408a25:	hlt    
  408a26:	lock call FWORD PTR [edx]
  408a29:	hlt    
  408a2a:	icebp  
  408a2b:	call   DWORD PTR [edx]
  408a2d:	add    al,0xf3
  408a2f:	dec    DWORD PTR [edx]
  408a31:	or     BYTE PTR [ebx-0x22fd628b],bl
  408a37:	lahf   
  408a38:	cli    
  408a39:	and    ebp,edx
  408a3b:	mov    cl,0xf2
  408a3d:	and    ecx,eax
  408a3f:	mov    cl,0xea
  408a41:	and    ebx,ecx
  408a43:	mov    cl,0xe2
  408a45:	and    ebx,ebp
  408a47:	add    DWORD PTR [eax],eax
  408a49:	lahf   
  408a4a:	add    al,0xea
  408a4c:	add    DWORD PTR [edi-0x60fe14fc],ebx
  408a52:	add    al,0xe3
  408a54:	stc    
  408a55:	xchg   esp,eax
  408a56:	loop   0x408a4a
  408a58:	stc    
  408a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a5a:	or     al,0xf3
  408a5c:	stc    
  408a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a5e:	or     al,0x9a
  408a60:	mov    al,ds:0xaf98ab2c
  408a65:	mov    ds:0xfa19721,al
  408a6a:	xchg   ebx,eax
  408a6b:	rol    DWORD PTR [ebx],0x9d
  408a6e:	add    ch,BYTE PTR [ebx-0x7653f05e]
  408a74:	jecxz  0x4089f8
  408a76:	and    DWORD PTR [eax],esi
  408a78:	mov    cl,0xd3
  408a7a:	mov    cl,0x55
  408a7c:	out    dx,al
  408a7d:	scas   al,BYTE PTR es:[edi]
  408a7e:	mov    dl,0x5a
  408a80:	xchg   ebp,eax
  408a81:	jmp    DWORD PTR [edi+0x2162b159]
  408a87:	or     eax,DWORD PTR [eax+eax*4]
  408a8a:	add    bh,BYTE PTR [edx]
  408a8c:	add    al,0x7f
  408a8e:	add    ch,cl
  408a90:	add    ebx,DWORD PTR [ebp+0x78040b02]
  408a96:	add    bl,BYTE PTR [edx]
  408a98:	add    al,0x7f
  408a9a:	add    cl,cl
  408a9c:	add    edi,DWORD PTR [eax+0x2]
  408a9f:	sbb    al,BYTE PTR [ebx*4-0x464eebfe]
  408aa6:	xchg   esp,eax
  408aa7:	or     edx,DWORD PTR [esi-0x67fb0f70]
  408aad:	add    BYTE PTR [esi+0x4f2a0002],al
  408ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab4:	pusha  
  408ab5:	cmc    
  408ab6:	and    eax,esi
  408ab8:	ins    DWORD PTR es:[edi],dx
  408ab9:	fist   WORD PTR [edi]
  408abb:	xchg   ebx,eax
  408abc:	outs   dx,BYTE PTR ds:[esi]
  408abd:	iret   
  408abe:	or     esp,DWORD PTR [esi-0x53232293]
  408ac4:	outs   dx,BYTE PTR ds:[esi]
  408ac5:	retf   0x2105
  408ac8:	jmp    FWORD PTR [ebp-0x448c6bc5]
  408ace:	sub    DWORD PTR [edx-0x560738bc],ebx
  408ad4:	jno    0x408a94
  408ad6:	sub    BYTE PTR [esi-0x3cf5689c],ch
  408adc:	imul   ecx,DWORD PTR [esi-0x66005403],0xffffff9e
  408ae3:	stos   BYTE PTR es:[edi],al
  408ae4:	inc    DWORD PTR [ebx-0x6b005162]
  408aea:	sahf   
  408aeb:	sar    edi,cl
  408aed:	mov    edx,0x8cfff09e
  408af2:	sahf   
  408af3:	scas   al,BYTE PTR es:[edi]
  408af4:	(bad)  
  408af5:	jl     0x408a95
  408af7:	add    al,BYTE PTR [eax]
  408af9:	and    eax,DWORD PTR [ebp+0xf]
  408afc:	or     al,BYTE PTR [ebp+0x44]
  408aff:	lods   al,BYTE PTR ds:[esi]
  408b00:	pop    ds
  408b01:	or     esi,DWORD PTR [ebp+edx*4+0x21]
  408b05:	fcom   QWORD PTR [eax+0x40965a9]
  408b0b:	cwde   
  408b0c:	push   0x2200353a
  408b11:	or     al,0x0
  408b13:	xor    ah,dl
  408b15:	pop    ds
  408b16:	inc    esi
  408b17:	push   cs
  408b18:	xchg   esp,eax
  408b19:	outs   dx,BYTE PTR ds:[esi]
  408b1a:	leave  
  408b1b:	add    ah,BYTE PTR [eax]
  408b1d:	dec    DWORD PTR [ebx]
  408b1f:	cdq    
  408b20:	mov    eax,ds:0x2a11cff
  408b25:	add    BYTE PTR [ecx],ch
  408b27:	hlt    
  408b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b29:	add    BYTE PTR [bp+di+0x6e26],dh
  408b2e:	call   0x725:0x9f1
  408b34:	repz or DWORD PTR [ecx+ebx*4+0x52],esp
  408b39:	pop    ds
  408b3a:	das    
  408b3b:	dec    edx
  408b3c:	and    al,0x21
  408b3e:	and    eax,0xa0c25d7
  408b43:	hlt    
  408b44:	add    eax,DWORD PTR [eax]
  408b46:	add    bl,ah
  408b48:	add    esp,DWORD PTR [ebx+0x0]
  408b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4c:	push   es
  408b4d:	and    al,BYTE PTR [eax]
  408b4f:	cdq    
  408b50:	push   es
  408b51:	jae    0x408b53
  408b53:	xchg   esi,eax
  408b54:	push   es
  408b55:	add    BYTE PTR [eax],al
  408b57:	test   DWORD PTR [ebx],0x411006f
  408b5d:	push   ebx
  408b5e:	add    BYTE PTR [esp+eax*1],dl
  408b61:	add    BYTE PTR gs:[edi],dl
  408b64:	add    al,0x0
  408b66:	add    cl,al
  408b68:	or     eax,0x3840a0d
  408b6d:	add    BYTE PTR [eax],al
  408b6f:	push   esp
  408b70:	repnz or DWORD PTR ds:0x37e,ecx
  408b77:	add    BYTE PTR [ecx+0x7b],bl
  408b7a:	(bad)  
  408b7b:	push   DWORD PTR [edi-0x48ff9afa]
  408b81:	push   es
  408b82:	push   0x7406c900
  408b87:	add    al,bl
  408b89:	push   es
  408b8a:	outs   dx,DWORD PTR ds:[esi]
  408b8b:	add    BYTE PTR [ebx-0x4bff91fa],bl
  408b91:	push   es
  408b92:	jb     0x408b94
  408b94:	fld    QWORD PTR [esi]
  408b96:	jbe    0x408b98
  408b98:	fld    QWORD PTR [esi]
  408b9a:	ins    BYTE PTR es:[edi],dx
  408b9b:	add    BYTE PTR [ecx-0x66ff98fa],ch
  408ba1:	push   es
  408ba2:	add    BYTE PTR [eax],al
  408ba4:	popf   
  408ba5:	push   ss
  408ba6:	add    eax,DWORD PTR [eax]
  408ba8:	popf   
  408ba9:	mov    ds:0xb29d414a,eax
  408bae:	dec    ebx
  408baf:	inc    ecx
  408bb0:	popf   
  408bb1:	cld    
  408bb2:	add    edi,DWORD PTR [edx]
  408bb4:	popf   
  408bb5:	inc    ecx
  408bb6:	add    ecx,DWORD PTR [ebp-0x63]
  408bb9:	std    
  408bba:	add    edi,DWORD PTR [ebx]
  408bbc:	popf   
  408bbd:	in     al,0x3
  408bbf:	dec    esi
  408bc0:	popf   
  408bc1:	pop    ebx
  408bc2:	add    ecx,DWORD PTR [esi-0x63]
  408bc5:	pusha  
  408bc6:	add    ecx,DWORD PTR [esi-0x63]
  408bc9:	push   ecx
  408bca:	add    edi,DWORD PTR [ebx]
  408bcc:	popf   
  408bcd:	add    al,0x4
  408bcf:	cmp    ebx,DWORD PTR [ebp-0x62a8fc93]
  408bd5:	add    al,BYTE PTR [eax+eax*1]
  408bd8:	popf   
  408bd9:	xchg   ecx,eax
  408bda:	cmp    al,BYTE PTR [ecx+0x0]
  408bdd:	popf   
  408bde:	int    0x41
  408be0:	inc    ecx
  408be1:	popf   
  408be2:	mov    bl,0x41
  408be4:	inc    ecx
  408be5:	popf   
  408be6:	pop    esp
  408be7:	add    edi,DWORD PTR [ecx-0x63]
  408bea:	jl     0x408bef
  408bec:	dec    esp
  408bed:	popf   
  408bee:	jb     0x408bf3
  408bf0:	jae    0x408b8f
  408bf2:	xchg   edi,eax
  408bf3:	add    dl,BYTE PTR [esi-0x63]
  408bf6:	add    BYTE PTR [ebx],0x65
  408bf9:	popf   
  408bfa:	xchg   esp,eax
  408bfb:	add    dh,BYTE PTR [ebx]
  408bfd:	popf   
  408bfe:	stc    
  408bff:	add    eax,DWORD PTR [eax]
  408c01:	popf   
  408c02:	out    dx,al
  408c03:	add    eax,DWORD PTR [ebp+ebx*4-0x1e]
  408c07:	add    eax,DWORD PTR [ebx-0x63]
  408c0a:	fild   WORD PTR [ebx]
  408c0c:	imul   ebx,DWORD PTR [ebp-0x6291fc32],0x9d0003d7
  408c16:	call   0xc8ddf51e
  408c1b:	add    esp,DWORD PTR [ebp-0x63]
  408c1e:	add    bl,BYTE PTR [ebx]
  408c20:	add    al,0xc2
  408c22:	add    dh,BYTE PTR [esp+eax*1]
  408c25:	aam    0x2
  408c27:	ds add al,0xb3
  408c2a:	add    al,BYTE PTR ds:0xfb026304
  408c30:	add    edi,DWORD PTR [edx+eax*1+0xc]
  408c34:	add    al,0x80
  408c36:	add    ch,cl
  408c38:	add    ebx,DWORD PTR [ebp-0x75fbd5fe]
  408c3e:	add    dl,bh
  408c40:	add    eax,DWORD PTR [eax]
  408c42:	outs   dx,BYTE PTR ds:[esi]
  408c43:	add    cl,dh
  408c45:	add    edi,DWORD PTR [ecx+0x2]
  408c48:	int3   
  408c49:	add    ecx,DWORD PTR [edx+0x2]
  408c4c:	rol    BYTE PTR [ebx],0x4b
  408c4f:	add    cl,ch
  408c51:	add    eax,DWORD PTR [edx+0x2]
  408c54:	mov    dh,0x3
  408c56:	pop    esi
  408c57:	add    al,ch
  408c59:	add    edi,DWORD PTR [edx+eax*1]
  408c5c:	mov    edx,0xe9022e03
  408c61:	add    ebx,DWORD PTR [ebp+0x6e03ca02]
  408c67:	add    bl,bl
  408c69:	add    ebp,DWORD PTR [edx+0x2]
  408c6c:	xlat   BYTE PTR ds:[ebx]
  408c6d:	add    edx,ebp
  408c6f:	add    ch,cl
  408c71:	add    ebx,DWORD PTR [ebp+0x4039a02]
  408c77:	add    edi,DWORD PTR [edx+0x3]
  408c7a:	out    dx,al
  408c7b:	add    al,BYTE PTR [ecx+0x4d02fc03]
  408c81:	add    al,0x2
  408c83:	add    edx,DWORD PTR [esi+0x4]
  408c86:	popf   
  408c87:	add    ch,BYTE PTR [edi]
  408c89:	retf   
  408c8a:	retf   0x23cf
  408c8d:	add    al,0x9d
  408c8f:	add    al,al
  408c91:	and    dl,BYTE PTR [edx+0x2]
  408c94:	stos   BYTE PTR es:[edi],al
  408c95:	cmp    edx,DWORD PTR [esi+0x40]
  408c98:	add    BYTE PTR [esp+edx*1-0x615f39b3],ch
  408c9f:	add    al,BYTE PTR [eax]
  408ca1:	mov    ebx,edi
  408ca3:	xor    edx,esp
  408ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca6:	add    ah,dl
  408ca8:	inc    eax
  408ca9:	xlat   BYTE PTR ds:[ebx]
  408caa:	test   al,0x66
  408cac:	sbb    ch,bl
  408cae:	popf   
  408caf:	fcomp  DWORD PTR [ecx]
  408cb1:	fsub   DWORD PTR [ebx-0x6a25c338]
  408cb7:	mov    dl,0x38
  408cb9:	rcl    BYTE PTR [ecx-0x5d2eb6a3],0x5f
  408cc0:	cs add dl,dl
  408cc3:	inc    edx
  408cc4:	call   0xdb36:0xaf13de6e
  408ccb:	add    DWORD PTR [ebp-0x391f5701],edx
  408cd1:	inc    esp
  408cd2:	iret   
  408cd3:	xor    eax,0xfbb368a0
  408cd8:	xchg   esp,eax
  408cd9:	ins    DWORD PTR es:[edi],dx
  408cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cdb:	sub    edx,DWORD PTR [ebx+0x29ec07c]
  408ce1:	add    ch,al
  408ce3:	fdivr  QWORD PTR [edx-0x5b0663b3]
  408ce9:	inc    eax
  408cea:	(bad)  
  408ceb:	in     eax,dx
  408cec:	scas   al,BYTE PTR es:[edi]
  408ced:	jno    0x408c7e
  408cef:	sahf   
  408cf0:	add    al,BYTE PTR [eax]
  408cf2:	jmp    0xbc51918f
  408cf7:	jne    0x408cd1
  408cf9:	xor    al,0xc4
  408cfb:	jge    0x408ce8
  408cfd:	cmp    cl,ah
  408cff:	jge    0x408ceb
  408d01:	sub    dl,BYTE PTR [edi]
  408d03:	sub    cl,0x36
  408d06:	cmc    
  408d07:	sahf   
  408d08:	add    al,BYTE PTR [eax]
  408d0a:	clc    
  408d0b:	add    BYTE PTR [edi-0xb],ch
  408d0e:	add    edi,ebx
  408d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d11:	scas   eax,DWORD PTR es:[edi]
  408d12:	push   edx
  408d13:	add    BYTE PTR [edi+eax*1+0x340100],al
  408d1a:	add    BYTE PTR [eax],al
  408d1c:	loope  0x408ccc
  408d1e:	mov    eax,ds:0xb1a0b1b1
  408d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d24:	mov    dh,0x8c
  408d26:	mov    esp,0xbba8babd
  408d2b:	test   al,0xae
  408d2d:	mov    esi,0xa28589a2
  408d32:	mov    ch,0xa5
  408d34:	ins    DWORD PTR es:[edi],dx
  408d35:	mov    esp,0x9482b8ad
  408d3a:	mov    al,0xba
  408d3c:	pusha  
  408d3d:	mov    ss,WORD PTR [edi-0x6c7f76]
  408d43:	push   DWORD PTR [edi-0x54]
  408d46:	mov    ds:0xb3ab07b7,eax
  408d4b:	mov    ds:0xa8a38a60,al
  408d50:	sub    ah,BYTE PTR [ecx-0x56ad5f44]
  408d56:	(bad)  
  408d57:	inc    DWORD PTR [esi]
  408d59:	push   0x7ad86a6d
  408d5e:	outs   dx,BYTE PTR ds:[esi]
  408d5f:	add    BYTE PTR [edx-0x43cddad1],dh
  408d65:	or     DWORD PTR [ebx],esi
  408d67:	and    eax,0x2735ce
  408d6c:	fnstcw WORD PTR [ecx+0x54]
  408d6f:	add    BYTE PTR cs:[eax+0x3a],ch
  408d73:	push   ebp
  408d74:	sub    dl,BYTE PTR [esi+edi*1+0x59]
  408d78:	add    BYTE PTR [edi-0x5c323e35],dl
  408d7e:	mov    edi,0xc5a9f0cc
  408d83:	enter  0x2cd9,0xdd
  408d87:	(bad)  
  408d89:	je     0x408d8a
  408d8b:	(bad)  
  408d8c:	call   FWORD PTR [ebp-0x39936d22]
  408d92:	mov    dl,0x98
  408d94:	jne    0x408d88
  408d96:	fisub  WORD PTR [edx+esi*2-0x648c5263]
  408d9d:	adc    eax,0x188b79a5
  408da2:	mov    al,ds:0xc9eabc79
  408da7:	pop    edi
  408da8:	mov    ds:0x9158b1ea,al
  408dad:	push   es
  408dae:	(bad)  
  408daf:	lods   ax,WORD PTR ds:[esi]
  408db1:	inc    edx
  408db2:	mov    ecx,0xbc27e557
  408db7:	jl     0x408d3b
  408db9:	push   eax
  408dba:	scas   al,BYTE PTR es:[edi]
  408dbb:	mov    ds,WORD PTR [eax-0x63915bd1]
  408dc1:	daa    
  408dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc3:	jge    0x408d5f
  408dc5:	pop    ss
  408dc6:	sub    DWORD PTR [ebx],eax
  408dc8:	add    BYTE PTR [ebp+0x6463ae38],bl
  408dce:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408dd0:	je     0x408e10
  408dd2:	stc    
  408dd3:	cdq    
  408dd4:	arpl   WORD PTR [eax],ax
  408dd6:	push   ebp
  408dd7:	sub    DWORD PTR [ebx],eax
  408dd9:	add    BYTE PTR [ebp-0x14e9b66],bl
  408ddf:	jg     0x408e4f
  408de1:	mov    ch,0xc7
  408de3:	call   0xdfe:0x129dac50
  408dea:	mov    eax,ds:0x9542042a
  408def:	syscall 
  408df1:	add    BYTE PTR [ebp-0x4feefee0],bl
  408df7:	sub    esi,edx
  408df9:	push   cs
  408dfa:	in     al,0x36
  408dfc:	add    al,0x1f
  408dfe:	popf   
  408dff:	fsub   QWORD PTR ds:[edi]
  408e02:	lods   al,BYTE PTR ds:[esi]
  408e03:	push   ebx
  408e04:	shl    DWORD PTR [edi],1
  408e06:	in     eax,dx
  408e07:	add    bl,BYTE PTR ds:0x7402b0ec
  408e0d:	or     DWORD PTR ds:0x3189648c,0x75
  408e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e15:	(bad)  
  408e16:	cs mov ch,cl
  408e19:	add    ebx,DWORD PTR [ebp+0x15736a02]
  408e1f:	dec    ebp
  408e20:	outs   dx,DWORD PTR ds:[esi]
  408e21:	jp     0x408e44
  408e23:	add    esp,DWORD PTR [esi]
  408e25:	call   0x90ca:0x940da5c2
  408e2c:	sub    BYTE PTR [ebx+ebp*4-0x7a69fd6a],dh
  408e33:	mov    cs,WORD PTR [edx]
  408e35:	xchg   ebx,eax
  408e36:	je     0x408dea
  408e38:	shrd   DWORD PTR [eax],eax,cl
  408e3b:	and    BYTE PTR [esi-0x399361ff],0xf3
  408e42:	cwde   
  408e43:	jb     0x408ded
  408e45:	adc    al,bl
  408e47:	mov    dl,0xb4
  408e49:	stos   BYTE PTR es:[edi],al
  408e4a:	rol    DWORD PTR [edi-0x4a],0xba
  408e4e:	mov    ds:0x3becc76,al
  408e53:	popf   
  408e54:	add    al,BYTE PTR ds:0xcfa43ae3
  408e5a:	or     BYTE PTR [edi-0x1f],bh
  408e5d:	retf   0x3bab
  408e60:	xchg   edi,eax
  408e61:	jmp    0x96af:0xba9b88ea
  408e68:	rcr    esp,1
  408e6a:	mov    al,ds:0xf48eac2e
  408e6f:	pusha  
  408e70:	fisttp QWORD PTR [edx-0x1b0c0160]
  408e76:	add    dh,cl
  408e78:	mov    bh,0xa6
  408e7a:	mov    al,0xc2
  408e7c:	add    eax,0xb3e6b0f1
  408e81:	dec    edx
  408e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e84:	or     BYTE PTR [ecx-0x66],bl
  408e87:	sub    eax,0x55fd16dd
  408e8c:	mov    ebp,0x299175e
  408e91:	add    BYTE PTR [ecx],ch
  408e93:	push   0x61eb57cd
  408e98:	ret    0x1c44
  408e9b:	pusha  
  408e9c:	sbb    edi,edi
  408e9e:	test   DWORD PTR [eax],0xfd24d166
  408ea4:	sahf   
  408ea5:	add    al,BYTE PTR [eax]
  408ea7:	jmp    0x4a40914a
  408eac:	retf   
  408ead:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408eaf:	mov    dh,0x67
  408eb1:	test   BYTE PTR [esi-0x2789d785],al
  408eb7:	push   esi
  408eb8:	test   BYTE PTR [ebx-0x54],ch
  408ebb:	mov    ch,0xcd
  408ebd:	dec    ecx
  408ebe:	rcl    DWORD PTR [ebx+0x518b67b2],1
  408ec4:	js     0x408efb
  408ec6:	enter  0x2562,0x8d
  408eca:	lea    ecx,[edi+0x3cdd5f48]
  408ed0:	imul   edx,DWORD PTR [eax-0x49],0xf5674497
  408ed7:	jae    0x408f47
  408ed9:	pop    eax
  408eda:	mov    bl,0x8e
  408edc:	xor    eax,0x553ca769
  408ee1:	dec    ecx
  408ee2:	xchg   DWORD PTR [ebp+0x7dad6142],ecx
  408ee8:	push   esp
  408ee9:	pop    esi
  408eea:	mov    ds:0x95731644,eax
  408eef:	and    eax,0x3df75945
  408ef4:	rol    BYTE PTR [ebp-0x23],cl
  408ef7:	cmp    ah,ah
  408ef9:	jb     0x408eeb
  408efb:	add    BYTE PTR [edx-0x4c2b3a39],bh
  408f01:	xchg   edi,eax
  408f02:	test   BYTE PTR [ecx-0x5d616e00],al
  408f08:	lock push es
  408f0a:	fucomip st,st(0)
  408f0c:	xchg   esi,eax
  408f0d:	pop    es
  408f0e:	mov    ah,0xe3
  408f10:	popf   
  408f11:	loope  0x408eaa
  408f13:	sahf   
  408f14:	add    BYTE PTR [edi-0x1d],dh
  408f17:	in     eax,dx
  408f18:	out    0x5b,al
  408f1a:	out    dx,al
  408f1b:	test   DWORD PTR [ebp-0x1b081434],ecx
  408f21:	push   ebp
  408f22:	mov    ch,bh
  408f24:	ror    DWORD PTR [eax],0xd7
  408f27:	loopne 0x408eec
  408f29:	adc    ecx,eax
  408f2b:	(bad)  
  408f2c:	lds    esp,FWORD PTR [ecx-0x1a]
  408f2f:	(bad)  
  408f30:	aam    0x5c
  408f32:	(bad)  
  408f33:	fmul   st(3),st
  408f35:	add    al,0x4
  408f37:	add    BYTE PTR [eax],al
  408f39:	xchg   DWORD PTR [edx+0x7d6b969d],edx
  408f3f:	idiv   ch
  408f41:	sbb    al,0x9c
  408f43:	xchg   DWORD PTR [ebp+edx*2-0x49496807],edx
  408f4a:	mov    ds:0xa60ca2b4,al
  408f4f:	xchg   ebp,eax
  408f50:	mov    ch,0x1b
  408f52:	stos   BYTE PTR es:[edi],al
  408f53:	mov    esi,0xffff2ca8
  408f58:	(bad)  
  408f59:	(bad)  
  408f5a:	pop    edx
  408f5b:	push   esi
  408f5c:	pop    edi
  408f5d:	add    cl,BYTE PTR [esi+edi*1+0x34]
  408f61:	lds    edx,FWORD PTR [ecx+0x40]
  408f64:	pop    ebp
  408f65:	or     al,0x48
  408f67:	push   ebp
  408f68:	js     0x408f6a
  408f6a:	add    DWORD PTR [edi+0x5c],ebx
  408f6d:	arpl   WORD PTR [ebx],ax
  408f6f:	ja     0x408fec
  408f71:	pop    esi
  408f72:	pop    es
  408f73:	ins    DWORD PTR es:[edi],dx
  408f74:	data16 ja 0x408f14
  408f77:	xchg   DWORD PTR [ebx-0x16c46d01],edx
  408f7d:	sub    al,0xd2
  408f7f:	and    ecx,esi
  408f81:	and    bh,BYTE PTR [ecx-0x45dd21aa]
  408f87:	push   esi
  408f88:	or     DWORD PTR [ebx],ebp
  408f8a:	mov    esp,0xfc1fcf3d
  408f8f:	sub    DWORD PTR [ebx],eax
  408f91:	add    BYTE PTR [ebp+0x65d23466],bl
  408f97:	dec    eax
  408f98:	sub    al,0xdc
  408f9a:	jbe    0x409007
  408f9c:	aas    
  408f9d:	fcomp  QWORD PTR [ebp+0x53]
  408fa0:	adc    al,0xd4
  408fa2:	arpl   WORD PTR [esi+ecx*2-0x21],sp
  408fa6:	popf   
  408fa7:	cdq    
  408fa8:	test   BYTE PTR [edx+ebp*8-0x62fffcd8],ah
  408faf:	fidivr DWORD PTR [eax+ecx*2+0x4cb8d3c3]
  408fb6:	jbe    0x408f96
  408fb8:	scas   eax,DWORD PTR es:[edi]
  408fb9:	push   ebp
  408fba:	pop    esp
  408fbb:	iret   
  408fbc:	rcr    DWORD PTR [ebp+0x63],0xde
  408fc0:	les    eax,FWORD PTR [ebx+0x59]
  408fc3:	cli    
  408fc4:	mov    edx,0xa0167875
  408fc9:	ins    DWORD PTR es:[edi],dx
  408fca:	push   ebx
  408fcb:	fbld   TBYTE PTR [eax+ebp*2-0x43ab9100]
  408fd2:	push   esi
  408fd3:	ja     0x40903d
  408fd5:	mov    dh,0x5b
  408fd7:	jbe    0x409044
  408fd9:	(bad)  
  408fda:	pop    ebx
  408fdb:	pop    ebp
  408fdc:	inc    edx
  408fdd:	(bad)  
  408fde:	dec    edx
  408fe0:	out    dx,eax
  408fe1:	iret   
  408fe2:	and    al,0x8c
  408fe4:	shl    DWORD PTR ds:[ecx],1
  408fe7:	jge    0x408ffc
  408fe9:	stos   DWORD PTR es:[edi],eax
  408fea:	sub    al,0x86
  408fec:	adc    bh,BYTE PTR [eax-0x21fdc4a4]
  408ff2:	aam    0x7b
  408ff4:	ret    
  408ff5:	test   eax,0xc3cdcd8f
  408ffa:	into   
  408ffb:	in     eax,0x98
  408ffd:	rcr    bh,1
  408fff:	vpand  ymm0,ymm5,ymm3
  409003:	adc    BYTE PTR [esi],0xe9
  409006:	add    ebx,DWORD PTR [ebp-0x6d3223fe]
  40900c:	fmul   QWORD PTR [edi+0x5cfd95c9]
  409012:	add    dl,BYTE PTR [edi-0x5efc1671]
  409018:	mov    cl,0xf3
  40901a:	aam    0x8b
  40901c:	les    ebp,FWORD PTR ds:0xdda9b0fe
  409022:	cli    
  409023:	mov    esi,0xdcf0d7ee
  409028:	lock jmp 0xada9:0x1a8beff
  409030:	mov    ds:0x7900961c,eax
  409035:	fadd   st(6),st
  409037:	xchg   edx,eax
  409038:	mov    edi,0x859310e2
  40903d:	xchg   ecx,eax
  40903e:	rcr    DWORD PTR [ecx-0x6bf90f52],1
  409044:	leave  
  409045:	xchg   ebx,eax
  409046:	adc    DWORD PTR [ebp-0x37da6184],ebx
  40904c:	pop    edx
  40904d:	cmc    
  40904e:	pop    ds
  40904f:	into   
  409050:	cwde   
  409051:	std    
  409052:	stc    
  409053:	or     bl,BYTE PTR [eax+0x2]
  409056:	jmp    0xea432d5e
  40905b:	add    DWORD PTR [esp+eax*1-0x85f3c1e],esp
  409062:	in     eax,dx
  409063:	inc    edx
  409065:	adc    eax,0xa547a6b6
  40906a:	(bad)  
  40906b:	mov    edi,0xabffac0e
  409070:	add    bl,BYTE PTR [eax-0x66fc6999]
  409076:	pusha  
  409077:	nop
  409078:	xor    DWORD PTR [eax+ebx*2+0x23b92ece],ecx
  40907f:	mov    edi,0xc641a179
  409084:	jno    0x40907b
  409086:	pusha  
  409087:	rcl    DWORD PTR [ebx],0xa1
  40908a:	jno    0x409075
  40908c:	sahf   
  40908d:	add    al,BYTE PTR [eax]
  40908f:	jae    0x409099
  409091:	fwait
  409092:	jnp    0x4090ea
  409094:	or     al,0xa9
  409096:	dec    DWORD PTR [edi]
  409098:	add    BYTE PTR [edi-0xd],cl
  40909b:	or     eax,0xffbd50e7
  4090a0:	pushf  
  4090a1:	xlat   BYTE PTR ds:[ebx]
  4090a2:	add    BYTE PTR gs:[ecx-0x48],ah
  4090a6:	pop    esi
  4090a7:	mov    al,ds:0xea5fd587
  4090ac:	pop    ecx
  4090ae:	push   0x5db489ab
  4090b3:	loop   0x40911a
  4090b5:	mov    dh,0x15
  4090b7:	mov    dl,0x59
  4090b9:	ins    BYTE PTR es:[edi],dx
  4090ba:	push   esp
  4090bb:	cli    
  4090bc:	cdq    
  4090bd:	jg     0x4090da
  4090bf:	add    BYTE PTR [ecx],bh
  4090c1:	das    
  4090c2:	xchg   esi,eax
  4090c3:	js     0x4090c3
  4090c5:	sub    eax,0xd5f864e5
  4090ca:	cdq    
  4090cb:	not    BYTE PTR fs:[esi]
  4090ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090cf:	ins    BYTE PTR es:[edi],dx
  4090d0:	or     bh,ah
  4090d2:	fwait
  4090d3:	imul   edx,esi,0xd36ea234
  4090d9:	lds    esp,FWORD PTR [ebp-0x5e03fc88]
  4090df:	mov    dx,0xf1cd
  4090e3:	aas    
  4090e4:	add    BYTE PTR [eax+0x2e000000],bh
  4090ea:	popf   
  4090eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ec:	mov    ds:0xbfe99c19,eax
  4090f1:	pop    ds
  4090f2:	hlt    
  4090f3:	test   eax,0xe1b455a8
  4090f8:	scas   eax,DWORD PTR es:[edi]
  4090f9:	idiv   DWORD PTR [ecx-0x53ff4c42]
  4090ff:	mov    ch,0xb4
  409101:	mov    ch,0xe6
  409103:	stos   DWORD PTR es:[edi],eax
  409104:	mov    al,0xa2
  409106:	(bad)  
  409107:	scas   eax,DWORD PTR es:[edi]
  409108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409109:	mov    edx,0xc07f07
  40910e:	mov    eax,0x9ff5eeec
  409113:	jmp    0xe3c08ad0
  409118:	out    dx,eax
  409119:	cmc    
  40911a:	jae    0x409104
  40911c:	mov    al,0xf5
  40911e:	jae    0x409108
  409120:	in     eax,dx
  409121:	stc    
  409122:	pop    ebx
  409123:	fsub   st(4),st
  409125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409126:	xor    al,0x0
  409128:	add    BYTE PTR [eax],al
  40912a:	lea    eax,ds:0xfc424411
  409130:	or     eax,0x4c163c15
  409135:	add    DWORD PTR [edx],ebp
  409137:	adc    eax,0x580a1a05
  40913c:	(bad)  
  40913d:	call   edi
  40913f:	push   edx
  409140:	inc    eax
  409141:	push   edi
  409142:	cdq    
  409143:	inc    ecx
  409144:	dec    ebx
  409145:	inc    eax
  409146:	mov    ecx,0xaf415b53
  40914b:	push   eax
  40914c:	dec    esp
  40914d:	pop    ebx
  40914e:	popf   
  40914f:	inc    ecx
  409150:	push   eax
  409151:	pop    eax
  409152:	cdq    
  409153:	inc    ecx
  409154:	push   esp
  409155:	add    BYTE PTR [ecx],bl
  409157:	cdq    
  409158:	mov    ds,WORD PTR [ecx-0x717d77c9]
  40915e:	popf   
  40915f:	cwde   
  409160:	mov    WORD PTR [edx+0x779f1a00],ss
  409166:	sub    DWORD PTR [eax],0xffffff85
  409169:	jbe    0x40910a
  40916b:	sub    ch,BYTE PTR [edx]
  40916d:	add    eax,DWORD PTR [eax]
  40916f:	popf   
  409170:	mov    al,ds:0x7f1a9987
  409175:	jbe    0x40910c
  409177:	add    eax,0x34977b7d
  40917c:	sub    BYTE PTR [esi-0x62],0x18
  409180:	mov    ss,WORD PTR [ebx-0x75]
  409183:	adc    eax,0x9d0003a3
  409188:	xchg   DWORD PTR [eax-0x6699fc91],esp
  40918e:	jge    0x409180
  409190:	(bad)  
  409191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409192:	jnp    0x40917a
  409194:	mov    ds:0xb8e069bf,eax
  409199:	add    eax,DWORD PTR [eax]
  40919b:	popf   
  40919c:	cmp    esp,DWORD PTR [esp+esi*8]
  40919f:	aas    
  4091a0:	popa   
  4091a1:	and    ah,bh
  4091a3:	inc    ebp
  4091a4:	pop    ebp
  4091a5:	test   DWORD PTR es:[edi+0x58],0x2932fe14
  4091ad:	add    eax,DWORD PTR [eax]
  4091af:	popf   
  4091b0:	cmp    esi,ebp
  4091b2:	add    DWORD PTR [ecx-0x6cef0fdd],edx
  4091b8:	aaa    
  4091b9:	add    eax,0x20f9c03
  4091be:	add    BYTE PTR [ebp+0x159e899d],bl
  4091c4:	(bad)  
  4091c5:	jne    0x409161
  4091c7:	add    BYTE PTR [ecx],dl
  4091c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ca:	sub    DWORD PTR [ebp+ebx*1+0x1d987bb9],0x9d00029d
  4091d5:	dec    esp
  4091d6:	shl    DWORD PTR [esi+ebp*4],cl
  4091d9:	add    al,BYTE PTR [eax]
  4091db:	loopne 0x40925a
  4091dd:	retf   
  4091de:	push   ds
  4091df:	fsubr  QWORD PTR [ebx-0x3524fe1c]
  4091e5:	adc    bl,al
  4091e7:	lea    edi,[edi]
  4091e9:	lea    esp,[ebp-0x3a59b65f]
  4091ef:	lahf   
  4091f0:	inc    edi
  4091f1:	xchg   esi,eax
  4091f2:	popf   
  4091f3:	call   0x22f:0xa2b19c3b
  4091fa:	pop    es
  4091fb:	std    
  4091fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091fd:	in     al,dx
  4091fe:	fmul   DWORD PTR [eax]
  409200:	lahf   
  409201:	add    eax,0xf5a10ae1
  409206:	rol    BYTE PTR [ebx*4-0x62fc170e],1
  40920d:	add    ah,BYTE PTR [ecx+eax*8-0x4c7e3c35]
  409214:	fdiv   DWORD PTR [ecx+edx*4-0x174f2f39]
  40921b:	add    ebx,DWORD PTR [ebp-0x45689cfe]
  409221:	nop
  409222:	cmp    al,0x9e
  409224:	shl    BYTE PTR [ecx+0x2bfa440],0xa
  40922b:	loopne 0x40922d
  40922d:	ins    DWORD PTR es:[edi],dx
  40922e:	jmp    0xe4aa5f1e
  409233:	add    ah,bh
  409235:	outs   dx,DWORD PTR ds:[esi]
  409236:	out    0xe8,al
  409238:	add    ebx,DWORD PTR [ebp-0x10e86ffe]
  40923e:	adc    DWORD PTR [edi-0x79e1e9d7],ecx
  409244:	cmp    edx,DWORD PTR [edx]
  409246:	and    al,0x7f
  409248:	daa    
  409249:	or     ch,BYTE PTR [eax]
  40924b:	jmp    0xd8432f53
  409250:	inc    ah
  409252:	or     DWORD PTR [eax],eax
  409254:	fucomip st,st(5)
  409256:	add    al,0x13
  409258:	(bad)  
  409259:	(bad)  
  40925a:	in     eax,dx
  40925b:	pop    ss
  40925c:	push   es
  40925d:	mov    eax,ds:0xa34b0002
  409262:	sub    esi,edi
  409264:	dec    eax
  409265:	call   0xc:0x7142dc1c
  40926c:	push   edi
  40926d:	xchg   edi,eax
  40926e:	aaa    
  40926f:	in     eax,dx
  409270:	inc    esp
  409271:	jl     0x40928f
  409273:	ror    BYTE PTR [ebx-0x77],1
  409276:	das    
  409277:	call   0xe85417c4
  40927c:	adc    esi,DWORD PTR [edx+0x97d0002]
  409282:	jnp    0x409226
  409284:	jnp    0x4092a6
  409286:	jle    0x409211
  409288:	outs   dx,BYTE PTR ds:[esi]
  409289:	push   es
  40928a:	jno    0x40921c
  40928c:	pop    eax
  40928d:	clc    
  40928e:	popa   
  40928f:	xchg   esp,eax
  409290:	imul   eax,DWORD PTR [eax],0x6681801b
  409296:	mov    eax,ds:0xea580002
  40929b:	xchg   DWORD PTR [edi-0x7b7ce37a],ebp
  4092a1:	jnp    0x409265
  4092a3:	jne    0x409242
  4092a5:	jne    0x4092bb
  4092a7:	fs cwde 
  4092a9:	arpl   di,cx
  4092ab:	add    BYTE PTR [edx+0x21d72],0x96
  4092b2:	jne    0x4092f9
  4092b4:	jmp    0xc05f0053
  4092b9:	xchg   ecx,eax
  4092ba:	outs   dx,DWORD PTR ds:[esi]
  4092bb:	xor    cl,al
  4092bd:	lds    ebx,FWORD PTR [esi+0x3a080002]
  4092c3:	xchg   esi,eax
  4092c4:	pop    esi
  4092c5:	or     al,0x2a
  4092c7:	stos   DWORD PTR es:[edi],eax
  4092c8:	fs (bad) 
  4092ca:	cmp    BYTE PTR [ecx],dl
  4092cc:	inc    DWORD PTR [eax]
  4092ce:	in     eax,0x27
  4092d0:	xor    al,0x1f
  4092d2:	ss sbb eax,0x372c2a2b
  4092d8:	daa    
  4092d9:	and    al,0xd7
  4092db:	add    al,0x0
  4092dd:	add    BYTE PTR [eax],ch
  4092df:	lods   al,BYTE PTR ds:[esi]
  4092e0:	xchg   ebp,eax
  4092e1:	mov    edx,0xa3a1a92e
  4092e6:	sub    eax,DWORD PTR ds:0x8c50000
  4092ec:	and    ecx,DWORD PTR [esi]
  4092ee:	(bad)  
  4092ef:	push   es
  4092f0:	or     al,0x1d
  4092f2:	mov    ebp,0x1a04
  4092f7:	aad    0x69
  4092f9:	jl     0x409374
  4092fb:	rep outs dx,BYTE PTR ds:[esi]
  4092fd:	jnp    0x40934e
  4092ff:	sub    eax,0x2b717473
  409304:	data16 jae 0x409307
  409307:	mov    eax,0xb9c2bfd3
  40930c:	ret    0xc0
  40930f:	aam    0x9e
  409311:	add    BYTE PTR [eax+edi*8-0x24783067],0xd6
  409319:	mov    DWORD PTR [edi-0x76313a72],esp
  40931f:	add    BYTE PTR [eax+edx*8-0x4042292e],bh
  409326:	aam    0x13
  409328:	xchg   esp,eax
  409329:	(bad)  
  40932a:	cwde   
  40932b:	mov    ebp,0x4bffff8c
  409330:	or     eax,0x4440705
  409335:	add    BYTE PTR [eax],al
  409337:	sbb    DWORD PTR [ecx-0x404e5e4a],ebp
  40933d:	mov    esi,0xa1b33aa3
  409342:	mov    esi,0x404
  409347:	popf   
  409348:	daa    
  409349:	or     bh,BYTE PTR [edi-0x7d]
  40934c:	pop    es
  40934d:	push   es
  40934e:	add    BYTE PTR [ebp+0x4844bdd8],bl
  409354:	sbb    DWORD PTR [ebx],eax
  409356:	add    BYTE PTR [ebp+0x53bbef],bl
  40935c:	stos   DWORD PTR es:[edi],eax
  40935d:	sbb    DWORD PTR [ebx],eax
  40935f:	add    BYTE PTR [ebp-0x3911e84c],bl
  409365:	sbb    DWORD PTR [ebx],eax
  409367:	add    BYTE PTR [ebp+0x72220053],bl
  40936d:	pop    ds
  40936e:	in     al,dx
  40936f:	or     esp,DWORD PTR [edi-0x69ca23d5]
  409375:	cs out dx,eax
  409377:	adc    ecx,DWORD PTR [esi-0x60fdf5cc]
  40937d:	sbb    DWORD PTR [ebx],eax
  40937f:	add    BYTE PTR [ebp-0x28cc11ab],bl
  409385:	sbb    esi,ecx
  409387:	sbb    bl,BYTE PTR [ebp+0x5ccf23b0]
  40938d:	clc    
  40938e:	daa    
  40938f:	out    0x7f,eax
  409391:	push   cs
  409392:	sbb    al,0xfc
  409394:	inc    esi
  409395:	sbb    DWORD PTR [ebx],eax
  409397:	add    BYTE PTR [ebp-0x5fca1399],bl
  40939d:	cmp    eax,0xf68e1efe
  4093a2:	push   es
  4093a3:	or     al,0x98
  4093a5:	sbb    DWORD PTR [ebx],eax
  4093a7:	add    BYTE PTR [ebp+0x1d8d652e],bl
  4093ad:	push   0x6a
  4093af:	mov    al,ds:0x372ef
  4093b4:	popf   
  4093b5:	test   BYTE PTR [edi],bl
  4093b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093b8:	adc    ch,BYTE PTR [edx+edi*1+0x153936fd]
  4093bf:	out    0x0,al
  4093c1:	dec    edx
  4093c2:	add    bl,BYTE PTR [ebx+0x59]
  4093c5:	(bad)  
  4093c6:	pop    edx
  4093c7:	push   edx
  4093c8:	or     eax,0x85691034
  4093cd:	loopne 0x4093da
  4093cf:	mov    bl,BYTE PTR [eax]
  4093d1:	pop    es
  4093d2:	es xchg esi,eax
  4093d4:	sub    DWORD PTR [edi],esi
  4093d6:	popa   
  4093d7:	bound  edi,QWORD PTR [edi]
  4093d9:	xor    edx,DWORD PTR [esi-0x7d]
  4093dc:	sub    eax,0x2ba83bd6
  4093e1:	jecxz  0x409413
  4093e3:	jno    0x40945b
  4093e5:	sub    BYTE PTR [ebp+eax*4+0x3],al
  4093e9:	popf   
  4093ea:	add    ah,BYTE PTR [ebx-0x1f008910]
  4093f0:	or     BYTE PTR [ecx-0x583625f8],bl
  4093f6:	add    eax,0xc2460aef
  4093fb:	xchg   edx,eax
  4093fc:	add    BYTE PTR [edx],ch
  4093fe:	leave  
  4093ff:	xchg   esi,eax
  409400:	cli    
  409401:	mov    dl,0xf3
  409403:	add    eax,eax
  409405:	jmp    0x8acc7cbd
  40940a:	push   cs
  40940b:	sahf   
  40940c:	fwait
  40940d:	or     al,0x96
  40940f:	lea    esp,[edi-0x3b543f15]
  409415:	in     eax,dx
  409416:	pushf  
  409417:	lods   al,BYTE PTR ds:[esi]
  409418:	rcl    dl,0xbc
  40941b:	lods   eax,DWORD PTR ds:[esi]
  40941c:	leave  
  40941d:	bound  ecx,QWORD PTR [esi]
  40941f:	lds    ecx,FWORD PTR [edx]
  409421:	mov    eax,ds:0x1fcfb
  409426:	stos   BYTE PTR es:[edi],al
  409427:	iret   
  409428:	or     edi,edi
  40942a:	pushf  
  40942b:	stc    
  40942c:	call   0x96433134
  409431:	jb     0x409459
  409433:	jns    0x40949b
  409435:	ins    BYTE PTR es:[edi],dx
  409436:	adc    al,0x4f
  409438:	pop    eax
  409439:	je     0x409445
  40943b:	xchg   DWORD PTR [eax],eax
  40943d:	push   ecx
  40943e:	sbb    BYTE PTR [ebx],al
  409440:	add    bl,bh
  409442:	sbb    edi,ebx
  409444:	add    edi,esi
  409446:	adc    eax,0xa3c841fe
  40944b:	jmp    0x409457
  40944d:	and    dl,bh
  40944f:	sti    
  409450:	add    dh,al
  409452:	sahf   
  409453:	add    al,BYTE PTR [eax]
  409455:	and    al,0x3b
  409457:	test   al,0x6c
  409459:	or     BYTE PTR [ecx],bl
  40945b:	lea    ebp,[esi+eiz*1]
  40945e:	cmp    ebx,DWORD PTR [ebx+0x29ee96c]
  409464:	add    BYTE PTR [edi],cl
  409466:	cld    
  409467:	shl    BYTE PTR [ebp-0x17],cl
  40946a:	sahf   
  40946b:	add    al,BYTE PTR [eax]
  40946d:	ins    DWORD PTR es:[edi],dx
  40946e:	fs dec ebx
  409470:	mov    al,ds:0x29ee9
  409475:	mov    DWORD PTR [edi],esp
  409477:	ins    DWORD PTR es:[edi],dx
  409478:	sbb    BYTE PTR [ebx+0x67],0x65
  40947c:	fwait
  40947d:	pop    ebp
  40947e:	pop    ds
  40947f:	add    eax,DWORD PTR [eax]
  409481:	(bad)  
  409482:	dec    eax
  409483:	mov    ebp,0xcd4eae42
  409488:	push   ebp
  409489:	mov    DWORD PTR [eax],eax
  40948b:	cs mov ah,0x5b
  40948e:	mov    ds:0xab53ba44,eax
  409493:	das    
  409494:	mov    ebp,DWORD PTR [edi-0x50]
  409497:	pop    ebp
  409498:	(bad)  
  409499:	dec    ebx
  40949a:	mov    ds:0xa862ff2c,al
  40949f:	sub    eax,0x32900abc
  4094a4:	mov    WORD PTR [edx-0x17],?
  4094a7:	sahf   
  4094a8:	add    al,BYTE PTR [eax]
  4094aa:	rcl    DWORD PTR [ebx-0x725e33d3],1
  4094b0:	cmp    eax,0x2a8dbed9
  4094b5:	rol    DWORD PTR [eax],cl
  4094b7:	add    eax,ebx
  4094b9:	(bad)
  4094bc:	shl    ah,cl
  4094be:	push   edx
  4094c0:	ror    al,0xc3
  4094c3:	xor    al,dl
  4094c5:	sub    ch,0x42
  4094c8:	ret    0xc8
  4094cb:	mov    ds:0xa36a665a,eax
  4094d0:	ins    DWORD PTR es:[edi],dx
  4094d1:	jae    0x40954d
  4094d3:	loopne 0x40954b
  4094d5:	and    DWORD PTR [edx-0x75],esp
  4094d8:	ins    BYTE PTR es:[edi],dx
  4094d9:	push   0x6a
  4094db:	popf   
  4094dc:	fs jns 0x409540
  4094df:	hlt    
  4094e0:	add    BYTE PTR [eax],al
  4094e2:	add    al,ah
  4094e4:	adc    DWORD PTR [esp+eax*1],ebx
  4094e7:	(bad)  
  4094e8:	inc    DWORD PTR ds:0x101ca24c
  4094ee:	adc    al,BYTE PTR [eax]
  4094f0:	mov    dh,0x13
  4094f2:	adc    eax,0xc2c04e00
  4094f7:	fidivr DWORD PTR [edx-0x2e]
  4094fa:	xlat   BYTE PTR ds:[ebx]
  4094fb:	xchg   edx,eax
  4094fc:	pop    esp
  4094fd:	(bad)
  409500:	mov    dh,cl
  409502:	(bad)  
  409503:	call   0xc8d5:0xcfc3c0d3
  40950a:	(bad)
  40950d:	sar    bh,cl
  40950f:	(bad)  
  409510:	clc    
  409511:	mov    dh,0xb6
  409513:	mov    esp,0xfcada8d4
  409518:	cli    
  409519:	mov    dh,0xb7
  40951b:	mov    esp,0xb7b08573
  409520:	(bad)  
  409521:	mov    ebp,0xbde5ad9f
  409526:	mov    ebp,0x3e369d00
  40952b:	ss mov al,0x1e
  40952e:	cmp    eax,0xd3fb9d3f
  409533:	and    al,0x81
  409535:	or     ch,cl
  409537:	cmp    eax,0x39ddf272
  40953c:	add    DWORD PTR [edi+eiz*8],0x64
  409540:	xchg   ebx,eax
  409541:	add    ch,al
  409543:	cs (bad) 
  409545:	sbb    ch,al
  409547:	and    eax,0xcfe02cc
  40954c:	ror    esi,0xff
  40954f:	imul   ebp,DWORD PTR es:[esi],0xa00011f4
  409556:	push   ss
  409557:	add    DWORD PTR [ecx],eax
  409559:	popf   
  40955a:	adc    eax,0xa59d0ef1
  40955f:	maskmovq mm5,mm3
  409562:	mov    al,BYTE PTR [eax+eax*1+0x66a2fd9d]
  409569:	inc    ecx
  40956a:	cmp    DWORD PTR [ebp+edi*2+0x6ea05979],ecx
  409571:	dec    ecx
  409572:	cmp    ebp,DWORD PTR [eax+0x3193270]
  409578:	add    BYTE PTR [ebp+0x168786a9],bl
  40957e:	mov    DWORD PTR [esi-0x51],esp
  409581:	popf   
  409582:	pusha  
  409583:	mov    ch,0x5b
  409585:	jmp    0xaf55:0xf74baf60
  40958c:	jp     0x40959b
  40958e:	test   BYTE PTR [ecx-0x6f7bfa9c],cl
  409594:	push   ebp
  409595:	fldcw  WORD PTR [esi-0x42]
  409598:	push   ecx
  409599:	out    0x55,al
  40959b:	rcl    BYTE PTR [ecx-0x1],0x89
  40959f:	lahf   
  4095a0:	jmp    DWORD PTR [edx+0x61]
  4095a3:	xchg   esi,eax
  4095a4:	jb     0x40957b
  4095a6:	xchg   ebp,eax
  4095a7:	lahf   
  4095a8:	imul   edx,DWORD PTR [ebp-0x326dc0fe],0xbca556a4
  4095b2:	shl    BYTE PTR [ebx],cl
  4095b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b5:	mov    esp,0x3e8a3
  4095ba:	popf   
  4095bb:	add    dh,dl
  4095bd:	std    
  4095be:	fidivr DWORD PTR [ebp+0x29d042f]
  4095c4:	push   ss
  4095c5:	mov    eax,0xc013b974
  4095ca:	outs   dx,DWORD PTR ds:[esi]
  4095cb:	stos   DWORD PTR es:[edi],eax
  4095cc:	xor    BYTE PTR [ecx-0x46c911a3],bh
  4095d2:	imul   eax,DWORD PTR [edx],0x17f70abf
  4095d8:	cdq    
  4095d9:	adc    dh,ch
  4095db:	or     DWORD PTR [ebx-0x7dcc27ee],eax
  4095e1:	push   ss
  4095e2:	sti    
  4095e3:	or     eax,0x18c02942
  4095e8:	ja     0x409604
  4095ea:	rol    BYTE PTR [ecx],cl
  4095ec:	repz fisttp DWORD PTR [edi+0x6dcbba02]
  4095f3:	mov    dh,0xdf
  4095f5:	pop    es
  4095f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f7:	add    ch,BYTE PTR [ecx-0x3f6fd464]
  4095fd:	add    ebx,DWORD PTR [ebp+0x319c9702]
  409603:	xchg   edi,eax
  409604:	shl    DWORD PTR [edi+ecx*1+0x13a5a8d9],0x9a
  40960c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960d:	mov    eax,ds:0xb8d78cf4
  409612:	mul    DWORD PTR [edi+ecx*4-0x7e69fe76]
  409619:	aam    0xb7
  40961b:	mov    edi,DWORD PTR [edx-0x6e]
  40961e:	add    dh,ch
  409620:	xchg   ecx,eax
  409621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409622:	mov    dl,0x85
  409624:	(bad)  
  409626:	call   0x2c3fa05e
  40962b:	aad    0x2a
  40962d:	sar    DWORD PTR [ecx-0x57],0x2
  409631:	add    BYTE PTR [edi-0x7e],dh
  409634:	or     ebx,ebp
  409636:	fnstcw WORD PTR [esp+ecx*2+0x2c0c6be]
  40963d:	add    dl,dh
  40963f:	sub    eax,DWORD PTR [edx]
  409641:	add    cl,ch
  409643:	sahf   
  409644:	add    al,BYTE PTR [eax]
  409646:	cmp    dh,BYTE PTR [eax]
  409648:	call   0xe800:0x29ee976
  40964f:	fcmove st,st(7)
  409651:	and    al,0xc8
  409653:	call   0xf12fc637
  409658:	sar    BYTE PTR [ecx],cl
  40965a:	mov    ebp,0xcd31d8ce
  40965f:	shr    ebp,1
  409661:	adc    eax,0x29e9c7ce
  409666:	mov    ah,0xe6
  409668:	cmc    
  409669:	or     DWORD PTR [edx+0x527c7e3],esi
  40966f:	mov    al,ds:0x9ae513e0
  409674:	out    0x19,eax
  409676:	std    
  409677:	rcl    edx,0x16
  40967a:	jecxz  0x409640
  40967c:	not    DWORD PTR [edx]
  40967e:	out    dx,al
  40967f:	mov    cl,0xc9
  409681:	xor    edx,ebp
  409683:	add    BYTE PTR [ebp-0x6512f407],ch
  409689:	in     al,dx
  40968a:	xor    al,0xf5
  40968c:	sahf   
  40968d:	add    al,0x8
  40968f:	mov    BYTE PTR [ecx-0x32],cl
  409692:	arpl   cx,bp
  409694:	sahf   
  409695:	add    al,BYTE PTR [eax]
  409697:	lods   al,BYTE PTR ds:[esi]
  409698:	adc    eax,0x5e7d63a2
  40969d:	cwde   
  40969e:	ins    DWORD PTR es:[edi],dx
  40969f:	add    BYTE PTR [ecx],bl
  4096a1:	pop    edi
  4096a2:	push   0x5747e
  4096a7:	add    BYTE PTR [eax+0x40f8eae5],dh
  4096ad:	jmp    0xe7eb:0xca5fedfa
  4096b4:	gs call 0xeb8e86ab
  4096ba:	rcl    ch,0x49
  4096bd:	out    0xfb,eax
  4096bf:	jmp    0xeb0a:0xb4e0f25d
  4096c6:	loopne 0x4096c4
  4096c8:	inc    esp
  4096c9:	fld    st(7)
  4096cb:	fimul  WORD PTR [ebx-0x5]
  4096ce:	fcmovb st,st(1)
  4096d0:	inc    ebp
  4096d1:	mov    esi,0x4f4ddc5
  4096d6:	add    BYTE PTR [eax],al
  4096d8:	add    DWORD PTR [esi],ebx
  4096da:	sub    ch,BYTE PTR [ecx]
  4096dc:	in     al,0x2c
  4096de:	sub    DWORD PTR [ecx],ebx
  4096e0:	pushf  
  4096e1:	(bad)  
  4096e2:	(bad)  
  4096e3:	push   DWORD PTR [edx-0x5f]
  4096e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e7:	stos   BYTE PTR es:[edi],al
  4096e8:	add    BYTE PTR [edi-0x56],ah
  4096eb:	test   al,0x0
  4096ed:	aaa    
  4096ee:	out    0xe3,eax
  4096f0:	mul    DWORD PTR [edi-0x1f]
  4096f3:	repz loop 0x40967e
  4096f6:	shl    edx,0xe8
  4096f9:	push   edx
  4096fa:	jecxz  0x4096f8
  4096fc:	loopne 0x409748
  4096fe:	loopne 0x4096cd
  409700:	ficomp DWORD PTR [esi-0x1c]
  409703:	repnz in eax,0x6a
  409706:	stc    
  409707:	in     eax,dx
  409708:	mov    ebx,0xf3ede0ad
  40970d:	mov    bl,0xd2
  40970f:	(bad)  
  409710:	sar    DWORD PTR [eax+esi*8-0x3b203133],1
  409717:	ret    0x9dc5
  40971a:	in     al,0x17
  40971c:	(bad)  
  40971d:	pop    esi
  40971e:	fidiv  WORD PTR [esi]
  409720:	rcr    BYTE PTR [ebp+0x22ad479e],0xc8
  409727:	pop    ss
  409728:	cwde   
  409729:	add    eax,0x9d0060bb
  40972e:	repz and ebp,ebp
  409731:	dec    ebx
  409732:	and    al,0x19
  409734:	std    
  409735:	ss inc edi
  409737:	cmp    edx,ebp
  409739:	cmp    al,0x29
  40973b:	pop    ds
  40973c:	hlt    
  40973d:	inc    esp
  40973e:	cmp    DWORD PTR [eax],ebx
  409740:	(bad)  
  409741:	dec    esi
  409742:	dec    ebp
  409743:	sbb    al,0xfa
  409745:	xor    DWORD PTR [ecx+0x11],ecx
  409748:	out    0x4f,eax
  40974a:	push   0x18
  40974c:	out    0x0,eax
  40974e:	pop    ss
  40974f:	pusha  
  409750:	cs into 
  409752:	in     eax,0x6a
  409754:	and    eax,0x458dace
  409759:	add    BYTE PTR [ebp+0x7971a2f9],bl
  40975f:	out    0xa3,eax
  409761:	pusha  
  409762:	jb     0x409768
  409764:	sar    BYTE PTR [ecx+eiz*2],1
  409767:	hlt    
  409768:	xchg   edx,eax
  409769:	imul   eax,DWORD PTR [ecx+edi*8-0x6f],0x28
  40976e:	dec    eax
  40976f:	push   cs
  409770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409771:	jo     0x4097c6
  409773:	and    DWORD PTR [edi-0x5fc0c4e0],eax
  409779:	ins    DWORD PTR es:[edi],dx
  40977a:	aaa    
  40977b:	inc    ebp
  40977c:	mov    dh,0x51
  40977e:	mov    DWORD PTR [esi],edx
  409780:	repz adc BYTE PTR [edx-0x67ea16b1],dl
  409787:	or     eax,0x59e44dd5
  40978c:	mov    cl,0x77
  40978e:	jmp    0x4097fc
  409790:	rol    BYTE PTR [edi+edx*4+0x2],0xf6
  409795:	mov    ecx,0xaebec1e1
  40979a:	call   0xc0232949
  40979f:	iret   
  4097a0:	leave  
  4097a1:	ffreep st(0)
  4097a3:	in     al,0x79
  4097a5:	xlat   BYTE PTR ds:[ebx]
  4097a6:	mov    al,ds:0xd38dbcc9
  4097ab:	mov    WORD PTR [eax+ebx*4-0x2a],?
  4097af:	mov    ebx,0x9d0003a1
  4097b4:	add    dh,BYTE PTR [ecx-0x38c998c6]
  4097ba:	cmp    esp,DWORD PTR [edi+eiz*1-0x46]
  4097be:	or     BYTE PTR [bp+si],ch
  4097c1:	mov    ch,0x3f
  4097c3:	popa   
  4097c4:	and    eax,0x351c42a6
  4097c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ca:	inc    edx
  4097cb:	fld    QWORD PTR [edx-0x57]
  4097ce:	jge    0x4097a9
  4097d0:	cmp    BYTE PTR [edi-0x39c128c2],bl
  4097d6:	or     al,0xa
  4097d8:	pop    es
  4097d9:	mov    ss,WORD PTR [ecx+esi*8]
  4097dc:	sbb    DWORD PTR [esi+0x4b],ebx
  4097df:	sub    ah,BYTE PTR [eax+0x51]
  4097e2:	pop    esi
  4097e3:	or     ebp,DWORD PTR [edx-0x7f]
  4097e6:	or     dh,bh
  4097e8:	add    eax,0x16d40b97
  4097ed:	mov    dl,BYTE PTR [edi-0x8]
  4097f0:	(bad)  
  4097f2:	sbb    al,0xd0
  4097f4:	and    al,BYTE PTR [edi+0x7464ec80]
  4097fa:	push   0x6d937a17
  4097ff:	stc    
  409800:	addr16 gs jg 0x409816
  409804:	arpl   WORD PTR gs:[ebp-0x7d988b24],ax
  40980b:	sbb    eax,0xf690082
  409810:	inc    eax
  409811:	retf   0x1c28
  409814:	or     DWORD PTR [esi+0xcd10057],0x54b035e5
  40981e:	test   eax,0xa67afc59
  409823:	dec    edx
  409824:	int    0x4f
  409826:	cli    
  409827:	push   ss
  409828:	xlat   BYTE PTR ds:[ebx]
  409829:	pop    eax
  40982a:	lods   eax,DWORD PTR ds:[esi]
  40982b:	cmp    eax,0x35be60e8
  409830:	mov    al,0x52
  409832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409833:	cmp    ah,ah
  409835:	data16 mov ah,0x3d
  409838:	idiv   BYTE PTR [ebp-0x5dfbc9aa]
  40983e:	push   esi
  40983f:	xor    eax,0xfa51b3f5
  409844:	inc    edx
  409845:	icebp  
  409846:	push   ebx
  409847:	xor    eax,0xe94aaa59
  40984c:	adc    eax,esp
  40984e:	pop    ds
  40984f:	sbb    DWORD PTR [esp+eax*8+0x53],ecx
  409853:	das    
  409854:	push   ecx
  409855:	mov    bl,0x46
  409857:	and    ch,ch
  409859:	(bad)  
  40985a:	ins    BYTE PTR es:[edi],dx
  40985b:	sbb    eax,0x15679828
  409860:	cmp    DWORD PTR [eax-0x5cf1f8c9],ebx
  409866:	jnp    0x409883
  409868:	adc    esp,DWORD PTR [eax-0x61000096]
  40986e:	ins    BYTE PTR es:[edi],dx
  40986f:	adc    esi,DWORD PTR [esi]
  409871:	cwde   
  409872:	jge    0x409879
  409874:	std    
  409875:	(bad)  
  409876:	jo     0x409874
  409878:	leave  
  409879:	std    
  40987a:	and    bh,dh
  40987c:	add    BYTE PTR [ebp+ebp*8-0x52f941e2],ch
  409883:	psubw  mm0,mm2
  409886:	add    eax,0x52f00016
  40988b:	popa   
  40988c:	fs js  0x4098a5
  40988f:	or     eax,0x14158e18
  409894:	add    eax,DWORD PTR [ebx+0x7c114049]
  40989a:	cmp    ch,BYTE PTR [ecx]
  40989c:	sub    al,0x54
  40989e:	sub    eax,0x34667421
  4098a3:	and    al,0x38
  4098a5:	dec    edx
  4098a6:	push   ds
  4098a7:	and    eax,0x3a245430
  4098ac:	adc    DWORD PTR [ebx+eiz*1+0x37],esp
  4098b0:	das    
  4098b1:	bound  esi,QWORD PTR [eax]
  4098b3:	xor    al,0x23
  4098b5:	pop    ss
  4098b6:	ins    DWORD PTR es:[edi],dx
  4098b7:	bound  esp,QWORD PTR [eax+ebx*2]
  4098ba:	ror    ebx,1
  4098bc:	(bad)  [esi+edi*2-0x3dfb4f4a]
  4098c3:	rol    esp,1
  4098c5:	jmp    0x8c84:0xefd7c0c0
  4098cc:	fisttp QWORD PTR [eax-0x3a]
  4098cf:	fstp   st(0)
  4098d1:	cmp    cl,dl
  4098d3:	fisttp QWORD PTR [eax-0x332f3fce]
  4098d9:	ss jmp 0xc5ee:0xf010fce9
  4098e1:	add    BYTE PTR [eax],cl
  4098e3:	mul    ebx
  4098e5:	repz push es
  4098e7:	in     al,0xe0
  4098e9:	not    DWORD PTR [edi-0x6]
  4098ec:	out    0xe1,al
  4098ee:	pop    edx
  4098ef:	shl    bl,cl
  4098f1:	in     al,0x22
  4098f3:	loopne 0x409899
  4098f5:	stos   BYTE PTR es:[edi],al
  4098f6:	push   ebp
  4098f7:	jecxz  0x4098da
  4098f9:	out    dx,al
  4098fa:	dec    edx
  4098fb:	cwde   
  4098fc:	aad    0xc5
  4098fe:	push   eax
  4098ff:	out    dx,eax
  409900:	(bad)  
  409901:	call   FWORD PTR [ebp+0x635ab62e]
  409907:	sbb    eax,DWORD PTR [ebx]
  409909:	add    BYTE PTR [ebp+0x2da67f7c],bl
  40990f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409910:	je     0x409896
  409912:	xor    eax,0x9d006ca2
  409917:	loope  0x409934
  409919:	cmc    
  40991a:	and    bh,0x11
  40991d:	sti    
  40991e:	aaa    
  40991f:	inc    DWORD PTR [edx]
  409921:	add    BYTE PTR [ebp+0x57c226cc],bl
  409927:	fadd   DWORD PTR [eax-0x34]
  40992a:	inc    esi
  40992b:	xchg   ebx,eax
  40992c:	aaa    
  40992d:	retf   
  40992e:	push   0x9d00031a
  409933:	mov    ch,0x63
  409935:	mov    dh,0xfd
  409937:	adc    BYTE PTR [eax-0x5c],cl
  40993a:	popf   
  40993b:	xchg   esp,eax
  40993c:	pop    edi
  40993d:	mov    dl,0xfd
  40993f:	ja     0x4099a4
  409941:	lods   eax,DWORD PTR ds:[esi]
  409942:	or     al,0x96
  409944:	pop    ecx
  409945:	mov    dl,0x0
  409947:	add    DWORD PTR [edx+0x5c],edi
  40994a:	mov    esp,0x6fa7df9d
  40994f:	ret    0x91b2
  409952:	jae    0x409912
  409954:	sbb    DWORD PTR [ebx],eax
  409956:	add    BYTE PTR [ebp+0x746b96c7],bl
  40995c:	or     ch,cl
  40995e:	dec    eax
  40995f:	mov    cs,WORD PTR [edi*4-0x1ec61f1]
  409966:	adc    esp,DWORD PTR [edi-0x6]
  409969:	frstor [ecx]
  40996b:	popf   
  40996c:	hlt    
  40996d:	mov    dh,BYTE PTR [edi-0x59]
  409970:	fidivr DWORD PTR [eax+0x3e86655]
  409976:	add    BYTE PTR [ebp-0xf4bb62e],bl
  40997c:	add    dh,BYTE PTR [ecx+0x6c]
  40997f:	stc    
  409980:	sub    DWORD PTR [ebx+0x7b],0x70836d1b
  409987:	push   cs
  409988:	je     0x409a01
  40998a:	outs   dx,BYTE PTR ds:[esi]
  40998b:	popf   
  40998c:	add    al,BYTE PTR ds:0xebdacdc7
  409992:	call   0xfa1f835a
  409997:	scas   al,BYTE PTR es:[edi]
  409998:	add    al,BYTE PTR [esi+0x20]
  40999b:	ja     0x4099b8
  40999d:	aas    
  40999e:	ds jno 0x4099e1
  4099a1:	sub    al,0x35
  4099a3:	bound  eax,QWORD PTR [edx]
  4099a5:	dec    ebp
  4099a6:	pop    edi
  4099a7:	xor    al,0x52
  4099a9:	je     0x40992c
  4099ab:	add    BYTE PTR [ecx],ah
  4099ad:	jo     0x409a07
  4099af:	ins    BYTE PTR es:[edi],dx
  4099b0:	adc    eax,0x33547372
  4099b5:	arpl   WORD PTR fs:[ebp+0x1a],si
  4099b9:	outs   dx,DWORD PTR ds:[esi]
  4099ba:	push   eax
  4099bb:	add    al,0x9d
  4099bd:	add    cl,BYTE PTR [ebp-0x73]
  4099c0:	mov    ah,0x83
  4099c2:	sbb    bl,dh
  4099c4:	jns    0x4099c8
  4099c6:	jns    0x409a40
  4099c8:	sbb    esi,DWORD PTR [edi+0x5e]
  4099cb:	ds dec esp
  4099cd:	xor    ch,cl
  4099cf:	add    ebx,DWORD PTR [ebp+0x33686902]
  4099d5:	addr16 retf 0xfd07
  4099d9:	add    ebp,ecx
  4099db:	add    ebx,DWORD PTR [ebp+0x778d3502]
  4099e1:	pushf  
  4099e2:	push   es
  4099e3:	mov    bh,BYTE PTR [edx+edx*4+0xc]
  4099e7:	xchg   esp,eax
  4099e8:	js     0x409983
  4099ea:	std    
  4099eb:	add    ebx,DWORD PTR [ebp-0x5d96ffe]
  4099f1:	and    al,0xac
  4099f3:	sub    ah,dl
  4099f5:	add    DWORD PTR [eax],eax
  4099f7:	inc    ebp
  4099f8:	inc    esp
  4099f9:	ins    DWORD PTR es:[edi],dx
  4099fa:	xchg   ebx,eax
  4099fb:	jmp    0xea409c9e
  409a00:	rcl    dh,1
  409a02:	ss or  dh,dl
  409a05:	shr    BYTE PTR [ecx-0xb],1
  409a08:	into   
  409a09:	enter  0xe92d,0x9e
  409a0d:	add    al,BYTE PTR [eax]
  409a0f:	clc    
  409a10:	add    BYTE PTR [edx-0x7e25fae0],al
  409a16:	add    dl,BYTE PTR [edi-0x1]
  409a19:	sbb    BYTE PTR [eax],0x1e
  409a1c:	jecxz  0x409a91
  409a1e:	add    bh,bh
  409a20:	sub    DWORD PTR [esi+edx*8-0x3c20d233],esi
  409a27:	call   FWORD PTR [edi]
  409a29:	nop
  409a2a:	add    al,dh
  409a2c:	add    ebx,DWORD PTR [eax-0x6ebe1800]
  409a32:	sti    
  409a33:	hlt    
  409a34:	jmp    DWORD PTR [ebx-0x61fc0404]
  409a3a:	add    al,BYTE PTR [eax]
  409a3c:	sub    DWORD PTR [eax-0x66343958],ebp
  409a42:	call   0xe9d36c2e
  409a47:	scas   al,BYTE PTR es:[edi]
  409a48:	mov    edi,0xcde4eb92
  409a4d:	cdq    
  409a4e:	add    al,BYTE PTR [eax]
  409a50:	cs and eax,DWORD PTR ss:[eax+0x44]
  409a55:	sub    BYTE PTR [ebx+0x6f],ah
  409a58:	inc    esi
  409a59:	aas    
  409a5a:	bound  ebp,QWORD PTR [eax]
  409a5c:	sbb    BYTE PTR [edi],ah
  409a5e:	jo     0x409ac2
  409a60:	and    bl,dl
  409a62:	adc    dl,BYTE PTR [edi]
  409a64:	jmp    0xd5409d07
  409a69:	rol    BYTE PTR [ecx],cl
  409a6b:	(bad)  
  409a6c:	jp     0x409a8a
  409a6e:	add    cl,cl
  409a70:	add    BYTE PTR ds:0x7,cl
  409a76:	jmp    FWORD PTR [edi]
  409a78:	aad    0xdf
  409a7a:	imul   BYTE PTR [eax]
  409a7c:	ror    ah,0xb4
  409a7f:	add    eax,0x5c2d0000
  409a84:	test   eax,0xe34e10ae
  409a89:	mov    ah,BYTE PTR [edx]
  409a8b:	lods   eax,DWORD PTR gs:[esi]
  409a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a8e:	and    DWORD PTR [ebx-0x5f],ebx
  409a91:	add    BYTE PTR [ecx-0x51],bl
  409a94:	push   ebx
  409a95:	push   edx
  409a96:	inc    esp
  409a97:	rcr    BYTE PTR ds:0x4fa72676,0x5b
  409a9e:	and    eax,0x88015bae
  409aa3:	mov    ecx,0xb0424240
  409aa8:	dec    ecx
  409aa9:	push   edi
  409aaa:	sub    ebp,esp
  409aac:	and    al,BYTE PTR [eax]
  409aae:	ror    BYTE PTR [eax-0x48],1
  409ab1:	mov    al,ds:0xa4bb60dd
  409ab6:	mov    BYTE PTR [eax-0x5e],cl
  409ab9:	repz xor al,0x5
  409abc:	add    BYTE PTR [eax],al
  409abe:	repz loop 0x409ae0
  409ac1:	and    al,0x77
  409ac3:	repz add al,BYTE PTR [ebx+ebp*1]
  409ac7:	jmp    0xc16:0xec260811
  409ace:	inc    edx
  409acf:	cld    
  409ad0:	or     DWORD PTR [edi+ecx*8-0x1],eax
  409ad4:	or     eax,0x6fb0403
  409ad9:	or     BYTE PTR [eax],al
  409adb:	mov    dh,0xb6
  409add:	inc    edi
  409ade:	dec    ebp
  409adf:	clc    
  409ae0:	test   al,0xfe
  409ae2:	call   DWORD PTR [ebx+0x7746f94]
  409ae8:	ret    0x5452
  409aeb:	popf   
  409aec:	xor    BYTE PTR [ecx-0x44d2babe],bh
  409af2:	inc    edi
  409af3:	jns    0x409b1e
  409af5:	stos   DWORD PTR es:[edi],eax
  409af6:	pop    edx
  409af7:	mov    ds:0x7041bbdc,eax
  409afc:	es mov ah,0x5b
  409aff:	ins    BYTE PTR es:[edi],dx
  409b00:	adc    ebp,edi
  409b02:	sbb    bl,BYTE PTR [eax+0x7928dedf]
  409b08:	fcomp  QWORD PTR [edi-0x5e2cd18f]
  409b0e:	jle    0x409b45
  409b10:	sbb    esp,ebx
  409b12:	sub    edx,DWORD PTR [esi]
  409b14:	jmp    esi
  409b16:	call   DWORD PTR [edx+0x73cb3b22]
  409b1c:	push   ds
  409b1d:	and    al,0xde
  409b1f:	push   edi
  409b20:	adc    ah,BYTE PTR [ebx*8-0x3f95c8e8]
  409b27:	pop    esp
  409b28:	inc    eax
  409b29:	jle    0x409af8
  409b2b:	pusha  
  409b2c:	cmp    DWORD PTR [edx-0x7e],eax
  409b2f:	inc    esi
  409b30:	cmp    eax,0x3069c637
  409b35:	cmp    bl,al
  409b37:	pop    esi
  409b38:	inc    DWORD PTR [ecx]
  409b3a:	add    BYTE PTR [ebp+0x63fb75],bl
  409b40:	mov    ecx,0x9d0002e9
  409b45:	in     eax,0xe2
  409b47:	fist   DWORD PTR [esi-0x4d]
  409b4a:	iret   
  409b4b:	xchg   ebp,eax
  409b4c:	sub    dh,BYTE PTR [ebp-0x4db02826]
  409b52:	loope  0x409b27
  409b54:	and    eax,0xdad4cf77
  409b59:	mov    ds:0xa9db8a87,al
  409b5e:	(bad)
  409b61:	xchg   esi,eax
  409b62:	enter  0x45ad,0x3
  409b66:	jmp    0x143386e
  409b6b:	cmp    DWORD PTR [edx-0x4bcc2cd2],esi
  409b71:	jno    0x409b59
  409b73:	cs jl  0x409bab
  409b76:	adc    al,0x7a
  409b78:	dec    ebp
  409b79:	daa    
  409b7a:	daa    
  409b7b:	inc    esp
  409b7c:	popf   
  409b7d:	add    ch,BYTE PTR [edx+edx*8-0x58c15307]
  409b84:	add    ch,BYTE PTR [eax-0x4d3571]
  409b8a:	push   ebp
  409b8b:	lea    ecx,ds:0x169b7d96
  409b91:	xchg   edi,eax
  409b92:	dec    ebp
  409b93:	add    al,0x9d
  409b95:	add    ah,al
  409b97:	jp     0x409baa
  409b99:	arpl   dx,cx
  409b9b:	jb     0x409b47
  409b9d:	add    bh,BYTE PTR [esi+eiz*4]
  409ba0:	mov    esp,DWORD PTR [edx+0x2f008b0e]
  409ba6:	mov    cl,0x63
  409ba8:	scas   eax,DWORD PTR es:[edi]
  409ba9:	xor    ebp,DWORD PTR [ecx-0x7199fefa]
  409baf:	and    bl,BYTE PTR [eax-0x16a957d3]
  409bb5:	or     ebp,DWORD PTR [ecx-0xeef3fc0]
  409bbb:	or     al,0xec
  409bbd:	or     ebp,eax
  409bbf:	sbb    eax,DWORD PTR [esi-0x5aba4204]
  409bc5:	push   eax
  409bc6:	xchg   ebx,eax
  409bc7:	jg     0x409b59
  409bc9:	pop    ss
  409bca:	rcl    esi,0xfa
  409bcd:	inc    edi
  409bce:	scas   al,BYTE PTR es:[edi]
  409bcf:	call   0x14338d7
  409bd4:	sub    al,cl
  409bd6:	es std 
  409bd8:	and    al,0xbd
  409bda:	cmp    edi,ebx
  409bdc:	add    ebx,DWORD PTR [ebp+0x1d4b0002]
  409be2:	bound  esp,QWORD PTR [edx]
  409be4:	jmp    0xd3409e87
  409be9:	mov    cl,0x40
  409beb:	add    BYTE PTR [edx-0x4b2632de],bh
  409bf1:	les    eax,FWORD PTR [ebx-0x44d54d36]
  409bf7:	xlat   BYTE PTR ds:[ebx]
  409bf8:	jo     0x409be4
  409bfa:	(bad)  
  409bfb:	(bad)  
  409bfc:	out    0x64,al
  409bfe:	sbb    eax,0x1a31c04
  409c03:	push   esi
  409c04:	jmp    0xa7409ea7
  409c09:	add    al,ah
  409c0b:	lods   eax,DWORD PTR ds:[esi]
  409c0c:	mov    al,ds:0x29ee9
  409c11:	add    edx,0x3974959e
  409c17:	fnstcw WORD PTR [ebp+0x29e91]
  409c1d:	add    bh,BYTE PTR [edx-0x4359b2c2]
  409c23:	add    al,BYTE PTR [eax]
  409c25:	retf   0x67f5
  409c28:	adc    al,0xff
  409c2a:	out    0x2,eax
  409c2c:	add    BYTE PTR [edi-0x3e9a9cfd],bl
  409c32:	mov    ds:0x8e7c343d,al
  409c37:	add    al,BYTE PTR [eax]
  409c39:	jmp    0x409bc1
  409c3b:	sub    ah,BYTE PTR [ecx+ecx*8]
  409c3e:	jp     0x409c5d
  409c40:	addr16 je 0x409c0d
  409c43:	adc    eax,0x11ae706b
  409c48:	outs   dx,DWORD PTR ds:[esi]
  409c49:	dec    esp
  409c4a:	lods   eax,DWORD PTR ds:[esi]
  409c4b:	or     eax,0x1b85ef00
  409c50:	add    BYTE PTR [ebp+0x6],ch
  409c53:	cwde   
  409c54:	sahf   
  409c55:	imul   esp,DWORD PTR [ecx+0x6f000002],0xc9726670
  409c5f:	inc    edx
  409c60:	add    BYTE PTR [eax],al
  409c62:	push   esp
  409c63:	jp     0x409ce4
  409c65:	ds mov ebx,0xd17a7365
  409c6b:	add    DWORD PTR [eax],eax
  409c6d:	add    BYTE PTR [eax],al
  409c6f:	cwde   
  409c70:	ins    DWORD PTR es:[edi],dx
  409c71:	imul   edi,DWORD PTR [ecx-0x6e],0xc608137c
  409c78:	je     0x409ca9
  409c7a:	jo     0x409c31
  409c7c:	inc    edi
  409c7d:	push   edx
  409c7e:	dec    eax
  409c7f:	shl    DWORD PTR [ebx],0x18
  409c82:	outs   dx,DWORD PTR ds:[esi]
  409c83:	mov    ah,0x1
  409c85:	add    BYTE PTR [eax],al
  409c87:	or     eax,0x2fdac191
  409c8c:	(bad)  
  409c8d:	fmul   DWORD PTR [ebx-0x35637ecf]
  409c93:	imul   ecx,esp,0xfffffffe
  409c96:	dec    DWORD PTR [ecx+0x75152322]
  409c9c:	add    DWORD PTR [eax],eax
  409c9e:	add    BYTE PTR [edx+0x7c021f2a],ah
  409ca4:	add    DWORD PTR [eax],eax
  409ca6:	add    BYTE PTR [esi-0x7e],ah
  409ca9:	jnp    0x409d24
  409cab:	cmp    DWORD PTR [ebx+eiz*1],esi
  409cae:	and    cl,BYTE PTR [ebp+ebp*1+0x65]
  409cb2:	arpl   WORD PTR [ecx],dx
  409cb4:	pop    ecx
  409cb5:	popa   
  409cb6:	addr16 sub eax,0x6b2f212f
  409cbc:	xor    DWORD PTR [ecx+0x7f],edi
  409cbf:	lds    esp,FWORD PTR [edi]
  409cc1:	sub    DWORD PTR [edi],esp
  409cc3:	push   ebx
  409cc4:	cmp    BYTE PTR [ebp+0x66],dh
  409cc7:	push   cs
  409cc8:	add    BYTE PTR ds:0x43446f7b,dl
  409cce:	pop    ecx
  409ccf:	xor    DWORD PTR [ebx+0x4f],0x46
  409cd3:	add    BYTE PTR [ebp-0x62f1b4de],bl
  409cd9:	je     0x409c71
  409cdb:	test   al,0x32
  409cdd:	pusha  
  409cde:	add    eax,DWORD PTR [eax]
  409ce0:	popf   
  409ce1:	js     0x409c94
  409ce3:	lods   al,BYTE PTR ds:[esi]
  409ce4:	xor    eax,0xeef1e687
  409ce9:	mov    dh,BYTE PTR [edi-0x4bb1c74f]
  409cef:	mov    edx,0xa9b4623d
  409cf4:	cmp    dl,BYTE PTR [esi-0x3f]
  409cf7:	loop   0x409cbc
  409cf9:	jle    0x409c7f
  409cfb:	mov    bl,0x9
  409cfd:	push   esp
  409cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cff:	stos   BYTE PTR es:[edi],al
  409d00:	or     eax,0x11979a59
  409d05:	pop    ebp
  409d06:	xchg   edx,eax
  409d07:	xchg   edx,eax
  409d08:	into   
  409d09:	popa   
  409d0a:	xchg   ebx,eax
  409d0b:	xchg   esi,eax
  409d0c:	rol    BYTE PTR [edx+ebx*4-0x2987f370],cl
  409d13:	ret    0x6b11
  409d16:	test   BYTE PTR [ebx-0x7b53a0e0],cl
  409d1c:	jo     0x409d55
  409d1e:	add    eax,DWORD PTR [eax]
  409d20:	popf   
  409d21:	lods   al,BYTE PTR ds:[esi]
  409d22:	test   DWORD PTR [eax-0x63],0x9d4248b2
  409d29:	lods   eax,DWORD PTR ds:[esi]
  409d2a:	dec    eax
  409d2b:	inc    edx
  409d2c:	popf   
  409d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2e:	dec    eax
  409d2f:	inc    edx
  409d30:	popf   
  409d31:	popf   
  409d32:	dec    eax
  409d33:	inc    edx
  409d34:	popf   
  409d35:	xchg   edx,eax
  409d36:	dec    eax
  409d37:	inc    edx
  409d38:	add    BYTE PTR [ebp-0x62bf0805],bl
  409d3e:	jecxz  0x409d37
  409d40:	inc    eax
  409d41:	popf   
  409d42:	shl    bh,1
  409d44:	inc    eax
  409d45:	popf   
  409d46:	xchg   DWORD PTR [edx],eax
  409d48:	arpl   WORD PTR [ebp-0x62fffd17],bx
  409d4e:	add    ch,BYTE PTR [eax]
  409d50:	inc    edx
  409d51:	fiadd  WORD PTR [esi+0x24]
  409d54:	inc    esi
  409d55:	fimul  DWORD PTR [edx+0x20]
  409d58:	dec    edx
  409d59:	dec    si
  409d5b:	sbb    al,0x4e
  409d5d:	bound  edx,QWORD PTR [edx+0x18]
  409d60:	push   edx
  409d61:	outs   dx,BYTE PTR ds:[esi]
  409d62:	push   esi
  409d63:	adc    al,0x56
  409d65:	push   0x5a
  409d67:	adc    BYTE PTR [edx+0x7c],bl
  409d6a:	pusha  
  409d6b:	dec    edx
  409d6c:	push   0x6c0e6478
  409d71:	je     0x409ddb
  409d73:	adc    dh,BYTE PTR [eax+0x70]
  409d76:	ins    BYTE PTR es:[edi],dx
  409d77:	push   es
  409d78:	je     0x409dc6
  409d7a:	jo     0x409d96
  409d7c:	js     0x409dc6
  409d7e:	je     0x409d7e
  409d80:	jnp    0x409dc6
  409d82:	js     0x409d3d
  409d84:	xor    al,0x8f
  409d86:	das    
  409d87:	mov    ebp,0xb1337338
  409d8c:	cmp    al,0x86
  409d8e:	sub    ebp,ecx
  409d90:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  409d96:	add    dl,ch
  409d98:	daa    
  409d99:	shl    DWORD PTR [esi],0xcc
  409d9c:	jno    0x409d9e
  409d9e:	push   cs
  409d9f:	ja     0x409d5d
  409da1:	jne    0x409db5
  409da3:	jnp    0x409d65
  409da5:	jns    0x409dad
  409da7:	daa    
  409da8:	or     eax,0x526c128
  409dad:	sub    BYTE PTR [ebx-0x20bb56c5],dh
  409db3:	aas    
  409db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db5:	dec    eax
  409db6:	fild   DWORD PTR [ebx-0x5f]
  409db9:	dec    esp
  409dba:	out    0x47,eax
  409dbc:	popf   
  409dbd:	push   eax
  409dbe:	jecxz  0x409e0b
  409dc0:	cdq    
  409dc1:	push   esp
  409dc2:	out    dx,eax
  409dc3:	dec    edi
  409dc4:	xchg   ebp,eax
  409dc5:	pop    eax
  409dc6:	jmp    0x409e1b
  409dc8:	add    ch,cl
  409dca:	and    BYTE PTR [esi],0x24
  409dcd:	lds    edi,FWORD PTR [edx+0x5a]
  409dd0:	pop    ecx
  409dd1:	inc    ebx
  409dd2:	(bad)  
  409dd3:	pop    esi
  409dd4:	pop    ebp
  409dd5:	aas    
  409dd6:	ret    0x6162
  409dd9:	dec    ebx
  409dda:	jle    0x409e42
  409ddc:	gs inc edi
  409dde:	jp     0x409e4a
  409de0:	imul   edx,DWORD PTR [ebx+0x76],0x724f6d6e
  409de7:	jb     0x409e5a
  409de9:	jmp    0x540a08c
  409dee:	push   edx
  409def:	push   edx
  409df0:	push   edx
  409df1:	ss dec ecx
  409df3:	pop    ecx
  409df4:	pop    edi
  409df5:	cmp    dl,BYTE PTR [eax+edx*2+0x56]
  409df9:	sub    al,0x6f
  409dfb:	pop    ebx
  409dfc:	dec    eax
  409dfd:	push   ds
  409dfe:	outs   dx,BYTE PTR ds:[esi]
  409dff:	push   esi
  409e00:	pop    edi
  409e01:	int    0x0
  409e03:	sahf   
  409e04:	add    al,BYTE PTR [eax]
  409e06:	adc    BYTE PTR [ebx],dh
  409e08:	push   0x2350a65
  409e0d:	add    BYTE PTR [edx-0x2dffbf87],al
  409e13:	jl     0x409e55
  409e15:	add    BYTE PTR [ebp+0x5200407c],al
  409e1b:	mov    esp,0xbf9b0044
  409e20:	inc    esp
  409e21:	add    BYTE PTR [ecx+eiz*4],dl
  409e24:	jo     0x409e26
  409e26:	jmp    0x6540a0c9
  409e2b:	sbb    BYTE PTR [edx],bh
  409e2d:	add    BYTE PTR [ebx-0x52],bl
  409e30:	inc    esp
  409e31:	add    BYTE PTR [esi+ebp*4+0x44],dl
  409e35:	add    BYTE PTR [ebp-0x4d],al
  409e38:	inc    esp
  409e39:	add    BYTE PTR [eax],cl
  409e3b:	mov    eax,DWORD PTR [eax+eax*1-0x76]
  409e3f:	mov    es,WORD PTR [eax+eax*1+0x0]
  409e43:	mov    eax,0x3004235
  409e48:	push   edx
  409e49:	add    BYTE PTR [eax],al
  409e4b:	repz pop ecx
  409e4d:	inc    ebx
  409e4e:	add    BYTE PTR [ebx],al
  409e50:	inc    edi
  409e51:	add    BYTE PTR [eax],al
  409e53:	xlat   BYTE PTR ds:[ebx]
  409e54:	(bad)  
  409e55:	pusha  
  409e56:	add    dh,dl
  409e58:	(bad)  
  409e59:	push   0x64fe6200
  409e5e:	add    BYTE PTR [eax-0x2],ch
  409e61:	sub    eax,0x6bfe5800
  409e66:	add    BYTE PTR [eax],al
  409e68:	push   eax
  409e69:	(bad)  
  409e6a:	(bad)  
  409e6b:	dec    edx
  409e6d:	inc    ebx
  409e6e:	dec    ecx
  409e6f:	inc    ebx
  409e70:	mov    dh,0x61
  409e72:	popa   
  409e73:	je     0x409e0e
  409e75:	(bad)  
  409e76:	(bad)  
  409e77:	(bad)  
  409e78:	mov    edx,0xa8414943
  409e7d:	push   0x46
  409e7f:	imul   edx,eax,0x7a000060
  409e85:	inc    ebx
  409e86:	dec    ecx
  409e87:	inc    esi
  409e88:	nop
  409e89:	jno    0x409efe
  409e8b:	push   0x69626587
  409e90:	mov    dl,0x60
  409e92:	je     0x409e94
  409e94:	cli    
  409e95:	inc    edx
  409e96:	dec    ecx
  409e97:	inc    esp
  409e98:	fnstenv [edx+0x74]
  409e9b:	jb     0x409f00
  409e9d:	jl     0x409e9f
  409e9f:	add    BYTE PTR [esi*8+0x42e4003e],cl
  409ea6:	inc    edx
  409ea7:	add    bh,cl
  409ea9:	clc    
  409eaa:	add    BYTE PTR ds:[eax],al
  409ead:	cdq    
  409eae:	add    BYTE PTR ds:[edx-0x9],al
  409eb2:	inc    eax
  409eb3:	add    BYTE PTR [edx-0x9],al
  409eb6:	inc    eax
  409eb7:	add    BYTE PTR ds:0x9d00423f,bh
  409ebd:	pop    DWORD PTR [edx+eax*2-0x63]
  409ec1:	xchg   DWORD PTR [edx+eax*2-0x63],eax
  409ec5:	jg     0x409f0b
  409ec7:	inc    edx
  409ec8:	popf   
  409ec9:	add    BYTE PTR [edx+eax*2+0x0],0x9d
  409ece:	outs   dx,DWORD PTR ds:[esi]
  409ecf:	inc    ebp
  409ed0:	inc    edx
  409ed1:	popf   
  409ed2:	jb     0x409f19
  409ed4:	inc    edx
  409ed5:	popf   
  409ed6:	ds inc esi
  409ed8:	inc    edx
  409ed9:	popf   
  409eda:	dec    ebp
  409edb:	popa   
  409edc:	or     DWORD PTR fs:[eax+0x6c],0x6a
  409ee1:	xchg   BYTE PTR [edi],dh
  409ee3:	outs   dx,DWORD PTR ds:[esi]
  409ee4:	outs   dx,BYTE PTR ds:[esi]
  409ee5:	lea    edi,[edx]
  409ee7:	jb     0x409f5c
  409ee9:	mov    DWORD PTR [ecx],esi
  409eeb:	jne    0x409f65
  409eed:	ja     0x409f39
  409eef:	imul   eax,DWORD PTR [bp+si+0x7b2e],0xf0839d00
  409ef8:	aas    
  409ef9:	popf   
  409efa:	das    
  409efb:	push   ebx
  409efc:	inc    edx
  409efd:	popf   
  409efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eff:	cld    
  409f00:	aas    
  409f01:	popf   
  409f02:	push   ss
  409f03:	add    al,0x59
  409f05:	popf   
  409f06:	jmp    0x409f0a
  409f08:	add    BYTE PTR [ebp-0x628bfd37],bl
  409f0e:	repz add dh,BYTE PTR [ebp+ebx*4-0x15]
  409f13:	add    al,BYTE PTR [eax]
  409f15:	popf   
  409f16:	adc    BYTE PTR [ebp+0x42],ah
  409f19:	popf   
  409f1a:	mov    al,0x2
  409f1c:	push   ecx
  409f1d:	popf   
  409f1e:	popf   
  409f1f:	add    al,BYTE PTR [eax]
  409f21:	popf   
  409f22:	mov    fs,WORD PTR [ebx+0x42]
  409f25:	popf   
  409f26:	add    eax,DWORD PTR [esp+ebx*2]
  409f29:	popf   
  409f2a:	jmp    0x8bdd9f31
  409f2f:	add    ah,BYTE PTR [ebx+0x27d9d00]
  409f35:	add    BYTE PTR [ebp-0xbfc72fe],bl
  409f3b:	add    bl,BYTE PTR [edx-0x7afd32fd]
  409f41:	add    edi,DWORD PTR [edx+eax*1+0x2db0390]
  409f48:	mov    BYTE PTR [ebx],al
  409f4a:	mov    al,0x2
  409f4c:	test   BYTE PTR [ebx],al
  409f4e:	popf   
  409f4f:	add    ch,BYTE PTR [esi+0x7b52a966]
  409f55:	ins    BYTE PTR es:[edi],dx
  409f56:	shr    DWORD PTR [ebp+0x4a],0x70
  409f5a:	aam    0x68
  409f5c:	inc    edi
  409f5d:	imul   ebx,DWORD PTR [ebp+0x5f7db902],0x2
  409f64:	cmp    DWORD PTR [edi+ecx*4],eax
  409f67:	add    dl,BYTE PTR [esi+0x4]
  409f6a:	jne    0x409f6e
  409f6c:	push   eax
  409f6d:	add    al,0x7f
  409f6f:	add    al,BYTE PTR [eax+0x4]
  409f72:	imul   eax,DWORD PTR [edx],0x2510425
  409f78:	sub    eax,0x6029d04
  409f7d:	pusha  
  409f7e:	inc    esp
  409f7f:	jb     0x409f86
  409f81:	jno    0x409fd1
  409f83:	sub    BYTE PTR ds:0x2e023968,al
  409f89:	pusha  
  409f8a:	xor    al,0x72
  409f8c:	or     eax,0xfd532e71
  409f91:	fs das 
  409f93:	outs   dx,BYTE PTR ds:[esi]
  409f94:	hlt    
  409f95:	jae    0x409f97
  409f97:	popf   
  409f98:	add    ch,BYTE PTR [esi-0x328dcba1]
  409f9e:	jo     0x409fae
  409fa0:	push   esp
  409fa1:	shl    DWORD PTR [eax+0x9],0x5f
  409fa5:	mov    esi,0xae02fb72
  409faa:	pop    edi
  409fab:	hlt    
  409fac:	jb     0x409f58
  409fae:	jne    0x409fb0
  409fb0:	bound  eax,QWORD PTR [eax]
  409fb2:	mov    ebp,0xb56944fd
  409fb7:	cmc    
  409fb8:	popa   
  409fb9:	jo     0x409f6a
  409fbb:	call   0xe0f20d27
  409fc0:	dec    ecx
  409fc1:	push   esp
  409fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fc3:	fst    DWORD PTR [edx+0x0]
  409fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc7:	jmp    0x7073:0xb1ad7069
  409fce:	mov    ?,WORD PTR [ebx-0x467bb6a3]
  409fd4:	pop    edi
  409fd5:	gs jmp 0x2e40a279
  409fdb:	mov    ebp,0x7c267069
  409fe0:	outs   dx,BYTE PTR ds:[esi]
  409fe1:	dec    ecx
  409fe2:	inc    esp
  409fe3:	js     0x40a044
  409fe5:	gs and al,0x77
  409fe8:	arpl   WORD PTR [edi+0x4d],bp
  409feb:	jl     0x40a061
  409fed:	jae    0x40a009
  409fef:	mov    BYTE PTR [ebp+eiz*2-0x17],bh
  409ff3:	sahf   
  409ff4:	add    al,BYTE PTR [eax]
  409ff6:	es jge 0x40a062
  409ff9:	jo     0x40a029
  409ffb:	add    BYTE PTR [esi+ebp*2+0x49],bh
  409fff:	or     al,0x40
  40a001:	pop    edi
  40a002:	gs sub al,0x47
  40a005:	arpl   WORD PTR [edi+0x5],bp
  40a008:	cmp    al,0x74
  40a00a:	jae    0x409ff5
  40a00c:	sahf   
  40a00d:	add    al,BYTE PTR [eax]
  40a00f:	es cmp eax,0x381a7069
  40a015:	jo     0x40a07c
  40a017:	and    BYTE PTR [ecx+eiz*2],dh
  40a01a:	addr16 int3 
  40a01c:	push   edx
  40a01d:	addr16 push ebx
  40a01f:	aad    0x10
  40a021:	pusha  
  40a022:	popa   
  40a023:	les    ebx,FWORD PTR [esi+0x6a940002]
  40a029:	pop    ecx
  40a02a:	sbb    eax,0x2bf84e00
  40a02f:	inc    ebp
  40a030:	fcomp  st(2)
  40a032:	pop    ebx
  40a033:	mov    bl,0x15
  40a035:	add    esp,edi
  40a037:	jmp    0x409fd3
  40a039:	jl     0x40a07b
  40a03b:	add    BYTE PTR [ecx],cl
  40a03d:	jbe    0x40a080
  40a03f:	add    BYTE PTR [edi],dh
  40a041:	jbe    0x40a084
  40a043:	add    BYTE PTR [ebp-0x7d],dh
  40a046:	inc    eax
  40a047:	add    dl,al
  40a049:	mov    esi,0x83120040
  40a04e:	inc    eax
  40a04f:	add    BYTE PTR [esi-0x4affbf7e],dl
  40a055:	mov    esi,0xbec20040
  40a05a:	inc    eax
  40a05b:	add    BYTE PTR [edi+0x4175],ah
  40a061:	mov    bh,0x7f
  40a063:	inc    eax
  40a064:	add    BYTE PTR [edx],ch
  40a066:	add    BYTE PTR [eax+0x0],0x3f
  40a06a:	stc    
  40a06b:	add    BYTE PTR ds:[eax-0x68ffb702],dh
  40a072:	dec    BYTE PTR [edi+0x0]
  40a075:	mov    eax,0x8d0040fe
  40a07a:	(bad)  
  40a07b:	(bad)  
  40a07c:	jmp    DWORD PTR [ecx+eiz*1+0x0]
  40a080:	add    ah,ah
  40a082:	add    DWORD PTR [eax],eax
  40a084:	add    cl,bl
  40a086:	add    DWORD PTR [ebp+0x0],ebp
  40a089:	mov    ah,0x1
  40a08b:	add    BYTE PTR [eax],al
  40a08d:	aam    0x1
  40a08f:	sub    eax,0xfffea200
  40a094:	(bad)  
  40a095:	fld    DWORD PTR [ecx]
  40a097:	ins    DWORD PTR es:[edi],dx
  40a098:	add    cl,ah
  40a09a:	add    DWORD PTR [eax+0x0],esi
  40a09d:	xchg   ecx,eax
  40a09e:	(bad)  
  40a09f:	jb     0x40a0a1
  40a0a1:	test   BYTE PTR [ecx],al
  40a0a3:	add    BYTE PTR [eax],al
  40a0a5:	popf   
  40a0a6:	xlat   BYTE PTR ds:[ebx]
  40a0a7:	add    ch,BYTE PTR [ebp-0x63]
  40a0aa:	fild   DWORD PTR [edx]
  40a0ac:	add    BYTE PTR [ebp+0x474a98],bl
  40a0b2:	mov    al,0x4b
  40a0b4:	outs   dx,BYTE PTR ds:[esi]
  40a0b5:	add    dh,BYTE PTR [ebp-0x4805b998]
  40a0bb:	pop    esi
  40a0bc:	gs out dx,eax
  40a0be:	mov    ebx,0xebc57461
  40a0c3:	add    al,BYTE PTR [eax]
  40a0c5:	add    BYTE PTR [ebp-0x62fffd3f],bl
  40a0cb:	mov    esi,0xc69d7302
  40a0d0:	add    dh,BYTE PTR [eax]
  40a0d2:	popf   
  40a0d3:	ret    
  40a0d4:	add    bh,BYTE PTR [eax-0x63]
  40a0d7:	mov    ebp,0x789d2502
  40a0dc:	add    eax,DWORD PTR [eax]
  40a0de:	popf   
  40a0df:	push   es
  40a0e0:	add    al,0x73
  40a0e2:	popf   
  40a0e3:	inc    BYTE PTR [ebx]
  40a0e5:	xor    BYTE PTR [ebp-0x6287fbed],bl
  40a0eb:	jmp    0x40a0ef
  40a0ed:	add    BYTE PTR [ebp-0x34cdd706],bl
  40a0f3:	out    dx,al
  40a0f4:	add    al,BYTE PTR [eax]
  40a0f6:	popf   
  40a0f7:	dec    edx
  40a0f8:	push   0x20
  40a0fa:	jo     0x40a131
  40a0fc:	ins    DWORD PTR es:[edi],dx
  40a0fd:	outs   dx,BYTE PTR ds:[esi]
  40a0fe:	jb     0x40a114
  40a100:	push   0x20
  40a102:	inc    eax
  40a103:	sbb    DWORD PTR [esi+0x6f],esi
  40a106:	dec    edi
  40a107:	retf   
  40a108:	arpl   WORD PTR ds:0x760e,di
  40a10d:	jb     0x40a147
  40a10f:	pop    es
  40a110:	add    al,0x0
  40a112:	popf   
  40a113:	xor    edx,DWORD PTR [ebp+eax*2+0x52]
  40a117:	push   ss
  40a118:	dec    edx
  40a119:	dec    ebx
  40a11a:	pop    ebx
  40a11b:	adc    al,0x51
  40a11d:	dec    esi
  40a11e:	popf   
  40a11f:	add    bl,cl
  40a121:	bound  ecx,QWORD PTR [edi]
  40a123:	jo     0x40a0e9
  40a125:	jne    0x40a0e4
  40a127:	imul   ebx,edx,0x620d0023
  40a12d:	aam    0x74
  40a12f:	clc    
  40a130:	pop    esi
  40a131:	jmp    0xb1433e39
  40a136:	push   ebx
  40a137:	fcom   DWORD PTR [ebx-0x67]
  40a13a:	inc    edx
  40a13b:	ror    BYTE PTR [edi-0x5c],1
  40a13e:	aas    
  40a13f:	popf   
  40a140:	add    bl,BYTE PTR [edx-0x75963091]
  40a146:	outs   dx,DWORD PTR ds:[esi]
  40a147:	jge    0x40a1ae
  40a149:	xchg   BYTE PTR [edi-0x40],bl
  40a14c:	and    cl,BYTE PTR [eax+0x7b5dce74]
  40a152:	outs   dx,DWORD PTR ds:[esi]
  40a153:	les    esp,FWORD PTR [ebx-0x71]
  40a156:	and    edi,DWORD PTR [ebx-0x3f987f9f]
  40a15c:	pop    esi
  40a15d:	jmp    0x31433e65
  40a162:	push   esp
  40a163:	pusha  
  40a164:	push   ebx
  40a165:	cmp    dl,BYTE PTR [eax+0x6f]
  40a168:	dec    ecx
  40a169:	sub    dl,BYTE PTR [eax-0x63]
  40a16c:	add    al,BYTE PTR [esi+eiz*2+0x7e]
  40a170:	arpl   WORD PTR [esi+eiz*2],di
  40a173:	jno    0x40a1d2
  40a175:	cmp    esp,DWORD PTR [ecx+0x79]
  40a178:	and    bh,BYTE PTR [esi+eiz*2]
  40a17b:	cmp    BYTE PTR [edx+0x39],0x61
  40a17f:	jle    0x40a1ef
  40a181:	or     al,0x60
  40a183:	jge    0x40a1ee
  40a185:	pshufw mm7,QWORD PTR [eax],0x70
  40a189:	pop    es
  40a18a:	cmp    DWORD PTR gs:[edx],esp
  40a18d:	sbb    dh,BYTE PTR [eax+0x0]
  40a190:	cmp    al,0x6e
  40a192:	or     al,0x4
  40a194:	popf   
  40a195:	add    dh,BYTE PTR [ecx]
  40a197:	push   esp
  40a198:	pop    eax
  40a199:	push   ebx
  40a19a:	add    BYTE PTR [eax],ah
  40a19c:	arpl   WORD PTR [ecx+eax*2+0x1d],cx
  40a1a0:	push   eax
  40a1a1:	ds pop edi
  40a1a3:	mov    al,0xe0
  40a1a5:	dec    esi
  40a1a6:	inc    ebp
  40a1a7:	mov    ebx,0xb64c41d8
  40a1ac:	out    dx,eax
  40a1ad:	dec    esi
  40a1ae:	inc    ecx
  40a1af:	mov    ch,0xdd
  40a1b1:	add    al,BYTE PTR [eax]
  40a1b3:	rol    BYTE PTR [eax],1
  40a1b5:	ins    DWORD PTR es:[edi],dx
  40a1b6:	popa   
  40a1b7:	int    0x1
  40a1b9:	pop    edi
  40a1ba:	and    dl,cl
  40a1bc:	add    esp,DWORD PTR [ebp+0x73]
  40a1bf:	mov    ch,0xf9
  40a1c1:	fs je  0x40a18d
  40a1c4:	iret   
  40a1c5:	outs   dx,BYTE PTR ds:[esi]
  40a1c6:	jb     0x40a158
  40a1c8:	mov    eax,0xeea1005b
  40a1cd:	cmp    eax,0x4cd8a05f
  40a1d2:	inc    ecx
  40a1d3:	mov    ch,0xe9
  40a1d5:	ds pop edi
  40a1d7:	stos   BYTE PTR es:[edi],al
  40a1d8:	fild   DWORD PTR [ebx+edx*2-0x63]
  40a1dc:	loope  0x40a222
  40a1de:	push   esp
  40a1df:	jmp    0x5040a482
  40a1e4:	sub    DWORD PTR [ecx+eiz*2+0x4d],0xffffff80
  40a1e9:	pop    esi
  40a1ea:	and    BYTE PTR [edx+0x79],cl
  40a1ed:	popa   
  40a1ee:	jb     0x40a238
  40a1f0:	jle    0x40a260
  40a1f2:	cmp    eax,DWORD PTR gs:[eax]
  40a1f5:	shr    DWORD PTR [ecx+0x6e],0x9
  40a1f9:	jle    0x40a265
  40a1fb:	jne    0x40a244
  40a1fd:	jbe    0x40a221
  40a1ff:	jae    0x40a241
  40a201:	addr16 pop ebp
  40a203:	and    BYTE PTR [ecx],dl
  40a205:	cmp    al,0x61
  40a207:	fs add al,0x4f
  40a20a:	add    al,BYTE PTR [eax]
  40a20c:	and    DWORD PTR [ecx+0x3d],esi
  40a20f:	pop    edi
  40a210:	and    BYTE PTR [ebx+0x4c],bl
  40a213:	inc    ecx
  40a214:	add    BYTE PTR [eax+0x45],dh
  40a217:	inc    esp
  40a218:	pop    edi
  40a219:	xchg   DWORD PTR [esi+0x55],eax
  40a21c:	dec    esi
  40a21d:	jg     0x40a26a
  40a21f:	push   ebx
  40a220:	dec    ecx
  40a221:	mov    es,WORD PTR [ecx+0x0]
  40a224:	add    BYTE PTR [ebp+0x68],ch
  40a227:	jbe    0x40a28a
  40a229:	pusha  
  40a22a:	pop    edi
  40a22b:	and    BYTE PTR fs:[edi+0x5e],dl
  40a22f:	popa   
  40a230:	jb     0x40a287
  40a232:	gs je  0x40a29a
  40a235:	ss imul ebp,DWORD PTR es:[esi-0x5c],0x286e6f65
  40a23e:	arpl   WORD PTR [esi+0x74],bp
  40a241:	popa   
  40a242:	push   0x65
  40a244:	outs   dx,BYTE PTR ds:[esi]
  40a245:	sub    esp,DWORD PTR [edx+0x68]
  40a248:	and    BYTE PTR [ebx+eiz*2],ch
  40a24b:	popa   
  40a24c:	sbb    DWORD PTR fs:[eax+eax*1+0x0],esi
  40a251:	cld    
  40a252:	push   ebp
  40a253:	inc    ebp
  40a254:	pop    edi
  40a255:	in     eax,dx
  40a256:	inc    edi
  40a257:	push   esi
  40a258:	inc    ecx
  40a259:	add    BYTE PTR [eax],al
  40a25b:	aas    
  40a25c:	inc    esp
  40a25d:	pop    edi
  40a25e:	test   DWORD PTR [eax+0x4e],0x5447f954
  40a265:	pop    edi
  40a266:	shl    BYTE PTR [ecx],1
  40a268:	dec    esi
  40a269:	inc    edi
  40a26a:	enter  0x3e,0x0
  40a26e:	pop    ebp
  40a26f:	push   0x5dc06176
  40a274:	and    BYTE PTR fs:[edi+0x5e],ah
  40a278:	popa   
  40a279:	jb     0x40a2e0
  40a27b:	arpl   WORD PTR [ebp+eiz*2-0x5a],si
  40a27f:	imul   ebp,DWORD PTR es:[esi-0x6c],0xa861655e
  40a287:	push   ecx
  40a288:	jb     0x40a28a
  40a28a:	mov    WORD PTR [esi+0x45],ss
  40a28d:	pop    edi
  40a28e:	popf   
  40a28f:	and    al,BYTE PTR [esi+0x56]
  40a292:	pop    esp
  40a293:	cmovnp eax,DWORD PTR [edx+ebx*2+0x33]
  40a298:	aas    
  40a299:	inc    ecx
  40a29a:	pop    ecx
  40a29b:	es push edx
  40a29d:	pop    edi
  40a29e:	push   ecx
  40a29f:	sub    BYTE PTR [ecx+0x45],cl
  40a2a2:	push   ebx
  40a2a3:	fild   DWORD PTR [edx]
  40a2a5:	add    BYTE PTR [ebp-0x1dfc349],bl
  40a2ab:	shl    DWORD PTR [ecx+0x72],cl
  40a2ae:	cld    
  40a2af:	mov    esp,0xfc0f656e
  40a2b4:	pop    esi
  40a2b5:	js     0x40a2a4
  40a2b7:	mov    esi,0xc7f8745f
  40a2bc:	add    al,BYTE PTR [eax]
  40a2be:	add    BYTE PTR [ebp-0x3dbaad5d],bl
  40a2c4:	(bad)  
  40a2c5:	cmp    al,0x5f
  40a2c7:	loopne 0x40a28c
  40a2c9:	push   edx
  40a2ca:	inc    ebp
  40a2cb:	fidiv  WORD PTR [edi-0x7d62bbc3]
  40a2d1:	fs jbe 0x40a290
  40a2d4:	outs   dx,DWORD PTR ds:[esi]
  40a2d5:	push   0x64
  40a2d7:	jge    0x40a25a
  40a2d9:	jo     0x40a33c
  40a2db:	mov    edx,0xb16e5d7e
  40a2e0:	fild   DWORD PTR [edx]
  40a2e2:	add    BYTE PTR [ebp+0x7a4552a3],bl
  40a2e8:	xor    al,BYTE PTR [esi+0x56]
  40a2eb:	pop    esp
  40a2ec:	pop    ds
  40a2ed:	dec    ebx
  40a2ee:	inc    esp
  40a2ef:	push   0x21
  40a2f1:	push   edx
  40a2f2:	inc    ecx
  40a2f3:	pop    edx
  40a2f4:	push   cs
  40a2f5:	aas    
  40a2f6:	dec    esi
  40a2f7:	push   ecx
  40a2f8:	fild   DWORD PTR [edx]
  40a2fa:	add    BYTE PTR [ebp+0x7c766652],bl
  40a300:	inc    edi
  40a301:	imul   esp,DWORD PTR [ebp+edi*4+0x2a],0x6f
  40a306:	gs dec edi
  40a308:	add    ah,BYTE PTR [eax]
  40a30a:	and    al,0x4e
  40a30c:	jbe    0x40a329
  40a30e:	imul   edi,DWORD PTR [ebx],0x69
  40a311:	jmp    0x21434019
  40a316:	push   esp
  40a317:	pusha  
  40a318:	push   ecx
  40a319:	xor    BYTE PTR [esi+0x4b],al
  40a31c:	inc    ebx
  40a31d:	sub    eax,0x1851614b
  40a322:	dec    edi
  40a323:	add    BYTE PTR [eax+0x54],bl
  40a326:	adc    BYTE PTR [ebp-0x12],dl
  40a329:	push   esi
  40a32a:	mov    ebx,0xe947e34a
  40a32f:	add    ebx,DWORD PTR [ebp+0xb65c002]
  40a335:	bound  edi,QWORD PTR [ebp-0x46dcfe96]
  40a33b:	(bad)  
  40a33c:	jmp    0x9d448c9b
  40a341:	add    ah,BYTE PTR [ecx-0x5fb027ad]
  40a347:	inc    ebp
  40a348:	repz inc ecx
  40a34a:	mov    ch,0x4a
  40a34c:	(bad)  [edi-0x47]
  40a34f:	inc    edx
  40a350:	icebp  
  40a351:	cmp    ch,cl
  40a353:	add    ebx,DWORD PTR [ebp-0x4c9a7ffe]
  40a359:	popa   
  40a35a:	xchg   ebp,eax
  40a35b:	push   0xffffffb9
  40a35d:	and    bh,BYTE PTR [ecx+0x64]
  40a360:	scas   eax,DWORD PTR es:[edi]
  40a361:	jbe    0x40a34c
  40a363:	add    ebx,DWORD PTR [ebp+0x6053a102]
  40a369:	dec    edi
  40a36a:	xor    BYTE PTR [edx+0x6b],al
  40a36d:	inc    ecx
  40a36e:	sub    eax,0x394f613d
  40a373:	inc    ebx
  40a374:	outs   dx,DWORD PTR ds:[esi]
  40a375:	push   esi
  40a376:	jmp    0x5043407e
  40a37b:	bound  ebp,QWORD PTR [ebx+0x61]
  40a37e:	dec    ebp
  40a37f:	pop    ebp
  40a380:	and    DWORD PTR [edx],0x737e4100
  40a386:	je     0x40a371
  40a388:	add    BYTE PTR [esi+0x69310002],bl
  40a38e:	inc    ebp
  40a38f:	pop    edi
  40a390:	xor    BYTE PTR [edi+0x58],bl
  40a393:	inc    ecx
  40a394:	and    eax,0x215f4680
  40a399:	pop    esi
  40a39a:	push   ebx
  40a39b:	push   esp
  40a39c:	jmp    0x1040a63f
  40a3a1:	aas    
  40a3a2:	js     0x40a405
  40a3a4:	add    eax,0x14206640
  40a3a9:	repz add BYTE PTR ds:[ecx-0x4fa0ba12],dh
  40a3b1:	fcomp  QWORD PTR [eax+0x41]
  40a3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b5:	rol    DWORD PTR [esi+0x5f],0xb4
  40a3b9:	sar    BYTE PTR [esi],1
  40a3bb:	add    al,dl
  40a3bd:	cld    
  40a3be:	js     0x40a421
  40a3c0:	int    0xc9
  40a3c2:	data16 and BYTE PTR [ecx+0x95056ca],ah
  40a3c9:	mov    esp,0xbf917465
  40a3ce:	data16 add BYTE PTR [ecx-0x5fa0ba12],dh
  40a3d5:	fcomp  QWORD PTR [eax+0x41]
  40a3d8:	popf   
  40a3d9:	jns    0x40a421
  40a3db:	pop    edi
  40a3dc:	mov    ah,0xe5
  40a3de:	push   esi
  40a3df:	dec    eax
  40a3e0:	scas   al,BYTE PTR es:[edi]
  40a3e1:	loop   0x40a3e5
  40a3e3:	add    BYTE PTR [eax+0x7d6178bc],al
  40a3e9:	jns    0x40a451
  40a3eb:	and    BYTE PTR [ecx],dh
  40a3ed:	add    BYTE PTR [ebp+0x56],dh
  40a3f0:	push   eax
  40a3f1:	or     DWORD PTR [edx-0x7ba29e8a],edx
  40a3f7:	jae    0x40a419
  40a3f9:	dec    edx
  40a3fa:	jle    0x40a462
  40a3fc:	add    BYTE PTR gs:[ebx+eax*1],al
  40a400:	add    BYTE PTR [eax],al
  40a402:	lods   al,BYTE PTR ds:[esi]
  40a403:	push   esi
  40a404:	inc    ebp
  40a405:	pop    edi
  40a406:	mov    ebp,0xb8415644
  40a40b:	sub    eax,0x4a975f44
  40a410:	inc    ecx
  40a411:	push   esp
  40a412:	xchg   ecx,eax
  40a413:	push   edi
  40a414:	add    BYTE PTR [eax],al
  40a416:	popf   
  40a417:	fs jbe 0x40a47b
  40a41a:	mov    eax,0x6c20644d
  40a41f:	dec    edx
  40a420:	push   esp
  40a421:	push   eax
  40a422:	aam    0x68
  40a424:	gs jb  0x40a3ce
  40a427:	dec    ebp
  40a428:	outs   dx,DWORD PTR ds:[esi]
  40a429:	outs   dx,BYTE PTR ds:[esi]
  40a42a:	test   BYTE PTR [edx],al
  40a42c:	add    BYTE PTR [eax],al
  40a42e:	dec    esp
  40a42f:	push   edx
  40a430:	inc    ebp
  40a431:	pop    edi
  40a432:	dec    ebp
  40a433:	inc    esp
  40a434:	push   esi
  40a435:	inc    ecx
  40a436:	cmp    BYTE PTR [edi],ch
  40a438:	inc    esp
  40a439:	pop    edi
  40a43a:	xor    bh,BYTE PTR [ebx]
  40a43c:	push   edx
  40a43d:	push   ebx
  40a43e:	sub    eax,0x60004e41
  40a443:	addr16 je 0x40a4a7
  40a446:	xchg   esp,eax
  40a447:	je     0x40a4ae
  40a449:	arpl   WORD PTR [ecx+0x4f],sp
  40a44c:	jbe    0x40a4b3
  40a44e:	and    BYTE PTR [edx],ah
  40a450:	popa   
  40a451:	data16 add BYTE PTR [eax],dh
  40a454:	pop    ebx
  40a455:	jb     0x40a477
  40a457:	pop    ss
  40a458:	popa   
  40a459:	ins    DWORD PTR es:[edi],dx
  40a45a:	jo     0x40a414
  40a45c:	pop    edx
  40a45d:	je     0x40a4c4
  40a45f:	and    BYTE PTR [edx],ah
  40a461:	arpl   WORD PTR [edi+0x1a],bp
  40a464:	fs arpl WORD PTR gs:[eax+0x4e6e6f4e],sp
  40a46c:	and    ah,BYTE PTR [ebx+0x6c]
  40a46f:	imul   esi,DWORD PTR [edi+0x65],0x20
  40a473:	pop    ecx
  40a474:	gs jae 0x40a4ea
  40a477:	popf   
  40a478:	cmp    ch,BYTE PTR [ecx+0x65]
  40a47b:	popf   
  40a47c:	and    edx,DWORD PTR [ebp+eax*2+0x52]
  40a480:	sbb    BYTE PTR [eax+0x4f],al
  40a483:	dec    esi
  40a484:	es dec eax
  40a486:	pop    edi
  40a487:	pop    esi
  40a488:	and    al,0x42
  40a48a:	dec    esi
  40a48b:	pusha  
  40a48c:	sbb    BYTE PTR [eax+0x49],bl
  40a48f:	bound  esi,QWORD PTR ds:0x179d0004
  40a495:	popa   
  40a496:	outs   dx,DWORD PTR ds:[esi]
  40a497:	jge    0x40a49f
  40a499:	arpl   WORD PTR [esi+0x34],bp
  40a49c:	mov    ebx,0xff3c655a
  40a4a1:	data16 jb 0x40a521
  40a4a4:	stc    
  40a4a5:	push   0x74
  40a4a7:	cmp    al,ch
  40a4a9:	and    dh,BYTE PTR [ebx+0x0]
  40a4ac:	pop    es
  40a4ad:	bound  edi,QWORD PTR [ebx]
  40a4af:	mov    ebp,0xf6578d4
  40a4b4:	(bad)  
  40a4b5:	pop    esi
  40a4b6:	outs   dx,DWORD PTR ds:[esi]
  40a4b7:	add    BYTE PTR [edx],cl
  40a4b9:	cld    
  40a4ba:	addr16 gs icebp 
  40a4bd:	(bad)  
  40a4be:	arpl   WORD PTR [eax+edi*8-0x41],si
  40a4c2:	add    al,BYTE PTR [eax]
  40a4c4:	popf   
  40a4c5:	mov    bl,0x52
  40a4c7:	inc    ebp
  40a4c8:	ret    0x45a3
  40a4cb:	inc    ecx
  40a4cc:	loope  0x40a474
  40a4ce:	push   esp
  40a4cf:	pop    edi
  40a4d0:	loop   0x40a47f
  40a4d2:	inc    ebp
  40a4d3:	push   edx
  40a4d4:	jecxz  0x40a475
  40a4d6:	aas    
  40a4d7:	push   edi
  40a4d8:	popf   
  40a4d9:	mov    BYTE PTR [esi+0x72],dh
  40a4dc:	sar    BYTE PTR [edx+0x5d],0x20
  40a4e0:	mov    eax,0xc1656695
  40a4e5:	mov    ebx,0x7a7d7461
  40a4ea:	pusha  
  40a4eb:	and    BYTE PTR [eax-0x72879993],dl
  40a4f1:	add    cl,BYTE PTR [ebp+eiz*2-0x6f]
  40a4f5:	addr16 inc ebp
  40a4f7:	and    al,0x89
  40a4f9:	pop    ebx
  40a4fa:	inc    esp
  40a4fb:	addr16 popf 
  40a4fd:	add    ah,BYTE PTR [ecx]
  40a4ff:	push   esp
  40a500:	pop    eax
  40a501:	dec    ebp
  40a502:	xor    BYTE PTR [edx+0x53],al
  40a505:	inc    ebx
  40a506:	sub    eax,0x2c4d593b
  40a50b:	inc    ecx
  40a50c:	arpl   WORD PTR [ebp+0x1a],cx
  40a50f:	pop    eax
  40a510:	pop    esp
  40a511:	push   esi
  40a512:	sub    al,0x4
  40a514:	popf   
  40a515:	add    dl,BYTE PTR ds:0x622385c
  40a51b:	bound  eax,QWORD PTR [eax]
  40a51d:	pop    edx
  40a51e:	pop    edi
  40a51f:	add    al,0x75
  40a521:	arpl   WORD PTR cs:[esi],cx
  40a524:	addr16 dec edx
  40a526:	popa   
  40a527:	push   cs
  40a528:	pop    edi
  40a529:	sub    eax,0x780c5e
  40a52e:	and    ecx,DWORD PTR [edx]
  40a530:	arpl   WORD PTR [ecx],ax
  40a532:	pop    edi
  40a533:	retf   
  40a534:	(bad)  
  40a535:	(bad)  
  40a536:	push   edi
  40a537:	or     DWORD PTR [edx-0x4],ebp
  40a53a:	pop    ecx
  40a53b:	lds    esp,FWORD PTR [esi+0x1]
  40a53e:	add    esp,DWORD PTR [ecx-0x55b427ad]
  40a544:	inc    ebp
  40a545:	retf   0xc45d
  40a548:	je     0x40a538
  40a54a:	popa   
  40a54b:	into   
  40a54c:	data16 cli 
  40a54e:	pop    edi
  40a54f:	mov    esi,0x8c5ecd5e
  40a554:	ja     0x40a516
  40a556:	add    dl,BYTE PTR [ebp-0x79dd47a5]
  40a55c:	popa   
  40a55d:	fisub  DWORD PTR [eax+0x7e]
  40a560:	addr16 mov ah,0x22
  40a563:	mov    ah,BYTE PTR [edx-0x47]
  40a566:	pop    esi
  40a567:	mov    esp,DWORD PTR [edx-0x42]
  40a56a:	push   edi
  40a56b:	add    cl,cl
  40a56d:	test   BYTE PTR [ecx+0x69],ah
  40a570:	jge    0x40a5ed
  40a572:	data16 add BYTE PTR [ecx],dh
  40a575:	jno    0x40a5bc
  40a577:	pop    edi
  40a578:	sub    bl,BYTE PTR [edi+0x4b]
  40a57b:	bound  eax,QWORD PTR [esi-0x7b]
  40a57e:	imul   eax,DWORD PTR [eax],0x65510055
  40a584:	and    BYTE PTR [esi+0x4b],dl
  40a587:	dec    ebx
  40a588:	push   0x65667844
  40a58d:	cmp    ecx,DWORD PTR [esi+0x4b]
  40a590:	arpl   WORD PTR [esi],di
  40a592:	cmp    al,0x72
  40a594:	ins    BYTE PTR es:[edi],dx
  40a595:	or     al,0x45
  40a597:	and    BYTE PTR gs:[edx],cl
  40a59a:	cmp    BYTE PTR [esi+0x6c],bl
  40a59d:	or     eax,DWORD PTR [eax+0x5f]
  40a5a0:	imul   ecx,ecx,0x38
  40a5a3:	popa   
  40a5a4:	imul   edx,DWORD PTR ds:0x31006634,0x2a5f4549
  40a5ae:	fisttp WORD PTR [ebx+0x68]
  40a5b1:	add    al,0xf8
  40a5b3:	data16 fisttp DWORD PTR gs:[edi]
  40a5b7:	dec    esp
  40a5b8:	arpl   si,cx
  40a5ba:	std    
  40a5bb:	jb     0x40a629
  40a5bd:	int3   
  40a5be:	repnz gs add ch,dl
  40a5c2:	(bad)  
  40a5c3:	gs and dh,dl
  40a5c6:	enter  0x684b,0xc4
  40a5ca:	stc    
  40a5cb:	gs mov bx,0x74eb
  40a5d0:	popa   
  40a5d1:	mov    ebp,0x8a2065d5
  40a5d6:	rcr    DWORD PTR [esi+0x6c],0x8b
  40a5da:	mov    ecx,0xc0c96b5f
  40a5df:	popa   
  40a5e0:	imul   edi,DWORD PTR [ebp-0x3b],0x66
  40a5e7:	in     al,dx
  40a5e8:	dec    esi
  40a5e9:	inc    ebp
  40a5ea:	pop    edi
  40a5eb:	test   DWORD PTR [eax+0x5f],0x64662968
  40a5f2:	gs xchg esi,eax
  40a5f4:	cmp    al,0x76
  40a5f6:	popa   
  40a5f7:	jo     0x40a662
  40a5f9:	add    BYTE PTR gs:[eax+0x4e],ch
  40a5fd:	and    BYTE PTR gs:[ebx+0x4c],ah
  40a601:	pop    edi
  40a602:	push   0x65646559
  40a607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a608:	cmp    esp,DWORD PTR [esi+0x69]
  40a60b:	pop    ecx
  40a60c:	bound  esp,QWORD PTR [eax+eiz*1+0x67]
  40a610:	gs ins BYTE PTR es:[edi],dx
  40a612:	ins    BYTE PTR es:[edi],dx
  40a613:	data16 arpl WORD PTR gs:[ebx-0x2c],bp
  40a618:	fs popa 
  40a61a:	imul   edx,DWORD PTR [eax+0x7c006459],0x875f4556
  40a624:	inc    eax
  40a625:	pop    edi
  40a626:	push   0x65646599
  40a62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a62c:	cmp    esp,DWORD PTR [esi+0x69]
  40a62f:	test   eax,0x88006462
  40a634:	dec    esi
  40a635:	and    BYTE PTR gs:[ebx+0x48],dh
  40a639:	pop    edi
  40a63a:	jne    0x40a6a2
  40a63c:	dec    edx
  40a63d:	and    BYTE PTR [ebx+0x65],ah
  40a640:	dec    edx
  40a641:	ins    BYTE PTR es:[edi],dx
  40a642:	bound  esp,QWORD PTR [ebp+0x65]
  40a645:	imul   esp,DWORD PTR [eax],0x5a
  40a648:	pop    edi
  40a649:	imul   ebp,DWORD PTR [eax+eax*1+0x59],0xfc000062
  40a651:	push   ebp
  40a652:	inc    ebp
  40a653:	pop    edi
  40a654:	pop    es
  40a655:	inc    esp
  40a656:	pop    edi
  40a657:	jne    0x40a67f
  40a659:	dec    edx
  40a65a:	add    BYTE PTR [eax],al
  40a65c:	sub    BYTE PTR [esi+0x65],cl
  40a65f:	and    BYTE PTR [ebp-0x3fa0a380],bl
  40a665:	jle    0x40a6d8
  40a667:	jae    0x40a625
  40a669:	js     0x40a6d2
  40a66b:	pop    edi
  40a66c:	mov    edi,0x8b69657e
  40a671:	mov    ebx,0x67816161
  40a676:	popa   
  40a677:	popa   
  40a678:	jle    0x40a6ce
  40a67a:	and    al,0x66
  40a67c:	jl     0x40a6d0
  40a67e:	pusha  
  40a67f:	gs sbb ebx,0x239d0002
  40a686:	push   esp
  40a687:	inc    ebp
  40a688:	dec    edx
  40a689:	sbb    al,0x42
  40a68b:	pop    edi
  40a68c:	jo     0x40a6cc
  40a68e:	jno    0x40a703
  40a690:	cmp    al,0x38
  40a692:	addr16 pop edi
  40a694:	aas    
  40a695:	ds imul edi,DWORD PTR gs:[ebx],0x9d0002db
  40a69d:	or     al,0x77
  40a69f:	arpl   WORD PTR [esi],di
  40a6a1:	div    BYTE PTR [eax+0x73]
  40a6a4:	popf   
  40a6a5:	and    edx,DWORD PTR [ebp+eax*2+0x4a]
  40a6a9:	xor    BYTE PTR [ecx],bh
  40a6ab:	add    BYTE PTR [ebp+0x54430b],bl
  40a6b1:	fisub  WORD PTR [ebx]
  40a6b3:	add    al,0x0
  40a6b5:	popf   
  40a6b6:	push   cs
  40a6b7:	ds push ebx
  40a6b9:	lock popf 
  40a6bb:	dec    edi
  40a6bc:	inc    ebx
  40a6bd:	out    dx,eax
  40a6be:	mov    dl,0x40
  40a6c0:	inc    ebp
  40a6c1:	popf   
  40a6c2:	lods   al,BYTE PTR ds:[esi]
  40a6c3:	push   ebp
  40a6c4:	inc    edx
  40a6c5:	into   
  40a6c6:	pushf  
  40a6c7:	push   eax
  40a6c8:	dec    ecx
  40a6c9:	fist   WORD PTR [esi-0x6662fffe]
  40a6cf:	cmp    edx,DWORD PTR [esp+eiz*8-0x67]
  40a6d3:	dec    ecx
  40a6d4:	add    BYTE PTR [ebp-0x1face27a],bl
  40a6da:	add    ch,BYTE PTR [eax-0x16c521af]
  40a6e0:	add    ebx,DWORD PTR [ebp-0x30b95bfe]
  40a6e6:	inc    ecx
  40a6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e8:	add    ebx,DWORD PTR [ebp-0x27c455fe]
  40a6ee:	inc    ebp
  40a6ef:	mov    dl,0x3c
  40a6f1:	jo     0x40a741
  40a6f3:	jmp    0x9c4343fb
  40a6f8:	cmp    BYTE PTR [ebp+eax*2+0x3d],bl
  40a6fc:	cmp    ebp,DWORD PTR [ebx+0x3b]
  40a6ff:	xor    eax,0x3b029d4b
  40a704:	inc    edi
  40a705:	dec    ebp
  40a706:	cmp    DWORD PTR [ebx],edi
  40a708:	pop    eax
  40a709:	popf   
  40a70a:	add    bl,BYTE PTR [esi+edi*1]
  40a70d:	push   ecx
  40a70e:	cmp    DWORD PTR [edx],ebp
  40a710:	cmp    DWORD PTR [ebp+0x521902],ebx
  40a716:	bound  edx,QWORD PTR [edx+0x19]
  40a719:	inc    ebx
  40a71a:	jno    0x40a761
  40a71c:	xor    DWORD PTR [ebx*4+0x6a523902],eax
  40a723:	push   edx
  40a724:	das    
  40a725:	cmp    esp,DWORD PTR [ebx+0x3e]
  40a728:	jmp    0x34434430
  40a72d:	cmp    eax,0x3e93f4b
  40a732:	popf   
  40a733:	add    ah,BYTE PTR [ecx+edi*1]
  40a736:	fidiv  WORD PTR [edi]
  40a738:	sbb    eax,0xb5029d04
  40a73d:	cmp    al,0xde
  40a73f:	cmp    ebp,ecx
  40a741:	add    ebx,DWORD PTR [ebp-0x32c355fe]
  40a747:	dec    ecx
  40a748:	jmp    0x9d434450
  40a74d:	push   ecx
  40a74e:	fadd   QWORD PTR [ebx-0x5c]
  40a751:	add    ebx,DWORD PTR [ebp-0x1159fffe]
  40a757:	dec    esi
  40a758:	dec    ecx
  40a759:	sahf   
  40a75a:	mov    BYTE PTR [ebx+0x0],dl
  40a75d:	stos   BYTE PTR es:[edi],al
  40a75e:	cmp    DWORD PTR [eax],0x4edda44e
  40a764:	add    BYTE PTR [ecx-0x5effb135],bh
  40a76a:	jecxz  0x40a7ad
  40a76c:	inc    esp
  40a76d:	jmp    0xa540aa10
  40a772:	arpl   WORD PTR [esi],si
  40a774:	inc    ebp
  40a775:	popf   
  40a776:	pop    ebx
  40a777:	add    al,BYTE PTR [eax]
  40a779:	mov    al,BYTE PTR [eax]
  40a77b:	imul   ebx,DWORD PTR [eax+0x6e],0x696e7a4c
  40a782:	dec    esi
  40a783:	push   edi
  40a784:	add    al,BYTE PTR [eax]
  40a786:	pop    ecx
  40a787:	imul   edx,DWORD PTR [edi+0x78],0x50
  40a78b:	test   BYTE PTR [ebx+0x6f],ah
  40a78e:	push   edi
  40a78f:	inc    edi
  40a790:	pop    ebp
  40a791:	arpl   WORD PTR ds:0xe96e5778,si
  40a797:	sahf   
  40a798:	add    al,BYTE PTR [eax]
  40a79a:	dec    edx
  40a79b:	pop    ax
  40a79d:	je     0x40a7ab
  40a79f:	outs   dx,BYTE PTR ds:[si]
  40a7a1:	sub    eax,0x67583c0d
  40a7a6:	sbb    eax,0x15000251
  40a7ab:	xor    esp,DWORD PTR [ecx+0x6e]
  40a7ae:	cli    
  40a7af:	cmp    al,0x5d
  40a7b1:	jb     0x40a77f
  40a7b3:	std    
  40a7b4:	pop    eax
  40a7b5:	arpl   WORD PTR [esi],ax
  40a7b7:	std    
  40a7b8:	pop    ecx
  40a7b9:	outs   dx,BYTE PTR ds:[esi]
  40a7ba:	push   es
  40a7bb:	mov    eax,ds:0xedc0002
  40a7c0:	pusha  
  40a7c1:	jb     0x40a78b
  40a7c3:	ficomp DWORD PTR [ebp+0x0]
  40a7c6:	retf   0x6dd6
  40a7c9:	outs   dx,BYTE PTR ds:[esi]
  40a7ca:	ret    0x5efd
  40a7cd:	add    BYTE PTR [eax],al
  40a7cf:	dec    edi
  40a7d0:	bound  esp,QWORD PTR [ebp+0x70]
  40a7d3:	test   eax,0x12696c5d
  40a7d8:	bound  eax,QWORD PTR [eax]
  40a7da:	add    BYTE PTR [edi+0x4f],dl
  40a7dd:	outs   dx,DWORD PTR ds:[esi]
  40a7de:	jae    0x40a7e0
  40a7e0:	adc    DWORD PTR [ebx],eax
  40a7e2:	add    BYTE PTR [eax],al
  40a7e4:	lock xchg edi,eax
  40a7e6:	inc    eax
  40a7e7:	add    BYTE PTR [edi],dl
  40a7e9:	pushf  
  40a7ea:	inc    eax
  40a7eb:	add    BYTE PTR [ebx-0x3d],cl
  40a7ee:	inc    eax
  40a7ef:	add    BYTE PTR [ebp-0x7dffbf42],ah
  40a7f5:	mov    ebp,0xbd7e0040
  40a7fa:	inc    eax
  40a7fb:	add    BYTE PTR [ebx+0x3],al
  40a7fe:	ins    BYTE PTR es:[edi],dx
  40a7ff:	add    BYTE PTR [ebx-0x2],ch
  40a802:	popa   
  40a803:	add    BYTE PTR [ebp-0x2],ah
  40a806:	imul   eax,DWORD PTR [eax],0xffffffa8
  40a809:	(bad)  
  40a80a:	(bad)  
  40a80b:	dec    DWORD PTR [eax+0x57006efe]
  40a811:	(bad)  
  40a812:	pusha  
  40a813:	add    BYTE PTR [eax-0x2],ch
  40a816:	pop    ebx
  40a817:	add    ah,al
  40a819:	add    al,BYTE PTR [eax]
  40a81b:	add    BYTE PTR [edx+esi*2+0x74],bl
  40a81f:	jo     0x40a7df
  40a821:	or     ebp,DWORD PTR [edi]
  40a823:	ja     0x40a7b8
  40a825:	jae    0x40a855
  40a827:	bound  ebx,QWORD PTR [ebp-0x68d198b4]
  40a82d:	dec    ebx
  40a82e:	ins    DWORD PTR es:[edi],dx
  40a82f:	das    
  40a830:	mov    ah,0x2
  40a832:	add    BYTE PTR [eax],al
  40a834:	lods   al,BYTE PTR ds:[esi]
  40a835:	jb     0x40a8ab
  40a837:	jo     0x40a887
  40a839:	or     DWORD PTR [edi],ebp
  40a83b:	ja     0x40a7d0
  40a83d:	jno    0x40a86d
  40a83f:	imul   ecx,DWORD PTR [bx+di+0x67],0x6c
  40a844:	add    BYTE PTR [ecx+0xc],ah
  40a847:	arpl   WORD PTR [edi-0x63],bp
  40a84a:	mov    esi,0x79d0019
  40a84f:	(bad)  
  40a850:	aas    
  40a851:	popf   
  40a852:	addr16 (bad) 
  40a854:	aas    
  40a855:	popf   
  40a856:	mov    BYTE PTR [edx],al
  40a858:	gs popf 
  40a85a:	xchg   DWORD PTR [edx],eax
  40a85c:	arpl   WORD PTR [ebp-0x62affd47],bx
  40a862:	mov    DWORD PTR [edx],eax
  40a864:	imul   ebx,DWORD PTR [ebp-0x6296fd73],0x9d65027f
  40a86e:	jl     0x40a872
  40a870:	gs popf 
  40a872:	fild   DWORD PTR [edx]
  40a874:	add    BYTE PTR [ebp-0x629afd4b],bl
  40a87a:	jae    0x40a87f
  40a87c:	gs popf 
  40a87e:	fild   DWORD PTR [edx]
  40a880:	add    BYTE PTR [ebp-0x62be1076],bl
  40a886:	fild   DWORD PTR [edx]
  40a888:	add    BYTE PTR [ebp-0x1d0f82db],bl
  40a88e:	fisttp QWORD PTR [edx-0x2524a2b3]
  40a894:	inc    eax
  40a895:	sbb    ecx,0x2
  40a898:	neg    BYTE PTR [ecx-0x9]
  40a89b:	sti    
  40a89c:	add    BYTE PTR [ecx-0x23],dl
  40a89f:	push   eax
  40a8a0:	call   0x439a17
  40a8a5:	es sahf 
  40a8a7:	dec    ecx
  40a8a8:	ret    0x9900
  40a8ab:	fisttp DWORD PTR [ebp-0x75]
  40a8ae:	mov    ecx,0x9c0bd85a
  40a8b3:	fild   DWORD PTR [edx]
  40a8b5:	push   ebx
  40a8b6:	repz or al,0x7d
  40a8b9:	neg    DWORD PTR [esi]
  40a8bb:	ins    BYTE PTR es:[edi],dx
  40a8bc:	sbb    BYTE PTR [edi],cl
  40a8be:	pop    ds
  40a8bf:	dec    esi
  40a8c0:	add    al,0x0
  40a8c2:	popf   
  40a8c3:	add    ch,BYTE PTR [eax-0x17]
  40a8c6:	sub    bh,bh
  40a8c8:	call   0x5fb64ad0
  40a8cd:	add    al,0x9d
  40a8cf:	add    ah,BYTE PTR [edx+0x47]
  40a8d2:	xchg   ebp,eax
  40a8d3:	jg     0x40a8f6
  40a8d5:	jo     0x40a87f
  40a8d7:	cmc    
  40a8d8:	jne    0x40a8df
  40a8da:	push   ds
  40a8db:	jmp    0x1130:0x81a06fea
  40a8e2:	enter  0x726f,0x6f
  40a8e6:	test   eax,0x30ec63bd
  40a8eb:	in     eax,0x15
  40a8ed:	add    BYTE PTR [ebp+0x237ee902],bl
  40a8f3:	outs   dx,BYTE PTR ds:[esi]
  40a8f4:	idiv   BYTE PTR [ebx+esi*8+0x78]
  40a8f8:	cs ja  0x40a914
  40a8fb:	jmp    0x759f:0xda0be8f6
  40a902:	pushf  
  40a903:	add    ch,BYTE PTR [ecx+0x29]
  40a906:	popf   
  40a907:	outs   dx,BYTE PTR ds:[esi]
  40a908:	cmp    ecx,edi
  40a90a:	sub    BYTE PTR [ebx+ebp*8],bh
  40a90d:	jbe    0x40a90f
  40a90f:	pop    ebx
  40a910:	into   
  40a911:	adc    DWORD PTR [esp+ebp*2-0x2543aec1],edi
  40a918:	in     al,0xe8
  40a91a:	fld    TBYTE PTR [edx]
  40a91c:	sti    
  40a91d:	call   0x6432bf25
  40a922:	icebp  
  40a923:	dec    esi
  40a924:	adc    DWORD PTR [ecx-0x16ff7f9f],edx
  40a92a:	xor    al,0xdd
  40a92c:	mov    esp,0x42588bee
  40a931:	jmp    0x317cbd97
  40a936:	fstp   QWORD PTR [edi+ebp*1+0x6f887e77]
  40a93d:	add    ch,dl
  40a93f:	in     eax,dx
  40a940:	jecxz  0x40a9b6
  40a942:	(bad)  
  40a944:	jns    0x40a9c3
  40a946:	std    
  40a947:	push   esi
  40a948:	jmp    0xf945:0x799ee908
  40a94f:	jmp    0x40a8f4
  40a951:	je     0x40a94b
  40a953:	loope  0x40a952
  40a955:	imul   ebp,eax,0xd9feb5d9
  40a95b:	mov    edx,eax
  40a95d:	pop    esi
  40a95e:	xchg   edi,eax
  40a95f:	fnstcw WORD PTR [ecx+0x779ee1c1]
  40a965:	cmp    al,0xd9
  40a967:	mov    WORD PTR [edx+0x0],es
  40a96a:	fs popa 
  40a96c:	jo     0x40a994
  40a96e:	sbb    DWORD PTR [esi],0xe9fee4
  40a974:	stos   DWORD PTR es:[edi],eax
  40a975:	inc    ebp
  40a976:	dec    eax
  40a977:	xchg   ebx,eax
  40a978:	sahf   
  40a979:	dec    edi
  40a97a:	call   esp
  40a97c:	ret    0x400c
  40a97f:	jmp    0x6a48e80d
  40a984:	inc    edx
  40a985:	clc    
  40a986:	out    0x5,eax
  40a988:	ds in  al,0xfe
  40a98b:	cmp    edx,edi
  40a98d:	outs   dx,BYTE PTR ds:[esi]
  40a98e:	or     BYTE PTR [edx],bh
  40a990:	add    cl,ch
  40a992:	and    BYTE PTR [ebp-0x39d3a61b],0x4c
  40a999:	test   BYTE PTR [edi+eiz*1-0x6100ad5d],0x1e
  40a9a1:	ror    BYTE PTR [ebx],0x62
  40a9a4:	add    ebx,ecx
  40a9a6:	mov    dh,0x3a
  40a9a8:	dec    esp
  40a9a9:	dec    esp
  40a9aa:	push   edi
  40a9ab:	jb     0x40a956
  40a9ad:	in     al,0x75
  40a9af:	stc    
  40a9b0:	daa    
  40a9b1:	jmp    0xfe:0xe3a1cbe7
  40a9b8:	(bad)  
  40a9ba:	adc    BYTE PTR [ebx+0x40162f61],cl
  40a9c0:	je     0x40aa28
  40a9c2:	inc    ebp
  40a9c3:	adc    BYTE PTR [edx+0x6a144667],bl
  40a9c9:	inc    bp
  40a9cb:	adc    al,0x7
  40a9cd:	inc    esp
  40a9ce:	adc    BYTE PTR [eax],al
  40a9d0:	xchg   DWORD PTR [esi-0x8b7f9a],edi
  40a9d6:	jmp    DWORD PTR [ebp+0x0]
  40a9d9:	int    0x23
  40a9db:	adc    al,0x8d
  40a9dd:	xor    esp,DWORD PTR [edi]
  40a9df:	lea    eax,[esi-0x4]
  40a9e2:	dec    edi
  40a9e3:	push   eax
  40a9e4:	jmp    FWORD PTR [ecx+0x506ac02f]
  40a9ea:	inc    ebp
  40a9eb:	mov    DWORD PTR [ebx],eax
  40a9ed:	xchg   ebx,eax
  40a9ee:	push   esp
  40a9ef:	adc    BYTE PTR [ebx-0xaa0b86],al
  40a9f5:	imul   ecx,DWORD PTR [eax+0x2c],0xc580046a
  40a9fc:	push   ss
  40a9fd:	sub    ebx,esp
  40a9ff:	adc    esi,DWORD PTR [edx+ebp*8]
  40aa02:	add    BYTE PTR ds:[ebx+0x5e5f22b8],al
  40aa09:	popa   
  40aa0a:	aaa    
  40aa0b:	ret    
  40aa0c:	push   ebp
  40aa0d:	outs   dx,DWORD PTR ds:[esi]
  40aa0e:	retf   
  40aa0f:	mov    DWORD PTR [ebp-0x4],eax
  40aa12:	jg     0x40a9fe
  40aa14:	or     al,0xa7
  40aa16:	xor    al,0x57
  40aa18:	push   0xffffffcc
  40aa1a:	imul   esi,DWORD PTR [esp+edi*8+0x7f],0xb65b80c6
  40aa22:	(bad)  
  40aa23:	xor    bh,bh
  40aa25:	iret   
  40aa26:	mov    ds:0x59bd6373,eax
  40aa2b:	cld    
  40aa2c:	jle    0x40aa8d
  40aa2e:	addr16 inc esp
  40aa30:	or     BYTE PTR [ebp+0x288cfeff],bl
  40aa36:	xchg   ecx,eax
  40aa37:	dec    ecx
  40aa38:	call   0x42cf41
  40aa3d:	add    dh,dl
  40aa3f:	test   al,0x6f
  40aa41:	dec    esp
  40aa42:	push   ss
  40aa43:	das    
  40aa44:	cld    
  40aa45:	imul   edx,DWORD PTR [esi+edi*1+0x33d60870],0xeb9f5b4e
  40aa50:	sub    edi,eax
  40aa52:	lock cmc 
  40aa54:	jp     0x40aa9a
  40aa56:	popa   
  40aa57:	in     eax,dx
  40aa58:	mov    ebp,0x7a2d8698
  40aa5d:	xlat   BYTE PTR ds:[ebx]
  40aa5e:	ins    BYTE PTR es:[edi],dx
  40aa5f:	inc    ebp
  40aa60:	jp     0x40aa54
  40aa62:	call   0xfa96:0x9ef86f88
  40aa69:	mov    ebx,fs
  40aa6b:	in     eax,dx
  40aa6c:	push   edx
  40aa6d:	jmp    FWORD PTR [eax+0x6514e5ef]
  40aa73:	loope  0x40aab7
  40aa75:	add    ah,al
  40aa77:	xchg   edx,eax
  40aa78:	jg     0x40aa39
  40aa7a:	xchg   ecx,eax
  40aa7b:	loop   0x40aae1
  40aa7d:	add    eax,0xeb038520
  40aa82:	sahf   
  40aa83:	bound  ecx,QWORD PTR [eax-0x4]
  40aa86:	les    ebp,FWORD PTR [esi-0x19]
  40aa89:	jle    0x40aa6f
  40aa8b:	xor    eax,0x215257eb
  40aa90:	dec    ecx
  40aa91:	leave  
  40aa92:	(bad)  
  40aa94:	add    cl,BYTE PTR [edi]
  40aa96:	sub    ebp,edx
  40aa98:	repz mov ch,0x6b
  40aa9b:	jmp    0xeac1:0xeca5dfc1
  40aaa2:	add    BYTE PTR [esi-0x66dbc05f],dh
  40aaa8:	jmp    0xfeae:0x2ac8b4c
  40aaaf:	push   ss
  40aab0:	push   ecx
  40aab1:	sub    DWORD PTR [ecx+esi*1],eax
  40aab4:	or     BYTE PTR [edi],bh
  40aab6:	fdivr  QWORD PTR [esi+0xa]
  40aab9:	jmp    0x2708d0c1
  40aabe:	ret    0x29e
  40aac1:	push   ss
  40aac2:	ja     0x40aaa4
  40aac4:	push   es
  40aac5:	sbb    ebp,esp
  40aac7:	test   eax,0x9d43d9f6
  40aacc:	lea    esp,[eax+0x7f]
  40aacf:	jae    0x40ab28
  40aad1:	in     eax,dx
  40aad2:	jle    0x40ab44
  40aad4:	push   esi
  40aad5:	loope  0x40ab4f
  40aad7:	cwde   
  40aad8:	ins    BYTE PTR es:[edi],dx
  40aad9:	call   0xd9221356
  40aade:	js     0x40ab3b
  40aae0:	inc    ecx
  40aae1:	sub    dh,BYTE PTR [ecx]
  40aae3:	pop    ebp
  40aae4:	lds    ebx,FWORD PTR [ebx+0x44853678]
  40aaea:	in     al,dx
  40aaeb:	pop    ds
  40aaec:	out    dx,al
  40aaed:	mov    WORD PTR [eax+0x26],ss
  40aaf0:	mov    esp,0x8299411d
  40aaf5:	xchg   ecx,eax
  40aaf6:	sti    
  40aaf7:	popf   
  40aaf8:	lea    ebp,[ecx+0x723970f7]
  40aafe:	xrelease mov DWORD PTR [edi],ecx
  40ab01:	push   0xffffffec
  40ab03:	jle    0x40ab5d
  40ab05:	loope  0x40ab60
  40ab07:	add    BYTE PTR [edi-0x51bffc6],bl
  40ab0d:	loopne 0x40aaf7
  40ab0f:	pop    ecx
  40ab10:	mov    eax,ds:0xbd205c8f
  40ab15:	cmp    al,cl
  40ab17:	mov    edx,0x4de90340
  40ab1c:	es leave 
  40ab1e:	sbb    BYTE PTR [edx+0x5f],bl
  40ab21:	inc    ecx
  40ab22:	ins    BYTE PTR es:[edi],dx
  40ab23:	outs   dx,DWORD PTR ds:[esi]
  40ab24:	adc    DWORD PTR [edx],0x4bdbc100
  40ab2a:	add    cl,ch
  40ab2c:	cmp    eax,DWORD PTR [di+0x39a9]
  40ab31:	or     dh,BYTE PTR [ebx]
  40ab33:	test   eax,0xe9b5eb5e
  40ab38:	sahf   
  40ab39:	add    dh,BYTE PTR [ebx]
  40ab3b:	mov    ds,ecx
  40ab3d:	aaa    
  40ab3e:	lea    ebp,ds:0xba502ebd
  40ab44:	js     0x40aad5
  40ab46:	inc    ebx
  40ab47:	int    0xa2
  40ab49:	xor    cl,BYTE PTR [ecx-0x76d5650b]
  40ab4f:	fst    QWORD PTR [edx-0x752a76d2]
  40ab55:	adc    ch,al
  40ab57:	cmc    
  40ab58:	cmp    esp,eax
  40ab5a:	(bad)  
  40ab5b:	gs pop esi
  40ab5d:	pop    DWORD PTR [ebx+0xd]
  40ab60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab61:	je     0x4349d2
  40ab67:	lea    esi,ss:[edx]
  40ab6a:	lea    esp,[ebp-0x18016600]
  40ab70:	mov    al,BYTE PTR ds:0x5e65fee0
  40ab76:	push   esp
  40ab77:	outs   dx,BYTE PTR ds:[esi]
  40ab78:	push   ss
  40ab79:	mov    dl,0x26
  40ab7b:	adc    al,0x62
  40ab7d:	fisub  DWORD PTR [esi]
  40ab7f:	sbb    al,0x11
  40ab81:	mov    ecx,0xa7e8fffa
  40ab86:	inc    esi
  40ab87:	and    al,0xd1
  40ab89:	mov    ch,0xc8
  40ab8b:	jge    0x40ab26
  40ab8d:	jne    0x40abd2
  40ab8f:	and    al,0x1
  40ab91:	sub    DWORD PTR ds:0xd7a8bb33,0xfffffff0
  40ab98:	adc    ah,BYTE PTR [edi]
  40ab9a:	push   edi
  40ab9b:	inc    ecx
  40ab9c:	pusha  
  40ab9d:	jne    0x40abc5
  40ab9f:	adc    BYTE PTR [eax],al
  40aba1:	lahf   
  40aba2:	int3   
  40aba3:	je     0x40abc1
  40aba5:	dec    edi
  40aba6:	bound  esp,QWORD PTR [esp+edx*1]
  40aba9:	aas    
  40abaa:	mov    dh,0xfd
  40abac:	jae    0x40ab6e
  40abae:	jmp    0x40ab76
  40abb0:	les    eax,FWORD PTR ss:[ebx]
  40abb3:	test   al,al
  40abb5:	nop
  40abb6:	or     bh,bh
  40abb8:	inc    esp
  40abb9:	rcl    bl,1
  40abbb:	add    edi,0xea753159
  40abc1:	sbb    edi,DWORD PTR [edx]
  40abc3:	and    al,0x14
  40abc5:	sub    al,0xdd
  40abc7:	add    eax,0x42727400
  40abcc:	and    al,0x68
  40abce:	jmp    0x40ac35
  40abd0:	mov    ecx,0x33038400
  40abd5:	sar    BYTE PTR [ebp+0x7b10243a],0x57
  40abdc:	mov    edi,0x72e450eb
  40abe1:	and    al,0x70
  40abe3:	jmp    0x40abdf
  40abe5:	push   es
  40abe6:	xor    al,0x3
  40abe8:	lea    eax,[eax+edx*4+0x2]
  40abec:	call   0x47593b
  40abf1:	mov    eax,DWORD PTR [ebx-0x50a4a1bd]
  40abf7:	jmp    0x90226f57
  40abfc:	jmp    0x400:0x61f1881
  40ac03:	sbb    BYTE PTR [ebx],dh
  40ac05:	(bad)  [edx]
  40ac07:	sbb    al,0x89
  40ac09:	pop    ebp
  40ac0a:	xchg   esp,eax
  40ac0b:	lea    ebx,[ebx-0x1c]
  40ac0e:	jge    0x40ac51
  40ac10:	lock mov DWORD PTR [ecx-0x46],ebx
  40ac14:	xchg   DWORD PTR [ebp+0x40],ebx
  40ac17:	mov    ds,WORD PTR [ebx-0x38]
  40ac1a:	popf   
  40ac1b:	bound  eax,QWORD PTR [eax-0x2c]
  40ac1e:	xchg   esi,eax
  40ac1f:	lods   al,BYTE PTR ds:[esi]
  40ac20:	push   esi
  40ac21:	dec    esi
  40ac22:	mov    ds:0xcaff7857,al
  40ac27:	call   0x17e0a3b1
  40ac2c:	cli    
  40ac2d:	xor    BYTE PTR [ebp+0x1a8511eb],0xe9
  40ac34:	add    al,BYTE PTR [eax]
  40ac36:	add    BYTE PTR [edx+0x588d0ff5],ch
  40ac3c:	jns    0x40ac28
  40ac3e:	push   ss
  40ac3f:	shr    bl,1
  40ac41:	add    ch,bl
  40ac43:	pop    ss
  40ac44:	push   ecx
  40ac45:	push   eax
  40ac46:	or     BYTE PTR [esi],dl
  40ac48:	adc    ecx,DWORD PTR [eax]
  40ac4a:	mov    edx,DWORD PTR [eax+ebp*2]
  40ac4d:	add    al,0x0
  40ac4f:	popf   
  40ac50:	push   0x5fa201db
  40ac55:	ret    
  40ac56:	xchg   eax,esp
  40ac58:	ja     0x40abe9
  40ac5a:	inc    esp
  40ac5b:	xor    DWORD PTR [edi+ecx*4-0x7464b2ac],ebx
  40ac62:	dec    esp
  40ac63:	add    DWORD PTR [ebx+0x38],edx
  40ac66:	mov    al,0x14
  40ac68:	jg     0x40ac04
  40ac6a:	out    0x99,eax
  40ac6c:	aad    0x4
  40ac6e:	add    BYTE PTR [esi+0x7f],al
  40ac71:	(bad)  
  40ac72:	mov    esp,0xfee22305
  40ac77:	xor    eax,0x22fff940
  40ac7c:	addr16 mov al,ds:0x14d7
  40ac80:	or     eax,0xf358c6e2
  40ac85:	idiv   bh
  40ac87:	or     ch,ah
  40ac89:	(bad)  
  40ac8a:	mov    ah,0x71
  40ac8c:	aam    0xe0
  40ac8e:	inc    BYTE PTR ds:0x9d001c3b
  40ac94:	add    dl,BYTE PTR [ebx+0x3]
  40ac97:	push   ss
  40ac98:	lds    ebp,FWORD PTR [ebx+0x4f]
  40ac9b:	add    ch,ch
  40ac9d:	jmp    0xc96a:0x29d1760
  40aca4:	sbb    ebp,0xe351ec33
  40acaa:	push   eax
  40acab:	mov    WORD PTR [ecx+0x218ee902],ds
  40acb1:	stos   DWORD PTR es:[edi],eax
  40acb2:	scas   eax,DWORD PTR es:[edi]
  40acb3:	loope  0x40ac68
  40acb5:	xor    DWORD PTR [ecx],edi
  40acb7:	loope  0x40ac4a
  40acb9:	push   ss
  40acba:	test   DWORD PTR [ebx-0x63],0x710ac81
  40acc1:	add    al,0x5c
  40acc3:	inc    edi
  40acc4:	lea    esi,[edx]
  40acc6:	jb     0x40ad0f
  40acc8:	xchg   ebp,eax
  40acc9:	mov    DWORD PTR [eax],esp
  40accb:	or     BYTE PTR [ebp+0x4c],dh
  40acce:	sub    eax,0x77119d03
  40acd3:	sbb    ebp,eax
  40acd5:	(bad)  
  40acd6:	(bad)  
  40acd8:	shr    dl,1
  40acda:	repnz or DWORD PTR [ebp+0x4d575602],ebx
  40ace1:	jmp    0xeb9f:0x29d09ea
  40ace8:	inc    esi
  40ace9:	pop    es
  40acea:	jmp    0x40033bf2
  40acef:	mov    ecx,0x8ae9029c
  40acf4:	test   eax,0x39576fbe
  40acf9:	jmp    0x4760:0x29d1c30
  40ad00:	add    BYTE PTR [ecx-0x7f],bl
  40ad03:	mov    esp,edi
  40ad05:	popf   
  40ad06:	les    ebp,FWORD PTR [ebx-0x1ba1f520]
  40ad0c:	mov    WORD PTR [ecx-0x2a],ds
  40ad0f:	inc    DWORD PTR [ecx]
  40ad11:	mov    al,ds:0x27910668
  40ad16:	inc    esi
  40ad17:	shl    BYTE PTR [eax+0x53],1
  40ad1a:	jmp    0x288e:0xbc55438
  40ad21:	mov    ds:0x93620002,eax
  40ad26:	out    dx,al
  40ad27:	push   0xffffffa2
  40ad29:	ror    BYTE PTR [ecx+0x5617a15c],cl
  40ad2f:	int3   
  40ad30:	lock push ebx
  40ad32:	mov    dl,0xe
  40ad34:	pop    edi
  40ad35:	add    BYTE PTR [eax],0x0
  40ad38:	jmp    0x7248f356
  40ad3d:	pop    esi
  40ad3e:	push   es
  40ad3f:	call   0x429106
  40ad44:	gs pop esi
  40ad46:	or     eax,0x2a0e084
  40ad4b:	add    BYTE PTR [edx-0x1d],dh
  40ad4e:	into   
  40ad4f:	add    dh,ah
  40ad51:	dec    esi
  40ad52:	mov    esi,DWORD PTR [ecx+esi*2+0x27]
  40ad56:	pop    edi
  40ad57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad58:	and    dl,dl
  40ad5a:	out    dx,al
  40ad5b:	jne    0x40ad63
  40ad5d:	adc    BYTE PTR [edi-0x24],dl
  40ad60:	ret    
  40ad61:	push   edx
  40ad62:	pop    DWORD PTR [esi-0x1f]
  40ad65:	add    BYTE PTR [edx+esi*1-0xb552301],dl
  40ad6c:	aas    
  40ad6d:	jmp    0x6c4c6d8b
  40ad72:	pop    esi
  40ad73:	push   eax
  40ad74:	push   cs
  40ad75:	cs fcmovnu st,st(2)
  40ad78:	mov    ch,BYTE PTR [esi+eax*2-0x7e0a3a7f]
  40ad7f:	inc    ebp
  40ad80:	in     al,dx
  40ad81:	fcom   QWORD PTR [eax]
  40ad84:	mul    BYTE PTR [edx+0x5b]
  40ad87:	out    dx,al
  40ad88:	cmp    BYTE PTR [eax],al
  40ad8a:	cmp    DWORD PTR [eax+0xb6850d],edi
  40ad90:	add    BYTE PTR [eax],al
  40ad92:	xor    DWORD PTR [edx-0x1],ebx
  40ad95:	inc    DWORD PTR [ebx+esi*8]
  40ad98:	or     dl,0xf5
  40ad9b:	(bad)  
  40ad9c:	dec    DWORD PTR [edi+ebp*4+0x10758bda]
  40ada3:	out    dx,eax
  40ada4:	add    BYTE PTR [esp+eax*8],0xff
  40ada8:	add    eax,0xffffff88
  40adab:	fsubr  QWORD PTR [eax+0x14]
  40adae:	xor    DWORD PTR [ebx+0x8],eax
  40adb1:	push   eax
  40adb2:	aas    
  40adb3:	dec    ecx
  40adb4:	fadd   QWORD PTR [ebx]
  40adb6:	pop    es
  40adb7:	pop    ss
  40adb8:	call   DWORD PTR ds:0x3ed5c4
  40adbe:	aaa    
  40adbf:	retf   0xff0a
  40adc2:	leave  
  40adc3:	rol    BYTE PTR [ecx+0x5b8e88c3],cl
  40adc9:	fadd   DWORD PTR [eax]
  40adcb:	adc    DWORD PTR [eax+ecx*1],ebx
  40adce:	push   ebx
  40adcf:	icebp  
  40add0:	cmp    eax,esp
  40add2:	mov    DWORD PTR [ecx+0x2a74e6ae],edx
  40add8:	(bad)  
  40add9:	inc    DWORD PTR [esp+esi*4+0x756e890b]
  40ade0:	(bad)  
  40ade1:	call   DWORD PTR [edx-0x24]
  40ade4:	and    edi,DWORD PTR [eax]
  40ade6:	add    BYTE PTR [ebx+eax*4-0x42],al
  40adea:	ud1    esp,DWORD PTR [esi+0x1]
  40adee:	add    BYTE PTR [eax+ecx*4],dh
  40adf1:	lds    ecx,FWORD PTR [ebx+0x32e1ee82]
  40adf7:	inc    esp
  40adf8:	inc    DWORD PTR [ebx+0x4d8a33c0]
  40adfe:	add    DWORD PTR [edi+edi*8],esi
  40ae01:	or     BYTE PTR [ebp-0x63],0x29
  40ae05:	fild   WORD PTR [edx+0x7c120590]
  40ae0b:	mov    al,0x4
  40ae0d:	pop    ecx
  40ae0e:	mov    esp,0xdeec2816
  40ae13:	mov    al,0xe9
  40ae15:	add    cl,BYTE PTR [ecx-0x4076d6a8]
  40ae1b:	call   0x89e9:0x9d011351
  40ae22:	inc    esp
  40ae23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae24:	pusha  
  40ae25:	inc    ebx
  40ae26:	add    al,0x26
  40ae28:	jns    0x40adac
  40ae2a:	add    BYTE PTR [ebp+0x4cdde9],bl
  40ae30:	in     eax,dx
  40ae31:	cs clc 
  40ae33:	mov    WORD PTR [eax+0x61],fs
  40ae36:	xor    dl,BYTE PTR [eax-0x4e]
  40ae39:	mov    ch,0x12
  40ae3b:	push   ss
  40ae3c:	pop    ebp
  40ae3d:	jmp    0xefd271c3
  40ae42:	add    al,0x6a
  40ae44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae45:	pop    esi
  40ae46:	dec    eax
  40ae47:	pushf  
  40ae48:	in     eax,dx
  40ae49:	and    DWORD PTR [esi+0x68eb9cac],0x1
  40ae50:	div    DWORD PTR [edi-0x3dabb71]
  40ae56:	imul   eax,DWORD PTR [eax],0x268ec07
  40ae5c:	push   ss
  40ae5d:	sub    ebx,ebp
  40ae5f:	add    eax,edi
  40ae61:	in     eax,dx
  40ae62:	add    cl,BYTE PTR [ebx+0xeba6775]
  40ae68:	sbb    DWORD PTR [edi],edi
  40ae6a:	add    eax,DWORD PTR [eax]
  40ae6c:	popf   
  40ae6d:	mov    bl,0x7a
  40ae6f:	cmp    DWORD PTR [ebp+0x4535ddeb],ebx
  40ae75:	into   
  40ae76:	inc    edx
  40ae77:	add    DWORD PTR [ebp+0x1ef84862],ebx
  40ae7d:	add    esp,DWORD PTR [ecx]
  40ae7f:	add    al,0xa0
  40ae81:	push   es
  40ae82:	jb     0x40ae56
  40ae84:	add    cl,BYTE PTR [ebp+edx*1-0x22]
  40ae88:	adc    ecx,DWORD PTR [esi+0x65f7dba3]
  40ae8e:	jb     0x40aeda
  40ae90:	lea    ecx,[ebp+0x2100f3a7]
  40ae96:	ret    
  40ae97:	jnp    0x40aea0
  40ae99:	scas   al,BYTE PTR es:[edi]
  40ae9a:	rol    BYTE PTR [ecx],1
  40ae9c:	add    bl,BYTE PTR [eax]
  40ae9e:	push   ebx
  40ae9f:	adc    eax,0xeb230eec
  40aea4:	add    ebp,DWORD PTR [edx-0x3778576f]
  40aeaa:	dec    esi
  40aeab:	or     eax,0x9b15786a
  40aeb0:	cmp    ecx,edx
  40aeb2:	shl    DWORD PTR [ebx-0x4e],cl
  40aeb5:	xor    DWORD PTR [ebx],edx
  40aeb7:	out    0x94,al
  40aeb9:	repnz adc eax,0xca6666a0
  40aebf:	sbb    DWORD PTR ds:0x476fd916,esp
  40aec5:	xchg   ebp,eax
  40aec6:	xchg   DWORD PTR [ebx+0x18],ebx
  40aec9:	xchg   edx,eax
  40aeca:	(bad)  [ebp-0x16ee1414]
  40aed0:	add    esi,edi
  40aed2:	add    esi,DWORD PTR [edx-0x3a]
  40aed5:	sub    DWORD PTR [edi-0x53],eax
  40aed8:	in     al,dx
  40aed9:	enter  0xe915,0x3
  40aedd:	push   ds
  40aede:	rcl    DWORD PTR [ebx],0xdd
  40aee1:	rcr    edx,1
  40aee3:	shl    edx,cl
  40aee5:	daa    
  40aee6:	push   edi
  40aee7:	lea    ecx,[ecx-0x26bb15b1]
  40aeed:	dec    ebx
  40aeee:	fyl2xp1 
  40aef0:	ret    
  40aef1:	adc    BYTE PTR ds:0xc0764637,0xff
  40aef8:	mov    ah,0x0
  40aefa:	jne    0x40ae89
  40aefc:	inc    esp
  40aefd:	loope  0x40af14
  40aeff:	inc    ecx
  40af00:	add    al,0x72
  40af02:	push   ss
  40af03:	pop    ecx
  40af04:	add    ecx,ebp
  40af06:	sahf   
  40af07:	xor    BYTE PTR [edi+0x62],dl
  40af0a:	fneni(8087 only) 
  40af0c:	dec    ebx
  40af0d:	mov    edx,0xb48b029c
  40af12:	fimul  WORD PTR [ebx+0x59e664c6]
  40af18:	or     ebx,DWORD PTR [edi+0x1e04623]
  40af1e:	in     al,dx
  40af1f:	adc    eax,DWORD PTR [eax]
  40af21:	jmp    0x3ccdb01b
  40af26:	shl    eax,0x7e
  40af29:	sbb    bl,BYTE PTR [ecx+0x72a98402]
  40af2f:	and    BYTE PTR [ebx+0x44c0ad3c],cl
  40af35:	mov    esi,0x3df57f9f
  40af3a:	(bad)  
  40af3b:	fnstenv [ecx+eax*4-0x4a]
  40af3f:	icebp  
  40af40:	xor    al,0xe9
  40af42:	sahf   
  40af43:	jg     0x40af04
  40af45:	and    BYTE PTR [eax-0x7976b37b],ch
  40af4b:	xchg   edx,eax
  40af4c:	das    
  40af4d:	jmp    0xf5a532f0
  40af52:	sahf   
  40af53:	xlat   BYTE PTR ds:[ebx]
  40af54:	inc    esp
  40af55:	xchg   ebp,eax
  40af56:	and    eax,0x48bad837
  40af5b:	fld    DWORD PTR [ecx+eax*4+0x0]
  40af5f:	adc    eax,0xdb6ae83f
  40af64:	(bad)  
  40af65:	aaa    
  40af66:	and    ah,dl
  40af68:	into   
  40af69:	push   cs
  40af6a:	gs xlat BYTE PTR gs:[ebx]
  40af6d:	dec    BYTE PTR [esi+0x69]
  40af70:	dec    edi
  40af71:	lock add ah,ch
  40af74:	cmp    BYTE PTR [ebx],al
  40af76:	add    BYTE PTR [ebx+ecx*4+0x53],al
  40af7a:	mov    esp,0x8bc840bf
  40af7f:	or     eax,eax
  40af81:	xchg   DWORD PTR [ebp-0x40],edx
  40af84:	mov    BYTE PTR [ebx-0x4c],dl
  40af87:	push   esi
  40af88:	ins    BYTE PTR es:[edi],dx
  40af89:	mov    eax,0x6a0444cd
  40af8e:	cmp    BYTE PTR [ebp+edx*1-0x77],al
  40af92:	dec    ebp
  40af93:	add    al,0x8a
  40af95:	inc    ebx
  40af96:	hlt    
  40af97:	ins    DWORD PTR es:[edi],dx
  40af98:	xor    ah,al
  40af9a:	mov    DWORD PTR [ecx-0x35],esi
  40af9d:	les    eax,FWORD PTR [ebp-0x54]
  40afa0:	add    al,0xe8
  40afa2:	cmc    
  40afa3:	pop    eax
  40afa4:	add    BYTE PTR [eax],al
  40afa6:	add    DWORD PTR [eax],0xffffffd3
  40afa9:	jle    0x40b028
  40afab:	jmp    0x40afaa
  40afad:	push   cs
  40afae:	test   BYTE PTR [edi-0x24000247],cl
  40afb4:	xor    esp,ebx
  40afb6:	call   0x40af59
  40afbb:	xchg   edx,eax
  40afbc:	out    0x32,al
  40afbe:	add    esi,DWORD PTR [ebx+eax*1+0x40075ff]
  40afc5:	out    0x2a,eax
  40afc7:	add    eax,DWORD PTR [ebx+eax*1-0x19db8a01]
  40afce:	and    al,BYTE PTR [ebx]
  40afd0:	je     0x40afd5
  40afd2:	cmp    DWORD PTR [ebp+0x20],esi
  40afd5:	or     ebx,DWORD PTR [edi+0x5b1c9bc0]
  40afdb:	leave  
  40afdc:	inc    esi
  40afdd:	push   es
  40afde:	add    BYTE PTR [ebp-0x1],dl
  40afe1:	jmp    0x18ea:0x7ffce481
  40afe8:	pop    ss
  40afe9:	adc    dl,BYTE PTR [esi+0x57]
  40afec:	popf   
  40afed:	fs (bad) 
  40aff0:	mov    al,0xb5
  40aff2:	cmc    
  40aff3:	aas    
  40aff4:	popf   
  40aff5:	push   edx
  40aff6:	inc    eax
  40aff7:	and    al,0x99
  40aff9:	push   esp
  40affa:	inc    ebx
  40affb:	add    al,0xf6
  40affd:	cmp    BYTE PTR ds:0xc5ec9d00,al
  40b003:	dec    edi
  40b004:	and    dl,dh
  40b006:	out    0x11,al
  40b008:	pop    ebp
  40b009:	jmp    0xea0344f8
  40b00e:	add    cl,BYTE PTR [ebx+0x3ae7bc0d]
  40b014:	or     BYTE PTR [esi+0x34],dl
  40b017:	push   ebp
  40b018:	push   edx
  40b019:	pushf  
  40b01a:	ret    0xe7
  40b01d:	aam    0xd9
  40b01f:	(bad)  
  40b020:	and    DWORD PTR [ecx],ebp
  40b022:	push   ecx
  40b023:	daa    
  40b024:	dec    eax
  40b025:	cld    
  40b026:	ret    
  40b027:	push   esi
  40b028:	add    BYTE PTR [ebp-0x4f],bl
  40b02b:	mov    ecx,0x7eafd2fa
  40b030:	mov    edi,0x468dd250
  40b035:	cdq    
  40b036:	push   esp
  40b037:	or     DWORD PTR [ebx+0x6802e99c],0xffffffdd
  40b03e:	pop    es
  40b03f:	or     eax,0xefa84d00
  40b044:	jle    0x5dc5b473
  40b04a:	lock lock (bad) 
  40b04d:	test   al,0xdf
  40b04f:	cmc    
  40b050:	aas    
  40b051:	popf   
  40b052:	bound  edi,QWORD PTR [edi]
  40b054:	and    al,0xa1
  40b056:	jae    0x40b0a4
  40b058:	das    
  40b059:	popf   
  40b05a:	jmp    0x40afe9
  40b05c:	out    dx,eax
  40b05d:	mov    dh,0x56
  40b05f:	dec    edi
  40b060:	mov    bh,0xa6
  40b062:	dec    esi
  40b063:	or     al,BYTE PTR [eax+eax*1-0x62fc17fd]
  40b06a:	mov    DWORD PTR [esi],esp
  40b06c:	jmp    0x40b081
  40b06e:	adc    ebp,ecx
  40b070:	add    ebx,DWORD PTR [eax]
  40b072:	aas    
  40b073:	add    eax,0xacbced20
  40b078:	pop    ds
  40b079:	xchg   esi,eax
  40b07a:	add    dh,BYTE PTR [eax+0x67]
  40b07d:	jns    0x40b09d
  40b07f:	inc    ecx
  40b080:	out    0xfa,al
  40b082:	add    ch,cl
  40b084:	push   ds
  40b085:	pop    eax
  40b086:	dec    edi
  40b087:	sti    
  40b088:	xor    eax,DWORD PTR ds:0x3eb6a
  40b08e:	popf   
  40b08f:	adc    DWORD PTR [edi+ebx*1+0x75ddfec1],0x4f287f42
  40b09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b09b:	mov    ebp,0x3bd1fa4
  40b0a0:	jmp    0x7f5c4da8
  40b0a5:	call   DWORD PTR [ebx-0x62fb687c]
  40b0ab:	add    dh,BYTE PTR [eax+0x68]
  40b0ae:	jns    0x40b0aa
  40b0b0:	popa   
  40b0b1:	inc    ecx
  40b0b2:	mov    eax,ds:0x9c43a5ea
  40b0b7:	add    ch,BYTE PTR [ebp-0x3c]
  40b0ba:	stos   DWORD PTR es:[edi],eax
  40b0bb:	jle    0x40b118
  40b0bd:	add    al,0x9d
  40b0bf:	add    ah,BYTE PTR [edx-0x6]
  40b0c2:	lahf   
  40b0c3:	ss add eax,0xf14211fc
  40b0c9:	xor    eax,DWORD PTR [ebp-0x62fc2bb9]
  40b0cf:	jle    0x40b079
  40b0d1:	dec    edi
  40b0d2:	add    cl,BYTE PTR [ebx-0x7d54dfdc]
  40b0d8:	add    al,0x20
  40b0da:	xchg   ebx,eax
  40b0db:	add    dh,bh
  40b0dd:	cli    
  40b0de:	daa    
  40b0df:	cmp    eax,0x5519ed00
  40b0e4:	mov    eax,gs
  40b0e6:	sahf   
  40b0e7:	add    ch,BYTE PTR [eax+0x71]
  40b0ea:	push   eax
  40b0eb:	aad    0xfe
  40b0ed:	mov    ecx,0xfa0fee75
  40b0f2:	add    dh,bl
  40b0f4:	add    al,BYTE PTR [ebp-0x74e912d7]
  40b0fa:	scas   al,BYTE PTR es:[edi]
  40b0fb:	cmp    cl,BYTE PTR [eax+0x29e6987]
  40b101:	add    BYTE PTR [edx-0x23],ah
  40b104:	push   ds
  40b105:	and    bl,al
  40b107:	lahf   
  40b108:	xor    eax,ebp
  40b10a:	mov    esi,0x640000cf
  40b10f:	fstp   DWORD PTR [ecx+0x16]
  40b112:	add    DWORD PTR [ebx-0x7d16fdeb],edx
  40b118:	xchg   ebp,eax
  40b119:	jae    0x40b0fe
  40b11b:	aam    0x40
  40b11d:	and    al,0xd7
  40b11f:	push   ds
  40b120:	pop    ecx
  40b121:	and    al,0xdf
  40b123:	jmp    0x40b177
  40b125:	mov    bl,0x2
  40b127:	call   0x8902:0xa104f7ea
  40b12e:	sub    bl,BYTE PTR [ebp-0x33f2bc44]
  40b134:	add    DWORD PTR [eax+0x4ec7d4d],eax
  40b13a:	cmp    al,0xad
  40b13c:	xchg   esp,eax
  40b13e:	jb     0x40b124
  40b140:	fadd   QWORD PTR [ebp+0x4d029efb]
  40b146:	push   0x3a
  40b148:	push   ds
  40b149:	sbb    cl,ah
  40b14b:	pop    esp
  40b14c:	inc    eax
  40b14d:	and    al,0xf6
  40b14f:	lahf   
  40b150:	jg     0x40b195
  40b152:	int    0x86
  40b154:	or     al,0x45
  40b156:	rol    BYTE PTR [eax],cl
  40b158:	hlt    
  40b159:	dec    BYTE PTR [esi]
  40b15b:	add    al,dh
  40b15d:	push   cs
  40b15e:	(bad)  
  40b15f:	push   ebx
  40b161:	xchg   BYTE PTR [ebp+0x4],bl
  40b164:	sahf   
  40b165:	cld    
  40b166:	push   ebp
  40b167:	call   0x41aca9
  40b16c:	enter  0x72bf,0x5
  40b170:	jp     0x40b185
  40b172:	and    al,0x17
  40b174:	xor    eax,0xf038daef
  40b179:	repz push ss
  40b17b:	je     0x40b1c8
  40b17d:	xchg   esp,ecx
  40b17f:	call   0x40db30
  40b184:	mov    edi,0x6c830441
  40b189:	in     eax,dx
  40b18a:	jl     0x40b1c7
  40b18c:	xchg   DWORD PTR [edi-0x44bb82e9],esi
  40b192:	adc    ecx,DWORD PTR [edi+eax*1]
  40b195:	inc    eax
  40b196:	add    BYTE PTR [ebx],ch
  40b198:	cmp    ah,dh
  40b19a:	sbb    edi,DWORD PTR ds:0xa2c684
  40b1a0:	push   0x2a
  40b1a2:	push   esi
  40b1a3:	push   edi
  40b1a4:	push   ds
  40b1a5:	call   DWORD PTR [edi-0x18]
  40b1a8:	sbb    al,0xb6
  40b1aa:	std    
  40b1ab:	dec    DWORD PTR [eax-0x42]
  40b1ae:	jae    0x40b1c7
  40b1b0:	xchg   edi,eax
  40b1b1:	and    esi,DWORD PTR [ebx]
  40b1b3:	rcr    ah,0x17
  40b1b6:	cli    
  40b1b7:	call   ebx
  40b1b9:	cmp    BYTE PTR [esi+0x10ae0075],0x57
  40b1c0:	push   0xffffffc6
  40b1c2:	pop    ss
  40b1c3:	call   0xfdeca015
  40b1c8:	dec    ecx
  40b1ca:	sti    
  40b1cb:	adc    al,BYTE PTR [eax-0x7c]
  40b1ce:	xchg   BYTE PTR [edx+0x24],al
  40b1d1:	nop
  40b1d2:	lods   al,BYTE PTR ds:[esi]
  40b1d3:	xor    al,0xe8
  40b1d5:	popf   
  40b1d6:	ret    
  40b1d7:	add    eax,DWORD PTR [eax]
  40b1d9:	popf   
  40b1da:	or     ebp,esp
  40b1dc:	pop    ds
  40b1dd:	pushf  
  40b1de:	jmp    0xde1b3ce5
  40b1e3:	dec    DWORD PTR [edi+0x5002e99c]
  40b1e9:	bound  ebp,QWORD PTR [esi-0x1622ee2e]
  40b1ef:	mov    DWORD PTR [esi-0x67],eax
  40b1f2:	push   eax
  40b1f3:	test   BYTE PTR [ebx+0x6802e99c],cl
  40b1f9:	(bad)  [ecx+edi*8-0xec31501]
  40b200:	jle    0x5dc5b4af
  40b206:	fdivr  QWORD PTR [edi-0xb]
  40b209:	and    BYTE PTR [edi+edx*8],ah
  40b20c:	jmp    0x289e:0x43f50a9
  40b213:	xor    al,0xff
  40b215:	mov    al,0xf9
  40b217:	icebp  
  40b218:	aas    
  40b219:	popf   
  40b21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b21b:	xor    al,0x5d
  40b21d:	push   esi
  40b21e:	push   eax
  40b21f:	loope  0x40b27d
  40b221:	add    dh,bl
  40b223:	retf   0x243e
  40b226:	mov    eax,ds:0xec8b2cea
  40b22b:	sbb    edi,esi
  40b22d:	outs   dx,DWORD PTR ds:[esi]
  40b22e:	sub    DWORD PTR es:[esp+esi*2],eax
  40b232:	fwait
  40b233:	or     ebp,esp
  40b235:	(bad)  
  40b236:	popf   
  40b237:	jmp    0x231c3d3e
  40b23c:	ret    0x9d03
  40b23f:	data16 int3 
  40b241:	je     0x40b1e4
  40b243:	xchg   esp,eax
  40b244:	or     al,0xe8
  40b246:	bnd call 0xfb5eb24e
  40b24c:	add    ebp,ebx
  40b24e:	iret   
  40b24f:	add    dh,BYTE PTR [edx-0x3]
  40b252:	pop    ds
  40b253:	(bad)  
  40b254:	in     al,0x34
  40b256:	and    bl,al
  40b258:	sbb    esi,esp
  40b25a:	hlt    
  40b25b:	cli    
  40b25c:	lea    edx,[eax]
  40b25e:	jge    0x40b1fe
  40b260:	sub    DWORD PTR [edx+esi*2],eax
  40b263:	clc    
  40b264:	in     al,0xf2
  40b266:	stos   BYTE PTR es:[edi],al
  40b267:	add    al,BYTE PTR [edx-0x1ea332fa]
  40b26d:	(bad)  
  40b26e:	xchg   ecx,eax
  40b26f:	loop   0x40b202
  40b271:	inc    edx
  40b272:	popf   
  40b273:	shl    ebx,1
  40b275:	or     ebp,DWORD PTR [esi+0x280e942]
  40b27b:	pop    eax
  40b27c:	jmp    0x2fd:0x6fc65d11
  40b283:	add    al,0x2a
  40b285:	add    BYTE PTR [eax],0xa6
  40b288:	es in  eax,dx
  40b28a:	add    ebp,DWORD PTR [eax+0x50d2dfe]
  40b290:	(bad)  
  40b291:	jmp    0xc6c64f99
  40b296:	add    esi,esi
  40b298:	adc    al,0x62
  40b29a:	std    
  40b29b:	add    edx,DWORD PTR [edi-0x3b]
  40b29e:	jmp    DWORD PTR [ecx]
  40b2a0:	ret    
  40b2a1:	jnp    0x40b2a9
  40b2a3:	dec    ebp
  40b2a4:	shl    DWORD PTR [ebx-0x16b9c81d],1
  40b2aa:	(bad)  
  40b2ab:	mov    DWORD PTR [esi],eax
  40b2ad:	fiadd  DWORD PTR [ebx-0x63]
  40b2b0:	(bad)  
  40b2b2:	xor    eax,DWORD PTR [edi+0x2]
  40b2b5:	fimul  WORD PTR [edi]
  40b2b7:	mov    ebp,0xc204299d
  40b2bc:	mul    eax
  40b2be:	lock jp 0x40b2c3
  40b2c1:	ins    BYTE PTR es:[edi],dx
  40b2c2:	les    ebp,FWORD PTR [ecx]
  40b2c4:	push   es
  40b2c5:	sti    
  40b2c6:	ret    
  40b2c7:	mov    bh,0x6
  40b2c9:	add    BYTE PTR [eax-0x5d],ah
  40b2cc:	mov    eax,ds:0x29dab00
  40b2d1:	sub    DWORD PTR [ecx-0xe95cd63],0x71
  40b2d8:	push   ss
  40b2d9:	loopne 0x40b31d
  40b2db:	fadd   QWORD PTR [edx]
  40b2dd:	push   esp
  40b2df:	jp     0x40b2d5
  40b2e1:	aas    
  40b2e2:	jmp    0xc5bc3744
  40b2e7:	push   0xffffffd1
  40b2e9:	jae    0x40b2d8
  40b2eb:	add    BYTE PTR [ebp+0x71dbeac2],cl
  40b2f1:	push   ebp
  40b2f2:	and    al,0xed
  40b2f4:	les    eax,FWORD PTR [edx]
  40b2f6:	call   DWORD PTR [ecx+eax*2]
  40b2f9:	pushf  
  40b2fa:	inc    edx
  40b2fb:	jmp    0xfa44a969
  40b300:	fiadd  WORD PTR [edx]
  40b302:	ret    0x9eed
  40b305:	test   DWORD PTR [ebx+0x5],edi
  40b308:	popf   
  40b309:	add    dh,BYTE PTR [ebx+ebx*8+0x49]
  40b30d:	push   ebp
  40b30e:	and    al,0xe5
  40b310:	test   BYTE PTR [edx],al
  40b312:	(bad)  
  40b313:	fdiv   st(6),st
  40b315:	fwait
  40b316:	inc    edx
  40b317:	jmp    0xfa40a90d
  40b31c:	pop    esi
  40b31d:	add    al,dl
  40b31f:	in     eax,0x9e
  40b321:	cmp    BYTE PTR [ebx+0x73d073f9],cl
  40b327:	(bad)  
  40b328:	imul   edx,edi,0x73
  40b32b:	ficomp DWORD PTR [eax-0x2f]
  40b32e:	xor    esi,DWORD PTR [esi]
  40b330:	leave  
  40b331:	sar    dh,0xe6
  40b334:	jmp    0xec95a8be
  40b339:	aaa    
  40b33a:	call   0xff109cee
  40b33f:	das    
  40b340:	fdiv   QWORD PTR [esi]
  40b342:	push   edi
  40b343:	add    BYTE PTR [ebp-0x2fdb8d85],dl
  40b349:	jns    0x40b3c5
  40b34b:	and    al,0xc4
  40b34d:	jns    0x40b399
  40b34f:	and    al,0x0
  40b351:	ins    BYTE PTR es:[edi],dx
  40b352:	mov    bl,0xa2
  40b354:	pop    ecx
  40b355:	fistp  DWORD PTR [eax]
  40b357:	ret    0x740c
  40b35a:	push   ecx
  40b35b:	enter  0x8074,0x1e
  40b35f:	mov    esi,DWORD PTR [eax+eiz*2-0x4]
  40b363:	mov    WORD PTR [esi+ebp*2],es
  40b366:	sbb    esi,edx
  40b368:	dec    eax
  40b369:	lods   eax,DWORD PTR ds:[esi]
  40b36a:	jl     0x40b37e
  40b36c:	push   es
  40b36d:	cld    
  40b36e:	shl    DWORD PTR [ebx-0x9],cl
  40b371:	stos   BYTE PTR es:[edi],al
  40b372:	les    eax,FWORD PTR [edx]
  40b374:	add    BYTE PTR [edx],dl
  40b376:	mov    bh,0x72
  40b378:	and    al,0x38
  40b37a:	fsub   QWORD PTR [esi-0x1]
  40b37d:	jmp    0x40b335
  40b37f:	mov    eax,esi
  40b381:	sar    DWORD PTR [ebp+0x3fdb1272],0x24
  40b388:	or     al,0x6b
  40b38a:	aas    
  40b38b:	and    al,0xc
  40b38d:	add    dh,BYTE PTR [edi+0x43f23013]
  40b393:	add    BYTE PTR [ebx-0x3974f840],al
  40b399:	dec    edx
  40b39a:	ret    0x6
  40b39d:	jg     0x40b3a5
  40b39f:	push   esi
  40b3a0:	mov    edx,DWORD PTR [edx+eax*1-0x4a871735]
  40b3a7:	std    
  40b3a8:	inc    DWORD PTR [eax+0x7f1972c3]
  40b3ae:	std    
  40b3af:	add    dh,BYTE PTR [edi]
  40b3b1:	aaa    
  40b3b2:	mov    bh,0x72
  40b3b4:	and    al,0x0
  40b3b6:	enter  0xff09,0x15
  40b3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3bb:	int3   
  40b3bc:	add    BYTE PTR ds:[ebp-0x63f437a4],bl
  40b3c3:	loopne 0x40b442
  40b3c5:	(bad)
  40b3c8:	adc    eax,0x79b4bc0
  40b3cd:	add    BYTE PTR [ebx-0x10],cl
  40b3d0:	push   ss
  40b3d1:	call   esp
  40b3d3:	sbb    eax,0xcf0b0c28
  40b3d8:	jge    0x40b3ca
  40b3da:	mov    dh,0x69
  40b3dc:	jge    0x40b3e9
  40b3de:	fwait
  40b3df:	arpl   sp,si
  40b3e1:	cmp    DWORD PTR [edi-0xa],esp
  40b3e4:	add    al,BYTE PTR [edi-0x23]
  40b3e7:	les    ecx,FWORD PTR [esi+0x24]
  40b3ea:	cdq    
  40b3eb:	retf   
  40b3ec:	loope  0x40b420
  40b3ee:	pop    ebp
  40b3ef:	clc    
  40b3f0:	xor    edx,eax
  40b3f2:	mov    eax,ds:0x6fb601d9
  40b3f7:	fcomp  DWORD PTR [eax-0x20e48940]
  40b3fd:	lock inc edx
  40b3ff:	lods   eax,DWORD PTR ds:[esi]
  40b400:	es or  bh,al
  40b403:	(bad)  
  40b405:	jae    0x40b480
  40b407:	aad    0xd1
  40b409:	adc    al,0x71
  40b40b:	mov    bh,0x42
  40b40d:	add    BYTE PTR [esi],bl
  40b40f:	sbb    eax,0xd9a5c200
  40b414:	cmp    BYTE PTR [edi-0x2c],dl
  40b417:	lds    esp,FWORD PTR [esi]
  40b419:	or     al,0x0
  40b41b:	(bad)  
  40b41c:	mov    esp,0xe5b95c1b
  40b421:	adc    eax,0x36e926ff
  40b426:	jmp    FWORD PTR [ecx-0x43]
  40b429:	not    BYTE PTR [ebp-0x16]
  40b42c:	mov    ch,0xe
  40b42e:	push   ss
  40b42f:	pop    ebp
  40b430:	fld    DWORD PTR [ebp-0x3b99563d]
  40b436:	jae    0x40b3da
  40b438:	add    ch,BYTE PTR [esi]
  40b43a:	dec    edx
  40b43b:	xchg   BYTE PTR [esi+0x5],cl
  40b43e:	add    BYTE PTR [ebx-0x1b],cl
  40b441:	sbb    esp,eax
  40b443:	pop    ebx
  40b444:	xor    BYTE PTR [ebx-0x51844d05],ch
  40b44a:	fidiv  WORD PTR [ebx-0x66d7daf8]
  40b450:	push   ebx
  40b451:	ror    BYTE PTR [esi],cl
  40b453:	gs push esi
  40b455:	(bad)  
  40b456:	push   edi
  40b457:	lods   al,BYTE PTR ds:[esi]
  40b458:	sbb    DWORD PTR [eax+0x14cdec33],ebp
  40b45e:	sub    BYTE PTR [ecx-0x6cec0433],dl
  40b464:	inc    edx
  40b465:	jmp    0x394012f0
  40b46a:	add    al,0x76
  40b46c:	add    DWORD PTR [ebx-0x16f8a33d],edi
  40b472:	jle    0x40b41d
  40b474:	push   es
  40b475:	cmp    eax,0x1a349d46
  40b47a:	(bad)  
  40b47b:	xrelease xchg DWORD PTR [edi],ebp
  40b47e:	push   edi
  40b47f:	add    BYTE PTR [ebp+0x79],bh
  40b482:	adc    ebx,esp
  40b484:	pop    es
  40b485:	inc    edx
  40b486:	jmp    0xfabb0009
  40b48b:	push   cs
  40b48c:	mov    cl,0x26
  40b48e:	in     eax,dx
  40b48f:	pop    eax
  40b490:	cwde   
  40b491:	xor    DWORD PTR [esi],0xa8f091d2
  40b497:	test   ah,bl
  40b499:	cli    
  40b49a:	lock add ebx,DWORD PTR [ebp-0xaaad7f7]
  40b4a1:	adc    DWORD PTR [ecx],ebp
  40b4a3:	xor    bl,BYTE PTR [ebx-0x40]
  40b4a6:	in     al,0x3
  40b4a8:	test   dl,al
  40b4aa:	lock sti 
  40b4ac:	jmp    0xffd3:0xf7cae9cd
  40b4b3:	popa   
  40b4b4:	popf   
  40b4b5:	push   es
  40b4b6:	lods   al,BYTE PTR ds:[esi]
  40b4b7:	stos   BYTE PTR es:[edi],al
  40b4b8:	sahf   
  40b4b9:	xor    al,0x57
  40b4bb:	sbb    ch,ah
  40b4bd:	adc    al,al
  40b4bf:	fs push es
  40b4c1:	push   edx
  40b4c2:	bound  esi,QWORD PTR es:[edx-0x66d5551b]
  40b4c9:	jns    0x40b4bc
  40b4cb:	push   0xffffff8f
  40b4cd:	int    0x73
  40b4cf:	in     al,dx
  40b4d0:	pop    esi
  40b4d1:	add    ebp,0xffffffe1
  40b4d4:	xchg   esi,eax
  40b4d5:	int    0xfe
  40b4d7:	repnz pop edi
  40b4d9:	push   ebx
  40b4da:	lock xchg edx,eax
  40b4dc:	popf   
  40b4dd:	pop    ebx
  40b4de:	shl    cl,0x86
  40b4e1:	int    0xfe
  40b4e3:	jmp    0xbc14:0xf7786000
  40b4ea:	inc    ebx
  40b4eb:	imul   esi,DWORD PTR [eax-0x16fffa97],0x2aaae50c
  40b4f5:	mov    eax,ds:0x6c6c50da
  40b4fa:	int3   
  40b4fb:	sub    DWORD PTR [ecx],0xffffffe5
  40b4fe:	and    cl,BYTE PTR [ebx+0x429e951c]
  40b504:	jmp    0xe14882e0
  40b509:	sahf   
  40b50a:	add    bh,bh
  40b50c:	in     al,dx
  40b50d:	mov    ds:0x99e9429e,al
  40b512:	psubsb mm0,QWORD PTR [edx-0x188bfda0]
  40b519:	xchg   ecx,eax
  40b51a:	inc    ecx
  40b51b:	and    al,0xf5
  40b51d:	xchg   DWORD PTR [ebx+ecx*4],eax
  40b520:	es int3 
  40b522:	sub    al,0xc2
  40b524:	in     eax,dx
  40b525:	sahf   
  40b526:	mov    ds:0x2583d03,eax
  40b52b:	push   edi
  40b52c:	add    BYTE PTR [edi-0x42],ch
  40b52f:	add    eax,0x68
  40b532:	inc    eax
  40b533:	mov    edx,DWORD PTR ds:0x416f9c
  40b539:	aas    
  40b53a:	mov    fs,WORD PTR [edi-0x37]
  40b53d:	int3   
  40b53e:	enter  0xfffe,0x31
  40b542:	dec    ebp
  40b543:	adc    al,bh
  40b545:	(bad)  [ecx-0x72ff7c03]
  40b54b:	mov    bl,0x73
  40b54d:	or     DWORD PTR ds:0xb40806a8,esi
  40b553:	add    BYTE PTR [edi+0x75],cl
  40b556:	push   esi
  40b557:	push   edi
  40b559:	je     0x40b5c9
  40b55b:	dec    edi
  40b55c:	into   
  40b55d:	imul   ecx,DWORD PTR [ebp-0x38],0xa740006
  40b564:	mov    esi,0x46dfe8
  40b569:	call   0x3e7192
  40b56e:	in     eax,dx
  40b56f:	cld    
  40b570:	add    ebp,DWORD PTR [edi+esi*4+0x75f5e06]
  40b577:	adc    eax,0x7db7ec8b
  40b57c:	jmp    0x49ff:0x52fff7ab
  40b583:	lods   al,BYTE PTR ds:[esi]
  40b584:	adc    BYTE PTR [eax+0x44],al
  40b587:	xchg   DWORD PTR [ebx+0x8],edi
  40b58a:	jecxz  0x40b58e
  40b58c:	test   bh,dl
  40b58e:	xor    al,0x0
  40b590:	add    BYTE PTR [ebx+0xefecbe1],al
  40b596:	mov    BYTE PTR [esi+edi*8+0x7b8704ff],cl
  40b59d:	adc    ah,dh
  40b59f:	add    al,BYTE PTR [ebx+eax*8-0x100000c]
  40b5a6:	popf   
  40b5a7:	outs   dx,BYTE PTR ds:[esi]
  40b5a8:	cli    
  40b5a9:	out    0xe7,eax
  40b5ab:	sti    
  40b5ac:	iret   
  40b5ad:	inc    BYTE PTR [eax]
  40b5af:	and    BYTE PTR [edx],bl
  40b5b1:	push   esi
  40b5b2:	adc    dl,ah
  40b5b4:	push   esi
  40b5b5:	sti    
  40b5b6:	out    0xd8,eax
  40b5b8:	ror    esi,cl
  40b5ba:	(bad)  
  40b5bb:	sbb    BYTE PTR [edx],bl
  40b5bd:	add    BYTE PTR [edx+eax*1-0x34fffd26],al
  40b5c4:	es clc 
  40b5c6:	add    BYTE PTR [ebx+0xc],dl
  40b5c9:	pop    eax
  40b5ca:	push   cs
  40b5cb:	and    BYTE PTR [edx+0x5],dh
  40b5ce:	add    al,0x9d
  40b5d0:	fnstcw WORD PTR [edi-0x51]
  40b5d3:	fwait
  40b5d4:	rol    DWORD PTR [edx],1
  40b5d6:	add    BYTE PTR [esi-0x6688801e],al
  40b5dc:	cs xchg esp,eax
  40b5de:	add    esp,DWORD PTR [ecx+0x8302d9]
  40b5e4:	retf   0x8b02
  40b5e7:	loopne 0x40b5ce
  40b5e9:	jnp    0x40b62f
  40b5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ec:	repz push esp
  40b5ee:	mov    edx,0x2d79d
  40b5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f4:	div    bl
  40b5f6:	jb     0x40b599
  40b5f8:	in     al,0x95
  40b5fa:	push   esp
  40b5fb:	lods   eax,DWORD PTR ds:[esi]
  40b5fc:	lods   al,BYTE PTR ds:[esi]
  40b5fd:	xchg   ebp,eax
  40b5fe:	add    eax,0x2a96c9a
  40b603:	pop    esi
  40b604:	mov    ds:0xd99d0403,al
  40b609:	or     ecx,eax
  40b60b:	stos   DWORD PTR es:[edi],eax
  40b60c:	(bad)  
  40b60d:	sbb    ecx,eax
  40b60f:	ret    
  40b610:	repnz add eax,0xdaea000f
  40b616:	xor    eax,DWORD PTR [ebx]
  40b618:	loop   0x40b682
  40b61a:	xor    eax,0xcf1ec2e8
  40b61f:	(bad)  
  40b620:	call   0x93cb:0x6e065e02
  40b627:	sti    
  40b628:	lahf   
  40b629:	ret    
  40b62a:	mov    eax,0xdcd92db
  40b62f:	iret   
  40b630:	add    BYTE PTR [ecx],0xdf
  40b633:	ficom  DWORD PTR [edx-0x55fa2f9c]
  40b639:	xchg   ebx,eax
  40b63a:	out    0x34,al
  40b63c:	sahf   
  40b63d:	ret    
  40b63e:	cwde   
  40b63f:	ss mov ch,0xf6
  40b642:	jecxz  0x40b612
  40b644:	ret    
  40b645:	cli    
  40b646:	xchg   ebp,eax
  40b647:	add    eax,0xdc3e0247
  40b64c:	and    DWORD PTR [eax-0x3ddffc18],0x2d9de53b
  40b656:	icebp  
  40b657:	sbb    al,0xf8
  40b659:	repnz cmp edi,DWORD PTR [eax+0x57]
  40b65d:	xlat   BYTE PTR ds:[ebx]
  40b65e:	add    DWORD PTR [edx-0x63],0x72f8a635
  40b665:	cmc    
  40b666:	sub    BYTE PTR [edx+ebx*8],al
  40b669:	sub    BYTE PTR [edx-0xc3631fa],al
  40b66f:	ror    DWORD PTR [edx+eax*2-0x3b3fd517],cl
  40b676:	fadd   DWORD PTR [ebx]
  40b678:	add    dl,dh
  40b67a:	ja     0x40b672
  40b67c:	pop    es
  40b67d:	inc    esi
  40b67e:	jmp    0x40b686
  40b680:	sbb    eax,0x3ecff23
  40b685:	popf   
  40b686:	stc    
  40b687:	xchg   ebp,eax
  40b688:	jge    0x40b628
  40b68a:	(bad)  
  40b68b:	call   0x26468293
  40b690:	xor    edx,edx
  40b692:	fiadd  DWORD PTR [edx-0x1235dc31]
  40b698:	xchg   esi,eax
  40b699:	and    bh,bh
  40b69b:	(bad)  
  40b69c:	in     al,dx
  40b69d:	sahf   
  40b69e:	add    ch,BYTE PTR [edx-0x18]
  40b6a1:	rcr    edx,cl
  40b6a3:	xlat   BYTE PTR ds:[ebx]
  40b6a4:	dec    eax
  40b6a5:	sahf   
  40b6a6:	add    al,BYTE PTR [ebp+0x5eaf5529]
  40b6ac:	sub    ch,BYTE PTR [ebx+0x5f42eb89]
  40b6b2:	add    dl,BYTE PTR [edi+0x6]
  40b6b5:	in     eax,0xdd
  40b6b7:	adc    DWORD PTR [ecx-0x32847a62],ebp
  40b6bd:	(bad)  
  40b6be:	enter  0xd773,0xdb
  40b6c2:	push   ebp
  40b6c3:	and    al,0xf1
  40b6c5:	out    0x94,al
  40b6c7:	cld    
  40b6c8:	fsubp  st(0),st
  40b6ca:	jle    0x40b68b
  40b6cc:	pop    ebp
  40b6cd:	mov    dh,0x2f
  40b6cf:	mov    ebx,ecx
  40b6d1:	leave  
  40b6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d3:	inc    dh
  40b6d5:	shl    BYTE PTR [edi],1
  40b6d7:	push   edi
  40b6d8:	mov    esi,0x2911d992
  40b6dd:	add    BYTE PTR [ecx-0x611a3dd7],bl
  40b6e3:	(bad)  
  40b6e5:	repz sahf 
  40b6e7:	add    al,BYTE PTR [ecx+ebp*4+0x3e5645d5]
  40b6ee:	and    ch,bl
  40b6f0:	stos   BYTE PTR es:[edi],al
  40b6f1:	sub    ah,BYTE PTR [ecx+0x42dcff31]
  40b6f7:	repz aas 
  40b6f9:	jmp    0xe5650c67
  40b6fe:	jbe    0x40b74c
  40b700:	std    
  40b701:	outs   dx,BYTE PTR ds:[esi]
  40b702:	pop    eax
  40b703:	jl     0x40b6f4
  40b705:	ins    BYTE PTR es:[edi],dx
  40b706:	imul   edx,DWORD PTR [ebp+0x1d],0x51
  40b70a:	fcmove st,st(1)
  40b70c:	(bad)  
  40b70d:	push   esi
  40b70e:	sbb    al,0xf7
  40b710:	(bad)  
  40b711:	sbb    ah,BYTE PTR [ecx+0x5f]
  40b714:	mov    DWORD PTR [eax],eax
  40b716:	mov    dl,0xfa
  40b718:	add    eax,DWORD PTR [eax]
  40b71a:	add    al,0x5f
  40b71c:	mov    DWORD PTR [esi-0x132fe],eax
  40b722:	pop    esp
  40b723:	int    0xfc
  40b725:	(bad)  
  40b726:	mov    ebx,0x9415ff0f
  40b72b:	aam    0x3e
  40b72d:	add    BYTE PTR [ebx],ch
  40b72f:	pop    ss
  40b730:	jmp    DWORD PTR ds:0x3ecef8
  40b736:	add    DWORD PTR [edx-0x15],ecx
  40b739:	push   esi
  40b73a:	fld    TBYTE PTR [edi]
  40b73c:	adc    al,0xff
  40b73e:	push   ecx
  40b73f:	aad    0xfd
  40b741:	jne    0x40b743
  40b743:	call   0xbb492afd
  40b748:	iret   
  40b749:	push   ds
  40b74a:	push   ss
  40b74b:	test   dh,bh
  40b74d:	mov    dh,al
  40b74f:	inc    ecx
  40b750:	scas   eax,DWORD PTR es:[edi]
  40b751:	jl     0x40b76a
  40b753:	fdivr  QWORD PTR [ebx]
  40b755:	or     al,BYTE PTR [eax]
  40b757:	mov    ah,0x80
  40b759:	mov    esi,0x12a8a74
  40b75e:	push   esi
  40b75f:	dec    ebx
  40b760:	xor    DWORD PTR [edi+edi*8],ecx
  40b763:	rol    esi,1
  40b765:	out    0x16,al
  40b767:	cmp    dh,BYTE PTR [edi+0x16428bfd]
  40b76d:	pop    ebp
  40b76e:	ret    0x474
  40b771:	push   ebp
  40b772:	mov    ebp,eax
  40b774:	or     eax,0xf40758b
  40b779:	push   DWORD PTR [ebp+0x64]
  40b77c:	dec    ebx
  40b77d:	jl     0x40b78b
  40b77f:	retf   
  40b780:	xor    BYTE PTR [edi+edi*8],bl
  40b783:	push   ecx
  40b784:	fcom   QWORD PTR [edi+edi*8+0x61]
  40b788:	aam    0x55
  40b78a:	call   DWORD PTR [ecx-0x34]
  40b78d:	std    
  40b78e:	adc    eax,0x3ff4c99d
  40b793:	popf   
  40b794:	bound  eax,QWORD PTR [esi+0x1c]
  40b797:	sbb    BYTE PTR [edx],bl
  40b799:	push   esi
  40b79a:	inc    eax
  40b79b:	and    BYTE PTR [eax],dl
  40b79d:	push   edi
  40b79e:	cmp    al,0x5
  40b7a0:	add    dl,bh
  40b7a2:	dec    DWORD PTR [edx]
  40b7a4:	pop    esi
  40b7a5:	ret    
  40b7a6:	jae    0x40b7a8
  40b7a8:	into   
  40b7a9:	push   esp
  40b7aa:	adc    eax,0x8644ae53
  40b7af:	cmc    
  40b7b0:	imul   eax,edx,0x6c8d5d07
  40b7b6:	mov    ebx,DWORD PTR es:[ecx+0x7d447a20]
  40b7bd:	(bad)  
  40b7be:	les    esi,FWORD PTR [ecx-0x62]
  40b7c1:	bound  edx,QWORD PTR [esi+0x20]
  40b7c4:	aaa    
  40b7c5:	fcmove st,st(3)
  40b7c7:	je     0x40b846
  40b7c9:	loopne 0x40b81a
  40b7cb:	fbld   TBYTE PTR [ecx-0x3af7af58]
  40b7d1:	jle    0x40b79b
  40b7d3:	(bad)  
  40b7d4:	stos   BYTE PTR es:[edi],al
  40b7d5:	sbb    al,0x1f
  40b7d7:	jne    0x40b856
  40b7d9:	push   es
  40b7da:	mov    bl,0x5a
  40b7dc:	es push ds
  40b7de:	call   0xc62fab41
  40b7e3:	sbb    ebx,DWORD PTR [ebp-0x14148112]
  40b7e9:	mov    al,ds:0xee7a1450
  40b7ee:	repz (bad) 
  40b7f0:	call   0x95b581d2
  40b7f5:	js     0x40b7e7
  40b7f7:	pop    ss
  40b7f8:	mov    ebx,DWORD PTR [ecx]
  40b7fa:	add    al,0x8b
  40b7fc:	dec    ebp
  40b7fd:	pop    esi
  40b7fe:	shl    BYTE PTR [edi+0x78],cl
  40b801:	cmp    DWORD PTR [eax+0x7ed99d08],0x502c9bf
  40b80b:	add    DWORD PTR [eax],0xcaf34d30
  40b811:	test   eax,0x286840fa
  40b816:	(bad)  
  40b817:	dec    ebp
  40b818:	fist   WORD PTR [eax+0x1a31e95c]
  40b81e:	dec    ebp
  40b81f:	in     eax,dx
  40b820:	retf   0xfa89
  40b823:	inc    eax
  40b824:	sub    BYTE PTR [eax],cl
  40b826:	(bad)  
  40b827:	sub    eax,0xc427d87f
  40b82c:	lds    ebp,FWORD PTR [edx+0x67eb402]
  40b832:	xor    edi,DWORD PTR [edi-0x4a118e82]
  40b838:	retf   0x2269
  40b83b:	jb     0x40b886
  40b83d:	test   eax,0xd3e773c7
  40b842:	dec    esp
  40b843:	shl    DWORD PTR [ecx],1
  40b845:	retf   0xd94c
  40b848:	xor    al,dl
  40b84a:	dec    esp
  40b84b:	icebp  
  40b84c:	retf   0xf691
  40b84f:	test   BYTE PTR [ebx-0x63],0x79
  40b853:	sub    ebp,eax
  40b855:	and    edx,eax
  40b857:	push   ebx
  40b858:	inc    esp
  40b859:	sbb    al,dl
  40b85b:	cmp    al,0x2b
  40b85d:	test   DWORD PTR [edx-0x10],edx
  40b860:	add    ebx,DWORD PTR [ebp-0xcb05782]
  40b866:	jns    0x40b85e
  40b868:	push   ss
  40b869:	data16 sbb BYTE PTR [esi+0x3c09eb4f],0xf4
  40b871:	add    bh,ch
  40b873:	cmp    esp,DWORD PTR [edx-0x1]
  40b876:	dec    ebx
  40b877:	jl     0x40b89c
  40b879:	and    al,0xa6
  40b87b:	mov    esp,0x502406fa
  40b880:	leave  
  40b881:	pop    ebp
  40b882:	popf   
  40b883:	(bad)  
  40b886:	jle    0x40b84d
  40b888:	jae    0x40b818
  40b88a:	inc    edx
  40b88b:	lds    esi,FWORD PTR [ecx+esi*8+0x56]
  40b88f:	sar    ebx,1
  40b891:	pop    esi
  40b892:	addr16 inc ecx
  40b894:	sub    ebx,esp
  40b896:	jle    0x40b8e7
  40b898:	xlat   BYTE PTR ds:[ebx]
  40b899:	inc    edx
  40b89a:	jnp    0x40b81d
  40b89c:	test   DWORD PTR [esi+0x6d],0x2d4fee4
  40b8a3:	lock aas 
  40b8a5:	jmp    0xe968083f
  40b8aa:	sahf   
  40b8ab:	dec    edi
  40b8ac:	adc    DWORD PTR [ecx],edx
  40b8ae:	mov    ebp,0x72e8fffb
  40b8b3:	test   DWORD PTR [ebx-0x1f],esi
  40b8b6:	xlat   BYTE PTR ds:[ebx]
  40b8b7:	dec    esi
  40b8b8:	or     BYTE PTR [ecx],al
  40b8ba:	(bad)  
  40b8bb:	(bad)  
  40b8bc:	inc    BYTE PTR [esi]
  40b8be:	pop    ebx
  40b8bf:	ds sbb al,0x9e
  40b8c2:	test   BYTE PTR [ecx],ch
  40b8c4:	pop    ebp
  40b8c5:	sub    eax,edx
  40b8c7:	lds    ecx,FWORD PTR [ecx+0x56319aa6]
  40b8cd:	jb     0x40b91c
  40b8cf:	or     bh,BYTE PTR [eax-0x16]
  40b8d2:	int    0x10
  40b8d4:	fist   DWORD PTR [eax]
  40b8d6:	add    BYTE PTR [edi-0x16],dh
  40b8d9:	jne    0x40b8e0
  40b8db:	sub    al,BYTE PTR [ecx]
  40b8dd:	lahf   
  40b8de:	jmp    0xfe11:0xd77422dc
  40b8e5:	imul   esi,DWORD PTR [esi-0x26dbaeac],0xb182b599
  40b8ef:	fstp   QWORD PTR fs:[eax-0x23]
  40b8f3:	sahf   
  40b8f4:	add    al,BYTE PTR [ebp+0x42f7cda9]
  40b8fa:	shl    BYTE PTR [edx+ebp*8-0x10ffff8f],cl
  40b901:	mov    edi,0x2bc7f5e
  40b906:	add    BYTE PTR [edi-0x5d74dbc0],bh
  40b90c:	fimul  DWORD PTR [ebx-0x4a35a3fc]
  40b912:	add    al,0x7c
  40b914:	dec    ebp
  40b915:	add    eax,DWORD PTR [ecx+0x33802bf]
  40b91b:	jnp    0x40b8c4
  40b91d:	loop   0x40b974
  40b91f:	(bad)
  40b923:	or     BYTE PTR [ebp+0x41],ch
  40b926:	add    BYTE PTR [edi],ah
  40b928:	adc    ecx,DWORD PTR [ebx+0x3ecc1835]
  40b92e:	add    BYTE PTR [ebx],bh
  40b930:	daa    
  40b931:	add    dh,BYTE PTR [ebx]
  40b933:	xchg   ebx,eax
  40b934:	adc    edx,DWORD PTR [edi-0x75]
  40b937:	lods   al,BYTE PTR ds:[esi]
  40b938:	dec    ebp
  40b939:	inc    esp
  40b93a:	adc    BYTE PTR [eax],al
  40b93c:	and    al,0xba
  40b93e:	jae    0x40b948
  40b940:	mov    ds:0xd36a1035,eax
  40b945:	mov    ecx,0x327485d4
  40b94a:	sub    al,BYTE PTR [ebx]
  40b94c:	adc    ebp,ecx
  40b94e:	push   ebp
  40b94f:	push   0xffffffc8
  40b951:	dec    ebx
  40b952:	inc    esp
  40b953:	adc    BYTE PTR [edi+ecx*1-0x1],dh
  40b957:	jne    0x40b915
  40b959:	mov    ecx,0x40a69413
  40b95e:	add    BYTE PTR [ebp-0x4ffbcbbc],al
  40b964:	test   DWORD PTR [edi+0x13756a0e],esp
  40b96a:	push   edi
  40b96b:	push   edi
  40b96c:	stos   DWORD PTR es:[edi],eax
  40b96d:	mov    ecx,0x35431073
  40b972:	or     bh,bh
  40b974:	sub    ch,dh
  40b976:	mov    edi,0x2d0b9d5f
  40b97b:	pop    ebp
  40b97c:	pop    edi
  40b97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b97e:	add    dl,BYTE PTR [esi-0xe]
  40b981:	jge    0x40b9e1
  40b983:	mov    ebp,DWORD PTR [eax-0x62fffd77]
  40b989:	pusha  
  40b98a:	xor    eax,0xefe8160c
  40b98f:	mov    ch,BYTE PTR [edi-0x62e8750f]
  40b995:	fld    DWORD PTR [edx]
  40b997:	xor    ebp,DWORD PTR [edx]
  40b999:	jmp    0xbaa26561
  40b99e:	inc    esi
  40b99f:	add    al,BYTE PTR [eax]
  40b9a1:	leave  
  40b9a2:	stc    
  40b9a3:	ret    0xa0ce
  40b9a6:	fmul   st,st(2)
  40b9a8:	loope  0x40b9b7
  40b9aa:	pop    ebx
  40b9ab:	enter  0x415a,0xa0
  40b9af:	pop    esp
  40b9b0:	mov    ebx,DWORD PTR [edi-0x37]
  40b9b3:	jnp    0x40b9c6
  40b9b5:	push   0xde5e2842
  40b9ba:	xchg   BYTE PTR [ebx-0x15],bh
  40b9bd:	push   ds
  40b9be:	(bad)  
  40b9bf:	in     eax,dx
  40b9c0:	out    0x16,eax
  40b9c2:	std    
  40b9c3:	(bad)  
  40b9c4:	(bad)  
  40b9c5:	inc    cl
  40b9c7:	xchg   esi,eax
  40b9c8:	inc    edx
  40b9c9:	popf   
  40b9ca:	push   esi
  40b9cb:	ret    
  40b9cc:	je     0x40b968
  40b9ce:	xchg   edx,eax
  40b9d0:	call   0x43947b
  40b9d5:	stos   DWORD PTR es:[edi],eax
  40b9d6:	push   ds
  40b9d7:	cld    
  40b9d8:	add    BYTE PTR [esi+0x60],cl
  40b9db:	jmp    0x45a49af
  40b9e0:	push   edi
  40b9e1:	adc    bh,cl
  40b9e3:	pop    eax
  40b9e4:	add    BYTE PTR [edx+0x3933a268],dl
  40b9ea:	sbb    BYTE PTR [eax*4+0x681ac05d],al
  40b9f1:	popa   
  40b9f2:	add    bl,BYTE PTR [edx]
  40b9f4:	inc    esp
  40b9f5:	popf   
  40b9f6:	ja     0x40b998
  40b9f8:	fmul   QWORD PTR [ebp-0x3c]
  40b9fb:	xchg   ebp,eax
  40b9fc:	(bad)  
  40b9fd:	pop    ss
  40b9fe:	add    eax,0x2df97d1
  40ba03:	sbb    DWORD PTR [eax+eax*1+0x69],ebx
  40ba07:	dec    edi
  40ba08:	sub    DWORD PTR [esi*1+0x43c776c2],eax
  40ba0f:	ja     0x40b9ec
  40ba11:	wbinvd 
  40ba13:	aas    
  40ba14:	jmp    0xf79ff4c
  40ba19:	add    bl,BYTE PTR [ebp-0x65aed782]
  40ba1f:	adc    BYTE PTR [ecx],ch
  40ba21:	fst    QWORD PTR [edx+eax*1-0x17]
  40ba25:	add    ebp,DWORD PTR [ebx+0x75]
  40ba28:	mov    bl,0xd7
  40ba2a:	push   edx
  40ba2b:	sub    eax,0x3
  40ba2e:	popf   
  40ba2f:	(bad)  
  40ba31:	xor    ebx,DWORD PTR [edx+eax*1-0x3c9d418e]
  40ba38:	cmp    DWORD PTR [ebx],edx
  40ba3a:	jmp    0xd202:0x5f97d49e
  40ba41:	mov    esi,0x45b7eab
  40ba46:	popf   
  40ba47:	add    dh,BYTE PTR [edx+0x11]
  40ba4a:	or     eax,esi
  40ba4c:	test   al,0x3
  40ba4e:	xor    eax,0x9d4379de
  40ba53:	xor    ah,dh
  40ba55:	lods   eax,DWORD PTR ds:[esi]
  40ba56:	cmp    cl,dh
  40ba58:	pop    ecx
  40ba59:	inc    esp
  40ba5a:	popf   
  40ba5b:	ret    
  40ba5c:	sbb    ecx,DWORD PTR [eax]
  40ba5e:	icebp  
  40ba5f:	ds jmp 0x29af9507
  40ba65:	add    al,0x92
  40ba67:	fst    DWORD PTR [eax-0x4]
  40ba6a:	add    BYTE PTR [esi],cl
  40ba6c:	inc    ebx
  40ba6d:	add    cl,ch
  40ba6f:	pop    ebx
  40ba70:	idiv   DWORD PTR [ebx]
  40ba72:	jge    0x40ba53
  40ba74:	add    ah,BYTE PTR [ebx+0x45152d]
  40ba7a:	sahf   
  40ba7b:	cmp    BYTE PTR [edx],ch
  40ba7d:	and    al,0x1d
  40ba7f:	fld    DWORD PTR [edx]
  40ba81:	call   esp
  40ba83:	mov    ds:0xffe9426e,al
  40ba88:	dec    ecx
  40ba89:	lods   al,BYTE PTR ds:[esi]
  40ba8a:	sub    ah,BYTE PTR [ecx-0x6efe2a3f]
  40ba90:	ss inc eax
  40ba92:	jmp    0x957cb1fa
  40ba97:	fild   WORD PTR [edx]
  40ba99:	mov    ds:0x4512ad,eax
  40ba9e:	push   esi
  40ba9f:	lock sub DWORD PTR [ebp+edx*8+0x5e],eax
  40baa4:	add    bh,bh
  40baa6:	cld    
  40baa7:	call   0xac52:0x3fe9426e
  40baae:	stos   BYTE PTR es:[edi],al
  40baaf:	sahf   
  40bab0:	rcl    ebp,0x8a
  40bab3:	retf   0x426e
  40bab6:	jmp    0x4d80ba5c
  40babb:	pop    edi
  40babc:	add    dh,BYTE PTR [ebp-0x1f]
  40babf:	xchg   ecx,eax
  40bac0:	inc    DWORD PTR [ebx+0x3d]
  40bac3:	pop    edi
  40bac4:	add    dh,BYTE PTR [ecx+eiz*8-0x5f]
  40bac8:	inc    DWORD PTR [edi+0x4d]
  40bacb:	pop    edi
  40bacc:	add    dh,BYTE PTR [ecx+ebx*8+0x0]
  40bad0:	xchg   ecx,eax
  40bad1:	dec    DWORD PTR [edi+0x3d]
  40bad4:	pop    edi
  40bad5:	add    dh,BYTE PTR [ecx+esi*8-0x5b]
  40bad9:	leave  
  40bada:	jae    0x40bac1
  40badc:	push   cs
  40badd:	add    ebp,ebx
  40badf:	jmp    0x40ba6d
  40bae1:	ret    0x2e5d
  40bae4:	(bad)  
  40bae5:	retf   
  40bae6:	rol    DWORD PTR [eax],0x80
  40bae9:	add    eax,0x833c8b53
  40baee:	loope  0x40baf1
  40baf0:	shl    DWORD PTR [esi+0x62ca6e6],0x0
  40baf7:	test   BYTE PTR [edx+edx*2+0x7],al
  40bafb:	cmp    DWORD PTR [ecx-0x1b],0xffffffab
  40baff:	inc    ebx
  40bb00:	je     0x40bb06
  40bb02:	push   esi
  40bb03:	push   edi
  40bb04:	jmp    0x40bb28
  40bb06:	lods   al,BYTE PTR ds:[esi]
  40bb07:	inc    ebx
  40bb08:	inc    esp
  40bb09:	xchg   DWORD PTR [esi-0x54],edx
  40bb0c:	ja     0x40bb14
  40bb0e:	call   0x4517c7
  40bb13:	pop    edi
  40bb14:	out    0x4e,eax
  40bb16:	lods   al,BYTE PTR ds:[esi]
  40bb17:	inc    ebx
  40bb18:	inc    esp
  40bb19:	out    0x84,eax
  40bb1b:	rcl    BYTE PTR [ecx-0x3f],0x30
  40bb1f:	shr    bh,0xc1
  40bb22:	sbb    ebx,0xfffffff1
  40bb25:	mov    edx,0x43949866
  40bb2a:	add    al,ch
  40bb2c:	pop    ebx
  40bb2d:	sbb    eax,0x465c0002
  40bb32:	rol    DWORD PTR [ecx],1
  40bb34:	add    BYTE PTR [ecx+ecx*1],al
  40bb37:	add    dh,BYTE PTR [edx-0x5f]
  40bb3a:	fisub  WORD PTR [esi-0x5dfb0b09]
  40bb40:	nop
  40bb41:	inc    esp
  40bb42:	inc    ebx
  40bb43:	add    BYTE PTR [esp+eax*4-0x1217efaf],al
  40bb4a:	jae    0x40bb4b
  40bb4c:	dec    DWORD PTR [eax]
  40bb4e:	shl    DWORD PTR [ecx-0x32],0x84
  40bb52:	add    al,0xa2
  40bb54:	nop
  40bb55:	je     0x40bb9a
  40bb57:	add    BYTE PTR [ebp+0x3c044fdf],al
  40bb5d:	mov    dh,0x52
  40bb5f:	mov    edi,0x27aa9db0
  40bb64:	ret    
  40bb65:	add    eax,0x9d42981a
  40bb6a:	push   ebx
  40bb6b:	(bad)
  40bb6e:	ja     0x40bb72
  40bb70:	add    BYTE PTR [esi],bh
  40bb72:	push   cs
  40bb73:	cwde   
  40bb74:	inc    edx
  40bb75:	popf   
  40bb76:	es ret 
  40bb78:	jae    0x40bb34
  40bb7a:	add    ch,al
  40bb7c:	das    
  40bb7d:	push   0xffffffb7
  40bb7f:	or     BYTE PTR [edi],0xdd
  40bb82:	test   eax,0xfd85a332
  40bb87:	aas    
  40bb88:	add    ah,bh
  40bb8a:	int    0x96
  40bb8c:	inc    edx
  40bb8d:	popf   
  40bb8e:	inc    eax
  40bb8f:	adc    edi,DWORD PTR [edi+0x404571]
  40bb95:	(bad)  
  40bb96:	stos   DWORD PTR es:[edi],eax
  40bb97:	sub    ch,al
  40bb99:	add    BYTE PTR [esi-0x41],cl
  40bb9c:	add    al,BYTE PTR [eax]
  40bb9e:	in     eax,dx
  40bb9f:	stos   BYTE PTR es:[edi],al
  40bba0:	and    eax,ebx
  40bba2:	outs   dx,DWORD PTR ds:[esi]
  40bba3:	jmp    0xfe671067
  40bba8:	sub    ebx,0x2aba5
  40bbae:	adc    esp,DWORD PTR [edi-0x6]
  40bbb1:	add    BYTE PTR [eax+0x49805c0d],cl
  40bbb7:	ins    DWORD PTR es:[edi],dx
  40bbb8:	add    ch,BYTE PTR [edx-0x63]
  40bbbb:	adc    DWORD PTR [eax+0x7ea99ced],ecx
  40bbc1:	mov    edi,0xc010ad68
  40bbc6:	(bad)  
  40bbc7:	rcr    DWORD PTR [edx-0x78],cl
  40bbca:	add    ebp,DWORD PTR [ebp+0x2]
  40bbcd:	push   0xffffff9f
  40bbcf:	adc    DWORD PTR [ebp+ebp*8-0x40815664],ebx
  40bbd6:	xor    DWORD PTR [ebp+0x29c0459],edi
  40bbdc:	jmp    0xe0c6d3e4
  40bbe1:	shl    DWORD PTR [ebx-0x62d1c741],0xbf
  40bbe8:	repz ret 
  40bbea:	lods   al,BYTE PTR ds:[esi]
  40bbeb:	inc    edx
  40bbec:	jmp    0xbbfad581
  40bbf1:	ret    
  40bbf2:	adc    DWORD PTR [ecx-0x3f],0x24
  40bbf6:	scas   al,BYTE PTR es:[edi]
  40bbf7:	add    ch,cl
  40bbf9:	mov    BYTE PTR [edx],dh
  40bbfb:	arpl   WORD PTR [eax+esi*2],sp
  40bbfe:	add    bh,bl
  40bc00:	add    ch,dh
  40bc02:	cwde   
  40bc03:	and    cl,cl
  40bc05:	stos   BYTE PTR es:[edi],al
  40bc06:	or     BYTE PTR [ebp+0x1db06255],bl
  40bc0c:	scas   al,BYTE PTR es:[edi]
  40bc0d:	pusha  
  40bc0e:	or     BYTE PTR [ebp-0x6ab688fe],bl
  40bc14:	add    DWORD PTR [edx],ebx
  40bc16:	pop    edx
  40bc17:	ror    BYTE PTR [edi],cl
  40bc19:	mov    dh,BYTE PTR gs:[edx]
  40bc1c:	mov    edi,0x926983e8
  40bc21:	cwde   
  40bc22:	inc    edi
  40bc23:	popf   
  40bc24:	add    esi,esp
  40bc26:	mov    DWORD PTR [esi],esp
  40bc28:	add    ch,cl
  40bc2a:	add    ecx,esi
  40bc2c:	(bad)  
  40bc2e:	ret    0x8b80
  40bc31:	gs xor al,0x8e
  40bc34:	inc    edx
  40bc35:	jmp    0x326aedca
  40bc3a:	ret    
  40bc3b:	repz test eax,0x29c51d0
  40bc41:	ins    BYTE PTR es:[edi],dx
  40bc42:	mov    edx,ebp
  40bc44:	mov    esp,0xf36ac315
  40bc49:	sub    BYTE PTR [ebp+ebp*2-0x41],dl
  40bc4d:	cmp    eax,0xe9424e3c
  40bc52:	push   ebx
  40bc53:	ret    0x14
  40bc56:	cdq    
  40bc57:	xchg   ebx,eax
  40bc58:	inc    edx
  40bc59:	add    BYTE PTR [ecx+ebx*8+0x35],ah
  40bc5d:	sub    esi,DWORD PTR [edx-0x2c]
  40bc60:	dec    esi
  40bc61:	lea    esp,[eax+eax*1-0x1a]
  40bc65:	mov    ebp,0x52eed6fe
  40bc6a:	call   0x440a84
  40bc6f:	ins    BYTE PTR es:[edi],dx
  40bc70:	pop    esi
  40bc71:	xor    dl,BYTE PTR [edi]
  40bc73:	mov    esi,0x2aac3a85
  40bc78:	mov    eax,ds:0x5db1848f
  40bc7d:	mov    ebp,0x175e39fe
  40bc82:	mov    al,0xfb
  40bc84:	fiadd  WORD PTR [edx]
  40bc86:	test   DWORD PTR [ecx-0x597cf66e],ebp
  40bc8c:	mov    ds:0xf2868341,al
  40bc91:	xor    BYTE PTR [esi-0x24d6c56e],bl
  40bc97:	in     eax,0x2b
  40bc99:	xor    DWORD PTR [ebx-0x6],0xec0902de
  40bca0:	ds push 0x42
  40bca3:	jmp    0xed36cd9b
  40bca8:	(bad)  
  40bca9:	imul   eax,DWORD PTR [edx-0x17],0x680a3699
  40bcb0:	lods   eax,DWORD PTR ds:[esi]
  40bcb1:	loop   0x40bc5e
  40bcb3:	stos   BYTE PTR es:[edi],al
  40bcb4:	sahf   
  40bcb5:	mov    ds:0x5d9ee90e,al
  40bcba:	pop    esi
  40bcbb:	jns    0x40bc56
  40bcbd:	pop    ecx
  40bcbe:	leave  
  40bcbf:	sub    esp,DWORD PTR [edx+0x32725502]
  40bcc5:	sub    ebx,0xfffffffd
  40bcc8:	add    BYTE PTR [edx+eax*1+0x5574ba00],ah
  40bccf:	mov    eax,DWORD PTR [eax]
  40bcd1:	loope  0x40bd48
  40bcd3:	adc    BYTE PTR [eax-0x4c],al
  40bcd6:	jmp    0x248823a
  40bcdb:	call   edi
  40bcdd:	neg    esp
  40bcdf:	push   0x51c68720
  40bce4:	mov    esi,0x4239d8
  40bce9:	fimul  DWORD PTR [ecx+0x4739541b]
  40bcef:	add    BYTE PTR [esi+0x17],ah
  40bcf2:	and    al,ch
  40bcf4:	inc    ebx
  40bcf5:	je     0x40bce2
  40bcf7:	mov    ds:0x474958,al
  40bcfc:	mov    DWORD PTR [ecx-0x53],esp
  40bcff:	ret    0x7443
  40bd02:	ret    0x3413
  40bd05:	push   0x41
  40bd07:	add    BYTE PTR [ebx-0xa9edf8],al
  40bd0d:	or     ecx,DWORD PTR [ebp-0x3ce2134d]
  40bd13:	std    
  40bd14:	call   0x407c31
  40bd19:	mov    edi,0x38a37c46
  40bd1e:	aas    
  40bd1f:	inc    edx
  40bd20:	add    ch,bh
  40bd22:	outs   dx,DWORD PTR ds:[esi]
  40bd23:	(bad)  
  40bd24:	push   DWORD PTR [esi+ecx*4]
  40bd27:	les    ecx,FWORD PTR [eax+0x7549410c]
  40bd2d:	add    BYTE PTR [esi-0x73],ch
  40bd30:	mov    bl,0xda
  40bd32:	pop    edi
  40bd33:	ret    
  40bd34:	std    
  40bd35:	call   0x407cf2
  40bd3a:	or     DWORD PTR [edi],esi
  40bd3c:	add    BYTE PTR [eax],al
  40bd3e:	add    al,0xef
  40bd40:	adc    edx,DWORD PTR [eax+0x27]
  40bd43:	mov    WORD PTR [ebx-0x30],?
  40bd46:	ja     0x40bd16
  40bd48:	std    
  40bd49:	call   0x3383eb
  40bd4e:	shl    BYTE PTR ds:0x30a87dc4,cl
  40bd54:	retf   0x354f
  40bd57:	xor    esi,DWORD PTR [edx+0x42]
  40bd5a:	popf   
  40bd5b:	es xchg edi,eax
  40bd5e:	mov    al,0xab
  40bd60:	mov    edi,0xb1eab54f
  40bd65:	add    BYTE PTR [ebp+0x300ec326],bl
  40bd6b:	push   0xfffffffc
  40bd6d:	ret    0xa308
  40bd70:	repz mov edi,0xc7863303
  40bd76:	cmp    BYTE PTR [ebp-0x41],0xb8
  40bd7a:	mov    ebp,DWORD PTR [ebx+0x27200002]
  40bd80:	(bad)  
  40bd82:	push   0x65
  40bd84:	mov    dl,BYTE PTR [edi]
  40bd86:	(bad)  
  40bd88:	ss cli 
  40bd8a:	(bad)  
  40bd8d:	inc    eax
  40bd8e:	popf   
  40bd8f:	pop    esi
  40bd90:	xchg   bh,al
  40bd92:	add    BYTE PTR [eax-0x7b],cl
  40bd95:	mov    edi,0x6ed7424f
  40bd9a:	adc    ebp,ebx
  40bd9c:	test   eax,0x2d354c83
  40bda1:	push   esp
  40bda2:	push   ebx
  40bda3:	mov    bh,0xa8
  40bda5:	push   ebx
  40bda6:	push   0xffffff9c
  40bda8:	rol    DWORD PTR [edx],1
  40bdaa:	add    BYTE PTR [ebp-0x1a7b71d7],bl
  40bdb0:	dec    esi
  40bdb1:	sar    dh,0x6d
  40bdb4:	in     al,dx
  40bdb5:	inc    ebp
  40bdb6:	cld    
  40bdb7:	add    ebp,DWORD PTR [ebx-0x2105fffe]
  40bdbd:	repnz adc DWORD PTR [ebp-0x57],ebx
  40bdc1:	mov    ebp,edi
  40bdc3:	push   ds
  40bdc4:	add    esp,DWORD PTR [edi]
  40bdc6:	shr    BYTE PTR [esi-0x1d],0xb9
  40bdca:	mov    fs,WORD PTR [ecx-0x42]
  40bdcd:	mov    eax,0x5bbe49c0
  40bdd2:	xchg   dl,ah
  40bdd4:	mov    ebp,0x5452c005
  40bdd9:	(bad)  
  40bdda:	adc    eax,0x3a91071
  40bddf:	sbb    bl,al
  40bde1:	je     0x40bdec
  40bde3:	push   ss
  40bde4:	inc    esi
  40bde5:	in     eax,0x8d
  40bde7:	pop    ecx
  40bde8:	mov    edx,0x62b1bf36
  40bded:	cli    
  40bdee:	inc    ebx
  40bdef:	popf   
  40bdf0:	xchg   DWORD PTR [ebx],esp
  40bdf2:	mov    esp,0x38c5ba1f
  40bdf7:	add    BYTE PTR [ecx-0x60c81896],bl
  40bdfd:	out    dx,eax
  40bdfe:	test   al,0xd5
  40be00:	jp     0x40bdf1
  40be02:	lahf   
  40be03:	es adc al,0x8e
  40be06:	sub    ecx,esp
  40be08:	popa   
  40be09:	mov    ebx,0xca21919d
  40be0e:	xchg   ebx,eax
  40be0f:	mov    edi,0x636daa53
  40be14:	popf   
  40be15:	add    dh,BYTE PTR [ecx+ecx*4+0x5a]
  40be19:	mov    ebp,0x9a42bf7d
  40be1e:	call   0x7d6b5b27
  40be23:	imul   ebx,edi,0x2
  40be26:	jo     0x40be49
  40be28:	xor    eax,0x2403a967
  40be2d:	sbb    eax,0x25f6fed
  40be32:	dec    esi
  40be33:	xlat   BYTE PTR ds:[ebx]
  40be34:	add    ch,BYTE PTR [eax]
  40be36:	stos   BYTE PTR es:[edi],al
  40be37:	add    al,0x9d
  40be39:	sub    ch,BYTE PTR [ecx+0x25d35]
  40be3f:	ss xchg esp,eax
  40be41:	rcl    BYTE PTR [ecx],cl
  40be43:	test   eax,0x9dc2f79e
  40be48:	xchg   ecx,eax
  40be49:	xchg   edi,esi
  40be4b:	adc    edi,edx
  40be4d:	cmp    edi,0x320107e8
  40be53:	sub    edi,eax
  40be55:	mov    edi,0xe1fee73
  40be5a:	push   esp
  40be5b:	inc    ecx
  40be5c:	add    BYTE PTR [esi+0x2],bl
  40be5f:	add    DWORD PTR [ecx],eax
  40be61:	out    0x3c,eax
  40be63:	add    cl,ch
  40be65:	dec    ebx
  40be66:	pop    esp
  40be67:	mov    al,0xe8
  40be69:	inc    edi
  40be6a:	leave  
  40be6b:	ret    0x2634
  40be6e:	scas   al,BYTE PTR es:[edi]
  40be6f:	or     ch,0x56
  40be72:	sub    ebx,0xffffffed
  40be75:	mov    ds:0xeb1a0002,eax
  40be7a:	push   ecx
  40be7b:	mov    edi,DWORD PTR [ecx+ebp*4]
  40be7e:	cmc    
  40be7f:	fisubr DWORD PTR [edx+0x3b]
  40be82:	add    ecx,DWORD PTR [ecx+0x4275a2cc]
  40be88:	jmp    0xfcc9bf32
  40be8d:	outs   dx,BYTE PTR ds:[esi]
  40be8f:	inc    edx
  40be90:	jmp    0x8148eda8
  40be95:	push   ebx
  40be96:	mov    ebp,0x7a1a86fe
  40be9b:	je     0x40be83
  40be9d:	sub    al,0x7a
  40be9f:	call   0x43585b
  40bea4:	sbb    bh,BYTE PTR [ecx+0x2]
  40bea7:	add    cl,dh
  40bea9:	sahf   
  40beaa:	push   ebp
  40beab:	push   esp
  40bead:	push   esi
  40beae:	adc    al,0x40
  40beb0:	jmp    0xaaeb9834
  40beb5:	sahf   
  40beb6:	std    
  40beb7:	ret    0x4100
  40beba:	adc    eax,0x13b815ff
  40bebf:	inc    eax
  40bec0:	add    BYTE PTR [eax],al
  40bec2:	daa    
  40bec3:	test   ax,0xf443
  40bec7:	lea    ebx,[ebx]
  40bec9:	in     al,0x4f
  40becb:	inc    esp
  40becc:	add    bl,ch
  40bece:	ret    
  40becf:	mov    edi,0x445fe403
  40bed4:	add    BYTE PTR [ecx],al
  40bed6:	push   ds
  40bed7:	or     eax,0x447180b8
  40bedc:	add    BYTE PTR [ecx+0x2c],bl
  40bedf:	sbb    eax,0x46bcc083
  40bee4:	jne    0x40bede
  40bee6:	aas    
  40bee7:	mov    edx,0xfe7412f2
  40beec:	fadd   DWORD PTR [bx+di+0x43]
  40bef0:	add    bh,bh
  40bef2:	push   edx
  40bef3:	out    0x3b,al
  40bef5:	mov    eax,0xd6fefeb7
  40befa:	or     DWORD PTR [ebx+0x24],ecx
  40befd:	adc    BYTE PTR [esi+eiz*8+0x5840201],dl
  40bf04:	mov    DWORD PTR ds:0x423690,ebx
  40bf0a:	cmp    edx,DWORD PTR [ecx]
  40bf0c:	fcom   QWORD PTR ds:0x458afe84
  40bf12:	cmp    al,0x6d
  40bf14:	loop   0x40bf11
  40bf16:	sbb    esi,DWORD PTR [edi-0x7e]
  40bf19:	rol    BYTE PTR [eax-0x7e],0x39
  40bf1d:	sti    
  40bf1e:	xor    DWORD PTR [edx+0x59e5351],esp
  40bf24:	push   0x43680058
  40bf29:	add    bh,bh
  40bf2b:	and    DWORD PTR ds:0x82044011,edi
  40bf31:	or     eax,DWORD PTR [eax]
  40bf33:	popf   
  40bf34:	pushf  
  40bf35:	inc    eax
  40bf36:	add    BYTE PTR [edx],cl
  40bf38:	mov    WORD PTR [edi-0x854a14f],?
  40bf3e:	ret    0x1faa
  40bf41:	pusha  
  40bf42:	push   edx
  40bf44:	out    dx,eax
  40bf45:	stos   DWORD PTR es:[edi],eax
  40bf46:	sub    al,0xe9
  40bf48:	out    0xbc,eax
  40bf4a:	sbb    ebp,0xffffffaf
  40bf4d:	xchg   BYTE PTR [esi-0x26],cl
  40bf50:	pop    ss
  40bf51:	mov    ebp,0xaaa348fe
  40bf56:	pop    ebx
  40bf57:	leave  
  40bf58:	pop    es
  40bf59:	mov    ebp,0x86afdd83
  40bf5e:	ds mov edx,0x88febbb7
  40bf64:	dec    edi
  40bf65:	adc    al,BYTE PTR [eax-0x63]
  40bf68:	dec    esp
  40bf69:	cwde   
  40bf6a:	scas   eax,DWORD PTR es:[edi]
  40bf6b:	pop    esi
  40bf6c:	stos   DWORD PTR es:[edi],eax
  40bf6d:	idiv   edx
  40bf6f:	adc    bl,bh
  40bf71:	mov    BYTE PTR [ecx+ecx*8],dl
  40bf74:	jge    0x40bfb5
  40bf76:	add    BYTE PTR [ebp-0x4f],dh
  40bf79:	jecxz  0x40bf7c
  40bf7b:	popf   
  40bf7c:	add    al,0xc1
  40bf7e:	push   cs
  40bf7f:	and    edi,edx
  40bf81:	mov    ebx,0x70572fe
  40bf86:	xor    al,0x39
  40bf88:	in     eax,dx
  40bf89:	add    esp,DWORD PTR [ebx+0x405c6500]
  40bf8f:	add    BYTE PTR [esi+0x202f3564],dl
  40bf95:	dec    esi
  40bf96:	out    0x9f,eax
  40bf98:	pushf  
  40bf99:	test   eax,0xad4ce802
  40bf9e:	add    al,BYTE PTR [eax]
  40bfa0:	into   
  40bfa1:	xchg   DWORD PTR es:[ebx],esp
  40bfa4:	pusha  
  40bfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa6:	add    al,BYTE PTR [eax]
  40bfa8:	int    0x28
  40bfaa:	imul   BYTE PTR [ebx]
  40bfac:	icebp  
  40bfad:	add    ch,BYTE PTR [edx-0x6594abfd]
  40bfb3:	inc    eax
  40bfb4:	popf   
  40bfb5:	sub    dh,BYTE PTR [ecx+0x73]
  40bfb8:	pop    edi
  40bfb9:	add    dl,BYTE PTR [ecx+0x6c942e11]
  40bfbf:	stos   DWORD PTR es:[edi],eax
  40bfc0:	mov    esp,0xf203eae0
  40bfc5:	sub    eax,0xb659abe1
  40bfca:	sub    eax,0xf5c31ebc
  40bfcf:	xchg   ebx,ebp
  40bfd1:	mov    eax,0x3dc8bc1d
  40bfd6:	loope  0x40bfd9
  40bfd8:	push   ecx
  40bfd9:	inc    DWORD PTR [eax]
  40bfdb:	mov    cl,0xc6
  40bfdd:	mov    bh,0x5
  40bfdf:	test   al,0x9c
  40bfe1:	jb     0x40bfca
  40bfe3:	stc    
  40bfe4:	fild   WORD PTR [edi]
  40bfe6:	pop    esp
  40bfe7:	ret    
  40bfe8:	dec    ebx
  40bfe9:	pop    eax
  40bfea:	xchg   edx,eax
  40bfeb:	mov    BYTE PTR [ecx+0xab55],bh
  40bff1:	popf   
  40bff2:	dec    ebp
  40bff3:	jb     0x40bf9d
  40bff5:	pop    ds
  40bff6:	sahf   
  40bff7:	rol    BYTE PTR [ebp+0x3e5a276],1
  40bffd:	popf   
  40bffe:	push   eax
  40bfff:	push   ds
  40c000:	mov    DWORD PTR [esi],esi
  40c002:	fimul  WORD PTR [eax+0x6]
  40c005:	popf   
  40c006:	add    al,cl
  40c008:	sbb    DWORD PTR [edi-0x117716fe],0xffffffde
  40c00f:	sbb    ch,BYTE PTR [eax+edx*2+0x2603e7fa]
  40c016:	or     BYTE PTR [esi+0x3029d05],0x6
  40c01d:	adc    BYTE PTR [esi+0x2a088cc],al
  40c023:	jmp    0x6df27c
  40c028:	loope  0x40c03f
  40c02a:	dec    ebx
  40c02b:	and    al,0xd5
  40c02d:	jbe    0x40bfc9
  40c02f:	scas   eax,DWORD PTR es:[edi]
  40c030:	stos   BYTE PTR es:[edi],al
  40c031:	sahf   
  40c032:	stos   BYTE PTR es:[edi],al
  40c033:	mov    al,0x4
  40c035:	fwait
  40c036:	add    bh,BYTE PTR [ecx+0x2a047]
  40c03c:	(bad)  
  40c03d:	fistp  QWORD PTR [edi+edi*8+0x75495ee8]
  40c044:	inc    eax
  40c045:	and    al,0x43
  40c047:	and    al,0xe1
  40c049:	dec    esi
  40c04a:	sub    al,0x1
  40c04c:	rol    DWORD PTR [esi+0x66],0x42
  40c050:	jmp    0xf898ce6c
  40c055:	add    BYTE PTR [esi+0x2],bl
  40c058:	mov    ebx,DWORD PTR [ecx]
  40c05a:	sbb    al,0xad
  40c05c:	jae    0x40c055
  40c05e:	pop    es
  40c05f:	push   cs
  40c060:	sbb    al,bl
  40c062:	pop    esi
  40c063:	add    bh,BYTE PTR ds:0x29936
  40c069:	jl     0x40c004
  40c06b:	push   eax
  40c06c:	call   esp
  40c06e:	adc    DWORD PTR ds:[eax-0x17],eax
  40c072:	xchg   ebx,eax
  40c073:	mov    al,0x5e
  40c075:	jb     0x40c0d3
  40c077:	pop    eax
  40c078:	mov    ecx,esp
  40c07a:	in     eax,0xc0
  40c07c:	add    ebp,ecx
  40c07e:	in     eax,dx
  40c07f:	mov    ebx,ebp
  40c081:	push   0x1a
  40c083:	scas   al,BYTE PTR es:[edi]
  40c084:	or     ch,0x1a
  40c087:	(bad)  
  40c088:	(bad)  
  40c089:	call   0x5bc485d
  40c08e:	xchg   ecx,eax
  40c08f:	stos   BYTE PTR es:[edi],al
  40c090:	add    dl,ch
  40c092:	sahf   
  40c093:	add    bh,bh
  40c095:	adc    al,0xa9
  40c097:	mov    DWORD PTR [ebp+eiz*8+0x15],ecx
  40c09b:	and    BYTE PTR [ebx],0xd4
  40c09e:	inc    edx
  40c09f:	mov    dh,0xfe
  40c0a1:	add    BYTE PTR [ecx+edi*2+0x3ce02c33],dl
  40c0a8:	add    BYTE PTR [ebx-0x6797f987],cl
  40c0ae:	fs cmp al,0x0
  40c0b1:	call   0x41646e
  40c0b6:	push   ebx
  40c0b7:	test   ebx,esp
  40c0b9:	pop    ebp
  40c0ba:	add    BYTE PTR [esi+0x7f54fffd],dh
  40c0c0:	pop    ebp
  40c0c1:	sub    esp,0x75ff53cc
  40c0c7:	add    BYTE PTR [ebx+0x79049843],cl
  40c0cd:	jae    0x40c0d7
  40c0cf:	pop    esp
  40c0d0:	sbb    eax,0x8a83fffe
  40c0d5:	inc    ebx
  40c0d6:	cwde   
  40c0d7:	adc    al,0xe8
  40c0d9:	jmp    DWORD PTR [edi+0xc]
  40c0dc:	push   ds
  40c0dd:	inc    edx
  40c0de:	add    BYTE PTR [ebx+0x4115812],dl
  40c0e4:	add    cl,BYTE PTR [ebx+0x727339f0]
  40c0ea:	sbb    ebx,DWORD PTR [esi]
  40c0ec:	jns    0x40c142
  40c0ee:	dec    ecx
  40c0f0:	adc    DWORD PTR [ebx],edx
  40c0f2:	inc    eax
  40c0f3:	test   BYTE PTR [edi+edi*4],dh
  40c0f6:	je     0x40c081
  40c0f8:	lods   al,BYTE PTR ds:[esi]
  40c0f9:	jle    0x40c0fb
  40c0fb:	je     0x40c0fe
  40c0fd:	je     0x40c10d
  40c0ff:	retf   0x137b
  40c102:	mov    al,ds:0x33004156
  40c107:	inc    esp
  40c108:	pop    eax
  40c109:	leave  
  40c10a:	ret    0x17c
  40c10d:	mov    eax,esi
  40c10f:	pop    edi
  40c110:	jae    0x40c165
  40c112:	mov    esi,DWORD PTR [eax]
  40c114:	push   ecx
  40c115:	push   ecx
  40c116:	mov    eax,DWORD PTR [ecx-0x5b]
  40c119:	stos   BYTE PTR es:[edi],al
  40c11a:	inc    ebx
  40c11b:	popf   
  40c11c:	stos   DWORD PTR es:[edi],eax
  40c11d:	push   ebx
  40c11e:	push   edi
  40c11f:	add    BYTE PTR ds:0x9d01e25a,dh
  40c125:	js     0x40c102
  40c127:	mov    al,bl
  40c129:	cmp    esp,0xffffffc2
  40c12c:	mov    al,0xa4
  40c12e:	repz mov edi,0x35e34
  40c134:	popf   
  40c135:	rol    DWORD PTR [ebx+edx*2],1
  40c138:	outs   dx,BYTE PTR ds:[esi]
  40c139:	es aas 
  40c13b:	or     BYTE PTR [ebp+0x74],ch
  40c13e:	mov    bh,0x74
  40c140:	xchg   ebp,eax
  40c141:	and    edx,DWORD PTR [edi-0x1]
  40c144:	xchg   DWORD PTR [ecx+edi*4],edi
  40c147:	adc    al,0x39
  40c149:	fld    DWORD PTR [edx+0x0]
  40c14c:	and    bl,ch
  40c14e:	cs add al,0xdb
  40c151:	pop    ebp
  40c152:	mov    bh,0x0
  40c154:	cld    
  40c155:	retf   0x4266
  40c158:	popf   
  40c159:	sub    BYTE PTR [ebx+edx*1+0x56066694],ah
  40c160:	push   ss
  40c161:	into   
  40c162:	mov    ss,WORD PTR [ecx]
  40c164:	pop    ebp
  40c165:	stos   DWORD PTR es:[edi],eax
  40c166:	push   ebx
  40c167:	mov    eax,0x45477d
  40c16c:	jbe    0x40c114
  40c16e:	out    dx,al
  40c16f:	stos   DWORD PTR es:[edi],eax
  40c170:	pop    esi
  40c171:	stos   DWORD PTR es:[edi],eax
  40c172:	sub    al,0x4
  40c174:	sahf   
  40c175:	out    0xbb,al
  40c177:	mov    eax,fs
  40c179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c17a:	push   ecx
  40c17b:	push   eax
  40c17c:	repnz int3 
  40c17e:	rol    BYTE PTR [ebp+ebx*2+0xfe054f],1
  40c185:	loopne 0x40c143
  40c187:	push   ebx
  40c188:	mov    eax,0x4385a9
  40c18d:	mov    dh,0xa6
  40c18f:	out    dx,al
  40c190:	stos   DWORD PTR es:[edi],eax
  40c191:	fisubr WORD PTR [ecx+0x29e042c]
  40c197:	sub    al,0xbc
  40c199:	and    DWORD PTR [esi-0x5f],eax
  40c19c:	push   edx
  40c19d:	in     eax,dx
  40c19e:	dec    ebx
  40c19f:	xchg   esi,eax
  40c1a0:	shl    eax,1
  40c1a2:	jge    0x40c14c
  40c1a4:	cs sahf 
  40c1a6:	mov    ah,0x2b
  40c1a8:	mov    ecx,0x757cee33
  40c1ad:	fild   WORD PTR [edx]
  40c1af:	xor    DWORD PTR [edi-0x4716c014],esi
  40c1b5:	xchg   ecx,eax
  40c1b6:	mov    edx,0xac25abbd
  40c1bb:	pop    ebp
  40c1bc:	mov    eax,0x4dbc31e
  40c1c1:	add    edi,DWORD PTR [esi]
  40c1c3:	dec    esi
  40c1c4:	mov    eax,0x447a02b1
  40c1c9:	popf   
  40c1ca:	jp     0x40c1b4
  40c1cc:	je     0x40c22d
  40c1ce:	add    dh,BYTE PTR [esi]
  40c1d0:	cs in  eax,0x4b
  40c1d3:	inc    ecx
  40c1d4:	sub    edx,edx
  40c1d6:	mov    bl,0x25
  40c1d8:	jg     0x40c1ec
  40c1da:	cs jmp 0xc256:0xd0b361b9
  40c1e2:	cs hlt 
  40c1e4:	sub    ebx,DWORD PTR [ebp+0x3e882]
  40c1ea:	dec    esi
  40c1eb:	mov    bl,0x73
  40c1ed:	mov    ebx,0xc7dbb353
  40c1f2:	mov    WORD PTR [edx-0x17],es
  40c1f5:	stos   BYTE PTR es:[edi],al
  40c1f6:	shl    DWORD PTR [ebx+0x3d27b7e5],cl
  40c1fc:	loope  0x40c259
  40c1fe:	push   esp
  40c1ff:	shl    al,0x3
  40c202:	test   DWORD PTR [edx],0x7076f1ce
  40c208:	sub    DWORD PTR [edx+esi*2],eax
  40c20b:	or     eax,0x2dd12d9
  40c210:	add    BYTE PTR [esi-0x493fe7bf],bh
  40c216:	jns    0x40c1d8
  40c218:	push   esp
  40c219:	je     0x40c1a0
  40c21b:	fimul  WORD PTR [ebx+0x1fef568]
  40c221:	jmp    0x24ce0ec4
  40c226:	jge    0x40c27a
  40c228:	lea    ebp,[ecx+eax*1]
  40c22b:	inc    ebx
  40c22c:	(bad)  
  40c22d:	and    al,0x7d
  40c22f:	jmp    0x9114:0xb39ee8ff
  40c236:	scas   eax,DWORD PTR es:[edi]
  40c237:	inc    edx
  40c238:	add    BYTE PTR [ecx+ebx*8+0x2d],ch
  40c23c:	or     eax,0xb7aacc6c
  40c241:	lahf   
  40c242:	cdq    
  40c243:	add    al,BYTE PTR [eax]
  40c245:	inc    ecx
  40c246:	idiv   BYTE PTR [edx]
  40c248:	add    ecx,ebp
  40c24a:	daa    
  40c24b:	out    dx,al
  40c24c:	xor    edx,edi
  40c24e:	add    BYTE PTR [esi+0x2],bl
  40c251:	push   ebx
  40c252:	sahf   
  40c253:	addr16 pop ss
  40c255:	add    ecx,ebp
  40c257:	sahf   
  40c258:	dec    edi
  40c259:	xor    esp,DWORD PTR [esi]
  40c25b:	and    al,0x7e
  40c25d:	outs   dx,DWORD PTR ds:[esi]
  40c25e:	pop    ds
  40c25f:	adc    dh,BYTE PTR [esi+edx*2-0x7d32f447]
  40c266:	and    eax,0x798485a5
  40c26b:	call   0x19dac123
  40c270:	xchg   esi,eax
  40c271:	outs   dx,DWORD PTR ds:[esi]
  40c272:	imul   ebx
  40c274:	mov    bl,0xfe
  40c276:	aam    0x5a
  40c278:	adc    al,0x40
  40c27a:	jmp    0xf0b5349c
  40c27f:	out    dx,eax
  40c280:	jg     0x40c206
  40c282:	pop    ecx
  40c283:	dec    ebx
  40c284:	mov    cl,0xfe
  40c286:	ret    0x1aa7
  40c289:	add    BYTE PTR [eax],al
  40c28b:	test   DWORD PTR [esi],eax
  40c28d:	add    BYTE PTR [ebp-0x2cdff],cl
  40c293:	sub    eax,DWORD PTR [ecx+0x50]
  40c296:	push   DWORD PTR [edx]
  40c298:	test   edx,eax
  40c29a:	or     al,0xc9
  40c29c:	repnz mov edi,DWORD PTR [eax+0x5e5]
  40c2a3:	sbb    al,0xd9
  40c2a5:	inc    ebp
  40c2a6:	add    DWORD PTR [ebx+edi*2+0x73],eax
  40c2aa:	inc    eax
  40c2ab:	fdiv   QWORD PTR [ebx]
  40c2ad:	(bad)  
  40c2ae:	push   DWORD PTR [esi+ebx*2]
  40c2b1:	rol    BYTE PTR [edi+0x0],1
  40c2b4:	xor    eax,0xb4c68b06
  40c2b9:	jnp    0x40c2fe
  40c2bb:	mov    WORD PTR [ecx+edi*1+0x1],ss
  40c2bf:	add    ah,dh
  40c2c1:	test   DWORD PTR [ecx-0x288ea339],ecx
  40c2c7:	add    DWORD PTR [edi+edi*2],eax
  40c2ca:	inc    ebx
  40c2cb:	pop    esp
  40c2cc:	imul   esi,edx,0x567b837
  40c2d2:	add    BYTE PTR [eax],al
  40c2d4:	pop    esp
  40c2d5:	sub    BYTE PTR [esi+0x1],al
  40c2d8:	les    edi,FWORD PTR [edx+0x43]
  40c2db:	jo     0x40c2f1
  40c2dd:	fadd   QWORD PTR [eax]
  40c2df:	xor    esi,DWORD PTR [edx+0x38458d3f]
  40c2e5:	push   ebp
  40c2e6:	push   edi
  40c2e7:	mov    DWORD PTR [ecx],edx
  40c2e9:	jmp    0x6873:0x7e347d88
  40c2f0:	stos   DWORD PTR es:[edi],eax
  40c2f1:	add    DWORD PTR [eax+0x10],esi
  40c2f4:	hlt    
  40c2f5:	add    eax,0x1511c085
  40c2fa:	lea    eax,[ebp-0x14]
  40c2fd:	push   esi
  40c2fe:	push   esi
  40c2ff:	(bad)  
  40c300:	shr    DWORD PTR [esi+0x569d8d4e],0x34
  40c307:	call   0x4338e5
  40c30c:	xchg   BYTE PTR [edi+edi*2-0x43e39539],bl
  40c313:	(bad)  
  40c314:	jmp    0x106baed
  40c319:	rcr    eax,cl
  40c31b:	push   edx
  40c31c:	dec    eax
  40c31e:	adc    eax,DWORD PTR [edi+0x215b97c]
  40c324:	pop    eax
  40c325:	xor    eax,0x9d000605
  40c32a:	sub    BYTE PTR [esi],0x68
  40c32d:	inc    ebp
  40c32e:	test   eax,0x342afeb2
  40c333:	aas    
  40c334:	ins    BYTE PTR es:[edi],dx
  40c335:	adc    al,0xde
  40c337:	and    ecx,DWORD PTR [ebp-0x4c842470]
  40c33d:	popf   
  40c33e:	fwait
  40c33f:	add    ch,al
  40c341:	pusha  
  40c342:	push   0x266e0001
  40c347:	jg     0x40c3b8
  40c349:	sti    
  40c34a:	aas    
  40c34b:	mov    ch,0x4f
  40c34d:	xchg   DWORD PTR [ebp+0x636d7c85],ebx
  40c353:	stos   BYTE PTR es:[edi],al
  40c354:	cmp    edx,DWORD PTR [ebx-0x5a95fd65]
  40c35a:	dec    esi
  40c35b:	aas    
  40c35c:	pop    esp
  40c35d:	ins    DWORD PTR es:[edi],dx
  40c35e:	xchg   ebp,eax
  40c35f:	add    BYTE PTR [ebp-0x17a580b8],cl
  40c365:	jbe    0x40c310
  40c367:	add    al,BYTE PTR [eax]
  40c369:	mov    edx,0x588d2695
  40c36e:	adc    esi,DWORD PTR [ebp-0x7874d28c]
  40c374:	lds    edx,FWORD PTR [esi]
  40c376:	cs aaa 
  40c378:	push   eax
  40c379:	pop    es
  40c37a:	pop    esi
  40c37b:	push   edi
  40c37c:	mov    eax,DWORD PTR [eax]
  40c37e:	xchg   ebx,eax
  40c37f:	add    edx,ecx
  40c381:	imul   ecx,edi,0x5e80e902
  40c387:	adc    esi,DWORD PTR [esi]
  40c389:	mov    esp,ecx
  40c38b:	xor    al,BYTE PTR es:[ecx+0xa44026a]
  40c392:	and    eax,0x9d03e876
  40c397:	call   0x810f:0x29c3db8
  40c39e:	pop    ecx
  40c39f:	aaa    
  40c3a0:	mov    al,0xc1
  40c3a2:	sahf   
  40c3a3:	add    dh,BYTE PTR [edi]
  40c3a5:	jbe    0x40c3c1
  40c3a7:	push   es
  40c3a8:	jmp    0xe15b96b0
  40c3ad:	and    bl,ch
  40c3af:	add    bl,BYTE PTR [esi]
  40c3b1:	mov    ch,0x91
  40c3b3:	repnz (bad) 
  40c3b5:	inc    ebx
  40c3b6:	popf   
  40c3b7:	jnp    0x40c39c
  40c3b9:	mov    ebx,0xe9444c
  40c3be:	mov    al,ds:0x9d4094f6
  40c3c3:	and    DWORD PTR [edi+eax*1],0x16
  40c3c7:	enter  0xc501,0x24
  40c3cb:	pop    ss
  40c3cc:	call   0xb78366c4
  40c3d1:	cs repnz push eax
  40c3d4:	sub    cl,BYTE PTR [esi+0x16]
  40c3d7:	lahf   
  40c3d8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c3da:	stos   BYTE PTR es:[edi],al
  40c3db:	add    ebp,ecx
  40c3dd:	add    ebp,DWORD PTR [esi+0x1a]
  40c3e0:	jno    0x40c3e0
  40c3e2:	add    dl,cl
  40c3e4:	scas   eax,DWORD PTR es:[edi]
  40c3e5:	nop
  40c3e6:	or     edi,DWORD PTR [edx+eax*2]
  40c3e9:	jmp    0xef7e574
  40c3ee:	mov    ah,0xb3
  40c3f0:	call   0x572:0x29c4dd4
  40c3f7:	dec    ebp
  40c3f8:	jnp    0x40c3f9
  40c3fa:	stos   DWORD PTR es:[edi],eax
  40c3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3fc:	call   0xefc7:0x29e9727
  40c403:	sahf   
  40c404:	add    al,0x0
  40c406:	jmp    0xdb43320
  40c40b:	sbb    al,0x7e
  40c40d:	repz iret 
  40c40f:	cs mov al,0x50
  40c412:	pop    ds
  40c413:	sar    DWORD PTR [ebp-0x64],1
  40c416:	mov    ch,0x2d
  40c418:	mov    al,0xfe
  40c41a:	sar    DWORD PTR [ecx],0x53
  40c41d:	add    cl,ch
  40c41f:	sbb    ch,BYTE PTR [edi+0x73]
  40c422:	cmc    
  40c423:	pmaddwd mm1,QWORD PTR [edx-0x6b651656]
  40c42a:	xchg   dh,ch
  40c42c:	scas   eax,DWORD PTR es:[edi]
  40c42d:	jmp    0x63b0:0x5a6f2beb
  40c434:	add    eax,DWORD PTR [eax]
  40c436:	adc    al,0xa2
  40c438:	fwait
  40c439:	add    BYTE PTR [ebp-0x16fffdf7],0x6b
  40c440:	pop    eax
  40c441:	push   edi
  40c442:	mov    ds:0xe90001a5,al
  40c447:	add    BYTE PTR [ebx+0x7b],ch
  40c44a:	test   ecx,0xe9403466
  40c450:	sbb    eax,0x2e47cb86
  40c455:	mov    al,0x4f
  40c457:	es push esp
  40c459:	stos   BYTE PTR es:[edi],al
  40c45a:	jmp    0xe85ff5e8
  40c45f:	(bad)  
  40c460:	jmp    FWORD PTR [edi-0xbfb2502]
  40c466:	mov    edi,0xf8055d73
  40c46b:	fnstcw WORD PTR [edx]
  40c46d:	test   bl,0xf
  40c470:	out    dx,al
  40c471:	scas   eax,DWORD PTR es:[edi]
  40c472:	aas    
  40c473:	add    BYTE PTR [edi],dh
  40c475:	pop    esi
  40c476:	add    dh,BYTE PTR [ebp-0x4a]
  40c479:	mov    bh,0xbe
  40c47b:	inc    esi
  40c47c:	dec    edi
  40c47d:	jne    0x40c4ef
  40c47f:	call   0x8d7f86db
  40c484:	jmp    0x8fd4ab17
  40c489:	add    al,BYTE PTR [eax]
  40c48b:	sub    ecx,0x6a
  40c48e:	dec    BYTE PTR [ecx+edi*8+0x63fffc6d]
  40c495:	push   edx
  40c496:	mov    eax,esi
  40c498:	dec    esp
  40c499:	std    
  40c49a:	repnz add BYTE PTR [esi+eax*4-0x42],al
  40c49f:	je     0x40c519
  40c4a1:	sub    eax,0x75dfe8c5
  40c4a6:	(bad)  
  40c4a7:	dec    edi
  40c4a9:	jno    0x40c432
  40c4ab:	jne    0x40c4ad
  40c4ad:	or     al,0x7b
  40c4af:	hlt    
  40c4b0:	jle    0x40c4fa
  40c4b2:	popf   
  40c4b3:	cld    
  40c4b4:	jbe    0x40c49a
  40c4b6:	int3   
  40c4b7:	cld    
  40c4b8:	push   edi
  40c4b9:	mov    ds:0xc98d07ea,eax
  40c4be:	mov    fs,esi
  40c4c0:	fdivr  st,st(7)
  40c4c2:	add    DWORD PTR [eax],eax
  40c4c4:	test   BYTE PTR [ebp+esi*8-0x561efce3],dh
  40c4cb:	mov    esi,eax
  40c4cd:	cmp    eax,DWORD PTR [ebx-0x8a31785]
  40c4d3:	repnz add ah,dh
  40c4d6:	test   DWORD PTR [esi-0x9d30f8c],edi
  40c4dc:	call   0x3f3c68
  40c4e1:	aas    
  40c4e2:	jmp    0xe873:0x82ceebf7
  40c4e9:	lods   al,BYTE PTR ds:[esi]
  40c4ea:	sub    esi,ecx
  40c4ec:	add    BYTE PTR [ebp+0x4ef5f59b],bl
  40c4f2:	dec    esi
  40c4f3:	mov    bl,cl
  40c4f5:	stos   DWORD PTR es:[edi],eax
  40c4f6:	add    al,0xb2
  40c4f8:	imul   ebx,DWORD PTR [ebp-0x2eeb4e75],0x1e0042cd
  40c502:	out    0xfe,eax
  40c504:	pop    esi
  40c505:	push   ss
  40c506:	pop    ebp
  40c507:	push   ecx
  40c508:	pop    ebx
  40c509:	push   esp
  40c50a:	pop    ecx
  40c50b:	pop    es
  40c50c:	add    al,dl
  40c50e:	and    BYTE PTR [eax+0x2b810080],ah
  40c514:	pop    es
  40c515:	add    BYTE PTR [ebp-0x8a8a5f8],bl
  40c51b:	pop    es
  40c51c:	pushf  
  40c51d:	pop    ss
  40c51e:	dec    ebx
  40c51f:	je     0x40c4d1
  40c521:	xor    dh,BYTE PTR [esi-0x50]
  40c524:	ret    
  40c525:	jae    0x40c4bb
  40c527:	xor    BYTE PTR [edi+eiz*8+0x2840f],dh
  40c52e:	inc    esi
  40c52f:	cdq    
  40c530:	repz mov edi,0x425ea2fe
  40c536:	popf   
  40c537:	rol    bl,0xe
  40c53a:	sbb    DWORD PTR [edi+0x3a9d0001],esp
  40c540:	in     al,0xab
  40c542:	pop    esi
  40c543:	fwait
  40c544:	pop    ecx
  40c545:	fistp  WORD PTR [edx+0x190f029b]
  40c54b:	push   edi
  40c54c:	add    al,0x0
  40c54e:	popf   
  40c54f:	add    BYTE PTR [ebx],0x8
  40c552:	popf   
  40c553:	fwait
  40c554:	sub    esi,DWORD PTR ss:[ebp+0x4f]
  40c558:	pop    es
  40c559:	add    BYTE PTR [ebp-0x251334ad],bl
  40c55f:	repz in al,dx
  40c561:	ret    0xca49
  40c564:	scas   eax,DWORD PTR es:[edi]
  40c565:	xor    al,0xc9
  40c567:	add    DWORD PTR [ebx+0x45],ebx
  40c56a:	popf   
  40c56b:	jns    0x40c585
  40c56d:	pushf  
  40c56e:	xor    eax,0x2603e7e4
  40c573:	mov    dl,0x1
  40c575:	push   es
  40c576:	add    BYTE PTR [esi-0x4c],ch
  40c579:	inc    edi
  40c57a:	cld    
  40c57b:	test   BYTE PTR [eax-0x17],0x9b
  40c57f:	aas    
  40c580:	jg     0x40c569
  40c582:	add    ecx,DWORD PTR [ebx-0x20a036fa]
  40c588:	add    cl,BYTE PTR [ecx]
  40c58a:	cmp    BYTE PTR [esi+0x77379b7d],dl
  40c590:	lods   al,BYTE PTR ds:[esi]
  40c591:	aad    0x9b
  40c593:	mov    BYTE PTR [ebp+ecx*8+0x90673b0],ch
  40c59a:	pusha  
  40c59b:	fild   WORD PTR [edx]
  40c59d:	jmp    0x3d4362a4
  40c5a2:	adc    eax,0x5fe0ee26
  40c5a7:	fild   WORD PTR [edx]
  40c5a9:	cmp    dl,BYTE PTR [ebp-0x4b]
  40c5ac:	adc    al,0xda
  40c5ae:	inc    edx
  40c5af:	popf   
  40c5b0:	dec    edi
  40c5b1:	and    DWORD PTR [eax-0x4616fdc5],0x4454e2a1
  40c5bb:	popf   
  40c5bc:	inc    edx
  40c5bd:	cmc    
  40c5be:	aas    
  40c5bf:	xchg   esi,edi
  40c5c1:	xor    BYTE PTR [esi],0x0
  40c5c4:	lods   al,BYTE PTR ds:[esi]
  40c5c5:	ins    DWORD PTR es:[edi],dx
  40c5c6:	jo     0x40c5c2
  40c5c8:	js     0x40c572
  40c5ca:	add    eax,esi
  40c5cc:	mov    edi,0xeb25ffd4
  40c5d1:	pusha  
  40c5d2:	dec    ebx
  40c5d3:	cdq    
  40c5d4:	jns    0x40c586
  40c5d6:	sti    
  40c5d7:	pop    ss
  40c5d8:	mov    bl,0x51
  40c5da:	add    eax,0x87b4ae00
  40c5df:	sti    
  40c5e0:	push   es
  40c5e1:	inc    eax
  40c5e2:	add    cl,ch
  40c5e4:	ss in  eax,dx
  40c5e6:	mov    ebp,eax
  40c5e8:	sahf   
  40c5e9:	sbb    BYTE PTR [ecx+edx*1],cl
  40c5ec:	sbb    DWORD PTR [ebp-0x3f36e102],0x73
  40c5f3:	in     al,0x37
  40c5f5:	repz lds ebp,FWORD PTR [ecx-0x5e76fe5e]
  40c5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fd:	js     0x40c5ee
  40c5ff:	adc    ah,BYTE PTR [eax-0x69b70a11]
  40c605:	push   edi
  40c606:	inc    edx
  40c607:	jmp    0xe8ccce32
  40c60c:	sahf   
  40c60d:	mov    ah,0x4
  40c60f:	or     ebp,edi
  40c611:	inc    eax
  40c612:	add    BYTE PTR [ecx-0x4b],ch
  40c615:	test   DWORD PTR [edx+0x425766dc],0x113a06e9
  40c61f:	jmp    0x40c5bf
  40c621:	jmp    0xf48a:0xe18ae15c
  40c628:	inc    esi
  40c629:	push   edi
  40c62a:	inc    edx
  40c62b:	jmp    0xe928b556
  40c630:	sahf   
  40c631:	popa   
  40c632:	pop    es
  40c633:	inc    ebp
  40c634:	fiadd  WORD PTR [edx]
  40c636:	mov    ebx,DWORD PTR [ecx-0xd8c3fca]
  40c63c:	push   es
  40c63d:	imul   esp,ebp,0x549e00e8
  40c643:	call   0xfeed0427
  40c648:	push   cs
  40c649:	pop    ebx
  40c64a:	inc    edi
  40c64b:	leave  
  40c64c:	sub    edx,DWORD PTR [ebp+0x3d725502]
  40c652:	sub    bl,0xe5
  40c655:	pushf  
  40c656:	add    al,BYTE PTR [eax]
  40c658:	pop    esp
  40c659:	push   esp
  40c65a:	cli    
  40c65b:	dec    edi
  40c65c:	add    BYTE PTR [ebx-0x17],bl
  40c65f:	pop    es
  40c660:	mov    BYTE PTR [ecx],0x5c
  40c663:	(bad)  
  40c664:	(bad)  
  40c665:	icebp  
  40c666:	add    dl,BYTE PTR [eax]
  40c668:	inc    eax
  40c669:	mov    ah,0x79
  40c66b:	mov    esi,0x57502d74
  40c670:	call   DWORD PTR [ecx]
  40c672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c673:	mov    ecx,0xfffec504
  40c678:	addr16 adc al,0xf3
  40c67b:	aas    
  40c67c:	add    BYTE PTR [ecx],ch
  40c67e:	xor    ebx,esi
  40c680:	std    
  40c681:	fwait
  40c682:	pop    ecx
  40c683:	out    0xb4,al
  40c685:	push   esp
  40c686:	push   es
  40c687:	add    BYTE PTR [ecx+0x2d],bl
  40c68a:	jnp    0x40c64a
  40c68c:	jle    0x40c648
  40c68e:	push   es
  40c68f:	fdiv   DWORD PTR [esp+eax*8-0x2]
  40c693:	mov    al,bh
  40c695:	mov    ah,0x16
  40c697:	add    DWORD PTR [eax],eax
  40c699:	je     0x40c621
  40c69b:	out    0x45,al
  40c69d:	add    edi,edi
  40c69f:	inc    DWORD PTR [esp+eax*1+0x8327f2]
  40c6a6:	or     al,0x59
  40c6a8:	jb     0x40c6cd
  40c6aa:	mov    edi,0x41ff4ec0
  40c6af:	loop   0x40c6c3
  40c6b1:	inc    eax
  40c6b2:	inc    esp
  40c6b3:	push   ebp
  40c6b4:	push   DWORD PTR [ebp+0x38]
  40c6b7:	sub    eax,0xb1b50c6
  40c6bc:	inc    esp
  40c6bd:	adc    DWORD PTR [esi+edi*8+0x47],esi
  40c6c1:	(bad)  
  40c6c2:	iret   
  40c6c3:	pop    ecx
  40c6c4:	cmp    eax,ecx
  40c6c6:	out    dx,al
  40c6c7:	(bad)  
  40c6ca:	jl     0x40c706
  40c6cc:	(bad)  
  40c6cd:	jmp    ecx
  40c6cf:	lods   eax,DWORD PTR ds:[esi]
  40c6d0:	std    
  40c6d1:	adc    eax,0x40141c
  40c6d6:	popf   
  40c6d7:	jo     0x40c722
  40c6d9:	mov    ah,BYTE PTR [eax+0x38]
  40c6dc:	mov    esp,0x579b95c1
  40c6e1:	mov    ecx,ecx
  40c6e3:	sbb    al,0xa7
  40c6e5:	test   DWORD PTR [edi-0x64],0xd8d2a59a
  40c6ec:	lods   eax,DWORD PTR ds:[esi]
  40c6ed:	sbb    ebp,0xffffff87
  40c6f0:	adc    ch,BYTE PTR [edx-0x63]
  40c6f3:	adc    ecx,DWORD PTR ds:0x9b10b2fe
  40c6f9:	(bad)  
  40c6fa:	pop    ebp
  40c6fb:	fwait
  40c6fc:	add    dh,BYTE PTR [eax+0x3201149c]
  40c702:	pop    ebp
  40c703:	xor    al,0xa8
  40c705:	pop    esp
  40c706:	pop    esi
  40c707:	add    edx,edi
  40c709:	inc    BYTE PTR [eax]
  40c70b:	mov    bl,BYTE PTR [eax-0x5f6407b]
  40c711:	sbb    DWORD PTR [eax],eax
  40c713:	jp     0x40c6c3
  40c715:	rcl    BYTE PTR [ecx],cl
  40c717:	fstp   QWORD PTR [ebx-0x6438b397]
  40c71d:	add    ah,BYTE PTR [esi-0x5c]
  40c720:	mov    bl,0x35
  40c722:	adc    al,0x26
  40c724:	repz out dx,eax
  40c726:	adc    BYTE PTR [ecx-0x62baad66],0x9b
  40c72d:	xor    eax,0x2ef1608
  40c732:	sub    BYTE PTR [esi+0x6ee0ac73],bl
  40c738:	pop    ebx
  40c739:	shl    bh,0xff
  40c73c:	ja     0x40c6ea
  40c73e:	(bad)  
  40c73f:	outs   dx,BYTE PTR ds:[esi]
  40c740:	pop    ebx
  40c741:	rol    DWORD PTR [ebx],0x9d
  40c744:	push   cs
  40c745:	jns    0x40c732
  40c747:	push   ds
  40c748:	jg     0x40c765
  40c74a:	push   ebx
  40c74b:	jae    0x40c7ba
  40c74d:	(bad)  
  40c74e:	push   cs
  40c74f:	dec    ebx
  40c750:	add    bl,BYTE PTR [edx+0x1a]
  40c753:	lahf   
  40c754:	ja     0x40c6f9
  40c756:	mov    esp,DWORD PTR [edx+0x77]
  40c759:	sbb    al,0x77
  40c75b:	out    0x2d,al
  40c75d:	test   eax,0x50efe203
  40c762:	in     al,dx
  40c763:	aad    0xa8
  40c765:	cmp    eax,0x988a597f
  40c76a:	fwait
  40c76b:	xchg   BYTE PTR [edi],al
  40c76d:	jmp    0x40c772
  40c76f:	add    BYTE PTR [ecx],bl
  40c771:	ret    0xe69b
  40c774:	inc    esp
  40c775:	add    ebp,DWORD PTR [edi+eax*2+0x15]
  40c779:	push   edx
  40c77a:	push   ss
  40c77b:	test   dl,0x7
  40c77e:	adc    BYTE PTR [ebp-0x7454895d],ch
  40c784:	jmp    0x6d02:0x9f0eca9a
  40c78b:	les    edx,FWORD PTR [ecx]
  40c78d:	cld    
  40c78e:	out    dx,al
  40c78f:	rol    BYTE PTR [edx],0xac
  40c792:	jmp    0x40c7c5
  40c794:	ss dec ecx
  40c796:	inc    edx
  40c797:	mov    ebx,0x98e7735f
  40c79c:	jb     0x40c7ec
  40c79e:	bound  ebx,QWORD PTR [edi-0x7d3f60e1]
  40c7a4:	inc    esi
  40c7a5:	fcomip st,st(1)
  40c7a7:	add    ebx,DWORD PTR [ebp+0x4a551f53]
  40c7ad:	out    dx,al
  40c7ae:	sub    al,0x60
  40c7b0:	fild   WORD PTR [edx]
  40c7b2:	je     0x40c7eb
  40c7b4:	add    DWORD PTR [esi],0x137947a7
  40c7ba:	jmp    0xe7da7e5a
  40c7bf:	add    ebx,DWORD PTR [ecx]
  40c7c1:	ret    
  40c7c2:	cld    
  40c7c3:	frstor [edi]
  40c7c5:	aas    
  40c7c6:	lds    ecx,FWORD PTR [edi]
  40c7c8:	adc    ch,BYTE PTR [edi]
  40c7ca:	add    ch,cl
  40c7cc:	xchg   esi,eax
  40c7cd:	jne    0x40c842
  40c7cf:	lds    ebp,FWORD PTR [edx+0xd4379]
  40c7d5:	xchg   ebp,eax
  40c7d6:	call   0x518a:0xa9415d0d
  40c7dd:	sub    esp,DWORD PTR [si]
  40c7e0:	cmc    
  40c7e1:	sbb    ebp,DWORD PTR [ecx+0x43bfed74]
  40c7e7:	and    al,0xd9
  40c7e9:	push   ebx
  40c7ea:	inc    ebx
  40c7eb:	and    al,0xd1
  40c7ed:	es shr al,1
  40c7f0:	call   0x72446393
  40c7f5:	mov    bl,dh
  40c7f7:	adc    ebp,DWORD PTR [eax-0x7e]
  40c7fa:	fimul  WORD PTR [edi]
  40c7fc:	pop    es
  40c7fd:	lahf   
  40c7fe:	add    al,BYTE PTR [eax]
  40c800:	ficomp WORD PTR [ebx]
  40c802:	loope  0x40c804
  40c804:	jmp    0x922917a7
  40c809:	jo     0x40c80c
  40c80b:	add    BYTE PTR [ebp+0x5e],ch
  40c80e:	clc    
  40c80f:	sbb    DWORD PTR [edi-0x64],0x2
  40c813:	add    BYTE PTR [ebx-0x60],dl
  40c816:	jne    0x40c85b
  40c818:	add    eax,0x196852bd
  40c81d:	nop
  40c81e:	xchg   edx,eax
  40c81f:	aaa    
  40c820:	shl    DWORD PTR [ebp-0x2b390156],0x43
  40c827:	and    al,0x49
  40c829:	jmp    0xd981c94a
  40c82e:	push   esi
  40c82f:	inc    edx
  40c830:	jmp    0xf898d62c
  40c835:	fiadd  WORD PTR [edx]
  40c837:	mov    ebx,DWORD PTR [ecx+0xead1c00]
  40c83d:	ins    DWORD PTR es:[edi],dx
  40c83e:	add    BYTE PTR [eax+eax*1],0xe9
  40c842:	test   DWORD PTR ds:0x42f50018,0x22f18b00
  40c84c:	adc    DWORD PTR [eax-0xc],eax
  40c84f:	cdq    
  40c850:	mov    ch,0x0
  40c852:	hlt    
  40c853:	add    dh,BYTE PTR [ebp+0x5]
  40c856:	cmp    bl,BYTE PTR [ecx+edx*8+0x33]
  40c85a:	dec    edx
  40c85b:	xor    esp,0x23d780f
  40c861:	add    ah,dh
  40c863:	mov    bh,BYTE PTR [ebp-0x6b]
  40c866:	les    eax,FWORD PTR [edx]
  40c868:	test   al,0x20
  40c86a:	or     BYTE PTR [ebx+eax*4],al
  40c86d:	or     eax,0x424a94
  40c872:	in     al,0x29
  40c874:	and    DWORD PTR [eax+esi*2],0xfffffffe
  40c878:	(bad)  
  40c879:	push   esp
  40c87b:	mov    dl,BYTE PTR [esi-0x7bfd4b6b]
  40c881:	ror    BYTE PTR [ecx],0xeb
  40c884:	mov    WORD PTR [eax+ebp*2-0x7bfffcfe],?
  40c88b:	mov    ch,BYTE PTR [eax]
  40c88d:	sti    
  40c88e:	xchg   ebx,eax
  40c88f:	pop    ecx
  40c890:	xor    DWORD PTR fs:[eax-0x7bf9215e],0x2
  40c898:	add    BYTE PTR [edx+ebx*4+0x4],dh
  40c89c:	adc    eax,0xc5e8008d
  40c8a1:	loop   0x40c8a9
  40c8a3:	je     0x40c8a7
  40c8a5:	lea    ecx,[eax+ebp*4-0x6a]
  40c8a9:	out    0x4f,al
  40c8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ac:	(bad)  
  40c8ad:	dec    DWORD PTR [eax+edi*2-0xcafcd5e]
  40c8b4:	adc    al,BYTE PTR [eax-0x73017bee]
  40c8ba:	dec    esp
  40c8bb:	pop    eax
  40c8bc:	xchg   esi,eax
  40c8bd:	add    eax,eax
  40c8bf:	popf   
  40c8c0:	jmp    0xbff5:0x9bb7039e
  40c8c7:	xchg   DWORD PTR [ecx-0x63d04566],ebx
  40c8cd:	add    ch,al
  40c8cf:	mov    eax,DWORD PTR ds:[ebx]
  40c8d2:	add    BYTE PTR [ebx],cl
  40c8d4:	lahf   
  40c8d5:	loop   0x40c882
  40c8d7:	pop    esi
  40c8d8:	fwait
  40c8d9:	adc    dh,BYTE PTR [eax+eiz*4-0x2d]
  40c8dd:	add    al,BYTE PTR [eax]
  40c8df:	popf   
  40c8e0:	sbb    ebx,DWORD PTR ds:0x76aee214
  40c8e6:	adc    ebx,DWORD PTR [ebp-0x65]
  40c8e9:	sbb    al,0x1
  40c8eb:	and    BYTE PTR [eax-0x22],ah
  40c8ee:	arpl   WORD PTR [ebp-0x3d],bp
  40c8f1:	jmp    0x9c422748
  40c8f6:	stos   BYTE PTR es:[edi],al
  40c8f7:	mov    dl,0xdc
  40c8f9:	test   eax,0x22bf598c
  40c8fe:	push   eax
  40c8ff:	aaa    
  40c900:	fwait
  40c901:	sbb    al,0x2
  40c903:	add    BYTE PTR [edx-0x22eea552],ah
  40c909:	fwait
  40c90a:	jge    0x40c903
  40c90c:	sbb    BYTE PTR [ebp+ebp*1+0xeacf20a],ah
  40c913:	aam    0xaf
  40c915:	pop    ebx
  40c916:	add    dl,BYTE PTR [edi+0x7a]
  40c919:	push   0xc485011d
  40c91e:	lods   al,BYTE PTR ds:[esi]
  40c91f:	(bad)  
  40c920:	push   0xffffffe5
  40c922:	rol    DWORD PTR [ebx-0x47],0xa8
  40c926:	add    edi,edi
  40c928:	outs   dx,BYTE PTR ds:[esi]
  40c929:	xor    BYTE PTR [eax],ch
  40c92b:	and    al,0xa9
  40c92d:	shr    BYTE PTR [esi],cl
  40c92f:	add    DWORD PTR [ebp+0x797b839b],ebx
  40c935:	retf   
  40c936:	adc    cl,BYTE PTR [edi]
  40c938:	and    BYTE PTR [edx],al
  40c93a:	adc    eax,DWORD PTR [ebx]
  40c93c:	popf   
  40c93d:	add    dl,BYTE PTR [ebx]
  40c93f:	push   es
  40c940:	mov    ch,0x29
  40c942:	fnstsw WORD PTR [edx+0x1b]
  40c945:	call   0x406f:0xa51bb171
  40c94c:	mov    ecx,0x9bc46412
  40c951:	jle    0x40c97a
  40c953:	add    ebx,DWORD PTR [ebp-0x417fa3fe]
  40c959:	add    ch,dl
  40c95b:	add    ebx,DWORD PTR [ebp+0x2cd1b52]
  40c961:	and    DWORD PTR [edx],esi
  40c963:	add    ebx,DWORD PTR [ebp+0x30287e]
  40c969:	lahf   
  40c96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c96b:	sub    DWORD PTR [ebx+0x7e],esp
  40c96e:	push   esi
  40c96f:	test   eax,0x360c3703
  40c974:	hlt    
  40c975:	ret    
  40c976:	push   cs
  40c977:	jmp    0x6a43268f
  40c97c:	lods   al,BYTE PTR ds:[esi]
  40c97d:	popf   
  40c97e:	das    
  40c97f:	out    dx,eax
  40c980:	fwait
  40c981:	out    0xd6,eax
  40c983:	jmp    0x85f8:0xc53e1503
  40c98a:	add    ch,al
  40c98c:	add    ebx,DWORD PTR [ebp+0x10030182]
  40c992:	(bad)  
  40c993:	cmc    
  40c994:	xor    BYTE PTR [ebp+0x46efcb77],dl
  40c99a:	inc    eax
  40c99b:	jmp    0xf95b7548
  40c9a0:	xchg   ebp,eax
  40c9a1:	fadd   QWORD PTR [edx]
  40c9a3:	shl    eax,0xcd
  40c9a6:	add    ch,cl
  40c9a8:	test   al,0xd1
  40c9aa:	cli    
  40c9ab:	jae    0x40c93c
  40c9ad:	jle    0x40c955
  40c9af:	call   0xffb666b7
  40c9b4:	bound  eax,QWORD PTR fs:[eax]
  40c9b7:	add    ebp,ecx
  40c9b9:	sahf   
  40c9ba:	call   0xceeb:0x29fc554
  40c9c1:	push   es
  40c9c2:	jp     0x40c9c0
  40c9c4:	xchg   esi,eax
  40c9c5:	cmc    
  40c9c6:	jg     0x40c987
  40c9c8:	ficomp WORD PTR [ebx+0xe8ffc1]
  40c9ce:	sahf   
  40c9cf:	mov    ds:0x689f176,eax
  40c9d4:	xor    al,0x45
  40c9d6:	pop    ecx
  40c9d7:	add    bh,bh
  40c9d9:	idiv   dl
  40c9db:	sbb    edi,DWORD PTR [ebx]
  40c9dd:	dec    eax
  40c9de:	pop    eax
  40c9df:	add    ch,al
  40c9e1:	dec    ebp
  40c9e2:	dec    esi
  40c9e3:	add    al,BYTE PTR [eax]
  40c9e5:	fs push 0xffffffdf
  40c9e8:	imul   ecx
  40c9ea:	sahf   
  40c9eb:	add    ch,al
  40c9ed:	mov    dh,0xf1
  40c9ef:	add    DWORD PTR [eax],eax
  40c9f1:	jno    0x40c97d
  40c9f3:	fimul  WORD PTR [esi]
  40c9f5:	cmc    
  40c9f6:	lahf   
  40c9f7:	repz test BYTE PTR [ebp-0x62],dl
  40c9fb:	add    al,BYTE PTR [eax]
  40c9fd:	je     0x40ca71
  40c9ff:	fisub  WORD PTR [ebx]
  40ca01:	mov    ecx,0x8152c8b1
  40ca06:	push   ds
  40ca07:	pop    eax
  40ca08:	inc    edx
  40ca09:	jmp    0xcdc43fff
  40ca0e:	xchg   esi,eax
  40ca0f:	add    al,BYTE PTR [eax]
  40ca11:	jmp    0x3d06504
  40ca16:	sahf   
  40ca17:	add    al,BYTE PTR [ebp+0x438e7529]
  40ca1d:	or     eax,0x55beb6a
  40ca22:	jb     0x40ca53
  40ca24:	ins    BYTE PTR es:[edi],dx
  40ca25:	inc    ebx
  40ca26:	cwde   
  40ca27:	jne    0x40ca6c
  40ca29:	add    eax,0x68527d
  40ca2e:	fwait
  40ca2f:	dec    edi
  40ca30:	inc    ebx
  40ca31:	sub    al,BYTE PTR [eax]
  40ca33:	ins    BYTE PTR es:[edi],dx
  40ca34:	repnz cmc 
  40ca36:	dec    DWORD PTR [ebx]
  40ca38:	sub    DWORD PTR [ebx+0x24],eax
  40ca3b:	in     al,0x4e
  40ca3d:	push   ebx
  40ca3e:	push   0x45
  40ca40:	pop    es
  40ca41:	pop    eax
  40ca42:	lods   al,BYTE PTR ds:[esi]
  40ca43:	ja     0x40ca43
  40ca45:	(bad)  
  40ca46:	adc    eax,0x4010cc
  40ca4b:	jg     0x40ca3f
  40ca4d:	and    esp,DWORD PTR [ecx*4-0x72e7dbbe]
  40ca54:	repnz and ebx,DWORD PTR [esi+ebx*4]
  40ca58:	pop    ebx
  40ca59:	cmp    ebx,eax
  40ca5b:	icebp  
  40ca5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca5d:	push   esp
  40ca5e:	push   ecx
  40ca60:	push   cs
  40ca61:	adc    eax,DWORD PTR [eax-0xc]
  40ca64:	xchg   DWORD PTR [ebx+edx*2],ecx
  40ca67:	jns    0x40caab
  40ca69:	and    al,0x20
  40ca6b:	adc    al,0x9
  40ca6d:	add    bh,bh
  40ca6f:	icebp  
  40ca70:	adc    dl,BYTE PTR [ecx]
  40ca72:	inc    eax
  40ca73:	mov    ah,0x27
  40ca75:	cmp    al,0xa0
  40ca77:	out    0x3e,al
  40ca79:	add    BYTE PTR [ecx],bh
  40ca7b:	sub    bl,al
  40ca7d:	push   ss
  40ca7e:	je     0x40ca42
  40ca80:	pop    ebx
  40ca81:	jb     0x40caa7
  40ca83:	pushf  
  40ca84:	pop    ebx
  40ca85:	aad    0xff
  40ca87:	add    bl,al
  40ca89:	es call ebx
  40ca8c:	push   eax
  40ca8d:	call   edi
  40ca8f:	por    mm4,QWORD PTR [ebx]
  40ca92:	adc    al,0x8b
  40ca94:	repnz and edx,DWORD PTR [eax]
  40ca97:	add    BYTE PTR [ebx+ebx*4-0x797bfde8],bl
  40ca9e:	jnp    0x40caac
  40caa0:	test   ebx,edx
  40caa2:	or     bh,bh
  40caa4:	xchg   ecx,eax
  40caa5:	jmp    0x9a9a:0xab9d43ab
  40caac:	inc    esi
  40caad:	lods   al,BYTE PTR ds:[esi]
  40caae:	add    dl,BYTE PTR [edi+0x45]
  40cab1:	mov    bl,BYTE PTR [edx+0x3f164afe]
  40cab7:	and    al,0x92
  40cab9:	clc    
  40caba:	inc    ebp
  40cabb:	pop    ebx
  40cabc:	mov    DWORD PTR es:[edi-0x3e],0x8b4faba5
  40cac4:	cmp    ebx,ebx
  40cac6:	push   edx
  40cac7:	push   esi
  40cac8:	outs   dx,BYTE PTR ds:[esi]
  40cac9:	or     DWORD PTR [edx+esi*1-0xa],0x12f2d183
  40cad1:	mov    DWORD PTR [esi-0x41],edi
  40cad4:	call   0x4dac:0x2ffc627
  40cadb:	push   0x32ba2
  40cae0:	repnz sahf 
  40cae2:	(bad)  
  40cae3:	adc    DWORD PTR [ebp-0x55],ebx
  40cae6:	ja     0x40cb2c
  40cae8:	loope  0x40cb45
  40caea:	icebp  
  40caeb:	fcmovu st,st(2)
  40caed:	xchg   esi,eax
  40caee:	mov    ds:0x52ab5d11,al
  40caf3:	push   DWORD PTR [eax-0x62bfee91]
  40caf9:	and    al,0xab
  40cafb:	cmp    al,BYTE PTR [eax]
  40cafd:	mov    ebx,0x50394857
  40cb02:	out    0x24,eax
  40cb04:	dec    esi
  40cb05:	push   ss
  40cb06:	test   al,0x6d
  40cb08:	test   ch,bl
  40cb0a:	jg     0x40cb4f
  40cb0c:	pushw  ds
  40cb0e:	mov    bl,0xd7
  40cb10:	je     0x40cae8
  40cb12:	cwde   
  40cb13:	ins    DWORD PTR es:[edi],dx
  40cb14:	inc    edi
  40cb15:	lahf   
  40cb16:	sub    al,0x9c
  40cb18:	gs or  ecx,ecx
  40cb1b:	sub    eax,0x82e017a5
  40cb21:	test   BYTE PTR [edx],al
  40cb23:	out    dx,al
  40cb24:	das    
  40cb25:	xchg   ebp,eax
  40cb26:	dec    ebx
  40cb27:	push   esp
  40cb28:	fistp  WORD PTR [edi]
  40cb2a:	int    0xea
  40cb2c:	cwde   
  40cb2d:	mov    edx,0xbb00a885
  40cb32:	test   DWORD PTR [eax],eax
  40cb34:	add    al,0xd1
  40cb36:	stc    
  40cb37:	sbb    BYTE PTR [ebp+0x43df42a9],ah
  40cb3d:	popf   
  40cb3e:	cmp    ecx,DWORD PTR [edx-0x16bb1200]
  40cb44:	cwde   
  40cb45:	mov    ds:0x3614b185,al
  40cb4a:	add    eax,0x48a2b96a
  40cb4f:	shr    BYTE PTR [esi],cl
  40cb51:	adc    DWORD PTR [esi],ebx
  40cb53:	cmp    ecx,DWORD PTR [ebp+0xa]
  40cb56:	mul    DWORD PTR [eax+0x12]
  40cb59:	pop    ebp
  40cb5a:	add    dl,BYTE PTR [esi]
  40cb5c:	scas   al,BYTE PTR es:[edi]
  40cb5d:	fild   WORD PTR [ebx]
  40cb5f:	cmc    
  40cb60:	loopne 0x40cb62
  40cb62:	cli    
  40cb63:	sbb    ebx,DWORD PTR [edi]
  40cb65:	add    ebx,DWORD PTR [ebp-0x63d12e56]
  40cb6b:	add    bl,BYTE PTR [edi-0x1]
  40cb6e:	mov    edx,0x9903a96e
  40cb73:	mov    WORD PTR [eax],fs
  40cb75:	xor    BYTE PTR [ecx+0x2c],bh
  40cb78:	jmp    0xa99b35e8
  40cb7d:	add    eax,ebp
  40cb7f:	mov    eax,0xad9d02f4
  40cb84:	push   es
  40cb85:	jns    0x40cb66
  40cb87:	ret    0x10
  40cb8a:	stos   DWORD PTR es:[edi],eax
  40cb8b:	mov    cl,0xcc
  40cb8d:	add    ch,BYTE PTR [edx-0x783cd7a8]
  40cb93:	add    al,0x99
  40cb95:	cmp    DWORD PTR [edi+0x2],0xffffffee
  40cb99:	ins    DWORD PTR es:[edi],dx
  40cb9a:	pop    edi
  40cb9b:	xor    eax,DWORD PTR [eax]
  40cb9d:	add    DWORD PTR [ebx-0x64],esi
  40cba0:	(bad)  
  40cba1:	out    dx,al
  40cba2:	hlt    
  40cba3:	mov    bh,0x83
  40cba5:	ret    0xf5ba
  40cba8:	cmc    
  40cba9:	in     al,0x7e
  40cbab:	ins    BYTE PTR es:[edi],dx
  40cbac:	inc    edx
  40cbad:	jmp    0x434ce24e
  40cbb2:	clc    
  40cbb3:	mov    al,ds:0x42acb114
  40cbb8:	add    BYTE PTR [edi],bl
  40cbba:	aam    0xc9
  40cbbc:	ret    0x5efa
  40cbbf:	test   dl,bl
  40cbc1:	fisub  WORD PTR [edx]
  40cbc3:	pusha  
  40cbc4:	dec    edi
  40cbc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc6:	add    BYTE PTR [ebx-0x66d6ee5a],bl
  40cbcc:	into   
  40cbcd:	scas   eax,DWORD PTR es:[edi]
  40cbce:	call   0x6240dbaf
  40cbd3:	pusha  
  40cbd4:	push   ds
  40cbd5:	test   DWORD PTR [ebx+0x278afaba],ebx
  40cbdb:	mov    eax,ds:0x4f0d4d8b
  40cbe0:	xor    dl,BYTE PTR [ecx-0x7f]
  40cbe3:	cmp    al,0xa2
  40cbe5:	(bad)  
  40cbe6:	call   0xd5a911e0
  40cbeb:	jecxz  0x40cc05
  40cbed:	sub    DWORD PTR [eax-0x68],esp
  40cbf0:	sub    cl,BYTE PTR [ebx-0x15fe199]
  40cbf6:	jmp    0xe0b42b46
  40cbfb:	inc    ebp
  40cbfc:	lea    eax,[ebx+0x57029ee9]
  40cc02:	cwde   
  40cc03:	sub    ebx,DWORD PTR ds:0x1901b964
  40cc09:	add    al,0x11
  40cc0b:	jo     0x40cbb2
  40cc0d:	(bad)  
  40cc0e:	call   0x960051f4
  40cc13:	popf   
  40cc14:	push   edx
  40cc15:	add    BYTE PTR [eax],al
  40cc17:	mov    bh,0x91
  40cc19:	mov    esi,0xeb1a29c3
  40cc1e:	mov    ecx,DWORD PTR [ecx-0x65]
  40cc21:	push   ecx
  40cc22:	push   esi
  40cc23:	call   DWORD PTR [ebp+edx*2+0x3b]
  40cc27:	mov    edx,0x850ede
  40cc2c:	jae    0x40cc34
  40cc2e:	add    BYTE PTR [eax],al
  40cc30:	(bad)  
  40cc31:	in     al,0x73
  40cc33:	add    BYTE PTR [ebx-0x79],dh
  40cc36:	add    eax,DWORD PTR [ecx]
  40cc38:	xor    al,0x3
  40cc3a:	mov    edi,DWORD PTR [ebp+0x64]
  40cc3d:	nop
  40cc3e:	inc    ebx
  40cc3f:	adc    al,0xbf
  40cc41:	sahf   
  40cc42:	xchg   DWORD PTR [ebp+0x3c],edi
  40cc45:	outs   dx,BYTE PTR ds:[esi]
  40cc46:	mov    DWORD PTR [eax],0xff530334
  40cc4c:	mov    DWORD PTR [esi],ecx
  40cc4e:	lea    eax,[esi-0x14]
  40cc51:	ror    BYTE PTR [esi+eax*2-0x10c694f4],cl
  40cc58:	cmc    
  40cc59:	add    al,BYTE PTR [ecx]
  40cc5b:	inc    ebp
  40cc5c:	or     al,0xb0
  40cc5e:	(bad)  
  40cc5f:	mov    cl,dl
  40cc61:	xchg   ebx,eax
  40cc62:	and    bh,BYTE PTR [edi-0x18]
  40cc65:	or     bh,BYTE PTR [ebx+ebx*1]
  40cc68:	repz mov ebx,ecx
  40cc6b:	add    ah,dh
  40cc6d:	add    al,BYTE PTR [eax+eax*8+0x9b86c3]
  40cc74:	les    eax,FWORD PTR [edx]
  40cc76:	mov    eax,DWORD PTR [esi+0x8]
  40cc79:	dec    ebx
  40cc7a:	dec    eax
  40cc7b:	je     0x40cc82
  40cc7d:	dec    ebx
  40cc7e:	dec    eax
  40cc7f:	cmovns ecx,DWORD PTR [edx-0x423b0002]
  40cc86:	inc    esp
  40cc87:	push   0xab86b3
  40cc8c:	mov    ah,0x2
  40cc8e:	push   ebx
  40cc8f:	inc    DWORD PTR [eax]
  40cc91:	popf   
  40cc92:	jle    0x40cc9e
  40cc94:	push   edi
  40cc95:	xchg   edx,eax
  40cc96:	xchg   edi,eax
  40cc97:	rcl    BYTE PTR ds:0x448dabdd,cl
  40cc9d:	test   eax,0x240bc828
  40cca2:	mov    ah,0x8b
  40cca4:	jl     0x40cc4b
  40cca6:	add    ebp,edi
  40cca8:	(bad)  
  40cca9:	push   0xffffffa5
  40ccab:	xchg   BYTE PTR [edi-0x72d86e],bh
  40ccb1:	pop    edx
  40ccb2:	lods   al,BYTE PTR ds:[esi]
  40ccb3:	sub    al,0x1
  40ccb5:	and    BYTE PTR [esi+0x28],cl
  40ccb8:	push   0x43dead
  40ccbd:	inc    edx
  40ccbe:	aad    0x7
  40ccc0:	call   0x439d26
  40ccc5:	sbb    BYTE PTR [esi+edx*1+0x74],ch
  40ccc9:	sub    bh,dh
  40cccb:	and    ecx,DWORD PTR [ebx+0x75a2f3db]
  40ccd1:	jns    0x40ccf3
  40ccd3:	cli    
  40ccd4:	mov    ah,BYTE PTR [eax-0x41]
  40ccd7:	stos   BYTE PTR es:[edi],al
  40ccd8:	push   eax
  40ccd9:	and    DWORD PTR [edx+eax*1+0x3f97dd84],ebp
  40cce0:	add    DWORD PTR [edx+0x708b02af],0xffffffbb
  40cce7:	leave  
  40cce8:	inc    ebp
  40cce9:	jno    0x40cc99
  40cceb:	add    al,BYTE PTR [eax]
  40cced:	popf   
  40ccee:	xor    dh,bh
  40ccf0:	mov    ah,BYTE PTR [ebx-0x4d]
  40ccf3:	in     eax,dx
  40ccf4:	mov    BYTE PTR [eax],0x49
  40ccf7:	xchg   edi,eax
  40ccf8:	mov    eax,ds:0x50103d75
  40ccfd:	or     al,0xc2
  40ccff:	push   ebp
  40cd00:	ds mov edx,edx
  40cd03:	inc    ebx
  40cd04:	jmp    0x86ec6a8c
  40cd09:	mov    edi,0x2ddb0231
  40cd0e:	popf   
  40cd0f:	(bad)  
  40cd10:	scas   al,BYTE PTR es:[edi]
  40cd11:	sti    
  40cd12:	adc    BYTE PTR [ebp-0x7862fa19],0x31
  40cd19:	adc    ah,BYTE PTR [eax]
  40cd1b:	in     eax,dx
  40cd1c:	add    eax,0xa68983a2
  40cd21:	pop    ss
  40cd22:	push   ds
  40cd23:	call   0x7f0:0x81a721e7
  40cd2a:	call   0x89883f36
  40cd2f:	jecxz  0x40cd31
  40cd31:	pop    esp
  40cd32:	cmp    bh,ch
  40cd34:	call   0x4185633c
  40cd39:	dec    BYTE PTR [edx]
  40cd3b:	pushf  
  40cd3c:	test   al,0xad
  40cd3e:	cwde   
  40cd3f:	shr    BYTE PTR [eax-0x18ad6353],1
  40cd45:	inc    eax
  40cd46:	sar    DWORD PTR [ecx],cl
  40cd48:	or     al,0xc6
  40cd4a:	call   0x278b:0x62c3da02
  40cd51:	xor    dh,bl
  40cd53:	xor    esp,DWORD PTR [edx-0x6d]
  40cd56:	pop    ds
  40cd57:	sbb    al,0xfd
  40cd59:	add    al,0x0
  40cd5b:	nop
  40cd5c:	(bad)  
  40cd5d:	sbb    eax,0xfe8f9f2e
  40cd62:	aas    
  40cd63:	test   esi,esi
  40cd65:	sti    
  40cd66:	inc    ebx
  40cd67:	popf   
  40cd68:	popf   
  40cd69:	cmc    
  40cd6a:	pop    es
  40cd6b:	cmc    
  40cd6c:	std    
  40cd6d:	dec    esp
  40cd6e:	add    al,0x9d
  40cd70:	cmp    eax,0x651c464
  40cd75:	sbb    eax,esp
  40cd77:	jo     0x40cd3a
  40cd79:	ret    0x1802
  40cd7c:	dec    esp
  40cd7d:	fxch   st(0)
  40cd7f:	pop    eax
  40cd80:	cs in  eax,0x3
  40cd83:	popf   
  40cd84:	add    al,BYTE PTR [eax]
  40cd86:	inc    ecx
  40cd87:	sbb    al,BYTE PTR [edx]
  40cd89:	add    ch,cl
  40cd8b:	dec    esi
  40cd8c:	add    bl,BYTE PTR [esi+0x2a]
  40cd8f:	addr16 mov eax,esi
  40cd92:	jb     0x40cd7b
  40cd94:	cs dec eax
  40cd96:	mov    esi,0xa147e3aa
  40cd9b:	mov    bl,0xd7
  40cd9d:	imul   ebp,ebx,0x915c1e13
  40cda3:	jb     0x40cdbc
  40cda5:	inc    eax
  40cda6:	jmp    0x144e2e8
  40cdab:	pop    edi
  40cdac:	mov    eax,ds:0x5c1be8ff
  40cdb1:	je     0x40cd98
  40cdb3:	jo     0x40ce11
  40cdb5:	jmp    0x9eeb:0x6c466413
  40cdbc:	add    al,BYTE PTR [eax]
  40cdbe:	rol    BYTE PTR [eax],cl
  40cdc0:	inc    esi
  40cdc1:	mov    DWORD PTR [ebx+0x5],eax
  40cdc4:	lea    ebp,[eax]
  40cdc6:	add    DWORD PTR [esp+ecx*8-0xe],esp
  40cdca:	mov    BYTE PTR [edi],ah
  40cdcc:	xchg   ecx,eax
  40cdcd:	ret    
  40cdce:	inc    ebp
  40cdcf:	adc    eax,0xe900029b
  40cdd4:	inc    esi
  40cdd5:	aam    0x0
  40cdd7:	jmp    0x40cd77
  40cdd9:	fwait
  40cdda:	jae    0x40cda1
  40cddc:	push   cs
  40cddd:	(bad)  
  40cdde:	jge    0x40ce05
  40cde0:	cmp    al,0x10
  40cde2:	and    al,0xd9
  40cde4:	cmp    eax,0x78810415
  40cde9:	mov    al,ds:0xb405e8ff
  40cdee:	sbb    ch,BYTE PTR [ecx]
  40cdf0:	add    eax,0xe0bf5eb4
  40cdf5:	add    eax,DWORD PTR [eax]
  40cdf7:	mov    edi,0xa78a9321
  40cdfc:	jp     0x40ce48
  40cdfe:	dec    eax
  40cdff:	add    BYTE PTR [ebx],ah
  40ce01:	cmc    
  40ce02:	and    BYTE PTR [edx-0x3a],ch
  40ce05:	mov    WORD PTR [esp+ebx*2-0x24],?
  40ce09:	xchg   edi,eax
  40ce0a:	jae    0x40ce4c
  40ce0c:	mov    ah,0x62
  40ce0e:	jne    0x40ce14
  40ce10:	mov    ebp,?
  40ce12:	loop   0x40ce14
  40ce14:	test   BYTE PTR [esi+edi*4-0x414a7f8b],al
  40ce1b:	jmp    0x40ce71
  40ce1d:	retf   0x6c44
  40ce20:	ja     0x40ce21
  40ce22:	(bad)  
  40ce23:	inc    DWORD PTR [eax]
  40ce25:	jnp    0x40ce1b
  40ce27:	and    edx,DWORD PTR [eax]
  40ce29:	stc    
  40ce2a:	loope  0x40ce87
  40ce2c:	push   eax
  40ce2e:	mov    ds:0xac3ff0e,eax
  40ce33:	call   0x473590
  40ce38:	test   DWORD PTR [edi+edx*4],0xdb0cf7be
  40ce3f:	pop    ebp
  40ce40:	ret    0xff4c
  40ce43:	push   eax
  40ce44:	push   ebx
  40ce45:	xchg   ebx,eax
  40ce46:	jno    0x40cec4
  40ce48:	or     BYTE PTR [edi],dh
  40ce4a:	mov    edi,0xfa5806c5
  40ce4f:	aas    
  40ce50:	add    BYTE PTR [ecx+ebx*2],cl
  40ce53:	mov    DWORD PTR [ecx],eax
  40ce55:	add    al,0x88
  40ce57:	inc    edx
  40ce58:	and    al,0x10
  40ce5a:	mov    al,0xd9
  40ce5c:	mov    DWORD PTR [edx],0xf440739f
  40ce62:	ret    
  40ce63:	add    eax,0x3ef124
  40ce68:	mov    DWORD PTR [edx-0x63a17716],ecx
  40ce6e:	lea    ebx,[esp+ebp*2-0x4d]
  40ce72:	inc    esp
  40ce73:	jo     0x40ce75
  40ce75:	sar    dh,0xff
  40ce78:	imul   ebx,DWORD PTR [ebp+0x65458bae],0x49458b51
  40ce82:	adc    bh,BYTE PTR [esi]
  40ce84:	jl     0x40ceaa
  40ce86:	cmp    eax,DWORD PTR [edi+edi*8-0x74574e00]
  40ce8d:	popf   
  40ce8e:	and    DWORD PTR [ecx-0x3a9bfffe],ebp
  40ce94:	out    0xf,al
  40ce96:	adc    DWORD PTR [ebx],eax
  40ce98:	xor    al,0xff
  40ce9a:	or     eax,ecx
  40ce9c:	test   BYTE PTR [edx+eiz*8-0x2572cd45],0xbb
  40cea4:	stos   BYTE PTR es:[edi],al
  40cea5:	test   BYTE PTR [ecx+0x758302ab],0xa7
  40ceac:	push   ss
  40cead:	add    edx,DWORD PTR [edx+ecx*4]
  40ceb0:	push   ss
  40ceb1:	pop    edi
  40ceb2:	push   ss
  40ceb3:	push   0x39
  40ceb5:	pop    ecx
  40ceb6:	pop    edi
  40ceb7:	xchg   esp,eax
  40ceb8:	add    dl,BYTE PTR [esi+0x26]
  40cebb:	mov    ebx,0xab9d12aa
  40cec0:	add    dh,dh
  40cec2:	fld    DWORD PTR [edi]
  40cec4:	or     al,0x1
  40cec6:	mov    cl,0xa1
  40cec8:	xor    al,0xe8
  40ceca:	jmp    0x3c62:0x16fe9dc7
  40ced1:	ret    0xab99
  40ced4:	popf   
  40ced5:	mov    ch,0x1d
  40ced7:	lods   al,BYTE PTR ds:[esi]
  40ced8:	add    al,BYTE PTR [eax]
  40ceda:	fisubr DWORD PTR [ecx-0x54a28b1e]
  40cee0:	lds    eax,FWORD PTR [ebp-0x6b]
  40cee3:	(bad)  
  40cee4:	pop    ss
  40cee5:	inc    eax
  40cee6:	popf   
  40cee7:	jae    0x40cf64
  40cee9:	jecxz  0x40cedd
  40ceeb:	adc    BYTE PTR [esi-0x7c7eff8b],bl
  40cef1:	jae    0x40ced6
  40cef3:	loop   0x40cef7
  40cef5:	data16 (bad) 
  40cef7:	pusha  
  40cef8:	or     bl,ch
  40cefa:	mov    dl,BYTE PTR [edx+0x16382a02]
  40cf00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf01:	mov    bh,0x34
  40cf03:	push   ss
  40cf04:	dec    eax
  40cf05:	cmc    
  40cf06:	xor    dl,BYTE PTR [ebx+0x31]
  40cf09:	push   ecx
  40cf0a:	lods   al,BYTE PTR ds:[esi]
  40cf0b:	xchg   edi,eax
  40cf0c:	add    ch,cl
  40cf0e:	mov    bl,BYTE PTR [ecx-0xe]
  40cf11:	popa   
  40cf12:	xchg   ebx,eax
  40cf13:	adc    eax,0x76ab2510
  40cf18:	std    
  40cf19:	call   0xe157f521
  40cf1e:	mov    ecx,fs
  40cf20:	call   0x4774:0x3e0e9563
  40cf27:	lods   eax,DWORD PTR ds:[esi]
  40cf28:	jmp    FWORD PTR [ebx+0x7e]
  40cf2b:	repnz add ch,cl
  40cf2e:	add    ecx,ebp
  40cf30:	(bad)  
  40cf31:	stc    
  40cf32:	stos   BYTE PTR es:[edi],al
  40cf33:	dec    edi
  40cf34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf35:	in     eax,0x9d
  40cf37:	push   ds
  40cf38:	ret    0x4754
  40cf3b:	push   edx
  40cf3c:	pmullw mm1,QWORD PTR [ecx+0x10539987]
  40cf43:	push   ss
  40cf44:	iret   
  40cf45:	clc    
  40cf46:	cmc    
  40cf47:	jp     0x40cf4b
  40cf49:	push   ss
  40cf4a:	popf   
  40cf4b:	dec    eax
  40cf4c:	add    eax,0xf2ba034
  40cf51:	mov    cl,0x26
  40cf53:	add    BYTE PTR [edx+0x1],bl
  40cf56:	jecxz  0x40cf3b
  40cf58:	sbb    ecx,DWORD PTR [edi]
  40cf5a:	stc    
  40cf5b:	sbb    bl,0x3
  40cf5e:	ds popf 
  40cf60:	lock add al,0xc
  40cf63:	pushf  
  40cf64:	pop    ss
  40cf65:	aas    
  40cf66:	icebp  
  40cf67:	and    eax,0x9ec00e2
  40cf6c:	push   ds
  40cf6d:	mov    esi,0xc01dd0ff
  40cf72:	add    DWORD PTR [edi+0x222b0298],esp
  40cf78:	es push ecx
  40cf7a:	sub    ecx,0xffffff9e
  40cf7d:	add    dh,BYTE PTR [eax-0x11e0a18]
  40cf83:	xchg   esi,eax
  40cf84:	sbb    DWORD PTR [ecx-0x62f91602],ebx
  40cf8a:	loop   0x40cfca
  40cf8c:	adc    ah,dl
  40cf8e:	mov    edi,0x44d9d7fa
  40cf93:	sub    eax,0xe97f8016
  40cf98:	sahf   
  40cf99:	add    cl,BYTE PTR [ecx-0x167da9a]
  40cf9f:	jmp    0xaf003e3d
  40cfa4:	sar    BYTE PTR [ebx],0xc9
  40cfa7:	sub    ecx,DWORD PTR [ebp-0x5eef7cfe]
  40cfad:	test   eax,0x9909f60a
  40cfb2:	push   esp
  40cfb3:	bound  ebp,QWORD PTR ds:0xf9eb85
  40cfb9:	sub    edi,DWORD PTR [edi]
  40cfbb:	lock cmp DWORD PTR [eax],esi
  40cfbe:	out    dx,eax
  40cfbf:	cmp    ebx,0xffffffde
  40cfc2:	add    cl,BYTE PTR [ebp-0x17b7d6dc]
  40cfc8:	jmp    0x40cf68
  40cfca:	add    al,BYTE PTR [eax]
  40cfcc:	mov    al,0x5d
  40cfce:	das    
  40cfcf:	mov    eax,ebp
  40cfd1:	outs   dx,DWORD PTR ds:[esi]
  40cfd2:	xor    DWORD PTR [ebp-0xb7fedc],ecx
  40cfd8:	sbb    al,0xa9
  40cfda:	xchg   edi,eax
  40cfdb:	adc    al,0x6d
  40cfdd:	or     al,0xd8
  40cfdf:	jmp    DWORD PTR [ecx+0x63]
  40cfe2:	call   0x0:0x2a3d1c8a
  40cfe9:	or     DWORD PTR [eax+eax*4],eax
  40cfec:	ror    esi,0xeb
  40cfef:	jg     0x40cf87
  40cff1:	dec    esp
  40cff2:	add    eax,DWORD PTR [ecx+0x6245d5d1]
  40cff8:	(bad)  
  40cff9:	adc    eax,0x5791e7d4
  40cffe:	add    DWORD PTR [eax],eax
  40d000:	leave  
  40d001:	jbe    0x40d002
  40d003:	push   DWORD PTR [edx]
  40d005:	jge    0x40cff0
  40d007:	pop    es
  40d008:	mov    eax,DWORD PTR [ebp-0x17fe5827]
  40d00e:	or     al,0xd1
  40d010:	call   0xb8c273be
  40d015:	popa   
  40d016:	push   0x0
  40d018:	shr    DWORD PTR [ecx+ecx*2+0xd00ee75],1
  40d01f:	add    BYTE PTR [ebp+0x42e708],cl
  40d025:	inc    ecx
  40d026:	cmc    
  40d027:	jl     0x40d027
  40d029:	add    BYTE PTR [ebx+eax*1+0x4b4d972],al
  40d030:	ret    
  40d031:	xor    DWORD PTR [edx],0x3
  40d034:	jne    0x40d051
  40d036:	sbb    al,0x43
  40d038:	add    BYTE PTR [eax],al
  40d03a:	je     0x40d024
  40d03c:	add    BYTE PTR [edx+0x44],ch
  40d03f:	in     eax,0xff
  40d041:	push   ebp
  40d042:	jae    0x40cfd5
  40d044:	or     dl,BYTE PTR [eax]
  40d046:	je     0x40d046
  40d048:	test   al,al
  40d04a:	jns    0x40d04d
  40d04c:	and    DWORD PTR [esi],eax
  40d04e:	ss ret 
  40d050:	shl    DWORD PTR [eax+0x4687c035],0x3c
  40d057:	dec    ebx
  40d058:	dec    eax
  40d059:	je     0x40d068
  40d05b:	and    BYTE PTR [eax+eax*1],0x87
  40d05f:	in     al,0x3
  40d061:	add    BYTE PTR [ebp-0x6c7cbb7c],bl
  40d067:	mov    BYTE PTR [ebx+0x4666253c],al
  40d06d:	add    BYTE PTR [ebp+0x2a56cf8e],bl
  40d073:	jno    0x40d035
  40d075:	inc    edx
  40d076:	popf   
  40d077:	lock call 0x1d00:0x429ac914
  40d07f:	test   BYTE PTR [ebx-0x56a1ff3c],0x2
  40d086:	jne    0x40d032
  40d088:	inc    ecx
  40d089:	push   ds
  40d08a:	(bad)  
  40d08b:	mov    edx,0x29bf803f
  40d090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d091:	test   DWORD PTR [ecx+ebx*1],esp
  40d094:	out    0x46,al
  40d096:	add    BYTE PTR [ebp+0x608800df],bl
  40d09c:	imul   eax,DWORD PTR [edx],0xf0f4ea01
  40d0a2:	out    dx,eax
  40d0a3:	scas   eax,DWORD PTR es:[edi]
  40d0a4:	imul   eax,DWORD PTR [edx],0x5f
  40d0a7:	push   ss
  40d0a8:	faddp  st(6),st
  40d0aa:	push   ebp
  40d0ab:	es pushf 
  40d0ad:	lea    eax,[ebp-0x5b]
  40d0b0:	push   ebx
  40d0b1:	dec    edx
  40d0b2:	je     0x40d03c
  40d0b4:	and    BYTE PTR [edx+0x4],al
  40d0b7:	sbb    ah,ch
  40d0b9:	sysret 
  40d0bb:	in     eax,dx
  40d0bc:	pushf  
  40d0bd:	out    dx,eax
  40d0be:	pop    ss
  40d0bf:	lods   eax,DWORD PTR ds:[esi]
  40d0c0:	jmp    0x40d0c5
  40d0c2:	mov    edx,DWORD PTR [ebx-0x6b8c6eda]
  40d0c8:	inc    ecx
  40d0c9:	add    al,0x56
  40d0cb:	cmp    dh,BYTE PTR [edi-0x5422f00e]
  40d0d1:	cmp    bl,al
  40d0d3:	shl    BYTE PTR [eax],1
  40d0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d6:	push   eax
  40d0d7:	into   
  40d0d8:	in     eax,dx
  40d0d9:	mov    gs,edi
  40d0db:	add    ebp,DWORD PTR es:[edi]
  40d0de:	or     al,0x65
  40d0e0:	dec    edx
  40d0e1:	adc    BYTE PTR ss:[eax-0x56],ch
  40d0e5:	and    DWORD PTR [ebx+0x64960300],ebx
  40d0eb:	ret    
  40d0ec:	jno    0x40d0ec
  40d0ee:	mov    edx,0x6c1507c3
  40d0f3:	sbb    DWORD PTR [ecx-0x7c236e2f],esp
  40d0f9:	ud1    ecx,DWORD PTR [esi-0x38edf5a0]
  40d100:	dec    esi
  40d101:	push   es
  40d102:	mov    cl,0x10
  40d104:	lods   eax,DWORD PTR ds:[esi]
  40d105:	mov    ebp,0x829e97ab
  40d10a:	call   0x2e3e9712
  40d10f:	inc    eax
  40d110:	mov    cl,0x1
  40d112:	imul   eax,DWORD PTR [ebx],0x369a2d9d
  40d118:	mov    ds:0xd09a2d0f,al
  40d11d:	xchg   ebp,eax
  40d11e:	sti    
  40d11f:	out    dx,eax
  40d120:	mov    ds:0x4a80e942,al
  40d125:	paddsw mm1,QWORD PTR [ebx+eiz*4+0x7a3629a9]
  40d12d:	pmaddwd mm3,QWORD PTR [edx-0x2e01f517]
  40d134:	imul   ebp,edi,0xffffffd4
  40d137:	repz mov ds:0x7292a102,al
  40d13d:	stc    
  40d13e:	test   al,0x44
  40d140:	inc    esi
  40d141:	in     al,0x71
  40d143:	add    cl,BYTE PTR [esi-0x7a34e647]
  40d149:	aaa    
  40d14a:	fst    QWORD PTR [ecx]
  40d14c:	add    BYTE PTR [edx-0x5df3e477],bl
  40d152:	dec    esp
  40d153:	aam    0xf2
  40d155:	outs   dx,DWORD PTR ds:[esi]
  40d156:	mov    dl,0xff
  40d158:	addr16 sti 
  40d15a:	xchg   ebx,eax
  40d15b:	(bad)  
  40d15c:	call   0xf22894ff
  40d161:	jmp    0x72326666
  40d166:	inc    eax
  40d167:	add    BYTE PTR [eax],ch
  40d169:	loopne 0x40d1b0
  40d16b:	or     al,0x1b
  40d16d:	mov    al,BYTE PTR ds:0x5e359e39
  40d174:	and    dl,dh
  40d176:	ret    0xe907
  40d179:	mov    bl,0x89
  40d17b:	jmp    0x40d195
  40d17d:	sub    BYTE PTR [ebp+0x8],al
  40d180:	je     0x40d1e5
  40d182:	xchg   ebp,eax
  40d183:	dec    eax
  40d184:	mov    bh,0x9a
  40d186:	add    DWORD PTR ds:[ebx-0x67],0xe
  40d18b:	or     al,0xa3
  40d18d:	stos   DWORD PTR es:[edi],eax
  40d18e:	repnz (bad) 
  40d190:	lods   al,BYTE PTR ds:[esi]
  40d191:	or     dh,cl
  40d193:	(bad)  
  40d194:	call   0x2e477b37
  40d199:	bound  edx,QWORD PTR [esi+0x29ee90f]
  40d19f:	mov    ebp,DWORD PTR [ecx+0x1d748992]
  40d1a5:	or     dl,BYTE PTR [ebx+esi*2-0x9]
  40d1a9:	mov    al,0x2
  40d1ab:	lea    ebx,[edx+edx*1+0x935733]
  40d1b2:	cwde   
  40d1b3:	xor    bh,bh
  40d1b5:	aam    0x96
  40d1b7:	repnz aas 
  40d1b9:	jmp    0x74415dd7
  40d1be:	pop    ebx
  40d1bf:	(bad)  [ebp+eiz*8-0x5e]
  40d1c3:	repnz xor ch,BYTE PTR [ecx-0x56cdf807]
  40d1ca:	icebp  
  40d1cb:	sti    
  40d1cc:	mov    ch,cl
  40d1ce:	or     eax,0x430088c4
  40d1d3:	xor    BYTE PTR [eax],al
  40d1d5:	pop    esi
  40d1d6:	in     eax,dx
  40d1d7:	mov    esi,0x7f588b53
  40d1dc:	jmp    0x3075:0x8cd0b70c
  40d1e3:	push   0x7b2bfe72
  40d1e8:	std    
  40d1e9:	jne    0x40d1e3
  40d1eb:	xchg   ah,al
  40d1ed:	call   DWORD PTR [ecx+0x1ae4e806]
  40d1f3:	jnp    0x40d1f2
  40d1f5:	test   BYTE PTR [esp+eax*1],dh
  40d1f8:	jnp    0xffba3a30
  40d1fe:	dec    ebx
  40d1ff:	jp     0x40d183
  40d201:	shl    al,0x93
  40d204:	mov    cl,0x1
  40d206:	outs   dx,DWORD PTR ds:[esi]
  40d207:	std    
  40d208:	xor    ebx,ebx
  40d20a:	cmp    esp,edx
  40d20c:	repz call 0x3e4b5c
  40d212:	cli    
  40d213:	test   ecx,eax
  40d215:	pop    ebx
  40d216:	add    BYTE PTR [ebp-0x43],ch
  40d219:	push   es
  40d21a:	add    BYTE PTR ds:0xcbe15268,al
  40d220:	jp     0x40d1e3
  40d222:	push   ecx
  40d223:	lods   al,BYTE PTR ds:[esi]
  40d224:	fsubr  st(0),st
  40d226:	jmp    FWORD PTR [ebx-0x6774ac42]
  40d22c:	rcl    BYTE PTR [edx+0x56],1
  40d22f:	add    DWORD PTR [ebx+0x73],edi
  40d232:	and    dh,BYTE PTR [edi]
  40d234:	push   esi
  40d235:	xor    esi,esi
  40d237:	out    dx,eax
  40d238:	aam    0x7
  40d23a:	push   esi
  40d23b:	pop    es
  40d23c:	jp     0x40d2b1
  40d23e:	adc    BYTE PTR [ebx+0x5],cl
  40d241:	or     al,0xe8
  40d243:	jmp    0x40d200
  40d245:	(bad)  
  40d246:	dec    edi
  40d248:	outs   dx,BYTE PTR ds:[esi]
  40d249:	xor    esi,0xffffff9d
  40d24c:	xor    cl,bh
  40d24e:	push   edx
  40d24f:	inc    ebp
  40d250:	out    0xa4,eax
  40d252:	(bad)  
  40d253:	xor    dh,BYTE PTR [eax-0x6e1f7530]
  40d259:	sub    BYTE PTR [edx],al
  40d25b:	adc    dh,dl
  40d25d:	xchg   edi,eax
  40d25e:	pop    edx
  40d25f:	add    eax,0x9d01d265
  40d264:	les    esi,FWORD PTR es:[eax+eax*8+0x10]
  40d269:	adc    esp,edi
  40d26b:	pop    ebx
  40d26c:	add    BYTE PTR [esi-0x3ba4d9fe],cl
  40d272:	fistp  WORD PTR [edi-0x2045407]
  40d278:	adc    edx,DWORD PTR [edi+0x25c5008a]
  40d27e:	mov    ebx,0x99ff1574
  40d283:	push   edi
  40d284:	(bad)  
  40d285:	nop
  40d286:	jg     0x40d286
  40d288:	push   ecx
  40d289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d28a:	mov    ebx,DWORD PTR [esi]
  40d28c:	push   ss
  40d28d:	jecxz  0x40d2c4
  40d28f:	pop    ebx
  40d290:	in     al,0xe6
  40d292:	pop    es
  40d293:	add    BYTE PTR [eax+0x10],cl
  40d296:	test   al,0x80
  40d298:	mov    ecx,0x9d000370
  40d29d:	sub    BYTE PTR [ecx],bl
  40d29f:	or     al,0x9a
  40d2a1:	mov    cl,0x7e
  40d2a3:	pushf  
  40d2a4:	popf   
  40d2a5:	fwait
  40d2a6:	add    dh,dh
  40d2a8:	loopne 0x40d241
  40d2aa:	add    BYTE PTR [ebp-0x72cc0828],cl
  40d2b0:	and    BYTE PTR [ebp+edx*4-0x2],dl
  40d2b4:	jb     0x40d322
  40d2b6:	xchg   ebp,eax
  40d2b7:	je     0x40d252
  40d2b9:	call   0x9c5ecefe
  40d2be:	add    al,BYTE PTR [eax]
  40d2c0:	shr    DWORD PTR [ebp+0x3111495],1
  40d2c6:	cld    
  40d2c7:	inc    ebx
  40d2c8:	popf   
  40d2c9:	xchg   DWORD PTR [eax-0x5f7a52f1],ebp
  40d2cf:	xchg   esi,eax
  40d2d0:	inc    ebp
  40d2d1:	mov    ch,0xe8
  40d2d3:	add    ebx,DWORD PTR [ebp-0x6cfc246f]
  40d2d9:	inc    edx
  40d2da:	jmp    0x6a6a0989
  40d2df:	pop    eax
  40d2e0:	add    BYTE PTR [edx-0x6f],dh
  40d2e3:	lods   eax,DWORD PTR ds:[esi]
  40d2e4:	xchg   esi,eax
  40d2e5:	pushf  
  40d2e6:	pop    ss
  40d2e7:	shr    DWORD PTR [ecx],cl
  40d2e9:	mov    eax,ds:0x237637f
  40d2ee:	xchg   edx,eax
  40d2ef:	xchg   ebp,eax
  40d2f0:	xor    ebp,DWORD PTR [eax]
  40d2f2:	dec    eax
  40d2f3:	mov    DWORD PTR [ebx],esi
  40d2f5:	fild   DWORD PTR [edi-0xa]
  40d2f8:	add    al,0xf5
  40d2fa:	mov    ecx,0x1ce39688
  40d2ff:	jmp    0x40d289
  40d301:	and    DWORD PTR ds:0x32d3966e,ebp
  40d307:	je     0x40d349
  40d309:	shl    DWORD PTR [edx],0x51
  40d30c:	shl    dl,0x91
  40d30f:	push   ebp
  40d310:	stos   BYTE PTR es:[edi],al
  40d311:	push   eax
  40d312:	sub    BYTE PTR [edx+0x58],ch
  40d315:	dec    edx
  40d316:	xchg   ecx,eax
  40d317:	inc    ebp
  40d318:	xchg   esi,eax
  40d319:	xchg   ebx,eax
  40d31a:	pop    ss
  40d31b:	jnp    0x40d346
  40d31d:	lea    edi,[edi+0x6b]
  40d320:	and    ebx,DWORD PTR [edx+0x20332d91]
  40d326:	inc    edi
  40d327:	or     DWORD PTR [ebx],esi
  40d329:	arpl   WORD PTR [edi-0x12],ax
  40d32c:	(bad)  
  40d32d:	jp     0x40d394
  40d32f:	or     BYTE PTR [esi-0x7714e385],dl
  40d335:	sbb    DWORD PTR [esi+eax*1],ebp
  40d338:	xchg   esi,eax
  40d339:	imul   esi,DWORD PTR [edx],0x6c
  40d33c:	inc    eax
  40d33d:	ins    DWORD PTR es:[edi],dx
  40d33e:	xor    al,BYTE PTR [eax]
  40d340:	add    ecx,edx
  40d342:	mov    cl,0xfe
  40d344:	out    dx,al
  40d345:	add    BYTE PTR [esi+esi*8],al
  40d348:	imul   eax,DWORD PTR ds:0x39e04622,0xd6e0cdf1
  40d352:	adc    BYTE PTR [edi+0x169ff544],dl
  40d358:	or     eax,0x4016aaf
  40d35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d35e:	bound  ecx,QWORD PTR [esi+0x29ee911]
  40d364:	jmp    0x40d348
  40d366:	push   eax
  40d367:	inc    esi
  40d368:	psubsb mm1,QWORD PTR [ecx+0x46]
  40d36c:	cld    
  40d36d:	out    0x9e,eax
  40d36f:	add    al,BYTE PTR [eax]
  40d371:	arpl   WORD PTR [edx-0x65db780e],di
  40d377:	sbb    al,0x4
  40d379:	je     0x40d325
  40d37b:	dec    BYTE PTR [edi+0x6c]
  40d37e:	mov    ds:0x9aaf4fae,al
  40d383:	inc    BYTE PTR [edi+eiz*4]
  40d386:	xchg   edx,eax
  40d387:	add    BYTE PTR [eax],al
  40d389:	push   ecx
  40d38a:	push   esi
  40d38b:	mov    ds:0x46145efe,al
  40d390:	cld    
  40d391:	push   0xffffffe1
  40d393:	add    al,0x50
  40d395:	pop    esp
  40d396:	jb     0x40d346
  40d398:	dec    edi
  40d399:	inc    esi
  40d39a:	call   0x2:0x48cee7fa
  40d3a1:	cli    
  40d3a2:	test   BYTE PTR [bx+0x3de],bh
  40d3a7:	ret    
  40d3a8:	mov    ch,BYTE PTR [eax]
  40d3aa:	add    BYTE PTR [esi-0x3e],dl
  40d3ad:	psubsw mm6,QWORD PTR [ebx+0x4568eb7b]
  40d3b4:	mov    al,ds:0x339ee903
  40d3b9:	push   esi
  40d3ba:	add    bh,ch
  40d3bc:	inc    DWORD PTR [edi]
  40d3be:	push   edi
  40d3bf:	or     bl,BYTE PTR [esp+0x79]
  40d3c3:	inc    esp
  40d3c4:	add    al,0x33
  40d3c6:	leave  
  40d3c7:	add    BYTE PTR [edx],al
  40d3c9:	sete   ch
  40d3cc:	mov    dl,0xd9
  40d3ce:	push   ebx
  40d3cf:	out    dx,al
  40d3d0:	add    ecx,DWORD PTR [ebp-0x752bb0bb]
  40d3d6:	(bad)  
  40d3d7:	mov    ebp,0x69e8e048
  40d3dc:	aaa    
  40d3dd:	add    BYTE PTR [eax],al
  40d3df:	mov    eax,0xc6840dc3
  40d3e4:	add    al,0x0
  40d3e6:	add    BYTE PTR [ecx+ebx*8],cl
  40d3e9:	cli    
  40d3ea:	vmread DWORD PTR [eax+eax*1-0x49f90c00],ebp
  40d3f2:	inc    ebp
  40d3f3:	psrlq  mm1,QWORD PTR [edi-0x73]
  40d3f7:	jns    0x40d418
  40d3f9:	sti    
  40d3fa:	jmp    DWORD PTR [ebx]
  40d3fc:	aam    0xe7
  40d3fe:	push   edx
  40d3ff:	mov    eax,ds:0x4840004
  40d404:	pop    es
  40d405:	test   BYTE PTR [edi],bl
  40d407:	mov    BYTE PTR [ebx],0x0
  40d40a:	cvtpi2ps xmm2,mm1
  40d40d:	cli    
  40d40e:	jmp    0x40d410
  40d410:	into   
  40d411:	cmp    edi,DWORD PTR [eax]
  40d413:	pushf  
  40d414:	leave  
  40d415:	pop    ds
  40d416:	sti    
  40d417:	jmp    DWORD PTR [ebx-0x1]
  40d41a:	cmp    al,0x3b
  40d41c:	ja     0x40d41e
  40d41e:	repnz xor esi,DWORD PTR [esi+edi*2-0x2a]
  40d423:	sbb    eax,esp
  40d425:	mov    al,0xfe
  40d427:	add    bl,al
  40d429:	jbe    0x40d3e8
  40d42b:	add    eax,0x30003c3
  40d430:	mov    ebx,0x9dc0b706
  40d435:	and    bh,BYTE PTR [esi]
  40d437:	in     al,0x7
  40d439:	pushf  
  40d43a:	test   DWORD PTR [ecx+eax*4+0x69],eax
  40d43e:	sub    al,0xe8
  40d440:	dec    ebp
  40d441:	into   
  40d442:	add    DWORD PTR [eax],eax
  40d444:	and    ecx,ebx
  40d446:	add    eax,DWORD PTR [edx+esi*2-0x3cfffd66]
  40d44d:	loop   0x40d45f
  40d44f:	in     al,0xc8
  40d451:	mov    DWORD PTR [edx+0x0],edx
  40d454:	inc    esp
  40d455:	dec    ebp
  40d456:	add    al,0x0
  40d458:	popf   
  40d459:	mov    BYTE PTR cs:[ecx+edx*1],al
  40d45d:	lds    edx,FWORD PTR [edx+0x365936fe]
  40d463:	push   0xffffffa1
  40d465:	es dec ecx
  40d467:	les    ebp,FWORD PTR [ebp+0x24]
  40d46a:	xchg   edx,eax
  40d46b:	xchg   DWORD PTR [eax+0x70],ebp
  40d46e:	fwait
  40d46f:	loop   0x40d4b2
  40d471:	call   0x86a7:0xdd008402
  40d478:	scas   eax,DWORD PTR es:[edi]
  40d479:	pushf  
  40d47a:	cdq    
  40d47b:	add    al,BYTE PTR [eax+0xf085d68]
  40d481:	sbb    BYTE PTR [edi+0x5],al
  40d484:	add    BYTE PTR [ebp-0x631fb6f1],bl
  40d48a:	xchg   ebp,eax
  40d48b:	repnz (bad) 
  40d48d:	pusha  
  40d48e:	popa   
  40d48f:	cli    
  40d490:	inc    edx
  40d492:	cwde   
  40d493:	leave  
  40d494:	inc    esp
  40d495:	stc    
  40d496:	call   0xc702:0x449d0002
  40d49d:	pusha  
  40d49e:	add    DWORD PTR ds:0xc9999d00,0x2ad5944
  40d4a8:	add    BYTE PTR [ebp+0x624458ac],bl
  40d4ae:	add    esi,DWORD PTR [ecx-0x5f93682]
  40d4b4:	inc    ebx
  40d4b5:	popf   
  40d4b6:	jnp    0x40d46b
  40d4b8:	stos   DWORD PTR es:[edi],eax
  40d4b9:	mov    ds:0x9d04fa86,eax
  40d4be:	add    dh,BYTE PTR [ecx-0x4ec316c5]
  40d4c4:	add    ah,BYTE PTR [eax]
  40d4c6:	and    ch,al
  40d4c8:	add    ebx,DWORD PTR [ebp-0x10049487]
  40d4ce:	sbb    cl,bh
  40d4d0:	sbb    BYTE PTR [ecx],0xef
  40d4d3:	fst    QWORD PTR [edx+0xfc1333b]
  40d4d9:	add    cl,dh
  40d4db:	add    ebp,ecx
  40d4dd:	xchg   edx,ebp
  40d4df:	std    
  40d4e0:	ins    BYTE PTR es:[edi],dx
  40d4e1:	cmp    al,0x9c
  40d4e3:	add    ch,cl
  40d4e5:	sbb    eax,0x92e118bd
  40d4ea:	leave  
  40d4eb:	mov    ds:0x8d9d4681,al
  40d4f0:	mov    esi,0xe1aa597c
  40d4f5:	(bad)  
  40d4f6:	stos   DWORD PTR es:[edi],eax
  40d4f7:	xchg   BYTE PTR [ebx+eax*1-0x4fcfd63],dl
  40d4fe:	inc    ebp
  40d4ff:	and    al,0x70
  40d501:	sti    
  40d502:	je     0x40d4f6
  40d504:	imul   eax,DWORD PTR [eax-0x6d8a724a],0x1f
  40d50b:	ret    
  40d50c:	loopne 0x40d4aa
  40d50e:	les    eax,FWORD PTR [edx]
  40d510:	jmp    0xf150eb18
  40d515:	ss inc edi
  40d517:	add    esp,DWORD PTR [eax+ecx*2-0x55]
  40d51b:	xor    al,BYTE PTR [ecx-0x35]
  40d51e:	out    0x3,al
  40d520:	jmp    0x653eb7ac
  40d525:	or     BYTE PTR [edx+eax*1+0x2e66e900],bl
  40d52c:	neg    dh
  40d52e:	and    cl,BYTE PTR [ecx-0x2611701]
  40d534:	mov    ch,0xa4
  40d536:	adc    al,0x30
  40d538:	push   eax
  40d539:	fs and eax,0xefaf1
  40d53f:	(bad)  
  40d541:	call   0x43a822
  40d546:	gs pop esi
  40d548:	cld    
  40d549:	or     DWORD PTR [ebx],0xffffff9e
  40d54c:	add    al,BYTE PTR [eax]
  40d54e:	fsubrp st(4),st
  40d550:	inc    esi
  40d551:	div    BYTE PTR [ecx-0x33]
  40d554:	push   es
  40d555:	adc    al,0xe2
  40d557:	or     al,0x8c
  40d559:	mov    WORD PTR [ecx+esi*8],gs
  40d55c:	cmp    al,0x53
  40d55e:	cmp    ch,BYTE PTR [edx+0xcc21386]
  40d564:	mov    WORD PTR [edi+0x70],cs
  40d567:	retf   0xfeba
  40d56a:	fsubr  QWORD PTR [edx-0xa]
  40d56d:	aas    
  40d56e:	jmp    0xf0b42296
  40d573:	aam    0x45
  40d575:	mul    ebp
  40d577:	pop    ss
  40d578:	push   0xffffffff
  40d57a:	call   0x6312a61d
  40d57f:	bound  edi,QWORD PTR [edx-0xe7a55c6]
  40d585:	push   cs
  40d586:	aaa    
  40d587:	sbb    edi,DWORD PTR [eax+0x4b]
  40d58a:	fs popa 
  40d58c:	retf   0xe547
  40d58f:	mov    dl,0xef
  40d591:	mov    ch,BYTE PTR [ecx-0x2b3d384e]
  40d597:	adc    cl,BYTE PTR [edi+0x32369c1]
  40d59d:	jb     0x40d5cd
  40d59f:	xlat   BYTE PTR ds:[ebx]
  40d5a0:	inc    ebp
  40d5a1:	test   DWORD PTR [eax],0x7371b000
  40d5a7:	enter  0x93db,0x6
  40d5ab:	push   ss
  40d5ac:	inc    esp
  40d5ad:	add    bl,ch
  40d5af:	addr16 mov ebx,0x24ff0ff6
  40d5b5:	cwde   
  40d5b6:	out    0x59,al
  40d5b8:	mov    edx,0x4189fd71
  40d5bd:	pop    eax
  40d5be:	cmp    ebx,eax
  40d5c0:	adc    edx,edi
  40d5c2:	lds    eax,FWORD PTR [ebp+0x63]
  40d5c5:	add    ebx,ebp
  40d5c7:	frstor [edx]
  40d5c9:	xchg   DWORD PTR [esi],esi
  40d5cb:	pop    ss
  40d5cc:	ror    DWORD PTR [edx-0x79],1
  40d5cf:	pop    eax
  40d5d0:	ins    BYTE PTR es:[edi],dx
  40d5d1:	or     DWORD PTR [edi+0x4],edx
  40d5d4:	outs   dx,DWORD PTR ds:[esi]
  40d5d5:	ret    
  40d5d6:	mov    DWORD PTR [ebp+0x2c],edi
  40d5d9:	xlat   BYTE PTR ds:[ebx]
  40d5da:	imul   eax,DWORD PTR [ecx+edi*4],0x5c50b444
  40d5e1:	clc    
  40d5e2:	mov    edx,0xbe843401
  40d5e7:	je     0x40d5b6
  40d5e9:	in     al,dx
  40d5ea:	adc    ebp,DWORD PTR [edx-0x4]
  40d5ed:	jb     0x40d622
  40d5ef:	loopne 0x40d610
  40d5f1:	inc    edi
  40d5f2:	add    bh,bh
  40d5f4:	inc    edx
  40d5f5:	or     DWORD PTR [eax+ebx*8-0x1],eax
  40d5f9:	(bad)  
  40d5fa:	jae    0x40d602
  40d5fc:	inc    edx
  40d5fd:	inc    ebp
  40d5fe:	test   DWORD PTR [ecx],0x268951f
  40d604:	mov    ebp,0x888d8
  40d609:	scas   al,BYTE PTR es:[edi]
  40d60a:	cli    
  40d60b:	mov    WORD PTR [ebp-0x70],cs
  40d60e:	xchg   BYTE PTR [esi-0x18295afc],bh
  40d614:	retf   
  40d615:	pop    ecx
  40d616:	jb     0x40d615
  40d618:	mov    ebx,ecx
  40d61a:	xchg   DWORD PTR [ecx+0x6a],edx
  40d61d:	popf   
  40d61e:	xchg   edi,eax
  40d61f:	jge    0x40d665
  40d621:	fisttp QWORD PTR [ecx-0x66]
  40d624:	ss out 0x9a,al
  40d627:	add    al,BYTE PTR [ebp+ebx*2+0x8fef156]
  40d62e:	repnz call 0x5d31:0x8fdc6873
  40d636:	les    esi,FWORD PTR [eax]
  40d638:	pop    ebx
  40d639:	xlat   BYTE PTR fs:[ebx]
  40d63b:	push   es
  40d63c:	add    BYTE PTR [ebx+0x5e],bl
  40d63f:	mov    eax,DWORD PTR [eax]
  40d641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d642:	pop    esi
  40d643:	xchg   edi,eax
  40d644:	push   cs
  40d645:	sbb    BYTE PTR [ecx-0x7c62fff8],bh
  40d64b:	jnp    0x40d691
  40d64d:	pop    ebp
  40d64e:	and    BYTE PTR [esi],dl
  40d650:	fadd   st,st(3)
  40d652:	and    cl,BYTE PTR [ecx+0x2]
  40d655:	xchg   edx,eax
  40d656:	imul   ecx,DWORD PTR [eax-0x3b],0xffffffe5
  40d65a:	pushf  
  40d65b:	xchg   BYTE PTR [edi+0x48029998],bh
  40d661:	call   0x3a99:0x9d04f225
  40d668:	je     0x40d60e
  40d66a:	arpl   WORD PTR [eax-0x9],cx
  40d66d:	add    BYTE PTR [edx-0x62fb693e],bl
  40d673:	cdq    
  40d674:	dec    edx
  40d675:	jg     0x40d614
  40d677:	cdq    
  40d678:	add    cl,BYTE PTR [ecx+0x447d2960]
  40d67e:	inc    ecx
  40d67f:	es dec ecx
  40d681:	mov    al,0x4d
  40d683:	mov    DWORD PTR cs:[ebx],ebp
  40d686:	loop   0x40d60b
  40d688:	mov    cs,WORD PTR [edi+0x72]
  40d68b:	or     al,0xf9
  40d68d:	jmp    FWORD PTR [eax-0x227afc27]
  40d693:	stos   DWORD PTR es:[edi],eax
  40d694:	xchg   edi,edx
  40d696:	cdq    
  40d697:	add    ch,cl
  40d699:	add    ebp,DWORD PTR [eax]
  40d69b:	inc    ebp
  40d69c:	lea    esi,[eax+eiz*1]
  40d69f:	test   esp,edi
  40d6a1:	(bad)  
  40d6a2:	stos   DWORD PTR es:[edi],eax
  40d6a3:	mov    bh,BYTE PTR [eax-0x7b0b5dca]
  40d6a9:	stc    
  40d6aa:	fiadd  DWORD PTR [edx]
  40d6ac:	les    esp,FWORD PTR fs:[ebx-0x62f78981]
  40d6b3:	add    al,bh
  40d6b5:	add    BYTE PTR [ecx-0x29],0x25
  40d6b9:	(bad)  
  40d6ba:	jnp    0x40d6ae
  40d6bc:	xchg   BYTE PTR [ecx+ebx*1-0x27],bh
  40d6c0:	adc    eax,0xdd106b8f
  40d6c5:	jl     0x40d6c8
  40d6c7:	aas    
  40d6c8:	push   es
  40d6c9:	(bad)  
  40d6ca:	pop    ebx
  40d6cb:	jl     0x40d728
  40d6cd:	aam    0x53
  40d6cf:	mov    dh,ch
  40d6d1:	add    BYTE PTR [eax],0x11
  40d6d4:	xlat   BYTE PTR ds:[ebx]
  40d6d5:	in     eax,dx
  40d6d6:	mov    es,WORD PTR [ebx-0x65]
  40d6d9:	pop    edi
  40d6da:	dec    esi
  40d6db:	popf   
  40d6dc:	add    dh,BYTE PTR [eax+0x48]
  40d6df:	inc    ebp
  40d6e0:	xchg   al,dl
  40d6e2:	mov    ds,WORD PTR [ebx-0x62f89d82]
  40d6e8:	add    dl,BYTE PTR [ecx+0x3]
  40d6eb:	popf   
  40d6ec:	add    ebp,ecx
  40d6ee:	sbb    DWORD PTR [ebp+0x37a3fb89],esp
  40d6f4:	inc    esi
  40d6f5:	jmp    0xfa3f8088
  40d6fa:	inc    ebx
  40d6fb:	popf   
  40d6fc:	jge    0x40d69e
  40d6fe:	retf   0xff7
  40d701:	loopne 0x40d6c8
  40d703:	popa   
  40d704:	xchg   ecx,eax
  40d705:	out    0x9c,eax
  40d707:	inc    edx
  40d708:	(bad)  
  40d709:	call   0x8950b111
  40d70e:	jp     0x40d759
  40d710:	cli    
  40d711:	call   FWORD PTR [ecx]
  40d713:	sbb    cl,BYTE PTR [edi]
  40d715:	call   0xfab7f831
  40d71a:	sub    ax,WORD PTR [ebp+0x7eb3e8f7]
  40d721:	xor    ch,ch
  40d723:	sahf   
  40d724:	add    cl,BYTE PTR [ebx+0x4c8506a4]
  40d72a:	push   ebp
  40d72b:	sub    eax,DWORD PTR [esp+ecx*4-0x177dcf7]
  40d732:	or     DWORD PTR ss:[edi],esp
  40d735:	shl    BYTE PTR [eax+0x0],1
  40d738:	int    0xa6
  40d73a:	mov    ah,al
  40d73c:	inc    edx
  40d73d:	rol    BYTE PTR [ebp+esi*8-0x140177e0],0x9e
  40d745:	add    al,BYTE PTR [eax]
  40d747:	pusha  
  40d748:	vpaddw xmm0,xmm1,XMMWORD PTR [esi]
  40d74c:	sub    edi,DWORD PTR [edx-0x7c]
  40d74f:	frstor [eax]
  40d751:	mov    dh,bh
  40d753:	add    al,bh
  40d755:	add    eax,DWORD PTR [eax]
  40d757:	jmp    0x7448e56f
  40d75c:	and    dh,ch
  40d75e:	std    
  40d75f:	fisub  WORD PTR [eax]
  40d761:	mov    eax,ds:0x29e90d7
  40d766:	test   BYTE PTR [ecx+0x5152ea85],ch
  40d76c:	sub    BYTE PTR [eax-0x76361701],cl
  40d772:	je     0x40d755
  40d774:	sbb    esi,ebp
  40d776:	pop    ss
  40d777:	xlat   BYTE PTR ds:[ebx]
  40d778:	pop    esi
  40d779:	add    al,BYTE PTR [ebp-0x33890757]
  40d77f:	jmp    0x7609:0x1cff029e
  40d786:	test   ch,dh
  40d788:	adc    BYTE PTR [eax+0x410b00fe],cl
  40d78e:	lock add ah,0x4
  40d792:	add    al,ch
  40d794:	pop    ebx
  40d795:	cmp    eax,0xbe380000
  40d79a:	or     eax,0x4250084
  40d79f:	add    BYTE PTR [eax],al
  40d7a1:	inc    ecx
  40d7a2:	inc    ecx
  40d7a3:	lock push eax
  40d7a5:	inc    ecx
  40d7a6:	sub    DWORD PTR [edx],0x4e7753ff
  40d7ac:	push   ebx
  40d7ad:	ins    BYTE PTR es:[edi],dx
  40d7ae:	ja     0x40d7ad
  40d7b0:	add    BYTE PTR [edi+ecx*8+0x75dc75fe],al
  40d7b7:	adc    edi,DWORD PTR [eax-0x74ffbb97]
  40d7bd:	xchg   esp,eax
  40d7be:	or     esi,DWORD PTR [esp+edx*8+0x7f]
  40d7c2:	jae    0x40d7d1
  40d7c4:	mov    ?,esp
  40d7c6:	add    DWORD PTR [eax],eax
  40d7c8:	add    bh,dh
  40d7ca:	js     0x40d7d0
  40d7cc:	shufps xmm5,xmm6,0x1
  40d7d0:	add    BYTE PTR [esi+ebx*8-0x76],al
  40d7d4:	test   DWORD PTR [eax+0x77],esp
  40d7d7:	std    
  40d7d8:	call   FWORD PTR [edx]
  40d7da:	mov    ebp,0x77401483
  40d7df:	std    
  40d7e0:	ud1    edx,edi
  40d7e3:	add    DWORD PTR [eax],eax
  40d7e5:	xor    al,0xde
  40d7e7:	cmp    al,0x36
  40d7ea:	icebp  
  40d7eb:	or     eax,0xfa9b898b
  40d7f0:	call   DWORD PTR [ebx-0x45]
  40d7f3:	xor    DWORD PTR [eax],0x53
  40d7f6:	ja     0x40d7f5
  40d7f8:	jmp    0x40d7e9
  40d7fa:	fld    QWORD PTR [edx+0x1af0fbf8]
  40d800:	push   0x0
  40d802:	hlt    
  40d803:	or     BYTE PTR [esp+esi*1-0x1748f63],al
  40d80a:	adc    BYTE PTR [edi],ah
  40d80c:	out    dx,eax
  40d80d:	sti    
  40d80e:	fiadd  DWORD PTR [eax+0x8f1609a]
  40d814:	mov    WORD PTR [ebp+ebx*8-0x60d97a60],es
  40d81b:	cdq    
  40d81c:	add    al,BYTE PTR [eax+0xf029b3a]
  40d822:	sbb    BYTE PTR [edi-0x48630000],al
  40d828:	leave  
  40d829:	push   ds
  40d82a:	xchg   edx,eax
  40d82b:	push   ds
  40d82c:	test   DWORD PTR [ecx],0x5cc9999d
  40d832:	jns    0x40d882
  40d834:	sar    dh,1
  40d836:	adc    dl,cl
  40d838:	jge    0x40d7be
  40d83a:	mov    cl,0xd8
  40d83c:	mov    edi,esi
  40d83e:	int    0xe
  40d840:	xchg   BYTE PTR [ebx+0x4f8be870],dl
  40d846:	jne    0x40d883
  40d848:	test   al,0xfe
  40d84a:	bound  edi,QWORD PTR [edi+0x7f]
  40d84d:	mov    esp,0xfe8bfe31
  40d852:	stos   BYTE PTR es:[edi],al
  40d853:	push   cs
  40d854:	dec    DWORD PTR [eax-0x171c2d8]
  40d85a:	inc    edx
  40d85b:	and    ch,BYTE PTR [esi-0x69]
  40d85e:	cmp    BYTE PTR [eax-0x56277576],ah
  40d864:	jl     0x40d8aa
  40d866:	add    BYTE PTR [ecx+0x41],al
  40d869:	test   bh,bh
  40d86b:	and    bl,BYTE PTR [ecx-0x3f367b89]
  40d871:	mov    bh,dh
  40d873:	outs   dx,BYTE PTR ds:[esi]
  40d874:	jmp    0xa811ed03
  40d879:	inc    edx
  40d87a:	add    BYTE PTR [edx+0x1e03430f],dl
  40d880:	add    ch,BYTE PTR [ebp+0x64f75af8]
  40d886:	nop
  40d887:	jmp    0xd30e:0x553be886
  40d88e:	cmp    ebp,DWORD PTR [edx-0x62fac883]
  40d894:	add    ch,BYTE PTR [edx-0x76]
  40d897:	mov    al,0xf7
  40d899:	pop    sp
  40d89b:	popf   
  40d89c:	add    ch,cl
  40d89e:	sbb    eax,0x7ccf2a92
  40d8a3:	sbb    esi,edx
  40d8a5:	pop    ebp
  40d8a6:	mov    ebp,DWORD PTR [ebx+0x5b78f91b]
  40d8ac:	(bad)  
  40d8ad:	mov    eax,0x45cf2178
  40d8b2:	mov    edx,DWORD PTR [ebx-0x72bed9cd]
  40d8b8:	out    0xe8,eax
  40d8ba:	add    ebx,DWORD PTR [ebp+0x7baefe9a]
  40d8c0:	xchg   BYTE PTR [edx-0x17607a11],dl
  40d8c6:	add    ebx,DWORD PTR [ebp+0xffad78]
  40d8cc:	push   ds
  40d8cd:	ret    
  40d8ce:	fnstsw WORD PTR [edi-0x31]
  40d8d1:	add    ebp,ecx
  40d8d3:	add    esp,DWORD PTR [edx-0x1d86d7b4]
  40d8d9:	std    
  40d8da:	mov    cl,0x94
  40d8dc:	xchg   ebx,eax
  40d8dd:	je     0x40d862
  40d8df:	add    al,0x9d
  40d8e1:	add    bh,BYTE PTR [ecx]
  40d8e3:	jns    0x40d8c8
  40d8e5:	push   DWORD PTR [edi]
  40d8e7:	jns    0x40d902
  40d8e9:	outs   dx,DWORD PTR ds:[esi]
  40d8ea:	aam    0x8a
  40d8ec:	and    esi,DWORD PTR [ecx+eax*8]
  40d8ef:	mov    ah,dh
  40d8f1:	test   ebp,eax
  40d8f3:	rcr    DWORD PTR [esi],0x0
  40d8f6:	push   ebp
  40d8f7:	xchg   DWORD PTR [ebx],ecx
  40d8f9:	xchg   bh,bh
  40d8fb:	call   0xfa460685
  40d900:	fidiv  WORD PTR [esi+0x4c]
  40d903:	mov    ch,0xa9
  40d905:	xor    dl,BYTE PTR [eax+0x70]
  40d908:	pop    ebp
  40d909:	mov    dh,0x8c
  40d90b:	ins    BYTE PTR es:[edi],dx
  40d90c:	jb     0x40d897
  40d90e:	dec    BYTE PTR [esi+0x3d14858e]
  40d914:	int    0xc5
  40d916:	jmp    DWORD PTR [ebx-0x22]
  40d919:	hlt    
  40d91a:	test   al,al
  40d91c:	cdq    
  40d91d:	add    al,BYTE PTR [eax]
  40d91f:	mov    ebx,0x72f5d0f0
  40d924:	pop    ebp
  40d925:	mov    dh,0x3a
  40d927:	daa    
  40d928:	call   0x4b78:0xe09f0ef1
  40d92f:	pop    esp
  40d930:	add    dh,ah
  40d932:	retf   0xed47
  40d935:	mov    ds:0x82a98af1,al
  40d93a:	enter  0xbcc5,0x12
  40d93e:	xchg   ecx,eax
  40d940:	imul   ebp,DWORD PTR [eax],0x11467203
  40d946:	test   bh,bh
  40d948:	call   0xf98852eb
  40d94d:	test   eax,0x27194c7b
  40d952:	adc    eax,0xd91d7418
  40d957:	(bad)  
  40d958:	(bad)  
  40d959:	adc    al,0x35
  40d95b:	call   0xfec4c9bb
  40d960:	xchg   DWORD PTR [ebx],esp
  40d962:	inc    esi
  40d963:	sub    esp,esi
  40d965:	and    al,0x84
  40d967:	push   ss
  40d968:	push   esp
  40d969:	and    eax,0x142db47a
  40d96e:	test   dh,bh
  40d970:	pusha  
  40d971:	push   0xffffffd5
  40d973:	inc    BYTE PTR [eax]
  40d975:	fstp   TBYTE PTR [edx-0x3]
  40d978:	jne    0x40d9b2
  40d97a:	jnp    0x40d98f
  40d97c:	or     dl,ah
  40d97e:	inc    eax
  40d97f:	add    bl,ch
  40d981:	sti    
  40d982:	jge    0x40d980
  40d984:	or     ch,bl
  40d986:	or     bh,BYTE PTR [esi+0x6a00f400]
  40d98c:	add    ch,BYTE PTR [eax+eiz*8+0x7a188588]
  40d993:	std    
  40d994:	inc    DWORD PTR [eax]
  40d996:	scas   al,BYTE PTR es:[edi]
  40d997:	add    cl,BYTE PTR [ebp-0x732f3fb9]
  40d99d:	test   DWORD PTR [edx+edi*2],eax
  40d9a0:	std    
  40d9a1:	call   DWORD PTR [ebx+eax*8+0xb4f043]
  40d9a8:	add    BYTE PTR [eax],al
  40d9aa:	dec    esp
  40d9ab:	(bad)
  40d9ae:	dec    ebx
  40d9af:	in     al,0x7
  40d9b1:	pop    ebx
  40d9b2:	bound  eax,QWORD PTR [edi]
  40d9b4:	add    ebx,DWORD PTR [edi]
  40d9b6:	pop    es
  40d9b7:	mov    esi,0x6c498300
  40d9bc:	std    
  40d9bd:	data16 std 
  40d9bf:	add    ebp,DWORD PTR ds:0x7379cbff
  40d9c5:	push   ebp
  40d9c6:	or     al,0x80
  40d9c8:	(bad)  
  40d9c9:	push   DWORD PTR [ebp+ecx*1-0x7c]
  40d9cd:	adc    al,0x89
  40d9cf:	jns    0x40d9ce
  40d9d1:	push   0x44
  40d9d3:	sar    dh,1
  40d9d5:	adc    eax,0x3e9210
  40d9da:	and    al,BYTE PTR [edi]
  40d9dc:	test   BYTE PTR [ebx+ecx*2],ch
  40d9df:	jnp    0x40d9de
  40d9e1:	mov    bp,0x1303
  40d9e5:	std    
  40d9e6:	cmp    edi,DWORD PTR [ebx+0xd]
  40d9e9:	mov    bh,0xf4
  40d9eb:	jle    0x40d9af
  40d9ed:	or     al,0x9d
  40d9ef:	push   ds
  40d9f0:	dec    esi
  40d9f1:	adc    ebx,DWORD PTR [eax]
  40d9f3:	mov    ch,0x87
  40d9f5:	mov    BYTE PTR [eax+0x5d],bl
  40d9f8:	call   0x8902:0x9b460066
  40d9ff:	pop    eax
  40da00:	mov    ebp,0xa4faf783
  40da05:	jle    0x40da58
  40da07:	pushf  
  40da08:	cdq    
  40da09:	add    dh,BYTE PTR [ebx]
  40da0b:	fstp   QWORD PTR [eax]
  40da0d:	push   es
  40da0e:	fmul   QWORD PTR [edx+0x65bf6d9c]
  40da14:	sbb    BYTE PTR [ebx-0x3a5e1f5],ah
  40da1a:	mov    BYTE PTR [eax+0x69],ah
  40da1d:	leave  
  40da1e:	pop    esp
  40da1f:	jmp    0xf24fb5af
  40da24:	push   ds
  40da25:	xlat   BYTE PTR ds:[ebx]
  40da26:	(bad)  
  40da27:	mov    dl,0x1c
  40da29:	retf   0xc944
  40da2c:	scas   al,BYTE PTR es:[edi]
  40da2d:	out    0xfe,eax
  40da2f:	sub    BYTE PTR [ecx],ch
  40da31:	jbe    0x40d9b7
  40da33:	leave  
  40da34:	xor    al,0x88
  40da36:	(bad)  
  40da37:	in     eax,dx
  40da38:	adc    BYTE PTR [esi],bh
  40da3a:	aam    0xf7
  40da3c:	cdq    
  40da3d:	fcmovnb st,st(2)
  40da3f:	in     eax,dx
  40da40:	push   ds
  40da41:	call   FWORD PTR [esi]
  40da43:	int    0xd4
  40da45:	or     eax,0xfe8672ec
  40da4a:	adc    eax,0x7c8399dd
  40da4f:	jno    0x40da3d
  40da51:	test   DWORD PTR [ebx+0x2991b],0x8c970652
  40da5b:	and    BYTE PTR [ebp+0x4200fe88],ch
  40da61:	add    DWORD PTR [ecx+0x7e999cb5],esp
  40da67:	mov    edi,0x5c6d02a2
  40da6c:	sub    al,BYTE PTR [ebx-0x4d568518]
  40da72:	arpl   WORD PTR [ecx+0xd],ax
  40da75:	xor    bl,BYTE PTR [ecx+eax*4-0x3a]
  40da79:	add    ebp,0xffffff87
  40da7c:	pop    edx
  40da7d:	iret   
  40da7e:	mov    eax,ds:0xb5834533
  40da83:	add    al,0x9d
  40da85:	xlat   BYTE PTR ds:[ebx]
  40da86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da87:	xor    al,0x20
  40da89:	(bad)  
  40da8a:	fnsave [ebx]
  40da8c:	jmp    0xfb4a:0x89878d0c
  40da93:	inc    ebx
  40da94:	popf   
  40da95:	(bad)  
  40da96:	test   eax,0x3df3a107
  40da9b:	jns    0x40db13
  40da9d:	cmp    DWORD PTR [ebp-0x79],0xffffff85
  40daa1:	xor    eax,0xcf311195
  40daa6:	lahf   
  40daa7:	push   ds
  40daa8:	and    al,0xf3
  40daaa:	jo     0x40dae3
  40daac:	lahf   
  40daad:	sbb    al,0x6a
  40daaf:	dec    ecx
  40dab0:	jbe    0x40da35
  40dab2:	push   ebp
  40dab3:	xchg   DWORD PTR [ebx-0x6f3a8bef],esi
  40dab9:	dec    esp
  40daba:	push   0x27809fa5
  40dabf:	add    DWORD PTR [ecx],0x5f
  40dac2:	fnstsw WORD PTR [ebx+0x0]
  40dac5:	jmp    0x40dacc
  40dac7:	mov    ah,0xf9
  40dac9:	add    al,0x13
  40dacb:	je     0x40db46
  40dacd:	scas   al,BYTE PTR es:[edi]
  40dace:	sbb    DWORD PTR ds:0x6a117787,0x94057909
  40dad8:	inc    esp
  40dad9:	mov    DWORD PTR [esi],0x817a7974
  40dadf:	std    
  40dae0:	xchg   ch,ch
  40dae2:	(bad)  
  40dae3:	jmp    DWORD PTR [ebp-0x20182cc6]
  40dae9:	add    DWORD PTR [ecx-0x7060ac02],eax
  40daef:	mov    WORD PTR [edi],cs
  40daf1:	sbb    al,BYTE PTR [ecx-0x326bc702]
  40daf7:	ss iret 
  40daf9:	leave  
  40dafa:	push   0xfffffffa
  40dafc:	mov    eax,ds:0x34fe8123
  40db01:	cmp    eax,0x255d8c8f
  40db06:	cmp    esi,0xc605ae18
  40db0c:	cmp    DWORD PTR [edx+0x1b917481],edi
  40db12:	pop    ss
  40db13:	add    al,0xff
  40db15:	pop    esi
  40db16:	add    ch,bl
  40db18:	jmp    0x40db09
  40db1a:	pop    esp
  40db1b:	mov    ch,BYTE PTR [eiz*1+0x166ac935]
  40db22:	or     DWORD PTR [esi],0x848ae15c
  40db28:	leave  
  40db29:	add    BYTE PTR [eax],bl
  40db2b:	cmp    esi,0x8903e16a
  40db31:	ins    BYTE PTR es:[edi],dx
  40db32:	mov    dl,0x7f
  40db34:	(bad)  
  40db35:	push   esi
  40db36:	pop    ss
  40db37:	iret   
  40db38:	pop    es
  40db39:	pusha  
  40db3a:	adc    eax,0x2346fe1a
  40db3f:	mov    WORD PTR [ecx+edx*2+0x1],cs
  40db43:	(bad)  
  40db44:	sbb    esi,DWORD PTR [edi]
  40db46:	and    eax,DWORD PTR [eax-0x705065ae]
  40db4c:	test   ch,bh
  40db4e:	and    BYTE PTR [eax-0x7e504602],al
  40db54:	adc    al,0x59
  40db56:	dec    ebp
  40db57:	inc    ecx
  40db58:	add    BYTE PTR [esi+ebx*2+0x10],ah
  40db5c:	pop    DWORD PTR [eax]
  40db5e:	dec    ebp
  40db5f:	mov    ebp,edi
  40db61:	dec    edi
  40db63:	adc    ch,ah
  40db65:	call   0x40aa09
  40db6a:	lahf   
  40db6b:	ja     0x40daee
  40db6d:	clc    
  40db6e:	inc    ebx
  40db6f:	adc    DWORD PTR [esi],eax
  40db71:	(bad)  
  40db72:	jns    0x40db03
  40db74:	(bad)  
  40db75:	jmp    0x9ecb:0xfb5bfd07
  40db7c:	ds fsub st,st(3)
  40db7f:	xchg   BYTE PTR [ecx-0xc63138b],cl
  40db85:	add    BYTE PTR [eax*1+0x52b45c6],al
  40db8c:	jmp    0x534dc82
  40db91:	add    BYTE PTR [ebx],dh
  40db93:	xor    al,0x20
  40db95:	cmp    DWORD PTR [esi],0xffffffdb
  40db98:	push   ds
  40db99:	mov    DWORD PTR [esi-0x3a],eax
  40db9c:	prefetch BYTE PTR [edx-0x1c]
  40dba0:	test   DWORD PTR [eax+ecx*1-0x5c],0x33d90b9e
  40dba8:	xchg   ecx,ebp
  40dbaa:	add    edi,DWORD PTR ds:0x7a8b0428
  40dbb0:	sahf   
  40dbb1:	xchg   edi,eax
  40dbb2:	mov    bh,0xb5
  40dbb4:	add    al,0x8b
  40dbb6:	lock std 
  40dbb8:	(bad)  
  40dbba:	and    edx,0xffffff85
  40dbbd:	or     eax,0x6f884
  40dbc2:	add    bl,al
  40dbc4:	pavgb  mm2,QWORD PTR [ebx+0x1a]
  40dbc8:	das    
  40dbc9:	call   0xfdc686be
  40dbce:	mov    edi,DWORD PTR [ecx+eax*4+0x3b0901fd]
  40dbd5:	lea    eax,[ebp-0x63]
  40dbd8:	popa   
  40dbd9:	xor    cl,BYTE PTR [ebp-0x17cbc628]
  40dbdf:	loope  0x40dba3
  40dbe1:	add    al,BYTE PTR [eax]
  40dbe3:	push   ss
  40dbe4:	div    DWORD PTR [edx+0x6e3358a]
  40dbea:	aam    0x45
  40dbec:	mov    DWORD PTR [ecx+0x0],ecx
  40dbef:	popf   
  40dbf0:	in     al,dx
  40dbf1:	cmp    esi,0x0
  40dbf4:	test   eax,0xb4e82bf6
  40dbf9:	loopne 0x40dbfe
  40dbfb:	add    BYTE PTR [esi],ah
  40dbfd:	daa    
  40dbfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbff:	adc    ch,0x6b
  40dc02:	xor    dl,BYTE PTR [ebx+0x6a]
  40dc05:	ror    BYTE PTR ds:0x8cfd0508,0xfe
  40dc0c:	repnz in al,0x8a
  40dc0f:	sub    dl,0x6a
  40dc12:	or     eax,0xb016e20b
  40dc17:	mov    bh,BYTE PTR [eax+0x61]
  40dc1a:	call   0x508b:0x26b0a91
  40dc21:	popf   
  40dc22:	call   0xba83:0x26b0430
  40dc29:	clc    
  40dc2a:	repz adc DWORD PTR [esi-0x10],0xffffff83
  40dc2f:	(bad)  
  40dc30:	push   ds
  40dc31:	jmp    0x278e5037
  40dc36:	ds sti 
  40dc38:	popf   
  40dc39:	les    edi,FWORD PTR [eax]
  40dc3b:	mov    edx,DWORD PTR [ebx-0x634a113f]
  40dc41:	imul   esi,DWORD PTR [edi-0x11],0x74843f1e
  40dc48:	mov    ds:0x98f73e2f,eax
  40dc4d:	(bad)  
  40dc4e:	int3   
  40dc4f:	push   ebp
  40dc50:	jne    0x40dc54
  40dc52:	sub    DWORD PTR ds:0xe1e029d,ecx
  40dc58:	add    BYTE PTR ds:0xc984bed3,bh
  40dc5e:	or     al,BYTE PTR [ecx]
  40dc60:	and    eax,0x80057f53
  40dc65:	dec    edx
  40dc66:	add    DWORD PTR [eax+edi*8+0x27],esi
  40dc6a:	fucom  st(0)
  40dc6c:	sub    eax,0x235c145
  40dc71:	popf   
  40dc72:	imul   esi,esi,0xffffff86
  40dc75:	sub    bh,BYTE PTR [edi+0x53]
  40dc78:	or     ah,bl
  40dc7a:	(bad)  
  40dc7b:	fld    QWORD PTR ds:0xe1610306
  40dc81:	pop    es
  40dc82:	push   0xffffff99
  40dc84:	mov    esp,0xf9be029d
  40dc89:	shr    BYTE PTR [ecx-0x2],cl
  40dc8c:	pop    edx
  40dc8d:	repz jle 0x40dcf2
  40dc90:	leave  
  40dc91:	out    0x3d,eax
  40dc93:	call   0x9ff9f4aa
  40dc98:	sbb    ebx,0xffffff81
  40dc9b:	adc    edi,DWORD PTR [ebx-0x2e]
  40dc9e:	pcmpgtw mm6,QWORD PTR [ebx-0x7c7a813b]
  40dca5:	dec    ecx
  40dca6:	bound  edi,QWORD PTR [ebp-0x7]
  40dca9:	mov    bl,0xeb
  40dcab:	jne    0x40dc30
  40dcad:	sub    DWORD PTR [edx],ecx
  40dcaf:	adc    DWORD PTR [edx],0x89657eb3
  40dcb5:	loop   0x40dcc5
  40dcb7:	je     0x40dcfd
  40dcb9:	test   DWORD PTR [eax-0x6cff7cb1],ebx
  40dcbf:	fsub   DWORD PTR [ecx+0x70]
  40dcc2:	pop    ds
  40dcc3:	outs   dx,DWORD PTR ds:[esi]
  40dcc4:	or     BYTE PTR [edi-0x7c1f0ff],al
  40dcca:	mov    bh,0x74
  40dccc:	jmp    FWORD PTR [ebx-0x5b72ff76]
  40dcd2:	jmp    0xfecd:0xfaac8ccd
  40dcd9:	xchg   esp,eax
  40dcda:	stos   BYTE PTR es:[edi],al
  40dcdb:	inc    ebp
  40dcdc:	inc    esp
  40dcdd:	adc    eax,0xe90002a9
  40dce2:	push   edx
  40dce3:	or     eax,0x1702dcff
  40dce8:	inc    eax
  40dce9:	jmp    0xe4b49b13
  40dcee:	sbb    eax,DWORD PTR [esi-0x2]
  40dcf1:	add    bl,dh
  40dcf3:	jge    0x40dd09
  40dcf5:	jmp    0xd2409f7e
  40dcfa:	(bad)
  40dcfe:	and    edi,eax
  40dd00:	test   DWORD PTR [edi+0x1a],0x94d2e5c7
  40dd07:	and    DWORD PTR [ecx+eax*8-0x62],0x204fc031
  40dd0f:	(bad)  
  40dd10:	cmc    
  40dd11:	arpl   bp,dx
  40dd13:	or     eax,0xeb642c88
  40dd18:	pop    es
  40dd19:	ins    BYTE PTR es:[edi],dx
  40dd1a:	in     eax,0x71
  40dd1c:	dec    edi
  40dd1d:	xchg   esi,eax
  40dd1e:	aad    0x5
  40dd20:	(bad)  
  40dd21:	and    al,0x0
  40dd23:	inc    ebp
  40dd24:	jge    0x40dd0c
  40dd26:	fiadd  DWORD PTR ds:0x69ba0003
  40dd2c:	cmp    DWORD PTR [edi-0x75bcea1a],0xf4359a8
  40dd36:	jmp    0x692c6600
  40dd3b:	or     dh,BYTE PTR [esi]
  40dd3d:	add    ecx,ebp
  40dd3f:	sahf   
  40dd40:	ror    DWORD PTR [edx+0x56d496ac],1
  40dd46:	add    BYTE PTR [edi],ah
  40dd48:	jmp    0x1c54d15
  40dd4d:	xor    ecx,ecx
  40dd4f:	push   0xb5940f07
  40dd54:	xor    al,0xf6
  40dd56:	push   esi
  40dd57:	push   cs
  40dd58:	or     BYTE PTR [ebp-0x76ae5fbb],cl
  40dd5e:	sti    
  40dd5f:	mov    ebp,0x4de8ea52
  40dd64:	mov    ch,0xff
  40dd66:	push   DWORD PTR [eax-0x9f08c3f]
  40dd6c:	shl    bh,0xa6
  40dd6f:	inc    ebp
  40dd70:	add    DWORD PTR [eax],eax
  40dd72:	cmp    BYTE PTR [ecx+0x2073fefc],0x8e
  40dd79:	stc    
  40dd7a:	push   esi
  40dd7b:	outs   dx,BYTE PTR ds:[esi]
  40dd7c:	add    DWORD PTR [ebp-0x19aa10bb],ecx
  40dd82:	cli    
  40dd83:	daa    
  40dd84:	add    DWORD PTR [eax],eax
  40dd86:	test   BYTE PTR [eax],al
  40dd88:	xor    al,0x75
  40dd8a:	out    0xeb,al
  40dd8c:	sbb    ecx,DWORD PTR [edi-0x3e8018b5]
  40dd92:	and    eax,DWORD PTR [eax]
  40dd94:	hlt    
  40dd95:	cmp    esi,0xe8c1258a
  40dd9b:	adc    bh,cl
  40dd9d:	(bad)  
  40dd9e:	mov    ecx,edx
  40dda0:	inc    ebp
  40dda1:	in     al,0xfe
  40dda3:	(bad)  
  40dda4:	mov    ah,0x0
  40dda6:	shl    ecx,0xe4
  40dda9:	or     eax,0xe0cc1d1
  40ddae:	shl    edx,0xbc
  40ddb1:	or     eax,0x450248c2
  40ddb6:	cmc    
  40ddb7:	pop    edx
  40ddb8:	jns    0x40dd3a
  40ddba:	(bad)  
  40ddbb:	inc    DWORD PTR [ebx+edx*1+0x699d8487]
  40ddc2:	add    al,BYTE PTR [eax]
  40ddc4:	imul   DWORD PTR [ecx-0x14]
  40ddc7:	add    BYTE PTR [eax],dl
  40ddc9:	scas   eax,DWORD PTR es:[edi]
  40ddca:	jnp    0x40de1b
  40ddcc:	shr    DWORD PTR es:[ebx-0x52],0x2e
  40ddd1:	imul   eax,DWORD PTR [edx],0xffffff84
  40ddd4:	pop    ebp
  40ddd5:	mov    dh,0x98
  40ddd7:	mov    eax,ebx
  40ddd9:	and    BYTE PTR [ebx+eax*4-0x17dd270],cl
  40dde0:	push   edx
  40dde1:	out    dx,al
  40dde2:	inc    ebx
  40dde3:	jae    0x40dd80
  40dde5:	mov    ds:0x6a42fd81,eax
  40ddea:	add    al,BYTE PTR [eax]
  40ddec:	add    BYTE PTR [ebx+0x32796b13],bh
  40ddf2:	jne    0x40de73
  40ddf4:	mov    eax,fs
  40ddf6:	jns    0x40ddca
  40ddf8:	xor    ah,BYTE PTR [edx]
  40ddfa:	cmp    eax,0xae208cd9
  40ddff:	cmp    dh,0x12
  40de02:	cmp    cl,BYTE PTR [ebx+0x154d0d7c]
  40de08:	mov    ah,0xa8
  40de0a:	sub    DWORD PTR [eax*4-0x39f5ca23],eax
  40de11:	pop    eax
  40de12:	mov    esp,0xe0aeeadb
  40de17:	cmc    
  40de18:	out    dx,eax
  40de19:	div    BYTE PTR [edx-0x7d]
  40de1c:	jge    0x40ddbf
  40de1e:	test   BYTE PTR [bx+si],0x26
  40de22:	sbb    al,0x20
  40de24:	cmp    edx,edx
  40de26:	push   ss
  40de27:	jne    0x40de13
  40de29:	scas   eax,DWORD PTR es:[edi]
  40de2a:	lock enter 0x4717,0x65
  40de2f:	cmp    DWORD PTR [edi+0x448f1999],0xffffffc2
  40de36:	sbb    DWORD PTR [ebx+ecx*8-0x38],ebp
  40de3a:	add    ah,BYTE PTR [esi-0x80]
  40de3d:	fwait
  40de3e:	cmc    
  40de3f:	pop    eax
  40de40:	sub    BYTE PTR [ecx-0x753c00f6],0x38
  40de47:	push   esi
  40de48:	neg    DWORD PTR [ebx-0x7e]
  40de4b:	ret    
  40de4c:	js     0x40de22
  40de4e:	inc    esp
  40de4f:	mov    ds:0xb9d007c,eax
  40de54:	ins    BYTE PTR es:[edi],dx
  40de55:	sub    al,0x9c
  40de57:	add    ch,cl
  40de59:	in     eax,dx
  40de5a:	xchg   edx,eax
  40de5b:	lea    ebp,[ebx-0x46fd3bad]
  40de61:	sub    BYTE PTR [ecx+0x4ac3ff36],0x80
  40de68:	and    al,0xf
  40de6a:	mov    bh,0x0
  40de6c:	mov    eax,ds:0x18c525e9
  40de71:	adc    bl,ch
  40de73:	les    ecx,FWORD PTR [ebx+ecx*8]
  40de76:	fwait
  40de77:	xchg   BYTE PTR [eax+0x3],al
  40de7a:	popf   
  40de7b:	add    dh,BYTE PTR [ecx]
  40de7d:	clc    
  40de7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de7f:	inc    esp
  40de80:	and    esi,DWORD PTR [edi+0x77]
  40de83:	imul   edx,esp,0x5c029d04
  40de89:	leave  
  40de8a:	shr    BYTE PTR [ecx-0x4f],cl
  40de8d:	mov    eax,0x7472029d
  40de92:	and    eax,0xe883b8f5
  40de97:	jp     0x40decd
  40de99:	imul   esp,ebx,0x74ea94f4
  40de9f:	aam    0x39
  40dea1:	ins    BYTE PTR es:[edi],dx
  40dea2:	jge    0x40df20
  40dea4:	xchg   ebp,eax
  40dea5:	jg     0x40debe
  40dea7:	jp     0x40df12
  40dea9:	jg     0x40de48
  40deab:	cmc    
  40deac:	push   ds
  40dead:	xchg   ecx,eax
  40deae:	popa   
  40deaf:	or     bl,BYTE PTR [ecx]
  40deb1:	xchg   ecx,eax
  40deb2:	pop    ecx
  40deb3:	jb     0x40deb4
  40deb5:	sbb    BYTE PTR [eax],al
  40deb7:	cmp    edx,edi
  40deb9:	mov    ch,0xe8
  40debb:	sahf   
  40debc:	xchg   DWORD PTR [ecx+ebx*2+0x26],esi
  40dec0:	jb     0x40de4a
  40dec2:	fdiv   st(6),st
  40dec4:	popa   
  40dec5:	fwait
  40dec6:	lahf   
  40dec7:	mov    al,ds:0x24e8302
  40decc:	out    dx,eax
  40decd:	or     esi,DWORD PTR [edx+0x7c]
  40ded0:	add    al,dh
  40ded2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded3:	jmp    0x40deb1
  40ded5:	call   0x43805f
  40deda:	xchg   esi,eax
  40dedb:	test   bl,0x73
  40dede:	jmp    0xd856c81
  40dee3:	xlat   BYTE PTR es:[ebx]
  40dee5:	pop    es
  40dee6:	push   0xffffffd9
  40dee8:	add    edx,DWORD PTR [eax-0x7d]
  40deeb:	rcl    DWORD PTR fs:[edx+0x11],1
  40deef:	shl    DWORD PTR [esi-0x2],cl
  40def2:	(bad)  
  40def3:	daa    
  40def4:	jb     0x40de78
  40def6:	mul    BYTE PTR [ecx+0x25ee07ef]
  40defc:	pop    edx
  40defd:	out    0xa5,eax
  40deff:	push   edx
  40df00:	add    eax,DWORD PTR [eax]
  40df02:	jb     0x40df19
  40df04:	pop    edx
  40df05:	out    0x32,eax
  40df07:	push   ebx
  40df08:	add    eax,DWORD PTR [eax]
  40df0a:	push   0xffffff83
  40df0c:	js     0x40df1c
  40df0e:	ins    DWORD PTR es:[edi],dx
  40df0f:	or     BYTE PTR [ecx-0x2],bh
  40df12:	mov    esi,0x3d00791f
  40df17:	xchg   ebp,eax
  40df18:	inc    eax
  40df19:	inc    esp
  40df1a:	mov    dl,0x0
  40df1c:	sahf   
  40df1d:	mov    WORD PTR [edx+eiz*4-0x5],es
  40df21:	xlat   BYTE PTR ds:[ebx]
  40df22:	pop    edx
  40df23:	mov    al,0x5c
  40df25:	add    eax,0xbf160f00
  40df2a:	in     al,0x7
  40df2c:	adc    BYTE PTR [edi+0x4a2f00d1],bh
  40df32:	in     eax,0x8d
  40df34:	mov    cl,0xd5
  40df36:	xchg   DWORD PTR [ebp+0x8],eax
  40df39:	out    dx,al
  40df3a:	and    eax,0x8b05b5b3
  40df3f:	lock pop es
  40df41:	clc    
  40df42:	std    
  40df43:	psubb  mm7,QWORD PTR [ebx]
  40df46:	(bad)  
  40df47:	push   ebx
  40df49:	dec    edi
  40df4a:	out    0xd5,al
  40df4c:	addr16 add eax,0xe939ff00
  40df52:	push   0xe6540a5a
  40df57:	jo     0x40df0a
  40df59:	clc    
  40df5a:	std    
  40df5b:	sub    DWORD PTR [esi+edi*8-0x12e5f78c],0x58
  40df63:	mov    ah,0x45
  40df65:	add    eax,0xfdb70feb
  40df6a:	std    
  40df6b:	jne    0x40dfa7
  40df6d:	mov    edi,0xebfff743
  40df72:	add    al,dh
  40df74:	stc    
  40df75:	sti    
  40df76:	(bad)  
  40df77:	out    0x9f,eax
  40df79:	mov    edx,0x2b4ffff
  40df7e:	sti    
  40df7f:	add    DWORD PTR [eax],eax
  40df81:	jns    0x40df25
  40df83:	jle    0x40e002
  40df85:	jmp    0x40dfe2
  40df87:	jb     0x40df1f
  40df89:	repz jo 0x40df76
  40df8c:	jmp    FWORD PTR [ecx-0x11]
  40df8f:	push   0x33e697ff
  40df94:	std    
  40df95:	xor    esi,edi
  40df97:	add    eax,0x3
  40df9a:	nop
  40df9b:	mov    esi,0x895178eb
  40dfa0:	in     al,dx
  40dfa1:	inc    edi
  40dfa2:	repnz adc al,BYTE PTR [ebx+0x56fefa99]
  40dfa9:	popf   
  40dfaa:	in     al,0xfd
  40dfac:	add    ebx,DWORD PTR [eax]
  40dfae:	mov    BYTE PTR [esi+ecx*4],cl
  40dfb1:	adc    eax,0x1e00026b
  40dfb6:	(bad)  
  40dfb7:	jnp    0x40dfb8
  40dfb9:	dec    edi
  40dfba:	add    eax,0x1dda5b3c
  40dfbf:	je     0x40dfc1
  40dfc1:	popf   
  40dfc2:	imul   eax,DWORD PTR [edx],0x88c5f089
  40dfc8:	add    eax,0xe77aa69e
  40dfcd:	and    ebx,DWORD PTR [edi+0x2]
  40dfd0:	add    BYTE PTR [ecx],ah
  40dfd2:	sub    dh,bh
  40dfd4:	pop    ss
  40dfd5:	es lahf 
  40dfd7:	jbe    0x40df63
  40dfd9:	pop    ebx
  40dfda:	ret    0x347
  40dfdd:	popf   
  40dfde:	imul   edi,DWORD PTR [ebx+0x4c],0xefcf2151
  40dfe5:	add    BYTE PTR [esi+esi*4+0x11e8286e],al
  40dfec:	imul   eax,DWORD PTR [esi+0x16],0xe088729f
  40dff3:	std    
  40dff4:	cmp    bh,al
  40dff6:	mov    al,0xb6
  40dff8:	xchg   DWORD PTR [ecx+edi*1-0x1b],edi
  40dffc:	add    eax,0x8d71d08b
  40e001:	dec    ebx
  40e002:	pushf  
  40e003:	jno    0x40dfed
  40e005:	adc    ebp,DWORD PTR [esi+eiz*8-0x3a]
  40e009:	push   es
  40e00a:	xchg   ebp,eax
  40e00b:	cmp    DWORD PTR [ebp+0x14],edi
  40e00e:	shr    DWORD PTR [edi-0x3e],0xff
  40e012:	pop    ds
  40e013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e014:	push   cs
  40e015:	test   ebp,ebx
  40e017:	cs or  eax,0x87ad608b
  40e01d:	int    0xf5
  40e01f:	jmp    0xcea6:0x29d0006
  40e026:	(bad)  
  40e027:	sub    esp,DWORD PTR [edx+0x6176617c]
  40e02d:	mov    dh,0x3
  40e030:	xchg   edx,eax
  40e031:	cmp    BYTE PTR [ebx-0x2],ah
  40e034:	add    al,0x46
  40e036:	mov    bl,0xbd
  40e038:	je     0x40dfc2
  40e03a:	sub    dh,bh
  40e03c:	jne    0x40e004
  40e03e:	mov    dl,0x1
  40e040:	or     al,0x70
  40e042:	popf   
  40e043:	aad    0x60
  40e045:	cmp    dl,BYTE PTR [eax]
  40e047:	outs   dx,DWORD PTR ds:[esi]
  40e048:	in     eax,dx
  40e049:	pop    DWORD PTR [eax]
  40e04b:	pop    es
  40e04c:	js     0x40e0a3
  40e04e:	jl     0x40e037
  40e050:	xlat   BYTE PTR ds:[ebx]
  40e051:	pop    ds
  40e052:	inc    eax
  40e053:	ror    BYTE PTR [ebx+0x6a5b8838],1
  40e059:	rol    DWORD PTR [esi],cl
  40e05b:	popf   
  40e05c:	add    ch,BYTE PTR [ebp+0x43]
  40e05f:	out    dx,al
  40e060:	pop    ss
  40e061:	pop    esp
  40e062:	les    esp,FWORD PTR [edx-0x61b2ef2e]
  40e068:	add    ch,cl
  40e06a:	xchg   BYTE PTR [edx],cl
  40e06c:	stc    
  40e06d:	cli    
  40e06e:	mov    BYTE PTR [ebx-0x75],bl
  40e071:	push   ds
  40e072:	imul   ebp,ebx,0x1
  40e075:	jmp    0x7382f97d
  40e07a:	push   es
  40e07b:	outs   dx,BYTE PTR ds:[esi]
  40e07c:	inc    edx
  40e07d:	test   al,0xdd
  40e07f:	pop    edi
  40e080:	xor    ebp,DWORD PTR [ecx]
  40e082:	fstp   st(7)
  40e084:	int3   
  40e085:	jno    0x40e0ef
  40e087:	ins    DWORD PTR es:[edi],dx
  40e088:	shl    DWORD PTR [esi],cl
  40e08a:	rcr    DWORD PTR [ecx],cl
  40e08c:	mov    ebp,0xd3fad4d4
  40e091:	push   0x4
  40e093:	popf   
  40e094:	mov    eax,eax
  40e096:	aaa    
  40e097:	jmp    0x40e0d3
  40e099:	mov    edi,0xff8ba6f0
  40e09e:	adc    esp,DWORD PTR [ebp-0x7c]
  40e0a1:	cli    
  40e0a2:	call   0xf1ab1379
  40e0a7:	inc    esi
  40e0a8:	or     edx,ebx
  40e0aa:	sahf   
  40e0ab:	inc    esi
  40e0ac:	cmp    al,0xc6
  40e0ae:	sbb    eax,0x2f899e00
  40e0b3:	pusha  
  40e0b4:	mov    cl,0x2
  40e0b6:	mov    edi,DWORD PTR [ecx+0x1c]
  40e0b9:	ins    DWORD PTR es:[edi],dx
  40e0ba:	jae    0x40e09b
  40e0bc:	sbb    DWORD PTR ds:0x6a9d1789,esi
  40e0c2:	(bad)  [edi+0x16]
  40e0c5:	jne    0x40e049
  40e0c7:	out    0x92,eax
  40e0c9:	add    edi,DWORD PTR [ebp-0xd]
  40e0cc:	pop    es
  40e0cd:	xor    al,ch
  40e0cf:	out    dx,eax
  40e0d0:	jmp    0x40e146
  40e0d2:	(bad)  
  40e0d3:	mov    bh,0xb
  40e0d5:	dec    DWORD PTR [edx+0x56fe022f]
  40e0db:	push   ecx
  40e0dc:	call   0xaa77df34
  40e0e1:	inc    edx
  40e0e2:	pop    esi
  40e0e3:	(bad)  
  40e0e4:	jnp    0x40e131
  40e0e6:	ret    0x5872
  40e0e9:	add    cl,BYTE PTR [ebx+0x56d073f0]
  40e0ef:	ins    BYTE PTR es:[edi],dx
  40e0f0:	shl    cl,1
  40e0f2:	xor    ah,BYTE PTR [ecx+eiz*8-0xf]
  40e0f6:	cs xchg edx,eax
  40e0f8:	fisubr WORD PTR ds:0xd34e018b
  40e0fe:	out    0xad,eax
  40e100:	retf   
  40e101:	je     0x40e101
  40e103:	bound  edx,QWORD PTR [ecx-0x62a30a82]
  40e109:	xor    al,al
  40e10b:	sar    BYTE PTR [edi-0x61809834],cl
  40e111:	add    al,BYTE PTR [eax]
  40e113:	bound  eax,QWORD PTR [eax]
  40e115:	pop    edi
  40e116:	pop    ebp
  40e117:	fld    QWORD PTR [eax]
  40e119:	pop    esi
  40e11a:	(bad)  
  40e11b:	call   DWORD PTR [ebp+0x6e]
  40e11e:	(bad)  
  40e120:	mov    bh,0x6
  40e122:	stc    
  40e123:	std    
  40e124:	mov    al,BYTE PTR [edi]
  40e126:	in     eax,0xc
  40e128:	push   0xffffffc4
  40e12a:	imul   edx,DWORD PTR [eax+eax*1-0x3fccfe4c],0x79361c
  40e135:	les    ebx,FWORD PTR [eax+0x5c]
  40e138:	pop    ebx
  40e139:	pop    es
  40e13a:	push   ebx
  40e13b:	mov    esp,ebp
  40e13d:	test   DWORD PTR [ebp+0x55],ecx
  40e140:	xor    ebp,DWORD PTR [ebx]
  40e142:	sub    al,0xdb
  40e144:	mov    DWORD PTR [ecx-0x7f81c813],ecx
  40e14a:	jnp    0x40e177
  40e14c:	mov    eax,DWORD PTR [edx-0x8993904]
  40e152:	jns    0x40e172
  40e154:	add    BYTE PTR [edx+0x16],dl
  40e157:	push   0x4
  40e159:	pop    es
  40e15a:	ret    0x501a
  40e15d:	stos   DWORD PTR es:[edi],eax
  40e15e:	jb     0x40e166
  40e160:	inc    DWORD PTR [ecx+0x2d]
  40e163:	push   ss
  40e164:	inc    eax
  40e165:	inc    esp
  40e166:	jl     0x40e12a
  40e168:	or     al,0xc1
  40e16a:	shl    DWORD PTR [ebx+0x3],0xab
  40e16e:	inc    edx
  40e16f:	cli    
  40e170:	inc    ebx
  40e171:	mov    bh,0xc0
  40e173:	cmp    ecx,DWORD PTR ss:[edx]
  40e176:	jne    0x40e1f2
  40e178:	rol    DWORD PTR [eax],cl
  40e17a:	scas   eax,DWORD PTR es:[edi]
  40e17b:	inc    edx
  40e17c:	cli    
  40e17d:	pop    edi
  40e17e:	inc    ebp
  40e180:	rol    BYTE PTR [esp+esi*1],0x52
  40e184:	mov    esp,ebp
  40e186:	xor    eax,0xfb33554c
  40e18b:	fisttp DWORD PTR cs:[ecx+0x7e37fa69]
  40e192:	popf   
  40e193:	addr16 clc 
  40e195:	sub    al,0x26
  40e197:	pop    ebp
  40e198:	add    eax,edi
  40e19a:	jnp    0x40e184
  40e19c:	sti    
  40e19d:	xor    ebx,DWORD PTR [ebp-0x7295e4d3]
  40e1a3:	call   0xa4ae04eb
  40e1a8:	out    dx,al
  40e1a9:	pop    es
  40e1aa:	shl    BYTE PTR [ebp+0x36],cl
  40e1ad:	push   ss
  40e1ae:	pop    ebp
  40e1af:	imul   eax,DWORD PTR [ebx+0x43e691c3],0x74
  40e1b6:	sahf   
  40e1b7:	test   BYTE PTR [esi+0x40e85efb],bh
  40e1bd:	aaa    
  40e1be:	adc    ax,0x7c00
  40e1c2:	into   
  40e1c3:	fistp  QWORD PTR [esi+0x4b10fafb]
  40e1c9:	rcr    DWORD PTR [ecx+0x1656d069],0xe2
  40e1d0:	xchg   BYTE PTR [esi-0x5f],al
  40e1d3:	loopne 0x40e247
  40e1d5:	dec    edi
  40e1d6:	test   DWORD PTR [ebx+0x77],ecx
  40e1d9:	(bad)  
  40e1da:	jb     0x40e1c5
  40e1dc:	jnp    0x40e1df
  40e1de:	add    al,ch
  40e1e0:	push   edi
  40e1e1:	add    esi,0xffffffb9
  40e1e4:	xchg   esp,eax
  40e1e5:	push   0xffffff9a
  40e1e7:	pop    edx
  40e1e8:	and    eax,0x68558279
  40e1ed:	cmc    
  40e1ee:	add    ecx,DWORD PTR [esi-0x71fd92d7]
  40e1f4:	sub    esp,eax
  40e1f6:	pop    esi
  40e1f7:	fld    TBYTE PTR [eax]
  40e1f9:	lea    eax,[ebx+0x79]
  40e1fc:	jno    0x40e189
  40e1fe:	dec    ebx
  40e1ff:	and    DWORD PTR [ebp-0x75],0xcae0993f
  40e206:	add    edx,esi
  40e208:	sub    ch,bh
  40e20a:	add    cl,dh
  40e20c:	add    ch,BYTE PTR [ecx+0x6942a744]
  40e212:	arpl   WORD PTR [eax],ax
  40e214:	ret    
  40e215:	test   eax,0x63dbfaed
  40e21a:	inc    esi
  40e21b:	mov    dl,0x2
  40e21d:	push   ebx
  40e21e:	cmp    al,0xea
  40e220:	repnz in al,0x78
  40e223:	mov    dl,0x6a
  40e225:	adc    al,0x2d
  40e227:	lahf   
  40e228:	add    ch,BYTE PTR [edx+0x3f]
  40e22b:	scas   al,BYTE PTR es:[edi]
  40e22c:	aas    
  40e22d:	jno    0x40e1ee
  40e22f:	jle    0x40e237
  40e231:	jb     0x40e1fa
  40e233:	jle    0x40e23f
  40e235:	aas    
  40e236:	lea    ebp,[esi]
  40e238:	push   ds
  40e239:	loope  0x40e2b3
  40e23b:	push   0x4d0ba87f
  40e240:	jg     0x40e1e9
  40e242:	or     eax,DWORD PTR [eax]
  40e244:	mov    ch,0xf5
  40e246:	jmp    0xeec37f4e
  40e24b:	call   DWORD PTR [edx-0x6dfa242b]
  40e251:	pop    edx
  40e252:	sub    esi,ecx
  40e254:	pop    ss
  40e255:	imul   sp,WORD PTR [edi-0x56],0x61cc
  40e25b:	jae    0x40e284
  40e25d:	(bad)  
  40e25e:	in     al,dx
  40e25f:	rcl    BYTE PTR [edi],1
  40e261:	cmc    
  40e262:	lock add al,0xd2
  40e265:	inc    cl
  40e267:	dec    edx
  40e268:	xchg   edx,eax
  40e269:	push   0x78
  40e26b:	push   ebx
  40e26c:	push   ebx
  40e26d:	jae    0x40e2db
  40e26f:	inc    ebx
  40e270:	fwait
  40e271:	jle    0x40e2e6
  40e273:	add    ebx,DWORD PTR [ebp-0x613e9dfe]
  40e279:	iret   
  40e27a:	fstp   DWORD PTR [ebp+eiz*1-0x43]
  40e27e:	clc    
  40e27f:	mov    ecx,ecx
  40e281:	outs   dx,BYTE PTR ds:[esi]
  40e282:	mov    edi,0xfff49ed8
  40e287:	jle    0x40e2b0
  40e289:	(bad)  
  40e28a:	test   DWORD PTR [edx],0x72db2f98
  40e290:	sar    bh,cl
  40e292:	jl     0x40e275
  40e294:	adc    dh,dl
  40e296:	sti    
  40e297:	adc    ah,dl
  40e299:	bound  edi,QWORD PTR [ebp+0x1]
  40e29c:	es std 
  40e29e:	mov    WORD PTR ds:0xd56a0a9e,gs
  40e2a4:	into   
  40e2a5:	test   DWORD PTR [esi-0x1f],eax
  40e2a8:	add    dh,ch
  40e2aa:	jae    0x40e2c0
  40e2ac:	in     eax,dx
  40e2ad:	mov    al,ds:0x5d69ffc2
  40e2b2:	pop    es
  40e2b3:	test   DWORD PTR [ecx+0x2cfed6cd],ebp
  40e2b9:	xor    eax,0x1e8d4488
  40e2be:	inc    eax
  40e2bf:	aaa    
  40e2c0:	ret    0x62dd
  40e2c3:	jnp    0x40e266
  40e2c5:	push   ss
  40e2c6:	cmp    al,0x8a
  40e2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c9:	or     DWORD PTR ds:0x860a6eff,eax
  40e2cf:	mov    edi,0x4d7da7dc
  40e2d4:	in     eax,0x17
  40e2d6:	inc    ebx
  40e2d7:	push   0x29
  40e2d9:	mov    ecx,0xb6c30605
  40e2de:	ret    
  40e2df:	push   esi
  40e2e0:	cdq    
  40e2e1:	sbb    eax,eax
  40e2e3:	add    edi,DWORD PTR [esi]
  40e2e5:	mov    WORD PTR [edx],?
  40e2e7:	push   ss
  40e2e8:	test   eax,0xddc3859e
  40e2ed:	retf   
  40e2ee:	(bad)  
  40e2ef:	repz jb 0x40e336
  40e2f2:	or     cl,BYTE PTR [ebx+0x4484b2a4]
  40e2f8:	adc    DWORD PTR [ecx+0x2d],edi
  40e2fb:	inc    edi
  40e2fc:	in     eax,0x2a
  40e2fe:	or     DWORD PTR [edx+0x6971f200],0x14de5cc9
  40e308:	rcl    BYTE PTR [ebx],1
  40e30a:	stc    
  40e30b:	scas   al,BYTE PTR es:[edi]
  40e30c:	add    DWORD PTR [eax],eax
  40e30e:	das    
  40e30f:	pop    ecx
  40e310:	pop    esp
  40e311:	leave  
  40e312:	ss jb  0x40e313
  40e315:	mov    bh,BYTE PTR [ecx+0x4cc083ea]
  40e31b:	popf   
  40e31c:	push   0xa6deaa00
  40e321:	add    ah,dh
  40e323:	add    eax,0x7974c9eb
  40e328:	and    al,BYTE PTR [esp+eax*8]
  40e32b:	aas    
  40e32c:	push   ebp
  40e32d:	mov    ecx,DWORD PTR [edi*2-0x22338b11]
  40e334:	shr    esp,cl
  40e336:	and    edi,ecx
  40e338:	xchg   DWORD PTR [edi-0x38],eax
  40e33b:	jl     0x40e301
  40e33d:	call   0x3ece04
  40e342:	cmp    ch,al
  40e344:	jae    0x40e34a
  40e346:	out    0xc5,al
  40e348:	jmp    0x288e27a
  40e34d:	inc    ecx
  40e34e:	lahf   
  40e34f:	mov    edi,0xc8d0e836
  40e354:	std    
  40e355:	(bad)  
  40e356:	clc    
  40e357:	lds    esi,FWORD PTR [edx-0x14]
  40e35a:	inc    DWORD PTR [edi+0x2]
  40e35d:	mov    eax,ebp
  40e35f:	pop    esp
  40e360:	mov    esi,0x686f7738
  40e365:	cmp    BYTE PTR ds:0x2894e40,dh
  40e36b:	jno    0x40e36a
  40e36d:	adc    eax,0x3fff54
  40e372:	add    BYTE PTR [edi+0x35b00b31],dh
  40e378:	pop    eax
  40e379:	pop    esp
  40e37a:	ret    0x5f9d
  40e37d:	add    dl,BYTE PTR [ebp+0x26]
  40e380:	outs   dx,DWORD PTR ds:[esi]
  40e381:	sub    bl,0xdd
  40e384:	xchg   ecx,eax
  40e385:	xchg   DWORD PTR [ecx+ebx*2+0x13],esi
  40e389:	fwait
  40e38a:	add    bl,BYTE PTR [ebp-0x5ab376a5]
  40e390:	test   DWORD PTR [ebx],eax
  40e392:	mov    esp,ebx
  40e394:	push   edx
  40e395:	test   dh,bh
  40e397:	add    dl,BYTE PTR [eax-0x2b]
  40e39a:	enter  0x5edf,0x2
  40e39e:	push   esi
  40e39f:	dec    edx
  40e3a0:	in     al,0x7b
  40e3a2:	mov    ch,ah
  40e3a4:	push   edx
  40e3a5:	fucomp st(3)
  40e3a7:	loop   0x40e358
  40e3a9:	mov    al,BYTE PTR [esi-0x5f]
  40e3ac:	in     al,0x40
  40e3ae:	out    0x2,eax
  40e3b0:	lahf   
  40e3b1:	je     0x40e3b1
  40e3b3:	and    DWORD PTR [ebx-0x66c9ec11],ebx
  40e3b9:	cmp    eax,DWORD PTR [ebx]
  40e3bb:	outs   dx,BYTE PTR ds:[esi]
  40e3bc:	add    eax,0x804b573c
  40e3c1:	push   cs
  40e3c2:	xor    BYTE PTR [ebx-0x267cfbe5],dl
  40e3c8:	pop    esi
  40e3c9:	mov    dl,0x0
  40e3cb:	cli    
  40e3cc:	pop    ss
  40e3cd:	inc    ecx
  40e3ce:	push   esp
  40e3cf:	es out dx,al
  40e3d1:	ror    BYTE PTR [edx-0x40188e28],cl
  40e3d7:	add    ch,al
  40e3d9:	pop    esp
  40e3da:	add    DWORD PTR [esi+0x1e],esp
  40e3dd:	pop    ecx
  40e3de:	and    al,BYTE PTR [eax]
  40e3e0:	into   
  40e3e1:	mov    bh,0x87
  40e3e3:	xlat   BYTE PTR ds:[ebx]
  40e3e4:	arpl   WORD PTR [edi-0x7011008d],bx
  40e3ea:	call   0x16f20bf2
  40e3ef:	(bad)  
  40e3f0:	fidivr WORD PTR ds:0x34a4fcc
  40e3f6:	cld    
  40e3f7:	aaa    
  40e3f8:	stos   DWORD PTR es:[edi],eax
  40e3f9:	ret    0x80e8
  40e3fc:	pop    esi
  40e3fd:	jmp    FWORD PTR [ebx+0x44]
  40e400:	scas   al,BYTE PTR es:[edi]
  40e401:	pop    ds
  40e402:	mov    bh,0x88
  40e404:	mov    cl,0xfa
  40e406:	adc    BYTE PTR [eax],bh
  40e408:	and    BYTE PTR [eax-0x3],dh
  40e40b:	adc    BYTE PTR [edx],0x5
  40e40e:	out    0x96,al
  40e410:	push   edx
  40e411:	xchg   DWORD PTR [eax],ebp
  40e413:	out    dx,eax
  40e414:	into   
  40e415:	sub    ch,BYTE PTR [eax+ecx*1]
  40e418:	mov    BYTE PTR [ebx],dl
  40e41a:	push   ebx
  40e41b:	add    BYTE PTR [eax],ch
  40e41d:	enter  0xd3f4,0x21
  40e421:	(bad)  
  40e422:	in     al,dx
  40e423:	shr    ebx,cl
  40e425:	adc    eax,0x25d0df9
  40e42a:	push   0x3f
  40e42c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e42d:	dec    eax
  40e42e:	sub    esi,DWORD PTR [ebp-0x63]
  40e431:	push   DWORD PTR [ebp-0x44]
  40e434:	stos   BYTE PTR es:[edi],al
  40e435:	call   0xf6e3a519
  40e43a:	out    dx,al
  40e43b:	add    DWORD PTR [eax],0x39
  40e43e:	(bad)  
  40e43f:	call   0x60298332
  40e444:	ror    BYTE PTR [edx-0x628ad4b8],0xe8
  40e44b:	imul   esi,esp,0xd5fd02ce
  40e451:	add    al,0x13
  40e453:	pop    esp
  40e454:	in     al,dx
  40e455:	mov    esi,0xeb1fa97d
  40e45a:	rcr    BYTE PTR [ebp+0xe],cl
  40e45d:	mov    ecx,0x1e03a918
  40e462:	inc    esi
  40e463:	fdivr  QWORD PTR [esi+0x2a]
  40e466:	not    BYTE PTR ds:0xf0f517ce
  40e46c:	imul   edi,DWORD PTR [ebx-0x36ca0093],0xffffff84
  40e473:	imul   ebx
  40e475:	mov    eax,ds:0xde6dbf8d
  40e47a:	div    BYTE PTR [ebx]
  40e47c:	loope  0x40e479
  40e47e:	cli    
  40e47f:	je     0x40e47b
  40e481:	inc    esp
  40e482:	dec    DWORD PTR [esi+eiz*4-0x55732d76]
  40e489:	adc    dl,0xfe
  40e48c:	aam    0xce
  40e48e:	sbb    BYTE PTR [eax-0x17],al
  40e491:	sbb    eax,0x4b270b43
  40e496:	jo     0x40e498
  40e498:	test   BYTE PTR [edi-0x38],0x33
  40e49c:	inc    edi
  40e49d:	enter  0x33c3,0x5d
  40e4a1:	add    BYTE PTR [edi-0x6122837e],bl
  40e4a7:	cmc    
  40e4a8:	add    ecx,DWORD PTR [edi+0x60]
  40e4ab:	les    esi,FWORD PTR [ebx]
  40e4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ae:	in     al,0x6f
  40e4b0:	add    BYTE PTR [ebx-0x1c],ah
  40e4b3:	outs   dx,DWORD PTR ds:[esi]
  40e4b4:	pop    ebp
  40e4b5:	adc    cl,BYTE PTR [eax-0x1c16f8bf]
  40e4bb:	scas   al,BYTE PTR es:[edi]
  40e4bc:	aaa    
  40e4bd:	aaa    
  40e4be:	cmp    dh,BYTE PTR [edx-0x76]
  40e4c1:	out    0x1d,eax
  40e4c3:	adc    eax,DWORD PTR [ecx]
  40e4c5:	(bad)  
  40e4c6:	xlat   BYTE PTR ds:[ebx]
  40e4c7:	add    ch,BYTE PTR [ebx-0x57]
  40e4ca:	jno    0x40e4cf
  40e4cc:	rol    edx,0xf1
  40e4cf:	repz or ah,BYTE PTR [ebx+edx*2+0x36]
  40e4d4:	push   edx
  40e4d5:	xor    DWORD PTR [ebx+0x3e],0x3e266fe
  40e4dc:	xor    ch,BYTE PTR [ecx]
  40e4de:	and    eax,0xefe773ae
  40e4e3:	mov    edi,0x25f6203
  40e4e8:	imul   eax,DWORD PTR [eax],0xffffffad
  40e4eb:	push   ds
  40e4ec:	call   0xfe326f2a
  40e4f1:	pop    esi
  40e4f2:	xchg   DWORD PTR [ebx-0x77],ecx
  40e4f5:	in     al,dx
  40e4f6:	mov    edi,0xa8830643
  40e4fb:	push   cs
  40e4fc:	push   ebx
  40e4fd:	push   edi
  40e4fe:	leave  
  40e4ff:	dec    ebx
  40e500:	(bad)  
  40e501:	call   0x40ebdc
  40e506:	add    BYTE PTR [edi-0x43],al
  40e509:	aaa    
  40e50a:	pop    esi
  40e50b:	xor    BYTE PTR [ecx+esi*1+0x33],dh
  40e50f:	sbb    ebp,ebp
  40e511:	add    al,0x8b
  40e513:	cmp    DWORD PTR [edx-0x75],ebp
  40e516:	inc    esp
  40e517:	add    ebp,DWORD PTR [edx-0x75]
  40e51a:	push   ebp
  40e51b:	call   0x4417be9
  40e520:	add    ch,BYTE PTR [edx+0x14]
  40e523:	jns    0x40e55f
  40e525:	jmp    0xdb50:0xd63a4950
  40e52c:	or     bh,BYTE PTR [esi+edx*1]
  40e52f:	test   BYTE PTR [esi],al
  40e531:	add    esp,0xffffffb8
  40e534:	jp     0x40e4f4
  40e536:	js     0x40e51e
  40e538:	inc    esp
  40e539:	add    edi,0x45e1cbc
  40e53f:	cwde   
  40e540:	rol    DWORD PTR [ecx+0x59510bc8],0xc9
  40e547:	test   BYTE PTR ds:0xccf78b00,0xf4
  40e54e:	push   ebx
  40e54f:	push   edi
  40e550:	mov    esp,0xfaaa3955
  40e555:	jge    0x40e57c
  40e557:	inc    edi
  40e558:	lock mov DWORD PTR [esi],eax
  40e55b:	outs   dx,BYTE PTR ds:[esi]
  40e55c:	adc    eax,0x6983448d
  40e561:	dec    esi
  40e562:	call   FWORD PTR [ebp+0x6a14264f]
  40e568:	jbe    0x40e598
  40e56a:	push   ss
  40e56b:	add    ch,bl
  40e56d:	pop    ebx
  40e56e:	test   ebx,eax
  40e570:	test   eax,0xac7342e6
  40e575:	cwde   
  40e576:	test   esi,eax
  40e578:	test   DWORD PTR [eax-0x30],esi
  40e57b:	add    eax,ecx
  40e57d:	mov    BYTE PTR [ebp-0x3253c539],0xc1
  40e584:	cdq    
  40e585:	pop    ebx
  40e586:	jge    0x40e54a
  40e588:	ss adc al,0x36
  40e58b:	shl    BYTE PTR [ebx+ecx*4+0x6],cl
  40e58f:	je     0x40e553
  40e591:	test   DWORD PTR [ebx],ebp
  40e593:	push   eax
  40e594:	mov    ebp,0xc46608ee
  40e599:	mov    esi,DWORD PTR [esi]
  40e59b:	je     0x40e543
  40e59d:	or     DWORD PTR [ebx],edi
  40e59f:	push   ebp
  40e5a0:	sbb    eax,0xa3731762
  40e5a5:	fs mov eax,0x2b99ebf0
  40e5ab:	push   esp
  40e5ac:	fwait
  40e5ad:	jae    0x40e5a5
  40e5af:	out    dx,eax
  40e5b0:	sbb    eax,0x280f1742
  40e5b5:	fwait
  40e5b6:	rol    edx,1
  40e5b8:	(bad)  
  40e5b9:	fwait
  40e5ba:	inc    esp
  40e5bb:	push   ebp
  40e5bc:	push   0xfffffff0
  40e5be:	jne    0x40e629
  40e5c0:	xchg   ecx,eax
  40e5c1:	push   eax
  40e5c2:	cmp    ch,BYTE PTR [edx]
  40e5c4:	lods   eax,DWORD PTR ds:[esi]
  40e5c5:	xor    edi,DWORD PTR [esi+0x13]
  40e5c8:	pushf  
  40e5c9:	dec    ecx
  40e5ca:	adc    cl,BYTE PTR [eax+0x4ec25d89]
  40e5d0:	add    BYTE PTR [eax],dl
  40e5d2:	not    al
  40e5d4:	pop    ebp
  40e5d5:	pop    esi
  40e5d6:	(bad)  
  40e5d8:	jmp    0x40e5f0
  40e5da:	daa    
  40e5db:	add    BYTE PTR [ebx+0x7f110371],al
  40e5e1:	ror    DWORD PTR [edx+0x50],1
  40e5e4:	push   edi
  40e5e5:	jae    0x40e653
  40e5e7:	push   ebp
  40e5e8:	jge    0x40e5cb
  40e5ea:	(bad)  
  40e5eb:	popa   
  40e5ec:	mov    edi,0x5f9b7d9a
  40e5f1:	inc    edx
  40e5f2:	inc    esp
  40e5f3:	cmp    eax,0xdcd95371
  40e5f8:	jle    0x40e5db
  40e5fa:	pop    esi
  40e5fb:	cwde   
  40e5fc:	jle    0x40e5d7
  40e5fe:	dec    edx
  40e5ff:	mov    eax,0xf72e9170
  40e604:	ret    
  40e605:	xor    al,BYTE PTR [ecx+0x4154002c]
  40e60b:	loopne 0x40e610
  40e60d:	enter  0x1477,0x83
  40e611:	push   es
  40e612:	outs   dx,DWORD PTR ds:[esi]
  40e613:	out    0x3,eax
  40e615:	popf   
  40e616:	aam    0x9d
  40e618:	jle    0x40e66b
  40e61a:	pop    es
  40e61b:	out    dx,eax
  40e61c:	jo     0x40e621
  40e61e:	pop    ebx
  40e61f:	adc    BYTE PTR [esp+ebx*4],0x2
  40e623:	sbb    al,BYTE PTR [edx+esi*4+0x7d]
  40e627:	pop    ebx
  40e628:	js     0x40e62c
  40e62a:	js     0x40e5ee
  40e62c:	jo     0x40e611
  40e62e:	jge    0x40e69b
  40e630:	sti    
  40e631:	fsubr  DWORD PTR [ebx-0x43]
  40e634:	rol    DWORD PTR [eax],cl
  40e636:	rcl    DWORD PTR ds:0x25d1569,cl
  40e63c:	jmp    0xb8fb:0x6b7d5243
  40e643:	imul   ebx,DWORD PTR [ebp-0x7fbad82d],0x5d
  40e64a:	mov    ah,0x6b
  40e64c:	lea    esi,[eax+0x4299e96]
  40e652:	and    DWORD PTR [edx-0xc],eax
  40e655:	das    
  40e656:	pop    es
  40e657:	adc    eax,DWORD PTR [eax]
  40e659:	and    edi,DWORD PTR fs:[edi-0x3]
  40e65d:	outs   dx,BYTE PTR ds:[esi]
  40e65e:	or     eax,0xd62f8abc
  40e663:	push   edx
  40e664:	jmp    0xbfc0d3c7
  40e669:	fld    QWORD PTR [esi+0x4641c577]
  40e66f:	pop    eax
  40e670:	inc    BYTE PTR [esi+0x22]
  40e673:	stos   DWORD PTR es:[edi],eax
  40e674:	jae    0x40e652
  40e676:	rol    DWORD PTR [ebp-0x19],1
  40e679:	pop    ebx
  40e67a:	call   0xbcb1e4eb
  40e67f:	add    al,BYTE PTR [eax]
  40e681:	jmp    0x1f446d41
  40e686:	lods   eax,DWORD PTR ds:[esi]
  40e687:	ins    BYTE PTR es:[edi],dx
  40e688:	(bad)
  40e68b:	ret    0x9448
  40e68e:	mov    bh,0x9b
  40e690:	add    BYTE PTR [edx],dl
  40e692:	enter  0x13d8,0x93
  40e696:	sahf   
  40e697:	sar    esi,cl
  40e699:	fadd   QWORD PTR [eax]
  40e69b:	rcl    BYTE PTR [eax+eax*2],cl
  40e69e:	jmp    0x6ccde183
  40e6a3:	and    eax,0xc9defe6d
  40e6a8:	sar    esi,cl
  40e6aa:	cld    
  40e6ab:	scas   al,BYTE PTR es:[edi]
  40e6ac:	adc    al,0x40
  40e6ae:	jmp    0x745825d2
  40e6b3:	in     al,0x6e
  40e6b5:	out    0x17,eax
  40e6b7:	ja     0x40e725
  40e6b9:	(bad)  
  40e6ba:	jo     0x40e727
  40e6bc:	add    al,BYTE PTR [eax]
  40e6be:	jmp    0xa7446ce0
  40e6c3:	dec    edx
  40e6c4:	ins    BYTE PTR es:[edi],dx
  40e6c5:	(bad)
  40e6c8:	ret    0x1c48
  40e6cb:	cmp    BYTE PTR [ecx],dh
  40e6cd:	shr    BYTE PTR [esi],0xd3
  40e6d0:	cmp    edx,eax
  40e6d2:	add    BYTE PTR [esp+esi*1],al
  40e6d5:	rol    ch,0xc7
  40e6d8:	(bad)  
  40e6d9:	push   DWORD PTR [ecx+ecx*2+0x50]
  40e6dd:	mov    esp,0xfe4639d8
  40e6e2:	push   ebp
  40e6e3:	add    ecx,DWORD PTR [esp+ebp*8]
  40e6e6:	adc    al,BYTE PTR [esi+eax*1-0x80]
  40e6ea:	cmp    eax,0x41bbb4
  40e6ef:	je     0x40e75c
  40e6f1:	adc    eax,0xfdd93ee8
  40e6f6:	(bad)  
  40e6f7:	mov    eax,0xb70e72be
  40e6fc:	sbb    eax,esp
  40e6fe:	lds    eax,FWORD PTR [eax]
  40e700:	test   DWORD PTR ds:0xc649c600,0xff4443c3
  40e70a:	push   ebp
  40e70b:	jmp    FWORD PTR [ecx]
  40e70d:	not    BYTE PTR [eax]
  40e70f:	inc    eax
  40e710:	xor    al,0x38
  40e712:	mov    dh,0xc
  40e714:	jo     0x40e75b
  40e716:	inc    dl
  40e718:	cs adc ch,al
  40e71b:	mov    ch,0x13
  40e71d:	fscale 
  40e71f:	push   eax
  40e720:	repz jno 0x40e745
  40e723:	or     al,0x3
  40e725:	or     edi,DWORD PTR [esi+edx*1]
  40e728:	(bad)  
  40e729:	inc    BYTE PTR [edx-0x290eff3c]
  40e72f:	sbb    esi,DWORD PTR [esi+eax*2]
  40e732:	rol    BYTE PTR [esp+eax*8],0x54
  40e736:	mov    DWORD PTR ds:0x400fd4,ebx
  40e73c:	mov    ebp,0x3f3d6653
  40e742:	and    BYTE PTR [esi+0x2d],ah
  40e745:	aas    
  40e746:	xor    al,0x6a
  40e748:	test   al,0x82
  40e74a:	inc    ebp
  40e74b:	add    DWORD PTR [ebp-0x6aba7ed5],ebx
  40e751:	dec    esp
  40e752:	pop    edi
  40e753:	dec    edi
  40e754:	and    al,0x51
  40e756:	jnp    0x40e7c5
  40e758:	cdq    
  40e759:	call   0x5fa269af
  40e75e:	fadd   DWORD PTR [ebx]
  40e760:	sti    
  40e761:	mov    dl,0xdd
  40e763:	sbb    BYTE PTR [eax],al
  40e765:	icebp  
  40e766:	outs   dx,DWORD PTR ds:[esi]
  40e767:	jg     0x40e7af
  40e769:	mov    BYTE PTR [ebx-0x5476ba81],ch
  40e76f:	ins    DWORD PTR es:[edi],dx
  40e770:	shl    BYTE PTR [esi+0x64],cl
  40e773:	jg     0x40e7ba
  40e775:	mov    ecx,0xa8fed286
  40e77a:	outs   dx,DWORD PTR ds:[esi]
  40e77b:	adc    al,0x40
  40e77d:	popf   
  40e77e:	cmp    DWORD PTR [ecx+0x46],edi
  40e781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e782:	fadd   QWORD PTR [esi+0xb]
  40e785:	ret    
  40e786:	repnz les ebx,FWORD PTR [edi]
  40e789:	sub    esp,DWORD PTR [eax+0x0]
  40e78c:	je     0x40e714
  40e78e:	jns    0x40e7bb
  40e790:	outs   dx,DWORD PTR ds:[esi]
  40e791:	jbe    0x40e722
  40e793:	pop    ss
  40e794:	push   0xffffffad
  40e796:	out    dx,al
  40e797:	lds    ebx,FWORD PTR [edx]
  40e799:	ins    DWORD PTR es:[edi],dx
  40e79a:	(bad)  
  40e79b:	les    esp,FWORD PTR [ebx]
  40e79d:	ins    DWORD PTR es:[edi],dx
  40e79e:	jo     0x40e7f0
  40e7a0:	gs push ss
  40e7a2:	mov    al,ds:0x6ee18319
  40e7a7:	push   edi
  40e7a8:	adc    DWORD PTR [edi-0x3eba8295],eax
  40e7ae:	es aam 0xfe
  40e7b1:	mov    BYTE PTR [edi],cl
  40e7b3:	push   ss
  40e7b4:	inc    eax
  40e7b5:	popf   
  40e7b6:	fadd   QWORD PTR [edi+0xb]
  40e7b9:	mov    ds,WORD PTR [ebx+0x191465ce]
  40e7bf:	cmp    BYTE PTR [ebx-0x22],bl
  40e7c2:	or     edx,edi
  40e7c4:	mov    cl,BYTE PTR [eax+0x15d902]
  40e7ca:	pop    ebp
  40e7cb:	add    dl,BYTE PTR [ebx]
  40e7cd:	sbb    BYTE PTR [eax],bl
  40e7cf:	shl    eax,0xd3
  40e7d2:	adc    eax,eax
  40e7d4:	out    0xd3,eax
  40e7d6:	pusha  
  40e7d7:	add    ecx,ebp
  40e7d9:	ins    BYTE PTR es:[edi],dx
  40e7da:	imul   edi,DWORD PTR [ebx+ebx*8+0x37],0x80e8c2b3
  40e7e2:	pop    esi
  40e7e3:	test   DWORD PTR [esi],0xe922fb81
  40e7e9:	fstp   DWORD PTR [esi-0x1c811312]
  40e7ef:	push   es
  40e7f0:	mov    ecx,0xb90dd87e
  40e7f5:	ins    BYTE PTR es:[edi],dx
  40e7f6:	jno    0x40e854
  40e7f8:	lock jle 0x40e7d3
  40e7fb:	or     eax,0x67ed03d3
  40e800:	sbb    esi,esp
  40e802:	pop    ss
  40e803:	ror    BYTE PTR [eax],0x81
  40e806:	pop    esi
  40e807:	test   DWORD PTR [esi-0x78f62786],0xe92eab80
  40e811:	fst    DWORD PTR [edx+0x637ef6ee]
  40e817:	push   ds
  40e818:	cdq    
  40e819:	jle    0x40e873
  40e81b:	or     ebx,DWORD PTR [ecx+0x61e0f16c]
  40e821:	(bad)
  40e824:	and    al,0x0
  40e826:	sbb    eax,0xa158eaf9
  40e82b:	jne    0x40e853
  40e82d:	or     DWORD PTR [eax],eax
  40e82f:	ja     0x40e833
  40e831:	cmp    DWORD PTR [ebp-0x31],ebp
  40e834:	and    DWORD PTR [edi+edi*8-0x19dcbd71],0x25
  40e83c:	rcl    DWORD PTR [ecx],0xc9
  40e83f:	(bad)  
  40e841:	call   FWORD PTR [esi]
  40e843:	out    0x2f,eax
  40e845:	push   0xffffffe9
  40e847:	sar    DWORD PTR [edi+ebp*8-0x5a],1
  40e84b:	mov    ebp,DWORD PTR [esi]
  40e84d:	push   ss
  40e84e:	sub    DWORD PTR [ecx+0x25f9457b],esp
  40e854:	push   es
  40e855:	xor    bh,dh
  40e857:	pop    esi
  40e858:	addr16 cmc 
  40e85a:	mov    eax,ds:0x2f8c42a5
  40e85f:	mov    bl,0x23
  40e861:	shr    DWORD PTR [edx-0x22],0xf
  40e865:	push   0xffffffd5
  40e867:	dec    esi
  40e868:	jbe    0x40e8b0
  40e86a:	icebp  
  40e86b:	dec    esi
  40e86c:	push   0xbf606cd2
  40e871:	push   cs
  40e872:	sahf   
  40e873:	scas   al,BYTE PTR es:[edi]
  40e874:	add    ebx,0xfffffff1
  40e877:	rol    DWORD PTR [ebp+0x1a],1
  40e87a:	aas    
  40e87b:	jge    0x40e8ef
  40e87d:	push   cs
  40e87e:	jbe    0x40e820
  40e880:	mov    edx,0x83a7bd47
  40e885:	out    0xd4,eax
  40e887:	xor    edi,DWORD PTR [ebp-0x424c0697]
  40e88d:	pop    es
  40e88e:	mov    ecx,0xb923c0ab
  40e893:	add    BYTE PTR [ecx-0x1f9d9aac],dh
  40e899:	add    BYTE PTR [edi],cl
  40e89b:	aas    
  40e89c:	push   eax
  40e89d:	add    al,0x66
  40e89f:	sub    BYTE PTR [esi-0x1],bh
  40e8a2:	sub    BYTE PTR ds:0x280add02,0x0
  40e8a9:	jp     0x40e8f1
  40e8ab:	sbb    eax,0xe56a2152
  40e8b0:	gs mov ebp,0xc0643903
  40e8b6:	sbb    edi,DWORD PTR [ecx]
  40e8b8:	inc    esi
  40e8b9:	push   esp
  40e8ba:	add    BYTE PTR gs:[edi+0x44],cl
  40e8be:	add    BYTE PTR [edi],cl
  40e8c0:	push   edx
  40e8c1:	lods   al,BYTE PTR ds:[esi]
  40e8c2:	add    DWORD PTR [esi-0xb],esp
  40e8c5:	fld    QWORD PTR [esi]
  40e8c7:	add    DWORD PTR [eax],0x6a
  40e8ca:	or     eax,DWORD PTR fs:0xd4478764
  40e8d1:	cmp    BYTE PTR [ecx-0x3d],bl
  40e8d4:	arpl   di,sp
  40e8d6:	not    BYTE PTR [ecx-0x2d]
  40e8d9:	(bad)  
  40e8da:	scas   eax,DWORD PTR es:[edi]
  40e8db:	add    DWORD PTR [edx+eax*1+0x6f9cc085],eax
  40e8e2:	adc    edx,0xffffff81
  40e8e5:	add    edi,DWORD PTR [edx-0x1bd8ebc]
  40e8eb:	xor    al,ah
  40e8ed:	dec    ebp
  40e8ee:	or     ecx,0x51
  40e8f1:	adc    al,0x38
  40e8f3:	add    al,BYTE PTR [eax+0x50]
  40e8f6:	cmp    edi,0x0
  40e8f9:	jno    0x40e8fc
  40e8fb:	mov    eax,0x80014457
  40e900:	jmp    0x40e927
  40e902:	call   0x40e9:0x82330078
  40e909:	adc    bl,cl
  40e90b:	jb     0x40e931
  40e90d:	xor    bl,ch
  40e90f:	outs   dx,DWORD PTR ds:[esi]
  40e910:	jmp    esi
  40e912:	push   ebx
  40e913:	push   ebp
  40e914:	xor    ebp,DWORD PTR [edi-0x27]
  40e917:	adc    ecx,DWORD PTR [eax+0x12]
  40e91a:	inc    edx
  40e91b:	inc    BYTE PTR [edx+0x7ab90ec0]
  40e921:	hlt    
  40e922:	add    BYTE PTR [eax+0xd56b485],al
  40e928:	cmp    eax,edx
  40e92a:	jno    0x40e935
  40e92c:	jne    0x40e92f
  40e92e:	jmp    0xf089:0x66cf3e1a
  40e935:	popf   
  40e936:	inc    eax
  40e937:	inc    DWORD PTR [edi-0x27810a47]
  40e93d:	sahf   
  40e93e:	cmp    eax,0xde6bc27d
  40e943:	dec    ebp
  40e944:	js     0x40e8df
  40e946:	jo     0x40e993
  40e948:	je     0x40e8f1
  40e94a:	loopne 0x40e902
  40e94c:	and    esp,DWORD PTR [ecx-0x608cc42a]
  40e952:	repnz sub ebx,DWORD PTR [ebx+0x42]
  40e956:	cdq    
  40e957:	cli    
  40e958:	(bad)  
  40e959:	out    dx,eax
  40e95a:	sub    al,0x7f
  40e95c:	test   DWORD PTR [eax],0x2c5c04ec
  40e962:	pushf  
  40e963:	pop    ebx
  40e964:	add    dh,BYTE PTR [ebx]
  40e966:	data16 mov al,0x45
  40e969:	jnp    0x40e973
  40e96b:	mov    cl,0x55
  40e96d:	je     0x40e907
  40e96f:	mov    eax,ds:0x5bdd74ba
  40e974:	xor    eax,0xf020a6c0
  40e979:	push   ss
  40e97a:	ret    
  40e97b:	adc    cl,BYTE PTR [esi]
  40e97d:	je     0x40e961
  40e97f:	add    BYTE PTR [edi+0x74],ch
  40e982:	mov    ds:0x9bffd183,al
  40e987:	fistp  DWORD PTR [ebp+0x4d]
  40e98a:	cmc    
  40e98b:	mov    al,0x2
  40e98d:	pop    es
  40e98e:	sbb    eax,0x2a562810
  40e993:	(bad)  
  40e994:	push   ds
  40e995:	adc    al,0x10
  40e997:	mov    ch,BYTE PTR [ecx+0x51]
  40e99a:	jae    0x40e948
  40e99c:	imul   edx,DWORD PTR [ecx+ebx*2],0x1fffc245
  40e9a3:	pop    ds
  40e9a4:	adc    edi,DWORD PTR [ecx-0x7ffea479]
  40e9aa:	and    BYTE PTR [ebx],bl
  40e9ac:	jmp    0x40e9b7
  40e9ae:	mov    dh,0x2
  40e9b0:	scas   eax,DWORD PTR es:[edi]
  40e9b1:	icebp  
  40e9b2:	mov    al,ds:0xf27ce6ee
  40e9b7:	pop    eax
  40e9b8:	loopne 0x40ea36
  40e9ba:	cmc    
  40e9bb:	xor    BYTE PTR [ecx+0x3dfe25e2],ch
  40e9c1:	ja     0x40e9c3
  40e9c3:	xchg   ch,ch
  40e9c5:	jno    0x40ea0c
  40e9c7:	pusha  
  40e9c8:	jg     0x40e95b
  40e9ca:	jmp    0x40e96a
  40e9cc:	sub    DWORD PTR [eax+0x3479a4ef],edx
  40e9d2:	and    BYTE PTR [ecx-0x630f5081],bl
  40e9d8:	jnp    0x40e9a9
  40e9da:	enter  0x40f7,0xe0
  40e9de:	add    ebx,DWORD PTR [eax]
  40e9e0:	cmp    bh,ah
  40e9e2:	xor    eax,0x697d6445
  40e9e7:	add    ecx,esp
  40e9e9:	popa   
  40e9ea:	push   esp
  40e9eb:	scas   eax,DWORD PTR es:[edi]
  40e9ec:	arpl   WORD PTR [eax+0x2b],bp
  40e9ef:	popf   
  40e9f0:	out    dx,al
  40e9f1:	in     al,dx
  40e9f2:	ret    0xedd4
  40e9f5:	push   ebp
  40e9f6:	jg     0x40ea44
  40e9f8:	out    dx,al
  40e9f9:	jmp    0x40e9a3
  40e9fb:	repz add ah,dh
  40e9fe:	sbb    DWORD PTR [ecx],0x6d
  40ea01:	mov    esp,0xc06421f6
  40ea06:	add    DWORD PTR [esi+0x40],esi
  40ea09:	pop    edi
  40ea0a:	add    al,BYTE PTR [esi+0x0]
  40ea0d:	push   0x22
  40ea0f:	popf   
  40ea10:	ja     0x40ea3f
  40ea12:	leave  
  40ea13:	aaa    
  40ea14:	(bad)  
  40ea15:	pusha  
  40ea16:	shl    DWORD PTR [edx],1
  40ea18:	std    
  40ea19:	push   0xe5ea5a7f
  40ea1e:	jle    0x40ea28
  40ea20:	out    dx,eax
  40ea21:	jmp    0x2a43aaaa
  40ea26:	jg     0x40ea28
  40ea28:	aad    0xee
  40ea2a:	(bad)  
  40ea2b:	mov    esp,0xeefe6546
  40ea30:	add    eax,0xb1b98acd
  40ea35:	arpl   WORD PTR [ebp+0x20],sp
  40ea38:	mov    dh,0xee
  40ea3a:	add    eax,0x4a015f6a
  40ea3f:	push   esp
  40ea40:	inc    edx
  40ea41:	jle    0x40ea14
  40ea43:	cmp    al,0xca
  40ea45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea46:	push   esi
  40ea47:	jmp    0xbfc56ce9
  40ea4c:	retf   0x84f6
  40ea4f:	scas   al,BYTE PTR es:[edi]
  40ea50:	(bad)  
  40ea51:	std    
  40ea52:	sub    ch,BYTE PTR [ebx-0x151502d9]
  40ea58:	sbb    DWORD PTR [esi],ebx
  40ea5a:	add    BYTE PTR [edx-0x23],ah
  40ea5d:	(bad)  
  40ea5e:	jmp    0x1eed:0xffcc46e4
  40ea65:	jle    0x40ea26
  40ea67:	add    BYTE PTR [ebp+edi*2+0x7fa1fdf5],bl
  40ea6e:	and    eax,0xc030d9e9
  40ea73:	and    ch,BYTE PTR [ecx-0x4897f211]
  40ea79:	arpl   si,di
  40ea7b:	push   esi
  40ea7c:	inc    ebp
  40ea7d:	icebp  
  40ea7e:	add    eax,0x5636d91
  40ea83:	imul   esp,ecx,0x4ab4022a
  40ea89:	cmp    al,0x1
  40ea8b:	mov    eax,ds:0x234b00
  40ea90:	bnd jbe 0x40ea82
  40ea93:	add    DWORD PTR [eax-0x61],esi
  40ea96:	aas    
  40ea97:	xor    ch,BYTE PTR [ecx]
  40ea99:	ja     0x40ea59
  40ea9b:	and    ebp,ebp
  40ea9d:	or     edi,ebp
  40ea9f:	cmp    BYTE PTR [ebp+0x74fab2],ah
  40eaa5:	push   cs
  40eaa6:	cmp    BYTE PTR [edx+0x24],0xc
  40eaaa:	(bad)  
  40eaac:	push   DWORD PTR [ebx+0x71]
  40eaaf:	add    edi,DWORD PTR [eax-0x7ff900f5]
  40eab5:	ss data16 (bad) 
  40eab8:	push   edx
  40eab9:	stos   BYTE PTR es:[edi],al
  40eaba:	xor    ebp,DWORD PTR [eax+0x32]
  40eabd:	aas    
  40eabe:	lock xor eax,eax
  40eac1:	mov    bh,0xb7
  40eac3:	pop    ebp
  40eac4:	sub    eax,DWORD PTR ds:0x3cc95e9
  40eaca:	fstp   TBYTE PTR [ebp-0x7b]
  40eacd:	push   ss
  40eace:	jb     0x40eadc
  40ead0:	mov    cl,al
  40ead2:	ins    BYTE PTR es:[edi],dx
  40ead3:	adc    dl,0x88
  40ead6:	arpl   WORD PTR [esi+0x4d3f7511],ax
  40eadc:	jne    0x40eafa
  40eade:	test   ch,bh
  40eae0:	jne    0x40eb5d
  40eae2:	lahf   
  40eae3:	dec    ecx
  40eae4:	mov    eax,0x8007069e
  40eae9:	cmp    cl,BYTE PTR [eax]
  40eaeb:	add    BYTE PTR [ebx-0x7aefdd40],cl
  40eaf1:	add    BYTE PTR ds:0x9d890053,bh
  40eaf7:	dec    ecx
  40eaf8:	pop    esp
  40eaf9:	pop    ebx
  40eafa:	mov    dh,0x2
  40eafc:	add    BYTE PTR [ebp-0x41],dl
  40eaff:	mov    edx,0xea59834f
  40eb04:	(bad)  
  40eb05:	push   edx
  40eb06:	sub    bl,ch
  40eb08:	lock xor edi,DWORD PTR [edi-0x7d]
  40eb0c:	hlt    
  40eb0d:	je     0x40eab6
  40eb0f:	push   ecx
  40eb10:	mov    DWORD PTR [ebp+0x50],edi
  40eb13:	std    
  40eb14:	clc    
  40eb15:	test   DWORD PTR [edx+edx*2+0x12],esi
  40eb19:	bswap  ebx
  40eb1b:	repnz push cs
  40eb1d:	popfw  
  40eb1f:	out    dx,al
  40eb20:	push   ecx
  40eb21:	jae    0x40eac9
  40eb23:	mov    DWORD PTR [ebx+0x10],edi
  40eb26:	push   ds
  40eb27:	sub    eax,DWORD PTR [edx]
  40eb29:	dec    eax
  40eb2a:	pop    esi
  40eb2b:	mov    cl,0xef
  40eb2d:	out    0x5a,eax
  40eb2f:	out    dx,al
  40eb30:	ins    DWORD PTR es:[edi],dx
  40eb31:	je     0x40ead9
  40eb33:	in     al,dx
  40eb34:	pop    esp
  40eb35:	add    DWORD PTR [esi-0x50],edx
  40eb38:	mov    edi,0xfd6b67fb
  40eb3d:	jg     0x40eacd
  40eb3f:	stos   DWORD PTR es:[edi],eax
  40eb40:	fmul   QWORD PTR [eax+0x7bfe49c]
  40eb46:	and    BYTE PTR [esi+ebp*8+0x79641401],ch
  40eb4d:	inc    esp
  40eb4e:	mov    ecx,0xdfc8caf9
  40eb53:	arpl   WORD PTR [edx],ax
  40eb55:	push   ebp
  40eb56:	add    BYTE PTR [esi],dl
  40eb58:	js     0x40eb2d
  40eb5a:	test   ah,dl
  40eb5c:	idiv   bh
  40eb5e:	xor    bl,BYTE PTR [ebp-0x5e]
  40eb61:	inc    ecx
  40eb62:	push   ebp
  40eb63:	and    dh,dh
  40eb65:	addr16 out 0x5f,eax
  40eb68:	mov    DWORD PTR [ebp-0x2],esp
  40eb6b:	jecxz  0x40eb53
  40eb6d:	inc    edx
  40eb6e:	jae    0x40eb10
  40eb70:	in     al,dx
  40eb71:	cmp    bh,dh
  40eb73:	lods   al,BYTE PTR fs:[esi]
  40eb75:	jns    0x40ebbb
  40eb77:	imul   edx,DWORD PTR [edx],0xcf165442
  40eb7d:	rol    DWORD PTR [esp+eiz*2+0x5d32fe3e],cl
  40eb84:	and    al,BYTE PTR [edx+0x55]
  40eb87:	sbb    BYTE PTR [esi+0x21eae766],bl
  40eb8d:	data16 (bad) 
  40eb8f:	fucomi st,st(6)
  40eb91:	inc    edx
  40eb92:	jae    0x40eb2c
  40eb94:	in     al,dx
  40eb95:	cmp    bh,dh
  40eb97:	push   esp
  40eb98:	add    ch,BYTE PTR [edx]
  40eb9a:	jp     0x40eb75
  40eb9c:	pop    esi
  40eb9d:	das    
  40eb9e:	inc    edx
  40eb9f:	jno    0x40eb2e
  40eba1:	add    al,0x66
  40eba3:	mov    DWORD PTR [edx],ecx
  40eba5:	mov    eax,0x5600d5b
  40ebaa:	sbb    WORD PTR [edx-0x80],ax
  40ebae:	sub    eax,0x7b3420
  40ebb3:	aaa    
  40ebb4:	retf   0xc373
  40ebb7:	jmp    0xa58:0x2ba913
  40ebbe:	push   esp
  40ebbf:	adc    BYTE PTR [ebx+0x1b],al
  40ebc2:	jmp    0x40ebb3
  40ebc4:	jge    0x40ec1f
  40ebc6:	scas   eax,DWORD PTR es:[edi]
  40ebc7:	or     esp,edx
  40ebc9:	test   bh,al
  40ebcb:	and    DWORD PTR [eax],edx
  40ebcd:	adc    DWORD PTR ds:0xc182a204,0x12
  40ebd4:	dec    edi
  40ebd5:	lea    edx,[ebx]
  40ebd7:	cld    
  40ebd8:	sbb    edi,eax
  40ebda:	lock shr edx,cl
  40ebdd:	pop    edi
  40ebde:	popf   
  40ebdf:	sbb    ebp,DWORD PTR gs:[ebx-0xf]
  40ebe3:	fs xchg ebx,eax
  40ebe5:	pusha  
  40ebe6:	sub    eax,DWORD PTR [edx-0x62]
  40ebe9:	add    bl,BYTE PTR [ecx+edi*2]
  40ebec:	jbe    0x40eba0
  40ebee:	push   ss
  40ebef:	jnp    0x40ebd2
  40ebf1:	pop    esi
  40ebf2:	popa   
  40ebf3:	mov    edi,0x7361b79a
  40ebf8:	ror    BYTE PTR [ecx+0x7f7afbab],1
  40ebfe:	pop    esi
  40ebff:	gs pop ebx
  40ec01:	xchg   BYTE PTR [eax],ch
  40ec03:	in     al,dx
  40ec04:	loope  0x40eb93
  40ec06:	fwait
  40ec07:	sbb    DWORD PTR [bp+0x5bf0],esi
  40ec0c:	mov    edx,0x21653d60
  40ec11:	inc    ebx
  40ec12:	push   DWORD PTR [eax-0x4b017a7d]
  40ec18:	mov    ds:0x2d257d19,al
  40ec1d:	pop    ss
  40ec1e:	mov    ebp,DWORD PTR [eax+eax*1-0x2fc719ea]
  40ec25:	add    ch,BYTE PTR [edi]
  40ec27:	imul   DWORD PTR [edi]
  40ec29:	xchg   esp,eax
  40ec2a:	pop    eax
  40ec2b:	or     BYTE PTR [edi],0xbc
  40ec2e:	lea    eax,[ebp-0x7ff8616a]
  40ec34:	add    bl,BYTE PTR [ebx+0x73e1745f]
  40ec3a:	mov    BYTE PTR [edi],0x39
  40ec3d:	fs (bad) 
  40ec3f:	sti    
  40ec40:	jb     0x40ecab
  40ec42:	mov    ebp,cs
  40ec44:	rol    DWORD PTR [esi+ebx*2],0xfe
  40ec48:	into   
  40ec49:	or     al,BYTE PTR gs:[ebp+0x3306b2c6]
  40ec50:	mov    al,0xd8
  40ec52:	mov    cl,BYTE PTR ds:0x3417617
  40ec58:	jmp    0xf5649f82
  40ec5d:	sub    eax,ebx
  40ec5f:	and    edi,ecx
  40ec61:	outs   dx,BYTE PTR ds:[esi]
  40ec62:	pusha  
  40ec63:	jae    0x40ec32
  40ec65:	mov    cl,BYTE PTR [ebx+eax*2-0x8986d3b]
  40ec6c:	test   ecx,edi
  40ec6e:	pusha  
  40ec6f:	ret    0x6a72
  40ec72:	and    ecx,DWORD PTR [esp+eiz*2]
  40ec75:	xor    ah,BYTE PTR [ebx]
  40ec77:	adc    BYTE PTR [ecx],bl
  40ec79:	add    ah,dl
  40ec7b:	and    esi,ebp
  40ec7d:	in     eax,0xc3
  40ec7f:	and    ebp,ebp
  40ec81:	idiv   BYTE PTR [ebp-0x46ffa905]
  40ec87:	inc    esp
  40ec88:	push   esp
  40ec89:	(bad)  
  40ec8b:	mov    dl,0x50
  40ec8d:	add    BYTE PTR [edi-0xefff998],dh
  40ec93:	pop    ebp
  40ec94:	mov    dh,0x57
  40ec96:	inc    esp
  40ec97:	pop    esi
  40ec98:	jle    0x40ec85
  40ec9a:	lock (bad) [ebx+0x10]
  40ec9e:	out    0xba,eax
  40eca0:	mov    dh,0xfe
  40eca2:	mov    ebx,0x87d889e6
  40eca7:	jmp    0x55:0xab0375fd
  40ecae:	repz sub cl,0x5c
  40ecb2:	xchg   DWORD PTR [eax-0xa],eax
  40ecb5:	add    dl,al
  40ecb7:	mov    al,ds:0x841200fd
  40ecbc:	rol    DWORD PTR [eax],0xf5
  40ecbf:	add    al,BYTE PTR [eax]
  40ecc1:	mov    eax,0x7ffde2fb
  40ecc6:	scas   eax,DWORD PTR es:[edi]
  40ecc7:	push   ds
  40ecc8:	jno    0x40ecd0
  40ecca:	aas    
  40eccb:	push   ds
  40eccc:	lds    eax,FWORD PTR [ebp-0x25]
  40eccf:	add    al,0x8d
  40ecd1:	add    al,0xbf
  40ecd3:	xchg   edx,eax
  40ecd4:	mov    esi,DWORD PTR [ebp-0x14]
  40ecd7:	in     eax,dx
  40ecd8:	mov    ch,0xc6
  40ecda:	sti    
  40ecdb:	loop   0x40ec5f
  40ecdd:	rol    BYTE PTR [eax-0x6f8a0109],0x8d
  40ece4:	push   ebx
  40ece5:	adc    BYTE PTR [ebx],ch
  40ece7:	cmp    al,0xa
  40ece9:	mov    eax,DWORD PTR [eax]
  40eceb:	sar    DWORD PTR [esi+0x392ccb89],0xfa
  40ecf2:	(bad)  
  40ecf3:	sti    
  40ecf4:	(bad)  
  40ecf5:	out    dx,al
  40ecf6:	sub    edx,0xf406fe3c
  40ecfc:	cmp    ebx,DWORD PTR [ebx]
  40ecfe:	cmp    BYTE PTR [ecx-0x1f],0xfe
  40ed02:	jae    0x40ed00
  40ed04:	loope  0x40ed79
  40ed06:	clc    
  40ed07:	popf   
  40ed08:	ret    
  40ed09:	or     bh,al
  40ed0b:	dec    edx
  40ed0c:	int    0x8e
  40ed0e:	(bad)
  40ed11:	dec    ebx
  40ed12:	ror    DWORD PTR [ebp-0x62865f95],0x6c
  40ed19:	sub    dl,0x34
  40ed1c:	out    0x59,eax
  40ed1e:	je     0x40ed58
  40ed20:	ror    eax,1
  40ed22:	mul    DWORD PTR [esi]
  40ed24:	scas   eax,DWORD PTR es:[edi]
  40ed25:	or     cl,BYTE PTR [ecx-0x15bdc764]
  40ed2b:	(bad)  
  40ed2c:	xchg   esi,eax
  40ed2d:	(bad)  
  40ed2e:	jmp    0x40ed9c
  40ed30:	jp     0x40ecb7
  40ed32:	jl     0x40ecd9
  40ed34:	imul   edx,edi,0x6
  40ed37:	xor    eax,0x1d07027d
  40ed3c:	add    ebp,edx
  40ed3e:	mov    dl,BYTE PTR [eax+0x5b]
  40ed41:	mov    ch,0xe7
  40ed43:	xchg   esi,eax
  40ed44:	cmp    eax,0x9426fe61
  40ed49:	test   edx,edi
  40ed4b:	retf   0xab6
  40ed4e:	mov    eax,0x96b6a00
  40ed53:	add    dh,0x22
  40ed56:	xchg   DWORD PTR [ebp+esi*4+0x6b],esp
  40ed5a:	dec    eax
  40ed5b:	inc    esp
  40ed5c:	stos   BYTE PTR es:[edi],al
  40ed5d:	imul   edi,DWORD PTR [eax+0x36bde80],0x0
  40ed64:	popf   
  40ed65:	jecxz  0x40edc8
  40ed67:	(bad)  
  40ed68:	xchg   edx,eax
  40ed69:	hlt    
  40ed6a:	push   ds
  40ed6b:	fmul   DWORD PTR [edi]
  40ed6d:	data16 (bad) 
  40ed6f:	xlat   BYTE PTR ds:[ebx]
  40ed70:	pop    ebx
  40ed71:	arpl   WORD PTR cs:[eax],ax
  40ed74:	into   
  40ed75:	out    dx,al
  40ed76:	xlat   BYTE PTR ds:[ebx]
  40ed77:	test   DWORD PTR [ebp+0x6afe4832],0xae7342e7
  40ed81:	add    ah,BYTE PTR [esi-0x28]
  40ed84:	scas   al,BYTE PTR es:[edi]
  40ed85:	mov    DWORD PTR [ebx-0x1b28ac0d],esi
  40ed8b:	mov    fs,ecx
  40ed8d:	pop    edx
  40ed8e:	popa   
  40ed8f:	dec    esi
  40ed90:	cmp    dh,BYTE PTR [edi-0x76c49dbf]
  40ed96:	cmp    BYTE PTR [eax+esi*1+0x1d0ae8d8],al
  40ed9d:	xlat   BYTE PTR ds:[ebx]
  40ed9e:	retf   
  40ed9f:	and    DWORD PTR [ecx+0x57d7e85d],0x5d
  40eda6:	xchg   ebx,eax
  40eda7:	pop    ebx
  40eda8:	cli    
  40eda9:	in     al,0x2e
  40edab:	bound  ecx,QWORD PTR [ebx]
  40edad:	mov    DWORD PTR [esi],esp
  40edaf:	shl    DWORD PTR [edi+0x4b],0x2a
  40edb3:	repz add dl,bh
  40edb6:	sahf   
  40edb7:	add    BYTE PTR [ebx],0x9a
  40edba:	add    BYTE PTR [ecx],0x6c
  40edbd:	and    DWORD PTR [ebx+esi*2+0x68],edx
  40edc1:	pop    ss
  40edc2:	(bad)  
  40edc3:	loopne 0x40ed52
  40edc5:	imul   ecx,DWORD PTR [edx],0x428e0370
  40edcb:	shl    DWORD PTR [ebp+0x19],0xc6
  40edcf:	add    al,0xf4
  40edd1:	push   edx
  40edd2:	pop    ebp
  40edd3:	cmp    al,0x28
  40edd5:	lea    ebx,[ebp+0x34]
  40edd8:	sub    BYTE PTR [ebp-0x72d7c3a3],cl
  40edde:	push   0x1c
  40ede0:	popa   
  40ede1:	mov    ds:0xa6eea95c,eax
  40ede6:	jmp    0x3981:0x2dfb440
  40eded:	adc    DWORD PTR [ecx],eax
  40edef:	jmp    0xe89fe778
  40edf4:	pusha  
  40edf5:	icebp  
  40edf6:	push   cs
  40edf7:	jle    0x40edd0
  40edf9:	call   0x3ff2:0xedbff5b
  40ee00:	jmp    0x5324b51c
  40ee05:	scas   eax,DWORD PTR es:[edi]
  40ee06:	xadd   BYTE PTR [ecx+0x416488d9],ch
  40ee0d:	aam    0xc6
  40ee0f:	jecxz  0x40ee60
  40ee11:	mov    esp,0x6a6afe5c
  40ee16:	pop    eax
  40ee17:	(bad)  
  40ee18:	jb     0x40ee1a
  40ee1a:	pop    edx
  40ee1b:	pusha  
  40ee1c:	out    0x4a,eax
  40ee1e:	push   edx
  40ee1f:	add    al,BYTE PTR [eax]
  40ee21:	sub    edx,DWORD PTR [ecx+0x6f56a02]
  40ee27:	les    ecx,FWORD PTR [edi-0x56]
  40ee2a:	sahf   
  40ee2b:	push   0xffffff98
  40ee2d:	pushf  
  40ee2e:	mov    al,ds:0x62848302
  40ee33:	pop    ebx
  40ee34:	std    
  40ee35:	jl     0x40ede1
  40ee37:	pop    ebx
  40ee38:	je     0x40ee2b
  40ee3a:	jge    0x40ee32
  40ee3c:	jnp    0x40ee19
  40ee3e:	ficomp WORD PTR [ebx-0x79]
  40ee41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee42:	jp     0x40edc4
  40ee44:	dec    esp
  40ee45:	in     eax,0x3d
  40ee47:	push   0x1b591a0c
  40ee4c:	ret    
  40ee4d:	(bad)  
  40ee4f:	arpl   WORD PTR [edx+0x448a3da1],ax
  40ee55:	lds    eax,FWORD PTR [esi-0x56]
  40ee58:	je     0x40ee45
  40ee5a:	sahf   
  40ee5b:	inc    eax
  40ee5c:	pop    es
  40ee5d:	jmp    0x6b2c7755
  40ee62:	inc    esi
  40ee63:	pop    esp
  40ee64:	je     0x40ee56
  40ee66:	std    
  40ee67:	(bad)  
  40ee68:	or     ebx,DWORD PTR [esi+0x2911d38b]
  40ee6e:	mov    eax,ds:0x44f9745b
  40ee73:	retf   
  40ee74:	inc    BYTE PTR [eax]
  40ee76:	jns    0x40ee83
  40ee78:	push   0x0
  40ee7a:	repz xor al,0x6
  40ee7d:	inc    DWORD PTR [eax]
  40ee7f:	dec    ecx
  40ee80:	xor    edx,DWORD PTR [eax]
  40ee82:	inc    eax
  40ee83:	je     0x40ee0b
  40ee85:	jnp    0x40ee97
  40ee87:	inc    esp
  40ee88:	popa   
  40ee89:	or     edi,DWORD PTR [ebx]
  40ee8b:	stc    
  40ee8c:	dec    esi
  40ee8d:	jp     0x40ee91
  40ee8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee90:	(bad)  
  40ee91:	xor    ecx,ecx
  40ee93:	pop    edx
  40ee94:	mov    BYTE PTR [edx],cl
  40ee96:	inc    esi
  40ee97:	add    ebp,eax
  40ee99:	or     al,BYTE PTR [eax]
  40ee9b:	or     DWORD PTR [esi+0x17bf53ea],ecx
  40eea1:	push   ebp
  40eea2:	push   edi
  40eea3:	mov    bh,0xbe
  40eea5:	std    
  40eea6:	jne    0x40eeb7
  40eea8:	loop   0x40ef1d
  40eeaa:	or     al,0xb3
  40eeac:	push   esp
  40eead:	jbe    0x40eec1
  40eeaf:	xor    al,0xff
  40eeb1:	mov    bl,al
  40eeb3:	push   ds
  40eeb4:	(bad)  
  40eeb5:	(bad)  
  40eeb6:	jne    0x40eea8
  40eeb8:	cmc    
  40eeb9:	cmc    
  40eeba:	jmp    FWORD PTR [ecx+0x7]
  40eebd:	mov    eax,ebx
  40eebf:	pushf  
  40eec0:	(bad)  
  40eec2:	push   ebx
  40eec4:	xchg   dh,dh
  40eec6:	test   ebx,eax
  40eec8:	cmp    esp,DWORD PTR [ebx]
  40eeca:	inc    edi
  40eecb:	inc    ecx
  40eecc:	or     bh,BYTE PTR [edi]
  40eece:	test   esp,esi
  40eed0:	cmp    DWORD PTR [ebx],ebx
  40eed2:	call   0x3eb8ba
  40eed7:	das    
  40eed8:	mov    dh,0x83
  40eeda:	imul   BYTE PTR [eax+0x50]
  40eedd:	push   ebp
  40eede:	jmp    FWORD PTR [ecx-0xe]
  40eee1:	mov    al,bl
  40eee3:	add    bl,dh
  40eee5:	cmp    BYTE PTR [esi],al
  40eee7:	call   0x3ea8a5
  40eeec:	xadd   ecx,ebp
  40eeef:	add    bl,BYTE PTR [ebp-0x1ca1bdc4]
  40eef5:	adc    al,0xc1
  40eef7:	shl    DWORD PTR [ebp-0x7e754895],0xfb
  40eefe:	mov    dl,0x55
  40ef00:	rcl    al,cl
  40ef02:	fadd   DWORD PTR [edi]
  40ef04:	push   ss
  40ef05:	aam    0x8a
  40ef07:	lock pop edx
  40ef09:	push   edi
  40ef0a:	adc    BYTE PTR [ecx],0xdd
  40ef0d:	imul   ecx,DWORD PTR [ecx+0x196818d7],0xffffff8d
  40ef14:	fldcw  WORD PTR [ebx+0x0]
  40ef17:	mov    eax,esp
  40ef19:	mov    edi,0x6c314484
  40ef1e:	push   es
  40ef1f:	add    BYTE PTR [ebp-0x6300bd16],bl
  40ef25:	imul   eax,DWORD PTR [edx],0xffffff81
  40ef28:	push   ss
  40ef29:	ins    BYTE PTR es:[edi],dx
  40ef2a:	add    ah,BYTE PTR [eax-0x74e58f63]
  40ef30:	pop    eax
  40ef31:	out    dx,eax
  40ef32:	imul   esp,DWORD PTR [ecx],0xffffffd9
  40ef35:	or     BYTE PTR [edi-0x7d],bl
  40ef38:	fst    st(7)
  40ef3a:	jmp    FWORD PTR cs:[eax+0x67]
  40ef3e:	mov    DWORD PTR ds:0x8d0ad6ea,eax
  40ef44:	cdq    
  40ef45:	shl    DWORD PTR [ecx+0x56da004f],cl
  40ef4b:	scas   al,BYTE PTR es:[edi]
  40ef4c:	adc    bl,BYTE PTR [ebp+0x6b]
  40ef4f:	xchg   DWORD PTR [edi+0x4a8fa345],edi
  40ef55:	ret    0x44f4
  40ef58:	jl     0x40ef36
  40ef5a:	ins    BYTE PTR es:[edi],dx
  40ef5b:	pop    edx
  40ef5c:	mov    bl,BYTE PTR [ebx+0x14654b5c]
  40ef62:	pusha  
  40ef63:	fimul  DWORD PTR [edx-0x7cfebb26]
  40ef69:	add    ah,BYTE PTR gs:[esi-0x50420f42]
  40ef70:	inc    ecx
  40ef71:	mov    ds:0x83b73f02,al
  40ef76:	into   
  40ef77:	les    ecx,FWORD PTR [edi]
  40ef79:	es push edx
  40ef7b:	test   eax,edi
  40ef7d:	jmp    0x675a:0x160428f4
  40ef84:	inc    esi
  40ef85:	bound  eax,QWORD PTR [ebx]
  40ef87:	jmp    0xe89a0b8f
  40ef8c:	add    edi,ebp
  40ef8e:	add    esi,edx
  40ef90:	adc    ebx,DWORD PTR [eax]
  40ef92:	leave  
  40ef93:	out    0x6b,eax
  40ef95:	pop    esp
  40ef96:	inc    ebp
  40ef97:	dec    ebp
  40ef98:	pop    esi
  40ef99:	push   ds
  40ef9a:	inc    edx
  40ef9b:	mov    esp,0x4ce3227
  40efa0:	hlt    
  40efa1:	sub    ecx,esi
  40efa3:	or     al,0xf4
  40efa5:	retf   
  40efa6:	pop    ecx
  40efa7:	neg    BYTE PTR [esi-0x4f]
  40efaa:	stos   BYTE PTR es:[edi],al
  40efab:	stc    
  40efac:	ret    
  40efad:	add    BYTE PTR [edx],dl
  40efaf:	jle    0x40efd9
  40efb1:	fucomi st,st(5)
  40efb3:	xchg   BYTE PTR [ebp-0x74bc38a2],ah
  40efb9:	dec    ecx
  40efba:	daa    
  40efbb:	or     BYTE PTR [edi],ch
  40efbd:	pop    es
  40efbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efbf:	add    dl,BYTE PTR [edx]
  40efc1:	add    bl,BYTE PTR [esi]
  40efc3:	dec    edx
  40efc4:	cmc    
  40efc5:	mov    ebp,0x3e04440
  40efca:	jae    0x40ef58
  40efcc:	mov    eax,0xedfdc444
  40efd1:	xchg   ebp,eax
  40efd2:	in     al,dx
  40efd3:	jmp    0x40efb4
  40efd5:	mov    ebp,0x1947097e
  40efda:	scas   eax,DWORD PTR es:[edi]
  40efdb:	cld    
  40efdc:	mov    esi,0x6a00b881
  40efe1:	inc    esi
  40efe2:	jp     0x40efc4
  40efe4:	(bad)  
  40efe5:	jmp    0xa9f6f836
  40efea:	xchg   DWORD PTR [ebx],ecx
  40efec:	pop    edx
  40efed:	lfs    esi,FWORD PTR [edx]
  40eff0:	sbb    bh,BYTE PTR [ebx+0x6a06621c]
  40eff6:	fbld   TBYTE PTR [edi]
  40eff8:	jmp    0xb888:0xddae
  40effe:	js     0x40ef8b
  40f000:	push   eax
  40f001:	jmp    0x40f02b
  40f003:	inc    ebp
  40f004:	xor    BYTE PTR [ecx-0x40],0xce
  40f008:	or     DWORD PTR [esi+0x75],ebp
  40f00b:	and    al,0x4
  40f00d:	dec    dx
  40f00f:	fcom   DWORD PTR [ecx]
  40f011:	test   eax,0xc0039e00
  40f016:	mov    ecx,0xe123d3e1
  40f01b:	lock pop edi
  40f01d:	cmp    ch,BYTE PTR ds:0x303258d0
  40f023:	inc    ebx
  40f024:	mov    ecx,DWORD PTR [ebx]
  40f026:	stc    
  40f027:	fadd   QWORD PTR [ebx]
  40f029:	add    BYTE PTR [edx+0x79],ch
  40f02c:	pop    eax
  40f02d:	je     0x40f022
  40f02f:	jno    0x40f004
  40f031:	and    esp,ebp
  40f033:	imul   ebp,esi,0x57defb77
  40f039:	dec    esi
  40f03a:	push   cs
  40f03b:	aad    0x23
  40f03d:	or     BYTE PTR [edi-0x13c107a],bl
  40f043:	dec    ecx
  40f044:	cmp    eax,0x449eef03
  40f049:	add    ebp,ecx
  40f04b:	sbb    eax,0x9eed23dc
  40f050:	int    0x3
  40f052:	sbb    ah,BYTE PTR [ecx+0x6c]
  40f055:	cs push 0x66
  40f058:	pop    eax
  40f059:	je     0x40f03e
  40f05b:	pop    ecx
  40f05c:	shl    DWORD PTR [ebx],cl
  40f05e:	add    al,al
  40f060:	mov    dh,0x13
  40f062:	add    dh,0x43
  40f065:	(bad)  
  40f066:	push   ebp
  40f067:	cmp    edi,ebp
  40f069:	dec    DWORD PTR [edx+eax*8-0x4f3f7afc]
  40f070:	pop    edx
  40f071:	out    0x78,al
  40f073:	aaa    
  40f074:	mov    dh,0xfd
  40f076:	test   DWORD PTR [eax],eax
  40f078:	xor    al,0x2f
  40f07a:	or     DWORD PTR [esi+0x2b],edx
  40f07d:	das    
  40f07e:	and    cl,BYTE PTR [esp+edx*4]
  40f081:	out    0xd6,al
  40f083:	ret    
  40f084:	jmp    0x40f03c
  40f086:	pop    esp
  40f087:	ret    0x370
  40f08a:	cmp    DWORD PTR [eax+eiz*2-0x1],0xffffffff
  40f08f:	push   ebp
  40f090:	iret   
  40f091:	mov    bl,0x73
  40f093:	add    al,0xa7
  40f095:	mov    esi,0xb5b72ce9
  40f09a:	std    
  40f09b:	jne    0x40f0f5
  40f09d:	mov    dh,0x72
  40f09f:	and    al,0x2c
  40f0a1:	mov    dh,0x13
  40f0a3:	js     0x40f0eb
  40f0a5:	inc    ebx
  40f0a6:	dec    BYTE PTR [edx+0x1448864]
  40f0ac:	add    ebx,0xf9ace472
  40f0b2:	ret    0xabff
  40f0b5:	cmp    BYTE PTR [esi-0x273008c],0x74
  40f0bc:	loopne 0x40f0c4
  40f0be:	push   eax
  40f0bf:	call   0x3eb342
  40f0c4:	or     al,cl
  40f0c6:	add    al,BYTE PTR [eax]
  40f0c8:	pop    es
  40f0c9:	lea    ecx,[ecx-0x975cc0f]
  40f0cf:	test   edx,esi
  40f0d1:	xor    DWORD PTR [esi],edi
  40f0d3:	mov    ecx,ecx
  40f0d5:	adc    BYTE PTR [eax],0x40
  40f0d8:	popf   
  40f0d9:	imul   eax,DWORD PTR [ebp-0x5245ff02],0x529ff0b
  40f0e3:	hlt    
  40f0e4:	dec    dh
  40f0e6:	rcr    DWORD PTR [ebx-0x2],cl
  40f0e9:	imul   edx,DWORD PTR [eax-0x488a75ca],0x7
  40f0f0:	cmp    esp,DWORD PTR [eax]
  40f0f2:	adc    BYTE PTR ds:0x45f47502,cl
  40f0f8:	inc    BYTE PTR [edx-0x6d8cbc18]
  40f0fe:	mov    dh,0xff
  40f100:	ds int 0xd0
  40f103:	add    edi,edi
  40f105:	icebp  
  40f106:	aas    
  40f107:	out    dx,al
  40f108:	mov    WORD PTR [ecx-0x15184c0d],ds
  40f10e:	test   al,0x5a
  40f110:	dec    BYTE PTR ds:0x8f016d6b
  40f116:	sub    edi,DWORD PTR [ebx+0x29e65d]
  40f11c:	add    BYTE PTR [esi],bl
  40f11e:	dec    eax
  40f11f:	push   ds
  40f120:	add    al,0x9d
  40f122:	js     0x40f0d4
  40f124:	push   esi
  40f125:	push   ss
  40f126:	and    al,0x8f
  40f128:	lock test eax,0x953c8d52
  40f12e:	cmp    edx,eax
  40f130:	call   FWORD PTR [edi]
  40f132:	and    DWORD PTR [ebx+0x74],ebx
  40f135:	xchg   ebp,eax
  40f136:	hlt    
  40f137:	iret   
  40f138:	and    ebp,DWORD PTR [ebp-0x2a75cd14]
  40f13e:	add    al,0x12
  40f140:	inc    DWORD PTR [eax]
  40f142:	retf   0x5bd0
  40f145:	mov    WORD PTR [ecx+0x34],ds
  40f148:	add    ebp,eax
  40f14a:	mov    BYTE PTR [ecx],ch
  40f14c:	pop    ebx
  40f14d:	(bad)  
  40f14e:	and    DWORD PTR [eax+edx*8],ebp
  40f151:	adc    ah,BYTE PTR [esi]
  40f153:	add    ebp,edi
  40f155:	mov    dh,0xcb
  40f157:	into   
  40f158:	add    al,0xf0
  40f15a:	lahf   
  40f15b:	cmp    eax,0x40ba6c38
  40f160:	int    0x5a
  40f162:	add    al,BYTE PTR [edx+edx*8]
  40f165:	add    eax,0xba1d426f
  40f16a:	inc    edi
  40f16b:	inc    eax
  40f16c:	in     al,dx
  40f16d:	add    esi,ebx
  40f16f:	push   ebp
  40f170:	rol    DWORD PTR [ebx-0x7f173d54],cl
  40f176:	dec    edx
  40f177:	aam    0x3b
  40f179:	pop    ss
  40f17a:	push   esp
  40f17b:	adc    DWORD PTR [ebx+0xe4221b2],edi
  40f181:	cld    
  40f182:	mov    ds:0x1fb1c48d,eax
  40f187:	push   ebp
  40f188:	enter  0x95cf,0x81
  40f18c:	lods   eax,DWORD PTR ds:[esi]
  40f18d:	push   edx
  40f18e:	rol    BYTE PTR [ecx-0x3340093],0xa7
  40f195:	lds    eax,FWORD PTR [edi+0x776bdc32]
  40f19b:	inc    ebx
  40f19c:	arpl   di,bp
  40f19e:	call   0x199b922a
  40f1a3:	dec    ebx
  40f1a4:	shl    cl,0x0
  40f1a7:	fwait
  40f1a8:	(bad)  
  40f1a9:	cld    
  40f1aa:	int    0x1f
  40f1ac:	push   ebp
  40f1ad:	or     al,dl
  40f1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1b0:	and    DWORD PTR ds:0x25817852,0xb0fe93ff
  40f1ba:	int3   
  40f1bb:	test   DWORD PTR [eax-0x4b],ebp
  40f1be:	push   ds
  40f1bf:	ror    ebx,cl
  40f1c1:	fld    QWORD PTR [eax-0x770e2bce]
  40f1c7:	xchg   esi,eax
  40f1c8:	add    bl,BYTE PTR [eax-0x95b74b]
  40f1ce:	pop    edx
  40f1cf:	pusha  
  40f1d0:	push   esp
  40f1d1:	(bad)  
  40f1d2:	mov    edx,0xf588df61
  40f1d7:	fdivr  QWORD PTR [edi]
  40f1d9:	push   edx
  40f1da:	aaa    
  40f1db:	stos   DWORD PTR es:[edi],eax
  40f1dc:	cmp    DWORD PTR [edx+0x58da4d9],ecx
  40f1e2:	pop    esp
  40f1e3:	jmp    0x4bab572c
  40f1e8:	or     dh,BYTE PTR [edi-0x1c]
  40f1eb:	xchg   ebp,eax
  40f1ec:	(bad)  
  40f1ed:	rol    edx,0x97
  40f1f0:	xchg   DWORD PTR [edi+0x6e],ecx
  40f1f3:	jg     0x40f176
  40f1f5:	stc    
  40f1f6:	in     al,dx
  40f1f7:	ins    DWORD PTR es:[edi],dx
  40f1f8:	std    
  40f1f9:	add    al,0xb0
  40f1fb:	in     al,0x53
  40f1fd:	inc    BYTE PTR [edx+0x6e4f85a7]
  40f203:	jg     0x40f186
  40f205:	stc    
  40f206:	in     al,dx
  40f207:	dec    ebp
  40f208:	clc    
  40f209:	add    al,0x50
  40f20b:	add    ah,al
  40f20d:	push   ebx
  40f20e:	(bad)  
  40f20f:	ins    DWORD PTR es:[edi],dx
  40f210:	cwde   
  40f211:	iret   
  40f212:	push   es
  40f213:	loope  0x40f1b4
  40f215:	shl    DWORD PTR [ecx],0x42
  40f218:	mov    eax,0x9d49bffc
  40f21d:	mov    al,BYTE PTR [eax]
  40f21f:	call   0x99c1:0xebc57f9e
  40f226:	gs ins BYTE PTR es:[edi],dx
  40f228:	loope  0x40f1f8
  40f22a:	pop    es
  40f22b:	gs pusha 
  40f22d:	into   
  40f22e:	add    edi,DWORD PTR [ecx-0x62]
  40f231:	addr16 add ebx,edi
  40f234:	pop    esi
  40f235:	mov    ch,0x5a
  40f237:	sub    bh,BYTE PTR [edx]
  40f239:	mov    ebx,ebp
  40f23b:	push   0x75
  40f23d:	pop    es
  40f23e:	or     DWORD PTR [edx+edx*2+0x21b75153],0xffffffcf
  40f246:	pop    es
  40f247:	add    BYTE PTR [ecx+0xa],dh
  40f24a:	push   es
  40f24b:	mov    edi,DWORD PTR [ecx]
  40f24d:	cld    
  40f24e:	and    BYTE PTR [eax],0xc4
  40f251:	xchg   edx,eax
  40f252:	xchg   DWORD PTR [ebp-0x34],ecx
  40f255:	div    al
  40f257:	getsec 
  40f259:	stos   DWORD PTR es:[edi],eax
  40f25a:	(bad)  
  40f25b:	push   DWORD PTR [esi+eax*4-0x20b8efbd]
  40f262:	add    BYTE PTR [ecx+0x5e9b279],cl
  40f268:	das    
  40f269:	inc    esp
  40f26a:	push   es
  40f26b:	mov    ebp,esp
  40f26d:	jle    0x40f2ea
  40f26f:	hlt    
  40f270:	add    BYTE PTR [esi+eax*4-0x799f8b24],al
  40f277:	les    edi,FWORD PTR [ebx]
  40f279:	and    eax,0x848a0a2e
  40f27e:	cmc    
  40f27f:	push   esp
  40f280:	adc    al,0x98
  40f282:	push   ebx
  40f283:	cmp    eax,DWORD PTR ds:[ebp+0x2d]
  40f287:	repnz mov ebx,DWORD PTR [esi+eiz*1]
  40f28b:	inc    BYTE PTR [eax-0x13]
  40f28e:	xchg   esp,eax
  40f28f:	push   es
  40f290:	jmp    0x40f2d3
  40f292:	xchg   ecx,eax
  40f293:	mov    edi,DWORD PTR [ebp+0x3c]
  40f296:	xchg   bh,ch
  40f298:	call   0x40f444
  40f29d:	iret   
  40f29e:	mov    bh,0x89
  40f2a0:	dec    ebp
  40f2a1:	rol    BYTE PTR [esi-0x42ef38d],1
  40f2a7:	mov    WORD PTR [esp+esi*1],es
  40f2aa:	(bad)  
  40f2ab:	jmp    edi
  40f2ad:	sbb    al,0xbf
  40f2af:	std    
  40f2b0:	dec    DWORD PTR [eax+0x1f840dbf]
  40f2b6:	(bad)  
  40f2b7:	(bad)  
  40f2b8:	(bad)  
  40f2b9:	jns    0x40f275
  40f2bb:	jb     0x40f2d7
  40f2bd:	inc    edi
  40f2be:	xchg   ch,al
  40f2c0:	call   0xfe970e62
  40f2c5:	repnz fild QWORD PTR [ebp-0x73f4e905]
  40f2cc:	or     BYTE PTR [ebx*2+0x5bdd8471],dl
  40f2d3:	jle    0x40f261
  40f2d5:	add    BYTE PTR [ebp+0x60f60269],bl
  40f2db:	pop    ecx
  40f2dc:	add    esi,DWORD PTR [ebx+esi*1-0x30]
  40f2e0:	enter  0x26fb,0xa3
  40f2e4:	mov    bh,bh
  40f2e6:	and    DWORD PTR [ebp-0x76],ebx
  40f2e9:	and    BYTE PTR [ebp+0x69],0xce
  40f2ed:	pop    esi
  40f2ee:	push   ss
  40f2ef:	pop    ecx
  40f2f0:	lods   al,BYTE PTR ds:[esi]
  40f2f1:	(bad)  
  40f2f2:	mov    al,0x13
  40f2f4:	repnz aas 
  40f2f6:	popf   
  40f2f7:	out    0x43,al
  40f2f9:	jge    0x40f2ea
  40f2fb:	sub    al,0x30
  40f2fd:	xor    al,BYTE PTR [edx-0x6c82bc19]
  40f303:	in     eax,0x7
  40f305:	aaa    
  40f306:	sbb    eax,0x95742373
  40f30b:	fld    TBYTE PTR [eax+ecx*1+0x1d]
  40f30f:	cmp    edi,0x76
  40f312:	mov    ds:0x553abf1d,eax
  40f317:	pusha  
  40f318:	push   0x17d75f2a
  40f31d:	xor    dl,BYTE PTR [eax]
  40f31f:	mov    WORD PTR [ebp-0x7c],ss
  40f322:	dec    edi
  40f323:	xor    al,0xee
  40f325:	mov    DWORD PTR [ecx+0x7df883f5],esp
  40f32b:	(bad)
  40f32f:	push   ebx
  40f330:	cmp    al,0xa1
  40f333:	nop
  40f334:	inc    BYTE PTR [edi+0x67]
  40f337:	xchg   edx,eax
  40f338:	data16 cmp al,BYTE PTR [eax]
  40f33b:	or     eax,DWORD PTR [ebx]
  40f33d:	lahf   
  40f33e:	pop    es
  40f33f:	sbb    BYTE PTR [ebx-0x62],al
  40f342:	or     ecx,DWORD PTR [ebp-0x47]
  40f345:	mov    esi,0xd43926b
  40f34a:	push   edi
  40f34b:	loopne 0x40f353
  40f34d:	mov    ecx,0xc81603
  40f352:	push   edi
  40f353:	popa   
  40f354:	dec    esi
  40f355:	scas   eax,DWORD PTR es:[edi]
  40f356:	rcr    BYTE PTR [edx-0x35f894ff],0x51
  40f35d:	in     eax,0x8a
  40f35f:	pop    ecx
  40f360:	dec    esi
  40f361:	cmp    eax,0xaa3b57b6
  40f366:	repz mov dl,0x7c
  40f369:	and    ebx,DWORD PTR [eax+0x17]
  40f36c:	push   ecx
  40f36d:	sar    BYTE PTR [edx+eiz*8],1
  40f370:	push   ecx
  40f371:	mov    ebp,0xc1516282
  40f376:	imul   ebp,ecx,0x7682bc7d
  40f37c:	(bad)  
  40f37d:	imul   esp,eax,0xae3a028a
  40f383:	daa    
  40f384:	push   esp
  40f385:	imul   ebx,DWORD PTR ds:0xbf47f9d,0x582b7bd2
  40f38f:	adc    eax,0x5f1a74b7
  40f394:	add    DWORD PTR [edx+0x44],ebp
  40f397:	push   edx
  40f398:	push   ecx
  40f399:	call   0x5fc39627
  40f39e:	and    eax,DWORD PTR [eax]
  40f3a0:	leave  
  40f3a1:	cld    
  40f3a2:	push   0xe3cea55c
  40f3a7:	xor    DWORD PTR ds:0xdd0bcdff,0x7b
  40f3ae:	stos   DWORD PTR es:[edi],eax
  40f3af:	push   edi
  40f3b0:	addr16 inc esp
  40f3b2:	mov    edx,0xff44d75e
  40f3b7:	in     eax,0x1f
  40f3b9:	jno    0x40f3ba
  40f3bb:	call   0x7458705e
  40f3c0:	out    0x1,al
  40f3c2:	and    BYTE PTR [edx],0x9b
  40f3c5:	(bad)  
  40f3c6:	add    al,0x69
  40f3c8:	push   edi
  40f3c9:	and    esi,DWORD PTR [ebp-0xa]
  40f3cc:	sbb    esi,ecx
  40f3ce:	sti    
  40f3cf:	adc    dl,BYTE PTR [edx+0x79690e7c]
  40f3d5:	icebp  
  40f3d6:	jae    0x40f3be
  40f3d8:	push   ds
  40f3d9:	dec    edx
  40f3da:	or     BYTE PTR [ebp-0x63],ch
  40f3dd:	cmp    al,0xf4
  40f3e0:	call   0x57633aea
  40f3e5:	shr    ecx,cl
  40f3e7:	bound  ebp,QWORD PTR [eax+0x1c]
  40f3ea:	fadd   st,st(2)
  40f3ec:	jns    0x40f3f8
  40f3ee:	pop    ds
  40f3ef:	cmp    al,0xac
  40f3f1:	adc    ecx,ecx
  40f3f3:	ins    BYTE PTR es:[edi],dx
  40f3f4:	pop    eax
  40f3f5:	push   ecx
  40f3f6:	jmp    0x52f1:0x7fc85feb
  40f3fd:	aam    0xf8
  40f3ff:	lahf   
  40f400:	fiadd  WORD PTR [edx]
  40f402:	je     0x40f3e8
  40f404:	add    BYTE PTR [ecx],bh
  40f406:	or     eax,0xcfd1bfa
  40f40b:	cli    
  40f40c:	adc    al,0x9c
  40f40e:	dec    edi
  40f40f:	dec    esp
  40f410:	test   DWORD PTR [ecx+esi*1],edx
  40f413:	sub    bl,BYTE PTR [esi*8+0x1a714c7c]
  40f41a:	cld    
  40f41b:	mov    ebp,fs
  40f41d:	sahf   
  40f41e:	add    al,BYTE PTR [eax]
  40f420:	push   ecx
  40f421:	push   esp
  40f422:	xchg   ecx,eax
  40f423:	(bad)  
  40f424:	pop    esi
  40f425:	sbb    eax,0xb2137390
  40f42a:	sub    al,0x74
  40f42c:	jecxz  0x40f3bb
  40f42e:	inc    edx
  40f42f:	addr16 add al,dh
  40f432:	inc    eax
  40f433:	add    BYTE PTR ds:[ebx+ebx*8+0x3],al
  40f438:	call   DWORD PTR [ecx-0x48]
  40f43b:	mov    ebx,eax
  40f43d:	pop    esp
  40f43e:	mov    edi,edx
  40f440:	(bad)  
  40f441:	mov    ebx,0x318b0c79
  40f446:	lods   al,BYTE PTR ds:[esi]
  40f447:	xchg   DWORD PTR [esi*2-0xd8b4131],eax
  40f44e:	mov    dh,0x43
  40f450:	clc    
  40f451:	outs   dx,DWORD PTR ds:[esi]
  40f452:	lahf   
  40f453:	repnz inc edi
  40f455:	dec    ebp
  40f456:	aaa    
  40f457:	cli    
  40f458:	mov    eax,DWORD PTR [ebx-0x4400ca25]
  40f45e:	mov    dh,0x89
  40f460:	inc    ebp
  40f461:	mov    esp,0x818b0bda
  40f466:	scas   al,BYTE PTR es:[edi]
  40f467:	mov    DWORD PTR [esi],edi
  40f469:	add    ah,bl
  40f46b:	in     al,0xbd
  40f46d:	(bad)  
  40f46e:	fild   DWORD PTR [edx-0x6784003a]
  40f474:	pop    ecx
  40f475:	leave  
  40f476:	inc    edi
  40f477:	mov    al,ds:0xe807ec89
  40f47c:	or     al,BYTE PTR [ebx+0x52feaee1]
  40f482:	ret    0xf079
  40f485:	and    DWORD PTR [edx+0x3],0xffffff8d
  40f489:	sbb    al,0xbc
  40f48b:	popf   
  40f48c:	xchg   DWORD PTR [ebp+0x18],eax
  40f48f:	jl     0x40f4ec
  40f491:	hlt    
  40f492:	pop    edi
  40f493:	ret    0x830d
  40f496:	xor    DWORD PTR [ebx],eax
  40f498:	add    BYTE PTR [eax],al
  40f49a:	cmp    edi,DWORD PTR [esi+0x6]
  40f49d:	or     ebp,0x23
  40f4a0:	je     0x40f4ac
  40f4a2:	mov    bh,0xac
  40f4a4:	pop    es
  40f4a5:	jb     0x40f4f2
  40f4a7:	xor    bh,0xd
  40f4aa:	popf   
  40f4ab:	xor    BYTE PTR [eax],cl
  40f4ad:	sbb    DWORD PTR [ebp+0x5b],0xffffff89
  40f4b1:	inc    esp
  40f4b2:	and    DWORD PTR [ecx+eax*2],eax
  40f4b5:	jno    0x40f4b8
  40f4b7:	add    al,0x41
  40f4b9:	push   cs
  40f4ba:	push   ds
  40f4bb:	retf   0x2
  40f4be:	popf   
  40f4bf:	xor    BYTE PTR [ebx+0xa11007],cl
  40f4c5:	xor    esp,0x47
  40f4c8:	into   
  40f4c9:	add    al,0x1e
  40f4cb:	repnz and BYTE PTR [ebp+0x0],dh
  40f4cf:	mov    esp,esp
  40f4d1:	xor    DWORD PTR [eax+0x3c680560],ecx
  40f4d7:	stos   BYTE PTR es:[edi],al
  40f4d8:	sbb    BYTE PTR [ebx+eax*4],al
  40f4db:	aam    0x38
  40f4dd:	into   
  40f4de:	adc    BYTE PTR [esi],bl
  40f4e0:	push   edx
  40f4e1:	or     BYTE PTR [edx-0x68],dh
  40f4e4:	fmul   QWORD PTR [esp+ecx*1+0x33]
  40f4e8:	push   0xf49fc685
  40f4ed:	dec    esi
  40f4ee:	jno    0x40f4b2
  40f4f0:	jecxz  0x40f524
  40f4f2:	sub    al,ch
  40f4f4:	xor    esp,DWORD PTR [edx]
  40f4f6:	data16 aam 0x34
  40f4f9:	xlat   BYTE PTR ds:[ebx]
  40f4fa:	adc    eax,0x4680a2ce
  40f4ff:	mov    eax,DWORD PTR [ecx+0x7]
  40f502:	inc    ecx
  40f503:	push   ds
  40f504:	je     0x40f50b
  40f506:	pushw  ds
  40f508:	fs scas al,BYTE PTR es:[edi]
  40f50a:	jae    0x40f577
  40f50c:	outs   dx,BYTE PTR ds:[esi]
  40f50d:	inc    esp
  40f50e:	add    cl,dh
  40f510:	fs test esi,eax
  40f513:	lahf   
  40f514:	inc    eax
  40f515:	dec    ebp
  40f516:	jno    0x40f593
  40f518:	inc    ecx
  40f519:	dec    ebp
  40f51a:	je     0x40f4b5
  40f51c:	fsub   st,st(0)
  40f51e:	sti    
  40f51f:	lahf   
  40f520:	loopne 0x40f554
  40f522:	sub    ah,al
  40f524:	add    ah,BYTE PTR [ebp+0x7f]
  40f527:	jmp    0x20416076
  40f52c:	pop    es
  40f52d:	jmp    0x51749235
  40f532:	pop    esp
  40f533:	add    BYTE PTR [eax-0x74],ah
  40f536:	inc    ebp
  40f537:	push   ebx
  40f538:	push   ds
  40f539:	inc    ebx
  40f53a:	mov    ah,0xf
  40f53c:	sbb    BYTE PTR [edx],ch
  40f53e:	mov    ebx,0xc042cffd
  40f543:	mov    ebx,0xc3e8c289
  40f548:	pop    es
  40f549:	or     BYTE PTR [esi],bl
  40f54b:	fdecstp 
  40f54d:	jns    0x40f578
  40f54f:	pop    esp
  40f550:	fwait
  40f551:	dec    ecx
  40f552:	or     eax,0x71fd1753
  40f557:	mov    ecx,0x74e47bd2
  40f55c:	sbb    DWORD PTR [ebx+0x7c],eax
  40f55f:	jmp    0x40f52c
  40f561:	(bad)  
  40f562:	lock jle 0x40f5c6
  40f565:	push   esi
  40f566:	imul   ecx,DWORD PTR [edx-0x64],0x27505b7b
  40f56d:	inc    esi
  40f56e:	mov    edi,0xcd4daa26
  40f573:	jle    0x40f5ce
  40f575:	dec    edx
  40f576:	rol    DWORD PTR [eax],1
  40f578:	es mov eax,0x9a5ad07e
  40f57f:	xchg   ecx,eax
  40f580:	mov    ecx,DWORD PTR [ebp+0x69]
  40f583:	cmp    eax,DWORD PTR [ebx+0x65af46ad]
  40f589:	inc    ecx
  40f58a:	xor    edi,DWORD PTR [edi-0x7a]
  40f58d:	add    DWORD PTR [edi+esi*8+0x2ed9b4cf],0x7c8611cb
  40f598:	add    cl,bh
  40f59a:	push   esi
  40f59b:	outs   dx,DWORD PTR ds:[esi]
  40f59c:	mov    al,0x4a
  40f59e:	or     eax,DWORD PTR [eax]
  40f5a0:	adc    al,0x9d
  40f5a2:	std    
  40f5a3:	test   DWORD PTR [edx-0x62],eax
  40f5a6:	add    al,BYTE PTR [eax]
  40f5a8:	jb     0x40f607
  40f5aa:	push   ebp
  40f5ab:	mov    ah,BYTE PTR [esi+esi*1-0x549efc82]
  40f5b2:	std    
  40f5b3:	lds    esp,FWORD PTR [edi+ecx*8+0x7aac874d]
  40f5ba:	js     0x40f585
  40f5bc:	push   edx
  40f5bd:	adc    eax,0xbe3182e7
  40f5c2:	(bad)  
  40f5c3:	sbb    bh,al
  40f5c5:	sbb    edx,DWORD PTR [ebp+0x8]
  40f5c8:	fwait
  40f5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ca:	in     al,0x82
  40f5cc:	and    DWORD PTR [ebp+0x616a0cd4],ebx
  40f5d2:	add    ecx,DWORD PTR [edi]
  40f5d4:	push   esi
  40f5d5:	cdq    
  40f5d6:	in     al,0x84
  40f5d8:	sub    ebp,esi
  40f5da:	pop    edi
  40f5db:	jmp    0x10e8:0xfec664e5
  40f5e2:	dec    esp
  40f5e3:	adc    al,0x69
  40f5e5:	enter  0xc,0x74
  40f5e9:	popf   
  40f5ea:	or     cl,BYTE PTR [ebp-0x72fb49d3]
  40f5f0:	pop    esp
  40f5f1:	inc    ebp
  40f5f2:	jp     0x40f638
  40f5f4:	fld    DWORD PTR [ecx-0x31]
  40f5f7:	mov    esp,0xbf7fecc6
  40f5fc:	xor    eax,0x7c814f00
  40f601:	mov    cl,0xa1
  40f603:	ja     0x40f661
  40f605:	mov    ch,0x67
  40f607:	add    al,0x6a
  40f609:	leave  
  40f60a:	inc    esi
  40f60b:	out    0x88,al
  40f60d:	in     eax,0x61
  40f60f:	lds    edi,FWORD PTR [edi+0x14]
  40f612:	int3   
  40f613:	dec    ebx
  40f614:	jb     0x40f5f7
  40f616:	inc    eax
  40f617:	and    bl,BYTE PTR [eax+0x0]
  40f61a:	stos   BYTE PTR es:[edi],al
  40f61b:	mov    DWORD PTR [edx],0x43cd7b7b
  40f621:	in     al,dx
  40f622:	shl    esi,cl
  40f624:	mov    al,BYTE PTR [ebp-0x3c]
  40f627:	retf   
  40f628:	xor    bh,BYTE PTR [ebx-0x34]
  40f62b:	mov    ah,0xf7
  40f62d:	call   ebx
  40f62f:	add    eax,0x3bb4f07d
  40f634:	std    
  40f635:	add    BYTE PTR [eax+0x2],cl
  40f638:	push   0x22
  40f63a:	cmp    al,0x5a
  40f63c:	xchg   DWORD PTR [edi+ebx*8],eax
  40f63f:	cmp    dh,BYTE PTR [ecx]
  40f641:	rcr    dl,0xc8
  40f644:	add    bh,BYTE PTR [ebx-0x4d]
  40f647:	inc    ebx
  40f648:	test   BYTE PTR [ebx+0x4539b849],0x0
  40f64f:	add    eax,DWORD PTR [edx-0x24e6cab]
  40f655:	mov    esi,DWORD PTR [edi-0x72a4a36f]
  40f65b:	les    eax,FWORD PTR [esi]
  40f65d:	add    bl,dl
  40f65f:	xor    al,0xf2
  40f661:	call   0xfdbca066
  40f666:	inc    DWORD PTR [edi]
  40f668:	shr    cl,0xed
  40f66b:	jns    0x40f63a
  40f66d:	jmp    0x818b:0xf7cd6b56
  40f674:	dec    esi
  40f675:	mov    eax,esi
  40f677:	cmp    DWORD PTR [eax],ecx
  40f679:	je     0x40f687
  40f67b:	or     DWORD PTR [ebx+0x8071472],esi
  40f681:	(bad)  
  40f682:	jmp    0x40f677
  40f687:	stc    
  40f688:	mov    dl,0x73
  40f68a:	xorps  xmm7,XMMWORD PTR [edi-0xb16c2]
  40f691:	(bad)  
  40f692:	call   FWORD PTR [ebp+0x14e84228]
  40f698:	pop    ecx
  40f699:	add    al,BYTE PTR [eax]
  40f69b:	out    dx,al
  40f69c:	shr    ch,1
  40f69e:	ja     0x40f64f
  40f6a0:	sbb    DWORD PTR [ebx+eax*4],eax
  40f6a3:	dec    ebx
  40f6a4:	aam    0xd5
  40f6a6:	das    
  40f6a7:	push   ds
  40f6a8:	pop    esi
  40f6a9:	(bad)  
  40f6aa:	(bad)  
  40f6ab:	mov    al,0xf7
  40f6ad:	jge    0x40f6b5
  40f6af:	mov    ds:0xeb0f116b,al
  40f6b4:	or     BYTE PTR [edx+esi*8],bl
  40f6b7:	test   al,0x94
  40f6b9:	sbb    ecx,edi
  40f6bb:	and    DWORD PTR [ecx],ebx
  40f6bd:	xlat   BYTE PTR ds:[ebx]
  40f6be:	push   eax
  40f6bf:	pop    edx
  40f6c0:	iret   
  40f6c1:	pop    es
  40f6c2:	cmovnp ecx,DWORD PTR [ebp+0x9]
  40f6c6:	sldt   WORD PTR [ebx-0x17]
  40f6ca:	sbb    esi,edx
  40f6cc:	jno    0x40f6c1
  40f6ce:	pop    ebx
  40f6cf:	inc    eax
  40f6d0:	dec    esp
  40f6d1:	in     al,dx
  40f6d2:	xor    ecx,DWORD PTR [edx-0x10849ea8]
  40f6d8:	push   ds
  40f6d9:	jle    0x40f6d9
  40f6db:	(bad)  
  40f6dc:	push   eax
  40f6dd:	push   edx
  40f6de:	mov    bh,0xfe
  40f6e0:	out    dx,al
  40f6e1:	iret   
  40f6e2:	mov    ebp,0xfe9e1407
  40f6e7:	mov    ch,BYTE PTR [eax+0x2d]
  40f6ea:	or     esi,edx
  40f6ec:	xor    dl,bh
  40f6ee:	mov    ch,dh
  40f6f0:	sub    DWORD PTR [esi-0x79],ecx
  40f6f3:	shl    DWORD PTR [ecx],1
  40f6f5:	push   edx
  40f6f6:	adc    eax,eax
  40f6f8:	sbb    BYTE PTR [edi-0x7e55eb33],al
  40f6fe:	adc    al,0xf
  40f700:	push   ebx
  40f701:	sub    DWORD PTR [ecx],ebx
  40f703:	repz adc BYTE PTR [ebp-0x3d],ah
  40f707:	inc    esi
  40f708:	fst    QWORD PTR [eax+eax*2+0x7b]
  40f70c:	mov    al,BYTE PTR [ebx]
  40f70e:	xchg   edx,eax
  40f70f:	add    al,dh
  40f711:	push   esp
  40f712:	fnstcw WORD PTR [ecx+eiz*1]
  40f715:	push   ecx
  40f716:	in     eax,0x6e
  40f718:	pop    ebp
  40f719:	jle    0x40f6c1
  40f71b:	push   edi
  40f71c:	jb     0x40f70c
  40f71e:	test   al,0xab
  40f720:	and    DWORD PTR [edi+0x437f4eef],esi
  40f726:	adc    eax,0xe044e1ae
  40f72b:	add    eax,DWORD PTR [eax]
  40f72d:	sar    BYTE PTR [ebp+0x54],1
  40f730:	mov    dh,0xcb
  40f732:	jge    0x40f793
  40f734:	jnp    0x40f70f
  40f736:	cli    
  40f737:	popa   
  40f738:	push   esp
  40f739:	sbb    DWORD PTR [ebx+edx*8],edi
  40f73c:	jmp    DWORD PTR [ecx]
  40f73e:	dec    edx
  40f73f:	mov    esp,0x3d3b1ff7
  40f744:	pop    ebp
  40f745:	sub    eax,DWORD PTR [ebx]
  40f747:	jmp    0xb38b0f4f
  40f74c:	(bad)  
  40f74d:	scas   eax,DWORD PTR es:[edi]
  40f74e:	inc    edx
  40f74f:	test   al,0x5c
  40f751:	lsl    ebp,cx
  40f754:	add    ebp,DWORD PTR [esi-0x1d8000be]
  40f75a:	dec    ecx
  40f75b:	call   0x69291f12
  40f760:	repnz xchg edx,eax
  40f762:	add    ch,BYTE PTR [edx+0x4e]
  40f765:	retf   
  40f766:	iret   
  40f767:	lds    eax,FWORD PTR [edx-0x271209bf]
  40f76d:	jge    0x40f768
  40f76f:	popf   
  40f770:	push   es
  40f771:	mov    ds:0xad1b1791,al
  40f776:	iret   
  40f777:	xor    al,0x1b
  40f779:	shl    al,cl
  40f77b:	arpl   WORD PTR [ebx+0xe],ax
  40f77e:	mov    al,0x69
  40f780:	inc    esi
  40f781:	pushf  
  40f782:	stc    
  40f783:	jne    0x40f78b
  40f785:	call   0xf01d:0x91fcff91
  40f78c:	xor    eax,0x38445cfc
  40f791:	add    dl,ah
  40f793:	xor    al,0x8a
  40f795:	sub    al,0x69
  40f797:	jl     0x40f788
  40f799:	push   0x4d
  40f79b:	std    
  40f79c:	(bad)  
  40f79d:	adc    al,0x58
  40f79f:	mov    al,0xfe
  40f7a1:	call   0xfd55:0x7007b6d7
  40f7a8:	mov    bl,BYTE PTR [ebx*4-0x7a0b0df3]
  40f7af:	jg     0x40f7a6
  40f7b1:	fnstsw WORD PTR [ecx+0x7f]
  40f7b4:	rcl    ebp,1
  40f7b6:	sub    eax,0x6c6cc014
  40f7bb:	(bad)  
  40f7bc:	sbb    dh,bl
  40f7be:	xor    edx,DWORD PTR [edx]
  40f7c0:	movd   DWORD PTR [ebx],mm0
  40f7c3:	sbb    al,0xf3
  40f7c5:	mov    ah,0xb
  40f7c7:	test   al,al
  40f7c9:	jmp    0x40f7ea
  40f7cb:	inc    eax
  40f7cc:	add    DWORD PTR [ecx+0x127b44a7],ebp
  40f7d2:	push   edi
  40f7d3:	add    ebp,DWORD PTR [ebx]
  40f7d5:	sbb    ecx,DWORD PTR [edi-0x1ce07bc5]
  40f7db:	shl    BYTE PTR [bp+si+0x60],0x50
  40f7e0:	xlat   BYTE PTR ds:[ebx]
  40f7e1:	loop   0x40f841
  40f7e3:	lods   al,BYTE PTR ds:[esi]
  40f7e4:	mov    WORD PTR [ebp+0x282247c9],gs
  40f7ea:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ec:	pop    esp
  40f7ed:	sub    esi,DWORD PTR [esi-0x5b1316b8]
  40f7f3:	cmp    al,0x73
  40f7f5:	in     al,dx
  40f7f6:	add    dh,bl
  40f7f8:	jp     0x40f801
  40f7fa:	ins    DWORD PTR es:[edi],dx
  40f7fb:	data16 into 
  40f7fd:	hlt    
  40f7fe:	adc    edx,edi
  40f800:	rol    DWORD PTR [ecx],cl
  40f802:	add    BYTE PTR [edi-0x72143e3c],dl
  40f808:	pop    esi
  40f809:	cmp    ecx,0x83112ab4
  40f80f:	inc    esp
  40f810:	add    eax,0x5e6cb70f
  40f815:	or     ecx,0xffffff91
  40f818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f819:	or     DWORD PTR fs:[esp+eax*2+0x72],0x2
  40f81f:	ja     0x40f7e5
  40f821:	rcl    DWORD PTR [ebp-0x31],0xe2
  40f825:	dec    edi
  40f826:	mov    eax,DWORD PTR [ecx-0x37ba78ba]
  40f82c:	jg     0x40f807
  40f82e:	jg     0x40f871
  40f830:	add    esi,0xffffffff
  40f833:	ins    DWORD PTR es:[edi],dx
  40f834:	rcl    DWORD PTR [ebp+ecx*4-0x70],0x59
  40f839:	push   esp
  40f83a:	push   edi
  40f83b:	fdivr  QWORD PTR [edx+edi*4+0x43c76bff]
  40f842:	or     al,0x34
  40f844:	mov    bh,0x73
  40f846:	cld    
  40f847:	daa    
  40f848:	(bad)  
  40f849:	std    
  40f84a:	adc    eax,0x3e5218
  40f84f:	test   DWORD PTR [eiz*2-0x209d777],0xfdb6775e
  40f85a:	jne    0x40f85c
  40f85c:	std    
  40f85d:	mov    ?,ebp
  40f85f:	adc    eax,0x3e5444
  40f864:	(bad)  
  40f865:	shl    DWORD PTR [ecx],0xc9
  40f868:	and    cl,ch
  40f86a:	or     al,BYTE PTR [edi+0x7d]
  40f86d:	rcl    DWORD PTR [ecx-0x75],0x28
  40f871:	and    BYTE PTR [eax],cl
  40f873:	test   DWORD PTR [ebx-0x137cfcca],edi
  40f879:	mov    dh,0x59
  40f87b:	ret    
  40f87c:	popf   
  40f87d:	or     BYTE PTR [esi+0x4b7555e7],dh
  40f883:	(bad)  
  40f884:	and    BYTE PTR ds:0xeced0c28,dl
  40f88a:	mov    ah,0x55
  40f88c:	and    BYTE PTR [esi],0x9a
  40f88f:	adc    bl,ch
  40f891:	pop    ecx
  40f892:	inc    esp
  40f893:	inc    ebx
  40f894:	mov    bl,0xa0
  40f896:	add    al,BYTE PTR [ebx+0x8d56865]
  40f89c:	retf   
  40f89d:	jo     0x40f894
  40f89f:	ja     0x40f850
  40f8a1:	sbb    DWORD PTR [ebx+ebx*2],eax
  40f8a4:	pop    esi
  40f8a5:	xchg   edi,eax
  40f8a6:	push   es
  40f8a7:	xor    BYTE PTR [ebp+0x16544124],bl
  40f8ad:	jge    0x40f860
  40f8af:	add    al,0xd5
  40f8b2:	add    dl,BYTE PTR [esi+0x20]
  40f8b5:	xchg   esi,eax
  40f8b6:	repnz dec edi
  40f8b8:	sub    ch,BYTE PTR [esi]
  40f8ba:	(bad)  
  40f8bb:	xor    bl,BYTE PTR [ebp-0x22]
  40f8be:	mov    ebp,0x3a0500fb
  40f8c3:	push   esp
  40f8c4:	(bad)  
  40f8c5:	adc    dl,ah
  40f8c7:	push   edx
  40f8c8:	test   BYTE PTR [ebx],dl
  40f8ca:	inc    edx
  40f8cb:	clc    
  40f8cc:	dec    BYTE PTR [eax+0x36735b0d]
  40f8d2:	sbb    BYTE PTR [edx+ebp*8-0x5b],cl
  40f8d6:	aam    0xc5
  40f8d8:	sti    
  40f8d9:	push   ss
  40f8da:	xchg   esi,eax
  40f8db:	cli    
  40f8dc:	mov    BYTE PTR [esp+eiz*8+0x1be45d44],bl
  40f8e3:	mov    dh,0x8a
  40f8e5:	shr    DWORD PTR [ecx-0x4c],0x8a
  40f8e9:	int    0x6f
  40f8eb:	ja     0x40f92a
  40f8ed:	adc    BYTE PTR [esi-0x3245b002],dl
  40f8f3:	cli    
  40f8f4:	mov    bl,dh
  40f8f6:	add    DWORD PTR [edx+0x3a],esi
  40f8f9:	ret    0xd71b
  40f8fc:	dec    ebx
  40f8fd:	mov    ds:0x1f482b78,eax
  40f902:	dec    ebx
  40f903:	int    0xd1
  40f905:	mov    ah,0x7f
  40f907:	mov    eax,ds:0xbd7f99d1
  40f90c:	rcl    DWORD PTR [ebp-0x51a401bb],1
  40f912:	mov    DWORD PTR [ebp+0x7404bd4b],ebp
  40f918:	mov    eax,0xe3910087
  40f91d:	and    al,0x46
  40f91f:	xchg   ebp,eax
  40f920:	jg     0x40f903
  40f922:	inc    esi
  40f923:	sub    eax,0x426500aa
  40f928:	sbb    edi,DWORD PTR [edi+0x36]
  40f92b:	mov    ah,0x69
  40f92d:	loope  0x40f975
  40f92f:	add    ebx,DWORD PTR [edi]
  40f931:	jns    0x40f914
  40f933:	repnz sbb BYTE PTR [ebx-0x57],cl
  40f937:	div    BYTE PTR [ebx-0x3f]
  40f93a:	es pop ebx
  40f93c:	enter  0x2351,0x46
  40f940:	popa   
  40f941:	push   esp
  40f942:	and    DWORD PTR [ebp-0x31],ecx
  40f945:	std    
  40f946:	adc    edx,eax
  40f948:	inc    esp
  40f949:	pop    esp
  40f94a:	push   es
  40f94b:	mov    DWORD PTR ds:0x61faf74b,edi
  40f951:	shl    esi,0x79
  40f954:	fwait
  40f955:	sti    
  40f956:	and    eax,0x48427204
  40f95b:	cmp    ebp,DWORD PTR [ecx]
  40f95d:	dec    ebx
  40f95e:	test   al,0x5a
  40f960:	push   cs
  40f961:	mov    ds,ebx
  40f963:	inc    ebp
  40f964:	xor    bh,0x68
  40f967:	pop    edx
  40f968:	sbb    DWORD PTR [edi-0x4cd6ba35],ecx
  40f96e:	pop    ss
  40f96f:	dec    ebx
  40f970:	jmp    FWORD PTR [ecx+0x66]
  40f973:	inc    esp
  40f974:	je     0x40f953
  40f976:	shl    DWORD PTR [bp+di],1
  40f979:	icebp  
  40f97a:	push   edi
  40f97b:	out    dx,al
  40f97c:	jg     0x40f979
  40f97e:	fiadd  WORD PTR [ebp-0x77]
  40f981:	rcr    DWORD PTR ds:0x73017d44,1
  40f987:	inc    ebp
  40f988:	push   ebp
  40f989:	mov    BYTE PTR [eax],0x5a
  40f98c:	and    DWORD PTR [eax],edx
  40f98e:	push   ecx
  40f98f:	loopne 0x40f9d7
  40f991:	(bad)  
  40f992:	call   0xe942256d
  40f997:	sahf   
  40f998:	jnp    0x40f99f
  40f99a:	ins    BYTE PTR es:[edi],dx
  40f99b:	(bad)  
  40f99d:	adc    BYTE PTR [ecx],bh
  40f99f:	loopne 0x40f968
  40f9a1:	add    edx,DWORD PTR [esi+0x2911cd4d]
  40f9a7:	cdq    
  40f9a8:	jnp    0x40f9ef
  40f9aa:	icebp  
  40f9ab:	cs add ch,bl
  40f9ae:	jmp    0x40f958
  40f9b0:	inc    edx
  40f9b1:	pop    esi
  40f9b2:	stos   DWORD PTR es:[edi],eax
  40f9b3:	cmp    al,BYTE PTR [ebp-0x17]
  40f9b6:	mov    ebp,0xbf7803c
  40f9bb:	dec    ebp
  40f9bc:	repnz gs push 0xffffffd6
  40f9c0:	sbb    al,0x74
  40f9c2:	loop   0x40f9c0
  40f9c4:	jg     0x40f9bd
  40f9c6:	lods   eax,DWORD PTR ds:[esi]
  40f9c7:	loop   0x40f9c6
  40f9c9:	gs ins BYTE PTR es:[edi],dx
  40f9cb:	pop    esi
  40f9cc:	into   
  40f9cd:	or     bl,dl
  40f9cf:	cmp    ch,BYTE PTR [ebp-0x7e5f9f9b]
  40f9d5:	shr    ebx,0xfc
  40f9d8:	ja     0x40f9da
  40f9da:	(bad)
  40f9de:	sub    ebx,DWORD PTR [eax-0x28143f7f]
  40f9e4:	mov    eax,DWORD PTR [eax]
  40f9e6:	xchg   DWORD PTR ds:0x90007485,ebx
  40f9ec:	in     al,dx
  40f9ed:	mov    edi,0xff4d0066
  40f9f2:	ret    0x8b
  40f9f5:	in     eax,0x3
  40f9f7:	jmp    0x40f9b8
  40f9f9:	(bad)  
  40f9fa:	(bad)  
  40f9fb:	cmp    ebp,DWORD PTR [esi-0x4ec3f8cc]
  40fa01:	xor    al,0x3
  40fa03:	inc    ecx
  40fa04:	scas   eax,DWORD PTR es:[edi]
  40fa05:	or     BYTE PTR [ecx-0xf],dh
  40fa08:	(bad)  
  40fa09:	mov    edi,0x2984429
  40fa0e:	cmp    ecx,esi
  40fa10:	enter  0x8b52,0x51
  40fa14:	test   edi,esi
  40fa16:	aad    0x73
  40fa18:	push   eax
  40fa19:	xor    BYTE PTR [edi],0xd
  40fa1c:	mov    DWORD PTR [ecx],eax
  40fa1e:	cmp    BYTE PTR [edx],0x6e
  40fa21:	xor    eax,0x3ffe8b00
  40fa26:	xchg   DWORD PTR [edi],ecx
  40fa28:	push   es
  40fa29:	add    eax,DWORD PTR [eax]
  40fa2b:	push   ebp
  40fa2c:	iret   
  40fa2d:	stos   BYTE PTR es:[edi],al
  40fa2e:	sub    esp,0x8b548f08
  40fa34:	mov    ch,0xb0
  40fa36:	inc    esp
  40fa37:	sbb    al,0x54
  40fa39:	xchg   ebx,eax
  40fa3a:	jb     0x40fa8e
  40fa3c:	dec    esi
  40fa3d:	and    BYTE PTR [esi-0x73],dl
  40fa40:	stc    
  40fa41:	cmovg  ebp,eax
  40fa44:	inc    esi
  40fa45:	jbe    0x40fa44
  40fa47:	inc    DWORD PTR [edi+0x7efea23]
  40fa4d:	pop    ss
  40fa4e:	xor    bh,bh
  40fa50:	popf   
  40fa51:	cwde   
  40fa52:	push   cs
  40fa53:	jbe    0x40fa55
  40fa55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa56:	lds    eax,FWORD PTR [esp+ecx*1+0x7]
  40fa5a:	ret    
  40fa5b:	xchg   DWORD PTR [ebp+0x60],eax
  40fa5e:	lds    eax,FWORD PTR [eax+edx*1-0x31]
  40fa62:	ret    0x4d8b
  40fa65:	popf   
  40fa66:	or     DWORD PTR [ebx+0x44],edi
  40fa69:	mov    ebp,0xcafe8a01
  40fa6e:	cld    
  40fa6f:	jg     0x40fa30
  40fa71:	dec    eax
  40fa72:	push   ebx
  40fa73:	mov    edi,0xd4293b3a
  40fa78:	frstor [esp+esi*2]
  40fa7b:	out    dx,al
  40fa7c:	mov    BYTE PTR [ebx+0x1],cl
  40fa7f:	pop    ebp
  40fa80:	inc    eax
  40fa81:	push   ss
  40fa82:	pop    ds
  40fa83:	pop    esp
  40fa84:	add    ah,BYTE PTR [edx-0x1e]
  40fa87:	enter  0x2413,0x1b
  40fa8b:	in     al,dx
  40fa8c:	scas   eax,DWORD PTR es:[edi]
  40fa8d:	pushf  
  40fa8e:	xor    BYTE PTR [esi],cl
  40fa90:	xor    ebx,DWORD PTR [ebp+0x48]
  40fa93:	inc    edi
  40fa94:	mov    bl,ah
  40fa96:	and    eax,0x526d4479
  40fa9b:	rol    BYTE PTR [edi],0x9a
  40fa9e:	aad    0x45
  40faa0:	jmp    DWORD PTR [edx+0x59]
  40faa3:	adc    ecx,ecx
  40faa5:	fsubr  st(2),st
  40faa7:	mov    ch,0xf3
  40faa9:	and    al,0xe6
  40faab:	dec    ebx
  40faac:	mov    bl,bl
  40faae:	push   ebp
  40faaf:	jl     0x40facc
  40fab1:	xchg   ebp,eax
  40fab2:	aas    
  40fab3:	call   0xc8d1892c
  40fab8:	verr   WORD PTR [edx+0x2aff35de]
  40fabf:	pop    ecx
  40fac0:	jns    0x40fb3f
  40fac2:	test   edi,esp
  40fac4:	inc    ebx
  40fac5:	pop    esi
  40fac6:	jnp    0x40fa58
  40fac8:	cmp    edx,eax
  40faca:	xlat   BYTE PTR ds:[ebx]
  40facb:	xchg   ebx,eax
  40facc:	add    DWORD PTR [edi],ecx
  40face:	and    DWORD PTR [ebp+0x9d0002],esi
  40fad4:	retf   0x710f
  40fad7:	sar    DWORD PTR [ebx+0x4d],0xa1
  40fadb:	fucomip st,st(6)
  40fadd:	push   cs
  40fade:	push   ss
  40fadf:	add    dh,BYTE PTR [edi+0x1dad1ae7]
  40fae5:	push   ecx
  40fae6:	(bad)  
  40fae8:	pushf  
  40fae9:	(bad)
  40faec:	loopne 0x40fabd
  40faee:	test   eax,0x4288b175
  40faf3:	dec    ecx
  40faf4:	(bad)  
  40faf6:	lahf   
  40faf7:	sub    BYTE PTR [ecx],0x23
  40fafa:	and    BYTE PTR [eax-0x175a7cd3],bh
  40fb00:	pop    ebp
  40fb01:	add    DWORD PTR ds:0xc15b0840,ebx
  40fb07:	mov    bh,BYTE PTR [ebx]
  40fb09:	inc    edi
  40fb0a:	xchg   DWORD PTR [eax],esp
  40fb0c:	fiadd  WORD PTR [ebp-0xe3a2ca1]
  40fb12:	adc    dl,BYTE PTR [edi]
  40fb14:	sub    DWORD PTR [edi+eiz*1],eax
  40fb17:	pop    ebx
  40fb18:	in     eax,0x85
  40fb1a:	fld    DWORD PTR [ecx+0x18]
  40fb1d:	inc    edi
  40fb1e:	add    BYTE PTR [ecx+0x62c3fc92],dl
  40fb24:	mov    ah,BYTE PTR [ebx]
  40fb26:	inc    edi
  40fb27:	daa    
  40fb28:	enter  0x7a98,0xe9
  40fb2c:	inc    ecx
  40fb2d:	shr    BYTE PTR [ecx],cl
  40fb2f:	into   
  40fb30:	loopne 0x40fbb0
  40fb32:	mov    esi,0x7af504a6
  40fb37:	mov    edx,0x7ed0e23d
  40fb3c:	xor    BYTE PTR [edx-0x7],0xb1
  40fb40:	and    DWORD PTR [edx-0x47],esi
  40fb43:	sub    bh,dh
  40fb45:	scas   al,BYTE PTR es:[edi]
  40fb46:	rep stos DWORD PTR es:[edi],eax
  40fb48:	test   ebx,ebx
  40fb4a:	inc    esi
  40fb4b:	adc    eax,DWORD PTR [edx+0x61]
  40fb4e:	mov    dh,0x96
  40fb50:	cli    
  40fb51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb52:	or     al,0x9c
  40fb54:	adc    DWORD PTR [esp+ebx*8-0x5],esp
  40fb58:	inc    ecx
  40fb59:	push   DWORD PTR ds:0x31444132
  40fb5f:	inc    esi
  40fb60:	lock jg 0x40fb86
  40fb63:	out    0x10,eax
  40fb65:	test   eax,eax
  40fb67:	arpl   WORD PTR [eax-0x2],ax
  40fb6a:	imul   esp,DWORD PTR [esi+0xe],0x4111640f
  40fb71:	inc    BYTE PTR [esi]
  40fb73:	inc    esi
  40fb74:	into   
  40fb75:	repz ret 0x9f0
  40fb79:	punpckhdq mm3,mm5
  40fb7c:	inc    eax
  40fb7d:	(bad)  
  40fb7e:	out    dx,al
  40fb7f:	daa    
  40fb80:	iret   
  40fb81:	add    esp,DWORD PTR [ecx]
  40fb83:	add    ch,ch
  40fb85:	add    al,BYTE PTR [ecx]
  40fb87:	out    dx,al
  40fb88:	sbb    eax,0xdbd6fef8
  40fb8d:	add    edi,edi
  40fb8f:	and    al,0xed
  40fb91:	enter  0x2cfe,0xd1
  40fb95:	add    edi,edi
  40fb97:	and    al,0xcd
  40fb99:	mov    al,BYTE PTR [ecx+edi*4-0x59]
  40fb9d:	enter  0xde07,0x1d
  40fba1:	or     eax,0xf4dba6ff
  40fba6:	mov    edi,0x11d1897
  40fbab:	pusha  
  40fbac:	pop    eax
  40fbad:	sbb    DWORD PTR [ebp+edx*1-0x6a],esi
  40fbb1:	ror    BYTE PTR [edi],0xf6
  40fbb4:	mov    dl,0x81
  40fbb6:	call   0xfe81dfaa
  40fbbb:	(bad)  
  40fbbc:	clc    
  40fbbd:	or     BYTE PTR [edx+0x558da01f],cl
  40fbc3:	in     eax,dx
  40fbc4:	pop    esi
  40fbc5:	cld    
  40fbc6:	ret    0x1bda
  40fbc9:	stc    
  40fbca:	or     ebp,ebx
  40fbcc:	loop   0x40fc04
  40fbce:	cmp    ch,BYTE PTR [edx]
  40fbd0:	in     eax,dx
  40fbd1:	or     BYTE PTR [ebx-0x18cace00],cl
  40fbd7:	mov    ah,0xba
  40fbd9:	enter  0x6afd,0xa4
  40fbdd:	jo     0x40fb6a
  40fbdf:	dec    ebp
  40fbe0:	test   BYTE PTR [esi-0x1a],dh
  40fbe3:	stos   DWORD PTR es:[edi],eax
  40fbe4:	jl     0x40fbae
  40fbe6:	std    
  40fbe7:	add    DWORD PTR [eax],eax
  40fbe9:	add    ecx,esi
  40fbeb:	daa    
  40fbec:	inc    ebp
  40fbed:	mov    WORD PTR [esi+0x1e9f187c],?
  40fbf3:	mov    eax,DWORD PTR [esi-0x38]
  40fbf6:	add    eax,edi
  40fbf8:	mov    DWORD PTR [ecx],eax
  40fbfa:	jmp    0x1c154288
  40fbff:	(bad)  
  40fc00:	lea    ecx,[ecx]
  40fc02:	cmc    
  40fc03:	xchg   DWORD PTR [ebp-0x2c],eax
  40fc06:	frstor [edi]
  40fc08:	(bad)  
  40fc09:	jnp    0x40fbd1
  40fc0b:	mov    DWORD PTR [ebp+0x5c],ecx
  40fc0e:	add    cl,bh
  40fc10:	mov    DWORD PTR [edx-0x743f7dd2],ebp
  40fc16:	shl    DWORD PTR [esi-0x2],0x3b
  40fc1a:	mov    BYTE PTR [ebp+0x3b],0xaa
  40fc1e:	ss jo  0x40fbf3
  40fc21:	pop    ebp
  40fc22:	(bad)  
  40fc23:	cld    
  40fc24:	(bad)  
  40fc25:	cmp    eax,DWORD PTR [edi-0x19]
  40fc28:	lahf   
  40fc29:	cmp    al,dh
  40fc2b:	std    
  40fc2c:	push   ebp
  40fc2d:	mov    edi,0x1bf881da
  40fc32:	push   eax
  40fc33:	jnp    0x682736c2
  40fc39:	sub    eax,esi
  40fc3b:	std    
  40fc3c:	sub    DWORD PTR [ebp+eax*8-0x3c18fb8d],0xffffffe9
  40fc44:	xor    al,0xe7
  40fc46:	adc    bl,bl
  40fc48:	push   ebx
  40fc49:	push   edi
  40fc4a:	(bad)  
  40fc4b:	jae    0x40fc5d
  40fc4d:	add    BYTE PTR [ebp-0x6f014d81],bl
  40fc53:	pop    ebp
  40fc54:	scas   eax,DWORD PTR es:[edi]
  40fc55:	dec    BYTE PTR [eax+0x6d144331]
  40fc5b:	pop    ebx
  40fc5c:	ret    0xb7ff
  40fc5f:	in     al,dx
  40fc60:	lds    edx,FWORD PTR [ecx]
  40fc62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc63:	mov    ?,edx
  40fc65:	jge    0x40fbf5
  40fc67:	mov    dh,0xf7
  40fc69:	das    
  40fc6a:	xchg   ebp,eax
  40fc6b:	inc    edx
  40fc6c:	inc    ebx
  40fc6d:	jae    0x40fc15
  40fc6f:	push   esp
  40fc70:	mov    ebp,0xf25490f
  40fc75:	shl    BYTE PTR [esi+0x56187a2b],0x9e
  40fc7c:	inc    eax
  40fc7d:	or     ebx,DWORD PTR [ebp+0x16eb779e]
  40fc83:	addr16 repnz push ebp
  40fc86:	dec    edx
  40fc87:	rol    DWORD PTR [ebx],cl
  40fc89:	call   DWORD PTR [eax]
  40fc8b:	psadbw mm2,QWORD PTR cs:[edx+0x25e7fbde]
  40fc93:	push   eax
  40fc94:	inc    ebx
  40fc95:	(bad)  
  40fc96:	push   ss
  40fc97:	inc    ecx
  40fc98:	jge    0x40fc98
  40fc9a:	cli    
  40fc9b:	and    eax,0x3386c00f
  40fca0:	mov    ebx,0x8bdb7556
  40fca5:	(bad)  
  40fca6:	bound  esi,QWORD PTR [edx+edx*2+0x55155384]
  40fcad:	mov    bl,al
  40fcaf:	cmp    DWORD PTR [edi+0x164a0056],ebp
  40fcb5:	clc    
  40fcb6:	mov    edx,fs
  40fcb8:	mov    BYTE PTR [ebx+0x74],al
  40fcbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcbc:	xchg   ecx,eax
  40fcbd:	aam    0xfe
  40fcbf:	xor    bh,BYTE PTR [eax+0x23b1c307]
  40fcc5:	lods   al,BYTE PTR ds:[esi]
  40fcc6:	out    0x12,eax
  40fcc8:	add    bl,BYTE PTR [esi+0x28f31b44]
  40fcce:	pop    eax
  40fccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd0:	mov    ebp,DWORD PTR [ebx-0x2bbdde11]
  40fcd6:	add    DWORD PTR [edx+ebx*1],edx
  40fcd9:	jb     0x40fd18
  40fcdb:	push   edi
  40fcdc:	fistp  WORD PTR [esi-0x16ee235a]
  40fce2:	js     0x40fd42
  40fce4:	out    0xdc,al
  40fce6:	js     0x40fd3e
  40fce8:	out    0xf0,al
  40fcea:	lods   eax,DWORD PTR ds:[esi]
  40fceb:	daa    
  40fcec:	mov    dh,0xc4
  40fcee:	sti    
  40fcef:	shl    edi,cl
  40fcf1:	imul   eax,DWORD PTR [ebx-0x65],0x934269d2
  40fcf8:	sub    ch,BYTE PTR [edx+ebx*2-0x3a97c145]
  40fcff:	sahf   
  40fd00:	add    dl,BYTE PTR [edi+0x10379cce]
  40fd06:	inc    eax
  40fd07:	dec    ecx
  40fd08:	mov    edx,esp
  40fd0a:	aad    0xed
  40fd0c:	mov    esp,DWORD PTR [ebx]
  40fd0e:	cmp    al,0x21
  40fd10:	enter  0xd4d0,0x2
  40fd14:	xor    al,0xc5
  40fd16:	les    eax,FWORD PTR [eax]
  40fd18:	and    BYTE PTR [esi+0x29d05a1],0xbe
  40fd1f:	mov    ecx,0x402b44a6
  40fd24:	popf   
  40fd25:	cmp    eax,0x58750c33
  40fd2a:	clc    
  40fd2b:	add    eax,0x18a4819d
  40fd30:	fs inc ecx
  40fd32:	loopne 0x40fd37
  40fd34:	mov    bh,0x16
  40fd36:	pusha  
  40fd37:	or     dl,BYTE PTR [eax]
  40fd39:	(bad)
  40fd3c:	cmp    cl,dh
  40fd3e:	jge    0x40fd59
  40fd40:	imul   edx,DWORD PTR [eax+eax*1],0xc381a129
  40fd47:	fisttp QWORD PTR ds:0x5fb917c8
  40fd4d:	push   ss
  40fd4e:	hlt    
  40fd4f:	sti    
  40fd50:	fidivr WORD PTR ds:0xd6622f89
  40fd56:	mov    bh,BYTE PTR ds:0x6a0bc712
  40fd5c:	lods   eax,DWORD PTR ds:[esi]
  40fd5d:	adc    eax,0x4d596a53
  40fd62:	push   ebp
  40fd63:	sahf   
  40fd64:	popf   
  40fd65:	bound  eax,QWORD PTR [eax]
  40fd67:	jmp    0xbc80b0a
  40fd6c:	mov    eax,ds:0xe4720002
  40fd71:	add    eax,0xa8952983
  40fd76:	adc    edi,DWORD PTR [ecx+0x11f3c711]
  40fd7c:	add    BYTE PTR [edx],bh
  40fd7e:	sub    bh,dh
  40fd80:	dec    dh
  40fd82:	cmp    al,0x14
  40fd84:	mov    ch,0x84
  40fd86:	ret    0x69ff
  40fd89:	push   ebp
  40fd8a:	or     DWORD PTR [ebp-0x41795057],eax
  40fd90:	jmp    0xc7290033
  40fd95:	lock cmp al,0xfe
  40fd98:	pusha  
  40fd99:	push   ebp
  40fd9a:	xor    eax,0xf0ad2c8c
  40fd9f:	cmc    
  40fda0:	sbb    DWORD PTR [eax],esp
  40fda2:	mov    dh,0xef
  40fda4:	rol    DWORD PTR [ebx+0x11e8ffa6],0xc6
  40fdab:	sti    
  40fdac:	loop   0x40fd92
  40fdae:	mov    dh,0x3
  40fdb0:	fcmovu st,st(7)
  40fdb2:	sub    BYTE PTR [ebx+0x62],dh
  40fdb5:	pop    ebp
  40fdb6:	sub    DWORD PTR [edx+0x2b0908e],eax
  40fdbc:	add    BYTE PTR [esi-0x4dc4a0f4],cl
  40fdc2:	jnp    0x40fdf0
  40fdc4:	lea    ecx,[ecx+edx*1+0x7ab3146a]
  40fdcb:	repnz push ebx
  40fdcd:	sbb    DWORD PTR [edx],0x3c
  40fdd0:	push   ss
  40fdd1:	inc    esp
  40fdd2:	add    DWORD PTR [ebx-0x4175ff3c],eax
  40fdd8:	je     0x40fdbb
  40fdda:	dec    edx
  40fddb:	jg     0x40fda0
  40fddd:	mov    edi,0x6
  40fde2:	lahf   
  40fde3:	stc    
  40fde4:	jo     0x40fdc8
  40fde6:	pop    edi
  40fde7:	or     al,0x69
  40fde9:	test   BYTE PTR [edi-0x38fffffa],0x79
  40fdf0:	cli    
  40fdf1:	jne    0x40fe28
  40fdf3:	xor    al,0xd0
  40fdf5:	test   DWORD PTR [ebx-0x674d08b],esi
  40fdfb:	cld    
  40fdfc:	add    eax,0x47680c8
  40fe02:	(bad)  
  40fe03:	xchg   ecx,eax
  40fe04:	outs   dx,BYTE PTR ds:[esi]
  40fe05:	cld    
  40fe06:	sub    ebx,DWORD PTR [ebp-0x77]
  40fe09:	or     BYTE PTR [ecx],bh
  40fe0b:	into   
  40fe0c:	jb     0x40fe20
  40fe0e:	mov    ebp,0x8176f64b
  40fe13:	(bad)  
  40fe14:	pop    ebx
  40fe15:	clc    
  40fe16:	lahf   
  40fe17:	xlat   BYTE PTR ds:[ebx]
  40fe18:	jg     0x40fe15
  40fe1a:	hlt    
  40fe1b:	mov    ebx,DWORD PTR [ecx+0x0]
  40fe1e:	mov    bh,0x4a
  40fe20:	inc    eax
  40fe21:	add    eax,0x3f
  40fe26:	outs   dx,DWORD PTR ds:[esi]
  40fe27:	(bad)  [eax-0x2b]
  40fe2a:	jmp    DWORD PTR [ecx+0x5fdb67]
  40fe30:	add    BYTE PTR [eax],al
  40fe32:	ror    DWORD PTR [ebp+0x299d01d9],0x2
  40fe39:	(bad)  
  40fe3a:	enter  0x2b8d,0x5d
  40fe3e:	lock test BYTE PTR [eax-0x7d],al
  40fe42:	pop    ebp
  40fe43:	aaa    
  40fe44:	sbb    edi,edi
  40fe46:	add    BYTE PTR [eax-0x14ecd44b],dh
  40fe4c:	lods   al,BYTE PTR ds:[esi]
  40fe4d:	inc    eax
  40fe4e:	mov    WORD PTR [eax+0x71f72bd9],ss
  40fe54:	sub    DWORD PTR [edx],eax
  40fe56:	xor    bl,ch
  40fe58:	je     0x40fe3a
  40fe5a:	pop    edx
  40fe5b:	aam    0xe7
  40fe5d:	verr   WORD PTR [esi]
  40fe60:	outs   dx,DWORD PTR ds:[esi]
  40fe61:	mov    WORD PTR ds:[ecx-0x399838d8],gs
  40fe68:	sub    al,BYTE PTR [edx]
  40fe6a:	add    BYTE PTR [edi+0x29],dh
  40fe6d:	fdivr  st,st(6)
  40fe6f:	mov    al,0x5d
  40fe71:	sbb    BYTE PTR [eax-0x63],al
  40fe74:	sub    al,0x78
  40fe76:	inc    esp
  40fe77:	lods   eax,DWORD PTR ds:[esi]
  40fe78:	test   al,0x47
  40fe7a:	or     ecx,edx
  40fe7c:	icebp  
  40fe7d:	sbb    al,0xc0
  40fe7f:	jle    0x40feef
  40fe81:	cmp    al,ch
  40fe83:	pop    ebx
  40fe84:	xor    DWORD PTR [edx],eax
  40fe86:	mov    DWORD PTR [ebx+0x2d],esp
  40fe89:	mov    eax,DWORD PTR [ecx+edx*4-0x67]
  40fe8d:	aas    
  40fe8e:	je     0x40fe35
  40fe90:	retf   
  40fe91:	mov    al,BYTE PTR [ebp-0x5c]
  40fe94:	test   al,0x48
  40fe96:	or     dh,bl
  40fe98:	push   esp
  40fe99:	adc    eax,0x3e9ab30
  40fe9e:	and    DWORD PTR [ecx+0x35],0xffffff83
  40fea2:	(bad)  
  40fea3:	pushf  
  40fea4:	repz (bad) 
  40fea6:	out    0x10,eax
  40fea8:	inc    ecx
  40fea9:	aas    
  40feaa:	inc    BYTE PTR [eax]
  40feac:	push   ss
  40fead:	idiv   BYTE PTR [edi]
  40feaf:	push   esi
  40feb0:	repz add dl,BYTE PTR [ecx-0x62c4af26]
  40feb7:	test   BYTE PTR [ebx+0x8],cl
  40feba:	pop    ds
  40febb:	jmp    0x40fe72
  40febd:	cmp    esi,DWORD PTR [ecx+0x13029d02]
  40fec3:	sbb    BYTE PTR [edx],dh
  40fec5:	mov    ch,0x74
  40fec7:	mov    ds,WORD PTR [esi]
  40fec9:	repz mov esp,0x183b2341
  40fecf:	inc    ecx
  40fed0:	mov    cl,0xfe
  40fed2:	inc    bl
  40fed4:	adc    al,BYTE PTR [eax+0x42200f24]
  40feda:	in     eax,0x96
  40fedc:	fbld   TBYTE PTR [edi+0x377ae0e2]
  40fee2:	out    0xb6,eax
  40fee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee5:	cmp    esi,DWORD PTR [ebx+0x4043173f]
  40feeb:	in     al,dx
  40feec:	jle    0x40fef0
  40feee:	jmp    0x9b7bf180
  40fef3:	aas    
  40fef4:	mov    edx,0xcb4053a6
  40fef9:	mov    WORD PTR [ebx-0x533545cd],ds
  40feff:	add    ebx,DWORD PTR [ebp+0x4c2a2988]
  40ff05:	cmp    edi,ebp
  40ff07:	aas    
  40ff08:	push   ecx
  40ff09:	xchg   DWORD PTR [esp+eax*4],eax
  40ff0c:	mov    dh,0x11
  40ff0e:	call   0x402b:0x87f300d9
  40ff15:	loop   0x40ff41
  40ff17:	mov    al,ds:0x613a8aa3
  40ff1c:	cmp    al,0x15
  40ff1e:	mov    eax,0xb07b89d4
  40ff23:	in     al,dx
  40ff24:	icebp  
  40ff25:	xor    ch,BYTE PTR [esi]
  40ff27:	push   edx
  40ff28:	mov    esi,ecx
  40ff2a:	jmp    DWORD PTR ss:[ecx+0x54]
  40ff2e:	or     dl,BYTE PTR [esi+0x16]
  40ff31:	mov    DWORD PTR [ebp-0x4],ebx
  40ff34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff35:	xchg   edx,eax
  40ff36:	test   ch,bh
  40ff38:	in     eax,0xc
  40ff3a:	add    eax,0x4060ed6a
  40ff3f:	inc    esp
  40ff40:	cli    
  40ff41:	sahf   
  40ff42:	jg     0x40ff39
  40ff44:	std    
  40ff45:	pop    edx
  40ff46:	xchg   DWORD PTR [esi-0xe],eax
  40ff49:	sbb    DWORD PTR [edi+0x3de460f7],edi
  40ff4f:	push   cs
  40ff50:	ss loop 0x40ff5d
  40ff53:	mov    esi,DWORD PTR [edx+eiz*4-0x392b012e]
  40ff5a:	stos   DWORD PTR es:[edi],eax
  40ff5b:	inc    edx
  40ff5d:	cwde   
  40ff5e:	sub    ch,BYTE PTR ds:0x8b029ce2
  40ff64:	cmp    DWORD PTR [eax+esi*1],esp
  40ff67:	jae    0x40ff46
  40ff69:	pop    ss
  40ff6a:	mov    edi,0x8ce16207
  40ff6f:	fld    QWORD PTR [ecx-0x6b]
  40ff72:	daa    
  40ff73:	(bad)  
  40ff74:	call   0x73bb1979
  40ff79:	in     eax,0x60
  40ff7b:	mov    esi,0x3f76e812
  40ff80:	stos   DWORD PTR es:[edi],eax
  40ff81:	push   cs
  40ff82:	jp     0x40ff10
  40ff84:	jl     0x40ff83
  40ff86:	jae    0x40ff4e
  40ff88:	sti    
  40ff89:	je     0x40ffe0
  40ff8b:	shl    bh,1
  40ff8d:	pop    ds
  40ff8e:	and    eax,0x6463fe38
  40ff93:	adc    al,0x5f
  40ff95:	inc    edi
  40ff96:	jbe    0x40ffe2
  40ff98:	shr    ebp,0x9e
  40ff9b:	iret   
  40ff9c:	mov    al,ch
  40ff9e:	imul   edx,edx,0x8c523752
  40ffa4:	jns    0x40ffa6
  40ffa6:	push   esp
  40ffa7:	mov    ebp,?
  40ffa9:	test   DWORD PTR [edx],0xb68df61c
  40ffaf:	adc    BYTE PTR [ebx],ah
  40ffb1:	lock les esi,FWORD PTR [edi+0x1]
  40ffb5:	xor    cl,bh
  40ffb7:	retf   
  40ffb8:	or     eax,0xe6c28194
  40ffbd:	out    dx,eax
  40ffbe:	add    al,0xfe
  40ffc0:	jmp    DWORD PTR [ebp-0x39]
  40ffc3:	std    
  40ffc4:	cs jae 0x410007
  40ffc7:	xor    edi,DWORD PTR [esi-0x2746e15]
  40ffcd:	jne    0x40ffff
  40ffcf:	xor    al,0xd9
  40ffd1:	jmp    0x40ffda
  40ffd3:	xchg   edx,eax
  40ffd4:	pop    ebp
  40ffd5:	sub    al,0x8f
  40ffd7:	retf   
  40ffd8:	out    0xd3,al
  40ffda:	add    ah,al
  40ffdc:	(bad)  
  40ffdd:	dec    DWORD PTR [esi]
  40ffdf:	and    edi,ebp
  40ffe1:	push   ecx
  40ffe2:	mov    eax,ebx
  40ffe4:	in     eax,dx
  40ffe5:	pusha  
  40ffe6:	lds    ebx,FWORD PTR [ebx-0x8]
  40ffe9:	add    eax,0x2a
  40ffec:	fdiv   st(5),st
  40ffee:	jne    0x40ff98
  40fff0:	push   eax
  40fff1:	push   ecx
  40fff2:	call   0x3ec1d5
  40fff7:	inc    esp
  40fff8:	inc    edx
  40fff9:	cli    
  40fffa:	add    DWORD PTR [ecx],esi
  40fffc:	and    ecx,DWORD PTR [eax-0x417f4aba]
  410002:	je     0x40ffb3
  410004:	test   dh,0x57
  410007:	stos   DWORD PTR es:[edi],eax
  410008:	scas   al,BYTE PTR es:[edi]
  410009:	mov    esi,0x44920453
  41000e:	add    al,0x4
  410010:	or     BYTE PTR [esi-0x76ab78ba],dh
  410016:	inc    ebp
  410017:	mov    edi,?
  410019:	cs call 0x3fe617
  41001f:	popf   
  410020:	cdq    
  410021:	add    bl,BYTE PTR [edi-0x25]
  410024:	hlt    
  410025:	dec    edx
  410026:	rcr    DWORD PTR [ecx+0x798ad529],0xab
  41002d:	das    
  41002e:	stos   DWORD PTR es:[edi],eax
  41002f:	sahf   
  410030:	sub    DWORD PTR [edx],eax
  410032:	push   ebx
  410033:	repz adc BYTE PTR [edi+0x2bfa4d44],cl
  41003a:	cdq    
  41003b:	mov    edi,0x890229
  410040:	fdivr  DWORD PTR [ebp-0x7a]
  410043:	mov    edi,0xbff020b0
  410048:	inc    esp
  410049:	inc    eax
  41004a:	push   es
  41004b:	add    BYTE PTR [ebp+0x18efb6b4],bl
  410051:	mov    eax,0x60260db7
  410056:	sub    ebx,esp
  410058:	dec    esi
  410059:	mov    eax,ds:0xbd60883c
  41005e:	xchg   BYTE PTR [edi+0x743b2388],bh
  410064:	or     edx,eax
  410066:	add    dh,BYTE PTR [edx+esi*8+0x1ed928c0]
  41006d:	aas    
  41006e:	pop    esi
  41006f:	jmp    DWORD PTR [edx+0x6e]
  410072:	adc    al,BYTE PTR [eax]
  410074:	push   ecx
  410075:	nop
  410076:	jg     0x410075
  410078:	pushf  
  410079:	xchg   edi,eax
  41007a:	ror    BYTE PTR [edx+0x5e8d3148],1
  410080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410081:	jl     0x4100be
  410083:	adc    al,0xc9
  410085:	cmp    eax,edx
  410087:	call   FWORD PTR [edi]
  410089:	xchg   DWORD PTR [edx],edi
  41008b:	jmp    DWORD PTR [ecx]
  41008d:	xor    BYTE PTR [esi+0x2eb71632],dh
  410093:	and    BYTE PTR [edx+0x1d],0x7f
  410097:	lds    esp,FWORD PTR [edx-0xce7acfe]
  41009d:	iret   
  41009e:	fst    QWORD PTR [esi]
  4100a0:	rcl    DWORD PTR [eax],0x29
  4100a3:	add    al,0x0
  4100a5:	push   ds
  4100a6:	fadd   QWORD PTR ds:[esi+0x3cd9ae32]
  4100ad:	loope  0x4100e9
  4100af:	jno    0x410077
  4100b1:	push   0xffffff81
  4100b3:	scas   al,BYTE PTR es:[edi]
  4100b4:	pop    eax
  4100b5:	popf   
  4100b6:	add    ch,cl
  4100b8:	clc    
  4100b9:	fnstenv [edx]
  4100bb:	sbb    bl,BYTE PTR [esi+0x37]
  4100be:	add    BYTE PTR [edx-0x3a],dh
  4100c1:	dec    edx
  4100c2:	mov    DWORD PTR [ebx],ebp
  4100c4:	pusha  
  4100c5:	iret   
  4100c6:	aaa    
  4100c7:	repz xor ecx,DWORD PTR [edx+eax*8+0x32b188e8]
  4100cf:	mov    ecx,0xa4aacf58
  4100d4:	add    ebx,DWORD PTR [ebp+0x598f1a02]
  4100da:	mov    dl,BYTE PTR [eax-0x6d]
  4100dd:	fiadd  DWORD PTR [eax]
  4100df:	jmp    0x5f4443d4
  4100e4:	sti    
  4100e5:	popa   
  4100e6:	adc    ah,BYTE PTR [edi]
  4100e8:	(bad)  
  4100e9:	and    eax,0x2a96f5fe
  4100ee:	mov    bl,BYTE PTR [ebx+0x18ad153c]
  4100f4:	mov    bh,BYTE PTR [ecx+0x22]
  4100f7:	test   al,0xc
  4100f9:	add    al,BYTE PTR [eax+0x6f]
  4100fc:	(bad)  
  4100fd:	repnz cli 
  4100ff:	sub    DWORD PTR [ebx+ebx*1],ecx
  410102:	scas   al,BYTE PTR es:[edi]
  410103:	jmp    0xa3cc9e0b
  410108:	pop    edi
  410109:	add    BYTE PTR [edi-0x4cae46bd],bl
  41010f:	lods   al,BYTE PTR ds:[esi]
  410110:	clc    
  410111:	out    dx,eax
  410112:	loop   0x4100bf
  410114:	(bad)  
  410115:	out    dx,al
  410116:	inc    eax
  410117:	mov    eax,DWORD PTR [ebp+esi*1+0x77]
  41011b:	xchg   DWORD PTR [edi+ebx*4-0x2e],edi
  41011f:	push   0x358a9265
  410124:	mov    bl,bl
  410126:	dec    eax
  410127:	xor    dl,bl
  410129:	call   0x3c4403cc
  41012e:	mov    ch,0x8a
  410130:	push   esp
  410131:	mov    ch,0x96
  410133:	ins    DWORD PTR es:[edi],dx
  410134:	dec    ebp
  410135:	push   cs
  410136:	sub    BYTE PTR [edi+0x455247d3],ch
  41013c:	push   cs
  41013d:	ins    BYTE PTR es:[edi],dx
  41013e:	mov    edi,0xfce9fe35
  410143:	cli    
  410144:	jge    0x410116
  410146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410147:	jg     0x4100e4
  410149:	jmp    0x2ccc03ec
  41014e:	jge    0x410105
  410150:	cmp    ebx,ecx
  410152:	sahf   
  410153:	add    eax,0x2a30685
  410158:	add    BYTE PTR [edi+0x7401129d],ah
  41015e:	fadd   QWORD PTR ds:0x32447050
  410164:	out    0xdd,eax
  410166:	inc    ecx
  410167:	ss (bad) 
  410169:	bound  edx,QWORD PTR [ecx+0x7e]
  41016c:	fidivr DWORD PTR [ebp+0x7cfb4200]
  410172:	fldcw  WORD PTR [ebx+eiz*4]
  410175:	sub    BYTE PTR [edi],0xa6
  410178:	mov    esi,DWORD PTR [ecx+eax*2+0x24]
  41017c:	mov    cl,0xe
  41017e:	xchg   ebx,eax
  41017f:	call   0x1434:0xef117435
  410186:	aad    0x8c
  410188:	ret    0x69ff
  41018b:	pop    ebp
  41018c:	or     DWORD PTR [ebp+0xc727400],eax
  410192:	inc    edi
  410193:	xor    eax,0x8401d9c0
  410198:	add    DWORD PTR [ebx],edi
  41019a:	jge    0x410210
  41019c:	outs   dx,DWORD PTR ds:[esi]
  41019d:	fucomip st,st(3)
  41019f:	stos   DWORD PTR es:[edi],eax
  4101a0:	addr16 std 
  4101a2:	(bad)  [ebp+0x1]
  4101a5:	add    BYTE PTR [ebx],al
  4101a7:	dec    edi
  4101a8:	xor    al,0xf9
  4101aa:	jb     0x410219
  4101ac:	test   BYTE PTR [ebx+0x10],al
  4101af:	int    0xbe
  4101b1:	fld    DWORD PTR [ecx]
  4101b3:	je     0x4101b6
  4101b5:	add    eax,ebx
  4101b7:	ror    DWORD PTR [eax+0x14401d9],0x57
  4101be:	call   0x3eadf6
  4101c3:	das    
  4101c4:	push   DWORD PTR [ecx]
  4101c6:	ror    al,0xc1
  4101c9:	jb     0x4101d7
  4101cb:	and    ecx,DWORD PTR [edx+0xe]
  4101ce:	mov    edi,DWORD PTR [ecx+0xe]
  4101d1:	push   ebx
  4101d2:	call   0xfea085d7
  4101d7:	push   DWORD PTR [edi-0x7c4d6d1a]
  4101dd:	clc    
  4101de:	mov    esi,DWORD PTR [ebp+0x68]
  4101e1:	jmp    0x1355b5c
  4101e6:	jmp    0x4207cb
  4101eb:	xor    esi,DWORD PTR [esi+0x29f7c184]
  4101f1:	sar    DWORD PTR [ecx],1
  4101f3:	push   ebp
  4101f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f5:	ins    BYTE PTR es:[edi],dx
  4101f6:	sub    al,0x66
  4101f8:	iret   
  4101f9:	(bad)  
  4101fa:	or     eax,0xfffe7f84
  4101ff:	jmp    FWORD PTR [esi]
  410201:	call   DWORD PTR [edi+0x66]
  410204:	dec    ebp
  410205:	inc    edx
  410206:	mov    dl,0xf
  410208:	popf   
  410209:	aad    0xc0
  41020b:	daa    
  41020c:	cmp    esp,DWORD PTR [eax-0x15bcd938]
  410212:	and    eax,DWORD PTR [edi]
  410214:	cmp    esi,DWORD PTR [eax]
  410216:	inc    ebx
  410217:	gs and al,0x67
  41021a:	jo     0x4101a8
  41021c:	fisttp DWORD PTR [eax-0x54]
  41021f:	add    ebp,ebp
  410221:	scas   al,BYTE PTR es:[edi]
  410222:	mov    esi,0xa20776b7
  410227:	cmp    bl,bh
  410229:	adc    cl,BYTE PTR [ecx]
  41022b:	test   BYTE PTR [ecx],dl
  41022d:	sub    eax,DWORD PTR [edx]
  41022f:	add    bh,dh
  410231:	push   esp
  410232:	fisub  DWORD PTR [ebp+0x14]
  410235:	fild   QWORD PTR [edi+0xe]
  410238:	add    BYTE PTR [ebx],dl
  41023a:	in     al,0xfd
  41023c:	gs es adc al,0xfb
  410240:	gs pop esp
  410242:	mov    ecx,DWORD PTR [ebx]
  410244:	xchg   si,ax
  410246:	push   0xffffffa1
  410248:	mov    al,ah
  41024a:	rol    DWORD PTR [esi+0x13ff8445],cl
  410250:	push   eax
  410251:	sbb    bh,ah
  410253:	ja     0x4102a4
  410255:	and    cl,BYTE PTR [edi-0xe]
  410258:	adc    eax,0xb707295d
  41025d:	pop    eax
  41025e:	in     eax,dx
  41025f:	test   bl,al
  410261:	cdq    
  410262:	dec    edi
  410263:	add    eax,ebp
  410265:	dec    edi
  410266:	jno    0x41026a
  410268:	add    BYTE PTR [edx+0x204f4393],ch
  41026e:	lahf   
  41026f:	(bad)  
  410271:	jmp    0x22a:0xa9492bbc
  410278:	mov    esp,DWORD PTR [eax+0x21]
  41027b:	aaa    
  41027c:	das    
  41027d:	and    BYTE PTR [edi+eax*1-0x3dfd6196],dl
  410284:	xchg   BYTE PTR [ecx],al
  410286:	fistp  DWORD PTR [ecx+edi*1]
  410289:	mov    ebx,0xba2ba389
  41028e:	mov    edx,esp
  410290:	add    bl,BYTE PTR [ebp+0x100f7b33]
  410296:	mov    esi,0xf832ac34
  41029b:	call   0x436702a3
  4102a0:	add    dh,bh
  4102a2:	(bad)  
  4102a3:	add    ch,cl
  4102a5:	jg     0x4102e9
  4102a7:	scas   al,BYTE PTR es:[edi]
  4102a8:	and    BYTE PTR [ecx],bh
  4102aa:	icebp  
  4102ab:	push   cs
  4102ac:	xchg   esi,eax
  4102ad:	repz jmp 0xf511ebb5
  4102b3:	out    0x20,al
  4102b5:	xchg   ecx,ecx
  4102b7:	mov    ch,BYTE PTR [ebx-0x7a]
  4102ba:	repnz ss mov ch,0x38
  4102be:	cmp    bl,BYTE PTR [esi+0x7e9d041d]
  4102c4:	test   al,0xaf
  4102c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c7:	xor    edx,DWORD PTR [ebx]
  4102c9:	adc    BYTE PTR [esi],ah
  4102cb:	(bad)
  4102ce:	popf   
  4102cf:	retf   
  4102d0:	pop    ebx
  4102d1:	mov    ss,edx
  4102d3:	test   DWORD PTR ss:[eax],edi
  4102d6:	int3   
  4102d7:	xor    ebx,eax
  4102d9:	jg     0x410335
  4102db:	add    ebp,DWORD PTR [esp+eax*1-0x64]
  4102df:	add    ch,cl
  4102e1:	mov    WORD PTR [ecx-0x15116d2],ss
  4102e7:	sbb    DWORD PTR [esi],0x3c7daa04
  4102ed:	add    ebx,DWORD PTR [ebp-0x516befe]
  4102f3:	add    cl,ch
  4102f5:	jg     0x410319
  4102f7:	add    esp,DWORD PTR [ebp+0x40]
  4102fa:	fidiv  DWORD PTR [edx]
  4102fc:	(bad)  
  4102fd:	call   0xfb38c11d
  410302:	add    BYTE PTR [ebp-0x60103a3d],al
  410308:	mov    DWORD PTR [ebp+edx*1-0x7a],edi
  41030c:	dec    ebp
  41030d:	pop    esi
  41030e:	jmp    0xd3188ab1
  410313:	inc    ebp
  410314:	scas   eax,DWORD PTR es:[edi]
  410315:	jo     0x4102d7
  410317:	jmp    0x410343
  410319:	jne    0x4102a2
  41031b:	sub    DWORD PTR ds:0xb6d5dd69,esi
  410321:	out    0x5c,eax
  410323:	pop    esp
  410324:	add    DWORD PTR [eax-0x1a],edx
  410327:	lods   al,BYTE PTR ds:[esi]
  410328:	out    dx,al
  410329:	adc    eax,0xc385a129
  41032e:	in     eax,0x1d
  410330:	jb     0x4103a5
  410332:	fild   QWORD PTR [ebx]
  410334:	add    ebp,0xffffffa2
  410337:	cwde   
  410338:	add    al,BYTE PTR [eax]
  41033a:	add    dl,BYTE PTR [edx+edi*1]
  41033d:	jno    0x4102d6
  41033f:	xchg   cl,dh
  410341:	std    
  410342:	daa    
  410343:	cdq    
  410344:	cmp    BYTE PTR [ebp-0xf],0x9f
  410348:	mov    eax,0x4c72102d
  41034d:	add    cl,ch
  41034f:	sahf   
  410350:	add    eax,0xb367d2fb
  410355:	sbb    BYTE PTR [edx+0x5c],dh
  410358:	cmp    ch,BYTE PTR [eax-0x57]
  41035b:	jbe    0x41035f
  41035d:	add    cl,ch
  41035f:	lahf   
  410360:	inc    ebp
  410361:	mov    WORD PTR [esi+0x66],ds
  410364:	add    al,BYTE PTR [eax]
  410366:	jmp    0x4b6ad66b
  41036b:	fwait
  41036c:	mov    dl,0x30
  41036e:	jmp    0x2d29:0x8371eceb
  410375:	add    eax,0xee2900ff
  41037a:	mov    DWORD PTR [ebp+0x5c],eax
  41037d:	push   ebp
  41037e:	out    0xad,al
  410380:	sub    eax,DWORD PTR [esi]
  410382:	add    BYTE PTR [ebx+0x5c],dl
  410385:	imul   DWORD PTR [esi+0x737b7bff]
  41038b:	hlt    
  41038c:	mov    ebx,ss
  41038e:	push   ebp
  41038f:	add    ah,al
  410391:	jl     0x410406
  410393:	or     BYTE PTR [ecx+0x78],cl
  410396:	push   ss
  410397:	push   edi
  410398:	fwait
  410399:	adc    ebp,esp
  41039b:	adc    al,BYTE PTR [ebp+eax*1+0x6a]
  41039f:	adc    al,0x8b
  4103a1:	jb     0x410389
  4103a3:	add    edx,0x2
  4103a6:	push   esi
  4103a7:	inc    DWORD PTR [ecx-0x7bbfebc7]
  4103ad:	test   dl,al
  4103af:	or     al,0x1
  4103b1:	(bad)  
  4103b2:	jae    0x4103c1
  4103b4:	ficom  WORD PTR [edx]
  4103b6:	push   eax
  4103b7:	push   esi
  4103b8:	pop    ebx
  4103b9:	adc    dh,BYTE PTR [esi+edx*1]
  4103bc:	test   BYTE PTR [esi],al
  4103be:	add    esp,0x38
  4103c1:	inc    eax
  4103c2:	std    
  4103c3:	adc    eax,0x401304
  4103c8:	leave  
  4103c9:	mov    dl,0x56
  4103cb:	cld    
  4103cc:	add    BYTE PTR [ebx],bl
  4103ce:	clc    
  4103cf:	out    0x43,al
  4103d1:	push   edi
  4103d2:	push   es
  4103d3:	add    BYTE PTR [ebx-0x76be1987],cl
  4103d9:	jns    0x4103c1
  4103db:	cmp    DWORD PTR [ebp+0x3c],ebx
  4103de:	or     BYTE PTR [edx-0x20776d0],al
  4103e4:	jmp    0x410944
  4103e9:	mov    DWORD PTR [edx+0xe],eax
  4103ec:	xor    ebx,DWORD PTR [edi+0x55]
  4103ef:	xchg   DWORD PTR [ebp-0x63],ebx
  4103f2:	daa    
  4103f3:	sub    dh,cl
  4103f5:	dec    ebx
  4103f6:	sbb    eax,DWORD PTR [edx]
  4103f8:	mov    DWORD PTR [eax+0x4f],ebx
  4103fb:	stc    
  4103fc:	ret    0x7251
  4103ff:	sti    
  410400:	pop    esp
  410401:	lods   eax,DWORD PTR ds:[esi]
  410402:	jno    0x4103fa
  410404:	mov    WORD PTR [ebx+0x50],cs
  410407:	mov    edi,ebp
  410409:	aaa    
  41040a:	das    
  41040b:	xchg   DWORD PTR [ebp-0x56],eax
  41040e:	js     0x4103e2
  410410:	dec    BYTE PTR [eax-0x62bff3a9]
  410416:	pushf  
  410417:	or     ebx,DWORD PTR ds:[eax]
  41041a:	fld    TBYTE PTR [esi+0x3c9ade0d]
  410420:	ficomp DWORD PTR [ecx+ebx*1+0x49e83b02]
  410427:	mov    al,0xdf
  410429:	jbe    0x41045a
  41042b:	cmp    BYTE PTR [ebp-0x5b],0x19
  41042f:	scas   al,BYTE PTR es:[edi]
  410430:	push   cs
  410431:	add    BYTE PTR [edx-0x31],dh
  410434:	jnp    0x457d2e1a
  41043a:	xchg   ebp,eax
  41043b:	sbb    DWORD PTR [edx],ebp
  41043d:	icebp  
  41043e:	sti    
  41043f:	sbb    DWORD PTR [edx],eax
  410441:	dec    eax
  410443:	dec    ebp
  410444:	sub    dh,BYTE PTR [ebx]
  410446:	or     eax,0xc88c3461
  41044b:	xor    eax,0x19d2172a
  410450:	add    cl,BYTE PTR [ebx+0x768521b0]
  410456:	test   edi,esi
  410458:	xor    al,0x14
  41045a:	xor    DWORD PTR [edx+eax*8-0x1],ecx
  41045e:	daa    
  41045f:	out    0x4f,eax
  410461:	imul   ebp,DWORD PTR [ecx+0x6d0e439c],0x6a033c9c
  41046b:	add    ah,BYTE PTR [esi+0xf]
  41046e:	lods   eax,DWORD PTR ds:[esi]
  41046f:	sbb    BYTE PTR [ecx-0x1bb8e1fd],ch
  410475:	int    0xeb
  410477:	adc    eax,0x25d1259
  41047c:	je     0x4104ed
  41047e:	jb     0x4104ae
  410480:	cmp    eax,0x35c5d835
  410485:	add    esi,DWORD PTR [ebp-0x62fd0581]
  41048b:	das    
  41048c:	fwait
  41048d:	daa    
  41048e:	ret    0x4d1b
  410491:	xor    eax,0x1f9b2fb3
  410496:	add    dl,al
  410498:	and    edi,DWORD PTR ds:0xab7ca335
  41049e:	xor    al,0xfb
  4104a0:	shl    BYTE PTR [ecx-0x16eda3b6],1
  4104a6:	into   
  4104a7:	pop    ss
  4104a8:	push   ds
  4104a9:	addr16 sub dh,bl
  4104ac:	add    al,0xe9
  4104ae:	add    ecx,esi
  4104b0:	fdiv   DWORD PTR ds:0xd3422987
  4104b6:	xor    al,0x6b
  4104b8:	sbb    bl,BYTE PTR [esi+ebp*1+0x62]
  4104bc:	das    
  4104bd:	stc    
  4104be:	pop    eax
  4104bf:	sub    ebp,eax
  4104c1:	js     0x410496
  4104c3:	and    eax,0xe98ab8cd
  4104c8:	push   ds
  4104c9:	pop    edi
  4104ca:	(bad)  
  4104cb:	dec    esi
  4104cc:	jns    0x410511
  4104ce:	cmp    al,0x25
  4104d0:	int    0x9c
  4104d2:	sub    edx,DWORD PTR [esi]
  4104d4:	int3   
  4104d5:	call   0x2c2ac7dd
  4104da:	je     0x41048a
  4104dc:	bnd jae 0x41049d
  4104df:	dec    edx
  4104e0:	shr    BYTE PTR [ebx-0x42],cl
  4104e3:	push   cs
  4104e4:	sar    bh,cl
  4104e6:	add    BYTE PTR [edx],0xfc
  4104e9:	add    cl,ch
  4104eb:	sub    BYTE PTR [edi+0x73],0x6
  4104ef:	mov    al,0xb6
  4104f1:	sti    
  4104f2:	pop    esi
  4104f3:	inc    ebx
  4104f4:	xor    esp,edi
  4104f6:	popa   
  4104f7:	ja     0x410528
  4104f9:	dec    BYTE PTR [esi+0x0]
  4104fc:	xor    esi,DWORD PTR [ebx]
  4104fe:	mov    BYTE PTR [esi+ecx*4-0x767185d9],ch
  410505:	xor    BYTE PTR [eax+0x5c7a7a94],cl
  41050b:	xor    DWORD PTR [edi],edx
  41050d:	into   
  41050e:	sti    
  41050f:	je     0x41054c
  410511:	inc    ebx
  410512:	cld    
  410513:	push   ds
  410514:	imul   edi,DWORD PTR [edi-0x40855374],0x19410e7
  41051e:	add    BYTE PTR [ebp-0x22],ch
  410521:	mov    cl,0x1e
  410523:	inc    BYTE PTR [eax+0x2a]
  410526:	(bad)  
  410527:	jl     0x4104e3
  410529:	and    eax,0x29e4054
  41052e:	call   FWORD PTR [ebp+esi*4+0x7a]
  410532:	inc    esp
  410533:	int    0x91
  410535:	lds    ebp,FWORD PTR [esi+0x5c7aaed6]
  41053b:	aad    0xe0
  41053d:	into   
  41053e:	div    DWORD PTR [eax+0x6c]
  410541:	sub    bh,dh
  410543:	xor    al,0x95
  410545:	and    eax,0x2c8e8636
  41054a:	imul   ebx,eax,0x41dbaf1d
  410550:	cdq    
  410551:	fld    QWORD PTR ds:0x4c799ee8
  410557:	test   DWORD PTR [edx],edi
  410559:	cmp    DWORD PTR [edi-0x121bdb],esi
  41055f:	inc    DWORD PTR [eax]
  410561:	adc    eax,DWORD PTR [esi-0x3a]
  410564:	cmp    DWORD PTR [ecx-0x46f0b00a],esi
  41056a:	cmp    ebp,esi
  41056c:	push   eax
  41056d:	jae    0x41051a
  41056f:	cmp    bh,dh
  410571:	xor    ecx,0xffffff89
  410574:	(bad)  
  410575:	xor    al,0x83
  410577:	inc    ebx
  410578:	call   0xbc2757a4
  41057d:	pop    esp
  41057e:	icebp  
  41057f:	std    
  410580:	or     DWORD PTR [eax-0x6b8a0102],0xffffffad
  410587:	out    dx,al
  410588:	call   0x3ea617
  41058d:	jae    0x4105fa
  41058f:	jmp    0x8bff:0xfda092e8
  410596:	rcr    BYTE PTR [ecx],1
  410598:	test   BYTE PTR [ebx-0x638ade38],0x9c
  41059f:	in     al,dx
  4105a0:	add    DWORD PTR [ecx+eax*1-0x7bfe3975],eax
  4105a7:	mov    esi,0x86f093fd
  4105ac:	sbb    DWORD PTR ds:0xe3fa736f,esi
  4105b2:	push   eax
  4105b3:	pop    ecx
  4105b4:	leave  
  4105b5:	inc    edi
  4105b6:	dec    edx
  4105b7:	mov    esp,ebp
  4105b9:	mul    ebp
  4105bb:	test   BYTE PTR [ecx-0x16ae0],0x44
  4105c2:	push   esp
  4105c3:	mov    ecx,ebx
  4105c5:	add    bh,cl
  4105c7:	push   esp
  4105c8:	add    dl,BYTE PTR [esi-0x55]
  4105cb:	jnp    0x41059d
  4105cd:	je     0x410638
  4105cf:	lock jae 0x4105e2
  4105d2:	scas   eax,DWORD PTR es:[edi]
  4105d3:	inc    edx
  4105d4:	push   es
  4105d5:	dec    DWORD PTR [ecx-0x62fa95fe]
  4105db:	repz sbb edx,DWORD PTR [ecx+edx*8+0x1b]
  4105e0:	add    al,BYTE PTR [ebp+ebx*8-0x529657d2]
  4105e7:	sahf   
  4105e8:	scas   al,BYTE PTR es:[edi]
  4105e9:	and    esi,DWORD PTR [ecx-0x6768e3ed]
  4105ef:	sbb    al,BYTE PTR [edx]
  4105f1:	jmp    FWORD PTR [esi+0x33]
  4105f4:	jg     0x410669
  4105f6:	mov    ecx,0xa172312f
  4105fb:	ret    
  4105fc:	(bad)  
  4105fd:	enter  0xbbe2,0x7d
  410601:	(bad)  
  410602:	and    al,0x9f
  410604:	out    0x93,al
  410606:	popf   
  410607:	sbb    eax,DWORD PTR [edx]
  410609:	call   0xfe72fb39
  41060e:	push   ss
  41060f:	jmp    0x410598
  410611:	cmc    
  410612:	xor    DWORD PTR [edi],ebp
  410614:	fmul   DWORD PTR [edx+0x437f6ada]
  41061a:	cmp    DWORD PTR [ebx],0xe1c7e7d2
  410620:	xor    esi,edi
  410622:	repz adc eax,edx
  410625:	lods   eax,DWORD PTR ds:[esi]
  410626:	xchg   edx,eax
  410627:	sub    eax,0xc100437e
  41062c:	push   ecx
  41062d:	sar    dh,cl
  41062f:	or     BYTE PTR [edx+0x31],cl
  410632:	je     0x4105dd
  410634:	and    al,0xb6
  410636:	pop    es
  410637:	jb     0x410602
  410639:	sti    
  41063a:	out    0x8b,eax
  41063c:	jmp    0xd6510644
  410641:	out    0x17,eax
  410643:	daa    
  410644:	bound  ebx,QWORD PTR [ebx]
  410646:	mov    ah,BYTE PTR [ebp+ebp*2+0x30]
  41064a:	mov    DWORD PTR [esi+0x15],ebx
  41064d:	rcr    BYTE PTR [edx+0x16],cl
  410650:	inc    edi
  410651:	into   
  410652:	shr    DWORD PTR [ecx+0x27d6e902],0x1f
  410659:	imul   esp,DWORD PTR [eax],0x7d3dd486
  41065f:	xor    bl,BYTE PTR [ecx+0x26617eec]
  410665:	sbb    dl,bl
  410667:	test   BYTE PTR [ebx],ch
  410669:	mov    ecx,0x5160b30
  41066e:	push   ss
  41066f:	pop    ebp
  410670:	add    ah,BYTE PTR [esp+eax*2+0x6e]
  410674:	loop   0x4106dd
  410676:	scas   eax,DWORD PTR es:[edi]
  410677:	out    dx,al
  410678:	add    bh,cl
  41067a:	add    ebx,DWORD PTR [ebp+0x5938fdb5]
  410680:	sub    ah,bh
  410682:	add    bl,BYTE PTR [ebp-0x79fe43fe]
  410688:	mov    ch,0x44
  41068a:	jge    0x4106ed
  41068c:	xor    dh,cl
  41068e:	dec    ecx
  41068f:	add    BYTE PTR [eax+0x6],cl
  410692:	add    cl,BYTE PTR [edx+0x27]
  410695:	sub    esi,DWORD PTR [ecx+0x49]
  410698:	push   ebx
  410699:	int3   
  41069a:	das    
  41069b:	inc    ebp
  41069c:	push   ecx
  41069d:	ja     0x4106a3
  41069f:	test   DWORD PTR [esi-0x6f0b4922],esi
  4106a5:	ja     0x4106d0
  4106a7:	jnp    0x4106b2
  4106a9:	sub    edx,DWORD PTR [eax]
  4106ab:	pop    esp
  4106ac:	mov    ebp,DWORD PTR [ebx]
  4106ae:	cmc    
  4106af:	test   BYTE PTR [edx+0x7085de0c],cl
  4106b5:	add    ch,cl
  4106b7:	add    esp,DWORD PTR [eax]
  4106b9:	(bad)
  4106bc:	hlt    
  4106bd:	ret    0x1242
  4106c0:	into   
  4106c1:	cwde   
  4106c2:	int    0x30
  4106c4:	mov    cl,0xa6
  4106c6:	fcmovb st,st(3)
  4106c8:	push   edx
  4106c9:	xchg   BYTE PTR [eax-0xb2df00],ch
  4106cf:	call   0xaab0972
  4106d4:	mov    edx,0x913d3c6
  4106d9:	mov    ebx,0x1532f4fe
  4106de:	inc    eax
  4106df:	jmp    0x374c45fd
  4106e4:	cmp    ecx,DWORD PTR ds:0xbb752c8d
  4106ea:	push   edx
  4106eb:	adc    ecx,esp
  4106ed:	sub    al,0x14
  4106ef:	add    DWORD PTR [ebx+0x63ffc2],ebp
  4106f5:	pop    esi
  4106f6:	cld    
  4106f7:	or     DWORD PTR [ebx-0x49fffd62],0x6b
  4106fe:	scas   al,BYTE PTR es:[edi]
  4106ff:	sar    DWORD PTR [edi+0x424f4461],cl
  410705:	into   
  410706:	(bad)  
  410707:	out    dx,eax
  410708:	push   0xffffff8c
  41070a:	or     eax,0x2b4a660f
  41070f:	(bad)  
  410710:	jmp    0x30c10355
  410715:	xchg   edi,eax
  410716:	scas   eax,DWORD PTR es:[edi]
  410717:	add    al,0x69
  410719:	xchg   DWORD PTR [ebx],esp
  41071b:	je     0x410709
  41071d:	and    DWORD PTR [ebx],esi
  41071f:	add    al,0x9c
  410721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410722:	ja     0x4106e6
  410724:	ret    0xfe63
  410727:	add    BYTE PTR [esi+0x69ff9c9f],ch
  41072d:	int3   
  41072e:	(bad)  
  41072f:	jb     0x410709
  410731:	add    ebp,DWORD PTR [esi+0x22551534]
  410737:	xchg   esp,eax
  410738:	inc    edi
  410739:	lahf   
  41073a:	add    al,BYTE PTR [ebx-0x3a51451f]
  410740:	ret    0x7d56
  410743:	ret    0x6402
  410746:	dec    BYTE PTR [eax+eax*1-0x177d0426]
  41074d:	inc    ecx
  41074e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41074f:	inc    edx
  410750:	xor    eax,0x458b5221
  410755:	adc    BYTE PTR [edi-0x3],cl
  410758:	jne    0x41075a
  41075a:	sub    al,al
  41075c:	inc    edx
  41075d:	xor    eax,0x358a07f0
  410762:	mov    al,ds:0x9e004014
  410767:	fscale 
  410769:	(bad)  
  41076a:	cmp    DWORD PTR [esi+0x3b8f3172],0x86372b06
  410774:	out    0x5,al
  410776:	xchg   DWORD PTR [ebx+0xe],esi
  410779:	add    dl,al
  41077b:	cmp    edx,edx
  41077d:	jmp    0x751442ef
  410782:	cld    
  410783:	lods   al,BYTE PTR ds:[esi]
  410784:	push   ebx
  410785:	or     al,0x3f
  410787:	in     eax,dx
  410788:	std    
  410789:	push   ebp
  41078a:	hlt    
  41078b:	mov    edi,esi
  41078d:	imul   eax,ecx,0x24d44382
  410793:	push   ebp
  410794:	push   0x83d08bff
  410799:	rcl    BYTE PTR [eax],0x5
  41079c:	mov    DWORD PTR [ebp+0x7c],edi
  41079f:	cmp    DWORD PTR [ebx-0x2b177bb],ecx
  4107a5:	jne    0x41074f
  4107a7:	mov    WORD PTR [ebx+edx*2],ds
  4107aa:	cs fdivr st,st(5)
  4107ad:	adc    eax,0x401320
  4107b2:	(bad)  
  4107b3:	cmp    esi,esi
  4107b5:	pop    esi
  4107b6:	mov    ebp,0x97000ac4
  4107bb:	mov    esi,0x740008c0
  4107c0:	dec    edx
  4107c1:	mov    esp,ebp
  4107c3:	popf   
  4107c4:	call   0x5602:0x1b9fa31e
  4107cb:	sbb    BYTE PTR [esi+esi*4+0x43],ah
  4107cf:	ret    
  4107d0:	pushf  
  4107d1:	jmp    0x7f72d6d5
  4107d6:	mov    ah,0xbd
  4107d8:	push   esi
  4107d9:	sub    eax,0x19345fe
  4107de:	add    DWORD PTR [ebp-0x620c5864],ebx
  4107e4:	pushf  
  4107e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e6:	sti    
  4107e7:	popf   
  4107e8:	in     al,dx
  4107e9:	add    BYTE PTR [ecx+ecx*1+0xb],0x1c
  4107ee:	xor    dl,BYTE PTR [ebp-0x227bfde6]
  4107f4:	es pop ss
  4107f6:	push   DWORD PTR [eax-0x69]
  4107f9:	jns    0x4107c0
  4107fb:	repnz inc ebp
  4107fd:	imul   ebx,DWORD PTR ss:[ebp-0x62346595],0x5e8021b
  410808:	inc    edi
  410809:	add    eax,DWORD PTR [eax]
  41080b:	shl    BYTE PTR [ebp+0x36],cl
  41080e:	out    0x46,eax
  410810:	ja     0x41083f
  410812:	(bad)  
  410813:	outs   dx,BYTE PTR ds:[esi]
  410814:	ret    
  410815:	mov    bh,0xab
  410817:	mov    edx,0xdec8ccd7
  41081c:	gs jns 0x41080a
  41081f:	push   ds
  410820:	jmp    FWORD PTR [edx]
  410822:	add    BYTE PTR [eax],0xb1
  410825:	scas   al,BYTE PTR es:[edi]
  410826:	pop    es
  410827:	add    BYTE PTR [ebp+0x2056d46c],bl
  41082d:	push   esi
  41082e:	out    0x13,al
  410830:	into   
  410831:	das    
  410832:	ror    DWORD PTR [eax-0x17f5c9f7],1
  410838:	jmp    0xa903:0x1900028c
  41083f:	std    
  410840:	push   ds
  410841:	(bad)  
  410842:	call   0xab5ba54a
  410847:	(bad)  
  410848:	pop    edx
  410849:	sub    BYTE PTR [ecx+0x4c],ah
  41084c:	and    eax,0x140c0cc7
  410851:	mov    DWORD PTR [esp+edx*1],0xb6d8444b
  410858:	xchg   esp,eax
  410859:	sbb    ah,BYTE PTR [ebx-0x33]
  41085c:	popf   
  41085d:	add    bh,BYTE PTR [edi]
  41085f:	icebp  
  410860:	inc    edi
  410861:	shr    DWORD PTR [ecx],1
  410863:	sbb    al,0xf8
  410865:	enter  0x3e7,0x1e
  410869:	mov    bh,0xc4
  41086b:	or     ebp,DWORD PTR [ebp-0x4d17db85]
  410871:	sbb    ebx,DWORD PTR [ecx]
  410873:	fild   WORD PTR ss:[ecx]
  410876:	cld    
  410877:	adc    BYTE PTR ds:0x9d02f829,al
  41087d:	jne    0x410863
  41087f:	out    0x8a,eax
  410881:	sbb    bh,BYTE PTR [edi+ebp*2+0x396927e3]
  410888:	add    BYTE PTR [ebp-0x20c9eee5],bl
  41088e:	add    al,0xbd
  410890:	stc    
  410891:	ret    0xe824
  410894:	add    ebx,DWORD PTR [ebp-0x38d0b67d]
  41089a:	(bad)  
  41089b:	ss inc ecx
  41089d:	sahf   
  41089e:	scas   al,BYTE PTR es:[edi]
  41089f:	repnz sbb edx,DWORD PTR [ecx+eax*1-0x17]
  4108a4:	add    ebx,DWORD PTR [esi]
  4108a6:	and    al,0x11
  4108a8:	sbb    DWORD PTR [ecx+0x9c42930],edi
  4108ae:	bnd jae 0x410869
  4108b1:	mov    esi,0xf7c110a
  4108b6:	add    al,BYTE PTR [eax]
  4108b8:	jmp    0xe950d753
  4108bd:	sahf   
  4108be:	jnp    0x41088d
  4108c0:	push   0xffffffa5
  4108c2:	out    0xe7,eax
  4108c4:	xchg   ebx,eax
  4108c5:	sub    eax,0x6d120002
  4108ca:	jecxz  0x4108db
  4108cc:	push   ebp
  4108cd:	lods   al,BYTE PTR ds:[esi]
  4108ce:	jne    0x410913
  4108d0:	or     eax,0xe869d2b1
  4108d5:	and    al,0x3
  4108d7:	pop    eax
  4108d8:	pusha  
  4108d9:	push   0xffffffe3
  4108db:	pop    ss
  4108dc:	ror    esi,0xd4
  4108df:	(bad)  
  4108e0:	call   0xf564bc90
  4108e5:	xchg   BYTE PTR [ebx-0x386116af],dl
  4108eb:	pop    ebp
  4108ec:	fiadd  DWORD PTR [eax]
  4108ee:	pop    esi
  4108ef:	int3   
  4108f0:	mov    cl,BYTE PTR [ebx+ebx*8+0x1ee90340]
  4108f7:	out    0x8f,al
  4108f9:	cmp    ebp,ebx
  4108fb:	es push esi
  4108fe:	add    eax,0xb81a56cd
  410903:	rcl    BYTE PTR [esi-0x4a],1
  410906:	push   es
  410907:	das    
  410908:	icebp  
  410909:	test   eax,0x4e56cf9e
  41090e:	stos   DWORD PTR es:[edi],eax
  41090f:	rcl    BYTE PTR [ecx],cl
  410911:	test   eax,0x2ef7b9e
  410916:	mov    BYTE PTR [ebx+0x1436c11e],dh
  41091c:	add    cl,ch
  41091e:	enter  0x1427,0xf9
  410922:	(bad)  
  410923:	ret    0x63ff
  410926:	pop    esi
  410927:	mov    bl,0x7
  410929:	mov    esi,0xb5142570
  41092e:	lods   al,BYTE PTR ds:[esi]
  41092f:	ret    0xffff
  410932:	sub    dl,bh
  410934:	adc    esp,DWORD PTR [eax+0x5efe4266]
  41093a:	adc    al,bl
  41093c:	push   ebx
  41093d:	mov    esi,DWORD PTR [eax-0x5a]
  410940:	jmp    0xc98d:0x4f84aa30
  410947:	into   
  410948:	push   esi
  410949:	call   0x420612
  41094e:	arpl   WORD PTR [esi+eax*1+0x6a],si
  410952:	add    BYTE PTR [edx+ecx*1],dh
  410955:	mov    DWORD PTR [edx-0x7ba1fdcb],esp
  41095b:	add    al,0x73
  41095d:	push   ss
  41095e:	lea    edi,[ecx-0x32]
  410961:	dec    esi
  410962:	dec    DWORD PTR [ecx+0x2c75fd26]
  410968:	or     bl,BYTE PTR [ecx-0x7afdfa5d]
  41096e:	shr    BYTE PTR [eax-0x4b3fccfd],0x5
  410975:	add    DWORD PTR [ebx],esi
  410977:	xor    al,0xe8
  410979:	rol    BYTE PTR [esp+eax*1],0x53
  41097d:	mov    esp,ebp
  41097f:	xchg   edx,esp
  410981:	test   BYTE PTR [ecx+0x5250],0xf4
  410988:	push   ebx
  410989:	push   0x22724153
  41098e:	sub    BYTE PTR [edx+ecx*1],cl
  410991:	cmp    DWORD PTR [edx],eax
  410993:	mov    ch,0x1
  410995:	mov    eax,esi
  410997:	out    dx,al
  410998:	dec    edi
  410999:	xchg   DWORD PTR [eax+ebp*4+0x2a],eax
  41099d:	mov    esi,DWORD PTR [eax+ebx*4+0x32]
  4109a1:	push   esi
  4109a2:	call   0x420973
  4109a7:	xor    DWORD PTR [edx+0x22],eax
  4109aa:	push   eax
  4109ab:	popf   
  4109ac:	imul   ebx,DWORD PTR [edx],0xffffff8b
  4109af:	xchg   edx,eax
  4109b0:	hlt    
  4109b1:	sub    al,BYTE PTR [ebx-0x7d1458a3]
  4109b7:	add    cl,bh
  4109b9:	aas    
  4109ba:	idiv   bh
  4109bc:	sub    DWORD PTR [edi-0x22],edx
  4109bf:	dec    edi
  4109c0:	and    al,0x5f
  4109c2:	fimul  WORD PTR [edi]
  4109c4:	sbb    bh,dl
  4109c6:	fild   WORD PTR [edi]
  4109c8:	adc    al,0xdf
  4109ca:	fist   WORD PTR [edi]
  4109cc:	es push ebp
  4109ce:	ror    BYTE PTR [ecx+ebx*8-0x1e38ec01],cl
  4109d5:	test   DWORD PTR [ebx],0x21b9d05
  4109db:	(bad)  
  4109dc:	loope  0x4109d5
  4109de:	jecxz  0x4109e0
  4109e0:	popf   
  4109e1:	sbb    eax,DWORD PTR [edx]
  4109e3:	(bad)  
  4109e4:	loope  0x410a1d
  4109e6:	fiadd  WORD PTR [ecx]
  4109e8:	popf   
  4109e9:	sbb    eax,DWORD PTR [edx]
  4109eb:	call   0x442887
  4109f0:	jae    0x410992
  4109f2:	pop    ds
  4109f3:	pop    esp
  4109f4:	fiadd  WORD PTR ds:0x771ceb7f
  4109fa:	cli    
  4109fb:	add    DWORD PTR [ebp-0xa7b88e5],ebx
  410a01:	xchg   ebp,eax
  410a02:	sub    esi,edi
  410a04:	dec    ebp
  410a05:	shr    edi,cl
  410a07:	(bad)  
  410a08:	loop   0x4109cd
  410a0a:	jle    0x4109cb
  410a0c:	push   ecx
  410a0d:	and    BYTE PTR [edi-0x74],dh
  410a10:	aad    0xb5
  410a12:	sub    esi,edi
  410a14:	mov    ch,0xd6
  410a16:	pop    esp
  410a17:	add    BYTE PTR [ebp+0x5445f2],bl
  410a1d:	es mov edi,0x8891eb85
  410a23:	ror    BYTE PTR [edx+0x7ef10230],1
  410a29:	cwde   
  410a2a:	int    0x6f
  410a2c:	mov    eax,0xfba3768e
  410a31:	in     eax,dx
  410a32:	and    edx,DWORD PTR [ebx-0x6db6e809]
  410a38:	sub    dh,ah
  410a3a:	add    dl,BYTE PTR [ebx-0x6c862cfc]
  410a40:	xor    esi,DWORD PTR [ebx-0x2d]
  410a43:	cwde   
  410a44:	sub    BYTE PTR [edx],0xf4
  410a47:	imul   eax,DWORD PTR [edi+0x62],0x24
  410a4b:	call   0x23b6aacc
  410a50:	sub    al,0xed
  410a52:	ja     0x410a6f
  410a54:	clc    
  410a55:	ret    0x3b92
  410a58:	les    eax,FWORD PTR [edx+0x25]
  410a5b:	aaa    
  410a5c:	cld    
  410a5d:	shl    BYTE PTR [ebx],1
  410a5f:	sbb    ah,bl
  410a61:	sbb    DWORD PTR [ebx-0x23],eax
  410a64:	jle    0x410a78
  410a66:	add    ebp,ecx
  410a68:	add    edx,DWORD PTR [esi]
  410a6a:	mov    esi,0x75a27da0
  410a6f:	cmp    ebx,DWORD PTR [esp+ebp*2]
  410a72:	cwde   
  410a73:	enter  0xa69d,0xd2
  410a77:	test   DWORD PTR [ebx+0x3e902d6],edx
  410a7d:	and    BYTE PTR [ebx-0x5],al
  410a80:	mov    al,0x0
  410a82:	mov    ebp,0x61eb6cbd
  410a87:	sbb    bl,dh
  410a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a8a:	scas   eax,DWORD PTR es:[edi]
  410a8b:	inc    edi
  410a8c:	jno    0x410a4d
  410a8e:	(bad)  
  410a8f:	ja     0x410a65
  410a91:	add    al,0xb1
  410a93:	jge    0x410ae2
  410a95:	mov    al,0x5e
  410a97:	jo     0x410a41
  410a99:	jl     0x410a76
  410a9b:	sbb    al,BYTE PTR [ebp-0xdc44e9]
  410aa1:	imul   ebx,DWORD PTR [ecx-0x51],0x36
  410aa5:	xchg   esi,eax
  410aa6:	or     BYTE PTR [ecx+eax*4],ah
  410aa9:	xor    DWORD PTR [ebx+ebx*1+0x6c],esi
  410aad:	add    eax,0x118a24c4
  410ab2:	adc    ah,BYTE PTR ds:0xb709c973
  410ab8:	adc    ebx,DWORD PTR [esi+0x11fe3b19]
  410abe:	inc    esp
  410abf:	sbb    eax,0x63f2f6fe
  410ac4:	jae    0x410a9f
  410ac6:	jmp    0xd95b1e81
  410acb:	fwait
  410acc:	mov    edi,0x3e236154
  410ad1:	shl    DWORD PTR [ecx],0x1d
  410ad4:	dec    dh
  410ad6:	ins    DWORD PTR es:[edi],dx
  410ad7:	sbb    edi,DWORD PTR [esi-0x1db8a70]
  410add:	and    al,0x85
  410adf:	js     0x410b25
  410ae1:	mov    ch,0x19
  410ae3:	inc    eax
  410ae4:	aas    
  410ae5:	repnz add bl,ch
  410ae8:	sbb    dh,BYTE PTR [ecx+0x4a]
  410aeb:	mov    eax,ds:0x5b72efc6
  410af0:	das    
  410af1:	mov    ah,cl
  410af3:	mov    ecx,esi
  410af5:	out    0x3b,eax
  410af7:	icebp  
  410af8:	and    edx,DWORD PTR [eax-0x2f]
  410afb:	cmp    DWORD PTR [esi-0x4d098d09],0x23f118fe
  410b05:	je     0x410ae4
  410b07:	imul   edi,ebp,0xece6655
  410b0d:	call   esp
  410b0f:	shl    BYTE PTR [edi+0x5],cl
  410b12:	ret    
  410b13:	lahf   
  410b14:	and    esi,DWORD PTR [ecx+eiz*8-0x14]
  410b18:	and    ecx,DWORD PTR [edi+0x0]
  410b1b:	and    BYTE PTR [esi+edi*4-0x2b4bff1],ah
  410b22:	jmp    FWORD PTR [ebx-0x26]
  410b25:	jae    0x410b2f
  410b27:	aas    
  410b28:	add    DWORD PTR [esi-0x1],edx
  410b2b:	in     al,0x36
  410b2d:	mov    DWORD PTR [ebp-0x6c],edi
  410b30:	lahf   
  410b31:	add    al,0x57
  410b33:	push   ds
  410b34:	push   es
  410b35:	push   esi
  410b36:	inc    DWORD PTR [edx+ebx*1-0x7d]
  410b3a:	rol    BYTE PTR [ecx],0x4c
  410b3d:	aaa    
  410b3e:	inc    edi
  410b3f:	ins    BYTE PTR es:[edi],dx
  410b40:	ins    BYTE PTR es:[edi],dx
  410b41:	push   edi
  410b42:	mov    eax,DWORD PTR [edi+0x5084b99]
  410b48:	xor    edi,ebp
  410b4a:	ja     0x410b4c
  410b4c:	jo     0x410b83
  410b4e:	std    
  410b4f:	push   eax
  410b50:	test   BYTE PTR [ebx-0x627c8a42],al
  410b56:	add    DWORD PTR [ebp+0x6a50f6a9],ecx
  410b5c:	xor    al,0xe9
  410b5e:	jne    0x410b64
  410b60:	xchg   edi,eax
  410b61:	jmp    0xc70223b4
  410b66:	jae    0x410b85
  410b68:	sti    
  410b69:	push   ebx
  410b6a:	adc    cl,BYTE PTR [ebx-0xaa2d97]
  410b70:	mov    cl,0x1a
  410b72:	mov    ebx,edx
  410b74:	sub    edx,DWORD PTR [esi+ecx*1-0x18]
  410b78:	(bad)  
  410b79:	call   0x43d10b7b
  410b7e:	push   cs
  410b7f:	mov    ebp,esp
  410b81:	xor    eax,0x9cfc51fd
  410b86:	add    DWORD PTR [edi+0x7b],edx
  410b89:	push   ebx
  410b8a:	push   es
  410b8b:	push   ebx
  410b8c:	jnp    0x410bc4
  410b8e:	inc    edx
  410b8f:	test   DWORD PTR [edx+edx*2+0x3e9dffc0],eax
  410b96:	cli    
  410b97:	mov    bl,BYTE PTR [esi+0x554f255c]
  410b9d:	push   0xede45ac4
  410ba2:	adc    eax,DWORD PTR [eax]
  410ba4:	dec    eax
  410ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba6:	pop    ss
  410ba7:	cmp    BYTE PTR [ecx-0x62fffca1],0x5c
  410bae:	int3   
  410baf:	push   esi
  410bb0:	add    BYTE PTR ds:0x9d3fb0bc,al
  410bb6:	and    DWORD PTR [edx+0x74],0xffffffdd
  410bba:	sub    ebx,DWORD PTR [edx]
  410bbc:	cli    
  410bbd:	or     eax,0x6d8b022b
  410bc2:	pop    esp
  410bc3:	dec    ecx
  410bc4:	cmp    ch,BYTE PTR [esi+0x28]
  410bc7:	jle    0x410b57
  410bc9:	popf   
  410bca:	sub    eax,DWORD PTR [edx]
  410bcc:	push   ebx
  410bcd:	into   
  410bce:	xchg   edx,eax
  410bcf:	(bad)  
  410bd0:	sti    
  410bd1:	es sub esp,ecx
  410bd4:	(bad)  
  410bd5:	in     eax,dx
  410bd6:	daa    
  410bd7:	jg     0x410b98
  410bd9:	ror    dl,1
  410bdb:	jp     0x410be2
  410bdd:	adc    dh,dl
  410bdf:	sub    edx,DWORD PTR [eax-0x32]
  410be2:	mov    ch,0x1
  410be4:	push   esi
  410be5:	xor    bh,bl
  410be7:	jne    0x6814e24a
  410bed:	sbb    eax,0x82ffc3fe
  410bf2:	sti    
  410bf3:	mov    al,0x3f
  410bf5:	popf   
  410bf6:	add    DWORD PTR [edx+0x6f],0xffffff9c
  410bfa:	sub    edi,DWORD PTR [ecx-0x9]
  410bfd:	mov    BYTE PTR [esi+ebp*4+0x27e62831],0x4f
  410c05:	and    BYTE PTR [esi-0x50150276],ch
  410c0b:	ror    BYTE PTR [eax+ebx*2-0x242c66fe],cl
  410c12:	xchg   esi,eax
  410c13:	pusha  
  410c14:	jp     0x410c16
  410c16:	call   0x617f31a7
  410c1b:	push   edx
  410c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1d:	add    ebx,DWORD PTR [ebp+0x12802e02]
  410c23:	and    BYTE PTR ds:0xe9038a26,bh
  410c29:	add    esi,DWORD PTR [ebp-0x5cd9d4e8]
  410c2f:	mov    ebp,gs
  410c31:	into   
  410c32:	fwait
  410c33:	mov    bl,0xf0
  410c35:	jp     0x410c10
  410c37:	sbb    ah,BYTE PTR [ecx-0x5]
  410c3a:	ficomp DWORD PTR [edi]
  410c3c:	mov    bh,0xfb
  410c3e:	pop    ss
  410c3f:	or     DWORD PTR [edi+0x110aea26],ebx
  410c45:	pop    edi
  410c46:	sbb    eax,0xc97ae902
  410c4b:	push   ds
  410c4c:	lods   al,BYTE PTR ds:[esi]
  410c4d:	inc    DWORD PTR [edi+0x1f4cdd42]
  410c53:	inc    ebx
  410c54:	inc    ecx
  410c55:	cmc    
  410c56:	or     eax,DWORD PTR [ebx-0x40]
  410c59:	lods   al,BYTE PTR ds:[esi]
  410c5a:	inc    edi
  410c5b:	and    ch,cl
  410c5d:	(bad)
  410c60:	scas   eax,DWORD PTR es:[edi]
  410c61:	inc    ecx
  410c62:	ror    DWORD PTR [ebx-0x60b97c34],1
  410c68:	jmp    0x16f4a970
  410c6d:	int    0xe7
  410c6f:	add    ch,al
  410c71:	add    ebx,DWORD PTR [ebp+0x1e776bb3]
  410c77:	push   ds
  410c78:	xchg   ebp,eax
  410c79:	and    eax,0x131f6d00
  410c7e:	clc    
  410c7f:	pop    ss
  410c80:	adc    esi,DWORD PTR [ecx-0x2]
  410c83:	push   eax
  410c84:	pop    ds
  410c85:	sbb    BYTE PTR [eax],dl
  410c87:	sbb    BYTE PTR [ebx-0x1],al
  410c8a:	cld    
  410c8b:	call   0x9f1e7114
  410c90:	sub    edx,DWORD PTR [ebx]
  410c92:	je     0x410cee
  410c94:	cmp    esp,0x5e
  410c97:	js     0x410c68
  410c99:	imul   ebp,ecx,0x41fe481d
  410c9f:	sbb    al,0x22
  410ca1:	inc    BYTE PTR [esi+0x36]
  410ca4:	(bad)  
  410ca5:	or     esi,DWORD PTR [edx-0x4d]
  410ca8:	mov    ah,0x8c
  410caa:	fs sbb eax,0xce2efe1e
  410cb0:	and    BYTE PTR [ecx+eax*1+0x6b],dh
  410cb4:	and    BYTE PTR [edi-0xb],cl
  410cb7:	lea    esp,[eax]
  410cb9:	test   BYTE PTR [ecx],ch
  410cbb:	dec    ebp
  410cbc:	push   es
  410cbd:	mov    DWORD PTR [esi+edx*4-0x58bedd5],ecx
  410cc4:	cmp    ebp,0xfffffffe
  410cc7:	mov    ecx,0xa96a56cf
  410ccc:	and    bh,ah
  410cce:	xchg   ebp,eax
  410ccf:	mov    esp,0x1b70fe20
  410cd4:	test   DWORD PTR [edx-0x73719219],0xfe20826d
  410cde:	cmp    BYTE PTR [eax],al
  410ce0:	js     0x410c78
  410ce2:	sbb    ebx,DWORD PTR [edi]
  410ce4:	or     bh,0x13
  410ce7:	ficom  WORD PTR fs:[esi-0x7c549bef]
  410cee:	sti    
  410cef:	scas   al,BYTE PTR es:[edi]
  410cf0:	jns    0x410cc1
  410cf2:	push   esi
  410cf3:	push   0xffffffd6
  410cf5:	and    bh,ah
  410cf7:	int    0xbc
  410cf9:	and    dh,bh
  410cfb:	bound  esi,QWORD PTR [esi+0x4b5c058c]
  410d01:	sbb    edx,DWORD PTR [eax+0x0]
  410d04:	and    esi,DWORD PTR [eax+0xe]
  410d07:	push   esi
  410d08:	jae    0x410d3d
  410d0a:	push   cs
  410d0b:	test   DWORD PTR [edi+ebp*2],esi
  410d0e:	add    al,BYTE PTR [ebx-0x75011567]
  410d14:	retf   0x4b97
  410d17:	clc    
  410d18:	adc    eax,0xa1473e6
  410d1d:	out    0x4e,al
  410d1f:	adc    BYTE PTR [ecx],bh
  410d21:	ret    
  410d22:	jb     0x410d28
  410d24:	inc    edi
  410d25:	xor    dh,0x0
  410d28:	into   
  410d29:	js     0x410cb6
  410d2b:	jne    0x410d65
  410d2d:	dec    ebx
  410d2e:	out    0xad,al
  410d30:	jb     0x410d35
  410d32:	add    BYTE PTR [edx+0x37],ch
  410d35:	xchg   ebp,eax
  410d36:	jae    0x410d20
  410d38:	pop    esp
  410d39:	cli    
  410d3a:	mov    al,ds:0x8b0274fe
  410d3f:	push   ebp
  410d40:	mov    WORD PTR [edx+0x44007546],gs
  410d46:	add    al,BYTE PTR [ebp+0xdd1efff]
  410d4c:	inc    ebp
  410d4d:	imul   esp,DWORD PTR [eax-0x4dc7f030],0xffffff81
  410d54:	jge    0x410d92
  410d56:	pop    es
  410d57:	mov    ecx,eax
  410d59:	call   0x5c8e9a63
  410d5e:	xchg   BYTE PTR [ebx+0xc],bh
  410d61:	xor    al,0x5c
  410d63:	or     eax,0x8af28945
  410d68:	jne    0x410d0e
  410d6a:	push   esp
  410d6b:	dec    edi
  410d6c:	jmp    FWORD PTR [ecx-0x1e]
  410d6f:	dec    esi
  410d70:	jmp    FWORD PTR [ecx+0xe]
  410d73:	lea    eax,[ebp-0x78]
  410d76:	push   esi
  410d77:	std    
  410d78:	xor    ebx,DWORD PTR ss:[esi+edi*2]
  410d7c:	adc    bl,BYTE PTR [ebp-0x1a74fc15]
  410d82:	mov    al,ds:0x7137e749
  410d87:	and    bh,dh
  410d89:	push   ds
  410d8a:	push   0x2770feff
  410d8f:	sub    dl,BYTE PTR [ebx]
  410d91:	cmp    ch,BYTE PTR [ebp+0x350fe22]
  410d97:	sub    al,0xb
  410d99:	cli    
  410d9a:	mov    esp,0x2db55622
  410d9f:	imul   edi,esi,0x5ac06cc2
  410da5:	in     al,0xe9
  410da7:	(bad)  
  410da8:	inc    DWORD PTR [eax]
  410daa:	dec    eax
  410dab:	nop
  410dac:	das    
  410dad:	cmp    BYTE PTR [ecx-0x62fffa51],0x78
  410db4:	mov    eax,0x978c0556
  410db9:	aas    
  410dba:	popf   
  410dbb:	jae    0x410d6f
  410dbd:	je     0x410d9c
  410dbf:	sub    ebp,DWORD PTR [edx]
  410dc1:	(bad)  
  410dc2:	repz sub al,BYTE PTR [edx]
  410dc5:	mov    ebp,DWORD PTR [ebp+0x58]
  410dc8:	cmp    eax,0xdef3e888
  410dcd:	repnz call 0x8d2b:0x9d0022af
  410dd5:	add    eax,0x55b52ac7
  410dda:	and    al,0xde
  410ddc:	sbb    edi,esi
  410dde:	in     eax,dx
  410ddf:	jmp    0x410d69
  410de1:	mov    edi,0x3ca692
  410de6:	popf   
  410de7:	sub    ecx,DWORD PTR [ebp+0x2fee2005]
  410ded:	push   eax
  410dee:	mov    bh,0x25
  410df0:	mov    eax,0x8737cdfe
  410df5:	mov    edi,0x496c02aa
  410dfa:	popf   
  410dfb:	add    ch,cl
  410dfd:	sub    al,0x3f
  410dff:	add    ebp,ecx
  410e01:	add    edx,DWORD PTR [esi]
  410e03:	(bad)  
  410e04:	mov    WORD PTR [esi+0x181b8fa2],cs
  410e0a:	dec    esp
  410e0b:	mov    dl,0x7d
  410e0d:	mov    ah,0x0
  410e0f:	mov    dl,0x87
  410e11:	test   al,0x12
  410e13:	sbb    BYTE PTR [edi-0x2462fc19],al
  410e19:	ret    
  410e1a:	pop    ss
  410e1b:	mov    ds:0x9d04dc86,eax
  410e20:	add    ah,BYTE PTR [edx-0x38]
  410e23:	(bad)  
  410e24:	mov    al,ah
  410e26:	popa   
  410e27:	mov    edx,0x4b03e901
  410e2c:	(bad)  
  410e2d:	push   ebx
  410e2e:	sub    DWORD PTR [eax+0x3ab5351c],0x12
  410e35:	jmp    0x25f3bb12
  410e3a:	mov    ah,0xae
  410e3c:	test   DWORD PTR [eax],ebp
  410e3e:	xchg   edi,eax
  410e3f:	mov    eax,ds:0x7713b389
  410e44:	lock pop ebx
  410e46:	mov    dl,bh
  410e48:	sbb    al,0x5
  410e4a:	and    ah,dl
  410e4c:	scas   eax,DWORD PTR es:[edi]
  410e4d:	imul   ecx,DWORD PTR [ebx+0x6b],0x6323102b
  410e54:	sbb    al,0x5f
  410e56:	enter  0x884a,0x2b
  410e5a:	and    BYTE PTR [edi],ah
  410e5c:	or     esi,DWORD PTR [edi]
  410e5e:	(bad)  
  410e5f:	xor    DWORD PTR [ebx-0x4ebcde2d],eax
  410e65:	inc    eax
  410e66:	adc    al,0x9f
  410e68:	rcr    ah,1
  410e6a:	mov    bl,0x33
  410e6c:	mov    dl,0xd4
  410e6e:	xchg   dl,ch
  410e70:	xchg   esi,eax
  410e71:	(bad)  
  410e72:	in     al,dx
  410e73:	add    BYTE PTR [ecx+0x1d],cl
  410e76:	jmp    0xbca4:0x7f872bdb
  410e7d:	sbb    al,0x4f
  410e7f:	cmp    ah,BYTE PTR [eax]
  410e81:	inc    esp
  410e82:	inc    BYTE PTR [ecx-0x7101c48c]
  410e88:	sub    BYTE PTR [ecx+ebp*2],dl
  410e8b:	adc    BYTE PTR [edx],ah
  410e8d:	xchg   edi,eax
  410e8e:	and    DWORD PTR [ecx],0xffffffb9
  410e91:	mov    cl,0xfc
  410e93:	jmp    0xf4886936
  410e98:	ficomp WORD PTR [ebx]
  410e9a:	mov    DWORD PTR [ecx],edi
  410e9c:	lock sbb BYTE PTR [ebx-0x15],dh
  410ea0:	sbb    DWORD PTR ds:0x88aea48a,esi
  410ea6:	je     0x410ef9
  410ea8:	fmul   DWORD PTR [eax+0xe]
  410eab:	lods   eax,DWORD PTR ds:[esi]
  410eac:	data16 fdiv st,st(2)
  410eaf:	mov    ch,0x98
  410eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb2:	cmp    bh,dl
  410eb4:	or     al,BYTE PTR [edi]
  410eb6:	mov    eax,0xffdb3229
  410ebb:	mov    edx,0xa48ccb4f
  410ec0:	and    cl,bl
  410ec2:	push   ebp
  410ec3:	push   ss
  410ec4:	mov    bl,BYTE PTR [ebx-0x786156ef]
  410eca:	xlat   BYTE PTR ds:[ebx]
  410ecb:	je     0x410f27
  410ecd:	adc    esp,edi
  410ecf:	je     0x410e89
  410ed1:	sbb    al,0xfe
  410ed3:	push   0xffffffd5
  410ed5:	or     edi,edi
  410ed7:	je     0x410ed9
  410ed9:	scas   al,BYTE PTR es:[edi]
  410eda:	mov    bh,ch
  410edc:	shl    ebx,1
  410ede:	data16 (bad) 
  410ee0:	fiadd  WORD PTR ds:0x7d8cc623
  410ee6:	sbb    al,0x82
  410ee8:	iret   
  410ee9:	jge    0x410e81
  410eeb:	add    eax,DWORD PTR [eax]
  410eed:	(bad)  
  410eee:	fs repnz add dl,dh
  410ef2:	inc    ebx
  410ef3:	repnz add ah,BYTE PTR [eax+0x35]
  410ef7:	push   0xc2747972
  410efc:	pop    eax
  410efd:	sub    al,0xea
  410eff:	cli    
  410f00:	add    ah,dh
  410f02:	mov    eax,DWORD PTR [ebx-0x8]
  410f05:	les    ebp,FWORD PTR [esi-0xc]
  410f08:	add    ebp,DWORD PTR [esi+0x15]
  410f0b:	lock popw es
  410f0e:	cwde   
  410f0f:	adc    BYTE PTR [eax+0x71],ch
  410f12:	push   es
  410f13:	sahf   
  410f14:	adc    bl,BYTE PTR [edi+eiz*8+0x66f69d01]
  410f1b:	out    dx,al
  410f1c:	add    ebx,DWORD PTR [edx*1-0x71fb3977]
  410f23:	inc    ebx
  410f24:	cld    
  410f25:	pop    esp
  410f26:	inc    esp
  410f27:	sti    
  410f28:	jmp    FWORD PTR [ebx-0x7]
  410f2b:	inc    ebx
  410f2c:	hlt    
  410f2d:	shl    BYTE PTR [edx+0x31],0x6a
  410f31:	in     eax,0x8b
  410f33:	jae    0x410f05
  410f35:	or     al,0xe7
  410f37:	lods   al,BYTE PTR ds:[esi]
  410f38:	cld    
  410f39:	test   BYTE PTR [esi],al
  410f3b:	lea    eax,[ebp+0x0]
  410f3e:	mov    esp,0x77f66655
  410f43:	int3   
  410f44:	adc    DWORD PTR [eax-0x5c],ebp
  410f47:	inc    ah
  410f49:	adc    ebx,DWORD PTR [ecx+esi*8]
  410f4c:	add    edx,ecx
  410f4e:	push   edi
  410f4f:	outs   dx,BYTE PTR ds:[esi]
  410f50:	out    0x3,eax
  410f52:	lods   eax,DWORD PTR ds:[esi]
  410f53:	push   cs
  410f54:	data16 lock ja 0x410f1a
  410f58:	adc    DWORD PTR [ebx+0x45895582],ecx
  410f5e:	cmp    bh,ah
  410f60:	or     bh,ch
  410f62:	imul   edi,edx,0xfffffff4
  410f65:	inc    ebp
  410f66:	popf   
  410f67:	aaa    
  410f68:	or     esi,DWORD PTR [esi+ebp*2-0x3b]
  410f6c:	xchg   ebx,eax
  410f6d:	mov    WORD PTR [eax-0x4f1844a1],gs
  410f73:	push   edi
  410f74:	add    eax,DWORD PTR [eax]
  410f76:	adc    bh,ah
  410f78:	sbb    ecx,DWORD PTR [edi-0x7b]
  410f7b:	push   ecx
  410f7c:	add    ch,BYTE PTR [edx]
  410f7e:	test   eax,0xb40213f3
  410f83:	rsm    
  410f85:	hlt    
  410f86:	sahf   
  410f87:	inc    ecx
  410f88:	mul    BYTE PTR [edi+0x4]
  410f8b:	sub    eax,0x9b8513ef
  410f90:	add    ch,BYTE PTR [eax]
  410f92:	xchg   ecx,eax
  410f93:	xchg   esp,eax
  410f94:	inc    ebp
  410f95:	dec    edi
  410f96:	push   ss
  410f97:	out    0x1f,eax
  410f99:	out    0xee,eax
  410f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f9c:	push   ds
  410f9d:	(bad)  
  410f9e:	es aaa 
  410fa0:	sub    dh,BYTE PTR [edx]
  410fa2:	add    dh,ah
  410fa4:	xchg   esp,eax
  410fa5:	enter  0x16fb,0x24
  410fa9:	mov    dl,0xfe
  410fab:	dec    esp
  410fac:	and    ecx,DWORD PTR [ecx+0xb94c144]
  410fb2:	lea    edx,[eax-0x29]
  410fb5:	mov    cl,0x4f
  410fb7:	mov    ds:0x5d84f67a,al
  410fbc:	cmp    BYTE PTR [esi+0x1ee09347],al
  410fc2:	mov    ah,al
  410fc4:	pop    es
  410fc5:	mov    eax,DWORD PTR [edi]
  410fc7:	in     eax,dx
  410fc8:	lock mov ah,0x7
  410fcb:	and    DWORD PTR es:[esi+edi*8+0x5c8913cd],esi
  410fd3:	gs jne 0x410f95
  410fd6:	push   edi
  410fd7:	jne    0x410ffb
  410fd9:	sbb    bh,dh
  410fdb:	pop    edx
  410fdc:	mov    BYTE PTR [edx+ebx*2-0x4755fd9c],bh
  410fe3:	pop    ss
  410fe4:	es addr16 das 
  410fe7:	push   ss
  410fe8:	add    ch,cl
  410fea:	add    ecx,esi
  410fec:	mov    al,0x35
  410fee:	xchg   ecx,eax
  410fef:	test   eax,0x2716d03e
  410ff4:	add    ch,cl
  410ff6:	push   ds
  410ff7:	test   eax,0x6a456206
  410ffc:	lods   al,BYTE PTR ds:[esi]
  410ffd:	add    BYTE PTR [ebx+0x1f1c5721],bh
  411003:	or     ebx,DWORD PTR [ecx]
  411005:	nop
  411006:	test   DWORD PTR [eax],eax
  411008:	cli    
  411009:	sbb    BYTE PTR [ebp-0x5780aa44],dl
  41100f:	popf   
  411010:	mov    ebp,0x160c2b8d
  411015:	or     ch,BYTE PTR [eax+edi*4-0x6a]
  411019:	mov    ah,0x61
  41101b:	ss ins BYTE PTR es:[edi],dx
  41101d:	mov    dl,0x6d
  41101f:	je     0x41104f
  411021:	add    ch,cl
  411023:	add    esp,DWORD PTR [eax]
  411025:	inc    edx
  411026:	ror    DWORD PTR [ecx],cl
  411028:	push   ss
  411029:	(bad)  
  41102a:	in     al,0x2b
  41102c:	scas   al,BYTE PTR es:[edi]
  41102d:	and    bh,0x3
  411030:	mov    BYTE PTR [ebx],0xfa
  411033:	inc    ebx
  411034:	dec    ebx
  411035:	mov    eax,0x9dc4ca1
  41103a:	jmp    0x676837f7
  41103f:	das    
  411040:	pop    esi
  411041:	add    ebp,ecx
  411043:	add    ebp,esi
  411045:	mov    al,0xb5
  411047:	mov    al,BYTE PTR [ecx]
  411049:	or     edi,DWORD PTR [esi-0x7d4e7576]
  41104f:	stos   BYTE PTR es:[edi],al
  411050:	retf   0x732a
  411053:	push   ds
  411054:	imul   ebx,DWORD PTR [eax],0xffffff95
  411057:	mov    ch,0xf4
  411059:	test   al,0xff
  41105b:	pop    edi
  41105c:	gs sub al,0x57
  41105f:	add    DWORD PTR [esi],ebx
  411061:	sbb    esi,edi
  411063:	out    0x10,al
  411065:	scas   al,BYTE PTR es:[edi]
  411066:	imul   ecx,DWORD PTR [esi+0x16],0x31efbf
  41106d:	mov    DWORD PTR [esi+edi*8+0x55b090ce],edx
  411074:	push   ebx
  411075:	in     eax,dx
  411076:	mov    al,BYTE PTR [ecx+edx*8-0x1f]
  41107a:	pop    ds
  41107b:	gs mov dh,0xb8
  41107e:	sbb    BYTE PTR [esi+0x17],dl
  411081:	inc    edi
  411082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411083:	mov    BYTE PTR [ebx*2-0x5fbf1851],ch
  41108a:	sbb    dh,bh
  41108c:	fidiv  DWORD PTR [ebp+0x267d5cda]
  411092:	mov    edi,0xbe73f6f7
  411097:	inc    cl
  411099:	and    ebx,DWORD PTR [ecx]
  41109b:	push   cs
  41109c:	ins    DWORD PTR es:[edi],dx
  41109d:	out    dx,eax
  41109e:	add    al,BYTE PTR [eax]
  4110a0:	jmp    0x7120c7cc
  4110a5:	or     ah,BYTE PTR [eax+edi*1]
  4110a8:	mov    esp,0x620a9376
  4110ad:	repnz pop ds
  4110af:	mov    WORD PTR [edx+edi*2-0x610e50e1],fs
  4110b6:	add    cl,BYTE PTR [ecx+0x5cda8a9c]
  4110bc:	cmp    DWORD PTR ds:0x23ca69e9,esi
  4110c2:	mov    cs,edi
  4110c4:	shl    DWORD PTR [esi-0x61160523],0x17
  4110cb:	je     0x4110e6
  4110cd:	and    al,0x3d
  4110cf:	dec    edi
  4110d0:	add    DWORD PTR [eax],0xffffffa2
  4110d3:	mov    ebx,0xa321008c
  4110d8:	out    0xb8,al
  4110da:	fwait
  4110db:	cmc    
  4110dc:	std    
  4110dd:	pop    ecx
  4110de:	sub    eax,0xbfe04388
  4110e3:	int    0xe6
  4110e5:	or     BYTE PTR [ebx+eax*1+0x0],0x33
  4110ea:	pop    edi
  4110eb:	div    BYTE PTR [ebx-0x8]
  4110ee:	mov    edi,0x84127e38
  4110f3:	(bad)  
  4110f4:	(bad)  
  4110f5:	xlat   BYTE PTR ds:[ebx]
  4110f6:	popf   
  4110f7:	push   edi
  4110f8:	div    BYTE PTR [ebx+ebp*2-0x7f]
  4110fc:	test   BYTE PTR [ecx],0xd2
  4110ff:	je     0x41108a
  411101:	enter  0xe485,0xff
  411105:	push   esp
  411107:	xor    BYTE PTR [edi+0x5],0xcd
  41110b:	add    edi,0x5f6fc5fe
  411111:	cdq    
  411112:	ffreep st(0)
  411114:	iret   
  411115:	clc    
  411116:	ins    DWORD PTR es:[edi],dx
  411117:	inc    eax
  411118:	into   
  411119:	jne    0x411113
  41111b:	xor    DWORD PTR [esi+0x5feac9eb],edi
  411121:	mov    ds:0x4587f643,eax
  411126:	mov    BYTE PTR [edx],bh
  411128:	shl    DWORD PTR [ebx+edi*8-0x77],0xc6
  41112d:	mov    ecx,DWORD PTR [ecx]
  41112f:	sti    
  411130:	out    0x34,al
  411132:	gs idiv ch
  411135:	test   BYTE PTR [eax],al
  411137:	je     0x4111a8
  411139:	das    
  41113a:	(bad)  
  41113b:	stc    
  41113c:	retf   0x534e
  41113f:	aaa    
  411140:	push   ebx
  411141:	std    
  411142:	jne    0x4111b4
  411144:	test   DWORD PTR [ebx-0x30],eax
  411147:	inc    edi
  411148:	push   edx
  411149:	std    
  41114a:	adc    eax,0x3e11d4
  41114f:	popf   
  411150:	test   al,0x1a
  411152:	add    al,ch
  411154:	or     al,0x1b
  411156:	je     0x4111b1
  411158:	xchg   ecx,eax
  411159:	(bad)
  41115c:	lahf   
  41115d:	cmp    edi,esi
  41115f:	pop    edx
  411160:	or     eax,0x5f24cb94
  411165:	push   ss
  411166:	(bad)  
  411167:	mov    al,0x83
  411169:	cmc    
  41116a:	aas    
  41116b:	popf   
  41116c:	xor    al,0x90
  41116e:	rol    DWORD PTR [ebp-0x1a],cl
  411171:	data16 (bad) 
  411173:	xor    al,dl
  411175:	lods   eax,DWORD PTR ds:[esi]
  411176:	mov    eax,?
  411178:	call   FWORD PTR [edx]
  41117a:	(bad)  
  41117b:	and    ah,ah
  41117d:	sub    esi,DWORD PTR [ecx+0x17]
  411180:	sub    al,0x2
  411182:	push   0xffffff8e
  411184:	mov    dh,0x90
  411186:	mov    bh,0x65
  411188:	jae    0x41112c
  41118a:	stc    
  41118b:	popf   
  41118c:	sub    ecx,DWORD PTR [ebp-0x375f0eac]
  411192:	(bad)  [esi+0x70475b58]
  411198:	jmp    0x41119d
  41119a:	ltr    WORD PTR [ecx+0x7b]
  41119e:	fmulp  st(2),st
  4111a0:	stos   BYTE PTR es:[edi],al
  4111a1:	out    0x4b,eax
  4111a3:	cmp    BYTE PTR [eax+0x7f],dh
  4111a6:	pop    DWORD PTR [ecx]
  4111a8:	push   ss
  4111a9:	out    0x8e,al
  4111ab:	je     0x41115a
  4111ad:	pop    ecx
  4111ae:	mov    bl,0x4f
  4111b0:	mov    edx,0x188c2236
  4111b5:	or     BYTE PTR [ebx],bl
  4111b7:	(bad)  
  4111b8:	stos   BYTE PTR es:[edi],al
  4111b9:	mov    esp,0x4ea2eb90
  4111be:	or     dl,BYTE PTR [eax-0x66]
  4111c1:	adc    eax,0xf326d619
  4111c6:	mov    es,ebp
  4111c8:	jne    0x4111cc
  4111ca:	jo     0x4111ef
  4111cc:	adc    DWORD PTR ds:0x15964069,0xffffff9b
  4111d3:	(bad)  
  4111d5:	and    DWORD PTR [edx+0x1b],ecx
  4111d8:	imul   edx,DWORD PTR ds:0xcf17277b,0xffffffa8
  4111df:	neg    BYTE PTR [edx+0x5331f602]
  4111e5:	(bad)  
  4111e6:	clc    
  4111e7:	sbb    dh,BYTE PTR [eax+0x15]
  4111ea:	pop    ebx
  4111eb:	sub    al,0x43
  4111ed:	sub    al,0xdd
  4111ef:	nop
  4111f0:	push   esi
  4111f1:	adc    eax,0x1aa91abe
  4111f6:	int    0x31
  4111f8:	adc    al,0xbf
  4111fa:	lds    edi,FWORD PTR [edx+0x45afb9c0]
  411200:	add    BYTE PTR [esi+0x68f1c02],ah
  411206:	cmp    DWORD PTR [ebx+ebx*2-0x7116fd64],0x59
  41120e:	push   es
  41120f:	aaa    
  411210:	xchg   DWORD PTR [edx],edi
  411212:	out    0x38,al
  411214:	sbb    ebp,DWORD PTR [ecx+0xa]
  411217:	pop    esp
  411218:	and    BYTE PTR [edx+0x17],0x85
  41121c:	sbb    dl,BYTE PTR [edx-0x75]
  41121f:	sub    edx,DWORD PTR [eax]
  411221:	ret    0x520a
  411224:	add    al,0x9d
  411226:	jg     0x4111d0
  411228:	or     ah,BYTE PTR [ecx]
  41122a:	sub    esp,edi
  41122c:	add    ebx,DWORD PTR [ebp-0x46349c79]
  411232:	adc    al,0x55
  411234:	mov    bl,0xba
  411236:	xchg   edx,eax
  411237:	int    0x4
  411239:	popf   
  41123a:	mov    DWORD PTR [eax],edi
  41123c:	mov    WORD PTR [ecx],gs
  41123e:	adc    ah,BYTE PTR [ebx+0x11]
  411241:	stos   DWORD PTR es:[edi],eax
  411242:	jle    0x411243
  411244:	sbb    BYTE PTR [ecx-0x639dfffe],bl
  41124a:	test   DWORD PTR [ebp+esi*8+0x49],ecx
  41124e:	scas   al,BYTE PTR es:[edi]
  41124f:	(bad)  
  411250:	jns    0x41123c
  411252:	adc    edi,esi
  411254:	jmp    0x644f6676
  411259:	int    0x2
  41125b:	add    cl,ch
  41125d:	adc    edi,DWORD PTR [edi-0x7a598df5]
  411263:	push   esp
  411264:	loope  0x411266
  411266:	or     ah,al
  411268:	(bad)  
  411269:	cwde   
  41126a:	push   edx
  41126b:	jg     0x41122c
  41126d:	test   bl,0x6c
  411270:	add    cl,ch
  411272:	sahf   
  411273:	scas   eax,DWORD PTR es:[edi]
  411274:	push   esi
  411275:	inc    ebx
  411276:	inc    DWORD PTR [esi+0x1be99174]
  41127c:	js     0x41123e
  41127e:	cdq    
  41127f:	add    cl,BYTE PTR [ebx-0x15756d4]
  411285:	bound  ebx,QWORD PTR [edi-0x3d]
  411288:	imul   ebx,edi,0x8c1a1c46
  41128e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41128f:	adc    al,0xfe
  411291:	adc    al,0xa9
  411293:	xchg   DWORD PTR [ecx+ebp*1],edi
  411296:	call   0xa9a3126e
  41129b:	or     al,0xda
  41129d:	jecxz  0x411240
  41129f:	adc    al,0xd6
  4112a1:	jg     0x411303
  4112a3:	add    al,0x84
  4112a5:	adc    eax,0x6a00029e
  4112aa:	sub    bh,ah
  4112ac:	call   edx
  4112ae:	std    
  4112af:	xchg   BYTE PTR [ebp+ebx*4-0x7],dh
  4112b3:	sbb    eax,DWORD PTR [eax+0x50]
  4112b6:	cdq    
  4112b7:	add    cl,BYTE PTR [ebx+0x787a2a4]
  4112bd:	add    BYTE PTR [ecx],ch
  4112bf:	arpl   si,dx
  4112c1:	push   edx
  4112c2:	psrlw  mm2,QWORD PTR [eax+0x50]
  4112c6:	retf   
  4112c7:	(bad)  
  4112c8:	xchg   edx,eax
  4112c9:	add    BYTE PTR [eax],al
  4112cb:	je     0x4112cc
  4112cd:	test   al,al
  4112cf:	and    esp,edi
  4112d1:	mov    dh,BYTE PTR [ebp-0x24]
  4112d4:	out    0x56,al
  4112d6:	jg     0x41125d
  4112d8:	dec    DWORD PTR [eax+0x2e59845]
  4112de:	adc    DWORD PTR [ecx],0xffffffeb
  4112e1:	(bad)  
  4112e2:	imul   ebp,DWORD PTR [esp+edi*2],0xe72c9073
  4112e9:	or     al,0xf9
  4112eb:	xor    al,0xff
  4112ed:	mov    al,BYTE PTR [ebp+0x48]
  4112f0:	xchg   BYTE PTR [esi],al
  4112f2:	lea    esi,[ecx-0x22]
  4112f5:	push   eax
  4112f6:	mov    esi,edx
  4112f8:	dec    esp
  4112f9:	dec    esi
  4112fa:	jmp    DWORD PTR [ebp+0x34fffea3]
  411300:	xchg   esp,eax
  411301:	mov    esi,0x73860975
  411306:	loopne 0x4112e4
  411308:	xor    edi,DWORD PTR [ebp+0x1]
  41130b:	hlt    
  41130c:	xchg   DWORD PTR [ebx-0x8],eax
  41130f:	das    
  411310:	adc    eax,DWORD PTR [ecx+0x69ff3c65]
  411316:	imul   edi,DWORD PTR [ecx-0x3c],0xfa1bff4e
  41131d:	push   esi
  41131e:	call   0x400a5f
  411323:	dec    edi
  411324:	test   dh,dh
  411326:	mov    esi,DWORD PTR [ecx+0x504589fa]
  41132c:	xchg   esp,eax
  41132d:	hlt    
  41132e:	mov    ecx,0x3e840c00
  411333:	add    bl,cl
  411335:	push   edx
  411336:	out    dx,eax
  411337:	test   DWORD PTR [ebp-0x33bbf829],ebx
  41133d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133e:	inc    edx
  41133f:	add    edx,DWORD PTR [esi+eiz*2]
  411342:	mov    bl,BYTE PTR ss:[ebp-0x598cbd5a]
  411349:	inc    ecx
  41134a:	xor    DWORD PTR [edi],0xffffff9d
  41134d:	push   edi
  41134e:	std    
  41134f:	mov    eax,0xffc26f5d
  411354:	ror    BYTE PTR [ebp-0x4f],1
  411357:	mov    WORD PTR [eax],ds
  411359:	dec    esp
  41135a:	pop    ss
  41135b:	(bad)  
  41135c:	push   0x4c
  41135e:	test   DWORD PTR [ebp+edx*4+0x6b],eax
  411362:	sub    bh,BYTE PTR [edi-0x7de9eec0]
  411368:	pop    ecx
  411369:	xor    BYTE PTR [edi],dl
  41136b:	je     0x4113b6
  41136d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41136e:	adc    bh,dh
  411370:	push   0x29
  411372:	nop
  411373:	idiv   DWORD PTR [edx]
  411375:	pop    ecx
  411376:	xor    ch,0xb2
  411379:	sbb    eax,0x5521dad0
  41137e:	push   es
  41137f:	test   BYTE PTR [eax],bl
  411381:	sbb    al,0x2
  411383:	add    BYTE PTR [edi-0x68b7733],al
  411389:	repz rcr edx,1
  41138c:	cmc    
  41138d:	iret   
  41138e:	sbb    edi,edi
  411390:	add    dl,BYTE PTR [ebp+0x2800f398]
  411396:	out    0xb,eax
  411398:	push   eax
  411399:	push   ds
  41139a:	popa   
  41139b:	or     edx,DWORD PTR [edi+0x16]
  41139e:	push   0xffffffb3
  4113a0:	mov    bl,BYTE PTR [eax+0x17]
  4113a3:	sub    ah,BYTE PTR [edx-0x7ce96f27]
  4113a9:	fisttp QWORD PTR [edi]
  4113ab:	add    dh,bh
  4113ad:	fiadd  WORD PTR ds:0x2488c95
  4113b3:	dec    ebp
  4113b4:	mov    esp,0x460c7c2
  4113b9:	popf   
  4113ba:	jg     0x411367
  4113bc:	or     ecx,DWORD PTR [ebp-0x47]
  4113bf:	popa   
  4113c0:	ds push edx
  4113c2:	jge    0x41136f
  4113c4:	pop    es
  4113c5:	test   DWORD PTR [esp+edi*1+0x28869317],eax
  4113cc:	nop
  4113cd:	pushf  
  4113ce:	adc    BYTE PTR [ecx],ch
  4113d0:	stos   BYTE PTR es:[edi],al
  4113d1:	bnd jg 0x41136f
  4113d4:	pop    ds
  4113d5:	rcr    BYTE PTR [edx],cl
  4113d7:	les    ebx,FWORD PTR [ebx]
  4113d9:	jb     0x4113ec
  4113db:	arpl   cx,ax
  4113dd:	mov    ds:0x588ab5b2,al
  4113e2:	mov    dl,0x71
  4113e4:	shl    DWORD PTR [esi+0x5317871a],0x11
  4113eb:	ins    BYTE PTR es:[edi],dx
  4113ec:	inc    esp
  4113ed:	into   
  4113ee:	add    al,0xef
  4113f0:	inc    edx
  4113f1:	push   ds
  4113f2:	sub    eax,0x973a065c
  4113f7:	lock mov al,BYTE PTR [eax]
  4113fa:	loope  0x41142a
  4113fc:	imul   ecx,DWORD PTR [ebx+0x2b],0x2339401a
  411403:	adc    ebp,eax
  411405:	nop
  411406:	mov    ds:0x1363821a,al
  41140b:	adc    DWORD PTR [ecx-0x70],esp
  41140e:	cli    
  41140f:	mov    al,0x11
  411411:	mov    ebx,DWORD PTR [ecx-0x2]
  411414:	jno    0x411421
  411416:	dec    ebp
  411417:	adc    DWORD PTR [edi],esi
  411419:	or     al,0x26
  41141b:	or     BYTE PTR [edi],bh
  41141d:	pop    ss
  41141e:	pop    edx
  41141f:	cli    
  411420:	fld    DWORD PTR [ebx+0x40]
  411423:	cmp    ebp,DWORD PTR [edx-0x572a62f5]
  411429:	ret    
  41142a:	fdiv   st(5),st
  41142c:	(bad)  
  41142d:	call   0x692c903f
  411432:	jp     0x4114ad
  411434:	add    ecx,ebp
  411436:	sahf   
  411437:	aad    0xbf
  411439:	and    esp,ebx
  41143b:	or     BYTE PTR [ebx-0x1a],dl
  41143e:	sub    eax,0x15b65551
  411443:	push   esi
  411444:	jae    0x41148c
  411446:	mov    bl,0x10
  411448:	(bad)  
  411449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41144a:	mov    BYTE PTR [ebx+0x74],0xa9
  41144e:	sahf   
  41144f:	cmp    DWORD PTR [edi-0x9a64972],0xffffffe9
  411456:	sahf   
  411457:	pushf  
  411458:	pusha  
  411459:	ins    BYTE PTR es:[edi],dx
  41145a:	or     eax,0x15740
  41145f:	repz sbb bh,bh
  411462:	call   0x74905a7e
  411467:	sbb    eax,0xa8fefe94
  41146c:	mov    edi,0x29ee8ba
  411471:	sbb    BYTE PTR [ebp+eiz*8-0x65],0xfc
  411476:	out    0x90,al
  411478:	jl     0x41143c
  41147a:	rcr    eax,1
  41147c:	xchg   DWORD PTR [eax],eax
  41147e:	jmp    0xa67b25d0
  411483:	cwde   
  411484:	xchg   al,al
  411486:	jmp    0xc1c41729
  41148b:	test   al,0x0
  41148d:	test   BYTE PTR [ecx-0x5f],dh
  411490:	add    al,BYTE PTR [eax]
  411492:	inc    ebx
  411493:	aas    
  411494:	jg     0x41150a
  411496:	lods   eax,DWORD PTR ds:[esi]
  411497:	cmp    DWORD PTR [ebx+0x7c],edi
  41149a:	(bad)  
  41149b:	shl    DWORD PTR [ecx+0x7d9ee9f6],0x44
  4114a2:	xchg   ecx,eax
  4114a3:	sub    DWORD PTR [edx-0x78450000],ebx
  4114a9:	xor    DWORD PTR [ebx+edx*2-0xb],0xfffffffd
  4114ae:	push   eax
  4114af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b0:	jnp    0x41150d
  4114b2:	clc    
  4114b3:	cmp    eax,0xb9fff277
  4114b8:	jae    0x4114c8
  4114ba:	inc    eax
  4114bb:	les    edx,FWORD PTR [eax-0x77578a42]
  4114c1:	inc    ebx
  4114c2:	hlt    
  4114c3:	add    ah,ah
  4114c5:	pop    esi
  4114c6:	mov    esi,eax
  4114c8:	xor    al,0x88
  4114ca:	jnp    0x4114c4
  4114cc:	in     al,dx
  4114cd:	adc    al,0x88
  4114cf:	add    DWORD PTR [edx+esi*1-0x3],esi
  4114d3:	jmp    0x41154c
  4114d5:	add    dh,0xff
  4114d8:	in     eax,dx
  4114d9:	dec    edi
  4114da:	out    dx,al
  4114db:	cmp    DWORD PTR [ebp+esi*8-0x4e1ef8d],0xffffff8c
  4114e3:	inc    ebp
  4114e4:	test   BYTE PTR [ebp+0x4e],bl
  4114e7:	(bad)  
  4114e8:	jns    0x411529
  4114ea:	adc    al,0x40
  4114ec:	inc    esp
  4114ed:	add    dl,0xc
  4114f0:	push   ds
  4114f1:	push   ebp
  4114f2:	mov    esi,DWORD PTR [ebp-0x18]
  4114f5:	dec    esi
  4114f6:	out    0x9,al
  4114f8:	pop    ebx
  4114f9:	add    eax,DWORD PTR [eax]
  4114fb:	mov    edi,edx
  4114fd:	jnp    0x411542
  4114ff:	clc    
  411500:	rcl    DWORD PTR [eax-0x1a],0x89
  411504:	jns    0x4114dc
  411506:	mov    eax,DWORD PTR [ebp-0x20890]
  41150c:	lea    edx,[eax-0x2e]
  41150f:	lea    edi,[ecx+0x104587ee]
  411515:	mov    BYTE PTR [ebx-0x209be94],al
  41151b:	push   eax
  41151c:	or     DWORD PTR [eax-0x32],0x3bde9dc7
  411523:	add    al,0x9d
  411525:	sbb    DWORD PTR [edx],eax
  411527:	mov    DWORD PTR [eax],0x17960
  41152d:	popf   
  41152e:	sbb    DWORD PTR [ebx],edi
  411530:	inc    esp
  411531:	rcr    DWORD PTR [edx],0x2
  411534:	add    BYTE PTR [ebp-0x6365017f],bl
  41153a:	sbb    DWORD PTR [edi+0x43ebc15c],eax
  411540:	aaa    
  411541:	pusha  
  411542:	and    DWORD PTR [ebx],eax
  411544:	xchg   ebp,eax
  411545:	fstp   QWORD PTR [ebx-0x747a9cbe]
  41154b:	adc    dh,bh
  41154d:	xchg   edx,eax
  41154e:	ins    DWORD PTR es:[edi],dx
  41154f:	mov    ah,0x5a
  411551:	push   esp
  411552:	(bad)  
  411554:	(bad)  
  411555:	jmp    0x89c13bfa
  41155a:	cwde   
  41155b:	add    BYTE PTR [eax],al
  41155d:	popf   
  41155e:	dec    eax
  41155f:	lods   al,BYTE PTR ds:[esi]
  411560:	push   esi
  411561:	test   DWORD PTR [esi-0x7b],0x2a541d74
  411568:	cdq    
  411569:	push   ebx
  41156a:	sbb    al,0x2
  41156c:	xor    ecx,DWORD PTR [ebx+0x76]
  41156f:	test   DWORD PTR [ebp+ebx*1+0x6c],eax
  411573:	test   DWORD PTR [ebp+eax*8-0xa01ede2],edi
  41157a:	sbb    DWORD PTR [edx],eax
  41157c:	add    BYTE PTR ds:0x9c864234,bl
  411582:	sbb    eax,DWORD PTR [ebp-0x79d2dd09]
  411588:	or     bl,BYTE PTR [edi+0x3b021b]
  41158e:	fistp  DWORD PTR [esi+eax*4]
  411591:	add    bl,BYTE PTR [edi-0x2574fde5]
  411597:	jmp    0x4115ab
  411599:	adc    al,0x55
  41159b:	add    bh,bl
  41159d:	ret    
  41159e:	bnd jp 0x4115c4
  4115a1:	xor    al,0xa7
  4115a3:	inc    esp
  4115a4:	in     eax,0x87
  4115a6:	repz add ebp,ecx
  4115a9:	add    eax,DWORD PTR [edi-0x4c]
  4115ac:	jae    0x41153f
  4115ae:	fisubr WORD PTR [edx+0x2d0f190]
  4115b4:	jmp    0x6df3f137
  4115b9:	cdq    
  4115ba:	jmp    0xe8c2:0x8c4ffb0d
  4115c1:	into   
  4115c2:	loopne 0x4115c1
  4115c4:	ins    BYTE PTR es:[edi],dx
  4115c5:	dec    ebx
  4115c6:	popf   
  4115c7:	add    ch,cl
  4115c9:	mov    ecx,0xfb37ff0
  4115ce:	in     eax,dx
  4115cf:	jg     0x41157c
  4115d1:	and    ebp,ebp
  4115d3:	or     eax,0xfd428918
  4115d8:	arpl   WORD PTR [edi-0x63],dx
  4115db:	add    ch,cl
  4115dd:	jle    0x4115b8
  4115df:	and    dh,BYTE PTR [ecx-0x4]
  4115e2:	sbb    DWORD PTR [edi-0x48ee49d0],esi
  4115e8:	sbb    al,0xb6
  4115ea:	jmp    0x84b3:0x530b7b7b
  4115f1:	mov    BYTE PTR [eax],al
  4115f3:	or     bh,ch
  4115f5:	imul   ecx,DWORD PTR [esi+0x7ee9029d],0xffffffe1
  4115fc:	and    dh,BYTE PTR [ecx-0x5]
  4115ff:	and    DWORD PTR [edi-0x48e64a4c],esi
  411605:	test   al,0xb5
  411607:	mov    ah,0xf2
  411609:	adc    edx,DWORD PTR ss:[ecx-0x19673ad6]
  411610:	mov    cl,0xbd
  411612:	mov    ah,0xd2
  411614:	xchg   edi,edi
  411616:	test   al,0x9f
  411618:	xchg   DWORD PTR [ebx-0x18],ecx
  41161b:	sahf   
  41161c:	add    al,BYTE PTR [ebx+0xf015924]
  411622:	fld    DWORD PTR fs:[ecx]
  411625:	add    cl,ch
  411627:	arpl   si,ax
  411629:	shl    DWORD PTR [edx-0x2a],cl
  41162c:	jge    0x411682
  41162e:	xchg   ecx,eax
  41162f:	or     BYTE PTR [ebp+0xcbee8ff],ah
  411635:	dec    esi
  411636:	jbe    0x411641
  411638:	aad    0x84
  41163a:	test   eax,0xe81e879f
  41163f:	sahf   
  411640:	add    cl,BYTE PTR [ebx+0x77886a4]
  411646:	fs in  eax,0x44
  411649:	push   ecx
  41164a:	mov    bh,0x4e
  41164c:	or     eax,0x4c240d50
  411651:	push   cs
  411652:	fs sahf 
  411654:	add    DWORD PTR [eax],eax
  411656:	jmp    0xe808195b
  41165b:	bound  esi,QWORD PTR [esi+0x7f]
  41165e:	push   esp
  41165f:	inc    ebp
  411660:	sub    BYTE PTR [esi-0x44596b02],dh
  411666:	(bad)  
  411667:	mov    eax,0xdebf8722
  41166c:	and    eax,0x9ee8ff25
  411671:	ja     0x4116b7
  411673:	sbb    eax,0xb0ef96c9
  411678:	outs   dx,BYTE PTR ds:[esi]
  411679:	std    
  41167a:	test   DWORD PTR [esi],ebx
  41167c:	sahf   
  41167d:	add    al,BYTE PTR [eax]
  41167f:	jo     0x41168b
  411681:	and    BYTE PTR [edx+0x7b7e752c],cl
  411687:	call   0xd5b59026
  41168c:	out    0x94,al
  41168e:	add    eax,DWORD PTR [eax]
  411690:	or     edi,DWORD PTR [edx-0x6a]
  411693:	add    ah,dh
  411695:	dec    DWORD PTR [eax+0x458dd875]
  41169b:	or     BYTE PTR [edi],al
  41169d:	inc    ebp
  41169e:	jmp    0xd81:0x68ddf32
  4116a5:	adc    esi,edi
  4116a7:	add    al,ah
  4116a9:	jae    0x4116ca
  4116ab:	dec    ecx
  4116ac:	mov    cl,0x6b
  4116ae:	mov    DWORD PTR [eax-0x34],edx
  4116b1:	mov    es,eax
  4116b3:	call   0x3ef6b7
  4116b8:	xor    esi,eax
  4116ba:	jb     0x41171b
  4116bc:	add    BYTE PTR [esi+0x29ffc685],dl
  4116c2:	dec    ebx
  4116c3:	imul   al
  4116c5:	add    al,0xdd
  4116c7:	std    
  4116c8:	(bad)  
  4116c9:	ds fsubp st(1),st
  4116cc:	aaa    
  4116cd:	push   DWORD PTR [esi+0x6]
  4116d0:	mov    dl,0x44
  4116d2:	mov    es,esp
  4116d4:	call   0x3ef5fc
  4116d9:	icebp  
  4116da:	(bad)  
  4116db:	jb     0x41171a
  4116dd:	adc    ch,BYTE PTR [ebp-0x2]
  4116e0:	sub    BYTE PTR [ecx+esi*8-0xe23921a],0xfd
  4116e8:	mov    eax,DWORD PTR [ebx+eax*4+0x497a74f4]
  4116ef:	or     eax,0xf84b8b9b
  4116f5:	lods   al,BYTE PTR ds:[esi]
  4116f6:	jno    0x4116d0
  4116f8:	dec    DWORD PTR [ebx-0x73]
  4116fb:	(bad)  
  4116fc:	push   esi
  4116fd:	pushf  
  4116fe:	iret   
  4116ff:	fwait
  411700:	(bad)  
  411701:	cmp    esi,DWORD PTR [esi]
  411703:	hlt    
  411704:	test   BYTE PTR [edi+0x73],bl
  411707:	adc    dh,BYTE PTR [ebx]
  411709:	popf   
  41170a:	pop    ecx
  41170b:	call   0x2040:0x3d990bf
  411712:	(bad)  
  411713:	or     esp,edi
  411715:	jl     0x411776
  411717:	paddd  mm6,mm6
  41171a:	push   ss
  41171b:	shl    ebp,cl
  41171d:	cli    
  41171e:	in     eax,0x17
  411720:	mov    al,BYTE PTR [eax]
  411722:	pop    eax
  411723:	ins    DWORD PTR es:[edi],dx
  411724:	add    DWORD PTR [ecx+edi*8+0x8],0xffffffcb
  411729:	inc    esi
  41172a:	cdq    
  41172b:	and    al,0x84
  41172d:	push   0xffffffda
  41172f:	jnp    0x411740
  411731:	mov    bl,BYTE PTR [eax-0x7b]
  411734:	pcmpeqd mm2,QWORD PTR [ebp-0x3db00570]
  41173b:	jmp    0x89a2162b
  411740:	jnp    0x411786
  411742:	ror    DWORD PTR [edi+0x661eefbd],1
  411748:	or     esp,DWORD PTR es:[esi+0x21]
  41174c:	inc    DWORD PTR [ecx-0x1f0472f]
  411752:	es dec edi
  411754:	push   cs
  411755:	mov    ch,BYTE PTR [ebx+ebp*2+0x33effeb1]
  41175c:	jnp    0x4117a2
  41175e:	test   DWORD PTR [ebp+0x4b724ffa],esp
  411764:	cli    
  411765:	mov    ah,al
  411767:	iret   
  411768:	jnp    0x411771
  41176a:	int    0xf0
  41176c:	mov    cl,0x7
  41176e:	es pop edi
  411770:	push   cs
  411771:	dec    al
  411773:	jecxz  0x4117f0
  411775:	pop    es
  411776:	in     eax,dx
  411777:	or     BYTE PTR [eax+0x22571617],dh
  41177d:	mov    ah,BYTE PTR [ebp-0x5aaff095]
  411783:	add    dh,BYTE PTR [edx-0x37]
  411786:	add    BYTE PTR [esi],ah
  411788:	jle    0x41177a
  41178a:	mov    bl,0x23
  41178c:	mov    ah,0xe0
  41178e:	jp     0x411809
  411790:	or     al,BYTE PTR [edx-0x48]
  411793:	push   0x1a
  411795:	aaa    
  411796:	adc    al,0xb
  411798:	or     bh,BYTE PTR [ebp-0x24f62d67]
  41179e:	scas   eax,DWORD PTR es:[edi]
  41179f:	mov    edx,es
  4117a1:	call   0xafee6854
  4117a6:	inc    ebx
  4117a7:	push   ecx
  4117a8:	jge    0x411736
  4117aa:	test   esi,esi
  4117ac:	ds out 0x3,eax
  4117af:	popf   
  4117b0:	mov    ch,0x36
  4117b2:	mov    bh,0x3a
  4117b4:	loop   0x411793
  4117b6:	ret    
  4117b7:	retf   0x28a1
  4117ba:	test   DWORD PTR [edx+0x41d48102],0xaa7ae903
  4117c4:	jnp    0x4117a9
  4117c6:	and    esp,DWORD PTR [ecx]
  4117c8:	or     ch,ch
  4117ca:	xchg   DWORD PTR [esi],ebx
  4117cc:	add    al,0xe9
  4117ce:	add    eax,DWORD PTR [edi]
  4117d0:	stos   DWORD PTR es:[edi],eax
  4117d1:	pop    ebx
  4117d2:	cdq    
  4117d3:	bound  ebp,QWORD PTR [edx+0x28ed750]
  4117d9:	jmp    0xbbb8fd77
  4117de:	daa    
  4117df:	rcr    BYTE PTR [edx],cl
  4117e1:	cld    
  4117e2:	pop    ss
  4117e3:	jb     0x4117ee
  4117e5:	jno    0x4117ee
  4117e7:	push   ds
  4117e8:	lahf   
  4117e9:	adc    al,0x4
  4117eb:	add    BYTE PTR [esi],dl
  4117ed:	cmp    BYTE PTR [edi-0x48cd1680],dh
  4117f3:	mov    dh,0x53
  4117f5:	mov    dl,0xf4
  4117f7:	mov    BYTE PTR [edx],cl
  4117f9:	stc    
  4117fa:	arpl   ax,cx
  4117fc:	popf   
  4117fd:	add    al,BYTE PTR [eax]
  4117ff:	jmp    0x9cce18bb
  411804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411805:	mov    dl,0x56
  411807:	out    0xee,al
  411809:	call   0x7e64c192
  41180e:	xor    eax,ebp
  411810:	sahf   
  411811:	add    ch,BYTE PTR [edx+0x33]
  411814:	sbb    al,0x4e
  411816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411817:	(bad)  
  411818:	fwait
  411819:	or     BYTE PTR [edi-0x2f],dl
  41181c:	scas   eax,DWORD PTR es:[edi]
  41181d:	adc    al,0xff
  41181f:	call   0x6338d69b
  411824:	idiv   BYTE PTR [eax+0x1b9d38fe]
  41182a:	sti    
  41182b:	jmp    0x3cce1ace
  411830:	jge    0x4117e5
  411832:	dec    edi
  411833:	mov    cs,WORD PTR [ecx]
  411835:	cmc    
  411836:	test   BYTE PTR [ecx-0x16148235],ch
  41183c:	sahf   
  41183d:	add    cl,BYTE PTR [ebx+0x77c7d2c]
  411843:	pop    esp
  411844:	cmc    
  411845:	sbb    BYTE PTR [ecx-0x2f],dl
  411848:	into   
  411849:	out    dx,eax
  41184a:	aas    
  41184b:	jmp    0x6c51203e
  411850:	add    dh,bl
  411852:	clc    
  411853:	test   BYTE PTR [ebx],ah
  411855:	sahf   
  411856:	add    al,BYTE PTR [eax]
  411858:	das    
  411859:	push   ebp
  41185a:	or     DWORD PTR [eax],eax
  41185c:	out    dx,al
  41185d:	call   0x1ddb1720
  411862:	jg     0x41180b
  411864:	das    
  411865:	mov    ds:0x52934f08,eax
  41186a:	lods   eax,DWORD PTR ds:[esi]
  41186b:	mov    WORD PTR [esi+ebx*2+0x6],ds
  41186f:	(bad)  
  411870:	push   ss
  411871:	mov    dh,0xc2
  411873:	fisttp WORD PTR [esi]
  411875:	mov    ds:0xb90058aa,eax
  41187a:	ret    
  41187b:	or     eax,0x3ea8e
  411880:	add    BYTE PTR [edi+0x186aee3a],bh
  411886:	pop    ebp
  411887:	mov    edx,DWORD PTR [ebp+0x4c]
  41188a:	push   ebp
  41188b:	push   ecx
  41188c:	lea    ebp,[ecx-0xc0002fa]
  411892:	push   esp
  411893:	push   0x50cd7f00
  411898:	mov    ecx,eax
  41189a:	out    0x89,al
  41189c:	or     BYTE PTR [ebp+esi*8-0x4176f3b1],ah
  4118a3:	jae    0x411901
  4118a5:	pop    edx
  4118a6:	cmp    DWORD PTR [ebx-0x209bcf8],0x67f7100
  4118b0:	push   DWORD PTR [ebx]
  4118b2:	div    BYTE PTR [edx+0x18]
  4118b5:	add    bl,dh
  4118b7:	scas   al,BYTE PTR es:[edi]
  4118b8:	mov    ecx,DWORD PTR [eax]
  4118ba:	and    esi,esi
  4118bc:	std    
  4118bd:	data16 aaa 
  4118bf:	sti    
  4118c0:	ds je  0x41189a
  4118c3:	cmp    BYTE PTR [esi+0x6aed302],0x66
  4118ca:	cmp    ebx,ecx
  4118cc:	jae    0x4118bd
  4118ce:	fiadd  DWORD PTR [edx+0x1784036]
  4118d4:	xor    eax,eax
  4118d6:	stc    
  4118d7:	mov    esi,0x80113272
  4118dc:	push   es
  4118dd:	inc    ebx
  4118df:	cmc    
  4118e0:	dec    esi
  4118e1:	cmp    DWORD PTR [ebp+esi*8-0x1957b275],0xffffff94
  4118e9:	fadd   st,st(3)
  4118eb:	cmc    
  4118ec:	add    al,0x8
  4118ef:	pop    ss
  4118f0:	xor    eax,eax
  4118f2:	popf   
  4118f3:	add    DWORD PTR [edx+0x74],0x8cc219dd
  4118fa:	fadd   DWORD PTR ds:0x865811a
  411900:	or     ebp,edx
  411902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411903:	pushf  
  411904:	or     edi,DWORD PTR [ecx-0x57]
  411907:	push   ds
  411908:	jg     0x411901
  41190a:	pushf  
  41190b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190c:	(bad)  
  41190d:	std    
  41190e:	fsubr  DWORD PTR [eax]
  411910:	retf   0x1a5c
  411913:	and    BYTE PTR [ebp+eax*2-0x75f4c7ee],al
  41191a:	add    BYTE PTR [eax+0x49],ah
  41191d:	ja     0x411926
  41191f:	ins    DWORD PTR es:[edi],dx
  411920:	dec    eax
  411921:	mov    cl,0x7
  411923:	es into 
  411925:	and    ecx,DWORD PTR [edx+0x7774558]
  41192b:	dec    ebp
  41192c:	pusha  
  41192d:	mov    cl,0x7
  41192f:	push   ss
  411930:	fimul  WORD PTR [ebx]
  411932:	mov    ah,BYTE PTR [ebp-0x52aff337]
  411938:	sahf   
  411939:	inc    edx
  41193a:	mov    ah,BYTE PTR [eax-0x7f]
  41193d:	ja     0x411946
  41193f:	xchg   edx,eax
  411940:	popf   
  411941:	sbb    al,0xfd
  411943:	mov    edx,0x4cfeb28f
  411948:	and    DWORD PTR [edi+0x6],esi
  41194b:	push   edx
  41194c:	mov    al,ds:0x461607b2
  411951:	push   ss
  411952:	imul   esi,edx,0x83b61a53
  411958:	mov    ch,0xb
  41195a:	pop    esi
  41195b:	jmp    0x4119bd
  41195d:	cmp    edx,eax
  41195f:	in     al,dx
  411960:	mov    bl,0x46
  411962:	jae    0x411900
  411964:	sbb    ecx,esi
  411966:	add    ebp,edi
  411968:	and    eax,0x382ff98
  41196d:	cmp    al,0x9
  41196f:	arpl   WORD PTR [esi],ax
  411971:	adc    dl,cl
  411973:	pop    eax
  411974:	push   es
  411975:	adc    eax,0x891aa418
  41197a:	pop    ss
  41197b:	dec    ebx
  41197c:	push   es
  41197d:	adc    BYTE PTR ds:0xfd064700,ah
  411983:	sbb    bl,cl
  411985:	adc    ch,dh
  411987:	or     eax,esp
  411989:	add    eax,DWORD PTR [ecx]
  41198b:	dec    ebx
  41198c:	and    al,0x6
  41198e:	in     eax,0xad
  411990:	pop    edi
  411991:	scas   al,BYTE PTR es:[edi]
  411992:	jno    0x4119a0
  411994:	and    DWORD PTR [ecx],esi
  411996:	pop    esp
  411997:	frstor [ebx+0x21a1ea4d]
  41199d:	inc    ebx
  41199e:	cmp    al,0xe5
  4119a0:	pop    ds
  4119a1:	or     edi,eax
  4119a3:	nop
  4119a4:	xchg   ecx,eax
  4119a5:	cmc    
  4119a6:	jge    0x41196e
  4119a8:	pushf  
  4119a9:	xor    DWORD PTR [eax+0x69ff6e8c],0xe58f4a0c
  4119b3:	sbb    ebp,DWORD PTR [ebp+0x7203e902]
  4119b9:	inc    ecx
  4119ba:	add    BYTE PTR [edx+ecx*8-0x205517fb],0x81
  4119c2:	lds    eax,FWORD PTR [ebx]
  4119c4:	inc    edi
  4119c5:	cli    
  4119c6:	adc    BYTE PTR [ebx-0x30572e21],ch
  4119cc:	fimul  DWORD PTR [esi-0x714052e]
  4119d2:	(bad)  
  4119d3:	into   
  4119d4:	bound  ecx,QWORD PTR [esi+0xccfb1ca]
  4119da:	imul   ecx,DWORD PTR ds:0xfad98fba,0x86eab84b
  4119e4:	add    BYTE PTR [ebp-0x76],dh
  4119e7:	(bad)  
  4119e8:	mov    esp,0x91f8819d
  4119ed:	or     eax,0x36ed69fe
  4119f2:	add    al,dl
  4119f4:	mov    edx,0x64094c57
  4119f9:	add    BYTE PTR ds:0xfa9a6a65,dh
  4119ff:	jbe    0x4119f2
  411a01:	fwait
  411a02:	or     al,0x8c
  411a04:	jne    0x411997
  411a06:	xor    eax,0xaab5c9ea
  411a0b:	mov    esi,0x4082387
  411a10:	pop    esi
  411a11:	and    DWORD PTR [eax],eax
  411a13:	imul   BYTE PTR [edx+ebp*1+0x12]
  411a17:	enter  0x17c2,0x76
  411a1b:	pop    eax
  411a1c:	outs   dx,BYTE PTR ds:[esi]
  411a1d:	cmp    al,0x80
  411a1f:	cli    
  411a20:	in     al,dx
  411a21:	das    
  411a22:	clc    
  411a23:	add    dh,BYTE PTR [edi-0x7f0f6e8b]
  411a29:	sbb    eax,DWORD PTR [ebx+0x1]
  411a2c:	ret    0xa85f
  411a2f:	gs ins BYTE PTR es:[edi],dx
  411a31:	mov    eax,ds:0x966a0291
  411a36:	add    cl,BYTE PTR [ecx+0x694004de]
  411a3c:	loope  0x411a87
  411a3e:	cld    
  411a3f:	push   edi
  411a40:	stos   BYTE PTR es:[edi],al
  411a41:	or     al,0xd0
  411a43:	cmc    
  411a44:	ret    0x916c
  411a47:	inc    ebp
  411a48:	out    0x0,al
  411a4a:	dec    edi
  411a4b:	sti    
  411a4c:	gs mov dl,0x64
  411a4f:	xchg   ecx,eax
  411a50:	cmp    eax,0xf880591a
  411a55:	or     al,0x2c
  411a57:	jmp    FWORD PTR [ecx-0x15]
  411a5a:	inc    esi
  411a5b:	sbb    DWORD PTR [esi],edx
  411a5d:	push   0xffffff99
  411a5f:	fdiv   DWORD PTR [eax+eax*1+0x61]
  411a63:	in     eax,0xe
  411a65:	popw   es
  411a67:	div    DWORD PTR [edi]
  411a69:	ja     0x411abc
  411a6b:	gs hlt 
  411a6d:	or     cl,BYTE PTR [ebx-0x4f]
  411a70:	(bad)  
  411a71:	lea    eax,[eax]
  411a73:	or     cl,dh
  411a75:	add    DWORD PTR [esi+0x3eb70efd],0x7d
  411a7c:	div    DWORD PTR [eax]
  411a7e:	daa    
  411a7f:	jecxz  0x411ae5
  411a81:	test   DWORD PTR [ebp+0x6c830173],ecx
  411a87:	(bad)  
  411a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a89:	add    dh,BYTE PTR [eax-0x60210900]
  411a8f:	cld    
  411a90:	imul   ecx,DWORD PTR [eax],0x5e3587dc
  411a96:	inc    edi
  411a97:	push   esp
  411a98:	mov    esp,ebp
  411a9a:	jg     0x411adf
  411a9c:	or     al,BYTE PTR [ecx-0xf4b8]
  411aa2:	hlt    
  411aa3:	push   ecx
  411aa4:	mov    esp,0x600
  411aa9:	push   edi
  411aaa:	in     eax,dx
  411aab:	das    
  411aac:	jo     0x411b27
  411aae:	add    BYTE PTR [edx-0x58f78c07],dl
  411ab4:	out    0x66,al
  411ab6:	call   0xffd4:0x7d81fa3b
  411abd:	jae    0x411ae3
  411abf:	sbb    esi,DWORD PTR [esi+ecx*1-0x7d]
  411ac3:	push   ecx
  411ac4:	repnz cld 
  411ac6:	(bad)  
  411ac7:	cmp    edi,esi
  411ac9:	mov    WORD PTR [ebp-0x207d0],es
  411acf:	sbb    al,0x40
  411ad1:	inc    DWORD PTR [eax]
  411ad3:	mov    ah,0x86
  411ad5:	aam    0x8b
  411ad7:	iret   
  411ad8:	mov    eax,DWORD PTR [ebx+0x8ab9df4]
  411ade:	(bad)  
  411adf:	jne    0x411b13
  411ae1:	add    al,0x1
  411ae3:	popf   
  411ae4:	call   0x74bd:0x6bdc43cc
  411aeb:	mov    al,0x41
  411aed:	or     al,BYTE PTR [eax]
  411aef:	popf   
  411af0:	sbb    DWORD PTR [ebp+0x72],esi
  411af3:	xchg   ebp,eax
  411af4:	inc    ebx
  411af5:	pushf  
  411af6:	add    DWORD PTR [eax],ebp
  411af8:	data16 cli 
  411afa:	push   edi
  411afb:	inc    ebp
  411afc:	aas    
  411afd:	dec    edx
  411afe:	dec    BYTE PTR [edx-0x60]
  411b01:	mov    esi,0xfe588607
  411b06:	je     0x411b84
  411b08:	rcl    DWORD PTR [ecx],0x0
  411b0b:	popf   
  411b0c:	sbb    DWORD PTR [eax-0x10735cc8],esp
  411b12:	push   cs
  411b13:	add    dl,ch
  411b15:	adc    bh,BYTE PTR [ebx+0x4c]
  411b18:	test   eax,0x20007ac9
  411b1d:	fdivr  st,st(5)
  411b1f:	dec    edi
  411b20:	outs   dx,BYTE PTR ds:[esi]
  411b21:	inc    ecx
  411b22:	add    eax,0x523c0298
  411b27:	add    BYTE PTR [esi],al
  411b29:	pop    ss
  411b2a:	aam    0xbf
  411b2c:	push   edx
  411b2d:	jmp    0x411b69
  411b2f:	rcr    DWORD PTR [ecx-0xe7552e7],0x99
  411b36:	push   ss
  411b37:	pop    es
  411b38:	pushf  
  411b39:	sbb    DWORD PTR [edx],eax
  411b3b:	push   esi
  411b3c:	push   0xffffffac
  411b3e:	adc    BYTE PTR [eax],al
  411b40:	popf   
  411b41:	sbb    DWORD PTR [ebx-0x11],edi
  411b44:	push   ss
  411b45:	push   esp
  411b46:	mov    al,ds:0xfe0ad53a
  411b4b:	xor    ebp,ebx
  411b4d:	jg     0x411aee
  411b4f:	push   cs
  411b50:	repnz push edi
  411b52:	mov    dl,0xfe
  411b54:	sub    BYTE PTR [edx],al
  411b56:	icebp  
  411b57:	jbe    0x411b49
  411b59:	or     al,0xb9
  411b5b:	sbb    ebx,DWORD PTR [esi-0x64]
  411b5e:	push   esi
  411b5f:	or     ah,dh
  411b61:	add    al,BYTE PTR [edx]
  411b63:	or     al,0xeb
  411b65:	add    eax,0x8182b329
  411b6a:	test   eax,0x2f6a9d02
  411b6f:	add    bl,BYTE PTR [ebp-0x653ea3fe]
  411b75:	push   edx
  411b76:	xchg   ecx,eax
  411b77:	add    eax,0xff8bc300
  411b7c:	jbe    0x411b4e
  411b7e:	push   es
  411b7f:	scas   eax,DWORD PTR es:[edi]
  411b80:	inc    eax
  411b81:	mov    al,ds:0xd9b1a846
  411b86:	jmp    0x866b:0x23b5049
  411b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b8e:	add    bh,BYTE PTR [ebx-0x22]
  411b91:	sub    edi,DWORD PTR [eax-0x25]
  411b94:	test   cl,bh
  411b96:	cli    
  411b97:	in     eax,0x7
  411b99:	sbb    eax,DWORD PTR [ebx]
  411b9b:	ins    BYTE PTR es:[edi],dx
  411b9c:	or     DWORD PTR [edx],0x207d701
  411ba2:	jbe    0x411b8b
  411ba4:	add    al,0x9d
  411ba6:	mov    esp,0x29d01e7
  411bab:	ins    BYTE PTR es:[edi],dx
  411bac:	sub    edx,0x207b700
  411bb2:	mov    ah,0xe7
  411bb4:	add    al,0x9d
  411bb6:	mov    dl,0xe8
  411bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb9:	js     0x411b86
  411bbb:	test   eax,0x6256d2fc
  411bc0:	sbb    BYTE PTR ds:0x9d02ebef,bl
  411bc6:	add    bl,BYTE PTR [edx]
  411bc8:	scas   al,BYTE PTR es:[edi]
  411bc9:	sbb    eax,0x9d01e7fc
  411bce:	add    al,BYTE PTR [eax]
  411bd0:	sti    
  411bd1:	adc    BYTE PTR [edi+0x9ee18c],cl
  411bd7:	(bad)  
  411bd8:	pushw  ss
  411bda:	xacquire xchg DWORD PTR [eax+eax*1-0x2140c35e],ebp
  411be2:	inc    eax
  411be3:	test   BYTE PTR [ebx-0x1f],bh
  411be6:	sahf   
  411be7:	lea    eax,[esi]
  411be9:	jo     0x411c47
  411beb:	stc    
  411bec:	je     0x411bf5
  411bee:	call   0xfee9:0xfc6a0876
  411bf5:	cs call 0xfdff:0xb96c8d01
  411bfd:	push   ds
  411bfe:	mov    cl,0x19
  411c00:	add    al,ch
  411c02:	sahf   
  411c03:	ins    BYTE PTR es:[edi],dx
  411c04:	add    al,0xb3
  411c06:	lds    ecx,FWORD PTR [esi-0x8]
  411c09:	je     0x411c27
  411c0b:	jmp    0xe9dd1b0e
  411c10:	dec    esi
  411c11:	call   0x6cc01eb7
  411c16:	xchg   esi,eax
  411c17:	inc    ebp
  411c18:	aas    
  411c19:	aas    
  411c1a:	fdiv   QWORD PTR [ebp+0x1e]
  411c1d:	fisubr WORD PTR ds:0xb12c8b09
  411c23:	push   ecx
  411c24:	push   esi
  411c25:	pop    esp
  411c26:	jne    0x411c0d
  411c28:	cld    
  411c29:	(bad)  
  411c2a:	mov    ds:0x9eb943c8,eax
  411c2f:	add    al,0x0
  411c31:	jmp    0xaf3f84bc
  411c36:	fwait
  411c37:	test   eax,eax
  411c39:	sbb    al,0xd3
  411c3b:	inc    esi
  411c3c:	cmp    DWORD PTR [ebp*4+0xdaa277],edx
  411c43:	pop    esi
  411c44:	pop    edi
  411c45:	pop    ecx
  411c46:	mov    al,ds:0x55c
  411c4b:	das    
  411c4c:	aas    
  411c4d:	jmp    0x2083:0xe97d89f6
  411c54:	stc    
  411c55:	mov    al,BYTE PTR [ebp-0x40]
  411c58:	scas   al,BYTE PTR es:[edi]
  411c59:	mov    dh,BYTE PTR [ebx-0x40]
  411c5c:	jnp    0x411caf
  411c5e:	push   ds
  411c5f:	test   al,0xaf
  411c61:	mov    bh,BYTE PTR [ebp+0x7c]
  411c64:	(bad)  
  411c66:	add    edi,DWORD PTR [ebx-0x10aca94d]
  411c6c:	cmp    al,0x88
  411c6e:	inc    ebp
  411c6f:	test   al,0x1b
  411c71:	das    
  411c72:	int3   
  411c73:	jne    0x411c79
  411c75:	mov    eax,DWORD PTR [ebp-0x54]
  411c78:	mov    bl,0x67
  411c7a:	inc    eax
  411c7b:	adc    DWORD PTR [edx-0x3d600f7],0xfffffffe
  411c82:	adc    eax,0x3df200
  411c87:	mov    ecx,0xf73e7143
  411c8c:	test   DWORD PTR ds:[ebp+0x33],ecx
  411c90:	int3   
  411c91:	dec    esp
  411c92:	or     al,0xaa
  411c94:	out    0xe,al
  411c96:	mov    dh,0x9
  411c98:	or     DWORD PTR [edx+0x517a0c45],ecx
  411c9e:	adc    eax,0x811d414
  411ca3:	repnz mov edi,0x510080fe
  411ca9:	add    eax,0x3e087501
  411cae:	inc    esp
  411caf:	inc    DWORD PTR [eax*8-0x6dffb2c6]
  411cb6:	fimul  WORD PTR [ebp-0xb2f147]
  411cbc:	mov    ecx,0xc075fe0e
  411cc1:	push   es
  411cc2:	je     0x411ccc
  411cc4:	popf   
  411cc5:	cwde   
  411cc6:	in     eax,dx
  411cc7:	dec    ebx
  411cc8:	scas   eax,DWORD PTR es:[edi]
  411cc9:	sub    DWORD PTR [edi+edi*8],eax
  411ccc:	xor    BYTE PTR [ebp+0x77],bh
  411ccf:	ror    BYTE PTR [edx-0x80],cl
  411cd2:	nop
  411cd3:	sbb    eax,0xe7376471
  411cd8:	shl    BYTE PTR [ecx+eax*1+0x3ac7fa00],1
  411cdf:	shl    DWORD PTR [ecx+0x1fff78e9],0x51
  411ce6:	add    esi,DWORD PTR [ebx-0x6a]
  411ce9:	inc    sp
  411ceb:	jae    0x411c8f
  411ced:	cdq    
  411cee:	add    al,0x14
  411cf0:	cmp    eax,0x5fffc1db
  411cf5:	sahf   
  411cf6:	js     0x411ce3
  411cf8:	push   ds
  411cf9:	inc    ebp
  411cfa:	or     al,0x82
  411cfc:	dec    ecx
  411cfd:	cmc    
  411cfe:	mov    al,0x69
  411d00:	popf   
  411d01:	je     0x411d2f
  411d03:	mov    ah,al
  411d05:	icebp  
  411d06:	fdivp  st(6),st
  411d08:	inc    edx
  411d09:	nop
  411d0a:	add    al,0x4f
  411d0c:	add    BYTE PTR [edx],bh
  411d0e:	jle    0x411cfd
  411d10:	imul   ebx,DWORD PTR [ebp+0x2a0f8f00],0xa8fef57e
  411d1a:	loope  0x411d20
  411d1c:	adc    al,0xcd
  411d1e:	sti    
  411d1f:	sar    edi,0x1f
  411d22:	loope  0x411d28
  411d24:	je     0x411cc7
  411d26:	sbb    eax,DWORD PTR [edx+ebp*8-0x48]
  411d2a:	fdivr  DWORD PTR [esi-0x7e1662e9]
  411d30:	jmp    DWORD PTR ds:0x1e178dec
  411d36:	and    eax,0x6be207e0
  411d3b:	mov    ch,0x23
  411d3d:	test   eax,0x5e76a602
  411d42:	es out dx,eax
  411d44:	mov    bl,0x5a
  411d46:	push   edx
  411d47:	add    DWORD PTR [esi*4-0x62fc1615],eax
  411d4e:	mov    dl,0xe8
  411d50:	test   al,0x27
  411d52:	in     eax,0x1c
  411d54:	inc    edx
  411d55:	mov    es,WORD PTR [edx]
  411d57:	sbb    al,0x79
  411d59:	mov    dh,0x50
  411d5b:	sbb    BYTE PTR [edi-0x1f],dh
  411d5e:	cli    
  411d5f:	mov    bh,0x78
  411d61:	(bad)  [edx]
  411d63:	pop    esi
  411d64:	ror    DWORD PTR [ebx-0x3d0e00e8],cl
  411d6a:	add    ah,BYTE PTR [ebx+eax*2-0xf]
  411d6e:	push   es
  411d6f:	stc    
  411d70:	inc    ebx
  411d71:	add    BYTE PTR [edi+0x72be7210],al
  411d77:	mov    ebp,gs
  411d79:	js     0x411d54
  411d7b:	(bad)  
  411d7c:	pusha  
  411d7d:	mov    ebp,0x3ae8b29e
  411d82:	pop    esp
  411d83:	pop    es
  411d84:	out    0xae,eax
  411d86:	pop    ss
  411d87:	out    dx,eax
  411d88:	push   0x17
  411d8a:	xchg   edx,eax
  411d8b:	add    DWORD PTR [edi+ecx*1+0x43ba553a],0x866c03c4
  411d96:	xor    ch,BYTE PTR [edx+0x532ebe64]
  411d9c:	out    dx,al
  411d9d:	lea    edx,[edx]
  411d9f:	mov    ch,BYTE PTR [esp+ecx*1]
  411da2:	adc    BYTE PTR [eax-0x2d],bh
  411da5:	add    ecx,esp
  411da7:	std    
  411da8:	cld    
  411da9:	inc    edi
  411daa:	scas   eax,DWORD PTR es:[edi]
  411dab:	inc    edx
  411dac:	out    0x88,eax
  411dae:	fnsave [edi-0x15]
  411db1:	xor    eax,0x8eece9dd
  411db6:	pop    esi
  411db7:	test   BYTE PTR [eax],0x60
  411dba:	xchg   edi,eax
  411dbb:	mov    eax,DWORD PTR [ebx-0x4f]
  411dbe:	sub    BYTE PTR [ebp+0x4],al
  411dc1:	pop    ecx
  411dc2:	cwde   
  411dc3:	pop    edi
  411dc4:	(bad)  
  411dc5:	stos   DWORD PTR es:[edi],eax
  411dc6:	xchg   ebp,eax
  411dc7:	add    bh,ch
  411dc9:	sbb    eax,0xe96a0e75
  411dce:	lahf   
  411dcf:	ja     0x411df5
  411dd1:	fstp   DWORD PTR [edi+0xd92477]
  411dd7:	lahf   
  411dd8:	xor    edi,ebp
  411dda:	fcomp  QWORD PTR [edx+0x10]
  411ddd:	inc    eax
  411dde:	jmp    0x295af87a
  411de3:	xchg   esi,eax
  411de4:	fcmovb st,st(2)
  411de6:	in     eax,dx
  411de7:	sahf   
  411de8:	push   ecx
  411de9:	mov    DWORD PTR [ebp-0xd],eax
  411dec:	add    cl,BYTE PTR [ebx-0x2ad715c]
  411df2:	mov    esp,0xf1438b8e
  411df7:	lahf   
  411df8:	jbe    0x411e06
  411dfa:	ss test eax,0xb0f513ff
  411e00:	inc    edx
  411e01:	add    BYTE PTR [ecx+ebx*2+0x71],ch
  411e05:	add    ebp,DWORD PTR [edx+0x59]
  411e08:	(bad)  
  411e09:	jmp    0x108231f8
  411e0e:	lods   al,BYTE PTR ds:[esi]
  411e0f:	pusha  
  411e10:	push   cs
  411e11:	add    BYTE PTR [edx-0x23c72495],bl
  411e17:	push   es
  411e18:	rol    DWORD PTR [ecx-0x17],0xa5
  411e1c:	xor    al,0x56
  411e1e:	das    
  411e1f:	stc    
  411e20:	rol    BYTE PTR [ecx-0x17],0x74
  411e24:	call   DWORD PTR [ebx]
  411e26:	int    0xb0
  411e28:	inc    edx
  411e29:	add    BYTE PTR [ecx],dl
  411e2b:	mov    esp,0xa12ac39a
  411e30:	jno    0x411e49
  411e32:	add    BYTE PTR [ebp+0x22],ch
  411e35:	or     al,0xb7
  411e37:	mov    bh,0x6
  411e39:	test   DWORD PTR ds:0x3fb7fc00,ebx
  411e3f:	add    BYTE PTR ds:0x87c59c22,bh
  411e45:	push   es
  411e46:	mov    BYTE PTR ds:0x3fca1c,0xb5
  411e4d:	pop    edx
  411e4e:	sti    
  411e4f:	adc    eax,0x401714
  411e54:	jp     0x411dfd
  411e56:	or     BYTE PTR [edi-0x3cc8f989],dh
  411e5c:	mov    eax,ds:0x91d06828
  411e61:	inc    eax
  411e62:	add    bh,bh
  411e64:	xchg   ecx,eax
  411e65:	rcl    BYTE PTR [edx],1
  411e67:	inc    eax
  411e68:	je     0x411ea7
  411e6a:	mov    edi,0xec688174
  411e6f:	jne    0x411eb5
  411e71:	add    BYTE PTR [eax-0x1],dl
  411e74:	push   ecx
  411e75:	mov    esp,0xa5744012
  411e7a:	or     BYTE PTR [edi-0x3cc8ffc9],dh
  411e80:	adc    DWORD PTR [edx+esi*1],eax
  411e83:	shr    BYTE PTR [edi+0x604c871a],0x8
  411e8a:	push   0x28
  411e8c:	stos   DWORD PTR es:[edi],eax
  411e8d:	jae    0x411eb3
  411e8f:	adc    bh,dh
  411e91:	add    BYTE PTR [eax],dh
  411e93:	call   DWORD PTR [eax+edi*8-0x78be428]
  411e9a:	fcomp  DWORD PTR [ebx+0x76]
  411e9d:	pop    es
  411e9e:	add    BYTE PTR [ebx+0x0],dl
  411ea1:	push   edi
  411ea2:	fnstsw WORD PTR [eax]
  411ea4:	sbb    eax,0x3fc41c
  411ea9:	jno    0x411ee3
  411eab:	push   esi
  411eac:	mov    esi,0x41c5b19d
  411eb1:	popf   
  411eb2:	xor    edi,edi
  411eb4:	adc    eax,DWORD PTR [ecx]
  411eb6:	fadd   DWORD PTR [ecx+0x0]
  411eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eba:	ficomp WORD PTR [ecx+0x76e95ec3]
  411ec0:	pop    ss
  411ec1:	and    al,0xcf
  411ec3:	or     eax,0x8ae95eb5
  411ec8:	sbb    edx,DWORD PTR [ebp+0x14004354]
  411ece:	neg    DWORD PTR [ebp-0x3816a13d]
  411ed4:	add    edx,DWORD PTR ds:0x9c0043af
  411eda:	adc    edi,edi
  411edc:	adc    ebp,DWORD PTR [ebp-0x4ffbe29]
  411ee2:	dec    edx
  411ee3:	adc    BYTE PTR [ebp-0x3ec31622],dh
  411ee9:	adc    BYTE PTR [edx],dl
  411eeb:	ins    BYTE PTR es:[edi],dx
  411eec:	ror    BYTE PTR [eax],1
  411eee:	stos   BYTE PTR es:[edi],al
  411eef:	add    ebp,edi
  411ef1:	nop
  411ef2:	cmp    DWORD PTR [esi],edx
  411ef4:	inc    eax
  411ef5:	popf   
  411ef6:	add    bl,al
  411ef8:	je     0x411e8a
  411efa:	ror    DWORD PTR ds:0x51e9dd76,1
  411f00:	std    
  411f01:	mov    al,0x6d
  411f03:	push   ss
  411f04:	inc    eax
  411f05:	add    BYTE PTR [ebp-0x214aefb8],bl
  411f0b:	jmp    0xee09e04c
  411f10:	xor    eax,eax
  411f12:	inc    esi
  411f13:	test   BYTE PTR [esp+ecx*2+0x286bf179],0x2a
  411f1b:	jne    0x411f42
  411f1d:	adc    dh,cl
  411f1f:	hlt    
  411f20:	xor    bh,ch
  411f22:	in     eax,dx
  411f23:	repz fstp DWORD PTR [ecx]
  411f26:	fld    QWORD PTR [ecx]
  411f28:	(bad)  
  411f2a:	fs shr bh,0x3
  411f2e:	outs   dx,BYTE PTR ds:[esi]
  411f2f:	xchg   ebx,eax
  411f31:	test   BYTE PTR [ecx],cl
  411f33:	cs xor eax,0xd77d2459
  411f39:	mov    ebp,gs
  411f3b:	test   BYTE PTR [esi-0x17158189],bh
  411f41:	jo     0x411f1d
  411f43:	cli    
  411f44:	jmp    0x411f4d
  411f46:	dec    edi
  411f47:	pop    esi
  411f48:	je     0x411f90
  411f4a:	icebp  
  411f4b:	push   ecx
  411f4c:	xor    eax,0x96fbdbec
  411f51:	add    BYTE PTR [eax],ah
  411f53:	ret    0x814
  411f56:	outs   dx,DWORD PTR ds:[esi]
  411f57:	ret    0x7c92
  411f5a:	sbb    al,0x7d
  411f5c:	out    dx,eax
  411f5d:	add    edx,DWORD PTR [esi*1+0x2dd19b7]
  411f64:	add    DWORD PTR [eax+esi*8],ecx
  411f67:	outs   dx,BYTE PTR ds:[esi]
  411f68:	hlt    
  411f69:	pop    eax
  411f6a:	add    BYTE PTR [esi],dl
  411f6c:	inc    eax
  411f6d:	xor    edx,DWORD PTR [ebx-0x80]
  411f70:	jo     0x411f51
  411f72:	add    BYTE PTR [edx-0x7a],dl
  411f75:	and    ecx,DWORD PTR [edi]
  411f77:	sbb    al,0x78
  411f79:	repz add esi,ecx
  411f7c:	pop    es
  411f7d:	xchg   esi,eax
  411f7e:	mov    ds,esi
  411f80:	(bad)  
  411f81:	xchg   edi,eax
  411f82:	add    cl,dl
  411f84:	push   es
  411f85:	fstp   DWORD PTR cs:[edi+edi*4]
  411f89:	xrelease xchg BYTE PTR [edi+ebp*2-0xe],ah
  411f8e:	pop    eax
  411f8f:	push   ss
  411f90:	inc    eax
  411f91:	or     edx,DWORD PTR [ebx-0x34]
  411f94:	stc    
  411f95:	xor    eax,0x9e075984
  411f9a:	mov    ds,esi
  411f9c:	out    0x97,al
  411f9e:	add    BYTE PTR [ecx-0xa09ffee],ch
  411fa4:	jmp    0x411fd2
  411fa6:	fs icebp 
  411fa8:	mov    eax,ebp
  411faa:	not    BYTE PTR [ebp-0x3d]
  411fad:	push   eax
  411fae:	fiadd  WORD PTR [esi+eax*1-0x856a303]
  411fb5:	ss into 
  411fb7:	xchg   esp,eax
  411fb8:	and    dl,BYTE PTR [edx]
  411fba:	sub    DWORD PTR [ecx+0x135c085],esp
  411fc0:	xchg   ch,bh
  411fc2:	cmp    eax,0x35d985b0
  411fc7:	lods   al,BYTE PTR ds:[esi]
  411fc8:	ins    BYTE PTR es:[edi],dx
  411fc9:	or     BYTE PTR [edx],bh
  411fcb:	jb     0x411fc4
  411fcd:	adc    ebx,ecx
  411fcf:	add    BYTE PTR [eax-0x1a95ffbe],ch
  411fd5:	push   es
  411fd6:	mov    al,0xe8
  411fd8:	push   ebx
  411fd9:	pop    eax
  411fda:	(bad)  
  411fdb:	stos   DWORD PTR es:[edi],eax
  411fdc:	lea    eax,[edx]
  411fde:	push   ebx
  411fdf:	jb     0x411f8e
  411fe1:	dec    ecx
  411fe2:	push   ecx
  411fe3:	jbe    0x411ff9
  411fe5:	or     edi,ebp
  411fe7:	aam    0xd6
  411fe9:	adc    al,0x40
  411feb:	jmp    0xd63f1a0f
  411ff0:	rol    BYTE PTR [ebx-0x7c85aab5],cl
  411ff6:	loopne 0x411ff1
  411ff8:	pop    ecx
  411ff9:	loop   0x41200e
  411ffb:	cdq    
  411ffc:	hlt    
  411ffd:	add    ebp,DWORD PTR [edx-0x1a]
  412000:	test   BYTE PTR [edx],0x0
  412003:	jmp    0xe1b51726
  412008:	sub    eax,0x4e11fc45
  41200d:	idiv   ch
  41200f:	push   ds
  412010:	adc    eax,0xc4c874c2
  412015:	add    ch,BYTE PTR [edx-0x17]
  412018:	xor    esi,DWORD PTR [ebp+0xc]
  41201b:	add    bh,ah
  41201d:	fisttp DWORD PTR [ecx+0xced2045]
  412023:	call   DWORD PTR [ebx]
  412025:	clc    
  412026:	test   al,al
  412028:	mov    BYTE PTR [ecx],cl
  41202a:	mov    DWORD PTR [ebp+0x0],eax
  41202d:	in     eax,dx
  41202e:	mov    ebx,0xb0f7e3fc
  412033:	add    DWORD PTR [eax],eax
  412035:	fisttp WORD PTR [edx]
  412037:	mov    DWORD PTR [ebp-0x20],eax
  41203a:	in     al,dx
  41203b:	scas   eax,DWORD PTR es:[edi]
  41203c:	cld    
  41203d:	jecxz  0x412036
  41203f:	xor    al,al
  412041:	mov    edi,0xc408c2c7
  412046:	pop    ecx
  412047:	xchg   esp,ebp
  412049:	inc    edi
  41204a:	jmp    0x1ac2a37b
  41204f:	add    BYTE PTR [esi-0x58],dl
  412052:	jne    0x41203c
  412054:	repnz mov eax,ds:0xb83bffff
  41205a:	jb     0x4120c6
  41205c:	lea    edi,[ecx-0x2a]
  41205f:	push   eax
  412060:	push   ebx
  412061:	or     al,0xb0
  412063:	stc    
  412064:	call   DWORD PTR [ebx]
  412066:	add    al,0x74
  412069:	xchg   edi,eax
  41206a:	test   DWORD PTR [ecx+0x8],edi
  41206d:	je     0x411ffc
  41206f:	xor    DWORD PTR [eax],esi
  412071:	mov    al,BYTE PTR [eax+eax*1+0x74]
  412075:	sub    BYTE PTR [edx+0x8],0xff
  412079:	dec    ecx
  41207a:	or     al,0x89
  41207c:	inc    ebp
  41207d:	mov    esp,0xf7d6fb53
  412082:	mov    edi,0x811830c
  412087:	add    BYTE PTR [edx+esi*2+0x6a],dh
  41208b:	or     bh,bh
  41208d:	sub    DWORD PTR [eax],ecx
  41208f:	mov    DWORD PTR [ebp-0x6c],eax
  412092:	push   ebx
  412093:	sti    
  412094:	(bad)  
  412095:	popf   
  412096:	ins    BYTE PTR es:[edi],dx
  412097:	lds    ecx,FWORD PTR [eax+eax*1]
  41209a:	push   ds
  41209b:	xchg   DWORD PTR [ecx],edx
  41209d:	add    BYTE PTR [ecx+0x220867ef],dh
  4120a3:	outs   dx,DWORD PTR ds:[esi]
  4120a4:	adc    DWORD PTR [ebx-0x2aefea0],ecx
  4120aa:	jmp    0x412118
  4120ac:	lds    ecx,FWORD PTR [edi+esi*2]
  4120af:	icebp  
  4120b0:	cld    
  4120b1:	jae    0x41205c
  4120b3:	inc    bp
  4120b5:	lock dec ebp
  4120b7:	rcl    dh,1
  4120b9:	sbb    ecx,0xc5438ed5
  4120bf:	sbb    DWORD PTR [edi-0x18],ecx
  4120c2:	stc    
  4120c3:	mov    dh,0xfb
  4120c5:	std    
  4120c6:	(bad)  
  4120c7:	fdivr  st,st(4)
  4120c9:	jae    0x412078
  4120cb:	test   al,0x75
  4120cd:	or     al,0xca
  4120cf:	push   ss
  4120d0:	or     al,0xfd
  4120d2:	mov    ds,WORD PTR [eax+0x298f4015]
  4120d8:	add    al,0xf5
  4120da:	aad    0xf4
  4120dc:	shl    ebp,0xc5
  4120df:	pop    ds
  4120e0:	leave  
  4120e1:	ret    0xe98d
  4120e4:	imul   eax,DWORD PTR [eax-0x2fe1663],0xfd09be09
  4120ee:	mov    al,0xf9
  4120f0:	cmovo  ebx,DWORD PTR [ebp-0x5edb87a8]
  4120f7:	push   eax
  4120f8:	adc    eax,0x1a98f1c
  4120fd:	cmc    
  4120fe:	add    BYTE PTR [ebp-0x1c],al
  412101:	shl    ebp,0x45
  412104:	sub    ecx,DWORD PTR [eax]
  412106:	add    al,dh
  412108:	lock add DWORD PTR fs:[ecx-0x33],0x2494b80
  412111:	es push ecx
  412113:	jmp    0x41217f
  412115:	addr16 add al,0x9d
  412118:	add    al,BYTE PTR [ecx+0x7f03c700]
  41211e:	add    ebx,DWORD PTR [ebp-0x510298fe]
  412124:	or     ch,BYTE PTR [edi+eax*2+0x19]
  412128:	jmp    0xc463:0xf710f913
  41212f:	xchg   ecx,eax
  412130:	bound  esi,QWORD PTR [esi+eax*2+0x1]
  412134:	push   edx
  412135:	ins    BYTE PTR es:[edi],dx
  412136:	jbe    0x412125
  412138:	jmp    0xf7342140
  41213d:	arpl   bx,ax
  41213f:	jno    0x412193
  412141:	cli    
  412142:	fsubr  DWORD PTR [edx+0x6274b355]
  412148:	mov    edi,DWORD PTR [esp+esi*8]
  41214b:	dec    edi
  41214c:	add    eax,0x29dfd68
  412151:	inc    edi
  412152:	add    ecx,DWORD PTR [eax+0x36]
  412155:	loopne 0x4121b5
  412157:	mov    cl,0x6e
  412159:	jmp    0x412193
  41215b:	lods   al,BYTE PTR ds:[esi]
  41215c:	outs   dx,DWORD PTR ds:[esi]
  41215d:	sub    dl,BYTE PTR [esi-0x4b]
  412160:	jbe    0x4121bc
  412162:	cld    
  412163:	add    BYTE PTR [eax+0x5c38e688],ah
  412169:	outs   dx,DWORD PTR ds:[esi]
  41216a:	into   
  41216b:	push   eax
  41216c:	es dec eax
  41216e:	fist   WORD PTR [edx-0xd]
  412171:	push   edx
  412172:	data16 jbe 0x4120f6
  412175:	div    ah
  412177:	aaa    
  412178:	pop    DWORD PTR [edx-0x19]
  41217b:	xchg   BYTE PTR [ebp+0x6f],bl
  41217e:	fisttp DWORD PTR [eax-0x39fdf522]
  412184:	out    dx,al
  412185:	jmp    FWORD PTR [edi+0x44]
  412188:	mov    eax,ds:0x51d500e9
  41218d:	xor    al,ch
  41218f:	mov    ebx,0x74fdf82d
  412194:	fcomi  st,st(6)
  412196:	call   0xfe395757
  41219b:	fistp  DWORD PTR [esi+0x55]
  41219e:	pop    ecx
  41219f:	and    BYTE PTR [edi+edi*8-0x1],bl
  4121a3:	outs   dx,DWORD PTR ds:[esi]
  4121a4:	cmp    DWORD PTR [ebp+0x5d],0xfc422be5
  4121ab:	add    DWORD PTR [esi-0x5],esp
  4121ae:	std    
  4121af:	out    dx,al
  4121b0:	dec    edi
  4121b1:	imul   dl
  4121b3:	rcl    BYTE PTR [ebx],1
  4121b5:	dec    ebx
  4121b6:	aas    
  4121b7:	imul   edi,eax,0x1efd71f5
  4121bd:	out    dx,al
  4121be:	add    dl,BYTE PTR [esi+ebx*4+0x33]
  4121c2:	(bad)  
  4121c3:	dec    edi
  4121c4:	adc    BYTE PTR [ecx],cl
  4121c6:	jmp    0xee5f22bc
  4121cb:	add    al,0x3c
  4121cd:	call   0x304b:0x18e92283
  4121d4:	jae    0x41222f
  4121d6:	xor    eax,0x32b13a
  4121db:	mov    ch,BYTE PTR [eax+0x39c0aca6]
  4121e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e2:	outs   dx,BYTE PTR ds:[esi]
  4121e3:	and    al,0xf1
  4121e5:	dec    eax
  4121e6:	jmp    0xedc2:0xf7965a55
  4121ed:	sahf   
  4121ee:	push   ecx
  4121ef:	mov    DWORD PTR [ebp-0x10],edi
  4121f2:	inc    ebp
  4121f3:	or     eax,0x510ade9e
  4121f8:	jae    0x4121d0
  4121fa:	xor    dl,BYTE PTR [esi-0x1a]
  4121fd:	das    
  4121fe:	jno    0x412210
  412200:	fisubr WORD PTR [edi]
  412202:	mov    ebp,0xb20008b
  412207:	sti    
  412208:	(bad)  
  41220a:	(bad)  
  41220b:	or     ebp,DWORD PTR [edi-0x2d4cf66c]
  412211:	mov    esp,0xe20ffb5b
  412216:	inc    ebx
  412217:	sti    
  412218:	dec    bx
  41221a:	test   al,0x41
  41221c:	or     al,0x3b
  41221e:	mov    bl,0xd7
  412220:	add    eax,DWORD PTR [esi-0x34f03603]
  412226:	in     eax,dx
  412227:	or     ebp,DWORD PTR [edi-0x7b67831]
  41222d:	add    bl,bh
  41222f:	scas   eax,DWORD PTR es:[edi]
  412230:	sar    BYTE PTR [ebx],0xaa
  412233:	or     DWORD PTR [ebx+0xf498],eax
  412239:	(bad)  
  41223b:	rol    DWORD PTR [ebp+0x5b83f445],0x14
  412242:	ja     0x4122a6
  412244:	or     al,0x0
  412246:	not    ebp
  412248:	jg     0x4122c7
  41224a:	hlt    
  41224b:	add    BYTE PTR [esi+0x26],dh
  41224e:	aas    
  41224f:	inc    edx
  412250:	or     al,0x8b
  412252:	mov    cl,0x6
  412254:	inc    edx
  412256:	test   BYTE PTR [ebp-0x6a2173d],al
  41225c:	sti    
  41225d:	(bad)  
  41225e:	mov    ebx,0xb54143b2
  412263:	inc    ecx
  412264:	or     BYTE PTR [edi],cl
  412266:	bound  eax,QWORD PTR [eax+0x30]
  412269:	add    ecx,eax
  41226b:	or     al,BYTE PTR [edi+0x41357845]
  412271:	adc    BYTE PTR [esi-0x63b0782a],al
  412277:	test   BYTE PTR [ebx+0x41],al
  41227a:	xchg   DWORD PTR [ebx-0x8],ecx
  41227d:	cmp    al,0x9d
  41227f:	jmp    0x111:0x9f161170
  412286:	pop    esi
  412287:	push   ecx
  412288:	dec    DWORD PTR [ecx+0x3f1471ae]
  41228e:	fdivrp st(0),st
  412290:	fnstenv [edx+0x0]
  412293:	push   ebx
  412294:	inc    ecx
  412295:	and    eax,0x16969f3c
  41229a:	mov    eax,esp
  41229c:	stc    
  41229d:	push   es
  41229e:	rol    DWORD PTR [esi-0x1c],0x8b
  4122a2:	adc    DWORD PTR ds:0x664144fb,edx
  4122a8:	and    DWORD PTR [ebx-0xa],esi
  4122ab:	push   es
  4122ac:	iret   
  4122ad:	xor    eax,0x8eda8804
  4122b2:	inc    ebx
  4122b3:	lods   eax,DWORD PTR ds:[esi]
  4122b4:	call   0x6fdd0c7f
  4122b9:	adc    ecx,DWORD PTR [eax+0x39432a8c]
  4122bf:	aad    0x57
  4122c1:	repnz mov DWORD PTR [eax-0x2f],ebx
  4122c5:	add    ecx,DWORD PTR [ebp-0x6f]
  4122c8:	jb     0x41230f
  4122ca:	clc    
  4122cb:	xchg   esi,eax
  4122cc:	mov    ds:0xac438607,eax
  4122d1:	idiv   ebp
  4122d3:	imul   edx,DWORD PTR [eax],0xffffffc9
  4122d6:	ret    0xe991
  4122d9:	dec    esi
  4122da:	mov    ecx,ecx
  4122dc:	push   0x334e30e8
  4122e1:	dec    edi
  4122e2:	xor    edi,ecx
  4122e4:	fdivr  st,st(0)
  4122e6:	inc    ebp
  4122e7:	outs   dx,BYTE PTR ds:[esi]
  4122e8:	test   eax,0x72855389
  4122ed:	dec    ebp
  4122ee:	lock and al,0x16
  4122f1:	fadd   QWORD PTR [edi+0x53397e08]
  4122f7:	add    BYTE PTR [ecx+0x2489f602],ch
  4122fd:	add    edi,esp
  4122ff:	add    esp,DWORD PTR [eax*2-0x29317521]
  412306:	pusha  
  412307:	inc    edi
  412308:	jno    0x412291
  41230a:	mov    ah,0x13
  41230c:	and    cl,BYTE PTR [ebp+0x3f]
  41230f:	cmp    eax,0x60650367
  412314:	dec    edx
  412315:	repz out 0x8c,eax
  412318:	(bad)  
  412319:	out    0x72,al
  41231b:	dec    edi
  41231c:	xor    eax,0x2512eb88
  412321:	inc    ebp
  412322:	push   ss
  412323:	ds (bad) 
  412325:	sbb    bl,dh
  412327:	jg     0x41238c
  412329:	add    edi,esp
  41232b:	add    esp,DWORD PTR [esi]
  41232d:	push   edx
  41232e:	inc    al
  412330:	pop    esi
  412331:	loop   0x41231b
  412333:	add    ebx,DWORD PTR [ebp-0x3b0b9dfe]
  412339:	cmp    eax,0x875776fb
  41233e:	pop    esp
  41233f:	call   0x8d1c985e
  412344:	inc    esi
  412345:	out    dx,al
  412346:	bound  esi,QWORD PTR [esi-0x1b]
  412349:	cmp    ebx,esi
  41234b:	cmp    al,0x4e
  41234d:	cmp    al,0x72
  41234f:	fcom   DWORD PTR [ebp+edx*2-0x78648929]
  412356:	or     al,0xf0
  412358:	test   DWORD PTR [esi],eax
  41235a:	loop   0x4123ca
  41235c:	add    BYTE PTR [ebx-0x72891dc5],ah
  412362:	jbe    0x4122fd
  412364:	dec    eax
  412365:	fs repnz adc al,0x2
  412369:	sbb    dh,BYTE PTR [ebp-0x71]
  41236c:	mov    dl,BYTE PTR [esi]
  41236e:	repz ret 0x8d76
  412372:	jo     0x412374
  412374:	jmp    0xe30b:0x6af06e17
  41237b:	add    bh,ah
  41237d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237e:	sub    edi,DWORD PTR [ebx+0x51]
  412381:	jmp    0x6383:0x6a424203
  412388:	dec    ecx
  412389:	sahf   
  41238a:	jnp    0x412407
  41238c:	fstp   DWORD PTR [edi-0x6e580b93]
  412392:	jne    0x4123a8
  412394:	mov    ch,0xf5
  412396:	jnp    0x412413
  412398:	inc    ebp
  412399:	adc    DWORD PTR [esi],edi
  41239b:	call   0x2a2c0772
  4123a0:	cmp    edi,ebx
  4123a2:	inc    esp
  4123a3:	xchg   DWORD PTR [edx+ecx*2+0x7119537c],edi
  4123aa:	push   ebp
  4123ab:	clc    
  4123ac:	jb     0x412421
  4123ae:	out    0x29,al
  4123b0:	stc    
  4123b1:	call   0xd476:0x17abd79f
  4123b8:	fidiv  WORD PTR ds:0x73c739f5
  4123be:	cli    
  4123bf:	mov    BYTE PTR [eax+eax*1],bh
  4123c2:	std    
  4123c3:	mov    DWORD PTR [ebx-0x37],ecx
  4123c6:	test   BYTE PTR [eax],0x89
  4123c9:	sub    al,0xcd
  4123cb:	mov    DWORD PTR [ebx-0x37],edx
  4123ce:	and    DWORD PTR [esi+0x1c],ebp
  4123d1:	jmp    0x3c4363fb
  4123d6:	sahf   
  4123d7:	jge    0x412426
  4123d9:	jmp    0x5603:0xf6105617
  4123e0:	adc    al,0xe2
  4123e2:	in     al,0xff
  4123e4:	mov    WORD PTR [edi-0x5f],ds
  4123e7:	add    al,BYTE PTR [eax]
  4123e9:	mov    ds,WORD PTR [edx+ecx*8-0x80]
  4123ed:	add    BYTE PTR [ecx-0x7674fff6],ah
  4123f3:	or     DWORD PTR [ecx+0x7],esi
  4123f6:	(bad)  
  4123f7:	cmp    edi,ebx
  4123f9:	mov    BYTE PTR [eax+0x20],ah
  4123fc:	inc    ebx
  4123fd:	mov    dh,BYTE PTR [ecx]
  4123ff:	in     eax,dx
  412400:	shl    cl,0x78
  412403:	sti    
  412404:	(bad)  
  412405:	mov    BYTE PTR [eax-0x2bb275e0],al
  41240b:	clc    
  41240c:	(bad)
  41240f:	add    cl,BYTE PTR [ecx-0x36036cad]
  412415:	add    ebp,DWORD PTR [esi+edi*2-0x7bcac8b4]
  41241c:	ret    
  41241d:	add    ch,BYTE PTR [ebp-0x6761b95]
  412423:	loopne 0x4123aa
  412425:	pop    ebp
  412426:	add    BYTE PTR [ebp+ebp*1-0x41],ah
  41242a:	jge    0x412423
  41242c:	jnp    0x41247f
  41242e:	loopne 0x4123bf
  412430:	cmp    edi,eax
  412432:	add    esi,DWORD PTR [ebp+0x7fd4517f]
  412438:	push   ebx
  412439:	fmul   QWORD PTR [ecx+0x1ae7e529]
  41243f:	outs   dx,DWORD PTR ds:[esi]
  412440:	cmp    bh,al
  412442:	jmp    0x41242d
  412444:	cmp    DWORD PTR [ecx-0xc],0xffffffd3
  412448:	pusha  
  412449:	adc    al,0x8b
  41244b:	test   eax,0xcc7587e6
  412450:	jp     0x4124ab
  412452:	sbb    bh,al
  412454:	aad    0x88
  412456:	sbb    al,0xc6
  412458:	inc    ebp
  412459:	aaa    
  41245a:	dec    ebp
  41245b:	sub    BYTE PTR [ecx-0x1a],bh
  41245e:	mov    esi,DWORD PTR [ecx+0x16]
  412461:	sti    
  412462:	inc    ebp
  412463:	or     BYTE PTR [esi],al
  412465:	dec    ecx
  412466:	loopne 0x412405
  412468:	fs dec eax
  41246a:	hlt    
  41246b:	pushw  cs
  41246d:	aam    0x7c
  41246f:	ins    DWORD PTR es:[edi],dx
  412470:	mov    DWORD PTR [eax-0x8],eax
  412473:	es pop ds
  412475:	adc    al,0x37
  412477:	fdiv   DWORD PTR [ecx+0x6]
  41247a:	mov    WORD PTR [ebx],fs
  41247c:	pusha  
  41247d:	idiv   ch
  41247f:	scas   al,BYTE PTR es:[edi]
  412480:	sub    eax,DWORD PTR [ebx+ecx*2]
  412483:	push   ecx
  412484:	fisttp DWORD PTR [eax-0x14]
  412487:	fst    QWORD PTR [edi+edi*1]
  41248a:	adc    al,0x0
  41248c:	xchg   edx,eax
  41248d:	dec    ebp
  41248e:	jae    0x41248e
  412490:	pop    edx
  412491:	dec    ecx
  412492:	mov    al,BYTE PTR [ebx-0x5f]
  412495:	jae    0x4124df
  412497:	fcom   DWORD PTR ds:0xe2c58ae2
  41249d:	jg     0x4124f9
  41249f:	(bad)  
  4124a0:	pop    edi
  4124a1:	add    al,BYTE PTR [ecx+esi*1]
  4124a4:	pop    ebp
  4124a5:	adc    eax,0x61653f0
  4124aa:	sub    ah,0xd5
  4124ad:	fs dec eax
  4124af:	or     BYTE PTR [esi],ah
  4124b1:	mov    bl,0x15
  4124b3:	push   esi
  4124b4:	push   0x72
  4124b6:	dec    eax
  4124b7:	lock push ss
  4124b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ba:	or     eax,0x50650789
  4124bf:	adc    BYTE PTR [esi-0x5106004f],bl
  4124c5:	xlat   BYTE PTR ds:[ebx]
  4124c6:	mov    esi,0xbbd9e843
  4124cb:	inc    ebx
  4124cc:	jecxz  0x4124a7
  4124ce:	mov    cl,BYTE PTR [ebx+0x15]
  4124d1:	jae    0x412548
  4124d3:	shl    BYTE PTR [edi+eiz*1],0xec
  4124d7:	cmp    esp,ebx
  4124d9:	call   0xd9dddf64
  4124de:	add    DWORD PTR [ecx],ebp
  4124e0:	in     eax,0x2
  4124e2:	cmp    cl,BYTE PTR [ebx+0x192be66]
  4124e8:	adc    al,0x56
  4124ea:	test   DWORD PTR [eax+0x4f60c25e],0x972b8900
  4124f4:	add    eax,0x3e87e26
  4124f9:	popf   
  4124fa:	sbb    ebp,DWORD PTR [ecx-0x7d2d2175]
  412500:	add    DWORD PTR [eax*2+0x498d6a37],esp
  412507:	jo     0x412550
  412509:	jno    0x412584
  41250b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41250c:	xlat   BYTE PTR ds:[ebx]
  41250d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41250e:	ror    esp,0x0
  412511:	and    al,BYTE PTR [ebp+0x3b]
  412514:	mov    esi,ebx
  412516:	mov    esi,0x3c6c302
  41251b:	pusha  
  41251c:	aas    
  41251d:	popa   
  41251e:	jnp    0x4124ac
  412520:	xlat   BYTE PTR ds:[ebx]
  412521:	test   al,0xb7
  412523:	mov    ah,0xeb
  412525:	mov    al,ds:0x14e7b4b7
  41252a:	ins    DWORD PTR es:[edi],dx
  41252b:	fist   WORD PTR [eax+0x20]
  41252e:	jne    0x412543
  412530:	cmc    
  412531:	mov    ?,edx
  412533:	movsx  edx,WORD PTR [ecx]
  412536:	out    dx,eax
  412537:	inc    BYTE PTR [eax+edi*1]
  41253a:	dec    ebp
  41253b:	sti    
  41253c:	mov    BYTE PTR [esi-0x2],dl
  41253f:	popa   
  412540:	aas    
  412541:	in     eax,dx
  412542:	or     BYTE PTR [eax+eiz*8-0x63],0x83
  412547:	inc    esp
  412548:	in     al,0x9d
  41254a:	jge    0x41255f
  41254c:	push   es
  41254d:	pop    ebx
  41254e:	enter  0x3e6,0x22
  412552:	jne    0x4124d7
  412554:	mov    al,BYTE PTR [eax]
  412556:	jbe    0x412522
  412558:	jo     0x412598
  41255a:	aad    0xc7
  41255c:	add    BYTE PTR [eax+ecx*8],ch
  41255f:	add    esi,eax
  412561:	and    al,0xa8
  412563:	add    al,dh
  412565:	sub    al,0xcd
  412567:	out    dx,al
  412568:	ret    
  412569:	and    al,0xa5
  41256b:	out    dx,al
  41256c:	test   BYTE PTR [edx+0xc815428],dh
  412572:	jge    0x412577
  412574:	jae    0x412562
  412576:	and    al,0x13
  412578:	mov    BYTE PTR [eax+edx*4],dl
  41257b:	jns    0x41257d
  41257d:	mov    bl,0xc3
  41257f:	out    dx,eax
  412580:	jae    0x412566
  412582:	jno    0x4125c6
  412584:	in     al,0x52
  412586:	mov    ds:0x9e497b83,eax
  41258b:	jno    0x412592
  41258d:	das    
  41258e:	mov    ds:0x9b6100ee,eax
  412593:	pop    ss
  412594:	cmp    ch,BYTE PTR [ecx+eiz*4-0x74c1ec8f]
  41259b:	loop   0x412526
  41259d:	lods   al,BYTE PTR ds:[esi]
  41259e:	push   esi
  41259f:	lock dec ebx
  4125a1:	adc    esi,ebx
  4125a3:	cmp    DWORD PTR [ebx+0x41],0xffffff9e
  4125a7:	test   DWORD PTR [ebx+0x31],eax
  4125aa:	mov    cl,0xc6
  4125ac:	jmp    0xd483069e
  4125b1:	jmp    0xc32567db
  4125b6:	shl    edx,cl
  4125b8:	jbe    0x4125ab
  4125ba:	add    BYTE PTR [edx+eax*2],dl
  4125bd:	std    
  4125be:	arpl   WORD PTR [ebx+0x17],dx
  4125c1:	jmp    0x15834aad
  4125c6:	jae    0x41261c
  4125c8:	out    dx,eax
  4125c9:	sbb    BYTE PTR [esp+ebp*8+0x2],0x88
  4125ce:	cmp    al,0x86
  4125d0:	jbe    0x4125d5
  4125d2:	adc    esp,DWORD PTR [esi+eax*8+0x74]
  4125d6:	add    dl,cl
  4125d8:	or     DWORD PTR [ebx],0xdfa4c02
  4125de:	(bad)  
  4125df:	jno    0x4125d4
  4125e1:	std    
  4125e2:	xchg   DWORD PTR [ecx+0x798046ba],eax
  4125e8:	repnz add BYTE PTR [edi],cl
  4125eb:	inc    ecx
  4125ec:	js     0x4125ee
  4125ee:	add    BYTE PTR [ecx+eax*4+0x7404080b],dh
  4125f5:	aam    0x0
  4125f7:	push   cs
  4125f8:	cli    
  4125f9:	jae    0x41261a
  4125fb:	hlt    
  4125fc:	jae    0x4125fc
  4125fe:	add    dh,bh
  412600:	dec    ebx
  412601:	adc    esi,DWORD PTR [ecx+eax*4+0x1f]
  412605:	push   ecx
  412606:	sti    
  412607:	push   eax
  412608:	dec    BYTE PTR [ebx]
  41260a:	add    al,0xec
  41260c:	stc    
  41260d:	xchg   DWORD PTR [edx+edi*2],edx
  412610:	mov    ebx,0x6945fe41
  412615:	push   ecx
  412616:	sti    
  412617:	add    cl,ah
  412619:	or     BYTE PTR [esp+eiz*2],cl
  41261c:	mov    ebx,0x3400fe41
  412621:	imul   eax,DWORD PTR [ebx],0x89d4f1ff
  412627:	add    al,0x2a
  412629:	lock jno 0x4125f0
  41262c:	mov    ebp,DWORD PTR [ebx-0x24]
  41262f:	inc    DWORD PTR [ecx]
  412631:	cmc    
  412632:	push   eax
  412633:	push   DWORD PTR [ecx]
  412635:	icebp  
  412636:	call   0xfc32bee9
  41263b:	add    eax,DWORD PTR [edx+edi*2]
  41263e:	shl    BYTE PTR [ebp+0x42],0xf0
  412642:	jno    0x412620
  412644:	(bad)  [edi+0x69fbe849]
  41264a:	hlt    
  41264b:	movlps QWORD PTR [edx-0x14],xmm1
  41264f:	call   FWORD PTR [ebp+0x5089f44e]
  412655:	jg     0x41261e
  412657:	add    eax,0x870709c
  41265c:	adc    eax,0x5888ef26
  412661:	mov    ch,0xd9
  412663:	pushf  
  412664:	mov    dh,0x9b
  412666:	repnz mov DWORD PTR [eax-0x9],ebx
  41266a:	push   esi
  41266b:	std    
  41266c:	xor    BYTE PTR [ebx-0x7cb239fa],cl
  412672:	in     al,0x8e
  412674:	call   0xe01f:0x1ef1067d
  41267b:	adc    BYTE PTR [esi],dl
  41267d:	daa    
  41267e:	loopne 0x412601
  412680:	lock mov DWORD PTR [ecx],edx
  412683:	cmp    DWORD PTR [eax],eax
  412685:	loopne 0x412620
  412687:	add    cl,BYTE PTR [esi+esi*8+0x1efdf263]
  41268e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268f:	fst    DWORD PTR [eax]
  412691:	push   ss
  412692:	lahf   
  412693:	fld    DWORD PTR [ecx+0x39110dc8]
  412699:	fadd   DWORD PTR [ecx+0x2bda8c02]
  41269f:	repnz std 
  4126a1:	out    0x94,al
  4126a3:	jle    0x41266b
  4126a5:	(bad)  [edx]
  4126a7:	ret    
  4126a8:	adc    BYTE PTR [ebp+0x1eec7eae],bl
  4126ae:	(bad)  
  4126af:	sbb    al,0x51
  4126b1:	retf   
  4126b2:	lods   al,BYTE PTR ds:[esi]
  4126b3:	ss ror dh,cl
  4126b6:	cld    
  4126b7:	dec    ecx
  4126b8:	xor    ebp,ebx
  4126ba:	jb     0x412714
  4126bc:	in     al,dx
  4126bd:	adc    al,0x97
  4126bf:	cmc    
  4126c0:	xchg   DWORD PTR [eax+0x15],ebp
  4126c3:	jl     0x412740
  4126c5:	add    eax,0xa21458b3
  4126ca:	add    dh,BYTE PTR [ebp-0x57]
  4126cd:	jmp    0x5ffa:0x567ce7eb
  4126d4:	push   edi
  4126d5:	mov    ebp,0x24f41c79
  4126da:	xlat   BYTE PTR ds:[ebx]
  4126dc:	jp     0x41274c
  4126de:	out    dx,al
  4126df:	add    bh,BYTE PTR [esi+0x3357c90]
  4126e5:	popf   
  4126e6:	add    ah,BYTE PTR [edx+0x3f]
  4126e9:	add    BYTE PTR [ecx-0x630bc389],dh
  4126ef:	mov    ecx,0xfbc53f70
  4126f4:	pop    ebp
  4126f5:	add    BYTE PTR [edi-0x4ac12d9c],ah
  4126fb:	sti    
  4126fc:	push   0x58
  4126fe:	mov    ch,bl
  412700:	out    0x7c,eax
  412702:	push   0x79
  412704:	adc    al,0xd8
  412706:	es push edx
  412708:	outs   dx,BYTE PTR ds:[esi]
  412709:	leave  
  41270a:	fsubrp st(6),st
  41270c:	call   0x7243c414
  412711:	hlt    
  412712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412713:	inc    ebp
  412714:	sti    
  412715:	outs   dx,BYTE PTR ds:[esi]
  412716:	cli    
  412717:	ja     0x4126b5
  412719:	repz sbb bh,BYTE PTR ds:0xcad67d3f
  412720:	jb     0x412791
  412722:	inc    ebp
  412723:	fs lock push gs
  412727:	jne    0x4126c4
  412729:	jl     0x4126e1
  41272b:	out    dx,al
  41272c:	jb     0x4126ef
  41272e:	fs cmp eax,0x77906ef7
  412734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412735:	jmp    0x4126ba
  412737:	sub    ebx,ebp
  412739:	push   0xffffff8e
  41273b:	add    al,0xae
  41273d:	sub    al,0x86
  41273f:	adc    bh,BYTE PTR [ebx-0xe]
  412742:	push   eax
  412743:	daa    
  412744:	add    cl,bh
  412746:	jae    0x41274c
  412748:	xchg   DWORD PTR [edx+edx*8-0x7e],ebp
  41274c:	jnp    0x41272b
  41274e:	add    BYTE PTR [ecx-0x67a30b99],bh
  412754:	cmp    DWORD PTR [ebx-0x23],0x21
  412758:	addr16 in al,0xe9
  41275b:	dec    esp
  41275c:	cli    
  41275d:	cmp    BYTE PTR [ebp+edi*4+0x6d],al
  412761:	add    DWORD PTR [ebx],ebp
  412763:	loopne 0x41276a
  412765:	or     DWORD PTR [ebp+eax*8+0x1],0x1891c89
  41276d:	(bad)  
  41276e:	call   0xe28811de
  412773:	sub    edx,DWORD PTR [esi]
  412775:	jl     0x4127b8
  412777:	sbb    DWORD PTR [esi-0x18],ebp
  41277a:	(bad)
  41277f:	lea    ebx,[eax+edx*8]
  412782:	sub    bl,bl
  412784:	adc    DWORD PTR [ebx-0x7f],0xc2f455f9
  41278b:	retf   
  41278c:	out    0x89,al
  41278e:	les    eax,FWORD PTR [esi+0x1c]
  412791:	lock out dx,al
  412793:	cmp    eax,0xd36042d2
  412798:	retf   0x7e0d
  41279b:	dec    eax
  41279c:	sub    al,0xde
  41279e:	mov    DWORD PTR [esi+0x7b],0x3dc7515b
  4127a5:	in     al,0x42
  4127a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127a8:	jnp    0x412805
  4127aa:	adc    DWORD PTR [edi-0x44961bab],esi
  4127b0:	push   es
  4127b1:	add    BYTE PTR [eax+eax*1-0x23],ch
  4127b5:	add    al,0x73
  4127b7:	jmp    0x126b:0x6204379b
  4127be:	or     eax,0x14507300
  4127c3:	add    esp,DWORD PTR [esi-0x7cf035ea]
  4127c9:	lds    eax,FWORD PTR [eax]
  4127cb:	add    BYTE PTR [ebx+esi*8],al
  4127ce:	inc    ecx
  4127cf:	fdiv   QWORD PTR [ebx+esi*2+0x1c]
  4127d3:	add    BYTE PTR [edi+0x6b],ch
  4127d6:	or     al,0x75
  4127d8:	shr    DWORD PTR [ecx+ecx*2-0x2c],0x3c
  4127dd:	add    dh,BYTE PTR [ebx]
  4127df:	mov    BYTE PTR [eax+0x31],dh
  4127e2:	std    
  4127e3:	cmp    bl,0x4
  4127e6:	mov    cl,BYTE PTR [ebp-0x10]
  4127e9:	mov    esi,0xadbe04dd
  4127ee:	mov    BYTE PTR [ebx+ecx*8],cl
  4127f1:	imul   ecx,DWORD PTR [ecx-0x1c],0x2
  4127f5:	test   al,0xc0
  4127f7:	loope  0x412781
  4127f9:	or     BYTE PTR [edi-0x1],0x7e
  4127fd:	stos   DWORD PTR es:[edi],eax
  4127fe:	call   edi
  412800:	or     al,0x43
  412802:	xor    eax,DWORD PTR [ecx]
  412804:	test   ecx,0xcd718902
  41280a:	test   DWORD PTR [ebp-0x14],eax
  41280d:	addr16 pop ecx
  41280f:	aam    0xbf
  412811:	lds    edi,FWORD PTR [ecx+0x45]
  412814:	out    dx,eax
  412815:	dec    ebx
  412816:	in     al,0x8b
  412818:	add    BYTE PTR [ecx],al
  41281a:	fcos   
  41281c:	sar    BYTE PTR [ebp+0x298bd84b],1
  412822:	in     eax,0x85
  412824:	push   ebp
  412825:	fmul   st,st(5)
  412827:	sbb    al,0x8b
  412829:	add    ecx,ebx
  41282b:	out    0x17,eax
  41282d:	(bad)  
  41282e:	jae    0x412828
  412830:	dec    DWORD PTR [eax]
  412832:	ja     0x87a1c08d
  412838:	jne    0x4127d7
  41283a:	repz jp 0x412898
  41283d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283e:	(bad)  
  412840:	data16 adc al,0xa7
  412843:	push   edx
  412844:	aas    
  412845:	(bad)  
  412846:	xchg   esi,eax
  412847:	leave  
  412848:	jl     0x41284b
  41284a:	fs aas 
  41284c:	adc    dl,dh
  41284e:	popf   
  41284f:	jmp    0x7af88253
  412854:	dec    ebx
  412855:	in     eax,0x23
  412857:	aas    
  412858:	aam    0x59
  41285a:	mov    eax,ds:0x63d143ee
  41285f:	inc    eax
  412860:	adc    BYTE PTR [esi+ebp*1+0x5f110df0],al
  412867:	jmp    0x412866
  412869:	mov    edx,0x61ffcfeb
  41286e:	mov    ebx,0x2e9cc702
  412873:	hlt    
  412874:	inc    eax
  412875:	pushw  ds
  412877:	sbb    BYTE PTR ds:0xfdedfc29,cl
  41287d:	add    BYTE PTR [edx+0x170c4865],dl
  412883:	das    
  412884:	ror    BYTE PTR [eax+0x5dc67495],1
  41288a:	fist   DWORD PTR [ebx+edi*4]
  41288d:	ret    0xd995
  412890:	xor    al,al
  412892:	jbe    0x4128db
  412894:	pop    eax
  412895:	mov    DWORD PTR [ecx+0x5d],esi
  412898:	fst    QWORD PTR [eax+0x26]
  41289b:	lahf   
  41289c:	stc    
  41289d:	mov    ah,ah
  41289f:	aad    0x53
  4128a1:	push   ebp
  4128a2:	adc    al,0xaf
  4128a4:	cmc    
  4128a5:	mov    eax,edx
  4128a7:	int    0x7a
  4128a9:	cli    
  4128aa:	xchg   DWORD PTR es:[ecx],edx
  4128ad:	add    DWORD PTR [ebp-0x23],esp
  4128b0:	out    0x31,eax
  4128b2:	xor    eax,DWORD PTR [ebx]
  4128b4:	sub    eax,0x25032348
  4128b9:	dec    eax
  4128ba:	sbb    BYTE PTR [ebx],al
  4128bc:	pusha  
  4128bd:	inc    eax
  4128be:	dec    ebp
  4128bf:	jp     0x41284d
  4128c1:	scas   eax,DWORD PTR es:[edi]
  4128c2:	and    bh,BYTE PTR [esi]
  4128c4:	adc    ebp,DWORD PTR [edx]
  4128c6:	inc    edx
  4128c7:	clc    
  4128c8:	imul   esp,esi,0xfffffffa
  4128cb:	out    0xe7,eax
  4128cd:	sbb    ah,ch
  4128cf:	push   ebx
  4128d0:	pusha  
  4128d1:	inc    eax
  4128d2:	aad    0xdb
  4128d4:	jmp    0x1947:0x72124e78
  4128db:	jp     0x412919
  4128dd:	hlt    
  4128de:	xchg   esp,eax
  4128df:	rcr    dh,cl
  4128e1:	jle    0x4128e3
  4128e3:	adc    al,BYTE PTR [edx]
  4128e5:	out    0x3,eax
  4128e7:	je     0x4128ad
  4128e9:	jo     0x412932
  4128eb:	jmp    0x5eba13cb
  4128f0:	mov    dh,0x41
  4128f2:	adc    al,0x52
  4128f4:	jns    0x41292a
  4128f6:	in     al,dx
  4128f7:	sbb    dh,BYTE PTR [esi]
  4128f9:	mov    edi,0xea655a29
  4128fe:	jp     0x4128de
  412900:	jmp    0x6fa8:0x2b554762
  412907:	pushf  
  412908:	jns    0x41292e
  41290a:	int3   
  41290b:	and    al,0x45
  41290d:	(bad)  
  41290e:	std    
  41290f:	sub    DWORD PTR ds:0x4d31fd7b,esi
  412915:	push   edi
  412916:	jns    0x4128fe
  412918:	cli    
  412919:	mov    ecx,0x56eaceec
  41291e:	ja     0x412969
  412920:	fiadd  DWORD PTR [ecx-0x14]
  412923:	dec    eax
  412924:	out    0xf6,eax
  412926:	pushf  
  412927:	out    0xea,al
  412929:	jb     0x41296a
  41292b:	test   eax,0x2aac007b
  412930:	and    DWORD PTR [ebx+0xd],0x96381a1
  412937:	cdq    
  412938:	and    DWORD PTR [ebx+0x11],0xd6381a1
  41293f:	cdq    
  412940:	jnp    0x41297e
  412942:	fbld   TBYTE PTR [eax-0x40]
  412945:	add    eax,0x738700e9
  41294a:	mov    ah,0x70
  41294c:	push   0xffffffce
  41294e:	xchg   DWORD PTR [edx+ebx*8-0x61e6bc41],ebp
  412955:	rol    BYTE PTR [ebx-0x2],0x9f
  412959:	sbb    ecx,0x5f
  41295c:	ins    DWORD PTR es:[edi],dx
  41295d:	cmp    DWORD PTR [ebx-0x3f],0xde06739e
  412964:	adc    DWORD PTR [edx],edx
  412966:	xchg   DWORD PTR [ebp*8+0x40e9b4f4],ebx
  41296d:	sub    DWORD PTR [ebx-0x6b],eax
  412970:	sub    eax,DWORD PTR [ebx]
  412972:	std    
  412973:	and    al,0xc9
  412975:	fcomp  DWORD PTR [eax]
  412977:	push   0x33
  412979:	fiadd  WORD PTR [eax]
  41297b:	adc    al,0x96
  41297d:	jnp    0x41294f
  41297f:	scas   eax,DWORD PTR es:[edi]
  412980:	fisttp DWORD PTR [edi]
  412982:	add    BYTE PTR [eax-0xd],ah
  412985:	loop   0x4129ed
  412987:	ret    0xe2db
  41298a:	jae    0x412962
  41298c:	mov    DWORD PTR [edx-0x1c],eax
  41298f:	(bad)  
  412990:	fstp   TBYTE PTR [esi-0x7bbae303]
  412996:	shr    bl,0x1d
  412999:	push   0xffffffd4
  41299b:	jmp    0xd7056b77
  4129a0:	add    bl,ah
  4129a2:	add    al,0x27
  4129a4:	jecxz  0x412978
  4129a6:	add    BYTE PTR [eax],al
  4129a8:	iret   
  4129a9:	cmp    al,0xe8
  4129ab:	cmp    eax,DWORD PTR [eax]
  4129ad:	add    esi,ebx
  4129af:	jbe    0x4129bb
  4129b1:	cmp    ebp,DWORD PTR [edi-0x50b423bf]
  4129b7:	push   ecx
  4129b8:	loopne 0x412949
  4129ba:	jmp    0xe282e0cb
  4129bf:	or     esi,DWORD PTR [edi+0x7d80b651]
  4129c5:	call   0x66d:0xb8558501
  4129cc:	data16 fistp QWORD PTR [eax+eax*8]
  4129d0:	je     0x4129a0
  4129d2:	or     DWORD PTR [ebx],0xdfd7c02
  4129d8:	lsl    ecx,di
  4129db:	mov    ebp,0x4469cce8
  4129e0:	push   cs
  4129e1:	(bad)
  4129e4:	(bad)  
  4129e5:	mov    ch,0x66
  4129e7:	push   ecx
  4129e8:	shl    BYTE PTR [edi],0xc0
  4129eb:	add    al,BYTE PTR [eax+0xf001179]
  4129f1:	inc    ecx
  4129f2:	je     0x4129f4
  4129f4:	add    BYTE PTR [ecx+eax*4+0x5b34080b],dh
  4129fb:	rol    BYTE PTR [eax],1
  4129fd:	push   cs
  4129fe:	add    dh,BYTE PTR [ecx+esi*1+0x4]
  412a02:	pop    esp
  412a03:	sti    
  412a04:	add    BYTE PTR [eax-0x5e749c1c],dh
  412a0a:	mov    edx,0x96913b66
  412a0f:	je     0x412a3a
  412a11:	add    BYTE PTR [ebx-0x50],bh
  412a14:	push   ecx
  412a15:	fmul   QWORD PTR [eax-0x1b]
  412a18:	test   DWORD PTR [edi],eax
  412a1a:	out    dx,eax
  412a1b:	inc    ebx
  412a1c:	fmul   QWORD PTR [eax-0x174114c0]
  412a22:	popf   
  412a23:	jecxz  0x412a9e
  412a25:	inc    esp
  412a26:	fidivr DWORD PTR [edi+0x7cda4243]
  412a2d:	push   ebx
  412a2e:	cmc    
  412a2f:	push   edi
  412a30:	ret    0x4602
  412a33:	jecxz  0x412a2a
  412a35:	packsswb mm3,QWORD PTR [esi-0x2beaff16]
  412a3c:	jmp    0x120e:0x55ed73
  412a43:	xchg   cl,al
  412a45:	std    
  412a46:	nop
  412a47:	xor    ebp,ecx
  412a49:	jae    0x412a50
  412a4b:	mov    ebp,edx
  412a4d:	jae    0x412a40
  412a4f:	adc    ah,BYTE PTR [ecx-0x4]
  412a52:	bnd jmp 0x412a5b
  412a55:	lock and BYTE PTR [ebx],bl
  412a58:	outs   dx,DWORD PTR ds:[esi]
  412a59:	cmp    dl,ah
  412a5b:	inc    ebp
  412a5c:	int3   
  412a5d:	or     eax,0xfdd81612
  412a62:	dec    eax
  412a63:	sar    edx,cl
  412a65:	mov    ah,0x70
  412a67:	retf   
  412a68:	jmp    0xe3b4:0x706fc973
  412a6f:	fild   DWORD PTR [ecx+ecx*4]
  412a72:	xor    bl,ah
  412a74:	jns    0x412ab9
  412a76:	add    BYTE PTR [ebx-0x4a02bf9e],ch
  412a7c:	fs repnz std 
  412a7f:	call   0x56b0:0x9e0c4071
  412a86:	std    
  412a87:	adc    BYTE PTR [esi-0x6e1239fa],cl
  412a8d:	int3   
  412a8e:	mov    bh,BYTE PTR [edx+0x65]
  412a91:	push   es
  412a92:	icebp  
  412a93:	push   ds
  412a94:	pop    ss
  412a95:	hlt    
  412a96:	adc    BYTE PTR [esi],dl
  412a98:	pop    ds
  412a99:	hlt    
  412a9a:	xor    eax,0x94133302
  412aa0:	cmp    eax,0x3526fa9b
  412aa5:	push   ebp
  412aa6:	jmp    0x77ad:0xd7a48048
  412aad:	lods   al,BYTE PTR ds:[esi]
  412aae:	xlat   BYTE PTR ds:[ebx]
  412aaf:	sbb    al,0x56
  412ab1:	das    
  412ab2:	adc    esi,DWORD PTR [ebp+edi*1+0x77]
  412ab6:	cli    
  412ab7:	push   ss
  412ab8:	and    DWORD PTR ds:0xc64820ea,ebp
  412abe:	jle    0x412aa3
  412ac0:	inc    esp
  412ac1:	xor    ch,al
  412ac3:	lods   eax,DWORD PTR ds:[esi]
  412ac4:	add    bh,BYTE PTR [esi+edi*2+0x16fb7ff9]
  412acb:	ins    BYTE PTR es:[edi],dx
  412acc:	dec    esp
  412acd:	sahf   
  412ace:	ss iret 
  412ad0:	das    
  412ad1:	inc    BYTE PTR [ecx-0x54]
  412ad4:	ret    0x5060
  412ad7:	in     eax,dx
  412ad8:	jns    0x412a6e
  412ada:	out    dx,eax
  412adb:	add    BYTE PTR [edx],bl
  412add:	dec    esi
  412ade:	ret    
  412adf:	jnp    0x412b37
  412ae1:	(bad)  
  412ae2:	and    BYTE PTR [edi-0x57],cl
  412ae5:	repz fs sahf 
  412ae8:	retf   0xe7e3
  412aeb:	jl     0x412b43
  412aed:	cli    
  412aee:	outs   dx,DWORD PTR ds:[esi]
  412aef:	dec    edi
  412af0:	sar    DWORD PTR [ecx+0x2c],0xe4
  412af4:	and    al,0x36
  412af6:	xlat   BYTE PTR ds:[ebx]
  412af7:	jp     0x412b47
  412af9:	out    0xf2,al
  412afb:	mov    ebp,0x3677490
  412b00:	popf   
  412b01:	add    dh,BYTE PTR [edx+0x37]
  412b04:	xchg   ecx,eax
  412b05:	ja     0x412b3b
  412b07:	in     al,0x4a
  412b09:	loope  0x412af4
  412b0b:	jp     0x412ae3
  412b0d:	retf   0xf872
  412b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b11:	daa    
  412b12:	sub    al,0xc
  412b14:	mov    al,ds:0x9e1e007e
  412b19:	add    al,BYTE PTR [eax]
  412b1b:	pusha  
  412b1c:	stos   BYTE PTR es:[edi],al
  412b1d:	jmp    0x5143:0xbd45b98b
  412b24:	sahf   
  412b25:	add    al,BYTE PTR [eax]
  412b27:	jmp    0xa47b1df5
  412b2c:	xchg   edx,eax
  412b2d:	addr16 push edi
  412b2f:	jb     0x412ba3
  412b31:	retf   0xbc89
  412b34:	inc    esi
  412b35:	sub    edi,DWORD PTR [edx+eiz*8]
  412b38:	mov    ebx,0x3aac8939
  412b3d:	jns    0x412b0c
  412b3f:	loop   0x412b41
  412b41:	rcl    DWORD PTR [edx],cl
  412b43:	jnp    0x412b34
  412b45:	xchg   ecx,eax
  412b46:	aaa    
  412b47:	clc    
  412b48:	rcl    BYTE PTR [edx],1
  412b4a:	stos   BYTE PTR es:[edi],al
  412b4b:	jae    0x412b34
  412b4d:	pop    ebp
  412b4e:	sub    DWORD PTR [ebx-0x27],edi
  412b51:	xor    al,0x4d
  412b54:	ret    0x6eee
  412b57:	push   es
  412b58:	pusha  
  412b59:	xor    dl,0x87
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	repnz sub BYTE PTR [ebx-0x23],bh
  412b61:	inc    ebx
  412b62:	add    DWORD PTR [edi+0x7b80cd5c],eax
  412b68:	rcr    DWORD PTR [esi+0x3a120864],0xf2
  412b6f:	jl     0x412b5b
  412b71:	pusha  
  412b72:	fld    DWORD PTR [edx+ebp*2]
  412b75:	push   ebx
  412b76:	fiadd  DWORD PTR [eax]
  412b78:	bound  eax,QWORD PTR [ebx+0x12]
  412b7b:	mov    edi,0x13c98c6
  412b80:	(bad)  
  412b81:	leave  
  412b82:	push   ebp
  412b83:	adc    al,0x1d
  412b85:	xor    ecx,DWORD PTR [ebx+edi*2-0xfb1f67b]
  412b8c:	ret    0xdecb
  412b8f:	sub    DWORD PTR [eax],eax
  412b91:	adc    al,0x45
  412b93:	inc    edx
  412b94:	mov    DWORD PTR [ecx-0x17aa7846],ecx
  412b9a:	(bad)  
  412b9b:	push   eax
  412b9c:	cld    
  412b9d:	dec    DWORD PTR [eax-0x14]
  412ba0:	sub    esi,esp
  412ba2:	fisubr DWORD PTR [ecx+ebx*8+0x715d0600]
  412ba9:	fadd   DWORD PTR [ebx+0x7b]
  412bac:	repnz cmp esi,DWORD PTR [edx+0x6b]
  412bb0:	or     BYTE PTR [ebx+0x4d85ba01],cl
  412bb6:	int3   
  412bb7:	mov    esi,0xce118b06
  412bbc:	test   DWORD PTR [ebp-0x24],edx
  412bbf:	test   DWORD PTR [ecx+0x1c],edi
  412bc2:	add    al,0x59
  412bc4:	dec    ebx
  412bc5:	add    ch,BYTE PTR [ecx]
  412bc7:	pop    es
  412bc8:	mov    DWORD PTR [edi-0x6],ecx
  412bcb:	pop    esi
  412bcc:	push   ecx
  412bcd:	adc    bl,ah
  412bcf:	jp     0x412c22
  412bd1:	adc    al,0xc5
  412bd3:	out    0x2,eax
  412bd5:	cmp    ebp,DWORD PTR [esi-0xb327326]
  412bdb:	add    eax,0xca39ff00
  412be0:	cmp    BYTE PTR [ebp-0x60],0x6
  412be4:	xchg   DWORD PTR [ebp-0x40],esi
  412be7:	push   edx
  412be8:	pop    ss
  412be9:	mov    eax,DWORD PTR [ecx-0x54f37712]
  412bef:	pop    esp
  412bf0:	dec    ecx
  412bf1:	cli    
  412bf2:	sub    al,0x3a
  412bf4:	xor    eax,DWORD PTR [ecx]
  412bf6:	sub    al,0x1a
  412bf8:	xor    eax,DWORD PTR [edx]
  412bfa:	ds sbb esi,edi
  412bfd:	mov    BYTE PTR [eax+0x4b82ff31],al
  412c03:	add    cl,BYTE PTR [edx-0x2239cfb3]
  412c09:	add    al,0x0
  412c0b:	popf   
  412c0c:	in     eax,0xb9
  412c0e:	mov    BYTE PTR [ecx-0x7ab48848],dl
  412c14:	mov    DWORD PTR [ebx+0x78e77cc0],edi
  412c1a:	push   ecx
  412c1b:	push   0xffffffe5
  412c1d:	mov    bh,0x1
  412c1f:	inc    ebp
  412c20:	arpl   WORD PTR [eax],di
  412c22:	xor    eax,0x2bd6c9c
  412c27:	and    al,0xbe
  412c29:	aad    0x87
  412c2b:	loopne 0x412c60
  412c2d:	jnp    0x412c8a
  412c2f:	imul   esi,esp,0x54de7bc0
  412c35:	dec    edi
  412c36:	call   0x226da61
  412c3b:	dec    esp
  412c3c:	bound  ecx,QWORD PTR [edi-0x28]
  412c3f:	push   ss
  412c40:	jbe    0x412c1f
  412c42:	xchg   DWORD PTR [eax-0xd],esi
  412c45:	fcomp  DWORD PTR [edx]
  412c47:	es scas al,BYTE PTR es:[edi]
  412c49:	in     eax,0xe9
  412c4b:	mov    al,0x6c
  412c4d:	addr16 clc 
  412c4f:	add    dh,BYTE PTR [edi+0xd]
  412c52:	mov    DWORD PTR [eax-0xd],edx
  412c55:	js     0x412cca
  412c57:	xchg   ebp,eax
  412c58:	push   esp
  412c59:	inc    edi
  412c5a:	or     BYTE PTR [esi+0xe347afa],bl
  412c60:	stos   BYTE PTR es:[edi],al
  412c61:	sub    cl,BYTE PTR [ebx-0xb]
  412c64:	data16 fimul WORD PTR [ecx+0x43e6db60]
  412c6b:	(bad)
  412c6e:	call   0xec3f4273
  412c73:	cmp    DWORD PTR [eax+0x7f],ebp
  412c76:	shl    BYTE PTR gs:[edx+0x5889e825],1
  412c7d:	mov    ebx,0xbfa14b2c
  412c82:	jne    0x412c06
  412c84:	fwait
  412c85:	add    esp,DWORD PTR [esi-0x174b331a]
  412c8b:	cmp    BYTE PTR [ecx-0x7dfe773e],al
  412c91:	dec    edi
  412c92:	xchg   DWORD PTR [ebx-0x4c],eax
  412c95:	inc    ebp
  412c96:	fcomi  st,st(6)
  412c98:	es inc eax
  412c9a:	jge    0x412c82
  412c9c:	push   0x14f82c8c
  412ca1:	dec    esi
  412ca2:	mov    edi,DWORD PTR [ebx-0x5b]
  412ca5:	mov    ebp,DWORD PTR [esi]
  412ca7:	inc    esi
  412ca8:	repz cmp esi,DWORD PTR [eax]
  412cab:	shl    DWORD PTR [ebp+0x34c41a02],0xd6
  412cb2:	mov    ah,0x7a
  412cb4:	dec    ecx
  412cb5:	test   BYTE PTR [ebx+0x53],dl
  412cb8:	and    al,0x4e
  412cba:	out    dx,eax
  412cbb:	jp     0x412c9f
  412cbd:	(bad)  
  412cbe:	pushf  
  412cbf:	dec    esi
  412cc0:	sbb    cl,BYTE PTR [esi+0x37]
  412cc3:	jp     0x412d2b
  412cc5:	bnd jno 0x412cb1
  412cc8:	and    al,0x36
  412cca:	jmp    0x412cce
  412ccc:	aad    0x3
  412cce:	adc    DWORD PTR [edx],esi
  412cd0:	or     ecx,ecx
  412cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cd3:	in     eax,0x0
  412cd5:	popf   
  412cd6:	enter  0xe6ac,0x9d
  412cda:	mov    DWORD PTR [ebx+esi*4+0x7c275e22],ebp
  412ce1:	pop    esi
  412ce2:	jmp    0x3ce:0x8da8c4b2
  412ce9:	popf   
  412cea:	add    dl,BYTE PTR [edx]
  412cec:	mov    esp,0xd99f4e22
  412cf1:	pushf  
  412cf2:	mov    esi,DWORD PTR [eax+edi*8]
  412cf5:	and    eax,0x4e7ba746
  412cfa:	out    dx,al
  412cfb:	add    dl,ah
  412cfd:	cwde   
  412cfe:	lea    eax,[eax]
  412d00:	jb     0x412ca0
  412d02:	add    al,BYTE PTR [eax]
  412d04:	add    bl,BYTE PTR [edi-0x79]
  412d07:	inc    ebx
  412d08:	mov    ch,0x74
  412d0a:	add    DWORD PTR [ecx+0x106c4524],ecx
  412d10:	xor    BYTE PTR [esi],al
  412d12:	dec    esp
  412d13:	hlt    
  412d14:	pusha  
  412d15:	mov    dl,0xda
  412d17:	cmp    DWORD PTR [eax+0x248701fa],ebp
  412d1d:	ins    DWORD PTR es:[edi],dx
  412d1e:	mov    DWORD PTR [ebx-0x5f],eax
  412d21:	mov    ah,0x9f
  412d23:	jnp    0x412d0f
  412d25:	xlat   BYTE PTR ds:[ebx]
  412d26:	inc    ebx
  412d27:	clc    
  412d28:	retw   0xdda
  412d2c:	xchg   esi,eax
  412d2d:	xchg   edx,eax
  412d2e:	jmp    0xb4b5:0xd32dcfd
  412d35:	push   edx
  412d36:	fnsave [ebx+0x39]
  412d39:	add    BYTE PTR [ebx+ebx*2-0x29c1aef8],dh
  412d40:	std    
  412d41:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412d43:	inc    ebx
  412d44:	clc    
  412d45:	fidiv  WORD PTR [ecx]
  412d47:	inc    ebx
  412d48:	hlt    
  412d49:	push   0x72
  412d4b:	mov    edx,0xbe6a6a00
  412d50:	add    BYTE PTR [edx+0x62],ch
  412d53:	loop   0x412d55
  412d55:	push   0x5a
  412d57:	out    0x0,al
  412d59:	jb     0x412dbd
  412d5b:	ror    BYTE PTR [ebx-0x39b75f43],cl
  412d61:	out    dx,al
  412d62:	sahf   
  412d63:	xchg   DWORD PTR [ebx+0x31],esi
  412d66:	push   esi
  412d67:	inc    ebx
  412d68:	mov    ah,0x70
  412d6a:	xchg   ebx,eax
  412d6b:	mov    dh,0xc6
  412d6d:	and    al,0xf1
  412d6f:	faddp  st(3),st
  412d71:	sub    al,0xac
  412d73:	fild   WORD PTR [ecx+ebp*4+0x815040]
  412d7a:	pop    ecx
  412d7b:	out    0x0,al
  412d7d:	jne    0x412d40
  412d7f:	pop    ecx
  412d80:	add    cl,BYTE PTR [ecx+0x287ce71]
  412d86:	(bad)  
  412d87:	sbb    eax,0xe78175d8
  412d8c:	inc    ecx
  412d8d:	loopne 0x412dbe
  412d8f:	or     eax,0x2107d7f
  412d94:	jno    0x412d9d
  412d96:	inc    edx
  412d97:	sbb    eax,0x1ced000f
  412d9c:	fdivr  QWORD PTR [ebx]
  412d9e:	add    cl,al
  412da0:	retf   0x1171
  412da3:	jmp    0x412dc1
  412da5:	in     al,0xff
  412da7:	mov    ecx,0x40c27fb2
  412dac:	cmp    DWORD PTR [ecx-0x2c],0x34
  412db0:	addr16 enter 0x30eb,0xa0
  412db5:	inc    ecx
  412db6:	rol    BYTE PTR [ebx+ebx*2+0x41],1
  412dba:	in     al,0x9d
  412dbc:	sbb    eax,0x5b2c76e0
  412dc1:	inc    ecx
  412dc2:	fdivr  DWORD PTR [edi+0x2ebdc14]
  412dc8:	pop    ebx
  412dc9:	inc    ecx
  412dca:	fmul   QWORD PTR [edi+0x2980d814]
  412dd0:	call   0x2b32a1d5
  412dd5:	inc    ecx
  412dd6:	les    edx,FWORD PTR [eax]
  412dd8:	stc    
  412dd9:	jg     0x412dea
  412ddb:	push   es
  412ddc:	pop    edx
  412ddd:	add    al,0x1e
  412ddf:	outs   dx,DWORD PTR ds:[esi]
  412de0:	mov    cl,0xbd
  412de2:	jmp    0x5ac5:0x1e5459fc
  412de9:	rol    cl,1
  412deb:	out    dx,al
  412dec:	(bad)  
  412ded:	xchg   BYTE PTR [ebp+0x0],al
  412df0:	enter  0x18e8,0x9d
  412df4:	arpl   WORD PTR [eax],di
  412df6:	push   ds
  412df7:	lahf   
  412df8:	arpl   WORD PTR [eax+0x1e],cx
  412dfb:	sahf   
  412dfc:	lods   eax,DWORD PTR ds:[esi]
  412dfd:	inc    edi
  412dfe:	(bad)  
  412dff:	pushf  
  412e00:	push   0x1d0004ca
  412e05:	pop    ss
  412e06:	cmc    
  412e07:	jmp    FWORD PTR [ebx-0x62ff599a]
  412e0d:	jmp    0x412d90
  412e0f:	or     eax,0xd05f6b95
  412e14:	popf   
  412e15:	popa   
  412e16:	or     DWORD PTR [edx+esi*4+0x6b],esi
  412e1a:	pop    edi
  412e1b:	std    
  412e1c:	popf   
  412e1d:	fisttp WORD PTR [eax]
  412e1f:	cmp    eax,ebx
  412e21:	pop    ds
  412e22:	pop    eax
  412e23:	xor    al,0x91
  412e25:	out    dx,eax
  412e26:	mov    DWORD PTR ds:0x88ffbf25,eax
  412e2c:	pop    esp
  412e2d:	sub    ch,ah
  412e2f:	or     BYTE PTR ds:0x17feffa7,dl
  412e35:	sub    al,bl
  412e37:	call   0xbc9090c9
  412e3c:	pop    esp
  412e3d:	xor    bh,ah
  412e3f:	xchg   ecx,esp
  412e41:	mov    ebp,0xb5d18803
  412e46:	push   es
  412e47:	(bad)  
  412e48:	pusha  
  412e49:	sub    al,0x3
  412e4b:	sbb    ebx,0x9908eeee
  412e51:	fcmovnb st,st(7)
  412e53:	inc    ebx
  412e54:	add    ch,bl
  412e56:	mov    DWORD PTR ds:0x8bb175fa,eax
  412e5c:	cdq    
  412e5d:	in     eax,0xe2
  412e5f:	jae    0x412e42
  412e61:	fistp  DWORD PTR [eax-0x8]
  412e64:	loop   0x412ec3
  412e66:	aad    0x50
  412e68:	add    dl,bl
  412e6a:	push   ebp
  412e6b:	shr    eax,1
  412e6d:	cmp    BYTE PTR [edx],al
  412e6f:	jecxz  0x412e53
  412e71:	enter  0xd700,0x88
  412e75:	fst    QWORD PTR [esi+0x11]
  412e78:	jecxz  0x412ea8
  412e7a:	fcmovu st,st(6)
  412e7c:	call   0xcb1:0x58c6ea66
  412e83:	jbe    0x412ebd
  412e85:	mov    cl,0xdc
  412e87:	cmp    al,0xd4
  412e89:	and    al,0x56
  412e8b:	outs   dx,DWORD PTR ds:[esi]
  412e8c:	leave  
  412e8d:	cwde   
  412e8e:	add    DWORD PTR [edx+0x60],esi
  412e91:	xchg   ebp,eax
  412e92:	mov    ah,BYTE PTR [edx+eiz*8]
  412e95:	adc    eax,0x29eb9646
  412e9a:	ror    BYTE PTR [esi+0x3b4624e2],1
  412ea0:	les    edi,FWORD PTR [ebp+0x1]
  412ea3:	pop    ss
  412ea4:	jecxz  0x412e94
  412ea6:	shl    BYTE PTR [edi+ecx*1-0x45],cl
  412eaa:	xor    DWORD PTR [edi-0x30],edi
  412ead:	sbb    ebx,esp
  412eaf:	pushw  es
  412eb1:	dec    ebp
  412eb2:	and    BYTE PTR [edi+ebp*8-0x10537853],0x1c
  412eba:	outs   dx,BYTE PTR ds:[esi]
  412ebb:	sbb    esi,ebx
  412ebd:	jne    0x412f04
  412ebf:	daa    
  412ec0:	adc    bl,BYTE PTR [ecx]
  412ec2:	dec    edi
  412ec3:	cmp    eax,0xac8020e2
  412ec8:	jmp    0x412e77
  412eca:	xchg   DWORD PTR [ebx+ebp*8+0x2f6e1c00],esp
  412ed1:	repz lds eax,FWORD PTR [ebp+0x57]
  412ed5:	adc    dl,BYTE PTR [ecx]
  412ed7:	and    edx,DWORD PTR ds:0x623bf8e2
  412edd:	leave  
  412ede:	push   ebx
  412edf:	leave  
  412ee0:	sub    DWORD PTR [edi],ecx
  412ee2:	popf   
  412ee3:	xor    eax,0x4614ef72
  412ee8:	add    ch,ah
  412eea:	mov    ebx,0x27de103f
  412eef:	jae    0x412ef1
  412ef1:	jmp    0x72976094
  412ef6:	test   BYTE PTR fs:[eax],0x5c
  412efa:	lea    edx,[ecx]
  412efc:	fst    DWORD PTR [eax]
  412efe:	jb     0x412ef6
  412f00:	jne    0x412f0b
  412f02:	sbb    BYTE PTR [eax],dh
  412f04:	or     BYTE PTR [ebp+edx*4+0x11],ch
  412f08:	push   eax
  412f09:	bound  esp,QWORD PTR [edx+ebp*8-0x1e]
  412f0d:	mov    ebx,0x5f0ddd7c
  412f12:	aam    0x1b
  412f14:	jmp    DWORD PTR [ebx]
  412f16:	xchg   ecx,eax
  412f17:	or     eax,0x1912eb6
  412f1c:	fcom   st(2)
  412f1e:	mov    bl,0xf6
  412f20:	jno    0x412eab
  412f22:	sbb    BYTE PTR [ebp+0x18],al
  412f25:	jb     0x412ed1
  412f27:	test   BYTE PTR [ecx+0x4301de16],0xdd
  412f2e:	cdq    
  412f2f:	mov    ah,0x89
  412f31:	aaa    
  412f32:	add    BYTE PTR [ecx],ah
  412f34:	fcos   
  412f36:	ror    DWORD PTR [esi+0x1a],cl
  412f39:	repnz ficom DWORD PTR [edx+0x31611788]
  412f40:	sbb    edi,DWORD PTR [edi]
  412f42:	add    bl,BYTE PTR [ebx+0x50]
  412f45:	not    BYTE PTR [edx+0x71]
  412f48:	cmp    cl,0xeb
  412f4b:	jae    0x412f3f
  412f4d:	cmp    BYTE PTR [ebx],bh
  412f4f:	push   0x190089fd
  412f54:	cli    
  412f55:	aas    
  412f56:	test   al,0xa1
  412f58:	enter  0x1f72,0x8
  412f5c:	icebp  
  412f5d:	jg     0x412f71
  412f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f60:	dec    edi
  412f61:	push   cs
  412f62:	add    bh,bl
  412f64:	mov    ah,0x6f
  412f66:	or     ch,BYTE PTR [esi-0x29]
  412f69:	test   DWORD PTR [eax],ebx
  412f6b:	add    al,0x40
  412f6d:	aaa    
  412f6e:	retf   0xb956
  412f71:	xchg   DWORD PTR [ebp-0x30],eax
  412f74:	add    eax,0x444d0c43
  412f79:	or     al,0x3b
  412f7b:	mov    esi,edx
  412f7d:	or     al,0x86
  412f7f:	dec    eax
  412f80:	loope  0x412f7d
  412f82:	inc    DWORD PTR [edx+0x2b109d1d]
  412f88:	inc    esi
  412f89:	add    BYTE PTR [ebp+0x46],bl
  412f8c:	(bad)  
  412f8d:	std    
  412f8e:	push   esp
  412f8f:	(bad)  
  412f90:	jmp    0xf3d17d1c
  412f95:	mov    dl,0x51
  412f97:	add    BYTE PTR [ecx+0x7f],bh
  412f9a:	in     al,dx
  412f9b:	inc    esp
  412f9c:	mov    bh,0x1c
  412f9e:	das    
  412f9f:	fld    TBYTE PTR [ebx+0x5f66f887]
  412fa5:	(bad)  
  412fa6:	or     eax,DWORD PTR [edx+ebx*2+0x43ffffff]
  412fad:	jnp    0x41301c
  412faf:	pop    es
  412fb0:	call   0xdc:0xb80feef7
  412fb7:	add    BYTE PTR [ebx+esi*8],dh
  412fba:	mov    dl,0x41
  412fbc:	inc    ebp
  412fbd:	dec    edi
  412fbf:	ud2    
  412fc1:	nop
  412fc2:	test   DWORD PTR [ebp+0x6c],edx
  412fc5:	imul   eax,DWORD PTR [edi-0x93c8af],0xffffffd5
  412fcc:	add    edi,DWORD PTR [ebx-0x2e]
  412fcf:	mov    DWORD PTR [ecx],ebp
  412fd1:	ret    0x5d85
  412fd4:	pusha  
  412fd5:	mov    WORD PTR [ecx-0x14],ds
  412fd8:	lea    ebx,[eax]
  412fda:	int3   
  412fdb:	mov    ebx,DWORD PTR [ebp-0x1abc73e5]
  412fe1:	(bad)
  412fe5:	sub    al,0x6b
  412fe7:	pusha  
  412fe8:	inc    ebx
  412fe9:	push   edx
  412fea:	ss loopne 0x413030
  412fed:	xchg   esp,eax
  412fee:	shl    DWORD PTR [ecx-0x68],1
  412ff1:	bound  edx,QWORD PTR [esi-0x10]
  412ff4:	mov    dh,0xe9
  412ff6:	push   cs
  412ff7:	mov    ch,0xdd
  412ff9:	push   edx
  412ffa:	inc    edi
  412ffb:	lock add BYTE PTR [ebx-0xc],al
  412fff:	ss enter 0x6ca2,0x5d
  413004:	add    bl,BYTE PTR [ebp+0x208163eb]
  41300a:	fwait
  41300b:	add    al,0xd
  41300d:	and    DWORD PTR [edi],edx
  41300f:	add    al,BYTE PTR [eax]
  413011:	popf   
  413012:	mov    eax,0xd08d5396
  413017:	xchg   ebx,eax
  413018:	inc    ebp
  413019:	int    0xe8
  41301b:	scas   al,BYTE PTR es:[edi]
  41301c:	ret    0x2624
  41301f:	in     al,dx
  413020:	or     eax,0x87012a2a
  413025:	shl    BYTE PTR [edi-0x75],1
  413028:	inc    ebx
  413029:	jns    0x41307f
  41302b:	inc    edi
  41302c:	les    esp,FWORD PTR [esi]
  41302e:	(bad)  
  41302f:	in     eax,0x29
  413031:	pop    ebx
  413032:	mov    eax,0xcbb7c096
  413037:	aaa    
  413038:	data16 xchg BYTE PTR [ebx],bl
  41303b:	push   ecx
  41303c:	add    esp,DWORD PTR [esi+edx*4]
  41303f:	aad    0xe9
  413041:	fwait
  413042:	mov    eax,0xa614c096
  413047:	aad    0x66
  413049:	mov    es,bp
  41304c:	or     eax,0x2021e
  413051:	popf   
  413052:	rol    DWORD PTR [edx-0x18fdee85],0xe
  413059:	sbb    eax,edi
  41305b:	call   0x5e4acd63
  413060:	cmp    DWORD PTR [eax],eax
  413062:	jmp    0x9588866f
  413067:	or     DWORD PTR [esi],edi
  413069:	into   
  41306a:	nop
  41306b:	xchg   ecx,eax
  41306c:	je     0x413051
  41306e:	es ss fcomp st(6)
  413072:	mov    al,ds:0xf80f0fa9
  413077:	ret    0x5870
  41307a:	lds    ecx,FWORD PTR [eax]
  41307c:	xchg   ebp,eax
  41307d:	push   esi
  41307e:	ins    DWORD PTR es:[edi],dx
  41307f:	add    eax,0x379cdc2c
  413084:	iret   
  413085:	push   cs
  413086:	clc    
  413087:	mov    edi,0x8cd5070
  41308c:	mov    ?,WORD PTR [ebp-0x7c1cb9dc]
  413092:	retf   0x6002
  413095:	cmp    BYTE PTR [ebp-0x76],ah
  413098:	sub    al,0xa0
  41309a:	nop
  41309b:	jle    0x413051
  41309d:	add    ebx,DWORD PTR [ebp-0x52b19efe]
  4130a3:	adc    BYTE PTR [eax+0x7217ee04],0xd3
  4130aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ab:	ret    
  4130ac:	out    dx,al
  4130ad:	xchg   BYTE PTR [edi],dl
  4130af:	add    ah,bh
  4130b1:	add    esp,DWORD PTR [eax+eax*2]
  4130b4:	iret   
  4130b5:	mov    dl,dh
  4130b7:	jmp    0x5070:0xca9cc5ea
  4130be:	pop    ebp
  4130bf:	sbb    al,0x28
  4130c1:	push   edx
  4130c2:	xchg   ebp,eax
  4130c3:	mov    ebx,DWORD PTR [esi-0x358aff09]
  4130c9:	jmp    0xad19:0xe7ef17cd
  4130d0:	pop    es
  4130d1:	add    BYTE PTR [esi+edi*1+0x3],ch
  4130d5:	add    cl,ch
  4130d7:	pop    esi
  4130d8:	sbb    DWORD PTR [ebx+0x29],eax
  4130db:	ins    BYTE PTR es:[edi],dx
  4130dc:	in     eax,0x1
  4130de:	xchg   esi,eax
  4130df:	stos   BYTE PTR es:[edi],al
  4130e0:	sbb    ecx,esi
  4130e2:	lahf   
  4130e3:	cs loopne 0x413069
  4130e6:	call   0xc13389
  4130eb:	pushf  
  4130ec:	push   ebx
  4130ed:	aas    
  4130ee:	jb     0x4130d6
  4130f0:	sbb    ecx,eax
  4130f2:	out    0x1b,al
  4130f4:	push   ecx
  4130f5:	(bad)  
  4130f6:	call   0x186ba99
  4130fb:	adc    al,0x34
  4130fd:	call   0xd04310ec
  413102:	adc    bl,bh
  413104:	push   ecx
  413105:	sbb    esp,DWORD PTR [edx+0x50]
  413108:	out    dx,al
  413109:	sub    BYTE PTR [ecx+0x3487e79c],bh
  41310f:	popa   
  413110:	mov    DWORD PTR [ebx-0x57],esi
  413113:	sti    
  413114:	mov    DWORD PTR [edi+eiz*8],esi
  413117:	add    BYTE PTR [edx],bl
  413119:	xor    BYTE PTR [esp+eax*8],bl
  41311c:	add    eax,0x72c495eb
  413122:	test   BYTE PTR [ebp+eax*2+0x5055d20c],bl
  413129:	into   
  41312a:	nop
  41312b:	add    BYTE PTR [eax+0x1ee9fdd7],al
  413131:	iret   
  413132:	add    al,0xe6
  413134:	sbb    edx,DWORD PTR [eax]
  413136:	(bad)  
  413137:	call   0x2309bada
  41313c:	pop    esp
  41313d:	add    eax,0x29e0d85
  413142:	add    BYTE PTR [edx-0x28],ah
  413145:	cli    
  413146:	mov    BYTE PTR [esi+esi*1+0x3700bf01],dh
  41314d:	xchg   ebx,eax
  41314e:	aaa    
  41314f:	ret    0xda57
  413152:	mov    BYTE PTR [edi-0x10],dh
  413155:	sub    eax,esi
  413157:	add    eax,ebp
  413159:	mov    esi,DWORD PTR [ecx-0x40]
  41315c:	(bad)  
  41315d:	das    
  41315e:	ror    BYTE PTR [ebx+0x3036fcd0],0x11
  413165:	rol    BYTE PTR [eax-0x3e05ff40],cl
  41316b:	jb     0x4130f8
  41316d:	add    DWORD PTR [ebx+0xc],ecx
  413170:	(bad)  
  413172:	jbe    0x413144
  413174:	popf   
  413175:	lods   eax,DWORD PTR ds:[esi]
  413176:	add    BYTE PTR [eax],al
  413178:	mov    ah,0x5
  41317a:	mov    dh,0x47
  41317c:	jne    0x4131e9
  41317e:	rol    BYTE PTR [eax],0xa0
  413181:	(bad)  
  413182:	inc    DWORD PTR [edx+0x7401324b]
  413188:	mov    esi,0x17fc4103
  41318d:	shl    DWORD PTR [ebx+eax*2+0xaeb8400],cl
  413194:	mov    edi,DWORD PTR [ecx+0x754489e2]
  41319a:	icebp  
  41319b:	test   BYTE PTR [ebp+0x38],al
  41319e:	mov    eax,DWORD PTR [ecx-0x14]
  4131a1:	out    dx,eax
  4131a2:	inc    esp
  4131a3:	cld    
  4131a4:	lea    edi,[eax-0x6e72f3ff]
  4131aa:	ret    0xdde8
  4131ad:	div    BYTE PTR [esi+0x70484fb]
  4131b3:	test   BYTE PTR [ecx-0x74fffdbc],bh
  4131b9:	adc    edx,0x5fd844ff
  4131bf:	xchg   DWORD PTR [ebp-0x1c],edx
  4131c2:	pop    edi
  4131c3:	mov    ebp,0x63e39dc2
  4131c8:	xchg   DWORD PTR [ebp+0x395388bd],ecx
  4131ce:	mov    dl,0xc2
  4131d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d2:	mov    ebp,0xc59f508a
  4131d7:	mov    BYTE PTR [ebx+0xd],dl
  4131da:	mov    esi,0x8595c2c2
  4131df:	mov    dl,BYTE PTR [eax-0x5f]
  4131e2:	jge    0x41316c
  4131e4:	push   ebx
  4131e5:	jmp    0x9603f46f
  4131ea:	jge    0x413176
  4131ec:	push   eax
  4131ed:	fwait
  4131ee:	push   eax
  4131ef:	xor    al,0x50
  4131f1:	and    al,0x7c
  4131f3:	or     DWORD PTR [ecx+0x69f5200],eax
  4131f9:	mov    edx,DWORD PTR [ebp-0x49]
  4131fc:	push   ebp
  4131fd:	or     eax,0x51ec36c2
  413202:	mov    edx,0xc54f982e
  413207:	(bad)  
  413208:	fdivr  st,st(5)
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	shl    BYTE PTR [esi],0xd
  41320e:	jmp    0x413234
  413210:	inc    ebx
  413211:	dec    eax
  413212:	adc    DWORD PTR [esp+ecx*2],eax
  413215:	je     0x4131d4
  413217:	and    ecx,DWORD PTR [esp+esi*2-0x5d]
  41321b:	push   0x709dfc5f
  413220:	ss std 
  413222:	lock ret 
  413224:	lea    edx,[ebx+0x49]
  413227:	ins    BYTE PTR es:[edi],dx
  413228:	dec    edi
  413229:	clc    
  41322a:	push   ss
  41322b:	push   ds
  41322c:	mov    ah,0x55
  41322e:	push   ss
  41322f:	mov    ds:0x545796ec,al
  413234:	fldl2t 
  413236:	test   DWORD PTR [edi+ecx*2-0x28],ecx
  41323a:	push   ss
  41323b:	out    dx,al
  41323c:	scas   eax,DWORD PTR es:[edi]
  41323d:	std    
  41323e:	enter  0x5f02,0x8f
  413242:	fidiv  WORD PTR [edx+0x4c4532b8]
  413248:	pop    ebp
  413249:	fld    TBYTE PTR [eax]
  41324b:	jmp    0xbaf00d4a
  413250:	jb     0x413283
  413252:	icebp  
  413253:	aam    0xb4
  413255:	(bad)  [edi+edi*1]
  413258:	pop    ss
  413259:	xor    eax,0x65ea7000
  41325e:	(bad)  
  41325f:	add    ch,dl
  413261:	jo     0x4132a4
  413263:	stc    
  413264:	jle    0x41328d
  413266:	push   eax
  413267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413268:	mov    DWORD PTR [edi+eiz*8-0x76e4c118],esp
  41326f:	pop    ecx
  413270:	add    esi,ebx
  413272:	mov    WORD PTR [esi-0x1a],ds
  413275:	jb     0x4132b8
  413277:	leave  
  413278:	add    ch,BYTE PTR [edi+ebx*8-0x7124b8ec]
  41327f:	data16 (bad) 
  413281:	shr    BYTE PTR [edx-0x71212b4a],1
  413287:	dec    esi
  413288:	loop   0x413274
  41328a:	xor    BYTE PTR [ebp-0x5f26cf16],ch
  413290:	aam    0x6c
  413292:	mov    esi,0x650fe0e
  413297:	repz out 0xf0,eax
  41329a:	push   ss
  41329b:	pop    ebp
  41329c:	pop    ebp
  41329d:	pusha  
  41329e:	inc    eax
  41329f:	xchg   ecx,eax
  4132a0:	push   0x6de88eb
  4132a5:	aaa    
  4132a6:	fucomi st,st(6)
  4132a8:	or     cl,BYTE PTR ds:0x50b5cc5
  4132ae:	(bad)  
  4132af:	mov    BYTE PTR [edi+ecx*4],0xf5
  4132b3:	sti    
  4132b4:	add    edi,esp
  4132b6:	jg     0x413315
  4132b8:	dec    edi
  4132b9:	add    dh,bl
  4132bb:	addr16 push eax
  4132bd:	in     al,dx
  4132be:	outs   dx,BYTE PTR ds:[esi]
  4132bf:	add    ch,ch
  4132c1:	mov    dh,0xfd
  4132c3:	fsub   QWORD PTR [esi-0x6637ff16]
  4132c9:	add    al,BYTE PTR [ecx+ebp*1+0x5730ffda]
  4132d0:	fsub   st(1),st
  4132d2:	add    bh,dl
  4132d4:	in     al,dx
  4132d5:	aad    0x73
  4132d7:	sbb    eax,0x36825b06
  4132dc:	out    0x89,eax
  4132de:	mov    BYTE PTR [edx-0x68],0x11
  4132e2:	rol    dh,0xb4
  4132e5:	cmp    edi,eax
  4132e7:	sub    esp,DWORD PTR [esi-0x4dfcdfe]
  4132ed:	dec    dh
  4132ef:	add    esp,eax
  4132f1:	xchg   ebx,eax
  4132f2:	test   al,0xe8
  4132f4:	push   0xffffffda
  4132f6:	mov    DWORD PTR [ebp+0x6065feb2],edx
  4132fc:	mov    al,ds:0x96c54489
  413301:	mov    cl,BYTE PTR [eax]
  413303:	stos   DWORD PTR es:[edi],eax
  413304:	test   eax,0xc5725302
  413309:	sub    esp,0x552c71e5
  41330f:	inc    ebx
  413310:	popa   
  413311:	push   0xe2aac608
  413316:	test   eax,0xf889992a
  41331b:	bound  eax,QWORD PTR [esi-0x2b]
  41331e:	adc    esp,ebp
  413320:	mov    DWORD PTR [ebx],edx
  413322:	add    BYTE PTR [edx+0x0],dh
  413325:	push   ecx
  413326:	jg     0x41331e
  413328:	out    dx,al
  413329:	repnz data16 (bad) 
  41332c:	call   0xe1bcb4cf
  413331:	sahf   
  413332:	jnp    0x413352
  413334:	add    BYTE PTR [edx-0x3299fc7b],ch
  41333a:	inc    eax
  41333b:	or     BYTE PTR [edi],cl
  41333d:	mov    eax,DWORD PTR [ecx+0x4]
  413340:	(bad)  
  413341:	jns    0x4132fc
  413343:	add    BYTE PTR [esi-0x53],ah
  413346:	inc    eax
  413347:	or     cl,BYTE PTR [edi]
  413349:	mov    eax,0x34fffd3d
  41334e:	or     dh,BYTE PTR [ebx+0x4d0f3c4e]
  413354:	push   ebx
  413355:	arpl   bx,sp
  413357:	mov    cl,0x10
  413359:	inc    esp
  41335a:	inc    DWORD PTR [eax+0x4dd848c0]
  413360:	push   0xffffff9c
  413365:	ret    
  413366:	inc    ebx
  413367:	or     BYTE PTR [ebp-0x72b21cc6],cl
  41336d:	cmp    DWORD PTR [edi],eax
  41336f:	push   eax
  413370:	push   ebx
  413371:	pushf  
  413372:	int3   
  413373:	mov    bh,0x1
  413375:	(bad)  
  413376:	in     eax,0x2
  413378:	xor    eax,DWORD PTR [edi+eax*4-0x41c6efba]
  41337f:	or     eax,DWORD PTR [eax+eiz*8+0x2fffffff]
  413386:	sub    al,0x8
  413388:	data16 add BYTE PTR [edi],ch
  41338b:	inc    edx
  41338c:	push   cs
  41338d:	ud2    
  41338f:	dec    ecx
  413390:	or     BYTE PTR [esi-0xb],ah
  413393:	out    0xff,al
  413395:	xchg   edx,ecx
  413397:	test   BYTE PTR [edx],0xb6
  41339a:	inc    esp
  41339b:	sti    
  41339c:	stos   BYTE PTR es:[edi],al
  41339d:	sar    ebp,0x43
  4133a0:	or     al,0xa8
  4133a2:	ja     0x4133e6
  4133a4:	push   es
  4133a5:	and    DWORD PTR [edx+edi*4],0x7f
  4133a9:	sar    BYTE PTR [eax+0x7d],0x46
  4133ad:	or     al,0x9d
  4133af:	gs inc eax
  4133b1:	push   cs
  4133b2:	adc    BYTE PTR [edx],ah
  4133b4:	and    al,0x88
  4133b6:	sahf   
  4133b7:	push   ebp
  4133b8:	inc    eax
  4133b9:	push   cs
  4133ba:	and    eax,0xe3c6212a
  4133bf:	mov    ebp,0xe11e6601
  4133c4:	pop    es
  4133c5:	or     BYTE PTR [edx-0x24773eb2],ch
  4133cb:	cld    
  4133cc:	pop    ss
  4133cd:	push   DWORD PTR [ecx-0x254af73b]
  4133d3:	mov    cl,0x84
  4133d5:	clc    
  4133d6:	lods   eax,DWORD PTR ds:[esi]
  4133d7:	mov    ?,eax
  4133d9:	les    ebx,FWORD PTR [eax-0x2d]
  4133dc:	add    DWORD PTR [ebp+ebx*4-0x25],edi
  4133e0:	rol    BYTE PTR [ebx+0x5],0x3c
  4133e4:	add    al,0x0
  4133e6:	popf   
  4133e7:	and    BYTE PTR [esi],bh
  4133e9:	hlt    
  4133ea:	xchg   edx,eax
  4133eb:	fild   DWORD PTR [ecx]
  4133ed:	add    BYTE PTR [eax],al
  4133ef:	not    ch
  4133f1:	test   al,bh
  4133f3:	mov    ebp,0x60c4ee76
  4133f8:	rol    DWORD PTR [ecx],cl
  4133fa:	add    dl,dl
  4133fc:	fcmovnb st,st(0)
  4133fe:	inc    ebx
  4133ff:	(bad)
  413402:	add    BYTE PTR [ebp-0x450bc1d8],bl
  413408:	fild   DWORD PTR [ecx]
  41340a:	add    BYTE PTR [eax],ah
  41340c:	sub    ch,BYTE PTR [edx]
  41340e:	push   eax
  41340f:	sbb    BYTE PTR [edx],ah
  413411:	and    BYTE PTR [eax+0x16],dl
  413414:	daa    
  413415:	or     al,0xe8
  413417:	jno    0x4133e2
  413419:	aad    0xfd
  41341b:	and    BYTE PTR [ecx],ch
  41341d:	sub    DWORD PTR [eax+0x18],edx
  413420:	and    DWORD PTR [esi],ebx
  413422:	push   eax
  413423:	push   ss
  413424:	es fsub st(0),st
  413427:	popa   
  413428:	add    ah,BYTE PTR [ebp+0x257f70d7]
  41342e:	sub    ch,cl
  413430:	jg     0x41345f
  413432:	sub    al,0xcd
  413434:	jge    0x41345a
  413436:	rol    BYTE PTR [ebp-0x6a],1
  413439:	test   edi,edx
  41343b:	push   eax
  41343c:	pop    esp
  41343d:	xlat   BYTE PTR ds:[ebx]
  41343e:	xor    dl,BYTE PTR [esi]
  413440:	dec    eax
  413441:	mov    eax,0x68413533
  413446:	xlat   BYTE PTR ds:[ebx]
  413447:	cmp    BYTE PTR [ebp+ebp*4+0x13],bh
  41344b:	and    eax,0xf006a848
  413450:	inc    edi
  413451:	loope  0x413459
  413453:	add    al,dh
  413455:	inc    edi
  413456:	fstp   TBYTE PTR [ebp-0x7f17e99d]
  41345c:	fst    QWORD PTR [ebp-0x1c]
  41345f:	jmp    0x41343f
  413461:	xor    DWORD PTR [esi],0xcf481ad7
  413467:	sbb    ch,0x55
  41346a:	std    
  41346b:	(bad)  
  41346c:	imul   esi,edx,0x1d
  41346f:	push   cs
  413470:	call   0xa3353b6b
  413475:	add    ah,BYTE PTR [eax+0x3e]
  413478:	mov    eax,ds:0x99502787
  41347d:	enter  0xd6a4,0xca
  413481:	aaa    
  413482:	push   DWORD PTR [eax-0x7c112ee3]
  413488:	ss shl edi,1
  41348b:	push   eax
  41348c:	mov    ds:0xa9f455d1,al
  413491:	test   dl,0xf3
  413494:	bound  eax,QWORD PTR [edx]
  413496:	xor    eax,0xc6835dec
  41349b:	(bad)  
  41349c:	int3   
  41349d:	fdiv   DWORD PTR [edx-0x43]
  4134a0:	call   0x505334d5
  4134a5:	lds    eax,FWORD PTR [ecx+ebp*8]
  4134a8:	push   ebx
  4134a9:	pop    ecx
  4134aa:	add    al,0xa6
  4134ac:	mov    al,ds:0x6e8913cd
  4134b1:	adc    BYTE PTR [eax],al
  4134b3:	xchg   esi,eax
  4134b4:	shl    dl,1
  4134b6:	cld    
  4134b7:	hlt    
  4134b8:	add    BYTE PTR [edx-0xd],bh
  4134bb:	aas    
  4134bc:	jmp    0x915d8e2c
  4134c1:	leave  
  4134c2:	cmp    ch,0x76
  4134c5:	imul   ebx,DWORD PTR [ecx+0x18],0xffffff81
  4134c9:	mov    cl,0x82
  4134cb:	std    
  4134cc:	dec    bx
  4134ce:	pop    ecx
  4134cf:	inc    esp
  4134d0:	push   ecx
  4134d1:	sbb    DWORD PTR [ebx-0x258fa903],eax
  4134d7:	sub    DWORD PTR [ecx-0xd],0x279cc1cd
  4134de:	fisttp WORD PTR [edi-0x69]
  4134e1:	repz push ebx
  4134e3:	or     al,0x36
  4134e5:	or     eax,0x9ea91258
  4134ea:	jns    0x4134dc
  4134ec:	int3   
  4134ed:	sahf   
  4134ee:	add    bh,ch
  4134f0:	jmp    0x100f60c
  4134f5:	out    dx,al
  4134f6:	cli    
  4134f7:	mov    esi,0xdf4fe062
  4134fc:	jmp    0x724137ec
  413501:	clc    
  413502:	(bad)  
  413503:	loop   0x4134de
  413505:	xchg   edi,eax
  413506:	mov    esp,0x8fa601bf
  41350b:	fcomip st,st(1)
  41350d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350e:	pop    DWORD PTR [edi+0x45cc524]
  413514:	fs (bad) 
  413516:	into   
  413517:	push   eax
  413518:	into   
  413519:	jmp    0x1917:0xe7fa
  413520:	std    
  413521:	inc    DWORD PTR [eax]
  413523:	(bad)  
  413524:	je     0x41353e
  413526:	icebp  
  413527:	shl    BYTE PTR [eax+edx*1-0x6e],0xb5
  41352c:	jno    0x41353a
  41352e:	cmp    edi,DWORD PTR [edi]
  413530:	or     al,ch
  413532:	jmp    0x41354c
  413534:	std    
  413535:	push   eax
  413537:	(bad)  
  413538:	je     0x41353e
  41353a:	hlt    
  41353b:	add    esp,edi
  41353d:	add    dl,BYTE PTR [esi]
  41353f:	ret    
  413540:	pop    esi
  413541:	leave  
  413542:	idiv   ch
  413544:	call   DWORD PTR [edi+edi*4-0x26]
  413548:	jge    0x413536
  41354a:	dec    eax
  41354b:	add    DWORD PTR [eax],eax
  41354d:	add    bh,dh
  41354f:	jns    0x4135aa
  413551:	or     al,0xf2
  413553:	sbb    eax,0x593c7d87
  413558:	or     al,0x68
  41355a:	pushf  
  41355b:	inc    eax
  41355c:	inc    eax
  41355d:	add    BYTE PTR [ebx],dh
  41355f:	fld    TBYTE PTR [ebp+0x5e]
  413562:	cmc    
  413563:	add    al,BYTE PTR [eax+eax*8+0x7fb4efb]
  41356a:	add    al,0x3
  41356c:	push   0xfdca1340
  413571:	imul   edi,eax,0x24c84187
  413577:	fist   DWORD PTR [edi-0x7bfd3aa3]
  41357d:	ror    bl,0x4e
  413580:	jecxz  0x413589
  413582:	add    BYTE PTR [edx+eax*1+0x132c046a],dh
  413589:	mov    DWORD PTR [ebp+0x7c],ecx
  41358c:	adc    esi,DWORD PTR [ebp+0x465238]
  413592:	call   0x3cf953
  413597:	popf   
  413598:	pop    esi
  413599:	ror    DWORD PTR ds:0xfffc6f20,0x92
  4135a0:	push   esp
  4135a1:	ds int 0x15
  4135a4:	daa    
  4135a5:	scas   eax,DWORD PTR es:[edi]
  4135a6:	mov    eax,DWORD PTR [eax]
  4135a8:	xchg   ebp,eax
  4135a9:	xchg   BYTE PTR [ebx+0x69],al
  4135ac:	(bad)  
  4135ad:	rol    BYTE PTR ds:0x7b86db9d,0x80
  4135b4:	pop    edi
  4135b5:	shl    BYTE PTR ds:[ebp+0x34],1
  4135b9:	cld    
  4135ba:	call   FWORD PTR [edx-0x53]
  4135bd:	mov    eax,DWORD PTR [ebx+0x38]
  4135c0:	aad    0x8b
  4135c2:	dec    ebx
  4135c3:	dec    edx
  4135c4:	push   es
  4135c5:	shl    eax,0x95
  4135c8:	std    
  4135c9:	push   es
  4135ca:	mov    edi,0x3c114aa
  4135cf:	xor    BYTE PTR [eax-0x2c],ch
  4135d2:	std    
  4135d3:	in     al,0xdb
  4135d5:	add    BYTE PTR [eax],al
  4135d7:	popf   
  4135d8:	mov    ebp,0x64aabf18
  4135dd:	test   DWORD PTR ds:0x988db9d,eax
  4135e3:	push   ds
  4135e4:	(bad)  
  4135e5:	jmp    0x150f35ea
  4135ea:	xchg   BYTE PTR [ebx+0x5],al
  4135ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ee:	xor    DWORD PTR [ebx+0x7b89f748],ecx
  4135f4:	stc    
  4135f5:	in     al,dx
  4135f6:	das    
  4135f7:	add    al,0x16
  4135f9:	lahf   
  4135fa:	in     eax,0x89
  4135fc:	in     eax,0x60
  4135fe:	mov    cl,0xbf
  413600:	(bad)  
  413601:	stos   DWORD PTR es:[edi],eax
  413602:	sbb    bh,0x9d
  413605:	fcmovnbe st,st(4)
  413607:	add    BYTE PTR [esi-0x42f77df],dl
  41360d:	fcmovnbe st,st(4)
  41360f:	add    BYTE PTR [ebp-0x1545f5fe],bl
  413615:	loop   0x41360e
  413617:	(bad)  
  413618:	rcr    BYTE PTR [eax-0x15],cl
  41361b:	sbb    dh,0xe2
  41361e:	test   al,0xdd
  413620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413621:	ret    
  413622:	leave  
  413623:	cld    
  413624:	fcmove st,st(5)
  413626:	xor    al,0xfc
  413628:	xchg   ebp,eax
  413629:	mov    eax,0xda7d4160
  41362e:	xchg   BYTE PTR [ecx],dh
  413630:	jb     0x4135ff
  413632:	imul   eax,esp,0xffffffee
  413635:	push   es
  413636:	push   0x41
  413638:	jno    0x413607
  41363a:	bound  ecx,QWORD PTR [ecx+0x49]
  41363d:	cmp    DWORD PTR [edi+0x4],0xae586a0
  413644:	popf   
  413645:	add    ch,BYTE PTR [edi]
  413647:	add    ebx,DWORD PTR [esi]
  413649:	and    dh,ch
  41364b:	add    eax,DWORD PTR [eax]
  41364d:	popf   
  41364e:	pop    edx
  41364f:	daa    
  413650:	pop    ebx
  413651:	xchg   esp,eax
  413652:	add    bh,BYTE PTR [esi+0x6bfaa67e]
  413658:	dec    ecx
  413659:	and    BYTE PTR [edx],dh
  41365b:	aas    
  41365c:	nop
  41365d:	jns    0x413662
  41365f:	out    0x87,eax
  413661:	(bad)  
  413663:	push   0xfffffffc
  413665:	mov    eax,ds:0x8683e702
  41366a:	int    0xe7
  41366c:	jle    0x413612
  41366e:	std    
  41366f:	push   ebx
  413670:	(bad)  
  413671:	lock xor bh,ch
  413674:	xchg   ebp,ebx
  413676:	cld    
  413677:	(bad)  
  413678:	fcomp  DWORD PTR [ebx-0x5b8118fe]
  41367e:	add    DWORD PTR [ebx+eiz*8+0x7bac7f9d],0xe3947f6d
  413689:	shl    BYTE PTR [eax],0x0
  41368c:	in     eax,0x3b
  41368e:	mov    edx,0x869e2083
  413693:	(bad)  
  413695:	sahf   
  413696:	add    bh,ch
  413698:	push   esp
  413699:	test   eax,0x76614377
  41369e:	push   eax
  41369f:	cld    
  4136a0:	into   
  4136a1:	outs   dx,DWORD PTR ds:[esi]
  4136a2:	jp     0x41367c
  4136a4:	ins    BYTE PTR es:[edi],dx
  4136a5:	cmp    edi,esi
  4136a7:	and    DWORD PTR [esp+edx*4-0x2a49fffe],0xffffffe2
  4136af:	std    
  4136b0:	aam    0x0
  4136b2:	out    0xf0,al
  4136b4:	aas    
  4136b5:	jmp    0xf08acb59
  4136ba:	jecxz  0x413686
  4136bc:	data16 (bad) 
  4136bf:	cli    
  4136c0:	gs test al,0x3e
  4136c3:	sti    
  4136c4:	gs repnz popa 
  4136c7:	xchg   DWORD PTR gs:[ecx*8+0x3b2a8964],esp
  4136cf:	push   DWORD PTR [ebp-0x4099cdde]
  4136d5:	dec    ecx
  4136d6:	or     WORD PTR es:[eax],bp
  4136da:	mov    ah,0x83
  4136dc:	inc    ebx
  4136dd:	ja     0x41367a
  4136df:	lds    esp,FWORD PTR [ebx]
  4136e1:	jmp    0x72420484
  4136e6:	fisttp WORD PTR [ebx-0x72fc2619]
  4136ec:	mov    DWORD PTR [esi],esp
  4136ee:	loope  0x41369b
  4136f0:	adc    BYTE PTR [edx+0x37],ah
  4136f3:	and    dl,dh
  4136f5:	repnz sub BYTE PTR [eax+ebp*8+0x8abd9f1],cl
  4136fd:	loop   0x4136e0
  4136ff:	add    DWORD PTR [ebx+0x59],0x70
  413703:	repnz mov al,BYTE PTR [eax]
  413706:	neg    DWORD PTR [edi]
  413708:	push   eax
  413709:	(bad)  
  41370a:	stc    
  41370b:	lahf   
  41370c:	push   eax
  41370d:	call   0x3c6868
  413712:	sbb    al,bh
  413714:	inc    ecx
  413715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413716:	add    BYTE PTR [ecx+ebx*2-0x30e5ba43],ch
  41371d:	arpl   cx,ax
  41371f:	leave  
  413720:	outs   dx,BYTE PTR ds:[esi]
  413721:	or     BYTE PTR [edx-0x74],ch
  413724:	dec    esp
  413725:	inc    ecx
  413726:	pushf  
  413727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413728:	mov    cl,0x71
  41372a:	or     BYTE PTR [eax+eiz*4+0x5c],ch
  41372e:	add    DWORD PTR [ebx+eax*4-0x1107f040],eax
  413735:	add    eax,0xfb847400
  41373a:	je     0x4137a4
  41373c:	or     bh,bl
  41373e:	jne    0x413764
  413740:	mov    cl,0x71
  413742:	or     BYTE PTR [eax+ecx*2],bl
  413745:	pop    esp
  413746:	add    DWORD PTR [ebx+eax*4],esi
  413749:	ror    BYTE PTR [edi],0xb8
  41374c:	(bad)  
  41374d:	add    eax,DWORD PTR [eax]
  41374f:	inc    esp
  413750:	dec    esi
  413751:	cmp    DWORD PTR [edx+ecx*2],esi
  413754:	aas    
  413755:	add    BYTE PTR [eax+0xb1c3],bh
  41375b:	add    dh,BYTE PTR [ecx+0x4e040000]
  413761:	enter  0xda56,0x47
  413765:	inc    ecx
  413766:	fist   DWORD PTR [ecx-0x3c01777d]
  41376c:	mov    cl,0x6a
  41376e:	add    BYTE PTR [ecx+edi*4],dl
  413771:	inc    ecx
  413772:	fadd   DWORD PTR [ecx+ebx*2]
  413775:	test   DWORD PTR [ebp+0x5d],ecx
  413778:	mov    cl,0xd3
  41377a:	push   esi
  41377b:	add    bh,al
  41377d:	test   al,0x89
  41377f:	test   DWORD PTR [ebp-0x2d02329f],ebx
  413785:	xchg   edx,eax
  413786:	xor    ebp,edi
  413788:	repnz push edi
  41378a:	enter  0x1418,0x56
  41378e:	leave  
  41378f:	xchg   DWORD PTR [eax],esi
  413791:	add    eax,0xd8b57b83
  413796:	add    BYTE PTR [esi+0x1d8c4],al
  41379c:	aaa    
  41379d:	fstp   DWORD PTR [ecx+0x2c]
  4137a0:	pushf  
  4137a1:	fild   DWORD PTR [ecx]
  4137a3:	mov    ebx,eax
  4137a5:	jecxz  0x4137d8
  4137a7:	xor    DWORD PTR [ebp-0x4c],ebx
  4137aa:	xor    BYTE PTR [esi-0x64],bl
  4137ad:	fild   DWORD PTR [eax+edi*8-0x41791e86]
  4137b4:	popf   
  4137b5:	fild   DWORD PTR [ecx]
  4137b7:	std    
  4137b8:	nop
  4137b9:	(bad)  
  4137ba:	idiv   DWORD PTR [edi]
  4137bc:	popf   
  4137bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137be:	cmp    eax,0xdb9d25
  4137c3:	and    DWORD PTR [edi+ebx*8],0x1
  4137c7:	add    BYTE PTR [esi],bl
  4137c9:	push   edi
  4137cb:	dec    esi
  4137cd:	aam    0x5b
  4137cf:	std    
  4137d0:	cmp    al,bh
  4137d2:	cmc    
  4137d3:	cld    
  4137d4:	mov    BYTE PTR [ebx+0x549d3ff4],ch
  4137da:	inc    esi
  4137db:	or     al,0x16
  4137dd:	aam    0xd0
  4137df:	push   eax
  4137e0:	add    BYTE PTR [ebp+0x1ef84e64],ch
  4137e6:	mov    edi,0x4121fff1
  4137eb:	push   ebp
  4137ec:	outs   dx,DWORD PTR ds:[esi]
  4137ed:	push   ds
  4137ee:	mov    edi,0x108600d9
  4137f3:	cli    
  4137f4:	mov    BYTE PTR [eax+0x7],bl
  4137f7:	jl     0x413844
  4137f9:	cmc    
  4137fa:	add    dh,BYTE PTR [edi+edx*1-0x1e]
  4137fe:	pop    edi
  4137ff:	push   0x51
  413801:	sahf   
  413802:	add    bl,BYTE PTR [ebp-0x727ac4c4]
  413808:	or     BYTE PTR [ebp-0x3fc654b0],bl
  41380e:	dec    edi
  41380f:	out    dx,eax
  413810:	jl     0x4137ee
  413812:	ficom  DWORD PTR [esi-0x28]
  413815:	mov    al,0xc9
  413817:	push   0xffffffcb
  413819:	test   al,0xf9
  41381b:	push   0xffffffeb
  41381d:	lahf   
  41381e:	add    ah,bh
  413820:	mov    BYTE PTR [ebp-0x7],bl
  413823:	push   0xfffffff3
  413825:	lahf   
  413826:	add    ah,bh
  413828:	add    BYTE PTR [ebp+0x14233c03],0x3f
  41382f:	xlat   BYTE PTR ds:[ebx]
  413830:	inc    ebx
  413831:	mov    ah,0x3f
  413833:	scas   eax,DWORD PTR es:[edi]
  413834:	pop    ecx
  413835:	(bad)
  413839:	sbb    al,0xd9
  41383b:	lock jp 0x41388e
  41383e:	ja     0x413854
  413840:	loopne 0x413887
  413842:	pop    edi
  413843:	adc    ecx,edi
  413845:	add    BYTE PTR [eax-0x23],dl
  413848:	fistp  WORD PTR [ecx-0x5e]
  41384b:	xor    BYTE PTR [edi+0x7ec9c0f2],cl
  413851:	iret   
  413852:	fdivrp st(2),st
  413854:	popa   
  413855:	dec    ecx
  413856:	lea    eax,[ebp+0xda2dc24]
  41385c:	lods   al,BYTE PTR ds:[esi]
  41385d:	retf   
  41385e:	scas   eax,DWORD PTR es:[edi]
  41385f:	jo     0x4138cb
  413861:	push   ecx
  413862:	mov    cl,0x2
  413864:	out    0x87,al
  413866:	(bad)  
  413867:	leave  
  413868:	dec    esi
  413869:	iret   
  41386a:	or     BYTE PTR [edi-0x25],cl
  41386d:	into   
  41386e:	scas   al,BYTE PTR es:[edi]
  41386f:	out    dx,al
  413870:	fadd   DWORD PTR [ebx-0x63]
  413873:	fild   DWORD PTR [eax]
  413875:	aam    0xe3
  413877:	(bad)  
  413878:	std    
  413879:	bound  ecx,QWORD PTR [edx+edi*8+0x67]
  41387d:	test   eax,0x92ffeb4b
  413882:	mov    eax,ds:0x8916437d
  413887:	ficomp DWORD PTR [edx-0x7bfd5e4d]
  41388d:	sub    edx,eax
  41388f:	test   BYTE PTR [edi+0xd029ee5],bh
  413895:	aas    
  413896:	mov    DWORD PTR fs:[ecx-0x7c085eff],0x29505
  4138a1:	xor    ecx,ebx
  4138a3:	cmc    
  4138a4:	sub    DWORD PTR [esp+ebx*4+0x210002],0xffffff8a
  4138ac:	test   BYTE PTR [ebx],ch
  4138ae:	jmp    0x41384e
  4138b0:	add    cl,BYTE PTR [eax-0x12]
  4138b3:	and    bh,BYTE PTR [edi+edi*8+0xd3a9ee8]
  4138ba:	gs aas 
  4138bc:	add    eax,DWORD PTR [eax]
  4138be:	jmp    0x79c42e69
  4138c3:	mov    ds:0xd9010002,al
  4138c8:	dec    ebp
  4138c9:	sbb    ecx,ebp
  4138cb:	in     al,0x1
  4138cd:	mov    ebp,DWORD PTR [ecx+ecx*8]
  4138d0:	xor    ch,al
  4138d2:	sbb    BYTE PTR [edi+0x5e6dfdc7],al
  4138d8:	test   BYTE PTR [ebx+0x2a2f1],0xd1
  4138df:	fimul  WORD PTR [ebp+0x19]
  4138e2:	jmp    0xaccc375b
  4138e7:	fidiv  DWORD PTR [edx]
  4138e9:	call   0xfe08effe
  4138ee:	add    BYTE PTR [eax-0x3d],dh
  4138f1:	or     eax,DWORD PTR [esp+eiz*8+0x7fffffff]
  4138f8:	inc    edx
  4138f9:	les    ecx,FWORD PTR [ebx+0x1ab5]
  4138ff:	mov    ebx,0x85d18703
  413904:	test   eax,0x4c860b10
  413909:	int    0xc1
  41390b:	xchg   esi,eax
  41390c:	sar    DWORD PTR [esi-0x1f],cl
  41390f:	add    BYTE PTR [eax+edi*4-0x71510000],dh
  413916:	mov    ebp,0xe2bebce8
  41391b:	or     BYTE PTR [edi-0xfba7a3f],bh
  413921:	or     eax,DWORD PTR ds:[ebp+ebp*4+0x5cfffffa]
  413929:	aam    0x79
  41392b:	call   FWORD PTR [ebx+0x49]
  41392e:	lock test DWORD PTR [edx-0x3b],eax
  413932:	sbb    DWORD PTR [edx],0x68000380
  413938:	les    ebp,FWORD PTR ds:0x2f3b0017
  41393e:	les    edx,FWORD PTR [esi+0xc]
  413941:	ficom  DWORD PTR [ebp+0x1]
  413944:	inc    esp
  413945:	jg     0x413907
  413947:	xadd   cl,cl
  41394a:	add    DWORD PTR [eax],eax
  41394c:	xor    al,0x4a
  41394e:	inc    ecx
  41394f:	or     al,0xcf
  413951:	pinsrw mm1,WORD PTR [ebx+0x50fb0d2c],0x48
  413959:	or     eax,0xb63813e8
  41395e:	sti    
  41395f:	jmp    0x3cf1e5
  413964:	(bad)  
  413965:	aaa    
  413966:	or     BYTE PTR [eax-0x63],ch
  413969:	cdq    
  41396a:	push   esp
  41396b:	sbb    DWORD PTR [ebp+0x588b06c3],ebx
  413971:	or     DWORD PTR [eax+ebp*8],esi
  413974:	add    BYTE PTR [edi],ch
  413976:	mov    ds:0x19190002,al
  41397b:	sti    
  41397c:	add    esp,0xffffffdb
  41397f:	add    DWORD PTR [eax],eax
  413981:	jnp    0x41399d
  413983:	inc    ebp
  413984:	out    dx,eax
  413985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413986:	jg     0x41394a
  413988:	inc    ebx
  413989:	into   
  41398a:	loopne 0x4139e3
  41398c:	adc    eax,0x8df88e
  413991:	sbb    eax,0x90fd01d9
  413996:	sub    eax,0x569d3ff8
  41399b:	les    esp,FWORD PTR [esi+0x16]
  41399e:	sahf   
  41399f:	stos   BYTE PTR es:[edi],al
  4139a0:	or     eax,0x65ef1608
  4139a5:	aam    0x1e
  4139a7:	shl    DWORD PTR [ebx-0x59],1
  4139aa:	xor    eax,0x3e664377
  4139af:	or     DWORD PTR [ebx-0x72],eax
  4139b2:	or     BYTE PTR ds:0x15b9cbe,al
  4139b8:	add    BYTE PTR [edi],ah
  4139ba:	pop    ss
  4139bb:	lods   al,BYTE PTR ds:[esi]
  4139bc:	mov    bl,al
  4139be:	mov    esi,DWORD PTR [edi-0x30]
  4139c1:	sbb    eax,0x3f80027b
  4139c6:	fild   DWORD PTR [edi]
  4139c8:	retf   0xb5c9
  4139cb:	test   edi,eax
  4139cd:	ror    edx,1
  4139cf:	adc    bh,al
  4139d1:	test   DWORD PTR [esi],ecx
  4139d3:	out    dx,eax
  4139d4:	or     al,0x11
  4139d6:	fwait
  4139d7:	cmp    al,BYTE PTR [ecx-0x7f29c400]
  4139dd:	mov    edi,0x30fc809f
  4139e2:	push   esp
  4139e3:	add    ebx,DWORD PTR [edi]
  4139e5:	aas    
  4139e6:	lods   al,BYTE PTR ds:[esi]
  4139e7:	cmc    
  4139e8:	jb     0x4139ac
  4139ea:	pop    edx
  4139eb:	or     DWORD PTR [eax-0x1],0xf8e3c41d
  4139f2:	repz js 0x4139a9
  4139f5:	shl    DWORD PTR [edi],cl
  4139f7:	mov    bl,0x67
  4139f9:	loop   0x413994
  4139fb:	or     BYTE PTR [ecx+0x7],0xa7
  4139ff:	mov    eax,0xbc1925b3
  413a04:	fwait
  413a05:	repnz lea edi,[ebx-0xa53c121]
  413a0c:	jp     0x4139d0
  413a0e:	bound  eax,QWORD PTR [ecx-0x3be336f8]
  413a14:	out    dx,eax
  413a15:	fsubr  DWORD PTR [eax+0x660b3011]
  413a1b:	icebp  
  413a1c:	in     eax,0x77
  413a1e:	jmp    0xa881:0xa9e26a3b
  413a25:	hlt    
  413a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a27:	shl    DWORD PTR [ecx+0x39],cl
  413a2a:	lea    eax,[edx+0xc106c8]
  413a30:	adc    DWORD PTR [ecx+ecx*1+0x21c3f9f3],edi
  413a37:	mov    ebx,0x3a5d6fee
  413a3c:	push   0xffffffe4
  413a3e:	add    BYTE PTR [ebp-0x7f],bh
  413a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a42:	inc    esp
  413a43:	xchg   esp,eax
  413a44:	rcr    BYTE PTR [ebp+0x12fa4d41],cl
  413a4a:	std    
  413a4b:	les    ecx,FWORD PTR [edx+0x68]
  413a4e:	mov    edx,0x3e6fa9d
  413a53:	loopne 0x413a21
  413a55:	sub    al,0xd4
  413a57:	lea    ecx,[esi-0x10]
  413a5a:	pop    ebp
  413a5b:	and    eax,0xa1a70083
  413a60:	cli    
  413a61:	(bad)  
  413a62:	call   0x744492de
  413a67:	pop    esp
  413a68:	rcl    BYTE PTR [eax+0x6c],cl
  413a6b:	pop    esp
  413a6c:	stos   BYTE PTR es:[edi],al
  413a6d:	push   eax
  413a6e:	inc    ecx
  413a6f:	pusha  
  413a70:	dec    ebx
  413a71:	std    
  413a72:	dec    esi
  413a73:	push   es
  413a74:	mov    es,WORD PTR [ebx+0x3a]
  413a77:	scas   al,BYTE PTR es:[edi]
  413a78:	xor    cl,BYTE PTR ds:0x50d55c76
  413a7e:	bound  ebx,QWORD PTR [esi+esi*8-0x78]
  413a82:	loope  0x413ae7
  413a84:	lods   al,BYTE PTR ds:[esi]
  413a85:	std    
  413a86:	mov    ecx,0x1c12dbc6
  413a8b:	out    0xc6,al
  413a8d:	mov    DWORD PTR [esi+eax*8-0x4c69bfa4],edx
  413a94:	les    esp,FWORD PTR [edi-0x12]
  413a97:	xor    eax,0xd6999441
  413a9c:	jbe    0x413af6
  413a9e:	call   0xdf01b941
  413aa3:	add    BYTE PTR [edx],ah
  413aa5:	mov    WORD PTR [edx],es
  413aa7:	jmp    0x75bcbd4a
  413aac:	sahf   
  413aad:	cmc    
  413aae:	xchg   edx,eax
  413aaf:	test   eax,0x39c08e87
  413ab4:	add    al,BYTE PTR [eax-0x6b]
  413ab7:	jb     0x413ae7
  413ab9:	jp     0x413a83
  413abb:	test   al,0x51
  413abd:	repz jle 0x413a8b
  413ac0:	sahf   
  413ac1:	add    bh,ch
  413ac3:	jmp    0xb1caf02b
  413ac8:	popa   
  413ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aca:	adc    ah,al
  413acc:	sahf   
  413acd:	lds    eax,FWORD PTR [eax]
  413acf:	jmp    0x24caf71f
  413ad4:	inc    ebp
  413ad5:	test   edi,ebx
  413ad7:	add    BYTE PTR [edi+edi*4],ch
  413ada:	jmp    0xb308:0x878f2f08
  413ae1:	unpcklps xmm5,xmm1
  413ae4:	ins    DWORD PTR es:[edi],dx
  413ae5:	mov    ebx,0x3a8ffffb
  413aea:	or     BYTE PTR [eax+0x44],ch
  413aed:	xor    DWORD PTR [edi],edx
  413aef:	add    dh,bl
  413af1:	(bad)  
  413af2:	mov    al,BYTE PTR [ebp-0x60]
  413af5:	psubsb mm6,QWORD PTR [esi]
  413af8:	cmp    al,0xff
  413afa:	inc    DWORD PTR [ebx+0x5d81c8c4]
  413b00:	idiv   bh
  413b02:	jmp    DWORD PTR [ebp-0x4b]
  413b05:	inc    edx
  413b06:	leave  
  413b07:	or     BYTE PTR [eax],al
  413b09:	sub    bh,BYTE PTR [edi+0x61cccf41]
  413b0f:	mov    ebp,0x63c78545
  413b14:	sar    ecx,0x8c
  413b17:	or     BYTE PTR [eax+0xf008c21],al
  413b1d:	dec    ecx
  413b1e:	mov    edi,0xb8e7c92f
  413b23:	mov    BYTE PTR [ebp-0x80],al
  413b26:	test   BYTE PTR [eax-0x8],0xfa
  413b2a:	aam    0x88
  413b2c:	inc    ebp
  413b2d:	pusha  
  413b2e:	jge    0x413af0
  413b30:	pop    es
  413b31:	(bad)  
  413b33:	inc    edi
  413b34:	(bad)  
  413b35:	jmp    0x6c7a9efd
  413b3a:	xor    eax,DWORD PTR ds:0x5bf0747
  413b40:	cmp    esi,DWORD PTR [ecx+0x6fec72b6]
  413b46:	cmp    al,0xf8
  413b48:	jne    0x413ae7
  413b4a:	mov    ecx,0xbcff841
  413b4f:	clc    
  413b50:	imul   ebx,DWORD PTR [ebp-0x3775065e],0x45
  413b57:	fcomp  QWORD PTR [esi-0x4c]
  413b5a:	jl     0x413b23
  413b5c:	test   BYTE PTR [ebp-0x2c],bl
  413b5f:	jge    0x413b5f
  413b61:	pushf  
  413b62:	fld    DWORD PTR [ecx]
  413b64:	imul   esp,DWORD PTR [edx],0x97b04e2
  413b6a:	scas   eax,DWORD PTR es:[edi]
  413b6b:	cli    
  413b6c:	mov    al,BYTE PTR [eax]
  413b6e:	pop    eax
  413b6f:	adc    eax,0x96f55534
  413b74:	dec    ebx
  413b75:	std    
  413b76:	add    al,BYTE PTR [edx+0x1c]
  413b79:	cld    
  413b7a:	cli    
  413b7b:	cmp    ebx,DWORD PTR [eax+eax*2+0x6a]
  413b7f:	loopne 0x413b82
  413b81:	push   0xffffff9c
  413b83:	or     al,0x4d
  413b85:	or     ch,dh
  413b87:	retf   
  413b88:	sub    edi,edi
  413b8a:	ficom  DWORD PTR [esp+eax*8+0xd]
  413b8e:	sbb    DWORD PTR [ecx],ecx
  413b90:	add    DWORD PTR [eax],eax
  413b92:	popf   
  413b93:	pusha  
  413b94:	inc    ebp
  413b95:	or     BYTE PTR ds:0x9d195099,dh
  413b9b:	outs   dx,DWORD PTR ds:[esi]
  413b9c:	add    ecx,DWORD PTR [ebx-0x17cc02a8]
  413ba2:	sbb    esp,DWORD PTR [edx+eax*1+0x0]
  413ba6:	sbb    DWORD PTR [ecx],ebx
  413ba8:	test   DWORD PTR [ebx+0x1ab50],0xe43698a2
  413bb2:	push   ds
  413bb3:	dec    ebp
  413bb4:	cmp    BYTE PTR [eax],al
  413bb6:	push   ss
  413bb7:	imul   ebx,DWORD PTR [esi],0xfffffffd
  413bba:	popf   
  413bbb:	stos   DWORD PTR es:[edi],eax
  413bbc:	add    DWORD PTR [edi-0x183d4b83],edi
  413bc2:	xchg   ebp,eax
  413bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bc4:	ret    0x1466
  413bc7:	in     eax,dx
  413bc8:	cmp    esp,DWORD PTR [esi+0x20]
  413bcb:	add    esp,DWORD PTR [edi-0x186ee108]
  413bd1:	add    eax,DWORD PTR [eax]
  413bd3:	popf   
  413bd4:	adc    DWORD PTR [esi-0x35],ebx
  413bd7:	add    ch,BYTE PTR [edx+0x46ac76e9]
  413bdd:	jb     0x413b97
  413bdf:	inc    ebp
  413be0:	fdiv   st(7),st
  413be2:	enter  0x8728,0xa7
  413be6:	clc    
  413be7:	push   ds
  413be8:	cmp    al,0xe8
  413bea:	add    ebx,DWORD PTR [ebp-0x4baf58d6]
  413bf0:	add    dh,BYTE PTR [esi-0x2b722c38]
  413bf6:	sti    
  413bf7:	cli    
  413bf8:	cld    
  413bf9:	mov    ch,0x2
  413bfb:	popf   
  413bfc:	xchg   BYTE PTR [edi],ah
  413bfe:	clc    
  413bff:	push   ds
  413c00:	and    al,0xe8
  413c02:	add    ebx,DWORD PTR [ebp-0x1d0c337b]
  413c08:	hlt    
  413c09:	lea    ebx,es:[ebp+0x3b03e7c1]
  413c10:	std    
  413c11:	test   eax,0x62544c3b
  413c16:	add    DWORD PTR [eax-0x40c6387],edx
  413c1c:	mov    ds:0xaa667ae9,eax
  413c21:	jmp    0xe2d3:0x620414bb
  413c28:	test   al,0xd7
  413c2a:	jl     0x413bc1
  413c2c:	in     eax,0xe0
  413c2e:	sti    
  413c2f:	mov    DWORD PTR [ecx],edx
  413c31:	xchg   ebp,eax
  413c32:	dec    ebp
  413c33:	pushf  
  413c34:	ret    
  413c35:	int    0xfc
  413c37:	add    BYTE PTR [ebx-0x56],al
  413c3a:	(bad)  
  413c3c:	jno    0x413c23
  413c3e:	test   al,0xfb
  413c40:	or     BYTE PTR [ebx+0x46dc7af8],0x0
  413c47:	(bad)  
  413c48:	int3   
  413c49:	stos   BYTE PTR es:[edi],al
  413c4a:	push   0xffffffe4
  413c4c:	mov    ecx,edi
  413c4e:	or     ebp,edi
  413c50:	in     eax,dx
  413c51:	add    eax,DWORD PTR [edi+0x43bf8532]
  413c57:	stc    
  413c58:	loopne 0x413be5
  413c5a:	dec    ebx
  413c5b:	stc    
  413c5c:	fdivr  st,st(3)
  413c5e:	dec    eax
  413c5f:	xor    edi,ecx
  413c61:	ja     0x413c4c
  413c63:	in     al,0x14
  413c65:	add    bh,ch
  413c67:	jmp    0x1d82c80a
  413c6c:	xchg   esi,eax
  413c6d:	retf   0x48bf
  413c70:	or     DWORD PTR [edx+0xaef0af0],ecx
  413c76:	into   
  413c77:	(bad)  
  413c78:	jmp    0xc0232afd
  413c7d:	mov    ah,0xd
  413c7f:	jg     0x413c2f
  413c81:	dec    edi
  413c82:	mov    edi,0xce09e948
  413c87:	loop   0x413cad
  413c89:	mov    DWORD PTR [ecx-0x67],ecx
  413c8c:	pop    ds
  413c8d:	mov    edx,0x83b59c03
  413c92:	jns    0x413c91
  413c94:	sahf   
  413c95:	jae    0xfe00147f
  413c9b:	add    DWORD PTR [eax],0xe90004ba
  413ca1:	push   esp
  413ca2:	or     bh,ch
  413ca4:	mov    ah,0xbe
  413ca6:	push   0x41
  413ca8:	jmp    0xda455188
  413cad:	fiadd  WORD PTR [edx]
  413caf:	xchg   DWORD PTR [edx],ebp
  413cb1:	test   DWORD PTR [ebp-0x51e21140],eax
  413cb7:	cli    
  413cb8:	(bad)  
  413cb9:	pop    ebx
  413cba:	test   al,0xa7
  413cbc:	jmp    0x13e3f5f
  413cc1:	mov    bh,0xaa
  413cc3:	in     eax,0xbb
  413cc5:	fadd   st(7),st
  413cc7:	sti    
  413cc8:	adc    edi,0xffffffaa
  413ccb:	std    
  413ccc:	call   0x3d06fe
  413cd1:	lods   al,BYTE PTR ds:[esi]
  413cd2:	inc    esi
  413cd3:	jae    0x413cf0
  413cd5:	xor    al,0x5a
  413cd7:	(bad)  
  413cd8:	(bad)  
  413cd9:	mov    eax,ds:0x72e8e5be
  413cde:	add    eax,0xb9048400
  413ce3:	add    DWORD PTR [ecx-0x74fffbcc],0x4065bc29
  413ced:	adc    ebp,DWORD PTR [ebp+0x3b1469fd]
  413cf3:	inc    ecx
  413cf4:	mov    ah,0x44
  413cf6:	fdivr  QWORD PTR [ebx]
  413cf8:	push   esi
  413cf9:	cmc    
  413cfa:	add    eax,DWORD PTR [eax+eax*8+0x7d8059d0]
  413d01:	add    BYTE PTR [eax-0x1d],dh
  413d04:	jae    0x413d12
  413d06:	je     0x413d52
  413d08:	mov    ah,0x10
  413d0a:	and    BYTE PTR [esi-0x44af8283],bh
  413d10:	jb     0x413d6a
  413d12:	inc    esp
  413d13:	dec    edx
  413d14:	mov    bl,0x0
  413d16:	xor    dl,dh
  413d18:	gs shl ecx,0x8b
  413d1c:	or     BYTE PTR [esi-0x7b],ah
  413d1f:	inc    edx
  413d20:	mov    edx,0x41c72208
  413d25:	mov    esp,0xb67983ac
  413d2a:	mov    ah,0x59
  413d2c:	adc    BYTE PTR [edi],cl
  413d2e:	icebp  
  413d2f:	ret    
  413d30:	mov    BYTE PTR [ebp+0x32],al
  413d33:	aaa    
  413d34:	inc    ecx
  413d35:	mov    ah,0xc4
  413d37:	aaa    
  413d38:	aas    
  413d39:	xor    DWORD PTR [ebp+0x3243bdf9],ebx
  413d3f:	stos   BYTE PTR es:[edi],al
  413d40:	fnstcw WORD PTR [ebp+esi*8-0x38]
  413d44:	ret    
  413d45:	mov    ah,al
  413d47:	xor    eax,0x219ee8c4
  413d4c:	aas    
  413d4d:	aas    
  413d4e:	inc    esp
  413d4f:	adc    cl,dl
  413d51:	std    
  413d52:	push   edx
  413d53:	sub    al,0x45
  413d55:	adc    al,0x9d
  413d57:	adc    eax,0xbdc8fcf2
  413d5c:	les    edx,FWORD PTR [ebx]
  413d5e:	xchg   ecx,eax
  413d5f:	mov    ebx,0xb0460041
  413d64:	push   edi
  413d65:	add    BYTE PTR [eax],al
  413d67:	xor    eax,0x22fd49a3
  413d6c:	and    al,0xcf
  413d6e:	call   0xfe0475ee
  413d73:	adc    bl,dh
  413d75:	aad    0xe8
  413d77:	xchg   esi,eax
  413d78:	mov    eax,ds:0xbcf6fdc4
  413d7d:	js     0x413d70
  413d7f:	add    eax,0xf2fdcc9e
  413d84:	push   ebx
  413d85:	idiv   esp
  413d87:	jo     0x413dda
  413d89:	ret    
  413d8a:	jae    0x413d21
  413d8c:	inc    ecx
  413d8d:	dec    edi
  413d8e:	cmc    
  413d8f:	(bad)  
  413d91:	and    bl,BYTE PTR [esi+0x76]
  413d94:	repnz rcl DWORD PTR [eax],0x9d
  413d98:	ja     0x413e12
  413d9a:	lock sbb BYTE PTR [edi],bl
  413d9d:	push   eax
  413d9e:	dec    edi
  413d9f:	daa    
  413da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da1:	jge    0x413d63
  413da3:	sub    DWORD PTR [eax+edx*1-0x2e],esi
  413da7:	imul   ecx,esi,0xab37034e
  413dad:	daa    
  413dae:	jmp    0x7359ad54
  413db3:	pushf  
  413db4:	add    ch,BYTE PTR ds:0xa6f09b7a
  413dba:	or     DWORD PTR [edx-0x3212ad0d],0xffffff82
  413dc1:	ror    BYTE PTR [edx],1
  413dc3:	lock adc bh,BYTE PTR [edx-0x7]
  413dc7:	jo     0x413d73
  413dc9:	jmp    0xf2f23e90
  413dce:	sub    al,0x7a
  413dd0:	stos   DWORD PTR es:[edi],eax
  413dd1:	xor    BYTE PTR [eax+0x42a9d613],0x80
  413dd8:	bound  esi,QWORD PTR [edi]
  413dda:	jmp    0x5d8d:0xe6045780
  413de1:	mov    ch,0xa9
  413de3:	add    DWORD PTR [ecx+0x28c41004],ebp
  413de9:	add    esp,edi
  413deb:	add    edx,DWORD PTR ds:0x7bc16206
  413df1:	rol    DWORD PTR [ecx],0xfc
  413df4:	push   0xffffffc4
  413df6:	out    dx,al
  413df7:	add    ebp,DWORD PTR [ebx-0x3f]
  413dfa:	rol    DWORD PTR [ebx],1
  413dfc:	ja     0x413e00
  413dfe:	rol    DWORD PTR [ebx],0x87
  413e01:	add    cl,al
  413e03:	add    esi,eax
  413e05:	ss or  ebp,eax
  413e08:	jmp    0xa3347d24
  413e0d:	add    ah,BYTE PTR [edx+0x37]
  413e10:	add    DWORD PTR [esi],0xf1994260
  413e16:	das    
  413e17:	jle    0x413df6
  413e19:	or     eax,0xadfc374
  413e1e:	out    0x2e,eax
  413e20:	and    al,0xaf
  413e22:	push   0xffffffd7
  413e24:	(bad)  
  413e25:	les    ebp,FWORD PTR [ebp+eax*8+0x4f2786aa]
  413e2c:	and    BYTE PTR [ecx+0x0],dl
  413e2f:	lahf   
  413e30:	add    cl,cl
  413e32:	mov    DWORD PTR [edi-0x1f],esi
  413e35:	pop    ss
  413e36:	inc    edx
  413e37:	hlt    
  413e38:	jb     0x413dd0
  413e3a:	test   DWORD PTR [ebx-0x27],eax
  413e3d:	adc    al,0xc2
  413e3f:	je     0x413e8c
  413e41:	sub    dh,BYTE PTR [edi]
  413e43:	clc    
  413e44:	fdivrp st(4),st
  413e46:	pop    edi
  413e47:	add    al,0x72
  413e49:	push   edi
  413e4a:	les    eax,FWORD PTR [ebx-0x42]
  413e4d:	cdq    
  413e4e:	stos   BYTE PTR es:[edi],al
  413e4f:	push   es
  413e50:	mov    al,ds:0xb181bf5e
  413e55:	jg     0x413e87
  413e57:	inc    ebp
  413e58:	je     0x413e2e
  413e5a:	mov    edx,0x28d91350
  413e5f:	push   ds
  413e60:	aas    
  413e61:	mov    edi,DWORD PTR [edi+0x107af4fd]
  413e67:	inc    eax
  413e68:	jmp    0xbbb60082
  413e6d:	jo     0x413e71
  413e6f:	sub    DWORD PTR [edx-0xb02aca6],0x666a544e
  413e79:	ficom  WORD PTR [eax]
  413e7b:	xchg   esp,eax
  413e7c:	sti    
  413e7d:	pop    esi
  413e7e:	add    al,BYTE PTR [ebx-0x39f94ad7]
  413e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e85:	fistp  QWORD PTR [esp+ecx*4-0x2add954]
  413e8c:	mov    ah,0x26
  413e8e:	sub    BYTE PTR [esi],bl
  413e90:	lahf   
  413e91:	mov    BYTE PTR [edi+0x7a00d4fd],bh
  413e97:	adc    BYTE PTR [eax-0x17],al
  413e9a:	push   ds
  413e9b:	cmp    ebp,edi
  413e9d:	jmp    0xad074527
  413ea2:	fadd   QWORD PTR [ecx]
  413ea4:	and    DWORD PTR [esi],0x4bbf89
  413eaa:	test   al,0xf9
  413eac:	mov    BYTE PTR [edi+0x2],bl
  413eaf:	pop    esp
  413eb0:	mov    al,BYTE PTR [ebp-0x6e]
  413eb3:	iret   
  413eb4:	mov    edi,0xfa8d2b56
  413eb9:	mov    esp,DWORD PTR [ebp-0x73]
  413ebc:	or     DWORD PTR [eax+edx*1],esi
  413ebf:	inc    ebp
  413ec0:	add    BYTE PTR [edi-0x46],dl
  413ec3:	outs   dx,BYTE PTR ds:[esi]
  413ec4:	mov    al,ds:0x2f0085ac
  413ec9:	leave  
  413eca:	popf   
  413ecb:	xor    eax,0x6b7ac40
  413ed0:	jno    0x413ed8
  413ed2:	mov    ebp,0x87ac403e
  413ed7:	push   es
  413ed8:	jg     0x413e9b
  413eda:	cmp    BYTE PTR [ebp+0x6ca618f5],al
  413ee0:	pop    ebx
  413ee1:	pop    esi
  413ee2:	pop    es
  413ee3:	pop    ebx
  413ee4:	xchg   esp,ebp
  413ee6:	jne    0x413f3b
  413ee8:	push   esi
  413ee9:	mov    ebp,DWORD PTR [ecx]
  413eeb:	or     al,0x2f
  413eed:	(bad)  
  413eef:	into   
  413ef0:	aaa    
  413ef1:	repz sbb bl,BYTE PTR [eax]
  413ef4:	xchg   DWORD PTR [ebp-0x4],eax
  413ef7:	test   al,al
  413ef9:	or     al,0x0
  413efb:	mov    ebp,0xd174f45e
  413f00:	mov    ds,WORD PTR [eax-0x4]
  413f03:	jl     0x413f1c
  413f05:	cmp    eax,0x370fc483
  413f0a:	into   
  413f0b:	es jb  0x413e95
  413f0e:	(bad)  
  413f0f:	iret   
  413f10:	mov    edi,0x3fde571f
  413f15:	push   0xffffd400
  413f1a:	dec    edi
  413f1b:	pop    es
  413f1c:	out    dx,al
  413f1d:	cli    
  413f1e:	dec    ecx
  413f20:	fist   WORD PTR [ecx]
  413f22:	inc    eax
  413f23:	popf   
  413f24:	test   eax,0x1076f88e
  413f29:	xor    eax,0xbd67144d
  413f2e:	cmp    DWORD PTR [esi+0x1088f133],ebp
  413f34:	mov    ds:0x20a5c686,al
  413f39:	pop    edi
  413f3a:	clc    
  413f3b:	cmc    
  413f3c:	cmp    ah,ch
  413f3e:	ds popf 
  413f40:	hlt    
  413f41:	mov    esi,0x59c17976
  413f46:	enter  0xcc72,0x85
  413f4a:	shl    cl,0xde
  413f4d:	mov    bh,BYTE PTR [esi]
  413f4f:	sahf   
  413f50:	sar    DWORD PTR [edi+0x4a215943],0x4
  413f57:	es out 0xbf,al
  413f5a:	and    DWORD PTR [ebx-0x47],0x910042fc
  413f61:	pop    ss
  413f62:	fimul  DWORD PTR [ecx+0x42faa5e0]
  413f68:	xor    DWORD PTR [esi],edx
  413f6a:	or     al,0xb0
  413f6c:	pushf  
  413f6d:	nop
  413f6e:	adc    dh,BYTE PTR [edx]
  413f70:	pop    ebp
  413f71:	nop
  413f72:	or     ecx,DWORD PTR [ecx-0x56565e98]
  413f78:	adc    ebp,DWORD PTR [edi+edi*4]
  413f7b:	xor    bl,ch
  413f7d:	ret    
  413f7e:	pop    edi
  413f7f:	pop    ecx
  413f80:	aam    0xe6
  413f82:	or     eax,DWORD PTR [eax]
  413f84:	cmp    al,0x6d
  413f86:	ins    DWORD PTR es:[edi],dx
  413f87:	inc    ecx
  413f88:	popf   
  413f89:	les    esi,FWORD PTR es:[ecx+ebx*4-0x14]
  413f8e:	add    al,0xa4
  413f90:	cmp    DWORD PTR [eax+0x1],ebp
  413f93:	push   0xffffffbe
  413f95:	imul   eax,DWORD PTR [ecx],0x448aa2e9
  413f9b:	lods   al,BYTE PTR ds:[esi]
  413f9c:	pop    esi
  413f9d:	add    ah,bh
  413f9f:	enter  0x669e,0x43
  413fa3:	inc    ebp
  413fa4:	popf   
  413fa5:	outs   dx,DWORD PTR ds:[esi]
  413fa6:	or     DWORD PTR [ebx-0x63],eax
  413fa9:	pop    edi
  413faa:	inc    edi
  413fab:	push   0x5448025c
  413fb0:	icebp  
  413fb1:	ds out 0x64,eax
  413fb4:	dec    ebp
  413fb5:	pop    edi
  413fb6:	stos   BYTE PTR es:[edi],al
  413fb7:	add    esi,DWORD PTR [edx]
  413fb9:	mov    edx,esp
  413fbb:	inc    ebx
  413fbc:	popf   
  413fbd:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413fbf:	fadd   QWORD PTR [bp+si]
  413fc2:	mov    BYTE PTR [ebx-0x18bd7200],al
  413fc8:	fs dec ebp
  413fca:	pop    edi
  413fcb:	sub    al,BYTE PTR [edx+ecx*1]
  413fce:	arpl   sp,bx
  413fd0:	inc    ebx
  413fd1:	popf   
  413fd2:	gs (bad) 
  413fd4:	fadd   QWORD PTR [bp+si]
  413fd7:	mov    BYTE PTR [ebx-0x52],ch
  413fda:	inc    edx
  413fdb:	out    0x64,eax
  413fdd:	dec    ebp
  413fde:	pop    edi
  413fdf:	sub    al,BYTE PTR [edx+eiz*1]
  413fe2:	aaa    
  413fe3:	hlt    
  413fe4:	inc    ebx
  413fe5:	popf   
  413fe6:	gs out 0x66,eax
  413fe9:	fadd   QWORD PTR [edx]
  413feb:	dec    eax
  413fec:	xchg   ebx,eax
  413fed:	mov    es,WORD PTR [edx-0x19]
  413ff0:	lea    ebx,fs:[edi+0x2a]
  413ff4:	add    al,0x3a
  413ff6:	(bad)  
  413ff7:	fadd   QWORD PTR [ebx-0x63]
  413ffa:	gs (bad) 
  413ffc:	pop    sp
  413ffe:	add    cl,BYTE PTR [eax-0x18bd5165]
  414004:	lods   eax,DWORD PTR fs:[esi]
  414006:	pop    edi
  414007:	stos   BYTE PTR es:[edi],al
  414008:	add    edx,DWORD PTR [edx]
  41400a:	pop    edi
  41400b:	hlt    
  41400c:	inc    ebx
  41400d:	popf   
  41400e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414010:	pop    sp
  414012:	add    cl,BYTE PTR [eax+0x42ae87]
  414018:	jmp    0xaae49256
  41401d:	sahf   
  41401e:	cdq    
  41401f:	pushf  
  414020:	cld    
  414021:	pop    esi
  414022:	add    ah,BYTE PTR [ecx+0x434389]
  414028:	dec    eax
  414029:	add    BYTE PTR [edx],ah
  41402b:	push   ss
  41402c:	inc    eax
  41402d:	jmp    0xaae47273
  414032:	sahf   
  414033:	cdq    
  414034:	sbb    al,0xd7
  414036:	fiadd  WORD PTR [edx]
  414038:	mov    eax,ds:0x43fb69
  41403d:	dec    eax
  41403e:	jle    0x41404f
  414040:	inc    eax
  414041:	jmp    0x2ae4d345
  414046:	mov    eax,ds:0xdeff1099
  41404b:	add    ah,BYTE PTR [ecx+0x43f489]
  414051:	mov    BYTE PTR [ecx-0x4016bff0],al
  414057:	jb     0x413ffc
  414059:	sub    bl,BYTE PTR [ecx-0x2128f367]
  41405f:	add    ah,BYTE PTR [ecx+0x43b4a9]
  414065:	dec    eax
  414066:	cmp    eax,0xbfe9400e
  41406b:	shl    BYTE PTR [ebx+0x3099a12a],cl
  414071:	(bad)  
  414073:	add    ah,BYTE PTR [ecx+0x438489]
  414079:	dec    eax
  41407a:	test   DWORD PTR [esi],ecx
  41407c:	inc    eax
  41407d:	jmp    0xaae4f301
  414082:	sahf   
  414083:	cdq    
  414084:	cmp    al,0xf4
  414086:	pop    esi
  414087:	add    ah,BYTE PTR [ecx+0x4378e9]
  41408d:	mov    BYTE PTR [eax],al
  41408f:	lds    ecx,FWORD PTR ds:0x23f40040
  414095:	adc    BYTE PTR [esi+0x2c9d0507],ah
  41409b:	icebp  
  41409c:	inc    esp
  41409d:	add    BYTE PTR [ebx+0x3f2094],ah
  4140a3:	push   ebp
  4140a4:	bound  edx,QWORD PTR [eax+eax*2]
  4140a7:	les    esp,FWORD PTR [ebx]
  4140a9:	xor    BYTE PTR [esi-0x2762faf9],ah
  4140af:	mov    al,0x44
  4140b1:	add    BYTE PTR [ebx+0x3f1ef4],ah
  4140b7:	in     eax,0xba
  4140b9:	adc    al,BYTE PTR [eax-0x7c]
  4140bc:	and    eax,0x437a650
  4140c1:	popf   
  4140c2:	sub    BYTE PTR [ecx-0x1b5cffbc],al
  4140c8:	and    BYTE PTR [edi],bh
  4140ca:	add    BYTE PTR ds:0x7440142c,ah
  4140d0:	and    eax,0xfeb7a670
  4140d5:	pushf  
  4140d6:	lods   al,BYTE PTR ds:[esi]
  4140d7:	jo     0x41411d
  4140d9:	add    BYTE PTR [ebx+0x3f1dc4],ah
  4140df:	adc    eax,0x34401434
  4140e4:	and    eax,0xfe87a690
  4140e9:	pushf  
  4140ea:	cwde   
  4140eb:	xor    BYTE PTR [eax+eax*1-0x5d],al
  4140ef:	aam    0x1d
  4140f1:	aas    
  4140f2:	add    BYTE PTR [eax],al
  4140f4:	aad    0x6f
  4140f6:	adc    al,0x40
  4140f8:	add    al,0x25
  4140fa:	mov    al,0xa6
  4140fc:	(bad)  
  4140fd:	(bad)  
  4140fe:	pushf  
  4140ff:	enter  0x43f0,0x0
  414103:	mov    ds:0x3f1db4,eax
  414108:	and    eax,0x9d401464
  41410d:	test   eax,0x6d43d062
  414112:	add    DWORD PTR [edi+0x41d625],ebx
  414118:	dec    BYTE PTR [ecx+0x63]
  41411b:	inc    ecx
  41411c:	popf   
  41411d:	mov    cl,BYTE PTR [ecx+0x13]
  414120:	pop    ebp
  414121:	test   eax,0x6cfbf062
  414126:	add    DWORD PTR [edi+0x41adc5],ebx
  41412c:	(bad)  
  41412d:	test   eax,0x4a9d4166
  414132:	int    0x14
  414134:	pop    ebp
  414135:	test   eax,0x6c421062
  41413a:	add    DWORD PTR [edi+0x41d6dd],ebx
  414140:	ds leave 
  414142:	inc    cx
  414144:	popf   
  414145:	mov    ch,BYTE PTR [eax+0x60a9dd14]
  41414b:	xor    BYTE PTR [edx],bh
  41414d:	in     al,dx
  41414e:	add    ebx,DWORD PTR [edi+0x41ad5d]
  414154:	ds jmp 0x9d4182bc
  41415a:	mov    ah,BYTE PTR [esp+edx*1-0x23]
  41415e:	test   eax,0xec025060
  414163:	add    ebx,DWORD PTR [edi+0x41b685]
  414169:	dec    BYTE PTR [eax]
  41416b:	arpl   WORD PTR [ecx-0x63],ax
  41416e:	dec    edx
  41416f:	mov    esp,0x60a9dd14
  414174:	jo     0x414170
  414176:	jmp    0x41417b
  414178:	lahf   
  414179:	in     eax,dx
  41417a:	int3   
  41417b:	inc    ecx
  41417c:	add    BYTE PTR [esi],bh
  41417e:	sub    DWORD PTR [ebx+0x41],esp
  414181:	popf   
  414182:	dec    edx
  414183:	push   eax
  414184:	adc    ebx,DWORD PTR [ebp+0x2]
  414187:	out    0x60,eax
  414189:	or     eax,0x1203aa5f
  41418e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41418f:	sti    
  414190:	inc    ebx
  414191:	popf   
  414192:	arpl   WORD PTR [edi-0x77fda39b],ax
  414198:	enter  0x42b1,0xe7
  41419c:	pusha  
  41419d:	or     eax,0x2a03aa5f
  4141a2:	jbe    0x414177
  4141a4:	inc    ebx
  4141a5:	popf   
  4141a6:	arpl   WORD PTR [edi],sp
  4141a8:	gs pop esp
  4141aa:	add    cl,BYTE PTR [eax+0x4]
  4141ad:	mov    es,WORD PTR [edx-0x19]
  4141b0:	pusha  
  4141b1:	int    0x5e
  4141b3:	stos   BYTE PTR es:[edi],al
  4141b4:	add    eax,DWORD PTR [edx]
  4141b6:	fadd   QWORD PTR ds:[ebx-0x63]
  4141ba:	popa   
  4141bb:	pop    es
  4141bc:	gs add ah,bl
  4141bf:	add    cl,BYTE PTR [eax-0x4c]
  4141c2:	mov    cl,0x42
  4141c4:	out    0x60,eax
  4141c6:	lea    ebx,[esi+0x2a]
  4141c9:	add    al,0x1a
  4141cb:	mov    bh,0xf3
  4141cd:	inc    ebx
  4141ce:	popf   
  4141cf:	popa   
  4141d0:	out    0x6b,eax
  4141d2:	fadd   QWORD PTR [edx]
  4141d4:	mov    BYTE PTR [edi+0x29e7428d],bl
  4141da:	xchg   ebp,eax
  4141db:	sub    al,BYTE PTR [edi-0x75fd2399]
  4141e1:	adc    esi,ebp
  4141e3:	inc    ecx
  4141e4:	out    0xab,eax
  4141e6:	cwde   
  4141e7:	mov    bh,0xa6
  4141e9:	mov    esp,0x8935525c
  4141ee:	outs   dx,BYTE PTR ds:[esi]
  4141ef:	jbe    0x4141ea
  4141f1:	inc    ebx
  4141f2:	popf   
  4141f3:	sub    dh,BYTE PTR [ebx]
  4141f5:	fld    QWORD PTR ss:[edx]
  4141f8:	push   ds
  4141f9:	mov    ebp,0x360f2af3
  4141fe:	pop    ebp
  4141ff:	add    al,BYTE PTR [eax]
  414201:	push   ds
  414202:	jl     0x4141e6
  414204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414205:	sub    bl,BYTE PTR [ecx-0x4d2e2949]
  41420b:	sub    al,0x40
  41420d:	jmp    0x8171a55b
  414212:	pop    ebp
  414213:	add    bh,ch
  414215:	aaa    
  414216:	mov    dh,0x36
  414218:	jbe    0x4141c3
  41421a:	sahf   
  41421b:	dec    edi
  41421c:	mov    eax,ds:0x4346a9
  414221:	ss add al,dh
  414224:	sub    al,BYTE PTR [edi+esi*4+0x4a55025e]
  41422b:	dec    esi
  41422c:	push   0x41
  41422e:	jmp    0xecac0f24
  414233:	jbe    0x414217
  414235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414236:	stos   BYTE PTR es:[edi],al
  414237:	sahf   
  414238:	arpl   WORD PTR [eax+0x51],sp
  41423b:	fld    QWORD PTR [edx]
  41423d:	call   0xfdf8947a
  414242:	arpl   WORD PTR [esi+0x7e],sp
  414245:	fnstenv [ebp+0x7b]
  414248:	mov    dh,0x33
  41424a:	push   ecx
  41424b:	or     DWORD PTR [eax+eax*1+0x72],eax
  41424f:	pop    esi
  414250:	mov    bh,0x33
  414252:	xor    ecx,edi
  414254:	inc    ebx
  414255:	add    dh,cl
  414257:	ins    BYTE PTR es:[edi],dx
  414258:	cmp    eax,0xb7a12aa8
  41425d:	xor    eax,DWORD PTR [ecx]
  41425f:	rol    DWORD PTR [ebx+0x0],0xb6
  414263:	dec    esp
  414264:	frstor [edi+0x67aa992a]
  41426a:	mov    eax,es:0x5a735e02
  414270:	pop    ebx
  414271:	sar    DWORD PTR [edx+ebx*1],0xa6
  414275:	dec    edi
  414276:	cmp    dh,cl
  414278:	sub    BYTE PTR [edi],al
  41427a:	add    BYTE PTR [ecx+0x2c58f7fb],dl
  414280:	sbb    ecx,edx
  414282:	add    ah,dh
  414284:	add    ebx,0x50
  414287:	add    BYTE PTR [ebx-0xd],dh
  41428a:	pop    es
  41428b:	call   0x3c6e2f
  414290:	jns    0x414250
  414292:	jno    0x41429b
  414294:	or     al,0x79
  414296:	sti    
  414297:	add    ah,dh
  414299:	arpl   WORD PTR [edi],bx
  41429b:	push   0xffffffce
  41429d:	mov    DWORD PTR [ecx-0x8],edi
  4142a0:	cld    
  4142a1:	push   0xb4c9fc
  4142a6:	xchg   edi,eax
  4142a8:	and    al,0x78
  4142aa:	jno    0x4142b4
  4142ac:	mov    WORD PTR [esp+ebp*4-0x1],?
  4142b0:	xchg   ebx,eax
  4142b1:	add    eax,0x75
  4142b4:	mov    ebx,0xb4fffe38
  4142b9:	add    bh,ah
  4142bb:	add    dl,BYTE PTR [edi-0x40]
  4142be:	pop    ebx
  4142bf:	leave  
  4142c0:	mov    BYTE PTR [edx],0x0
  4142c3:	push   ebp
  4142c4:	jmp    FWORD PTR [edx+0x6a]
  4142c7:	cmp    bl,BYTE PTR [esi]
  4142c9:	add    BYTE PTR [edi-0x1],cl
  4142cc:	jns    0x414272
  4142ce:	adc    eax,DWORD PTR [eax-0x7c]
  4142d1:	test   DWORD PTR [ecx+0xc],edx
  4142d4:	add    DWORD PTR [ebp+0x4],eax
  4142d7:	cmp    DWORD PTR [eax],0xfffffffc
  4142da:	or     cl,0x98
  4142dd:	or     al,0x81
  4142df:	ror    BYTE PTR [ecx-0x76bb45ff],cl
  4142e5:	add    BYTE PTR ds:[ebp-0x17aff587],cl
  4142ec:	add    bl,ah
  4142ee:	and    eax,0x71b9fffb
  4142f3:	je     0x414308
  4142f5:	popf   
  4142f6:	sub    edi,esi
  4142f8:	sub    DWORD PTR [eax-0x63817e2d],ebp
  4142fe:	test   eax,0x69ce0830
  414303:	pop    ds
  414304:	xchg   DWORD PTR [esi+0x73],ebx
  414307:	scas   al,BYTE PTR es:[edi]
  414308:	cmp    dl,BYTE PTR [eax]
  41430a:	jmp    0xd634c600
  41430f:	out    0x89,eax
  414311:	mov    ds:0xb574cc1d,eax
  414316:	sub    DWORD PTR [eax+esi*1+0x4e8bab68],edi
  41431d:	pushf  
  41431e:	sub    DWORD PTR [eax+edi*2-0x87e61b7],edi
  414325:	gs jbe 0x414334
  414328:	mov    ebx,edx
  41432a:	inc    ecx
  41432b:	nop
  41432c:	or     BYTE PTR [ebp+0x4a12aea9],bl
  414332:	xor    BYTE PTR [ecx-0x1efe2c77],bh
  414338:	push   es
  414339:	popf   
  41433a:	test   eax,0x78a0e95a
  41433f:	int3   
  414340:	data16 and al,0xb1
  414343:	mov    es,WORD PTR [ebx-0x6b]
  414346:	shl    DWORD PTR es:[edx+edx*4+0x29],0xf9
  41434c:	sub    eax,esi
  41434e:	scas   eax,DWORD PTR es:[edi]
  41434f:	cmp    DWORD PTR [eax+0x0],0x42ea99c
  414356:	scas   al,BYTE PTR es:[edi]
  414357:	imul   ebp,DWORD PTR [ebx+0xfc1cd06],0x22bc5afd
  414361:	xchg   esi,ebx
  414363:	add    DWORD PTR [ebp-0x3e],edx
  414366:	xchg   ebp,eax
  414367:	test   eax,0x2831894e
  41436c:	mov    al,ds:0x93021cf8
  414371:	sbb    BYTE PTR [ecx+0x1454e702],0x55
  414378:	fisttp WORD PTR [esp+ebx*4+0x694c5603]
  41437f:	dec    esp
  414380:	push   0xffffffca
  414382:	adc    BYTE PTR [eax+0x7e],bh
  414385:	mov    ecx,0x8b1e029d
  41438a:	mov    esi,ebx
  41438c:	ror    BYTE PTR [edx+0x21f6de71],cl
  414392:	mov    ah,0xc8
  414394:	sar    DWORD PTR [esi],cl
  414396:	push   edi
  414397:	sbb    al,0x12
  414399:	into   
  41439a:	imul   esi,ebx,0x1c7205c0
  4143a0:	jo     0x4143ea
  4143a2:	jns    0x4143be
  4143a4:	out    dx,al
  4143a5:	jno    0x4143fc
  4143a7:	inc    ebp
  4143a8:	int    0x8c
  4143aa:	pop    ebp
  4143ab:	inc    esi
  4143ac:	(bad)
  4143af:	or     DWORD PTR [ebp-0x647b1af4],ecx
  4143b5:	fild   WORD PTR [eax]
  4143b7:	xchg   edx,eax
  4143b8:	sbb    al,0x60
  4143ba:	dec    eax
  4143bb:	jns    0x4143d5
  4143bd:	es inc eax
  4143bf:	ror    DWORD PTR [esi],0x86
  4143c2:	add    ebx,DWORD PTR [ebp-0x12d7f0fd]
  4143c8:	add    esp,edi
  4143ca:	mov    bl,cl
  4143cc:	out    0xd2,al
  4143ce:	cld    
  4143cf:	pusha  
  4143d0:	add    ch,BYTE PTR [ebx+0x44]
  4143d3:	lahf   
  4143d4:	add    ah,bh
  4143d6:	push   ebx
  4143d7:	jne    0x4143e5
  4143d9:	clc    
  4143da:	add    ebx,DWORD PTR [ebp-0x1a791583]
  4143e0:	or     cl,BYTE PTR [ebp-0x73]
  4143e3:	fnstsw WORD PTR [eax+ebx*1]
  4143e6:	lods   al,BYTE PTR ds:[esi]
  4143e7:	sbb    DWORD PTR [ebx+0x0],edx
  4143ea:	call   0x585cd8d
  4143ef:	xchg   ecx,eax
  4143f0:	jmp    0x4143b7
  4143f2:	div    BYTE PTR [edx-0x6116fe1c]
  4143f8:	push   edx
  4143f9:	call   0x43d28f
  4143fe:	mov    cs,edx
  414400:	out    0xf,al
  414402:	xchg   ecx,eax
  414403:	jnp    0x414417
  414405:	add    cl,ch
  414407:	sbb    DWORD PTR [esi+esi*8],eax
  41440a:	jmp    0x6a447aae
  41440f:	fiadd  WORD PTR [esi]
  414411:	jmp    0x8bb32e01
  414416:	mov    dl,0xea
  414418:	inc    eax
  414419:	push   eax
  41441a:	push   esi
  41441b:	add    BYTE PTR [edx-0x5e66e81a],dh
  414421:	sbb    al,0x4
  414423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414424:	push   es
  414425:	pop    edx
  414426:	(bad)  
  414427:	call   0xe701caca
  41442c:	inc    edx
  41442d:	pushf  
  41442e:	(bad)  
  41442f:	call   0xf642bfd2
  414434:	sub    eax,0xe4cc4c42
  414439:	scas   eax,DWORD PTR es:[edi]
  41443a:	add    cl,ch
  41443c:	jb     0x414488
  41443e:	dec    eax
  41443f:	xchg   ebp,eax
  414440:	mov    al,0xaf
  414442:	je     0x414411
  414444:	mov    ds:0x9ac55c7b,al
  414449:	call   0x24e7:0x29f9843
  414450:	lahf   
  414451:	add    al,BYTE PTR [eax]
  414453:	jb     0x414402
  414455:	out    0xf,al
  414457:	push   ebx
  414458:	mov    eax,ds:0xdd63ff1c
  41445d:	out    0x14,al
  41445f:	cmp    DWORD PTR [esi],esp
  414461:	mov    al,0xe8
  414463:	add    BYTE PTR [ecx],dl
  414465:	dec    eax
  414466:	std    
  414467:	inc    eax
  414469:	(bad)  
  41446a:	je     0x414488
  41446c:	mov    ah,0xea
  41446e:	and    ecx,DWORD PTR [edi]
  414470:	inc    ecx
  414471:	repnz pop es
  414473:	push   esi
  414474:	or     al,0x46
  414476:	(bad)  
  414477:	dec    DWORD PTR [ebx]
  414479:	pop    ebp
  41447a:	or     DWORD PTR [eax+0x40ca288],eax
  414480:	add    BYTE PTR [ecx-0x7617ac50],dh
  414486:	mov    ebx,?
  414488:	jmp    FWORD PTR [eax+ebp*1]
  41448b:	push   edx
  41448c:	add    esp,esi
  41448e:	or     DWORD PTR [esp-0x2c],0x77
  414493:	in     eax,0x85
  414495:	add    eax,0xf56a0005
  41449a:	ja     0x4144ad
  41449c:	cld    
  41449d:	in     al,0x44
  41449f:	add    BYTE PTR [eax+0x6b],dl
  4144a2:	adc    eax,DWORD PTR [eax]
  4144a4:	adc    DWORD PTR [eax*1-0x7dc6ff96],eax
  4144ab:	and    al,0x94
  4144ad:	mov    ah,0x4
  4144af:	add    BYTE PTR [eax-0x24],dl
  4144b2:	jns    0x4144f9
  4144b4:	aaa    
  4144b5:	int    0x5c
  4144b7:	and    edi,DWORD PTR [esi-0x75]
  4144ba:	jns    0x414445
  4144bc:	test   al,dl
  4144be:	xchg   esp,eax
  4144bf:	add    BYTE PTR [eax],al
  4144c1:	test   BYTE PTR [eax+ebp*8-0x38],dl
  4144c5:	add    BYTE PTR [edi],0x0
  4144c8:	test   BYTE PTR [edi+eax*1+0x4754d84],dh
  4144cf:	add    BYTE PTR [edx-0x7b],ch
  4144d2:	jnp    0x414470
  4144d4:	and    al,0x78
  4144d6:	add    al,0x0
  4144d8:	add    BYTE PTR [ebx+esi*4-0x48],cl
  4144dc:	add    BYTE PTR [ebp-0x553f8267],bl
  4144e2:	and    eax,0x5200fedb
  4144e7:	call   0x41:0xcd3513b6
  4144ee:	sbb    BYTE PTR [edx+0x6],bl
  4144f1:	xchg   ebx,eax
  4144f2:	loope  0x4144f9
  4144f4:	add    eax,0x55a25631
  4144f9:	and    al,0x9a
  4144fb:	mov    al,ds:0x999d9780
  414500:	add    DWORD PTR [edx-0x6f],ebp
  414503:	dec    esi
  414504:	sub    eax,0xabe1c124
  414509:	(bad)  
  41450a:	loop   0x4144a5
  41450c:	add    DWORD PTR [ebx+0x289be19],ecx
  414512:	popf   
  414513:	cdq    
  414514:	push   ecx
  414515:	push   0xffffff99
  414517:	push   ecx
  414518:	fisub  DWORD PTR [ebp-0x64]
  41451b:	cdq    
  41451c:	jge    0x4144de
  41451e:	imul   edx,ebx,0x4e6dc68a
  414524:	jge    0x41454a
  414526:	and    DWORD PTR [ecx+eax*1-0x56769300],ebx
  41452d:	jmp    0x75dd:0x83019a35
  414534:	and    BYTE PTR [edx+0x59],ch
  414537:	(bad)  
  414538:	dec    ebx
  414539:	mov    esp,DWORD PTR [ecx-0x3b]
  41453c:	inc    ebp
  41453d:	push   ecx
  41453e:	dec    ebp
  41453f:	sbb    BYTE PTR [eax],dl
  414541:	xor    al,0xb3
  414543:	pop    ecx
  414544:	add    DWORD PTR [ecx-0x7b774aa7],eax
  41454a:	add    cl,al
  41454c:	dec    ecx
  41454d:	add    DWORD PTR [eax],eax
  41454f:	popf   
  414550:	and    bh,BYTE PTR ds:0x3d4ecd24
  414556:	and    al,0x95
  414558:	add    dh,BYTE PTR [edi]
  41455a:	xchg   ecx,esp
  41455c:	out    0x2a,al
  41455e:	push   esp
  41455f:	int3   
  414560:	push   ebx
  414561:	add    BYTE PTR fs:[ecx-0x62fc1676],0x52
  414569:	jo     0x41459b
  41456b:	or     DWORD PTR [esi-0x31],0xe702b232
  414572:	jle    0x4145d1
  414574:	ss add eax,0xe713252c
  41457a:	add    ebp,DWORD PTR [eax]
  41457c:	ss ret 
  41457e:	pop    ss
  41457f:	and    BYTE PTR ds:0x25d10f7,dl
  414585:	mov    ?,WORD PTR [eax]
  414587:	mov    ecx,0x2aef720e
  41458c:	adc    al,0x27
  41458e:	add    al,0x0
  414590:	fdiv   DWORD PTR [esi+0x30]
  414593:	ror    DWORD PTR [edx],0x6e
  414596:	into   
  414597:	fild   DWORD PTR [ebp+0xb]
  41459a:	add    eax,0x50ba53ea
  41459f:	jne    0x4145a4
  4145a1:	test   DWORD PTR [ebx],0xc3f4af9d
  4145a7:	lods   al,BYTE PTR ds:[esi]
  4145a8:	inc    edx
  4145a9:	out    0x83,eax
  4145ab:	dec    ecx
  4145ac:	out    0xed,al
  4145ae:	add    al,BYTE PTR [eax]
  4145b0:	dec    esi
  4145b1:	dec    edi
  4145b2:	ss jo  0x414536
  4145b5:	dec    edx
  4145b6:	jmp    0x6bbee2be
  4145bb:	loopne 0x414563
  4145bd:	add    edi,esp
  4145bf:	add    esp,DWORD PTR [eax-0x6248348b]
  4145c5:	add    ah,bh
  4145c7:	mov    bl,cl
  4145c9:	out    0xb6,al
  4145cb:	xchg   cl,ah
  4145cd:	out    0xb6,al
  4145cf:	push   ebx
  4145d0:	xor    BYTE PTR [edi],0x0
  4145d3:	int    0x92
  4145d5:	mov    DWORD PTR [ebp+eax*8+0x6a],0xa128ed12
  4145dd:	mov    DWORD PTR [ebp+eax*1-0x27],0xa12b4635
  4145e5:	mov    DWORD PTR [ebp+eax*1-0x23],0xa128ee49
  4145ed:	mov    DWORD PTR [ebp+eax*1-0x2f],0xa128ee2d
  4145f5:	mov    DWORD PTR [ebp+eax*1-0x1b],0xa128eeba
  4145fd:	mov    DWORD PTR [ebp+eax*8-0x32],0xa128eea9
  414605:	mov    DWORD PTR [ebp+eax*8+0x62],0xa128ed16
  41460d:	call   0xe86a:0xb0498e80
  414614:	add    BYTE PTR [ebx],ah
  414616:	xchg   DWORD PTR [ebp*2+0x5100029e],esp
  41461d:	scas   eax,DWORD PTR es:[edi]
  41461e:	outs   dx,BYTE PTR ds:[esi]
  41461f:	add    cl,ch
  414621:	adc    eax,0x8a62084a
  414626:	out    0xf,al
  414628:	inc    ecx
  414629:	mov    al,ds:0x15e8ff3d
  41462e:	aaa    
  41462f:	and    al,0xd5
  414631:	idiv   cl
  414633:	dec    esi
  414634:	call   0xbc2999d7
  414639:	jns    0x4145ea
  41463b:	std    
  41463c:	(bad)  
  41463d:	push   eax
  41463e:	repz mov edi,0x5ba215c2
  414644:	sub    ebx,DWORD PTR [edx+0x3a6254ad]
  41464a:	sub    eax,0x35c00ec
  41464f:	add    BYTE PTR [eax],al
  414651:	daa    
  414652:	aas    
  414653:	mov    DWORD PTR [ebp-0x54],esi
  414656:	pop    ecx
  414657:	xlat   BYTE PTR ds:[ebx]
  414658:	push   0x5d870185
  41465d:	ins    BYTE PTR es:[edi],dx
  41465e:	fstp   TBYTE PTR [esi+0x7b]
  414661:	mov    al,0x6
  414663:	mov    BYTE PTR [ebp+0x73],0x6
  414667:	or     eax,DWORD PTR [edx+esi*8-0x2efffff9]
  41466e:	inc    ebp
  41466f:	sbb    BYTE PTR [ecx-0xac7187],cl
  414675:	jns    0x414605
  414677:	mov    ax,WORD PTR [eax]
  41467a:	xchg   esp,ebp
  41467c:	out    0x3,eax
  41467e:	jb     0x414687
  414680:	add    BYTE PTR [ebx-0x786d104],cl
  414686:	xchg   DWORD PTR [ecx-0x5],esi
  414689:	jne    0x414663
  41468b:	push   0xffffffff
  41468d:	add    BYTE PTR [ebx],dl
  41468f:	test   DWORD PTR [ebx+0x1],esp
  414692:	hlt    
  414693:	add    BYTE PTR [eax-0x78],ch
  414696:	xlat   BYTE PTR ds:[ebx]
  414697:	add    BYTE PTR [eax],al
  414699:	jmp    FWORD PTR [ecx]
  41469b:	pop    ebp
  41469c:	mov    dl,0x43
  41469e:	hlt    
  41469f:	outs   dx,DWORD PTR ds:[esi]
  4146a0:	adc    DWORD PTR [eax],edx
  4146a2:	out    0x40,eax
  4146a4:	add    BYTE PTR ds:0x5c6,bh
  4146aa:	pop    ebp
  4146ab:	inc    edi
  4146ac:	std    
  4146ad:	push   DWORD PTR [edi+eax*2+0xb24de8]
  4146b4:	add    BYTE PTR [edi+0x5c],dl
  4146b7:	sti    
  4146b8:	or     eax,0xb181c400
  4146bd:	enter  0x7181,0xfb
  4146c1:	call   0x41710e
  4146c6:	popf   
  4146c7:	es xchg esp,ecx
  4146ca:	nop
  4146cb:	std    
  4146cc:	mov    al,0x50
  4146ce:	sbb    BYTE PTR [edi],ch
  4146d0:	int    0x81
  4146d2:	push   ebp
  4146d3:	lods   eax,DWORD PTR ds:[esi]
  4146d4:	cdq    
  4146d5:	stc    
  4146d6:	cs mov ch,0xb2
  4146d9:	mov    al,bl
  4146db:	fwait
  4146dc:	test   eax,eax
  4146de:	add    cl,dh
  4146e0:	(bad)  
  4146e2:	add    DWORD PTR [edx+0x57],esp
  4146e5:	ror    BYTE PTR [ecx-0x11a4230],1
  4146eb:	mov    ds:0x65f5c193,eax
  4146f0:	mov    eax,ds:0xa5d68bc1
  4146f5:	out    0xbe,al
  4146f7:	int    0xc
  4146f9:	je     0x4146fa
  4146fb:	cmp    cl,BYTE PTR [ebp+0x7d]
  4146fe:	jmp    FWORD PTR [edx]
  414700:	aaa    
  414701:	cmp    ah,bl
  414703:	adc    eax,0x57e8b1e7
  414708:	dec    ecx
  414709:	mov    dl,0xfd
  41470b:	push   esp
  41470c:	sub    al,0x4
  41470e:	add    BYTE PTR [ebp+0xc88836],bl
  414714:	sub    eax,0x999dc6b2
  414719:	inc    ecx
  41471a:	inc    edi
  41471b:	push   0xeb4ae932
  414720:	mov    ah,0x85
  414722:	rcr    BYTE PTR [ebp-0x6295fe67],0xbf
  414729:	add    DWORD PTR [ebx+0x31515158],ecx
  41472f:	fst    QWORD PTR [ecx+0x12]
  414732:	dec    ebp
  414733:	pushf  
  414734:	cdq    
  414735:	out    dx,al
  414736:	inc    edx
  414737:	mov    ch,0xa4
  414739:	mov    BYTE PTR [eax-0x76fe6663],ch
  41473f:	sub    BYTE PTR [edx],al
  414741:	pop    ds
  414742:	sbb    eax,DWORD PTR [eax]
  414744:	ins    DWORD PTR es:[edi],dx
  414745:	xor    eax,0x60703e7
  41474a:	fs dec eax
  41474c:	lea    edx,[edx-0x1]
  41474f:	or     bl,cl
  414751:	add    edi,esp
  414753:	xchg   DWORD PTR [ebp+0x36],ebx
  414756:	loopne 0x414781
  414758:	sbb    al,0x2d
  41475a:	test   DWORD PTR [edi],0x7ade10ee
  414760:	fidiv  WORD PTR [eax-0x613980c2]
  414766:	iret   
  414767:	outs   dx,DWORD PTR ds:[esi]
  414768:	and    al,0x1
  41476a:	out    0x7c,eax
  41476c:	idiv   dl
  41476e:	rol    DWORD PTR [esi],0x8f
  414771:	ret    0xc46b
  414774:	leave  
  414775:	xor    dh,ch
  414777:	jns    0x414757
  414779:	mov    dh,0x1f
  41477b:	cmp    al,0xa9
  41477d:	clc    
  41477e:	push   ds
  41477f:	cmp    al,0xae
  414781:	push   esi
  414782:	lods   eax,DWORD PTR ds:[esi]
  414783:	inc    edi
  414784:	and    BYTE PTR [ecx],al
  414786:	xchg   edx,eax
  414787:	inc    edx
  414788:	cmp    DWORD PTR [edi+0x14],0xffffffb6
  41478c:	cdq    
  41478d:	xor    eax,0x6a5e7f26
  414792:	(bad)  
  414793:	popf   
  414794:	js     0x414797
  414796:	out    0x1d,eax
  414798:	test   eax,0xaeb0df18
  41479d:	mov    ds:0xab9d4542,al
  4147a2:	cld    
  4147a3:	pop    es
  4147a4:	mov    WORD PTR [edx-0x19],es
  4147a7:	jl     0x4147a9
  4147a9:	int    0x84
  4147ab:	pop    ebp
  4147ac:	cmp    BYTE PTR [edx+0x77],bh
  4147af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147b0:	lahf   
  4147b1:	aaa    
  4147b2:	add    bl,BYTE PTR [ebp-0x18885c86]
  4147b8:	sbb    ecx,DWORD PTR [edx-0x61580023]
  4147be:	sbb    al,BYTE PTR [eax]
  4147c0:	jmp    0xa4cc4a65
  4147c5:	add    DWORD PTR ss:[esi-0x1b],0x36
  4147ca:	cmc    
  4147cb:	addr16 call 0x9501c66f
  4147d1:	xchg   esp,eax
  4147d2:	push   eax
  4147d3:	call   0xfde8e9ff
  4147d8:	(bad)  
  4147d9:	mov    bl,0x96
  4147db:	call   0xfde8d9ff
  4147e0:	imul   edi,DWORD PTR [edx+0x1af600a7],0xddefd43
  4147ea:	jl     0x41485f
  4147ec:	shl    DWORD PTR [esi],1
  4147ee:	push   edx
  4147ef:	dec    ebp
  4147f0:	call   0xc6bcca93
  4147f5:	sahf   
  4147f6:	xor    eax,0xa9a1b707
  4147fb:	push   cs
  4147fc:	ins    BYTE PTR es:[edi],dx
  4147fd:	sub    BYTE PTR [eax+0x7dcdaefd],0x73
  414804:	popa   
  414805:	push   es
  414806:	outs   dx,DWORD PTR ds:[esi]
  414807:	push   0x71a79ee8
  41480c:	cmp    DWORD PTR [eax],eax
  41480e:	xor    edi,eax
  414810:	sahf   
  414811:	call   0x68299bb4
  414816:	mov    ds:0xe472fda7,eax
  41481b:	call   0xba5e:0x29e0e33
  414822:	fimul  WORD PTR [ebx-0x39]
  414825:	sub    ebx,DWORD PTR [edx+0x3a725302]
  41482b:	test   ah,ch
  41482d:	(bad)  [ecx+0x50]
  414830:	push   ebp
  414831:	ret    
  414832:	leave  
  414833:	jl     0x4148a8
  414835:	add    BYTE PTR [eax-0x7f4a17c3],cl
  41483b:	add    eax,0xadf18b00
  414840:	and    BYTE PTR [ebp+0x78],0x5
  414844:	test   BYTE PTR [esi],0xb5
  414847:	pop    es
  414848:	add    bl,BYTE PTR [ebx+0x30]
  41484b:	adc    eax,0x3bf9106a
  414850:	add    al,0x50
  414852:	jmp    0xb7cd442f
  414857:	lea    esp,[eax-0x76a68475]
  41485d:	jle    0x4148ab
  41485f:	dec    edx
  414860:	sti    
  414861:	adc    eax,0x400fec
  414866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414867:	push   ecx
  414868:	mov    DWORD PTR [ebp+0x70],edi
  41486b:	sub    eax,0x2dbee8bf
  414870:	sti    
  414871:	inc    DWORD PTR [eax]
  414873:	xchg   DWORD PTR [ebx-0x7c5bb5ba],eax
  414879:	jns    0x414873
  41487b:	scas   eax,DWORD PTR es:[edi]
  41487c:	(bad)
  41487f:	mov    edi,0x71fffb59
  414884:	push   esi
  414885:	mov    DWORD PTR [ebp-0x18],eax
  414888:	pop    eax
  414889:	jno    0x41487f
  41488b:	mov    ebx,esi
  41488d:	mov    edi,edi
  41488f:	mov    cl,0x72
  414891:	push   eax
  414892:	push   0xffffffd4
  414894:	cmp    ebp,eax
  414896:	cld    
  414897:	les    ebx,FWORD PTR [ecx-0x5]
  41489a:	add    DWORD PTR [eax+0xe],0x7f
  41489e:	clc    
  41489f:	retf   
  4148a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a1:	xor    BYTE PTR [esi-0x74fffb0c],0xb3
  4148a8:	dec    esi
  4148a9:	push   0x1
  4148ab:	in     al,dx
  4148ac:	cmp    al,0xac
  4148ae:	inc    ebx
  4148af:	popf   
  4148b0:	fwait
  4148b1:	scas   al,BYTE PTR es:[edi]
  4148b2:	adc    esp,DWORD PTR [ebp-0x56]
  4148b5:	inc    ecx
  4148b6:	add    BYTE PTR [esi+edx*2],dl
  4148b9:	stc    
  4148ba:	sbb    ch,0x97
  4148bd:	test   DWORD PTR [ecx-0x2fe6463],ebx
  4148c3:	nop
  4148c4:	rcl    DWORD PTR [eax+eax*2],cl
  4148c7:	popf   
  4148c8:	sahf   
  4148c9:	jbe    0x4148cb
  4148cb:	popf   
  4148cc:	cdq    
  4148cd:	cmp    BYTE PTR [ebx],cl
  4148cf:	xchg   edx,eax
  4148d0:	xchg   ecx,edi
  4148d2:	cld    
  4148d3:	mov    al,0x39
  4148d5:	adc    al,BYTE PTR [eax+0x0]
  4148d8:	popf   
  4148d9:	sbb    al,0x27
  4148db:	or     BYTE PTR [ebp-0x62f7d0e4],bl
  4148e1:	and    eax,0x83c56a2a
  4148e6:	stc    
  4148e7:	cld    
  4148e8:	test   al,0xb9
  4148ea:	pop    edx
  4148eb:	inc    ecx
  4148ec:	popf   
  4148ed:	enter  0x418,0xae
  4148f1:	fld    DWORD PTR [ebx]
  4148f3:	mov    DWORD PTR [ebp+0x1f],eax
  4148f6:	scas   al,BYTE PTR es:[edi]
  4148f7:	je     0x4148d9
  4148f9:	xor    al,0x10
  4148fb:	xor    BYTE PTR [ebx-0x7295fc27],dl
  414901:	push   ds
  414902:	inc    ebx
  414903:	add    al,0xcd
  414905:	inc    esi
  414906:	inc    esi
  414907:	add    al,0xcd
  414909:	pusha  
  41490a:	ror    BYTE PTR [ecx-0x7915ec5d],cl
  414910:	call   0x17e1:0x1814c31c
  414917:	push   esi
  414918:	ins    DWORD PTR es:[edi],dx
  414919:	adc    dl,0x89
  41491c:	pusha  
  41491d:	mov    cl,0x82
  41491f:	les    edx,FWORD PTR [ebp+0x597d80f7]
  414925:	cdq    
  414926:	jl     0x41496d
  414928:	dec    ebp
  414929:	add    bl,bl
  41492b:	call   0x440708a
  414930:	dec    ecx
  414931:	pop    es
  414932:	int    0x82
  414934:	dec    eax
  414935:	cmp    al,0xe7
  414937:	aaa    
  414938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414939:	dec    edi
  41493a:	iret   
  41493b:	add    al,BYTE PTR [eax]
  41493d:	ins    DWORD PTR es:[edi],dx
  41493e:	inc    ecx
  41493f:	out    0x1b,eax
  414941:	popf   
  414942:	add    bl,bh
  414944:	add    esi,DWORD PTR [ebp-0x62fc41f4]
  41494a:	jge    0x414973
  41494c:	aaa    
  41494d:	mov    eax,ds:0xad9ae872
  414952:	dec    edi
  414953:	jmp    DWORD PTR [edi]
  414955:	stc    
  414956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414957:	push   cs
  414958:	scas   al,BYTE PTR es:[edi]
  414959:	push   cs
  41495a:	sti    
  41495b:	push   cs
  41495c:	cwde   
  41495d:	push   ss
  41495e:	add    edi,esp
  414960:	icebp  
  414961:	xor    al,BYTE PTR [edi-0x6b]
  414964:	dec    edx
  414965:	(bad)  
  414966:	(bad)
  41496a:	jnp    0x41493f
  41496c:	add    DWORD PTR [ecx-0x56],0x53c1a06a
  414973:	cmp    eax,0x3f04b755
  414978:	jecxz  0x414929
  41497a:	out    0x3a,al
  41497c:	pushf  
  41497d:	out    dx,al
  41497e:	sub    BYTE PTR [esi+0xb3e1aad],bh
  414984:	adc    BYTE PTR [esi],bl
  414986:	ret    0x634
  414989:	fstp   QWORD PTR [ecx+0x29d0316]
  41498f:	adc    DWORD PTR [ebx+0x14930d10],esi
  414995:	pop    ebp
  414996:	add    dh,BYTE PTR [edi]
  414998:	lods   eax,DWORD PTR ds:[esi]
  414999:	scas   al,BYTE PTR es:[edi]
  41499a:	add    bl,al
  41499c:	inc    ebx
  41499d:	popf   
  41499e:	call   0xa6:0xf0002a99
  4149a5:	ins    DWORD PTR es:[edi],dx
  4149a6:	loope  0x41499c
  4149a8:	and    DWORD PTR [ecx],0xffffff9e
  4149ab:	add    al,BYTE PTR [eax]
  4149ad:	push   eax
  4149ae:	shl    BYTE PTR [edi+0x3655e9fd],0x24
  4149b5:	stc    
  4149b6:	dec    ebx
  4149b7:	dec    esi
  4149b8:	and    al,0xf5
  4149ba:	cmp    ch,BYTE PTR es:[ecx+0x447f0846]
  4149c1:	add    eax,0x36f8819d
  4149c6:	test   al,0x82
  4149c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c9:	jmp    0x8dc24c6c
  4149ce:	add    BYTE PTR [esi],0x0
  4149d1:	xchg   ebx,eax
  4149d2:	out    dx,al
  4149d3:	jns    0x414a19
  4149d5:	int    0x66
  4149d7:	sbb    al,0x0
  4149d9:	mov    ecx,0xe8ca9526
  4149de:	sahf   
  4149df:	jnp    0x414a5d
  4149e1:	lds    edi,FWORD PTR [esi-0x7d]
  4149e4:	(bad)  
  4149e5:	in     eax,0x1d
  4149e7:	daa    
  4149e8:	and    al,0xdd
  4149ea:	call   0x13a7:0x51e67a31
  4149f1:	popa   
  4149f2:	scas   eax,DWORD PTR es:[edi]
  4149f3:	inc    edx
  4149f4:	add    BYTE PTR [edx-0xa],ch
  4149f7:	loop   0x414a6b
  4149f9:	cmp    al,0xc4
  4149fb:	out    dx,eax
  4149fc:	mov    dh,BYTE PTR ds:0xa231e245
  414a02:	mov    ah,0xfc
  414a04:	mov    bl,BYTE PTR [ecx]
  414a06:	add    BYTE PTR [ecx-0x7d],dl
  414a09:	cli    
  414a0a:	loopne 0x414a75
  414a0c:	dec    BYTE PTR [ecx-0x74f2ca55]
  414a12:	cmp    DWORD PTR [eax-0x2e13057e],eax
  414a18:	inc    BYTE PTR [ebx]
  414a1a:	mov    al,ds:0x8af925
  414a1f:	xchg   esp,eax
  414a20:	ja     0x4149a2
  414a22:	cli    
  414a23:	stc    
  414a24:	out    dx,al
  414a25:	adc    al,BYTE PTR [ebx*2-0x48b2883]
  414a2c:	test   eax,0xbbb640fe
  414a31:	out    0x7,eax
  414a33:	test   BYTE PTR [ecx+0x4],ah
  414a36:	mov    BYTE PTR [ebp+0x5f45fd32],dh
  414a3c:	mov    esi,0xc9f9c084
  414a41:	sbb    ebx,0x44c49de9
  414a47:	cwde   
  414a48:	sahf   
  414a49:	(bad)  
  414a4a:	push   DWORD PTR [ecx+eax*1+0x2a8c77fb]
  414a51:	jae    0x414a5f
  414a53:	mov    bl,0xee
  414a55:	add    ecx,DWORD PTR [ebp-0x17c662b0]
  414a5b:	sti    
  414a5c:	pop    ecx
  414a5d:	sti    
  414a5e:	push   ecx
  414a60:	cmp    eax,0x89142024
  414a65:	(bad)  
  414a68:	pop    ecx
  414a69:	xchg   DWORD PTR [eax+eax*1+0x58],eax
  414a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a6e:	in     eax,0x6b
  414a70:	out    dx,eax
  414a71:	pop    ecx
  414a72:	sti    
  414a73:	lea    edi,[eax-0x5e]
  414a76:	or     eax,0x7595c50
  414a7b:	add    DWORD PTR [edx+eax*4],esi
  414a7e:	ror    BYTE PTR [edi],0xc9
  414a81:	scas   al,BYTE PTR es:[edi]
  414a82:	cld    
  414a83:	push   ebx
  414a85:	sub    al,BYTE PTR [esp+0x4c]
  414a89:	push   ecx
  414a8a:	call   0x429914
  414a8f:	mov    ebx,esp
  414a91:	adc    bh,0x74
  414a94:	mov    ebx,0x9d247c25
  414a99:	mov    bl,0x80
  414a9b:	std    
  414a9c:	mov    edx,edx
  414a9e:	jle    0x414a91
  414aa0:	push   ds
  414aa1:	neg    edi
  414aa3:	pop    ds
  414aa4:	popf   
  414aa5:	adc    DWORD PTR [ebx+ecx*4+0x61],edx
  414aa9:	mov    bh,0xd9
  414aab:	imul   ebx,DWORD PTR [ebp-0x18e163f5],0xd9810199
  414ab5:	xchg   esi,eax
  414ab6:	sbb    edi,DWORD PTR [edx]
  414ab8:	sbb    BYTE PTR [edi-0x23],dl
  414abb:	aaa    
  414abc:	imul   ebp,DWORD PTR [ebx-0x56],0x13
  414ac0:	ins    DWORD PTR es:[edi],dx
  414ac1:	lds    eax,FWORD PTR [ecx+0x0]
  414ac4:	push   ds
  414ac5:	fcomip st,st(7)
  414ac7:	mov    ah,BYTE PTR [ecx-0x9]
  414aca:	jecxz  0x414b1b
  414acc:	mov    ch,0xb7
  414ace:	test   al,0xfd
  414ad0:	add    BYTE PTR [edx-0x1dc53de7],bl
  414ad6:	mov    ?,WORD PTR [ecx+edx*2-0x2e20b8b]
  414add:	add    BYTE PTR [edx-0x66628d0f],0xaa
  414ae4:	xor    esi,DWORD PTR [ecx-0x18]
  414ae7:	inc    esp
  414ae8:	add    BYTE PTR [edx-0x39],ch
  414aeb:	adc    DWORD PTR [ecx],edx
  414aed:	fstp   QWORD PTR [ecx-0x6663fe18]
  414af3:	add    DWORD PTR ds:0xfda92119,ecx
  414af9:	dec    edx
  414afa:	int    0x2d
  414afc:	and    al,0xa1
  414afe:	shr    DWORD PTR [ecx+ebx*4-0x40096664],0xd2
  414b06:	add    ecx,DWORD PTR [ebp-0x77]
  414b09:	inc    eax
  414b0a:	shufps xmm0,XMMWORD PTR [ebx*4+0x1eec7d0e],0x3
  414b13:	xchg   ebx,eax
  414b14:	aas    
  414b15:	ins    BYTE PTR es:[edi],dx
  414b16:	dec    esp
  414b17:	ss stos DWORD PTR es:[edi],eax
  414b19:	mov    ?,esi
  414b1b:	arpl   WORD PTR [eax+0x41],cx
  414b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1f:	adc    al,0xfc
  414b21:	and    eax,0xe8c58fb3
  414b26:	mov    ds:0xaa7e867e,eax
  414b2b:	out    0x78,eax
  414b2d:	pop    esi
  414b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2f:	pop    ss
  414b30:	pushf  
  414b31:	mov    edi,0x3e709
  414b36:	and    al,0xcb
  414b38:	jo     0x414b82
  414b3a:	xchg   ebp,eax
  414b3b:	jge    0x414b6f
  414b3d:	xor    BYTE PTR [eax+0x4d67a475],ah
  414b43:	out    dx,eax
  414b44:	es inc ebx
  414b46:	vpavgb ymm0,ymm1,YMMWORD PTR [ebx]
  414b4a:	popf   
  414b4b:	js     0x414b5c
  414b4d:	js     0x414b7d
  414b4f:	stos   BYTE PTR es:[edi],al
  414b50:	aas    
  414b51:	dec    eax
  414b52:	stos   BYTE PTR es:[edi],al
  414b53:	add    ah,bh
  414b55:	dec    edx
  414b56:	repz js 0x414b83
  414b59:	dec    esi
  414b5a:	(bad)  
  414b5b:	rcr    bh,0x3
  414b5e:	adc    al,0x2d
  414b60:	or     eax,DWORD PTR [esi-0x7f190902]
  414b66:	imul   ebp,DWORD PTR [esi],0xffffffb9
  414b69:	js     0x414b4f
  414b6b:	in     al,dx
  414b6c:	arpl   WORD PTR [eax+0x5d],ax
  414b6f:	push   edx
  414b70:	pop    esp
  414b71:	inc    edx
  414b72:	imul   edx,DWORD PTR [edx-0x31],0x4e
  414b76:	stc    
  414b77:	mov    ds:0x2d5d7fde,al
  414b7c:	cli    
  414b7d:	and    DWORD PTR [ebx+edi*8],edx
  414b80:	inc    esp
  414b81:	in     eax,dx
  414b82:	fbstp  TBYTE PTR [eax+0x77b8fe3c]
  414b88:	es push es
  414b8a:	ret    
  414b8b:	out    0xff,eax
  414b8d:	sub    ebp,ebp
  414b8f:	sub    eax,0xf6daae4b
  414b94:	sub    BYTE PTR [esi-0x128d13fd],0x0
  414b9b:	shl    BYTE PTR [ebx+0x77f39f69],1
  414ba1:	inc    ebx
  414ba2:	dec    ebp
  414ba3:	push   ecx
  414ba4:	sbb    BYTE PTR [edx],bh
  414ba6:	and    ch,BYTE PTR [edx+0x27]
  414ba9:	cld    
  414baa:	ins    BYTE PTR es:[edi],dx
  414bab:	stos   BYTE PTR es:[edi],al
  414bac:	cli    
  414bad:	lds    ebp,FWORD PTR [esp+eiz*8]
  414bb0:	mov    ds:0x9a02f488,al
  414bb5:	mov    ds:0x83a505d3,eax
  414bba:	sub    DWORD PTR [ebp-0x55376f0],ecx
  414bc0:	lock rcl DWORD PTR [esi-0x10],1
  414bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc5:	jae    0x414bb8
  414bc7:	push   ss
  414bc8:	je     0x414be1
  414bca:	jmp    0xe684c66d
  414bcf:	cmc    
  414bd0:	or     BYTE PTR cs:[ecx+0x4e],al
  414bd4:	sub    bh,ch
  414bd6:	adc    edi,DWORD PTR es:[esi]
  414bd9:	or     eax,0xfd9fd110
  414bde:	push   ss
  414bdf:	call   0x45c22d8e
  414be4:	mov    al,ds:0x24162232
  414be9:	std    
  414bea:	(bad)  
  414beb:	xor    eax,0xe3f88939
  414bf0:	cwde   
  414bf1:	or     eax,0x32365
  414bf6:	jmp    0xbbc544cb
  414bfb:	jp     0x414c1b
  414bfd:	push   ebp
  414bfe:	sbb    al,BYTE PTR [eax]
  414c00:	push   es
  414c01:	aam    0xfc
  414c03:	imul   ecx,DWORD PTR [eax],0x570072d3
  414c09:	and    BYTE PTR [esi+0x1],dl
  414c0c:	mov    ah,0x6f
  414c0e:	js     0x414c84
  414c10:	xor    DWORD PTR [esi+0x4d158fa],eax
  414c16:	push   0x4
  414c18:	xchg   ebx,eax
  414c1a:	add    bl,BYTE PTR [edi-0x39]
  414c1d:	and    BYTE PTR [esi],dl
  414c1f:	(bad)  
  414c20:	into   
  414c21:	mov    dh,0x80
  414c23:	sti    
  414c24:	std    
  414c25:	ror    BYTE PTR [edi],cl
  414c27:	data16 jmp 0x414c55
  414c2a:	rol    cl,cl
  414c2c:	adc    eax,0x3e0363a2
  414c31:	in     al,0x7e
  414c33:	jmp    0x8d6fcb4c
  414c38:	fisubr WORD PTR [edx]
  414c3a:	cmp    bl,0xc1
  414c3d:	ror    BYTE PTR [edi],cl
  414c3f:	mov    bx,0xd22b
  414c43:	shl    DWORD PTR [ebp-0x5f],0x63
  414c47:	add    ebp,DWORD PTR [esi-0x1d]
  414c4a:	jle    0x414c35
  414c4c:	mov    bl,0x7e
  414c4e:	push   ss
  414c4f:	lea    ecx,[esi]
  414c51:	mov    eax,DWORD PTR [eax+0x13d281fb]
  414c57:	mov    bp,WORD PTR [ebx]
  414c5a:	rol    cl,cl
  414c5c:	xchg   ebp,eax
  414c5d:	mov    eax,ds:0xe3be0363
  414c62:	jle    0x414c4d
  414c64:	add    BYTE PTR [ebx],dh
  414c66:	call   0x5bb2:0x7e42c9b4
  414c6d:	add    BYTE PTR [eax+0x5af70374],bh
  414c73:	std    
  414c74:	gs mov ebp,0xdbc7889d
  414c7a:	dec    eax
  414c7b:	mov    edi,0x7fc0d33
  414c80:	popfw  
  414c82:	and    bh,ah
  414c84:	push   edi
  414c85:	fld    TBYTE PTR [edi+edi*2-0x2e]
  414c89:	test   eax,0x210a79ff
  414c8e:	push   edx
  414c8f:	xor    BYTE PTR [esi+0x6e],cl
  414c92:	imul   eax,DWORD PTR [edi+esi*8+0x69fed6c8],0xffffff9f
  414c9a:	inc    ebx
  414c9b:	cdq    
  414c9c:	add    ebx,DWORD PTR ds:0x9c72d962
  414ca2:	in     eax,dx
  414ca3:	dec    ebp
  414ca4:	xor    ebx,esi
  414ca6:	or     DWORD PTR ds:0x26c1f480,0x17
  414cad:	jbe    0x414cc8
  414caf:	cli    
  414cb0:	gs xchg edx,eax
  414cb2:	fnstcw WORD PTR [edx+0x1e1a9e66]
  414cb8:	add    ebx,0xd3b4f4fa
  414cbe:	ins    BYTE PTR es:[edi],dx
  414cbf:	ja     0x414ccb
  414cc1:	sbb    eax,0xbf7af432
  414cc6:	es mov ebx,0x2c9e0074
  414ccc:	mov    esp,0xb6189bff
  414cd1:	test   al,0x9f
  414cd3:	pop    edi
  414cd4:	sti    
  414cd5:	data16 fs icebp 
  414cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd9:	add    BYTE PTR [ebp-0x14f28371],bl
  414cdf:	in     al,dx
  414ce0:	lock mov edi,0x871ba1f7
  414ce6:	mov    ds:0x2653c251,al
  414ceb:	test   BYTE PTR [eax-0x67d49a1c],0x90
  414cf2:	pushf  
  414cf3:	test   eax,0xc5a18b01
  414cf8:	push   ecx
  414cf9:	push   0x3e9029f
  414cfe:	popf   
  414cff:	lahf   
  414d00:	hlt    
  414d01:	(bad)  
  414d02:	scas   al,BYTE PTR es:[edi]
  414d03:	inc    edx
  414d04:	out    0xae,eax
  414d06:	push   ebp
  414d07:	cld    
  414d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d09:	inc    ebx
  414d0a:	and    al,0xa6
  414d0c:	and    al,0xc3
  414d0e:	sub    dh,ah
  414d10:	mov    dh,0x10
  414d12:	fld    QWORD PTR [edx]
  414d14:	scas   al,BYTE PTR es:[edi]
  414d15:	std    
  414d16:	sbb    DWORD PTR ds:[edi],esp
  414d19:	add    al,0x1d
  414d1b:	fimul  WORD PTR [esi-0x40]
  414d1e:	pop    esp
  414d1f:	add    ah,bh
  414d21:	xor    ch,al
  414d23:	aaa    
  414d24:	push   esi
  414d25:	retf   
  414d26:	fiadd  WORD PTR [ebx-0x19]
  414d29:	dec    esi
  414d2a:	lock cmc 
  414d2c:	xchg   edx,eax
  414d2d:	adc    DWORD PTR [eax],eax
  414d2f:	pop    ebp
  414d30:	add    ah,BYTE PTR [edi-0x18]
  414d33:	cmp    al,dh
  414d35:	sub    al,BYTE PTR [ebx*4+0x19bd115]
  414d3c:	mov    al,ds:0xc321a666
  414d41:	rcl    DWORD PTR [eax+ebx*8],cl
  414d44:	add    eax,0x25cc083
  414d49:	sub    ebp,0x2d0273
  414d4f:	cmc    
  414d50:	lds    ebp,FWORD PTR [edx+0x3638a203]
  414d56:	adc    BYTE PTR [ebp-0xffc590c],cl
  414d5c:	mov    WORD PTR [ebx-0x527c6121],gs
  414d62:	inc    DWORD PTR [ecx+0x7afb8d83]
  414d68:	xchg   DWORD PTR [ebp-0x34b9db09],esp
  414d6e:	sti    
  414d6f:	and    cl,BYTE PTR [eax-0x14]
  414d72:	jp     0x414dcf
  414d74:	les    eax,FWORD PTR [eax]
  414d76:	loope  0x414d16
  414d78:	cmp    BYTE PTR [ecx+0xc037f8],cl
  414d7e:	jmp    0x585e621
  414d83:	inc    ecx
  414d84:	mov    al,ds:0xaae8ef71
  414d89:	inc    ecx
  414d8a:	inc    ecx
  414d8b:	clc    
  414d8c:	pushf  
  414d8d:	mov    DWORD PTR [edi-0x16fb3b1d],ebp
  414d93:	add    bl,dl
  414d95:	mov    esp,ebp
  414d97:	push   0xe8ff1a35
  414d9c:	sahf   
  414d9d:	lds    eax,FWORD PTR [esi]
  414d9f:	dec    ebp
  414da0:	mov    ebx,0xfa690042
  414da5:	retw   
  414da7:	sub    ah,BYTE PTR [ecx+0x3145502]
  414dad:	pop    esi
  414dae:	fsubr  DWORD PTR [esp+ebx*2-0x6d81aafe]
  414db5:	scas   al,BYTE PTR es:[edi]
  414db6:	adc    ch,BYTE PTR [ecx]
  414db8:	mov    eax,ds:0x12413b82
  414dbd:	inc    ecx
  414dbe:	add    cl,ch
  414dc0:	jnp    0x414dbe
  414dc2:	out    0x7,eax
  414dc4:	clc    
  414dc5:	pushf  
  414dc6:	std    
  414dc7:	ins    DWORD PTR es:[edi],dx
  414dc8:	loope  0x414ddf
  414dca:	(bad)  
  414dcc:	mov    dl,0x6a
  414dce:	ret    
  414dcf:	stos   BYTE PTR es:[edi],al
  414dd0:	sahf   
  414dd1:	ins    BYTE PTR es:[edi],dx
  414dd2:	ss test al,0x9e
  414dd5:	enter  0x8103,0x5a
  414dd9:	inc    esp
  414dda:	add    al,ch
  414ddc:	loope  0x414d7d
  414dde:	adc    ebx,DWORD PTR [ecx]
  414de0:	scas   eax,DWORD PTR es:[edi]
  414de1:	inc    edx
  414de2:	add    BYTE PTR [edx+eax*8-0x62],ch
  414de6:	push   eax
  414de7:	fs cli 
  414de9:	mov    bh,dh
  414deb:	push   cs
  414dec:	cmp    BYTE PTR [ebx],dh
  414dee:	push   0xfda27800
  414df3:	dec    DWORD PTR [edi+eiz*2]
  414df6:	sti    
  414df7:	add    BYTE PTR [eax],al
  414df9:	inc    esp
  414dfa:	addr16 jno 0x414e05
  414dfd:	adc    edx,0xfffffffc
  414e00:	push   DWORD PTR [ecx+ebx*1]
  414e03:	jns    0x414e01
  414e05:	arpl   WORD PTR ds:0x68415cc,cx
  414e0b:	add    eax,0x8d52f3c8
  414e11:	mov    ecx,0xe3fffe19
  414e16:	sti    
  414e17:	dec    DWORD PTR [edi+0x53]
  414e1a:	or     eax,0x6c41634
  414e1f:	jg     0x414de5
  414e21:	adc    BYTE PTR [ebx+0x6722e4b9],al
  414e27:	sti    
  414e28:	push   es
  414e29:	mov    bl,0xd2
  414e2b:	push   cs
  414e2c:	and    DWORD PTR [ecx+0x7d],0xfffffffe
  414e30:	jmp    DWORD PTR [ebx]
  414e32:	icebp  
  414e33:	or     dl,BYTE PTR [ebp+0x24c86834]
  414e39:	(bad)  
  414e3a:	sbb    DWORD PTR [esi+0xd],eax
  414e3d:	pop    ds
  414e3e:	sahf   
  414e3f:	ret    
  414e40:	inc    esi
  414e41:	rol    DWORD PTR [eax],1
  414e43:	xchg   DWORD PTR [ebp-0x49878],eax
  414e49:	pop    esp
  414e4a:	mov    ch,0xfe
  414e4c:	inc    esp
  414e4e:	and    BYTE PTR [esi+0x8],0xb4
  414e52:	sbb    DWORD PTR [esi+0xc],eax
  414e55:	das    
  414e56:	fadd   QWORD PTR [edi]
  414e58:	mov    DWORD PTR [edx-0x63],ecx
  414e5b:	mov    dh,al
  414e5d:	add    BYTE PTR [ebp+0x4a0004c3],bh
  414e63:	sbb    ch,ch
  414e65:	(bad)  
  414e66:	jne    0x414ea5
  414e68:	jbe    0x414eaa
  414e6a:	popf   
  414e6b:	stos   DWORD PTR es:[edi],eax
  414e6c:	cdq    
  414e6d:	jg     0x414e0c
  414e6f:	stos   DWORD PTR es:[edi],eax
  414e70:	add    DWORD PTR [esi+0x5e],ebx
  414e73:	sub    BYTE PTR [ebx],ah
  414e75:	add    al,0x62
  414e77:	pop    ss
  414e78:	add    BYTE PTR [eax-0x4a0c1764],dh
  414e7e:	fstp   TBYTE PTR [esi-0x2c678bc7]
  414e84:	pop    ss
  414e85:	add    DWORD PTR [edi-0x60953a95],ecx
  414e8b:	shr    BYTE PTR ds:0xd6a6460f,cl
  414e91:	(bad)  
  414e92:	fdiv   QWORD PTR [ecx]
  414e94:	or     cl,BYTE PTR [edx-0x17c45025]
  414e9a:	out    0xaa,eax
  414e9c:	add    DWORD PTR [eax],eax
  414e9e:	outs   dx,DWORD PTR ds:[esi]
  414e9f:	cli    
  414ea0:	xor    edi,ebp
  414ea2:	mov    al,0x63
  414ea4:	idiv   DWORD PTR [edi]
  414ea6:	popf   
  414ea7:	mov    eax,0x73f581cc
  414eac:	mov    eax,DWORD PTR [esi-0x67]
  414eaf:	mov    esp,0x27dec078
  414eb4:	and    cl,BYTE PTR [eax]
  414eb6:	popf   
  414eb7:	xchg   edi,eax
  414eb8:	or     dh,BYTE PTR [edi]
  414eba:	pop    ebx
  414ebb:	mov    ebx,0x67dd9412
  414ec0:	mov    eax,ds:0x9dc90013
  414ec5:	inc    ecx
  414ec6:	add    BYTE PTR [eiz*2-0x41227cf7],dl
  414ecd:	jecxz  0x414f23
  414ecf:	dec    ebp
  414ed0:	dec    esp
  414ed1:	sbb    al,BYTE PTR [edx+ebp*4]
  414ed4:	mov    ebp,0xab5d13a5
  414ed9:	mov    al,al
  414edb:	adc    BYTE PTR [esp+ecx*4+0x319ad7e],ch
  414ee2:	ror    DWORD PTR [edx-0x7ff462fd],0xf6
  414ee9:	ss stc 
  414eeb:	mov    edx,0xa52a6a02
  414ef0:	add    bl,cl
  414ef2:	ret    
  414ef3:	pop    esp
  414ef4:	mov    BYTE PTR [ebp-0x164e3f9],ch
  414efa:	pop    ss
  414efb:	mov    bl,0x28
  414efd:	jmp    0xff379f35
  414f02:	clc    
  414f03:	mov    al,BYTE PTR [edx]
  414f05:	out    0x19,al
  414f07:	cdq    
  414f08:	fwait
  414f09:	hlt    
  414f0a:	call   DWORD PTR [eax-0x1c7918be]
  414f10:	push   es
  414f11:	into   
  414f12:	mov    fs,ebx
  414f14:	or     ch,BYTE PTR [ebx+eax*8-0x57]
  414f18:	pop    es
  414f19:	pop    ss
  414f1a:	mov    ds:0x43dcb2ae,eax
  414f1f:	popf   
  414f20:	jg     0x414f67
  414f22:	or     al,0x9d
  414f24:	mov    edi,0xf1008f3c
  414f29:	or     DWORD PTR [ebx-0x186405e5],0x379e5e90
  414f33:	xchg   ecx,eax
  414f34:	push   ds
  414f35:	mov    eax,DWORD PTR [ebp+0xf32e0a2]
  414f3b:	or     BYTE PTR [ebp+0x2],bh
  414f3e:	out    0x2b,eax
  414f40:	rcr    BYTE PTR [ebx+0x15c803e7],1
  414f46:	out    dx,eax
  414f47:	retf   0x9e5e
  414f4a:	rol    DWORD PTR [ebx*4-0x1907a9fe],cl
  414f51:	cmc    
  414f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f53:	add    ebx,DWORD PTR [esi]
  414f55:	ret    
  414f56:	mov    esp,0x13861410
  414f5b:	mov    eax,ds:0x41009b98
  414f60:	xchg   edx,eax
  414f61:	fwait
  414f62:	std    
  414f63:	jmp    0x29734fa3
  414f68:	push   ecx
  414f69:	rol    BYTE PTR [ecx+ebp*8],0x8f
  414f6d:	push   esp
  414f6e:	shl    BYTE PTR [ecx-0x6ab7f776],0xa3
  414f75:	sar    DWORD PTR [edi+0x57f5b02a],1
  414f7b:	sub    cl,BYTE PTR [eax-0x19d5a800]
  414f81:	dec    edx
  414f82:	je     0x414f66
  414f84:	and    ebp,DWORD PTR [edx-0x2f67a2ed]
  414f8a:	mov    edi,0xd100aa
  414f8f:	rcr    DWORD PTR [ecx-0x68f23e62],0xe1
  414f96:	push   cs
  414f97:	dec    eax
  414f98:	cmp    eax,0xea744a93
  414f9d:	icebp  
  414f9e:	pop    edx
  414f9f:	rol    DWORD PTR [ebx-0x63],0x3a
  414fa3:	rol    DWORD PTR [ebx+0x11],0x33
  414fa7:	shl    esi,0x65
  414faa:	add    cl,BYTE PTR [eax+0x31]
  414fad:	xchg   ebp,eax
  414fae:	push   cs
  414faf:	add    DWORD PTR [ecx-0x25fef116],0xe56ac0de
  414fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fba:	shr    DWORD PTR [edx-0x27],0x96
  414fbe:	rcl    DWORD PTR [ebx+0x62],0xd
  414fc2:	dec    ebx
  414fc3:	mov    DWORD PTR [edi+0x66fdc2f9],esp
  414fc9:	cld    
  414fca:	xor    DWORD PTR [edx-0x17],ebp
  414fcd:	std    
  414fce:	push   cs
  414fcf:	or     BYTE PTR [eax+0x5a],ah
  414fd2:	sahf   
  414fd3:	std    
  414fd4:	hlt    
  414fd5:	shl    ah,cl
  414fd7:	aas    
  414fd8:	add    BYTE PTR [ebp+eax*4+0x42090cc4],dh
  414fdf:	cld    
  414fe0:	push   eax
  414fe1:	retf   
  414fe2:	icebp  
  414fe3:	pop    es
  414fe4:	call   DWORD PTR [edx+0x2]
  414fe7:	sti    
  414fe8:	adc    eax,0x3d9c74
  414fed:	xchg   ebx,eax
  414fee:	push   esi
  414fef:	pop    ss
  414ff0:	rol    BYTE PTR [eax],0x44
  414ff3:	int    0xc2
  414ff5:	add    al,0x74
  414ff7:	rol    DWORD PTR [esi-0x3978fa14],1
  414ffd:	call   0x3cb3f9
  415002:	xor    al,0xe8
  415004:	(bad)  
  415005:	(bad)  
  415006:	ror    DWORD PTR ds:0x63384585,1
  41500c:	adc    DWORD PTR [edx+esi*1],esi
  41500f:	inc    esi
  415010:	add    BYTE PTR [ebx+0x45890a00],al
  415016:	pop    eax
  415017:	(bad)  
  415018:	cli    
  415019:	jne    0x415047
  41501b:	arpl   WORD PTR [esi+0x4],si
  41501e:	pop    ebx
  41501f:	xchg   ecx,eax
  415020:	mov    ecx,0xf2fec415
  415025:	fsubr  st,st(7)
  415027:	lds    eax,FWORD PTR [eax-0x37]
  41502a:	add    al,BYTE PTR ss:[eax]
  41502d:	call   DWORD PTR [eax-0x6b00fe56]
  415033:	push   es
  415034:	sti    
  415035:	jo     0x415037
  415037:	arpl   WORD PTR [ecx],dx
  415039:	loopne 0x414ffc
  41503b:	inc    ebp
  41503c:	add    bh,dh
  41503e:	cld    
  41503f:	xchg   esi,eax
  415040:	mov    ebp,0x20640
  415045:	push   ebp
  415046:	aas    
  415047:	imul   edi,DWORD PTR [edi-0x14],0x5755cfa4
  41504e:	das    
  41504f:	je     0x414fd8
  415051:	fcomp  DWORD PTR [ebp+0xfde443]
  415057:	stos   BYTE PTR es:[edi],al
  415058:	dec    eax
  415059:	test   eax,eax
  41505b:	sub    DWORD PTR [ecx+0x33fa312b],ebx
  415061:	cmp    dh,bh
  415063:	xchg   edx,eax
  415064:	rol    BYTE PTR [eax+eax*8-0x4af0f9ef],1
  41506b:	sahf   
  41506c:	sub    al,0x99
  41506e:	add    dh,al
  415070:	sahf   
  415071:	sub    edx,DWORD PTR [eax]
  415073:	aad    0x4
  415075:	rdtsc  
  415077:	push   esp
  415078:	sub    al,0x99
  41507a:	adc    eax,0x8bc23692
  41507f:	fcomp  QWORD PTR [eax+0x7bb1e081]
  415085:	xor    al,0xfd
  415087:	rcr    DWORD PTR [edi-0x699aec60],cl
  41508d:	inc    ecx
  41508e:	add    BYTE PTR [eax],ah
  415090:	imul   ebx,DWORD PTR [eax],0x2a
  415093:	es out dx,al
  415095:	not    DWORD PTR ds:0xd59eabdd
  41509b:	out    0x9b,al
  41509d:	out    0xff,al
  41509f:	sbb    dl,BYTE PTR [edx]
  4150a1:	inc    edi
  4150a2:	cld    
  4150a3:	(bad)  
  4150a4:	ins    BYTE PTR es:[edi],dx
  4150a5:	sbb    BYTE PTR [esi],cl
  4150a7:	cmc    
  4150a8:	neg    DWORD PTR [ebp+0x176002fd]
  4150ae:	cld    
  4150af:	cli    
  4150b0:	(bad)  
  4150b1:	in     eax,0x15
  4150b3:	pop    ebp
  4150b4:	stos   DWORD PTR es:[edi],eax
  4150b5:	sahf   
  4150b6:	aad    0xa6
  4150b8:	ins    BYTE PTR es:[edi],dx
  4150b9:	pop    ss
  4150ba:	xor    al,BYTE PTR [eax]
  4150bc:	not    BYTE PTR [ecx+edx*2-0x6c373801]
  4150c3:	inc    ebx
  4150c4:	in     eax,dx
  4150c5:	mov    edx,0x8dca1518
  4150ca:	or     DWORD PTR [ebx+0x34370258],ecx
  4150d0:	and    al,0x3f
  4150d2:	jmp    0x4150fd
  4150d4:	lea    ebp,[edx+0x29d02b1]
  4150da:	les    ebp,FWORD PTR fs:[ecx]
  4150dd:	lahf   
  4150de:	push   edx
  4150df:	nop    DWORD PTR [esi]
  4150e2:	inc    ebx
  4150e3:	add    al,0x9
  4150e5:	mov    edx,0x98811936
  4150ea:	aam    0xe7
  4150ec:	test   al,0x42
  4150ee:	out    0xd1,eax
  4150f0:	cmp    bh,BYTE PTR [eax]
  4150f2:	mov    ebp,0xdfc55a3a
  4150f7:	add    edx,ebx
  4150f9:	mov    edx,DWORD PTR [edi]
  4150fb:	shl    DWORD PTR [edx],cl
  4150fd:	add    DWORD PTR [ebp-0x11cea5f0],0x78
  415104:	pop    ebp
  415105:	xchg   BYTE PTR [edi-0x62],ch
  415108:	sbb    al,0xa0
  41510a:	in     al,0x90
  41510c:	rol    BYTE PTR [ebx],0xcf
  41510f:	sub    dh,BYTE PTR [esi]
  415111:	cwde   
  415112:	fiadd  WORD PTR [edi-0x53dcf0a3]
  415118:	call   DWORD PTR [ebp-0x3ce66132]
  41511e:	cmp    eax,DWORD PTR [ebx+0x0]
  415121:	test   al,0x4f
  415123:	jmp    0x7709:0x3c051582
  41512a:	repnz push cs
  41512c:	stos   DWORD PTR es:[edi],eax
  41512d:	xchg   ebx,eax
  41512e:	shr    DWORD PTR [edi-0x12100a7e],cl
  415134:	js     0x415168
  415136:	xchg   BYTE PTR [eax],ch
  415138:	lahf   
  415139:	sbb    al,0xa3
  41513b:	jmp    0x415170
  41513d:	dec    esp
  41513e:	xchg   edi,eax
  41513f:	std    
  415140:	pop    es
  415141:	fsubr  st,st(5)
  415143:	jb     0x41513d
  415145:	xchg   edx,eax
  415146:	add    al,BYTE PTR [eax]
  415148:	ins    BYTE PTR es:[edi],dx
  415149:	ficom  WORD PTR [ebx]
  41514b:	pop    ss
  41514c:	imul   esp,DWORD PTR [eax-0x542400f5],0x885e142c
  415156:	(bad)  
  415157:	cld    
  415158:	cld    
  415159:	(bad)  
  41515a:	repz aas 
  41515c:	jmp    0xedb51476
  415161:	out    dx,al
  415162:	xchg   edi,eax
  415163:	jmp    0xdedf:0x13f333d7
  41516a:	add    cl,BYTE PTR [ecx-0x474c9cf]
  415170:	sbb    ebp,DWORD PTR es:0xed7af4fd
  415177:	aas    
  415178:	jmp    0xaf9ea8c9
  41517d:	pop    edi
  41517e:	xor    ecx,DWORD PTR [ecx-0x6f59deeb]
  415184:	jmp    0x5143ef89
  415189:	sub    DWORD PTR [eax+0x2377838b],0xffffff95
  415190:	std    
  415191:	push   ebx
  415192:	mov    eax,ds:0x5c41e832
  415197:	xchg   edi,eax
  415198:	std    
  415199:	(bad)  
  41519b:	or     cl,BYTE PTR [edx-0x3b7e72d7]
  4151a1:	cmc    
  4151a2:	inc    esi
  4151a3:	(bad)  
  4151a6:	xor    BYTE PTR [eax],ah
  4151a8:	xchg   DWORD PTR [ebp+eiz*4-0x6b],ebp
  4151ac:	std    
  4151ad:	scas   al,BYTE PTR es:[edi]
  4151ae:	mov    cl,0xf2
  4151b0:	and    al,0xe9
  4151b2:	sahf   
  4151b3:	pop    edx
  4151b4:	xor    BYTE PTR [ecx+ebx*4],dl
  4151b7:	add    ch,al
  4151b9:	jmp    0x415156
  4151bb:	xchg   edi,eax
  4151bc:	std    
  4151bd:	push   0xffffffba
  4151bf:	mov    es,WORD PTR [eax]
  4151c1:	add    BYTE PTR [ebp+0x3f],cl
  4151c4:	clc    
  4151c5:	dec    di
  4151c7:	aas    
  4151c8:	clc    
  4151c9:	data16 cmc 
  4151cb:	mov    ebp,0x7f3d6608
  4151d0:	jbe    0x4151d1
  4151d2:	inc    ebx
  4151d3:	jne    0x41515c
  4151d5:	inc    ebp
  4151d6:	lods   al,BYTE PTR ds:[esi]
  4151d7:	xchg   DWORD PTR [ecx-0x48aac8c],ebx
  4151dd:	call   0x3cc790
  4151e2:	or     BYTE PTR [edi-0x722cca8f],bh
  4151e8:	adc    DWORD PTR [esi],edx
  4151ea:	add    BYTE PTR [edx+eax*1],dh
  4151ed:	cmp    DWORD PTR [eax-0x65],eax
  4151f0:	(bad)  
  4151f1:	push   DWORD PTR [ebp+eiz*2+0x77]
  4151f5:	inc    ecx
  4151f6:	clc    
  4151f7:	add    eax,0x930f7f6
  4151fc:	add    al,BYTE PTR [eax]
  4151fe:	jbe    0x41527b
  415200:	mov    edi,0x9f74f841
  415205:	std    
  415206:	call   DWORD PTR [ebx+0x3d]
  415209:	hlt    
  41520a:	mov    eax,0x4854
  41520f:	sbb    bh,BYTE PTR [ecx+0x31d6f442]
  415215:	xor    al,al
  415217:	(bad)  
  415219:	ret    0x3404
  41521c:	xor    bh,ch
  41521e:	jmp    0xc08f:0x574ed14b
  415225:	call   0xfbb8a39e
  41522a:	xor    ebp,DWORD PTR [edi]
  41522c:	ror    DWORD PTR [esi-0x1],cl
  41522f:	lds    ecx,FWORD PTR [edx]
  415231:	test   DWORD PTR [eax+ebp*8-0x73],eax
  415235:	cld    
  415236:	adc    eax,0x3d8d44
  41523b:	popf   
  41523c:	and    BYTE PTR [ecx+0x1584e281],bl
  415242:	pop    ds
  415243:	outs   dx,BYTE PTR ds:[esi]
  415244:	clc    
  415245:	xor    bh,ch
  415247:	test   al,0x7f
  415249:	idiv   BYTE PTR [edi]
  41524b:	popf   
  41524c:	cmc    
  41524d:	sub    DWORD PTR [eax+eax*1],edx
  415250:	mov    ch,0x99
  415252:	and    ch,bh
  415254:	mov    edx,0x8d74bee0
  415259:	dec    esp
  41525a:	mov    al,dh
  41525c:	mov    ch,0x62
  41525e:	cwde   
  41525f:	std    
  415260:	mov    ds:0xa3e99120,al
  415265:	cwde   
  415266:	shr    ecx,0xd8
  415269:	cwde   
  41526a:	xchg   ebx,eax
  41526b:	cmp    DWORD PTR [esi-0x41960ea9],ecx
  415271:	test   BYTE PTR [ecx-0x642386b2],ch
  415277:	test   BYTE PTR [ebp+0x6f],bl
  41527a:	cli    
  41527b:	mov    BYTE PTR [ebx+0x0],ah
  41527e:	jmp    0x4152e9
  415280:	xchg   ebp,eax
  415281:	push   eax
  415282:	daa    
  415283:	add    dh,dl
  415285:	cld    
  415286:	cmc    
  415287:	out    0xa8,eax
  415289:	imul   eax,DWORD PTR [ecx],0x55
  41528c:	dec    edx
  41528d:	mov    dh,0xfd
  41528f:	adc    eax,0x10a8abdd
  415294:	cmp    dl,BYTE PTR [esi-0x5422ea13]
  41529a:	mov    ds,eax
  41529c:	push   ss
  41529d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41529e:	sub    edi,edi
  4152a0:	pop    ss
  4152a1:	jne    0x41523c
  4152a3:	adc    BYTE PTR [esi-0x44],ch
  4152a6:	out    dx,eax
  4152a7:	and    ebp,DWORD PTR [ebx-0x22cefc15]
  4152ad:	in     al,dx
  4152ae:	cmp    BYTE PTR [ecx+0x64],bl
  4152b1:	push   0xfa00002e
  4152b6:	add    DWORD PTR [ebx],ebx
  4152b8:	loopne 0x415260
  4152ba:	xchg   ebp,eax
  4152bb:	adc    esp,eax
  4152bd:	xchg   esi,eax
  4152be:	xchg   ebp,eax
  4152bf:	sbb    BYTE PTR [eax],al
  4152c1:	loopne 0x4152b1
  4152c3:	out    dx,al
  4152c4:	icebp  
  4152c5:	call   0x722f:0x9d0ca902
  4152cc:	test   al,0x1c
  4152ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152cf:	ret    
  4152d0:	imul   ebp,DWORD PTR ss:0x93249c62,0x72
  4152d8:	mov    esi,0x27231c4
  4152dd:	push   eax
  4152de:	xor    DWORD PTR [edx-0x36],esp
  4152e1:	mov    al,ds:0x5d80e331
  4152e6:	adc    eax,0xe87506ed
  4152eb:	ds scas eax,DWORD PTR es:[edi]
  4152ed:	(bad)  
  4152ee:	push   cs
  4152ef:	lahf   
  4152f0:	call   0xd59d:0x43d4eeae
  4152f7:	(bad)  
  4152f9:	jb     0x41528f
  4152fb:	xchg   esp,eax
  4152fc:	inc    ecx
  4152fd:	cmc    
  4152fe:	rcr    BYTE PTR [ebx-0x5b7a62fd],cl
  415304:	scas   eax,DWORD PTR es:[edi]
  415305:	in     eax,dx
  415306:	xchg   DWORD PTR [ebx+ecx*1-0x16f11e39],ebp
  41530d:	dec    ebx
  41530e:	xchg   esp,eax
  41530f:	out    0x80,eax
  415311:	pop    ebp
  415312:	push   cs
  415313:	mov    esi,0x7aede91
  415318:	adc    BYTE PTR [eax],al
  41531a:	sahf   
  41531b:	fldenv [ebx]
  41531d:	test   al,0xae
  41531f:	jmp    0x253:0x24940dc
  415326:	sbb    al,0x16
  415328:	lahf   
  415329:	add    ecx,DWORD PTR [esi-0x77659c1f]
  41532f:	data16 add BYTE PTR [ecx-0x67],bh
  415333:	xor    eax,0xc0e8125e
  415338:	add    al,0xe9
  41533a:	(bad)  
  41533b:	(bad)  
  41533d:	jmp    0xcd54e8e0
  415342:	in     al,dx
  415343:	sar    edi,cl
  415345:	fcmovu st,st(6)
  415347:	test   eax,0xa6ad86ea
  41534c:	jmp    0xd8517ac9
  415351:	cmp    dl,0x2f
  415354:	mov    DWORD PTR [ebp+0x71],edi
  415357:	mov    DWORD PTR [edi-0x269a3af],edi
  41535d:	pop    esi
  41535e:	sbb    DWORD PTR [eax-0x4],eax
  415361:	bound  ebx,QWORD PTR [ebp+0xa]
  415364:	cmc    
  415365:	xor    DWORD PTR [ebx+0x2a9c8b53],ebx
  41536b:	loope  0x41532e
  41536d:	cdq    
  41536e:	daa    
  41536f:	invd   
  415371:	ret    
  415372:	sahf   
  415373:	xchg   ebp,eax
  415374:	jae    0x41534f
  415376:	pop    ss
  415377:	(bad)  
  415379:	es mov esi,edi
  41537c:	cld    
  41537d:	hlt    
  41537e:	add    dh,al
  415380:	out    dx,eax
  415381:	aas    
  415382:	jmp    0xe94e13d8
  415387:	mov    BYTE PTR [edx],al
  415389:	std    
  41538a:	jge    0x4153fe
  41538c:	pop    es
  41538d:	std    
  41538e:	jne    0x4153fa
  415390:	pop    es
  415391:	std    
  415392:	js     0x4153d6
  415394:	xchg   esi,eax
  415395:	adc    ecx,ecx
  415397:	sub    al,0xd3
  415399:	jmp    FWORD PTR [edx+0x725302a1]
  41539f:	cmc    
  4153a0:	sub    ah,0x5
  4153a3:	push   0x3962552c
  4153a8:	mov    edi,ebp
  4153aa:	add    BYTE PTR [edi-0x70b318ac],cl
  4153b0:	nop
  4153b1:	mov    ch,0x0
  4153b3:	cld    
  4153b4:	(bad)  
  4153b5:	(bad)  
  4153b6:	cmp    ch,BYTE PTR [ecx+ecx*1]
  4153b9:	dec    esi
  4153ba:	(bad)  
  4153bb:	mov    ah,0xcd
  4153bd:	xchg   dh,cl
  4153bf:	or     ecx,esp
  4153c1:	or     eax,DWORD PTR [ebp+0x305f834]
  4153c7:	or     al,0xa5
  4153c9:	cmc    
  4153ca:	jmp    0x4153b7
  4153cc:	add    bh,BYTE PTR [edx]
  4153ce:	push   ecx
  4153d0:	mov    ds:0xabb44013,al
  4153d5:	xor    BYTE PTR [edi],ah
  4153d7:	(bad)  
  4153d8:	(bad)  
  4153d9:	jo     0x415408
  4153db:	cmp    eax,DWORD PTR [ebx]
  4153dd:	or     BYTE PTR [ebp-0x74af9cff],cl
  4153e3:	add    cl,dh
  4153e5:	cli    
  4153e6:	imul   eax,DWORD PTR [edx],0xffffe1dc
  4153ec:	test   BYTE PTR [ecx],dl
  4153ee:	shl    BYTE PTR [ebp+0x7c],0x74
  4153f2:	inc    ecx
  4153f3:	aam    0x76
  4153f5:	add    al,BYTE PTR [ecx]
  4153f7:	cmp    DWORD PTR [ecx+0x5a],eax
  4153fa:	jno    0x41540d
  4153fc:	add    DWORD PTR [ebx+edi*2-0x50],ebp
  415400:	les    eax,FWORD PTR ds:0xbd2f5e5b
  415406:	ret    0x4408
  415409:	mov    eax,0x6b51ebbd
  41540e:	jno    0x4153ec
  415410:	dec    ebx
  415411:	mov    eax,ds:0x5f41621
  415416:	out    0xf1,eax
  415418:	mov    edi,0x3f88e8c5
  41541d:	imul   edi,ebx,0x50
  415420:	dec    ebx
  415421:	add    ah,BYTE PTR [eax+ecx*1]
  415424:	popf   
  415425:	inc    ebp
  415426:	add    al,0xfd
  415428:	xchg   ecx,eax
  415429:	pop    es
  41542a:	cld    
  41542b:	cld    
  41542c:	mov    edi,edi
  41542e:	sti    
  41542f:	cld    
  415430:	mov    WORD PTR [edi-0x4e66ec68],fs
  415436:	inc    ecx
  415437:	add    BYTE PTR [esi-0xd077b9e],ch
  41543d:	cwde   
  41543e:	outs   dx,BYTE PTR ds:[esi]
  41543f:	rcr    bh,0x9f
  415442:	add    DWORD PTR [ebx+0x16],edx
  415445:	mov    BYTE PTR [esp+ebp*8+0x1e1ca900],al
  41544c:	cld    
  41544d:	popf   
  41544e:	in     al,dx
  41544f:	cs std 
  415451:	push   eax
  415452:	xchg   ebx,eax
  415453:	mov    WORD PTR [ebx],?
  415455:	mov    ecx,0xba0041ae
  41545a:	cdq    
  41545b:	or     DWORD PTR [ecx+0x40f28d5],ecx
  415461:	stos   BYTE PTR es:[edi],al
  415462:	fdivr  DWORD PTR [ebp-0x40]
  415465:	sub    DWORD PTR [ebx+0x429ac984],esp
  41546b:	mov    al,BYTE PTR [eax]
  41546d:	popf   
  41546e:	fwait
  41546f:	mov    WORD PTR [esi-0x6b],cs
  415472:	or     eax,DWORD PTR [edx]
  415474:	xchg   eax,edx
  415476:	iret   
  415477:	jge    0x415452
  415479:	icebp  
  41547a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547b:	mov    bl,BYTE PTR [ebx+0x75]
  41547e:	jmp    0xdb746243
  415483:	mov    DWORD PTR [ebx-0x6b],eax
  415486:	clc    
  415487:	or     eax,0x8d662810
  41548c:	push   0xffffff9d
  41548e:	imul   ebx,DWORD PTR [eax-0x146f6a8d],0xffffffb3
  415495:	scas   eax,DWORD PTR es:[edi]
  415496:	pop    ebx
  415497:	add    DWORD PTR [ecx+0x73bc2655],ecx
  41549d:	xchg   ecx,eax
  41549e:	add    ah,dh
  4154a0:	adc    DWORD PTR [ecx+0xaaca57d],ebx
  4154a6:	(bad)  
  4154a7:	(bad)  
  4154a8:	xchg   edi,eax
  4154a9:	and    edx,eax
  4154ab:	push   ebx
  4154ac:	or     eax,0xf3472400
  4154b1:	fdiv   QWORD PTR [edx-0x405465ea]
  4154b7:	test   DWORD PTR [edx+0x69ef0497],esp
  4154bd:	fwait
  4154be:	repnz adc eax,0x8e5ebef0
  4154c4:	mov    al,BYTE PTR [ebx]
  4154c6:	popf   
  4154c7:	add    al,BYTE PTR [edx-0x1672a5f9]
  4154cd:	add    al,0x9d
  4154cf:	add    bh,ah
  4154d1:	(bad)  
  4154d2:	loope  0x41551a
  4154d4:	jnp    0x41551e
  4154d6:	js     0x4154da
  4154d8:	out    0x96,eax
  4154da:	xor    esi,edx
  4154dc:	ins    DWORD PTR es:[edi],dx
  4154dd:	push   cs
  4154de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154df:	xchg   ecx,eax
  4154e0:	(bad)  
  4154e2:	test   eax,0x29c464b8
  4154e7:	add    eax,0x8498cb6a
  4154ec:	int3   
  4154ed:	xchg   edi,eax
  4154ee:	popf   
  4154ef:	push   ss
  4154f0:	lock xchg esi,eax
  4154f2:	push   cs
  4154f3:	(bad)  
  4154f4:	ds icebp 
  4154f6:	mov    esi,0xd803a6f8
  4154fb:	jnp    0x415527
  4154fd:	cmp    ebx,DWORD PTR [edx-0x3b]
  415500:	repz add ecx,esi
  415503:	jnp    0x415510
  415505:	xor    DWORD PTR [ecx-0x1],0xffffffd9
  415509:	ret    
  41550a:	in     eax,dx
  41550b:	xor    bl,BYTE PTR [ecx+ecx*2-0x5b]
  41550f:	xor    DWORD PTR [edi-0x148ffcd],edx
  415515:	imul   eax,DWORD PTR [ecx+0x49],0x33
  415519:	add    BYTE PTR [ecx+0x51fd903a],al
  41551f:	or     dl,BYTE PTR [eax+ecx*1]
  415522:	scas   al,BYTE PTR es:[edi]
  415523:	fst    QWORD PTR [esi+0x29ee8ff]
  415529:	lds    ebp,FWORD PTR [ecx+edi*1]
  41552c:	repz and al,0xe9
  41552f:	sahf   
  415530:	lds    eax,FWORD PTR [ebx-0x3b]
  415533:	push   ss
  415534:	repnz (bad) 
  415536:	call   0xdd154966
  41553b:	pop    esi
  41553c:	add    dh,ch
  41553e:	xchg   ecx,eax
  41553f:	test   DWORD PTR [edi+0x40],0x6dcb0
  415546:	xor    al,0x16
  415548:	lahf   
  415549:	dec    edi
  41554a:	add    ebx,DWORD PTR [ebp+0x655cbfd1]
  415550:	mov    cs,WORD PTR [edi+0x29]
  415553:	xchg   ecx,eax
  415554:	sbb    al,0x6
  415556:	jle    0x415505
  415558:	cli    
  415559:	xchg   BYTE PTR [edx*1-0x5282ec72],ch
  415560:	iret   
  415561:	call   FWORD PTR [ebp-0x1a]
  415564:	jmp    0xc512ff28
  415569:	add    al,0xe9
  41556b:	iret   
  41556c:	xor    esi,DWORD PTR [ecx]
  41556e:	xor    al,al
  415570:	inc    ecx
  415571:	add    BYTE PTR [ecx+edi*8],0xc3
  415575:	inc    ecx
  415576:	jmp    0x7376f37b
  41557b:	cld    
  41557c:	shr    BYTE PTR [edx+0x389eaac3],1
  415582:	std    
  415583:	cld    
  415584:	inc    edx
  415585:	hlt    
  415586:	aas    
  415587:	jmp    0x2ce920aa
  41558c:	fild   WORD PTR [edx]
  41558e:	add    BYTE PTR [ecx+edx*2+0x4b0079a7],dl
  415595:	jne    0x415592
  415597:	test   BYTE PTR [edi+edi*8+0xf],dh
  41559b:	(bad)  
  41559c:	dec    ecx
  41559d:	daa    
  41559e:	rol    DWORD PTR [ebx+0x44],0x19
  4155a2:	ss inc ecx
  4155a4:	xor    al,0x7b
  4155a6:	sbb    DWORD PTR [eax+0x560040f9],ebp
  4155ac:	repz sahf 
  4155ae:	in     eax,dx
  4155af:	adc    al,ah
  4155b1:	push   es
  4155b2:	mov    al,BYTE PTR [eax+ebx*4-0x6e]
  4155b6:	in     eax,0xce
  4155b8:	fnsave [ebx+edi*8-0x75]
  4155bc:	stc    
  4155bd:	push   0x11
  4155bf:	inc    eax
  4155c0:	add    al,0xd9
  4155c2:	add    eax,0x52d13c8b
  4155c7:	jmp    FWORD PTR [edx]
  4155c9:	fmul   QWORD PTR [edx+ebp*2]
  4155cc:	(bad)  
  4155cd:	fld    QWORD PTR [esi-0x789fdc18]
  4155d3:	clc    
  4155d4:	aaa    
  4155d5:	ja     0x4155d2
  4155d7:	je     0x415592
  4155d9:	cmp    ebx,0xb900ff
  4155df:	xor    bl,bl
  4155e1:	aas    
  4155e2:	mov    edi,0x2f41619
  4155e7:	push   ecx
  4155e8:	jmp    FWORD PTR [edx-0x23]
  4155eb:	cli    
  4155ec:	(bad)  
  4155ed:	push   ebx
  4155ee:	fcomp  DWORD PTR [eax-0x76]
  4155f1:	(bad)  
  4155f2:	retf   
  4155f3:	rol    DWORD PTR [esp+esi*2],0xdd
  4155f7:	xchg   ah,ch
  4155f9:	neg    DWORD PTR [edx+0x14]
  4155fc:	push   ebx
  4155fd:	ja     0x41564a
  4155ff:	push   esi
  415600:	cmp    BYTE PTR [ecx+0x1a],ah
  415603:	rol    DWORD PTR [ebx+0x74],0xfd
  415607:	xor    BYTE PTR [esi+0x3f4ddc],bh
  41560d:	popf   
  41560e:	dec    ebp
  41560f:	xchg   esp,eax
  415610:	adc    eax,DWORD PTR [ecx-0x76]
  415613:	inc    ecx
  415614:	add    BYTE PTR [ebp-0x213c965a],al
  41561a:	fwait
  41561b:	push   cs
  41561c:	sbb    al,BYTE PTR [ebp-0x76]
  41561f:	mov    edi,ebp
  415621:	xor    ch,BYTE PTR [eax]
  415623:	les    esi,FWORD PTR [esp+ecx*4+0x5c]
  415627:	(bad)  
  415628:	stos   DWORD PTR es:[edi],eax
  415629:	pop    eax
  41562a:	fld    DWORD PTR [ebx]
  41562c:	stos   BYTE PTR es:[edi],al
  41562d:	rcr    edx,cl
  41562f:	add    eax,esi
  415631:	cwde   
  415632:	cmp    DWORD PTR [esi+0x2b9a9d41],0xfffffffd
  415639:	test   al,0x4b
  41563b:	out    dx,eax
  41563c:	aas    
  41563d:	popf   
  41563e:	and    DWORD PTR [esi],edi
  415640:	or     BYTE PTR [eax],al
  415642:	dec    esi
  415643:	inc    ecx
  415644:	add    ch,al
  415646:	pop    edi
  415647:	bound  edx,QWORD PTR [ebp+edi*8-0x81193b3]
  41564e:	mov    al,0xdb
  415650:	add    eax,DWORD PTR [edi-0x77f8ca8]
  415656:	retf   0xfd8e
  415659:	xor    ch,bl
  41565b:	jo     0x415676
  41565d:	mov    DWORD PTR [eax+0x6f],esi
  415660:	out    dx,al
  415661:	aas    
  415662:	popf   
  415663:	hlt    
  415664:	cs push ecx
  415666:	sbb    BYTE PTR [edi-0x6b],dl
  415669:	dec    edi
  41566a:	dec    esi
  41566b:	push   ds
  41566c:	inc    esi
  41566d:	in     al,dx
  41566e:	in     al,dx
  41566f:	dec    eax
  415670:	xor    BYTE PTR [ebp+0x48019bab],bh
  415676:	repnz imul ecx,DWORD PTR [edx+0x3612955b],0xfffffffc
  41567e:	jp     0x41566d
  415680:	jg     0x41567a
  415682:	jb     0x4156da
  415684:	inc    eax
  415685:	std    
  415686:	nop
  415687:	add    bh,bl
  415689:	in     eax,dx
  41568a:	mov    ds:0x81f5dc02,al
  41568f:	add    ah,bh
  415691:	push   cs
  415692:	mov    edi,DWORD PTR [ecx-0x5c]
  415695:	xchg   edi,eax
  415696:	test   cl,al
  415698:	jnp    0x415681
  41569a:	cmp    bl,dl
  41569c:	popf   
  41569d:	xchg   esp,eax
  41569e:	cmp    BYTE PTR [ebx-0x54],bh
  4156a1:	or     esi,DWORD PTR [ecx+eax*8+0x73]
  4156a5:	loopne 0x4156a7
  4156a7:	int    0x31
  4156a9:	je     0x4156f4
  4156ab:	and    DWORD PTR [edx],esi
  4156ad:	ficomp WORD PTR [ecx]
  4156af:	sbb    DWORD PTR [ebp+0x316dfc5c],ecx
  4156b5:	ss xchg ebx,eax
  4156b7:	mov    cs,WORD PTR [edx-0x3de1453a]
  4156bd:	xor    edi,edi
  4156bf:	stc    
  4156c0:	push   ss
  4156c1:	fistp  WORD PTR [ebx-0x6c51d257]
  4156c7:	and    ch,BYTE PTR [edi]
  4156c9:	out    dx,eax
  4156ca:	xchg   edx,eax
  4156cb:	outs   dx,BYTE PTR ds:[esi]
  4156cc:	mov    bl,BYTE PTR [esi+0x26f4b6f9]
  4156d2:	add    al,0x24
  4156d4:	inc    edi
  4156d5:	fbstp  TBYTE PTR [edx]
  4156d7:	imul   ebp,DWORD PTR [ecx],0xffffffb0
  4156da:	(bad)  
  4156db:	cdq    
  4156dc:	add    dl,BYTE PTR [edi+edi*2]
  4156df:	leave  
  4156e0:	add    BYTE PTR [ebx+0x16344c00],0xd6
  4156e7:	jmp    0x6a8c:0xa08c8899
  4156ee:	sub    DWORD PTR [ebp+0x58ac6203],edx
  4156f4:	inc    esi
  4156f5:	push   ebx
  4156f6:	add    al,0x95
  4156f8:	add    ah,bh
  4156fa:	leave  
  4156fb:	fimul  WORD PTR [ebx-0x69116d19]
  415701:	add    BYTE PTR [esp+edx*4-0x76],ah
  415705:	call   0xfdcf03be
  41570a:	jb     0x41570c
  41570c:	mov    WORD PTR [edx-0x1f4ad67c],cs
  415712:	mov    ch,BYTE PTR [edx+ebp*1-0x617caacd]
  415719:	sbb    BYTE PTR [esi],ch
  41571b:	call   0x2de:0xd9ebf02f
  415722:	mov    ecx,edi
  415724:	sbb    ecx,DWORD PTR [ebp-0x73638b93]
  41572a:	inc    ebx
  41572b:	out    0x1e,al
  41572d:	or     ch,bh
  41572f:	jmp    0xfab0:0xeee9bcb0
  415736:	pop    ebp
  415737:	fs and al,0x17
  41573a:	or     BYTE PTR [esi],bl
  41573c:	and    DWORD PTR [edi+0x5e],ecx
  41573f:	mov    esi,0x1ffcd20f
  415744:	push   cs
  415745:	lock and ebx,ebx
  415748:	pop    esi
  415749:	add    cl,BYTE PTR [ecx+0x592cafae]
  41574f:	mov    al,0xe3
  415751:	das    
  415752:	mov    DWORD PTR [ebp+0x413b8289],eax
  415758:	aad    0x41
  41575a:	add    cl,ch
  41575c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41575d:	retf   0x3f55
  415760:	push   es
  415761:	rol    BYTE PTR [ecx-0x17],0x74
  415765:	lea    edx,[ebx]
  415767:	jge    0x415719
  415769:	retf   
  41576a:	jmp    FWORD PTR [eax-0x33]
  41576d:	arpl   bx,ax
  41576f:	stos   BYTE PTR es:[edi],al
  415770:	add    BYTE PTR [esi+0x36f37302],bl
  415776:	(bad)
  41577b:	rol    BYTE PTR [eax],0x40
  41577e:	xchg   esi,eax
  41577f:	les    eax,FWORD PTR ds:0x3fba28
  415785:	push   ds
  415786:	test   eax,0xfac2003e
  41578b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578c:	lds    esi,FWORD PTR [edi]
  41578e:	(bad)  
  41578f:	cld    
  415790:	push   ebp
  415791:	mov    ebx,0x412ed8a
  415796:	call   FWORD PTR [ebp-0x73]
  415799:	add    DWORD PTR [ebx+0x50],edi
  41579c:	inc    ecx
  41579e:	mov    ecx,DWORD PTR [eax-0x12d3bb]
  4157a4:	mov    BYTE PTR [ecx],0x7b
  4157a7:	xor    BYTE PTR [eax],al
  4157a9:	xor    al,0xff
  4157ab:	out    0x1d,eax
  4157ad:	cmp    al,0x71
  4157af:	sti    
  4157b0:	push   eax
  4157b1:	sti    
  4157b2:	repnz pop es
  4157b4:	call   DWORD PTR [ecx]
  4157b6:	ret    
  4157b7:	adc    DWORD PTR [eax-0xc],eax
  4157ba:	add    eax,0x74
  4157bd:	out    0xe6,al
  4157bf:	lahf   
  4157c0:	jbe    0x415786
  4157c2:	push   es
  4157c3:	sti    
  4157c4:	jne    0x4157be
  4157c6:	jno    0x4157d9
  4157c8:	or     al,0xc5
  4157ca:	add    BYTE PTR ds:[edx],dh
  4157cd:	xor    al,0x6d
  4157cf:	add    dh,BYTE PTR [eax+0x8c247c5]
  4157d5:	add    ah,al
  4157d7:	rol    DWORD PTR [esi+0x506237ec],cl
  4157dd:	push   0xfffd86b4
  4157e2:	or     al,0x77
  4157e4:	pop    ecx
  4157e5:	jmp    FWORD PTR [ebx]
  4157e7:	pop    es
  4157e8:	inc    ecx
  4157e9:	lock inc ecx
  4157eb:	(bad)  
  4157ec:	jno    0x4157fd
  4157ee:	into   
  4157ef:	xchg   ah,bh
  4157f1:	adc    eax,0x3d8ca0
  4157f6:	popf   
  4157f7:	in     eax,dx
  4157f8:	ret    
  4157f9:	out    0xa,eax
  4157fb:	fwait
  4157fc:	add    DWORD PTR [eax],eax
  4157fe:	out    dx,al
  4157ff:	mov    ecx,es
  415801:	push   esi
  415802:	rcl    BYTE PTR [esi],cl
  415804:	or     eax,0x89575bf7
  415809:	add    BYTE PTR [edi],dh
  41580b:	and    eax,0x5c160845
  415810:	stc    
  415811:	xchg   al,ah
  415813:	(bad)  
  415814:	jp     0x415859
  415816:	mov    eax,ds:0x14084424
  41581b:	pop    edi
  41581c:	mov    eax,ds:0xc8a7d889
  415821:	inc    ebx
  415822:	inc    ebp
  415823:	sahf   
  415824:	add    DWORD PTR [eax],eax
  415826:	popf   
  415827:	push   ss
  415828:	les    esi,FWORD PTR [edi+edx*4+0x22]
  41582c:	inc    ebp
  41582d:	in     al,0x5a
  41582f:	xlat   BYTE PTR ds:[ebx]
  415830:	fwait
  415831:	add    DWORD PTR [ebp+0x7881019b],ebx
  415837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415838:	add    esi,eax
  41583a:	add    BYTE PTR [eax-0x48],ah
  41583d:	add    edi,esp
  41583f:	loopne 0x4157dc
  415841:	add    DWORD PTR [eax],eax
  415843:	and    BYTE PTR [ebp+edx*1+0x14],bl
  415847:	push   ds
  415848:	push   esp
  415849:	add    cl,BYTE PTR ds:0x15220
  41584f:	popf   
  415850:	adc    al,0x16
  415852:	or     al,0x26
  415854:	(bad)  
  415855:	sti    
  415856:	mov    dl,BYTE PTR [eax+0x72]
  415859:	pushf  
  41585a:	pop    es
  41585b:	push   ss
  41585c:	out    dx,eax
  41585d:	sti    
  41585e:	mov    BYTE PTR [eax-0x71],ah
  415861:	jle    0x4158de
  415863:	mov    ch,0x16
  415865:	inc    esi
  415866:	mov    al,0x4d
  415868:	adc    BYTE PTR [edi],dl
  41586a:	or     BYTE PTR [edx-0x7702fa6f],ch
  415870:	add    al,BYTE PTR [edi-0xa]
  415873:	fiadd  DWORD PTR [edx]
  415875:	fs ret 
  415877:	mov    al,ds:0x9d034c7f
  41587c:	add    dl,BYTE PTR [ebp+0x46]
  41587f:	dec    ebp
  415880:	add    edi,DWORD PTR [ebx+0x733f2420]
  415886:	xchg   BYTE PTR [ebp+0xe],bl
  415889:	stos   BYTE PTR es:[edi],al
  41588a:	jp     0x41586a
  41588c:	mov    es,WORD PTR [eax-0x4d]
  41588f:	popf   
  415890:	add    ah,bh
  415892:	jl     0x41587a
  415894:	jmp    0x261:0xe6c9ba63
  41589b:	push   ss
  41589c:	das    
  41589d:	sti    
  41589e:	xor    al,0x0
  4158a0:	inc    eax
  4158a1:	maskmovq mm6,(bad)
  4158a2:	div    DWORD PTR [ebx]
  4158a4:	ror    DWORD PTR [ecx-0x6a27829],cl
  4158aa:	push   0x57
  4158ac:	popf   
  4158ad:	add    ah,bh
  4158af:	jl     0x41588f
  4158b1:	xchg   esi,eax
  4158b2:	ins    BYTE PTR es:[edi],dx
  4158b3:	les    ebx,FWORD PTR [ebx-0x56e62216]
  4158b9:	jge    0x4158f7
  4158bb:	xchg   esp,eax
  4158bc:	or     BYTE PTR [edi],cl
  4158be:	idiv   DWORD PTR [edx-0x2c]
  4158c1:	cdq    
  4158c2:	(bad)  
  4158c3:	mov    bh,al
  4158c5:	mov    BYTE PTR [ebx-0x3c],ah
  4158c8:	mov    al,ds:0x9d045c7e
  4158cd:	add    ah,BYTE PTR [edx+0x6]
  4158d0:	jne    0x4158d4
  4158d2:	out    dx,eax
  4158d3:	add    ebx,DWORD PTR [ebp+0x24941489]
  4158d9:	mov    eax,0x7ba13496
  4158de:	and    al,0xa0
  4158e0:	push   ds
  4158e1:	ret    0x5f06
  4158e4:	xor    dh,bh
  4158e6:	jge    0x4158e1
  4158e8:	mov    ?,eax
  4158ea:	jmp    FWORD PTR [eax]
  4158ec:	mov    eax,ds:0x9ec630cd
  4158f1:	add    dh,BYTE PTR [ebx-0x27]
  4158f4:	xor    BYTE PTR [eax+esi*4+0x9],al
  4158f8:	mov    ch,0xeb
  4158fa:	mov    BYTE PTR [esi+eax*2+0x7d4c084],ch
  415901:	retf   
  415902:	add    al,0xbc
  415904:	add    BYTE PTR [ebx+0x1a],bh
  415907:	(bad)  
  415908:	cmp    eax,0xdcfcfe8e
  41590d:	push   es
  41590e:	hlt    
  41590f:	aas    
  415910:	jmp    0xb9b51c2a
  415915:	pusha  
  415916:	(bad)  
  415917:	(bad)  
  415918:	push   0x9bff8aac
  41591d:	mov    al,ds:0x98107b82
  415922:	push   cs
  415923:	cmp    eax,DWORD PTR [esi]
  415925:	xchg   esp,eax
  415926:	repnz mov ah,BYTE PTR [edx+eax*1+0x1b99001d]
  41592e:	adc    al,0xe8
  415930:	out    dx,al
  415931:	and    eax,0xa1291254
  415936:	retf   
  415937:	add    eax,ebp
  415939:	sahf   
  41593a:	add    cl,BYTE PTR ds:0xfd85a06c
  415940:	into   
  415941:	fild   DWORD PTR [ebx-0xc]
  415944:	xor    eax,0xd2fd8802
  415949:	pop    es
  41594a:	rol    esi,cl
  41594c:	push   0x16
  41594e:	add    eax,0x3fd9540d
  415953:	jg     0x4158dd
  415955:	or     eax,0x1fe90002
  41595a:	dec    eax
  41595b:	push   es
  41595c:	pusha  
  41595d:	pop    ebp
  41595e:	mov    gs,ecx
  415960:	in     eax,0xd8
  415962:	inc    ebx
  415963:	std    
  415964:	add    ch,al
  415966:	js     0x4159d9
  415968:	lock add BYTE PTR [edi+edx*1],cl
  41596c:	pop    esp
  41596d:	push   DWORD PTR [ebx]
  41596f:	test   BYTE PTR [ecx-0xc],bh
  415972:	mov    ah,0xd8
  415974:	pop    ebp
  415975:	pop    ebx
  415976:	js     0x4158fe
  415978:	cld    
  415979:	jne    0x415963
  41597b:	js     0x41598e
  41597d:	and    al,0x8a
  41597f:	inc    ebx
  415980:	add    BYTE PTR [edx-0x3d3a87c7],cl
  415986:	pop    eax
  415987:	add    edx,DWORD PTR [esi-0x75]
  41598a:	imul   ebp,DWORD PTR [edi],0xd0744014
  415990:	imul   eax,DWORD PTR [ecx],0x1423efb3
  415996:	scas   eax,DWORD PTR es:[edi]
  415997:	xchg   ecx,eax
  415998:	mov    BYTE PTR [eax+ebx*2-0x79],dl
  41599c:	mov    bh,cl
  41599e:	pushf  
  41599f:	dec    esp
  4159a0:	out    0x0,eax
  4159a2:	xor    al,0x7f
  4159a4:	shl    BYTE PTR [edi+ebp*1-0x17],0xfe
  4159a9:	push   esi
  4159aa:	xor    ecx,DWORD PTR [esi-0x79]
  4159ad:	clc    
  4159ae:	mov    ecx,0x13e67178
  4159b3:	aad    0xc1
  4159b5:	or     BYTE PTR [eax+edx*8],al
  4159b8:	xchg   ah,ch
  4159ba:	xchg   DWORD PTR [edx-0x8],ebx
  4159bd:	and    eax,0xffffff89
  4159c0:	push   eax
  4159c1:	push   esi
  4159c2:	retf   
  4159c3:	jne    0x415a36
  4159c5:	or     al,0x6f
  4159c7:	je     0x4159c4
  4159c9:	jne    0x4159b7
  4159cb:	or     esi,DWORD PTR [esp+0x0]
  4159cf:	cwde   
  4159d0:	or     ecx,DWORD PTR [esp-0x34]
  4159d4:	jne    0x4159e7
  4159d6:	clc    
  4159d7:	xlat   BYTE PTR ds:[ebx]
  4159d8:	inc    edx
  4159d9:	add    BYTE PTR [ebx+0xfd77edc],cl
  4159df:	popf   
  4159e0:	adc    eax,0x999d0077
  4159e5:	cld    
  4159e6:	mov    ah,0x68
  4159e8:	xchg   ecx,eax
  4159e9:	jle    0x415a2f
  4159eb:	jns    0x41598e
  4159ed:	xor    ebp,edi
  4159ef:	xor    DWORD PTR [ebp-0x2215f30b],esi
  4159f5:	jmp    FWORD PTR [ecx-0x61]
  4159f8:	fisub  DWORD PTR [ebx+0x33daa610]
  4159fe:	push   0xffffff9d
  415a00:	ret    
  415a01:	test   DWORD PTR [eax],eax
  415a03:	popf   
  415a04:	fwait
  415a05:	xor    ch,bh
  415a07:	nop
  415a08:	xchg   edi,eax
  415a09:	cmc    
  415a0a:	aas    
  415a0b:	popf   
  415a0c:	push   ds
  415a0d:	les    esi,FWORD PTR [ebx-0x5f]
  415a10:	mov    BYTE PTR [eax+0x4820c1e9],ch
  415a16:	and    al,0xb5
  415a18:	sbb    BYTE PTR [ebp+edi*8+0x337856c8],cl
  415a1f:	dec    ecx
  415a20:	mov    DWORD PTR [ecx+0x0],eax
  415a23:	mov    bh,0xeb
  415a25:	cs xchg ecx,ebx
  415a28:	mov    bh,0xed
  415a2a:	cld    
  415a2b:	dec    ebx
  415a2c:	adc    ebp,ecx
  415a2e:	dec    DWORD PTR [esi+0xb015b]
  415a34:	popf   
  415a35:	fwait
  415a36:	add    DWORD PTR [eax],ecx
  415a38:	ins    DWORD PTR es:[edi],dx
  415a39:	xor    DWORD PTR [ecx+edx*2+0x738c4d12],edx
  415a40:	cdq    
  415a41:	and    BYTE PTR ds:0x16b4bd24,dh
  415a47:	or     BYTE PTR [esi],ah
  415a49:	shl    bh,1
  415a4b:	pop    ss
  415a4c:	add    eax,0xeafd8b33
  415a51:	inc    ecx
  415a52:	xchg   esp,eax
  415a53:	std    
  415a54:	imul   edi,edi,0x2f588eb
  415a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5b:	mov    ch,0x7e
  415a5d:	test   DWORD PTR [esi+0x132d08c],ebx
  415a63:	xchg   esp,eax
  415a64:	ror    BYTE PTR [esi],0xc3
  415a67:	out    dx,eax
  415a68:	mov    ecx,0x1e0592ad
  415a6d:	(bad)  
  415a6e:	repz add DWORD PTR [edx],esp
  415a71:	std    
  415a72:	adc    eax,0x12c2142e
  415a77:	jns    0x415af7
  415a79:	daa    
  415a7a:	sub    ebx,edi
  415a7c:	xchg   edx,eax
  415a7d:	xor    BYTE PTR [ebx+edi*1-0x74],ch
  415a81:	sub    al,0xbe
  415a83:	or     BYTE PTR [edx-0x53c22a04],0x8c
  415a8a:	stc    
  415a8b:	test   al,0x26
  415a8d:	cmp    bh,BYTE PTR [esi]
  415a8f:	cwde   
  415a90:	mov    ebx,0x92e7ab79
  415a95:	js     0x415a7a
  415a97:	add    al,BYTE PTR [eax]
  415a99:	mov    edx,edx
  415a9b:	loop   0x415a97
  415a9d:	leave  
  415a9e:	retf   0xa862
  415aa1:	shr    esi,1
  415aa3:	call   0x8d3cdc6b
  415aa8:	jmp    FWORD PTR [ecx-0x3895d8bc]
  415aae:	clc    
  415aaf:	popf   
  415ab0:	xchg   esp,eax
  415ab1:	sub    BYTE PTR [edi-0x57],dh
  415ab4:	add    bl,BYTE PTR [ecx]
  415ab6:	test   eax,0xf4dd4dde
  415abb:	jp     0x415a84
  415abd:	pushf  
  415abe:	xchg   edx,eax
  415abf:	xor    BYTE PTR [edi-0x46a97aee],al
  415ac5:	int3   
  415ac6:	mov    al,0x41
  415ac8:	(bad)  
  415ac9:	and    eax,0x29320bc
  415ace:	jns    0x415a79
  415ad0:	xchg   ebx,eax
  415ad1:	(bad)
  415ad4:	test   al,0x59
  415ad6:	fwait
  415ad7:	add    bh,bl
  415ad9:	fisub  WORD PTR [esi]
  415adb:	pop    esi
  415adc:	inc    edx
  415add:	(bad)  
  415adf:	call   DWORD PTR [edx]
  415ae1:	shr    DWORD PTR [ebx],1
  415ae3:	cmp    DWORD PTR [eax-0x56cefc56],ebp
  415ae9:	loop   0x415b1d
  415aeb:	mov    esp,ebp
  415aed:	lahf   
  415aee:	js     0x415af5
  415af0:	mov    ebp,0xc50a10d3
  415af5:	ror    al,cl
  415af7:	add    edi,esi
  415af9:	pushf  
  415afa:	sar    DWORD PTR [edi+0x545b00c2],1
  415b00:	or     eax,0xff0e05b7
  415b05:	inc    ecx
  415b06:	cmp    BYTE PTR [edx+0x6],0xd
  415b0a:	push   ecx
  415b0b:	adc    al,BYTE PTR [edi]
  415b0d:	add    eax,0xa7030f60
  415b12:	pop    ebx
  415b13:	xchg   ebx,eax
  415b14:	jb     0x415b4e
  415b16:	push   edx
  415b17:	xchg   ebx,eax
  415b18:	je     0x415aaa
  415b1a:	push   ds
  415b1b:	lds    ebx,FWORD PTR [ebp-0x64]
  415b1e:	xor    ch,0xb5
  415b21:	sub    dl,cl
  415b23:	mov    ah,0x29
  415b25:	es push edx
  415b27:	mov    esp,0x9a6fa073
  415b2c:	push   eax
  415b2d:	push   es
  415b2e:	xchg   BYTE PTR es:[ecx+ebp*1+0x6245c58d],al
  415b36:	pop    edi
  415b37:	call   0xec74:0x25e76906
  415b3e:	pop    esp
  415b3f:	leave  
  415b40:	lock pop ebx
  415b42:	das    
  415b43:	retf   0x5df0
  415b46:	in     eax,0x7a
  415b48:	into   
  415b49:	add    bh,BYTE PTR [ecx]
  415b4b:	xor    bh,0x0
  415b4e:	push   es
  415b4f:	out    dx,al
  415b50:	push   ds
  415b51:	inc    esi
  415b52:	outs   dx,DWORD PTR ds:[esi]
  415b53:	dec    ecx
  415b54:	out    0xb,eax
  415b56:	jle    0x415b59
  415b58:	cmp    al,0x30
  415b5a:	xchg   esi,eax
  415b5b:	test   DWORD PTR [ecx],edi
  415b5d:	cmp    DWORD PTR [ebx+0x3b4601],esi
  415b63:	daa    
  415b64:	out    dx,al
  415b65:	in     al,dx
  415b66:	mov    esi,edx
  415b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b69:	mov    esi,0x6f840c83
  415b6e:	push   es
  415b6f:	das    
  415b70:	shl    DWORD PTR [edi],0xc7
  415b73:	paddd  mm5,QWORD PTR [esi]
  415b76:	ror    BYTE PTR [edx-0xaa412d],0x6b
  415b7d:	jg     0x415b6b
  415b7f:	mov    al,0xcb
  415b81:	push   ebp
  415b82:	mov    esp,esp
  415b84:	add    al,0x41
  415b86:	or     BYTE PTR [ebx+0x6],al
  415b89:	inc    ecx
  415b8a:	clc    
  415b8b:	fist   WORD PTR [ebx+0x4dc7d88]
  415b91:	(bad)  
  415b92:	call   0x3cd3cf
  415b97:	call   DWORD PTR [edi-0x7f]
  415b9a:	fist   DWORD PTR [ecx]
  415b9c:	(bad)  
  415b9d:	cld    
  415b9e:	inc    ebp
  415b9f:	jl     0x415b6a
  415ba1:	jle    0x415ba1
  415ba3:	inc    esp
  415ba4:	lock loop 0x415bda
  415ba7:	je     0x415b81
  415ba9:	pop    ebp
  415baa:	pop    ebx
  415bab:	jge    0x415b6a
  415bad:	or     BYTE PTR [eax],al
  415baf:	dec    edi
  415bb0:	ins    BYTE PTR es:[edi],dx
  415bb1:	cmp    BYTE PTR [ebp+0x38],0xff
  415bb5:	test   BYTE PTR [ebp+0x28],dh
  415bb8:	cmp    al,cl
  415bba:	add    BYTE PTR [edi+edi*8],al
  415bbd:	jo     0x415bc3
  415bbf:	mov    edi,0x8fe3726e
  415bc4:	retf   
  415bc5:	test   DWORD PTR [ebx-0x7c96300],0xfaed29ff
  415bcf:	ss pop eax
  415bd1:	mov    ebp,0xde140116
  415bd6:	xchg   DWORD PTR [ecx+0x76044d60],eax
  415bdc:	mov    edx,0x260c3520
  415be1:	(bad)  
  415be2:	xchg   DWORD PTR [ecx],ebp
  415be4:	fcom   QWORD PTR ds:0x70b52ec8
  415bea:	mov    bh,ch
  415bec:	mov    edx,0xa673c41d
  415bf1:	jl     0x415c30
  415bf3:	or     al,0x16
  415bf5:	fdivrp st(7),st
  415bf7:	cmp    BYTE PTR [eax+0xd],bl
  415bfa:	push   ss
  415bfb:	fistp  WORD PTR [edx-0x7aaa0a89]
  415c01:	jl     0x415c30
  415c03:	add    BYTE PTR [ebp+0x16f80ce0],bl
  415c09:	aam    0x7a
  415c0b:	rol    DWORD PTR [ebp+0x72fd6f46],0x56
  415c12:	inc    DWORD PTR [esi+0x73753fe0]
  415c18:	push   ecx
  415c19:	xchg   esp,eax
  415c1a:	cdq    
  415c1b:	cs or  al,0x6c
  415c1e:	add    DWORD PTR [ecx],esi
  415c20:	outs   dx,DWORD PTR ds:[esi]
  415c21:	in     al,0x4b
  415c23:	jbe    0x415c02
  415c25:	imul   edi,DWORD PTR [eax+ecx*8-0x7a],0x15
  415c2a:	test   DWORD PTR [edx+0x0],0xfc2e536a
  415c31:	int3   
  415c32:	js     0x415c72
  415c34:	inc    ebx
  415c35:	sub    DWORD PTR [esp+edi*2+0x339dcdc6],ebx
  415c3c:	push   0x16be7
  415c41:	add    eax,0x9d4ccd03
  415c46:	add    ch,BYTE PTR [edx-0x41]
  415c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c4a:	fnstcw WORD PTR [esi-0x317ead42]
  415c50:	mov    BYTE PTR [esi+0x7e],ch
  415c53:	iret   
  415c54:	inc    esi
  415c55:	push   edx
  415c56:	cmp    DWORD PTR [esi+0x20e5e7c],0xaa05a53f
  415c60:	add    al,0x5e
  415c62:	jp     0x415bf4
  415c64:	aas    
  415c65:	enter  0x9e81,0x2e
  415c69:	adc    al,0x6f
  415c6b:	push   0xe7045d97
  415c70:	add    ecx,DWORD PTR [ebx-0x27]
  415c73:	push   cs
  415c74:	scas   al,BYTE PTR es:[edi]
  415c75:	popf   
  415c76:	add    ah,bh
  415c78:	sbb    eax,0x50cfc19d
  415c7d:	fadd   QWORD PTR [edx]
  415c7f:	push   ss
  415c80:	mov    DWORD PTR [esi-0x62bc02ca],ebp
  415c86:	test   DWORD PTR [ebx],esp
  415c88:	div    esp
  415c8a:	add    al,0xbf
  415c8c:	jns    0x415cbe
  415c8e:	(bad)
  415c91:	add    BYTE PTR [edx-0x7d0ab0dd],ch
  415c97:	mov    eax,0x8f6088c5
  415c9c:	jl     0x415c63
  415c9e:	push   esi
  415c9f:	sub    DWORD PTR [esi],0xe7a1979b
  415ca5:	add    ebx,DWORD PTR [esi-0x62fc17ac]
  415cab:	in     al,dx
  415cac:	cli    
  415cad:	xor    eax,edi
  415caf:	add    bl,BYTE PTR [esi+ecx*1-0x13]
  415cb3:	test   BYTE PTR [edi],ch
  415cb5:	mov    BYTE PTR ds:0x20885aa4,dh
  415cbb:	xchg   DWORD PTR [eax],eax
  415cbd:	sub    DWORD PTR [ebx+eiz*1-0x45b98b75],esp
  415cc4:	mov    ch,0xe9
  415cc6:	sahf   
  415cc7:	add    ch,al
  415cc9:	imul   eax,DWORD PTR gs:[edx],0xb25c6400
  415cd0:	push   eax
  415cd1:	bound  esi,QWORD PTR [ebx]
  415cd3:	rcl    BYTE PTR [ecx+edx*8+0x52],cl
  415cd7:	sar    esi,1
  415cd9:	call   0x5c4e9efb
  415cde:	loope  0x415c65
  415ce0:	shl    BYTE PTR [ecx+edx*8],0x31
  415ce4:	ror    BYTE PTR [edi],0x3e
  415ce7:	sbb    dh,BYTE PTR [ebp-0x492066d6]
  415ced:	xchg   DWORD PTR [eax+0x1c5c0002],esp
  415cf3:	inc    esp
  415cf4:	sti    
  415cf5:	xchg   BYTE PTR [eax],al
  415cf7:	and    ah,al
  415cf9:	(bad)
  415cfc:	ret    0xfc46
  415cff:	sub    DWORD PTR [ebx-0x75a16001],esi
  415d05:	push   es
  415d06:	ins    BYTE PTR es:[edi],dx
  415d07:	popa   
  415d08:	test   DWORD PTR [esi],0x89c326b9
  415d0e:	call   0xe967deb1
  415d13:	pop    edi
  415d14:	cmp    DWORD PTR [ebx],0xffffff81
  415d17:	pop    esp
  415d18:	ret    0xe8ff
  415d1b:	mov    al,0xf3
  415d1d:	xor    BYTE PTR [edi+0x9],dh
  415d20:	inc    esp
  415d21:	inc    ecx
  415d22:	jmp    0x1554daa7
  415d27:	dec    edi
  415d28:	inc    eax
  415d29:	add    BYTE PTR [ecx+0x54],ch
  415d2c:	mov    eax,0x29eaac3
  415d31:	jae    0x415d29
  415d33:	push   ss
  415d34:	xor    bh,ch
  415d36:	add    BYTE PTR [ebx-0x573f7b79],ah
  415d3c:	jne    0x415cbe
  415d3e:	and    eax,0x3f41d0
  415d43:	add    al,0xbe
  415d45:	add    DWORD PTR [eax+0xffc539],edi
  415d4b:	retf   0x1187
  415d4e:	lock test bl,0xff
  415d52:	addr16 push edx
  415d54:	sar    BYTE PTR [esi],1
  415d56:	add    BYTE PTR [esi+0x6],cl
  415d59:	push   0xc5100058
  415d5e:	(bad)  
  415d5f:	(bad)  
  415d60:	stc    
  415d61:	sub    ecx,DWORD PTR ds:0xeffcc440
  415d67:	test   DWORD PTR [edx],ebp
  415d69:	adc    BYTE PTR [edi],dl
  415d6b:	push   0x23
  415d6d:	cs sti 
  415d6f:	adc    eax,0x3d74b4
  415d74:	cmp    DWORD PTR [ebx+0x74],eax
  415d77:	pop    ds
  415d78:	loope  0x415cfd
  415d7a:	add    BYTE PTR [eax],al
  415d7c:	mov    ah,0xf
  415d7e:	sbb    BYTE PTR [esi+0x13],dl
  415d81:	jae    0x415d20
  415d83:	adc    al,ah
  415d85:	push   es
  415d86:	das    
  415d87:	shl    BYTE PTR [edx-0x7e],0xc0
  415d8b:	je     0x415dff
  415d8d:	cld    
  415d8e:	dec    ebx
  415d8f:	and    al,0x88
  415d91:	(bad)  
  415d92:	cld    
  415d93:	scas   eax,DWORD PTR es:[edi]
  415d94:	test   DWORD PTR [esi+eax*1-0x16634575],ebx
  415d9b:	xor    dh,BYTE PTR [ecx+eax*2-0x3c6fffc]
  415da2:	jmp    0x415d27
  415da4:	nop
  415da5:	jae    0x415e24
  415da7:	cmp    eax,0x3f42bc
  415dac:	xor    al,0x2d
  415dae:	push   ebx
  415daf:	jne    0x415d4e
  415db1:	pop    esp
  415db2:	inc    ebx
  415db3:	fcomp  DWORD PTR [eax-0x54]
  415db6:	add    DWORD PTR [esi+0x2a],edx
  415db9:	pop    esi
  415dba:	xchg   ebp,eax
  415dbb:	adc    bl,ch
  415dbd:	imul   eax,DWORD PTR [ecx+0x2e55003b],0xf69d0042
  415dc7:	in     eax,dx
  415dc8:	out    0x3f,eax
  415dca:	addr16 cmp ebp,0x19
  415dce:	test   eax,0xe1e0e10
  415dd3:	dec    eax
  415dd4:	ret    
  415dd5:	pop    esi
  415dd6:	imul   eax,DWORD PTR [ecx],0xbd81a0c6
  415ddc:	inc    ecx
  415ddd:	popf   
  415dde:	push   0x2b
  415de0:	std    
  415de1:	mov    al,0xb9
  415de3:	repnz aas 
  415de5:	popf   
  415de6:	ret    
  415de7:	add    DWORD PTR [eax+0x18],ebx
  415dea:	push   ds
  415deb:	xchg   esp,eax
  415dec:	call   0xfdc472bf
  415df1:	es cs cld 
  415df4:	add    cl,BYTE PTR ds:0x35000169
  415dfa:	imul   eax,DWORD PTR [edx],0x0
  415dfd:	popf   
  415dfe:	sbb    DWORD PTR [edi-0x3a],esi
  415e01:	test   DWORD PTR [ecx],edx
  415e03:	or     eax,0x292fd
  415e08:	mov    esp,eax
  415e0a:	ja     0x415e3d
  415e0c:	mov    DWORD PTR [ebx-0x2c],ebx
  415e0f:	xor    eax,0x74d57a73
  415e14:	jnp    0x415e87
  415e16:	loope  0x415dd5
  415e18:	call   0xfdc61da0
  415e1d:	not    DWORD PTR [edi-0x7c]
  415e20:	jae    0x415dcf
  415e22:	xor    al,0xd
  415e24:	cld    
  415e25:	add    BYTE PTR [edx+0x57],dl
  415e28:	xor    eax,0xe702dd16
  415e2d:	sbb    BYTE PTR [ecx+0xf],0x72
  415e31:	mov    esi,0x849c0245
  415e36:	xor    dh,bl
  415e38:	lods   al,BYTE PTR ds:[esi]
  415e39:	mov    edx,0x2ee70f5f
  415e3e:	adc    al,0x6f
  415e40:	push   0xe7066198
  415e45:	add    ebx,DWORD PTR ds:0x5c545740
  415e4b:	add    ch,al
  415e4d:	xor    BYTE PTR [ebx-0x2b],ch
  415e50:	jno    0x415dfd
  415e52:	jo     0x415e59
  415e54:	sbb    esp,eax
  415e56:	cli    
  415e57:	pop    ss
  415e58:	call   0x7cd0fb60
  415e5d:	mov    bl,0xe6
  415e5f:	jge    0x415e1f
  415e61:	fwait
  415e62:	pop    ds
  415e63:	mov    al,ds:0xc82603e7
  415e68:	mov    ds:0xeef7c833,al
  415e6d:	js     0x415e4a
  415e6f:	ror    BYTE PTR [esi-0x6982462c],cl
  415e75:	jle    0x415e4b
  415e77:	idiv   DWORD PTR [ebx+0x17465e76]
  415e7d:	sbb    al,0x85
  415e7f:	mov    ch,0x2a
  415e81:	add    al,0x5
  415e83:	add    al,0xe7
  415e85:	add    ebx,DWORD PTR ds:0xbd47d
  415e8b:	lods   al,BYTE PTR ds:[esi]
  415e8c:	ret    0x8ce6
  415e8f:	sbb    BYTE PTR gs:[edi],ah
  415e92:	test   DWORD PTR [ebp-0x48],ebx
  415e95:	inc    ebp
  415e96:	add    bl,BYTE PTR [ebp+0x63b56202]
  415e9c:	add    esp,edi
  415e9e:	inc    edx
  415e9f:	xlat   BYTE PTR ds:[ebx]
  415ea0:	idiv   DWORD PTR [edi]
  415ea2:	call   0x839e:0xe9000267
  415ea9:	mov    ds:0xfd7f2221,eax
  415eae:	jmp    0x1fa1e07e
  415eb3:	and    DWORD PTR [edi+0x50],edi
  415eb6:	fs mov bl,0x4a
  415eb9:	cld    
  415eba:	push   cs
  415ebb:	and    DWORD PTR [edx-0x73],ebp
  415ebe:	inc    edi
  415ebf:	sahf   
  415ec0:	add    cl,BYTE PTR [ecx-0x2e75ed8c]
  415ec6:	fs xchg ebx,eax
  415ec8:	dec    edx
  415ec9:	cld    
  415eca:	out    dx,al
  415ecb:	push   ds
  415ecc:	push   0xffffffcb
  415ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ecf:	cdq    
  415ed0:	add    bh,BYTE PTR [edi-0x1e]
  415ed3:	mov    eax,ds:0xf4e9004a
  415ed8:	jmp    FWORD PTR [ecx-0x16]
  415edb:	jmp    FWORD PTR [ecx+0x5b]
  415ede:	cli    
  415edf:	push   ecx
  415ee0:	cmp    ecx,0xffffffe5
  415ee3:	scas   eax,DWORD PTR es:[edi]
  415ee4:	xchg   ecx,eax
  415ee5:	mov    edi,0x88dc9b43
  415eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eeb:	mov    ebx,0xa82a7c
  415ef0:	xor    DWORD PTR [edx],ecx
  415ef2:	add    al,ch
  415ef4:	sahf   
  415ef5:	movzx  edx,BYTE PTR [ecx-0x23]
  415ef9:	repz aas 
  415efb:	jmp    0xfc40de23
  415f00:	mov    WORD PTR [ebx-0xf],ax
  415f04:	outs   dx,BYTE PTR ds:[esi]
  415f05:	mov    DWORD PTR [ebx-0x281ed57],eax
  415f0b:	sbb    DWORD PTR [edx],ebx
  415f0d:	inc    edx
  415f0e:	mov    esp,eax
  415f10:	xchg   edx,eax
  415f11:	xor    DWORD PTR [ebx-0x28205d7],0x41
  415f18:	xchg   edx,eax
  415f19:	mov    ebp,0x731be900
  415f1e:	add    DWORD PTR [eax],0xffffffa2
  415f21:	jns    0x415f3d
  415f23:	mov    ecx,0x5ea
  415f28:	mov    ecx,0x7bfdd089
  415f2d:	jg     0x415ef5
  415f2f:	add    BYTE PTR [eax+eax*2],dh
  415f32:	inc    esi
  415f33:	jne    0x415fb2
  415f35:	in     eax,dx
  415f36:	sbb    eax,0x877f8bff
  415f3b:	jne    0x415f85
  415f3d:	(bad)  
  415f3e:	pop    ecx
  415f3f:	or     BYTE PTR [ebx+0x418d0579],bl
  415f45:	les    edx,FWORD PTR [ebp+0x57]
  415f48:	xor    al,0x68
  415f4a:	adc    eax,0xe80037b7
  415f4f:	xchg   esp,eax
  415f50:	mov    ah,0x5
  415f52:	add    BYTE PTR [edx+0x713cdc00],cl
  415f58:	or     al,0x50
  415f5a:	or     BYTE PTR [esi-0x18],dl
  415f5d:	ss pop edx
  415f5f:	cld    
  415f60:	call   FWORD PTR ds:0xc4fffcf2
  415f66:	xchg   edx,eax
  415f67:	adc    eax,0xc6fb8109
  415f6d:	mov    ah,0xff
  415f6f:	aas    
  415f70:	dec    ecx
  415f71:	mov    eax,ds:0x7bc389fd
  415f76:	pusha  
  415f77:	pop    eax
  415f78:	leave  
  415f79:	push   es
  415f7a:	or     BYTE PTR [eax],al
  415f7c:	push   ebp
  415f7d:	aas    
  415f7e:	jmp    0x415ffe
  415f80:	in     al,0x1c
  415f82:	xchg   esp,ebp
  415f84:	dec    esp
  415f85:	cmp    bh,0xff
  415f88:	push   edx
  415f89:	mov    dl,0x57
  415f8b:	mov    dh,BYTE PTR [eax+eiz*2+0x74fffe5f]
  415f92:	out    0x55,eax
  415f94:	pushf  
  415f95:	test   bh,bh
  415f97:	mov    BYTE PTR [ebp+ebx*4+0xd],al
  415f9b:	and    BYTE PTR [eax+0x6a],dl
  415f9e:	push   esi
  415f9f:	or     DWORD PTR [ecx+0x269995b],ecx
  415fa5:	pop    ebx
  415fa6:	cmp    al,0x82
  415fa8:	mov    esp,ecx
  415faa:	or     eax,0x6ab74f14
  415faf:	ss fldz 
  415fb2:	loope  0x415fb7
  415fb4:	add    BYTE PTR [ebp+0x17e8e9],bl
  415fba:	jmp    0x25a5:0x145001a7
  415fc1:	and    al,0x14
  415fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc4:	and    eax,0xf1561a20
  415fc9:	minps  xmm5,XMMWORD PTR [ecx-0x78]
  415fcd:	rcl    BYTE PTR [eax-0x46bb6fb1],0x75
  415fd4:	ror    DWORD PTR [edx+0x50200561],1
  415fda:	and    BYTE PTR ds:0xde4d2428,ch
  415fe0:	jmp    DWORD PTR [ebx]
  415fe2:	adc    DWORD PTR [ecx-0x26],0x6c699c3f
  415fe9:	add    DWORD PTR [esi],ebx
  415feb:	mov    eax,ds:0x561877f
  415ff0:	sbb    BYTE PTR [ecx-0x7bf05c3b],al
  415ff6:	sub    BYTE PTR [ecx+0x1],ch
  415ff9:	add    BYTE PTR [esi-0x58],dh
  415ffc:	je     0x42c922
  416002:	push   ds
  416003:	add    eax,0x6e9c1828
  416008:	xor    dl,BYTE PTR [eax-0x6e]
  41600b:	js     0x416032
  41600d:	adc    BYTE PTR [eax],bl
  41600f:	or     BYTE PTR [eax],ch
  416011:	sbb    al,0x10
  416013:	add    ebx,DWORD PTR [ebx-0x18fa2ad8]
  416019:	add    ebx,DWORD PTR [eax+0x7f]
  41601c:	or     ebx,esp
  41601e:	add    BYTE PTR [ebp-0x62fa18fe],bl
  416024:	add    ah,bh
  416026:	imul   esi,DWORD PTR [edx+0x5003e7b9],0xffffffef
  41602d:	or     dl,BYTE PTR [eax]
  41602f:	adc    al,0x73
  416031:	aas    
  416032:	jae    0x416022
  416034:	jns    0x41605c
  416036:	mov    esi,DWORD PTR [ecx+0x5434eb1e]
  41603c:	mov    BYTE PTR [ebx+0x28],ch
  41603f:	sub    eax,0xcd03e704
  416044:	xchg   DWORD PTR [ebx-0x647486d9],ebp
  41604a:	daa    
  41604b:	jno    0x4160b7
  41604d:	in     eax,dx
  41604e:	mov    esi,0xf862029d
  416053:	mov    esi,0x7175220e
  416058:	or     DWORD PTR [edx-0x31],esi
  41605b:	mov    esi,0x16596206
  416060:	mov    edi,0x30fadc02
  416065:	test   DWORD PTR [ebx],eax
  416067:	popf   
  416068:	lea    esp,[eax+edx*1]
  41606b:	xchg   esp,eax
  41606c:	inc    ebp
  41606d:	cmp    eax,DWORD PTR [esi]
  41606f:	and    dh,BYTE PTR [ebx]
  416071:	jo     0x4160e4
  416073:	ret    0xe779
  416076:	mov    fs,WORD PTR [ecx]
  416078:	pop    ds
  416079:	pop    es
  41607a:	add    ebx,DWORD PTR [ebp+0x5d1b5f02]
  416080:	retf   
  416081:	adc    edi,DWORD PTR [esi+0x0]
  416084:	adc    al,0xbf
  416086:	retf   0x840f
  416089:	push   cs
  41608a:	inc    eax
  41608b:	jno    0x41601f
  41608d:	jns    0x41608f
  41608f:	jmp    0x965deaf
  416094:	sahf   
  416095:	add    al,BYTE PTR [eax]
  416097:	jno    0x41602f
  416099:	ret    0xd446
  41609c:	lock xor eax,eax
  41609f:	mov    dh,0x7c
  4160a1:	fimul  DWORD PTR [eax+0x8434344]
  4160a7:	jmp    0x992deb1f
  4160ac:	je     0x41603a
  4160ae:	inc    ebx
  4160af:	xor    eax,0x40feeb6e
  4160b4:	sar    BYTE PTR [eax-0x3],1
  4160b7:	and    eax,DWORD PTR es:[edx+0x74]
  4160bb:	sti    
  4160bc:	sbb    ebp,edi
  4160be:	sti    
  4160bf:	in     eax,dx
  4160c0:	xor    ecx,DWORD PTR ds:0x614ed989
  4160c6:	pop    ebp
  4160c7:	pushf  
  4160c8:	sbb    eax,0x81278977
  4160cd:	or     dl,BYTE PTR [eax+0x1]
  4160d0:	repz sar esp,cl
  4160d3:	out    dx,al
  4160d4:	into   
  4160d5:	inc    edx
  4160d6:	pop    esi
  4160d7:	mov    al,0x5e
  4160d9:	aad    0x88
  4160db:	int    0xc8
  4160dd:	into   
  4160de:	push   esp
  4160df:	fs aam 0x7c
  4160e2:	push   eax
  4160e3:	inc    ebx
  4160e4:	lahf   
  4160e5:	push   0xffffff98
  4160e7:	mov    DWORD PTR [eax],0xb989775a
  4160ed:	and    al,0x70
  4160ef:	je     0x4160c7
  4160f1:	pop    ss
  4160f2:	(bad)  
  4160f5:	cwde   
  4160f6:	cmc    
  4160f7:	pop    ss
  4160f8:	jb     0x4160c6
  4160fa:	add    BYTE PTR [esi+0x13],dl
  4160fd:	xchg   esp,eax
  4160fe:	dec    ecx
  4160ff:	call   0x8b459a3a
  416104:	mov    fs,WORD PTR [edx]
  416106:	shl    bh,1
  416108:	add    BYTE PTR [edx-0x2b0003a5],al
  41610e:	std    
  41610f:	out    0x8,al
  416111:	stos   BYTE PTR es:[edi],al
  416112:	out    0x13,al
  416114:	push   ebp
  416115:	repz div DWORD PTR [ecx]
  416118:	shl    BYTE PTR [ebx+0x56],0xc6
  41611c:	ret    0x478
  41611f:	push   ecx
  416120:	mov    esp,eax
  416122:	and    esp,0xfffffff8
  416125:	cmc    
  416126:	repnz mov eax,DWORD PTR ds:0xff530444
  41612d:	or     DWORD PTR [eax+ebp*8],ecx
  416130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416131:	xchg   ebx,eax
  416132:	idiv   edx
  416134:	test   BYTE PTR [ecx+edi*2+0x30],dh
  416138:	lea    eax,[eax]
  41613a:	and    BYTE PTR [eax],cl
  41613c:	call   0x3dcc91
  416141:	mov    edi,0xb88d0551
  416146:	sub    ch,al
  416148:	add    eax,DWORD PTR [esp+eax*1]
  41614b:	push   eax
  41614c:	push   0x0
  41614e:	jmp    0x9d08e9ab
  416153:	mov    bl,0x8c
  416155:	push   ebx
  416157:	imul   eax,DWORD PTR [ebp-0x76fbfbfb],0x44
  41615e:	cwde   
  41615f:	adc    ch,BYTE PTR [edx+0x0]
  416162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416163:	not    DWORD PTR [eax]
  416165:	xor    al,0xea
  416167:	inc    ebx
  416168:	std    
  416169:	or     BYTE PTR [eax],0x8
  41616c:	pop    ebx
  41616d:	mov    ebx,ecx
  41616f:	bound  edi,QWORD PTR [edi-0x77a54bfc]
  416175:	in     al,dx
  416176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416177:	dec    ebp
  416178:	push   ebx
  416179:	push   0xffffffb0
  41617b:	clc    
  41617c:	jo     0x416186
  41617e:	or     al,0x96
  416180:	push   ecx
  416181:	call   FWORD PTR [ebp-0x5ebc6f70]
  416187:	cmp    edx,ebp
  416189:	bound  eax,QWORD PTR [ebp-0x6d028008]
  41618f:	hlt    
  416190:	jo     0x416115
  416192:	xchg   ebx,eax
  416193:	jbe    0x41619a
  416195:	xor    bl,BYTE PTR [ebp-0x7c]
  416198:	and    al,0x89
  41619a:	loopne 0x416179
  41619c:	cmp    eax,0x6a024fa1
  4161a2:	cdq    
  4161a3:	mov    cl,0xd1
  4161a5:	push   ebp
  4161a6:	bound  ecx,QWORD PTR [esi+0x9]
  4161a9:	std    
  4161aa:	mov    al,0x79
  4161ac:	adc    eax,DWORD PTR [eax-0x63]
  4161af:	in     al,dx
  4161b0:	inc    esp
  4161b1:	or     al,0x0
  4161b3:	repz shl edi,0x53
  4161b7:	inc    edx
  4161b8:	sub    BYTE PTR [ecx+0x3f32d8ff],dh
  4161be:	add    al,0x9d
  4161c0:	scas   al,BYTE PTR es:[edi]
  4161c1:	mov    ch,ah
  4161c3:	int3   
  4161c4:	mov    edx,0x9e1054d3
  4161c9:	jge    0x41621b
  4161cb:	test   DWORD PTR [ecx],esi
  4161cd:	add    DWORD PTR [eax],eax
  4161cf:	popf   
  4161d0:	adc    DWORD PTR [edi-0x788ff505],ebp
  4161d6:	lock sbb BYTE PTR [edi-0xa],ch
  4161da:	sbb    esp,DWORD PTR [esi]
  4161dc:	sub    BYTE PTR es:[edx-0x64],0xd3
  4161e1:	add    ecx,DWORD PTR [ecx-0x6dfabf25]
  4161e7:	pushf  
  4161e8:	imul   ecx,DWORD PTR [eax-0xabfdf08],0x39516b05
  4161f2:	push   esp
  4161f3:	retf   0x87af
  4161f6:	lds    esp,FWORD PTR [edx+0x7]
  4161f9:	dec    ecx
  4161fa:	rcl    DWORD PTR [eax+0x2],0x72
  4161fe:	jo     0x41621c
  416200:	cmc    
  416201:	out    dx,al
  416202:	add    ecx,DWORD PTR [ebp+ebp*8-0xa]
  416206:	jmp    0x4e040ad
  41620b:	popf   
  41620c:	add    bh,BYTE PTR [edx+0x7b398543]
  416212:	jge    0x41619c
  416214:	push   0xffffffb8
  416216:	mov    es,WORD PTR [eax]
  416218:	fimul  WORD PTR [edx]
  41621a:	pop    ss
  41621b:	jmp    0xaee:0x7ce7ec7a
  416222:	dec    edi
  416223:	xchg   edx,eax
  416224:	sbb    BYTE PTR [edi+eiz*8],al
  416227:	xchg   BYTE PTR [ebp-0x10],bl
  41622a:	loop   0x41625d
  41622c:	pop    ebp
  41622d:	push   0xffffffe0
  41622f:	jl     0x4161ff
  416231:	or     cl,bh
  416233:	dec    ebx
  416234:	popf   
  416235:	add    ah,bh
  416237:	imul   ebp,DWORD PTR [esi+esi*2-0xfc782d2],0xffffffee
  41623f:	mov    DWORD PTR [ebp+0x6b],edx
  416242:	adc    ecx,edx
  416244:	sub    DWORD PTR [esi+0x61],esi
  416247:	inc    ecx
  416248:	(bad)  
  416249:	xlat   BYTE PTR ds:[ebx]
  41624a:	sub    BYTE PTR [eax],cl
  41624c:	popf   
  41624d:	or     DWORD PTR [edi],0xaf088904
  416253:	neg    DWORD PTR [ebp+0x77412731]
  416259:	xor    DWORD PTR [edi+0x3f308740],ecx
  41625f:	inc    ecx
  416260:	dec    esi
  416261:	mov    ebx,ecx
  416263:	cmp    cl,0x16
  416266:	(bad)  
  416267:	(bad)  
  416268:	xchg   esi,eax
  416269:	rcr    DWORD PTR [ecx],1
  41626b:	pop    ecx
  41626c:	jae    0x41623b
  41626e:	outs   dx,DWORD PTR ds:[esi]
  41626f:	(bad)  
  416271:	cmp    bl,bh
  416273:	or     al,0x21
  416275:	mov    edx,0x29ee900
  41627a:	mov    esp,DWORD PTR [eax+eax*1]
  41627d:	sbb    eax,0x3453e7d3
  416282:	ja     0x416281
  416284:	gs pop esi
  416286:	pop    es
  416287:	test   BYTE PTR [ebx-0x62],al
  41628a:	add    al,BYTE PTR [eax]
  41628c:	bound  esp,QWORD PTR [ebx-0x3]
  41628f:	out    0x42,eax
  416291:	adc    DWORD PTR [eax-0x3],edi
  416294:	ins    BYTE PTR es:[edi],dx
  416295:	pop    ebx
  416296:	std    
  416297:	dec    esi
  416298:	sbb    DWORD PTR [esi],edx
  41629a:	shl    edi,0x81
  41629d:	add    al,0x77
  41629f:	std    
  4162a0:	and    ax,0x7f9
  4162a4:	jb     0x416294
  4162a6:	iret   
  4162a7:	mov    BYTE PTR [edi],ah
  4162a9:	test   BYTE PTR [edx+0x7e9ee901],0xc0
  4162b0:	mov    esp,0xc3e7cca4
  4162b5:	ins    DWORD PTR es:[edi],dx
  4162b6:	jbe    0x4162b5
  4162b8:	cli    
  4162b9:	enter  0xfd33,0xfa
  4162bd:	fimul  WORD PTR [edx-0x6d8eea5]
  4162c3:	jmp    0x416335
  4162c5:	xor    esp,DWORD PTR [ebp-0x79]
  4162c8:	mov    ah,0xaa
  4162ca:	cmp    esi,ecx
  4162cc:	xchg   ebp,eax
  4162cd:	scas   eax,DWORD PTR es:[edi]
  4162ce:	cmp    bl,BYTE PTR [esi]
  4162d0:	jl     0x41626a
  4162d2:	ret    0x9f37
  4162d5:	lahf   
  4162d6:	out    dx,al
  4162d7:	add    BYTE PTR [edi+0x2a397375],ch
  4162dd:	stc    
  4162de:	xor    edi,ebp
  4162e0:	pop    esp
  4162e1:	add    BYTE PTR [ebp+0x79d17b89],ah
  4162e7:	adc    BYTE PTR [ecx+ebp*8],al
  4162ea:	sahf   
  4162eb:	jle    0x4162ad
  4162ed:	push   ebp
  4162ee:	loope  0x416365
  4162f0:	jae    0x4162f2
  4162f2:	adc    al,0x85
  4162f4:	inc    ecx
  4162f5:	in     al,dx
  4162f6:	or     esi,DWORD PTR [ebx-0xb]
  4162f9:	call   0x3c589f
  4162fe:	ds (bad) 
  416300:	mov    BYTE PTR [ebp+0xc],dh
  416303:	out    0x13,al
  416305:	add    esi,DWORD PTR [eax+eax*1-0x19f78a77]
  41630c:	psubd  mm5,QWORD PTR [ebx]
  41630f:	clc    
  416310:	mov    ebx,eax
  416312:	das    
  416313:	sub    ebx,edi
  416315:	jne    0x41638f
  416317:	push   eax
  416318:	cld    
  416319:	adc    eax,0x400f64
  41631e:	add    DWORD PTR [edi+0x41e9de73],edi
  416324:	in     eax,0xe8
  416326:	repnz sti 
  416328:	(bad)  
  416329:	dec    DWORD PTR [edi-0x20198f45]
  41632f:	lods   eax,DWORD PTR ds:[esi]
  416330:	mov    DWORD PTR [ebp-0x14],esi
  416333:	out    0xe3,al
  416335:	add    dh,BYTE PTR [eax+eax*1]
  416338:	mov    DWORD PTR [ebp-0x78],esi
  41633b:	out    0xdf,al
  41633d:	stc    
  41633e:	mov    esi,edi
  416340:	xor    eax,eax
  416342:	pop    ebx
  416343:	pop    edx
  416344:	pop    eax
  416345:	leave  
  416346:	add    BYTE PTR [esi+0x6],dh
  416349:	add    BYTE PTR [ebp-0x41],dl
  41634c:	jmp    0x8d54:0x5257514c
  416353:	inc    ecx
  416354:	clc    
  416355:	dec    edi
  416356:	push   0xfffffe73
  41635b:	pushf  
  41635c:	sub    ah,bh
  41635e:	dec    DWORD PTR [ebx]
  416360:	test   eax,esi
  416362:	mov    cl,0xf7
  416365:	inc    DWORD PTR [edx+edx*8-0x6274c69d]
  41636c:	push   ds
  41636d:	jl     0x4163d9
  41636f:	mov    ch,0x18
  416371:	push   esi
  416372:	mov    esp,ebx
  416374:	sbb    al,0x71
  416376:	cmc    
  416377:	and    BYTE PTR [eax+0x4e102bf0],bl
  41637d:	xor    al,0x89
  41637f:	mov    ebx,0x7e717670
  416384:	movups xmm7,xmm5
  416387:	xor    BYTE PTR [ecx-0x78],dh
  41638a:	inc    ebp
  41638b:	cdq    
  41638c:	cmp    DWORD PTR [ecx+0x13],edi
  41638f:	fldcw  WORD PTR [ebx-0x3f]
  416392:	call   FWORD PTR [edi]
  416394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416395:	add    eax,0xc6d5d83
  41639a:	sbb    DWORD PTR [edx+0x51],0x88eff93e
  4163a1:	outs   dx,BYTE PTR ds:[esi]
  4163a2:	add    al,0x5b
  4163a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a5:	jp     0x4163a6
  4163a7:	rcl    cl,1
  4163a9:	mov    edx,DWORD PTR [edx+0x0]
  4163ac:	(bad)  
  4163ad:	int3   
  4163ae:	mov    al,BYTE PTR [ebx+0x5a]
  4163b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163b2:	xlat   BYTE PTR ds:[ebx]
  4163b3:	pop    eax
  4163b4:	fs daa 
  4163b6:	std    
  4163b7:	push   ecx
  4163b9:	lock fs add eax,0xd3510161
  4163c1:	lods   eax,DWORD PTR ds:[esi]
  4163c2:	xor    BYTE PTR [ecx+0x76016db0],al
  4163c8:	jp     0x4163de
  4163ca:	lock or esp,DWORD PTR [edx]
  4163cd:	xchg   esi,eax
  4163ce:	or     eax,ebp
  4163d0:	in     al,dx
  4163d1:	mov    dh,0x7a
  4163d3:	std    
  4163d4:	es jns 0x416454
  4163d7:	not    BYTE PTR [eax-0x93fcca3]
  4163dd:	inc    eax
  4163de:	mov    es,WORD PTR [ebx-0x57]
  4163e1:	mov    ebp,ecx
  4163e3:	xchg   edi,eax
  4163e4:	popf   
  4163e5:	add    ah,bh
  4163e7:	add    esi,ebp
  4163e9:	out    0xe0,eax
  4163eb:	jns    0x4163cd
  4163ed:	retf   
  4163ee:	pusha  
  4163ef:	pop    esp
  4163f0:	lds    edi,FWORD PTR [esi-0x782f86c8]
  4163f6:	stos   BYTE PTR es:[edi],al
  4163f7:	ins    DWORD PTR es:[edi],dx
  4163f8:	fwait
  4163f9:	call   0x26c4fe4
  4163fe:	out    0x3,eax
  416400:	ins    BYTE PTR es:[edi],dx
  416401:	inc    edx
  416402:	mov    edi,0xa672b4d4
  416407:	fiadd  DWORD PTR [ebp-0x2b]
  41640a:	test   al,0xc
  41640c:	popf   
  41640d:	int    0x61
  41640f:	push   0x34d3ea00
  416414:	xchg   esi,ebx
  416416:	outs   dx,BYTE PTR ds:[esi]
  416417:	pop    ss
  416418:	in     al,dx
  416419:	xor    eax,DWORD PTR [ebx]
  41641b:	out    0x3,eax
  41641d:	jne    0x416412
  41641f:	jno    0x41649a
  416421:	js     0x4164a1
  416423:	lahf   
  416424:	jg     0x416480
  416426:	test   DWORD PTR [edx],0xd16ede8d
  41642c:	adc    BYTE PTR [esp+edx*2-0x77ac8f4b],ch
  416433:	cmp    edi,ebp
  416435:	mov    al,ds:0xcf77bc2b
  41643a:	sti    
  41643b:	jno    0x41640c
  41643d:	call   0xdf5d:0xfa8ce97b
  416444:	sar    BYTE PTR [edx],cl
  416446:	bound  edi,QWORD PTR [eax+0x27362878]
  41644c:	ficomp DWORD PTR [ebx+0x45]
  41644f:	jmp    0x416454
  416451:	push   0xffffff85
  416453:	mov    ebx,DWORD PTR [edi]
  416455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416456:	add    bl,BYTE PTR [edx-0x4b098e2f]
  41645c:	jle    0x41643b
  41645e:	idiv   bh
  416460:	mov    edx,0x6215b209
  416465:	jno    0x41643e
  416467:	cld    
  416468:	pop    ebp
  416469:	mov    ebp,0xcb21e80a
  41646e:	outs   dx,BYTE PTR ds:[esi]
  41646f:	std    
  416470:	bound  ecx,QWORD PTR [esi-0x7b]
  416473:	not    BYTE PTR [eax+eax*1-0x63]
  416477:	xor    al,0xc0
  416479:	sar    BYTE PTR [ebp-0x28],cl
  41647c:	addr16 pusha 
  41647e:	sahf   
  41647f:	add    al,BYTE PTR [eax]
  416481:	bound  ebx,QWORD PTR [ebp+0x5a]
  416484:	shl    BYTE PTR [eax+0x73566f35],cl
  41648a:	inc    esi
  41648b:	pop    edx
  41648c:	test   eax,0x8a6f2438
  416491:	stos   BYTE PTR es:[edi],al
  416492:	or     DWORD PTR [ecx],eax
  416494:	push   0xffffffe9
  416496:	xchg   BYTE PTR [eax+0x339ee900],bl
  41649c:	rcl    BYTE PTR [ecx+0x76fd7946],0x55
  4164a3:	iret   
  4164a4:	pop    eax
  4164a5:	adc    bl,bl
  4164a7:	push   es
  4164a8:	add    BYTE PTR [ecx+ebx*1+0x4db74f5e],bh
  4164af:	jl     0x4164f4
  4164b1:	push   ebp
  4164b2:	outs   dx,BYTE PTR ds:[esi]
  4164b3:	jmp    0x2e04e51
  4164b8:	call   0xfdb12cdb
  4164bd:	jb     0x41648d
  4164bf:	test   esi,esi
  4164c1:	mov    ebp,0x2d437b7e
  4164c6:	test   DWORD PTR [edx-0x1],0xd2339ee8
  4164cd:	jb     0x416476
  4164cf:	ja     0x4164c6
  4164d1:	ins    BYTE PTR es:[edi],dx
  4164d2:	jo     0x4164c9
  4164d4:	or     eax,0x726cdbd0
  4164d9:	add    BYTE PTR [eax],al
  4164db:	or     eax,0x8d08497e
  4164e0:	add    al,0x87
  4164e2:	(bad)  
  4164e3:	lahf   
  4164e4:	std    
  4164e5:	push   ebp
  4164e6:	call   0x3db901
  4164eb:	xchg   esi,eax
  4164ed:	pop    edx
  4164ee:	pop    esi
  4164ef:	sub    eax,0x950003c4
  4164f4:	test   DWORD PTR [esp-0x44],edi
  4164f8:	add    al,0x4f
  4164fa:	push   esi
  4164fb:	stos   DWORD PTR es:[edi],eax
  4164fc:	jb     0x416534
  4164fe:	test   esp,esi
  416500:	jno    0x416534
  416502:	imul   eax,DWORD PTR [ecx*8+0x7bc4fffc],0x720357f8
  41650d:	and    DWORD PTR [eax],ebx
  41650f:	or     al,0x81
  416511:	dec    ebp
  416512:	push   DWORD PTR [ebx]
  416514:	jl     0x416506
  416516:	test   DWORD PTR [edx],ebp
  416518:	jb     0x41651b
  41651a:	xor    dh,BYTE PTR [esp+ebx*8]
  41651d:	and    dl,BYTE PTR [esi-0x54]
  416520:	mov    WORD PTR [eax],es
  416522:	add    BYTE PTR [ebp+edi*2-0x10ca173d],al
  416529:	cli    
  41652a:	jmp    FWORD PTR [edx]
  41652c:	jp     0x416506
  41652e:	call   0x3dbca1
  416533:	mov    esi,0x5e0ee6c3
  416538:	add    al,0x68
  41653a:	call   0x7400:0x33000434
  416541:	ficom  WORD PTR [edx]
  416543:	stc    
  416544:	jae    0x41653d
  416546:	pop    edx
  416547:	pop    esi
  416548:	cmovg  edi,DWORD PTR [edi-0x77accbfc]
  41654f:	in     al,dx
  416550:	in     eax,0x56
  416552:	push   ebx
  416553:	lea    ebx,[ebp-0x7aaf8a62]
  416559:	test   DWORD PTR [ebx],0x2e119d00
  41655f:	cli    
  416560:	add    dh,BYTE PTR [ecx-0x76]
  416563:	enter  0x2320,0xf0
  416567:	sbb    esp,DWORD PTR [esi]
  416569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41656a:	jne    0x4165d6
  41656c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41656d:	or     al,0x52
  41656f:	pop    esi
  416570:	jmp    0x3c67:0x50d28057
  416577:	jae    0x41654a
  416579:	retf   
  41657a:	or     cl,BYTE PTR [ecx+0x28c7170]
  416580:	push   ss
  416581:	fwait
  416582:	push   0x8
  416584:	dec    esp
  416585:	inc    ecx
  416586:	mov    al,0x50
  416588:	mov    dl,0xa0
  41658a:	xor    al,al
  41658c:	dec    ebx
  41658d:	mov    dl,0x3f
  41658f:	add    al,0x9d
  416591:	ss mov esp,ebp
  416594:	in     al,dx
  416595:	sub    cl,dh
  416597:	mov    bl,al
  416599:	jge    0x41656c
  41659b:	imul   eax,DWORD PTR [ecx],0x82f76b92
  4165a1:	lock mov eax,ecx
  4165a4:	add    BYTE PTR [eax],ah
  4165a6:	mov    ds:0x26261bed,al
  4165ab:	js     0x416617
  4165ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ae:	or     al,0x52
  4165b0:	pop    esi
  4165b1:	push   0xffffffd7
  4165b3:	jg     0x416587
  4165b5:	shl    BYTE PTR [edi+0x3c],1
  4165b8:	jae    0x41660b
  4165ba:	dec    ebx
  4165bb:	or     al,0x89
  4165bd:	lock jno 0x41654c
  4165c0:	add    dl,BYTE PTR [esi]
  4165c2:	sbb    ch,BYTE PTR [edx+0x8]
  4165c5:	int3   
  4165c6:	shr    edi,0x4f
  4165c9:	xor    ah,BYTE PTR [eax]
  4165cb:	xor    al,al
  4165cd:	retf   
  4165ce:	add    dh,BYTE PTR [eax]
  4165d0:	inc    ecx
  4165d1:	cdq    
  4165d2:	add    dh,BYTE PTR [edx+ecx*4+0x7b0b8309]
  4165d9:	bound  eax,QWORD PTR [ebx-0x2c62f474]
  4165df:	pushf  
  4165e0:	into   
  4165e1:	mov    ?,WORD PTR [esp+eiz*2]
  4165e4:	inc    ebx
  4165e5:	jno    0x416607
  4165e7:	add    BYTE PTR [ebx-0x49],0x7b
  4165eb:	out    dx,eax
  4165ec:	int    0xe9
  4165ee:	hlt    
  4165ef:	out    dx,al
  4165f0:	imul   esp,DWORD PTR [edi],0xffffffd2
  4165f3:	fnsave [ebp+0x24]
  4165f6:	jb     0x416664
  4165f8:	outs   dx,BYTE PTR ds:[esi]
  4165f9:	dec    esi
  4165fa:	push   es
  4165fb:	sbb    DWORD PTR [esp+esi*4+0x20],eax
  4165ff:	sbb    eax,0xa67b3eea
  416604:	ins    BYTE PTR es:[edi],dx
  416605:	push   eax
  416606:	push   0xffffffb6
  416608:	jne    0x41660a
  41660a:	dec    ebx
  41660b:	jl     0x41659c
  41660d:	ins    BYTE PTR es:[edi],dx
  41660e:	ins    DWORD PTR es:[edi],dx
  41660f:	shl    BYTE PTR [ebp-0x6dbce88b],cl
  416615:	or     DWORD PTR [edi],eax
  416617:	add    eax,DWORD PTR [ecx]
  416619:	loopne 0x4165e8
  41661b:	inc    edx
  41661c:	jg     0x4165e2
  41661e:	xchg   edx,eax
  41661f:	outs   dx,BYTE PTR ds:[esi]
  416620:	xchg   ch,dl
  416622:	loopne 0x4165ed
  416624:	jno    0x416685
  416626:	(bad)  
  416627:	inc    eax
  416628:	jmp    0x41662d
  41662a:	int3   
  41662b:	xor    DWORD PTR [edx-0x110874c4],edx
  416631:	je     0x41661e
  416633:	cli    
  416634:	dec    esi
  416635:	or     ebp,ebp
  416637:	ins    DWORD PTR es:[edi],dx
  416638:	push   esi
  416639:	mov    WORD PTR [ebx+0x23ffad7b],?
  41663f:	int    0xee
  416641:	mov    ah,bl
  416643:	(bad)  
  416644:	mov    eax,ds:0xfffec740
  416649:	shl    BYTE PTR [esi-0x2e],0x40
  41664d:	jmp    0xe93f0708
  416652:	sahf   
  416653:	xor    edx,edx
  416655:	loop   0x4166bb
  416657:	idiv   BYTE PTR [eax]
  416659:	push   0xa
  41665b:	push   es
  41665c:	add    cl,BYTE PTR [edi+0x55385bb]
  416662:	int3   
  416663:	inc    edx
  416664:	xchg   DWORD PTR [edx+ebx*2-0x141ebcd5],esp
  41666b:	and    DWORD PTR [eax],edi
  41666d:	aad    0x0
  41666f:	xchg   esi,eax
  416670:	icebp  
  416671:	adc    ah,BYTE PTR [ecx]
  416673:	int    0x5
  416675:	call   DWORD PTR [ebx-0x60]
  416678:	add    eax,0xffffffeb
  41667b:	xchg   ebp,eax
  41667c:	rol    DWORD PTR [edi],0xde
  41667f:	sbb    al,BYTE PTR [ebx-0x7f]
  416682:	xor    al,0x45
  416684:	outs   dx,DWORD PTR ds:[esi]
  416685:	jmp    0xd99c4563
  41668a:	cli    
  41668b:	pop    esi
  41668c:	ret    0x62c0
  41668f:	retf   
  416690:	xor    DWORD PTR gs:[eiz*1+0x6a9326f],0x9ee8fd92
  41669c:	inc    eax
  41669d:	add    al,0xe9
  41669f:	int    0x50
  4166a1:	aaa    
  4166a2:	sbb    eax,0xca7406bd
  4166a7:	and    eax,0xdcb2082d
  4166ac:	neg    BYTE PTR [ebx]
  4166ae:	mov    edx,0xdc102ad7
  4166b3:	call   0x3efb:0x4ae8502a
  4166ba:	adc    ah,BYTE PTR [ebp+0x21]
  4166bd:	add    al,0xd5
  4166bf:	dec    ecx
  4166c0:	sub    eax,0x32e900e9
  4166c5:	shr    bl,0x42
  4166c8:	inc    ecx
  4166c9:	call   0x58225d1
  4166ce:	ret    0x140
  4166d1:	xchg   DWORD PTR [eax+0x0],ecx
  4166d4:	sub    ah,ch
  4166d6:	les    esi,FWORD PTR [ebp+0xc]
  4166d9:	jp     0x416723
  4166db:	or     BYTE PTR [ebp+0x39],bh
  4166de:	or     ebx,ebp
  4166e0:	fistp  QWORD PTR [ecx+0x50]
  4166e3:	or     bh,bl
  4166e5:	mov    edx,0x7a122071
  4166ea:	jo     0x4166f0
  4166ec:	pop    es
  4166ed:	repz ss into 
  4166f0:	sbb    dh,BYTE PTR [edx+0x12]
  4166f3:	mov    ah,ch
  4166f5:	inc    ebp
  4166f6:	xchg   BYTE PTR [eax-0x38],cl
  4166f9:	test   dl,dl
  4166fb:	jne    0x4166ef
  4166fd:	sbb    eax,0x45bf750d
  416702:	xchg   BYTE PTR [eax-0x38],cl
  416705:	xor    eax,eax
  416707:	ret    
  416708:	inc    edi
  416709:	or     WORD PTR [eax],ax
  41670c:	aas    
  41670d:	inc    esi
  41670e:	or     ebx,eax
  416710:	xor    al,0x31
  416712:	add    BYTE PTR [ebx+esi*4+0x36],dh
  416716:	shr    cl,0xf
  416719:	pop    es
  41671a:	add    BYTE PTR [eax],al
  41671c:	xlat   BYTE PTR ds:[ebx]
  41671d:	out    dx,eax
  41671e:	jae    0x416744
  416720:	jl     0x416713
  416722:	adc    BYTE PTR [eax+0x66],bh
  416725:	inc    eax
  416726:	std    
  416727:	mov    bh,BYTE PTR [edx+edi*2]
  41672a:	xlat   BYTE PTR ds:[ebx]
  41672b:	jg     0x4166ad
  41672d:	ss shr bl,0x71
  416731:	dec    edx
  416732:	mov    dh,BYTE PTR [edi+0x6c]
  416735:	test   DWORD PTR [esi],edi
  416737:	add    BYTE PTR [eax],al
  416739:	jno    0x416760
  41673b:	mov    DWORD PTR [ebx-0x63],eax
  41673e:	push   edi
  41673f:	shl    edi,1
  416741:	mov    WORD PTR ds:[edx-0x3],?
  416745:	adc    al,0x5c
  416747:	mov    al,al
  416749:	mov    cl,0x5
  41674b:	aad    0xfc
  41674d:	test   eax,0x2a5013fd
  416752:	push   edi
  416753:	xor    DWORD PTR [esi],edx
  416755:	fstp   QWORD PTR [ecx-0x7a]
  416758:	les    ebp,FWORD PTR [ecx+0x603d0f2]
  41675e:	inc    esp
  41675f:	jle    0x4167a6
  416761:	mov    eax,ds:0x9c17bfce
  416766:	adc    DWORD PTR ds:0x856cfa4e,ecx
  41676c:	shr    BYTE PTR [eax+0x5d],0x33
  416770:	shl    dh,0xb5
  416773:	jle    0x416783
  416775:	loop   0x4167ab
  416777:	or     BYTE PTR [ecx],al
  416779:	push   0x65
  41677b:	(bad)  
  41677c:	cld    
  41677d:	dec    ecx
  41677e:	std    
  41677f:	adc    ecx,DWORD PTR [edi-0x36]
  416782:	jbe    0x4167b5
  416784:	push   ss
  416785:	pop    ebp
  416786:	pop    ecx
  416787:	xchg   ah,al
  416789:	test   eax,0x2603d25a
  41678e:	sbb    eax,0xa39b8908
  416793:	add    eax,0xcaa49d08
  416798:	add    esp,DWORD PTR [esi]
  41679a:	and    al,0x8
  41679c:	mov    DWORD PTR [eax],eax
  41679e:	mov    ds:0x9d08059b,eax
  4167a3:	jl     0x41676f
  4167a5:	add    ecx,DWORD PTR [ebp+0x5a]
  4167a8:	iret   
  4167a9:	pop    eax
  4167aa:	pop    edi
  4167ab:	add    DWORD PTR gs:[ebx+0x26],edx
  4167af:	test   DWORD PTR [ecx+0x5759d3d],eax
  4167b5:	xor    bl,BYTE PTR [ebp+0x2]
  4167b8:	push   edx
  4167b9:	in     al,0xf0
  4167bb:	imul   edx,esp,0xfffffffb
  4167be:	and    eax,0x4b633f3b
  4167c3:	imul   ecx,DWORD PTR [esi+0x7e],0x4d
  4167c7:	jns    0x416785
  4167c9:	sti    
  4167ca:	pop    ds
  4167cb:	je     0x416781
  4167cd:	pop    es
  4167ce:	outs   dx,DWORD PTR ds:[esi]
  4167cf:	inc    edx
  4167d0:	inc    edx
  4167d1:	mov    ebx,0x182dd4cd
  4167d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167d7:	adc    BYTE PTR [edi-0x1d44dbfd],ah
  4167dd:	xor    BYTE PTR [ebp+0x1],0x64
  4167e1:	pop    es
  4167e2:	int3   
  4167e3:	pop    ss
  4167e4:	pop    ds
  4167e5:	or     BYTE PTR [eax+0x6a01e9fa],0xd2
  4167ec:	std    
  4167ed:	neg    DWORD PTR [edx-0x6ccc2395]
  4167f3:	ret    0x1ce6
  4167f6:	inc    eax
  4167f7:	push   es
  4167f8:	jb     0x4167bb
  4167fa:	sahf   
  4167fb:	jg     0x4167a0
  4167fd:	add    BYTE PTR [edi+edi*2-0x30],dh
  416801:	add    eax,DWORD PTR [eax]
  416803:	dec    esi
  416804:	sti    
  416805:	int    0x3a
  416807:	mov    ch,0x2a
  416809:	xor    eax,0x57eb871
  41680e:	add    al,0xb0
  416810:	mov    edx,0x5a9e5cea
  416815:	aaa    
  416816:	mov    edi,0x3576aa1
  41681b:	sti    
  41681c:	(bad)  
  41681d:	test   al,0x8
  41681f:	popf   
  416820:	iret   
  416821:	popa   
  416822:	pusha  
  416823:	in     al,dx
  416824:	shl    DWORD PTR [ecx+0x4a],1
  416827:	jne    0x41681a
  416829:	out    0x3,al
  41682b:	popf   
  41682c:	pop    edx
  41682d:	loopne 0x416836
  41682f:	popf   
  416830:	add    al,BYTE PTR [eax]
  416832:	mov    edx,0x1a50d3d9
  416837:	in     al,dx
  416838:	cmc    
  416839:	(bad)  
  41683b:	leave  
  41683c:	iret   
  41683d:	cld    
  41683e:	hlt    
  41683f:	jbe    0x416856
  416841:	inc    eax
  416842:	jmp    0x4147e9ac
  416847:	sahf   
  416848:	mov    eax,0x88646fc
  41684d:	jae    0x416834
  41684f:	push   0xeda3e942
  416854:	push   0x6b
  416856:	test   eax,0xf9433f9e
  41685b:	mov    ds:0xf0e90002,al
  416860:	add    eax,0xd2a2ae8b
  416865:	cld    
  416866:	(bad)  
  416867:	add    BYTE PTR [ebp+0x7adcfd30],cl
  41686d:	adc    eax,0x4019e940
  416872:	or     dh,dh
  416874:	sub    edi,edx
  416876:	jb     0x416879
  416878:	enter  0x69d2,0xea
  41687c:	icebp  
  41687d:	sar    ah,cl
  41687f:	push   esp
  416880:	popf   
  416881:	addr16 jae 0x416865
  416884:	dec    ebp
  416885:	xor    ch,bh
  416887:	hlt    
  416888:	mov    dh,0x14
  41688a:	inc    eax
  41688b:	jmp    0x24528c7
  416890:	pop    eax
  416891:	cmc    
  416892:	push   es
  416893:	bound  edx,QWORD PTR [edx+ebx*2+0xa]
  416897:	jmp    0x5e2a6b3a
  41689c:	dec    esi
  41689d:	imul   ebx,DWORD PTR [esi+0x42],0xe90c4362
  4168a4:	fs into 
  4168a6:	mov    BYTE PTR [ecx+0x23e6],bl
  4168ac:	test   BYTE PTR ds:0xe6784687,al
  4168b2:	cmp    BYTE PTR [ecx+ecx*2+0x45],bh
  4168b6:	std    
  4168b7:	test   BYTE PTR [ecx+esi*2],dh
  4168ba:	add    al,0x50
  4168bc:	ret    
  4168bd:	retf   0x667e
  4168c0:	cmp    BYTE PTR ds:0xc5b90687,al
  4168c6:	jae    0x4168ce
  4168c8:	add    al,0xf2
  4168ca:	rol    BYTE PTR [ebx+0x5afeaa00],cl
  4168d0:	pop    esi
  4168d1:	xchg   esi,esp
  4168d3:	inc    ebp
  4168d4:	or     BYTE PTR [ecx+0x40b73c5],bh
  4168da:	repnz adc BYTE PTR [ecx+ebx*1+0x45],bh
  4168df:	std    
  4168e0:	sbb    BYTE PTR [edx],0x6d
  4168e3:	std    
  4168e4:	ret    0xe649
  4168e7:	jmp    0x41686a
  4168e9:	add    ah,bh
  4168eb:	cld    
  4168ec:	inc    DWORD PTR [esi+ecx*2]
  4168ef:	push   ebx
  4168f0:	mov    DWORD PTR [ecx],edi
  4168f2:	fnstcw WORD PTR [esi+0x65]
  4168f5:	lock std 
  4168f7:	push   edx
  4168f8:	mov    esp,ebp
  4168fa:	pushf  
  4168fb:	add    bh,bh
  4168fd:	rol    BYTE PTR [eax-0x200fa8c],1
  416903:	cli    
  416904:	dec    esp
  416905:	cmp    BYTE PTR [esi+0x7dba7404],al
  41690b:	mov    DWORD PTR [eax],0xbf0084c4
  416911:	clc    
  416912:	outs   dx,DWORD PTR ds:[esi]
  416913:	cmp    eax,0x70ff1c00
  416918:	add    eax,0x4075c233
  41691d:	test   ah,cl
  41691f:	stos   BYTE PTR es:[edi],al
  416920:	push   DWORD PTR [ebx]
  416922:	fsubr  DWORD PTR [ecx+0x0]
  416925:	popf   
  416926:	sub    al,0xdc
  416928:	ja     0x41695f
  41692a:	sbb    eax,0x119d6a04
  41692f:	push   esp
  416930:	jbe    0x416932
  416932:	fstp   QWORD PTR [ecx+0x6e]
  416935:	jae    0x4168cc
  416937:	or     BYTE PTR [ebp+0x76],ch
  41693a:	cdq    
  41693b:	fcom   DWORD PTR [esi]
  41693d:	jo     0x4168ef
  41693f:	cdq    
  416940:	add    DWORD PTR [edi-0x3f778e25],eax
  416946:	call   0xd759:0x9d0072d5
  41694d:	add    ebp,DWORD PTR [eax]
  41694f:	scas   eax,DWORD PTR es:[edi]
  416950:	stc    
  416951:	dec    esi
  416952:	(bad)  
  416953:	xchg   esi,eax
  416954:	rol    esp,1
  416956:	loopne 0x4169b9
  416958:	add    al,0x0
  41695a:	popf   
  41695b:	pop    ecx
  41695c:	outs   dx,BYTE PTR ds:[esi]
  41695d:	adc    ebp,DWORD PTR [ecx]
  41695f:	addr16 sar edi,0xfa
  416963:	dec    esi
  416964:	and    edi,edi
  416966:	or     ah,ch
  416968:	cs ins BYTE PTR es:[edi],dx
  41696a:	test   al,0x99
  41696c:	add    DWORD PTR [ecx-0x5ffea663],edi
  416972:	mov    cl,0x5d
  416974:	clc    
  416975:	or     dh,ch
  416977:	jbe    0x41699c
  416979:	jmp    edx
  41697b:	fld    QWORD PTR [ebx+0xd]
  41697e:	and    edi,edx
  416980:	add    BYTE PTR [eax],al
  416982:	popf   
  416983:	(bad)  
  416984:	mov    DWORD PTR [edi],0xf787de6d
  41698a:	ret    
  41698b:	cmp    BYTE PTR [esi+0x50],ch
  41698e:	loop   0x4169a6
  416990:	cld    
  416991:	call   FWORD PTR [ebp+0xfd0159]
  416997:	nop
  416998:	jne    0x4169ac
  41699a:	inc    eax
  41699b:	popf   
  41699c:	fiadd  WORD PTR [eax+0x73]
  41699f:	add    al,0x3
  4169a1:	pop    edi
  4169a2:	outs   dx,BYTE PTR ds:[esi]
  4169a3:	popf   
  4169a4:	add    ah,bh
  4169a6:	sub    al,0xde
  4169a8:	cli    
  4169a9:	in     eax,0xc1
  4169ab:	(bad)  
  4169ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ae:	xchg   DWORD PTR [esi+0x706e8569],ebx
  4169b4:	add    ch,BYTE PTR [eax+ecx*4+0x72]
  4169b8:	push   0x67cd6e76
  4169bd:	aam    0xeb
  4169bf:	lods   al,BYTE PTR ds:[esi]
  4169c0:	ret    0x7ce6
  4169c3:	fdivp  st(2),st
  4169c5:	arpl   WORD PTR [ebx-0x2f],ax
  4169c8:	rol    eax,0x14
  4169cb:	push   ss
  4169cc:	jge    0x416a0d
  4169ce:	ins    DWORD PTR es:[edi],dx
  4169cf:	cmp    BYTE PTR [edi-0x31],ah
  4169d2:	dec    edi
  4169d3:	stos   DWORD PTR es:[edi],eax
  4169d4:	ret    0xd3e6
  4169d7:	sub    DWORD PTR ds:0x2dd15f7,ecx
  4169dd:	(bad)  
  4169de:	enter  0x83a2,0x2b
  4169e2:	(bad)  
  4169e3:	jp     0x4169f3
  4169e5:	xchg   esp,eax
  4169e6:	ret    
  4169e7:	or     dh,BYTE PTR [esi+0x6b]
  4169ea:	or     BYTE PTR [edx],cl
  4169ec:	push   0x674d6e0e
  4169f1:	fdiv   st(7),st
  4169f3:	mov    ds:0x5e7ae6c2,eax
  4169f8:	cli    
  4169f9:	cdq    
  4169fa:	add    BYTE PTR [eax],0xdd
  4169fd:	adc    dl,BYTE PTR [edi-0x1aa5e180]
  416a03:	ins    DWORD PTR es:[edi],dx
  416a04:	rcl    cl,1
  416a06:	(bad)  
  416a08:	mov    ds:0x4681be67,al
  416a0d:	out    0xf6,ax
  416a10:	mov    ebx,ss
  416a12:	push   eax
  416a13:	adc    DWORD PTR [ebp+0x72],eax
  416a16:	xor    eax,0x67aac4
  416a1b:	aas    
  416a1c:	mov    eax,ds:0x96ad565
  416a21:	data16 je 0x416a25
  416a24:	int3   
  416a25:	inc    edx
  416a26:	push   eax
  416a27:	cmp    DWORD PTR [ecx-0x4a],esi
  416a2a:	cld    
  416a2b:	pop    ds
  416a2c:	and    DWORD PTR [edi+0x13],0xffc29269
  416a33:	imul   eax,DWORD PTR [ecx],0xe4e57466
  416a39:	inc    edx
  416a3a:	jmp    0xfed1312d
  416a3f:	outs   dx,BYTE PTR ds:[esi]
  416a40:	enter  0xc030,0xc6
  416a44:	pusha  
  416a45:	retf   
  416a46:	(bad)  
  416a47:	sub    edx,DWORD PTR [ebp-0x429dacfe]
  416a4d:	mov    ch,0x4e
  416a4f:	mov    edx,0x9ef07b50
  416a54:	sbb    ebp,DWORD PTR [ebp+0x74]
  416a57:	out    dx,eax
  416a58:	inc    esp
  416a59:	(bad)  
  416a5a:	imul   ebp,ecx,0xf5136748
  416a60:	add    BYTE PTR [eax+0x6569ffc2],dh
  416a66:	test   BYTE PTR [eax-0x42fd897c],0xe9
  416a6d:	scas   al,BYTE PTR es:[edi]
  416a6e:	add    al,BYTE PTR [eax]
  416a70:	mov    dh,0x56
  416a72:	inc    edx
  416a73:	dec    ecx
  416a74:	push   es
  416a75:	cmp    BYTE PTR [ebx-0x28],0x64
  416a79:	push   esp
  416a7a:	test   DWORD PTR [ebx+0x29965],0xfff9ca6a
  416a84:	pop    esp
  416a85:	scas   eax,DWORD PTR es:[edi]
  416a86:	fdivr  st,st(7)
  416a88:	fst    st(3)
  416a8a:	stc    
  416a8b:	cld    
  416a8c:	cld    
  416a8d:	scas   al,BYTE PTR es:[edi]
  416a8e:	adc    eax,DWORD PTR [eax-0x17]
  416a91:	mov    eax,DWORD PTR [eax]
  416a93:	(bad)  
  416a94:	inc    esp
  416a96:	add    DWORD PTR [ecx+0x63],esi
  416a99:	cmp    DWORD PTR [ecx+edi*8],edi
  416a9c:	push   eax
  416a9d:	aas    
  416a9e:	cmp    al,0x5
  416aa0:	push   edi
  416aa1:	mov    bh,0xd7
  416aa3:	outs   dx,DWORD PTR ds:[esi]
  416aa4:	or     BYTE PTR ds:0x91fff955,cl
  416aaa:	xchg   ecx,eax
  416aab:	adc    DWORD PTR [eax+0x74],eax
  416aae:	jl     0x416a70
  416ab0:	je     0x416a70
  416ab2:	jmp    0x416af4
  416ab4:	cld    
  416ab5:	add    edx,eax
  416ab7:	jae    0x416af2
  416ab9:	jne    0x416af7
  416abb:	cmc    
  416abc:	sub    DWORD PTR [ecx-0x27],0x1440cc9
  416ac3:	jae    0x416afc
  416ac5:	add    cl,al
  416ac7:	out    dx,eax
  416ac8:	jae    0x416a82
  416aca:	iret   
  416acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416acc:	add    DWORD PTR [ebx],eax
  416ace:	jl     0x416a99
  416ad0:	ror    DWORD PTR [edx-0x15],0xd6
  416ad4:	add    eax,0xfffffff0
  416ad7:	sbb    edi,ebx
  416ad9:	jne    0x416b43
  416adb:	jmp    0x504e:0xfcf20305
  416ae2:	retf   
  416ae3:	or     al,0x30
  416ae5:	push   ss
  416ae6:	inc    esp
  416ae7:	add    DWORD PTR [edi-0x3b7d57bb],eax
  416aed:	or     al,0xf5
  416aef:	ds add ebx,ebp
  416af2:	pop    ebx
  416af3:	push   edx
  416af4:	in     eax,0x5f
  416af6:	das    
  416af7:	(bad)  
  416af8:	cli    
  416af9:	mov    al,0xf5
  416afb:	leave  
  416afc:	push   cs
  416afd:	push   ebx
  416afe:	pushf  
  416aff:	dec    esp
  416b00:	dec    eax
  416b01:	dec    ebx
  416b03:	jle    0x416afb
  416b05:	je     0x416aca
  416b07:	xlat   BYTE PTR ds:[ebx]
  416b08:	xor    eax,0xfca58ee8
  416b0d:	call   FWORD PTR [ebp+0x5b5d4409]
  416b13:	xor    BYTE PTR [ebx],bh
  416b15:	ret    0x5ba5
  416b18:	ror    BYTE PTR [eax+0x1457d7b9],1
  416b1e:	dec    esi
  416b1f:	add    al,0x35
  416b21:	fldz   
  416b23:	rol    DWORD PTR [ebx-0x24a66300],0x1
  416b2a:	add    dh,ch
  416b2c:	lsl    ebp,WORD PTR [eax-0x63]
  416b30:	pop    ecx
  416b31:	add    DWORD PTR [eax+0x7a],eax
  416b34:	psubb  mm0,QWORD PTR [edi+0x13697cd0]
  416b3b:	lods   eax,DWORD PTR ds:[esi]
  416b3c:	inc    edi
  416b3d:	sar    edi,0x17
  416b40:	repnz test ch,bh
  416b43:	pop    edx
  416b44:	inc    ebp
  416b45:	jge    0x416ae2
  416b47:	popf   
  416b48:	pop    ecx
  416b49:	add    DWORD PTR [esi+0xb],edx
  416b4c:	pop    edx
  416b4d:	adc    DWORD PTR [eax],eax
  416b4f:	popf   
  416b50:	mov    ds:0xb4e7e459,eax
  416b55:	push   0x2d25d887
  416b5a:	shl    DWORD PTR [ecx+0x255b7cae],0x73
  416b61:	enter  0x910f,0x4a
  416b65:	(bad)  
  416b66:	cld    
  416b67:	mov    BYTE PTR [ecx+0x6a],ch
  416b6a:	adc    ebp,DWORD PTR [ebp-0x3e003e98]
  416b70:	push   edi
  416b71:	add    al,0x0
  416b73:	popf   
  416b74:	mov    cs,ebp
  416b76:	mov    bl,BYTE PTR [eax+0x69]
  416b79:	ror    DWORD PTR [eax-0x3308ea0],1
  416b7f:	push   0xa5706a65
  416b84:	push   esp
  416b85:	adc    BYTE PTR [eax+0x42702a8],dl
  416b8b:	push   ds
  416b8c:	inc    ebx
  416b8d:	push   ebx
  416b8e:	sub    BYTE PTR [eax],al
  416b90:	adc    al,0xbe
  416b92:	(bad)  
  416b93:	cs fsub st(6),st
  416b96:	add    BYTE PTR ds:0xe8686a5e,al
  416b9c:	mov    dl,0x2
  416b9e:	out    0xa3,eax
  416ba0:	popf   
  416ba1:	jmp    0x416ba2
  416ba3:	(bad)  
  416ba4:	daa    
  416ba5:	mov    ch,0xba
  416ba7:	aam    0xe2
  416ba9:	arpl   WORD PTR [eax+esi*2],bx
  416bac:	lock arpl sp,si
  416baf:	daa    
  416bb0:	scas   eax,DWORD PTR es:[edi]
  416bb1:	ret    0x80e6
  416bb4:	pop    ebp
  416bb5:	out    dx,al
  416bb6:	repz jle 0x416b97
  416bb9:	jb     0x416b7d
  416bbb:	shl    BYTE PTR [esi-0x12],0x49
  416bbf:	pop    esi
  416bc0:	xchg   esp,eax
  416bc1:	retf   
  416bc2:	jne    0x416bd4
  416bc4:	mov    DWORD PTR [eax],edx
  416bc6:	daa    
  416bc7:	add    al,0x5b
  416bc9:	mov    ebp,0xed480465
  416bce:	push   edx
  416bcf:	pop    ebx
  416bd0:	adc    eax,0xd06a55b8
  416bd5:	arpl   sp,si
  416bd7:	mov    ds:0xc9e6c28f,eax
  416bdc:	jb     0x416ba3
  416bde:	cmp    eax,0xbc639af0
  416be3:	test   DWORD PTR [edx],0x106a74cc
  416be9:	js     0x416b97
  416beb:	push   0x68
  416bed:	(bad)  
  416bee:	das    
  416bef:	inc    ebp
  416bf0:	xchg   ecx,eax
  416bf1:	add    bh,BYTE PTR [esi+edi*2-0x480f700]
  416bf8:	or     cl,BYTE PTR [esp+ecx*8-0x63]
  416bfc:	push   0x6e
  416bfe:	imul   BYTE PTR [ebx-0x10]
  416c01:	neg    BYTE PTR [ecx+0x0]
  416c04:	jno    0x416be4
  416c06:	(bad)  
  416c07:	std    
  416c08:	gs pop esi
  416c0a:	out    dx,al
  416c0b:	dec    ecx
  416c0c:	imul   eax,edx,0xc2540268
  416c12:	fadd   DWORD PTR [ebx]
  416c14:	ss pop eax
  416c16:	add    BYTE PTR [ecx],dh
  416c18:	into   
  416c19:	inc    esp
  416c1a:	out    dx,eax
  416c1b:	(bad)  
  416c1d:	mov    edx,0x3134fcfa
  416c22:	gs jae 0x416bea
  416c25:	stc    
  416c26:	or     esp,edi
  416c28:	scas   al,BYTE PTR es:[edi]
  416c29:	add    al,0x87
  416c2b:	rcr    BYTE PTR ds:0x99735fad,0x0
  416c32:	dec    eax
  416c33:	mov    DWORD PTR [edi-0x71036327],esp
  416c39:	add    al,0x87
  416c3b:	sar    ch,0x6a
  416c3e:	xchg   ebx,eax
  416c3f:	call   DWORD PTR [ecx+0x76d9149b]
  416c45:	dec    edx
  416c46:	outs   dx,BYTE PTR ds:[esi]
  416c47:	call   0xfda07d27
  416c4c:	data16 cmp dh,BYTE PTR [edx-0x18]
  416c50:	repz add BYTE PTR [edi-0x3],bl
  416c54:	arpl   ax,sp
  416c56:	mov    edi,0x7700b25d
  416c5b:	inc    esp
  416c5c:	or     al,0xe9
  416c5e:	pop    ebx
  416c5f:	mov    ebp,esp
  416c61:	cwde   
  416c62:	dec    edi
  416c63:	jmp    0xd4fe:0x61debe03
  416c6a:	call   0xf7c5:0x87e94011
  416c71:	fs pop ecx
  416c73:	aad    0x1
  416c75:	and    BYTE PTR [eax-0x4d],ah
  416c78:	push   esp
  416c79:	or     DWORD PTR [esi-0xbffc029],0xe3ff3035
  416c83:	adc    BYTE PTR [edx+edx*1-0x2778f9fc],bh
  416c8a:	cmp    edi,ecx
  416c8c:	jae    0x416cd2
  416c8e:	ins    BYTE PTR es:[edi],dx
  416c8f:	add    dl,BYTE PTR [eax]
  416c91:	add    BYTE PTR [edi+edi*1-0x196600fb],dh
  416c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c99:	inc    ebx
  416c9a:	(bad)  
  416c9b:	jmp    0x8afd:0x45c70410
  416ca2:	fsubr  st(0),st
  416ca4:	cli    
  416ca5:	je     0x416c46
  416ca7:	xor    al,0x8a
  416ca9:	inc    ebp
  416caa:	inc    eax
  416cab:	xor    eax,0x5a43be54
  416cb0:	std    
  416cb1:	jmp    FWORD PTR [esi+0x10758506]
  416cb7:	jmp    0x8b0b:0x704485ce
  416cbe:	add    BYTE PTR [ecx+0x73c636ea],bh
  416cc4:	inc    esi
  416cc5:	ret    
  416cc6:	(bad)  
  416cc7:	dec    eax
  416cc8:	add    al,BYTE PTR [eax]
  416cca:	jmp    0x416d06
  416ccc:	xor    ah,ch
  416cce:	(bad)  
  416ccf:	or     eax,0xe35efaea
  416cd4:	jo     0x416ccb
  416cd6:	(bad)  
  416cd7:	cmp    DWORD PTR [ecx+0xf],ecx
  416cda:	inc    eax
  416cdb:	inc    esp
  416cdc:	faddp  st(2),st
  416cde:	pop    edi
  416cdf:	call   FWORD PTR [ebx]
  416ce1:	mov    edi,0x4cb9af55
  416ce6:	sub    ecx,0xffffffe8
  416ce9:	call   DWORD PTR [ebp+0x7f]
  416cec:	xor    BYTE PTR [ebp+edx*1+0x34],ah
  416cf0:	add    eax,0xe9398d53
  416cf5:	dec    edi
  416cf6:	push   0xffffff9d
  416cf8:	imul   ebx,ebx,0x21
  416cfb:	bnd jne 0x416cf7
  416cfe:	cld    
  416cff:	shr    ebp,cl
  416d01:	inc    eax
  416d02:	jae    0x416d59
  416d04:	inc    edx
  416d05:	mov    esi,0x68ac51fb
  416d0a:	adc    esi,DWORD PTR [ebp+0x1fffc13a]
  416d10:	arpl   dx,bp
  416d12:	jb     0x416c99
  416d14:	aam    0xbe
  416d16:	sti    
  416d17:	pop    ebp
  416d18:	mov    edi,0x228de831
  416d1d:	gs std 
  416d1f:	push   ss
  416d20:	inc    ebx
  416d21:	jg     0x416d20
  416d23:	add    BYTE PTR [ecx],ch
  416d25:	or     BYTE PTR [edi+0x43],dh
  416d28:	cdq    
  416d29:	cli    
  416d2a:	int3   
  416d2b:	imul   edi,DWORD PTR [edi-0x75f81050],0x9cf881a0
  416d35:	not    BYTE PTR [ebx]
  416d37:	mov    eax,esp
  416d39:	gs add al,0xe9
  416d3d:	data16 jp 0x416d8b
  416d40:	imul   edx,ebx,0x755a88fb
  416d46:	cld    
  416d47:	push   esp
  416d48:	inc    ebp
  416d49:	inc    eax
  416d4a:	mov    esp,0x419d52fc
  416d4f:	pop    ebp
  416d50:	jmp    0x416d64
  416d52:	inc    edx
  416d53:	or     BYTE PTR [ebp-0x3313856a],bl
  416d59:	in     al,dx
  416d5a:	fdivp  st(3),st
  416d5c:	popf   
  416d5d:	xchg   edi,eax
  416d5e:	jp     0x416d93
  416d60:	mov    cl,0x3e
  416d62:	sar    edi,0xcb
  416d65:	out    dx,al
  416d66:	mov    esi,0x1436dfb
  416d6b:	std    
  416d6c:	mov    BYTE PTR ds:0x2957366,bh
  416d72:	es dec esi
  416d74:	push   ds
  416d75:	inc    ebx
  416d76:	xchg   esp,eax
  416d77:	es mov dl,0xc5
  416d7a:	adc    dh,al
  416d7c:	mov    ah,0x5f
  416d7e:	hlt    
  416d7f:	or     ebx,DWORD PTR [edx-0x1a7d193e]
  416d85:	fdiv   QWORD PTR [ebx+0x16]
  416d88:	add    BYTE PTR [esi+eax*8],ah
  416d8b:	repnz sbb ch,0x4
  416d8f:	jae    0x416daf
  416d91:	mov    ch,0x7e
  416d93:	das    
  416d94:	ror    BYTE PTR [bp+di-0x7f21],0xb8
  416d9a:	(bad)  
  416d9b:	bnd js 0x416dfc
  416d9e:	pop    esi
  416d9f:	aaa    
  416da0:	iret   
  416da1:	test   eax,0x2e66f2d5
  416da6:	or     bh,BYTE PTR [esi-0x17a5e3b3]
  416dac:	lock sahf 
  416dae:	mov    esp,DWORD PTR [esi-0x71486aa6]
  416db4:	cwde   
  416db5:	aad    0x5f
  416db7:	sahf   
  416db8:	xor    bl,BYTE PTR [ebp-0x41]
  416dbb:	xor    al,0x3d
  416dbd:	pop    edi
  416dbe:	or     ah,bh
  416dc0:	rcl    BYTE PTR ds:0x1dd5186e,1
  416dc6:	in     eax,0x7a
  416dc8:	add    ebp,esp
  416dca:	mov    eax,0xece671d
  416dcf:	outs   dx,BYTE PTR ds:[esi]
  416dd0:	adc    ch,al
  416dd2:	hlt    
  416dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd4:	add    eax,DWORD PTR [eax-0x2b]
  416dd7:	bnd jp 0x416e48
  416dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ddb:	cld    
  416ddc:	ret    
  416ddd:	xor    cl,BYTE PTR [edi+ebp*1-0x68a12188]
  416de4:	data16 scas al,BYTE PTR es:[edi]
  416de6:	push   cs
  416de7:	jle    0x416e4f
  416de9:	sbb    BYTE PTR [edx],al
  416deb:	add    cl,ch
  416ded:	add    bl,ah
  416def:	pop    ebp
  416df0:	jae    0x416dd3
  416df2:	cmp    DWORD PTR [eax],0xffffff83
  416df5:	sub    DWORD PTR ds:0xa6f4fcbb,ecx
  416dfb:	cmovo  ebp,ecx
  416dfe:	pop    ds
  416dff:	pop    edx
  416e00:	jp     0x416d96
  416e02:	ror    DWORD PTR [ecx+0x3ab70543],1
  416e08:	or     eax,0x73c25fa6
  416e0d:	scas   eax,DWORD PTR es:[edi]
  416e0e:	jbe    0x416e0f
  416e10:	inc    edi
  416e11:	out    dx,al
  416e12:	inc    eax
  416e13:	xchg   DWORD PTR [ebx-0x1f],eax
  416e16:	inc    edx
  416e17:	inc    edx
  416e18:	je     0x416e3d
  416e1a:	fdiv   QWORD PTR [ecx-0x314aa304]
  416e20:	cld    
  416e21:	hlt    
  416e22:	call   0x13d3:0x39e9400f
  416e29:	ins    BYTE PTR es:[edi],dx
  416e2a:	pop    edx
  416e2b:	pop    edx
  416e2c:	push   eax
  416e2d:	mov    dh,0x82
  416e2f:	push   esi
  416e30:	push   ebp
  416e31:	scas   al,BYTE PTR es:[edi]
  416e32:	jp     0x416e3a
  416e34:	std    
  416e35:	mov    edi,0x13ff5b1c
  416e3a:	mov    cs,WORD PTR [ebx+0x42f3f943]
  416e40:	je     0x416e26
  416e42:	in     eax,0xc9
  416e44:	sti    
  416e45:	jo     0x416ea8
  416e47:	mov    eax,DWORD PTR [ebx-0x7f]
  416e4a:	hlt    
  416e4b:	or     ch,bh
  416e4d:	cld    
  416e4e:	(bad)  
  416e4f:	push   0x11
  416e51:	and    DWORD PTR [eax],eax
  416e53:	rcr    BYTE PTR [edi+0x31],0x29
  416e57:	pop    eax
  416e58:	rcr    BYTE PTR [eax+0x30],0xdf
  416e5c:	repnz (bad) 
  416e5e:	mov    ebx,0x3d816eb5
  416e63:	and    eax,0xaf0055b3
  416e68:	sub    eax,0x2441564
  416e6d:	push   ebx
  416e6e:	push   0x0
  416e70:	dec    ebx
  416e71:	mov    al,BYTE PTR [ebp-0x48]
  416e74:	mov    al,BYTE PTR ss:[ebp-0x60]
  416e78:	ss addr16 adc eax,0x89056d9b
  416e7f:	sub    esi,esp
  416e81:	cli    
  416e82:	(bad)  
  416e83:	jg     0x416eaa
  416e85:	jl     0x416e9c
  416e87:	xor    al,0x2
  416e89:	out    0x1a,eax
  416e8b:	dec    edi
  416e8c:	popf   
  416e8d:	icebp  
  416e8e:	test   DWORD PTR [edx+edx*2-0x19d672e2],eax
  416e95:	dec    esp
  416e96:	lea    ecx,[ecx-0x4e95b32e]
  416e9c:	xor    DWORD PTR [esi+0x58d8bc45],eax
  416ea2:	cld    
  416ea3:	fcmovne st,st(7)
  416ea5:	cli    
  416ea6:	jne    0x416e54
  416ea8:	fadd   DWORD PTR [eax-0x8]
  416eab:	pop    ebx
  416eac:	into   
  416ead:	jle    0x416f2c
  416eaf:	dec    esp
  416eb0:	add    DWORD PTR [ecx-0x28],esi
  416eb3:	fwait
  416eb4:	inc    esp
  416eb5:	pop    eax
  416eb6:	leave  
  416eb7:	add    BYTE PTR [esi],dh
  416eb9:	pop    ebp
  416eba:	std    
  416ebb:	push   esp
  416ebc:	out    dx,eax
  416ebd:	mov    ch,0x4c
  416ebf:	push   ecx
  416ec0:	adc    ebx,DWORD PTR [ecx+ecx*1+0x60017400]
  416ec7:	je     0x416f39
  416ec9:	adc    al,al
  416ecb:	jmp    0x416e75
  416ecd:	and    DWORD PTR [ecx-0x8],0x44
  416ed1:	xor    dl,BYTE PTR [ebx-0x75]
  416ed4:	adc    DWORD PTR [ebp+0x11],edi
  416ed7:	inc    eax
  416ed8:	xor    al,0x3b
  416eda:	std    
  416edb:	mov    WORD PTR [ecx],es
  416edd:	jmp    0xaedefc31
  416ee2:	fs push eax
  416ee4:	sub    dh,BYTE PTR [esi]
  416ee6:	cmc    
  416ee7:	cld    
  416ee8:	test   al,0x53
  416eea:	fs (bad) 
  416eec:	and    BYTE PTR [ebx],ch
  416eee:	out    dx,al
  416eef:	inc    ebp
  416ef0:	adc    bh,BYTE PTR [esi]
  416ef2:	or     DWORD PTR [edi],ecx
  416ef4:	pop    ebp
  416ef5:	imul   eax,DWORD PTR [eax+0x287e87f8],0xffffff89
  416efc:	pusha  
  416efd:	and    eax,ecx
  416eff:	jae    0x416ea9
  416f01:	add    ebp,DWORD PTR [edi]
  416f03:	inc    ebp
  416f04:	jmp    0xed20:0x18d8780b
  416f0b:	sub    DWORD PTR [edi+0x6b],eax
  416f0e:	jbe    0x416f53
  416f10:	aad    0x7a
  416f12:	sar    ah,1
  416f14:	push   eax
  416f15:	aas    
  416f16:	fs jae 0x416eae
  416f19:	cmp    al,BYTE PTR fs:[ecx-0x27964b00]
  416f20:	(bad)  
  416f22:	cs hlt 
  416f24:	sbb    ch,0xb6
  416f27:	push   es
  416f28:	mov    DWORD PTR [eax+0x43],edx
  416f2b:	mov    ecx,DWORD PTR [eax]
  416f2d:	es test eax,0x41ee086d
  416f33:	pop    ss
  416f34:	inc    ebp
  416f35:	mov    ch,BYTE PTR [ebp-0x3f1c3feb]
  416f3b:	dec    edx
  416f3c:	ret    0x69a9
  416f3f:	mov    eax,0x6fe98188
  416f44:	adc    dh,cl
  416f46:	adc    edi,DWORD PTR [ecx+0x53d16230]
  416f4c:	aaa    
  416f4d:	fcom   DWORD PTR [ecx-0x2b]
  416f50:	dec    ecx
  416f51:	jmp    0x6269:0x9d004c01
  416f58:	jae    0x416eef
  416f5a:	add    dh,BYTE PTR [ecx+eax*8+0x36]
  416f5e:	imul   eax,eax,0xffffff85
  416f61:	xor    bl,BYTE PTR [eax+eiz*2-0x37]
  416f65:	sbb    BYTE PTR cs:[esi],ah
  416f68:	adc    ebx,DWORD PTR [ecx]
  416f6a:	xchg   ebx,eax
  416f6b:	call   0xa4c90c73
  416f70:	pop    edi
  416f71:	sbb    al,0x5b
  416f73:	ficom  WORD PTR [edx]
  416f75:	pop    ds
  416f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f77:	call   0xfe2a0c7f
  416f7c:	push   ss
  416f7d:	iret   
  416f7e:	mov    ecx,0xb4005515
  416f83:	xor    esp,esi
  416f85:	mov    BYTE PTR [esi],cl
  416f87:	add    ah,bh
  416f89:	add    ecx,DWORD PTR [eax-0x18]
  416f8c:	mov    ah,BYTE PTR [edx+0x4e]
  416f8f:	or     ch,BYTE PTR [ecx+eax*8-0x36]
  416f93:	mov    DWORD PTR [edi+ebx*2+0x56920b5],ebp
  416f9a:	popf   
  416f9b:	or     DWORD PTR [bx+di+0x5e5e],edx
  416fa0:	aaa    
  416fa1:	ins    BYTE PTR es:[edi],dx
  416fa2:	push   ss
  416fa3:	push   edi
  416fa4:	(bad)  
  416fa5:	bound  esp,QWORD PTR [edx]
  416fa7:	(bad)  
  416fa8:	rcr    BYTE PTR [esi],cl
  416faa:	fmul   DWORD PTR [ebx]
  416fac:	imul   esi,ecx,0xffffff9b
  416faf:	pop    ebx
  416fb0:	out    0x90,eax
  416fb2:	ficomp WORD PTR [edx+0x17]
  416fb5:	in     al,dx
  416fb6:	xor    al,BYTE PTR [edx]
  416fb8:	out    0x3,eax
  416fba:	jne    0x416fc6
  416fbc:	xchg   edi,eax
  416fbd:	bound  edi,QWORD PTR [eax-0x79]
  416fc0:	lahf   
  416fc1:	mov    BYTE PTR [eax+0xb],dh
  416fc4:	imul   ecx,ebx,0x6b
  416fc7:	pop    ebx
  416fc8:	out    0x86,eax
  416fca:	out    0x5a,al
  416fcc:	mov    bh,0x12
  416fce:	pop    ds
  416fcf:	sbb    al,0xe8
  416fd1:	add    ebx,DWORD PTR [ebp-0x16d3ff79]
  416fd7:	mov    ch,0xe7
  416fd9:	cmc    
  416fda:	pop    es
  416fdb:	pop    esi
  416fdc:	std    
  416fdd:	ins    BYTE PTR es:[edi],dx
  416fde:	fimul  WORD PTR ds:0x2980c8e
  416fe4:	add    BYTE PTR [edx+0x0],ch
  416fe7:	cmp    eax,0x85d50003
  416fec:	mov    ah,0xe7
  416fee:	and    DWORD PTR [edx+eax*1-0x30a19b00],esp
  416ff5:	adc    al,0xfa
  416ff7:	fs pop ebp
  416ff9:	jae    0x417030
  416ffb:	jbe    0x416fcf
  416ffd:	inc    ebp
  416ffe:	es jg  0x416fb6
  417001:	out    0x93,eax
  417003:	in     al,0x5d
  417005:	std    
  417006:	bound  edx,QWORD PTR [ebx+eiz*2+0x15]
  41700a:	call   0x7d3e72ad
  41700f:	jb     0x416f9a
  417011:	inc    ebx
  417012:	std    
  417013:	inc    edi
  417014:	shl    bl,cl
  417016:	idiv   BYTE PTR [ebx*2+0x6304f173]
  41701d:	rcr    dl,1
  41701f:	cmp    al,0x5d
  417021:	mov    DWORD PTR [edi*1+0x23e5bfe9],esp
  417028:	inc    edx
  417029:	je     0x417008
  41702b:	ss pop es
  41702d:	inc    esi
  41702e:	(bad)  
  41702f:	cld    
  417030:	add    DWORD PTR [ebx-0xf],0xec73431b
  417037:	js     0x417091
  417039:	pop    esi
  41703a:	ret    0x8e3d
  41703d:	pop    esi
  41703e:	icebp  
  41703f:	xor    DWORD PTR [edi+0x13],edx
  417042:	lea    ebp,[ebx+0x1a]
  417045:	add    BYTE PTR [edx-0x29],ah
  417048:	push   0x24
  41704a:	jmp    0x8900:0x89029e00
  417051:	mov    edx,0x876c4684
  417056:	inc    ecx
  417057:	cld    
  417058:	mov    ebp,0x798b294c
  41705d:	push   es
  41705e:	test   DWORD PTR [esi-0x6c],eax
  417061:	out    0x89,al
  417063:	out    dx,al
  417064:	inc    esp
  417065:	push   es
  417066:	das    
  417067:	ror    bl,cl
  417069:	xor    ecx,edi
  41706b:	mov    edi,ecx
  41706d:	mov    ebp,0x25e2894e
  417072:	test   DWORD PTR [esi-0x68],eax
  417075:	lea    edx,[esi+0x34]
  417078:	rcl    DWORD PTR [ecx-0x13],cl
  41707b:	adc    dh,BYTE PTR [esi+eax*1]
  41707e:	das    
  41707f:	(bad)  
  417080:	std    
  417081:	arpl   WORD PTR [ecx],di
  417083:	jne    0x41706b
  417085:	call   0xb810:0xe32b5754
  41708c:	out    0x45,al
  41708e:	std    
  41708f:	mov    BYTE PTR [edx],cl
  417091:	cli    
  417092:	ss (bad) 
  417094:	dec    ecx
  417095:	push   esp
  417096:	push   esp
  417097:	call   0x3db246
  41709c:	sub    ebp,esi
  41709e:	iret   
  41709f:	inc    ebp
  4170a0:	ret    
  4170a1:	loop   0x41710c
  4170a3:	(bad)  
  4170a4:	pop    esp
  4170a5:	out    0x7a,eax
  4170a7:	dec    DWORD PTR [edx+0x22]
  4170aa:	sti    
  4170ab:	adc    eax,0x3d4fe8
  4170b0:	add    BYTE PTR [ecx],dl
  4170b2:	inc    esp
  4170b3:	xor    eax,0xc2f6878b
  4170b8:	je     0x417050
  4170ba:	mov    DWORD PTR [ecx+0x8],ecx
  4170bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170be:	mov    ?,esp
  4170c0:	adc    eax,0x3d5464
  4170c5:	stc    
  4170c6:	lds    esi,FWORD PTR [ebx+0x13]
  4170c9:	popf   
  4170ca:	jmp    0x1:0x6a9e07dd
  4170d1:	rcl    DWORD PTR [ebp+0x60],1
  4170d4:	xor    DWORD PTR [edx+0x2e],edx
  4170d7:	mov    eax,ds:0x8a6bdd12
  4170dc:	cmp    DWORD PTR [esp+edx*4+0x612622d6],eax
  4170e3:	add    eax,0xbc33cb51
  4170e8:	pop    ebx
  4170e9:	fsubr  QWORD PTR [ebx-0x17]
  4170ec:	jmp    DWORD PTR [edx]
  4170ee:	arpl   WORD PTR [ecx],ax
  4170f0:	call   0x4270d9
  4170f5:	sbb    DWORD PTR [ebx],ebp
  4170f7:	(bad)  
  4170f8:	or     BYTE PTR [edi+0x6b],dh
  4170fb:	imul   esi,DWORD PTR [eax+ebx*2+0x28],0xf49d6a60
  417103:	jnp    0x417136
  417105:	(bad)
  41710a:	lock pop edi
  41710c:	push   ebp
  41710d:	cmc    
  41710e:	mov    esi,es
  417110:	cld    
  417111:	ficomp DWORD PTR [ebx-0x39ffbfbf]
  417117:	cmp    DWORD PTR [eax+0x73],esp
  41711a:	rol    DWORD PTR [edx],1
  41711c:	mov    dh,0x42
  41711e:	ret    0xb567
  417121:	out    0x6a,eax
  417123:	es pop ebp
  417125:	std    
  417126:	push   ds
  417127:	xchg   ebx,eax
  417128:	pop    ebp
  417129:	pop    ebp
  41712a:	dec    ebx
  41712b:	adc    al,0x4b
  41712d:	ret    0x6b99
  417130:	mov    eax,0xb2fb8988
  417135:	push   eax
  417136:	jmp    0xdee2:0xf207dde6
  41713d:	test   DWORD PTR [edx-0x22ed92d1],0x5412e702
  417147:	sbb    bh,BYTE PTR ds:0x61cef12c
  41714d:	(bad)  
  41714e:	mov    dh,0x1b
  417150:	stos   BYTE PTR es:[edi],al
  417151:	fadd   st,st(7)
  417153:	mov    DWORD PTR [eax+eiz*2],esp
  417156:	retf   
  417157:	adc    BYTE PTR [esi-0x3a],bh
  41715a:	mov    cs,WORD PTR [ebx+0x348c182d]
  417160:	jbe    0x417138
  417162:	xchg   BYTE PTR [ecx+0x34c417bd],cl
  417168:	jmp    0x41716c
  41716a:	rcl    DWORD PTR [edx],cl
  41716c:	bound  ebx,QWORD PTR [edx+0x6a]
  41716f:	mov    bh,0xde
  417171:	xlat   BYTE PTR ds:[ebx]
  417172:	ret    0xdc57
  417175:	shrd   edx,eax,0xe6
  417179:	sub    al,BYTE PTR [eax]
  41717b:	pusha  
  41717c:	or     dh,ah
  41717e:	arpl   WORD PTR [edi+edi*8],bp
  417181:	out    0xd2,al
  417183:	stos   BYTE PTR es:[edi],al
  417184:	push   edi
  417185:	lods   al,BYTE PTR ds:[esi]
  417186:	pop    edi
  417187:	and    al,0xbe
  417189:	sbb    bl,BYTE PTR [ebx]
  41718b:	arpl   WORD PTR [esi],sp
  41718d:	cdq    
  41718e:	dec    ecx
  41718f:	loopne 0x41715e
  417191:	push   cs
  417192:	imul   ecx,DWORD PTR [ebx+0x708ce689],0xfffffffe
  417199:	outs   dx,DWORD PTR ds:[esi]
  41719a:	mov    edi,0x17ad8ba2
  41719f:	xor    al,0x42
  4171a1:	(bad)  
  4171a2:	add    ah,BYTE PTR [ebx+0x2a]
  4171a5:	push   ecx
  4171a6:	mul    DWORD PTR [edx+0x57]
  4171a9:	push   esp
  4171aa:	or     al,0xa8
  4171ac:	in     eax,dx
  4171ad:	push   ss
  4171ae:	mul    BYTE PTR [edx+0x2]
  4171b1:	push   0x47
  4171b3:	test   eax,0x905c3c57
  4171b8:	in     eax,dx
  4171b9:	mov    dh,0xf1
  4171bb:	retf   0x2
  4171be:	jns    0x417159
  4171c0:	imul   eax,DWORD PTR [edi],0xeff3da16
  4171c6:	sti    
  4171c7:	pop    esi
  4171c8:	push   edi
  4171c9:	das    
  4171ca:	test   eax,0xabc6ba2b
  4171cf:	call   0xec81:0xca625302
  4171d6:	(bad)  [edi]
  4171d8:	scas   al,BYTE PTR es:[edi]
  4171d9:	lds    esp,FWORD PTR [edx+ebp*8]
  4171dc:	add    bh,ch
  4171de:	fadd   QWORD PTR [eax]
  4171e0:	xchg   edx,eax
  4171e1:	icebp  
  4171e2:	aas    
  4171e3:	jmp    0xafcccc0f
  4171e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e9:	mov    dl,0x86
  4171eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ec:	into   
  4171ed:	push   ebp
  4171ee:	adc    eax,DWORD PTR [ebp+0x2c]
  4171f1:	pop    ss
  4171f2:	add    BYTE PTR [edx],bl
  4171f4:	(bad)  
  4171f5:	jg     0x417252
  4171f7:	inc    ecx
  4171f8:	mov    cl,0xb8
  4171fa:	sub    esi,DWORD PTR [edi-0x1ebc7615]
  417200:	pop    ds
  417201:	inc    edx
  417202:	add    al,0x60
  417204:	in     eax,0x52
  417206:	xchg   esp,eax
  417208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417209:	mov    DWORD PTR [esi-0x2f],eax
  41720c:	hlt    
  41720d:	icebp  
  41720e:	mov    ch,BYTE PTR [ebp+0xe5002e6]
  417214:	cmc    
  417215:	push   edx
  417216:	std    
  417217:	fdiv   QWORD PTR [edx+0x1fe93ff0]
  41721d:	ds or  al,0x6c
  417220:	pop    esi
  417221:	rol    DWORD PTR [edx+eiz*2-0x20],cl
  417225:	add    DWORD PTR es:[ecx+eiz*4],ebp
  417229:	cmp    BYTE PTR [ebx-0x13],0x9e
  41722d:	ror    DWORD PTR [ebx],cl
  41722f:	sbb    dl,BYTE PTR [esi+0x7f]
  417232:	or     BYTE PTR [eax+0x69],ah
  417235:	add    al,BYTE PTR [edi-0x18f93400]
  41723b:	sub    ecx,DWORD PTR [edi]
  41723d:	pop    es
  41723e:	or     ecx,0xd786f2c0
  417244:	add    BYTE PTR [edi-0x130582ef],bl
  41724a:	push   ebx
  41724b:	std    
  41724c:	inc    DWORD PTR [esi+0x7040fc55]
  417252:	ins    BYTE PTR es:[edi],dx
  417253:	add    bl,BYTE PTR [ecx-0x43]
  417256:	div    BYTE PTR [eax+ecx*2]
  417259:	inc    eax
  41725a:	xor    al,0x5
  41725c:	mov    DWORD PTR [esi+eax*1-0x14cfb77b],ebx
  417263:	add    eax,DWORD PTR [ebx-0x39fff95c]
  417269:	add    DWORD PTR [edi-0x45fe0104],esi
  41726f:	xchg   BYTE PTR [ebp-0x34],al
  417272:	add    DWORD PTR [ecx+0x8],0xfffffff8
  417276:	cmp    BYTE PTR [edi+0x293c9f17],0x72
  41727d:	jns    0x417236
  41727f:	jo     0x417271
  417281:	retf   
  417282:	dec    ebp
  417283:	in     eax,dx
  417284:	adc    al,BYTE PTR [edx+eax*1-0x76]
  417288:	inc    ebp
  417289:	mov    ebx,0xb6c95897
  41728e:	push   es
  41728f:	add    BYTE PTR [ebp+0x7f],dl
  417292:	sar    BYTE PTR [esi-0x1c],cl
  417295:	lods   al,BYTE PTR ds:[esi]
  417296:	sub    esp,0x10
  417299:	dec    edi
  41729a:	add    eax,DWORD PTR [edi+0x13880]
  4172a0:	add    BYTE PTR [edx],ah
  4172a2:	mov    DWORD PTR [esp-0x28],eax
  4172a6:	mov    bh,BYTE PTR [edi]
  4172a8:	cmp    al,0x0
  4172aa:	jae    0x417235
  4172ac:	inc    esp
  4172ad:	and    al,0xb0
  4172af:	or     dh,0xff
  4172b2:	popf   
  4172b3:	adc    eax,0x1f29ffea
  4172b8:	sub    BYTE PTR [eax],bl
  4172ba:	in     eax,dx
  4172bb:	mov    cl,0x1
  4172bd:	std    
  4172be:	mov    al,0xcf
  4172c0:	out    dx,al
  4172c1:	aas    
  4172c2:	popf   
  4172c3:	dec    esi
  4172c4:	(bad)  
  4172c5:	(bad)  
  4172c6:	jp     0x417333
  4172c8:	aad    0x6
  4172ca:	push   ds
  4172cb:	mov    ds:0xce200d02,eax
  4172d0:	add    BYTE PTR [eax],al
  4172d2:	popf   
  4172d3:	call   0x6be696bc
  4172d8:	adc    al,al
  4172da:	and    bh,bh
  4172dc:	daa    
  4172dd:	or     al,0xf6
  4172df:	in     eax,0xbf
  4172e1:	pop    es
  4172e2:	in     eax,dx
  4172e3:	int3   
  4172e4:	cmc    
  4172e5:	jmp    0x417276
  4172e7:	sub    eax,DWORD PTR [ecx+ecx*4]
  4172ea:	fimul  WORD PTR [ebx]
  4172ec:	test   eax,eax
  4172ee:	mov    cl,0x9
  4172f0:	xchg   DWORD PTR [ecx+0x79],ecx
  4172f3:	out    0x49,al
  4172f5:	je     0x4172ad
  4172f7:	call   0xfd5c:0xa800e7b1
  4172fe:	push   ss
  4172ff:	ret    
  417300:	xchg   DWORD PTR [ecx-0x47],eax
  417303:	loop   0x4172c9
  417305:	and    ebp,DWORD PTR [ecx-0x5c8ca422]
  41730b:	fld    QWORD PTR [eax+0x6b8f004d]
  417311:	push   0x256f1605
  417316:	or     BYTE PTR [esi],bl
  417318:	cmc    
  417319:	pop    ebx
  41731a:	mov    ebx,DWORD PTR [esi+0x53]
  41731d:	mov    cl,0xfc
  41731f:	mov    al,0x5b
  417321:	lock aas 
  417323:	popf   
  417324:	out    0x5b,al
  417326:	je     0x417351
  417328:	js     0x417393
  41732a:	stos   BYTE PTR es:[edi],al
  41732b:	sahf   
  41732c:	add    ah,bh
  41732e:	add    esp,DWORD PTR [ecx]
  417330:	inc    edx
  417331:	push   esp
  417332:	add    esp,ebx
  417334:	and    DWORD PTR [esi],0x4699af6
  41733a:	pop    ebx
  41733b:	or     DWORD PTR [edi],ebx
  41733d:	repz mov dl,0xf4
  417340:	(bad)  
  417341:	push   eax
  417342:	add    al,0xf7
  417344:	adc    BYTE PTR [esi+0x2cce8517],dh
  41734a:	add    al,0x9d
  41734c:	add    ebx,DWORD PTR [ebp+0x54]
  41734f:	jo     0x417386
  417351:	add    dl,BYTE PTR [edx-0x1e]
  417354:	pop    esp
  417355:	out    0x7a,eax
  417357:	add    DWORD PTR [edx],0xc41d4268
  41735d:	fadd   DWORD PTR [ebx]
  41735f:	lock push 0xffffffe1
  417362:	mov    BYTE PTR [ecx+0x54],0x80
  417366:	iret   
  417367:	cmp    DWORD PTR [esi+ebp*2-0x45],edx
  41736b:	rol    BYTE PTR [edi-0x4fa246b4],1
  417371:	jno    0x41732b
  417373:	add    BYTE PTR [esi+0xa],bh
  417376:	aas    
  417377:	(bad)  
  417378:	sbb    DWORD PTR [esi+ecx*2+0x17],edx
  41737c:	fnsave [edi-0x5062ffd8]
  417382:	xchg   esp,eax
  417383:	mov    cs,WORD PTR ds:0xa2ba63ac
  417389:	scas   eax,DWORD PTR es:[edi]
  41738a:	sub    eax,0xa6f106f1
  41738f:	add    edx,DWORD PTR [esi]
  417391:	aad    0xce
  417393:	pop    edx
  417394:	test   al,0x6a
  417396:	or     eax,0xe53d9c6
  41739b:	rol    BYTE PTR [edx-0x3639da96],cl
  4173a1:	push   ebx
  4173a2:	xchg   ecx,eax
  4173a3:	repz push 0x3c
  4173a6:	add    dh,ch
  4173a8:	sahf   
  4173a9:	mov    ebp,0x81517447
  4173ae:	(bad)  
  4173af:	or     DWORD PTR [esi+0xc],eax
  4173b2:	call   0xfd984c6a
  4173b7:	inc    ebx
  4173b8:	test   eax,0x9ee7c5ba
  4173bd:	mov    esp,0xb1e83c47
  4173c2:	cld    
  4173c3:	aam    0xee
  4173c5:	lock aas 
  4173c7:	jmp    0xaa9a2903
  4173cc:	sub    eax,0x268ec8a
  4173d1:	sbb    edi,edi
  4173d3:	call   0x3e972576
  4173d8:	add    BYTE PTR [edx],ch
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	pop    es
  4173dc:	bound  ebx,QWORD PTR [edi-0x5e8a7f77]
  4173e2:	add    al,BYTE PTR [eax]
  4173e4:	jo     0x417443
  4173e6:	dec    edi
  4173e7:	(bad)  
  4173e8:	sub    al,0xda
  4173ea:	add    bh,BYTE PTR [ecx-0x2acb247]
  4173f0:	je     0x41744f
  4173f2:	aaa    
  4173f3:	push   eax
  4173f4:	jb     0x4173c5
  4173f6:	push   0x42
  4173f8:	push   esp
  4173f9:	ja     0x417450
  4173fb:	test   BYTE PTR [ecx],ch
  4173fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173fe:	jle    0x4173ce
  417400:	jmp    0xa4cb76a3
  417405:	jle    0x417471
  417407:	or     dl,BYTE PTR ds:0x39895557
  41740d:	sbb    edx,DWORD PTR [edx+eax*1-0x64]
  417411:	jmp    0xfe81:0x9f120fe8
  417418:	(bad)  
  417419:	in     eax,dx
  41741a:	jmp    FWORD PTR [ecx-0x13]
  41741d:	push   ss
  41741e:	push   0x2
  417420:	add    BYTE PTR [edi],al
  417422:	mov    edi,0x9ef98d4f
  417427:	push   0x0
  417429:	adc    al,0xb8
  41742b:	adc    BYTE PTR [edx+ecx*8],dh
  41742e:	ds std 
  417430:	cmp    al,0x9
  417433:	mov    WORD PTR [ecx-0x62],cx
  417437:	dec    esi
  417438:	dec    esi
  417439:	clc    
  41743a:	dec    esp
  41743b:	sub    dh,0x0
  41743e:	mov    ebx,edi
  417440:	adc    BYTE PTR [edi+0x6a000674],0x64
  417447:	mov    DWORD PTR [ecx-0x1f],eax
  41744a:	xchg   esp,eax
  41744b:	mov    DWORD PTR [ecx-0x58],eax
  41744e:	xchg   esp,eax
  41744f:	stos   DWORD PTR es:[edi],eax
  417450:	adc    BYTE PTR [eax],dh
  417452:	push   0x46
  417454:	std    
  417455:	cmp    BYTE PTR [eax],0xfb
  417458:	out    0x6,al
  41745a:	mov    edi,0x7989de91
  41745f:	mov    ds:0xb5798b66,al
  417464:	imul   eax,DWORD PTR [ecx],0x66dd41c3
  41746a:	add    eax,0x298d07c7
  41746f:	mov    esi,0xa7f98965
  417474:	call   0xfaed51ca
  417479:	(bad)  
  41747a:	stc    
  41747b:	ror    DWORD PTR [eax+0xd5f2445],0x27
  417482:	hlt    
  417483:	add    eax,0x686cce87
  417488:	fcos   
  41748a:	mov    bl,0x82
  41748c:	shl    BYTE PTR [edi+ecx*8-0x7a],0x79
  417491:	or     al,0xf4
  417493:	inc    ecx
  417494:	push   ebx
  417495:	dec    DWORD PTR [ecx]
  417497:	ret    0x5586
  41749a:	popf   
  41749b:	addr16 mov ah,0x69
  41749e:	cwde   
  41749f:	xchg   ebx,eax
  4174a0:	mov    esi,cs
  4174a2:	add    BYTE PTR [ebp-0x3d02c928],dh
  4174a8:	out    0x43,eax
  4174aa:	jae    0x417508
  4174ac:	test   DWORD PTR [edx],eax
  4174ae:	mov    ebx,DWORD PTR [eax-0x1]
  4174b1:	mov    bl,0x88
  4174b3:	mov    dl,0x33
  4174b5:	pop    ds
  4174b6:	sti    
  4174b7:	mov    ds:0x65738630,al
  4174bc:	mov    al,ds:0xb939c7be
  4174c1:	ret    
  4174c2:	inc    DWORD PTR [edx-0x7d02c45c]
  4174c8:	xchg   ecx,eax
  4174c9:	mov    esi,0x5b161df8
  4174ce:	add    esp,DWORD PTR [edx+0x6afcf7dd]
  4174d4:	test   al,0x13
  4174d6:	rol    dl,0x11
  4174d9:	mov    ebx,0x1675fc6
  4174de:	push   0xffffff9c
  4174e0:	scas   al,BYTE PTR es:[edi]
  4174e1:	mov    ebp,0x4fd4eddb
  4174e6:	call   0xfd994434
  4174eb:	inc    esi
  4174ec:	je     0x4174d9
  4174ee:	or     al,0x20
  4174f0:	pop    esi
  4174f1:	xchg   ebp,eax
  4174f2:	pop    eax
  4174f3:	xor    eax,0x9d0078cd
  4174f8:	mov    al,0xcd
  4174fa:	movaps xmm5,XMMWORD PTR [esi+0x45]
  4174fe:	(bad)  
  4174ff:	adc    al,al
  417501:	push   edi
  417502:	jae    0x41749d
  417504:	mov    bl,0x15
  417506:	pop    esp
  417507:	add    BYTE PTR [edx],al
  417509:	adc    BYTE PTR [ebx+esi*2-0x78c01b73],cl
  417510:	sbb    BYTE PTR [ebx+0x1eafd58],ah
  417516:	je     0x4174d6
  417518:	push   ds
  417519:	mov    dl,0xe
  41751b:	jg     0x417511
  41751d:	push   eax
  41751e:	push   ss
  41751f:	jg     0x4174fe
  417521:	aad    0xcc
  417523:	or     BYTE PTR [eax],dl
  417525:	(bad)  
  417526:	push   0xffffffcb
  417528:	pop    edx
  417529:	(bad)  
  41752a:	jecxz  0x4174b0
  41752c:	(bad)
  41752f:	add    DWORD PTR [edx+eax*2-0x7b],ebp
  417533:	mov    bl,BYTE PTR [esi-0x78]
  417536:	je     0x4174b9
  417538:	dec    ecx
  417539:	push   ecx
  41753a:	ficom  WORD PTR [edi-0x13]
  41753d:	jge    0x41756b
  41753f:	sub    ch,0x5a
  417542:	jne    0x4175a6
  417544:	mov    BYTE PTR [eax+0x6b],dl
  417547:	inc    esp
  417548:	or     eax,edi
  41754a:	imul   eax,DWORD PTR [ecx+0x57b64fd1],0xffffffcd
  417551:	jge    0x417577
  417553:	cwde   
  417554:	int    0x7d
  417556:	ins    BYTE PTR es:[edi],dx
  417557:	dec    eax
  417558:	arpl   WORD PTR [eax-0x62],dx
  41755b:	mov    ah,0x42
  41755d:	jno    0x417592
  41755f:	push   edi
  417560:	push   eax
  417561:	jle    0x4175c7
  417563:	dec    eax
  417564:	dec    ebx
  417565:	push   eax
  417566:	xchg   BYTE PTR [ecx+eax*2+0x8972d6],dh
  41756d:	fidivr WORD PTR [edx]
  41756f:	sbb    ch,BYTE PTR [esi+0x62805ae2]
  417575:	sub    BYTE PTR [eax+0x74],dl
  417578:	xchg   ecx,eax
  417579:	push   ecx
  41757a:	push   ecx
  41757b:	pop    esi
  41757c:	push   edi
  41757d:	daa    
  41757e:	sub    edi,DWORD PTR [edi]
  417580:	mov    al,0x76
  417582:	dec    edi
  417583:	dec    esi
  417584:	mov    ecx,DWORD PTR [esi+0x1603d0fa]
  41758a:	(bad)  
  41758b:	sbb    dh,BYTE PTR [edx+eax*1+0x4a34ffb3]
  417592:	dec    ebp
  417593:	mov    esi,DWORD PTR [esi+edx*2+0x3d314345]
  41759a:	fnstcw WORD PTR [edi]
  41759c:	jmp    0x171b78e7
  4175a1:	push   0x7c
  4175a3:	rol    DWORD PTR [eax],0xaf
  4175a6:	dec    ebp
  4175a7:	std    
  4175a8:	push   es
  4175a9:	or     al,0x7b
  4175ab:	in     al,dx
  4175ac:	push   0xe903a645
  4175b1:	sahf   
  4175b2:	mov    cl,0x54
  4175b4:	out    dx,al
  4175b5:	lods   eax,DWORD PTR ds:[esi]
  4175b6:	sti    
  4175b7:	adc    BYTE PTR [ecx],ch
  4175b9:	cdq    
  4175ba:	jns    0x417607
  4175bc:	icebp  
  4175bd:	sub    ebx,eax
  4175bf:	jmp    0x417623
  4175c1:	nop
  4175c2:	dec    esi
  4175c3:	mov    al,0x5d
  4175c5:	mov    eax,ds:0x4d740002
  4175ca:	pop    ebx
  4175cb:	push   0xfd4f4df9
  4175d0:	inc    ebx
  4175d1:	add    BYTE PTR [ebp-0x4cb51856],bl
  4175d7:	dec    ebp
  4175d8:	std    
  4175d9:	ins    DWORD PTR es:[edi],dx
  4175da:	(bad)  
  4175dc:	add    al,0xdb
  4175de:	fisub  WORD PTR [edi-0x7]
  4175e1:	jmp    0xe7ca7884
  4175e6:	repz rol DWORD PTR [edi],cl
  4175e9:	jb     0x417609
  4175eb:	cmp    bh,0xe8
  4175ee:	sahf   
  4175ef:	or     DWORD PTR [ebx+0x71],0x795b7bcb
  4175f6:	mov    dh,0x3d
  4175f8:	xchg   edx,eax
  4175f9:	call   0xd601fc9c
  4175fe:	ror    BYTE PTR [ebp+0x73],1
  417601:	pop    ecx
  417602:	daa    
  417603:	ret    
  417604:	repz inc ecx
  417606:	(bad)  
  417607:	mov    edi,0xf45b00fc
  41760c:	(bad)  
  41760d:	mov    DWORD PTR [ecx-0x25],eax
  417610:	ss ret 
  417612:	sti    
  417613:	test   BYTE PTR [eax+eax*1-0x4276fd0c],ah
  41761a:	fsubr  DWORD PTR [eax+0x6cacfffa]
  417620:	push   eax
  417621:	jmp    FWORD PTR [ebx+0x1ef0497c]
  417627:	push   es
  417628:	mov    DWORD PTR [ebp-0x54acf],eax
  41762e:	adc    al,0x7c
  417630:	inc    ecx
  417631:	hlt    
  417632:	fild   WORD PTR [ecx-0x1b]
  417635:	call   0xfe763c3a
  41763a:	jmp    FWORD PTR [edi]
  41763c:	scas   al,BYTE PTR es:[edi]
  41763d:	ss sti 
  41763f:	lock sub cl,BYTE PTR [eax+0x1946ff07]
  417646:	mov    DWORD PTR [ecx+0x684536b6],edi
  41764c:	xor    eax,DWORD PTR [ebx]
  41764e:	or     ecx,0xffffffae
  417651:	cli    
  417652:	jmp    0x4175dc
  417654:	xchg   ebx,eax
  417655:	gs enter 0x274,0x0
  41765a:	push   edi
  41765b:	or     al,0x73
  41765d:	jp     0x417660
  41765f:	inc    esp
  417660:	jmp    0x417620
  417662:	je     0x4176a5
  417664:	jmp    0x50f282c0
  417669:	push   eax
  41766a:	push   0xffffff90
  41766c:	lahf   
  41766d:	in     eax,0xa2
  41766f:	sahf   
  417670:	add    DWORD PTR [eax],eax
  417672:	cmp    eax,DWORD PTR [edi]
  417674:	xor    ecx,DWORD PTR [edi]
  417676:	cmp    DWORD PTR [edx+edi*8+0x7ae30d73],ecx
  41767d:	(bad)  
  41767e:	call   0x3c255c
  417683:	popf   
  417684:	loop   0x417642
  417686:	div    esi
  417688:	add    eax,DWORD PTR [edi+0x57c4f5c6]
  41768e:	std    
  41768f:	cli    
  417690:	push   0x5b9d96e9
  417695:	add    DWORD PTR [ecx],esi
  417697:	ffree  st(3)
  417699:	repz out 0x0,eax
  41769c:	loop   0x4176c2
  41769e:	scas   eax,DWORD PTR es:[edi]
  41769f:	addr16 xor eax,0x8e00015c
  4176a5:	sbb    ebp,DWORD PTR [ecx+eax*1-0x4b]
  4176a9:	cld    
  4176aa:	push   edx
  4176ab:	lds    ebx,FWORD PTR [eax+0x3]
  4176ae:	add    DWORD PTR [eax],eax
  4176b0:	popf   
  4176b1:	pop    ebx
  4176b2:	push   esp
  4176b3:	xor    eax,0xfd12edc5
  4176b8:	stos   BYTE PTR es:[edi],al
  4176b9:	je     0x417724
  4176bb:	shl    BYTE PTR [edx+0x64],1
  4176be:	push   esp
  4176bf:	std    
  4176c0:	adc    BYTE PTR [ecx+ebp*2],ch
  4176c3:	enter  0x34d2,0x54
  4176c7:	mov    DWORD PTR [ebx+0x16f7ce3c],esp
  4176cd:	push   ss
  4176ce:	or     al,0x89
  4176d0:	sbb    eax,0x9d0001db
  4176d5:	inc    ebx
  4176d6:	mov    bl,0x91
  4176d8:	pushf  
  4176d9:	pop    ebx
  4176da:	adc    al,al
  4176dc:	push   ds
  4176dd:	es pop esp
  4176df:	jmp    FWORD PTR [ebx-0x9a2bf29]
  4176e5:	mov    ds:0x19d043f,al
  4176ea:	lock out 0xc0,eax
  4176ed:	dec    ecx
  4176ee:	push   esp
  4176ef:	std    
  4176f0:	int    0xde
  4176f2:	mov    ebx,0xedd4cd03
  4176f7:	cmp    edx,DWORD PTR [ebx+0x5981041b]
  4176fd:	add    dh,bl
  4176ff:	jle    0x417701
  417701:	fst    st(5)
  417703:	in     eax,0x11
  417705:	fstp   QWORD PTR [edx+0x2d]
  417708:	add    ebx,DWORD PTR [ebp+0x588cde02]
  41770e:	out    dx,al
  41770f:	cdq    
  417710:	scas   al,BYTE PTR es:[edi]
  417711:	lods   eax,DWORD PTR ds:[esi]
  417712:	pop    edi
  417713:	xchg   ebp,eax
  417714:	fnsave [ebp+0x15afbb47]
  41771a:	mov    esi,0xfb15f402
  41771f:	mov    WORD PTR [edx],ds
  417721:	pop    edx
  417722:	out    dx,al
  417723:	out    0x3,eax
  417725:	popf   
  417726:	xlat   BYTE PTR ds:[ebx]
  417727:	stos   DWORD PTR es:[edi],eax
  417728:	jmp    0x34c9dbf8
  41772d:	ror    BYTE PTR [edx+esi*2+0x53],0x74
  417732:	push   edi
  417733:	jae    0x417750
  417735:	push   0x1c
  417737:	jne    0x41775e
  417739:	push   ss
  41773a:	lods   al,BYTE PTR ds:[esi]
  41773b:	loop   0x4176bd
  41773d:	and    al,0x6
  41773f:	neg    eax
  417741:	mov    bh,0x77
  417743:	jmp    0x5d86:0xfdd75d88
  41774a:	pop    es
  41774b:	inc    ecx
  41774c:	or     ch,ch
  41774e:	jge    0x41777e
  417750:	in     al,dx
  417751:	jmp    0xe6c2:0x8b0fd44b
  417758:	xchg   BYTE PTR [ecx-0x1],ah
  41775b:	arpl   WORD PTR [ecx+ebp*8-0x2b],ax
  41775f:	sub    eax,DWORD PTR [edi+0x21e1fb5c]
  417765:	add    cl,dl
  417767:	xor    eax,0xb815c3d
  41776c:	mov    ss,WORD PTR [ebx-0x70]
  41776f:	xchg   ebx,eax
  417770:	and    ch,BYTE PTR cs:[ebp+ebx*2+0x5]
  417775:	divps  xmm2,xmm7
  417778:	call   FWORD PTR [edx+ebp*4]
  41777b:	mov    esi,0x3a3d923
  417780:	data16 and BYTE PTR [eax],ah
  417783:	in     eax,dx
  417784:	(bad)  
  417785:	call   0xc3844728
  41778a:	mov    al,ds:0x6e2e025a
  41778f:	dec    ebp
  417790:	mov    DWORD PTR [ecx],edi
  417792:	stos   BYTE PTR es:[edi],al
  417793:	dec    edi
  417794:	je     0x417797
  417796:	mov    al,ds:0x1c077e1c
  41779b:	lods   eax,DWORD PTR ds:[esi]
  41779c:	add    ebp,DWORD PTR [edx-0x2e]
  41779f:	call   FWORD PTR [ebx]
  4177a1:	pushf  
  4177a2:	int    0x7a
  4177a4:	add    DWORD PTR [ecx+ebx*2-0x2a],esp
  4177a8:	adc    al,0x6a
  4177aa:	popa   
  4177ab:	cli    
  4177ac:	imul   edi,ecx,0xe745790e
  4177b2:	out    dx,al
  4177b3:	dec    esi
  4177b4:	adc    edi,DWORD PTR [ebp+0x6a000bb4]
  4177ba:	push   ebp
  4177bb:	inc    BYTE PTR [edx+0x42f5c529]
  4177c1:	push   0xffffffe3
  4177c3:	cli    
  4177c4:	cmp    BYTE PTR [edi],cl
  4177c6:	ins    DWORD PTR es:[edi],dx
  4177c7:	xor    BYTE PTR [esi-0x3f],dl
  4177ca:	add    ch,dl
  4177cc:	or     al,0xfd
  4177ce:	into   
  4177cf:	test   al,0x42
  4177d1:	pop    esi
  4177d2:	and    al,0x4a
  4177d4:	inc    ecx
  4177d5:	add    al,0xe9
  4177d7:	xor    al,0x63
  4177d9:	mov    ch,0xf7
  4177db:	iret   
  4177dc:	dec    ebp
  4177dd:	mov    al,0xe8
  4177df:	ret    
  4177e0:	push   edx
  4177e1:	push   esi
  4177e2:	jb     0x417856
  4177e4:	pop    ds
  4177e5:	or     BYTE PTR [esi],dh
  4177e7:	ror    BYTE PTR [eax-0x77],cl
  4177ea:	cmp    DWORD PTR [ebp-0x3ca4eb87],ebx
  4177f0:	shl    BYTE PTR [edi+0x0],cl
  4177f3:	inc    edi
  4177f4:	mov    ch,0x86
  4177f6:	push   eax
  4177f7:	mov    al,ds:0xae3bcceb
  4177fc:	xor    DWORD PTR [ecx],eax
  4177fe:	xor    esi,esp
  417800:	stos   DWORD PTR es:[edi],eax
  417801:	sub    esi,esi
  417803:	dec    eax
  417804:	and    edx,DWORD PTR [eax]
  417806:	add    DWORD PTR [edi+0x33],edx
  417809:	das    
  41780a:	test   DWORD PTR [ebx+0x31],esi
  41780d:	pop    ss
  41780e:	mov    esi,DWORD PTR [edi+ebp*8]
  417811:	es icebp 
  417813:	repz push 0x536a0f15
  417819:	or     ecx,DWORD PTR [edx+0x414b03d0]
  41781f:	in     al,dx
  417820:	pop    edx
  417821:	push   DWORD PTR [edx+eiz*4+0x79]
  417825:	sti    
  417826:	jg     0x4177d7
  417828:	hlt    
  417829:	mov    edi,0x5b900f40
  41782e:	ret    0xbc00
  417831:	dec    BYTE PTR [ecx+0x4af92e11]
  417837:	inc    ecx
  417838:	cli    
  417839:	cld    
  41783a:	shl    DWORD PTR [ebp-0x46],0x79
  41783e:	sti    
  41783f:	jg     0x4177e6
  417841:	lods   al,BYTE PTR ds:[esi]
  417842:	in     eax,0x33
  417844:	inc    esp
  417845:	test   al,0xe0
  417847:	push   ebp
  417848:	pavgw  mm7,QWORD PTR [esp+ebp*8-0x78]
  41784d:	add    eax,0x8cc70000
  417852:	mov    BYTE PTR [ebp+0x58],dh
  417855:	mov    ecx,DWORD PTR [eax-0x1ae21006]
  41785b:	sub    al,0x53
  41785d:	push   es
  41785e:	add    BYTE PTR [ebx+0x46371ab9],cl
  417864:	dec    esp
  417865:	add    edi,DWORD PTR [edi+0x34]
  417868:	push   ebx
  417869:	push   es
  41786a:	add    dh,dh
  41786c:	popf   
  41786d:	push   ss
  41786e:	and    al,0x2
  417870:	push   ss
  417871:	pop    ds
  417872:	in     al,dx
  417873:	xchg   al,ah
  417875:	jae    0x41784f
  417877:	or     al,0x26
  417879:	pop    ds
  41787a:	lock xchg al,ah
  41787d:	mov    ds:0xe355437d,eax
  417882:	lods   al,BYTE PTR ds:[esi]
  417883:	retf   
  417884:	and    al,0x97
  417886:	in     eax,dx
  417887:	mov    DWORD PTR [edx-0x62101b24],esp
  41788d:	fsubr  st(4),st
  41788f:	jmp    0x41782e
  417891:	sub    BYTE PTR [edi-0x68dbff41],dl
  417897:	dec    ebp
  417898:	xor    ebp,0x38850091
  41789e:	add    eax,DWORD PTR [eax+eax*1]
  4178a1:	xchg   edx,eax
  4178a2:	shl    DWORD PTR [ebx+0x51],1
  4178a5:	sub    DWORD PTR [ebx-0x318602ff],ebx
  4178ab:	sbb    cl,BYTE PTR [ecx-0x49ffa4a4]
  4178b1:	pop    edx
  4178b2:	pop    edx
  4178b3:	add    BYTE PTR [esi-0x1fbda296],dh
  4178b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ba:	push   esp
  4178bb:	inc    edx
  4178bc:	sub    BYTE PTR [edx],0x5c
  4178bf:	mov    ah,0x86
  4178c1:	pop    eax
  4178c2:	das    
  4178c3:	add    BYTE PTR [ebx+0x15b30],al
  4178c9:	push   ds
  4178ca:	out    0x53,al
  4178cc:	ret    
  4178cd:	ficomp WORD PTR [ebx+0x1]
  4178d0:	or     eax,0xde19
  4178d5:	popf   
  4178d6:	push   eax
  4178d7:	xchg   edi,eax
  4178d8:	inc    ebp
  4178d9:	cdq    
  4178da:	aam    0xbe
  4178dc:	imul   edx,DWORD PTR [esi+edx*1],0x70
  4178e0:	mov    ebx,ebx
  4178e2:	daa    
  4178e3:	jp     0x417928
  4178e5:	std    
  4178e6:	add    DWORD PTR [edx-0x37],esi
  4178e9:	mov    edx,0xd67aaf1d
  4178ee:	call   0x7a9f:0x1d9abe62
  4178f5:	ficomp WORD PTR [esi+0x600be70]
  4178fb:	jge    0x4178af
  4178fd:	sbb    al,0x55
  4178ff:	stc    
  417900:	cmp    al,0xc8
  417902:	lahf   
  417903:	inc    ebx
  417904:	xchg   ebx,edi
  417906:	and    esi,DWORD PTR [edi-0x46b4ff6a]
  41790c:	in     al,0xfc
  41790e:	dec    ebx
  41790f:	stc    
  417910:	pushf  
  417911:	rcr    BYTE PTR [edx-0x57bc5b85],0x90
  417918:	scas   al,BYTE PTR es:[edi]
  417919:	or     BYTE PTR [edx],dh
  41791b:	(bad)  
  41791c:	out    dx,eax
  41791d:	cld    
  41791e:	sub    edi,DWORD PTR [ebx-0x54]
  417921:	inc    edi
  417922:	adc    al,0xbf
  417924:	(bad)  
  417925:	push   0xffffff84
  417927:	inc    esp
  417928:	cmp    BYTE PTR [ebx+0x1a],cl
  41792b:	mov    edi,0x7e237c52
  417930:	out    0x3,eax
  417932:	popf   
  417933:	jnp    0x4178d9
  417935:	mov    esp,DWORD PTR [eax+eax*4]
  417938:	pop    edi
  417939:	add    ebx,DWORD PTR [ebp+0x12be6c02]
  41793f:	inc    ecx
  417940:	lods   al,BYTE PTR ds:[esi]
  417941:	imul   esp,DWORD PTR [edx+0x2203e748],0xffffffbe
  417948:	mov    ds:0xa452ae4f,al
  41794d:	ret    
  41794e:	mov    bh,BYTE PTR [edi-0x59]
  417951:	call   DWORD PTR [ecx]
  417953:	data16 loope 0x417959
  417956:	popf   
  417957:	imul   DWORD PTR [esi+0x56]
  41795a:	lds    eax,FWORD PTR [edx]
  41795c:	out    0x82,eax
  41795e:	add    BYTE PTR [eax+0x1],ah
  417961:	add    BYTE PTR [edx+ebp*1+0x3],ah
  417965:	or     eax,0x4b815777
  41796a:	cdq    
  41796b:	push   ds
  41796c:	push   eax
  41796d:	data16 out dx,al
  41796f:	and    ah,BYTE PTR [eax-0x1]
  417972:	call   0x738fb15
  417977:	cmp    al,BYTE PTR [eax+eiz*8-0x7efd6118]
  41797e:	xor    BYTE PTR ds:0xd06a58d4,0xe3
  417985:	jae    0x41799e
  417987:	push   ds
  417988:	push   eax
  417989:	push   0xb5f70adc
  41798e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798f:	mov    eax,ds:0x9ca6b5f5
  417994:	xchg   eax,esp
  417996:	loope  0x41798f
  417998:	mov    BYTE PTR [ecx],al
  41799a:	inc    ecx
  41799b:	push   eax
  41799c:	test   bh,bh
  41799e:	call   0xd84f341
  4179a3:	fnstenv [edi+0x47f4e869]
  4179a9:	(bad)  
  4179aa:	pushf  
  4179ab:	(bad)  
  4179ac:	jp     0x417977
  4179ae:	mov    bh,0x5b
  4179b0:	ror    DWORD PTR [edi],cl
  4179b2:	push   ss
  4179b3:	in     al,0xfb
  4179b5:	cld    
  4179b6:	xchg   esp,eax
  4179b7:	mov    dh,0x5f
  4179b9:	nop
  4179ba:	pop    es
  4179bb:	bound  eax,QWORD PTR [ebp-0x7f]
  4179be:	add    DWORD PTR [eax+0x4f83f5],esp
  4179c4:	lods   eax,DWORD PTR ds:[esi]
  4179c5:	inc    edi
  4179c6:	std    
  4179c7:	fs loope 0x417998
  4179ca:	or     BYTE PTR [ebx+eax*4],ah
  4179cd:	dec    ebx
  4179ce:	std    
  4179cf:	fimul  WORD PTR [ebx-0x66fe7f7c]
  4179d5:	add    al,BYTE PTR [ecx]
  4179d7:	dec    esp
  4179d8:	jne    0x417a3a
  4179da:	inc    ebx
  4179db:	add    BYTE PTR [ebp-0xdf0fffd],al
  4179e1:	inc    eax
  4179e2:	add    DWORD PTR [edi],ecx
  4179e4:	loop   0x417976
  4179e6:	add    al,cl
  4179e8:	fs dec ebx
  4179ea:	or     dl,al
  4179ec:	inc    edi
  4179ed:	ret    
  4179ee:	ss inc ebp
  4179f0:	inc    esp
  4179f1:	xor    cl,BYTE PTR [edx]
  4179f3:	mov    eax,DWORD PTR [edx-0x39c380fe]
  4179f9:	add    ecx,DWORD PTR [ebx]
  4179fb:	lea    edi,[ebx-0x48ffffff]
  417a01:	pop    edx
  417a02:	icebp  
  417a03:	add    BYTE PTR [edi-0x7ef09f4a],dh
  417a09:	add    ebp,edi
  417a0b:	inc    DWORD PTR [esp+ecx*8]
  417a0e:	dec    ebp
  417a0f:	sub    BYTE PTR [edi+0x5a],dh
  417a12:	adc    DWORD PTR [eax],eax
  417a14:	lds    edi,FWORD PTR [ebx-0x15b8182]
  417a1a:	test   BYTE PTR [ebp-0x4c],al
  417a1d:	(bad)  
  417a1e:	dec    eax
  417a1f:	in     al,dx
  417a20:	sub    ah,BYTE PTR [ecx]
  417a22:	or     esi,DWORD PTR [esi+0x51b347f5]
  417a28:	add    ch,al
  417a2a:	mov    ebp,0xc0cf08df
  417a2f:	ss inc ebp
  417a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a32:	das    
  417a33:	push   cs
  417a34:	add    edi,edx
  417a36:	push   ds
  417a37:	sti    
  417a38:	inc    ebp
  417a39:	mov    al,0xcb
  417a3b:	inc    eax
  417a3c:	adc    al,0x2d
  417a3e:	inc    edx
  417a3f:	jmp    0x7c647c7f
  417a44:	fidivr WORD PTR [edi]
  417a46:	cmp    dl,BYTE PTR [ecx]
  417a48:	cmp    eax,DWORD PTR [edx+0x22]
  417a4b:	or     ecx,DWORD PTR [ebp-0xc5]
  417a51:	(bad)  
  417a53:	jmp    0x545817e1
  417a58:	cmp    ebx,esp
  417a5a:	add    edx,esi
  417a5c:	dec    ebx
  417a5d:	es pop ss
  417a5f:	push   esp
  417a60:	sub    ebx,esp
  417a62:	(bad)  
  417a63:	js     0x417aa8
  417a65:	ins    DWORD PTR es:[edi],dx
  417a66:	fld    DWORD PTR [ebx+0x2]
  417a69:	in     eax,dx
  417a6a:	loopne 0x417a30
  417a6c:	jmp    0x417a8c
  417a6e:	pushf  
  417a6f:	add    dl,BYTE PTR [eax+0x4a]
  417a72:	dec    edi
  417a73:	or     DWORD PTR [esi],edx
  417a75:	fstp   QWORD PTR [ebx-0x56]
  417a78:	push   esi
  417a79:	and    BYTE PTR [ebp+edx*8+0x540f262b],bl
  417a80:	or     eax,0xb5fc5af3
  417a85:	int3   
  417a86:	pop    edx
  417a87:	inc    edx
  417a88:	loopne 0x417a2f
  417a8a:	pusha  
  417a8b:	aas    
  417a8c:	add    DWORD PTR [eax],eax
  417a8e:	frstor [eax]
  417a90:	lds    ecx,FWORD PTR [edi]
  417a92:	mov    BYTE PTR [esi+0x78],dl
  417a95:	push   esi
  417a96:	xchg   ecx,eax
  417a97:	fmul   DWORD PTR [edi]
  417a99:	sbb    BYTE PTR [ebp-0x630081dc],0x5b
  417aa0:	add    DWORD PTR [ecx+0x39040f80],eax
  417aa6:	push   ebx
  417aa7:	add    edx,ebx
  417aa9:	mov    bl,0x26
  417aab:	lahf   
  417aac:	pop    ebp
  417aad:	std    
  417aae:	pop    eax
  417aaf:	inc    edi
  417ab0:	jp     0x417af5
  417ab2:	int    0xd0
  417ab4:	les    edx,FWORD PTR [ebx]
  417ab6:	xchg   BYTE PTR [ebp-0x1fad84df],dl
  417abc:	(bad)  
  417abd:	jmp    0x417add
  417abf:	sbb    al,0x2
  417ac1:	xchg   DWORD PTR [eax-0x9],esp
  417ac4:	jbe    0x417b09
  417ac6:	lods   eax,DWORD PTR ds:[esi]
  417ac7:	pop    eax
  417ac8:	ret    
  417ac9:	and    esp,DWORD PTR [esi+ebx*4]
  417acc:	push   ecx
  417acd:	sbb    DWORD PTR [ebp+0x2],0xcf89b3e9
  417ad4:	retf   0xae4c
  417ad7:	or     bh,ch
  417ad9:	ret    
  417ada:	jp     0x417a86
  417adc:	das    
  417add:	xchg   DWORD PTR [ebp-0x31],ebx
  417ae0:	clc    
  417ae1:	js     0x417ab9
  417ae3:	push   edx
  417ae4:	out    dx,al
  417ae5:	xchg   ebp,eax
  417ae6:	(bad)  
  417ae7:	hlt    
  417ae8:	jl     0x417aa4
  417aea:	pop    ebx
  417aeb:	inc    edx
  417aec:	(bad)  
  417aed:	sti    
  417aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aef:	inc    ebx
  417af0:	jmp    0xcef6:0xbf840043
  417af7:	xchg   edi,eax
  417af8:	jns    0x417b1f
  417afa:	add    BYTE PTR [esi+eax*1],bl
  417afd:	push   0x6677a003
  417b02:	add    bl,BYTE PTR [ebp+0x2ee66a02]
  417b08:	add    dh,BYTE PTR [esi-0x3a]
  417b0b:	scas   al,BYTE PTR es:[edi]
  417b0c:	jns    0x417b32
  417b0e:	clc    
  417b0f:	aad    0xbc
  417b11:	push   es
  417b12:	ror    BYTE PTR [ebp+esi*8-0x6c],1
  417b16:	les    eax,FWORD PTR [ebx]
  417b18:	hlt    
  417b19:	pushf  
  417b1a:	mov    esp,0xfb47439c
  417b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b20:	inc    ebx
  417b21:	jmp    0x6e03:0x32c71c4b
  417b28:	sti    
  417b29:	data16 or al,0x71
  417b2c:	cmc    
  417b2d:	arpl   WORD PTR [ecx-0x7f18fd63],bp
  417b33:	loopne 0x417b35
  417b35:	push   0xffffffce
  417b37:	(bad)  
  417b38:	loopne 0x417b1f
  417b3a:	xchg   BYTE PTR [esi-0x1a],cl
  417b3d:	out    0x3,al
  417b3f:	and    al,0xbf
  417b41:	retf   0x5ac3
  417b44:	fsubr  st,st(0)
  417b46:	dec    esp
  417b47:	cs out 0xff,al
  417b4a:	popa   
  417b4b:	rol    DWORD PTR [ebp+0x73],1
  417b4e:	ror    DWORD PTR [eax+0x47],1
  417b51:	jae    0x417b4c
  417b53:	or     edi,DWORD PTR [edx]
  417b55:	std    
  417b56:	push   esp
  417b57:	add    BYTE PTR [ebp-0x291e8cb9],al
  417b5d:	dec    edi
  417b5e:	cld    
  417b5f:	into   
  417b60:	out    0x5b,al
  417b62:	clc    
  417b63:	pop    fs
  417b65:	add    cl,BYTE PTR [ecx+0x2ed57]
  417b6b:	jmp    0x654eac8d
  417b70:	js     0x417bb6
  417b72:	std    
  417b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b74:	inc    esi
  417b75:	mov    es,WORD PTR [ebp-0x1b]
  417b78:	inc    edi
  417b79:	mov    cs,WORD PTR [ebp-0x14]
  417b7c:	loope  0x417be0
  417b7e:	or     dl,ah
  417b80:	fnstcw WORD PTR [ebx+0x43]
  417b83:	adc    DWORD PTR [ebp+eax*2-0xa611603],0x2a1de83
  417b8e:	add    BYTE PTR [edx+0x6d0cffd8],dh
  417b94:	pop    es
  417b95:	inc    ebp
  417b96:	std    
  417b97:	jmp    0xea355bb7
  417b9c:	and    ecx,eax
  417b9e:	out    dx,eax
  417b9f:	(bad)  
  417ba0:	test   DWORD PTR [eax+0x45564670],0x8186a789
  417baa:	arpl   bp,bx
  417bac:	sahf   
  417bad:	cmp    DWORD PTR [esi+0x9],0x15437b99
  417bb4:	xlat   BYTE PTR ds:[ebx]
  417bb5:	and    DWORD PTR ds:0xb5f6c157,ecx
  417bbb:	mov    ecx,0xdf83a100
  417bc0:	loope  0x417b75
  417bc2:	cmp    DWORD PTR [ecx],edi
  417bc4:	add    cl,dh
  417bc6:	mov    bh,0x73
  417bc8:	adc    DWORD PTR [edi+0x49ff2141],esi
  417bce:	push   ebx
  417bcf:	mov    BYTE PTR [ebp+0x68],cl
  417bd2:	mov    BYTE PTR [eax-0x14],0xbf
  417bd6:	mov    BYTE PTR ds:0x40c4427c,bl
  417bdc:	adc    al,0x8f
  417bde:	inc    eax
  417bdf:	sbb    eax,0xfaedd10f
  417be4:	jmp    DWORD PTR [ebx-0x3c]
  417be7:	inc    eax
  417be8:	in     al,dx
  417be9:	in     eax,dx
  417bea:	inc    edx
  417beb:	in     eax,dx
  417bec:	cmp    ecx,DWORD PTR [edx-0x40b88a1a]
  417bf2:	inc    edx
  417bf3:	in     eax,dx
  417bf4:	sub    edi,DWORD PTR [edx+0x22]
  417bf7:	test   DWORD PTR [ebp+0x24],eax
  417bfa:	jl     0x417bbc
  417bfc:	add    dh,BYTE PTR [ebx+eax*8+0x40]
  417c00:	in     al,dx
  417c01:	(bad)  
  417c02:	mov    edi,0x52235001
  417c07:	xor    eax,0x54fe7416
  417c0c:	pop    ecx
  417c0d:	mov    DWORD PTR [edi-0x7580d890],edi
  417c13:	in     eax,dx
  417c14:	cvtpi2ps xmm1,QWORD PTR [esi+0xc]
  417c18:	mov    dh,0x35
  417c1a:	(bad)  
  417c1b:	mov    esp,0xbf43fce2
  417c20:	mov    eax,DWORD PTR [eax]
  417c22:	push   0xffffffd3
  417c24:	(bad)  
  417c25:	push   esp
  417c27:	jecxz  0x417c6a
  417c29:	add    al,0xab
  417c2b:	pop    ss
  417c2c:	pop    ss
  417c2d:	rol    BYTE PTR [esi+eax*8],0x40
  417c31:	hlt    
  417c32:	or     DWORD PTR [ebx],edi
  417c34:	cmp    BYTE PTR [esi-0x14],cl
  417c37:	das    
  417c38:	mov    dh,0x8b
  417c3a:	stc    
  417c3b:	stos   BYTE PTR es:[edi],al
  417c3c:	cli    
  417c3d:	inc    ebp
  417c3e:	popf   
  417c3f:	inc    ebp
  417c40:	jl     0x417c85
  417c42:	lods   eax,DWORD PTR ds:[esi]
  417c43:	fistp  QWORD PTR [edi+0x21936613]
  417c49:	or     eax,0xfd471010
  417c4e:	call   0x2ec:0x1eebbfa5
  417c55:	xchg   eax,esp
  417c57:	push   edi
  417c58:	jnp    0x417c9d
  417c5a:	lea    ebp,ds:0xef2423bf
  417c60:	push   ebx
  417c61:	sbb    DWORD PTR [ebp+0x2e],0x57f0fcb1
  417c68:	inc    edi
  417c69:	adc    esp,DWORD PTR [ebp-0xa003ea7]
  417c6f:	adc    bh,BYTE PTR [ebp-0x40]
  417c72:	mov    ds:0x4afea5a6,al
  417c77:	imul   edi,DWORD PTR [ebx+0x4b],0x3f8f314d
  417c7e:	pushf  
  417c7f:	sub    BYTE PTR [edi-0x374a3f9],cl
  417c85:	or     BYTE PTR [eax],al
  417c87:	pop    esp
  417c88:	mov    ch,0x79
  417c8a:	xchg   esp,eax
  417c8b:	popf   
  417c8c:	sub    eax,DWORD PTR [ecx]
  417c8e:	sub    DWORD PTR [edi+ebp*1+0x50],ebx
  417c92:	fdiv   DWORD PTR [esi+0x6086c46b]
  417c98:	(bad)  
  417c9a:	adc    al,0x2
  417c9c:	addr16 in eax,dx
  417c9e:	mov    BYTE PTR [eax+0x3f],ah
  417ca1:	or     al,0x46
  417ca3:	mov    ebp,0x6de7944f
  417ca8:	leave  
  417ca9:	inc    esi
  417caa:	std    
  417cab:	fisub  DWORD PTR [esi+0x4d]
  417cae:	(bad)  
  417caf:	fisubr DWORD PTR [ebx]
  417cb1:	add    DWORD PTR [edx-0x62],ebp
  417cb4:	xchg   ebx,eax
  417cb5:	pop    edx
  417cb6:	outs   dx,BYTE PTR ds:[esi]
  417cb7:	retf   
  417cb8:	add    ah,BYTE PTR [esi]
  417cba:	dec    ecx
  417cbb:	nop
  417cbc:	js     0x417c64
  417cbe:	add    ch,BYTE PTR [eax-0xdfa5988]
  417cc4:	and    bl,bh
  417cc6:	cld    
  417cc7:	jmp    0x417c58
  417cc9:	fild   DWORD PTR [ebx]
  417ccb:	sbb    bl,al
  417ccd:	idiv   BYTE PTR [edx+0x23]
  417cd0:	xchg   bh,ah
  417cd2:	add    ebx,DWORD PTR [ebp+0x6ef94fd]
  417cd8:	(bad)  
  417cda:	ror    edx,0x3
  417cdd:	out    0x3,eax
  417cdf:	popf   
  417ce0:	sub    eax,DWORD PTR [esi+0x62029d02]
  417ce6:	mov    ecx,0x5c94396
  417ceb:	add    BYTE PTR [edx],bl
  417ced:	xlat   BYTE PTR ds:[ebx]
  417cee:	sar    BYTE PTR [ebx+esi*8+0x12],cl
  417cf2:	add    dh,BYTE PTR [esp]
  417cf5:	push   ss
  417cf6:	pop    eax
  417cf7:	jl     0x417cd7
  417cf9:	push   ss
  417cfa:	jo     0x417ceb
  417cfc:	call   0xc24d:0x25f8358d
  417d03:	mov    ecx,0xf41b8bba
  417d08:	sahf   
  417d09:	lea    ebp,[esp+edx*2]
  417d0c:	push   0xffffffc7
  417d0e:	(bad)  
  417d0f:	clc    
  417d10:	sub    DWORD PTR [edx-0x7a62fc18],eax
  417d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d17:	add    eax,0x5af6c722
  417d1c:	mov    es,WORD PTR [ebx]
  417d1e:	out    0x3,eax
  417d20:	and    al,0x80
  417d22:	jnp    0x417d27
  417d24:	popf   
  417d25:	add    bl,BYTE PTR [edx]
  417d27:	cmp    esp,DWORD PTR [ebx+edi*1+0x1ef87ff6]
  417d2e:	out    0x3,eax
  417d30:	xchg   edx,eax
  417d31:	sar    edi,1
  417d33:	in     al,dx
  417d34:	aad    0x83
  417d36:	fmulp  st(4),st
  417d38:	sahf   
  417d39:	add    cl,BYTE PTR [ecx-0x6b6fb80a]
  417d3f:	jmp    0xaeca7fe2
  417d44:	scas   al,BYTE PTR es:[edi]
  417d45:	jg     0x417d27
  417d47:	jmp    0x417d37
  417d49:	cmp    eax,0xb855f575
  417d4e:	or     edi,esi
  417d50:	add    BYTE PTR [eax-0x6156ea30],cl
  417d56:	mov    DWORD PTR [ebp-0x2b],eax
  417d59:	or     DWORD PTR [esi+0x105c7007],edi
  417d5f:	mov    DWORD PTR [ecx+ebx*8],esp
  417d62:	add    esp,0x17c3f1e5
  417d68:	rcl    BYTE PTR [eax+0x6ac6fd39],0x76
  417d6f:	inc    ebp
  417d70:	call   0x6a59414e
  417d75:	xchg   edx,eax
  417d76:	add    al,0xe7
  417d78:	or     edx,esi
  417d7a:	cmp    eax,0xe45c72fd
  417d7f:	aas    
  417d80:	cmp    DWORD PTR [edi+0x40],edx
  417d83:	addr16 jmp 0x5c593164
  417d89:	cli    
  417d8a:	add    dl,BYTE PTR [esi-0x7a]
  417d8d:	dec    esp
  417d8e:	adc    BYTE PTR [ecx+0xbb362b2],cl
  417d94:	jbe    0x417d82
  417d96:	pop    es
  417d97:	call   0xfd7ed546
  417d9c:	push   0x51
  417d9e:	aas    
  417d9f:	jno    0x417dae
  417da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da2:	pop    ss
  417da3:	cld    
  417da4:	push   esi
  417da5:	pop    edx
  417da6:	mov    dh,0x22
  417da8:	fs popa 
  417daa:	mov    dh,0x8
  417dac:	add    BYTE PTR [ecx-0x640006d8],bl
  417db2:	aaa    
  417db3:	xor    BYTE PTR [eax+0x6a000],0xf
  417dba:	push   edx
  417dbb:	jg     0x417dbb
  417dbd:	push   cs
  417dbe:	bound  esi,QWORD PTR [edi-0x1]
  417dc1:	shl    BYTE PTR [esi+edi*1-0x34383ef8],0x7f
  417dc9:	aas    
  417dca:	lock dec edi
  417dcc:	scas   al,BYTE PTR es:[edi]
  417dcd:	jmp    0x417d81
  417dcf:	mov    esp,0x420d7045
  417dd4:	add    eax,0xc724b80
  417dd9:	test   BYTE PTR [ecx+0x62fffd27],dl
  417ddf:	inc    edx
  417de0:	sbb    eax,0x79828b01
  417de5:	sbb    eax,0xb60b0384
  417dea:	ret    
  417deb:	add    eax,0x4abb60b
  417df0:	mov    ebp,0xbe3c4ce0
  417df5:	add    ecx,DWORD PTR [ebx+eax*4]
  417df8:	cmp    edx,DWORD PTR [eax+edx*4-0x26]
  417dfc:	xchg   BYTE PTR [esi+0x3b4],al
  417e02:	mov    DWORD PTR [eax],0x368188ff
  417e08:	out    0x93,al
  417e0a:	push   cs
  417e0b:	enter  0x8bfa,0x71
  417e0f:	loop   0x417e50
  417e11:	push   eax
  417e12:	scas   al,BYTE PTR es:[edi]
  417e13:	push   es
  417e14:	push   0x0
  417e16:	mov    edx,DWORD PTR [edx+0x15]
  417e19:	lea    eax,[eax]
  417e1b:	mov    bl,0x3
  417e1d:	push   esi
  417e1e:	jmp    ecx
  417e20:	xor    cl,BYTE PTR [eax+0x9525bcb]
  417e26:	call   FWORD PTR [ebp-0x4e1806a2]
  417e2c:	rol    DWORD PTR [ebp-0x3],cl
  417e2f:	push   ds
  417e30:	rol    DWORD PTR [ebx],0xd
  417e33:	and    esi,ebx
  417e35:	in     al,0xff
  417e37:	shl    BYTE PTR ds:0xefcafbec,cl
  417e3d:	cmc    
  417e3e:	sub    DWORD PTR [edi],0x5
  417e41:	add    al,0x0
  417e43:	js     0x417e82
  417e45:	inc    ebp
  417e46:	std    
  417e47:	mov    dl,0x9c
  417e49:	adc    bh,BYTE PTR [ebx]
  417e4b:	xchg   BYTE PTR ds:0x5529fd46,cl
  417e51:	or     BYTE PTR [edx],bl
  417e53:	cdq    
  417e54:	cmp    eax,0xaeb87443
  417e59:	inc    eax
  417e5a:	je     0x417df2
  417e5c:	outs   dx,BYTE PTR ds:[esi]
  417e5d:	jecxz  0x417e5a
  417e5f:	and    BYTE PTR ds:0x7a182f3,0x4
  417e66:	add    BYTE PTR [edx-0x64014463],ah
  417e6c:	xchg   ebp,eax
  417e6d:	mov    bl,0x1
  417e6f:	pop    esp
  417e70:	dec    esp
  417e71:	cld    
  417e72:	or     BYTE PTR [ecx+ebp*1+0x49],bl
  417e76:	adc    BYTE PTR [edx+0x3693d01f],0x58
  417e7d:	hlt    
  417e7e:	mov    ch,0x0
  417e80:	fisubr DWORD PTR [edx]
  417e82:	hlt    
  417e83:	mov    ch,0xea
  417e85:	sub    DWORD PTR [edx-0x20],eax
  417e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e89:	and    BYTE PTR [edx+0x1],al
  417e8c:	and    eax,0xa95402ac
  417e91:	xchg   edi,eax
  417e92:	dec    esi
  417e93:	inc    ebx
  417e94:	mov    ebp,0xe182f42a
  417e99:	push   edi
  417e9a:	add    DWORD PTR [eax],eax
  417e9c:	push   ds
  417e9d:	gs jmp esi
  417ea0:	add    al,BYTE PTR [ebx]
  417ea2:	pusha  
  417ea3:	inc    ebp
  417ea4:	clc    
  417ea5:	or     eax,0xcf3bd95
  417eaa:	popf   
  417eab:	mov    ch,0x9c
  417ead:	inc    ebx
  417eae:	inc    edi
  417eaf:	cld    
  417eb0:	xchg   ebp,eax
  417eb1:	inc    ebx
  417eb2:	adc    ch,BYTE PTR [esp+edx*4]
  417eb5:	fmul   st(6),st
  417eb7:	hlt    
  417eb8:	sbb    al,0x19
  417eba:	rol    DWORD PTR [ebx],cl
  417ebc:	popf   
  417ebd:	stc    
  417ebe:	mov    ebx,cs
  417ec0:	dec    ebp
  417ec1:	pop    ecx
  417ec2:	jo     0x417e6a
  417ec4:	xor    ch,BYTE PTR [ecx]
  417ec6:	xor    eax,0x2c327681
  417ecb:	shr    DWORD PTR [edx+0x77fde3d],0x3
  417ed2:	out    0x3,eax
  417ed4:	test   al,0x74
  417ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ed7:	add    ah,BYTE PTR [esp+ecx*8]
  417eda:	cmp    BYTE PTR [edx+0x1e],0xae
  417ede:	in     eax,dx
  417edf:	inc    esp
  417ee0:	or     BYTE PTR [ecx+0x2300f82d],0x87
  417ee7:	push   edi
  417ee8:	inc    ebp
  417ee9:	jo     0x417f28
  417eeb:	bound  edi,QWORD PTR [ebp+0x7a9eea02]
  417ef1:	push   ss
  417ef2:	mov    edx,0x895844c5
  417ef7:	sub    al,0xfc
  417ef9:	test   DWORD PTR [edx+0x60],ecx
  417efc:	jle    0x417ecf
  417efe:	cmp    eax,0x8f1a44ae
  417f03:	and    eax,DWORD PTR [ebp+0x38]
  417f06:	cmp    eax,0x4a843872
  417f0b:	out    0x8d,al
  417f0d:	loopne 0x417f0f
  417f0f:	test   al,0x63
  417f11:	xchg   ebp,eax
  417f12:	mov    esi,DWORD PTR [esp+eax*4]
  417f15:	test   al,0x74
  417f17:	add    DWORD PTR cs:[ebx+eax*2-0x30e71a00],esp
  417f1f:	add    ah,BYTE PTR [eax+0x43]
  417f22:	lea    ecx,ds:0xbf01399f
  417f28:	dec    ecx
  417f29:	test   BYTE PTR [ecx],0xbf
  417f2c:	pusha  
  417f2d:	sub    edx,DWORD PTR [ecx-0x6c115b77]
  417f33:	sub    DWORD PTR [ebx],ebp
  417f35:	(bad)  
  417f36:	cmp    al,BYTE PTR [edi-0x7974ad5c]
  417f3c:	ins    DWORD PTR es:[edi],dx
  417f3d:	sahf   
  417f3e:	add    al,BYTE PTR [eax]
  417f40:	pusha  
  417f41:	add    eax,DWORD PTR [ebp+0x2466f89]
  417f47:	add    cl,ch
  417f49:	add    BYTE PTR [ebx],ch
  417f4b:	mov    DWORD PTR [eax+0x16],ebp
  417f4e:	popa   
  417f4f:	aas    
  417f50:	lds    esp,FWORD PTR [esi+eax*8+0x3d]
  417f54:	std    
  417f55:	push   es
  417f56:	lahf   
  417f57:	add    al,BYTE PTR [eax]
  417f59:	jmp    0xf6cd3f75
  417f5e:	js     0x417f8c
  417f60:	ret    
  417f61:	stos   BYTE PTR es:[edi],al
  417f62:	sahf   
  417f63:	jg     0x417f25
  417f65:	test   BYTE PTR [edi],0x65
  417f68:	add    al,0xe9
  417f6a:	sahf   
  417f6b:	or     eax,0x3c83d688
  417f70:	std    
  417f71:	push   0xffffffd6
  417f73:	add    al,0xe7
  417f75:	pop    ss
  417f76:	cwde   
  417f77:	cmp    eax,0x105c70fd
  417f7c:	xchg   DWORD PTR [ecx+edx*4],edx
  417f7f:	mov    DWORD PTR [ebx+0x5],eax
  417f82:	pop    ecx
  417f83:	int3   
  417f84:	imul   ebp,ecx,0x6c1bafdf
  417f8a:	push   esi
  417f8b:	add    edi,ebp
  417f8d:	sbb    al,0x89
  417f8f:	mov    ecx,ecx
  417f91:	aaa    
  417f92:	fisubr WORD PTR [edi+0x7a23000f]
  417f98:	or     edi,edi
  417f9a:	or     DWORD PTR [eax],ecx
  417f9c:	call   0xfb010c69
  417fa1:	or     DWORD PTR [ebp+eax*1-0x3976da8c],0x73
  417fa9:	or     edx,DWORD PTR [ecx+0xfffbe0]
  417faf:	push   ebx
  417fb0:	jno    0x481672
  417fb6:	cvtps2pd xmm0,QWORD PTR [edi-0x2]
  417fba:	push   cs
  417fbb:	dec    edx
  417fbc:	dec    edi
  417fbd:	inc    eax
  417fbf:	push   esp
  417fc0:	push   cs
  417fc1:	pop    es
  417fc2:	shl    DWORD PTR [edi-0x7c08009],0x73
  417fc9:	mov    ah,0xeb
  417fcb:	mov    edx,0x3d70468c
  417fd0:	dec    ecx
  417fd1:	add    eax,0x5a3bbb8a
  417fd6:	je     0x417f64
  417fd8:	cmp    edx,DWORD PTR [ecx+0xf]
  417fdb:	stc    
  417fdc:	or     DWORD PTR [edi],edx
  417fde:	add    BYTE PTR [eax+edx*1-0x4a],dh
  417fe2:	inc    edi
  417fe3:	jne    0x417ff5
  417fe5:	mov    dh,0x4f
  417fe7:	xchg   dh,al
  417fe9:	fisttp WORD PTR [eax]
  417feb:	outs   dx,DWORD PTR ds:[esi]
  417fec:	(bad)  
  417fed:	(bad)  
  417fee:	div    esp
  417ff0:	add    BYTE PTR [esp+esi*2+0x20],dl
  417ff4:	jg     0x418031
  417ff6:	push   ebp
  417ff7:	iret   
  417ff8:	mov    DWORD PTR [eax-0x7900bc00],eax
  417ffe:	pop    esi
  417fff:	mov    BYTE PTR [ebp-0x7c9cefbf],cl
  418005:	xchg   ebp,eax
  418006:	inc    BYTE PTR [ebx]
  418008:	shl    BYTE PTR [esi],0x5d
  41800b:	adc    al,0x10
  41800d:	test   BYTE PTR [eax-0x2bd6c63],dl
  418013:	add    BYTE PTR [eax],dl
  418015:	in     al,0x4
  418017:	adc    ch,0x22
  41801a:	mov    WORD PTR [ebx-0x43],es
  41801d:	adc    cl,BYTE PTR ss:[ecx-0x49edaea8]
  418024:	pop    edx
  418025:	and    eax,0x2ff5df86
  41802a:	inc    esp
  41802b:	xchg   DWORD PTR [eax+0x1],ebx
  41802e:	lea    eax,[ebx-0x3f]
  418031:	imul   eax,DWORD PTR [ecx+0x4da04a3d],0x1caeaa50
  41803b:	adc    eax,0x538e299d
  418040:	jge    0x418081
  418042:	add    ebp,edi
  418044:	dec    eax
  418045:	dec    ebp
  418046:	inc    edx
  418047:	jae    0x417fde
  418049:	jnp    0x41808d
  41804b:	jae    0x417fda
  41804d:	sbb    al,0xb8
  41804f:	or     ebp,DWORD PTR [edx-0x7617f663]
  418055:	adc    DWORD PTR [edx-0x3],eax
  418058:	and    ah,ch
  41805a:	adc    DWORD PTR [ebx+0x14da9],eax
  418060:	push   ss
  418061:	scas   eax,DWORD PTR es:[edi]
  418062:	adc    al,0xe7
  418064:	fst    DWORD PTR [eax+0x1]
  418067:	add    BYTE PTR [edx-0x5c013867],ch
  41806d:	xchg   ecx,eax
  41806e:	iret   
  41806f:	add    DWORD PTR [esp+ecx*2+0xc],ebx
  418073:	or     DWORD PTR [ebp+ebp*1+0x39],ebx
  418077:	add    BYTE PTR [eax],0x9a
  41807a:	pop    ss
  41807b:	mov    eax,0x3c1644eb
  418080:	std    
  418081:	dec    edx
  418082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418083:	les    esp,FWORD PTR [ebx]
  418085:	(bad)  
  418087:	shr    DWORD PTR [ecx-0x63],cl
  41808a:	add    ah,BYTE PTR [esi-0x49726949]
  418090:	inc    ecx
  418091:	scas   al,BYTE PTR es:[edi]
  418092:	sbb    ah,BYTE PTR [edx+0x4d]
  418095:	retf   
  418096:	cmp    DWORD PTR [esp+edx*1],edx
  418099:	sbb    BYTE PTR [eax+0xa8e40f2],dh
  41809f:	(bad)  
  4180a0:	dec    esi
  4180a1:	adc    BYTE PTR [edx],bh
  4180a3:	jbe    0x41802c
  4180a5:	fisttp QWORD PTR [ecx]
  4180a7:	fs dec esi
  4180a9:	call   0xe7c2:0x2b10e702
  4180b0:	adc    BYTE PTR [ebx],dh
  4180b2:	retf   0x42e8
  4180b5:	std    
  4180b6:	or     ah,dl
  4180b8:	inc    edx
  4180b9:	pushf  
  4180ba:	cmp    ah,BYTE PTR [edi+0x1]
  4180bd:	imul   ebp,DWORD PTR [esi+0x37ea2b4a],0x8d584136
  4180c7:	es adc ebx,esi
  4180ca:	retf   0x10e7
  4180cd:	jmp    0x4180a1
  4180cf:	call   0xe24c4b16
  4180d4:	dec    ebp
  4180d5:	pushf  
  4180d6:	inc    ebx
  4180d7:	addr16 cld 
  4180d9:	out    dx,al
  4180da:	scas   al,BYTE PTR es:[edi]
  4180db:	adc    cl,BYTE PTR [ebp-0x58211a00]
  4180e1:	shl    ah,cl
  4180e3:	add    dh,dh
  4180e5:	mov    dh,0xa6
  4180e7:	xchg   DWORD PTR [edi-0x15087fc],edx
  4180ed:	mov    WORD PTR [eax+edx*8-0x23],fs
  4180f1:	mov    dh,0x9a
  4180f3:	cmp    DWORD PTR [eax+edx*1+0x60],ebx
  4180f7:	scas   eax,DWORD PTR es:[edi]
  4180f8:	fisubr WORD PTR [ebx]
  4180fa:	retf   0xc631
  4180fd:	inc    eax
  4180fe:	push   ds
  4180ff:	inc    edx
  418100:	out    dx,al
  418101:	xchg   BYTE PTR [edx-0x6117001d],bh
  418107:	and    DWORD PTR [ecx+0x4537ddb6],esp
  41810d:	div    BYTE PTR [edi+edi*4-0x385b1202]
  418114:	add    DWORD PTR [eax-0x57f6f582],ebp
  41811a:	mov    eax,ds:0xeac6803a
  41811f:	mov    ah,0xeb
  418121:	nop
  418122:	and    BYTE PTR ds:0x70ad76fd,bh
  418128:	dec    ebp
  418129:	call   0xeb86f1bb
  41812e:	pop    edi
  41812f:	pop    ecx
  418130:	or     dl,dh
  418132:	push   esi
  418133:	mov    eax,ebp
  418135:	add    bl,BYTE PTR [esi-0x7e]
  418138:	cmp    al,cl
  41813a:	daa    
  41813b:	lds    edx,FWORD PTR [ebx]
  41813d:	mov    ebx,0xdd4b8bae
  418142:	add    BYTE PTR [ecx],bl
  418144:	leave  
  418145:	add    esp,DWORD PTR [edx-0x69]
  418148:	adc    DWORD PTR [ebx+0x39],0x121bcd27
  41814f:	call   0x88c:0x9e196383
  418156:	imul   esp,DWORD PTR [edi-0x26],0x19e6650c
  41815d:	add    cl,ch
  41815f:	push   ds
  418160:	xor    BYTE PTR [edi-0x12],dl
  418163:	and    dh,BYTE PTR [esi+0x19]
  418166:	jmp    0x94390409
  41816b:	lea    edi,[esi-0x4a]
  41816e:	add    bl,BYTE PTR [ecx+0x46e08002]
  418174:	pop    es
  418175:	test   BYTE PTR [esi+eax*4-0x6796fffe],al
  41817c:	fisttp DWORD PTR [eax+eax*1]
  41817f:	shr    BYTE PTR [edx-0x7bcbffea],0xf5
  418186:	pop    edi
  418187:	add    BYTE PTR ds:0x7e6f980,0x81
  41818e:	fwait
  41818f:	inc    esp
  418190:	add    al,0x0
  418192:	psrld  mm0,QWORD PTR [esi+0x0]
  418196:	cmpltps xmm7,XMMWORD PTR [esi]
  41819a:	shl    DWORD PTR ds:0x89c80707,0x1a
  4181a1:	add    eax,0x84fab989
  4181a6:	mov    es,WORD PTR [eax]
  4181a8:	jo     0x4181a8
  4181aa:	(bad)  
  4181ab:	jmp    FWORD PTR [edi]
  4181ad:	dec    esi
  4181ae:	adc    DWORD PTR [ebp+ebp*8-0x40],edi
  4181b2:	inc    ebp
  4181b3:	cmp    ch,dh
  4181b5:	add    eax,DWORD PTR [eax]
  4181b7:	add    BYTE PTR [edi+0x28],bl
  4181ba:	mov    BYTE PTR [esi-0x8],al
  4181bd:	mov    edx,cs
  4181bf:	mov    esi,DWORD PTR [edx]
  4181c1:	adc    al,0x27
  4181c3:	push   ebp
  4181c4:	nop
  4181c5:	mov    edx,DWORD PTR [eax+edx*4]
  4181c8:	cmp    eax,0x128b881a
  4181cd:	or     BYTE PTR [edi+0x653dcfc3],al
  4181d3:	mov    DWORD PTR [eax],eax
  4181d5:	mov    al,BYTE PTR [ebx+ecx*4]
  4181d8:	stc    
  4181d9:	out    dx,eax
  4181da:	mov    BYTE PTR [edi*2+0x1b104236],al
  4181e1:	std    
  4181e2:	jle    0x4181a4
  4181e4:	jbe    0x41816c
  4181e6:	inc    ecx
  4181e7:	adc    bh,bh
  4181e9:	nop
  4181ea:	xchg   esp,eax
  4181eb:	add    BYTE PTR [ebx+eax*1+0x35d0d281],al
  4181f2:	ss dec edx
  4181f4:	cmp    BYTE PTR [edx+0x31],0x8b
  4181f8:	popf   
  4181f9:	push   ebx
  4181fa:	mov    cl,BYTE PTR ds:0x94d724
  418200:	popf   
  418201:	sub    DWORD PTR [edx+0x216aad45],ecx
  418207:	add    ch,ch
  418209:	jo     0x4181c1
  41820b:	or     eax,DWORD PTR [eax]
  41820d:	cmp    ch,bh
  41820f:	paddw  mm1,QWORD PTR [eax-0x62bfeca7]
  418216:	mov    ah,0xc5
  418218:	adc    edx,DWORD PTR [esi]
  41821a:	adc    BYTE PTR [edi+eax*4],cl
  41821d:	pusha  
  41821e:	cmp    DWORD PTR [edx+0x44ac0543],ecx
  418224:	or     al,0x14
  418226:	ficomp WORD PTR [ebx]
  418228:	out    0x1a,eax
  41822a:	mov    bh,0x3d
  41822c:	std    
  41822d:	ficom  WORD PTR es:[edi]
  418230:	xor    BYTE PTR [edx-0xab4758a],0xb1
  418237:	iret   
  418238:	pop    ss
  418239:	xchg   edx,eax
  41823a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823b:	stos   BYTE PTR es:[edi],al
  41823c:	sti    
  41823d:	fcmovb st,st(7)
  41823f:	stc    
  418240:	pop    edx
  418241:	int    0x2f
  418243:	test   DWORD PTR [ebx-0x37],esp
  418246:	idiv   DWORD PTR ds:0x1a4a8580
  41824c:	rcr    BYTE PTR [esi],0xc9
  41824f:	cmp    al,BYTE PTR [ecx+0x3d812add]
  418255:	push   edx
  418256:	mov    dl,0xc7
  418258:	pop    ds
  418259:	xchg   edx,eax
  41825a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825b:	jmp    0x8a6d1f72
  418260:	inc    ebx
  418261:	mov    ecx,0x9d69d16b
  418266:	xor    al,0xb5
  418268:	sbb    edx,DWORD PTR [eax]
  41826a:	xchg   ebp,eax
  41826b:	add    cl,BYTE PTR [edi-0x2d]
  41826e:	and    al,0xb5
  418270:	verr   WORD PTR [esi]
  418273:	add    esi,DWORD PTR [edx-0x21f911c3]
  418279:	mov    bh,0x9a
  41827b:	sub    bl,dh
  41827d:	aaa    
  41827e:	pop    eax
  41827f:	ss fs inc esp
  418282:	mov    al,ds:0x9d1dbe7f
  418287:	add    al,BYTE PTR [eax]
  418289:	(bad)  
  41828a:	mov    ds:0x97866c05,al
  41828f:	add    ah,bh
  418291:	mov    BYTE PTR [esi-0x701d6ff2],dh
  418297:	add    ah,bh
  418299:	and    BYTE PTR [ebx-0x5c48190a],0xf9
  4182a0:	sub    al,0xac
  4182a2:	mov    eax,ds:0x9d1c287e
  4182a7:	add    dh,BYTE PTR [ebp-0x39]
  4182aa:	stos   BYTE PTR es:[edi],al
  4182ab:	add    bl,bh
  4182ad:	test   eax,0xf8fec525
  4182b2:	retf   
  4182b3:	scas   al,BYTE PTR es:[edi]
  4182b4:	ret    
  4182b5:	clc    
  4182b6:	dec    eax
  4182b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b8:	in     eax,dx
  4182b9:	xchg   DWORD PTR [edx+ebx*1-0x42dbfc19],esi
  4182c0:	out    dx,al
  4182c1:	xchg   ch,bl
  4182c3:	scas   al,BYTE PTR es:[edi]
  4182c4:	push   es
  4182c5:	stc    
  4182c6:	repz add eax,0x2a52065
  4182cc:	out    0xa9,eax
  4182ce:	mov    edx,0x4b8e96d2
  4182d3:	push   ss
  4182d4:	jb     0x418317
  4182d6:	add    BYTE PTR [ebp-0x62fb8f4e],dh
  4182dc:	jg     0x418305
  4182de:	or     eax,0x3eefc21
  4182e3:	popf   
  4182e4:	sub    esp,edx
  4182e6:	mov    bl,ah
  4182e8:	push   ss
  4182e9:	jmp    0x1ce6:0x5bc44b
  4182f0:	das    
  4182f1:	adc    eax,0xc98b9ee9
  4182f6:	adc    bl,cl
  4182f8:	mov    BYTE PTR [edi],cl
  4182fa:	and    ecx,DWORD PTR [ebx-0x17]
  4182fd:	or     al,0x6c
  4182ff:	xchg   BYTE PTR [edi],cl
  418301:	add    cl,ch
  418303:	sbb    eax,0xad3cff3a
  418308:	mov    BYTE PTR [edi],bh
  41830a:	call   0xe66c4253
  41830f:	and    ecx,DWORD PTR [edi+0x15]
  418312:	jmp    0x882842b5
  418317:	jae    0x418350
  418319:	std    
  41831a:	loop   0x41835c
  41831c:	popf   
  41831d:	call   0x88bda8a8
  418322:	jmp    0x2f4285c5
  418327:	cmp    edx,edi
  418329:	xlat   BYTE PTR ds:[ebx]
  41832a:	xchg   edx,eax
  41832b:	mov    esp,0xc5e15b7d
  418330:	and    esi,esi
  418332:	and    al,0x91
  418334:	add    BYTE PTR [esp+ebp*4+0x15],dh
  418338:	les    ebp,FWORD PTR [ebx+0x22]
  41833b:	add    BYTE PTR [esi-0x4d],al
  41833e:	aaa    
  41833f:	(bad)  
  418340:	loopne 0x41834e
  418342:	sub    DWORD PTR [ecx],0xa
  418345:	push   es
  418346:	push   0xffffffe9
  418348:	out    dx,al
  418349:	xchg   DWORD PTR [esi-0x23],edx
  41834c:	adc    eax,0x2768e843
  418351:	add    al,BYTE PTR [eax]
  418353:	inc    edx
  418354:	daa    
  418355:	mov    eax,DWORD PTR [esi+0x5]
  418358:	mov    ah,0x3c
  41835a:	cmp    DWORD PTR [eax-0x6f],eax
  41835d:	jg     0x4182e9
  41835f:	(bad)  
  418360:	sahf   
  418361:	add    cl,BYTE PTR [edx+0x2bc694e2]
  418367:	add    BYTE PTR [ebx+0x74177b7d],dl
  41836d:	add    BYTE PTR [edi-0x8],bh
  418370:	test   DWORD PTR [eax+eiz*4-0x76],ebp
  418374:	inc    edi
  418375:	add    edi,esp
  418377:	xchg   ebp,eax
  418378:	idiv   DWORD PTR [eax+0x3d]
  41837b:	add    BYTE PTR [edi-0x73],cl
  41837e:	jg     0x4183fe
  418380:	test   dh,bh
  418382:	or     al,BYTE PTR [ebp+0xfd9]
  418388:	mov    bh,0x78
  41838a:	dec    ebp
  41838b:	add    BYTE PTR [ecx-0x1fb177a3],cl
  418391:	xor    edx,esi
  418393:	je     0x41835a
  418395:	add    DWORD PTR [esi+0x18],0xffffffb9
  418399:	mov    esi,0xd73f1f73
  41839e:	or     al,BYTE PTR [ebx+0xfbd00]
  4183a4:	add    BYTE PTR [esi-0x5572b002],bl
  4183aa:	sbb    al,BYTE PTR [edi-0x79dcd33d]
  4183b0:	add    BYTE PTR [ebx+eax*4],al
  4183b3:	ror    BYTE PTR [edi],0x78
  4183b6:	xor    dl,BYTE PTR [eax+eax*1]
  4183b9:	hlt    
  4183ba:	in     al,0x24
  4183bc:	mov    edi,DWORD PTR [edx]
  4183be:	or     al,0x27
  4183c0:	enter  0xd5af,0xa
  4183c4:	xchg   DWORD PTR [ecx+0x4e00000f],ebx
  4183ca:	add    edi,DWORD PTR [edx]
  4183cc:	dec    esi
  4183cd:	nop
  4183ce:	pop    es
  4183cf:	sbb    DWORD PTR [edx],0x82ffffdb
  4183d5:	ins    BYTE PTR es:[edi],dx
  4183d6:	std    
  4183d7:	jae    0x4183e5
  4183d9:	cs cmp edi,esi
  4183dc:	cmp    edx,edi
  4183de:	sub    cl,BYTE PTR [eax*4+0x12229d]
  4183e5:	popf   
  4183e6:	mov    al,ds:0x63b66bc1
  4183eb:	adc    eax,0x3a34c6e7
  4183f0:	std    
  4183f1:	mov    dh,0x8b
  4183f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f4:	or     al,0x1f
  4183f6:	ltr    WORD PTR cs:[ebp+0x62fd1c52]
  4183fe:	push   esp
  4183ff:	mov    cs,WORD PTR [esi-0x37]
  418402:	adc    BYTE PTR [ebx+0xd],bl
  418405:	add    BYTE PTR [ecx],bl
  418407:	push   ebx
  418408:	cmp    bh,ch
  41840a:	dec    edx
  41840b:	mov    al,0xbe
  41840d:	pop    ss
  41840e:	sbb    BYTE PTR [ecx-0x53],ch
  418411:	and    dh,BYTE PTR [esi-0x6e]
  418414:	mov    dh,0xe
  418416:	(bad)  
  418417:	sub    ecx,edx
  418419:	mov    dl,bl
  41841b:	std    
  41841c:	mov    ecx,es
  41841e:	xor    eax,0x9d0088ce
  418423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418424:	inc    eax
  418425:	jae    0x4183e7
  418427:	pop    eax
  418428:	inc    ecx
  418429:	mov    DWORD PTR [eax+0x2d],ebx
  41842c:	mov    WORD PTR [esi+0x12921],cs
  418432:	add    al,0xdc
  418434:	sbb    DWORD PTR [eax],eax
  418436:	popf   
  418437:	mov    al,ds:0xf1b61bbe
  41843c:	std    
  41843d:	(bad)  
  41843e:	push   0xffffffbc
  418440:	mov    cl,BYTE PTR [ecx]
  418442:	xchg   edi,eax
  418443:	pop    ebx
  418444:	in     eax,0x72
  418446:	mov    ebp,0x4eff38a7
  41844b:	xor    DWORD PTR [ebx-0x3e0063bf],ecx
  418451:	sub    dh,BYTE PTR [eax]
  418453:	sbb    BYTE PTR [esi-0x3dffbeba],cl
  418459:	sbb    esp,DWORD PTR [esi+0x2]
  41845c:	aas    
  41845d:	mov    al,0xdb
  41845f:	sub    BYTE PTR [ebp+0x39],dl
  418462:	cwde   
  418463:	xor    dl,dl
  418465:	fsqrt  
  418467:	mov    bh,0xe2
  418469:	test   BYTE PTR [eax],0x63
  41846c:	push   ds
  41846d:	jecxz  0x41846d
  41846f:	loopne 0x41841b
  418471:	jne    0x418474
  418473:	es (bad) 
  418475:	cmc    
  418476:	mov    ebx,ebx
  418478:	stos   BYTE PTR es:[edi],al
  418479:	fnsave [ecx-0x24]
  41847c:	xor    DWORD PTR [edx-0x36],esi
  41847f:	scas   al,BYTE PTR es:[edi]
  418480:	add    DWORD PTR [ebp-0x3fbc5af8],edx
  418486:	add    BYTE PTR [esp],bl
  418489:	call   0x38e06d8a
  41848e:	sbb    dl,BYTE PTR [ecx+ecx*8]
  418491:	cmp    bh,BYTE PTR [edi+0x5d]
  418494:	mov    bh,0xd9
  418496:	cld    
  418497:	xlat   BYTE PTR ds:[ebx]
  418498:	cli    
  418499:	xor    al,0xa
  41849b:	ins    BYTE PTR es:[edi],dx
  41849c:	push   esp
  41849d:	sub    DWORD PTR [ebx+0x45e1cecb],ecx
  4184a3:	test   al,0x81
  4184a5:	pop    edx
  4184a6:	add    al,0x9d
  4184a8:	add    bl,dl
  4184aa:	inc    ebx
  4184ab:	hlt    
  4184ac:	adc    dh,dh
  4184ae:	jno    0x41844c
  4184b0:	jge    0x4184c7
  4184b2:	lock test eax,0x3205eb78
  4184b8:	sbb    esp,ebx
  4184ba:	test   ch,bh
  4184bc:	add    esi,DWORD PTR [ecx+0x11]
  4184bf:	pop    eax
  4184c0:	and    BYTE PTR [ecx-0x1],0x4f
  4184c4:	sti    
  4184c5:	sbb    DWORD PTR [esi-0x6c],edx
  4184c8:	inc    ebx
  4184c9:	fimul  WORD PTR [edi-0xb11e221]
  4184cf:	add    ah,ch
  4184d1:	in     eax,dx
  4184d2:	daa    
  4184d3:	or     DWORD PTR [esi],ecx
  4184d5:	inc    ebp
  4184d6:	add    BYTE PTR [edx+0x5b],ah
  4184d9:	test   eax,eax
  4184db:	fisubr WORD PTR [edx]
  4184dd:	and    dh,cl
  4184df:	es sub DWORD PTR fs:[ebx+0x1e],eax
  4184e4:	aam    0x2f
  4184e6:	mov    DWORD PTR [edi+0x7d4e7bb6],ebp
  4184ec:	or     eax,DWORD PTR [ebx+0x74]
  4184ef:	loop   0x418472
  4184f1:	pop    eax
  4184f2:	jno    0x4184b1
  4184f4:	dec    eax
  4184f5:	xor    DWORD PTR [ebp+0x64],ecx
  4184f8:	dec    edi
  4184f9:	or     eax,0x4bb92a89
  4184fe:	test   ecx,ebp
  418500:	sahf   
  418501:	test   eax,eax
  418503:	out    dx,al
  418504:	fnsetpm(287 only) 
  418506:	cld    
  418507:	(bad)  
  418508:	xchg   ebp,eax
  418509:	sbb    esp,DWORD PTR [ebx]
  41850b:	bound  ebx,QWORD PTR [ebp+ecx*1+0x29]
  41850f:	mov    cl,0x41
  418511:	pop    eax
  418512:	jne    0x4184f1
  418514:	sub    bl,bh
  418516:	cmp    DWORD PTR [edi],esp
  418518:	inc    ebp
  418519:	mov    ah,0x12
  41851b:	push   0x66
  41851d:	xor    DWORD PTR [esi],ecx
  41851f:	ins    DWORD PTR es:[edi],dx
  418520:	popf   
  418521:	das    
  418522:	std    
  418523:	sahf   
  418524:	sub    bl,al
  418526:	(bad)  
  418527:	rcr    ah,cl
  418529:	fisttp DWORD PTR [eiz*2-0x7902cf37]
  418530:	adc    DWORD PTR [ebx+0x41],eax
  418533:	ret    0xdc00
  418536:	pushf  
  418537:	or     al,0x6b
  418539:	mov    edi,0x196efd2d
  41853e:	enter  0x6c7b,0x5e
  418542:	inc    DWORD PTR [ebx-0x2d06bbb]
  418548:	adc    ch,dl
  41854a:	or     BYTE PTR ds:0xfd306967,cl
  418550:	add    BYTE PTR [ebx+0x36],bl
  418553:	mov    BYTE PTR [ecx+0x2d],0x3b
  418557:	pop    ecx
  418558:	cmp    eax,DWORD PTR [ebp+0x7acd8dfa]
  41855e:	jmp    0xc7e6:0x4d806afa
  418565:	mov    edx,0x4a3bfaea
  41856a:	push   0xb26bd170
  41856f:	dec    BYTE PTR [edx-0x9bfdfb6]
  418575:	cmp    ah,0x3
  418578:	jmp    0x3c6f1e
  41857d:	das    
  41857e:	dec    edx
  41857f:	imul   esi,DWORD PTR [ebx+0x38],0xcf03b608
  418586:	dec    eax
  418587:	xor    DWORD PTR [ebx+0x72],eax
  41858a:	add    ecx,DWORD PTR [eax]
  41858c:	add    al,0x6b
  41858e:	mov    al,0x99
  418590:	(bad)  
  418591:	pop    ebx
  418592:	clc    
  418593:	in     al,0x87
  418595:	stc    
  418596:	idiv   edx
  418598:	cmp    eax,DWORD PTR [eax]
  41859a:	mov    bl,BYTE PTR [edx+0x70]
  41859d:	mov    eax,ds:0x8afe9e4b
  4185a2:	push   0x32
  4185a4:	inc    eax
  4185a5:	test   BYTE PTR [eax],0xfc
  4185a8:	cld    
  4185a9:	call   0x3c7e1f
  4185ae:	out    dx,eax
  4185af:	push   ebp
  4185b0:	imul   esi,DWORD PTR [ebx-0x78],0x6f03b607
  4185b7:	dec    eax
  4185b8:	xor    DWORD PTR [ebx+0x72],eax
  4185bb:	add    cl,BYTE PTR [eax]
  4185bd:	add    DWORD PTR [edi],ebx
  4185bf:	leave  
  4185c0:	ss pop esi
  4185c2:	enter  0x7f08,0x76
  4185c6:	jnp    0x4185bf
  4185c8:	cli    
  4185c9:	setge  BYTE PTR [edi+0x155b8901]
  4185d0:	shl    ebp,0x99
  4185d3:	xor    DWORD PTR [ecx],edx
  4185d5:	out    0x27,eax
  4185d7:	lock xor al,0xfd
  4185da:	jbe    0x418573
  4185dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185dd:	or     al,0x1e
  4185df:	jg     0x418617
  4185e1:	std    
  4185e2:	mov    ds:0x26016b38,al
  4185e7:	pop    edi
  4185e8:	in     eax,dx
  4185e9:	inc    eax
  4185ea:	mov    ebx,DWORD PTR ds:0xa0761009
  4185f0:	mov    BYTE PTR [esi-0xf],cl
  4185f3:	inc    esp
  4185f4:	pop    esp
  4185f5:	or     eax,0xfd36661e
  4185fa:	jb     0x418624
  4185fc:	imul   eax,DWORD PTR [ecx],0x0
  4185ff:	ficomp WORD PTR [ebx+edi*1+0x1b9d920a]
  418606:	sti    
  418607:	pop    edx
  418608:	push   eax
  418609:	push   es
  41860a:	xchg   BYTE PTR [edi+edx*2+0x36],bh
  41860e:	std    
  41860f:	push   ds
  418610:	push   ecx
  418611:	add    eax,0x389c7f76
  418616:	or     esi,DWORD PTR [ecx-0x627d0902]
  41861c:	sbb    DWORD PTR [ecx],eax
  41861e:	je     0x4185b3
  418620:	push   ds
  418621:	ficomp WORD PTR [edi]
  418623:	popf   
  418624:	sbb    DWORD PTR [esi],eax
  418626:	xchg   BYTE PTR [eax-0x2f02c971],ah
  41862c:	inc    edx
  41862d:	loope  0x41862e
  41862f:	or     dl,BYTE PTR [eax+0x7e]
  418632:	cli    
  418633:	add    BYTE PTR [eax+0x41dd3136],cl
  418639:	mov    ebx,0x339ea25f
  41863e:	sti    
  41863f:	jmp    0x6601:0xe1dc2b9f
  418646:	ss xchg esp,eax
  418648:	dec    ecx
  418649:	out    dx,al
  41864a:	sub    cl,0x2d
  41864d:	push   esi
  41864e:	ss sbb eax,0x1e06e0eb
  418654:	cmp    eax,DWORD PTR [ebx+0x36]
  418657:	mov    eax,0xb1404fc2
  41865c:	cs ss cli 
  41865f:	dec    eax
  418660:	sahf   
  418661:	fld    QWORD PTR [edx+0x262fc400]
  418667:	ss test al,0x74
  41866a:	jmp    0xdc03:0xe70aa37c
  418671:	jmp    0xfdf9349d
  418676:	push   0x6e
  418678:	jbe    0x4186a8
  41867a:	inc    BYTE PTR [ecx+0x7fe5fc75]
  418680:	cmp    esi,DWORD PTR [eax]
  418682:	out    dx,al
  418683:	xor    eax,0x5072b1c
  418688:	and    DWORD PTR [eax-0x24],ebp
  41868b:	xor    eax,0x486f050
  418690:	popf   
  418691:	add    bl,dh
  418693:	jg     0x4186bc
  418695:	xor    dh,al
  418697:	xor    eax,0x3d58276
  41869c:	popf   
  41869d:	sbb    esi,DWORD PTR [edi-0x13d1d7ca]
  4186a3:	add    edi,DWORD PTR [ebp+0x2]
  4186a6:	out    0x4,eax
  4186a8:	pop    ds
  4186a9:	mov    dh,0x9a
  4186ab:	xor    eax,0xe3e0f010
  4186b0:	or     ch,BYTE PTR [esi]
  4186b2:	fidivr WORD PTR [ebp-0x79]
  4186b5:	das    
  4186b6:	xchg   BYTE PTR ds:0x3c6ddb6,dh
  4186bc:	popf   
  4186bd:	std    
  4186be:	jmp    FWORD PTR [eax+eax*2+0x29]
  4186c2:	std    
  4186c3:	outs   dx,BYTE PTR ds:[esi]
  4186c4:	jmp    0xff9e:0xe91fce
  4186cb:	add    ebp,0xffffff8b
  4186ce:	das    
  4186cf:	std    
  4186d0:	adc    al,0xa1
  4186d2:	repnz (bad) 
  4186d4:	call   0x473fef50
  4186d9:	jo     0x4186c6
  4186db:	pop    ebp
  4186dc:	int    0x99
  4186de:	and    DWORD PTR [edx+0x37],0x70
  4186e2:	das    
  4186e3:	or     eax,0xe759c77
  4186e8:	add    DWORD PTR [ecx-0x201dbefe],esp
  4186ee:	mov    bh,0x2a
  4186f0:	out    0xa,al
  4186f2:	repz sti 
  4186f4:	push   cs
  4186f5:	enter  0xf883,0xf0
  4186f9:	mov    eax,ds:0xa9fd2586
  4186fe:	das    
  4186ff:	xor    ecx,0xcf83fe7e
  418705:	stos   BYTE PTR es:[edi],al
  418706:	das    
  418707:	std    
  418708:	and    al,0xc1
  41870a:	add    al,BYTE PTR [eax]
  41870c:	jmp    0xd5530daa
  418711:	xchg   ecx,eax
  418712:	das    
  418713:	cmp    ebp,DWORD PTR [ecx-0x70]
  418716:	add    al,BYTE PTR [eax]
  418718:	shl    BYTE PTR [edx+0x28],1
  41871b:	std    
  41871c:	mov    esi,0xe91d2d2b
  418721:	sahf   
  418722:	inc    DWORD PTR [ecx-0x2d09423]
  418728:	in     al,0xa4
  41872a:	loop   0x41872b
  41872c:	call   0xf1c62031
  418731:	xchg   edx,eax
  418732:	shr    DWORD PTR [edi],1
  418734:	cmp    edi,DWORD PTR [esi+0xfd2cfe]
  41873a:	rep lods al,BYTE PTR ds:[esi]
  41873c:	out    0xfb,eax
  41873e:	jae    0x418736
  418740:	cmp    BYTE PTR [edi-0x2c],bl
  418743:	add    BYTE PTR [eax],al
  418745:	vmread esp,edx
  418748:	idiv   bh
  41874a:	inc    ebx
  41874b:	xor    al,0xfd
  41874d:	das    
  41874e:	les    eax,FWORD PTR [eax]
  418750:	in     eax,0x16
  418752:	jno    0x41874a
  418754:	cli    
  418755:	cmp    esi,edx
  418757:	fs or  al,0x83
  41875a:	dec    ebp
  41875b:	hlt    
  41875c:	cli    
  41875d:	inc    ebx
  41875f:	sahf   
  418760:	inc    BYTE PTR [edx+0x37]
  418763:	jmp    0xb4779671
  418768:	idiv   bh
  41876a:	ret    
  41876b:	cmp    al,0xd
  41876e:	sub    DWORD PTR [esi-0x94c033f],0x38
  418775:	test   DWORD PTR [eax+eax*1+0x0],esi
  418779:	invd   
  41877b:	lahf   
  41877c:	sti    
  41877d:	push   DWORD PTR [ebx+0x36]
  418780:	and    al,0x20
  418782:	je     0x418784
  418784:	or     eax,DWORD PTR [esi-0x5152e]
  41878a:	or     DWORD PTR [ebp+0x1d],0x86014400
  418791:	mov    eax,ds:0xfaf07000
  418796:	jmp    0x3c637d
  41879b:	lahf   
  41879c:	push   eax
  41879d:	imul   ecx,DWORD PTR [edi],0xfff89ac7
  4187a3:	repz push DWORD PTR [ebp-0x77c88fd]
  4187aa:	or     dl,BYTE PTR [ebx]
  4187ac:	xchg   BYTE PTR [esi+0x7ef033fc],al
  4187b2:	clc    
  4187b3:	popf   
  4187b4:	add    al,BYTE PTR es:[esi-0x2ce6f8e]
  4187bb:	mov    eax,0x9d00039e
  4187c0:	sbb    al,0x85
  4187c2:	fs out 0xb4,al
  4187c5:	xor    BYTE PTR [ebx],bh
  4187c7:	mov    edx,0xaa000139
  4187cc:	fwait
  4187cd:	test   al,0xfb
  4187cf:	ror    ah,cl
  4187d1:	out    dx,al
  4187d2:	es jge 0x4187ee
  4187d5:	add    DWORD PTR ds:0xfd2d5e1a,ecx
  4187db:	mov    edx,0xb2f8bad2
  4187e0:	in     al,dx
  4187e1:	add    BYTE PTR [esi-0x49fde59e],dh
  4187e7:	push   edx
  4187e8:	pop    ss
  4187e9:	inc    esp
  4187ea:	loopne 0x418791
  4187ec:	xor    BYTE PTR [ecx+eax*1+0x5d],al
  4187f0:	cwde   
  4187f1:	dec    eax
  4187f2:	add    DWORD PTR [esi+ebx*2],edx
  4187f5:	xor    DWORD PTR [ecx],edi
  4187f7:	add    al,bl
  4187f9:	sub    DWORD PTR [eax-0x28cd9f0],esi
  4187ff:	mov    bl,BYTE PTR [ecx+0x20087c9a]
  418805:	loop   0x4187b2
  418807:	add    al,0x16
  418809:	mov    DWORD PTR ds:0x506c29,eax
  41880f:	xor    DWORD PTR [edi-0x1e],ebp
  418812:	fld    DWORD PTR [edi-0x30]
  418815:	sbb    edi,DWORD PTR [esi+0x56]
  418818:	mov    cl,0x0
  41881a:	push   ebp
  41881b:	inc    edx
  41881c:	daa    
  41881d:	sbb    al,0x7c
  41881f:	push   ebx
  418820:	sub    DWORD PTR ds:0x8f1f0cc7,ebp
  418826:	add    DWORD PTR [eax],eax
  418828:	popf   
  418829:	sbb    eax,0x26175be
  41882e:	jecxz  0x4187f0
  418830:	mov    eax,ds:0x9d03ad83
  418835:	add    ah,dh
  418837:	jns    0x4188a1
  418839:	push   es
  41883a:	fidivr DWORD PTR [ecx+edi*4]
  41883d:	mov    ebp,0x5879f5
  418842:	out    dx,al
  418843:	xchg   edi,eax
  418844:	sub    bh,BYTE PTR [ecx+0x24]
  418847:	and    BYTE PTR [eax+0x1a051e74],dl
  41884d:	and    edi,ebp
  41884f:	(bad)  
  418850:	(bad)  
  418852:	xchg   esp,eax
  418853:	retf   0x419d
  418856:	inc    edi
  418857:	sti    
  418858:	xchg   ebp,eax
  418859:	inc    eax
  41885a:	pusha  
  41885b:	rol    BYTE PTR [eax],0xb6
  41885e:	js     0x41880c
  418860:	sub    ebp,DWORD PTR [esi]
  418862:	cli    
  418863:	jle    0x418897
  418865:	test   al,0x2a
  418867:	mov    dh,0x7c
  418869:	pop    esi
  41886a:	sub    ah,BYTE PTR [edx-0x28]
  41886d:	mov    es,WORD PTR [esi-0x277bf7d2]
  418873:	in     eax,dx
  418874:	jns    0x4188d3
  418876:	js     0x418817
  418878:	ins    DWORD PTR es:[edi],dx
  418879:	sbb    al,0x24
  41887b:	call   0xf6586efc
  418880:	jno    0x4188a7
  418882:	gs mov ebx,es
  418885:	push   0xfffffff9
  418887:	xor    al,0x83
  418889:	aaa    
  41888a:	cwde   
  41888b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41888c:	add    esp,eax
  41888e:	jnp    0x4188c4
  418890:	xor    BYTE PTR [edx],bl
  418892:	rcr    dh,0x87
  418895:	pop    ebp
  418896:	mov    al,0xde
  418898:	imul   eax,DWORD PTR [eax+0x2a],0xffffffce
  41889c:	mov    cl,0x23
  41889e:	sar    BYTE PTR [esi+0x62fa4f87],0xdb
  4188a5:	cmp    ch,BYTE PTR [edx]
  4188a7:	add    BYTE PTR [esi+0x60425428],dh
  4188ad:	repnz adc eax,0xd84db339
  4188b3:	cld    
  4188b4:	adc    al,0x99
  4188b6:	jnp    0x41890b
  4188b8:	popf   
  4188b9:	int3   
  4188ba:	mov    ch,0xef
  4188bc:	bound  esp,QWORD PTR [edi+0x7b]
  4188bf:	leave  
  4188c0:	xchg   ecx,eax
  4188c1:	add    BYTE PTR [ebx],dl
  4188c3:	pop    ss
  4188c4:	std    
  4188c5:	jle    0x4188e9
  4188c7:	inc    ebx
  4188c8:	or     eax,0x152a6d
  4188cd:	jmp    0x67355673
  4188d2:	ficom  DWORD PTR ds:0xebb2a489
  4188d8:	inc    edx
  4188d9:	push   ebp
  4188da:	rsqrtps xmm1,XMMWORD PTR [ecx+0x437b8a9c]
  4188e1:	inc    ecx
  4188e2:	rol    BYTE PTR [ecx+0xd],0x65
  4188e6:	xchg   BYTE PTR [edi],dl
  4188e8:	std    
  4188e9:	sbb    BYTE PTR ss:[esi+0x7e9de9eb],ch
  4188f0:	mov    ebx,0x89029efd
  4188f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188f6:	mov    edx,0x1fd4381
  4188fb:	(bad)  
  4188fc:	and    ebp,DWORD PTR [ecx-0x66dc3a09]
  418902:	xchg   edi,eax
  418903:	adc    BYTE PTR [ecx+ebp*8],0x9e
  418907:	daa    
  418908:	jae    0x4188db
  41890a:	loope  0x4188e1
  41890c:	repz out dx,al
  41890e:	adc    ebx,DWORD PTR [ecx]
  418910:	mov    DWORD PTR [edi-0x917c42f],ebp
  418916:	jge    0x41893f
  418918:	std    
  418919:	ins    BYTE PTR es:[edi],dx
  41891a:	fdivrp st(7),st
  41891c:	or     DWORD PTR [ebx],0xffffff92
  41891f:	add    al,BYTE PTR [eax]
  418921:	add    BYTE PTR [edi+0x38],al
  418924:	icebp  
  418925:	jmp    0xfb23972a
  41892a:	(bad)  
  41892b:	mov    ecx,0x4382fe3a
  418930:	and    al,0x86
  418932:	inc    ebp
  418933:	xor    BYTE PTR [edi+0x70c23c02],ah
  418939:	push   0x3c
  41893b:	mov    edi,0x993c3a6c
  418940:	imul   esp,DWORD PTR [edx+0xf],0xffffffb2
  418944:	dec    edx
  418945:	add    DWORD PTR [ebx],esi
  418947:	sub    eax,0xa20f4a19
  41894c:	cmp    bh,bh
  41894e:	push   cs
  41894f:	jo     0x418915
  418951:	test   BYTE PTR [ebp+0x68],cl
  418954:	add    dh,BYTE PTR [esi-0x233c4ab1]
  41895a:	or     BYTE PTR [edi+0x3b60aec],bh
  418960:	(bad)  
  418961:	mov    esp,0xbf25ace0
  418966:	mov    ecx,edi
  418968:	fadd   DWORD PTR [ebp+eax*2-0x47fa8f94]
  41896f:	retf   
  418970:	repnz cli 
  418972:	jg     0x418981
  418974:	inc    ecx
  418975:	cmc    
  418976:	add    ebx,0x0
  418979:	out    0x37,eax
  41897b:	jnp    0x418927
  41897d:	mov    edi,0x7e963c8d
  418982:	loope  0x418909
  418984:	lods   eax,DWORD PTR ds:[esi]
  418985:	dec    eax
  418986:	in     al,dx
  418987:	jnp    0x41893b
  418989:	xchg   DWORD PTR [edx-0x2bbe700],esp
  41898f:	push   cs
  418990:	mov    al,BYTE PTR [ebx-0x17b9256]
  418996:	inc    edx
  418997:	mov    DWORD PTR [ecx-0xe],edi
  41899a:	test   BYTE PTR [ebp-0x63],al
  41899d:	push   ecx
  41899e:	xchg   eax,eax
  4189a0:	mov    al,0x2b
  4189a2:	imul   edi,ebp,0xe8ad4132
  4189a8:	xchg   ebp,eax
  4189a9:	sub    al,0x3c
  4189ab:	aas    
  4189ac:	push   ss
  4189ad:	pop    ebx
  4189ae:	jnp    0x4189fb
  4189b0:	sbb    DWORD PTR [ebx+0x6bcef7c6],esp
  4189b6:	ret    0x7086
  4189b9:	sub    eax,0x4781c9ea
  4189be:	jmp    0xf689:0x8248895d
  4189c5:	sub    BYTE PTR ds:0x7a1d330d,0xc8
  4189cc:	scas   al,BYTE PTR es:[edi]
  4189cd:	mov    eax,DWORD PTR [ecx+0x50dba2df]
  4189d3:	loop   0x4189fb
  4189d5:	outs   dx,DWORD PTR ds:[esi]
  4189d6:	xor    eax,0x771cb5bf
  4189db:	add    al,0x95
  4189dd:	pop    esp
  4189de:	test   eax,edx
  4189e0:	stos   BYTE PTR es:[edi],al
  4189e1:	popf   
  4189e2:	enter  0xb2f9,0xc0
  4189e6:	sub    al,0x43
  4189e8:	xchg   ecx,eax
  4189e9:	mov    ah,0xbe
  4189eb:	sti    
  4189ec:	fs pop esi
  4189ee:	adc    eax,0xa468007e
  4189f3:	(bad)  
  4189f4:	not    esi
  4189f6:	icebp  
  4189f7:	cld    
  4189f8:	and    DWORD PTR [esi-0x9],0x2c
  4189fc:	std    
  4189fd:	push   ds
  4189fe:	mov    ds,WORD PTR ds:0x15862400
  418a04:	or     eax,0x17d719
  418a09:	popf   
  418a0a:	mov    ah,0xc6
  418a0c:	and    ebx,ebp
  418a0e:	mov    ds:0x2ed23c6,al
  418a13:	xchg   edi,eax
  418a14:	adc    al,0x9d
  418a16:	add    ah,bh
  418a18:	jp     0x4189fd
  418a1a:	xchg   esi,eax
  418a1b:	sbb    DWORD PTR ds:0xeb284374,edi
  418a21:	sti    
  418a22:	neg    BYTE PTR [edx-0x15]
  418a25:	pop    DWORD PTR [edx]
  418a27:	out    0x79,eax
  418a29:	pushf  
  418a2a:	ret    
  418a2b:	inc    dh
  418a2d:	and    edi,eax
  418a2f:	imul   edi,esi,0x14
  418a32:	daa    
  418a33:	scas   al,BYTE PTR es:[edi]
  418a34:	sbb    al,0x8b
  418a36:	xor    esp,DWORD PTR [esi+0xac0142e]
  418a3c:	repz fcmovnu st,st(2)
  418a3f:	test   eax,0xde41b5c4
  418a44:	jg     0x4189ce
  418a46:	or     eax,0x709803e7
  418a4b:	fidivr DWORD PTR [edx+0x5b]
  418a4e:	repnz in eax,0x75
  418a51:	push   0x176101
  418a56:	lahf   
  418a57:	ret    
  418a58:	push   ds
  418a59:	sbb    dl,cl
  418a5b:	sbb    edi,DWORD PTR [ecx]
  418a5d:	dec    BYTE PTR [eax]
  418a5f:	mov    edi,0xb6f0fee7
  418a64:	call   0xf23b47ad
  418a69:	inc    esp
  418a6a:	and    bh,BYTE PTR [ebp+0x2d8823a]
  418a70:	inc    edx
  418a71:	mov    cl,0x61
  418a73:	shl    BYTE PTR [esi],0x4
  418a76:	popf   
  418a77:	add    ah,bh
  418a79:	(bad)  
  418a7a:	push   eax
  418a7b:	mov    esi,0xce48fee7
  418a80:	call   0xe7688907
  418a85:	inc    esp
  418a86:	jge    0x418a83
  418a88:	icebp  
  418a89:	inc    ecx
  418a8a:	lods   al,BYTE PTR ds:[esi]
  418a8b:	push   eax
  418a8c:	addr16 sub al,0xbb
  418a8f:	cmc    
  418a90:	call   FWORD PTR [esp+ebx*8+0x7d]
  418a94:	push   ebx
  418a95:	std    
  418a96:	mov    ah,0x4c
  418a98:	or     DWORD PTR [ebp+ecx*4+0x2],0x258924c5
  418aa0:	std    
  418aa1:	jmp    0x142a4a44
  418aa6:	sub    al,0x66
  418aa8:	inc    eax
  418aa9:	jo     0x418b0d
  418aab:	push   ss
  418aac:	xchg   DWORD PTR [ebp*2+0x426af21b],esp
  418ab3:	sub    al,BYTE PTR [eax]
  418ab5:	cli    
  418ab6:	pop    esi
  418ab7:	ret    0x2c86
  418aba:	add    cl,dl
  418abc:	mov    edi,0xba83c6e8
  418ac1:	fisubr WORD PTR [edx-0x42]
  418ac4:	and    eax,0xf7bd1c88
  418ac9:	mov    ebp,0x3f99a671
  418ace:	jmp    0x98c1f2b4
  418ad3:	cmp    ah,dh
  418ad5:	jmp    DWORD PTR ds:0x70fbb956
  418adb:	loop   0x418b0a
  418add:	sub    DWORD PTR [ecx],0xa
  418ae0:	(bad)  
  418ae1:	mov    bh,0x56
  418ae3:	mov    BYTE PTR [edi],ah
  418ae5:	jge    0x418b47
  418ae7:	fisubr DWORD PTR ds:0xbf907f0d
  418aed:	cmc    
  418aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aef:	xchg   esi,eax
  418af0:	and    eax,0xf7d29c88
  418af5:	add    DWORD PTR [ebp-0x67],0x2
  418af9:	add    BYTE PTR [edx+0x4b],dh
  418afc:	aad    0xc
  418afe:	push   edi
  418aff:	popf   
  418b00:	cmc    
  418b01:	xor    BYTE PTR [ebx],bh
  418b03:	idiv   BYTE PTR [ecx+0x293262f3]
  418b09:	inc    edx
  418b0a:	add    ch,ch
  418b0c:	dec    ebp
  418b0d:	adc    DWORD PTR [ebx],edi
  418b0f:	scas   al,BYTE PTR es:[edi]
  418b10:	jb     0x418b3c
  418b12:	jmp    0x418b5b
  418b14:	xor    cl,bh
  418b16:	inc    edx
  418b17:	getsec 
  418b19:	imul   ecx,DWORD PTR [edi],0x1134b7
  418b1f:	add    BYTE PTR [esi+eiz*1],dh
  418b22:	mov    bl,0x13
  418b24:	mov    edi,0xa0f2d67
  418b29:	and    eax,0x659d4307
  418b2e:	icebp  
  418b2f:	ud1    edx,DWORD PTR [edx]
  418b32:	cmc    
  418b33:	call   DWORD PTR [ebx-0x2a]
  418b36:	inc    eax
  418b37:	adc    al,0x7f
  418b39:	fs stc 
  418b3b:	cmp    ecx,edx
  418b3d:	or     bh,BYTE PTR [esi-0x2b]
  418b40:	(bad)  
  418b41:	call   0x4bc0f50
  418b46:	sti    
  418b47:	inc    DWORD PTR [edi-0xcff16ac]
  418b4d:	jnp    0x418b99
  418b4f:	adc    al,0xf4
  418b51:	add    BYTE PTR [ebp-0x3ae5afa3],al
  418b57:	jge    0x418b59
  418b59:	test   al,0x48
  418b5b:	adc    al,0x7f
  418b5d:	xor    al,0x69
  418b5f:	jae    0x418aff
  418b61:	daa    
  418b62:	mov    bl,0x13
  418b64:	aas    
  418b65:	addr16 sub eax,0x7250a0f
  418b6b:	cmp    ecx,esi
  418b6d:	in     al,dx
  418b6e:	jo     0x418b95
  418b70:	not    ebp
  418b72:	inc    eax
  418b73:	adc    al,0x8d
  418b75:	cmp    eax,0xae77c11
  418b7a:	sbb    cl,BYTE PTR [ebx-0x3f7dabc6]
  418b80:	sub    BYTE PTR [ebx],dl
  418b82:	aaa    
  418b83:	pop    ebp
  418b84:	add    BYTE PTR [ebp-0x51f24cdf],bl
  418b8a:	loop   0x418b4d
  418b8c:	xchg   bl,bl
  418b8e:	pop    ebp
  418b8f:	call   0x22d61e52
  418b94:	neg    DWORD PTR [edx+0x2d]
  418b97:	jge    0x418c14
  418b99:	dec    ebp
  418b9a:	sbb    bh,ah
  418b9c:	or     BYTE PTR [edx-0x7902d6b2],0xe6
  418ba3:	daa    
  418ba4:	or     eax,0xfd2c7a1f
  418ba9:	xor    ah,BYTE PTR [ecx-0x4d22dc42]
  418baf:	mov    esi,0xdfef2223
  418bb4:	mov    dl,dh
  418bb6:	mov    edi,0x3588fd03
  418bbb:	jle    0x418b86
  418bbd:	or     al,BYTE PTR [edi]
  418bbf:	or     al,0x56
  418bc1:	add    cl,BYTE PTR [edi]
  418bc3:	adc    al,0xfd
  418bc5:	jo     0x418be4
  418bc7:	sub    dh,BYTE PTR [ebx-0x5b]
  418bca:	adc    DWORD PTR [esi-0x14],0x82bd7cea
  418bd1:	fst    QWORD PTR [eax+eax*4]
  418bd4:	iret   
  418bd5:	mov    bl,0x19
  418bd7:	add    DWORD PTR [ecx],edi
  418bd9:	jo     0x418b70
  418bdb:	mov    ah,0xd3
  418bdd:	mov    ah,0x51
  418bdf:	sub    ebp,edi
  418be1:	ret    0xb6b0
  418be4:	sti    
  418be5:	loop   0x418c3d
  418be7:	or     eax,0x19b200ff
  418bec:	add    DWORD PTR [ecx+0x1ea51aa4],eax
  418bf2:	adc    WORD PTR [ebp+0x2c3a1e0c],0xfffd
  418bfa:	xchg   edx,eax
  418bfb:	inc    esp
  418bfc:	outs   dx,DWORD PTR ds:[esi]
  418bfd:	or     esi,ebx
  418bff:	add    ah,al
  418c01:	mov    eax,0xc763f38e
  418c06:	jb     0x418c2b
  418c08:	push   ss
  418c09:	sub    ebx,esi
  418c0b:	push   cs
  418c0c:	bound  edi,QWORD PTR [ecx+0xfb3e966]
  418c12:	jecxz  0x418c57
  418c14:	ret    0xa83b
  418c17:	jle    0x418c46
  418c19:	sbb    BYTE PTR [eax+0x23],dl
  418c1c:	push   0xffffffa9
  418c1e:	add    dh,BYTE PTR ss:[eax-0x48]
  418c22:	scas   al,BYTE PTR es:[edi]
  418c23:	repz arpl WORD PTR [edx-0x74],dx
  418c27:	add    ah,bh
  418c29:	jl     0x418c01
  418c2b:	adc    bh,BYTE PTR es:[esi+eiz*4]
  418c2f:	lock add edx,ecx
  418c32:	mov    dh,0xaf
  418c34:	fsqrt  
  418c36:	push   eax
  418c37:	imul   edi
  418c39:	mov    eax,0xc703ad0e
  418c3e:	or     DWORD PTR [ebp+0xe5fecfa],edi
  418c44:	sbb    ebx,DWORD PTR [esi]
  418c46:	add    al,0x8
  418c48:	(bad)
  418c4d:	scas   eax,DWORD PTR es:[edi]
  418c4e:	add    BYTE PTR [ebp+0x68fc23e7],cl
  418c54:	hlt    
  418c55:	mov    ecx,0x25799a3c
  418c5a:	enter  0x4195,0xde
  418c5e:	jp     0x418c06
  418c60:	sub    DWORD PTR [esi+0x2a],esp
  418c63:	sbb    al,0xa5
  418c65:	push   esi
  418c66:	add    ebp,DWORD PTR [eax-0x4fe82283]
  418c6c:	and    dl,BYTE PTR [edx]
  418c6e:	leave  
  418c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c70:	repnz push 0x3e22a852
  418c76:	jle    0x418c56
  418c78:	out    0xff,al
  418c7a:	test   al,0x11
  418c7c:	(bad)  
  418c7d:	and    ebp,DWORD PTR [esi]
  418c7f:	dec    ebp
  418c80:	out    0x88,al
  418c82:	and    BYTE PTR ds:[edx],ah
  418c85:	(bad)  
  418c86:	xchg   esp,eax
  418c87:	mov    ds:0x2d16c98b,al
  418c8c:	cli    
  418c8d:	push   ebp
  418c8e:	push   cs
  418c8f:	sub    eax,0x6a7cfd12
  418c94:	pop    ds
  418c95:	jae    0x418c88
  418c97:	mov    dh,0x9
  418c99:	in     al,dx
  418c9a:	test   BYTE PTR [ebx+ecx*8-0x7ab8d67e],0x8
  418ca2:	call   FWORD PTR [esi-0x7ac3c6fe]
  418ca8:	xchg   ebx,eax
  418ca9:	rol    eax,cl
  418cab:	and    al,0x18
  418cad:	std    
  418cae:	into   
  418caf:	cmp    al,al
  418cb1:	imul   esi,esi,0x0
  418cb4:	sbb    DWORD PTR [eax-0x8],ebp
  418cb7:	mov    esi,0xe2b60fc4
  418cbc:	fst    DWORD PTR [edi]
  418cbe:	inc    ebx
  418cbf:	rcr    DWORD PTR [edi-0x208de76a],1
  418cc5:	icebp  
  418cc6:	or     al,0x57
  418cc8:	int3   
  418cc9:	and    BYTE PTR [edi-0x3a7d091b],al
  418ccf:	jmp    0x418cc7
  418cd1:	or     eax,0xe63f602
  418cd6:	in     al,dx
  418cd7:	jle    0x418c5d
  418cd9:	sub    DWORD PTR [edi+0x7e],ebp
  418cdc:	test   BYTE PTR [edi],bl
  418cde:	or     eax,0x8220dc37
  418ce3:	fstp   TBYTE PTR cs:[esi-0x49f064ae]
  418ceb:	scas   al,BYTE PTR es:[edi]
  418cec:	lahf   
  418ced:	movzx  ebx,BYTE PTR [esi+0xe061a0]
  418cf4:	lods   al,BYTE PTR ds:[esi]
  418cf5:	push   ds
  418cf6:	mov    esi,0x7ee94189
  418cfb:	mov    DWORD PTR [edi+0x740080fc],0x33b60b05
  418d05:	add    al,0xb
  418d07:	mov    dh,0x33
  418d09:	pop    es
  418d0a:	jg     0x418d71
  418d0c:	mov    BYTE PTR [esi],al
  418d0e:	mov    ebp,0xbf1e7ce0
  418d13:	xor    eax,DWORD PTR [esi+0x33f586]
  418d19:	dec    ebx
  418d1a:	xchg   ecx,eax
  418d1b:	ret    0x3189
  418d1e:	stc    
  418d1f:	out    0xda,al
  418d21:	mov    bh,0x81
  418d23:	stc    
  418d24:	add    bl,dh
  418d26:	pop    edi
  418d27:	in     eax,dx
  418d28:	add    DWORD PTR [ebp+eax*1+0x0],eax
  418d2c:	inc    edi
  418d2d:	pop    edi
  418d2e:	push   ecx
  418d2f:	xor    al,al
  418d31:	je     0x418cd0
  418d33:	inc    eax
  418d34:	lock lods eax,DWORD PTR ds:[esi]
  418d36:	pusha  
  418d37:	stc    
  418d38:	jmp    0x418d90
  418d3a:	xchg   BYTE PTR [ecx-0x4],ah
  418d3d:	add    al,0x16
  418d3f:	mov    ebp,0xed607d40
  418d44:	inc    edi
  418d45:	das    
  418d46:	inc    esp
  418d47:	or     al,0xb6
  418d49:	ret    
  418d4a:	add    eax,0x8bbb60b
  418d4f:	jg     0x418db6
  418d51:	sbb    BYTE PTR ds:0xc1ece0bd,al
  418d57:	inc    eax
  418d58:	lock lds eax,FWORD PTR [eax+eax*1]
  418d5c:	add    BYTE PTR [edi+0x699ae6c3],bh
  418d62:	pop    ebp
  418d63:	rol    DWORD PTR [ebx+0x4d850455],1
  418d69:	push   0x9d88bb1a
  418d6e:	ja     0x418d06
  418d70:	aas    
  418d71:	popf   
  418d72:	inc    eax
  418d73:	addr16 sbb cl,0x35
  418d77:	sar    edi,0xe3
  418d7a:	xchg   edx,eax
  418d7b:	mov    ch,0xfb
  418d7d:	add    BYTE PTR [edi+ebp*2],ah
  418d80:	sub    DWORD PTR [ebx-0x4806a8a3],eax
  418d86:	sub    cl,0x27
  418d89:	jge    0x418daf
  418d8b:	sub    DWORD PTR [di],ecx
  418d8e:	sub    esp,DWORD PTR [ecx]
  418d90:	shl    ch,0xe0
  418d93:	adc    DWORD PTR [edx],eax
  418d95:	xchg   eax,ecx
  418d97:	sbb    eax,0x2a4183f5
  418d9c:	add    DWORD PTR [eax],eax
  418d9e:	es push 0x3e130cf1
  418da4:	adc    dh,BYTE PTR [ecx]
  418da6:	outs   dx,DWORD PTR ds:[esi]
  418da7:	xchg   ebx,eax
  418da8:	mov    dh,0xf3
  418daa:	es out dx,eax
  418dac:	daa    
  418dad:	inc    edx
  418dae:	and    al,0xdf
  418db0:	(bad)  
  418db2:	push   edi
  418db3:	into   
  418db4:	(bad)  
  418db5:	call   0x4290aa58
  418dba:	(bad)  
  418dbb:	call   DWORD PTR [edi+0x13701e0c]
  418dc1:	add    BYTE PTR [ebp+0x16116b40],bl
  418dc7:	fdiv   st,st(3)
  418dc9:	or     al,0x33
  418dcb:	test   DWORD PTR cs:[eax-0x4c],0x210d2fe6
  418dd3:	push   cs
  418dd4:	cs std 
  418dd6:	loop   0x418d60
  418dd8:	mov    edi,0x27ef2613
  418ddd:	aaa    
  418dde:	pusha  
  418ddf:	cmp    eax,0x8600d2a3
  418de4:	popa   
  418de5:	cmc    
  418de6:	add    edx,0x2
  418de9:	push   ecx
  418dea:	daa    
  418deb:	mov    eax,0x9d17dc83
  418df0:	mov    DWORD PTR [edi+ecx*1+0x11c58598],esp
  418df7:	popf   
  418df8:	add    dh,BYTE PTR [eax-0x37]
  418dfb:	xchg   esi,eax
  418dfc:	fld    TBYTE PTR [esi]
  418dfe:	test   eax,0x9794dbcb
  418e03:	or     eax,0xac6dddfd
  418e08:	mov    esi,DWORD PTR [ebp-0x14a7560d]
  418e0e:	stc    
  418e0f:	stos   DWORD PTR es:[edi],eax
  418e10:	int    0x1a
  418e12:	mov    al,0xbf
  418e14:	ret    
  418e15:	or     eax,0xabd98ec1
  418e1a:	psubusw mm4,QWORD PTR [ebx]
  418e1d:	adc    cl,BYTE PTR [edx]
  418e1f:	and    al,0xc8
  418e21:	jb     0x418da3
  418e23:	pop    ebp
  418e24:	xchg   esi,eax
  418e25:	fldl2e 
  418e27:	out    0xa,eax
  418e29:	pop    ebp
  418e2a:	imul   BYTE PTR [ebp+0x49]
  418e2d:	sub    BYTE PTR [ebp-0x1d],bh
  418e30:	mov    esi,0x8f984511
  418e35:	push   ds
  418e36:	das    
  418e37:	and    BYTE PTR [edi],bl
  418e39:	push   0xffffffa8
  418e3b:	or     al,BYTE PTR [edx]
  418e3d:	out    dx,al
  418e3e:	add    BYTE PTR [ebp+0x2c],0xb6
  418e42:	les    edi,FWORD PTR es:[ebp+0x1c00f6aa]
  418e49:	or     DWORD PTR [ebp+0x248af826],ebx
  418e4f:	loopne 0x418e03
  418e51:	mov    DWORD PTR [eax+eiz*8],ebp
  418e54:	jmp    0xc8bc50ed
  418e59:	stos   DWORD PTR es:[edi],eax
  418e5a:	out    0x26,al
  418e5c:	dec    esi
  418e5d:	(bad)  
  418e5e:	jno    0x418e9a
  418e60:	rcl    BYTE PTR [edi+edi*8+0x731dd8d0],1
  418e67:	fnstcw WORD PTR [ebx-0x6d]
  418e6a:	or     esp,DWORD PTR [esi-0x13]
  418e6d:	push   es
  418e6e:	call   0xfd5f2595
  418e73:	ins    BYTE PTR es:[edi],dx
  418e74:	pop    esi
  418e75:	or     eax,0x28d1283
  418e7a:	add    BYTE PTR [edx-0x45044679],dh
  418e80:	loop   0x418ea7
  418e82:	iret   
  418e83:	cmp    al,0xc3
  418e85:	pop    ds
  418e86:	mov    DWORD PTR [edx+edi*4-0x5e02bcb9],ebx
  418e8d:	add    al,BYTE PTR [eax]
  418e8f:	jmp    0x9540a4b3
  418e94:	sbb    ebx,0x836b7d5d
  418e9a:	retf   0x80ff
  418e9d:	pop    ds
  418e9e:	or     eax,0x36c35737
  418ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea4:	jp     0x418eb5
  418ea6:	test   BYTE PTR ds:0xe6fd1f8d,bh
  418eac:	add    dl,bh
  418eae:	icebp  
  418eaf:	mov    BYTE PTR [eax*4+0xfd4ad5],ch
  418eb6:	aas    
  418eb7:	cmp    DWORD PTR [ecx-0x2cd27dd8],esp
  418ebd:	rcr    BYTE PTR [edi],0x81
  418ec0:	cmp    al,0xb5
  418ec2:	add    al,BYTE PTR [edi-0x7cf052dc]
  418ec8:	mov    edx,0x700002ae
  418ecd:	loop   0x418ee8
  418ecf:	cmp    DWORD PTR [ecx+0x3738d43a],esi
  418ed5:	add    eax,0x70de1093
  418eda:	or     esi,DWORD PTR [edi]
  418edc:	add    BYTE PTR [ecx-0x78da8c2e],dl
  418ee2:	out    0x40,eax
  418ee4:	adc    al,0xd
  418ee6:	pop    ebp
  418ee7:	adc    DWORD PTR [esi+ebx*1-0x4],edi
  418eeb:	sbb    DWORD PTR [ebx-0x3f7d99f6],ecx
  418ef1:	enter  0x36f2,0x5d
  418ef5:	mov    esp,0x7d330b6f
  418efa:	inc    ecx
  418efb:	xchg   BYTE PTR [esi+0x40],cl
  418efe:	sub    bh,BYTE PTR [esi-0xa62fcf1]
  418f04:	call   ebx
  418f06:	cmp    DWORD PTR [ecx-0x10],0x74
  418f0a:	push   ss
  418f0b:	sbb    bh,0x8d
  418f0e:	out    0xfa,eax
  418f10:	cmp    eax,DWORD PTR [eax]
  418f12:	xor    ebp,esp
  418f14:	or     al,BYTE PTR [edx-0x513cc]
  418f1a:	call   FWORD PTR [ebp+0x21]
  418f1d:	inc    eax
  418f1e:	int    0x5d
  418f20:	and    edi,edi
  418f22:	leave  
  418f23:	cmp    eax,0x11ed788
  418f28:	sti    
  418f29:	jne    0x418f7b
  418f2b:	call   0xff56:0xed9ffc6
  418f32:	leave  
  418f33:	idiv   dl
  418f35:	jne    0x418f77
  418f37:	out    0x70,al
  418f39:	or     BYTE PTR [ebx+edx*2-0x1a],bl
  418f3d:	jmp    ebx
  418f3f:	fwait
  418f40:	mov    edi,0x1053790f
  418f45:	add    ah,dh
  418f47:	pop    ecx
  418f48:	cmp    BYTE PTR [ebp+0x30],bl
  418f4b:	push   edx
  418f4c:	shr    ecx,1
  418f4e:	in     al,dx
  418f4f:	jmp    0x418f4b
  418f51:	inc    DWORD PTR [ebx]
  418f53:	scas   eax,DWORD PTR es:[edi]
  418f54:	dec    edx
  418f55:	add    DWORD PTR [ebp-0x60ba94dc],ebx
  418f5b:	push   0x22
  418f5d:	or     BYTE PTR [esi-0x254087ad],ah
  418f63:	in     eax,0x17
  418f65:	dec    edx
  418f67:	sub    al,BYTE PTR [ecx]
  418f69:	xchg   DWORD PTR [eax-0x51],ebx
  418f6c:	jg     0x418f33
  418f6e:	sahf   
  418f6f:	mov    dl,0x72
  418f71:	add    BYTE PTR [ebp+0xb5f42b],bl
  418f77:	pop    edx
  418f78:	sub    dh,ah
  418f7a:	mov    ch,0x4a
  418f7c:	sub    DWORD PTR [edx-0x21],eax
  418f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f80:	adc    BYTE PTR [edi],dh
  418f82:	xchg   eax,esp
  418f84:	shr    edi,0xc6
  418f87:	into   
  418f88:	jmp    0xa31ecd0d
  418f8d:	mov    ebp,0x419daafb
  418f92:	sbb    DWORD PTR [edx+0x29],0xa1794b7a
  418f99:	mov    ch,0xf7
  418f9b:	jbe    0x418f20
  418f9d:	cmp    al,0x43
  418f9f:	dec    ebp
  418fa0:	sub    eax,DWORD PTR [ecx]
  418fa2:	add    BYTE PTR [ebp-0x1f78bea8],bl
  418fa8:	adc    eax,0x58efe8b9
  418fad:	inc    ecx
  418fae:	inc    eax
  418faf:	and    al,0xef
  418fb1:	adc    ebp,ecx
  418fb3:	das    
  418fb4:	stc    
  418fb5:	dec    edx
  418fb6:	aas    
  418fb7:	outs   dx,BYTE PTR ds:[esi]
  418fb8:	imul   ecx,DWORD PTR [ebx-0x395cd2b5],0xc33062fb
  418fc2:	or     al,0x4b
  418fc4:	in     eax,dx
  418fc5:	add    cl,BYTE PTR ds:0xbf05fd53
  418fcb:	cld    
  418fcc:	and    esi,edx
  418fce:	mov    edi,0x142c02e2
  418fd3:	repnz sbb esp,edi
  418fd6:	add    edx,DWORD PTR [eax+ecx*2+0x16007482]
  418fdd:	retf   
  418fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fdf:	(bad)  
  418fe0:	sbb    al,BYTE PTR [eax-0x39e5fa79]
  418fe6:	mov    dl,BYTE PTR [ebx]
  418fe8:	or     eax,DWORD PTR [edx+0x282b17f]
  418fee:	fisub  WORD PTR [ecx+0x22]
  418ff1:	adc    edx,esp
  418ff3:	ret    
  418ff4:	mov    dl,0xc4
  418ff6:	outs   dx,DWORD PTR ds:[esi]
  418ff7:	leave  
  418ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ff9:	mov    DWORD PTR [ebx+ebx*1+0xbd44a1e],esp
  419000:	push   edx
  419001:	sbb    eax,DWORD PTR [esi+0x23]
  419004:	adc    BYTE PTR [edx+0x54981bac],cl
  41900a:	fmulp  st(2),st
  41900c:	sbb    esi,DWORD PTR [ebp+0xb5d8932]
  419012:	jne    0x418fbf
  419014:	popf   
  419015:	add    ah,bh
  419017:	xchg   BYTE PTR [edi+0x18],bl
  41901a:	push   0x1e
  41901c:	nop
  41901d:	or     esp,DWORD PTR [esi+0x1c]
  419020:	lods   eax,DWORD PTR ds:[esi]
  419021:	add    ah,bh
  419023:	and    bh,BYTE PTR [ecx+0x75]
  419026:	xor    dl,BYTE PTR [eax+0x35ba028a]
  41902c:	(bad)  
  41902e:	sub    BYTE PTR [ebx],dl
  419030:	sub    ecx,ecx
  419032:	jmp    0x34cb2d3a
  419037:	clc    
  419038:	xor    eax,0xdf3619ff
  41903d:	xchg   DWORD PTR ds:0x39d500b0,ebx
  419043:	test   BYTE PTR [esi+0x3e70b61],0x1c
  41904a:	pushf  
  41904b:	call   eax
  41904d:	sahf   
  41904e:	xchg   esi,eax
  41904f:	sbb    eax,DWORD PTR [ebx-0x5f]
  419052:	sbb    eax,0xb40c0176
  419057:	sbb    esi,DWORD PTR [edx+0x63]
  41905a:	sub    dh,BYTE PTR [edx-0x7cfd66eb]
  419060:	test   eax,0x7af77faf
  419065:	jg     0x419084
  419067:	mov    DWORD PTR [edi*2+0x4622329],esp
  41906e:	imul   DWORD PTR [eax]
  419070:	mov    ds:0x57533db,eax
  419075:	and    ecx,DWORD PTR [ecx]
  419077:	cmp    ch,BYTE PTR [edi+0x6a128fba]
  41907d:	sbb    BYTE PTR [ebx],0xe
  419080:	fist   DWORD PTR gs:[ebx]
  419083:	std    
  419084:	inc    esi
  419085:	and    ah,cl
  419087:	inc    BYTE PTR [edx]
  419089:	outs   dx,DWORD PTR ds:[esi]
  41908a:	in     eax,dx
  41908b:	or     al,0x6d
  41908d:	out    dx,eax
  41908e:	adc    edi,ebp
  419090:	cs sub ecx,esi
  419093:	imul   DWORD PTR [edx-0x1fec3a41]
  419099:	push   ebp
  41909a:	idiv   BYTE PTR [ebp+0x76]
  41909d:	mov    cl,0x38
  41909f:	add    ch,cl
  4190a1:	sahf   
  4190a2:	mov    edx,DWORD PTR [esi-0x6b]
  4190a5:	add    BYTE PTR [ebx+0x4a],al
  4190a8:	cmp    DWORD PTR [ebx],esp
  4190aa:	scas   eax,DWORD PTR es:[edi]
  4190ab:	jg     0x41906f
  4190ad:	std    
  4190ae:	jl     0x4190c7
  4190b0:	add    DWORD PTR [ecx],edx
  4190b2:	mov    DWORD PTR [edx+eax*1-0x17],ecx
  4190b6:	sahf   
  4190b7:	aas    
  4190b8:	inc    ebx
  4190b9:	cmc    
  4190ba:	lahf   
  4190bb:	add    al,BYTE PTR [eax]
  4190bd:	jmp    0xde40abdb
  4190c2:	sub    bl,BYTE PTR [ebp+0x2]
  4190c5:	add    BYTE PTR [esi+eax*1],al
  4190c8:	aaa    
  4190c9:	pop    esi
  4190ca:	pop    eax
  4190cb:	repz jle 0x419070
  4190ce:	inc    eax
  4190cf:	in     al,0xfa
  4190d1:	(bad)  
  4190d3:	cmovo  eax,DWORD PTR [ebx+0x2674093e]
  4190da:	sti    
  4190db:	jae    0x41905f
  4190dd:	repz or esp,esp
  4190e0:	jle    0x4190dc
  4190e2:	clc    
  4190e3:	arpl   WORD PTR [esi],cx
  4190e5:	sbb    DWORD PTR [esi],0xa
  4190e8:	je     0x41910d
  4190ea:	xor    eax,0xb40080f8
  4190ef:	add    eax,0xeeb8850b
  4190f4:	cli    
  4190f5:	inc    DWORD PTR [edi+0x64]
  4190f8:	pop    ebp
  4190f9:	add    BYTE PTR [ebx+0x4bf36280],bh
  4190ff:	jecxz  0x4190fb
  419101:	inc    ebp
  419102:	nop
  419103:	cmp    al,0x42
  419105:	adc    al,0x5a
  419107:	(bad)
  41910a:	add    BYTE PTR [esi+0x5],dh
  41910d:	add    BYTE PTR [ebx],bh
  41910f:	sub    ch,BYTE PTR [ecx+0x70]
  419112:	out    dx,al
  419113:	add    al,0x38
  419115:	pop    es
  419116:	jne    0x4190a5
  419118:	aas    
  419119:	call   0x11835504
  41911e:	add    DWORD PTR [ebp+eax*1+0x0],esi
  419122:	sub    DWORD PTR [ebp+eax*1-0x10373f5],0xffffffff
  41912a:	call   FWORD PTR [edi+0x43]
  41912d:	imul   ecx,DWORD PTR [edi],0xfff13eb7
  419133:	dec    ebx
  419134:	repnz mov ch,0x13
  419137:	xchg   DWORD PTR [edi-0x6],edi
  41913a:	or     DWORD PTR [ebx],edi
  41913c:	and    DWORD PTR [edx],0x20309df3
  419142:	adc    DWORD PTR [edi],0xb4840f0b
  419148:	pop    esp
  419149:	and    ch,bh
  41914b:	sbb    al,0x45
  41914d:	popa   
  41914e:	add    BYTE PTR [ebp-0x577befd5],bl
  419154:	pop    esp
  419155:	and    ch,bh
  419157:	repnz in eax,0xf7
  41915a:	ss pusha 
  41915c:	setg   dl
  41915f:	hlt    
  419160:	dec    edx
  419161:	add    eax,DWORD PTR [eax]
  419163:	popf   
  419164:	pusha  
  419165:	(bad)  
  419166:	adc    ebx,DWORD PTR [ebx+ebp*1-0x7ce1ffff]
  41916d:	add    cl,BYTE PTR ds:0x33b1100
  419173:	add    BYTE PTR [ebp-0x5d9440ac],bl
  419179:	lods   al,BYTE PTR ds:[esi]
  41917a:	sbb    cl,dh
  41917c:	stos   BYTE PTR es:[edi],al
  41917d:	mov    bh,0xf
  41917f:	mov    dh,0x8e
  419181:	ins    BYTE PTR es:[edi],dx
  419182:	test   dl,bh
  419184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419185:	sub    eax,0xa9780f2
  41918a:	cwde   
  41918b:	or     ebx,DWORD PTR [esp+eax*8]
  41918e:	pusha  
  41918f:	add    BYTE PTR [ebp+0x68831029],bl
  419195:	fcomp  QWORD PTR [edi]
  419197:	std    
  419198:	jb     0x419201
  41919a:	cmc    
  41919b:	ss loopne 0x4191ab
  41919e:	lahf   
  41919f:	shl    BYTE PTR [edx+ecx*1+0x2],cl
  4191a3:	add    BYTE PTR [ebp-0x63ec3a20],bl
  4191a9:	sub    DWORD PTR [ecx],eax
  4191ab:	add    BYTE PTR [esi],bl
  4191ad:	add    al,BYTE PTR [edx]
  4191af:	or     eax,0x1fa11
  4191b4:	popf   
  4191b5:	push   esp
  4191b6:	mov    edi,0x6a02a26b
  4191bb:	pop    esp
  4191bc:	sub    al,0x18
  4191be:	fimul  WORD PTR [edi]
  4191c0:	jmp    0x4191b5
  4191c2:	sub    DWORD PTR [ebx-0x6b4f2e9],eax
  4191c8:	sbb    eax,0x1b0ef41d
  4191cd:	outs   dx,BYTE PTR ds:[esi]
  4191ce:	mov    ecx,0xb182001f
  4191d3:	mov    DWORD PTR [eax],eax
  4191d5:	popf   
  4191d6:	add    ah,bh
  4191d8:	push   cs
  4191d9:	sbb    DWORD PTR [edx+0x17e81f99],ecx
  4191df:	and    al,0xf8
  4191e1:	stos   DWORD PTR es:[edi],eax
  4191e2:	mov    ebp,0x29eb9dfa
  4191e7:	imul   eax,DWORD PTR ds:0xc9ae029d,0xffffffae
  4191ee:	add    edi,esp
  4191f0:	add    ebx,DWORD PTR [ebp-0x57fa907d]
  4191f6:	xchg   BYTE PTR [ebx+0x5],bl
  4191f9:	popf   
  4191fa:	add    ah,BYTE PTR [edx]
  4191fc:	mov    esi,0x986a0736
  419201:	lods   eax,DWORD PTR ds:[esi]
  419202:	pop    ss
  419203:	push   esi
  419204:	rcpps  xmm6,xmm3
  419207:	test   eax,0xf60c9782
  41920c:	(bad)  
  41920d:	repz adc al,0x3e
  419210:	pop    ds
  419211:	sbb    al,0x1c
  419213:	in     al,0x9d
  419215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419216:	xor    DWORD PTR [ecx],0xe7029d89
  41921c:	push   cs
  41921d:	push   ds
  41921e:	mov    ebp,0x17601f18
  419223:	lods   al,BYTE PTR ds:[esi]
  419224:	not    DWORD PTR [ebx+0x639df2bd]
  41922a:	sub    DWORD PTR [edi-0x45fd62fc],ebx
  419230:	xor    edi,ebx
  419232:	mov    DWORD PTR [eax],eax
  419234:	pushf  
  419235:	xor    bl,dl
  419237:	rcr    esi,0x0
  41923a:	and    cl,ah
  41923c:	(bad)  
  41923d:	call   0x1a42bbe0
  419242:	outs   dx,DWORD PTR ds:[esi]
  419243:	les    edi,FWORD PTR [eax]
  419245:	aaa    
  419246:	dec    ebp
  419247:	push   es
  419248:	cmp    DWORD PTR [ebx],0xf60002ac
  41924e:	jo     0x419259
  419250:	mov    DWORD PTR [edi],edx
  419252:	in     eax,0x88
  419254:	or     al,0xd8
  419256:	fist   WORD PTR [esi-0x7c5c1a22]
  41925c:	pop    es
  41925d:	fwait
  41925e:	mov    edx,DWORD PTR ds:0xcfe524fd
  419264:	inc    edx
  419265:	std    
  419266:	cmp    BYTE PTR [eax],dh
  419268:	out    0xf0,eax
  41926a:	cdq    
  41926b:	add    al,BYTE PTR [eax]
  41926d:	mov    edx,0x1486c48c
  419272:	(bad)
  419275:	out    0x2a,al
  419277:	or     bh,bh
  419279:	call   0x1a42bc1c
  41927e:	outs   dx,DWORD PTR ds:[esi]
  41927f:	les    edi,FWORD PTR [eax]
  419281:	mov    edi,0xff8105f2
  419286:	lods   eax,DWORD PTR ds:[esi]
  419287:	add    al,BYTE PTR [eax]
  419289:	fsubp  st(0),st
  41928b:	or     ecx,DWORD PTR [ecx+0xc8c729f]
  419291:	fcomp  DWORD PTR [edi-0x6a]
  419294:	fsubp  st(5),st
  419296:	stos   DWORD PTR es:[edi],eax
  419297:	jle    0x419264
  419299:	cmp    BYTE PTR [ebx+0xacfd17],dl
  41929f:	jb     0x41926e
  4192a1:	inc    edx
  4192a2:	cmc    
  4192a3:	add    BYTE PTR ds:0x29e34e7,ch
  4192a9:	add    dl,bl
  4192ab:	mov    eax,es
  4192ad:	xchg   BYTE PTR [eax],al
  4192af:	sub    DWORD PTR [esi],ecx
  4192b1:	cmp    dl,al
  4192b3:	xor    eax,DWORD PTR [esi+0x24400d2]
  4192b9:	out    0x3,eax
  4192bb:	not    ebx
  4192bd:	inc    ecx
  4192be:	cmp    esp,edx
  4192c0:	push   edx
  4192c1:	or     al,0x83
  4192c3:	pop    esi
  4192c4:	repz (bad) 
  4192c6:	inc    DWORD PTR [ebx]
  4192c8:	mov    al,0x6
  4192ca:	mov    ecx,edx
  4192cc:	cmp    al,BYTE PTR [edi+0x7d42e50c]
  4192d2:	loope  0x4192c9
  4192d4:	push   es
  4192d5:	adc    DWORD PTR [ecx-0x507cb],0x45361ab9
  4192df:	call   0x562b695b
  4192e4:	(bad)  
  4192e5:	(bad)  
  4192e6:	push   edi
  4192e8:	rol    DWORD PTR [ecx-0x77],cl
  4192eb:	mov    DWORD PTR [edx],ebx
  4192ed:	cmp    dl,al
  4192ef:	rol    DWORD PTR [ebp+0x1b40096],cl
  4192f5:	out    0x3,eax
  4192f7:	not    ebx
  4192f9:	inc    ecx
  4192fa:	cmp    esp,DWORD PTR [edx+0x22830c52]
  419300:	repz (bad) 
  419302:	inc    DWORD PTR [eax]
  419304:	mov    bl,0xaf
  419306:	push   es
  419307:	mov    ebx,DWORD PTR [edx+0x2d]
  41930a:	xchg   DWORD PTR [edx*4+0x75e17d42],ecx
  419311:	push   es
  419312:	test   BYTE PTR [ebp-0x3b],dl
  419315:	idiv   edx
  419317:	dec    DWORD PTR [ecx+0xd]
  41931a:	ss inc ebp
  41931c:	dec    eax
  41931d:	ja     0x4192f5
  41931f:	jmp    0x41932d
  419321:	xor    cl,bh
  419323:	inc    edx
  419324:	in     eax,dx
  419325:	dec    ebp
  419326:	adc    DWORD PTR [ebx],edi
  419328:	popf   
  419329:	jmp    0x2887f1cd
  41932e:	rcl    cl,1
  419330:	fild   WORD PTR [eax-0x45]
  419333:	imul   edx,DWORD PTR [edx-0x62f45758],0x2b
  41933a:	or     al,0xb6
  41933c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41933d:	mov    al,ds:0xf1733b5
  419342:	repnz inc eax
  419344:	sbb    eax,0x200cf14a
  419349:	or     edx,DWORD PTR [ecx]
  41934b:	std    
  41934c:	adc    al,BYTE PTR [esi+eax*8+0x13]
  419350:	(bad)  
  419351:	out    0xf7,al
  419353:	jge    0x419339
  419355:	das    
  419356:	shl    BYTE PTR [eax],1
  419358:	iret   
  419359:	call   0x10cae6e6
  41935e:	aas    
  41935f:	jl     0x41931a
  419361:	jo     0x419363
  419363:	xor    edi,ecx
  419365:	call   0x4941f140
  41936a:	sbb    al,0x80
  41936c:	xor    al,0xa1
  41936e:	sub    eax,DWORD PTR [ecx]
  419370:	or     eax,0x56881013
  419375:	mov    DWORD PTR [ecx-0x54a1f0f4],edx
  41937b:	and    DWORD PTR [eax],edx
  41937d:	mov    ds:0xaaf0279f,al
  419382:	fwait
  419383:	sbb    eax,DWORD PTR [ebx-0x77]
  419386:	loop   0x41934c
  419388:	adc    ebx,DWORD PTR [ebx]
  41938a:	rol    DWORD PTR [edi+0x40f1954b],cl
  419390:	or     eax,0xfd262c21
  419395:	sub    BYTE PTR [ecx+0x1c9deb9d],0x86
  41939c:	xchg   edx,eax
  41939d:	mov    al,ds:0xd0890129
  4193a2:	add    bl,BYTE PTR [ebx]
  4193a4:	sbb    BYTE PTR [edi+0x19],0x70
  4193a8:	mov    esi,0xc118056
  4193ad:	mov    al,ds:0x9d0e907b
  4193b2:	add    al,BYTE PTR [esi]
  4193b4:	out    0x2f,eax
  4193b6:	or     BYTE PTR [edx+eax*8+0x3a],ch
  4193ba:	mov    ebp,DWORD PTR [edi+esi*8-0x6493be8b]
  4193c1:	adc    eax,0x4adf52bd
  4193c6:	nop
  4193c7:	xor    eax,0xe6fa9b87
  4193cc:	pop    DWORD PTR [eax]
  4193ce:	mov    ah,0xa8
  4193d0:	out    0x1a,al
  4193d2:	xchg   ebx,eax
  4193d3:	cli    
  4193d4:	jno    0x419422
  4193d6:	push   ss
  4193d7:	lods   eax,DWORD PTR ds:[esi]
  4193d8:	fimul  DWORD PTR [esi-0x62d7d524]
  4193de:	repnz adc esp,DWORD PTR [esp+eax*2+0x6e]
  4193e3:	lods   al,BYTE PTR ds:[esi]
  4193e4:	jno    0x4193af
  4193e6:	jmp    0xc1f6:0x738efc27
  4193ed:	inc    ebp
  4193ee:	xchg   esp,eax
  4193ef:	cmp    dl,BYTE PTR [esi]
  4193f1:	lock adc al,0x0
  4193f4:	rol    ecx,0x76
  4193f7:	(bad)  
  4193f8:	jmp    0x419380
  4193fa:	mov    bh,0x1
  4193fc:	sti    
  4193fd:	xlat   BYTE PTR ds:[ebx]
  4193fe:	and    al,0xc0
  419400:	out    0xdd,eax
  419402:	pusha  
  419403:	in     eax,0xda
  419405:	iret   
  419406:	pop    ebp
  419407:	adc    esp,DWORD PTR [edi+ebp*8-0x68053a2d]
  41940e:	dec    ebp
  41940f:	daa    
  419410:	add    bh,ch
  419412:	bound  eax,QWORD PTR [edi+0x3215a7ad]
  419418:	adc    dh,BYTE PTR [edi]
  41941a:	mov    ah,0x48
  41941c:	add    BYTE PTR [edi+0x62d88a3f],bh
  419422:	pop    edi
  419423:	xchg   edi,eax
  419424:	sub    BYTE PTR [ecx],0xd
  419427:	repnz cmp BYTE PTR [esi+eiz*4-0x1e25f274],bh
  41942f:	rol    DWORD PTR [esi-0x25edff61],cl
  419435:	mov    esi,0xee9b17f6
  41943a:	(bad)  
  41943b:	xchg   edi,eax
  41943c:	cmp    DWORD PTR [ebx-0x7],0x2b83059e
  419443:	jge    0x41945a
  419445:	std    
  419446:	and    ah,ah
  419448:	push   ss
  419449:	or     eax,0xfd23036b
  41944e:	(bad)  
  41944f:	and    edi,DWORD PTR [edi-0x40e7d6dd]
  419455:	and    eax,esi
  419457:	sub    eax,0x489688df
  41945c:	adc    edi,esi
  41945e:	cmp    al,0xf5
  419460:	mov    ecx,ecx
  419462:	scas   al,BYTE PTR es:[edi]
  419463:	or     eax,0xda655eb
  419468:	add    edi,ebp
  41946a:	adc    al,0xa5
  41946c:	adc    eax,0xaf86e173
  419471:	jecxz  0x419401
  419473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419474:	leave  
  419475:	sub    BYTE PTR [ecx-0x10ab8069],0x9e
  41947c:	add    bh,BYTE PTR [ecx]
  41947e:	adc    al,0x95
  419480:	xchg   ecx,eax
  419481:	rol    DWORD PTR [eax+0x66fd257b],cl
  419487:	fwait
  419488:	sub    ebp,ecx
  41948a:	cwde   
  41948b:	sub    esi,eax
  41948d:	adc    edx,DWORD PTR [edx]
  41948f:	fmul   DWORD PTR [ebp-0x61a39d57]
  419495:	cmp    BYTE PTR [eax],al
  419497:	add    BYTE PTR [eax+edi*2+0x18f20f86],bh
  41949e:	cmp    dl,0x79
  4194a1:	jae    0x4194ac
  4194a3:	inc    ebx
  4194a4:	outs   dx,DWORD PTR ds:[esi]
  4194a5:	into   
  4194a6:	outs   dx,BYTE PTR ds:[esi]
  4194a7:	xchg   esi,eax
  4194a8:	hlt    
  4194a9:	xor    BYTE PTR [edi],al
  4194ab:	jne    0x41950d
  4194ad:	loope  0x4194cb
  4194af:	sub    DWORD PTR [esi-0x48e38c01],0x6b
  4194b6:	pop    ebp
  4194b7:	add    cl,al
  4194b9:	xchg   ecx,eax
  4194ba:	jle    0x4194b6
  4194bc:	das    
  4194bd:	or     BYTE PTR [esi],0x83
  4194c0:	or     DWORD PTR cs:[esp+ecx*1-0x4b],esi
  4194c5:	out    dx,eax
  4194c6:	add    BYTE PTR [eax],0x34
  4194c9:	push   es
  4194ca:	or     eax,DWORD PTR [ebp-0x51496]
  4194d0:	(bad)  
  4194d1:	jmp    0x419513
  4194d3:	adc    al,0xad
  4194d5:	dec    ecx
  4194d6:	adc    DWORD PTR [edx+ebx*1-0x22],edi
  4194da:	pop    edi
  4194db:	(bad)  
  4194dc:	cmp    ebp,esp
  4194de:	ss pop esi
  4194e0:	pop    eax
  4194e1:	sti    
  4194e2:	jle    0x419521
  4194e4:	cmp    ebp,esp
  4194e6:	cli    
  4194e7:	cmovb  edx,DWORD PTR [edi]
  4194ea:	cmp    dl,0xcd
  4194ed:	cli    
  4194ee:	or     DWORD PTR [ebx+0x2b],0xffffffec
  4194f2:	cli    
  4194f3:	sub    DWORD PTR [esi],0x27
  4194f6:	or     al,0x84
  4194f8:	jbe    0x4194e5
  4194fa:	cli    
  4194fb:	inc    DWORD PTR [eax]
  4194fd:	inc    ebp
  4194fe:	lock lahf 
  419500:	add    ah,al
  419502:	add    eax,0xeaf2840b
  419507:	cli    
  419508:	push   edi
  41950a:	inc    ebp
  41950b:	cmp    cl,al
  41950d:	js     0x4194e4
  41950f:	in     al,0x2b
  419511:	popf   
  419512:	mov    eax,0x61c6fd16
  419517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419518:	or     al,0x1e
  41951a:	adc    ebx,DWORD PTR [eax]
  41951c:	std    
  41951d:	jp     0x41953f
  41951f:	dec    edi
  419520:	adc    DWORD PTR [esi],ebx
  419522:	aad    0x8
  419524:	je     0x4194b2
  419526:	pushf  
  419527:	sbb    eax,0x8217e920
  41952c:	cli    
  41952d:	std    
  41952e:	sbb    al,BYTE PTR [ecx]
  419530:	add    BYTE PTR [edx+0x4afd089e],ah
  419536:	add    bl,al
  419538:	aas    
  419539:	xchg   dl,bl
  41953b:	xchg   edi,eax
  41953c:	xlat   BYTE PTR ds:[ebx]
  41953d:	inc    esp
  41953e:	adc    DWORD PTR [edi],edx
  419540:	std    
  419541:	xor    dl,BYTE PTR [edi+esi*4+0x6b]
  419545:	call   0x828:0x22fe3a9c
  41954c:	mov    dh,0xae
  41954e:	pushf  
  41954f:	sbb    cl,BYTE PTR [edx]
  419551:	mov    ds:0xafe299f,al
  419556:	inc    eax
  419557:	test   dl,bh
  419559:	xchg   esi,eax
  41955a:	sbb    BYTE PTR [ebp-0x20],bh
  41955d:	sti    
  41955e:	dec    edi
  41955f:	sbb    BYTE PTR [ecx+0x826f700],al
  419565:	test   dl,dl
  419567:	pusha  
  419568:	sbb    ch,bh
  41956a:	push   ds
  41956b:	gs push es
  41956d:	or     eax,0xfd176121
  419572:	rcr    BYTE PTR [ecx+0x1b9d831a],cl
  419578:	add    DWORD PTR ds:0xfd175d19,ecx
  41957e:	mov    edx,0xdc38c3db
  419583:	push   ss
  419584:	push   edi
  419585:	out    0xf2,eax
  419587:	mov    al,ds:0x266fd17
  41958c:	lds    esp,FWORD PTR [edi+0x197383a9]
  419592:	nop
  419593:	adc    dh,ah
  419595:	push   ecx
  419596:	lods   al,BYTE PTR ds:[esi]
  419597:	adc    DWORD PTR [ecx+0xd],0x9
  41959b:	in     al,dx
  41959c:	imul   ebx,DWORD PTR ds:0x84d496a4,0xf2baff77
  4195a6:	sbb    eax,0x968fdc0d
  4195ab:	and    DWORD PTR [ecx],0xe7029d7e
  4195b1:	or     BYTE PTR [esi],bl
  4195b3:	jl     0x4195ca
  4195b5:	sbb    BYTE PTR [eax-0x3c],cl
  4195b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195b9:	fadd   QWORD PTR [ebx]
  4195bb:	(bad)  
  4195bc:	xor    al,0x2a
  4195be:	sbb    eax,0x1a17fe11
  4195c3:	(bad)  
  4195c4:	fcmovu st,st(4)
  4195c6:	add    bl,ch
  4195c8:	call   FWORD PTR [ebx-0x72]
  4195cb:	and    BYTE PTR [eax],dl
  4195cd:	out    0xdb,al
  4195cf:	js     0x41956f
  4195d1:	in     eax,dx
  4195d2:	sub    BYTE PTR [edi+0x10],0xd6
  4195d6:	pop    ss
  4195d7:	cwde   
  4195d8:	pop    eax
  4195d9:	jmp    0x8d00:0xbcd66b8a
  4195e0:	push   es
  4195e1:	out    dx,al
  4195e2:	adc    BYTE PTR [ecx+0x10],0xb6
  4195e6:	pop    ss
  4195e7:	pop    esp
  4195e8:	mov    eax,tr6
  4195eb:	stos   DWORD PTR es:[edi],eax
  4195ec:	mov    ebp,0x19f897fa
  4195f1:	sub    eax,0x600fd016
  4195f6:	shr    DWORD PTR [esi+0x1607a7cb],0xc4
  4195fd:	test   BYTE PTR [edi],dl
  4195ff:	mov    eax,0xa1a81ccb
  419604:	add    DWORD PTR [eax],0xffffffc9
  419607:	nop
  419608:	or     eax,0x150defd
  41960d:	mov    DWORD PTR [edi-0x6fbea96],edi
  419613:	xchg   edx,eax
  419614:	inc    BYTE PTR [ebx-0x2f24cfd]
  41961a:	stos   BYTE PTR es:[edi],al
  41961b:	stos   DWORD PTR es:[edi],eax
  41961c:	ret    
  41961d:	adc    eax,DWORD PTR [eax]
  41961f:	fs repz jnp 0x419642
  419623:	shr    dh,0xfd
  419626:	ss xchg edx,eax
  419628:	xchg   DWORD PTR [ebx-0x2b],eax
  41962b:	add    BYTE PTR [edi+0x50],al
  41962e:	or     eax,0xfd0d5074
  419633:	push   ds
  419634:	jbe    0x4195e3
  419636:	imul   esp,esi,0x1f
  419639:	and    bl,bh
  41963b:	push   cs
  41963c:	stos   BYTE PTR es:[edi],al
  41963d:	std    
  41963e:	mov    ch,0xea
  419640:	daa    
  419641:	mov    eax,0xff32f733
  419646:	(bad)  
  419647:	in     eax,0x1d
  419649:	or     bh,bl
  41964b:	out    dx,al
  41964c:	mov    eax,ecx
  41964e:	cld    
  41964f:	sub    al,0xd
  419651:	fmul   DWORD PTR [edx-0xb]
  419654:	sub    ch,BYTE PTR ds:0xda5c3e7
  41965a:	std    
  41965b:	pusha  
  41965c:	(bad)  
  41965e:	cmp    BYTE PTR [eax-0x4322845d],ch
  419664:	mov    ecx,DWORD PTR ds:0xfe351739
  41966a:	sub    BYTE PTR [ebp-0x7b],0xd
  41966e:	std    
  41966f:	imul   BYTE PTR [eax+0x1]
  419672:	mov    DWORD PTR [edi],esi
  419674:	in     eax,dx
  419675:	adc    al,0x4
  419677:	stc    
  419678:	mov    eax,ds:0xa5a783fd
  41967d:	or     eax,0xf78700fd
  419682:	inc    eax
  419683:	adc    al,0xdd
  419685:	cmp    DWORD PTR [ecx],edx
  419687:	jl     0x41969b
  419689:	fidiv  WORD PTR [edi-0x7b07cc03]
  41968f:	inc    ebp
  419690:	add    BYTE PTR [eax+0x10fbe29],bl
  419696:	fwait
  419697:	clc    
  419698:	push   ebx
  41969a:	sub    BYTE PTR [ebx+0x6c],bl
  41969d:	arpl   WORD PTR [ecx-0xb1c0276],ax
  4196a3:	or     dh,BYTE PTR [esi+0x34567987]
  4196a9:	stos   BYTE PTR es:[edi],al
  4196aa:	or     eax,0x8343100d
  4196af:	xchg   esp,eax
  4196b0:	std    
  4196b1:	xor    esp,0x3e
  4196b4:	(bad)  
  4196b5:	stc    
  4196b6:	sbb    eax,0x76484d36
  4196bb:	fucomi st,st(1)
  4196bd:	mov    edx,0xadfffaea
  4196c2:	inc    edx
  4196c3:	adc    DWORD PTR [ebx],edi
  4196c5:	test   DWORD PTR [ecx+ecx*4],eax
  4196c8:	jnp    0x4196fb
  4196ca:	clc    
  4196cb:	cli    
  4196cc:	cmp    edx,DWORD PTR [edx]
  4196ce:	data16 or al,0x83
  4196d1:	pop    esp
  4196d2:	cmc    
  4196d3:	cli    
  4196d4:	inc    DWORD PTR [ebx]
  4196d6:	sar    dh,0x8a
  4196d9:	retf   0xf332
  4196dc:	add    al,0x4
  4196de:	adc    cl,BYTE PTR [esp+eax*4]
  4196e1:	data16 cmc 
  4196e3:	cli    
  4196e4:	inc    edi
  4196e6:	test   DWORD PTR [eax+0x14],0x7c1144ed
  4196ed:	adc    bl,dl
  4196ef:	push   ebx
  4196f0:	std    
  4196f1:	add    edi,eax
  4196f3:	or     dh,BYTE PTR [esi+0xb027b00]
  4196f9:	mov    dh,0x9d
  4196fb:	in     al,0xfc
  4196fd:	mov    esi,0xbf0823bd
  419702:	sub    BYTE PTR [eax],cl
  419704:	sti    
  419705:	add    dh,al
  419707:	sbb    al,0x4
  419709:	mov    dh,0x62
  41970b:	sbb    al,BYTE PTR [esi+esi*4]
  41970e:	push   edx
  41970f:	sbb    DWORD PTR [edx-0x20],eax
  419712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419713:	adc    BYTE PTR [edx+0x1],al
  419716:	xchg   ebp,eax
  419717:	fwait
  419718:	rcl    BYTE PTR [ebx+0x11],cl
  41971b:	enter  0x9128,0x79
  41971f:	mov    esp,0x54330d12
  419724:	add    BYTE PTR ds:0xbefd742b,cl
  41972a:	jl     0x41974f
  41972c:	or     dl,cl
  41972e:	adc    al,0x6e
  419730:	or     eax,0xc3206401
  419735:	adc    esp,DWORD PTR [edx-0x62ff2b61]
  41973b:	sbb    eax,DWORD PTR [eax+0xa7fbcf8]
  419741:	(bad)
  419744:	(bad)  
  419745:	call   FWORD PTR [ebp+0x1e4d281b]
  41974b:	jle    0x41972e
  41974d:	push   DWORD PTR [edi]
  41974f:	bound  ecx,QWORD PTR [eax-0x4c243ebd]
  419755:	cld    
  419756:	mov    bl,bh
  419758:	add    dh,BYTE PTR [esi-0x71cb5e00]
  41975e:	sbb    edx,DWORD PTR [edx+0x58907175]
  419764:	fild   DWORD PTR [ebx]
  419766:	std    
  419767:	push   0x53d50023
  41976c:	push   esp
  41976d:	mov    cs,WORD PTR [edi]
  41976f:	push   ss
  419770:	pusha  
  419771:	adc    al,0x73
  419773:	test   eax,0x9a8ea602
  419778:	sbb    al,BYTE PTR [edx+0x23]
  41977b:	enter  0x6c0c,0x43
  41977f:	dec    ecx
  419780:	stc    
  419781:	retf   
  419782:	cmc    
  419783:	mov    dh,0xc
  419785:	xchg   BYTE PTR [esi+ebx*1],al
  419788:	mov    dh,0xf1
  41978a:	add    ebx,DWORD PTR [ebp-0x5c43c303]
  419790:	sti    
  419791:	xor    al,0xc4
  419793:	pushf  
  419794:	inc    ecx
  419795:	inc    edi
  419796:	or     esp,DWORD PTR [ecx+eax*2+0x54981bea]
  41979d:	scas   al,BYTE PTR es:[edi]
  41979e:	add    dl,BYTE PTR [eax+0x3a019e54]
  4197a4:	and    ebp,edi
  4197a6:	or     BYTE PTR [edx],dh
  4197a8:	cmp    ebx,0xffffffdb
  4197ab:	into   
  4197ac:	xchg   esi,eax
  4197ad:	mov    al,BYTE PTR [eax+0x4e6e2e6]
  4197b3:	push   ds
  4197b4:	popa   
  4197b5:	jmp    0x99fc:0x54fb9d03
  4197bc:	push   esp
  4197bd:	addr16 jae 0x4197c0
  4197c0:	out    0xc2,al
  4197c2:	out    0x0,al
  4197c4:	xor    eax,0xce889d18
  4197c9:	not    BYTE PTR [eax-0x2d69d7ff]
  4197cf:	adc    al,0xae
  4197d1:	jmp    0x99e5:0xf28e1494
  4197d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197d9:	or     edx,DWORD PTR [esp+edi*8+0x2]
  4197dd:	or     eax,edi
  4197df:	adc    eax,DWORD PTR [eax]
  4197e1:	xchg   BYTE PTR [edi-0xef4e1fd],ah
  4197e7:	add    ebx,DWORD PTR [ebp-0xa1bc389]
  4197ed:	xlat   BYTE PTR ds:[ebx]
  4197ee:	jmp    DWORD PTR [ecx-0x24]
  4197f1:	fisttp WORD PTR [eax+0x4eccd514]
  4197f7:	cmp    DWORD PTR [esi-0x758de471],ebp
  4197fd:	or     eax,0xf078173
  419802:	jae    0x4197fd
  419804:	(bad)  
  419805:	(bad)  
  419806:	or     eax,DWORD PTR [esi-0x4d17fbec]
  41980c:	or     DWORD PTR ds:0xfd596cfd,0xb9ba282
  419816:	std    
  419817:	push   0xffffffe6
  419819:	add    DWORD PTR [ecx-0x75f4813c],eax
  41981f:	out    dx,eax
  419820:	push   ebx
  419821:	lds    eax,FWORD PTR [ebx]
  419823:	dec    esi
  419824:	add    BYTE PTR [edi-0x46d17e03],ah
  41982a:	or     eax,0x2396d3fd
  41982f:	lods   eax,DWORD PTR ds:[esi]
  419830:	jecxz  0x4197d0
  419832:	add    ch,BYTE PTR [edx+0x42]
  419835:	mov    eax,0x9ee90a5a
  41983a:	jns    0x419887
  41983c:	lds    ebx,FWORD PTR [edi+0x59e85554]
  419842:	mov    esp,0x783e94fc
  419847:	inc    ebp
  419848:	jmp    0x4197d9
  41984a:	(bad)  
  41984b:	sbb    esi,DWORD PTR [eax+0x54]
  41984e:	idiv   esp
  419850:	jl     0x419888
  419852:	jp     0x41981d
  419854:	xchg   edi,eax
  419855:	scas   eax,DWORD PTR es:[edi]
  419856:	(bad)  
  419857:	(bad)  
  419859:	sahf   
  41985a:	push   esp
  41985b:	add    eax,0x908264ee
  419860:	xor    al,0xd9
  419862:	or     bh,dh
  419864:	push   esp
  419865:	stc    
  419866:	add    ebp,eax
  419868:	add    BYTE PTR [edi],al
  41986a:	iret   
  41986b:	out    0x6c,eax
  41986d:	aam    0xef
  41986f:	cli    
  419870:	mov    ebp,DWORD PTR [esi+eax*4]
  419873:	sti    
  419874:	sbb    eax,0x75faf008
  419879:	cdq    
  41987a:	out    dx,eax
  41987b:	jne    0x4198ed
  41987d:	sub    ebp,DWORD PTR [edx+0x9]
  419880:	inc    ecx
  419882:	adc    eax,DWORD PTR ss:[eax-0x3c]
  419886:	pop    ebp
  419887:	push   esi
  419888:	test   DWORD PTR [eax],eax
  41988a:	add    al,0x6a
  41988c:	or     BYTE PTR [ecx+0x478a768a],cl
  419892:	sub    ebp,esi
  419894:	dec    eax
  419895:	or     al,BYTE PTR [esi+eax*1+0x618be7f]
  41989c:	add    BYTE PTR [eax],al
  41989e:	je     0x41990b
  4198a0:	push   es
  4198a1:	mov    esi,DWORD PTR [ecx]
  4198a3:	or     al,BYTE PTR [esi+0x60886]
  4198a9:	add    bh,ch
  4198ab:	mov    esp,0x66e34e4
  4198b0:	add    BYTE PTR [ebx+0x503d2231],cl
  4198b6:	mov    ebp,DWORD PTR [edx+0x1d]
  4198b9:	pslld  mm7,mm4
  4198bc:	cli    
  4198bd:	jne    0x419907
  4198bf:	add    eax,0x52c490b6
  4198c4:	cmp    eax,0x156aab00
  4198c9:	add    edx,DWORD PTR [ebx+0x4475fc4b]
  4198cf:	mov    esi,eax
  4198d1:	jmp    DWORD PTR [ecx-0x38a03f7]
  4198d7:	in     eax,dx
  4198d8:	cld    
  4198d9:	(bad)  
  4198db:	repz add al,0xfb
  4198df:	cmp    ch,0x9
  4198e2:	popf   
  4198e3:	sbb    eax,DWORD PTR [ecx]
  4198e5:	mov    eax,0xfd0f3797
  4198ea:	add    al,0xa6
  4198ec:	sbb    bh,ch
  4198ee:	add    dl,ch
  4198f0:	xchg   esp,eax
  4198f1:	les    esp,FWORD PTR [ebx]
  4198f3:	pop    ebp
  4198f4:	jmp    0x419904
  4198f6:	jae    0x419975
  4198f8:	sub    BYTE PTR [edi+0x5],dl
  4198fb:	shl    dh,cl
  4198fd:	out    dx,eax
  4198fe:	or     al,0x13
  419900:	mov    WORD PTR [ebx+0x5b],?
  419903:	pop    ebp
  419904:	sbb    edx,DWORD PTR [eax]
  419906:	jae    0x41989d
  419908:	sbb    al,0x38
  41990a:	push   esi
  41990b:	mov    dl,0x6
  41990d:	icebp  
  41990e:	mov    dh,dl
  419910:	mov    BYTE PTR [ebx+ecx*1-0x1806f95e],dl
  419917:	popa   
  419918:	js     0x419929
  41991a:	std    
  41991b:	sbb    bl,bl
  41991d:	inc    BYTE PTR [edx+0x11261]
  419923:	inc    ebp
  419924:	adc    al,0xd
  419926:	std    
  419927:	jp     0x4198eb
  419929:	lods   al,BYTE PTR ds:[esi]
  41992a:	call   0x43bc59a1
  41992f:	rcr    DWORD PTR [eax],0x57
  419932:	push   ebp
  419933:	pushf  
  419934:	pop    ebx
  419935:	mov    cl,0xfc
  419937:	sar    bl,1
  419939:	(bad)  
  41993a:	mov    ch,0x9a
  41993c:	loopne 0x4198d2
  41993e:	sbb    ebx,DWORD PTR [edx-0x1f6f7c4f]
  419944:	pop    ebx
  419945:	add    ebp,edi
  419947:	mov    al,0x13
  419949:	add    al,0xc5
  41994b:	retf   
  41994c:	add    BYTE PTR [ebp+0xeeb9e0f],dl
  419952:	jae    0x419954
  419954:	xchg   ecx,eax
  419955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419956:	cmp    bh,ch
  419958:	nop
  419959:	and    ebx,DWORD PTR [ecx]
  41995b:	jg     0x41994f
  41995d:	add    esi,esp
  41995f:	adc    BYTE PTR [esi],bl
  419961:	inc    edx
  419962:	out    dx,al
  419963:	xchg   BYTE PTR [edx+0x3503e6fb],al
  419969:	in     eax,dx
  41996a:	retf   0xf010
  41996d:	test   BYTE PTR [esi+0x5b482205],ch
  419973:	add    ebx,DWORD PTR [ebp-0x5c5e3ffe]
  419979:	add    ah,bh
  41997b:	jl     0x4199db
  41997d:	fisub  WORD PTR [esi]
  41997f:	mov    ah,0xc9
  419981:	mov    es,esi
  419983:	add    BYTE PTR [ebx],cl
  419985:	add    DWORD PTR [esi+0x54f99696],edx
  41998b:	jae    0x41999a
  41998d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41998e:	es add al,0xa8
  419991:	mov    ds,esi
  419993:	add    al,0xc8
  419995:	scas   eax,DWORD PTR es:[edi]
  419996:	jne    0x41992e
  419998:	stos   BYTE PTR es:[edi],al
  419999:	jnp    0x41993d
  41999b:	adc    BYTE PTR [esi],cl
  41999d:	mul    DWORD PTR [ebp-0x6a]
  4199a0:	mov    ds:0x8031221a,al
  4199a5:	or     BYTE PTR [ebx+eax*2-0x58],ch
  4199a9:	jge    0x4199bd
  4199ab:	sti    
  4199ac:	jb     0x4199b6
  4199ae:	jo     0x419961
  4199b0:	cli    
  4199b1:	dec    edx
  4199b2:	fisttp DWORD PTR [edi]
  4199b4:	pusha  
  4199b5:	or     BYTE PTR [eax+0x32],al
  4199b8:	add    BYTE PTR [edi+0x8],al
  4199bb:	cs jl  0x41999c
  4199be:	fdivrp st(5),st
  4199c0:	pop    ecx
  4199c1:	lock add DWORD PTR [edi-0x3971be4d],esp
  4199c8:	add    bl,dh
  4199ca:	dec    DWORD PTR ds:0x3cf79696
  4199d0:	or     DWORD PTR ds:0x2003a6a6,0xffffff8e
  4199d7:	call   eax
  4199d9:	mov    eax,ds:0x28ee563d
  4199de:	clc    
  4199df:	add    BYTE PTR [ecx+0x720b939a],bh
  4199e5:	mov    BYTE PTR ds:0x1396e173,0xde
  4199ec:	into   
  4199ed:	mov    ds:0x15f6c083,al
  4199f2:	adc    al,0x8
  4199f4:	jmp    0xec071b97
  4199f9:	pop    ecx
  4199fa:	mov    BYTE PTR [edi+0x71],ch
  4199fd:	int3   
  4199fe:	or     edi,ebp
  419a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a01:	test   al,0x23
  419a03:	or     cl,ch
  419a05:	sahf   
  419a06:	jns    0x419a4b
  419a08:	int    0xde
  419a0a:	mov    bh,0xfc
  419a0c:	adc    al,0xb9
  419a0e:	div    BYTE PTR [ebp+0x1b939bee]
  419a14:	out    dx,al
  419a15:	dec    eax
  419a16:	jb     0x4199a8
  419a18:	adc    al,0x61
  419a1a:	pop    es
  419a1b:	(bad)  
  419a1c:	hlt    
  419a1d:	add    BYTE PTR [esi-0x64402afe],al
  419a23:	xchg   ebx,eax
  419a24:	(bad)  
  419a26:	mov    BYTE PTR ds:0x93abe573,0x7
  419a2d:	inc    ecx
  419a2e:	iret   
  419a2f:	sub    ch,bh
  419a31:	inc    esi
  419a32:	adc    al,0x42
  419a34:	or     eax,0xfffacf64
  419a39:	call   0x2f3d8324
  419a3e:	mov    ds:0x9a13491f,al
  419a43:	add    eax,0xf63aa489
  419a48:	mov    ch,0xbe
  419a4a:	mov    eax,ds:0x140e4fc2
  419a4f:	out    0xc,eax
  419a51:	add    BYTE PTR [edx-0x1],ch
  419a54:	cli    
  419a55:	jne    0x419a97
  419a57:	or     BYTE PTR [ebx+0x3d517480],dh
  419a5d:	add    BYTE PTR [ebx],al
  419a5f:	push   0x15
  419a61:	add    edi,DWORD PTR [ebx]
  419a63:	dec    ebp
  419a64:	cld    
  419a65:	jne    0x419a6b
  419a67:	add    al,0xd0
  419a69:	call   FWORD PTR [ecx+0x2]
  419a6c:	xchg   ebx,ecx
  419a6e:	jecxz  0x419ad9
  419a70:	add    eax,0xfad853e8
  419a75:	(bad)  
  419a76:	jns    0x419a3b
  419a78:	or     al,BYTE PTR [ebp-0x2f99d]
  419a7e:	dec    esp
  419a7f:	adc    eax,0x300fff9
  419a84:	out    0xe4,al
  419a86:	(bad)  
  419a87:	and    edi,eax
  419a89:	xchg   BYTE PTR [esi-0x40],al
  419a8c:	mov    ebp,0xf3f02dc
  419a91:	dec    BYTE PTR [eax+0x4c880a71]
  419a97:	mov    ch,0xfe
  419a99:	test   BYTE PTR [ebp+0x20],cl
  419a9c:	mov    DWORD PTR [ebp+0x10],ecx
  419a9f:	pop    edi
  419aa0:	inc    ebx
  419aa1:	icebp  
  419aa2:	mov    DWORD PTR [ecx-0xe],ecx
  419aa5:	mov    BYTE PTR [esp+ecx*1],al
  419aa8:	mov    DWORD PTR [edi],eax
  419aaa:	mov    DWORD PTR [ecx-0x6],eax
  419aad:	xchg   BYTE PTR [esi+0x1f8],cl
  419ab3:	in     eax,dx
  419ab4:	inc    edx
  419ab5:	in     eax,0x8b
  419ab7:	scas   eax,DWORD PTR es:[edi]
  419ab8:	sub    BYTE PTR [ebx+0x68],cl
  419abb:	(bad)  
  419abc:	jb     0x419ab7
  419abe:	bound  edi,QWORD PTR [ebp+0x7b097209]
  419ac4:	cmp    bl,BYTE PTR ds:0x23402
  419aca:	jmp    0x419a69
  419acc:	pop    ss
  419acd:	and    BYTE PTR [ebx+0x7d],0x1b
  419ad1:	jp     0x419b16
  419ad3:	sbb    DWORD PTR [ebx+0x7c],0x95047943
  419ada:	and    ebp,DWORD PTR [edx-0x7702fa3b]
  419ae0:	cmp    edi,esi
  419ae2:	mov    ch,0x2d
  419ae4:	mov    WORD PTR [edi+edi*1-0x6adb6300],gs
  419aeb:	sbb    ebx,DWORD PTR [esi-0x6a8cf4bc]
  419af1:	mov    al,ds:0xc6ea5636
  419af6:	repz cld 
  419af8:	push   0xa5730c17
  419afd:	inc    ebx
  419afe:	es fcmovnbe st,st(2)
  419b01:	push   esp
  419b02:	test   eax,eax
  419b04:	push   ecx
  419b05:	adc    dh,cl
  419b07:	sbb    eax,0xd0b64c1
  419b0c:	and    BYTE PTR [ebp+0x3],cl
  419b0f:	add    BYTE PTR [ebp+0x14e7bca0],bl
  419b15:	mov    es,WORD PTR [edi-0x3e46300]
  419b1b:	mov    ch,0xea
  419b1d:	sbb    bh,ah
  419b1f:	mov    ch,0xea
  419b21:	sbb    DWORD PTR [edx-0x21],eax
  419b24:	xchg   ebp,eax
  419b25:	adc    BYTE PTR [edi],dh
  419b27:	add    DWORD PTR [ebx+ebx*4-0x7f0eac36],eax
  419b2e:	ja     0x419b86
  419b30:	mov    eax,ds:0x1613bca0
  419b35:	adc    DWORD PTR ds:[edi+0x56782aa1],eax
  419b3c:	test   eax,0x24eb8ca0
  419b41:	push   edi
  419b42:	repnz add edx,DWORD PTR [esi]
  419b45:	add    dh,BYTE PTR [ebp+0x12b775f3]
  419b4b:	jns    0x419b4d
  419b4d:	shl    esi,cl
  419b4f:	popa   
  419b50:	(bad)  
  419b54:	jns    0x419bbc
  419b56:	in     al,0x2
  419b58:	or     eax,0x78ef8e20
  419b5d:	pop    esi
  419b5e:	neg    BYTE PTR [edi-0x7a]
  419b61:	xor    DWORD PTR [edx],eax
  419b63:	out    0x3,eax
  419b65:	int3   
  419b66:	inc    edx
  419b67:	rol    BYTE PTR [ebp+0x78e70298],1
  419b6d:	pop    esi
  419b6e:	fisub  WORD PTR [esi]
  419b70:	mov    ah,0xf1
  419b72:	mov    es,WORD PTR [esi]
  419b74:	std    
  419b75:	xor    ch,bh
  419b77:	lds    edx,FWORD PTR [esi+0x7374f586]
  419b7d:	sub    eax,0xd00426a7
  419b82:	mov    cs,esi
  419b84:	add    al,dh
  419b86:	stos   DWORD PTR es:[edi],eax
  419b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b88:	xchg   esi,eax
  419b89:	xchg   edx,eax
  419b8a:	jns    0x419b3e
  419b8c:	or     al,0x2e
  419b8e:	not    BYTE PTR [ebp+0x3a1a9a96]
  419b94:	das    
  419b95:	test   al,0x4
  419b97:	ins    BYTE PTR es:[edi],dx
  419b98:	inc    ebx
  419b99:	nop
  419b9a:	jg     0x419bb6
  419b9c:	add    eax,0x1280029d
  419ba1:	test   DWORD PTR [esi+ebp*2],eax
  419ba4:	enter  0xfae7,0xdb
  419ba8:	jmp    0x419b75
  419baa:	mov    ah,0xb2
  419bac:	xchg   esi,eax
  419bad:	dec    eax
  419bae:	retf   0xaba4
  419bb1:	add    dh,ch
  419bb3:	hlt    
  419bb4:	popa   
  419bb5:	test   DWORD PTR ds:0x9c03e703,edx
  419bbb:	mov    esp,0xfadfcace
  419bc0:	(bad)  
  419bc1:	mov    esp,0xd94379c5
  419bc6:	(bad)  
  419bc7:	jl     0x419b49
  419bc9:	jmp    0xa4ca9e6c
  419bce:	ss jge 0x419c17
  419bd1:	cdq    
  419bd2:	mov    ch,0xbf
  419bd4:	or     esp,DWORD PTR [eax+0x20]
  419bd7:	addr16 add cl,ch
  419bda:	sahf   
  419bdb:	jns    0x419c20
  419bdd:	std    
  419bde:	scas   al,BYTE PTR es:[edi]
  419bdf:	sub    bl,BYTE PTR [ecx]
  419be1:	sub    ebx,edi
  419be3:	jmp    0x419be0
  419be5:	out    dx,al
  419be6:	xchg   esi,eax
  419be7:	jnp    0x419c47
  419be9:	pop    ebp
  419bea:	fstp   DWORD PTR [esp+eax*1]
  419bed:	out    0x9e,al
  419bef:	add    dh,BYTE PTR [ecx]
  419bf1:	test   eax,0xe7fc1cd9
  419bf6:	sahf   
  419bf7:	add    cl,BYTE PTR ds:0xe04de7f
  419bfd:	ja     0x419c0d
  419bff:	add    cl,BYTE PTR [ecx-0x1fbb02d9]
  419c05:	loope  0x419bd2
  419c07:	inc    ecx
  419c08:	add    DWORD PTR [eax-0x1de040c0],ebp
  419c0e:	popa   
  419c0f:	pop    DWORD PTR ds:0x2ffc6a
  419c15:	add    BYTE PTR [eax],0xb1
  419c18:	div    BYTE PTR [ebp-0x4a0a65cf]
  419c1e:	sub    DWORD PTR [ebp-0x6c1e20bd],ebx
  419c24:	cmp    eax,DWORD PTR [edi-0x798632e4]
  419c2a:	jge    0x419bc5
  419c2c:	add    al,BYTE PTR [eax]
  419c2e:	jo     0x419c8c
  419c30:	xor    ecx,DWORD PTR [ebx-0x79845154]
  419c36:	jne    0x419bd9
  419c38:	add    al,BYTE PTR [eax]
  419c3a:	add    bh,ch
  419c3c:	inc    eax
  419c3d:	or     eax,0x84fb8383
  419c42:	jge    0x419bf0
  419c44:	test   DWORD PTR [eax-0x20],eax
  419c47:	mov    bh,0xf6
  419c49:	sbb    eax,0x888a4f7f
  419c4e:	lock call 0xe6da:0xf989faf7
  419c56:	sbb    al,0xbf
  419c58:	(bad)  
  419c59:	mov    esp,0x10f836e1
  419c5e:	jo     0x419ccc
  419c60:	cmp    edi,ebp
  419c62:	mov    BYTE PTR [ecx-0x25],al
  419c65:	add    al,0x91
  419c68:	add    BYTE PTR [edx-0x6],ch
  419c6b:	in     eax,dx
  419c6c:	add    DWORD PTR [esi],0x40840400
  419c72:	loopne 0x419cb9
  419c74:	fild   WORD PTR [ecx]
  419c76:	push   eax
  419c77:	(bad)  [eax+0x9]
  419c7a:	inc    DWORD PTR [eax]
  419c7c:	mov    eax,ds:0xd415fada
  419c81:	adc    BYTE PTR ds:0xd423f00,bh
  419c87:	mov    ebp,DWORD PTR [ecx+0x10458622]
  419c8d:	test   BYTE PTR [eax+0x20],al
  419c90:	cs (bad) 
  419c92:	jle    0x419c58
  419c94:	mov    eax,0x1b1b5e3a
  419c99:	jl     0x419c7e
  419c9b:	(bad)  
  419c9c:	aaa    
  419c9d:	rol    BYTE PTR [ecx],0x41
  419ca0:	or     eax,0x91ff20bb
  419ca5:	loop   0x419cb2
  419ca7:	mov    dh,0x34
  419ca9:	std    
  419caa:	mov    dl,0x90
  419cac:	add    al,0xab
  419cae:	cmp    al,0x0
  419cb0:	xchg   DWORD PTR [ebx+0x589d571c],esi
  419cb6:	nop
  419cb7:	sbb    edx,DWORD PTR [esi]
  419cb9:	and    eax,0xa185730a
  419cbe:	or     DWORD PTR [ebx-0x53],esi
  419cc1:	inc    eax
  419cc2:	nop
  419cc3:	or     edx,DWORD PTR [edx-0x41]
  419cc6:	clc    
  419cc7:	out    0x81,eax
  419cc9:	(bad)  
  419ccb:	std    
  419ccc:	adc    al,0xaf
  419cce:	in     al,dx
  419ccf:	xor    BYTE PTR ds:0x983f9eb,0xec
  419cd6:	add    BYTE PTR [eax],al
  419cd8:	push   0x22fd04f2
  419cdd:	stc    
  419cde:	jl     0x419c67
  419ce0:	add    BYTE PTR [ebp-0x227cff15],bl
  419ce6:	jg     0x419cea
  419ce8:	cmp    ebp,DWORD PTR [ebx-0x7702f911]
  419cee:	dec    esp
  419cef:	jne    0x419d34
  419cf1:	int    0x72
  419cf3:	adc    BYTE PTR [ebp+ebx*4+0x608900eb],0xcb
  419cfb:	inc    eax
  419cfc:	loopne 0x419c9d
  419cfe:	sbb    eax,DWORD PTR [edi]
  419d00:	jae    0x419cfb
  419d02:	rcl    BYTE PTR [ecx-0x2f212df5],0x15
  419d09:	pop    ebp
  419d0a:	jmp    0x419d87
  419d0c:	inc    ebx
  419d0d:	jge    0x419d07
  419d0f:	dec    esi
  419d10:	dec    eax
  419d11:	pushf  
  419d12:	lock dec esi
  419d14:	push   eax
  419d15:	lahf   
  419d16:	stos   BYTE PTR es:[edi],al
  419d17:	and    BYTE PTR [eax],cl
  419d19:	xchg   esi,eax
  419d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d1b:	add    bh,BYTE PTR [edi-0x761bd0ec]
  419d21:	popf   
  419d22:	ins    BYTE PTR es:[edi],dx
  419d23:	inc    eax
  419d24:	or     al,0xd1
  419d26:	pop    ds
  419d27:	test   DWORD PTR [ebx-0x2f88efb],0x33ac0216
  419d31:	and    al,0x4f
  419d33:	cmp    edi,DWORD PTR [ebx+0x1b]
  419d36:	xchg   esi,eax
  419d37:	out    0x3,al
  419d39:	popf   
  419d3a:	(bad)  
  419d3b:	arpl   WORD PTR [ebx+eiz*2],dx
  419d3e:	add    DWORD PTR [esi-0x33],eax
  419d41:	bound  edx,QWORD PTR [ecx]
  419d43:	arpl   WORD PTR [ebp+0x36013900],si
  419d49:	or     DWORD PTR [esi+0x42c57f76],ebp
  419d4f:	jmp    0xb772:0x13820ae
  419d56:	push   esi
  419d57:	(bad)  
  419d58:	imul   edx,DWORD PTR [ebx+ebp*1],0x1
  419d5c:	push   cs
  419d5d:	int    0x5a
  419d5f:	jbe    0x419d4e
  419d61:	or     BYTE PTR [esi+0x12c54f76],ch
  419d67:	mov    WORD PTR [ebx-0x1c71fc11],gs
  419d6d:	add    ebx,DWORD PTR [ebp+0x24342b8d]
  419d73:	dec    edi
  419d74:	mov    ebx,0xe6961b7a
  419d79:	add    ebx,DWORD PTR [ebp-0x1cec9c71]
  419d7f:	add    dh,al
  419d81:	int3   
  419d82:	loop   0x419df9
  419d84:	in     eax,0x8
  419d86:	scas   al,BYTE PTR es:[edi]
  419d87:	jbe    0x419e08
  419d89:	(bad)  
  419d8a:	retf   0xa733
  419d8d:	ret    
  419d8e:	mov    ebx,0xb8088e0c
  419d93:	mov    WORD PTR [ebx],fs
  419d95:	loopne 0x419dbc
  419d97:	push   edi
  419d98:	sti    
  419d99:	ret    
  419d9a:	pop    edx
  419d9b:	add    DWORD PTR [esp+eiz*8],edx
  419d9e:	mov    eax,ds:0xe08e376
  419da3:	jmp    0x419d34
  419da5:	mov    edi,0x76000070
  419daa:	add    BYTE PTR [ecx],cl
  419dac:	inc    esp
  419dad:	adc    BYTE PTR [eax+0x1c],ah
  419db0:	cmp    edi,0xffffffe8
  419db3:	sahf   
  419db4:	mov    DWORD PTR [edx-0xf],eax
  419db7:	mul    DWORD PTR [eax+0x74]
  419dba:	pusha  
  419dbb:	pop    esp
  419dbc:	jo     0x419da7
  419dbe:	pop    ds
  419dbf:	loope  0x419e04
  419dc1:	clc    
  419dc2:	add    BYTE PTR [edx],bl
  419dc4:	adc    al,0xd
  419dc6:	ins    BYTE PTR es:[edi],dx
  419dc7:	mov    eax,ebp
  419dc9:	cld    
  419dca:	ss xchg ebp,eax
  419dcc:	jae    0x419de6
  419dce:	(bad)  
  419dd0:	repz cld 
  419dd2:	pushf  
  419dd3:	mov    cs,WORD PTR [ecx-0x158e8d3b]
  419dd9:	mov    bl,0x33
  419ddb:	xchg   ebp,eax
  419ddc:	std    
  419ddd:	sub    BYTE PTR [ecx],0x25
  419de0:	test   BYTE PTR [ecx+ebp*8-0x63fefd62],bh
  419de7:	mov    ds:0x95dd42fd,al
  419dec:	jae    0x419e12
  419dee:	sbb    DWORD PTR [esi+0x760572fd],0xffffffd5
  419df5:	cld    
  419df6:	push   esp
  419df7:	add    DWORD PTR [ebx+0x73a23fc8],ecx
  419dfd:	adc    dh,cl
  419dff:	or     al,0xc
  419e01:	std    
  419e02:	cmp    al,0xd9
  419e04:	out    0xeb,eax
  419e06:	mov    ds:0xa982fd9a,eax
  419e0b:	sub    eax,0xc2e6b2
  419e10:	popf   
  419e11:	add    al,BYTE PTR [eax]
  419e13:	jo     0x419e19
  419e15:	cld    
  419e16:	xchg   BYTE PTR [ebp*4-0xceb37c6],ch
  419e1d:	(bad)  
  419e1e:	jb     0x419e11
  419e20:	daa    
  419e21:	push   ebx
  419e22:	hlt    
  419e23:	add    BYTE PTR [ebx],ah
  419e25:	xchg   ecx,eax
  419e26:	in     al,dx
  419e27:	mov    edi,DWORD PTR [edx]
  419e29:	jnp    0x419df2
  419e2b:	call   0x3ccac7
  419e30:	stc    
  419e31:	inc    esi
  419e32:	je     0x419e44
  419e34:	xchg   DWORD PTR [edx-0x10c60010],ebp
  419e3a:	xchg   DWORD PTR [ebp+0x68],eax
  419e3d:	int3   
  419e3e:	inc    ecx
  419e3f:	clc    
  419e40:	push   eax
  419e41:	daa    
  419e42:	out    0x1f,eax
  419e44:	iret   
  419e45:	mov    eax,0x928d8578
  419e4a:	adc    al,0x3b
  419e4c:	xor    dl,BYTE PTR [edi-0x55b0ec92]
  419e52:	add    al,0x76
  419e54:	xor    dl,ah
  419e56:	mov    esp,0x58c0ad40
  419e5b:	cmp    edi,DWORD PTR [edi+esi*8-0x75]
  419e5f:	jo     0x419dfc
  419e61:	pop    es
  419e62:	sti    
  419e63:	cmp    eax,DWORD PTR [ecx+0x7]
  419e66:	or     eax,DWORD PTR [edx-0x4e2b8]
  419e6c:	jg     0x419e2f
  419e6e:	and    BYTE PTR [eax+0x7d],al
  419e71:	shl    DWORD PTR [eax],0xff
  419e74:	add    BYTE PTR [ecx-0x1e],bl
  419e77:	xchg   edi,edx
  419e79:	dec    esi
  419e7a:	push   es
  419e7b:	sti    
  419e7c:	jne    0x419e6e
  419e7e:	jnp    0x419e47
  419e80:	dec    DWORD PTR [ecx-0x12]
  419e83:	push   edx
  419e84:	call   FWORD PTR [ecx-0x3f8a040a]
  419e8a:	pop    es
  419e8b:	jno    0x419e95
  419e8d:	fcomp  QWORD PTR [esi+edx*8-0x407e0c01]
  419e94:	cmovns ebx,DWORD PTR [ebp-0x243c0000]
  419e9b:	pop    ecx
  419e9c:	hlt    
  419e9d:	popf   
  419e9e:	aam    0xa7
  419ea0:	sti    
  419ea1:	cs mov ebx,0x8580fa1b
  419ea7:	add    eax,0x7fffe389
  419eac:	(bad)  
  419ead:	call   0xca6d:0x82e3166f
  419eb4:	pop    ebp
  419eb5:	or     ebp,esi
  419eb7:	jle    0x419e9f
  419eb9:	js     0x419f18
  419ebb:	push   es
  419ebc:	cmp    eax,ecx
  419ebe:	jecxz  0x419eb5
  419ec0:	test   DWORD PTR [eax+0x47],eax
  419ec3:	push   es
  419ec4:	std    
  419ec5:	mov    gs,WORD PTR [ebx]
  419ec7:	rol    DWORD PTR [esi-0x38366025],0x34
  419ece:	aaa    
  419ecf:	sbb    edi,ebp
  419ed1:	inc    edx
  419ed2:	popa   
  419ed3:	shl    bh,0x74
  419ed6:	scas   al,BYTE PTR es:[edi]
  419ed7:	in     al,dx
  419ed8:	or     al,0x0
  419eda:	and    BYTE PTR [eax],ch
  419edc:	and    ch,bh
  419ede:	sub    dl,cl
  419ee0:	mov    ds:0x3568926b,al
  419ee5:	out    0x1a,al
  419ee7:	add    eax,0x709eb5f6
  419eec:	cmp    DWORD PTR [ecx],esi
  419eee:	out    dx,eax
  419eef:	push   0x185f0524
  419ef4:	pop    ds
  419ef5:	mov    DWORD PTR [eax-0x21],ebp
  419ef8:	inc    eax
  419ef9:	call   0x842109c
  419efe:	pop    esi
  419eff:	outs   dx,DWORD PTR ds:[esi]
  419f00:	xor    al,0xd
  419f02:	sbb    DWORD PTR [eax+0x1d],esi
  419f05:	std    
  419f06:	fcmovb st,st(4)
  419f08:	mov    esp,0xe036d213
  419f0d:	imul   ebx,DWORD PTR [ebp+0x161b8cb4],0x95730295
  419f17:	add    dh,BYTE PTR [edx+0x39]
  419f1a:	dec    ebx
  419f1b:	std    
  419f1c:	adc    esi,esp
  419f1e:	test   eax,0x2e04e377
  419f23:	or     bh,BYTE PTR [edi+0x32]
  419f26:	jb     0x419f25
  419f28:	test   DWORD PTR [edi+0x5d],edi
  419f2b:	jbe    0x419f73
  419f2d:	sbb    ebx,DWORD PTR [edx+0x1]
  419f30:	out    0x3,eax
  419f32:	sbb    bl,BYTE PTR [edi+0x6b]
  419f35:	leave  
  419f36:	bound  edi,QWORD PTR [edi-0x49]
  419f39:	enter  0x6ed0,0xda
  419f3d:	fild   DWORD PTR [eax]
  419f3f:	cdq    
  419f40:	mov    ah,0xe9
  419f42:	js     0x419f99
  419f44:	xor    DWORD PTR [ecx],edi
  419f46:	cmp    DWORD PTR [edx+0x5],0x893f30a9
  419f4d:	stos   DWORD PTR es:[edi],eax
  419f4e:	(bad)  
  419f50:	jmp    0x3463:0xa9979e9
  419f57:	mov    cl,0x2a
  419f59:	stos   BYTE PTR es:[edi],al
  419f5a:	add    al,0xde
  419f5c:	push   ss
  419f5d:	jb     0x419f1e
  419f5f:	mov    ?,WORD PTR [ecx]
  419f61:	lods   al,BYTE PTR ds:[esi]
  419f62:	or     esp,DWORD PTR [ecx+0x25ea01d7]
  419f68:	inc    esp
  419f69:	cmp    DWORD PTR [esi-0x23],0x75
  419f6d:	fcmove st,st(0)
  419f6f:	or     bh,BYTE PTR [di-0xb]
  419f73:	int    0xcb
  419f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f76:	jp     0x419fe3
  419f78:	pop    esi
  419f79:	and    al,BYTE PTR [ebx-0x60]
  419f7c:	lea    esi,ds:0x11fce81e
  419f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f83:	out    0xc,al
  419f85:	imul   ebp,eax,0x78c5fcbf
  419f8b:	pop    esi
  419f8c:	es daa 
  419f8e:	jnp    0x419fee
  419f90:	add    BYTE PTR es:[esi-0x6976deed],dh
  419f97:	adc    al,0xfd
  419f99:	std    
  419f9a:	sbb    al,0xc5
  419f9c:	mov    eax,ecx
  419f9e:	sahf   
  419f9f:	sbb    edx,DWORD PTR ds:0x13009656
  419fa5:	or     eax,0xff9514fd
  419faa:	jb     0x419f9d
  419fac:	mov    dh,0x47
  419fae:	xlat   BYTE PTR ds:[ebx]
  419faf:	jle    0x419f52
  419fb1:	jg     0x419f72
  419fb3:	out    0x3,al
  419fb5:	dec    eax
  419fb6:	add    ecx,ebp
  419fb8:	sahf   
  419fb9:	dec    ecx
  419fba:	cmp    esp,eax
  419fbc:	call   0xfce6:0xbd50d471
  419fc3:	push   esi
  419fc4:	in     eax,0x44
  419fc6:	jl     0x41a02c
  419fc8:	fimul  WORD PTR ds:0xfdb22184
  419fce:	cld    
  419fcf:	add    al,BYTE PTR [edx]
  419fd1:	add    al,0xd
  419fd3:	outs   dx,DWORD PTR ds:[esi]
  419fd4:	mov    esi,esp
  419fd6:	cld    
  419fd7:	cs xchg edi,eax
  419fd9:	lock loop 0x41a002
  419fdc:	cdq    
  419fdd:	mov    DWORD PTR [ebp-0x63],eax
  419fe0:	stos   DWORD PTR es:[edi],eax
  419fe1:	ret    0x6d0c
  419fe4:	(bad)  
  419fe6:	cld    
  419fe7:	push   cs
  419fe8:	in     eax,0x58
  419fea:	or     dh,dh
  419fec:	nop
  419fed:	mov    ah,0xe3
  419fef:	(bad)  
  419ff0:	sahf   
  419ff1:	adc    DWORD PTR [ebp-0x6b],0xffffffd5
  419ff5:	shl    esi,0x10
  419ff8:	fwait
  419ff9:	std    
  419ffa:	cld    
  419ffb:	jb     0x41a061
  419ffd:	es inc eax
  419fff:	jo     0x41a04d
  41a001:	push   ss
  41a002:	xchg   DWORD PTR [esi*4+0xfee952],ebp
  41a009:	sub    eax,DWORD PTR [ecx-0x8]
  41a00c:	add    BYTE PTR [ebp+0x390f1449],bl
  41a012:	xchg   ebx,eax
  41a013:	loopne 0x41a014
  41a015:	or     edi,DWORD PTR [esi+ebx*2]
  41a018:	ins    BYTE PTR es:[edi],dx
  41a019:	fild   DWORD PTR [edi+edx*4+0xafffbe5]
  41a020:	mov    dh,0xb7
  41a022:	mov    WORD PTR [edx+0x30],cs
  41a025:	mov    ebx,0xc70800b9
  41a02a:	cmp    eax,0x8a8bf441
  41a02f:	jb     0x41a015
  41a031:	or     eax,DWORD PTR [eax]
  41a033:	sti    
  41a034:	inc    ebp
  41a035:	pusha  
  41a036:	add    BYTE PTR [ecx+0x24],dh
  41a039:	sahf   
  41a03a:	push   es
  41a03b:	sti    
  41a03c:	jne    0x419fd6
  41a03e:	mov    edx,ebx
  41a040:	call   DWORD PTR [ecx+0x17]
  41a043:	xchg   ebx,ecx
  41a045:	and    al,BYTE PTR [eax]
  41a047:	jno    0x41a059
  41a049:	jmp    0x41a0c4
  41a04b:	or     al,0xff
  41a04d:	adc    DWORD PTR [edi],eax
  41a04f:	call   0xfb411d00
  41a054:	test   DWORD PTR [edx+edi*2-0x4e],esi
  41a058:	jmp    0x41a47c
  41a05d:	scas   eax,DWORD PTR es:[edi]
  41a05e:	dec    ecx
  41a05f:	and    al,0x40
  41a061:	lods   eax,DWORD PTR ds:[esi]
  41a062:	dec    ecx
  41a063:	and    al,0x50
  41a065:	lahf   
  41a066:	xchg   DWORD PTR cs:[ebp-0x54],eax
  41a06a:	cmp    eax,0xb001441
  41a06f:	xchg   edx,eax
  41a070:	xor    ah,ah
  41a072:	or     eax,DWORD PTR [eax]
  41a074:	aaa    
  41a075:	pop    esi
  41a076:	sbb    BYTE PTR [eax],dl
  41a078:	jg     0x41a0b8
  41a07a:	mov    eax,ds:0x120ffaff
  41a07f:	add    al,0x3f
  41a081:	cmp    ecx,eax
  41a083:	cli    
  41a084:	or     eax,DWORD PTR [ebp-0x317f663]
  41a08a:	fcmove st,st(3)
  41a08c:	inc    edi
  41a08d:	adc    al,0xd2
  41a08f:	cmp    eax,0xbc9d6a28
  41a094:	ja     0x41a0b2
  41a096:	push   ss
  41a097:	pushf  
  41a098:	add    DWORD PTR [ebx-0x6b],esi
  41a09b:	pusha  
  41a09c:	into   
  41a09d:	push   ebp
  41a09e:	mov    dl,0x1d
  41a0a0:	adc    al,0xfd
  41a0a2:	xor    ch,ch
  41a0a4:	add    DWORD PTR [ebx-0x6b],esi
  41a0a7:	adc    DWORD PTR [esi-0x28],0xbf87899a
  41a0ae:	or     DWORD PTR [ebx-0x14],eax
  41a0b1:	push   edx
  41a0b2:	lahf   
  41a0b3:	jmp    0x41a0b5
  41a0b5:	mov    eax,ebx
  41a0b7:	mov    DWORD PTR [eax-0x79],0xe950bfe0
  41a0be:	ret    0x4874
  41a0c1:	clc    
  41a0c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c3:	sahf   
  41a0c4:	adc    al,0xd
  41a0c6:	adc    BYTE PTR [esi+eiz*8-0x4],cl
  41a0ca:	pop    edx
  41a0cb:	adc    eax,0x6ca26c62
  41a0d0:	jmp    0x398ba1b8
  41a0d5:	adc    dh,BYTE PTR [esi+0x304f649e]
  41a0db:	stos   BYTE PTR es:[edi],al
  41a0dc:	jno    0x41a0e3
  41a0de:	or     dh,bl
  41a0e0:	loop   0x41a129
  41a0e2:	hlt    
  41a0e3:	call   0x211:0x22e0c65f
  41a0ea:	inc    ebx
  41a0eb:	mov    cl,0x8
  41a0ed:	js     0x41a113
  41a0ef:	xchg   ebx,ebp
  41a0f1:	add    DWORD PTR [ebx-0x57],esi
  41a0f4:	je     0x41a0d0
  41a0f6:	cld    
  41a0f7:	mov    bl,dl
  41a0f9:	(bad)  
  41a0fa:	enter  0xe853,0x74
  41a0fe:	adc    dl,dh
  41a100:	add    bl,BYTE PTR [eax+edx*1-0x18]
  41a104:	outs   dx,DWORD PTR ds:[esi]
  41a105:	out    dx,eax
  41a106:	jmp    0x41a0f3
  41a108:	rcl    ebp,1
  41a10a:	add    DWORD PTR [esi],ebx
  41a10c:	ret    
  41a10d:	push   edx
  41a10e:	mov    dh,0xbb
  41a110:	cli    
  41a111:	out    0x3,eax
  41a113:	popf   
  41a114:	lea    esp,[ebx]
  41a116:	sub    BYTE PTR [ebp-0x75],bl
  41a119:	sub    ebp,DWORD PTR [eax]
  41a11b:	dec    ebp
  41a11c:	in     eax,dx
  41a11d:	dec    BYTE PTR [edi+ebx*2-0x6eb92006]
  41a124:	or     DWORD PTR [ebp+eax*4-0x43],ebp
  41a128:	stc    
  41a129:	xchg   ebp,eax
  41a12a:	cmp    eax,0x84de66fb
  41a12f:	and    eax,0x980185de
  41a134:	mov    al,0xe9
  41a136:	inc    esp
  41a137:	add    dl,cl
  41a139:	aas    
  41a13a:	jnp    0x41a14d
  41a13c:	and    DWORD PTR [edi-0x76],esp
  41a13f:	add    DWORD PTR [eax-0x7],esi
  41a142:	stos   DWORD PTR es:[edi],eax
  41a143:	pop    ss
  41a144:	push   0x9d6e036f
  41a149:	stc    
  41a14a:	fistp  DWORD PTR [edi]
  41a14c:	and    al,0xd1
  41a14e:	dec    ebp
  41a14f:	ja     0x41a106
  41a151:	lea    esi,[ecx]
  41a153:	pop    edx
  41a154:	dec    eax
  41a155:	outs   dx,DWORD PTR ds:[esi]
  41a156:	xlat   BYTE PTR ds:[ebx]
  41a157:	add    dh,cl
  41a159:	push   es
  41a15a:	ss ja  0x41a102
  41a15d:	jmp    0xc46b:0xf931d989
  41a164:	scas   al,BYTE PTR es:[edi]
  41a165:	mov    ebx,0xf923a60f
  41a16a:	out    0x6d,al
  41a16c:	por    mm6,QWORD PTR [eax+0x3]
  41a170:	popf   
  41a171:	add    dh,BYTE PTR [edx+0x47]
  41a174:	or     DWORD PTR [ebx+0x3f1417a3],ecx
  41a17a:	add    ch,cl
  41a17c:	pop    esi
  41a17d:	add    DWORD PTR [edx-0x3b],0xe85fe14e
  41a184:	sahf   
  41a185:	add    cl,BYTE PTR [ecx+0x432fe124]
  41a18b:	std    
  41a18c:	lods   eax,DWORD PTR ds:[esi]
  41a18d:	lea    ebx,[edx]
  41a18f:	retf   0xf79d
  41a192:	mov    BYTE PTR [edi],dh
  41a194:	dec    ebp
  41a195:	cmp    edx,edi
  41a197:	out    dx,al
  41a198:	sbb    DWORD PTR [edx],esp
  41a19a:	in     al,0xb6
  41a19c:	add    BYTE PTR [ebp-0x5d4a857d],bl
  41a1a2:	jne    0x41a1e5
  41a1a4:	jb     0x41a1fa
  41a1a6:	sbb    al,BYTE PTR [ebx+0x6a0f2aa9]
  41a1ac:	jmp    0xed972d9f
  41a1b1:	and    ebx,eax
  41a1b3:	out    0x50,eax
  41a1b5:	stc    
  41a1b6:	add    al,BYTE PTR [eax]
  41a1b8:	fs pop esi
  41a1ba:	pop    es
  41a1bb:	cmp    DWORD PTR [ecx-0x80],0xfffffff7
  41a1bf:	cld    
  41a1c0:	cmp    BYTE PTR [ebx-0x47faba77],0xca
  41a1c7:	cmp    BYTE PTR [eax-0x1b],al
  41a1ca:	push   ss
  41a1cb:	mov    ah,dl
  41a1cd:	cwde   
  41a1ce:	dec    eax
  41a1cf:	sub    al,0xd4
  41a1d1:	stos   DWORD PTR es:[edi],eax
  41a1d2:	xor    edi,0xd27eade8
  41a1d8:	dec    ebx
  41a1d9:	popf   
  41a1da:	cmc    
  41a1db:	mov    DWORD PTR [edx-0x3b9c361],ebp
  41a1e1:	lea    edi,[esi-0x3a]
  41a1e4:	or     ebx,DWORD PTR [ebp+0x2aac88f5]
  41a1ea:	pop    es
  41a1eb:	mov    dh,0xea
  41a1ed:	and    DWORD PTR [ecx-0xee65507],edi
  41a1f3:	or     al,0x0
  41a1f5:	adc    ecx,DWORD PTR [ebx-0x7fc0091]
  41a1fb:	sti    
  41a1fc:	and    al,0x81
  41a1fe:	inc    esi
  41a1ff:	mov    DWORD PTR [ecx+0x0],eax
  41a202:	add    al,0x7f
  41a204:	hlt    
  41a205:	or     dh,bl
  41a207:	jg     0x41a1dc
  41a209:	add    ah,dh
  41a20b:	add    ecx,DWORD PTR [ebx]
  41a20d:	xchg   BYTE PTR [eiz*8-0x9b80005],ah
  41a214:	or     BYTE PTR [esi-0x1c],dh
  41a217:	test   ah,dh
  41a219:	or     eax,0x85391b88
  41a21e:	les    eax,FWORD PTR [ebx]
  41a220:	add    BYTE PTR [edi],cl
  41a222:	cmp    DWORD PTR [ebx+0x3403ffde],ecx
  41a228:	sar    BYTE PTR [ecx],0x7a
  41a22b:	pop    esi
  41a22c:	or     eax,DWORD PTR [ebp-0x41afa]
  41a232:	sbb    eax,0x74fffcb2
  41a237:	cmp    al,0x5e
  41a239:	ins    BYTE PTR es:[edi],dx
  41a23a:	jae    0x41a1c0
  41a23c:	lahf   
  41a23d:	add    BYTE PTR [ebx+eax*1+0x87e3b80],al
  41a244:	sbb    DWORD PTR [edx+0x43000374],0xfffc9acd
  41a24e:	inc    esp
  41a24f:	test   ah,dh
  41a251:	or     DWORD PTR [ebx+0x7f],esi
  41a254:	push   esi
  41a255:	loop   0x41a23a
  41a257:	idiv   DWORD PTR [edi-0x8]
  41a25a:	xchg   esp,eax
  41a25b:	pop    es
  41a25c:	test   BYTE PTR [ecx-0x1a],dl
  41a25f:	idiv   ebx
  41a261:	cmp    eax,0xfffffe24
  41a266:	add    BYTE PTR [edi+0x2df87f79],cl
  41a26c:	outs   dx,DWORD PTR ds:[esi]
  41a26d:	jbe    0x41a1f2
  41a26f:	popf   
  41a270:	adc    DWORD PTR [esp+esi*2],esp
  41a273:	mov    esi,es
  41a275:	mov    al,ds:0xde90aff
  41a27a:	or     eax,0xb
  41a27d:	std    
  41a27e:	cld    
  41a27f:	push   es
  41a280:	test   DWORD PTR [ecx+0x5e7ba7f7],eax
  41a286:	and    ebp,0xb8860ded
  41a28c:	retf   
  41a28d:	std    
  41a28e:	cld    
  41a28f:	cwde   
  41a290:	add    WORD PTR [eax],ax
  41a293:	popf   
  41a294:	les    ecx,FWORD PTR [ebx-0x7f]
  41a297:	(bad)
  41a29a:	sub    BYTE PTR [eax+0x1efcfdcb],0xb1
  41a2a1:	pcmpeqd mm3,QWORD PTR [esi+eiz*8-0x79]
  41a2a6:	jmp    FWORD PTR [edx+0x16cde9e8]
  41a2ac:	daa    
  41a2ad:	cmp    dh,dh
  41a2af:	mov    eax,ds:0x58e904e3
  41a2b4:	popa   
  41a2b5:	dec    ebx
  41a2b6:	xor    al,0x93
  41a2b8:	call   0xcab7a6c5
  41a2bd:	mov    DWORD PTR [ebp-0x4f],ecx
  41a2c0:	jne    0x41a2c7
  41a2c2:	or     BYTE PTR [eax+eax*4+0x17db88b1],bl
  41a2c9:	test   BYTE PTR [ebx],0x0
  41a2cc:	xchg   ebp,eax
  41a2cd:	jmp    0xf634:0x9e260fe9
  41a2d4:	cdq    
  41a2d5:	jecxz  0x41a2e7
  41a2d7:	jmp    0x348d13d8
  41a2dc:	dec    ebx
  41a2dd:	loopne 0x41a2e7
  41a2df:	adc    BYTE PTR [edx+0x32dece67],ch
  41a2e5:	and    eax,0x29142fe
  41a2ea:	es js  0x41a366
  41a2ed:	push   0x168ffee7
  41a2f2:	(bad)  
  41a2f3:	(bad)  
  41a2f4:	adc    DWORD PTR [eax-0x11],esi
  41a2f7:	mov    dl,ch
  41a2f9:	dec    esp
  41a2fa:	push   es
  41a2fb:	js     0x41a2aa
  41a2fd:	cmc    
  41a2fe:	jae    0x41a30f
  41a300:	clc    
  41a301:	outs   dx,DWORD PTR ds:[esi]
  41a302:	fucomip st,st(3)
  41a304:	lahf   
  41a305:	int3   
  41a306:	in     eax,dx
  41a307:	std    
  41a308:	pop    ds
  41a309:	ret    
  41a30a:	cmc    
  41a30b:	xchg   DWORD PTR [edi-0xc],esp
  41a30e:	(bad)  
  41a310:	lds    eax,FWORD PTR [ecx]
  41a312:	inc    ecx
  41a313:	stc    
  41a314:	push   0x55
  41a316:	sub    eax,0x6c0e259
  41a31b:	add    al,0x2d
  41a31d:	aad    0x43
  41a31f:	inc    ebx
  41a320:	popf   
  41a321:	mov    dh,0x41
  41a323:	inc    ebx
  41a324:	popf   
  41a325:	ret    
  41a326:	inc    ecx
  41a327:	inc    ebx
  41a328:	popf   
  41a329:	les    edx,FWORD PTR [ecx]
  41a32b:	inc    ebx
  41a32c:	popf   
  41a32d:	add    cl,BYTE PTR [ebx+eax*2]
  41a330:	add    BYTE PTR [ebp-0x62bcfc0b],bl
  41a336:	push   cs
  41a337:	std    
  41a338:	inc    edx
  41a339:	popf   
  41a33a:	and    eax,0x3e9d4315
  41a33f:	or     eax,0x54c9d43
  41a344:	inc    ebx
  41a345:	popf   
  41a346:	gs std 
  41a348:	inc    edx
  41a349:	popf   
  41a34a:	jne    0x41a320
  41a34c:	inc    edx
  41a34d:	popf   
  41a34e:	retf   
  41a34f:	retf   
  41a350:	inc    edx
  41a351:	popf   
  41a352:	jg     0x41a318
  41a354:	inc    edx
  41a355:	popf   
  41a356:	repz mov esp,0xd6689d42
  41a35c:	inc    edx
  41a35d:	popf   
  41a35e:	loope  0x41a32d
  41a360:	inc    edx
  41a361:	popf   
  41a362:	sub    al,BYTE PTR [eax]
  41a364:	mov    ecx,0xbd9b02df
  41a369:	fild   WORD PTR [edx]
  41a36b:	lea    edx,[ebp-0x78d8fd21]
  41a371:	pop    edi
  41a372:	add    bh,BYTE PTR [ebx]
  41a374:	sbb    BYTE PTR [edi+0x2],0xd1
  41a378:	sbb    BYTE PTR [edi+0x2],0x97
  41a37c:	jnp    0x41a3dd
  41a37e:	add    bh,BYTE PTR [edx+0x23025f7b]
  41a384:	jl     0x41a3e5
  41a386:	add    bh,BYTE PTR [ebx]
  41a388:	jp     0x41a3e9
  41a38a:	add    dh,bh
  41a38c:	pop    ebx
  41a38d:	pop    esi
  41a38e:	add    bl,bl
  41a390:	pop    ebx
  41a391:	pop    esi
  41a392:	add    dl,BYTE PTR ds:0x25e005a
  41a398:	and    ebx,DWORD PTR [edx+0x5e]
  41a39b:	add    dh,BYTE PTR [eax]
  41a39d:	cmp    bl,BYTE PTR [esi+0x2]
  41a3a0:	repnz cmp ebx,DWORD PTR [esi+0x2]
  41a3a4:	aam    0x3c
  41a3a6:	pop    esi
  41a3a7:	add    dh,BYTE PTR [esi+0x34]
  41a3aa:	pop    esi
  41a3ab:	add    bl,BYTE PTR [esi+0x1c]
  41a3ae:	pop    esi
  41a3af:	add    dl,BYTE PTR [esp+edx*1+0x1ca202de]
  41a3b6:	fiadd  WORD PTR [edx]
  41a3b8:	stos   DWORD PTR es:[edi],eax
  41a3b9:	adc    al,0xde
  41a3bb:	add    bh,BYTE PTR [edx+0x4202dffc]
  41a3c1:	add    esi,ebx
  41a3c3:	add    bl,bl
  41a3c5:	(bad)  
  41a3c6:	fild   WORD PTR [edx]
  41a3c8:	mov    esp,0x302dff6
  41a3cd:	loope  0x41a3ae
  41a3cf:	add    dl,BYTE PTR [ecx+eiz*8]
  41a3d2:	fild   WORD PTR [edx]
  41a3d4:	sbb    al,0xd1
  41a3d6:	fild   WORD PTR [edx]
  41a3d8:	sub    dl,cl
  41a3da:	fild   WORD PTR [edx]
  41a3dc:	mov    al,0x0
  41a3de:	add    eax,0xf46d0041
  41a3e3:	inc    eax
  41a3e4:	add    BYTE PTR [edi],ah
  41a3e6:	rol    BYTE PTR [eax+0x0],0x7d
  41a3ea:	arpl   WORD PTR [ecx+0x0],ax
  41a3ed:	pop    ss
  41a3ee:	or     eax,0x2dd10041
  41a3f3:	inc    ecx
  41a3f4:	add    BYTE PTR [eax],bh
  41a3f6:	and    al,BYTE PTR [ecx+0x0]
  41a3f9:	mov    DWORD PTR [eax],0x5b004122
  41a3ff:	adc    eax,DWORD PTR [ecx+0x0]
  41a402:	sub    al,0xc
  41a404:	inc    ecx
  41a405:	add    BYTE PTR [ecx+0x6600406b],al
  41a40b:	jnp    0x41a44d
  41a40d:	add    BYTE PTR [ecx+0x30003d55],al
  41a413:	ins    DWORD PTR es:[edi],dx
  41a414:	cmp    eax,0x3d5d7200
  41a419:	add    BYTE PTR [edx+0x34],bh
  41a41c:	cmp    eax,0x3d352c00
  41a421:	add    BYTE PTR [ecx+0x45],ch
  41a424:	cmp    eax,0x3d45b500
  41a429:	add    ch,dh
  41a42b:	xor    eax,0x363e003d
  41a430:	cmp    eax,0x3e067b00
  41a435:	add    bh,ch
  41a437:	add    al,0x3e
  41a439:	add    ah,al
  41a43b:	mov    BYTE PTR [esi],bh
  41a43d:	add    BYTE PTR [edx-0x6f],bh
  41a440:	cmp    eax,0x3d8db700
  41a445:	add    BYTE PTR [eax],ah
  41a447:	(bad)  
  41a448:	cmp    eax,0xfd750000
  41a44d:	inc    BYTE PTR [ebx]
  41a44f:	jo     0x41a453
  41a451:	push   es
  41a452:	pop    es
  41a453:	dec    esp
  41a454:	push   es
  41a455:	or     cl,BYTE PTR [ebx]
  41a457:	popf   
  41a458:	fld    QWORD PTR [edi+eax*2]
  41a45b:	aam    0xd6
  41a45d:	push   es
  41a45e:	or     eax,0x4bdaad00
  41a463:	adc    cl,BYTE PTR [esi-0x75e9f033]
  41a469:	rcr    DWORD PTR [ebx],1
  41a46b:	sbb    al,BYTE PTR [edi-0x78e5e531]
  41a471:	add    BYTE PTR ds:0x19f3b81c,bl
  41a477:	and    BYTE PTR [edx+ecx*8-0x3543e0dd],bh
  41a47e:	and    ah,BYTE PTR [edx]
  41a480:	mov    esi,0xc2261fc5
  41a485:	shr    DWORD PTR [eax],1
  41a487:	sub    ch,al
  41a489:	shr    DWORD PTR [eax],0x27
  41a48c:	mov    ah,0xbf
  41a48e:	sub    eax,0x4b0bb02c
  41a493:	inc    edi
  41a494:	xor    cl,BYTE PTR fs:[ebx+0x47]
  41a498:	and    ch,BYTE PTR fs:[ecx]
  41a49b:	sub    eax,0x32331954
  41a4a0:	mov    ?,ebp
  41a4a2:	sub    al,0x34
  41a4a4:	jo     0x41a491
  41a4a6:	das    
  41a4a7:	ss push 0xfffffff1
  41a4aa:	cmp    edi,DWORD PTR [edx]
  41a4ac:	data16 repnz cmp bh,BYTE PTR [ecx]
  41a4b0:	push   esp
  41a4b1:	xor    cl,BYTE PTR [ebx+0x47]
  41a4b4:	in     al,0xcf
  41a4b6:	aaa    
  41a4b7:	rcr    BYTE PTR ds:[ebx],cl
  41a4ba:	inc    ebx
  41a4bb:	inc    edx
  41a4bc:	fisub  WORD PTR [edi]
  41a4be:	aas    
  41a4bf:	inc    esi
  41a4c0:	popf   
  41a4c1:	and    BYTE PTR [eax+edx*4+0x0],cl
  41a4c5:	sub    DWORD PTR [esi],eax
  41a4c7:	inc    ebx
  41a4c8:	add    BYTE PTR [ebp-0xa],ah
  41a4cb:	inc    ebx
  41a4cc:	add    BYTE PTR [ecx-0x22ffbc0c],ah
  41a4d2:	add    ah,dl
  41a4d4:	inc    esp
  41a4d5:	popf   
  41a4d6:	imul   esp,edx,0x44
  41a4d9:	popf   
  41a4da:	mov    al,ds:0x929d44d1
  41a4df:	into   
  41a4e0:	inc    esp
  41a4e1:	popf   
  41a4e2:	or     al,al
  41a4e4:	inc    esp
  41a4e5:	popf   
  41a4e6:	or     al,al
  41a4e8:	inc    esp
  41a4e9:	popf   
  41a4ea:	sbb    DWORD PTR [edi+0x44],0xffffff9d
  41a4ee:	sbb    DWORD PTR [edi+0x44],0xffffff9d
  41a4f2:	or     al,0xa0
  41a4f4:	inc    esp
  41a4f5:	popf   
  41a4f6:	outs   dx,BYTE PTR ds:[esi]
  41a4f7:	mov    al,ds:0x8fc69d44
  41a4fc:	inc    esp
  41a4fd:	popf   
  41a4fe:	push   es
  41a4ff:	xchg   ecx,eax
  41a500:	inc    esp
  41a501:	popf   
  41a502:	cmp    al,BYTE PTR [ecx+0x7d009d44]
  41a508:	inc    esp
  41a509:	popf   
  41a50a:	inc    edx
  41a50b:	jne    0x41a551
  41a50d:	popf   
  41a50e:	je     0x41a57d
  41a510:	inc    esp
  41a511:	popf   
  41a512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a513:	fs inc ebx
  41a515:	popf   
  41a516:	fcomp  DWORD PTR [ebx+eax*2-0x63]
  41a51a:	cli    
  41a51b:	push   ebp
  41a51c:	inc    ebx
  41a51d:	popf   
  41a51e:	add    DWORD PTR [ebx+0x43],ecx
  41a521:	popf   
  41a522:	addr16 inc ebx
  41a524:	inc    ebx
  41a525:	popf   
  41a526:	cmp    eax,DWORD PTR [bp+di+0x0]
  41a52a:	popf   
  41a52b:	sbb    DWORD PTR [edi+0x43],0xffffff9d
  41a52f:	sbb    DWORD PTR [edi+0x43],0xffffff9d
  41a533:	iret   
  41a534:	and    al,BYTE PTR [ebx-0x63]
  41a537:	dec    esp
  41a538:	sbb    al,0x43
  41a53a:	popf   
  41a53b:	mov    DWORD PTR [ebx],edx
  41a53d:	inc    ebx
  41a53e:	popf   
  41a53f:	ror    BYTE PTR [ebx],0x43
  41a542:	popf   
  41a543:	pop    es
  41a544:	add    eax,0x70ad9d43
  41a549:	inc    ebx
  41a54a:	popf   
  41a54b:	(bad)  
  41a54c:	jmp    DWORD PTR [edx-0x22]
  41a54f:	add    cl,bl
  41a551:	arpl   si,bx
  41a553:	add    dl,dh
  41a555:	jae    0x41a535
  41a557:	add    bl,ch
  41a559:	jae    0x41a539
  41a55b:	add    ch,al
  41a55d:	arpl   si,bx
  41a55f:	add    dh,bl
  41a561:	arpl   si,bx
  41a563:	add    dh,bl
  41a565:	jae    0x41a545
  41a567:	add    dh,bl
  41a569:	jae    0x41a549
  41a56b:	add    bh,BYTE PTR [edi+0x60]
  41a56e:	fiadd  WORD PTR [edx]
  41a570:	jg     0x41a5d2
  41a572:	fiadd  WORD PTR [edx]
  41a574:	adc    esi,DWORD PTR [ebx+0x5e]
  41a577:	add    bl,BYTE PTR [edi+0x73]
  41a57a:	pop    esi
  41a57b:	add    bh,BYTE PTR [edx+0x63]
  41a57e:	pop    esi
  41a57f:	add    cl,BYTE PTR [edi-0x59fda19d]
  41a585:	jae    0x41a5e5
  41a587:	add    dl,BYTE PTR [ebx+0x72]
  41a58a:	add    eax,0xbdec70
  41a58f:	lahf   
  41a590:	add    al,BYTE PTR [eax]
  41a592:	push   0x5a
  41a594:	idiv   ah
  41a596:	push   0x63
  41a598:	repnz cld 
  41a59a:	push   0x5b
  41a59c:	mov    esi,0x4c183afc
  41a5a1:	or     BYTE PTR [edi],dh
  41a5a3:	mov    ah,dl
  41a5a5:	push   esp
  41a5a6:	jb     0x41a55e
  41a5a8:	jnp    0x41a5ea
  41a5aa:	mov    esi,0x60e05427
  41a5af:	pop    ebx
  41a5b0:	mov    edx,0x87c51486
  41a5b5:	pop    edx
  41a5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b7:	daa    
  41a5b8:	push   ebp
  41a5b9:	call   0x8914792e
  41a5be:	sahf   
  41a5bf:	leave  
  41a5c0:	in     al,dx
  41a5c1:	or     al,0x65
  41a5c3:	mov    ds:0x84000005,al
  41a5c8:	das    
  41a5c9:	fimul  DWORD PTR [edi]
  41a5cb:	clc    
  41a5cc:	pop    ss
  41a5cd:	add    eax,DWORD PTR [eax]
  41a5cf:	je     0x41a5fe
  41a5d1:	push   ecx
  41a5d2:	adc    BYTE PTR [ecx-0x3],ch
  41a5d5:	xor    al,0x55
  41a5d7:	pop    eax
  41a5d8:	sti    
  41a5d9:	mov    cl,BYTE PTR [esi]
  41a5db:	cmp    eax,DWORD PTR [eax+eax*1]
  41a5de:	cmp    DWORD PTR [ecx],ecx
  41a5e0:	add    BYTE PTR [ecx+0x7],bh
  41a5e3:	pop    esi
  41a5e4:	cmc    
  41a5e5:	in     eax,0x4
  41a5e7:	dec    ebx
  41a5e8:	add    al,0x0
  41a5ea:	bts    DWORD PTR [edx+0x18],eax
  41a5ee:	add    edi,DWORD PTR [ebx+0x7c]
  41a5f1:	adc    DWORD PTR [eax+0x0],0xffbea73
  41a5f8:	jnp    0x41a63c
  41a5fa:	sbb    al,0x89
  41a5fc:	jns    0x41a639
  41a5fe:	sti    
  41a5ff:	push   DWORD PTR [ebx+0xe47b2fa]
  41a605:	jge    0x41a588
  41a607:	dec    esp
  41a608:	mov    ds:0x44b8fbea,eax
  41a60d:	inc    esi
  41a60e:	or     eax,DWORD PTR [eax]
  41a610:	jge    0x41a682
  41a612:	sub    edi,edi
  41a614:	repz test DWORD PTR [ebp-0x4084b7b],0x202f4fff
  41a61f:	mov    DWORD PTR [ecx-0x13ba7a3a],ecx
  41a625:	sub    eax,edx
  41a627:	jne    0x41a5f4
  41a629:	mov    al,0x41
  41a62b:	clc    
  41a62c:	mov    esp,0x35004065
  41a631:	aaa    
  41a632:	inc    ecx
  41a633:	push   edx
  41a634:	ja     0x41a68c
  41a636:	je     0x41a65e
  41a638:	adc    DWORD PTR [edx-0x8cc0138],eax
  41a63e:	dec    esp
  41a63f:	push   0xffffff9d
  41a641:	fld    DWORD PTR [edi-0xb807a7e]
  41a647:	cld    
  41a648:	int    0x74
  41a64a:	mov    ebp,0x3b793e7
  41a64f:	add    BYTE PTR [esi],dl
  41a651:	imul   edi,DWORD PTR [edi-0xb],0xfc66e8e8
  41a658:	add    BYTE PTR [esp+ebp*2-0x2],al
  41a65c:	call   DWORD PTR [edx+0xc]
  41a65f:	ror    BYTE PTR [eax-0x38761e1d],cl
  41a665:	pop    esp
  41a666:	inc    ecx
  41a667:	adc    bh,BYTE PTR [edi-0x207e22bc]
  41a66d:	pushf  
  41a66e:	pop    esp
  41a66f:	jecxz  0x41a66f
  41a671:	adc    eax,0xea0ccc9e
  41a676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a677:	push   ss
  41a678:	xchg   DWORD PTR [eax+0x41],ebp
  41a67b:	add    eax,0xc3dd63b5
  41a680:	out    0x9e,al
  41a682:	pop    esp
  41a683:	jecxz  0x41a683
  41a685:	adc    eax,0xfafd204e
  41a68a:	pop    es
  41a68b:	add    eax,0x5cd63b5
  41a690:	lods   eax,DWORD PTR ds:[esi]
  41a691:	aad    0xe7
  41a693:	lods   eax,DWORD PTR ds:[esi]
  41a694:	inc    ebp
  41a695:	test   DWORD PTR [edx+0x57],esp
  41a698:	nop
  41a699:	sahf   
  41a69a:	inc    esi
  41a69b:	or     BYTE PTR [ecx],al
  41a69d:	loop   0x41a67a
  41a69f:	ret    
  41a6a0:	xchg   BYTE PTR [eax+0x65],ah
  41a6a3:	mov    WORD PTR [edx+0xd],ss
  41a6a6:	bound  ebx,QWORD PTR [eax-0x6c]
  41a6a9:	es pop ds
  41a6ab:	or     al,0xbf
  41a6ad:	(bad)
  41a6b0:	(bad)  
  41a6b1:	pop    esp
  41a6b2:	cld    
  41a6b3:	ret    0x1886
  41a6b6:	xor    ebp,esi
  41a6b8:	cld    
  41a6b9:	call   0xc3a5:0x3d7203
  41a6c0:	mov    cs,WORD PTR [edx]
  41a6c2:	mov    esp,0x79405fc3
  41a6c7:	jl     0x41a72c
  41a6c9:	addr16 js 0x41a6ba
  41a6cc:	test   DWORD PTR [edx-0x14580528],ecx
  41a6d2:	xchg   DWORD PTR [ecx],esp
  41a6d4:	test   al,0x8c
  41a6d6:	pop    ds
  41a6d7:	ja     0x41a747
  41a6d9:	neg    BYTE PTR [ecx+0x7a]
  41a6dc:	lods   al,BYTE PTR ds:[esi]
  41a6dd:	or     edx,DWORD PTR [edx]
  41a6df:	(bad)  
  41a6e1:	and    cl,BYTE PTR [edx]
  41a6e3:	jl     0x41a750
  41a6e5:	jae    0x41a727
  41a6e7:	out    dx,al
  41a6e8:	dec    ebp
  41a6e9:	mov    bl,bh
  41a6eb:	jmp    0xf63d:0xedca806f
  41a6f2:	lahf   
  41a6f3:	inc    edx
  41a6f4:	jmp    0x185f:0x537b9d03
  41a6fb:	out    dx,al
  41a6fc:	and    eax,0x1e5b2f8c
  41a701:	test   BYTE PTR [ecx],0x7c
  41a704:	jnp    0x41a77d
  41a706:	add    dh,ch
  41a708:	or     eax,0x6f824f8c
  41a70d:	push   eax
  41a70e:	cmp    DWORD PTR [ebx+edx*4+0x7f],edi
  41a712:	and    ebx,DWORD PTR [eax+0x2b]
  41a715:	mov    WORD PTR [edi-0x52],cs
  41a718:	pop    edi
  41a719:	xor    BYTE PTR [esi-0x13],0xe5
  41a71d:	cmc    
  41a71e:	and    eax,0x8aef45
  41a723:	addr16 (bad) 
  41a725:	jg     0x41a72b
  41a727:	popf   
  41a728:	and    bh,0x6f
  41a72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72c:	ret    
  41a72d:	into   
  41a72e:	or     eax,0x3f6fc37c
  41a733:	adc    eax,0x17e9ffda
  41a738:	push   ecx
  41a739:	mov    BYTE PTR [edx-0x25],ah
  41a73c:	cli    
  41a73d:	and    ch,cl
  41a73f:	sahf   
  41a740:	jb     0x41a742
  41a742:	adc    ebx,DWORD PTR [edi-0x35f08bb1]
  41a748:	add    al,BYTE PTR [eax]
  41a74a:	stc    
  41a74b:	sahf   
  41a74c:	jbe    0x41a79f
  41a74e:	les    ebx,FWORD PTR [esi-0x516dffe]
  41a754:	inc    edi
  41a755:	cmp    ebp,ecx
  41a757:	sahf   
  41a758:	xor    al,BYTE PTR [eax]
  41a75a:	cmc    
  41a75b:	stos   DWORD PTR es:[edi],eax
  41a75c:	sub    DWORD PTR [eax],eax
  41a75e:	jmp    0xb3b5aa41
  41a763:	xchg   ebx,eax
  41a764:	add    al,BYTE PTR [eax]
  41a766:	mov    ecx,0xc339769e
  41a76b:	inc    edi
  41a76c:	in     al,0x83
  41a76e:	in     al,dx
  41a76f:	sahf   
  41a770:	add    bh,BYTE PTR [eax+0x2a3f3]
  41a776:	pusha  
  41a777:	adc    ch,BYTE PTR ds:0x28102efd
  41a77d:	std    
  41a77e:	jmp    0xdbbfaa21
  41a783:	adc    eax,0x10bec5
  41a788:	xchg   ecx,eax
  41a789:	test   DWORD PTR [edx-0x3120e5b],edi
  41a78f:	jno    0x41a7ab
  41a791:	push   ecx
  41a792:	std    
  41a793:	(bad)  
  41a794:	icebp  
  41a795:	test   BYTE PTR [edx-0x3121664],al
  41a79b:	add    bh,BYTE PTR [edx-0x3bbef5a8]
  41a7a1:	iret   
  41a7a2:	imul   ebp,esp,0x9486f3b5
  41a7a8:	pop    esi
  41a7a9:	out    dx,eax
  41a7aa:	cld    
  41a7ab:	into   
  41a7ac:	lds    edx,FWORD PTR [eax]
  41a7ae:	xchg   DWORD PTR [eax],eax
  41a7b0:	sub    DWORD PTR [ecx-0x5],eax
  41a7b3:	(bad)  
  41a7b4:	jmp    0x41a78f
  41a7b6:	or     BYTE PTR [ecx-0x4d2c7],cl
  41a7bc:	dec    ebx
  41a7bd:	js     0x41a740
  41a7bf:	push   esp
  41a7c0:	cmp    esi,edi
  41a7c2:	sti    
  41a7c3:	mov    eax,edx
  41a7c5:	inc    BYTE PTR [esi-0x237c7f83]
  41a7cb:	pop    es
  41a7cc:	std    
  41a7cd:	ins    BYTE PTR es:[edi],dx
  41a7ce:	sbb    eax,0x87f71bff
  41a7d3:	(bad)  
  41a7d4:	std    
  41a7d5:	pop    ecx
  41a7d6:	call   FWORD PTR [eax-0x1d]
  41a7d9:	call   0x10c45ee9
  41a7de:	daa    
  41a7df:	cli    
  41a7e0:	bound  ebp,QWORD PTR [ebp-0x43]
  41a7e3:	je     0x41a864
  41a7e5:	jns    0x41a7ab
  41a7e7:	mov    esi,DWORD PTR [ebx+0x59]
  41a7ea:	call   FWORD PTR [eax-0x8211100]
  41a7f0:	cmp    ebp,DWORD PTR [ebx+esi*2+0x29]
  41a7f4:	lea    ebx,[ebp+0x1]
  41a7f7:	push   DWORD PTR [bx]
  41a7fa:	jnp    0x41a7c7
  41a7fc:	shl    DWORD PTR [ebp+0x1],0xfb
  41a800:	adc    eax,0x3f9834
  41a805:	pop    edi
  41a807:	test   DWORD PTR [ebp-0x40920],ebx
  41a80d:	or     edx,0xea0e0771
  41a813:	in     eax,0xe0
  41a815:	add    BYTE PTR [eax],al
  41a817:	add    bh,al
  41a819:	xor    eax,esp
  41a81b:	std    
  41a81c:	inc    esp
  41a81e:	jmp    esi
  41a820:	or     ecx,DWORD PTR [edi+0x39]
  41a823:	adc    BYTE PTR [ecx-0x4d5bf],cl
  41a829:	popf   
  41a82a:	aam    0x7c
  41a82c:	xlat   BYTE PTR ds:[ebx]
  41a82d:	sub    dh,ah
  41a82f:	xor    DWORD PTR [edi-0xab427b9],edx
  41a835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a836:	pop    eax
  41a837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a838:	pop    edi
  41a839:	mov    ds:0x1ffff0b4,al
  41a83e:	push   cs
  41a83f:	mov    al,ds:0x2c6624fc
  41a844:	std    
  41a845:	mov    cl,BYTE PTR [edx+edi*2-0xf6b3e7e]
  41a84c:	cld    
  41a84d:	stos   BYTE PTR es:[edi],al
  41a84e:	push   esp
  41a84f:	dec    edx
  41a850:	adc    BYTE PTR [eax],al
  41a852:	and    BYTE PTR ds:0x26140204,bl
  41a858:	loopne 0x41a892
  41a85a:	fmul   st,st(5)
  41a85c:	outs   dx,BYTE PTR ds:[esi]
  41a85d:	add    DWORD PTR [esi+ebx*8],esp
  41a860:	fadd   QWORD PTR [edx-0x76e5328a]
  41a866:	loopne 0x41a8a5
  41a868:	mov    ebp,DWORD PTR [eax]
  41a86a:	pop    edi
  41a86b:	or     dh,dl
  41a86d:	into   
  41a86e:	xor    eax,0xf60b7f97
  41a873:	paddq  mm1,QWORD PTR [edx-0x197ab55f]
  41a87a:	cdq    
  41a87b:	lock mov eax,0xfb58ad71
  41a881:	cld    
  41a882:	push   ds
  41a883:	adc    cl,BYTE PTR [eax]
  41a885:	cmp    ebp,edx
  41a887:	xchg   esi,esi
  41a889:	mov    BYTE PTR [eax],ah
  41a88b:	int    0xf1
  41a88d:	cld    
  41a88e:	cli    
  41a88f:	push   edi
  41a890:	outs   dx,DWORD PTR ds:[esi]
  41a891:	fcomp  DWORD PTR [ebp+0x63f6206e]
  41a897:	fld    QWORD PTR [edx]
  41a899:	je     0x41a855
  41a89b:	in     al,0xb9
  41a89d:	inc    ebp
  41a89e:	mov    cl,0x60
  41a8a0:	mov    esp,0xe601bc7e
  41a8a5:	add    ebx,DWORD PTR [ebp-0x652457fe]
  41a8ab:	jg     0x41a873
  41a8ad:	add    al,0x22
  41a8af:	cmp    eax,0xba5f7cd3
  41a8b4:	cmp    al,BYTE PTR [ecx]
  41a8b6:	add    BYTE PTR [eax*4-0x155e0ce2],dl
  41a8bd:	in     eax,0xb9
  41a8bf:	sahf   
  41a8c0:	cli    
  41a8c1:	pop    edi
  41a8c2:	dec    eax
  41a8c3:	mov    ecx,esi
  41a8c5:	sub    al,0x0
  41a8c7:	mov    eax,ds:0x4802c56e
  41a8cc:	inc    ecx
  41a8cd:	std    
  41a8ce:	jle    0x41a932
  41a8d0:	les    edi,FWORD PTR [esi-0x5]
  41a8d3:	repz jecxz 0x41a85b
  41a8d6:	add    ebx,DWORD PTR [ebp+0x63e36a02]
  41a8dc:	jnp    0x41a909
  41a8de:	shl    BYTE PTR ds:0xb026f40,1
  41a8e4:	jg     0x41a8d4
  41a8e6:	add    ecx,DWORD PTR [edx-0x16]
  41a8e9:	out    0x7c,al
  41a8eb:	xlat   BYTE PTR ds:[ebx]
  41a8ec:	repnz pop edi
  41a8ee:	dec    eax
  41a8ef:	imul   edi,DWORD PTR [esi-0x5d],0x435025ff
  41a8f6:	jl     0x41a8d7
  41a8f8:	jmp    0x4862:0xaaece63
  41a8ff:	or     DWORD PTR [eax-0x26],edi
  41a902:	xchg   ch,dl
  41a904:	retf   
  41a905:	cdq    
  41a906:	add    DWORD PTR [ebp+edi*4+0x4fbc4af],esi
  41a90d:	test   al,0x86
  41a90f:	loop   0x41a8fa
  41a911:	popa   
  41a912:	out    dx,al
  41a913:	in     eax,dx
  41a914:	popf   
  41a915:	imul   esi,DWORD PTR [eax-0x2f],0x697302
  41a91c:	adc    al,0xed
  41a91e:	push   DWORD PTR [ecx-0x728f718b]
  41a924:	sbb    ebp,DWORD PTR [ebp-0x193319c1]
  41a92a:	call   DWORD PTR [ebx+edi*2-0x19]
  41a92e:	jb     0x41a8fd
  41a930:	cmp    BYTE PTR [esp+edx*4],bh
  41a933:	into   
  41a934:	jmp    0x927c:0xacc6fd29
  41a93b:	and    eax,0x62fce6ac
  41a940:	fs loope 0x41a980
  41a943:	inc    ebp
  41a944:	cdq    
  41a945:	add    cl,BYTE PTR [ecx-0x407b72c4]
  41a94b:	adc    al,0xc8
  41a94d:	fld    TBYTE PTR [eax]
  41a94f:	(bad)
  41a954:	in     eax,0xe7
  41a956:	cld    
  41a957:	xchg   BYTE PTR [eax-0x1f208b16],bh
  41a95d:	(bad)  
  41a95e:	cmp    DWORD PTR [ebp+esi*8-0x19],ebp
  41a962:	cld    
  41a963:	outs   dx,BYTE PTR ds:[esi]
  41a964:	retf   0x810e
  41a967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a968:	aad    0xe7
  41a96a:	cld    
  41a96b:	pop    esi
  41a96c:	sahf   
  41a96d:	outs   dx,BYTE PTR ds:[esi]
  41a96e:	packsswb mm4,mm4
  41a971:	jmp    0xe80c0dac
  41a976:	cld    
  41a977:	inc    esi
  41a978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a979:	add    BYTE PTR [ebp+0x2],al
  41a97c:	mov    dl,0x8e
  41a97e:	jno    0x41a90d
  41a980:	add    BYTE PTR [esi-0x2105f394],dl
  41a986:	das    
  41a987:	inc    ebx
  41a988:	sbb    eax,0xa437458d
  41a98d:	inc    esi
  41a98e:	jne    0x41a9c6
  41a990:	add    ch,BYTE PTR [ebx+0x71ebb5f7]
  41a996:	jl     0x41a9ef
  41a998:	add    BYTE PTR [ebx-0x55f0040d],ah
  41a99e:	cli    
  41a99f:	pop    es
  41a9a0:	cmp    ecx,DWORD PTR [ecx]
  41a9a2:	icebp  
  41a9a3:	or     eax,DWORD PTR [eax+esi*4+0x76fffffe]
  41a9aa:	ins    DWORD PTR es:[edi],dx
  41a9ab:	push   edx
  41a9ac:	cld    
  41a9ad:	jg     0x41aa00
  41a9af:	or     al,0x72
  41a9b1:	in     eax,0xcb
  41a9b3:	mov    edx,0xb04c400
  41a9b8:	mov    dh,0xb6
  41a9ba:	adc    eax,0x80b3f441
  41a9bf:	scas   al,BYTE PTR es:[edi]
  41a9c0:	add    BYTE PTR [esp+eax*1-0xd5676be],al
  41a9c7:	aaa    
  41a9c8:	push   ebp
  41a9c9:	nop
  41a9ca:	outs   dx,BYTE PTR ds:[esi]
  41a9cb:	out    0xe9,eax
  41a9cd:	fadd   DWORD PTR [ebx]
  41a9cf:	add    BYTE PTR [eax],al
  41a9d1:	dec    ebp
  41a9d2:	and    DWORD PTR [eax],0xbf323ff
  41a9d8:	test   ah,bh
  41a9da:	add    eax,DWORD PTR [eax]
  41a9dc:	add    BYTE PTR [edi+0x51],bl
  41a9df:	nop
  41a9e0:	bswap  edx
  41a9e2:	cmp    ah,0xff
  41a9e5:	add    BYTE PTR [edi+eax*8+0x5e],al
  41a9e9:	add    DWORD PTR [ecx],0x44
  41a9ec:	sti    
  41a9ed:	jmp    ebx
  41a9ef:	add    esi,DWORD PTR [eax+ebp*1-0x71]
  41a9f3:	dec    edi
  41a9f4:	nop
  41a9f5:	jbe    0x41a9eb
  41a9f7:	bnd jno 0x41a9de
  41a9fa:	scas   eax,DWORD PTR es:[edi]
  41a9fb:	inc    eax
  41a9fc:	cld    
  41a9fd:	(bad)  
  41a9fe:	jmp    0x48d73396
  41aa03:	repz sti 
  41aa05:	inc    ebx
  41aa07:	mov    al,0x3c
  41aa09:	inc    ebx
  41aa0b:	repnz in al,0xf0
  41aa0e:	pop    ss
  41aa0f:	add    al,0x0
  41aa11:	mov    ebx,DWORD PTR [ebp-0x227d135a]
  41aa17:	mov    gs,WORD PTR [eax]
  41aa19:	jmp    0x43f01ed6
  41aa1e:	loop   0x41aa08
  41aa20:	in     al,dx
  41aa21:	mov    BYTE PTR [eax+0x49],ah
  41aa24:	add    al,0xc5
  41aa26:	xchg   esi,eax
  41aa27:	or     DWORD PTR [ebx+0x1e],esi
  41aa2a:	pop    ss
  41aa2b:	outs   dx,DWORD PTR ds:[esi]
  41aa2c:	pop    eax
  41aa2d:	std    
  41aa2e:	ret    0x78c8
  41aa31:	rol    DWORD PTR [esi+0x28082b98],0xe9
  41aa38:	cmp    esp,0x8a18259c
  41aa3e:	adc    BYTE PTR [edi],cl
  41aa40:	in     eax,dx
  41aa41:	cld    
  41aa42:	call   0x3ee3:0xeff38f1
  41aa49:	xchg   DWORD PTR [eax],eax
  41aa4b:	lock popf 
  41aa4d:	sub    BYTE PTR [ebx-0x6f],dl
  41aa50:	or     ecx,DWORD PTR [ebx-0x16f0881]
  41aa56:	jb     0x41aa15
  41aa58:	pop    esp
  41aa59:	scas   eax,DWORD PTR es:[edi]
  41aa5a:	aas    
  41aa5b:	push   0xffffff80
  41aa5d:	in     al,dx
  41aa5e:	(bad)  
  41aa5f:	out    dx,al
  41aa60:	repnz cmp DWORD PTR [edx-0x3128f23],0x38faee9f
  41aa6b:	lock in eax,dx
  41aa6d:	jno    0x41aa76
  41aa6f:	sbb    eax,0xa172fa23
  41aa74:	fwait
  41aa75:	jnp    0x41aac9
  41aa77:	xor    DWORD PTR [edi+ebp*2-0x8],esp
  41aa7b:	outs   dx,BYTE PTR ds:[esi]
  41aa7c:	xor    bh,BYTE PTR [ebx+0x7a]
  41aa7f:	xchg   ecx,eax
  41aa80:	add    bh,BYTE PTR [edi]
  41aa82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa83:	nop
  41aa84:	mov    esp,0x950d4b2b
  41aa89:	dec    edx
  41aa8a:	mov    edx,esp
  41aa8c:	add    edx,edx
  41aa8e:	rol    edi,0xda
  41aa91:	jmp    0xbaa74799
  41aa96:	xor    bl,ch
  41aa98:	sub    BYTE PTR [edi+esi*8+0x3268599],bl
  41aa9f:	fild   QWORD PTR [edx]
  41aaa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa2:	rcl    DWORD PTR [eax+0x3e],cl
  41aaa5:	mov    al,0x40
  41aaa7:	icebp  
  41aaa8:	ins    DWORD PTR es:[edi],dx
  41aaa9:	retf   
  41aaaa:	sub    ah,al
  41aaac:	imul   BYTE PTR [ecx+0x74]
  41aaaf:	add    dl,al
  41aab1:	out    0xe6,al
  41aab3:	(bad)  
  41aab4:	lock stc 
  41aab6:	sub    esp,DWORD PTR es:[esi-0xe]
  41aaba:	push   edx
  41aabb:	and    ah,BYTE PTR [ebp+esi*1-0x4d]
  41aabf:	ja     0x41aa47
  41aac1:	sub    esp,DWORD PTR [esi-0x3125748f]
  41aac7:	sub    bl,BYTE PTR [eax-0xa]
  41aaca:	imul   ebx,DWORD PTR [eax-0x76],0x48fee6e6
  41aad1:	sti    
  41aad2:	es sub esp,esi
  41aad5:	repnz sbb al,BYTE PTR [esi]
  41aad8:	mov    ah,0xbd
  41aada:	sbb    bl,dh
  41aadc:	jne    0x41aae2
  41aade:	das    
  41aadf:	sub    ebx,DWORD PTR [eax-0xa]
  41aae2:	imul   esi,DWORD PTR [eax],0x7ce6e65a
  41aae8:	(bad)  
  41aaea:	popa   
  41aaeb:	jo     0x41ab36
  41aaed:	jp     0x41aaaa
  41aaef:	jg     0x41aa7e
  41aaf1:	ret    0x53b6
  41aaf4:	int    0xe5
  41aaf6:	fwait
  41aaf7:	and    esi,DWORD PTR [eax]
  41aaf9:	out    0x4d,al
  41aafb:	adc    BYTE PTR [edi],0x1b
  41aafe:	inc    esi
  41aaff:	out    dx,al
  41ab00:	and    DWORD PTR [ecx+edx*8+0x1],edx
  41ab04:	ins    DWORD PTR es:[edi],dx
  41ab05:	dec    ebp
  41ab06:	add    BYTE PTR [edx+0x53],ah
  41ab09:	jge    0x41ab85
  41ab0b:	push   ecx
  41ab0c:	mov    DWORD PTR [eax-0x60],ebp
  41ab0f:	jo     0x41ab26
  41ab11:	push   ds
  41ab12:	std    
  41ab13:	push   ds
  41ab14:	add    BYTE PTR [ebx],cl
  41ab16:	ficom  WORD PTR [edi]
  41ab18:	daa    
  41ab19:	add    esp,edi
  41ab1b:	xor    BYTE PTR [eax],ah
  41ab1d:	addr16 int 0x36
  41ab20:	mov    ah,0x1a
  41ab22:	jb     0x41ab2d
  41ab24:	rcr    BYTE PTR [ebp-0x26],0x72
  41ab28:	out    dx,eax
  41ab29:	push   edi
  41ab2a:	inc    eax
  41ab2b:	mov    al,ds:0x7eda5560
  41ab30:	loop   0x41aac9
  41ab32:	out    0xfc,al
  41ab34:	fidivr WORD PTR [eax-0x6116137f]
  41ab3a:	add    bh,BYTE PTR [edi-0x2e]
  41ab3d:	xchg   esp,eax
  41ab3e:	out    0xfc,al
  41ab40:	(bad)  
  41ab41:	and    eax,0x8addb807
  41ab46:	out    0xfc,al
  41ab48:	bnd data16 jno 0x41ab9e
  41ab4c:	fimul  WORD PTR [eax]
  41ab4e:	int3   
  41ab4f:	(bad)  
  41ab50:	call   0x3b10f3
  41ab55:	mov    ah,dh
  41ab57:	cld    
  41ab58:	pop    ss
  41ab59:	jno    0x41ab85
  41ab5b:	xlat   BYTE PTR ds:[ebx]
  41ab5c:	fisub  WORD PTR [ebx]
  41ab5e:	mov    ebx,0x7b9ee8ff
  41ab63:	jp     0x41abe2
  41ab65:	loopne 0x41ab9a
  41ab67:	fnstenv [eax+0x73cee3]
  41ab6d:	les    eax,FWORD PTR [eax-0x4]
  41ab70:	and    BYTE PTR [edx],dl
  41ab72:	and    eax,0x71485efd
  41ab77:	xor    BYTE PTR [edx],dl
  41ab79:	add    dl,bl
  41ab7b:	mov    ?,WORD PTR [eax-0x50]
  41ab7e:	cmp    DWORD PTR [eax-0x1c],esi
  41ab81:	add    BYTE PTR [edi-0x6e006bdb],ch
  41ab87:	ds sti 
  41ab89:	dec    ebx
  41ab8b:	gs xchg edx,eax
  41ab8d:	inc    esp
  41ab8e:	mov    ebx,0xbde8fbd7
  41ab93:	popa   
  41ab94:	add    BYTE PTR [eax],al
  41ab96:	cmp    DWORD PTR [esi-0x1947af5],0x169fffff
  41aba0:	xor    eax,0xbb6a7c7d
  41aba5:	mov    ebx,DWORD PTR [ecx+0x79]
  41aba8:	out    0xbe,eax
  41abaa:	aas    
  41abab:	and    eax,0x3a692b94
  41abb0:	sti    
  41abb1:	(bad)  
  41abb2:	mov    ebx,0xa577bd19
  41abb7:	push   0xd5cb548a
  41abbc:	sti    
  41abbd:	cmp    BYTE PTR [ebx+ebp*2+0x3d198313],bh
  41abc4:	sti    
  41abc5:	call   FWORD PTR [ebx+0x1]
  41abc8:	je     0x41ac3d
  41abca:	(bad)  
  41abcb:	jl     0x41ac1e
  41abcd:	(bad)  
  41abce:	cmp    edx,edi
  41abd0:	xchg   DWORD PTR [ebp+0x38],ecx
  41abd3:	sbb    BYTE PTR ds:0x855b9001,bh
  41abd9:	jge    0x41abe3
  41abdb:	sbb    DWORD PTR [ecx-0x28],ebx
  41abde:	add    BYTE PTR [ecx+0x1c7d3733],dl
  41abe4:	outs   dx,DWORD PTR ds:[esi]
  41abe5:	pop    eax
  41abe6:	sbb    BYTE PTR [ebx-0x29],0x9
  41abea:	jne    0x41ac47
  41abec:	sbb    edi,DWORD PTR [ecx-0x8]
  41abef:	inc    edi
  41abf0:	or     al,BYTE PTR [eax+0x216d4e3f]
  41abf6:	test   BYTE PTR [edx],0xe4
  41abf9:	sbb    al,0x75
  41abfb:	popf   
  41abfc:	in     al,dx
  41abfd:	jg     0x41abb9
  41abff:	fnsave [esp+ebp*8]
  41ac02:	cld    
  41ac03:	pushf  
  41ac04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac05:	push   cs
  41ac06:	sbb    DWORD PTR [eax-0x66],0xd812fceb
  41ac0d:	je     0x41ac16
  41ac0f:	push   ds
  41ac10:	push   edi
  41ac11:	inc    ebp
  41ac12:	std    
  41ac13:	add    bl,BYTE PTR ds:0x9ca172ff
  41ac19:	jns    0x41ac95
  41ac1b:	icebp  
  41ac1c:	mov    edx,0x5716c44d
  41ac21:	xor    eax,0xd9fce2fd
  41ac26:	rcr    cl,cl
  41ac28:	in     al,0xe8
  41ac2a:	xor    dh,dh
  41ac2c:	add    BYTE PTR [edx],dl
  41ac2e:	xor    esi,esp
  41ac30:	test   al,0xeb
  41ac32:	inc    esp
  41ac33:	xchg   BYTE PTR [edi+ebp*2+0xae11c58],bh
  41ac3a:	cld    
  41ac3b:	mov    dl,0xcc
  41ac3d:	outs   dx,DWORD PTR ds:[esi]
  41ac3e:	push   eax
  41ac3f:	push   ds
  41ac40:	aaa    
  41ac41:	in     al,0xff
  41ac43:	add    BYTE PTR [esi],ch
  41ac45:	in     eax,dx
  41ac46:	jge    0x41abd2
  41ac48:	shl    DWORD PTR [eax+ebp*8+0x6cc692fc],1
  41ac4f:	test   al,0xde
  41ac51:	fstp   DWORD PTR [edx-0xc]
  41ac54:	in     eax,0x56
  41ac56:	int    0x73
  41ac58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac59:	loopne 0x41ac23
  41ac5b:	jae    0x41abf7
  41ac5d:	pusha  
  41ac5e:	(bad)
  41ac61:	fld    DWORD PTR [eax]
  41ac63:	add    BYTE PTR [esi],dl
  41ac65:	fadd   QWORD PTR cs:[edx-0x7edf129c]
  41ac6c:	rol    ch,1
  41ac6e:	add    ecx,DWORD PTR ds:0x4511b
  41ac74:	popf   
  41ac75:	add    dl,BYTE PTR [edx]
  41ac77:	cmp    DWORD PTR [ebp+0x1a13b377],esp
  41ac7d:	clc    
  41ac7e:	popa   
  41ac7f:	cmp    DWORD PTR ds:0x1bfb9c17,esp
  41ac85:	cmp    bl,ch
  41ac87:	fcomp  QWORD PTR [edx+eax*1]
  41ac8a:	out    0x3,eax
  41ac8c:	sbb    al,0xba
  41ac8e:	xor    eax,0xb37787df
  41ac93:	bswap  edx
  41ac95:	xor    eax,0x7fbb7007
  41ac9a:	sbb    al,0x0
  41ac9c:	jno    0x41acbe
  41ac9e:	add    BYTE PTR fs:[esi],ch
  41aca1:	jmp    0x8172:0x51e1eb0d
  41aca8:	add    BYTE PTR [esi+0x1deafde3],cl
  41acae:	ret    0x53de
  41acb1:	adc    al,0x3d
  41acb3:	xlat   BYTE PTR ds:[ebx]
  41acb4:	xchg   BYTE PTR [edx],al
  41acb6:	cli    
  41acb7:	ss jmp 0x41ac49
  41acba:	xor    dh,ch
  41acbc:	inc    ebx
  41acbd:	popf   
  41acbe:	jg     0x41ac6a
  41acc0:	div    DWORD PTR [ebx+0x6d]
  41acc3:	jg     0x41ad2e
  41acc5:	fwait
  41acc6:	jns    0x41ac4b
  41acc8:	arpl   WORD PTR [eax+0x277ebde2],bx
  41acce:	pop    ss
  41accf:	mov    dh,0xea
  41acd1:	mov    edx,esp
  41acd3:	shr    DWORD PTR [edi+0x35],cl
  41acd6:	inc    esi
  41acd7:	out    0x86,eax
  41acd9:	aaa    
  41acda:	arpl   WORD PTR [esi+0x1b0371ea],bx
  41ace0:	add    BYTE PTR [edx+eax*8+0x4815fb81],ch
  41ace7:	dec    edi
  41ace8:	mov    WORD PTR [ebp+0x1deb97c4],es
  41acee:	loope  0x41acef
  41acf0:	jmp    0xf963:0xa93106b5
  41acf7:	mov    BYTE PTR [esi+eiz*1-0x4c86acd5],bh
  41acfe:	dec    esp
  41acff:	adc    BYTE PTR [eax-0x6f],ah
  41ad02:	mov    edx,DWORD PTR [edx+0x6d]
  41ad05:	xor    DWORD PTR ds:0x6717090,0xffffffe9
  41ad0c:	jmp    0x5496:0x57e07000
  41ad13:	cmp    eax,edi
  41ad15:	sub    ebp,DWORD PTR [esi-0x2d8dacfe]
  41ad1b:	push   eax
  41ad1c:	push   ecx
  41ad1d:	mov    bh,0x73
  41ad1f:	push   esp
  41ad20:	or     BYTE PTR [esi-0x4880b09],bh
  41ad26:	pop    esi
  41ad27:	add    al,BYTE PTR [edi+0x3d61c2ac]
  41ad2d:	jmp    0xbdb57c85
  41ad32:	dec    eax
  41ad33:	inc    DWORD PTR [ebx+0x292e3212]
  41ad39:	fidivr WORD PTR [eax]
  41ad3b:	mov    dh,0x83
  41ad3d:	ret    0xf72d
  41ad40:	mov    ebx,esi
  41ad42:	sub    bh,BYTE PTR [edx-0x605bf68d]
  41ad48:	add    ebx,edi
  41ad4a:	xchg   ebp,eax
  41ad4b:	lahf   
  41ad4c:	fcom   DWORD PTR [edx]
  41ad4e:	pop    eax
  41ad4f:	push   esp
  41ad50:	push   es
  41ad51:	sub    edi,DWORD PTR [ecx+0x66341606]
  41ad57:	popa   
  41ad58:	cmp    ch,cl
  41ad5a:	or     cl,BYTE PTR ds:0x48a6733f
  41ad60:	test   BYTE PTR [edx-0x5fcf4706],dh
  41ad66:	loop   0x41ad30
  41ad68:	jae    0x41ad6a
  41ad6a:	pop    edi
  41ad6b:	pop    esi
  41ad6c:	inc    edx
  41ad6d:	cld    
  41ad6e:	rcl    DWORD PTR [edx],0xfd
  41ad71:	jg     0x41ad73
  41ad73:	adc    ch,BYTE PTR [eax]
  41ad75:	jno    0x41ad2d
  41ad77:	prefetcht0 BYTE PTR [eax]
  41ad7a:	je     0x41adc6
  41ad7c:	test   DWORD PTR [ebp-0x1],esi
  41ad7f:	call   0xfd04:0x488da771
  41ad86:	mov    cl,0x9a
  41ad88:	pop    edi
  41ad89:	ret    
  41ad8a:	call   0x3cc6be
  41ad8f:	jns    0x41ad57
  41ad91:	jno    0x41ad9c
  41ad93:	sub    ch,dl
  41ad95:	adc    DWORD PTR [eax-0x1a],edi
  41ad98:	inc    esp
  41ad99:	add    bl,ch
  41ad9b:	push   es
  41ad9c:	inc    ch
  41ad9e:	mov    eax,DWORD PTR [ecx-0x27]
  41ada1:	test   DWORD PTR [ecx],eax
  41ada3:	jg     0x41ad69
  41ada5:	out    0x2,eax
  41ada7:	mov    esp,0xc88d5b5a
  41adad:	add    al,0x0
  41adaf:	sub    DWORD PTR [esi-0x17],ebx
  41adb2:	and    DWORD PTR [eax+0x1e574f2a],0x29
  41adb9:	pop    ebx
  41adba:	push   edi
  41adbb:	xchg   edi,eax
  41adbc:	iret   
  41adbd:	mov    DWORD PTR [ebp-0x8],eax
  41adc0:	xor    eax,0x30a9ff50
  41adc5:	push   ss
  41adc6:	inc    eax
  41adc7:	mov    ah,0x15
  41adc9:	rol    BYTE PTR [eax+0x7],0xa0
  41adcd:	or     BYTE PTR [ecx+0x4585ceb9],cl
  41add3:	dec    eax
  41add4:	pop    ebp
  41add5:	inc    edx
  41add6:	cld    
  41add7:	add    cl,ah
  41add9:	and    ah,al
  41addb:	push   eax
  41addc:	mov    bh,0x35
  41adde:	sti    
  41addf:	jne    0x41ae4d
  41ade1:	pop    ebp
  41ade2:	jp     0x41ada8
  41ade4:	popf   
  41ade5:	js     0x41adf4
  41ade7:	pusha  
  41ade8:	mov    BYTE PTR [ecx],ch
  41adea:	add    al,0x83
  41adec:	pop    ebp
  41aded:	(bad)  
  41adef:	xor    DWORD PTR [ebp+0x73],ebx
  41adf2:	mov    dl,0xff
  41adf4:	dec    edx
  41adf5:	jmp    0x97e:0x81eb105a
  41adfc:	cmp    ch,BYTE PTR [ecx-0x18]
  41adff:	jb     0x41ae4a
  41ae01:	push   ebp
  41ae02:	fdiv   DWORD PTR ds:0x22fd3e48
  41ae09:	arpl   di,di
  41ae0b:	cmp    dh,bl
  41ae0d:	popf   
  41ae0e:	loopne 0x41adf8
  41ae10:	mov    ds:0x1df03e54,eax
  41ae15:	rcl    BYTE PTR [edi],cl
  41ae17:	jae    0x41adaf
  41ae19:	xor    BYTE PTR [esi],dh
  41ae1b:	hlt    
  41ae1c:	cli    
  41ae1d:	scas   al,BYTE PTR es:[edi]
  41ae1e:	lock ss push eax
  41ae21:	cmc    
  41ae22:	outs   dx,DWORD PTR ds:[esi]
  41ae23:	jmp    0x41ae3b
  41ae25:	scas   eax,DWORD PTR es:[edi]
  41ae26:	in     al,0x88
  41ae28:	push   eax
  41ae29:	cmc    
  41ae2a:	jne    0x41aea7
  41ae2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2d:	jmp    0x72c3:0xc49c4475
  41ae34:	mov    eax,ds:0x98e8c09c
  41ae39:	add    DWORD PTR [edi],eax
  41ae3b:	pop    es
  41ae3c:	add    BYTE PTR [edx-0x66ba8518],bh
  41ae42:	and    al,0xc1
  41ae44:	jb     0x41adda
  41ae46:	mov    eax,0xe25ee82d
  41ae4b:	in     eax,0xfc
  41ae4d:	xchg   BYTE PTR [edx+0x298972e4],cl
  41ae53:	in     eax,0x72
  41ae55:	(bad)  
  41ae56:	stc    
  41ae57:	fld    TBYTE PTR [edi-0x6c]
  41ae5a:	mov    al,0xe4
  41ae5c:	cld    
  41ae5d:	lock add ah,BYTE PTR [ebx+0x7206d87b]
  41ae64:	cmp    DWORD PTR [ecx-0x21],esi
  41ae67:	sbb    ebp,esp
  41ae69:	pop    ss
  41ae6a:	inc    esi
  41ae6b:	fild   WORD PTR [ebp*8+0x51fd20ea]
  41ae72:	fbstp  TBYTE PTR [ecx+0x3e]
  41ae75:	mov    eax,ds:0x1416e6c8
  41ae7a:	dec    eax
  41ae7b:	jecxz  0x41aef8
  41ae7d:	xchg   esi,eax
  41ae7e:	pop    es
  41ae7f:	jb     0x41aec2
  41ae81:	sub    DWORD PTR [edx+0x70],eax
  41ae84:	ds xchg ebp,eax
  41ae86:	push   0x68414162
  41ae8b:	pusha  
  41ae8c:	ds test eax,0x1dd3ab8b
  41ae92:	jmp    0xbb:0x4a9b6fe9
  41ae99:	adc    eax,0xa4dadd40
  41ae9e:	enter  0xf5ac,0x0
  41aea2:	pushf  
  41aea3:	jmp    0x41ae87
  41aea5:	mov    ebp,0xb3e81060
  41aeaa:	jecxz  0x41aeeb
  41aeac:	mov    dl,0xbc
  41aeae:	fadd   QWORD PTR ds:0xee2450e7
  41aeb4:	imul   ebx,eax,0xe69e389a
  41aeba:	dec    edi
  41aebb:	or     bl,BYTE PTR [ecx+esi*2-0x53]
  41aebf:	adc    ah,dh
  41aec1:	fcmovnb st,st(0)
  41aec3:	(bad)  
  41aec5:	out    0x1e,al
  41aec7:	ret    0x6d5a
  41aeca:	adc    al,0x45
  41aecc:	sar    DWORD PTR [edx-0x19],cl
  41aecf:	fisubr DWORD PTR [edi+edi*8+0x4071de93]
  41aed6:	xchg   ecx,eax
  41aed7:	mov    edi,edi
  41aed9:	loopne 0x41aeb9
  41aedb:	xchg   dh,al
  41aedd:	xor    al,0x88
  41aedf:	inc    esi
  41aee0:	cmp    DWORD PTR [ebp*2-0x4996fcae],ebp
  41aee7:	das    
  41aee8:	jae    0x41ae86
  41aeea:	push   ds
  41aeeb:	push   ss
  41aeec:	sub    eax,0xc0139f15
  41aef1:	ins    BYTE PTR es:[edi],dx
  41aef2:	pop    esi
  41aef3:	push   edx
  41aef4:	cmp    eax,0xfcddb669
  41aef9:	std    
  41aefa:	jno    0x41af2e
  41aefc:	and    DWORD PTR [ecx-0x520b19bd],0x5988df3b
  41af06:	add    BYTE PTR ds:0xc10373d8,bl
  41af0c:	add    al,BYTE PTR [eax]
  41af0e:	stc    
  41af0f:	sahf   
  41af10:	push   0x349ed300
  41af15:	std    
  41af16:	aam    0x3e
  41af18:	repz aas 
  41af1a:	jmp    0xd9b44d3c
  41af1f:	push   0x9e24e76a
  41af24:	add    al,BYTE PTR [ecx-0x1919fccf]
  41af2a:	stos   DWORD PTR es:[edi],eax
  41af2b:	sti    
  41af2c:	fimul  WORD PTR [eax+0x5cea6811]
  41af32:	icebp  
  41af33:	mov    ebx,0xce74fcde
  41af38:	in     eax,0x54
  41af3a:	loope  0x41aef7
  41af3c:	fdivp  st(4),st
  41af3e:	je     0x41af0a
  41af40:	in     eax,0x4c
  41af42:	icebp  
  41af43:	mov    ecx,0x60a688de
  41af48:	cmp    al,0xc7
  41af4a:	stos   DWORD PTR es:[edi],eax
  41af4b:	popf   
  41af4c:	add    dl,BYTE PTR [esi+0x62]
  41af4f:	xchg   ecx,eax
  41af50:	pop    ebp
  41af51:	add    BYTE PTR ds:[eax-0xbba0293],bl
  41af58:	and    al,0x2b
  41af5a:	jne    0x41afd1
  41af5c:	pop    ds
  41af5d:	push   ebx
  41af5e:	push   DWORD PTR [eax+0x3b560c22]
  41af64:	or     eax,0x6b4139c
  41af69:	add    eax,0x8a078100
  41af6f:	add    al,0x6a
  41af71:	pop    ebp
  41af72:	mov    ebp,0x20257074
  41af77:	je     0x41afdd
  41af79:	and    eax,0x25307205
  41af7e:	or     DWORD PTR [esi+0x3c],esi
  41af81:	and    eax,0x2540743e
  41af86:	sub    esi,DWORD PTR [ebp+0x40]
  41af89:	xchg   ecx,eax
  41af8a:	std    
  41af8b:	jmp    0x2c6:0x5ec01336
  41af92:	add    BYTE PTR [ebp-0x71],dl
  41af95:	mov    edx,0x11e4ec7f
  41af9a:	lds    edx,FWORD PTR [edi+0x7]
  41af9d:	out    0x85,al
  41af9f:	dec    ebp
  41afa0:	mov    al,0x5e
  41afa2:	dec    edx
  41afa3:	(bad)  
  41afa4:	ins    DWORD PTR es:[edi],dx
  41afa5:	lock mov DWORD PTR gs:[ecx],edi
  41afa9:	jmp    0xd63dfce3
  41afae:	xor    BYTE PTR [esi],0xc5
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	push   esi
  41afb4:	scas   eax,DWORD PTR es:[edi]
  41afb5:	add    BYTE PTR [edi],ch
  41afb7:	leave  
  41afb8:	fst    QWORD PTR [ebx]
  41afba:	hlt    
  41afbb:	je     0x41af77
  41afbd:	cmp    BYTE PTR [eax],0x1f
  41afc0:	or     ch,BYTE PTR [eax+ecx*1-0x1]
  41afc4:	imul   edx,edx,0xb50de5
  41afca:	add    BYTE PTR [ebp-0x75fd0063],cl
  41afd0:	add    BYTE PTR [ebx+0x180d280d],ah
  41afd6:	ja     0x41afd8
  41afd8:	add    BYTE PTR [ebp-0x7d0bc1b0],bl
  41afde:	das    
  41afdf:	lock sbb BYTE PTR [ebp-0x43],0x7d
  41afe4:	icebp  
  41afe5:	popf   
  41afe6:	jmp    0xd23238eb
  41afeb:	pop    ss
  41afec:	cmc    
  41afed:	sbb    eax,0x29ffe5f7
  41aff2:	es add edi,edi
  41aff5:	into   
  41aff6:	call   0xd97a:0xeca2fd7f
  41affd:	popf   
  41affe:	jmp    0x9cb73003
  41b003:	repz or BYTE PTR [edx+ebp*8+0x0],0x0
  41b009:	mov    ch,0x69
  41b00b:	ins    BYTE PTR es:[edi],dx
  41b00c:	inc    eax
  41b00d:	popf   
  41b00e:	mov    edi,0x417a3ffa
  41b013:	daa    
  41b014:	std    
  41b015:	adc    al,BYTE PTR [ebp+0x7d]
  41b018:	mov    edi,0xffa8659a
  41b01d:	add    ch,dl
  41b01f:	mov    edx,0xd9e9fb42
  41b024:	mov    cl,0x9d
  41b026:	jmp    0x9ce51a2b
  41b02b:	daa    
  41b02c:	cmc    
  41b02d:	imul   ebx,esp,0x58
  41b030:	adc    BYTE PTR [edx-0x57],0x0
  41b034:	call   0xe4466539
  41b039:	cld    
  41b03a:	and    DWORD PTR [edx],ebp
  41b03c:	ins    DWORD PTR es:[edi],dx
  41b03d:	pop    es
  41b03e:	fld    TBYTE PTR [esi+0x35c5fee2]
  41b044:	add    DWORD PTR [eax],eax
  41b046:	popf   
  41b047:	add    ch,BYTE PTR [ebp-0x11fd57b7]
  41b04d:	cdq    
  41b04e:	pop    edi
  41b04f:	frstpm(287 only) 
  41b051:	cdq    
  41b052:	push   edx
  41b053:	push   0x56
  41b055:	inc    esp
  41b056:	popf   
  41b057:	pop    ss
  41b058:	mov    esi,0xf2dbb05a
  41b05d:	mov    BYTE PTR [edx],al
  41b05f:	stos   DWORD PTR es:[edi],eax
  41b060:	sub    DWORD PTR [esp],eax
  41b063:	inc    ebp
  41b064:	mov    bh,0x91
  41b066:	fdivp  st(2),st
  41b068:	out    0xeb,eax
  41b06a:	jg     0x41b048
  41b06c:	popf   
  41b06d:	jecxz  0x41b08d
  41b06f:	ret    0xf1b
  41b072:	pop    ebx
  41b073:	inc    ebp
  41b074:	mov    es,WORD PTR [edi+edx*8+0x5a55f2db]
  41b07b:	out    0x1d,eax
  41b07d:	adc    ecx,DWORD PTR [ebx]
  41b07f:	inc    ebp
  41b080:	jbe    0x41b010
  41b082:	mov    edx,0x9d43f656
  41b087:	out    0xb0,eax
  41b089:	sbb    al,0xd6
  41b08b:	(bad)  
  41b08c:	rcl    DWORD PTR [ecx+0x1d],cl
  41b08f:	pop    ebp
  41b090:	push   ebp
  41b091:	add    al,0x8e
  41b093:	dec    edx
  41b094:	or     edx,DWORD PTR [ecx]
  41b096:	mov    DWORD PTR [esi+0x3],eax
  41b099:	push   cs
  41b09a:	add    BYTE PTR [ecx-0x76f304be],dl
  41b0a0:	push   ds
  41b0a1:	repz sub DWORD PTR [esi+0x2d],ebp
  41b0a5:	bound  ecx,QWORD PTR [ecx-0x5b]
  41b0a8:	daa    
  41b0a9:	cs xchg edx,esi
  41b0ac:	add    al,0x95
  41b0ae:	es ja  0x41b0b6
  41b0b1:	jg     0x41b03e
  41b0b3:	push   ecx
  41b0b4:	inc    edx
  41b0b5:	out    0x90,eax
  41b0b7:	pop    esi
  41b0b8:	sti    
  41b0b9:	out    0x33,eax
  41b0bb:	enter  0x5af4,0xf7
  41b0bf:	add    BYTE PTR [edx],0x0
  41b0c2:	ins    BYTE PTR es:[edi],dx
  41b0c3:	loope  0x41b114
  41b0c5:	or     esp,DWORD PTR [edx+0x64]
  41b0c8:	fiadd  DWORD PTR [eax-0x3a002ed4]
  41b0ce:	in     eax,0xa6
  41b0d0:	cli    
  41b0d1:	call   0x8941d9b7
  41b0d6:	sbb    al,0x71
  41b0d8:	add    BYTE PTR [ebx],0xe0
  41b0db:	jg     0x41b122
  41b0dd:	clc    
  41b0de:	jb     0x41b0dd
  41b0e0:	rol    BYTE PTR [eax+eiz*2-0x3],cl
  41b0e4:	sar    BYTE PTR [eax],cl
  41b0e6:	sub    al,0xa1
  41b0e8:	pop    es
  41b0e9:	xor    BYTE PTR [edi+0x3ffcd77c],0x12
  41b0f0:	inc    ebp
  41b0f1:	clc    
  41b0f2:	ret    0x367
  41b0f5:	inc    ebx
  41b0f6:	loope  0x41b0d7
  41b0f8:	rol    ecx,0xed
  41b0fb:	sahf   
  41b0fc:	xor    BYTE PTR [ecx+0x13870079],cl
  41b102:	sar    BYTE PTR [edx-0x3abbeec1],0x2e
  41b109:	pop    es
  41b10a:	xchg   BYTE PTR [esi-0x62],ch
  41b10d:	add    al,BYTE PTR [eax]
  41b10f:	mov    edx,0xf9244e13
  41b114:	sub    BYTE PTR [esi],cl
  41b116:	or     eax,0x72f9f169
  41b11b:	out    dx,eax
  41b11c:	aam    0x5
  41b11e:	xor    BYTE PTR [edx],dl
  41b120:	repnz pop esi
  41b122:	xor    BYTE PTR [eax],0x8e
  41b125:	push   ebx
  41b126:	or     ch,BYTE PTR [ecx-0x2f]
  41b129:	sub    al,0x74
  41b12b:	in     al,dx
  41b12c:	push   ds
  41b12d:	shr    DWORD PTR ds:0xf759e294,1
  41b133:	test   al,0x73
  41b135:	add    eax,0x4fb11080
  41b13a:	adc    al,BYTE PTR [eax]
  41b13c:	push   ecx
  41b13d:	push   cs
  41b13e:	mov    eax,ds:0x730a9e80
  41b143:	add    eax,0x755bb644
  41b148:	mov    ecx,0x4a7af585
  41b14d:	std    
  41b14e:	mov    ecx,edx
  41b150:	hlt    
  41b151:	call   0xf3a73156
  41b156:	jg     0x41b152
  41b158:	jge    0x41b14c
  41b15a:	popf   
  41b15b:	ret    
  41b15c:	(bad)  
  41b15d:	(bad)  
  41b15e:	jl     0x41b143
  41b160:	jnp    0x41b0e7
  41b162:	mov    edi,0x97860030
  41b167:	jl     0x41b162
  41b169:	jge    0x41b15d
  41b16b:	popf   
  41b16c:	ret    0xc842
  41b16f:	jl     0x41b153
  41b171:	jnp    0x41b0f8
  41b173:	mov    esi,0x300a0a30
  41b178:	and    eax,0x5c849446
  41b17d:	add    al,0x4
  41b17f:	mov    BYTE PTR [esp+eax*1-0x1],dl
  41b183:	jle    0x41b145
  41b185:	inc    esi
  41b186:	out    0xff,al
  41b188:	xchg   DWORD PTR [eax-0xb],edx
  41b18b:	inc    edx
  41b18c:	inc    eax
  41b18d:	jg     0x41b1f1
  41b18f:	and    al,0x14
  41b191:	xor    edi,DWORD PTR [edi+0x77]
  41b194:	push   DWORD PTR [ebx-0x1d]
  41b197:	push   edi
  41b198:	pop    edi
  41b199:	mov    edx,0x4200060a
  41b19e:	mov    edi,0x4a8f0004
  41b1a3:	and    al,0x8
  41b1a5:	ffreep st(4)
  41b1a7:	(bad)  
  41b1a8:	aas    
  41b1a9:	or     dh,BYTE PTR [ecx]
  41b1ab:	sbb    al,0xe8
  41b1ad:	jg     0x41b1b0
  41b1af:	sti    
  41b1b0:	jmp    FWORD PTR [edi-0x52]
  41b1b3:	xor    esi,0xfcf1779d
  41b1b9:	dec    ecx
  41b1ba:	mov    edi,0xc751fd0c
  41b1bf:	or     al,0xe8
  41b1c1:	xchg   al,bl
  41b1c3:	(bad)  
  41b1c5:	es sub ebx,ebp
  41b1c8:	add    DWORD PTR [eax],eax
  41b1ca:	outs   dx,BYTE PTR ds:[esi]
  41b1cb:	sub    eax,DWORD PTR [edx-0x3e]
  41b1ce:	xchg   ebp,eax
  41b1cf:	jmp    0x41b206
  41b1d1:	mov    DWORD PTR [ecx+0x1e0bed6b],esi
  41b1d7:	das    
  41b1d8:	hlt    
  41b1d9:	add    ecx,DWORD PTR [ebx]
  41b1db:	mov    eax,0xc0ad72df
  41b1e0:	cmc    
  41b1e1:	ja     0x41b192
  41b1e3:	sub    DWORD PTR [edi+eax*4],eax
  41b1e6:	loopne 0x41b175
  41b1e8:	jmp    0x41b1ed
  41b1ea:	push   ds
  41b1eb:	aas    
  41b1ec:	loopne 0x41b1ed
  41b1ee:	pop    ss
  41b1ef:	daa    
  41b1f0:	or     al,0x89
  41b1f2:	shl    ch,1
  41b1f4:	xor    edx,DWORD PTR [esi+0x28]
  41b1f7:	mov    dh,0x8
  41b1f9:	mov    eax,esp
  41b1fb:	int    0x83
  41b1fd:	push   ds
  41b1fe:	popf   
  41b1ff:	push   esp
  41b200:	mov    ecx,0xdbf71454
  41b205:	cmp    BYTE PTR [ebx-0x23],ah
  41b208:	dec    ebp
  41b209:	push   ecx
  41b20a:	and    bh,ah
  41b20c:	fsub   st,st(7)
  41b20e:	jno    0x41b1a4
  41b210:	(bad)  
  41b212:	push   ss
  41b213:	bound  edx,QWORD PTR [edx+edx*8]
  41b216:	(bad)  
  41b217:	xor    edx,DWORD PTR [ebp+0x43]
  41b21a:	(bad)  
  41b21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b21c:	or     BYTE PTR [ebx-0x54],dh
  41b21f:	add    dh,BYTE PTR ds:0x83a68910
  41b225:	jp     0x41b1b4
  41b227:	jmp    0x1f0:0xa71e4554
  41b22e:	add    BYTE PTR [ecx+0x2],dh
  41b231:	test   al,0x1c
  41b233:	data16 (bad) 
  41b235:	xchg   esp,eax
  41b236:	std    
  41b237:	(bad)  [ebp+0x13]
  41b23a:	xor    al,0xd0
  41b23c:	dec    ebp
  41b23d:	mul    eax
  41b23f:	scas   eax,DWORD PTR es:[edi]
  41b240:	jbe    0x41b21b
  41b242:	inc    ebx
  41b243:	popf   
  41b244:	jge    0x41b26c
  41b246:	push   esi
  41b247:	mov    ds:0x32dfab8b,al
  41b24c:	push   ss
  41b24d:	jmp    0xa541:0x7255311d
  41b254:	sbb    edi,DWORD PTR [ebp-0x58ecb3ae]
  41b25a:	aas    
  41b25b:	repz cmp esp,DWORD PTR [eax+0x6a029ac2]
  41b262:	popa   
  41b263:	lods   eax,DWORD PTR ds:[esi]
  41b264:	add    esi,DWORD PTR [edx*8-0x7450c2db]
  41b26b:	out    0xee,eax
  41b26d:	add    esp,edx
  41b26f:	and    edx,DWORD PTR [ecx]
  41b271:	xchg   edx,eax
  41b272:	out    0x17,eax
  41b274:	(bad)  
  41b275:	std    
  41b276:	mov    cl,BYTE PTR [ebp+0x1b]
  41b279:	scas   eax,DWORD PTR es:[edi]
  41b27a:	push   ebx
  41b27b:	jno    0x41b209
  41b27d:	fadd   QWORD PTR [ebx+0x9fb2253]
  41b283:	sbb    eax,0xa85fefd9
  41b288:	sub    BYTE PTR [edi+0x11],0xb0
  41b28c:	or     al,0x6a
  41b28e:	ficomp DWORD PTR [ebx+edx*2-0x51ff7315]
  41b295:	ins    DWORD PTR es:[edi],dx
  41b296:	push   edx
  41b297:	inc    edx
  41b298:	arpl   WORD PTR [ebx],bx
  41b29a:	push   edi
  41b29b:	push   edx
  41b29c:	std    
  41b29d:	adc    BYTE PTR [eax+0x2],0x8f
  41b2a1:	(bad)
  41b2a5:	add    dh,BYTE PTR [ebx+0x551dfa]
  41b2ab:	fstp   DWORD PTR [ecx+0x7c6a0c4e]
  41b2b1:	repnz add DWORD PTR [esp+ebp*8+0x5e215a89],ebx
  41b2b9:	jmp    0xce9e14c9
  41b2be:	mov    BYTE PTR [esi+eiz*8+0x17eae941],ah
  41b2c5:	inc    esp
  41b2c6:	hlt    
  41b2c7:	jb     0x41b315
  41b2c9:	out    dx,al
  41b2ca:	sub    BYTE PTR [edx],ch
  41b2cc:	and    al,bl
  41b2ce:	jmp    0x1d4cc0a1
  41b2d3:	je     0x41b337
  41b2d5:	add    edi,edi
  41b2d7:	jb     0x41b278
  41b2d9:	push   ss
  41b2da:	and    BYTE PTR [ebp-0x5f],bl
  41b2dd:	push   ss
  41b2de:	pop    es
  41b2df:	dec    ebp
  41b2e0:	mov    ds:0x9e460b16,al
  41b2e5:	inc    ebx
  41b2e6:	jmp    0x1482dab9
  41b2eb:	add    ah,BYTE PTR [esi+0x7d]
  41b2ee:	pop    es
  41b2ef:	bound  ebx,QWORD PTR [edi-0x23]
  41b2f2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b2f4:	inc    ebx
  41b2f5:	xlat   BYTE PTR ds:[ebx]
  41b2f6:	push   edx
  41b2f7:	jb     0x41b2f9
  41b2f9:	dec    edx
  41b2fa:	inc    ebp
  41b2fb:	dec    edi
  41b2fc:	aas    
  41b2fd:	mov    dl,bh
  41b2ff:	jb     0x41b2fa
  41b301:	imul   esi,ecx,0x77
  41b304:	fcmovnu st,st(6)
  41b306:	add    cl,BYTE PTR [ecx+0x427da6f4]
  41b30c:	jno    0x41b335
  41b30e:	inc    ecx
  41b30f:	or     al,0x5c
  41b311:	mov    bh,ah
  41b313:	cmp    BYTE PTR [esi-0x31],bl
  41b316:	pop    edx
  41b317:	push   ecx
  41b318:	jb     0x41b2fd
  41b31a:	sub    al,dh
  41b31c:	mov    ecx,0x4e560884
  41b321:	add    eax,0x34001632
  41b326:	add    bh,BYTE PTR [edi-0x3c]
  41b329:	or     BYTE PTR [edi-0x3e7e03bf],al
  41b32f:	jno    0x41b336
  41b331:	jge    0x41b395
  41b333:	cld    
  41b334:	jmp    0x41b32d
  41b336:	mov    ah,0x41
  41b338:	cld    
  41b339:	dec    edi
  41b33a:	inc    edx
  41b33b:	cld    
  41b33c:	sub    ecx,DWORD PTR [edx+0x3001f780]
  41b342:	inc    esi
  41b343:	jg     0x41b340
  41b345:	mov    dh,0x3a
  41b347:	add    DWORD PTR [eax+0x4273f2fa],eax
  41b34d:	aas    
  41b34e:	dec    edx
  41b34f:	clc    
  41b350:	(bad)  
  41b351:	cld    
  41b352:	(bad)  
  41b353:	fld    DWORD PTR ss:[edx-0xf]
  41b357:	jg     0x41b395
  41b359:	cmp    bl,0x70
  41b35c:	sub    eax,DWORD PTR [eax]
  41b35e:	aam    0xc
  41b360:	sti    
  41b361:	jne    0x41b2e7
  41b363:	mov    dh,0x11
  41b365:	pushf  
  41b366:	addr16 inc ecx
  41b368:	add    BYTE PTR [ebp+0x2b1c2d44],al
  41b36e:	test   eax,0xb1ff53e2
  41b373:	loop   0x41b3c7
  41b375:	jmp    DWORD PTR [ecx-0xf]
  41b378:	adc    eax,0x59284440
  41b37d:	or     al,0xbf
  41b37f:	xor    eax,0xf2008308
  41b384:	(bad)  
  41b385:	jl     0x41b3cf
  41b387:	jmp    0xf737:0xb5318aff
  41b38e:	mov    edx,DWORD PTR ss:[edi-0x75]
  41b392:	xor    edx,0xc06d5e5a
  41b398:	or     BYTE PTR [eax],al
  41b39a:	push   ecx
  41b39b:	mov    ch,al
  41b39d:	sbb    DWORD PTR [ebp+0x7350f43f],0x44
  41b3a4:	push   ebp
  41b3a5:	adc    al,0x16
  41b3a7:	(bad)  
  41b3a8:	pop    eax
  41b3a9:	adc    bl,BYTE PTR [ebp-0x15]
  41b3ac:	fcmovnbe st,st(5)
  41b3ae:	repnz xchg ebp,eax
  41b3b0:	lock xchg BYTE PTR [eax+0x27],ah
  41b3b4:	fcmovnbe st,st(5)
  41b3b6:	push   ss
  41b3b7:	mov    cs,WORD PTR [edi+eax*4]
  41b3ba:	pusha  
  41b3bb:	sti    
  41b3bc:	xchg   BYTE PTR [edx-0x5b],al
  41b3bf:	pop    esi
  41b3c0:	sbb    BYTE PTR [eax],cl
  41b3c2:	add    BYTE PTR [esi],dl
  41b3c4:	adc    ecx,DWORD PTR [ecx-0x3d4036a6]
  41b3ca:	or     al,0x1e
  41b3cc:	dec    eax
  41b3cd:	add    al,0x0
  41b3cf:	popf   
  41b3d0:	je     0x41b401
  41b3d2:	mov    ebp,DWORD PTR [eax]
  41b3d4:	iret   
  41b3d5:	call   0xdc1e084c
  41b3da:	xchg   al,ah
  41b3dc:	loope  0x41b363
  41b3de:	mov    edi,0xff8e65a2
  41b3e3:	mov    ch,dl
  41b3e5:	xchg   DWORD PTR [edx-0x73],edi
  41b3e8:	add    ebx,eax
  41b3ea:	jne    0x41b3e2
  41b3ec:	in     al,dx
  41b3ed:	cs std 
  41b3ef:	call   0x9548fad
  41b3f4:	mov    ecx,0xaa180040
  41b3f9:	push   ebp
  41b3fa:	ins    BYTE PTR es:[edi],dx
  41b3fb:	sbb    eax,0xc83a17b6
  41b400:	add    eax,DWORD PTR [edi-0x3816bab6]
  41b406:	inc    esp
  41b407:	jbe    0x41b463
  41b409:	push   ebp
  41b40a:	sub    DWORD PTR [esi],esp
  41b40c:	out    dx,eax
  41b40d:	fisttp WORD PTR [eax+0x73af675a]
  41b413:	mov    eax,ds:0x9c154536
  41b418:	add    ah,BYTE PTR [edx]
  41b41a:	inc    edi
  41b41b:	adc    eax,0x2632ec4d
  41b420:	out    dx,eax
  41b421:	out    dx,al
  41b422:	mov    al,bl
  41b424:	jmp    0x51d4:0x33
  41b42b:	(bad)  
  41b42d:	or     BYTE PTR [ebp-0x694063ce],dl
  41b433:	jmp    0x41b46f
  41b435:	add    BYTE PTR [esi],ch
  41b437:	fcomp  QWORD PTR ds:0x53032356
  41b43d:	jmp    0x41b45c
  41b43f:	push   esi
  41b440:	sar    DWORD PTR [edx+ebp*8-0x6c2c5504],1
  41b447:	neg    DWORD PTR [ecx-0x7b]
  41b44a:	jmp    0xb000:0x54ea6afc
  41b451:	shr    ecx,cl
  41b453:	pop    esi
  41b454:	test   eax,0x740ba387
  41b459:	shr    cl,cl
  41b45b:	rol    ch,cl
  41b45d:	push   ebp
  41b45e:	fild   WORD PTR [edi]
  41b460:	mov    WORD PTR [ecx-0x2d63f7a5],cs
  41b466:	out    0x58,eax
  41b468:	mov    DWORD PTR [edi-0x4b4a2fdd],eax
  41b46e:	in     eax,dx
  41b46f:	test   ecx,edx
  41b471:	shl    DWORD PTR [ebp+0x2387c9db],cl
  41b477:	or     bl,al
  41b479:	aaa    
  41b47a:	mov    al,0xc6
  41b47c:	stos   BYTE PTR es:[edi],al
  41b47d:	add    dh,BYTE PTR [edi+ecx*4]
  41b480:	inc    esi
  41b481:	xor    DWORD PTR [edx],edi
  41b483:	xor    dl,BYTE PTR [ecx*1+0x282f60f]
  41b48a:	push   ds
  41b48b:	fild   DWORD PTR [eax]
  41b48d:	scas   eax,DWORD PTR es:[edi]
  41b48e:	push   es
  41b48f:	jle    0x41b443
  41b491:	xor    DWORD PTR [ebp+0x0],ecx
  41b494:	loope  0x41b4b1
  41b496:	retf   
  41b497:	cld    
  41b498:	xchg   edi,eax
  41b499:	sbb    al,0xd6
  41b49b:	jge    0x41b464
  41b49d:	sbb    eax,0x23c37d93
  41b4a2:	inc    eax
  41b4a3:	or     BYTE PTR [ebx-0x5850155a],bl
  41b4a9:	out    0xd5,eax
  41b4ab:	sub    BYTE PTR [ecx],0x4d
  41b4ae:	inc    esi
  41b4af:	inc    eax
  41b4b0:	cdq    
  41b4b1:	and    DWORD PTR [eax+0x8],eax
  41b4b4:	ss das 
  41b4b6:	jl     0x41b4fa
  41b4b8:	sub    eax,0xeb383f14
  41b4bd:	sbb    eax,0xc6e37393
  41b4c2:	pop    DWORD PTR [ecx]
  41b4c4:	push   ss
  41b4c5:	out    0x89,al
  41b4c7:	xlat   BYTE PTR ds:[ebx]
  41b4c8:	add    cl,BYTE PTR fs:[edi+0x2d]
  41b4cc:	jb     0x41b52a
  41b4ce:	push   es
  41b4cf:	push   ebp
  41b4d0:	cdq    
  41b4d1:	imul   ebp,edx,0x10
  41b4d4:	jmp    0xf15:0xaeb1d5c7
  41b4db:	cmp    ecx,edx
  41b4dd:	clc    
  41b4de:	dec    eax
  41b4df:	std    
  41b4e0:	fidiv  WORD PTR [edi+0x55]
  41b4e3:	or     dh,bl
  41b4e5:	inc    esi
  41b4e6:	in     al,dx
  41b4e7:	mov    edi,0xc2047e05
  41b4ec:	jno    0x41b48a
  41b4ee:	jnp    0x41b532
  41b4f0:	mov    ebp,0xbedadc00
  41b4f5:	test   DWORD PTR [edi-0x31],0xfc73aa88
  41b4fc:	cld    
  41b4fd:	sbb    al,0xa5
  41b4ff:	jnp    0x41b4c5
  41b501:	xchg   ecx,eax
  41b502:	dec    ecx
  41b503:	paddw  mm2,QWORD PTR [esi-0x5fa6cf79]
  41b50a:	pop    eax
  41b50b:	or     al,BYTE PTR [eax]
  41b50d:	add    BYTE PTR [ecx+0x2081e881],bl
  41b513:	(bad)  
  41b514:	std    
  41b515:	push   DWORD PTR [ecx+ebx*1]
  41b518:	push   esi
  41b519:	push   edi
  41b51a:	sahf   
  41b51b:	add    al,0x87
  41b51d:	lock fadd st(3),st
  41b520:	inc    ecx
  41b521:	sti    
  41b522:	add    al,0xef
  41b524:	inc    eax
  41b525:	or     BYTE PTR [ebx],al
  41b527:	test   BYTE PTR [ebx+0x5005f400],al
  41b52d:	push   0x403454
  41b532:	outs   dx,DWORD PTR ds:[esi]
  41b533:	mov    ebx,0xad38a5e4
  41b538:	sti    
  41b539:	test   DWORD PTR [edx+esi*1+0x40a8d76],esi
  41b540:	mov    cl,BYTE PTR [eax]
  41b542:	inc    esp
  41b543:	scas   al,BYTE PTR es:[edi]
  41b544:	sbb    al,0x74
  41b546:	mov    esi,0x1009f585
  41b54b:	(bad)  
  41b54c:	jg     0x41b547
  41b54e:	mov    cl,0x2c
  41b550:	(bad)  
  41b551:	aas    
  41b552:	(bad)
  41b556:	add    BYTE PTR [edi+0x118d0832],dh
  41b55c:	(bad)  
  41b55d:	push   ebp
  41b55e:	push   eax
  41b55f:	adc    DWORD PTR [edx-0x548c0114],eax
  41b565:	ret    
  41b566:	test   DWORD PTR [esp+ebp*4-0x5],esp
  41b56a:	push   DWORD PTR [edi+0x5]
  41b56d:	add    BYTE PTR [eax],al
  41b56f:	dec    esp
  41b570:	adc    BYTE PTR [edi+0x0],ah
  41b573:	test   BYTE PTR [esi-0x2c],bh
  41b576:	test   DWORD PTR [edi],ecx
  41b578:	xor    bh,BYTE PTR [edx]
  41b57a:	mov    dl,0x6e
  41b57c:	fstp   st(1)
  41b57e:	inc    ebp
  41b57f:	add    ebp,DWORD PTR [ebx-0x54460779]
  41b585:	jo     0x41b5ae
  41b587:	popf   
  41b588:	or     al,0x9a
  41b58a:	out    0x40,al
  41b58c:	fild   DWORD PTR [eax]
  41b58e:	sub    DWORD PTR [esi-0xf],ebx
  41b591:	jmp    0x41b530
  41b593:	jno    0x41b5e5
  41b595:	xlat   BYTE PTR ds:[ebx]
  41b596:	mov    al,bl
  41b598:	out    0x3f,eax
  41b59a:	push   ebp
  41b59b:	adc    al,0xda
  41b59d:	cs and ebp,0xd18dec67
  41b5a4:	xor    bh,dl
  41b5a6:	mov    BYTE PTR [eax-0x35],bl
  41b5a9:	mov    esi,edi
  41b5ab:	fsub   DWORD PTR [ebp+0x334ffedb]
  41b5b1:	aad    0xfe
  41b5b3:	repz jle 0x36b99bfc
  41b5ba:	pop    ecx
  41b5bb:	add    ah,dl
  41b5bd:	sbb    al,0x8
  41b5bf:	add    BYTE PTR [eax+0x54],dh
  41b5c2:	call   0x8cfdc17
  41b5c7:	add    DWORD PTR [eax-0x35],ebp
  41b5ca:	mov    eax,esp
  41b5cc:	push   ss
  41b5cd:	or     al,0xec
  41b5cf:	sub    eax,0x8400db9d
  41b5d4:	fst    QWORD PTR [ebp-0x3]
  41b5d7:	xor    ch,bl
  41b5d9:	add    esp,DWORD PTR [ecx]
  41b5db:	push   esi
  41b5dc:	mov    ds:0xd288f155,al
  41b5e1:	fmul   QWORD PTR [ebp+0x8]
  41b5e4:	xchg   edx,eax
  41b5e5:	aaa    
  41b5e6:	or     BYTE PTR [esi-0x76],dl
  41b5e9:	iret   
  41b5ea:	adc    BYTE PTR [esi],dl
  41b5ec:	fstp   st(1)
  41b5ee:	add    ebx,0xffffffa9
  41b5f1:	add    al,0x37
  41b5f3:	add    al,0xeb
  41b5f5:	fmul   QWORD PTR [ecx-0x409b5ea4]
  41b5fb:	pop    ebp
  41b5fc:	(bad)  
  41b5fd:	inc    ch
  41b5ff:	or     ebx,DWORD PTR [ebp+0x428d3d02]
  41b605:	cmp    dl,ah
  41b607:	xor    DWORD PTR [ebp-0x2f7335a8],edx
  41b60d:	(bad)  
  41b60e:	pop    ebx
  41b60f:	inc    edx
  41b610:	cmp    BYTE PTR [esi-0x2858b058],al
  41b616:	xchg   esi,eax
  41b617:	and    al,0x5f
  41b619:	add    al,0xa8
  41b61b:	mov    WORD PTR [edx],gs
  41b61d:	fsub   st(0),st
  41b61f:	mov    WORD PTR [eax],es
  41b621:	adc    al,0x38
  41b623:	dec    edi
  41b624:	repz adc edx,ecx
  41b627:	pop    ebp
  41b628:	jg     0x41b674
  41b62a:	push   edi
  41b62b:	in     al,dx
  41b62c:	mov    al,BYTE PTR [eax+0x580296fa]
  41b632:	xor    BYTE PTR [edx],ch
  41b634:	cs and al,0xdf
  41b637:	xchg   edi,eax
  41b638:	xor    DWORD PTR [esi],edx
  41b63a:	inc    esi
  41b63b:	fbstp  TBYTE PTR [ebx]
  41b63d:	ja     0x41b639
  41b63f:	sub    eax,0x1d13a54e
  41b644:	fsubr  DWORD PTR [edi-0x62bc08de]
  41b64a:	test   DWORD PTR [esi],esp
  41b64c:	dec    edi
  41b64d:	xchg   bh,cl
  41b64f:	xchg   ebx,eax
  41b650:	or     eax,ebp
  41b652:	cmp    BYTE PTR [eax-0x98462fd],0x7d
  41b659:	mov    al,0x56
  41b65b:	int    0x84
  41b65d:	daa    
  41b65e:	(bad)  
  41b65f:	out    0x4f,al
  41b661:	mov    ebp,0xe2d82b7d
  41b666:	pop    esp
  41b667:	jecxz  0x41b63f
  41b669:	ud0    eax,DWORD PTR [eax+0x8]
  41b66d:	adc    BYTE PTR [ebp-0x21],0xd6
  41b671:	(bad)  
  41b672:	adc    dl,bh
  41b674:	inc    ebx
  41b675:	popf   
  41b676:	test   DWORD PTR [esi+0x389551],esp
  41b67c:	ror    DWORD PTR [edi+ecx*8-0x27515103],0xfc
  41b684:	sbb    al,0x0
  41b686:	mov    eax,ds:0x4f4912cd
  41b68b:	verr   WORD PTR [edx+0x3]
  41b68f:	sub    eax,0x2a9abc7
  41b694:	push   ebx
  41b695:	jb     0x41b6dc
  41b697:	sub    bl,0xdd
  41b69a:	js     0x41b6d1
  41b69c:	xor    DWORD PTR [esi+0x72],esi
  41b69f:	pop    esp
  41b6a0:	add    al,0x6e
  41b6a2:	or     al,0x17
  41b6a4:	pop    gs
  41b6a6:	sahf   
  41b6a7:	jns    0x41b698
  41b6a9:	push   0xffffffd9
  41b6ab:	int    0x38
  41b6ad:	pop    ecx
  41b6ae:	ins    DWORD PTR es:[edi],dx
  41b6af:	adc    ecx,DWORD PTR [ebx+0x563edaa4]
  41b6b5:	cs pop esp
  41b6b7:	out    0x1b,al
  41b6b9:	jmp    0xdd3eb95c
  41b6be:	mov    ?,edi
  41b6c0:	aas    
  41b6c1:	jmp    0xaccaa98d
  41b6c6:	out    dx,al
  41b6c7:	or     DWORD PTR [ebx-0xf],eax
  41b6ca:	ins    DWORD PTR es:[edi],dx
  41b6cb:	iret   
  41b6cc:	inc    ebp
  41b6cd:	fs pop esp
  41b6cf:	out    0x4f,al
  41b6d1:	mov    bh,0xd3
  41b6d3:	repz xor ebx,eax
  41b6d6:	pop    esi
  41b6d7:	add    al,BYTE PTR [ebx+0x55da4c29]
  41b6dd:	imul   BYTE PTR [ebp-0x6156ee92]
  41b6e3:	jnp    0x41b6a9
  41b6e5:	inc    esi
  41b6e6:	retf   
  41b6e7:	vpmulhw xmm0,xmm7,XMMWORD PTR [eax]
  41b6eb:	sahf   
  41b6ec:	xor    DWORD PTR [ecx+0x17da1fc5],ecx
  41b6f2:	cmp    ah,BYTE PTR [ecx+eax*2]
  41b6f5:	clc    
  41b6f6:	add    BYTE PTR [ecx+esi*8+0x26ce53d6],dl
  41b6fd:	sti    
  41b6fe:	adc    eax,0x3cd228
  41b703:	mov    ah,0xb5
  41b705:	adc    DWORD PTR [eax],ebp
  41b707:	push   esp
  41b708:	inc    edx
  41b709:	add    BYTE PTR [ebp-0x72e9cd0c],al
  41b70f:	jno    0x41b6bf
  41b711:	dec    esp
  41b712:	push   0x64
  41b714:	pop    esp
  41b715:	sti    
  41b716:	call   DWORD PTR [ecx+0x22]
  41b719:	adc    BYTE PTR [eax+0x34],al
  41b71c:	cmp    DWORD PTR [ebp+esi*2-0x14400bd0],0xffffffb8
  41b724:	jnp    0x41b767
  41b726:	in     al,dx
  41b727:	push   esp
  41b728:	mov    ch,0x71
  41b72a:	or     bl,al
  41b72c:	inc    edx
  41b72d:	call   0x43ab33
  41b732:	push   ebx
  41b733:	ret    
  41b734:	inc    edx
  41b735:	hlt    
  41b736:	add    al,BYTE PTR [edx+eax*1]
  41b739:	add    bh,bh
  41b73b:	shr    ecx,1
  41b73d:	cmovo  esi,esp
  41b740:	cmp    BYTE PTR [esp+esi*2+0x534f11a5],0x49
  41b748:	inc    edx
  41b749:	call   0x71f6be9e
  41b74e:	clc    
  41b74f:	add    BYTE PTR [ebx+0x41038d2],ch
  41b755:	add    al,BYTE PTR [ecx-0x4facf40]
  41b75b:	adc    eax,0x3cd6bc
  41b760:	xor    ecx,eax
  41b762:	jno    0x41b766
  41b764:	xlat   BYTE PTR ds:[ebx]
  41b765:	push   es
  41b766:	sti    
  41b767:	jne    0x41b7e5
  41b769:	mov    bh,0x11
  41b76b:	mov    al,ds:0x8a004186
  41b770:	popf   
  41b771:	cwde   
  41b772:	ss (bad) 
  41b774:	pop    edi
  41b775:	out    0x0,eax
  41b777:	push   ebx
  41b778:	es mov bh,0x30
  41b77b:	dec    edi
  41b77c:	into   
  41b77d:	pop    esi
  41b77e:	cmp    eax,0xc41cdf8
  41b783:	push   0x5a
  41b785:	enter  0xfcb7,0xa8
  41b789:	mov    ebx,0x669d3ff0
  41b78e:	les    ecx,FWORD PTR [ecx+ebx*1]
  41b791:	dec    edi
  41b792:	add    al,0x0
  41b794:	popf   
  41b795:	adc    al,0x87
  41b797:	cmp    ch,BYTE PTR [ebp-0x55]
  41b79a:	inc    eax
  41b79b:	add    BYTE PTR [eax],bl
  41b79d:	fmul   DWORD PTR es:[edi-0x32]
  41b7a1:	call   0xd65bcf0f
  41b7a6:	fdivr  st,st(4)
  41b7a8:	jmp    0xed2c:0x8f72c45d
  41b7af:	pop    ss
  41b7b0:	lods   al,BYTE PTR ds:[esi]
  41b7b1:	fwait
  41b7b2:	add    BYTE PTR [ecx+0x4db0f500],al
  41b7b8:	gs es sahf 
  41b7bb:	aam    0x38
  41b7bd:	ficom  WORD PTR [esi+0x17f55660]
  41b7c3:	sar    ebp,cl
  41b7c5:	ficomp DWORD PTR [edi-0x2c]
  41b7c8:	cmp    dh,cl
  41b7ca:	outs   dx,BYTE PTR ds:[esi]
  41b7cb:	das    
  41b7cc:	mov    esp,DWORD PTR [eax-0x11]
  41b7cf:	xor    edi,ebp
  41b7d1:	dec    eax
  41b7d2:	imul   DWORD PTR ds:0x4cfc946a
  41b7d8:	clc    
  41b7d9:	mov    dl,0xeb
  41b7db:	jl     0x41b79c
  41b7dd:	xor    ecx,eax
  41b7df:	shl    DWORD PTR ds:0x1024ada2,cl
  41b7e5:	fstp   st(1)
  41b7e7:	pop    ss
  41b7e8:	ror    DWORD PTR [ecx],0x3
  41b7eb:	adc    eax,0xaa0a8a8a
  41b7f0:	dec    ebp
  41b7f1:	mov    ch,0xfb
  41b7f3:	pushf  
  41b7f4:	ret    
  41b7f5:	loop   0x41b829
  41b7f7:	into   
  41b7f8:	or     eax,0xf40af670
  41b7fd:	stos   BYTE PTR es:[edi],al
  41b7fe:	add    al,BYTE PTR [edx]
  41b800:	shr    esi,0xf3
  41b803:	popa   
  41b804:	add    edx,DWORD PTR [esi-0x62fbf8fe]
  41b80a:	dec    edi
  41b80b:	jmp    0x41b79d
  41b80d:	dec    ebx
  41b80e:	f2xm1  
  41b810:	push   ss
  41b811:	popf   
  41b812:	adc    ah,bh
  41b814:	add    edx,DWORD PTR [edi+0xc066a7]
  41b81a:	popf   
  41b81b:	xor    al,0x8f
  41b81d:	jbe    0x41b848
  41b81f:	int    0x7d
  41b821:	xor    eax,0xd46f5620
  41b826:	scas   eax,DWORD PTR es:[edi]
  41b827:	mov    ds:0x2b9d43d8,al
  41b82c:	jno    0x41b7ee
  41b82e:	gs mov ecx,0xdf142e29
  41b834:	mov    bh,0x80
  41b836:	jg     0x41b806
  41b838:	out    0x6b,al
  41b83a:	int    0x55
  41b83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b83d:	add    ebp,eax
  41b83f:	cmc    
  41b840:	push   ss
  41b841:	icebp  
  41b842:	mov    ds:0x4ec36c02,al
  41b847:	and    bh,BYTE PTR [edi-0x18bdb685]
  41b84d:	xor    ecx,eax
  41b84f:	cmc    
  41b850:	pop    edx
  41b851:	icebp  
  41b852:	add    BYTE PTR [edx],0x6c
  41b855:	ret    
  41b856:	cs repnz pop ebx
  41b859:	inc    esi
  41b85a:	mov    cl,0x31
  41b85c:	xchg   ecx,eax
  41b85d:	aam    0xa9
  41b85f:	mov    dl,0x63
  41b861:	ret    
  41b862:	das    
  41b863:	push   es
  41b864:	add    BYTE PTR [ebx+0x6ac0c45e],bh
  41b86a:	jmp    0x41b83a
  41b86c:	push   ebp
  41b86e:	add    eax,0xc4aac68c
  41b873:	jns    0x41b860
  41b875:	push   0x7d
  41b877:	xor    edx,DWORD PTR [esi+0x1a]
  41b87a:	xor    BYTE PTR [edx],dl
  41b87c:	test   BYTE PTR [edi+0x0],0xe8
  41b880:	cmp    ah,bh
  41b882:	add    dl,BYTE PTR [edi+0x50]
  41b885:	sbb    al,BYTE PTR [ebx-0x1b]
  41b888:	ja     0x41b8cc
  41b88a:	adc    DWORD PTR [edi-0x4d0302ce],0x1be93ff4
  41b894:	mov    edi,0x9ae4ae0b
  41b899:	inc    ebx
  41b89a:	jmp    0x2cccbb3d
  41b89f:	or     DWORD PTR [eax+0x4a],edi
  41b8a2:	jge    0x41b834
  41b8a4:	dec    edi
  41b8a5:	or     ch,bh
  41b8a7:	mov    ds:0x1de14a79,eax
  41b8ac:	xor    ah,ch
  41b8ae:	mov    ebx,0xed72cdce
  41b8b3:	les    ebx,FWORD PTR [edx+0x0]
  41b8b6:	jmp    0xb797bf59
  41b8bb:	mov    ah,0x3b
  41b8bd:	push   esi
  41b8be:	inc    esi
  41b8bf:	in     al,0x22
  41b8c1:	pop    gs
  41b8c3:	sahf   
  41b8c4:	jg     0x41b885
  41b8c6:	mov    ebp,0xd97313b8
  41b8cb:	push   0xfffffff2
  41b8cd:	imul   edi,ecx,0xb9ec401d
  41b8d3:	out    dx,eax
  41b8d4:	dec    edi
  41b8d5:	adc    BYTE PTR [ecx],al
  41b8d7:	or     ch,0xfd
  41b8da:	push   cs
  41b8db:	sar    dl,cl
  41b8dd:	cld    
  41b8de:	add    BYTE PTR [ecx],ch
  41b8e0:	scas   eax,DWORD PTR es:[edi]
  41b8e1:	xchg   DWORD PTR ds:0x3cd45400,esi
  41b8e7:	add    BYTE PTR [ebx-0x6f8a0474],dl
  41b8ed:	mov    ch,0xd2
  41b8ef:	mov    edi,DWORD PTR [ecx-0x58fd1856]
  41b8f5:	mov    esi,0xca46c95a
  41b8fa:	cld    
  41b8fb:	push   esp
  41b8fc:	jmp    FWORD PTR [ecx-0x7cd5ccae]
  41b902:	inc    ecx
  41b903:	or     al,0x9d
  41b905:	sub    ecx,DWORD PTR [esi*2+0x871b577]
  41b90c:	fsub   QWORD PTR [esi+0x73]
  41b90f:	inc    eax
  41b910:	xor    al,0x16
  41b912:	call   0xfbf73026
  41b917:	or     DWORD PTR [eax],0xffffffca
  41b91a:	out    0x14,eax
  41b91c:	and    ebp,DWORD PTR [ebx]
  41b91e:	or     al,0xff
  41b920:	sub    esi,ecx
  41b922:	fs mov ah,0x2b
  41b925:	inc    esi
  41b926:	add    BYTE PTR [eax+0x1c],dl
  41b929:	mov    bh,0x3e
  41b92b:	inc    DWORD PTR [ebx-0x40ef3f80]
  41b931:	mov    esp,0x2a631b7a
  41b936:	sbb    BYTE PTR [ebx+0x75fbd249],cl
  41b93c:	hlt    
  41b93d:	mov    ah,0x71
  41b93f:	or     al,0x4c
  41b941:	cmc    
  41b942:	cli    
  41b943:	jmp    DWORD PTR [ebx+0xc71b4]
  41b949:	aas    
  41b94a:	mov    ch,0xe4
  41b94c:	jae    0x41b8d0
  41b94e:	mov    bl,0xfb
  41b950:	mov    edi,DWORD PTR [edx+0x13]
  41b953:	pop    ecx
  41b954:	ret    0x5c8
  41b957:	push   ecx
  41b958:	mov    ebx,DWORD PTR [ebp+0x45eb85ff]
  41b95e:	nop
  41b95f:	adc    eax,0x5a1735fd
  41b964:	inc    eax
  41b965:	popf   
  41b966:	push   edx
  41b967:	push   eax
  41b968:	lock call 0x7bdb:0xdd0eeca6
  41b970:	inc    edx
  41b971:	xchg   ecx,eax
  41b972:	and    al,0xc7
  41b974:	or     al,0x19
  41b976:	sahf   
  41b977:	add    eax,DWORD PTR [eax]
  41b979:	popf   
  41b97a:	or     al,0x3a
  41b97c:	mov    DWORD PTR [eax-0x62c00a89],ebp
  41b982:	xor    esi,DWORD PTR [esp+esi*2-0x2cf2423]
  41b989:	jae    0x41b9ce
  41b98b:	fdiv   QWORD PTR [ebp+ebx*8-0x25]
  41b98f:	iret   
  41b990:	jb     0x41b9e3
  41b992:	push   esp
  41b993:	lods   al,BYTE PTR ds:[esi]
  41b994:	cld    
  41b995:	imul   edx,DWORD PTR [edx+0x45],0xffffffec
  41b999:	jbe    0x41b92b
  41b99b:	inc    BYTE PTR [ebx+0xdb0e]
  41b9a1:	cbw    
  41b9a3:	inc    BYTE PTR [ebx+0xdb16]
  41b9a9:	jb     0x41b9fb
  41b9ab:	push   ebp
  41b9ac:	or     BYTE PTR [eax],al
  41b9ae:	and    BYTE PTR [esi],bl
  41b9b0:	int3   
  41b9b1:	dec    edi
  41b9b2:	adc    al,0xde
  41b9b4:	enter  0xeefc,0x5d
  41b9b8:	les    esi,FWORD PTR [edx-0x62]
  41b9bb:	bound  ecx,QWORD PTR [ebp-0x8]
  41b9be:	xchg   DWORD PTR [edi+0x68dd312e],ebx
  41b9c4:	xchg   WORD PTR [eax+0x7],bx
  41b9c8:	jge    0x41ba0c
  41b9ca:	xor    eax,0xa8fd3068
  41b9cf:	iret   
  41b9d0:	idiv   BYTE PTR [edi]
  41b9d2:	popf   
  41b9d3:	add    dh,BYTE PTR [edx+0x3f]
  41b9d6:	xchg   ecx,eax
  41b9d7:	test   DWORD PTR [edx],esp
  41b9d9:	add    BYTE PTR [edx],ah
  41b9db:	dec    edi
  41b9dc:	outs   dx,DWORD PTR ds:[esi]
  41b9dd:	jnp    0x41ba16
  41b9df:	mov    ds:0x52fc0d1,al
  41b9e4:	je     0x41ba25
  41b9e6:	mov    eax,ds:0xeaafa376
  41b9eb:	jne    0x41b998
  41b9ed:	imul   esp,edx,0x7b
  41b9f0:	mov    ds:0xde32f1cb,eax
  41b9f5:	stos   DWORD PTR es:[edi],eax
  41b9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9f7:	ret    0x403
  41b9fa:	mov    eax,ds:0x72fee702
  41b9ff:	enter  0x7e6,0xcd
  41ba03:	das    
  41ba04:	push   ds
  41ba05:	cmp    edx,edx
  41ba07:	das    
  41ba08:	mov    esi,0xdbc7a556
  41ba0d:	pop    ss
  41ba0e:	lods   eax,DWORD PTR ds:[esi]
  41ba0f:	inc    edx
  41ba10:	out    0x86,eax
  41ba12:	add    BYTE PTR [edx],cl
  41ba14:	dec    edi
  41ba15:	std    
  41ba16:	ror    bh,1
  41ba18:	loop   0x41ba8b
  41ba1a:	push   ss
  41ba1b:	std    
  41ba1c:	hlt    
  41ba1d:	es add al,0x30
  41ba20:	mov    cl,0x8d
  41ba22:	push   esi
  41ba23:	dec    ecx
  41ba24:	enter  0x7c9c,0xdf
  41ba28:	fisubr WORD PTR [edi+0x46]
  41ba2b:	or     eax,0x8ecbf40a
  41ba30:	add    BYTE PTR [esi+0x56],ch
  41ba33:	add    eax,0x1dfbbc8
  41ba38:	dec    esi
  41ba39:	push   ebx
  41ba3a:	ror    BYTE PTR [edi-0x62bc06da],1
  41ba40:	sub    BYTE PTR [edx-0x5a2da084],dh
  41ba46:	mov    edx,0x7ce6fadc
  41ba4b:	pusha  
  41ba4c:	(bad)  
  41ba4d:	call   FWORD PTR [ebp-0x245ff3af]
  41ba53:	pop    esi
  41ba54:	add    al,BYTE PTR [ebx+0x50016a29]
  41ba5a:	push   ds
  41ba5b:	cmc    
  41ba5c:	jp     0x41ba63
  41ba5e:	ins    BYTE PTR es:[edi],dx
  41ba5f:	ficom  WORD PTR [ebx+0x1]
  41ba62:	mov    ecx,0xd969aecd
  41ba67:	fimul  DWORD PTR fs:[edi-0x1]
  41ba6b:	ins    DWORD PTR es:[edi],dx
  41ba6c:	(bad)  
  41ba6d:	pop    esp
  41ba6e:	sub    cl,bl
  41ba70:	jns    0x41ba5d
  41ba72:	pop    esp
  41ba73:	jecxz  0x41ba67
  41ba75:	dec    edi
  41ba76:	push   ebx
  41ba77:	add    BYTE PTR [ecx+0x6bf972c5],bl
  41ba7d:	push   esp
  41ba7e:	or     al,0xd6
  41ba80:	aam    0xfa
  41ba82:	imul   ebp,ecx,0xdb4ff45b
  41ba88:	fiadd  WORD PTR [edx]
  41ba8a:	sub    DWORD PTR [ecx-0x49b0090b],0x54
  41ba91:	adc    DWORD PTR [bx+di],ebp
  41ba94:	mov    eax,ds:0x67f94279
  41ba99:	add    DWORD PTR [ecx],esi
  41ba9b:	test   eax,0xe90bc46c
  41baa0:	jne    0x41bb1b
  41baa2:	jmp    0x41bb0c
  41baa4:	cmp    eax,0x9ee90157
  41baa9:	xor    BYTE PTR [ebp+0x6c],dl
  41baac:	and    al,0xcb
  41baae:	std    
  41baaf:	jbe    0x41ba93
  41bab1:	ss std 
  41bab3:	hlt    
  41bab4:	push   es
  41bab5:	(bad)  
  41bab6:	adc    dl,BYTE PTR [ebp+0xe]
  41bab9:	pop    es
  41baba:	add    BYTE PTR [esp-0x35],ch
  41babe:	std    
  41babf:	push   esi
  41bac0:	loop   0x41baf8
  41bac2:	push   eax
  41bac3:	shl    esi,0x4e
  41bac6:	inc    eax
  41bac7:	add    ah,dh
  41bac9:	ja     0x41bb33
  41bacb:	add    al,ah
  41bacd:	add    cl,BYTE PTR [ecx-0x44d8b4b]
  41bad3:	call   FWORD PTR [ebp+edx*8+0x3d]
  41bad7:	(bad)  
  41bad8:	jnp    0x41ba5d
  41bada:	ror    BYTE PTR [eax+eax*1],0xfb
  41bade:	adc    al,0x81
  41bae0:	ror    BYTE PTR [edx],0xcf
  41bae3:	mov    DWORD PTR [ebp-0x44ddc],eax
  41bae9:	add    al,0xab
  41baeb:	or     al,BYTE PTR [eax]
  41baed:	test   BYTE PTR [edx],al
  41baef:	test   al,al
  41baf1:	adc    dh,bh
  41baf3:	scas   eax,DWORD PTR es:[edi]
  41baf4:	add    DWORD PTR [edi+0x4dc03200],ebx
  41bafa:	les    eax,FWORD PTR [eax]
  41bafc:	add    BYTE PTR [ecx+0x5881e949],dh
  41bb02:	add    DWORD PTR es:[eax],eax
  41bb05:	je     0x41bb18
  41bb07:	push   ebx
  41bb08:	(bad)  
  41bb09:	icebp  
  41bb0a:	ins    DWORD PTR es:[edi],dx
  41bb0b:	stc    
  41bb0c:	call   FWORD PTR [ebx]
  41bb0e:	adc    ch,BYTE PTR [eax+0x3c]
  41bb11:	mov    WORD PTR [esi],?
  41bb13:	add    al,ch
  41bb15:	cmp    DWORD PTR [ecx-0x3e4f0004],edi
  41bb1b:	or     eax,DWORD PTR [ebx+ebp*1-0x46fffffe]
  41bb22:	jp     0x41bad0
  41bb24:	cld    
  41bb25:	sbb    esi,DWORD PTR [ebp+0x6db18d4c]
  41bb2b:	stc    
  41bb2c:	call   FWORD PTR [ebx+0x1815fb11]
  41bb32:	sar    DWORD PTR [eax+eax*1],1
  41bb35:	imul   edi,DWORD PTR [edx-0x54],0x4cb47bfc
  41bb3c:	call   ecx
  41bb3e:	leave  
  41bb3f:	mov    DWORD PTR [ebp+0x0],eax
  41bb42:	popf   
  41bb43:	jecxz  0x41bb9d
  41bb45:	inc    esp
  41bb46:	gs fwait
  41bb48:	add    BYTE PTR [eax-0xb],dl
  41bb4b:	lahf   
  41bb4c:	inc    ebx
  41bb4d:	std    
  41bb4e:	ficomp DWORD PTR [eax-0x3b]
  41bb51:	nop    DWORD PTR [esi+ecx*8]
  41bb55:	or     al,0x21
  41bb57:	add    DWORD PTR [eax],0xcd8b9d00
  41bb5d:	jb     0x41bb04
  41bb5f:	push   esi
  41bb60:	mov    BYTE PTR [ebx+0x4fcdecb0],dh
  41bb66:	mov    ch,0x1e
  41bb68:	int3   
  41bb69:	jmp    DWORD PTR [edx+0x270857fc]
  41bb6f:	and    ebx,ecx
  41bb71:	push   edi
  41bb72:	xchg   ecx,eax
  41bb73:	int    0xca
  41bb75:	and    DWORD PTR [esi-0x5c],0xffffff84
  41bb79:	xchg   BYTE PTR [ebp+0x208b00db],bl
  41bb7f:	outs   dx,DWORD PTR ds:[esi]
  41bb80:	int3   
  41bb81:	cld    
  41bb82:	jb     0x41bb8f
  41bb84:	pop    esp
  41bb85:	fs in  eax,0x1b
  41bb88:	add    al,0xb9
  41bb8a:	xchg   ebx,eax
  41bb8b:	fiadd  DWORD PTR [eax]
  41bb8d:	add    BYTE PTR [eax],ch
  41bb8f:	inc    esi
  41bb90:	js     0x41bb8b
  41bb92:	push   edx
  41bb93:	mov    ebx,ds
  41bb95:	push   cs
  41bb96:	fst    QWORD PTR [edx+ecx*8-0x33a71baa]
  41bb9d:	cld    
  41bb9e:	mov    ebx,0x9c045bfd
  41bba3:	fild   DWORD PTR [eax]
  41bba5:	mov    eax,DWORD PTR [eax]
  41bba7:	and    BYTE PTR [edi],ch
  41bba9:	int    0xfc
  41bbab:	and    ch,bl
  41bbad:	pop    ebx
  41bbae:	je     0x41bb45
  41bbb0:	sbb    eax,DWORD PTR [edi*8+0x3ff1b7a8]
  41bbb7:	popf   
  41bbb8:	and    ecx,DWORD PTR ds:0xe7029c02
  41bbbe:	add    esi,DWORD PTR [eax+0x3d]
  41bbc1:	rol    DWORD PTR [edi-0x54],1
  41bbc4:	lds    esp,FWORD PTR [ebx+0x47]
  41bbc7:	sub    DWORD PTR ds:0xe8fccb7,ebp
  41bbcd:	fld    QWORD PTR [ebx-0x63]
  41bbd0:	and    DWORD PTR [edx],0xccc28c00
  41bbd6:	jp     0x41bc37
  41bbd8:	(bad)  
  41bbd9:	xchg   ebp,eax
  41bbda:	jle    0x41bc3b
  41bbdc:	xchg   BYTE PTR [esi+0x727f2634],dh
  41bbe2:	retf   0xc4b1
  41bbe5:	mov    dh,0x7e
  41bbe7:	pop    ds
  41bbe8:	mov    cs,WORD PTR [ebx]
  41bbea:	int    0xa1
  41bbec:	xor    DWORD PTR [esi],ebp
  41bbee:	inc    edi
  41bbef:	pop    ecx
  41bbf0:	aas    
  41bbf1:	out    0x3,eax
  41bbf3:	popf   
  41bbf4:	mov    ebx,0xc48bdbab
  41bbf9:	out    0x3,al
  41bbfb:	jne    0x41bbf8
  41bbfd:	jecxz  0x41bbcb
  41bbff:	jns    0x41bbcd
  41bc01:	mov    esi,0xaecc32e8
  41bc06:	fcomp  DWORD PTR [eax+0x976375]
  41bc0c:	addr16 (bad) 
  41bc0e:	lds    esi,FWORD PTR [ebx]
  41bc10:	inc    ebp
  41bc11:	gs inc ebp
  41bc13:	int    0x51
  41bc15:	adc    DWORD PTR [edi-0x57461bd4],esp
  41bc1b:	pop    es
  41bc1c:	popf   
  41bc1d:	ja     0x41bc4b
  41bc1f:	add    BYTE PTR [esi],bl
  41bc21:	ret    
  41bc22:	adc    al,BYTE PTR ds:0x3ffbc3cd
  41bc28:	lea    eax,[edx-0x19]
  41bc2b:	js     0x41bc85
  41bc2d:	fiadd  DWORD PTR [eax-0x15]
  41bc30:	sbb    esp,eax
  41bc32:	adc    al,0x79
  41bc34:	add    bl,bl
  41bc36:	push   DWORD PTR [ecx+0x65fcc6f6]
  41bc3c:	fimul  WORD PTR [edi+0x39]
  41bc3f:	mov    esi,0x720c457b
  41bc44:	cdq    
  41bc45:	jg     0x41bc06
  41bc47:	frstor [ecx-0x5d0b02ce]
  41bc4d:	repnz aas 
  41bc4f:	jmp    0xed660471
  41bc54:	sahf   
  41bc55:	dec    esi
  41bc56:	and    BYTE PTR [esi-0x1695fd9c],bl
  41bc5c:	data16 out dx,al
  41bc5e:	(bad)  
  41bc5f:	call   0xc5b58202
  41bc64:	ret    0x35c6
  41bc67:	push   ss
  41bc68:	mov    bl,0x3b
  41bc6a:	adc    BYTE PTR [ecx+0x7cbf7f9e],ch
  41bc70:	add    BYTE PTR [eax+0x5ebb04e3],ah
  41bc76:	fiadd  DWORD PTR [ecx]
  41bc78:	cmp    DWORD PTR [edi-0x65d4a1db],ebx
  41bc7e:	add    dl,BYTE PTR [ebx+0x72]
  41bc81:	push   ebp
  41bc82:	xor    al,0x4f
  41bc84:	jb     0x41bc5f
  41bc86:	test   ah,0x2c
  41bc89:	push   ebp
  41bc8a:	(bad)  
  41bc8b:	(bad)  
  41bc8c:	call   0x3e013c2f
  41bc91:	jge    0x41bceb
  41bc93:	add    BYTE PTR [esp+edx*4-0x3a],ch
  41bc97:	dec    esi
  41bc98:	fs test dl,cl
  41bc9b:	dec    esi
  41bc9c:	inc    ebx
  41bc9d:	inc    eax
  41bc9e:	xor    edi,ebp
  41bca0:	cld    
  41bca1:	jp     0x41bc95
  41bca3:	aas    
  41bca4:	jmp    0xe4b53fc6
  41bca9:	and    ecx,DWORD PTR [eax-0x4]
  41bcac:	in     eax,0xcd
  41bcae:	std    
  41bcaf:	mov    BYTE PTR [eax],al
  41bcb1:	leave  
  41bcb2:	mov    dh,0xa4
  41bcb4:	pop    es
  41bcb5:	or     ch,bh
  41bcb7:	shr    BYTE PTR cs:[ebp+0x7b],0xde
  41bcbc:	pop    es
  41bcbd:	idiv   DWORD PTR [ebp+edi*4-0x4079f808]
  41bcc4:	push   ebp
  41bcc5:	outs   dx,DWORD PTR ds:[esi]
  41bcc6:	stos   BYTE PTR es:[edi],al
  41bcc7:	dec    edi
  41bcc8:	mov    ebp,DWORD PTR [ebx+eax*2-0x489c173c]
  41bccf:	sti    
  41bcd0:	call   FWORD PTR [edi+0x47096]
  41bcd6:	(bad)  
  41bcd7:	mov    esi,0xc2a56e7
  41bcdc:	sti    
  41bcdd:	jne    0x41bc9b
  41bcdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce0:	pop    edx
  41bce1:	sti    
  41bce2:	xor    BYTE PTR [edi-0x4fc60f79],0x71
  41bce9:	add    al,0xc6
  41bceb:	mov    esi,0x424141e7
  41bcf0:	push   ds
  41bcf1:	dec    DWORD PTR [edi]
  41bcf3:	jge    0x41bd2c
  41bcf5:	lock pop ss
  41bcf7:	mov    dl,0x86
  41bcf9:	adc    esp,edi
  41bcfb:	repz push es
  41bcfd:	mov    ah,BYTE PTR [esi+edi*1+0xe]
  41bd01:	mov    bh,BYTE PTR [ecx+0x74883dc1]
  41bd07:	(bad)  
  41bd08:	ss enter 0xdac6,0x66
  41bd0d:	add    dh,bl
  41bd0f:	push   es
  41bd10:	sti    
  41bd11:	ja     0x41bd63
  41bd13:	stc    
  41bd14:	push   ebp
  41bd15:	dec    DWORD PTR [ebx+0x7415fb02]
  41bd1b:	mov    dh,0x3c
  41bd1d:	add    cl,ah
  41bd1f:	in     eax,dx
  41bd20:	cli    
  41bd21:	neg    DWORD PTR [edi-0x50]
  41bd24:	xlat   BYTE PTR ds:[ebx]
  41bd25:	push   esi
  41bd26:	adc    cl,cl
  41bd28:	in     al,0xa7
  41bd2a:	popf   
  41bd2b:	xchg   ebp,eax
  41bd2c:	(bad)  
  41bd2d:	cld    
  41bd2e:	pop    ss
  41bd2f:	ins    DWORD PTR es:[edi],dx
  41bd30:	es pop ecx
  41bd32:	js     0x41bda1
  41bd34:	cld    
  41bd35:	jmp    FWORD PTR [ecx+0x34]
  41bd38:	aad    0x7e
  41bd3a:	add    cl,bh
  41bd3c:	adc    eax,DWORD PTR [ebx]
  41bd3e:	add    BYTE PTR [ebp+0x53d9151c],bl
  41bd44:	jecxz  0x41bd6c
  41bd46:	adc    al,0x69
  41bd48:	mov    ch,0xc9
  41bd4a:	jb     0x41bcd9
  41bd4c:	inc    ebx
  41bd4d:	fdiv   DWORD PTR ds:0x6de50e2
  41bd53:	ins    DWORD PTR es:[edi],dx
  41bd54:	dec    eax
  41bd55:	push   eax
  41bd56:	adc    ch,al
  41bd58:	jg     0x41bd26
  41bd5a:	cld    
  41bd5b:	retf   0xd124
  41bd5e:	cmp    dh,cl
  41bd60:	ja     0x41bd86
  41bd62:	mov    DWORD PTR [eax-0x49],esp
  41bd65:	xor    DWORD PTR [ebx-0x338ac10],ecx
  41bd6b:	stos   BYTE PTR es:[edi],al
  41bd6c:	add    ebx,DWORD PTR [edi+ecx*2-0x63]
  41bd70:	stos   DWORD PTR es:[edi],eax
  41bd71:	pop    edx
  41bd72:	add    ebp,DWORD PTR [eax]
  41bd74:	xchg   al,dl
  41bd76:	push   edi
  41bd77:	test   DWORD PTR [ecx-0x5e62ffcd],esp
  41bd7d:	ja     0x41bd01
  41bd7f:	xor    eax,0xcdfcc6b1
  41bd84:	xor    al,0xbf
  41bd86:	dec    edi
  41bd87:	and    dh,ah
  41bd89:	out    dx,eax
  41bd8a:	dec    edi
  41bd8b:	jne    0x41bd9c
  41bd8d:	pop    es
  41bd8e:	std    
  41bd8f:	bound  ebp,QWORD PTR [eax+eax*8]
  41bd92:	psubd  mm5,QWORD PTR [esp+ecx*8]
  41bd96:	cld    
  41bd97:	leave  
  41bd98:	loopne 0x41bd61
  41bd9a:	jb     0x41bd4d
  41bd9c:	and    al,0x3d
  41bd9e:	or     BYTE PTR [eax],al
  41bda0:	out    dx,al
  41bda1:	jo     0x41bdf6
  41bda3:	or     BYTE PTR [edx],bh
  41bda5:	add    bh,ah
  41bda7:	daa    
  41bda8:	mov    es,WORD PTR [edx-0x19]
  41bdab:	test   BYTE PTR [edx],dh
  41bdad:	add    ebx,DWORD PTR [esi+eax*1]
  41bdb0:	pop    ss
  41bdb1:	fimul  DWORD PTR [ebp-0x1b554eb1]
  41bdb7:	int    0x10
  41bdb9:	rcl    DWORD PTR [esp+ebx*8],0xb2
  41bdbd:	mov    esp,0x8c60c974
  41bdc2:	test   eax,0xf6c3e22d
  41bdc7:	add    ecx,DWORD PTR [esi-0x73]
  41bdca:	dec    edx
  41bdcb:	test   esi,esi
  41bdcd:	dec    ebp
  41bdce:	pop    ebp
  41bdcf:	aas    
  41bdd0:	xchg   ebp,eax
  41bdd1:	adc    bh,BYTE PTR [edx-0x26c54884]
  41bdd7:	inc    ebx
  41bdd8:	popf   
  41bdd9:	pop    ecx
  41bdda:	mov    bl,0x58
  41bddc:	sbb    al,0x40
  41bdde:	jecxz  0x41bdf5
  41bde0:	dec    ebx
  41bde1:	sub    esi,DWORD PTR ds:0x8b34ba02
  41bde7:	pop    ebp
  41bde8:	lahf   
  41bde9:	(bad)  
  41bdea:	fwait
  41bdeb:	ret    
  41bdec:	push   edx
  41bded:	stos   BYTE PTR es:[edi],al
  41bdee:	add    BYTE PTR [ebx*4-0x56adf1fe],dh
  41bdf5:	mov    ebp,DWORD PTR ds:0x970b08c9
  41bdfb:	enter  0x536d,0x81
  41bdff:	sti    
  41be00:	jmp    0x23e8:0xdc1d8b
  41be07:	out    0x3,eax
  41be09:	sbb    ebx,eax
  41be0b:	push   edx
  41be0c:	or     edi,esi
  41be0e:	add    esp,DWORD PTR [esi+eax*2+0x69]
  41be12:	pop    ebx
  41be13:	mov    edi,0xe702eabe
  41be18:	jbe    0x41bdf9
  41be1a:	or     dl,BYTE PTR [edi]
  41be1c:	leave  
  41be1d:	shl    dh,1
  41be1f:	inc    eax
  41be21:	fsubr  DWORD PTR [ebp+0x7fbbaefc]
  41be27:	jae    0x41be33
  41be29:	sbb    BYTE PTR ds:0x5bcce908,bh
  41be2f:	push   0xffffffe8
  41be31:	outs   dx,BYTE PTR ds:[esi]
  41be32:	mov    DWORD PTR [edx-0x1f],eax
  41be35:	js     0x41be38
  41be37:	push   esi
  41be38:	xchg   ecx,eax
  41be39:	in     al,0xbd
  41be3b:	cld    
  41be3c:	jle    0x41bdc7
  41be3e:	inc    ebp
  41be3f:	adc    al,0x6c
  41be41:	fidiv  WORD PTR [ebx]
  41be43:	dec    eax
  41be44:	add    esp,DWORD PTR [ecx+0x50f975bd]
  41be4a:	push   es
  41be4b:	jmp    0x187fdf70
  41be50:	jmp    0xe837b5a8
  41be55:	lahf   
  41be56:	ss xor al,0x74
  41be59:	pop    ebx
  41be5a:	jbe    0x41be8c
  41be5c:	sub    esi,esp
  41be5e:	cmp    edx,DWORD PTR [eax-0x17]
  41be61:	sahf   
  41be62:	mov    ebp,0xc639dd75
  41be67:	cld    
  41be68:	lahf   
  41be69:	add    BYTE PTR [esi+0x6e3afd4f],dh
  41be6f:	sub    al,0x8
  41be71:	mov    cl,0x21
  41be73:	into   
  41be74:	out    0x9,eax
  41be76:	add    BYTE PTR [ebx],al
  41be78:	add    BYTE PTR [ebp+0x5e],ch
  41be7b:	xor    edx,DWORD PTR [eax]
  41be7d:	jb     0x41be5b
  41be7f:	push   cs
  41be80:	push   0xffffffe9
  41be82:	push   ebp
  41be83:	xor    eax,0x589f8308
  41be88:	call   0xfd001a23
  41be8d:	ds mov dh,0xc7
  41be90:	shr    ebp,0x9e
  41be93:	xor    ebp,0x55
  41be96:	or     BYTE PTR [ecx-0x7157fff6],0x3f
  41be9d:	add    BYTE PTR [edi-0x3d],al
  41bea0:	or     ecx,0x1587b180
  41bea6:	pushf  
  41bea7:	mov    ?,WORD PTR [edi]
  41bea9:	add    BYTE PTR ds:0x740e7411,bh
  41beaf:	test   DWORD PTR [esi+0x33488],edi
  41beb5:	cmp    eax,DWORD PTR [ebp+0x54]
  41beb8:	in     eax,dx
  41beb9:	or     DWORD PTR [edi+eax*8-0x41],0xffffff8b
  41bebe:	stc    
  41bebf:	push   ss
  41bec0:	mov    eax,0x50f3f443
  41bec5:	push   esi
  41bec6:	xchg   DWORD PTR [ecx-0x5],edi
  41bec9:	xor    eax,esp
  41becb:	out    dx,eax
  41becc:	mov    dh,0x88
  41bece:	add    ah,dh
  41bed0:	add    al,BYTE PTR [eax]
  41bed2:	test   DWORD PTR [ebp-0x4e74dbae],edi
  41bed8:	push   ds
  41bed9:	mov    eax,0xd33bc443
  41bede:	sbb    DWORD PTR [esi-0xbf68bfa],0x3
  41bee5:	iret   
  41bee6:	cmp    eax,DWORD PTR [ebp-0x55140bac]
  41beec:	cmp    esi,ebp
  41beee:	imul   ecx,DWORD PTR [ebx-0x4b0002c2],0x9c8bfe03
  41bef8:	push   ebx
  41bef9:	sub    eax,0x847f2d41
  41befe:	add    BYTE PTR [edx+eax*1-0x42],dh
  41bf02:	sub    ah,cl
  41bf04:	inc    ecx
  41bf05:	add    al,ch
  41bf07:	push   esp
  41bf08:	retf   0xfffa
  41bf0b:	add    dl,al
  41bf0d:	jo     0x41bf51
  41bf0f:	out    dx,eax
  41bf10:	sbb    ch,BYTE PTR [eax+edi*4]
  41bf13:	popf   
  41bf14:	call   0xbfe2bc1c
  41bf19:	mov    BYTE PTR [eax-0x63],al
  41bf1c:	xor    al,cl
  41bf1e:	dec    dx
  41bf20:	xor    al,0x1
  41bf22:	add    BYTE PTR [ebp-0xad7f858],bl
  41bf28:	call   0xf8bd3330
  41bf2d:	sub    al,0xe8
  41bf2f:	std    
  41bf30:	(bad)  
  41bf35:	lock pop ds
  41bf37:	adc    al,0xce
  41bf39:	jo     0x41bf7c
  41bf3b:	push   0xffffff9d
  41bf3d:	ss dec esi
  41bf3f:	sbb    BYTE PTR [eiz*4-0x7c66a385],dl
  41bf46:	jecxz  0x41bf58
  41bf48:	pushf  
  41bf49:	stos   DWORD PTR es:[edi],eax
  41bf4a:	xor    DWORD PTR [ebx-0x28241c96],ecx
  41bf50:	mov    gs,WORD PTR [edx+0x20435d00]
  41bf56:	rcr    BYTE PTR [edx+0x76],0xe9
  41bf5a:	cld    
  41bf5b:	jmp    DWORD PTR [edi]
  41bf5d:	jno    0x41bf4f
  41bf5f:	push   ebp
  41bf60:	jb     0x41bf1a
  41bf62:	lds    esi,FWORD PTR [eax]
  41bf64:	(bad)  [esi]
  41bf66:	mov    esp,0x52209873
  41bf6b:	or     al,0x26
  41bf6d:	dec    dl
  41bf6f:	add    DWORD PTR [edi+0x1e3ff696],ebx
  41bf75:	jmp    0xe8d1:0x995c3910
  41bf7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf7d:	nop
  41bf7e:	shr    BYTE PTR [edi],0x9e
  41bf81:	in     eax,0x79
  41bf83:	test   DWORD PTR [eax],0x646943ca
  41bf89:	jnp    0x41c002
  41bf8b:	jo     0x41bf2e
  41bf8d:	add    cl,bh
  41bf8f:	jns    0x41c002
  41bf91:	mov    esp,0x362280dd
  41bf96:	bnd js 0x41bf99
  41bf99:	fst    QWORD PTR [edx]
  41bf9b:	(bad)  
  41bf9c:	int3   
  41bf9d:	lds    edi,FWORD PTR [ebp-0x7074ff0a]
  41bfa3:	add    ebx,DWORD PTR es:[edx]
  41bfa6:	inc    ecx
  41bfa7:	xlat   BYTE PTR ds:[ebx]
  41bfa8:	dec    edi
  41bfa9:	mov    ds:0x1bfc2989,al
  41bfae:	inc    ebp
  41bfaf:	jmp    0x41bf6e
  41bfb1:	mov    eax,ds:0xc1bd7200
  41bfb6:	pop    esp
  41bfb7:	stos   BYTE PTR es:[edi],al
  41bfb8:	cs and al,0x33
  41bfbb:	not    DWORD PTR [eax]
  41bfbd:	fst    QWORD PTR [esp+ebp*2-0x32]
  41bfc1:	mov    ds,WORD PTR [eax]
  41bfc3:	jb     0x41c010
  41bfc5:	cdq    
  41bfc6:	mov    DWORD PTR [edi],ebx
  41bfc8:	clc    
  41bfc9:	and    eax,0x9949afd3
  41bfce:	aaa    
  41bfcf:	in     al,dx
  41bfd0:	int    0x9c
  41bfd2:	add    bl,dl
  41bfd4:	mul    BYTE PTR [edx-0x6bebd77f]
  41bfda:	(bad)  
  41bfdb:	fcom   st(5)
  41bfdd:	(bad)  
  41bfde:	ret    0x25a5
  41bfe1:	fsubr  QWORD PTR [eax]
  41bfe3:	daa    
  41bfe4:	adc    al,0x9c
  41bfe6:	ret    
  41bfe7:	inc    ecx
  41bfe8:	into   
  41bfe9:	and    al,0x4
  41bfeb:	jg     0x41bfef
  41bfed:	cs dec ebx
  41bfef:	dec    edi
  41bff0:	add    esi,DWORD PTR [ecx]
  41bff2:	or     eax,0x87953e72
  41bff7:	es push eax
  41bff9:	int3   
  41bffa:	push   edx
  41bffb:	jmp    FWORD PTR [eax+eax*1-0x26fa43bf]
  41c002:	mov    ch,0xbb
  41c004:	je     0x41bffd
  41c006:	adc    eax,0x56d90045
  41c00b:	mov    edx,0xbd9ee975
  41c010:	jne    0x41c003
  41c012:	inc    esi
  41c013:	enter  0xdff4,0x59
  41c017:	mov    edi,0xc076fd75
  41c01c:	hlt    
  41c01d:	iret   
  41c01e:	pop    ecx
  41c01f:	mov    edi,0x78690975
  41c024:	hlt    
  41c025:	mov    edi,0x175bf59
  41c02a:	pop    ecx
  41c02b:	jo     0x41c021
  41c02d:	scas   eax,DWORD PTR es:[edi]
  41c02e:	pop    ecx
  41c02f:	sub    dh,BYTE PTR [eax]
  41c031:	aas    
  41c032:	dec    ecx
  41c033:	popf   
  41c034:	neg    DWORD PTR [edi-0x14fa39a7]
  41c03a:	fst    QWORD PTR [edx+0x53]
  41c03d:	aaa    
  41c03e:	ror    BYTE PTR [ecx-0x7c1fef09],0xff
  41c045:	call   0xc17cc1e8
  41c04a:	es inc ebx
  41c04c:	add    BYTE PTR [edx-0x3e8b4135],bh
  41c052:	addr16 out dx,al
  41c054:	out    0x73,eax
  41c056:	sar    DWORD PTR [ebp+0x326956fc],1
  41c05c:	call   0xfcffa1cc
  41c061:	inc    esi
  41c062:	add    BYTE PTR [ecx],bl
  41c064:	cmp    al,0x0
  41c066:	jmp    0x3eb66b09
  41c06b:	loopne 0x41c02b
  41c06d:	xor    BYTE PTR [edx],dl
  41c06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c070:	sub    eax,0x8aad9f10
  41c075:	je     0x41c064
  41c077:	popf   
  41c078:	scas   eax,DWORD PTR es:[edi]
  41c079:	out    0x87,eax
  41c07b:	popa   
  41c07c:	mov    esi,0xc01daafc
  41c081:	das    
  41c082:	add    BYTE PTR [edi-0x1a],bl
  41c085:	(bad)  
  41c087:	xchg   ecx,eax
  41c088:	(bad)  
  41c089:	jae    0x41c097
  41c08b:	pushf  
  41c08c:	in     al,dx
  41c08d:	repnz inc BYTE PTR [ebx-0x4847d79f]
  41c094:	push   es
  41c095:	xchg   eax,edi
  41c097:	stc    
  41c098:	(bad)  
  41c099:	jo     0x41c0ec
  41c09b:	mov    edi,0x87b82819
  41c0a0:	push   es
  41c0a1:	xchg   eax,ecx
  41c0a3:	in     eax,dx
  41c0a4:	int    0x84
  41c0a6:	add    BYTE PTR [edi+edi*8],dh
  41c0a9:	mov    BYTE PTR [ebp+edx*2+0x3fffaf7],cl
  41c0b0:	xor    DWORD PTR ds:0x7d0d8900,0xffffffe9
  41c0b7:	lods   al,BYTE PTR ds:[esi]
  41c0b8:	push   es
  41c0b9:	add    BYTE PTR [eax],al
  41c0bb:	ret    
  41c0bc:	stc    
  41c0bd:	icebp  
  41c0be:	cmp    ebp,DWORD PTR [edx+edi*8]
  41c0c1:	sub    DWORD PTR [ebp+0x520df923],eax
  41c0c7:	add    BYTE PTR [ebx*1-0x5a8c010d],ch
  41c0ce:	cmp    DWORD PTR [eax],ebp
  41c0d0:	lods   al,BYTE PTR ds:[esi]
  41c0d1:	inc    ebx
  41c0d2:	add    bl,ch
  41c0d4:	out    0x8b,al
  41c0d6:	retf   
  41c0d7:	imul   ebp,DWORD PTR [ebp-0x3b000372],0x7b82480
  41c0e1:	jmp    edi
  41c0e3:	cmp    eax,0x89fbc08a
  41c0e8:	shr    DWORD PTR [edx+0x1fc443b4],0x5e
  41c0ef:	pop    ebp
  41c0f0:	pinsrw mm2,WORD PTR [ecx-0x75],0x90
  41c0f5:	test   eax,ebp
  41c0f7:	lods   al,BYTE PTR ds:[esi]
  41c0f8:	lods   al,BYTE PTR ds:[esi]
  41c0f9:	(bad)  
  41c0fa:	call   DWORD PTR [ebp-0x63]
  41c0fd:	test   ebx,edi
  41c0ff:	mov    cl,BYTE PTR [eax-0x70]
  41c102:	sar    esp,0x8a
  41c105:	fs test al,0x15
  41c108:	shr    DWORD PTR [ebx-0x77df7500],cl
  41c10e:	mov    ebp,0x2a9c72fc
  41c113:	add    BYTE PTR [ebp+0x0],dh
  41c116:	mov    dl,0xff
  41c118:	bound  esp,QWORD PTR [eax]
  41c11a:	ror    DWORD PTR [ecx+eiz*1],0xf7
  41c11e:	add    al,BYTE PTR [eax]
  41c120:	popf   
  41c121:	and    al,0xc7
  41c123:	dec    edi
  41c124:	sbb    BYTE PTR [edi],ah
  41c126:	and    eax,0x507942f9
  41c12b:	push   eax
  41c12c:	add    BYTE PTR [ebp+0x4],al
  41c12f:	mov    cl,0xff
  41c131:	xor    bl,BYTE PTR [edi]
  41c133:	ror    DWORD PTR [ecx+eiz*1],0x9f
  41c137:	add    eax,DWORD PTR [eax]
  41c139:	popf   
  41c13a:	adc    eax,0x37908afd
  41c13f:	pop    ecx
  41c140:	call   0x45d835
  41c145:	push   ss
  41c146:	push   0x50
  41c148:	mov    ebx,DWORD PTR [eax]
  41c14a:	add    BYTE PTR [ebp-0x70e40504],bh
  41c150:	adc    BYTE PTR [ecx+0x32],0xc2
  41c154:	cld    
  41c155:	dec    ebp
  41c156:	push   ebx
  41c157:	ret    0x9ded
  41c15a:	stos   DWORD PTR es:[edi],eax
  41c15b:	xchg   DWORD PTR [edi-0xead856],edi
  41c161:	shr    BYTE PTR [ebx+0x4269828f],cl
  41c167:	ret    0x6dfc
  41c16a:	clc    
  41c16b:	pop    ss
  41c16c:	cmp    BYTE PTR [edi-0x4a7eff95],cl
  41c172:	call   0x2ed4588
  41c177:	out    0x3,eax
  41c179:	popf   
  41c17a:	sub    al,0xdb
  41c17c:	nop
  41c17d:	bswap  ebx
  41c17f:	scas   al,BYTE PTR es:[edi]
  41c180:	stos   DWORD PTR es:[edi],eax
  41c181:	xor    BYTE PTR [edi-0x19],al
  41c184:	add    esi,edi
  41c186:	div    DWORD PTR [ebx+0x38]
  41c189:	dec    ebp
  41c18a:	pop    edx
  41c18b:	setbe  bh
  41c18e:	add    ah,bh
  41c190:	sub    eax,0x7387b300
  41c195:	mov    bl,0xd2
  41c197:	stos   BYTE PTR es:[edi],al
  41c198:	outs   dx,BYTE PTR ds:[esi]
  41c199:	dec    edi
  41c19a:	popf   
  41c19b:	add    bh,BYTE PTR [edx]
  41c19d:	retf   0xb9df
  41c1a0:	out    0x58,al
  41c1a2:	mov    al,ds:0xdac12370
  41c1a7:	xchg   DWORD PTR [ebx],ebp
  41c1a9:	int3   
  41c1aa:	shr    BYTE PTR [ecx+esi*8],cl
  41c1ad:	pop    esp
  41c1ae:	es aaa 
  41c1b0:	xchg   ebx,eax
  41c1b1:	lods   al,BYTE PTR ds:[esi]
  41c1b2:	mov    ds:0xd3c1adfc,eax
  41c1b7:	pop    ebx
  41c1b8:	push   0xffffffbc
  41c1ba:	and    ecx,DWORD PTR [eax]
  41c1bc:	imul   edi,DWORD PTR [edx+0x1a],0xffffffb9
  41c1c0:	out    0x8e,al
  41c1c2:	pop    ds
  41c1c3:	push   esi
  41c1c4:	nop
  41c1c5:	ror    DWORD PTR [ecx],0x52
  41c1c8:	adc    ecx,eax
  41c1ca:	pop    ss
  41c1cb:	aas    
  41c1cc:	aaa    
  41c1cd:	push   esp
  41c1ce:	and    al,0xc1
  41c1d0:	push   ss
  41c1d1:	ror    DWORD PTR [edi-0x62bc27be],0x8d
  41c1d8:	pop    esi
  41c1d9:	test   ecx,esp
  41c1db:	mov    eax,0x22f87ed
  41c1e0:	out    0x3,eax
  41c1e2:	es jg  0x41c18f
  41c1e5:	mov    edx,0x2b96b8c9
  41c1ea:	cdq    
  41c1eb:	add    esp,edi
  41c1ed:	add    esp,DWORD PTR [esi]
  41c1ef:	jg     0x41c1f0
  41c1f1:	(bad)  
  41c1f2:	repz mov ch,0xfc
  41c1f5:	cdq    
  41c1f6:	add    BYTE PTR [ecx+0x5a7455ae],dh
  41c1fc:	mov    dl,0x4f
  41c1fe:	ins    BYTE PTR es:[edi],dx
  41c1ff:	loop   0x41c1d7
  41c201:	dec    edi
  41c202:	push   ss
  41c203:	stos   BYTE PTR es:[edi],al
  41c204:	test   BYTE PTR [esi],0xa9
  41c207:	sahf   
  41c208:	cmp    DWORD PTR [edi-0x7d744183],0xffffff8d
  41c20f:	cmp    esi,DWORD PTR [edi+0x75778ffc]
  41c215:	imul   ebp,esp,0x5d
  41c218:	mov    bh,0x73
  41c21a:	std    
  41c21b:	mov    ah,0x81
  41c21d:	aaa    
  41c21e:	push   cs
  41c21f:	xchg   edx,eax
  41c220:	add    BYTE PTR [edx+0x35],ch
  41c223:	mul    BYTE PTR [eax]
  41c225:	xchg   ecx,esp
  41c227:	and    DWORD PTR [eax+0x1],edi
  41c22a:	dec    edi
  41c22b:	inc    esi
  41c22c:	call   0xb7638fa3
  41c231:	(bad)  
  41c232:	cmp    eax,DWORD PTR [edi-0x73]
  41c235:	cmp    BYTE PTR ds:0x39fcb6ea,0x12
  41c23c:	test   DWORD PTR [ebx-0x5e],esp
  41c23f:	fnsave [esi+0x541b644f]
  41c245:	cmc    
  41c246:	mov    ds,ebp
  41c248:	inc    edi
  41c249:	call   0xfcfa0f27
  41c24e:	fidiv  WORD PTR fs:[ebx]
  41c251:	sbb    ah,BYTE PTR [ebx+eiz*1+0x54]
  41c255:	cmc    
  41c256:	outs   dx,BYTE PTR ds:[esi]
  41c257:	(bad)  [edx+0x13007405]
  41c25d:	sub    al,0xfb
  41c25f:	pop    esi
  41c260:	fisttp QWORD PTR [edx+0x1006e152]
  41c266:	add    cl,ch
  41c268:	sahf   
  41c269:	jle    0x41c22a
  41c26b:	add    BYTE PTR [eax],al
  41c26d:	or     esi,edi
  41c26f:	inc    ebp
  41c270:	jnp    0x41c1f5
  41c272:	jns    0x41c273
  41c274:	outs   dx,BYTE PTR ds:[esi]
  41c275:	adc    al,BYTE PTR [edx-0x43d84d5]
  41c27b:	pop    edi
  41c27c:	fbld   TBYTE PTR [ecx]
  41c27e:	(bad)
  41c281:	add    edx,DWORD PTR [ecx-0x75]
  41c284:	cwde   
  41c285:	test   al,ch
  41c287:	ins    BYTE PTR es:[edi],dx
  41c288:	ja     0x41c28d
  41c28a:	add    BYTE PTR [esi+0x23],dl
  41c28d:	in     eax,0x39
  41c28f:	(bad)  
  41c290:	icebp  
  41c291:	pop    edi
  41c292:	push   esp
  41c293:	mov    DWORD PTR [ecx],edx
  41c295:	outs   dx,DWORD PTR ds:[esi]
  41c296:	xchg   ecx,edi
  41c298:	pushf  
  41c299:	xchg   BYTE PTR [eax+0x0],cl
  41c29c:	je     0x41c22a
  41c29e:	ret    0x9350
  41c2a1:	xchg   ecx,eax
  41c2a2:	adc    DWORD PTR [eax+ebp*2+0x5c50fb77],0x3400ea33
  41c2ad:	mov    bh,BYTE PTR [edi+ecx*1-0x2c540]
  41c2b4:	inc    esp
  41c2b5:	mov    ah,0xf2
  41c2b7:	push   esi
  41c2b8:	fdivr  QWORD PTR [esi-0x4]
  41c2bb:	push   DWORD PTR [ecx+ebp*8]
  41c2be:	add    DWORD PTR [esi+0x0],edx
  41c2c1:	scas   al,BYTE PTR es:[edi]
  41c2c2:	std    
  41c2c3:	add    BYTE PTR [si],al
  41c2c6:	add    eax,DWORD PTR [eax-0x73]
  41c2c9:	sbb    DWORD PTR [edx+0x4e1bfff8],0x113415fb
  41c2d3:	inc    eax
  41c2d4:	add    BYTE PTR [ebp+0x49],bh
  41c2d7:	cld    
  41c2d8:	sub    DWORD PTR [edi+esi*2+0xb],0xffffff84
  41c2dd:	ins    DWORD PTR es:[edi],dx
  41c2de:	(bad)  
  41c2df:	(bad)  
  41c2e0:	call   DWORD PTR [edi]
  41c2e2:	jmp    0x8edf5021
  41c2e7:	lahf   
  41c2e8:	std    
  41c2e9:	retf   0x5c47
  41c2ec:	xor    ah,dh
  41c2ee:	push   eax
  41c2ef:	add    ecx,DWORD PTR [ebp+ebx*4-0x57]
  41c2f3:	push   edx
  41c2f4:	mov    DWORD PTR [eax-0x53],ebp
  41c2f7:	push   cs
  41c2f8:	inc    eax
  41c2f9:	popf   
  41c2fa:	push   esi
  41c2fb:	inc    edi
  41c2fc:	clc    
  41c2fd:	dec    ebp
  41c2fe:	and    BYTE PTR [esi-0x1],al
  41c301:	call   0xbe30:0x188b55ac
  41c308:	cld    
  41c309:	mov    bh,BYTE PTR [ebp+edi*4+0x72]
  41c30d:	cmp    ebp,0x305d82d5
  41c313:	cmc    
  41c314:	ss lock mov bl,0x37
  41c318:	sub    eax,0xffb5271e
  41c31d:	out    dx,al
  41c31e:	or     BYTE PTR [ebp+0x17d55172],bh
  41c324:	js     0x41c326
  41c326:	scas   eax,DWORD PTR es:[edi]
  41c327:	jmp    0x41c32c
  41c329:	push   0xffffff9d
  41c32b:	and    BYTE PTR [ecx+0x50c3d88a],bh
  41c331:	push   ebp
  41c332:	cmp    ch,bh
  41c334:	mov    bh,0xfc
  41c336:	test   al,0x6f
  41c338:	mov    ebp,0x346c20d5
  41c33d:	pop    es
  41c33e:	fidivr WORD PTR fs:[ebx+0x458a172]
  41c345:	jmp    0xfd1b9ce9
  41c34a:	nop
  41c34b:	xchg   DWORD PTR [ebp+0x40d9b112],edi
  41c351:	add    dl,bh
  41c353:	scas   al,BYTE PTR es:[edi]
  41c354:	mov    esp,0xf4b88fc
  41c359:	inc    eax
  41c35a:	popf   
  41c35b:	pop    ds
  41c35c:	ficomp DWORD PTR [eax+0x68]
  41c35f:	add    dh,bl
  41c361:	nop
  41c362:	pop    ds
  41c363:	(bad)  
  41c364:	pop    edx
  41c365:	mov    esi,0x2b3f52d1
  41c36a:	cmp    eax,0xd5e4db5
  41c36f:	add    al,0xa5
  41c371:	int3   
  41c372:	fisttp QWORD PTR [edi+0x72]
  41c375:	scas   eax,DWORD PTR es:[edi]
  41c376:	sbb    eax,0x6783bea7
  41c37b:	xchg   edx,eax
  41c37c:	jbe    0x41c3c0
  41c37e:	popf   
  41c37f:	add    edi,DWORD PTR [edx+0x1689f055]
  41c385:	push   cs
  41c386:	sbb    edx,DWORD PTR [esi-0x62fffc1a]
  41c38c:	sub    ah,BYTE PTR [edi+0x602dd35]
  41c392:	sbb    BYTE PTR [ebp+0x10],cl
  41c395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c396:	add    ebx,DWORD PTR [esi]
  41c398:	ret    0x87e5
  41c39b:	and    eax,DWORD PTR [edx]
  41c39d:	out    0x3,eax
  41c39f:	push   ds
  41c3a0:	lods   al,BYTE PTR ds:[esi]
  41c3a1:	pop    edx
  41c3a2:	ds ret 
  41c3a4:	sbb    DWORD PTR [esp+eax*1],0xbd3d3ac9
  41c3ab:	scas   eax,DWORD PTR es:[edi]
  41c3ac:	cmp    al,0x43
  41c3af:	popf   
  41c3b0:	xchg   edx,ebp
  41c3b2:	xchg   BYTE PTR [edx+eax*1-0x5532fc19],bl
  41c3b9:	fdiv   QWORD PTR [edi-0x439e4ad8]
  41c3bf:	pop    ds
  41c3c0:	mov    ch,0x1a
  41c3c2:	daa    
  41c3c3:	and    al,0xcd
  41c3c5:	jno    0x41c395
  41c3c7:	cli    
  41c3c8:	xchg   ecx,eax
  41c3c9:	iret   
  41c3ca:	mov    esp,0x375c4d09
  41c3cf:	or     eax,0x2bdae81
  41c3d4:	hlt    
  41c3d5:	mov    edi,0x4cf1bc
  41c3da:	arpl   cx,cx
  41c3dc:	pushf  
  41c3dd:	adc    BYTE PTR [ebp+0x23],dh
  41c3e0:	mov    dh,0x83
  41c3e2:	inc    edx
  41c3e3:	xchg   ebp,eax
  41c3e4:	ds push 0xffffffa9
  41c3e7:	and    edi,DWORD PTR [eax]
  41c3e9:	cwde   
  41c3ea:	mov    cl,0xf6
  41c3ec:	cld    
  41c3ed:	dec    eax
  41c3ee:	jmp    0x72f961f3
  41c3f3:	cmp    DWORD PTR [esi+edi*4],esp
  41c3f6:	dec    edi
  41c3f7:	ins    BYTE PTR es:[edi],dx
  41c3f8:	pop    edx
  41c3f9:	mov    dh,0x4f
  41c3fb:	inc    ecx
  41c3fc:	int3   
  41c3fd:	in     al,dx
  41c3fe:	cld    
  41c3ff:	cs sbb al,0xc1
  41c402:	or     ebp,DWORD PTR [ecx+eiz*2+0x7]
  41c406:	popf   
  41c407:	sub    al,BYTE PTR [ecx-0x45]
  41c40a:	aaa    
  41c40b:	push   ss
  41c40c:	dec    eax
  41c40d:	sbb    al,0x95
  41c410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c411:	mov    ch,0x72
  41c413:	add    eax,0xfefb9c49
  41c418:	xor    DWORD PTR [edi-0x2fc90a8e],esi
  41c41e:	lock out dx,eax
  41c420:	and    DWORD PTR [ebx-0x555eacfc],ebp
  41c426:	aam    0xdd
  41c428:	adc    DWORD PTR [edi-0x441bc8a4],esi
  41c42e:	shl    BYTE PTR [esp+edx*1],0xa8
  41c432:	adc    ch,0x96
  41c435:	push   ecx
  41c436:	push   esi
  41c437:	push   ss
  41c438:	sub    al,0xdb
  41c43a:	addr16 in eax,0xa6
  41c43d:	inc    edx
  41c43e:	add    BYTE PTR [edx-0x12],ah
  41c441:	jl     0x41c45d
  41c443:	rcl    DWORD PTR [esi-0x4c8fffbe],1
  41c449:	out    0xb7,al
  41c44b:	sub    ah,BYTE PTR [ecx-0x536aed4b]
  41c451:	inc    edx
  41c452:	add    BYTE PTR [eax],al
  41c454:	add    BYTE PTR [edi+0x3c],ch
  41c457:	or     BYTE PTR [ebx+0x4037d8],ah
  41c45d:	jg     0x41c49b
  41c45f:	or     al,0xa3
  41c461:	jo     0x41c491
  41c463:	inc    eax
  41c464:	add    BYTE PTR [edi+0x3c],cl
  41c467:	adc    BYTE PTR [ebx+0x4037c4],ah
  41c46d:	aas    
  41c46e:	cmp    al,0x14
  41c470:	mov    ds:0x4036a8,eax
  41c475:	das    
  41c476:	cmp    al,0x18
  41c478:	push   0xffffffb6
  41c47a:	and    dh,ch
  41c47c:	mov    bh,0xf7
  41c47e:	dec    DWORD PTR [eax-0x7aa8a383]
  41c484:	xor    eax,0x403788
  41c489:	lods   al,BYTE PTR ds:[esi]
  41c48a:	in     al,0x49
  41c48c:	add    BYTE PTR [edx+ecx*4-0x3d],dh
  41c490:	push   eax
  41c491:	dec    edx
  41c492:	mov    dh,BYTE PTR [ecx]
  41c494:	mov    esp,0xff003f56
  41c499:	mov    ch,cl
  41c49b:	mov    cs:0x402f68,eax
  41c4a1:	shl    esp,0xef
  41c4a4:	pop    eax
  41c4a5:	ins    BYTE PTR es:[edi],dx
  41c4a6:	dec    ebp
  41c4a7:	dec    edx
  41c4a8:	add    BYTE PTR [esp+eax*4-0x3d],al
  41c4ac:	push   eax
  41c4ad:	jae    0x41c460
  41c4af:	add    BYTE PTR [eax-0x29050189],bh
  41c4b5:	into   
  41c4b6:	mov    dl,0x9f
  41c4b8:	or     BYTE PTR [eax],al
  41c4ba:	sbb    al,0x3b
  41c4bc:	add    BYTE PTR [ebp-0x17ab918f],cl
  41c4c2:	sub    al,BYTE PTR [ebp+0x0]
  41c4c5:	add    BYTE PTR [edi-0x1600b341],cl
  41c4cb:	mov    dl,0xb4
  41c4cd:	inc    ebx
  41c4ce:	popf   
  41c4cf:	test   eax,0xce77d5b9
  41c4d4:	adc    esi,DWORD PTR gs:[edx]
  41c4d7:	call   0x91b24fdf
  41c4dc:	pop    ebx
  41c4dd:	call   0x45a468
  41c4e2:	push   ss
  41c4e3:	pop    esp
  41c4e4:	push   ebx
  41c4e5:	std    
  41c4e6:	nop
  41c4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e8:	js     0x41c52a
  41c4ea:	popf   
  41c4eb:	push   esp
  41c4ec:	shl    BYTE PTR [eax+0x44918d],cl
  41c4f2:	test   BYTE PTR [esi-0x56a14b54],ah
  41c4f8:	sub    al,0x19
  41c4fa:	je     0x41c4d2
  41c4fc:	or     BYTE PTR [eax+0x112ca95e],bh
  41c502:	fs (bad) 
  41c504:	or     al,0xb5
  41c506:	ficomp WORD PTR [ebx-0x58a4f6d4]
  41c50c:	lahf   
  41c50d:	test   al,0xde
  41c50f:	fwait
  41c510:	add    edi,DWORD PTR [ecx]
  41c512:	pop    esi
  41c513:	xchg   edi,eax
  41c514:	inc    BYTE PTR [edi+0x406cfe98]
  41c51a:	popf   
  41c51b:	nop
  41c51c:	push   esi
  41c51d:	pop    ecx
  41c51e:	add    BYTE PTR [esi+ebx*8+0xf],dl
  41c522:	add    al,cl
  41c524:	and    al,0xa8
  41c526:	or     BYTE PTR [ecx+0x58],0x52
  41c52a:	push   ebp
  41c52b:	(bad)  
  41c52c:	out    0x54,eax
  41c52e:	call   0xfcf8923c
  41c533:	mov    bh,0xb0
  41c535:	xchg   DWORD PTR [edx-0xf],edi
  41c538:	jecxz  0x41c4e5
  41c53a:	mov    edi,0x6a009be4
  41c53f:	jns    0x41c567
  41c541:	cmp    al,al
  41c543:	(bad)
  41c546:	inc    esi
  41c547:	popf   
  41c548:	add    ah,bh
  41c54a:	mov    cs,WORD PTR [edi-0x66c78dee]
  41c550:	jg     0x41c57d
  41c552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c553:	push   edx
  41c554:	sbb    al,0xe9
  41c556:	push   ecx
  41c557:	push   eax
  41c558:	call   0xc363:0xb1f1a7b3
  41c55f:	cdq    
  41c560:	xchg   BYTE PTR [edx+0x1029d05],dl
  41c566:	or     al,0x6d
  41c568:	jge    0x41c515
  41c56a:	mov    ds:0xab934027,eax
  41c56f:	adc    bh,dh
  41c571:	push   ebp
  41c572:	mov    edx,0x80ddc31f
  41c577:	loopne 0x41c57d
  41c579:	out    0x3,eax
  41c57b:	es dec eax
  41c57d:	dec    ebx
  41c57e:	push   ebx
  41c57f:	aaa    
  41c580:	add    ebx,DWORD PTR [ebp+0x64b50052]
  41c586:	cmp    bh,BYTE PTR [edx-0x30548467]
  41c58c:	pop    ds
  41c58d:	ret    0x7fed
  41c590:	cmp    BYTE PTR [edi+eiz*8],al
  41c593:	add    ebx,DWORD PTR [edi+ebp*1]
  41c596:	sti    
  41c597:	add    ch,BYTE PTR [eax-0x62fab57a]
  41c59d:	add    ch,BYTE PTR [eax+eax*2+0x75]
  41c5a1:	push   edx
  41c5a2:	add    DWORD PTR [ebx],0x82ff59cb
  41c5a8:	inc    esi
  41c5a9:	mov    cl,0xe5
  41c5ab:	mov    ebx,edi
  41c5ad:	mov    esi,0x8699c463
  41c5b2:	bound  eax,QWORD PTR [esi]
  41c5b4:	popf   
  41c5b5:	add    ch,BYTE PTR [edx+0x37]
  41c5b8:	inc    ebp
  41c5b9:	add    dh,dh
  41c5bb:	jg     0x41c5d9
  41c5bd:	add    al,0xe7
  41c5bf:	add    edx,DWORD PTR [esi]
  41c5c1:	inc    edi
  41c5c2:	add    BYTE PTR [ecx-0x56bd8237],bh
  41c5c8:	jno    0x41c622
  41c5ca:	push   ebp
  41c5cb:	xchg   ecx,eax
  41c5cc:	jne    0x41c56c
  41c5ce:	cld    
  41c5cf:	sahf   
  41c5d0:	push   ss
  41c5d1:	inc    esp
  41c5d2:	fsubr  DWORD PTR [ecx+ebx*8-0x3]
  41c5d6:	add    DWORD PTR [ecx],0xffffffa3
  41c5d9:	add    al,BYTE PTR [eax]
  41c5db:	push   0xffffffaa
  41c5dd:	mov    dl,0xff
  41c5df:	in     eax,dx
  41c5e0:	push   0x4f
  41c5e2:	add    ch,cl
  41c5e4:	sahf   
  41c5e5:	jge    0x41c629
  41c5e7:	test   DWORD PTR [eax],eax
  41c5e9:	jno    0x41c607
  41c5eb:	add    DWORD PTR [edi+0x4d399a6d],edi
  41c5f1:	add    al,0xae
  41c5f3:	xchg   BYTE PTR [esi+edx*8+0x3adebf83],ch
  41c5fa:	inc    edi
  41c5fb:	add    ch,cl
  41c5fd:	sahf   
  41c5fe:	and    DWORD PTR [edx+0x35],0xffffffa1
  41c602:	sbb    al,0x2a
  41c604:	fs push 0xffffff96
  41c607:	push   edi
  41c608:	inc    ecx
  41c609:	dec    edx
  41c60a:	dec    eax
  41c60b:	add    cl,ch
  41c60d:	sbb    eax,DWORD PTR [ebp-0x8]
  41c610:	mov    ecx,0xbf4fc719
  41c615:	inc    ebp
  41c616:	xor    eax,0x9e91010c
  41c61b:	cld    
  41c61c:	push   es
  41c61d:	repnz outs dx,DWORD PTR ds:[esi]
  41c61f:	jae    0x41c5cb
  41c621:	and    DWORD PTR ds:0x8695e9f8,ebp
  41c627:	push   ss
  41c628:	jmp    0x41c5c8
  41c62a:	add    al,BYTE PTR [ecx+0xcfa1164]
  41c630:	xchg   bp,ax
  41c632:	add    al,0x0
  41c634:	jmp    0xd1844027
  41c639:	and    esi,DWORD PTR ds:0xc34c00a4
  41c63f:	sub    edi,edi
  41c641:	jmp    0x41c5cb
  41c643:	jns    0x41c639
  41c645:	mov    edi,0xf642e4d1
  41c64a:	add    eax,DWORD PTR [eax]
  41c64c:	test   al,0x0
  41c64e:	push   es
  41c64f:	sti    
  41c650:	xor    cl,0xf5
  41c653:	add    eax,DWORD PTR [eax]
  41c655:	mov    esi,DWORD PTR [ecx+0x10453562]
  41c65b:	sti    
  41c65c:	and    ebp,0x29000405
  41c662:	shl    DWORD PTR [edx-0x19],0xa
  41c666:	ja     0x41c660
  41c668:	jecxz  0x41c66a
  41c66a:	sti    
  41c66b:	xor    bl,dl
  41c66d:	add    esp,eax
  41c66f:	add    eax,DWORD PTR [edi-0x3d33bb]
  41c675:	add    DWORD PTR [ebx+eax*1+0x48b00],esi
  41c67c:	push   0x7
  41c67e:	xor    eax,0xffffffdf
  41c681:	xor    DWORD PTR [ebx+eax*1-0x3ccea200],esi
  41c688:	jp     0x41c6be
  41c68a:	xor    al,0x6a
  41c68c:	adc    esp,esi
  41c68e:	repz inc esi
  41c690:	add    BYTE PTR [ecx+0xd],bl
  41c693:	icebp  
  41c694:	fild   DWORD PTR [ebp+0x6a20dfb4]
  41c69a:	push   edx
  41c69b:	mov    BYTE PTR [ecx-0x58],bh
  41c69e:	cmp    al,0x5b
  41c6a0:	pop    esp
  41c6a1:	dec    eax
  41c6a2:	je     0x41c6a7
  41c6a4:	xchg   DWORD PTR [ebp-0x78],ecx
  41c6a7:	fld    QWORD PTR [ebx+ecx*4]
  41c6aa:	sbb    DWORD PTR [ebx+0x11],0xfffffff2
  41c6ae:	cmp    dh,BYTE PTR [edi-0x7f]
  41c6b1:	rol    BYTE PTR [eax],0xf1
  41c6b4:	cld    
  41c6b5:	imul   ecx,DWORD PTR [eax],0xe03e609d
  41c6bb:	ins    DWORD PTR es:[edi],dx
  41c6bc:	cdq    
  41c6bd:	add    BYTE PTR [eax],al
  41c6bf:	shl    DWORD PTR [edi+edi*1],cl
  41c6c2:	lock push ss
  41c6c4:	fisub  WORD PTR [edi+0x6eea0c]
  41c6ca:	(bad)  
  41c6cb:	sub    ch,ah
  41c6cd:	or     edi,edi
  41c6cf:	sbb    DWORD PTR [ecx+0x2f],ebx
  41c6d2:	add    esi,ebp
  41c6d4:	xchg   edi,eax
  41c6d5:	mov    bl,0xfd
  41c6d7:	add    ah,BYTE PTR [edx]
  41c6d9:	inc    ecx
  41c6da:	or     BYTE PTR [eax],ah
  41c6dc:	pop    ecx
  41c6dd:	or     BYTE PTR cs:[esi],ah
  41c6e0:	fisubr WORD PTR [edi+0x9a81e6]
  41c6e6:	add    BYTE PTR [esi],dl
  41c6e8:	xor    DWORD PTR [ecx+0xe80bd42],ecx
  41c6ee:	dec    eax
  41c6ef:	popf   
  41c6f0:	cdq    
  41c6f1:	mov    DWORD PTR [edx-0x33],eax
  41c6f4:	xor    ecx,DWORD PTR [ecx+0x8]
  41c6f7:	ins    DWORD PTR es:[edi],dx
  41c6f8:	pop    eax
  41c6f9:	das    
  41c6fa:	fcomp  DWORD PTR [esi+0x2e87530f]
  41c700:	mov    ch,0xa8
  41c702:	aaa    
  41c703:	lods   al,BYTE PTR ds:[esi]
  41c704:	out    dx,al
  41c705:	mov    ah,0xfe
  41c707:	pop    edi
  41c708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c709:	mov    DWORD PTR [edx+0x71],ecx
  41c70c:	sbb    al,0xfb
  41c70e:	sub    al,0x26
  41c710:	pop    ecx
  41c711:	add    al,0x74
  41c713:	xchg   edi,eax
  41c714:	xor    BYTE PTR [ecx+0x8],dl
  41c717:	add    BYTE PTR [ebx-0x60],bl
  41c71a:	adc    BYTE PTR ds:0x8904597a,ch
  41c720:	fcom   DWORD PTR [edi]
  41c722:	push   esp
  41c723:	dec    edi
  41c724:	push   ss
  41c725:	jno    0x41c72b
  41c727:	add    esi,edx
  41c729:	mov    ds:0xaaaae853,eax
  41c72e:	mov    dl,0xfc
  41c730:	pushf  
  41c731:	add    ch,BYTE PTR [edx]
  41c733:	or     BYTE PTR [edx+eax*2],dl
  41c736:	jmp    0x41c6c2
  41c738:	aad    0xfa
  41c73a:	inc    eax
  41c73b:	jmp    0x420cea0
  41c740:	xor    BYTE PTR es:[edi+0x256e355b],dl
  41c747:	add    al,0x9d
  41c749:	jg     0x41c776
  41c74b:	mov    esp,0x53a5796a
  41c750:	adc    BYTE PTR [eax],bh
  41c752:	div    DWORD PTR [esi-0x24710171]
  41c758:	hlt    
  41c759:	lods   eax,DWORD PTR ds:[esi]
  41c75a:	xchg   ebp,eax
  41c75b:	cmp    BYTE PTR [edx],0x37
  41c75e:	hlt    
  41c75f:	mov    ch,BYTE PTR [edi-0x56]
  41c762:	imul   ebp,DWORD PTR [ebp-0x74e90392],0xffffffd8
  41c769:	call   0x425f:0xadd9e774
  41c770:	lods   eax,DWORD PTR ds:[esi]
  41c771:	jnp    0x41c74c
  41c773:	unpcklps xmm1,XMMWORD PTR [eax+0x2b]
  41c777:	mov    edx,eax
  41c779:	jmp    0xa941f834
  41c77e:	or     ebx,0xed379eab
  41c784:	mov    ebp,0xaae80a5d
  41c789:	mov    dh,ch
  41c78b:	lods   eax,DWORD PTR ds:[esi]
  41c78c:	push   es
  41c78d:	push   ds
  41c78e:	push   edx
  41c78f:	cs mov dh,0x91
  41c792:	and    DWORD PTR [ebx+0x63fd9dab],0x15ad803d
  41c79c:	mov    ebp,0x29e70add
  41c7a1:	les    edi,FWORD PTR [edi-0x7d]
  41c7a4:	pop    edi
  41c7a5:	rcr    BYTE PTR [edx+0x29d3e9c],cl
  41c7ab:	add    BYTE PTR [ebp+ebx*8-0x56],ah
  41c7af:	dec    edi
  41c7b0:	bound  edx,QWORD PTR [ebx]
  41c7b2:	cmp    eax,0xafb15cfd
  41c7b7:	jb     0x41c7a6
  41c7b9:	div    BYTE PTR ds:0x7ff0d6ea
  41c7bf:	mov    edi,0x727ba255
  41c7c4:	shr    DWORD PTR [edx-0x31108c49],0x7b
  41c7cb:	(bad)
  41c7ce:	frndint 
  41c7d0:	scas   al,BYTE PTR es:[edi]
  41c7d1:	es inc edx
  41c7d3:	sbb    al,0x70
  41c7d5:	int3   
  41c7d6:	loop   0x41c760
  41c7d8:	and    al,0x3d
  41c7da:	js     0x41c823
  41c7dc:	xchg   esi,eax
  41c7dd:	push   ds
  41c7de:	mov    ah,0xfc
  41c7e0:	mov    es,WORD PTR [eax]
  41c7e2:	cwde   
  41c7e3:	add    dh,BYTE PTR [ebp-0x10]
  41c7e6:	adc    eax,0x5470c838
  41c7eb:	out    0x86,al
  41c7ed:	sub    cl,cl
  41c7ef:	sbb    ch,BYTE PTR [esi]
  41c7f1:	pop    esp
  41c7f2:	mov    ah,BYTE PTR [esi+0x57]
  41c7f5:	push   ecx
  41c7f6:	scas   al,BYTE PTR es:[edi]
  41c7f7:	inc    edi
  41c7f8:	add    cl,ch
  41c7fa:	sbb    eax,DWORD PTR [eax-0x8]
  41c7fd:	mov    ecx,0x4e4fc625
  41c802:	adc    BYTE PTR [edx],0xfd
  41c805:	mov    esp,0x53299aa2
  41c80a:	call   0x1a7b50bc
  41c80f:	mov    dh,0x73
  41c811:	add    DWORD PTR [ecx+ebp*1],ebx
  41c814:	clc    
  41c815:	jmp    0xaacca8d2
  41c81a:	mov    ?,WORD PTR [ebx+ecx*4]
  41c81d:	stos   BYTE PTR es:[edi],al
  41c81e:	cmp    BYTE PTR [edi*8-0x3a84c96c],0x0
  41c826:	mov    WORD PTR [ecx+0x2c63ffe9],gs
  41c82c:	mov    ebp,0x417b4075
  41c831:	clc    
  41c832:	sub    bl,BYTE PTR [eax+0x34]
  41c835:	sub    al,0x43
  41c837:	ja     0x41c7be
  41c839:	inc    ebx
  41c83a:	test   al,0x5e
  41c83c:	push   esi
  41c83d:	fwait
  41c83e:	push   ebx
  41c83f:	ja     0x41c7c6
  41c841:	inc    ebx
  41c842:	test   BYTE PTR [ecx+0x41],bh
  41c845:	or     BYTE PTR [eax],al
  41c847:	lods   eax,DWORD PTR ds:[esi]
  41c848:	inc    edx
  41c849:	add    al,0xe9
  41c84b:	retf   
  41c84c:	jne    0x41c849
  41c84e:	inc    DWORD PTR [edi-0x5da00449]
  41c854:	mov    bh,0xbe
  41c856:	or     al,0xf4
  41c858:	cmp    al,0x87
  41c85a:	in     al,dx
  41c85b:	ja     0x41c8c0
  41c85d:	and    BYTE PTR [ebx+0x7f],dl
  41c860:	mov    DWORD PTR [edi-0x40fd0bbb],0xe7fae856
  41c86a:	push   0x8bfb7613
  41c86f:	push   esp
  41c870:	sub    al,0xf3
  41c872:	jne    0x41c82f
  41c874:	mov    dl,0xbc
  41c876:	jmp    0x41c8ab
  41c87b:	or     ebx,edx
  41c87d:	sub    DWORD PTR [ebp-0x17ab2c2f],ecx
  41c883:	cmp    ch,ch
  41c885:	(bad)  
  41c886:	push   DWORD PTR [ecx]
  41c888:	in     al,dx
  41c889:	sti    
  41c88a:	push   eax
  41c88b:	das    
  41c88c:	outs   dx,BYTE PTR ds:[esi]
  41c88d:	dec    esp
  41c88e:	push   ebx
  41c88f:	rcr    esp,cl
  41c891:	pop    es
  41c892:	call   0x3d20bc
  41c897:	or     eax,0xb485f7ed
  41c89c:	(bad)  [eax+0x6a]
  41c89f:	popf   
  41c8a0:	lahf   
  41c8a1:	test   DWORD PTR [edx-0x7f],eax
  41c8a4:	imul   esi,DWORD PTR [ebx+0xe048d72],0x598b0058
  41c8ae:	add    BYTE PTR [ecx+0x4285a561],al
  41c8b4:	inc    ecx
  41c8b5:	mov    DWORD PTR [ebx+0x40a7c512],esi
  41c8bb:	add    BYTE PTR [esi],dl
  41c8bd:	imul   BYTE PTR [ebx+0x52a1d028]
  41c8c3:	std    
  41c8c4:	test   al,0xa1
  41c8c6:	push   esi
  41c8c7:	call   0xfcf39d72
  41c8cc:	int    0x1e
  41c8ce:	aas    
  41c8cf:	in     al,dx
  41c8d0:	ins    BYTE PTR es:[edi],dx
  41c8d1:	add    BYTE PTR es:[edx],dh
  41c8d4:	ins    BYTE PTR es:[edi],dx
  41c8d5:	rcr    DWORD PTR [esi],0xed
  41c8d8:	or     esp,DWORD PTR [esi+edi*2+0x3b]
  41c8dc:	lahf   
  41c8dd:	xor    BYTE PTR [edi-0x4],al
  41c8e0:	(bad)  
  41c8e1:	outs   dx,DWORD PTR ds:[esi]
  41c8e2:	(bad)  
  41c8e4:	sahf   
  41c8e5:	out    0xab,al
  41c8e7:	push   eax
  41c8e8:	dec    ebp
  41c8e9:	or     BYTE PTR ss:[esi],bh
  41c8ec:	dec    ebp
  41c8ed:	xchg   ecx,eax
  41c8ee:	push   esi
  41c8ef:	in     eax,dx
  41c8f0:	(bad)  [ebx]
  41c8f2:	jg     0x41c936
  41c8f4:	ror    DWORD PTR [eax],1
  41c8f6:	push   ds
  41c8f7:	add    DWORD PTR [esi-0x4aa9a6e0],ebx
  41c8fd:	loope  0x41c899
  41c8ff:	cld    
  41c900:	mov    edx,0xa772c41d
  41c905:	jae    0x41c89f
  41c907:	(bad)  
  41c908:	mov    ebx,0xdd30b142
  41c90d:	dec    edi
  41c90e:	or     edi,ebp
  41c910:	add    BYTE PTR [eax],dl
  41c912:	int3   
  41c913:	mov    cl,0x72
  41c915:	mov    eax,ds:0x7a2b988b
  41c91a:	add    esp,DWORD PTR ds:0xf34015b3
  41c920:	jl     0x41c8ec
  41c922:	jge    0x41c951
  41c924:	(bad)  
  41c926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c927:	jmp    0xa58b5674
  41c92c:	dec    esi
  41c92d:	pop    edx
  41c92e:	(bad)
  41c931:	out    dx,al
  41c932:	jge    0x41c936
  41c934:	xchg   DWORD PTR [esi+0x27],eax
  41c937:	push   0x29
  41c939:	and    DWORD PTR [ebx],eax
  41c93b:	je     0x41c985
  41c93d:	sbb    DWORD PTR [ebx-0x22],edx
  41c940:	cmp    BYTE PTR [ebp-0x150c0457],ah
  41c946:	inc    ebp
  41c947:	out    0x4c,eax
  41c949:	sar    BYTE PTR [edi-0x5a],cl
  41c94c:	cmp    BYTE PTR [ebx+0x29490042],bl
  41c952:	das    
  41c953:	jmp    0xa8fe1c4e
  41c958:	pop    es
  41c959:	popf   
  41c95a:	push   ecx
  41c95b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c95c:	aaa    
  41c95d:	mov    ecx,0xc1189dfa
  41c962:	push   0x29
  41c964:	add    al,0x24
  41c966:	stos   DWORD PTR es:[edi],eax
  41c967:	das    
  41c968:	mov    ecx,ebp
  41c96a:	cs aam 0x83
  41c96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c96e:	lahf   
  41c96f:	push   ecx
  41c970:	inc    esi
  41c971:	popf   
  41c972:	add    bh,bl
  41c974:	out    0x0,eax
  41c976:	mov    edx,0xc9b16c3d
  41c97b:	jle    0x41c9a3
  41c97d:	aaa    
  41c97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c97f:	push   eax
  41c980:	popf   
  41c981:	push   edx
  41c983:	inc    ebp
  41c984:	out    0x59,eax
  41c986:	mov    al,0xf
  41c988:	cmp    edx,DWORD PTR ds:0x9b9e025d
  41c98e:	inc    edi
  41c98f:	scas   eax,DWORD PTR es:[edi]
  41c990:	cmp    eax,0xffa9f0b2
  41c995:	fisttp DWORD PTR [esi+0x13]
  41c998:	inc    eax
  41c999:	jmp    0xc706458a
  41c99e:	pop    ebx
  41c99f:	push   edx
  41c9a0:	push   esi
  41c9a1:	jb     0x41c955
  41c9a3:	fimul  WORD PTR [ebx]
  41c9a5:	mov    edi,0x56fc142f
  41c9aa:	jecxz  0x41c9ae
  41c9ac:	mov    DWORD PTR [ecx],esp
  41c9ae:	rol    DWORD PTR [ebp-0x7bb68b28],1
  41c9b4:	cmc    
  41c9b5:	jge    0x41ca0c
  41c9b7:	icebp  
  41c9b8:	add    al,BYTE PTR [ebx+ebp*8]
  41c9bb:	inc    edx
  41c9bc:	add    BYTE PTR [ebp+0x62],bl
  41c9bf:	mov    eax,ds:0xa5efdc00
  41c9c4:	sub    DWORD PTR [ecx-0x71ab218b],0xffffff9d
  41c9cb:	push   0x40
  41c9cd:	jmp    0xcd547197
  41c9d2:	mov    bl,0x42
  41c9d4:	add    cl,al
  41c9d6:	xor    dh,BYTE PTR [ebp+0x2000aefc]
  41c9dc:	mov    cl,0xfc
  41c9de:	sbb    eax,0x97809a9a
  41c9e3:	sub    al,0xa6
  41c9e5:	push   esp
  41c9e6:	xchg   esi,eax
  41c9e7:	mov    dh,BYTE PTR [edx+0x47a12911]
  41c9ed:	pop    esi
  41c9ee:	jb     0x41c9c8
  41c9f0:	dec    ecx
  41c9f1:	rcl    DWORD PTR [esi],0x58
  41c9f4:	xor    DWORD PTR [edx+eax*8-0x7a],esi
  41c9f8:	sub    dh,BYTE PTR [ecx+esi*4-0x47]
  41c9fc:	sub    al,0x24
  41c9fe:	cmc    
  41c9ff:	inc    ecx
  41ca00:	inc    ecx
  41ca01:	jo     0x41c9f1
  41ca03:	jnp    0x41ca2b
  41ca05:	and    al,0xe5
  41ca07:	cdq    
  41ca08:	cmp    bh,BYTE PTR [eax-0x4a]
  41ca0b:	dec    edi
  41ca0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0d:	jae    0x41ca0f
  41ca0f:	nop
  41ca10:	push   cs
  41ca11:	call   0xfbb6b44d
  41ca16:	add    DWORD PTR [esp+ebx*8-0x7a],ecx
  41ca1a:	dec    eax
  41ca1b:	dec    esp
  41ca1c:	xchg   edi,eax
  41ca1d:	inc    esp
  41ca1e:	je     0x41ca41
  41ca20:	cli    
  41ca21:	jg     0x41ca9b
  41ca23:	sbb    DWORD PTR [esp+esi*2],eax
  41ca26:	or     eax,0x43b4a81c
  41ca2b:	je     0x41caa0
  41ca2d:	adc    eax,esi
  41ca2f:	inc    esi
  41ca30:	inc    esp
  41ca31:	add    bl,ch
  41ca33:	pop    esp
  41ca34:	test   BYTE PTR [esp+edi*2+0x44],dh
  41ca38:	dec    edx
  41ca39:	je     0x41ca4e
  41ca3b:	mov    edi,0x87e4ae
  41ca40:	pusha  
  41ca41:	jae    0x41ca3e
  41ca43:	cmp    DWORD PTR [ebx+esi*2],0x70
  41ca47:	sbb    DWORD PTR [ecx+edi*8-0xb],ebx
  41ca4b:	call   FWORD PTR [ebx-0x79]
  41ca4e:	push   cs
  41ca4f:	lea    esp,[esi+ebp*8-0x6]
  41ca53:	ss in  al,dx
  41ca55:	sbb    al,0xea
  41ca57:	dec    BYTE PTR [ebx+0x6]
  41ca5a:	adc    BYTE PTR [esi-0x24],dl
  41ca5d:	sbb    ebx,ebp
  41ca5f:	(bad)  
  41ca60:	cmp    ecx,DWORD PTR [esp+ecx*1]
  41ca63:	mov    eax,0x15fafec7
  41ca68:	adc    al,0xe
  41ca6a:	inc    eax
  41ca6b:	add    BYTE PTR [edx+0x365fc425],bh
  41ca71:	lods   al,BYTE PTR ds:[esi]
  41ca72:	cld    
  41ca73:	mov    al,ch
  41ca75:	cmp    BYTE PTR [esp+esi*2+0x5486ebef],0xe0
  41ca7d:	dec    DWORD PTR [ecx-0x97c3bec]
  41ca83:	or     eax,0xfa8000d0
  41ca88:	popf   
  41ca89:	mov    ds:0xa2aa0735,eax
  41ca8e:	jnp    0x41ca5f
  41ca90:	push   ebp
  41ca91:	push   ss
  41ca92:	shl    DWORD PTR [edx-0x7d],cl
  41ca95:	fild   DWORD PTR [eax+eax*1]
  41ca98:	call   0x81c267c1
  41ca9d:	icebp  
  41ca9e:	sub    ebx,0x9929
  41caa4:	add    dh,cl
  41caa6:	outs   dx,DWORD PTR ds:[esi]
  41caa7:	jnp    0x41cb1b
  41caa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caaa:	and    al,0x47
  41caac:	or     dl,dl
  41caae:	imul   edi,DWORD PTR [ecx+0x43],0x12af9db9
  41cab5:	aad    0xcb
  41cab7:	inc    eax
  41cab8:	add    BYTE PTR [edx*2+0x5f161be4],ah
  41cabf:	loopne 0x41ca47
  41cac1:	fprem1 
  41cac3:	fisttp DWORD PTR [eax+0x2919fde3]
  41cac9:	and    al,0xd5
  41cacb:	out    0x2f,eax
  41cacd:	sbb    BYTE PTR ds:0xd1c54fe8,dh
  41cad3:	inc    edx
  41cad4:	inc    esp
  41cad5:	popf   
  41cad6:	cdq    
  41cad7:	jg     0x41cb1c
  41cad9:	mov    ecx,0xe28953f5
  41cade:	inc    ebp
  41cadf:	dec    esi
  41cae0:	sbb    BYTE PTR [ebp+0x60],ch
  41cae3:	lock and bl,0xac
  41cae7:	lods   eax,DWORD PTR ds:[esi]
  41cae8:	xor    eax,0x1fe7ed24
  41caed:	adc    al,0xd
  41caef:	call   0xa52fc017
  41caf4:	cld    
  41caf5:	ficomp DWORD PTR [ebx]
  41caf7:	xor    BYTE PTR [eax*4-0x7ebc8467],ah
  41cafe:	mov    ecx,0x2954279
  41cb03:	jb     0x41cb41
  41cb05:	test   eax,0x13a67b
  41cb0a:	sbb    dh,BYTE PTR [esi]
  41cb0c:	or     esi,esp
  41cb0e:	and    edi,DWORD PTR [esi]
  41cb10:	add    edi,eax
  41cb12:	xchg   ecx,eax
  41cb13:	jle    0x41caac
  41cb15:	add    al,0x9d
  41cb17:	add    ch,BYTE PTR [eax+ecx*2-0x47]
  41cb1b:	or     dl,BYTE PTR [edi-0x18e3ad65]
  41cb21:	add    ebx,DWORD PTR [ecx]
  41cb23:	ret    
  41cb24:	cmc    
  41cb25:	xchg   DWORD PTR [ecx+0x703e703],edi
  41cb2b:	(bad)  [ebx+0x30]
  41cb2e:	shl    esi,0xae
  41cb31:	fwait
  41cb32:	jle    0x41cb76
  41cb34:	out    0x3,eax
  41cb36:	and    al,0xbe
  41cb38:	xchg   esi,eax
  41cb39:	scas   al,BYTE PTR es:[edi]
  41cb3a:	lea    esp,[ebp-0x65806444]
  41cb40:	in     eax,dx
  41cb41:	scas   al,BYTE PTR es:[edi]
  41cb42:	inc    ecx
  41cb43:	in     eax,dx
  41cb44:	jno    0x41cb00
  41cb46:	and    eax,DWORD PTR [edx]
  41cb48:	iret   
  41cb49:	fnstenv [ecx]
  41cb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb4c:	aad    0x19
  41cb4e:	xchg   edi,eax
  41cb4f:	ja     0x41cb73
  41cb51:	call   0x38081e14
  41cb56:	shr    esi,0xbd
  41cb59:	sbb    BYTE PTR [ebp+0xc],dh
  41cb5c:	daa    
  41cb5d:	add    al,0x1c
  41cb5f:	mov    edi,0x77b719da
  41cb64:	and    ch,al
  41cb66:	mov    dh,0x4a
  41cb68:	(bad)  
  41cb69:	pusha  
  41cb6a:	pop    ebp
  41cb6b:	add    ah,bh
  41cb6d:	add    BYTE PTR [eax],0x5e
  41cb70:	fisubr WORD PTR [edx]
  41cb72:	push   esp
  41cb73:	adc    al,0xbe
  41cb75:	push   ss
  41cb76:	scas   eax,DWORD PTR es:[edi]
  41cb77:	lea    esp,[ebp-0x6326644c]
  41cb7d:	push   DWORD PTR [ebp-0x5]
  41cb80:	cmp    BYTE PTR [edi+0x4378b4f5],0xd
  41cb87:	adc    DWORD PTR [edx-0x3],0x401086f4
  41cb8e:	jmp    0xe24288ba
  41cb93:	push   es
  41cb94:	push   0x814b47e8
  41cb99:	mov    edi,0xffba1aee
  41cb9e:	call   0x5854541
  41cba3:	mov    ecx,0xce2e8952
  41cba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cba9:	xor    BYTE PTR [esi],bl
  41cbab:	push   0x3b01569d
  41cbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb1:	cld    
  41cbb2:	xlat   BYTE PTR ds:[ebx]
  41cbb3:	out    0xba,eax
  41cbb5:	xchg   dl,ch
  41cbb7:	ss push 0x9a00fefd
  41cbbd:	dec    eax
  41cbbe:	xor    DWORD PTR [esi],0x78
  41cbc1:	jnp    0x41cb88
  41cbc3:	out    dx,al
  41cbc4:	dec    edx
  41cbc5:	call   0x44a805
  41cbca:	ins    BYTE PTR es:[edi],dx
  41cbcb:	in     eax,0xde
  41cbcd:	pop    edi
  41cbce:	cmp    DWORD PTR [edx+0xd2441],ebp
  41cbd4:	leave  
  41cbd5:	jnp    0x41cb9b
  41cbd7:	sbb    DWORD PTR [edi-0x6a93a32a],esi
  41cbdd:	loope  0x41cc5e
  41cbdf:	jmp    0x1429ce82
  41cbe4:	or     DWORD PTR [esi-0x71a9504],esp
  41cbea:	sub    BYTE PTR [ecx+0x158924b5],0xf5
  41cbf1:	hlt    
  41cbf2:	mov    BYTE PTR [edi+0x88cd64],bl
  41cbf8:	mov    BYTE PTR [edx+0x472c5110],bl
  41cbfe:	jmp    0xbcbf2001
  41cc03:	je     0x41cba1
  41cc05:	sub    esi,DWORD PTR [ecx+0x24]
  41cc08:	mov    eax,0xc78bdc29
  41cc0d:	sub    DWORD PTR [ecx+0x24],edi
  41cc10:	mov    al,ds:0xb8384925
  41cc15:	mov    BYTE PTR [edx],bh
  41cc17:	jmp    0x41cbfb
  41cc19:	push   ebp
  41cc1a:	add    al,0x48
  41cc1d:	out    0x86,eax
  41cc1f:	add    esi,DWORD PTR [edi-0x2]
  41cc22:	imul   eax,DWORD PTR [esp+ebx*2],0x8440747c
  41cc29:	push   eax
  41cc2a:	call   0xfb966c56
  41cc2f:	mov    eax,DWORD PTR [edx+0x7703ff83]
  41cc35:	stos   DWORD PTR es:[edi],eax
  41cc36:	push   ebx
  41cc37:	inc    DWORD PTR [eax]
  41cc39:	fcomp  DWORD PTR [ebx+0xbac5128]
  41cc3f:	in     al,dx
  41cc40:	(bad)  
  41cc41:	push   ebx
  41cc42:	add    DWORD PTR [edi],esi
  41cc44:	mov    esi,DWORD PTR [ecx-0x73880459]
  41cc4a:	xchg   al,cl
  41cc4c:	jmp    0x41cca0
  41cc4e:	push   edi
  41cc4f:	xchg   DWORD PTR [esi],eax
  41cc51:	push   ebx
  41cc52:	in     al,dx
  41cc53:	and    ebp,DWORD PTR [eax]
  41cc55:	mov    ebp,0x78b283e
  41cc5a:	sub    DWORD PTR [esp+ebp*1-0x14],eax
  41cc5e:	sbb    al,ch
  41cc60:	(bad)  
  41cc61:	push   ebx
  41cc62:	or     dl,BYTE PTR [esi+edx*2]
  41cc65:	fcomp  QWORD PTR ds:0x3043fee9
  41cc6b:	(bad)  
  41cc6c:	jmp    0xeb9d:0x5fbcb206
  41cc73:	inc    esi
  41cc74:	mov    eax,edi
  41cc76:	(bad)  
  41cc77:	rol    DWORD PTR [ebx],0x9d
  41cc7a:	push   es
  41cc7b:	ja     0x41cc68
  41cc7d:	push   ds
  41cc7e:	jbe    0x41cca4
  41cc80:	push   ecx
  41cc81:	jae    0x41cca3
  41cc83:	ss or  al,0x1d
  41cc86:	xchg   esp,eax
  41cc87:	cld    
  41cc88:	call   DWORD PTR [ebx-0x54]
  41cc8b:	test   eax,esi
  41cc8d:	popf   
  41cc8e:	cdq    
  41cc8f:	add    BYTE PTR [ecx+0x627fa133],cl
  41cc95:	mov    eax,ds:0x99427d99
  41cc9a:	mov    DWORD PTR [esi],edx
  41cc9c:	push   ss
  41cc9d:	add    bl,ch
  41cc9f:	push   ecx
  41cca0:	mov    bh,0xa0
  41cca2:	mov    ch,ah
  41cca4:	ja     0x41cc7d
  41cca6:	adc    al,0x76
  41cca8:	test   al,0x82
  41ccaa:	push   esi
  41ccab:	xchg   BYTE PTR [ebx],al
  41ccad:	xor    bl,BYTE PTR [ebp+0x12]
  41ccb0:	(bad)  
  41ccb1:	(bad)  
  41ccb2:	push   0xffffff99
  41ccb4:	push   ss
  41ccb5:	sub    dl,BYTE PTR [eax]
  41ccb7:	jbe    0x41cc8d
  41ccb9:	push   edi
  41ccba:	inc    ebp
  41ccbb:	ja     0x41ccfb
  41ccbd:	add    BYTE PTR [ebp-0x37752771],bl
  41ccc3:	(bad)  [eax-0x18]
  41ccc6:	jmp    0xcfd6:0x28000057
  41cccd:	dec    edi
  41ccce:	xor    cl,BYTE PTR [esi-0x58]
  41ccd1:	push   eax
  41ccd2:	xor    eax,0x22fca224
  41ccd7:	and    BYTE PTR [ecx-0x63f792b2],bh
  41ccdd:	mov    bh,bl
  41ccdf:	arpl   WORD PTR [eax-0x5821e7b0],bp
  41cce5:	xchg   BYTE PTR [eax+0x55],bl
  41cce8:	fwait
  41cce9:	mov    ?,eax
  41cceb:	add    DWORD PTR [esi-0x19188d55],esp
  41ccf1:	xor    BYTE PTR [ebp-0xa1e80b1],dl
  41ccf7:	mov    ds:0x180d9f8d,eax
  41ccfc:	mov    edi,0x1e9e5778
  41cd01:	pushf  
  41cd02:	add    BYTE PTR [esi+0x3703e740],ah
  41cd08:	fstp   DWORD PTR [ebx+0x29]
  41cd0b:	lods   eax,DWORD PTR ds:[esi]
  41cd0c:	dec    ecx
  41cd0d:	dec    edi
  41cd0e:	adc    eax,0x7ee7025f
  41cd13:	loope  0x41cd66
  41cd15:	fs inc ecx
  41cd17:	fst    QWORD PTR [ecx+0x5c]
  41cd1a:	inc    ecx
  41cd1b:	xor    DWORD PTR [ebx],0x8ff1e6d1
  41cd21:	mov    bl,0x87
  41cd23:	add    BYTE PTR [edx],0x6
  41cd26:	stos   DWORD PTR es:[edi],eax
  41cd27:	add    DWORD PTR [esi-0x3ce007de],0xd125c09a
  41cd31:	jno    0x41ccff
  41cd33:	fisttp DWORD PTR [edi+0x4817a793]
  41cd39:	setl   al
  41cd3c:	lods   eax,DWORD PTR ds:[esi]
  41cd3d:	add    al,0xab
  41cd3f:	pop    ds
  41cd40:	ret    
  41cd41:	jb     0x41cd31
  41cd43:	ret    0x6e86
  41cd46:	inc    ebx
  41cd47:	popf   
  41cd48:	sub    al,0xe3
  41cd4a:	dec    esi
  41cd4b:	es dec eax
  41cd4d:	fistp  WORD PTR [ebx-0x55235244]
  41cd53:	pop    ds
  41cd54:	ret    
  41cd55:	pop    edx
  41cd56:	jecxz  0x41cd6d
  41cd58:	dec    eax
  41cd59:	fistp  QWORD PTR [esi+0x67]
  41cd5c:	call   0x7ba1:0xd6115071
  41cd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd64:	repz call FWORD PTR [edi+0x0]
  41cd68:	(bad)  
  41cd69:	adc    al,BYTE PTR [edi+0x5789ad19]
  41cd6f:	and    DWORD PTR [edi+0x6a1d5789],edi
  41cd75:	inc    esp
  41cd76:	or     al,0xaf
  41cd78:	pop    esi
  41cd79:	push   cs
  41cd7a:	(bad)  
  41cd7b:	jg     0x41cd93
  41cd7d:	mov    ds:0x3c53e9fc,al
  41cd82:	clc    
  41cd83:	nop
  41cd84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd85:	lahf   
  41cd86:	cld    
  41cd87:	jbe    0x41cd2f
  41cd89:	or     dl,BYTE PTR [eax]
  41cd8b:	jmp    0x53ae782e
  41cd90:	add    al,0x9f
  41cd92:	mov    BYTE PTR [ecx+0x1d],al
  41cd95:	mov    ebx,0x9f8d6d0c
  41cd9a:	cld    
  41cd9b:	dec    esi
  41cd9c:	adc    eax,0xb6980c4d
  41cda1:	add    dl,BYTE PTR [eax]
  41cda3:	jmp    0xef825b46
  41cda8:	out    dx,al
  41cda9:	lahf   
  41cdaa:	jne    0x41cd8d
  41cdac:	inc    edi
  41cdad:	hlt    
  41cdae:	(bad)  
  41cdaf:	cld    
  41cdb0:	fiadd  WORD PTR [edx]
  41cdb2:	and    DWORD PTR [ecx],0xd2830fa1
  41cdb8:	aaa    
  41cdb9:	sahf   
  41cdba:	cld    
  41cdbb:	push   0xffffff85
  41cdbd:	push   cs
  41cdbe:	add    BYTE PTR [edi+eiz*4+0x2c],bh
  41cdc2:	add    esp,DWORD PTR [ecx+0x718c2aee]
  41cdc8:	fiadd  WORD PTR [edx]
  41cdca:	push   ecx
  41cdcb:	add    DWORD PTR [eax],eax
  41cdcd:	mov    ch,0xab
  41cdcf:	std    
  41cdd0:	out    0xb6,al
  41cdd2:	inc    esp
  41cdd3:	or     al,0xd1
  41cdd5:	into   
  41cdd6:	xchg   esp,eax
  41cdd7:	cld    
  41cdd8:	(bad)  
  41cdd9:	mov    al,ds:0x61ce0844
  41cdde:	push   es
  41cddf:	jmp    0x71ad7ee4
  41cde4:	or     al,0x8f
  41cde6:	push   edi
  41cde7:	fs xchg esp,eax
  41cde9:	int3   
  41cdea:	inc    esi
  41cdeb:	add    BYTE PTR [edx+0x1],ch
  41cdee:	dec    edx
  41cdef:	call   0xfbab984b
  41cdf4:	pop    ecx
  41cdf5:	pop    ebp
  41cdf6:	xchg   esp,esi
  41cdf8:	(bad)  
  41cdf9:	sti    
  41cdfa:	and    dh,dh
  41cdfc:	(bad)  
  41cdfd:	sub    ebp,DWORD PTR [ebx+0x62]
  41ce00:	mov    eax,0x370a090c
  41ce06:	(bad)  
  41ce07:	inc    BYTE PTR [edx+0x1074044c]
  41ce0d:	dec    ebx
  41ce0e:	icebp  
  41ce0f:	or     ecx,DWORD PTR [ebp-0x72b2fd11]
  41ce15:	mov    eax,0xf6e84d0c
  41ce1a:	jle    0x41ce16
  41ce1c:	inc    DWORD PTR [ebp+0x418b0be1]
  41ce22:	cwde   
  41ce23:	ret    0x7c04
  41ce26:	cdq    
  41ce27:	sti    
  41ce28:	inc    ebp
  41ce29:	js     0x41ce4a
  41ce2b:	inc    edx
  41ce2c:	or     al,0xc2
  41ce2e:	add    bl,BYTE PTR [eax]
  41ce30:	or     al,BYTE PTR [eax]
  41ce32:	mov    ebx,0x418b0bdf
  41ce37:	pushf  
  41ce38:	xchg   DWORD PTR [ebp+0x78],ecx
  41ce3b:	xchg   DWORD PTR [eax+edi*2+0x44],ebx
  41ce3f:	sbb    eax,0xdecd7055
  41ce44:	jae    0x41ceac
  41ce46:	add    DWORD PTR [esi+0x7c],0x0
  41ce4a:	xor    al,0x14
  41ce4c:	(bad)  
  41ce4d:	pop    esi
  41ce4e:	sub    cl,BYTE PTR [edi-0x3b]
  41ce51:	ret    0x42c
  41ce54:	xchg   DWORD PTR [eax+0x40],eax
  41ce57:	xor    edi,ebx
  41ce59:	je     0x41cdf8
  41ce5b:	or     eax,0x91958afc
  41ce60:	cmp    DWORD PTR [edi-0x15ac4e57],0xb
  41ce67:	popa   
  41ce68:	scas   eax,DWORD PTR es:[edi]
  41ce69:	xlat   BYTE PTR ds:[ebx]
  41ce6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce6b:	imul   ebp,DWORD PTR [edi-0x394a529],0x951449ff
  41ce75:	cmp    cl,0xb5
  41ce78:	push   ebx
  41ce79:	push   esi
  41ce7a:	push   ss
  41ce7b:	jnp    0x41cef8
  41ce7d:	inc    ebp
  41ce7e:	mov    ch,0x24
  41ce80:	cmp    DWORD PTR [edx+ebp*2],eax
  41ce83:	adc    cl,BYTE PTR [esi-0x8]
  41ce86:	adc    al,0xe7
  41ce88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce89:	adc    ah,0xa8
  41ce8c:	jl     0x41cf0d
  41ce8e:	popf   
  41ce8f:	test   eax,0x9d348100
  41ce94:	add    BYTE PTR [ebx+0x0],dh
  41ce97:	pop    ebp
  41ce98:	mov    bl,0xef
  41ce9a:	mov    ah,BYTE PTR [eax]
  41ce9c:	dec    ebp
  41ce9d:	dec    ecx
  41ce9e:	call   0x4237c5
  41cea3:	mov    ds:0xed123f20,al
  41cea8:	mov    al,0x6f
  41ceaa:	inc    ebp
  41ceab:	lods   eax,DWORD PTR ds:[esi]
  41ceac:	jns    0x41cf29
  41ceae:	(bad)  
  41ceaf:	int    0xc3
  41ceb1:	or     BYTE PTR [ebp+0x20],bl
  41ceb4:	jle    0x41ce6a
  41ceb6:	out    0xe,eax
  41ceb8:	into   
  41ceb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceba:	cld    
  41cebb:	push   ds
  41cebc:	in     eax,dx
  41cebd:	hlt    
  41cebe:	sbb    BYTE PTR [ebp+0x75],0x11
  41cec2:	mov    DWORD PTR [ebx+0x14],esp
  41cec5:	leave  
  41cec6:	mov    al,ah
  41cec8:	popf   
  41cec9:	dec    esi
  41ceca:	call   0xfce666e9
  41cecf:	and    ecx,ebp
  41ced1:	sub    eax,0xaf021e21
  41ced6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced7:	xor    eax,0xc40250de
  41cedc:	fisubr DWORD PTR [edi]
  41cede:	or     BYTE PTR [esi+0x27c561f9],cl
  41cee4:	sbb    bl,bh
  41cee6:	sbb    esi,DWORD PTR [ecx+0x1c042715]
  41ceec:	ret    0x9bda
  41ceef:	in     al,0xa8
  41cef1:	lods   al,BYTE PTR ds:[esi]
  41cef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cef3:	pop    ds
  41cef4:	ret    0xcb91
  41cef7:	adc    eax,0x7b9b45
  41cefc:	mov    ds:0xd5319606,al
  41cf01:	mov    ch,BYTE PTR [ebx]
  41cf03:	cld    
  41cf04:	fadd   DWORD PTR [ecx-0x1d]
  41cf07:	add    al,0x14
  41cf09:	inc    ebp
  41cf0a:	jnp    0x41cea8
  41cf0c:	pop    edx
  41cf0d:	lahf   
  41cf0e:	jne    0x41ceb7
  41cf10:	push   ds
  41cf11:	ret    0xc4f2
  41cf14:	ins    DWORD PTR es:[edi],dx
  41cf15:	ret    0x45c5
  41cf18:	inc    esp
  41cf19:	leave  
  41cf1a:	sub    BYTE PTR [eax],al
  41cf1c:	popf   
  41cf1d:	xor    edi,DWORD PTR [ebp+ecx*2+0x7aef1424]
  41cf24:	fadd   DWORD PTR [esi]
  41cf26:	jb     0x41cec2
  41cf28:	pop    ds
  41cf29:	ret    
  41cf2a:	mov    dl,0xe9
  41cf2c:	add    bl,BYTE PTR [ebx]
  41cf2e:	rol    DWORD PTR [edi+eax*1],cl
  41cf31:	add    DWORD PTR [edx+0x74359430],edx
  41cf37:	sub    al,0x85
  41cf39:	sub    bh,bh
  41cf3b:	xor    ch,bl
  41cf3d:	add    ch,BYTE PTR [edx-0x3c]
  41cf40:	scas   al,BYTE PTR es:[edi]
  41cf41:	stos   BYTE PTR es:[edi],al
  41cf42:	mov    ds,WORD PTR [eax+edx*2+0xa80a59e]
  41cf49:	sbb    ah,ah
  41cf4b:	sbb    BYTE PTR [edx-0x62],0xff
  41cf4f:	add    DWORD PTR [ecx-0x491aba75],ebp
  41cf55:	xor    eax,0xe6e2721c
  41cf5a:	sysenter 
  41cf5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf5d:	(bad)  
  41cf5e:	out    0xdf,eax
  41cf60:	add    BYTE PTR [eax-0x61],al
  41cf63:	cld    
  41cf64:	ficom  WORD PTR gs:[ecx]
  41cf67:	jecxz  0x41cf63
  41cf69:	fidivr WORD PTR [edi]
  41cf6b:	pop    ebx
  41cf6c:	and    bl,bh
  41cf6e:	add    DWORD PTR [eax],eax
  41cf70:	bound  esp,QWORD PTR [ecx-0x6]
  41cf73:	xor    BYTE PTR [ecx],0x9d
  41cf76:	add    dh,BYTE PTR [ecx+ecx*8+0x67]
  41cf7a:	fld    QWORD PTR [ebx]
  41cf7c:	cmp    ah,BYTE PTR [esi+0x39]
  41cf7f:	and    al,0xe1
  41cf81:	imul   ecx,DWORD PTR [ecx-0x7c933a89],0xffffffbf
  41cf88:	leave  
  41cf89:	es aam 0xe6
  41cf8c:	jg     0x41cf89
  41cf8e:	ds pop ecx
  41cf90:	ins    BYTE PTR es:[edi],dx
  41cf91:	ficom  WORD PTR [eax]
  41cf93:	add    ebp,DWORD PTR [edx-0xa]
  41cf96:	sahf   
  41cf97:	call   0xc19f7f87
  41cf9c:	in     eax,0x9e
  41cf9e:	lgs    edi,FWORD PTR [eax-0xec17456]
  41cfa5:	loopne 0x41d003
  41cfa7:	(bad)  
  41cfa8:	jmp    0x2a7d24b
  41cfad:	push   ebx
  41cfae:	aas    
  41cfaf:	jno    0x41cf9d
  41cfb1:	pop    ds
  41cfb2:	fwait
  41cfb3:	arpl   WORD PTR [edx+0x260f8b9d],di
  41cfb9:	fadd   QWORD PTR [esi]
  41cfbb:	data16 jb 0x41cf87
  41cfbe:	imul   BYTE PTR [ecx-0x18]
  41cfc1:	mov    eax,0xe14f85
  41cfc6:	lods   eax,DWORD PTR ss:[esi]
  41cfc8:	add    BYTE PTR [eax],al
  41cfca:	xor    eax,0x77c02f01
  41cfcf:	xor    al,BYTE PTR [edi+0x1075c7ec]
  41cfd5:	add    BYTE PTR [ecx],0x62
  41cfd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd9:	inc    ebx
  41cfda:	xor    al,0x1
  41cfdc:	dec    edi
  41cfdd:	push   esi
  41cfde:	imul   edx,DWORD PTR [edi+0x1078380],0x0
  41cfe5:	call   0x3c3bd8
  41cfea:	js     0x41cfb2
  41cfec:	or     eax,DWORD PTR [edx+ecx*8-0x78fffffd]
  41cff3:	in     eax,0xb
  41cff5:	add    bl,dl
  41cff7:	sbb    al,0x69
  41cff9:	add    esi,esp
  41cffb:	add    BYTE PTR [edi+0x7d],bh
  41cffe:	in     al,0x0
  41d000:	or     ecx,DWORD PTR [esi+0x3a6]
  41d006:	aas    
  41d007:	in     eax,dx
  41d008:	pop    es
  41d009:	push   esi
  41d00a:	sub    al,0x41
  41d00c:	cmc    
  41d00d:	inc    DWORD PTR [ebx-0x7e]
  41d010:	mov    esp,0xff31480f
  41d015:	inc    esp
  41d017:	sbb    DWORD PTR [edx],edi
  41d019:	in     al,dx
  41d01a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01b:	inc    eax
  41d01c:	add    BYTE PTR [ebx+0x4028b0],bh
  41d022:	push   edi
  41d023:	addr16 shr eax,cl
  41d026:	cs jne 0x41d024
  41d029:	inc    DWORD PTR [eax]
  41d02b:	or     eax,0xdc83fbdc
  41d030:	or     eax,DWORD PTR gs:[edi+ebx*4+0x5d000001]
  41d038:	rol    BYTE PTR [eax+eax*1+0x4ff0074],0x4c
  41d040:	sub    BYTE PTR [eax+0x0],al
  41d043:	popf   
  41d044:	sub    BYTE PTR [esp+esi*2],ch
  41d047:	popf   
  41d048:	jbe    0x41d044
  41d04a:	jg     0x41d011
  41d04c:	xchg   BYTE PTR [eax],al
  41d04e:	je     0x41cffd
  41d050:	pushf  
  41d051:	sub    eax,0xf51f3a10
  41d056:	out    0xe8,eax
  41d058:	xchg   edx,eax
  41d059:	mov    ds:0xff0634fc,eax
  41d05e:	call   FWORD PTR [ebp-0x197736f0]
  41d064:	and    al,BYTE PTR [esi-0x14]
  41d067:	add    eax,0xafc9413
  41d06c:	adc    edi,DWORD PTR [esi]
  41d06e:	lock into 
  41d070:	imul   ebx,DWORD PTR [edx],0x755d6087
  41d076:	inc    edx
  41d077:	add    DWORD PTR [ebx],esp
  41d079:	inc    eax
  41d07a:	push   eax
  41d07b:	push   ss
  41d07c:	out    dx,eax
  41d07d:	mov    bl,0x30
  41d07f:	jmp    0x41d021
  41d081:	mov    edx,0x7bb673
  41d086:	dec    DWORD PTR [esi-0x6d]
  41d089:	push   eax
  41d08a:	std    
  41d08b:	push   eax
  41d08c:	jne    0x41d026
  41d08e:	stc    
  41d08f:	add    dh,al
  41d091:	sbb    al,0xa4
  41d093:	sbb    ebp,0xffffffa4
  41d096:	jl     0x41d041
  41d098:	lahf   
  41d099:	test   eax,0x35608900
  41d09e:	cwde   
  41d09f:	scas   al,BYTE PTR es:[edi]
  41d0a0:	push   ss
  41d0a1:	addr16 xchg esp,eax
  41d0a3:	mov    BYTE PTR ds:0x9d00012d,dh
  41d0a9:	lock lds esi,FWORD PTR [ebp-0x1b]
  41d0ad:	add    al,BYTE PTR [ebp+0x10]
  41d0b0:	xchg   edx,eax
  41d0b1:	addr16 inc ebp
  41d0b3:	adc    dh,cl
  41d0b5:	aam    0x70
  41d0b7:	jg     0x41d056
  41d0b9:	test   eax,0x2f0fd00
  41d0be:	repz fwait
  41d0c0:	cmp    ah,BYTE PTR [ebx+0x4525a41c]
  41d0c6:	add    ebx,edx
  41d0c8:	sub    al,BYTE PTR [esi-0x7862fc1a]
  41d0ce:	stos   DWORD PTR es:[edi],eax
  41d0cf:	xchg   edi,eax
  41d0d0:	adc    eax,0x9d03628a
  41d0d5:	add    dh,BYTE PTR [edx-0x120b504b]
  41d0db:	jb     0x41d087
  41d0dd:	add    ah,bh
  41d0df:	add    esi,DWORD PTR ds:0x19a2c647
  41d0e5:	xchg   DWORD PTR [ebx],ebp
  41d0e7:	mov    al,0x1b
  41d0e9:	push   edx
  41d0ea:	data16 add al,0x9d
  41d0ed:	add    dl,dl
  41d0ef:	cmc    
  41d0f0:	adc    eax,0x46682
  41d0f5:	popf   
  41d0f6:	add    bl,BYTE PTR [eax]
  41d0f8:	xchg   ecx,eax
  41d0f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0fa:	cli    
  41d0fb:	pop    ss
  41d0fc:	xor    al,0xf5
  41d0fe:	mov    fs,WORD PTR es:[edx-0x4fdc791f]
  41d105:	lds    edx,FWORD PTR [ebx]
  41d107:	push   ebp
  41d108:	adc    BYTE PTR ds:0xc839e73f,dl
  41d10e:	hlt    
  41d10f:	jbe    0x41d107
  41d111:	add    BYTE PTR [edx],0x7e
  41d114:	sbb    DWORD PTR [ebp-0x4ff00465],ecx
  41d11a:	adc    al,0xdf
  41d11c:	mov    ds:0x479ed68f,al
  41d121:	popf   
  41d122:	xchg   DWORD PTR [esi],edi
  41d124:	xchg   DWORD PTR [esi+0x7],ebx
  41d127:	ins    BYTE PTR es:[edi],dx
  41d128:	mov    edi,0x5b68aa1
  41d12d:	popf   
  41d12e:	add    bl,BYTE PTR [ebp-0x4c71965e]
  41d134:	or     eax,DWORD PTR [ebp+0x3e43ff6a]
  41d13a:	xchg   edi,eax
  41d13b:	mov    BYTE PTR [ecx],dh
  41d13d:	sbb    BYTE PTR ds:0x973e6afc,bl
  41d143:	or     al,0x65
  41d145:	(bad)  
  41d146:	cwde   
  41d147:	cld    
  41d148:	jmp    0xea31ee68
  41d14d:	sbb    edx,ebp
  41d14f:	daa    
  41d150:	inc    ecx
  41d151:	fiadd  DWORD PTR [edx]
  41d153:	je     0x41d138
  41d155:	sub    eax,edi
  41d157:	data16 and BYTE PTR [eax],al
  41d15a:	and    DWORD PTR [edx-0x375c1604],ebx
  41d160:	out    0x8c,eax
  41d162:	in     al,dx
  41d163:	xchg   esi,eax
  41d164:	cld    
  41d165:	jo     0x41d1cc
  41d167:	xchg   edx,eax
  41d168:	sub    BYTE PTR [ecx-0x17298151],0x9e
  41d16f:	add    cl,BYTE PTR [ecx-0x783d4e52]
  41d175:	jmp    0xaf42d418
  41d17a:	and    DWORD PTR [ebp-0x14],eax
  41d17d:	cli    
  41d17e:	add    al,0x33
  41d180:	std    
  41d181:	sbb    al,0x8d
  41d183:	cmp    DWORD PTR [edi+0x656e86e1],0x29
  41d18a:	cdq    
  41d18b:	stos   BYTE PTR es:[edi],al
  41d18c:	mov    ebp,0x89029e7f
  41d191:	adc    DWORD PTR [ecx],0xd807f81d
  41d197:	adc    al,0xf4
  41d199:	jmp    FWORD PTR [ebx+ecx*4+0x4a]
  41d19d:	jge    0x41d203
  41d19f:	cmp    DWORD PTR [esi+0x1fdf121],0xffffffe8
  41d1a6:	sahf   
  41d1a7:	jmp    0x41d185
  41d1a9:	fst    st(2)
  41d1ab:	mov    eax,DWORD PTR [edx+0x3d]
  41d1ae:	sbb    eax,DWORD PTR [ecx+0x5740083]
  41d1b4:	add    BYTE PTR [ebx],al
  41d1b6:	scas   eax,DWORD PTR es:[edi]
  41d1b7:	jb     0x41d165
  41d1b9:	add    BYTE PTR [ebp+eax*1-0x1bff1800],0x6a
  41d1c1:	cli    
  41d1c2:	push   eax
  41d1c4:	lds    ecx,FWORD PTR [ebx]
  41d1c6:	test   ah,al
  41d1c8:	(bad)  
  41d1c9:	(bad)  
  41d1ca:	(bad)  
  41d1cb:	mov    edi,0xbc8bec4a
  41d1d0:	cmp    esp,0xc58a34ff
  41d1d6:	je     0x41d228
  41d1d8:	mov    BYTE PTR [eax+eax*4+0x44],bh
  41d1dc:	add    eax,0x9d508d00
  41d1e1:	dec    esi
  41d1e2:	mov    esp,esp
  41d1e4:	gs fwait
  41d1e6:	out    0xfa,al
  41d1e8:	bound  eax,QWORD PTR [edi+0x4986d845]
  41d1ee:	or     al,0xc7
  41d1f0:	dec    edx
  41d1f2:	push   ecx
  41d1f3:	fld    TBYTE PTR ds:0x504007d
  41d1f9:	call   0xfba5b471
  41d1fe:	mov    eax,ecx
  41d200:	push   edx
  41d201:	std    
  41d202:	xchg   edi,eax
  41d203:	jo     0x41d203
  41d205:	(bad)  
  41d206:	push   edi
  41d208:	jp     0x41d191
  41d20a:	fistp  QWORD PTR [edi]
  41d20c:	inc    ecx
  41d20d:	lock cmp eax,DWORD PTR [edx]
  41d210:	cli    
  41d211:	and    DWORD PTR [ebx],edi
  41d213:	cli    
  41d214:	jecxz  0x41d233
  41d216:	push   DWORD PTR [ecx-0x278776f8]
  41d21c:	jge    0x41d1da
  41d21e:	sub    BYTE PTR [ebx+ebp*1],bl
  41d221:	jecxz  0x41d221
  41d223:	add    BYTE PTR [ebx],bh
  41d225:	cmp    DWORD PTR [edi+ecx*1-0x2fe00],0x428ba99d
  41d230:	lea    esp,ds:0xd7cef81d
  41d236:	sub    DWORD PTR [edi],esi
  41d238:	lock int 0xe
  41d23b:	xchg   BYTE PTR ds:0xa60000aa,ah
  41d241:	fisttp WORD PTR [esi]
  41d243:	test   BYTE PTR ds:0x140000aa,bl
  41d249:	rol    BYTE PTR [ebx],cl
  41d24b:	add    BYTE PTR [ebp+0x514ad987],bl
  41d251:	outs   dx,DWORD PTR ds:[esi]
  41d252:	or     DWORD PTR [eax+0x35],edx
  41d255:	lea    ebx,[eax+0x45153afc]
  41d25b:	lock es push 0xffffffe8
  41d25f:	mov    al,bl
  41d261:	xchg   ebp,eax
  41d262:	mov    DWORD PTR [esi],edi
  41d264:	lods   eax,DWORD PTR ds:[esi]
  41d265:	adc    al,0x46
  41d267:	lock es jmp 0x3e89:0xbd6088ef
  41d270:	xchg   ecx,eax
  41d271:	and    al,0x46
  41d273:	in     al,dx
  41d274:	adc    al,0xda
  41d276:	sbb    ecx,DWORD PTR [ecx+0x3fc6c560]
  41d27c:	jno    0x41d227
  41d27e:	mov    ecx,DWORD PTR [edx-0x7]
  41d281:	xchg   esp,eax
  41d282:	mov    esi,0x886a090c
  41d287:	add    BYTE PTR ds:[eax+0x14],bl
  41d28b:	inc    esi
  41d28c:	lock and al,0xfa
  41d28f:	jmp    0x41d219
  41d291:	pusha  
  41d292:	ins    DWORD PTR es:[edi],dx
  41d293:	cmp    DWORD PTR [edi-0x87cf7df],0x3e
  41d29a:	test   al,0x87
  41d29c:	mov    DWORD PTR [ebp+0x608900a9],ebx
  41d2a2:	sbb    DWORD PTR [eax+0x4f027d6f],esp
  41d2a8:	mov    ?,WORD PTR [edi-0x68]
  41d2ab:	pop    ebp
  41d2ac:	mov    edi,ds
  41d2ae:	xchg   edx,eax
  41d2af:	push   ebp
  41d2b0:	adc    esi,DWORD PTR [ecx-0x7f599756]
  41d2b6:	xchg   edi,eax
  41d2b7:	jno    0x41d2ff
  41d2b9:	ins    DWORD PTR es:[edi],dx
  41d2ba:	sub    al,0xd3
  41d2bc:	test   BYTE PTR [edx],dh
  41d2be:	out    dx,al
  41d2bf:	xchg   esi,eax
  41d2c0:	stos   DWORD PTR es:[edi],eax
  41d2c1:	add    esp,DWORD PTR [ecx-0x44845fd4]
  41d2c7:	and    esp,DWORD PTR [eax-0x505474a7]
  41d2cd:	dec    eax
  41d2ce:	inc    ecx
  41d2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2d0:	or     edi,0xfffffff7
  41d2d3:	rcr    DWORD PTR [edi+ecx*8-0x51363e05],1
  41d2da:	sbb    eax,0x21b0c1c2
  41d2df:	popf   
  41d2e0:	sub    ecx,DWORD PTR [edi]
  41d2e2:	stos   BYTE PTR es:[edi],al
  41d2e3:	in     eax,dx
  41d2e4:	lahf   
  41d2e5:	and    ebp,ebp
  41d2e7:	out    dx,al
  41d2e8:	pop    ebx
  41d2e9:	pop    ebp
  41d2ea:	add    al,BYTE PTR [eax+0x3d]
  41d2ed:	add    BYTE PTR [ebx+ecx*8],bl
  41d2f0:	aad    0xab
  41d2f2:	pop    eax
  41d2f3:	(bad)  [eax+ebx*1-0xfc926a1]
  41d2fa:	jo     0x41d2d1
  41d2fc:	jno    0x41d342
  41d2fe:	lds    ecx,FWORD PTR [ecx+0x3d141427]
  41d304:	mov    bh,0x8b
  41d306:	mov    ds:0xc95171e6,al
  41d30b:	mov    BYTE PTR [edi],ah
  41d30d:	sbb    BYTE PTR [edi*1+0x1a3a8d83],ah
  41d314:	bound  ecx,QWORD PTR [ecx-0x4f]
  41d317:	mov    edi,0x8bba2026
  41d31c:	sub    esi,DWORD PTR [eax-0x1a00478b]
  41d322:	xor    dl,BYTE PTR [edi-0x79]
  41d325:	sub    BYTE PTR [ecx+ecx*4+0x42],bh
  41d329:	pop    ecx
  41d32a:	sub    BYTE PTR [esi],ah
  41d32c:	sub    BYTE PTR [edx-0x4c],dh
  41d32f:	xchg   edx,eax
  41d330:	out    0xe7,eax
  41d332:	dec    ebp
  41d333:	xchg   edi,eax
  41d334:	cld    
  41d335:	inc    eax
  41d336:	int3   
  41d337:	cdq    
  41d338:	cld    
  41d339:	inc    esi
  41d33a:	es inc ecx
  41d33c:	cld    
  41d33d:	push   ecx
  41d33e:	test   al,0xa9
  41d340:	cld    
  41d341:	ss mov ecx,0x9eaab806
  41d347:	xchg   edi,eax
  41d348:	adc    bl,BYTE PTR [ecx]
  41d34a:	dec    edi
  41d34b:	(bad)  
  41d34c:	push   DWORD PTR [ecx+0x5e]
  41d34f:	stos   DWORD PTR es:[edi],eax
  41d350:	aaa    
  41d351:	add    DWORD PTR [eax],0xe9405a9a
  41d357:	and    esi,ecx
  41d359:	out    dx,eax
  41d35a:	fcmovnu st,st(6)
  41d35c:	add    ch,BYTE PTR [edx-0xf]
  41d35f:	xchg   BYTE PTR [edx-0x19],dh
  41d362:	test   BYTE PTR [ebx],0x97
  41d365:	adc    ah,cl
  41d367:	mov    BYTE PTR [edx+0x0],0x40
  41d36b:	fadd   DWORD PTR [ebx-0x12b82139]
  41d371:	push   eax
  41d372:	(bad)  
  41d373:	add    eax,0x992911a6
  41d378:	xchg   edi,eax
  41d379:	jb     0x41d354
  41d37b:	sbb    edx,DWORD PTR [ecx]
  41d37d:	or     al,0xbe
  41d37f:	xchg   ebp,eax
  41d380:	or     bh,ch
  41d382:	(bad)  
  41d384:	dec    ebp
  41d385:	inc    eax
  41d386:	jmp    0x464d95aa
  41d38b:	fwait
  41d38c:	cmp    eax,edi
  41d38e:	stos   BYTE PTR es:[edi],al
  41d38f:	daa    
  41d390:	ds pusha 
  41d392:	cmp    al,BYTE PTR [esp+ebp*1+0x2f811989]
  41d399:	mov    DWORD PTR [eax],eax
  41d39b:	pushf  
  41d39c:	inc    edx
  41d39d:	mov    ecx,0x405c0c
  41d3a2:	push   ebp
  41d3a3:	mov    bh,0x6e
  41d3a5:	daa    
  41d3a6:	stc    
  41d3a7:	xor    ebx,DWORD PTR [edx+0x14412ec]
  41d3ad:	push   ebx
  41d3ae:	push   esi
  41d3af:	pmaxsw mm4,QWORD PTR [ebx]
  41d3b2:	sbb    al,0x4a
  41d3b4:	je     0x41d3c7
  41d3b6:	clc    
  41d3b7:	add    BYTE PTR [ebx],ch
  41d3b9:	inc    eax
  41d3ba:	add    BYTE PTR [ebx+0xcc080bc],cl
  41d3c0:	pop    es
  41d3c1:	jns    0x41d3be
  41d3c3:	je     0x41d3d4
  41d3c5:	(bad)  
  41d3c7:	adc    eax,0x3c93a0
  41d3cc:	lods   al,BYTE PTR ds:[esi]
  41d3cd:	stos   BYTE PTR es:[edi],al
  41d3ce:	out    0xff,eax
  41d3d0:	mov    bl,0x80
  41d3d2:	hlt    
  41d3d3:	jmp    FWORD PTR [ecx]
  41d3d5:	nop
  41d3d6:	data16 or BYTE PTR [ecx+edx*1],bl
  41d3da:	in     eax,0xff
  41d3dc:	mov    ds:0x49ffd808,eax
  41d3e1:	or     DWORD PTR [eax+0x54d63443],edi
  41d3e7:	jmp    0x41d3cd
  41d3e9:	in     eax,0xbf
  41d3eb:	mov    BYTE PTR [ecx+eax*1],al
  41d3ee:	add    BYTE PTR [ebx],al
  41d3f0:	stc    
  41d3f1:	test   al,0xb4
  41d3f3:	inc    ebx
  41d3f4:	hlt    
  41d3f5:	mov    ecx,0x8a0b75db
  41d3fa:	push   esp
  41d3fb:	fs jno 0x41d3ec
  41d3fe:	push   edi
  41d3ff:	(bad)  
  41d400:	jmp    0x6677:0x32e43468
  41d407:	adc    BYTE PTR [edx+0x2e52166],cl
  41d40d:	ja     0x41d3f6
  41d40f:	or     ebp,eax
  41d411:	fcomp  DWORD PTR [edi-0x1]
  41d414:	popf   
  41d415:	jecxz  0x41d43e
  41d417:	xor    esi,esp
  41d419:	out    0x34,eax
  41d41b:	std    
  41d41c:	add    BYTE PTR [eax-0x62c00de5],dl
  41d422:	hlt    
  41d423:	cmp    eax,0x3668165b
  41d428:	ret    0xab99
  41d42b:	das    
  41d42c:	push   esi
  41d42d:	cmp    al,BYTE PTR es:[ebp+edi*2-0x297855ff]
  41d435:	adc    DWORD PTR [ebx],ecx
  41d437:	xchg   DWORD PTR [ebp-0xb],eax
  41d43a:	lock mov ebx,0xbef0a274
  41d440:	xchg   bl,bl
  41d442:	mov    cl,0xa7
  41d444:	add    eax,0x657ef1b6
  41d449:	cmc    
  41d44a:	test   eax,0x69150c28
  41d44f:	add    ch,bh
  41d451:	test   al,0xf9
  41d453:	icebp  
  41d454:	aas    
  41d455:	popf   
  41d456:	add    BYTE PTR [edx],ch
  41d458:	push   ebp
  41d459:	add    dh,BYTE PTR [esi+0x749d4058]
  41d45f:	fwait
  41d460:	adc    ch,BYTE PTR ds:0x160040b8
  41d466:	adc    al,0x29
  41d468:	cmp    DWORD PTR [ebx-0x4b],eax
  41d46b:	ds icebp 
  41d46d:	jae    0x41d40b
  41d46f:	adc    al,0x24
  41d471:	mov    ch,0x10
  41d473:	adc    eax,0x9ad3a524
  41d478:	adc    al,BYTE PTR ds:0x26003f6d
  41d47e:	bound  edi,QWORD PTR [edi-0x3d]
  41d481:	add    BYTE PTR [ecx+0x71fc9828],ah
  41d487:	(bad)  
  41d488:	xor    edi,ebp
  41d48a:	mov    BYTE PTR [ebp-0x12],dl
  41d48d:	aas    
  41d48e:	popf   
  41d48f:	add    cl,BYTE PTR [edi-0x626c38da]
  41d495:	adc    dl,0x93
  41d498:	sbb    esi,ecx
  41d49a:	xor    al,0xa
  41d49c:	push   DWORD PTR [ebx-0x3e]
  41d49f:	xchg   ebx,eax
  41d4a0:	test   DWORD PTR [eax],ecx
  41d4a2:	aad    0x93
  41d4a4:	ror    DWORD PTR [ebx],cl
  41d4a6:	in     eax,0x3f
  41d4a8:	out    0x3a,eax
  41d4aa:	dec    edx
  41d4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ac:	(bad)  [edx]
  41d4ae:	pop    ebp
  41d4af:	mov    ah,dh
  41d4b1:	add    ebx,DWORD PTR [ebp+0x52ebe3ff]
  41d4b7:	aas    
  41d4b8:	out    0xea,eax
  41d4ba:	jmp    0xd892:0x8f9cb62a
  41d4c1:	inc    ebx
  41d4c2:	popf   
  41d4c3:	xor    ebx,DWORD PTR [ebp+0x29375d88]
  41d4c9:	or     ebx,DWORD PTR [ebp+0x1daf622d]
  41d4cf:	sahf   
  41d4d0:	push   ds
  41d4d1:	add    BYTE PTR [esi+0x7e],0xe6
  41d4d5:	add    ebx,DWORD PTR [ebp-0x174725d1]
  41d4db:	sub    ecx,edi
  41d4dd:	(bad)  
  41d4de:	aas    
  41d4df:	addr16 test eax,0x387ea003
  41d4e5:	add    eax,DWORD PTR [eax]
  41d4e7:	popf   
  41d4e8:	add    bh,bh
  41d4ea:	or     eax,0x86ed942f
  41d4ef:	pop    edx
  41d4f0:	add    ebp,DWORD PTR [ebx+0x61]
  41d4f3:	adc    dl,BYTE PTR [ebx+0x667dce6]
  41d4f9:	out    0x7f,al
  41d4fb:	es add ah,bh
  41d4fe:	add    esi,DWORD PTR [edx+0x230ad735]
  41d504:	outs   dx,DWORD PTR ds:[esi]
  41d505:	out    0x3,al
  41d507:	popf   
  41d508:	xchg   edi,edi
  41d50a:	cmp    edx,DWORD PTR [ecx+0x2d17e82c]
  41d510:	xchg   esi,eax
  41d511:	cld    
  41d512:	ins    DWORD PTR es:[edi],dx
  41d513:	fld    DWORD PTR ds:0x2a16b84
  41d519:	add    BYTE PTR [esi-0x6b],dl
  41d51c:	pop    edx
  41d51d:	inc    eax
  41d51e:	jmp    0x95546a92
  41d523:	stos   DWORD PTR es:[edi],eax
  41d524:	sar    bh,cl
  41d526:	nop
  41d527:	lock fwait
  41d529:	cld    
  41d52a:	jbe    0x41d53e
  41d52c:	mov    ds:0xfa7af586,eax
  41d531:	and    BYTE PTR [edi+0x36],0x16
  41d535:	pop    ebp
  41d536:	shr    BYTE PTR [edx+ecx*4],1
  41d539:	(bad)  
  41d53a:	call   0x174d8dd
  41d53f:	fld    DWORD PTR [edx+0x0]
  41d542:	add    BYTE PTR [edi+0x7ed762e],dh
  41d548:	adc    eax,0x5f006208
  41d54d:	stos   BYTE PTR es:[edi],al
  41d54e:	inc    ebp
  41d54f:	das    
  41d550:	(bad)
  41d555:	xor    BYTE PTR [eax-0x69],ch
  41d558:	push   eax
  41d559:	jnp    0x41d5a5
  41d55b:	stc    
  41d55c:	daa    
  41d55d:	adc    eax,0x8f5f620c
  41d562:	jb     0x41d555
  41d564:	push   es
  41d565:	(bad)  
  41d566:	std    
  41d567:	inc    BYTE PTR [edi]
  41d569:	fwait
  41d56a:	inc    ebx
  41d56b:	test   BYTE PTR [ebp-0x572750e],0x3d
  41d572:	std    
  41d573:	pop    esp
  41d574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d575:	(bad)  
  41d576:	jb     0x41d569
  41d578:	mov    eax,ss:0x8927d6ec
  41d57e:	inc    ebx
  41d57f:	add    eax,0xf782f5
  41d584:	fcomi  st,st(2)
  41d586:	das    
  41d587:	mov    eax,eax
  41d589:	mov    ds:0x60fae814,al
  41d58e:	sti    
  41d58f:	(bad)  
  41d590:	aas    
  41d591:	enter  0x73e4,0xa5
  41d595:	push   es
  41d596:	add    BYTE PTR [edi+0x2b],dl
  41d599:	xchg   ebx,eax
  41d59a:	in     al,dx
  41d59b:	adc    dh,BYTE PTR [esi+eax*1-0x5]
  41d59f:	jne    0x41d555
  41d5a1:	ins    BYTE PTR es:[edi],dx
  41d5a2:	jno    0x41d5b0
  41d5a4:	sbb    esi,ebx
  41d5a6:	pop    es
  41d5a7:	call   ecx
  41d5a9:	ins    DWORD PTR es:[edi],dx
  41d5aa:	mov    bl,0x43
  41d5ac:	mov    ah,0x88
  41d5ae:	ror    BYTE PTR [eax+eax*1],0xab
  41d5b2:	int3   
  41d5b3:	push   esi
  41d5b4:	mov    esp,ecx
  41d5b6:	retf   0xffbe
  41d5b9:	inc    edx
  41d5ba:	std    
  41d5bb:	fld    TBYTE PTR cs:[ebp+0x5b4c23ca]
  41d5c2:	adc    DWORD PTR [edi],edi
  41d5c4:	add    al,BYTE PTR [ebp+eax*1+0x3ea04489]
  41d5cb:	push   eax
  41d5cc:	call   0x41b7c4
  41d5d1:	mov    ebp,0xec2023d1
  41d5d6:	push   es
  41d5d7:	je     0x41d5fc
  41d5d9:	mov    ecx,0x9c4823d1
  41d5de:	sahf   
  41d5df:	pop    ebp
  41d5e0:	add    BYTE PTR [esp+edx*8-0x6],al
  41d5e4:	adc    eax,0x3c9634
  41d5e9:	pop    es
  41d5ea:	fstp   QWORD PTR [esi-0x494d418]
  41d5f0:	adc    eax,0x402cfc
  41d5f5:	pop    ebp
  41d5f6:	int    0x7e
  41d5f8:	enter  0x5eeb,0xb1
  41d5fc:	mov    DWORD PTR [ebp+0x2417dfd7],ebx
  41d602:	(bad)  
  41d604:	adc    eax,DWORD PTR [ebp-0x63]
  41d607:	pop    es
  41d608:	test   BYTE PTR [edi-0x66],dh
  41d60b:	add    BYTE PTR [eax],al
  41d60d:	push   ss
  41d60e:	jns    0x41d5bb
  41d610:	scas   al,BYTE PTR es:[edi]
  41d611:	les    ebx,FWORD PTR [edi-0x6a]
  41d614:	mov    BYTE PTR [eax],al
  41d616:	cmc    
  41d617:	sbb    eax,0x37210cbb
  41d61c:	add    al,0x0
  41d61e:	popf   
  41d61f:	sbb    al,0x58
  41d621:	and    esp,DWORD PTR [ecx]
  41d623:	fwait
  41d624:	add    BYTE PTR [eax],al
  41d626:	pushf  
  41d627:	cwde   
  41d628:	jge    0x41d5ba
  41d62a:	popf   
  41d62b:	fwait
  41d62c:	add    BYTE PTR [ecx-0x7f40ef],cl
  41d632:	call   0x799:0x9976839a
  41d639:	test   BYTE PTR [edi],bl
  41d63b:	call   0x47dc:0x5e100000
  41d642:	sub    BYTE PTR [esi+0x108523dc],bh
  41d648:	and    eax,DWORD PTR [eax]
  41d64a:	popf   
  41d64b:	ror    BYTE PTR [edi+0x23],1
  41d64e:	sbb    eax,0x2500009a
  41d653:	data16 fcom QWORD PTR [esi+eiz*1]
  41d657:	push   ds
  41d658:	loopne 0x41d5e1
  41d65a:	popf   
  41d65b:	cdq    
  41d65c:	add    al,ch
  41d65e:	nop
  41d65f:	jp     0x41d661
  41d661:	add    BYTE PTR ds:0x9d10dc7e,bl
  41d667:	cwde   
  41d668:	jl     0x41d672
  41d66a:	pushf  
  41d66b:	cdq    
  41d66c:	add    BYTE PTR [edx+0x22],ch
  41d66f:	cdq    
  41d670:	or     al,0x24
  41d672:	shl    DWORD PTR [eax+0x2ae0fed],1
  41d678:	daa    
  41d679:	add    al,0x0
  41d67b:	or     BYTE PTR [edi],dl
  41d67d:	add    ebp,esp
  41d67f:	cli    
  41d680:	mov    edi,0x528ff999
  41d686:	loopne 0x41d64a
  41d688:	(bad)  
  41d689:	(bad)  [ebx-0x74]
  41d68c:	inc    edx
  41d68d:	out    0x8c,eax
  41d68f:	data16 out 0x2,al
  41d692:	jg     0x41d66d
  41d694:	jmp    DWORD PTR [edx-0x5d]
  41d697:	ror    BYTE PTR [edi-0x19a1791a],cl
  41d69d:	lods   al,BYTE PTR cs:[esi]
  41d69f:	ss and ah,bh
  41d6a2:	add    esp,DWORD PTR [esi+edi*1]
  41d6a5:	test   DWORD PTR [esi+ebx*2+0x5dc1e2e6],0x258ae6fe
  41d6b0:	cli    
  41d6b1:	lods   al,BYTE PTR ds:[esi]
  41d6b2:	add    al,0x9a
  41d6b4:	add    al,0xa8
  41d6b6:	mov    bl,al
  41d6b8:	sbb    ch,BYTE PTR ds:0x5001f941
  41d6be:	arpl   WORD PTR [eax-0x1067aa71],ax
  41d6c4:	repnz dec ebp
  41d6c6:	push   cs
  41d6c7:	mov    eax,ds:0x68a2529a
  41d6cc:	(bad)  
  41d6cd:	outs   dx,DWORD PTR ds:[esi]
  41d6ce:	aas    
  41d6cf:	mov    ecx,0xcfc36bea
  41d6d4:	jmp    0x3e6:0x827e4f2d
  41d6db:	popf   
  41d6dc:	jnp    0x41d740
  41d6de:	fild   WORD PTR [eax]
  41d6e0:	sbb    al,BYTE PTR [edx]
  41d6e2:	out    0x3,eax
  41d6e4:	inc    ebp
  41d6e5:	jns    0x41d66d
  41d6e7:	add    ebx,DWORD PTR [ebp-0x62fc8c67]
  41d6ed:	add    ah,BYTE PTR ds:0xff8f9d04
  41d6f3:	jl     0x41d6ef
  41d6f5:	mov    DWORD PTR ds:[ebp-0x6017c90e],esp
  41d6fc:	add    al,0x8e
  41d6fe:	cld    
  41d6ff:	jo     0x41d75f
  41d701:	cli    
  41d702:	mov    BYTE PTR [ebp-0x3],ch
  41d705:	push   cs
  41d706:	add    cl,ch
  41d708:	sahf   
  41d709:	xchg   DWORD PTR [eax-0xb],eax
  41d70c:	pop    ss
  41d70d:	and    DWORD PTR [ebx],0x65
  41d710:	cdq    
  41d711:	add    al,BYTE PTR [eax]
  41d713:	inc    ebx
  41d714:	mov    edi,0x25d94087
  41d719:	or     esp,DWORD PTR [ecx+eiz*8]
  41d71c:	xchg   BYTE PTR [edx+0x29ee12c],bl
  41d722:	push   0xffffffca
  41d724:	and    eax,0x76c1240b
  41d729:	call   0xa689:0x29ec120
  41d730:	imul   edi,DWORD PTR [ebx+0x43],0xfd3e76cd
  41d737:	hlt    
  41d738:	mov    cs,WORD PTR [edi-0x5982f28d]
  41d73e:	cli    
  41d73f:	cmp    eax,0xc698f2a
  41d744:	add    BYTE PTR [esi],ah
  41d746:	mov    dh,0x8a
  41d748:	int    0x52
  41d74a:	not    BYTE PTR [edi+0x51]
  41d74d:	mov    al,ds:0x17e8ffca
  41d752:	(bad)  
  41d753:	dec    edi
  41d754:	call   0xcd01:0x9241233
  41d75b:	(bad)  [esi]
  41d75d:	xor    bl,BYTE PTR [eiz*1+0x7b790172]
  41d764:	int    0x56
  41d766:	ss call 0xfcd03973
  41d76c:	add    BYTE PTR [edi+0x23534c4d],ch
  41d772:	(bad)  
  41d773:	and    esp,DWORD PTR [eax]
  41d775:	pushf  
  41d776:	lods   al,BYTE PTR ds:[esi]
  41d777:	fdivr  st,st(7)
  41d779:	add    edi,DWORD PTR [edi+0x40]
  41d77c:	and    al,0x8
  41d77e:	add    BYTE PTR [eax+0x24],0x94
  41d782:	add    dh,BYTE PTR [edi+edx*2+0x7f]
  41d786:	cmc    
  41d787:	and    ebx,DWORD PTR [eax]
  41d789:	jns    0x41d7ff
  41d78b:	jno    0x41d795
  41d78d:	outs   dx,DWORD PTR ds:[esi]
  41d78e:	jmp    0x4e7:0x96818b0b
  41d795:	aas    
  41d796:	aad    0x23
  41d798:	adc    al,0x71
  41d79a:	int    0x23
  41d79c:	sbb    BYTE PTR [ebp+esi*2+0x79a82470],al
  41d7a3:	mov    edi,0x70a298ff
  41d7a8:	push   edi
  41d7a9:	add    BYTE PTR [edx+esi*2],bl
  41d7ac:	in     al,dx
  41d7ad:	jmp    DWORD PTR [ebx]
  41d7af:	jne    0x41d821
  41d7b1:	and    al,0x90
  41d7b3:	jg     0x41d7f5
  41d7b5:	and    al,0x6c
  41d7b7:	pop    ecx
  41d7b8:	nop
  41d7b9:	loopne 0x41d7bd
  41d7bb:	jne    0x41d83c
  41d7bd:	jl     0x41d757
  41d7bf:	xchg   edx,eax
  41d7c0:	cld    
  41d7c1:	je     0x41d836
  41d7c3:	test   al,0x79
  41d7c5:	or     al,0x58
  41d7c7:	cmp    eax,DWORD PTR [ebp-0x7a716784]
  41d7cd:	pop    esp
  41d7ce:	cwde   
  41d7cf:	xchg   edx,eax
  41d7d0:	out    0xb,eax
  41d7d2:	lahf   
  41d7d3:	jmp    0x41d7e0
  41d7d5:	je     0x41d821
  41d7d7:	fsubr  st(7),st
  41d7d9:	jae    0x41d7bf
  41d7db:	ja     0x41d7d8
  41d7dd:	mov    eax,DWORD PTR [eax]
  41d7df:	lods   eax,DWORD PTR ds:[esi]
  41d7e0:	adc    al,0x85
  41d7e2:	mov    ds:0x9d8d28fd,eax
  41d7e7:	pop    edi
  41d7e8:	fadd   QWORD PTR [edi+0x45]
  41d7eb:	lds    esi,FWORD PTR ds:0x3d109d00
  41d7f1:	and    al,0x81
  41d7f3:	sbb    BYTE PTR [ebx],bl
  41d7f5:	pusha  
  41d7f6:	popf   
  41d7f7:	and    bh,BYTE PTR [ebx]
  41d7f9:	push   0x13dc6726
  41d7fe:	adc    al,0xdd
  41d800:	aaa    
  41d801:	mov    DWORD PTR [eax-0x75],ebx
  41d804:	mov    edx,0x899b8945
  41d809:	jge    0x41d860
  41d80b:	and    bh,BYTE PTR [esi]
  41d80d:	fs add ah,dh
  41d810:	fst    DWORD PTR [esp+edi*8+0x24401de2]
  41d817:	gs ret 
  41d819:	cwde   
  41d81a:	pop    ebp
  41d81b:	popf   
  41d81c:	fwait
  41d81d:	xchg   DWORD PTR [ebx-0x7f],eax
  41d820:	pop    es
  41d821:	xchg   DWORD PTR [edx-0x53],ecx
  41d824:	cwde   
  41d825:	rol    DWORD PTR [esi+0x45be0363],0x41
  41d82c:	fwait
  41d82d:	test   eax,0x9283a834
  41d832:	push   edx
  41d833:	push   ss
  41d834:	jg     0x41d7b9
  41d836:	cmp    al,BYTE PTR [eax-0x62ffc0bf]
  41d83c:	call   0x4bd732c7
  41d841:	sub    esi,DWORD PTR [esp+ecx*1-0x17]
  41d845:	xchg   edx,eax
  41d846:	cmp    BYTE PTR [edx-0x52],bl
  41d849:	daa    
  41d84a:	aaa    
  41d84b:	lock lods eax,DWORD PTR ds:[esi]
  41d84d:	adc    ah,BYTE PTR [esi+0x75]
  41d850:	or     al,0xa6
  41d852:	std    
  41d853:	bound  esp,QWORD PTR [esi]
  41d855:	les    esi,FWORD PTR [ebx-0x8]
  41d858:	rol    DWORD PTR [eax+edi*4],0xde
  41d85c:	cdq    
  41d85d:	xchg   ebx,eax
  41d85e:	adc    bh,BYTE PTR [ecx]
  41d860:	add    edi,ecx
  41d862:	inc    ebx
  41d863:	popf   
  41d864:	leave  
  41d865:	fwait
  41d866:	pop    es
  41d867:	mov    ebx,0x34401d40
  41d86c:	pop    es
  41d86d:	call   0xbab94681
  41d872:	cwde   
  41d873:	add    BYTE PTR [edx],bh
  41d875:	jo     0x41d87b
  41d877:	xchg   ebp,eax
  41d878:	sbb    DWORD PTR [eax-0x25716b12],eax
  41d87e:	jg     0x41d843
  41d880:	and    al,BYTE PTR [ebx]
  41d882:	out    0x3,eax
  41d884:	pushf  
  41d885:	add    eax,0x25d5c0f
  41d88a:	push   0x1b
  41d88c:	imul   eax,DWORD PTR [edx],0xa6ad854
  41d892:	inc    esp
  41d893:	add    al,0x6e
  41d895:	aam    0x71
  41d897:	retf   
  41d898:	ret    0xcd7c
  41d89b:	xchg   esp,eax
  41d89c:	rol    DWORD PTR [ebp-0x6b61f05a],1
  41d8a2:	out    0x2,al
  41d8a4:	dec    esi
  41d8a5:	in     al,0x25
  41d8a7:	fnstenv [edi]
  41d8a9:	(bad)  
  41d8aa:	adc    dl,BYTE PTR [esi+0x3a]
  41d8ad:	dec    BYTE PTR [esi+0x40]
  41d8b0:	popf   
  41d8b1:	mov    ebx,ebx
  41d8b3:	xchg   ebx,eax
  41d8b4:	mov    WORD PTR [edx-0x19],es
  41d8b7:	xchg   esp,eax
  41d8b8:	psllq  mm6,QWORD PTR [ebp+0xe]
  41d8bc:	mov    eax,ds:0x8aee6e2f
  41d8c1:	push   ebx
  41d8c2:	test   eax,0xeac61c03
  41d8c7:	xor    al,0xdb
  41d8c9:	daa    
  41d8ca:	mov    ah,0xc0
  41d8cc:	cli    
  41d8cd:	dec    BYTE PTR [esi-0x247462c0]
  41d8d3:	xchg   ebx,eax
  41d8d4:	mov    WORD PTR [edx-0x19],es
  41d8d7:	rol    BYTE PTR [eax],1
  41d8d9:	sbb    al,BYTE PTR [edx+0x0]
  41d8dc:	iret   
  41d8dd:	daa    
  41d8de:	aas    
  41d8df:	stc    
  41d8e0:	out    0x15,eax
  41d8e2:	(bad)  
  41d8e3:	call   0x73f39bf5
  41d8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e9:	and    al,0xf9
  41d8eb:	and    DWORD PTR [eax],0xffffffa2
  41d8ee:	int    0x30
  41d8f0:	sub    DWORD PTR [esi],ebx
  41d8f2:	xchg   esp,eax
  41d8f3:	sub    bh,BYTE PTR [ebx+eiz*1+0x19]
  41d8f7:	add    ah,BYTE PTR [ecx-0xf7fffbb]
  41d8fd:	cli    
  41d8fe:	ud0    ebp,DWORD PTR [edx-0x2d0a2e48]
  41d905:	or     DWORD PTR [ebx],ecx
  41d907:	mul    DWORD PTR [eax]
  41d909:	mov    ?,eax
  41d90b:	push   0xbdfdf3df
  41d910:	mov    al,ds:0x990e0f1c
  41d915:	pop    ebx
  41d916:	js     0x41d921
  41d918:	imul   ebp,DWORD PTR [eax],0x25c07adb
  41d91e:	les    esi,FWORD PTR [ebx-0x16]
  41d921:	and    eax,ebx
  41d923:	(bad)  
  41d924:	push   eax
  41d925:	fwait
  41d926:	push   ss
  41d927:	add    dl,BYTE PTR [esi+0x373483ef]
  41d92d:	fiadd  DWORD PTR [ecx-0x57716dc]
  41d933:	push   edi
  41d934:	stos   BYTE PTR es:[edi],al
  41d935:	fs jns 0x41d923
  41d938:	push   0x45
  41d93a:	xchg   edx,eax
  41d93b:	add    BYTE PTR [ebp+0x56337500],0x16
  41d942:	jb     0x41d8cb
  41d944:	and    ah,0x8a
  41d947:	mov    DWORD PTR [edi+0xcf282dd],eax
  41d94d:	imul   edx,DWORD PTR [edx+0x1de9fc89],0x46
  41d954:	and    al,0x0
  41d956:	jl     0x41d92e
  41d958:	out    0xf7,eax
  41d95a:	shl    DWORD PTR [ebp-0x5],0x84
  41d95e:	test   BYTE PTR ds:0x6355984,al
  41d964:	add    BYTE PTR [ebx],dh
  41d966:	je     0x41d9a6
  41d968:	test   DWORD PTR [eax+eiz*2-0x5e],eax
  41d96c:	xor    eax,0x86053045
  41d971:	cmp    al,0x35
  41d973:	push   es
  41d974:	add    BYTE PTR [ebx+0x4011fe39],cl
  41d97a:	add    al,0x9
  41d97c:	dec    edx
  41d97d:	adc    BYTE PTR [ebx],dh
  41d97f:	call   0x7f92d97e
  41d984:	push   ebx
  41d985:	call   0x3d756a
  41d98a:	outs   dx,DWORD PTR ds:[esi]
  41d98b:	jne    0x41d912
  41d98d:	je     0x41d92f
  41d98f:	sahf   
  41d990:	aaa    
  41d991:	test   ebx,0xf4012281
  41d997:	add    eax,0x5c87d80
  41d99c:	je     0x41d9ac
  41d99e:	mov    dl,0x75
  41d9a0:	jno    0x41d9aa
  41d9a2:	add    ah,bl
  41d9a4:	pop    esi
  41d9a5:	xchg   bh,bh
  41d9a7:	sti    
  41d9a8:	data16 out 0x0,al
  41d9ab:	les    eax,FWORD PTR ds:0x6dbc4587
  41d9b1:	mov    ebp,0x85751b8a
  41d9b6:	inc    esp
  41d9b7:	rcr    BYTE PTR [ecx-0x6e9fbb77],1
  41d9bd:	dec    esp
  41d9be:	mov    DWORD PTR [eax-0x1517eb5f],ecx
  41d9c4:	jp     0x41d9c1
  41d9c6:	push   eax
  41d9c8:	lds    ecx,FWORD PTR [ebx]
  41d9ca:	test   BYTE PTR [ebx],bl
  41d9cc:	add    eax,0x1e9d0000
  41d9d1:	inc    ebp
  41d9d2:	and    al,0xb5
  41d9d4:	dec    ebx
  41d9d5:	xchg   ecx,eax
  41d9d6:	jae    0x41d991
  41d9d8:	sti    
  41d9d9:	fwait
  41d9da:	shl    BYTE PTR [edx],cl
  41d9dc:	enter  0x8891,0xe1
  41d9e0:	neg    ebx
  41d9e2:	xchg   cl,bl
  41d9e4:	call   edi
  41d9e6:	dec    esi
  41d9e7:	push   ss
  41d9e8:	rol    esi,cl
  41d9ea:	inc    ebx
  41d9eb:	sub    DWORD PTR [edi-0x48267900],0xbfa986cc
  41d9f5:	inc    eax
  41d9f6:	call   0xfcd3ebb9
  41d9fb:	and    ebx,ebx
  41d9fd:	add    DWORD PTR [esi+ebx*1+0x7300009b],eax
  41da04:	loope  0x41da4a
  41da06:	and    al,0x0
  41da08:	scas   al,BYTE PTR es:[edi]
  41da09:	fwait
  41da0a:	(bad)  
  41da0b:	rcl    BYTE PTR [edx+0x16],1
  41da0e:	inc    eax
  41da0f:	and    al,0xa9
  41da11:	and    cl,BYTE PTR [eax+0x24]
  41da14:	lods   eax,DWORD PTR ds:[esi]
  41da15:	and    dl,BYTE PTR [eax]
  41da17:	and    al,0x89
  41da19:	mov    bl,0x6b
  41da1b:	(bad)  
  41da1c:	fiadd  DWORD PTR [edi+0x7a]
  41da1f:	out    dx,eax
  41da20:	xchg   esi,eax
  41da21:	dec    eax
  41da22:	pop    ss
  41da23:	popa   
  41da24:	jae    0x41da7e
  41da26:	mov    dl,0x88
  41da28:	push   ecx
  41da29:	mov    bh,0xe0
  41da2b:	dec    edi
  41da2c:	push   ebx
  41da2d:	push   0xac692417
  41da32:	shl    bh,0xfc
  41da35:	fild   WORD PTR [ebx]
  41da37:	add    BYTE PTR [ecx],bl
  41da39:	pop    ebx
  41da3a:	pop    ss
  41da3b:	sbb    al,0x9a
  41da3d:	mov    fs,esp
  41da3f:	mov    esi,cr1
  41da42:	in     al,0x33
  41da44:	jne    0x41d9d6
  41da46:	jg     0x41da44
  41da48:	add    BYTE PTR [ebx],0x6b
  41da4b:	(bad)  
  41da4c:	out    dx,al
  41da4d:	stc    
  41da4e:	pop    ebp
  41da4f:	inc    eax
  41da50:	mov    ecx,0xc1482cf2
  41da55:	mul    edi
  41da57:	aam    0x61
  41da59:	mov    BYTE PTR [edx-0x4d785519],ch
  41da5f:	out    0xa2,eax
  41da61:	jne    0x41da05
  41da63:	out    0x8e,eax
  41da65:	call   0x9471:0x8841819b
  41da6c:	add    BYTE PTR [ebp-0x71],dh
  41da6f:	xchg   ebx,eax
  41da70:	push   esi
  41da71:	mov    dl,0x6
  41da73:	retf   
  41da74:	add    BYTE PTR [ebp-0x516f07f2],bl
  41da7a:	fidivr WORD PTR [esi-0x4121a184]
  41da80:	nop
  41da81:	mov    ds,esi
  41da83:	(bad)  
  41da84:	fwait
  41da85:	or     eax,0x1790ed7e
  41da8a:	ud2    
  41da8c:	aam    0x2
  41da8e:	push   esp
  41da8f:	imul   edx,DWORD PTR [eax-0x17a58a0f],0xffffff8e
  41da96:	call   0x17c5:0x87e1877c
  41da9d:	and    edx,0x88f74ace
  41daa3:	mov    ch,0x7c
  41daa5:	pop    esi
  41daa6:	fiadd  WORD PTR [edx]
  41daa8:	inc    esp
  41daa9:	sbb    bh,BYTE PTR [edi]
  41daab:	retf   
  41daac:	out    0x75,eax
  41daae:	cmp    eax,0xbd1f00f3
  41dab3:	xchg   esp,eax
  41dab4:	nop
  41dab5:	test   eax,0x8ae81275
  41daba:	call   0x236:0x87998770
  41dac1:	test   bl,bh
  41dac3:	jmp    DWORD PTR [ebx-0x4e]
  41dac6:	ficom  WORD PTR [edi]
  41dac8:	adc    DWORD PTR [ebx+0x5066fc7e],0xbf5c47
  41dad2:	sar    DWORD PTR [ecx-0x1e],0xb4
  41dad6:	pusha  
  41dad7:	idiv   edi
  41dad9:	sbb    DWORD PTR [ecx-0x39],ebx
  41dadc:	push   es
  41dadd:	in     al,dx
  41dade:	dec    di
  41dae0:	inc    eax
  41dae1:	jmp    0xf14c5d3f
  41dae6:	(bad)  
  41dae7:	inc    edx
  41dae8:	add    bl,ch
  41daea:	out    dx,al
  41daeb:	mov    cl,al
  41daed:	push   0x3b
  41daef:	iret   
  41daf0:	mov    bh,0xaa
  41daf2:	sahf   
  41daf3:	cli    
  41daf4:	scas   eax,DWORD PTR es:[edi]
  41daf5:	call   0xfdcb0f5b
  41dafa:	push   ds
  41dafb:	mov    ds:0x833a68f7,eax
  41db00:	(bad)  
  41db01:	call   0x9e980ca4
  41db06:	icebp  
  41db07:	test   eax,0x7a2d8350
  41db0c:	out    dx,eax
  41db0d:	out    0x93,al
  41db0f:	(bad)  
  41db10:	push   eax
  41db11:	rcl    DWORD PTR [edx-0x5129031d],1
  41db17:	sbb    al,0xfd
  41db19:	into   
  41db1a:	mov    edi,edx
  41db1c:	xchg   BYTE PTR ds:0xd150dac5,ch
  41db22:	and    bl,0xfc
  41db25:	mov    dh,0x8e
  41db27:	sbb    al,0xfd
  41db29:	scas   al,BYTE PTR es:[edi]
  41db2a:	stos   DWORD PTR es:[edi],eax
  41db2b:	test   BYTE PTR [esi+0x50d2c52d],0x91
  41db32:	jb     0x41db17
  41db34:	cld    
  41db35:	xchg   esi,eax
  41db36:	add    BYTE PTR [esi],ah
  41db38:	xchg   edi,eax
  41db39:	xchg   BYTE PTR ds:0x36d6b5,dl
  41db3f:	rcr    BYTE PTR [edx-0x2007f0e4],0xfc
  41db46:	push   DWORD PTR [edi+esi*4+0x58]
  41db4a:	and    al,0x5c
  41db4c:	test   DWORD PTR [eax+0x28557],eax
  41db52:	cmp    edx,edi
  41db54:	test   DWORD PTR [eax+0x2754f],eax
  41db5a:	cmp    BYTE PTR [ecx],dh
  41db5c:	mov    dh,BYTE PTR [eax+0x14]
  41db5f:	jecxz  0x41db4b
  41db61:	and    ebp,DWORD PTR [eax]
  41db63:	xchg   ebx,eax
  41db64:	jmp    0xff6e:0xb5dc2423
  41db6b:	jae    0x41db75
  41db6d:	aad    0xe9
  41db6f:	pop    edx
  41db70:	(bad)  
  41db71:	(bad)  
  41db72:	inc    ecx
  41db74:	cmp    ah,BYTE PTR [esp]
  41db77:	in     al,0x6
  41db79:	pop    ecx
  41db7a:	and    al,0x44
  41db7c:	push   0x2e
  41db7e:	mov    WORD PTR [ebx-0x7207788b],fs
  41db84:	repnz and ebx,DWORD PTR [edi+ecx*2]
  41db88:	jns    0x41db95
  41db8a:	test   ch,ah
  41db8c:	(bad)  
  41db8d:	(bad)  
  41db8e:	inc    DWORD PTR [ebx]
  41db90:	out    dx,al
  41db91:	and    ebp,DWORD PTR [eax]
  41db93:	adc    ebp,0xedd35823
  41db99:	and    esp,DWORD PTR [eax+eax*1]
  41db9c:	fcomp  QWORD PTR [edi+0x65]
  41db9f:	jmp    ebx
  41dba1:	or     BYTE PTR [ecx+0x24],dh
  41dba4:	cwde   
  41dba5:	and    DWORD PTR [eax+0x24],0x44c601ec
  41dbac:	cwde   
  41dbad:	test   esp,edi
  41dbaf:	test   BYTE PTR [edx],bl
  41dbb1:	test   DWORD PTR [eax+0x1c4df],eax
  41dbb7:	imul   ebx,DWORD PTR [ebp-0x2577399b],0x26
  41dbbe:	cmp    DWORD PTR [edx],edi
  41dbc0:	sahf   
  41dbc1:	add    al,0x82
  41dbc3:	mov    edi,0x86c9f199
  41dbc8:	fnstenv [edi-0x40267918]
  41dbce:	hlt    
  41dbcf:	pop    eax
  41dbd0:	add    edx,DWORD PTR [ecx]
  41dbd2:	test   DWORD PTR [ebx],esp
  41dbd4:	daa    
  41dbd5:	fwait
  41dbd6:	add    BYTE PTR [eax],al
  41dbd8:	add    edx,DWORD PTR [edi]
  41dbda:	shl    DWORD PTR [ebx-0x69],0xbd
  41dbde:	retf   
  41dbdf:	inc    esp
  41dbe0:	xchg   ebx,eax
  41dbe1:	mov    WORD PTR [edi+0x9b9d7f],es
  41dbe7:	pushw  ss
  41dbe9:	pop    ss
  41dbea:	in     eax,0x8b
  41dbec:	popf   
  41dbed:	fwait
  41dbee:	add    BYTE PTR [esi+0x20],ah
  41dbf1:	fist   DWORD PTR [esi+eax*1]
  41dbf4:	mov    ebx,0xb03845a2
  41dbf9:	jle    0x41dc7a
  41dbfb:	inc    ebx
  41dbfc:	jns    0x41dc51
  41dbfe:	xor    BYTE PTR [esi+0x0],ah
  41dc01:	loop   0x41dc59
  41dc03:	in     al,0x37
  41dc05:	shl    BYTE PTR [ecx+0x4fc1437b],cl
  41dc0b:	lea    edx,[edx]
  41dc0d:	test   DWORD PTR [ecx-0x28dbffc0],ebp
  41dc13:	out    0x3b,eax
  41dc15:	es (bad) 
  41dc18:	cmovge esp,DWORD PTR [edx]
  41dc1b:	dec    eax
  41dc1c:	and    al,0x59
  41dc1e:	mov    ah,0xf4
  41dc20:	ja     0x41dbd1
  41dc22:	fild   DWORD PTR [ebx]
  41dc24:	mov    esp,DWORD PTR [ecx-0x1]
  41dc27:	xlat   BYTE PTR ds:[ebx]
  41dc28:	xchg   BYTE PTR [ecx-0x9],ah
  41dc2b:	inc    edi
  41dc2c:	lds    ebx,FWORD PTR [ecx-0x1]
  41dc2f:	xor    eax,DWORD PTR ds:0x3e7029d
  41dc35:	(bad)  
  41dc38:	mov    WORD PTR [ecx+0x7418a67d],gs
  41dc3e:	leave  
  41dc3f:	or     ch,al
  41dc41:	mov    dh,0x10
  41dc43:	repz js 0x41dc2c
  41dc46:	(bad)  
  41dc48:	xor    al,0x14
  41dc4a:	mov    ebp,0x8566367e
  41dc4f:	ins    DWORD PTR es:[edi],dx
  41dc50:	(bad)  
  41dc51:	out    0xde,al
  41dc53:	or     bl,bl
  41dc55:	(bad)  
  41dc56:	fdivrp st(6),st
  41dc58:	fsubr  DWORD PTR [ebp-0x7c]
  41dc5b:	mov    ds:0x51d78ae7,al
  41dc60:	fcomi  st,st(6)
  41dc62:	(bad)  
  41dc64:	lds    eax,FWORD PTR [eax]
  41dc66:	(bad)  
  41dc68:	in     eax,dx
  41dc69:	add    cl,BYTE PTR [eax+0x3f]
  41dc6c:	or     ebp,esp
  41dc6e:	adc    eax,0x3be8033f
  41dc73:	sub    bl,cl
  41dc75:	repz xor ebp,DWORD PTR [eax]
  41dc78:	ret    
  41dc79:	neg    DWORD PTR [ebp+0x7947cf87]
  41dc7f:	jmp    0x8d05:0x836781dd
  41dc86:	xchg   edx,eax
  41dc87:	push   es
  41dc88:	ret    
  41dc89:	cld    
  41dc8a:	or     dl,BYTE PTR [eax]
  41dc8c:	in     al,0x8c
  41dc8e:	mov    ds,esi
  41dc90:	retf   0x7c9b
  41dc93:	ja     0x41dc7a
  41dc95:	mov    WORD PTR [ebx+ebp*4],fs
  41dc98:	rol    DWORD PTR [ecx],1
  41dc9a:	scas   eax,DWORD PTR es:[edi]
  41dc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc9c:	aad    0x17
  41dc9e:	mov    ecx,0xf5c2bee6
  41dca3:	test   ch,al
  41dca5:	jle    0x41dcf5
  41dca7:	fimul  WORD PTR [edx]
  41dca9:	pushf  
  41dcaa:	inc    BYTE PTR [eax-0x78ee4a01]
  41dcb0:	jae    0x41dcb7
  41dcb2:	rcr    DWORD PTR [ebx-0x78df3d54],0xfc
  41dcb9:	adc    eax,0x4fe7dbb5
  41dcbe:	cmc    
  41dcbf:	test   esp,edi
  41dcc1:	mov    ?,WORD PTR [edx+0x3912fde]
  41dcc7:	stos   DWORD PTR es:[edi],eax
  41dcc8:	std    
  41dcc9:	jle    0x41dccb
  41dccb:	mov    ecx,0xb5aa8a24
  41dcd0:	jns    0x41dcb4
  41dcd2:	or     al,0x5f
  41dcd4:	(bad)  
  41dcd5:	(bad)  
  41dcd6:	mov    ebx,0x458097f5
  41dcdb:	push   ss
  41dcdc:	jp     0x41dc9c
  41dcde:	push   0x14
  41dce0:	push   DWORD PTR [ecx-0x20]
  41dce3:	mov    ah,0x83
  41dce5:	in     al,0xdf
  41dce7:	and    BYTE PTR [esi-0x2f63ad04],al
  41dced:	mov    edi,0xc127fb62
  41dcf2:	xchg   esp,eax
  41dcf3:	mov    ch,0x97
  41dcf5:	or     BYTE PTR ds:0x6abe7a26,0x14
  41dcfc:	push   DWORD PTR [ecx-0x20]
  41dcff:	test   BYTE PTR [edx],al
  41dd01:	call   0xfcc80819
  41dd06:	adc    bl,BYTE PTR [eax+edx*8+0x284372bf]
  41dd0d:	rcr    DWORD PTR [ebx-0x7d00e731],0x9f
  41dd14:	call   0x3bc0:0x8626e52d
  41dd1b:	mov    al,0x18
  41dd1d:	add    BYTE PTR [ebx-0x68],al
  41dd20:	call   0xc0:0x8626cd21
  41dd27:	mov    cl,0x3
  41dd29:	jmp    0x7db7bdb1
  41dd2e:	in     al,dx
  41dd2f:	add    al,ah
  41dd31:	cld    
  41dd32:	(bad)  
  41dd33:	call   DWORD PTR [edi+0x708952d0]
  41dd39:	mov    ds:0xa278890c,al
  41dd3e:	adc    BYTE PTR [ebx-0x79f502f2],al
  41dd44:	cmp    BYTE PTR [edi],al
  41dd46:	add    BYTE PTR [eax],al
  41dd48:	lods   al,BYTE PTR ds:[esi]
  41dd49:	out    0xfc,al
  41dd4b:	push   DWORD PTR [esi+ebx*4-0xc]
  41dd4f:	fimul  DWORD PTR [edx]
  41dd51:	mov    gs,WORD PTR [edi]
  41dd53:	imul   BYTE PTR [edi]
  41dd55:	inc    esp
  41dd56:	jo     0x41dd63
  41dd58:	out    dx,eax
  41dd59:	mov    fs,esp
  41dd5b:	dec    edi
  41dd5c:	std    
  41dd5d:	push   es
  41dd5e:	add    BYTE PTR [ebx+0x32fea1ac],cl
  41dd64:	(bad)  
  41dd65:	push   ecx
  41dd66:	fimul  DWORD PTR [edi]
  41dd68:	shl    ch,0xfc
  41dd6b:	push   DWORD PTR [ecx+ebx*2]
  41dd6e:	sti    
  41dd6f:	inc    edi
  41dd70:	dec    ebp
  41dd71:	or     ah,BYTE PTR [eax+edx*1]
  41dd74:	bnd js 0x41dcfe
  41dd77:	inc    esp
  41dd78:	pusha  
  41dd79:	jb     0x41dd76
  41dd7b:	xor    al,0xbc
  41dd7d:	sahf   
  41dd7e:	cmp    ecx,0x3b430634
  41dd84:	sub    BYTE PTR [edx+0xc],ah
  41dd87:	jb     0x41dd32
  41dd89:	sti    
  41dd8a:	inc    edi
  41dd8b:	add    al,0x8f
  41dd8d:	pop    es
  41dd8e:	sti    
  41dd8f:	push   eax
  41dd90:	lock cmp BYTE PTR [esp+esi*2+0x181f6e00],0xe8
  41dd99:	or     dh,BYTE PTR [eax+0x44bffffa]
  41dd9f:	jo     0x41ddbf
  41dda1:	popf   
  41dda2:	mov    al,0x0
  41dda4:	hlt    
  41dda5:	sub    DWORD PTR [esp+eax*1],ebp
  41dda8:	xchg   DWORD PTR [ebp+0x77],ecx
  41ddab:	jnp    0x41de1c
  41ddad:	lods   eax,DWORD PTR ds:[esi]
  41ddae:	test   al,0x40
  41ddb0:	or     BYTE PTR [ebp-0x1cffbf1a],bl
  41ddb6:	sub    esi,eax
  41ddb8:	(bad)  
  41ddb9:	and    eax,0xa588ffc4
  41ddbe:	xchg   esp,eax
  41ddbf:	add    dh,BYTE PTR [ecx]
  41ddc1:	mov    ds:0xe6738654,al
  41ddc6:	fidivr WORD PTR [esp]
  41ddc9:	mov    ch,0x1b
  41ddcb:	push   ds
  41ddcc:	add    esi,DWORD PTR [ebp-0x6d]
  41ddcf:	mov    bl,0xff
  41ddd1:	sub    bh,0xc0
  41ddd4:	jae    0x41dd7d
  41ddd6:	fidivr WORD PTR [esp]
  41ddd9:	xchg   ebp,eax
  41ddda:	mov    ebx,0x6b2a3198
  41dddf:	add    BYTE PTR [esi-0x35],dl
  41dde2:	rcr    BYTE PTR [eax],0xe1
  41dde5:	cwde   
  41dde6:	lods   eax,DWORD PTR ds:[esi]
  41dde7:	add    BYTE PTR [esi-0x15],dl
  41ddea:	enter  0x4fef,0xaf
  41ddee:	stos   DWORD PTR es:[edi],eax
  41ddef:	add    BYTE PTR [ecx],bh
  41ddf1:	pop    ebx
  41ddf2:	mov    esi,0x45a288f2
  41ddf7:	add    ecx,DWORD PTR [ecx-0xed79e00]
  41ddfd:	mov    BYTE PTR [edx+0x52890395],ah
  41de03:	sbb    cl,dh
  41de05:	call   0x12cb99b7
  41de0a:	cmp    eax,0x4d00405d
  41de0f:	push   0xffffff9d
  41de11:	add    al,0xf5
  41de13:	popa   
  41de14:	add    BYTE PTR [eax],al
  41de16:	popf   
  41de17:	mov    ebp,0x2535cc0
  41de1c:	inc    edx
  41de1d:	jge    0x41de1e
  41de1f:	fisubr WORD PTR [ecx+0x376e142f]
  41de25:	xor    esp,DWORD PTR [eax*8+0x7a3f84e2]
  41de2c:	out    0x31,al
  41de2e:	jo     0x41ddbf
  41de30:	xor    DWORD PTR [eax],eax
  41de32:	fadd   DWORD PTR [edi+eiz*2]
  41de35:	jo     0x41deb1
  41de37:	add    ch,BYTE PTR [esi-0x597866cc]
  41de3d:	adc    BYTE PTR [ebx-0x7b],dh
  41de40:	add    ecx,DWORD PTR [eax-0x3e6745e]
  41de46:	popf   
  41de47:	cmc    
  41de48:	mov    cl,BYTE PTR [ecx-0x521b9538]
  41de4e:	mov    BYTE PTR [eax+0x6a95127d],al
  41de54:	fsubr  QWORD PTR [ebp+0x126d8078]
  41de5a:	lea    ebp,[edx-0xc]
  41de5d:	lods   eax,DWORD PTR ds:[esi]
  41de5e:	add    BYTE PTR [eax-0x80],ch
  41de61:	jno    0x41dea8
  41de63:	cdq    
  41de64:	jg     0x41de11
  41de66:	mov    ebx,DWORD PTR ds:0x27ec4ac6
  41de6c:	int3   
  41de6d:	jmp    0x453f:0x6da88
  41de74:	cmc    
  41de75:	and    al,0x77
  41de77:	lods   eax,DWORD PTR ds:[esi]
  41de78:	push   ds
  41de79:	aas    
  41de7a:	stos   DWORD PTR es:[edi],eax
  41de7b:	sbb    eax,DWORD PTR [eax+0xaad8925]
  41de81:	es inc ebp
  41de83:	cdq    
  41de84:	mov    bh,BYTE PTR [edx+0x44]
  41de87:	popf   
  41de88:	push   0x8
  41de8a:	stos   DWORD PTR es:[edi],eax
  41de8b:	adc    BYTE PTR [eax+0x59e69b99],al
  41de91:	cld    
  41de92:	mov    BYTE PTR [ecx-0x75],ah
  41de95:	jmp    FWORD PTR [ecx]
  41de97:	mov    DWORD PTR [edi-0x40],0x8042debb
  41de9e:	hlt    
  41de9f:	(bad)  
  41dea0:	mov    bh,0x40
  41dea2:	jmp    0xaa408e95
  41dea7:	and    DWORD PTR ds:0x2599138,ecx
  41dead:	add    al,0x79
  41deaf:	lahf   
  41deb0:	inc    ecx
  41deb1:	push   edx
  41deb2:	jb     0x41dede
  41deb4:	add    esp,ebp
  41deb6:	add    DWORD PTR [ebx-0x37e5fffe],esp
  41debc:	pop    edx
  41debd:	push   esp
  41debe:	jo     0x41df3b
  41dec0:	outs   dx,BYTE PTR ds:[esi]
  41dec1:	mov    BYTE PTR [eax-0x323da00],ah
  41dec7:	push   0x28
  41dec9:	or     BYTE PTR ds:0xfc806867,0xe9
  41ded0:	or     edi,eax
  41ded2:	add    eax,DWORD PTR [edi]
  41ded4:	push   esi
  41ded5:	pop    ss
  41ded6:	or     eax,0xfc807c6d
  41dedb:	jmp    0xfd3eb18c
  41dee0:	not    BYTE PTR [edx]
  41dee2:	inc    eax
  41dee3:	jmp    0xe6405601
  41dee8:	fist   DWORD PTR [eax+0x7d9ee8ff]
  41deee:	je     0x41dedd
  41def0:	shl    esp,cl
  41def2:	fild   QWORD PTR [edx+0x6]
  41def5:	jle    0x41dede
  41def7:	push   eax
  41def8:	inc    esp
  41def9:	jle    0x41def7
  41defb:	gs pop esi
  41defd:	push   cs
  41defe:	test   BYTE PTR [edi],ah
  41df00:	sahf   
  41df01:	add    al,BYTE PTR [eax]
  41df03:	ins    BYTE PTR es:[edi],dx
  41df04:	mov    ds:0x2516fa57,eax
  41df09:	iret   
  41df0a:	out    0x7a,eax
  41df0c:	inc    esi
  41df0d:	jg     0x41df0b
  41df0f:	add    BYTE PTR [eax+0x43],bh
  41df12:	jo     0x41df75
  41df14:	add    ecx,DWORD PTR ds:0xb379e8e0
  41df1a:	sti    
  41df1b:	(bad)  
  41df1c:	jg     0x41deb1
  41df1e:	aaa    
  41df1f:	repz dec eax
  41df21:	cmp    DWORD PTR [esi-0x73],edx
  41df24:	jns    0x41ded4
  41df26:	stc    
  41df27:	inc    DWORD PTR [eax]
  41df29:	repz xor eax,0xb528e850
  41df2f:	cld    
  41df30:	(bad)  
  41df31:	cmp    DWORD PTR [esi+0x70],eax
  41df34:	cmp    esp,DWORD PTR [edi+0x41e07187]
  41df3a:	shr    edi,0x50
  41df3d:	cmp    eax,0x6189f029
  41df42:	xchg   edx,eax
  41df43:	test   DWORD PTR [ebp-0x4],ebx
  41df46:	popf   
  41df47:	mov    edx,0x8086338e
  41df4c:	shr    BYTE PTR [eax+0x2035fb6f],0xd1
  41df53:	aas    
  41df54:	add    cl,dh
  41df56:	adc    esp,0xfffffffd
  41df59:	repz test DWORD PTR [ebp+ecx*4-0x47],ecx
  41df5e:	xchg   esi,eax
  41df5f:	dec    esp
  41df60:	call   0x3ddb16
  41df65:	in     al,dx
  41df66:	ret    
  41df67:	cli    
  41df68:	lea    ecx,[ecx]
  41df6a:	xchg   edx,eax
  41df6b:	in     al,0x5a
  41df6d:	mov    edi,0xec56fb85
  41df72:	mov    edx,esp
  41df74:	inc    BYTE PTR [ebx-0x231f8e05]
  41df7a:	jle    0x41df96
  41df7c:	inc    DWORD PTR [ebx+0x38681d99]
  41df82:	pop    es
  41df83:	add    BYTE PTR [eax],al
  41df85:	mov    cl,0x83
  41df87:	aam    0xfd
  41df89:	popf   
  41df8a:	adc    al,0x85
  41df8c:	dec    edi
  41df8d:	add    BYTE PTR [edx],dl
  41df8f:	xchg   ebp,eax
  41df90:	cld    
  41df91:	cld    
  41df92:	mov    al,0xaf
  41df94:	repz aas 
  41df96:	popf   
  41df97:	mov    bl,0xc7
  41df99:	add    DWORD PTR [ebx+ebp*2+0x257b7500],ebx
  41dfa0:	aas    
  41dfa1:	std    
  41dfa2:	pushf  
  41dfa3:	and    esp,DWORD PTR [edi]
  41dfa5:	std    
  41dfa6:	imul   edi,DWORD PTR [esi],0x18c94279
  41dfac:	mov    es,WORD PTR [eax+0x180a69d5]
  41dfb2:	push   ds
  41dfb3:	lods   al,BYTE PTR ds:[esi]
  41dfb4:	or     BYTE PTR [edi+0x1e],0xa5
  41dfb8:	clc    
  41dfb9:	push   esp
  41dfba:	lds    esp,FWORD PTR [ebx-0x1a]
  41dfbd:	cld    
  41dfbe:	mov    dl,0xe0
  41dfc0:	nop
  41dfc1:	cmp    BYTE PTR [esi+0x4087ff1e],ch
  41dfc7:	pushf  
  41dfc8:	cdq    
  41dfc9:	cmp    BYTE PTR [edi],al
  41dfcb:	imul   esi,DWORD PTR [ecx],0x56
  41dfce:	and    dh,ah
  41dfd0:	test   al,0xfa
  41dfd2:	mov    al,BYTE PTR [eax+esi*1-0x100311af]
  41dfd9:	inc    edi
  41dfda:	mov    gs,WORD PTR [ebx]
  41dfdc:	add    al,0x81
  41dfde:	jne    0x41e02b
  41dfe0:	cmc    
  41dfe1:	pushf  
  41dfe2:	loopne 0x41dfc8
  41dfe4:	enter  0x625a,0x56
  41dfe8:	jmp    0x188b:0x2ab8ee50
  41dfef:	xor    ecx,DWORD PTR [eax-0x64b5ff04]
  41dff5:	cwde   
  41dff6:	mov    dl,0x64
  41dff8:	cmp    al,0x86
  41dffa:	sbb    BYTE PTR [ebp+0x64],0x6f
  41dffe:	inc    edx
  41dfff:	xor    dl,BYTE PTR [ebp+0x2456f98]
  41e005:	and    eax,0xa388c086
  41e00a:	xchg   BYTE PTR [ecx-0x27],bh
  41e00d:	pop    ds
  41e00e:	ret    0xb3fa
  41e011:	popa   
  41e012:	add    ebx,DWORD PTR [ebp+0x6dc2e7b2]
  41e018:	call   0xe817b303
  41e01d:	out    0x42,al
  41e01f:	add    eax,0x9d036053
  41e024:	mov    BYTE PTR [ecx+0x136adc29],ch
  41e02a:	fidivr DWORD PTR [si+0x39]
  41e02e:	sub    eax,0x44614645
  41e033:	popf   
  41e034:	call   0x7d27b21f
  41e039:	shr    DWORD PTR [edi-0x56],cl
  41e03c:	ret    0x78e6
  41e03f:	stos   BYTE PTR es:[edi],al
  41e040:	xchg   BYTE PTR [ebp+0x71d77110],ch
  41e046:	xlat   BYTE PTR ds:[ebx]
  41e047:	push   ss
  41e048:	adc    ah,BYTE PTR [edi]
  41e04a:	add    al,0xf3
  41e04c:	call   0xd4ef7937
  41e051:	(bad)  
  41e052:	out    dx,eax
  41e053:	and    dl,BYTE PTR [ebx]
  41e055:	daa    
  41e056:	add    al,0x0
  41e058:	push   ds
  41e059:	inc    ebx
  41e05a:	repnz cld 
  41e05c:	jmp    0xe6c2:0xa26bdb7b
  41e063:	sub    eax,0x793b7bd0
  41e068:	jb     0x41dff0
  41e06a:	push   esp
  41e06b:	cmovno edx,ebx
  41e06e:	mov    ebp,0xf37d5350
  41e073:	jae    0x41e00f
  41e075:	ret    0x25e6
  41e078:	out    0xdb,al
  41e07a:	jo     0x41e03d
  41e07c:	aad    0x3f
  41e07e:	call   FWORD PTR [edx-0x3d011791]
  41e084:	sahf   
  41e085:	push   0xffffffcd
  41e087:	and    DWORD PTR [eax],ebx
  41e089:	jg     0x41e04b
  41e08b:	mov    ebx,0x82ffe8cf
  41e090:	sahf   
  41e091:	push   0xffffffc1
  41e093:	adc    DWORD PTR [eax],esp
  41e095:	jg     0x41e057
  41e097:	pushf  
  41e098:	test   DWORD PTR [edi+0x7e],esp
  41e09b:	or     eax,0xe8fffffd
  41e0a0:	rcl    ch,0x8a
  41e0a3:	xor    al,0x43
  41e0a5:	jnp    0x41e0a3
  41e0a7:	out    0x67,al
  41e0a9:	sar    bl,1
  41e0ab:	jb     0x41e0d4
  41e0ad:	fs mov ?,esp
  41e0b0:	sahf   
  41e0b1:	add    al,BYTE PTR [ebx]
  41e0b3:	fwait
  41e0b4:	lahf   
  41e0b5:	add    al,BYTE PTR [eax]
  41e0b7:	push   ebx
  41e0b8:	int    0xcb
  41e0ba:	imul   ebp,ecx,0xd3f03300
  41e0c0:	push   0xfffffff6
  41e0c2:	jle    0x41e0ab
  41e0c4:	mov    al,0xaf
  41e0c6:	jle    0x41e0c4
  41e0c8:	ins    BYTE PTR es:[edi],dx
  41e0c9:	fdivp  st(5),st
  41e0cb:	sbb    dh,BYTE PTR [edx+0x58]
  41e0ce:	retf   
  41e0cf:	addr16 popa 
  41e0d1:	call   0xb9de098
  41e0d6:	dec    eax
  41e0d7:	cli    
  41e0d8:	xchg   BYTE PTR [ecx],bl
  41e0da:	retf   
  41e0db:	out    0xed,eax
  41e0dd:	cs jnp 0x41e0dc
  41e0e0:	ins    BYTE PTR es:[edi],dx
  41e0e1:	pop    esi
  41e0e2:	push   cs
  41e0e3:	xchg   ebx,eax
  41e0e4:	test   eax,0xf072bbea
  41e0e9:	dec    ebp
  41e0ea:	mov    ebx,0x47db7065
  41e0ef:	cli    
  41e0f0:	push   esi
  41e0f1:	sbb    DWORD PTR [ebp+ebp*8-0x74fd6118],esi
  41e0f8:	add    BYTE PTR [ecx+0x7bfff7a5],dh
  41e0fe:	mov    ebp,0x3804fffc
  41e103:	jno    0x41e0fe
  41e105:	pop    esp
  41e106:	sub    esi,DWORD PTR [eax+eax*2+0x34]
  41e10a:	hlt    
  41e10b:	or     esp,0x50fb86b9
  41e111:	stos   DWORD PTR es:[edi],eax
  41e112:	ins    BYTE PTR es:[edi],dx
  41e113:	test   al,0x12
  41e115:	xor    al,0xff
  41e117:	jle    0x41e196
  41e119:	cwde   
  41e11a:	add    BYTE PTR [esi+0x24],dh
  41e11d:	outs   dx,DWORD PTR ds:[esi]
  41e11e:	ds add al,0x66
  41e121:	add    BYTE PTR [edi-0x308c03b9],al
  41e127:	cs sti 
  41e129:	adc    eax,0x401474
  41e12e:	(bad)  
  41e12f:	mov    esi,0xa73ff4c
  41e134:	mov    DWORD PTR [ebp-0x47ed8],eax
  41e13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e13b:	out    dx,al
  41e13c:	fwait
  41e13d:	aam    0xc4
  41e13f:	(bad)  
  41e140:	out    0xc,al
  41e142:	cmp    DWORD PTR [ecx+0x7efbfdc8],ecx
  41e148:	dec    esp
  41e149:	call   0x3d24f3
  41e14e:	(bad)  [ebp+eax*8-0x3d]
  41e152:	ror    DWORD PTR [ecx-0x8df7c18],1
  41e158:	dec    ebp
  41e159:	push   ecx
  41e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15b:	pop    esp
  41e15c:	mov    DWORD PTR [eax+eiz*2+0xe],esi
  41e160:	call   0x40ac2b
  41e165:	mov    al,BYTE PTR [edx-0x19]
  41e168:	or     eax,0x8406749f
  41e16d:	shl    BYTE PTR [eax+0x1e],0xe8
  41e171:	mov    BYTE PTR [ebp+0xefc8114],bl
  41e177:	imul   ecx,DWORD PTR [edi+0x6873794b],0xffffffdb
  41e17e:	sbb    ebp,DWORD PTR [eax+eax*1+0x5e]
  41e182:	daa    
  41e183:	sub    eax,0x400088dd
  41e188:	xchg   DWORD PTR [ebp+0x31],eax
  41e18b:	inc    esi
  41e18c:	adc    eax,0x54efe76d
  41e191:	cmp    esp,0xe7456b4d
  41e197:	pop    esp
  41e198:	mov    bh,0x81
  41e19a:	cld    
  41e19b:	dec    ebp
  41e19c:	imul   eax,DWORD PTR [ebp+0x52],0x26
  41e1a0:	or     BYTE PTR [ebx+0x6e3deb],al
  41e1a6:	add    BYTE PTR [esi-0x1c],cl
  41e1a9:	pop    edx
  41e1aa:	or     al,0x2a
  41e1ac:	sub    eax,0xc1725608
  41e1b1:	xchg   BYTE PTR [edi-0x6a4797b8],bh
  41e1b7:	popf   
  41e1b8:	imul   eax,DWORD PTR [eax],0xffffffe9
  41e1bb:	mov    ebp,esp
  41e1bd:	std    
  41e1be:	pop    es
  41e1bf:	mov    edx,0xf08b342f
  41e1c4:	retf   
  41e1c5:	jle    0x41e1c3
  41e1c7:	stos   BYTE PTR es:[edi],al
  41e1c8:	inc    ebx
  41e1c9:	mov    bh,0x2a
  41e1cb:	popf   
  41e1cc:	imul   eax,DWORD PTR [ecx+0x49f4a570],0x4f
  41e1d3:	and    dh,ah
  41e1d5:	test   al,0xfd
  41e1d7:	mov    cl,BYTE PTR [eax-0x3d2d0016]
  41e1dd:	sar    esi,cl
  41e1df:	jp     0x41e24c
  41e1e1:	push   0x81f0a3f9
  41e1e6:	and    BYTE PTR [ecx+0x5b],0x87
  41e1ea:	mov    edi,0xf702e900
  41e1ef:	mov    ebx,0x3e7022b
  41e1f4:	es mov bh,0x7e
  41e1f7:	or     DWORD PTR [ecx+0x79],0x277883e
  41e1fe:	out    0x6b,eax
  41e200:	xor    al,0xf8
  41e202:	out    0x3,al
  41e204:	int    0x6a
  41e206:	inc    edi
  41e207:	push   ss
  41e208:	sub    bh,BYTE PTR [ecx+0x61]
  41e20b:	clc    
  41e20c:	xchg   esi,eax
  41e20d:	mov    ebp,esp
  41e20f:	mov    BYTE PTR [edx+0x9],bl
  41e212:	arpl   WORD PTR [edx-0x731986ee],sp
  41e218:	pop    edi
  41e219:	push   es
  41e21a:	fiadd  DWORD PTR [ebx+0x78]
  41e21d:	cmp    ebp,DWORD PTR [edx-0x1508d9f9]
  41e223:	adc    cl,BYTE PTR [esi]
  41e225:	inc    edx
  41e226:	pop    edi
  41e227:	enter  0x69e6,0xc6
  41e22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22c:	loop   0x41e2a6
  41e22e:	push   0x44
  41e230:	dec    esi
  41e231:	repz push eax
  41e233:	or     BYTE PTR [ebp+0x42],al
  41e236:	dec    esi
  41e237:	(bad)  
  41e238:	retf   0x9fe0
  41e23b:	add    al,0x9d
  41e23d:	add    al,dh
  41e23f:	cmp    al,ch
  41e241:	dec    edx
  41e242:	in     eax,dx
  41e243:	add    bl,BYTE PTR [ebp+0x44f8a67e]
  41e249:	in     al,dx
  41e24a:	(bad)  
  41e24b:	sub    BYTE PTR ds:0x4c0f06,0x9a
  41e252:	js     0x41e23a
  41e254:	or     al,0x6a
  41e257:	pop    edx
  41e258:	adc    DWORD PTR [edx+0xe446278],ecx
  41e25e:	mov    esi,0xbe260810
  41e263:	jp     0x41e239
  41e265:	cli    
  41e266:	dec    esp
  41e267:	(bad)  
  41e268:	call   0xb83ee50b
  41e26d:	not    BYTE PTR [ebp+0x7e9ee80c]
  41e273:	mov    edi,0x828b8dd5
  41e278:	sbb    DWORD PTR [edi],0x1db9fc77
  41e27e:	adc    eax,0x785edb78
  41e283:	dec    esp
  41e284:	ins    BYTE PTR es:[edi],dx
  41e285:	sbb    ah,BYTE PTR [eax-0x37e3c903]
  41e28b:	and    bl,BYTE PTR [bx+di+0x2]
  41e290:	xlat   BYTE PTR es:[ebx]
  41e292:	push   0x76
  41e294:	out    dx,al
  41e295:	lahf   
  41e296:	add    al,BYTE PTR [ecx+ebp*1-0x5b76f5fb]
  41e29d:	scas   al,BYTE PTR es:[edi]
  41e29e:	inc    eax
  41e29f:	jmp    edi
  41e2a1:	cs jns 0x41e28d
  41e2a4:	aam    0x21
  41e2a6:	cs cmp edi,0xfffffff2
  41e2aa:	or     al,0xfd
  41e2ac:	mov    bh,0x76
  41e2ae:	inc    edi
  41e2af:	shl    bh,cl
  41e2b1:	sbb    eax,0xb3e7ce
  41e2b6:	imul   esi,DWORD PTR [ebp-0x4],0x1b
  41e2ba:	popa   
  41e2bb:	(bad)  
  41e2bc:	pop    ebp
  41e2bd:	xor    dl,BYTE PTR [esi+0x41]
  41e2c0:	or     ebp,ecx
  41e2c2:	out    dx,al
  41e2c3:	js     0x41e283
  41e2c5:	in     eax,0x9e
  41e2c7:	ror    DWORD PTR [eax+0x476c21c5],cl
  41e2cd:	sbb    al,bh
  41e2cf:	mov    dh,BYTE PTR [edx]
  41e2d1:	fnstenv [edx+eax*8+0x78335ff]
  41e2d8:	std    
  41e2d9:	sbb    al,0x99
  41e2db:	mov    eax,DWORD PTR [edx-0x4b]
  41e2de:	outs   dx,BYTE PTR ds:[esi]
  41e2df:	jbe    0x41e2b6
  41e2e1:	add    BYTE PTR [edi],al
  41e2e3:	ror    BYTE PTR [eax],0x6a
  41e2e6:	js     0x41e270
  41e2e8:	inc    ecx
  41e2e9:	in     al,0x84
  41e2eb:	out    0x85,al
  41e2ed:	(bad)  
  41e2ee:	repnz cmp BYTE PTR [edi+0x65],0xf0
  41e2f3:	add    ecx,DWORD PTR [ecx-0x1bac1fbb]
  41e2f9:	xor    DWORD PTR [eax-0x7e],0xfffffffb
  41e2fd:	test   BYTE PTR [eax+esi*2+0xe],dh
  41e301:	(bad)  
  41e302:	stc    
  41e303:	out    0xe4,al
  41e305:	addr16 lock cmp ebx,0x3c7b8
  41e30d:	add    ch,bl
  41e30f:	nop
  41e310:	std    
  41e311:	inc    DWORD PTR [eax+ecx*4]
  41e314:	inc    ecx
  41e315:	aam    0x54
  41e317:	jmp    0x41e392
  41e319:	add    BYTE PTR [eax],0xb3
  41e31c:	add    BYTE PTR [eax-0x76f2d740],0x75
  41e323:	nop
  41e324:	jmp    0x41e36a
  41e326:	jl     0x41e31b
  41e328:	div    BYTE PTR [edx+edx*4-0x16fffd0c]
  41e32f:	push   0x4
  41e331:	add    BYTE PTR [eax],al
  41e333:	inc    edi
  41e334:	imul   ebp,esp,0xec494100
  41e33a:	push   eax
  41e33b:	fdivr  QWORD PTR [eax+edi*2]
  41e33e:	call   ebx
  41e340:	mov    DWORD PTR [ebp+esi*2-0xf8e6e4f],edi
  41e347:	int3   
  41e348:	sub    BYTE PTR [edi+edi*8-0xd],bh
  41e34c:	in     al,0x3b
  41e34e:	add    DWORD PTR [edx+eax*1+0x4c11146a],esi
  41e355:	rcl    BYTE PTR [eax+0x1],1
  41e358:	dec    esp
  41e359:	mov    esp,0x558c9d50
  41e35e:	sbb    BYTE PTR [ecx+0x58],0x68
  41e362:	inc    esi
  41e363:	ins    BYTE PTR es:[edi],dx
  41e364:	jle    0x41e3e2
  41e366:	xchg   al,bl
  41e368:	aaa    
  41e369:	pop    DWORD PTR [edx+0x71]
  41e36c:	sbb    al,0xec
  41e36e:	xchg   esp,eax
  41e36f:	popf   
  41e370:	imul   eax,DWORD PTR [eax],0xffffffe8
  41e373:	lds    ebx,FWORD PTR [ebp+0x7d]
  41e376:	cld    
  41e377:	fmul   QWORD PTR es:[edx+0x75e73572]
  41e37e:	or     al,0x0
  41e380:	sbb    DWORD PTR ds:0xf09d0004,ebx
  41e386:	fdivrp st(3),st
  41e388:	(bad)  
  41e389:	arpl   WORD PTR [ecx],si
  41e38b:	rcl    BYTE PTR [esi],cl
  41e38d:	sub    ebx,ebx
  41e38f:	hlt    
  41e390:	sub    al,0xdf
  41e392:	push   ecx
  41e393:	or     al,0x20
  41e395:	fld    DWORD PTR [ebx]
  41e397:	add    BYTE PTR [ebp+0x70875a68],bl
  41e39d:	pusha  
  41e39e:	mov    ebp,edi
  41e3a0:	(bad)  
  41e3a1:	sbb    BYTE PTR ds:0x6c1c81,cl
  41e3a7:	add    BYTE PTR [eax],ah
  41e3a9:	sahf   
  41e3aa:	sbb    BYTE PTR [edi+0x7a807360],al
  41e3b0:	xchg   esi,eax
  41e3b1:	imul   esi,edi,0x21
  41e3b4:	inc    edi
  41e3b5:	ja     0x41e346
  41e3b7:	inc    edx
  41e3b8:	jmp    0xa18672f8
  41e3bd:	cmp    edi,DWORD PTR [ebp+0x12]
  41e3c0:	sub    DWORD PTR [ebp-0x40],0xca81fff
  41e3c7:	sbb    ebp,0x2e
  41e3ca:	or     DWORD PTR [ecx+0x48bef60],ecx
  41e3d0:	fistp  DWORD PTR [esi]
  41e3d2:	or     edi,edi
  41e3d4:	xchg   DWORD PTR [edx],eax
  41e3d6:	sub    DWORD PTR [ebx-0x3fdbc667],ecx
  41e3dc:	adc    DWORD PTR [eax],ecx
  41e3de:	(bad)  
  41e3df:	rol    BYTE PTR [esi+0x29],1
  41e3e2:	lahf   
  41e3e3:	test   BYTE PTR [eax],al
  41e3e5:	jae    0x41e369
  41e3e7:	ror    BYTE PTR [ebx*4-0x39c33314],0x7a
  41e3ef:	stc    
  41e3f0:	pop    ds
  41e3f1:	adc    al,0x41
  41e3f3:	ror    eax,0x52
  41e3f6:	call   0x6d6dc0f9
  41e3fb:	pop    edi
  41e3fc:	jmp    0x7acf:0x7eb71a0a
  41e403:	mov    ch,0x7e
  41e405:	(bad)  
  41e406:	xor    bl,ch
  41e408:	ret    
  41e409:	xor    al,BYTE PTR [eax+0x1ab70f22]
  41e40f:	(bad)  
  41e410:	sub    al,0xde
  41e412:	outs   dx,BYTE PTR ds:[esi]
  41e413:	add    DWORD PTR [ebp+eax*8+0x7a],ebx
  41e417:	iret   
  41e418:	enter  0x810a,0xa3
  41e41c:	jnp    0x41e3d0
  41e41e:	sub    DWORD PTR ds:0x9879c41b,0xf1f77a8a
  41e428:	add    ebp,DWORD PTR [esi-0x43]
  41e42b:	imul   ecx,eax,0x26
  41e42e:	rol    BYTE PTR [eax+0x6b87441b],cl
  41e434:	ja     0x41e45d
  41e436:	mov    edi,0x4dbc6cce
  41e43b:	fdivr  QWORD PTR [ebp+0x1f]
  41e43e:	inc    edx
  41e43f:	pop    ebx
  41e440:	cs shr dh,0xbe
  41e444:	ins    BYTE PTR es:[edi],dx
  41e445:	jp     0x41e495
  41e447:	les    edi,FWORD PTR [ebp+0x0]
  41e44a:	mov    ebx,0xa97dbc77
  41e44f:	retf   
  41e450:	inc    eax
  41e452:	push   0x4e
  41e454:	std    
  41e455:	scas   al,BYTE PTR es:[edi]
  41e456:	xchg   DWORD PTR [eax+ebx*2],ecx
  41e459:	cmp    DWORD PTR [esi],esp
  41e45b:	shl    ebx,0x6c
  41e45e:	bound  edi,QWORD PTR [eax+0x502c814f]
  41e464:	std    
  41e465:	mov    fs,WORD PTR [esp+eiz*2]
  41e468:	cmp    BYTE PTR [edi+0x6a],0xfc
  41e46c:	out    0xa0,al
  41e46e:	jmp    0x41e4e6
  41e470:	cld    
  41e471:	bound  ebp,QWORD PTR [edx+0x5c]
  41e474:	mov    BYTE PTR [edx*8-0x66819833],ah
  41e47b:	add    al,BYTE PTR [eax]
  41e47d:	push   ecx
  41e47e:	jns    0x41e476
  41e480:	cld    
  41e481:	push   esi
  41e482:	imul   ecx,DWORD PTR [edx+0x4e9e41d7],0xfffffffd
  41e489:	inc    esi
  41e48a:	and    dh,cl
  41e48c:	out    dx,eax
  41e48d:	push   ecx
  41e48e:	ret    0xfcf9
  41e491:	ss adc eax,0x2bde725b
  41e497:	icebp  
  41e498:	jmp    0x41e4ab
  41e49a:	jbe    0x41e495
  41e49c:	cld    
  41e49d:	push   ds
  41e49e:	dec    ecx
  41e49f:	test   edi,edi
  41e4a1:	call   0x5c4b4e44
  41e4a6:	repnz addr16 out 0x33,eax
  41e4aa:	div    DWORD PTR [esi-0x4]
  41e4ad:	mov    edx,0x5dd65e00
  41e4b2:	xchg   edx,eax
  41e4b3:	push   edi
  41e4b4:	inc    ecx
  41e4b5:	add    ebp,ecx
  41e4b7:	repz mov ch,bl
  41e4ba:	push   0xe9019b42
  41e4bf:	sahf   
  41e4c0:	rcl    DWORD PTR [ebp+0x3e],1
  41e4c3:	adc    al,0x64
  41e4c5:	xor    dh,cl
  41e4c7:	sar    BYTE PTR [edx+edi*2+0x0],1
  41e4cb:	hlt    
  41e4cc:	mov    BYTE PTR [ecx-0x4],dh
  41e4cf:	jmp    0x41e4dd
  41e4d1:	adc    BYTE PTR [edx],0x74
  41e4d4:	dec    BYTE PTR [eax+0x7987c21c]
  41e4da:	clc    
  41e4db:	or     eax,0x273bf075
  41e4e0:	push   es
  41e4e1:	jg     0x41e498
  41e4e3:	je     0x41e4e4
  41e4e5:	dec    DWORD PTR [edx+0x458582c1]
  41e4eb:	or     al,0xea
  41e4ed:	or     al,0xf
  41e4ef:	mov    bl,0x7
  41e4f1:	jg     0x41e4ec
  41e4f3:	jle    0x41e560
  41e4f5:	or     BYTE PTR [ebx+0x77404cd],al
  41e4fb:	(bad)  
  41e4fc:	mov    edi,0x71773afe
  41e501:	call   0x796cd191
  41e506:	cld    
  41e507:	jne    0x41e4ff
  41e509:	aaa    
  41e50a:	ret    
  41e50b:	lock push ss
  41e50d:	mov    DWORD PTR [eax+0x36],ecx
  41e510:	cmp    al,bh
  41e512:	jae    0x41e514
  41e514:	cmp    bl,BYTE PTR [ebp+0x7f]
  41e517:	cmp    cl,bh
  41e519:	imul   eax,DWORD PTR [esi+eiz*2],0xffffff87
  41e51d:	cmp    BYTE PTR [edx],cl
  41e51f:	jne    0x41e517
  41e521:	mov    DWORD PTR [ebp-0x78fe4b7d],edi
  41e527:	dec    ebp
  41e528:	mov    WORD PTR [eax+ecx*1-0xff73],es
  41e52f:	(bad)  
  41e530:	jns    0x41e59e
  41e532:	lock mov DWORD PTR [ecx],esi
  41e535:	repz in al,0x91
  41e538:	mov    dh,0xf5
  41e53a:	sti    
  41e53b:	test   BYTE PTR [edx+esi*2],al
  41e53e:	dec    edx
  41e53f:	test   ebx,ebp
  41e541:	jno    0x41e556
  41e543:	call   FWORD PTR [ebp-0x1d77942a]
  41e549:	inc    eax
  41e54a:	out    0xc,eax
  41e54c:	mov    dl,0x3b
  41e54e:	mov    WORD PTR [edx-0x4f],cs
  41e551:	out    dx,eax
  41e552:	into   
  41e553:	not    DWORD PTR [eiz*2+0x385d8293]
  41e55a:	xor    eax,0x8ca3d889
  41e55f:	dec    edx
  41e560:	xchg   ecx,eax
  41e561:	(bad)  
  41e563:	jle    0x41e583
  41e565:	push   esp
  41e566:	add    BYTE PTR [edx+eiz*4-0x1c],dh
  41e56a:	xor    ebp,eax
  41e56c:	cli    
  41e56d:	dec    ebx
  41e56e:	jns    0x41e56c
  41e570:	push   0x27
  41e572:	jl     0x41e5aa
  41e574:	shl    bh,0x8
  41e577:	add    BYTE PTR [eax],0xc9
  41e57a:	loopne 0x41e5f4
  41e57c:	cld    
  41e57d:	push   ds
  41e57e:	addr16 js 0x41e57d
  41e581:	rol    BYTE PTR [edx],1
  41e583:	inc    ecx
  41e584:	inc    edx
  41e585:	dec    ebp
  41e586:	jmp    0x41e58b
  41e588:	add    BYTE PTR [ebp+0x32ff03c2],bl
  41e58e:	pop    esp
  41e58f:	lea    eax,[edx+0x25]
  41e592:	fcomip st,st(6)
  41e594:	repz xor eax,0x1afd554e
  41e59a:	lds    esp,FWORD PTR [eax+0x30]
  41e59d:	adc    ah,BYTE PTR [ebx-0x9]
  41e5a0:	neg    DWORD PTR [edx+0x2ff56e9]
  41e5a6:	pop    esp
  41e5a7:	inc    ecx
  41e5a8:	inc    edx
  41e5a9:	stc    
  41e5aa:	pop    edx
  41e5ab:	add    BYTE PTR [eax],al
  41e5ad:	popf   
  41e5ae:	repnz imul bl
  41e5b1:	push   ss
  41e5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b3:	ins    BYTE PTR es:[edi],dx
  41e5b4:	mov    BYTE PTR [eax+0x7],dl
  41e5b7:	cmp    edi,DWORD PTR [eiz*4-0x625b83b0]
  41e5be:	add    ah,bh
  41e5c0:	add    edx,DWORD PTR [edi+eax*1]
  41e5c3:	out    dx,eax
  41e5c4:	loope  0x41e551
  41e5c6:	sub    ah,dh
  41e5c8:	jg     0x41e5df
  41e5ca:	add    esp,edi
  41e5cc:	add    ecx,DWORD PTR [ebp+0x71]
  41e5cf:	fild   DWORD PTR [ebx-0x71193d74]
  41e5d5:	das    
  41e5d6:	pop    esi
  41e5d7:	popa   
  41e5d8:	dec    ebx
  41e5d9:	and    eax,0x8eb2c7
  41e5de:	sahf   
  41e5df:	or     BYTE PTR [eax+edx*8-0x7e],dh
  41e5e3:	pop    edx
  41e5e4:	mov    edx,DWORD PTR ds:0x5b617180
  41e5ea:	sbb    eax,0x190a8d6d
  41e5ef:	jle    0x41e5d7
  41e5f1:	add    ebx,DWORD PTR [ebp-0x3e0e61d3]
  41e5f7:	call   0x1a99e55d
  41e5fc:	cld    
  41e5fd:	ret    
  41e5fe:	push   edx
  41e5ff:	jle    0x41e59c
  41e601:	fild   DWORD PTR [edi+0x71]
  41e604:	pop    ebp
  41e605:	imul   ebx,DWORD PTR [ebx+ebx*1-0x19],0x3
  41e60a:	and    al,0x48
  41e60c:	popa   
  41e60d:	lock cmp dl,dl
  41e610:	inc    ebp
  41e611:	xor    DWORD PTR [eax],ebp
  41e613:	pop    ss
  41e614:	ja     0x41e62b
  41e616:	fld    QWORD PTR [edx]
  41e618:	ins    BYTE PTR es:[edi],dx
  41e619:	inc    ebx
  41e61a:	mov    ?,edx
  41e61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61d:	xchg   BYTE PTR [ecx],dl
  41e61f:	or     bl,BYTE PTR [ecx+0x720ff550]
  41e625:	push   esi
  41e626:	adc    eax,0xf60f1540
  41e62b:	sbb    eax,0x84f2c37c
  41e630:	es lock cdq 
  41e633:	jge    0x41e5d8
  41e635:	ja     0x41e64c
  41e637:	mov    edi,0xc45fe0ff
  41e63c:	out    dx,eax
  41e63d:	push   ebp
  41e63e:	sahf   
  41e63f:	add    al,BYTE PTR [eax]
  41e641:	jo     0x41e643
  41e643:	sahf   
  41e644:	cmp    esp,0x1
  41e647:	mov    dl,0xfd
  41e649:	mov    BYTE PTR [esi*1+0x5de14a7a],ch
  41e650:	(bad)  
  41e651:	out    dx,eax
  41e652:	pop    esp
  41e653:	mov    eax,ds:0x9e700002
  41e658:	jnp    0x41e6d4
  41e65a:	shr    DWORD PTR [eax],0x43
  41e65d:	out    0x1f,eax
  41e65f:	jmp    0x41e6ce
  41e661:	cld    
  41e662:	mov    ebp,cr5
  41e665:	out    dx,eax
  41e666:	jmp    0x9672f5de
  41e66b:	and    ch,al
  41e66d:	jmp    0x41e654
  41e66f:	cmc    
  41e670:	(bad)  
  41e671:	sti    
  41e672:	jb     0x41e69e
  41e674:	ins    BYTE PTR es:[edi],dx
  41e675:	inc    edi
  41e676:	ret    0x7823
  41e679:	or     al,0x6b
  41e67b:	(bad)  
  41e67c:	ins    DWORD PTR es:[edi],dx
  41e67d:	cld    
  41e67e:	outs   dx,BYTE PTR ds:[esi]
  41e67f:	rol    BYTE PTR [esi],0xc5
  41e682:	lods   al,BYTE PTR ds:[esi]
  41e683:	into   
  41e684:	cmp    bh,0xe8
  41e687:	sahf   
  41e688:	jns    0x41e6cc
  41e68a:	push   ecx
  41e68b:	sub    ch,ch
  41e68d:	repz inc ecx
  41e68f:	mov    dl,BYTE PTR [ebp+edi*8+0x46]
  41e693:	aas    
  41e694:	jnp    0x41e6d8
  41e696:	cmp    DWORD PTR [esi+ecx*8+0x58],eax
  41e69a:	and    BYTE PTR [ebx+0x3],ah
  41e69d:	add    BYTE PTR [ecx+eiz*1-0x76f27fa4],dl
  41e6a4:	sub    bl,0x85
  41e6a7:	add    cl,ch
  41e6a9:	aad    0x54
  41e6ab:	and    DWORD PTR [eax+0x1c4a96da],0xffffff83
  41e6b2:	out    0x0,eax
  41e6b4:	or     ecx,ebx
  41e6b6:	cli    
  41e6b7:	jmp    DWORD PTR [edi]
  41e6b9:	jmp    0x41e640
  41e6bb:	inc    esp
  41e6bc:	call   0x4a091dcc
  41e6c1:	sti    
  41e6c2:	shl    BYTE PTR cs:[ebx+ebx*8-0x27],0x1
  41e6c8:	mov    ah,0x3
  41e6ca:	das    
  41e6cb:	rol    BYTE PTR [ecx+0x5f],0x20
  41e6cf:	inc    eax
  41e6d0:	cmp    eax,0x77b83838
  41e6d5:	push   es
  41e6d6:	call   0xfc2ca56e
  41e6db:	mov    ebx,ecx
  41e6dd:	dec    BYTE PTR [eax-0x7af567bc]
  41e6e3:	inc    esp
  41e6e4:	pop    eax
  41e6e5:	aaa    
  41e6e6:	das    
  41e6e7:	ror    BYTE PTR [edi],0xba
  41e6ea:	ret    
  41e6eb:	inc    esp
  41e6ec:	push   0xc478c417
  41e6f1:	push   es
  41e6f2:	ret    
  41e6f3:	inc    esp
  41e6f4:	pop    eax
  41e6f5:	daa    
  41e6f6:	in     al,dx
  41e6f7:	mov    DWORD PTR [esi+eax*1+0x43fe8e8],esi
  41e6fe:	add    cl,ch
  41e700:	add    BYTE PTR [ebx],0x0
  41e703:	add    BYTE PTR [edi+0x3310086e],dh
  41e709:	and    DWORD PTR [edx+0x3440000],0xdbd78b56
  41e713:	cs or  al,0x35
  41e716:	add    eax,DWORD PTR [edi+0xbeab9f8]
  41e71c:	test   BYTE PTR [eax+0x3],bh
  41e71f:	add    BYTE PTR [eax],al
  41e721:	sub    ebx,ebx
  41e723:	mov    al,0xfb
  41e725:	ret    
  41e726:	jmp    0xffb:0x12d84c7f
  41e72d:	popf   
  41e72e:	shl    BYTE PTR [eax+0x65],1
  41e731:	sbb    BYTE PTR [edi],dl
  41e733:	out    dx,al
  41e734:	ss push ss
  41e736:	pushf  
  41e737:	add    al,0x8b
  41e739:	push   edx
  41e73a:	dec    ecx
  41e73b:	rol    DWORD PTR [eax-0x1917b73b],1
  41e741:	rcr    BYTE PTR [eax+0x0],1
  41e744:	call   0xfcb75b35
  41e749:	adc    al,0x25
  41e74b:	and    BYTE PTR [eax+eiz*1],dl
  41e74e:	cdq    
  41e74f:	out    dx,al
  41e750:	add    al,0xf3
  41e752:	jmp    0x54dee75a
  41e757:	push   es
  41e758:	mov    edx,DWORD PTR [ecx+0x5]
  41e75b:	adc    al,0x4f
  41e75d:	test   DWORD PTR [ebx+0x4d92fc76],edi
  41e763:	lods   eax,DWORD PTR ds:[esi]
  41e764:	out    dx,eax
  41e765:	mov    dl,BYTE PTR [eax]
  41e767:	and    BYTE PTR [esi*2+0x7afd5352],dl
  41e76e:	loope  0x41e72f
  41e770:	and    eax,DWORD PTR [eax]
  41e772:	lea    eax,ds:0x3bc1738b
  41e778:	mov    eax,DWORD PTR [ebx-0x47]
  41e77b:	inc    edi
  41e77c:	mov    edi,DWORD PTR [ebx-0x7f]
  41e77f:	inc    ebx
  41e780:	cmp    al,BYTE PTR [ebx+0x79]
  41e783:	dec    esp
  41e784:	add    BYTE PTR [edx-0x63],ch
  41e787:	push   ecx
  41e788:	add    ecx,DWORD PTR [ebx+0x4fcc07d9]
  41e78e:	sub    BYTE PTR [eax+0x1c],dl
  41e791:	cmp    BYTE PTR [ebp-0x39],al
  41e794:	sub    BYTE PTR [eax],al
  41e796:	popf   
  41e797:	fild   WORD PTR [ebx+0x72]
  41e79a:	mov    edx,DWORD PTR [ebx-0x78]
  41e79d:	adc    BYTE PTR [ebp-0x1aed8aa5],bl
  41e7a3:	dec    ecx
  41e7a4:	sar    bh,0x8
  41e7a7:	add    ebp,DWORD PTR [ebx-0x657d6fe1]
  41e7ad:	pop    ds
  41e7ae:	test   al,0x0
  41e7b0:	cdq    
  41e7b1:	dec    edi
  41e7b2:	dec    ecx
  41e7b3:	pop    edx
  41e7b4:	or     BYTE PTR [eax+ebp*8+0x6d],dl
  41e7b8:	jno    0x41e7ab
  41e7ba:	call   0xcd5a:0xe88b2979
  41e7c1:	or     dl,dl
  41e7c3:	ins    DWORD PTR es:[edi],dx
  41e7c4:	mov    ecx,0x214b1576
  41e7c9:	push   edi
  41e7ca:	xchg   ecx,eax
  41e7cb:	xchg   DWORD PTR [esi],ebx
  41e7cd:	ja     0x41e788
  41e7cf:	ins    DWORD PTR es:[edi],dx
  41e7d0:	adc    DWORD PTR [edi+0x2e],ebp
  41e7d3:	dec    ebp
  41e7d5:	sub    eax,0x96adb500
  41e7da:	jne    0x41e77d
  41e7dc:	aam    0xce
  41e7de:	mov    esp,0xa3b56c6a
  41e7e3:	retf   0x29aa
  41e7e6:	add    al,0x35
  41e7e8:	adc    bl,BYTE PTR [ebx]
  41e7ea:	fst    QWORD PTR [edi]
  41e7ec:	mov    dl,0x13
  41e7ef:	int    0x7b
  41e7f1:	adc    ah,BYTE PTR [eax]
  41e7f3:	mov    DWORD PTR [edx+0x6c],ebx
  41e7f6:	out    dx,al
  41e7f7:	imul   ebp,DWORD PTR [ebp+0x6a],0x8f2eee43
  41e7fe:	sbb    edx,esp
  41e800:	ins    DWORD PTR es:[edi],dx
  41e801:	jne    0x41e785
  41e803:	pop    edx
  41e804:	and    ah,BYTE PTR [eax-0x41]
  41e807:	jle    0x41e81f
  41e809:	je     0x41e7ca
  41e80b:	jle    0x41e823
  41e80d:	mov    bh,0xe9
  41e80f:	cmp    ebx,ebx
  41e811:	jmp    0x2976:0xcea03adb
  41e818:	ins    DWORD PTR es:[edi],dx
  41e819:	mov    edx,0x785a8d1f
  41e81e:	add    al,0x1a
  41e820:	ins    DWORD PTR es:[edi],dx
  41e821:	jmp    FWORD PTR [ecx-0x5b]
  41e824:	and    ch,BYTE PTR [edx+ebp*4-0x1697ed62]
  41e82b:	sahf   
  41e82c:	add    al,BYTE PTR [eax+0x7b85aa93]
  41e832:	int    0x96
  41e834:	outs   dx,DWORD PTR ds:[esi]
  41e835:	adc    bl,BYTE PTR [ebp-0x66]
  41e838:	ret    0x73ff
  41e83b:	add    dl,dh
  41e83d:	and    BYTE PTR [eax],dl
  41e83f:	adc    ebp,ebx
  41e841:	cmc    
  41e842:	cld    
  41e843:	test   BYTE PTR [ebx+edi*4-0x59],0xe1
  41e848:	mov    edx,0x935ae7fa
  41e84d:	ins    DWORD PTR es:[edi],dx
  41e84e:	cld    
  41e84f:	mov    DWORD PTR [ecx-0x56],edi
  41e852:	inc    eax
  41e853:	jmp    0x6b5ea5e
  41e858:	mov    ecx,0x99297794
  41e85d:	pop    edx
  41e85e:	ins    BYTE PTR es:[edi],dx
  41e85f:	scas   al,BYTE PTR es:[edi]
  41e860:	adc    BYTE PTR [edi-0x62],ch
  41e863:	icebp  
  41e864:	push   esi
  41e865:	ret    
  41e866:	inc    DWORD PTR [eax-0x5f]
  41e869:	add    al,BYTE PTR [eax]
  41e86b:	imul   ebp,esi,0x9e898063
  41e871:	shr    BYTE PTR [ecx-0x18],cl
  41e874:	popa   
  41e875:	xlat   BYTE PTR ds:[ebx]
  41e876:	push   esp
  41e877:	mov    ds,WORD PTR [edx-0x66d6f02e]
  41e87d:	pop    ecx
  41e87e:	push   cs
  41e87f:	push   ecx
  41e880:	popf   
  41e881:	test   BYTE PTR [edx],0x1
  41e884:	cdq    
  41e885:	add    al,BYTE PTR [eax]
  41e887:	imul   esi,DWORD PTR [edi],0x1afcfd10
  41e88d:	adc    BYTE PTR [eax-0x17],al
  41e890:	mov    cl,0xef
  41e892:	and    esi,ecx
  41e894:	(bad)  
  41e895:	daa    
  41e896:	jmp    edi
  41e898:	sahf   
  41e899:	ja     0x41e8de
  41e89b:	add    BYTE PTR [eax+0xc74c4e],dl
  41e8a1:	inc    eax
  41e8a2:	or     al,0x30
  41e8a4:	in     al,dx
  41e8a5:	jge    0x41e8ed
  41e8a7:	cld    
  41e8a8:	(bad)  
  41e8a9:	icebp  
  41e8aa:	xlat   BYTE PTR ds:[ebx]
  41e8ab:	push   cs
  41e8ac:	inc    eax
  41e8ad:	hlt    
  41e8ae:	xor    al,al
  41e8b0:	pop    edi
  41e8b1:	cmp    cl,BYTE PTR [ebx-0x79]
  41e8b4:	in     eax,0x29
  41e8b6:	ret    0x0
  41e8b9:	xor    bh,BYTE PTR [ebx-0x14]
  41e8bc:	push   edi
  41e8bd:	daa    
  41e8be:	rol    BYTE PTR [edi-0x1b08e832],0x28
  41e8c5:	mov    esi,0x74850000
  41e8ca:	jb     0x41e933
  41e8cc:	mov    ecx,DWORD PTR [edx]
  41e8ce:	scas   eax,DWORD PTR es:[edi]
  41e8cf:	in     al,0x1c
  41e8d1:	scas   al,BYTE PTR es:[edi]
  41e8d2:	add    BYTE PTR [eax],al
  41e8d4:	test   DWORD PTR [ebx*2+0x5bdb85f0],eax
  41e8db:	push   edi
  41e8dc:	mov    esi,DWORD PTR [edx-0x4beb930a]
  41e8e2:	fisub  WORD PTR [edx]
  41e8e4:	ror    BYTE PTR [edx-0xa],1
  41e8e7:	xchg   eax,esi
  41e8e9:	add    esi,ebx
  41e8eb:	jo     0x41e90f
  41e8ed:	scas   al,BYTE PTR es:[edi]
  41e8ee:	add    ch,al
  41e8f0:	mov    ecx,DWORD PTR [ebx-0xb]
  41e8f3:	sti    
  41e8f4:	test   DWORD PTR [ebx+ebx*2+0x1],eax
  41e8f8:	adc    DWORD PTR [edi+edi*8-0x1a],0x2
  41e8fd:	daa    
  41e8fe:	mov    edi,0x6d50c081
  41e903:	test   DWORD PTR [eax],esi
  41e905:	add    BYTE PTR [edi-0x4df71811],bh
  41e90b:	fimul  WORD PTR [edi+ecx*8-0x9d00946]
  41e912:	repnz push esi
  41e914:	jo     0x41e8e3
  41e916:	popf   
  41e917:	call   0xd228:0xc19d6a00
  41e91e:	and    al,ah
  41e920:	jge    0x41e8e1
  41e922:	nop
  41e923:	push   esi
  41e924:	jge    0x41e91b
  41e926:	mov    DWORD PTR [esi+0x73],esp
  41e929:	xor    eax,0xfd43a6f5
  41e92e:	add    ch,BYTE PTR [ebx+0xaea6b68]
  41e934:	je     0x41e967
  41e936:	(bad)  
  41e938:	(bad)  
  41e939:	scas   eax,DWORD PTR es:[edi]
  41e93a:	pushf  
  41e93b:	pushf  
  41e93c:	rol    al,cl
  41e93e:	dec    eax
  41e93f:	lock fs or cl,0x48
  41e944:	iret   
  41e945:	imul   ebx,DWORD PTR [esp+ecx*4+0x49711273],0x9919ffc0
  41e950:	div    DWORD PTR [esi+0x6e]
  41e953:	inc    eax
  41e954:	aam    0x50
  41e956:	inc    edi
  41e957:	pop    edx
  41e958:	frndint 
  41e95a:	nop
  41e95b:	xor    DWORD PTR [eax+eax*2],edx
  41e95e:	popf   
  41e95f:	fiadd  WORD PTR [ebx+0x73]
  41e962:	add    eax,0x91427f0d
  41e967:	or     al,0xde
  41e969:	inc    BYTE PTR [eax]
  41e96b:	add    cl,BYTE PTR [eax-0x5f62c015]
  41e971:	push   ss
  41e972:	pop    esp
  41e973:	lea    ebx,[ebx]
  41e975:	add    al,0x83
  41e977:	pop    ebp
  41e978:	or     BYTE PTR [ebx],ch
  41e97a:	mov    esp,eax
  41e97c:	(bad)  
  41e97d:	ror    DWORD PTR [edx-0x752c7c28],cl
  41e983:	loopne 0x41e970
  41e985:	sar    esp,cl
  41e987:	enter  0x7aef,0x5a
  41e98b:	inc    ebp
  41e98c:	fst    DWORD PTR [esi]
  41e98e:	pusha  
  41e98f:	lods   eax,DWORD PTR ds:[esi]
  41e990:	add    ah,BYTE PTR [edi-0x2dbce1fd]
  41e996:	pop    ss
  41e997:	xor    al,dh
  41e999:	pop    edx
  41e99a:	jae    0x41e94b
  41e99c:	push   0x4d
  41e99e:	stc    
  41e99f:	xor    dl,dl
  41e9a1:	inc    ebp
  41e9a2:	sbb    DWORD PTR [ecx+0x1e03a712],eax
  41e9a8:	inc    ebx
  41e9a9:	mov    ebx,0x2af00800
  41e9ae:	jae    0x41e95f
  41e9b0:	mov    bh,al
  41e9b2:	ret    
  41e9b3:	cli    
  41e9b4:	test   BYTE PTR [ebx+0x1a2df16f],ch
  41e9ba:	clc    
  41e9bb:	xchg   esi,eax
  41e9bc:	inc    ecx
  41e9bd:	in     al,0xff
  41e9bf:	loop   0x41ea2a
  41e9c1:	out    0x7c,al
  41e9c3:	pop    eax
  41e9c4:	(bad)  
  41e9c5:	outs   dx,DWORD PTR ds:[esi]
  41e9c6:	rcr    BYTE PTR [edx-0x4a905483],cl
  41e9cc:	add    al,0xba
  41e9ce:	inc    ebx
  41e9cf:	add    BYTE PTR [ebp+0x3b],ah
  41e9d2:	test   eax,0x375725d8
  41e9d7:	fisub  DWORD PTR ds:0x5d141730
  41e9dd:	add    dh,BYTE PTR [esi]
  41e9df:	sbb    DWORD PTR [edi+0x66],0xdb9ade16
  41e9e6:	out    0xdd,al
  41e9e8:	xchg   ebx,eax
  41e9e9:	push   0x5089fc3b
  41e9ee:	arpl   WORD PTR [ebx+0xf],ax
  41e9f1:	sub    eax,0x139518a6
  41e9f6:	daa    
  41e9f7:	add    al,0x1c
  41e9f9:	push   0x10
  41e9fb:	stc    
  41e9fc:	mov    ecx,0x1f70237d
  41ea01:	inc    edx
  41ea02:	cli    
  41ea03:	sbb    eax,DWORD PTR [ebp-0x26]
  41ea06:	lods   al,BYTE PTR ds:[esi]
  41ea07:	jno    0x41ea5a
  41ea09:	jge    0x41ea0a
  41ea0b:	jo     0x41ea22
  41ea0d:	data16 jae 0x41e9dc
  41ea10:	sbb    eax,0xafb9fbc4
  41ea15:	hlt    
  41ea16:	sti    
  41ea17:	mov    dh,0x50
  41ea19:	push   0x6626dcfd
  41ea1e:	aad    0x64
  41ea20:	fdivrp st(5),st
  41ea22:	add    esi,DWORD PTR [edx+0x67]
  41ea25:	pop    edx
  41ea26:	pop    es
  41ea27:	xchg   esi,eax
  41ea28:	jbe    0x41ea1b
  41ea2a:	int    0x37
  41ea2c:	(bad)  
  41ea2d:	xor    al,al
  41ea2f:	mov    gs,esp
  41ea31:	aas    
  41ea32:	shr    ebp,0x0
  41ea35:	sahf   
  41ea36:	ror    BYTE PTR [edi+edx*2],1
  41ea39:	jmp    0xb0ad:0x1dbe0824
  41ea40:	loope  0x41e9db
  41ea42:	add    al,BYTE PTR [eax]
  41ea44:	jb     0x41e9e5
  41ea46:	test   esi,eax
  41ea48:	jne    0x41e9ee
  41ea4a:	jnp    0x41ea4a
  41ea4c:	and    BYTE PTR [ecx+0x776a0f67],0x2
  41ea53:	xor    DWORD PTR [ecx+0x6586decc],ebp
  41ea59:	test   al,0x10
  41ea5b:	(bad)  
  41ea5c:	call   0xe603b2ff
  41ea61:	sahf   
  41ea62:	aad    0x88
  41ea64:	aad    0x1e
  41ea66:	pop    esp
  41ea67:	imul   ecx
  41ea69:	sahf   
  41ea6a:	add    dl,BYTE PTR [ecx+0x1f]
  41ea6d:	fs jge 0x41eab2
  41ea70:	sub    DWORD PTR [ecx+0x3e],0x5aa1a242
  41ea77:	jno    0x41ea99
  41ea79:	in     al,dx
  41ea7a:	data16 mov bl,BYTE PTR [ebx*8-0x668b2ea1]
  41ea82:	add    al,BYTE PTR [ecx-0x3355700]
  41ea88:	mov    dh,BYTE PTR [edx]
  41ea8a:	mov    edx,0xe854cc41
  41ea8f:	cmp    al,0x0
  41ea91:	sbb    al,0xaf
  41ea93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea94:	add    BYTE PTR [edi+eiz*8+0x59],al
  41ea98:	or     BYTE PTR [eax],al
  41ea9a:	sar    DWORD PTR [ebp+0x14],0x1
  41ea9e:	xor    al,0x4
  41eaa0:	test   DWORD PTR [ebp-0x2c],eax
  41eaa3:	out    0x7f,eax
  41eaa5:	or     BYTE PTR ds:0x39c60004,al
  41eaab:	enter  0xc6fc,0x39
  41eaaf:	lock add eax,0x8504346d
  41eab5:	inc    ebp
  41eab6:	enter  0x41eb,0xe8
  41eaba:	outs   dx,DWORD PTR ds:[esi]
  41eabb:	aas    
  41eabc:	in     al,0x8b
  41eabe:	(bad)  
  41eabf:	out    0x41,al
  41eac1:	hlt    
  41eac2:	jg     0x41eb1a
  41eac4:	dec    DWORD PTR [eax+eiz*1+0x5189a819]
  41eacb:	repz xor esi,0x45893e48
  41ead2:	cwde   
  41ead3:	dec    esi
  41ead4:	mov    DWORD PTR [ebp-0x14],eax
  41ead7:	push   ebx
  41ead8:	or     BYTE PTR fs:[ebx+eax*1-0xd2c9800],dh
  41eae0:	cld    
  41eae1:	call   ebx
  41eae3:	imul   eax,DWORD PTR [eax],0xdac9c7
  41eae9:	add    BYTE PTR [ebx+eax*1+0x104015fb],al
  41eaf0:	inc    eax
  41eaf1:	add    cl,bh
  41eaf3:	ret    
  41eaf4:	jno    0x41eb0b
  41eaf6:	icebp  
  41eaf7:	inc    eax
  41eaf8:	les    edx,FWORD PTR [eax+0x13]
  41eafb:	imul   eax,DWORD PTR [edi+edi*8],0x4669d00
  41eb02:	paddusw mm3,QWORD PTR [ecx-0x7b]
  41eb06:	mov    edi,0xfe65d6aa
  41eb0b:	push   edx
  41eb0c:	pop    ecx
  41eb0d:	outs   dx,DWORD PTR ds:[esi]
  41eb0e:	jb     0x41eb49
  41eb10:	and    DWORD PTR ds:0x7bd842fd,0xb6703142
  41eb1a:	aas    
  41eb1b:	xor    ch,BYTE PTR [ecx-0x2f4603a8]
  41eb21:	outs   dx,DWORD PTR ds:[esi]
  41eb22:	sbb    DWORD PTR [ebp+0x4e],0x8
  41eb26:	pushw  ds
  41eb28:	add    BYTE PTR [ecx*1+0x21b19],al
  41eb2f:	popf   
  41eb30:	ins    BYTE PTR es:[edi],dx
  41eb31:	inc    eax
  41eb32:	gs adc al,0x60
  41eb35:	inc    esi
  41eb36:	inc    edx
  41eb37:	neg    BYTE PTR [ecx+0x59]
  41eb3a:	mov    bl,0x9c
  41eb3c:	pop    ecx
  41eb3d:	add    BYTE PTR [edx-0x6f],ch
  41eb40:	add    esi,eax
  41eb42:	retf   0xf7e3
  41eb45:	test   DWORD PTR [edi+0x4a7b4851],edi
  41eb4b:	leave  
  41eb4c:	push   edi
  41eb4d:	mov    dh,0xe
  41eb4f:	call   0x7b8a:0x6ffcba27
  41eb56:	out    dx,eax
  41eb57:	(bad)
  41eb5a:	cld    
  41eb5b:	mov    dl,0xf3
  41eb5d:	jae    0x41eb47
  41eb5f:	lahf   
  41eb60:	or     al,0x76
  41eb62:	add    BYTE PTR [eax],0xab
  41eb65:	inc    edi
  41eb66:	test   BYTE PTR [edi-0x76ffa464],al
  41eb6c:	adc    BYTE PTR [eax+0x5c874245],dl
  41eb72:	xchg   esp,edi
  41eb74:	or     DWORD PTR [ecx],eax
  41eb76:	jns    0x41eb7c
  41eb78:	sub    BYTE PTR [ebx],al
  41eb7a:	xor    al,0x50
  41eb7c:	jecxz  0x41eb4b
  41eb7e:	popf   
  41eb7f:	aam    0xba
  41eb81:	jg     0x41eb29
  41eb83:	stc    
  41eb84:	xchg   esp,ebx
  41eb86:	imul   esi,ecx,0x97f56676
  41eb8c:	adc    bh,BYTE PTR [edi-0x5a]
  41eb8f:	stc    
  41eb90:	fwait
  41eb91:	jns    0x41eb80
  41eb93:	fld    DWORD PTR [ecx-0x32]
  41eb96:	ins    DWORD PTR es:[edi],dx
  41eb97:	aam    0x6e
  41eb99:	ins    DWORD PTR es:[edi],dx
  41eb9a:	or     bl,BYTE PTR ds:[ebp+0x65]
  41eb9e:	es jl  0x41eb80
  41eba1:	push   0xf632c961
  41eba6:	xchg   ebp,eax
  41eba7:	or     al,0x55
  41eba9:	adc    ecx,DWORD PTR [esi]
  41ebab:	add    al,0x9d
  41ebad:	fadd   QWORD PTR [ecx]
  41ebaf:	dec    esp
  41ebb0:	mov    WORD PTR [edx+0x28e346e],?
  41ebb6:	out    0xe5,eax
  41ebb8:	mov    ch,0x4a
  41ebba:	popf   
  41ebbb:	sub    eax,0x896be487
  41ebc0:	cwde   
  41ebc1:	gs adc eax,0xb702746f
  41ebc7:	pop    ebx
  41ebc8:	add    al,cl
  41ebca:	sbb    eax,ebp
  41ebcc:	add    esp,DWORD PTR [edi]
  41ebce:	mov    ebp,0xf6de82ea
  41ebd3:	(bad)  
  41ebd4:	fstp   TBYTE PTR [eax]
  41ebd6:	gs in  eax,dx
  41ebd8:	in     eax,0xfb
  41ebda:	inc    ecx
  41ebdb:	out    dx,al
  41ebdc:	in     eax,0x1b
  41ebde:	sub    dl,0x6e
  41ebe1:	test   eax,0x77d4c65
  41ebe6:	cmc    
  41ebe7:	int    0x6e
  41ebe9:	cdq    
  41ebea:	ja     0x41ec4f
  41ebec:	call   DWORD PTR [ecx+0x607abd65]
  41ebf2:	pop    edx
  41ebf3:	jmp    DWORD PTR [esi+0x65fc667b]
  41ebf9:	fdivrp st(0),st
  41ebfb:	dec    esi
  41ebfc:	aas    
  41ebfd:	sar    DWORD PTR [ebp-0x7e046199],1
  41ec03:	mov    edi,0x57b9c1c
  41ec08:	add    esp,DWORD PTR [eax-0x51793285]
  41ec0e:	pop    ebp
  41ec0f:	fucomip st,st(1)
  41ec11:	sahf   
  41ec12:	add    cl,BYTE PTR [ebx-0x399bd94]
  41ec18:	outs   dx,BYTE PTR ds:[esi]
  41ec19:	dec    esi
  41ec1a:	xor    bl,cl
  41ec1c:	push   ecx
  41ec1d:	sub    al,0xdf
  41ec1f:	cld    
  41ec20:	pop    esi
  41ec21:	and    ah,BYTE PTR [ebp-0x51dc088d]
  41ec27:	sbb    ch,0x8b
  41ec2a:	data16 cld 
  41ec2c:	mov    cl,0x0
  41ec2e:	push   esi
  41ec2f:	icebp  
  41ec30:	add    ch,BYTE PTR [edx+0x66]
  41ec33:	adc    BYTE PTR [ebx-0x12],dh
  41ec36:	add    ebp,DWORD PTR [esi+0x668bdf9a]
  41ec3c:	cld    
  41ec3d:	(bad)  
  41ec3e:	pop    ecx
  41ec3f:	inc    edx
  41ec40:	pop    es
  41ec41:	out    dx,al
  41ec42:	xor    ecx,DWORD PTR [edx-0x78]
  41ec45:	lods   al,BYTE PTR ds:[esi]
  41ec46:	outs   dx,BYTE PTR ds:[esi]
  41ec47:	fild   WORD PTR [esi-0x73f9f0f]
  41ec4d:	call   0x7329aca9
  41ec52:	fld    QWORD PTR [esi+eax*4-0x47]
  41ec56:	inc    edi
  41ec57:	shr    bh,0x87
  41ec5a:	aaa    
  41ec5b:	bound  esi,QWORD PTR gs:[eax-0x62]
  41ec5f:	cmp    esp,0xff7822ee
  41ec65:	call   0x5c466808
  41ec6a:	pop    edx
  41ec6b:	dec    esp
  41ec6c:	dec    esi
  41ec6d:	add    BYTE PTR [ebx+0x1284cd5],dh
  41ec73:	mov    edi,0x81d21471
  41ec78:	jns    0x41ec52
  41ec7a:	dec    ebx
  41ec7b:	xchg   ax,ax
  41ec7d:	sar    BYTE PTR [eax+0x1],0x71
  41ec81:	or     bh,ch
  41ec83:	std    
  41ec84:	imul   eax,DWORD PTR [eax],0x2c4cd5a3
  41ec8a:	mov    edi,0x920ff03b
  41ec8f:	inc    BYTE PTR [edi+0x74]
  41ec92:	add    BYTE PTR [edx],bh
  41ec94:	test   al,0x71
  41ec96:	push   ecx
  41ec97:	sahf   
  41ec98:	fs ret 
  41ec9a:	inc    ebp
  41ec9b:	and    BYTE PTR [eax],dl
  41ec9d:	add    BYTE PTR [eax],al
  41ec9f:	inc    esp
  41eca0:	retf   
  41eca1:	add    eax,0x41bf396a
  41eca6:	in     al,0x32
  41eca8:	add    BYTE PTR [eax],al
  41ecaa:	add    BYTE PTR [ebp+eiz*8+0x71],cl
  41ecae:	mov    ah,0x6c
  41ecb0:	sub    eax,0xeaf4001f
  41ecb5:	inc    ecx
  41ecb6:	lock sti 
  41ecb8:	scas   al,BYTE PTR es:[edi]
  41ecb9:	cld    
  41ecba:	dec    edi
  41ecbb:	jg     0x41ec79
  41ecbd:	dec    esp
  41ecbe:	push   0xffffffe8
  41ecc0:	cmp    cl,BYTE PTR [ecx-0x3e399b83]
  41ecc6:	jnp    0x419b42a1
  41eccc:	mov    esi,0x6b9b167a
  41ecd1:	loopne 0x41ec5e
  41ecd3:	add    eax,esi
  41ecd5:	or     esi,DWORD PTR [edi-0x3878b04c]
  41ecdb:	adc    al,0xe5
  41ecdd:	inc    ecx
  41ecde:	int3   
  41ecdf:	je     0x41eca7
  41ece1:	outs   dx,DWORD PTR ds:[esi]
  41ece2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ece3:	mov    ah,0xff
  41ece5:	xchg   BYTE PTR [ebp-0x63],bh
  41ece8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece9:	cmp    BYTE PTR [edx-0x69],0x59
  41eced:	hlt    
  41ecee:	pop    es
  41ecef:	es push esp
  41ecf1:	(bad)  
  41ecf2:	push   ebx
  41ecf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf5:	shl    BYTE PTR [ebx],1
  41ecf7:	add    BYTE PTR [esi],dl
  41ecf9:	push   cs
  41ecfa:	cld    
  41ecfb:	std    
  41ecfc:	loopne 0x41eca3
  41ecfe:	jg     0x41ed42
  41ed00:	test   DWORD PTR [ebp+0x7f],edx
  41ed03:	inc    edx
  41ed04:	jge    0x41ed5d
  41ed06:	jg     0x41ed4a
  41ed08:	imul   esp,DWORD PTR [ecx-0x80],0xfb5d497a
  41ed0f:	or     DWORD PTR [esi+edi*2],0x1e16fc6b
  41ed16:	pop    eax
  41ed17:	sbb    BYTE PTR [ebp+0x65],0xf6
  41ed1b:	mov    BYTE PTR [ebp-0x5ab194f7],ah
  41ed21:	fsub   st,st(5)
  41ed23:	rcr    DWORD PTR [ebp-0x63748010],cl
  41ed29:	pop    ecx
  41ed2a:	add    BYTE PTR [edi+0xf91e],al
  41ed30:	popf   
  41ed31:	lock aas 
  41ed33:	lds    ebx,FWORD PTR [esi]
  41ed35:	add    DWORD PTR [ecx],eax
  41ed37:	add    BYTE PTR [ebp-0x6285a7a6],bl
  41ed3d:	pop    ecx
  41ed3e:	add    BYTE PTR [ebp+ebx*8+0x330d0684],al
  41ed45:	fsubr  DWORD PTR [eax]
  41ed47:	jmp    edx
  41ed49:	pop    eax
  41ed4a:	ja     0x41ecd4
  41ed4c:	jns    0x41eda8
  41ed4e:	add    BYTE PTR [eax],al
  41ed50:	and    al,0xed
  41ed52:	jg     0x41ed73
  41ed54:	pushf  
  41ed55:	pop    ecx
  41ed56:	add    dh,bh
  41ed58:	push   ds
  41ed59:	mov    cl,0x1
  41ed5b:	add    BYTE PTR [eax],al
  41ed5d:	popf   
  41ed5e:	loopne 0x41ed1d
  41ed60:	ret    
  41ed61:	inc    edi
  41ed62:	add    ch,bl
  41ed64:	int    0x15
  41ed66:	add    DWORD PTR [esp+eax*2+0x2e],esp
  41ed6a:	or     esp,esi
  41ed6c:	mov    cl,0x4d
  41ed6e:	sbb    ebp,eax
  41ed70:	add    ebx,DWORD PTR [ebp+0x23fc268d]
  41ed76:	xchg   DWORD PTR [ecx+0x24],edi
  41ed79:	and    BYTE PTR [edx-0x1a],0x69
  41ed7d:	sbb    eax,0x9d03e81b
  41ed82:	test   DWORD PTR [edi-0x44282900],esp
  41ed88:	test   bh,ah
  41ed8a:	pop    ebp
  41ed8b:	out    0xf0,eax
  41ed8d:	mov    ebx,0xdf78daec
  41ed92:	stos   BYTE PTR es:[edi],al
  41ed93:	push   ss
  41ed94:	jns    0x41ed75
  41ed96:	xchg   esi,eax
  41ed97:	push   ss
  41ed98:	imul   ebp,DWORD PTR [edi+0x3ac3dd12],0xffffff85
  41ed9f:	mov    ds:0x9ac827f8,al
  41eda4:	aam    0xb4
  41eda6:	out    0xd0,eax
  41eda8:	test   edx,0x19f70b6a
  41edae:	bound  ebx,QWORD PTR [ebx-0xf]
  41edb1:	out    0x6a,al
  41edb3:	lds    esp,FWORD PTR [eax-0x36629df6]
  41edb9:	gs dec ebx
  41edbb:	sub    BYTE PTR [eax],al
  41edbd:	popf   
  41edbe:	mov    eax,0x2007e95
  41edc3:	push   ss
  41edc4:	es sub eax,0x3e7bf2b
  41edca:	popf   
  41edcb:	xlat   BYTE PTR ds:[ebx]
  41edcc:	out    dx,al
  41edcd:	shl    BYTE PTR [ecx-0x47],cl
  41edd0:	mov    ch,0x6a
  41edd2:	scas   eax,DWORD PTR es:[edi]
  41edd3:	call   0xc864:0x8acac3d8
  41edda:	ret    
  41eddb:	popa   
  41eddc:	(bad)  
  41eddd:	call   0xe5b4356d
  41ede2:	push   0xeeebe842
  41ede7:	pusha  
  41ede8:	pop    ebp
  41ede9:	aas    
  41edea:	pop    edx
  41edeb:	mov    ah,0x88
  41eded:	lds    esp,FWORD PTR [ebx]
  41edef:	ins    DWORD PTR es:[edi],dx
  41edf0:	sub    edi,DWORD PTR [edx]
  41edf2:	adc    bh,BYTE PTR [edx]
  41edf4:	mov    BYTE PTR [edx-0x7a],ch
  41edf7:	pusha  
  41edf8:	cld    
  41edf9:	jmp    0x631db2ff
  41edfe:	and    ecx,DWORD PTR ds:0xb89ee8ff
  41ee04:	xchg   BYTE PTR [edi*8-0x66227f74],ch
  41ee0b:	add    al,BYTE PTR [eax]
  41ee0d:	ds xchg edx,eax
  41ee0f:	pop    eax
  41ee10:	dec    edi
  41ee11:	pusha  
  41ee12:	dec    ebp
  41ee13:	cmp    esp,eax
  41ee15:	sub    al,0xc1
  41ee17:	pusha  
  41ee18:	cld    
  41ee19:	jmp    0x818477bc
  41ee1e:	(bad)  
  41ee1f:	hlt    
  41ee20:	jmp    0x41edfd
  41ee22:	pop    esi
  41ee23:	popa   
  41ee24:	xchg   esp,ebx
  41ee26:	add    BYTE PTR [esi-0x663e4ee8],dh
  41ee2c:	add    al,BYTE PTR [eax]
  41ee2e:	out    0x1c,al
  41ee30:	(bad)  
  41ee32:	call   0x9dc279d5
  41ee37:	mov    eax,ds:0x45720002
  41ee3c:	pop    ecx
  41ee3d:	mov    ch,bh
  41ee3f:	jbe    0x41ee88
  41ee41:	inc    edx
  41ee42:	das    
  41ee43:	sahf   
  41ee44:	test   ebp,esi
  41ee46:	imul   BYTE PTR [edx-0x4b]
  41ee49:	(bad)  
  41ee4a:	call   0xe18779ed
  41ee4f:	sbb    eax,0xf0f873a1
  41ee54:	pusha  
  41ee55:	dec    esp
  41ee56:	add    BYTE PTR [ebx-0xbecf00e],ah
  41ee5c:	add    al,0x81
  41ee5e:	rol    bl,0xe0
  41ee61:	cmp    BYTE PTR [ecx],al
  41ee63:	les    eax,FWORD PTR [esi+eax*8]
  41ee66:	inc    ebp
  41ee67:	rol    DWORD PTR ds:0x5c345c6,0xb
  41ee6e:	mov    dh,0xc9
  41ee70:	jmp    0xdfc9cf32
  41ee75:	dec    eax
  41ee76:	add    eax,0xec41dc40
  41ee7b:	stc    
  41ee7c:	sbb    ecx,DWORD PTR [esp+eax*4]
  41ee7f:	dec    eax
  41ee80:	pop    es
  41ee81:	add    BYTE PTR [eax],al
  41ee83:	push   ebx
  41ee84:	xchg   edx,eax
  41ee85:	cmp    eax,0x852ac0c
  41ee8a:	dec    eax
  41ee8b:	add    BYTE PTR [ecx-0x67b9770f],cl
  41ee91:	fs jg  0x41eecc
  41ee94:	dec    ebx
  41ee95:	mov    edi,0x427a8d03
  41ee9a:	bound  eax,QWORD PTR [ebx+0x571065c]
  41eea0:	mov    ebp,0x38ebf09f
  41eea5:	xchg   DWORD PTR [ecx-0xc],esp
  41eea8:	xor    al,0x87
  41eeaa:	jns    0x41eea0
  41eeac:	xor    al,0x5b
  41eeae:	adc    BYTE PTR [ebp+0xf000404],0x2b
  41eeb5:	inc    ebp
  41eeb6:	adc    BYTE PTR [ebx+0x3986f42a],cl
  41eebc:	and    al,0x36
  41eebe:	sti    
  41eebf:	jne    0x41ee79
  41eec1:	jmp    0xc6b9ff19
  41eec6:	jo     0x41eed2
  41eec8:	ja     0x41ef09
  41eeca:	in     al,dx
  41eecb:	add    BYTE PTR [edx-0x62fe0561],bh
  41eed1:	add    al,0xe9
  41eed3:	cld    
  41eed4:	test   al,0x55
  41eed6:	push   cs
  41eed7:	inc    eax
  41eed8:	popf   
  41eed9:	ret    0x24c0
  41eedc:	popf   
  41eedd:	imul   ebp,DWORD PTR [ebx],0xec953abf
  41eee3:	push   ebp
  41eee4:	and    al,BYTE PTR es:[ecx+0x41088e6]
  41eeeb:	add    BYTE PTR [ecx],ch
  41eeed:	sub    eax,0xb300e683
  41eef2:	push   0x699dbd7c
  41eef7:	add    BYTE PTR [ecx+0x3dec5574],al
  41eefd:	push   ss
  41eefe:	es pop eax
  41ef00:	or     al,0x33
  41ef02:	sub    eax,0x41cdd7fd
  41ef07:	sar    eax,0x6a
  41ef0a:	test   al,0xd3
  41ef0c:	out    0xfa,eax
  41ef0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef0f:	addr16 cld 
  41ef11:	pop    edx
  41ef12:	mov    esp,0x6952fec4
  41ef17:	adc    dh,BYTE PTR [bx+di+0x3b]
  41ef1b:	sar    bh,0x37
  41ef1e:	dec    edi
  41ef1f:	and    eax,0x698241
  41ef24:	jl     0x41ef70
  41ef26:	scas   al,BYTE PTR es:[edi]
  41ef27:	mov    esp,0xe6699d24
  41ef2c:	or     eax,0x1fa760
  41ef31:	popf   
  41ef32:	cmp    eax,0x86c3aff
  41ef37:	add    al,0x0
  41ef39:	nop
  41ef3a:	sub    eax,DWORD PTR [ecx-0x1296fc86]
  41ef40:	or     esp,ebx
  41ef42:	lods   eax,DWORD PTR ds:[esi]
  41ef43:	data16 (bad) 
  41ef45:	and    eax,0x9ee870a6
  41ef4a:	add    ah,BYTE PTR ds:0xa35fe7be
  41ef50:	push   0x515dd5a
  41ef55:	add    BYTE PTR [eax-0x36970b7c],ah
  41ef5b:	pop    esi
  41ef5c:	data16 out 0xc7,al
  41ef5f:	add    esi,DWORD PTR [ebx+edx*1+0x24]
  41ef63:	enter  0x7ede,0xf2
  41ef67:	aad    0xab
  41ef69:	inc    eax
  41ef6a:	pusha  
  41ef6b:	push   cs
  41ef6c:	es pop ds
  41ef6e:	popf   
  41ef6f:	add    dl,dl
  41ef71:	sbb    DWORD PTR ds:0x904d4e0,ebx
  41ef77:	sub    eax,0x2fae66a
  41ef7c:	cmp    al,0x10
  41ef7e:	jne    0x41ef80
  41ef80:	test   al,0x66
  41ef82:	jns    0x41ef0e
  41ef84:	imul   edx,eax,0x7ae65e73
  41ef8a:	xlat   BYTE PTR ds:[ebx]
  41ef8b:	pop    edx
  41ef8c:	imul   esp,DWORD PTR [eax],0x10920315
  41ef92:	and    al,0xc5
  41ef94:	fiadd  WORD PTR [eax+0x7adbd712]
  41ef9a:	xlat   BYTE PTR ds:[ebx]
  41ef9b:	push   edx
  41ef9c:	outs   dx,DWORD PTR ds:[esi]
  41ef9d:	mov    dh,0x96
  41ef9f:	mov    dl,0x7d
  41efa1:	adc    DWORD PTR [ecx-0xf],edx
  41efa4:	es add al,0x30
  41efa7:	enter  0x7b6e,0xdf
  41efab:	pop    edx
  41efac:	and    DWORD PTR [ebx+0x3e703ca],eax
  41efb2:	test   al,0x80
  41efb4:	push   0x615e1166
  41efb9:	imul   eax,DWORD PTR [eax],0x2
  41efbc:	into   
  41efbd:	out    0x3,eax
  41efbf:	popf   
  41efc0:	pop    ebp
  41efc1:	mov    bl,0x5b
  41efc3:	stc    
  41efc4:	idiv   edi
  41efc6:	cmp    BYTE PTR [edi-0x1f72003e],cl
  41efcc:	mov    edx,0x8acc2ac6
  41efd1:	jmp    0x41f03d
  41efd3:	jne    0x41efca
  41efd5:	push   ebp
  41efd6:	mov    esi,0xaa885557
  41efdb:	scas   al,BYTE PTR es:[edi]
  41efdc:	cmp    DWORD PTR [edi-0x92bd0a],0x40549ee8
  41efe6:	rcr    BYTE PTR [ecx-0x5ef87bf1],1
  41efec:	add    al,BYTE PTR [eax]
  41efee:	jae    0x41efcf
  41eff0:	hlt    
  41eff1:	add    BYTE PTR [ecx+ecx*1+0x5e],0xfa
  41eff6:	mov    eax,ds:0x5cfcc116
  41effb:	or     ebx,DWORD PTR [edx]
  41effd:	(bad)  
  41effe:	call   0x24c8a2a1
  41f003:	aad    0x5e
  41f005:	adc    al,ch
  41f007:	mov    edx,es
  41f009:	jmp    FWORD PTR [ecx+0x43]
  41f00c:	mov    ch,0xfe
  41f00e:	call   0x674ef2b1
  41f013:	cld    
  41f014:	pop    esp
  41f015:	cld    
  41f016:	jmp    0xe89576f2
  41f01b:	sahf   
  41f01c:	add    cl,BYTE PTR [ecx-0x754effcc]
  41f022:	xor    esi,DWORD PTR [ecx-0x47]
  41f025:	shl    bl,1
  41f027:	ins    BYTE PTR es:[edi],dx
  41f028:	rcl    cl,0x4b
  41f02b:	(bad)  
  41f02c:	call   0x326b7335
  41f031:	shr    BYTE PTR [ecx-0x17],0xee
  41f035:	pop    ebp
  41f036:	adc    bh,cl
  41f038:	scas   eax,DWORD PTR es:[edi]
  41f039:	ret    0x63ff
  41f03c:	pop    esi
  41f03d:	shl    BYTE PTR [edi],1
  41f03f:	add    BYTE PTR [edi+0x41896c9f],cl
  41f045:	rol    DWORD PTR [ecx-0x7908cf40],1
  41f04b:	jbe    0x41f011
  41f04d:	xlat   BYTE PTR ds:[ebx]
  41f04e:	inc    ecx
  41f04f:	hlt    
  41f050:	ja     0x41f013
  41f052:	adc    dh,bh
  41f054:	call   0x103b:0xb423f608
  41f05b:	lea    eax,[edx]
  41f05d:	pop    ebp
  41f05e:	dec    esp
  41f05f:	(bad)  
  41f060:	test   DWORD PTR [edx],0x24d1ff50
  41f066:	push   ss
  41f067:	inc    eax
  41f068:	les    edi,FWORD PTR [edi-0x40]
  41f06b:	or     al,0x41
  41f06d:	shl    DWORD PTR [ecx+0x8],0x2e
  41f071:	popf   
  41f072:	sti    
  41f073:	cmp    dl,al
  41f075:	add    DWORD PTR [eax+edx*1+0x6b],esi
  41f079:	pushf  
  41f07a:	hlt    
  41f07b:	mov    eax,ecx
  41f07d:	out    dx,al
  41f07e:	aaa    
  41f07f:	xchg   DWORD PTR [edi+edi*8-0x49ff0001],edi
  41f086:	jno    0x41f06f
  41f088:	xor    edi,edi
  41f08a:	imul   ebp,esp,0xffffff8b
  41f08d:	inc    edx
  41f08e:	fcmovb st,st(7)
  41f090:	call   0x3c95cd
  41f095:	iret   
  41f096:	pushf  
  41f097:	add    al,0x85
  41f099:	add    al,0x53
  41f09b:	pop    es
  41f09c:	and    DWORD PTR [edx+0x1b4ffc5a],0xc
  41f0a3:	aam    0x12
  41f0a5:	test   BYTE PTR [esi],al
  41f0a7:	xchg   DWORD PTR [ebp-0x50],esi
  41f0aa:	mov    esi,0xe5babff2
  41f0af:	xchg   DWORD PTR [edi+0xe0],eax
  41f0b5:	(bad)  
  41f0b6:	xchg   ebx,eax
  41f0b7:	hlt    
  41f0b8:	sbb    DWORD PTR [ebp+0x17ff7c0d],0xffffffa7
  41f0bf:	push   0x1a21a38
  41f0c4:	add    BYTE PTR [ebp+0x5ae7fd95],bl
  41f0ca:	imul   eax,DWORD PTR [eax],0x5496ea00
  41f0d0:	cld    
  41f0d1:	mov    cl,bh
  41f0d3:	adc    DWORD PTR [eax-0x63],eax
  41f0d6:	lock sub esi,ebp
  41f0d9:	cmc    
  41f0da:	out    0xb6,al
  41f0dc:	adc    eax,0xbf1f29a6
  41f0e1:	pop    ss
  41f0e2:	xchg   edx,eax
  41f0e3:	(bad)  
  41f0e4:	jg     0x41f0aa
  41f0e6:	xchg   edi,eax
  41f0e7:	in     eax,dx
  41f0e8:	or     al,0x0
  41f0ea:	push   ds
  41f0eb:	sub    al,BYTE PTR [eax]
  41f0ed:	push   eax
  41f0ee:	push   ss
  41f0ef:	push   ebp
  41f0f0:	pop    eax
  41f0f1:	imul   ebx,DWORD PTR [edx+0x5d840069],0x92510bb5
  41f0fb:	jl     0x41f07d
  41f0fd:	dec    BYTE PTR [edx-0x533ea797]
  41f103:	push   0x0
  41f105:	test   BYTE PTR [ebp+0x15],bl
  41f108:	cld    
  41f109:	push   esp
  41f10a:	es test al,0x58
  41f10d:	and    eax,0x5d0069a1
  41f112:	ret    
  41f113:	xchg   edx,eax
  41f114:	aas    
  41f115:	xor    BYTE PTR [eax+edi*1+0x4e],ah
  41f119:	and    dl,BYTE PTR ss:[ecx]
  41f11c:	add    DWORD PTR [eax],eax
  41f11e:	popf   
  41f11f:	repz das 
  41f121:	push   esi
  41f122:	adc    BYTE PTR [ecx*8-0x3096c502],bl
  41f129:	mov    BYTE PTR [ebx-0x626fdb18],bl
  41f12f:	push   ebp
  41f130:	sti    
  41f131:	mov    BYTE PTR [ecx-0x498588fe],al
  41f137:	mov    ah,BYTE PTR [edi-0x518c2a3f]
  41f13d:	add    bl,BYTE PTR [ebp+0x655bd902]
  41f143:	pop    ss
  41f144:	sbb    bh,ch
  41f146:	test   al,0x89
  41f148:	ins    DWORD PTR es:[edi],dx
  41f149:	retf   
  41f14a:	repz pop edx
  41f14c:	out    0xd8,al
  41f14e:	add    bl,ah
  41f150:	aad    0x3e
  41f152:	xchg   esp,eax
  41f153:	fcomp  DWORD PTR [ebx+0x25]
  41f156:	(bad)
  41f159:	mov    bl,0xcc
  41f15b:	and    eax,0x5d0ddb1d
  41f160:	add    bl,dl
  41f162:	dec    eax
  41f163:	xor    al,0xf2
  41f165:	jae    0x41f1e4
  41f167:	mov    ds:0xd803e701,al
  41f16c:	add    edi,ebx
  41f16e:	jmp    0x7c1b:0xd39a026a
  41f175:	inc    esi
  41f176:	add    eax,0x8270029d
  41f17b:	inc    BYTE PTR [ebx]
  41f17d:	out    0x3,eax
  41f17f:	mov    BYTE PTR [edx],dh
  41f181:	inc    eax
  41f182:	or     al,0x16
  41f184:	sbb    esi,0x1a029d04
  41f18a:	mov    ah,0x71
  41f18c:	xor    al,BYTE PTR [eax-0x4]
  41f18f:	pop    ss
  41f190:	add    DWORD PTR [esi],0x3a029d05
  41f196:	mov    ah,0x59
  41f198:	xor    ch,BYTE PTR [ecx+0x48]
  41f19b:	jle    0x41f189
  41f19d:	cli    
  41f19e:	mov    ebp,DWORD PTR [eax]
  41f1a0:	sbb    ebp,eax
  41f1a2:	add    ebx,DWORD PTR [ebp+0x385d826a]
  41f1a8:	pop    edx
  41f1a9:	push   ss
  41f1aa:	xchg   ecx,eax
  41f1ab:	fdivr  st,st(6)
  41f1ad:	inc    DWORD PTR [eax-0x16ffd33e]
  41f1b3:	add    BYTE PTR [ebx],dl
  41f1b5:	sub    eax,0x59defbf4
  41f1ba:	mov    esp,DWORD PTR [edi-0x43]
  41f1bd:	pop    ecx
  41f1be:	cld    
  41f1bf:	jmp    0x5d144912
  41f1c4:	pop    ss
  41f1c5:	loop   0x41f1c5
  41f1c7:	call   0x5fc8a46a
  41f1cc:	xor    eax,0x19e9fc59
  41f1d1:	js     0x41f22a
  41f1d3:	call   0x87c8f476
  41f1d8:	fstp   QWORD PTR [eax-0x4]
  41f1db:	jmp    0xadca261f
  41f1e0:	xor    dl,0x86
  41f1e3:	addr16 sub eax,0xde9fc59
  41f1e9:	or     BYTE PTR [edi+0x50029ee8],0x60
  41f1f0:	pop    ds
  41f1f1:	(bad)  
  41f1f3:	call   0x6ddf7396
  41f1f8:	mov    eax,ds:0xd5de0002
  41f1fd:	loope  0x41f1e8
  41f1ff:	jmp    0x5836:0x678b029e
  41f206:	cld    
  41f207:	jmp    0x973ebb3f
  41f20c:	sbb    eax,DWORD PTR [ebp+0xb]
  41f20f:	push   ss
  41f210:	pop    esp
  41f211:	mov    al,ch
  41f213:	adc    bl,bl
  41f215:	add    eax,0x2a003e00
  41f21a:	push   eax
  41f21b:	out    0xfa,eax
  41f21d:	sahf   
  41f21e:	add    al,BYTE PTR [eax]
  41f220:	lahf   
  41f221:	bound  esp,QWORD PTR ds:0xff6ae808
  41f227:	push   esp
  41f228:	add    BYTE PTR [edx+eax*4],cl
  41f22b:	ret    0xb3fe
  41f22e:	mov    bl,al
  41f230:	pop    edi
  41f231:	test   BYTE PTR [eax],0x0
  41f234:	push   ebx
  41f235:	mov    ch,BYTE PTR [eax+0x0]
  41f238:	(bad)  
  41f239:	or     esi,DWORD PTR [ecx+0x72044074]
  41f23f:	mov    bl,0x8
  41f241:	cmc    
  41f242:	add    al,0x0
  41f244:	pop    ebx
  41f245:	jg     0x41f23a
  41f247:	or     cl,0x38
  41f24a:	or     eax,DWORD PTR [edi-0x50231ff]
  41f250:	adc    BYTE PTR [edi-0x35],dh
  41f253:	add    BYTE PTR [ebx+0x29],cl
  41f256:	shl    DWORD PTR ds:0xfffddc9f,cl
  41f25c:	jmp    FWORD PTR [edx]
  41f25e:	add    eax,DWORD PTR [edi-0x1f779]
  41f264:	jmp    DWORD PTR [ecx+0x1]
  41f267:	cwde   
  41f268:	sbb    esp,0x4
  41f26b:	je     0x41f274
  41f26d:	das    
  41f26e:	cmc    
  41f26f:	out    0x39,eax
  41f271:	jb     0x41f256
  41f273:	sti    
  41f274:	inc    ebx
  41f275:	out    dx,eax
  41f276:	adc    DWORD PTR [ecx+eax*1-0x7c],0x4
  41f27b:	jb     0x41f25f
  41f27d:	add    BYTE PTR [edi],cl
  41f27f:	lock out 0x12,eax
  41f282:	mov    ah,0xfe
  41f284:	mov    BYTE PTR [edi+0x390],al
  41f28a:	xchg   esp,eax
  41f28b:	loope  0x41f25f
  41f28d:	(bad)  
  41f28e:	jmp    0x41f22a
  41f290:	std    
  41f291:	push   DWORD PTR [esp+ebp*8+0x30]
  41f295:	(bad)  
  41f296:	xor    ah,dl
  41f298:	xchg   DWORD PTR [edi+0x3e0],eax
  41f29e:	mov    ecx,0x9d0770be
  41f2a3:	sbb    DWORD PTR [edi+0x12],ebx
  41f2a6:	std    
  41f2a7:	pop    ebx
  41f2a8:	sar    bh,0x29
  41f2ab:	jmp    0x6a74f19b
  41f2b0:	mov    al,0xfc
  41f2b2:	push   ebx
  41f2b3:	fild   WORD PTR [esi+0x699c8f]
  41f2b9:	push   eax
  41f2ba:	sbb    bl,BYTE PTR [eax]
  41f2bc:	pop    edi
  41f2bd:	mov    ah,0x7d
  41f2bf:	push   0x0
  41f2c1:	add    ch,dh
  41f2c3:	addr16 inc esi
  41f2c5:	std    
  41f2c6:	add    ch,BYTE PTR [eax-0x2b92fbb9]
  41f2cc:	ret    
  41f2cd:	call   DWORD PTR [edi+0x2c]
  41f2d0:	mov    ch,0x88
  41f2d2:	stc    
  41f2d3:	jp     0x41f286
  41f2d5:	mov    bl,BYTE PTR [edx]
  41f2d7:	add    WORD PTR [eax],ax
  41f2da:	popf   
  41f2db:	cdq    
  41f2dc:	inc    esi
  41f2dd:	inc    edx
  41f2de:	shr    BYTE PTR [ecx-0x77],cl
  41f2e1:	inc    edx
  41f2e2:	add    ch,al
  41f2e4:	lock hlt 
  41f2e6:	jmp    0x41f297
  41f2e8:	test   eax,0xa1fa7f00
  41f2ed:	add    DWORD PTR [eax],eax
  41f2ef:	popf   
  41f2f0:	pop    eax
  41f2f1:	pop    edi
  41f2f2:	jmp    FWORD PTR [edx-0x25774e28]
  41f2f8:	add    DWORD PTR [esi],edi
  41f2fa:	stc    
  41f2fb:	call   0x8b20:0x9bf8460
  41f302:	mov    ebp,fs
  41f304:	push   0x0
  41f306:	add    ah,bl
  41f308:	les    ecx,FWORD PTR [eax+0x73]
  41f30b:	ror    esi,cl
  41f30d:	xchg   edi,eax
  41f30e:	push   ebx
  41f30f:	pushf  
  41f310:	imul   eax,DWORD PTR [eax],0x5ea570e8
  41f316:	cld    
  41f317:	sbb    DWORD PTR [ecx+0x22828d4],ebp
  41f31d:	sub    cl,BYTE PTR [eax]
  41f31f:	in     eax,dx
  41f320:	push   edi
  41f321:	repz jmp FWORD PTR [ebp+0x198ce6c2]
  41f328:	mov    edx,0x8b9d03e7
  41f32d:	hlt    
  41f32e:	mov    dl,BYTE PTR [esi-0x3967827f]
  41f334:	add    edi,esp
  41f336:	add    esp,DWORD PTR [eax]
  41f338:	jg     0x41f348
  41f33a:	add    ebx,DWORD PTR [ebp-0x110999fe]
  41f340:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f342:	add    esp,ebx
  41f344:	mov    esp,0x63000255
  41f349:	push   edi
  41f34a:	rcr    DWORD PTR [ebx-0x7],cl
  41f34d:	in     al,dx
  41f34e:	ss cmc 
  41f350:	mov    dl,0x2
  41f352:	jno    0x41f31a
  41f354:	jmp    0x15f81ca1
  41f359:	imul   bp,WORD PTR [edi-0x5a],0xab8b
  41f35f:	or     ebp,DWORD PTR [ebx-0x51]
  41f362:	jno    0x41f33f
  41f364:	call   0xf136:0xc9f92683
  41f36b:	pusha  
  41f36c:	jge    0x41f3c8
  41f36e:	jae    0x41f2f4
  41f370:	jbe    0x41f373
  41f372:	out    0x3,eax
  41f374:	dec    ebp
  41f375:	inc    eax
  41f376:	stos   DWORD PTR es:[edi],eax
  41f377:	pusha  
  41f378:	mov    ds:0x22072583,al
  41f37d:	rcr    dl,0x5f
  41f380:	scas   eax,DWORD PTR es:[edi]
  41f381:	data16 clc 
  41f383:	ret    
  41f384:	mov    dl,BYTE PTR [ecx]
  41f386:	fisttp QWORD PTR [ebp-0x6cf0a4f1]
  41f38c:	rol    BYTE PTR [ebx],cl
  41f38e:	out    0x3,eax
  41f390:	jmp    0x41f376
  41f392:	jno    0x41f317
  41f394:	into   
  41f395:	add    eax,DWORD PTR [eax]
  41f397:	jmp    0x79457d3a
  41f39c:	inc    BYTE PTR es:[edx+0x36c075b0]
  41f3a3:	sub    al,0x99
  41f3a5:	into   
  41f3a6:	pop    ds
  41f3a7:	bound  ebx,QWORD PTR [eax+0x6]
  41f3aa:	sub    DWORD PTR [eax-0x28b0cd00],0xbf22dee2
  41f3b4:	adc    esp,DWORD PTR ds:0xeeedbf83
  41f3ba:	scas   al,BYTE PTR es:[edi]
  41f3bb:	cld    
  41f3bc:	aam    0xba
  41f3be:	in     al,dx
  41f3bf:	aas    
  41f3c0:	jmp    0x644d35e4
  41f3c5:	popa   
  41f3c6:	rcr    BYTE PTR [esi],1
  41f3c8:	bound  ebx,QWORD PTR [esi]
  41f3ca:	mov    dl,0xfe
  41f3cc:	call   0x79757f6f
  41f3d1:	xor    DWORD PTR [edi],0x8a4a3fbb
  41f3d7:	dec    edx
  41f3d8:	xor    DWORD PTR [esi],edx
  41f3da:	adc    DWORD PTR [ebx-0x18],0xffffff9e
  41f3de:	add    al,BYTE PTR [ecx-0x3da9d933]
  41f3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3e5:	imul   edx,DWORD PTR [ecx+ecx*4+0x18],0xffffffdb
  41f3ea:	jl     0x41f45e
  41f3ec:	adc    DWORD PTR [esi-0x6117a86d],edx
  41f3f2:	add    dh,BYTE PTR [edx+0x5e]
  41f3f5:	and    ecx,ebx
  41f3f7:	cld    
  41f3f8:	jmp    0xf2caf2c7
  41f3fd:	push   es
  41f3fe:	idiv   dl
  41f400:	out    0xf3,al
  41f402:	push   esi
  41f403:	jb     0x41f3da
  41f405:	jmp    0x41f3f7
  41f407:	out    dx,eax
  41f408:	sti    
  41f409:	pop    esi
  41f40a:	push   ebp
  41f40b:	xchg   BYTE PTR [edx+ebx*8],ah
  41f40e:	mov    dh,0x5d
  41f410:	add    BYTE PTR [eax],al
  41f412:	sub    eax,0x910000c3
  41f417:	mov    eax,ebp
  41f419:	sbb    DWORD PTR [eax+0x1d],0x4f
  41f41d:	push   esi
  41f41e:	mov    bl,0xe6
  41f420:	pop    ecx
  41f421:	icebp  
  41f422:	cli    
  41f423:	mov    bl,0x87
  41f425:	clc    
  41f426:	int    0x62
  41f428:	in     al,dx
  41f429:	test   DWORD PTR [ebx],ebp
  41f42b:	cmp    al,BYTE PTR [ebx]
  41f42d:	xor    al,BYTE PTR [esi+eiz*8]
  41f430:	add    DWORD PTR [eax],0x7d7f0144
  41f436:	inc    esp
  41f437:	add    DWORD PTR [edi+0x41bf305f],eax
  41f43d:	inc    DWORD PTR [edx+edi*1]
  41f440:	or     cl,BYTE PTR [ebp-0x161aeabf]
  41f446:	push   esp
  41f447:	add    DWORD PTR [eax],eax
  41f449:	lea    esi,[ecx]
  41f44b:	adc    eax,0xb3f44586
  41f450:	jno    0x41f462
  41f452:	outs   dx,DWORD PTR ds:[esi]
  41f453:	cmp    al,BYTE PTR [eax+ebp*8]
  41f456:	sar    ah,1
  41f458:	(bad)  
  41f459:	push   DWORD PTR [ecx+0x18]
  41f45c:	jnp    0x41f4a9
  41f45e:	inc    edi
  41f45f:	push   0xfffffff4
  41f461:	add    BYTE PTR [ebp+0x42],cl
  41f464:	lock mov eax,ebx
  41f467:	inc    DWORD PTR [eax-0x8]
  41f46a:	push   ds
  41f46b:	add    ebx,edi
  41f46d:	jne    0x41f437
  41f46f:	mov    bl,0x71
  41f471:	sbb    BYTE PTR [ebx+0xff103a],bl
  41f477:	xor    DWORD PTR [ecx-0x5],edx
  41f47a:	jne    0x41f434
  41f47c:	call   0xc70e49
  41f481:	xchg   eax,esi
  41f483:	add    DWORD PTR [ebp+0x340f1a70],ebp
  41f489:	add    al,0x8b
  41f48b:	popf   
  41f48c:	mov    ebp,DWORD PTR [ebx+0x44]
  41f48f:	jnp    0x41f4d6
  41f491:	pop    edx
  41f492:	sbb    DWORD PTR [ebp+0x16],0x8
  41f496:	(bad)  
  41f497:	loopne 0x41f42d
  41f499:	add    al,ch
  41f49b:	test   ch,cl
  41f49d:	pop    ebp
  41f49e:	cld    
  41f49f:	es daa 
  41f4a1:	push   esp
  41f4a2:	sbb    al,0xa1
  41f4a5:	sbb    edi,ebp
  41f4a7:	fsubr  DWORD PTR [ebp-0x2c]
  41f4aa:	mov    ebx,0x23683542
  41f4af:	popa   
  41f4b0:	test   BYTE PTR [edx+0x54],bl
  41f4b3:	inc    ebp
  41f4b4:	pop    esp
  41f4b5:	inc    esp
  41f4b6:	std    
  41f4b7:	sub    dl,al
  41f4b9:	(bad)  
  41f4ba:	cld    
  41f4bb:	ret    0xb6eb
  41f4be:	(bad)  
  41f4bf:	fbstp  TBYTE PTR [ecx]
  41f4c1:	add    BYTE PTR [ebx+0x26],dl
  41f4c4:	scas   al,BYTE PTR es:[edi]
  41f4c5:	jle    0x41f4b2
  41f4c7:	cdq    
  41f4c8:	call   0x98dff0b1
  41f4cd:	mov    bl,0x88
  41f4cf:	js     0x41f532
  41f4d1:	xchg   edi,edx
  41f4d3:	es in  eax,0x8f
  41f4d6:	(bad)  
  41f4d7:	jmp    0xe0e9:0x428969
  41f4de:	mov    esi,0x589f2407
  41f4e3:	out    0xcf,eax
  41f4e5:	push   ds
  41f4e6:	pop    ebx
  41f4e7:	cld    
  41f4e8:	and    DWORD PTR [edx],ebp
  41f4ea:	fcom   DWORD PTR [ebx-0x3e]
  41f4ed:	jbe    0x41f4fb
  41f4ef:	mov    DWORD PTR [eax-0x53],edi
  41f4f2:	icebp  
  41f4f3:	aas    
  41f4f4:	popf   
  41f4f5:	outs   dx,DWORD PTR ds:[esi]
  41f4f6:	add    BYTE PTR [ebx+0x69b04d60],cl
  41f4fc:	lahf   
  41f4fd:	dec    esp
  41f4fe:	xor    eax,DWORD PTR [eax+0x30d56a95]
  41f504:	push   ds
  41f505:	add    ah,BYTE PTR [edx+0x10]
  41f508:	popf   
  41f509:	int    0xfb
  41f50b:	mov    ch,bl
  41f50d:	rcl    ch,cl
  41f50f:	(bad)  
  41f510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f511:	xchg   DWORD PTR [esi],esp
  41f513:	or     al,0x1a
  41f515:	mov    ebp,0x866ae9be
  41f51a:	and    ebx,DWORD PTR [eax-0x2e]
  41f51d:	call   0x15b3520a
  41f522:	jmp    0x1c449229
  41f527:	push   es
  41f528:	sbb    al,0xc5
  41f52a:	call   0x7b4a:0xda08355c
  41f531:	pop    ss
  41f532:	test   al,0xd6
  41f534:	popf   
  41f535:	mov    DWORD PTR [ebx],esi
  41f537:	pusha  
  41f538:	int    0x87
  41f53a:	sbb    ecx,DWORD PTR [esi*1+0x5c74f4]
  41f541:	sbb    DWORD PTR [edi-0x488e9fdd],eax
  41f547:	das    
  41f548:	inc    ecx
  41f549:	mov    ds:0xf688b402,al
  41f54e:	jle    0x41f592
  41f550:	ret    
  41f551:	dec    ebp
  41f552:	lods   al,BYTE PTR ds:[esi]
  41f553:	popa   
  41f554:	push   ebx
  41f555:	and    eax,0xd254d6bc
  41f55a:	mul    BYTE PTR [esi]
  41f55c:	mov    ss,WORD PTR [eax-0x14]
  41f55f:	or     DWORD PTR [ebx+0x71],eax
  41f562:	jg     0x41f58a
  41f564:	sti    
  41f565:	bound  ebp,QWORD PTR [edx+0x76]
  41f568:	push   ebp
  41f569:	enter  0x6252,0x43
  41f56d:	dec    esi
  41f56e:	sti    
  41f56f:	fadd   DWORD PTR [ebx-0x3d]
  41f572:	outs   dx,BYTE PTR ds:[esi]
  41f573:	out    0x3,eax
  41f575:	popf   
  41f576:	test   DWORD PTR [ebx+0xe3c1543],eax
  41f57c:	jge    0x41f527
  41f57e:	push   ebx
  41f57f:	push   ebp
  41f581:	add    DWORD PTR [ebx-0x7561f686],0x2a10e0f
  41f58b:	mov    bh,0x19
  41f58d:	ins    BYTE PTR es:[edi],dx
  41f58e:	push   edx
  41f58f:	cld    
  41f590:	pop    ebp
  41f591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f592:	call   0xd43b19cd
  41f597:	xlat   BYTE PTR ds:[ebx]
  41f598:	dec    edi
  41f599:	mov    BYTE PTR [ebp-0x1854c921],bh
  41f59f:	xor    BYTE PTR [ebp*8+0xdd7051],0x3c
  41f5a7:	sbb    DWORD PTR [ebx-0x63],eax
  41f5aa:	jae    0x41f5f1
  41f5ac:	gs loopne 0x41f604
  41f5af:	push   esi
  41f5b0:	je     0x41f608
  41f5b2:	sub    cl,ch
  41f5b4:	pop    es
  41f5b5:	pop    esp
  41f5b6:	push   ds
  41f5b7:	cmp    dh,0xe8
  41f5ba:	sahf   
  41f5bb:	mov    dl,0xc5
  41f5bd:	and    al,0xc2
  41f5bf:	push   ecx
  41f5c0:	ret    0x782c
  41f5c3:	push   eax
  41f5c4:	std    
  41f5c5:	aam    0xe6
  41f5c7:	add    BYTE PTR [eax-0x17],al
  41f5ca:	sbb    eax,0xdc740c92
  41f5cf:	dec    ebx
  41f5d0:	out    0x9a,eax
  41f5d2:	xchg   BYTE PTR [edi-0x4],cl
  41f5d5:	bound  esi,QWORD PTR [ecx+0x6af6d884]
  41f5db:	cmp    bh,0xe8
  41f5de:	sahf   
  41f5df:	jge    0x41f623
  41f5e1:	and    DWORD PTR [ecx],edx
  41f5e3:	jnp    0x41f5d5
  41f5e5:	inc    ecx
  41f5e6:	or     edx,DWORD PTR [esi-0x3]
  41f5e9:	es sbb al,0x92
  41f5ec:	ja     0x41f5cb
  41f5ee:	adc    esp,DWORD PTR [edx+0x68]
  41f5f1:	pop    ds
  41f5f2:	cdq    
  41f5f3:	add    esi,DWORD PTR [ecx]
  41f5f5:	imul   edx,esp,0x31ffff4b
  41f5fb:	sub    edi,DWORD PTR [esp+esi*2+0x52fc5fc0]
  41f602:	pushf  
  41f603:	imul   ebp,esi,0xfffffffe
  41f606:	sbb    ebp,0xfffffff5
  41f609:	fiadd  WORD PTR [eax]
  41f60b:	sub    BYTE PTR [edi+eax*4+0x440dcb],0xe8
  41f613:	cmp    ah,bl
  41f615:	cli    
  41f616:	(bad)  
  41f617:	cld    
  41f618:	inc    edx
  41f619:	imul   ebx
  41f61b:	outs   dx,DWORD PTR ds:[esi]
  41f61c:	pop    edi
  41f61d:	std    
  41f61e:	push   edx
  41f61f:	dec    esp
  41f620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f621:	out    dx,al
  41f622:	(bad)  
  41f623:	adc    edi,DWORD PTR [ebp+0x41]
  41f626:	stc    
  41f627:	mov    edi,0x6feb042a
  41f62c:	test   DWORD PTR [ecx-0x6],edi
  41f62f:	xor    al,0x41
  41f631:	and    DWORD PTR [ebx+0x7d32028f],eax
  41f637:	inc    ebx
  41f638:	pop    edi
  41f639:	std    
  41f63a:	mov    WORD PTR [ecx-0x3a],?
  41f63d:	xchg   ebx,ecx
  41f63f:	or     al,0x10
  41f641:	out    dx,al
  41f642:	(bad)  
  41f643:	xchg   ebx,eax
  41f644:	sar    DWORD PTR [esp+esi*2-0x1738800d],1
  41f64b:	and    ah,bl
  41f64d:	cli    
  41f64e:	(bad)  
  41f64f:	js     0x41f616
  41f651:	jo     0x41f657
  41f653:	retf   0xf742
  41f656:	add    DWORD PTR [ebx-0x8],esp
  41f659:	out    0x7f,eax
  41f65b:	mov    dh,0xab
  41f65d:	sti    
  41f65e:	push   ebx
  41f65f:	dec    esp
  41f660:	cs mov esi,0x798593fe
  41f666:	cli    
  41f667:	les    eax,FWORD PTR [eax+0x9]
  41f66a:	lea    edi,[ebx]
  41f66c:	aad    0xfd
  41f66e:	inc    DWORD PTR [eax]
  41f670:	mov    ah,0x94
  41f672:	sti    
  41f673:	adc    eax,0x3ff2eb9d
  41f678:	popf   
  41f679:	fcmovnbe st,st(7)
  41f67b:	clc    
  41f67c:	popf   
  41f67d:	iret   
  41f67e:	add    DWORD PTR [eax-0x740d64],esi
  41f684:	call   0x95a:0x947a805a
  41f68b:	test   BYTE PTR [eax+0x10fc5668],al
  41f691:	jmp    0x5abcf581
  41f696:	mov    al,0x86
  41f698:	fsub   DWORD PTR [ecx+0x57]
  41f69b:	adc    bh,BYTE PTR [ecx+0x2c]
  41f69e:	sar    bh,0x11
  41f6a1:	daa    
  41f6a2:	dec    esp
  41f6a3:	mov    bh,BYTE PTR [edx]
  41f6a5:	mov    edx,0xe99d0000
  41f6aa:	mov    dh,al
  41f6ac:	xor    eax,0x42fd52d9
  41f6b1:	out    0x43,eax
  41f6b3:	ja     0x41f638
  41f6b5:	in     al,0x53
  41f6b7:	push   0x3103322b
  41f6bc:	mov    bh,0x59
  41f6be:	mov    bl,0x8a
  41f6c0:	mov    al,ds:0xcff6b99
  41f6c5:	fcom   DWORD PTR [esi-0x79]
  41f6c8:	pop    eax
  41f6c9:	aam    0x6b
  41f6cb:	ss jmp 0x41f6b5
  41f6ce:	push   esi
  41f6cf:	xchg   BYTE PTR [ebx+0x65],bl
  41f6d2:	mov    eax,eax
  41f6d4:	add    BYTE PTR ds:0xf2fd53f7,al
  41f6da:	les    ebp,FWORD PTR [ebx]
  41f6dc:	push   0xffffff9c
  41f6de:	(bad)  
  41f6df:	mov    esp,0x6c1516bf
  41f6e4:	cmp    esp,ecx
  41f6e6:	pop    ss
  41f6e7:	push   edi
  41f6e8:	xchg   DWORD PTR [eax+0x14],ebx
  41f6eb:	cmp    BYTE PTR [edi-0x7d03fdaf],0x1
  41f6f2:	out    0xe7,eax
  41f6f4:	add    ebx,DWORD PTR [ebp-0x62fc188e]
  41f6fa:	rcr    bh,1
  41f6fc:	adc    al,0xdd
  41f6fe:	jnp    0x41f731
  41f700:	ins    BYTE PTR es:[edi],dx
  41f701:	cmc    
  41f702:	push   esp
  41f703:	cld    
  41f704:	pop    eax
  41f705:	cdq    
  41f706:	aad    0xde
  41f708:	pop    eax
  41f709:	scas   eax,DWORD PTR es:[edi]
  41f70a:	push   edx
  41f70b:	fadd   st,st(3)
  41f70d:	mov    bh,BYTE PTR [ecx+0x2b]
  41f710:	pop    ebp
  41f711:	loope  0x41f6c3
  41f713:	inc    ecx
  41f714:	dec    ebx
  41f715:	pop    esp
  41f716:	push   es
  41f717:	out    0xae,eax
  41f719:	and    eax,0xe267695e
  41f71e:	mov    eax,0x1fa8473
  41f723:	out    0x3,eax
  41f725:	lock mov dl,0xac
  41f728:	mov    esi,0xbe600251
  41f72d:	cmp    cl,BYTE PTR [edi-0x5]
  41f730:	lods   al,BYTE PTR ds:[si]
  41f732:	ret    0x14e6
  41f735:	pop    ebp
  41f736:	jns    0x41f763
  41f738:	pop    esp
  41f739:	add    BYTE PTR [ebx-0x7d],ch
  41f73c:	add    al,BYTE PTR [ebx]
  41f73e:	popf   
  41f73f:	add    dh,dh
  41f741:	mov    DWORD PTR [ebx],esp
  41f743:	add    ah,bh
  41f745:	add    esp,DWORD PTR [edx]
  41f747:	lds    edi,FWORD PTR [edx-0x74]
  41f74a:	push   ebp
  41f74b:	loop   0x41f734
  41f74d:	add    ebx,DWORD PTR [ebp+0x154fe403]
  41f753:	aad    0xee
  41f755:	xchg   BYTE PTR [ecx-0x6],ah
  41f758:	mov    dh,0x6b
  41f75a:	call   DWORD PTR [ebx+0x4c]
  41f75d:	pop    eax
  41f75e:	pop    ds
  41f75f:	inc    edx
  41f760:	cmc    
  41f761:	mov    dl,BYTE PTR [edi]
  41f763:	add    ah,bh
  41f765:	add    edx,ebx
  41f767:	(bad)  
  41f768:	jmp    esp
  41f76a:	lahf   
  41f76b:	ror    DWORD PTR [ebx],cl
  41f76d:	bound  ebx,QWORD PTR [edx+eax*4+0x77]
  41f771:	in     eax,dx
  41f772:	test   al,0xfd
  41f774:	mov    ah,BYTE PTR [eax-0x62]
  41f777:	add    al,BYTE PTR [eax]
  41f779:	pop    ds
  41f77a:	repz cli 
  41f77c:	add    DWORD PTR [ebp+0x7437d8ca],edx
  41f782:	jecxz  0x41f71a
  41f784:	push   esp
  41f785:	cdq    
  41f786:	cmc    
  41f787:	lock das 
  41f789:	fistp  WORD PTR [esi+0x4e]
  41f78c:	mov    DWORD PTR [esi+eiz*8+0x15f5c382],esp
  41f793:	jnp    0x41f7f4
  41f795:	call   0xfd29fa38
  41f79a:	int3   
  41f79b:	dec    edi
  41f79c:	cld    
  41f79d:	into   
  41f79e:	add    BYTE PTR [esi+ebx*2-0x4],cl
  41f7a2:	xor    al,0xc1
  41f7a4:	sub    BYTE PTR [edx-0x4b],0xb9
  41f7a8:	dec    edi
  41f7a9:	adc    bh,BYTE PTR [ecx+0x62000e4f]
  41f7af:	push   ss
  41f7b0:	into   
  41f7b1:	(bad)  
  41f7b2:	call   0x6c41d055
  41f7b7:	pop    esp
  41f7b8:	xchg   esi,eax
  41f7b9:	dec    edi
  41f7ba:	fcmovu st,st(6)
  41f7bc:	gs mov edi,ecx
  41f7bf:	mov    eax,ds:0x4ba98302
  41f7c4:	repnz imul ebp,eax,0x62b7c125
  41f7cb:	pop    ebx
  41f7cc:	gs push edx
  41f7ce:	jns    0x41f843
  41f7d0:	dec    esi
  41f7d1:	sub    DWORD PTR [ecx],0xffffffed
  41f7d4:	add    esi,eax
  41f7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d7:	push   ebx
  41f7d8:	dec    esp
  41f7d9:	std    
  41f7da:	fmul   QWORD PTR [esi+0x4e]
  41f7dd:	adc    bh,BYTE PTR ds:0xdef
  41f7e3:	dec    edi
  41f7e4:	inc    ebp
  41f7e5:	data16 add BYTE PTR [edi+0xd],cl
  41f7e9:	mov    dh,cl
  41f7eb:	pop    esp
  41f7ec:	std    
  41f7ed:	out    dx,eax
  41f7ee:	(bad)  
  41f7ef:	jnp    0x41f773
  41f7f1:	mov    esp,0x21d8ef74
  41f7f6:	mov    ecx,DWORD PTR [ecx]
  41f7f8:	cli    
  41f7f9:	xchg   al,dh
  41f7fb:	pop    ds
  41f7fc:	shl    BYTE PTR [ebx+eax*1],0xc5
  41f800:	pop    ebx
  41f801:	cld    
  41f802:	push   eax
  41f803:	add    BYTE PTR [ebx+eax*8-0x32640114],cl
  41f80a:	mov    esp,0x420f8074
  41f80f:	push   DWORD PTR [ebp+0x78]
  41f812:	jnp    0x41f818
  41f814:	mov    ebp,0x83730034
  41f819:	jle    0x41f895
  41f81b:	add    al,0x42
  41f81d:	inc    edx
  41f81e:	sti    
  41f81f:	add    edi,edi
  41f821:	inc    edx
  41f822:	hlt    
  41f823:	(bad)  
  41f824:	out    dx,eax
  41f825:	popa   
  41f826:	std    
  41f827:	inc    DWORD PTR [ecx+ebx*8-0x7d]
  41f82b:	icebp  
  41f82c:	or     dh,BYTE PTR [ebx+edi*8+0x69800c4d]
  41f833:	hlt    
  41f834:	cmp    al,0xb4
  41f836:	inc    ecx
  41f837:	clc    
  41f838:	scas   eax,DWORD PTR es:[edi]
  41f839:	inc    edx
  41f83a:	hlt    
  41f83b:	add    DWORD PTR [ecx-0x48c4cb4e],0x2d
  41f842:	std    
  41f843:	push   DWORD PTR [esp+eax*1]
  41f846:	mov    WORD PTR [edx],es
  41f848:	fwait
  41f849:	mov    ah,0xfb
  41f84b:	call   DWORD PTR [ecx]
  41f84d:	mov    cl,0xfb
  41f84f:	adc    eax,0x3c5384
  41f854:	je     0x41f880
  41f856:	sti    
  41f857:	add    al,dl
  41f859:	clc    
  41f85a:	xchg   BYTE PTR [ebp-0x63],al
  41f85d:	arpl   WORD PTR [eax-0x48],bp
  41f860:	sti    
  41f861:	mov    esp,0xc4588955
  41f866:	mov    ch,0x5d
  41f868:	add    ah,ah
  41f86a:	sbb    BYTE PTR [ecx],cl
  41f86c:	add    BYTE PTR [edi+0x5b],al
  41f86f:	push   ebp
  41f870:	scas   eax,DWORD PTR es:[edi]
  41f871:	sbb    DWORD PTR [edx+0x0],ebx
  41f874:	add    dl,al
  41f876:	dec    ebp
  41f877:	lock adc BYTE PTR [ebp+0x5b],bl
  41f87b:	dec    ebp
  41f87c:	xlat   BYTE PTR ds:[ebx]
  41f87d:	xchg   esi,eax
  41f87e:	sbb    ecx,DWORD PTR [esi-0x29]
  41f881:	ficom  WORD PTR [ebx-0x3ae202ef]
  41f887:	test   al,0xfe
  41f889:	call   0x8a64:0xd376005a
  41f890:	test   DWORD PTR [ebx+ebx*2],esi
  41f893:	add    BYTE PTR [eax],al
  41f895:	xchg   edx,eax
  41f896:	imul   eax,DWORD PTR [ebp+0x599ca7],0x1
  41f89d:	pop    edx
  41f89e:	jmp    0xc0aeecd4
  41f8a3:	out    dx,eax
  41f8a4:	cld    
  41f8a5:	jmp    0x6fab00a7
  41f8aa:	test   DWORD PTR ss:[ebx+0x7f8f],eax
  41f8b1:	popf   
  41f8b2:	jmp    0x4bc30b09
  41f8b7:	sar    bh,0x1f
  41f8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bb:	pop    es
  41f8bc:	sbb    DWORD PTR [ebp-0x12],0x1f
  41f8c0:	or     eax,0xfeabe3f3
  41f8c5:	and    bl,BYTE PTR [edx-0x45]
  41f8c8:	cmp    BYTE PTR ds:0x893e48,dl
  41f8ce:	sub    eax,edx
  41f8d0:	add    BYTE PTR [eax],al
  41f8d2:	popf   
  41f8d3:	fstp   DWORD PTR [ecx+0x31]
  41f8d6:	mov    es,WORD PTR [edx]
  41f8d8:	clc    
  41f8d9:	add    al,0x33
  41f8db:	cmp    DWORD PTR [edx+eax*2+0x1a],ebx
  41f8df:	jne    0x41f95f
  41f8e1:	add    ebx,DWORD PTR [ebp-0x5309bdfe]
  41f8e7:	inc    edx
  41f8e8:	push   ecx
  41f8e9:	push   cs
  41f8ea:	daa    
  41f8eb:	test   DWORD PTR [edi-0x19fd62fd],ecx
  41f8f1:	(bad)  
  41f8f2:	loop   0x41f940
  41f8f4:	es add eax,0x8df5430b
  41f8fa:	mov    ah,0x69
  41f8fc:	adc    eax,0x3f751a55
  41f901:	add    ebx,DWORD PTR [ebp-0x71b57dfe]
  41f907:	fcomp  st(2)
  41f909:	push   esp
  41f90a:	push   cs
  41f90b:	daa    
  41f90c:	jmp    0x41f894
  41f90e:	push   ds
  41f90f:	adc    DWORD PTR [ecx+0x3],eax
  41f912:	popf   
  41f913:	add    dl,BYTE PTR [edi-0x2ed50ac]
  41f919:	ret    
  41f91a:	jp     0x41f89c
  41f91c:	mov    ds:0x36012d07,al
  41f921:	inc    edx
  41f922:	sahf   
  41f923:	add    cl,BYTE PTR [edi-0x76f7420f]
  41f929:	inc    eax
  41f92a:	out    dx,eax
  41f92b:	ja     0x41f8f7
  41f92d:	cmp    BYTE PTR [esi],0x4a
  41f930:	addr16 add BYTE PTR [bp-0x18fd],ah
  41f936:	add    ebp,esp
  41f938:	mov    ah,0x3d
  41f93a:	in     al,dx
  41f93b:	adc    cl,BYTE PTR [eax]
  41f93d:	out    0x3,eax
  41f93f:	and    al,0x49
  41f941:	xchg   ebp,eax
  41f942:	out    dx,al
  41f943:	(bad)  
  41f944:	lock es add al,0x16
  41f948:	(bad)  
  41f949:	retf   0x2b3
  41f94c:	and    BYTE PTR [eax+0x3],al
  41f94f:	popf   
  41f950:	ja     0x41f951
  41f952:	mov    ebx,0xe93ff15a
  41f957:	sbb    edi,DWORD PTR [edi+0x23]
  41f95a:	cmp    DWORD PTR [esi+0x49b90002],ebx
  41f960:	xor    eax,0x9e8a8d80
  41f965:	(bad)  
  41f966:	call   0xe9abfc09
  41f96b:	les    ecx,FWORD PTR [ebx+0x31]
  41f96e:	sub    DWORD PTR [ebx],ebx
  41f970:	and    esi,DWORD PTR [bx+di-0x62]
  41f974:	add    al,BYTE PTR [eax]
  41f976:	pusha  
  41f977:	sub    bl,BYTE PTR [edi]
  41f979:	mov    al,0xe9
  41f97b:	sahf   
  41f97c:	add    ch,al
  41f97e:	adc    eax,0x83fc4acb
  41f983:	sahf   
  41f984:	fadd   DWORD PTR [ecx]
  41f986:	ficomp DWORD PTR [esi+0x78]
  41f989:	fwait
  41f98a:	int    0xe6
  41f98c:	dec    ecx
  41f98d:	cld    
  41f98e:	jmp    0xe9bc5d99
  41f993:	sahf   
  41f994:	jge    0x41f9d9
  41f996:	lds    eax,FWORD PTR [eax]
  41f998:	dec    esi
  41f999:	add    DWORD PTR [ebx-0x3b5baf3],0x23c5f1e9
  41f9a3:	std    
  41f9a4:	sbb    eax,0x2ef123c6
  41f9a9:	cmp    DWORD PTR [ebx-0x3b5faf3],0x23cdd1e9
  41f9b3:	fucomp st(7)
  41f9b5:	das    
  41f9b6:	mov    ah,dh
  41f9b8:	stos   BYTE PTR es:[edi],al
  41f9b9:	lock aas 
  41f9bb:	jmp    0xc272fc18
  41f9c0:	sbb    al,0xc6
  41f9c2:	and    ebx,ebp
  41f9c4:	repz mov ecx,0x461ab7fc
  41f9ca:	or     eax,DWORD PTR [eax]
  41f9cc:	scas   al,BYTE PTR es:[edi]
  41f9cd:	dec    esi
  41f9ce:	mov    DWORD PTR [eax+ebx*8-0x7],eax
  41f9d2:	dec    esi
  41f9d3:	push   eax
  41f9d4:	xchg   ebx,eax
  41f9d5:	or     al,0x80
  41f9d7:	(bad)  
  41f9d8:	loopne 0x41f96a
  41f9da:	mov    DWORD PTR [eax+ebp*4+0x4a],eax
  41f9de:	test   DWORD PTR [eax+ebx*4+0x42],ebx
  41f9e2:	test   DWORD PTR [eax+ebx*4-0x72],ebx
  41f9e6:	in     al,0xd6
  41f9e8:	retf   
  41f9e9:	mov    ah,0xfb
  41f9eb:	mov    ecx,DWORD PTR [ebx+0x6c24b083]
  41f9f1:	(bad)  
  41f9f2:	(bad)  
  41f9f3:	call   FWORD PTR [ebx+eax*8+0x3]
  41f9f7:	push   DWORD PTR [ebx-0x7d]
  41f9fa:	and    BYTE PTR [eax+eax*1],0x64
  41f9fe:	(bad)  
  41f9ff:	(bad)  
  41fa00:	jmp    FWORD PTR ds:0xb4017c7d
  41fa06:	add    eax,0x55d84489
  41fa0b:	test   DWORD PTR [edi+0x8],eax
  41fa11:	bsr    edx,DWORD PTR [ebx-0x77]
  41fa15:	sti    
  41fa16:	(bad)  
  41fa17:	std    
  41fa18:	push   DWORD PTR [ebp+ebp*4-0x78]
  41fa1c:	lock xor DWORD PTR [esi+eiz*2-0x4599b3f8],0xfffffffe
  41fa25:	push   ebx
  41fa26:	clc    
  41fa27:	mov    esi,0xfcbc4174
  41fa2c:	lahf   
  41fa2d:	xchg   edx,eax
  41fa2e:	ds cld 
  41fa30:	mov    ah,bl
  41fa32:	cli    
  41fa33:	xchg   al,dh
  41fa35:	pop    edi
  41fa36:	jmp    FWORD PTR [esi]
  41fa38:	mul    cl
  41fa3a:	inc    ecx
  41fa3b:	and    BYTE PTR [eax+0xc],dl
  41fa3e:	cmp    eax,0x81440059
  41fa43:	mov    esp,0x7d649d75
  41fa48:	les    esi,FWORD PTR ds:0x1afc4e40
  41fa4e:	xlat   BYTE PTR ds:[ebx]
  41fa4f:	inc    eax
  41fa50:	jb     0x41fa35
  41fa52:	repnz jecxz 0x41fa3e
  41fa55:	popf   
  41fa56:	pop    ebx
  41fa57:	mov    ch,0x8a
  41fa59:	sbb    bh,BYTE PTR [ebx]
  41fa5b:	add    eax,DWORD PTR [eax]
  41fa5d:	popf   
  41fa5e:	mov    eax,DWORD PTR [ecx]
  41fa60:	mov    dh,0x0
  41fa62:	sbb    ah,BYTE PTR [ebx]
  41fa64:	add    eax,DWORD PTR [eax]
  41fa66:	popf   
  41fa67:	mov    edx,DWORD PTR [ecx+0x12]
  41fa6a:	sub    DWORD PTR [ebp-0x40],ecx
  41fa6d:	call   FWORD PTR [edi]
  41fa6f:	ret    
  41fa70:	push   ecx
  41fa71:	jae    0x41fa22
  41fa73:	inc    esi
  41fa74:	add    bh,bh
  41fa76:	retf   0xd45a
  41fa79:	or     BYTE PTR [edx-0x63c87e2f],dl
  41fa7f:	pop    ebx
  41fa80:	add    BYTE PTR [ecx],bh
  41fa82:	fsubr  QWORD PTR [ebx+esi*8+0x54]
  41fa86:	mov    ch,0x3c
  41fa88:	push   eax
  41fa89:	cld    
  41fa8a:	mov    ds:0xed23c4a5,al
  41fa8f:	icebp  
  41fa90:	sbb    eax,0x5d599db8
  41fa95:	mov    edx,0x1f89de16
  41fa9a:	pushf  
  41fa9b:	pop    ecx
  41fa9c:	add    BYTE PTR [ecx],bh
  41fa9e:	sub    cl,dh
  41faa0:	add    BYTE PTR [eax],al
  41faa2:	popf   
  41faa3:	pop    eax
  41faa4:	test   BYTE PTR ds:0x8900599c,ch
  41faaa:	sbb    dl,BYTE PTR [esi]
  41faac:	add    DWORD PTR [eax],eax
  41faae:	popf   
  41faaf:	add    al,0x3c
  41fab1:	jb     0x41fa53
  41fab3:	add    al,0x43
  41fab5:	jae    0x41fa4b
  41fab7:	in     al,0x46
  41fab9:	out    0xba,eax
  41fabb:	mov    WORD PTR [esi-0x4],cs
  41fabe:	inc    esi
  41fabf:	add    edi,DWORD PTR [edx+0x7c]
  41fac2:	(bad)  
  41fac3:	push   ds
  41fac4:	jmp    0x41fac6
  41fac6:	add    bl,dh
  41fac8:	mov    esi,0x7f15ffca
  41facd:	gs cld 
  41facf:	sbb    ecx,DWORD PTR [eax-0x1a]
  41fad2:	or     al,0xdc
  41fad4:	into   
  41fad5:	jecxz  0x41fae1
  41fad7:	push   ebp
  41fad8:	cli    
  41fad9:	cli    
  41fada:	repz add BYTE PTR [edi-0x3985003e],bh
  41fae1:	or     al,BYTE PTR [eax]
  41fae3:	cdq    
  41fae4:	aam    0x46
  41fae6:	pop    ebx
  41fae7:	std    
  41fae8:	add    ah,bh
  41faea:	add    edx,DWORD PTR [eax-0x56d85d70]
  41faf0:	jnp    0x41fb6c
  41faf2:	mov    DWORD PTR [edx-0x7bfc18ff],ebx
  41faf8:	push   ebx
  41faf9:	in     eax,0x87
  41fafb:	rol    DWORD PTR [edx],1
  41fafd:	out    0x3,eax
  41faff:	es mov edi,0x4762d7ca
  41fb05:	xchg   esp,eax
  41fb06:	sti    
  41fb07:	test   eax,0x8f50ead0
  41fb0c:	(bad)  
  41fb0e:	ret    
  41fb0f:	call   0xe699:0x1e01267e
  41fb16:	add    ebx,DWORD PTR [ebp+0x927aa50]
  41fb1c:	sti    
  41fb1d:	jb     0x41fb3b
  41fb1f:	mov    dl,0x66
  41fb21:	or     cl,BYTE PTR [eax+0xe64772]
  41fb27:	push   cs
  41fb28:	inc    edx
  41fb29:	adc    BYTE PTR [ebp+0x0],al
  41fb2c:	xchg   ecx,eax
  41fb2d:	jge    0x41fba5
  41fb2f:	add    ebx,DWORD PTR [ebp-0x1d002dfe]
  41fb35:	jnp    0x41fb9c
  41fb37:	or     DWORD PTR [ebx+0x47],0xffffffff
  41fb3b:	call   0xe84d7d26
  41fb40:	sahf   
  41fb41:	jns    0x41fb10
  41fb43:	xchg   ecx,eax
  41fb44:	(bad)  
  41fb45:	mov    al,0xfc
  41fb47:	sahf   
  41fb48:	cdq    
  41fb49:	inc    ecx
  41fb4a:	jb     0x41facc
  41fb4c:	(bad)
  41fb50:	sahf   
  41fb51:	into   
  41fb52:	push   ebp
  41fb53:	rol    BYTE PTR [edx+0x23],0x78
  41fb57:	out    dx,al
  41fb58:	xchg   ebx,eax
  41fb59:	xchg   DWORD PTR [ecx],edi
  41fb5b:	stos   BYTE PTR es:[edi],al
  41fb5c:	jmp    0x41fb41
  41fb5e:	mov    bh,ah
  41fb60:	(bad)  
  41fb61:	jbe    0x41fb65
  41fb63:	jmp    0x5cd7706
  41fb68:	ins    DWORD PTR es:[edi],dx
  41fb69:	dec    eax
  41fb6a:	cld    
  41fb6b:	jmp    0x5cd779f
  41fb70:	add    DWORD PTR [edi-0x4],0xcd7a0fe9
  41fb77:	ds push cs
  41fb79:	(bad)  
  41fb7a:	cmp    BYTE PTR [edx],ch
  41fb7c:	in     al,dx
  41fb7d:	sbb    DWORD PTR [ebx-0x1957da3],ecx
  41fb83:	call   0x6dccb326
  41fb88:	and    dh,0xfe
  41fb8b:	call   0xd129b32e
  41fb90:	add    BYTE PTR [ecx],dh
  41fb92:	dec    eax
  41fb93:	cld    
  41fb94:	jb     0x41fb84
  41fb96:	or     dh,cl
  41fb98:	jne    0x41fb28
  41fb9a:	jnp    0x41fb79
  41fb9c:	(bad)  
  41fb9d:	aad    0x5d
  41fb9f:	popa   
  41fba0:	cmc    
  41fba1:	jmp    0xfc48:0x1419e746
  41fba8:	sbb    dh,BYTE PTR [esi+0x450d434f]
  41fbae:	add    al,0xd
  41fbb0:	inc    BYTE PTR gs:[edi-0x4]
  41fbb4:	add    BYTE PTR [ebx-0x8],bl
  41fbb7:	pop    ebx
  41fbb8:	and    al,0x88
  41fbba:	inc    ebp
  41fbbb:	xchg   ecx,eax
  41fbbc:	ror    BYTE PTR [esi-0x3f],0xb
  41fbc0:	test   ah,ch
  41fbc2:	mov    ah,0xfb
  41fbc4:	(bad)  
  41fbc5:	sti    
  41fbc6:	sub    ah,BYTE PTR [eax]
  41fbc8:	or     al,0xaf
  41fbca:	adc    eax,0xb61ab7e5
  41fbcf:	sti    
  41fbd0:	xor    ecx,DWORD PTR [edi-0x72]
  41fbd3:	in     al,0xdb
  41fbd5:	sub    dh,BYTE PTR [esi-0x47f71605]
  41fbdb:	sti    
  41fbdc:	(bad)  
  41fbdd:	jns    0x41fc09
  41fbdf:	and    BYTE PTR [eax+0x1c],dl
  41fbe2:	pop    eax
  41fbe3:	mov    ah,0x0
  41fbe5:	add    al,0xc9
  41fbe7:	xor    eax,ebp
  41fbe9:	out    0x41,al
  41fbeb:	cld    
  41fbec:	mov    WORD PTR [eax+0x1a],?
  41fbef:	add    BYTE PTR [ecx],al
  41fbf1:	les    eax,FWORD PTR [ecx]
  41fbf3:	push   eax
  41fbf4:	inc    DWORD PTR [eax]
  41fbf6:	mov    dl,0xc9
  41fbf8:	cmp    DWORD PTR [eax+0x38fc41e6],esp
  41fbfe:	sub    BYTE PTR [esi],bl
  41fc00:	dec    esp
  41fc01:	je     0x41fbc5
  41fc03:	mov    ah,0x70
  41fc05:	and    al,0xe8
  41fc07:	mov    ah,0xd3
  41fc09:	cmp    eax,ebp
  41fc0b:	sbb    eax,0xb4b27448
  41fc10:	jo     0x41fc36
  41fc12:	cmp    al,0xb4
  41fc14:	ror    DWORD PTR [ebp-0x17efe2c0],cl
  41fc1a:	mov    edi,0xf9fffb37
  41fc1f:	cmp    ah,BYTE PTR [eax]
  41fc21:	sbb    BYTE PTR [esp+esi*4],dl
  41fc24:	ror    BYTE PTR [ebp+0xa81e00],cl
  41fc2a:	je     0x41fc2d
  41fc2c:	call   0x3ef99dd
  41fc31:	add    BYTE PTR [eax],ch
  41fc33:	pop    ds
  41fc34:	sub    BYTE PTR [eax+0x45],dl
  41fc37:	pop    ds
  41fc38:	xchg   esi,eax
  41fc39:	dec    DWORD PTR [edx-0x1c]
  41fc3c:	lods   eax,DWORD PTR ds:[esi]
  41fc3d:	pop    eax
  41fc3e:	push   ss
  41fc3f:	ss scas eax,DWORD PTR es:[edi]
  41fc41:	rcl    al,0xe0
  41fc44:	pop    esp
  41fc45:	cmp    BYTE PTR [ecx],0xa3
  41fc48:	sub    ebx,0xe7b5087d
  41fc4e:	ret    0x4aa0
  41fc51:	cld    
  41fc52:	es div bh
  41fc55:	sbb    ebp,0x46
  41fc58:	int3   
  41fc59:	mov    al,BYTE PTR [eax]
  41fc5b:	popa   
  41fc5c:	aas    
  41fc5d:	cld    
  41fc5e:	dec    edi
  41fc5f:	ja     0x41fc94
  41fc61:	jg     0x41fca6
  41fc63:	shl    DWORD PTR [ebx],0xb0
  41fc66:	imul   ebx,DWORD PTR [ebp+0x55124d84],0x19ffc177
  41fc70:	sbb    ecx,ecx
  41fc72:	pusha  
  41fc73:	push   ds
  41fc74:	aaa    
  41fc75:	and    al,0x14
  41fc77:	popf   
  41fc78:	xchg   DWORD PTR [eax+eax*4+0x23ff49],ebp
  41fc7f:	dec    ecx
  41fc80:	pop    esi
  41fc81:	dec    ebp
  41fc82:	jae    0x41fc05
  41fc84:	sti    
  41fc85:	pop    ebx
  41fc86:	dec    edx
  41fc87:	neg    BYTE PTR [ebx]
  41fc89:	dec    esi
  41fc8a:	sbb    ch,0x6d
  41fc8d:	mov    eax,0x203729fc
  41fc92:	call   0xfc8d1f48
  41fc97:	and    cl,BYTE PTR es:[eax-0x29bcee28]
  41fc9e:	(bad)  
  41fc9f:	out    dx,eax
  41fca0:	add    DWORD PTR [edx+ecx*8],esp
  41fca3:	jnp    0x41fcfa
  41fca5:	test   BYTE PTR [edi+0x190d02e9],bh
  41fcab:	sahf   
  41fcac:	push   cs
  41fcad:	mov    eax,ecx
  41fcaf:	(bad)  
  41fcb0:	push   esi
  41fcb2:	nop
  41fcb3:	call   0x2996:0x7d07d502
  41fcba:	add    al,0xad
  41fcbc:	into   
  41fcbd:	out    dx,eax
  41fcbe:	js     0x41fcc0
  41fcc0:	xlat   BYTE PTR ds:[ebx]
  41fcc1:	out    0xf9,al
  41fcc3:	or     BYTE PTR [edx],0x3
  41fcc6:	out    0x3,eax
  41fcc8:	and    al,0xb6
  41fcca:	add    bh,BYTE PTR [ebx-0x55]
  41fccd:	xchg   edx,eax
  41fcce:	out    0x3,al
  41fcd0:	popf   
  41fcd1:	scas   eax,DWORD PTR es:[edi]
  41fcd2:	xchg   ebp,eax
  41fcd3:	idiv   DWORD PTR [edx]
  41fcd5:	icebp  
  41fcd6:	es add al,0x10
  41fcd9:	into   
  41fcda:	retf   0x8f4c
  41fcdd:	and    bh,BYTE PTR [esi-0x29]
  41fce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce1:	inc    ebx
  41fce2:	sti    
  41fce3:	jmp    0x41fd36
  41fce5:	inc    ebx
  41fce6:	repz repz icebp 
  41fce9:	int    0xf2
  41fceb:	dec    esp
  41fcec:	outs   dx,DWORD PTR ds:[esi]
  41fced:	cli    
  41fcee:	pop    ebp
  41fcef:	mul    DWORD PTR [edx+0x7803a996]
  41fcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcf6:	popa   
  41fcf7:	addr16 ja 0x41fd3a
  41fcfa:	push   es
  41fcfb:	add    al,0x6e
  41fcfd:	ja     0x41fd49
  41fcff:	xor    DWORD PTR [esi-0x62fc17ca],0xffffffaf
  41fd06:	sub    eax,0xc37782d7
  41fd0b:	sti    
  41fd0c:	test   eax,0x2f4ccacd
  41fd11:	sbb    dl,BYTE PTR [esi]
  41fd13:	xlat   BYTE PTR ds:[ebx]
  41fd14:	mov    esi,0x90239343
  41fd19:	int    0xe2
  41fd1b:	dec    esp
  41fd1c:	por    mm7,mm5
  41fd1f:	(bad)  
  41fd20:	scas   al,BYTE PTR es:[edi]
  41fd21:	inc    ebx
  41fd22:	(bad)  
  41fd23:	jnp    0x41fd25
  41fd25:	outs   dx,BYTE PTR ds:[esi]
  41fd26:	inc    esi
  41fd27:	jb     0x41fd06
  41fd29:	sub    eax,0x3d2d1246
  41fd2e:	ret    0x6fff
  41fd31:	pop    ebx
  41fd32:	pop    ss
  41fd33:	sub    DWORD PTR [ecx-0x161884a7],0xffffff9e
  41fd3a:	add    dh,dh
  41fd3c:	sub    al,0x75
  41fd3e:	inc    ebx
  41fd3f:	or     eax,0xfc437065
  41fd44:	jmp    0x654e276c
  41fd49:	push   0x1de9fc43
  41fd4e:	enter  0xe90b,0x21
  41fd52:	jg     0x41fd1f
  41fd54:	jmp    0x3429fff7
  41fd59:	xlat   BYTE PTR ds:[ebx]
  41fd5a:	inc    ebp
  41fd5b:	cld    
  41fd5c:	ins    DWORD PTR es:[edi],dx
  41fd5d:	pop    esi
  41fd5e:	test   BYTE PTR [ebx+0x29e3e],0x76
  41fd65:	lea    eax,[ebp+0x12]
  41fd68:	adc    eax,0x6c0002ee
  41fd6d:	pop    esi
  41fd6e:	test   BYTE PTR [ebx+0x29e8e],0xb9
  41fd75:	jbe    0x41fd87
  41fd77:	enter  0x614f,0x7c
  41fd7b:	inc    edx
  41fd7c:	stc    
  41fd7d:	and    eax,DWORD PTR [ebx+0x4330650c]
  41fd83:	cld    
  41fd84:	jmp    0xf2caab79
  41fd89:	add    ah,dl
  41fd8b:	inc    edx
  41fd8c:	dec    esp
  41fd8d:	adc    DWORD PTR [edi+0x251efd3b],edx
  41fd93:	push   ebx
  41fd94:	xchg   BYTE PTR [edx+eax*8+0x6095f585],bl
  41fd9b:	jmp    0x41fdcf
  41fd9d:	add    BYTE PTR [eax-0x5e],cl
  41fda0:	aas    
  41fda1:	add    BYTE PTR [edi],cl
  41fda3:	push   ecx
  41fda4:	or     BYTE PTR [ebp-0x6e5f7],cl
  41fdaa:	xor    DWORD PTR [ebp-0x5],0x37
  41fdae:	cmc    
  41fdaf:	les    ecx,FWORD PTR [ebx+esi*4]
  41fdb2:	mov    ah,0x6
  41fdb4:	ret    
  41fdb5:	test   DWORD PTR [eax+0x47fffbcb],edi
  41fdbb:	push   es
  41fdbc:	std    
  41fdbd:	jmp    DWORD PTR [ebx+0x34]
  41fdc0:	dec    eax
  41fdc1:	adc    DWORD PTR [esi+eax*1-0x7f],esi
  41fdc5:	sar    BYTE PTR [eax+0x46],0x87
  41fdc9:	test   eax,esi
  41fdcb:	retf   
  41fdcc:	sti    
  41fdcd:	(bad)  
  41fdce:	aas    
  41fdcf:	add    ecx,DWORD PTR [esp+ebp*4+0x77]
  41fdd3:	push   es
  41fdd4:	jno    0x41fe08
  41fdd6:	cmp    al,BYTE PTR [eax+eiz*1]
  41fdd9:	lods   al,BYTE PTR ds:[esi]
  41fdda:	mov    DWORD PTR [esi],0x18fa7410
  41fde0:	mov    cl,0xe4
  41fde2:	or     ebp,0x12898dfb
  41fde8:	stc    
  41fde9:	inc    DWORD PTR [ebx+0x37fb76]
  41fdef:	ins    DWORD PTR es:[edi],dx
  41fdf0:	xchg   ebx,eax
  41fdf1:	loopne 0x41fdf0
  41fdf3:	inc    ebx
  41fdf4:	int    0xc3
  41fdf6:	test   DWORD PTR [eax-0x39000435],edi
  41fdfc:	add    eax,0x3363fffd
  41fe01:	dec    esp
  41fe02:	adc    esp,esi
  41fe04:	add    eax,0x37f9c081
  41fe09:	add    BYTE PTR fs:[esi+eax*1+0x0],al
  41fe0e:	push   0xffffffb4
  41fe10:	int3   
  41fe11:	jno    0x41fe37
  41fe13:	sbb    DWORD PTR [ecx],0xfffffffb
  41fe16:	adc    eax,0x3ff5e79d
  41fe1b:	popf   
  41fe1c:	adc    bh,cl
  41fe1e:	das    
  41fe1f:	mov    bl,BYTE PTR [esi-0x60]
  41fe22:	adc    ebp,ebx
  41fe24:	sub    ebp,DWORD PTR [ecx+0x146e265d]
  41fe2a:	pop    ecx
  41fe2b:	fs in  eax,dx
  41fe2d:	pop    ss
  41fe2e:	add    al,dl
  41fe30:	mov    ah,0x54
  41fe32:	out    0x1e,eax
  41fe34:	jb     0x41fe7c
  41fe36:	cld    
  41fe37:	and    DWORD PTR [ebx-0x31],ebp
  41fe3a:	add    al,0xf0
  41fe3c:	push   eax
  41fe3d:	pop    ds
  41fe3e:	push   eax
  41fe3f:	stc    
  41fe40:	jmp    0x41fe45
  41fe42:	push   ecx
  41fe43:	jmp    0x41fdf9
  41fe45:	iret   
  41fe46:	adc    edx,edx
  41fe48:	and    DWORD PTR [ecx+0x72],ecx
  41fe4b:	(bad)  
  41fe4c:	lds    eax,FWORD PTR [ebx]
  41fe4e:	std    
  41fe4f:	mov    al,0x33
  41fe51:	dec    ecx
  41fe52:	adc    al,BYTE PTR [eax]
  41fe54:	leave  
  41fe55:	iret   
  41fe56:	vpshuflw ymm3,YMMWORD PTR [eax-0x6cd9f031],0x49
  41fe5f:	jb     0x41fdfa
  41fe61:	mov    bh,cl
  41fe63:	pop    es
  41fe64:	add    dl,BYTE PTR [esi-0x50]
  41fe67:	stos   DWORD PTR es:[edi],eax
  41fe68:	pop    esi
  41fe69:	sub    edi,DWORD PTR [ebp-0x29]
  41fe6c:	sbb    BYTE PTR [eax-0x3bdfac35],dh
  41fe72:	enter  0x184f,0xd9
  41fe76:	int3   
  41fe77:	dec    ebx
  41fe78:	push   ds
  41fe79:	sbb    DWORD PTR [esp+esi*2],eax
  41fe7c:	pop    edx
  41fe7d:	lods   al,BYTE PTR ds:[esi]
  41fe7e:	(bad)  
  41fe7f:	setge  BYTE PTR [edi-0x3d]
  41fe83:	mov    ebp,0xffc58381
  41fe88:	push   eax
  41fe89:	clc    
  41fe8a:	out    dx,eax
  41fe8b:	jmp    0x41fe1c
  41fe8d:	imul   eax,DWORD PTR [eax],0xfffffff6
  41fe90:	mov    al,ds:0x5d8bbb02
  41fe95:	add    ch,al
  41fe97:	sar    BYTE PTR [edi-0x2d2e5956],1
  41fe9d:	add    cl,BYTE PTR [esi]
  41fe9f:	lock pop edx
  41fea1:	adc    eax,0x431e03a7
  41fea6:	jb     0x41fea4
  41fea8:	and    eax,0xd8a0fe3b
  41fead:	aas    
  41feae:	in     eax,dx
  41feaf:	pop    ebp
  41feb0:	pushf  
  41feb1:	hlt    
  41feb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feb3:	and    BYTE PTR [edx],0xb7
  41feb6:	in     eax,0x84
  41feb8:	add    BYTE PTR [edi+0x52c58ed6],ah
  41febe:	add    esi,DWORD PTR ds:0xd832af49
  41fec4:	ret    
  41fec5:	inc    edx
  41fec6:	loope  0x41fee4
  41fec8:	jge    0x41ff27
  41feca:	fcom   QWORD PTR [ebx]
  41fecc:	inc    esi
  41fecd:	mov    ds:0x2b5a3f02,al
  41fed2:	inc    eax
  41fed3:	out    0xdb,al
  41fed5:	cli    
  41fed6:	jb     0x41ff01
  41fed8:	add    al,0x73
  41feda:	aas    
  41fedb:	sti    
  41fedc:	adc    ebp,DWORD PTR [ebx-0x217b193e]
  41fee2:	push   cs
  41fee3:	sbb    eax,0xe704dc5c
  41fee8:	add    esp,DWORD PTR [ecx+ecx*2]
  41feeb:	test   eax,0x692f25af
  41fef0:	pop    eax
  41fef1:	ret    0xbdd3
  41fef4:	mov    al,dh
  41fef6:	add    edi,esp
  41fef8:	add    esi,DWORD PTR [eax-0x54]
  41fefb:	out    0xb1,al
  41fefd:	rcl    DWORD PTR ds:0x28af213,1
  41ff03:	push   0x40
  41ff05:	xchg   esi,eax
  41ff06:	lea    esp,[edi+edi*8-0x9007696]
  41ff0d:	push   esi
  41ff0e:	add    bh,0x2f
  41ff11:	push   esp
  41ff12:	mov    al,BYTE PTR [edx-0xf]
  41ff15:	daa    
  41ff16:	lds    edi,FWORD PTR [ebx+0x6c]
  41ff19:	pop    ds
  41ff1a:	mov    edi,0x9e00e8ff
  41ff1f:	shl    bh,cl
  41ff21:	ss call 0x9ed5fb66
  41ff27:	lods   al,BYTE PTR ds:[esi]
  41ff28:	daa    
  41ff29:	ins    BYTE PTR es:[edi],dx
  41ff2a:	cmp    dl,BYTE PTR [edi+0x4f]
  41ff2d:	add    ecx,eax
  41ff2f:	mov    eax,ds:0xe748e8ff
  41ff34:	mov    dh,BYTE PTR [ecx+esi*4]
  41ff37:	mov    WORD PTR [ebp+0x29e79],es
  41ff3d:	cmp    cl,dh
  41ff3f:	xchg   ecx,eax
  41ff40:	pop    ds
  41ff41:	jmp    0xc73e7ce4
  41ff46:	sahf   
  41ff47:	add    ch,BYTE PTR [edx-0x18]
  41ff4a:	mov    ecx,0x385be746
  41ff4f:	aas    
  41ff50:	cld    
  41ff51:	fimul  WORD PTR ds:0xa1e86957
  41ff57:	inc    esi
  41ff58:	mov    esi,0x80270e8a
  41ff5d:	or     ebx,DWORD PTR [ecx+0x5e560d02]
  41ff63:	or     al,cl
  41ff65:	jo     0x41ff83
  41ff67:	and    eax,0xac9ee8fe
  41ff6c:	(bad)  
  41ff6d:	popa   
  41ff6e:	pop    ebp
  41ff6f:	daa    
  41ff70:	ins    BYTE PTR es:[edi],dx
  41ff71:	or     esp,DWORD PTR [ecx-0x4961f2fe]
  41ff77:	test   eax,0x805d71fe
  41ff7c:	loopne 0x41ff77
  41ff7e:	jbe    0x41ff5f
  41ff80:	popa   
  41ff81:	jmp    0xb54f9d86
  41ff86:	add    BYTE PTR [esi+edi*1-0x41],dh
  41ff8a:	pop    edi
  41ff8b:	sub    eax,0xc401e681
  41ff90:	add    al,BYTE PTR [edi-0x4103f03a]
  41ff96:	add    al,0xb4
  41ff98:	outs   dx,DWORD PTR ds:[esi]
  41ff99:	xchg   esp,ebp
  41ff9b:	push   ebp
  41ff9c:	jae    0x41ff59
  41ff9e:	out    dx,al
  41ff9f:	test   DWORD PTR [edx],eax
  41ffa1:	add    BYTE PTR [edi+0x1e],dl
  41ffa4:	add    cl,BYTE PTR [edi-0x1]
  41ffa7:	popa   
  41ffa8:	push   cs
  41ffa9:	push   ss
  41ffaa:	inc    eax
  41ffab:	test   BYTE PTR [edi+0x43f90cc0],al
  41ffb1:	dec    eax
  41ffb2:	push   eax
  41ffb3:	push   ds
  41ffb4:	push   es
  41ffb5:	test   DWORD PTR [ebx],edi
  41ffb7:	fstp   TBYTE PTR [ebx-0x230fbb9]
  41ffbd:	in     al,0x25
  41ffbf:	jne    0x41ff86
  41ffc1:	sti    
  41ffc2:	mov    eax,edx
  41ffc4:	ret    0xfffc
  41ffc7:	xor    al,0xb9
  41ffc9:	cmp    DWORD PTR [eax],esi
  41ffcb:	push   edx
  41ffcc:	inc    edx
  41ffcd:	cld    
  41ffce:	mov    BYTE PTR [edi-0x36ef99b6],al
  41ffd4:	mov    esp,0x23400c4
  41ffd9:	push   eax
  41ffda:	lea    eax,[edi+0x4fffc86]
  41ffe0:	jb     0x41ffdd
  41ffe2:	xlat   BYTE PTR ds:[ebx]
  41ffe3:	pushf  
  41ffe4:	add    ch,bh
  41ffe6:	inc    DWORD PTR [eax]
  41ffe8:	hlt    
  41ffe9:	mov    edx,0x204d882
  41ffee:	add    BYTE PTR [eax+0x79],dl
  41fff1:	or     DWORD PTR [eax+eax*1-0xaffe0c],0x18c081a3
  41fffc:	jnp    0x41ff8a
  41fffe:	call   0x6d9d06
  420003:	mov    esp,DWORD PTR [ebx]
  420005:	enter  0x0,0x9d
  420009:	fwait
  42000a:	ja     0x41ff91
  42000c:	fldcw  WORD PTR [edx]
  42000e:	add    BYTE PTR [eax],al
  420010:	dec    ebp
  420011:	mov    al,ds:0x2abde748
  420016:	add    BYTE PTR [eax],al
  420018:	mov    ds:0x9d05fbdd,al
  42001d:	sub    esi,DWORD PTR [edi-0x7b]
  420020:	popf   
  420021:	sub    eax,0xdeed0000
  420026:	jge    0x42001f
  420028:	sahf   
  420029:	sub    eax,DWORD PTR [eax]
  42002b:	push   eax
  42002c:	test   DWORD PTR [esi+edi*8-0x1],ecx
  420030:	popf   
  420031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420032:	jge    0x420047
  420034:	mov    ds:0x1650002b,eax
  420039:	push   0x2b9f8658
  42003e:	add    BYTE PTR [ebp+0x5452],bh
  420044:	mov    bh,0x2a
  420046:	jns    0x42000c
  420048:	xor    eax,0xffe3a1
  42004d:	cmp    ch,BYTE PTR [ecx*4-0xfb4a341]
  420054:	xchg   al,ah
  420056:	outs   dx,DWORD PTR ds:[esi]
  420057:	(bad)  
  420058:	(bad)  
  420059:	pop    ss
  42005a:	ins    BYTE PTR es:[edi],dx
  42005b:	pop    eax
  42005c:	xchg   DWORD PTR [ebx+ebp*1+0x0],edi
  420060:	or     eax,0x42f96b4a
  420065:	or     esp,ebp
  420067:	jp     0x41ffe9
  420069:	sti    
  42006a:	sub    DWORD PTR [eax],eax
  42006c:	add    BYTE PTR [esi],ah
  42006e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42006f:	in     al,0x7
  420071:	popf   
  420072:	sub    edi,DWORD PTR [ebx-0x80]
  420075:	imul   DWORD PTR [ecx]
  420077:	add    BYTE PTR [eax],al
  420079:	push   ss
  42007a:	add    ch,BYTE PTR [edx]
  42007c:	cmp    al,0xdd
  42007e:	(bad)  
  42007f:	jno    0x420058
  420081:	jle    0x42008d
  420083:	mov    ebp,0xe2c717ae
  420088:	mov    bl,0x34
  42008a:	(bad)  
  42008b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008c:	js     0x4200f3
  42008e:	into   
  42008f:	jno    0x4200cf
  420091:	mov    edx,0xa94536d6
  420096:	mov    BYTE PTR [ebx-0x2900ea39],ah
  42009c:	in     eax,dx
  42009d:	fiadd  DWORD PTR [edx]
  42009f:	jo     0x420023
  4200a1:	pop    esi
  4200a2:	add    esp,edi
  4200a4:	add    esi,edi
  4200a6:	adc    bl,BYTE PTR [eax+eax*4+0x2]
  4200aa:	add    esp,edi
  4200ac:	add    ecx,ebp
  4200ae:	lea    ebp,[ecx+0x3b]
  4200b1:	add    BYTE PTR [edx+0x3c],dh
  4200b4:	out    0xb3,al
  4200b6:	imul   edx,DWORD PTR [esi+edi*2+0x1],0x76e63c62
  4200be:	pop    ds
  4200bf:	xchg   ebx,eax
  4200c0:	out    0x3,al
  4200c2:	popf   
  4200c3:	shl    BYTE PTR [ebx-0x7f],cl
  4200c6:	jb     0x4200cb
  4200c8:	out    0x3,eax
  4200ca:	in     eax,dx
  4200cb:	cmp    ebx,DWORD PTR [ebp+0x4f1b5e81]
  4200d1:	add    BYTE PTR [edx],dh
  4200d3:	cmp    al,0xe6
  4200d5:	jbe    0x4200f6
  4200d7:	xchg   ecx,eax
  4200d8:	out    0x3,eax
  4200da:	popf   
  4200db:	shl    BYTE PTR [ebx-0x6f],cl
  4200de:	test   BYTE PTR [ecx],0xe7
  4200e1:	add    eax,DWORD PTR [edi+0x93c6a02]
  4200e7:	sub    edi,edi
  4200e9:	push   ecx
  4200ea:	add    BYTE PTR [ecx+esi*2],bh
  4200ed:	jg     0x420137
  4200ef:	add    ah,bh
  4200f1:	add    ebx,DWORD PTR [edx]
  4200f3:	cmp    bh,0x84
  4200f6:	pushf  
  4200f7:	add    al,BYTE PTR [eax]
  4200f9:	add    esp,ecx
  4200fb:	mov    BYTE PTR [edx+0x29e8f],al
  420101:	mov    ecx,0xeae3824b
  420106:	sahf   
  420107:	add    dl,BYTE PTR [eax+0x4e]
  42010a:	jo     0x42008e
  42010c:	ret    
  42010d:	cmc    
  42010e:	(bad)  
  42010f:	(bad)  
  420110:	(bad)  
  420111:	call   0x7bc488b4
  420116:	add    BYTE PTR [esi+0x2b990002],bl
  42011c:	jb     0x420115
  42011e:	jmp    0x431d:0xe96a029e
  420125:	cld    
  420126:	add    DWORD PTR [ebp+0x40efd30],esp
  42012c:	or     ebp,0x87029ee8
  420132:	push   0x71
  420134:	add    eax,0x344e900
  420139:	mov    esp,DWORD PTR [ebx+eiz*4+0x3c]
  42013d:	cld    
  42013e:	jmp    0xe9c28951
  420143:	push   eax
  420144:	cmp    edi,esp
  420146:	cmp    eax,esp
  420148:	push   esi
  420149:	and    BYTE PTR [ebp-0x17fc5cb6],0x9e
  420150:	add    cl,BYTE PTR [ebx-0x3c3939c]
  420156:	jmp    0xd5f28949
  42015b:	and    BYTE PTR [ebx],bh
  42015d:	cld    
  42015e:	adc    esp,DWORD PTR [ecx+0x769ec781]
  420164:	cs out dx,al
  420166:	xchg   edi,eax
  420167:	popa   
  420168:	mov    al,BYTE PTR [edx+0x29f83]
  42016e:	add    bl,al
  420170:	test   DWORD PTR fs:[ebx-0x3c930],eax
  420177:	xchg   ecx,eax
  420178:	rol    BYTE PTR [eax],0x0
  42017b:	add    BYTE PTR [ecx+0x7081e8b9],cl
  420181:	aaa    
  420182:	std    
  420183:	inc    esp
  420185:	and    DWORD PTR [ecx-0x4398d08],0xfcaeb900
  42018f:	inc    esp
  420191:	outs   dx,BYTE PTR ds:[esi]
  420192:	mov    DWORD PTR [ebp-0x43aa4],eax
  420198:	pop    esp
  420199:	pushf  
  42019a:	sbb    al,BYTE PTR [eax]
  42019c:	mov    ah,0x81
  42019e:	jns    0x4201ac
  4201a0:	test   BYTE PTR [edx+0xd],cl
  4201a3:	mov    ecx,DWORD PTR [ecx+0x32]
  4201a6:	xchg   DWORD PTR [ebp+0x7c],ecx
  4201a9:	mov    cl,0x81
  4201ab:	clc    
  4201ac:	xchg   edx,eax
  4201ad:	mov    esi,0x1e99e8fb
  4201b2:	cld    
  4201b3:	jmp    FWORD PTR [ebp+0x90004c3]
  4201b9:	mov    ebx,0xcd9883e8
  4201be:	jge    0x4201ac
  4201c0:	fmul   DWORD PTR [eax+eax*1]
  4201c3:	add    BYTE PTR [ebx+0x4424b893],cl
  4201c9:	(bad)  
  4201ca:	(bad)  
  4201cb:	call   FWORD PTR [edx+edx*4-0x3d]
  4201cf:	(bad)  
  4201d0:	arpl   WORD PTR [edx+0x62c2460],ax
  4201d6:	mov    DWORD PTR [eax+ebx*4+0x34000137],eax
  4201dd:	push   esi
  4201de:	mov    DWORD PTR [eax+eax*1-0x18],eax
  4201e2:	or     eax,ebp
  4201e4:	pop    ebx
  4201e5:	adc    al,BYTE PTR [esi]
  4201e7:	add    BYTE PTR [ebx-0x45f42163],cl
  4201ed:	repz sub al,BYTE PTR [eax]
  4201f0:	add    BYTE PTR [eax],ch
  4201f2:	call   0xdb4709de
  4201f7:	and    BYTE PTR [eax],al
  4201f9:	popf   
  4201fa:	adc    BYTE PTR [ebp+0x76d40e2],cl
  420200:	add    BYTE PTR [esi],ah
  420202:	jo     0x4201e8
  420204:	add    ebp,DWORD PTR [esi+0x71]
  420207:	(bad)  
  420208:	mov    ah,0x2f
  42020a:	sub    eax,DWORD PTR [eax]
  42020c:	add    BYTE PTR [ebp-0x4502d167],dh
  420212:	lods   al,BYTE PTR ds:[esi]
  420213:	cmp    edi,esp
  420215:	sub    DWORD PTR [ecx-0xb],ebp
  420218:	fmul   DWORD PTR [esi-0x64]
  42021b:	stos   BYTE PTR es:[edi],al
  42021c:	adc    ecx,DWORD PTR [ebx-0x65]
  42021f:	inc    ecx
  420220:	jae    0x4201e3
  420222:	dec    ebx
  420223:	aad    0x50
  420225:	xchg   edx,eax
  420226:	cs mov al,0x11
  420229:	(bad)  [ebx]
  42022b:	std    
  42022c:	rol    BYTE PTR [ebx],0x52
  42022f:	(bad)  
  420230:	or     ebp,DWORD PTR [ebp-0x160324bd]
  420236:	and    BYTE PTR [ebp-0x14516e09],al
  42023c:	xchg   DWORD PTR [ebp+eax*4+0x7d1fd08],eax
  420243:	sbb    BYTE PTR [ebx+0x3811a00],cl
  420249:	add    BYTE PTR [ebp-0x72edbf05],bl
  42024f:	xor    eax,eax
  420251:	jmp    DWORD PTR [edi]
  420253:	out    0xe7,eax
  420255:	pop    ds
  420256:	and    al,0xa0
  420258:	outs   dx,BYTE PTR ds:[esi]
  420259:	(bad)  
  42025a:	sub    ch,BYTE PTR [ebx]
  42025c:	test   ebx,eax
  42025e:	xchg   ecx,eax
  42025f:	mov    ebx,0x2765e03
  420264:	test   eax,0xa6f49d0f
  420269:	adc    DWORD PTR cs:[ebp-0x2a6117de],ecx
  420270:	xor    al,0x91
  420272:	xor    DWORD PTR [edi+eiz*8+0x3],esi
  420276:	popf   
  420277:	sub    al,BYTE PTR [eax+esi*1+0x3b6938e8]
  42027e:	loope  0x42022d
  420280:	sbb    al,0xf7
  420282:	cmc    
  420283:	aam    0xb9
  420285:	lods   eax,DWORD PTR ds:[esi]
  420286:	scas   al,BYTE PTR es:[edi]
  420287:	shl    BYTE PTR [esi+0x6de4e42],1
  42028d:	xlat   BYTE PTR ds:[ebx]
  42028e:	ins    DWORD PTR es:[edi],dx
  42028f:	cmp    ebx,esi
  420291:	mov    bl,0x8c
  420293:	ret    0xfee6
  420296:	fnsave [edi-0xd696f0c]
  42029c:	out    dx,al
  42029d:	fsub   QWORD PTR [ecx-0x6d791a53]
  4202a3:	shld   esp,ebp,0x1a
  4202a7:	sbb    dl,BYTE PTR [ecx-0x5077fff5]
  4202ad:	retf   0x1617
  4202b0:	and    BYTE PTR [esp+eax*1],0x9d
  4202b4:	add    dl,BYTE PTR [edi-0x2b0d70be]
  4202ba:	ret    
  4202bb:	push   0xffffff8d
  4202bd:	stos   BYTE PTR es:[edi],al
  4202be:	out    0x82,eax
  4202c0:	mov    DWORD PTR [ebp+0x51],esp
  4202c3:	pop    ebx
  4202c4:	cmp    dh,ah
  4202c6:	test   BYTE PTR [esi+0x7],bl
  4202c9:	xchg   edi,eax
  4202ca:	add    ebp,ebx
  4202cc:	fld    TBYTE PTR [eax-0x590b62f0]
  4202d2:	sub    eax,0xe8328c31
  4202d7:	sahf   
  4202d8:	rcl    DWORD PTR [edi+ecx*4],cl
  4202db:	cli    
  4202dc:	push   esp
  4202dd:	jmp    edi
  4202df:	sahf   
  4202e0:	add    ch,al
  4202e2:	das    
  4202e3:	retf   0xfc35
  4202e6:	push   0xffffffd1
  4202e8:	ss jae 0x4202ba
  4202eb:	adc    DWORD PTR [ebx+0x50],ebx
  4202ee:	cmp    dh,BYTE PTR [ebx]
  4202f0:	adc    al,0x56
  4202f2:	cmp    DWORD PTR [ebx+esi*4+0x23],ebx
  4202f6:	leave  
  4202f7:	leave  
  4202f8:	sar    ah,cl
  4202fa:	aam    0x2e
  4202fc:	adc    al,BYTE PTR [eax-0x17]
  4202ff:	loope  0x420343
  420301:	jge    0x4202da
  420303:	sub    ecx,DWORD PTR [eax+esi*1]
  420306:	and    esi,esi
  420308:	ss jae 0x4202f1
  42030b:	and    DWORD PTR [eax],esi
  42030d:	adc    edx,esp
  42030f:	add    BYTE PTR [edi-0x6166e976],dl
  420315:	fcomp  DWORD PTR [eax+0x2b]
  420318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420319:	add    dh,BYTE PTR [edx]
  42031b:	sub    DWORD PTR [eax+0x2e],edi
  42031e:	push   edx
  42031f:	bound  ebp,QWORD PTR [ebp-0x48]
  420322:	jmp    0x420309
  420324:	mov    al,ds:0x74ba0002
  420329:	into   
  42032a:	addr16 call 0x644205cf
  420330:	sbb    bh,BYTE PTR [ebx]
  420332:	cli    
  420333:	push   cs
  420334:	fadd   st(7),st
  420336:	cld    
  420337:	jl     0x4202df
  420339:	xor    eax,0xc2902512
  42033e:	jmp    DWORD PTR [ecx-0x3f]
  420341:	test   al,bl
  420343:	outs   dx,DWORD PTR ds:[esi]
  420344:	dec    ecx
  420345:	repnz cld 
  420347:	sbb    dl,BYTE PTR [edi-0x55a4aca]
  42034d:	idiv   bh
  42034f:	popa   
  420350:	sub    al,0x77
  420352:	imul   ebp,DWORD PTR [ecx],0xffffffa1
  420355:	mov    eax,DWORD PTR [edx-0x407a800]
  42035b:	inc    DWORD PTR [ebp+eax*4-0x4e91741]
  420362:	cli    
  420363:	inc    DWORD PTR [ecx-0x78ed8f3d]
  420369:	leave  
  42036a:	or     BYTE PTR [edi+0x77],al
  42036d:	rol    DWORD PTR [edx+esi*2+0x4d],0x2e
  420372:	mov    esp,0x55ca005f
  420377:	(bad)
  42037a:	add    esp,DWORD PTR [edi-0x1]
  42037d:	clc    
  42037e:	push   0x673c8787
  420383:	cmp    al,0x0
  420385:	pop    ds
  420386:	call   0x84aa8edc
  42038b:	call   0x44c784
  420390:	push   esi
  420391:	add    ebp,DWORD PTR [ebx-0x78]
  420394:	add    esp,eax
  420396:	add    cl,BYTE PTR [edi-0x18]
  420399:	idiv   DWORD PTR [eax+0x106bfffa]
  42039f:	pusha  
  4203a0:	adc    esp,esi
  4203a2:	add    al,BYTE PTR [ebp-0xb807fbd]
  4203a8:	push   DWORD PTR [ecx]
  4203aa:	or     esi,DWORD PTR [edx]
  4203ac:	shr    BYTE PTR [ebp+0x74fffe4a],0x2f
  4203b3:	repnz push esi
  4203b5:	fnstcw WORD PTR [eax+eax*4]
  4203b8:	push   eax
  4203b9:	or     al,0x11
  4203bb:	xchg   ebp,eax
  4203bc:	mov    BYTE PTR [eax],al
  4203be:	jmp    0x4589:0xf66ac28f
  4203c5:	rcl    BYTE PTR [ecx-0x5],0x15
  4203c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ca:	sbb    al,BYTE PTR [eax+0x0]
  4203cd:	int    0x41
  4203cf:	add    al,0x3b
  4203d1:	popf   
  4203d2:	gs mov bh,0xd4
  4203d5:	(bad)  
  4203d6:	sub    cl,BYTE PTR [edi+0x1c190042]
  4203dc:	lods   al,BYTE PTR ds:[esi]
  4203dd:	adc    DWORD PTR [esp+esi*4],eax
  4203e0:	xchg   edi,esp
  4203e2:	scas   eax,DWORD PTR es:[edi]
  4203e3:	imul   edi,DWORD PTR ds:0x87df28fc,0x3116b4f
  4203ed:	mov    ebp,0xffc0c765
  4203f2:	imul   ecx,DWORD PTR [esi+edx*1+0x3eb8fb8],0xffffff87
  4203fa:	pop    esi
  4203fb:	das    
  4203fc:	stc    
  4203fd:	lds    esi,FWORD PTR [ecx-0x3a]
  420400:	test   eax,0x87e711fe
  420405:	dec    edi
  420406:	inc    ebp
  420407:	dec    ecx
  420408:	call   0xcc15b984
  42040d:	ror    ebx,0xd4
  420410:	mov    es,WORD PTR [edx+0x19]
  420413:	jl     0x4203e7
  420415:	push   esp
  420416:	mov    edx,0x5d0ed82e
  42041b:	sub    ecx,DWORD PTR [ebx+0x46009140]
  420421:	jae    0x42043a
  420423:	inc    edx
  420424:	add    ecx,DWORD PTR [ebx+0x67d39fe0]
  42042a:	mov    edi,0x7597bbc9
  42042f:	ds ds std 
  420432:	sbb    BYTE PTR [esi-0x7c327c3a],0xe8
  420439:	mov    cs,WORD PTR [ebp+0x28]
  42043c:	shr    BYTE PTR [ecx+0x0],cl
  42043f:	mov    eax,ds:0x88fcd28c
  420444:	xor    edx,DWORD PTR [eax]
  420446:	inc    eax
  420447:	popf   
  420448:	mov    ds:0x25b3900,al
  42044d:	test   BYTE PTR [edi+0x3edd35e6],0xe8
  420454:	int3   
  420455:	cmp    al,0xaa
  420457:	pushf  
  420458:	ror    ch,cl
  42045a:	sbb    BYTE PTR ds:0x64042713,bl
  420460:	cmp    al,0xed
  420462:	xchg   edx,ebx
  420464:	xor    eax,0xc1233eb5
  420469:	(bad)  
  42046a:	or     ch,al
  42046c:	add    esp,edi
  42046e:	add    esi,DWORD PTR [ebx-0x75]
  420471:	sub    DWORD PTR [ebx+ebx*8],ebx
  420474:	mov    esi,0xef80391
  420479:	jg     0x420492
  42047b:	pop    ebp
  42047c:	add    dh,BYTE PTR [eax-0x38]
  42047f:	out    dx,al
  420480:	clc    
  420481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420482:	push   cs
  420483:	sbb    DWORD PTR [eax-0x7662fc19],esi
  420489:	stos   DWORD PTR es:[edi],eax
  42048a:	pop    ebx
  42048b:	mov    ds:0xa2a9e6c2,al
  420490:	shr    BYTE PTR [edi-0x4e],cl
  420493:	jle    0x420420
  420495:	fldpi  
  420497:	mov    ecx,0xb009c04c
  42049c:	scas   al,BYTE PTR es:[edi]
  42049d:	cmp    cl,BYTE PTR [ebp+ebx*2+0x563de6]
  4204a4:	adc    eax,0xebd402c9
  4204a9:	xor    esi,DWORD PTR [ebx-0x293fe4c9]
  4204af:	ds scas eax,DWORD PTR es:[edi]
  4204b1:	outs   dx,BYTE PTR ds:[esi]
  4204b2:	test   bl,0x82
  4204b5:	stc    
  4204b6:	sub    al,0xb7
  4204b8:	(bad)  
  4204b9:	shl    BYTE PTR [ebp+edx*8-0x2c393fd9],cl
  4204c0:	pop    ss
  4204c1:	mov    esi,0xae61d2f6
  4204c6:	(bad)  
  4204c7:	cld    
  4204c8:	xchg   DWORD PTR [eax+0x299ee9eb],eax
  4204ce:	add    DWORD PTR [edx],ebx
  4204d0:	loope  0x420508
  4204d2:	jb     0x4204a9
  4204d4:	push   ss
  4204d5:	ret    
  4204d6:	sbb    edi,DWORD PTR [edi]
  4204d8:	js     0x4204ea
  4204da:	inc    eax
  4204db:	hlt    
  4204dc:	pop    esi
  4204dd:	xor    al,0x37
  4204df:	cmp    bh,BYTE PTR [ebp+0x5]
  4204e2:	test   ah,dl
  4204e4:	lahf   
  4204e5:	add    al,BYTE PTR [eax]
  4204e7:	(bad)  
  4204e8:	jmp    0x6605:0xde626523
  4204ef:	test   al,0xb9
  4204f1:	add    cl,BYTE PTR [eax-0x49f8fed6]
  4204f7:	test   eax,0xbd4065a8
  4204fc:	daa    
  4204fd:	ret    
  4204fe:	xor    edx,DWORD PTR [ecx-0x64]
  420501:	scas   al,BYTE PTR es:[edi]
  420502:	add    eax,0x8037b96a
  420507:	test   eax,0x86c3a500
  42050c:	sub    dl,ch
  42050e:	sbb    ecx,DWORD PTR [ebx*4-0x2380c975]
  420515:	xchg   esi,eax
  420516:	xor    eax,edx
  420518:	lods   al,BYTE PTR ds:[esi]
  420519:	jne    0x42054f
  42051b:	or     eax,0xfc333d64
  420520:	jmp    0x414d7e40
  420525:	pusha  
  420526:	lds    ebp,FWORD PTR ss:[ebp+edx*8-0x255a1bcd]
  42052e:	xor    eax,0xaaae93fc
  420533:	xchg   edi,eax
  420534:	pop    ecx
  420535:	pop    esp
  420536:	xor    ecx,DWORD PTR [ebx-0x183c8556]
  42053c:	out    dx,eax
  42053d:	jmp    0x92ab:0xf100fc35
  420544:	std    
  420545:	arpl   si,si
  420547:	in     al,0xa1
  420549:	dec    ebp
  42054a:	idiv   bl
  42054c:	mov    eax,esp
  42054e:	fdiv   st(5),st
  420550:	push   DWORD PTR [eax+ecx*4]
  420553:	aas    
  420554:	dec    esp
  420555:	std    
  420556:	in     al,0xfd
  420558:	inc    DWORD PTR [edx+ecx*4-0x3e]
  42055c:	mov    BYTE PTR [edi+edi*8+0x3f],0x49
  420561:	imul   esi,edi,0xff350264
  420567:	dec    DWORD PTR [ecx+ecx*4+0xfff82c]
  42056e:	inc    ebx
  42056f:	dec    edi
  420570:	mov    DWORD PTR [ebx-0x3c],eax
  420573:	dec    esi
  420574:	in     al,0xe7
  420576:	addr16 cmc 
  420578:	sti    
  420579:	push   0x5
  42057b:	test   BYTE PTR [ecx-0x7c],al
  42057e:	mov    ah,0x66
  420580:	push   ds
  420581:	mov    cl,0x7c
  420583:	pop    ss
  420584:	call   0xfc373a5f
  420589:	lea    ecx,[ecx+0x43334c8a]
  42058f:	dec    esi
  420590:	fs pop eax
  420592:	xor    BYTE PTR [edx-0x4],al
  420595:	dec    cl
  420597:	push   esi
  420598:	or     eax,0x7f87c440
  42059d:	pusha  
  42059e:	(bad)  
  4205a1:	cmp    bh,BYTE PTR [ebx+0x6]
  4205a4:	test   BYTE PTR [ebx],cl
  4205a6:	(bad)  
  4205a7:	idiv   bl
  4205a9:	push   edi
  4205aa:	rcr    DWORD PTR [eax],cl
  4205ac:	call   0x874849c5
  4205b1:	lock jg 0x4205ab
  4205b4:	jo     0x4205ff
  4205b6:	dec    edx
  4205b7:	out    dx,eax
  4205b8:	adc    DWORD PTR [eax-0x3fd463],esi
  4205be:	and    eax,0x6afed49d
  4205c3:	sbb    al,0xf7
  4205c5:	(bad)  
  4205c6:	jmp    0xc540ac36
  4205cb:	sbb    dl,dl
  4205cd:	cld    
  4205ce:	test   al,0xf7
  4205d0:	adc    BYTE PTR [eax+0x0],al
  4205d3:	popf   
  4205d4:	mov    dl,0x84
  4205d6:	pop    ebx
  4205d7:	pushf  
  4205d8:	sbb    eax,DWORD PTR [eax]
  4205da:	cmp    DWORD PTR [edx-0x30],esp
  4205dd:	sbb    al,0x50
  4205df:	xor    cl,BYTE PTR [ebp+0x1c2afecf]
  4205e5:	cmp    DWORD PTR [edx],edx
  4205e7:	cmp    eax,0x25ffc04c
  4205ec:	popf   
  4205ed:	(bad)  
  4205ef:	adc    bl,BYTE PTR [edi*8+0x3e1f91c4]
  4205f6:	inc    edx
  4205f7:	push   es
  4205f8:	sbb    ecx,esi
  4205fa:	push   esp
  4205fb:	cli    
  4205fc:	rcl    BYTE PTR cs:[edx],0x5d
  420600:	sbb    ecx,DWORD PTR [edx-0x261719be]
  420606:	(bad)  
  420607:	fbld   TBYTE PTR [edi]
  420609:	add    BYTE PTR [ecx+0x26],dl
  42060c:	push   edi
  42060d:	sbb    al,0xf
  42060f:	pop    ebp
  420610:	sbb    ecx,esi
  420612:	mov    ch,cl
  420614:	mov    ah,0xc1
  420616:	sbb    ebp,DWORD PTR [edx-0x5a]
  420619:	inc    ebx
  42061a:	jae    0x4205ba
  42061c:	imul   edi,DWORD PTR [ecx],0xffffffd0
  42061f:	es push 0x4
  420622:	mov    DWORD PTR [eax+0x7b],ebp
  420625:	adc    eax,0x43a69d40
  42062a:	jae    0x4205ca
  42062c:	mov    edi,DWORD PTR [ecx]
  42062e:	aam    0x26
  420630:	imul   edi,esp,0x26028580
  420636:	mov    al,0x0
  420638:	cdq    
  420639:	rcr    BYTE PTR ds:0xa7140111,cl
  42063f:	add    esp,DWORD PTR [eax+ecx*8]
  420642:	repnz sub BYTE PTR [edx],0xb6
  420646:	jmp    0x719b681e
  42064b:	ret    0x87aa
  42064e:	es mov al,0x99
  420651:	shr    ch,cl
  420653:	adc    BYTE PTR [ecx+0x12],dl
  420656:	daa    
  420657:	add    al,0x14
  420659:	or     BYTE PTR [ebx+eax*2-0x52],ah
  42065d:	add    eax,0x82493b37
  420662:	dec    edx
  420663:	loopne 0x4205ff
  420665:	add    bh,BYTE PTR [ebx]
  420667:	mov    ebp,0x51e8815
  42066c:	popf   
  42066d:	add    ch,BYTE PTR [ebx+eax*2-0x72]
  420671:	call   DWORD PTR [esi]
  420673:	cmp    edx,DWORD PTR [eax-0x2a]
  420676:	out    0x3,eax
  420678:	popf   
  420679:	xor    ebx,esi
  42067b:	and    ebp,DWORD PTR [edx+0x188ee6c2]
  420681:	into   
  420682:	out    0x3,eax
  420684:	popf   
  420685:	xchg   DWORD PTR [esi+0x7dd29daf],esp
  42068b:	push   esi
  42068c:	and    eax,0x9d051a88
  420691:	add    ah,BYTE PTR [ebx+eax*2+0x4e]
  420695:	or     DWORD PTR [edi-0x9a950c6],esi
  42069b:	ret    
  42069c:	add    BYTE PTR [edx-0x4c5c9385],bh
  4206a2:	xor    dh,ah
  4206a4:	sub    dl,0xb5
  4206a7:	jmp    0x719aa87f
  4206ac:	sbb    DWORD PTR [edx],0x9ee90002
  4206b2:	cmp    DWORD PTR [edi-0x657f4b],0xffffffb8
  4206b9:	(bad)  
  4206ba:	adc    al,0x10
  4206bc:	cli    
  4206bd:	pop    esi
  4206be:	xor    BYTE PTR [ebx],bh
  4206c0:	jmp    0x42065b
  4206c2:	add    al,BYTE PTR [eax]
  4206c4:	xchg   ebp,eax
  4206c5:	nop
  4206c6:	pushf  
  4206c7:	call   DWORD PTR [edx-0x1ee6362]
  4206cd:	int    0x87
  4206cf:	(bad)  
  4206d0:	call   0x19543473
  4206d5:	mov    bl,0xc2
  4206d7:	jmp    DWORD PTR [edi-0x21]
  4206da:	stos   DWORD PTR es:[edi],eax
  4206db:	(bad)  
  4206dc:	call   0x9e0b217f
  4206e1:	je     0x420711
  4206e3:	pop    esp
  4206e4:	das    
  4206e5:	dec    eax
  4206e6:	inc    edx
  4206e7:	add    ebp,ecx
  4206e9:	adc    ecx,ecx
  4206eb:	jae    0xea3e3712
  4206f1:	xchg   edx,eax
  4206f2:	outs   dx,DWORD PTR ds:[esi]
  4206f3:	jae    0x420729
  4206f5:	and    DWORD PTR [ebx+eiz*1+0xcd19eed],ebp
  4206fc:	jne    0x42075e
  4206fe:	aad    0xfd
  420700:	mov    ds:0xef78a400,al
  420705:	retf   
  420706:	dec    eax
  420707:	xchg   DWORD PTR [ebx],ebx
  420709:	test   esp,0x13493bca
  42070f:	retf   
  420710:	cmp    ecx,DWORD PTR [eax+0xf]
  420713:	out    dx,al
  420714:	cmp    ecx,DWORD PTR [edx+0xf]
  420717:	(bad)  
  420719:	mov    WORD PTR [edi+edi*4],cs
  42071c:	cmp    DWORD PTR [eax+0x3d],0x2f
  420720:	cld    
  420721:	jmp    0x78c60329
  420726:	dec    edx
  420727:	das    
  420728:	cld    
  420729:	add    BYTE PTR [eax+eiz*2-0x223bcd00],dh
  420730:	dec    BYTE PTR [edx+0x123d7ec6]
  420736:	fbstp  TBYTE PTR [edx]
  420738:	adc    BYTE PTR [ecx+0x6d6],0x11
  42073f:	pop    es
  420740:	test   BYTE PTR [ecx+0x6e7],dl
  420746:	adc    DWORD PTR [edi],ebp
  420748:	das    
  420749:	ror    BYTE PTR [edi-0x333d78f8],0x43
  420750:	or     eax,0x8daf6deb
  420755:	mov    al,ds:0x75000334
  42075a:	dec    eax
  42075b:	scas   eax,DWORD PTR es:[edi]
  42075c:	lea    esp,[ecx+0x75000344]
  420762:	inc    eax
  420763:	ss mov esp,0x7e3600eb
  420769:	mov    esi,0x2f167588
  42076e:	rol    BYTE PTR [eax+0x573fd54],0x43
  420775:	adc    BYTE PTR [ecx-0xa],0x5e
  420779:	inc    DWORD PTR [edx+0x5184054c]
  42077f:	add    BYTE PTR [edi-0x1],bl
  420782:	cmp    BYTE PTR [ebx+edx*1],0x84
  420786:	push   ecx
  420787:	in     al,0x5e
  420789:	inc    DWORD PTR [edx+0x51802f2c]
  42078f:	cmc    
  420790:	pop    esi
  420791:	inc    DWORD PTR [edx+0x4c1fafc]
  420797:	mov    ah,0x3f
  420799:	xchg   esp,ebp
  42079b:	aaa    
  42079c:	pmaddwd mm0,QWORD PTR [ecx-0x34098]
  4207a3:	popf   
  4207a4:	sbb    ebx,edx
  4207a6:	cld    
  4207a7:	nop
  4207a8:	pop    ebp
  4207a9:	adc    DWORD PTR [eax-0x63],eax
  4207ac:	mov    DWORD PTR [edi],esi
  4207ae:	adc    bh,BYTE PTR [ecx+0x19ffc057]
  4207b4:	fsubr  QWORD PTR [edx+eiz*2+0x3dc9018]
  4207bb:	in     al,dx
  4207bc:	xchg   ecx,eax
  4207bd:	pushf  
  4207be:	mov    ch,cl
  4207c0:	inc    edi
  4207c1:	mov    eax,0xd01a074e
  4207c6:	cld    
  4207c7:	nop
  4207c8:	repz adc eax,DWORD PTR [eax+0x0]
  4207cc:	popf   
  4207cd:	sahf   
  4207ce:	inc    eax
  4207cf:	jae    0x4207ba
  4207d1:	cwde   
  4207d2:	mov    ah,0x23
  4207d4:	cdq    
  4207d5:	lods   eax,DWORD PTR gs:[esi]
  4207d7:	inc    edx
  4207d8:	mov    bh,0x1b
  4207da:	test   DWORD PTR [ebx+0x79],eax
  4207dd:	aaa    
  4207de:	shl    BYTE PTR [edi+0x28],1
  4207e1:	repz in al,dx
  4207e3:	es inc ebp
  4207e5:	fwait
  4207e6:	jne    0x4207e5
  4207e8:	sub    al,dl
  4207ea:	(bad)  
  4207eb:	mov    bl,cl
  4207ed:	inc    DWORD PTR [edi]
  4207ef:	mov    ebp,DWORD PTR [ecx+0x7]
  4207f2:	mov    al,0xe7
  4207f4:	adc    DWORD PTR [ebx+0x5c20fc35],ebp
  4207fa:	scas   al,BYTE PTR es:[edi]
  4207fb:	push   ds
  4207fc:	ins    DWORD PTR es:[edi],dx
  4207fd:	mov    al,ds:0x1b5eb7db
  420802:	sub    BYTE PTR [ebx-0x7ccb6b0a],dl
  420808:	fst    QWORD PTR [edi]
  42080a:	or     eax,DWORD PTR [ecx+0x40643b90]
  420810:	popf   
  420811:	daa    
  420812:	sub    DWORD PTR [esi],eax
  420814:	inc    edi
  420815:	sbb    ecx,DWORD PTR [ecx+0x36b5b5c0]
  42081b:	cld    
  42081c:	ret    0xc202
  42081f:	mov    bh,BYTE PTR [edi+0x5e8b29cf]
  420825:	out    0xea,al
  420827:	ds pushf 
  420829:	(bad)  
  42082a:	iret   
  42082b:	ret    
  42082c:	mov    ds:0xe79778,al
  420831:	(bad)
  420834:	lea    esp,[edx-0x4a0c6887]
  42083a:	sar    esi,cl
  42083c:	mov    edx,ss
  42083e:	push   es
  42083f:	jb     0x4207c6
  420841:	into   
  420842:	add    esp,edi
  420844:	add    ebx,DWORD PTR [edi+0x6]
  420847:	out    0xd0,eax
  420849:	adc    eax,0xca28691e
  42084e:	jns    0x420877
  420850:	mov    edi,esp
  420852:	pop    esi
  420853:	nop
  420854:	adc    ebx,DWORD PTR [edx]
  420856:	mov    edi,0xe6da88f2
  42085b:	cwde   
  42085c:	mov    bh,dl
  42085e:	push   ds
  42085f:	aaa    
  420860:	(bad)  
  420861:	fistp  WORD PTR [edx]
  420863:	into   
  420864:	add    BYTE PTR [edx],al
  420866:	sub    al,0xd5
  420868:	test   eax,0x73cdd09c
  42086d:	into   
  42086e:	add    esp,edi
  420870:	add    ebx,DWORD PTR [eax]
  420872:	pop    ss
  420873:	daa    
  420874:	adc    BYTE PTR [ebp+0x2],bl
  420877:	inc    ecx
  420878:	add    al,0x8
  42087a:	pop    ss
  42087b:	mov    bh,0x12
  42087d:	pop    ebp
  42087e:	add    ch,BYTE PTR [ebx+eax*2+0x6e]
  420882:	clc    
  420883:	mov    DWORD PTR ss:[edi+0x1a],ebx
  420887:	ss sub al,0xbe
  42088a:	(bad)  
  42088b:	lea    esi,[esi]
  42088d:	fild   DWORD PTR [eax+0x1c]
  420890:	iret   
  420891:	and    eax,0xbd7133
  420896:	mov    ds:0xca38ff2d,al
  42089b:	sub    edi,esp
  42089d:	jmp    0xe8418db9
  4208a2:	sahf   
  4208a3:	add    cl,BYTE PTR [edi-0x2d]
  4208a6:	adc    bh,BYTE PTR [edx-0x7]
  4208a9:	sbb    cl,BYTE PTR [edi-0x2c]
  4208ac:	out    0x18,eax
  4208ae:	int    0x2d
  4208b0:	cld    
  4208b1:	ins    BYTE PTR es:[edi],dx
  4208b2:	fisubr WORD PTR [edi-0x1fbdc1f5]
  4208b8:	or     ebx,DWORD PTR [ecx+0x72e74717]
  4208be:	sub    BYTE PTR ds:0x4250c6fc,0x3
  4208c5:	jmp    0xe565b875
  4208ca:	pop    ss
  4208cb:	ins    DWORD PTR es:[edi],dx
  4208cc:	cld    
  4208cd:	xchg   ebp,eax
  4208ce:	inc    edx
  4208cf:	clc    
  4208d0:	cld    
  4208d1:	jge    0x42094d
  4208d3:	clc    
  4208d4:	push   ecx
  4208d5:	adc    DWORD PTR ds:0xdce8ff4b,edx
  4208db:	idiv   edi
  4208dd:	sub    al,BYTE PTR [edx+0x2c]
  4208e0:	push   ebx
  4208e1:	jb     0x420868
  4208e3:	and    bl,0xe1
  4208e6:	and    al,0xc1
  4208e8:	or     ebp,DWORD PTR [edx+0x75]
  4208eb:	pop    es
  4208ec:	push   ecx
  4208ed:	aaa    
  4208ee:	push   eax
  4208ef:	xor    edi,0xffffffc4
  4208f2:	mov    al,ds:0x9ee87086
  4208f7:	add    cl,BYTE PTR ds:0x2d05006f
  4208fd:	cld    
  4208fe:	jmp    0xf73e3d20
  420903:	jns    0x4208f7
  420905:	(bad)  
  420906:	call   0xe1b436a9
  42090b:	mov    cl,0x10
  42090d:	js     0x420904
  42090f:	fisubr WORD PTR [ebx]
  420911:	mov    DWORD PTR [eax],eax
  420913:	sbb    al,0xac
  420915:	sti    
  420916:	(bad)  
  420919:	std    
  42091a:	push   DWORD PTR [edx+eax*4-0x917dbb8]
  420921:	push   ebx
  420922:	(bad)  
  420923:	mov    ecx,0xc4400fc3
  420928:	xor    dl,bh
  42092a:	mov    eax,edi
  42092c:	dec    ebx
  42092d:	or     al,0xbe
  42092f:	mov    ah,0x2b
  420931:	cld    
  420932:	dec    DWORD PTR [ecx]
  420934:	(bad)  
  420935:	jp     0x42095b
  420937:	sub    dl,BYTE PTR [edx+0x53]
  42093a:	jmp    FWORD PTR [ecx-0x49]
  42093d:	cmovo  esi,DWORD PTR [ebx+ebp*4-0x44]
  420942:	jns    0x4209b8
  420944:	cmp    eax,0x5b93574f
  420949:	add    al,0xff
  42094b:	imul   edi,DWORD PTR [ebx+0x7874400f],0x42782458
  420955:	aaa    
  420956:	pop    esp
  420957:	pop    eax
  420958:	(bad)  
  42095a:	(bad)  
  42095c:	pop    esi
  42095d:	mov    ah,0x43
  42095f:	add    BYTE PTR [esi+esi*8],dh
  420962:	lods   al,BYTE PTR ds:[esi]
  420963:	add    al,0x45
  420965:	(bad)  
  420966:	(bad)  
  420967:	(bad)  
  420968:	adc    al,0xff
  42096a:	cld    
  42096b:	push   DWORD PTR [esi+edi*1]
  42096e:	sti    
  42096f:	jne    0x4209ad
  420971:	not    BYTE PTR [ecx]
  420973:	or     al,bh
  420975:	ds cld 
  420977:	mov    bh,BYTE PTR [edx+eax*4]
  42097a:	idiv   edi
  42097c:	add    ebp,DWORD PTR [ebx-0x10bff0c]
  420982:	push   ebp
  420983:	push   ebx
  420984:	mov    ebx,0xf7c811f5
  420989:	ds cld 
  42098b:	mov    BYTE PTR [ebp-0x5bf02023],bl
  420991:	fstp   st(7)
  420993:	adc    edx,DWORD PTR [ecx+0x1b]
  420996:	xor    edx,DWORD PTR [edx]
  420998:	mov    ebp,0x42ffc047
  42099d:	cdq    
  42099e:	cld    
  42099f:	inc    edx
  4209a1:	pop    es
  4209a2:	retf   
  4209a3:	cld    
  4209a4:	xor    BYTE PTR [ecx],dh
  4209a6:	xor    edx,DWORD PTR [edx]
  4209a8:	leave  
  4209a9:	daa    
  4209aa:	sar    bh,0x1f
  4209ad:	push   esi
  4209ae:	add    al,0xfe
  4209b0:	xchg   edx,eax
  4209b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209b2:	cmp    eax,0x2a1c9aff
  4209b7:	inc    ebx
  4209b8:	mov    ecx,0x200cff4b
  4209bd:	mov    dh,0x0
  4209bf:	add    BYTE PTR [ebp+0x23bcf1],bl
  4209c5:	lea    ebp,[ebx]
  4209c7:	lods   al,BYTE PTR ds:[esi]
  4209c8:	inc    edx
  4209c9:	into   
  4209ca:	jo     0x4209ff
  4209cc:	adc    cl,BYTE PTR [ebp+0x17ffc027]
  4209d2:	or     al,0x7e
  4209d4:	cmc    
  4209d5:	stos   BYTE PTR es:[edi],al
  4209d6:	xchg   edi,eax
  4209d7:	popa   
  4209d8:	call   DWORD PTR [edx+0x1c]
  4209db:	test   DWORD PTR [ebx-0x7f],eax
  4209de:	push   ebx
  4209df:	rcl    BYTE PTR [eax-0x16],1
  4209e2:	sbb    BYTE PTR [edx+0x14273a07],ch
  4209e8:	adc    al,0xdd
  4209ea:	sbb    eax,DWORD PTR [edi+0x7a979abf]
  4209f0:	jmp    DWORD PTR [edx]
  4209f2:	sbb    al,0x9a
  4209f4:	call   FWORD PTR [ebx]
  4209f6:	out    0xfb,eax
  4209f8:	cld    
  4209f9:	mov    edi,edi
  4209fb:	(bad)  
  4209fd:	xchg   ecx,eax
  4209fe:	mul    edi
  420a00:	addr16 popf 
  420a02:	fild   DWORD PTR [ebx]
  420a04:	add    BYTE PTR [ebx+0x2],dl
  420a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a08:	sbb    DWORD PTR [ecx],esi
  420a0a:	push   ss
  420a0b:	daa    
  420a0c:	add    al,0xf4
  420a0e:	cwde   
  420a0f:	popf   
  420a10:	enter  0x12be,0xe7
  420a14:	sti    
  420a15:	fisubr DWORD PTR [ecx]
  420a17:	cli    
  420a18:	pop    es
  420a19:	mov    WORD PTR [edx-0x6f],es
  420a1c:	add    DWORD PTR [ecx+edx*8+0x75],ebp
  420a20:	sbb    DWORD PTR [ebp+0x1c04270e],esp
  420a26:	sub    esp,DWORD PTR [ebp-0x48]
  420a29:	add    BYTE PTR [ebp-0x64],cl
  420a2c:	out    0x2,al
  420a2e:	lock inc edx
  420a30:	mov    dh,0x9b
  420a32:	xchg   ebx,eax
  420a33:	add    esp,edi
  420a35:	add    ebx,DWORD PTR [eax-0x50cd1151]
  420a3b:	inc    esi
  420a3c:	fld    st(3)
  420a3e:	mov    bl,BYTE PTR [ebx+esi*8]
  420a41:	add    cl,BYTE PTR [eax+0x52]
  420a44:	daa    
  420a45:	sbb    al,0xaa
  420a47:	jnp    0x4209f3
  420a49:	out    0x96,eax
  420a4b:	stc    
  420a4c:	push   ebp
  420a4d:	inc    ebp
  420a4e:	hlt    
  420a4f:	add    dl,BYTE PTR [esi]
  420a51:	mov    ecx,0xe7a27b9a
  420a56:	add    BYTE PTR [ebx+0xf],0x14
  420a5a:	(bad)
  420a5d:	(bad)  
  420a5e:	dec    edx
  420a5f:	jbe    0x420a0b
  420a61:	out    0x7e,eax
  420a63:	jnp    0x4209f7
  420a65:	out    0x7e,eax
  420a67:	jnp    0x420a9b
  420a69:	call   0xf7a624f0
  420a6e:	sub    ch,BYTE PTR [ecx]
  420a70:	sar    edi,0x21
  420a73:	out    dx,eax
  420a74:	ds ins BYTE PTR es:[edi],dx
  420a76:	pop    ebp
  420a77:	add    al,dh
  420a79:	sbb    BYTE PTR [ecx+0x804270e],cl
  420a7f:	out    dx,eax
  420a80:	dec    DWORD PTR [ecx+esi*2-0x3e]
  420a84:	jmp    FWORD PTR [ebp+0x29114e95]
  420a8a:	cdq    
  420a8b:	(bad)  
  420a8c:	pop    ebp
  420a8d:	fiadd  DWORD PTR [eax]
  420a8f:	pop    esi
  420a90:	retf   0x8c88
  420a93:	int    0x42
  420a95:	pop    es
  420a96:	jmp    0x6b2d8490
  420a9b:	mov    dl,0xa5
  420a9d:	cmc    
  420a9e:	in     al,0xbe
  420aa0:	pop    esp
  420aa1:	inc    eax
  420aa2:	jmp    0x816fb941
  420aa7:	stc    
  420aa8:	imul   edi,ebp,0x66
  420aab:	sbb    ch,BYTE PTR [ecx+0x73]
  420aae:	add    al,0xb
  420ab0:	sub    DWORD PTR [ebx+0x67b912ac],ecx
  420ab6:	pop    esp
  420ab7:	pop    ecx
  420ab8:	out    dx,eax
  420ab9:	es push ecx
  420abb:	push   es
  420abc:	imul   edi,ebp,0x3e
  420abf:	iret   
  420ac0:	mov    ah,0xf
  420ac2:	fs push ebp
  420ac4:	mov    esp,?
  420ac6:	mov    ah,0x7a
  420ac8:	daa    
  420ac9:	jb     0x420abc
  420acb:	dec    esi
  420acc:	daa    
  420acd:	adc    ch,ch
  420acf:	xchg   edx,eax
  420ad0:	ret    0x1ff
  420ad3:	lahf   
  420ad4:	and    eax,0xb48ff972
  420ad9:	or     eax,DWORD PTR [esi]
  420adb:	adc    eax,0xdad4fd00
  420ae0:	adc    eax,DWORD PTR [eax-0x17]
  420ae3:	add    DWORD PTR [ecx+0xb],0x200474e9
  420aea:	xchg   ebp,eax
  420aeb:	pop    eax
  420aec:	sub    BYTE PTR [eax],al
  420aee:	push   ebp
  420aef:	pushf  
  420af0:	sbb    bh,ah
  420af2:	xchg   ebp,eax
  420af3:	add    BYTE PTR [edi+0x26],ch
  420af6:	sub    DWORD PTR [ecx+0x30fe55],0x44
  420afd:	aas    
  420afe:	mov    esi,0x21f2f404
  420b03:	xor    cl,ah
  420b05:	inc    ebx
  420b06:	cld    
  420b07:	push   esp
  420b08:	jg     0x420aec
  420b0a:	repnz add eax,0x3fc7e4
  420b10:	add    BYTE PTR [edx-0x79],cl
  420b13:	jne    0x420b0d
  420b15:	outs   dx,DWORD PTR ds:[esi]
  420b16:	sbb    eax,0xfab30ee8
  420b1b:	inc    DWORD PTR [eax-0x42]
  420b1e:	jo     0x420b38
  420b20:	fbstp  TBYTE PTR [eax]
  420b22:	pop    esp
  420b23:	mov    eax,0x1070fe77
  420b28:	dec    ebx
  420b29:	outs   dx,DWORD PTR ds:[esi]
  420b2a:	or     al,0x8b
  420b2c:	jmp    0xacb80640
  420b31:	or     esi,DWORD PTR [edx-0x180eb403]
  420b37:	adc    bl,ch
  420b39:	outs   dx,DWORD PTR ds:[esi]
  420b3a:	adc    bh,bh
  420b3c:	push   ecx
  420b3d:	adc    edx,DWORD PTR [esi-0x1]
  420b40:	push   ecx
  420b41:	sub    edi,ebx
  420b43:	adc    eax,0x400a10
  420b48:	sub    bh,BYTE PTR [eax]
  420b4a:	mov    esi,0x87508410
  420b4f:	in     al,dx
  420b50:	xchg   edx,eax
  420b51:	call   FWORD PTR [edi]
  420b53:	lods   al,BYTE PTR ds:[esi]
  420b54:	aaa    
  420b55:	add    eax,DWORD PTR [esi+edx*2]
  420b58:	add    BYTE PTR [edi+0x6574086f],bh
  420b5e:	or     edx,DWORD PTR [ecx-0x7f0db544]
  420b64:	rol    al,0xfb
  420b67:	ss xor eax,0x3f9b24
  420b6d:	ror    DWORD PTR [esi],1
  420b6f:	sti    
  420b70:	jne    0x420b96
  420b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b73:	dec    ecx
  420b74:	adc    al,0x9d
  420b76:	push   eax
  420b77:	mov    ch,0x7
  420b79:	add    eax,0x12fc2ce8
  420b7e:	push   esp
  420b7f:	adc    ch,bh
  420b81:	nop
  420b82:	dec    ebp
  420b83:	das    
  420b84:	jb     0x420b33
  420b86:	pop    es
  420b87:	das    
  420b88:	jb     0x420b2f
  420b8a:	pop    eax
  420b8b:	adc    eax,0x3d9883c
  420b90:	pop    esi
  420b91:	dec    eax
  420b92:	pop    ebx
  420b93:	adc    BYTE PTR [eax],al
  420b95:	dec    eax
  420b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b97:	sbb    al,0xf5
  420b99:	mov    al,ds:0x9d405c39
  420b9e:	adc    eax,0x155088d6
  420ba3:	mov    ah,0x1e
  420ba5:	mov    ch,0xde
  420ba7:	outs   dx,DWORD PTR ds:[esi]
  420ba8:	std    
  420ba9:	mov    edx,0x9573409c
  420bae:	in     al,0xf4
  420bb0:	pop    edi
  420bb1:	in     eax,0x5b
  420bb3:	add    BYTE PTR [ebx-0x73],dh
  420bb6:	shl    BYTE PTR [ebp+0x1487260f],1
  420bbc:	std    
  420bbd:	add    BYTE PTR [eax],cl
  420bbf:	xor    al,0x18
  420bc1:	es mov ch,ah
  420bc4:	das    
  420bc5:	call   0x13f7f877
  420bca:	jp     0x420c3b
  420bcc:	adc    BYTE PTR [esi+0x72],dl
  420bcf:	xchg   eax,edi
  420bd1:	cld    
  420bd2:	nop
  420bd3:	out    dx,eax
  420bd4:	adc    al,0x40
  420bd6:	popf   
  420bd7:	ins    DWORD PTR es:[edi],dx
  420bd8:	int    0xc1
  420bda:	lods   eax,DWORD PTR ds:[esi]
  420bdb:	sbb    edx,ebp
  420bdd:	mov    BYTE PTR [ecx+0x26],al
  420be0:	add    ah,BYTE PTR [eax]
  420be2:	stc    
  420be3:	pop    eax
  420be4:	add    BYTE PTR [ebx+ebp*8],al
  420be7:	mov    al,ds:0x3ab10bb5
  420bec:	sbb    BYTE PTR [edi],al
  420bee:	icebp  
  420bef:	add    ah,ch
  420bf1:	das    
  420bf2:	push   ds
  420bf3:	inc    ebx
  420bf4:	push   edx
  420bf5:	or     al,0x64
  420bf7:	out    dx,eax
  420bf8:	inc    esi
  420bf9:	ins    BYTE PTR es:[edi],dx
  420bfa:	pop    ebp
  420bfb:	add    dl,BYTE PTR [esp+edx*1+0x10]
  420bff:	mov    al,0xd6
  420c01:	jp     0x420c5a
  420c03:	push   cs
  420c04:	mov    esi,0xc91a9ab9
  420c09:	xor    cl,bh
  420c0b:	and    eax,0xaff014c1
  420c10:	cli    
  420c11:	outs   dx,DWORD PTR cs:[esi]
  420c13:	adc    dh,BYTE PTR ds:0x95fa6f2f
  420c19:	sbb    DWORD PTR [ecx+0x7304270f],ecx
  420c1f:	(bad)  
  420c20:	test   al,0x14
  420c22:	add    BYTE PTR [ebp-0x37df8e31],bl
  420c28:	inc    esi
  420c2a:	pop    edi
  420c2b:	pop    ebp
  420c2c:	add    ah,bl
  420c2e:	aad    0x25
  420c30:	mov    al,0xf6
  420c32:	mov    bh,0x8b
  420c34:	sbb    ch,BYTE PTR [eax]
  420c36:	imul   esp,DWORD PTR [eax+0xe446a25],0xb
  420c3d:	adc    bh,cl
  420c3f:	repnz push 0xffffffa9
  420c42:	add    ecx,DWORD PTR [esi]
  420c44:	adc    edi,DWORD PTR [esi]
  420c46:	mov    ecx,0xba379ae
  420c4b:	js     0x420bfc
  420c4d:	ficomp WORD PTR [ebx]
  420c4f:	pop    ss
  420c50:	es and eax,0x1e11752f
  420c56:	mov    ecx,0x179b258a
  420c5b:	repz and eax,0xaf51ff93
  420c61:	out    dx,al
  420c62:	cs scas eax,DWORD PTR es:[edi]
  420c64:	xchg   dl,dl
  420c66:	ret    
  420c67:	inc    edx
  420c68:	(bad)  
  420c69:	call   DWORD PTR [ebx-0x6bffee24]
  420c6f:	mov    bh,0x19
  420c71:	cmc    
  420c72:	in     al,dx
  420c73:	ds pop ecx
  420c75:	inc    eax
  420c76:	jmp    0x5ccad915
  420c7b:	mov    cl,0xae
  420c7d:	push   ds
  420c7e:	rol    DWORD PTR [ecx+0x6a],0xfd
  420c82:	(bad)  
  420c83:	and    ah,BYTE PTR [ebp+0x73]
  420c86:	loope  0x420c88
  420c88:	imul   edi
  420c8a:	pop    edi
  420c8b:	jno    0x420c6c
  420c8d:	and    al,0x73
  420c8f:	fld    st(3)
  420c91:	mov    al,0x13
  420c93:	jb     0x420c72
  420c95:	or     al,0xfd
  420c97:	adc    al,0xe1
  420c99:	sbb    al,0x53
  420c9b:	xchg   ebp,eax
  420c9c:	mov    esp,DWORD PTR [esi]
  420c9e:	call   0x17f2909d
  420ca3:	xchg   BYTE PTR ds:0x57e5611,al
  420ca9:	stc    
  420caa:	cld    
  420cab:	cld    
  420cac:	mov    dh,0x25
  420cae:	adc    dl,BYTE PTR [ecx-0x39003d76]
  420cb4:	int    0x42
  420cb6:	adc    ebp,ecx
  420cb8:	lds    edi,FWORD PTR [ecx-0x15]
  420cbb:	pop    edi
  420cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cbd:	loop   0x420c6a
  420cbf:	stos   BYTE PTR es:[edi],al
  420cc0:	sahf   
  420cc1:	(bad)  
  420cc2:	push   ebp
  420cc3:	jb     0x420d0a
  420cc5:	clc    
  420cc6:	jae    0x420cd0
  420cc8:	mov    eax,ds:0xcb37b8d3
  420ccd:	jg     0x420c8e
  420ccf:	mov    ch,0xa6
  420cd1:	jmp    0xc3389608
  420cd6:	call   DWORD PTR [ebx-0x68dda72]
  420cdc:	xlat   BYTE PTR ds:[ebx]
  420cdd:	mov    eax,0xfc150e13
  420ce2:	out    0x0,eax
  420ce4:	dec    edi
  420ce5:	aam    0xfb
  420ce7:	jmp    FWORD PTR [edi+0x75fb0f]
  420ced:	pop    eax
  420cee:	aad    0x71
  420cf0:	adc    BYTE PTR [edx],cl
  420cf2:	aad    0x71
  420cf4:	or     BYTE PTR [ebx+0xc],al
  420cf7:	xor    al,0x15
  420cf9:	je     0x420cf9
  420cfb:	pop    ebp
  420cfc:	pop    ebp
  420cfd:	inc    esi
  420cfe:	lldt   WORD PTR [ebp+0x7f]
  420d02:	loop   0x420cf6
  420d04:	add    eax,0x3fa294
  420d09:	clc    
  420d0a:	dec    ebp
  420d0b:	xchg   DWORD PTR [ebp+0x0],esi
  420d0e:	ins    BYTE PTR es:[edi],dx
  420d0f:	sbb    eax,0xfa98dee8
  420d14:	(bad)  
  420d15:	js     0x420cd5
  420d17:	jo     0x420d31
  420d19:	jmp    FWORD PTR [esp+ebx*2]
  420d1c:	mov    eax,0x1070fe87
  420d21:	and    ebp,DWORD PTR [esp+ecx*1-0x75]
  420d25:	xchg   ecx,eax
  420d26:	or     bh,bl
  420d28:	jne    0x420cf6
  420d2a:	pop    es
  420d2b:	ret    0x33fb
  420d2e:	aad    0xe7
  420d30:	adc    BYTE PTR [ebx+0x6b],al
  420d33:	adc    bh,bh
  420d35:	leave  
  420d36:	orps   xmm7,xmm7
  420d39:	leave  
  420d3a:	daa    
  420d3b:	sti    
  420d3c:	adc    eax,0x400b9c
  420d41:	inc    edx
  420d42:	xor    al,0xbe
  420d44:	adc    BYTE PTR [esp+ecx*2-0x79],dh
  420d48:	in     al,dx
  420d49:	retf   0x1ffb
  420d4c:	lods   al,BYTE PTR ds:[esi]
  420d4d:	inc    edi
  420d4e:	inc    DWORD PTR [ebx]
  420d50:	push   esi
  420d51:	add    bh,bh
  420d53:	imul   ecx,DWORD PTR [esp+esi*2],0x55
  420d57:	pop    es
  420d58:	mov    eax,ds:0x80d582ba
  420d5d:	rcr    BYTE PTR [ebp-0x77c6f77b],0x79
  420d64:	push   0x10a69d40
  420d69:	std    
  420d6a:	enter  0x774d,0x4a
  420d6e:	xchg   ebp,eax
  420d6f:	sub    al,0xb5
  420d71:	or     eax,DWORD PTR [ebp-0x6c]
  420d74:	daa    
  420d75:	cld    
  420d76:	sub    dl,BYTE PTR [eax+0xf]
  420d79:	std    
  420d7a:	test   al,0x1
  420d7c:	sub    esi,DWORD PTR [edx-0x4f]
  420d7f:	jecxz  0x420dab
  420d81:	jb     0x420d24
  420d83:	xor    al,0xb5
  420d85:	pop    es
  420d86:	or     al,BYTE PTR [esi+0x58]
  420d89:	adc    ebx,DWORD PTR [ebp+0x19]
  420d8c:	retf   0xdf5a
  420d8f:	inc    esp
  420d90:	add    BYTE PTR [ebx+0x26],dl
  420d93:	xor    al,BYTE PTR gs:[edx]
  420d96:	mov    ebp,0x9effbfcd
  420d9b:	jmp    0x420e13
  420d9d:	jb     0x420d4c
  420d9f:	add    eax,0xcf76e7e1
  420da4:	sub    bh,ah
  420da6:	and    DWORD PTR [ecx-0x4c],ebx
  420da9:	pop    ss
  420daa:	xchg   BYTE PTR [esi-0x60],ch
  420dad:	mov    bh,0x5e
  420daf:	sbb    DWORD PTR [ebp+0x142db20f],esi
  420db5:	mov    DWORD PTR [eax],eax
  420db7:	pop    eax
  420db8:	add    DWORD PTR [ebx],ebp
  420dba:	jb     0x420d4d
  420dbc:	shl    edx,1
  420dbe:	clc    
  420dbf:	call   0x837:0x921017b9
  420dc6:	std    
  420dc7:	adc    BYTE PTR [eax-0x2e],al
  420dca:	cld    
  420dcb:	or     BYTE PTR [eax],dh
  420dcd:	sub    esi,DWORD PTR [edx-0x5b]
  420dd0:	fcom   DWORD PTR ds:0x6b89ac
  420dd6:	pop    esi
  420dd7:	enter  0x2902,0x17
  420ddb:	popf   
  420ddc:	fucom  st(3)
  420dde:	scas   al,BYTE PTR es:[di]
  420de0:	ret    0xb6e6
  420de3:	cwde   
  420de4:	pop    edx
  420de5:	fnstenv [edx]
  420de7:	mov    eax,DWORD PTR [edx]
  420de9:	sub    ch,al
  420deb:	lahf   
  420dec:	(bad)  
  420dee:	ret    
  420def:	cmp    dl,BYTE PTR [edi+0x13ab6bec]
  420df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420df6:	add    ebx,DWORD PTR [esi+ebx*8-0x15]
  420dfa:	out    dx,eax
  420dfb:	pop    edx
  420dfd:	out    0xb0,al
  420dff:	mov    al,ds:0xd336b35a
  420e04:	add    ch,BYTE PTR [edx-0x24156021]
  420e0a:	ret    
  420e0b:	add    bl,BYTE PTR [ecx]
  420e0d:	sahf   
  420e0e:	paddusw mm3,QWORD PTR [ecx]
  420e11:	xchg   esi,eax
  420e12:	loope  0x420dd1
  420e14:	adc    eax,0xb7dc0427
  420e19:	jno    0x420e33
  420e1b:	add    BYTE PTR ds:0x9f31ce2f,bl
  420e21:	loop   0x420e65
  420e23:	(bad)  
  420e24:	rol    BYTE PTR ds:0xa4f7f35,cl
  420e2a:	sti    
  420e2b:	fnstcw WORD PTR [edx-0x46d5c0cb]
  420e31:	xchg   BYTE PTR [esi+0x74877fb0],ah
  420e37:	mov    al,0x8b
  420e39:	lea    ebp,[edi+edi*8+0x2b5d7eba]
  420e40:	cdq    
  420e41:	xchg   DWORD PTR [esi],esp
  420e43:	mov    al,0xaf
  420e45:	lods   al,BYTE PTR ds:[esi]
  420e46:	(bad)  
  420e47:	rcl    DWORD PTR [edi],1
  420e49:	iret   
  420e4a:	push   ds
  420e4b:	aad    0x7a
  420e4d:	fst    DWORD PTR [ecx-0x7486d6]
  420e53:	stos   DWORD PTR es:[edi],eax
  420e54:	fimul  DWORD PTR [edx+eax*2-0x1d5aeef]
  420e5b:	mov    esi,0xf5aff4b7
  420e60:	pop    esi
  420e61:	and    DWORD PTR [edx+0x20],ebx
  420e64:	fild   DWORD PTR ds:0x2dcbb400
  420e6a:	adc    BYTE PTR ds:0xc9021761,0xd2
  420e71:	ret    0xecff
  420e74:	dec    esp
  420e75:	mov    dh,BYTE PTR [edx-0x1f]
  420e78:	cli    
  420e79:	out    dx,al
  420e7a:	out    0x6f,eax
  420e7c:	mov    cl,0x1f
  420e7e:	cld    
  420e7f:	add    BYTE PTR gs:[esi-0x6b],bl
  420e83:	and    ch,BYTE PTR [esp+ecx*8-0x6b]
  420e87:	push   ds
  420e88:	(bad)  
  420e89:	fadd   QWORD PTR [eax+ebp*8]
  420e8c:	ss mov dh,0x1e
  420e8f:	cld    
  420e90:	fs pop esi
  420e92:	xchg   ebp,eax
  420e93:	adc    al,BYTE PTR [ebx-0x2f]
  420e96:	mov    dh,0x8a
  420e98:	sbb    al,0x59
  420e9a:	shl    bh,1
  420e9c:	xchg   ebx,eax
  420e9d:	inc    eax
  420e9e:	pop    ds
  420e9f:	cld    
  420ea0:	jo     0x420e7f
  420ea2:	cmp    al,0x8a
  420ea4:	sub    al,0x61
  420ea6:	shr    eax,1
  420ea8:	call   0x61542c99
  420ead:	xchg   edx,eax
  420eae:	ret    0x1eff
  420eb1:	js     0x420ef6
  420eb3:	add    ebp,ecx
  420eb5:	int    0x89
  420eb7:	jmp    0x420f23
  420eb9:	xchg   edx,eax
  420eba:	icebp  
  420ebb:	cmc    
  420ebc:	in     al,dx
  420ebd:	mov    esi,0x9ae9406c
  420ec2:	mov    dh,0x88
  420ec4:	fcom   QWORD PTR [esi+0x79413094]
  420eca:	pop    ecx
  420ecb:	std    
  420ecc:	add    bl,bl
  420ece:	lahf   
  420ecf:	mov    esp,0xf2818e74
  420ed4:	je     0x420e78
  420ed6:	xchg   DWORD PTR [edx],edi
  420ed8:	xor    BYTE PTR [ecx],dh
  420eda:	daa    
  420edb:	xchg   DWORD PTR [esi+0x6c],eax
  420ede:	cld    
  420edf:	stc    
  420ee0:	(bad)  
  420ee1:	mov    ebx,0xc081ec
  420ee6:	xor    bl,dh
  420ee8:	imul   esi,DWORD PTR [eax],0xd0499b12
  420eee:	and    eax,0x3aaa94fc
  420ef3:	jmp    0xd041:0x9a8c4585
  420efa:	add    al,0x1
  420efc:	(bad)  
  420efd:	push   ebp
  420efe:	cmp    edx,DWORD PTR [eax]
  420f00:	hlt    
  420f01:	adc    al,0xc4
  420f03:	push   es
  420f04:	pop    esi
  420f05:	leave  
  420f06:	inc    esi
  420f07:	add    eax,DWORD PTR [eax]
  420f09:	push   ebp
  420f0a:	jg     0x420f06
  420f0c:	jg     0x420efa
  420f0e:	add    al,0xd2
  420f10:	add    DWORD PTR [eax],esp
  420f12:	sub    BYTE PTR [esi-0x4],al
  420f15:	add    edx,DWORD PTR [edx-0x4ff78e63]
  420f1b:	adc    eax,0xec7ce7e4
  420f20:	sti    
  420f21:	test   BYTE PTR [ebx+edx*2],al
  420f24:	test   DWORD PTR es:[edx],esi
  420f27:	push   ebx
  420f28:	and    al,BYTE PTR [ebx+0x217113da]
  420f2e:	dec    edi
  420f2f:	inc    esp
  420f30:	add    al,0xe8
  420f32:	dec    edi
  420f33:	in     al,dx
  420f34:	sti    
  420f35:	inc    DWORD PTR [ecx-0x3a]
  420f38:	jo     0x420f4f
  420f3a:	sahf   
  420f3b:	push   ss
  420f3c:	push   edx
  420f3d:	(bad)  
  420f3e:	jmp    0x432a5cf6
  420f43:	mov    ebp,0xa29dfffa
  420f48:	mov    esp,0x661800d7
  420f4d:	push   eax
  420f4e:	dec    edi
  420f4f:	jbe    0x420f7b
  420f51:	into   
  420f52:	cld    
  420f53:	nop
  420f54:	ror    DWORD PTR [edi],1
  420f56:	inc    eax
  420f57:	popf   
  420f58:	ja     0x420f93
  420f5a:	shl    DWORD PTR [ecx-0x46847cd7],0x2d
  420f61:	add    dl,BYTE PTR [esi+0x26]
  420f64:	cli    
  420f65:	div    BYTE PTR [ebp-0x7f2b815b]
  420f6b:	inc    esp
  420f6c:	and    ebp,DWORD PTR [ebx+ebx*1+0x72f5021e]
  420f73:	fsubr  DWORD PTR [edi-0x15]
  420f76:	lds    ebp,FWORD PTR [esi-0x63887fdc]
  420f7c:	and    ebp,DWORD PTR [ebp-0x37d448fe]
  420f82:	call   0x3f860c25
  420f87:	and    al,0x2b
  420f89:	sbb    eax,DWORD PTR ds:0x12ae2
  420f8f:	popf   
  420f90:	sub    ebx,esi
  420f92:	mov    edi,0x80e5345d
  420f97:	hlt    
  420f98:	and    ah,BYTE PTR [ebp+esi*1+0x7df4521e]
  420f9f:	imul   BYTE PTR [ebx+0x70510a29]
  420fa5:	xor    esi,0x2918
  420fab:	push   ecx
  420fac:	adc    DWORD PTR [ecx+0x497a00f6],eax
  420fb2:	add    BYTE PTR [eax],al
  420fb4:	cmp    edi,DWORD PTR ds:0x4984f681
  420fba:	add    BYTE PTR [eax],al
  420fbc:	sub    dh,BYTE PTR ds:0x29e013f
  420fc2:	out    0x3,eax
  420fc4:	popf   
  420fc5:	sub    DWORD PTR [edx],ebp
  420fc7:	hlt    
  420fc8:	push   edx
  420fc9:	fsubr  QWORD PTR [edx+0x740d96df]
  420fcf:	inc    ebx
  420fd0:	ret    0x7c29
  420fd3:	hlt    
  420fd4:	cmp    bh,BYTE PTR [ebp-0x398d04d8]
  420fda:	imul   esp,DWORD PTR [edi-0x716f942],0xf9c0b28
  420fe4:	sbb    al,0x1c
  420fe6:	lock scas eax,DWORD PTR es:[edi]
  420fe8:	in     eax,dx
  420fe9:	shl    DWORD PTR [esi],1
  420feb:	test   BYTE PTR [ebx+0x10],dl
  420fee:	xchg   esp,eax
  420fef:	sahf   
  420ff0:	pop    ecx
  420ff1:	add    eax,ebp
  420ff3:	add    ebx,DWORD PTR [ebp+0x1dc71202]
  420ff9:	sbb    al,0xe0
  420ffb:	scas   eax,DWORD PTR es:[edi]
  420ffc:	imul   ebx,DWORD PTR [edi+ebp*4+0x65102b84],0x631b9bd8
  421007:	add    al,0x9d
  421009:	add    bl,BYTE PTR [ebx+0xc]
  42100c:	mov    bl,BYTE PTR [ebx]
  42100e:	add    eax,0x441e02e4
  421013:	loopne 0x421015
  421015:	jnp    0x421032
  421017:	pmulhuw mm6,mm2
  42101a:	sbb    eax,0xe00835
  42101f:	jmp    0x8dd6:0x92029d03
  421026:	inc    edx
  421027:	fistp  QWORD PTR [edi-0x6f19f182]
  42102d:	or     al,bl
  42102f:	and    esp,0x3e800d9
  421035:	popf   
  421036:	add    dl,BYTE PTR [edx-0xbd93f6]
  42103c:	sbb    DWORD PTR [eax-0x593abc25],0x49690897
  421046:	push   ds
  421047:	or     dl,ah
  421049:	popf   
  42104a:	test   al,0x1
  42104c:	mov    cl,0xa7
  42104e:	add    dh,BYTE PTR [ecx]
  421050:	sub    DWORD PTR [ecx-0x7c],ebx
  421053:	add    edx,edi
  421055:	(bad)  
  421057:	shr    ebp,0x9e
  42105a:	lgs    ebp,FWORD PTR [ecx]
  42105d:	in     al,0x1
  42105f:	ret    
  421060:	jns    0x421065
  421062:	(bad)  
  421064:	fldlg2 
  421066:	rol    dh,cl
  421068:	xchg   DWORD PTR [edi-0x33],eax
  42106b:	add    DWORD PTR [edx-0x46774b67],ebx
  421071:	inc    edx
  421072:	push   cs
  421073:	mov    ch,0xf8
  421075:	mov    ah,0xf1
  421077:	xor    DWORD PTR [ebx-0x312f7200],edi
  42107d:	test   al,0xa6
  42107f:	icebp  
  421080:	cmp    eax,0x1c53787
  421085:	pop    ebx
  421086:	mov    eax,0xde960cbf
  42108b:	add    al,dh
  42108d:	in     eax,dx
  42108e:	neg    BYTE PTR [ecx+eax*8]
  421091:	fidiv  WORD PTR [ebx+0x5d]
  421094:	mov    ch,ch
  421096:	pop    ebp
  421097:	ins    DWORD PTR es:[edi],dx
  421098:	sub    DWORD PTR gs:[ecx+0x4cfac6d3],ebx
  42109f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a0:	cmp    BYTE PTR [ecx],ah
  4210a2:	lahf   
  4210a3:	xchg   ebx,eax
  4210a4:	sub    BYTE PTR [edx],bh
  4210a6:	jmp    0x1756:0xcbe57789
  4210ad:	out    0x3b,al
  4210af:	dec    ebx
  4210b0:	fidivr WORD PTR gs:[eax]
  4210b3:	(bad)  [eax+eax*1]
  4210b6:	stos   BYTE PTR es:[edi],al
  4210b7:	adc    edi,esi
  4210b9:	imul   dx
  4210bc:	mov    bh,0xff
  4210be:	mov    ah,0x0
  4210c0:	add    BYTE PTR [esi-0x29],ah
  4210c3:	out    0x3e,eax
  4210c5:	or     ax,0x4a24
  4210c9:	mov    di,0xfe36
  4210cd:	jno    0x42109c
  4210cf:	inc    esp
  4210d0:	push   edi
  4210d1:	movntps XMMWORD PTR [eax-0x2],xmm0
  4210d5:	xor    ch,BYTE PTR [ebp+0x3a0c857d]
  4210db:	rol    DWORD PTR [edi+0x1080041],0x44
  4210e2:	and    al,0x7c
  4210e4:	sub    edi,esp
  4210e6:	jmp    esp
  4210e8:	push   DWORD PTR [edx+0x1d]
  4210eb:	or     esp,ebp
  4210ed:	jo     0x421113
  4210ef:	inc    eax
  4210f0:	fwait
  4210f1:	jne    0x421143
  4210f3:	xchg   ebx,eax
  4210f4:	imul   esp,DWORD PTR [eax],0xc
  4210f7:	mov    ds:0x1be8006c,eax
  4210fc:	mov    esi,0x8313fffb
  421101:	mov    esp,0xfd903874
  421106:	jmp    0xc:0xc2bc1206
  42110d:	push   0x1
  42110f:	ja     0x4210d0
  421111:	or     al,0xe8
  421113:	inc    esi
  421114:	ret    0xfffc
  421117:	je     0x421118
  421119:	mov    esi,0xfbcf6f56
  42111e:	jbe    0x4210a4
  421120:	(bad)  
  421121:	xor    BYTE PTR [eax+0x44f2e632],ch
  421127:	call   0xbb090e43
  42112c:	arpl   WORD PTR [edi-0x53d662c0],ax
  421132:	add    eax,0xa7e0816b
  421137:	mov    ebx,0x53c57684
  42113c:	addr16 (bad) 
  42113e:	call   DWORD PTR [eax-0x60]
  421141:	pop    ss
  421142:	add    BYTE PTR [eax],0xb9
  421145:	xchg   ecx,eax
  421146:	sub    bl,0xa9
  421149:	adc    BYTE PTR [eax],al
  42114b:	add    dh,ch
  42114d:	push   ebx
  42114e:	out    dx,eax
  42114f:	mov    edi,0x7b7569f2
  421154:	mov    ecx,0x85d676f9
  421159:	mov    esi,DWORD PTR [ebp+0x401872ff]
  42115f:	vpmuludq ymm5,ymm6,ymm7
  421164:	adc    al,0x69
  421166:	add    BYTE PTR [edi-0x7fb2df],al
  42116c:	push   edx
  42116d:	sub    DWORD PTR [ecx-0x7d],edi
  421170:	sub    DWORD PTR [ebp-0x5d62fffd],0x2925237f
  42117a:	add    BYTE PTR [eax],al
  42117c:	pop    edx
  42117d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42117e:	fisttp WORD PTR [ebx+0x299d]
  421184:	pushf  
  421185:	sub    DWORD PTR [eax],eax
  421187:	mov    DWORD PTR [esi+0x19],esp
  42118a:	ja     0x42118a
  42118c:	and    DWORD PTR [eax-0x22e7ab05],esp
  421192:	fistp  WORD PTR [ebx]
  421194:	outs   dx,DWORD PTR ds:[esi]
  421195:	mov    al,ds:0xf75f03cf
  42119a:	cmp    eax,0x20b943
  42119f:	std    
  4211a0:	lea    ebp,[ebp-0x14e6f3c0]
  4211a6:	add    DWORD PTR [eax],eax
  4211a8:	add    BYTE PTR [ebp+0x7ebf7402],bl
  4211ae:	(bad)  
  4211af:	ss call 0xe64e:0x24e7a8ca
  4211b7:	ret    0x831b
  4211ba:	pop    ds
  4211bb:	out    0x3,al
  4211bd:	sbb    al,dh
  4211bf:	ret    0x1413
  4211c2:	(bad)  
  4211c3:	retf   0x140b
  4211c6:	or     ah,BYTE PTR [edx-0x46]
  4211c9:	mov    dh,0x8b
  4211cb:	mov    cl,0xf7
  4211cd:	xchg   ecx,eax
  4211ce:	shl    DWORD PTR [ecx+0x33],cl
  4211d1:	add    BYTE PTR [edx-0x4e7eda73],0x3e
  4211d8:	add    BYTE PTR [ecx+0x19],0x45
  4211dc:	xor    dh,0xde
  4211df:	(bad)  
  4211e0:	add    ebx,DWORD PTR [eax-0x62fe5782]
  4211e6:	add    ah,BYTE PTR [edi-0x1c]
  4211e9:	pop    edx
  4211ea:	xchg   DWORD PTR [edx+0x445a7edf],esp
  4211f0:	add    ebx,DWORD PTR [ebp-0x22fd63fe]
  4211f6:	sub    al,BYTE PTR [ebp+eiz*1+0x67731a39]
  4211fd:	jle    0x421241
  4211ff:	out    0x3,al
  421201:	popf   
  421202:	pop    edx
  421203:	dec    ebx
  421204:	add    ebx,DWORD PTR [ebp+0x18cdff02]
  42120a:	sbb    ah,ch
  42120c:	xchg   ecx,eax
  42120d:	add    BYTE PTR [esi-0x21],cl
  421210:	adc    BYTE PTR ds:0x13bf029d,al
  421216:	neg    BYTE PTR [ecx]
  421218:	int    0x23
  42121a:	mov    dl,BYTE PTR [esi-0x1541378d]
  421220:	mov    ebp,0xffeebe98
  421225:	sbb    BYTE PTR [edx],dl
  421227:	aas    
  421228:	dec    edi
  421229:	pop    esp
  42122a:	in     eax,0xe5
  42122c:	das    
  42122d:	cmp    DWORD PTR [esi+eax*8],ebp
  421230:	and    edx,ecx
  421232:	push   cs
  421233:	and    bl,ah
  421235:	mov    DWORD PTR [edi+0x16],edi
  421238:	and    BYTE PTR [ebp-0x9407b47],0x35
  42123f:	inc    ebx
  421240:	mov    dh,0x8f
  421242:	mov    al,ds:0x57620002
  421247:	aas    
  421248:	(bad)  
  421249:	call   0x60b4d2ac
  42124e:	and    dl,BYTE PTR [edi+eax*1+0x4394d365]
  421255:	push   esi
  421256:	and    al,0x9
  421258:	mov    DWORD PTR [ebp-0x52d71a7e],esp
  42125e:	jp     0x421251
  421260:	cld    
  421261:	mov    ah,0x9a
  421263:	mov    edx,DWORD PTR [ebx+0xd]
  421266:	popf   
  421267:	mov    ecx,ebp
  421269:	inc    ecx
  42126a:	ret    
  42126b:	(bad)  
  42126e:	and    eax,0xff7359
  421273:	jg     0x421209
  421275:	punpckldq mm2,DWORD PTR [ebp-0x1b]
  421279:	adc    ecx,DWORD PTR [esi]
  42127b:	adc    al,0xd
  42127d:	mov    DWORD PTR [ebp+0x2f88e53a],ebx
  421283:	jns    0x421205
  421285:	inc    ebx
  421286:	idiv   BYTE PTR [edi-0x7b]
  421289:	mov    edi,0x4340a575
  42128e:	or     eax,0x55fd19ae
  421293:	cmc    
  421294:	hlt    
  421295:	out    0xaf,eax
  421297:	je     0x4212b0
  421299:	cld    
  42129a:	into   
  42129b:	adc    ah,ch
  42129d:	sbb    eax,DWORD PTR [eax]
  42129f:	int3   
  4212a0:	mov    eax,ds:0x852bfea2
  4212a5:	js     0x4212cb
  4212a7:	sti    
  4212a8:	add    al,0xb
  4212aa:	test   BYTE PTR [edx+0x2dffffff],cl
  4212b0:	lods   al,BYTE PTR ds:[esi]
  4212b1:	cld    
  4212b2:	push   DWORD PTR [edx+edi*8+0x5402480]
  4212b9:	add    BYTE PTR [eax],al
  4212bb:	lds    esi,FWORD PTR [eax+0xa]
  4212be:	sbb    DWORD PTR [eax+0x21],0xffffff94
  4212c2:	add    BYTE PTR [esp+eax*1+0x5e310f00],dh
  4212c9:	std    
  4212ca:	inc    DWORD PTR [edx+edi*8+0x4102480]
  4212d1:	add    BYTE PTR [eax],al
  4212d3:	xchg   esp,eax
  4212d4:	jp     0x4212e0
  4212d6:	add    DWORD PTR [eax],0x28
  4212d9:	and    BYTE PTR [eax+0x48400],ch
  4212df:	sgdtd  [edi-0x3]
  4212e3:	push   DWORD PTR [ebp+eiz*4-0x4]
  4212e7:	pop    es
  4212e8:	je     0x4212ee
  4212ea:	out    0x47,eax
  4212ec:	mov    ebp,DWORD PTR [edi+0x20]
  4212ef:	adc    cl,cl
  4212f1:	jg     0x421313
  4212f3:	sbb    al,0x37
  4212f5:	add    al,0x0
  4212f7:	push   eax
  4212f8:	mov    ecx,0xf468203f
  4212fd:	jb     0x42133f
  4212ff:	and    al,0xe8
  421301:	jmp    0x421376
  421303:	scas   al,BYTE PTR es:[edi]
  421304:	xor    al,0x4
  421306:	aaa    
  421307:	inc    esp
  421308:	push   eax
  421309:	adc    al,0xb
  42130b:	test   edx,ebp
  42130d:	(bad)  
  42130e:	(bad)  
  42130f:	dec    DWORD PTR [esi-0x5fa8dfb6]
  421315:	popa   
  421316:	jo     0x421320
  421318:	popf   
  421319:	in     eax,dx
  42131a:	cli    
  42131b:	or     al,0x20
  42131d:	cmp    BYTE PTR [ecx],al
  42131f:	add    BYTE PTR [ebp+0x210cfafd],bl
  421325:	bound  eax,QWORD PTR [ebx]
  421327:	add    BYTE PTR [ebp-0x52dc6054],bl
  42132d:	sub    DWORD PTR [edi],ecx
  42132f:	test   dh,dl
  421331:	sub    DWORD PTR [eax],eax
  421333:	add    BYTE PTR [esi],dl
  421335:	and    BYTE PTR [edi-0x3b9ee76],dh
  42133b:	add    BYTE PTR [eax],al
  42133d:	popf   
  42133e:	sub    DWORD PTR [ecx-0x4c7f1c78],esi
  421344:	add    edx,DWORD PTR [esi+ebx*8]
  421347:	out    0xf,eax
  421349:	sbb    BYTE PTR [edx-0x68],ch
  42134c:	sahf   
  42134d:	call   0xdd29:0xdd15f42e
  421354:	xor    dl,al
  421356:	sub    DWORD PTR [eax],eax
  421358:	or     eax,0x3db18
  42135d:	popf   
  42135e:	enter  0xb94,0x20
  421362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421363:	out    0x97,eax
  421365:	popf   
  421366:	sub    DWORD PTR [eax],eax
  421368:	push   eax
  421369:	push   ss
  42136a:	lock imul di,WORD PTR [ecx+eax*8-0x3c],0x5243
  421372:	loopne 0x4212f8
  421374:	mov    edi,0xfcdf9d9a
  421379:	inc    edx
  42137a:	lock sar BYTE PTR [edi+0x38163cdd],cl
  421381:	pop    ebx
  421382:	adc    BYTE PTR [ebp+0x299da7],al
  421388:	mov    ecx,esp
  42138a:	inc    esp
  42138b:	cmp    bh,0x1a
  42138e:	sub    DWORD PTR [ebx+0x6b02b983],ecx
  421394:	add    ebx,DWORD PTR [ebp+0x6b035102]
  42139a:	mov    esp,DWORD PTR [ebp+0x5ede2e8a]
  4213a0:	add    eax,DWORD PTR [eax]
  4213a2:	popf   
  4213a3:	add    dh,BYTE PTR [eax+0x57]
  4213a6:	mov    esi,0x9d03e686
  4213ab:	mov    DWORD PTR [edx-0x19],edi
  4213ae:	sub    al,BYTE PTR [edx]
  4213b0:	out    0x3,eax
  4213b2:	lds    esp,FWORD PTR [esi-0x7462fc77]
  4213b8:	xchg   esi,eax
  4213b9:	xchg   al,cl
  4213bb:	lea    eax,ds:0x218ba08d
  4213c1:	adc    BYTE PTR [edx+ecx*8-0x1e],dh
  4213c5:	xchg   esi,eax
  4213c6:	xor    eax,0x15f4318b
  4213cb:	add    DWORD PTR ds:0x6dfeea21,ebx
  4213d1:	fstp   DWORD PTR [edx]
  4213d3:	mov    edi,0x8a82f50a
  4213d8:	and    DWORD PTR [ecx],0xffffff81
  4213db:	lods   eax,DWORD PTR ds:[esi]
  4213dc:	xchg   BYTE PTR ds:[edi],bh
  4213df:	adc    eax,0xdef6834d
  4213e4:	cmc    
  4213e5:	add    esi,ecx
  4213e7:	enter  0xc43d,0x9e
  4213eb:	xor    BYTE PTR [ecx-0x587062f5],0x8e
  4213f2:	(bad)  
  4213f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f5:	sub    edx,DWORD PTR [edi]
  4213f7:	inc    ebx
  4213f8:	out    0x3,al
  4213fa:	push   ds
  4213fb:	inc    ebx
  4213fc:	in     eax,0x90
  4213fe:	sub    bl,BYTE PTR [eax]
  421400:	or     eax,0xb9e54520
  421405:	sbb    DWORD PTR [eax],eax
  421407:	rol    BYTE PTR [edi+0x2adee7aa],1
  42140d:	dec    DWORD PTR [esi]
  42140f:	pop    esi
  421410:	adc    eax,0xca2187fc
  421415:	and    edi,DWORD PTR ds:0xe8ff3d69
  42141b:	sahf   
  42141c:	pushf  
  42141d:	sub    BYTE PTR [ecx-0x2941b056],ah
  421423:	mov    cl,0xfa
  421425:	mov    edi,0xe703c16a
  42142a:	pop    ss
  42142b:	adc    BYTE PTR [esi],0xfc
  42142e:	push   ds
  42142f:	mov    ecx,edx
  421431:	mov    ds:0xb316b2af,al
  421436:	int    0x1e
  421438:	push   ss
  421439:	cld    
  42143a:	jmp    0x97e4f1b5
  42143f:	call   0x88bb:0x98595db6
  421446:	mov    esp,ds
  421448:	inc    ebx
  421449:	or     ebp,ecx
  42144b:	adc    DWORD PTR [ecx-0x60e01add],0x3
  421452:	jmp    0xf565a60a
  421457:	loopne 0x421418
  421459:	pop    es
  42145a:	call   0xdb52aa7
  42145f:	jno    0x42147e
  421461:	rcr    DWORD PTR [ecx-0x6d],0x16
  421465:	sub    DWORD PTR [ecx],0x5
  421468:	cld    
  421469:	xor    BYTE PTR [ecx],ch
  42146b:	add    BYTE PTR [esi-0x41],al
  42146e:	add    edx,edx
  421470:	fimul  WORD PTR [esi]
  421472:	xlat   BYTE PTR ds:[ebx]
  421473:	sub    ebp,DWORD PTR [ebp-0x728dacfe]
  421479:	les    edx,FWORD PTR [eax-0x26]
  42147c:	xchg   esp,ecx
  42147e:	pop    edx
  42147f:	stc    
  421480:	adc    eax,0xa6a48906
  421485:	jge    0x42149e
  421487:	add    BYTE PTR [ebp-0x376ffaa],ch
  42148d:	or     BYTE PTR [eax+0x52689f01],dh
  421493:	push   edi
  421494:	jg     0x4214b9
  421496:	ins    BYTE PTR es:[edi],dx
  421497:	adc    dh,BYTE PTR [esi+edi*8+0x51c7534e]
  42149e:	sti    
  42149f:	jne    0x421495
  4214a1:	repz jno 0x4214b0
  4214a4:	mov    bh,0x66
  4214a6:	in     eax,0xfd
  4214a8:	hlt    
  4214a9:	add    bl,bh
  4214ab:	xlat   BYTE PTR ds:[ebx]
  4214ac:	outs   dx,DWORD PTR ds:[esi]
  4214ad:	icebp  
  4214ae:	aaa    
  4214af:	repz xchg edx,eax
  4214b1:	and    al,0x89
  4214b3:	inc    esi
  4214b4:	lds    edx,FWORD PTR [eax-0x1c]
  4214b7:	(bad)  
  4214b8:	pop    eax
  4214b9:	idiv   ebx
  4214bb:	mov    DWORD PTR [ecx-0x1e],edi
  4214be:	aaa    
  4214bf:	ret    
  4214c0:	cwde   
  4214c1:	adc    al,0x4f
  4214c3:	push   ebx
  4214c4:	push   0x4e
  4214c6:	sti    
  4214c7:	jne    0x42148d
  4214c9:	repz jno 0x4214d8
  4214cc:	xchg   DWORD PTR [esi-0x1b],esp
  4214cf:	std    
  4214d0:	add    BYTE PTR [eax+eax*1-0x41b02805],al
  4214d7:	jo     0x4214e5
  4214d9:	add    edi,DWORD PTR [ebx-0x8]
  4214dc:	call   0x3cb0ef
  4214e1:	xchg   esi,eax
  4214e2:	mov    esi,0x32ff16e7
  4214e7:	clc    
  4214e8:	mov    edi,DWORD PTR [ecx]
  4214ea:	or     BYTE PTR [eax+0x487651c],cl
  4214f0:	mov    eax,DWORD PTR [ecx]
  4214f2:	adc    BYTE PTR [ebp+0x6c873848],al
  4214f8:	or     ah,ah
  4214fa:	(bad)  
  4214fb:	pop    edx
  4214fc:	pop    esi
  4214fd:	pop    edi
  4214fe:	(bad)  
  4214ff:	mov    esi,0x89299d0c
  421504:	dec    ebx
  421505:	jns    0x421528
  421507:	sub    BYTE PTR [ebx-0x7fe203ba],ch
  42150d:	and    eax,0xcf039415
  421512:	jmp    0x24af2240
  421517:	xchg   ebp,eax
  421518:	and    ebx,DWORD PTR [ecx-0x6edc68e4]
  42151e:	xor    DWORD PTR [ebp+0x412cfafc],esi
  421524:	pop    es
  421525:	popf   
  421526:	into   
  421527:	xchg   bl,ch
  421529:	sbb    al,0x2e
  42152b:	add    eax,DWORD PTR [edx]
  42152d:	popf   
  42152e:	sub    DWORD PTR [edi+0x1bf7255],ebp
  421534:	push   0x6e93cd00
  421539:	test   BYTE PTR [esi],dl
  42153b:	bound  ebp,QWORD PTR [ebx]
  42153d:	mov    ds:0x301a740c,al
  421542:	(bad)  
  421543:	mov    ds:0x687607c2,al
  421548:	or     al,BYTE PTR [ebx+eiz*4+0x1000002a]
  42154f:	iret   
  421550:	add    edi,esi
  421552:	call   0x1aa4:0x84dd2b8c
  421559:	mov    al,ah
  42155b:	retf   
  42155c:	jle    0x4215a8
  42155e:	xor    DWORD PTR [esp+ecx*1+0x3a99d00],0xdbe9ae50
  421569:	pop    edx
  42156a:	xchg   ebp,eax
  42156b:	or     al,0x75
  42156d:	mov    edi,0x4ffee91e
  421572:	(bad)  
  421573:	sub    ch,BYTE PTR [eax+0x402952ff]
  421579:	mov    ah,dl
  42157b:	add    dh,bh
  42157d:	mov    bl,0x17
  42157f:	mov    ebp,0x7482c1a
  421584:	push   ss
  421585:	sbb    eax,0x87dd421e
  42158a:	clc    
  42158b:	add    edi,esp
  42158d:	add    edx,DWORD PTR [esi]
  42158f:	mov    ebp,0x8d27b3fa
  421594:	imul   BYTE PTR [ebx]
  421596:	aam    0x6
  421598:	out    dx,al
  421599:	sbb    al,0x0
  42159b:	push   ds
  42159c:	inc    edx
  42159d:	cmc    
  42159e:	xchg   DWORD PTR [edx+eax*1],esp
  4215a1:	out    0x3,eax
  4215a3:	mov    dl,0xb5
  4215a5:	ficom  DWORD PTR [ebx+ebx*4-0x15ebb47f]
  4215ac:	adc    ah,dh
  4215ae:	rep ins BYTE PTR es:[edi],dx
  4215b0:	retf   
  4215b1:	sbb    DWORD PTR [ecx+0x202b856d],esi
  4215b7:	mov    edx,0xc91cda89
  4215bc:	jge    0x421564
  4215be:	xchg   edi,eax
  4215bf:	xchg   edi,eax
  4215c0:	adc    edx,DWORD PTR [ebx]
  4215c2:	and    BYTE PTR [ecx+0x72f21eec],bh
  4215c8:	add    ah,BYTE PTR [ebx+eax*2+0x2f]
  4215cc:	div    DWORD PTR [ebx-0x3a]
  4215cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d0:	sub    DWORD PTR [ebx+0x8],ebp
  4215d3:	cwde   
  4215d4:	adc    ch,BYTE PTR [edi]
  4215d6:	sub    eax,0x8ee61293
  4215db:	pop    ds
  4215dc:	add    esp,DWORD PTR [ebp+0x1c]
  4215df:	cmp    DWORD PTR [ebx-0x2],0x5097e3c3
  4215e6:	sub    BYTE PTR [eax],al
  4215e8:	jle    0x42158d
  4215ea:	pop    ds
  4215eb:	imul   ebx,DWORD PTR [eax+0xed78050],0xc942b33d
  4215f5:	dec    DWORD PTR [esi+0x2a39029e]
  4215fb:	xor    esi,ecx
  4215fd:	push   eax
  4215fe:	adc    DWORD PTR [eax],eax
  421600:	add    edx,DWORD PTR [edx]
  421602:	cld    
  421603:	jmp    0x23ddb33
  421608:	idiv   dl
  42160a:	cld    
  42160b:	push   cs
  42160c:	(bad)  
  42160d:	pop    ds
  42160e:	(bad)  
  42160f:	call   0xe9c493b2
  421614:	mov    eax,0x1661fc0e
  421619:	rol    BYTE PTR [esi+0x74],cl
  42161c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42161d:	sbb    dh,BYTE PTR [esi]
  42161f:	jo     0x4215ff
  421621:	std    
  421622:	mov    ah,BYTE PTR [edx*4-0x681dc6d7]
  421629:	push   cs
  42162a:	mov    dh,0xbf
  42162c:	mov    al,ds:0x1c740002
  421631:	adc    bh,dl
  421633:	mov    esi,0x291789b6
  421638:	loopne 0x4215ce
  42163a:	stc    
  42163b:	jns    0x4215dd
  42163d:	sbb    ebx,DWORD PTR [eax]
  42163f:	je     0x42161d
  421641:	or     eax,0xfabfce7
  421646:	cld    
  421647:	push   eax
  421648:	xchg   DWORD PTR [eax],edx
  42164a:	cld    
  42164b:	jmp    0x87419b65
  421650:	xchg   BYTE PTR [esi],cl
  421652:	xchg   ecx,esp
  421654:	pop    esi
  421655:	enter  0x7372,0x6b
  421659:	push   ecx
  42165a:	pop    esp
  42165b:	cmovp  ecx,DWORD PTR [eax-0x3f]
  42165f:	in     eax,dx
  421660:	sahf   
  421661:	mov    ch,0x88
  421663:	dec    ebp
  421664:	add    BYTE PTR [eax],ah
  421666:	sbb    eax,0x29ee8f3
  42166b:	push   ecx
  42166c:	sbb    ch,BYTE PTR [edx+0x3b0036b7]
  421672:	or     DWORD PTR [ecx+ebx*2-0x64],esi
  421676:	dec    ebx
  421677:	add    al,0x75
  421679:	push   ebx
  42167a:	jp     0x42162d
  42167c:	adc    BYTE PTR [edx-0x13],bh
  42167f:	sti    
  421680:	call   0x3df541
  421685:	cmp    eax,0x4177d64a
  42168a:	cs pop ecx
  42168c:	(bad)  
  42168d:	adc    dl,BYTE PTR [esi]
  42168f:	xchg   DWORD PTR [edi+0x28],ebx
  421692:	jp     0x4216d5
  421694:	(bad)  
  421695:	xor    al,0x55
  421697:	dec    esp
  421698:	push   eax
  421699:	pushf  
  42169a:	or     cl,BYTE PTR [edx]
  42169c:	(bad)  
  42169d:	sti    
  42169e:	aaa    
  42169f:	xlat   BYTE PTR ds:[ebx]
  4216a0:	mov    ecx,0x5ea
  4216a5:	mov    DWORD PTR [edx-0x143401f4],eax
  4216ab:	test   BYTE PTR [eax],bl
  4216ad:	mov    ah,0x3f
  4216af:	jno    0x4216ab
  4216b1:	outs   dx,DWORD PTR ds:[esi]
  4216b2:	je     0x4216bc
  4216b4:	cmp    edx,DWORD PTR [edi]
  4216b6:	add    DWORD PTR [ecx],0x6a3e8
  4216bc:	add    BYTE PTR ds:0x5938084c,bh
  4216c2:	(bad)  
  4216c3:	jae    0x4216ce
  4216c5:	dec    ecx
  4216c6:	inc    esp
  4216c7:	or     al,0x50
  4216c9:	add    BYTE PTR [edi*2-0x7fe400f6],bl
  4216d0:	inc    ebx
  4216d1:	or     bh,bl
  4216d3:	(bad)  
  4216d4:	jo     0x4216df
  4216d6:	mov    ah,0xde
  4216d8:	int3   
  4216d9:	rol    DWORD PTR [esp+eax*1+0x4a7c5f85],cl
  4216e0:	push   edi
  4216e1:	leave  
  4216e2:	mov    dh,0xf
  4216e4:	cld    
  4216e5:	mov    al,BYTE PTR [edx-0x62000b77]
  4216eb:	sub    eax,0x365d830d
  4216f0:	add    DWORD PTR [eax+0x62],edx
  4216f3:	das    
  4216f4:	in     al,0x11
  4216f6:	fstp   QWORD PTR [ecx]
  4216f8:	(bad)  
  4216f9:	lds    eax,FWORD PTR [ebp+0x43]
  4216fc:	or     bh,ch
  4216fe:	dec    edx
  4216ff:	js     0x421729
  421701:	outs   dx,DWORD PTR ds:[esi]
  421702:	jmp    edi
  421704:	sbb    DWORD PTR [eax-0x7750229d],ecx
  42170a:	inc    ecx
  42170b:	popf   
  42170c:	mov    eax,ds:0xa19c9d07
  421711:	or     ebx,DWORD PTR [ebp-0x60e8db66]
  421717:	sbb    DWORD PTR [eax],eax
  421719:	push   ecx
  42171a:	imul   esp,DWORD PTR [esi+0x2108e94f],0x16
  421721:	mov    ah,BYTE PTR [edx+0x9]
  421724:	sub    BYTE PTR ds:0x2163105,dl
  42172a:	das    
  42172b:	sbb    eax,DWORD PTR [eax]
  42172d:	add    BYTE PTR [eax],al
  42172f:	ja     0x421746
  421731:	mov    al,0x69
  421733:	popf   
  421734:	xchg   esi,eax
  421735:	mov    edi,ss
  421737:	push   ds
  421738:	push   edx
  421739:	push   ss
  42173a:	out    0x53,eax
  42173c:	jne    0x421757
  42173e:	cld    
  42173f:	and    BYTE PTR [edx-0x67],bl
  421742:	adc    al,0x16
  421744:	pusha  
  421745:	mov    bl,0x67
  421747:	and    eax,0x4fffc2c0
  42174c:	sub    DWORD PTR [esi-0x67],0xbf7d199d
  421753:	xchg   edx,eax
  421754:	scas   al,BYTE PTR es:[edi]
  421755:	inc    ebx
  421756:	sbb    DWORD PTR [ebp+0x16],0xfffffffd
  42175a:	xor    BYTE PTR [ebp-0x1],bl
  42175d:	mov    BYTE PTR [eax],al
  42175f:	inc    esp
  421760:	pop    DWORD PTR [eax]
  421762:	add    BYTE PTR [ebp-0x7b808bfe],bl
  421768:	or     eax,0x258195d
  42176d:	out    0xc3,eax
  42176f:	jecxz  0x421706
  421771:	dec    edi
  421772:	mov    edx,0x4aa14715
  421777:	pop    ebp
  421778:	mov    ch,0x71
  42177a:	sub    BYTE PTR ds:0x36832e26,bl
  421780:	add    ch,cl
  421782:	add    ebx,DWORD PTR [ebp+0x6c0bab7b]
  421788:	cmp    DWORD PTR [eax+esi*4+0x7cabe1b],esi
  42178f:	fs inc ecx
  421791:	xchg   edx,eax
  421792:	add    eax,0x97fa1a00
  421797:	mov    ebp,ds
  421799:	sbb    DWORD PTR [edx+0x17],edx
  42179c:	adc    DWORD PTR [edi],ecx
  42179e:	push   0x44
  4217a0:	cdq    
  4217a1:	xchg   BYTE PTR [ebp+0x4],cl
  4217a4:	popf   
  4217a5:	add    dh,BYTE PTR [edi+ecx*4-0x42]
  4217a9:	jmp    0x2be6:0xf2bebfa4
  4217b0:	sbb    BYTE PTR [edi],ah
  4217b2:	int    0x18
  4217b4:	adc    eax,0xd2bf293
  4217b9:	gs out 0x3,al
  4217bc:	sbb    DWORD PTR [edx+0x3a],eax
  4217bf:	lahf   
  4217c0:	adc    eax,0x1e86da8b
  4217c5:	out    0x4e,al
  4217c7:	add    ebx,DWORD PTR [ebp+0x5e873702]
  4217cd:	out    0xf6,al
  4217cf:	mov    bl,0xc2
  4217d1:	inc    BYTE PTR [ebx+eax*1-0x63]
  4217d5:	xchg   BYTE PTR [esi-0xd861971],ah
  4217db:	fbld   TBYTE PTR [esi+0x6af4ff7f]
  4217e1:	repnz xchg ch,dh
  4217e4:	(bad)
  4217e9:	push   cs
  4217ea:	cld    
  4217eb:	ficom  WORD PTR gs:[eax-0x6e7393e9]
  4217f2:	or     cl,BYTE PTR [esi+0x4c]
  4217f5:	es jl  0x421780
  4217f8:	add    BYTE PTR [esi+ecx*1+0x6d375155],dh
  4217ff:	std    
  421800:	and    DWORD PTR ss:[edx+0x1b9edd23],esp
  421807:	and    esi,DWORD PTR [edx-0x5]
  42180a:	add    eax,0x6222983
  42180f:	mov    DWORD PTR [edx-0x3eb9845e],esp
  421815:	pop    ss
  421816:	push   es
  421817:	mov    DWORD PTR [edx-0xeb8845e],ebp
  42181d:	daa    
  42181e:	sti    
  42181f:	mov    BYTE PTR [ecx-0x1abf7a5e],ch
  421825:	mov    cl,0x0
  421827:	(bad)  
  421828:	sub    eax,0xddfefdfd
  42182d:	or     eax,0x86620fe2
  421832:	and    eax,0xe8acf30
  421837:	mov    dh,0xd7
  421839:	mov    al,ds:0xdd6c0002
  42183e:	loope  0x421857
  421840:	scas   eax,DWORD PTR es:[edi]
  421841:	mov    eax,ds:0x2c204002
  421846:	adc    eax,0xf9bd2d88
  42184b:	pop    esp
  42184c:	aas    
  42184d:	and    DWORD PTR es:[edx-0x55],ebx
  421851:	popf   
  421852:	add    dl,BYTE PTR [ebx+0x62]
  421855:	jne    0x4217d9
  421857:	jecxz  0x421859
  421859:	sbb    al,0x81
  42185b:	call   0x5cf9189c
  421860:	push   ebx
  421861:	call   0x3e584e
  421866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421867:	fidiv  WORD PTR [edi-0x22]
  42186a:	test   BYTE PTR [ecx],al
  42186c:	xchg   eax,ebx
  42186e:	stc    
  42186f:	leave  
  421870:	or     eax,DWORD PTR [esp+edx*4-0x3efffff9]
  421877:	push   0x20
  421879:	adc    ch,cl
  42187b:	dec    edx
  42187c:	and    BYTE PTR [eax],dl
  42187e:	in     al,dx
  42187f:	int    0x67
  421881:	add    BYTE PTR [ecx*4-0xb47f044],dh
  421888:	cld    
  421889:	inc    DWORD PTR [edx+edi*2+0x70]
  42188d:	and    al,0x58
  42188f:	fnstenv [ebx+0x6a01346c]
  421895:	and    DWORD PTR [edi+0x2c6a4ccc],edi
  42189b:	push   eax
  42189c:	in     al,0x69
  42189e:	mov    esi,0xb4840006
  4218a3:	add    eax,0xf4e084
  4218a8:	add    BYTE PTR [ebx+0x1be4514b],cl
  4218ae:	pusha  
  4218af:	push   es
  4218b0:	add    BYTE PTR [esp+esi*1-0xb2f7bfc],al
  4218b7:	add    BYTE PTR [eax],al
  4218b9:	lea    ebx,[eax-0x3d17efde]
  4218bf:	arpl   sp,di
  4218c1:	inc    DWORD PTR [eax]
  4218c3:	pop    esi
  4218c4:	sti    
  4218c5:	xchg   dh,al
  4218c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c8:	pop    eax
  4218c9:	imul   edx,DWORD PTR [ebx+0xc],0xc400d628
  4218d0:	mov    WORD PTR [edi+ecx*1-0xb16063],?
  4218d7:	mov    ds:0xc143871a,al
  4218dc:	sub    DWORD PTR [eax+0x79be7],esi
  4218e2:	add    BYTE PTR [esi],dl
  4218e4:	mov    bh,BYTE PTR [edi-0xb]
  4218e7:	or     DWORD PTR [eax],edi
  4218e9:	adc    eax,0xaa09c173
  4218ee:	imul   eax,DWORD PTR [edx],0x47152849
  4218f4:	sbb    al,BYTE PTR [eax]
  4218f6:	push   esi
  4218f7:	adc    eax,0x4510dc66
  4218fc:	inc    esp
  4218fd:	pusha  
  4218fe:	std    
  4218ff:	push   edx
  421900:	call   0x8405:0x199a2394
  421907:	sbb    eax,0x1d00001a
  42190c:	or     BYTE PTR [bx+si],al
  42190f:	test   eax,0x81438773
  421914:	or     DWORD PTR [eax+0x8cb9e7],esi
  42191a:	add    BYTE PTR [esi],ah
  42191c:	or     bh,BYTE PTR [ebp+esi*8-0x77]
  421920:	sub    edx,DWORD PTR ds:0xaa29c173
  421926:	imul   eax,DWORD PTR [eax],0xdd286873
  42192c:	aam    0x19
  42192e:	add    BYTE PTR [esi+0x25],dl
  421931:	out    0xdf,al
  421933:	adc    ch,dh
  421935:	(bad)  [ebx-0x3]
  421938:	loop   0x4218d3
  42193a:	xchg   edi,eax
  42193b:	and    ebp,DWORD PTR [edx+0x204b8c19]
  421941:	into   
  421942:	fist   WORD PTR [ebx]
  421944:	mov    ch,0x27
  421946:	mov    edi,?
  421948:	ret    0xf3bf
  42194b:	mov    dl,ah
  42194d:	add    dh,BYTE PTR [edi]
  42194f:	stos   BYTE PTR es:[edi],al
  421950:	inc    edx
  421951:	scas   eax,DWORD PTR es:[edi]
  421952:	mov    cs,WORD PTR [ebp-0x2d]
  421955:	add    ah,bh
  421957:	jg     0x42193b
  421959:	xchg   esi,eax
  42195a:	fadd   DWORD PTR [esi-0x4c291922]
  421960:	jp     0x42199b
  421962:	repnz add ebx,DWORD PTR [ebp-0x77808989]
  421969:	xchg   esi,eax
  42196a:	int3   
  42196b:	adc    al,0xee
  42196d:	out    0xf6,al
  42196f:	lods   eax,DWORD PTR ds:[esi]
  421970:	add    al,0x92
  421972:	mov    ecx,0xe629102b
  421977:	add    ecx,ebx
  421979:	jp     0x42191d
  42197b:	fild   QWORD PTR [ebp+0x5075441a]
  421981:	or     esp,DWORD PTR [esi-0x68]
  421984:	jle    0x421981
  421986:	out    0x8f,al
  421988:	sahf   
  421989:	ja     0x4219b4
  42198b:	sub    DWORD PTR [eax],eax
  42198d:	test   eax,0x462bd90b
  421992:	imul   ebx,DWORD PTR [edx*1+0x750c1acd],0x20
  42199a:	or     ebx,ecx
  42199c:	inc    ebx
  42199d:	jns    0x42194b
  42199f:	mov    eax,ds:0x28acff88
  4219a4:	add    BYTE PTR [ebp+0x1d2861b5],bl
  4219aa:	es out dx,al
  4219ac:	add    BYTE PTR [esi],0xe6
  4219af:	jmp    0xeafc:0x5b819d03
  4219b6:	or     al,BYTE PTR [esi+0x35b44c03]
  4219bc:	add    eax,0x3e79f1c
  4219c1:	popf   
  4219c2:	sbb    bh,dh
  4219c4:	retf   
  4219c5:	retf   0xff0a
  4219c8:	sbb    BYTE PTR [ecx-0x12],dh
  4219cb:	fucompp 
  4219cd:	sahf   
  4219ce:	jns    0x4219a7
  4219d0:	fimul  DWORD PTR [ecx+0x2aeedcca]
  4219d6:	mov    bh,0xfe
  4219d8:	call   0xc585917b
  4219dd:	mov    bh,BYTE PTR [edx-0xd82da7a]
  4219e3:	out    0x93,eax
  4219e5:	xor    al,0xa
  4219e7:	cld    
  4219e8:	ins    DWORD PTR es:[edi],dx
  4219e9:	fdivrp st(6),st
  4219eb:	add    eax,0xffffff9f
  4219ee:	add    al,BYTE PTR [eax]
  4219f0:	je     0x4219f2
  4219f2:	xor    ah,dh
  4219f4:	ud1    esi,DWORD PTR [esi-0x61169411]
  4219fb:	jnp    0x4219ec
  4219fd:	adc    ch,BYTE PTR [eax+0x22462195]
  421a03:	out    0xf,al
  421a05:	xchg   edi,eax
  421a06:	hlt    
  421a07:	popf   
  421a08:	push   eax
  421a09:	inc    ecx
  421a0a:	popf   
  421a0b:	xor    edi,edi
  421a0d:	call   0xcd859c1a
  421a12:	sub    eax,0x907e6822
  421a17:	push   es
  421a18:	jg     0x4219af
  421a1a:	inc    edx
  421a1b:	idiv   edi
  421a1d:	fstp   QWORD PTR [edx-0x611700f2]
  421a23:	jge    0x421a98
  421a25:	lds    eax,FWORD PTR [esi]
  421a27:	and    ch,BYTE PTR [eax+0x6a029e84]
  421a2d:	fsub   QWORD PTR ds:0x3c534f40
  421a33:	mov    bl,0xe7
  421a35:	sar    DWORD PTR [ecx+0x596dfc09],0xf6
  421a3c:	xor    DWORD PTR [eax+0x2a1],0x6e
  421a43:	cli    
  421a44:	rcr    BYTE PTR [si+0x3e],0xfc
  421a49:	imul   eax,DWORD PTR [ecx+0xcc1e451],0x483ffff
  421a53:	push   es
  421a54:	test   dl,al
  421a56:	add    BYTE PTR [ebp+eax*1-0x7d4f9600],dh
  421a5d:	inc    ecx
  421a5e:	or     ah,dl
  421a60:	push   0xa92c5372
  421a65:	aam    0x0
  421a67:	je     0x4219ea
  421a69:	mov    esp,0xfca2f00f
  421a6e:	inc    DWORD PTR [esi+esi*1+0xb521879]
  421a75:	sti    
  421a76:	jne    0x421a14
  421a78:	cmc    
  421a79:	jno    0x421a8f
  421a7b:	pop    esi
  421a7c:	ins    BYTE PTR es:[edi],dx
  421a7d:	dec    edi
  421a7e:	call   0x3ef157
  421a83:	sar    BYTE PTR [esi-0x11a7bf5],0xff
  421a8a:	dec    DWORD PTR [ebp+0x72]
  421a8d:	or     BYTE PTR [ebx+ebx*2-0xc],dh
  421a91:	jno    0x421a9f
  421a93:	push   cs
  421a94:	dec    di
  421a96:	call   0x3ef117
  421a9b:	mov    al,0xbe
  421a9d:	jo     0x421b1c
  421a9f:	in     eax,dx
  421aa0:	jno    0x421aae
  421aa2:	je     0x421aaf
  421aa4:	hlt    
  421aa5:	jno    0x421ab7
  421aa7:	cs addr16 dec edi
  421aaa:	call   0x3ef13f
  421aaf:	cmp    BYTE PTR [esi+0x79696970],0x20
  421ab6:	sub    BYTE PTR [edx+0x41],al
  421ab9:	and    BYTE PTR [edi],cl
  421abb:	add    BYTE PTR [ebp-0x26abe7e5],bl
  421ac1:	aaa    
  421ac2:	adc    DWORD PTR [ecx-0x64],ebp
  421ac5:	xchg   esp,eax
  421ac6:	dec    ecx
  421ac7:	out    0x50,eax
  421ac9:	inc    ebp
  421aca:	adc    esp,edi
  421acc:	sbb    DWORD PTR [ebx-0x6c],ebx
  421acf:	das    
  421ad0:	sub    BYTE PTR [edi+0x1b9f3fe4],cl
  421ad6:	add    al,ch
  421ad8:	xor    BYTE PTR [edi+0x11],bh
  421adb:	cld    
  421adc:	push   ss
  421add:	out    dx,eax
  421ade:	out    0x33,eax
  421ae0:	sub    BYTE PTR [esi+0x199fcfe4],bl
  421ae6:	add    BYTE PTR [eax-0x12],dl
  421ae9:	jno    0x421b39
  421aeb:	sahf   
  421aec:	popf   
  421aed:	sbb    DWORD PTR [eax+0x43],edi
  421af0:	shr    DWORD PTR [eax],0x4b
  421af3:	in     eax,dx
  421af4:	pushf  
  421af5:	sbb    DWORD PTR [eax],eax
  421af7:	mov    DWORD PTR [ebx-0x20],esp
  421afa:	add    BYTE PTR [eax],al
  421afc:	frstor [edx-0x69]
  421aff:	test   bh,0x19
  421b02:	jg     0x421b7f
  421b04:	jns    0x421af3
  421b06:	sbb    ebp,DWORD PTR [ebx+0x46]
  421b09:	leave  
  421b0a:	adc    esp,edi
  421b0c:	mov    es,ecx
  421b0e:	xchg   edi,eax
  421b0f:	popf   
  421b10:	cmp    ebx,ecx
  421b12:	mov    ch,0xe7
  421b14:	ret    0xe7f
  421b17:	cld    
  421b18:	pop    ss
  421b19:	pop    esi
  421b1a:	in     al,0xc
  421b1c:	and    DWORD PTR ss:[ecx],edx
  421b1f:	xor    BYTE PTR [eax],al
  421b21:	add    eax,0x12fd6e7c
  421b26:	ins    DWORD PTR es:[edi],dx
  421b27:	sbb    BYTE PTR [ebx+0x2b],bl
  421b2a:	or     BYTE PTR [esi],cl
  421b2c:	xor    ebp,ebx
  421b2e:	jo     0x421ade
  421b30:	pop    eax
  421b31:	jmp    FWORD PTR es:[edi-0x18fd763f]
  421b38:	mov    dh,0x15
  421b3a:	pop    ss
  421b3b:	jno    0x421b47
  421b3d:	sbb    al,0x17
  421b3f:	cmp    dh,BYTE PTR [ebp+0x7ee79c71]
  421b45:	addr16 push esi
  421b47:	pop    ss
  421b48:	mov    edx,0xb4bd2b8d
  421b4d:	jb     0x421bcc
  421b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b50:	xchg   edi,eax
  421b51:	popa   
  421b52:	jnp    0x421b77
  421b54:	pop    eax
  421b55:	ja     0x421b59
  421b57:	out    0x63,eax
  421b59:	stos   BYTE PTR es:[edi],al
  421b5a:	xchg   esp,eax
  421b5b:	fcmovne st,st(2)
  421b5d:	inc    edi
  421b5e:	dec    edx
  421b5f:	sbb    ecx,esp
  421b61:	jmp    0x6307:0x7a0c2379
  421b68:	adc    cl,BYTE PTR [ecx-0x7a328185]
  421b6e:	mov    ?,WORD PTR [edi+0x1b75a07c]
  421b74:	or     al,0xe3
  421b76:	pop    es
  421b77:	fisttp DWORD PTR [ebx]
  421b79:	shl    DWORD PTR [eax+0x7d96b45d],1
  421b7f:	es xchg edi,eax
  421b81:	stos   DWORD PTR es:[edi],eax
  421b82:	pop    es
  421b83:	ror    DWORD PTR [ebx],cl
  421b85:	add    cl,ch
  421b87:	pop    es
  421b88:	mov    ebx,0xe89cedfb
  421b8d:	sbb    esp,DWORD PTR [edi+0x24113508]
  421b93:	sub    dl,BYTE PTR [ebp+0x2465421b]
  421b99:	adc    ecx,ecx
  421b9b:	jl     0x421bc6
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    ebx
  421b9f:	inc    esp
  421ba0:	jmp    0x684:0xfa7b6e03
  421ba7:	out    dx,al
  421ba8:	imul   esp,DWORD PTR [edi+0x7e9a0206],0x98ffea5f
  421bb2:	lea    edx,[ebx+edx*1+0x4f0eda5c]
  421bb9:	je     0x421b9e
  421bbb:	or     cl,BYTE PTR [edi-0x2f]
  421bbe:	fsubr  DWORD PTR [edi*8+0x734723d6]
  421bc5:	in     eax,0xe8
  421bc7:	inc    esi
  421bc8:	call   0xf80663ff
  421bcd:	adc    bl,dl
  421bcf:	or     al,BYTE PTR [eax-0x7ef882b4]
  421bd5:	inc    esp
  421bd6:	xchg   ebp,eax
  421bd7:	pop    es
  421bd8:	iret   
  421bd9:	mov    eax,ds:0x9d7205ee
  421bde:	and    eax,esp
  421be0:	jmp    0x421c1b
  421be2:	mov    ecx,0xad8ef754
  421be7:	push   es
  421be8:	jb     0x421b6f
  421bea:	add    BYTE PTR [eax],cl
  421bec:	cs out 0x63,eax
  421bef:	repz pop es
  421bf1:	cld    
  421bf2:	ins    DWORD PTR es:[edi],dx
  421bf3:	leave  
  421bf4:	xchg   ecx,eax
  421bf5:	adc    eax,0xfc120b6e
  421bfa:	fmul   QWORD PTR [edx-0x72068dfa]
  421c00:	nop
  421c01:	or     edx,DWORD PTR [esi+0x33]
  421c04:	(bad)  
  421c05:	out    0x86,eax
  421c07:	mov    ds:0x7673fc06,eax
  421c0c:	push   es
  421c0d:	jb     0x421c5c
  421c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c10:	lea    ebx,[edx-0x3f8472c9]
  421c16:	xchg   edx,eax
  421c17:	ja     0x421c5b
  421c19:	push   edx
  421c1a:	jb     0x421ba6
  421c1c:	sub    bl,0xed
  421c1f:	jmp    0x16df18d2
  421c24:	jns    0x421ca0
  421c26:	adc    eax,0xe72ae9
  421c2b:	pop    ss
  421c2c:	or     ebx,edi
  421c2e:	(bad)  
  421c2f:	js     0x421bf2
  421c31:	jo     0x421c58
  421c33:	rep outs dx,DWORD PTR ds:[esi]
  421c35:	hlt    
  421c36:	cmp    DWORD PTR [ecx],esp
  421c38:	push   es
  421c39:	sti    
  421c3a:	jne    0x421c04
  421c3c:	mov    DWORD PTR [ecx+0x8],eax
  421c3f:	ret    
  421c40:	imul   ecx,DWORD PTR [edi+ecx*1],0xffffff89
  421c44:	cmp    ecx,DWORD PTR [eax]
  421c46:	push   eax
  421c47:	pop    esi
  421c48:	add    al,ch
  421c4a:	fs loope 0x421c42
  421c4d:	sti    
  421c4e:	inc    DWORD PTR [eax]
  421c50:	mov    edx,ebp
  421c52:	xchg   al,bl
  421c54:	fsubr  QWORD PTR [ebx]
  421c56:	cdq    
  421c57:	inc    BYTE PTR [ebx]
  421c59:	push   esi
  421c5a:	xchg   bl,al
  421c5c:	pop    edi
  421c5d:	(bad)  
  421c5e:	mov    esi,0x874ab40c
  421c63:	in     al,dx
  421c64:	add    eax,0x840410e3
  421c69:	add    DWORD PTR [edi+0x57],ecx
  421c6c:	maskmovq mm1,(bad)
  421c6d:	test   DWORD PTR [ecx-0x406ef7b],0xf26694ff
  421c77:	add    BYTE PTR [ecx+eax*1+0xc03db2f],al
  421c7e:	adc    al,0x13
  421c80:	xor    al,0x1
  421c82:	dec    eax
  421c83:	cmp    eax,0xfffffef9
  421c88:	imul   edx,DWORD PTR [ecx+ecx*4-0x7b],0xffffff88
  421c8d:	repz sti 
  421c8f:	jmp    DWORD PTR [eax+edx*2]
  421c92:	adc    BYTE PTR fs:[esi-0x467303c2],bh
  421c99:	loop   0x421c92
  421c9b:	inc    DWORD PTR [ebx+0x15fb4e]
  421ca1:	push   cs
  421ca2:	cmp    al,0x0
  421ca4:	popf   
  421ca5:	xchg   esi,eax
  421ca6:	inc    ebx
  421ca7:	jae    0x421d05
  421ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421caa:	xchg   bl,dh
  421cac:	or     ah,bh
  421cae:	or     al,0x4f
  421cb0:	cmc    
  421cb1:	(bad)  
  421cb4:	add    dl,bh
  421cb6:	xchg   esi,eax
  421cb7:	inc    ebx
  421cb8:	jae    0x421c66
  421cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cbb:	xchg   bl,dh
  421cbd:	call   0xf59129dd
  421cc2:	fcmove st,st(1)
  421cc4:	(bad)  
  421cc5:	ficom  DWORD PTR [esi+0x347c7340]
  421ccb:	xchg   edi,eax
  421ccc:	pop    es
  421ccd:	push   ss
  421cce:	aam    0x7
  421cd0:	push   eax
  421cd1:	adc    BYTE PTR [esi+0x4bbafa14],bl
  421cd7:	mov    al,0xe7
  421cd9:	pop    ebp
  421cda:	push   esp
  421cdb:	or     eax,0x7f4317fc
  421ce0:	sub    BYTE PTR [ecx-0x1203f29b],0x81
  421ce7:	js     0x421cf0
  421ce9:	xchg   edx,eax
  421cea:	jne    0x421c99
  421cec:	mov    DWORD PTR [esi-0x1f],ebx
  421cef:	cmp    al,cl
  421cf1:	cdq    
  421cf2:	sbb    DWORD PTR [edi+0x1c9b8988],esi
  421cf8:	and    ebx,DWORD PTR [edi-0x2da9ffe7]
  421cfe:	mov    cl,0xf9
  421d00:	inc    edx
  421d01:	popf   
  421d02:	sbb    DWORD PTR [esi-0x54387200],edx
  421d08:	hlt    
  421d09:	dec    esp
  421d0a:	cdq    
  421d0b:	push   ss
  421d0c:	dec    esi
  421d0e:	es mov dh,0x73
  421d11:	xchg   esp,eax
  421d12:	fadd   st(7),st
  421d14:	mul    DWORD PTR [ebx+0x19]
  421d1a:	inc    esi
  421d1b:	sub    al,BYTE PTR [ebp+0x42]
  421d1e:	and    eax,0x9d03eb03
  421d23:	add    dl,BYTE PTR [edx]
  421d25:	push   es
  421d26:	loopne 0x421ce5
  421d28:	push   cs
  421d29:	add    DWORD PTR [ebp-0x626618fe],ebx
  421d2f:	jne    0x421cdc
  421d31:	and    eax,0x99e69852
  421d36:	popf   
  421d37:	stos   BYTE PTR es:[edi],al
  421d38:	inc    BYTE PTR [edi-0x6618fda1]
  421d3e:	mov    eax,0x5f7b4caa
  421d43:	push   ds
  421d44:	imul   eax,DWORD PTR [edi+0xdd505f6],0x62
  421d4b:	ja     0x421d70
  421d4d:	or     al,0x97
  421d4f:	add    ah,bh
  421d51:	add    ebx,DWORD PTR [ecx-0x4138944e]
  421d57:	mov    dl,0x74
  421d59:	jl     0x421d5b
  421d5b:	shl    dh,0xb5
  421d5e:	xor    al,0x2
  421d60:	(bad)  
  421d61:	jmp    DWORD PTR [ecx+0x2]
  421d64:	out    0x78,eax
  421d66:	xchg   edx,eax
  421d67:	jge    0x421cfe
  421d69:	xchg   edi,eax
  421d6a:	sahf   
  421d6b:	shl    BYTE PTR [esi+0x2b75b919],1
  421d71:	adc    al,0xd2
  421d73:	lods   al,BYTE PTR ds:[esi]
  421d74:	mov    cs,WORD PTR [edx]
  421d76:	mov    al,ds:0x32887503
  421d7b:	(bad)  
  421d7c:	xlat   BYTE PTR ds:[ebx]
  421d7d:	cdq    
  421d7e:	add    BYTE PTR [edx-0xbec548b],ah
  421d84:	add    dh,BYTE PTR [edi-0x33150f4]
  421d8a:	ret    
  421d8b:	push   edx
  421d8c:	and    BYTE PTR [edx],0x0
  421d8f:	dec    eax
  421d90:	lea    edi,[esi]
  421d92:	jg     0x421d73
  421d94:	adc    dl,BYTE PTR [esi-0x7ada4c]
  421d9a:	loopne 0x421d32
  421d9c:	mov    esp,0xa6982ee2
  421da1:	pop    ebp
  421da2:	xor    bh,bl
  421da4:	(bad)  
  421da5:	push   DWORD PTR [ebx-0x47b1e86b]
  421dab:	dec    ecx
  421dac:	jp     0x421da4
  421dae:	arpl   WORD PTR [ecx-0x611700fd],cx
  421db4:	jp     0x421e00
  421db6:	(bad)  
  421db7:	je     0x421e34
  421db9:	(bad)  
  421dba:	out    0x9e,eax
  421dbc:	add    cl,BYTE PTR [eax-0x2e7f6764]
  421dc2:	pop    ebp
  421dc3:	es jp  0x421e10
  421dc6:	icebp  
  421dc7:	cmc    
  421dc8:	xor    eax,0xb136050
  421dcd:	xchg   BYTE PTR [ecx+ecx*8],dh
  421dd0:	lods   al,BYTE PTR ds:[esi]
  421dd1:	std    
  421dd2:	sub    al,0x90
  421dd4:	div    BYTE PTR [ebp+0x1379a834]
  421dda:	out    dx,eax
  421ddb:	sahf   
  421ddc:	scas   eax,DWORD PTR es:[edi]
  421ddd:	std    
  421dde:	ficom  WORD PTR [eax-0x48]
  421de1:	std    
  421de2:	jae    0x421de4
  421de4:	mov    dl,0x3
  421de6:	test   ch,bh
  421de8:	mov    al,ds:0x91e8148a
  421ded:	mov    eax,0xb889e70c
  421df2:	into   
  421df3:	jmp    0xe11f:0x81558ac4
  421dfa:	sti    
  421dfb:	jmp    0xddc8209e
  421e00:	lahf   
  421e01:	xor    al,0xc
  421e03:	and    esp,ecx
  421e05:	push   cs
  421e06:	inc    ebx
  421e07:	pop    esi
  421e08:	sbb    ecx,DWORD PTR [edx]
  421e0a:	jne    0x421e3b
  421e0c:	add    BYTE PTR [ebx-0x7a],bl
  421e0f:	pushf  
  421e10:	cdq    
  421e11:	mov    DWORD PTR [eax+0x53400],ecx
  421e17:	add    BYTE PTR [esi-0x43770240],ch
  421e1d:	add    al,0xfb
  421e1f:	push   DWORD PTR [edi+ebp*4]
  421e22:	ret    0x30c2
  421e25:	push   es
  421e26:	push   ebp
  421e27:	mov    edi,DWORD PTR [ebp-0x547a3d2e]
  421e2d:	cdq    
  421e2e:	sbb    dl,BYTE PTR [ebx+0x52]
  421e31:	jnp    0x421e24
  421e33:	sub    eax,DWORD PTR [ebx+edi*2]
  421e36:	clts   
  421e38:	outs   dx,DWORD PTR ds:[esi]
  421e39:	mov    cl,0x1f
  421e3b:	adc    BYTE PTR [esi],dh
  421e3d:	cli    
  421e3e:	adc    al,BYTE PTR [ecx+0x7c]
  421e41:	cmc    
  421e42:	cmp    BYTE PTR [eax+edx*4-0xe],cl
  421e46:	outs   dx,BYTE PTR ds:[esi]
  421e47:	add    al,BYTE PTR [eax]
  421e49:	mov    bh,0x3f
  421e4b:	cmp    ecx,DWORD PTR [edi+0x71]
  421e4e:	and    eax,0x487b5b5d
  421e53:	add    eax,DWORD PTR [eax]
  421e55:	mov    eax,ds:0x818be781
  421e5a:	inc    BYTE PTR [eax+0x7688b8ec]
  421e60:	or     al,0xb4
  421e62:	cld    
  421e63:	test   ebp,edx
  421e65:	mov    ah,0x5
  421e67:	add    BYTE PTR [ebx+0x9],dl
  421e6a:	mov    ah,0xf3
  421e6c:	push   esi
  421e6d:	pop    edi
  421e6e:	aas    
  421e6f:	push   esp
  421e70:	mov    ebp,DWORD PTR ds:0xb1c600a0
  421e76:	or     eax,0xec98cfb
  421e7b:	pop    ebp
  421e7c:	sub    DWORD PTR [ecx-0x7],0xfffffffb
  421e80:	jne    0x421ecb
  421e82:	jg     0x421e93
  421e84:	psubq  mm7,QWORD PTR [ebx+0xc01fe07]
  421e8b:	adc    DWORD PTR [ecx],0xffffff9d
  421e8e:	inc    esp
  421e8f:	add    eax,esi
  421e91:	pushf  
  421e92:	jmp    0x421e58
  421e94:	dec    ebp
  421e95:	enter  0xf751,0xb5
  421e99:	call   0x5d1099e1
  421e9e:	inc    ebp
  421e9f:	add    cl,BYTE PTR [edx+0x3f7dd307]
  421ea5:	popf   
  421ea6:	clc    
  421ea7:	push   ecx
  421ea8:	push   edx
  421ea9:	adc    al,0x6c
  421eab:	and    eax,0x1d260000
  421eb0:	inc    ebp
  421eb1:	fisub  WORD PTR [ecx-0x69fce9d6]
  421eb7:	cli    
  421eb8:	jge    0x421e47
  421eba:	xchg   ebp,eax
  421ebb:	jne    0x421e81
  421ebd:	call   FWORD PTR [edi]
  421ebf:	xor    BYTE PTR [ebx],al
  421ec1:	sub    BYTE PTR [eax-0x10],0x4
  421ec5:	mov    BYTE PTR [eax-0x22],dl
  421ec8:	xchg   ecx,eax
  421ec9:	adc    al,0xaa
  421ecb:	cdq    
  421ecc:	mov    eax,0xf6cd1ef9
  421ed1:	mov    esi,0xe644ecbf
  421ed6:	fwait
  421ed7:	hlt    
  421ed8:	cmp    eax,0x7de30c89
  421edd:	aas    
  421ede:	popf   
  421edf:	les    eax,FWORD PTR ds:0x886b68b2
  421ee5:	cld    
  421ee6:	lahf   
  421ee7:	and    edi,esi
  421ee9:	or     al,0x53
  421eeb:	das    
  421eec:	or     al,BYTE PTR [eax-0x79822684]
  421ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef3:	arpl   WORD PTR [edi+0x54ec77ff],di
  421ef9:	cmp    bl,BYTE PTR ds:0xeeffefff
  421eff:	retf   0xb5f6
  421f02:	outs   dx,BYTE PTR ds:[esi]
  421f03:	or     BYTE PTR [ebp+0x2f],bh
  421f06:	xchg   edx,eax
  421f07:	add    bl,BYTE PTR [ebx-0x6cefb070]
  421f0d:	xor    eax,0xa120b8a1
  421f12:	add    BYTE PTR [ebx],ah
  421f14:	jae    0x421efd
  421f16:	mov    eax,ds:0xa1ed531b
  421f1b:	and    ecx,DWORD PTR [ebx-0x1d]
  421f1e:	xchg   dl,dh
  421f20:	or     bh,BYTE PTR [esi]
  421f22:	hlt    
  421f23:	and    bl,BYTE PTR [ebx]
  421f25:	pop    edi
  421f26:	test   al,0x2f
  421f28:	mov    eax,ecx
  421f2a:	add    al,0x25
  421f2c:	push   ebx
  421f2d:	out    0x7b,eax
  421f2f:	pop    edx
  421f30:	add    esp,DWORD PTR [esi+0x43]
  421f33:	sahf   
  421f34:	or     DWORD PTR [edi+esi*8-0x3495eefe],0xfffffff9
  421f3c:	(bad)  
  421f3d:	cli    
  421f3e:	test   eax,0xc0be5b50
  421f43:	mov    ds:0xe2f727c9,al
  421f48:	push   esi
  421f49:	outs   dx,BYTE PTR ds:[esi]
  421f4a:	sbb    BYTE PTR ds:0x69b4edef,bl
  421f50:	lea    edx,ds:0xe1461403
  421f56:	jl     0x421f43
  421f58:	mov    DWORD PTR [eax+edx*1],ebp
  421f5b:	jne    0x421f2c
  421f5d:	jmp    0x5303:0xe9030184
  421f64:	xor    esi,DWORD PTR [ebx-0x3dc4332b]
  421f6a:	xchg   ebp,eax
  421f6b:	call   0x5bc2cfa4
  421f70:	jne    0x421f40
  421f72:	add    DWORD PTR [edi],0xf
  421f75:	jmp    0x76d71ff7
  421f7a:	in     al,dx
  421f7b:	test   BYTE PTR [ebp+0x4],bl
  421f7e:	mov    es,WORD PTR [ebx]
  421f80:	fmul   QWORD PTR [ebp+0x3bba2800]
  421f86:	dec    ebx
  421f87:	mul    BYTE PTR [ecx+0xe]
  421f8a:	mov    dl,0x28
  421f8c:	fild   DWORD PTR [edi-0xa68ccb]
  421f92:	out    0xeb,al
  421f94:	jo     0x421f5e
  421f96:	test   BYTE PTR [eax],ah
  421f98:	sub    eax,0x3d40800c
  421f9d:	mov    WORD PTR [ecx+0x2a],es
  421fa0:	xor    al,0x93
  421fa2:	shl    DWORD PTR [edi],0x66
  421fa5:	and    eax,ecx
  421fa7:	bnd jne 0x42201b
  421faa:	lds    ebp,FWORD PTR [ebp-0x2a]
  421fad:	jae    0x421fb2
  421faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fb1:	enter  0xa588,0xfb
  421fb5:	idiv   BYTE PTR [esi]
  421fb7:	push   0xffffff93
  421fb9:	add    edi,DWORD PTR [edi+edx*2+0x7a]
  421fbd:	cmc    
  421fbe:	je     0x421f72
  421fc0:	jo     0x42200e
  421fc2:	clc    
  421fc3:	arpl   WORD PTR [edx],bp
  421fc5:	clc    
  421fc6:	xchg   BYTE PTR [edi+edx*4+0x5eebe1bf],dl
  421fcd:	out    0x4,eax
  421fcf:	repz pop edi
  421fd1:	mov    DWORD PTR [ebp-0x2d],ecx
  421fd4:	inc    esi
  421fd5:	inc    esp
  421fd6:	cld    
  421fd7:	arpl   WORD PTR [edi-0x41],bx
  421fda:	loope  0x421fcb
  421fdc:	add    BYTE PTR [eax+0x78a9f74b],bh
  421fe2:	add    eax,eax
  421fe4:	shl    DWORD PTR [eax-0x149e41f4],0xfc
  421feb:	lea    edi,[edi]
  421fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fee:	xor    cl,cl
  421ff0:	jno    0x422045
  421ff2:	stc    
  421ff3:	test   DWORD PTR [ebx+0x14871114],edi
  421ff9:	lods   eax,DWORD PTR ds:[esi]
  421ffa:	mov    eax,DWORD PTR [eax+eax*1+0x71]
  421ffe:	push   es
  421fff:	cld    
  422000:	inc    ebp
  422001:	call   0x3dc7257f
  422006:	(bad)  
  422007:	sti    
  422008:	inc    eax
  422009:	das    
  42200a:	inc    eax
  42200b:	ja     0x421ff8
  42200d:	jg     0x42203a
  42200f:	or     al,0x82
  422011:	pop    ss
  422012:	or     edi,esp
  422014:	call   DWORD PTR [edx]
  422016:	jg     0x422056
  422018:	hlt    
  422019:	lahf   
  42201a:	mov    ebp,0x38ff5f03
  42201f:	ror    DWORD PTR [eax],0x44
  422022:	mov    ah,0x88
  422024:	lock mov esi,0xb7018803
  42202a:	psubd  mm6,QWORD PTR [ebp+0x18]
  42202e:	jne    0x42206a
  422030:	add    edi,ebp
  422032:	adc    BYTE PTR [esi+0xf7fb34a],al
  422038:	push   es
  422039:	out    0xb1,al
  42203b:	cld    
  42203c:	mov    ah,dl
  42203e:	rol    DWORD PTR [edx+0x75],0x0
  422042:	call   0x687be0f1
  422047:	(bad)  
  422049:	jae    0x42200e
  42204b:	mov    dl,0xfc
  42204d:	je     0x421ff7
  42204f:	(bad)  
  422050:	push   ebp
  422051:	dec    ecx
  422053:	rcl    DWORD PTR ds:0xbf80b440,1
  422059:	or     al,0x61
  42205b:	mov    ebp,0x930485fc
  422060:	or     DWORD PTR [edx+0x30fcd680],ecx
  422066:	rcl    cl,0x43
  422069:	jne    0x422055
  42206b:	inc    eax
  42206c:	(bad)  
  42206d:	(bad)  
  42206e:	fnstcw WORD PTR [ecx-0x19]
  422071:	push   ecx
  422072:	xlat   BYTE PTR ds:[ebx]
  422073:	rol    edx,1
  422075:	push   esi
  422076:	popf   
  422077:	cmp    al,0x7c
  422079:	dec    edx
  42207a:	and    BYTE PTR [ebx-0x47],0xfd
  42207e:	add    esi,DWORD PTR [ebx+0x7c]
  422081:	call   FWORD PTR [ebp+0x6d88ffeb]
  422087:	xor    DWORD PTR [edi+edi*8],eax
  42208a:	(bad)  
  42208b:	jmp    0x422104
  42208d:	or     eax,0x389daddc
  422092:	(bad)  [bp+si]
  422095:	mov    BYTE PTR [ebp+0x60],cl
  422098:	push   es
  422099:	or     al,0xb
  42209b:	sahf   
  42209c:	add    cl,BYTE PTR [eax+0xb79f3d8]
  4220a2:	xchg   esp,eax
  4220a3:	jno    0x42208f
  4220a5:	add    DWORD PTR [eax],eax
  4220a7:	push   edi
  4220a8:	jmp    0x422062
  4220aa:	std    
  4220ab:	xchg   edx,eax
  4220ac:	jne    0x422067
  4220ae:	std    
  4220af:	daa    
  4220b0:	pop    es
  4220b1:	add    eax,0x7c1c58fe
  4220b6:	sbb    eax,0xd04ff15
  4220bb:	dec    ebx
  4220bc:	sahf   
  4220bd:	add    bh,BYTE PTR [eax]
  4220bf:	push   0xdb0390f7
  4220c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220c5:	add    bh,bh
  4220c7:	pusha  
  4220c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c9:	nop
  4220ca:	int3   
  4220cb:	inc    edx
  4220cc:	lea    esp,[esi-0xd203a]
  4220d2:	addr16 lahf 
  4220d4:	jmp    0x7e0:0x5ecaffff
  4220db:	push   ds
  4220dc:	stos   DWORD PTR es:[edi],eax
  4220dd:	sti    
  4220de:	dec    edi
  4220df:	mov    edx,0x5d15cfdd
  4220e4:	jmp    0x422164
  4220e6:	ret    
  4220e7:	cdq    
  4220e8:	test   eax,0xe93afffb
  4220ed:	add    al,0x0
  4220ef:	popf   
  4220f0:	add    ah,BYTE PTR [esi+0x43]
  4220f3:	sahf   
  4220f4:	push   edx
  4220f5:	call   0xb2f0:0x920ebe8f
  4220fc:	adc    al,0x29
  4220fe:	add    al,0x1c
  422100:	(bad)  
  422101:	cmc    
  422102:	inc    ecx
  422103:	sahf   
  422104:	add    ch,BYTE PTR [esi-0x5]
  422107:	sbb    eax,0x8fe9ea
  42210c:	xchg   esp,eax
  42210d:	dec    ecx
  42210e:	hlt    
  42210f:	hlt    
  422110:	and    esi,DWORD PTR [ebx-0x13]
  422113:	jl     0x4220f7
  422115:	or     ah,BYTE PTR [esi]
  422117:	mov    cl,0x1d
  422119:	ret    
  42211a:	in     eax,dx
  42211b:	lods   eax,DWORD PTR ds:[esi]
  42211c:	cmp    dl,BYTE PTR [edx+0x4a]
  42211f:	push   es
  422120:	cmp    eax,eax
  422122:	outs   dx,BYTE PTR ds:[esi]
  422123:	sti    
  422124:	sbb    eax,0x838fe9ea
  422129:	dec    ecx
  42212a:	mov    ebp,0xe6ea1df2
  42212f:	(bad)  
  422130:	popf   
  422131:	xor    BYTE PTR [ecx],ch
  422133:	inc    edx
  422134:	and    eax,0x23d6ecd
  422139:	jmp    0xe8432751
  42213e:	jmp    0x422146
  422140:	mov    cl,BYTE PTR [edx]
  422142:	outs   dx,BYTE PTR ds:[esi]
  422143:	cmp    ecx,esi
  422145:	jb     0x42212c
  422147:	jp     0x422129
  422149:	xchg   DWORD PTR [ebx],ebx
  42214b:	sbb    edi,esi
  42214d:	(bad)  
  42214e:	jmp    0x9e44:0x6607c505
  422155:	push   esp
  422156:	outs   dx,BYTE PTR ds:[esi]
  422157:	ss ret 0xd559
  42215b:	add    eax,0x40e8b2c1
  422160:	pop    ds
  422161:	cmc    
  422162:	cmp    al,0x1
  422164:	ins    BYTE PTR es:[edi],dx
  422165:	ret    0x79a6
  422168:	mov    ds:0x99c0007f,al
  42216d:	jbe    0x4221ab
  42216f:	and    BYTE PTR [eax],al
  422171:	sub    eax,0x801d4925
  422176:	inc    esp
  422177:	je     0x422172
  422179:	inc    edi
  42217a:	jo     0x422162
  42217c:	bound  esi,QWORD PTR [ebx-0x239d3476]
  422182:	jecxz  0x422122
  422184:	xchg   DWORD PTR [eax+0x4b9e7fe],ebx
  42218a:	sti    
  42218b:	out    0xeb,al
  42218d:	add    al,0xfc
  42218f:	push   ebp
  422190:	push   ss
  422191:	aam    0xca
  422193:	call   0xfc40c6cd
  422198:	sub    ah,BYTE PTR [eax-0x749df795]
  42219e:	(bad)  
  42219f:	jo     0x422186
  4221a1:	mov    ch,0xc6
  4221a3:	xchg   DWORD PTR [edx],ebx
  4221a5:	xchg   ecx,eax
  4221a6:	xchg   esp,edi
  4221a8:	mov    al,ds:0xd96a0dea
  4221ae:	dec    DWORD PTR [esi+0x62]
  4221b1:	retf   
  4221b2:	mov    cl,bl
  4221b4:	adc    DWORD PTR [eax-0x7be10406],ebx
  4221ba:	lds    edi,FWORD PTR [edi+0x41f4562]
  4221c0:	(bad)  
  4221c1:	not    BYTE PTR [ecx+ecx*2-0x50]
  4221c5:	inc    ecx
  4221c6:	mov    dh,al
  4221c8:	jne    0x4221b6
  4221ca:	inc    ebx
  4221cb:	jne    0x4221a2
  4221cd:	add    al,0x2
  4221cf:	das    
  4221d0:	sbb    edx,DWORD PTR [edx+0x45]
  4221d3:	(bad)  
  4221d4:	aas    
  4221d5:	add    BYTE PTR [eax-0x63363e14],ah
  4221db:	jmp    0x31de64ed
  4221e0:	into   
  4221e1:	pop    esp
  4221e2:	clc    
  4221e3:	add    BYTE PTR [ecx+0x0],bl
  4221e6:	repz bt eax,0xb7
  4221eb:	scas   al,BYTE PTR es:[edi]
  4221ec:	jecxz  0x422185
  4221ee:	inc    ebx
  4221ef:	add    eax,0x794c8bfc
  4221f4:	cld    
  4221f5:	je     0x422196
  4221f7:	jnp    0x422238
  4221f9:	and    al,0x78
  4221fb:	push   ds
  4221fc:	pop    edi
  4221fd:	jmp    FWORD PTR [ebx]
  4221ff:	(bad)  
  422200:	jge    0x4221c2
  422202:	nop
  422203:	lock mov BYTE PTR [eax+eiz*2-0xa],cl
  422208:	jle    0x4221d3
  42220a:	jo     0x422210
  42220c:	add    DWORD PTR [ecx],0xffffffff
  42220f:	ss call 0x8b58d51d
  422215:	xchg   edi,eax
  422216:	mov    edx,0xbc02ffe
  42221b:	mov    al,ds:0xa83408c1
  422220:	mov    cl,dh
  422222:	mov    edi,0x44e980fd
  422227:	mov    ch,BYTE PTR [eax]
  422229:	dec    ecx
  42222a:	lock call 0x8a7a0bb0
  422230:	push   DWORD PTR [ecx]
  422232:	les    ebx,FWORD PTR [edi+0x7b5257c0]
  422238:	stc    
  422239:	call   0xfc421d3e
  42223e:	dec    DWORD PTR [ebx+0x1b]
  422241:	sbb    eax,0x88fe14ff
  422246:	retf   0x959b
  422249:	dec    DWORD PTR [edx-0x172a853e]
  42224f:	xchg   edx,eax
  422250:	or     bh,ah
  422252:	call   FWORD PTR [edi-0x3f3f7f06]
  422258:	pop    ebx
  422259:	or     esi,0xffffffec
  42225c:	pop    ecx
  42225d:	repz call FWORD PTR [ebp+0x5b01b4d0]
  422264:	lods   al,BYTE PTR ds:[esi]
  422265:	push   esi
  422266:	push   ebx
  422267:	es inc eax
  422269:	sub    BYTE PTR [esi+edx*1],cl
  42226c:	mov    ebx,0xe728fb89
  422271:	xor    al,al
  422273:	xchg   BYTE PTR [esi],dl
  422275:	mov    ecx,DWORD PTR [eax]
  422277:	push   ds
  422278:	xchg   edx,eax
  422279:	add    al,0x74
  42227b:	shl    BYTE PTR [edx],cl
  42227d:	js     0x42229e
  42227f:	aam    0x17
  422281:	adc    cl,BYTE PTR [ecx-0xf]
  422284:	in     al,0x4c
  422286:	jne    0x42220c
  422288:	sbb    eax,0x7868c1ec
  42228d:	jmp    edi
  42228f:	lods   eax,DWORD PTR ds:[esi]
  422290:	add    eax,0x59fe704
  422295:	add    eax,0x8b282652
  42229a:	(bad)  
  42229b:	xor    eax,0xfc0090
  4222a0:	inc    edx
  4222a1:	inc    esp
  4222a2:	and    al,0xfb
  4222a4:	lods   eax,DWORD PTR ds:[esi]
  4222a5:	jecxz  0x422231
  4222a7:	retf   
  4222a8:	xor    bh,BYTE PTR [ebx+0x53638703]
  4222ae:	(bad)  
  4222af:	mul    DWORD PTR [edx]
  4222b1:	xor    bl,ch
  4222b3:	or     eax,0x4c46c6f
  4222b8:	cmp    BYTE PTR es:[ebx-0x5e90a36],cl
  4222bf:	sti    
  4222c0:	add    ah,BYTE PTR [edi+eax*8+0x5b]
  4222c4:	pop    ebx
  4222c5:	sub    eax,0xe9260008
  4222ca:	mov    cl,BYTE PTR [ecx+eax*8-0xd]
  4222ce:	inc    edi
  4222cf:	dec    eax
  4222d0:	push   0x72e9d4ed
  4222d5:	call   0x2e3:0x22bb0e7
  4222dc:	adc    eax,0x480264fa
  4222e1:	sbb    edx,edx
  4222e3:	ja     0x422266
  4222e5:	push   es
  4222e6:	pop    esi
  4222e7:	push   edi
  4222e8:	jns    0x4222f0
  4222ea:	outs   dx,BYTE PTR ds:[esi]
  4222eb:	shl    BYTE PTR [edx],cl
  4222ed:	rcl    cl,0x77
  4222f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f1:	clc    
  4222f2:	mov    dl,0x88
  4222f4:	pop    ebp
  4222f5:	outs   dx,DWORD PTR ds:[esi]
  4222f6:	fisttp WORD PTR [eax-0x73189096]
  4222fc:	mov    cl,BYTE PTR [ebp+0x4f95eea2]
  422302:	sub    DWORD PTR [eax-0x7506f100],0xa7585d36
  42230c:	or     ebx,DWORD PTR [ebp+0x24ffb4f7]
  422312:	inc    esp
  422313:	jmp    0x6bd35503
  422318:	add    cl,BYTE PTR [ebp+0x4ff86c2]
  42231e:	inc    esp
  42231f:	jmp    0xa6fec0ca
  422324:	add    ebx,DWORD PTR [edx]
  422326:	or     ecx,DWORD PTR [edi-0x633c62ba]
  42232c:	mov    ?,WORD PTR [ecx]
  42232e:	test   BYTE PTR [ebp+0x27],cl
  422331:	adc    al,0x46
  422333:	dec    ecx
  422334:	mov    gs,WORD PTR [eax+0xa]
  422337:	pusha  
  422338:	push   eax
  422339:	stc    
  42233a:	mov    esi,DWORD PTR [edi+ecx*1-0x71eeb9ec]
  422341:	push   eax
  422342:	adc    ah,BYTE PTR [eax+0x50]
  422345:	or     DWORD PTR [ecx+eiz*1+0x25462004],eax
  42234c:	imul   ebx,esi,0xbb261d3d
  422352:	mov    DWORD PTR [eax],eax
  422354:	lods   al,BYTE PTR ds:[esi]
  422355:	(bad)  
  422356:	jmp    0xabc9:0xf69c0d30
  42235d:	lods   eax,DWORD PTR ds:[esi]
  42235e:	add    dl,BYTE PTR [ebp+0x72]
  422361:	int    0x77
  422363:	in     al,dx
  422364:	std    
  422365:	and    DWORD PTR [esi-0x10],ebx
  422368:	jmp    0xcb83c6d
  42236d:	icebp  
  42236e:	inc    esp
  42236f:	push   ebx
  422370:	xchg   DWORD PTR [ecx+edx*4],edi
  422373:	les    eax,FWORD PTR [ebp-0x4a]
  422376:	mov    eax,ds:0xe4621b6d
  42237b:	push   es
  42237c:	jg     0x42238a
  42237e:	mov    DWORD PTR [edx],eax
  422380:	test   DWORD PTR [ecx+0x26870f05],ebp
  422386:	test   eax,0x1991757f
  42238b:	ss xor edx,eax
  42238e:	repnz or bh,bl
  422391:	and    al,0x61
  422393:	cmp    DWORD PTR [ebp+0x71],eax
  422396:	shr    ebx,cl
  422398:	xchg   esp,esi
  42239a:	scas   al,BYTE PTR es:[edi]
  42239b:	mov    DWORD PTR [ebp+0x5d],edx
  42239e:	and    al,dh
  4223a0:	or     al,0xee
  4223a2:	sbb    BYTE PTR ds:0x7f9ee901,al
  4223a8:	add    ch,BYTE PTR [edx+0x31]
  4223ab:	push   es
  4223ac:	or     ebp,DWORD PTR [ebx+0x32]
  4223af:	add    al,BYTE PTR [eax]
  4223b1:	jmp    0xe7366117
  4223b6:	and    eax,0x9ee900e6
  4223bb:	jg     0x422407
  4223bd:	in     eax,dx
  4223be:	and    eax,DWORD PTR [ebp+0xc]
  4223c1:	out    dx,al
  4223c2:	sbb    cl,bl
  4223c4:	add    cl,ch
  4223c6:	sahf   
  4223c7:	repz shr ecx,0x9e
  4223cb:	add    al,al
  4223cd:	add    BYTE PTR [eax],al
  4223cf:	repz jle 0x42238d
  4223d2:	add    ah,dh
  4223d4:	add    al,BYTE PTR [eax+0x7402d37d]
  4223da:	or     al,0xcb
  4223dc:	ret    
  4223dd:	add    BYTE PTR [eax],al
  4223df:	mov    ah,0x42
  4223e1:	pop    es
  4223e2:	test   BYTE PTR ds:0x3f000003,ah
  4223e8:	aam    0x81
  4223ea:	loop   0x4223b0
  4223ec:	add    al,BYTE PTR [eax]
  4223ee:	sub    BYTE PTR [eax-0x3],0xf6
  4223f2:	inc    ebp
  4223f3:	in     al,0x85
  4223f5:	inc    ebp
  4223f6:	or     al,0xbc
  4223f8:	jp     0x422442
  4223fa:	dec    eax
  4223fb:	enter  0x4835,0x48
  4223ff:	test   al,0x31
  422401:	jnp    0x4223eb
  422403:	js     0x422473
  422405:	and    al,0x83
  422407:	sbb    al,0xa
  422409:	je     0x422422
  42240b:	pop    es
  42240c:	jmp    0x0:0x7df90f10
  422413:	je     0x4223b6
  422415:	add    al,0xba
  422417:	xchg   esi,edi
  422419:	xor    al,BYTE PTR [esi+0x3c]
  42241c:	ins    DWORD PTR es:[edi],dx
  42241d:	jb     0x4223a4
  42241f:	xchg   dh,ah
  422421:	jo     0x4223ae
  422423:	sti    
  422424:	adc    DWORD PTR [ebx+0x39e7384f],eax
  42242a:	mov    edi,ebx
  42242c:	or     DWORD PTR [ebx+0x31e6dc4d],eax
  422432:	mov    eax,DWORD PTR [eax]
  422434:	neg    DWORD PTR ds:0xe79c4b83
  42243a:	sub    DWORD PTR [ebx+0x4b831247],ecx
  422440:	or     bh,ah
  422442:	and    DWORD PTR [edx-0x3f7be5c9],ecx
  422448:	popf   
  422449:	xchg   esi,eax
  42244a:	pop    es
  42244b:	repz fsub st(3),st
  42244e:	ltr    WORD PTR [ebp-0x63c3f48a]
  422455:	outs   dx,BYTE PTR ds:[esi]
  422456:	inc    esp
  422457:	repz fsub st(3),st
  42245a:	pop    ds
  42245b:	add    BYTE PTR [ebp+0x5e873c6f],bl
  422461:	xrelease xchg BYTE PTR [edi-0x6f],al
  422465:	jo     0x422479
  422467:	jg     0x422420
  422469:	fbstp  TBYTE PTR [ebx+0x21]
  42246c:	push   ds
  42246d:	rcr    BYTE PTR [eax],cl
  42246f:	jb     0x4224e5
  422471:	push   0xd64f4be
  422476:	adc    al,0x75
  422478:	mov    esp,0xdb8d541a
  42247d:	xlat   BYTE PTR ds:[ebx]
  42247e:	dec    edi
  42247f:	das    
  422480:	mov    dl,BYTE PTR [ebx-0x6b7c503b]
  422486:	xchg   DWORD PTR [ebp-0x5b],edi
  422489:	les    di,DWORD PTR [eax-0x60]
  42248d:	mov    WORD PTR [edx+0x4],es
  422490:	popf   
  422491:	jmp    0x422492
  422493:	jg     0x42247e
  422495:	rol    ch,1
  422497:	inc    ebp
  422498:	add    BYTE PTR [edx-0x16],bl
  42249b:	xchg   BYTE PTR [edx],al
  42249d:	test   BYTE PTR [esi],bl
  42249f:	clc    
  4224a0:	(bad)  
  4224a1:	cmp    ch,BYTE PTR [eax-0x7f]
  4224a4:	hlt    
  4224a5:	xchg   ecx,eax
  4224a6:	in     al,0x7e
  4224a8:	add    BYTE PTR [edx],bh
  4224aa:	dec    esp
  4224ab:	sti    
  4224ac:	xor    BYTE PTR [eax-0x5d8afbbc],0xf8
  4224b3:	mov    edi,0x793bd839
  4224b8:	dec    edi
  4224ba:	sub    eax,DWORD PTR [ebx+ebx*2+0x73]
  4224be:	and    bh,BYTE PTR [esi-0x28fd62f4]
  4224c4:	ret    
  4224c5:	cli    
  4224c6:	jmp    0x42247c
  4224c8:	mov    cl,BYTE PTR [ecx]
  4224ca:	add    DWORD PTR ds:0xe902985c,0x52
  4224d1:	dec    edi
  4224d2:	dec    ebp
  4224d3:	outs   dx,BYTE PTR ds:[esi]
  4224d4:	adc    DWORD PTR [ebp+0x2043a289],0x83067cc2
  4224de:	ret    0x7d00
  4224e1:	mov    eax,ds:0x9d6be902
  4224e6:	add    ch,cl
  4224e8:	adc    eax,DWORD PTR [ebp-0x10]
  4224eb:	cmp    al,0x4
  4224ed:	popf   
  4224ee:	push   edx
  4224ef:	pop    esp
  4224f0:	pusha  
  4224f1:	mov    ecx,0x9dd3f4e9
  4224f6:	add    dh,BYTE PTR [eax+0x48]
  4224f9:	pop    ecx
  4224fa:	jle    0x4224a5
  4224fc:	ja     0x4224fe
  4224fe:	jbe    0x422480
  422500:	sub    al,0xf0
  422502:	xchg   ebp,eax
  422503:	mov    DWORD PTR [esp+ebp*8],ebp
  422506:	xchg   esi,eax
  422507:	sub    BYTE PTR [eax],0x8
  42250a:	popf   
  42250b:	add    bh,BYTE PTR [esi+0x2]
  42250e:	sbb    bh,BYTE PTR [esi]
  422510:	or     DWORD PTR [edx+0xb807f95],0x7b88096
  42251a:	popf   
  42251b:	add    ch,BYTE PTR [esi+0x62044150]
  422521:	sub    esp,DWORD PTR [ecx+0x5d82e902]
  422527:	or     edi,DWORD PTR [ecx+0x43802c8a]
  42252d:	or     edi,DWORD PTR [ebx+0x2203bf22]
  422533:	int    0x6e
  422535:	ficom  WORD PTR [esi+ebp*2]
  422538:	dec    ecx
  422539:	mov    WORD PTR [eax-0x22],fs
  42253c:	add    BYTE PTR [ecx-0x48],al
  42253f:	clc    
  422540:	sti    
  422541:	cs and al,bl
  422544:	or     ebp,DWORD PTR [ebp+0x35]
  422547:	hlt    
  422548:	sti    
  422549:	jmp    0x63269349
  42254e:	enter  0x15c,0x83
  422552:	sahf   
  422553:	jmp    0x2984:0xf7e30710
  42255a:	stos   DWORD PTR es:[edi],eax
  42255b:	jle    0x4224e8
  42255d:	jmp    0xc200:0x74fb029e
  422564:	jnp    0x422538
  422566:	push   ebx
  422567:	lahf   
  422568:	pop    esp
  422569:	add    cl,dl
  42256b:	mov    bh,0xf5
  42256d:	sti    
  42256e:	(bad)  
  42256f:	and    eax,0x26650bc3
  422574:	repz sti 
  422576:	jmp    0x7326931c
  42257b:	jae    0x4225d9
  42257d:	add    al,0x43
  42257f:	cdq    
  422580:	jmp    0xa984:0xf788ace4
  422587:	nop
  422588:	jle    0x4225e9
  42258a:	jmp    0x7b8d:0x3687029e
  422591:	inc    ebx
  422592:	loope  0x4225ab
  422594:	cmp    eax,0x79446cf4
  422599:	pop    es
  42259a:	sbb    DWORD PTR [eax+0xd],ebx
  42259d:	js     0x42257a
  42259f:	fiadd  WORD PTR [edx]
  4225a1:	xchg   DWORD PTR [ecx+0x1e7acb22],edx
  4225a7:	adc    bh,BYTE PTR ds:0x23c4b9d0
  4225ad:	call   0xfc399968
  4225b2:	(bad)  
  4225b3:	fcmovbe st,st(2)
  4225b5:	jg     0x4225b7
  4225b7:	push   ecx
  4225b8:	ret    
  4225b9:	add    BYTE PTR [ecx-0x74ae44b7],cl
  4225bf:	mov    esp,0xf4c045bc
  4225c4:	xchg   DWORD PTR [ebp-0x38],eax
  4225c7:	add    BYTE PTR [edi+ebp*8-0x756400c5],ch
  4225ce:	ror    BYTE PTR [edi],0x81
  4225d1:	add    al,BYTE PTR [ecx]
  4225d3:	add    ah,dh
  4225d5:	xor    DWORD PTR [ebp-0x40],0xffffff8c
  4225d9:	mov    ebx,0x89dbff3b
  4225de:	jne    0x4225c0
  4225e0:	aas    
  4225e1:	push   ebx
  4225e2:	in     al,0xc6
  4225e4:	add    edx,edi
  4225e6:	add    dh,al
  4225e8:	jno    0x4225db
  4225ea:	add    BYTE PTR [ecx-0x18405af],cl
  4225f0:	mov    eax,0xb6257a05
  4225f5:	(bad)  
  4225f6:	dec    DWORD PTR [edx+0xcf881b7]
  4225fc:	mov    eax,DWORD PTR [edx+edx*1+0x33068402]
  422603:	inc    ebp
  422604:	push   eax
  422605:	(bad)  
  422606:	jle    0x422619
  422608:	jbe    0x422610
  42260a:	add    BYTE PTR [ebx-0x3e110551],cl
  422610:	test   BYTE PTR [esi],al
  422612:	add    BYTE PTR [eax],ah
  422614:	dec    ebx
  422615:	mov    dh,cl
  422617:	add    DWORD PTR [esi+eax*1+0x7b],esi
  42261b:	clc    
  42261c:	dec    eax
  42261d:	(bad)  
  42261e:	jge    0x422608
  422620:	inc    ebp
  422621:	push   es
  422622:	add    dh,dh
  422624:	cmc    
  422625:	add    al,0x7
  422627:	test   bl,bl
  422629:	add    al,0x0
  42262b:	add    BYTE PTR [eax],al
  42262d:	scas   al,BYTE PTR es:[edi]
  42262e:	inc    esi
  42262f:	sbb    BYTE PTR [ebp+ebx*4+0x3208721b],al
  422636:	sbb    edi,edi
  422638:	setge  bl
  42263b:	jb     0x422651
  42263d:	(bad)  
  42263f:	or     al,0x85
  422641:	in     eax,0xda
  422643:	(bad)  
  422644:	call   DWORD PTR [edx]
  422646:	sbb    edi,edi
  422648:	pop    ds
  422649:	popf   
  42264a:	fisttp DWORD PTR [esp+eax*4]
  42264d:	cmp    ebx,ebx
  42264f:	(bad)  
  422650:	call   FWORD PTR ds:0x9a00f097
  422656:	data16 cmc 
  422658:	add    BYTE PTR [ebp+0x7bff69db],bl
  42265e:	pop    esi
  42265f:	mov    dl,0xaa
  422661:	xlat   BYTE PTR ds:[ebx]
  422662:	clc    
  422663:	imul   eax
  422665:	test   al,0x12
  422667:	cld    
  422668:	sti    
  422669:	push   ss
  42266a:	int3   
  42266b:	in     al,dx
  42266c:	xchg   ebx,eax
  42266d:	dec    ecx
  42266e:	(bad)  
  422670:	cmp    ebx,DWORD PTR [ecx-0x6099fcb4]
  422676:	and    BYTE PTR [ecx-0x25307e],cl
  42267c:	inc    DWORD PTR [edi]
  42267e:	fmul   DWORD PTR [edi+0x66]
  422681:	popf   
  422682:	data16 mov cl,0x68
  422685:	mov    ah,BYTE PTR [eax-0x57aa8009]
  42268b:	in     al,dx
  42268c:	outs   dx,DWORD PTR ds:[esi]
  42268d:	push   0x85f791
  422692:	pop    ebp
  422693:	call   0xdbdfbd21
  422698:	(bad)  
  422699:	jle    0x4226fd
  42269b:	fnsave [eax+0x52]
  42269e:	sub    BYTE PTR [esi],dh
  4226a0:	inc    esp
  4226a1:	sti    
  4226a2:	push   edx
  4226a3:	js     0x422661
  4226a5:	mov    bl,0x9d
  4226a7:	(bad)  
  4226a9:	out    0xd4,eax
  4226ab:	add    cl,BYTE PTR [edi-0x5]
  4226ae:	ss jg  0x422715
  4226b1:	ins    BYTE PTR es:[edi],dx
  4226b2:	ss icebp 
  4226b4:	push   edx
  4226b5:	push   esp
  4226b6:	and    cl,al
  4226b8:	mov    ecx,0x4255b9ee
  4226bd:	jno    0x4226d0
  4226bf:	pop    eax
  4226c0:	cmp    dl,BYTE PTR [ecx]
  4226c2:	xchg   ebp,eax
  4226c3:	adc    al,0xa9
  4226c5:	add    ebp,DWORD PTR [ebp+0x5c]
  4226c8:	loope  0x422725
  4226ca:	sbb    al,al
  4226cc:	adc    DWORD PTR [edi-0x7],ebp
  4226cf:	lock sbb al,BYTE PTR [eax-0x77098923]
  4226d6:	pusha  
  4226d7:	ret    0x6901
  4226da:	mov    ds:0xcd8f02f1,al
  4226df:	xchg   bl,dh
  4226e1:	jo     0x4226d8
  4226e3:	(bad)  
  4226e5:	stc    
  4226e6:	(bad)  
  4226e7:	lock pop esp
  4226e9:	jno    0x4226c8
  4226eb:	fstp   DWORD PTR [ebx-0x2f0f49bb]
  4226f1:	add    al,0xb3
  4226f3:	lock jmp 0x4e8277f
  4226f9:	push   esp
  4226fa:	pop    ds
  4226fb:	adc    BYTE PTR [edi-0xf690673],dh
  422701:	cmp    DWORD PTR [ebx-0x1416fd63],0xfaaada77
  42270b:	adc    BYTE PTR [esi-0xf8904ef],al
  422711:	cmp    DWORD PTR [edi-0x77b923a1],ecx
  422717:	and    BYTE PTR [ebx-0x76],bl
  42271a:	cli    
  42271b:	push   bx
  42271d:	xor    BYTE PTR [eax-0x5b],0x7d
  422721:	fs xchg edi,eax
  422723:	push   ecx
  422724:	lock add BYTE PTR [esi-0x12],dh
  422728:	fiadd  DWORD PTR ds:0x85029e62
  42272e:	sub    DWORD PTR [edi+0x5e65c095],esp
  422734:	jbe    0x42273f
  422736:	sbb    ah,BYTE PTR [ecx+0x65]
  422739:	mov    DWORD PTR [edx+ecx*1-0x11],esp
  42273d:	sti    
  42273e:	inc    esi
  42273f:	pop    ecx
  422740:	fld    QWORD PTR [ecx]
  422742:	jmp    0x87c7a4e5
  422747:	or     ah,ch
  422749:	sti    
  42274a:	daa    
  42274b:	sahf   
  42274c:	add    al,BYTE PTR [eax-0x50]
  42274f:	ins    DWORD PTR es:[edi],dx
  422750:	jmp    0x22dcc17
  422755:	xchg   edx,ebp
  422757:	and    ebx,ebx
  422759:	or     al,0xb9
  42275b:	add    BYTE PTR ds:0x25990c30,dl
  422761:	outs   dx,BYTE PTR ds:[esi]
  422762:	nop
  422763:	mov    edx,0x3997dade
  422768:	(bad)  
  422769:	jmp    0x4226ef
  42276b:	sub    DWORD PTR [edi-0x61177b7a],edx
  422771:	add    ch,BYTE PTR [edi]
  422773:	ficomp WORD PTR [edx]
  422775:	jle    0x42276b
  422777:	xlat   BYTE PTR ds:[ebx]
  422778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422779:	jmp    0x4227aa
  42277b:	xlat   BYTE PTR ds:[ebx]
  42277c:	adc    eax,DWORD PTR [edi+0x35]
  42277f:	pop    ecx
  422780:	mov    edx,ebx
  422782:	int    0xbf
  422784:	xchg   esp,eax
  422785:	inc    esp
  422786:	jg     0x422730
  422788:	popf   
  422789:	outs   dx,DWORD PTR ds:[esi]
  42278a:	cli    
  42278b:	(bad)  [eax]
  42278d:	(bad)  [edi]
  42278f:	test   eax,0x6c0179ff
  422794:	fcmove st,st(6)
  422796:	push   ecx
  422797:	add    ebx,DWORD PTR [esi+0x55c8d53]
  42279d:	out    dx,al
  42279e:	sti    
  42279f:	add    BYTE PTR [ebx],ah
  4227a1:	scas   al,BYTE PTR es:[edi]
  4227a2:	add    DWORD PTR [eax],eax
  4227a4:	inc    esp
  4227a5:	adc    DWORD PTR [ecx+0x50],0xfffffffb
  4227a9:	fadd   DWORD PTR cs:[esp+esi*1]
  4227ad:	add    eax,DWORD PTR [eax]
  4227af:	mov    DWORD PTR [ecx],ecx
  4227b1:	xlat   BYTE PTR ds:[ebx]
  4227b2:	jnp    0x422782
  4227b4:	shr    ecx,cl
  4227b6:	adc    eax,0x432470
  4227bb:	test   DWORD PTR [edi+ebx*2+0x42],esi
  4227bf:	lea    eax,[eax]
  4227c1:	dec    ecx
  4227c2:	retf   
  4227c3:	push   eax
  4227c4:	lea    edi,[ecx]
  4227c6:	stos   DWORD PTR es:[edi],eax
  4227c7:	push   eax
  4227c8:	push   edi
  4227c9:	sub    ecx,DWORD PTR [eax-0x164d0b7b]
  4227cf:	not    DWORD PTR [eax-0x3d]
  4227d2:	pop    edi
  4227d3:	fdiv   st(7),st
  4227d5:	jmp    0xf4823840
  4227da:	jmp    0xc6bc0454
  4227df:	pop    es
  4227e0:	inc    esp
  4227e1:	pop    ecx
  4227e2:	retf   
  4227e3:	not    DWORD PTR ds:0x401348
  4227e9:	aaa    
  4227ea:	in     al,dx
  4227eb:	add    al,0x75
  4227ed:	shr    BYTE PTR [ebx],1
  4227ef:	jae    0x4227f9
  4227f1:	mov    bl,0x6e
  4227f3:	add    DWORD PTR [ecx],eax
  4227f5:	les    eax,FWORD PTR [edx]
  4227f7:	call   0xf82b49ec
  4227fc:	mov    edi,DWORD PTR [edi-0x2]
  4227ff:	cli    
  422800:	dec    esp
  422801:	sbb    al,0x2f
  422803:	enter  0xfb0f,0xdb
  422807:	add    BYTE PTR [eax],al
  422809:	je     0x42288a
  42280b:	jge    0x422815
  42280d:	call   FWORD PTR [eax+eiz*8-0x3a]
  422811:	leave  
  422812:	out    dx,eax
  422813:	add    DWORD PTR [ebx-0xbbae679],ecx
  422819:	popf   
  42281a:	fcom   st(7)
  42281c:	jg     0x4227fe
  42281e:	xchg   edi,eax
  42281f:	add    ecx,DWORD PTR [ebx]
  422821:	push   ds
  422822:	mov    eax,ds:0x5200fbf2
  422827:	jno    0x422863
  422829:	call   0x28154c8
  42282e:	mov    ch,0xdb
  422830:	(bad)  
  422831:	(bad)  
  422832:	(bad)  [ebx+0x5edd73f8]
  422838:	push   edx
  422839:	aam    0x35
  42283b:	das    
  42283c:	ret    
  42283d:	add    BYTE PTR [ebp+0x6889c760],bl
  422843:	cmp    edi,DWORD PTR [edx-0x37]
  422846:	mov    ds:0x9d00ae67,al
  42284b:	fisttp DWORD PTR [ebp+ebx*2-0x76401717]
  422852:	pusha  
  422853:	paddsb mm2,QWORD PTR ds:0xf684eb26
  42285a:	mov    ds:0xce371989,eax
  42285f:	xchg   esp,eax
  422860:	sbb    eax,0xfedf5cf2
  422865:	je     0x42280d
  422867:	rcr    ch,1
  422869:	call   esp
  42286b:	pop    eax
  42286c:	cld    
  42286d:	add    cl,BYTE PTR [esi+0x5]
  422870:	in     al,dx
  422871:	or     DWORD PTR [eax],ebp
  422873:	sbb    edi,edx
  422875:	mov    BYTE PTR [eax-0x29],bl
  422878:	mov    DWORD PTR [esi],edi
  42287a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42287b:	aam    0x71
  42287d:	hlt    
  42287e:	outs   dx,BYTE PTR ds:[esi]
  42287f:	mov    ds:0xf4964d3c,al
  422884:	nop
  422885:	shl    DWORD PTR [esi+ebx*1],0xa4
  422889:	call   0xf2e8528e
  42288e:	sti    
  42288f:	jmp    0x42282d
  422891:	jno    0x422877
  422893:	and    al,0x2
  422895:	sub    al,0xa0
  422897:	test   DWORD PTR [ebx+0x7966f678],ecx
  42289d:	and    al,0xe4
  42289f:	adc    al,0x3f
  4228a1:	pop    ecx
  4228a2:	mov    ebp,eax
  4228a4:	(bad)  
  4228a5:	mov    dh,0xda
  4228a7:	and    al,0x47
  4228a9:	push   ecx
  4228aa:	(bad)  
  4228ab:	rcr    BYTE PTR [esi+0x2b094960],1
  4228b1:	or     al,0xa0
  4228b3:	mov    al,0x7
  4228b5:	and    BYTE PTR [ecx+0x29],bl
  4228b8:	ja     0x42289f
  4228ba:	cmp    ch,dl
  4228bc:	jbe    0x42289d
  4228be:	mov    BYTE PTR [eax-0x52f9be5e],ch
  4228c4:	add    ch,cl
  4228c6:	jmp    0x3b90:0xef9c2bce
  4228cd:	pop    esi
  4228ce:	inc    edi
  4228cf:	rol    DWORD PTR [ebx-0x42],0xcc
  4228d3:	xchg   ebp,eax
  4228d4:	jg     0x422870
  4228d6:	cmp    eax,DWORD PTR ds:0xe6f6791b
  4228dc:	test   DWORD PTR [ecx],ebp
  4228de:	jo     0x422958
  4228e0:	jns    0x42287c
  4228e2:	aaa    
  4228e3:	and    al,bl
  4228e5:	mov    es,ebx
  4228e7:	mov    ch,0x1
  4228e9:	jecxz  0x42292f
  4228eb:	adc    al,0x3d
  4228ed:	mov    ch,0x69
  4228ef:	add    BYTE PTR [ebp+0x4ca39c7f],ah
  4228f5:	push   edx
  4228f6:	ror    DWORD PTR [esp+ecx*1],1
  4228f9:	in     al,dx
  4228fa:	(bad)  
  4228fc:	stos   BYTE PTR es:[edi],al
  4228fd:	ja     0x422953
  4228ff:	or     al,0x1a
  422901:	inc    edi
  422902:	ror    DWORD PTR [edx-0x17d3e663],0x9c
  422909:	inc    ebp
  42290a:	rol    DWORD PTR [edx-0x1eff20f8],1
  422910:	fwait
  422911:	imul   eax,DWORD PTR [edi],0xffffffad
  422914:	jae    0x4228fe
  422916:	out    0x31,eax
  422918:	push   0x70
  42291a:	cmp    BYTE PTR [edx-0x55],dh
  42291d:	cs call 0x44c4c8
  422923:	add    edi,DWORD PTR [ecx-0x11b6ba83]
  422929:	jns    0x422986
  42292b:	mov    ebp,0x77910136
  422930:	dec    ebx
  422931:	jp     0x422976
  422933:	mov    cl,0x77
  422935:	stos   DWORD PTR es:[edi],eax
  422936:	je     0x422924
  422938:	sub    eax,DWORD PTR [eax+0x3c]
  42293b:	push   edx
  42293c:	jg     0x4229bb
  42293e:	jne    0x4228c9
  422940:	ss xchg edx,eax
  422942:	or     ebp,ecx
  422944:	sahf   
  422945:	jecxz  0x422960
  422947:	je     0x4228d6
  422949:	mov    ds:0x2a366e8,al
  42294e:	add    BYTE PTR [esi],dh
  422950:	jae    0x42297c
  422952:	xchg   DWORD PTR [esi-0x6a254e00],esp
  422958:	neg    BYTE PTR [esi-0x594176fe]
  42295e:	jns    0x4229bb
  422960:	aad    0xeb
  422962:	jne    0x422920
  422964:	add    DWORD PTR [ecx-0x6e],eax
  422967:	cli    
  422968:	push   es
  422969:	pop    edx
  42296b:	aaa    
  42296c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42296d:	xchg   edx,eax
  42296e:	adc    eax,eax
  422970:	(bad)  
  422971:	out    0x47,eax
  422973:	pop    edx
  422974:	xchg   edx,eax
  422975:	jmp    0x642b2e26
  42297a:	sub    esp,0x6a
  42297d:	mov    ch,0x4a
  42297f:	dec    edi
  422980:	aas    
  422981:	push   eax
  422982:	cmp    DWORD PTR [ebp-0x1f],0x25
  422986:	aas    
  422987:	inc    eax
  422988:	add    BYTE PTR [ecx],al
  42298a:	mov    DWORD PTR [edi],0xb684
  422990:	add    bh,dh
  422992:	jne    0x4229bc
  422994:	add    BYTE PTR [ebx+0x6b],bl
  422997:	cmp    BYTE PTR [edx],al
  422999:	test   bh,bh
  42299b:	add    BYTE PTR [si-0x1],dh
  42299f:	punpckhbw mm0,QWORD PTR [eax]
  4229a2:	cmp    eax,DWORD PTR [eax]
  4229a4:	add    BYTE PTR [ebx+eax*4+0x5a2cd85d],dl
  4229ab:	ret    
  4229ac:	add    BYTE PTR [edx+eax*4],dh
  4229af:	gs aam 0x34
  4229b2:	jp     0x4229a4
  4229b4:	mov    eax,DWORD PTR [ecx+0x8b50ce]
  4229ba:	push   0xffffffac
  4229bc:	inc    ebp
  4229bd:	enter  0x7834,0x45
  4229c1:	int3   
  4229c2:	mov    ebp,0x2e8d05b
  4229c7:	aas    
  4229c8:	idiv   edi
  4229ca:	add    dh,0x7
  4229cd:	test   BYTE PTR [esi-0x1],bl
  4229d0:	(bad)  
  4229d1:	inc    DWORD PTR [edi]
  4229d3:	mov    edi,0x630f685
  4229d8:	cmp    BYTE PTR [esi],0x4
  4229db:	pop    esp
  4229dc:	(bad)  
  4229dd:	aas    
  4229de:	je     0x422a54
  4229e0:	add    DWORD PTR [eax],eax
  4229e2:	add    BYTE PTR [edx],al
  4229e4:	ds jmp 0x42299c
  4229e7:	or     eax,DWORD PTR [ecx]
  4229e9:	add    ah,al
  4229eb:	jle    0x422a66
  4229ed:	add    eax,0xfec8820c
  4229f2:	hlt    
  4229f3:	add    eax,0xfec5d385
  4229f8:	inc    ebp
  4229fa:	sub    ecx,0x8384eb00
  422a00:	inc    ebp
  422a01:	enter  0xc19d,0x4e
  422a05:	inc    eax
  422a06:	call   0xbf57:0x794586b9
  422a0d:	or     esp,DWORD PTR [ecx]
  422a0f:	ja     0x422a0f
  422a11:	call   FWORD PTR [ebp+0x260c6cb0]
  422a17:	out    dx,eax
  422a18:	ja     0x422a28
  422a1a:	fstp   st(3)
  422a1c:	hlt    
  422a1d:	jae    0x422a1f
  422a1f:	xchg   ebp,eax
  422a20:	sub    al,0xf5
  422a22:	ror    ch,cl
  422a24:	int3   
  422a25:	mov    edi,0x14846687
  422a2a:	stc    
  422a2b:	push   edx
  422a2c:	cmp    DWORD PTR [ebx-0x40],0x4582ccd0
  422a33:	push   ebp
  422a34:	test   BYTE PTR [esi],bl
  422a36:	inc    eax
  422a37:	cmp    bl,BYTE PTR [ecx-0x78]
  422a3a:	fcomp  DWORD PTR [eax]
  422a3c:	inc    ebp
  422a3d:	push   0xffffffbe
  422a3f:	xor    al,0xc7
  422a41:	(bad)  
  422a42:	call   FWORD PTR [ebp-0x6099e23b]
  422a48:	inc    esi
  422a49:	cmp    dh,al
  422a4b:	ins    DWORD PTR es:[edi],dx
  422a4c:	inc    eax
  422a4d:	ins    BYTE PTR es:[edi],dx
  422a4e:	and    al,0x16
  422a50:	mov    eax,ds:0x1f1be827
  422a55:	cmc    
  422a56:	sti    
  422a57:	and    al,0x9f
  422a59:	fistp  QWORD PTR [edi-0xb]
  422a5c:	and    BYTE PTR [esp+eax*4],al
  422a5f:	dec    ebx
  422a60:	(bad)  
  422a62:	push   DWORD PTR [edi-0x2c]
  422a65:	imul   edi,esi,0x50d79f29
  422a6b:	shl    BYTE PTR [esi-0x25],cl
  422a6e:	sti    
  422a6f:	repz call 0x76f80ee2
  422a75:	ret    0xbafa
  422a78:	bound  edi,QWORD PTR [edx]
  422a7a:	in     al,0x1e
  422a7c:	add    esp,ecx
  422a7e:	repz xchg esi,eax
  422a80:	jle    0x422a99
  422a82:	add    eax,0x5e029d00
  422a87:	dec    ebx
  422a88:	lds    esi,FWORD PTR ds:0x6f522fae
  422a8e:	in     al,dx
  422a8f:	jl     0x422a79
  422a91:	out    dx,al
  422a92:	into   
  422a93:	cld    
  422a94:	jp     0x422a94
  422a96:	popa   
  422a97:	bnd jbe 0x422b15
  422a9a:	and    al,0xf8
  422a9c:	ret    0x70c2
  422a9f:	push   ecx
  422aa0:	jne    0x422acd
  422aa2:	and    al,0xf8
  422aa4:	xchg   esi,eax
  422aa5:	jle    0x422a8d
  422aa7:	add    al,0x9d
  422aa9:	add    ah,BYTE PTR [eax+0x49]
  422aac:	inc    ecx
  422aad:	sub    ebp,DWORD PTR [esp+eiz*8]
  422ab0:	xchg   esi,eax
  422ab1:	sub    BYTE PTR [ebp+0x5e029d04],0x79
  422ab8:	dec    ecx
  422ab9:	jge    0x422adf
  422abb:	hlt    
  422abc:	mov    dl,0x26
  422abe:	cdq    
  422abf:	add    al,0x96
  422ac1:	jle    0x422a4f
  422ac3:	add    al,0x9d
  422ac5:	add    bl,BYTE PTR [esi+0x8]
  422ac8:	dec    ebp
  422ac9:	jl     0x422aac
  422acb:	xchg   esp,esp
  422acd:	clc    
  422ace:	ins    BYTE PTR es:[edi],dx
  422acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ad0:	popf   
  422ad1:	add    ch,cl
  422ad3:	ss push es
  422ad5:	fucom  st(1)
  422ad7:	xchg   esp,esp
  422ad9:	ins    DWORD PTR es:[edi],dx
  422ada:	loopne 0x422b26
  422adc:	sbb    esi,esi
  422ade:	loopne 0x422a63
  422ae0:	in     al,0x26
  422ae2:	xchg   esp,eax
  422ae3:	div    BYTE PTR [edx+0x4960c2]
  422ae9:	stc    
  422aea:	sub    ah,BYTE PTR [edi+eiz*8+0x416e554f]
  422af1:	in     eax,0x76
  422af3:	in     eax,0x84
  422af5:	inc    edx
  422af6:	sub    al,BYTE PTR [eax]
  422af8:	jmp    0xe9c9512f
  422afd:	push   ds
  422afe:	sub    al,BYTE PTR [eax]
  422b00:	pop    ebp
  422b01:	or     DWORD PTR fs:[ebp-0x27],0x39b10623
  422b09:	pop    es
  422b0a:	les    eax,FWORD PTR [ebp-0x7f]
  422b0d:	iret   
  422b0e:	and    BYTE PTR [ecx+0x15ec3d2c],cl
  422b14:	inc    ecx
  422b15:	stos   DWORD PTR es:[edi],eax
  422b16:	inc    edx
  422b17:	add    BYTE PTR [ebp+ebx*8-0x66],ah
  422b1b:	mov    DWORD PTR [ecx+ebp*1],esp
  422b1e:	jp     0x422b7d
  422b20:	pop    ebp
  422b21:	jmp    0xd5e8e38b
  422b26:	mov    esi,0x29ee8ff
  422b2b:	call   0xfc2fa03e
  422b30:	jb     0x422b1f
  422b32:	fiadd  DWORD PTR [ecx+ebp*4+0x2c872fc5]
  422b39:	dec    ebp
  422b3a:	inc    ebx
  422b3b:	mov    DWORD PTR [ecx*2-0x4fb2bad0],esp
  422b42:	xchg   ebp,eax
  422b43:	test   DWORD PTR [edx-0x56],eax
  422b46:	cli    
  422b47:	xchg   BYTE PTR [edx+edx*1+0xea04c5],ch
  422b4e:	les    esp,FWORD PTR [edi]
  422b50:	xchg   DWORD PTR [esi+ecx*1+0xf7934ec],ebp
  422b57:	push   cs
  422b58:	js     0x422b35
  422b5a:	pop    esi
  422b5b:	add    al,BYTE PTR [edi-0x4ad1164]
  422b61:	fnsave [ecx]
  422b63:	or     BYTE PTR [ebp+0x15],0x9b
  422b67:	mov    edi,0x7d010151
  422b6c:	cli    
  422b6d:	push   cs
  422b6e:	fwait
  422b6f:	retf   0x89
  422b72:	add    esp,ecx
  422b74:	cmp    DWORD PTR [ebp-0x34],0xfffffff4
  422b78:	inc    ebp
  422b79:	in     al,dx
  422b7a:	aas    
  422b7b:	cmp    ch,ah
  422b7d:	cmp    edi,ecx
  422b7f:	jecxz  0x422b88
  422b81:	or     BYTE PTR [eax+0x7ffff7f1],0x51
  422b88:	sub    BYTE PTR [ebp+0x7e],dh
  422b8b:	bnd jne 0x422b82
  422b8e:	pop    esp
  422b8f:	inc    ebx
  422b90:	xchg   dh,bh
  422b92:	arpl   bp,ax
  422b94:	sbb    al,0x85
  422b96:	aas    
  422b97:	outs   dx,DWORD PTR ds:[esi]
  422b98:	add    edi,edi
  422b9a:	mov    ecx,0xd233e8ea
  422b9f:	hlt    
  422ba0:	mul    DWORD PTR [ecx]
  422ba2:	loope  0x422b8e
  422ba4:	add    DWORD PTR [ebp+0x8],0x6b
  422ba8:	aas    
  422ba9:	and    al,0xbd
  422bab:	push   ecx
  422bac:	sub    dh,al
  422bae:	jns    0x422b85
  422bb0:	add    DWORD PTR [ebx-0x7c258700],ecx
  422bb6:	jge    0x422bb4
  422bb8:	lds    esi,FWORD PTR [esi+ecx*4]
  422bbb:	mov    dl,0xf1
  422bbd:	add    DWORD PTR [ebp+0x24],0x65
  422bc1:	jge    0x422bb3
  422bc3:	int3   
  422bc4:	or     eax,DWORD PTR [esi+0x7567c3fe]
  422bca:	enter  0xc75c,0x3d
  422bce:	jmp    DWORD PTR [ebx+0x68]
  422bd1:	inc    ebp
  422bd2:	sti    
  422bd3:	outs   dx,DWORD PTR ds:[esi]
  422bd4:	call   0xc70ea165
  422bd9:	loopne 0x422c18
  422bdb:	mov    bl,0xf1
  422bdd:	sub    al,al
  422bdf:	and    edx,DWORD PTR [ecx+0x53]
  422be2:	leave  
  422be3:	mov    dh,0xfa
  422be5:	call   DWORD PTR [edi+ebp*2-0x1e]
  422be9:	sub    esp,0xfff7b99d
  422bef:	rcr    BYTE PTR [ebx+0x63],cl
  422bf2:	clc    
  422bf3:	popf   
  422bf4:	mov    WORD PTR [ecx+0x53],ds
  422bf7:	xor    eax,0x9d3fa6fd
  422bfc:	pop    ss
  422bfd:	inc    ebx
  422bfe:	repz mov dl,0xd7
  422c01:	adc    ch,ah
  422c03:	(bad)  
  422c04:	sbb    DWORD PTR [ecx+eiz*4],eax
  422c07:	popf   
  422c08:	mov    ds:0x7260044,eax
  422c0d:	lock mov ecx,0x4576dbde
  422c13:	lea    ebx,[ecx-0x19]
  422c16:	or     al,0x0
  422c18:	jbe    0x422c09
  422c1a:	jl     0x422c1e
  422c1c:	push   ds
  422c1d:	mov    ah,0xfb
  422c1f:	ins    DWORD PTR es:[edi],dx
  422c20:	scas   al,BYTE PTR es:[edi]
  422c21:	lock inc edx
  422c23:	lock repnz int 0xf9
  422c27:	inc    edx
  422c28:	cdq    
  422c29:	fidiv  DWORD PTR [ebx+0x18]
  422c2c:	es das 
  422c2e:	cld    
  422c2f:	cli    
  422c30:	into   
  422c31:	(bad)  
  422c32:	jp     0x422c76
  422c34:	cdq    
  422c35:	jl     0x422cab
  422c37:	or     BYTE PTR [esi-0x7917b09c],cl
  422c3d:	aas    
  422c3e:	icebp  
  422c3f:	sti    
  422c40:	sbb    BYTE PTR [esi+eiz*2+0x16d6165e],bl
  422c47:	inc    ebp
  422c48:	sub    eax,0x987fefd9
  422c4d:	dec    ebx
  422c4e:	sti    
  422c4f:	mov    BYTE PTR [eax+0x16c27443],cl
  422c55:	lahf   
  422c56:	mul    DWORD PTR [edi-0x7]
  422c59:	add    BYTE PTR [eax+eax*1-0x6],0xc6
  422c5e:	out    dx,eax
  422c5f:	push   cs
  422c60:	pop    ebp
  422c61:	fstp   TBYTE PTR [edi+edi*1+0x5d]
  422c65:	add    ch,BYTE PTR [ebx+eax*8-0x6a]
  422c69:	jle    0x422cab
  422c6b:	add    bl,BYTE PTR [ebp-0x62fc7efe]
  422c71:	add    bh,cl
  422c73:	pop    ebx
  422c74:	mov    edx,0x6d03e94f
  422c79:	ja     0x422c17
  422c7b:	mov    edi,0x219cc500
  422c80:	add    ebx,DWORD PTR [ebp+0x2abf9c79]
  422c86:	pop    edi
  422c87:	mov    cl,0x4
  422c89:	adc    al,0x38
  422c8b:	test   eax,0xabba2255
  422c90:	dec    ecx
  422c91:	push   ecx
  422c92:	add    ah,BYTE PTR [eax+0x49]
  422c95:	popa   
  422c96:	fisub  DWORD PTR [edi]
  422c98:	xor    DWORD PTR [esi-0x593b9a1b],eax
  422c9e:	jle    0x422cef
  422ca0:	add    eax,0x87c0029d
  422ca5:	pushf  
  422ca6:	add    ch,cl
  422ca8:	pop    ecx
  422ca9:	bound  eax,QWORD PTR [esp+ebp*2-0x47]
  422cad:	aas    
  422cae:	in     eax,dx
  422caf:	xchg   edx,eax
  422cb0:	out    dx,eax
  422cb1:	inc    ebp
  422cb2:	xlat   BYTE PTR ds:[ebx]
  422cb3:	mov    bh,0xef
  422cb5:	inc    esi
  422cb6:	jns    0x422d31
  422cb8:	fdivr  QWORD PTR [esi+0x7903e95c]
  422cbe:	(bad)  
  422cbf:	cmc    
  422cc0:	add    bh,BYTE PTR [ebx+0x1f810a00]
  422cc6:	shr    al,1
  422cc8:	add    ebx,DWORD PTR [ebp-0x7cac0aa8]
  422cce:	add    ah,BYTE PTR [ecx+edi*4-0x37]
  422cd2:	in     eax,0x4a
  422cd4:	out    dx,eax
  422cd5:	mov    bh,BYTE PTR [edx-0x423d23be]
  422cdb:	cmp    ebp,edi
  422cdd:	and    dl,al
  422cdf:	add    BYTE PTR [edi-0x49a8200],dh
  422ce5:	jmp    0x422d4c
  422ce7:	push   es
  422ce8:	lea    ebx,[ebp+eax*1-0x18]
  422cec:	sti    
  422ced:	push   ds
  422cee:	or     DWORD PTR [ecx-0x25611700],esi
  422cf4:	sbb    eax,0x8de8ba05
  422cf9:	ins    BYTE PTR es:[edi],dx
  422cfa:	test   ecx,ebp
  422cfc:	sti    
  422cfd:	dec    BYTE PTR [esi+0x7d]
  422d00:	ret    0xd799
  422d03:	sbb    edi,DWORD PTR [edi-0x12]
  422d06:	lahf   
  422d07:	outs   dx,DWORD PTR ds:[esi]
  422d08:	pop    ss
  422d09:	je     0x422cf0
  422d0b:	lods   eax,DWORD PTR ds:[esi]
  422d0c:	std    
  422d0d:	fimul  WORD PTR [ebx-0x61164755]
  422d13:	add    ch,al
  422d15:	int    0x7f
  422d17:	call   0x2f57a217
  422d1c:	sti    
  422d1d:	mov    esi,0xaf87538b
  422d22:	push   edi
  422d23:	(bad)  
  422d24:	lea    esp,[edx+esi*4-0x19]
  422d28:	sti    
  422d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d2a:	into   
  422d2b:	out    0x75,eax
  422d2d:	icebp  
  422d2e:	sbb    eax,0x4393dc7e
  422d33:	call   0x7df1ae88
  422d38:	add    cl,ch
  422d3a:	adc    eax,0x5e540bc3
  422d3f:	jg     0x422d01
  422d41:	cld    
  422d42:	xor    DWORD PTR ds:0xa80007c0,edx
  422d48:	jge    0x422d26
  422d4a:	arpl   WORD PTR [ebx],si
  422d4c:	call   0x2e37d0a
  422d51:	add    BYTE PTR [ebp+eiz*1-0x1f],ah
  422d55:	repz dec esi
  422d57:	sti    
  422d58:	rol    BYTE PTR [eax],0x0
  422d5b:	hlt    
  422d5c:	aas    
  422d5d:	dec    ecx
  422d5e:	jne    0x422dbd
  422d60:	push   0xe77fe845
  422d65:	jp     0x422d50
  422d67:	enter  0xc080,0xc
  422d6b:	and    eax,0x1c7d8d50
  422d70:	xor    eax,eax
  422d72:	call   0x38b6d5
  422d77:	inc    eax
  422d78:	mov    edi,0x82494274
  422d7d:	dec    esp
  422d7e:	(bad)  
  422d7f:	mov    ebx,0x3ef62bd5
  422d84:	cmp    esi,DWORD PTR ds:0xbff29c98
  422d8a:	(bad)  
  422d8b:	mov    ebx,0x80c17b3c
  422d90:	xor    dh,0x10
  422d93:	test   ah,0x2b
  422d96:	shl    dl,0x67
  422d99:	add    eax,ebp
  422d9b:	rol    DWORD PTR [esi+0x3bedfff6],cl
  422da1:	lock push 0xffffff80
  422da4:	fs inc ebp
  422da6:	lock test BYTE PTR [eax+0x4],cl
  422daa:	lea    eax,[eax]
  422dac:	icebp  
  422dad:	inc    edx
  422dae:	idiv   bh
  422db0:	cmp    ecx,DWORD PTR [esi-0x73]
  422db3:	test   DWORD PTR [eax],ecx
  422db5:	fdiv   st,st(7)
  422db7:	inc    DWORD PTR [esi+eax*8-0xcb8a1b]
  422dbe:	out    0x7c,eax
  422dc0:	mov    cl,0xd5
  422dc2:	imul   ecx
  422dc4:	rcl    ah,cl
  422dc6:	idiv   edi
  422dc8:	mov    esi,0x40213bfd
  422dcd:	repz cmp ebp,DWORD PTR ds:0x403c0af0
  422dd4:	popf   
  422dd5:	(bad)  
  422dd8:	imul   ecx,ebp,0x3
  422ddb:	cs out 0x4f,al
  422dde:	std    
  422ddf:	scas   al,BYTE PTR es:[edi]
  422de0:	mov    eax,ds:0x9faef650
  422de5:	inc    eax
  422de6:	add    ch,BYTE PTR [edi-0x5101bf62]
  422dec:	pushf  
  422ded:	xchg   esp,eax
  422dee:	js     0x422e65
  422df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df1:	add    al,0x72
  422df3:	or     al,0xd2
  422df5:	xor    bh,0x52
  422df8:	retf   0x67ed
  422dfb:	push   cs
  422dfc:	pop    ebp
  422dfd:	(bad)  [edi+0x2f]
  422e00:	(bad)  [edi-0x43]
  422e03:	call   0xfc2f1450
  422e08:	and    DWORD PTR [ecx],ebx
  422e0a:	js     0x422e35
  422e0c:	xchg   edx,eax
  422e0d:	fwait
  422e0e:	sar    BYTE PTR [edi+0x0],0x85
  422e12:	in     al,dx
  422e13:	jae    0x422e2d
  422e15:	in     eax,0xe8
  422e17:	cmp    esi,0xffffff9d
  422e1a:	jmp    0x422e1b
  422e1c:	inc    edi
  422e1d:	xchg   edx,eax
  422e1e:	outs   dx,DWORD PTR ds:[esi]
  422e1f:	jp     0x422e21
  422e21:	popf   
  422e22:	jmp    0x422e5b
  422e24:	je     0x422dc4
  422e26:	and    esi,DWORD PTR [ebx+0x8]
  422e29:	push   ds
  422e2a:	(bad)  
  422e2b:	jmp    0x422e2e
  422e2d:	pop    ebx
  422e2e:	das    
  422e2f:	cmc    
  422e30:	add    DWORD PTR ds:0xa37501a5,ebx
  422e36:	inc    dx
  422e38:	mov    esp,0xfb2ba235
  422e3d:	inc    edx
  422e3e:	push   ebp
  422e3f:	out    0x85,eax
  422e41:	cmp    dl,bh
  422e43:	test   DWORD PTR [ebp+0x7cd717a8],ecx
  422e49:	data16 jo 0x422e38
  422e4c:	xchg   eax,eax
  422e4e:	add    dh,cl
  422e50:	cmc    
  422e51:	pusha  
  422e52:	(bad)  
  422e54:	cld    
  422e55:	sbb    DWORD PTR [ecx],ecx
  422e57:	call   0xd6cfcb5f
  422e5c:	call   FWORD PTR [ebx]
  422e5e:	inc    esi
  422e5f:	icebp  
  422e60:	jp     0x422ec2
  422e62:	or     ah,BYTE PTR [ebp+esi*8+0x74]
  422e66:	or     eax,0x5a90ec99
  422e6b:	xlat   BYTE PTR ds:[ebx]
  422e6c:	inc    ebx
  422e6d:	popf   
  422e6e:	lea    ebx,[ecx]
  422e70:	xchg   bh,cl
  422e72:	adc    DWORD PTR [ebx-0x25],ebp
  422e75:	add    BYTE PTR [ebp+0x607ee902],bl
  422e7b:	mov    dl,0xb9
  422e7d:	pop    ecx
  422e7e:	jae    0x422e6a
  422e80:	cmp    dh,BYTE PTR [edi]
  422e82:	mov    dh,0xe1
  422e84:	outs   dx,BYTE PTR ds:[esi]
  422e85:	ds int 0x85
  422e88:	mov    ebx,fs
  422e8a:	popf   
  422e8b:	mov    ebx,DWORD PTR [ebx+ecx*8-0x3d4e72b4]
  422e92:	loopne 0x422e4a
  422e94:	jmp    0xc2010715
  422e99:	cmp    eax,0x80cae1d2
  422e9e:	pop    ebp
  422e9f:	adc    DWORD PTR [ecx+ecx*4-0x63],ebp
  422ea3:	add    ch,cl
  422ea5:	js     0x422e8f
  422ea7:	mov    dh,0xc1
  422ea9:	or     DWORD PTR [edx+0x36ddaae1],esi
  422eaf:	add    ch,cl
  422eb1:	add    eax,ebx
  422eb3:	push   ds
  422eb4:	cmp    dl,BYTE PTR [ebx+0x20]
  422eb7:	xchg   DWORD PTR ds:0xffe146eb,esi
  422ebd:	add    ebp,ebp
  422ebf:	loope  0x422e9d
  422ec1:	das    
  422ec2:	pop    DWORD PTR [edx-0x17]
  422ec5:	xchg   BYTE PTR [ecx+0xe],bl
  422ec8:	add    BYTE PTR [esp+ebx*1-0x4a],ah
  422ecc:	stc    
  422ecd:	outs   dx,BYTE PTR ds:[esi]
  422ece:	mov    eax,DWORD PTR ss:[ebp-0x422f82b]
  422ed5:	ins    BYTE PTR es:[edi],dx
  422ed6:	sbb    al,0x3e
  422ed8:	sti    
  422ed9:	push   esi
  422eda:	add    dh,dh
  422edc:	xor    DWORD PTR [esi-0x17],esp
  422edf:	not    DWORD PTR [ebx+0xc]
  422ee2:	jo     0x422f28
  422ee4:	ds sti 
  422ee6:	ds push es
  422ee8:	fnsave [edx-0x1f]
  422eeb:	fild   WORD PTR [esi-0x2309d190]
  422ef1:	jmp    edi
  422ef3:	sahf   
  422ef4:	add    bh,bl
  422ef6:	hlt    
  422ef7:	idiv   DWORD PTR ds:[edi]
  422efa:	jmp    0xde440922
  422eff:	sbb    eax,0xc606fb13
  422f04:	pusha  
  422f05:	mov    ebp,0xfbdcc779
  422f0a:	jmp    0xee66b1b6
  422f0f:	mov    bh,0xdc
  422f11:	lea    ebp,[edx+ebp*2-0x26]
  422f15:	sti    
  422f16:	fsubp  st(6),st
  422f18:	jmp    0xfae9:0x2a15127
  422f1f:	ja     0x422efd
  422f21:	sti    
  422f22:	scas   eax,DWORD PTR es:[edi]
  422f23:	fst    st(3)
  422f25:	add    al,dl
  422f27:	jo     0x422f06
  422f29:	sti    
  422f2a:	mov    dh,0xcc
  422f2c:	(bad)  [ebp-0x1f]
  422f2f:	iret   
  422f30:	fist   DWORD PTR ds:0x42b321
  422f36:	cmp    DWORD PTR [edx+0x66a687c2],ecx
  422f3c:	add    esp,esi
  422f3e:	mov    es,WORD PTR [eax]
  422f40:	aaa    
  422f41:	xchg   eax,eax
  422f43:	add    BYTE PTR [ecx],bh
  422f45:	stc    
  422f46:	mov    WORD PTR [ebp+0x8],es
  422f49:	mov    esp,0xecb33b24
  422f4e:	cmp    eax,0xffffffb9
  422f51:	in     al,dx
  422f52:	jne    0x422f2d
  422f54:	ins    DWORD PTR es:[edi],dx
  422f55:	xor    esi,edi
  422f57:	push   DWORD PTR [ebx+0x5a]
  422f5a:	jne    0x422f30
  422f5c:	pop    esp
  422f5d:	cmp    dh,BYTE PTR [edx]
  422f5f:	call   DWORD PTR [ebx-0x78]
  422f62:	dec    ebp
  422f63:	clc    
  422f64:	add    eax,0xa5207389
  422f69:	pop    eax
  422f6a:	daa    
  422f6b:	push   0xffffffd1
  422f6d:	pop    edx
  422f6e:	mov    ebp,0xf7ecb2bc
  422f73:	pop    eax
  422f74:	lods   al,BYTE PTR ds:[esi]
  422f75:	push   esi
  422f76:	loope  0x422f77
  422f78:	mov    bl,0x60
  422f7a:	imul   ebx,DWORD PTR [esi+ebx*1],0x27
  422f7e:	add    edi,0x3f
  422f81:	cdq    
  422f82:	call   0xf82b5eab
  422f87:	test   DWORD PTR [edx+edx*2+0x26fa8a07],eax
  422f8e:	cmp    al,0x3b
  422f90:	sub    bh,bl
  422f92:	jg     0x422f54
  422f94:	stc    
  422f95:	add    bh,BYTE PTR [ebx+0x4d]
  422f98:	jl     0x422f90
  422f9a:	add    BYTE PTR [ebx-0x60],0x15
  422f9e:	test   DWORD PTR [ecx-0x38cc452f],0x5e14b800
  422fa8:	cmp    DWORD PTR [edx+edx*2+0x16b78b31],ebx
  422faf:	xor    eax,edi
  422fb1:	test   al,0x0
  422fb3:	pop    esi
  422fb4:	cmp    DWORD PTR [edi+ebp*2],edi
  422fb7:	and    eax,0xb558526a
  422fbc:	in     al,0x9d
  422fbe:	jne    0x422fa9
  422fc0:	sti    
  422fc1:	in     eax,0x81
  422fc3:	dec    ebp
  422fc4:	loope  0x423000
  422fc6:	mov    cl,ch
  422fc8:	outs   dx,DWORD PTR ds:[esi]
  422fc9:	ins    DWORD PTR es:[edi],dx
  422fca:	push   esp
  422fcb:	mov    esi,0x4fc5aefb
  422fd0:	(bad)  
  422fd1:	fcomp  DWORD PTR [ebp+0x54]
  422fd4:	call   0xfc284767
  422fd9:	push   ds
  422fda:	and    eax,0x64b9e714
  422fdf:	inc    ebp
  422fe0:	xor    al,0xc6
  422fe2:	sub    BYTE PTR [eax+0x5c],dh
  422fe5:	sbb    eax,0x4a740401
  422fea:	mov    bl,0x8
  422fec:	lea    esi,[eax]
  422fee:	in     eax,dx
  422fef:	jmp    0xd7b312ef
  422ff4:	es mov esp,0x4efbe927
  422ffa:	mov    ch,0x7c
  422ffc:	ret    0x666d
  422fff:	cmp    ebp,esp
  423001:	ins    DWORD PTR es:[edi],dx
  423002:	add    DWORD PTR [ebx],edi
  423004:	retf   0x7bb
  423007:	test   esp,eax
  423009:	add    BYTE PTR [ecx+0x6e7ac0c4],ah
  42300f:	in     al,dx
  423010:	mov    edi,0xd355a250
  423015:	lea    ebx,[eax]
  423017:	rcr    BYTE PTR [ebp-0x2],1
  42301a:	jmp    0x7cb5:0x8ba7f2b3
  423021:	inc    ebp
  423022:	jns    0x423017
  423024:	cli    
  423025:	pop    es
  423026:	aaa    
  423027:	sub    DWORD PTR [esi*2-0x1395635d],eax
  42302e:	jne    0x42308e
  423030:	jbe    0x42302c
  423032:	bound  ebp,QWORD PTR [ecx+0x5a]
  423035:	in     al,dx
  423036:	popf   
  423037:	add    cl,BYTE PTR [esi-0x5eb02c06]
  42303d:	and    ebp,DWORD PTR [edx]
  42303f:	or     ecx,DWORD PTR [edi+0x44]
  423042:	popf   
  423043:	or     BYTE PTR [ecx+esi*8],0x36
  423047:	pop    eax
  423048:	fld    QWORD PTR [ebx+0x6ee7faaa]
  42304e:	lahf   
  42304f:	sub    esi,0xdb559d1b
  423055:	icebp  
  423056:	pusha  
  423057:	fimul  DWORD PTR [ecx]
  423059:	jo     0x422ffc
  42305b:	jmp    0xd5cab443
  423060:	call   0x9cc3c9d3
  423065:	jmp    0x42300c
  423067:	aam    0xac
  423069:	jmp    0x423010
  42306b:	or     eax,0x9c00d465
  423070:	add    ch,cl
  423072:	jl     0x423016
  423074:	sub    ah,BYTE PTR [ebx]
  423076:	mov    ds:0x48c36c02,al
  42307c:	lock mov ss,WORD PTR [eax]
  42307f:	sbb    BYTE PTR [eax+0x5d],ah
  423082:	dec    ebx
  423083:	mov    ch,0x65
  423085:	or     eax,ebp
  423087:	mov    dh,0x89
  423089:	sub    dl,BYTE PTR [ebx+0x3b]
  42308c:	add    eax,0x47af4c0e
  423091:	icebp  
  423092:	adc    ch,BYTE PTR [ecx]
  423094:	sbb    edx,ebp
  423096:	jae    0x423059
  423098:	jmp    0xd46e:0xdd97c19b
  42309f:	adc    al,0x37
  4230a1:	fld    DWORD PTR [ecx-0x709af2ad]
  4230a7:	pushf  
  4230a8:	add    ch,cl
  4230aa:	xor    bl,BYTE PTR [ebp+0x1b]
  4230ad:	es sbb al,0xef
  4230b0:	inc    eax
  4230b1:	add    BYTE PTR [ebx+0x65],ah
  4230b4:	or     eax,0x57bbb080
  4230b9:	add    ch,BYTE PTR [edi-0x6dfa0d63]
  4230bf:	dec    eax
  4230c0:	pop    ebp
  4230c1:	stc    
  4230c2:	ret    0x6cd
  4230c5:	ret    0x8ee5
  4230c8:	and    al,BYTE PTR [eax-0x3e]
  4230cb:	fild   QWORD PTR [edx]
  4230cd:	outs   dx,BYTE PTR ds:[esi]
  4230ce:	mov    al,BYTE PTR [esi-0x3]
  4230d1:	jle    0x4230c5
  4230d3:	add    BYTE PTR [esi+0x2],bh
  4230d6:	or     esp,DWORD PTR [edx+edi*2+0x3]
  4230da:	add    cl,ch
  4230dc:	je     0x4230d8
  4230de:	mov    esp,ds
  4230e0:	es cmp ch,al
  4230e3:	jecxz  0x4230e3
  4230e5:	fdivr  st,st(3)
  4230e7:	bound  edi,QWORD PTR [edx]
  4230e9:	xor    ah,BYTE PTR [esi-0x10]
  4230ec:	jmp    0xd903:0x245f
  4230f2:	mov    DWORD PTR [esi+ebp*8-0x5ec682a4],ebp
  4230f9:	or     DWORD PTR [ebp+ebp*4+0x6a000299],eax
  423100:	cmp    al,0xea
  423102:	add    BYTE PTR [edi+0x39],dl
  423105:	(bad)  
  423106:	aas    
  423107:	jmp    0x15580a74
  42310c:	pop    DWORD PTR [edx+0x0]
  42310f:	xchg   DWORD PTR [ecx],eax
  423111:	lds    ebp,FWORD PTR ds:[edx+0x2985609e]
  423118:	or     eax,0xe2f48742
  42311d:	lds    edi,FWORD PTR [edi]
  42311f:	jmp    0x1eb6fb41
  423124:	mov    dl,BYTE PTR [ecx-0x1ba6c740]
  42312a:	les    eax,FWORD PTR [eax]
  42312c:	pop    edx
  42312d:	in     eax,0x85
  42312f:	shl    BYTE PTR [eax+0x41b706f8],0x44
  423136:	lds    eax,FWORD PTR [ebx+0x0]
  423139:	inc    esp
  42313a:	adc    ecx,ecx
  42313c:	mov    DWORD PTR [ecx-0x4f2d7a42],eax
  423142:	or     BYTE PTR [esi-0x7d],bl
  423145:	push   0x43732018
  42314a:	cmp    ah,BYTE PTR [eax]
  42314c:	pop    edx
  42314d:	mov    ds:0x3b48145d,al
  423152:	lods   eax,DWORD PTR ds:[esi]
  423153:	adc    eax,0x40f15c
  423158:	inc    ecx
  423159:	dec    edi
  42315a:	call   0xf015:0xe552e66a
  423161:	push   es
  423162:	inc    eax
  423163:	add    bh,bh
  423165:	out    0xd7,eax
  423167:	add    BYTE PTR [ebx-0x28],0x39
  42316b:	add    al,ch
  42316d:	add    al,0xc1
  42316f:	idiv   bh
  423171:	outs   dx,DWORD PTR ds:[esi]
  423172:	out    0x85,eax
  423174:	(bad)  
  423175:	sti    
  423176:	pop    ebx
  423177:	mov    ah,0x0
  423179:	(bad)  
  42317a:	jmp    DWORD PTR [ecx+0x3c]
  42317d:	fimul  DWORD PTR [ebp-0x73]
  423180:	test   DWORD PTR [ebp+eiz*8+0x1efff7],edx
  423187:	push   eax
  423188:	push   DWORD PTR [ecx-0x3bbff1d5]
  42318e:	add    ah,0xc
  423191:	cmp    DWORD PTR [edx-0x1a540120],eax
  423197:	push   eax
  423198:	push   0xffffff84
  42319a:	in     al,0x6b
  42319c:	or     al,0x0
  42319e:	or     eax,0x6bfee0ac
  4231a3:	in     eax,0xf7
  4231a5:	jae    0x423144
  4231a7:	loope  0x42318d
  4231a9:	adc    eax,0x3fd6fd
  4231ae:	push   ds
  4231af:	sar    edi,0x74
  4231b2:	in     eax,0x2f
  4231b4:	or     cl,BYTE PTR [ebp-0x41cdad8]
  4231ba:	pop    edx
  4231bb:	icebp  
  4231bc:	(bad)  [esi+0x72]
  4231bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231c0:	in     eax,0x66
  4231c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231c3:	outs   dx,BYTE PTR ds:[esi]
  4231c4:	stos   DWORD PTR es:[edi],eax
  4231c5:	sbb    al,0x42
  4231c7:	je     0x4231ae
  4231c9:	pop    eax
  4231ca:	inc    ebp
  4231cb:	sub    eax,0x6832fbc5
  4231d0:	arpl   sp,bp
  4231d2:	popf   
  4231d3:	push   eax
  4231d4:	dec    ebx
  4231d5:	call   0xb85651f0
  4231da:	gs (bad) 
  4231dc:	aas    
  4231dd:	add    BYTE PTR [esi],ah
  4231df:	cmp    ebp,esi
  4231e1:	inc    esp
  4231e2:	nop
  4231e3:	dec    ebp
  4231e4:	jnp    0x4231b4
  4231e6:	xchg   edx,eax
  4231e7:	lods   eax,DWORD PTR ds:[esi]
  4231e8:	iret   
  4231e9:	test   esp,esp
  4231eb:	mov    ch,0xfa
  4231ed:	mov    eax,0x3f9b35
  4231f2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231f4:	out    0x1,eax
  4231f6:	imul   ebp,ebx,0x2cb98572
  4231fc:	in     eax,0xfb
  4231fe:	sar    BYTE PTR [ebp-0x11],cl
  423201:	push   edx
  423202:	add    BYTE PTR [edi-0x66],ch
  423205:	dec    edi
  423206:	push   ebx
  423207:	adc    BYTE PTR [esi+0x38],ch
  42320a:	std    
  42320b:	mov    edx,0xdd2f540b
  423210:	addr16 mov ds:0xabec,eax
  423214:	fnsetpm(287 only) 
  423216:	add    al,0x37
  423218:	jmp    0x719fc611
  42321d:	add    al,0xa6
  423220:	add    bh,BYTE PTR [ecx]
  423222:	fadd   QWORD PTR [ecx+0x2e4daec]
  423228:	mov    edi,0xde07c01
  42322d:	xor    bl,ah
  42322f:	pop    ebp
  423230:	add    bl,0xe4
  423233:	push   ax
  423235:	rcr    ebx,1
  423237:	and    eax,0x56e4b382
  42323c:	push   eax
  42323d:	mov    ecx,0xa3820ddb
  423242:	in     al,0x1d
  423244:	pop    eax
  423245:	out    dx,al
  423246:	add    ecx,eax
  423248:	(bad)  
  423249:	gs pop esi
  42324b:	xor    eax,0x416e8ad2
  423250:	jmp    0x4232b5
  423252:	jl     0x42327b
  423254:	fidiv  DWORD PTR [ebx+0x3e]
  423257:	and    eax,0x6a32fc04
  42325c:	jmp    0xc36d:0xda16f145
  423263:	xchg   ecx,eax
  423264:	(bad)  
  423265:	gs add BYTE PTR ss:0xf53e5b05,al
  42326d:	repnz aam 0x6
  423270:	jb     0x4232cf
  423272:	add    eax,0x6e0b7003
  423277:	inc    eax
  423278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423279:	test   DWORD PTR [ecx-0x24b12501],esi
  42327f:	push   eax
  423280:	(bad)  
  423283:	in     al,0xc6
  423285:	jle    0x4232b0
  423287:	outs   dx,DWORD PTR ds:[esi]
  423288:	cdq    
  423289:	test   DWORD PTR [ebx+ebp*8-0x146b265f],esp
  423290:	sbb    dl,dh
  423292:	adc    DWORD PTR [esi],esi
  423294:	sbb    dl,bl
  423296:	cli    
  423297:	ja     0x4232f1
  423299:	fiadd  DWORD PTR [eax]
  42329b:	xchg   esi,eax
  42329c:	loopne 0x4232cf
  42329e:	leave  
  42329f:	sub    edx,DWORD PTR [edx-0x728dab27]
  4232a5:	add    DWORD PTR [ebp+0x1],0x3a14e61a
  4232ac:	mov    bh,0x81
  4232ae:	xor    BYTE PTR [edx-0x1c],ah
  4232b1:	test   BYTE PTR [esi+0x7c87a7e9],0xe7
  4232b8:	jg     0x4232a5
  4232ba:	and    ch,al
  4232bc:	sahf   
  4232bd:	add    al,BYTE PTR [eax-0x7af27a11]
  4232c3:	add    eax,0x730002a0
  4232c8:	xchg   DWORD PTR [ebx],eax
  4232ca:	adc    BYTE PTR [ebx+0x7e0d9100],0xf9
  4232d1:	cdq    
  4232d2:	add    al,BYTE PTR [eax]
  4232d4:	imul   ecx,DWORD PTR [ebx+0x1b],0x396660b
  4232db:	add    cl,ch
  4232dd:	sub    eax,DWORD PTR [edi+0x18]
  4232e0:	bound  esp,QWORD PTR [eax+0x5774d729]
  4232e6:	fucom  st(7)
  4232e8:	out    0x1e,al
  4232ea:	sbb    ah,BYTE PTR ds:0x4819a4dc
  4232f0:	adc    ah,cl
  4232f2:	push   ebx
  4232f3:	cmc    
  4232f4:	aas    
  4232f5:	loop   0x4232f9
  4232f7:	or     esp,DWORD PTR [esi+esi*8+0x1]
  4232fb:	add    cl,ch
  4232fd:	push   ds
  4232fe:	shl    BYTE PTR [eax],1
  423300:	mov    ah,0x9a
  423302:	sub    eax,eax
  423304:	adc    dh,BYTE PTR [edi+eax*4+0x45]
  423308:	sbb    eax,0xe175dd89
  42330d:	es das 
  42330f:	cld    
  423310:	daa    
  423311:	xlat   BYTE PTR fs:[ebx]
  423313:	add    BYTE PTR [eax],al
  423315:	mov    esp,?
  423317:	jne    0x423317
  423319:	mov    ds:0x8301f87f,eax
  42331e:	mov    BYTE PTR [edx+0x33048400],bh
  423324:	inc    ebp
  423325:	test   ch,dh
  423327:	jp     0x4232e2
  423329:	je     0x42332f
  42332b:	add    BYTE PTR [ebx+0x48cf2c1],cl
  423331:	add    BYTE PTR [ebp-0x77],al
  423334:	or     BYTE PTR [ebx-0x6dcf524],cl
  42333a:	ja     0x42336f
  42333c:	adc    al,0x57
  42333e:	mov    ch,0xe6
  423340:	sbb    al,BYTE PTR [edi+0x4589e502]
  423346:	cld    
  423347:	mov    dh,bh
  423349:	je     0x423397
  42334b:	mov    eax,eax
  42334d:	bswap  eax
  42334f:	stos   BYTE PTR es:[edi],al
  423350:	add    BYTE PTR [eax],al
  423352:	inc    esp
  423353:	sbb    eax,0x560cd883
  423358:	jbe    0x423359
  42335a:	mov    ds:0x7f1c5588,eax
  42335f:	int    0x82
  423361:	fdivr  DWORD PTR [edi+0x4a]
  423364:	sbb    al,0x8b
  423366:	hlt    
  423367:	jb     0x4233e5
  423369:	sbb    BYTE PTR [edx-0x78],ah
  42336c:	inc    ebp
  42336d:	sbb    BYTE PTR [edi+0x3],bh
  423370:	or     eax,0xffffff9f
  423373:	mov    ah,0x8d
  423375:	dec    esp
  423376:	(bad)
  423379:	lock ins DWORD PTR es:[edi],dx
  42337b:	xor    dh,ah
  42337d:	mov    DWORD PTR [ecx],ebx
  42337f:	mov    ah,0x83
  423381:	jne    0x42336f
  423383:	jb     0x4233cc
  423385:	add    DWORD PTR [eax+ebp*4+0x7fa3fe85],ebp
  42338c:	shl    BYTE PTR [ebp+ebx*4+0x7e],0x8a
  423391:	ret    0xba26
  423394:	add    dh,BYTE PTR [ebp+0x0]
  423397:	lods   eax,DWORD PTR ds:[esi]
  423398:	ins    BYTE PTR es:[edi],dx
  423399:	(bad)  
  42339b:	das    
  42339c:	mov    ebx,0x5e9175de
  4233a1:	dec    ecx
  4233a2:	(bad)  
  4233a3:	loop   0x4233db
  4233a5:	add    ebp,DWORD PTR [edi]
  4233a7:	in     eax,dx
  4233a8:	mov    cl,0x87
  4233aa:	add    BYTE PTR [ebx-0xcee1248],0xe0
  4233b1:	mov    WORD PTR [ebp+0x69],cs
  4233b4:	ss inc esi
  4233b6:	(bad)  
  4233b7:	fimul  DWORD PTR [esi-0x8]
  4233ba:	cs jne 0x423423
  4233bd:	xchg   dl,bh
  4233bf:	pop    edx
  4233c0:	cld    
  4233c1:	loopne 0x423438
  4233c3:	push   ebp
  4233c4:	out    dx,eax
  4233c5:	loopne 0x4233dc
  4233c7:	(bad)  
  4233c8:	xlat   BYTE PTR ds:[ebx]
  4233c9:	aas    
  4233ca:	add    BYTE PTR [esi],bl
  4233cc:	popf   
  4233cd:	adc    bl,bh
  4233cf:	mov    al,0x71
  4233d1:	in     al,dx
  4233d2:	and    al,0x1b
  4233d4:	xchg   ecx,esp
  4233d6:	xchg   eax,esp
  4233d8:	fld    QWORD PTR [esi-0x3e1e9c8]
  4233de:	xchg   BYTE PTR [ebp+0x121a585e],bl
  4233e4:	ss pusha 
  4233e6:	cmp    BYTE PTR [edx],cl
  4233e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233e9:	sbb    al,0xf3
  4233eb:	xchg   edx,eax
  4233ec:	imul   esi,DWORD PTR [edx-0x6bd00506],0x1
  4233f3:	push   edx
  4233f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f5:	cmp    al,0xc9
  4233f7:	fnstsw ax
  4233f9:	jmp    FWORD PTR ds:0xd333dd00
  4233ff:	sti    
  423400:	push   eax
  423401:	adc    esp,ebp
  423403:	hlt    
  423404:	sbb    BYTE PTR [edi],ah
  423406:	loope  0x4233ef
  423408:	iret   
  423409:	add    DWORD PTR [esp+ecx*4+0x400d82b1],edi
  423410:	and    bh,BYTE PTR ds:0x339d8ce1
  423416:	mov    bl,0x8c
  423418:	xor    BYTE PTR [esi],al
  42341a:	outs   dx,BYTE PTR ds:[esi]
  42341b:	adc    cl,BYTE PTR [esi+0x3]
  42341e:	xor    DWORD PTR [ecx+edx*2-0x77],ebp
  423422:	test   eax,0xf1482403
  423427:	sub    al,0x55
  423429:	xor    al,0x4f
  42342b:	imul   ebx
  42342d:	mov    esp,0xea9de124
  423432:	mov    eax,0x5ed67789
  423437:	mov    ebx,0x87f2ba20
  42343c:	add    BYTE PTR [ebx],al
  42343e:	jmp    0xe59a5646
  423443:	adc    eax,0xffffffd5
  423446:	jmp    0xc9aab9a1
  42344b:	mov    es,eax
  42344d:	mov    edx,0xb709ec41
  423452:	xchg   edx,eax
  423453:	loopne 0x423475
  423455:	inc    eax
  423456:	xor    DWORD PTR [ebx],0xe0b9dd35
  42345c:	es jg  0x423408
  42345f:	push   edi
  423460:	add    BYTE PTR [edi+0x1463a05],dh
  423466:	xor    ebx,DWORD PTR [esi-0x38]
  423469:	ins    DWORD PTR es:[edi],dx
  42346a:	push   0x50104119
  42346f:	xchg   ecx,eax
  423470:	jmp    0x42349f
  423472:	int3   
  423473:	push   ebx
  423474:	loopne 0x423490
  423476:	push   eax
  423477:	fisttp QWORD PTR [ebp+eiz*8-0x19795fc5]
  42347e:	push   ebp
  42347f:	out    0x14,eax
  423481:	(bad)  
  423482:	mov    DWORD PTR [eax],eax
  423484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423485:	neg    BYTE PTR ds:0xefb76ac7
  42348b:	push   eax
  42348c:	je     0x4234df
  42348e:	out    dx,eax
  42348f:	mov    ebp,fs
  423491:	popf   
  423492:	xor    edx,DWORD PTR [eax+0x60]
  423495:	pop    ebx
  423496:	into   
  423497:	sti    
  423498:	hlt    
  423499:	outs   dx,BYTE PTR ds:[esi]
  42349a:	lock aas 
  42349c:	jmp    0x964ef3ba
  4234a1:	sub    edi,DWORD PTR [edi]
  4234a3:	test   al,0x99
  4234a5:	leave  
  4234a6:	fst    DWORD PTR ds:0x1584b9
  4234ac:	jb     0x42349a
  4234ae:	or     al,BYTE PTR [edi-0x18bef210]
  4234b4:	call   0x62500a51
  4234b9:	aam    0xce
  4234bb:	jg     0x42346a
  4234bd:	lea    ebp,[edx-0x4c]
  4234c0:	jae    0x4234a3
  4234c2:	add    cl,BYTE PTR [ecx+0x1d710024]
  4234c8:	enter  0xb718,0xef
  4234cc:	push   esi
  4234cd:	scas   eax,DWORD PTR es:[edi]
  4234ce:	aam    0xd9
  4234d0:	add    DWORD PTR [ecx-0x69057f6b],edx
  4234d6:	es mov edx,0x7f9ab285
  4234dc:	bound  eax,QWORD PTR [esi+0x2486d942]
  4234e2:	cli    
  4234e3:	cmp    BYTE PTR [edx+0x12],bl
  4234e6:	loopne 0x42347b
  4234e8:	or     cl,ch
  4234ea:	lds    edi,FWORD PTR [ebp-0x14]
  4234ed:	push   0xd
  4234ef:	repnz dec esi
  4234f1:	mov    bh,0xb3
  4234f3:	jge    0x4234e5
  4234f5:	ret    
  4234f6:	cwde   
  4234f7:	jge    0x4234cf
  4234f9:	mov    bl,0x19
  4234fb:	dec    edi
  4234fc:	hlt    
  4234fd:	add    BYTE PTR [edi-0x41],ch
  423500:	xor    esi,edx
  423502:	push   ss
  423503:	aam    0x82
  423505:	xor    bh,cl
  423507:	mov    dl,0x6a
  423509:	sbb    edi,ecx
  42350b:	cmp    esp,esi
  42350d:	ja     0x4234cf
  42350f:	pop    esi
  423510:	cmp    DWORD PTR [ebp-0x4c],0x5e
  423514:	test   DWORD PTR [eax-0x40],edi
  423517:	cmp    DWORD PTR [ecx],edx
  423519:	sub    DWORD PTR [ecx],edx
  42351b:	lods   eax,DWORD PTR ds:[esi]
  42351c:	sti    
  42351d:	(bad)
  423520:	hlt    
  423521:	jae    0x4234c8
  423523:	lock mov edi,0xfffdf7e9
  423529:	inc    DWORD PTR [eax]
  42352b:	idiv   DWORD PTR [ebp+0x297a8afe]
  423531:	repnz mov cl,0xb3
  423535:	add    BYTE PTR [ecx+0x7d89aeb9],cl
  42353b:	push   eax
  42353c:	sub    al,0x7
  42353e:	push   edi
  42353f:	idiv   DWORD PTR [edi+0x1d6c4ffe]
  423545:	test   esi,edi
  423547:	or     eax,DWORD PTR [edi-0x3a007bb]
  42354d:	jp     0x4235b4
  42354f:	cld    
  423550:	inc    DWORD PTR [edi+edi*8+0x7d7b4790]
  423557:	or     al,0x0
  423559:	je     0x42356b
  42355b:	leave  
  42355c:	dec    edx
  42355d:	hlt    
  42355e:	push   eax
  42355f:	test   eax,0x2c50f84a
  423564:	popf   
  423565:	idiv   bh
  423567:	mov    ecx,DWORD PTR [eax-0x4b7e0b83]
  42356d:	je     0x4235a0
  42356f:	ja     0x4235d3
  423571:	clc    
  423572:	add    BYTE PTR [ebx],cl
  423574:	jl     0x4235a8
  423576:	add    DWORD PTR [ebp+0x7086ffe9],ebx
  42357c:	loope  0x42350e
  42357e:	inc    ebp
  42357f:	jmp    0xd587c5fd
  423584:	jns    0x423560
  423586:	outs   dx,DWORD PTR ds:[esi]
  423587:	lods   eax,DWORD PTR ds:[esi]
  423588:	or     al,0x58
  42358a:	or     al,0x73
  42358c:	and    al,0x58
  42358e:	lock add BYTE PTR [ebp-0x45041f00],dh
  423595:	pop    ebp
  423596:	mov    edi,0x4d2190b
  42359b:	add    BYTE PTR [ebp-0x490b9fa0],bl
  4235a1:	call   0x7be7ab2c
  4235a6:	jle    0x423625
  4235a8:	lods   eax,DWORD PTR ds:[esi]
  4235a9:	loope  0x4235b5
  4235ab:	test   DWORD PTR [ebx-0x17],eax
  4235ae:	(bad)  
  4235af:	push   ebp
  4235b1:	lea    eax,[esi+0x53b49d40]
  4235b7:	lock test DWORD PTR [ecx+ebx*2],esi
  4235bb:	cli    
  4235bc:	push   0x68
  4235be:	fdiv   st(1),st
  4235c0:	call   0x210246ac
  4235c5:	test   eax,0xe944880d
  4235ca:	(bad)  
  4235cb:	inc    DWORD PTR [esi+0x1e0b101e]
  4235d1:	mov    DWORD PTR [eax+eax*1],eax
  4235d4:	popf   
  4235d5:	push   eax
  4235d6:	pop    ecx
  4235d7:	adc    al,0x20
  4235d9:	mov    ch,0xc5
  4235db:	daa    
  4235dc:	stos   DWORD PTR es:[edi],eax
  4235dd:	fld    QWORD PTR [eax]
  4235df:	cmp    bl,BYTE PTR [esi+0x210bd7fe]
  4235e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235e6:	add    al,0x0
  4235e8:	popf   
  4235e9:	pusha  
  4235ea:	(bad)
  4235ed:	addr16 (bad) 
  4235f0:	adc    al,0x2
  4235f2:	lods   al,BYTE PTR ds:[esi]
  4235f3:	repz add BYTE PTR [ecx],ah
  4235f6:	ret    0x87ea
  4235f9:	sub    eax,DWORD PTR [edx]
  4235fb:	jmp    0x4a4e1c03
  423600:	push   ecx
  423601:	lea    esi,[edx]
  423603:	inc    edx
  423604:	test   DWORD PTR [edx+0x1a03a8ec],0xad46e5fc
  42360e:	jg     0x423635
  423610:	adc    dh,al
  423612:	dec    esp
  423613:	sbb    eax,0xb9da30dd
  423618:	fmul   QWORD PTR [eax-0x62bc04ee]
  42361e:	xchg   DWORD PTR [ebx-0x22b8e5f9],esp
  423624:	sub    BYTE PTR [ebp-0x7a],ah
  423627:	and    eax,0x9e7dec10
  42362c:	repz mov ecx,edx
  42362f:	pop    esi
  423630:	push   es
  423631:	sbb    bl,BYTE PTR [eax-0x7]
  423634:	add    BYTE PTR [edi+0x6],bl
  423637:	and    al,0xd8
  423639:	int3   
  42363a:	xor    dl,dl
  42363c:	idiv   BYTE PTR [edx-0x1dfbd708]
  423642:	(bad)  
  423643:	cmc    
  423644:	fmul   st(2),st
  423646:	repnz rcr BYTE PTR [edx-0x754d2f2e],1
  42364d:	mov    edx,0xa9585ff2
  423652:	enter  0xdd2c,0x9c
  423656:	fnstsw WORD PTR [edx]
  423658:	add    DWORD PTR [eax],0x56e9cab0
  42365e:	jle    0x4236dd
  423660:	jecxz  0x4235ea
  423662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423663:	push   es
  423664:	outs   dx,BYTE PTR ds:[esi]
  423665:	dec    eax
  423666:	lods   eax,DWORD PTR ds:[esi]
  423667:	sbb    eax,0xca123481
  42366c:	add    BYTE PTR [eax],bl
  42366e:	stc    
  42366f:	sar    BYTE PTR [edi+0x6f],1
  423672:	loope  0x4236ef
  423674:	inc    ebp
  423675:	popa   
  423676:	and    eax,ebx
  423678:	je     0x423698
  42367a:	test   al,0x89
  42367c:	fadd   DWORD PTR [ecx+0x1c]
  42367f:	pop    edx
  423680:	sti    
  423681:	dec    esi
  423682:	pop    ss
  423683:	dec    eax
  423684:	hlt    
  423685:	jb     0x42367d
  423687:	mov    DWORD PTR [ebp-0x1f],ebx
  42368a:	and    eax,0xd2bc86d2
  42368f:	jle    0x4236dd
  423691:	icebp  
  423692:	lahf   
  423693:	fisubr DWORD PTR [ebp-0x7b322795]
  423699:	sub    DWORD PTR [edx-0x11],ecx
  42369c:	xchg   bh,ch
  42369e:	popf   
  42369f:	rcl    DWORD PTR [edx+0xe],1
  4236a2:	dec    ebx
  4236a3:	retf   0x650
  4236a6:	xchg   ebx,eax
  4236a7:	and    DWORD PTR [edx],edx
  4236a9:	test   eax,0x6236d19e
  4236ae:	mov    al,ds:0x58ddc451
  4236b3:	push   es
  4236b4:	add    esi,ebx
  4236b6:	fistp  QWORD PTR [ebx+0x37]
  4236b9:	fmulp  st(4),st
  4236bb:	retf   0x2fe8
  4236be:	add    BYTE PTR [edx],ah
  4236c0:	int3   
  4236c1:	sti    
  4236c2:	arpl   sp,bx
  4236c4:	int    0x5b
  4236c6:	daa    
  4236c7:	call   0x8737:0x9ed5bebb
  4236ce:	lds    esp,FWORD PTR [edx]
  4236d0:	fisub  WORD PTR [eax]
  4236d2:	sbb    cl,BYTE PTR [edi+0x2a3ec021]
  4236d8:	dec    edi
  4236d9:	or     BYTE PTR [eax-0x24],dh
  4236dc:	out    0x89,al
  4236de:	sub    al,0x39
  4236e0:	or     eax,DWORD PTR [ebx-0x13]
  4236e3:	xchg   edi,eax
  4236e4:	test   bh,cl
  4236e6:	add    BYTE PTR ds:0xb9890005,al
  4236ec:	fiadd  DWORD PTR [ebx+0x7507ec77]
  4236f2:	in     al,dx
  4236f3:	inc    edi
  4236f4:	nop
  4236f5:	div    DWORD PTR [esi-0x14]
  4236f8:	jg     0x423748
  4236fa:	or     al,0xce
  4236fc:	cld    
  4236fd:	dec    esi
  4236fe:	call   0x3a110e
  423703:	js     0x4236cb
  423705:	pop    es
  423706:	test   BYTE PTR [ebx+0x7],al
  423709:	add    BYTE PTR [eax],al
  42370b:	xchg   ebx,eax
  42370c:	xor    al,0x8
  42370e:	mov    ebp,DWORD PTR [edx]
  423710:	or     DWORD PTR [edx+0x10],esp
  423713:	sub    ebx,ebp
  423715:	mov    eax,ds:0x84ad83ec
  42371a:	rol    bl,0x50
  42371d:	mov    DWORD PTR [ecx],eax
  42371f:	mov    ah,0x4
  423721:	add    DWORD PTR [esi+0x0],0xffffffa8
  423725:	and    eax,0xb65f05d
  42372a:	hlt    
  42372b:	mov    esi,DWORD PTR [edx]
  42372d:	aam    0x88
  42372f:	inc    ebp
  423730:	nop
  423731:	mov    eax,edi
  423733:	push   es
  423734:	arpl   WORD PTR [esi+0x48400cf],ax
  42373a:	add    DWORD PTR [ebx],0x7
  42373d:	lods   al,BYTE PTR ds:[esi]
  42373e:	dec    BYTE PTR [esi]
  423740:	not    BYTE PTR [ebx+0x0]
  423743:	add    BYTE PTR [ecx+esi*8+0x44],dh
  423747:	cld    
  423748:	push   ebx
  423749:	test   DWORD PTR [edi+0x0],edi
  42374c:	inc    esp
  42374d:	add    al,0x7
  42374f:	mov    bh,0x7f
  423751:	add    ch,dh
  423753:	shr    DWORD PTR [eax+0x40],0x6d
  423757:	and    BYTE PTR ds:0xedb606d0,0xb4
  42375e:	fstp   DWORD PTR [ebx]
  423760:	popf   
  423761:	mov    ds:0x5d35e182,al
  423766:	les    esp,FWORD PTR [eax]
  423768:	stos   BYTE PTR es:[edi],al
  423769:	adc    ah,cl
  42376b:	mov    DWORD PTR [eax+0x79],esp
  42376e:	cmp    al,0x9b
  423771:	iret   
  423772:	xor    eax,0x1c53dd7f
  423777:	aas    
  423778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423779:	scas   al,BYTE PTR es:[edi]
  42377a:	dec    ebp
  42377b:	sti    
  42377c:	push   0xffffffd5
  42377e:	mov    BYTE PTR [edi],bh
  423780:	mov    ds:0x10104e38,eax
  423785:	mov    edi,0xc50050d7
  42378a:	stos   DWORD PTR es:[edi],eax
  42378b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42378c:	cli    
  42378d:	rcr    BYTE PTR [edi+edx*8+0x1],cl
  423791:	dec    ecx
  423792:	leave  
  423793:	mov    dl,BYTE PTR [ebp-0x6b]
  423796:	cs dec eax
  423798:	hlt    
  423799:	dec    esp
  42379a:	push   esi
  42379b:	dec    eax
  42379c:	lock dec esp
  42379e:	lock dec edi
  4237a0:	loopne 0x4237b8
  4237a2:	and    eax,0xf128fb2f
  4237a7:	mov    DWORD PTR [ebp-0x67],eax
  4237aa:	icebp  
  4237ab:	inc    esi
  4237ac:	std    
  4237ad:	xchg   edx,eax
  4237ae:	sar    BYTE PTR [edx-0x40],1
  4237b1:	adc    ebp,ebx
  4237b3:	(bad)  
  4237b4:	inc    ebp
  4237b5:	jns    0x423797
  4237b7:	dec    ebx
  4237b8:	clc    
  4237b9:	xor    eax,0x9d007fd9
  4237be:	mov    cl,0x47
  4237c0:	jle    0x42382d
  4237c2:	mov    eax,0x64957d8d
  4237c7:	add    eax,0x5c5e029
  4237cc:	fcomp  DWORD PTR [esi]
  4237ce:	push   cs
  4237cf:	fadd   DWORD PTR [edx]
  4237d1:	call   0x85a0:0x42fb5b5c
  4237d8:	jge    0x42380b
  4237da:	add    ch,cl
  4237dc:	push   ecx
  4237dd:	outs   dx,DWORD PTR ds:[esi]
  4237de:	iret   
  4237df:	ror    BYTE PTR [esi+ebx*8+0x20eb0106],cl
  4237e6:	add    ch,cl
  4237e8:	jmp    0x423825
  4237ea:	mov    es,WORD PTR [ebx-0x55e5ff27]
  4237f0:	fs mov ebp,0x4f71e991
  4237f6:	or     edi,ecx
  4237f8:	hlt    
  4237f9:	rol    DWORD PTR [ebx-0x1b9449fe],cl
  4237ff:	add    ecx,ebp
  423801:	add    esi,ebp
  423803:	sbb    eax,0x32e6d947
  423808:	inc    ecx
  423809:	add    ebx,DWORD PTR [ebx-0x30]
  42380c:	inc    edx
  42380d:	(bad)  [eax-0x2e]
  423810:	push   ecx
  423811:	fistp  DWORD PTR [eax+edx*8]
  423814:	xor    dl,dl
  423816:	lahf   
  423817:	add    edx,ebx
  423819:	jg     0x423827
  42381b:	add    ch,cl
  42381d:	add    eax,DWORD PTR [ebp-0x1a]
  423820:	pusha  
  423821:	inc    ebp
  423822:	popf   
  423823:	iret   
  423824:	cld    
  423825:	out    0x93,eax
  423827:	inc    edx
  423828:	jmp    0x31c1518
  42382d:	fstp   DWORD PTR [edx]
  42382f:	inc    ebp
  423830:	in     eax,dx
  423831:	mov    edi,fs
  423833:	cli    
  423834:	pop    edi
  423835:	aas    
  423836:	add    DWORD PTR [edx+0x5b0b07f1],0xcaf2046e
  423840:	in     eax,dx
  423841:	push   ebp
  423842:	cld    
  423843:	or     DWORD PTR [eax+ebx*8],ebp
  423846:	out    dx,al
  423847:	cs pop esi
  423849:	dec    esp
  42384a:	mov    eax,ds:0x9d03a8d5
  42384f:	add    cl,BYTE PTR [ecx]
  423851:	push   eax
  423852:	add    cl,ah
  423854:	add    DWORD PTR [eax],0x3b509ab1
  42385a:	mov    bh,0x5f
  42385c:	add    al,0x74
  42385e:	jecxz  0x423881
  423860:	add    BYTE PTR [eax],al
  423862:	arpl   cx,sp
  423864:	add    bh,bh
  423866:	mov    al,ds:0x2ab9cf04
  42386b:	mov    eax,ds:0xf469ddda
  423870:	leave  
  423871:	test   BYTE PTR [ecx-0x4504dca6],ch
  423877:	adc    DWORD PTR [eax],eax
  423879:	cld    
  42387a:	xor    BYTE PTR [ecx+0x2],ah
  42387d:	push   ebx
  42387f:	sahf   
  423880:	xchg   esp,eax
  423881:	aas    
  423882:	jmp    0xfd3d6c38
  423887:	mov    ?,eax
  423889:	aas    
  42388a:	jmp    0x2dc106b8
  42388f:	call   0xe:0x28e90503
  423896:	bound  ebp,QWORD PTR [ebx-0x6]
  423899:	xchg   dl,ch
  42389b:	xchg   DWORD PTR [edi-0x4],eax
  42389e:	jmp    0x5da2:0x1d7d4df6
  4238a5:	cwde   
  4238a6:	add    edx,0x75e93f8b
  4238ac:	imul   edi
  4238ae:	fcmovnu st,st(6)
  4238b0:	add    bh,bl
  4238b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238b3:	jbe    0x42383a
  4238b5:	inc    ebp
  4238b6:	add    DWORD PTR [eax],eax
  4238b8:	sbb    DWORD PTR [edi-0x14],eax
  4238bb:	rcr    DWORD PTR [ecx+0x1cf61c41],1
  4238c1:	adc    bh,dl
  4238c3:	ficom  WORD PTR [edx+0x1d]
  4238c6:	rcl    BYTE PTR [edx],0xdc
  4238c9:	out    0x5b,al
  4238cb:	repnz pop esi
  4238cd:	sub    bl,dh
  4238cf:	add    ah,bh
  4238d1:	or     cl,cl
  4238d3:	ret    0x140
  4238d6:	dec    esi
  4238d7:	mov    eax,DWORD PTR [esi*4-0x8a3f792]
  4238de:	cmp    dh,0xfb
  4238e1:	mov    ah,0x6e
  4238e3:	adc    BYTE PTR [edi+ebx*1],cl
  4238e6:	cmp    esi,0x1c6eb50b
  4238ec:	sbb    al,0x27
  4238ee:	cmp    esi,0x2c6eb51b
  4238f4:	sub    al,0xcf
  4238f6:	cmp    dh,0x8b
  4238f9:	mov    ch,0x6e
  4238fb:	xor    BYTE PTR [edi+edx*8],bl
  4238fe:	cmp    dh,0x7b
  423901:	mov    ch,0x6e
  423903:	xor    al,0x4c
  423905:	inc    DWORD PTR [eax+0x6e794bfe]
  42390b:	inc    eax
  42390c:	inc    ecx
  42390d:	mov    esp,0xfc5b0d74
  423912:	out    0xfb,eax
  423914:	xor    al,0xb4
  423916:	not    DWORD PTR [esi+0x5c]
  423919:	mov    bl,0x80
  42391b:	inc    BYTE PTR [eax]
  42391d:	mov    edx,DWORD PTR [ebx+edi*4]
  423920:	call   DWORD PTR [edx]
  423922:	int    0xe3
  423924:	jmp    0x42395a
  423926:	mov    ah,0xf7
  423928:	inc    DWORD PTR [edx]
  42392a:	stc    
  42392b:	out    0xe3,eax
  42392d:	add    al,0xb5
  42392f:	idiv   edi
  423931:	adc    dl,al
  423933:	jecxz  0x423910
  423935:	hlt    
  423936:	mov    ah,0xf7
  423938:	ret    
  423939:	and    edi,DWORD PTR [ecx-0x8]
  42393c:	test   DWORD PTR [ebx-0x10a9f1c4],ecx
  423942:	mov    esp,0xff9cf663
  423947:	jae    0x42396d
  423949:	popf   
  42394a:	in     eax,0x7e
  42394c:	jmp    0xc552:0xfbc5c1b5
  423953:	inc    edx
  423954:	jne    0x4239a6
  423956:	in     al,dx
  423957:	xor    ch,cl
  423959:	or     bl,BYTE PTR [edx-0x2b]
  42395c:	sti    
  42395d:	shl    BYTE PTR [eax-0x1d],1
  423960:	jg     0x42399b
  423962:	mov    ds:0x58954586,al
  423967:	jecxz  0x4239c5
  423969:	into   
  42396a:	or     ebp,DWORD PTR [ebx]
  42396c:	sti    
  42396d:	(bad)  
  42396e:	in     eax,0x88
  423970:	je     0x42392b
  423972:	shl    edi,0xba
  423975:	xchg   ebx,eax
  423976:	dec    esp
  423977:	rol    BYTE PTR [ebp+ebx*8-0x6363841c],cl
  42397e:	fcos   
  423980:	cs add dh,dl
  423983:	mov    ebx,0xd5c144ba
  423988:	inc    DWORD PTR [eax]
  42398a:	adc    eax,0xc50f1b96
  42398f:	pop    edx
  423990:	or     eax,0xcf50d2fb
  423995:	or     ecx,DWORD PTR [ebx]
  423997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423998:	sbb    ecx,DWORD PTR [edi]
  42399a:	xchg   edx,eax
  42399b:	push   ebx
  42399c:	cmp    eax,DWORD PTR [ecx+edx*4]
  42399f:	push   0x8b4d4f2e
  4239a4:	rcl    BYTE PTR ds:0x3fd635,cl
  4239aa:	dec    ebx
  4239ab:	bound  edi,QWORD PTR [ebx]
  4239ad:	and    al,0xb9
  4239af:	add    DWORD PTR [eax+eax*4-0x6d],esp
  4239b3:	add    al,0x1c
  4239b5:	pop    esp
  4239b6:	shl    ecx,0x2
  4239b9:	test   bl,al
  4239bb:	(bad)  
  4239bd:	dec    esi
  4239bf:	push   0x2cfff69
  4239c4:	ss aad 0xf1
  4239c7:	es xor eax,0x2526e9d5
  4239cd:	aad    0xd1
  4239cf:	es adc eax,0xdc4aa8d5
  4239d5:	inc    ebx
  4239d6:	popf   
  4239d7:	jns    0x4239fe
  4239d9:	and    BYTE PTR [ecx+0x7],bh
  4239dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239dd:	add    eax,0x3e7f221
  4239e2:	popf   
  4239e3:	ja     0x423a11
  4239e5:	or     al,0x0
  4239e7:	and    al,BYTE PTR [edx]
  4239e9:	imul   ebx,DWORD PTR [ebp+eax*4+0x1],0x428fc053
  4239f1:	jmp    0xb5ced245
  4239f6:	dec    esi
  4239f7:	pop    ebp
  4239f8:	add    dh,BYTE PTR [esi-0x32b1e236]
  4239fe:	inc    ecx
  4239ff:	sti    
  423a00:	das    
  423a01:	fisubr DWORD PTR [esi-0x24]
  423a04:	cmp    BYTE PTR [eax-0x1d],ch
  423a07:	popf   
  423a08:	add    ch,BYTE PTR [ecx+0x4]
  423a0b:	sbb    al,0xb9
  423a0d:	jmp    0xb8c8e3de
  423a12:	xor    dh,dl
  423a14:	push   ecx
  423a15:	icebp  
  423a16:	imul   ebp,ebp,0x53
  423a19:	test   eax,0xd55c603
  423a1e:	dec    eax
  423a1f:	dec    edi
  423a20:	retf   
  423a21:	mov    ch,0x1f
  423a23:	pop    ebp
  423a24:	retf   
  423a25:	cld    
  423a26:	push   ebx
  423a27:	nop
  423a28:	inc    edx
  423a29:	jmp    0x1648e7b6
  423a2e:	add    eax,0x3e99121
  423a33:	popf   
  423a34:	pop    esp
  423a35:	fiadd  WORD PTR [esi+0x3bb11f09]
  423a3b:	jne    0x4239eb
  423a3d:	add    BYTE PTR [edi],bl
  423a3f:	push   eax
  423a40:	into   
  423a41:	push   0xa0029ee9
  423a46:	push   ebx
  423a47:	push   eax
  423a48:	add    bl,0x39
  423a4b:	add    BYTE PTR [ebx+0x4a4515cd],dh
  423a51:	or     al,BYTE PTR [eax]
  423a53:	inc    ebx
  423a54:	push   edi
  423a55:	ja     0x423ad3
  423a57:	or     eax,0x7fe82ad9
  423a5c:	lock int 0xfb
  423a5f:	(bad)  
  423a61:	cli    
  423a62:	xchg   dh,ah
  423a64:	xchg   edi,eax
  423a65:	sub    ah,BYTE PTR [eax]
  423a67:	pop    ds
  423a68:	(bad)  
  423a69:	int    0x70
  423a6b:	std    
  423a6c:	sbb    edi,DWORD PTR [edi]
  423a6e:	and    al,0x21
  423a70:	shl    DWORD PTR [edi+0x44],1
  423a73:	lds    esi,FWORD PTR [edx-0x22fa17ce]
  423a79:	int3   
  423a7a:	sti    
  423a7b:	push   0x42
  423a7d:	test   DWORD PTR [ecx+ebp*4-0x16980eb0],0xd3a0029e
  423a88:	ror    ebp,1
  423a8a:	je     0x423a91
  423a8c:	mov    ebp,0x42fcfb34
  423a91:	out    dx,eax
  423a92:	aas    
  423a93:	jmp    0xe5668981
  423a98:	mov    dh,0x46
  423a9a:	jnp    0x423adb
  423a9c:	jmp    0x4e783e22
  423aa1:	sbb    bh,bl
  423aa3:	mov    ecx,0xbf4f3992
  423aa8:	shr    edi,1
  423aaa:	jg     0x423aa0
  423aac:	pop    esi
  423aad:	add    bh,BYTE PTR [edi+0x11]
  423ab0:	add    BYTE PTR [edi+0x1bba2e4f],bl
  423ab6:	ds and al,0x0
  423ab9:	jo     0x423ad0
  423abb:	lea    eax,[eax+ebx*2+0x1d]
  423abf:	push   eax
  423ac0:	push   0x20000557
  423ac5:	or     al,BYTE PTR [esi-0x53fdbbc]
  423acb:	(bad)  
  423acc:	push   DWORD PTR [esi+eax*2+0x5c]
  423ad0:	and    al,0xb8
  423ad2:	mov    ch,0x15
  423ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ad5:	dec    ecx
  423ad6:	inc    ebp
  423ad7:	add    BYTE PTR [ebx+0xa74ff5c],al
  423add:	mov    ch,0x32
  423adf:	and    al,0x20
  423ae1:	cld    
  423ae2:	std    
  423ae3:	(bad)  
  423ae4:	jmp    FWORD PTR [eax+0x3d]
  423ae7:	dec    esi
  423ae8:	jmp    FWORD PTR [ecx]
  423aea:	cmp    DWORD PTR ds:0x74b43440,edx
  423af0:	and    al,0xe8
  423af2:	mov    bl,0x15
  423af4:	jl     0x423aff
  423af6:	inc    ebp
  423af7:	add    bh,bh
  423af9:	or     BYTE PTR [ecx],ah
  423afb:	sbb    bh,bh
  423afd:	jmp    0x482503a
  423b02:	mov    bl,0x44
  423b04:	and    al,0xd7
  423b06:	test   BYTE PTR [esp-0x19],bh
  423b0a:	inc    BYTE PTR [esi]
  423b0c:	xor    BYTE PTR [edi-0x4c],0xf7
  423b10:	push   DWORD PTR [ebx+0x2a]
  423b13:	and    al,0x34
  423b15:	add    BYTE PTR [edi+edi*8+0x76],bl
  423b19:	(bad)  
  423b1a:	arpl   WORD PTR [ebp-0x5963db8c],si
  423b20:	clc    
  423b21:	jle    0x423b95
  423b23:	mov    ch,0x57
  423b25:	pop    esi
  423b26:	mov    bh,0xc4
  423b28:	push   ebx
  423b29:	mov    ebx,DWORD PTR [ecx-0x4bfb45ed]
  423b2f:	mov    bl,0x74
  423b31:	and    al,0x9d
  423b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b34:	xlat   BYTE PTR ds:[ebx]
  423b35:	in     al,0x13
  423b37:	clc    
  423b38:	into   
  423b39:	sti    
  423b3a:	adc    DWORD PTR [esi+0x4866e807],esi
  423b40:	sar    ebx,1
  423b42:	pop    es
  423b43:	scas   al,BYTE PTR es:[edi]
  423b44:	jl     0x423bb9
  423b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b47:	es push eax
  423b49:	and    al,0xad
  423b4b:	inc    ecx
  423b4c:	(bad)  
  423b4e:	dec    eax
  423b4f:	test   eax,0xf5f989ce
  423b54:	out    dx,eax
  423b55:	out    0xf3,al
  423b57:	inc    ebx
  423b58:	and    BYTE PTR [esi-0x62],ah
  423b5b:	dec    esi
  423b5c:	inc    ebx
  423b5d:	and    al,0x7d
  423b5f:	jmp    0xf9c37fde
  423b64:	ss call 0xfc1391c9
  423b6a:	rcl    BYTE PTR [edx+0x43],cl
  423b6d:	and    al,0x75
  423b6f:	jno    0x423b0d
  423b71:	jp     0x423b8e
  423b73:	jno    0x423bef
  423b75:	inc    esp
  423b76:	mov    ecx,0xf882bd
  423b7b:	or     al,dh
  423b7d:	pop    es
  423b7e:	das    
  423b7f:	add    al,ch
  423b81:	ret    0xc472
  423b84:	fs inc ebx
  423b86:	and    al,0x95
  423b88:	add    edi,DWORD PTR es:[eax+0x155801a4]
  423b8f:	loop   0x423b7a
  423b91:	into   
  423b92:	adc    eax,0x3fcb55
  423b97:	ins    DWORD PTR es:[edi],dx
  423b98:	fs inc ebx
  423b9a:	and    al,0xa9
  423b9c:	inc    eax
  423b9d:	adc    edi,DWORD PTR [eax-0xfd34b]
  423ba3:	mov    edx,0x79244364
  423ba8:	mov    al,ds:0x22ff80a
  423bad:	cmp    bh,BYTE PTR [esi+0x21]
  423bb0:	push   ds
  423bb1:	add    esp,ebx
  423bb3:	and    DWORD PTR [eax+0x13],ecx
  423bb6:	shl    BYTE PTR [eax],cl
  423bb8:	(bad)
  423bbc:	jne    0x423b6b
  423bbe:	daa    
  423bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bc0:	xor    ch,BYTE PTR [edi+eax*2-0x3f]
  423bc4:	push   cs
  423bc5:	cdq    
  423bc6:	cmp    DWORD PTR [ebp+0x66d2b498],eax
  423bcc:	jnp    0x423baf
  423bce:	or     eax,0xdb624d6a
  423bd3:	in     eax,dx
  423bd4:	(bad)  
  423bd5:	rcl    cl,cl
  423bd7:	call   0xec75f957
  423bdc:	xor    ebx,DWORD PTR [ebx]
  423bde:	jnp    0x423be0
  423be0:	sahf   
  423be1:	adc    ebx,DWORD PTR [esi-0x4e052985]
  423be7:	push   ebx
  423be8:	cdq    
  423be9:	(bad)  
  423bea:	cmp    esp,edi
  423bec:	inc    edx
  423bed:	add    DWORD PTR [esi],ebx
  423bef:	shl    DWORD PTR [esi],1
  423bf1:	jne    0x423c05
  423bf3:	or     BYTE PTR [ebp+0x79],ch
  423bf6:	jmp    0x423bc8
  423bf8:	test   al,0x4a
  423bfa:	test   DWORD PTR [ebx-0x63],0x10d02c79
  423c01:	cmp    eax,0xda4f347d
  423c06:	int    0xcb
  423c08:	test   dh,0x5e
  423c0b:	or     ah,BYTE PTR [edx]
  423c0d:	xor    eax,0x1817c65
  423c12:	and    dl,dh
  423c14:	dec    esi
  423c15:	and    al,0xb6
  423c17:	xor    al,0x6e
  423c19:	pop    edx
  423c1a:	xchg   esi,eax
  423c1b:	repnz mov BYTE PTR [edx],al
  423c1e:	xchg   esi,eax
  423c1f:	xor    al,0xc6
  423c21:	in     al,dx
  423c22:	cwde   
  423c23:	cmc    
  423c24:	jp     0x423c28
  423c26:	add    BYTE PTR [eax+0x64],ah
  423c29:	div    BYTE PTR [esi]
  423c2b:	sub    al,BYTE PTR [ebp-0x2]
  423c2e:	scas   eax,DWORD PTR es:[edi]
  423c2f:	call   0xd83d34f5
  423c34:	jbe    0x423c11
  423c36:	jge    0x423c4f
  423c38:	ins    BYTE PTR es:[edi],dx
  423c39:	adc    eax,0xbbb9afc0
  423c3e:	mov    edi,0x7fd3019f
  423c43:	aas    
  423c44:	add    ch,al
  423c46:	(bad)  
  423c47:	sti    
  423c48:	jmp    0x81628beb
  423c4d:	sahf   
  423c4e:	cli    
  423c4f:	(bad)  
  423c50:	call   0xdfbfd39b
  423c55:	ins    DWORD PTR es:[edi],dx
  423c56:	jl     0x423bda
  423c58:	or     eax,0x6400029b
  423c5d:	pop    esi
  423c5e:	push   eax
  423c5f:	or     al,0x53
  423c61:	inc    ecx
  423c62:	leave  
  423c63:	adc    eax,0x63705
  423c68:	sti    
  423c69:	pop    esi
  423c6a:	sub    DWORD PTR [edi-0x40d76087],edi
  423c70:	aas    
  423c71:	dec    esp
  423c72:	dec    edi
  423c73:	and    al,0xed
  423c75:	cdq    
  423c76:	sar    bl,cl
  423c78:	sbb    eax,0x81e7f6c5
  423c7d:	adc    cl,cl
  423c7f:	sti    
  423c80:	mov    edx,0x9502c1de
  423c85:	js     0x423cc9
  423c87:	add    BYTE PTR [eax+0x64],ah
  423c8a:	out    dx,al
  423c8b:	mov    BYTE PTR [edi-0x6],ah
  423c8e:	add    al,BYTE PTR [eax]
  423c90:	jmp    0xeb66bcfc
  423c95:	sahf   
  423c96:	add    cl,BYTE PTR [ecx-0x43b4991]
  423c9c:	jmp    0x9cfcea
  423ca1:	jbe    0x423c6c
  423ca3:	sti    
  423ca4:	push   ebp
  423ca5:	das    
  423ca6:	mov    al,0xe8
  423ca8:	adc    eax,DWORD PTR [eax]
  423caa:	les    eax,FWORD PTR [ecx]
  423cac:	add    dh,dh
  423cae:	add    BYTE PTR [esi],bl
  423cb0:	or     BYTE PTR [ecx],al
  423cb2:	add    ah,bh
  423cb4:	dec    ebp
  423cb5:	call   0x3870e8
  423cba:	(bad)  
  423cbb:	mov    ebx,0x180c256
  423cc0:	div    DWORD PTR [esi-0xb0]
  423cc6:	ret    
  423cc7:	sti    
  423cc8:	ror    DWORD PTR [edx+0x53e80144],cl
  423cce:	stc    
  423ccf:	mov    bl,0xf7
  423cd1:	mov    ebp,DWORD PTR [edx]
  423cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd4:	rcl    BYTE PTR ds:0xf64eb57b,cl
  423cda:	pop    es
  423cdb:	push   DWORD PTR [ebx+0x10]
  423cde:	fmulp  st(2),st
  423ce0:	mov    WORD PTR [edi-0x1c8],es
  423ce6:	jle    0x423d31
  423ce8:	icebp  
  423ce9:	call   0x3a17ba
  423cee:	repnz sar dl,0x73
  423cf2:	dec    esp
  423cf3:	dec    eax
  423cf4:	inc    esp
  423cf5:	and    al,0xc
  423cf7:	jp     0x423cb9
  423cf9:	je     0x423cf5
  423cfb:	jg     0x423cbd
  423cfd:	add    al,0xc4
  423cff:	cmp    DWORD PTR [edi],0x14
  423d02:	sub    al,0x43
  423d04:	in     al,0xff
  423d06:	jnp    0x423cb1
  423d08:	or     ch,al
  423d0a:	jo     0x423d71
  423d0c:	idiv   bh
  423d0e:	add    BYTE PTR [esi-0x210f7d36],bl
  423d14:	cmp    DWORD PTR [edi],0xe4296c14
  423d1a:	call   FWORD PTR [ebp+0x759b7d2c]
  423d20:	fcos   
  423d22:	jmp    DWORD PTR [ebx+0x19]
  423d25:	or     BYTE PTR [eax],al
  423d27:	push   ebx
  423d28:	ins    BYTE PTR es:[edi],dx
  423d29:	retf   0x7974
  423d2c:	stos   DWORD PTR es:[edi],eax
  423d2d:	jbe    0x423d20
  423d2f:	stos   BYTE PTR es:[edi],al
  423d30:	mov    fs,WORD PTR [ebx]
  423d32:	adc    BYTE PTR [ebp-0x6505129f],dh
  423d38:	push   ecx
  423d39:	int3   
  423d3a:	test   DWORD PTR [edx+0x23f1e66c],edx
  423d40:	ret    0x1
  423d43:	popf   
  423d44:	xlat   BYTE PTR ds:[ebx]
  423d45:	push   ebx
  423d46:	push   cs
  423d47:	and    ch,al
  423d49:	push   ebx
  423d4a:	or     ah,BYTE PTR [esi]
  423d4c:	sahf   
  423d4d:	and    ecx,DWORD PTR [eax+ebx*1]
  423d50:	pushf  
  423d51:	xrelease xchg BYTE PTR [edx-0x4e],cl
  423d55:	inc    ebx
  423d56:	in     eax,0x5a
  423d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d59:	jbe    0x423d1e
  423d5b:	repnz or edi,DWORD PTR [esi+0x32089d08]
  423d62:	sti    
  423d63:	leave  
  423d64:	cmc    
  423d65:	test   DWORD PTR [esi+0x2453852c],0x24538c89
  423d6f:	xchg   ecx,eax
  423d70:	shr    esp,0x15
  423d73:	add    BYTE PTR [edx],ah
  423d75:	popf   
  423d76:	jbe    0x423d50
  423d78:	and    cl,al
  423d7a:	dec    ebp
  423d7b:	xor    eax,0xfe17540b
  423d80:	or     bl,dl
  423d82:	add    DWORD PTR [ecx+esi*4-0x1c],esi
  423d86:	cmp    BYTE PTR [edx-0x2837],0x1e
  423d8d:	xchg   esp,eax
  423d8e:	repz push edx
  423d90:	push   ss
  423d91:	pushf  
  423d92:	xlat   BYTE PTR ds:[ebx]
  423d93:	fsin   
  423d95:	add    ah,BYTE PTR [edx-0x32]
  423d98:	and    BYTE PTR [eax+0x371a00d5],ch
  423d9e:	or     eax,0x5eb023f8
  423da3:	lds    esi,FWORD PTR [ebp-0x4931b234]
  423da9:	sub    ebp,DWORD PTR [esi-0x3b]
  423dac:	lds    ebx,FWORD PTR [ebx+0x23a6ce46]
  423db2:	mov    edi,DWORD PTR [edx-0x1e]
  423db5:	daa    
  423db6:	daa    
  423db7:	call   FWORD PTR [edx-0x132091d2]
  423dbd:	xor    DWORD PTR [ebx-0x4e08ef86],edi
  423dc3:	jp     0x423d49
  423dc5:	int3   
  423dc6:	push   0x1b
  423dc8:	jnp    0x423d8d
  423dca:	jmp    0xf58761d3
  423dcf:	std    
  423dd0:	push   ds
  423dd1:	jbe    0x423dbc
  423dd3:	add    ebx,DWORD PTR [ebp+0xfddb7d]
  423dd9:	and    al,0x7e
  423ddb:	jmp    0xaab9dae3
  423de0:	fsub   st(3),st
  423de2:	(bad)  
  423de3:	retf   0x19cd
  423de6:	ret    0x73c
  423de9:	mov    edx,0xb0d9baba
  423dee:	jne    0x423e52
  423df0:	and    BYTE PTR [ebx],ch
  423df2:	ret    
  423df3:	jmp    0xe8285c76
  423df8:	add    ebx,DWORD PTR [ebp+0x153f7031]
  423dfe:	jns    0x423e2c
  423e00:	add    ch,dh
  423e02:	push   ebp
  423e03:	xchg   ch,cl
  423e05:	push   es
  423e06:	ja     0x423e4a
  423e08:	sub    bl,bh
  423e0a:	ret    0x8be9
  423e0d:	popf   
  423e0e:	cli    
  423e0f:	(bad)  
  423e10:	call   0xdf3249b3
  423e15:	mov    ds:0xdaac87d2,eax
  423e1a:	xor    eax,DWORD PTR [edi-0x40252944]
  423e20:	dec    edx
  423e21:	fadd   st,st(6)
  423e23:	xchg   esp,ecx
  423e25:	shr    BYTE PTR [edi],cl
  423e27:	sti    
  423e28:	jle    0x423daf
  423e2a:	(bad)  
  423e2b:	sti    
  423e2c:	jmp    0x592af566
  423e31:	mov    dh,0xc7
  423e33:	sti    
  423e34:	pusha  
  423e35:	pop    edx
  423e36:	cli    
  423e37:	ss das 
  423e39:	cmc    
  423e3a:	and    bl,bh
  423e3c:	xchg   esp,eax
  423e3d:	add    BYTE PTR [esi-0x76],ah
  423e40:	inc    ebp
  423e41:	in     eax,0x66
  423e43:	pop    ss
  423e44:	fisttp WORD PTR [esi]
  423e46:	push   eax
  423e47:	inc    edx
  423e48:	jge    0x423e3b
  423e4a:	sahf   
  423e4b:	cmp    al,0x11
  423e4d:	jb     0x423e6f
  423e4f:	out    0xfd,eax
  423e51:	call   0xe1b7c7f4
  423e56:	in     eax,0x47
  423e58:	or     al,0xd1
  423e5a:	xlat   BYTE PTR ds:[ebx]
  423e5b:	loope  0x423e58
  423e5d:	(bad)  
  423e5f:	inc    edi
  423e60:	or     BYTE PTR [edx],dh
  423e62:	fs or  al,0x52
  423e65:	into   
  423e66:	jmp    0x423e72
  423e68:	call   0xfbff848d
  423e6d:	push   ds
  423e6e:	or     ebx,0xffffffbe
  423e71:	loope  0x423e11
  423e73:	push   edi
  423e74:	xchg   DWORD PTR [ebp+0x3f0caf1d],edi
  423e7a:	xchg   esp,eax
  423e7b:	aaa    
  423e7c:	adc    BYTE PTR [esi],dh
  423e7e:	xchg   esp,eax
  423e7f:	mov    ebx,0xc0a66ef2
  423e84:	sti    
  423e85:	jmp    0xbfca29
  423e8a:	js     0x423ee5
  423e8c:	pop    edi
  423e8d:	test   DWORD PTR [edx+0x4f],ebp
  423e90:	pop    ebx
  423e91:	mov    edi,DWORD PTR [ebx]
  423e93:	fisubr WORD PTR [edx-0x7b318c03]
  423e99:	sar    al,0x29
  423e9c:	mov    eax,0x5cc00
  423ea1:	cmp    eax,DWORD PTR [eax]
  423ea3:	fs inc eax
  423ea5:	xchg   DWORD PTR [esi+esi*4],ebp
  423ea8:	add    eax,0xd5f10f00
  423ead:	dec    ebx
  423eae:	lea    edi,[ebx]
  423eb0:	mov    cl,0x0
  423eb2:	add    BYTE PTR [esp+esi*8+0x3c704d88],dh
  423eb9:	inc    ebp
  423eba:	adc    BYTE PTR [edi+edx*4+0x3ab3ffda],ch
  423ec1:	pop    ebp
  423ec2:	or     al,0x1
  423ec4:	xchg   DWORD PTR [edx+eax*1],esp
  423ec7:	je     0x423ece
  423ec9:	cmp    DWORD PTR [eax],0xffffffed
  423ecc:	dec    eax
  423ecd:	clc    
  423ece:	mov    edi,DWORD PTR [ecx]
  423ed0:	mov    ch,0xe3
  423ed2:	adc    edx,DWORD PTR [edi-0x16000832]
  423ed8:	rol    DWORD PTR [ebx+0x7cdd5445],1
  423ede:	loop   0x423f53
  423ee0:	int    0x83
  423ee2:	inc    ebp
  423ee3:	ins    BYTE PTR es:[edi],dx
  423ee4:	inc    ecx
  423ee5:	dec    ebp
  423ee6:	hlt    
  423ee7:	mov    cl,ch
  423ee9:	xor    bh,bh
  423eeb:	jns    0x423eab
  423eed:	jecxz  0x423f54
  423eef:	cmp    eax,0x5f5bf7cc
  423ef4:	mov    edx,0xba69ff51
  423ef9:	div    BYTE PTR [ebp+0xc]
  423efc:	fisttp QWORD PTR [esi+0x19]
  423eff:	xor    ecx,ebp
  423f01:	push   edi
  423f02:	pop    esi
  423f03:	popf   
  423f04:	(bad)
  423f09:	idiv   BYTE PTR [edx-0x14]
  423f0c:	push   ds
  423f0d:	xchg   edi,eax
  423f0e:	clc    
  423f0f:	xchg   BYTE PTR [ebx+esi*4+0x32],cl
  423f13:	xchg   DWORD PTR [ecx+eiz*1-0x201a78d1],eax
  423f1a:	xchg   ecx,eax
  423f1b:	inc    ebx
  423f1c:	xchg   ebp,eax
  423f1d:	xor    al,0x4f
  423f1f:	xor    al,0x86
  423f21:	cld    
  423f22:	imul   BYTE PTR [edx-0x40695813]
  423f28:	jbe    0x423f87
  423f2a:	jge    0x423fa1
  423f2c:	mov    ecx,0x24045533
  423f31:	jbe    0x423efe
  423f33:	or     edi,edx
  423f35:	jg     0x423f42
  423f37:	push   DWORD PTR [edx+0x1d184eab]
  423f3d:	addr16 idiv edi
  423f40:	and    eax,0x9574c777
  423f45:	and    al,0x3f
  423f47:	and    BYTE PTR [edi+eiz*2],dl
  423f4a:	mul    esi
  423f4c:	mov    ds:0x26085132,eax
  423f51:	cmp    DWORD PTR [edi],ebx
  423f53:	xchg   esp,eax
  423f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f56:	sbb    bl,BYTE PTR [ebp+0x69]
  423f59:	loope  0x423ef1
  423f5b:	pop    ebx
  423f5c:	xchg   ecx,eax
  423f5d:	lods   al,BYTE PTR ds:[esi]
  423f5e:	sub    BYTE PTR [eax],cl
  423f60:	push   edx
  423f61:	mov    bh,0xbb
  423f63:	adc    ch,bl
  423f65:	test   eax,0xd85437d
  423f6a:	add    eax,0x347e0075
  423f6f:	inc    eax
  423f70:	or     BYTE PTR [esi-0x5e],al
  423f73:	jp     0x423fc2
  423f75:	and    eax,0x36080327
  423f7a:	test   al,0x7d
  423f7c:	or     BYTE PTR ds:0x5d41f303,ah
  423f82:	sti    
  423f83:	mov    eax,ds:0x1c040f55
  423f88:	enter  0x4702,0x8d
  423f8c:	push   cs
  423f8d:	cmp    dh,BYTE PTR ds:0xfe49de8d
  423f93:	out    0x50,al
  423f95:	mov    ch,0x8b
  423f97:	sub    al,0xfc
  423f99:	sti    
  423f9a:	sbb    eax,0x3d5385e
  423f9f:	xor    esi,ebx
  423fa1:	mov    eax,ds:0x3cf36e28
  423fa6:	mov    ebx,edi
  423fa8:	xchg   bh,bl
  423faa:	add    al,0x66
  423fac:	ret    
  423fad:	mov    ebx,0xad5527fc
  423fb2:	add    esi,DWORD PTR [edi+eax*8+0xe3546aa]
  423fb9:	loop   0x423fef
  423fbb:	or     bl,dh
  423fbd:	(bad)  
  423fc0:	push   eax
  423fc1:	mov    ecx,0x83fba48b
  423fc6:	sbb    ebx,DWORD PTR [esi+0x38]
  423fc9:	test   DWORD PTR [ebx],eax
  423fcb:	and    esi,ebx
  423fcd:	mov    ds:0x7cd98b,eax
  423fd2:	pop    DWORD PTR [ebx-0x3d1400dd]
  423fd8:	in     eax,dx
  423fd9:	push   cs
  423fda:	pop    esp
  423fdb:	xor    al,0xf7
  423fdd:	add    eax,0x3ee6bed0
  423fe2:	push   ecx
  423fe3:	sti    
  423fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fe5:	push   esi
  423fe6:	cmp    al,0x5f
  423fe8:	xor    ebp,DWORD PTR ds:0x3e5c454
  423fee:	ror    BYTE PTR [ebx+0x624183d5],1
  423ff4:	jmp    0x95dcfc
  423ff9:	pop    ds
  423ffa:	ins    BYTE PTR es:[edi],dx
  423ffb:	mov    ebx,0xba99dd75
  424000:	call   0xfbfd92df
  424005:	out    dx,al
  424006:	sub    eax,0xed2c89c2
  42400b:	imul   eax,DWORD PTR [ecx],0x1729c15
  424011:	nop
  424012:	mov    ebp,0x91e9fbbf
  424017:	xlat   BYTE PTR ds:[ebx]
  424018:	bound  esi,QWORD PTR [edx-0x59f9cb27]
  42401e:	call   0x8702:0x9ee8feb6
  424025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424026:	(bad)  
  424028:	pop    esp
  424029:	stc    
  42402a:	push   edx
  42402b:	or     ebp,DWORD PTR [eax+0x25076aeb]
  424031:	inc    esp
  424032:	in     al,0x1
  424034:	add    BYTE PTR [edx+0x0],ch
  424037:	jmp    0xd2eec945
  42403c:	mov    WORD PTR [ebp-0x4459a37],es
  424042:	mov    ecx,0x700c3865
  424047:	ret    0x89ae
  42404a:	mov    ah,0x6e
  42404c:	mov    WORD PTR [ebp+0x1],ds
  42404f:	neg    BYTE PTR [edi-0x1c]
  424052:	cs repnz and bh,bl
  424056:	(bad)  
  424057:	push   ebp
  424058:	(bad)  
  424059:	(bad)  
  42405a:	call   0xb157f9fd
  42405f:	dec    edx
  424060:	(bad)  
  424061:	jmp    FWORD PTR [ebx+0x5e]
  424064:	cmp    BYTE PTR [ebx],al
  424066:	sbb    esp,DWORD PTR [ecx-0x54]
  424069:	retf   0x9eeb
  42406c:	add    al,BYTE PTR [edi+0x40169114]
  424072:	add    BYTE PTR [ebx+esi*8-0x74],al
  424076:	test   eax,esp
  424078:	retf   
  424079:	idiv   edi
  42407b:	test   BYTE PTR ds:0xcbb4c445,dh
  424081:	into   
  424082:	test   DWORD PTR [ebx+edi*4-0x6c],eax
  424086:	ret    0xec8c
  424089:	icebp  
  42408a:	cmp    al,BYTE PTR [edi+0x4e]
  42408d:	sbb    ecx,DWORD PTR [ebx-0x7a7cfd65]
  424093:	mov    ebx,cs
  424095:	idiv   edi
  424097:	ffreep st(0)
  424099:	jge    0x4240a0
  42409b:	add    bh,bl
  42409d:	ror    BYTE PTR [ecx+0x73e5445],0x8b
  4240a4:	inc    ecx
  4240a5:	pop    ebp
  4240a6:	idiv   edi
  4240a8:	imul   ecx,DWORD PTR [esi],0xffffffc1
  4240ab:	jge    0x42405e
  4240ad:	push   ds
  4240ae:	ror    DWORD PTR [ecx+0x4583d601],0x70
  4240b5:	xchg   al,ah
  4240b7:	add    ch,BYTE PTR ds:0xf874bbfc
  4240bd:	rol    BYTE PTR [ebp-0x7c],cl
  4240c0:	test   BYTE PTR [ecx],al
  4240c2:	add    BYTE PTR [eax],ah
  4240c4:	xor    BYTE PTR [ebx+eax*4+0x41de875d],bh
  4240cb:	push   edi
  4240cc:	stc    
  4240cd:	cmp    al,0x74
  4240cf:	jmp    FWORD PTR [ebx+0x418d50ca]
  4240d5:	ins    DWORD PTR es:[edi],dx
  4240d6:	push   eax
  4240d7:	call   DWORD PTR [edx-0x3ef03fc4]
  4240dd:	cld    
  4240de:	or     bh,BYTE PTR [eax]
  4240e0:	sub    DWORD PTR [esi-0xa30d791],esi
  4240e6:	add    ecx,DWORD PTR [ebx-0x8b13f]
  4240ec:	popf   
  4240ed:	aam    0x7
  4240ef:	sar    DWORD PTR [eax+0x24c116a6],0xee
  4240f6:	fild   WORD PTR [edi+0x7481309a]
  4240fc:	and    dh,BYTE PTR [ebx+eax*8+0x37]
  424100:	add    ah,bl
  424102:	in     eax,dx
  424103:	cmc    
  424104:	fdiv   QWORD PTR es:[ecx]
  424107:	inc    ecx
  424108:	call   0x55b9e903
  42410d:	scas   al,BYTE PTR es:[edi]
  42410e:	shr    DWORD PTR [eax],cl
  424110:	div    BYTE PTR [eax-0x5e]
  424113:	pop    es
  424114:	pop    ebp
  424115:	mov    ?,WORD PTR [ebx+edi*2-0x3cc41408]
  42411c:	dec    edi
  42411d:	loop   0x4240fc
  42411f:	xlat   BYTE PTR ds:[ebx]
  424120:	adc    al,0x5d
  424122:	stos   DWORD PTR es:[edi],eax
  424123:	jbe    0x42411d
  424125:	xchg   esi,eax
  424126:	and    bl,dh
  424128:	or     DWORD PTR [eax+0x6afbc35c],0x54
  42412f:	icebp  
  424130:	scas   eax,DWORD PTR es:[edi]
  424131:	lea    ebp,[ebx-0x1]
  424134:	push   edx
  424135:	dec    esi
  424136:	xor    ah,dl
  424138:	sti    
  424139:	nop
  42413a:	imul   esi,eax,0x3f
  42413d:	popf   
  42413e:	mov    al,0xce
  424140:	or     esp,DWORD PTR [ecx]
  424142:	push   es
  424143:	ret    
  424144:	sti    
  424145:	xchg   edx,eax
  424146:	xor    DWORD PTR [ecx+0x8],ecx
  424149:	mov    dl,BYTE PTR [ebp-0x407dae1d]
  42414f:	fist   WORD PTR [eax]
  424151:	(bad)  [ecx-0x3ea2ba84]
  424157:	mov    esi,0xc2939975
  42415c:	adc    eax,0x3fda49
  424161:	inc    esp
  424162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424163:	ret    0xfb
  424166:	push   edx
  424167:	add    ebp,DWORD PTR [ebx+0x43025240]
  42416d:	or     eax,0x7fe27ee0
  424172:	lods   al,BYTE PTR ds:[esi]
  424173:	add    ecx,ebp
  424175:	add    ebx,DWORD PTR [edx]
  424177:	inc    esi
  424178:	cmc    
  424179:	jl     0x42415b
  42417b:	bound  ebp,QWORD PTR [esi+0x40]
  42417e:	inc    ecx
  42417f:	call   0x3666f1af
  424184:	test   DWORD PTR [eax+ebx*2+0x72],edi
  424188:	outs   dx,BYTE PTR ds:[esi]
  424189:	inc    eax
  42418a:	std    
  42418b:	out    0x23,eax
  42418d:	lods   al,BYTE PTR ds:[esi]
  42418e:	fiadd  WORD PTR [ebp+0x51]
  424191:	add    al,0x9d
  424193:	add    ch,cl
  424195:	jl     0x4241ef
  424197:	jbe    0x42420d
  424199:	inc    eax
  42419a:	or     DWORD PTR [ebx+0x7a],edx
  42419d:	adc    BYTE PTR [ecx+0x7a],al
  4241a0:	es add al,0x24
  4241a3:	pop    esi
  4241a4:	inc    ecx
  4241a5:	jl     0x424217
  4241a7:	outs   dx,BYTE PTR ds:[esi]
  4241a8:	(bad)  
  4241a9:	lock adc DWORD PTR ss:[ecx+0x4f3e1d03],ebp
  4241b1:	add    al,0x22
  4241b3:	(bad)  
  4241b4:	sub    al,0xf2
  4241b6:	jb     0x4241ba
  4241b8:	mov    esp,0x25461848
  4241bd:	xor    edx,DWORD PTR [eax]
  4241bf:	inc    esi
  4241c0:	sbb    eax,0xfd159633
  4241c5:	out    dx,eax
  4241c6:	rol    BYTE PTR [edx],cl
  4241c8:	ins    BYTE PTR es:[edi],dx
  4241c9:	ret    
  4241ca:	add    BYTE PTR [eax],dl
  4241cc:	sub    BYTE PTR [ebx-0x631573a],dh
  4241d2:	inc    ebx
  4241d3:	popf   
  4241d4:	mov    DWORD PTR [edi+ecx*8+0x50155db4],esp
  4241db:	mov    al,ds:0xe9d39bf9
  4241e0:	or     al,0x0
  4241e2:	call   0xaee2:0xeef03563
  4241e9:	push   edx
  4241ea:	out    0x3a,al
  4241ec:	jnp    0x4241fe
  4241ee:	sub    DWORD PTR [ecx+0x6de14583],ebx
  4241f4:	lea    ecx,[ebp-0x5b]
  4241f7:	push   ecx
  4241f8:	adc    al,0xfd
  4241fa:	(bad)  
  4241fb:	pusha  
  4241fc:	dec    ebx
  4241fd:	callw  0xc7c7
  424201:	add    cl,ch
  424203:	sahf   
  424204:	mov    bh,0x75
  424206:	fst    QWORD PTR [esi+0x38a69c5d]
  42420c:	cli    
  42420d:	pop    esp
  42420e:	jge    0x424262
  424210:	adc    DWORD PTR [esi-0x15],esp
  424213:	enter  0x132a,0xea
  424217:	sahf   
  424218:	add    bh,bl
  42421a:	cld    
  42421b:	repnz mov bh,0x15
  42421e:	inc    ebp
  42421f:	in     eax,dx
  424220:	cli    
  424221:	jmp    DWORD PTR [ecx-0x66]
  424224:	or     ah,BYTE PTR [esi-0x18]
  424227:	dec    ebx
  424228:	dec    ebp
  424229:	les    edx,FWORD PTR [ecx-0x18]
  42422c:	mov    ebp,0xd8005efb
  424231:	xor    al,0xf4
  424233:	mov    edi,0xf9d014e1
  424238:	pop    esi
  424239:	add    al,BYTE PTR [eax+0xb01adc4]
  42423f:	xor    BYTE PTR fs:[edx],al
  424242:	add    cl,ch
  424244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424245:	push   edi
  424246:	call   0x5dc4d8ff
  42424b:	cli    
  42424c:	xchg   edi,eax
  42424d:	push   edi
  42424e:	in     al,0x95
  424250:	add    ah,0x45
  424253:	cli    
  424254:	lahf   
  424255:	push   esp
  424256:	sti    
  424257:	hlt    
  424258:	sub    dl,BYTE PTR [ebx]
  42425a:	inc    eax
  42425b:	add    BYTE PTR [ebp+edi*1+0x45],dh
  42425f:	hlt    
  424260:	pop    esp
  424261:	loope  0x42426d
  424263:	je     0x4242a7
  424265:	repz div BYTE PTR [ebp-0x68]
  424269:	mov    edi,0xbf8ae875
  42426e:	adc    eax,0x4644c0
  424273:	mov    ecx,DWORD PTR [ecx-0x6e72b54a]
  424279:	jb     0x424263
  42427b:	cdq    
  42427c:	pusha  
  42427d:	mov    edi,0x5c8a53f7
  424282:	adc    al,0xff
  424284:	fnstcw WORD PTR [edx+0x4943d7f6]
  42428a:	hlt    
  42428b:	neg    esp
  42428d:	stos   BYTE PTR es:[edi],al
  42428e:	mov    ebx,0x453dca40
  424293:	mov    eax,0xcba91300
  424298:	adc    ah,al
  42429a:	(bad)  
  42429b:	aaa    
  42429c:	pop    ebp
  42429d:	(bad)  
  42429e:	dec    ecx
  42429f:	push   es
  4242a0:	push   ebx
  4242a1:	arpl   WORD PTR [eax-0x1c],cx
  4242a4:	(bad)  
  4242a5:	(bad)  
  4242a7:	dec    esi
  4242a8:	(bad)  
  4242a9:	jmp    0xb4825373
  4242ae:	repnz dec edx
  4242b0:	push   0xffffffb3
  4242b2:	mov    esi,0xe03c0c75
  4242b7:	fwait
  4242b8:	jmp    FWORD PTR [ebx+0xd]
  4242bb:	pop    ebp
  4242bc:	pushf  
  4242bd:	jmp    0xa46a876
  4242c2:	pop    esi
  4242c3:	lsl    eax,WORD PTR [ebp+eax*1-0x418f8a09]
  4242cb:	adc    eax,0x4588a4
  4242d0:	mov    edi,DWORD PTR [ecx]
  4242d2:	mov    ebp,0x1e9d0165
  4242d7:	xor    dl,ah
  4242d9:	test   edi,eax
  4242db:	ret    
  4242dc:	sti    
  4242dd:	push   0xffffff9c
  4242df:	les    esi,FWORD PTR ds:0x4043c1
  4242e5:	pop    edx
  4242e6:	(bad)  
  4242e7:	push   ebx
  4242e8:	adc    ebp,ebx
  4242ea:	stos   DWORD PTR es:[edi],eax
  4242eb:	fadd   DWORD PTR [edx+0x53]
  4242ee:	out    0xb7,al
  4242f0:	add    al,0xc9
  4242f2:	inc    esp
  4242f3:	std    
  4242f4:	pop    esp
  4242f5:	dec    ecx
  4242f6:	push   esi
  4242f7:	or     DWORD PTR [ecx],edi
  4242f9:	add    al,dl
  4242fb:	fstp   TBYTE PTR [eax]
  4242fd:	or     cl,dh
  4242ff:	sar    BYTE PTR [ecx],0xf0
  424302:	and    ch,dh
  424304:	scas   eax,DWORD PTR es:[edi]
  424305:	push   edx
  424306:	sbb    dl,dh
  424308:	mov    edi,0x52ab5d10
  42430d:	lea    ebx,[eax+0x67]
  424310:	mov    eax,ebx
  424312:	cmc    
  424313:	sahf   
  424314:	mov    ebx,0xe04fafb
  424319:	push   edx
  42431a:	test   DWORD PTR [eax-0x7f62fffe],esi
  424320:	cmp    DWORD PTR [edx+eiz*8],ecx
  424323:	int    0x63
  424325:	adc    al,0x5d
  424327:	stos   DWORD PTR es:[edi],eax
  424328:	sub    eax,0xc8162001
  42432d:	xchg   edx,esp
  42432f:	push   edx
  424330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424331:	test   edx,0xdd75bf57
  424337:	js     0x4242f7
  424339:	adc    eax,0x3fbabd
  42433e:	push   ebx
  42433f:	inc    eax
  424340:	sbb    esp,edx
  424342:	lea    ebp,[ebx-0x1]
  424345:	test   eax,esp
  424347:	hlt    
  424348:	pop    esi
  424349:	pop    edx
  42434a:	mul    dl
  42434c:	ror    DWORD PTR [ebx*4-0x76b6e4fe],0xb
  424354:	xchg   ebp,eax
  424355:	loop   0x42430b
  424357:	push   ebp
  424358:	add    eax,0xabf99839
  42435d:	mov    bl,0x0
  42435f:	icebp  
  424360:	or     BYTE PTR [esi-0x54d173e],dl
  424366:	cmp    BYTE PTR [ecx+0x51],cl
  424369:	repnz sbb BYTE PTR [ebp+0x13],bl
  42436d:	test   eax,0x3485da03
  424372:	enter  0xc01a,0xd1
  424376:	data16 xor bh,BYTE PTR [eax-0x4830a92e]
  42437d:	push   esp
  42437e:	adc    BYTE PTR [esi],ah
  424380:	push   cs
  424381:	adc    DWORD PTR [eax],ebx
  424383:	fld    QWORD PTR [edx]
  424385:	fs ret 
  424387:	nop
  424388:	popa   
  424389:	popa   
  42438a:	pusha  
  42438b:	or     ch,BYTE PTR [ecx+eax*4+0x54e2a0b9]
  424392:	inc    esi
  424393:	popf   
  424394:	(bad)  
  424395:	xor    eax,0xe0de598f
  42439a:	pop    ecx
  42439b:	dec    esi
  42439c:	mov    ecx,DWORD PTR ds:0x332e8ee8
  4243a2:	lods   al,BYTE PTR ds:[esi]
  4243a3:	dec    ecx
  4243a4:	jge    0x424421
  4243a6:	ret    0xc321
  4243a9:	std    
  4243aa:	dec    eax
  4243ab:	sbb    BYTE PTR [eax-0x1239bb0b],bh
  4243b1:	les    edi,FWORD PTR [ebx-0x7e]
  4243b4:	add    bl,BYTE PTR [edx+0x18]
  4243b7:	inc    ebp
  4243b8:	adc    DWORD PTR [ecx+0x64b31a03],ebp
  4243be:	mov    ecx,0x61fde731
  4243c3:	add    BYTE PTR [ecx-0x22d1f0d3],bl
  4243c9:	dec    edi
  4243ca:	add    BYTE PTR [ecx-0x40],al
  4243cd:	xor    edi,edx
  4243cf:	sbb    eax,DWORD PTR cs:[eax+ecx*1+0x70]
  4243d4:	xchg   edi,eax
  4243d5:	jg     0x424419
  4243d7:	std    
  4243d8:	sub    DWORD PTR [ebx+0x4],eax
  4243db:	or     DWORD PTR [esi-0x3122bd7b],0x37
  4243e2:	ret    
  4243e3:	icebp  
  4243e4:	(bad)  
  4243e5:	stos   BYTE PTR es:[edi],al
  4243e6:	xchg   ebx,eax
  4243e7:	ja     0x424445
  4243e9:	mov    ebx,0xc4a6af87
  4243ee:	add    ch,al
  4243f0:	sti    
  4243f1:	or     DWORD PTR [ebx+0x3a],edx
  4243f4:	pop    esp
  4243f5:	or     eax,0x2def5e0
  4243fa:	pop    ebx
  4243fb:	aaa    
  4243fc:	sar    BYTE PTR [eax+0x8],1
  4243ff:	jmp    0x956240e8
  424404:	fadd   DWORD PTR [edx]
  424406:	add    al,0x17
  424408:	sub    BYTE PTR [esi],ch
  42440a:	and    al,0xe1
  42440c:	retf   0xe817
  42440f:	ret    
  424410:	adc    eax,0xd96dfbbc
  424415:	sub    eax,0x5af29e16
  42441a:	mov    eax,0x15bb992a
  42441f:	add    DWORD PTR [esi-0x2693ffbe],ecx
  424425:	sub    eax,0x8e00c206
  42442a:	(bad)  
  42442b:	je     0x424419
  42442d:	leave  
  42442e:	jbe    0x424470
  424430:	sbb    BYTE PTR [eax-0x52f28b45],0x54
  424437:	sti    
  424438:	hlt    
  424439:	ss push cs
  42443b:	inc    eax
  42443c:	jmp    0xe94abc7d
  424441:	push   ebx
  424442:	jg     0x424430
  424444:	add    BYTE PTR [edx-0x1],ah
  424447:	pop    ds
  424448:	lods   al,BYTE PTR ds:[esi]
  424449:	inc    edi
  42444a:	add    al,BYTE PTR [esi+edx*2]
  42444d:	xor    eax,DWORD PTR [edi-0x44aff783]
  424453:	jecxz  0x4243fc
  424455:	lock shl bh,0x84
  424459:	(bad)  
  42445a:	cli    
  42445b:	and    eax,0xb85651ff
  424460:	inc    ebx
  424461:	je     0x424426
  424463:	adc    eax,0x424568
  424468:	mov    edx,DWORD PTR [ebp+edi*2-0x12]
  42446c:	je     0x4244d6
  42446e:	mov    bh,0x79
  424470:	add    al,0xd1
  424472:	sbb    ch,dh
  424474:	inc    ebp
  424475:	inc    esp
  424476:	ret    0x974
  424479:	pop    ebx
  42447a:	in     eax,dx
  42447b:	or     edi,edi
  42447d:	xor    DWORD PTR [esi+0x10],ebx
  424480:	inc    eax
  424481:	xor    al,0x87
  424483:	ds or  dl,dh
  424486:	or     eax,DWORD PTR [ecx]
  424488:	jmp    0x424493
  42448a:	ret    
  42448b:	jne    0x42449d
  42448d:	add    BYTE PTR [ebx-0x13],cl
  424490:	or     edx,DWORD PTR [edi+0x3b]
  424493:	or     eax,0xfeb41548
  424498:	push   esi
  424499:	pop    esi
  42449a:	mov    ecx,0x12000cbc
  42449f:	std    
  4244a0:	pop    ds
  4244a1:	lods   al,BYTE PTR ds:[esi]
  4244a2:	mov    bh,0xfe
  4244a4:	add    edx,DWORD PTR [esi+0x6f]
  4244a7:	in     eax,dx
  4244a8:	and    ecx,DWORD PTR [eax]
  4244aa:	shr    BYTE PTR [ebx-0x3cbfb01d],1
  4244b0:	test   DWORD PTR [esp+esi*8-0x5e00e313],0xc443b822
  4244bb:	ret    0x6815
  4244be:	popf   
  4244bf:	mov    edx,0xec20003f
  4244c4:	xor    cl,BYTE PTR ds:0x75037b66
  4244ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244cb:	(bad)  
  4244cd:	add    BYTE PTR [esi],ah
  4244cf:	imul   eax,DWORD PTR [edi],0xffffffe7
  4244d2:	mov    ds:0x7515c08d,al
  4244d7:	mov    bh,0x3f
  4244d9:	add    bl,bl
  4244db:	jmp    0xa6ad44e2
  4244e0:	fild   QWORD PTR [ebx+0x5203abde]
  4244e6:	push   ss
  4244e7:	aaa    
  4244e8:	jecxz  0x4244f1
  4244ea:	sar    DWORD PTR [ebp-0x52e6ef59],1
  4244f0:	mov    ebx,0x2f5d0084
  4244f5:	sbb    bh,bl
  4244f7:	mov    BYTE PTR [edi],bh
  4244f9:	jl     0x42453a
  4244fb:	popf   
  4244fc:	aam    0x19
  4244fe:	push   0x8503eb8c
  424503:	pop    ebp
  424504:	dec    edi
  424505:	adc    DWORD PTR [edi],esi
  424507:	lods   eax,DWORD PTR ds:[esi]
  424508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424509:	cmp    BYTE PTR [eax],cl
  42450b:	jecxz  0x4244b7
  42450d:	add    al,0x87
  42450f:	pop    ebp
  424510:	mov    ds:0x647303a6,eax
  424515:	sbb    esp,ecx
  424517:	test   eax,0xdf5a03eb
  42451c:	sahf   
  42451d:	push   ecx
  42451f:	cwde   
  424520:	retf   
  424521:	imul   edi,DWORD PTR [edi],0xffffff9d
  424524:	lahf   
  424525:	push   ebp
  424526:	xchg   DWORD PTR [ecx-0x39],ebp
  424529:	or     esi,DWORD PTR [esi+edi*2-0x6d]
  42452d:	aad    0x7f
  42452f:	shr    DWORD PTR [ebx],cl
  424531:	mov    al,al
  424533:	push   ecx
  424534:	sar    DWORD PTR [edx-0x5efd9ecb],1
  42453a:	inc    ebx
  42453b:	popf   
  42453c:	mov    ch,0xf4
  42453e:	sub    ecx,DWORD PTR [edx+eax*2+0x2ddd88e9]
  424545:	(bad)  
  424547:	xor    cl,BYTE PTR [edx]
  424549:	mov    esp,0xa9c2ca08
  42454e:	stos   BYTE PTR es:[edi],al
  42454f:	call   0x2a06:0xc138324c
  424556:	sbb    DWORD PTR [eax],eax
  424558:	fisttp QWORD PTR ds:0xc0d703a9
  42455e:	icebp  
  42455f:	add    ecx,eax
  424561:	xchg   DWORD PTR ds:0x3ce2a0b6,eax
  424567:	inc    ebx
  424568:	popf   
  424569:	(bad)  
  42456a:	xchg   ebp,eax
  42456b:	mov    bh,al
  42456d:	or     dl,BYTE PTR [ebx+0x63aac637]
  424573:	add    DWORD PTR [edi-0x4c],0x65
  424577:	(bad)  
  424578:	leave  
  424579:	sbb    al,0xe2
  42457b:	clc    
  42457c:	(bad)  
  42457d:	jp     0x4245a5
  42457f:	add    al,0x36
  424581:	push   cs
  424582:	inc    ecx
  424583:	adc    eax,0xb35e02dd
  424588:	sbb    BYTE PTR [ebp+0x54d2583d],ch
  42458e:	in     eax,0x38
  424590:	data16 jg 0x4245c7
  424593:	adc    BYTE PTR [ebp-0x52d625d2],bl
  424599:	test   DWORD PTR [ebx],ebp
  42459b:	adc    BYTE PTR [ebp-0x7b],cl
  42459e:	and    al,0x10
  4245a0:	dec    ebp
  4245a1:	stos   BYTE PTR es:[edi],al
  4245a2:	xchg   DWORD PTR [edi],esi
  4245a4:	out    0xb3,eax
  4245a6:	inc    ax
  4245a8:	lea    eax,[edx]
  4245aa:	std    
  4245ab:	lock outs dx,DWORD PTR ds:[esi]
  4245ad:	mov    bl,0xf3
  4245af:	or     edx,esi
  4245b1:	or     eax,0x42aea500
  4245b6:	add    BYTE PTR [ebx],al
  4245b8:	cdq    
  4245b9:	mov    bh,0x72
  4245bb:	icebp  
  4245bc:	add    BYTE PTR [edi],ah
  4245be:	mov    ebx,0xb74ff566
  4245c3:	adc    eax,0x428f35
  4245c8:	push   esi
  4245c9:	(bad)  
  4245ca:	or     eax,eax
  4245cc:	sahf   
  4245cd:	pop    ebx
  4245ce:	xor    BYTE PTR [eax],cl
  4245d0:	test   eax,0x361c4021
  4245d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d6:	rcl    BYTE PTR [eax],cl
  4245d8:	test   eax,0x292f579e
  4245dd:	fimul  WORD PTR [edx-0x4872edfe]
  4245e3:	jne    0x4245de
  4245e5:	sub    ebp,DWORD PTR ds:0xd23ba0c
  4245eb:	in     al,0xdd
  4245ed:	fiadd  WORD PTR [edx]
  4245ef:	pop    edx
  4245f0:	mov    ds:0xe90c74bd,al
  4245f5:	in     eax,0x7b
  4245f7:	in     al,dx
  4245f8:	neg    DWORD PTR [edx-0x5ed5541e]
  4245fe:	dec    BYTE PTR [esi+0x72]
  424601:	ror    BYTE PTR [edx],cl
  424603:	push   edx
  424604:	pop    ebp
  424605:	jno    0x4245b1
  424607:	imul   DWORD PTR [ebx-0x1d]
  42460a:	mov    dh,0x84
  42460c:	test   eax,0xf4fb1fd5
  424611:	jb     0x42468d
  424613:	aas    
  424614:	jmp    0xd8aa5362
  424619:	pop    esi
  42461a:	add    al,BYTE PTR [edi+0x74b02299]
  424620:	xor    al,0x0
  424622:	hlt    
  424623:	pop    eax
  424624:	add    al,0x1c
  424626:	push   ecx
  424627:	mov    bh,0x72
  424629:	icebp  
  42462a:	and    DWORD PTR [eax],esi
  42462c:	adc    al,0x0
  42462e:	and    ebp,esp
  424630:	ud0    ecx,edx
  424633:	add    dh,bh
  424635:	jne    0x4245f7
  424637:	jne    0x42464e
  424639:	enter  0x3ee4,0x0
  42463d:	add    ecx,0xe
  424640:	add    BYTE PTR [ecx+eiz*4+0x4d],dh
  424644:	div    DWORD PTR [esi-0x44]
  424647:	jne    0x42465e
  424649:	int3   
  42464a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42464b:	add    BYTE PTR ds:[edx-0x7c],ch
  42464f:	outs   dx,DWORD PTR ds:[esi]
  424650:	outs   dx,BYTE PTR ds:[esi]
  424651:	or     BYTE PTR [edi],cl
  424653:	outs   dx,DWORD PTR ds:[esi]
  424654:	bound  edx,QWORD PTR [edi+eiz*1]
  424657:	outs   dx,DWORD PTR ds:[esi]
  424658:	adc    eax,0x4667dc
  42465d:	neg    esp
  42465f:	or     eax,eax
  424661:	push   edi
  424662:	xchg   ebx,eax
  424663:	clc    
  424664:	pop    es
  424665:	inc    eax
  424666:	std    
  424667:	dec    eax
  424668:	sbb    al,0xff
  42466a:	imul   edx,esi,0x4f444010
  424670:	bound  eax,QWORD PTR [edx]
  424672:	jp     0x42467c
  424674:	add    DWORD PTR [eax-0x61],ebx
  424677:	add    edi,esi
  424679:	jne    0x4246df
  42467b:	outs   dx,DWORD PTR ds:[esi]
  42467c:	jne    0x42468a
  42467e:	ja     0x4246ef
  424680:	adc    eax,0x4628c0
  424685:	pop    esi
  424686:	add    BYTE PTR [edi+0x51],ch
  424689:	mov    edx,0x8359340c
  42468e:	in     al,dx
  42468f:	pop    DWORD PTR [esi+0x6040180]
  424695:	sub    esp,0x9d4
  42469b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42469c:	pop    eax
  42469d:	test   eax,eax
  42469f:	cwde   
  4246a0:	or     ah,BYTE PTR [edx+0x0]
  4246a3:	mov    ah,0x6f
  4246a5:	adc    eax,0x3fac9d10
  4246aa:	add    BYTE PTR [eax-0x62000163],ah
  4246b0:	mov    eax,0x9b9df383
  4246b5:	dec    DWORD PTR [edx+ebp*1-0x62000148]
  4246bc:	and    al,0xb0
  4246be:	call   0xfbff1852
  4246c3:	and    BYTE PTR [edi+0x58aaf6e1],dl
  4246c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246ca:	dec    edx
  4246cb:	in     al,0x40
  4246cd:	mov    esp,0xff9a2f05
  4246d2:	inc    DWORD PTR [edi]
  4246d4:	fmul   DWORD PTR [edi+0x66]
  4246d7:	popf   
  4246d8:	xor    al,BYTE PTR es:[eax-0x17441ce2]
  4246df:	xor    edx,DWORD PTR [esi-0x43]
  4246e2:	sti    
  4246e3:	sbb    bl,bl
  4246e5:	cmp    al,0x1d
  4246e7:	push   ss
  4246e8:	loope  0x424738
  4246ea:	push   0x3fef1d00
  4246ef:	add    BYTE PTR [eax],ch
  4246f1:	push   ds
  4246f2:	paddw  mm2,QWORD PTR [edx-0x50]
  4246f6:	dec    esi
  4246f7:	call   0x41cb50
  4246fc:	sbb    bl,bl
  4246fe:	or     edx,DWORD PTR [ebp+0x75c41f5d]
  424704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424705:	or     al,0xc4
  424707:	bound  edx,QWORD PTR [esi+ebx*1]
  42470a:	adc    al,0xfd
  42470c:	and    al,al
  42470e:	jge    0x4246fa
  424710:	pushf  
  424711:	fwait
  424712:	dec    DWORD PTR [eax+ebx*1+0xafbbafd]
  424719:	popa   
  42471a:	add    al,0x0
  42471c:	pop    ebp
  42471d:	loop   0x42474f
  42471f:	stc    
  424720:	dec    esp
  424721:	add    dh,BYTE PTR [ecx+eax*4-0x6b]
  424725:	mov    cl,0x9a
  424727:	mov    ebx,0x4d641a4d
  42472c:	scas   al,BYTE PTR es:[edi]
  42472d:	fild   DWORD PTR [eax-0x7d4fe2a8]
  424733:	cs pop ecx
  424735:	push   eax
  424736:	adc    ecx,DWORD PTR [ecx+0x3ff5a60]
  42473c:	ins    DWORD PTR es:[edi],dx
  42473d:	mov    cl,0xd4
  42473f:	out    dx,eax
  424740:	mov    WORD PTR [edx-0x17],es
  424743:	xchg   cl,bl
  424745:	std    
  424746:	pop    ecx
  424747:	xor    ebx,DWORD PTR [ecx-0x59e39381]
  42474d:	mov    al,0x4a
  42474f:	lea    eax,[eax]
  424751:	adc    BYTE PTR [ebx+0x70],bl
  424754:	inc    ecx
  424755:	dec    ebp
  424756:	mov    al,0xd4
  424758:	das    
  424759:	lods   al,BYTE PTR ds:[esi]
  42475a:	inc    edx
  42475b:	jmp    0x99f51fe8
  424760:	mov    al,ah
  424762:	pop    edx
  424763:	mov    ecx,0x111a9d2d
  424768:	mov    ds,ebp
  42476a:	add    ah,BYTE PTR [ecx+eax*4-0x73]
  42476e:	lods   eax,DWORD PTR ds:[esi]
  42476f:	or     bh,BYTE PTR [ebx+0x2fda9aed]
  424775:	push   esi
  424776:	mov    al,0x64
  424778:	(bad)  
  424779:	rol    BYTE PTR [esi],1
  42477b:	mov    bh,0xc3
  42477d:	cmp    dh,ah
  42477f:	jle    0x424794
  424781:	sub    BYTE PTR [esi-0x27],al
  424784:	push   ebx
  424785:	loop   0x424721
  424787:	jecxz  0x4247bf
  424789:	daa    
  42478a:	mov    al,0x41
  42478c:	lods   al,BYTE PTR ds:[esi]
  42478d:	and    dh,BYTE PTR [eax-0x1714517]
  424793:	rcl    DWORD PTR [eax],0xad
  424796:	adc    ebp,DWORD PTR [ecx]
  424798:	add    al,0x20
  42479a:	ret    
  42479b:	add    BYTE PTR ds:0xae0028aa,bh
  4247a1:	rep lods al,BYTE PTR ds:[esi]
  4247a3:	adc    eax,0x428819
  4247a8:	jb     0x4247dd
  4247aa:	fwait
  4247ab:	es sbb al,0x26
  4247ae:	lods   al,BYTE PTR ds:[esi]
  4247af:	out    0xa2,eax
  4247b1:	dec    esi
  4247b2:	add    DWORD PTR [edx+0x22],ebx
  4247b5:	add    al,ah
  4247b7:	outs   dx,DWORD PTR ds:[esi]
  4247b8:	push   ebp
  4247b9:	jb     0x4247bd
  4247bb:	xor    ah,ah
  4247bd:	jno    0x4247da
  4247bf:	lahf   
  4247c0:	and    BYTE PTR [edi],dl
  4247c2:	dec    esi
  4247c3:	sub    BYTE PTR [ecx],al
  4247c5:	lea    bp,[esi+0x529ea910]
  4247cc:	sti    
  4247cd:	cld    
  4247ce:	sahf   
  4247cf:	adc    DWORD PTR [eax-0x17],eax
  4247d2:	push   edi
  4247d3:	cmc    
  4247d4:	arpl   WORD PTR [ecx-0x378fd25],ax
  4247da:	pop    edx
  4247db:	add    BYTE PTR [eax-0x17],al
  4247de:	inc    edi
  4247df:	rol    DWORD PTR [edi+0x40163af4],cl
  4247e5:	jmp    0x29c78d2d
  4247ea:	mov    edx,0x42ad873f
  4247ef:	push   DWORD PTR [esi]
  4247f1:	in     al,0x7e
  4247f3:	push   0x3f
  4247f5:	jmp    0x7dc13d87
  4247fa:	push   0x13
  4247fc:	cld    
  4247fd:	jl     0x424833
  4247ff:	bound  ebp,QWORD PTR [eax+0x31]
  424802:	jecxz  0x424806
  424804:	callw  0x7dfd
  424808:	and    al,0xfd
  42480a:	sub    edx,DWORD PTR [ebx]
  42480c:	add    ecx,ebp
  42480e:	sahf   
  42480f:	sbb    bl,BYTE PTR [eax-0x6f]
  424812:	pusha  
  424813:	add    ch,al
  424815:	add    dh,bl
  424817:	jo     0x424810
  424819:	inc    DWORD PTR [eax]
  42481b:	pop    DWORD PTR [edi]
  42481d:	push   0x8806b7b8
  424822:	and    DWORD PTR [eax+0x3b000003],0xb7b85f9f
  42482c:	push   es
  42482d:	not    edi
  42482f:	sahf   
  424830:	push   es
  424831:	bound  eax,QWORD PTR [eax]
  424833:	sahf   
  424834:	imul   ecx,DWORD PTR [ebp+0x500ae044],0xf88532ff
  42483e:	inc    ecx
  424840:	sbb    ebp,DWORD PTR [ebx]
  424842:	leave  
  424843:	inc    ecx
  424844:	(bad)  
  424845:	push   edi
  424846:	wrmsr  
  424848:	(bad)  
  424849:	push   esi
  42484a:	mov    esp,DWORD PTR [ecx+0x57]
  42484d:	mov    ebx,0x815a3f55
  424852:	in     al,dx
  424853:	cld    
  424854:	push   es
  424855:	add    BYTE PTR [eax],al
  424857:	xor    dl,BYTE PTR [ebx-0x9]
  42485a:	jne    0x4247e8
  42485c:	jg     0x424856
  42485e:	call   0x397832
  424863:	pop    ebx
  424864:	xor    eax,eax
  424866:	mov    DWORD PTR [ecx+0x5e],eax
  424869:	test   al,0x1
  42486b:	jnp    0x42489a
  42486d:	add    DWORD PTR ds:[edx+eax*1-0x73],esi
  424872:	inc    ebp
  424873:	lods   al,BYTE PTR ds:[esi]
  424874:	push   esi
  424875:	div    DWORD PTR [ebp+0x4c]
  424878:	imul   edx,DWORD PTR ds:0x4267e4,0xffffff85
  42487f:	add    BYTE PTR [edx+esi*8+0x2b],dh
  424883:	push   0x46
  424885:	test   DWORD PTR [edi],edi
  424887:	push   eax
  424888:	je     0x4248f5
  42488a:	jne    0x424884
  42488c:	mov    ecx,0x9d503c42
  424891:	and    BYTE PTR [eax+0x4c],al
  424894:	sub    BYTE PTR [edi+0x37],cl
  424897:	sti    
  424898:	adc    al,ch
  42489a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42489b:	pop    esi
  42489c:	inc    ecx
  42489d:	pushf  
  42489e:	dec    DWORD PTR [eax+ebx*1-0x504470c]
  4248a5:	or     ebp,DWORD PTR [eax+edi*8-0x780063c1]
  4248ac:	pusha  
  4248ad:	mov    WORD PTR [esp+eax*1+0xb8dedb],gs
  4248b4:	sbb    eax,0x2600b8ff
  4248b9:	outs   dx,DWORD PTR ds:[esi]
  4248ba:	sub    edx,DWORD PTR [ecx]
  4248bc:	pop    ebp
  4248bd:	fwait
  4248be:	sub    ecx,DWORD PTR [ecx-0x35]
  4248c1:	fisubr WORD PTR [edi-0x4727cff0]
  4248c7:	jae    0x42486a
  4248c9:	and    al,0xd1
  4248cb:	or     esi,edx
  4248cd:	pop    eax
  4248ce:	add    ecx,DWORD PTR [ebx]
  4248d0:	jmp    0xcab:0x7dc10760
  4248d7:	shl    DWORD PTR [edx-0x65aff3d4],0x34
  4248de:	inc    esp
  4248df:	add    al,0x5c
  4248e1:	cmp    ecx,DWORD PTR [edi]
  4248e3:	pop    es
  4248e4:	add    BYTE PTR [ebx+ecx*4-0x48],bl
  4248e8:	jae    0x42488f
  4248ea:	in     al,0x29
  4248ec:	or     BYTE PTR [edx-0x4a],ch
  4248ef:	repz adc ebx,ebp
  4248f2:	fwait
  4248f3:	jp     0x4248b5
  4248f5:	shr    DWORD PTR [eax+0x2c52642d],1
  4248fb:	add    edi,ebx
  4248fd:	mov    al,0xcb
  4248ff:	adc    al,0x40
  424901:	popf   
  424902:	push   ds
  424903:	mov    edi,0xfeeb210b
  424908:	call   FWORD PTR [ebp+0x288cd102]
  42490e:	lods   eax,DWORD PTR ds:[esi]
  42490f:	fiadd  DWORD PTR [eax-0x74b4c9a3]
  424915:	pop    esi
  424916:	adc    bh,BYTE PTR [edi]
  424918:	adc    al,0x62
  42491a:	pop    es
  42491b:	fld    QWORD PTR [ebx*4-0x7653e6fe]
  424922:	xor    esi,DWORD PTR [ebx-0x22cb0949]
  424928:	mov    dh,0xcf
  42492a:	lods   al,BYTE PTR ds:[esi]
  42492b:	sbb    al,0xc
  42492d:	sub    DWORD PTR [esi-0x526ad066],0x5a
  424934:	mov    WORD PTR [edx+eax*1-0x2d574917],ds
  42493b:	(bad)  
  42493c:	inc    ebx
  42493d:	popf   
  42493e:	xchg   DWORD PTR [ecx-0x7ee57ad0],ebp
  424944:	add    ebx,DWORD PTR [ebp+0x2f6a02]
  42494a:	mov    eax,ds:0x9a13fcad
  42494f:	inc    edx
  424950:	jmp    0xf87926d5
  424955:	mov    bl,dh
  424957:	adc    ch,BYTE PTR [ecx+0x7c]
  42495a:	mov    ecx,0x9c03e901
  42495f:	xor    eax,0xabd889df
  424964:	ds pop esp
  424966:	add    eax,DWORD PTR [ebx]
  424968:	pop    esp
  424969:	outs   dx,DWORD PTR ds:[esi]
  42496a:	icebp  
  42496b:	add    ecx,ebp
  42496d:	add    esp,DWORD PTR [esi-0xb]
  424970:	sbb    DWORD PTR [ecx],edx
  424972:	in     eax,dx
  424973:	adc    DWORD PTR [ecx-0x69dabafd],ebp
  424979:	mov    dh,0x56
  42497b:	js     0x424929
  42497d:	pop    es
  42497e:	dec    esi
  42497f:	inc    ebx
  424980:	lds    eax,FWORD PTR [ebx]
  424982:	popf   
  424983:	add    al,BYTE PTR [eax]
  424985:	test   eax,0x6a4ef56d
  42498a:	pop    ecx
  42498b:	pop    es
  42498c:	push   eax
  42498d:	je     0x42496c
  42498f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424990:	push   eax
  424991:	fimul  WORD PTR [ebp-0x5ed6ec0e]
  424997:	and    al,0x2
  424999:	pop    esp
  42499a:	pop    ebp
  42499b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42499c:	push   eax
  42499d:	(bad)  
  42499e:	jnp    0x4249f6
  4249a0:	add    ecx,ebp
  4249a2:	sahf   
  4249a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249a4:	adc    eax,0x428d29
  4249a9:	inc    ebx
  4249aa:	call   0xa65d:0x740624
  4249b1:	push   eax
  4249b2:	sahf   
  4249b3:	jae    0x424a0b
  4249b5:	add    ecx,ebp
  4249b7:	sahf   
  4249b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249b9:	adc    eax,0x42a2d5
  4249be:	cmp    DWORD PTR [ecx-0x234fa5b9],esp
  4249c4:	cli    
  4249c5:	call   FWORD PTR [ebx]
  4249c7:	es lahf 
  4249c9:	jg     0x424950
  4249cb:	imul   BYTE PTR [ebx]
  4249cd:	in     al,dx
  4249ce:	add    eax,0x5b87504e
  4249d3:	pop    ss
  4249d4:	inc    ecx
  4249d5:	adc    al,0xbe
  4249d7:	pop    ebx
  4249d8:	add    bh,BYTE PTR [ecx+ebp*8]
  4249db:	sahf   
  4249dc:	add    bh,bl
  4249de:	mov    edi,0x54c799a
  4249e3:	test   eax,0x76dcfb51
  4249e8:	cmovo  ebp,ecx
  4249eb:	sbb    eax,0x106d0bc2
  4249f0:	add    al,BYTE PTR [eax]
  4249f2:	jmp    0x62568a0e
  4249f7:	out    0xe6,al
  4249f9:	repnz sub BYTE PTR [esi-0xbfffffe],bl
  424a00:	fiadd  DWORD PTR [ecx*4+0x5e2abc2]
  424a07:	mov    edi,0x58c77ab5
  424a0c:	pop    esp
  424a0d:	rol    DWORD PTR [eax],0x34
  424a10:	dec    DWORD PTR [edi]
  424a12:	je     0x424a14
  424a14:	jbe    0x424a8f
  424a16:	sbb    eax,0x3f1830
  424a1b:	push   edi
  424a1c:	xchg   esi,eax
  424a1e:	adc    al,0x50
  424a20:	xchg   ecx,eax
  424a21:	inc    edx
  424a22:	and    al,0x1c
  424a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a25:	jne    0x4249f2
  424a27:	test   DWORD PTR [ebp+eax*1-0x6b],eax
  424a2b:	sar    BYTE PTR [eax-0x3a],0x75
  424a2f:	sub    eax,0x8313ec6f
  424a34:	xor    al,0x12
  424a36:	push   eax
  424a37:	(bad)  
  424a38:	fxch   st(2)
  424a3a:	cmovo  eax,esp
  424a3d:	sub    eax,eax
  424a3f:	je     0x4249e7
  424a41:	jns    0x424a81
  424a43:	adc    al,0xab
  424a45:	add    eax,0x44839404
  424a4b:	and    al,0xe0
  424a4d:	dec    esi
  424a4e:	not    ebx
  424a50:	cmp    esi,eax
  424a52:	pop    es
  424a53:	xchg   ebp,eax
  424a54:	je     0x424aaf
  424a56:	cli    
  424a57:	xor    esp,eax
  424a59:	add    al,0x74
  424a5c:	stos   BYTE PTR es:[edi],al
  424a5d:	outs   dx,DWORD PTR ds:[esi]
  424a5e:	outs   dx,BYTE PTR ds:[esi]
  424a5f:	adc    al,0xf
  424a61:	test   eax,0xe9874f6
  424a66:	sbb    edi,0xffffffdc
  424a69:	pop    esp
  424a6a:	std    
  424a6b:	inc    ebx
  424a6d:	jnp    0x424a6d
  424a6f:	dec    BYTE PTR [eax]
  424a71:	retf   0x8907
  424a74:	cmp    dl,cl
  424a76:	jnp    0xb9be77c
  424a7c:	mov    ecx,ebx
  424a7e:	mov    edi,0xabb0fae7
  424a83:	adc    BYTE PTR [eax-0x63],al
  424a86:	push   ds
  424a87:	les    esi,FWORD PTR [esi+eiz*4-0x75]
  424a8b:	add    BYTE PTR [ecx+edi*2-0x31],0x4f
  424a90:	call   0xfbf6f76f
  424a95:	ret    0x73e9
  424a98:	add    DWORD PTR [esi+0x24],esi
  424a9b:	call   0x6cec:0x88eede5d
  424aa2:	or     al,0x83
  424aa4:	inc    ebp
  424aa5:	add    DWORD PTR [ebx+eax*4],ecx
  424aa8:	pop    ecx
  424aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aaa:	ret    
  424aab:	ins    DWORD PTR es:[edi],dx
  424aac:	int    0xf2
  424aae:	pop    eax
  424aaf:	mov    BYTE PTR [ebp-0x67],cl
  424ab2:	xor    bh,dh
  424ab4:	push   esi
  424ab5:	sbb    BYTE PTR [edx+ebp*1+0x4],bl
  424ab9:	(bad)  
  424aba:	pop    ebx
  424abb:	test   al,0x16
  424abd:	push   ds
  424abe:	div    DWORD PTR [edi-0x7f4aacff]
  424ac4:	jge    0x424a5b
  424ac6:	ins    DWORD PTR es:[edi],dx
  424ac7:	xor    BYTE PTR [esi+ebp*2],al
  424aca:	pop    ebx
  424acb:	test   al,0xff
  424acd:	outs   dx,DWORD PTR ds:[esi]
  424ace:	pop    ebx
  424acf:	aas    
  424ad0:	xchg   DWORD PTR [eax-0x55],ebx
  424ad3:	xchg   DWORD PTR [ecx],eax
  424ad5:	in     eax,dx
  424ad6:	call   0x874a:0x9ba9bec6
  424add:	add    BYTE PTR [ecx+0x1ef89b1c],al
  424ae3:	dec    edi
  424ae4:	add    ecx,DWORD PTR [edi-0x15]
  424ae7:	xor    al,0xae
  424ae9:	push   ebx
  424aea:	sub    BYTE PTR [ecx+0x249d6607],dl
  424af0:	ror    BYTE PTR [ecx+0x1bcd02f1],0x75
  424af7:	fild   QWORD PTR ds:0x297e56b4
  424afd:	das    
  424afe:	fldcw  WORD PTR [ecx+0x2d23ff96]
  424b04:	cmc    
  424b05:	mov    ah,0x72
  424b07:	call   0xc36d:0x29d2faf
  424b0e:	test   eax,0x99305e13
  424b13:	call   0x48a3:0x29d38ec
  424b1a:	rcl    DWORD PTR ds:0x2edd87e8,0xe4
  424b21:	leave  
  424b22:	popa   
  424b23:	(bad)  
  424b25:	add    ebx,DWORD PTR [edx]
  424b27:	inc    ebp
  424b28:	in     eax,dx
  424b29:	xchg   BYTE PTR [ebp-0x26],dh
  424b2c:	call   0x553b35af
  424b31:	les    ecx,FWORD PTR [ebp-0x66]
  424b34:	add    eax,eax
  424b36:	out    0xa8,al
  424b38:	imul   esi,DWORD PTR [eax],0x38e91581
  424b3e:	mov    al,ds:0xe8157d
  424b43:	scas   al,BYTE PTR es:[edi]
  424b44:	test   DWORD PTR [ebx+0x7c9a6f0c],ebp
  424b4a:	into   
  424b4b:	mov    bh,0xa8
  424b4d:	pop    esi
  424b4e:	dec    ecx
  424b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b50:	call   0x51c2:0xa8a692bd
  424b57:	in     eax,dx
  424b58:	add    bh,BYTE PTR [esi+0x2746807e]
  424b5e:	or     BYTE PTR [ebp-0x5eba6d09],bl
  424b64:	push   edx
  424b65:	push   ecx
  424b66:	ficom  DWORD PTR [eax-0x58]
  424b69:	cmp    bh,BYTE PTR [edi-0x17]
  424b6c:	fdivp  st(7),st
  424b6e:	loopne 0x424b61
  424b70:	add    DWORD PTR [edi-0x3e037d5b],eax
  424b76:	jmp    0xe1022314
  424b7b:	mov    eax,ds:0x5b2994fb
  424b80:	idiv   edi
  424b82:	popa   
  424b83:	aad    0xde
  424b85:	add    edx,DWORD PTR [ecx]
  424b87:	push   es
  424b88:	(bad)  
  424b89:	sti    
  424b8a:	(bad)  
  424b8b:	scas   al,BYTE PTR es:[edi]
  424b8c:	add    DWORD PTR [esi-0x4e046113],edi
  424b92:	test   al,0xa2
  424b94:	daa    
  424b95:	call   0x4838b683
  424b9a:	push   ebp
  424b9b:	mov    ds:0x86aabfd7,al
  424ba0:	push   cs
  424ba1:	mov    esi,0xb867b6b9
  424ba6:	fiadd  DWORD PTR [eax]
  424ba8:	fcom   st(2)
  424baa:	js     0x424b56
  424bac:	push   ebp
  424bad:	jg     0x424b9b
  424baf:	push   0x3a
  424bb1:	stos   DWORD PTR es:[edi],eax
  424bb2:	cmp    DWORD PTR [ebp-0x170000ee],0x7253544b
  424bbc:	or     esp,edi
  424bbe:	mov    cl,0x2e
  424bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bc1:	daa    
  424bc2:	call   0x246895b0
  424bc7:	loope  0x424b53
  424bc9:	or     eax,0xc4d8f448
  424bce:	inc    esp
  424bcf:	int    0xb2
  424bd1:	or     DWORD PTR [eax],eax
  424bd3:	jmp    0xd870f76
  424bd8:	test   edx,esi
  424bda:	je     0x424bc5
  424bdc:	sahf   
  424bdd:	lahf   
  424bde:	adc    BYTE PTR [esi],ch
  424be0:	fcmovu st,st(6)
  424be2:	or     esi,ebp
  424be4:	sahf   
  424be5:	add    al,BYTE PTR [eax]
  424be7:	add    BYTE PTR [ebx+0x6414243f],dh
  424bed:	test   DWORD PTR [eax],eax
  424bef:	add    bl,al
  424bf1:	aas    
  424bf2:	and    al,0x10
  424bf4:	jle    0x424bf9
  424bf6:	add    BYTE PTR [eax],al
  424bf8:	out    dx,eax
  424bf9:	aas    
  424bfa:	and    al,0xc
  424bfc:	sub    eax,0x44ea60c3
  424c01:	add    ecx,DWORD PTR [ecx-0x7d589fbc]
  424c07:	inc    esp
  424c08:	push   eax
  424c09:	adc    ebp,DWORD PTR [ecx-0x40]
  424c0c:	add    BYTE PTR [eax*4+0x3fbd0000],ah
  424c13:	and    al,0x10
  424c15:	out    0xc2,eax
  424c17:	lea    esi,[eax+edx*4-0x6a]
  424c1b:	jecxz  0x424c40
  424c1d:	xor    esi,DWORD PTR [edi+esi*8-0x1]
  424c21:	jo     0x424bbd
  424c23:	psubsw mm1,QWORD PTR [ebx]
  424c26:	add    al,0x0
  424c28:	add    BYTE PTR [ecx-0x6bebdbc6],cl
  424c2e:	xchg   BYTE PTR [esi-0x7a8ed4e4],bl
  424c34:	shl    BYTE PTR [eax-0x3517b459],0xe0
  424c3b:	cmc    
  424c3c:	inc    DWORD PTR [edi-0xe]
  424c3f:	and    edx,DWORD PTR [esp+eax*8]
  424c42:	out    dx,eax
  424c43:	add    DWORD PTR [eax-0x467b4],edi
  424c49:	sub    eax,0xc40000ab
  424c4e:	xor    BYTE PTR [edi+0x4],0xc4
  424c52:	add    DWORD PTR [ebp+0x2b49e],eax
  424c58:	lea    edi,[eax-0x20cd9c62]
  424c5e:	xchg   BYTE PTR [ebx-0x4eb36235],dl
  424c64:	das    
  424c65:	xchg   ebx,eax
  424c66:	outs   dx,BYTE PTR ds:[esi]
  424c67:	jl     0x424c2c
  424c69:	jne    0x424bef
  424c6b:	mov    bh,0xfb
  424c6d:	jp     0x424c8f
  424c6f:	les    esi,FWORD PTR [eax+eax*1-0x6b]
  424c73:	and    BYTE PTR [eax+0x24],cl
  424c76:	icebp  
  424c77:	mov    dl,0x2f
  424c79:	sub    BYTE PTR [edx+0x7684c524],dl
  424c7f:	xchg   ebp,eax
  424c80:	xchg   ebx,eax
  424c81:	shl    BYTE PTR [edx+0x3550c445],0xea
  424c88:	mov    ecx,0x7a8642fb
  424c8d:	jl     0x424c10
  424c8f:	ja     0x424c28
  424c91:	enter  0xad67,0xb0
  424c95:	test   BYTE PTR [esi+0x2f],al
  424c98:	test   BYTE PTR [esi-0x17000827],0x4e
  424c9f:	pushf  
  424ca0:	(bad)  
  424ca1:	jmp    DWORD PTR [eax]
  424ca3:	nop
  424ca4:	jecxz  0x424c2d
  424ca6:	lahf   
  424ca7:	fwait
  424ca8:	inc    edx
  424caa:	sbb    eax,edi
  424cac:	cmp    esi,0xfffffffa
  424caf:	fwait
  424cb0:	stos   DWORD PTR es:[edi],eax
  424cb1:	xchg   BYTE PTR [ebp-0x65],bl
  424cb4:	xchg   edi,eax
  424cb5:	inc    ebx
  424cb6:	(bad)  
  424cb7:	push   esp
  424cb8:	mov    al,0xfb
  424cba:	test   al,0x5f
  424cbc:	jne    0x424cfd
  424cbe:	popf   
  424cbf:	push   ss
  424cc0:	and    DWORD PTR [ecx+ebx*1],0xffffff9a
  424cc4:	(bad)  
  424cc5:	call   DWORD PTR [eax+eiz*8]
  424cc8:	out    0x37,eax
  424cca:	imul   ebp,DWORD PTR [esi],0x43
  424ccd:	and    al,0x5d
  424ccf:	in     al,0x9a
  424cd1:	mov    DWORD PTR [ebp-0x65],ebx
  424cd4:	dec    edi
  424cd5:	lea    eax,[eax]
  424cd7:	xor    DWORD PTR [edi+0x22188ef],edi
  424cdd:	or     eax,0x311482f4
  424ce2:	mov    al,0x96
  424ce4:	jnp    0x424cbb
  424ce6:	out    0xbe,eax
  424ce8:	sbb    cl,ch
  424cea:	jle    0x424d2d
  424cec:	fidiv  WORD PTR [ebp+eax*1-0x63]
  424cf0:	add    ch,BYTE PTR [edi-0x35]
  424cf3:	test   DWORD PTR ds:0x9966b01f,ebx
  424cf9:	cwde   
  424cfa:	mov    al,0x88
  424cfc:	div    ch
  424cfe:	inc    ebx
  424cff:	popf   
  424d00:	jns    0x424cac
  424d02:	sti    
  424d03:	sbb    DWORD PTR [ebx-0x2ddc0063],edi
  424d09:	mov    esi,0xe9a81cd2
  424d0e:	dec    edi
  424d0f:	jg     0x424d10
  424d11:	jb     0x424d17
  424d13:	and    al,0x3d
  424d15:	loope  0x424cc7
  424d17:	jo     0x424cbf
  424d19:	aaa    
  424d1a:	inc    esp
  424d1b:	popf   
  424d1c:	ja     0x424d4b
  424d1e:	call   0xe867c8dd
  424d23:	retf   0xe818
  424d26:	and    BYTE PTR [ecx-0x22],0x28
  424d2a:	push   esp
  424d2b:	adc    BYTE PTR [esi],ch
  424d2d:	or     eax,0x53ddff4
  424d32:	fcomp  QWORD PTR [esi-0x20fbd687]
  424d38:	cmp    eax,0xe200e005
  424d3d:	mov    ebx,0x968ae82d
  424d42:	jo     0x424d88
  424d44:	popf   
  424d45:	call   0xcc5f:0xa4c6bbe0
  424d4c:	sbb    bh,BYTE PTR [esi]
  424d4e:	int    0xff
  424d50:	push   ds
  424d51:	leave  
  424d52:	hlt    
  424d53:	pop    es
  424d54:	sbb    bh,BYTE PTR [esi]
  424d56:	add    ch,cl
  424d58:	mov    ?,WORD PTR [ebp+0x7c]
  424d5b:	lds    edx,FWORD PTR [esi+0x4d1cfb52]
  424d61:	push   ebp
  424d62:	aas    
  424d63:	jmp    0xfa525bab
  424d68:	fiadd  WORD PTR [edx]
  424d6a:	cmp    eax,0x299eb
  424d6f:	mul    BYTE PTR [edx]
  424d71:	ins    DWORD PTR es:[edi],dx
  424d72:	cli    
  424d73:	ds inc edx
  424d75:	jbe    0x424dbb
  424d77:	or     eax,0xd4fb52d1
  424d7c:	push   es
  424d7d:	cmc    
  424d7e:	aas    
  424d7f:	jmp    0x7299966f
  424d84:	add    al,0x46
  424d86:	mov    edi,0x5196c7bc
  424d8b:	mov    eax,0xe9f81e1f
  424d90:	rcl    ebx,cl
  424d92:	cli    
  424d93:	shr    BYTE PTR [ebp-0x6],0x73
  424d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d98:	sar    BYTE PTR [ebx+0x35],1
  424d9b:	adc    DWORD PTR [esi+0x740042],ecx
  424da1:	gs stos BYTE PTR es:[edi],al
  424da3:	push   eax
  424da4:	ss sbb al,0x3e
  424da7:	cld    
  424da8:	cmp    DWORD PTR [edi+0x154faa4],esp
  424dae:	test   eax,0x2dde6cd2
  424db3:	cs jb  0x424e1b
  424db6:	stos   BYTE PTR es:[edi],al
  424db7:	test   DWORD PTR [ecx-0x5681244e],ebp
  424dbd:	pushf  
  424dbe:	cs and al,0x91
  424dc1:	test   BYTE PTR [esi],dl
  424dc3:	cli    
  424dc4:	sahf   
  424dc5:	push   edi
  424dc6:	stos   BYTE PTR es:[edi],al
  424dc7:	test   DWORD PTR [esi+0x248d0b92],edx
  424dcd:	shl    DWORD PTR [ebx],0xfb
  424dd0:	add    BYTE PTR [ecx-0x3995b0a9],bh
  424dd6:	push   esp
  424dd7:	jne    0x424de1
  424dd9:	xor    ecx,ebp
  424ddb:	test   eax,eax
  424ddd:	test   eax,0x12e84ea7
  424de2:	add    al,0xf6
  424de4:	push   DWORD PTR [edi-0x4474a9ad]
  424dea:	xor    al,0xc9
  424dec:	ret    0xff78
  424def:	dec    edx
  424df0:	push   edi
  424df1:	jecxz  0x424dde
  424df3:	and    ecx,DWORD PTR [esi+esi*2]
  424df6:	mov    eax,0x54b38de8
  424dfb:	test   DWORD PTR [ebx+0x74f77aac],0x74f74d6f
  424e05:	add    BYTE PTR [eax+0xb],bl
  424e08:	call   0xf797018a
  424e0d:	mov    esp,DWORD PTR [edx+edi*2+0x4d5874ee]
  424e14:	dec    edi
  424e15:	dec    DWORD PTR [ecx+0x2f]
  424e18:	or     al,BYTE PTR [eax+0x34]
  424e1b:	jp     0x424ddd
  424e1d:	jne    0x424e55
  424e1f:	push   ebp
  424e20:	mov    ebx,0x6be2ec56
  424e25:	(bad)  
  424e26:	repz dec esp
  424e28:	call   0xf796ae74
  424e2d:	pop    esi
  424e2e:	mov    bl,0x28
  424e30:	mov    ebx,0xfba6465b
  424e35:	(bad)  
  424e36:	test   al,0x9a
  424e38:	(bad)  
  424e39:	dec    cl
  424e3b:	repnz adc al,0x40
  424e3e:	hlt    
  424e3f:	dec    esi
  424e40:	call   0xf79751f0
  424e45:	test   BYTE PTR [ebx+ebp*8],al
  424e48:	add    eax,0xe8059dff
  424e4d:	add    eax,edx
  424e4f:	lods   eax,DWORD PTR ds:[esi]
  424e50:	unpckhps xmm3,XMMWORD PTR [ebp-0x67]
  424e54:	add    al,0x29
  424e57:	cwde   
  424e58:	lock mov edi,0x8575d
  424e5e:	dec    eax
  424e5f:	and    BYTE PTR [eax+0x50f8897f],ah
  424e65:	push   edx
  424e66:	into   
  424e67:	inc    esp
  424e68:	push   ebp
  424e69:	lea    eax,[eax]
  424e6b:	adc    BYTE PTR [eax+0x6c],dl
  424e6e:	xchg   ebx,eax
  424e6f:	popf   
  424e70:	stos   DWORD PTR es:[edi],eax
  424e71:	inc    DWORD PTR [edi+0x329c48d8]
  424e77:	pop    esi
  424e78:	loope  0x424e26
  424e7a:	mov    ebx,0xfffab9d
  424e7f:	retf   0x787c
  424e82:	ret    0xe8ed
  424e85:	adc    al,BYTE PTR [ecx+ebp*4+0x6b]
  424e89:	dec    DWORD PTR [eax-0x41170c20]
  424e8f:	enter  0x5098,0x53
  424e93:	into   
  424e94:	adc    al,0xc2
  424e96:	push   eax
  424e97:	xor    dh,BYTE PTR [edi-0x5422eaf9]
  424e9d:	jbe    0x424ee4
  424e9f:	and    eax,0x210bc055
  424ea4:	xchg   ecx,eax
  424ea5:	(bad)  
  424ea6:	call   FWORD PTR [ebp-0x4fe3ed40]
  424eac:	jmp    0x424eb1
  424eae:	sti    
  424eaf:	mov    BYTE PTR [ebx-0x4c0eba8a],dh
  424eb5:	sub    eax,0x8360f2fb
  424eba:	rcr    BYTE PTR [edx-0x62ff7dd1],0xab
  424ec1:	js     0x424f08
  424ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ec4:	add    dh,BYTE PTR [eax+0x46]
  424ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ec8:	frstor [ebp+0x2c8f9b36]
  424ece:	fadd   DWORD PTR [eax]
  424ed0:	adc    al,0x48
  424ed2:	loope  0x424f4c
  424ed4:	lods   eax,DWORD PTR ds:[esi]
  424ed5:	pop    edx
  424ed6:	popa   
  424ed7:	add    ebx,DWORD PTR [ebp-0x142f6efe]
  424edd:	mov    eax,ds:0x35525472
  424ee2:	push   0x36
  424ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ee5:	mov    eax,ds:0x42aefffc
  424eea:	jmp    0x561fdc67
  424eef:	ss test eax,0xea50b235
  424ef5:	xor    eax,0xa1a53642
  424efa:	aam    0xff
  424efc:	xchg   ecx,eax
  424efd:	inc    edx
  424efe:	jmp    0x361fbc7b
  424f03:	aaa    
  424f04:	(bad)  
  424f05:	mov    eax,ds:0x42ac4ffc
  424f0a:	jmp    0xf5399562
  424f0f:	pop    ss
  424f10:	fld    QWORD PTR [edx]
  424f12:	mov    bl,0x53
  424f14:	inc    ebp
  424f15:	mov    ebp,0x8636ac03
  424f1a:	sub    DWORD PTR [esi],esi
  424f1c:	xchg   edi,eax
  424f1d:	cmp    dl,dh
  424f1f:	adc    eax,0x3a8f779
  424f24:	and    eax,0xdd81e23f
  424f29:	adc    eax,0xa160c1e5
  424f2e:	call   0x9395584
  424f33:	adc    DWORD PTR [eax],eax
  424f35:	pop    ebp
  424f36:	add    al,BYTE PTR [ecx]
  424f38:	dec    ecx
  424f39:	not    BYTE PTR [esi]
  424f3b:	in     al,dx
  424f3c:	in     al,dx
  424f3d:	dec    ecx
  424f3e:	xchg   esi,eax
  424f3f:	add    BYTE PTR ds:0xb5759be1,bh
  424f45:	cmp    DWORD PTR [ebx-0x62f95906],edx
  424f4b:	jne    0x424eee
  424f4d:	div    dh
  424f4f:	adc    edi,esp
  424f51:	pop    esi
  424f52:	add    al,BYTE PTR [esi+0x5a3d0624]
  424f58:	and    dh,al
  424f5a:	pop    edi
  424f5b:	add    al,0xe9
  424f5d:	not    DWORD PTR ds:0x9606ed24
  424f63:	outs   dx,WORD PTR ds:[esi]
  424f65:	inc    esi
  424f66:	pusha  
  424f67:	sti    
  424f68:	fnsave [edx+0x4]
  424f6b:	call   0xfbdefb63
  424f70:	sub    ch,ah
  424f72:	xchg   esp,ebp
  424f74:	mov    eax,0x9a0c45fb
  424f79:	int3   
  424f7a:	xor    esp,DWORD PTR [esi-0x16]
  424f7d:	(bad)  
  424f7f:	mov    esi,0x7403016a
  424f84:	call   DWORD PTR [esi-0x7d4ee1ea]
  424f8a:	hlt    
  424f8b:	xchg   BYTE PTR [esi+ebp*4-0x3d193f7b],ah
  424f92:	add    al,BYTE PTR [ecx]
  424f94:	jmp    0x9e431337
  424f99:	add    BYTE PTR [esi-0x13effffe],bl
  424f9f:	add    al,BYTE PTR [eax]
  424fa1:	jmp    0xea3e9605
  424fa6:	sahf   
  424fa7:	add    al,al
  424fa9:	shr    BYTE PTR [esi-0x6122ba3d],cl
  424faf:	add    al,BYTE PTR [eax]
  424fb1:	sub    DWORD PTR [edx],esp
  424fb3:	add    al,0xc3
  424fb5:	and    al,0x45
  424fb7:	add    eax,DWORD PTR [eax]
  424fb9:	add    BYTE PTR [esp+eax*4],al
  424fbc:	add    DWORD PTR [ebp-0x8],0x2d
  424fc0:	add    BYTE PTR [edi],al
  424fc2:	hlt    
  424fc3:	add    ebx,DWORD PTR [ebx]
  424fc5:	ret    0x34d
  424fc8:	add    al,0x0
  424fca:	les    esi,FWORD PTR [eax-0x101f8040]
  424fd0:	cs test esp,esi
  424fd3:	out    dx,eax
  424fd4:	sub    bh,BYTE PTR ds:0x6c4
  424fda:	mov    al,0xf5
  424fdc:	cmp    al,0x0
  424fde:	mov    dh,0x3
  424fe0:	add    BYTE PTR [ebx+ebp*8-0x56],dh
  424fe4:	sti    
  424fe5:	add    al,BYTE PTR [ebx+eax*1+0x56ea375]
  424fec:	jecxz  0x424ff0
  424fee:	outs   dx,BYTE PTR ds:[esi]
  424fef:	lahf   
  424ff0:	push   edx
  424ff1:	jmp    0x424f74
  424ff3:	stos   BYTE PTR es:[edi],al
  424ff4:	sti    
  424ff5:	add    al,0x84
  424ff7:	add    esi,DWORD PTR [ebx+ecx*1-0x67]
  424ffb:	push   es
  424ffc:	(bad)  
  424ffd:	inc    DWORD PTR [eax]
  424fff:	je     0x424ff0
  425001:	and    BYTE PTR [ebx],bh
  425003:	mov    dh,0xd2
  425005:	xchg   DWORD PTR [ebx],esi
  425007:	scas   eax,DWORD PTR es:[edi]
  425008:	dec    eax
  425009:	bound  ecx,QWORD PTR [eax]
  42500b:	pop    ebx
  42500c:	xor    al,0xe8
  42500e:	dec    ebx
  42500f:	cs imul esi,edi,0xee82a48b
  425016:	jne    0x425073
  425018:	and    BYTE PTR [ebp+0x10],al
  42501b:	rol    ebx,0x74
  42501e:	jp     0x424fcd
  425020:	stos   DWORD PTR es:[edi],eax
  425021:	loop   0x425099
  425023:	push   ds
  425024:	add    ah,bl
  425026:	retf   0x9f1e
  425029:	jecxz  0x42505a
  42502b:	outs   dx,BYTE PTR ds:[esi]
  42502c:	ins    BYTE PTR es:[edi],dx
  42502d:	test   DWORD PTR [ebp-0x7cfb2dcc],0xe7a8a19d
  425037:	lahf   
  425038:	cld    
  425039:	ret    
  42503a:	xchg   DWORD PTR [eax-0x6b],esp
  42503d:	mov    esi,0x9f299ee9
  425042:	add    DWORD PTR [edi+ebp*4],edx
  425045:	ja     0x425091
  425047:	mov    eax,ds:0xa675c426
  42504c:	adc    al,0x3b
  42504e:	adc    BYTE PTR [eax],ah
  425050:	imul   esi,DWORD PTR [eax],0x9cb11441
  425056:	cmp    eax,0x42945
  42505b:	popf   
  42505c:	cld    
  42505d:	sbb    edi,edi
  42505f:	stos   DWORD PTR es:[edi],eax
  425060:	xchg   ebp,eax
  425061:	mov    ds:0xa12800fb,eax
  425066:	xchg   edi,eax
  425067:	push   ss
  425068:	outs   dx,DWORD PTR ds:[esi]
  425069:	cs test eax,0xfbc05d84
  42506f:	xchg   BYTE PTR [ebx+0x31],ah
  425072:	fld    QWORD PTR [esi-0x4856400]
  425078:	icebp  
  425079:	mov    ds:0xba9515a8,eax
  42507e:	aas    
  42507f:	add    BYTE PTR [eiz*4-0x2ae7c584],dl
  425086:	das    
  425087:	or     eax,0xdf9be526
  42508c:	ins    BYTE PTR es:[edi],dx
  42508d:	out    0xa8,al
  42508f:	push   ebx
  425090:	xor    eax,0x42fa16f2
  425095:	pop    esi
  425096:	xchg   edi,eax
  425097:	in     al,0xc4
  425099:	or     eax,0x5657fa9
  42509e:	dec    ecx
  42509f:	pop    edx
  4250a0:	(bad)  
  4250a1:	rol    cl,cl
  4250a3:	or     al,0x9d
  4250a5:	les    esi,FWORD PTR cs:[edx+ebx*8+0x28]
  4250aa:	lods   al,BYTE PTR ds:[esi]
  4250ab:	sti    
  4250ac:	mov    DWORD PTR [edx],eax
  4250ae:	pop    ds
  4250af:	test   DWORD PTR [ecx-0x76fc1b1a],ecx
  4250b5:	shl    DWORD PTR [ebp+0x27],1
  4250b8:	ror    DWORD PTR [edx],0xe9
  4250bb:	jl     0x42505a
  4250bd:	pop    ds
  4250be:	out    dx,eax
  4250bf:	sbb    eax,0xdfd49d4e
  4250c4:	nop
  4250c5:	inc    edx
  4250c6:	jmp    0x9ded5167
  4250cb:	xor    eax,0x1d9d9ae0
  4250d0:	loopne 0x425074
  4250d2:	xor    dl,BYTE PTR [ecx-0x6d632c7a]
  4250d8:	jle    0x4250b7
  4250da:	sbb    ebp,esi
  4250dc:	jle    0x42508d
  4250de:	push   ss
  4250df:	(bad)  [eax+0x43d7fa90]
  4250e5:	popf   
  4250e6:	mov    ebp,ebx
  4250e8:	pushf  
  4250e9:	mov    ds:0x9f2f7387,eax
  4250ee:	(bad)
  4250f1:	popf   
  4250f2:	add    ch,cl
  4250f4:	test   BYTE PTR [ebp-0x63],dl
  4250f7:	daa    
  4250f8:	sti    
  4250f9:	jp     0x425131
  4250fb:	pop    esi
  4250fc:	xchg   edi,eax
  4250fd:	loop   0x425133
  4250ff:	outs   dx,BYTE PTR ds:[esi]
  425100:	mov    bl,0xba
  425102:	mov    ecx,0x49e9b4fe
  425107:	test   ax,0x1656
  42510b:	mov    ds:0x9d0af1ea,eax
  425110:	inc    edx
  425111:	test   DWORD PTR [eiz*8-0x147665d1],edi
  425118:	sbb    eax,0x9bb6303b
  42511d:	push   0x22a803b0
  425122:	aam    0x95
  425124:	jbe    0x4250fe
  425126:	or     al,BYTE PTR [eax]
  425128:	cdq    
  425129:	ins    DWORD PTR es:[edi],dx
  42512a:	cdq    
  42512b:	jne    0x42510e
  42512d:	add    BYTE PTR [ebp-0x30],al
  425130:	cli    
  425131:	cld    
  425132:	add    cl,BYTE PTR [edi]
  425134:	inc    eax
  425135:	jmp    0xecb71357
  42513a:	or     DWORD PTR [esi],ebx
  42513c:	or     BYTE PTR [ebp-0x78],dl
  42513f:	test   DWORD PTR [ebp-0xb],esi
  425142:	imul   DWORD PTR [ebx-0x8c41d8c]
  425148:	pop    ss
  425149:	fcomp  DWORD PTR [esi+0x2]
  42514c:	mov    edi,esp
  42514e:	aaa    
  42514f:	xrelease xchg BYTE PTR [esi+0x2486f226],ch
  425156:	(bad)
  425159:	sbb    eax,0x3600bfbb
  42515e:	cdq    
  42515f:	add    al,BYTE PTR [eax]
  425161:	push   0xffffffe9
  425163:	cwde   
  425164:	pop    edx
  425165:	and    dl,BYTE PTR [esp+ebx*2+0x8]
  425169:	jmp    0x192ed55b
  42516e:	call   0x1c9ad8a3
  425173:	xchg   ecx,eax
  425174:	je     0x425124
  425176:	pop    ds
  425177:	cdq    
  425178:	sti    
  425179:	fnsave [ebx+ebx*1-0xd3d1618]
  425180:	inc    edi
  425181:	mov    ebp,0xfe754466
  425186:	test   BYTE PTR [ebx+edx*2-0x4012a5be],bl
  42518d:	test   eax,0x292e9d37
  425192:	add    cl,dh
  425194:	add    DWORD PTR [ebp-0xf],0x11
  425198:	dec    ebp
  425199:	push   eax
  42519a:	bound  edi,QWORD PTR [ebx]
  42519c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42519d:	mov    eax,0x8497fb38
  4251a2:	add    BYTE PTR [edx+edx*8+0xa],dh
  4251a6:	(bad)  
  4251a7:	jmp    0xd0fe:0x9cf8751a
  4251ae:	inc    BYTE PTR [ebx]
  4251b0:	sbb    al,0xc0
  4251b2:	je     0x4251ad
  4251b4:	sbb    BYTE PTR [ebp-0x8],al
  4251b7:	out    dx,eax
  4251b8:	or     BYTE PTR [ebp-0x90da701],al
  4251be:	adc    eax,0x3ff6ec
  4251c3:	ins    DWORD PTR es:[edi],dx
  4251c4:	pushf  
  4251c5:	loop   0x4251d1
  4251c7:	jns    0x42522d
  4251c9:	je     0x4251d1
  4251cb:	or     ebx,DWORD PTR [ebp-0x3bffb2]
  4251d1:	jp     0x42519b
  4251d3:	add    eax,DWORD PTR [esi-0x37]
  4251d6:	ret    0xffb8
  4251d9:	test   dh,dh
  4251db:	cwde   
  4251dc:	lahf   
  4251dd:	jp     0x4251dd
  4251df:	and    ebp,esp
  4251e1:	adc    eax,0x84a52f57
  4251e6:	jmp    FWORD PTR [eax+0x1cc7829a]
  4251ec:	pop    ss
  4251ed:	sar    dh,1
  4251ef:	add    ecx,DWORD PTR [ebp-0x18]
  4251f2:	(bad)  
  4251f3:	ins    BYTE PTR es:[edi],dx
  4251f4:	not    DWORD PTR gs:[esi+0x0]
  4251f8:	in     al,dx
  4251f9:	push   ds
  4251fa:	push   0xbb90d3fe
  4251ff:	pop    edi
  425200:	mov    DWORD PTR [edx+0x5c7a74c0],0xff745700
  42520a:	inc    DWORD PTR [edx+0x55bb647c]
  425210:	mov    edi,0x4cec8173
  425215:	add    DWORD PTR [eax],eax
  425217:	add    BYTE PTR [ebx],cl
  425219:	sbb    BYTE PTR [ebp+0x18],bh
  42521c:	popf   
  42521d:	es cmp al,0x30
  425221:	or     al,0xa2
  425223:	push   eax
  425224:	push   ss
  425225:	outs   dx,BYTE PTR ds:[esi]
  425226:	mul    edi
  425228:	jae    0x4251d1
  42522a:	(bad)  
  42522b:	(bad)  
  42522c:	jp     0x42525b
  42522e:	mov    edi,0x2baca974
  425233:	adc    al,0x18
  425235:	lods   al,BYTE PTR cs:[esi]
  425237:	std    
  425238:	add    bh,BYTE PTR [ebp+eiz*4-0x6426568b]
  42523f:	aaa    
  425240:	lock retf 
  425242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425243:	leave  
  425244:	fimul  WORD PTR [edi]
  425246:	cmp    edx,DWORD PTR [eax+ebx*1]
  425249:	imul   esi,DWORD PTR [eax],0x4ca8e202
  42524f:	add    BYTE PTR [ebp-0x35377f57],bl
  425255:	push   ecx
  425256:	rol    DWORD PTR [edi+0x51fbc559],0x0
  42525d:	mov    edx,0x260fdffc
  425262:	cmc    
  425263:	fist   WORD PTR [edi]
  425265:	stos   BYTE PTR es:[edi],al
  425266:	pushf  
  425267:	fisttp DWORD PTR [edi]
  425269:	mov    ch,0xe8
  42526b:	mov    eax,ds:0xc0f29afb
  425270:	xchg   ecx,ebx
  425272:	mov    edi,0xb88a52fb
  425277:	fist   DWORD PTR [ebx]
  425279:	push   ss
  42527a:	mov    eax,0xb87a13db
  42527f:	fisttp DWORD PTR [edi]
  425281:	test   DWORD PTR [ebp+0x616afba5],esi
  425287:	rol    BYTE PTR [edi+0x51fbffd9],0x26
  42528e:	pop    eax
  42528f:	fild   DWORD PTR [edi]
  425291:	inc    ebp
  425292:	bound  esp,QWORD PTR [ebx+edi*8-0x3f3cfcb6]
  425299:	sbb    bh,BYTE PTR [edi]
  42529b:	(bad)
  42529e:	inc    edi
  42529f:	int    0xff
  4252a1:	iret   
  4252a2:	cdq    
  4252a3:	xchg   ebp,eax
  4252a4:	fist   WORD PTR [esi-0x75207a73]
  4252aa:	stos   BYTE PTR es:[edi],al
  4252ab:	sub    BYTE PTR [esi-0x3f6d65ea],ah
  4252b1:	push   0xf982fd8d
  4252b6:	or     ah,bh
  4252b8:	add    ebx,DWORD PTR [ebp-0x72d991cf]
  4252be:	xchg   DWORD PTR [ebx+ebp*4+0x0],ebp
  4252c2:	lock cdq 
  4252c4:	retf   0x2253
  4252c7:	inc    eax
  4252c8:	icebp  
  4252c9:	fwait
  4252ca:	push   ss
  4252cb:	add    al,0xe9
  4252cd:	add    esi,DWORD PTR [esi+0x7e]
  4252d0:	test   eax,0x6487a92f
  4252d5:	stos   DWORD PTR es:[edi],eax
  4252d6:	enter  0xa299,0x53
  4252da:	mov    ch,0x88
  4252dc:	mov    dh,0xa5
  4252de:	mov    dh,0x7e
  4252e0:	test   eax,0xa8d5992f
  4252e5:	mov    edx,0xa4b185ea
  4252ea:	aam    0xc5
  4252ec:	adc    al,0x79
  4252ee:	mov    DWORD PTR [ebx-0x666cec7b],eax
  4252f4:	jmp    0xcf744249
  4252f9:	add    BYTE PTR [eax],dl
  4252fb:	punpcklwd mm0,DWORD PTR [ebx+eax*1+0x24]
  425300:	mov    edi,0xabaad529
  425305:	adc    ebx,DWORD PTR [ebp-0x608534fe]
  42530b:	test   DWORD PTR [ebx],esp
  42530d:	add    esi,esp
  42530f:	sldt   WORD PTR [ebp+ecx*2+0x59]
  425314:	bound  esp,QWORD PTR [eax-0x75]
  425317:	pushf  
  425318:	xchg   DWORD PTR [esi+ebp*4-0x79952917],ebp
  42531f:	inc    BYTE PTR [eax]
  425321:	pushf  
  425322:	xor    eax,DWORD PTR [eax+0x500e170]
  425328:	cwde   
  425329:	jmp    FWORD PTR cs:[eax+0x3efcf07f]
  425330:	popf   
  425331:	push   eax
  425332:	add    ebp,ebp
  425334:	or     al,0x0
  425336:	jmp    0xe187daa9
  42533b:	leave  
  42533c:	add    edx,0x7
  42533f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425340:	add    al,BYTE PTR [eax]
  425342:	aas    
  425343:	ds out dx,eax
  425345:	jnp    0x42533f
  425347:	pop    esi
  425348:	add    al,BYTE PTR [ebp-0x72ed7a57]
  42534e:	xor    DWORD PTR fs:[edi-0x62764905],edx
  425355:	adc    eax,0xffd8d255
  42535a:	jno    0x42532d
  42535c:	xchg   BYTE PTR [ebp-0x4630367],al
  425362:	pusha  
  425363:	dec    esp
  425364:	repnz mov eax,ss:0x4872e85
  42536b:	lea    eax,[ecx-0x3bdc0e8b]
  425371:	cli    
  425372:	push   0x67
  425374:	cdq    
  425375:	jecxz  0x425386
  425377:	pop    ds
  425378:	popf   
  425379:	sti    
  42537a:	push   0x21
  42537c:	pushf  
  42537d:	je     0x42539e
  42537f:	mov    dl,0x47
  425381:	push   ebx
  425382:	mov    edi,0xf9759bae
  425387:	mov    bl,0x47
  425389:	sti    
  42538a:	add    BYTE PTR [eax],al
  42538c:	inc    ecx
  42538d:	hlt    
  42538e:	or     DWORD PTR [eax+0x44],eax
  425391:	mov    ecx,0xb79e7eba
  425396:	bnd jle 0x425403
  425399:	jae    0x4253a7
  42539b:	xor    BYTE PTR [edi+edx*8],bh
  42539e:	div    BYTE PTR [edx+eax*2-0x47]
  4253a2:	mov    esi,0x198c2e7d
  4253a7:	push   0x36
  4253a9:	in     al,dx
  4253aa:	or     ecx,DWORD PTR [ebx+0x75f703f4]
  4253b0:	or     al,0x65
  4253b2:	adc    eax,0x43f230
  4253b7:	xor    esi,DWORD PTR [edi+edi*2+0x67b40cc4]
  4253be:	cli    
  4253bf:	xor    al,BYTE PTR [ebp+eax*2+0x56]
  4253c3:	pop    ebx
  4253c4:	cmp    eax,0xb4c02bc1
  4253c9:	mov    edi,0x80c88b55
  4253ce:	in     al,dx
  4253cf:	cmp    al,0xb2
  4253d1:	fild   DWORD PTR [edx-0x9231783]
  4253d7:	jne    0x4253c5
  4253d9:	in     eax,0xff
  4253db:	imul   esi,DWORD PTR [esp+eiz*2-0x51f3f78b],0x890bfff9
  4253e6:	lock add DWORD PTR [eax],0xffffff90
  4253ea:	test   dh,dh
  4253ec:	mov    al,ds:0xfe7ad4
  4253f1:	sbb    esi,eax
  4253f3:	popa   
  4253f4:	mov    eax,DWORD PTR [edx-0x5a3bb28e]
  4253fa:	arpl   WORD PTR [eax],si
  4253fc:	inc    DWORD PTR [ecx-0x7bbff265]
  425402:	mov    al,al
  425404:	jne    0x4253a3
  425406:	sahf   
  425407:	mov    al,BYTE PTR [ebp-0x7b]
  42540a:	inc    ecx
  42540b:	mov    eax,0x824062fd
  425410:	enter  0x345a,0x4a
  425414:	(bad)  
  425415:	fcom   st(1)
  425417:	cs (bad) 
  425419:	loopne 0x42540c
  42541b:	cs sti 
  42541d:	test   al,0x25
  42541f:	hlt    
  425420:	aas    
  425421:	popf   
  425422:	push   ds
  425423:	mov    edi,0x17f08d74
  425428:	adc    BYTE PTR [eax],bl
  42542a:	pop    esi
  42542b:	xchg   edi,eax
  42542c:	sti    
  42542d:	test   al,0x8d
  42542f:	das    
  425430:	sti    
  425431:	mov    al,0x81
  425433:	hlt    
  425434:	aas    
  425435:	popf   
  425436:	and    al,0x48
  425438:	les    edx,FWORD PTR [esi]
  42543a:	jbe    0x42542f
  42543c:	jle    0x42543b
  42543e:	pop    es
  42543f:	mov    DWORD PTR es:[esp+ebp*1+0x369c0421],ebx
  425447:	add    eax,DWORD PTR [edi-0x1535e96]
  42544d:	scas   eax,DWORD PTR es:[edi]
  42544e:	rol    BYTE PTR [ebx+edi*2+0x812aab1],0x0
  425456:	mov    al,ds:0x9d000429
  42545b:	aas    
  42545c:	xchg   DWORD PTR [ecx],eax
  42545e:	push   ss
  42545f:	addr16 inc ecx
  425461:	pop    edx
  425462:	in     al,0x6b
  425464:	xor    eax,DWORD PTR [edi+0x8b029c1]
  42546a:	lahf   
  42546b:	test   eax,0x144b4eff
  425470:	ror    DWORD PTR [edi],cl
  425472:	lods   al,BYTE PTR ds:[esi]
  425473:	jmp    0x425478
  425475:	xchg   DWORD PTR [ebp+0x4],esi
  425478:	hlt    
  425479:	xchg   ch,bl
  42547b:	stos   DWORD PTR es:[edi],eax
  42547c:	xor    al,0xfb
  42547e:	imul   eax,DWORD PTR [ebx],0x6c
  425481:	(bad)  
  425482:	lock in al,dx
  425484:	ins    DWORD PTR es:[edi],dx
  425485:	dec    ecx
  425486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425487:	push   edx
  425489:	add    eax,0xa0b9029d
  42548e:	call   0xa339969d
  425493:	repz test al,0x3
  425496:	or     eax,0xb5403e04
  42549b:	out    dx,al
  42549c:	pop    ebp
  42549d:	inc    esp
  42549e:	popf   
  42549f:	xor    DWORD PTR [edx],esp
  4254a1:	mov    edx,0xb94c320
  4254a6:	sbb    bh,BYTE PTR [esi]
  4254a8:	loope  0x42542e
  4254aa:	pop    ebp
  4254ab:	in     eax,dx
  4254ac:	std    
  4254ad:	sar    DWORD PTR [ebx+0x220f9100],0x43
  4254b4:	jmp    0x65326aed
  4254b9:	cmc    
  4254ba:	add    dl,cl
  4254bc:	add    ah,BYTE PTR [esp+eax*8-0x78]
  4254c0:	into   
  4254c1:	push   eax
  4254c2:	or     BYTE PTR [edx+eax*1+0x13284e9],bl
  4254c9:	ss xor al,0x18
  4254cc:	push   eax
  4254cd:	rcr    DWORD PTR [esi-0x34996a1a],1
  4254d3:	(bad)  
  4254d4:	stos   BYTE PTR es:[edi],al
  4254d5:	call   0x6cd82c3d
  4254da:	ret    
  4254db:	inc    edi
  4254dc:	cli    
  4254dd:	pop    ebp
  4254de:	leave  
  4254df:	ins    DWORD PTR es:[edi],dx
  4254e0:	mov    DWORD PTR [edx],ebp
  4254e2:	or     al,0xa0
  4254e4:	fsubr  st(4),st
  4254e6:	add    ebx,DWORD PTR [ebp-0x6ae96dce]
  4254ec:	stos   BYTE PTR es:[edi],al
  4254ed:	cmc    
  4254ee:	inc    ecx
  4254ef:	popf   
  4254f0:	add    ch,BYTE PTR [ebx+eax*8+0x10]
  4254f4:	popa   
  4254f5:	mov    bh,0xc3
  4254f7:	idiv   DWORD PTR [ecx]
  4254f9:	add    BYTE PTR [eax+0x19fffe60],ah
  4254ff:	push   0xa2c739ac
  425504:	or     DWORD PTR [ebp+0x29e84],eax
  42550a:	shl    DWORD PTR [esi+0x7c],0x40
  42550e:	jmp    0xdb9a4450
  425513:	fiadd  WORD PTR [edx]
  425515:	mov    edi,esp
  425517:	jno    0x42556d
  425519:	or     ebp,DWORD PTR [ebp-0x32]
  42551c:	add    al,BYTE PTR [eax]
  42551e:	jmp    0x97ccb23
  425523:	jmp    0x1e4a71c6
  425528:	dec    ebx
  425529:	mov    ch,0xa7
  42552b:	stos   BYTE PTR es:[edi],al
  42552c:	sahf   
  42552d:	cdq    
  42552e:	adc    eax,0xffd529e5
  425533:	outs   dx,DWORD PTR ds:[esi]
  425534:	or     dh,BYTE PTR fs:[edi]
  425537:	sub    ch,BYTE PTR [edx-0x149dacda]
  42553d:	pop    eax
  42553e:	push   cs
  42553f:	test   eax,0x72302a9e
  425544:	popa   
  425545:	add    bh,bl
  425547:	pop    ss
  425548:	adc    dh,BYTE PTR [ecx+0x2a992787]
  42554e:	cmp    al,0x62
  425550:	pop    ecx
  425551:	add    cl,BYTE PTR [ecx+0x3299a528]
  425557:	mov    esi,0xe14a7d0a
  42555c:	jbe    0x4255a8
  42555e:	xchg   DWORD PTR [ecx],ebp
  425560:	cdq    
  425561:	mov    eax,DWORD PTR [ecx-0xf]
  425564:	sbb    edx,eax
  425566:	cli    
  425567:	mov    dh,0x26
  425569:	dec    eax
  42556a:	or     BYTE PTR [ecx],al
  42556c:	imul   edi,DWORD PTR [ebp+0x40],0xc4311e9
  425573:	add    BYTE PTR [ebx],ah
  425575:	lods   eax,DWORD PTR ds:[esi]
  425576:	not    bh
  425578:	cmovne ecx,DWORD PTR [eax]
  42557b:	mov    DWORD PTR [ebp+0x7c46828e],esi
  425581:	aad    0x38
  425583:	pop    eax
  425584:	add    BYTE PTR [eax+0x5c390eec],cl
  42558a:	or     BYTE PTR [edx+edx*1-0x73],dh
  42558e:	(bad)  
  42558f:	or     esi,DWORD PTR [ecx+eax*2-0x49]
  425593:	push   ebx
  425594:	adc    BYTE PTR [eax],bl
  425596:	or     BYTE PTR [ebx],ch
  425598:	rol    BYTE PTR [edi+eax*4],0x3e
  42559c:	add    al,0x2f
  42559e:	rcl    DWORD PTR [eax-0x18],0x86
  4255a2:	jmp    0xff07:0xd4adfff5
  4255a9:	dec    edx
  4255aa:	jne    0x4255c1
  4255ac:	pop    esp
  4255ad:	es inc eax
  4255af:	add    BYTE PTR [ecx+0x5bbbb232],cl
  4255b5:	mov    DWORD PTR [edi+0xb2b083e],0xfff4041e
  4255bf:	dec    edi
  4255c0:	mov    edi,0xfffffef8
  4255c5:	mov    ebx,0xf7181573
  4255ca:	aas    
  4255cb:	add    BYTE PTR [ebp+0x31fefb34],al
  4255d1:	xor    al,0x67
  4255d3:	clc    
  4255d4:	add    ah,al
  4255d6:	inc    DWORD PTR [edx+0x5488cc4e]
  4255dc:	and    al,0xbc
  4255de:	int3   
  4255df:	add    cl,0xd2
  4255e2:	add    DWORD PTR [eax],eax
  4255e4:	add    BYTE PTR [edi+edi*1],cl
  4255e7:	pushf  
  4255e8:	inc    BYTE PTR [eax]
  4255ea:	adc    ecx,DWORD PTR [ebx-0x78628a40]
  4255f0:	xchg   BYTE PTR [edx-0x6b],cl
  4255f3:	xor    DWORD PTR [edx-0x73036505],ebx
  4255f9:	or     ebp,0x16ffff9b
  4255ff:	fisttp DWORD PTR [ebx]
  425601:	mov    DWORD PTR [ecx*2+0x109d0005],ebx
  425608:	inc    ebp
  425609:	or     dh,cl
  42560b:	clc    
  42560c:	mov    dh,0x89
  42560e:	add    eax,0x9d0001f1
  425613:	and    BYTE PTR [ebp+0x8],al
  425616:	and    al,0x21
  425618:	fild   DWORD PTR [ecx]
  42561a:	popf   
  42561b:	test   eax,0x22954286
  425620:	ja     0x425662
  425622:	fwait
  425623:	test   eax,0x91e386ff
  425628:	ret    0xd980
  42562b:	fwait
  42562c:	(bad)  
  42562d:	call   FWORD PTR [ecx+ebp*4+0x5b16ffff]
  425634:	pop    es
  425635:	mov    DWORD PTR ds:0x9d000551,esi
  42563b:	adc    BYTE PTR [ebp+0x8],al
  42563e:	into   
  42563f:	loop   0x425665
  425641:	mov    DWORD PTR ds:0x9d000579,edx
  425647:	adc    BYTE PTR [edx+0x8],al
  42564a:	and    eax,0x22e81
  42564f:	popf   
  425650:	test   eax,0x41954288
  425655:	out    dx,al
  425656:	xchg   BYTE PTR [ebp-0x57],bl
  425659:	add    cl,BYTE PTR [esi-0x66]
  42565c:	test   eax,0xb5ca4fff
  425661:	or     edx,DWORD PTR [ecx]
  425663:	pop    ebp
  425664:	test   eax,0x2a54288
  425669:	sgdtd  [ebp-0xe]
  42566d:	ins    DWORD PTR es:[edi],dx
  42566e:	inc    esp
  42566f:	popf   
  425670:	std    
  425671:	ss or  al,0x9d
  425674:	add    bh,BYTE PTR [ecx]
  425676:	popf   
  425677:	mov    al,0xf6
  425679:	xlat   BYTE PTR ds:[ebx]
  42567a:	inc    ebx
  42567b:	popf   
  42567c:	jge    0x4256a1
  42567e:	or     al,0xef
  425680:	jg     0x4256e3
  425682:	aam    0x9c
  425684:	add    ch,cl
  425686:	xor    al,BYTE PTR ds:0x9d421abf
  42568c:	sbb    dh,BYTE PTR [edi-0x2b]
  42568f:	test   al,0x2
  425691:	rcr    DWORD PTR [ecx],0xae
  425694:	inc    esp
  425695:	jmp    0xa71c19c5
  42569a:	add    eax,ebp
  42569c:	xor    al,0xf2
  42569e:	inc    ecx
  42569f:	popf   
  4256a0:	sbb    ch,bh
  4256a2:	aam    0x80
  4256a4:	add    al,cl
  4256a6:	nop
  4256a7:	outs   dx,DWORD PTR ds:[esi]
  4256a8:	inc    esp
  4256a9:	jmp    0xa71924d9
  4256ae:	add    esi,DWORD PTR [ebp+0x41dd3f]
  4256b4:	popf   
  4256b5:	jg     0x425652
  4256b7:	jne    0x9d86b0dc
  4256bd:	xor    edi,edx
  4256bf:	xor    esp,DWORD PTR [ecx+0x140ba37d]
  4256c5:	add    al,0x5e
  4256c7:	inc    esi
  4256c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256c9:	test   DWORD PTR [ebp+0x20bbc3d7],ebp
  4256cf:	cld    
  4256d0:	push   ebx
  4256d1:	add    DWORD PTR [ebx+eax*8+0x46],edi
  4256d5:	(bad)  
  4256d6:	in     eax,0x3
  4256d8:	and    cl,BYTE PTR [ecx-0x13]
  4256db:	dec    ebx
  4256dc:	dec    ecx
  4256dd:	add    eax,0x7db11731
  4256e2:	add    BYTE PTR [edi],ch
  4256e4:	xchg   ecx,eax
  4256e5:	adc    DWORD PTR [eax],edi
  4256e7:	jmp    0xda3d557e
  4256ec:	adc    DWORD PTR [ebx],esi
  4256ee:	adc    BYTE PTR [edx+0x60],dh
  4256f1:	cli    
  4256f2:	jle    0x4256bd
  4256f4:	sahf   
  4256f5:	sub    edi,DWORD PTR [edi+0x7f9e2434]
  4256fb:	xchg   ebp,eax
  4256fc:	mov    ds:0xb37e5341,al
  425701:	(bad)  
  425702:	cli    
  425703:	fcomp  QWORD PTR [esi]
  425705:	add    BYTE PTR [eax-0x17],al
  425708:	and    eax,0x23422f8a
  42570d:	inc    ebp
  42570e:	sti    
  42570f:	jo     0x4256bc
  425711:	xchg   esi,eax
  425712:	mov    DWORD PTR [edx+eax*1+0xe9f9cf],esi
  425719:	sahf   
  42571a:	add    cl,BYTE PTR [ebx]
  42571c:	outs   dx,BYTE PTR ds:[esi]
  42571d:	int    0x2
  42571f:	add    cl,ch
  425721:	adc    eax,0x8b62083c
  425726:	cli    
  425727:	addr16 in eax,0x9f
  42572a:	add    al,BYTE PTR [eax]
  42572c:	push   0x5f
  42572e:	hlt    
  42572f:	out    0x1f,eax
  425731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425732:	mov    ebx,?
  425734:	ins    BYTE PTR es:[edi],dx
  425735:	pop    esi
  425736:	pop    ss
  425737:	jl     0x4256ef
  425739:	cmp    DWORD PTR [edi],edx
  42573b:	or     al,0x74
  42573d:	pop    ebx
  42573e:	xchg   esi,eax
  42573f:	push   eax
  425740:	adc    eax,eax
  425742:	dec    esp
  425743:	sti    
  425744:	neg    BYTE PTR [ebx]
  425746:	ret    0x8274
  425749:	pop    ds
  42574a:	paddb  mm5,mm1
  42574d:	cdq    
  42574e:	add    al,BYTE PTR [eax]
  425750:	pop    ebx
  425751:	in     al,dx
  425752:	aas    
  425753:	push   ebx
  425754:	(bad)  
  425755:	mov    esi,?
  425757:	dec    esi
  425758:	sar    DWORD PTR [esi+0x69],0xfa
  42575c:	add    bl,bl
  42575e:	cmp    al,0x8b
  425761:	cmp    dh,0x87
  425764:	pop    eax
  425765:	loopne 0x4257c6
  425767:	add    cl,BYTE PTR [ebx+0x7d82fe82]
  42576d:	adc    ah,al
  42576f:	inc    eax
  425770:	adc    al,0xb5
  425772:	scas   eax,DWORD PTR es:[edi]
  425773:	bnd je 0x425752
  425776:	jg     0x4257b6
  425778:	or     BYTE PTR [esi+0xa66805],bl
  42577e:	pop    esp
  42577f:	inc    esi
  425780:	add    BYTE PTR [eax-0x67],ch
  425783:	adc    eax,DWORD PTR [eax+0x0]
  425786:	pushf  
  425787:	sub    BYTE PTR [eax],bh
  425789:	inc    edx
  42578a:	test   cl,bl
  42578c:	dec    esi
  42578d:	push   0x408170
  425792:	retf   
  425793:	mov    dh,0xf6
  425795:	push   eax
  425796:	jl     0x425721
  425798:	les    esp,FWORD PTR [eax]
  42579a:	rol    esi,0x7
  42579d:	xchg   ebp,eax
  42579e:	xchg   DWORD PTR [edi+0x210f47c],ebp
  4257a4:	dec    edi
  4257a5:	call   0x38402c
  4257aa:	mov    esi,ecx
  4257ac:	repz call 0x38403c
  4257b2:	scas   al,BYTE PTR es:[edi]
  4257b3:	(bad)  
  4257b4:	jecxz  0x4257c0
  4257b6:	mov    esi,ecx
  4257b8:	repz call 0x384064
  4257be:	push   esi
  4257bf:	les    edx,FWORD PTR [edi+0x5b]
  4257c2:	int    0xc8
  4257c4:	or     BYTE PTR [eax],al
  4257c6:	and    DWORD PTR [ecx+0x8418bec],eax
  4257cc:	sub    esp,0x5ec
  4257d2:	mov    bl,0x87
  4257d4:	shr    BYTE PTR [ebx*4-0x5a8a6937],0x2e
  4257dc:	cmp    al,0xd0
  4257df:	enter  0x5096,0x0
  4257e3:	push   ss
  4257e4:	ret    
  4257e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257e6:	es cwd 
  4257e9:	inc    DWORD PTR [ebp+ebx*8+0x5a86e2d5]
  4257f0:	xchg   ebp,eax
  4257f1:	xor    DWORD PTR [edi-0x7b775ace],eax
  4257f7:	pop    eax
  4257f8:	jno    0x425792
  4257fa:	sti    
  4257fb:	call   0x9686:0x958588c9
  425802:	sti    
  425803:	in     eax,dx
  425804:	jno    0x425798
  425806:	cli    
  425807:	sbb    BYTE PTR [eax],0x39
  42580a:	test   BYTE PTR [ebp-0x6b],bl
  42580d:	add    bh,bl
  42580f:	ficom  DWORD PTR [ecx-0x2d35402e]
  425815:	les    ecx,FWORD PTR [eax]
  425817:	popf   
  425818:	dec    esi
  425819:	mov    ch,ah
  42581b:	push   ds
  42581c:	int    0xca
  42581e:	dec    esi
  42581f:	jmp    0x4257ad
  425821:	mov    edx,0x401e9966
  425826:	fsub   st(6),st
  425828:	imul   ecx,DWORD PTR [ebp+ebx*2-0x2bc7ddb3],0xfbb7c624
  425833:	nop
  425834:	mov    ch,0xf1
  425836:	aas    
  425837:	popf   
  425838:	sbb    al,0xbb
  42583a:	or     al,0x28
  42583c:	jbe    0x4257ed
  42583e:	mov    DWORD PTR [eax-0xf],esi
  425841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425842:	ret    0x9009
  425845:	cdq    
  425846:	test   BYTE PTR [eax],al
  425848:	frstor [edi-0x66626585]
  42584e:	(bad)  
  42584f:	cli    
  425850:	push   0x82abf102
  425855:	(bad)  
  425856:	ficomp DWORD PTR [ecx+0x7fe2c219]
  42585c:	daa    
  42585d:	add    ch,cl
  42585f:	add    ebx,DWORD PTR [edx]
  425861:	pop    ss
  425862:	in     eax,dx
  425863:	xchg   BYTE PTR [eax-0x4e],ah
  425866:	adc    eax,ecx
  425868:	pop    eax
  425869:	sahf   
  42586a:	dec    ebp
  42586b:	lea    ebx,[ebp+0x2]
  42586e:	pusha  
  42586f:	aas    
  425870:	lods   eax,DWORD PTR ds:[esi]
  425871:	js     0x4258b7
  425873:	nop
  425874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425875:	hlt    
  425876:	push   0x600262f6
  42587b:	aas    
  42587c:	xchg   ebp,eax
  42587d:	retf   0x12a5
  425880:	mov    eax,ds:0xdf186624
  425885:	mov    WORD PTR ds:0x60429910,ds
  42588b:	aas    
  42588c:	jne    0x42581c
  42588e:	bnd jmp DWORD PTR [ecx]
  425891:	dec    eax
  425892:	push   ebp
  425893:	lea    edx,[esi+0x7c]
  425896:	loop   0x425843
  425898:	jmp    0x552f:0x9403e92f
  42589f:	adc    dh,BYTE PTR [edi-0x4a445387]
  4258a5:	pop    ds
  4258a6:	push   edx
  4258a7:	inc    esp
  4258a8:	popf   
  4258a9:	sbb    al,BYTE PTR [edi+0x27800dc]
  4258af:	xchg   esi,eax
  4258b0:	cwde   
  4258b1:	ins    DWORD PTR es:[edi],dx
  4258b2:	lea    edi,[ecx-0x63955f9]
  4258b8:	rcr    eax,0xf9
  4258bb:	out    0x7e,eax
  4258bd:	fst    QWORD PTR [edi]
  4258bf:	out    0x8b,al
  4258c1:	jo     0x4258bc
  4258c3:	jae    0x4258d4
  4258c5:	in     eax,dx
  4258c6:	call   0x6200:0x8e0699d3
  4258cd:	mov    edx,0x997548b6
  4258d2:	cmp    dh,BYTE PTR [ebp-0xf]
  4258d5:	add    eax,0xd7d1d818
  4258da:	and    edi,edx
  4258dc:	(bad)  
  4258dd:	imul   DWORD PTR [esi]
  4258df:	rcl    BYTE PTR [ebp-0x5a],1
  4258e2:	mov    DWORD PTR [ebp-0x67],esi
  4258e5:	and    eax,0x5edb5bf8
  4258ea:	add    al,BYTE PTR [esi+0x29a5a82c]
  4258f0:	pop    esp
  4258f1:	mov    ds:0x1393e8b2,eax
  4258f6:	mov    bh,bl
  4258f8:	jb     0x42595d
  4258fa:	mov    dh,0x48
  4258fc:	sbb    eax,0xe1753aa0
  425901:	xor    eax,0x1391d817
  425906:	and    al,0xfa
  425908:	jle    0x425971
  42590a:	cs sar ch,1
  42590d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42590e:	mov    DWORD PTR [ebp-0x67],esi
  425911:	add    BYTE PTR ds:0xdefb5bf7,dl
  425917:	add    ch,BYTE PTR [esi]
  425919:	sub    DWORD PTR [ebp+esi*1-0x72a5d437],esp
  425920:	push   ebp
  425921:	bound  esp,QWORD PTR [edx-0x638df81a]
  425927:	xor    DWORD PTR [edi+0x432252f],eax
  42592d:	ins    BYTE PTR es:[edi],dx
  42592e:	pop    esi
  42592f:	pop    ss
  425930:	add    eax,0xe789656a
  425935:	idiv   DWORD PTR [eax-0x74]
  425938:	dec    ebx
  425939:	adc    eax,edi
  42593b:	pop    ss
  42593c:	cli    
  42593d:	push   ss
  42593e:	sub    DWORD PTR [edx-0xd5df17b],ecx
  425944:	out    0x0,eax
  425946:	jmp    0x74c1:0x78fff5f0
  42594d:	pop    es
  42594e:	jg     0x425953
  425950:	or     esi,0x3
  425953:	rol    BYTE PTR [edi],1
  425955:	add    DWORD PTR [ebx],0x75
  425958:	je     0x425964
  42595a:	jns    0x4259d1
  42595c:	je     0x425964
  42595e:	fwait
  42595f:	pop    esi
  425960:	jl     0x4258f4
  425962:	les    eax,FWORD PTR [eax]
  425964:	add    DWORD PTR [esi],0x6e
  425967:	pop    es
  425968:	or     esi,0x3
  42596b:	xchg   esi,eax
  42596c:	push   esi
  42596d:	xor    eax,DWORD PTR [esp+edx*8]
  425970:	mov    ecx,0x82d1c404
  425975:	in     al,dx
  425976:	add    BYTE PTR [ebp-0x23],ah
  425979:	cmp    al,0x39
  42597c:	jl     0x4259f3
  42597e:	add    al,0x76
  425980:	shl    bl,0x3c
  425983:	stc    
  425984:	jae    0x4259fa
  425986:	adc    al,0xae
  425988:	push   es
  425989:	dec    esi
  42598a:	push   0x3daa17
  42598f:	sahf   
  425990:	push   es
  425991:	call   0x48e8f3
  425996:	mov    BYTE PTR [ecx],bh
  425998:	jne    0x42597d
  42599a:	adc    ebp,DWORD PTR [edx]
  42599c:	fcomp  st(2)
  42599e:	cmp    eax,0x620006
  4259a3:	fcomp  QWORD PTR [esi]
  4259a5:	pop    ebx
  4259a6:	jmp    ebx
  4259a8:	add    eax,0xf741e90f
  4259ae:	xor    cl,0x74
  4259b1:	add    BYTE PTR [ebp+0x3c],dh
  4259b4:	jns    0x4259b4
  4259b6:	imul   esi,DWORD PTR ds:0x24ffc679,0x9dff457a
  4259c0:	push   esp
  4259c1:	int3   
  4259c2:	mov    edi,0x81a82068
  4259c7:	stc    
  4259c8:	or     eax,0x6902fffd
  4259cd:	sub    eax,0x63cf2853
  4259d2:	std    
  4259d3:	repnz pushf 
  4259d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259d6:	xchg   esi,eax
  4259d7:	inc    ebx
  4259d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259d9:	xchg   edx,eax
  4259da:	sti    
  4259db:	add    BYTE PTR [eax-0x63],ch
  4259de:	xchg   BYTE PTR [ebp+0x27],bh
  4259e1:	mov    ch,0x10
  4259e3:	or     BYTE PTR [esi*4-0x3b536732],bl
  4259ea:	mov    WORD PTR [ebp-0x37],?
  4259ed:	mov    cl,0xda
  4259ef:	pusha  
  4259f0:	mov    ebx,0x24d6ce54
  4259f5:	out    0x9b,eax
  4259f7:	aaa    
  4259f8:	fsubp  st(5),st
  4259fa:	and    ebx,edi
  4259fc:	sub    BYTE PTR [ebp-0x7e9c78d1],bl
  425a02:	add    ch,BYTE PTR [ecx+0x14297c92]
  425a08:	sbb    BYTE PTR [esi],bl
  425a0a:	xor    ebx,edi
  425a0c:	or     BYTE PTR [edi+ebp*1],0x4f
  425a10:	sub    BYTE PTR [esi+0x1c657f57],cl
  425a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a17:	rol    DWORD PTR [edi],cl
  425a19:	and    edx,DWORD PTR [edx-0x754a27b]
  425a1f:	xchg   BYTE PTR [ebx+0x49],ah
  425a22:	daa    
  425a23:	mov    BYTE PTR [ebx],al
  425a25:	pop    eax
  425a26:	dec    DWORD PTR [eax+eiz*1+0x42fb9621]
  425a2d:	imul   esp,DWORD PTR [edi-0x662a1a],0x70ac5d84
  425a37:	shl    BYTE PTR [edi+0x2],0x26
  425a3b:	adc    BYTE PTR [edi+ecx*8+0x24001d28],dl
  425a42:	test   DWORD PTR [ecx-0x66],esi
  425a45:	push   ss
  425a46:	mov    ebx,DWORD PTR [eax+eax*4+0x25]
  425a4a:	xchg   DWORD PTR [edx],eax
  425a4c:	xchg   esi,eax
  425a4d:	ins    DWORD PTR es:[edi],dx
  425a4e:	mov    edx,esp
  425a50:	jae    0x4259fc
  425a52:	inc    edx
  425a53:	jmp    0x74bff881
  425a58:	mov    ds:0x4d719a45,eax
  425a5d:	out    0x8a,al
  425a5f:	jno    0x425a98
  425a61:	mov    ds:0x9c982cc3,al
  425a66:	add    ch,cl
  425a68:	add    eax,edx
  425a6a:	out    0x7f,al
  425a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a6d:	pushf  
  425a6e:	add    ch,cl
  425a70:	xchg   BYTE PTR [eax],ah
  425a72:	bound  esi,QWORD PTR [ebp+edx*4+0x43d179b6]
  425a79:	push   esp
  425a7a:	adc    eax,0x98e2d29f
  425a7f:	mov    esp,0x5e029d04
  425a84:	pop    ss
  425a85:	mov    DWORD PTR [edx],esi
  425a87:	mov    cl,BYTE PTR [edi]
  425a89:	mov    DWORD PTR [eax+0x2c],edi
  425a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a8d:	in     eax,dx
  425a8e:	sbb    al,0xd5
  425a90:	cmp    BYTE PTR [eax],ch
  425a92:	or     BYTE PTR [ecx-0x54],bl
  425a95:	ins    BYTE PTR es:[edi],dx
  425a96:	imul   dx,WORD PTR [ebp-0x7f0a4116],0x65
  425a9e:	mov    ch,dl
  425aa0:	jg     0x425ad9
  425aa2:	add    ebp,ecx
  425aa4:	add    eax,DWORD PTR [eax]
  425aa6:	sbb    al,dl
  425aa8:	mov    ecx,0x3e6b2086
  425aad:	xchg   ebp,eax
  425aae:	inc    esi
  425aaf:	xor    ebp,DWORD PTR [edi+edi*2+0xd]
  425ab3:	mov    WORD PTR [eax],es
  425ab5:	or     BYTE PTR ss:[ebx],dh
  425ab8:	call   0x44c182
  425abd:	ins    BYTE PTR es:[edi],dx
  425abe:	pop    ecx
  425abf:	inc    BYTE PTR [ebx+0x2a169]
  425ac5:	ficom  DWORD PTR [ebp+0x3a]
  425ac8:	push   0x2a169
  425acd:	xchg   ebx,eax
  425ace:	lahf   
  425acf:	cmp    DWORD PTR [edi-0x6f],ecx
  425ad2:	sahf   
  425ad3:	add    al,BYTE PTR [eax]
  425ad5:	sub    DWORD PTR [edx],ebx
  425ad7:	adc    BYTE PTR [eax+0x508e11f0],0xe6
  425ade:	repz (bad) ds:0xf081a129
  425ae5:	push   0x28
  425ae7:	mov    ?,WORD PTR [ebp-0x10]
  425aea:	xor    eax,esi
  425aec:	pop    ss
  425aed:	fcomp  DWORD PTR [esi+0x2]
  425af0:	jg     0x425ab3
  425af2:	outs   dx,BYTE PTR ds:[esi]
  425af3:	(bad)  
  425af5:	mov    dh,0x73
  425af7:	xchg   BYTE PTR [ecx-0x64fad4],al
  425afd:	call   0x92c673a0
  425b02:	fadd   QWORD PTR [ecx+0x77cde57d]
  425b08:	inc    ebp
  425b09:	lea    eax,[eax]
  425b0b:	into   
  425b0c:	xor    eax,0x3426fcfb
  425b11:	sti    
  425b12:	aam    0x52
  425b14:	idiv   DWORD PTR [edi]
  425b16:	jmp    0xe0b71e0e
  425b1b:	sub    BYTE PTR [edi],bh
  425b1d:	pop    es
  425b1e:	call   0xd63e616a
  425b23:	popf   
  425b24:	jp     0x425b83
  425b26:	loop   0x425aa8
  425b28:	lea    edx,ds:0xffc94cfd
  425b2e:	jmp    DWORD PTR [edx]
  425b30:	outs   dx,BYTE PTR ds:[esi]
  425b31:	adc    eax,0x4556a0
  425b36:	cmp    BYTE PTR [ecx],cl
  425b38:	cli    
  425b39:	je     0x425b47
  425b3b:	leave  
  425b3c:	or     BYTE PTR [eax+0x506e7bf9],dl
  425b42:	call   0x391590
  425b47:	stos   DWORD PTR es:[edi],eax
  425b48:	clc    
  425b49:	imul   eax
  425b4b:	push   ss
  425b4c:	into   
  425b4d:	cmc    
  425b4e:	call   FWORD PTR [ebp+0x5f]
  425b51:	add    DWORD PTR [eax],eax
  425b53:	add    al,0x80
  425b55:	test   DWORD PTR [eax-0x39088b17],esp
  425b5b:	hlt    
  425b5c:	add    al,0x40
  425b5e:	dec    ecx
  425b5f:	inc    ecx
  425b60:	ja     0x425ae4
  425b62:	inc    ebp
  425b63:	iret   
  425b64:	rcl    DWORD PTR [ebp+0x5b],cl
  425b67:	std    
  425b68:	mov    edi,0x9910008
  425b6d:	in     al,dx
  425b6e:	add    DWORD PTR [eax],0x84de8
  425b74:	(bad)  
  425b75:	iret   
  425b76:	dec    ebp
  425b77:	push   edi
  425b78:	cmp    DWORD PTR [ebx],ebp
  425b7a:	xchg   esp,eax
  425b7b:	std    
  425b7c:	sti    
  425b7d:	je     0x425b67
  425b7f:	stc    
  425b80:	push   eax
  425b81:	jne    0x425b7a
  425b83:	push   0xffffff90
  425b85:	(bad)  [edx-0x73]
  425b88:	add    DWORD PTR ds:0xcf1bfff7,edi
  425b8e:	popa   
  425b8f:	add    BYTE PTR [ecx],cl
  425b91:	jmp    0x5ee8:0x742c83ab
  425b98:	int    0x74
  425b9a:	test   DWORD PTR [ebp-0x74e30acc],0x8867ceb2
  425ba4:	sub    al,BYTE PTR [eax+0x0]
  425ba7:	lea    ebx,[ebp+0x4af78016]
  425bad:	cmp    DWORD PTR [eax+ebp*8],esi
  425bb0:	int3   
  425bb1:	push   0xda20ffff
  425bb6:	(bad)  
  425bb7:	xchg   esp,eax
  425bb8:	pop    ebp
  425bb9:	push   ss
  425bba:	les    esi,FWORD PTR [ebp-0x6c]
  425bbd:	mov    WORD PTR [edi-0x7fe8eb9e],?
  425bc3:	neg    DWORD PTR [edx]
  425bc5:	jmp    0xf563e14a
  425bca:	mov    ?,ebx
  425bcc:	ins    DWORD PTR es:[edi],dx
  425bcd:	clc    
  425bce:	clc    
  425bcf:	(bad)  
  425bd0:	scas   al,BYTE PTR es:[edi]
  425bd1:	pop    ecx
  425bd2:	inc    DWORD PTR [esi-0x71f7c800]
  425bd8:	sti    
  425bd9:	repnz xor edi,0xffffff8c
  425bdd:	jo     0x425bcc
  425bdf:	sub    ebp,eax
  425be1:	xchg   esp,eax
  425be2:	addr16 mov ?,ebx
  425be5:	sbb    al,0xb1
  425be7:	rcr    BYTE PTR [eax-0x78c94f54],cl
  425bed:	jecxz  0x425bb8
  425bef:	cmp    BYTE PTR [ebp+0x19],0xb2
  425bf3:	ins    DWORD PTR es:[edi],dx
  425bf4:	sahf   
  425bf5:	mov    ebx,0x1e592c48
  425bfa:	push   edx
  425bfb:	mov    cs,WORD PTR [ebx]
  425bfd:	and    ecx,edx
  425bff:	add    al,0x0
  425c01:	popf   
  425c02:	adc    al,0xc6
  425c04:	push   eax
  425c05:	sub    BYTE PTR [esi],bl
  425c07:	jnp    0x425c00
  425c09:	xchg   edx,eax
  425c0a:	jo     0x425c3b
  425c0c:	lea    esp,[eax]
  425c0e:	sbb    eax,0xe982fb8c
  425c13:	fwait
  425c14:	or     dl,dl
  425c16:	cdq    
  425c17:	inc    DWORD PTR [ebp+ebx*2-0x63a67c60]
  425c1e:	cdq    
  425c1f:	dec    DWORD PTR [eax+ebx*1+0x569b1d02]
  425c26:	xchg   DWORD PTR [ecx+0x507e1880],edi
  425c2c:	xchg   edx,eax
  425c2d:	inc    esi
  425c2e:	xor    cl,BYTE PTR [edx-0x8]
  425c31:	sbb    dh,cl
  425c33:	test   al,0x3
  425c35:	mov    edx,0x3351d
  425c3a:	and    al,0x3d
  425c3c:	cmp    DWORD PTR [esi-0x782578db],eax
  425c42:	xchg   DWORD PTR [ecx],eax
  425c44:	jmp    0x2177f64c
  425c49:	xchg   edx,eax
  425c4a:	and    BYTE PTR [ebp-0x77],bh
  425c4d:	call   0x7618:0x80b98706
  425c54:	(bad)  
  425c55:	xchg   ecx,eax
  425c56:	div    BYTE PTR [ecx]
  425c58:	ins    BYTE PTR es:[edi],dx
  425c59:	mov    BYTE PTR [ecx],bl
  425c5b:	mov    edx,esi
  425c5d:	xchg   ecx,eax
  425c5e:	dec    ebp
  425c5f:	call   0xc46c:0x29d3925
  425c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c67:	jle    0x425c05
  425c69:	add    al,0x9d
  425c6b:	add    al,BYTE PTR [ecx-0x7c]
  425c6e:	popf   
  425c6f:	add    ch,cl
  425c71:	sbb    eax,0x1be618c2
  425c76:	popf   
  425c77:	add    ch,cl
  425c79:	and    DWORD PTR [eax],0x7d
  425c7c:	ins    DWORD PTR es:[edi],dx
  425c7d:	mov    esp,DWORD PTR [esi+0x587f1986]
  425c83:	mov    dl,BYTE PTR [ecx-0x657aa32b]
  425c89:	mov    BYTE PTR [ebp-0xa],bl
  425c8c:	ins    BYTE PTR es:[edi],dx
  425c8d:	ins    BYTE PTR es:[edi],dx
  425c8e:	popf   
  425c8f:	add    ch,cl
  425c91:	jle    0x425c6b
  425c93:	mov    bl,BYTE PTR [ecx]
  425c95:	jg     0x425c87
  425c97:	sahf   
  425c98:	mov    bh,0xac
  425c9a:	test   DWORD PTR [eax],ecx
  425c9c:	add    BYTE PTR [edi-0x7b75f100],ch
  425ca2:	test   eax,0xdc872385
  425ca7:	add    bh,BYTE PTR [esi-0x3e]
  425caa:	repnz fistp DWORD PTR [edx+0x821be74]
  425cb1:	call   0x6e76029f
  425cb6:	icebp  
  425cb7:	pop    ds
  425cb8:	mov    DWORD PTR [eax],eax
  425cba:	jmp    0xaeb55f7d
  425cbf:	stos   DWORD PTR es:[edi],eax
  425cc0:	inc    eax
  425cc1:	(bad)  
  425cc2:	arpl   WORD PTR [ecx+0xf],bx
  425cc5:	adc    DWORD PTR ds:[ebx+0x27],ebp
  425cc9:	cli    
  425cca:	push   ds
  425ccb:	nop
  425ccc:	mov    al,BYTE PTR [ebp-0x7b2e5aea]
  425cd2:	pop    ss
  425cd3:	xchg   esi,eax
  425cd4:	mul    DWORD PTR [ebp-0x62]
  425cd7:	or     eax,0x5edb23f0
  425cdc:	add    bh,BYTE PTR [edi+0x21]
  425cdf:	or     al,0x9e
  425ce1:	pop    es
  425ce2:	xchg   edi,eax
  425ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ce4:	ja     0x425d2b
  425ce6:	loope  0x425c76
  425ce8:	call   0xaf37:0x8a2ca7bb
  425cef:	mov    bl,0x26
  425cf1:	push   edx
  425cf2:	ss inc edx
  425cf4:	jg     0x425c8a
  425cf6:	les    ecx,FWORD PTR ds:0x4705e88a
  425cfc:	mov    ebx,edi
  425cfe:	bound  esp,QWORD PTR [ebx-0x6]
  425d01:	mov    cl,bh
  425d03:	add    BYTE PTR [edi],ah
  425d05:	pop    es
  425d06:	hlt    
  425d07:	pop    edx
  425d08:	lahf   
  425d09:	mov    DWORD PTR [ebp-0x5f],esi
  425d0c:	sub    eax,0xdefb9fef
  425d11:	add    bh,BYTE PTR [edi+0x1c]
  425d14:	adc    DWORD PTR [ecx-0x12c0ff7c],ecx
  425d1a:	or     ecx,DWORD PTR [ebp-0x68207]
  425d20:	repz shl edi,1
  425d23:	jbe    0x425d62
  425d25:	jae    0x425d1e
  425d27:	add    DWORD PTR [ecx+0x6d],0x0
  425d2b:	jne    0x425cdb
  425d2d:	add    eax,0xf9dcf845
  425d32:	(bad)  
  425d33:	(bad)  
  425d34:	rol    DWORD PTR [eax*4-0x88d84cc],cl
  425d3b:	push   eax
  425d3c:	jae    0x425d2a
  425d3e:	out    dx,eax
  425d3f:	dec    DWORD PTR [ecx+0x11]
  425d42:	adc    DWORD PTR [eax+0x34],eax
  425d45:	jl     0x425d07
  425d47:	jns    0xb44253c1
  425d4d:	data16 adc BYTE PTR [edi-0x64],dl
  425d51:	fcomp  QWORD PTR [esi+edi*8-0x6d]
  425d55:	stos   WORD PTR es:[edi],ax
  425d57:	lea    ecx,[ecx+0x79]
  425d5a:	call   0xf7b616ad
  425d5f:	jmp    FWORD PTR [ecx+0x71]
  425d62:	not    DWORD PTR ds:0x3b9040
  425d68:	add    ch,bh
  425d6a:	arpl   WORD PTR [ecx],ax
  425d6c:	add    ah,al
  425d6e:	add    DWORD PTR [ebp-0x88b0e6c],0x4000b4c6
  425d78:	dec    ecx
  425d79:	jns    0x425df2
  425d7b:	add    DWORD PTR [ebp-0x18],0x68
  425d7f:	adc    al,0xb9
  425d81:	loop   0x425d81
  425d83:	(bad)  
  425d84:	inc    DWORD PTR [ecx+0x7b]
  425d87:	xchg   esp,eax
  425d88:	std    
  425d89:	inc    ebx
  425d8a:	je     0x425d4a
  425d8c:	add    BYTE PTR [eax+eax*2+0x729d7549],al
  425d93:	iret   
  425d94:	mov    edi,0xc926d3e2
  425d99:	pop    edi
  425d9a:	xchg   esi,eax
  425d9b:	call   DWORD PTR [esi+eiz*1+0x76]
  425d9f:	test   esp,ebp
  425da1:	xchg   ecx,eax
  425da2:	xchg   edi,eax
  425da3:	(bad)  
  425da4:	call   FWORD PTR [esi]
  425da6:	out    0x8b,eax
  425da8:	sti    
  425da9:	out    dx,al
  425daa:	inc    ebx
  425dab:	rcl    esi,1
  425dad:	(bad)  
  425dae:	popf   
  425daf:	add    BYTE PTR [ebp-0x474d0c7],0xed
  425db6:	xor    al,0x19
  425db8:	or     bh,al
  425dba:	xchg   ebx,eax
  425dbb:	daa    
  425dbc:	call   0x41f947
  425dc1:	sbb    BYTE PTR [edi],dl
  425dc3:	mov    al,ds:0x33d522fd
  425dc8:	sti    
  425dc9:	nop
  425dca:	lea    ecx,[edx-0xe4aff8b]
  425dd0:	es push ebp
  425dd2:	popf   
  425dd3:	cdq    
  425dd4:	jbe    0x425dc6
  425dd6:	sbb    ah,ch
  425dd8:	pop    ss
  425dd9:	aas    
  425dda:	push   ds
  425ddb:	jg     0x425dcc
  425ddd:	jmp    FWORD PTR [esi-0x57]
  425de0:	mov    dh,BYTE PTR [ebp-0x73]
  425de3:	mov    WORD PTR [eax],ds
  425de5:	sbb    dl,ah
  425de7:	scas   al,BYTE PTR es:[edi]
  425de8:	or     DWORD PTR [edi],0x5d
  425deb:	cdq    
  425dec:	mov    al,al
  425dee:	dec    ecx
  425def:	in     eax,dx
  425df0:	mov    dh,BYTE PTR [ebp-0x4f]
  425df3:	push   ds
  425df4:	dec    eax
  425df5:	clc    
  425df6:	aaa    
  425df7:	call   0xffff:0x99450019
  425dfe:	fld    QWORD PTR [eax+ebx*1+0x18]
  425e02:	mov    ch,0xd
  425e04:	ret    
  425e05:	cli    
  425e06:	mov    ds:0xb675bf1d,al
  425e0b:	add    ah,BYTE PTR [edx+0x28f1aaf8]
  425e11:	add    al,0xa
  425e13:	mov    edi,DWORD PTR [ecx]
  425e15:	sbb    BYTE PTR [esi-0x62fcae3b],bl
  425e1b:	add    bh,ah
  425e1d:	push   es
  425e1e:	ja     0x425ddf
  425e20:	imul   ecx,DWORD PTR [edx-0x2da0eeff],0x8c24756c
  425e2a:	inc    ebp
  425e2b:	sub    BYTE PTR ds:0x2377568d,0x2d
  425e32:	add    dl,dh
  425e34:	mov    ecx,0x2e42f727
  425e39:	pop    esi
  425e3a:	lahf   
  425e3b:	int3   
  425e3c:	xor    edi,ecx
  425e3e:	add    esi,ebp
  425e40:	add    bh,bh
  425e42:	cld    
  425e43:	sub    bl,BYTE PTR [ebx+0x29d0897]
  425e49:	jo     0x425de6
  425e4b:	sbb    al,BYTE PTR [ebx-0x75138517]
  425e51:	pop    es
  425e52:	jl     0x425eb4
  425e54:	mov    bh,BYTE PTR [edi+0x3]
  425e57:	sbb    al,cl
  425e59:	pusha  
  425e5a:	cmp    cl,bh
  425e5c:	cdq    
  425e5d:	mov    edi,0xb6029d08
  425e62:	mov    esp,0x18f13dea
  425e67:	popf   
  425e68:	out    dx,eax
  425e69:	fwait
  425e6a:	pop    DWORD PTR [ebp-0xe]
  425e6d:	or     DWORD PTR [ebx*4-0x5863c6cf],eax
  425e74:	inc    esp
  425e75:	jmp    0xf63e207d
  425e7a:	xor    al,0xa1
  425e7c:	jns    0x425e69
  425e7e:	jp     0x425ecf
  425e80:	(bad)  
  425e81:	scas   eax,DWORD PTR es:[edi]
  425e82:	shl    DWORD PTR [edx],0x3e
  425e85:	add    BYTE PTR ds:0x543cba9,cl
  425e8b:	cdq    
  425e8c:	cmc    
  425e8d:	adc    BYTE PTR [ebx],bl
  425e8f:	xchg   edi,eax
  425e90:	mov    DWORD PTR [ebp+eax*8-0x76],eax
  425e94:	cmp    DWORD PTR [ebp+ecx*8+0x0],eax
  425e98:	call   0xe6c3:0x5eda04f5
  425e9f:	jmp    0x425eee
  425ea1:	ret    0xd9be
  425ea4:	sahf   
  425ea5:	xlat   BYTE PTR ds:[ebx]
  425ea6:	xchg   BYTE PTR [ebp+0x1a306f1c],al
  425eac:	xchg   ebx,eax
  425ead:	aad    0x8c
  425eaf:	lods   al,BYTE PTR ds:[esi]
  425eb0:	or     dl,bl
  425eb2:	mov    WORD PTR [edx+eax*1+0x22ac8cd3],fs
  425eb9:	rol    DWORD PTR [esi+0x5d8f36a4],cl
  425ebf:	and    eax,0x3fc23311
  425ec4:	sbb    BYTE PTR [edi-0x7fe51940],al
  425eca:	add    cl,ch
  425ecc:	sahf   
  425ecd:	mov    DWORD PTR [ebp-0xb],eax
  425ed0:	xchg   ebp,eax
  425ed1:	sbb    al,BYTE PTR [edi-0x3c765d5f]
  425ed7:	bound  ebp,QWORD PTR [ecx+edi*4]
  425eda:	add    BYTE PTR [ecx+0x69b92b42],ch
  425ee0:	call   0x6e72:0x63c00002
  425ee7:	ror    DWORD PTR [ecx+0x3a743907],cl
  425eed:	icebp  
  425eee:	push   cs
  425eef:	out    0xab,al
  425ef1:	jb     0x425ef2
  425ef3:	ficomp DWORD PTR [ecx]
  425ef5:	clc    
  425ef6:	jmp    0x425ef2
  425ef8:	(bad)  
  425efa:	push   ecx
  425efb:	rol    DWORD PTR [eax],0x23
  425efe:	jle    0x425efb
  425f00:	add    bl,bl
  425f02:	call   0xfc0:0x89f431fa
  425f09:	xor    BYTE PTR [eax],al
  425f0b:	add    BYTE PTR [eax],al
  425f0d:	test   dl,bh
  425f0f:	mov    esi,0x444c378b
  425f14:	call   0x5b0cbbf
  425f19:	ins    DWORD PTR es:[edi],dx
  425f1a:	sbb    ah,ah
  425f1c:	jb     0x425f95
  425f1e:	mov    ?,WORD PTR [ebp-0x18]
  425f21:	xchg   DWORD PTR [ebx+0x722075f7],edx
  425f27:	rcl    BYTE PTR [eax-0x7e],0x9e
  425f2b:	pop    eax
  425f2c:	dec    ebx
  425f2e:	mov    fs,ebx
  425f30:	add    dh,BYTE PTR [esi+0x70c08446]
  425f36:	sub    DWORD PTR [ebx+0x3992bfc7],eax
  425f3c:	inc    ebp
  425f3d:	in     al,0x13
  425f3f:	adc    dh,BYTE PTR [edi+0x41]
  425f42:	dec    esp
  425f43:	je     0x425f21
  425f45:	out    0x71,al
  425f47:	div    BYTE PTR [ebp-0x2c]
  425f4a:	add    ch,dl
  425f4c:	call   DWORD PTR [ecx-0x4f]
  425f4f:	or     eax,ecx
  425f51:	push   esp
  425f52:	aaa    
  425f53:	call   0xf7d10a87
  425f58:	jmp    0x425f50
  425f5a:	push   edx
  425f5b:	mov    ebx,0x3319c484
  425f60:	mov    eax,DWORD PTR [eax]
  425f62:	ret    
  425f63:	cli    
  425f64:	jmp    0x631a:0x6aad4139
  425f6b:	or     BYTE PTR [ecx],bh
  425f6d:	jne    0x425f1f
  425f6f:	adc    ecx,DWORD PTR [ebx]
  425f71:	push   DWORD PTR [ecx-0x52]
  425f74:	sti    
  425f75:	icebp  
  425f76:	jmp    0x425f8a
  425f78:	aam    0x13
  425f7a:	popf   
  425f7b:	stos   BYTE PTR es:[edi],al
  425f7c:	xor    al,0x52
  425f7e:	lds    ebp,FWORD PTR [eax-0x7a]
  425f81:	sti    
  425f82:	mov    dl,0x53
  425f84:	add    ch,BYTE PTR [esi]
  425f86:	fucom  st(6)
  425f88:	ret    
  425f89:	je     0x425f1a
  425f8b:	in     al,0x40
  425f8d:	adc    BYTE PTR [eax],ah
  425f8f:	stos   BYTE PTR es:[edi],al
  425f90:	adc    BYTE PTR [ebx],al
  425f92:	push   ds
  425f93:	jb     0x425f1b
  425f95:	jg     0x425f6c
  425f97:	xchg   BYTE PTR gs:[eax-0x792a7b64],dh
  425f9e:	clc    
  425f9f:	pop    ebp
  425fa0:	js     0x426017
  425fa2:	imul   edx,DWORD PTR [edx+0x16afa6e],0x698d7d83
  425fac:	or     edx,DWORD PTR [ecx]
  425fae:	(bad)  
  425faf:	popa   
  425fb0:	jp     0x425f74
  425fb2:	in     eax,dx
  425fb3:	call   0x778c6fc8
  425fb8:	iret   
  425fb9:	adc    ebp,ebx
  425fbb:	imul   eax,DWORD PTR [edx+0x28e4a9c4],0x8baf2008
  425fc5:	push   eax
  425fc6:	add    ch,cl
  425fc8:	cdq    
  425fc9:	das    
  425fca:	call   0xfbc88f32
  425fcf:	jp     0x425f60
  425fd1:	sub    cl,cl
  425fd3:	fbstp  TBYTE PTR [ebp-0x1]
  425fd6:	push   esp
  425fd7:	push   ss
  425fd8:	push   cs
  425fd9:	test   esp,ebp
  425fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fdc:	imul   edi,edi,0xffffffff
  425fdf:	dec    esi
  425fe0:	mov    bh,0x2e
  425fe2:	sti    
  425fe3:	push   0xf9857875
  425fe8:	jle    0x425f70
  425fea:	sti    
  425feb:	loop   0x425feb
  425fed:	test   BYTE PTR [edi-0x3b],0xa5
  425ff1:	xor    al,BYTE PTR [eax]
  425ff3:	popf   
  425ff4:	add    ch,BYTE PTR [esi-0x6d]
  425ff7:	and    BYTE PTR [ecx-0x16],bh
  425ffa:	jg     0x425fda
  425ffc:	add    ch,cl
  425ffe:	add    edi,DWORD PTR [edi]
  426000:	or     DWORD PTR [ebx],0x4
  426003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426004:	xchg   BYTE PTR [ebx+eax*1+0x3866029d],al
  42600b:	xchg   ecx,eax
  42600c:	jg     0x426004
  42600e:	mov    ah,BYTE PTR [eax]
  426010:	jg     0x426046
  426012:	cmc    
  426013:	and    DWORD PTR [ebp+0x7f868895],eax
  426019:	cmp    DWORD PTR [ebx+0x43f68aa8],ecx
  42601f:	popf   
  426020:	test   DWORD PTR [ecx-0x164567f1],ebp
  426026:	add    ebx,DWORD PTR [ebp+0x1e1904]
  42602c:	(bad)  
  42602d:	jmp    0x2df7c1b
  426032:	jmp    0x55c7807a
  426037:	mov    BYTE PTR [esi+0x7f],al
  42603a:	mov    ecx,0x410ed878
  42603f:	jle    0x42603c
  426041:	jg     0x42608d
  426043:	jg     0x4260a2
  426045:	test   al,0x78
  426048:	loopne 0x4260c0
  42604a:	cdq    
  42604b:	and    BYTE PTR [esi],0xf5
  42604e:	add    DWORD PTR [ebx+0x405c1290],ecx
  426054:	mov    eax,ds:0x73410d2
  426059:	jg     0x426075
  42605b:	jg     0x42603a
  42605d:	cmc    
  42605e:	mov    BYTE PTR [esi+0x100a7678],al
  426064:	mov    edx,0xe68b8483
  426069:	hlt    
  42606a:	ret    
  42606b:	xor    cl,BYTE PTR [esi-0x73]
  42606e:	add    BYTE PTR [edx+ebp*1-0x358b052e],ch
  426075:	jnp    0x42608c
  426077:	or     ebx,edx
  426079:	add    BYTE PTR ds:[ecx+ebx*8+0x66],ah
  42607e:	adc    BYTE PTR [edx+edi*2+0x76],ah
  426082:	push   eax
  426083:	cmp    DWORD PTR [ecx-0x73],ebp
  426086:	pop    ebp
  426087:	cmc    
  426088:	push   es
  426089:	inc    esp
  42608b:	mov    edi,0x3dc08614
  426090:	add    BYTE PTR [ecx+edi*2+0x75],dh
  426094:	frstor ds:0xdefba018
  42609a:	add    bh,BYTE PTR [edi+0x2c]
  42609d:	test   DWORD PTR [ecx+0x52],edi
  4260a0:	cs and al,0x18
  4260a3:	nop
  4260a4:	cli    
  4260a5:	fiadd  WORD PTR [edx]
  4260a7:	test   DWORD PTR [ecx+0x6a62048d],ebp
  4260ad:	push   edi
  4260ae:	jle    0x4260ba
  4260b0:	ins    BYTE PTR es:[edi],dx
  4260b1:	cmp    BYTE PTR [ecx-0x5],0x6e
  4260b5:	retf   0xbc7
  4260b8:	push   ecx
  4260b9:	mov    eax,ds:0xe95efabc
  4260be:	add    esp,edi
  4260c0:	jecxz  0x426075
  4260c2:	(bad)  
  4260c3:	or     eax,DWORD PTR [ecx+0xd]
  4260c6:	inc    esp
  4260c7:	cli    
  4260c8:	inc    esi
  4260c9:	push   ebx
  4260ca:	mov    esi,0x4b719f5b
  4260cf:	mov    esi,0x49859ee5
  4260d4:	rcl    DWORD PTR [ecx-0xe0604fd],1
  4260da:	dec    edx
  4260db:	test   BYTE PTR [ecx],ch
  4260dd:	add    al,0x97
  4260df:	shl    DWORD PTR [esi+ebx*2+0x79],0xbf
  4260e4:	push   cs
  4260e5:	lea    esp,[esi]
  4260e7:	add    al,0x0
  4260e9:	outs   dx,DWORD PTR ds:[esi]
  4260ea:	cmp    DWORD PTR [eax],ebx
  4260ec:	mov    esi,ebp
  4260ee:	aaa    
  4260ef:	not    DWORD PTR [eax-0x38]
  4260f2:	push   esi
  4260f3:	enter  0x84,0x84
  4260f7:	jnp    0x42608d
  4260f9:	rcl    DWORD PTR [ecx-0x40],0xf6
  4260fd:	ret    0x1b8
  426100:	div    DWORD PTR [eax+ebp*4+0x2]
  426104:	or     DWORD PTR [ecx-0x54],0xfffffffe
  426108:	add    BYTE PTR [edx-0x1d],dl
  42610b:	xor    DWORD PTR [eax],ecx
  42610d:	xor    ebp,ebp
  42610f:	std    
  426110:	mov    edi,0x8d40f90f
  426115:	inc    ecx
  426116:	inc    ebx
  426117:	inc    edi
  426118:	add    al,0x0
  42611a:	inc    ebx
  42611b:	or     eax,0x390f0424
  426120:	sbb    BYTE PTR [ebx+0x50f73785],cl
  426126:	push   eax
  426127:	push   esi
  426128:	enter  0x3484,0x7a
  42612c:	xchg   esp,eax
  42612d:	shl    ecx,0xc0
  426130:	test   dl,0x48
  426133:	add    DWORD PTR [ebx+0xfe6c49],eax
  426139:	inc    DWORD PTR [ecx+esi*2]
  42613c:	sub    cl,cl
  42613e:	mov    eax,0x85950741
  426143:	hlt    
  426144:	inc    eax
  426145:	inc    DWORD PTR [edi+0x3824748a]
  42614b:	dec    BYTE PTR [eax+0x18]
  42614e:	scas   eax,DWORD PTR es:[edi]
  42614f:	add    BYTE PTR [edx-0x1],cl
  426152:	xor    al,0x6d
  426154:	sub    cl,cl
  426156:	js     0x426199
  426158:	pop    es
  426159:	xchg   ebp,eax
  42615a:	add    BYTE PTR [ebp-0x4900bf0c],dh
  426160:	jge    0x42615d
  426162:	mov    bl,BYTE PTR [ebp-0x6379185e]
  426168:	or     al,0x2f
  42616a:	sbb    BYTE PTR [esi-0x6d3f84ce],ch
  426170:	(bad)  
  426171:	mov    ebp,0xbf745c8d
  426176:	push   edx
  426177:	ins    DWORD PTR es:[edi],dx
  426178:	fimul  WORD PTR [edi]
  42617a:	adc    dl,ah
  42617c:	imul   eax,DWORD PTR [ebx],0xffffff87
  42617f:	pop    ebp
  426180:	imul   edi,DWORD PTR [ebx+eax*2-0x5b],0x43
  426185:	jne    0x4261fb
  426187:	popf   
  426188:	imul   edi,DWORD PTR [ebx+edi*2+0x75],0xffffffac
  42618d:	cmp    esi,DWORD PTR [eax]
  42618f:	das    
  426190:	es add BYTE PTR ds:[edx+0x2d],ah
  426195:	rol    BYTE PTR [ebx-0x3cfbd828],1
  42619b:	loop   0x4261fe
  42619d:	gs inc ebp
  42619f:	fild   QWORD PTR [ecx-0x46]
  4261a2:	inc    ebx
  4261a3:	mov    ecx,0x9d3e40d1
  4261a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261a9:	cmp    eax,DWORD PTR [eax+0x4f]
  4261ac:	das    
  4261ad:	add    BYTE PTR ds:[edx+0x25],bl
  4261b1:	inc    eax
  4261b2:	in     eax,0xe0
  4261b4:	daa    
  4261b5:	add    al,0xc3
  4261b7:	fisub  DWORD PTR [ecx]
  4261b9:	add    DWORD PTR [ebp-0x21],0x69
  4261bd:	jbe    0x426182
  4261bf:	add    bl,ah
  4261c1:	sub    BYTE PTR [edx+0x46d8144],cl
  4261c7:	push   edx
  4261c8:	fstp   TBYTE PTR es:[edx+0x43f0a902]
  4261cf:	add    BYTE PTR [ecx+0x12e82d63],ch
  4261d5:	xchg   edx,eax
  4261d6:	test   ebx,edi
  4261d8:	es and al,0x22
  4261db:	mov    esi,0x53e902a1
  4261e0:	pushf  
  4261e1:	aas    
  4261e2:	pop    ecx
  4261e3:	add    eax,0xd2e90b3b
  4261e8:	in     eax,0x9f
  4261ea:	stc    
  4261eb:	dec    ecx
  4261ec:	stos   BYTE PTR es:[edi],al
  4261ed:	add    ch,BYTE PTR [eax-0x594772b5]
  4261f3:	add    ebp,DWORD PTR [edi-0x79]
  4261f6:	fnstcw WORD PTR [edx-0x3d]
  4261f9:	inc    ecx
  4261fa:	sti    
  4261fb:	in     eax,0x7b
  4261fd:	jo     0x42624f
  4261ff:	mov    ?,WORD PTR [eax]
  426201:	mov    edx,esp
  426203:	pop    ss
  426204:	mov    edx,0x99136072
  426209:	jg     0x4261b4
  42620b:	call   FWORD PTR [ebp+0x3d]
  42620e:	mov    ch,0xc2
  426210:	bound  eax,QWORD PTR [edx]
  426212:	cmp    eax,0xe50d24a5
  426217:	dec    ecx
  426218:	rol    BYTE PTR [edx],cl
  42621a:	or     eax,ebx
  42621c:	cmp    al,0xe
  42621e:	pop    edi
  42621f:	inc    edx
  426220:	popf   
  426221:	cmp    eax,0x9d000219
  426226:	add    ah,dl
  426228:	ja     0x426257
  42622a:	add    ch,cl
  42622c:	add    ecx,edi
  42622e:	shl    DWORD PTR [ebp+0x7a7b27b1],cl
  426234:	xchg   dh,dl
  426236:	xchg   DWORD PTR [edi-0x2a726686],ebx
  42623c:	dec    ecx
  42623d:	mov    al,BYTE PTR [edx]
  42623f:	push   ss
  426240:	add    BYTE PTR [eax],dl
  426242:	adc    bl,BYTE PTR [edi+0x2b1f9d42]
  426248:	rcr    BYTE PTR [esi+0x6a49f98d],cl
  42624e:	add    ch,BYTE PTR [esi-0x75]
  426251:	dec    esp
  426252:	push   0x66
  426254:	sahf   
  426255:	pushf  
  426256:	das    
  426257:	add    ch,ch
  426259:	gs mov dl,0xa8
  42625c:	stos   BYTE PTR es:[edi],al
  42625d:	sahf   
  42625e:	sub    eax,DWORD PTR [esp+esi*2]
  426261:	ret    0x3f42
  426264:	jmp    0x6446ebc5
  426269:	out    dx,al
  42626a:	mov    ah,0x3f
  42626c:	jmp    0xea21d692
  426271:	sahf   
  426272:	add    bh,BYTE PTR [ebx+ebp*1+0x21]
  426276:	je     0x4262e3
  426278:	jmp    0x426218
  42627a:	add    bh,BYTE PTR [ebp-0x46]
  42627d:	inc    ebp
  42627e:	push   cs
  42627f:	xchg   ebp,eax
  426280:	stc    
  426281:	push   esp
  426282:	cmp    eax,DWORD PTR [eax]
  426284:	jb     0x426224
  426286:	sub    eax,DWORD PTR [ecx-0x13]
  426289:	add    BYTE PTR [ebp+0x25e82f40],bh
  42628f:	jp     0x426310
  426291:	into   
  426292:	sahf   
  426293:	cmp    DWORD PTR [esp+edi*2],0xfffffff1
  426297:	stos   BYTE PTR es:[edi],al
  426298:	aas    
  426299:	jmp    0xadb71e0b
  42629e:	and    BYTE PTR [esi-0x2f],bh
  4262a1:	xchg   ecx,eax
  4262a2:	ins    BYTE PTR es:[edi],dx
  4262a3:	jb     0x42622e
  4262a5:	loopne 0x4262c4
  4262a7:	inc    esp
  4262a8:	add    al,0x68
  4262aa:	es inc edi
  4262ac:	mov    edi,0xd3f6a12a
  4262b1:	jb     0x42631d
  4262b3:	dec    esi
  4262b4:	mov    edi,0x10a3a12a
  4262b9:	xor    ebx,esp
  4262bb:	add    ch,BYTE PTR [edi]
  4262bd:	test   al,0x3c
  4262bf:	inc    esp
  4262c0:	das    
  4262c1:	sub    ah,al
  4262c3:	dec    edx
  4262c4:	rcl    DWORD PTR [ecx+0x1c],1
  4262c7:	add    DWORD PTR fs:[edx],ebx
  4262ca:	popf   
  4262cb:	xchg   DWORD PTR [eax+0x5b02dc81],esi
  4262d1:	add    BYTE PTR [edi],ah
  4262d3:	jns    0x426310
  4262d5:	rol    BYTE PTR [edi+0x6],0x56
  4262d9:	mov    ds:0x3b43b8,eax
  4262de:	pop    es
  4262df:	inc    esi
  4262e0:	or     DWORD PTR [ecx+esi*2],0x6e
  4262e4:	mov    ch,0x43
  4262e6:	add    al,0xc6
  4262e8:	call   0x8a:0xffc34e0c
  4262ef:	mov    ch,0x45
  4262f1:	call   0x84008a01
  4262f6:	shl    ecx,0xd0
  4262f9:	push   edi
  4262fa:	cmp    cl,bl
  4262fc:	inc    esp
  4262fd:	loopne 0x426306
  4262ff:	pop    es
  426300:	mov    esi,0xfa91c183
  426305:	(bad)  
  426306:	(bad)  
  426307:	fild   DWORD PTR [eax+eiz*8+0xf]
  42630b:	xchg   edi,eax
  42630c:	mov    dh,0x83
  42630e:	shl    ebp,0x9d
  426311:	or     dh,BYTE PTR [ebx]
  426313:	cmc    
  426314:	inc    edx
  426315:	push   ebp
  426316:	mov    ebp,DWORD PTR [eax+0x34]
  426319:	push   ecx
  42631a:	push   0x3b4234
  42631f:	cmp    ebp,DWORD PTR [eax-0x11]
  426322:	adc    dh,BYTE PTR [esi+edi*8+0x353c458c]
  426329:	not    DWORD PTR ds:0x3b74f0
  42632f:	add    DWORD PTR [esi+0x75],eax
  426332:	or     BYTE PTR [ebx],bl
  426334:	push   0xfe841307
  426339:	loop   0x42633e
  42633b:	mov    edi,0xdde8f838
  426340:	jg     0x426339
  426342:	jmp    DWORD PTR [esp+eax*1]
  426345:	leave  
  426346:	ret    
  426347:	dec    esp
  426348:	mov    ch,0xbb
  42634a:	inc    ebx
  42634b:	popf   
  42634c:	imul   eax,DWORD PTR [ebp+edx*1+0x3f7d35],0x0
  426354:	pop    esi
  426355:	jmp    0x426318
  426357:	(bad)  
  426358:	loopne 0x426305
  42635a:	(bad)  
  42635b:	jmp    FWORD PTR [esi-0x1c]
  42635e:	loope  0x42634f
  426360:	scas   eax,DWORD PTR es:[edi]
  426361:	stos   DWORD PTR es:[edi],eax
  426362:	call   DWORD PTR [ecx+0x6a]
  426365:	hlt    
  426366:	shr    ebx,0x8f
  426369:	stos   DWORD PTR es:[edi],eax
  42636a:	push   DWORD PTR [ebx+eax*8-0x2f]
  42636e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42636f:	lds    ebx,FWORD PTR [esi+0x6b]
  426372:	sub    eax,0xc1eacafb
  426377:	(bad)  
  426378:	loopne 0x426325
  42637a:	(bad)  
  42637b:	dec    DWORD PTR [eax+0x55]
  42637e:	xchg   edi,eax
  42637f:	xchg   esp,eax
  426380:	retf   0x7f67
  426383:	test   ch,bl
  426385:	(bad)  
  426386:	adc    al,0xc3
  426388:	mov    al,ds:0x9d3f48ef
  42638d:	scas   eax,DWORD PTR es:[edi]
  42638e:	(bad)  
  42638f:	cmp    eax,0x9009a19d
  426394:	fsubr  DWORD PTR [ebx]
  426396:	add    al,0x1
  426398:	repz mov eax,0xad6dba53
  42639e:	ret    
  42639f:	push   eax
  4263a1:	test   al,0x57
  4263a3:	call   0xfbc203ae
  4263a8:	shl    esp,cl
  4263aa:	jnp    0x4263a7
  4263ac:	dec    esi
  4263ad:	in     eax,0x46
  4263af:	pop    ebx
  4263b0:	retf   
  4263b1:	xor    al,0x43
  4263b3:	aaa    
  4263b4:	fld    DWORD PTR [ebp+0x3]
  4263b7:	jb     0x4263b9
  4263b9:	mov    ebx,0x9923c354
  4263be:	pop    ss
  4263bf:	les    eax,FWORD PTR [esi+0x2f036f4d]
  4263c5:	pop    ebp
  4263c6:	add    ecx,DWORD PTR [esi+0x13]
  4263c9:	inc    ebp
  4263ca:	mov    bl,BYTE PTR [edx-0x7d]
  4263cd:	ss xor al,0x37
  4263d0:	jnp    0x426401
  4263d2:	mov    WORD PTR [edi],fs
  4263d4:	pop    es
  4263d5:	fstp   DWORD PTR [esi]
  4263d7:	icebp  
  4263d8:	loope  0x426432
  4263da:	(bad)  
  4263db:	call   0xf0b327b9
  4263e0:	idiv   DWORD PTR [esi+0x6e23b306]
  4263e6:	pop    es
  4263e7:	pop    ebx
  4263e8:	add    cl,al
  4263ea:	push   cs
  4263eb:	mov    dl,0xbb
  4263ed:	test   BYTE PTR [edx],0xe9
  4263f0:	add    esi,ebp
  4263f2:	mov    bh,0xa
  4263f4:	and    esi,0xffffff8b
  4263f7:	mov    ch,0x27
  4263f9:	test   eax,0x5f11e58a
  4263fe:	cmp    edi,DWORD PTR [ebp+0x27]
  426401:	lods   eax,DWORD PTR ds:[esi]
  426402:	hlt    
  426403:	add    ebx,esp
  426405:	fs inc esp
  426407:	cmc    
  426408:	add    edx,DWORD PTR [eax-0x75]
  42640b:	int    0x86
  42640d:	ror    DWORD PTR [esi],0x3b
  426410:	xor    DWORD PTR [eax],0x12
  426413:	shl    DWORD PTR [eax-0x713d885a],0x8d
  42641a:	mov    DWORD PTR [esp+edi*2],esi
  42641d:	add    BYTE PTR [ebp-0x797d4dd3],al
  426423:	test   eax,0x29d04e9
  426428:	sbb    eax,0x8cbd5e14
  42642d:	lahf   
  42642e:	sbb    al,dl
  426430:	call   0x59b5447f
  426435:	mov    ds,ebp
  426437:	add    cl,BYTE PTR [esi-0x7342a1ef]
  42643d:	mov    bl,0x1a
  42643f:	ret    0xe8ff
  426442:	xlat   BYTE PTR ds:[ebx]
  426443:	mov    ebp,0xc2134def
  426448:	(bad)  
  426449:	mov    ecx,0xbc894f73
  42644e:	mov    dl,0x89
  426450:	pop    ebp
  426451:	stc    
  426452:	imul   esp,DWORD PTR [edi+0xb],0x67
  426456:	add    DWORD PTR [ecx],0x0
  426459:	jmp    0x6a4a2189
  42645e:	jle    0x426472
  426460:	mov    DWORD PTR [edx+edx*4-0x5153812d],ebp
  426467:	js     0x4264dd
  426469:	xlat   BYTE PTR ds:[ebx]
  42646a:	xchg   BYTE PTR [eax-0x6],ah
  42646d:	push   ds
  42646e:	pop    ds
  42646f:	test   eax,0x29ee800
  426474:	je     0x42646f
  426476:	push   edi
  426477:	mov    ebp,0xc22b65eb
  42647c:	jmp    DWORD PTR ds:0x62b066e5
  426482:	add    dh,bl
  426484:	jbe    0x42646c
  426486:	fist   WORD PTR [edi-0x43]
  426489:	jmp    0x426424
  42648b:	sub    dl,al
  42648d:	jmp    DWORD PTR [ebp+0x629c66da]
  426493:	loope  0x42650b
  426495:	jle    0x4264db
  426497:	mov    DWORD PTR [edx],eax
  426499:	jg     0x4264df
  42649b:	adc    eax,0x200f7403
  4264a0:	mov    dh,0x27
  4264a2:	sub    al,0x1d
  4264a4:	div    bh
  4264a6:	call   0x562a872f
  4264ab:	pop    ds
  4264ac:	jp     0x4264a9
  4264ae:	jb     0x426491
  4264b0:	mov    edx,0x29ee801
  4264b5:	pop    ds
  4264b6:	mov    eax,ds:0x754aa0
  4264bb:	jbe    0x426444
  4264bd:	dec    ebp
  4264be:	or     al,0xae
  4264c0:	push   ds
  4264c1:	pop    eax
  4264c2:	mov    bp,0x590a
  4264c6:	mov    DWORD PTR [ecx+0x449ce982],edx
  4264cc:	add    al,BYTE PTR [eax]
  4264ce:	idiv   cl
  4264d0:	or     DWORD PTR [eax],esp
  4264d2:	je     0x42645b
  4264d4:	jge    0x4264a9
  4264d6:	jne    0x426512
  4264d8:	cld    
  4264d9:	inc    esp
  4264da:	or     BYTE PTR [edx+edi*2-0x7c2317d8],al
  4264e1:	idiv   edi
  4264e3:	fdivp  st(4),st
  4264e5:	sub    dl,dl
  4264e7:	add    BYTE PTR ds:0xb685f0fb,ch
  4264ed:	ins    DWORD PTR es:[edi],dx
  4264ee:	sbb    BYTE PTR [edx+0xe],dl
  4264f1:	or     DWORD PTR [eax-0x18],ebx
  4264f4:	mov    dh,0x80
  4264f6:	idiv   edi
  4264f8:	jg     0x42653f
  4264fa:	pop    es
  4264fb:	setp   BYTE PTR [esi+0x2e84835d]
  426502:	pop    esi
  426503:	mov    DWORD PTR [eax+0x3f63e258],edi
  426509:	cmp    eax,0x7d588b0b
  42650e:	in     al,dx
  42650f:	mov    edi,DWORD PTR [ecx+0x12]
  426512:	lea    edi,[esp+ebp*2]
  426515:	das    
  426516:	rol    BYTE PTR [ecx+0x408395d2],0x84
  42651d:	adc    dl,BYTE PTR [ebp+0x47feeec0]
  426523:	adc    DWORD PTR [ebx+edx*1+0x7b],0xffffffc0
  426528:	jns    0x426513
  42652a:	mov    edi,esi
  42652c:	inc    ebx
  42652d:	sub    dh,0x45
  426530:	ins    BYTE PTR es:[edi],dx
  426531:	add    BYTE PTR [esi+0xf],bl
  426534:	popf   
  426535:	int    0x2
  426537:	xor    bl,bh
  426539:	loop   0x426542
  42653b:	jne    0x4264be
  42653d:	cmc    
  42653e:	rol    DWORD PTR [edi],0x9f
  426541:	outs   dx,DWORD PTR ds:[esi]
  426542:	adc    BYTE PTR [ebp-0x78f3889a],al
  426548:	fcom   DWORD PTR [edi-0x17]
  42654b:	jle    0x42654d
  42654d:	mov    ecx,0xa9208143
  426552:	fs jns 0x42659a
  426555:	xchg   ebp,eax
  426556:	arpl   bx,si
  426558:	adc    BYTE PTR ds:0x1afb816b,dh
  42655e:	xchg   ebx,eax
  42655f:	(bad)  
  426560:	jae    0x426507
  426562:	sbb    DWORD PTR [edi-0x5],0xffffff9d
  426566:	imul   ebp,ecx,0x0
  426569:	call   0xc21c:0x5ef7f1e0
  426570:	movzx  esi,BYTE PTR ds:0xced7e10
  426577:	cmp    bl,0x42
  42657a:	or     eax,0xa0ad07c2
  42657f:	repz sbb BYTE PTR [eax],bl
  426582:	ins    DWORD PTR es:[edi],dx
  426583:	repnz adc al,0x16
  426586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426587:	or     ecx,DWORD PTR [ebp+0x6280fb51]
  42658d:	push   ds
  42658e:	and    ah,BYTE PTR [esi*2-0x193175a]
  426595:	pop    eax
  426596:	(bad)  
  426597:	ja     0x426580
  426599:	sahf   
  42659a:	loopne 0x426564
  42659c:	or     ecx,esi
  42659e:	mov    dl,0x72
  4265a0:	inc    ebp
  4265a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265a2:	pop    ebx
  4265a3:	in     eax,0x88
  4265a5:	cdq    
  4265a6:	cmp    eax,edi
  4265a8:	push   cs
  4265a9:	xchg   edx,eax
  4265aa:	in     al,dx
  4265ab:	or     edi,DWORD PTR [edi+0x74]
  4265ae:	add    ecx,DWORD PTR [eax]
  4265b0:	repnz add BYTE PTR [ebx-0x10055f81],bl
  4265b7:	cld    
  4265b8:	gs inc ebp
  4265ba:	jge    0x426599
  4265bc:	pop    edi
  4265bd:	or     al,0x22
  4265bf:	cmp    eax,0x7134d23
  4265c4:	jmp    0xd331b551
  4265c9:	mov    dl,BYTE PTR [eax+0x3ac3a52a]
  4265cf:	xor    DWORD PTR [ecx],ebp
  4265d1:	mov    DWORD PTR [edi+ebp*8-0xa],esp
  4265d5:	mov    dl,BYTE PTR [eax+0x22c32d1e]
  4265db:	cmp    edx,DWORD PTR [edi]
  4265dd:	clc    
  4265de:	mov    ds:0xc54265c2,eax
  4265e3:	aaa    
  4265e4:	sub    dl,dh
  4265e6:	push   cs
  4265e7:	and    BYTE PTR [ecx],0x7f
  4265ea:	inc    edx
  4265eb:	rcl    BYTE PTR [ebx-0xae17676],1
  4265f1:	and    ch,0x73
  4265f4:	(bad)  
  4265f5:	pop    edx
  4265f6:	dec    esi
  4265f7:	xchg   DWORD PTR [ecx],edx
  4265f9:	cmp    edi,edx
  4265fb:	add    esp,DWORD PTR [ebp-0x78]
  4265fe:	popf   
  4265ff:	add    ch,cl
  426601:	mov    ah,BYTE PTR [eax-0x353cdad6]
  426607:	xor    BYTE PTR [ecx],ch
  426609:	(bad)  
  42660a:	mov    eax,DWORD PTR [edi+0x73]
  42660d:	and    al,0x22
  42660f:	push   cs
  426610:	or     eax,0x6e027248
  426615:	jno    0x426617
  426617:	fs adc al,0x5d
  42661a:	or     bl,BYTE PTR [ebp+0x7f]
  42661d:	mov    ds:0x3741d22b,eax
  426622:	js     0x42669e
  426624:	pop    es
  426625:	outs   dx,BYTE PTR ds:[esi]
  426626:	jae    0x42662a
  426628:	ins    DWORD PTR es:[edi],dx
  426629:	add    BYTE PTR [ecx],al
  42662b:	sahf   
  42662c:	xchg   DWORD PTR fs:[ecx+0x12411c75],esi
  426633:	loopne 0x42665f
  426635:	mov    edx,0x33e2c5
  42663a:	cmp    edi,0x228ef9c3
  426640:	inc    edx
  426641:	je     0x42666b
  426643:	es xor eax,0x735fa528
  426649:	cli    
  42664a:	in     al,dx
  42664b:	jbe    0x42668b
  42664d:	aas    
  42664e:	jmp    0x5fa9d57a
  426653:	xchg   BYTE PTR [ebx+0x34],dh
  426656:	add    eax,0xdd0033d5
  42665b:	jbe    0x426620
  42665d:	dec    esi
  42665e:	mov    edx,0x712a89ef
  426663:	lock (bad) 
  426665:	cli    
  426666:	aam    0x46
  426668:	add    al,0x40
  42666a:	jmp    0x2e5e2e8e
  42666f:	sub    eax,eax
  426671:	pop    es
  426672:	jo     0x426644
  426674:	push   es
  426675:	mov    DWORD PTR [edi-0x2a57672],edi
  42667b:	add    BYTE PTR [ecx],dl
  42667d:	fcom   DWORD PTR [edi]
  42667f:	pusha  
  426680:	clc    
  426681:	adc    cl,BYTE PTR [ecx-0x3c848559]
  426687:	lahf   
  426688:	jmp    0x42665f
  42668a:	push   esi
  42668b:	sub    ebx,DWORD PTR [edx+0x2e625202]
  426691:	fcomi  st,st(1)
  426693:	adc    DWORD PTR [ebp+ebp*1+0x72dca524],ebx
  42669a:	push   edx
  42669b:	(bad)  
  42669c:	stos   DWORD PTR es:[edi],eax
  42669d:	cli    
  42669e:	jle    0x4266a7
  4266a0:	mov    eax,ds:0x2400156d
  4266a5:	adc    eax,0x794b0040
  4266aa:	pop    es
  4266ab:	call   0x3bc132
  4266b0:	dec    ebx
  4266b1:	jns    0x4266be
  4266b3:	mov    eax,edx
  4266b5:	or     ch,al
  4266b7:	push   ecx
  4266b8:	daa    
  4266b9:	lock idiv bh
  4266bc:	or     BYTE PTR [esi],0xe8
  4266bf:	and    edx,DWORD PTR [eax+0x528bf6f0]
  4266c5:	sub    al,BYTE PTR [ebp+0x4e0850f6]
  4266cb:	call   0x396908
  4266d0:	in     eax,0x1e
  4266d2:	les    eax,FWORD PTR [ebx+0x44]
  4266d5:	jnp    0x4266cf
  4266d7:	test   DWORD PTR [edx+ebp*2+0x44],esi
  4266db:	mov    esp,DWORD PTR [ecx]
  4266dd:	sub    al,ah
  4266df:	inc    ebx
  4266e0:	add    BYTE PTR [ebx+edi*2],al
  4266e3:	enter  0xcd6b,0x1e
  4266e7:	lea    ecx,[ebp+eiz*8-0x33]
  4266eb:	jp     0x426726
  4266ed:	hlt    
  4266ee:	js     0x4266f1
  4266f0:	sbb    DWORD PTR [ebp+0x1e],0x47
  4266f4:	jne    0x426687
  4266f6:	sub    edi,eax
  4266f8:	je     0x4266dd
  4266fa:	mov    bh,dh
  4266fc:	jne    0x4266f8
  4266fe:	push   ebx
  4266ff:	jecxz  0x4266e4
  426701:	pop    ss
  426702:	lock mul BYTE PTR [ecx]
  426705:	fldcw  WORD PTR [ecx]
  426707:	les    eax,FWORD PTR [ebx-0x4c]
  42670a:	fiadd  DWORD PTR [esi]
  42670c:	mov    edi,DWORD PTR [ebx+0x5b]
  42670f:	enter  0x8a28,0x1a
  426713:	les    eax,FWORD PTR [ebx-0x3c]
  426716:	fld    QWORD PTR [ecx]
  426718:	push   ebx
  426719:	retf   0x88ee
  42671c:	cmp    eax,0x3f48039d
  426721:	popf   
  426722:	and    dl,bl
  426724:	mov    esi,0x516af4e8
  426729:	in     al,dx
  42672a:	sbb    DWORD PTR [eax+ebx*1-0x4fbe32e],edi
  426731:	dec    ebp
  426732:	loop   0x4266f5
  426734:	test   DWORD PTR [ebp+0x6af9de01],0x1907f1f4
  42673e:	fwait
  42673f:	or     al,0x84
  426741:	and    bl,BYTE PTR [ebx-0x1]
  426744:	inc    DWORD PTR [eax]
  426746:	es push ds
  426748:	adc    al,0x7f
  42674a:	inc    ebp
  42674b:	lods   al,BYTE PTR ds:[esi]
  42674c:	repz xor bl,BYTE PTR [esi]
  42674f:	repz les esi,FWORD PTR [ebx+0x6f]
  426753:	fdiv   QWORD PTR [esi+0x64]
  426756:	test   eax,0xbbf88116
  42675b:	push   esi
  42675c:	out    dx,eax
  42675d:	xchg   al,dl
  42675f:	outs   dx,DWORD PTR ds:[esi]
  426760:	and    BYTE PTR [ebp+0x19],0x5b
  426764:	and    BYTE PTR [ebp-0x5b],0x5b
  426768:	mov    al,BYTE PTR [ebp-0x6b]
  42676b:	mov    ecx,DWORD PTR [edx+0x7c8b0145]
  426771:	jne    0x426708
  426773:	cdq    
  426774:	addr16 out 0xa6,eax
  426777:	pop    ebx
  426778:	inc    DWORD PTR [ebp+ebx*8-0xaae306b]
  42677f:	fwait
  426780:	ltr    WORD PTR [ebp+0x6a4ec704]
  426787:	enter  0xc40a,0x5e
  42678b:	pop    ebx
  42678c:	aam    0xfa
  42678e:	test   al,0x7
  426790:	adc    DWORD PTR [eax-0x63],eax
  426793:	add    esi,DWORD PTR [ebx]
  426795:	cli    
  426796:	mov    dl,0x1
  426798:	loop   0x4267d0
  42679a:	rol    BYTE PTR [ecx+eiz*8+0x5e0d297b],cl
  4267a1:	or     ecx,eax
  4267a3:	inc    esi
  4267a4:	es add al,0xfa
  4267a7:	inc    edx
  4267a8:	adc    DWORD PTR [eax+eax*1],edi
  4267ab:	jmp    0x97324caa
  4267b0:	outs   dx,DWORD PTR ds:[esi]
  4267b1:	cmp    eax,0xd46fa50c
  4267b6:	dec    edi
  4267b7:	mov    ds:0x2a79e8c2,eax
  4267bc:	fcomp  DWORD PTR [ecx+0x29156d11]
  4267c2:	add    al,0xf6
  4267c4:	xchg   BYTE PTR [esi+0x6608cedf],ch
  4267ca:	stc    
  4267cb:	call   0xd0f6:0x4613f4e6
  4267d2:	jp     0x426784
  4267d4:	push   ss
  4267d5:	push   0xfffffff1
  4267d7:	mov    ds:0xcf07dc6f,al
  4267dc:	outs   dx,DWORD PTR ds:[esi]
  4267dd:	mov    ah,0x7b
  4267df:	(bad)  
  4267e0:	cmp    DWORD PTR [edi],esp
  4267e2:	adc    BYTE PTR [ebp+0x1bd0b5d1],bl
  4267e8:	dec    edx
  4267e9:	imul   BYTE PTR [eax-0x2e]
  4267ec:	dec    ebp
  4267ed:	mov    ah,0x2
  4267ef:	mov    bl,0x42
  4267f1:	inc    eax
  4267f2:	or     BYTE PTR [edx+eax*1+0x43faebe9],bl
  4267f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267fa:	add    esp,esi
  4267fc:	adc    eax,0x25d160d
  426801:	sub    eax,eax
  426803:	jle    0x426800
  426805:	call   0x2d44e846
  42680a:	(bad)  
  42680b:	retf   0xdef6
  42680e:	rol    BYTE PTR [eax],1
  426810:	imul   ebx,edx,0x69ee7ff
  426816:	add    dh,ch
  426818:	lea    ebp,[edx+0xe]
  42681b:	sub    DWORD PTR [ecx-0x245aff71],esp
  426821:	outs   dx,DWORD PTR ds:[esi]
  426822:	lods   al,BYTE PTR ss:[esi]
  426824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426825:	xchg   bh,al
  426827:	jmp    0xf4c96aca
  42682c:	xchg   esi,eax
  42682d:	inc    esi
  42682e:	aas    
  42682f:	jmp    0xa479aaff
  426834:	ins    BYTE PTR es:[edi],dx
  426835:	adc    eax,DWORD PTR [edi+0x3f4372d4]
  42683b:	jmp    0xeec076e9
  426840:	loop   0x4267c9
  426842:	add    cl,ch
  426844:	sahf   
  426845:	ret    0xa836
  426848:	dec    eax
  426849:	pop    ebx
  42684a:	push   edx
  42684b:	je     0x4267ef
  42684d:	jge    0x426853
  42684f:	jmp    0xedfc6af2
  426854:	jp     0x426885
  426856:	add    BYTE PTR [ecx+0x66f9d1e7],al
  42685c:	stos   BYTE PTR es:[edi],al
  42685d:	inc    edx
  42685e:	or     esp,DWORD PTR [ebp+0xe]
  426861:	add    al,BYTE PTR [eax]
  426863:	jmp    0xab0662a9
  426868:	sahf   
  426869:	xchg   DWORD PTR ds:0x2fcaed,ecx
  42686f:	jb     0x42683e
  426871:	push   es
  426872:	pop    gs
  426874:	add    BYTE PTR [esi+0x200a65d3],bl
  42687a:	push   cs
  42687b:	and    DWORD PTR [esi],0xaac3fa9d
  426881:	sahf   
  426882:	aad    0xfa
  426884:	fcomp  QWORD PTR [esi+0x57e93f46]
  42688a:	push   esp
  42688b:	xchg   DWORD PTR [eax],eax
  42688d:	pushf  
  42688e:	xor    ch,bh
  426890:	je     0x4268b3
  426892:	pop    ebp
  426893:	add    dl,BYTE PTR [ebp-0x4d]
  426896:	push   ds
  426897:	add    ah,al
  426899:	pop    es
  42689a:	add    esi,edi
  42689c:	(bad)  
  42689d:	das    
  42689e:	div    BYTE PTR [edx]
  4268a0:	cmc    
  4268a1:	das    
  4268a2:	daa    
  4268a3:	add    BYTE PTR [ebx],dl
  4268a5:	les    eax,FWORD PTR [esi]
  4268a7:	je     0x4268e4
  4268a9:	fiadd  WORD PTR [esi]
  4268ab:	dec    edi
  4268ac:	push   esi
  4268ad:	cmp    al,BYTE PTR [ecx]
  4268af:	mov    dl,0x89
  4268b1:	ret    0xbe01
  4268b4:	inc    esi
  4268b5:	mov    DWORD PTR [edx-0x42],ebx
  4268b8:	inc    esi
  4268b9:	jp     0x42685e
  4268bb:	inc    ebx
  4268bc:	inc    edx
  4268bd:	je     0x426883
  4268bf:	cmp    eax,0x3bdf370a
  4268c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268c5:	xor    ch,ah
  4268c7:	test   al,al
  4268c9:	test   al,0xf8
  4268cb:	mov    ebp,0x1175844
  4268d0:	jmp    0x426929
  4268d2:	les    eax,FWORD PTR [ebx+0x24]
  4268d5:	aas    
  4268d6:	add    ebx,esp
  4268d8:	push   ds
  4268d9:	add    BYTE PTR [edx-0x760104a4],cl
  4268df:	push   es
  4268e0:	les    eax,FWORD PTR [ebx+0x34]
  4268e3:	jmp    0x4268b9
  4268e5:	push   edi
  4268e6:	fiadd  WORD PTR [ecx]
  4268e8:	div    DWORD PTR ds:0x3b2e04
  4268ee:	arpl   WORD PTR [ebp+0x2e0c0df6],di
  4268f4:	cmp    eax,DWORD PTR [eax]
  4268f6:	adc    ecx,DWORD PTR [ebx+eiz*2-0x18]
  4268fa:	mov    DWORD PTR [edi-0x5],0x9f1e9fe
  426901:	inc    eax
  426902:	hlt    
  426903:	jg     0x426949
  426905:	and    al,0x9d
  426907:	pusha  
  426908:	rcl    BYTE PTR [esi+0x74],cl
  42690b:	sbb    bl,cl
  42690d:	xchg   BYTE PTR [ecx+0x6e0c67d8],bh
  426913:	xchg   ebp,eax
  426914:	mov    WORD PTR ds:0xffbf4e41,?
  42691a:	dec    ebx
  42691b:	cmp    ebx,0x82c4c586
  426921:	inc    ebp
  426922:	mov    eax,ds:0x9145832b
  426927:	sub    ebp,edx
  426929:	add    dh,ch
  42692b:	loop   0x42691e
  42692d:	sti    
  42692e:	mov    cl,BYTE PTR [ebp+0x4c09c07a]
  426934:	mov    WORD PTR [ebp+0x71],cs
  426937:	fiadd  WORD PTR [ebp+0x74]
  42693a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42693b:	inc    ebx
  42693c:	lods   eax,DWORD PTR ds:[esi]
  42693d:	cli    
  42693e:	add    BYTE PTR [edx-0x5c],ch
  426941:	jnp    0x426903
  426943:	jmp    0x5987ebb4
  426948:	sub    eax,DWORD PTR [ebx-0x15d4aabb]
  42694e:	adc    al,0xee
  426950:	repnz icebp 
  426952:	sti    
  426953:	inc    edx
  426954:	xchg   ebp,eax
  426955:	jp     0x426917
  426957:	mov    cl,0x64
  426959:	test   BYTE PTR [ebp+0x35],bh
  42695c:	pop    ebx
  42695d:	jmp    0x426967
  42695f:	push   ss
  426960:	inc    esi
  426961:	ja     0x42694a
  426963:	loopne 0x42696d
  426965:	inc    esp
  426966:	out    0x9f,eax
  426968:	mov    edi,esi
  42696a:	pop    edx
  42696b:	jae    0x42691d
  42696d:	inc    esi
  42696e:	mov    edi,0x23e2f670
  426973:	adc    eax,0x9c7462da
  426978:	pop    ebx
  426979:	dec    DWORD PTR [esi+0x4b]
  42697c:	loopne 0x4269a7
  42697e:	hlt    
  42697f:	pop    DWORD PTR [edx]
  426981:	test   eax,0x1a314e03
  426986:	jmp    0x42692e
  426988:	inc    esi
  426989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42698a:	add    ebx,DWORD PTR [edx]
  42698c:	dec    edx
  42698d:	pusha  
  42698e:	add    DWORD PTR ss:[esi-0x5a],0xd12f1403
  426996:	aas    
  426997:	jp     0x42699b
  426999:	repnz push eax
  42699b:	cmp    esp,DWORD PTR [esi]
  42699d:	xchg   edx,eax
  42699e:	mov    eax,0x42640b5
  4269a3:	add    BYTE PTR [esi+0x6d],cl
  4269a6:	hlt    
  4269a7:	das    
  4269a8:	scas   eax,DWORD PTR es:[edi]
  4269a9:	ret    0x82e8
  4269ac:	pop    ecx
  4269ad:	push   DWORD PTR [ecx]
  4269af:	ja     0x426a20
  4269b1:	add    DWORD PTR [esp+edx*4],0x4d
  4269b5:	shr    al,0x4
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	test   BYTE PTR [esi+0x5],bh
  4269bc:	popf   
  4269bd:	add    ah,BYTE PTR [ebx+ebx*2-0xf]
  4269c1:	xor    ecx,DWORD PTR [ebx]
  4269c3:	sub    DWORD PTR [edx-0x3ccaeafe],0xffffffc0
  4269ca:	arpl   cx,si
  4269cc:	loop   0x426998
  4269ce:	sbb    bl,0x2
  4269d1:	ins    BYTE PTR es:[edi],dx
  4269d2:	sub    dl,0xdd
  4269d5:	jge    0x4269cb
  4269d7:	pop    ebx
  4269d8:	aad    0x5a
  4269da:	sbb    DWORD PTR [esi+esi*1-0x6f88e994],ebp
  4269e1:	xor    bh,0xc3
  4269e4:	and    bh,BYTE PTR [edi-0x5b]
  4269e7:	add    ebx,DWORD PTR [ebx]
  4269e9:	mov    esp,0x7d9de9b5
  4269ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269ef:	rcr    DWORD PTR [edx+0x77],cl
  4269f2:	sub    edx,esp
  4269f4:	cli    
  4269f5:	inc    edx
  4269f6:	inc    DWORD PTR [ebx]
  4269f8:	popf   
  4269f9:	fdivr  st,st(7)
  4269fb:	test   eax,0x91c3f625
  426a00:	jbe    0x426a26
  426a02:	test   al,0x26
  426a04:	push   0xffffffe4
  426a06:	inc    ebx
  426a07:	ins    BYTE PTR es:[edi],dx
  426a08:	add    ah,cl
  426a0a:	iret   
  426a0b:	push   edi
  426a0c:	add    DWORD PTR [edx-0x48f10466],ebp
  426a12:	(bad)  
  426a13:	mov    WORD PTR [esi+ecx*4-0x36],?
  426a17:	out    0xd5,eax
  426a19:	push   es
  426a1a:	push   0xcfdc64fb
  426a1f:	mov    BYTE PTR [esi+esi*4-0x228f3d7c],ah
  426a26:	xlat   BYTE PTR ds:[ebx]
  426a27:	mov    WORD PTR [ecx+ecx*4+0x40],ss
  426a2b:	inc    ebp
  426a2c:	pop    ebp
  426a2d:	lahf   
  426a2e:	add    al,BYTE PTR [eax]
  426a30:	jmp    0x7491724c
  426a35:	pop    ebp
  426a36:	aas    
  426a37:	push   eax
  426a38:	jle    0x4269db
  426a3a:	add    al,BYTE PTR [eax]
  426a3c:	imul   esp,DWORD PTR [edi],0xa9b8e83f
  426a42:	add    al,BYTE PTR [eax]
  426a44:	ins    BYTE PTR es:[edi],dx
  426a45:	fdivrp st(6),st
  426a47:	adc    DWORD PTR [edx+0x3d],ebp
  426a4a:	(bad)  
  426a4c:	add    bl,BYTE PTR [ebp+0x7119457d]
  426a52:	in     eax,0x3
  426a54:	sbb    dl,BYTE PTR [eax*8-0x3236e63d]
  426a5b:	xor    eax,0xc1eb9ee9
  426a60:	in     eax,0xb3
  426a62:	mov    ebp,0xe4d7dc73
  426a67:	inc    ecx
  426a68:	ins    BYTE PTR es:[edi],dx
  426a69:	or     eax,0x41584f
  426a6e:	dec    ebx
  426a6f:	lahf   
  426a70:	sti    
  426a71:	dec    esi
  426a72:	hlt    
  426a73:	mov    edi,0x4341008c
  426a78:	push   ebx
  426a79:	call   0x39f6ee
  426a7e:	jns    0x426ac2
  426a80:	outs   dx,DWORD PTR ds:[esi]
  426a81:	push   eax
  426a82:	fiadd  WORD PTR ds:0x7a27db2b
  426a88:	inc    ebp
  426a89:	aam    0x14
  426a8b:	cmp    al,0x88
  426a8d:	jge    0x426abf
  426a8f:	hlt    
  426a90:	adc    al,0x70
  426a92:	les    edi,FWORD PTR [esi]
  426a94:	sti    
  426a95:	test   BYTE PTR [edx+esi*2+0xc],dh
  426a99:	mov    eax,DWORD PTR [edx+0x30758c4f]
  426a9f:	xlat   BYTE PTR ds:[ebx]
  426aa0:	repz cmp dh,BYTE PTR [esi+edi*8-0x3979fd1e]
  426aa8:	add    eax,0xfffffff0
  426aab:	adc    ecx,DWORD PTR [ebp-0x73b147bb]
  426ab1:	inc    ebp
  426ab2:	push   eax
  426ab3:	dec    edi
  426ab4:	add    bh,0x6c
  426ab7:	imul   edi,DWORD PTR [eax],0x0
  426aba:	test   cl,ch
  426abc:	mov    edi,0xff5c4c74
  426ac1:	mov    ecx,es
  426ac3:	outs   dx,BYTE PTR ds:[esi]
  426ac4:	dec    ebx
  426ac5:	push   0x70
  426ac7:	add    DWORD PTR [ebp+0x4c],0xd4458194
  426ace:	xchg   esp,eax
  426acf:	jge    0x426b2e
  426ad1:	jo     0x426ad3
  426ad3:	sbb    al,0xc9
  426ad5:	cmp    BYTE PTR [eax],al
  426ad7:	xor    al,0x5c
  426ad9:	inc    ebx
  426ada:	lea    esi,[ecx]
  426adc:	mov    bl,BYTE PTR [eax-0x18]
  426adf:	xchg   esp,eax
  426ae0:	xchg   edi,esi
  426ae2:	call   FWORD PTR [esi+0x7c758c3d]
  426ae8:	inc    esi
  426ae9:	jecxz  0x426b30
  426aeb:	and    esi,eax
  426aed:	imul   BYTE PTR [edx-0x63]
  426af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af1:	xor    BYTE PTR [ebp+0x69],0xb3
  426af5:	addr16 ss cmp al,cl
  426af9:	je     0x426a88
  426afb:	pusha  
  426afc:	add    eax,DWORD PTR [edi+0x39e45945]
  426b02:	mov    DWORD PTR [eax-0x5d],esp
  426b05:	xchg   BYTE PTR [ebp+0x69],bl
  426b08:	sbb    BYTE PTR [ebx-0xa45f91],bh
  426b0e:	call   edx
  426b10:	xchg   bl,ch
  426b12:	mov    WORD PTR [eax-0x41],fs
  426b15:	shl    DWORD PTR [ebp+0x52],cl
  426b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b19:	cmp    BYTE PTR [ebp-0x48b975f],0xc5
  426b20:	sub    al,0x91
  426b22:	cli    
  426b23:	stos   BYTE PTR es:[edi],al
  426b24:	xchg   edx,eax
  426b25:	(bad)  
  426b26:	test   ch,bl
  426b28:	loope  0x426b5c
  426b2a:	data16 lahf 
  426b2c:	(bad)  
  426b2d:	icebp  
  426b2e:	inc    ebx
  426b2f:	repz in al,0x13
  426b32:	dec    edi
  426b33:	sbb    dh,bl
  426b35:	cli    
  426b36:	cli    
  426b37:	add    BYTE PTR [edx-0x634830c0],al
  426b3d:	pop    ebx
  426b3e:	(bad)  
  426b3f:	jg     0x426ac6
  426b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b42:	aaa    
  426b43:	add    BYTE PTR [ebp-0x7b8bc122],bl
  426b49:	(bad)  
  426b4b:	imul   ebx,DWORD PTR [ebp-0x2772ffeb],0xffffffff
  426b52:	shl    DWORD PTR [ebp-0x5f],cl
  426b55:	sub    al,0x83
  426b57:	test   DWORD PTR [ecx-0x32048b80],ebx
  426b5d:	xchg   ebx,eax
  426b5e:	aad    0x38
  426b60:	popf   
  426b61:	pop    ebx
  426b62:	add    bl,0xa1
  426b65:	or     ebx,ebp
  426b67:	enter  0x222,0xac
  426b6b:	out    dx,eax
  426b6c:	pop    ss
  426b6d:	mov    bh,0xd8
  426b6f:	out    dx,al
  426b70:	xor    cl,cl
  426b72:	mov    dl,0xd8
  426b74:	mov    edi,DWORD PTR [edi]
  426b76:	ror    DWORD PTR [edx+0x42],1
  426b79:	iret   
  426b7a:	ins    DWORD PTR es:[edi],dx
  426b7b:	addr16 sbb al,0x56
  426b7e:	leave  
  426b7f:	or     ebx,DWORD PTR [ebp-0x183269fe]
  426b85:	out    dx,al
  426b86:	loopne 0x426bb8
  426b88:	retf   0x9c76
  426b8b:	pop    edi
  426b8c:	and    al,0xc7
  426b8e:	sbb    al,0x6b
  426b90:	lea    esi,[edi+0x422103e8]
  426b96:	fidivr DWORD PTR [edi+0x5c]
  426b99:	add    ebp,ecx
  426b9b:	add    eax,DWORD PTR [eax]
  426b9d:	push   0xffffffdc
  426b9f:	out    0x86,eax
  426ba1:	pop    eax
  426ba2:	outs   dx,BYTE PTR ds:[esi]
  426ba3:	cdq    
  426ba4:	je     0x426bd6
  426ba6:	pop    esi
  426ba7:	pop    esi
  426ba8:	mov    esi,0x814459ba
  426bad:	xchg   edi,eax
  426bae:	push   0xbe20746e
  426bb3:	int3   
  426bb4:	jge    0x426bc6
  426bb6:	imul   eax,ecx,0xffffffa9
  426bb9:	rol    BYTE PTR [edx],1
  426bbb:	jmp    0xeaaae346
  426bc0:	xchg   DWORD PTR [ecx+eax*1-0x2331fc17],edx
  426bc7:	fbstp  TBYTE PTR [esi]
  426bc9:	push   ebx
  426bca:	jl     0x426b77
  426bcc:	int    0x4f
  426bce:	jb     0x426c34
  426bd0:	push   esi
  426bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bd2:	jge    0x426b62
  426bd4:	add    al,0x9d
  426bd6:	add    bh,bh
  426bd8:	mov    esi,0xcc8ce611
  426bdd:	inc    edx
  426bde:	or     BYTE PTR [ebx+0x73],al
  426be1:	ss (bad) 
  426be4:	and    al,0x1c
  426be6:	out    0xd7,al
  426be8:	adc    ecx,eax
  426bea:	push   cs
  426beb:	mov    ds:0xce178e66,al
  426bf0:	jo     0x426bde
  426bf2:	push   DWORD PTR [esi]
  426bf4:	pop    edx
  426bf5:	sahf   
  426bf6:	test   al,bl
  426bf8:	jmp    0xb4c96e9b
  426bfd:	test   BYTE PTR [eax+0x72003545],0x2e
  426c04:	mov    BYTE PTR [eax-0x1c],ah
  426c07:	push   edi
  426c08:	test   DWORD PTR [edi],esi
  426c0a:	sahf   
  426c0b:	jle    0x426bc5
  426c0d:	jmp    0xdfc26eb0
  426c12:	sahf   
  426c13:	sti    
  426c14:	add    DWORD PTR [esi-0x5f],0x2
  426c18:	add    BYTE PTR [edx-0x33],ah
  426c1b:	jg     0x426c21
  426c1d:	jo     0x426bcb
  426c1f:	inc    edi
  426c20:	test   esi,edi
  426c22:	lahf   
  426c23:	jle    0x426bc5
  426c25:	jmp    0xaec26ec8
  426c2a:	sahf   
  426c2b:	sti    
  426c2c:	cmp    DWORD PTR [esi-0x62],0x2
  426c30:	add    BYTE PTR [edx+0x62],dh
  426c33:	jg     0x426c3d
  426c35:	ins    BYTE PTR es:[edi],dx
  426c36:	(bad)  
  426c38:	and    DWORD PTR [edx-0x62],0x2
  426c3c:	add    BYTE PTR [ecx-0x35],ch
  426c3f:	add    cl,BYTE PTR [ebx]
  426c41:	sbb    BYTE PTR gs:[edx],al
  426c44:	add    cl,ch
  426c46:	and    edi,DWORD PTR [edx]
  426c48:	sti    
  426c49:	sbb    DWORD PTR [ebx-0x80],ecx
  426c4c:	(bad)  
  426c4d:	xchg   ecx,eax
  426c4e:	jmp    0x426be2
  426c50:	cli    
  426c51:	sahf   
  426c52:	and    eax,0x1dd87442
  426c57:	mov    ebp,0xac693ae3
  426c5c:	cmp    BYTE PTR [eax],al
  426c5e:	sub    al,0x3
  426c60:	add    BYTE PTR [ebp-0x105c97],cl
  426c66:	add    BYTE PTR [ebx-0x4d6d4435],dh
  426c6c:	hlt    
  426c6d:	pop    eax
  426c6e:	pop    ecx
  426c6f:	xchg   ebx,ebx
  426c71:	div    BYTE PTR [edx+edx*2-0x18]
  426c75:	lds    edx,FWORD PTR [ecx-0x7f]
  426c78:	inc    edx
  426c79:	imul   eax
  426c7b:	out    dx,eax
  426c7c:	out    0xf5,eax
  426c7e:	dec    DWORD PTR [eax+0x6f4f73c3]
  426c84:	push   0xffffffeb
  426c86:	mov    esi,DWORD PTR [ecx]
  426c88:	jecxz  0x426cd8
  426c8a:	push   esi
  426c8b:	inc    ecx
  426c8c:	cmp    dl,bl
  426c8e:	push   eax
  426c8f:	inc    ebx
  426c90:	sbb    ecx,DWORD PTR [eax]
  426c92:	add    ah,al
  426c94:	xor    DWORD PTR [ebp-0x90b5460],0xf68d3ee8
  426c9e:	inc    DWORD PTR [edi-0x41]
  426ca1:	or     eax,DWORD PTR [ebx+0x2b73f49c]
  426ca7:	aas    
  426ca8:	rcl    DWORD PTR [eax-0x73],0x1
  426cac:	xlat   BYTE PTR ds:[ebx]
  426cad:	out    0x48,eax
  426caf:	psllw  mm6,mm6
  426cb2:	test   BYTE PTR [ebx+ebp*2+0x17],al
  426cb6:	cmp    DWORD PTR [ecx-0x4674f79a],0x66
  426cbd:	adc    bl,0x9f
  426cc0:	cmp    eax,0x29060ff3
  426cc5:	idiv   edi
  426cc7:	xor    ecx,eax
  426cc9:	or     edi,edi
  426ccb:	add    BYTE PTR [ecx-0x6dd0180e],ch
  426cd1:	lock test BYTE PTR [ebx-0x75000d67],0x9d
  426cd9:	push   ss
  426cda:	ins    BYTE PTR es:[edi],dx
  426cdb:	xchg   eax,eax
  426cdd:	(bad)  
  426cde:	pop    esp
  426cdf:	cmp    al,0xeb
  426ce1:	jge    0x426d54
  426ce3:	pop    ebx
  426ce4:	es pop ds
  426ce6:	jo     0x426d42
  426ce8:	(bad)  
  426ce9:	mov    ds:0xe9d0442,al
  426cee:	jge    0x426cdc
  426cf0:	es xchg edi,eax
  426cf2:	sti    
  426cf3:	add    BYTE PTR [ecx],0x74
  426cf6:	add    eax,0x84a49d00
  426cfb:	shl    BYTE PTR [ecx-0x5a8a8f55],0xee
  426d02:	cmp    al,0xf0
  426d05:	and    al,0x71
  426d07:	push   eax
  426d08:	push   ss
  426d09:	xor    ebx,DWORD PTR [edx+eiz*2+0x5b]
  426d0d:	pop    ebx
  426d0e:	inc    DWORD PTR [ebp+ebx*8+0x5af1e887]
  426d15:	pop    edi
  426d16:	add    eax,0x82de5a74
  426d1b:	clc    
  426d1c:	shl    ah,0x70
  426d1f:	push   eax
  426d20:	lds    esp,FWORD PTR [eax-0xd4d048f]
  426d26:	ret    0x200b
  426d29:	sbb    al,0xf8
  426d2b:	cmp    ecx,DWORD PTR [esi-0x73]
  426d2e:	iret   
  426d2f:	cli    
  426d30:	add    BYTE PTR [eax-0x62bfee1d],dh
  426d36:	lock mov edi,0x7ab3160b
  426d3c:	jae    0x426cd3
  426d3e:	pop    eax
  426d3f:	cmp    al,0xe8
  426d41:	js     0x426d72
  426d43:	outs   dx,BYTE PTR ds:[esi]
  426d44:	sti    
  426d45:	sbb    DWORD PTR [ebx+0x141611f3],ebx
  426d4b:	add    bh,bh
  426d4d:	cwde   
  426d4e:	or     BYTE PTR [ecx+0x75],dh
  426d51:	test   eax,0xa8713902
  426d56:	xor    dh,bl
  426d58:	ret    
  426d59:	dec    edx
  426d5a:	sub    BYTE PTR [ebp-0x233a6201],0x70
  426d61:	mov    al,0xf6
  426d63:	nop
  426d64:	mov    fs,eax
  426d66:	fs jp  0x426d3a
  426d69:	shr    DWORD PTR [edx+ebp*1+0x8],cl
  426d6d:	pushf  
  426d6e:	out    dx,al
  426d6f:	fdivr  QWORD PTR [esi+0x20]
  426d72:	push   0x64
  426d74:	jo     0x426d8c
  426d76:	rcl    BYTE PTR [eax-0x21],cl
  426d79:	inc    ebp
  426d7a:	fs push edx
  426d7c:	xor    al,0xdd
  426d7e:	les    ebx,FWORD PTR [edi]
  426d80:	inc    ebp
  426d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d82:	add    bl,BYTE PTR [esp+edi*2+0x6b458101]
  426d89:	sbb    al,0x56
  426d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d8c:	add    eax,0xdd93029d
  426d91:	addr16 ja 0x426d31
  426d94:	daa    
  426d95:	add    BYTE PTR [ecx+0x1a410ca],dl
  426d9b:	adc    bh,BYTE PTR gs:[edi+ebx*8+0x76]
  426da0:	popf   
  426da1:	daa    
  426da2:	shr    DWORD PTR gs:[edi-0x39],cl
  426da6:	jle    0x426da2
  426da8:	mov    ch,0x43
  426daa:	dec    ebp
  426dab:	sar    BYTE PTR [esi+0x22],cl
  426dae:	dec    ebp
  426daf:	cmp    eax,0xaab927a5
  426db4:	outs   dx,BYTE PTR ds:[esi]
  426db5:	les    edx,FWORD PTR [edx-0x42d7c285]
  426dbb:	jns    0x426dea
  426dbd:	sub    BYTE PTR [ecx-0x3ad7da87],bh
  426dc3:	arpl   sp,bx
  426dc5:	shl    DWORD PTR [ebx+0x5d88e8c2],cl
  426dcb:	out    dx,al
  426dcc:	inc    DWORD PTR [esi+0x47]
  426dcf:	mov    ah,0x8c
  426dd1:	xor    eax,0x91582e85
  426dd6:	cmp    ah,BYTE PTR [eax-0x40e36105]
  426ddc:	and    esp,ecx
  426dde:	sar    DWORD PTR [esi-0x40e20edd],0x23
  426de5:	xor    DWORD PTR [eax+0x1ddd23be],esi
  426deb:	mov    edi,0xbea1ed23
  426df0:	and    eax,ebp
  426df2:	sbb    eax,0xeeb123bf
  426df7:	jbe    0x426e45
  426df9:	add    eax,0x443fad00
  426dfe:	or     eax,0xe8fffeb5
  426e03:	sahf   
  426e04:	aas    
  426e05:	inc    esp
  426e06:	or     eax,0xe90001bd
  426e0b:	sahf   
  426e0c:	aas    
  426e0d:	inc    esp
  426e0e:	or     eax,0xe9fb64a9
  426e13:	sahf   
  426e14:	pop    edx
  426e15:	pop    esi
  426e16:	mov    cl,0x9e
  426e18:	add    al,BYTE PTR [edi+0x4476f127]
  426e1e:	int    0x2
  426e20:	mov    ah,0x4f
  426e22:	add    esi,ecx
  426e24:	mov    esi,0x4325e8ff
  426e29:	je     0x426e06
  426e2b:	sbb    eax,0xcea123bf
  426e30:	jbe    0x426e7e
  426e32:	lds    ebp,FWORD PTR [edx-0x46f2bb87]
  426e38:	pop    edx
  426e39:	cmp    dh,BYTE PTR [ecx]
  426e3b:	mov    eax,ds:0x9caaf202
  426e40:	out    dx,al
  426e41:	or     eax,0x101f6262
  426e46:	add    bh,ch
  426e48:	inc    edx
  426e49:	add    ecx,DWORD PTR [ecx+0x2443e875]
  426e4f:	inc    eax
  426e50:	call   0xfeff7aa1
  426e55:	push   ebp
  426e56:	mov    esp,DWORD PTR [ecx]
  426e58:	push   edx
  426e59:	mov    ebp,0x824a3408
  426e5e:	in     al,dx
  426e5f:	add    BYTE PTR [edi+0x725363c3],dh
  426e65:	dec    ebx
  426e66:	mov    WORD PTR [ebp+0x18],es
  426e69:	dec    edi
  426e6a:	mov    WORD PTR [ebp-0x50],es
  426e6d:	dec    edi
  426e6e:	add    cl,BYTE PTR gs:[edi-0x7400f63a]
  426e75:	aam    0x2a
  426e77:	fstp   TBYTE PTR [ebp+0x396af751]
  426e7d:	fs inc esp
  426e7f:	pop    ebp
  426e80:	pusha  
  426e81:	xor    BYTE PTR [ebp-0x60],0x2c
  426e85:	(bad)  
  426e86:	mov    cl,0xa3
  426e88:	pop    ebx
  426e89:	aam    0x61
  426e8b:	dec    esi
  426e8c:	jns    0x426f00
  426e8e:	out    dx,eax
  426e8f:	pop    eax
  426e90:	pop    esp
  426e91:	push   esi
  426e92:	call   0x5f85:0xbee88bff
  426e99:	imul   edi,ebp,0xffffff8a
  426e9c:	ja     0x426eed
  426e9e:	mov    WORD PTR [ebp+0x54],es
  426ea1:	dec    edi
  426ea2:	add    BYTE PTR gs:[esi],bl
  426ea5:	jmp    DWORD PTR [ecx+0x1]
  426ea8:	mov    WORD PTR [edx-0x57],gs
  426eab:	jmp    FWORD PTR [ebx+0x714c480]
  426eb1:	(bad)  
  426eb2:	push   ebx
  426eb3:	dec    esp
  426eb4:	mov    dh,al
  426eb6:	push   esi
  426eb7:	pop    esi
  426eb8:	fistp  WORD PTR ds:0xe30f55bb
  426ebe:	jp     0x426eac
  426ec0:	popf   
  426ec1:	repz rcl BYTE PTR [ecx+0x0],1
  426ec5:	rol    bl,cl
  426ec7:	pop    es
  426ec8:	adc    BYTE PTR [ebp+0x16f8786b],bl
  426ece:	daa    
  426ecf:	adc    al,0x7f
  426ed1:	mov    ebp,0x9d23806b
  426ed6:	(bad)  
  426ed9:	mov    BYTE PTR [ebx-0x7f62c067],cl
  426edf:	adc    eax,DWORD PTR [esi+ebp*4]
  426ee2:	sub    eax,DWORD PTR [edi+eax*4]
  426ee5:	push   ebp
  426ee6:	jecxz  0x426eb2
  426ee8:	repz sbb BYTE PTR [ebp-0x5490fd0d],ah
  426eef:	push   edi
  426ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ef1:	popf   
  426ef2:	imul   edi,edi,0xfffffffa
  426ef5:	nop
  426ef6:	aas    
  426ef7:	ins    BYTE PTR es:[edi],dx
  426ef8:	adc    eax,0xffbf5a89
  426efd:	je     0x426ef2
  426eff:	leave  
  426f00:	push   ecx
  426f01:	adc    BYTE PTR [edi-0x646299c5],ch
  426f07:	inc    ebp
  426f08:	inc    ebp
  426f09:	imul   BYTE PTR [edx+0x6c]
  426f0c:	adc    eax,0xffbf39b1
  426f11:	adc    eax,0xe17f3b9f
  426f16:	aas    
  426f17:	jbe    0x426f76
  426f19:	mov    ebp,0x9d1003e9
  426f1e:	imul   edi,DWORD PTR [edi+0x7d],0xffffffa9
  426f22:	imul   esi,edx,0xe
  426f25:	sub    BYTE PTR [edi+0x4b005063],ah
  426f2b:	or     bl,dh
  426f2d:	rep stos BYTE PTR es:[edi],al
  426f2f:	(bad)  
  426f30:	idiv   dl
  426f32:	mov    BYTE PTR [ebx+0x49d4012],bh
  426f38:	adc    edi,ebx
  426f3a:	or     BYTE PTR [ebx],al
  426f3c:	add    DWORD PTR [edi-0x20],edi
  426f3f:	dec    esi
  426f40:	dec    edi
  426f41:	cld    
  426f42:	shl    BYTE PTR [ecx+0x5c],cl
  426f45:	cld    
  426f46:	and    eax,0x886cc4d7
  426f4b:	jbe    0x426f29
  426f4d:	ret    
  426f4e:	push   0xffffff86
  426f50:	test   eax,0xdc618af6
  426f55:	or     ebp,DWORD PTR [edx+eax*8+0x5382ee8]
  426f5c:	jmp    0x6c663f64
  426f61:	(bad)  
  426f62:	xchg   esi,eax
  426f63:	mov    dl,0x80
  426f65:	in     eax,dx
  426f66:	mov    dh,0x2
  426f68:	jmp    0x24cf5ec5
  426f6d:	push   0x10f53d20
  426f72:	xlat   BYTE PTR es:[ebx]
  426f74:	jl     0x426fee
  426f76:	pusha  
  426f77:	repnz and BYTE PTR [ecx+eiz*2],0x60
  426f7c:	bound  eax,QWORD PTR [esi+0x4588d6dd]
  426f82:	pop    eax
  426f83:	pop    ebp
  426f84:	jmp    0x4198dff5
  426f89:	sbb    BYTE PTR [edx+0x60],0x42
  426f8d:	add    DWORD PTR [eax],0x68
  426f90:	pop    ebp
  426f91:	jmp    0xacd0088c
  426f96:	adc    edx,esi
  426f98:	adc    DWORD PTR [ecx-0xe],eax
  426f9b:	pop    ebx
  426f9c:	pusha  
  426f9d:	and    bh,BYTE PTR [ecx+0x60]
  426fa0:	pop    ebp
  426fa1:	mov    edx,0x274b6bcd
  426fa6:	pop    ss
  426fa7:	popf   
  426fa8:	mov    bh,0x5d
  426faa:	pop    edi
  426fab:	xor    ah,BYTE PTR [esi+0x1]
  426fae:	cmp    BYTE PTR [ecx+0x7ebf6615],0xa
  426fb5:	add    dh,dh
  426fb7:	push   0xffffff89
  426fb9:	sbb    eax,0xffc2adfd
  426fbe:	outs   dx,BYTE PTR ds:[esi]
  426fc0:	call   0x609d14d0
  426fc5:	xchg   cl,dl
  426fc7:	push   es
  426fc8:	push   eax
  426fc9:	xchg   DWORD PTR [esi],edx
  426fcb:	sar    edi,1
  426fcd:	icebp  
  426fce:	(bad)  
  426fcf:	neg    bh
  426fd1:	idiv   DWORD PTR [esi-0x14ff7b9a]
  426fd7:	sahf   
  426fd8:	add    al,BYTE PTR [edi+0x3f46b2dc]
  426fde:	jmp    0x6c6b104e
  426fe3:	lea    ecx,[edx]
  426fe5:	das    
  426fe6:	mov    al,ds:0xde13cc88
  426feb:	sbb    al,0x6a
  426fed:	add    ecx,ebp
  426fef:	sahf   
  426ff0:	fistp  QWORD PTR [ecx-0x2b]
  426ff3:	add    BYTE PTR [ecx-0x209df22b],bl
  426ff9:	(bad)  
  426ffb:	and    DWORD PTR [ebp-0x208dfa2a],ebx
  427001:	and    ecx,DWORD PTR [ecx+0x13161e6]
  427007:	jmp    0xf987f7aa
  42700c:	ret    
  42700d:	inc    ecx
  42700e:	je     0x426ffb
  427010:	imul   ecx,DWORD PTR [edx],0x5b9abf7f
  427016:	or     ebp,DWORD PTR [edi+edi*4+0x2]
  42701a:	add    cl,ch
  42701c:	push   ebx
  42701d:	les    eax,FWORD PTR [edi]
  42701f:	das    
  427020:	fild   WORD PTR [ebx]
  427022:	add    DWORD PTR [edi-0x3b],ebx
  427025:	inc    ebx
  427026:	aas    
  427027:	jmp    0xc586faf8
  42702c:	call   0x3ff5:0xa400155b
  427033:	add    BYTE PTR [ebx+0x488d1352],ah
  427039:	push   DWORD PTR [ebx]
  42703b:	dec    DWORD PTR [ecx]
  42703d:	adc    BYTE PTR [eax-0x1],dl
  427040:	call   0xb8cf9467
  427045:	and    al,BYTE PTR [edi+edi*8-0x65]
  427049:	mov    esi,0xec63fe74
  42704e:	dec    ebp
  42704f:	mov    BYTE PTR [eax+0x7ff0f22],bh
  427055:	loopne 0x427085
  427057:	call   0xf7155d5c
  42705c:	(bad)  
  42705d:	mov    edi,0x3fe7ad3
  427062:	pop    esp
  427063:	jg     0x426ff1
  427065:	xor    eax,0x90800003
  42706a:	and    cl,BYTE PTR [ebx]
  42706c:	add    BYTE PTR [ebx-0x21],dl
  42706f:	nop
  427070:	add    DWORD PTR [ebx+eax*1],esi
  427073:	arpl   si,si
  427075:	dec    esp
  427076:	or     BYTE PTR ds:0xfb484824,dh
  42707c:	mov    WORD PTR [eax-0x45afdbde],?
  427082:	inc    ecx
  427083:	(bad)  
  427084:	jmp    DWORD PTR [ebx+0x14]
  427087:	call   0xf72e7594
  42708c:	lea    edx,[eax]
  42708e:	jmp    FWORD PTR [ebx]
  427090:	push   ecx
  427091:	ins    DWORD PTR es:[edi],dx
  427092:	lahf   
  427093:	pop    ds
  427094:	and    al,0x6f
  427096:	add    al,0x62
  427098:	add    DWORD PTR [ebx+edi*4],esi
  42709b:	les    eax,FWORD PTR [edx]
  42709d:	sub    esp,0xffffff88
  4270a0:	inc    esp
  4270a1:	fdivr  st,st(2)
  4270a3:	add    BYTE PTR [esi-0x3c],0xdd
  4270a7:	inc    ebx
  4270a8:	and    al,0x9d
  4270aa:	xor    DWORD PTR [edx+0x42],edi
  4270ad:	mov    DWORD PTR [edx+ecx*2],edi
  4270b0:	mov    DWORD PTR [ecx+0x4d],esp
  4270b3:	and    edi,DWORD PTR [ecx]
  4270b5:	inc    ecx
  4270b6:	inc    ebp
  4270b7:	pop    ds
  4270b8:	or     esp,DWORD PTR [ecx]
  4270ba:	int    0xfe
  4270bc:	inc    DWORD PTR [eax]
  4270be:	popf   
  4270bf:	mov    esi,0x1bbd23ba
  4270c4:	pop    esp
  4270c5:	adc    BYTE PTR [edx+0x3d],bl
  4270c8:	imul   eax,DWORD PTR [ebp+ebx*2-0x626a849b],0xbc65ff6b
  4270d3:	inc    esp
  4270d4:	xor    eax,ebp
  4270d6:	mov    al,0x6a
  4270d8:	push   0x2d9426fb
  4270dd:	test   ecx,0xaa38e132
  4270e3:	push   ebp
  4270e5:	cli    
  4270e6:	leave  
  4270e7:	inc    edi
  4270e8:	sub    edi,ebx
  4270ea:	mov    cl,0x4f
  4270ec:	sub    edx,DWORD PTR [ebx+0x45]
  4270ef:	out    0xc0,eax
  4270f1:	jmp    FWORD PTR [edx]
  4270f3:	std    
  4270f4:	pop    ebx
  4270f5:	sbb    al,0xd7
  4270f7:	(bad)  [eax-0x5]
  4270fa:	xchg   ecx,eax
  4270fb:	dec    edi
  4270fc:	pop    ds
  4270fd:	xchg   DWORD PTR [ecx+0x47],ebx
  427100:	pop    ss
  427101:	dec    edi
  427102:	cmc    
  427103:	fstp   TBYTE PTR [edi-0x6]
  427106:	add    dl,bl
  427108:	mov    edi,0x44f09523
  42710d:	je     0x427159
  42710f:	jae    0x427115
  427111:	adc    BYTE PTR [ebp-0x46bb8995],bl
  427117:	aas    
  427118:	push   edi
  427119:	lds    esp,FWORD PTR [ebp+edx*1+0x69]
  42711d:	xchg   ebp,edx
  42711f:	push   eax
  427120:	ins    BYTE PTR es:[edi],dx
  427121:	je     0x427123
  427123:	xchg   DWORD PTR [edx],eax
  427125:	je     0x4270e7
  427127:	jle    0x427127
  427129:	mov    eax,0xccd6b7d0
  42712e:	and    ebx,esi
  427130:	add    eax,0x29d03b9
  427135:	add    cl,BYTE PTR [edi]
  427137:	inc    ebp
  427138:	imul   DWORD PTR [eax+0x7d422003]
  42713e:	or     eax,0x2ce0c51a
  427143:	dec    edx
  427144:	(bad)  
  427145:	cmc    
  427146:	loope  0x42710d
  427148:	cli    
  427149:	push   esp
  42714a:	cli    
  42714b:	ja     0x427123
  42714d:	or     al,0x30
  42714f:	jbe    0x427127
  427151:	add    al,0x30
  427153:	int    0x6a
  427155:	or     cl,al
  427157:	bound  ebx,QWORD PTR [ebp+0x12]
  42715a:	pop    esp
  42715b:	adc    eax,0x5668b2cb
  427160:	(bad)  
  427161:	add    al,0xc
  427163:	xor    eax,0x466a30ad
  427168:	pop    ebp
  427169:	adc    eax,0x4b6a7d20
  42716e:	mov    edx,0xef8a5d34
  427173:	jle    0x42719f
  427175:	xchg   ecx,eax
  427176:	xchg   ah,dl
  427178:	pop    esp
  427179:	jp     0x4271f7
  42717b:	popa   
  42717c:	es mov ecx,0x5dfa5f7a
  427182:	mov    edi,0xc17016be
  427187:	add    BYTE PTR [esi+0x7a07a389],ah
  42718d:	pop    edx
  42718e:	push   edx
  42718f:	out    dx,eax
  427190:	bound  ebp,QWORD PTR [ecx]
  427192:	mov    ds:0xbd5a2223,eax
  427197:	sub    esp,DWORD PTR [edx-0x21]
  42719a:	lock add edx,DWORD PTR [eax-0x10]
  42719e:	inc    eax
  4271a0:	sahf   
  4271a1:	repnz (bad) 
  4271a3:	call   0xe962739e
  4271a8:	sahf   
  4271a9:	push   0x43
  4271ab:	sbb    eax,DWORD PTR [ebp+0x59]
  4271ae:	mov    DWORD PTR [edx+ebp*4-0x5a2282e7],ebp
  4271b5:	push   ds
  4271b6:	jge    0x4271ad
  4271b8:	sbb    edi,ebx
  4271ba:	pop    es
  4271bb:	jmp    0xafc97f4a
  4271c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271c1:	pop    ebx
  4271c2:	inc    ebp
  4271c3:	leave  
  4271c4:	ins    DWORD PTR es:[edi],dx
  4271c5:	int3   
  4271c6:	cli    
  4271c7:	pop    esp
  4271c8:	and    DWORD PTR [ebx+eax*4+0x30],0x57015803
  4271d0:	mov    ecx,0x1df94583
  4271d5:	inc    ebx
  4271d6:	je     0x4271c3
  4271d8:	loope  0x4271f4
  4271da:	ret    
  4271db:	and    eax,0xe900f67d
  4271e0:	sahf   
  4271e1:	add    ch,BYTE PTR [eax-0x23]
  4271e4:	mov    bl,BYTE PTR [ebx]
  4271e6:	add    BYTE PTR [esi+0x290e52ac],ah
  4271ec:	add    BYTE PTR [ecx-0x5d32bb7d],ah
  4271f2:	mov    bh,0x59
  4271f4:	xor    ah,BYTE PTR [esi-0x7254a29b]
  4271fa:	add    al,BYTE PTR [eax+0xbbafd]
  427200:	std    
  427201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427202:	push   edi
  427203:	je     0x4271ca
  427205:	into   
  427206:	push   0xb
  427208:	mov    al,0x78
  42720a:	push   edi
  42720b:	jg     0x42726c
  42720d:	adc    dh,0xc
  427210:	mov    BYTE PTR [ebp-0x3816c0ba],bh
  427216:	push   ecx
  427217:	sub    BYTE PTR [eax],al
  427219:	mov    dl,0x42
  42721b:	add    DWORD PTR [esp+eax*8],eax
  42721e:	and    BYTE PTR [esp-0x10],0xff
  427223:	addr16 in al,0xca
  427226:	(bad)  
  427227:	(bad)  
  427228:	inc    cl
  42722a:	sti    
  42722b:	or     DWORD PTR [eax-0x3c],eax
  42722e:	mov    eax,0xba3f55b3
  427233:	jp     0x427221
  427235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427236:	xor    BYTE PTR [ebp+0x44],ah
  427239:	add    bl,cl
  42723b:	xlat   BYTE PTR ds:[ebx]
  42723c:	call   0x3c100c
  427241:	inc    DWORD PTR [ecx+0x3]
  427244:	mov    DWORD PTR [edx+0x74000006],0x1043dde
  42724e:	in     eax,0x73
  427250:	xor    eax,DWORD PTR [eax]
  427252:	push   edx
  427253:	rol    BYTE PTR [eax],0x75
  427256:	xchg   esp,eax
  427257:	jg     0x42724c
  427259:	add    al,0xa2
  42725b:	pop    es
  42725c:	cmp    DWORD PTR [edi],0x7406ec
  427262:	xchg   ecx,eax
  427263:	out    dx,eax
  427264:	shr    bl,1
  427266:	fiadd  WORD PTR [esi]
  427268:	inc    ebx
  427269:	push   ebx
  42726a:	cmp    DWORD PTR [eax],0xfffffffb
  42726d:	mov    BYTE PTR [edx+0x5a],bh
  427270:	jecxz  0x42723f
  427272:	mov    ah,0xe5
  427274:	imul   bl
  427276:	sub    al,0xda
  427278:	cmp    bh,bh
  42727a:	sbb    ebp,0x3d
  42727d:	or     al,0x2c
  42727f:	push   es
  427280:	test   esi,edi
  427282:	mov    edi,DWORD PTR [eax+0x5aaa8d01]
  427288:	push   eax
  427289:	push   eax
  42728a:	ins    BYTE PTR es:[edi],dx
  42728b:	push   ebp
  42728c:	idiv   dh
  42728e:	pop    ebx
  42728f:	fidivr WORD PTR ds:0x3eee9d08
  427295:	jne    0x427239
  427297:	test   DWORD PTR [ebx-0x17],0xffff68e8
  42729e:	sub    BYTE PTR [ebx+0x1418500b],ah
  4272a4:	repnz test BYTE PTR [eax],al
  4272a7:	imul   edi,edi,0xff4835ff
  4272ad:	call   FWORD PTR ds:0xc507effc
  4272b3:	mov    ebx,0xaa00fafe
  4272b8:	xchg   ebx,eax
  4272b9:	jl     0x4272fd
  4272bb:	(bad)  
  4272bc:	(bad)  
  4272bd:	mov    edi,0xbfe6edfb
  4272c2:	out    dx,eax
  4272c3:	in     eax,dx
  4272c4:	test   DWORD PTR [eax],ebx
  4272c6:	sti    
  4272c7:	adc    BYTE PTR [edx+edi*1+0x45],ah
  4272cb:	adc    DWORD PTR [ebx-0x1],0xb389dff
  4272d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d3:	mov    BYTE PTR [ebx],ch
  4272d5:	add    al,0x7f
  4272d7:	gs imul ebp,edx,0x13
  4272db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272dc:	es push 0xe2ebaa72
  4272e2:	out    dx,eax
  4272e3:	in     eax,dx
  4272e4:	push   ss
  4272e5:	jmp    0xea3b68
  4272ea:	jne    0x4272dd
  4272ec:	sar    DWORD PTR [ecx+0x24222817],cl
  4272f2:	push   eax
  4272f3:	lds    ebp,FWORD PTR [edx-0x1]
  4272f6:	call   FWORD PTR ds:0x3507eb89
  4272fc:	icebp  
  4272fd:	add    edi,ebx
  4272ff:	sbb    dl,bl
  427301:	mov    ecx,0x1427261b
  427306:	lea    edx,[ebp-0x18]
  427309:	jle    0x427304
  42730b:	add    al,BYTE PTR [ebx]
  42730d:	(bad)  
  42730e:	cmc    
  42730f:	cli    
  427310:	shr    bl,1
  427312:	js     0x427374
  427314:	push   es
  427315:	ins    BYTE PTR es:[edi],dx
  427316:	cmp    esi,DWORD PTR [ecx+0x0]
  427319:	pusha  
  42731a:	mov    dh,0x0
  42731c:	mov    esi,0x431bab8b
  427321:	idiv   BYTE PTR [ecx]
  427323:	out    dx,eax
  427324:	call   0x5e59:0xc766416a
  42732b:	dec    esp
  42732c:	sbb    BYTE PTR [esi],bh
  42732e:	popf   
  42732f:	int    0x3c
  427331:	test   esi,ebx
  427333:	add    ebp,DWORD PTR [ecx]
  427335:	mov    dl,0x7e
  427337:	push   es
  427338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427339:	iret   
  42733a:	loopne 0x427397
  42733c:	rcr    DWORD PTR [eax+0x3],cl
  42733f:	and    BYTE PTR gs:[edx+0x75],al
  427343:	daa    
  427344:	inc    DWORD PTR [ebp+0x111103b1]
  42734a:	pusha  
  42734b:	(bad)  
  42734c:	mov    dh,0x8b
  42734e:	sub    esi,DWORD PTR [edx+eax*4]
  427351:	sbb    al,0xda
  427353:	out    dx,al
  427354:	call   0x6059:0x67662a6a
  42735b:	mov    ebp,0xc2b4092
  427360:	popf   
  427361:	ins    DWORD PTR es:[edi],dx
  427362:	jl     0x4272e7
  427364:	rcl    BYTE PTR [edx+0x2a],1
  427367:	cmc    
  427368:	and    DWORD PTR [edi],esp
  42736a:	stos   BYTE PTR es:[edi],al
  42736b:	fs inc esi
  42736d:	test   DWORD PTR [eax+ebp*2],esp
  427370:	cmp    cl,BYTE PTR [eax]
  427372:	and    BYTE PTR fs:[esi],dh
  427375:	pop    ecx
  427376:	xchg   edx,eax
  427377:	cmp    eax,0x5ae8fadf
  42737c:	lods   al,BYTE PTR ds:[esi]
  42737d:	pop    ecx
  42737e:	and    BYTE PTR [eax+eax*1+0x6d],0x6a
  427383:	pop    edi
  427384:	mov    esp,0x1a005914
  427389:	imul   ebp,DWORD PTR [esi+0x43],0x216a796f
  427390:	pop    edx
  427391:	sbb    BYTE PTR [ebp-0x77],0xa7
  427395:	fisubr WORD PTR [eax-0x67584dff]
  42739b:	or     al,0xe9
  42739d:	sar    DWORD PTR [edi-0x14],cl
  4273a0:	push   0x7a
  4273a2:	pop    edx
  4273a3:	jg     0x4273f2
  4273a5:	mov    edx,0xeddd457f
  4273aa:	mov    dl,0x52
  4273ac:	mov    es,WORD PTR cs:[ecx+0x1241f945]
  4273b3:	xchg   DWORD PTR [edx+ebp*4+0x1de1755b],esp
  4273ba:	inc    ecx
  4273bb:	sti    
  4273bc:	bound  esi,QWORD PTR [edi]
  4273be:	xchg   DWORD PTR [ebp+ecx*8+0x52],esi
  4273c2:	mov    ebx,DWORD PTR [ebp+eax*8-0x42]
  4273c6:	push   0x6c
  4273c8:	idiv   esi
  4273ca:	pop    ebx
  4273cb:	test   BYTE PTR [ecx],ch
  4273cd:	mov    DWORD PTR [edx+ebx*1-0x78fd6115],eax
  4273d4:	and    al,0xa1
  4273d6:	push   0x5e
  4273d8:	fdiv   st(6),st
  4273da:	pop    ebx
  4273db:	mov    BYTE PTR ds:0xaf870bb5,ah
  4273e1:	adc    DWORD PTR [eax+0x4c],esp
  4273e4:	add    BYTE PTR [eax],0xbe
  4273e7:	pop    ebx
  4273e8:	mov    DWORD PTR ds:0xe8a7fa75,ebp
  4273ee:	push   0xffffffef
  4273f0:	and    DWORD PTR [bp+0x2],ebp
  4273f4:	add    BYTE PTR [esi+0x290e2434],bl
  4273fa:	mov    eax,ds:0x2ac563d7
  4273ff:	pop    eax
  427400:	call   0x40a505
  427405:	jmp    FWORD PTR [eax+eax*1+0x7]
  427409:	test   BYTE PTR [esi-0x3],dh
  42740c:	(bad)  
  42740d:	push   DWORD PTR [edi+0x6a]
  427410:	pop    ds
  427411:	adc    BYTE PTR [ecx+esi*8],al
  427414:	in     eax,dx
  427415:	inc    esi
  427416:	mov    edx,0xf50e1f4a
  42741b:	div    BYTE PTR [ebx+0x24]
  42741e:	sar    BYTE PTR [edx],1
  427420:	inc    ebp
  427421:	mov    edx,DWORD PTR [eax]
  427423:	and    BYTE PTR [eax-0x7d],bh
  427426:	(bad)  
  427428:	push   DWORD PTR [ebx-0xc]
  42742b:	jb     0x427471
  42742d:	and    al,0xf4
  42742f:	jb     0x4274ad
  427431:	and    al,0xe8
  427433:	jmp    0x4273d8
  427435:	enter  0xe393,0x83
  427439:	ror    BYTE PTR [eax],0xfa
  42743c:	mov    WORD PTR [eax+ebx*8-0xd],es
  427440:	dec    edi
  427441:	call   0x3db021
  427446:	xchg   ebx,eax
  427447:	das    
  427448:	pop    ds
  427449:	sub    BYTE PTR [eax],al
  42744b:	pushf  
  42744c:	sbb    DWORD PTR [esi],edi
  42744e:	(bad)  
  42744f:	jae    0x427435
  427451:	jae    0x427477
  427453:	xchg   esp,eax
  427454:	jecxz  0x42746a
  427456:	mov    al,ds:0x8afb4376
  42745b:	mov    eax,0xb8892c2a
  427460:	sub    dl,BYTE PTR [eax]
  427462:	test   DWORD PTR [edi+ebp*1],eax
  427465:	or     al,0x89
  427467:	mov    BYTE PTR [edx],ch
  427469:	adc    al,0xeb
  42746b:	fdivr  DWORD PTR [esi+0x7c]
  42746e:	and    al,0x63
  427470:	add    esi,DWORD PTR [ebp+0x7]
  427473:	or     bh,BYTE PTR [edi]
  427475:	pop    ds
  427476:	push   cs
  427477:	inc    esp
  427478:	call   0x4adfdeca
  42747d:	nop
  42747e:	jl     0x4274f9
  427480:	inc    ecx
  427481:	mov    bh,0xe7
  427483:	ficomp WORD PTR ds:[ebp-0x5]
  427487:	es mov gs,ebx
  42748a:	adc    al,0x5d
  42748c:	imul   esp,edi,0x9f6902ff
  427492:	dec    edi
  427493:	sub    BYTE PTR es:[edi+0x5e5168fa],ch
  42749a:	shl    BYTE PTR [edi+0x5],cl
  42749d:	xchg   ecx,eax
  42749e:	jl     0x427459
  4274a0:	or     DWORD PTR [edi+eiz*8-0x4a221e2],edi
  4274a7:	push   ss
  4274a8:	imul   edi,edi,0xed7c1dff
  4274ae:	cli    
  4274af:	add    BYTE PTR [esi],dl
  4274b1:	and    BYTE PTR [edi+0x5e5130fa],ch
  4274b7:	rol    BYTE PTR [edi+0x3f],cl
  4274ba:	nop
  4274bb:	jl     0x42743e
  4274bd:	inc    ecx
  4274be:	mov    bh,0xe7
  4274c0:	cmp    ah,dh
  4274c2:	pop    ebp
  4274c3:	sti    
  4274c4:	out    dx,al
  4274c5:	jno    0x427525
  4274c7:	xchg   DWORD PTR [edx+0x7c],ebx
  4274ca:	pop    esi
  4274cb:	jne    0x427462
  4274cd:	dec    esp
  4274ce:	cmp    BYTE PTR [edi+0x56],bh
  4274d1:	mov    eax,gs:0x429610c
  4274d7:	push   ebx
  4274d8:	jb     0x427529
  4274da:	imul   ecx,DWORD PTR [esi],0xffffffdd
  4274dd:	imul   edi,DWORD PTR [edi+0x7c],0xffffffb9
  4274e1:	xor    eax,0xeb210aff
  4274e6:	add    eax,DWORD PTR [eax]
  4274e8:	popf   
  4274e9:	rcl    dl,1
  4274eb:	pop    es
  4274ec:	xor    eax,0x42fb4e33
  4274f1:	push   ecx
  4274f2:	inc    esp
  4274f3:	jne    0x42749c
  4274f5:	add    bh,BYTE PTR [ebx]
  4274f7:	ins    BYTE PTR es:[edi],dx
  4274f8:	push   0x72619a53
  4274fd:	inc    ecx
  4274fe:	sbb    eax,0x48531bed
  427503:	sub    cl,ah
  427505:	shr    eax,0xec
  427508:	or     al,0x2b
  42750a:	jp     0x4274e4
  42750c:	mov    edx,0xb2c85df2
  427511:	out    dx,al
  427512:	sbb    BYTE PTR [ecx],0x0
  427515:	loopne 0x42756c
  427517:	bound  esp,QWORD PTR [ebx+0x3a63eb9]
  42751d:	out    0xce,al
  42751f:	jmp    0xd661:0xa301fafb
  427526:	mov    ds:0x292480d,eax
  42752b:	callw  0x6fcb
  42752f:	call   0xa680eed6
  427534:	add    edi,DWORD PTR [edx]
  427536:	fsubp  st(2),st
  427538:	and    ebx,DWORD PTR [ebp+0x6a47c5a3]
  42753e:	add    ah,BYTE PTR [eax-0x40]
  427541:	pushf  
  427542:	test   BYTE PTR [edi+0x28],0x61
  427546:	shr    eax,0x8c
  427549:	loope  0x427569
  42754b:	or     DWORD PTR [edx-0x5d270327],0x3a63eb9
  427555:	and    al,dh
  427557:	or     al,0xe0
  427559:	and    eax,0x3df7e2c6
  42755e:	push   ds
  42755f:	lods   eax,DWORD PTR ds:[esi]
  427560:	les    esp,FWORD PTR [edx-0x78]
  427563:	sbb    eax,0x358bad28
  427568:	or     bh,BYTE PTR [ecx+0x69]
  42756b:	or     DWORD PTR [ecx-0x2f],esp
  42756e:	push   ds
  42756f:	add    BYTE PTR [ecx],dh
  427571:	adc    BYTE PTR [esi+0x24],bh
  427574:	imul   ebx,DWORD PTR [esi+0x910002],0x9efb3e69
  42757e:	and    esi,edx
  427580:	and    edi,ecx
  427582:	sahf   
  427583:	into   
  427584:	or     BYTE PTR [esi-0x6eefdf0e],cl
  42758a:	mov    DWORD PTR [edi-0x6],edx
  42758d:	jle    0x4275d4
  42758f:	pop    eax
  427590:	adc    eax,0x150879
  427595:	and    BYTE PTR [ebx-0x26d2f367],0x54
  42759c:	cmc    
  42759d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42759e:	ret    0x3fa
  4275a1:	frstor ds:0xc505447c
  4275a7:	jnp    0x4275f6
  4275a9:	fldenv [edi]
  4275ab:	add    eax,DWORD PTR [edi-0x79157d5b]
  4275b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275b2:	retf   0x88af
  4275b5:	call   0xfc2e64f7
  4275ba:	ficom  WORD PTR [esi+eax*4-0x6c]
  4275be:	xchg   esi,eax
  4275bf:	push   0x46
  4275c1:	sbb    DWORD PTR ds:0x732a3759,edi
  4275c7:	(bad)  
  4275c8:	push   ecx
  4275c9:	adc    DWORD PTR [esp+eiz*2-0x6c590105],eax
  4275d0:	je     0x42759a
  4275d2:	adc    DWORD PTR [ebx-0x5f],edx
  4275d5:	(bad)
  4275d8:	add    BYTE PTR [edx-0x35],dl
  4275db:	sub    bh,bl
  4275dd:	push   ebp
  4275de:	add    BYTE PTR [ebx+0x542fe806],ah
  4275e4:	pop    edx
  4275e5:	sti    
  4275e6:	bound  esp,QWORD PTR [ebp+0x20]
  4275e9:	fs add bh,cl
  4275ec:	icebp  
  4275ed:	and    eax,esp
  4275ef:	ja     0x4275ef
  4275f1:	mov    BYTE PTR [edx+edi*1+0x4],al
  4275f5:	dec    edi
  4275f6:	call   DWORD PTR [ecx-0x50]
  4275f9:	or     DWORD PTR [eax+0x44],eax
  4275fc:	jae    0x427642
  4275fe:	and    al,0x74
  427600:	out    0xeb,al
  427602:	ret    
  427603:	or     esi,DWORD PTR [edx+eax*4+0x564be044]
  42760a:	pop    esi
  42760b:	mov    edi,0x365de587
  427610:	dec    edi
  427611:	sti    
  427612:	push   esp
  427613:	jg     0x4275e7
  427615:	out    0xcb,eax
  427617:	xchg   edi,eax
  427618:	mov    ah,0xf6
  42761a:	test   ah,al
  42761c:	cmp    bh,BYTE PTR [ebx]
  42761e:	push   esi
  42761f:	xchg   DWORD PTR [eax+edi*1+0x162be475],ebp
  427626:	cmp    ecx,esi
  427628:	add    esi,DWORD PTR [edx+ebx*1-0x14]
  42762c:	(bad)  
  42762d:	(bad)  
  42762e:	call   DWORD PTR [esp+esi*4]
  427631:	je     0x427643
  427633:	mov    edi,DWORD PTR [ecx]
  427635:	pop    es
  427636:	push   ecx
  427638:	pop    es
  427639:	not    DWORD PTR ds:0x3b5af0
  42763f:	sub    eax,0x890b39
  427644:	add    DWORD PTR [ecx*4-0x737073bb],eax
  42764b:	inc    ebp
  42764c:	jo     0x4275dd
  42764e:	push   ecx
  42764f:	call   DWORD PTR [ecx]
  427651:	or     BYTE PTR [ebx],ch
  427653:	leave  
  427654:	pushf  
  427655:	mov    ?,esp
  427657:	dec    DWORD PTR [ebx+0x7bf87a95]
  42765d:	cmp    bh,dh
  42765f:	pop    esp
  427660:	dec    ebx
  427661:	sub    cl,BYTE PTR [eax+0x4299d15]
  427667:	pop    ebp
  427668:	pop    edi
  427669:	dec    ebp
  42766a:	call   DWORD PTR [esi+eiz*1+0x2d]
  42766e:	addr16 je 0x42765f
  427671:	xchg   ebx,eax
  427672:	pop    edx
  427673:	test   BYTE PTR [ebp+0x15],bl
  427676:	les    edx,FWORD PTR [ecx+0x6e]
  427679:	mov    ebx,DWORD PTR [esi*2+0x38faf58d]
  427680:	mov    al,0x65
  427682:	rcl    DWORD PTR ds:0xffff69b5,cl
  427688:	cmp    eax,0x120fd884
  42768d:	push   esi
  42768e:	or     edi,ebx
  427690:	nop
  427691:	push   ecx
  427692:	pop    edx
  427693:	adc    eax,0xffbf3671
  427698:	and    eax,0x6888ef4e
  42769d:	dec    ebp
  42769e:	nop
  42769f:	inc    ebp
  4276a0:	test   DWORD PTR [ecx-0x6676ba70],ebx
  4276a6:	mov    ch,0xfa
  4276a8:	add    BYTE PTR [eax+0x61],dl
  4276ab:	push   cs
  4276ac:	leave  
  4276ad:	(bad)
  4276b0:	sti    
  4276b1:	retf   0x7e72
  4276b4:	clc    
  4276b5:	ret    0x295
  4276b8:	pop    ebp
  4276b9:	mov    edx,0x5d1583fd
  4276be:	imul   eax,eax,0xb86991bd
  4276c4:	xchg   BYTE PTR [ecx+0x1ef862e7],dh
  4276ca:	push   eax
  4276cb:	sub    dl,BYTE PTR [edx-0x7b]
  4276ce:	xor    ch,BYTE PTR [esi+0x3ee88af9]
  4276d4:	je     0x4276de
  4276d6:	lea    edx,[ebp+0x66]
  4276d9:	lds    ebp,FWORD PTR [esi+0x2a123c2]
  4276df:	and    bh,dl
  4276e1:	xchg   esi,eax
  4276e2:	xlat   BYTE PTR ds:[ebx]
  4276e3:	repz mov ch,0xd2
  4276e6:	push   ecx
  4276e7:	cld    
  4276e8:	pop    ss
  4276e9:	scas   eax,DWORD PTR es:[edi]
  4276ea:	ret    0x80e8
  4276ed:	pop    ecx
  4276ee:	jmp    FWORD PTR [ecx+0x10fa7ec8]
  4276f4:	add    al,0x9d
  4276f6:	add    bh,BYTE PTR [esi-0x2327c9ef]
  4276fc:	mov    bl,0x3a
  4276fe:	fisubr WORD PTR [esi+ebx*2]
  427701:	es or  al,0x15
  427704:	sub    BYTE PTR [ecx-0x6ee5332a],cl
  42770a:	es stc 
  42770c:	xlat   BYTE PTR ds:[ebx]
  42770d:	add    BYTE PTR [edx+ebx*8-0x5d62fc18],dh
  427714:	jp     0x4276ee
  427716:	mov    esi,0xbed871ea
  42771b:	jmp    0xb7fc:0x519ad769
  427722:	xchg   ecx,eax
  427723:	ret    0x8ae8
  427726:	imul   esp,DWORD PTR [esi],0x26518af9
  42772c:	cmc    
  42772d:	mov    ds,WORD PTR [ecx+0x26]
  427730:	or     DWORD PTR [ecx+ebx*1+0x6d2404c7],esi
  427737:	mov    eax,0x15a2d731
  42773c:	and    BYTE PTR [edx+edi*1+0x4e],ch
  427740:	and    bl,BYTE PTR [ebp+0x2a]
  427743:	dec    edx
  427744:	sbb    dl,bh
  427746:	xchg   BYTE PTR [edi-0x53],bh
  427749:	daa    
  42774a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42774b:	pop    ebp
  42774c:	out    0x88,al
  42774e:	fdivr  st,st(6)
  427750:	add    edi,edx
  427752:	mov    dl,0x51
  427754:	je     0x42774d
  427756:	xchg   edi,edx
  427758:	(bad)  
  427759:	fsubr  DWORD PTR [esi]
  42775b:	dec    esp
  42775c:	jne    0x42773f
  42775e:	shl    edi,1
  427760:	lahf   
  427761:	cld    
  427762:	pop    esi
  427763:	push   ecx
  427764:	pop    ebp
  427765:	jb     0x427762
  427767:	scas   eax,DWORD PTR es:[edi]
  427768:	mov    ebp,0x86b79efd
  42776d:	mov    ebp,0x6af8661d
  427772:	add    BYTE PTR [edx+0x6fd1521e],bh
  427778:	mov    edi,0x4222b6f9
  42777d:	je     0x4277b3
  42777f:	mov    WORD PTR [esi+eiz*2-0x2f],ss
  427783:	sbb    eax,esi
  427785:	and    ebp,ebp
  427787:	xchg   edi,edx
  427789:	or     ebx,DWORD PTR [edx+edx*1]
  42778c:	mov    bl,0x4f
  42778e:	mov    cs,WORD PTR [ebx]
  427790:	adc    eax,0xd1a12912
  427795:	ret    
  427796:	in     eax,dx
  427797:	pop    ecx
  427798:	(bad)  
  427799:	and    esp,ecx
  42779b:	mov    BYTE PTR [edx],0x0
  42779e:	jmp    0xdd3d9928
  4277a3:	call   0xfb4a:0xdd27e7b2
  4277aa:	adc    ch,dh
  4277ac:	and    al,0x14
  4277ae:	aad    0x7a
  4277b0:	or     esi,DWORD PTR [ebp+ecx*1-0x2f]
  4277b4:	aam    0x19
  4277b6:	rcr    DWORD PTR [esi+0x59890002],1
  4277bc:	(bad)  
  4277bd:	and    edx,ecx
  4277bf:	push   ecx
  4277c0:	(bad)  
  4277c1:	and    eax,DWORD PTR [ecx]
  4277c3:	dec    eax
  4277c4:	xlat   BYTE PTR ds:[ebx]
  4277c5:	pop    es
  4277c6:	push   ds
  4277c7:	stos   DWORD PTR es:[edi],eax
  4277c8:	fcom   QWORD PTR [ecx+ebp*4]
  4277cb:	sahf   
  4277cc:	jns    0x427842
  4277ce:	lds    ecx,FWORD PTR [esi+0x5800747b]
  4277d4:	pop    eax
  4277d5:	mov    WORD PTR [eax+eax*1+0x58],es
  4277d9:	and    al,0x50
  4277db:	lea    ecx,[eax+0x28]
  4277de:	and    BYTE PTR [eax+0xa],dl
  4277e1:	scas   eax,DWORD PTR es:[edi]
  4277e2:	je     0x4277ec
  4277e4:	xchg   DWORD PTR [ebp-0x53803919],edi
  4277ea:	test   BYTE PTR [ebx+0x1c74ac6c],0xf1
  4277f1:	inc    edx
  4277f2:	pop    ds
  4277f3:	or     BYTE PTR [edi+0x8],ch
  4277f6:	add    DWORD PTR [ebp+0x30],0xffffffad
  4277fa:	je     0x427814
  4277fc:	repz xor DWORD PTR [edi],ecx
  4277ff:	jmp    FWORD PTR [ecx+0x56]
  427802:	dec    ebx
  427803:	dec    DWORD PTR [ecx-0x33ea0902]
  427809:	push   ecx
  42780a:	cmp    eax,DWORD PTR [eax]
  42780c:	sar    BYTE PTR [edi-0x1b],cl
  42780f:	pop    ebp
  427810:	inc    esi
  427811:	push   ebx
  427812:	sti    
  427813:	push   edx
  427814:	stos   BYTE PTR es:[edi],al
  427815:	jg     0x42788b
  427817:	and    al,0xf0
  427819:	xchg   ecx,eax
  42781a:	not    BYTE PTR ds:0x3b52f0
  427820:	jg     0x427830
  427822:	call   0xf6ec9dee
  427827:	test   BYTE PTR [edx+esi*1-0x4cca8e1],dh
  42782e:	ret    
  42782f:	inc    ebx
  427830:	les    edx,FWORD PTR [esi+esi*8+0x3b587015]
  427837:	add    BYTE PTR [edx+ecx*1-0x13],ch
  42783b:	inc    DWORD PTR [eax]
  42783d:	jae    0x4277c6
  42783f:	clc    
  427840:	(bad)  
  427841:	call   0x92db6048
  427846:	stos   DWORD PTR es:[edi],eax
  427847:	not    BYTE PTR [edi-0x7d]
  42784a:	push   ecx
  42784b:	jmp    0x42785f
  42784d:	popf   
  42784e:	cdq    
  42784f:	call   FWORD PTR [edx-0xd]
  427852:	in     al,0x42
  427854:	push   edi
  427855:	pop    edi
  427856:	pop    ebp
  427857:	call   DWORD PTR [esi+edx*1-0x3]
  42785b:	imul   edx,DWORD PTR [eax-0x7ba9a834],0x5d
  427862:	aad    0x2b
  427864:	das    
  427865:	pop    ebp
  427866:	and    al,cl
  427868:	or     ebp,ecx
  42786a:	sti    
  42786b:	sbb    al,0x45
  42786d:	lods   eax,DWORD PTR ds:[esi]
  42786e:	scas   eax,DWORD PTR es:[edi]
  42786f:	clc    
  427870:	cmp    al,bl
  427872:	push   ebp
  427873:	retf   
  427874:	pop    ss
  427875:	in     eax,dx
  427876:	jmp    0xdeebedd1
  42787b:	mov    edi,0xf40e3a07
  427880:	cli    
  427881:	test   al,0x2d
  427883:	addr16 dec ecx
  427885:	xor    ch,BYTE PTR [eax+0x70257f56]
  42788b:	rol    BYTE PTR [edx],1
  42788d:	js     0x427907
  42788f:	and    BYTE PTR [eax+0x5d0419a8],dl
  427895:	fild   QWORD PTR [eax]
  427897:	call   DWORD PTR [esi+edx*1+0x7d]
  42789b:	mov    cl,0xe7
  42789d:	push   0xffffffea
  42789f:	push   ebp
  4278a0:	sti    
  4278a1:	add    BYTE PTR [esi],ah
  4278a3:	push   esi
  4278a4:	add    eax,DWORD PTR [ebp+ebx*8-0x147ad3d4]
  4278ab:	xor    al,0x20
  4278ad:	xchg   DWORD PTR [ebx+0x4d],esi
  4278b0:	or     dh,0x49
  4278b3:	pop    edi
  4278b4:	mov    BYTE PTR [edx-0x5b],al
  4278b7:	aam    0x6
  4278b9:	test   esp,edx
  4278bb:	xchg   esp,eax
  4278bc:	lock cli 
  4278be:	xor    BYTE PTR ds:0x6a4d00ed,ch
  4278c4:	mov    ch,0x8c
  4278c6:	pusha  
  4278c7:	add    dh,cl
  4278c9:	imul   ebx,DWORD PTR [eax+0x1a5a1a57],0x4b
  4278d0:	adc    dl,al
  4278d2:	mov    ds:0x87ef944d,al
  4278d7:	fcomp  st(0)
  4278d9:	mov    cl,0x87
  4278db:	fdiv   st,st(0)
  4278dd:	pop    edx
  4278de:	nop
  4278df:	jbe    0x4278bd
  4278e1:	ret    
  4278e2:	jb     0x427894
  4278e4:	mov    eax,DWORD PTR [ebp-0x73]
  4278e7:	add    bh,BYTE PTR [ecx*4-0x4d18a48f]
  4278ee:	push   esp
  4278ef:	dec    esi
  4278f0:	ins    DWORD PTR es:[edi],dx
  4278f1:	inc    esp
  4278f2:	leave  
  4278f3:	jmp    0x4278be
  4278f5:	iret   
  4278f6:	scas   al,BYTE PTR es:[edi]
  4278f7:	jg     0x427925
  4278f9:	or     al,0xbb
  4278fb:	add    BYTE PTR [edx-0x17275931],bh
  427901:	in     eax,dx
  427902:	xor    ah,BYTE PTR [esi-0x62]
  427905:	push   edx
  427906:	add    BYTE PTR [esi],ah
  427908:	dec    esi
  427909:	pop    sp
  42790b:	es fsub st,st(1)
  42790e:	mov    dh,0x17
  427910:	sub    BYTE PTR [ecx-0x11],dh
  427913:	rol    BYTE PTR [edx],cl
  427915:	sub    al,0x46
  427917:	lods   eax,DWORD PTR ds:[esi]
  427918:	add    bl,BYTE PTR [ecx*4-0x4b68a50f]
  42791f:	hlt    
  427920:	dec    ebp
  427921:	ins    DWORD PTR es:[edi],dx
  427922:	inc    esp
  427923:	imul   eax,eax,0xff27b112
  427929:	sub    al,0xc5
  42792b:	loop   0x4278e1
  42792d:	pop    ecx
  42792e:	out    dx,eax
  42792f:	(bad)  
  427930:	lock test al,0x3
  427933:	sbb    bl,al
  427935:	loopne 0x4279a2
  427937:	jmp    0x3a4a:0x4259425e
  42793e:	rcl    BYTE PTR [ecx+ebx*8+0x4d8128ff],1
  427945:	add    al,0x5
  427947:	pop    ebp
  427948:	or     eax,0xf1c16a00
  42794d:	add    BYTE PTR [ebp+eiz*4+0x19f94885],dl
  427954:	retf   
  427955:	add    ebp,ecx
  427957:	pop    edx
  427958:	add    eax,DWORD PTR [edi+0x457ba2a9]
  42795e:	icebp  
  42795f:	sub    eax,0x68f91548
  427964:	or     eax,0xae248e00
  427969:	cli    
  42796a:	or     al,0x0
  42796c:	cmp    eax,0xc6e93ff7
  427971:	adc    BYTE PTR [eax-0x29],0xf5
  427975:	xchg   al,al
  427977:	push   ebp
  427978:	xchg   esi,eax
  427979:	test   DWORD PTR [ebp+ecx*1-0x6f],ecx
  42797d:	pop    edx
  42797e:	mov    ah,0xcf
  427980:	aad    0x49
  427982:	sti    
  427983:	or     al,0x1d
  427985:	idiv   DWORD PTR [edi]
  427987:	jmp    0xa7925442
  42798c:	lds    eax,FWORD PTR [esi-0x7a59ea40]
  427992:	dec    esp
  427993:	int    0xa6
  427995:	pop    edx
  427996:	pushf  
  427997:	jg     0x4279fe
  427999:	dec    ecx
  42799a:	sti    
  42799b:	int3   
  42799c:	mov    dh,bh
  42799e:	aas    
  42799f:	jmp    0x6b2efdef
  4279a4:	retf   
  4279a5:	clc    
  4279a6:	add    ah,dh
  4279a8:	in     eax,dx
  4279a9:	retf   
  4279aa:	jl     0x4279a9
  4279ac:	loop   0x427983
  4279ae:	adc    BYTE PTR [ecx-0x21],dl
  4279b1:	mov    esp,0x425256f9
  4279b6:	je     0x427999
  4279b8:	sbb    DWORD PTR [edi+0x336c000f],edi
  4279be:	jmp    0xf6d6f5c2
  4279c3:	and    eax,0x3b5c38
  4279c8:	adc    DWORD PTR [esi-0x14],edi
  4279cb:	or     DWORD PTR [eax+0x4d1],0x6a4e9284
  4279d5:	xchg   esp,eax
  4279d6:	pop    esi
  4279d7:	sti    
  4279d8:	push   edx
  4279d9:	jmp    DWORD PTR [edi+0x524015f6]
  4279df:	cmp    eax,DWORD PTR [eax]
  4279e1:	pop    es
  4279e2:	or     al,0xc
  4279e4:	sub    cl,0xf7
  4279e7:	push   DWORD PTR [eax+esi*1-0x79]
  4279eb:	jge    0x4279f9
  4279ed:	je     0x427a2b
  4279ef:	push   ds
  4279f0:	test   DWORD PTR [ebx+0x33],edi
  4279f3:	sbb    bh,bh
  4279f5:	icebp  
  4279f6:	cli    
  4279f7:	add    bh,0x5c
  4279fa:	and    BYTE PTR [edx-0x2],cl
  4279fd:	pop    ebx
  4279fe:	jle    0x427a45
  427a00:	cld    
  427a01:	rol    esi,0x75
  427a04:	adc    dl,BYTE PTR [ebx+0x5c0c74b3]
  427a0a:	aam    0x40
  427a0c:	(bad)  
  427a0d:	sti    
  427a0e:	ja     0x427a00
  427a10:	mov    DWORD PTR [ecx-0x4e097b06],edi
  427a16:	ds sub al,al
  427a19:	sbb    eax,0xf400006e
  427a1e:	add    al,0xae
  427a20:	inc    ebp
  427a21:	in     al,dx
  427a22:	aaa    
  427a23:	outs   dx,DWORD PTR ds:[esi]
  427a24:	push   cs
  427a25:	mov    esp,0xc18de631
  427a2a:	cli    
  427a2b:	dec    edi
  427a2c:	push   0x6ad
  427a31:	outs   dx,DWORD PTR ds:[esi]
  427a32:	std    
  427a33:	mov    WORD PTR [ebp+0x0],es
  427a36:	popf   
  427a37:	gs scas eax,DWORD PTR es:[edi]
  427a39:	xlat   BYTE PTR ds:[bx]
  427a3b:	pop    ecx
  427a3c:	(bad)  
  427a3d:	push   DWORD PTR [ebp-0x45059694]
  427a43:	rcl    BYTE PTR [ebx-0x7b],1
  427a46:	stos   DWORD PTR es:[edi],eax
  427a47:	lea    ebp,[edi]
  427a49:	xchg   DWORD PTR [eax+0x2d],esp
  427a4c:	lods   eax,DWORD PTR ds:[esi]
  427a4d:	out    0xcc,eax
  427a4f:	mov    dl,BYTE PTR [ebp-0x5]
  427a52:	and    al,0xa6
  427a54:	push   ebx
  427a55:	test   DWORD PTR [ebp+0x74],ebx
  427a58:	pop    es
  427a59:	push   edx
  427a5a:	jne    0x427a53
  427a5c:	ret    
  427a5d:	stc    
  427a5e:	xor    al,0x9b
  427a61:	lea    edi,[eax]
  427a63:	leave  
  427a64:	pop    eax
  427a65:	sti    
  427a66:	jb     0x427a69
  427a68:	sbb    edx,DWORD PTR [ecx+0x6b]
  427a6b:	pop    esp
  427a6c:	jmp    0x7c208c70
  427a71:	cli    
  427a72:	pop    edx
  427a73:	sub    al,0xaf
  427a75:	xchg   al,bl
  427a77:	gs es inc ebp
  427a7a:	dec    ecx
  427a7b:	loopne 0x427ac1
  427a7d:	call   0x463e44
  427a82:	es inc ecx
  427a84:	mov    WORD PTR [ebp+0x31],?
  427a87:	ficom  WORD PTR [ecx+0x74]
  427a8a:	pop    ebx
  427a8b:	(bad)  
  427a8d:	pop    es
  427a8e:	popf   
  427a8f:	sar    cl,1
  427a91:	xchg   BYTE PTR [ebp+0x4d],bl
  427a94:	mov    edi,?
  427a96:	mov    cs,WORD PTR [edx+0x52]
  427a99:	xor    eax,DWORD PTR [eax]
  427a9b:	cmc    
  427a9c:	mov    dh,0xbe
  427a9e:	stc    
  427a9f:	add    ch,ah
  427aa1:	imul   ebx,DWORD PTR [ebp+ebx*2+0x787f51cb],0xffffffd5
  427aa9:	(bad)  
  427aaa:	addr16 adc eax,0x10ffff66
  427ab0:	add    ch,BYTE PTR [ebx+edx*8-0x30]
  427ab4:	dec    edx
  427ab5:	pop    edx
  427ab6:	jmp    0xf094358d
  427abb:	mov    ?,esp
  427abd:	test   al,0x3
  427abf:	sbb    al,ch
  427ac1:	hlt    
  427ac2:	and    cl,0xfd
  427ac5:	cwde   
  427ac6:	lods   eax,DWORD PTR ds:[esi]
  427ac7:	cmp    BYTE PTR [eax],al
  427ac9:	pusha  
  427aca:	ret    0x7da2
  427acd:	scas   al,BYTE PTR es:[edi]
  427ace:	dec    DWORD PTR [edx+0x79]
  427ad1:	xchg   esi,eax
  427ad2:	pop    es
  427ad3:	test   DWORD PTR [edx+0x7e9655bb],ebx
  427ad9:	lods   al,BYTE PTR ds:[esi]
  427ada:	push   edi
  427adb:	out    0xa8,al
  427add:	pop    ds
  427ade:	inc    ecx
  427adf:	xchg   ebp,eax
  427ae0:	add    al,BYTE PTR [edx]
  427ae2:	int    0xa6
  427ae4:	pop    edx
  427ae5:	lahf   
  427ae6:	ret    
  427ae7:	je     0x427b33
  427ae9:	jg     0x427ade
  427aeb:	add    BYTE PTR [ebx],al
  427aed:	xchg   ebx,eax
  427aee:	push   esi
  427aef:	mov    BYTE PTR [esi],cl
  427af1:	sti    
  427af2:	ret    
  427af3:	pop    edx
  427af4:	test   DWORD PTR [ebp+0x5db11208],esp
  427afa:	sar    BYTE PTR [esi-0x6],1
  427afd:	pop    ebp
  427afe:	mov    BYTE PTR [eax],0x86
  427b01:	ja     0x427b2e
  427b03:	(bad)  
  427b04:	jmp    0x475a:0xcf1c237c
  427b0b:	add    al,0x9d
  427b0d:	add    dl,BYTE PTR [ebx]
  427b0f:	ins    BYTE PTR es:[edi],dx
  427b10:	ins    DWORD PTR es:[edi],dx
  427b11:	ret    0x55a2
  427b14:	retf   0x3b42
  427b17:	inc    edx
  427b18:	cdq    
  427b19:	add    bh,BYTE PTR [ecx+ecx*4]
  427b1c:	stc    
  427b1d:	mov    bl,0x37
  427b1f:	mov    DWORD PTR [edi-0x637b9683],ebx
  427b25:	add    ch,cl
  427b27:	mov    al,0x4f
  427b29:	dec    ecx
  427b2a:	add    ah,bh
  427b2c:	xchg   esi,eax
  427b2d:	ja     0x427b8c
  427b2f:	jno    0x427ba2
  427b31:	mov    ebp,0x7e9ee98d
  427b36:	rcl    ch,0xac
  427b39:	dec    ebp
  427b3a:	jne    0x427b91
  427b3c:	adc    al,0x45
  427b3e:	sti    
  427b3f:	aam    0x66
  427b41:	dec    ebp
  427b42:	jne    0x427b39
  427b44:	inc    esi
  427b45:	cmp    al,0x0
  427b47:	jmp    0x31b7c8ea
  427b4c:	adc    al,0x4b
  427b4e:	call   0xfb8f038e
  427b53:	jb     0x427af0
  427b55:	or     BYTE PTR [ebp-0xf],0x25
  427b59:	add    BYTE PTR [eax+0x53029ee8],0x1
  427b60:	pop    ss
  427b61:	js     0x427b63
  427b63:	jmp    0x85850868
  427b68:	(bad)  
  427b69:	cdq    
  427b6a:	ins    DWORD PTR es:[edi],dx
  427b6b:	rcl    BYTE PTR [esi-0x1e41c5db],0x9e
  427b72:	scas   eax,DWORD PTR es:[edi]
  427b73:	xchg   ch,dl
  427b75:	sbb    eax,0x243a3056
  427b7a:	sub    cl,BYTE PTR [ebx]
  427b7c:	lahf   
  427b7d:	fnstsw WORD PTR [edx+0x53143651]
  427b83:	je     0x427b75
  427b85:	data16 into 
  427b87:	add    eax,0x664cf3a7
  427b8c:	ret    0x432a
  427b8f:	inc    ebp
  427b90:	lods   eax,DWORD PTR ds:[esi]
  427b91:	ss (bad) 
  427b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b95:	jmp    0x427be3
  427b97:	lea    esp,[ecx+ecx*8]
  427b9a:	loopne 0x427b9b
  427b9c:	xor    BYTE PTR [esi],0xa6
  427b9f:	(bad)  
  427ba0:	call   0xc97fba
  427ba5:	test   BYTE PTR [ebp-0x7ffbffff],al
  427bab:	dec    ebp
  427bac:	rol    BYTE PTR [ebp+0x730c74af],1
  427bb2:	cmp    BYTE PTR [ebx],al
  427bb4:	call   0x42516b
  427bb9:	dec    edi
  427bba:	lods   eax,DWORD PTR ds:[esi]
  427bbb:	test   bh,bh
  427bbd:	call   0x5c99c619
  427bc2:	xchg   esi,eax
  427bc3:	idiv   bh
  427bc5:	arpl   WORD PTR [ebx-0x28],di
  427bc8:	mov    eax,DWORD PTR [eax]
  427bca:	mov    ebx,0x838b005a
  427bcf:	scas   al,BYTE PTR es:[edi]
  427bd0:	jp     0x8b78564d
  427bd6:	mov    bh,BYTE PTR [ebx-0x80]
  427bd9:	add    BYTE PTR [ebp+0x418d0004],0x0
  427be0:	push   ecx
  427be1:	lea    esp,[ecx]
  427be3:	cld    
  427be4:	push   eax
  427be5:	(bad)  
  427be6:	stc    
  427be7:	sti    
  427be8:	dec    edi
  427be9:	mov    al,bh
  427beb:	fld    TBYTE PTR [edi-0x71]
  427bee:	je     0x427bf4
  427bf0:	test   al,al
  427bf2:	call   0x50b87247
  427bf7:	leave  
  427bf8:	mov    ebp,0x4a46e9ff
  427bfd:	call   0x42804e
  427c02:	push   ebx
  427c03:	sub    al,BYTE PTR [ebx]
  427c05:	test   DWORD PTR [esp+eax*1],eax
  427c08:	xchg   edi,eax
  427c09:	ret    
  427c0a:	dec    esp
  427c0b:	div    BYTE PTR [esi]
  427c0d:	(bad)  
  427c0e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c10:	mov    edi,0x5993f432
  427c15:	pop    ebx
  427c16:	dec    ebp
  427c17:	rol    DWORD PTR [edi],0x0
  427c1a:	leave  
  427c1b:	(bad)  
  427c1c:	jmp    0x427ba1
  427c1e:	popf   
  427c1f:	jne    0x427c6d
  427c21:	jg     0x427c14
  427c23:	push   ebp
  427c24:	mov    dl,0x51
  427c26:	push   edx
  427c27:	sbb    cl,0xb
  427c2a:	es retf 0x457a
  427c2e:	add    BYTE PTR [ebp+0x418d0403],cl
  427c34:	cmp    eax,0xdf34e81f
  427c39:	dec    esi
  427c3a:	sti    
  427c3b:	and    al,0x9e
  427c3d:	and    ecx,DWORD PTR [eax+eiz*1]
  427c40:	sbb    bl,cl
  427c42:	pop    es
  427c43:	push   ds
  427c44:	and    cl,BYTE PTR [edi-0x17]
  427c47:	(bad)  
  427c48:	pop    ecx
  427c49:	(bad)  
  427c4a:	jmp    DWORD PTR [eax]
  427c4c:	mov    BYTE PTR [edi],dl
  427c4e:	das    
  427c4f:	(bad)  
  427c50:	push   0x2d795c77
  427c55:	dec    esi
  427c56:	adc    eax,0xffbf4b89
  427c5b:	mov    ds:0xd507c8af,eax
  427c60:	and    BYTE PTR gs:[eax+0x8],cl
  427c64:	leave  
  427c65:	add    edx,0x3705d495
  427c6b:	fnstcw WORD PTR ds:0x51016ee7
  427c71:	fmul   DWORD PTR [ebx]
  427c73:	push   ss
  427c74:	sahf   
  427c75:	out    dx,eax
  427c76:	addr16 fs pop ecx
  427c79:	(bad)  
  427c7a:	inc    DWORD PTR [ebp+0x32]
  427c7d:	imul   edi,edx,0x743ed54a
  427c83:	in     eax,dx
  427c84:	repnz in eax,dx
  427c86:	or     dl,BYTE PTR [eax]
  427c88:	cdq    
  427c89:	ja     0x427ccf
  427c8b:	jns    0x427cb6
  427c8d:	pop    edx
  427c8e:	sub    al,0x1e
  427c90:	xchg   edi,eax
  427c91:	test   DWORD PTR [esi-0x3cab6500],0x1602b523
  427c9b:	push   cs
  427c9c:	push   ss
  427c9d:	into   
  427c9e:	(bad)  
  427c9f:	inc    DWORD PTR [edx]
  427ca1:	into   
  427ca2:	jle    0x427cf5
  427ca4:	push   es
  427ca5:	jle    0x427c50
  427ca7:	xlat   BYTE PTR ds:[ebx]
  427ca8:	leave  
  427ca9:	inc    edi
  427caa:	cld    
  427cab:	call   FWORD PTR [ebx]
  427cad:	mov    ebp,0x1e0dbd8
  427cb2:	jmp    0x83d671ba
  427cb7:	push   ecx
  427cb8:	(bad)  
  427cb9:	jge    0x427ce4
  427cbb:	xlat   BYTE PTR ds:[ebx]
  427cbc:	mov    ch,0x5a
  427cbe:	adc    DWORD PTR [edx-0x3a],edx
  427cc1:	inc    esi
  427cc2:	mov    edi,0x4be11f3
  427cc7:	lock push 0xffffffb0
  427cca:	inc    ecx
  427ccb:	clc    
  427ccc:	xor    al,0xa8
  427ccf:	add    edi,DWORD PTR [edx+0x2b]
  427cd2:	inc    di
  427cd4:	xchg   ecx,eax
  427cd5:	ret    
  427cd6:	xchg   ecx,eax
  427cd7:	push   edx
  427cd8:	mov    al,0x52
  427cda:	test   ebx,0x5be8dc92
  427ce0:	cmp    eax,0x203e8d6
  427ce5:	ffreep st(4)
  427ce7:	idiv   DWORD PTR [edx-0x7f]
  427cea:	inc    BYTE PTR [ebx]
  427cec:	call   0xa312e5e0
  427cf1:	add    BYTE PTR [ebx+ebp*8+0x67],bh
  427cf5:	iret   
  427cf6:	(bad)  
  427cf7:	repz add BYTE PTR [edi-0x31],dl
  427cfb:	or     al,0xf4
  427cfd:	cmp    dh,BYTE PTR [edi+0x599d0415]
  427d03:	loopne 0x427d83
  427d05:	leave  
  427d06:	push   ds
  427d07:	icebp  
  427d08:	pop    ebx
  427d09:	push   edi
  427d0a:	dec    eax
  427d0b:	ret    0x1a51
  427d0e:	iret   
  427d0f:	add    al,0x0
  427d11:	es or  eax,0x88ac100
  427d17:	cli    
  427d18:	scas   al,BYTE PTR es:[edi]
  427d19:	push   edi
  427d1a:	pop    esi
  427d1b:	sub    esp,edi
  427d1d:	ins    BYTE PTR es:[edi],dx
  427d1e:	dec    ecx
  427d1f:	lea    edx,ds:0xfbe7eeb5
  427d25:	jnp    0x427d6f
  427d27:	sti    
  427d28:	bound  esp,QWORD PTR [eax-0x57]
  427d2b:	pop    ecx
  427d2c:	and    dh,BYTE PTR [eax+0x5f]
  427d2f:	pop    ebp
  427d30:	stos   DWORD PTR es:[edi],eax
  427d31:	popf   
  427d32:	add    dl,BYTE PTR [edx+0x1e]
  427d35:	pusha  
  427d36:	dec    edx
  427d37:	(bad)  
  427d38:	not    dh
  427d3a:	pop    ebp
  427d3b:	lods   eax,DWORD PTR ds:[esi]
  427d3c:	fs ins BYTE PTR es:[edi],dx
  427d3e:	dec    ecx
  427d3f:	(bad)  
  427d40:	(bad)  
  427d41:	mov    dh,0x5d
  427d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d44:	push   esp
  427d45:	ins    BYTE PTR es:[edi],dx
  427d46:	dec    ecx
  427d47:	lea    esp,[esi-0x23054d6a]
  427d4d:	push   esi
  427d4e:	hlt    
  427d4f:	aas    
  427d50:	jmp    0x6c46467e
  427d55:	dec    esp
  427d56:	into   
  427d57:	add    dl,BYTE PTR [esi-0x4601013]
  427d5d:	add    BYTE PTR [esi+0x45],bl
  427d60:	pop    edx
  427d61:	mov    edi,0xe1b1f9e1
  427d66:	inc    edi
  427d67:	rol    DWORD PTR [edi],1
  427d69:	mov    al,ds:0xb38cf953
  427d6e:	xchg   BYTE PTR [edi+edi*8+0x6b],bl
  427d72:	sub    edi,ebp
  427d74:	test   BYTE PTR [eax],ah
  427d76:	dec    edx
  427d77:	add    DWORD PTR [esi],ebp
  427d79:	sub    eax,edi
  427d7b:	mov    edi,0xb0a53886
  427d80:	xchg   BYTE PTR [ebp+0x75],dl
  427d83:	cli    
  427d84:	mov    bh,bh
  427d86:	popf   
  427d87:	xchg   ecx,eax
  427d88:	jo     0x427d74
  427d8a:	popf   
  427d8b:	xchg   ecx,eax
  427d8c:	inc    eax
  427d8d:	add    BYTE PTR [ebp-0x3a],al
  427d90:	push   eax
  427d91:	or     al,0x3b
  427d93:	mov    ds:0x2d0685be,al
  427d98:	sbb    cl,BYTE PTR [ebx-0x3ecdb943]
  427d9e:	mov    bl,0x52
  427da0:	and    cl,al
  427da2:	inc    edx
  427da4:	push   es
  427da5:	inc    edx
  427da6:	and    eax,0xb6cffa8b
  427dab:	mov    bl,0x73
  427dad:	and    al,0xd0
  427daf:	(bad)  
  427db0:	cs call ecx
  427db3:	lock or eax,0xc47df440
  427db9:	or     al,0x1f
  427dbb:	(bad)  
  427dbc:	jp     0x427de5
  427dbe:	les    esi,FWORD PTR [eax+0x1]
  427dc1:	pop    esi
  427dc2:	add    BYTE PTR [esi+0x49],dh
  427dc5:	sti    
  427dc6:	push   esp
  427dc7:	aas    
  427dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dc9:	push   eax
  427dca:	push   ecx
  427dcb:	fld    TBYTE PTR [edx+0x49]
  427dce:	add    eax,DWORD PTR [edi-0x58]
  427dd1:	addr16 push esi
  427dd3:	lock push eax
  427dd5:	dec    eax
  427dd6:	dec    ecx
  427dd7:	loopne 0x427dd2
  427dd9:	sub    eax,eax
  427ddb:	fstp   QWORD PTR [edx-0x3a7c0000]
  427de1:	outs   dx,DWORD PTR ds:[esi]
  427de2:	sbb    BYTE PTR [edi+0x7c708cfe],ch
  427de8:	mov    DWORD PTR [edi],0xffb82183
  427dee:	push   edx
  427def:	adc    eax,edi
  427df1:	mov    eax,0x758c
  427df6:	lea    ecx,[eax+ebp*8]
  427df9:	dec    edx
  427dfa:	push   DWORD PTR [ecx-0x5c]
  427dfd:	or     DWORD PTR [eax+0x44],eax
  427e00:	leave  
  427e01:	cmp    eax,0x73bec10c
  427e06:	adc    bl,BYTE PTR [ebp-0x32f82dd4]
  427e0c:	inc    ecx
  427e0d:	fwait
  427e0e:	cmp    eax,0x457d3d33
  427e13:	and    eax,0x1407c1d1
  427e18:	pop    ss
  427e19:	push   eax
  427e1a:	dec    edi
  427e1b:	sbb    ch,BYTE PTR [edi]
  427e1d:	dec    edi
  427e1e:	push   cs
  427e1f:	pop    ebp
  427e20:	pop    ecx
  427e21:	jle    0x427ea0
  427e23:	add    eax,0x4d765a
  427e28:	xchg   ebp,eax
  427e29:	add    al,0x81
  427e2b:	push   ebp
  427e2c:	stc    
  427e2d:	out    dx,al
  427e2e:	clc    
  427e2f:	jle    0x427ea9
  427e31:	jge    0x427e37
  427e33:	push   0xffff4ead
  427e38:	ja     0x427e8f
  427e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e3b:	out    0xe1,eax
  427e3d:	outs   dx,DWORD PTR ds:[esi]
  427e3e:	dec    edx
  427e3f:	sti    
  427e40:	(bad)  
  427e41:	sbb    DWORD PTR [edi+0x3f],edx
  427e44:	or     ebp,edx
  427e46:	fdivr  st,st(7)
  427e48:	ret    0xd983
  427e4b:	add    edx,DWORD PTR [ebp-0x19]
  427e4e:	es call 0xfb8c9e41
  427e54:	and    DWORD PTR [edx],ebx
  427e56:	fsub   DWORD PTR [esi+edx*1]
  427e59:	xchg   edi,eax
  427e5a:	dec    ebx
  427e5b:	xchg   eax,esi
  427e5d:	adc    DWORD PTR [edi+0x4d],esi
  427e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e61:	test   BYTE PTR [ebp+0x49bf29e7],dh
  427e67:	sti    
  427e68:	sbb    DWORD PTR [ecx],ebx
  427e6a:	fcom   DWORD PTR [eax]
  427e6c:	not    WORD PTR es:[edx+0x7]
  427e71:	push   esi
  427e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e73:	mov    eax,ss
  427e75:	push   ecx
  427e76:	push   edi
  427e77:	mov    ecx,0x864a4b44
  427e7c:	jne    0x427ed2
  427e7e:	fdiv   st,st(7)
  427e80:	inc    ebp
  427e81:	add    dh,BYTE PTR [ebx+0x6f43470f]
  427e87:	inc    edx
  427e88:	out    0xa7,al
  427e8a:	xor    bh,BYTE PTR ds:0xe8fdfb00
  427e90:	mov    ah,0xcd
  427e92:	lods   eax,DWORD PTR ds:[esi]
  427e93:	ins    DWORD PTR es:[edi],dx
  427e94:	fistp  QWORD PTR [esi-0x16]
  427e97:	adc    dh,BYTE PTR [edi-0x299bb5e5]
  427e9d:	ret    0x5fac
  427ea0:	xlat   BYTE PTR ds:[ebx]
  427ea1:	mov    esi,0xf6f8a1f2
  427ea6:	out    dx,eax
  427ea7:	sub    BYTE PTR [edx+ebx*1],al
  427eaa:	mov    ebp,0xfa5e0aec
  427eaf:	adc    cl,BYTE PTR [edx]
  427eb1:	fistp  QWORD PTR [ebp+0x759c23cc]
  427eb7:	repnz pop es
  427eb9:	sbb    bh,ah
  427ebb:	adc    eax,0xd51e517d
  427ec0:	mov    ch,bl
  427ec2:	int    0xb4
  427ec4:	fxch   st(2)
  427ec6:	mov    dl,0x59
  427ec8:	clc    
  427ec9:	xchg   edx,eax
  427eca:	out    dx,eax
  427ecb:	test   al,0x3
  427ecd:	js     0x427ecf
  427ecf:	call   0xf8101bd7
  427ed4:	adc    edx,edx
  427ed6:	inc    edx
  427ed7:	mov    ch,0x27
  427ed9:	lea    eax,[ebx-0x24]
  427edc:	push   ebx
  427edd:	stos   DWORD PTR es:[edi],eax
  427ede:	ret    0x79e8
  427ee1:	push   edx
  427ee2:	faddp  st(1),st
  427ee4:	lods   eax,DWORD PTR ds:[esi]
  427ee5:	jmp    0xad843ec5
  427eea:	add    bl,BYTE PTR [esi-0x38]
  427eed:	jp     0x427eec
  427eef:	mov    eax,ds:0x9ec00eb
  427ef4:	sub    eax,edi
  427ef6:	mov    esi,0x215ae6e2
  427efb:	fcos   
  427efd:	cmc    
  427efe:	push   edx
  427eff:	xor    cl,BYTE PTR [esi]
  427f01:	test   eax,0xd2bff09e
  427f06:	jnp    0x427f45
  427f08:	xor    bl,dh
  427f0a:	dec    edx
  427f0b:	mov    ds:0xc1a1290e,al
  427f10:	and    ecx,ebp
  427f12:	push   esi
  427f13:	add    BYTE PTR [eax],0xe9
  427f16:	sahf   
  427f17:	sub    dl,BYTE PTR [edi]
  427f19:	std    
  427f1a:	sar    BYTE PTR ds:0x3522b987,1
  427f20:	je     0x427f97
  427f22:	xchg   esp,eax
  427f23:	pop    ds
  427f24:	xor    bh,bh
  427f26:	fiadd  WORD PTR [ecx+0x69]
  427f29:	loope  0x427f7c
  427f2b:	mov    dh,0x23
  427f2d:	leave  
  427f2e:	xor    BYTE PTR ds:0xe5e563cf,bh
  427f34:	das    
  427f35:	adc    DWORD PTR [ecx],esp
  427f37:	add    eax,DWORD PTR [eax]
  427f39:	jmp    0x647e3ba5
  427f3e:	jmp    0x427f41
  427f40:	jmpw   0x94d
  427f44:	inc    edx
  427f45:	and    DWORD PTR [eax+0x17],ebx
  427f48:	xor    al,0xf7
  427f4a:	fiadd  WORD PTR [ecx-0x7a]
  427f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f4e:	cmp    dl,0x7e
  427f51:	and    eax,0xbdc986c1
  427f56:	add    al,dh
  427f58:	mov    ds:0x41a6bc7e,eax
  427f5d:	jne    0x427f05
  427f5f:	cdq    
  427f60:	jae    0x427fa7
  427f62:	loopne 0x427fdc
  427f64:	mov    BYTE PTR [ebp-0xf],dl
  427f67:	add    BYTE PTR [edx-0x22],0xf1
  427f6b:	js     0x427f75
  427f6d:	mov    esi,0xb2a11e6
  427f72:	push   esi
  427f73:	sahf   
  427f74:	sub    al,BYTE PTR [edx-0x92f7700]
  427f7a:	mov    BYTE PTR [eax],bh
  427f7c:	jmp    0xdec80aa4
  427f81:	cdq    
  427f82:	aad    0x42
  427f84:	into   
  427f85:	dec    edi
  427f86:	push   ecx
  427f87:	mov    ecx,edi
  427f89:	retf   0x2a0f
  427f8c:	dec    ecx
  427f8d:	pop    ds
  427f8e:	xor    bh,al
  427f90:	leave  
  427f91:	or     ecx,DWORD PTR [eax-0x38]
  427f94:	cmp    BYTE PTR [ebx+0x74],al
  427f97:	inc    edi
  427f98:	pop    ebp
  427f99:	jnp    0x427f9b
  427f9b:	xor    al,0x5
  427f9d:	bound  eax,QWORD PTR [eax]
  427f9f:	mov    ebx,0xea3414cf
  427fa4:	inc    esp
  427fa5:	sti    
  427fa6:	cmp    BYTE PTR [eax],0x41
  427fa9:	loop   0x427faf
  427fab:	call   0x1f51:0x7f4265bd
  427fb2:	sub    BYTE PTR [edi-0x3a],bh
  427fb5:	out    0x6d,eax
  427fb7:	sub    DWORD PTR ds:0x80008b00,eax
  427fbd:	jmp    0x5f16:0x5eba5313
  427fc4:	xchg   BYTE PTR [esi],al
  427fc6:	push   0xfb3cb400
  427fcb:	out    0x88,eax
  427fcd:	sbb    BYTE PTR [eax],al
  427fcf:	add    BYTE PTR [eax-0x3b],cl
  427fd2:	jae    0x427fdb
  427fd4:	pop    ss
  427fd5:	add    al,0xe9
  427fd7:	add    BYTE PTR [ebx-0x32],ah
  427fda:	not    BYTE PTR [esi+0x4c]
  427fdd:	dec    esp
  427fde:	xor    bh,dh
  427fe0:	rol    DWORD PTR [edx-0x2c22ffe5],cl
  427fe6:	cmc    
  427fe7:	inc    ebx
  427fe9:	js     0x427f6d
  427feb:	in     al,dx
  427fec:	inc    ebp
  427fed:	jbe    0x427f71
  427fef:	lock popf 
  427ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ff2:	sar    ebx,0xcd
  427ff5:	ja     0x427fd0
  427ff7:	std    
  427ff8:	arpl   WORD PTR [edi+0x4b],bp
  427ffb:	add    al,0x9c
  427ffd:	sub    edi,edi
  427fff:	cli    
  428000:	mov    al,0xfd
  428002:	out    dx,eax
  428003:	aas    
  428004:	popf   
  428005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428006:	ds je  0x427f98
  428009:	mov    ah,0xc0
  42800b:	sti    
  42800c:	sbb    BYTE PTR [edx-0x30],ch
  42800f:	outs   dx,BYTE PTR es:[esi]
  428011:	(bad)  
  428012:	fimul  WORD PTR [eax-0x3d85185f]
  428018:	ret    
  428019:	add    dh,dh
  42801b:	jae    0x428098
  42801d:	xor    BYTE PTR [esi+0x731e0008],cl
  428023:	pop    ss
  428024:	je     0x427fbe
  428026:	lods   al,BYTE PTR ds:[esi]
  428027:	dec    esp
  428028:	pop    esp
  428029:	nop
  42802a:	das    
  42802b:	fnstsw WORD PTR [ebx+0x64]
  42802e:	pop    es
  42802f:	jge    0x428039
  428031:	push   ds
  428032:	push   0x2
  428034:	bound  ebx,QWORD PTR [esi]
  428036:	push   edx
  428037:	push   DWORD PTR [ecx+eax*1-0x6b]
  42803b:	cld    
  42803c:	gs gs loope 0x42809b
  428040:	dec    esi
  428041:	das    
  428042:	mov    ecx,0x6ce45a46
  428047:	mov    cl,0x86
  428049:	mov    ecx,0x1cf85fac
  42804e:	into   
  42804f:	iret   
  428050:	(bad)  
  428051:	mov    edx,0x4a51b229
  428056:	sbb    al,0x2b
  428058:	push   0xffc3b4e1
  42805d:	dec    edi
  42805e:	mov    cl,0xa7
  428060:	and    esi,DWORD PTR [edx-0x526c0f08]
  428066:	imul   edi,edi,0xcd02e188
  42806c:	repz retf 
  42806e:	inc    ebx
  42806f:	jmp    0x1a03:0xe901ba7f
  428076:	cmc    
  428077:	pop    esp
  428078:	hlt    
  428079:	stos   BYTE PTR es:[edi],al
  42807a:	add    dl,BYTE PTR [esi-0x5c04c4d]
  428080:	xor    DWORD PTR [edx+0xf37d43],edx
  428086:	loop   0x4280c7
  428088:	jne    0x4280a9
  42808a:	mov    cl,0xc7
  42808c:	loope  0x4280bf
  42808e:	mov    al,BYTE PTR [ebx+0x54]
  428091:	push   eax
  428092:	jb     0x4280cf
  428094:	pop    esp
  428095:	(bad)  
  428096:	pop    esp
  428097:	mov    BYTE PTR [ebx+edi*8],0x9d
  42809b:	sub    ebx,esi
  42809d:	add    al,0x9d
  42809f:	add    cl,BYTE PTR [edi-0x2f]
  4280a2:	sub    DWORD PTR [esi-0x768adbf4],esi
  4280a8:	or     eax,0x4589a520
  4280ad:	and    BYTE PTR [ecx-0x98b7ad6],ch
  4280b3:	ds (bad) 
  4280b5:	jmp    DWORD PTR [edx-0x75]
  4280b8:	mov    ds:0xd966b07e,eax
  4280bd:	ret    
  4280be:	loop   0x42808e
  4280c0:	imul   edi,DWORD PTR [edi+0x4b18e27e],0x49
  4280c7:	out    0xc8,al
  4280c9:	dec    edx
  4280ca:	out    dx,eax
  4280cb:	test   BYTE PTR [ecx],ch
  4280cd:	cli    
  4280ce:	push   ds
  4280cf:	pop    ebx
  4280d0:	jmp    0xadce1dd8
  4280d5:	pop    ds
  4280d6:	mov    ebx,edi
  4280d8:	and    eax,0x28f39ed0
  4280dd:	pop    esi
  4280de:	cwde   
  4280df:	sub    ah,BYTE PTR [edx+0x3e970d]
  4280e5:	pusha  
  4280e6:	push   edx
  4280e7:	loop   0x428100
  4280e9:	repnz add bl,ah
  4280ec:	or     DWORD PTR [edi+eiz*2-0x6cfffd62],eax
  4280f3:	jp     0x4280c2
  4280f5:	mov    WORD PTR [ebp+0x5c4fe692],gs
  4280fb:	sub    ah,dl
  4280fd:	pop    ds
  4280fe:	cdq    
  4280ff:	xlat   BYTE PTR ds:[ebx]
  428100:	mov    dh,0x23
  428102:	leave  
  428103:	out    0x50,eax
  428105:	test   DWORD PTR [ecx],ebp
  428107:	push   edi
  428108:	adc    BYTE PTR [esi+0x68029ee9],0xad
  42810f:	rol    dl,0xff
  428112:	imul   edi,DWORD PTR [ecx+0x39],0xbe7d5d8d
  428119:	out    0x6,eax
  42811b:	dec    edi
  42811c:	cmp    al,0xfb
  42811e:	jb     0x4280ff
  428120:	sar    dl,cl
  428122:	aam    0x16
  428124:	pop    ss
  428125:	inc    eax
  428126:	jmp    0x16647b6
  42812b:	push   ecx
  42812c:	cmp    DWORD PTR ds:0xfffe0b6d,edx
  428132:	adc    cl,bh
  428134:	mov    ?,WORD PTR [ebp+ecx*8-0x66]
  428138:	(bad)  
  42813a:	sub    eax,0x74fb396e
  42813f:	sbb    eax,0x9ee877e7
  428144:	add    ch,al
  428146:	dec    esp
  428147:	addr16 cmp ebx,edi
  42814a:	fisubr WORD PTR ds:0x1123c7
  428150:	or     DWORD PTR [ecx],ecx
  428152:	mov    bl,0xa5
  428154:	call   0x23c7:0xde64fe8
  42815b:	pop    ss
  42815c:	icebp  
  42815d:	mov    es,WORD PTR [eax+eax*1+0x8290]
  428164:	test   BYTE PTR [ecx-0x74],dh
  428167:	test   BYTE PTR [eax+0x740000be],ah
  42816d:	jno    0x4280f1
  42816f:	mov    BYTE PTR [edi+ebx*2+0x39],0x5b
  428174:	or     DWORD PTR [ebx+0x1851024],ecx
  42817a:	add    al,ch
  42817c:	fild   DWORD PTR [ebp-0x7]
  42817f:	push   edi
  428181:	ret    0x8517
  428184:	test   BYTE PTR [eax+0x1b],cl
  428187:	call   eax
  428189:	sbb    eax,0xcb838b14
  42818e:	jae    0x4281b4
  428190:	cwde   
  428191:	jbe    0x4281f6
  428193:	les    ebp,FWORD PTR [edi+0x4669fb41]
  428199:	fld1   
  42819b:	cdq    
  42819c:	pop    ebx
  42819d:	retf   0xc083
  4281a0:	pusha  
  4281a1:	cmp    eax,0x3ba044c1
  4281a6:	add    BYTE PTR [ebx],dh
  4281a8:	das    
  4281a9:	retf   0x2473
  4281ac:	in     al,dx
  4281ad:	fsubr  DWORD PTR [edi+0x4aca3a39]
  4281b3:	inc    DWORD PTR [eax]
  4281b5:	nop
  4281b6:	loop   0x4281cb
  4281b8:	push   ecx
  4281ba:	mov    al,0xf
  4281bc:	inc    eax
  4281bd:	hlt    
  4281be:	mov    esi,0x69eb2443
  4281c3:	pop    ecx
  4281c4:	pop    ebx
  4281c5:	dec    edi
  4281c6:	fcomp  QWORD PTR [ebx+eax*8-0x4f]
  4281ca:	mov    edi,0xc92083eb
  4281cf:	sub    ah,0x38
  4281d2:	pop    es
  4281d3:	add    BYTE PTR [eax],al
  4281d5:	div    DWORD PTR [edx-0x7e]
  4281d8:	jne    0x428177
  4281da:	and    esi,DWORD PTR [eax+0x483b30fa]
  4281e0:	jne    0x428173
  4281e2:	popf   
  4281e3:	dec    eax
  4281e4:	adc    eax,0xffbf5a39
  4281e9:	and    eax,0x20101b6e
  4281ee:	jmp    0xffff:0x2aac83f7
  4281f5:	jb     0x42825e
  4281f7:	out    dx,eax
  4281f8:	push   DWORD PTR [edx+0x2a]
  4281fb:	out    dx,eax
  4281fc:	or     ah,BYTE PTR [eax]
  4281fe:	es (bad) 
  428200:	call   FWORD PTR [ebp+0x210b50ae]
  428206:	ds (bad) 
  428208:	call   FWORD PTR [ebp-0x65fff758]
  42820e:	mov    ds:0x299d0053,eax
  428213:	jle    0x42828f
  428215:	mov    eax,ds:0x83f229
  42821a:	inc    esp
  42821b:	sub    bh,bh
  42821d:	push   DWORD PTR ds:0x22f9bb50
  428223:	scas   al,BYTE PTR es:[edi]
  428224:	inc    ebx
  428225:	or     esp,DWORD PTR [ecx]
  428227:	sahf   
  428228:	add    al,0x0
  42822a:	popf   
  42822b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42822c:	mov    edi,0x4319bd23
  428231:	adc    eax,0xffbf3819
  428236:	test   BYTE PTR [ebx],dl
  428238:	jns    0x4281ee
  42823a:	mov    ecx,0x9d00046d
  42823f:	icebp  
  428240:	pop    ebx
  428241:	push   esi
  428242:	or     eax,0x52664385
  428247:	scas   al,BYTE PTR es:[edi]
  428248:	iret   
  428249:	and    ecx,DWORD PTR [ecx+0x2d4a5c11]
  42824f:	lods   eax,DWORD PTR ds:[esi]
  428250:	inc    edx
  428251:	lea    ebx,[ecx]
  428253:	add    ecx,DWORD PTR ds:0xe9029c04
  428259:	pop    ebx
  42825a:	push   cs
  42825b:	ds push edx
  42825d:	inc    edi
  42825e:	xchg   esi,eax
  42825f:	jae    0x428206
  428261:	pop    ds
  428262:	jge    0x428236
  428264:	icebp  
  428265:	mov    fs,ecx
  428267:	out    0x2,al
  428269:	mov    ah,0xa7
  42826b:	jae    0x42821a
  42826d:	pop    ds
  42826e:	mov    bh,0xd2
  428270:	pop    ebp
  428271:	ds in  eax,dx
  428273:	lea    ebp,[ebp+0x20]
  428276:	lea    eax,[ecx]
  428278:	jmp    0x6dd04f80
  42827d:	and    BYTE PTR [eax],al
  42827f:	push   ecx
  428280:	add    ch,cl
  428282:	add    ecx,ebp
  428284:	test   al,0xc2
  428286:	stos   BYTE PTR es:[edi],al
  428287:	sub    DWORD PTR [esi+0x763aabc4],edi
  42828d:	jne    0x4282d4
  42828f:	inc    esi
  428290:	jg     0x4282b7
  428292:	in     al,dx
  428293:	sbb    DWORD PTR [edx+0x63],eax
  428296:	shl    BYTE PTR [ebx],cl
  428298:	(bad)
  42829b:	ins    DWORD PTR es:[edi],dx
  42829c:	cmp    ebx,DWORD PTR [ecx+0x0]
  42829f:	and    al,BYTE PTR [ebx+0x39]
  4282a2:	adc    esp,DWORD PTR [esi]
  4282a4:	ror    DWORD PTR [esi+0x2],cl
  4282a7:	add    eax,0x16466122
  4282ac:	xchg   BYTE PTR [ecx+0x348765cf],ch
  4282b2:	clc    
  4282b3:	retf   
  4282b4:	xor    ebx,DWORD PTR ds:0xdaf97cb2
  4282ba:	iret   
  4282bb:	popa   
  4282bc:	lea    ebp,ds:0x89d25d20
  4282c2:	lock bound edx,QWORD PTR [eax]
  4282c5:	sub    DWORD PTR [ebx+eax*2],eax
  4282c8:	or     dl,BYTE PTR [ecx]
  4282ca:	cmp    BYTE PTR [edx],bl
  4282cc:	ret    0xe8ff
  4282cf:	inc    ebp
  4282d0:	mov    BYTE PTR [ebx+0x21],0x9
  4282d4:	and    eax,edi
  4282d6:	and    DWORD PTR [ebx+0x37],esp
  4282d9:	das    
  4282da:	xor    al,dl
  4282dc:	mov    DWORD PTR [eax-0x1f],ecx
  4282df:	clc    
  4282e0:	lea    esi,[ebp+eax*1+0x0]
  4282e4:	mov    cl,0xbb
  4282e6:	mov    DWORD PTR [esi-0xa],0xdb3f7d9d
  4282ed:	jle    0x4282af
  4282ef:	mov    ebp,0x5743d74
  4282f4:	jne    0x42827d
  4282f6:	inc    esp
  4282f7:	int    0x3a
  4282f9:	cmp    eax,0xca86c574
  4282fe:	push   edx
  4282ff:	sbb    DWORD PTR [edx+ebp*1+0x3ddb7188],0xffffffe8
  428307:	js     0x42836e
  428309:	cmp    al,0xfb
  42830b:	jb     0x42831f
  42830d:	out    0xf,al
  42830f:	xchg   esi,eax
  428310:	add    cl,dl
  428312:	xchg   BYTE PTR [esi*8+0x54e90c77],al
  428319:	cmp    ch,BYTE PTR [ecx-0x17]
  42831c:	jno    0x428322
  42831e:	fsub   DWORD PTR [edx+0x61]
  428321:	cmp    bh,dl
  428323:	hlt    
  428324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428325:	adc    al,0x40
  428327:	jmp    0x724647c3
  42832c:	sar    DWORD PTR [ecx+0x52],cl
  42832f:	bound  ebp,QWORD PTR [esi+0x2a]
  428332:	psubsw mm3,QWORD PTR [esi-0x42d20dfe]
  428339:	or     al,BYTE PTR [ecx]
  42833b:	adc    eax,0xcfe7d3f3
  428340:	xchg   esi,eax
  428341:	cmp    al,0xfb
  428343:	bound  esp,QWORD PTR [ebx+0xbddc]
  428349:	enter  0x4e05,0x8b
  42834d:	push   ebp
  42834e:	mov    ebx,0x38fb043d
  428353:	ror    DWORD PTR [ebx-0x3f7b018c],cl
  428359:	fdivr  DWORD PTR [eax]
  42835b:	jp     0x428355
  42835d:	lds    ecx,FWORD PTR [eax+0x5]
  428360:	jmp    FWORD PTR [ecx-0x4bbff24b]
  428366:	add    BYTE PTR [esi+0x4],0xe3
  42836a:	pusha  
  42836b:	mov    edx,0x8439448b
  428370:	ror    BYTE PTR [eax+0x2e],0x7a
  428374:	clc    
  428375:	jne    0x4283c0
  428377:	add    eax,0x1048a3d
  42837c:	or     BYTE PTR [eax],0x2
  42837f:	sub    eax,eax
  428381:	mov    bh,0x13
  428383:	rol    BYTE PTR [eax-0x49],0x69
  428387:	sub    ah,0x35
  42838a:	and    BYTE PTR [ebp-0x4],0x44
  42838e:	mov    al,0x44
  428390:	cld    
  428391:	and    al,0xbe
  428393:	je     0x4283a1
  428395:	sbb    al,0x4
  428397:	inc    esp
  428398:	add    BYTE PTR [ebx+ebx*2-0x5],al
  42839c:	dec    cl
  42839e:	not    BYTE PTR ss:0x3b27a8
  4283a5:	mov    ecx,0x8f0777c5
  4283aa:	js     0x4283a3
  4283ac:	test   DWORD PTR [eax],eax
  4283ae:	inc    esp
  4283af:	dec    eax
  4283b0:	std    
  4283b1:	xor    dh,BYTE PTR [esp+edi*8]
  4283b4:	mov    ecx,0x8266f408
  4283b9:	icebp  
  4283ba:	or     al,0x32
  4283bc:	sti    
  4283bd:	inc    DWORD PTR [edi+eax*8]
  4283c0:	inc    ebx
  4283c1:	and    al,0x9d
  4283c3:	and    edi,esi
  4283c5:	jae    0x428362
  4283c7:	icebp  
  4283c8:	pop    ebx
  4283c9:	mov    al,ds:0x87448192
  4283ce:	fistp  DWORD PTR [eax]
  4283d0:	ds add al,0x9d
  4283d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283d4:	mov    esp,0x5b20da07
  4283d9:	xchg   DWORD PTR [ebp+0x2b],ebx
  4283dc:	jp     0x42839e
  4283de:	sub    DWORD PTR ds:0xd04d0878,esi
  4283e4:	lods   eax,DWORD PTR ds:[esi]
  4283e5:	pop    es
  4283e6:	push   ds
  4283e7:	inc    ecx
  4283e8:	idiv   edi
  4283ea:	fwait
  4283eb:	js     0x4283e0
  4283ed:	cli    
  4283ee:	test   al,0x69
  4283f0:	lock aas 
  4283f2:	popf   
  4283f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283f4:	xor    al,0xe9
  4283f6:	out    dx,al
  4283f7:	call   0xb5137f3f
  4283fc:	push   edx
  4283fd:	push   ecx
  4283fe:	retf   
  4283ff:	pop    esp
  428400:	dec    ebp
  428401:	push   edx
  428402:	shl    DWORD PTR [edi-0x27],cl
  428405:	dec    al
  428407:	outs   dx,DWORD PTR ds:[esi]
  428408:	lods   eax,DWORD PTR ds:[esi]
  428409:	gs pop edx
  42840b:	cwde   
  42840c:	inc    esp
  42840d:	adc    eax,0xffbf5021
  428412:	add    BYTE PTR [edi-0x7ff93519],al
  428418:	push   edx
  428419:	inc    BYTE PTR [eax]
  42841b:	sbb    eax,0x5d2e07d6
  428420:	push   ebp
  428421:	clc    
  428422:	push   edx
  428423:	mov    ch,0x49
  428425:	pop    ss
  428426:	inc    eax
  428427:	popf   
  428428:	shl    DWORD PTR [ebx+0x18],0x5d
  42842c:	sub    DWORD PTR [edi],esp
  42842e:	push   ebx
  42842f:	adc    bh,BYTE PTR [ecx+0x3f]
  428432:	xchg   DWORD PTR ds:0x99754135,eax
  428438:	cmp    edi,DWORD PTR [edi]
  42843a:	out    0x94,eax
  42843c:	add    dh,BYTE PTR [esi]
  42843e:	inc    ebx
  42843f:	push   0xa9199a06
  428444:	adc    ebp,DWORD PTR [ecx]
  428446:	add    al,0x1a
  428448:	pop    ebx
  428449:	pop    esi
  42844a:	or     edx,DWORD PTR [edx+0x6e10fc58]
  428450:	aaa    
  428451:	sbb    DWORD PTR [ebx+edi*2],ecx
  428454:	inc    edx
  428455:	push   cs
  428456:	jecxz  0x4284bc
  428458:	dec    ecx
  428459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42845a:	or     al,0x9d
  42845c:	test   DWORD PTR [edi+edi*1-0x264d2fb4],esi
  428463:	dec    esp
  428464:	sar    BYTE PTR [edx-0x46c8b02a],1
  42846a:	(bad)  
  42846c:	mov    ebp,0xcf9e8ef4
  428471:	cmp    esp,edx
  428473:	mov    ds:0x1931d3,al
  428478:	fst    QWORD PTR [ebx]
  42847a:	test   eax,0xf4adb403
  42847f:	mov    eax,0x3f93f963
  428484:	icebp  
  428485:	dec    eax
  428486:	mov    ebx,0x7f03f8d9
  42848b:	push   es
  42848c:	out    dx,eax
  42848d:	ror    BYTE PTR [esi-0x352a9f3],1
  428493:	inc    edx
  428494:	mov    al,0x7e
  428496:	fcmovnb st,st(3)
  428498:	inc    edx
  428499:	jle    0x4284c4
  42849b:	(bad)  
  42849c:	loopne 0x4284d4
  42849e:	pop    ebp
  42849f:	or     al,0x1a
  4284a1:	or     bh,BYTE PTR [ecx]
  4284a3:	inc    ebx
  4284a4:	int3   
  4284a5:	or     bh,BYTE PTR [esi-0x1f3ae591]
  4284ab:	mov    WORD PTR [edx+ecx*1+0x79],ds
  4284af:	add    al,0xfa
  4284b1:	pop    ebp
  4284b2:	adc    al,0x8f
  4284b4:	stc    
  4284b5:	add    BYTE PTR [eax],0xc5
  4284b8:	mov    ds:0xd3e8fffe,al
  4284bd:	shr    BYTE PTR ds:0x153bd7c2,1
  4284c3:	loope  0x428455
  4284c5:	ret    0x69ff
  4284c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284c9:	cmp    esi,DWORD PTR [ebp+ecx*1+0x49]
  4284cd:	adc    dh,BYTE PTR [eax+esi*8+0x23]
  4284d1:	dec    ebx
  4284d2:	call   0xfb794960
  4284d7:	adc    BYTE PTR [ebx+edx*8+0x4000f4e7],0x3c
  4284df:	sti    
  4284e0:	ins    DWORD PTR es:[edi],dx
  4284e1:	pop    esi
  4284e2:	lods   eax,DWORD PTR ds:[esi]
  4284e3:	shl    DWORD PTR fs:[edx+0x13e90001],1
  4284ea:	push   ebx
  4284eb:	lea    ebx,[edx+ecx*8+0x37]
  4284ef:	sti    
  4284f0:	inc    esi
  4284f1:	(bad)  
  4284f2:	adc    ch,BYTE PTR [edx+0x3f]
  4284f5:	fild   WORD PTR [edi+0x39dd4585]
  4284fb:	sti    
  4284fc:	cdq    
  4284fd:	fisttp WORD PTR [edi]
  4284ff:	nop
  428500:	cli    
  428501:	pop    esi
  428502:	mov    WORD PTR ss:[edx+esi*4-0x61163f86],ss
  42850a:	add    ch,al
  42850c:	ins    DWORD PTR es:[edi],dx
  42850d:	sub    eax,0x2574fb3a
  428512:	pop    ds
  428513:	idiv   esi
  428515:	(bad)  
  428517:	gs jmp 0x5c92c630
  42851d:	and    eax,0xdce6fd27
  428522:	sar    dl,cl
  428524:	hlt    
  428525:	jmp    0x7443:0x1be94012
  42852c:	in     eax,dx
  42852d:	dec    eax
  42852e:	add    ecx,DWORD PTR [ebp-0xd157f00]
  428534:	dec    DWORD PTR [ebx+0x4f]
  428537:	dec    esi
  428538:	jmp    ecx
  42853a:	cdq    
  42853b:	adc    DWORD PTR [eax+0x4],eax
  42853e:	test   DWORD PTR [ebp-0x3bc0ff1c],eax
  428544:	not    BYTE PTR [eax+0xc]
  428547:	adc    ebx,DWORD PTR [edx+0x74c40bfe]
  42854d:	or     al,0x2b
  42854f:	outs   dx,BYTE PTR ds:[esi]
  428550:	add    edx,DWORD PTR [edi+0x2c]
  428553:	jg     0x428580
  428555:	add    BYTE PTR [ebp+edi*2+0x39e875c0],dh
  42855c:	inc    esp
  42855d:	adc    BYTE PTR [ecx-0x51048004],dh
  428563:	ins    DWORD PTR es:[edi],dx
  428564:	adc    DWORD PTR [eax-0x5c],ebp
  428567:	sub    bh,bl
  428569:	dec    DWORD PTR [ebx+0xd]
  42856c:	enter  0x4412,0x1
  428570:	test   bl,0xed
  428573:	push   edx
  428574:	idiv   bh
  428576:	retf   
  428577:	scas   al,BYTE PTR es:[edi]
  428578:	add    bl,ch
  42857a:	jbe    0x4285ab
  42857c:	mov    ebx,0xb9c80f5e
  428581:	or     al,0x84
  428583:	dec    esp
  428584:	sub    ah,0xf5
  428587:	repnz pop ss
  428589:	add    DWORD PTR [ecx+eax*1+0x4b],esi
  42858d:	push   esi
  42858e:	adc    eax,edx
  428590:	xor    al,0x7c
  428592:	call   0xd1cf80d6
  428597:	icebp  
  428598:	out    0x9f,eax
  42859a:	pop    es
  42859b:	add    DWORD PTR [eax],eax
  42859d:	test   BYTE PTR [ebx+edx*1+0x1449684],al
  4285a4:	add    BYTE PTR [ebx+0x6c900],al
  4285aa:	(bad)  
  4285ab:	popf   
  4285ac:	out    0x40,al
  4285ae:	add    BYTE PTR [eax-0x528abfdb],dl
  4285b4:	mov    al,0xb9
  4285b6:	or     ecx,DWORD PTR [edx]
  4285b8:	out    dx,al
  4285b9:	aaa    
  4285ba:	sti    
  4285bb:	mov    BYTE PTR [ebx+0x27],bh
  4285be:	repnz sti 
  4285c0:	arpl   WORD PTR [eax-0x78],ax
  4285c3:	pop    eax
  4285c4:	pop    esp
  4285c5:	mov    al,BYTE PTR [ebp-0x13]
  4285c8:	xchg   edx,eax
  4285c9:	or     dh,BYTE PTR [ebx*4+0x26672c2b]
  4285d0:	push   es
  4285d1:	cmp    BYTE PTR [ebx-0x2e],dl
  4285d4:	xor    eax,0x6d94e82f
  4285d9:	inc    ecx
  4285da:	sti    
  4285db:	push   ss
  4285dc:	mov    ebx,0x82ad4589
  4285e1:	xor    ch,BYTE PTR [edi]
  4285e3:	popf   
  4285e4:	sub    eax,DWORD PTR [edx-0x5885ce0e]
  4285ea:	xchg   DWORD PTR [eax-0x5a9800d5],ebx
  4285f0:	dec    edx
  4285f1:	mov    edi,0x26a721ff
  4285f6:	cli    
  4285f7:	mov    dh,ch
  4285f9:	es inc edx
  4285fb:	and    ebp,ebp
  4285fd:	aas    
  4285fe:	push   eax
  4285ff:	es adc eax,0x6985c28c
  428605:	fwait
  428606:	cli    
  428607:	push   0xffffff9f
  428609:	ds je  0x42860c
  42860c:	mov    ch,0x9e
  42860e:	mov    eax,ebp
  428610:	pop    ebx
  428611:	add    eax,0xb7525140
  428616:	push   es
  428617:	mov    bh,0x3b
  428619:	sub    edi,edi
  42861b:	push   DWORD PTR ds:0x3afa9bcb
  428621:	sahf   
  428622:	ds je  0x4285b2
  428625:	add    ah,dl
  428627:	mov    ecx,0xc16dcb9a
  42862c:	xchg   esi,eax
  42862d:	int3   
  42862e:	rol    BYTE PTR [edi-0x7335cbe9],0x58
  428635:	xor    ebx,DWORD PTR [ebx]
  428637:	sub    al,0xc9
  428639:	in     eax,dx
  42863a:	mov    edx,0xb1be1b3f
  42863f:	fist   WORD PTR [edi+edx*8-0x61]
  428643:	inc    edx
  428644:	mov    eax,ds:0xf98b3c02
  428649:	or     DWORD PTR [ebp-0x16cc1f18],0x896e29d5
  428653:	inc    ecx
  428654:	(bad)  
  428655:	xor    edx,DWORD PTR [ecx+0x7a335327]
  42865b:	xchg   ecx,eax
  42865c:	sbb    BYTE PTR [edi],bl
  42865e:	je     0x42869f
  428660:	mov    dh,0xd2
  428662:	(bad)  
  428663:	test   al,0xb7
  428665:	jmp    0x4286b7
  428667:	sbb    esi,DWORD PTR [esi]
  428669:	add    ch,cl
  42866b:	xchg   ebp,ebx
  42866d:	jns    0x4286b2
  42866f:	add    eax,0x5e029d00
  428674:	inc    esi
  428675:	or     BYTE PTR [eax],cl
  428677:	sub    eax,DWORD PTR [ebx*4-0x7a47503e]
  42867e:	lock sub BYTE PTR [ebx],ch
  428681:	loope  0x4286bf
  428683:	jmp    0x9c0c638b
  428688:	cmp    al,0x75
  42868a:	dec    ecx
  42868b:	cmp    BYTE PTR ds:0x2bfca866,0x1b
  428692:	fwait
  428693:	or     bh,BYTE PTR [edi]
  428695:	in     eax,dx
  428696:	test   al,0x8a
  428698:	mov    gs,WORD PTR ds:[edx]
  42869b:	xchg   ecx,eax
  42869c:	lods   eax,DWORD PTR ds:[esi]
  42869d:	inc    edx
  42869e:	xor    eax,DWORD PTR [eax]
  4286a0:	ins    DWORD PTR es:[edi],dx
  4286a1:	loope  0x428651
  4286a3:	(bad)  
  4286a4:	pop    esp
  4286a5:	fs dec edi
  4286a7:	push   eax
  4286a8:	shl    ecx,1
  4286aa:	push   edi
  4286ab:	cli    
  4286ac:	fdivp  st(0),st
  4286ae:	mov    bl,0x7c
  4286b0:	mov    ebp,0x5c10ae9e
  4286b5:	in     eax,0x4e
  4286b7:	push   eax
  4286b8:	push   ebx
  4286b9:	inc    edx
  4286ba:	cmp    BYTE PTR [ebx],dh
  4286bc:	rcr    DWORD PTR [ebx-0x58],1
  4286bf:	(bad)  
  4286c0:	call   0x73b6c8e7
  4286c5:	outs   dx,BYTE PTR ds:[esi]
  4286c6:	add    DWORD PTR [edx-0x50],ebx
  4286c9:	pop    edi
  4286ca:	int    0x86
  4286cc:	lea    ebx,[ecx]
  4286ce:	es call 0x524525bd
  4286d4:	mov    es,WORD PTR [eax]
  4286d6:	mov    ch,0x6
  4286d8:	movaps XMMWORD PTR [ecx-0x2a930f85],xmm4
  4286df:	cs push eax
  4286e1:	scas   al,BYTE PTR es:[edi]
  4286e2:	in     eax,0x2e
  4286e4:	or     cl,ch
  4286e6:	sahf   
  4286e7:	add    bh,bl
  4286e9:	cld    
  4286ea:	mov    ds:0x15e9400d,al
  4286ef:	inc    edx
  4286f0:	je     0x4286de
  4286f2:	daa    
  4286f3:	inc    ebp
  4286f4:	daa    
  4286f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286f6:	(bad)  
  4286f7:	jnp    0x42873e
  4286f9:	inc    ecx
  4286fa:	sbb    eax,ecx
  4286fc:	in     al,0x6c
  4286fe:	push   ebp
  4286ff:	inc    edx
  428700:	push   eax
  428701:	das    
  428702:	gs push edx
  428704:	add    DWORD PTR [eax+0x35],esp
  428707:	and    edi,ebx
  428709:	cld    
  42870a:	push   ss
  42870b:	add    DWORD PTR [eax-0x17],eax
  42870e:	or     eax,0x86b9cfc8
  428713:	pop    edx
  428714:	push   eax
  428715:	setae  BYTE PTR [ebx+0x45]
  428719:	add    BYTE PTR [ebp+0x431c8592],ch
  42871f:	lock not BYTE PTR [eax+0x33]
  428723:	sbb    dl,BYTE PTR [eax-0x7cf9fbee]
  428729:	test   DWORD PTR [eax-0x30000911],esp
  42872f:	mov    bl,0x89
  428732:	leave  
  428733:	loope  0x428796
  428735:	adc    DWORD PTR [ecx+0x49],esi
  428738:	fist   DWORD PTR [eax+0x0]
  42873b:	(bad)
  42873f:	outs   dx,DWORD PTR ds:[esi]
  428740:	out    dx,eax
  428741:	das    
  428742:	call   0x3de98f
  428747:	mov    ds:0xf404b9bd,al
  42874c:	pop    eax
  42874d:	sub    ah,0x77
  428750:	repnz (bad)
  428753:	sahf   
  428754:	and    eax,0xef8a0065
  428759:	adc    al,0x34
  42875b:	jmp    0x6212:0xf882fb45
  428762:	sbb    eax,0x4688688c
  428767:	lds    eax,FWORD PTR [eax-0x381b0fbb]
  42876d:	std    
  42876e:	add    BYTE PTR [esi+edx*2-0x2a],cl
  428772:	(bad)  
  428773:	repz push 0x68f44582
  428779:	mov    BYTE PTR [esi+0x79],al
  42877c:	add    BYTE PTR [di-0x3a],0x68
  428781:	mov    BYTE PTR [esi-0x75],al
  428784:	add    BYTE PTR [ebp-0x4],0x14
  428788:	(bad)  
  42878a:	loop   0x42874e
  42878c:	out    dx,eax
  42878d:	mov    dh,0xff
  42878f:	add    DWORD PTR [esi],0x0
  428792:	test   DWORD PTR [ebp+0x260db7db],ebx
  428798:	mov    ?,WORD PTR [ebx]
  42879a:	aaa    
  42879b:	pop    edx
  42879c:	cmp    ah,al
  42879e:	retf   0xed00
  4287a1:	mov    DWORD PTR [esi+0x5303a44a],eax
  4287a7:	das    
  4287a8:	xor    esp,DWORD PTR [eax]
  4287aa:	mov    al,BYTE PTR [ebp+0x29]
  4287ad:	jmp    0x4287da
  4287af:	ss aas 
  4287b1:	push   ecx
  4287b2:	cmp    al,0x85
  4287b4:	(bad)  
  4287b6:	or     eax,0xf83f6087
  4287bb:	retf   0xe09a
  4287be:	dec    esp
  4287bf:	push   eax
  4287c0:	jnp    0x428774
  4287c2:	int3   
  4287c3:	push   es
  4287c4:	add    eax,0xf2f9efb1
  4287c9:	int    0xc1
  4287cb:	sti    
  4287cc:	dec    ebp
  4287cd:	xchg   ebx,eax
  4287ce:	and    ecx,0xc0828fe3
  4287d4:	push   ecx
  4287d5:	sub    dh,dh
  4287d7:	jl     0x4287aa
  4287d9:	jmp    0x88a5:0x8748420c
  4287e0:	inc    ebx
  4287e1:	push   ds
  4287e2:	daa    
  4287e3:	cwde   
  4287e4:	outs   dx,BYTE PTR ds:[esi]
  4287e5:	mov    ecx,0x9f588d3b
  4287ea:	into   
  4287eb:	addr16 add eax,0xb5ffff1b
  4287f1:	mov    ebx,0x799afa5a
  4287f6:	add    al,0x9
  4287f9:	sub    eax,DWORD PTR [eax-0x4ed57683]
  4287ff:	add    al,0xfb
  428801:	pushf  
  428802:	int3   
  428803:	inc    BYTE PTR [eax]
  428805:	popf   
  428806:	mov    DWORD PTR [edi],esp
  428808:	je     0x4287b8
  42880a:	fistp  QWORD PTR [ebx]
  42880c:	leave  
  42880d:	pop    esi
  42880e:	add    edi,DWORD PTR [eax+ecx*4-0x24f27d8f]
  428815:	pop    eax
  428816:	xor    cl,ch
  428818:	shr    ah,1
  42881a:	xlat   BYTE PTR ds:[ebx]
  42881b:	dec    ebp
  42881c:	pop    es
  42881d:	pushf  
  42881e:	add    ch,cl
  428820:	rcl    BYTE PTR [ecx],1
  428822:	xchg   BYTE PTR [ebp+0x3e],cl
  428825:	xor    BYTE PTR ss:[ecx-0x2bcecd57],bl
  42882c:	inc    ebx
  42882d:	fwait
  42882e:	ret    0x8ee8
  428831:	pusha  
  428832:	div    dl
  428834:	ret    
  428835:	sbb    bh,BYTE PTR [ebx+0x2c]
  428838:	cmp    al,0x18
  42883a:	inc    ebx
  42883b:	push   ebp
  42883c:	pop    ss
  42883d:	sbb    BYTE PTR [esi-0x6b],bh
  428840:	cmp    DWORD PTR [esi],eax
  428842:	xor    BYTE PTR [eax],bl
  428844:	mov    DWORD PTR [eax+0x56],esi
  428847:	rcr    esp,0x6a
  42884a:	xor    BYTE PTR [edx-0xc4a2280],ch
  428850:	lods   eax,DWORD PTR ds:[esi]
  428851:	xchg   esi,eax
  428852:	jge    0x428878
  428854:	push   eax
  428855:	inc    ebx
  428856:	add    bh,BYTE PTR [ecx]
  428858:	cmp    ebp,esi
  42885a:	and    DWORD PTR [ebp-0x76ea39f8],0x16
  428861:	pop    ebp
  428862:	add    ch,BYTE PTR [esi+0x34]
  428865:	dec    edi
  428866:	das    
  428867:	fadd   QWORD PTR [ebx-0x173d5d00]
  42886d:	jl     0x428819
  42886f:	add    ch,cl
  428871:	add    ebp,DWORD PTR [edx+0x41]
  428874:	mov    bl,0x88
  428876:	adc    BYTE PTR [edi],bl
  428878:	loop   0x428842
  42887a:	pop    ebp
  42887b:	sbb    al,BYTE PTR [esp+edi*4]
  42887e:	test   BYTE PTR [edi],ch
  428880:	ins    DWORD PTR es:[edi],dx
  428881:	inc    esp
  428882:	or     bh,bh
  428884:	into   
  428885:	pop    es
  428886:	and    cl,BYTE PTR [eax+0x0]
  428889:	ret    
  42888a:	sahf   
  42888b:	sar    dl,cl
  42888d:	push   ss
  42888e:	and    al,BYTE PTR [esi+0xc]
  428891:	je     0x4288ef
  428893:	aaa    
  428894:	push   eax
  428895:	ins    BYTE PTR es:[edi],dx
  428896:	sbb    al,0x5e
  428898:	std    
  428899:	push   ss
  42889a:	xchg   esi,eax
  42889b:	shl    BYTE PTR [ebp-0x15],cl
  42889e:	sbb    ebp,ecx
  4288a0:	test   DWORD PTR [esi],0xa90f76ac
  4288a6:	sahf   
  4288a7:	xchg   al,al
  4288a9:	jge    0x428837
  4288ab:	jge    0x428832
  4288ad:	cmp    eax,0x39fb2b64
  4288b2:	adc    al,ch
  4288b4:	imul   DWORD PTR [ebp+ecx*2+0x4f]
  4288b8:	call   0xfb6bd87d
  4288bd:	gs pop esi
  4288bf:	mov    ch,0xc
  4288c1:	push   ebx
  4288c2:	xchg   ebp,eax
  4288c3:	jge    0x42890a
  4288c5:	leave  
  4288c6:	dec    eax
  4288c7:	das    
  4288c8:	dec    ebx
  4288c9:	mov    dh,0x4f
  4288cb:	scas   eax,DWORD PTR es:[edi]
  4288cc:	ret    
  4288cd:	fld    QWORD PTR [eax]
  4288cf:	adc    eax,0x1439cbc5
  4288d4:	(bad)
  4288d7:	and    al,0xc5
  4288d9:	mov    ebx,0xb3c52439
  4288de:	cmp    ebx,edi
  4288e0:	sub    edi,ebx
  4288e2:	fdivr  QWORD PTR [edx]
  4288e4:	adc    DWORD PTR [eax-0x17],eax
  4288e7:	sbb    eax,0xabed7542
  4288ec:	xor    bh,ah
  4288ee:	enter  0xc51b,0xb3
  4288f2:	jb     0x4288c9
  4288f4:	jbe    0x42895c
  4288f6:	jmp    0x28c28b98
  4288fb:	and    BYTE PTR [esi+0x326777f],0x81
  428902:	add    BYTE PTR [ebp-0x459db6da],ah
  428908:	push   esi
  428909:	dec    ebx
  42890a:	call   0x427137
  42890f:	push   ecx
  428911:	or     BYTE PTR [ebp-0x74],0x4
  428915:	dec    ebp
  428916:	hlt    
  428917:	iret   
  428918:	inc    edx
  428919:	xlat   BYTE PTR ds:[ebx]
  42891a:	lea    ecx,[eax]
  42891c:	pop    es
  42891d:	or     cl,BYTE PTR [ecx-0x247b1607]
  428923:	rol    DWORD PTR [eax],0x2b
  428926:	dec    DWORD PTR [ebp+0x44000080]
  42892c:	jge    0x4288e9
  42892e:	call   0x3bc18e
  428933:	add    BYTE PTR [edi+0x70ff84ee],ch
  428939:	ins    BYTE PTR es:[edi],dx
  42893a:	rol    DWORD PTR [edi],0x5
  42893d:	mov    eax,ds:0x6b7b093
  428942:	mov    DWORD PTR [edi-0xb],eax
  428945:	mov    eax,ds:0x6c7b08f
  42894a:	lea    ebx,[edi-0x2a]
  42894d:	jns    0x42898e
  42894f:	add    eax,0x11b7fe3b
  428954:	mov    ah,0x6
  428956:	pop    esi
  428957:	mov    DWORD PTR [ebx-0x43887700],eax
  42895d:	arpl   WORD PTR [edx+0x357ff845],ax
  428963:	xor    dl,ah
  428965:	inc    ecx
  428966:	sti    
  428967:	gs sub eax,0x3f660743
  42896d:	ins    DWORD PTR es:[edi],dx
  42896e:	out    dx,eax
  42896f:	cmp    ax,0x943
  428973:	data16 das 
  428975:	ins    DWORD PTR es:[edi],dx
  428976:	jecxz  0x4289de
  428978:	or     eax,0x9d0f0b44
  42897d:	mov    ecx,es
  42897f:	or     ebp,ebp
  428981:	mov    esp,0xc4eed3aa
  428986:	dec    ebp
  428987:	or     esi,DWORD PTR [edx]
  428989:	fs add edi,edi
  42898c:	dec    edx
  42898d:	and    al,0x70
  42898f:	inc    ebx
  428990:	fwait
  428991:	cwde   
  428992:	aas    
  428993:	or     al,0xcd
  428995:	in     al,0xaa
  428997:	jmp    0x428999
  428999:	out    dx,al
  42899a:	or     al,0x4e
  42899c:	or     ecx,DWORD PTR [edx]
  42899e:	pop    esp
  42899f:	movq   QWORD PTR [ecx+0x4f],mm4
  4289a3:	iret   
  4289a4:	or     cl,BYTE PTR [edx]
  4289a6:	pop    esp
  4289a7:	or     ebx,edi
  4289a9:	mov    al,0xfb
  4289ab:	add    al,0xbf
  4289ad:	int    0x34
  4289af:	push   ecx
  4289b0:	xchg   eax,ecx
  4289b2:	xor    eax,DWORD PTR [esp+eax*8-0x2c56496f]
  4289b9:	add    eax,0x12f9b16e
  4289be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289bf:	test   eax,0xb175f5eb
  4289c4:	stc    
  4289c5:	add    dh,BYTE PTR [esi+0x5e05dfa9]
  4289cb:	mov    cl,0xf9
  4289cd:	repnz lahf 
  4289cf:	mov    ecx,0x8c531407
  4289d4:	ret    
  4289d5:	inc    edx
  4289d6:	(bad)
  4289d9:	fbld   TBYTE PTR [esi]
  4289db:	dec    DWORD PTR [esi+0x68]
  4289de:	in     al,dx
  4289df:	cmp    eax,0x23839c02
  4289e4:	push   es
  4289e5:	popf   
  4289e6:	sbb    ecx,DWORD PTR [ebp+ebp*1-0x40b737]
  4289ed:	outs   dx,DWORD PTR ds:[esi]
  4289ee:	nop
  4289ef:	xchg   DWORD PTR [edx-0x64],eax
  4289f2:	fcom   QWORD PTR [esi-0x3b]
  4289f5:	pop    esi
  4289f6:	add    ch,cl
  4289f8:	sti    
  4289f9:	mov    ecx,0xc4243a
  4289fe:	xchg   edx,eax
  4289ff:	mov    bh,0x0
  428a01:	rol    DWORD PTR [edi+0x55171156],1
  428a07:	inc    esi
  428a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a09:	add    esi,eax
  428a0b:	adc    al,0x51
  428a0d:	(bad)  
  428a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a0f:	add    ch,cl
  428a11:	jg     0x428a70
  428a13:	mov    bh,0xdb
  428a15:	mov    al,BYTE PTR [eax+0x5ac42c3e]
  428a1b:	inc    esi
  428a1c:	in     al,0x4b
  428a1e:	pop    eax
  428a1f:	shr    al,0x2
  428a22:	out    dx,al
  428a23:	sub    esi,esp
  428a25:	xor    edx,DWORD PTR [ebx-0x25e173e]
  428a2b:	lock and al,0xc4
  428a2e:	xor    ah,BYTE PTR [esi+0x2428c15f]
  428a34:	or     BYTE PTR ds:0xbe71029d,cl
  428a3a:	sahf   
  428a3b:	jmp    0xb0e8:0xbfd84bfb
  428a42:	ret    0xc9d3
  428a45:	push   ecx
  428a46:	lds    ecx,FWORD PTR ds:0x2ba41b1
  428a4c:	xor    al,0xe
  428a4e:	add    eax,0x9d03e008
  428a53:	xchg   BYTE PTR [ecx+0x47991b0],ch
  428a59:	dec    eax
  428a5a:	loopne 0x428a1b
  428a5c:	call   0xac7d229e
  428a61:	ret    
  428a62:	add    dl,cl
  428a64:	add    dh,BYTE PTR [edx]
  428a66:	aaa    
  428a67:	test   al,0x32
  428a69:	xlat   BYTE PTR ds:[ebx]
  428a6a:	ret    
  428a6b:	mov    edx,0xdeee47a5
  428a70:	mov    edi,0x7b08e8ff
  428a75:	inc    edx
  428a76:	in     al,0x76
  428a78:	dec    ebx
  428a79:	push   es
  428a7a:	jmp    0xe685041d
  428a7f:	retf   
  428a80:	adc    eax,0x2b5ef8a4
  428a85:	pop    edx
  428a86:	lods   al,BYTE PTR ds:[esi]
  428a87:	and    BYTE PTR [edx+0x42],bh
  428a8a:	repnz push edi
  428a8c:	ins    BYTE PTR es:[edi],dx
  428a8d:	push   ebp
  428a8e:	jb     0x428a55
  428a90:	stos   DWORD PTR es:[edi],eax
  428a91:	jecxz  0x428ac4
  428a93:	and    BYTE PTR [esi],bl
  428a95:	xchg   esp,eax
  428a96:	jmp    0x428a36
  428a98:	add    cl,BYTE PTR [edi-0x41]
  428a9b:	imul   ebp,DWORD PTR [eax],0x15
  428a9e:	push   ecx
  428a9f:	test   al,0xc2
  428aa1:	(bad)  
  428aa2:	(bad)  
  428aa4:	jns    0x428aea
  428aa6:	lds    esi,FWORD PTR [edx]
  428aa8:	hlt    
  428aa9:	mov    esi,0xbfdc3b7c
  428aae:	adc    BYTE PTR [esi],dh
  428ab0:	sub    eax,0x54f6e9fb
  428ab5:	add    ecx,ebp
  428ab7:	sahf   
  428ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ab9:	pop    es
  428aba:	out    0xd,al
  428abc:	dec    ebx
  428abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428abe:	sub    bl,BYTE PTR [ecx+0x10d443f]
  428ac4:	sub    eax,0x9e00e9fb
  428ac9:	daa    
  428aca:	adc    eax,0xffc28fed
  428acf:	jno    0x428a87
  428ad1:	repz idiv BYTE PTR ds:0x5847d49
  428ad8:	or     DWORD PTR [edx],eax
  428ada:	add    cl,ch
  428adc:	out    dx,al
  428add:	mov    ebx,0xcabd114e
  428ae2:	(bad)  
  428ae3:	call   0xe845cbd7
  428ae8:	adc    esi,ecx
  428aea:	and    eax,DWORD PTR [eax]
  428aec:	shl    bl,1
  428aee:	adc    al,0x50
  428af0:	xlat   BYTE PTR ds:[ebx]
  428af1:	ds sti 
  428af3:	test   ah,dh
  428af5:	jno    0x428b04
  428af7:	lea    edi,[eax]
  428af9:	dec    ebx
  428afa:	mov    eax,DWORD PTR [eax]
  428afc:	test   BYTE PTR [esi],al
  428afe:	push   eax
  428aff:	dec    DWORD PTR [ecx+0x74400b86]
  428b05:	ja     0x428b4b
  428b07:	and    al,0x8c
  428b09:	pop    esi
  428b0a:	jecxz  0x428a97
  428b0c:	inc    esp
  428b0d:	push   es
  428b0e:	lea    eax,[eax+ebx*4+0x24]
  428b12:	dec    ebx
  428b13:	dec    DWORD PTR [ecx-0x2]
  428b16:	adc    BYTE PTR [eax+0x74],al
  428b19:	jnp    0x428b8f
  428b1b:	and    al,0xc
  428b1d:	scas   al,BYTE PTR es:[edi]
  428b1e:	pushf  
  428b1f:	add    BYTE PTR [esi+eax*1-0x18],al
  428b23:	mov    eax,ds:0x8bf6f0bb
  428b28:	jp     0x428b11
  428b2a:	inc    ebx
  428b2b:	and    al,0x0
  428b2d:	push   0x5844beff
  428b32:	push   ds
  428b33:	sbb    al,BYTE PTR [eax]
  428b35:	xor    al,0x6
  428b37:	mov    DWORD PTR [eax+ebx*2+0x22],eax
  428b3b:	mov    BYTE PTR [eax+ebp*4+0x2e],bl
  428b3f:	sbb    DWORD PTR [eax+ebx*4-0x1],0xffffff88
  428b44:	pop    esp
  428b45:	cwde   
  428b46:	push   cs
  428b47:	or     DWORD PTR [eax+ebx*4+0xe],0x2b
  428b4c:	rol    ah,0xd3
  428b4f:	fild   WORD PTR [ebp+0xf2f22b8]
  428b55:	js     0x428bb4
  428b57:	add    BYTE PTR [eax],al
  428b59:	hlt    
  428b5a:	jp     0x428ba0
  428b5c:	and    al,0xd8
  428b5e:	out    dx,eax
  428b5f:	add    DWORD PTR ds:[edi+0x42],eax
  428b63:	pop    ds
  428b64:	adc    al,0x9d
  428b66:	sub    eax,0xa59a3482
  428b6b:	mov    edi,0xf9b3aa23
  428b70:	or     ch,bl
  428b72:	pop    ebx
  428b73:	call   0x5988:0x99dadd7e
  428b7a:	aas    
  428b7b:	adc    ecx,DWORD PTR [ebp+0x5017f7e1]
  428b81:	pop    ebx
  428b82:	pop    edi
  428b83:	fist   DWORD PTR [eax]
  428b85:	popf   
  428b86:	ror    BYTE PTR [edx],1
  428b88:	mov    al,ds:0x47ff5bac
  428b8d:	in     eax,0x30
  428b8f:	jnp    0x428b4f
  428b91:	add    BYTE PTR [ebp-0x65b800e5],bl
  428b97:	xchg   edi,eax
  428b98:	outs   dx,BYTE PTR ds:[esi]
  428b99:	add    BYTE PTR [ebp+0x210ac71b],bl
  428b9f:	mov    esp,0x739d0003
  428ba4:	add    al,0x84
  428ba6:	xor    BYTE PTR [ebx],bl
  428ba8:	(bad)  
  428ba9:	call   ebp
  428bab:	dec    eax
  428bac:	jp     0x428b55
  428bae:	popf   
  428baf:	sbb    edi,edi
  428bb1:	rcr    ecx,0x3f
  428bb4:	add    al,BYTE PTR ds:0x443d19ed
  428bba:	jns    0x428c05
  428bbc:	inc    DWORD PTR [ebx-0x1d84d023]
  428bc2:	popf   
  428bc3:	sbb    edi,edi
  428bc5:	addr16 mov al,ds:0xff1a
  428bc9:	call   DWORD PTR [eax]
  428bcb:	lahf   
  428bcc:	ficom  DWORD PTR [ebx+0x4fff1b9d]
  428bd2:	dec    esi
  428bd3:	or     al,0xd1
  428bd5:	dec    esi
  428bd6:	dec    esi
  428bd7:	sahf   
  428bd8:	mov    edx,0x350ba523
  428bdd:	adc    eax,0xc3f801dd
  428be2:	sar    BYTE PTR [ebp-0x57],cl
  428be5:	add    al,0x21
  428be7:	jge    0x428bd2
  428be9:	add    ebx,DWORD PTR [ebp+0x259da8f5]
  428bef:	jle    0x428bbe
  428bf1:	fwait
  428bf2:	mov    bl,0x28
  428bf4:	jmp    0xde638c7f
  428bf9:	pop    eax
  428bfa:	add    ebx,DWORD PTR [ebp-0x4fcae6fe]
  428c00:	jp     0x428bff
  428c02:	ret    
  428c03:	xchg   edx,eax
  428c04:	jnp    0x428bc3
  428c06:	fistp  QWORD PTR [edx-0x2679d20c]
  428c0c:	fiadd  WORD PTR [esp+ebp*1]
  428c0f:	xchg   edi,eax
  428c10:	(bad)  
  428c11:	call   0xb585a419
  428c16:	aad    0xda
  428c18:	jne    0x428c87
  428c1a:	fisttp WORD PTR [esi]
  428c1c:	add    ebp,ecx
  428c1e:	add    ebp,ebp
  428c20:	daa    
  428c21:	cld    
  428c22:	jae    0x428bd0
  428c24:	ret    0x7ee8
  428c27:	pop    ebp
  428c28:	scas   al,BYTE PTR es:[edi]
  428c29:	test   eax,0xcaaf6a7f
  428c2e:	xor    DWORD PTR [edx],0x2
  428c31:	jge    0x428c24
  428c33:	and    esp,eax
  428c35:	cli    
  428c36:	imul   BYTE PTR [ebx]
  428c38:	mov    cl,0xb9
  428c3a:	cmp    eax,0x13daded9
  428c3f:	add    dh,bl
  428c41:	stos   BYTE PTR es:[edi],al
  428c42:	enter  0xf5be,0xe4
  428c46:	push   ds
  428c47:	scas   eax,DWORD PTR es:[edi]
  428c48:	inc    eax
  428c49:	sub    eax,0xbe0391e8
  428c4e:	add    ebx,edi
  428c50:	mov    esi,0x1af3010c
  428c55:	sbb    dh,BYTE PTR [ebx]
  428c57:	out    0x27,al
  428c59:	add    BYTE PTR [edi+0xce3d500],ch
  428c5f:	call   0x3d2bf434
  428c64:	mov    gs,WORD PTR [ebx]
  428c66:	sti    
  428c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c68:	aad    0xe3
  428c6a:	or     ecx,ebx
  428c6c:	mov    ds:0xc525c1fd,eax
  428c71:	stc    
  428c72:	pop    ds
  428c73:	xchg   DWORD PTR [edx+0x1f],ebx
  428c76:	xchg   ebp,eax
  428c77:	mov    edx,0xcd44755b
  428c7c:	fidiv  WORD PTR [edi-0x147ada74]
  428c82:	dec    edi
  428c83:	mov    edx,0x1123be1d
  428c88:	jno    0x428cb6
  428c8a:	adc    eax,0xffc2a895
  428c8f:	arpl   cx,sp
  428c91:	scas   al,BYTE PTR es:[edi]
  428c92:	sbb    esi,DWORD PTR [edx+0x65]
  428c95:	jecxz  0x428cce
  428c97:	jo     0x428cf0
  428c99:	and    eax,0xeb7aad86
  428c9e:	mov    BYTE PTR [edi-0x32bb805c],ah
  428ca4:	pop    esi
  428ca5:	jp     0x428ce9
  428ca7:	repz retf 
  428ca9:	mov    esi,0xc4c1ad23
  428cae:	or     DWORD PTR [ebx+0x65],esp
  428cb1:	jecxz  0x428cbc
  428cb3:	repz pop edx
  428cb5:	jecxz  0x428cc3
  428cb7:	jb     0x428d16
  428cb9:	jecxz  0x428cca
  428cbb:	popa   
  428cbc:	push   edi
  428cbd:	add    bh,BYTE PTR [ecx]
  428cbf:	popf   
  428cc0:	add    BYTE PTR [edx],al
  428cc2:	pcmpeqw mm5,mm4
  428cc5:	adc    ah,BYTE PTR [edi+0x2ca02787]
  428ccb:	inc    esp
  428ccc:	or     eax,0x5442b9e
  428cd1:	xchg   ecx,eax
  428cd2:	cmp    BYTE PTR [eax+eax*1-0x60],0x3
  428cd7:	adc    cl,BYTE PTR [edi]
  428cd9:	jbe    0x428d49
  428cdb:	stc    
  428cdc:	jmp    FWORD PTR [ebx]
  428cde:	cmp    DWORD PTR [esp-0x60],0xfffffffe
  428ce3:	add    BYTE PTR [ebp-0x34],0xa7
  428ce7:	dec    ebx
  428ce8:	and    al,0xd0
  428cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ceb:	pop    es
  428cec:	jne    0x428cab
  428cee:	repz jae 0x428d15
  428cf1:	clc    
  428cf2:	or     ah,BYTE PTR [eax-0x7d0be5d2]
  428cf8:	(bad)  
  428cf9:	mov    edx,DWORD PTR [edx+edx*2-0x75]
  428cfd:	adc    DWORD PTR [edx-0x43],edx
  428d00:	add    al,0x84
  428d02:	dec    ebx
  428d03:	sub    ah,0x7
  428d06:	fdivrp st(7),st
  428d08:	sbb    eax,0x15
  428d0b:	dec    edx
  428d0c:	push   esi
  428d0d:	inc    ebx
  428d0e:	mov    BYTE PTR [ebx],al
  428d10:	xor    ebp,DWORD PTR [edi-0x16297dad]
  428d16:	cmp    eax,0x35ed1c1f
  428d1b:	pop    ds
  428d1c:	sbb    al,0xfd
  428d1e:	xor    eax,0x35bd201f
  428d23:	pop    ds
  428d24:	and    al,0x0
  428d26:	cmp    DWORD PTR ds:0x1f4281f,0x0
  428d2d:	add    BYTE PTR [esp+ebp*4-0x5b5400d5],bl
  428d34:	dec    ebx
  428d35:	and    al,0x38
  428d37:	jle    0x428cf9
  428d39:	je     0x428d75
  428d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d3c:	inc    ebx
  428d3d:	and    al,0x54
  428d3f:	std    
  428d40:	ror    BYTE PTR [ecx+0x3b1b1d90],0x47
  428d47:	outs   dx,BYTE PTR ds:[esi]
  428d48:	or     al,0x51
  428d4a:	in     al,dx
  428d4b:	imul   ebp,DWORD PTR [ecx],0xf54c9dfe
  428d51:	mov    edi,0x52f04
  428d56:	popf   
  428d57:	sub    BYTE PTR [edi],bh
  428d59:	lea    ebp,[ecx-0x1]
  428d5c:	adc    ah,BYTE PTR [edi-0x3da57f85]
  428d62:	popa   
  428d63:	call   DWORD PTR [edi]
  428d65:	add    ebp,eax
  428d67:	sub    eax,DWORD PTR [eax-0x6]
  428d6a:	retf   0x33b0
  428d6d:	mov    DWORD PTR [ecx+0x37],ecx
  428d70:	getsec 
  428d72:	scas   al,BYTE PTR es:[edi]
  428d73:	inc    esp
  428d74:	sbb    DWORD PTR [ebx],0xffffff9c
  428d77:	sbb    edi,edi
  428d79:	xchg   BYTE PTR [eax-0x62bfe695],cl
  428d7f:	mov    al,ds:0xb31e3fc5
  428d84:	or     ecx,DWORD PTR [ebx]
  428d86:	sbb    esp,eax
  428d88:	add    eax,DWORD PTR [eax]
  428d8a:	add    BYTE PTR [ebp-0x62ff7afa],bl
  428d90:	sbb    eax,DWORD PTR [eax]
  428d92:	test   BYTE PTR [ecx+0x1effff1b],cl
  428d98:	cmp    eax,0x9e9a00c3
  428d9d:	and    DWORD PTR [eax],eax
  428d9f:	popf   
  428da0:	sbb    edx,DWORD PTR [edi]
  428da2:	cmp    esp,DWORD PTR [edx-0x66c400e5]
  428da8:	mov    esi,esi
  428daa:	repnz jecxz 0x428dd0
  428dad:	jg     0x428db0
  428daf:	popf   
  428db0:	sbb    ebx,DWORD PTR [esi+eax*1]
  428db3:	push   ds
  428db4:	jne    0x428db9
  428db6:	add    BYTE PTR [eax-0x2a857bcf],ch
  428dbc:	sbb    eax,DWORD PTR [eax]
  428dbe:	test   BYTE PTR [ebp+0x1b],bl
  428dc1:	(bad)  
  428dc2:	dec    esi
  428dc4:	fistp  DWORD PTR [ecx+0x70027b01]
  428dca:	(bad)  
  428dcb:	mov    esi,0x817f3ff2
  428dd0:	fiadd  WORD PTR [edx]
  428dd2:	xor    eax,0xb15e5842
  428dd7:	mov    ds:0x5e7d1a19,al
  428ddc:	mul    BYTE PTR [ebx+0x43]
  428ddf:	imul   esi,DWORD PTR [edi-0x7e553fa3],0x44813b0
  428de9:	or     eax,DWORD PTR [ebp+0xc140085]
  428def:	add    BYTE PTR [ebx],bl
  428df1:	mov    dh,0xcc
  428df3:	repnz mov ah,0xbd
  428df6:	(bad)  
  428df7:	repnz push ds
  428df9:	cmp    edi,esp
  428dfb:	hlt    
  428dfc:	sub    eax,DWORD PTR [edx-0x1b]
  428dff:	popf   
  428e00:	sahf   
  428e01:	shl    BYTE PTR [ebx-0x39],cl
  428e04:	mov    esi,0x13e27de7
  428e09:	sub    al,BYTE PTR ds:0x659ca8b7
  428e0f:	jmp    0x428dc0
  428e11:	lods   eax,DWORD PTR ds:[esi]
  428e12:	hlt    
  428e13:	jge    0x428dfe
  428e15:	ficom  WORD PTR [esi]
  428e17:	xor    bl,cl
  428e19:	fdivrp st(6),st
  428e1b:	xchg   DWORD PTR [esi+ebp*4-0x28],edx
  428e1f:	test   BYTE PTR [ebp-0x5],bl
  428e22:	mov    esi,0xa575ed13
  428e27:	out    0x97,eax
  428e29:	shl    BYTE PTR [ecx],cl
  428e2b:	push   esp
  428e2c:	retf   0xed3e
  428e2f:	jl     0x428df7
  428e31:	cli    
  428e32:	imul   esi,DWORD PTR [eax],0xffffffb0
  428e35:	pop    ebp
  428e36:	cmp    DWORD PTR [edi+ebx*8-0x16],0xffffff8a
  428e3b:	jp     0x428e1e
  428e3d:	fmulp  st(4),st
  428e3f:	jl     0x428e20
  428e41:	ret    0x2fff
  428e44:	int    0x2
  428e46:	add    cl,ch
  428e48:	add    DWORD PTR [esi+edx*1],edi
  428e4b:	mov    al,0xd3
  428e4d:	push   ecx
  428e4e:	push   ds
  428e4f:	mov    cl,0x86
  428e51:	sar    BYTE PTR [ebx],0x61
  428e54:	add    ch,bl
  428e56:	fild   QWORD PTR [ecx]
  428e58:	nop
  428e59:	ret    0x27
  428e5c:	jmp    0x58f09a1
  428e61:	ret    0xc0ec
  428e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e66:	mov    al,ds:0xd8c52588
  428e6b:	add    bl,BYTE PTR gs:[edi+edi*4]
  428e6f:	and    ebx,ecx
  428e71:	out    dx,al
  428e72:	sub    BYTE PTR [ebp+ecx*8-0x2a],dh
  428e76:	jbe    0x428ef4
  428e78:	(bad)
  428e7b:	sub    al,0xd2
  428e7d:	jnp    0x428ea6
  428e7f:	test   DWORD PTR [ecx+0x2df9ffe5],ebp
  428e85:	test   DWORD PTR [edx],ecx
  428e87:	xchg   edi,esi
  428e89:	xchg   esi,eax
  428e8a:	jle    0x428e7e
  428e8c:	not    BYTE PTR ds:0xb25efa14
  428e92:	daa    
  428e93:	je     0x428ea2
  428e95:	xchg   ecx,eax
  428e96:	sbb    bh,bh
  428e98:	sti    
  428e99:	shl    BYTE PTR [edi],0x2f
  428e9c:	and    al,BYTE PTR [edi]
  428e9e:	add    ch,al
  428ea0:	inc    eax
  428ea1:	(bad)  [eax]
  428ea3:	sti    
  428ea4:	bound  edx,QWORD PTR [ecx+0x11b5eeeb]
  428eaa:	jp     0x428f08
  428eac:	int    0xae
  428eae:	jmp    0x767a2dcc
  428eb3:	pop    edx
  428eb4:	in     eax,dx
  428eb5:	pop    ds
  428eb6:	stos   DWORD PTR es:[edi],eax
  428eb7:	add    edi,ecx
  428eb9:	add    ch,dh
  428ebb:	loope  0x428e43
  428ebd:	add    BYTE PTR [edi],dh
  428ebf:	jp     0x428e81
  428ec1:	je     0x428f02
  428ec3:	mov    edi,edi
  428ec5:	add    ah,0xfa
  428ec8:	dec    edi
  428ec9:	dec    DWORD PTR [eax-0x7f72dce5]
  428ecf:	sbb    ah,BYTE PTR [ebx]
  428ed1:	call   0x38d821
  428ed6:	mov    DWORD PTR [edi+0x3ae20473],edi
  428edc:	pop    ds
  428edd:	sbb    ah,bl
  428edf:	cmp    bl,BYTE PTR [edi]
  428ee1:	adc    BYTE PTR [edi+0x3b],ch
  428ee4:	pop    ds
  428ee5:	adc    BYTE PTR [edi-0x40],al
  428ee8:	pop    es
  428ee9:	cmp    edi,DWORD PTR [edx-0x20cc3aae]
  428eef:	dec    esp
  428ef0:	jecxz  0x428e9d
  428ef2:	rcl    ah,1
  428ef4:	imul   BYTE PTR [edx-0x3a]
  428ef7:	push   es
  428ef8:	fwait
  428ef9:	int3   
  428efa:	and    dl,ah
  428efc:	xor    al,0xdf
  428eff:	out    dx,eax
  428f00:	jae    0x428f4b
  428f02:	sub    eax,0x4d101f33
  428f07:	adc    BYTE PTR [esi+0x3b],dh
  428f0a:	icebp  
  428f0b:	dec    edi
  428f0c:	inc    DWORD PTR [edx+0x751c0a7f]
  428f12:	xchg   ebp,eax
  428f13:	popf   
  428f14:	cli    
  428f15:	test   ah,al
  428f17:	pop    ecx
  428f18:	adc    ch,BYTE PTR [edx+0x74]
  428f1b:	test   eax,eax
  428f1d:	or     BYTE PTR [eax],al
  428f1f:	add    al,0xf1
  428f21:	jae    0x428f47
  428f23:	mov    WORD PTR [ebx-0x163db84],es
  428f29:	sub    BYTE PTR [edx],0x83
  428f2c:	lock test al,al
  428f2f:	sub    BYTE PTR [edx],cl
  428f31:	test   BYTE PTR [eax+ebx*2+0xd],0xf7
  428f36:	inc    esp
  428f37:	popf   
  428f38:	dec    edi
  428f39:	ja     0x7f51d718
  428f3f:	pop    esi
  428f40:	adc    al,0xe6
  428f42:	add    DWORD PTR [ecx+0x73d6edd5],esp
  428f48:	add    ebx,eax
  428f4a:	sub    edx,DWORD PTR [ebx]
  428f4c:	xor    DWORD PTR [eax-0x180fe7f9],ebx
  428f52:	pop    ss
  428f53:	ins    DWORD PTR es:[edi],dx
  428f54:	fdivr  QWORD PTR [edx+0x7c]
  428f57:	rol    DWORD PTR [ebx],0x77
  428f5a:	pop    esp
  428f5b:	mov    ecx,0xb74d1c0a
  428f60:	dec    eax
  428f61:	sub    eax,0xe4075987
  428f66:	xchg   BYTE PTR [eax+0x23],ch
  428f69:	ror    BYTE PTR [eax+0x2bef439c],1
  428f6f:	retf   
  428f70:	push   0x1f794479
  428f75:	int3   
  428f76:	pop    ecx
  428f77:	push   esi
  428f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f79:	and    bl,BYTE PTR [ebp-0x21]
  428f7c:	daa    
  428f7d:	call   DWORD PTR [esi+edx*1+0x78]
  428f81:	sub    esp,0xd1fc2d00
  428f87:	lods   eax,DWORD PTR gs:[esi]
  428f89:	add    eax,0x36925304
  428f8e:	repz adc ebp,ebx
  428f91:	sub    eax,DWORD PTR [eax-0x3d516e3c]
  428f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f98:	int    0xf1
  428f9a:	add    al,0x1
  428f9c:	pop    edx
  428f9d:	push   di
  428f9f:	inc    eax
  428fa0:	popf   
  428fa1:	sub    edi,edi
  428fa3:	cli    
  428fa4:	mov    BYTE PTR [edi-0x5162bff2],dl
  428faa:	inc    ebx
  428fab:	je     0x42902b
  428fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fae:	ret    0x16b3
  428fb1:	add    dh,BYTE PTR [ebx+esi*2+0x18286e96]
  428fb8:	pop    esp
  428fb9:	sub    bh,ch
  428fbb:	xchg   BYTE PTR [ebp-0x69],bl
  428fbe:	jecxz  0x428f40
  428fc0:	and    al,0x21
  428fc2:	jnp    0x428fc8
  428fc4:	jb     0x429011
  428fc6:	enter  0xebe,0x2d
  428fca:	out    0x7a,al
  428fcc:	pop    eax
  428fcd:	push   ss
  428fce:	pusha  
  428fcf:	mov    ebp,0x3c2c8f9d
  428fd4:	ins    DWORD PTR es:[edi],dx
  428fd5:	and    esp,esi
  428fd7:	(bad)  
  428fd8:	mov    edx,es
  428fda:	call   0xe963864a
  428fdf:	add    esi,DWORD PTR [edx+0x687ea4c7]
  428fe5:	jb     0x428fc5
  428fe7:	inc    ebx
  428fe8:	add    dh,cl
  428fea:	xor    DWORD PTR [esi],eax
  428fec:	(bad)  
  428fed:	mul    BYTE PTR [edi+0x5aa1c45f]
  428ff3:	add    DWORD PTR [ebx],0xffffff9d
  428ff6:	add    dl,BYTE PTR [ecx-0x6ddec4e0]
  428ffc:	jle    0x429026
  428ffe:	adc    dl,BYTE PTR [ecx-0x74]
  429001:	popf   
  429002:	add    ch,cl
  429004:	sbb    ecx,edi
  429006:	cmp    DWORD PTR [edx+0x2c],0x22
  42900a:	dec    ecx
  42900b:	sbb    DWORD PTR [edi-0x28],edi
  42900e:	jb     0x429029
  429010:	ins    BYTE PTR es:[edi],dx
  429011:	mov    esp,DWORD PTR [eax]
  429013:	jmp    0xf590059b
  429018:	add    ebx,DWORD PTR [ebp-0x7667e375]
  42901e:	ret    0x99e8
  429021:	fimul  DWORD PTR [ecx+0x396604aa]
  429027:	iret   
  429028:	mov    ebp,0xe1ffc822
  42902d:	xor    DWORD PTR [esi+eiz*2],0xfb3ac59e
  429034:	aas    
  429035:	ret    
  429036:	iret   
  429037:	cli    
  429038:	pusha  
  429039:	mov    ebx,DWORD PTR [ebx]
  42903b:	add    cl,ch
  42903d:	inc    ebp
  42903e:	xor    esi,DWORD PTR [ebx-0x22]
  429041:	stos   DWORD PTR es:[edi],eax
  429042:	mov    dl,0xfa
  429044:	ret    0x93cf
  429047:	pop    es
  429048:	xchg   DWORD PTR [edi+0x8f0bbb],edx
  42904e:	xchg   edi,eax
  42904f:	ret    
  429050:	or     DWORD PTR [edi+0x3cbf4ad5],ecx
  429056:	sub    BYTE PTR [esi],0x7f
  429059:	(bad)
  42905c:	in     al,dx
  42905d:	sbb    eax,0x3a000298
  429062:	iret   
  429063:	mov    ah,0x2e
  429065:	test   eax,0x1d8938ea
  42906a:	mov    ebp,0xbd358cc7
  42906f:	retf   
  429070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429071:	adc    dl,0x5f
  429074:	mov    DWORD PTR [ebp-0x43],eax
  429077:	mov    bl,0x8c
  429079:	sbb    eax,0x42a6b7bd
  42907e:	xor    BYTE PTR [esi+0x5fb20923],bh
  429084:	lea    eax,ds:0x6ca6a3bd
  42908a:	dec    ebp
  42908b:	jecxz  0x4290c4
  42908d:	pusha  
  42908e:	gs jecxz 0x4290c0
  429091:	inc    edx
  429092:	test   eax,0xb666ee5b
  429097:	lea    esi,[ebp+eax*1-0x16fffde3]
  42909e:	push   es
  42909f:	arpl   WORD PTR [eax],ax
  4290a1:	jmp    0x86d444
  4290a6:	nop
  4290a7:	fisttp WORD PTR cs:[ebx+0x5c890304]
  4290ae:	mov    al,ds:0x5c8846
  4290b3:	mov    al,ds:0xb629e342
  4290b8:	jmp    0x4290b0
  4290ba:	(bad)  
  4290bb:	shl    BYTE PTR [edx],1
  4290bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290be:	add    BYTE PTR [ebx+eax*1-0x48],al
  4290c2:	mov    eax,ds:0xe8000334
  4290c7:	cmp    al,0x85
  4290c9:	idiv   edi
  4290cb:	pop    esp
  4290cd:	dec    edi
  4290ce:	lea    eax,[eax+0x3f]
  4290d1:	aaa    
  4290d2:	push   eax
  4290d3:	pushf  
  4290d4:	dec    esp
  4290d5:	jmp    0x9e75:0xbf9efbff
  4290dc:	cdq    
  4290dd:	and    DWORD PTR [eax+eax*4],0x3
  4290e1:	add    BYTE PTR [eax],al
  4290e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290e4:	cdq    
  4290e5:	inc    ebx
  4290e6:	and    al,0x98
  4290e8:	ss jecxz 0x429133
  4290eb:	pop    ss
  4290ec:	in     al,dx
  4290ed:	test   BYTE PTR [esp+eax*1-0x4abf80e4],0x2
  4290f5:	add    BYTE PTR [ebx+0x400a26b9],cl
  4290fb:	les    ebx,FWORD PTR [ecx-0x6283dbbd]
  429101:	inc    ebx
  429102:	and    al,0xd4
  429104:	cdq    
  429105:	inc    ebx
  429106:	and    al,0x80
  429108:	popf   
  429109:	inc    ebx
  42910a:	and    al,0x60
  42910c:	fwait
  42910d:	inc    ebx
  42910e:	and    al,0xa4
  429110:	lahf   
  429111:	inc    ebx
  429112:	and    al,0x5c
  429114:	fwait
  429115:	inc    ebx
  429116:	and    al,0x0
  429118:	xchg   esp,eax
  429119:	lahf   
  42911a:	inc    ebx
  42911b:	and    al,0x70
  42911d:	rol    DWORD PTR [ebx+0x24],0x9d
  429121:	pop    ss
  429122:	das    
  429123:	xchg   ebp,ebx
  429125:	sub    edi,DWORD PTR [esi]
  429127:	inc    esp
  429128:	mov    ecx,0x9d0002f7
  42912d:	sub    edi,DWORD PTR [edx+0x44]
  429130:	jns    0x429169
  429132:	mov    eax,ds:0x6abe9d86
  429137:	and    al,0x65
  429139:	sub    al,0xff
  42913b:	inc    DWORD PTR [ebp-0x38]
  42913e:	cmp    ebx,0x32
  429141:	xor    eax,ebx
  429143:	and    esp,ecx
  429145:	jbe    0x429159
  429147:	push   0xffbe9141
  42914c:	sbb    esi,ebp
  42914e:	jnp    0x429194
  429150:	mov    ecx,0x9abeea6f
  429155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429156:	cmp    al,0x0
  429158:	popf   
  429159:	sub    esi,DWORD PTR [edx-0x7c]
  42915c:	rol    DWORD PTR [ebx+0x4],0x0
  429160:	popf   
  429161:	(bad)  [esi+0x5c]
  429164:	rcl    DWORD PTR [edi],0x28
  429167:	rcl    DWORD PTR [esi],cl
  429169:	pop    esp
  42916a:	in     eax,dx
  42916b:	out    dx,al
  42916c:	push   ecx
  42916d:	cmp    al,0x7c
  42916f:	inc    esp
  429170:	jns    0x42915d
  429172:	jl     0x42917c
  429174:	sbb    al,bh
  429176:	fisttp WORD PTR [edi]
  429178:	outs   dx,DWORD PTR ds:[esi]
  429179:	fcomp  DWORD PTR [ecx+0x7c53002f]
  42917f:	mov    al,0x23
  429181:	dec    ecx
  429182:	fld    TBYTE PTR [eax]
  429184:	push   ecx
  429185:	dec    ebp
  429186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429187:	inc    ebx
  429188:	je     0x429123
  42918a:	xchg   edx,eax
  42918b:	(bad)  
  42918c:	and    ebp,DWORD PTR [ebp-0x22ead70b]
  429192:	cmp    BYTE PTR [edi-0x2018e801],bh
  429198:	unpcklps xmm0,XMMWORD PTR [edx]
  42919b:	lods   eax,DWORD PTR ds:[esi]
  42919c:	fist   WORD PTR [edx+0x1ef925d9]
  4291a2:	sub    cl,0x3
  4291a5:	popf   
  4291a6:	mov    ecx,esp
  4291a8:	jbe    0x429173
  4291aa:	out    0xd4,al
  4291ac:	aad    0x29
  4291ae:	mov    dh,0x4
  4291b0:	in     al,dx
  4291b1:	loopne 0x42915b
  4291b3:	out    0x9b,eax
  4291b5:	call   0xb81d:0xed03e8e5
  4291bc:	adc    esp,DWORD PTR [eax]
  4291be:	inc    edx
  4291bf:	xchg   esp,eax
  4291c0:	int3   
  4291c1:	mov    bl,0x9e
  4291c3:	int3   
  4291c4:	xchg   edi,eax
  4291c5:	popf   
  4291c6:	xchg   edi,eax
  4291c7:	mov    ah,0x7c
  4291c9:	(bad)  
  4291cb:	mov    esp,0x95b1a57c
  4291d0:	jbe    0x42923b
  4291d2:	out    0x70,al
  4291d4:	aad    0x5b
  4291d6:	stos   BYTE PTR es:[edi],al
  4291d7:	lock jl 0x429237
  4291da:	add    bh,BYTE PTR [ecx]
  4291dc:	sub    DWORD PTR [edx+esi*8+0x63],ecx
  4291e0:	inc    ebx
  4291e1:	add    BYTE PTR [eax-0x13],ch
  4291e4:	dec    edx
  4291e5:	test   DWORD PTR [ecx-0x1a],ebp
  4291e8:	pop    eax
  4291e9:	cld    
  4291ea:	imul   edi,esi,0x9a7ebf6d
  4291f0:	std    
  4291f1:	inc    esp
  4291f2:	dec    ecx
  4291f3:	test   BYTE PTR [edx-0x15],0xb2
  4291f7:	xchg   esi,eax
  4291f8:	(bad)  
  4291fa:	sbb    eax,esi
  4291fc:	int3   
  4291fd:	or     esp,DWORD PTR [edx]
  4291ff:	shl    BYTE PTR [ebp+0x3b],cl
  429202:	mov    dh,0x29
  429204:	mov    al,ds:0x5c1ca499
  429209:	mov    edi,0x2918927e
  42920e:	mov    al,0xda
  429210:	aad    0xc3
  429212:	xchg   edx,eax
  429213:	mov    DWORD PTR [eax],eax
  429215:	sub    eax,0xe186d07d
  42921a:	outs   dx,BYTE PTR ds:[esi]
  42921b:	sbb    DWORD PTR [ecx-0xf],edx
  42921e:	stc    
  42921f:	(bad)  
  429220:	and    eax,DWORD PTR [ecx]
  429222:	lock or dl,BYTE PTR [eax+0x56]
  429226:	dec    edi
  429227:	add    al,0x7f
  429229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42922a:	inc    edx
  42922b:	clc    
  42922c:	std    
  42922d:	imul   ebx,DWORD PTR [edx],0x85e513e0
  429233:	into   
  429234:	and    eax,DWORD PTR ds:0x2ff28744
  42923a:	jne    0x429253
  42923c:	lea    ebx,[ebp+0x39e7d45a]
  429242:	outs   dx,DWORD PTR ds:[esi]
  429243:	pop    ss
  429244:	sti    
  429245:	fs add dl,bh
  429248:	fistp  WORD PTR [edi]
  42924a:	add    DWORD PTR [esi-0x68f904ef],ecx
  429250:	mov    esi,0x3891d123
  429255:	ret    
  429256:	lods   eax,DWORD PTR ds:[esi]
  429257:	jmp    0xe31b:0xde5d1ffb
  42925e:	aam    0x9e
  429260:	add    al,BYTE PTR [eax]
  429262:	gs pop ecx
  429264:	xchg   esi,eax
  429265:	sub    esp,DWORD PTR [edx-0x23]
  429268:	fbld   TBYTE PTR [edi]
  42926a:	(bad)
  42926f:	mov    cl,0xcc
  429271:	dec    edi
  429272:	mov    esi,0xa984fbe8
  429277:	or     al,0x5
  429279:	bound  ebp,QWORD PTR [edx-0xb]
  42927c:	fisttp WORD PTR [edi]
  42927e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42927f:	mov    dl,0x6f
  429281:	rcl    BYTE PTR [edx+0x6dbfec9f],0x61
  429288:	xchg   esi,eax
  429289:	pop    es
  42928a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42928b:	fstp   st(7)
  42928d:	das    
  42928e:	add    BYTE PTR [ebp+0x1ffffff],al
  429294:	push   ebx
  429295:	pop    ds
  429296:	and    BYTE PTR [esp+ecx*4],bl
  429299:	sti    
  42929a:	push   DWORD PTR [eax+ebx*4+0x4b]
  42929e:	and    al,0x4c
  4292a0:	add    BYTE PTR [esp+0x30],cl
  4292a4:	cwde   
  4292a5:	inc    ebx
  4292a6:	and    al,0x24
  4292a8:	call   0x5b9e:0x7c00015b
  4292af:	and    al,0x3c
  4292b1:	adc    bl,0x75
  4292b4:	cmp    BYTE PTR [eax],dl
  4292b6:	imul   bl
  4292b8:	pusha  
  4292b9:	cwde   
  4292ba:	mov    edx,0xf93eb3e8
  4292bf:	jmp    FWORD PTR [edi+0x8ff84ee]
  4292c5:	inc    esp
  4292c6:	add    BYTE PTR [eax+ebx*2+0xf],0x82
  4292cb:	xor    eax,0x400d44
  4292d0:	lea    ebx,[ebx+0x0]
  4292d3:	(bad)  
  4292d4:	sti    
  4292d5:	add    eax,0x2ed84482
  4292da:	add    DWORD PTR [edi-0x7],0xffffff98
  4292de:	inc    ebx
  4292df:	and    al,0x60
  4292e1:	sahf   
  4292e2:	ds push es
  4292e4:	outs   dx,BYTE PTR ds:[esi]
  4292e5:	pop    ebx
  4292e6:	pop    ds
  4292e7:	push   0xefe5c7c
  4292ec:	or     bl,BYTE PTR [esp+eax*1+0x50]
  4292f0:	jecxz  0x42935c
  4292f2:	pop    ds
  4292f3:	dec    esp
  4292f4:	inc    ecx
  4292f5:	inc    esp
  4292f6:	add    edx,DWORD PTR [ebx+0x13]
  4292f9:	int    0x6
  4292fb:	mov    dh,0x7b
  4292fd:	add    ebx,edi
  4292ff:	xlat   BYTE PTR ds:[ebx]
  429300:	mov    bl,0xac
  429302:	ds push es
  429304:	je     0x4292e9
  429306:	jae    0x42932c
  429308:	popf   
  429309:	or     eax,0x3bcbfacf
  42930e:	ins    DWORD PTR es:[edi],dx
  42930f:	inc    ebx
  429310:	add    BYTE PTR [edx-0x254e0d05],ah
  429316:	and    DWORD PTR [edx],esp
  429318:	je     0x4292db
  42931a:	paddd  mm7,QWORD PTR [esi-0x78b35713]
  429321:	fld    DWORD PTR [edi]
  429323:	call   0x7942eca6
  429328:	je     0x4292eb
  42932a:	arpl   WORD PTR [edi],dx
  42932c:	xchg   ebx,eax
  42932d:	lock leave 
  42932f:	and    DWORD PTR [ebp-0x182ff82f],ecx
  429335:	and    eax,DWORD PTR [edi+0x25]
  429338:	sti    
  429339:	sbb    BYTE PTR [eax-0x25],bl
  42933c:	pop    edi
  42933d:	xor    eax,0x3af9979f
  429342:	xchg   ebp,eax
  429343:	mov    edi,0x77042407
  429348:	ret    
  429349:	retf   0xc651
  42934c:	xchg   BYTE PTR [eax],bh
  42934e:	addr16 inc ecx
  429350:	add    al,0x9d
  429352:	xchg   esp,eax
  429353:	mov    dh,0xb
  429355:	sbb    bl,dl
  429357:	scas   eax,DWORD PTR es:[edi]
  429358:	pop    es
  429359:	push   ss
  42935a:	test   DWORD PTR fs:[eax+0x2f163755],0x36fbdc26
  429365:	out    0xbd,eax
  429367:	fist   DWORD PTR [ecx+0x16]
  42936a:	mov    esp,0xbd898cff
  42936f:	shl    DWORD PTR [esi],0xe7
  429372:	fadd   QWORD PTR [edi]
  429374:	bound  eax,QWORD PTR [eax]
  429376:	cmp    eax,DWORD PTR es:[eax-0x445d603f]
  42937d:	or     edi,DWORD PTR [ebx]
  42937f:	sahf   
  429380:	dec    ebp
  429381:	jne    0x429332
  429383:	add    cl,BYTE PTR [ebx]
  429385:	jmp    0x429314
  429387:	(bad)  
  429388:	jmp    0x42930a
  42938a:	fadd   QWORD PTR [eax+eiz*2]
  42938d:	mov    esp,0x41a8d596
  429392:	sbb    ah,BYTE PTR [ebx-0x3de5fc0c]
  429398:	in     al,dx
  429399:	inc    eax
  42939a:	lock lea eax,[ebp+0x12de7181]
  4293a1:	data16 mov ch,0x3e
  4293a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293a5:	add    ecx,edi
  4293a7:	inc    ecx
  4293a8:	in     al,0xeb
  4293aa:	pop    esi
  4293ab:	(bad)
  4293ae:	pushf  
  4293af:	add    ch,cl
  4293b1:	and    al,0xb0
  4293b3:	xlat   BYTE PTR ds:[ebx]
  4293b5:	ret    
  4293b6:	push   edx
  4293b7:	jle    0x4293e2
  4293b9:	cmc    
  4293ba:	push   ds
  4293bb:	push   es
  4293bc:	call   0xe6ef30c4
  4293c1:	retf   0x775
  4293c4:	mov    cl,0x3f
  4293c6:	jb     0x4293ca
  4293c8:	jmp    0xfd03:0xe902287e
  4293cf:	mov    bl,0x23
  4293d1:	rcr    DWORD PTR [edx],0xd4
  4293d4:	push   ss
  4293d5:	call   0x62d92377
  4293da:	add    cl,cl
  4293dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293de:	add    eax,DWORD PTR [edx-0x64511be6]
  4293e4:	arpl   WORD PTR [ecx],bp
  4293e6:	inc    eax
  4293e7:	mov    dl,0x2
  4293e9:	push   ds
  4293ea:	inc    edx
  4293eb:	jo     0x4293f8
  4293ed:	stos   DWORD PTR es:[edi],eax
  4293ee:	(bad)  
  4293ef:	mov    dl,0x3e
  4293f1:	es add al,0x9c
  4293f4:	sub    eax,0x2d58145
  4293f9:	xor    eax,0x439200
  4293fe:	cmp    al,0xc
  429400:	or     DWORD PTR ds:0xffd97af9,0xf7981591
  42940a:	out    0xfb,eax
  42940c:	mov    ds:0xd95d29a0,al
  429411:	call   ecx
  429413:	fmul   QWORD PTR [ebp-0x176c50f8]
  429419:	ret    
  42941a:	sub    ah,BYTE PTR [ecx+0x1c1de6fe]
  429420:	sbb    eax,DWORD PTR [ecx]
  429422:	hlt    
  429423:	xor    DWORD PTR [edx+0x5],eax
  429426:	sbb    ebp,ebx
  429428:	xlat   BYTE PTR ds:[ebx]
  429429:	jmp    esi
  42942b:	test   esp,eax
  42942d:	xor    eax,0x3c043228
  429432:	jmp    0xd7dd:0x5a0da0b
  429439:	jmp    FWORD PTR [ecx+0x76]
  42943c:	std    
  42943d:	je     0x429417
  42943f:	add    BYTE PTR [edi],dh
  429441:	pop    es
  429442:	inc    eax
  429443:	and    eax,0xd574185d
  429448:	jo     0x429447
  42944a:	das    
  42944b:	and    eax,0x1fe185d
  429450:	cmp    eax,0x4be7f799
  429455:	cli    
  429456:	mov    al,ds:0xffd7d2a9
  42945b:	rcr    DWORD PTR [ebp+ecx*4+0x8],0x2f
  429460:	add    ebp,eax
  429462:	ret    
  429463:	stos   BYTE PTR es:[edi],al
  429464:	sahf   
  429465:	std    
  429466:	out    0xf5,al
  429468:	sbb    ebx,DWORD PTR [ebx]
  42946a:	add    DWORD PTR [esi+edx*4+0x44],edx
  42946e:	add    eax,0xffd75519
  429473:	in     eax,0x41
  429475:	mov    esi,0xfe8700c3
  42947a:	mov    eax,0xffff0bff
  42947f:	cmp    bh,ah
  429481:	pop    ss
  429482:	enter  0x15f7,0x20
  429486:	ret    
  429487:	mov    eax,0xfffffefb
  42948c:	mov    ds:0xf0320d85,al
  429491:	aas    
  429492:	sti    
  429493:	gs ins DWORD PTR es:[edi],dx
  429495:	or     cl,BYTE PTR [ebp+eax*8-0x39]
  429499:	(bad)  
  42949a:	outs   dx,BYTE PTR ds:[esi]
  42949b:	adc    eax,0x4e1435a2
  4294a0:	xor    DWORD PTR [edi],edi
  4294a2:	sti    
  4294a3:	je     0x4294a5
  4294a5:	pop    eax
  4294a6:	mov    ds:0x347c54b,eax
  4294ab:	call   0x72ea:0xfb3fc034
  4294b2:	mov    edx,DWORD PTR ds:0xfb3f8034
  4294b8:	mov    WORD PTR [ecx],es
  4294ba:	xlat   BYTE PTR ds:[ebx]
  4294bb:	dec    edi
  4294bc:	push   DWORD PTR [ecx-0x69]
  4294bf:	adc    BYTE PTR [eax+0x34],al
  4294c2:	imul   eax,DWORD PTR [edx-0x659357bb],0xfb3f8036
  4294cc:	scas   eax,DWORD PTR es:[edi]
  4294cd:	xor    eax,0x66332ae8
  4294d2:	das    
  4294d3:	mov    ebx,0xfffe0868
  4294d8:	jmp    DWORD PTR [edx]
  4294da:	mov    al,ds:0x337c429
  4294df:	dec    edx
  4294e0:	mov    eax,0xffffe40b
  4294e5:	adc    cl,BYTE PTR [ebx+0x40403015]
  4294eb:	sti    
  4294ec:	xchg   ecx,esi
  4294ee:	cs mov edi,0xa9299d43
  4294f4:	sahf   
  4294f5:	xchg   ebx,eax
  4294f6:	pop    ebp
  4294f7:	ret    0xd3ff
  4294fa:	xor    eax,0x295d11d3
  4294ff:	add    ah,0x91
  429502:	sbb    edi,DWORD PTR [edi]
  429504:	pop    edx
  429505:	in     al,0x6b
  429507:	jg     0x429546
  429509:	add    ch,ah
  42950b:	gs ret 0xaaff
  42950f:	in     eax,dx
  429510:	fcom   DWORD PTR [ecx-0x1d]
  429513:	push   eax
  429514:	dec    eax
  429515:	aas    
  429516:	popf   
  429517:	int    0x1e
  429519:	adc    eax,0xffbf3a81
  42951e:	or     dl,BYTE PTR [edi+0x47]
  429521:	(bad)
  429524:	push   DWORD PTR [edx+edx*4-0x7d]
  429528:	cwde   
  429529:	stc    
  42952a:	jb     0x4294c9
  42952c:	add    al,0xf1
  42952f:	and    eax,0xe7512582
  429534:	sar    edi,0x5a
  429537:	fiadd  WORD PTR [edi]
  429539:	enter  0x6958,0xff
  42953d:	add    bl,dh
  42953f:	aam    0xf7
  429541:	out    dx,eax
  429542:	scas   eax,DWORD PTR es:[edi]
  429543:	imul   edi,edi,0x59
  429546:	std    
  429547:	sbb    eax,DWORD PTR [ebx+0x3f]
  42954a:	popf   
  42954b:	call   0xdf97d2ce
  429550:	sar    edi,0x22
  429553:	ja     0x42952d
  429555:	push   ecx
  429556:	pop    ebx
  429557:	aam    0x47
  429559:	aas    
  42955a:	popf   
  42955b:	jne    0x42957b
  42955d:	adc    eax,0xffbf39f9
  429562:	or     BYTE PTR [esi+0x47],0xc5
  429566:	pop    esi
  429567:	sub    edi,edi
  429569:	je     0x4294f5
  42956b:	add    dl,cl
  42956d:	rol    DWORD PTR [eax],cl
  42956f:	in     al,0x15
  429571:	fimul  DWORD PTR [eax-0x7b1d7123]
  429577:	add    BYTE PTR [esi-0x5c],0xc5
  42957b:	rcl    BYTE PTR ds:0x3fd507ab,cl
  429581:	es add al,0x9c
  429584:	lods   al,BYTE PTR ds:[esi]
  429585:	mov    cl,0xf7
  429587:	retf   0x28f0
  42958a:	add    al,0x57
  42958c:	(bad)  
  42958d:	fld    QWORD PTR [edi+0x6a]
  429590:	add    ah,BYTE PTR [esi+0x38271bb7]
  429596:	mov    ch,0xcb
  429598:	cmp    ecx,edx
  42959a:	(bad)  
  42959b:	pop    edx
  42959c:	aas    
  42959d:	es add al,0x10
  4295a0:	rcl    BYTE PTR [edx],cl
  4295a2:	bound  esp,QWORD PTR [ebp+0x3f]
  4295a5:	es add al,0xcf
  4295a8:	adc    eax,0xc2a32fd4
  4295ad:	call   0x248d1f8d
  4295b2:	lds    esp,FWORD PTR [edx-0x72]
  4295b5:	cli    
  4295b6:	sub    eax,DWORD PTR [ebp+0x17]
  4295b9:	dec    edx
  4295ba:	and    DWORD PTR [ecx],ebx
  4295bc:	inc    edx
  4295bd:	mov    ebp,0x2cf7140e
  4295c2:	inc    edi
  4295c3:	add    BYTE PTR [edx],0x2b
  4295c6:	pop    es
  4295c7:	gs aas 
  4295c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295ca:	add    ebx,DWORD PTR [esp+ebp*4-0xfc508df]
  4295d1:	test   al,0x3
  4295d3:	add    bh,al
  4295d5:	stos   BYTE PTR es:[edi],al
  4295d6:	cmp    BYTE PTR [edi-0x409ffd26],dl
  4295dc:	push   ss
  4295dd:	adc    eax,0xc29b33dc
  4295e2:	call   0xffd0d9c3
  4295e7:	scas   eax,DWORD PTR es:[edi]
  4295e8:	inc    esi
  4295e9:	add    eax,0xb29ea98c
  4295ee:	cli    
  4295ef:	cld    
  4295f0:	dec    edx
  4295f1:	add    al,0x40
  4295f3:	jmp    0xb6e9b9
  4295f8:	sub    al,bh
  4295fa:	sti    
  4295fb:	cmp    BYTE PTR [ecx+edx*2-0x2a9dc8f3],ch
  429602:	call   DWORD PTR [edi]
  429604:	lods   al,BYTE PTR ds:[esi]
  429605:	push   ecx
  429606:	or     eax,0xffd56225
  42960b:	pop    ss
  42960c:	jl     0x4295dd
  42960e:	aas    
  42960f:	lods   eax,DWORD PTR ds:[esi]
  429610:	loope  0x429626
  429612:	cli    
  429613:	aam    0xc2
  429615:	inc    eax
  429616:	aas    
  429617:	jmp    0xa9c7c8d9
  42961c:	sub    edx,DWORD PTR ds:0x7bbd2488
  429622:	inc    ebp
  429623:	jge    0x429666
  429625:	dec    ebx
  429626:	mov    edi,0xe812281f
  42962b:	ficomp DWORD PTR [esi+0x625f0002]
  429631:	loopne 0x42963a
  429633:	call   0x41949842
  429638:	add    BYTE PTR [ebx],ah
  42963a:	fdivp  st(1),st
  42963c:	dec    esi
  42963d:	and    DWORD PTR [ecx+0x5a],eax
  429640:	sub    esp,DWORD PTR [edx-0x695878fe]
  429646:	aas    
  429647:	add    cl,BYTE PTR [ecx]
  429649:	or     eax,0xde63ffc3
  42964e:	mov    es,WORD PTR ds:0xfab29672
  429654:	mov    eax,0xe1619396
  429659:	sahf   
  42965a:	jnp    0x429626
  42965c:	add    bh,bl
  42965e:	es sti 
  429660:	add    BYTE PTR [ebx+0x25ec824c],ah
  429666:	push   ecx
  429667:	jp     0x4296e4
  429669:	cld    
  42966a:	push   DWORD PTR [ebx+0x4]
  42966d:	mov    ah,0x0
  42966f:	leave  
  429670:	ret    
  429671:	ja     0x4296dc
  429673:	repz add BYTE PTR [edx-0x7be8a49a],ch
  42967a:	(bad)  
  42967b:	addr16 or bl,0x3f
  42967f:	sti    
  429680:	out    0x7d,eax
  429682:	shl    esi,1
  429684:	dec    DWORD PTR [edi-0x12]
  429687:	test   dh,dh
  429689:	js     0x4296c3
  42968b:	add    BYTE PTR [esi],0x47
  42968e:	imul   esi,edi,0xf7313100
  429694:	push   ecx
  429695:	push   0xfffffff3
  429697:	dec    edi
  429698:	sbb    al,0x9
  42969a:	mov    edi,0xff002274
  42969f:	dec    ecx
  4296a0:	test   DWORD PTR [ebp-0x74ed85cc],0xf855728c
  4296aa:	xchg   esi,eax
  4296ab:	dec    esi
  4296ac:	not    BYTE PTR [ecx+0x60]
  4296af:	mov    al,al
  4296b1:	je     0x42972b
  4296b3:	and    BYTE PTR [ebp-0x8],0x74
  4296b7:	mov    BYTE PTR [ebp-0x4],al
  4296ba:	mov    edi,0x15ff5006
  4296bf:	pop    es
  4296c0:	add    DWORD PTR [esi],0x2a
  4296c3:	hlt    
  4296c4:	dec    edi
  4296c5:	or     bh,cl
  4296c7:	dec    ecx
  4296c8:	repz pop esi
  4296ca:	leave  
  4296cb:	mov    esi,0x3fbd0573
  4296d0:	add    ebp,ebx
  4296d2:	pop    ds
  4296d3:	xor    BYTE PTR [ebx-0x7da68837],bh
  4296d9:	in     al,dx
  4296da:	popf   
  4296db:	pop    edx
  4296dc:	xchg   BYTE PTR [eax-0x5b],al
  4296df:	test   al,0xa8
  4296e1:	sti    
  4296e2:	popf   
  4296e3:	nop
  4296e4:	or     ecx,DWORD PTR [ebp+0x4fb11568]
  4296ea:	cli    
  4296eb:	jns    0x4296b4
  4296ed:	test   ch,bl
  4296ef:	mov    WORD PTR [edx],es
  4296f1:	jg     0x429673
  4296f3:	sbb    eax,0x355886ff
  4296f8:	dec    esp
  4296f9:	mov    edi,0x12b3c173
  4296fe:	pop    ebp
  4296ff:	sub    DWORD PTR [edi-0x164dff91],esp
  429705:	add    ebp,eax
  429707:	jmp    0x42974d
  429709:	sbb    bh,bl
  42970b:	es pop ecx
  42970d:	mov    dl,dh
  42970f:	sub    ecx,esi
  429711:	mov    dl,0xfa
  429713:	xor    DWORD PTR [ebp+0xb],eax
  429716:	sti    
  429717:	mov    BYTE PTR ds:0xa49d3fee,dh
  42971d:	push   ss
  42971e:	test   DWORD PTR [edx-0x5c792708],edx
  429724:	lock mov cl,0xfa
  429727:	in     eax,dx
  429728:	cmp    ecx,DWORD PTR [eax+0xa45f0c0]
  42972e:	mov    bl,0xe1
  429730:	inc    edi
  429731:	out    dx,eax
  429732:	xchg   BYTE PTR [ebx-0x32054ab6],ah
  429738:	jecxz  0x4296c2
  42973a:	rcl    al,0x15
  42973d:	sbb    dh,BYTE PTR [ecx+edi*2+0x17]
  429741:	xchg   BYTE PTR [edx],al
  429743:	repz enter 0x2fae,0x18
  429748:	fcom   QWORD PTR [edi-0x56ddd9f5]
  42974e:	dec    eax
  429750:	loopne 0x429700
  429752:	aas    
  429753:	and    BYTE PTR [ebx],al
  429755:	sub    DWORD PTR [edi-0x4a1c8266],edx
  42975b:	pop    ss
  42975c:	mov    bl,0xe0
  42975e:	ror    BYTE PTR [edx+edi*4],cl
  429761:	or     eax,edi
  429763:	retf   0xa8f5
  429766:	add    eax,DWORD PTR [eax]
  429768:	sbb    cl,BYTE PTR [ecx-0x66]
  42976b:	mov    ebp,0xb8e8ff38
  429770:	sbb    ebx,DWORD PTR [edi]
  429772:	cwde   
  429773:	mov    ah,BYTE PTR [eax-0x6]
  429776:	cmp    dh,BYTE PTR [ebp+0x1dd9b0fa]
  42977c:	(bad)  
  42977d:	jge    0x429758
  42977f:	xchg   edi,ecx
  429781:	xchg   esi,eax
  429782:	and    al,BYTE PTR [ecx-0x7716f1c0]
  429788:	lahf   
  429789:	jg     0x4297b7
  42978b:	and    BYTE PTR [ecx+edx*1+0x3c],cl
  42978f:	clc    
  429790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429791:	pop    ecx
  429792:	sbb    al,0xf4
  429794:	dec    ebp
  429795:	mov    eax,0x877ab4a1
  42979a:	test   eax,0xc859e98
  42979f:	and    BYTE PTR [ebp-0x784a1c83],bl
  4297a5:	mov    dl,0xf0
  4297a7:	mov    al,bl
  4297a9:	push   cs
  4297aa:	outs   dx,BYTE PTR ds:[esi]
  4297ab:	adc    al,0x20
  4297ad:	inc    edx
  4297ae:	std    
  4297af:	cli    
  4297b0:	sbb    edi,edx
  4297b2:	(bad)  
  4297b3:	sbb    al,0xcd
  4297b5:	adc    DWORD PTR [eax+0x6e0a1bb3],edi
  4297bb:	push   es
  4297bc:	out    dx,eax
  4297bd:	adc    DWORD PTR [ecx+0x6442820b],edi
  4297c3:	sbb    eax,0x29297696
  4297c8:	aad    0x11
  4297ca:	mov    ah,0xf7
  4297cc:	add    BYTE PTR [edi],dh
  4297ce:	xchg   edi,eax
  4297cf:	(bad)  
  4297d0:	fcom   DWORD PTR [ecx+0x43410b97]
  4297d6:	or     al,0xfb
  4297d8:	es adc al,0xa
  4297db:	test   DWORD PTR [esi],ebx
  4297dd:	xor    al,BYTE PTR ds:0xd2c4292e
  4297e3:	xchg   BYTE PTR [esi+edx*4-0x5f07183f],ah
  4297ea:	or     eax,0x879172fb
  4297ef:	bnd jl 0x42978c
  4297f2:	loopne 0x4297ca
  4297f4:	add    ah,ch
  4297f6:	xchg   DWORD PTR [edx],eax
  4297f8:	sub    ecx,DWORD PTR ds:[eax+edx*2]
  4297fc:	or     DWORD PTR [edx+ebp*1],esp
  4297ff:	xchg   edi,ebp
  429801:	or     BYTE PTR [eax+edx*2],cl
  429804:	loope  0x429829
  429806:	cmp    DWORD PTR [ebx],ecx
  429808:	pop    ebp
  429809:	pop    ebp
  42980a:	mov    DWORD PTR [ebx],eax
  42980c:	push   ss
  42980d:	cwde   
  42980e:	mov    dl,0x7
  429810:	arpl   WORD PTR [ebp-0x47],bx
  429813:	pop    edx
  429814:	orps   xmm2,XMMWORD PTR [eax+0x10]
  429818:	jmp    0x6b2f2008
  42981d:	retf   0x4ef6
  429820:	aas    
  429821:	dec    eax
  429822:	test   al,0xef
  429824:	neg    DWORD PTR [esi+0x10]
  429827:	arpl   cx,bx
  429829:	mov    eax,edx
  42982b:	call   DWORD PTR [eax+0x76fb27d2]
  429831:	add    BYTE PTR ds:0x45772f2b,ah
  429837:	sub    dh,BYTE PTR [ecx+eiz*8+0x15]
  42983b:	adc    BYTE PTR [ebp-0x46],dl
  42983e:	mov    ecx,0x9ee9fc72
  429843:	add    al,BYTE PTR [edi-0x53eef16]
  429849:	add    ah,ah
  42984b:	and    eax,DWORD PTR [eax]
  42984d:	add    BYTE PTR [ebx+edi*2-0x5],al
  429851:	imul   ebp,DWORD PTR [ebx+0x52],0x54c90f6
  429858:	add    BYTE PTR [eax],al
  42985a:	scas   eax,DWORD PTR es:[edi]
  42985b:	add    cl,BYTE PTR [esi+0x53]
  42985e:	mov    ebx,0x4010f93
  429863:	add    al,0x83
  429865:	add    ebp,DWORD PTR [ecx+0x40]
  429868:	not    DWORD PTR [ecx+0x2c]
  42986b:	add    al,0xf
  42986d:	inc    eax
  42986e:	add    al,0x53
  429870:	not    BYTE PTR [eax]
  429872:	add    ebx,0x48493d74
  429878:	out    0x50,eax
  42987a:	sti    
  42987b:	adc    DWORD PTR [edi],ebp
  42987d:	adc    eax,DWORD PTR [esi+eax*1+0x648c0b62]
  429884:	mov    BYTE PTR [ebp+0x8],al
  429887:	mov    ah,ch
  429889:	adc    bh,al
  42988b:	ret    
  42988c:	pop    ebp
  42988d:	mov    DWORD PTR [ecx-0x17ba7d0e],eax
  429893:	jg     0x42989d
  429895:	mov    eax,DWORD PTR [eax]
  429897:	clc    
  429898:	jns    0x42990f
  42989a:	in     al,dx
  42989b:	push   ecx
  42989c:	mov    eax,ds:0x876068a4
  4298a1:	inc    eax
  4298a2:	add    ah,dl
  4298a4:	mov    eax,ds:0x5b491f6
  4298a9:	add    BYTE PTR [eax],al
  4298ab:	cmovb  esi,edi
  4298ae:	mov    ebp,DWORD PTR [ebx+edx*2-0xa]
  4298b2:	push   ecx
  4298b3:	jl     0x429901
  4298b5:	pop    ecx
  4298b6:	mov    esi,DWORD PTR [edi]
  4298b8:	dec    edi
  4298b9:	enter  0x21c3,0x80
  4298bd:	in     al,dx
  4298be:	sub    eax,0xe
  4298c1:	dec    edx
  4298c2:	push   esi
  4298c3:	popf   
  4298c4:	push   eax
  4298c5:	inc    ecx
  4298c6:	inc    ebp
  4298c7:	dec    edx
  4298c8:	sbb    DWORD PTR [edi],esp
  4298ca:	dec    ebx
  4298cb:	inc    edx
  4298cc:	enter  0x8716,0x55
  4298d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298d1:	cmp    dh,BYTE PTR [esp+edi*4-0x5a]
  4298d5:	shl    bh,0xcd
  4298d8:	loopne 0x4298ca
  4298da:	xor    ecx,DWORD PTR [esi-0x5a9a00a7]
  4298e0:	inc    ecx
  4298e1:	push   ss
  4298e2:	jne    0x429889
  4298e4:	jg     0x429872
  4298e6:	inc    ebp
  4298e7:	cmc    
  4298e8:	push   eax
  4298ea:	cmp    ebp,DWORD PTR [esi+0x6088ff59]
  4298f0:	or     DWORD PTR [eax-0x75ae9640],eax
  4298f6:	call   FWORD PTR [ecx]
  4298f8:	outs   dx,BYTE PTR ds:[esi]
  4298f9:	pop    ss
  4298fa:	push   ecx
  4298fb:	add    BYTE PTR [esi],bl
  4298fd:	xor    eax,0x9dd986ef
  429902:	(bad)  
  429903:	out    0xf8,eax
  429905:	jge    0x429967
  429907:	dec    edi
  429908:	add    BYTE PTR [eax+0x6f],al
  42990b:	call   0x8541b2ad
  429910:	fst    st(5)
  429912:	or     ah,BYTE PTR [edx+0x1e]
  429915:	(bad)  
  429916:	sbb    edi,ebx
  429918:	xor    BYTE PTR ds:0x19a24541,ah
  42991e:	mov    BYTE PTR [ebp-0x7b],al
  429921:	int3   
  429922:	push   ss
  429923:	adc    eax,0xffbf08d5
  429928:	or     bh,bh
  42992a:	push   ss
  42992b:	add    BYTE PTR [eax],cl
  42992d:	adc    al,0x8a
  42992f:	dec    edi
  429931:	mov    WORD PTR [esi-0x498f51f9],gs
  429937:	pop    ecx
  429938:	push   ss
  429939:	pop    ecx
  42993a:	mov    edx,0xed035fc8
  42993f:	add    esi,eax
  429941:	jns    0x429990
  429943:	mov    ah,0x1b
  429945:	add    eax,0xb446c864
  42994a:	mov    dl,0x1a
  42994c:	in     eax,dx
  42994d:	call   0xa066:0x6b1436b
  429954:	add    ebx,DWORD PTR ss:[esi+0x1]
  429958:	iret   
  429959:	or     eax,0xc81a0b99
  42995e:	and    al,0x4c
  429960:	add    BYTE PTR [edx+0x7a],bl
  429963:	icebp  
  429964:	(bad)  
  429965:	loopne 0x42991b
  429967:	imul   ecx,DWORD PTR [ecx+edx*4-0xf],0x65
  42996c:	inc    ebx
  42996d:	cdq    
  42996e:	jns    0x429929
  429970:	fisubr WORD PTR [esi-0x1a]
  429973:	lock (bad) 
  429975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429976:	shl    BYTE PTR [ebp+0x43],0xa1
  42997a:	leave  
  42997b:	pop    ss
  42997c:	xchg   ebp,eax
  42997d:	repnz shr BYTE PTR [eax-0x16f8e746],1
  429984:	push   ebx
  429985:	pushf  
  429986:	sbb    ecx,edx
  429988:	scas   eax,DWORD PTR es:[edi]
  429989:	and    ebx,DWORD PTR [edi]
  42998b:	push   0xe9039128
  429990:	add    ecx,DWORD PTR [edi-0x2f]
  429993:	mov    dl,0x8d
  429995:	pop    eax
  429996:	repnz in eax,dx
  429998:	inc    ecx
  429999:	das    
  42999a:	mov    edi,0x96a61c65
  42999f:	sti    
  4299a0:	aam    0x68
  4299a2:	dec    ebx
  4299a3:	xchg   ecx,eax
  4299a4:	add    eax,0x139a029d
  4299a9:	hlt    
  4299aa:	xor    BYTE PTR [ecx+0x70029d05],al
  4299b0:	mov    edi,0x18147b72
  4299b5:	sbb    al,bh
  4299b7:	(bad)  
  4299b8:	fcomp  DWORD PTR [esi+0x10]
  4299bb:	fcom   st(2)
  4299bd:	fidivr WORD PTR [edi+0x4d]
  4299c0:	popa   
  4299c1:	inc    eax
  4299c2:	inc    edx
  4299c3:	push   eax
  4299c4:	mov    bh,0x0
  4299c6:	or     al,0x7e
  4299c8:	test   DWORD PTR [ebp-0x59],ebx
  4299cb:	or     ebx,edi
  4299cd:	mov    ecx,0x3d85400c
  4299d2:	xchg   edi,eax
  4299d3:	or     ebx,edi
  4299d5:	call   0x60429c78
  4299da:	ror    BYTE PTR [edx],cl
  4299dc:	cli    
  4299dd:	test   BYTE PTR cs:[ecx],cl
  4299e0:	adc    eax,0xffcd0a59
  4299e5:	imul   esi,DWORD PTR [ecx+0x4cc37503],0xa5dd7508
  4299ef:	xchg   edi,eax
  4299f0:	pop    es
  4299f1:	sahf   
  4299f2:	xchg   ebp,eax
  4299f3:	not    DWORD PTR [edi]
  4299f5:	xlat   BYTE PTR ds:[ebx]
  4299f6:	fimul  WORD PTR [esi+esi*1]
  4299f9:	das    
  4299fa:	pop    es
  4299fb:	cmc    
  4299fc:	sub    BYTE PTR [edx+ebx*4-0x80ebafd],ah
  429a03:	xchg   ebp,eax
  429a04:	or     ebx,DWORD PTR [esi+0x24]
  429a07:	fnstsw WORD PTR [edi+0xaf91a10]
  429a0d:	jne    0x429a6d
  429a0f:	test   al,0xc8
  429a11:	stos   DWORD PTR es:[edi],eax
  429a12:	mov    ds:0x81a92e02,al
  429a17:	adc    DWORD PTR [ebp+0x62],edx
  429a1a:	xor    BYTE PTR [ebx+0x7a6c252],0x75
  429a21:	stc    
  429a22:	sub    DWORD PTR [esi-0x7a461f9],ecx
  429a28:	gs call 0xfb08bd2e
  429a2e:	cmp    DWORD PTR [ecx+0x2300faaf],esi
  429a34:	jmp    0x4299b9
  429a36:	shr    BYTE PTR [eax+0x5],0x7b
  429a3a:	jge    0x4299bc
  429a3c:	add    BYTE PTR [ebp-0x1e],dh
  429a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a40:	add    BYTE PTR [edi-0x37],dl
  429a43:	xchg   BYTE PTR [ebx],al
  429a45:	add    BYTE PTR [edx],dh
  429a47:	test   dh,bl
  429a49:	out    dx,al
  429a4a:	push   0x34
  429a4c:	jmp    0x429ac1
  429a4e:	and    al,0x44
  429a50:	jmp    0x429ac5
  429a52:	and    al,0x54
  429a54:	jmp    0x429ac9
  429a56:	and    al,0x54
  429a58:	jmp    0x429a6e
  429a5a:	and    BYTE PTR [edx+0x40],cl
  429a5d:	sti    
  429a5e:	cmp    bh,al
  429a60:	sub    eax,DWORD PTR [edi]
  429a62:	sets   BYTE PTR [edi-0x4fbf347]
  429a69:	scas   al,BYTE PTR es:[edi]
  429a6a:	pop    es
  429a6b:	dec    edx
  429a6c:	pop    esi
  429a6d:	add    DWORD PTR [edx-0xb],ebp
  429a70:	dec    edi
  429a71:	not    BYTE PTR ds:0x3b1c9c
  429a77:	outs   dx,DWORD PTR ds:[esi]
  429a78:	out    dx,eax
  429a79:	jp     0x429a79
  429a7b:	repz jl 0x429a9c
  429a7e:	xor    esi,DWORD PTR [ecx+eiz*2+0x4c63f7a]
  429a85:	xchg   ebp,eax
  429a86:	ror    BYTE PTR [edi+edi*2-0x39c80b20],0x1b
  429a8e:	push   eax
  429a8f:	add    BYTE PTR [ebx-0x3ea09a4],cl
  429a95:	adc    DWORD PTR [ebx],edi
  429a97:	add    BYTE PTR [ecx],bh
  429a99:	(bad)  
  429a9a:	jae    0x429aa6
  429a9c:	mov    dh,bl
  429a9e:	adc    al,0x1c
  429aa0:	retf   0xfb3f
  429aa3:	adc    BYTE PTR [edx-0xd],0x82
  429aa7:	(bad)  
  429aa8:	sar    BYTE PTR [edi-0x7a6274ac],cl
  429aae:	mov    ch,0x50
  429ab0:	out    dx,al
  429ab1:	aam    0x99
  429ab3:	rcr    BYTE PTR [ebp+0x11],0x2
  429ab7:	mov    bl,0x55
  429ab9:	dec    eax
  429aba:	adc    cl,BYTE PTR [ebp+0x52af21e0]
  429ac0:	retf   0x909c
  429ac3:	pop    es
  429ac4:	and    al,0x26
  429ac6:	adc    ecx,DWORD PTR [ecx+0x1512a1d0]
  429acc:	adc    DWORD PTR [esi],ecx
  429ace:	mov    edi,0x8fd919ff
  429ad3:	pop    es
  429ad4:	push   ds
  429ad5:	rcl    DWORD PTR [edx],1
  429ad7:	jmp    0x41b3fb
  429adc:	shl    DWORD PTR [eax+0xb360790],cl
  429ae2:	xchg   BYTE PTR [edx-0x5f],al
  429ae5:	cwde   
  429ae6:	sbb    edi,esi
  429ae8:	mov    DWORD PTR [ecx],ecx
  429aea:	adc    dh,BYTE PTR [edx-0x53]
  429aed:	hlt    
  429aee:	mov    DWORD PTR [edi],edx
  429af0:	cmc    
  429af1:	dec    eax
  429af2:	in     al,0xf9
  429af4:	add    dl,bh
  429af6:	xchg   ecx,eax
  429af7:	sar    bl,0x6
  429afa:	sub    BYTE PTR [esi-0x8],bh
  429afd:	xchg   edx,eax
  429afe:	mov    es,WORD PTR [ebx+edi*8]
  429b01:	imul   ebp,DWORD PTR [ecx],0x12
  429b04:	jb     0x429abb
  429b06:	xor    esi,edx
  429b08:	and    bl,dl
  429b0a:	sub    ecx,DWORD PTR [ebp+eax*2+0x1b8c9fc5]
  429b11:	xchg   BYTE PTR [eax+edx*4],dh
  429b14:	leave  
  429b15:	mov    edx,0x88fb0bcd
  429b1a:	adc    ebp,ebp
  429b1c:	aas    
  429b1d:	popf   
  429b1e:	mov    al,ds:0x6b1efbbf
  429b23:	adc    dh,BYTE PTR [edi]
  429b25:	bound  eax,QWORD PTR [ebx]
  429b27:	sbb    eax,0x30b1a09
  429b2c:	(bad)  
  429b2d:	in     eax,0x4
  429b2f:	sbb    ebx,0x8a8a0a87
  429b35:	ins    DWORD PTR es:[edi],dx
  429b36:	jle    0x429b3c
  429b38:	sbb    al,0x18
  429b3a:	or     dh,ch
  429b3c:	repz jmp 0x429b47
  429b3f:	jb     0x429ad1
  429b41:	fwait
  429b42:	mov    al,ds:0x2258b65f
  429b47:	or     BYTE PTR [edi],dl
  429b49:	push   esi
  429b4a:	or     ch,BYTE PTR [esi+0x13]
  429b4d:	inc    esi
  429b4e:	nop
  429b4f:	push   esp
  429b50:	sub    ebx,DWORD PTR [ecx]
  429b52:	jecxz  0x429b9e
  429b54:	push   ss
  429b55:	ss nop
  429b57:	inc    eax
  429b58:	sub    eax,DWORD PTR [eax]
  429b5a:	mov    cl,0xe2
  429b5c:	cmp    dl,BYTE PTR [esi]
  429b5e:	and    al,BYTE PTR [ecx-0x6d]
  429b61:	mov    dh,0xcb
  429b63:	cmp    esp,DWORD PTR [edi]
  429b65:	call   FWORD PTR [edx]
  429b67:	mov    al,0xb9
  429b69:	mov    dl,BYTE PTR ds:0x80fe51fa
  429b6f:	add    BYTE PTR [edi+0x4],bh
  429b72:	ins    DWORD PTR es:[edi],dx
  429b73:	or     esp,esi
  429b75:	sbb    edx,DWORD PTR [eax-0x1275173e]
  429b7b:	test   ebx,edi
  429b7d:	adc    eax,0x43b5c571
  429b82:	jg     0x429b09
  429b84:	stos   BYTE PTR es:[edi],al
  429b85:	add    DWORD PTR [esi+0x53cca96f],esp
  429b8b:	and    dl,ch
  429b8d:	sbb    ebp,0x6cad38e6
  429b93:	or     esp,esi
  429b95:	seto   dl
  429b98:	call   0xebd2791b
  429b9d:	test   eax,0xb5ffb09d
  429ba2:	mov    dl,0x41
  429ba4:	adc    eax,0xc07fa129
  429ba9:	sbb    eax,0xf5150c96
  429bae:	js     0x429b79
  429bb0:	(bad)  
  429bb1:	ds adc al,0xa
  429bb4:	sti    
  429bb5:	hlt    
  429bb6:	jb     0x429bab
  429bb8:	aas    
  429bb9:	jmp    0xc557a7ff
  429bbe:	add    BYTE PTR [eax-0x37],bh
  429bc1:	jmp    FWORD PTR [ecx-0x25]
  429bc4:	or     eax,0xac9b625b
  429bc9:	mov    esi,0x23961bbc
  429bce:	ins    DWORD PTR es:[edi],dx
  429bcf:	push   ds
  429bd0:	push   ss
  429bd1:	adc    ah,ch
  429bd3:	sahf   
  429bd4:	add    dl,BYTE PTR [edx-0x4a]
  429bd7:	and    eax,0x5edcafc7
  429bdc:	or     DWORD PTR [esi],ebp
  429bde:	aaa    
  429bdf:	je     0x429b80
  429be1:	mov    BYTE PTR [esi+ecx*1-0x4e3a4b36],bh
  429be8:	or     eax,0x80549ffb
  429bed:	inc    ebp
  429bee:	cdq    
  429bef:	adc    eax,0xa981857e
  429bf4:	or     eax,0x8f5dd2fb
  429bf9:	pop    es
  429bfa:	jb     0x429bd6
  429bfc:	mov    WORD PTR [eax-0xdfbd54],cs
  429c02:	pop    edi
  429c03:	sub    bl,BYTE PTR [ebp-0x1617eaf]
  429c09:	(bad)  
  429c0a:	call   0xe2a7132a
  429c0f:	mov    cl,0xd
  429c11:	push   ecx
  429c12:	cmp    DWORD PTR [eax-0x2108e811],ebp
  429c18:	or     BYTE PTR [eax+0x7a568100],cl
  429c1e:	clc    
  429c1f:	mov    ch,0x70
  429c21:	dec    edi
  429c22:	push   esi
  429c23:	add    BYTE PTR [ecx+eax*4-0x10b09b7b],al
  429c2a:	not    BYTE PTR [eax+0x3b]
  429c2d:	jns    0x429c96
  429c2f:	call   DWORD PTR [ecx+0x74401124]
  429c35:	sub    eax,DWORD PTR [eax+ebp*2-0x6f]
  429c39:	das    
  429c3a:	test   BYTE PTR [ebp+0x74],0x7b
  429c3e:	inc    ebp
  429c3f:	jo     0x429ca0
  429c41:	mov    DWORD PTR [ebx-0x1],esp
  429c44:	jmp    0x429c34
  429c46:	imul   esp,DWORD PTR [esi+0x567748bf],0x6c857d12
  429c50:	jmp    0x429c40
  429c52:	not    BYTE PTR [esi-0x47]
  429c55:	mov    BYTE PTR [ebx-0x1],ah
  429c58:	jmp    0x429c48
  429c5a:	dec    edi
  429c5b:	push   esi
  429c5c:	or     DWORD PTR [eax-0x1194009d],0xfffffff9
  429c63:	push   DWORD PTR [esp+eax*1]
  429c66:	mov    DWORD PTR [ebp-0x91124],ebx
  429c6c:	mov    ebx,0xf5f87ad6
  429c71:	dec    BYTE PTR [esp+ebp*2+0x5ff6eeab]
  429c78:	dec    edx
  429c79:	add    ebp,0x74
  429c7c:	lods   eax,DWORD PTR ds:[esi]
  429c7d:	rol    DWORD PTR [ebx],0x0
  429c80:	adc    DWORD PTR [ebx-0x14],edi
  429c83:	sbb    DWORD PTR [eax+0xff],0x5d8252c4
  429c8d:	int3   
  429c8e:	dec    ecx
  429c8f:	xor    al,0x4f
  429c92:	cmp    DWORD PTR [edi],eax
  429c94:	lea    ebx,[ebp-0x4b80fb21]
  429c9a:	fst    DWORD PTR [edx-0x67a5e788]
  429ca0:	pop    ss
  429ca1:	outs   dx,BYTE PTR ds:[esi]
  429ca2:	imul   ecx,DWORD PTR [ebx-0x18],0xffffff9e
  429ca6:	sbb    edi,edi
  429ca8:	repnz mov fs,WORD PTR [eax+esi*4+0x1c4c0407]
  429cb0:	dec    DWORD PTR [edx-0x7aba83e7]
  429cb6:	mov    ds:0x1e07fbb8,al
  429cbb:	mov    dl,0x8c
  429cbd:	sbb    BYTE PTR [ecx-0x169504f2],al
  429cc3:	jl     0x429c52
  429cc5:	imul   ecx,DWORD PTR [edi-0x18ba04f2],0x9652f9ee
  429ccf:	adc    eax,0x4594b074
  429cd4:	sar    DWORD PTR ds:0xb0faaf1b,0x9
  429cdb:	add    BYTE PTR [ebp-0x4f140cf],0xcd
  429ce2:	mov    cl,0xd8
  429ce4:	sbb    ah,BYTE PTR [ebx]
  429ce6:	rcl    dl,1
  429ce8:	mov    edi,0x8cfb5ed6
  429ced:	add    BYTE PTR [eax-0x1f],ah
  429cf0:	jmp    0x9d65:0xb3dabebf
  429cf7:	cmp    edi,0xffffff8c
  429cfa:	and    ch,ch
  429cfc:	or     eax,0x9d68f2fb
  429d01:	(bad)  
  429d02:	jmp    0x429d31
  429d04:	dec    edi
  429d05:	adc    eax,0xc088195d
  429d0a:	push   eax
  429d0b:	sub    eax,0x27a4b97
  429d10:	jmp    0x52f6318
  429d15:	cli    
  429d16:	add    BYTE PTR [edx],0x66
  429d19:	cmp    esi,DWORD PTR [esi-0xcc2d259]
  429d1f:	cmc    
  429d20:	call   0x354942ab
  429d25:	push   ss
  429d26:	jb     0x429d38
  429d28:	mov    dl,0xd7
  429d2a:	dec    ebx
  429d2b:	js     0x429d91
  429d2d:	pop    ss
  429d2e:	xchg   edi,eax
  429d2f:	push   es
  429d30:	mov    ds:0x9a06c81b,al
  429d35:	adc    bl,BYTE PTR [ecx]
  429d37:	inc    ebx
  429d38:	sbb    al,0xfc
  429d3a:	fadd   QWORD PTR [ecx+0x1b03048b]
  429d40:	mov    ?,WORD PTR [ecx]
  429d42:	and    bh,bh
  429d44:	xor    eax,0x5db0491e
  429d49:	pop    ds
  429d4a:	push   esi
  429d4b:	nop
  429d4c:	(bad)  
  429d4e:	adc    bl,BYTE PTR [ecx-0x2fffed18]
  429d54:	cli    
  429d55:	test   al,0x1b
  429d57:	jnp    0x429d5e
  429d59:	push   edx
  429d5a:	adc    bh,BYTE PTR [edx-0x7168b5f6]
  429d60:	ja     0x429d16
  429d62:	dec    ebp
  429d64:	cwde   
  429d65:	call   0xe502fd1d
  429d6a:	sbb    DWORD PTR [ebp-0x57ed16fe],0x42
  429d71:	cld    
  429d72:	ret    
  429d73:	or     ah,BYTE PTR [edi-0x7efd04da]
  429d79:	adc    edx,DWORD PTR [edx]
  429d7b:	jno    0x429d6f
  429d7d:	jle    0x429d84
  429d7f:	dec    edi
  429d80:	add    eax,0xc2901bdc
  429d85:	call   0x328543
  429d8a:	aam    0xd4
  429d8c:	vmovaps YMMWORD PTR [edi+0x2b3e0251],ymm3
  429d94:	repz gs jmp 0x429da6
  429d98:	or     DWORD PTR ds:0xffc5b2d1,edx
  429d9e:	popa   
  429d9f:	mov    eax,ds:0x5c6fa85
  429da4:	loope  0x429dd4
  429da6:	test   eax,0xeb3984f7
  429dab:	popf   
  429dac:	outs   dx,DWORD PTR ds:[esi]
  429dad:	shl    BYTE PTR [ecx],0x18
  429db0:	and    dh,ah
  429db2:	push   0xffffffe1
  429db4:	out    0x4f,al
  429db6:	aaa    
  429db7:	add    BYTE PTR [eax+ecx*1+0x15],al
  429dbb:	popf   
  429dbc:	jb     0x429d83
  429dbe:	jmp    DWORD PTR [ebx-0x27]
  429dc1:	mov    es,WORD PTR ds:0x1bef8c1e
  429dc7:	xlat   BYTE PTR ds:[ebx]
  429dc8:	pop    esi
  429dc9:	add    eax,0x7daca67e
  429dce:	ret    
  429dcf:	push   cs
  429dd0:	fsubr  DWORD PTR [edi-0x4df1aa7a]
  429dd6:	dec    esi
  429dd7:	mov    bh,0xc1
  429dd9:	iret   
  429dda:	mov    ebx,0x63055efb
  429ddf:	shl    DWORD PTR [edx+0x4445ffc2],0x8
  429de6:	rcl    cl,cl
  429de8:	sbb    dh,BYTE PTR [esi+0x40]
  429deb:	jmp    0x11c96f9d
  429df0:	lods   al,BYTE PTR ds:[esi]
  429df1:	xor    BYTE PTR [edi-0x74],bh
  429df4:	xchg   esi,eax
  429df5:	add    al,BYTE PTR [edi+0x742d1a19]
  429dfb:	shl    DWORD PTR [ebx],0x10
  429dfe:	je     0x429dc5
  429e00:	jae    0x429dc1
  429e02:	sti    
  429e03:	add    BYTE PTR [edi+eiz*2],al
  429e06:	sti    
  429e07:	(bad)  
  429e08:	imul   ecx,DWORD PTR [ecx],0xbe49d3f6
  429e0e:	je     0x429e25
  429e10:	ret    
  429e11:	imul   eax,DWORD PTR [edi],0xffffff8b
  429e14:	sti    
  429e15:	icebp  
  429e16:	je     0x429e14
  429e18:	in     al,dx
  429e19:	psubq  mm7,mm7
  429e1c:	add    ah,al
  429e1e:	icebp  
  429e1f:	je     0x429e1d
  429e21:	cmp    eax,0xafff33c
  429e26:	xchg   BYTE PTR [eax+edi*8-0x7e],al
  429e2a:	push   edi
  429e2b:	enter  0x7cc2,0x0
  429e2f:	push   ebp
  429e30:	mov    edx,DWORD PTR [eax+0x7f]
  429e33:	in     al,dx
  429e34:	dec    esp
  429e35:	(bad)  
  429e36:	dec    eax
  429e37:	xor    BYTE PTR ds:0x3b0de0,0xbb
  429e3e:	test   edi,esi
  429e40:	push   0x3f83ec
  429e45:	and    ebp,DWORD PTR [ebx]
  429e47:	mov    esi,0xfb121045
  429e4c:	inc    DWORD PTR [ebx+esi*8-0x33]
  429e50:	push   0x3f8388
  429e55:	ret    
  429e56:	sub    al,BYTE PTR [edx+0x67c9e3d8]
  429e5c:	int3   
  429e5d:	sar    BYTE PTR [edi],0xfb
  429e60:	dec    BYTE PTR [ebx-0x1c0fbb79]
  429e66:	leave  
  429e67:	sub    dh,dh
  429e69:	lods   eax,DWORD PTR ds:[esi]
  429e6a:	cmp    al,0xe3
  429e6c:	cmp    esi,DWORD PTR [edx+0x5338402]
  429e72:	add    BYTE PTR [eax],al
  429e74:	cmp    DWORD PTR [ecx],ebp
  429e76:	lock push es
  429e78:	test   dh,ch
  429e7a:	add    BYTE PTR [eax],al
  429e7c:	add    BYTE PTR [ebp+0xb4930],bl
  429e82:	sbb    DWORD PTR [eax],edi
  429e84:	(bad)  
  429e85:	call   FWORD PTR [ebp+0x4df3c18e]
  429e8b:	xchg   esi,eax
  429e8c:	sar    ebx,0x6d
  429e8f:	mov    ds:0x8f24f791,al
  429e94:	or     cl,BYTE PTR [ecx-0x30f4dab0]
  429e9a:	sbb    BYTE PTR [edx-0x5],bl
  429e9d:	test   BYTE PTR [edi+0x26ffff1a],bl
  429ea3:	fist   WORD PTR [edi]
  429ea5:	aaa    
  429ea6:	jecxz  0x429eb4
  429ea8:	xor    ebx,0xffffff9d
  429eab:	sbb    edi,edi
  429ead:	cmp    BYTE PTR [eax],dl
  429eaf:	dec    esi
  429eb0:	sti    
  429eb1:	add    DWORD PTR [ebx+0x75ffff19],0x60
  429eb8:	lock stc 
  429eba:	adc    BYTE PTR [eax+0x1c5b372b],0x83
  429ec1:	fistp  DWORD PTR [ebp+0x6a4eff19]
  429ec7:	push   es
  429ec8:	adc    edi,ebx
  429eca:	call   0x4d97a954
  429ecf:	xchg   esi,eax
  429ed0:	inc    ebx
  429ed1:	jne    0x429e67
  429ed3:	push   edx
  429ed4:	cwde   
  429ed5:	sti    
  429ed6:	shl    ebp,cl
  429ed8:	xor    BYTE PTR [edi-0x73],0xa4
  429edc:	sar    dl,cl
  429ede:	mov    al,0x1d
  429ee0:	or     dl,BYTE PTR ds:0xffbf06ed
  429ee6:	add    BYTE PTR [ecx],ah
  429ee8:	fst    DWORD PTR [edi+0x4298db06]
  429eee:	dec    esp
  429eef:	(bad)  
  429ef0:	inc    esi
  429ef1:	or     ebp,DWORD PTR [esi+0x5]
  429ef4:	sar    al,0x66
  429ef7:	adc    eax,DWORD PTR [edx]
  429ef9:	mov    ch,0x99
  429efb:	xchg   edx,eax
  429efc:	call   DWORD PTR ds:0x30bd29b6
  429f02:	mov    ah,0xfa
  429f04:	loop   0x429ef1
  429f06:	or     eax,0xf8c7ee6
  429f0b:	popf   
  429f0c:	iret   
  429f0d:	repnz mov dl,0xc2
  429f10:	sub    dl,ch
  429f12:	or     eax,0xf73c8d6
  429f17:	xchg   esi,eax
  429f18:	jge    0x429f8a
  429f1a:	add    ebx,DWORD PTR [ebp-0x4d3793fe]
  429f20:	mov    cl,0x15
  429f22:	divps  xmm5,XMMWORD PTR [ebx-0x7d6ff0ce]
  429f29:	fcmovnb st,st(3)
  429f2b:	mov    ds:0xc98a97d,al
  429f30:	cmp    al,0x3c
  429f32:	or     al,0x9
  429f34:	je     0x429f96
  429f36:	cwde   
  429f37:	push   edx
  429f38:	cmp    al,0x1c
  429f3a:	and    BYTE PTR [edi],cl
  429f3c:	cmp    ecx,DWORD PTR [edi]
  429f3e:	hlt    
  429f3f:	add    ah,bh
  429f41:	fs ret 
  429f43:	jb     0x429ed4
  429f45:	and    edx,DWORD PTR [eax-0x33]
  429f48:	jmp    0x6e02:0x6400ef9e
  429f4f:	enter  0x6e12,0xa9
  429f53:	out    dx,eax
  429f54:	pop    edi
  429f55:	inc    edi
  429f56:	in     al,0x33
  429f58:	mov    eax,ds:0x1a03e902
  429f5d:	dec    eax
  429f5e:	mov    eax,ds:0x601efa9a
  429f63:	(bad)  
  429f64:	cdq    
  429f65:	into   
  429f66:	pop    ebp
  429f67:	enter  0x6df2,0x29
  429f6b:	out    dx,eax
  429f6c:	adc    DWORD PTR [eax+0x4d],edx
  429f6f:	jl     0x429fda
  429f71:	pop    es
  429f72:	add    BYTE PTR ds:0x5cb847a3,bl
  429f78:	aad    0xb9
  429f7a:	dec    edi
  429f7b:	je     0x429f52
  429f7d:	(bad)  [edi+0x1e]
  429f80:	adc    eax,0xf69cfafa
  429f85:	cld    
  429f86:	push   esp
  429f87:	add    DWORD PTR ds:0x96ac86c3,edx
  429f8d:	jbe    0x429f96
  429f8f:	jb     0x429f67
  429f91:	push   ecx
  429f92:	sti    
  429f93:	cwde   
  429f94:	(bad)  
  429f95:	mov    dh,BYTE PTR [ecx+esi*8-0x5c]
  429f99:	or     al,0x87
  429f9b:	and    DWORD PTR [ebx],ecx
  429f9d:	push   esp
  429f9e:	das    
  429f9f:	mov    al,0xee
  429fa1:	xor    dh,cl
  429fa3:	cmp    ebp,ecx
  429fa5:	cld    
  429fa6:	push   edx
  429fa7:	cmc    
  429fa8:	and    eax,0x9fd2f847
  429fad:	xor    eax,eax
  429faf:	push   ds
  429fb0:	add    BYTE PTR [ebx+0x58],cl
  429fb3:	leave  
  429fb4:	stos   DWORD PTR es:[edi],eax
  429fb5:	xchg   ecx,eax
  429fb6:	add    DWORD PTR [edx+eiz*2-0x43],edx
  429fba:	mov    DWORD PTR [ebp+esi*8+0x1f],eax
  429fbe:	out    dx,al
  429fbf:	pop    es
  429fc0:	jmp    0x429f60
  429fc2:	add    cl,BYTE PTR [edi+0x3f]
  429fc5:	hlt    
  429fc6:	repz mov al,cs:0x1e100293
  429fcd:	add    eax,0x3da97f51
  429fd2:	push   ecx
  429fd3:	sti    
  429fd4:	cld    
  429fd5:	push   esi
  429fd6:	mov    es,WORD PTR [ecx+esi*2-0x46050266]
  429fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fde:	jl     0x429ff4
  429fe0:	jmp    0xde022783
  429fe5:	jmp    0xa6281971
  429fea:	inc    ebp
  429feb:	or     BYTE PTR [eax],al
  429fed:	test   eax,0xbf3302bf
  429ff2:	(bad)  
  429ff4:	add    al,0x81
  429ff6:	inc    esi
  429ff7:	je     0x42a01d
  429ff9:	jg     0x429fc2
  429ffb:	push   es
  429ffc:	jmp    eax
  429ffe:	ins    BYTE PTR es:[edi],dx
  429fff:	lea    eax,[ebp-0x8ee44]
  42a005:	xor    al,0x1d
  42a007:	stos   DWORD PTR es:[edi],eax
  42a008:	push   ebp
  42a009:	call   0x81de:0x60c0850f
  42a010:	inc    edi
  42a011:	int3   
  42a012:	jg     0x42a05b
  42a014:	or     BYTE PTR [eax],al
  42a016:	pop    es
  42a017:	push   cs
  42a018:	push   eax
  42a019:	add    al,0xf
  42a01b:	sub    eax,0xde6edc6a
  42a020:	push   edi
  42a021:	push   ecx
  42a022:	fcmovnbe st,st(7)
  42a024:	div    BYTE PTR [edx+0x15f70687]
  42a02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a02b:	icebp  
  42a02c:	cmp    al,BYTE PTR [eax]
  42a02e:	jecxz  0x42a05c
  42a030:	adc    eax,eax
  42a032:	pop    es
  42a033:	and    al,0xf6
  42a035:	add    DWORD PTR [edx+eax*1+0x57],0x5e
  42a03a:	scas   eax,DWORD PTR es:[edi]
  42a03b:	cmp    edi,DWORD PTR [edx-0x452c8bf8]
  42a041:	inc    eax
  42a042:	(bad)  
  42a044:	div    DWORD PTR [eax+eiz*2-0x4]
  42a048:	or     DWORD PTR [ecx+0x7c],0x6c24740f
  42a04f:	jnp    0x42a052
  42a051:	push   DWORD PTR [edx+ecx*1+0x1704b607]
  42a058:	fcomp  DWORD PTR [ebx]
  42a05a:	hlt    
  42a05b:	sbb    bh,0xfe
  42a05e:	mov    bh,0x43
  42a060:	cli    
  42a061:	shr    DWORD PTR [esp+eax*1],0x4e
  42a065:	mov    ebx,DWORD PTR [ebp-0x5e8df3a6]
  42a06b:	sub    BYTE PTR ds:0xfeaa11f4,al
  42a071:	out    0x96,eax
  42a073:	in     al,0xc
  42a075:	sti    
  42a076:	and    BYTE PTR [eax-0x56ff180a],ch
  42a07c:	jmp    0x7e2:0xae0bfffe
  42a083:	pushf  
  42a084:	sub    BYTE PTR ds:0xfeaa2670,al
  42a08a:	jae    0x42a02f
  42a08c:	mov    bh,0x16
  42a08e:	pusha  
  42a08f:	xchg   BYTE PTR [edi],al
  42a091:	or     al,0x87
  42a093:	jecxz  0x42a034
  42a095:	inc    eax
  42a096:	add    al,0x9d
  42a098:	fs mov ebx,0xb49ca123
  42a09e:	out    0x26,eax
  42a0a0:	cmp    al,0x6
  42a0a2:	sti    
  42a0a3:	push   ds
  42a0a4:	loop   0x42a0ac
  42a0a6:	je     0x42a103
  42a0a8:	outs   dx,BYTE PTR ds:[esi]
  42a0a9:	inc    esp
  42a0aa:	je     0x42a10b
  42a0ac:	ror    BYTE PTR [edi-0x642e6edd],1
  42a0b2:	push   edx
  42a0b3:	fwait
  42a0b4:	sar    BYTE PTR [edx-0x28],0x18
  42a0b8:	xchg   esp,eax
  42a0b9:	(bad)  
  42a0ba:	cs out dx,al
  42a0bc:	mov    al,0xf0
  42a0be:	jnp    0x42a06e
  42a0c0:	sub    DWORD PTR [edi+eax*4],eax
  42a0c3:	loop   0x42a0be
  42a0c5:	ja     0x42a0cb
  42a0c7:	sbb    ch,ch
  42a0c9:	(bad)  
  42a0ca:	call   FWORD PTR [ebp-0x32f470a2]
  42a0d0:	xchg   ecx,eax
  42a0d1:	arpl   WORD PTR [esi],dx
  42a0d3:	pop    ebx
  42a0d4:	add    BYTE PTR [eax+0x79e8c9c0],0x43
  42a0db:	lods   eax,DWORD PTR ds:[esi]
  42a0dc:	test   BYTE PTR fs:[eax+0x6802a100],0xb
  42a0e4:	ficom  WORD PTR [edx]
  42a0e6:	cdq    
  42a0e7:	add    eax,0x1bb60a3a
  42a0ec:	mov    eax,ds:0x730b4b1b
  42a0f1:	ret    0xaea2
  42a0f4:	pop    eax
  42a0f5:	push   es
  42a0f6:	jmp    0x2b54a046
  42a0fb:	pop    eax
  42a0fc:	dec    edx
  42a0fd:	push   ebp
  42a0fe:	pop    esi
  42a0ff:	sbb    BYTE PTR [edx+0x98720e6],al
  42a105:	es (bad) 
  42a107:	inc    ebx
  42a108:	bound  ebx,QWORD PTR [eax+0x5e]
  42a10b:	adc    eax,0xefc54614
  42a110:	adc    eax,0x25ebcd46
  42a115:	inc    esi
  42a116:	(bad)
  42a119:	inc    esi
  42a11a:	int    0xdb
  42a11c:	and    ecx,DWORD PTR [eax-0x1b]
  42a11f:	mov    dl,0x15
  42a121:	inc    esi
  42a122:	or     eax,0xedba42f0
  42a127:	add    ebx,DWORD PTR [ebp-0x550ca746]
  42a12d:	(bad)  
  42a12e:	mov    eax,ds:0xe5127ebf
  42a133:	js     0x42a112
  42a135:	add    dh,BYTE PTR [eax-0x71]
  42a138:	mov    esi,0x4a74c116
  42a13d:	(bad)  
  42a13e:	test   eax,0xf612c07e
  42a143:	ret    
  42a144:	add    BYTE PTR [edx+0x4e],bh
  42a147:	call   0x6604:0x25b176d0
  42a14e:	(bad)  
  42a14f:	dec    ebp
  42a150:	add    eax,0x1ee9029c
  42a155:	cwde   
  42a156:	mov    DWORD PTR [edx],ebp
  42a158:	add    BYTE PTR [edx],bl
  42a15a:	add    al,0x0
  42a15c:	fs cli 
  42a15e:	and    DWORD PTR [eax],ebx
  42a160:	sbb    edx,DWORD PTR [esi+0x2a298412]
  42a166:	xor    edi,ebx
  42a168:	aad    0x52
  42a16a:	sbb    cl,BYTE PTR [ebp-0x72f1b553]
  42a170:	popf   
  42a171:	inc    edx
  42a172:	sbb    cl,BYTE PTR [ecx-0x17e60553]
  42a178:	dec    esp
  42a179:	or     eax,0x56c1fafe
  42a17e:	add    eax,0x7256e900
  42a183:	adc    ebp,ecx
  42a185:	sahf   
  42a186:	jmp    0x164f:0xf9a72a42
  42a18d:	int    0xf9
  42a18f:	lods   eax,DWORD PTR ds:[esi]
  42a190:	stos   BYTE PTR es:[edi],al
  42a191:	sahf   
  42a192:	stc    
  42a193:	rol    dl,cl
  42a195:	arpl   WORD PTR [esi-0x45],si
  42a198:	sahf   
  42a199:	add    al,0x55
  42a19b:	xchg   DWORD PTR [esi*8-0x569dae44],ecx
  42a1a2:	rol    DWORD PTR [ecx],0xe9
  42a1a5:	xor    eax,DWORD PTR [edx+0x0]
  42a1a8:	rol    DWORD PTR [eax],1
  42a1aa:	test   eax,0x95e9fafd
  42a1af:	jo     0x42a1b5
  42a1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1b2:	lahf   
  42a1b3:	adc    cl,BYTE PTR [ebp+0x36eaa129]
  42a1b9:	jecxz  0x42a15f
  42a1bb:	stc    
  42a1bc:	pop    ecx
  42a1bd:	stos   BYTE PTR es:[edi],al
  42a1be:	dec    edi
  42a1bf:	test   al,dh
  42a1c1:	imul   edx,DWORD PTR [edi],0x8b1d0009
  42a1c7:	push   eax
  42a1c8:	das    
  42a1c9:	sahf   
  42a1ca:	data16 jnp 0x42a1d5
  42a1cd:	pop    ds
  42a1ce:	outs   dx,BYTE PTR ds:[esi]
  42a1cf:	test   BYTE PTR [ecx-0x1b],al
  42a1d2:	xchg   ebp,eax
  42a1d3:	ss mov eax,0x14e52c00
  42a1d9:	(bad)  
  42a1da:	rol    ebx,cl
  42a1dc:	xor    DWORD PTR [esi+0x3c],edi
  42a1df:	xchg   edi,eax
  42a1e0:	in     eax,0x5f
  42a1e2:	mov    bl,0x90
  42a1e4:	(bad)  
  42a1e5:	out    0x32,eax
  42a1e7:	out    dx,eax
  42a1e8:	clc    
  42a1e9:	inc    edi
  42a1eb:	mov    al,ds:0xa0b7fffe
  42a1f0:	add    al,BYTE PTR [eax]
  42a1f2:	repnz inc ebp
  42a1f4:	dec    esi
  42a1f5:	mov    edx,ebp
  42a1f7:	xchg   BYTE PTR [ebp+0xc],dh
  42a1fa:	add    al,0xb2
  42a1fc:	cmp    DWORD PTR [eax+ebx*4-0x6],0xc07f126e
  42a204:	(bad)  
  42a205:	(bad)  
  42a206:	fmul   DWORD PTR [eax-0x18]
  42a209:	jmp    0x42a1a8
  42a20b:	or     bh,dh
  42a20d:	mov    eax,DWORD PTR [eax]
  42a20f:	cmp    bh,ch
  42a211:	jns    0x42a237
  42a213:	dec    esp
  42a214:	push   es
  42a215:	dec    edi
  42a216:	mov    edx,DWORD PTR [edx-0x3bfffae2]
  42a21c:	add    BYTE PTR [edi+0x5e],dl
  42a21f:	jbe    0x42a223
  42a221:	add    BYTE PTR [ebx+0x55fedcf8],cl
  42a227:	jnp    0x42a2a8
  42a229:	stc    
  42a22a:	lea    ecx,[ebx+0x2]
  42a22d:	or     DWORD PTR [esi],0x41
  42a230:	in     eax,dx
  42a231:	jg     0x42a1be
  42a233:	jnp    0x42a233
  42a235:	mov    eax,DWORD PTR [eax*1-0x708d3031]
  42a23c:	jne    0x42a280
  42a23e:	add    al,0xa6
  42a240:	push   ds
  42a241:	cmc    
  42a242:	sbb    dh,BYTE PTR [edx]
  42a244:	or     esp,ebx
  42a246:	add    dl,BYTE PTR [esi+0x40]
  42a249:	test   al,al
  42a24b:	mov    cl,bh
  42a24d:	cmc    
  42a24e:	dec    edi
  42a24f:	popf   
  42a250:	loope  0x42a2cd
  42a252:	inc    ebx
  42a253:	xchg   ebp,eax
  42a254:	stos   BYTE PTR es:[edi],al
  42a255:	push   ds
  42a256:	(bad)  
  42a257:	jmp    0xa87d:0x5318de91
  42a25e:	pop    ecx
  42a25f:	pop    edi
  42a260:	out    dx,al
  42a261:	(bad)  
  42a262:	push   ecx
  42a263:	push   ss
  42a264:	jnp    0x42a27d
  42a266:	cmp    DWORD PTR [edx],edi
  42a268:	gs or  dl,dh
  42a26b:	fld    DWORD PTR ds:0xebb100fc
  42a271:	mov    al,0xe7
  42a273:	add    BYTE PTR [esi],bl
  42a275:	repz or bl,bh
  42a278:	es sub al,0xa9
  42a27b:	mov    ebp,0x86a9e999
  42a280:	stc    
  42a281:	call   0x2ef6:0xb70252b3
  42a288:	(bad)  
  42a289:	mov    eax,0xe9997596
  42a28e:	inc    BYTE PTR [edi+0x15081448]
  42a294:	mov    cl,0xfa
  42a296:	mov    esi,0xcc0227ff
  42a29b:	test   BYTE PTR [ecx-0x77],0xb0
  42a29f:	dec    esi
  42a2a0:	retf   0xf37e
  42a2a3:	out    0xa2,eax
  42a2a5:	les    ecx,FWORD PTR [eax]
  42a2a7:	sti    
  42a2a8:	es fcmovb st,st(6)
  42a2ab:	out    dx,al
  42a2ac:	sub    DWORD PTR [ecx],esi
  42a2ae:	xlat   BYTE PTR ds:[ebx]
  42a2af:	add    al,0x71
  42a2b1:	test   DWORD PTR [esi-0x50c7b001],edi
  42a2b7:	add    al,0xdf
  42a2b9:	js     0x42a27f
  42a2bb:	jmp    edx
  42a2bd:	sbb    BYTE PTR [edi+0x3ade8a52],ch
  42a2c3:	adc    ebp,ebx
  42a2c5:	jmp    0x2e7e845
  42a2ca:	fiadd  WORD PTR [edx-0x17]
  42a2cd:	pop    ss
  42a2ce:	adc    esp,esi
  42a2d0:	mov    edi,0x67b3e902
  42a2d5:	adc    eax,0x9a00f2f9
  42a2da:	add    al,BYTE PTR [edx-0x2c04656f]
  42a2e0:	arpl   WORD PTR [ebx-0x27c216be],bx
  42a2e6:	sti    
  42a2e7:	out    0x1a,eax
  42a2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2ea:	push   0xffffffe9
  42a2ec:	sbb    DWORD PTR [ebp-0x305249fe],0xfffffffb
  42a2f3:	sti    
  42a2f4:	aaa    
  42a2f5:	xchg   ebx,eax
  42a2f6:	inc    edx
  42a2f7:	jmp    0x8957baaa
  42a2fc:	repnz rol BYTE PTR [edx],cl
  42a2ff:	fwait
  42a300:	jns    0x42a362
  42a302:	sti    
  42a303:	xchg   ecx,eax
  42a304:	stos   BYTE PTR es:[edi],al
  42a305:	aad    0xbf
  42a307:	loopne 0x42a30c
  42a309:	push   eax
  42a30a:	xchg   DWORD PTR [eax*4+0x3e75201],edx
  42a311:	popf   
  42a312:	dec    edi
  42a313:	pop    esi
  42a314:	jmp    0x3ebb31b
  42a319:	outs   dx,DWORD PTR ds:[esi]
  42a31a:	push   ebx
  42a31b:	mov    dh,0x6
  42a31d:	fild   WORD PTR [edx+edi*8+0x3]
  42a321:	adc    al,0x7d
  42a323:	std    
  42a324:	jl     0x42a366
  42a326:	cli    
  42a327:	xchg   ecx,eax
  42a328:	cdq    
  42a329:	mov    eax,0x8dcbfbfb
  42a32e:	inc    edx
  42a32f:	jmp    0x603503b0
  42a334:	mov    BYTE PTR [esi-0x59f92f82],dh
  42a33a:	jle    0x42a338
  42a33c:	add    al,0x0
  42a33e:	popf   
  42a33f:	add    ch,BYTE PTR [eax+eax*4+0x4d]
  42a343:	clc    
  42a344:	push   DWORD PTR [ebp+0x34fb529b]
  42a34a:	xchg   ecx,eax
  42a34b:	lds    eax,FWORD PTR [ecx+ebx*2-0x3205025b]
  42a352:	pushf  
  42a353:	add    al,BYTE PTR [eax]
  42a355:	xchg   esi,eax
  42a356:	ins    DWORD PTR es:[edi],dx
  42a357:	ret    0x2910
  42a35a:	mov    eax,ds:0x9ee9faeb
  42a35f:	add    al,BYTE PTR [edi-0x5082994]
  42a365:	jbe    0x42a3be
  42a367:	int    0xa
  42a369:	add    DWORD PTR [bp+si],0x767e900
  42a370:	xchg   esp,eax
  42a371:	cdq    
  42a372:	pop    edi
  42a373:	cli    
  42a374:	or     DWORD PTR [ebp+0x6d],ebp
  42a377:	add    al,BYTE PTR [eax]
  42a379:	jmp    0xc47b5d6d
  42a37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a37f:	je     0x42a38f
  42a381:	jb     0x42a3d0
  42a383:	idiv   BYTE PTR [eax]
  42a385:	in     eax,0x1c
  42a387:	push   cs
  42a388:	test   BYTE PTR [ebx],ch
  42a38a:	sahf   
  42a38b:	add    al,BYTE PTR [eax]
  42a38d:	test   eax,0x9bf83ee7
  42a392:	nop
  42a393:	push   ebx
  42a394:	call   0xfb3ea197
  42a399:	pusha  
  42a39a:	fucom  st(1)
  42a39c:	ss cs retf 
  42a39f:	test   DWORD PTR [esi+0x29e00e9],esp
  42a3a5:	sti    
  42a3a6:	cmp    al,0x56
  42a3a8:	idiv   edx
  42a3aa:	out    dx,al
  42a3ab:	or     BYTE PTR [edx+0x0],ah
  42a3ae:	in     eax,dx
  42a3af:	sahf   
  42a3b0:	add    bh,bl
  42a3b2:	hlt    
  42a3b3:	rcl    BYTE PTR [edx],cl
  42a3b5:	inc    eax
  42a3b6:	jmp    0xd67995e0
  42a3bb:	nop
  42a3bc:	test   DWORD PTR [ebp+0x58400],eax
  42a3c2:	(bad)  
  42a3c3:	shl    DWORD PTR [edx],0x50
  42a3c6:	push   esi
  42a3c7:	pop    esp
  42a3c8:	push   edx
  42a3c9:	push   cs
  42a3ca:	dec    DWORD PTR [ebx-0x58]
  42a3cd:	cmp    eax,0xff85333b
  42a3d3:	nop
  42a3d4:	mov    DWORD PTR [ecx+0x3cb1045],eax
  42a3da:	xor    BYTE PTR [eax-0x5f8b053d],bl
  42a3e0:	jmp    FWORD PTR [esi]
  42a3e2:	push   DWORD PTR [ecx-0x7b]
  42a3e5:	cmovo  esi,DWORD PTR [edx+ecx*8]
  42a3e9:	add    ebp,DWORD PTR [eax]
  42a3eb:	js     0x42a3b0
  42a3ed:	cli    
  42a3ee:	je     0x42a3e0
  42a3f0:	jns    0x42a3f9
  42a3f2:	push   eax
  42a3f3:	adc    eax,0x3443a6e2
  42a3f8:	jp     0x42a3fa
  42a3fa:	call   0x3b8ac2
  42a3ff:	cmp    DWORD PTR [esi],0xb18f4175
  42a405:	repnz lea eax,[eax]
  42a408:	clc    
  42a409:	outs   dx,DWORD PTR ds:[esi]
  42a40a:	add    al,0x0
  42a40c:	add    al,0x5
  42a40e:	lea    esi,[ebp-0x70]
  42a411:	push   ss
  42a412:	and    dl,BYTE PTR [edi]
  42a414:	mov    bh,bh
  42a416:	add    eax,0x0
  42a419:	fiadd  DWORD PTR [ecx-0x7a8453ab]
  42a41f:	mov    eax,0x8bf6ff99
  42a424:	stc    
  42a425:	or     bh,dh
  42a427:	jne    0x42a3c5
  42a429:	inc    DWORD PTR [eax+edi*8-0x35]
  42a42d:	mov    bh,0xe6
  42a42f:	mov    eax,eax
  42a431:	jae    0x42a42a
  42a433:	mov    ch,0xfc
  42a435:	push   esi
  42a437:	call   FWORD PTR [ebp-0x6506493d]
  42a43d:	leave  
  42a43e:	jp     0x42a400
  42a440:	or     esi,esp
  42a442:	cmp    al,0x45
  42a444:	mov    ch,bl
  42a446:	stos   DWORD PTR es:[edi],eax
  42a447:	out    0x4a,eax
  42a449:	fld    DWORD PTR [ebx+edi*8]
  42a44c:	scas   al,BYTE PTR es:[edi]
  42a44d:	test   al,0x3
  42a44f:	jne    0x42a3d6
  42a451:	mov    eax,ds:0x5a208d2f
  42a456:	add    bh,bl
  42a458:	bound  edi,QWORD PTR [edx]
  42a45a:	add    eax,0xe9894d75
  42a45f:	retf   
  42a460:	lods   al,BYTE PTR ds:[esi]
  42a461:	sub    DWORD PTR [eax*4-0x68616a3],eax
  42a468:	inc    ebx
  42a469:	jno    0x42a46f
  42a46b:	sti    
  42a46c:	add    BYTE PTR [eax+0x74cf0479],dh
  42a472:	ficom  WORD PTR [edx]
  42a474:	or     esp,DWORD PTR [eax]
  42a476:	mov    es,WORD PTR [ebx+edi*8]
  42a479:	and    dl,BYTE PTR [ecx-0x76]
  42a47c:	repz add eax,0x12f9ec6c
  42a482:	je     0x42a43e
  42a484:	cli    
  42a485:	push   0xffffff97
  42a487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a488:	enter  0x96de,0x77
  42a48c:	in     al,dx
  42a48d:	dec    esp
  42a48e:	pushf  
  42a48f:	lods   al,BYTE PTR ds:[esi]
  42a490:	mov    WORD PTR [eax+0x1d],fs
  42a493:	scas   al,BYTE PTR es:[edi]
  42a494:	gs pushf 
  42a496:	xchg   ebx,eax
  42a497:	(bad)  
  42a498:	cli    
  42a499:	push   0xd94575e1
  42a49e:	mov    ecx,0xd94d1503
  42a4a3:	mov    esi,0x8a2a21ff
  42a4a8:	sbb    BYTE PTR ds:0x9d0000e1,dh
  42a4ae:	nop
  42a4af:	jno    0x42a4f6
  42a4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4b2:	add    bh,BYTE PTR [ecx]
  42a4b4:	add    esi,DWORD PTR [eax]
  42a4b6:	push   es
  42a4b7:	ins    BYTE PTR es:[edi],dx
  42a4b8:	jns    0x42a45b
  42a4ba:	jmp    0xdc5e:0x29d04b0
  42a4c1:	jnp    0x42a4c6
  42a4c3:	iretw  
  42a4c5:	xchg   DWORD PTR [ebx+0x730903bd],eax
  42a4cb:	mov    ebx,0x3e6d9dc7
  42a4d0:	xchg   DWORD PTR [eax],eax
  42a4d2:	icebp  
  42a4d3:	or     ch,al
  42a4d5:	ja     0x42a476
  42a4d7:	sbb    DWORD PTR [ebx],0xc
  42a4da:	arpl   WORD PTR [esi+0x32],bp
  42a4dd:	mov    DWORD PTR [ebx+0x6d],esi
  42a4e0:	loop   0x42a518
  42a4e2:	pop    ebp
  42a4e3:	pusha  
  42a4e4:	jo     0x42a4f1
  42a4e6:	inc    edx
  42a4e7:	push   edx
  42a4e8:	cwde   
  42a4e9:	out    dx,eax
  42a4ea:	adc    DWORD PTR [ebx+0x72],eax
  42a4ed:	push   0xffffffba
  42a4ef:	and    al,BYTE PTR ss:[eax+ebp*4]
  42a4f3:	add    ebp,DWORD PTR [esi+0x1c429aee]
  42a4f9:	or     BYTE PTR [edx+eax*1+0x33d876e9],bl
  42a500:	and    BYTE PTR [edx+0x24],ch
  42a503:	push   es
  42a504:	stos   BYTE PTR es:[edi],al
  42a505:	mov    ?,edx
  42a507:	add    BYTE PTR [eax+0x6],0x8f
  42a50b:	and    WORD PTR es:[ebp+0x4e29b404],0xffea
  42a515:	push   esi
  42a516:	out    0xf6,eax
  42a518:	ins    DWORD PTR es:[edi],dx
  42a519:	hlt    
  42a51a:	sbb    eax,esi
  42a51c:	pushf  
  42a51d:	adc    al,0x45
  42a51f:	(bad)  
  42a520:	out    0x3,eax
  42a522:	popf   
  42a523:	dec    edi
  42a524:	fwait
  42a525:	add    dh,BYTE PTR [eax-0x62bc27c2]
  42a52b:	jge    0x42a52c
  42a52d:	sub    BYTE PTR [edi+esi*8],dh
  42a530:	jge    0x42a554
  42a532:	sahf   
  42a533:	push   esp
  42a534:	call   0xfcc6a5f0
  42a539:	cli    
  42a53a:	jb     0x42a517
  42a53c:	(bad)  
  42a53e:	imul   esp,DWORD PTR [esi-0x7],0xb8603259
  42a545:	pop    es
  42a546:	jmp    0x192e2330
  42a54b:	call   0x9ef80ac5
  42a550:	xchg   DWORD PTR [ecx+esi*4-0x37],ecx
  42a554:	pop    esp
  42a555:	add    DWORD PTR [ebx],edx
  42a557:	mov    eax,ds:0x11f174f9
  42a55c:	aas    
  42a55d:	clc    
  42a55e:	cmp    DWORD PTR [esi-0x21068ff1],ebx
  42a564:	add    al,BYTE PTR [ebp+0x521bc5a9]
  42a56a:	adc    edx,DWORD PTR [ebp-0x318abb79]
  42a570:	xchg   DWORD PTR [ecx+eiz*8-0x32],eax
  42a574:	stc    
  42a575:	je     0x42a56c
  42a577:	or     eax,0x8351f86f
  42a57c:	add    al,BYTE PTR [eax]
  42a57e:	jmp    0x6a4182ff
  42a583:	out    0xf8,al
  42a585:	jle    0x42a5c8
  42a587:	mov    ds:0x5400056f,al
  42a58c:	or     dh,BYTE PTR [ebp+ebp*8+0x23]
  42a590:	pop    edi
  42a591:	cld    
  42a592:	jmp    0x313ee4ba
  42a597:	loopne 0x42a596
  42a599:	push   DWORD PTR [ebx+0x52ea1300]
  42a59f:	fs gs push cs
  42a5a2:	push   eax
  42a5a3:	push   cs
  42a5a4:	push   ebp
  42a5a5:	adc    bh,BYTE PTR [edi+0x0]
  42a5a8:	xchg   ebx,eax
  42a5a9:	add    bh,dh
  42a5ab:	jne    0x42a55d
  42a5ad:	addr16 add bh,bh
  42a5b0:	cmp    DWORD PTR [ecx],ecx
  42a5b2:	div    DWORD PTR [esi]
  42a5b4:	ret    
  42a5b5:	or     eax,0xfe74106c
  42a5ba:	div    BYTE PTR [esi]
  42a5bc:	cmp    DWORD PTR [esi+0x1af14405],edi
  42a5c2:	not    DWORD PTR ds:0x400ee8
  42a5c8:	bswap  esp
  42a5ca:	push   ebp
  42a5cb:	pop    ebp
  42a5cc:	ss push cs
  42a5ce:	add    BYTE PTR [ebp-0x1],dl
  42a5d1:	repnz dec edi
  42a5d3:	push   ebx
  42a5d4:	ja     0x42a5ac
  42a5d6:	dec    ecx
  42a5d7:	lea    esi,[ecx-0x71acaefe]
  42a5dd:	cld    
  42a5de:	dec    edx
  42a5df:	push   ebx
  42a5e0:	xchg   edi,eax
  42a5e1:	add    esi,DWORD PTR [ebp+0x8]
  42a5e4:	in     al,dx
  42a5e5:	add    DWORD PTR [eax],eax
  42a5e7:	add    BYTE PTR [esi+ecx*2+0x3c04589],dh
  42a5ee:	adc    eax,0x415468
  42a5f3:	test   DWORD PTR [ebp*2+0x1949ff25],eax
  42a5fa:	div    DWORD PTR [ebp+0x28]
  42a5fd:	add    dh,BYTE PTR [ebp+0x10]
  42a600:	add    BYTE PTR [edi+0x2],dl
  42a603:	jne    0x42a611
  42a605:	arpl   WORD PTR [ebp-0x4],bp
  42a608:	(bad)  
  42a609:	jmp    0xf482b686
  42a60e:	jnp    0x42a5ca
  42a610:	jne    0x42a618
  42a612:	scas   al,BYTE PTR es:[edi]
  42a613:	(bad)  
  42a614:	(bad)  
  42a615:	sub    ebp,esi
  42a617:	cmc    
  42a618:	adc    eax,0x401108
  42a61d:	outs   dx,BYTE PTR ds:[esi]
  42a61e:	mov    edi,0x299dc951
  42a623:	sbb    BYTE PTR [eax],al
  42a625:	push   0xb97ef060
  42a62a:	out    dx,al
  42a62b:	or     DWORD PTR [ebp+eax*8-0xd],0x53
  42a630:	push   edx
  42a631:	es mov dh,0x6a
  42a634:	adc    BYTE PTR [ebp-0x15],bl
  42a637:	mov    DWORD PTR [ecx+ebp*4+0x3a],eax
  42a63b:	xor    eax,0x71d44ed7
  42a640:	or     al,0x24
  42a642:	das    
  42a643:	add    BYTE PTR [edi-0x6e],cl
  42a646:	dec    edi
  42a647:	or     al,0xfb
  42a649:	sar    BYTE PTR [eax+ebx*8+0x4d2f5d84],cl
  42a650:	xchg   eax,esp
  42a652:	lods   eax,DWORD PTR ds:[esi]
  42a653:	cmp    edi,DWORD PTR [edi+0x5c85dee8]
  42a659:	gs xchg ecx,eax
  42a65b:	aas    
  42a65c:	jg     0x42a6bb
  42a65e:	fidivr WORD PTR [ebx]
  42a660:	mov    edi,0x70e6d1d1
  42a665:	add    BYTE PTR [eax-0x1f77007d],ch
  42a66b:	jne    0x42a6a9
  42a66d:	mov    edi,0x4c89c5c9
  42a672:	cmp    DWORD PTR [ebx],ebx
  42a674:	push   esp
  42a675:	sti    
  42a676:	test   al,0xd5
  42a678:	push   ebx
  42a679:	sti    
  42a67a:	mov    al,0xf1
  42a67c:	push   DWORD PTR [edx]
  42a67e:	and    ch,BYTE PTR [edx+eax*4]
  42a681:	mov    edi,0x448bf990
  42a686:	lods   eax,DWORD PTR ds:[esi]
  42a687:	pusha  
  42a688:	dec    edx
  42a689:	hlt    
  42a68a:	adc    al,0xf2
  42a68c:	mov    eax,DWORD PTR [ecx+eax*1+0x73]
  42a690:	inc    edx
  42a691:	clc    
  42a692:	push   es
  42a693:	loop   0x42a694
  42a695:	je     0x42a680
  42a697:	inc    ecx
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	adc    eax,0x2202eb
  42a69e:	scas   al,BYTE PTR es:[edi]
  42a69f:	repz repz ja 0x42a650
  42a6a3:	inc    edx
  42a6a4:	jmp    0xab3d0035
  42a6a9:	pop    esp
  42a6aa:	aam    0xc0
  42a6ac:	hlt    
  42a6ad:	add    edx,DWORD PTR [edx+0x2f]
  42a6b0:	sub    DWORD PTR [ebx+0x4d],edx
  42a6b3:	push   edx
  42a6b4:	cdq    
  42a6b5:	add    BYTE PTR [ecx],ch
  42a6b7:	push   ds
  42a6b8:	rol    DWORD PTR [eax],1
  42a6ba:	outs   dx,DWORD PTR ds:[esi]
  42a6bb:	repz sti 
  42a6bd:	outs   dx,DWORD PTR ds:[esi]
  42a6be:	lea    eax,[edx-0x17]
  42a6c1:	dec    ah
  42a6c3:	xchg   DWORD PTR [eax-0x51e79409],esi
  42a6c9:	inc    BYTE PTR [eax]
  42a6cb:	dec    ebx
  42a6cc:	repz (bad) [edi-0x53]
  42a6d0:	inc    edx
  42a6d1:	jmp    0xa799e25f
  42a6d6:	or     BYTE PTR [ebp-0x140fa1b3],bl
  42a6dc:	out    0x38,al
  42a6de:	push   ebx
  42a6df:	iret   
  42a6e0:	dec    ebx
  42a6e1:	(bad)  
  42a6e2:	fcmovb st,st(2)
  42a6e4:	ss gs inc esp
  42a6e7:	popf   
  42a6e8:	mov    DWORD PTR [ebx],ebp
  42a6ea:	in     al,dx
  42a6eb:	inc    edi
  42a6ec:	or     eax,0x2dd14e5
  42a6f1:	jo     0x42a73c
  42a6f3:	push   ecx
  42a6f4:	aaa    
  42a6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a6f6:	nop    DWORD PTR [ebx-0x18]
  42a6fa:	add    ebx,DWORD PTR [ebp+0x628fb16a]
  42a700:	add    bh,BYTE PTR [ecx-0x9494e02]
  42a706:	inc    ebx
  42a707:	popf   
  42a708:	mov    ebx,0x29dc7a3
  42a70d:	jmp    0x3197bb15
  42a712:	lea    ebx,[ecx-0x3a]
  42a715:	call   FWORD PTR [edi+0x7c]
  42a718:	shl    BYTE PTR [esi],cl
  42a71a:	sub    bl,BYTE PTR [edx-0x6117ba82]
  42a720:	add    cl,BYTE PTR [edi+0x6c]
  42a723:	ins    BYTE PTR es:[edi],dx
  42a724:	mov    esi,0xda6c6450
  42a729:	push   eax
  42a72a:	push   cs
  42a72b:	icebp  
  42a72c:	jge    0x42a6ed
  42a72e:	test   BYTE PTR [eax],0x15
  42a731:	xor    BYTE PTR [ecx],al
  42a733:	jmp    0x9a91ead6
  42a738:	inc    esi
  42a739:	sub    cl,BYTE PTR [ebp+0x14f79ea9]
  42a73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a740:	mov    es,WORD PTR [edx+0x0]
  42a743:	jb     0x42a6db
  42a745:	jnp    0x42a7c3
  42a747:	leave  
  42a748:	xlat   BYTE PTR ds:[ebx]
  42a749:	stc    
  42a74a:	or     ah,BYTE PTR [ebp-0x62]
  42a74d:	add    eax,DWORD PTR [eax]
  42a74f:	jmp    0x7957953f
  42a754:	mov    es,WORD PTR [edx+0x0]
  42a757:	pusha  
  42a758:	in     eax,0xea
  42a75a:	ss stos BYTE PTR es:[edi],al
  42a75c:	fwait
  42a75d:	xchg   dl,ah
  42a75f:	jmp    0x29aaaa02
  42a764:	and    edx,esi
  42a766:	cli    
  42a767:	cmp    ch,dh
  42a769:	push   0x6da100fe
  42a76e:	add    cl,ch
  42a770:	out    dx,eax
  42a771:	in     eax,dx
  42a772:	adc    al,0x75
  42a774:	pop    DWORD PTR [edx+0x0]
  42a777:	pusha  
  42a778:	in     eax,0xf6
  42a77a:	ss stos BYTE PTR es:[edi],al
  42a77c:	mov    dl,0x22
  42a77e:	lea    esi,[esi+ebp*8-0x4aa1afae]
  42a785:	xchg   BYTE PTR [ebx],dl
  42a787:	test   eax,0xd5bf879e
  42a78c:	cwde   
  42a78d:	jg     0x42a7d3
  42a78f:	add    al,cl
  42a791:	push   ebp
  42a792:	not    DWORD PTR ds:0x400b9c00
  42a798:	add    BYTE PTR [ecx+0x7d0373c5],al
  42a79e:	(bad)  
  42a79f:	hlt    
  42a7a0:	mov    eax,ecx
  42a7a2:	int    0xa
  42a7a4:	inc    eax
  42a7a5:	les    ebx,FWORD PTR [ebx+0x8]
  42a7a8:	push   edi
  42a7a9:	stos   DWORD PTR es:[edi],eax
  42a7aa:	xlat   BYTE PTR ds:[ebx]
  42a7ab:	or     dl,BYTE PTR fs:[ebx]
  42a7ae:	jg     0x42a7f3
  42a7b0:	lock fwait
  42a7b2:	xlat   BYTE PTR ds:[ebx]
  42a7b3:	dec    edx
  42a7b4:	push   DWORD PTR [ecx]
  42a7b6:	cmc    
  42a7b7:	xchg   DWORD PTR [ebp-0x60],eax
  42a7ba:	pop    eax
  42a7bb:	not    DWORD PTR ds:0x401570
  42a7c1:	sub    eax,0x473bec49
  42a7c6:	push   0x72
  42a7c8:	mov    esi,DWORD PTR [ecx+0x74400ae6]
  42a7ce:	push   ebp
  42a7cf:	div    DWORD PTR [ebp+0x5c]
  42a7d2:	out    dx,eax
  42a7d3:	ror    BYTE PTR [ecx-0x3cce1d3f],1
  42a7d9:	mov    al,0x50
  42a7db:	push   0x3ac17420
  42a7e0:	push   ebx
  42a7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e2:	push   edi
  42a7e3:	div    DWORD PTR [ebp+0x20]
  42a7e6:	out    dx,eax
  42a7e7:	jae    0x42a7d9
  42a7e9:	xchg   edi,eax
  42a7ea:	push   ebx
  42a7eb:	div    DWORD PTR [ebp+0x2c]
  42a7ee:	out    dx,eax
  42a7ef:	adc    edi,DWORD PTR [eax-0x7affba9c]
  42a7f5:	add    al,0x6a
  42a7f7:	cmp    DWORD PTR [ecx],edi
  42a7f9:	add    BYTE PTR [ecx-0x40df9116],cl
  42a7ff:	inc    ecx
  42a800:	int3   
  42a801:	sub    ebp,ecx
  42a803:	mov    eax,0xefd44581
  42a808:	jae    0x42a7fe
  42a80a:	popf   
  42a80b:	call   0xa6f96f56
  42a810:	mov    dh,0xa
  42a812:	push   ebp
  42a813:	sbb    al,0x54
  42a815:	push   ecx
  42a816:	cli    
  42a817:	mov    ch,0xf6
  42a819:	cli    
  42a81a:	mov    BYTE PTR [ebx+0x18],bl
  42a81d:	inc    eax
  42a81e:	popf   
  42a81f:	and    BYTE PTR [ebx+0x8],dh
  42a822:	adc    BYTE PTR [esi-0xaf052e],ah
  42a828:	jmp    0x42a7fd
  42a82a:	enter  0xfd17,0x86
  42a82e:	dec    eax
  42a82f:	sti    
  42a830:	xchg   BYTE PTR [ebp+esi*4+0x7],al
  42a834:	jae    0x42a812
  42a836:	mov    edx,0xcbfaf775
  42a83b:	div    DWORD PTR [ecx-0x14]
  42a83e:	stos   BYTE PTR es:[edi],al
  42a83f:	aad    0xe2
  42a841:	minps  xmm3,xmm3
  42a844:	sti    
  42a845:	je     0x42a7dc
  42a847:	rcl    DWORD PTR [ecx],1
  42a849:	aam    0xad
  42a84b:	sbb    DWORD PTR [ebx+edx*2],eax
  42a84e:	mov    dh,bh
  42a850:	ror    BYTE PTR [edi],cl
  42a852:	fstp   st(1)
  42a854:	xor    eax,0x2436515d
  42a859:	push   0x3f65d5
  42a85e:	add    BYTE PTR [edx+0x37],ch
  42a861:	fdivr  st,st(2)
  42a863:	mov    BYTE PTR [ebp+0x11],ah
  42a866:	inc    eax
  42a867:	popf   
  42a868:	in     al,0xbf
  42a86a:	jae    0x42a804
  42a86c:	cwde   
  42a86d:	jno    0x42a847
  42a86f:	dec    edx
  42a870:	stos   BYTE PTR es:[edi],al
  42a871:	sti    
  42a872:	je     0x42a8dd
  42a874:	mov    DWORD PTR [ecx],edx
  42a876:	pop    esp
  42a877:	(bad)  
  42a878:	sbb    DWORD PTR [edi+eax*4],eax
  42a87b:	fadd   DWORD PTR [ecx-0x5d39a5a5]
  42a881:	rol    BYTE PTR [ebx],0x9d
  42a884:	add    bh,BYTE PTR [ebp+edx*2+0x27d4ef6e]
  42a88b:	lods   eax,DWORD PTR ds:[esi]
  42a88c:	out    dx,eax
  42a88d:	sti    
  42a88e:	sbb    DWORD PTR [eax+0xa88e942],0xffffffae
  42a895:	push   eax
  42a896:	add    BYTE PTR [ebp+0x74fefe02],bl
  42a89c:	xor    al,0x73
  42a89e:	arpl   ax,sp
  42a8a0:	inc    ebx
  42a8a1:	jmp    0x15588efb
  42a8a6:	adc    DWORD PTR [ebp+0x2],ebx
  42a8a9:	sbb    dh,BYTE PTR [esi]
  42a8ab:	imul   eax,ebp,0x63b503a5
  42a8b1:	idiv   ch
  42a8b3:	mov    DWORD PTR [ebx+0x43e057cb],0xc28203e9
  42a8bd:	call   0x40:0x244f0a65
  42a8c4:	popf   
  42a8c5:	out    dx,eax
  42a8c6:	sti    
  42a8c7:	repz test al,0x42
  42a8ca:	jmp    0xe944e5bb
  42a8cf:	add    ebx,edx
  42a8d1:	pop    edx
  42a8d2:	dec    ecx
  42a8d3:	rol    ebx,0x2
  42a8d6:	ret    0x8911
  42a8d9:	adc    al,0x29
  42a8db:	add    al,0xa6
  42a8dd:	mov    bh,0xd3
  42a8df:	push   edi
  42a8e0:	pusha  
  42a8e1:	inc    ebx
  42a8e2:	jmp    0x3cf2eeed
  42a8e7:	rcr    DWORD PTR [ebx-0x332721fe],0x3b
  42a8ee:	push   eax
  42a8ef:	aam    0x9f
  42a8f1:	add    ch,cl
  42a8f3:	jmp    0x42a8d9
  42a8f5:	adc    al,0x83
  42a8f7:	sti    
  42a8f8:	push   ds
  42a8f9:	ret    0x69f4
  42a8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8fd:	mov    bh,0xff
  42a8ff:	jecxz  0x42a8d3
  42a901:	lds    edi,FWORD PTR [esi]
  42a903:	jmp    0x2e696f1b
  42a908:	retf   0x8cba
  42a90b:	cmc    
  42a90c:	sahf   
  42a90d:	mov    eax,ds:0x2622c53
  42a912:	dec    esi
  42a913:	pop    esp
  42a914:	xchg   ebp,eax
  42a915:	cmp    dl,BYTE PTR [ecx-0x67]
  42a918:	push   es
  42a919:	aaa    
  42a91a:	(bad)  
  42a91c:	imul   bh
  42a91e:	adc    ebx,DWORD PTR [ebp+0x5c002fdd]
  42a924:	popf   
  42a925:	sub    edx,DWORD PTR [eax+0x26]
  42a928:	add    BYTE PTR [ebp+0x26],cl
  42a92b:	sbb    BYTE PTR [ebx+0x170f22c6],bh
  42a931:	(bad)  
  42a932:	pusha  
  42a933:	mov    DWORD PTR [edx+ebp*2-0x3416c13b],edi
  42a93a:	xor    DWORD PTR [ebp+0x14da93ed],ecx
  42a940:	(bad)  [ebx+ebp*8+0x252d2983]
  42a947:	xchg   esp,esi
  42a949:	jmp    0x3b02:0x25e93ec7
  42a950:	cmp    DWORD PTR [esi+0x5c2d04b1],edx
  42a956:	sub    eax,0x270ac600
  42a95b:	sbb    BYTE PTR [edx+esi*2+0x43],ch
  42a95f:	push   eax
  42a960:	shl    DWORD PTR [ecx+0x0],0xfa
  42a964:	scas   al,BYTE PTR es:[edi]
  42a965:	cld    
  42a966:	jnp    0x42a984
  42a968:	inc    ebp
  42a969:	pop    esp
  42a96a:	sub    eax,0xc7b91100
  42a96f:	ds jmp 0xfc32c0bc
  42a975:	fiadd  WORD PTR [edx]
  42a977:	push   edi
  42a978:	add    BYTE PTR [ebx+0x38c25d48],al
  42a97e:	add    cl,BYTE PTR [esi-0x42]
  42a981:	xchg   esp,eax
  42a982:	ret    
  42a983:	cmp    DWORD PTR [eax],eax
  42a985:	mov    ch,cl
  42a987:	adc    ebp,esp
  42a989:	push   ss
  42a98a:	inc    edx
  42a98b:	add    BYTE PTR [edx+0x0],ch
  42a98e:	or     BYTE PTR [edx-0x9],cl
  42a991:	xor    eax,0x39c2a0
  42a996:	fisub  DWORD PTR [edx+edx*2-0x17fdb83b]
  42a99d:	jnp    0x42a975
  42a99f:	jmp    0x42a996
  42a9a1:	xor    esi,DWORD PTR [esi+ebp*1+0x5dfc2444]
  42a9a8:	or     eax,0x80e38ff
  42a9ad:	push   eax
  42a9ae:	inc    edi
  42a9af:	mov    ecx,0x459ce8f5
  42a9b4:	idiv   bh
  42a9b6:	or     ah,BYTE PTR [ebp+0x207c426]
  42a9bc:	not    DWORD PTR ds:0x4016b4
  42a9c2:	adc    cl,al
  42a9c4:	(bad)  
  42a9c5:	dec    DWORD PTR [ecx]
  42a9c7:	jge    0x42a9af
  42a9c9:	sub    DWORD PTR [eax-0x12],0x7f
  42a9cd:	in     al,dx
  42a9ce:	call   0xc742a9da
  42a9d3:	push   eax
  42a9d4:	dec    edi
  42a9d5:	mov    edx,ecx
  42a9d7:	inc    BYTE PTR [edi+edi*8+0x1366d73]
  42a9de:	test   BYTE PTR [ecx],al
  42a9e0:	call   0xf62b3ed4
  42a9e5:	test   BYTE PTR [ebx+edi*8],dh
  42a9e8:	xor    DWORD PTR [edx],0x45
  42a9eb:	add    DWORD PTR [eax],eax
  42a9ed:	mov    edi,DWORD PTR [ebx+0x2]
  42a9f0:	cmp    eax,0xd99d0001
  42a9f5:	(bad)  
  42a9f6:	call   DWORD PTR [edx+0x3affb566]
  42a9fc:	(bad)  [esi+0x60]
  42a9ff:	pop    eax
  42aa00:	sbb    BYTE PTR [ebx+edi*8],al
  42aa03:	nop
  42aa04:	xchg   DWORD PTR [ecx],edx
  42aa06:	inc    eax
  42aa07:	popf   
  42aa08:	add    eax,0x1e753c85
  42aa0d:	inc    ebp
  42aa0e:	add    BYTE PTR [ebp-0x62737f24],bl
  42aa14:	(bad)  
  42aa16:	mov    bh,0x2
  42aa18:	cmp    al,0x4
  42aa1a:	add    BYTE PTR [ebx-0x27a80626],al
  42aa20:	xchg   edi,eax
  42aa21:	dec    BYTE PTR [ecx+esi*2+0x6b81fff]
  42aa28:	(bad)  
  42aa2a:	inc    ebp
  42aa2c:	shl    BYTE PTR [ebp-0x5],cl
  42aa2f:	shr    BYTE PTR [edi-0x42],cl
  42aa32:	dec    edi
  42aa33:	mov    ch,0x43
  42aa35:	clc    
  42aa36:	cli    
  42aa37:	ret    0x4061
  42aa3a:	and    al,0xa9
  42aa3c:	pop    esi
  42aa3d:	les    esi,FWORD PTR [ebx+0x3e]
  42aa40:	pop    esi
  42aa41:	jo     0x42aa67
  42aa43:	imul   esi,DWORD PTR [ebx],0xdaa2ff97
  42aa49:	out    0x5,al
  42aa4b:	add    al,0xe5
  42aa4d:	test   DWORD PTR [ecx+ecx*1+0x27b81406],0xfffeda
  42aa58:	jne    0x42aa18
  42aa5a:	data16 sti 
  42aa5c:	jp     0x42aad9
  42aa5e:	and    al,ah
  42aa60:	fcompp 
  42aa62:	jns    0x42aa23
  42aa64:	icebp  
  42aa65:	xlat   BYTE PTR ds:[ebx]
  42aa66:	mov    ebp,edi
  42aa68:	(bad)  
  42aa69:	xlat   BYTE PTR ds:[ebx]
  42aa6a:	add    cl,BYTE PTR [edi]
  42aa6c:	fld    QWORD PTR [edx]
  42aa6e:	jmp    0x757900c6
  42aa73:	mov    bl,0x8b
  42aa75:	add    ah,BYTE PTR [edi+edi*1+0x79]
  42aa79:	inc    esi
  42aa7a:	xor    edx,DWORD PTR [edx+esi*8+0x6]
  42aa7e:	call   0x3cc04786
  42aa83:	pop    ds
  42aa84:	adc    eax,0x3503e902
  42aa89:	jae    0x42aa9f
  42aa8b:	cli    
  42aa8c:	pop    ss
  42aa8d:	js     0x42aa6b
  42aa8f:	pop    ds
  42aa90:	mov    cl,0x7f
  42aa92:	and    al,0x13
  42aa94:	and    al,ah
  42aa96:	mov    eax,0x4a6fb3eb
  42aa9b:	clc    
  42aa9c:	and    eax,DWORD PTR ds:0xfa62f89b
  42aaa2:	ins    DWORD PTR es:[edi],dx
  42aaa3:	jbe    0x42aa3a
  42aaa5:	pop    edx
  42aaa6:	leave  
  42aaa7:	mov    esi,0xe2a02a3
  42aaac:	int    0x10
  42aaae:	test   eax,0xdc71ba03
  42aab3:	add    ebx,DWORD PTR [edx+eax*1+0x7f3b6ee9]
  42aaba:	mov    DWORD PTR [ebx],ecx
  42aabc:	add    BYTE PTR [edx+0x5e868d76],dl
  42aac2:	adc    DWORD PTR es:[ebx-0x5a],0x5d0f7915
  42aaca:	add    ah,BYTE PTR [ebx+eax*8+0xe]
  42aace:	push   esi
  42aacf:	dec    edi
  42aad0:	add    al,0xfb
  42aad2:	stc    
  42aad3:	imul   eax,DWORD PTR [eax-0x3f],0xa
  42aad7:	cmp    DWORD PTR [ecx+0x465261e],ecx
  42aadd:	popf   
  42aade:	add    bl,BYTE PTR [ecx]
  42aae0:	pop    es
  42aae1:	ss inc ebx
  42aae3:	jmp    0x42ab05
  42aae5:	data16 add al,BYTE PTR [eax]
  42aae8:	jmp    0x373dfd8b
  42aaed:	test   eax,0xad2514e7
  42aaf2:	inc    edx
  42aaf3:	add    BYTE PTR [ecx+eiz*2+0x69],ah
  42aaf7:	sub    eax,0x7502416a
  42aafc:	fcomp  QWORD PTR [edi]
  42aafe:	push   0xf9adf108
  42ab03:	rcl    DWORD PTR [di],0x2b
  42ab07:	add    BYTE PTR [edx+0x7086793],al
  42ab0d:	push   ds
  42ab0e:	addr16 and al,0xf9
  42ab11:	mov    esi,0xd81a115c
  42ab16:	pusha  
  42ab17:	mov    DWORD PTR [ebp-0x5a72ed3e],esp
  42ab1d:	call   0xed86:0x515012
  42ab24:	cli    
  42ab25:	ds pop edx
  42ab27:	out    0x14,eax
  42ab29:	cmp    DWORD PTR [ebp+0x708e0042],ecx
  42ab2f:	push   ebx
  42ab30:	xchg   DWORD PTR [esp+esi*2],ecx
  42ab33:	lods   al,BYTE PTR ds:[esi]
  42ab34:	add    ebp,ecx
  42ab36:	ins    DWORD PTR es:[edi],dx
  42ab37:	sub    ebx,0xffffffbf
  42ab3a:	pop    ss
  42ab3b:	jbe    0x42ab45
  42ab3d:	mov    dh,0x68
  42ab3f:	out    0x14,eax
  42ab41:	add    eax,0x7200428d
  42ab46:	test   eax,0xb6e17c79
  42ab4b:	jbe    0x42ab67
  42ab4d:	out    dx,eax
  42ab4e:	xchg   ebx,eax
  42ab4f:	xchg   BYTE PTR [edi-0x3d7e6da4],bh
  42ab55:	rcl    BYTE PTR ds:0x1de9faea,1
  42ab5b:	in     eax,dx
  42ab5c:	or     ah,BYTE PTR [ebp+0x1c]
  42ab5f:	jmp    0x1f8:0x858400fa
  42ab66:	mov    al,0xfc
  42ab68:	jp     0x42ab68
  42ab6a:	jns    0x42abc6
  42ab6c:	add    eax,0x73e90a83
  42ab71:	jae    0x42ab0a
  42ab73:	cmp    edi,esi
  42ab75:	adc    eax,0x400f04
  42ab7a:	mov    edi,0x90db83cd
  42ab7f:	bound  eax,QWORD PTR [ebx+0x1d726cc6]
  42ab85:	add    DWORD PTR [eax],0xc
  42ab88:	call   0xddf9b4fb
  42ab8d:	add    BYTE PTR [ebp-0x14],dh
  42ab90:	jl     0x42ab83
  42ab92:	jmp    0x42aba7
  42ab94:	push   ebp
  42ab95:	bound  eax,QWORD PTR [ecx]
  42ab97:	ja     0x42ab56
  42ab99:	cmc    
  42ab9a:	call   0x38e89b
  42ab9f:	jg     0x42ab8e
  42aba1:	loope  0x42abab
  42aba3:	pop    ss
  42aba4:	pop    esp
  42aba5:	add    bl,ch
  42aba7:	pop    ebx
  42aba8:	jl     0x42ac25
  42abaa:	or     BYTE PTR [ecx-0x10],dh
  42abad:	outs   dx,BYTE PTR ds:[esi]
  42abae:	sub    eax,0x43c5654a
  42abb3:	les    esi,FWORD PTR [edi]
  42abb5:	not    DWORD PTR ds:0x401398
  42abbb:	sbb    al,0x32
  42abbd:	lea    eax,[eax-0x3c]
  42abc0:	(bad)  
  42abc2:	cld    
  42abc3:	fwait
  42abc4:	lock dec ebp
  42abc6:	call   0x389d37
  42abcb:	add    dh,cl
  42abcd:	adc    esi,eax
  42abcf:	jbe    0x42ac16
  42abd1:	add    BYTE PTR [ebx],bh
  42abd3:	jg     0x42ac47
  42abd5:	(bad)  
  42abd6:	push   esi
  42abd7:	ins    BYTE PTR es:[edi],dx
  42abd8:	cmp    eax,0xd09dfe10
  42abdd:	hlt    
  42abde:	je     0x42ab85
  42abe0:	mov    eax,0x1b8cd40a
  42abe5:	add    al,0x57
  42abe7:	push   ss
  42abe8:	push   ds
  42abe9:	or     al,0x5b
  42abeb:	add    bl,al
  42abed:	push   cs
  42abee:	mov    esi,0x3a649d03
  42abf3:	add    al,0x18
  42abf5:	fwait
  42abf6:	outs   dx,DWORD PTR ds:[esi]
  42abf7:	pop    es
  42abf8:	in     eax,dx
  42abf9:	mov    BYTE PTR [edx],cl
  42abfb:	hlt    
  42abfc:	lods   eax,DWORD PTR ds:[esi]
  42abfd:	sbb    eax,DWORD PTR [edi+edi*2]
  42ac00:	ret    
  42ac01:	(bad)  
  42ac03:	xchg   BYTE PTR [ebx-0x688c3baa],bl
  42ac09:	or     esi,ebp
  42ac0b:	adc    al,0xfd
  42ac0d:	int3   
  42ac0e:	add    BYTE PTR ds:[esi],bl
  42ac11:	sar    esi,0xbe
  42ac14:	test   ebx,ebp
  42ac16:	(bad)  
  42ac17:	call   FWORD PTR [ebp+0x5e4f96d3]
  42ac1d:	(bad)  
  42ac1f:	mov    cl,0x3a
  42ac21:	(bad)  
  42ac23:	cs bnd jno 0x42ac9a
  42ac27:	loopne 0x42ac3d
  42ac29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac2a:	shl    BYTE PTR [ebp-0x61],cl
  42ac2d:	mov    BYTE PTR [ebx-0x73],cl
  42ac30:	pusha  
  42ac31:	cmp    edx,DWORD PTR [ebx+edi*8+0x48]
  42ac35:	out    dx,eax
  42ac36:	repz xor al,0xc9
  42ac39:	dec    esp
  42ac3a:	inc    ecx
  42ac3b:	add    BYTE PTR [edi],dh
  42ac3d:	adc    BYTE PTR [ecx+0x3eed0134],cl
  42ac43:	add    BYTE PTR [edx+0x30bf7b08],dh
  42ac49:	loopne 0x42ac7b
  42ac4b:	shl    BYTE PTR [esp+eax*1-0x62fffffc],0x83
  42ac53:	add    BYTE PTR [ebx-0x16],dl
  42ac56:	add    dh,BYTE PTR [esi+edi*1+0x69]
  42ac5a:	push   ebx
  42ac5b:	fisubr DWORD PTR [esi-0x6f]
  42ac5e:	out    0x1b,eax
  42ac60:	add    al,0x4a
  42ac62:	inc    esp
  42ac63:	jmp    0x9b2b22d1
  42ac68:	jle    0x42ac94
  42ac6a:	outs   dx,DWORD PTR ds:[esi]
  42ac6b:	leave  
  42ac6c:	imul   ebp,DWORD PTR [ecx-0x3cfc1706],0xfffffffa
  42ac73:	test   eax,0x259c3d2e
  42ac78:	add    al,0x46
  42ac7a:	push   cs
  42ac7b:	in     eax,0x10
  42ac7d:	fld    QWORD PTR [edx]
  42ac7f:	pop    esi
  42ac80:	(bad)  ds:0x5638b146
  42ac86:	outs   dx,DWORD PTR ds:[esi]
  42ac87:	lods   eax,DWORD PTR ds:[esi]
  42ac88:	imul   ebx,DWORD PTR [edx+ebp*4+0x29d0379],0xe8557281
  42ac93:	imul   ecx,DWORD PTR [ebx+0xc18a913],0x7870029d
  42ac9d:	cdq    
  42ac9e:	mov    edi,0x29807a5
  42aca3:	jmp    0xd986ccab
  42aca8:	push   ebx
  42aca9:	cmc    
  42acaa:	push   edi
  42acab:	jg     0x42aca2
  42acad:	out    0x7b,eax
  42acaf:	stos   DWORD PTR es:[edi],eax
  42acb0:	jecxz  0x42acd7
  42acb2:	inc    esp
  42acb3:	in     eax,dx
  42acb4:	mov    BYTE PTR [eax],al
  42acb6:	pop    ecx
  42acb7:	(bad)  
  42acb8:	outs   dx,DWORD PTR ds:[esi]
  42acb9:	inc    eax
  42acba:	pop    ebp
  42acbb:	jne    0x42ad10
  42acbd:	loope  0x42ac85
  42acbf:	out    0x11,eax
  42acc1:	jmp    0x42ac47
  42acc3:	dec    ebp
  42acc4:	or     dh,ah
  42acc6:	(bad)  
  42acc7:	fidiv  DWORD PTR [ecx]
  42acc9:	dec    ebp
  42acca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42accb:	out    0x3f,eax
  42accd:	in     eax,0x9d
  42accf:	add    al,BYTE PTR [eax]
  42acd1:	jmp    0xea046dfb
  42acd6:	sahf   
  42acd7:	inc    edx
  42acd8:	dec    ecx
  42acd9:	pop    esp
  42acda:	js     0x42aca0
  42acdc:	test   BYTE PTR [ecx-0x12051371],bh
  42ace2:	sahf   
  42ace3:	add    al,BYTE PTR [eax]
  42ace5:	bound  edx,QWORD PTR [esi-0x80]
  42ace8:	out    dx,al
  42ace9:	je     0x42acff
  42aceb:	mov    bh,0xf9
  42aced:	mov    esi,0x3fb4df6e
  42acf2:	dec    esi
  42acf3:	in     al,dx
  42acf4:	shl    DWORD PTR [esi+ebx*4],0x1
  42acf8:	jg     0x42ad06
  42acfa:	dec    ebp
  42acfb:	out    0x85,eax
  42acfd:	adc    al,0x41
  42acff:	in     al,dx
  42ad00:	jno    0x42ace3
  42ad02:	fadd   DWORD PTR [edx]
  42ad04:	sti    
  42ad05:	pop    ss
  42ad06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad07:	jmp    0x42ad1d
  42ad09:	mov    ebp,0x6a004284
  42ad0e:	push   ebp
  42ad0f:	sti    
  42ad10:	push   edx
  42ad11:	sbb    cl,BYTE PTR [esi]
  42ad13:	jno    0x42ad19
  42ad15:	outs   dx,BYTE PTR ds:[esi]
  42ad16:	mov    ah,0x32
  42ad18:	adc    ch,BYTE PTR [ecx-0x3b986200]
  42ad1e:	in     eax,dx
  42ad1f:	sbb    esi,DWORD PTR [esi]
  42ad21:	cld    
  42ad22:	push   esi
  42ad23:	(bad)  
  42ad25:	sub    DWORD PTR cs:[ecx-0x59],ebx
  42ad29:	xchg   ah,cl
  42ad2b:	mov    al,0x44
  42ad2e:	out    dx,al
  42ad2f:	sahf   
  42ad30:	addr16 dec ebp
  42ad32:	xor    eax,0x115c7fce
  42ad37:	push   0xffffffda
  42ad39:	jmp    0x9fa4:0x85ebccf7
  42ad40:	fcmovbe st,st(3)
  42ad42:	push   edi
  42ad43:	mov    eax,ds:0x9ee1be02
  42ad48:	dec    ebp
  42ad49:	xchg   DWORD PTR [eax],eax
  42ad4b:	nop
  42ad4c:	jge    0x42ad34
  42ad4e:	mov    BYTE PTR [ecx+0x3b560002],bh
  42ad54:	cmp    DWORD PTR [ebx-0xa0e7188],0xffffffe8
  42ad5b:	xchg   esp,eax
  42ad5c:	adc    esi,esi
  42ad5e:	dec    DWORD PTR [edi]
  42ad60:	stos   DWORD PTR es:[edi],eax
  42ad61:	xchg   edx,eax
  42ad62:	cli    
  42ad63:	push   ebx
  42ad64:	icebp  
  42ad65:	bound  ecx,QWORD PTR [eax-0x74fffd87]
  42ad6b:	cmp    ecx,DWORD PTR [eax+0x0]
  42ad6e:	push   eax
  42ad6f:	and    ecx,DWORD PTR [ebx]
  42ad71:	xor    al,0x16
  42ad73:	test   dh,bh
  42ad75:	jp     0x42ad3b
  42ad77:	jo     0x42adf4
  42ad79:	shl    DWORD PTR [esi+esi*1+0x67],1
  42ad7d:	sub    dh,BYTE PTR [ebx]
  42ad7f:	add    ah,dh
  42ad81:	jp     0x42ad73
  42ad83:	pop    edi
  42ad84:	inc    ebx
  42ad85:	mov    ?,WORD PTR [edx+0x62bcfd5e]
  42ad8b:	and    al,0x35
  42ad8d:	add    al,BYTE PTR [eax]
  42ad8f:	push   0x3b51ac
  42ad94:	sbb    al,0x39
  42ad96:	mov    dh,0x0
  42ad98:	add    al,0x2d
  42ad9a:	ror    DWORD PTR [ecx+0x458be1e1],cl
  42ada0:	enter  0xf751,0x15
  42ada4:	cmovo  eax,DWORD PTR fs:[eax]
  42ada8:	xor    al,0xf1
  42adaa:	adc    ecx,DWORD PTR [edi+eax*8+0x41]
  42adae:	add    BYTE PTR [ecx-0x3cce49c7],cl
  42adb4:	ret    
  42adb5:	jge    0x42adc1
  42adb7:	add    esp,eax
  42adb9:	add    DWORD PTR [ecx],edi
  42adbb:	pop    ebp
  42adbc:	mov    BYTE PTR [ebx+0x3d],dh
  42adbf:	mov    edi,ecx
  42adc1:	mov    ch,0x81
  42adc3:	xor    al,0x9d
  42adc5:	jae    0x42ad4f
  42adc7:	icebp  
  42adc8:	sub    ebx,eax
  42adca:	pop    esp
  42adcb:	inc    BYTE PTR [edx-0x65]
  42adce:	jg     0x42ae0f
  42add0:	popf   
  42add1:	(bad)  
  42add2:	in     eax,dx
  42add3:	adc    al,0xd
  42add5:	leave  
  42add6:	add    BYTE PTR ds:[eax],bl
  42add9:	sbb    edi,DWORD PTR [eax+0x12]
  42addc:	sbb    BYTE PTR ds:0xc4008d08,ah
  42ade2:	(bad)  [eax]
  42ade4:	add    dh,ch
  42ade6:	int    0xf0
  42ade8:	test   BYTE PTR [ebp+0x4e],bl
  42adeb:	or     DWORD PTR [edi-0x407d5c20],eax
  42adf1:	call   0xf879f1e9
  42adf6:	xchg   DWORD PTR [edi-0x38],ebp
  42adf9:	inc    esi
  42adfa:	fdiv   DWORD PTR [ebp+0x44]
  42adfd:	cmp    eax,0x42dc729c
  42ae02:	out    dx,al
  42ae03:	xchg   BYTE PTR ds:0x7c83dbdd,cl
  42ae09:	cmp    eax,0xe683ffdb
  42ae0e:	(bad)  
  42ae10:	call   FWORD PTR [esi]
  42ae12:	out    0xde,al
  42ae14:	cli    
  42ae15:	stos   BYTE PTR es:[edi],al
  42ae16:	push   edi
  42ae17:	scas   eax,DWORD PTR es:[edi]
  42ae18:	call   DWORD PTR [edx]
  42ae1a:	(bad)  [eax-0x1246501]
  42ae20:	push   ecx
  42ae21:	cmc    
  42ae22:	push   eax
  42ae23:	sti    
  42ae24:	stc    
  42ae25:	cli    
  42ae26:	pop    edi
  42ae27:	in     al,dx
  42ae28:	mov    BYTE PTR [eax+0x33],dh
  42ae2b:	cmp    edx,0xffffff9a
  42ae2e:	push   edi
  42ae2f:	xchg   edi,edi
  42ae31:	loop   0x42ae0d
  42ae33:	pop    eax
  42ae34:	popfw  
  42ae36:	sar    esi,0x65
  42ae39:	cdq    
  42ae3a:	nop
  42ae3b:	push   ebx
  42ae3c:	sti    
  42ae3d:	push   eax
  42ae3e:	add    cl,BYTE PTR [ecx]
  42ae40:	icebp  
  42ae41:	test   eax,0x9d43f782
  42ae46:	jnp    0x42adf3
  42ae48:	iret   
  42ae49:	add    BYTE PTR [ecx],bl
  42ae4b:	ret    0x4594
  42ae4e:	sub    bl,BYTE PTR [edi+0x5]
  42ae51:	add    al,0x4f
  42ae53:	push   edx
  42ae54:	xchg   edx,eax
  42ae55:	lock mov cl,0x32
  42ae58:	fild   DWORD PTR [ebx-0x63]
  42ae5b:	jg     0x42ae81
  42ae5d:	add    BYTE PTR [esi+eax*4],dl
  42ae60:	mov    ah,0xf1
  42ae62:	xchg   esp,esp
  42ae64:	ins    DWORD PTR es:[edi],dx
  42ae65:	fldenv [ebx]
  42ae67:	mov    ah,0x63
  42ae69:	xchg   BYTE PTR [esi-0x1b],ah
  42ae6c:	leave  
  42ae6d:	lock sub BYTE PTR ds:0x8067f13b,0x2b
  42ae75:	lock push edi
  42ae77:	fsub   st,st(2)
  42ae79:	xor    al,0x5d
  42ae7b:	inc    ebx
  42ae7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae7d:	jl     0x42ae40
  42ae7f:	fisub  DWORD PTR [ebp+0x3e]
  42ae82:	inc    ecx
  42ae83:	in     al,0x6d
  42ae85:	outs   dx,BYTE PTR ds:[esi]
  42ae86:	push   ebp
  42ae87:	in     al,0x1b
  42ae89:	shl    BYTE PTR [edi],1
  42ae8b:	push   cs
  42ae8c:	xchg   ebp,eax
  42ae8d:	adc    ebx,ebp
  42ae8f:	add    al,BYTE PTR [ecx+0x33]
  42ae92:	xchg   ebp,eax
  42ae93:	add    ch,cl
  42ae95:	sub    bl,BYTE PTR [esi-0x2]
  42ae98:	cld    
  42ae99:	(bad)  
  42ae9a:	outs   dx,DWORD PTR ds:[esi]
  42ae9b:	ja     0x42aea8
  42ae9d:	cld    
  42ae9e:	add    cl,BYTE PTR [ebp-0x1a]
  42aea1:	add    ebx,DWORD PTR [ebp-0x5523bf88]
  42aea7:	push   edx
  42aea8:	mov    edx,0x49fa69f0
  42aead:	push   ss
  42aeae:	add    BYTE PTR [ebp+0x6203a90c],ch
  42aeb4:	mov    esi,0x4b9db4ec
  42aeb9:	add    BYTE PTR [ecx+0x4b],al
  42aebc:	cmc    
  42aebd:	stc    
  42aebe:	cs and cl,ch
  42aec1:	jae    0x42aeb7
  42aec3:	int    0x6e
  42aec5:	loopne 0x42aee5
  42aec7:	xchg   ebx,eax
  42aec8:	mov    ds:0xb29ea90d,al
  42aecd:	add    BYTE PTR [edx],al
  42aecf:	mov    al,ds:0x6011c014
  42aed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aed5:	(bad)  
  42aed6:	call   0x7942ae3b
  42aedb:	push   ebx
  42aedc:	mov    dh,0x5f
  42aede:	sub    BYTE PTR [ebx+eax*4+0xa],cl
  42aee2:	call   0x5821d0c1
  42aee7:	xchg   ecx,eax
  42aee8:	jo     0x42aeba
  42aeea:	xlat   BYTE PTR ds:[ebx]
  42aeeb:	xor    ch,BYTE PTR [esi-0x3d]
  42aeee:	adc    al,0x5c
  42aef0:	retf   
  42aef1:	push   es
  42aef2:	inc    esi
  42aef3:	xor    ecx,ecx
  42aef5:	sbb    ecx,DWORD PTR [eax-0x211bb0dd]
  42aefb:	sbb    BYTE PTR [ebx+0x21e30417],bh
  42af01:	pop    edi
  42af02:	inc    ecx
  42af03:	and    DWORD PTR [edx],0xffffff92
  42af06:	retf   0x4965
  42af09:	jmp    0x42aedc
  42af0b:	outs   dx,BYTE PTR ds:[esi]
  42af0c:	pop    ds
  42af0d:	pusha  
  42af0e:	xor    esp,DWORD PTR [edi+0x26]
  42af11:	nop
  42af12:	stos   DWORD PTR es:[edi],eax
  42af13:	add    BYTE PTR [ecx+eiz*2-0x25],bl
  42af17:	dec    ecx
  42af18:	and    ecx,DWORD PTR [esi-0x1c]
  42af1b:	cld    
  42af1c:	inc    ecx
  42af1d:	das    
  42af1e:	xor    esi,DWORD PTR [esi-0x3497de60]
  42af24:	cwde   
  42af25:	sahf   
  42af26:	push   ds
  42af27:	mov    eax,0x331684b6
  42af2c:	scas   eax,DWORD PTR es:[edi]
  42af2d:	sbb    cl,BYTE PTR [ecx-0xe376ccd]
  42af33:	add    cl,ah
  42af35:	dec    ecx
  42af36:	popa   
  42af37:	jecxz  0x42af63
  42af39:	lods   eax,DWORD PTR ds:[esi]
  42af3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af3b:	mov    edi,0x61c8fcc5
  42af40:	adc    dl,BYTE PTR [esi-0x581a7628]
  42af46:	mov    ds:0x213b97c7,eax
  42af4b:	jecxz  0x42af5e
  42af4d:	push   0xfffffff2
  42af4f:	mov    al,0x5c
  42af51:	xor    BYTE PTR ds:0xd96452c7,al
  42af57:	or     eax,DWORD PTR [eax-0x10e328f9]
  42af5d:	enter  0xa08b,0x61
  42af61:	(bad)
  42af64:	mov    ecx,0x99c7639d
  42af69:	clc    
  42af6a:	outs   dx,BYTE PTR ds:[esi]
  42af6b:	sbb    al,0xb5
  42af6d:	cmp    DWORD PTR fs:[ebx],ecx
  42af70:	gs inc ebp
  42af72:	and    ebx,esp
  42af74:	adc    al,0x88
  42af76:	sub    BYTE PTR [esi+0x0],dh
  42af79:	popa   
  42af7a:	jb     0x42af56
  42af7c:	xchg   esi,eax
  42af7d:	cwde   
  42af7e:	ret    
  42af7f:	imul   eax,edi,0x51
  42af82:	pop    ebx
  42af83:	loope  0x42af0a
  42af85:	call   0x45ea5bd2
  42af8a:	or     BYTE PTR [ecx+0xb],dh
  42af8d:	popf   
  42af8e:	cmc    
  42af8f:	aad    0x1c
  42af91:	mov    ecx,DWORD PTR [ecx-0x2a]
  42af94:	xchg   edi,eax
  42af95:	xor    eax,0x5a7ac34
  42af9a:	loopne 0x42b00b
  42af9c:	or     eax,DWORD PTR [ebp+esi*2-0x78aae328]
  42afa3:	dec    esi
  42afa4:	neg    DWORD PTR [eax]
  42afa6:	jle    0x42afc2
  42afa8:	jecxz  0x42af4b
  42afaa:	popf   
  42afab:	arpl   di,ax
  42afad:	popf   
  42afae:	into   
  42afaf:	mov    esp,0x2da03e38
  42afb4:	xlat   BYTE PTR ds:[ebx]
  42afb5:	xchg   edi,eax
  42afb6:	retf   0xd9ab
  42afb9:	mov    ecx,0xce050073
  42afbe:	sahf   
  42afbf:	push   cs
  42afc0:	leave  
  42afc1:	adc    bh,BYTE PTR [esi-0x5a]
  42afc4:	fnstcw WORD PTR [edx]
  42afc6:	push   cs
  42afc7:	xor    DWORD PTR [edi],ebp
  42afc9:	dec    ebx
  42afca:	mov    ah,BYTE PTR [eax+0x31]
  42afcd:	out    dx,al
  42afce:	dec    edi
  42afcf:	test   ah,bh
  42afd1:	mov    edi,0xe87244c6
  42afd6:	push   ss
  42afd7:	push   ss
  42afd8:	nop
  42afd9:	mov    ecx,0xcae725
  42afde:	jg     0x42afae
  42afe0:	inc    esp
  42afe1:	jae    0x42afde
  42afe3:	mov    ah,BYTE PTR [eax+0x65]
  42afe6:	dec    esi
  42afe7:	push   ss
  42afe8:	ficom  DWORD PTR [eax+0x33a7063d]
  42afee:	dec    esi
  42afef:	cld    
  42aff0:	add    DWORD PTR [ecx],esp
  42aff2:	std    
  42aff3:	retf   0xac35
  42aff6:	cmp    ch,dl
  42aff8:	add    al,0xa9
  42affa:	push   esi
  42affb:	inc    esi
  42affc:	cld    
  42affd:	push   ebx
  42affe:	mov    ah,0x3e
  42b000:	inc    ebp
  42b001:	jp     0x42b00b
  42b003:	xor    DWORD PTR [ebx+0x7ad03c3],edi
  42b009:	add    al,dl
  42b00b:	push   esp
  42b00c:	loopne 0x42af8e
  42b00e:	inc    ecx
  42b00f:	inc    edi
  42b010:	add    al,0x0
  42b012:	popf   
  42b013:	sbb    al,0x52
  42b015:	push   ebx
  42b016:	mov    bh,0xd7
  42b018:	jns    0x42b05e
  42b01a:	cmc    
  42b01b:	repnz dec ebx
  42b01d:	lods   al,BYTE PTR ds:[esi]
  42b01e:	pop    esi
  42b01f:	jmp    0x42b050
  42b021:	xlat   BYTE PTR ds:[ebx]
  42b022:	dec    ebx
  42b023:	jmp    0x42b033
  42b025:	add    BYTE PTR [ebp+0x597ab902],bl
  42b02b:	fisubr DWORD PTR [edi+0x77]
  42b02e:	icebp  
  42b02f:	loopne 0x42b02c
  42b031:	xor    ecx,DWORD PTR [edi-0x217f16be]
  42b037:	or     eax,0x6a6a5596
  42b03c:	in     eax,0x3
  42b03e:	popf   
  42b03f:	or     ah,BYTE PTR [edi+eax*2+0x0]
  42b043:	in     eax,0x31
  42b045:	mov    edi,0x946dfec
  42b04a:	add    ebx,DWORD PTR [ebp-0x761316fe]
  42b050:	(bad)  
  42b052:	inc    ebx
  42b053:	popf   
  42b054:	lea    edx,[eax]
  42b056:	jnp    0x42b079
  42b058:	(bad)  
  42b059:	mov    ebp,0x92fc0ee8
  42b05e:	push   eax
  42b05f:	loop   0x42b0cd
  42b061:	jmp    0x42b0b7
  42b063:	xchg   dh,dh
  42b065:	push   0x7002dd13
  42b06a:	inc    esi
  42b06b:	jne    0x42b089
  42b06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b06e:	jbe    0x42b004
  42b070:	lea    ebx,[ebx-0x8]
  42b073:	or     BYTE PTR [esi-0x71981333],0x3b
  42b07a:	clc    
  42b07b:	inc    edx
  42b07c:	xchg   BYTE PTR [ebp-0x56eaa814],bh
  42b082:	dec    esp
  42b083:	out    0x3b,eax
  42b085:	mov    al,ds:0x61029ac1
  42b08a:	cmp    ebp,DWORD PTR [eax]
  42b08c:	inc    ebx
  42b08d:	jmp    0x1c5180bd
  42b092:	pop    es
  42b093:	in     eax,0x4a
  42b095:	adc    al,0x44
  42b097:	popf   
  42b098:	xor    bl,BYTE PTR [edx]
  42b09a:	pop    esp
  42b09b:	ins    DWORD PTR es:[edi],dx
  42b09c:	lea    ebp,[eax]
  42b09e:	add    al,0x62
  42b0a0:	(bad)  
  42b0a1:	jmp    FWORD PTR [ebx+0x72]
  42b0a4:	(bad)  
  42b0a6:	outs   dx,BYTE PTR ds:[esi]
  42b0a7:	add    BYTE PTR [esi+0x68],ch
  42b0aa:	sbb    al,al
  42b0ac:	(bad)  
  42b0ad:	mov    ah,0x3e
  42b0af:	pop    edi
  42b0b0:	add    DWORD PTR [ecx-0x3c],esp
  42b0b3:	std    
  42b0b4:	and    esp,DWORD PTR [eax+0x42442b74]
  42b0ba:	lea    ebp,[edx+esi*1+0x19515051]
  42b0c1:	data16 add cl,ch
  42b0c4:	(bad)  
  42b0c5:	ret    0x8c88
  42b0c8:	mov    edx,0x15117c8e
  42b0cd:	popa   
  42b0ce:	(bad)  
  42b0cf:	in     eax,dx
  42b0d0:	adc    eax,0xc2ac8ca9
  42b0d5:	dec    edi
  42b0d6:	lea    esp,[esi+ecx*1-0xb65b0b0]
  42b0dd:	push   es
  42b0de:	callw  0xcf
  42b0e2:	lea    ebp,[edx+esi*8-0x25]
  42b0e6:	cli    
  42b0e7:	out    dx,al
  42b0e8:	out    dx,eax
  42b0e9:	(bad)  [ecx+esi*8+0x5f]
  42b0ed:	inc    esi
  42b0ee:	nop
  42b0ef:	and    eax,0xd6000299
  42b0f4:	mov    WORD PTR [edx],gs
  42b0f6:	adc    DWORD PTR [ecx],ebp
  42b0f8:	cdq    
  42b0f9:	test   DWORD PTR [edi+0x748e563c],edi
  42b0ff:	mov    ch,0x71
  42b101:	(bad)  
  42b103:	mov    dh,0x36
  42b105:	test   DWORD PTR [esi-0x5244e40],edi
  42b10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b10c:	add    BYTE PTR [esi+0x56],al
  42b10f:	in     al,0x6c
  42b111:	(bad)  
  42b113:	dec    edi
  42b114:	adc    DWORD PTR [ebx+0x1d8efad7],0xf400739f
  42b11e:	jmp    0x42b193
  42b120:	call   0x121aa2b8
  42b125:	mov    ah,0x6
  42b127:	jnp    0x42b121
  42b129:	jae    0x42b17d
  42b12b:	cli    
  42b12c:	mov    dl,0x5
  42b12e:	in     al,dx
  42b12f:	jae    0x42b115
  42b131:	outs   dx,DWORD PTR ds:[esi]
  42b132:	adc    DWORD PTR [eax-0x8fccbee],esp
  42b138:	(bad)  
  42b139:	push   ebx
  42b13a:	push   ecx
  42b13b:	call   0xb6026c3f
  42b140:	push   ebp
  42b141:	dec    edi
  42b142:	mov    edx,0x85bc4d81
  42b147:	out    0xc,al
  42b149:	mov    dh,0x2
  42b14b:	add    BYTE PTR [ebx-0x6],dl
  42b14e:	xor    ebp,DWORD PTR [ebx]
  42b150:	rcl    bh,0xd0
  42b153:	loop   0x42b18d
  42b155:	stc    
  42b156:	add    al,BYTE PTR [eax]
  42b158:	test   DWORD PTR [edx+edx*2+0x22],esi
  42b15c:	test   DWORD PTR [esi+ebx*8-0x6],0x73f284ff
  42b164:	adc    edi,edi
  42b166:	fidivr WORD PTR [ecx-0x7]
  42b169:	push   ecx
  42b16a:	pop    eax
  42b16b:	add    al,BYTE PTR [ebp+0x3b046e5a]
  42b171:	add    BYTE PTR [edx+0x448afa54],al
  42b177:	pop    ebp
  42b178:	dec    esp
  42b179:	or     BYTE PTR [eax+edi*8+0x44],bl
  42b17d:	add    BYTE PTR [ebx+eax*4-0x46],al
  42b181:	jne    0x42b181
  42b183:	xor    al,0x75
  42b186:	cmp    BYTE PTR [eax],bl
  42b188:	shr    bl,0x89
  42b18b:	xchg   BYTE PTR [ebx+0xc],bh
  42b18e:	inc    esp
  42b18f:	push   ebx
  42b190:	add    eax,0x740b5283
  42b195:	icebp  
  42b196:	popf   
  42b197:	je     0x42b208
  42b199:	or     BYTE PTR [esi],dl
  42b19b:	push   cs
  42b19c:	clc    
  42b19d:	out    0x6c,eax
  42b19f:	cs add al,0x0
  42b1a2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42b1a4:	jg     0x42b17c
  42b1a6:	xchg   ecx,eax
  42b1a7:	mov    esi,DWORD PTR [edi-0x7c]
  42b1aa:	add    eax,0x4dfae66f
  42b1af:	mov    bl,0x5e
  42b1b1:	lea    ebx,[ebp-0x15]
  42b1b4:	rol    BYTE PTR [edx+ebx*4-0x15],0xd6
  42b1b9:	or     dl,BYTE PTR [ebx+ebp*8-0x60227c02]
  42b1c0:	sub    eax,0x806e6e53
  42b1c5:	test   eax,0xb54fe614
  42b1cb:	idiv   ch
  42b1cd:	call   FWORD PTR [ebp+0x7873bf6f]
  42b1d3:	push   0x9a001d29
  42b1d8:	pop    edi
  42b1d9:	mov    edi,0x4f2beb0a
  42b1de:	lea    esp,[eax]
  42b1e0:	add    ebp,eax
  42b1e2:	cli    
  42b1e3:	xchg   edx,eax
  42b1e4:	jnp    0x42b1bc
  42b1e6:	sub    BYTE PTR [ebx-0x2778172c],cl
  42b1ec:	mov    esp,0xe6758477
  42b1f1:	call   0x17f67ff0
  42b1f6:	jb     0x42b263
  42b1f8:	mov    ah,0x54
  42b1fa:	call   0xfb2b93dd
  42b1ff:	daa    
  42b200:	cs stc 
  42b202:	pop    edx
  42b203:	repz and BYTE PTR [edi+0x49eb95bd],dh
  42b20a:	xchg   DWORD PTR [ecx],esi
  42b20c:	push   0xffffffd8
  42b20e:	repz pushf 
  42b210:	add    ch,cl
  42b212:	add    ecx,edi
  42b214:	mov    DWORD PTR [ebx],edx
  42b216:	cld    
  42b217:	sbb    eax,0x9512e85c
  42b21c:	add    ch,cl
  42b21e:	push   eax
  42b21f:	xchg   ecx,eax
  42b220:	add    eax,0x6105c3b7
  42b225:	call   0xb8e04f2d
  42b22a:	sti    
  42b22b:	add    bl,ch
  42b22d:	adc    DWORD PTR [esi-0x63],ebx
  42b230:	xor    DWORD PTR [edx+0xf],esp
  42b233:	test   eax,0x1403a8f4
  42b238:	pop    ecx
  42b239:	in     eax,dx
  42b23a:	jl     0x42b23c
  42b23c:	pop    esp
  42b23d:	or     esp,DWORD PTR [esi-0x40]
  42b240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b241:	mov    esp,DWORD PTR [ebp-0x13bbde09]
  42b247:	push   ebx
  42b248:	inc    ebx
  42b249:	not    DWORD PTR [ecx+0x5df25b76]
  42b24f:	rol    edx,0xce
  42b252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b253:	jmp    0x30e53b0f
  42b258:	adc    al,0x41
  42b25a:	aad    0x7c
  42b25c:	pop    esp
  42b25d:	sbb    DWORD PTR [eax+0x45],esp
  42b260:	fisttp QWORD PTR [ebp+0x68ed40aa]
  42b266:	mov    ebp,0xa5481848
  42b26b:	jl     0x42b2cc
  42b26d:	jmp    0x42b2a7
  42b26f:	inc    ebx
  42b270:	ja     0x42b24e
  42b272:	ins    DWORD PTR es:[edi],dx
  42b273:	xor    DWORD PTR [edi],0x2203e903
  42b279:	push   ds
  42b27a:	sbb    DWORD PTR [edx],edx
  42b27c:	fld    QWORD PTR [edx]
  42b27e:	pusha  
  42b27f:	test   BYTE PTR [esi+0x3],bl
  42b282:	jmp    0x6c356d8a
  42b287:	or     DWORD PTR [ebx],0x9ee90003
  42b28d:	xor    cl,BYTE PTR [ebp-0x5240996]
  42b293:	jmp    0x6b158a66
  42b298:	jmp    0x2:0x9feb6807
  42b29f:	pop    esp
  42b2a0:	add    BYTE PTR [ecx*8+0x329ee8ff],bl
  42b2a7:	lea    ebp,[edx-0x2a]
  42b2aa:	(bad)  
  42b2ac:	jmp    0x6b158a1f
  42b2b1:	cmp    cl,BYTE PTR [eax]
  42b2b3:	mov    ebx,0x29fed
  42b2b8:	push   0xe900b6dc
  42b2bd:	sahf   
  42b2be:	xor    BYTE PTR [ebp+0x2e262],cl
  42b2c4:	jmp    0xa22a731a
  42b2c9:	pop    edi
  42b2ca:	fdivr  st,st(2)
  42b2cc:	ins    BYTE PTR es:[edi],dx
  42b2cd:	fimul  WORD PTR [eax]
  42b2cf:	test   DWORD PTR [ecx-0x6c05273b],ebx
  42b2d5:	lahf   
  42b2d6:	lea    esi,[ecx+edi*8+0x1fad8b4]
  42b2dd:	push   0x47
  42b2df:	sti    
  42b2e0:	push   cs
  42b2e1:	sbb    edx,eax
  42b2e3:	dec    edi
  42b2e4:	adc    DWORD PTR [esi+0x67],ebx
  42b2e7:	sti    
  42b2e8:	dec    BYTE PTR [ebx]
  42b2ea:	pushf  
  42b2eb:	je     0x42b2c7
  42b2ed:	aaa    
  42b2ee:	jmp    0x83e19bf3
  42b2f3:	shr    DWORD PTR [edi+0x30400299],0xec
  42b2fa:	fld1   
  42b2fc:	or     eax,0x36fad87a
  42b301:	aam    0x46
  42b303:	mov    esi,0x59b40000
  42b308:	stos   BYTE PTR es:[edi],al
  42b309:	clc    
  42b30a:	aaa    
  42b30b:	(bad)  
  42b30c:	jmp    FWORD PTR [ecx+0x34]
  42b30f:	add    dl,0xff
  42b312:	pop    esp
  42b313:	outs   dx,BYTE PTR ds:[esi]
  42b314:	cmp    edi,esi
  42b316:	sti    
  42b317:	cmp    BYTE PTR [edx-0x1751cc81],0x1
  42b31e:	xor    al,0xff
  42b320:	mov    WORD PTR [ebp-0xa1aec],es
  42b326:	inc    edx
  42b327:	push   es
  42b328:	add    BYTE PTR [eax-0x33],al
  42b32b:	push   ecx
  42b32c:	stc    
  42b32d:	jmp    0x3897b2
  42b332:	jg     0x42b375
  42b334:	(bad)  
  42b335:	mov    DWORD PTR [edi-0xbffff22],eax
  42b33b:	cmp    BYTE PTR [eax],cl
  42b33d:	lea    esi,[ecx]
  42b33f:	int    0x4a
  42b341:	lea    eax,[edi+0x6]
  42b344:	(bad)  
  42b345:	inc    esp
  42b347:	not    DWORD PTR cs:0x400cc4
  42b34e:	aaa    
  42b34f:	ret    0xb906
  42b352:	jp     0x42b359
  42b354:	add    BYTE PTR [eax],al
  42b356:	sub    DWORD PTR [ecx-0x1c7401f6],eax
  42b35c:	rol    BYTE PTR [eax],0xb4
  42b35f:	ds dec ecx
  42b361:	jne    0x42b310
  42b363:	pop    ebp
  42b364:	je     0x42b36e
  42b366:	or     DWORD PTR [ecx-0x1c],ebx
  42b369:	add    eax,0x50067400
  42b36e:	(bad)  
  42b36f:	push   edx
  42b371:	std    
  42b372:	inc    DWORD PTR [ebp+ebx*2+0x4608e8be]
  42b379:	idiv   bh
  42b37b:	add    esi,eax
  42b37d:	add    eax,0xe4879d85
  42b382:	cli    
  42b383:	pop    edx
  42b384:	gs jge 0x42b383
  42b387:	call   0xf6b8:0x1e88feeb
  42b38e:	inc    DWORD PTR [edx+0x5c]
  42b391:	add    al,0x5b
  42b393:	(bad)  [edx+0x169d03c0]
  42b399:	ja     0x42b386
  42b39b:	into   
  42b39c:	mov    esp,0xb3ca51c5
  42b3a1:	pop    es
  42b3a2:	mov    al,ds:0x75042ce0
  42b3a7:	ret    
  42b3a8:	inc    ecx
  42b3a9:	mov    esp,0xfb4ceb5e
  42b3af:	test   al,0x7f
  42b3b1:	adc    BYTE PTR [eax-0x63],al
  42b3b4:	xchg   ebx,eax
  42b3b5:	pop    es
  42b3b6:	mov    al,ds:0x74feacd8
  42b3bb:	mov    ss,WORD PTR [edx+0x8]
  42b3be:	js     0x42b398
  42b3c0:	lods   al,BYTE PTR ds:[esi]
  42b3c1:	dec    BYTE PTR [eax+0x3ebf7fb8]
  42b3c7:	popf   
  42b3c8:	sub    DWORD PTR [eax],eax
  42b3ca:	mov    al,ds:0xfeace0
  42b3cf:	add    BYTE PTR [ebx+0x10],ch
  42b3d2:	adc    al,dh
  42b3d4:	(bad)  
  42b3d5:	stos   DWORD PTR es:[edi],eax
  42b3d6:	inc    BYTE PTR [esi-0x40ea2ca8]
  42b3dc:	xor    DWORD PTR [esi-0x3cd6b7ca],ebp
  42b3e2:	ss je  0x42b39e
  42b3e5:	mov    ds:0xd0e5106a,eax
  42b3ea:	jg     0x42b3b0
  42b3ec:	popf   
  42b3ed:	jmp    0x42b3ed
  42b3ef:	mov    edx,0x3eb96d
  42b3f4:	pop    es
  42b3f5:	rcl    ch,0x1d
  42b3f8:	xor    al,BYTE PTR [edx]
  42b3fa:	test   eax,0x4f02dd0e
  42b3ff:	pop    ds
  42b400:	jp     0x42b3fd
  42b402:	xchg   ecx,eax
  42b403:	in     al,0xac
  42b405:	inc    edx
  42b406:	jmp    0xd9303964
  42b40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b40c:	cli    
  42b40d:	out    dx,eax
  42b40e:	sub    BYTE PTR [ebx+edi*4],al
  42b411:	idiv   BYTE PTR [ebp-0x2d5e0803]
  42b417:	inc    ebx
  42b418:	popf   
  42b419:	ins    BYTE PTR es:[edi],dx
  42b41a:	jmp    DWORD PTR [edx+0x425bfb2]
  42b420:	(bad)  
  42b421:	sbb    eax,0x6aca6fa6
  42b426:	jmp    0x82451196
  42b42b:	paddsw mm6,mm3
  42b42e:	sub    BYTE PTR [edx+ecx*8],al
  42b431:	(bad)  
  42b434:	add    BYTE PTR [ebp-0x62bba396],al
  42b43a:	xor    ah,BYTE PTR [edx+0xf]
  42b43d:	sub    esp,esi
  42b43f:	test   al,0x3
  42b441:	add    bl,BYTE PTR [edx+0x2c]
  42b444:	inc    ecx
  42b445:	popf   
  42b446:	sbb    eax,0x85a66f26
  42b44b:	xor    ch,ah
  42b44d:	sub    ebx,DWORD PTR [edx+0x24]
  42b450:	inc    ecx
  42b451:	popf   
  42b452:	in     eax,dx
  42b453:	jmp    0x42b3f7
  42b455:	xor    bh,BYTE PTR [edi-0x25cdfc5b]
  42b45b:	and    DWORD PTR [eax+0x5c],esi
  42b45e:	sbb    eax,0x87607026
  42b463:	mov    ds:0x8133edfb,eax
  42b468:	add    ebp,DWORD PTR [ebp-0x79b316fe]
  42b46e:	mov    bl,0x63
  42b470:	les    ecx,FWORD PTR [ecx]
  42b472:	inc    esp
  42b473:	add    BYTE PTR [edx-0x16],ah
  42b476:	or     al,BYTE PTR [edi+0x4606a9c]
  42b47c:	call   0x402ab71f
  42b481:	mov    eax,0xcbd6fadc
  42b486:	or     al,BYTE PTR [edi+0x73ef39d9]
  42b48c:	(bad)  
  42b48e:	add    dh,BYTE PTR [edi]
  42b490:	mov    edx,0x3cfb1eb3
  42b495:	xor    eax,0x2d14dd
  42b49a:	mov    WORD PTR [edx+0x0],es
  42b49d:	pop    ecx
  42b49e:	lahf   
  42b49f:	fistp  WORD PTR [eax]
  42b4a1:	sahf   
  42b4a2:	mov    bl,0x6
  42b4a4:	and    DWORD PTR [edi-0x16ffed62],0x1a52476d
  42b4ae:	add    bh,ch
  42b4b0:	dec    edi
  42b4b1:	ficomp DWORD PTR [esi+0x2]
  42b4b4:	test   DWORD PTR [ecx-0x56d2522b],ebp
  42b4ba:	pop    ecx
  42b4bb:	cmp    al,0x57
  42b4bd:	(bad)  
  42b4be:	fdiv   st(7),st
  42b4c0:	push   DWORD PTR [ebx+0x6a50eb65]
  42b4c6:	inc    ebx
  42b4c7:	bnd call esp
  42b4ca:	retf   
  42b4cb:	add    BYTE PTR [ecx+ebx*8+0x68],0x57
  42b4d0:	cmp    BYTE PTR [ebp-0x538101cd],bl
  42b4d6:	mov    ds,eax
  42b4d8:	dec    ebp
  42b4d9:	xchg   edi,eax
  42b4da:	xor    eax,0x2bbe084e
  42b4df:	ror    DWORD PTR [edx],1
  42b4e1:	gs rcl edi,0xfa
  42b4e5:	jmp    0x14efbff
  42b4ea:	sub    ebx,DWORD PTR [ecx]
  42b4ec:	cli    
  42b4ed:	add    BYTE PTR [ebx-0x7c7c0ca6],ah
  42b4f3:	jecxz  0x42b4fa
  42b4f5:	test   BYTE PTR [eax-0x50fffffd],bl
  42b4fb:	xlat   BYTE PTR ds:[ebx]
  42b4fc:	(bad)  
  42b4fd:	inc    DWORD PTR [eax]
  42b4ff:	je     0x42b4f9
  42b501:	(bad)  
  42b504:	retf   
  42b505:	cli    
  42b506:	inc    DWORD PTR [eax+ecx*4+0x4b]
  42b50a:	adc    BYTE PTR [ecx+esi*2+0x38],bl
  42b50e:	(bad)  
  42b50f:	arpl   WORD PTR [ebp-0x494803bd],ax
  42b515:	cmc    
  42b516:	bswap  eax
  42b518:	outs   dx,DWORD PTR ds:[esi]
  42b519:	cli    
  42b51a:	inc    DWORD PTR [eax+edi*8-0x46]
  42b51e:	movzx  esp,WORD PTR [edi-0x75cb0006]
  42b525:	cmc    
  42b526:	jne    0x42b524
  42b528:	mov    DWORD PTR [edx-0x57c87f1],edi
  42b52e:	push   esp
  42b530:	mov    DWORD PTR [edx+0x74f7ee75],edi
  42b536:	or     al,0xf8
  42b538:	int3   
  42b539:	mov    eax,DWORD PTR [ebx+eax*2-0x3]
  42b53d:	dec    edi
  42b53e:	dec    ecx
  42b540:	push   es
  42b541:	dec    esi
  42b542:	(bad)  
  42b543:	jmp    0xc482c33a
  42b548:	jg     0x42b508
  42b54a:	or     al,0xa
  42b54c:	in     al,0x13
  42b54e:	jl     0x42b537
  42b550:	inc    edx
  42b551:	add    BYTE PTR [ebx+0x3e3ee672],cl
  42b557:	jb     0x42b53c
  42b559:	mov    eax,DWORD PTR [edx+edi*8]
  42b55c:	out    0x69,eax
  42b55e:	test   DWORD PTR [ebx+0x8b4d3a],eax
  42b564:	icebp  
  42b565:	push   es
  42b566:	lea    esi,[ebx*4+0x117f68ac]
  42b56d:	mov    dh,0xe0
  42b56f:	pop    ebx
  42b570:	call   0x1c2b:0xce0b4936
  42b577:	inc    ebp
  42b578:	stos   BYTE PTR es:[edi],al
  42b579:	fdiv   QWORD PTR [edi-0x41]
  42b57c:	sahf   
  42b57d:	sahf   
  42b57e:	(bad)  
  42b580:	arpl   WORD PTR [ecx],sp
  42b582:	ret    
  42b583:	outs   dx,BYTE PTR ds:[esi]
  42b584:	shl    DWORD PTR [edx],1
  42b586:	push   ecx
  42b587:	or     cl,dl
  42b589:	fnstsw WORD PTR [eax]
  42b58b:	push   ecx
  42b58c:	push   edx
  42b58d:	das    
  42b58e:	or     al,0xfb
  42b590:	mov    al,0xdb
  42b592:	clc    
  42b593:	aas    
  42b594:	popf   
  42b595:	push   0x169c0bc3
  42b59a:	or     al,0x80
  42b59c:	mov    al,0xb4
  42b59e:	(bad)  
  42b59f:	jae    0x42b539
  42b5a1:	push   eax
  42b5a2:	push   eax
  42b5a3:	or     BYTE PTR [esi],bl
  42b5a5:	pop    ds
  42b5a6:	or     al,0xfe
  42b5a8:	test   BYTE PTR [edi],cl
  42b5aa:	cmp    al,0x62
  42b5ac:	and    al,0xeb
  42b5ae:	mov    DWORD PTR [ebp+edx*4+0x50],esi
  42b5b2:	dec    eax
  42b5b3:	cld    
  42b5b4:	adc    BYTE PTR [eax],ah
  42b5b6:	add    al,0xfe
  42b5b8:	push   0x4c
  42b5ba:	pop    eax
  42b5bb:	adc    BYTE PTR [ebx+0x64],cl
  42b5be:	clc    
  42b5bf:	das    
  42b5c0:	xchg   ebx,eax
  42b5c1:	stos   DWORD PTR es:[edi],eax
  42b5c2:	(bad)  
  42b5c3:	jle    0x42b59e
  42b5c5:	out    0x38,eax
  42b5c7:	sti    
  42b5c8:	add    BYTE PTR [eax-0x62c00e51],dh
  42b5ce:	pusha  
  42b5cf:	leave  
  42b5d0:	out    0x9f,al
  42b5d2:	fdivr  DWORD PTR [esi-0x345f9ca6]
  42b5d8:	mov    ebp,0x418feba9
  42b5dd:	mov    eax,ds:0xb114dd7b
  42b5e2:	add    dh,bh
  42b5e4:	inc    ebx
  42b5e5:	popf   
  42b5e6:	adc    DWORD PTR [ecx],ebp
  42b5e8:	mov    WORD PTR [ebx+ecx*4+0x3c2407aa],ds
  42b5ef:	loope  0x42b57f
  42b5f1:	pop    esp
  42b5f2:	rcr    DWORD PTR [edx-0x4a2de5c6],0xe2
  42b5f9:	mov    ch,0x14
  42b5fb:	jnp    0x42b5f1
  42b5fd:	sbb    edi,DWORD PTR [eiz*8-0x1e65511e]
  42b604:	test   DWORD PTR [edx],0xde0428f0
  42b60a:	sbb    DWORD PTR [ebx],edx
  42b60c:	push   esi
  42b60d:	inc    esi
  42b60e:	aad    0x52
  42b610:	or     BYTE PTR ds:0x47e1eb15,dh
  42b616:	and    DWORD PTR [edx-0x242a30f0],0xe942a0eb
  42b620:	inc    eax
  42b621:	mov    ecx,0x89cf3537
  42b627:	cwde   
  42b628:	(bad)  
  42b629:	pop    esp
  42b62a:	push   es
  42b62b:	cmp    DWORD PTR [ebx-0x22e1a200],ecx
  42b631:	loopne 0x42b5e4
  42b633:	out    0xd6,al
  42b635:	inc    ebx
  42b636:	popf   
  42b637:	adc    DWORD PTR [esi-0x3f5a8e5],ebx
  42b63d:	aaa    
  42b63e:	dec    eax
  42b63f:	adc    DWORD PTR [ebx+ebx*1-0x79],edi
  42b643:	dec    esp
  42b644:	and    al,0x39
  42b646:	sbb    bh,BYTE PTR [eiz*8+0x1480d98c]
  42b64d:	pushf  
  42b64e:	rcl    BYTE PTR [eax-0x2],cl
  42b651:	ins    DWORD PTR es:[edi],dx
  42b652:	popf   
  42b653:	aad    0xfc
  42b655:	fwait
  42b656:	(bad)  
  42b657:	out    dx,al
  42b658:	fdiv   st,st(4)
  42b65a:	jp     0x42b65e
  42b65c:	add    BYTE PTR [ecx+ebx*8+0x7b],ch
  42b660:	inc    ecx
  42b661:	in     eax,0x53
  42b663:	add    al,0xfb
  42b665:	fld    QWORD PTR [esi]
  42b667:	fcom   DWORD PTR [ecx+ecx*2]
  42b66a:	xchg   ebx,eax
  42b66b:	adc    al,0x0
  42b66d:	(bad)  
  42b66e:	out    0xfe,eax
  42b670:	jle    0x42b637
  42b672:	es aam 0xe5
  42b675:	out    dx,al
  42b676:	adc    DWORD PTR [eax],ecx
  42b678:	mov    eax,0x3e7a8d70
  42b67d:	lods   al,BYTE PTR ds:[esi]
  42b67e:	xchg   ecx,eax
  42b67f:	sub    BYTE PTR [esi+0x24],ch
  42b682:	fmul   QWORD PTR [ecx-0x3cae8de7]
  42b688:	loopne 0x42b675
  42b68a:	and    edx,eax
  42b68c:	add    eax,ecx
  42b68e:	cdq    
  42b68f:	std    
  42b690:	stc    
  42b691:	into   
  42b692:	add    BYTE PTR [ebx-0x6ef28c29],cl
  42b698:	xlat   BYTE PTR ds:[ebx]
  42b699:	adc    al,0xb9
  42b69b:	xor    BYTE PTR [eax+eax*1],dl
  42b69e:	pop    ss
  42b69f:	jo     0x42b6da
  42b6a1:	mov    edi,0x50e81814
  42b6a6:	cmp    BYTE PTR [eax-0x7b],ch
  42b6a9:	inc    edx
  42b6aa:	in     eax,dx
  42b6ab:	aam    0x32
  42b6ad:	mov    DWORD PTR [ecx+esi*8],ebp
  42b6b0:	fcom   DWORD PTR [edi*2-0x45ffebf0]
  42b6b7:	inc    ecx
  42b6b8:	sbb    ebx,DWORD PTR [ebx-0xf]
  42b6bb:	lea    edi,[ebp-0x77]
  42b6be:	jmp    0xc7bb961
  42b6c3:	lea    eax,[edi]
  42b6c5:	test   BYTE PTR [esi+ebx*4+0x2],ch
  42b6c9:	add    BYTE PTR [edx-0x53],dh
  42b6cc:	test   DWORD PTR [edx-0x13],esi
  42b6cf:	and    ecx,DWORD PTR [eax]
  42b6d1:	(bad)  
  42b6d2:	in     eax,0x9e
  42b6d4:	add    al,BYTE PTR [eax]
  42b6d6:	add    BYTE PTR [ebp+0x2c],cl
  42b6d9:	cld    
  42b6da:	call   0x38b2fb
  42b6df:	inc    eax
  42b6e0:	mov    edi,0x66076d6e
  42b6e5:	add    al,0xff
  42b6e7:	add    eax,edx
  42b6e9:	cmc    
  42b6ea:	jne    0x42b674
  42b6ec:	loop   0x42b761
  42b6ee:	or     BYTE PTR [edi-0x1e],dl
  42b6f1:	adc    edx,DWORD PTR [eax-0x7a]
  42b6f4:	aas    
  42b6f5:	add    BYTE PTR [ebx-0x15087c00],cl
  42b6fb:	je     0x42b731
  42b6fd:	clc    
  42b6fe:	pop    esp
  42b6ff:	adc    al,0xf0
  42b701:	cmc    
  42b702:	popa   
  42b703:	add    al,BYTE PTR [edi]
  42b705:	push   cs
  42b706:	div    DWORD PTR [ebp+0x60]
  42b709:	imul   esi,edi,0xf5b3ee56
  42b70f:	adc    eax,0x3ad020
  42b714:	sar    DWORD PTR [esi-0x26a4db8d],0x12
  42b71b:	adc    DWORD PTR [esi+edi*8-0x2714a9b1],eax
  42b722:	dec    esi
  42b723:	adc    dh,BYTE PTR [esi+edi*8+0x4d]
  42b727:	jmp    DWORD PTR [ecx]
  42b729:	lahf   
  42b72a:	or     al,0x40
  42b72c:	add    al,0x88
  42b72e:	add    eax,0xbfe2b18b
  42b733:	loope  0x42b72b
  42b735:	out    0x58,al
  42b737:	add    al,0x1a
  42b739:	mov    bl,0xe1
  42b73b:	adc    eax,0x4d82fb6f
  42b740:	push   0x30890787
  42b745:	jle    0x42b73c
  42b747:	pop    es
  42b748:	and    dh,BYTE PTR [ebx+edx*1+0x3ed5d8]
  42b74f:	mov    bl,0x9d
  42b751:	jmp    0xeff9:0x43c574d9
  42b758:	scas   eax,DWORD PTR es:[edi]
  42b759:	test   eax,0x270059fe
  42b75e:	sub    BYTE PTR [edi],dh
  42b760:	leave  
  42b761:	fistp  QWORD PTR [eax+0x604e50fe]
  42b767:	add    esp,ebp
  42b769:	(bad)  
  42b76d:	repnz pop esi
  42b76f:	pop    edx
  42b770:	or     al,0xea
  42b772:	clc    
  42b773:	scas   al,BYTE PTR es:[edi]
  42b774:	cli    
  42b775:	jecxz  0x42b75a
  42b777:	xor    ebx,edi
  42b779:	test   al,0xcb
  42b77b:	lock aas 
  42b77d:	popf   
  42b77e:	mov    edi,gs
  42b780:	rcr    ecx,0xbf
  42b783:	or     DWORD PTR [ecx],eax
  42b785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b786:	xchg   ecx,eax
  42b787:	push   esp
  42b788:	xor    BYTE PTR [esi],dl
  42b78a:	loop   0x42b7b1
  42b78c:	lds    ebx,FWORD PTR [esi]
  42b78e:	in     al,0x3e
  42b790:	outs   dx,BYTE PTR ds:[esi]
  42b791:	sahf   
  42b792:	inc    ebp
  42b793:	inc    esp
  42b794:	pop    eax
  42b795:	push   ss
  42b796:	repnz pop es
  42b798:	inc    dx
  42b79a:	ss add eax,0x3372a98d
  42b7a0:	push   eax
  42b7a1:	xor    ch,BYTE PTR [edi-0x2422f26e]
  42b7a7:	xchg   DWORD PTR [edi-0x3b822d58],edi
  42b7ad:	pop    ebp
  42b7ae:	in     al,0x2c
  42b7b0:	outs   dx,BYTE PTR ds:[esi]
  42b7b1:	jmp    0x9c7:0x61c20784
  42b7b8:	add    BYTE PTR [edx-0x78],ch
  42b7bb:	lods   eax,DWORD PTR ds:[esi]
  42b7bc:	cli    
  42b7bd:	imul   edx,ebx,0x31
  42b7c0:	sti    
  42b7c1:	add    BYTE PTR [eax-0x62c00eb5],cl
  42b7c7:	gs inc ebx
  42b7c9:	and    al,0x92
  42b7cb:	add    al,dl
  42b7cd:	inc    eax
  42b7ce:	jb     0x42b7fb
  42b7d0:	cmp    BYTE PTR es:[edx],bl
  42b7d3:	fbld   TBYTE PTR [edi-0x11]
  42b7d6:	push   0x6
  42b7d8:	jmp    0xa3c009e0
  42b7dd:	or     ecx,DWORD PTR [edi+0x39]
  42b7e0:	rol    DWORD PTR [ebx+0x32e94321],1
  42b7e6:	sbb    BYTE PTR [eax-0x2e58257c],cl
  42b7ec:	mov    eax,0x3cda8d8a
  42b7f1:	fist   WORD PTR [edi+0x11c36bd1]
  42b7f7:	sti    
  42b7f8:	jle    0x42b7fc
  42b7fa:	in     eax,0xdb
  42b7fc:	pushf  
  42b7fd:	add    al,0x9d
  42b7ff:	add    ch,BYTE PTR [eax+ecx*4+0x46]
  42b803:	iret   
  42b804:	icebp  
  42b805:	fstp   st(2)
  42b807:	jg     0x42b86c
  42b809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b80a:	imul   edx,ecx,0xffffffe1
  42b80d:	xor    al,0x56
  42b80f:	div    DWORD PTR [eax-0xd]
  42b812:	xchg   edx,eax
  42b813:	add    ah,BYTE PTR [eax+0x47]
  42b816:	xchg   ebp,eax
  42b817:	test   eax,edx
  42b819:	(bad)  
  42b81b:	push   es
  42b81c:	dec    edi
  42b81d:	or     BYTE PTR [edx-0x54],al
  42b820:	cmc    
  42b821:	fsub   QWORD PTR [ecx]
  42b823:	xchg   DWORD PTR [eax-0x2ed8ff21],edx
  42b829:	shr    dl,0x23
  42b82c:	shr    eax,1
  42b82e:	xchg   DWORD PTR [edx+0x1],ebx
  42b831:	fs mov eax,0x88e8d112
  42b837:	xchg   esp,eax
  42b838:	jge    0x42b821
  42b83a:	mov    gs,WORD PTR [ecx]
  42b83c:	sahf   
  42b83d:	sbb    ebp,0xfffffff7
  42b840:	xor    edx,DWORD PTR [esi]
  42b842:	frstor [edx+0x45a8ff87]
  42b848:	cli    
  42b849:	jle    0x42b8bc
  42b84b:	sahf   
  42b84c:	(bad)  [edi-0xdfd6117]
  42b852:	fs or  eax,0xd156face
  42b858:	sti    
  42b859:	and    DWORD PTR [ebp-0x67],0x2
  42b85d:	add    BYTE PTR [edi],bh
  42b85f:	arpl   dx,di
  42b861:	std    
  42b862:	mov    ah,0x7d
  42b864:	jg     0x42b7ea
  42b866:	adc    edx,ecx
  42b868:	retf   
  42b869:	cli    
  42b86a:	cdq    
  42b86b:	mov    dh,0xdd
  42b86d:	(bad)  
  42b86e:	call   0x96023f11
  42b873:	lea    ecx,[ecx+0x7d9e6209]
  42b879:	xchg   esp,eax
  42b87a:	cmp    eax,0x9bfacd62
  42b87f:	lods   eax,DWORD PTR ds:[esi]
  42b880:	retf   
  42b881:	dec    edi
  42b882:	in     eax,0x1b
  42b884:	nop
  42b885:	je     0x42b8b2
  42b887:	push   ebx
  42b888:	inc    edx
  42b889:	or     al,ch
  42b88b:	add    dl,cl
  42b88d:	dec    esp
  42b88e:	lea    ebp,[esi+edx*1-0x31]
  42b892:	cli    
  42b893:	fimul  WORD PTR [esi+0x26c8d3f]
  42b899:	fsqrt  
  42b89b:	into   
  42b89c:	mov    ds,edx
  42b89e:	xor    ch,al
  42b8a0:	pop    ecx
  42b8a1:	int    0x84
  42b8a3:	test   eax,0xea6605cb
  42b8a8:	imul   esp,edi,0xa41b5c19
  42b8ae:	mul    BYTE PTR [esi-0x5078c007]
  42b8b4:	push   es
  42b8b5:	stc    
  42b8b6:	cli    
  42b8b7:	xchg   esi,eax
  42b8b8:	jmp    0xe1a7b045
  42b8bd:	push   ebx
  42b8be:	dec    ebp
  42b8bf:	add    BYTE PTR [edi-0x5e8c0052],al
  42b8c5:	xor    ebp,0x835be802
  42b8cb:	push   cs
  42b8cc:	jg     0x42b8d2
  42b8ce:	dec    edi
  42b8cf:	lea    ebx,[ecx-0x61]
  42b8d2:	sti    
  42b8d3:	push   DWORD PTR [ebx+0x11]
  42b8d6:	dec    ebx
  42b8d7:	inc    DWORD PTR [esp+edi*8]
  42b8da:	jp     0x42b8d4
  42b8dc:	mov    bh,0x37
  42b8de:	mov    al,0xe9
  42b8e0:	jmp    0x42b890
  42b8e2:	cmc    
  42b8e3:	jmp    FWORD PTR [edx+0x45]
  42b8e6:	or     BYTE PTR [eax+ebp*8],al
  42b8e9:	and    cl,BYTE PTR [ebp-0xa4f737b]
  42b8ef:	inc    DWORD PTR [eax]
  42b8f1:	push   esp
  42b8f2:	(bad)  [edi+0x0]
  42b8f5:	test   BYTE PTR [ebx],al
  42b8f7:	test   al,al
  42b8f9:	sub    dl,dl
  42b8fb:	or     DWORD PTR [esi],0x958d04ff
  42b901:	shl    BYTE PTR [eax+0x1216fff5],1
  42b907:	not    DWORD PTR [eax+0x78]
  42b90a:	mov    BYTE PTR [edx-0x7c7fb18b],bh
  42b910:	lods   al,BYTE PTR ds:[esi]
  42b911:	inc    ecx
  42b912:	stos   DWORD PTR es:[edi],eax
  42b913:	cmc    
  42b914:	push   eax
  42b915:	jae    0x42b948
  42b917:	or     bh,bh
  42b919:	dec    ecx
  42b91a:	push   ebx
  42b91b:	adc    BYTE PTR [eax+0x34],al
  42b91e:	cmp    BYTE PTR [edx-0x8fa36f1],0xff
  42b925:	repz fiadd WORD PTR [ecx]
  42b928:	xor    edi,ebp
  42b92a:	xchg   dl,dh
  42b92c:	add    al,BYTE PTR [ebx+0x52]
  42b92f:	ror    BYTE PTR [ebp+0x15f705bd],0x9c
  42b936:	aad    0x3a
  42b938:	add    BYTE PTR [ebp+0x284d464],bl
  42b93e:	test   BYTE PTR [ebx],0x7f
  42b941:	sti    
  42b942:	stos   BYTE PTR es:[edi],al
  42b943:	dec    edx
  42b944:	inc    DWORD PTR [ebp+eiz*8-0x1e8f04cb]
  42b94b:	aad    0x14
  42b94d:	adc    DWORD PTR [edx+0x6873003e],ebp
  42b953:	icebp  
  42b954:	and    eax,DWORD PTR [eax]
  42b956:	scas   eax,DWORD PTR es:[edi]
  42b957:	cdq    
  42b958:	inc    BYTE PTR [esi+0x573897e2]
  42b95e:	aam    0x1a
  42b960:	add    BYTE PTR [eax],al
  42b962:	push   edx
  42b963:	int3   
  42b964:	aad    0x38
  42b966:	xor    DWORD PTR ds:0xcba1750c,eax
  42b96c:	mov    esi,0x3e6448e6
  42b971:	adc    al,0xc6
  42b973:	sbb    al,0x50
  42b975:	dec    esp
  42b976:	in     eax,0x77
  42b978:	sbb    cl,BYTE PTR [eax+0x10]
  42b97b:	add    eax,0x75ad7a1d
  42b980:	in     al,dx
  42b981:	xchg   bl,ah
  42b983:	xlat   BYTE PTR ds:[ebx]
  42b984:	aad    0x33
  42b986:	xor    eax,0x99244acd
  42b98b:	aam    0xef
  42b98d:	imul   ecx,DWORD PTR [esi+0x5d84fe9b],0x2f
  42b994:	sub    DWORD PTR [ebx-0x6a],eax
  42b997:	sub    eax,0xc1436df4
  42b99c:	enter  0xdb86,0xaf
  42b9a0:	mov    esi,DWORD PTR [edi-0x57]
  42b9a3:	mov    al,0x5
  42b9a5:	push   eax
  42b9a6:	xor    bl,BYTE PTR [eax]
  42b9a8:	and    BYTE PTR [edx+ebp*1],cl
  42b9ab:	scas   eax,DWORD PTR es:[edi]
  42b9ac:	bound  ecx,QWORD PTR [edi]
  42b9ae:	fstp   st(3)
  42b9b0:	jg     0x42b971
  42b9b2:	nop
  42b9b3:	add    dh,bl
  42b9b5:	mov    ds,WORD PTR [esi+edi*8-0x70]
  42b9b9:	inc    edx
  42b9ba:	add    bl,dh
  42b9bc:	int    0x91
  42b9be:	push   ds
  42b9bf:	ficom  WORD PTR [edi-0x7c]
  42b9c2:	out    dx,al
  42b9c3:	inc    ebp
  42b9c4:	xchg   ebx,eax
  42b9c5:	out    0x3a,eax
  42b9c7:	xor    eax,DWORD PTR [edi]
  42b9c9:	jmp    0x1621dbfe
  42b9ce:	xor    dh,BYTE PTR [edx+0x1d6c15a9]
  42b9d4:	add    ebp,ecx
  42b9d6:	add    edi,DWORD PTR [ebx]
  42b9d8:	add    BYTE PTR [esi-0x16a56393],dh
  42b9de:	add    ebx,DWORD PTR [ebp-0x5aafb5be]
  42b9e4:	int    0xdb
  42b9e6:	adc    esp,DWORD PTR [ebx-0x457116be]
  42b9ec:	xor    DWORD PTR [edx],0xf0142eda
  42b9f2:	cmp    BYTE PTR [ecx-0xfe301aa],ch
  42b9f8:	repnz xchg esp,eax
  42b9fa:	icebp  
  42b9fb:	fstp   TBYTE PTR [edi-0x55]
  42b9fe:	repz ror ch,cl
  42ba01:	xchg   ebx,eax
  42ba02:	repz ja 0x42ba5c
  42ba05:	cmc    
  42ba06:	xor    DWORD PTR [esi-0x9],esi
  42ba09:	mov    esp,0x6c02aaf5
  42ba0e:	ret    
  42ba0f:	out    dx,al
  42ba10:	add    BYTE PTR [esi],dh
  42ba12:	add    al,0xef
  42ba14:	int    0xfb
  42ba16:	mov    ds:0x83e942a0,eax
  42ba1b:	push   ebx
  42ba1c:	add    ebx,DWORD PTR [ebp+0xc]
  42ba1f:	add    BYTE PTR [esi+0x57],al
  42ba22:	loope  0x42ba0f
  42ba24:	fwait
  42ba25:	pop    esp
  42ba26:	ret    
  42ba27:	(bad)  
  42ba29:	js     0x42b9d0
  42ba2b:	cmp    eax,0xe4ffc0c8
  42ba30:	sahf   
  42ba31:	aaa    
  42ba32:	xchg   DWORD PTR [ebp-0x25accc32],edi
  42ba38:	cmc    
  42ba39:	das    
  42ba3a:	push   ebx
  42ba3b:	adc    esp,DWORD PTR [eax+0x76e86631]
  42ba41:	add    al,BYTE PTR [eax]
  42ba43:	jmp    0xf1b78266
  42ba48:	aad    0xf5
  42ba4a:	das    
  42ba4b:	fistp  DWORD PTR [esi+0x2]
  42ba4e:	mov    DWORD PTR [edi],ebp
  42ba50:	xchg   ecx,eax
  42ba51:	dec    ebp
  42ba52:	clc    
  42ba53:	outs   dx,BYTE PTR ds:[esi]
  42ba54:	ins    DWORD PTR es:[edi],dx
  42ba55:	push   edx
  42ba56:	lea    esi,[esi+esi*8-0x45a1afcf]
  42ba5d:	and    al,0xe
  42ba5f:	test   eax,0xd5bf879e
  42ba64:	jbe    0x42ba71
  42ba66:	jge    0x42baad
  42ba68:	bound  edi,QWORD PTR ds:0x79c6a487
  42ba6e:	inc    ecx
  42ba6f:	in     eax,dx
  42ba70:	add    ecx,0xa27e574
  42ba76:	out    0xda,eax
  42ba78:	add    BYTE PTR [edi],al
  42ba7a:	push   0x2aee9
  42ba7f:	mov    ecx,0x514c7cd
  42ba84:	add    BYTE PTR [esi+0xc],ch
  42ba87:	add    BYTE PTR [eax-0x61],dh
  42ba8a:	adc    eax,ebx
  42ba8c:	jne    0x42ba1c
  42ba8e:	das    
  42ba8f:	lea    esp,[esi+edx*4+0x5a77fb31]
  42ba96:	cmp    al,0xfb
  42ba98:	pop    edi
  42ba99:	mov    eax,ds:0x531514c7
  42ba9e:	or     al,0x0
  42baa0:	ins    BYTE PTR es:[edi],dx
  42baa1:	pop    esi
  42baa2:	push   eax
  42baa3:	or     al,0x62
  42baa5:	jnp    0x42baa1
  42baa7:	add    BYTE PTR ss:[edx-0x5bfb8afe],al
  42baae:	add    bl,ah
  42bab0:	sbb    esp,ebx
  42bab2:	push   es
  42bab3:	add    BYTE PTR [eax],0x4
  42bab6:	adc    esi,edi
  42bab8:	ss cmp ebx,ebp
  42babb:	ficom  DWORD PTR [ecx]
  42babd:	mov    ah,0x6
  42babf:	div    DWORD PTR [esi-0x4]
  42bac2:	stos   BYTE PTR es:[edi],al
  42bac3:	adc    esp,DWORD PTR [eax+0x32003ff6]
  42bac9:	inc    esp
  42baca:	or     ecx,ecx
  42bacc:	ret    0x0
  42bacf:	dec    esi
  42bad0:	mov    esp,DWORD PTR [esi+edi*2+0x0]
  42bad4:	test   DWORD PTR [esp+edi*1],eax
  42bad7:	push   es
  42bad8:	push   0xfffa7fc4
  42badd:	out    dx,al
  42bade:	dec    DWORD PTR [edi-0x1]
  42bae1:	rcr    edi,0xf
  42bae4:	inc    eax
  42bae5:	les    edi,FWORD PTR [esi+0x70]
  42bae8:	or     BYTE PTR [eax],al
  42baea:	inc    ecx
  42baeb:	mov    cl,0x6e
  42baed:	pop    es
  42baee:	adc    ch,BYTE PTR [ebx+0x3fc6a013]
  42baf4:	add    BYTE PTR [esi-0x39],bl
  42baf7:	sbb    al,0x83
  42baf9:	in     al,dx
  42bafa:	add    eax,0x74040ae4
  42baff:	dec    DWORD PTR [edx+0x56]
  42bb02:	inc    ebx
  42bb03:	test   BYTE PTR [ebx-0xa557010],al
  42bb09:	push   eax
  42bb0a:	or     al,0xb1
  42bb0c:	cli    
  42bb0d:	push   DWORD PTR [edx+ebp*4+0x13]
  42bb11:	sbb    BYTE PTR [edi+0x3f],al
  42bb14:	add    BYTE PTR [eax+0x9],cl
  42bb17:	mov    esp,0x3c44fffa
  42bb1c:	ins    BYTE PTR es:[edi],dx
  42bb1d:	xor    esi,DWORD PTR [edx-0x4d]
  42bb20:	jae    0x42bb2a
  42bb22:	popf   
  42bb23:	sar    DWORD PTR [esi+0x33bc3aa8],0x68
  42bb2a:	mov    ebp,0xb5004456
  42bb2f:	mov    DWORD PTR gs:[edi],edi
  42bb32:	popf   
  42bb33:	push   eax
  42bb34:	add    BYTE PTR [ecx],al
  42bb36:	popf   
  42bb37:	fld    DWORD PTR [edi-0x2d59ea44]
  42bb3d:	cli    
  42bb3e:	cmc    
  42bb3f:	jecxz  0x42bb80
  42bb41:	cli    
  42bb42:	add    bl,BYTE PTR [eax-0x40]
  42bb45:	nop    DWORD PTR [ecx-0x2e]
  42bb49:	jae    0x42bafd
  42bb4b:	push   eax
  42bb4c:	mov    ebx,0x6618004f
  42bb51:	aam    0xf6
  42bb53:	loop   0x42bba8
  42bb55:	xor    al,0xfb
  42bb57:	push   eax
  42bb58:	lods   eax,DWORD PTR ds:[esi]
  42bb59:	out    0x7d,al
  42bb5b:	aam    0x63
  42bb5d:	rol    DWORD PTR [ebp+ebx*8-0x6299e14c],cl
  42bb64:	sar    DWORD PTR [esi-0x1],0xba
  42bb68:	fsubr  DWORD PTR [eax+0x1]
  42bb6b:	inc    edi
  42bb6c:	fldcw  WORD PTR [eax+0x1]
  42bb6f:	xor    eax,0xddfffed9
  42bb74:	adc    edx,DWORD PTR [ecx+0xc]
  42bb77:	call   0x7ddb:0xdd0e0eaf
  42bb7e:	test   DWORD PTR [edx+0x1c41f06f],0x7affcbf2
  42bb88:	fcom   QWORD PTR [eax-0x6e]
  42bb8b:	scas   eax,DWORD PTR es:[edi]
  42bb8c:	sbb    esi,DWORD PTR [ebx]
  42bb8e:	pop    edx
  42bb8f:	(bad)  
  42bb90:	adc    bh,BYTE PTR [esi-0x2e9462f9]
  42bb96:	adc    al,0xfd
  42bb98:	lods   eax,DWORD PTR ds:[esi]
  42bb99:	add    BYTE PTR ds:0x34eae803,cl
  42bba0:	xor    BYTE PTR [esi-0x19],ch
  42bba3:	sbb    eax,0x3afff8d7
  42bba8:	retf   0x2e35
  42bbab:	into   
  42bbac:	ja     0x42bc19
  42bbae:	shl    DWORD PTR [ebx],cl
  42bbb0:	retf   0x33b9
  42bbb3:	add    BYTE PTR [ebp-0x62fc1730],dh
  42bbb9:	leave  
  42bbba:	sar    ebx,cl
  42bbbc:	mov    ds:0xc84be942,eax
  42bbc1:	iret   
  42bbc2:	call   0x3c9458ca
  42bbc7:	adc    ebp,edi
  42bbc9:	fcmove st,st(0)
  42bbcb:	lods   al,BYTE PTR ds:[esi]
  42bbcc:	test   ecx,0x777d6c18
  42bbd2:	sub    BYTE PTR [esi*2-0x62bc9c96],al
  42bbd9:	(bad)  
  42bbda:	in     al,0x4
  42bbdc:	popf   
  42bbdd:	add    dh,BYTE PTR [eax+ebx*4-0x2e]
  42bbe1:	(bad)  
  42bbe2:	pop    ecx
  42bbe3:	(bad)  
  42bbe4:	mov    edx,0xb7d5ad5e
  42bbe9:	test   DWORD PTR [edi+eax*1],esp
  42bbec:	xor    cl,dl
  42bbee:	inc    ecx
  42bbef:	dec    edi
  42bbf0:	cmp    BYTE PTR [ebp+0x21],0x33
  42bbf4:	adc    BYTE PTR [eax-0x366825c8],al
  42bbfa:	cwde   
  42bbfb:	(bad)  
  42bbfc:	or     ebx,edi
  42bbfe:	adc    BYTE PTR [esi-0x7fe6366e],dh
  42bc04:	inc    edx
  42bc05:	dec    esi
  42bc06:	loop   0x42bc71
  42bc08:	popf   
  42bc09:	leave  
  42bc0a:	xchg   ebx,eax
  42bc0b:	or     esi,DWORD PTR [esi-0x11]
  42bc0e:	and    al,0xf4
  42bc10:	stos   BYTE PTR es:[edi],al
  42bc11:	add    ah,BYTE PTR [ebx+eax*8-0x17]
  42bc15:	stc    
  42bc16:	jmp    FWORD PTR [esi+0x63cb1f00]
  42bc1c:	jnp    0x42bc23
  42bc1e:	pop    ss
  42bc1f:	rol    BYTE PTR [esi-0x6d],0x31
  42bc23:	leave  
  42bc24:	stos   DWORD PTR es:[edi],eax
  42bc25:	popf   
  42bc26:	add    dh,BYTE PTR [eax-0x7b31ba18]
  42bc2c:	test   eax,0x6a61edcd
  42bc31:	mov    DWORD PTR [esi*2+0x479599e0],ebx
  42bc38:	jmp    0x42bcb2
  42bc3a:	jg     0x42bc04
  42bc3c:	xor    eax,0xd7f949a5
  42bc41:	pop    ebx
  42bc42:	add    DWORD PTR [edx+0x6a],esp
  42bc45:	popa   
  42bc46:	(bad)  
  42bc47:	call   FWORD PTR [ebx]
  42bc49:	popf   
  42bc4a:	sbb    eax,eax
  42bc4c:	sub    esp,ebx
  42bc4e:	pop    ss
  42bc4f:	shr    BYTE PTR [edx+0xd872fac],0xbd
  42bc56:	not    BYTE PTR [ecx+0x1e]
  42bc59:	mov    bl,BYTE PTR [eax]
  42bc5b:	xlat   BYTE PTR ds:[ebx]
  42bc5c:	outs   dx,BYTE PTR ds:[esi]
  42bc5d:	ret    0xf60
  42bc60:	test   eax,0x64ef819e
  42bc65:	ror    DWORD PTR [ebp-0x2],cl
  42bc68:	popa   
  42bc69:	jmp    0x5bd1:0x1de7b2fb
  42bc70:	mov    ebp,0xef84994
  42bc75:	dec    ebp
  42bc76:	jmp    DWORD PTR [ecx+0x6c]
  42bc79:	popa   
  42bc7a:	dec    edi
  42bc7b:	sub    al,0x62
  42bc7d:	add    BYTE PTR [ecx+0x19],dh
  42bc80:	sar    BYTE PTR [eax+ebp*8+0x721e0179],0x10
  42bc88:	push   cs
  42bc89:	test   eax,0xef8479e
  42bc8e:	loop   0x42bc85
  42bc90:	add    BYTE PTR gs:[ecx+ebx*1-0x9],dh
  42bc95:	adc    eax,0x3ad380
  42bc9a:	leave  
  42bc9b:	mov    esi,0xcedc02e1
  42bca0:	outs   dx,BYTE PTR ds:[esi]
  42bca1:	pminub mm0,QWORD PTR [edi-0xa]
  42bca5:	je     0x42bcf3
  42bca7:	mov    DWORD PTR es:[esi],edi
  42bcaa:	mov    DWORD PTR [ebp+0x7321eafc],0xf825eff
  42bcb4:	add    bl,0x7f
  42bcb7:	(bad)  
  42bcb8:	(bad)  
  42bcb9:	(bad)  
  42bcba:	mov    ecx,0xd883e679
  42bcbf:	stos   DWORD PTR es:[edi],eax
  42bcc0:	jg     0x42bcae
  42bcc2:	pop    esp
  42bcc3:	add    al,BYTE PTR [eax]
  42bcc5:	add    dl,cl
  42bcc7:	adc    eax,0x43818068
  42bccc:	add    BYTE PTR [ebx+0x448d170d],cl
  42bcd2:	fcom   st(3)
  42bcd4:	dec    edx
  42bcd5:	call   0x3868ca
  42bcda:	dec    ecx
  42bcdb:	ret    
  42bcdc:	outs   dx,BYTE PTR ds:[esi]
  42bcdd:	jp     0x42bd50
  42bcdf:	inc    edi
  42bce0:	pop    ds
  42bce1:	adc    BYTE PTR [eax],al
  42bce3:	mov    dh,0x3
  42bce5:	add    BYTE PTR [eax+0x31],dl
  42bce8:	pop    es
  42bce9:	and    al,0xc
  42bceb:	hlt    
  42bcec:	scas   al,BYTE PTR es:[edi]
  42bced:	adc    ecx,DWORD PTR [eax-0x74ffbc4b]
  42bcf3:	fs cmp al,0xff
  42bcf7:	call   0xa8c74a5f
  42bcfc:	jmp    0xff27:0xdb84fff9
  42bd03:	ret    
  42bd04:	scas   al,BYTE PTR es:[edi]
  42bd05:	jle    0x42bcc7
  42bd07:	sub    ebp,esi
  42bd09:	mov    WORD PTR [ebp+ebx*4+0x72fe12b5],es
  42bd10:	fldcw  WORD PTR [esi]
  42bd12:	push   ebx
  42bd13:	sbb    BYTE PTR [ebp-0xe32efe6],dl
  42bd19:	(bad)  
  42bd1a:	repnz pop edx
  42bd1c:	sar    BYTE PTR [edi+edi*4-0x37],1
  42bd20:	mov    eax,0xc98183cc
  42bd25:	add    al,0x0
  42bd27:	popf   
  42bd28:	leave  
  42bd29:	push   edx
  42bd2a:	pop    es
  42bd2b:	sub    BYTE PTR ds:0x61450828,bl
  42bd31:	iret   
  42bd32:	cli    
  42bd33:	sub    dh,BYTE PTR [ecx+edi*8-0x4022674]
  42bd3a:	dec    edi
  42bd3b:	add    eax,0x12fa59b2
  42bd40:	mov    BYTE PTR es:[ebx],ah
  42bd43:	lods   eax,DWORD PTR ds:[esi]
  42bd44:	(bad)  
  42bd46:	inc    DWORD PTR [eax]
  42bd48:	ins    DWORD PTR es:[edi],dx
  42bd49:	bswap  edi
  42bd4b:	adc    al,0xd
  42bd4d:	retf   0x3e
  42bd50:	sbb    BYTE PTR [ecx-0x7fac5ca8],bl
  42bd56:	clc    
  42bd57:	mov    ecx,DWORD PTR [ecx+ebx*1-0x26e297fc]
  42bd5e:	(bad)  
  42bd5f:	jmp    FWORD PTR [edx+0x58]
  42bd62:	stc    
  42bd63:	imul   ebx,DWORD PTR [ecx-0x323dad02]
  42bd6a:	(bad)  
  42bd6b:	adc    BYTE PTR [ebp-0x27],bl
  42bd6e:	xchg   DWORD PTR [edi-0x408857ae],edi
  42bd74:	dec    ebx
  42bd75:	push   esp
  42bd76:	jmp    0x48969bd7
  42bd7b:	and    al,0xa5
  42bd7d:	fcomp  QWORD PTR [ebp+0x2ea7b943]
  42bd83:	call   0xd165c0e2
  42bd88:	xchg   edx,eax
  42bd8a:	sbb    DWORD PTR [eax-0x3f],ebx
  42bd8d:	cli    
  42bd8e:	add    cl,ch
  42bd90:	je     0x42bd5a
  42bd92:	or     edi,eax
  42bd94:	add    BYTE PTR [edi],al
  42bd96:	(bad)  
  42bd97:	sti    
  42bd98:	adc    BYTE PTR [bx+di],cl
  42bd9b:	lahf   
  42bd9c:	fwait
  42bd9d:	add    dh,dl
  42bd9f:	clc    
  42bda0:	sahf   
  42bda1:	icebp  
  42bda2:	test   al,0x3
  42bda4:	and    bl,al
  42bda6:	pop    esp
  42bda7:	stc    
  42bda8:	pop    edi
  42bda9:	inc    ebx
  42bdaa:	or     DWORD PTR [eax+0x0],esp
  42bdad:	std    
  42bdae:	inc    eax
  42bdaf:	jmp    0x4d61307e
  42bdb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bdb5:	push   0x7543aa02
  42bdba:	stc    
  42bdbb:	call   0x5e045ac3
  42bdc0:	or     DWORD PTR [eax],ebx
  42bdc2:	ret    
  42bdc3:	xor    al,0x29
  42bdc5:	and    dh,BYTE PTR ds:0xf9893ced
  42bdcb:	das    
  42bdcc:	pop    ecx
  42bdcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bdce:	xor    al,BYTE PTR [ecx-0x16fd8c92]
  42bdd4:	ficomp WORD PTR [edx+esi*1+0x27d8691]
  42bddb:	jmp    0x5b1d4ab2
  42bde0:	rcl    ecx,1
  42bde2:	lds    esp,FWORD PTR [ebp+0x29]
  42bde5:	popf   
  42bde6:	or     edx,0xb3c19d07
  42bdec:	jle    0x42bdb4
  42bdee:	add    DWORD PTR [edi+edi*8+0x33],0x2a03555f
  42bdf6:	pop    edi
  42bdf7:	inc    ecx
  42bdf8:	add    ecx,DWORD PTR [edi+0x2d]
  42bdfb:	outs   dx,BYTE PTR ds:[esi]
  42bdfc:	retf   
  42bdfd:	xor    BYTE PTR [ecx-0x1],0x35
  42be01:	outs   dx,DWORD PTR ds:[esi]
  42be02:	enter  0x3986,0x15
  42be06:	shl    DWORD PTR [ebx-0x4d],cl
  42be09:	loopne 0x42be15
  42be0b:	push   0x51d51
  42be10:	add    DWORD PTR [eax],0x49
  42be13:	xor    ebp,eax
  42be15:	xor    edx,ecx
  42be17:	add    al,BYTE PTR [eax]
  42be19:	ins    BYTE PTR es:[edi],dx
  42be1a:	pop    esi
  42be1b:	dec    esi
  42be1c:	xor    DWORD PTR [edx-0x1b],esi
  42be1f:	cli    
  42be20:	mov    bh,ch
  42be22:	sar    DWORD PTR [esi],cl
  42be24:	or     al,0x60
  42be26:	aam    0xfe
  42be28:	xchg   BYTE PTR [ecx+ecx*2],ch
  42be2b:	jp     0x42be6e
  42be2d:	in     eax,dx
  42be2e:	mov    ecx,0x74ed6600
  42be33:	jnp    0x42bea9
  42be35:	aad    0x54
  42be37:	ds clc 
  42be39:	jmp    0x42bdd9
  42be3b:	add    al,BYTE PTR [eax]
  42be3d:	jo     0x42bea6
  42be3f:	repnz out 0x65,eax
  42be42:	jg     0x42be46
  42be44:	add    BYTE PTR [edx+0x5f],ah
  42be47:	out    dx,al
  42be48:	mov    dh,dh
  42be4a:	or     ebp,0xdab4f0e6
  42be50:	and    dl,BYTE PTR [edi-0x729a381e]
  42be56:	lods   al,BYTE PTR ds:[esi]
  42be57:	ja     0x42becd
  42be59:	jge    0x42be1c
  42be5b:	es sti 
  42be5d:	jle    0x42be4b
  42be5f:	jnp    0x42be23
  42be61:	push   ss
  42be62:	(bad)  
  42be63:	mov    ebx,0x2f9eddbd
  42be68:	xchg   DWORD PTR [ebp+0x18],edx
  42be6b:	fst    DWORD PTR [edi]
  42be6d:	mov    edx,0xba51ad91
  42be72:	imul   esi,DWORD PTR ds:0x26002687,0x2d002028
  42be7c:	adc    esp,DWORD PTR [ecx+ecx*4]
  42be7f:	cmp    ebp,eax
  42be81:	out    0xcc,eax
  42be83:	bound  esi,QWORD PTR [edx+0x1b484f5]
  42be89:	test   BYTE PTR [eax+0x57000074],bh
  42be8f:	or     DWORD PTR [eax+ebp*8],ebp
  42be92:	call   0x3918cf
  42be97:	add    BYTE PTR [edi-0x12c7bfb],bh
  42be9d:	(bad)  
  42be9e:	dec    ebp
  42bea0:	adc    esi,eax
  42bea2:	mov    DWORD PTR [ecx],ebp
  42bea4:	lods   al,BYTE PTR ds:[esi]
  42bea5:	loope  0x42bea9
  42bea7:	pop    es
  42bea8:	xchg   edi,eax
  42bea9:	fs add eax,0x50f83cc9
  42beaf:	jae    0x42be57
  42beb1:	mov    dh,0x66
  42beb3:	dec    edx
  42beb4:	mov    bl,0x31
  42beb6:	ret    
  42beb7:	dec    ebx
  42beb8:	jl     0x42be3d
  42beba:	add    BYTE PTR [eax+eax*1],dh
  42bebd:	jnp    0x42beb7
  42bebf:	add    DWORD PTR ds:0xb6c18b5a,ebp
  42bec5:	sub    DWORD PTR [edi-0x14],eax
  42bec8:	inc    ebp
  42bec9:	inc    esi
  42beca:	sbb    ah,ah
  42becc:	add    al,0xfc
  42bece:	xor    edx,DWORD PTR [edx]
  42bed0:	inc    edi
  42bed1:	rol    DWORD PTR [ebx],cl
  42bed3:	test   eax,0xc4587ae
  42bed8:	iret   
  42bed9:	jae    0x42becf
  42bedb:	add    BYTE PTR [edi-0x42],dh
  42bede:	add    eax,DWORD PTR [ebx+0x75330032]
  42bee4:	sbb    BYTE PTR [ebx],ch
  42bee6:	cmp    al,0x72
  42bee8:	shl    esi,0x5c
  42beeb:	call   0x7fabd3
  42bef0:	les    ebx,FWORD PTR [edi-0x4628906]
  42bef6:	pop    ecx
  42bef7:	add    BYTE PTR [ebx-0x78],dl
  42befa:	jnp    0x42bebe
  42befc:	mov    ch,0x68
  42befe:	push   0xbf5d9afa
  42bf03:	jae    0x42bee3
  42bf05:	pop    eax
  42bf06:	dec    eax
  42bf07:	and    BYTE PTR [edx+eiz*2+0x6614f02a],bl
  42bf0e:	sar    BYTE PTR [esi-0x2e],cl
  42bf11:	mov    ebp,0xedd8f1fe
  42bf16:	std    
  42bf17:	je     0x42bf26
  42bf19:	pop    eax
  42bf1a:	dec    edx
  42bf1b:	clc    
  42bf1c:	popf   
  42bf1d:	inc    ebx
  42bf1e:	jge    0x42bf1a
  42bf20:	loop   0x42bed3
  42bf22:	fild   DWORD PTR [esi+ecx*4-0x2f04cc10]
  42bf29:	int    0x76
  42bf2b:	ret    0x2642
  42bf2e:	aam    0xe7
  42bf30:	jge    0x42bf6d
  42bf32:	retf   0x19fa
  42bf35:	cdq    
  42bf36:	push   edi
  42bf37:	adc    BYTE PTR [edx],ch
  42bf39:	in     al,dx
  42bf3a:	retf   0xd514
  42bf3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf3e:	add    BYTE PTR ds:[eax],al
  42bf41:	and    BYTE PTR [ecx-0x25b2fba9],bl
  42bf47:	aad    0xfd
  42bf49:	int3   
  42bf4a:	cdq    
  42bf4b:	sub    DWORD PTR [edi-0x2c],edx
  42bf4e:	xchg   edi,eax
  42bf4f:	xor    al,0x52
  42bf51:	push   edx
  42bf52:	out    dx,eax
  42bf53:	adc    ebp,eax
  42bf55:	call   0x5799:0x20fad06e
  42bf5c:	sbb    dl,BYTE PTR [esi]
  42bf5e:	or     eax,0xd11e1428
  42bf63:	leave  
  42bf64:	jle    0x42bfcb
  42bf66:	loope  0x42bf31
  42bf68:	jle    0x42bfbf
  42bf6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf6b:	leave  
  42bf6c:	jle    0x42bfab
  42bf6e:	add    bh,cl
  42bf70:	add    edi,DWORD PTR [edx]
  42bf72:	(bad)  
  42bf73:	cmc    
  42bf74:	add    esp,DWORD PTR [edx+edi*1]
  42bf77:	icebp  
  42bf78:	jp     0x42bf34
  42bf7a:	(bad)  
  42bf7b:	out    0x12,al
  42bf7d:	scas   eax,DWORD PTR es:[edi]
  42bf7e:	jl     0x42bfba
  42bf80:	pop    ecx
  42bf81:	mov    eax,ds:0xa8db28f5
  42bf86:	lea    ebp,[edi+eiz*1+0x7d2a8dad]
  42bf8d:	pushf  
  42bf8e:	stos   BYTE PTR es:[edi],al
  42bf8f:	ds into 
  42bf91:	ja     0x42bf55
  42bf93:	fs (bad) 
  42bf95:	jmp    0xd378c0a3
  42bf9a:	ror    DWORD PTR [ecx],0xdb
  42bf9d:	jle    0x42bf2d
  42bf9f:	sub    ch,BYTE PTR [edi]
  42bfa1:	neg    DWORD PTR [ebx+0x27]
  42bfa4:	cld    
  42bfa5:	add    BYTE PTR [edx+0x57],dl
  42bfa8:	pop    esi
  42bfa9:	loopne 0x42bf76
  42bfab:	scas   al,BYTE PTR es:[edi]
  42bfac:	shl    BYTE PTR [edx],1
  42bfae:	out    dx,eax
  42bfaf:	(bad)  
  42bfb0:	sub    eax,DWORD PTR [eax]
  42bfb2:	int    0xc1
  42bfb4:	push   ebx
  42bfb5:	add    BYTE PTR [edx-0x4e30ca23],al
  42bfbb:	or     al,cl
  42bfbd:	cmp    DWORD PTR [ebp+0x2],esp
  42bfc0:	jmp    0xfe4d2141
  42bfc5:	ret    0x86a7
  42bfc8:	mov    eax,DWORD PTR [ebx]
  42bfca:	popf   
  42bfcb:	add    bh,BYTE PTR [edi]
  42bfcd:	add    dl,BYTE PTR [edx+0x55]
  42bfd0:	outs   dx,BYTE PTR ds:[esi]
  42bfd1:	mov    BYTE PTR [edx],0x83
  42bfd4:	add    ecx,esi
  42bfd6:	test   DWORD PTR [esi-0x72e10158],0x599d03e8
  42bfe0:	je     0x42c03a
  42bfe2:	lds    ebp,FWORD PTR [edx-0x3e289735]
  42bfe8:	jmp    FWORD PTR [esi+ebx*8+0x35]
  42bfec:	jge    0x42c050
  42bfee:	pop    ebx
  42bfef:	sbb    ch,BYTE PTR [edi]
  42bff1:	lods   al,BYTE PTR ds:[esi]
  42bff2:	mov    dh,0x88
  42bff4:	xor    al,0x1d
  42bff6:	scas   eax,DWORD PTR es:[edi]
  42bff7:	add    DWORD PTR [eax],eax
  42bff9:	pusha  
  42bffa:	push   ebp
  42bffb:	mov    dh,0x85
  42bffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bffe:	mov    dh,0x50
  42c000:	mov    BYTE PTR [esi+eiz*2-0x31c2bb72],ch
  42c007:	sub    BYTE PTR ds:0xb6d50064,al
  42c00d:	dec    edi
  42c00e:	cs stos DWORD PTR es:[edi],eax
  42c010:	mov    ebp,0x355e6cd1
  42c015:	cmp    ebp,DWORD PTR [edx-0x33]
  42c018:	mov    esi,0x51999c04
  42c01d:	lea    esp,[edx+edx*2+0x567cfb51]
  42c024:	mov    esp,0xf463ed74
  42c029:	cli    
  42c02a:	pop    ds
  42c02b:	adc    eax,0xc7c77381
  42c030:	inc    esi
  42c031:	or     BYTE PTR [eax],ah
  42c033:	loop   0x42bff3
  42c035:	je     0x42c036
  42c037:	sbb    eax,0x59e82044
  42c03c:	hlt    
  42c03d:	adc    BYTE PTR [esi],ch
  42c03f:	jne    0x42bffe
  42c041:	inc    edx
  42c042:	adc    eax,ebp
  42c044:	adc    eax,0x25edb2c
  42c049:	sti    
  42c04a:	cmp    al,0x9d
  42c04c:	stos   BYTE PTR es:[edi],al
  42c04d:	lods   eax,DWORD PTR cs:[esi]
  42c04f:	sar    BYTE PTR [ebx+0x20d5e8af],cl
  42c055:	dec    edi
  42c056:	sahf   
  42c057:	dec    edx
  42c058:	scas   al,BYTE PTR es:[edi]
  42c059:	xchg   BYTE PTR [esi-0x7e17ca28],ch
  42c05f:	retf   
  42c060:	and    al,0xfa
  42c062:	add    BYTE PTR [ebx],ah
  42c064:	iret   
  42c065:	sub    eax,0x9fce9ff
  42c06a:	inc    eax
  42c06b:	mov    ah,0xcd
  42c06d:	jae    0x42c07b
  42c06f:	add    BYTE PTR [esi*4+0x1443fdf6],bl
  42c076:	rcr    BYTE PTR [esi-0x21],0x7b
  42c07a:	mov    esp,0x82f7b408
  42c07f:	in     al,dx
  42c080:	aaa    
  42c081:	mov    ds:0xf10f530a,al
  42c086:	adc    edx,DWORD PTR [edi+0xf]
  42c089:	push   ecx
  42c08a:	adc    bl,ch
  42c08c:	mov    ds,WORD PTR [edx+0x5]
  42c08f:	lea    edi,[ecx]
  42c091:	int3   
  42c092:	dec    edx
  42c093:	push   esi
  42c094:	mov    WORD PTR [ebx-0x7e6c01a2],fs
  42c09a:	repnz add eax,0x45830c09
  42c0a0:	mov    WORD PTR [ecx],ss
  42c0a2:	ds sbb dh,cl
  42c0a5:	(bad)  
  42c0a6:	sti    
  42c0a7:	xor    al,BYTE PTR [edx]
  42c0a9:	lods   al,BYTE PTR ds:[esi]
  42c0aa:	mov    edx,DWORD PTR [eax+0x39]
  42c0ad:	cmp    eax,0xca37f07c
  42c0b2:	xchg   DWORD PTR [ebp+0x58],ebx
  42c0b5:	or     ecx,0x0
  42c0b8:	lods   eax,DWORD PTR ds:[esi]
  42c0b9:	dec    eax
  42c0ba:	clc    
  42c0bb:	mov    BYTE PTR [ecx+0x35c1f0d2],al
  42c0c1:	pop    ecx
  42c0c2:	add    al,0x85
  42c0c4:	inc    esp
  42c0c5:	pop    ecx
  42c0c6:	adc    eax,0x4ef3046a
  42c0cb:	mov    edi,DWORD PTR [edx]
  42c0cd:	fadd   QWORD PTR [edi+0x7ecf3264]
  42c0d3:	rol    BYTE PTR [eax],0x99
  42c0d6:	xchg   ebp,eax
  42c0d7:	sub    al,0xc0
  42c0d9:	mov    bl,0xe9
  42c0db:	enter  0x9dc3,0x24
  42c0df:	inc    edx
  42c0e0:	lock adc al,0xe8
  42c0e3:	sti    
  42c0e4:	xchg   BYTE PTR [eax+0x3d],ah
  42c0e7:	jbe    0x42c12a
  42c0e9:	mov    eax,ds:0x14104d32
  42c0ee:	sbb    al,bh
  42c0f0:	scas   eax,DWORD PTR es:[edi]
  42c0f1:	pushf  
  42c0f2:	test   ah,ah
  42c0f4:	push   eax
  42c0f5:	es jno 0x42c0ee
  42c0f8:	xchg   BYTE PTR [edx-0x53],ah
  42c0fb:	ja     0x42c0cc
  42c0fd:	jle    0x42c0f9
  42c0ff:	das    
  42c100:	push   edx
  42c101:	push   ds
  42c102:	push   esp
  42c103:	int3   
  42c104:	jae    0x42c10d
  42c106:	sub    eax,0xaa0704bf
  42c10b:	jg     0x42c0dd
  42c10d:	popf   
  42c10e:	call   0x6445:0x415a872e
  42c115:	jnp    0x42c0ff
  42c117:	cmp    BYTE PTR [edi+0x727776e9],0x8d
  42c11e:	les    edx,FWORD PTR [ebx+0x8]
  42c121:	push   ds
  42c122:	mov    edi,0xc7455204
  42c127:	(bad)  
  42c128:	cld    
  42c129:	push   edx
  42c12a:	xor    al,0xa7
  42c12c:	test   BYTE PTR [esi+0x3d],ah
  42c12f:	aas    
  42c130:	test   DWORD PTR [ebx+0x32],ecx
  42c133:	cli    
  42c134:	shr    BYTE PTR gs:[eax-0x70ffdc10],cl
  42c13b:	jmp    0xd8984043
  42c140:	fiadd  DWORD PTR [edi]
  42c142:	retf   
  42c143:	cld    
  42c144:	cs call 0xfb090f18
  42c14a:	(bad)  
  42c14b:	addr16 push eax
  42c14d:	sbb    eax,0x73c5aa77
  42c152:	mov    ecx,0x26c179d1
  42c157:	add    ch,BYTE PTR [esi-0x1705f924]
  42c15d:	add    esp,DWORD PTR [edx]
  42c15f:	dec    esi
  42c160:	int    0xf3
  42c162:	adc    eax,0x4ec46401
  42c167:	push   es
  42c168:	cmp    DWORD PTR ds:0xdc1609ba,eax
  42c16e:	mov    dl,0xbb
  42c170:	jae    0x42c13d
  42c172:	jo     0x42c136
  42c174:	or     ch,BYTE PTR [edi]
  42c176:	push   esp
  42c177:	(bad)  
  42c178:	lock add ecx,DWORD PTR [eax-0x75]
  42c17c:	dec    esp
  42c17d:	jg     0x42c1e0
  42c17f:	or     ah,BYTE PTR [esi-0x28]
  42c182:	xchg   edx,eax
  42c183:	push   ebx
  42c184:	pop    esi
  42c185:	sub    DWORD PTR [ecx+0x123225e1],ebp
  42c18b:	mov    ebx,0x8c1efb39
  42c190:	call   0x5c985e98
  42c195:	push   ecx
  42c196:	ins    DWORD PTR es:[edi],dx
  42c197:	stos   DWORD PTR es:[edi],eax
  42c198:	mov    esp,0x64be7766
  42c19d:	les    eax,FWORD PTR [eax]
  42c19f:	out    dx,al
  42c1a0:	ds into 
  42c1a2:	sub    BYTE PTR [ecx+0x36],ch
  42c1a5:	xchg   edx,eax
  42c1a6:	push   ebp
  42c1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1a8:	mov    DWORD PTR [ebx-0x6b87405],ebp
  42c1ae:	push   esi
  42c1af:	mov    eax,0x42d38b81
  42c1b4:	add    DWORD PTR [ebx-0x16d3c531],0x6db6a9ca
  42c1be:	ret    0x3827
  42c1c1:	(bad)  
  42c1c3:	add    eax,0x1ecacb22
  42c1c8:	ret    
  42c1c9:	cmp    al,0x36
  42c1cb:	jnp    0x42c1d4
  42c1cd:	ins    BYTE PTR es:[edi],dx
  42c1ce:	inc    eax
  42c1cf:	add    eax,0xe11e0053
  42c1d4:	gs pop esi
  42c1d6:	scas   eax,DWORD PTR es:[edi]
  42c1d7:	out    0x3c,eax
  42c1d9:	clc    
  42c1da:	in     al,dx
  42c1db:	dec    ebp
  42c1dc:	inc    ebx
  42c1dd:	xchg   DWORD PTR [ecx+ebx*8],edx
  42c1e0:	in     al,dx
  42c1e1:	jb     0x42c1d4
  42c1e3:	pusha  
  42c1e4:	inc    eax
  42c1e5:	sbb    cl,bl
  42c1e7:	pop    ebp
  42c1e8:	mov    esi,0xecd11c86
  42c1ed:	mov    edi,0x4bbd0472
  42c1f2:	jns    0x42c235
  42c1f4:	ss clc 
  42c1f6:	ficomp DWORD PTR [ebp-0x4a]
  42c1f9:	jle    0x42c223
  42c1fb:	popf   
  42c1fc:	cmp    eax,0x5799e9d0
  42c201:	lock fadd QWORD PTR [eax]
  42c204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c205:	test   BYTE PTR [ebp+edx*2-0x55],dl
  42c209:	push   edi
  42c20a:	or     al,0xbd
  42c20c:	or     BYTE PTR [edx+0x4709394c],0xf4
  42c213:	repnz fisttp QWORD PTR [esi]
  42c216:	jae    0x42c1fe
  42c218:	shl    BYTE PTR [edx+0x36],1
  42c21b:	mov    ah,0x76
  42c21d:	xor    edx,DWORD PTR [edi+0x575b5edb]
  42c223:	and    BYTE PTR [eax+0x5],bl
  42c226:	add    BYTE PTR [edi],dl
  42c228:	fnstsw WORD PTR [esi-0x79978400]
  42c22e:	icebp  
  42c22f:	jne    0x42c295
  42c231:	test   BYTE PTR [ecx+edi*8-0x3a],dh
  42c235:	inc    eax
  42c236:	adc    al,0x60
  42c238:	iret   
  42c239:	or     cl,BYTE PTR [ecx+0x4a8a353e]
  42c23f:	stc    
  42c240:	push   cs
  42c241:	add    ah,bh
  42c243:	mov    ah,0x72
  42c245:	test   ebx,ebp
  42c247:	bound  ebx,QWORD PTR [edi+0xa]
  42c24a:	xchg   DWORD PTR [eax],eax
  42c24c:	retf   0x81ba
  42c24f:	rcl    BYTE PTR [edi-0x1b13868f],1
  42c255:	test   esp,esi
  42c257:	push   DWORD PTR [eax-0x4aff9dad]
  42c25d:	test   BYTE PTR [edx+0x5cc80cc6],0xfe
  42c264:	or     eax,DWORD PTR [edx-0x63ff8b46]
  42c26a:	pop    esp
  42c26b:	add    eax,0x4ad2818d
  42c270:	push   esi
  42c271:	sub    al,0xb5
  42c273:	pop    ecx
  42c274:	dec    BYTE PTR [ebx-0x79]
  42c277:	repnz add eax,0x4e82f1b1
  42c27d:	pushf  
  42c27e:	adc    DWORD PTR [ebp-0xc],ecx
  42c281:	test   ebp,esi
  42c283:	repz mov ah,BYTE PTR [ebp+0x3c]
  42c287:	shl    BYTE PTR [edx],0x41
  42c28a:	enter  0x64,0xdb
  42c28e:	push   eax
  42c28f:	or     al,0xc
  42c291:	jne    0x42c25e
  42c293:	jo     0x42c29d
  42c295:	xchg   dh,al
  42c297:	add    BYTE PTR [ebp-0x54],0x3d
  42c29b:	shr    eax,0xc7
  42c29e:	and    al,0xf6
  42c2a0:	inc    DWORD PTR [eax]
  42c2a2:	(bad)  
  42c2a3:	outs   dx,BYTE PTR ds:[esi]
  42c2a4:	sub    eax,0x458d001e
  42c2a9:	test   al,0xf6
  42c2ab:	popa   
  42c2ac:	add    eax,0x50f3fbc9
  42c2b1:	dec    ebx
  42c2b2:	adc    dh,bh
  42c2b4:	adc    eax,0x3ab608
  42c2b9:	rol    esi,0x6e
  42c2bc:	adc    eax,0x5fc44c7
  42c2c1:	sar    DWORD PTR [ecx-0x2b62c90b],1
  42c2c7:	cmp    BYTE PTR [eax],ch
  42c2c9:	sbb    dh,BYTE PTR [edi+0x5d000e12]
  42c2cf:	test   eax,0x68d4008e
  42c2d4:	adc    al,0xc0
  42c2d6:	aam    0x68
  42c2d8:	jno    0x42c329
  42c2da:	or     BYTE PTR [ecx],ch
  42c2dc:	int    0xa
  42c2de:	mov    ds:0x9d013a2c,al
  42c2e3:	test   eax,0xef0823c7
  42c2e8:	mov    al,ds:0xc6299d3d
  42c2ed:	sub    cl,BYTE PTR [ecx-0x5d]
  42c2f0:	jle    0x42c2ea
  42c2f2:	ja     0x42c2a9
  42c2f4:	in     eax,0x7f
  42c2f6:	aam    0xc9
  42c2f8:	jle    0x42c2f2
  42c2fa:	cmp    al,0xdc
  42c2fc:	test   BYTE PTR [edi],ah
  42c2fe:	pushf  
  42c2ff:	test   eax,0x9fa47ffe
  42c304:	test   DWORD PTR [edx-0x1557e],0xfddbb607
  42c30e:	add    al,0xa4
  42c310:	es mov edi,0xc57f1a17
  42c316:	mov    ebp,0xef60cd29
  42c31b:	mov    ds:0xb4f7f57e,al
  42c320:	add    BYTE PTR [edx],0x9c
  42c323:	test   eax,0xcf647ffe
  42c328:	test   DWORD PTR [esi+edx*2-0x38000157],0xbf26de
  42c333:	sbb    eax,0x180b1802
  42c338:	add    edi,edi
  42c33a:	call   FWORD PTR [ebp+0x5e57f07f]
  42c340:	add    ch,BYTE PTR [ecx-0x33]
  42c343:	ja     0x42c350
  42c345:	fs in  eax,0x22
  42c348:	mov    ebx,0x5aae59e8
  42c34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c34e:	test   BYTE PTR ds:0x83003c57,dl
  42c354:	sbb    ah,BYTE PTR [ecx]
  42c356:	ret    
  42c357:	sbb    cl,al
  42c359:	in     al,0x23
  42c35b:	mov    ecx,0xb1003721
  42c360:	cmp    BYTE PTR [ebx],bl
  42c362:	in     al,dx
  42c363:	push   0xffffffb9
  42c365:	fadd   DWORD PTR [edi-0x68]
  42c368:	or     BYTE PTR [edi+0x690c570d],0xcd
  42c36f:	test   BYTE PTR [esi],dh
  42c371:	lock add ebp,0xffffffec
  42c375:	jmp    0xe944b5fa
  42c37a:	add    eax,DWORD PTR [ebx+0x17]
  42c37d:	adc    ebx,eax
  42c37f:	sbb    cl,al
  42c381:	hlt    
  42c382:	and    ebp,DWORD PTR [ecx+0x21]
  42c385:	xlat   BYTE PTR ds:[ebx]
  42c386:	jmp    DWORD PTR [esi+0x38]
  42c389:	fcmovnbe st,st(3)
  42c38b:	sbb    bh,BYTE PTR [eax+ebx*1+0x3f829848]
  42c392:	or     eax,0xcd68a107
  42c397:	add    BYTE PTR [esi+ebp*1-0x178a7bb8],dh
  42c39e:	mov    ah,0xa7
  42c3a0:	repnz mov ebx,0x2b1ef6d1
  42c3a6:	sbb    al,bh
  42c3a8:	or     DWORD PTR [bx],0xa
  42c3ac:	ror    DWORD PTR [ebx],1
  42c3ae:	imul   ecx,ebp,0x59802f97
  42c3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3b5:	pop    edx
  42c3b6:	es pop edx
  42c3b8:	mov    eax,ds:0x212a005a
  42c3bd:	mov    ebx,0x2032745c
  42c3c2:	push   ss
  42c3c3:	inc    ecx
  42c3c4:	pop    esi
  42c3c5:	cmp    bh,cl
  42c3c7:	sbb    ebp,edx
  42c3c9:	(bad)  
  42c3ca:	jg     0x42c39c
  42c3cc:	test   eax,0xd963113c
  42c3d1:	or     eax,0x28800520
  42c3d6:	add    al,0xfd
  42c3d8:	pusha  
  42c3d9:	xor    al,0x5
  42c3db:	imul   ebp,ecx,0x571c74ef
  42c3e1:	sbb    ebx,DWORD PTR [eax-0x56]
  42c3e4:	push   ds
  42c3e5:	mov    ebx,0xde62ee2a
  42c3ea:	cli    
  42c3eb:	xchg   esi,eax
  42c3ec:	jecxz  0x42c427
  42c3ee:	stc    
  42c3ef:	into   
  42c3f0:	bound  edi,QWORD PTR [eax+0x7f]
  42c3f3:	nop
  42c3f4:	scas   al,BYTE PTR es:[edi]
  42c3f5:	cmp    al,0xf0
  42c3f8:	push   ebx
  42c3f9:	jmp    0x86439863
  42c3fe:	jns    0x42c40a
  42c400:	aaa    
  42c401:	jmp    0x3f347a3f
  42c406:	inc    edx
  42c407:	add    cl,ch
  42c409:	dec    ebp
  42c40a:	in     al,0x7f
  42c40c:	push   eax
  42c40d:	mov    edi,0xb9c3a02f
  42c412:	pop    edx
  42c413:	mov    edi,0x7fd218f6
  42c418:	add    DWORD PTR [esi-0x6116bfa7],0x2e
  42c41f:	add    al,0xc3
  42c421:	mov    esi,0x5969bf5a
  42c426:	sbb    BYTE PTR [esi+eax*1+0x1e],dh
  42c42a:	mov    edx,0xe99f9d3a
  42c42f:	mov    edi,0xb20c5fa9
  42c434:	add    BYTE PTR [ebp+0x1408b485],ah
  42c43a:	inc    ebp
  42c43b:	add    BYTE PTR [eax],al
  42c43d:	mov    ecx,0x53e4e1d4
  42c442:	xchg   edi,ecx
  42c444:	cmp    dh,0xb5
  42c447:	pop    edx
  42c448:	inc    eax
  42c449:	xor    al,0x5
  42c44b:	je     0x42c451
  42c44d:	pop    esi
  42c44e:	in     al,0x57
  42c450:	ret    
  42c451:	test   ch,cl
  42c453:	sbb    DWORD PTR [eax+eax*2+0x7e],esi
  42c457:	idiv   DWORD PTR [edi]
  42c459:	leave  
  42c45a:	jb     0x42c43d
  42c45c:	lock add eax,DWORD PTR [edi+0x6e0080cf]
  42c463:	mov    dh,0x5a
  42c465:	inc    eax
  42c466:	hlt    
  42c467:	add    al,0x75
  42c469:	leave  
  42c46a:	je     0x42c439
  42c46c:	sbb    DWORD PTR [eax+ecx*1-0x25],esi
  42c470:	mov    ah,0x8b
  42c472:	and    eax,edx
  42c474:	mov    ds:0xa3d9b442,eax
  42c479:	inc    edx
  42c47a:	mov    ah,0xb9
  42c47c:	mov    al,ds:0xa0acc442
  42c481:	inc    edx
  42c482:	les    edx,FWORD PTR [edi]
  42c484:	sahf   
  42c485:	inc    edx
  42c486:	mov    ah,0x2a
  42c488:	mov    eax,ds:0xa133b442
  42c48d:	inc    edx
  42c48e:	test   BYTE PTR [esi-0x62],al
  42c491:	inc    edx
  42c492:	test   dh,ah
  42c494:	popf   
  42c495:	inc    edx
  42c496:	je     0x42c50f
  42c498:	mov    al,ds:0xa08d7442
  42c49d:	inc    edx
  42c49e:	test   BYTE PTR [ebx-0x60],dh
  42c4a1:	inc    edx
  42c4a2:	test   ah,bl
  42c4a4:	mov    al,ds:0x9db67442
  42c4a9:	inc    edx
  42c4aa:	je     0x42c454
  42c4ac:	popf   
  42c4ad:	inc    edx
  42c4ae:	popf   
  42c4af:	test   eax,0xa9dfa30e
  42c4b4:	sub    DWORD PTR [edi-0x81fd2c7],eax
  42c4ba:	push   ds
  42c4bb:	push   es
  42c4bc:	sbb    BYTE PTR [edi-0x78d02618],al
  42c4c2:	shl    BYTE PTR [ecx+0x2d00872c],1
  42c4c8:	sbb    eax,0xfdd988c4
  42c4cd:	jmp    0x42c457
  42c4cf:	popa   
  42c4d0:	add    eax,0xfd5988f4
  42c4d5:	out    0x88,eax
  42c4d7:	popa   
  42c4d8:	add    eax,0xd05b85f0
  42c4dd:	jbe    0x42c522
  42c4df:	shl    DWORD PTR [esi+edi*2+0x43a4b963],0x53
  42c4e7:	push   ss
  42c4e8:	fcomip st,st(7)
  42c4ea:	jae    0x42c486
  42c4ec:	fdivr  QWORD PTR [esi-0x1459b18]
  42c4f2:	call   FWORD PTR [eax]
  42c4f4:	arpl   WORD PTR [ecx+0x45],cx
  42c4f7:	pop    ss
  42c4f8:	lock inc BYTE PTR [ebx-0x7fec522c]
  42c4ff:	mov    ah,0xab
  42c501:	dec    esp
  42c502:	jmp    0x743df824
  42c507:	shr    DWORD PTR [ecx],0xc6
  42c50a:	adc    BYTE PTR [ecx],ch
  42c50c:	clc    
  42c50d:	jle    0x42c507
  42c50f:	fcom   st(6)
  42c511:	out    0x86,eax
  42c513:	fidiv  WORD PTR [ecx+0x1d11bf79]
  42c519:	js     0x42c4e4
  42c51b:	sbb    BYTE PTR [ecx],0x7a
  42c51e:	mov    edi,0x4178e4f1
  42c523:	mov    bh,ch
  42c525:	jl     0x42c532
  42c527:	mov    ds:0x3d7102,al
  42c52c:	mov    gs,WORD PTR [ebx+0x6251f59]
  42c532:	loope  0x42c5af
  42c534:	fmul   QWORD PTR [edi]
  42c536:	(bad)  
  42c537:	ret    
  42c538:	mov    ch,BYTE PTR [ecx-0x48bd0d18]
  42c53e:	outs   dx,BYTE PTR ds:[esi]
  42c53f:	cmp    eax,0x4ec2f69c
  42c544:	cdq    
  42c545:	mov    DWORD PTR [edi+ebx*1-0x77],ebp
  42c549:	neg    BYTE PTR [eax]
  42c54b:	cmp    DWORD PTR [ecx-0x5117a377],ebx
  42c551:	out    0xfc,al
  42c553:	jmp    DWORD PTR [edi+ebp*1-0x2179731b]
  42c55a:	or     BYTE PTR [ecx+0x4070079e],dl
  42c560:	rcl    DWORD PTR [edx],0x60
  42c563:	dec    eax
  42c564:	mov    ecx,0x97bbedde
  42c569:	jle    0x42c54f
  42c56b:	adc    bl,BYTE PTR [ebp-0x63bd96fe]
  42c571:	cli    
  42c572:	pop    esi
  42c573:	and    ecx,DWORD PTR [esi+0x12]
  42c576:	mov    cl,BYTE PTR [edx-0x5f]
  42c579:	add    DWORD PTR [edx],0xe8429d08
  42c57f:	add    esp,DWORD PTR [esi-0x62ecff81]
  42c585:	add    bl,BYTE PTR [esi+0x41]
  42c588:	xchg   ebp,eax
  42c589:	pop    es
  42c58a:	fwait
  42c58b:	dec    edx
  42c58c:	pushf  
  42c58d:	dec    edx
  42c58e:	mov    sp,0xd900
  42c592:	add    eax,0x2a7b06a
  42c597:	jmp    0xdbc2845e
  42c59c:	jl     0x42c55e
  42c59e:	add    ch,BYTE PTR [ecx-0x41]
  42c5a1:	test   eax,0x2d6d0005
  42c5a6:	or     al,0x0
  42c5a8:	jmp    0xf64872cb
  42c5ad:	sbb    dl,ch
  42c5af:	or     ecx,ebp
  42c5b1:	sahf   
  42c5b2:	and    BYTE PTR [ecx],0xea
  42c5b5:	sbb    ecx,DWORD PTR [eax+ecx*1+0xe]
  42c5b9:	and    cl,BYTE PTR [esp+ecx*1+0x6]
  42c5bd:	adc    eax,DWORD PTR [eax+eax*4]
  42c5c0:	add    ch,cl
  42c5c2:	or     DWORD PTR [edx+ebx*1-0x3afffd68],eax
  42c5c9:	jmp    0x1103:0xd4af017d
  42c5d0:	rcr    BYTE PTR [ecx-0x501b08cb],cl
  42c5d6:	jle    0x42c56e
  42c5d8:	out    0x9e,al
  42c5da:	add    al,BYTE PTR [eax-0x7af66f3e]
  42c5e0:	bound  esp,QWORD PTR [edi+0x64af0002]
  42c5e6:	add    esi,DWORD PTR [ebx]
  42c5e8:	ret    0x3581
  42c5eb:	div    esp
  42c5ed:	(bad)  
  42c5ee:	jle    0x42c579
  42c5f0:	repz sahf 
  42c5f2:	add    al,BYTE PTR [eax+0x9a00092]
  42c5f8:	test   DWORD PTR [edi-0x68],ebp
  42c5fb:	add    al,BYTE PTR [eax]
  42c5fd:	push   0xffffff82
  42c5ff:	ficom  WORD PTR [ebx]
  42c601:	jmp    0xbb4409ea
  42c606:	push   0x7e
  42c608:	xchg   BYTE PTR [esi],ah
  42c60a:	lea    edi,[edi-0x41]
  42c60d:	fnsave [edx-0x4afaac84]
  42c613:	jge    0x42c660
  42c615:	or     eax,0xb8c5dda9
  42c61a:	sbb    ecx,ebx
  42c61c:	cli    
  42c61d:	add    BYTE PTR [edx+ecx*4-0x78918b46],ah
  42c624:	inc    eax
  42c625:	pop    ss
  42c626:	mov    al,ds:0xfc04068a
  42c62b:	dec    ebx
  42c62c:	jp     0x7f66de64
  42c632:	int3   
  42c633:	cmp    eax,0x8a3b0f24
  42c638:	jns    0x42c63a
  42c63a:	xor    al,0x1
  42c63c:	jnp    0x42c6a2
  42c63e:	push   eax
  42c63f:	or     eax,0xc003e900
  42c644:	cmc    
  42c645:	inc    esp
  42c647:	je     0x42c663
  42c649:	xadd   ch,cl
  42c64c:	add    DWORD PTR [eax],eax
  42c64e:	xor    al,0x81
  42c650:	icebp  
  42c651:	or     DWORD PTR [ebx],ecx
  42c653:	jge    0x42c616
  42c655:	or     eax,DWORD PTR [ecx+eax*1]
  42c658:	mov    esi,0xa3f50046
  42c65d:	out    0x2c,eax
  42c65f:	fcmovnb st,st(2)
  42c661:	cmc    
  42c662:	sbb    bh,0x3
  42c665:	pop    es
  42c666:	test   DWORD PTR [ebx+0x7effffff],edx
  42c66c:	or     al,al
  42c66e:	call   0xf45ef69
  42c673:	inc    ecx
  42c674:	sub    eax,0xcac40002
  42c679:	inc    eax
  42c67a:	add    esp,ebp
  42c67c:	sub    BYTE PTR [ebx],cl
  42c67e:	jne    0x42c64e
  42c680:	cmp    BYTE PTR [eax+0x16],0xc1
  42c684:	in     al,dx
  42c685:	add    esi,DWORD PTR [ebx]
  42c687:	add    al,0x67
  42c689:	stc    
  42c68a:	xor    dh,ah
  42c68c:	cmp    eax,0x6b3e0c0
  42c691:	inc    esp
  42c692:	and    al,0x8b
  42c694:	mov    BYTE PTR [eax+0x17],al
  42c697:	popf   
  42c698:	and    BYTE PTR [ecx+0x10],cl
  42c69b:	and    dl,ch
  42c69d:	aaa    
  42c69e:	movlhps xmm5,xmm4
  42c6a1:	ror    bh,0x1e
  42c6a4:	push   edx
  42c6a5:	add    al,0x74
  42c6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6a8:	popa   
  42c6a9:	jne    0x419a94
  42c6af:	sbb    eax,0xe3857eac
  42c6b4:	lods   al,BYTE PTR ds:[esi]
  42c6b5:	loop   0x42c731
  42c6b7:	and    eax,0x9a0ae266
  42c6bc:	sbb    eax,0x4200f9ce
  42c6c1:	std    
  42c6c2:	mov    WORD PTR [ebx-0x7f],es
  42c6c5:	fldpi  
  42c6c7:	inc    esp
  42c6c8:	mov    eax,ds:0x9d0b3902
  42c6cd:	test   eax,0x1091448b
  42c6d2:	dec    eax
  42c6d3:	and    al,0xad
  42c6d5:	xor    BYTE PTR [ecx+0xc],dl
  42c6d8:	sahf   
  42c6d9:	out    0x13,al
  42c6db:	cdq    
  42c6dc:	push   ss
  42c6dd:	rol    BYTE PTR [ebp-0x72ee46bd],1
  42c6e3:	inc    ecx
  42c6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6e5:	add    cl,dl
  42c6e7:	jb     0x42c676
  42c6e9:	test   DWORD PTR ds:0xebfd6137,0xcf30956e
  42c6f3:	mov    BYTE PTR [ecx-0x43],ch
  42c6f6:	repnz out 0xa5,al
  42c6f9:	and    BYTE PTR [ebx+0x24],dl
  42c6fc:	jne    0x42c720
  42c6fe:	cmp    esp,DWORD PTR [ecx+ecx*4]
  42c701:	sub    BYTE PTR [ebx],bh
  42c703:	and    al,0x95
  42c705:	test   eax,0xae260831
  42c70a:	loop   0x42c71b
  42c70c:	adc    al,0xa6
  42c70e:	loop   0x42c727
  42c710:	jbe    0x42c714
  42c712:	daa    
  42c713:	sbb    al,0xe9
  42c715:	ficom  WORD PTR [ebx+ecx*4]
  42c718:	fmul   QWORD PTR [edx]
  42c71a:	pop    esi
  42c71b:	inc    edi
  42c71c:	rcl    DWORD PTR [edx],0x5c
  42c71f:	inc    edi
  42c720:	lods   eax,DWORD PTR ds:[esi]
  42c721:	mov    bl,0x6f
  42c723:	inc    edi
  42c724:	add    cl,al
  42c726:	adc    ch,BYTE PTR [esi+0x49]
  42c729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c72a:	pop    es
  42c72b:	sub    BYTE PTR [edx-0x7925f92c],cl
  42c731:	inc    DWORD PTR ds:0x3c5f03e9
  42c737:	call   0xcd815b3d
  42c73c:	sbb    edx,DWORD PTR [esi+0x47c19c7e]
  42c742:	mov    bl,0x6d
  42c744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c746:	xchg   DWORD PTR [ecx+0x7cc21817],esp
  42c74c:	out    dx,al
  42c74d:	and    ecx,DWORD PTR [esi-0x3b]
  42c750:	sbb    ebx,DWORD PTR [edx]
  42c752:	inc    esi
  42c753:	or     eax,0x27c8c214
  42c758:	push   ebp
  42c759:	sbb    al,ah
  42c75b:	rcl    esp,1
  42c75d:	and    edx,eax
  42c75f:	push   esp
  42c760:	or     bl,BYTE PTR [ebx]
  42c762:	cmp    al,0xda
  42c764:	out    0x1c,eax
  42c766:	push   es
  42c767:	jecxz  0x42c6f4
  42c769:	pop    esp
  42c76a:	or     ebx,DWORD PTR [edi+0x46]
  42c76d:	mov    ds,esi
  42c76f:	sub    DWORD PTR [esi+ebx*2+0x200ef1de],ecx
  42c776:	dec    eax
  42c777:	call   0xb2e8:0xc7ed7bf
  42c77e:	add    al,BYTE PTR [eax-0x7e4d38f2]
  42c784:	test   BYTE PTR [ebx+0x87ea04],dh
  42c78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c78b:	add    eax,0x829ee900
  42c790:	mul    bl
  42c792:	xchg   ebx,eax
  42c793:	jle    0x42c796
  42c795:	hlt    
  42c796:	sahf   
  42c797:	add    al,BYTE PTR [esi-0x7a195459]
  42c79d:	in     eax,0x94
  42c79f:	lock fcomp QWORD PTR [esi-0x5e503dfe]
  42c7a7:	mov    cl,0x85
  42c7a9:	(bad)  
  42c7aa:	and    eax,0x2d6d0aad
  42c7af:	(bad)  
  42c7b0:	(bad)  
  42c7b1:	call   0x3f3d83cd
  42c7b6:	and    al,0x72
  42c7b8:	jae    0x42c7ad
  42c7ba:	and    al,0x44
  42c7bc:	adc    ecx,ebp
  42c7be:	and    esi,edi
  42c7c0:	add    BYTE PTR [ecx-0x25],ah
  42c7c3:	adc    eax,0xe693af86
  42c7c8:	jp     0x42c83b
  42c7ca:	in     eax,0xe6
  42c7cc:	or     ah,dh
  42c7ce:	and    cl,cl
  42c7d0:	or     ebp,ecx
  42c7d2:	sahf   
  42c7d3:	mov    DWORD PTR [ebx+0xd],eax
  42c7d6:	mov    cl,0xe9
  42c7d8:	inc    esp
  42c7d9:	in     eax,dx
  42c7da:	pop    esi
  42c7db:	fwait
  42c7dc:	push   0x80029ee7
  42c7e1:	shr    BYTE PTR [edx+0x37],cl
  42c7e4:	push   es
  42c7e5:	jae    0x42c787
  42c7e7:	out    0xfc,al
  42c7e9:	in     eax,dx
  42c7ea:	cdq    
  42c7eb:	jp     0x42c7ee
  42c7ed:	ret    0x4d00
  42c7f0:	xor    dh,0x24
  42c7f3:	xchg   edx,eax
  42c7f4:	xchg   DWORD PTR [esp+esi*8],ecx
  42c7f7:	sahf   
  42c7f8:	add    al,BYTE PTR [eax+0x41c412c7]
  42c7fe:	call   FWORD PTR [esp+eax*8-0x3b6315bf]
  42c805:	inc    ecx
  42c806:	add    ch,al
  42c808:	adc    ebp,ecx
  42c80a:	xchg   edx,eax
  42c80b:	rol    BYTE PTR ds:0x4da8000,0x7b
  42c812:	dec    esi
  42c813:	mov    esp,0x904e7970
  42c818:	jo     0x42c894
  42c81a:	sti    
  42c81b:	mov    ?,ecx
  42c81d:	mov    eax,DWORD PTR [eax-0x788bed11]
  42c823:	hlt    
  42c824:	ins    BYTE PTR es:[edi],dx
  42c825:	inc    edx
  42c826:	wbinvd 
  42c828:	int    0x6
  42c82a:	add    BYTE PTR [edi+eax*8+0x5e790140],al
  42c831:	jae    0x42c832
  42c833:	mov    bl,0x70
  42c835:	jp     0x42c832
  42c837:	sbb    BYTE PTR [eax],al
  42c839:	test   DWORD PTR [ebp+eax*2-0x539fffb],ecx
  42c840:	add    eax,0x10de8fe
  42c845:	add    BYTE PTR [eax],al
  42c847:	les    ebp,FWORD PTR [esi+ecx*2+0xf]
  42c84b:	mov    ecx,0x340000eb
  42c850:	mov    DWORD PTR [eax+0x1],0x3d5e3b00
  42c857:	or     al,0x4
  42c859:	add    eax,0xffd4fb80
  42c85e:	test   BYTE PTR [eax-0xb],ch
  42c861:	add    al,0x0
  42c863:	(bad)  
  42c864:	mov    edx,0xf9e90805
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    BYTE PTR [ebx+ebp*2+0x58790f25],al
  42c872:	add    DWORD PTR [eax],eax
  42c874:	hlt    
  42c875:	mov    BYTE PTR [eax+0x1],0xcd
  42c879:	pop    ebx
  42c87a:	sbb    DWORD PTR [esp+eax*8],ecx
  42c87d:	add    al,0x8d
  42c87f:	inc    ebx
  42c880:	popf   
  42c881:	imul   edi,edi,0x8
  42c884:	dec    edx
  42c885:	in     eax,dx
  42c886:	and    DWORD PTR [ebx],ecx
  42c888:	sti    
  42c889:	pop    ebx
  42c88a:	and    DWORD PTR [edi-0x3b],edi
  42c88d:	push   0x24
  42c88f:	mov    DWORD PTR [ebx-0x35],esp
  42c892:	les    eax,FWORD PTR [ecx-0x64]
  42c895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c897:	add    ch,BYTE PTR [ecx-0x69800167]
  42c89d:	add    BYTE PTR [ebx],dh
  42c89f:	or     DWORD PTR [ebx+0x60],esp
  42c8a2:	std    
  42c8a3:	push   es
  42c8a4:	je     0x42c8f9
  42c8a6:	or     DWORD PTR [eax],eax
  42c8a8:	popf   
  42c8a9:	sbb    DWORD PTR [ecx-0x7bec0ed1],edi
  42c8af:	mul    BYTE PTR [eax+edi*2+0x681661e1]
  42c8b6:	push   cs
  42c8b7:	bound  eax,QWORD PTR [eax]
  42c8b9:	(bad)  
  42c8ba:	fld    DWORD PTR ds:0xc94fa262
  42c8c0:	popa   
  42c8c1:	sahf   
  42c8c2:	fisub  DWORD PTR [ecx]
  42c8c4:	jg     0x42c8fb
  42c8c6:	retf   0x8924
  42c8c9:	jecxz  0x42c894
  42c8cb:	jne    0x42c8af
  42c8cd:	sahf   
  42c8ce:	cdq    
  42c8cf:	(bad)  
  42c8d0:	popa   
  42c8d1:	data16 fimul DWORD PTR [edx+eax*4]
  42c8d5:	push   edi
  42c8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8d7:	(bad)  
  42c8d8:	jmp    DWORD PTR [edi]
  42c8da:	loopne 0x42c8f0
  42c8dc:	and    al,0x26
  42c8de:	sahf   
  42c8df:	pop    es
  42c8e0:	jmp    0x416f35
  42c8e5:	adc    ch,bl
  42c8e7:	sar    DWORD PTR [ebx],cl
  42c8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8ea:	lock stos BYTE PTR es:[edi],al
  42c8ec:	popa   
  42c8ed:	mov    ds:0x1e61c02f,al
  42c8f2:	ret    0x61ee
  42c8f5:	adc    al,0xe8
  42c8f7:	or     eax,0xe80263c2
  42c8fc:	pinsrw mm4,WORD PTR [ebp+ebp*8+0x3],0x9d
  42c902:	or     BYTE PTR [ebp-0x5d06b61d],0x45
  42c909:	pushf  
  42c90a:	std    
  42c90b:	(bad)  
  42c90c:	xchg   edi,eax
  42c90d:	fwait
  42c90e:	add    ch,cl
  42c910:	xor    DWORD PTR [ebx+0x22c6f4f2],0xffffffab
  42c917:	scas   eax,DWORD PTR es:[edi]
  42c918:	cmp    al,0x5d
  42c91a:	sub    BYTE PTR [esi+0x45],ch
  42c91d:	add    BYTE PTR [ebx-0x5f3c31d8],ah
  42c923:	sub    dl,ah
  42c925:	jge    0x42c982
  42c927:	sub    dh,ah
  42c929:	ret    0x83fc
  42c92c:	push   eax
  42c92d:	repz cld 
  42c92f:	jns    0x42c8d3
  42c931:	adc    DWORD PTR [edx+0x4d406389],eax
  42c937:	out    dx,al
  42c938:	fbstp  TBYTE PTR [eax+esi*4]
  42c93b:	sub    dl,dh
  42c93d:	jge    0x42c952
  42c93f:	sub    BYTE PTR [esi-0x55],ah
  42c942:	jp     0x42c96c
  42c944:	pusha  
  42c945:	inc    ebp
  42c946:	test   eax,0xa702a2c8
  42c94b:	cdq    
  42c94c:	fwait
  42c94d:	or     BYTE PTR [ebp-0x754796fe],bl
  42c953:	jmp    FWORD PTR [edi+ecx*2-0x66]
  42c957:	add    ch,cl
  42c959:	mov    DWORD PTR [edi+edx*1+0xd],ebx
  42c95d:	mov    BYTE PTR [esi-0x690c3002],ah
  42c963:	add    ch,cl
  42c965:	mov    bl,al
  42c967:	ror    BYTE PTR [ecx*1-0x70b51792],cl
  42c96e:	pop    esp
  42c96f:	push   ss
  42c970:	inc    ebx
  42c971:	das    
  42c972:	(bad)  
  42c974:	dec    DWORD PTR [esi-0x6a]
  42c977:	ins    BYTE PTR es:[edi],dx
  42c978:	mov    BYTE PTR [edi-0x5e],0xc1
  42c97c:	popa   
  42c97d:	push   0x1
  42c97f:	fistp  QWORD PTR [eax+0x2a20086]
  42c985:	add    BYTE PTR [edi],cl
  42c987:	adc    BYTE PTR [ecx+0x14],al
  42c98a:	pop    es
  42c98b:	mov    edx,0xb572c1
  42c990:	add    BYTE PTR [edi],al
  42c992:	jmp    0xe4394c35
  42c997:	jb     0x42c981
  42c999:	jg     0x42ca0d
  42c99b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c99c:	punpckhwd mm2,QWORD PTR ss:[edx+0xe]
  42c9a1:	jne    0x42c944
  42c9a3:	pop    edi
  42c9a4:	inc    esp
  42c9a5:	add    esi,esp
  42c9a7:	xor    DWORD PTR [ebp-0x7d6116fb],esi
  42c9ad:	div    ah
  42c9af:	lods   eax,DWORD PTR ds:[esi]
  42c9b0:	sti    
  42c9b1:	shl    DWORD PTR [edi+0x44e912a1],0x93
  42c9b8:	add    al,BYTE PTR [eax]
  42c9ba:	imul   ebx,DWORD PTR [edx],0xfd6c0b08
  42c9c0:	pop    es
  42c9c1:	add    cl,ch
  42c9c3:	pop    esp
  42c9c4:	inc    esp
  42c9c5:	add    esp,eax
  42c9c7:	icebp  
  42c9c8:	aam    0x5
  42c9ca:	jmp    0xf4394c6d
  42c9cf:	sbb    BYTE PTR [ebp+eax*4-0x6a197059],0xe5
  42c9d7:	sbb    BYTE PTR [ebx+0x29ee2c0],0x80
  42c9de:	loop   0x42c985
  42c9e0:	stc    
  42c9e1:	sub    DWORD PTR [eax+0x69000298],0x0
  42c9e8:	inc    ebx
  42c9e9:	or     BYTE PTR [ebx],cl
  42c9eb:	gs jbe 0x42c9f5
  42c9ee:	add    BYTE PTR [eax],al
  42c9f0:	add    al,0x82
  42c9f2:	and    BYTE PTR [ebx],al
  42c9f4:	ja     0x42ca31
  42c9f6:	or     bh,bh
  42c9f8:	ja     0x42ca35
  42c9fa:	or     al,0xff
  42c9fc:	les    eax,FWORD PTR ds:[esi]
  42c9ff:	and    BYTE PTR [eax-0x2f7df91a],bh
  42ca05:	cld    
  42ca06:	(bad)  
  42ca07:	(bad)  
  42ca08:	call   0xd8c9d0fc
  42ca0d:	cld    
  42ca0e:	(bad)  
  42ca0f:	jmp    FWORD PTR [ebx-0x7d3945d5]
  42ca15:	adc    BYTE PTR [eax],al
  42ca17:	(bad)  
  42ca18:	jb     0x42ca1f
  42ca1a:	add    DWORD PTR [ebx+0x48773c0c],eax
  42ca20:	jo     0x42ca63
  42ca22:	jnp    0x42ca0c
  42ca24:	aaa    
  42ca25:	fnsave [eax+ecx*2]
  42ca28:	pusha  
  42ca29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca2a:	jns    0x42ca14
  42ca2c:	xchg   ebp,ebx
  42ca2e:	and    BYTE PTR [eax+0x30],cl
  42ca31:	or     DWORD PTR [ebx-0x18],edi
  42ca34:	sbb    ch,0xc
  42ca37:	dec    eax
  42ca38:	jnp    0x42c9bc
  42ca3a:	fmul   DWORD PTR [edx]
  42ca3c:	inc    esp
  42ca3d:	add    DWORD PTR [esi-0x1d00adba],edi
  42ca43:	pop    edi
  42ca44:	add    BYTE PTR [ebx+0xe],0x9
  42ca48:	lahf   
  42ca49:	dec    esi
  42ca4a:	mov    esi,0x7320046
  42ca4f:	jecxz  0x42caa4
  42ca51:	add    BYTE PTR [ebx+0xe],0x1
  42ca55:	(bad)  
  42ca56:	cmp    bh,BYTE PTR [esi-0x1cfebdba]
  42ca5c:	inc    edi
  42ca5d:	ret    0xe43
  42ca60:	add    eax,0x46be40ef
  42ca65:	adc    bh,ch
  42ca67:	loop   0x42caa4
  42ca69:	popf   
  42ca6a:	sbb    BYTE PTR [edx+ecx*2+0x744c0971],ch
  42ca71:	(bad)  
  42ca72:	repz dec ebx
  42ca74:	je     0x42ca00
  42ca76:	repz das 
  42ca78:	adc    dl,BYTE PTR [ebp-0x11]
  42ca7b:	add    cl,BYTE PTR [eax-0x56]
  42ca7e:	es popf 
  42ca80:	add    eax,0x41c09b9d
  42ca85:	mov    bl,0x9d
  42ca87:	stos   DWORD PTR es:[edi],eax
  42ca88:	sbb    ebx,ebx
  42ca8a:	fmul   QWORD PTR ds:0xc0b4c603
  42ca90:	inc    ecx
  42ca91:	mov    ecx,esi
  42ca93:	stos   DWORD PTR es:[edi],eax
  42ca94:	pavgw  mm4,mm4
  42ca97:	or     eax,0xc0a0b60b
  42ca9c:	inc    ecx
  42ca9d:	mov    bl,0x98
  42ca9f:	stos   DWORD PTR es:[edi],eax
  42caa0:	add    ebx,DWORD PTR [ebx+0x5c]
  42caa3:	adc    BYTE PTR [edx],al
  42caa5:	arpl   WORD PTR [ebp+edi*8+0xd],sp
  42caa9:	je     0x42ca48
  42caab:	mov    cl,0xfa
  42caad:	jp     0x42cad5
  42caaf:	fisttp QWORD PTR [edx]
  42cab1:	add    BYTE PTR [ecx],bl
  42cab3:	ror    BYTE PTR [eax+eax*1],cl
  42cab6:	popf   
  42cab7:	das    
  42cab8:	dec    esi
  42cab9:	adc    dl,BYTE PTR [edx-0x5e793dd5]
  42cabf:	es pop esp
  42cac1:	lahf   
  42cac2:	ficomp WORD PTR [ecx-0x69820982]
  42cac8:	or     DWORD PTR [esi-0x4df8672d],eax
  42cace:	xor    al,0x1a
  42cad0:	clc    
  42cad1:	add    bl,BYTE PTR [ebp-0x1c3df9d2]
  42cad7:	call   0xfffe:0x9a25e913
  42cade:	daa    
  42cadf:	mov    WORD PTR [ebx],es
  42cae1:	or     ecx,DWORD PTR [ebx+0x3]
  42cae4:	loopne 0x42cae3
  42cae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cae7:	add    ebp,edx
  42cae9:	jg     0x42cae0
  42caeb:	add    ch,cl
  42caed:	add    ebx,DWORD PTR ds:0xc72ee3a9
  42caf3:	cmp    BYTE PTR [edi+0x68fc7002],0xbc
  42cafa:	pop    edx
  42cafb:	xor    eax,0x145cc1e0
  42cb00:	fsubr  DWORD PTR [edx+0x3e902ed]
  42cb06:	sbb    eax,0x1808e6aa
  42cb0b:	mov    ebx,esi
  42cb0d:	add    ebx,DWORD PTR [ebp-0x59ac727e]
  42cb13:	test   DWORD PTR [ecx+0xd],esi
  42cb16:	add    BYTE PTR [ebp-0x70be5cfe],bl
  42cb1c:	cli    
  42cb1d:	jg     0x42cb90
  42cb1f:	call   0xdbf8:0x8883e8ab
  42cb26:	dec    ecx
  42cb27:	sbb    eax,0xcc2ee7a9
  42cb2c:	or     BYTE PTR [ebp+0x48],0xf0
  42cb30:	stc    
  42cb31:	and    al,BYTE PTR [ecx-0x71]
  42cb34:	test   DWORD PTR [edi-0x67],0x83e8ab6a
  42cb3b:	add    DWORD PTR gs:[ecx+ebx*1+0x2ea3a71d],edi
  42cb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb44:	les    ebp,FWORD PTR [edx+0x6d999b11]
  42cb4a:	add    ebx,DWORD PTR [ebp-0x624596fe]
  42cb50:	xor    eax,0xdd2b83de
  42cb55:	jnp    0x42cb58
  42cb57:	pop    edi
  42cb58:	inc    esp
  42cb59:	rcl    DWORD PTR [edx+edi*1],cl
  42cb5c:	daa    
  42cb5d:	add    BYTE PTR [ecx+0x57],ch
  42cb60:	lods   eax,DWORD PTR ds:[esi]
  42cb61:	or     DWORD PTR [eax+ebx*2+0x4],esp
  42cb65:	add    cl,ch
  42cb67:	push   ds
  42cb68:	mov    ah,0x40
  42cb6a:	out    dx,al
  42cb6b:	sbb    eax,0x9ee905ea
  42cb70:	rol    BYTE PTR [ecx-0x9],0x8e
  42cb74:	mov    ds:0x228695e,eax
  42cb79:	jne    0x42cb8e
  42cb7b:	add    BYTE PTR [ecx],bl
  42cb7d:	mov    ch,0xfe
  42cb7f:	cmp    edi,DWORD PTR [edx+ebp*1+0x8c1bf7]
  42cb86:	ret    0x9b2f
  42cb89:	(bad)  
  42cb8a:	out    0x2f,al
  42cb8c:	sbb    DWORD PTR [esp+edx*2+0x41c0bb1c],esi
  42cb93:	div    DWORD PTR [edx-0x1996c15d]
  42cb99:	inc    ecx
  42cb9a:	or     esp,DWORD PTR [edi+edx*4+0x4]
  42cb9e:	add    cl,ch
  42cba0:	pop    eax
  42cba1:	inc    esp
  42cba2:	adc    dl,dh
  42cba4:	inc    edi
  42cba5:	idiv   BYTE PTR [edi+0x60]
  42cba8:	lahf   
  42cba9:	das    
  42cbaa:	adc    BYTE PTR [ecx+0x47],ch
  42cbad:	cld    
  42cbae:	je     0x42cb92
  42cbb0:	push   ds
  42cbb1:	mov    cl,0x4e
  42cbb3:	aam    0x70
  42cbb5:	les    eax,FWORD PTR [ecx-0x21]
  42cbb8:	cwde   
  42cbb9:	mov    eax,ds:0x620691a
  42cbbe:	or     ebp,DWORD PTR [edx+esi*8-0x5]
  42cbc2:	(bad)  
  42cbc3:	call   0xf64e7be6
  42cbc8:	sbb    eax,0x9ee90954
  42cbcd:	xor    dh,0xb9
  42cbd0:	mov    ds:0x9ee04c7f,eax
  42cbd5:	add    al,dl
  42cbd7:	add    dl,bh
  42cbd9:	test   DWORD PTR [esi+edi*8],0x3487675
  42cbe0:	add    BYTE PTR [ebp+0x40002ba],bl
  42cbe6:	xchg   cl,dh
  42cbe8:	and    BYTE PTR [ebx],dl
  42cbea:	sub    bh,BYTE PTR [edx+0x7b05f408]
  42cbf0:	jl     0x42cb9a
  42cbf2:	sahf   
  42cbf3:	cli    
  42cbf4:	je     0x42cbf2
  42cbf6:	jl     0x42cc36
  42cbf8:	and    al,0xc4
  42cbfa:	jbe    0x42cc3a
  42cbfc:	and    al,0x94
  42cbfe:	jle    0x42cc78
  42cc00:	push   ss
  42cc01:	leave  
  42cc02:	repnz add eax,esi
  42cc05:	jp     0x42cc06
  42cc07:	push   cs
  42cc08:	punpckhdq mm4,mm7
  42cc0b:	add    BYTE PTR [edx-0x91aa1f1],cl
  42cc11:	adc    esi,DWORD PTR [ecx-0x7e]
  42cc14:	inc    esi
  42cc15:	lds    esi,FWORD PTR [ecx+0x79390eff]
  42cc1b:	add    al,BYTE PTR [eax]
  42cc1d:	mov    ah,0x7b
  42cc1f:	inc    eax
  42cc20:	pop    ss
  42cc21:	push   0x1d0e067f
  42cc26:	lock or BYTE PTR [eax],al
  42cc29:	je     0x42cbb0
  42cc2b:	icebp  
  42cc2c:	or     ch,BYTE PTR [eax+0x60]
  42cc2f:	jp     0x42cc2c
  42cc31:	sbb    ecx,0xa5cf80e1
  42cc37:	outs   dx,BYTE PTR ds:[esi]
  42cc38:	in     eax,0xcf
  42cc3a:	mov    edx,0xd96efb7a
  42cc3f:	jo     0xbb6c6d4
  42cc45:	add    ah,al
  42cc47:	ins    BYTE PTR es:[edi],dx
  42cc48:	sbb    dh,BYTE PTR [ebp-0x3e]
  42cc4b:	addr16 inc eax
  42cc4d:	add    DWORD PTR [edi+0x5c],edx
  42cc50:	adc    dh,BYTE PTR [ebx]
  42cc52:	popf   
  42cc53:	fistp  DWORD PTR [ecx+ecx*4]
  42cc56:	fld    TBYTE PTR [ebx+0x1bc50928]
  42cc5c:	mov    dh,0xc
  42cc5e:	mov    ebx,0xaa0e3d32
  42cc63:	inc    esi
  42cc64:	mov    edi,0x3d23c103
  42cc69:	add    DWORD PTR [esi],edx
  42cc6b:	out    0xdf,eax
  42cc6d:	pop    ds
  42cc6e:	sbb    BYTE PTR [ebp+0x4],ch
  42cc71:	test   BYTE PTR [ebx+0x26fffea3],bh
  42cc77:	cmp    BYTE PTR [eax],al
  42cc79:	test   edx,ebp
  42cc7b:	out    0xeb,al
  42cc7d:	xchg   BYTE PTR [ecx-0x1],bl
  42cc80:	adc    esp,DWORD PTR [edi]
  42cc82:	fisttp WORD PTR [edx]
  42cc84:	mov    ecx,ecx
  42cc86:	ror    BYTE PTR [edi-0x4aae4086],cl
  42cc8c:	mov    BYTE PTR [ecx-0x56],al
  42cc8f:	mov    edi,0x239f0b80
  42cc94:	cmp    dl,BYTE PTR [ebx]
  42cc96:	daa    
  42cc97:	loope  0x42cca5
  42cc99:	and    al,0x2a
  42cc9b:	xor    eax,DWORD PTR [eax+0x24]
  42cc9e:	xchg   edx,eax
  42cc9f:	cwde   
  42cca0:	jns    0x42cce5
  42cca2:	xchg   esi,eax
  42cca3:	xor    DWORD PTR [ebp-0x21420682],esi
  42cca9:	inc    DWORD PTR [eax]
  42ccab:	jne    0x42cc44
  42ccad:	push   es
  42ccae:	add    BYTE PTR [ebp-0x55e046e7],bl
  42ccb4:	adc    eax,0x999d02b8
  42ccb9:	jle    0x42ccb1
  42ccbb:	aad    0xb0
  42ccbd:	jns    0x42cd14
  42ccbf:	xchg   ebp,eax
  42ccc0:	cdq    
  42ccc1:	inc    cl
  42ccc3:	jecxz  0x42cc5f
  42ccc5:	(bad)  
  42ccc7:	inc    edi
  42ccc8:	mov    eax,ds:0x31dfffe
  42cccd:	push   ds
  42ccce:	push   eax
  42cccf:	xchg   esi,eax
  42ccd0:	jge    0x42ccbf
  42ccd2:	mov    dh,0x37
  42ccd4:	test   al,0x2a
  42ccd6:	ds pushf 
  42ccd8:	(bad)  
  42ccda:	fistp  DWORD PTR [edi+0x2b83e902]
  42cce0:	dec    edi
  42cce1:	jmp    0xdcb4:0xf1a7157e
  42cce8:	inc    eax
  42cce9:	call   0xea03c2cb
  42ccee:	add    ebx,DWORD PTR [ebp-0x59ac227e]
  42ccf4:	jge    0x42ccbf
  42ccf6:	mov    bh,0xf7
  42ccf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccf9:	mov    ds:0xcfdf9c3d,al
  42ccfe:	outs   dx,DWORD PTR ds:[esi]
  42ccff:	lahf   
  42cd00:	add    ch,cl
  42cd02:	adc    ebx,0xffffffd7
  42cd05:	loope  0x42cd85
  42cd07:	jmp    0xdcf776b2
  42cd0c:	inc    eax
  42cd0d:	call   0x64f7cdfd
  42cd12:	loope  0x42cd17
  42cd14:	popf   
  42cd15:	jne    0x42cd3c
  42cd17:	lds    esi,FWORD PTR [esi-0x6]
  42cd1a:	fnstcw WORD PTR [ecx+ebx*8-0x55]
  42cd1e:	xor    DWORD PTR [esp+edi*1-0x33fc509],0xfcf38083
  42cd29:	jns    0x42cd4d
  42cd2b:	adc    al,0x5f
  42cd2d:	inc    eax
  42cd2e:	call   0xe1c7431d
  42cd33:	add    ebx,DWORD PTR [ebp-0x581ab27e]
  42cd39:	jge    0x42cda3
  42cd3b:	mov    eax,0x3d2aa767
  42cd40:	pushf  
  42cd41:	fmul   QWORD PTR [edi+0x33]
  42cd44:	sahf   
  42cd45:	add    al,BYTE PTR [eax]
  42cd47:	jmp    0xee12b567
  42cd4c:	xchg   edi,eax
  42cd4d:	sti    
  42cd4e:	add    BYTE PTR [edx-0x780553fb],0xa1
  42cd55:	ins    BYTE PTR es:[edi],dx
  42cd56:	mov    esi,0x2f9f1d8f
  42cd5b:	xchg   DWORD PTR [edi],edx
  42cd5d:	inc    ecx
  42cd5e:	push   cs
  42cd5f:	das    
  42cd60:	pusha  
  42cd61:	add    DWORD PTR [edi],esp
  42cd63:	adc    BYTE PTR [esi+0x3],ch
  42cd66:	add    cl,ch
  42cd68:	push   ds
  42cd69:	mov    al,0xc
  42cd6b:	je     0x42cd04
  42cd6d:	les    eax,FWORD PTR [ecx-0x18]
  42cd70:	loop   0x42cd0b
  42cd72:	cmp    eax,0x29e00e6
  42cd77:	adc    dl,0xf3
  42cd7a:	sti    
  42cd7b:	xor    DWORD PTR [ebp*1+0x79d0faac],0xffffffb0
  42cd83:	cli    
  42cd84:	mov    esi,0xe605b021
  42cd89:	sbb    al,BYTE PTR [esp+edi*8-0x52]
  42cd8d:	push   cs
  42cd8e:	jge    0x42cdd1
  42cd90:	(bad)  
  42cd91:	mov    edx,0x19f50b92
  42cd96:	adc    DWORD PTR [eax],ecx
  42cd98:	jmp    0xe884923b
  42cd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd9e:	cdq    
  42cd9f:	adc    esi,ebp
  42cda1:	sahf   
  42cda2:	add    cl,BYTE PTR [ebx]
  42cda4:	aaa    
  42cda5:	bound  eax,QWORD PTR [eax+0x42ece17f]
  42cdab:	add    BYTE PTR [ebp+0x61],ah
  42cdae:	stc    
  42cdaf:	sub    DWORD PTR [eax-0x6a],0x2
  42cdb3:	add    BYTE PTR [edx-0x53],ch
  42cdb6:	ficomp WORD PTR [ebx]
  42cdb8:	jmp    0x9dc9c872
  42cdbd:	xor    dh,0x88
  42cdc0:	add    BYTE PTR [eax],ch
  42cdc2:	sahf   
  42cdc3:	push   ss
  42cdc4:	pminub mm7,QWORD PTR [esi-0x43981787]
  42cdcb:	inc    eax
  42cdcc:	add    esi,DWORD PTR [esp+edi*4]
  42cdcf:	inc    eax
  42cdd0:	add    DWORD PTR [edx-0x12],ebp
  42cdd3:	sub    eax,DWORD PTR [ebx+0x1e74038c]
  42cdd9:	add    bh,al
  42cddb:	xchg   dh,bh
  42cddd:	jae    0x42ce03
  42cddf:	jmp    0xffff:0xfefa8506
  42cde6:	ret    0xfa38
  42cde9:	pop    es
  42cdea:	popf   
  42cdeb:	ret    0x0
  42cdee:	hlt    
  42cdef:	mov    ebx,0x86f30240
  42cdf4:	mov    ecx,0xbe020406
  42cdf9:	inc    esi
  42cdfa:	push   es
  42cdfb:	sti    
  42cdfc:	call   0x44d0bb
  42ce01:	(bad)  
  42ce02:	mov    dl,0xfc
  42ce04:	add    cl,ch
  42ce06:	push   ebp
  42ce07:	sti    
  42ce08:	(bad)  
  42ce09:	(bad)  
  42ce0a:	mov    ebx,0x348aba2b
  42ce0f:	test   eax,0x7db44058
  42ce14:	mov    edx,0xffaf400f
  42ce19:	inc    esp
  42ce1b:	add    BYTE PTR [esi+0x7ae6b64e],ch
  42ce21:	stc    
  42ce22:	scas   eax,DWORD PTR es:[edi]
  42ce23:	add    BYTE PTR [edi-0x6e],bh
  42ce26:	add    BYTE PTR [ecx],0x0
  42ce29:	jmp    DWORD PTR [eax-0x7e]
  42ce2c:	or     edi,DWORD PTR [edx+0x46f5feb6]
  42ce32:	ja     0x42cdc9
  42ce34:	gs psllw mm0,mm1
  42ce38:	clc    
  42ce39:	enter  0xf79d,0x1
  42ce3d:	jmp    0xfedc9942
  42ce42:	jmp    DWORD PTR [ebx+0x55]
  42ce45:	add    DWORD PTR [ebx+ecx*8],edi
  42ce48:	xchg   esp,eax
  42ce49:	xchg   edi,eax
  42ce4a:	mov    edi,0xfee2e353
  42ce4f:	xor    eax,0x9d000486
  42ce54:	fisttp QWORD PTR [eax-0x1]
  42ce57:	jbe    0x42cece
  42ce59:	xor    cl,BYTE PTR [edx]
  42ce5b:	jno    0x42cde4
  42ce5d:	std    
  42ce5e:	xchg   esp,eax
  42ce5f:	pop    ebp
  42ce60:	cmc    
  42ce61:	mov    dh,0x23
  42ce63:	fwait
  42ce64:	adc    ah,bh
  42ce66:	std    
  42ce67:	sbb    bl,BYTE PTR [ebx-0x6860be38]
  42ce6d:	fwait
  42ce6e:	inc    esi
  42ce6f:	mov    ds:0x5bf9fe9b,eax
  42ce74:	cwde   
  42ce75:	jl     0x42cec0
  42ce77:	sahf   
  42ce78:	sbb    esp,DWORD PTR [edi-0x3ceb5dfb]
  42ce7e:	(bad)  
  42ce7f:	jmp    0x8200:0xccb1ff9a
  42ce86:	adc    esi,DWORD PTR [ecx]
  42ce88:	fild   DWORD PTR [ebx]
  42ce8a:	or     ebx,DWORD PTR [eax]
  42ce8c:	and    eax,0x1b9d0004
  42ce91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce92:	or     BYTE PTR [edx-0x62fe17ea],dl
  42ce98:	fwait
  42ce99:	enter  0x9f41,0xa2
  42ce9d:	xchg   ebp,eax
  42ce9e:	push   ss
  42ce9f:	mov    ds:0xf9fe9b,eax
  42cea4:	pop    ebx
  42cea5:	cwde   
  42cea6:	jl     0x42cef1
  42cea8:	sahf   
  42cea9:	sbb    DWORD PTR [edi-0x6ceb5df1],esp
  42ceaf:	dec    DWORD PTR [edx+0x6cb1ff9a]
  42ceb5:	add    ebx,DWORD PTR [edi]
  42ceb7:	xchg   BYTE PTR [edx-0x59fc5772],bl
  42cebd:	jge    0x42cf29
  42cebf:	add    al,0x9d
  42cec1:	add    ch,BYTE PTR [ecx-0x55]
  42cec4:	xchg   edi,eax
  42cec5:	xchg   edi,eax
  42cec6:	xor    dh,BYTE PTR [edx+0x426effdc]
  42cecc:	push   edx
  42cecd:	and    al,0x30
  42cecf:	add    cl,dh
  42ced1:	sub    al,0xda
  42ced3:	jns    0x42cf42
  42ced5:	jmp    0x4351c740
  42ceda:	jmp    0xfc58915
  42cedf:	call   DWORD PTR [edi-0x62f8d083]
  42cee5:	add    ch,BYTE PTR [ebx]
  42cee7:	dec    edx
  42cee8:	sbb    edi,edx
  42ceea:	paddq  mm3,QWORD PTR [ecx+0x5cb1e902]
  42cef1:	call   FWORD PTR [esi+0x42]
  42cef4:	add    ah,BYTE PTR [eax+eiz*8]
  42cef7:	adc    ch,BYTE PTR [esi+0x34]
  42cefa:	jmp    0x1147:0x66e8cd79
  42cf01:	inc    ebx
  42cf02:	jmp    0xbfc5713d
  42cf07:	adc    eax,DWORD PTR [eax]
  42cf09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf0a:	jge    0x42cf83
  42cf0c:	push   es
  42cf0d:	popf   
  42cf0e:	add    ch,BYTE PTR [ebx-0x400734b7]
  42cf14:	pop    ebx
  42cf15:	cdq    
  42cf16:	add    ch,cl
  42cf18:	mov    cl,0x5c
  42cf1a:	jmp    FWORD PTR [esi+0x41]
  42cf1d:	mov    dl,0x23
  42cf1f:	nop
  42cf20:	or     BYTE PTR [esi],ch
  42cf22:	(bad)  
  42cf24:	jns    0x42cef3
  42cf26:	call   0x42741a91
  42cf2b:	jmp    0xffc57966
  42cf30:	outs   dx,DWORD PTR ds:[esi]
  42cf31:	xchg   esp,eax
  42cf32:	test   DWORD PTR [eax+eiz*2+0x2f00029b],0x5006a4e4
  42cf3d:	push   ds
  42cf3e:	(bad)  
  42cf3f:	(bad)  
  42cf40:	call   0xde627b63
  42cf45:	sbb    dh,BYTE PTR [eax]
  42cf47:	add    eax,0x41c09ee9
  42cf4c:	jmp    0x42ceec
  42cf4e:	cdq    
  42cf4f:	imul   ebp,esp,0x3280029e
  42cf55:	xor    BYTE PTR [esi],ch
  42cf57:	dec    ecx
  42cf58:	das    
  42cf59:	in     al,0x1
  42cf5b:	sub    esi,DWORD PTR [edx-0x36]
  42cf5e:	ficomp WORD PTR [ebx]
  42cf60:	ins    BYTE PTR es:[edi],dx
  42cf61:	push   eax
  42cf62:	clc    
  42cf63:	xor    DWORD PTR [eax+0x7200029b],0xffffffcd
  42cf6a:	cli    
  42cf6b:	test   dh,bh
  42cf6d:	add    bl,cl
  42cf6f:	fiadd  DWORD PTR [esi+0x26f302ad]
  42cf75:	sub    ebp,DWORD PTR [esi+0x7b]
  42cf78:	leave  
  42cf79:	out    0xd2,al
  42cf7b:	jge    0x42cf3c
  42cf7d:	push   ebp
  42cf7e:	idiv   DWORD PTR [ecx+eax*2-0x2]
  42cf82:	add    ah,BYTE PTR [esp+ecx*1]
  42cf85:	jmp    0xf63:0x73134166
  42cf8c:	and    al,0x3e
  42cf8e:	push   ecx
  42cf8f:	aas    
  42cf90:	and    al,0xe6
  42cf92:	retf   
  42cf93:	jge    0x42cfef
  42cf95:	mov    cl,0xf2
  42cf97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf98:	jle    0x42cfa7
  42cf9a:	lds    eax,FWORD PTR [esi]
  42cf9c:	add    BYTE PTR [eax-0x17000247],dl
  42cfa2:	push   ds
  42cfa3:	lods   al,BYTE PTR ds:[esi]
  42cfa4:	or     al,0x14
  42cfa6:	fwait
  42cfa7:	rol    BYTE PTR [ecx+0x0],0x85
  42cfab:	xchg   esp,eax
  42cfac:	loope  0x42cf5e
  42cfae:	add    al,0x6e
  42cfb0:	add    al,0xf
  42cfb2:	stc    
  42cfb3:	push   ds
  42cfb4:	add    al,0x0
  42cfb6:	je     0x42cf80
  42cfb8:	inc    eax
  42cfb9:	add    DWORD PTR [ecx-0x7f6083],edx
  42cfbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfc0:	add    eax,0xad184
  42cfc5:	add    ah,dh
  42cfc7:	ins    DWORD PTR es:[edi],dx
  42cfc8:	pop    es
  42cfc9:	bswap  eax
  42cfcb:	pop    edx
  42cfcc:	(bad)  
  42cfcd:	inc    DWORD PTR [ebp+edx*4-0x46]
  42cfd1:	cmp    DWORD PTR [eax],eax
  42cfd3:	clc    
  42cfd4:	test   eax,0x1d3c750e
  42cfd9:	inc    edi
  42cfda:	and    al,0x34
  42cfdc:	pop    ds
  42cfdd:	inc    edi
  42cfde:	and    al,0x28
  42cfe0:	enter  0x140,0x44
  42cfe4:	push   ds
  42cfe5:	inc    ecx
  42cfe6:	add    esi,DWORD PTR [ebp+ebp*2-0x17ae8af5]
  42cfed:	mov    esi,0xfa940546
  42cff2:	cmp    BYTE PTR [eax],bh
  42cff4:	stos   BYTE PTR es:[edi],al
  42cff5:	push   cs
  42cff6:	vmread DWORD PTR [esi-0x2],ebx
  42cffa:	inc    DWORD PTR [ebx*1+0x6ebf0c76]
  42d001:	outs   dx,BYTE PTR ds:[esi]
  42d002:	sub    al,0x7f
  42d004:	cmp    DWORD PTR [esp+edx*1],esp
  42d007:	jg     0x42d052
  42d009:	and    al,0x10
  42d00b:	scas   eax,DWORD PTR es:[edi]
  42d00c:	les    ecx,FWORD PTR [edx-0x75]
  42d00f:	add    dh,BYTE PTR [ecx-0x33]
  42d012:	test   esp,esi
  42d014:	fld    DWORD PTR [ecx]
  42d016:	mov    bh,BYTE PTR [edx-0x7]
  42d019:	and    eax,DWORD PTR [eax+esi*4-0x54b977f7]
  42d020:	sbb    eax,DWORD PTR [ecx+0x17]
  42d023:	popf   
  42d024:	iret   
  42d025:	sub    DWORD PTR [eax+0xaf9c759],ecx
  42d02b:	and    BYTE PTR [ebp-0x4f],dl
  42d02e:	cli    
  42d02f:	xchg   edx,eax
  42d030:	sub    al,0x23
  42d032:	and    al,0xb1
  42d034:	stos   DWORD PTR es:[edi],eax
  42d035:	fwait
  42d036:	xchg   BYTE PTR [eax],al
  42d038:	cdq    
  42d039:	stos   DWORD PTR es:[edi],eax
  42d03a:	(bad)  
  42d03b:	jg     0x42d0b3
  42d03d:	xchg   ebp,eax
  42d03e:	aaa    
  42d03f:	add    bl,BYTE PTR [ebx+0x69]
  42d042:	add    ebp,DWORD PTR ds:0xb1f98976
  42d048:	shr    DWORD PTR [ebp+0xba9be78],cl
  42d04e:	jg     0x42d038
  42d050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d051:	push   edi
  42d052:	inc    ebx
  42d053:	dec    ecx
  42d054:	ror    DWORD PTR [edx],1
  42d056:	cmp    eax,0xc462ae74
  42d05b:	inc    ecx
  42d05c:	lahf   
  42d05d:	stos   DWORD PTR es:[edi],eax
  42d05e:	stc    
  42d05f:	test   BYTE PTR [edi+0x1dfffea7],bh
  42d065:	test   eax,0xa7c7e93e
  42d06a:	(bad)  
  42d06b:	(bad)  
  42d06c:	(bad)  [ecx+edi*8-0x4a5f226c]
  42d073:	and    ebx,DWORD PTR [eax+0x5e8cee04]
  42d079:	sti    
  42d07a:	jmp    0x9d03:0xb730aa08
  42d081:	stos   DWORD PTR es:[edi],eax
  42d082:	sti    
  42d083:	mov    ecx,0x2f9c2bde
  42d088:	add    al,0x22
  42d08a:	inc    edx
  42d08b:	or     BYTE PTR [ecx+eax*1],ah
  42d08e:	add    cl,ch
  42d090:	(bad)  
  42d091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d092:	(bad)  
  42d093:	dec    DWORD PTR [ecx-0x24f6ccbc]
  42d099:	call   0xc442da9b
  42d09e:	add    esp,ecx
  42d0a0:	pop    es
  42d0a1:	popf   
  42d0a2:	add    bl,ch
  42d0a4:	and    BYTE PTR [esi-0x25515789],dl
  42d0aa:	in     eax,0xd9
  42d0ac:	jnp    0x42d08a
  42d0ae:	add    al,0x90
  42d0b0:	sbb    BYTE PTR [ecx+0x680e902],bl
  42d0b6:	out    0xdc,eax
  42d0b8:	add    ebx,DWORD PTR [edi+0x49]
  42d0bb:	call   0xebc978b1
  42d0c0:	pop    es
  42d0c1:	popf   
  42d0c2:	add    ch,BYTE PTR [esi+0x2d]
  42d0c5:	cdq    
  42d0c6:	test   DWORD PTR [ecx-0x65],edx
  42d0c9:	stos   BYTE PTR es:[edi],al
  42d0ca:	lahf   
  42d0cb:	dec    ecx
  42d0cc:	lods   eax,DWORD PTR ds:[esi]
  42d0cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0ce:	pop    eax
  42d0cf:	mov    dl,0x1
  42d0d1:	sbb    eax,esp
  42d0d3:	in     al,dx
  42d0d4:	jecxz  0x42d0a1
  42d0d6:	cdq    
  42d0d7:	jecxz  0x42d0d5
  42d0d9:	pop    ss
  42d0da:	pop    esi
  42d0db:	call   0x6d526de3
  42d0e0:	test   DWORD PTR [edx],esi
  42d0e2:	mov    al,ds:0x33580e8
  42d0e7:	loop   0x42d070
  42d0e9:	dec    ebx
  42d0ea:	add    al,0xe9
  42d0ec:	add    ebx,DWORD PTR [edx+0x1efcefa9]
  42d0f2:	mov    ch,0xe5
  42d0f4:	add    ebx,DWORD PTR [ebp+0x55ff7d49]
  42d0fa:	pcmpgtw mm7,QWORD PTR [ebx+edi*8+0x9ae89f]
  42d102:	inc    esi
  42d103:	add    ebp,ecx
  42d105:	add    ebx,DWORD PTR ds:0x1efd089c
  42d10b:	pop    ebp
  42d10c:	in     eax,0x3
  42d10e:	popf   
  42d10f:	cmp    BYTE PTR [ebp-0xd71580d],0x7
  42d116:	popf   
  42d117:	add    al,BYTE PTR [eax]
  42d119:	imul   esi,ebp,0xdb5e0ada
  42d11f:	add    eax,DWORD PTR [eax]
  42d121:	jmp    0x134b1a5b
  42d126:	mov    eax,ds:0x84aaba0b
  42d12b:	or     bl,bh
  42d12d:	pop    ss
  42d12e:	popf   
  42d12f:	pop    ds
  42d130:	call   0x8774f8ee
  42d135:	add    DWORD PTR ds:0xc205e7b6,0x46ea0002
  42d13f:	adc    dh,dl
  42d141:	and    ah,bl
  42d143:	push   cs
  42d144:	or     ebp,DWORD PTR [ebx-0x5d]
  42d147:	push   es
  42d148:	add    cl,ch
  42d14a:	test   eax,0x56cf3709
  42d14f:	or     al,0x7e
  42d151:	inc    ebx
  42d152:	popf   
  42d153:	add    al,BYTE PTR [eax]
  42d155:	jb     0x42d1b8
  42d157:	add    BYTE PTR [edi+0xa9bf66a],bh
  42d15d:	sbb    esp,DWORD PTR gs:[eax+0x19b7e9fa]
  42d164:	or     BYTE PTR [eax+0x0],dh
  42d167:	fmul   DWORD PTR [esi]
  42d169:	jmp    0x456f22
  42d16e:	punpcklbw mm3,DWORD PTR [edi-0x7d624878]
  42d175:	clc    
  42d176:	out    0x9,al
  42d178:	test   dl,dl
  42d17a:	hlt    
  42d17b:	ss pushf 
  42d17d:	or     dh,BYTE PTR [edi]
  42d17f:	iret   
  42d180:	aam    0x7d
  42d182:	dec    ecx
  42d183:	or     eax,0x1dedffdf
  42d188:	(bad)  
  42d189:	cld    
  42d18a:	(bad)  
  42d18b:	ss pop ds
  42d18d:	stc    
  42d18e:	out    0xd7,eax
  42d190:	test   DWORD PTR [ecx],esi
  42d192:	add    bh,al
  42d194:	add    al,BYTE PTR [eax]
  42d196:	mov    BYTE PTR [edx-0x6616eff8],0x7
  42d19d:	add    BYTE PTR [eax],al
  42d19f:	inc    edi
  42d1a0:	ins    DWORD PTR es:[edi],dx
  42d1a1:	or     BYTE PTR [eax+ebp*2-0x79],dh
  42d1a5:	test   DWORD PTR [edi],0xc17af390
  42d1ab:	add    al,0x87
  42d1ad:	test   DWORD PTR [edx],0xfd8d847b
  42d1b3:	sbb    ebp,DWORD PTR [edx+0x60]
  42d1b6:	mov    edx,0x1d003007
  42d1bc:	fwait
  42d1bd:	stc    
  42d1be:	inc    DWORD PTR [esp+ebp*2-0x2711fcc0]
  42d1c5:	cli    
  42d1c6:	jg     0x42d1c5
  42d1c8:	add    eax,DWORD PTR [edi]
  42d1ca:	xchg   DWORD PTR [eax],eax
  42d1cc:	repnz imul esi,ebp,0xffffffff
  42d1d0:	jnp    0x42d1e6
  42d1d2:	sar    BYTE PTR [edx],1
  42d1d4:	(bad)  
  42d1d5:	rcl    BYTE PTR [ebx-0x7c66cbc0],cl
  42d1db:	ja     0x42d166
  42d1dd:	imul   esi,ebp,0x7026d80
  42d1e3:	test   DWORD PTR [ecx-0x7dfffffc],esp
  42d1e9:	inc    eax
  42d1ea:	cli    
  42d1eb:	adc    DWORD PTR [ebp+0x4fffcca],ebx
  42d1f1:	ins    BYTE PTR es:[edi],dx
  42d1f2:	inc    eax
  42d1f3:	add    ecx,DWORD PTR [esi-0x62800528]
  42d1f9:	pushf  
  42d1fa:	add    eax,0xf56b2287
  42d1ff:	(bad)  
  42d200:	fist   DWORD PTR [ebx]
  42d202:	sar    BYTE PTR [edx],1
  42d204:	xchg   cl,bh
  42d206:	xchg   ebx,eax
  42d207:	inc    eax
  42d208:	hlt    
  42d209:	cwde   
  42d20a:	add    DWORD PTR [edi-0x63],0xffffffb6
  42d20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d20f:	cli    
  42d210:	sbb    eax,0x180afbb3
  42d215:	pop    ds
  42d216:	add    eax,0x40659d00
  42d21b:	(bad)  
  42d21c:	lods   eax,DWORD PTR ds:[esi]
  42d21d:	ret    0xfd52
  42d220:	mov    edx,0xa7f67eab
  42d225:	xchg   esp,eax
  42d226:	jg     0x42d1f4
  42d228:	mov    dl,0x7c
  42d22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d22b:	or     ch,bl
  42d22d:	in     eax,dx
  42d22e:	add    DWORD PTR [edi+0x0],edi
  42d231:	test   DWORD PTR [ebx+0x5a9c41c0],ebx
  42d237:	sub    dl,BYTE PTR [esi]
  42d239:	aad    0x97
  42d23b:	cmc    
  42d23c:	inc    edi
  42d23d:	xchg   edx,eax
  42d23e:	cs jae 0x42d23e
  42d241:	jp     0x42d1ee
  42d243:	jle    0x42d24e
  42d245:	lea    esi,[edx]
  42d247:	jnp    0x42d246
  42d249:	push   0xffffffab
  42d24b:	jle    0x42d256
  42d24d:	xchg   ebp,eax
  42d24e:	inc    edx
  42d24f:	and    edi,esi
  42d251:	pop    edx
  42d252:	stos   DWORD PTR es:[edi],eax
  42d253:	jle    0x42d25e
  42d255:	cdq    
  42d256:	xor    ch,BYTE PTR [ebx]
  42d258:	dec    BYTE PTR [edx-0x55]
  42d25b:	rol    BYTE PTR [ecx-0x64],0x4
  42d25f:	popf   
  42d260:	data16 lahf 
  42d262:	stos   DWORD PTR es:[edi],eax
  42d263:	inc    BYTE PTR [esi+0x478f35b]
  42d269:	popf   
  42d26a:	stos   DWORD PTR es:[edi],eax
  42d26b:	jg     0x42d22c
  42d26d:	test   eax,0xc1017c98
  42d272:	test   al,0xf5
  42d274:	mov    cl,0xdd
  42d276:	fwait
  42d277:	lds    edx,FWORD PTR [esi]
  42d279:	frstor [edi]
  42d27b:	lahf   
  42d27c:	out    dx,al
  42d27d:	push   ds
  42d27e:	jmp    0x42d293
  42d280:	out    0x9e,eax
  42d282:	pop    eax
  42d283:	mov    esi,0x2b02253f
  42d288:	add    esp,DWORD PTR [edx]
  42d28a:	sbb    eax,0xce77f01
  42d28f:	ins    DWORD PTR es:[edi],dx
  42d290:	call   0x7d2b6f6d
  42d295:	add    ah,ah
  42d297:	pushf  
  42d298:	cdq    
  42d299:	jg     0x42d2a5
  42d29b:	or     eax,0x9cc85265
  42d2a0:	mov    cl,0x7e
  42d2a2:	pop    esp
  42d2a3:	cmc    
  42d2a4:	add    al,0x81
  42d2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2a7:	add    eax,0x9cb04190
  42d2ac:	cdq    
  42d2ad:	test   BYTE PTR [ebx-0x1e811df9],ch
  42d2b3:	xchg   ebx,eax
  42d2b4:	mov    DWORD PTR [ecx+0x3ed2513],ebp
  42d2ba:	pop    DWORD PTR [ebp-0x2e]
  42d2bd:	adc    DWORD PTR [edi-0x62f9c17b],0x2
  42d2c4:	pop    edi
  42d2c5:	or     bl,BYTE PTR [ebx]
  42d2c7:	shr    BYTE PTR [eax],0x9c
  42d2ca:	push   0x892f0864
  42d2cf:	push   0xffffffe7
  42d2d1:	clc    
  42d2d2:	and    DWORD PTR [ebp-0x7862fc19],edx
  42d2d8:	stos   BYTE PTR es:[edi],al
  42d2d9:	sti    
  42d2da:	and    ecx,DWORD PTR [ebp-0x13]
  42d2dd:	jl     0x42d331
  42d2df:	or     BYTE PTR [eax],bl
  42d2e1:	das    
  42d2e2:	stos   BYTE PTR es:[edi],al
  42d2e3:	xchg   DWORD PTR [edx],esp
  42d2e5:	pushf  
  42d2e6:	lea    eax,ds:0xc32003e9
  42d2ec:	xchg   esp,eax
  42d2ed:	xchg   ecx,eax
  42d2ee:	mov    ds:0x4cf8e59f,al
  42d2f3:	sar    ch,0x85
  42d2f6:	mov    bl,0xc1
  42d2f8:	lods   al,BYTE PTR gs:[esi]
  42d2fa:	add    BYTE PTR [edi],al
  42d2fc:	pop    ss
  42d2fd:	lock rcr DWORD PTR [ecx+eax*1+0x0],0xb5
  42d303:	pop    ss
  42d304:	lds    eax,FWORD PTR [eax]
  42d306:	jmp    0xeb2155a9
  42d30b:	mov    edx,0xe27ce80c
  42d310:	fwait
  42d311:	cli    
  42d312:	ins    BYTE PTR es:[edi],dx
  42d313:	fimul  WORD PTR [edi]
  42d315:	or     DWORD PTR [edi-0x2fc2fea4],esp
  42d31b:	cmp    al,BYTE PTR [edx]
  42d31d:	add    cl,ch
  42d31f:	inc    ecx
  42d320:	shl    edi,0x9e
  42d323:	mov    edx,0xde64fa9b
  42d328:	or     BYTE PTR [ecx+eax*2-0x2505670c],al
  42d32f:	fidivr WORD PTR [edi-0x2a]
  42d332:	out    0x2b,al
  42d334:	pop    ebx
  42d335:	inc    edi
  42d336:	push   0x3e
  42d338:	push   cs
  42d339:	jg     0x42d2e4
  42d33b:	mov    ch,BYTE PTR [edx-0x67ca81b9]
  42d341:	jle    0x42d338
  42d343:	pop    edx
  42d344:	repz push ebx
  42d347:	jbe    0x42d2cd
  42d349:	inc    ebx
  42d34a:	or     eax,0x5438991
  42d34f:	xchg   ecx,eax
  42d350:	add    DWORD PTR [ebx+0xd],0x3d
  42d354:	inc    ebx
  42d355:	mov    DWORD PTR [ebp-0x4316f48e],esp
  42d35b:	lahf   
  42d35c:	add    al,BYTE PTR [eax]
  42d35e:	out    dx,al
  42d35f:	add    ah,cl
  42d361:	pop    esp
  42d362:	test   DWORD PTR [ecx+0x36],ebp
  42d365:	cmp    BYTE PTR [eax-0x17],al
  42d368:	cmp    bl,BYTE PTR [eax-0x639692f6]
  42d36e:	cli    
  42d36f:	jmp    0x71022c99
  42d374:	xchg   edi,eax
  42d375:	inc    ecx
  42d376:	or     BYTE PTR [eax+0x6c],ah
  42d379:	push   cs
  42d37a:	ret    0x3a00
  42d37d:	add    BYTE PTR [ecx+ebp*8],dh
  42d380:	and    eax,0x84000000
  42d385:	outs   dx,BYTE PTR ds:[esi]
  42d386:	or     esi,DWORD PTR [ebp-0x3]
  42d389:	rol    BYTE PTR [eax+0x1],0x8a
  42d38d:	jge    0x42d3c8
  42d38f:	add    esp,esi
  42d391:	inc    BYTE PTR [esi]
  42d393:	mov    dh,0x7
  42d395:	sbb    BYTE PTR [ebx+0x468308],cl
  42d39b:	sbb    dh,0x62
  42d39e:	jae    0x42d3b7
  42d3a0:	xor    al,0x67
  42d3a2:	xor    DWORD PTR [ebp+edi*4+0x7e],esi
  42d3a6:	icebp  
  42d3a7:	and    bl,dl
  42d3a9:	or     DWORD PTR [eax],0xbdfeb402
  42d3af:	inc    esi
  42d3b0:	mov    ch,0x91
  42d3b2:	out    0x1e,eax
  42d3b4:	test   DWORD PTR [esi],eax
  42d3b6:	add    BYTE PTR [ebx+0x46819aa2],cl
  42d3bc:	mov    WORD PTR ds:0xbfd80fc6,ds
  42d3c2:	inc    al
  42d3c4:	add    BYTE PTR [ebx+eax*1],ah
  42d3c7:	sbb    eax,0x53
  42d3ca:	and    BYTE PTR [ebp+0x9ce7799],bh
  42d3d0:	retf   0x51bf
  42d3d3:	add    eax,0xffffc682
  42d3d8:	jmp    FWORD PTR [ebx-0x69]
  42d3db:	xor    DWORD PTR [esi+0x4c],ebx
  42d3de:	xchg   ecx,eax
  42d3df:	jl     0x42d458
  42d3e1:	xor    eax,0x878b0006
  42d3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3e7:	mov    edi,0x5616c83
  42d3ec:	test   BYTE PTR [esi],cl
  42d3ee:	(bad)  
  42d3ef:	(bad)  
  42d3f0:	jmp    FWORD PTR [ebp-0x6276f7c0]
  42d3f6:	popa   
  42d3f7:	bnd call 0x417ff4
  42d3fd:	sbb    eax,0x180af905
  42d402:	sti    
  42d403:	add    eax,DWORD PTR [eax]
  42d405:	popf   
  42d406:	add    al,0x7f
  42d408:	jg     0x42d400
  42d40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d40b:	icebp  
  42d40c:	test   ch,ch
  42d40e:	mov    dh,0xa1
  42d410:	cli    
  42d411:	push   ss
  42d412:	loop   0x42d40f
  42d414:	jle    0x42d459
  42d416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d417:	inc    BYTE PTR [esi]
  42d419:	pop    ebx
  42d41a:	mov    bh,0x2f
  42d41c:	or     BYTE PTR ds:0xd3e8de92,bl
  42d422:	dec    esi
  42d423:	mov    eax,ds:0x4e9e3fa
  42d428:	cmp    DWORD PTR [eax],eax
  42d42a:	les    eax,FWORD PTR [edx+0x149dfffe]
  42d430:	inc    eax
  42d431:	or     al,0x16
  42d433:	clc    
  42d434:	fisttp WORD PTR [edi]
  42d436:	es loope 0x42d430
  42d439:	xchg   bl,dh
  42d43b:	mov    ds:0xe69ec2d5,eax
  42d440:	adc    ebx,DWORD PTR [ecx+0x62955c6]
  42d446:	out    dx,eax
  42d447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d448:	in     eax,0xd7
  42d44a:	out    dx,al
  42d44b:	lahf   
  42d44c:	jne    0x42d40c
  42d44e:	push   ss
  42d44f:	fidivr DWORD PTR [ebp+0x7b]
  42d452:	mov    ecx,0xa1750403
  42d457:	and    ah,BYTE PTR [ebx]
  42d459:	and    al,0xb5
  42d45b:	add    al,0xcc
  42d45d:	mov    ecx,fs
  42d45f:	test   al,0xa1
  42d461:	mov    cl,bl
  42d463:	call   DWORD PTR [ebx]
  42d465:	pop    ss
  42d466:	addr16 and al,0xbe
  42d469:	push   es
  42d46a:	pop    esp
  42d46b:	and    al,BYTE PTR [ebp+0x8]
  42d46e:	adc    al,0x2
  42d470:	mov    bl,0xf7
  42d472:	test   eax,0x9c3d231f
  42d477:	fdiv   st(5),st
  42d479:	inc    ebp
  42d47a:	sbb    eax,0x21f6db9d
  42d47f:	cmp    bl,0xa5
  42d482:	pop    es
  42d483:	test   DWORD PTR [edi+ebx*8-0x6e],edi
  42d487:	add    ch,BYTE PTR [ebx]
  42d489:	cmp    eax,0x3a74dd9c
  42d48e:	add    BYTE PTR [edx],ah
  42d490:	sbb    ebp,edi
  42d492:	jle    0x42d47b
  42d494:	or     eax,0xde6e790d
  42d499:	lock js 0x42d4fa
  42d49c:	fdivp  st(0),st
  42d49e:	fmul   DWORD PTR [eax]
  42d4a0:	xor    ch,BYTE PTR [esi-0x4a]
  42d4a3:	(bad)  
  42d4a4:	mov    al,0x63
  42d4a6:	les    ebp,FWORD PTR [esi]
  42d4a8:	or     al,0x5f
  42d4aa:	ds mov ds,esi
  42d4ad:	(bad)  
  42d4ae:	clc    
  42d4af:	pushf  
  42d4b0:	mov    ch,BYTE PTR [edx]
  42d4b2:	or     eax,0xdff2401b
  42d4b7:	pop    ss
  42d4b8:	mov    ebp,DWORD PTR [eax+eiz*8]
  42d4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4bc:	pop    es
  42d4bd:	fs aaa 
  42d4bf:	jp     0x42d459
  42d4c1:	add    DWORD PTR [ecx+0x3e0defe],0xa968f282
  42d4cb:	cwde   
  42d4cc:	pop    es
  42d4cd:	fs bnd jno 0x42d469
  42d4d1:	popa   
  42d4d2:	cmp    esp,0xdcbde8fe
  42d4d8:	add    DWORD PTR [esi],edx
  42d4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4db:	(bad)  
  42d4dd:	clc    
  42d4de:	js     0x42d4be
  42d4e0:	(bad)  
  42d4e2:	js     0x42d52e
  42d4e4:	fsub   QWORD PTR [edi+ebx*8+0x6c00077e]
  42d4eb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4ed:	cli    
  42d4ee:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42d4f0:	or     BYTE PTR ss:[edx+0x0],ch
  42d4f4:	jne    0x42d4d4
  42d4f6:	sbb    ebp,ecx
  42d4f8:	adc    DWORD PTR [eax+ebp*8-0x78fd6117],eax
  42d4ff:	stos   BYTE PTR es:[edi],al
  42d500:	push   es
  42d501:	jg     0x42d4c2
  42d503:	test   BYTE PTR [edx-0x61170047],0x7f
  42d50a:	push   ebx
  42d50b:	int    0x9a
  42d50d:	jg     0x42d4d9
  42d50f:	ret    0xdeb2
  42d512:	sbb    edi,DWORD PTR [eax]
  42d514:	fs leave 
  42d516:	cli    
  42d517:	mov    ecx,0xe373575b
  42d51c:	push   esp
  42d51d:	inc    ecx
  42d51e:	adc    eax,DWORD PTR ds:0x70ff0c1c
  42d524:	xor    bl,0xf1
  42d527:	daa    
  42d528:	test   al,0x1b
  42d52a:	or     ebp,DWORD PTR [ebp+0x41]
  42d52d:	xchg   edi,eax
  42d52e:	cli    
  42d52f:	jmp    0xb92b9959
  42d534:	out    dx,eax
  42d535:	pushf  
  42d536:	cli    
  42d537:	jae    0x42d511
  42d539:	repz and esp,DWORD PTR [eax-0x76]
  42d53d:	or     ch,cl
  42d53f:	jns    0x42d4df
  42d541:	add    al,BYTE PTR [eax]
  42d543:	jae    0x42d505
  42d545:	repz and esp,DWORD PTR [ecx+0x72]
  42d549:	out    dx,eax
  42d54a:	call   0x4573bc
  42d54f:	arpl   WORD PTR [eax+0x6a7423f3],bp
  42d555:	push   es
  42d556:	out    0xe2,eax
  42d558:	add    ah,dl
  42d55a:	inc    ecx
  42d55b:	adc    ecx,DWORD PTR ds:0x42150b22
  42d561:	mov    WORD PTR [eax-0x489cffbf],es
  42d567:	nop
  42d568:	or     al,0x52
  42d56a:	jp     0x42d5d3
  42d56c:	mov    al,BYTE PTR [edx]
  42d56e:	push   es
  42d56f:	and    al,0x85
  42d571:	dec    eax
  42d572:	cwde   
  42d573:	add    BYTE PTR [esi+0x23],0x7c
  42d577:	xor    ecx,0xc6815ebb
  42d57d:	pushf  
  42d57e:	adc    eax,0x17f4fffd
  42d583:	mov    ebx,0x118e774
  42d588:	and    al,0x7
  42d58a:	mov    ?,WORD PTR [eax+0x11cbf3c0]
  42d590:	shl    BYTE PTR [edi+0x63],0xe9
  42d594:	xor    DWORD PTR [ecx*4-0x4148fc1f],0x3a
  42d59c:	mov    BYTE PTR [edx-0x33807d03],al
  42d5a2:	mov    ebp,esi
  42d5a4:	wrmsr  
  42d5a6:	in     eax,0xe9
  42d5a8:	(bad)  
  42d5a9:	sti    
  42d5aa:	xchg   al,cl
  42d5ac:	call   DWORD PTR [ebx]
  42d5ae:	mov    DWORD PTR [edx-0x15bebff1],edi
  42d5b4:	(bad)  
  42d5b5:	sti    
  42d5b6:	xchg   DWORD PTR [eax+0x17],eax
  42d5b9:	pusha  
  42d5ba:	mov    DWORD PTR [esi],eax
  42d5bc:	pop    es
  42d5bd:	add    ah,bh
  42d5bf:	dec    eax
  42d5c0:	psubsw mm5,QWORD PTR [edx+0xefff56c]
  42d5c7:	dec    ecx
  42d5c8:	mov    ebx,tr2
  42d5cb:	repnz push cs
  42d5cd:	jmp    0x42d552
  42d5cf:	mov    BYTE PTR [eax+0x17],al
  42d5d2:	pusha  
  42d5d3:	pop    ss
  42d5d4:	pop    es
  42d5d5:	sbb    esp,ebp
  42d5d7:	dec    eax
  42d5d8:	jp     0x7fe56ee0
  42d5de:	popf   
  42d5df:	pushf  
  42d5e0:	xchg   DWORD PTR [esi],ebx
  42d5e2:	dec    esp
  42d5e3:	inc    ebp
  42d5e4:	lahf   
  42d5e5:	and    esp,DWORD PTR [ecx]
  42d5e7:	nop
  42d5e8:	cli    
  42d5e9:	out    0x27,al
  42d5eb:	sub    DWORD PTR [eax],esp
  42d5ed:	and    al,0x89
  42d5ef:	stos   DWORD PTR es:[edi],eax
  42d5f0:	adc    ch,BYTE PTR [edx]
  42d5f2:	push   ss
  42d5f3:	imul   ecx,DWORD PTR [edx],0xe5785d85
  42d5f9:	xchg   BYTE PTR [ecx-0x41],dh
  42d5fc:	repnz xchg dl,ah
  42d5ff:	ror    BYTE PTR [edx+0x24],0xb1
  42d603:	pop    edx
  42d604:	mov    ecx,ecx
  42d606:	add    bh,ah
  42d608:	mov    BYTE PTR [edi+0x418c9171],bh
  42d60e:	mov    al,bh
  42d610:	or     BYTE PTR [ebx],0xa1
  42d613:	and    eax,DWORD PTR [esi+0x13]
  42d616:	jmp    0x42d5fd
  42d618:	idiv   BYTE PTR [edx-0x56]
  42d61b:	push   ds
  42d61c:	repz cli 
  42d61e:	shr    BYTE PTR [ecx+eax*4+0xb81007b],cl
  42d625:	add    al,0x74
  42d627:	jae    0x42d639
  42d629:	inc    edx
  42d62a:	add    al,0x20
  42d62c:	ins    BYTE PTR es:[edi],dx
  42d62d:	adc    ah,BYTE PTR [ebx]
  42d62f:	es clc 
  42d631:	out    0x1f,eax
  42d633:	push   ss
  42d634:	jne    0x42d61f
  42d636:	dec    ebx
  42d637:	jns    0x42d604
  42d639:	xor    eax,DWORD PTR [edi-0x7b518b95]
  42d63f:	pop    ebp
  42d640:	test   DWORD PTR [ecx],0xe28ce386
  42d646:	jge    0x42d5d9
  42d648:	test   eax,0xd924186
  42d64d:	dec    ecx
  42d64e:	adc    esi,edx
  42d650:	pushf  
  42d651:	xchg   edx,ebx
  42d653:	imul   esp,DWORD PTR [esi+ebx*4],0x7e
  42d657:	loope  0x42d65b
  42d659:	or     eax,0xd115afc
  42d65e:	(bad)  
  42d65f:	xchg   ebx,eax
  42d660:	out    dx,al
  42d661:	imul   eax,ebx,0xffffffce
  42d664:	fistp  WORD PTR [ebp+0x37]
  42d667:	jns    0x42d663
  42d669:	ins    DWORD PTR es:[edi],dx
  42d66a:	rol    BYTE PTR [ebx+0x648e97c8],cl
  42d670:	xchg   ebp,eax
  42d671:	sbb    BYTE PTR [eax-0x7220f216],cl
  42d677:	fsub   st(5),st
  42d679:	int3   
  42d67a:	mov    DWORD PTR [esi-0x51b68f04],esp
  42d680:	mov    WORD PTR [edx+0x640587fa],gs
  42d686:	outs   dx,DWORD PTR ds:[esi]
  42d687:	add    BYTE PTR [edx*4-0xd9e71ff],al
  42d68e:	cdq    
  42d68f:	inc    ecx
  42d690:	dec    edx
  42d691:	mov    DWORD PTR [ebx],ecx
  42d693:	inc    eax
  42d694:	sub    eax,DWORD PTR [esi]
  42d696:	jmp    0xe98311e7
  42d69b:	das    
  42d69c:	add    eax,0xf864e940
  42d6a1:	aas    
  42d6a2:	jmp    0xe982d777
  42d6a7:	cdq    
  42d6a8:	clc    
  42d6a9:	aas    
  42d6aa:	jmp    0xe982d8ba
  42d6af:	std    
  42d6b0:	sti    
  42d6b1:	aas    
  42d6b2:	jmp    0xe982daa6
  42d6b7:	loope  0x42d6b4
  42d6b9:	aas    
  42d6ba:	jmp    0xe98418fc
  42d6bf:	cmp    eax,DWORD PTR fs:[ecx-0x17]
  42d6c3:	pusha  
  42d6c4:	inc    ebx
  42d6c5:	inc    ecx
  42d6c6:	jmp    0xe984125e
  42d6cb:	loop   0x42d713
  42d6cd:	inc    ecx
  42d6ce:	jmp    0x8417fc
  42d6d3:	jmp    0xe9803eec
  42d6d8:	in     eax,0x67
  42d6da:	cmp    eax,0x3d6582e9
  42d6df:	jmp    0xe98040af
  42d6e4:	pop    es
  42d6e5:	push   0x3d
  42d6e7:	jmp    0xe98040f3
  42d6ec:	add    bh,dh
  42d6ee:	imul   edi,DWORD PTR ds:0x3d69f7e9,0x3d69e7e9
  42d6f8:	jmp    0xe98040e4
  42d6fd:	dec    eax
  42d6fe:	push   0x3d
  42d700:	jmp    0xe9804145
  42d705:	inc    edi
  42d706:	push   0x3d
  42d708:	jmp    0xe980413d
  42d70d:	dec    eax
  42d70e:	push   0x3d
  42d710:	jmp    0xe9804155
  42d715:	cmp    BYTE PTR [edx+0x3d],ch
  42d718:	jmp    0xe980414d
  42d71d:	or     BYTE PTR [edx+0x3d],ch
  42d720:	jmp    0xe9803eb7
  42d725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d726:	addr16 cmp eax,0x3d6917e9
  42d72c:	jmp    0xe9803f6a
  42d731:	inc    ebx
  42d732:	push   0x683de93d
  42d737:	cmp    eax,0x3d68dde9
  42d73c:	jmp    0xe9803f70
  42d741:	(bad)  
  42d742:	arpl   WORD PTR ds:0x3d637be9,di
  42d748:	jmp    0x803269
  42d74d:	test   BYTE PTR [edi],ch
  42d74f:	stos   DWORD PTR es:[edi],eax
  42d750:	inc    edx
  42d751:	add    BYTE PTR [esi+edx*8+0x397442a9],al
  42d758:	mov    ds:0xa78f7442,eax
  42d75d:	inc    edx
  42d75e:	inc    esp
  42d75f:	sub    al,0xaf
  42d761:	inc    edx
  42d762:	inc    esp
  42d763:	arpl   WORD PTR [ebx-0x4f70cbbe],si
  42d769:	inc    edx
  42d76a:	xor    al,0x8a
  42d76c:	mov    al,0x42
  42d76e:	inc    esp
  42d76f:	or     eax,0xa64442b1
  42d774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d775:	inc    edx
  42d776:	xor    al,0xb4
  42d778:	mov    bl,0x42
  42d77a:	xor    al,0x37
  42d77c:	mov    cl,0x42
  42d77e:	add    al,0xfd
  42d780:	scas   al,BYTE PTR es:[edi]
  42d781:	inc    edx
  42d782:	add    al,0xcf
  42d784:	scas   al,BYTE PTR es:[edi]
  42d785:	inc    edx
  42d786:	hlt    
  42d787:	or     ebp,DWORD PTR [eax-0x4c4e0bbe]
  42d78d:	inc    edx
  42d78e:	add    al,0x79
  42d790:	scas   al,BYTE PTR es:[edi]
  42d791:	inc    edx
  42d792:	add    al,0x59
  42d794:	stos   BYTE PTR es:[edi],al
  42d795:	inc    edx
  42d796:	hlt    
  42d797:	imul   ebp,DWORD PTR [edx-0x55890bbe],0xaf8cc442
  42d7a1:	inc    edx
  42d7a2:	les    edi,FWORD PTR [ecx+esi*4]
  42d7a5:	inc    edx
  42d7a6:	mov    ah,0xe5
  42d7a8:	mov    al,0x42
  42d7aa:	mov    ah,0xd
  42d7ac:	mov    al,0x42
  42d7ae:	les    esi,FWORD PTR ds:0x5dc442b0
  42d7b4:	scas   eax,DWORD PTR es:[edi]
  42d7b5:	inc    edx
  42d7b6:	add    BYTE PTR [ebp+ebx*2+0x5db442af],dh
  42d7bd:	scas   eax,DWORD PTR es:[edi]
  42d7be:	inc    edx
  42d7bf:	test   BYTE PTR [edi-0x51],ah
  42d7c2:	inc    edx
  42d7c3:	test   ch,dl
  42d7c5:	sbb    DWORD PTR [esi],0xfebe719d
  42d7cb:	push   cs
  42d7cc:	fimul  WORD PTR [edx]
  42d7ce:	mov    bl,0xeb
  42d7d0:	scas   eax,DWORD PTR es:[edi]
  42d7d1:	xor    DWORD PTR [edi-0x66d809a4],eax
  42d7d7:	retf   0x9b10
  42d7da:	pop    edx
  42d7db:	push   ds
  42d7dc:	adc    al,0x5
  42d7de:	je     0x42d76a
  42d7e0:	arpl   di,cx
  42d7e2:	call   DWORD PTR [edx-0x64]
  42d7e5:	and    al,0x37
  42d7e7:	push   ebp
  42d7e8:	mov    al,0xe7
  42d7ea:	jle    0x42d849
  42d7ec:	enter  0x3724,0x65
  42d7f0:	push   eax
  42d7f1:	inc    DWORD PTR [ebp-0x25423a2]
  42d7f7:	add    bh,ah
  42d7f9:	sbb    BYTE PTR [esi*8+0x2610179a],dl
  42d800:	bound  eax,QWORD PTR [esi]
  42d802:	pop    ds
  42d803:	pop    ebx
  42d804:	lahf   
  42d805:	jge    0x42d7fe
  42d807:	or     ch,BYTE PTR [edi+0x7]
  42d80a:	das    
  42d80b:	fstp   QWORD PTR [ebx+0x35]
  42d80e:	mov    edi,0xbf36dbae
  42d813:	dec    ebx
  42d814:	adc    al,0x94
  42d816:	popa   
  42d817:	push   ds
  42d818:	sbb    ch,bh
  42d81a:	inc    DWORD PTR [eax]
  42d81c:	push   0x5b7f24ab
  42d821:	(bad)  
  42d822:	(bad)  
  42d823:	jno    0x42d7c9
  42d825:	mov    ecx,0xa2511004
  42d82a:	int    0xbf
  42d82c:	arpl   WORD PTR [esp+edx*4+0x1],bx
  42d830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d831:	iret   
  42d832:	xchg   edx,eax
  42d833:	out    0x23,eax
  42d835:	push   ecx
  42d836:	cdq    
  42d837:	cli    
  42d838:	mov    dl,0x73
  42d83a:	cmc    
  42d83b:	mov    edi,0x52bf015d
  42d840:	add    ah,BYTE PTR es:[ebx]
  42d843:	cld    
  42d844:	clc    
  42d845:	loop   0x42d855
  42d847:	add    al,0xef
  42d849:	xchg   ecx,eax
  42d84a:	sti    
  42d84b:	xlat   BYTE PTR ds:[ebx]
  42d84c:	lods   al,BYTE PTR ds:[esi]
  42d84d:	inc    edx
  42d84e:	jmp    0x2d1774dc
  42d853:	call   0xfe75de6
  42d858:	rol    DWORD PTR ds:0xee205b9,0xc5
  42d85f:	or     ebx,DWORD PTR [ebp-0x8041d85]
  42d865:	pop    ss
  42d866:	in     al,0x29
  42d868:	lods   al,BYTE PTR ds:[esi]
  42d869:	sub    bh,BYTE PTR [esi]
  42d86b:	or     eax,0x1f65c272
  42d870:	add    DWORD PTR [esi],0xc2090ee8
  42d876:	imul   eax,DWORD PTR [edi-0x63],0x4
  42d87a:	imul   esp,DWORD PTR ds:0x4560828e,0xecc49c00
  42d884:	add    ebx,DWORD PTR [ebx]
  42d886:	inc    ebx
  42d887:	repnz mov edx,ebx
  42d88a:	add    DWORD PTR [esi],0x6907891e
  42d890:	cdq    
  42d891:	xchg   ebx,eax
  42d892:	pop    ss
  42d893:	fiadd  DWORD PTR [edx+0x3e4e676]
  42d899:	xchg   esi,eax
  42d89a:	jbe    0x42d8c2
  42d89c:	popf   
  42d89d:	fadd   DWORD PTR [ecx-0x4d7705fa]
  42d8a3:	push   0xb8d457a2
  42d8a8:	mov    WORD PTR [ebp-0x7],gs
  42d8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8ac:	or     BYTE PTR [ebp-0x76d5572b],bl
  42d8b2:	xor    dh,BYTE PTR [eax+0x46]
  42d8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8b6:	jnp    0x42d8da
  42d8b8:	adc    BYTE PTR [eax+ecx*2],dl
  42d8bb:	add    cl,bl
  42d8bd:	adc    eax,DWORD PTR [ebx+0x12]
  42d8c0:	cli    
  42d8c1:	addr16 inc eax
  42d8c3:	ret    
  42d8c4:	das    
  42d8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8c6:	add    DWORD PTR [eax],eax
  42d8c8:	jmp    0x15449c6b
  42d8cd:	add    eax,0x2606ffd0
  42d8d2:	cmp    dl,BYTE PTR [esi+eax*4]
  42d8d5:	push   0xffffffd4
  42d8d7:	adc    DWORD PTR [ecx],ebp
  42d8d9:	mov    eax,ds:0x15e5c40f
  42d8de:	ret    0x17be
  42d8e1:	and    al,0x93
  42d8e3:	out    0xfa,eax
  42d8e5:	add    BYTE PTR [esi-0x2aa8fffe],bl
  42d8eb:	out    0x7,al
  42d8ed:	call   0x4194dd9c
  42d8f2:	sahf   
  42d8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8f4:	cld    
  42d8f5:	inc    esi
  42d8f6:	and    al,0xc2
  42d8f8:	pop    ecx
  42d8f9:	sub    edx,DWORD PTR [ebp-0x695078fe]
  42d8ff:	ret    
  42d900:	add    DWORD PTR [ebp+0x6bffcf92],ebp
  42d906:	fst    DWORD PTR [ebx]
  42d908:	add    edi,DWORD PTR [ecx-0x46008d7]
  42d90e:	pop    esi
  42d90f:	add    bh,bl
  42d911:	xchg   edi,eax
  42d912:	out    dx,al
  42d913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d914:	fimul  DWORD PTR [edx]
  42d916:	adc    cl,BYTE PTR [ebp+0x396ae7c2]
  42d91c:	inc    eax
  42d91d:	jmp    0xe1bce9ff
  42d922:	sahf   
  42d923:	adc    eax,0x28995312
  42d928:	add    BYTE PTR [ebx-0x62],dl
  42d92b:	sub    BYTE PTR [eax],al
  42d92d:	(bad)  
  42d92e:	retf   
  42d92f:	push   edi
  42d930:	or     eax,0x4179a129
  42d935:	add    BYTE PTR [eax+ecx*4-0x3d4a8a46],ch
  42d93c:	sub    eax,eax
  42d93e:	je     0x42d901
  42d940:	add    eax,0x798ac5b7
  42d945:	clc    
  42d946:	push   0x32faf6
  42d94b:	xor    al,0xc2
  42d94d:	add    eax,0x798ebdb6
  42d952:	shl    BYTE PTR [eax],0x9a
  42d955:	mov    edi,0xe67991c3
  42d95a:	sbb    DWORD PTR [eax],0xffffffa3
  42d95d:	push   eax
  42d95e:	push   edi
  42d95f:	jmp    FWORD PTR [ebx+0x29]
  42d962:	rol    BYTE PTR [edi+edi*2-0x27131b8d],0xff
  42d96a:	std    
  42d96b:	jmp    0x42d9c8
  42d96d:	add    BYTE PTR [ebx+ebp*8-0x17ba7892],cl
  42d974:	add    BYTE PTR [ebx-0x10],0x14
  42d978:	outs   dx,BYTE PTR ds:[esi]
  42d979:	adc    edx,DWORD PTR [ebp+eax*2+0x74850043]
  42d980:	clc    
  42d981:	or     esp,DWORD PTR [ecx]
  42d983:	inc    ecx
  42d984:	ja     0x42d97b
  42d986:	adc    eax,0x3a9208
  42d98b:	lea    ecx,[eax-0x10]
  42d98e:	push   0x0
  42d990:	pop    ebx
  42d991:	cmp    al,0x16
  42d993:	stos   BYTE PTR es:[edi],al
  42d994:	outs   dx,BYTE PTR ds:[esi]
  42d995:	dec    edx
  42d996:	lea    eax,[ecx+0x67]
  42d999:	loop   0x42d93b
  42d99b:	hlt    
  42d99c:	ins    BYTE PTR es:[edi],dx
  42d99d:	cmc    
  42d99e:	test   BYTE PTR [edi+esi*8+0x7fbc6a2f],dh
  42d9a5:	inc    ebx
  42d9a6:	lock xchg esp,eax
  42d9a8:	jns    0x42d9ed
  42d9aa:	in     al,0xec
  42d9ac:	jnp    0x42d9a8
  42d9ae:	std    
  42d9af:	add    BYTE PTR [ebp+0x31bf7fb8],bl
  42d9b5:	lahf   
  42d9b6:	sub    al,0x4
  42d9b8:	and    dh,bl
  42d9ba:	xchg   edi,eax
  42d9bb:	dec    edi
  42d9bc:	sbb    dh,ah
  42d9be:	lahf   
  42d9bf:	out    0x21,eax
  42d9c1:	cdq    
  42d9c2:	cwde   
  42d9c3:	cli    
  42d9c4:	and    DWORD PTR [edi+ecx*1+0xc],ebx
  42d9c8:	and    bh,bl
  42d9ca:	lahf   
  42d9cb:	out    0xaf,eax
  42d9cd:	call   0x1a10:0x5c19fa98
  42d9d4:	pop    es
  42d9d5:	cwde   
  42d9d6:	sub    al,0x0
  42d9d8:	retf   0xf084
  42d9db:	xor    edx,DWORD PTR [ebx-0x6a99fc25]
  42d9e1:	es inc ecx
  42d9e3:	lock in eax,dx
  42d9e5:	sbb    BYTE PTR [edi-0xedb15f5],bh
  42d9eb:	das    
  42d9ec:	mov    bl,0x5b
  42d9ee:	(bad)  
  42d9ef:	jle    0x42da4a
  42d9f1:	xchg   esp,eax
  42d9f2:	xchg   DWORD PTR [ecx+eax*2+0x44],eax
  42d9f6:	stc    
  42d9f7:	push   DWORD PTR [eax]
  42d9f9:	inc    ebp
  42d9fa:	aaa    
  42d9fb:	pop    edx
  42d9fc:	push   esp
  42d9fd:	fldcw  WORD PTR ds:0xabcc1653
  42da03:	ins    DWORD PTR es:[edi],dx
  42da04:	fst    QWORD PTR es:[esi+0x7cdc4b0a]
  42da0b:	mov    edx,0xfffe9c0a
  42da10:	push   ss
  42da11:	in     eax,0x8e
  42da13:	clc    
  42da14:	add    bl,bh
  42da16:	(bad)  [ebx-0x7697faef]
  42da1c:	cli    
  42da1d:	jmp    0x958d:0x4bf509c
  42da24:	test   DWORD PTR [ecx-0x39],esp
  42da27:	add    al,BYTE PTR [edi-0xde6fd70]
  42da2d:	mov    al,BYTE PTR [edx]
  42da2f:	jno    0x42da72
  42da31:	ret    
  42da32:	jnp    0x42da60
  42da34:	loopne 0x42d9e0
  42da36:	jp     0x42da5a
  42da38:	pop    es
  42da39:	and    BYTE PTR [ebp-0x13],al
  42da3c:	cdq    
  42da3d:	call   0x8f2316c3
  42da42:	add    ah,BYTE PTR [ecx+0x31]
  42da45:	pushf  
  42da46:	push   ss
  42da47:	fld    TBYTE PTR ds:0xe01c8da9
  42da4d:	mov    dl,0x32
  42da4f:	call   0xa1ae:0xe4c703b2
  42da56:	call   0xf00e:0x8d779ae8
  42da5d:	or     BYTE PTR [ebx],0xd4
  42da60:	cdq    
  42da61:	xor    ah,BYTE PTR [bp-0x3f]
  42da65:	mov    dl,0x34
  42da67:	push   0xffffffb2
  42da69:	rol    esi,cl
  42da6b:	hlt    
  42da6c:	cmp    ah,bh
  42da6e:	shr    ah,0x3
  42da71:	out    dx,eax
  42da72:	xor    eax,0x8d219b5e
  42da77:	ror    DWORD PTR [ebx],cl
  42da79:	add    BYTE PTR [eax],bl
  42da7b:	test   eax,0x17dddbc
  42da80:	dec    esi
  42da81:	rcr    DWORD PTR [ecx],1
  42da83:	test   eax,0x4529d1bc
  42da88:	out    0x80,eax
  42da8a:	push   edx
  42da8b:	push   ss
  42da8c:	shr    BYTE PTR [ebx-0x65e45f3b],cl
  42da92:	sbb    edx,DWORD PTR [edx-0x19916e95]
  42da98:	adc    bl,0x69
  42da9b:	add    ch,cl
  42da9d:	xor    ah,BYTE PTR [edx]
  42da9f:	push   cs
  42daa0:	(bad)
  42daa3:	call   0x65fa:0x87dee3ff
  42daaa:	ficom  WORD PTR ds:0x38f93f06
  42dab0:	(bad)  
  42dab2:	and    al,0xdf
  42dab4:	mov    edi,0x2e79c1c2
  42dab9:	cdq    
  42daba:	sahf   
  42dabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dabc:	adc    eax,0x15d151
  42dac1:	jmp    0xdb66433
  42dac6:	lea    esp,[edi+esi*2-0x7b76cb57]
  42dacd:	ret    0xc41b
  42dad0:	or     dh,BYTE PTR [ecx+ebx*2-0x76]
  42dad4:	(bad)  
  42dad5:	retf   
  42dad6:	pop    edi
  42dad7:	sub    DWORD PTR [edx-0x55],ebx
  42dada:	popf   
  42dadb:	add    dl,BYTE PTR [ebp+0x72]
  42dade:	add    BYTE PTR ds:0x19e1ec0d,dh
  42dae4:	(bad)  
  42dae6:	jmp    0x83b75467
  42daeb:	and    DWORD PTR [edi-0x14],eax
  42daee:	fcomp  QWORD PTR [eax+0x7cc10524]
  42daf4:	jns    0x42db3a
  42daf6:	inc    ecx
  42daf7:	jno    0x42da9c
  42daf9:	adc    al,bl
  42dafb:	inc    ebx
  42dafc:	xor    al,0x66
  42dafe:	fld    DWORD PTR ds:0x17c70c17
  42db04:	inc    edi
  42db05:	call   0x4fe0b56e
  42db0a:	inc    ecx
  42db0b:	cli    
  42db0c:	lods   eax,DWORD PTR ds:[esi]
  42db0d:	cld    
  42db0e:	es mov ebx,0x36a48cf5
  42db14:	cmp    al,0xfb
  42db16:	pushf  
  42db17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db18:	call   0x83:0x89142957
  42db1f:	mov    ah,0xf2
  42db21:	sbb    al,0x66
  42db23:	jns    0x42db95
  42db25:	outs   dx,BYTE PTR ds:[esi]
  42db26:	adc    eax,ebx
  42db28:	xor    al,cl
  42db2a:	push   eax
  42db2b:	ret    
  42db2c:	cld    
  42db2d:	ud0    ebp,DWORD PTR [ecx-0x2]
  42db31:	out    0x40,eax
  42db33:	hlt    
  42db34:	push   0xfffffff5
  42db36:	test   BYTE PTR [esp+edi*8],al
  42db39:	add    al,0x33
  42db3b:	add    al,0x40
  42db3d:	jecxz  0x42db41
  42db3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db40:	mov    edi,0xb000c2c7
  42db45:	dec    DWORD PTR [edx-0x39]
  42db48:	mov    edi,DWORD PTR [edi-0x72]
  42db4b:	inc    eax
  42db4c:	test   BYTE PTR [esi-0x34f2a92f],dh
  42db52:	pop    es
  42db53:	mov    ebx,eax
  42db55:	cli    
  42db56:	mov    esi,0x8e778847
  42db5b:	inc    eax
  42db5c:	test   bh,dl
  42db5e:	out    0x8b,eax
  42db60:	mov    ah,0x6
  42db62:	lea    eax,[edi+0x48]
  42db65:	ja     0x42dbbc
  42db67:	sbb    al,0xbd
  42db69:	retf   0x891f
  42db6c:	mov    ds:0xac5f87a2,eax
  42db71:	(bad)  
  42db72:	mov    ebp,0xf56a4447
  42db77:	adc    eax,0x3a903c
  42db7c:	shl    edx,1
  42db7e:	sub    edi,DWORD PTR [eax-0xf4]
  42db84:	int3   
  42db85:	ss xor edi,edi
  42db88:	sar    DWORD PTR [eax+0x6d],cl
  42db8b:	and    al,0x22
  42db8d:	js     0x42dbe4
  42db8f:	sub    BYTE PTR [edx-0x44fee3be],bh
  42db95:	inc    edx
  42db96:	and    BYTE PTR [edx],bh
  42db98:	popf   
  42db99:	cdq    
  42db9a:	(bad)  
  42db9b:	jmp    DWORD PTR [esi]
  42db9d:	in     al,0x3b
  42db9f:	mov    edi,0x86a31050
  42dba4:	push   eax
  42dba5:	xchg   ecx,eax
  42dba6:	sub    ebx,0x0
  42dba9:	mov    ecx,0x32e82f6b
  42dbae:	mov    cl,0x98
  42dbb0:	cli    
  42dbb1:	push   ss
  42dbb2:	test   eax,0x1b92f180
  42dbb7:	dec    edi
  42dbb8:	(bad)  
  42dbb9:	mov    edx,0xb2f97d98
  42dbbe:	stos   DWORD PTR es:[edi],eax
  42dbbf:	jp     0x42db66
  42dbc1:	popf   
  42dbc2:	cdq    
  42dbc3:	(bad)  
  42dbc4:	jle    0x42dbfe
  42dbc6:	lds    eax,FWORD PTR [ebx]
  42dbc8:	sti    
  42dbc9:	adc    BYTE PTR [ebp+ecx*8-0x5428df41],ah
  42dbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbd1:	ss xor eax,0x6216a667
  42dbd7:	stos   DWORD PTR es:[edi],eax
  42dbd8:	dec    esi
  42dbd9:	cwde   
  42dbda:	jno    0x42db6e
  42dbdc:	cs jb  0x42dc02
  42dbdf:	inc    ecx
  42dbe0:	in     al,0xa6
  42dbe2:	pop    eax
  42dbe3:	add    al,BYTE PTR [eax+ebx*1+0x28fffe9c]
  42dbea:	cwde   
  42dbeb:	int3   
  42dbec:	mov    al,bl
  42dbee:	or     DWORD PTR [eax+0x2c4c4d44],0xfffffffb
  42dbf5:	enter  0x2993,0xe8
  42dbf9:	mov    BYTE PTR [edx],al
  42dbfb:	xchg   edx,eax
  42dbfc:	cli    
  42dbfd:	and    al,0x5f
  42dbff:	mov    ds:0xfd476236,al
  42dc04:	mov    BYTE PTR [eax+0x154488cb],ah
  42dc0a:	ins    BYTE PTR es:[edi],dx
  42dc0b:	sub    al,0xfb
  42dc0d:	add    BYTE PTR [eax+0x8e926a3],cl
  42dc13:	add    ebp,ecx
  42dc15:	add    esi,ebp
  42dc17:	repz iret 
  42dc19:	xchg   ebp,eax
  42dc1a:	idiv   DWORD PTR [ebx-0x55]
  42dc1d:	(bad)  
  42dc1e:	stos   DWORD PTR es:[edi],eax
  42dc1f:	rcl    DWORD PTR [ebx+0x1081402],0x8b
  42dc26:	mov    ds:0xdd2aa8f6,eax
  42dc2b:	jmp    0x3001:0x32a51363
  42dc32:	mov    ebp,0x27fe187
  42dc37:	psubd  mm5,QWORD PTR [ecx]
  42dc3a:	xchg   ebp,eax
  42dc3b:	ja     0x42dc68
  42dc3d:	mov    al,ds:0x8257d62
  42dc42:	inc    edx
  42dc43:	ret    0x2e0
  42dc46:	lahf   
  42dc47:	xor    bh,BYTE PTR [edx+0x28f0caf0]
  42dc4d:	add    al,0x12
  42dc4f:	mov    edi,0xf6cb96dc
  42dc54:	pop    eax
  42dc55:	add    al,0x7a
  42dc57:	in     al,dx
  42dc58:	cdq    
  42dc59:	adc    BYTE PTR [ecx+0x71a34a9a],al
  42dc5f:	mov    DWORD PTR [ecx+0x629a7910],ecx
  42dc65:	mov    ds:0x10798961,eax
  42dc6a:	push   ecx
  42dc6b:	call   0xc3b6:0x8951a35a
  42dc72:	add    bh,ah
  42dc74:	sub    BYTE PTR [eax],dh
  42dc76:	rcr    DWORD PTR [esi-0x3af830fe],0x1a
  42dc7d:	mov    ecx,0x149a9d42
  42dc82:	je     0x42dcae
  42dc84:	mov    DWORD PTR [ebp-0x64],ebp
  42dc87:	mov    ds:0x9a033d1f,eax
  42dc8c:	pop    ds
  42dc8d:	add    BYTE PTR [ebp-0x62],cl
  42dc90:	ja     0x42dcdc
  42dc92:	in     eax,0x17
  42dc94:	add    bh,bl
  42dc96:	mov    ecx,0x5748002
  42dc9b:	xlat   BYTE PTR ds:[ebx]
  42dc9c:	cwde   
  42dc9d:	outs   dx,BYTE PTR ds:[esi]
  42dc9e:	(bad)  
  42dc9f:	(bad)  
  42dca0:	xchg   esp,eax
  42dca1:	pop    ss
  42dca2:	jmp    0x7de2:0xa786fa9b
  42dca9:	(bad)  
  42dcaa:	jg     0x42dc7d
  42dcac:	mov    esi,DWORD PTR [ecx]
  42dcae:	mul    BYTE PTR [edx-0x695b790a]
  42dcb4:	call   0xa984:0x8c2ac855
  42dcbb:	stos   BYTE PTR es:[edi],al
  42dcbc:	fadd   DWORD PTR [esi-0x29805ac9]
  42dcc2:	dec    edi
  42dcc3:	scas   eax,DWORD PTR es:[edi]
  42dcc4:	mov    esi,DWORD PTR [ecx-0xf]
  42dcc7:	or     DWORD PTR [esi],ecx
  42dcc9:	or     al,0x72
  42dccb:	(bad)  
  42dccd:	out    0x28,eax
  42dccf:	ds xchg edx,edi
  42dcd2:	fs popa 
  42dcd4:	nop    DWORD PTR [edx+0x0]
  42dcd8:	retf   
  42dcd9:	out    dx,al
  42dcda:	test   dl,al
  42dcdc:	xchg   ebx,eax
  42dcdd:	lock cli 
  42dcdf:	pop    ds
  42dce0:	imul   ecx,DWORD PTR [ebp+0x3f15dd74],0xa3719108
  42dcea:	cld    
  42dceb:	jle    0x42dcc7
  42dced:	inc    edi
  42dcee:	jae    0x42dcd1
  42dcf0:	sbb    eax,0xf16efc37
  42dcf5:	add    ah,bh
  42dcf7:	sti    
  42dcf8:	sub    DWORD PTR [edi],edi
  42dcfa:	in     al,0x52
  42dcfc:	lods   eax,DWORD PTR ds:[esi]
  42dcfd:	fdivr  DWORD PTR [edi+0x64815da9]
  42dd03:	inc    ecx
  42dd04:	sbb    al,0x37
  42dd06:	cld    
  42dd07:	add    bl,bl
  42dd09:	mov    ah,0xba
  42dd0b:	call   0x3d5a73
  42dd10:	(bad)  
  42dd11:	idiv   bh
  42dd13:	push   ebp
  42dd14:	xor    edi,DWORD PTR [ebx-0x11]
  42dd17:	inc    DWORD PTR [ecx]
  42dd19:	sbb    al,0x10
  42dd1b:	inc    eax
  42dd1c:	add    al,0x7b
  42dd1e:	bnd jmp 0x42dcf7
  42dd21:	mov    dl,0xba
  42dd23:	inc    eax
  42dd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd25:	pop    esi
  42dd26:	add    edi,0x60
  42dd29:	pushf  
  42dd2a:	pusha  
  42dd2b:	setp   BYTE PTR [ebx-0x1a09b975]
  42dd32:	jp     0x42dcf5
  42dd34:	cmc    
  42dd35:	rcr    DWORD PTR [ebp-0x77],cl
  42dd38:	int3   
  42dd39:	outs   dx,BYTE PTR ds:[esi]
  42dd3a:	adc    esp,DWORD PTR [eax+0x43b500]
  42dd40:	or     esp,0x2
  42dd43:	je     0x42dd66
  42dd45:	aaa    
  42dd46:	imul   edi,esi,0x73
  42dd49:	mov    eax,0xd102f282
  42dd4e:	xchg   DWORD PTR [edx],esi
  42dd50:	inc    esi
  42dd51:	je     0x42dd43
  42dd53:	or     esi,edi
  42dd55:	ret    0x848e
  42dd58:	dec    esi
  42dd59:	test   BYTE PTR [ebx-0x3e67e509],al
  42dd5f:	sub    al,0xc0
  42dd61:	stos   DWORD PTR es:[edi],eax
  42dd62:	sar    BYTE PTR [ecx+0x3e7a7404],1
  42dd68:	and    al,0x68
  42dd6a:	or     BYTE PTR [eax+0x12],0xcd
  42dd6e:	cmp    eax,DWORD PTR [ecx*4-0x9d67586]
  42dd75:	add    eax,DWORD PTR [ebx+0x8]
  42dd78:	add    eax,0x3b000334
  42dd7d:	mov    bh,al
  42dd7f:	add    al,0x89
  42dd81:	popf   
  42dd82:	test   eax,0x2282e6ea
  42dd87:	inc    edi
  42dd88:	or     al,0x16
  42dd8a:	push   edx
  42dd8b:	push   es
  42dd8c:	das    
  42dd8d:	out    dx,eax
  42dd8e:	add    eax,edx
  42dd90:	jae    0x42dd3e
  42dd92:	mov    bh,0xd5
  42dd94:	xor    BYTE PTR [eax-0x3b9dbf60],dl
  42dd9a:	push   0x0
  42dd9c:	je     0x42dd3e
  42dd9e:	sbb    al,0xbe
  42dda0:	std    
  42dda1:	add    BYTE PTR [edi],al
  42dda3:	add    BYTE PTR [esi+0x3ee08d4f],al
  42dda9:	adc    al,0x9c
  42ddab:	cdq    
  42ddac:	(bad)  
  42ddad:	dec    DWORD PTR ds:0x68b0a79a
  42ddb3:	and    al,0xa3
  42ddb5:	jle    0x42dd78
  42ddb7:	nop
  42ddb8:	sub    bl,0xa1
  42ddbb:	fwait
  42ddbc:	(bad)  
  42ddbd:	dec    DWORD PTR [esi-0x31]
  42ddc0:	jp     0x42de36
  42ddc2:	mov    eax,ds:0x14fad2c8
  42ddc7:	in     eax,0xe7
  42ddc9:	sbb    esp,DWORD PTR [edi+edi*1-0x10]
  42ddcd:	or     ah,BYTE PTR [eax]
  42ddcf:	mov    es,WORD PTR [ebx]
  42ddd1:	add    BYTE PTR [ebp-0x37dfb9e0],bl
  42ddd7:	fwait
  42ddd8:	(bad)  
  42ddd9:	lahf   
  42ddda:	popf   
  42dddb:	mov    WORD PTR [ebp-0x16463d9],es
  42dde1:	cmp    al,0x9d
  42dde3:	call   0xf1:0x199afffe
  42ddea:	popf   
  42ddeb:	fwait
  42ddec:	jg     0x42de2f
  42ddee:	mov    ebx,ebp
  42ddf0:	mov    ?,WORD PTR [ebp+eiz*4+0x22]
  42ddf4:	dec    eax
  42ddf5:	and    al,0x7d
  42ddf7:	es dec eax
  42ddf9:	and    al,0x75
  42ddfb:	add    bh,BYTE PTR [ecx+0xdeb67c]
  42de01:	jge    0x42ddb9
  42de03:	fdivrp st(4),st
  42de05:	jl     0x42de07
  42de07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de08:	fimul  WORD PTR [eax]
  42de0a:	pushf  
  42de0b:	mov    al,0xad
  42de0d:	inc    ecx
  42de0e:	xchg   ebx,eax
  42de0f:	and    ebx,eax
  42de11:	jmp    0xe945ec9d
  42de16:	add    ebp,DWORD PTR [esi+0x2d]
  42de19:	mov    edi,0xea186e06
  42de1e:	sbb    ebx,DWORD PTR [ebp+0x2183e902]
  42de24:	aas    
  42de25:	int    0xcb
  42de27:	pop    edx
  42de28:	test   ebx,esi
  42de2a:	rcl    DWORD PTR [eax+0x5e7ce942],cl
  42de30:	fsubp  st(4),st
  42de32:	xchg   dl,cl
  42de34:	test   ecx,esp
  42de36:	xchg   DWORD PTR ds:0x6d03e903,eax
  42de3c:	ja     0x42de6a
  42de3e:	call   0xcf1410ed
  42de43:	aas    
  42de44:	test   cl,dl
  42de46:	xchg   edx,ebp
  42de48:	wbinvd 
  42de4a:	xchg   ebx,eax
  42de4b:	cs fdivrp st(4),st
  42de4e:	xchg   edx,eax
  42de4f:	mov    cl,0x62
  42de51:	(bad)  
  42de52:	inc    ebx
  42de53:	popf   
  42de54:	retf   
  42de55:	xor    al,0xe8
  42de57:	scas   al,BYTE PTR es:[edi]
  42de58:	cmc    
  42de59:	mov    DWORD PTR fs:[edx-0x116d177b],eax
  42de60:	fdivrp st(4),st
  42de62:	xchg   edx,eax
  42de63:	mov    DWORD PTR [esi-0x6662bc08],ecx
  42de69:	push   cs
  42de6a:	int    0x0
  42de6c:	out    0xde,al
  42de6e:	fdivr  QWORD PTR [esi-0xc]
  42de71:	loop   0x42dee0
  42de73:	ror    BYTE PTR [esi-0xe],1
  42de76:	jmp    FWORD PTR [eax]
  42de78:	mov    eax,ds:0xaa6e020e
  42de7d:	ficom  WORD PTR [ebx]
  42de7f:	div    WORD PTR [ebx]
  42de82:	jmpw   0xe116
  42de86:	in     ax,dx
  42de88:	movups XMMWORD PTR [ecx+ecx*1],xmm4
  42de8c:	push   cs
  42de8d:	out    dx,al
  42de8e:	jg     0x42de68
  42de90:	pop    esi
  42de91:	add    al,BYTE PTR [edi+0x73ac2521]
  42de97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de98:	das    
  42de99:	adc    esp,DWORD PTR [eax]
  42de9b:	(bad)
  42dea0:	push   ss
  42dea1:	stos   DWORD PTR es:[edi],eax
  42dea2:	cld    
  42dea3:	push   ds
  42dea4:	jno    0x89e27c69
  42deaa:	jae    0x42de71
  42deac:	div    BYTE PTR [ebp+0x43]
  42deaf:	int    0xc2
  42deb1:	xor    al,0x50
  42deb3:	adc    DWORD PTR [eax*8-0x766f0906],eax
  42deba:	shr    BYTE PTR [edx-0x6e],cl
  42debd:	fimul  WORD PTR [edi]
  42debf:	jmp    0xfbe2acfd
  42dec4:	pop    esi
  42dec5:	add    dh,BYTE PTR [edi+ebp*8+0xd]
  42dec9:	adc    DWORD PTR [ecx+edi*8],esp
  42decc:	or     eax,0x457eb3
  42ded1:	test   eax,edi
  42ded3:	push   DWORD PTR [ecx+eiz*2]
  42ded6:	add    eax,0x879d0d7c
  42dedb:	jae    0x42ded5
  42dedd:	sub    eax,0xdf52410
  42dee2:	mov    dl,0xe6
  42dee4:	ror    BYTE PTR [ecx-0x77],1
  42dee7:	cmp    BYTE PTR ds:0xe373f475,dl
  42deed:	or     eax,0x74002410
  42def2:	jae    0x42df07
  42def4:	mov    al,ds:0x39004076
  42def9:	push   eax
  42defa:	pushf  
  42defb:	push   es
  42defc:	je     0x42df63
  42defe:	jg     0x42df76
  42df00:	and    al,0x30
  42df02:	jae    0x42df72
  42df04:	or     dl,bl
  42df06:	jmp    0x129a:0x8bd30c23
  42df0d:	hlt    
  42df0e:	call   DWORD PTR [esi+0x5e]
  42df11:	xchg   esp,eax
  42df12:	call   DWORD PTR [edx-0x75]
  42df15:	pop    ecx
  42df16:	sar    DWORD PTR [ecx-0x7d360bf8],cl
  42df1c:	icebp  
  42df1d:	mov    bl,0xe8
  42df1f:	add    ebp,eax
  42df21:	xchg   edx,eax
  42df22:	push   ebx
  42df23:	sti    
  42df24:	inc    DWORD PTR [edi+0x770003d8]
  42df2a:	fadd   DWORD PTR [edi]
  42df2c:	add    BYTE PTR [edx],dh
  42df2e:	mov    edi,0xbecc4181
  42df33:	adc    DWORD PTR [eax+eax*1-0x28],0xa66b4dfb
  42df3b:	xchg   esi,eax
  42df3c:	dec    ebp
  42df3d:	mov    ecx,ebp
  42df3f:	push   es
  42df40:	or     BYTE PTR ds:[edi-0x42],cl
  42df44:	adc    cl,BYTE PTR [ebp+0xe82fa4b]
  42df4a:	mov    bh,0x50
  42df4c:	stc    
  42df4d:	ror    BYTE PTR [edi+0x110b6c4f],0xc6
  42df54:	pop    ss
  42df55:	push   edx
  42df56:	ins    BYTE PTR es:[edi],dx
  42df57:	jne    0x42df31
  42df59:	std    
  42df5a:	push   ebx
  42df5b:	data16 cld 
  42df5d:	xor    DWORD PTR [ebx+edi*2],esi
  42df60:	mov    edx,0x45727374
  42df65:	or     bh,ch
  42df67:	repnz pop es
  42df69:	imul   ebx,DWORD PTR [ebp+0x7552e66c],0xffffffbe
  42df70:	test   eax,0x2ddc5afc
  42df75:	mov    esi,0x87319999
  42df7a:	cmp    DWORD PTR [eax],ebx
  42df7c:	mov    ds:0x35eeeef7,eax
  42df81:	push   ebx
  42df82:	(bad)  
  42df83:	call   0xe7e6:0xeba90016
  42df8a:	popf   
  42df8b:	inc    eax
  42df8c:	mov    bh,dl
  42df8e:	push   ss
  42df8f:	inc    ecx
  42df90:	sub    ah,0x90
  42df93:	cwde   
  42df94:	ds out 0x60,eax
  42df97:	xor    esi,ecx
  42df99:	jmp    0x42df9b
  42df9b:	or     ah,cl
  42df9d:	cmp    BYTE PTR [edi-0xee36a77],0xfa
  42dfa4:	test   DWORD PTR [edx+0x2e995d0f],ecx
  42dfaa:	sti    
  42dfab:	nop
  42dfac:	cdq    
  42dfad:	in     eax,dx
  42dfae:	aas    
  42dfaf:	popf   
  42dfb0:	and    dl,dl
  42dfb2:	stmxcsr DWORD PTR [ecx-0x2]
  42dfb6:	mov    dh,0x25
  42dfb8:	test   al,0xfe
  42dfba:	jmp    FWORD PTR [esi-0x74]
  42dfbd:	aam    0xfb
  42dfbf:	addps  xmm7,xmm6
  42dfc2:	cli    
  42dfc3:	rcr    DWORD PTR [ebx-0x3],cl
  42dfc6:	add    BYTE PTR [ebp-0x4af66a67],bl
  42dfcc:	mov    bh,0xfa
  42dfcf:	mov    ds:0x99348ac7,al
  42dfd4:	(bad)  
  42dfd5:	add    BYTE PTR ds:[edx+0x11c2c69a],dl
  42dfdc:	dec    edx
  42dfdd:	cmp    al,ch
  42dfdf:	mul    BYTE PTR [ecx-0x2]
  42dfe2:	jmp    FWORD PTR [esi-0x28d056fe]
  42dfe8:	fistp  QWORD PTR ds:0xa6e0817b
  42dfee:	or     BYTE PTR [ebp-0x7edfa429],bl
  42dff4:	mov    fs,WORD PTR [edi-0x60]
  42dff7:	cmp    al,BYTE PTR [edi]
  42dff9:	jmp    0x8e78ba01
  42dffe:	xor    eax,DWORD PTR [eax]
  42e000:	inc    esi
  42e001:	sbb    BYTE PTR [ebp-0xc],ch
  42e004:	jp     0x42e008
  42e006:	mov    ecx,0xf802898e
  42e00b:	inc    ebx
  42e00c:	popf   
  42e00d:	in     al,dx
  42e00e:	out    0x1b,eax
  42e010:	pushf  
  42e011:	not    BYTE PTR [edx]
  42e013:	in     eax,dx
  42e014:	add    bh,bl
  42e016:	dec    esi
  42e017:	xchg   ecx,eax
  42e018:	pop    ss
  42e019:	mov    WORD PTR [ebx-0x44ba2de1],fs
  42e01f:	sti    
  42e020:	mov    bl,0x42
  42e022:	test   al,0x9c
  42e024:	icebp  
  42e025:	add    ch,cl
  42e027:	add    ecx,DWORD PTR [edi-0x2b]
  42e02a:	imul   ecx,DWORD PTR [ecx+0x21],0xffffffd3
  42e02e:	and    dl,0x9a
  42e031:	and    al,0xa
  42e033:	pushf  
  42e034:	mov    bl,0x6c
  42e036:	add    ecx,DWORD PTR [edi-0x749547df]
  42e03c:	mov    DWORD PTR [ecx-0x7e5f9100],0x42b08e9
  42e046:	jmp    0x39591b4e
  42e04b:	xor    ebx,DWORD PTR [eax]
  42e04d:	clc    
  42e04e:	sub    al,0x83
  42e050:	fiadd  DWORD PTR [ecx-0x7f500440]
  42e056:	ror    DWORD PTR [eax+0x7adc0052],0x5c
  42e05d:	sar    bh,cl
  42e05f:	inc    eax
  42e060:	sbb    DWORD PTR [ebp+0x1d00e93e],ebp
  42e066:	xchg   BYTE PTR [ebx-0x5c],bh
  42e069:	and    edi,DWORD PTR [edi+ecx*2-0x6f]
  42e06d:	ja     0x42e0c5
  42e06f:	cli    
  42e070:	xchg   esi,eax
  42e071:	adc    eax,0x5e740ac1
  42e076:	aaa    
  42e077:	mov    edi,0xc03051fc
  42e07c:	pop    es
  42e07d:	enter  0x7b86,0x74
  42e081:	adc    edi,DWORD PTR [eax+edi*4+0x7f]
  42e085:	mov    eax,ds:0x25740002
  42e08a:	mov    esi,esi
  42e08c:	pop    esi
  42e08d:	sbb    ecx,DWORD PTR [ecx-0x89e56e9]
  42e093:	cmc    
  42e094:	pop    esp
  42e095:	and    eax,0x2346fcfd
  42e09a:	sar    edx,1
  42e09c:	aam    0xbe
  42e09e:	adc    DWORD PTR [eax-0x17],eax
  42e0a1:	sbb    eax,0x2b2c7b86
  42e0a6:	jl     0x42e0f7
  42e0a8:	es cmc 
  42e0aa:	add    BYTE PTR [esi],cl
  42e0ac:	test   eax,0x99448b9e
  42e0b1:	push   es
  42e0b2:	sbb    eax,0x852b0ce7
  42e0b7:	mov    edi,0x8cd5847d
  42e0bc:	je     0x42e0e4
  42e0be:	mov    ecx,0x29ee9a8
  42e0c3:	call   0xfabeb025
  42e0c8:	jb     0x42e0ca
  42e0ca:	retf   0xf10
  42e0cd:	sub    DWORD PTR [ecx-0x61163847],esp
  42e0d3:	add    cl,BYTE PTR [edi-0x32]
  42e0d6:	jb     0x42e154
  42e0d8:	lods   eax,DWORD PTR ds:[esi]
  42e0d9:	add    bh,al
  42e0db:	push   es
  42e0dc:	not    esi
  42e0de:	stc    
  42e0df:	or     DWORD PTR [edx],esi
  42e0e1:	cmp    esi,DWORD PTR [ebx]
  42e0e3:	sbb    BYTE PTR [eax],dh
  42e0e5:	mov    eax,ecx
  42e0e7:	push   ss
  42e0e8:	lea    eax,[esp+eax*4+0x2]
  42e0ec:	mov    DWORD PTR [ebp-0x7c],eax
  42e0ef:	lea    esi,[ebx+0x70]
  42e0f2:	stc    
  42e0f3:	xchg   DWORD PTR [esi-0x3],esi
  42e0f6:	sub    ecx,DWORD PTR [esi+0x1456a4a]
  42e0fc:	inc    esp
  42e0fd:	test   BYTE PTR [edi+edi*8-0x615b17bd],ah
  42e104:	xlat   BYTE PTR ds:[ebx]
  42e105:	(bad)
  42e108:	dec    ecx
  42e109:	call   DWORD PTR [ecx+0x3443ac92]
  42e10f:	(bad)  
  42e110:	sar    BYTE PTR [ebx],1
  42e112:	jae    0x42e12e
  42e114:	rcr    BYTE PTR [edi+0x6b],cl
  42e117:	pop    ss
  42e118:	ins    BYTE PTR es:[edi],dx
  42e119:	call   0x3d6230
  42e11e:	pop    es
  42e11f:	inc    esp
  42e120:	pop    eax
  42e121:	pop    ebx
  42e122:	ja     0x42e16b
  42e124:	outs   dx,BYTE PTR ds:[esi]
  42e125:	leave  
  42e126:	(bad)  
  42e127:	or     al,BYTE PTR [eax]
  42e129:	push   ebp
  42e12a:	outs   dx,DWORD PTR ds:[esi]
  42e12b:	mov    ds:0x3300534f,al
  42e130:	push   ebx
  42e131:	rcl    DWORD PTR [ebx+0x27],1
  42e134:	sbb    al,0xcd
  42e136:	rol    DWORD PTR [esi],0x4
  42e139:	cmp    ecx,0x37
  42e13c:	pushf  
  42e13d:	and    dh,dl
  42e13f:	retf   
  42e140:	mov    cs,WORD PTR [ecx+0x53]
  42e143:	sbb    al,0xc3
  42e145:	mov    ecx,0x8832c442
  42e14a:	inc    ebp
  42e14b:	mov    ebx,0xcbd6109b
  42e150:	mov    ?,WORD PTR [edx]
  42e152:	pop    ebp
  42e153:	popf   
  42e154:	pop    eax
  42e155:	adc    DWORD PTR [eax],ecx
  42e157:	xlat   BYTE PTR ds:[ebx]
  42e158:	lods   al,BYTE PTR ds:[esi]
  42e159:	adc    DWORD PTR [esi+ecx*8],eax
  42e15c:	test   eax,0xa9cffe97
  42e161:	ds pop ebx
  42e163:	out    0xa2,al
  42e165:	mov    edi,0x7dbd2654
  42e16a:	jmp    0x42e1b9
  42e16c:	imul   edi,esi,0x3537ceff
  42e172:	popfw  
  42e174:	out    0x81,al
  42e176:	das    
  42e177:	pop    edx
  42e178:	nop
  42e179:	mov    ecx,DWORD PTR [edi-0x3b]
  42e17c:	dec    esp
  42e17d:	neg    BYTE PTR ds:0xe7b2914a
  42e183:	inc    eax
  42e184:	clc    
  42e185:	jns    0x42e1fb
  42e187:	adc    eax,0x32ff5631
  42e18c:	imul   edx,DWORD PTR [esi-0x741f903f],0x9846002d
  42e196:	std    
  42e197:	call   FWORD PTR [ebp-0x327b8617]
  42e19d:	enter  0xfa8b,0x6d
  42e1a1:	out    dx,al
  42e1a2:	inc    ecx
  42e1a3:	cwde   
  42e1a4:	ins    DWORD PTR es:[edi],dx
  42e1a5:	mov    al,ds:0x5c75148b
  42e1aa:	add    BYTE PTR ds:[eax],bl
  42e1ad:	sub    DWORD PTR [edx],edx
  42e1af:	aas    
  42e1b0:	jne    0x42e1c7
  42e1b2:	(bad)  
  42e1b3:	call   FWORD PTR [ebp-0x50380de8]
  42e1b9:	test   eax,0x5588cfe
  42e1be:	das    
  42e1bf:	pushfw 
  42e1c1:	xchg   ebx,eax
  42e1c2:	dec    BYTE PTR [eax+ebx*2+0x24532ed1]
  42e1c9:	out    dx,al
  42e1ca:	mov    bh,dl
  42e1cc:	mov    BYTE PTR [edx],al
  42e1ce:	pop    ecx
  42e1cf:	hlt    
  42e1d0:	push   0x2
  42e1d2:	les    ebp,FWORD PTR fs:[ecx]
  42e1d5:	adc    DWORD PTR [ecx+eax*4-0x36],esp
  42e1d9:	jge    0x42e1a4
  42e1db:	mov    esp,edx
  42e1dd:	(bad)  
  42e1de:	cmp    ecx,DWORD PTR [eax-0x745ca57e]
  42e1e4:	xchg   DWORD PTR [edx-0x1a],ebp
  42e1e7:	aad    0x3a
  42e1e9:	xchg   DWORD PTR [eax-0x5a8358f0],ebp
  42e1ef:	test   BYTE PTR [ebx+0x8],dh
  42e1f2:	pop    ss
  42e1f3:	arpl   WORD PTR [eax+0x2a3142],si
  42e1f9:	repnz dec ebx
  42e1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1fc:	push   esp
  42e1fd:	popf   
  42e1fe:	imul   edi,DWORD PTR [ecx+0x7f],0xc5978a5d
  42e205:	cmp    BYTE PTR [ebx],dl
  42e207:	int3   
  42e208:	add    ebx,DWORD PTR [ebp-0xf011783]
  42e20e:	mov    DWORD PTR [edi],esi
  42e210:	test   DWORD PTR [eax+0x3],ecx
  42e213:	pop    edx
  42e214:	add    al,0x9d
  42e216:	inc    ebx
  42e217:	inc    edi
  42e218:	hlt    
  42e219:	mov    ds:0x9a9c2753,eax
  42e21e:	inc    ebx
  42e21f:	inc    esi
  42e220:	cld    
  42e221:	mov    ds:0x1a312540,eax
  42e226:	outs   dx,DWORD PTR ds:[esi]
  42e227:	xchg   ebp,eax
  42e228:	jle    0x42e1fc
  42e22a:	mov    ebp,ebx
  42e22c:	fwait
  42e22d:	out    0x7d,eax
  42e22f:	and    DWORD PTR [ebx+0x46b6c7a9],ecx
  42e235:	dec    ebp
  42e236:	imul   cl
  42e238:	(bad)  
  42e239:	sbb    ch,BYTE PTR [esp+eiz*8+0x4]
  42e23d:	popf   
  42e23e:	add    bl,BYTE PTR [ebx-0xeffddce]
  42e244:	sbb    eax,0x61ffdb9b
  42e249:	adc    ch,BYTE PTR [ebp-0x5c]
  42e24c:	bound  esi,QWORD PTR [edx+0x6]
  42e24f:	call   0xfabbf9e8
  42e254:	jb     0x42e1e3
  42e256:	or     cl,BYTE PTR [ecx+0x46859d2f]
  42e25c:	loope  0x42e25e
  42e25e:	ss cwde 
  42e260:	cli    
  42e261:	(bad)  
  42e262:	pop    ss
  42e263:	mov    al,BYTE PTR [ecx-0xf]
  42e266:	xchg   DWORD PTR [eax+0x52fbe546],esi
  42e26c:	rol    bl,0x76
  42e26f:	inc    edx
  42e270:	loopne 0x42e263
  42e272:	(bad)  
  42e273:	js     0x42e274
  42e275:	call   0xe3130018
  42e27a:	adc    ebx,esp
  42e27c:	mov    BYTE PTR [edi],dh
  42e27e:	push   ebp
  42e27f:	or     BYTE PTR [ebx-0x2f7baece],dh
  42e285:	test   al,0x20
  42e287:	add    eax,0x6261991f
  42e28c:	pop    es
  42e28d:	loop   0x42e278
  42e28f:	loop   0x42e219
  42e291:	mov    edi,0xb2b3082e
  42e296:	sub    BYTE PTR [eax+edx*8+0x1f053828],al
  42e29d:	cmp    ecx,ebx
  42e29f:	popa   
  42e2a0:	pop    es
  42e2a1:	repnz push ecx
  42e2a3:	jecxz  0x42e22d
  42e2a5:	xchg   edi,eax
  42e2a6:	or     BYTE PTR [eax],cl
  42e2a8:	mov    bl,0xa2
  42e2aa:	or     al,BYTE PTR [eax+edx*8+0x1f051028]
  42e2b1:	cmp    ecx,esp
  42e2b3:	popa   
  42e2b4:	pop    es
  42e2b5:	repnz sub ebx,esp
  42e2b8:	mov    BYTE PTR [edi-0x5d4cf836],bh
  42e2be:	int3   
  42e2bf:	adc    eax,0x0
  42e2c2:	add    BYTE PTR [ebp-0x61],dh
  42e2c5:	add    ah,BYTE PTR [ebx]
  42e2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2c8:	inc    esi
  42e2c9:	fisttp WORD PTR [eax]
  42e2cb:	mov    edi,0xa8960b5
  42e2d0:	jae    0x42e2d7
  42e2d2:	mov    bh,0x6f
  42e2d4:	outs   dx,BYTE PTR ds:[esi]
  42e2d5:	adc    ecx,0x23029bf5
  42e2db:	push   esp
  42e2dc:	inc    eax
  42e2dd:	fisttp WORD PTR [eax]
  42e2df:	jg     0x42e292
  42e2e1:	pusha  
  42e2e2:	mov    DWORD PTR [edx-0x3048fa92],ebp
  42e2e8:	ins    BYTE PTR es:[edi],dx
  42e2e9:	adc    ecx,0x23029d45
  42e2ef:	adc    al,0x40
  42e2f1:	fisttp WORD PTR [eax]
  42e2f3:	outs   dx,DWORD PTR ds:[esi]
  42e2f4:	mov    cl,0x60
  42e2f6:	mov    DWORD PTR [edx+0x7fb7056c],ebp
  42e2fc:	push   0xffffff81
  42e2fe:	pop    ebp
  42e2ff:	jo     0x42e300
  42e301:	iret   
  42e302:	shr    DWORD PTR [esi],0x7f
  42e305:	sbb    eax,edx
  42e307:	cmc    
  42e308:	lahf   
  42e309:	add    cl,BYTE PTR [ebx]
  42e30b:	adc    eax,0x60568921
  42e310:	std    
  42e311:	shl    DWORD PTR [ebx+edx*4-0x3],1
  42e315:	jnp    0x42e327
  42e317:	dec    esi
  42e318:	jg     0x42e371
  42e31a:	mov    esi,DWORD PTR [edi-0x6b]
  42e31d:	mov    ds:0xd597ff8b,eax
  42e322:	(bad)  
  42e323:	arpl   WORD PTR [ecx-0x1bff8a7f],cx
  42e329:	clc    
  42e32a:	add    BYTE PTR [ebx-0x2d1d83c1],cl
  42e330:	ret    0xf589
  42e333:	mov    DWORD PTR [edx],edi
  42e335:	jl     0x42e2b8
  42e337:	dec    ebx
  42e338:	int3   
  42e339:	xchg   edi,eax
  42e33a:	mov    ebp,0x89149dfe
  42e33f:	mov    BYTE PTR [ebx+0x41],bl
  42e342:	jnp    0x42e3b8
  42e344:	xchg   ebp,eax
  42e345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e346:	jnp    0x42e309
  42e348:	arpl   WORD PTR [eax+0x69a9be21],sp
  42e34e:	das    
  42e34f:	data16 mov dl,0x6c
  42e352:	adc    BYTE PTR [edx+ebp*4],dl
  42e355:	jle    0x42e345
  42e357:	push   cs
  42e358:	pop    ebp
  42e359:	imul   edi,DWORD PTR [ebx+0x41],0x746e0ad
  42e360:	pushf  
  42e361:	imul   edi,esi,0xfc0dd986
  42e367:	mov    BYTE PTR ds:0x9dfffd6d,dl
  42e36d:	loopne 0x42e3af
  42e36f:	adc    bl,bh
  42e371:	loopne 0x42e3a5
  42e373:	and    al,0x99
  42e375:	repnz popw es
  42e378:	pushf  
  42e379:	imul   edi,esi,0x2079e386
  42e37f:	mov    DWORD PTR ds:0x9dfffd79,esp
  42e385:	test   BYTE PTR [eax],dl
  42e387:	adc    al,0x42
  42e389:	push   esi
  42e38a:	jmp    0xfb2f:0x69dd000d
  42e391:	mov    BYTE PTR [ecx],al
  42e393:	lock aas 
  42e395:	popf   
  42e396:	out    dx,al
  42e397:	mov    esi,0xd3b88373
  42e39c:	mov    edi,0xfde9416d
  42e3a1:	adc    ch,BYTE PTR [ecx+0x2f]
  42e3a4:	cmp    BYTE PTR [ecx+0xd],ah
  42e3a7:	in     al,0x73
  42e3a9:	xchg   ebp,eax
  42e3aa:	cmp    al,0xea
  42e3ac:	cmp    edx,DWORD PTR [ecx-0x64190157]
  42e3b2:	sub    al,0xea
  42e3b4:	fisttp DWORD PTR [esi+0x1a03a902]
  42e3ba:	inc    ebx
  42e3bb:	mov    ecx,0xbc02a6c5
  42e3c0:	jl     0x42e388
  42e3c2:	jle    0x42e3c0
  42e3c4:	out    0x5b,al
  42e3c6:	aam    0x99
  42e3c8:	jl     0x42e37a
  42e3ca:	out    0xf9,eax
  42e3cc:	xchg   DWORD PTR [esi+edx*1],ebp
  42e3cf:	pop    esi
  42e3d0:	stos   DWORD PTR es:[edi],eax
  42e3d1:	sbb    edi,DWORD PTR [ecx-0x17]
  42e3d4:	in     eax,dx
  42e3d5:	call   0xf8c4:0x1a04290f
  42e3dc:	jp     0x42e400
  42e3de:	or     ebp,eax
  42e3e0:	add    ebx,DWORD PTR [ebp-0x657b6df7]
  42e3e6:	add    ebp,ecx
  42e3e8:	add    eax,DWORD PTR [esi-0x16832b0f]
  42e3ee:	jbe    0x42e44f
  42e3f0:	inc    ecx
  42e3f1:	add    BYTE PTR [ebp+0x7a],dh
  42e3f4:	shr    edi,cl
  42e3f6:	cwde   
  42e3f7:	ret    0x78e8
  42e3fa:	fldcw  WORD PTR [edx+0x38]
  42e3fd:	xchg   ecx,edx
  42e3ff:	jbe    0x42e392
  42e401:	icebp  
  42e402:	out    dx,al
  42e403:	push   cs
  42e404:	sub    DWORD PTR [eax+eiz*1],eax
  42e407:	inc    ebx
  42e408:	icebp  
  42e409:	jg     0x42e45f
  42e40b:	add    ebp,ecx
  42e40d:	add    edi,DWORD PTR [edi+0x308bf385]
  42e413:	out    dx,eax
  42e414:	retf   
  42e415:	jp     0x42e3c3
  42e417:	adc    cl,BYTE PTR [esi]
  42e419:	inc    esi
  42e41a:	and    al,BYTE PTR [ebx]
  42e41c:	jmp    0xecdba624
  42e421:	add    al,0x9d
  42e423:	add    ch,al
  42e425:	or     ch,dh
  42e427:	add    esp,DWORD PTR [edi+edx*4+0x538f79d]
  42e42e:	pop    eax
  42e42f:	outs   dx,BYTE PTR ds:[esi]
  42e430:	inc    DWORD PTR [ecx-0x55]
  42e433:	or     eax,0xf916a4b3
  42e438:	div    esp
  42e43a:	fwait
  42e43b:	push   ss
  42e43c:	je     0x42e432
  42e43e:	xchg   esi,eax
  42e43f:	retf   0xf873
  42e442:	xchg   esi,eax
  42e443:	retf   0xc973
  42e446:	pop    ds
  42e447:	bound  eax,QWORD PTR [ecx]
  42e449:	jge    0x42e42b
  42e44b:	shl    DWORD PTR [ebx-0x1e],0x76
  42e44f:	out    dx,eax
  42e450:	das    
  42e451:	add    dl,dh
  42e453:	mov    bh,BYTE PTR [ecx+eax*1+0x0]
  42e457:	push   es
  42e458:	and    al,0x7f
  42e45a:	shr    DWORD PTR [eax-0x52cee60b],1
  42e460:	adc    al,0x48
  42e462:	pop    ebp
  42e463:	xchg   esi,eax
  42e464:	shl    DWORD PTR [edx+esi*8+0x9],0xd7
  42e469:	repz jo 0x42e401
  42e46c:	jb     0x42e454
  42e46e:	(bad)  
  42e470:	(bad)  
  42e471:	repz pusha 
  42e473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e474:	push   0xffffffe6
  42e476:	loop   0x42e461
  42e478:	(bad)  
  42e479:	repz xchg edx,eax
  42e47b:	pusha  
  42e47c:	mov    bh,BYTE PTR [ecx+ebx*4-0x27]
  42e480:	(bad)  
  42e481:	jmp    0x42e4e7
  42e483:	(bad)  [edx+0x4f]
  42e486:	mov    cs,WORD PTR [ebp+0x25]
  42e489:	adc    al,0x29
  42e48b:	cdq    
  42e48c:	jg     0x42e44d
  42e48e:	hlt    
  42e48f:	jo     0x42e471
  42e491:	out    dx,eax
  42e492:	jbe    0x42e421
  42e494:	jbe    0x42e490
  42e496:	aam    0x22
  42e498:	or     BYTE PTR [eax-0x17],al
  42e49b:	sar    DWORD PTR [ecx-0x6],0xe9
  42e49f:	pop    esi
  42e4a0:	out    dx,al
  42e4a1:	pop    ss
  42e4a2:	ret    
  42e4a3:	pushf  
  42e4a4:	xchg   DWORD PTR [ecx+eax*2-0x32],eax
  42e4a8:	jge    0x42e51e
  42e4aa:	add    BYTE PTR [eax-0x80],bl
  42e4ad:	adc    ebx,DWORD PTR [eax-0x30]
  42e4b0:	(bad)  
  42e4b1:	dec    DWORD PTR [edi-0x22]
  42e4b4:	add    al,0xf7
  42e4b6:	adc    eax,0x3a6928
  42e4bb:	add    BYTE PTR [edi-0x3e],ch
  42e4be:	repz sub eax,DWORD PTR [ecx]
  42e4c1:	xchg   ecx,eax
  42e4c2:	bound  ecx,QWORD PTR [edi+eiz*1]
  42e4c5:	add    eax,0xc23f5000
  42e4ca:	out    dx,eax
  42e4cb:	sub    esi,ecx
  42e4cd:	pushf  
  42e4ce:	dec    edx
  42e4cf:	push   DWORD PTR [ecx]
  42e4d1:	xchg   ecx,eax
  42e4d2:	cmc    
  42e4d3:	jne    0x42e471
  42e4d5:	sbb    eax,DWORD PTR [eax]
  42e4d7:	push   DWORD PTR [ecx]
  42e4d9:	xor    ebp,0x3a725015
  42e4df:	add    bl,bl
  42e4e1:	and    BYTE PTR [ebx-0x37],dl
  42e4e4:	inc    edi
  42e4e5:	sub    BYTE PTR [ebx+0x43f9c5ec],al
  42e4eb:	or     al,0xa9
  42e4ed:	jecxz  0x42e4e9
  42e4ef:	inc    DWORD PTR [ebx+esi*1+0x1cb9744f]
  42e4f6:	sti    
  42e4f7:	pop    eax
  42e4f8:	lahf   
  42e4f9:	inc    ebx
  42e4fa:	outs   dx,BYTE PTR ds:[esi]
  42e4fb:	cmp    eax,0x306e454f
  42e500:	imul   ebp,DWORD PTR [edx],0x8440001
  42e506:	and    BYTE PTR [ebx],ch
  42e508:	cmc    
  42e509:	adc    cl,BYTE PTR [ebx]
  42e50b:	sub    esi,ebp
  42e50d:	ins    DWORD PTR es:[edi],dx
  42e50e:	sub    DWORD PTR [eax-0x38fffbbc],0xffffff81
  42e515:	mov    al,BYTE PTR [edi]
  42e517:	add    dh,BYTE PTR [esp+eax*1]
  42e51a:	sub    bl,bl
  42e51c:	iret   
  42e51d:	dec    edi
  42e51e:	mov    ebp,0x78780045
  42e523:	cld    
  42e524:	call   FWORD PTR [ebp-0x1d116897]
  42e52a:	sahf   
  42e52b:	cmp    dh,0x9c
  42e52e:	imul   edi,esi,0x3b2107e6
  42e534:	cld    
  42e535:	inc    esp
  42e536:	push   0xfffffffe
  42e538:	push   esi
  42e53a:	pop    ecx
  42e53b:	mov    ebx,0x3c7e144
  42e540:	add    BYTE PTR [ebp+0x58c2fd14],bl
  42e546:	or     eax,0x69caff61
  42e54b:	dec    edi
  42e54c:	add    dl,al
  42e54e:	push   esi
  42e54f:	repnz push cs
  42e551:	pop    ebp
  42e552:	imul   esi,DWORD PTR [edi-0x9],0x38f6a726
  42e559:	and    esi,esi
  42e55b:	std    
  42e55c:	call   FWORD PTR [ebp+0x2b873bd6]
  42e562:	sar    esi,1
  42e564:	call   FWORD PTR [ebp+0x100c3314]
  42e56a:	pop    es
  42e56b:	jns    0x42e537
  42e56d:	mov    dh,0xef
  42e56f:	sbb    al,BYTE PTR [ecx]
  42e571:	popf   
  42e572:	imul   edi,DWORD PTR [ebp-0x8],0xfffe6c85
  42e579:	bnd jbe 0x42e5f6
  42e57c:	(bad)  
  42e57d:	call   0xee24fdf0
  42e582:	cwde   
  42e583:	jmp    0x29ebe5e3
  42e588:	add    al,0xa8
  42e58a:	xchg   ebp,eax
  42e58b:	or     eax,0xf25d2ee7
  42e590:	jl     0x42e5f9
  42e592:	pushf  
  42e593:	imul   edi,esi,0xff051b88
  42e599:	call   FWORD PTR [ebp-0x6394831e]
  42e59f:	add    ch,cl
  42e5a1:	add    esp,DWORD PTR [edx]
  42e5a3:	mov    ebp,0x8bab985c
  42e5a8:	stos   DWORD PTR es:[edi],eax
  42e5a9:	sti    
  42e5aa:	and    eax,ebp
  42e5ac:	fdivr  QWORD PTR [edx+0x14]
  42e5af:	jmp    0x1f7a:0x899d03e7
  42e5b6:	pushf  
  42e5b7:	add    ch,cl
  42e5b9:	jp     0x42e5d7
  42e5bb:	out    0xe7,al
  42e5bd:	add    ebx,DWORD PTR [ebp+0x77f7ab8b]
  42e5c3:	fld    TBYTE PTR [edi]
  42e5c5:	rcr    DWORD PTR [edx-0x498743fe],0xd0
  42e5cc:	mov    ch,0x2d
  42e5ce:	outs   dx,BYTE PTR ds:[esi]
  42e5cf:	mov    eax,DWORD PTR [ebx+0x677223ef]
  42e5d5:	test   BYTE PTR [ebp+0x3103e904],bl
  42e5db:	adc    ch,BYTE PTR [eax-0x7c]
  42e5de:	lahf   
  42e5df:	add    al,0xe9
  42e5e1:	add    edx,DWORD PTR [ecx]
  42e5e3:	or     ebp,DWORD PTR [eax-0x7d]
  42e5e6:	sahf   
  42e5e7:	add    cl,ch
  42e5e9:	add    eax,DWORD PTR [eax]
  42e5eb:	adc    bh,cl
  42e5ed:	ds push es
  42e5ef:	xchg   al,dh
  42e5f1:	lock adc BYTE PTR [ecx+0x72c3d4e2],0x89
  42e5f9:	nop
  42e5fa:	aas    
  42e5fb:	pop    es
  42e5fc:	repz out 0x3,eax
  42e5ff:	popf   
  42e600:	out    dx,al
  42e601:	loope  0x42e615
  42e603:	push   cs
  42e604:	enter  0x90f8,0xd9
  42e608:	jbe    0x42e642
  42e60a:	out    dx,al
  42e60b:	mov    esi,0xb84b5205
  42e610:	add    BYTE PTR [eax-0x57f6559c],ch
  42e616:	aam    0xe3
  42e618:	call   0xef62ae1c
  42e61d:	pop    es
  42e61e:	outs   dx,BYTE PTR ds:[esi]
  42e61f:	test   dh,bh
  42e621:	adc    ebp,DWORD PTR [ecx-0x2a408062]
  42e627:	stos   BYTE PTR es:[edi],al
  42e628:	cmc    
  42e629:	jl     0x42e680
  42e62b:	mov    ds:0x99f08409,eax
  42e630:	add    al,BYTE PTR [eax]
  42e632:	push   0xffffff9c
  42e634:	jbe    0x42e639
  42e636:	out    dx,al
  42e637:	sbb    cl,BYTE PTR [ecx]
  42e639:	add    ecx,ebp
  42e63b:	sahf   
  42e63c:	mov    ebx,DWORD PTR [ecx+0x299b9]
  42e642:	not    BYTE PTR [edi]
  42e644:	xlat   BYTE PTR ds:[ebx]
  42e645:	pmaxsw mm2,QWORD PTR [edi]
  42e648:	inc    ecx
  42e649:	xchg   ah,dl
  42e64b:	mov    cl,BYTE PTR [esi]
  42e64d:	inc    eax
  42e64e:	jmp    0xf983f53
  42e653:	repnz arpl bp,ax
  42e656:	cli    
  42e657:	je     0x42e5ff
  42e659:	mov    ebx,DWORD PTR [ebp+esi*8-0x48]
  42e65d:	adc    eax,0x799674fb
  42e662:	ror    BYTE PTR [edi+0x22],cl
  42e665:	test   BYTE PTR [edi],0xe8
  42e668:	xchg   ebp,eax
  42e669:	adc    al,0x66
  42e66b:	jmp    0x9fc92940
  42e670:	idiv   al
  42e672:	and    eax,esi
  42e674:	pop    ds
  42e675:	js     0x42e6eb
  42e677:	fisttp QWORD PTR [edi+0x1e19bfb1]
  42e67d:	out    dx,al
  42e67e:	adc    ebp,DWORD PTR [esi+0xce7fd65]
  42e684:	pop    ds
  42e685:	js     0x42e681
  42e687:	cmp    eax,eax
  42e689:	scas   eax,DWORD PTR es:[edi]
  42e68a:	(bad)  
  42e68b:	call   0xf1b7602e
  42e690:	pop    ds
  42e691:	out    dx,al
  42e692:	pop    es
  42e693:	add    BYTE PTR [ecx*2-0x794c0008],cl
  42e69a:	inc    ebx
  42e69b:	sbb    BYTE PTR [edi-0x3cf0fd0c],dh
  42e6a1:	push   cs
  42e6a2:	add    DWORD PTR [eax],eax
  42e6a4:	add    al,0x10
  42e6a6:	test   ch,ch
  42e6a8:	add    al,0x1
  42e6aa:	add    BYTE PTR [ebx-0x7bf90091],al
  42e6b0:	add    DWORD PTR es:[eax],eax
  42e6b3:	add    BYTE PTR [eax],al
  42e6b5:	xchg   esp,esi
  42e6b7:	stc    
  42e6b8:	jae    0x42e6e5
  42e6ba:	jl     0x42e6ad
  42e6bc:	add    eax,0x4b8b5a28
  42e6c1:	scas   al,BYTE PTR es:[edi]
  42e6c2:	jl     0x42e6bb
  42e6c4:	add    DWORD PTR [ebx],edi
  42e6c6:	cmp    eax,0xc4a13b
  42e6cb:	add    BYTE PTR [ebp+edx*8-0x3f],dh
  42e6cf:	cdq    
  42e6d0:	add    BYTE PTR [eax+eax*1-0x641ec98c],dh
  42e6d7:	cli    
  42e6d8:	inc    esp
  42e6da:	ins    BYTE PTR es:[edi],dx
  42e6db:	and    eax,0x1543d
  42e6e0:	add    BYTE PTR [eax],ch
  42e6e2:	sub    DWORD PTR ds:0x84a5,edi
  42e6e8:	jne    0x42e6c2
  42e6ea:	out    0x55,eax
  42e6ec:	add    DWORD PTR [eax+eax*1-0x7d],esi
  42e6f0:	pop    ebp
  42e6f1:	jl     0x42e759
  42e6f3:	jmp    FWORD PTR [ecx-0x7c]
  42e6f6:	data16 cli 
  42e6f8:	push   edx
  42e6f9:	xor    ecx,DWORD PTR [esp+eiz*8]
  42e6fc:	adc    esi,DWORD PTR [esi+edi*8-0x7d7217b1]
  42e703:	cmc    
  42e704:	dec    edi
  42e706:	cmp    edx,DWORD PTR [edx]
  42e708:	mov    edx,DWORD PTR [ecx-0x628a0a7e]
  42e70e:	dec    ecx
  42e70f:	shr    eax,cl
  42e711:	enter  0x8084,0xfa
  42e715:	js     0x42e6e1
  42e717:	add    eax,DWORD PTR [eax]
  42e719:	add    BYTE PTR [ebp-0x6299fa92],bl
  42e71f:	inc    DWORD PTR [eax+0x6b61abfa]
  42e725:	and    al,0xd8
  42e727:	mov    DWORD PTR [ebx],eax
  42e729:	add    BYTE PTR [ebp-0x6299dcb2],bl
  42e72f:	aas    
  42e730:	and    dh,0xf3
  42e733:	push   es
  42e734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e735:	(bad)  
  42e736:	cli    
  42e737:	imul   esi,ecx,0x6e4a351c
  42e73d:	(bad)  
  42e73e:	jmp    0x43ec:0x921ff32c
  42e745:	dec    edi
  42e746:	inc    ebp
  42e747:	ja     0x42e746
  42e749:	call   FWORD PTR [ebp-0x35f80cec]
  42e74f:	xor    al,0xe1
  42e751:	pop    ecx
  42e752:	data16 and al,BYTE PTR [edx+0x1b]
  42e756:	popf   
  42e757:	mov    eax,ds:0xf69b2ff
  42e75d:	test   BYTE PTR [ebx+0x60fffe69],bh
  42e763:	retf   0x3
  42e766:	popf   
  42e767:	push   eax
  42e768:	jge    0x42e7a6
  42e76a:	ds imul edi,esi,0x39ef11ff
  42e771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e772:	popf   
  42e773:	imul   edi,esi,0xfe96210a
  42e779:	call   FWORD PTR [ebp+0xff9d76]
  42e77f:	push   0x69
  42e781:	icebp  
  42e782:	leave  
  42e783:	push   ss
  42e784:	push   es
  42e785:	or     al,0x66
  42e787:	pushf  
  42e788:	add    ah,BYTE PTR [edx-0x17175d0a]
  42e78e:	aam    0x47
  42e790:	or     eax,0x2dd148d
  42e795:	cmp    DWORD PTR [edi+ebx*2+0x77],ebp
  42e799:	add    DWORD PTR [eax-0x5a4452c5],0x10e8732a
  42e7a3:	sbb    BYTE PTR [ebx],dh
  42e7a5:	push   0xffffff80
  42e7a7:	pop    ss
  42e7a8:	xchg   DWORD PTR [ebx+0x4c20e0f],ebp
  42e7ae:	add    al,0x9d
  42e7b0:	add    cl,ch
  42e7b2:	mul    DWORD PTR [edx+edi*4]
  42e7b5:	or     BYTE PTR [edx+edi*8+0x72],dh
  42e7b9:	dec    ebp
  42e7ba:	mov    DWORD PTR [ebx+0x77],esi
  42e7bd:	out    dx,eax
  42e7be:	mul    DWORD PTR [ebx+eax*1+0x72e7ca63]
  42e7c5:	sub    DWORD PTR [ebx+edx*8+0x53b5a310],eax
  42e7cc:	ja     0x42e7c2
  42e7ce:	mul    DWORD PTR [edi+edi*2+0x7d96160d]
  42e7d5:	rol    BYTE PTR [eax-0x5a3c8d49],cl
  42e7db:	mov    dl,0x72
  42e7dd:	call   0xf24207f2
  42e7e2:	jg     0x42e7e4
  42e7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7e5:	mov    ecx,0x729a7268
  42e7ea:	iret   
  42e7eb:	rcl    DWORD PTR [edi+0x2b41d972],cl
  42e7f1:	add    ebp,ecx
  42e7f3:	add    edx,DWORD PTR [esi+0x777eba87]
  42e7f9:	jb     0x42e7ca
  42e7fb:	ds jbe 0x42e870
  42e7fe:	mov    ecx,0xff7267bd
  42e803:	call   0xe9e117a6
  42e808:	sahf   
  42e809:	add    dh,BYTE PTR [ebp-0x30]
  42e80c:	daa    
  42e80d:	(bad)  
  42e80e:	or     esi,DWORD PTR [edx+0x61]
  42e811:	es test eax,0x39ee9
  42e817:	fisub  WORD PTR [edx]
  42e819:	xor    eax,0x26b286fb
  42e81e:	add    cl,ch
  42e820:	sahf   
  42e821:	add    esi,ebx
  42e823:	xchg   ecx,eax
  42e824:	xchg   BYTE PTR [edx+0x24],al
  42e827:	jns    0x42e7ca
  42e829:	add    al,BYTE PTR [eax]
  42e82b:	in     al,dx
  42e82c:	into   
  42e82d:	jb     0x42e82e
  42e82f:	call   0x43029dcf
  42e834:	lods   al,BYTE PTR ds:[esi]
  42e835:	das    
  42e836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e837:	jmp    0x6c4deada
  42e83c:	xchg   ebp,eax
  42e83d:	ins    DWORD PTR es:[edi],dx
  42e83e:	cli    
  42e83f:	ds push ss
  42e841:	inc    ebx
  42e842:	popa   
  42e843:	ins    BYTE PTR es:[edi],dx
  42e844:	pop    ecx
  42e845:	cld    
  42e846:	and    eax,0x0
  42e849:	pop    ebx
  42e84a:	ins    BYTE PTR es:[edi],dx
  42e84b:	cli    
  42e84c:	(bad)  
  42e84d:	xchg   edi,eax
  42e84e:	inc    ebx
  42e84f:	or     ah,BYTE PTR [edx+edi*1+0x6b]
  42e853:	cli    
  42e854:	push   ss
  42e855:	inc    edx
  42e856:	neg    BYTE PTR [edi]
  42e858:	push   cs
  42e859:	mov    ah,0x9
  42e85b:	data16 add BYTE PTR [ecx+0x5b],0xf9
  42e860:	(bad)  
  42e861:	sub    edx,esi
  42e863:	xchg   BYTE PTR ds:0x9a5b5e1e,al
  42e869:	jo     0x42e7f3
  42e86b:	out    dx,eax
  42e86c:	jb     0x42e8c6
  42e86e:	add    DWORD PTR [ebx+0x1a],edx
  42e871:	or     bh,BYTE PTR [ebx+0x7c]
  42e874:	fnstsw WORD PTR [eax+0x2a]
  42e877:	mov    eax,0x2a1f9
  42e87c:	add    BYTE PTR [eax+0x6c45ee1c],dh
  42e882:	push   es
  42e883:	je     0x42e896
  42e885:	(bad)  
  42e886:	cmp    cl,BYTE PTR [edx]
  42e888:	mov    edi,DWORD PTR [ecx+0x2cd68312]
  42e88e:	inc    esp
  42e88f:	icebp  
  42e890:	jmp    FWORD PTR [ebx]
  42e892:	test   BYTE PTR [ebx+0x8],ah
  42e895:	sub    dh,bh
  42e897:	inc    ebx
  42e898:	or     BYTE PTR [eax+0x79],al
  42e89b:	and    eax,0x4d58456a
  42e8a0:	xor    edi,edi
  42e8a2:	fdiv   QWORD PTR [ebp-0x1e0f5406]
  42e8a8:	and    bh,BYTE PTR [edi-0x7b]
  42e8ab:	add    al,BYTE PTR [ecx]
  42e8ad:	add    BYTE PTR [eax*1+0x2c704589],al
  42e8b4:	mov    edi,0x7b7df175
  42e8b9:	in     al,0x5f
  42e8bb:	adc    eax,0x7cc4324f
  42e8c0:	enter  0x9de8,0x24
  42e8c4:	idiv   edi
  42e8c6:	sti    
  42e8c7:	mov    bh,0xba
  42e8c9:	mov    DWORD PTR [ecx],eax
  42e8cb:	jmp    0x7c172f51
  42e8d0:	dec    ebx
  42e8d1:	or     al,0x4f
  42e8d3:	bound  eax,QWORD PTR [edx]
  42e8d5:	mov    DWORD PTR [eax*1+0x7bc40001],edi
  42e8dc:	inc    eax
  42e8dd:	adc    BYTE PTR [edi],ch
  42e8df:	push   edx
  42e8e0:	or     cl,BYTE PTR [ecx+0x1092c]
  42e8e6:	mov    ah,0x2b
  42e8e8:	xlat   BYTE PTR ds:[ebx]
  42e8e9:	verw   WORD PTR [esi-0x4]
  42e8ed:	inc    DWORD PTR [ebp+edi*2+0x67f7f05b]
  42e8f4:	jmp    0x9c66:0x7cd9d02
  42e8fb:	inc    esp
  42e8fc:	add    edx,esi
  42e8fe:	pop    esi
  42e8ff:	pop    esi
  42e900:	repnz add eax,0x86fee9d2
  42e906:	push   ebx
  42e907:	inc    edx
  42e908:	ja     0x42e92a
  42e90a:	pop    edx
  42e90b:	mov    eax,ds:0xdd415c86
  42e910:	loop   0x42e8fd
  42e912:	add    BYTE PTR [ebp+0x15],bh
  42e915:	or     BYTE PTR [esi-0x64],ah
  42e918:	test   BYTE PTR [ecx],al
  42e91a:	repnz pop esi
  42e91c:	sbb    bh,al
  42e91e:	add    eax,0x870829ca
  42e923:	pop    ebx
  42e924:	xchg   edx,eax
  42e925:	pop    ebx
  42e926:	and    BYTE PTR [edx],ah
  42e928:	stc    
  42e929:	xchg   BYTE PTR [ebp+eax*1-0x23],bl
  42e92d:	loop   0x42e916
  42e92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e930:	dec    ebp
  42e931:	add    ah,BYTE PTR [esi-0x64]
  42e934:	aam    0x1
  42e936:	repnz fisubr WORD PTR [ecx-0xe]
  42e93a:	add    eax,0x86fd8952
  42e93f:	jecxz  0x42e912
  42e941:	mov    edi,0x8930ea20
  42e946:	inc    ecx
  42e947:	lea    edi,[eax]
  42e949:	mov    ah,0x3
  42e94b:	pushf  
  42e94c:	pop    ecx
  42e94d:	dec    BYTE PTR [eax+ebp*2-0x625082df]
  42e954:	pop    edx
  42e955:	(bad)  
  42e956:	push   DWORD PTR [edi]
  42e958:	jge    0x42e92f
  42e95a:	out    0xf,eax
  42e95c:	cdq    
  42e95d:	jl     0x42e959
  42e95f:	add    cl,BYTE PTR es:[ecx+0x43dca544]
  42e966:	icebp  
  42e967:	adc    al,0xf7
  42e969:	jp     0x42e9e9
  42e96b:	xchg   ebp,eax
  42e96c:	push   0x30733f3
  42e971:	(bad)  
  42e973:	xchg   DWORD PTR ds:0xdd0010dd,edx
  42e979:	add    al,BYTE PTR [eax+0x29029d03]
  42e97f:	clc    
  42e980:	mov    esi,0x5d03e8a9
  42e985:	add    ch,BYTE PTR [esi+0x53]
  42e988:	adc    DWORD PTR [ecx-0x13],0x52
  42e98c:	into   
  42e98d:	pop    ss
  42e98e:	add    BYTE PTR [ebx],0x9d
  42e991:	push   es
  42e992:	imul   esi,esi,0x1699d79a
  42e998:	in     eax,0x16
  42e99a:	sub    DWORD PTR [eax+eiz*1],eax
  42e99d:	inc    edx
  42e99e:	adc    al,0x7
  42e9a0:	and    al,0xc5
  42e9a2:	test   BYTE PTR [eax-0x8867ace],cl
  42e9a8:	jno    0x42e981
  42e9aa:	sbb    BYTE PTR [ecx-0x54969047],0xd2
  42e9b1:	test   BYTE PTR ds:0xd4768839,0x16
  42e9b8:	jnp    0x42e9bc
  42e9ba:	mov    edx,0xf566917c
  42e9bf:	ret    
  42e9c0:	repnz fsub st,st(7)
  42e9c3:	jmp    0x5cb0a8b2
  42e9c8:	cli    
  42e9c9:	(bad)  
  42e9ca:	das    
  42e9cb:	jl     0x42e9a4
  42e9cd:	inc    esi
  42e9ce:	mov    ds:0xe9029d7b,eax
  42e9d3:	add    eax,edx
  42e9d5:	lds    ebp,FWORD PTR [ebp-0x22]
  42e9d8:	into   
  42e9d9:	test   BYTE PTR ds:0xd37900f7,ch
  42e9df:	or     DWORD PTR [esi],edx
  42e9e1:	inc    ebp
  42e9e2:	push   ss
  42e9e3:	test   eax,0x74422003
  42e9e8:	pop    ds
  42e9e9:	sbb    BYTE PTR [edi-0x1],ch
  42e9ec:	jl     0x42e992
  42e9ee:	xor    eax,0x709875db
  42e9f3:	inc    esp
  42e9f4:	int    0x9e
  42e9f6:	test   BYTE PTR [ecx],0x70
  42e9f9:	fs push 0xffffffc2
  42e9fc:	sub    al,0xf9
  42e9fe:	add    al,BYTE PTR [eax]
  42ea00:	jmp    0xd3396fa3
  42ea05:	pop    DWORD PTR [ebx-0x7d660e84]
  42ea0b:	(bad)  
  42ea0c:	call   0xe8a8e95b
  42ea11:	inc    eax
  42ea12:	outs   dx,BYTE PTR ds:[esi]
  42ea13:	push   0xe75593e9
  42ea18:	cmp    al,al
  42ea1a:	push   0xf8b66cfa
  42ea1f:	sbb    DWORD PTR [esi],0xffffff98
  42ea22:	add    al,BYTE PTR [eax]
  42ea24:	je     0x42ea82
  42ea26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea27:	dec    edi
  42ea28:	push   ss
  42ea29:	faddp  st(6),st
  42ea2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea2c:	mov    ch,0x9e
  42ea2e:	add    al,BYTE PTR [eax]
  42ea30:	outs   dx,BYTE PTR ds:[esi]
  42ea31:	lods   al,BYTE PTR ds:[esi]
  42ea32:	sub    dl,BYTE PTR [ecx+ebp*4]
  42ea35:	sahf   
  42ea36:	xchg   DWORD PTR [edi+0x13682ee],edi
  42ea3c:	jmp    0xacf5e3df
  42ea41:	add    BYTE PTR [esi-0x5d534d07],cl
  42ea47:	inc    ebx
  42ea48:	fcompp 
  42ea4a:	xchg   ebx,eax
  42ea4b:	dec    edx
  42ea4c:	jle    0x42ea02
  42ea4e:	push   esi
  42ea4f:	add    dh,BYTE PTR [ebp+0x6]
  42ea52:	out    dx,al
  42ea53:	gs repz add eax,0xc9a76846
  42ea5a:	mov    dl,0x1
  42ea5c:	xchg   DWORD PTR [edx],edx
  42ea5e:	dec    edx
  42ea5f:	or     DWORD PTR [edi+0x45258ea4],eax
  42ea65:	add    BYTE PTR [ecx+edi*8-0x52],dh
  42ea69:	clc    
  42ea6a:	das    
  42ea6b:	inc    ebx
  42ea6c:	push   es
  42ea6d:	sub    ecx,DWORD PTR [ecx-0x4b]
  42ea70:	mov    edi,0xaef874e7
  42ea75:	ror    BYTE PTR [edi+0xf03e1e9],0x6b
  42ea7c:	add    al,BYTE PTR [ebx+0x73faf6d1]
  42ea82:	push   edx
  42ea83:	push   esp
  42ea84:	dec    ebp
  42ea85:	push   0x115
  42ea8a:	int3   
  42ea8b:	pop    es
  42ea8c:	cli    
  42ea8d:	inc    DWORD PTR [esp+ebx*8+0xc]
  42ea91:	idiv   BYTE PTR [ecx-0x2]
  42ea94:	add    esi,DWORD PTR [ecx+eiz*4+0x55]
  42ea98:	dec    ebp
  42ea99:	push   0x1d6
  42ea9e:	pushf  
  42ea9f:	add    al,0xfa
  42eaa1:	inc    DWORD PTR [eax+ebp*8+0x73]
  42eaa5:	clc    
  42eaa6:	add    BYTE PTR [ecx-0x5caf5dbe],dh
  42eaac:	jb     0x42eaa4
  42eaae:	mov    ecx,DWORD PTR [edx-0x27]
  42eab1:	and    al,0xfb
  42eab3:	sub    eax,0x79
  42eab6:	jge    0x42eb28
  42eab8:	add    DWORD PTR [esi+ecx*1+0x47],esi
  42eabc:	push   eax
  42eabd:	bound  esp,QWORD PTR [edi+0x68000104]
  42eac3:	sti    
  42eac4:	push   es
  42eac5:	add    BYTE PTR [eax],al
  42eac7:	dec    edi
  42eac8:	pop    ss
  42eac9:	out    dx,al
  42eaca:	inc    ebp
  42eacb:	in     al,dx
  42eacc:	inc    eax
  42eacd:	outs   dx,BYTE PTR ds:[esi]
  42eace:	sbb    eax,0xa8625037
  42ead3:	les    eax,FWORD PTR [eax]
  42ead5:	add    BYTE PTR [eax-0x34],ch
  42ead8:	push   es
  42ead9:	add    BYTE PTR [eax],al
  42eadb:	mov    ds:0x9d8df272,eax
  42eae0:	sahf   
  42eae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eae2:	dec    edi
  42eae3:	mov    dl,0x95
  42eae5:	jb     0x42ea6d
  42eae7:	jecxz  0x42eafb
  42eae9:	jb     0x42eae0
  42eaeb:	mov    ds:0x857c846b,al
  42eaf0:	pop    edx
  42eaf1:	jmp    0x9da3:0xe694ee09
  42eaf8:	pop    ecx
  42eaf9:	(bad)  
  42eafa:	addr16 cdq 
  42eafc:	push   edi
  42eafd:	(bad)  
  42eafe:	inc    DWORD PTR [esi-0x5abb8f98]
  42eb04:	imul   ebp,edx,0xec0cce1c
  42eb0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb0b:	add    BYTE PTR [ebp-0x5f9801a7],bl
  42eb11:	push   edi
  42eb12:	(bad)  
  42eb13:	call   DWORD PTR [edx+0x37]
  42eb16:	jl     0x42eaa4
  42eb18:	loopne 0x42eaeb
  42eb1a:	sar    edx,cl
  42eb1c:	enter  0x8c8d,0xc1
  42eb20:	inc    ebp
  42eb21:	(bad)  
  42eb22:	jns    0x42eb1e
  42eb24:	xor    dl,BYTE PTR [edx+edi*4+0x116d9c07]
  42eb2b:	dec    edi
  42eb2c:	retf   0xa411
  42eb2f:	call   FWORD PTR [edx]
  42eb31:	pop    edx
  42eb32:	out    0xff,al
  42eb34:	pushf  
  42eb35:	pop    ecx
  42eb36:	(bad)  
  42eb37:	cli    
  42eb38:	nop
  42eb39:	loope  0x42eabd
  42eb3b:	inc    esp
  42eb3c:	xor    eax,0xf97477aa
  42eb41:	loopne 0x42eb80
  42eb43:	out    0x14,eax
  42eb45:	sar    BYTE PTR [eax-0x6],1
  42eb48:	repnz sahf 
  42eb4a:	push   es
  42eb4b:	add    BYTE PTR [ebp-0x7d8c01a7],dl
  42eb51:	aas    
  42eb52:	(bad)  
  42eb53:	sub    eax,0xe745e0dd
  42eb58:	sti    
  42eb59:	add    al,BYTE PTR [edx]
  42eb5b:	jns    0x42eb24
  42eb5d:	sti    
  42eb5e:	push   ecx
  42eb5f:	(bad)  
  42eb60:	mov    ?,ebx
  42eb62:	pop    ecx
  42eb63:	inc    esp
  42eb64:	arpl   WORD PTR [ecx+0x7],ax
  42eb67:	adc    al,0xa2
  42eb69:	cmp    dl,BYTE PTR [edi-0x16ff6715]
  42eb6f:	add    eax,DWORD PTR [eax]
  42eb71:	xchg   esi,eax
  42eb72:	cmc    
  42eb73:	hlt    
  42eb74:	js     0x42eb1f
  42eb76:	cs aad 0xc3
  42eb79:	mov    cl,ah
  42eb7b:	inc    edx
  42eb7c:	fst    QWORD PTR [ebp+0x40]
  42eb7f:	clc    
  42eb80:	add    ebp,DWORD PTR [edi+0x5]
  42eb83:	or     DWORD PTR [eax-0x101afd4d],ebp
  42eb89:	mov    ebx,DWORD PTR [edx+0x3a]
  42eb8c:	fs popa 
  42eb8e:	imul   esp,DWORD PTR [ebx+eax*2-0x32],0x8
  42eb93:	pop    esi
  42eb94:	push   es
  42eb95:	lds    ebp,FWORD PTR [edx-0x4c69fbdb]
  42eb9b:	call   FWORD PTR [di-0x16fe]
  42eba0:	or     dh,ch
  42eba2:	js     0x42eb8c
  42eba4:	add    bl,BYTE PTR [ebp-0x659c57fe]
  42ebaa:	mul    DWORD PTR [edi+0x49252744]
  42ebb0:	minps  xmm0,XMMWORD PTR [edx]
  42ebb3:	jnp    0x42ebb3
  42ebb5:	mov    dl,0x9e
  42ebb7:	and    eax,0x20f6a104
  42ebbc:	ins    BYTE PTR es:[edi],dx
  42ebbd:	pop    esi
  42ebbe:	bound  ebx,QWORD PTR [ebx+0x78]
  42ebc1:	push   ds
  42ebc2:	inc    edx
  42ebc3:	fsubr  QWORD PTR [eax]
  42ebc5:	sbb    al,dh
  42ebc7:	add    al,0x0
  42ebc9:	and    BYTE PTR [edx-0x44],al
  42ebcc:	and    al,0x1a
  42ebce:	std    
  42ebcf:	sar    BYTE PTR [ebx+0x6200029b],1
  42ebd5:	add    BYTE PTR [edi],ah
  42ebd7:	imul   edi,edi,0xffffffe8
  42ebda:	sahf   
  42ebdb:	jns    0x42ebe4
  42ebdd:	jb     0x42eb7a
  42ebdf:	fidiv  DWORD PTR [edi-0x777c6156]
  42ebe5:	in     eax,dx
  42ebe6:	lahf   
  42ebe7:	add    al,BYTE PTR [eax]
  42ebe9:	pusha  
  42ebea:	(bad)  
  42ebeb:	(bad)  
  42ebec:	cs sub esi,ebx
  42ebef:	lods   al,BYTE PTR ds:[esi]
  42ebf0:	add    ebp,ecx
  42ebf2:	rol    DWORD PTR [edx-0x1a],1
  42ebf5:	lock or bl,BYTE PTR [edi]
  42ebf8:	cmp    ah,dl
  42ebfa:	pop    esi
  42ebfb:	push   0xfffffff4
  42ebfd:	in     al,dx
  42ebfe:	mov    esi,0x7ae93e96
  42ec03:	imul   BYTE PTR [ecx]
  42ec05:	shl    esp,0x4c
  42ec08:	cld    
  42ec09:	into   
  42ec0a:	sbb    eax,0x380c73aa
  42ec0f:	loop   0x42ebc8
  42ec11:	sub    ah,BYTE PTR [ecx-0x62f2b47f]
  42ec17:	jnp    0x42eba0
  42ec19:	jmp    0x7242eebf
  42ec1e:	pop    ebp
  42ec1f:	or     BYTE PTR es:[edx-0x5c],dh
  42ec23:	fidiv  DWORD PTR [edi-0x7f8466d6]
  42ec29:	in     eax,0xa1
  42ec2b:	add    al,BYTE PTR [eax]
  42ec2d:	mov    edx,0xf1be29de
  42ec32:	sahf   
  42ec33:	ins    DWORD PTR es:[edi],dx
  42ec34:	and    al,0x71
  42ec36:	lods   eax,DWORD PTR ds:[esi]
  42ec37:	ret    0x76ff
  42ec3a:	add    BYTE PTR [edx+eiz*1-0x1615554],bl
  42ec41:	dec    esi
  42ec42:	mov    bh,0xeb
  42ec44:	cmc    
  42ec45:	inc    esp
  42ec46:	inc    ecx
  42ec47:	xor    al,0x4d
  42ec49:	cld    
  42ec4a:	dec    esi
  42ec4b:	sbb    eax,0x980073aa
  42ec50:	jge    0x42eca8
  42ec52:	and    al,0xf4
  42ec54:	xor    al,0xee
  42ec56:	cmp    ebp,DWORD PTR [edx+0x32561373]
  42ec5c:	cmp    BYTE PTR [ecx],ch
  42ec5e:	fstp   TBYTE PTR [edx]
  42ec60:	inc    esi
  42ec61:	mov    dl,0x43
  42ec63:	(bad)  
  42ec64:	fld    QWORD PTR ds:0x55f18bf7
  42ec6a:	pop    esi
  42ec6b:	out    dx,eax
  42ec6c:	ret    
  42ec6d:	(bad)  
  42ec6e:	call   FWORD PTR [ebx+0x44115c13]
  42ec74:	add    eax,0xe6ff534e
  42ec79:	cmc    
  42ec7a:	adc    eax,0x4015a0
  42ec7f:	mov    edi,0xb20573e6
  42ec84:	cmp    BYTE PTR [ebp-0x15],cl
  42ec87:	xor    esi,DWORD PTR [eax+eax*8]
  42ec8a:	jmp    0x42ecc5
  42ec8c:	push   eax
  42ec8d:	pop    eax
  42ec8e:	pop    ebx
  42ec8f:	pop    ebx
  42ec90:	and    dl,al
  42ec92:	adc    al,0x84
  42ec94:	(bad)  
  42ec95:	in     eax,dx
  42ec96:	add    eax,0x399aa4
  42ec9b:	inc    eax
  42ec9c:	pop    ecx
  42ec9d:	aas    
  42ec9e:	call   0xfc147ea3
  42eca3:	inc    eax
  42eca5:	lds    ebp,FWORD PTR [esi+0x38]
  42eca8:	or     edx,DWORD PTR [edx]
  42ecaa:	pop    esp
  42ecab:	adc    DWORD PTR [esi+edi*8-0x7e],esi
  42ecaf:	or     eax,0x39a68c
  42ecb4:	fnstsw WORD PTR [ebp+0x6]
  42ecb7:	add    DWORD PTR [eax*1+0x38a71975],eax
  42ecbe:	sub    eax,eax
  42ecc0:	inc    esp
  42ecc1:	push   ebp
  42ecc2:	dec    edx
  42ecc3:	xor    ebx,DWORD PTR [edi-0x51]
  42ecc6:	push   edx
  42ecc7:	mov    eax,0xe7fe9c9d
  42eccc:	aaa    
  42eccd:	shl    DWORD PTR [ecx-0x6],1
  42ecd0:	scas   al,BYTE PTR es:[edi]
  42ecd1:	sbb    edx,ebp
  42ecd3:	aas    
  42ecd4:	jbe    0x42ecf2
  42ecd6:	jmp    0x1a88bedf
  42ecdb:	push   cs
  42ecdc:	pop    ebp
  42ecdd:	pop    ebx
  42ecde:	sub    eax,0x201fdec0
  42ece3:	dec    esp
  42ece4:	nop
  42ece5:	fwait
  42ece6:	(bad)  
  42ece7:	icebp  
  42ece8:	cwde   
  42ece9:	cmp    esp,DWORD PTR [edx-0x33a062c2]
  42ecef:	jae    0x42ed47
  42ecf1:	adc    edx,DWORD PTR [eax]
  42ecf3:	fistp  DWORD PTR [eax+0x9bf7969]
  42ecf9:	pushf  
  42ecfa:	jno    0x42ed10
  42ecfc:	jmp    0x1842ab4b
  42ed01:	outs   dx,DWORD PTR ds:[esi]
  42ed02:	out    0xb7,al
  42ed04:	add    dh,bl
  42ed06:	pop    ecx
  42ed07:	xor    eax,0xfe5aa181
  42ed0c:	push   eax
  42ed0e:	dec    DWORD PTR [eax-0x1a56a50]
  42ed14:	jmp    DWORD PTR [eax]
  42ed16:	mov    al,0xef
  42ed18:	pop    ds
  42ed19:	jmp    0x42eccb
  42ed1b:	or     ch,BYTE PTR [eax-0x4f]
  42ed1e:	sbb    DWORD PTR [eax*4+0x4f0b075d],eax
  42ed25:	int    0x29
  42ed27:	aam    0x2e
  42ed29:	push   esi
  42ed2a:	rcr    bl,1
  42ed2c:	mov    bh,0xde
  42ed2e:	pop    ecx
  42ed2f:	inc    dx
  42ed31:	sub    eax,DWORD PTR [ecx-0x6631a98c]
  42ed37:	sar    DWORD PTR [esi-0x412e67da],1
  42ed3d:	imul   ebx,eax,0x1a
  42ed40:	in     al,dx
  42ed41:	test   eax,0x7a03a902
  42ed46:	out    0x4,al
  42ed48:	add    BYTE PTR [ebp+0x66810fee],bl
  42ed4e:	push   ds
  42ed4f:	in     eax,0x74
  42ed51:	outs   dx,BYTE PTR ds:[esi]
  42ed52:	xor    al,0x6c
  42ed54:	outs   dx,BYTE PTR ds:[esi]
  42ed55:	dec    esi
  42ed56:	sbb    BYTE PTR [ebx],dh
  42ed58:	push   DWORD PTR [edx-0x5efc5a6a]
  42ed5e:	out    dx,al
  42ed5f:	add    ebp,DWORD PTR [edx+edi*8+0x48]
  42ed63:	and    esi,DWORD PTR [ebp+0x1e]
  42ed66:	inc    ebx
  42ed67:	xchg   esp,eax
  42ed68:	pop    ss
  42ed69:	add    ah,bh
  42ed6b:	ficom  DWORD PTR [eax-0x3f]
  42ed6e:	stos   BYTE PTR es:[edi],al
  42ed6f:	jl     0x42edd9
  42ed71:	add    al,0x9c
  42ed73:	add    ch,cl
  42ed75:	mov    bl,ah
  42ed77:	push   cs
  42ed78:	dec    eax
  42ed79:	in     al,dx
  42ed7a:	dec    edx
  42ed7b:	ret    
  42ed7c:	call   0xe841f809
  42ed81:	add    ebx,DWORD PTR [ebp+0x3b1c2a79]
  42ed87:	(bad)  
  42ed88:	call   0xd31095a
  42ed8d:	or     al,0xce
  42ed8f:	addr16 push esp
  42ed91:	and    BYTE PTR [ebp-0x4adfc399],al
  42ed97:	addr16 xor al,0x20
  42ed9a:	mov    ch,0xd0
  42ed9c:	mov    cl,0xe
  42ed9e:	popa   
  42ed9f:	push   cs
  42eda0:	sub    DWORD PTR [edx+ebx*1],eax
  42eda3:	push   0x39
  42eda5:	ins    BYTE PTR es:[edi],dx
  42eda6:	push   ss
  42eda7:	addr16 cdq 
  42eda9:	je     0x42edc6
  42edab:	aas    
  42edac:	xor    esi,edx
  42edae:	call   0x1c10d6c4
  42edb3:	out    dx,al
  42edb4:	int3   
  42edb5:	or     ebp,DWORD PTR [esi+0x67]
  42edb8:	hlt    
  42edb9:	pop    ds
  42edba:	mov    ch,0x67
  42edbc:	(bad)  
  42edbd:	cld    
  42edbe:	stos   BYTE PTR es:[edi],al
  42edbf:	or     bh,bl
  42edc1:	cmc    
  42edc2:	mov    ds:0xab66520a,al
  42edc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edc8:	adc    ebp,DWORD PTR [ecx-0x41088062]
  42edce:	add    BYTE PTR [esi-0xd],dh
  42edd1:	cli    
  42edd2:	dec    esi
  42edd3:	imul   eax,DWORD PTR [eax-0x5b0f593e],0x7fe3e90f
  42eddd:	jmp    0x42ed7e
  42eddf:	adc    eax,0x499607ee
  42ede4:	out    dx,al
  42ede5:	pop    ss
  42ede6:	es retf 
  42ede8:	adc    bh,bl
  42edea:	xchg   esp,eax
  42edeb:	mov    gs,WORD PTR [ebx+0x74]
  42edee:	in     eax,0xd8
  42edf0:	imul   edx,DWORD PTR [ecx+ebp*8],0xffffff93
  42edf4:	ret    0x71ff
  42edf7:	push   ss
  42edf8:	shl    edi,1
  42edfa:	mov    bl,0x9
  42edfc:	imul   edi,edx,0x59c8c962
  42ee02:	mov    esp,ds
  42ee04:	adc    DWORD PTR [eax],eax
  42ee06:	cmp    al,0xfa
  42ee08:	pop    ecx
  42ee09:	push   ecx
  42ee0a:	jb     0x42ee80
  42ee0c:	(bad)  
  42ee0d:	push   edx
  42ee0e:	(bad)  
  42ee0f:	fs push cs
  42ee11:	sti    
  42ee12:	push   esp
  42ee13:	test   DWORD PTR [ecx+0x74],ebp
  42ee16:	fxch   st(7)
  42ee18:	out    dx,al
  42ee19:	or     edx,DWORD PTR [edi]
  42ee1b:	into   
  42ee1c:	push   cs
  42ee1d:	inc    esp
  42ee1e:	fcomp  QWORD PTR [esi+0x66]
  42ee21:	test   DWORD PTR [ecx-0x59e5a19a],esi
  42ee27:	scas   al,BYTE PTR es:[edi]
  42ee28:	push   0xcc4ea686
  42ee2d:	pop    esp
  42ee2e:	stos   DWORD PTR es:[edi],eax
  42ee2f:	test   DWORD PTR [edx],eax
  42ee31:	push   ebp
  42ee32:	bound  eax,QWORD PTR [eax]
  42ee34:	mov    ebp,0xe400ebe4
  42ee39:	dec    ebx
  42ee3a:	dec    ebp
  42ee3b:	mov    edx,DWORD PTR [ecx+0x2]
  42ee3e:	adc    eax,0xee2cf440
  42ee43:	push   0xfffffa73
  42ee48:	into   
  42ee49:	lock push eax
  42ee4b:	dec    ecx
  42ee4d:	imul   esp,DWORD PTR [ecx+eax*1+0x53],0x34144c0b
  42ee55:	add    cl,BYTE PTR [ecx-0xd829fbb]
  42ee5b:	add    DWORD PTR [eax],ecx
  42ee5d:	sbb    eax,0x51904583
  42ee62:	pop    eax
  42ee63:	leave  
  42ee64:	jbe    0x42ee60
  42ee66:	inc    DWORD PTR [edx+0x740cde01]
  42ee6c:	xchg   ebp,eax
  42ee6d:	add    DWORD PTR [ebx-0x20],0xffffffe4
  42ee71:	lock adc esi,eax
  42ee74:	test   al,0x41
  42ee76:	cli    
  42ee77:	mov    WORD PTR [ecx-0x1f],cs
  42ee7a:	dec    edx
  42ee7b:	jmp    FWORD PTR [ecx+0x51]
  42ee7e:	push   cs
  42ee7f:	inc    eax
  42ee80:	je     0x42eec9
  42ee82:	call   DWORD PTR [ebp+0x2a]
  42ee85:	dec    ebx
  42ee86:	mov    eax,DWORD PTR [ebp+0x64]
  42ee89:	push   ecx
  42ee8a:	cmc    
  42ee8b:	xlat   BYTE PTR ds:[ebx]
  42ee8c:	stc    
  42ee8d:	shl    DWORD PTR [ebx-0x29],0x5f
  42ee91:	scas   al,BYTE PTR es:[edi]
  42ee92:	cmc    
  42ee93:	je     0x42ee2d
  42ee95:	cli    
  42ee96:	not    BYTE PTR ds:0x400f7800
  42ee9c:	add    BYTE PTR [ebx],dl
  42ee9e:	sbb    ah,BYTE PTR [eax-0x9018bee]
  42eea4:	je     0x42ee3e
  42eea6:	cli    
  42eea7:	popa   
  42eea8:	add    BYTE PTR [esi+edi*8-0xfbbf001],cl
  42eeaf:	adc    ebp,esp
  42eeb1:	popf   
  42eeb2:	push   0xffffffbe
  42eeb4:	call   FWORD PTR [ecx]
  42eeb6:	fwait
  42eeb7:	repnz push es
  42eeb9:	ins    DWORD PTR es:[edi],dx
  42eeba:	jl     0x42eed3
  42eebc:	mov    al,ds:0xb0041baf
  42eec1:	pushf  
  42eec2:	add    BYTE PTR [esi+ebp*1],0xdd
  42eec6:	cwde   
  42eec7:	add    al,BYTE PTR [eax]
  42eec9:	push   eax
  42eeca:	lock pop edx
  42eecc:	jle    0x42eecf
  42eece:	imul   edx,ecx,0x51
  42eed1:	push   ss
  42eed2:	push   es
  42eed3:	fmul   QWORD PTR [edi]
  42eed5:	pop    ebp
  42eed6:	pop    ebx
  42eed7:	xor    edi,edx
  42eed9:	outs   dx,BYTE PTR ds:[esi]
  42eeda:	out    dx,al
  42eedb:	(bad)  
  42eedc:	imul   DWORD PTR [ebp-0x78]
  42eedf:	fadd   QWORD PTR [ebx]
  42eee1:	outs   dx,BYTE PTR ds:[esi]
  42eee2:	mov    cl,dl
  42eee4:	cli    
  42eee5:	dec    eax
  42eee6:	arpl   WORD PTR [esi+0x5c],si
  42eee9:	mov    edx,0x9d000392
  42eeee:	fld    TBYTE PTR [ebp-0x2f]
  42eef1:	and    BYTE PTR [ebx],bl
  42eef3:	clc    
  42eef4:	dec    esi
  42eef5:	dec    edx
  42eef6:	loopne 0x42ef27
  42eef8:	je     0x42eea7
  42eefa:	cdq    
  42eefb:	dec    BYTE PTR [eax-0x238e1000]
  42ef01:	add    ecx,DWORD PTR [edx-0x669a0519]
  42ef07:	jg     0x42ef11
  42ef09:	pop    eax
  42ef0a:	test   esp,ebx
  42ef0c:	clc    
  42ef0d:	cli    
  42ef0e:	jb     0x42eee7
  42ef10:	ret    0xcdef
  42ef13:	faddp  st(2),st
  42ef15:	repz int 0x28
  42ef18:	(bad)  
  42ef1a:	out    dx,eax
  42ef1b:	or     ch,dl
  42ef1d:	cli    
  42ef1e:	enter  0x6f55,0x74
  42ef22:	inc    ebp
  42ef23:	lods   eax,DWORD PTR ds:[esi]
  42ef24:	push   ebp
  42ef25:	test   BYTE PTR [ebp+0x2f],bl
  42ef28:	std    
  42ef29:	cli    
  42ef2a:	mov    al,0x2
  42ef2c:	popf   
  42ef2d:	jno    0x42ef7e
  42ef2f:	sbb    BYTE PTR [ebx],0x74
  42ef32:	popf   
  42ef33:	out    dx,al
  42ef34:	fnsave [eax-0x27]
  42ef37:	cli    
  42ef38:	gs out dx,eax
  42ef3a:	mov    ds:0xfb44f6de,al
  42ef3f:	(bad)  
  42ef40:	mov    ds:0x720207c7,al
  42ef45:	test   DWORD PTR [edx],0x20d19164
  42ef4b:	mov    esi,0x394bd261
  42ef50:	es cld 
  42ef52:	jmp    0x6776:0xbee063ce
  42ef59:	pusha  
  42ef5a:	jmp    0x91cc:0x6203e900
  42ef61:	xor    al,0x0
  42ef63:	fnsave [ebp+0x63]
  42ef66:	test   al,0xc1
  42ef68:	arpl   WORD PTR [ecx],bp
  42ef6a:	shr    DWORD PTR [edx-0x2e],cl
  42ef6d:	mov    fs,WORD PTR [edi]
  42ef6f:	dec    ebp
  42ef70:	xor    BYTE PTR [esi],bh
  42ef72:	jno    0x42ef05
  42ef74:	shl    ch,cl
  42ef76:	ret    
  42ef77:	mov    ds:0xbf7287e,al
  42ef7c:	js     0x42ef39
  42ef7e:	iret   
  42ef7f:	mov    ds:0x217ee8c2,eax
  42ef84:	sahf   
  42ef85:	repz jo 0x42ef0f
  42ef88:	shr    cl,cl
  42ef8a:	pop    ecx
  42ef8b:	and    esp,DWORD PTR ds:0x2dd12d9
  42ef91:	into   
  42ef92:	sub    BYTE PTR [eax],bl
  42ef94:	jge    0x42ef22
  42ef96:	outs   dx,BYTE PTR ds:[esi]
  42ef97:	arpl   WORD PTR [bx+si],di
  42ef9a:	jno    0x42ef4d
  42ef9c:	out    0xd5,al
  42ef9e:	ret    
  42ef9f:	push   edx
  42efa0:	jbe    0x42f005
  42efa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efa3:	dec    ecx
  42efa4:	arpl   di,di
  42efa6:	mov    ch,0x6e
  42efa8:	push   0xc2915914
  42efad:	jmp    FWORD PTR [ebx-0x22]
  42efb0:	out    dx,eax
  42efb1:	cmp    DWORD PTR [ebx+eiz*1-0x61],ebp
  42efb5:	cld    
  42efb6:	xchg   esi,eax
  42efb7:	lods   eax,DWORD PTR ds:[esi]
  42efb8:	mov    bl,0xfa
  42efba:	mov    bh,0xf8
  42efbc:	fimul  WORD PTR [esp+ebp*1+0x648cb33d]
  42efc3:	inc    edx
  42efc4:	data16 cli 
  42efc6:	jbe    0x42efc8
  42efc8:	out    dx,al
  42efc9:	shl    BYTE PTR [si+0x5e],cl
  42efcd:	out    dx,eax
  42efce:	ror    edi,0x19
  42efd1:	out    0xbf,al
  42efd3:	loop   0x42efc8
  42efd5:	or     edi,ebx
  42efd7:	fdivr  st(2),st
  42efd9:	adc    eax,eax
  42efdb:	(bad)  
  42efdc:	push   edi
  42efdd:	mov    esi,0xa2db740b
  42efe2:	dec    edi
  42efe3:	ds mov bl,0xea
  42efe6:	adc    DWORD PTR [ecx-0x4b408262],ebp
  42efec:	mov    ds:0xb0120093,al
  42eff1:	fmul   QWORD PTR [edi]
  42eff3:	push   ds
  42eff4:	mov    bl,0xe6
  42eff6:	out    0xb2,eax
  42eff8:	pop    esp
  42eff9:	data16 cli 
  42effb:	scas   al,BYTE PTR es:[edi]
  42effc:	ins    BYTE PTR es:[edi],dx
  42effd:	mov    BYTE PTR [esi+0x734719a2],bh
  42f003:	xor    al,ah
  42f005:	add    eax,0x6e019c00
  42f00a:	cmp    ch,0xab
  42f00d:	add    eax,DWORD PTR [eax]
  42f00f:	jmp    0x5395a463
  42f014:	xchg   ecx,eax
  42f015:	pop    ebp
  42f016:	je     0x42eff9
  42f018:	out    0x3a,eax
  42f01a:	mov    WORD PTR [ecx+edx*8],ds
  42f01d:	mov    dl,0xe7
  42f01f:	add    dh,bl
  42f021:	ret    
  42f022:	sti    
  42f023:	inc    DWORD PTR [ebp+0x4b]
  42f026:	jmp    0xc1:0xee4b4566
  42f02d:	pop    esp
  42f02e:	neg    DWORD PTR [ebp+0x31]
  42f031:	sbb    eax,0x1f47ff29
  42f037:	sub    al,al
  42f039:	mov    esi,0xf40c033a
  42f03e:	cmp    DWORD PTR [ebx],ecx
  42f040:	clc    
  42f041:	les    eax,FWORD PTR [ebp+0x49fb04f2]
  42f047:	mov    ebp,0x2ef7741
  42f04c:	jb     0x42f06d
  42f04e:	xor    BYTE PTR [ebp+0x10],bh
  42f051:	shr    BYTE PTR [edx],1
  42f053:	div    DWORD PTR [ebp-0x1c]
  42f056:	add    BYTE PTR [ebx-0xa0eb518],0x89
  42f05d:	sub    DWORD PTR [edi-0x41a40008],edi
  42f063:	es xor al,0x8b
  42f066:	icebp  
  42f067:	adc    BYTE PTR fs:[esi],ch
  42f06a:	xor    DWORD PTR [ebx-0x10],0x59
  42f06e:	mov    esp,edx
  42f070:	(bad)  
  42f071:	jnp    0x42f064
  42f073:	loop   0x42f0de
  42f075:	shl    al,1
  42f077:	cmc    
  42f078:	cmovb  ecx,DWORD PTR [ebx+0xe]
  42f07c:	sub    eax,ebx
  42f07e:	pop    edx
  42f07f:	push   ds
  42f080:	dec    eax
  42f081:	adc    BYTE PTR [edx+0x42],ah
  42f084:	jne    0x42f0f0
  42f086:	lods   eax,DWORD PTR ds:[esi]
  42f087:	mov    ss,WORD PTR [esp+esi*1-0x60f89dfb]
  42f08e:	or     DWORD PTR [eax+0x45f000a4],edi
  42f094:	cli    
  42f095:	imul   eax,DWORD PTR [edx-0x6274b5b0],0x45ee75b0
  42f09f:	mov    dh,dh
  42f0a1:	stc    
  42f0a2:	push   edx
  42f0a3:	(bad)  
  42f0a4:	or     dh,BYTE PTR [edi-0x49]
  42f0a7:	repz into 
  42f0a9:	mov    eax,ds
  42f0ab:	fwait
  42f0ac:	into   
  42f0ad:	cli    
  42f0ae:	nop
  42f0af:	das    
  42f0b0:	adc    al,BYTE PTR [eax-0x63]
  42f0b3:	enter  0x56c9,0x54
  42f0b7:	lods   eax,DWORD PTR ds:[esi]
  42f0b8:	push   cs
  42f0b9:	add    BYTE PTR [edi+0x6d27d667],dh
  42f0bf:	sub    al,0x4
  42f0c1:	call   0x46f832
  42f0c6:	into   
  42f0c7:	fldenv [ebx]
  42f0c9:	jne    0x42f0cc
  42f0cb:	in     al,0xc0
  42f0cd:	cmp    ebx,DWORD PTR [esi+0x65b2f9ad]
  42f0d3:	pop    edi
  42f0d4:	jg     0x42f121
  42f0d6:	pushf  
  42f0d7:	add    edi,ebx
  42f0d9:	mov    dl,0x5d
  42f0db:	jno    0x42f0c1
  42f0dd:	test   ch,bl
  42f0df:	ss sbb eax,0xe4a89f66
  42f0e5:	lds    ebx,FWORD PTR ss:[ebx+0x774c8705]
  42f0ec:	std    
  42f0ed:	in     eax,dx
  42f0ee:	and    al,0x96
  42f0f0:	(bad)  
  42f0f1:	cli    
  42f0f2:	sub    al,0x43
  42f0f4:	aam    0xfa
  42f0f6:	add    BYTE PTR [eax-0x62bfec09],dl
  42f0fc:	out    dx,al
  42f0fd:	ds jae 0x42f0a0
  42f100:	cmp    al,0x74
  42f102:	mov    BYTE PTR [eax],cl
  42f104:	push   cs
  42f105:	jle    0x42f153
  42f107:	mov    DWORD PTR [ecx+0x78],esp
  42f10a:	shl    DWORD PTR [esi+0x67],0x2d
  42f10e:	rcr    ch,0x2c
  42f111:	jbe    0x42f177
  42f113:	test   DWORD PTR [ebx],eax
  42f115:	mov    di,0x6066
  42f119:	adc    eax,0x55177a44
  42f11e:	add    al,0x9d
  42f120:	inc    ebx
  42f121:	ds adc al,0xc5
  42f124:	cli    
  42f125:	sbb    cl,al
  42f127:	dec    edx
  42f128:	push   0x6042e9cc
  42f12d:	pop    ebp
  42f12e:	(bad)  
  42f12f:	stos   BYTE PTR es:[edi],al
  42f130:	mov    esi,DWORD PTR [esi+0x660ab179]
  42f136:	out    0x26,eax
  42f138:	add    ebp,DWORD PTR [esi-0x2d]
  42f13b:	adc    WORD PTR [edx+edi*8+0x3e],0x3
  42f141:	jmp    0x6d528e49
  42f146:	mov    cs,WORD PTR [edx]
  42f148:	pusha  
  42f149:	call   0x495017c6
  42f14e:	add    al,0x9d
  42f150:	add    ah,BYTE PTR [eax-0x31]
  42f153:	mov    ds:0x1efd3d85,al
  42f158:	(bad)
  42f15c:	popf   
  42f15d:	mov    esi,DWORD PTR [ebx+0x5f3adbff]
  42f163:	iret   
  42f164:	call   0xdd3a:0xce02e48d
  42f16b:	inc    ebx
  42f16c:	mov    ds:0xa0d85d43,eax
  42f171:	push   ss
  42f172:	(bad)  
  42f173:	jno    0x42f1f0
  42f175:	pop    esp
  42f176:	outs   dx,DWORD PTR ds:[esi]
  42f177:	out    dx,eax
  42f178:	xchg   esi,eax
  42f179:	mov    edi,DWORD PTR [ebx+0x5f3aa213]
  42f17f:	iret   
  42f180:	jp     0x42f105
  42f182:	int    0x3
  42f184:	or     DWORD PTR [edi-0x7c612e93],esi
  42f18a:	(bad)  
  42f18b:	sti    
  42f18c:	lock (bad) 
  42f18e:	jmp    DWORD PTR [ebx-0x79]
  42f191:	push   edi
  42f192:	sar    dh,1
  42f194:	neg    esi
  42f196:	punpckhdq mm0,QWORD PTR [ebx+0x4b71ff63]
  42f19d:	arpl   WORD PTR [esi],si
  42f19f:	mov    esi,0x960b134d
  42f1a4:	push   0xffffffd0
  42f1a6:	pop    es
  42f1a7:	dec    edi
  42f1a8:	and    cl,BYTE PTR [ebp+0x73]
  42f1ab:	add    al,0x1e
  42f1ad:	cmp    eax,0x29ee6fa
  42f1b2:	(bad)  
  42f1b3:	fstp   DWORD PTR [ebp+0x293c3631]
  42f1b9:	in     eax,dx
  42f1ba:	adc    DWORD PTR [esi+ebx*8-0x2d],esp
  42f1be:	add    edx,edx
  42f1c0:	add    BYTE PTR [esi-0x2c],ch
  42f1c3:	or     DWORD PTR [edx+0x3],esp
  42f1c6:	or     ebp,DWORD PTR [ecx]
  42f1c8:	ret    
  42f1c9:	test   DWORD PTR ds:0x15877eff,edx
  42f1cf:	xchg   esp,esi
  42f1d1:	mov    ds,WORD PTR [ebx+0x44]
  42f1d4:	test   DWORD PTR [ebp+0x46],edx
  42f1d7:	inc    cl
  42f1d9:	mov    ds:0x236aa367,al
  42f1de:	pop    ebx
  42f1df:	cli    
  42f1e0:	cdq    
  42f1e1:	lahf   
  42f1e2:	addr16 or al,0x1a
  42f1e5:	pop    ecx
  42f1e6:	pop    ds
  42f1e7:	mov    edi,0x7e66c372
  42f1ec:	lods   al,BYTE PTR ds:[esi]
  42f1ed:	xor    bl,BYTE PTR [ebp+ebp*1+0x29]
  42f1f1:	push   esi
  42f1f2:	loop   0x42f26a
  42f1f4:	jmp    0xe94e9297
  42f1f9:	(bad)  
  42f1fa:	repnz addr16 mov eax,ds:0x1fce
  42f1ff:	add    BYTE PTR [ecx],al
  42f201:	mov    cl,0xd5
  42f203:	(bad)  
  42f204:	call   0x71451e
  42f209:	mov    edi,0xffc5bd8
  42f20e:	dec    eax
  42f20f:	ss mov esi,eax
  42f212:	adc    DWORD PTR [eax-0x78],edx
  42f215:	and    edi,esp
  42f217:	fs inc eax
  42f219:	int3   
  42f21a:	push   es
  42f21b:	xor    BYTE PTR [eax],al
  42f21d:	je     0x42f250
  42f21f:	dec    ecx
  42f220:	(bad)  
  42f221:	stc    
  42f222:	pop    esi
  42f223:	cmc    
  42f224:	adc    eax,0x3ff4e400
  42f229:	add    ch,cl
  42f22b:	inc    ebx
  42f22c:	fidivr DWORD PTR [ebx]
  42f22e:	not    DWORD PTR [edx+0x51]
  42f231:	push   edi
  42f232:	call   0x81ea:0x1cb9cbe
  42f239:	enter  0x9bad,0xd6
  42f23d:	cmp    ebp,edi
  42f23f:	push   edx
  42f240:	das    
  42f241:	push   ebx
  42f242:	xlat   BYTE PTR ds:[ebx]
  42f243:	xor    BYTE PTR [ecx-0x2b40dbab],al
  42f249:	(bad)  
  42f24a:	and    ebp,edx
  42f24c:	jle    0x42f20e
  42f24e:	or     BYTE PTR [eax],dl
  42f250:	dec    ebx
  42f251:	push   edi
  42f252:	jae    0x42f2a7
  42f254:	(bad)  
  42f255:	(bad)  
  42f256:	jmp    0xecb8e83c
  42f25b:	call   0x42298673
  42f260:	cli    
  42f261:	test   BYTE PTR [ebp+ecx*1-0x21730840],0x43
  42f269:	out    0x63,eax
  42f26b:	push   ebx
  42f26c:	(bad)  
  42f26d:	call   0x3f0ed0
  42f272:	lods   al,BYTE PTR ds:[esi]
  42f273:	dec    edx
  42f274:	fnsave [ebp-0x37]
  42f277:	cmp    edx,edi
  42f279:	jg     0x42f22f
  42f27b:	add    DWORD PTR [ebx-0x1],ecx
  42f27e:	or     edx,esp
  42f280:	cmc    
  42f281:	jne    0x42f220
  42f283:	arpl   WORD PTR [ebp+0x14],sp
  42f286:	popa   
  42f287:	pop    ecx
  42f288:	mov    esi,0xa61500ff
  42f28d:	pop    esi
  42f28e:	jle    0x42f260
  42f290:	pop    edi
  42f291:	gs xchg al,ah
  42f294:	or     ebx,DWORD PTR [ebx+0xc]
  42f297:	scas   al,BYTE PTR es:[edi]
  42f298:	sub    eax,esp
  42f29a:	mov    esi,0x7e5bce16
  42f29f:	sar    BYTE PTR [edi],1
  42f2a1:	gs cs pop ebp
  42f2a4:	inc    ebx
  42f2a5:	mov    ah,0x75
  42f2a7:	popf   
  42f2a8:	imul   eax,DWORD PTR [ebx+eax*1-0x63],0xffffffb1
  42f2ad:	or     ebp,DWORD PTR [eax-0x6b]
  42f2b0:	sti    
  42f2b1:	ret    0x42ff
  42f2b4:	ret    
  42f2b5:	jmp    0x6c2325b9
  42f2ba:	jle    0x42f27c
  42f2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2bd:	inc    BYTE PTR [esi-0x3cfec026]
  42f2c3:	push   ds
  42f2c4:	cmp    DWORD PTR [esi-0x7a],0xffffffcd
  42f2c8:	out    0x70,al
  42f2ca:	jae    0x42f348
  42f2cc:	call   0x55ebf6b7
  42f2d1:	leave  
  42f2d2:	(bad)  
  42f2d3:	repz loope 0x42f2c5
  42f2d6:	xlat   BYTE PTR ds:[ebx]
  42f2d7:	push   ds
  42f2d8:	lods   eax,DWORD PTR ds:[esi]
  42f2d9:	(bad)  
  42f2da:	jae    0x42f328
  42f2dc:	rol    al,1
  42f2de:	or     ebx,DWORD PTR [esi+0x70facf24]
  42f2e4:	arpl   WORD PTR [ebx+0x44],di
  42f2e7:	mov    ebp,0x6d733ee5
  42f2ec:	ror    BYTE PTR [eax],1
  42f2ee:	inc    DWORD PTR [eax]
  42f2f0:	jecxz  0x42f2c1
  42f2f2:	ror    BYTE PTR [edi],0x9e
  42f2f5:	sub    al,0x7c
  42f2f7:	inc    esp
  42f2f8:	mov    ecx,0x16dbc7e1
  42f2fd:	add    ah,dh
  42f2ff:	and    dl,0xd5
  42f302:	shr    esp,0x9f
  42f305:	and    eax,0x5c926a12
  42f30a:	std    
  42f30b:	dec    DWORD PTR [edx-0x7fbc9abb]
  42f311:	int3   
  42f312:	stc    
  42f313:	out    dx,eax
  42f314:	pop    edx
  42f315:	pop    esp
  42f316:	fwait
  42f317:	neg    DWORD PTR [ecx]
  42f319:	inc    ebx
  42f31a:	je     0x42f341
  42f31c:	and    cl,dh
  42f31e:	int3   
  42f31f:	jnp    0x42f2be
  42f321:	jg     0x42f2c8
  42f323:	add    dl,bl
  42f325:	(bad)
  42f328:	cmp    dh,BYTE PTR [ebx]
  42f32a:	gs inc edx
  42f32c:	scas   al,BYTE PTR es:[edi]
  42f32d:	mov    DWORD PTR [di+0x5ed1],eax
  42f332:	mov    ecx,0xe3679db4
  42f337:	xor    al,0x5d
  42f339:	ret    
  42f33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f33b:	jge    0x42f2fe
  42f33d:	push   0x65
  42f33f:	mov    bh,0x26
  42f341:	pop    esp
  42f342:	(bad)  
  42f343:	inc    ebx
  42f344:	add    dh,bh
  42f346:	push   cs
  42f347:	add    al,0x9d
  42f349:	inc    eax
  42f34a:	loopne 0x42f34f
  42f34c:	cmp    edx,0x10
  42f34f:	ins    BYTE PTR es:[edi],dx
  42f350:	push   edi
  42f351:	mov    edi,0xe0005be8
  42f356:	fld1   
  42f358:	add    eax,edx
  42f35a:	aaa    
  42f35b:	pusha  
  42f35c:	(bad)  
  42f35d:	dec    DWORD PTR [ecx-0x3de4983d]
  42f363:	sbb    al,0x7d
  42f365:	or     ebp,DWORD PTR cs:[ecx+0x4]
  42f369:	popf   
  42f36a:	add    cl,BYTE PTR [esi]
  42f36c:	push   ebp
  42f36d:	dec    esp
  42f36e:	mov    dl,0x65
  42f370:	test   al,0x9a
  42f372:	xchg   al,ch
  42f374:	add    ebx,DWORD PTR [ebp-0x2341000a]
  42f37a:	mov    ?,WORD PTR [ebx]
  42f37c:	jecxz  0x42f3a5
  42f37e:	(bad)  
  42f37f:	xlat   BYTE PTR ds:[ebx]
  42f380:	jb     0x42f321
  42f382:	adc    edi,DWORD PTR [edi+0x3b8dc895]
  42f388:	loope  0x42f39b
  42f38a:	ret    0xea0f
  42f38d:	fisttp WORD PTR [edx-0x20f9dabc]
  42f393:	ffreep st(0)
  42f395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f396:	(bad)  
  42f397:	pop    ss
  42f398:	bound  esp,QWORD PTR [edx+0x3]
  42f39b:	aaa    
  42f39c:	fnstcw WORD PTR [ebx+0xa]
  42f39f:	xchg   DWORD PTR [eiz*2+0x1ba70f8a],edi
  42f3a6:	pusha  
  42f3a7:	add    BYTE PTR [edx-0x23],ch
  42f3aa:	(bad)  
  42f3ab:	jle    0x42f356
  42f3ad:	dec    edx
  42f3ae:	fldcw  WORD PTR fs:[edx-0x24]
  42f3b2:	out    dx,eax
  42f3b3:	out    0xb1,al
  42f3b5:	jno    0x42f3f9
  42f3b7:	aas    
  42f3b8:	stos   BYTE PTR es:[edi],al
  42f3b9:	add    BYTE PTR [ecx-0x1458181a],dh
  42f3bf:	pop    edi
  42f3c0:	jmp    FWORD PTR [ecx-0x15]
  42f3c3:	push   esi
  42f3c4:	cli    
  42f3c5:	jae    0x42f422
  42f3c7:	pusha  
  42f3c8:	out    0x7a,eax
  42f3ca:	pop    es
  42f3cb:	pop    ebx
  42f3cc:	cli    
  42f3cd:	stos   DWORD PTR es:[edi],eax
  42f3ce:	push   es
  42f3cf:	pop    ebx
  42f3d0:	push   ebx
  42f3d1:	jb     0x42f43d
  42f3d3:	fsub   st(3),st
  42f3d5:	mov    ecx,0xa8800378
  42f3da:	scas   al,BYTE PTR es:[edi]
  42f3db:	mov    cl,BYTE PTR [ecx+edi*2+0x68]
  42f3df:	ret    
  42f3e0:	std    
  42f3e1:	cmc    
  42f3e2:	sub    eax,0x27b6021b
  42f3e7:	in     eax,0x2
  42f3e9:	popa   
  42f3ea:	or     edx,DWORD PTR [edx+0x58]
  42f3ed:	push   esi
  42f3ee:	aaa    
  42f3ef:	test   eax,ecx
  42f3f1:	add    dh,ch
  42f3f3:	add    DWORD PTR [ebp-0x182e6b83],ecx
  42f3f9:	mov    BYTE PTR [ecx],al
  42f3fb:	aad    0x81
  42f3fd:	inc    ebp
  42f3fe:	mov    esp,0x29f343d7
  42f403:	pushf  
  42f404:	jmp    0xa3ab:0xe2c67750
  42f40b:	loopne 0x42f402
  42f40d:	test   BYTE PTR [edx+ebx*2+0x674e77e],dh
  42f414:	add    BYTE PTR [ebp+0x3249b641],cl
  42f41a:	(bad)  
  42f41b:	fadd   QWORD PTR [ebx-0x8]
  42f41e:	add    bl,al
  42f420:	cwde   
  42f421:	jmp    0x818b:0x67410
  42f428:	out    0x84,al
  42f42a:	add    BYTE PTR [esi+0x40e8bb16],bh
  42f430:	pop    edx
  42f431:	outs   dx,DWORD PTR ds:[esi]
  42f432:	adc    BYTE PTR [ebp+0x52],0x82
  42f436:	inc    ebp
  42f437:	sti    
  42f438:	jle    0x42f3f9
  42f43a:	popa   
  42f43b:	ss (bad) 
  42f43d:	jp     0x42f4bc
  42f43f:	sti    
  42f440:	ins    BYTE PTR es:[edi],dx
  42f441:	jo     0x42f453
  42f443:	mov    ah,0x43
  42f445:	cmc    
  42f446:	mov    dh,0xb
  42f448:	test   al,0xbf
  42f44a:	cdq    
  42f44b:	sahf   
  42f44c:	pop    esp
  42f44d:	push   ebp
  42f44e:	neg    DWORD PTR [ebx]
  42f450:	fdivr  QWORD PTR [eax+esi*1]
  42f453:	or     ebp,DWORD PTR [eax-0x28b80137]
  42f459:	push   es
  42f45a:	xor    bh,BYTE PTR [esi+0x33]
  42f45d:	cmc    
  42f45e:	lss    ebx,FWORD PTR ds:0xf26cc3f9
  42f465:	xor    BYTE PTR [esp+eax*4-0x62f0fdae],al
  42f46c:	jns    0x42f4a4
  42f46e:	xchg   DWORD PTR [ecx-0x3d419e06],esp
  42f474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f475:	data16 cli 
  42f477:	push   0xa2abf11b
  42f47c:	fnstcw WORD PTR [esi]
  42f47e:	shl    DWORD PTR [ecx+0x87145b],0x58
  42f485:	push   ebx
  42f486:	fadd   DWORD PTR [ecx]
  42f488:	into   
  42f489:	sbb    eax,0xf18af2c3
  42f48e:	or     dl,BYTE PTR ds:[ebx+0x24]
  42f492:	dec    ecx
  42f494:	sbb    ch,bh
  42f496:	lock push es
  42f498:	bound  ebp,QWORD PTR [edx-0x10]
  42f49b:	je     0x42f43a
  42f49d:	imul   edi,DWORD PTR [esi-0x42],0xffffff9f
  42f4a1:	add    al,0xce
  42f4a3:	xchg   al,bl
  42f4a5:	push   ebx
  42f4a6:	fadd   DWORD PTR [esi+ecx*4]
  42f4a9:	popf   
  42f4aa:	shl    edx,0x4a
  42f4ad:	out    0x50,al
  42f4af:	je     0x42f446
  42f4b1:	mov    al,ds:0xc5b45e03
  42f4b6:	add    esp,edi
  42f4b8:	je     0x42f48e
  42f4ba:	mov    edi,0xef6c0507
  42f4bf:	push   es
  42f4c0:	bound  ebp,QWORD PTR [edx-0x25]
  42f4c3:	imul   edi,DWORD PTR [ebx-0x5e417c10],0x9e661874
  42f4cd:	cmp    al,0x50
  42f4cf:	pop    edx
  42f4d0:	adc    dh,BYTE PTR [eax+0x7f]
  42f4d3:	int    0x88
  42f4d5:	push   ebx
  42f4d6:	cmp    DWORD PTR [eax],eax
  42f4d8:	mov    bl,BYTE PTR [ebp-0x27]
  42f4db:	inc    DWORD PTR [edi]
  42f4dd:	aaa    
  42f4de:	ins    BYTE PTR es:[edi],dx
  42f4df:	inc    esp
  42f4e0:	xchg   ebp,eax
  42f4e1:	push   0xffffffef
  42f4e3:	pop    es
  42f4e4:	fiadd  DWORD PTR [ecx]
  42f4e6:	call   0xce83f5c0
  42f4eb:	call   0xe784914a
  42f4f0:	loop   0x42f529
  42f4f2:	out    0xe8,eax
  42f4f4:	add    DWORD PTR [ebx],0x5
  42f4f7:	repnz lods eax,DWORD PTR ds:[esi]
  42f4f9:	sti    
  42f4fa:	aas    
  42f4fb:	in     al,0x33
  42f4fd:	popf   
  42f4fe:	mov    WORD PTR ds:0x264b47ca,fs
  42f504:	jmp    DWORD PTR [edx+0x1b576dad]
  42f50a:	addr16 mov eax,0xab85efcd
  42f510:	pop    ebx
  42f511:	fisubr DWORD PTR [edx+0x6c]
  42f514:	inc    BYTE PTR [edx-0x11bc93a8]
  42f51a:	or     eax,DWORD PTR [ecx+0x4a]
  42f51d:	lahf   
  42f51e:	add    ch,cl
  42f520:	frstor [ebp-0x670dff43]
  42f526:	test   DWORD PTR [ebx],ebp
  42f528:	pop    esp
  42f529:	jmp    0xe8c2:0xa07ff357
  42f530:	pop    ebx
  42f531:	or     bl,dl
  42f533:	leave  
  42f534:	gs ret 
  42f536:	ffree  st(0)
  42f538:	add    al,0x24
  42f53a:	mov    esi,0xfe56a5bc
  42f53f:	call   0xe1189f47
  42f544:	add    ecx,esi
  42f546:	int    0xf0
  42f548:	fs mov cl,0x4a
  42f54b:	test   bl,0x0
  42f54e:	adc    ch,BYTE PTR [ebp-0x8]
  42f551:	fs xchg ecx,eax
  42f553:	or     cl,BYTE PTR [edx+0x28f3ad0f]
  42f559:	add    al,0xb8
  42f55b:	add    al,0xe8
  42f55d:	add    ebx,DWORD PTR [ebp+0x65b6ffcd]
  42f563:	mov    esi,0x9a4cbafb
  42f568:	out    0xea,eax
  42f56a:	sahf   
  42f56b:	add    dh,bl
  42f56d:	pop    eax
  42f56e:	dec    edx
  42f56f:	mov    esi,0xa7ba64e7
  42f574:	dec    ebp
  42f575:	inc    ecx
  42f576:	fistp  DWORD PTR [ecx-0x6]
  42f579:	inc    esi
  42f57a:	inc    eax
  42f57b:	mov    esi,0xd35965fb
  42f580:	sbb    ah,BYTE PTR [edx-0x26]
  42f583:	or     eax,DWORD PTR [edi-0x45aebee1]
  42f589:	and    al,0x0
  42f58b:	(bad)  
  42f58d:	jmp    0xa18ae514
  42f592:	jp     0x42f59f
  42f594:	sti    
  42f595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f596:	test   BYTE PTR [edx+0x58d9017c],0xfa
  42f59d:	jmp    0x29706e0e
  42f5a2:	pusha  
  42f5a3:	mov    ecx,0x57612bc8
  42f5a8:	stos   BYTE PTR es:[edi],al
  42f5a9:	call   0x729747a3
  42f5ae:	jmp    0xdf58:0x3f4eb2
  42f5b5:	sub    esp,ebp
  42f5b7:	sahf   
  42f5b8:	add    ah,BYTE PTR [esi-0xf]
  42f5bb:	ror    DWORD PTR [esi],0xe0
  42f5be:	xchg   edx,eax
  42f5bf:	pop    ebp
  42f5c0:	push   edi
  42f5c1:	sub    eax,0xfbb6a792
  42f5c6:	scas   al,BYTE PTR es:[edi]
  42f5c7:	xchg   ebx,eax
  42f5c8:	dec    BYTE PTR [esi]
  42f5ca:	sub    DWORD PTR [ecx-0x721d1081],esp
  42f5d0:	or     al,0x84
  42f5d2:	lods   al,BYTE PTR ds:[esi]
  42f5d3:	sahf   
  42f5d4:	add    al,BYTE PTR [eax]
  42f5d6:	bound  edi,QWORD PTR [ebx-0x3bfff05a]
  42f5dc:	dec    BYTE PTR [edx+0x56]
  42f5df:	xchg   edi,eax
  42f5e0:	cmp    al,0xff
  42f5e2:	push   edx
  42f5e3:	jae    0x42f64d
  42f5e5:	push   ss
  42f5e6:	(bad)  
  42f5e7:	cli    
  42f5e8:	cli    
  42f5e9:	(bad)  
  42f5ea:	inc    esp
  42f5ec:	fnsave [ebx+0x8]
  42f5ef:	jae    0x42f5b7
  42f5f1:	add    eax,0xffffffc3
  42f5f4:	(bad)  
  42f5f5:	fwait
  42f5f6:	add    BYTE PTR [edx+eax*1+0x3917564b],dh
  42f5fd:	call   DWORD PTR [edx+0x73]
  42f600:	push   0x5ae9ff16
  42f605:	cmc    
  42f606:	xlat   BYTE PTR ds:[ebx]
  42f607:	cmp    ebx,eax
  42f609:	add    eax,0x20b84
  42f60e:	add    BYTE PTR [ebx-0x7600e99c],dh
  42f614:	mov    dh,0xa
  42f616:	inc    eax
  42f617:	add    BYTE PTR [edi+ebx*8+0x70],dh
  42f61b:	or     bh,ch
  42f61d:	sbb    al,0x60
  42f61f:	push   ss
  42f620:	inc    esp
  42f621:	add    cl,BYTE PTR [ecx-0x3220afa3]
  42f627:	pop    ecx
  42f628:	call   FWORD PTR [ecx]
  42f62a:	push   es
  42f62b:	mov    bh,0x8a
  42f62d:	lock out dx,al
  42f62f:	(bad)  [edi+eax*4-0xf17f7b8]
  42f636:	jp     0x42f620
  42f638:	aaa    
  42f639:	cs pop es
  42f63b:	or     DWORD PTR [ebx+ebx*2+0x73],0x11
  42f640:	into   
  42f641:	push   ds
  42f642:	jecxz  0x42f64c
  42f644:	mov    ebp,0x3c6a1a40
  42f649:	xchg   DWORD PTR [eax+0x24],ebx
  42f64c:	pop    esp
  42f64d:	push   0xf1024687
  42f652:	scas   al,BYTE PTR es:[edi]
  42f653:	inc    esi
  42f654:	popf   
  42f655:	pop    ebp
  42f656:	or     eax,0xd5f5bab
  42f65b:	stos   DWORD PTR es:[edi],eax
  42f65c:	fsubr  st(2),st
  42f65e:	sbb    ch,0x9a
  42f661:	push   0x68e5c044
  42f666:	scas   al,BYTE PTR es:[edi]
  42f667:	cli    
  42f668:	retf   0xe0e0
  42f66b:	or     esi,DWORD PTR [edx+edx*8-0x3b]
  42f66f:	adc    esp,DWORD PTR [esi+edx*4]
  42f672:	out    dx,al
  42f673:	ss (bad) 
  42f675:	aaa    
  42f676:	add    al,0x89
  42f678:	mov    al,ah
  42f67a:	fcom   DWORD PTR [edi]
  42f67c:	add    BYTE PTR [edx+0x28faf296],bh
  42f682:	cmp    esi,DWORD PTR [ecx+0x696aa51]
  42f688:	sti    
  42f689:	mov    BYTE PTR [edi],al
  42f68b:	hlt    
  42f68c:	aas    
  42f68d:	popf   
  42f68e:	ror    al,cl
  42f690:	sti    
  42f691:	(bad)  
  42f692:	sub    al,bl
  42f694:	add    eax,esi
  42f696:	lock fcom DWORD PTR [ebx]
  42f699:	jmp    0x42f69e
  42f69b:	sar    DWORD PTR gs:[eax-0x4],0x1c
  42f6a0:	pop    ebp
  42f6a1:	xchg   ecx,eax
  42f6a2:	iret   
  42f6a3:	or     edi,ebx
  42f6a5:	lock das 
  42f6a7:	pop    ebp
  42f6a8:	adc    al,0x79
  42f6aa:	cmp    edi,DWORD PTR [esi+0x602627ff]
  42f6b0:	pop    edx
  42f6b1:	repz ror BYTE PTR [ebp+edi*4-0x5b],0x6b
  42f6b7:	mov    bh,0x86
  42f6b9:	xor    edx,ebp
  42f6bb:	push   0xb
  42f6bd:	pushf  
  42f6be:	imul   edi,esi,0x51
  42f6c1:	es fwait
  42f6c3:	or     eax,0x895fe0b3
  42f6c8:	leave  
  42f6c9:	pop    esp
  42f6ca:	dec    edx
  42f6cb:	out    dx,al
  42f6cc:	push   es
  42f6cd:	fadd   QWORD PTR [ecx]
  42f6cf:	outs   dx,BYTE PTR ds:[esi]
  42f6d0:	rcr    BYTE PTR [edx+0x618cef89],1
  42f6d6:	push   es
  42f6d7:	pop    esi
  42f6d8:	int3   
  42f6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6da:	inc    ebx
  42f6db:	xchg   DWORD PTR [ebx],ecx
  42f6dd:	mov    ds:0xc86f43,al
  42f6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6e3:	xchg   DWORD PTR [ebx],esp
  42f6e5:	adc    BYTE PTR [edi+edi*2],dl
  42f6e8:	je     0x42f74b
  42f6ea:	out    0x54,eax
  42f6ec:	pop    ebx
  42f6ed:	mov    dl,dl
  42f6ef:	push   ebx
  42f6f0:	popa   
  42f6f1:	(bad)  
  42f6f2:	fistp  QWORD PTR [esi+0x60]
  42f6f5:	popa   
  42f6f6:	(bad)  
  42f6f7:	push   esp
  42f6f8:	out    0x3,eax
  42f6fa:	popf   
  42f6fb:	add    ah,BYTE PTR [edx]
  42f6fd:	mov    BYTE PTR [edx-0x619dbead],bh
  42f703:	add    ch,cl
  42f705:	add    esi,DWORD PTR [ebp-0x589cfcf0]
  42f70b:	mov    bl,0x1f
  42f70d:	inc    ebp
  42f70e:	mov    ds:0x868ebc02,al
  42f713:	add    BYTE PTR [ebx+ebx*2],0xed
  42f717:	jg     0x42f6ac
  42f719:	setge  BYTE PTR [edi-0x2211454e]
  42f720:	ins    DWORD PTR es:[edi],dx
  42f721:	ror    BYTE PTR [esi+0x6742fd81],0x74
  42f728:	call   0x6bcac007
  42f72d:	or     esp,DWORD PTR [edx]
  42f72f:	cld    
  42f730:	ins    DWORD PTR es:[edi],dx
  42f731:	les    ebp,FWORD PTR [esi-0x6503d37b]
  42f737:	xchg   ecx,ebx
  42f739:	ins    BYTE PTR es:[edi],dx
  42f73a:	sar    BYTE PTR ds:0x431e61cb,0x3c
  42f741:	lds    ebx,FWORD PTR [ebx]
  42f743:	cld    
  42f744:	ins    DWORD PTR es:[edi],dx
  42f745:	aam    0x0
  42f747:	mov    ?,edi
  42f749:	(bad)  
  42f74a:	mov    eax,0x6407ba16
  42f74f:	fmul   st,st(7)
  42f751:	adc    ah,BYTE PTR [esi-0x5578f816]
  42f757:	sbb    BYTE PTR [edi-0x25edc1f1],dh
  42f75d:	jno    0x873d509c
  42f763:	and    BYTE PTR [edi-0x4358ded],dh
  42f769:	xchg   BYTE PTR [ecx*4+0x27e1497b],ch
  42f770:	add    al,bl
  42f772:	scas   eax,DWORD PTR es:[edi]
  42f773:	call   0x5989:0x9eeb0002
  42f77a:	in     eax,0x11
  42f77c:	add    DWORD PTR [edi+0x28],edi
  42f77f:	mov    cl,0x2
  42f781:	dec    eax
  42f782:	fisttp QWORD PTR [esi]
  42f784:	add    esp,edi
  42f786:	jmp    0x42f718
  42f788:	inc    edx
  42f789:	pop    edx
  42f78a:	xchg   edi,eax
  42f78b:	loope  0x42f809
  42f78d:	in     al,0x8c
  42f78f:	loopne 0x42f794
  42f791:	add    BYTE PTR [ecx+eiz*1-0x52f28199],bh
  42f798:	ret    
  42f799:	cli    
  42f79a:	pushf  
  42f79b:	mov    es,WORD PTR [esi+0x2b901544]
  42f7a1:	dec    edi
  42f7a2:	jo     0x42f7d6
  42f7a4:	dec    edi
  42f7a5:	mov    BYTE PTR [edx+ecx*8+0xc8695b],bl
  42f7ac:	std    
  42f7ad:	pop    eax
  42f7ae:	sub    DWORD PTR [ecx],0x72
  42f7b1:	or     bl,bh
  42f7b3:	pop    esp
  42f7b4:	cmc    
  42f7b5:	pop    ebx
  42f7b6:	(bad)  
  42f7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7b8:	jmp    0x42f812
  42f7ba:	test   DWORD PTR [edx-0x2242b5ff],ebp
  42f7c0:	sahf   
  42f7c1:	push   edi
  42f7c2:	je     0x42f7c4
  42f7c4:	pop    eax
  42f7c5:	loop   0x42f83a
  42f7c7:	hlt    
  42f7c8:	jmp    0x42f7f5
  42f7ca:	push   es
  42f7cb:	jmp    DWORD PTR [ecx+0x6]
  42f7ce:	call   0xf6254314
  42f7d3:	mov    bl,ah
  42f7d5:	in     eax,0xd6
  42f7d7:	test   DWORD PTR [esp+ebp*1],esi
  42f7da:	or     ecx,DWORD PTR [ebx+0x14727df5]
  42f7e0:	les    ebp,FWORD PTR [ebx*1-0x1d10bb7d]
  42f7e7:	pop    es
  42f7e8:	outs   dx,DWORD PTR ds:[esi]
  42f7e9:	pop    DWORD PTR [edx]
  42f7eb:	lea    esi,[eax-0xa74f004]
  42f7f1:	test   edx,eax
  42f7f3:	sub    ecx,DWORD PTR [esi+0x37144c86]
  42f7f9:	ror    BYTE PTR [edx],0x3b
  42f7fc:	jle    0x42f838
  42f7fe:	add    DWORD PTR [esi+0x3f],edx
  42f801:	das    
  42f802:	add    al,BYTE PTR [ebx]
  42f804:	jne    0x42f7fc
  42f806:	jmp    0x2b3fea69
  42f80b:	shl    BYTE PTR [edi-0x12],0xbf
  42f80f:	jmp    0x42f811
  42f811:	jae    0x42f892
  42f813:	add    bh,BYTE PTR [ebx]
  42f815:	dec    eax
  42f816:	sub    cl,BYTE PTR [eax]
  42f818:	jne    0x42f895
  42f81a:	jg     0x42f85e
  42f81c:	add    al,0xf5
  42f81e:	in     al,0xfa
  42f820:	inc    DWORD PTR [esi+esi*1+0x2604c37]
  42f827:	je     0x42f836
  42f829:	out    dx,eax
  42f82a:	inc    ecx
  42f82b:	push   ds
  42f82c:	add    al,0x9c
  42f82e:	fwait
  42f82f:	cmc    
  42f830:	dec    DWORD PTR [ebx-0x78]
  42f833:	mov    edx,0x6c55875
  42f838:	add    BYTE PTR [ecx-0x62ae1983],dl
  42f83e:	in     al,0xc1
  42f840:	or     ecx,esi
  42f842:	sbb    BYTE PTR [ecx+0x7eb5a9bf],cl
  42f848:	mov    edi,0x176beb9f
  42f84d:	pop    eax
  42f84e:	xchg   edi,eax
  42f84f:	pop    edx
  42f850:	xchg   BYTE PTR ds:0x18fbe0e3,dl
  42f856:	test   eax,0x2a1357d7
  42f85b:	or     BYTE PTR [ecx],al
  42f85d:	adc    BYTE PTR [edx],bl
  42f85f:	hlt    
  42f860:	jae    0x42f81c
  42f862:	adc    cl,0x7
  42f865:	add    eax,0xeafc478a
  42f86a:	aam    0x5b
  42f86c:	test   dl,ah
  42f86e:	dec    edi
  42f86f:	sbb    edi,ebx
  42f871:	xchg   ebx,eax
  42f872:	in     al,0xc1
  42f874:	pop    es
  42f875:	add    dl,dl
  42f877:	cs push es
  42f879:	call   0xfa9da9dd
  42f87e:	ret    0x5a2e
  42f881:	xchg   BYTE PTR [ebx+0x2f],ah
  42f884:	pop    ecx
  42f885:	jno    0x42f82c
  42f887:	ror    al,cl
  42f889:	pop    es
  42f88a:	push   edx
  42f88b:	fmulp  st(0),st
  42f88d:	pop    es
  42f88e:	mov    ch,0x43
  42f890:	inc    esp
  42f891:	cli    
  42f892:	call   0x47f9:0x85d78578
  42f899:	cld    
  42f89a:	mov    bl,ah
  42f89c:	push   esi
  42f89d:	add    BYTE PTR [eax],cl
  42f89f:	gs sbb ax,0xa926
  42f8a4:	push   es
  42f8a5:	cmp    ebx,ebx
  42f8a7:	push   edi
  42f8a8:	ror    BYTE PTR [edi],cl
  42f8aa:	push   0xffffffd6
  42f8ac:	pop    edx
  42f8ad:	out    0x4a,eax
  42f8af:	pop    ds
  42f8b0:	popa   
  42f8b1:	cli    
  42f8b2:	mov    ds,WORD PTR [ebx]
  42f8b4:	mov    ebx,0xa7026456
  42f8b9:	pop    es
  42f8ba:	popf   
  42f8bb:	push   ecx
  42f8bc:	adc    bl,BYTE PTR [edi-0x37]
  42f8bf:	cli    
  42f8c0:	rcr    BYTE PTR [edi+0x39],0x51
  42f8c4:	leave  
  42f8c5:	mov    ah,ah
  42f8c7:	(bad)  
  42f8c8:	ins    DWORD PTR es:[edi],dx
  42f8c9:	enter  0x4826,0xe4
  42f8cd:	or     ebx,DWORD PTR [ebp-0x20efdd83]
  42f8d3:	(bad)
  42f8d6:	popf   
  42f8d7:	pop    ebp
  42f8d8:	les    esi,FWORD PTR [ebp+0x14516f00]
  42f8de:	sub    BYTE PTR [ecx+0x6e5e9215],ch
  42f8e4:	es cmc 
  42f8e6:	pop    esi
  42f8e7:	outs   dx,BYTE PTR ds:[esi]
  42f8e8:	(bad)  es:[ebx-0x75]
  42f8ec:	push   ecx
  42f8ed:	jns    0x42f94d
  42f8ef:	sbb    edx,DWORD PTR [edx+0x6b]
  42f8f2:	push   ebp
  42f8f3:	dec    esi
  42f8f4:	jmp    0x1e50:0xfe7ed769
  42f8fb:	(bad)  
  42f8fc:	push   eax
  42f8fd:	pop    ecx
  42f8fe:	mov    cl,dl
  42f900:	xchg   BYTE PTR [ecx-0x29],dl
  42f903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f904:	xchg   DWORD PTR ds:0xaa7d99d7,ebp
  42f90a:	unpcklps xmm0,XMMWORD PTR ds:0xb047466e
  42f911:	setge  BYTE PTR es:[ebp+0x5f1d6f5d]
  42f919:	hlt    
  42f91a:	add    al,0x9d
  42f91c:	add    dl,BYTE PTR [ebx]
  42f91e:	enter  0x196,0xb6
  42f922:	mov    ch,0xcf
  42f924:	jnp    0x42f8b1
  42f926:	or     esp,DWORD PTR [esi-0x62fc8c7a]
  42f92c:	add    dh,BYTE PTR [esi-0xbfe4bd]
  42f932:	add    BYTE PTR [eax],al
  42f934:	dec    edx
  42f935:	cli    
  42f936:	out    dx,al
  42f937:	and    al,0x60
  42f939:	test   bh,bl
  42f93b:	gs retf 0xe9b6
  42f93f:	add    BYTE PTR [esi-0x64958ffe],bl
  42f945:	add    dh,BYTE PTR [ebx+ecx*2+0x24]
  42f949:	ret    0x9003
  42f94c:	mov    eax,ds:0x4be90c02
  42f951:	mov    eax,0x5f78b624
  42f956:	cli    
  42f957:	pusha  
  42f958:	fild   DWORD PTR [ebx]
  42f95a:	pop    ds
  42f95b:	stos   BYTE PTR es:[edi],al
  42f95c:	push   ss
  42f95d:	(bad)  
  42f95e:	or     esi,DWORD PTR [edx+0x5b]
  42f961:	push   0x17a9621b
  42f966:	or     dl,BYTE PTR [ebx+ebp*8]
  42f969:	mov    BYTE PTR [edi-0x13],al
  42f96c:	mov    ebp,0x8d2c3647
  42f971:	aad    0xb
  42f973:	jle    0x42f956
  42f975:	add    eax,DWORD PTR [eax]
  42f977:	jmp    0xf9b7fc1c
  42f97c:	sbb    eax,0x5071fff0
  42f981:	addr16 push edi
  42f983:	push   edi
  42f984:	pop    eax
  42f985:	dec    esp
  42f986:	test   BYTE PTR [ecx],ch
  42f988:	retf   0xe62a
  42f98b:	or     BYTE PTR [edx+eiz*1],bl
  42f98e:	add    BYTE PTR [edx-0x2f],dh
  42f991:	add    esi,ebx
  42f993:	sub    BYTE PTR [ecx+0x6ae90802],ah
  42f999:	push   es
  42f99a:	jg     0x42f965
  42f99c:	sahf   
  42f99d:	or     DWORD PTR [bx+si-0x2],ebp
  42f9a1:	dec    esp
  42f9a2:	cli    
  42f9a3:	sbb    DWORD PTR [eax],eax
  42f9a5:	fdivr  DWORD PTR [edx+0x47]
  42f9a8:	in     eax,0x5
  42f9aa:	push   ecx
  42f9ab:	jge    0x42f9ad
  42f9ad:	pop    edx
  42f9ae:	add    eax,DWORD PTR [ebx-0x1d42103a]
  42f9b4:	sub    BYTE PTR [edx-0x52],dl
  42f9b7:	cmc    
  42f9b8:	mov    edx,DWORD PTR [eax+ecx*4-0x10]
  42f9bc:	jne    0x42f979
  42f9be:	pop    ecx
  42f9bf:	cs push 0x4c
  42f9c2:	scas   al,BYTE PTR es:[edi]
  42f9c3:	xor    esp,eax
  42f9c5:	pop    ds
  42f9c6:	inc    edx
  42f9c7:	cli    
  42f9c8:	(bad)  
  42f9c9:	sub    DWORD PTR [edi],eax
  42f9cb:	or     eax,DWORD PTR [eax+0x34]
  42f9ce:	jp     0x42f9a2
  42f9d0:	mov    DWORD PTR [ecx+0x3c084f2],eax
  42f9d6:	xchg   DWORD PTR [eax],edx
  42f9d8:	add    DWORD PTR [ebx+eax*1],eax
  42f9db:	lea    esi,[eax+0x8]
  42f9de:	mov    BYTE PTR [eax],0x30
  42f9e1:	hlt    
  42f9e2:	add    al,BYTE PTR [eax]
  42f9e4:	mov    eax,DWORD PTR [ebx]
  42f9e6:	jp     0x42fa2f
  42f9e8:	sbb    BYTE PTR [ebp+0x3b],bh
  42f9eb:	adc    cl,BYTE PTR [ebx+0x1c4779f3]
  42f9f1:	ins    DWORD PTR es:[edi],dx
  42f9f2:	cmp    edx,DWORD PTR [esi]
  42f9f4:	xor    eax,DWORD PTR [edx+edi*2]
  42f9f7:	(bad)
  42f9fa:	xor    DWORD PTR ds:0x8189e800,0x879cc47
  42fa04:	add    DWORD PTR [ebx+edx*2+0x5100c7f9],0x38
  42fa0c:	push   es
  42fa0d:	mov    ecx,edi
  42fa0f:	scas   al,BYTE PTR es:[edi]
  42fa10:	loop   0x42f9cb
  42fa12:	jbe    0x42f9c4
  42fa14:	cmc    
  42fa15:	mov    esi,DWORD PTR [ecx]
  42fa17:	inc    BYTE PTR [ebx-0x39798c40]
  42fa1d:	add    BYTE PTR [edx+eax*1-0x7d],dh
  42fa21:	psllw  mm6,QWORD PTR [edx]
  42fa24:	push   cs
  42fa25:	mov    ebx,DWORD PTR [ebp+0x24beff5d]
  42fa2b:	xchg   DWORD PTR fs:[edx-0x5f],ecx
  42fa2f:	rol    dh,cl
  42fa31:	add    edx,DWORD PTR [esi]
  42fa33:	popf   
  42fa34:	push   es
  42fa35:	mov    ebp,esp
  42fa37:	arpl   WORD PTR [edi-0x391d5eb6],ax
  42fa3d:	or     edx,DWORD PTR [esi]
  42fa3f:	adc    al,0xc
  42fa41:	test   DWORD PTR [eax+edi*4-0xf],edx
  42fa45:	push   eax
  42fa46:	sub    BYTE PTR ds:0x9c1e50f4,ah
  42fa4c:	repz dec edi
  42fa4e:	sub    ch,BYTE PTR [edi]
  42fa50:	push   cs
  42fa51:	adc    bl,ch
  42fa53:	pop    ebx
  42fa54:	add    ebx,0xfbc0e0a9
  42fa5a:	pushf  
  42fa5b:	mov    DWORD PTR gs:[ebp+edx*4-0x30],ecx
  42fa60:	ds out 0x81,eax
  42fa63:	outs   dx,BYTE PTR ds:[esi]
  42fa64:	push   esi
  42fa65:	cli    
  42fa66:	es je  0x42f9e9
  42fa69:	cli    
  42fa6a:	push   0x3e8acb
  42fa6f:	xchg   ecx,eax
  42fa70:	inc    esi
  42fa71:	(bad)  
  42fa72:	(bad)  
  42fa73:	cmp    eax,0x1e72cd5c
  42fa78:	pushf  
  42fa79:	xor    ecx,DWORD PTR [edi+0x20]
  42fa7c:	sbb    DWORD PTR [eax+edx*2],edx
  42fa7f:	sbb    BYTE PTR [ecx+0x1e],ah
  42fa82:	das    
  42fa83:	fnsave [ebx-0x4b471f38]
  42fa89:	jg     0x42fa4a
  42fa8b:	sub    DWORD PTR [edx],edi
  42fa8d:	in     al,dx
  42fa8e:	push   DWORD PTR [edi+ebp*1]
  42fa91:	mov    cl,0xe7
  42fa93:	mov    ds:0x1efa5530,eax
  42fa98:	xchg   esi,eax
  42fa99:	out    dx,al
  42fa9a:	jmp    DWORD PTR [edi]
  42fa9c:	nop
  42fa9d:	jmp    0x8e81:0x2a02e073
  42faa4:	dec    esp
  42faa5:	sbb    DWORD PTR [ebx-0x62],ebx
  42faa8:	add    ch,cl
  42faaa:	add    ebx,DWORD PTR [eax]
  42faac:	dec    ebp
  42faad:	xchg   esp,eax
  42faae:	or     ah,BYTE PTR [edx]
  42fab0:	xor    eax,0x8711576d
  42fab5:	hlt    
  42fab6:	pop    ecx
  42fab7:	push   edi
  42fab8:	dec    ebp
  42fab9:	add    BYTE PTR [edi+0x5ae94d78],dh
  42fabf:	shl    edx,1
  42fac1:	mov    al,gs:0x5ad94c4e
  42fac7:	cmp    bh,BYTE PTR [esi+0x6b]
  42faca:	dec    edi
  42facb:	xor    al,0x4d
  42facd:	leave  
  42face:	imul   edi,DWORD PTR [edx],0x1b
  42fad1:	ret    0x5a
  42fad4:	sbb    DWORD PTR [ebp+0x34],ecx
  42fad7:	or     esp,DWORD PTR [edx]
  42fad9:	xor    eax,0x8721565d
  42fade:	mov    ah,0x59
  42fae0:	pop    es
  42fae1:	dec    ebp
  42fae2:	nop
  42fae3:	cs mov ebx,0x618e994d
  42fae9:	neg    BYTE PTR [edi-0x5]
  42faec:	sbb    eax,DWORD PTR [ebp+0x7d]
  42faef:	or     ebx,DWORD PTR [edx+0x5a]
  42faf2:	bound  eax,QWORD PTR [ebp-0x1f]
  42faf5:	dec    esp
  42faf6:	mov    ch,0x43
  42faf8:	ja     0x42faa6
  42fafa:	or     eax,0xe8f2104d
  42faff:	mov    cl,0x40
  42fb01:	push   es
  42fb02:	push   ecx
  42fb03:	call   0x809c4a08
  42fb08:	cli    
  42fb09:	aad    0xe9
  42fb0b:	xchg   BYTE PTR [edx-0x3caca1fe],dl
  42fb11:	push   ebp
  42fb13:	push   ecx
  42fb14:	sbb    DWORD PTR [esp+esi*4+0x11],edx
  42fb18:	add    edx,DWORD PTR [edi]
  42fb1a:	add    bl,al
  42fb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb1d:	inc    edi
  42fb1e:	xor    al,0x49
  42fb20:	cmp    ecx,DWORD PTR ds:0x8d2600
  42fb26:	pop    gs
  42fb28:	sahf   
  42fb29:	jns    0x42fb2c
  42fb2b:	ins    BYTE PTR es:[edi],dx
  42fb2c:	fmulp  st(7),st
  42fb2e:	adc    esp,DWORD PTR [edx+0x62]
  42fb31:	and    BYTE PTR [eax],cl
  42fb33:	cs pop esi
  42fb35:	lock das 
  42fb37:	jmp    0x8745993c
  42fb3c:	out    dx,eax
  42fb3d:	and    esp,eax
  42fb3f:	sbb    esp,DWORD PTR [edx-0x24]
  42fb42:	or     DWORD PTR fs:[ecx],edi
  42fb45:	mov    cl,0xb7
  42fb47:	mov    ebp,0xe7b1d4dc
  42fb4c:	das    
  42fb4d:	fisttp DWORD PTR [esi-0x6]
  42fb50:	sbb    ah,cl
  42fb52:	test   eax,0xb59eedbd
  42fb57:	xchg   ch,cl
  42fb59:	push   ds
  42fb5a:	pop    eax
  42fb5b:	pop    ss
  42fb5c:	call   0x6294fdff
  42fb61:	outs   dx,BYTE PTR ds:[esi]
  42fb62:	mov    al,0x86
  42fb64:	mov    eax,ds:0x650a5182
  42fb69:	addr16 dec ebx
  42fb6b:	cli    
  42fb6c:	jmp    0xcd12bc8c
  42fb71:	scas   al,BYTE PTR es:[edi]
  42fb72:	dec    eax
  42fb73:	call   0x9ee9:0xbf7f95e9
  42fb7a:	add    al,BYTE PTR [edi-0x20345ad4]
  42fb80:	call   0xdc4ec29c
  42fb85:	iret   
  42fb86:	mov    al,0x51
  42fb88:	push   ecx
  42fb89:	int3   
  42fb8a:	(bad)  
  42fb8b:	cld    
  42fb8c:	push   esi
  42fb8d:	and    BYTE PTR [esp+eax*4+0x57],bl
  42fb91:	xchg   esp,eax
  42fb92:	xchg   BYTE PTR [ebx-0x4c00],ah
  42fb98:	sbb    BYTE PTR [ecx-0x9],0xff
  42fb9c:	jae    0x42fb9e
  42fb9e:	inc    ecx
  42fb9f:	stos   BYTE PTR es:[edi],al
  42fba0:	jae    0x42fbaa
  42fba2:	imul   DWORD PTR [ebx-0x1e]
  42fba5:	(bad)  
  42fba6:	mov    ebx,0x18cfaa9
  42fbab:	(bad)  
  42fbad:	dec    DWORD PTR [ebx-0x64d6f122]
  42fbb3:	test   eax,0xfae0ff83
  42fbb8:	adc    bh,0xcf
  42fbbb:	mov    eax,0xa89c858b
  42fbc0:	cmc    
  42fbc1:	call   FWORD PTR [esi+edi*1-0x3dc400dc]
  42fbc8:	sub    eax,0x5a
  42fbcb:	stos   BYTE PTR es:[edi],al
  42fbcc:	cmc    
  42fbcd:	add    al,0x44
  42fbcf:	(bad)  
  42fbd0:	inc    DWORD PTR [ebx+ebx*2+0x38b053b]
  42fbd7:	jle    0x42fba1
  42fbd9:	lea    eax,[ecx+0x4bfff8d7]
  42fbdf:	xlat   BYTE PTR ds:[ebx]
  42fbe0:	and    DWORD PTR [edx],ebp
  42fbe2:	cmp    ebp,DWORD PTR [edx-0x11ffb97f]
  42fbe8:	mov    esi,0xba85c275
  42fbed:	shl    BYTE PTR [ebx+eax*4-0x7c5bcfc0],1
  42fbf4:	jnp    0x42fbe6
  42fbf6:	daa    
  42fbf7:	mov    edi,0xb43bdfe2
  42fbfc:	cmc    
  42fbfd:	test   BYTE PTR [ebx+edi*1],al
  42fc00:	sub    ch,BYTE PTR [edx+0x0]
  42fc03:	in     al,0x83
  42fc05:	inc    eax
  42fc06:	and    BYTE PTR [esi+edi*2],al
  42fc09:	mov    ebp,0x365c5b50
  42fc0e:	push   ss
  42fc0f:	popf   
  42fc10:	cdq    
  42fc11:	(bad)  
  42fc12:	jle    0x42fbf5
  42fc14:	sub    al,0x79
  42fc16:	mov    edi,0x3ec5f28
  42fc1b:	test   DWORD PTR [esi-0x286d03c3],esp
  42fc21:	ds jae 0x42fbc4
  42fc24:	fcomp  QWORD PTR [esi]
  42fc26:	add    BYTE PTR [esi+0x5e],dh
  42fc29:	adc    eax,eax
  42fc2b:	and    BYTE PTR [ebx+ecx*8],bl
  42fc2e:	add    esp,DWORD PTR [esp+ebp*1]
  42fc31:	imul   ecx,DWORD PTR [ecx],0x1e
  42fc34:	ja     0x42fc38
  42fc36:	add    al,ch
  42fc38:	pop    ecx
  42fc39:	mov    al,0xe7
  42fc3b:	neg    BYTE PTR [edx]
  42fc3d:	push   edx
  42fc3e:	cli    
  42fc3f:	mov    ds,WORD PTR [ebx]
  42fc41:	mov    eax,0x71e5459
  42fc46:	add    al,ch
  42fc48:	aam    0x67
  42fc4a:	jle    0x42fc95
  42fc4c:	dec    esp
  42fc4d:	lods   eax,DWORD PTR ds:[esi]
  42fc4e:	cs push esi
  42fc50:	or     bl,BYTE PTR [ebx*1-0x416113]
  42fc57:	test   eax,0xe0d79202
  42fc5c:	sbb    al,0x4
  42fc5e:	push   edx
  42fc5f:	adc    ah,BYTE PTR [edi]
  42fc61:	bound  ecx,QWORD PTR ds:0x1d165b5d
  42fc67:	add    BYTE PTR [ebp-0x69],cl
  42fc6a:	mov    esi,0x3c4971ff
  42fc6f:	add    al,0xfb
  42fc71:	les    edi,FWORD PTR [esi+0xa0ebff]
  42fc77:	jl     0x42fc51
  42fc79:	sbb    al,0x4
  42fc7b:	in     al,0x31
  42fc7d:	sbb    al,0x4
  42fc7f:	mov    DWORD PTR [eax-0x62c1bef9],esi
  42fc85:	mov    eax,ds:0x2d8b000
  42fc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc8b:	add    ebx,DWORD PTR [eax+esi*4-0xb3d0ea7]
  42fc92:	test   al,0x3
  42fc94:	adc    al,0xa8
  42fc96:	pop    eax
  42fc97:	lea    eax,[ecx+0x4e]
  42fc9a:	outs   dx,DWORD PTR ds:[esi]
  42fc9b:	mov    ecx,0x569b7a92
  42fca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fca1:	nop
  42fca2:	stos   DWORD PTR es:[edi],eax
  42fca3:	push   esi
  42fca4:	and    esi,edi
  42fca6:	lods   al,BYTE PTR ds:[esi]
  42fca7:	inc    eax
  42fca8:	ret    
  42fca9:	add    dh,BYTE PTR [esi+0x6b83ae56]
  42fcaf:	rol    DWORD PTR [edx-0x1324ff4e],0x48
  42fcb6:	or     DWORD PTR [eax+0x55edcf22],eax
  42fcbc:	loope  0x42fd07
  42fcbe:	push   0x770457d9
  42fcc3:	aaa    
  42fcc4:	inc    ebx
  42fcc5:	add    al,0x36
  42fcc7:	add    eax,0x6bd8bf10
  42fccc:	add    BYTE PTR [ebx-0x2ba9252b],bl
  42fcd2:	jl     0x42fc79
  42fcd4:	mov    edx,0x8b334555
  42fcd9:	ss test esp,edx
  42fcdc:	out    dx,eax
  42fcdd:	imul   edx,DWORD PTR ds:0xe7caad9e,0x78
  42fce4:	inc    eax
  42fce5:	retf   
  42fce6:	add    dh,BYTE PTR [ebx*1-0x3d54d5b9]
  42fced:	cli    
  42fcee:	scas   al,BYTE PTR es:[edi]
  42fcef:	cdq    
  42fcf0:	lock push es
  42fcf2:	hlt    
  42fcf3:	sub    BYTE PTR [eiz*4-0x5cbfa719],al
  42fcfa:	add    bh,ah
  42fcfc:	cmc    
  42fcfd:	fdiv   st(6),st
  42fcff:	sub    BYTE PTR [edx+0x76000293],0x8b
  42fd06:	(bad)  
  42fd07:	jnp    0x42fcad
  42fd09:	fisttp WORD PTR [eax-0x22]
  42fd0c:	jge    0x42fcec
  42fd0e:	dec    eax
  42fd0f:	xchg   esp,edi
  42fd11:	and    bh,BYTE PTR [esi]
  42fd13:	ds jmp 0x24f2fb81
  42fd19:	fisttp WORD PTR [eax-0x1]
  42fd1c:	sahf   
  42fd1d:	repz out dx,al
  42fd1f:	out    dx,eax
  42fd20:	fistp  DWORD PTR [esi+0x48]
  42fd23:	push   0xeba719d9
  42fd28:	pusha  
  42fd29:	inc    ebp
  42fd2a:	pop    eax
  42fd2b:	mov    ah,al
  42fd2d:	jmp    0xfd28:0x1e5c7f
  42fd34:	mov    cl,0xac
  42fd36:	rol    DWORD PTR [eax+0x8dd8d0c],cl
  42fd3c:	add    BYTE PTR [edx+0x6c8113f3],bl
  42fd42:	pop    ebp
  42fd43:	pop    esp
  42fd44:	dec    edi
  42fd45:	add    DWORD PTR [edi-0x3c110632],esi
  42fd4b:	xchg   DWORD PTR [ebx+0x7],esi
  42fd4e:	in     al,dx
  42fd4f:	jbe    0x42fd95
  42fd51:	loope  0x42fd3c
  42fd53:	dec    esp
  42fd54:	je     0x42fd37
  42fd56:	pop    ss
  42fd57:	iret   
  42fd58:	test   DWORD PTR [ecx-0x6a],0x70290002
  42fd5f:	into   
  42fd60:	repz mov esi,0x2914a402
  42fd66:	mov    eax,ds:0xd2e8f7c7
  42fd6b:	jmp    0x9e7c:0xc7502cf9
  42fd72:	lahf   
  42fd73:	fdivr  DWORD PTR [ecx+0x744d2c3f]
  42fd79:	loope  0x42fdc4
  42fd7b:	out    dx,al
  42fd7c:	xor    eax,DWORD PTR [eax]
  42fd7e:	cli    
  42fd7f:	inc    ebx
  42fd80:	cli    
  42fd81:	cmp    al,0xfa
  42fd84:	loop   0x42fd88
  42fd86:	xchg   DWORD PTR [ebx],eax
  42fd88:	lea    eax,[ebp+0x40]
  42fd8b:	(bad)  
  42fd8c:	pop    ebp
  42fd8d:	jb     0x42fdd1
  42fd8f:	lods   eax,DWORD PTR ds:[esi]
  42fd90:	pop    eax
  42fd91:	mov    al,BYTE PTR [edi+0xc2c789]
  42fd97:	mov    eax,0x608b5503
  42fd9c:	and    esi,0x8
  42fd9f:	xchg   BYTE PTR [ebx],al
  42fda1:	add    BYTE PTR [ebp-0x45907],cl
  42fda7:	ror    DWORD PTR [esi+0x3748062],cl
  42fdad:	add    al,0x6a
  42fdaf:	test   BYTE PTR [esi+0x470e0873],ch
  42fdb5:	loop   0x42fd7e
  42fdb7:	push   ss
  42fdb8:	scas   al,BYTE PTR es:[edi]
  42fdb9:	cmc    
  42fdba:	test   DWORD PTR [edx+esi*1-0x7fbb95f7],esi
  42fdc1:	cmp    eax,0x51
  42fdc4:	scas   al,BYTE PTR es:[edi]
  42fdc5:	cmc    
  42fdc6:	push   eax
  42fdc7:	push   ebx
  42fdc8:	pop    eax
  42fdc9:	(bad)  
  42fdca:	adc    esp,esi
  42fdcc:	add    al,BYTE PTR [ebp+0x2a02d9c0]
  42fdd2:	ror    BYTE PTR [edi+0x23],0xf7
  42fdd6:	jne    0x42fe18
  42fdd8:	add    BYTE PTR [ebx-0xa51ae08],0x68
  42fddf:	test   BYTE PTR [ebx],al
  42fde1:	add    BYTE PTR [eax],al
  42fde3:	ins    BYTE PTR es:[edi],dx
  42fde4:	cli    
  42fde5:	xchg   esp,eax
  42fde6:	inc    eax
  42fde7:	hlt    
  42fde8:	xchg   edx,eax
  42fde9:	fs add ah,bl
  42fdec:	rcr    DWORD PTR [edi+edi*8+0x43],cl
  42fdf0:	enter  0xfba,0x69
  42fdf4:	ret    
  42fdf5:	mov    edx,0x54fe619d
  42fdfb:	add    BYTE PTR [esi],dl
  42fdfd:	lds    eax,FWORD PTR [ecx+0x54e9a944]
  42fe03:	je     0x42fda6
  42fe05:	enter  0x7a9,0x20
  42fe09:	cdq    
  42fe0a:	retf   0x6a5b
  42fe0d:	fmul   st,st(1)
  42fe0f:	or     eax,ebp
  42fe11:	popf   
  42fe12:	dec    esi
  42fe13:	stc    
  42fe14:	mov    dl,0xd3
  42fe16:	push   esi
  42fe17:	test   BYTE PTR [edx+0x28fabf24],ch
  42fe1d:	dec    ecx
  42fe1e:	push   ebx
  42fe1f:	xor    bl,BYTE PTR [edx-0x22f02dd9]
  42fe25:	pop    ebx
  42fe26:	jns    0x42fde7
  42fe28:	adc    esi,edi
  42fe2a:	test   eax,0x873008fa
  42fe2f:	je     0x42fdda
  42fe31:	into   
  42fe32:	mov    ecx,0xcbb40507
  42fe37:	aas    
  42fe38:	popf   
  42fe39:	mov    esp,DWORD PTR [esi-0x39]
  42fe3c:	sahf   
  42fe3d:	cmc    
  42fe3e:	push   ebx
  42fe3f:	jle    0x42fea2
  42fe41:	push   eax
  42fe42:	jns    0x42fe03
  42fe44:	shr    DWORD PTR [edx],cl
  42fe46:	push   ebx
  42fe47:	je     0x42fdde
  42fe49:	gs out 0x5d,ax
  42fe4d:	push   esi
  42fe4e:	dec    esi
  42fe4f:	cli    
  42fe50:	mov    al,0x53
  42fe52:	push   esi
  42fe53:	dec    ebx
  42fe54:	repnz es dec esi
  42fe57:	pop    ecx
  42fe58:	rol    BYTE PTR [ebx-0x38],cl
  42fe5b:	mov    edx,0x744e3520
  42fe60:	add    BYTE PTR [ecx-0x506007c4],ch
  42fe66:	sbb    eax,DWORD PTR [ebx+ebx*2]
  42fe69:	push   0x69fff399
  42fe6e:	loopne 0x42fecf
  42fe70:	jle    0x42fe7b
  42fe72:	add    edx,DWORD PTR ds:0x74d021ba
  42fe78:	mov    WORD PTR ds:0xf503e903,fs
  42fe7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe7f:	repnz push edx
  42fe81:	xlat   BYTE PTR ds:[ebx]
  42fe82:	jns    0x42fe2e
  42fe84:	mov    ah,0xd7
  42fe86:	out    dx,eax
  42fe87:	and    dh,dh
  42fe89:	mov    al,BYTE PTR [edx]
  42fe8b:	pusha  
  42fe8c:	leave  
  42fe8d:	(bad)  
  42fe8e:	jg     0x42fe38
  42fe90:	add    esp,DWORD PTR [ecx]
  42fe92:	sub    ch,al
  42fe94:	add    ebx,DWORD PTR [ebp+0x2980b1b1]
  42fe9a:	xchg   edx,eax
  42fe9b:	nop
  42fe9c:	mov    fs,WORD PTR [edx-0x61a417bb]
  42fea2:	in     al,dx
  42fea3:	inc    ecx
  42fea4:	push   ebx
  42fea5:	sbb    ecx,DWORD PTR [edi]
  42fea7:	jge    0x42fe9f
  42fea9:	retf   0x5e02
  42feac:	dec    ebx
  42fead:	rol    BYTE PTR [ebp-0x4d],cl
  42feb0:	dec    edi
  42feb1:	ja     0x42fedf
  42feb3:	ins    DWORD PTR es:[edi],dx
  42feb4:	sub    al,0x21
  42feb6:	(bad)  
  42feb7:	cmp    al,0x8c
  42feb9:	xor    eax,DWORD PTR [edx]
  42febb:	jmp    0xf3a073c3
  42fec0:	push   edx
  42fec1:	push   edi
  42fec2:	jns    0x42feed
  42fec4:	mov    ah,0x0
  42fec6:	push   edi
  42fec7:	iret   
  42fec8:	cld    
  42fec9:	push   edx
  42feca:	ins    BYTE PTR es:[edi],dx
  42fecb:	jnp    0x42fe78
  42fecd:	push   ebx
  42fece:	adc    edi,eax
  42fed0:	and    BYTE PTR [esi+esi*8+0x4503e901],cl
  42fed7:	xor    eax,0x792752f3
  42fedc:	test   eax,0xcccf27b3
  42fee1:	push   edx
  42fee2:	in     al,dx
  42fee3:	adc    BYTE PTR [ebx-0x64f6f582],bh
  42fee9:	xlat   BYTE PTR ds:[ebx]
  42feea:	xchg   BYTE PTR [ebx],cl
  42feec:	add    BYTE PTR [ecx+ebp*2],bh
  42feef:	shl    DWORD PTR [edx-0xe],1
  42fef2:	dec    esp
  42fef3:	shr    DWORD PTR [esi+0x11],1
  42fef6:	jge    0x42ff69
  42fef8:	aas    
  42fef9:	jmp    0x97ff2844
  42fefe:	dec    edi
  42feff:	dec    eax
  42ff00:	adc    al,0x91
  42ff02:	rol    DWORD PTR [eax+eax*1],1
  42ff05:	jo     0x42feec
  42ff07:	pop    eax
  42ff08:	jle    0x42fe8b
  42ff0a:	outs   dx,DWORD PTR ds:[esi]
  42ff0b:	ror    DWORD PTR [esi+esi*2],1
  42ff0e:	in     eax,0xf8
  42ff10:	cli    
  42ff11:	hlt    
  42ff12:	mov    dh,0xb4
  42ff14:	push   edx
  42ff15:	push   ecx
  42ff16:	inc    ebp
  42ff17:	dec    ebx
  42ff18:	cli    
  42ff19:	pop    esi
  42ff1a:	sbb    eax,0x1db9f7be
  42ff1f:	mov    esi,0x378b9f3
  42ff24:	push   edx
  42ff25:	lahf   
  42ff26:	out    dx,eax
  42ff27:	xor    al,0x84
  42ff29:	sub    DWORD PTR [eax],eax
  42ff2b:	jb     0x42ff35
  42ff2d:	das    
  42ff2e:	adc    dl,BYTE PTR [ecx-0x40480833]
  42ff34:	jnp    0x42ff7a
  42ff36:	sbb    eax,0x7201f81d
  42ff3b:	popa   
  42ff3c:	cld    
  42ff3d:	test   BYTE PTR [ecx],ch
  42ff3f:	dec    edx
  42ff40:	(bad)  
  42ff41:	jle    0x42ff54
  42ff43:	mov    ds:0x997213cd,al
  42ff48:	or     eax,DWORD PTR [ebp+0xd]
  42ff4b:	jb     0x42ff44
  42ff4d:	cli    
  42ff4e:	jl     0x42ff92
  42ff50:	dec    ecx
  42ff51:	je     0x42ff34
  42ff53:	out    dx,al
  42ff54:	mov    al,0xe7
  42ff56:	(bad)  
  42ff57:	iret   
  42ff58:	dec    eax
  42ff59:	cli    
  42ff5a:	sub    ah,BYTE PTR [eax]
  42ff5c:	inc    edx
  42ff5d:	or     edx,DWORD PTR [edx]
  42ff5f:	repnz dec ebx
  42ff61:	ins    DWORD PTR es:[edi],dx
  42ff62:	mov    eax,0xf3ce6c
  42ff67:	fisttp DWORD PTR [ebx-0x4d2e0016]
  42ff6d:	cmc    
  42ff6e:	adc    eax,0x3a4ca8
  42ff73:	stos   DWORD PTR es:[edi],eax
  42ff74:	xchg   ebp,eax
  42ff75:	pop    eax
  42ff76:	leave  
  42ff77:	inc    esi
  42ff78:	inc    edi
  42ff79:	cli    
  42ff7a:	outs   dx,DWORD PTR ds:[esi]
  42ff7b:	cmp    DWORD PTR [ebx+ebx*2],eax
  42ff7e:	ror    DWORD PTR [edx-0x62],0x5
  42ff82:	jno    0x42ff0a
  42ff84:	pop    ds
  42ff85:	(bad)  [esi-0xc]
  42ff88:	sub    DWORD PTR [eax+0x79],ebp
  42ff8b:	xchg   esi,eax
  42ff8c:	out    dx,eax
  42ff8d:	popa   
  42ff8e:	imul   eax,DWORD PTR [eax],0xa02f796
  42ff94:	sbb    eax,0x42a11711
  42ff99:	mov    ebx,esi
  42ff9b:	pop    ss
  42ff9c:	inc    edx
  42ff9d:	push   es
  42ff9e:	out    0x24,eax
  42ffa0:	repnz and BYTE PTR [esi+0x51],ah
  42ffa4:	pushaw 
  42ffa6:	push   ecx
  42ffa7:	xchg   edx,eax
  42ffa8:	inc    edx
  42ffa9:	and    bl,bl
  42ffab:	jecxz  0x430023
  42ffad:	cld    
  42ffae:	jmp    0x42ffd5
  42ffb0:	sbb    al,BYTE PTR [eax]
  42ffb2:	out    dx,al
  42ffb3:	(bad)  
  42ffb5:	mov    ds:0x1d9a015d,al
  42ffba:	(bad)  ds:0x8959d572
  42ffc0:	jno    0x42ffe2
  42ffc2:	mov    al,0xcd
  42ffc4:	enter  0x1712,0xda
  42ffc8:	xchg   bh,bl
  42ffca:	out    0xa1,al
  42ffcc:	mov    edi,0x7f25db1f
  42ffd1:	pop    ebx
  42ffd2:	mov    ebp,0x23655209
  42ffd7:	jne    0x42ffe3
  42ffd9:	push   esi
  42ffda:	push   es
  42ffdb:	(bad)  
  42ffdd:	fwait
  42ffde:	sbb    DWORD PTR [edx],ebp
  42ffe0:	popf   
  42ffe1:	xchg   edi,eax
  42ffe2:	push   ebp
  42ffe3:	faddp  st(0),st
  42ffe5:	sbb    esp,DWORD PTR [edx+0x1f1f9c82]
  42ffeb:	rol    BYTE PTR [eax],1
  42ffed:	nop
  42ffee:	test   eax,0x7c2698c2
  42fff3:	sbb    eax,DWORD PTR [eax]
  42fff5:	lods   eax,DWORD PTR ds:[esi]
  42fff6:	fwait
  42fff7:	adc    ebx,DWORD PTR [edi-0x3d4e1d48]
  42fffd:	mov    al,0x90
  42ffff:	imul   esp,DWORD PTR [edx-0x20e0ea9a],0x8b012705
  430009:	add    DWORD PTR [edi],edi
  43000b:	add    edi,esi
  43000d:	fcomp  DWORD PTR [ebx+0x3ae71c24]
  430013:	popf   
  430014:	fiadd  WORD PTR [eax-0x635d5fe5]
  43001a:	xor    ecx,ebp
  43001c:	mov    bl,0xfb
  43001e:	mov    al,ds:0x727e9135
  430023:	xor    BYTE PTR [ecx-0x4],ch
  430026:	dec    ebp
  430027:	stc    
  430028:	scas   al,BYTE PTR es:[edi]
  430029:	inc    ebx
  43002a:	lods   al,BYTE PTR ds:[esi]
  43002b:	xor    eax,0x3082bfd5
  430030:	addr16 jle 0x430095
  430033:	xor    eax,0x30b2a033
  430038:	addr16 jle 0x43007d
  43003b:	xor    eax,0x30a2bef0
  430040:	mov    BYTE PTR [eax-0x2b3d5e1c],bh
  430046:	addr16 sbb eax,0x67f6c8df
  43004c:	scas   al,BYTE PTR es:[edi]
  43004d:	pop    eax
  43004e:	push   ecx
  43004f:	test   al,0x1b
  430051:	addr16 xor al,0x3a
  430054:	fld    QWORD PTR [eax+0x1ea169]
  43005a:	int3   
  43005b:	add    dh,dl
  43005d:	lahf   
  43005e:	inc    DWORD PTR [ebx]
  430060:	inc    edi
  430061:	aad    0xf2
  430063:	dec    edi
  430064:	inc    edi
  430065:	std    
  430066:	mov    ecx,0x2f65a65c
  43006b:	in     eax,dx
  43006c:	lods   eax,DWORD PTR ds:[esi]
  43006d:	jmp    0x2e160451
  430072:	das    
  430073:	add    al,0x13
  430075:	shl    BYTE PTR [ebx-0x69d1fb58],cl
  43007b:	mov    ch,0xad
  43007d:	jmp    0xbd35cc61
  430082:	pop    ebx
  430083:	xchg   edi,eax
  430084:	jmp    0x4300aa
  430086:	mov    ecx,0x321712f2
  43008b:	call   0x6afa6a3b
  430090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430091:	or     DWORD PTR [edx],ecx
  430093:	jmp    0x8b6:0x5d0a252a
  43009a:	mov    dh,0x5c
  43009c:	mov    ch,0x1c
  43009e:	mov    ebx,0xff66a2a7
  4300a3:	add    esp,DWORD PTR [eax-0x395bf8dd]
  4300a9:	mov    esp,0xe4aae7b9
  4300ae:	cmp    edx,edx
  4300b0:	jns    0x43004d
  4300b2:	aas    
  4300b3:	add    esp,DWORD PTR [eax+0x1bc039cd]
  4300b9:	dec    eax
  4300ba:	xor    al,0x45
  4300bc:	mov    ebx,0x8376007a
  4300c1:	or     al,0x28
  4300c3:	cdq    
  4300c4:	add    ch,cl
  4300c6:	mov    ch,0xef
  4300c8:	cmp    edx,0x9a029d04
  4300ce:	dec    esi
  4300cf:	ror    DWORD PTR [edx],1
  4300d1:	xchg   ecx,eax
  4300d2:	fwait
  4300d3:	repnz (bad) 
  4300d5:	(bad)  
  4300d6:	call   0xd77317c6
  4300db:	pop    esi
  4300dc:	inc    ecx
  4300dd:	jge    0x43008c
  4300df:	sub    cl,BYTE PTR [esi+0x3ccdc5b4]
  4300e5:	cli    
  4300e6:	rcr    DWORD PTR [ebx-0xb3106c1],0x10
  4300ed:	lea    ebp,[edx+eax*1+0x3b]
  4300f1:	cli    
  4300f2:	mov    esi,0x2aaf9911
  4300f7:	mov    eax,ds:0x4d6c772a
  4300fc:	cmp    al,0x84
  4300fe:	test   eax,0xa7870dd2
  430103:	pop    eax
  430104:	inc    ecx
  430105:	cli    
  430106:	sub    DWORD PTR [edx],ebx
  430108:	mov    dh,0xf8
  43010a:	fistp  DWORD PTR [esi+0x28]
  43010d:	push   0x13
  43010f:	lds    ecx,FWORD PTR [ebp+0x3c53f784]
  430115:	cli    
  430116:	sbb    edi,edx
  430118:	inc    eax
  430119:	mov    esi,esp
  43011b:	push   0xffffffc0
  43011d:	(bad)  
  43011e:	inc    si
  430120:	push   eax
  430121:	icebp  
  430122:	pop    esp
  430123:	add    BYTE PTR [ebx-0x7a],dl
  430126:	mov    edi,0xc1898dd7
  43012b:	mov    ecx,0xaaabc076
  430130:	sahf   
  430131:	lea    eax,[ebp+ebx*1-0x6605c329]
  430138:	(bad)  
  430139:	and    DWORD PTR [ebx-0x40791cd2],esi
  43013f:	mul    ch
  430141:	jg     0x4300c6
  430143:	sub    DWORD PTR [ebp+0xb],eax
  430146:	das    
  430147:	sub    DWORD PTR [eax-0x75],eax
  43014a:	test   BYTE PTR ds:0xfa3ce7,ch
  430150:	mov    ds:0xf7ac7c1a,eax
  430155:	add    ecx,DWORD PTR [ebp-0xa336f7b]
  43015b:	call   DWORD PTR [ecx+edx*8]
  43015e:	adc    esi,DWORD PTR [eax-0x7b05bbda]
  430164:	hlt    
  430165:	mov    edi,0xcdf1e483
  43016a:	cmc    
  43016b:	je     0x43016a
  43016d:	(bad)  
  430170:	mov    ah,0x7d
  430172:	jae    0x43016d
  430174:	out    dx,eax
  430175:	mov    eax,0x440400c0
  43017a:	inc    ebp
  43017b:	jne    0x4301aa
  43017d:	xchg   edi,eax
  43017e:	call   FWORD PTR [esi+0x62]
  430181:	sti    
  430182:	mov    esp,0x8178f404
  430187:	in     al,dx
  430188:	add    BYTE PTR [ebp-0x5e],al
  43018b:	outs   dx,BYTE PTR ds:[esi]
  43018c:	push   es
  43018d:	les    eax,FWORD PTR [ebx]
  43018f:	dec    ebx
  430190:	push   esi
  430191:	pop    es
  430192:	jmp    0x4301e1
  430194:	(bad)  
  430195:	leave  
  430196:	push   DWORD PTR [edx+0x3c4bd]
  43019c:	mov    BYTE PTR [ecx-0x58b61d33],ah
  4301a2:	into   
  4301a3:	cmc    
  4301a4:	mov    edi,DWORD PTR [edx+0x76]
  4301a7:	cmc    
  4301a8:	adc    eax,0x3a314c
  4301ad:	std    
  4301ae:	inc    edi
  4301af:	out    dx,al
  4301b0:	cmp    esi,DWORD PTR [edi+0x74a27e3d]
  4301b6:	add    eax,DWORD PTR [eax]
  4301b8:	lea    esi,[ecx]
  4301ba:	lahf   
  4301bb:	mov    dl,0xbe
  4301bd:	test   BYTE PTR [ebx],al
  4301bf:	add    al,ch
  4301c1:	xchg   BYTE PTR [esi*8+0x4ac5efff],dh
  4301c8:	call   FWORD PTR [ebp-0x5705ad62]
  4301ce:	int    0xed
  4301d0:	aas    
  4301d1:	popf   
  4301d2:	inc    esp
  4301d3:	aas    
  4301d4:	jae    0x4301a0
  4301d6:	scas   al,BYTE PTR es:[edi]
  4301d7:	mov    edx,0x7aa6ccf7
  4301dc:	lahf   
  4301dd:	xor    BYTE PTR [eax],dh
  4301df:	dec    ebx
  4301e0:	push   eax
  4301e1:	(bad)  
  4301e2:	out    dx,al
  4301e3:	dec    ebx
  4301e4:	add    ebx,DWORD PTR [ecx+ebp*1-0x54120502]
  4301eb:	inc    esi
  4301ec:	add    BYTE PTR [eax],al
  4301ee:	mov    bh,ch
  4301f0:	jp     0x430176
  4301f2:	and    eax,0x6dfa4b44
  4301f7:	sar    esi,cl
  4301f9:	gs cli 
  4301fb:	ret    0x4f04
  4301fe:	repnz push ebp
  430200:	scas   al,BYTE PTR es:[edi]
  430201:	push   cs
  430202:	pop    ebp
  430203:	sub    DWORD PTR [ecx+0x7ae768bf],eax
  430209:	test   ch,bh
  43020b:	xchg   ebp,eax
  43020c:	dec    ebx
  43020d:	cli    
  43020e:	ins    DWORD PTR es:[edi],dx
  43020f:	nop
  430210:	icebp  
  430211:	jg     0x4301c2
  430213:	jmp    0xe657521b
  430218:	dec    ebx
  430219:	mov    WORD PTR [eax],fs
  43021b:	rol    DWORD PTR [edi-0x6],1
  43021e:	mov    dl,0x18
  430220:	jnp    0x4301a6
  430222:	std    
  430223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430224:	dec    ebx
  430225:	cli    
  430226:	dec    ebp
  430227:	loopne 0x43021a
  430229:	push   edi
  43022a:	scas   al,BYTE PTR es:[edi]
  43022b:	imul   edi,esi,0xffffff84
  43022e:	pop    ebp
  43022f:	push   edi
  430230:	jmp    0x7a06e2bb
  430235:	sbb    eax,0xffffffa3
  430238:	inc    edi
  430239:	cli    
  43023a:	jp     0x4301d8
  43023c:	jg     0x430205
  43023e:	jb     0x43021f
  430240:	xchg   ecx,eax
  430241:	xchg   edi,eax
  430242:	add    sp,WORD PTR [edx]
  430245:	dec    esp
  430246:	jp     0x43021b
  430248:	adc    DWORD PTR [esi+0x57],ecx
  43024b:	inc    ebp
  43024c:	stos   DWORD PTR es:[edi],eax
  43024d:	dec    esp
  43024e:	popf   
  43024f:	cmp    eax,0x47005793
  430254:	sbb    BYTE PTR [ebp-0x3efd7d0f],ah
  43025a:	scas   al,BYTE PTR es:[edi]
  43025b:	aaa    
  43025c:	mov    eax,0x2c5d11e9
  430261:	jbe    0x430265
  430263:	popf   
  430264:	add    dh,BYTE PTR [ecx-0x57]
  430267:	daa    
  430268:	mov    WORD PTR [ebx],?
  43026a:	pop    esp
  43026b:	push   edi
  43026c:	(bad)  
  43026e:	les    edx,FWORD PTR [edx]
  430270:	(bad)  
  430271:	and    ebx,DWORD PTR [edx+ebx*2-0x71]
  430275:	sub    esp,DWORD PTR [eax+0x52]
  430278:	(bad)  
  430279:	and    edx,DWORD PTR [edx+ebp*2-0x58]
  43027d:	mov    cl,0x79
  43027f:	pop    ecx
  430280:	cmp    bl,BYTE PTR [eax]
  430282:	fsubp  st(0),st
  430284:	shl    BYTE PTR ds:0x993a417d,1
  43028a:	icebp  
  43028b:	jle    0x43029e
  43028d:	sub    DWORD PTR [esp],eax
  430290:	enter  0xf7c,0xa
  430294:	mov    bh,0xed
  430296:	or     BYTE PTR [ebx-0x59fc16fe],bh
  43029c:	xchg   DWORD PTR [esp+eax*1-0x574ffd63],ecx
  4302a3:	mov    dl,0xd
  4302a5:	ins    DWORD PTR es:[edi],dx
  4302a6:	cmp    ah,BYTE PTR [edx-0x70e917c3]
  4302ac:	sti    
  4302ad:	mov    bl,0x53
  4302af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4302b0:	test   BYTE PTR [esi+0x74029d04],cl
  4302b6:	rol    DWORD PTR [eax],0x8e
  4302b9:	shr    BYTE PTR [ebp-0x3f],cl
  4302bc:	jb     0x430266
  4302be:	(bad)  
  4302bf:	fucom  st(7)
  4302c1:	icebp  
  4302c2:	scas   eax,DWORD PTR es:[edi]
  4302c3:	call   0x3d5e:0xfa2c16d7
  4302ca:	sub    DWORD PTR [ecx],0x56
  4302cd:	xchg   BYTE PTR [ecx+ebp*8-0x5b78fd62],dl
  4302d4:	(bad)  
  4302d6:	mov    esi,0xff87c2f6
  4302db:	call   0x49cf927e
  4302e0:	in     al,0x38
  4302e2:	cli    
  4302e3:	cwde   
  4302e4:	xlat   BYTE PTR ds:[ebx]
  4302e5:	lods   eax,DWORD PTR ds:[esi]
  4302e6:	psrlw  mm2,QWORD PTR [esi+ecx*2]
  4302ea:	cld    
  4302eb:	ficomp WORD PTR [edx-0x6bb88c83]
  4302f1:	xchg   BYTE PTR [edi+0x4f3857d2],dl
  4302f7:	je     0x430316
  4302f9:	popf   
  4302fa:	cld    
  4302fb:	mov    esi,0xc14fcd67
  430300:	mov    edi,0x1daefa6d
  430305:	jge    0x43037a
  430307:	aas    
  430308:	xchg   BYTE PTR fs:[edi+0x4f38679c],bl
  43030f:	adc    DWORD PTR [edx+0x77],0x7d4a8efa
  430316:	jae    0x430347
  430318:	inc    esp
  430319:	xchg   BYTE PTR [edi+0x38670080],cl
  43031f:	dec    edi
  430320:	add    DWORD PTR [ecx],ebx
  430322:	cmp    eax,0x8defe5fa
  430327:	test   BYTE PTR [ecx-0x4605c7ab],cl
  43032d:	push   ebx
  43032e:	and    al,0x62
  430330:	mov    ah,0xe7
  430332:	cmp    BYTE PTR [ecx+ebp*1+0x4ee45a],al
  430339:	or     DWORD PTR [ebx-0x37440676],eax
  43033f:	dec    edx
  430340:	push   ebx
  430341:	fdivr  QWORD PTR [ebx-0x44440082]
  430347:	mov    edx,0x83bb6274
  43034c:	nop
  43034d:	jge    0x430317
  43034f:	cmc    
  430350:	push   eax
  430351:	mov    edi,0x24ffee42
  430356:	xor    al,al
  430358:	inc    ebp
  430359:	fwait
  43035a:	push   es
  43035b:	call   0xf60ba284
  430360:	push   DWORD PTR [ecx+0x5c15f5cb]
  430366:	xor    eax,0xd72003a
  43036b:	jne    0x43035d
  43036d:	or     eax,DWORD PTR [esi-0x361400c0]
  430373:	cmc    
  430374:	jne    0x430362
  430376:	leave  
  430377:	adc    ebp,DWORD PTR [eax]
  430379:	out    0x3f,eax
  43037b:	cli    
  43037c:	cmp    BYTE PTR [ecx+0xe4da],0x4
  430383:	add    BYTE PTR [edi],al
  430385:	test   bh,bl
  430387:	enter  0xfff5,0x69
  43038b:	mov    ebx,0xca3bfb92
  430390:	dec    edx
  430391:	push   0xffffffc5
  430393:	pop    ebp
  430394:	cmc    
  430395:	push   0xfffa7fc3
  43039a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43039b:	leave  
  43039c:	adc    edx,DWORD PTR [eax-0x29]
  43039f:	aas    
  4303a0:	cli    
  4303a1:	test   BYTE PTR [esp+ecx*2],al
  4303a4:	lea    eax,cs:[ecx-0x4a]
  4303a8:	idiv   edi
  4303aa:	cmp    esi,DWORD PTR [esi+0x62]
  4303ad:	add    BYTE PTR [edi+edi*8-0x5962a8fd],0x7a
  4303b5:	xchg   edi,eax
  4303b6:	xchg   ah,cl
  4303b8:	dec    eax
  4303b9:	dec    edi
  4303ba:	out    dx,al
  4303bb:	shl    DWORD PTR [edx],1
  4303bd:	pop    ebx
  4303be:	jp     0x4303bc
  4303c0:	jp     0x430381
  4303c2:	jmp    0x20cfb722
  4303c7:	fld    DWORD PTR [esi-0x6]
  4303ca:	bound  edi,QWORD PTR [ecx-0x4d]
  4303cd:	out    0x57,eax
  4303cf:	test   al,0x48
  4303d1:	cli    
  4303d2:	sbb    ecx,ebp
  4303d4:	iret   
  4303d5:	add    esp,DWORD PTR [ebx+0x66]
  4303d8:	inc    edi
  4303d9:	add    BYTE PTR [edi],dl
  4303db:	outs   dx,BYTE PTR ds:[esi]
  4303dc:	inc    edi
  4303dd:	pop    edx
  4303de:	(bad)  [eax+0x35]
  4303e1:	mov    esi,0x8057a0c8
  4303e6:	add    BYTE PTR [ecx],bh
  4303e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4303e9:	clc    
  4303ea:	jmp    DWORD PTR [edx]
  4303ec:	clc    
  4303ed:	lods   eax,DWORD PTR ds:[esi]
  4303ee:	push   edx
  4303ef:	sub    BYTE PTR [esi+0x5412f2fe],dl
  4303f5:	push   esi
  4303f6:	mov    DWORD PTR [edx],ecx
  4303f8:	dec    ebx
  4303f9:	inc    edi
  4303fa:	gs test eax,0xf58d79b6
  430400:	jnp    0x430449
  430402:	dec    edi
  430403:	push   ds
  430404:	pusha  
  430405:	inc    edi
  430406:	gs popf 
  430408:	fimul  WORD PTR [ecx+0x4763e25f]
  43040e:	xchg   dh,bl
  430410:	nop
  430411:	dec    esi
  430412:	out    dx,al
  430413:	rcl    BYTE PTR [ebx+0x2e4bbf79],1
  430419:	jnp    0x4303dc
  43041b:	ins    DWORD PTR es:[edi],dx
  43041c:	adc    DWORD PTR [ebx+ebp*4-0x7b8ed6a2],eax
  430423:	popf   
  430424:	mov    ch,0x47
  430426:	cli    
  430427:	dec    ebp
  430428:	add    DWORD PTR [ebx],0x6201a2ae
  43042e:	jle    0x43048a
  430430:	or     dh,BYTE PTR [ebx+eax*2+0x1e]
  430434:	inc    ebx
  430435:	(bad)  
  430437:	mov    ebx,0x197ac242
  43043c:	add    eax,DWORD PTR [ebp+0x48]
  43043f:	ja     0x4303cf
  430441:	sti    
  430442:	jae    0x4303e7
  430444:	ret    0x76e8
  430447:	and    DWORD PTR [ebx],eax
  430449:	sub    eax,0xd3670048
  43044e:	and    DWORD PTR [eax],esi
  430450:	ror    BYTE PTR [esi],0x6c
  430453:	jle    0x430455
  430455:	cmp    edx,DWORD PTR [ecx]
  430457:	dec    eax
  430458:	fisubr DWORD PTR [eax+ebp*8+0x6d72c976]
  43045f:	inc    esp
  430460:	inc    edx
  430461:	gs cmc 
  430463:	inc    ebp
  430464:	aaa    
  430465:	sub    BYTE PTR [eax],0xc9
  430468:	mov    DWORD PTR [ebp-0x75454cde],ecx
  43046e:	xchg   edx,eax
  43046f:	ret    
  430470:	sbb    al,BYTE PTR [edi+0x3a154c63]
  430476:	shl    DWORD PTR [edx+eax*1+0x7479770],1
  43047d:	sub    BYTE PTR [eax+0x644311f7],0x44
  430484:	imul   ecx,DWORD PTR [ebx],0x8b7c43f6
  43048a:	arpl   WORD PTR [ebp+eiz*8+0x39],cx
  43048e:	mov    eax,ds:0x9f3b2179
  430493:	inc    edi
  430494:	xlat   BYTE PTR ds:[ebx]
  430495:	rcl    BYTE PTR [ecx-0x731038d1],cl
  43049b:	xchg   edx,eax
  43049c:	add    DWORD PTR [edx],0x66
  43049f:	stc    
  4304a0:	call   0xff38:0xb3042566
  4304a7:	fstp   TBYTE PTR [edx+0x7]
  4304aa:	inc    eax
  4304ab:	jmp    0xaaf03ea9
  4304b0:	add    BYTE PTR [esi-0x692a410f],bl
  4304b6:	enter  0x564f,0x8c
  4304ba:	or     DWORD PTR [edi],ecx
  4304bc:	test   eax,0x24422a9e
  4304c1:	loop   0x4304ff
  4304c3:	mov    WORD PTR [ecx+ebx*4+0x36],gs
  4304c7:	cli    
  4304c8:	ss leave 
  4304ca:	out    dx,eax
  4304cb:	mov    eax,0x8c86da2e
  4304d0:	and    eax,ebp
  4304d2:	cmp    al,0xfa
  4304d4:	adc    DWORD PTR [edx+0x6716fa7b],ebp
  4304da:	adc    eax,0x318f648d
  4304df:	cli    
  4304e0:	push   es
  4304e1:	icebp  
  4304e2:	sahf   
  4304e3:	jmp    FWORD PTR [ebx+0x4c]
  4304e6:	add    DWORD PTR [esi-0x10ef36d6],0xbf7edbec
  4304f0:	addr16 mov eax,0x26c17487
  4304f6:	je     0x4304f7
  4304f8:	call   0xdf3f2f9b
  4304fd:	pop    ebx
  4304fe:	cmp    al,0x8c
  430500:	sub    al,0x79
  430502:	leave  
  430503:	xchg   BYTE PTR [edi-0x4e7b79d2],ah
  430509:	pop    edx
  43050a:	cmp    al,0xfa
  43050c:	sbb    DWORD PTR [ecx+0x17],eax
  43050f:	mov    cl,0xa6
  430511:	arpl   WORD PTR [esi-0x41],di
  430514:	out    dx,al
  430515:	add    BYTE PTR [ebp+0x79],cl
  430518:	sub    DWORD PTR [ecx-0x56d0f613],0xffffffe0
  43051f:	mov    DWORD PTR [eax+eax*1-0xa36e4],eax
  430526:	inc    ecx
  430527:	xor    dl,0xf4
  43052a:	xor    eax,eax
  43052c:	dec    edx
  43052d:	push   0x800004b5
  430532:	add    esi,DWORD PTR [ebx]
  430534:	outs   dx,BYTE PTR ds:[esi]
  430535:	adc    eax,DWORD PTR [esp+eax*1-0x7d]
  430539:	xor    eax,0x3a34e0
  43053e:	loope  0x4304c2
  430540:	jmp    0xf98d:0x4ac0e3f8
  430547:	add    edi,esp
  430549:	push   DWORD PTR [ebx-0x3e290a8d]
  43054f:	add    BYTE PTR [edx],0xfe
  430552:	add    eax,0x4a
  430555:	lea    edi,[ecx-0x4c000835]
  43055b:	jae    0x430552
  43055d:	(bad)  
  43055e:	loope  0x4304ea
  430560:	or     bh,bh
  430562:	mov    ds:0x449cb2c0,eax
  430567:	add    al,0x0
  430569:	call   0x38367c
  43056e:	rol    DWORD PTR [edx-0x41fc01fe],0x4a
  430575:	lea    edi,[ecx-0x32]
  430578:	repnz inc DWORD PTR [eax]
  43057b:	rep outs dx,BYTE PTR ds:[esi]
  43057d:	mov    eax,DWORD PTR [ebp-0xa4204]
  430583:	xchg   esp,eax
  430584:	scas   eax,DWORD PTR es:[edi]
  430585:	xor    eax,0xffffffdc
  430588:	mov    ebp,0xf57f50f5
  43058d:	dec    edx
  43058e:	mov    edi,0x2a8
  430593:	push   ecx
  430594:	xchg   DWORD PTR [edx-0x10],edi
  430597:	xor    edi,DWORD PTR [esi-0x7262b01e]
  43059d:	inc    edx
  43059e:	cli    
  43059f:	push   ds
  4305a0:	pop    esi
  4305a1:	out    dx,eax
  4305a2:	test   ch,bl
  4305a4:	(bad)  
  4305a5:	sti    
  4305a6:	xchg   bl,bl
  4305a8:	sbb    DWORD PTR [ebp+eax*2-0x1a],ebx
  4305ac:	scas   eax,DWORD PTR es:[edi]
  4305ad:	inc    esp
  4305ae:	cmp    BYTE PTR [eax-0x62c170d7],al
  4305b4:	push   esi
  4305b5:	mul    BYTE PTR [ebp-0x63]
  4305b8:	fsubr  st,st(2)
  4305ba:	jecxz  0x43056b
  4305bc:	imul   edi,esi,0xfe2a73b8
  4305c2:	jmp    FWORD PTR [eax]
  4305c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305c5:	add    esi,ebx
  4305c7:	jb     0x4305c1
  4305c9:	cmp    edi,edi
  4305cb:	push   0x69
  4305cd:	mov    ch,0x74
  4305cf:	mov    BYTE PTR fs:[edi+ebp*4-0x41cabb64],ah
  4305d7:	call   0x39c15d90
  4305dc:	inc    ebp
  4305dd:	jg     0x430643
  4305df:	add    BYTE PTR [ecx+0x29],al
  4305e2:	scas   eax,DWORD PTR es:[edi]
  4305e3:	xchg   al,bl
  4305e5:	sub    eax,0x71de8cac
  4305ea:	repz mov dl,0x6d
  4305ed:	cwde   
  4305ee:	dec    ebx
  4305ef:	fld    DWORD PTR [esi-0x41ff27d1]
  4305f5:	pop    ecx
  4305f6:	fcom   DWORD PTR [ecx]
  4305f8:	and    dh,bl
  4305fa:	daa    
  4305fb:	dec    edi
  4305fc:	adc    al,0xd6
  4305fe:	dec    edi
  4305ff:	out    0xdb,eax
  430601:	enter  0xfa44,0x26
  430605:	je     0x43065d
  430607:	add    ecx,ecx
  430609:	ja     0x43064e
  43060b:	popa   
  43060c:	push   ds
  43060d:	jno    0x430605
  43060f:	ins    DWORD PTR es:[edi],dx
  430610:	(bad)  
  430611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430612:	mov    edi,0xa902200f
  430617:	into   
  430618:	cdq    
  430619:	loope  0x43063e
  43061b:	dec    eax
  43061c:	ret    
  43061d:	jmp    DWORD PTR [ebp+0x43]
  430620:	jbe    0x4305ab
  430622:	and    ecx,DWORD PTR [eax+0x23]
  430625:	mov    ch,0xf0
  430627:	jbe    0x430688
  430629:	repnz sbb BYTE PTR [ebp-0x6f],al
  43062d:	es (bad) 
  43062f:	ret    
  430630:	mov    ds:0x25f4218b,al
  430635:	ror    BYTE PTR [eax+0x78],0xdf
  430639:	loop   0x4306aa
  43063b:	mov    esi,0x13a98866
  430640:	in     eax,dx
  430641:	xor    eax,0xa80053f3
  430646:	ret    0xf4e8
  430649:	das    
  43064a:	std    
  43064b:	mov    al,0xbb
  43064d:	out    dx,al
  43064e:	push   cs
  43064f:	pop    bx
  430651:	mov    DWORD PTR [esi+0x2a5d10e4],ebp
  430657:	cld    
  430658:	js     0x4305f9
  43065a:	pushf  
  43065b:	ins    DWORD PTR es:[edi],dx
  43065c:	and    DWORD PTR [ebx+eax*1+0xc3a03e9],0x5e
  430664:	cld    
  430665:	mov    esp,0x9de76889
  43066a:	add    ch,cl
  43066c:	fst    QWORD PTR ds:0x63780cc0
  430672:	adc    dh,dl
  430674:	sub    ch,BYTE PTR [ecx]
  430676:	retf   0x1efa
  430679:	fucom  st(1)
  43067b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43067c:	lea    ebx,[ecx+0x3a]
  43067f:	sbb    dl,BYTE PTR ds:[eax]
  430682:	enter  0xd5ac,0x7b
  430686:	inc    edx
  430687:	in     al,dx
  430688:	sar    DWORD PTR [eax+0x3],cl
  43068b:	outs   dx,BYTE PTR ds:[esi]
  43068c:	push   edx
  43068d:	add    ah,BYTE PTR [ecx+0x29ee3ff]
  430693:	xchg   DWORD PTR [ecx-0x128bcbdc],edi
  430699:	enter  0xe675,0x2b
  43069d:	sbb    bh,cl
  43069f:	xchg   BYTE PTR [edi-0x700f1f8f],dh
  4306a5:	pop    esi
  4306a6:	jg     0x43067f
  4306a8:	xchg   ecx,eax
  4306a9:	add    BYTE PTR [esi+0x6b],bl
  4306ac:	cld    
  4306ad:	jle    0x4306c9
  4306af:	mov    edi,0xb1596cfb
  4306b4:	sub    BYTE PTR [edi-0x5f],dh
  4306b7:	add    esi,DWORD PTR [ebp+ecx*1+0x22]
  4306bb:	mov    esi,0x561720b
  4306c0:	repz xor DWORD PTR [edx-0x495be1be],esp
  4306c7:	mov    ah,0xbf
  4306c9:	loope  0x430719
  4306cb:	cmp    BYTE PTR [ebp+esi*1+0x1a],dh
  4306cf:	mov    esi,0x39996207
  4306d4:	scas   eax,DWORD PTR es:[edi]
  4306d5:	popa   
  4306d6:	mov    al,ds:0x28110002
  4306db:	add    bh,dl
  4306dd:	push   ds
  4306de:	sbb    esi,DWORD PTR [edx+ebx*2-0x49]
  4306e2:	arpl   WORD PTR [edx-0x43],cx
  4306e5:	loope  0x430685
  4306e7:	iret   
  4306e8:	xchg   BYTE PTR ds:0xe46f2918,dl
  4306ee:	sahf   
  4306ef:	add    cl,BYTE PTR [edi-0x61]
  4306f2:	adc    ecx,DWORD PTR [ebp+0x52]
  4306f5:	bound  ebp,QWORD PTR [edx+0x1d]
  4306f8:	adc    bh,BYTE PTR [edx+0x6a61385f]
  4306fe:	(bad)  
  4306ff:	dec    BYTE PTR [edx]
  430701:	imul   ebx,DWORD PTR [esi*1-0x2bb91606],0x4
  430709:	add    BYTE PTR [ecx+eax*1],al
  43070c:	lea    eax,[ebp-0xa08bb00]
  430712:	call   FWORD PTR [esi-0x2]
  430715:	dec    edi
  430716:	mov    BYTE PTR [ecx-0x6f],0xf4
  43071a:	(bad)  
  43071b:	sti    
  43071c:	add    al,ch
  43071e:	mov    ecx,0x8b0000d1
  430723:	ja     0x430733
  430725:	jnp    0x4306eb
  430727:	fmul   DWORD PTR [ecx+0x7bc774ba]
  43072d:	mov    edx,0x42b7bb2c
  430732:	add    ebp,DWORD PTR [edx+0x61]
  430735:	add    eax,DWORD PTR [eax]
  430737:	test   BYTE PTR [edi+0x3562fc73],al
  43073d:	enter  0x30f,0x7e
  430741:	cli    
  430742:	push   DWORD PTR [edx+ebp*2-0x7d]
  430746:	leave  
  430747:	push   eax
  430748:	inc    ebx
  430749:	test   BYTE PTR [eax],cl
  43074b:	fcmovb st,st(6)
  43074d:	jp     0x430748
  43074f:	jne    0x4307ca
  430751:	outs   dx,BYTE PTR ds:[esi]
  430752:	mov    eax,DWORD PTR [ecx]
  430754:	or     BYTE PTR [ebp-0xa0a0f73],cl
  43075a:	call   DWORD PTR ds:0x7e908b93
  430760:	shl    ch,0x51
  430763:	mov    bh,0xbd
  430765:	add    cl,BYTE PTR [ebp+0x73e2f429]
  43076b:	sbb    al,0xc1
  43076d:	cmc    
  43076e:	test   BYTE PTR [ebx+ebp*2+0x4e],dh
  430772:	mov    eax,DWORD PTR [eax]
  430774:	add    esp,esi
  430776:	xor    esi,edx
  430778:	xchg   ebx,eax
  430779:	push   edx
  43077a:	add    DWORD PTR [ebx+0x14],0x341bd2fb
  430781:	test   BYTE PTR [ecx+0x16],al
  430784:	popf   
  430785:	or     BYTE PTR [edi],bh
  430787:	jle    0x430767
  430789:	loope  0x43079b
  43078b:	mov    bl,0xa6
  43078d:	je     0x4307e5
  43078f:	push   ss
  430790:	aam    0xa8
  430792:	inc    ecx
  430793:	add    ecx,DWORD PTR [edi-0x62]
  430796:	xchg   edx,eax
  430797:	(bad)  
  430798:	xlat   BYTE PTR ds:[ebx]
  430799:	fs inc eax
  43079b:	dec    ebp
  43079c:	push   ds
  43079d:	push   0x7
  43079f:	push   eax
  4307a0:	jle    0x430812
  4307a2:	test   eax,0xffab504
  4307a7:	add    BYTE PTR [ebp-0x297ba460],bl
  4307ad:	xor    eax,0x31608715
  4307b2:	mov    esi,DWORD PTR [edi]
  4307b4:	mov    ch,0x52
  4307b6:	cs stc 
  4307b8:	call   0x2630:0xd88734a0
  4307bf:	jmp    0x8583ddfc
  4307c4:	fsub   DWORD PTR [eax]
  4307c6:	sub    edi,ebp
  4307c8:	lods   al,BYTE PTR ds:[esi]
  4307c9:	jmp    0xf31961ae
  4307ce:	inc    ecx
  4307cf:	add    ebx,DWORD PTR [ebp+0x1ceb8b8e]
  4307d5:	mov    ebp,0x9d000037
  4307da:	sub    ebx,edx
  4307dc:	xchg   al,dh
  4307de:	sub    eax,0xcad3e8b
  4307e3:	pop    esp
  4307e4:	push   ecx
  4307e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307e6:	jmp    0x2bf994c3
  4307eb:	jecxz  0x4307af
  4307ed:	mov    ds:0x1ffec3f3,al
  4307f2:	adc    DWORD PTR [ecx+ecx*4],eax
  4307f5:	mov    al,ds:0xa584110d
  4307fa:	daa    
  4307fb:	(bad)  
  4307fc:	jmp    DWORD PTR [ebp+0x2]
  4307ff:	xor    DWORD PTR [eax-0x47cf3530],edi
  430805:	mov    edi,0xa6b820ca
  43080a:	jg     0x4307cc
  43080c:	out    dx,eax
  43080d:	outs   dx,BYTE PTR ds:[esi]
  43080e:	sti    
  43080f:	test   BYTE PTR [ebx-0xb],0x38
  430813:	out    0x3,eax
  430815:	popf   
  430816:	xchg   DWORD PTR [ebx],ebp
  430818:	or     al,0x22
  43081a:	add    ch,BYTE PTR [edx-0x16fee58d]
  430820:	add    esp,DWORD PTR [edx]
  430822:	dec    edi
  430823:	nop
  430824:	pop    esi
  430825:	ret    0x9134
  430828:	sub    bl,al
  43082a:	add    cl,ch
  43082c:	add    esi,DWORD PTR [esi-0x14730f54]
  430832:	sub    DWORD PTR [edx],esi
  430834:	inc    ecx
  430835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430836:	xor    bh,BYTE PTR [edi+0x54]
  430839:	popf   
  43083a:	add    ch,cl
  43083c:	mov    WORD PTR [eax],es
  43083e:	pop    ebx
  43083f:	sbb    edi,DWORD PTR [edx]
  430841:	push   edx
  430842:	xchg   DWORD PTR [edx],esi
  430844:	ret    0x8a84
  430847:	(bad)  
  430849:	dec    ecx
  43084a:	xor    bl,0x46
  43084d:	ds ja  0x4308ce
  430850:	cmp    BYTE PTR [ebx+ebp*4+0x1555f612],cl
  430857:	mov    eax,0xb848fc34
  43085c:	jmp    0x430896
  43085e:	push   0xe
  430860:	sub    DWORD PTR [ebx+ecx*1-0x64871645],eax
  430867:	in     eax,0x29
  430869:	cmp    BYTE PTR [ebp-0x2b],dl
  43086c:	in     eax,dx
  43086d:	dec    edx
  43086e:	loopne 0x4307f5
  430870:	sub    BYTE PTR [edi],al
  430872:	int    0xe5
  430874:	sub    eax,0xff2a23ad
  430879:	addr16 test eax,0xce620002
  43087f:	xchg   cl,dh
  430881:	pop    ebp
  430882:	sbb    ecx,DWORD PTR [ecx-0x5e80ebc]
  430888:	xchg   BYTE PTR [edi-0x30153b37],dh
  43088e:	mov    dl,0x87
  430890:	xlat   BYTE PTR ds:[ebx]
  430891:	ror    DWORD PTR [edx-0x4f4103a1],1
  430897:	call   0x34bd:0xf99ee900
  43089e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43089f:	jnp    0x4308f5
  4308a1:	mov    eax,ds:0x7f037600
  4308a6:	test   eax,0x91447acd
  4308ab:	scas   al,BYTE PTR es:[edi]
  4308ac:	sub    al,0x67
  4308ae:	stos   DWORD PTR es:[edi],eax
  4308af:	cwde   
  4308b0:	add    al,BYTE PTR [eax]
  4308b2:	je     0x4308c8
  4308b4:	add    bh,dl
  4308b6:	jle    0x43091a
  4308b8:	aam    0x4f
  4308ba:	pusha  
  4308bb:	je     0x4308de
  4308bd:	mov    ah,ch
  4308bf:	retf   0x142c
  4308c2:	sbb    eax,0x19ffc2b3
  4308c7:	fnstenv [eax-0x39d61a3d]
  4308cd:	jmp    0x4308df
  4308cf:	pop    ebx
  4308d0:	add    eax,0xc619cf7a
  4308d5:	out    0x72,eax
  4308d7:	imul   esi,DWORD PTR [eax],0x73
  4308da:	inc    ecx
  4308db:	sub    al,0xc3
  4308dd:	pop    es
  4308de:	cdq    
  4308df:	and    DWORD PTR [esi+0x255470df],esi
  4308e5:	out    0xed,eax
  4308e7:	jbe    0x430917
  4308e9:	cli    
  4308ea:	ins    DWORD PTR es:[edi],dx
  4308eb:	loope  0x4308a3
  4308ed:	xor    ch,BYTE PTR [edx+0x72]
  4308f0:	pop    es
  4308f1:	outs   dx,DWORD PTR ds:[esi]
  4308f2:	add    BYTE PTR [edx],dh
  4308f4:	pop    ebx
  4308f5:	dec    DWORD PTR [edx-0xfb46c86]
  4308fb:	pushf  
  4308fc:	sbb    esp,esp
  4308fe:	std    
  4308ff:	add    ebx,esp
  430901:	pop    ds
  430902:	jmp    FWORD PTR [ecx-0x12]
  430905:	add    DWORD PTR [ebp+0x0],0xf07391d8
  43090c:	fadd   st(0),st
  43090e:	jecxz  0x43090d
  430910:	jecxz  0x43098d
  430912:	ret    0x2d85
  430915:	ins    DWORD PTR es:[edi],dx
  430916:	or     cl,BYTE PTR [ebx-0x217e1947]
  43091c:	fdiv   QWORD PTR [ecx-0x22]
  43091f:	std    
  430920:	add    edi,DWORD PTR [ebx+ebx*2+0xc]
  430924:	dec    edi
  430925:	inc    edx
  430926:	out    dx,al
  430927:	(bad)  
  430928:	jns    0x43091c
  43092a:	add    DWORD PTR [ebp+0x10],0x47ec4b7c
  430931:	cmp    ah,dl
  430933:	cmp    BYTE PTR [edi],ch
  430935:	cmc    
  430936:	xor    DWORD PTR [eax-0x48],ecx
  430939:	jo     0x4308d6
  43093b:	call   FWORD PTR [edx-0x24]
  43093e:	mov    ?,WORD PTR [ecx+eax*1+0x12e850f1]
  430945:	mov    eax,0xf0f9fffb
  43094a:	js     0x4309ad
  43094c:	(bad)  
  43094d:	cmp    ch,dl
  43094f:	mov    DWORD PTR [ecx],edi
  430951:	lock mov eax,DWORD PTR [ebp-0xa0f67]
  430958:	in     eax,dx
  430959:	cmp    al,BYTE PTR [esi]
  43095b:	mov    DWORD PTR [ecx],edx
  43095d:	in     al,dx
  43095e:	xor    DWORD PTR [ebp+0x70],0xb7fc7b7d
  430965:	vpsubsb xmm5,xmm3,XMMWORD PTR [eax-0x24]
  43096a:	sti    
  43096b:	inc    DWORD PTR [eax]
  43096d:	popf   
  43096e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43096f:	mov    edi,0xb99cbb0b
  430974:	add    ebx,DWORD PTR [ebp-0x6399f752]
  43097a:	xchg   ebx,eax
  43097b:	add    dl,BYTE PTR [ebx+0x5]
  43097e:	xchg   ebx,eax
  43097f:	(bad)  
  430981:	adc    bh,BYTE PTR [eax]
  430983:	add    edi,esi
  430985:	xchg   ecx,eax
  430986:	das    
  430987:	test   al,0x0
  430989:	ja     0x4309b4
  43098b:	mov    DWORD PTR [edx-0x5d],eax
  43098e:	jmp    0x40934bbe
  430993:	cmp    al,0xe7
  430995:	sub    dh,ah
  430997:	cmp    al,0xfa
  430999:	jnp    0x43094d
  43099b:	les    edx,FWORD PTR [ecx]
  43099d:	push   ds
  43099e:	fistp  QWORD PTR [edi]
  4309a0:	aaa    
  4309a1:	push   ds
  4309a2:	imul   ebp,edx,0x866158fa
  4309a8:	jl     0x43093b
  4309aa:	push   ss
  4309ab:	js     0x430933
  4309ad:	cmp    BYTE PTR [ebp-0x6772c178],cl
  4309b3:	pop    ebx
  4309b4:	push   ss
  4309b5:	fnstsw WORD PTR [ecx+eax*8]
  4309b8:	fistp  DWORD PTR [esi]
  4309ba:	pop    ebp
  4309bb:	retf   
  4309bc:	or     dl,BYTE PTR [edx+0x24]
  4309bf:	xor    ebx,eax
  4309c1:	mov    dh,0x62
  4309c3:	test   al,0xfa
  4309c5:	mov    eax,0xad948970
  4309ca:	iret   
  4309cb:	cmp    al,0xfa
  4309cd:	iret   
  4309ce:	pushf  
  4309cf:	inc    ebx
  4309d0:	add    eax,DWORD PTR [eax]
  4309d2:	int    0xfc
  4309d4:	dec    eax
  4309d5:	gs sahf 
  4309d7:	shr    ebx,1
  4309d9:	add    eax,0xef87199d
  4309de:	and    bh,ch
  4309e0:	mov    dl,0xc
  4309e2:	push   edx
  4309e3:	jbe    0x430a13
  4309e5:	out    0x3a,eax
  4309e7:	add    dl,BYTE PTR [esi+0x3f]
  4309ea:	inc    edi
  4309eb:	sbb    eax,edx
  4309ed:	cmp    eax,0xc75d2f37
  4309f2:	call   0x71a:0x4488d07b
  4309f9:	das    
  4309fa:	and    al,0x2f
  4309fc:	outs   dx,BYTE PTR ds:[esi]
  4309fd:	pop    esp
  4309fe:	add    ch,BYTE PTR [ecx+0x3d]
  430a01:	aas    
  430a02:	pop    ss
  430a03:	das    
  430a04:	jae    0x430a39
  430a06:	add    bh,BYTE PTR [edi]
  430a08:	xchg   ebp,eax
  430a09:	ds pop es
  430a0b:	jl     0x4309b2
  430a0d:	sub    BYTE PTR [ebp-0x65492e2d],ah
  430a13:	sbb    dh,BYTE PTR [ebp+0x212ee738]
  430a19:	fimul  WORD PTR [ebx+0x39]
  430a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a1d:	or     ebx,DWORD PTR [ebp+0x1d2f5dd5]
  430a23:	push   ds
  430a24:	nop
  430a25:	add    bl,BYTE PTR [ebp+0x6fd63602]
  430a2b:	jnp    0x430a48
  430a2d:	or     al,0x22
  430a2f:	xor    bl,BYTE PTR [ebp+0x4]
  430a32:	mov    dh,0x71
  430a34:	pop    esp
  430a35:	add    al,BYTE PTR [eax]
  430a37:	popf   
  430a38:	add    dh,BYTE PTR [esi+edx*8-0x52]
  430a3c:	fwait
  430a3d:	jecxz  0x430a1a
  430a3f:	and    edi,DWORD PTR ds:0x2ce2b580
  430a45:	imul   eax,DWORD PTR [edi+0x596cfe4a],0x88e9029d
  430a4f:	cdq    
  430a50:	out    dx,al
  430a51:	cli    
  430a52:	ret    
  430a53:	jb     0x4309f1
  430a55:	in     al,0x8e
  430a57:	loope  0x430a8f
  430a59:	shr    bl,1
  430a5b:	out    dx,eax
  430a5c:	ret    0xd3e8
  430a5f:	push   edi
  430a60:	push   edx
  430a61:	jmp    FWORD PTR [ecx-0x26]
  430a64:	stc    
  430a65:	test   BYTE PTR [ecx],ch
  430a67:	adc    dl,BYTE PTR [esi]
  430a69:	data16 in al,dx
  430a6b:	adc    eax,edi
  430a6d:	repz xchg ecx,eax
  430a6f:	cs mov cl,0x3f
  430a72:	jmp    0x6b1133c5
  430a77:	loop   0x430a72
  430a79:	test   BYTE PTR [ecx],ch
  430a7b:	xchg   ecx,eax
  430a7c:	xchg   DWORD PTR [ecx-0x72fd6117],edx
  430a82:	ins    BYTE PTR es:[edi],dx
  430a83:	or     ch,BYTE PTR [ecx]
  430a85:	cli    
  430a86:	out    dx,al
  430a87:	out    dx,eax
  430a88:	and    eax,0x28c73433
  430a8d:	sub    DWORD PTR [ecx+0x6a61b82d],0x74
  430a94:	icebp  
  430a95:	cli    
  430a96:	into   
  430a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a98:	das    
  430a99:	jae    0x430a90
  430a9b:	add    BYTE PTR [esi],bl
  430a9d:	outs   dx,DWORD PTR ds:[esi]
  430a9e:	aaa    
  430a9f:	mov    esi,0xe67a2896
  430aa4:	and    ch,BYTE PTR [esi-0x1a]
  430aa7:	push   es
  430aa8:	jmp    FWORD PTR [esp+edi*4-0x5d77823]
  430aaf:	imul   ch
  430ab1:	adc    al,0x66
  430ab3:	stc    
  430ab4:	and    eax,0x668e3b87
  430ab9:	sub    BYTE PTR [edi+0x11],cl
  430abc:	or     DWORD PTR [edi+edi*1+0x7e3cd7e9],esi
  430ac3:	lods   eax,DWORD PTR ds:[esi]
  430ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ac5:	xor    edi,edx
  430ac7:	rcr    esi,cl
  430ac9:	sub    edi,DWORD PTR [edi-0x402364ae]
  430acf:	gs loope 0x430a83
  430ad2:	cmp    BYTE PTR [edx-0x62],ah
  430ad5:	test   DWORD PTR [edi+0x61],edi
  430ad8:	mov    al,ds:0xe9000002
  430add:	cmp    ebp,esi
  430adf:	mov    DWORD PTR [ecx],ecx
  430ae1:	fld    DWORD PTR [ecx-0x21bc7cf8]
  430ae7:	dec    esp
  430ae8:	adc    DWORD PTR [ecx-0x6],eax
  430aeb:	mov    BYTE PTR [ecx],ah
  430aed:	in     eax,0x83
  430aef:	leave  
  430af0:	dec    ebx
  430af1:	lods   eax,DWORD PTR ds:[esi]
  430af2:	xor    eax,DWORD PTR [ecx]
  430af4:	inc    esp
  430af5:	add    edi,esi
  430af7:	mov    cl,0xc8
  430af9:	pop    es
  430afa:	add    BYTE PTR [eax],al
  430afc:	test   eax,0x6ade3b
  430b01:	add    eax,0x71e84a56
  430b06:	call   0x8e10b06
  430b0b:	add    DWORD PTR [eax],eax
  430b0d:	hlt    
  430b0e:	jns    0x430b53
  430b10:	hlt    
  430b11:	mov    dl,0x56
  430b13:	add    DWORD PTR [edi],0xfffaabdd
  430b19:	hlt    
  430b1a:	jnp    0x430b19
  430b1c:	(bad)  
  430b1d:	fs test edi,edi
  430b20:	inc    esp
  430b22:	jns    0x430b77
  430b24:	mov    ebp,0x8b52215e
  430b29:	sub    bl,cl
  430b2b:	(bad)  
  430b2c:	dec    edi
  430b2d:	cli    
  430b2e:	out    0x7e,eax
  430b30:	ror    bl,0xac
  430b33:	repz add ah,al
  430b36:	add    BYTE PTR [edx+0x5],ah
  430b39:	dec    ecx
  430b3a:	inc    edx
  430b3b:	out    dx,al
  430b3c:	push   eax
  430b3d:	sub    DWORD PTR [edx-0x4e],eax
  430b40:	push   eax
  430b41:	sbb    edx,DWORD PTR [ebx]
  430b43:	xor    BYTE PTR [esi],dl
  430b45:	les    eax,FWORD PTR [esi]
  430b47:	add    DWORD PTR [edi],0xfffffff7
  430b4a:	mov    edi,0x3b082fe
  430b4f:	push   eax
  430b50:	xor    ebx,edi
  430b52:	jp     0x430ad7
  430b54:	sub    al,0x9d
  430b56:	shl    DWORD PTR ds:0xe29f14fa,cl
  430b5c:	stc    
  430b5d:	(bad)  
  430b5e:	lds    esp,FWORD PTR [esi]
  430b60:	stos   DWORD PTR es:[edi],eax
  430b61:	mov    ah,0xec
  430b63:	xor    eax,0x8f810065
  430b68:	xchg   DWORD PTR [ebp+eax*1-0x31],ecx
  430b6c:	jg     0x430b99
  430b6e:	inc    ebx
  430b6f:	in     eax,0x35
  430b71:	out    0x3f,eax
  430b73:	add    BYTE PTR [edi],dh
  430b75:	cli    
  430b76:	jne    0x430bee
  430b78:	jbe    0x430b84
  430b7a:	and    ebp,ebp
  430b7c:	(bad)  
  430b7d:	call   FWORD PTR [ebp-0x554a28bf]
  430b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b84:	pusha  
  430b85:	call   DWORD PTR [edx]
  430b87:	sbb    dl,cl
  430b89:	sbb    BYTE PTR ds:[edi+0x5203864e],cl
  430b90:	(bad)  
  430b91:	xor    al,0xfa
  430b93:	dec    esp
  430b94:	add    BYTE PTR [ebp+ebp*4+0x4dfa3853],0xce
  430b9c:	mov    ebp,0x16d3f513
  430ba1:	sti    
  430ba2:	ficomp DWORD PTR [eax+esi*2]
  430ba5:	dec    esp
  430ba6:	push   ss
  430ba7:	rol    BYTE PTR [ecx],0x56
  430baa:	xchg   esp,eax
  430bab:	shr    ebx,cl
  430bad:	std    
  430bae:	ret    0x8b19
  430bb1:	rcr    BYTE PTR [esi],0x92
  430bb4:	lahf   
  430bb5:	jae    0x430c01
  430bb7:	inc    eax
  430bb8:	inc    esp
  430bb9:	jae    0x430c09
  430bbb:	inc    eax
  430bbc:	inc    esp
  430bbd:	jae    0x430c22
  430bbf:	push   eax
  430bc0:	inc    esp
  430bc1:	jae    0x430b9a
  430bc3:	cwde   
  430bc4:	sub    ebx,DWORD PTR [ecx+0x9]
  430bc7:	push   esi
  430bc8:	jmp    0x430b87
  430bca:	add    BYTE PTR [ecx],dl
  430bcc:	clc    
  430bcd:	in     al,dx
  430bce:	mov    ebp,0xd1c30308
  430bd3:	jmp    0x5202:0x1a0ba377
  430bda:	je     0x430bfa
  430bdc:	add    ecx,ebp
  430bde:	add    esi,DWORD PTR [ebp-0x48]
  430be1:	sar    DWORD PTR [ecx],1
  430be3:	push   edi
  430be4:	pop    ss
  430be5:	scas   al,BYTE PTR es:[edi]
  430be6:	adc    ecx,0x69
  430be9:	in     eax,0xae
  430beb:	fidiv  WORD PTR [edi-0x5d]
  430bee:	or     ebx,DWORD PTR [edx]
  430bf0:	add    bh,BYTE PTR [ebx-0x1879f574]
  430bf6:	add    ebx,DWORD PTR [ebp+0x24b2eb1a]
  430bfc:	sub    edi,ebp
  430bfe:	repnz sbb eax,ebp
  430c01:	lock rcr DWORD PTR [ebx+0x6186f042],1
  430c08:	push   0x0
  430c0a:	into   
  430c0b:	mov    gs,WORD PTR [ebx]
  430c0d:	jmp    0xcfc2ae3e
  430c12:	lahf   
  430c13:	outs   dx,BYTE PTR ds:[esi]
  430c14:	stc    
  430c15:	or     eax,0x6113694e
  430c1a:	into   
  430c1b:	cli    
  430c1c:	push   ss
  430c1d:	in     eax,0x8b
  430c1f:	inc    ecx
  430c20:	xor    al,cl
  430c22:	scas   al,BYTE PTR es:[edi]
  430c23:	retf   0x6dd3
  430c26:	scas   al,BYTE PTR es:[edi]
  430c27:	call   0x3778:0xb50baa7f
  430c2e:	cmp    DWORD PTR [eax],eax
  430c30:	(bad)  
  430c31:	retf   0xdd42
  430c34:	in     eax,0x3f
  430c36:	in     al,0x3
  430c38:	dec    eax
  430c39:	ja     0x430bbf
  430c3b:	test   BYTE PTR [esi+0x6e276729],bh
  430c41:	(bad)  
  430c42:	call   0xe8dffb4a
  430c47:	lods   eax,DWORD PTR ds:[esi]
  430c48:	xchg   edx,eax
  430c49:	ja     0x430c4a
  430c4b:	sub    al,0x7d
  430c4d:	cli    
  430c4e:	out    0x89,eax
  430c50:	mov    DWORD PTR ds:0x24b72fa,ebp
  430c56:	xchg   edi,esp
  430c58:	and    edx,eax
  430c5a:	add    esp,DWORD PTR [eax+0x62]
  430c5d:	out    0xb,al
  430c5f:	bound  edx,QWORD PTR [esi+0x2]
  430c62:	jg     0x430c15
  430c64:	pop    edx
  430c65:	sub    eax,0xfa72ad88
  430c6a:	test   DWORD PTR [ecx-0x1ea0565e],esp
  430c70:	sahf   
  430c71:	jp     0x430cbe
  430c73:	int    0xaa
  430c75:	add    BYTE PTR [edi-0x14],0x26
  430c79:	mov    esi,0xfc19fc23
  430c7e:	xchg   BYTE PTR [ecx-0x32bc8472],ch
  430c84:	mov    dh,0x7f
  430c86:	enter  0x9c75,0x81
  430c8a:	add    BYTE PTR [ebx-0x11f0d261],al
  430c90:	dec    ebp
  430c91:	push   es
  430c92:	lea    ebp,ds:0xe7fdfd00
  430c98:	outs   dx,BYTE PTR ds:[esi]
  430c99:	mov    ah,0x2c
  430c9b:	cli    
  430c9c:	aas    
  430c9d:	mov    ecx,0xaaccb0c5
  430ca2:	jbe    0x430d17
  430ca4:	or     eax,0xfad21aa9
  430ca9:	mov    ebp,DWORD PTR [esi+ebp*1]
  430cac:	test   eax,0xce480f3
  430cb1:	pop    edi
  430cb2:	add    eax,0x1e263c00
  430cb7:	push   eax
  430cb8:	cmp    ah,bl
  430cba:	aam    0x86
  430cbc:	xchg   ecx,eax
  430cbd:	push   ss
  430cbe:	lds    eax,FWORD PTR [ebx]
  430cc0:	cmp    DWORD PTR [edx+0x5f],0x7d2300fa
  430cc7:	ins    DWORD PTR es:[edi],dx
  430cc8:	add    al,0x7
  430cca:	test   BYTE PTR fs:[eax],0x1
  430cce:	push   ecx
  430ccf:	push   es
  430cd0:	push   ebx
  430cd1:	repz adc ebp,esp
  430cd4:	adc    al,BYTE PTR [ebp+eax*1-0x7d]
  430cd8:	push   es
  430cd9:	stc    
  430cda:	mov    esi,0x58ff116e
  430cdf:	inc    BYTE PTR [edx+0x373fe92]
  430ce5:	jecxz  0x430d2a
  430ce7:	test   BYTE PTR [ebx+0x7548027a],0x86
  430cee:	push   ebp
  430cef:	cmc    
  430cf0:	adc    eax,0x401484
  430cf5:	lds    ebp,FWORD PTR [ebx-0xa]
  430cf8:	ret    0x4500
  430cfb:	add    eax,0x7c3f7600
  430d00:	dec    ebx
  430d01:	or     BYTE PTR [ecx-0x70bb9149],bh
  430d07:	jmp    edx
  430d09:	cmp    al,0x2e
  430d0b:	std    
  430d0c:	out    0xb7,eax
  430d0e:	(bad)  
  430d0f:	jmp    0x430d06
  430d11:	mov    edx,DWORD PTR [ecx]
  430d13:	std    
  430d14:	xor    al,0x89
  430d17:	xlat   BYTE PTR ds:[ebx]
  430d18:	outs   dx,BYTE PTR ds:[esi]
  430d19:	and    al,0x4e
  430d1b:	dec    BYTE PTR [ebp+0x68]
  430d1e:	adc    bl,dl
  430d20:	cmp    al,0x0
  430d22:	jge    0x430d33
  430d24:	mov    DWORD PTR [esi-0x38],edi
  430d27:	jnp    0x430d9e
  430d29:	add    al,0x6c
  430d2b:	(bad)  
  430d2c:	inc    DWORD PTR [edi]
  430d2e:	mov    ah,0xdc
  430d30:	clc    
  430d31:	stos   BYTE PTR es:[edi],al
  430d32:	repz out dx,eax
  430d34:	jle    0x430cf6
  430d36:	cdq    
  430d37:	adc    al,0x4e
  430d39:	call   0x3ec28c
  430d3e:	popf   
  430d3f:	xchg   esi,eax
  430d40:	push   ebp
  430d41:	jae    0x430cd8
  430d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430d44:	std    
  430d45:	xchg   BYTE PTR [esi+0x14],ah
  430d48:	add    eax,0xd208adfb
  430d4d:	push   esi
  430d4e:	push   esp
  430d4f:	pop    esp
  430d50:	cli    
  430d51:	(bad)  
  430d52:	jmp    0x89c12ffb
  430d57:	cs int 0x2e
  430d5a:	push   esi
  430d5b:	jo     0x430d26
  430d5d:	xchg   BYTE PTR [eax],al
  430d5f:	ins    BYTE PTR es:[edi],dx
  430d60:	mov    ds:0xdca6fbd7,eax
  430d65:	stos   BYTE PTR es:[edi],al
  430d66:	adc    al,0x24
  430d68:	push   edi
  430d69:	sub    ah,bh
  430d6b:	push   esp
  430d6c:	bound  esi,QWORD PTR [ecx]
  430d6e:	cli    
  430d6f:	mov    bh,0x1a
  430d71:	mov    eax,DWORD PTR [ebp+eax*2+0x44]
  430d75:	push   es
  430d76:	(bad)  
  430d77:	loopne 0x430d7e
  430d79:	iret   
  430d7a:	out    0x99,al
  430d7c:	xchg   ebx,eax
  430d7d:	add    ecx,DWORD PTR [edi-0x32]
  430d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430d81:	mov    edi,0xcd6cce07
  430d86:	out    0xf2,eax
  430d88:	push   ss
  430d89:	(bad)  
  430d8a:	jmp    DWORD PTR [esi]
  430d8c:	add    dh,dh
  430d8e:	not    BYTE PTR [ecx+0x65cd2678]
  430d94:	sbb    BYTE PTR [esi+ebp*1],dh
  430d97:	iret   
  430d98:	bound  ecx,QWORD PTR [ebx+0x2b199d0e]
  430d9e:	lock push ss
  430da0:	pop    ecx
  430da1:	jle    0x430d60
  430da3:	add    eax,0x6f000414
  430da8:	inc    eax
  430da9:	jmp    0x31788895
  430dae:	cli    
  430daf:	adc    al,0xd7
  430db1:	aaa    
  430db2:	ss (bad) 
  430db5:	clc    
  430db6:	aaa    
  430db7:	pop    eax
  430db8:	add    dh,ch
  430dba:	scas   eax,DWORD PTR es:[edi]
  430dbb:	ins    BYTE PTR es:[edi],dx
  430dbc:	jnp    0x430def
  430dbe:	mov    ah,0x23
  430dc0:	cmp    eax,0xd600a780
  430dc5:	daa    
  430dc6:	mov    DWORD PTR [esi-0x4e25d4e5],ebx
  430dcc:	mov    esp,0xd214267b
  430dd1:	inc    ebx
  430dd2:	cld    
  430dd3:	add    BYTE PTR [eax],dl
  430dd5:	retf   0x34bc
  430dd8:	in     al,dx
  430dd9:	(bad)  
  430dda:	jae    0x430d9e
  430ddc:	(bad)  
  430dde:	xchg   ecx,eax
  430ddf:	or     al,0x6e
  430de1:	dec    ecx
  430de2:	in     eax,dx
  430de3:	dec    edx
  430de4:	shl    ebx,cl
  430de6:	and    bl,dl
  430de8:	push   edi
  430de9:	lods   eax,DWORD PTR ds:[esi]
  430dea:	lock xchg ah,bl
  430ded:	cli    
  430dee:	push   eax
  430def:	lock mov ebx,0x4f893127
  430df5:	sbb    dl,BYTE PTR [ebx*2-0x4092d8c7]
  430dfc:	ss (bad) 
  430dfe:	mov    edx,0xe04455d8
  430e03:	add    ecx,eax
  430e05:	jnp    0x430e03
  430e07:	cmp    dh,0x29
  430e0a:	sub    BYTE PTR gs:[esi-0x51205b86],dh
  430e11:	repz sub cl,dl
  430e14:	jl     0x430e8f
  430e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e17:	fist   WORD PTR [ebp+0x2acdbdf3]
  430e1d:	shl    bl,cl
  430e1f:	add    ebx,DWORD PTR [ebp+0x5e8b4acf]
  430e25:	fiadd  WORD PTR ds:0xde5e003e
  430e2b:	repnz add esp,DWORD PTR [esi+eax*8]
  430e2f:	add    al,0x14
  430e31:	adc    al,0xc6
  430e33:	dec    DWORD PTR [ebp*4-0x5ffabcbc]
  430e3a:	add    al,BYTE PTR [edi+0x27fa124]
  430e40:	xchg   ecx,eax
  430e41:	rcr    BYTE PTR [ebx],0xf9
  430e44:	xchg   esi,eax
  430e45:	and    ah,BYTE PTR [edi+0xa]
  430e48:	gs push ds
  430e4a:	es cli 
  430e4c:	jmp    0xe4a91195
  430e51:	and    eax,edx
  430e53:	and    eax,ecx
  430e55:	outs   dx,BYTE PTR ds:[esi]
  430e56:	jge    0x430e9c
  430e58:	fld    QWORD PTR [esi+eiz*1+0x68]
  430e5c:	jmp    0xec2b10a5
  430e61:	imul   esp,DWORD PTR [esi],0xfffffffa
  430e64:	bound  ebp,QWORD PTR [esi-0x25210e82]
  430e6a:	hlt    
  430e6b:	add    cl,ch
  430e6d:	sahf   
  430e6e:	call   0xfefb:0x29eda87
  430e75:	jbe    0x430e3c
  430e77:	out    0x2f,al
  430e79:	jno    0x430ef7
  430e7b:	imul   DWORD PTR [edx+0x69]
  430e7e:	add    bh,BYTE PTR [ebp-0x10]
  430e81:	jbe    0x430e42
  430e83:	mov    ds:0xc27c6914,al
  430e88:	add    al,BYTE PTR [edi*2+0x25007979]
  430e8f:	cmp    edi,esp
  430e91:	dec    ebx
  430e92:	push   ebp
  430e93:	sub    dl,bh
  430e95:	(bad)  
  430e96:	sbb    eax,0x1cde032e
  430e9b:	dec    esp
  430e9c:	(bad)  
  430e9d:	call   0xe5858640
  430ea2:	into   
  430ea3:	sub    BYTE PTR [esi*8-0x3f003d75],dl
  430eaa:	ret    0xfc60
  430ead:	add    bl,bl
  430eaf:	sub    eax,0x1a8889ba
  430eb4:	push   ss
  430eb5:	inc    eax
  430eb6:	aaa    
  430eb7:	(bad)  
  430eb8:	cmc    
  430eb9:	jne    0x430e8d
  430ebb:	repz ds and al,0xab
  430ebf:	xor    DWORD PTR [esi+0x24],0x8206fcbb
  430ec6:	xchg   ecx,esi
  430ec8:	cmc    
  430ec9:	call   FWORD PTR ds:0x84fffaaa
  430ecf:	sub    al,0xba
  430ed1:	sbb    DWORD PTR [edi+edi*8],0x6
  430ed5:	mov    ebp,ds
  430ed7:	(bad)  
  430ed8:	(bad)  
  430ed9:	(bad)  
  430eda:	inc    DWORD PTR [edx+0x1e]
  430edd:	sbb    al,0xef
  430edf:	outs   dx,DWORD PTR ds:[esi]
  430ee0:	or     al,BYTE PTR [ebp-0x7d06952e]
  430ee6:	mov    dl,0x22
  430ee8:	mov    edx,DWORD PTR [esi+0x40]
  430eeb:	or     DWORD PTR [ebx-0x35],eax
  430eee:	fcomi  st,st(1)
  430ef0:	pusha  
  430ef1:	add    DWORD PTR [eax],0xffffffec
  430ef4:	cli    
  430ef5:	push   es
  430ef6:	mov    bh,0x8c
  430ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ef9:	jbe    0x430f1f
  430efb:	dec    esp
  430efc:	jp     0x430ecf
  430efe:	je     0x430f40
  430f00:	push   ss
  430f01:	sbb    BYTE PTR [ebp+0x53],dh
  430f04:	jl     0x430f3e
  430f06:	add    BYTE PTR [eax],al
  430f08:	das    
  430f09:	pusha  
  430f0a:	cmp    ebp,DWORD PTR [eax]
  430f0c:	sbb    eax,0xa3ef7719
  430f11:	ds and al,0xf0
  430f14:	jmp    FWORD PTR [esi+0x3bbbf7df]
  430f1a:	add    BYTE PTR [eax],al
  430f1c:	mov    eax,ds:0x589f76fa
  430f21:	cmp    edi,0x50
  430f24:	cmc    
  430f25:	dec    ecx
  430f26:	lea    ebx,[ebp+0x2817e7cf]
  430f2c:	(bad)  
  430f2e:	adc    eax,ebp
  430f30:	push   es
  430f31:	pop    edi
  430f32:	cld    
  430f33:	retf   0xaaaf
  430f36:	and    esp,DWORD PTR [ebp-0x5f8bc16a]
  430f3c:	pop    ebp
  430f3d:	ret    0xa323
  430f40:	sbb    bh,BYTE PTR [ecx+0x19]
  430f43:	push   ss
  430f44:	psubsb mm3,QWORD PTR [ebx]
  430f47:	mov    ch,0xa2
  430f49:	push   0x2efc9afc
  430f4e:	inc    ebx
  430f4f:	mov    ecx,0xc17b7e3a
  430f54:	adc    edi,esi
  430f56:	je     0x430f58
  430f58:	mov    al,0xf3
  430f5a:	jmp    0x4a83:0xfd38c17b
  430f61:	pushf  
  430f62:	sub    eax,0xe25e16fa
  430f67:	movhps xmm3,QWORD PTR [edi+0xe]
  430f6b:	mov    DWORD PTR [eax+eiz*4+0x6e2613c7],ebx
  430f72:	loop   0x430f87
  430f74:	adc    al,0x32
  430f76:	outs   dx,BYTE PTR ds:[esi]
  430f77:	add    dl,ah
  430f79:	mov    ecx,ecx
  430f7b:	xchg   BYTE PTR [eax+0x77],al
  430f7e:	inc    esp
  430f7f:	setge  BYTE PTR [ecx]
  430f82:	mov    esi,0x2e0528a1
  430f87:	jae    0x431002
  430f89:	sub    DWORD PTR [esi],edx
  430f8b:	arpl   WORD PTR [ebx-0x9],cx
  430f8e:	sub    eax,0x2810dd2d
  430f93:	push   esp
  430f94:	push   ss
  430f95:	not    bl
  430f97:	dec    esi
  430f98:	push   ss
  430f99:	adc    bh,BYTE PTR [edx+0x44]
  430f9c:	test   eax,0xfaff7544
  430fa1:	add    bl,ah
  430fa3:	leave  
  430fa4:	in     al,0x23
  430fa6:	jo     0x430f6f
  430fa8:	out    0x7e,al
  430faa:	test   al,0xb7
  430fac:	sahf   
  430fad:	out    dx,eax
  430fae:	test   al,0x1d
  430fb0:	push   ecx
  430fb1:	retf   
  430fb2:	push   eax
  430fb3:	hlt    
  430fb4:	retf   
  430fb5:	and    ebp,eax
  430fb7:	sbb    ebp,DWORD PTR [edx+0x31b354]
  430fbd:	and    DWORD PTR [ebx+0x34],eax
  430fc0:	add    bh,BYTE PTR [ebx]
  430fc2:	add    DWORD PTR [edx+0x201aa6b7],esp
  430fc8:	hlt    
  430fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fca:	and    ebx,DWORD PTR [ebp+0x2c]
  430fcd:	add    DWORD PTR [eax],0xffffffd6
  430fd0:	xor    BYTE PTR [ecx],bl
  430fd2:	and    edi,ebx
  430fd4:	pop    es
  430fd5:	mov    edx,0x1bd78d42
  430fda:	call   FWORD PTR [ebp-0x7c]
  430fdd:	es add ecx,ebp
  430fe0:	add    ecx,edi
  430fe2:	shr    BYTE PTR [edi-0x39],cl
  430fe5:	data16 ja 0x430f8b
  430fe8:	jmp    DWORD PTR [edx+esi*8]
  430feb:	fild   DWORD PTR [ebx]
  430fed:	popf   
  430fee:	int3   
  430fef:	pop    ebp
  430ff0:	inc    ecx
  430ff1:	cmp    bl,BYTE PTR [edx+0x7e4731b0]
  430ff7:	sub    BYTE PTR [eax+0x7cf52379],bh
  430ffd:	jmp    0xb247cefc
  431002:	inc    ecx
  431003:	lock int3 
  431005:	inc    edx
  431006:	sbb    eax,0x30
  431009:	daa    
  43100a:	and    ebx,DWORD PTR [ebx-0x732dcd1]
  431010:	fnstcw WORD PTR [eax-0x2a]
  431013:	mov    al,ds:0x6d19d77c
  431018:	mov    ebp,0x6cff2304
  43101d:	popa   
  43101e:	scas   al,BYTE PTR es:[edi]
  43101f:	or     esp,DWORD PTR [edx+0x0]
  431022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431023:	pushf  
  431024:	add    BYTE PTR [edx+0x5d],dh
  431027:	sub    BYTE PTR [edi],cl
  431029:	sbb    bl,BYTE PTR [ecx+0x1c]
  43102c:	std    
  43102d:	popa   
  43102e:	gs leave 
  431030:	pop    edx
  431031:	xor    dl,BYTE PTR [esi-0xc16f49b]
  431037:	jnp    0x431024
  431039:	sbb    BYTE PTR [eax+0x23],al
  43103c:	test   DWORD PTR [ecx+edi*4],esp
  43103f:	rcl    BYTE PTR [edx+0x62],1
  431042:	inc    esi
  431043:	ja     0x431045
  431045:	jmp    0xe5a8dfe8
  43104a:	(bad)  
  43104b:	jne    0x4310a1
  43104d:	xchg   ebp,eax
  43104e:	mov    dh,0x86
  431050:	inc    ebp
  431051:	(bad)  
  431052:	int    0x85
  431054:	mov    edi,0x7ca193fd
  431059:	jge    0x430ff9
  43105b:	xchg   esi,eax
  43105c:	sub    ch,BYTE PTR [eax+0x4b]
  43105f:	push   ds
  431060:	jmp    esp
  431062:	(bad)  
  431063:	and    DWORD PTR [ecx+0xf],esi
  431066:	lods   al,BYTE PTR ds:[esi]
  431067:	xchg   esi,eax
  431068:	sti    
  431069:	push   ecx
  43106a:	pop    es
  43106b:	outs   dx,DWORD PTR ds:[esi]
  43106c:	cld    
  43106d:	push   esi
  43106e:	fnstenv [ecx]
  431070:	test   BYTE PTR [edi+0xa],dl
  431073:	cli    
  431074:	xchg   BYTE PTR [edx+edi*2+0x65f14c88],ch
  43107b:	mov    ecx,edx
  43107d:	inc    ecx
  43107e:	push   esp
  43107f:	enter  0x2ef9,0x1a
  431083:	bound  esi,QWORD PTR [edi+esi*8+0x0]
  431087:	inc    esp
  431088:	sub    ah,BYTE PTR [esi+0x4c]
  43108b:	jae    0x4310a9
  43108d:	sub    eax,0xc8bbed29
  431092:	sub    ebx,DWORD PTR [edx+0x39008702]
  431098:	xacquire xchg DWORD PTR [ebx-0x8],eax
  43109c:	pushf  
  43109d:	sub    DWORD PTR [eax-0x741700fb],esi
  4310a3:	add    al,0xd3
  4310a5:	stos   BYTE PTR es:[edi],al
  4310a6:	mov    ebp,?
  4310a8:	add    eax,0x2aa88d00
  4310ad:	add    ch,BYTE PTR [eax-0x4c]
  4310b0:	pop    ebx
  4310b1:	cli    
  4310b2:	call   FWORD PTR [esi+0xa]
  4310b5:	pop    eax
  4310b6:	call   0x3b6dae
  4310bb:	cmp    dh,al
  4310bd:	add    eax,0xfec50495
  4310c2:	dec    DWORD PTR [ecx+0x1083e69d]
  4310c8:	dec    edi
  4310c9:	add    eax,0xffffffb3
  4310cc:	mov    esi,eax
  4310ce:	add    BYTE PTR [ebp+eax*1-0x768c097b],al
  4310d5:	mov    esi,0x81057400
  4310da:	cmp    BYTE PTR [ecx+0x78503934],bh
  4310e0:	or     ecx,DWORD PTR [ebp+0x6437b04d]
  4310e6:	add    cl,dh
  4310e8:	inc    ebx
  4310e9:	rcl    BYTE PTR [ecx+0x0],cl
  4310ec:	int3   
  4310ed:	add    cl,dl
  4310ef:	push   ebx
  4310f1:	mov    edi,DWORD PTR [edx-0x984c48b]
  4310f7:	jmp    0x431714
  4310fc:	mov    bh,0xed
  4310fe:	add    eax,0xfa7bcb0f
  431103:	inc    DWORD PTR [eax+esi*8+0x1e]
  431107:	popf   
  431108:	sub    ah,dl
  43110a:	cmp    al,0x0
  43110c:	scas   eax,DWORD PTR es:[edi]
  43110d:	inc    esi
  43110e:	add    ah,BYTE PTR ds:0xfba8789d
  431114:	mov    esi,0x5d86aa04
  431119:	das    
  43111a:	adc    eax,0xfe491e78
  43111f:	out    0x73,al
  431121:	sub    BYTE PTR [ecx+0x3f],dh
  431124:	lea    eax,[edx+ebx*4]
  431127:	or     dh,BYTE PTR [edx]
  431129:	jmp    0x431138
  43112b:	out    0x75,eax
  43112d:	xor    BYTE PTR [ecx+0x47],dh
  431130:	test   eax,0x4efd4341
  431135:	sub    ecx,edi
  431137:	mov    dl,0x5d
  431139:	aas    
  43113a:	adc    eax,0x436a1658
  43113f:	out    0x9e,eax
  431141:	lods   al,BYTE PTR ds:[esi]
  431142:	ss stc 
  431144:	(bad)  
  431145:	(bad)  
  431146:	jle    0x431151
  431148:	stos   BYTE PTR es:[edi],al
  431149:	jae    0x431105
  43114b:	icebp  
  43114c:	pop    ebp
  43114d:	das    
  43114e:	add    dh,BYTE PTR [eax+eax*1-0x5d]
  431152:	sub    BYTE PTR [ecx+0x3f],dh
  431155:	stos   DWORD PTR es:[edi],eax
  431156:	test   ah,ch
  431158:	jle    0x4311af
  43115a:	mov    DWORD PTR ds:0xbed89238,edx
  431160:	adc    eax,0xb2f95d86
  431165:	fisttp QWORD PTR [ebp+0x15]
  431168:	sub    al,0x9a
  43116a:	xor    BYTE PTR [esi+0x7bd19e17],0x9
  431171:	inc    esi
  431172:	cmovae eax,DWORD PTR [ecx]
  431175:	mov    ch,0x5f
  431177:	mov    esi,0xf92737ff
  43117c:	mov    dl,0xdd
  43117e:	sub    eax,0x3a46cf31
  431183:	stc    
  431184:	mov    dl,0xdd
  431186:	cmp    eax,0x2a1e743
  43118b:	push   cs
  43118c:	push   es
  43118d:	xchg   esi,eax
  43118e:	push   edi
  43118f:	test   al,0xff
  431191:	(bad)  [edx]
  431193:	jmp    0x431117
  431195:	repnz add DWORD PTR [eax+0x5],esp
  431199:	mov    edx,0x78422f42
  43119e:	sbb    eax,0x2083010d
  4311a3:	nop
  4311a4:	cmp    al,0x33
  4311a6:	jae    0x431214
  4311a8:	xor    DWORD PTR [eax-0x5fcd94fe],ebp
  4311ae:	add    bh,BYTE PTR [ecx+0x32]
  4311b1:	cwde   
  4311b2:	add    bh,BYTE PTR [ebx+0x32]
  4311b5:	add    BYTE PTR [eax-0x77cd92fe],dl
  4311bb:	add    ch,BYTE PTR [esi+0x32]
  4311be:	add    BYTE PTR [edx],0x7f
  4311c1:	xor    bh,BYTE PTR [eax+0x2]
  4311c4:	sahf   
  4311c5:	xor    dh,BYTE PTR [eax+0x2]
  4311c8:	cwde   
  4311c9:	xor    ch,BYTE PTR [eax+0x2]
  4311cc:	mov    edx,0x6e026032
  4311d1:	xor    bl,al
  4311d3:	add    cl,BYTE PTR [eax-0x7ffd2fce]
  4311d9:	xor    cl,al
  4311db:	add    bh,BYTE PTR [eax+0x32]
  4311de:	rol    BYTE PTR [edx],0x7f
  4311e1:	xor    bh,BYTE PTR [eax-0x4fcdc3fe]
  4311e7:	add    ah,BYTE PTR [esi+0x2d]
  4311ea:	mov    dl,BYTE PTR [ebx+ebp*8-0x2d5f9880]
  4311f1:	clc    
  4311f2:	sub    DWORD PTR [edi+0x1f572cc8],eax
  4311f8:	gs sub al,0xe7
  4311fb:	xchg   edi,eax
  4311fc:	in     al,dx
  4311fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4311fe:	sbb    eax,DWORD PTR [edi+0x25]
  431201:	jns    0x431262
  431203:	in     eax,0xff
  431205:	call   0xed3e14a8
  43120a:	sahf   
  43120b:	add    al,BYTE PTR [eax]
  43120d:	call   0xda943afc
  431212:	rcr    BYTE PTR [edx+0x2],1
  431215:	jmp    0xf00:0xe58d029e
  43121c:	jp     0x431244
  43121e:	sub    ebp,DWORD PTR [esi+0x17]
  431221:	or     dh,BYTE PTR [esi]
  431223:	xchg   ebp,eax
  431224:	test   DWORD PTR [edi+0x351edea7],ebp
  43122a:	push   ss
  43122b:	sub    al,0x6
  43122d:	lea    ebx,[ecx-0x62]
  431230:	daa    
  431231:	add    al,0x57
  431233:	aam    0x8d
  431235:	inc    edi
  431236:	(bad)  
  431237:	lds    ecx,FWORD PTR [eax+0x7c]
  43123a:	scas   eax,DWORD PTR es:[edi]
  43123b:	int    0x5e
  43123d:	pop    ecx
  43123e:	stos   BYTE PTR es:[edi],al
  43123f:	clc    
  431240:	xchg   DWORD PTR [ebx],eax
  431242:	fs sub al,0xc9
  431245:	aas    
  431246:	jmp    0x6297722b
  43124b:	mov    dh,BYTE PTR [edx+0x17243e4e]
  431251:	cs test eax,0xe60bc786
  431257:	sub    ebx,DWORD PTR [esi+0x47]
  43125a:	les    ebx,FWORD PTR [esi+0x7a90002]
  431260:	(bad)  
  431261:	sti    
  431262:	mov    ebx,0xa1b208de
  431267:	xchg   edx,ebx
  431269:	int3   
  43126a:	cdq    
  43126b:	push   esp
  43126c:	fdivp  st(7),st
  43126e:	fsub   QWORD PTR [edi]
  431270:	sbb    al,0xbf
  431272:	sbb    eax,0x1ae9b069
  431277:	in     al,0xa3
  431279:	test   BYTE PTR [edx],dh
  43127b:	dec    ecx
  43127c:	or     BYTE PTR [edi+0x2340000],0x0
  431283:	push   ecx
  431285:	sbb    eax,0xdfbfc384
  43128a:	loop   0x4312be
  43128c:	ins    DWORD PTR es:[edi],dx
  43128d:	out    dx,eax
  43128e:	cmc    
  43128f:	cmpps  xmm5,xmm2,0x64
  431293:	add    BYTE PTR [ebx-0x11],dl
  431296:	adc    ecx,DWORD PTR [eax+0x10]
  431299:	inc    edx
  43129a:	cli    
  43129b:	test   BYTE PTR [ebp+edx*2-0x3e3df0f9],dh
  4312a2:	mov    edi,0x4318d4e0
  4312a7:	cld    
  4312a8:	jg     0x4312f1
  4312aa:	or     dh,dh
  4312ac:	xor    al,0xf4
  4312ae:	jg     0x431324
  4312b0:	(bad)  
  4312b1:	sar    BYTE PTR [edx],1
  4312b3:	adc    DWORD PTR [ebx+edx*2+0x19],eax
  4312b7:	mov    al,0xc5
  4312b9:	cld    
  4312ba:	pop    ds
  4312bb:	rdmsr  
  4312bd:	mov    DWORD PTR ds:0xd3c2c8b6,0x706845a
  4312c7:	mov    dh,0xc0
  4312c9:	ret    0x5ace
  4312cc:	je     0x4312d4
  4312ce:	pop    esi
  4312cf:	rcl    DWORD PTR ds:0x4c0b601f,0x19
  4312d6:	lods   eax,DWORD PTR ds:[esi]
  4312d7:	fstp   DWORD PTR [edi]
  4312d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4312da:	sub    al,0xc0
  4312dc:	fidiv  WORD PTR [bp+si]
  4312df:	dec    ebp
  4312e0:	mov    BYTE PTR [ebp+0x8],ch
  4312e3:	test   BYTE PTR [eax],al
  4312e5:	inc    esp
  4312e6:	sbb    DWORD PTR [ebx-0x72fd063f],edx
  4312ec:	add    BYTE PTR [ebp+0x1],dh
  4312ef:	add    bl,ch
  4312f1:	push   0xd10fba9d
  4312f6:	(bad)  
  4312f7:	mov    eax,DWORD PTR [ebx*4-0x62fefb5a]
  4312fe:	sub    esp,DWORD PTR ds:0xce7c4174
  431304:	cli    
  431305:	mov    al,0x13
  431307:	and    eax,0xbe3f7114
  43130c:	push   DWORD PTR [ebx]
  43130e:	repz or al,al
  431311:	sub    al,bl
  431313:	sbb    ch,BYTE PTR [edi]
  431315:	sbb    eax,0x8efff27e
  43131a:	inc    ebx
  43131b:	push   ss
  43131c:	leave  
  43131d:	or     ecx,DWORD PTR [edi+eiz*1]
  431320:	or     cl,BYTE PTR [edx-0x15]
  431323:	popf   
  431324:	test   ch,bl
  431326:	xchg   esi,eax
  431327:	or     DWORD PTR [edi+0x40303b63],eax
  43132d:	(bad)  
  43132e:	stos   DWORD PTR es:[edi],eax
  43132f:	scas   eax,DWORD PTR es:[edi]
  431330:	add    bl,BYTE PTR [esi+edx*8]
  431333:	daa    
  431334:	(bad)  
  431335:	fisubr DWORD PTR [edx]
  431337:	fdivp  st(2),st
  431339:	dec    eax
  43133a:	aaa    
  43133b:	into   
  43133c:	addr16 lahf 
  43133e:	sub    bh,dh
  431340:	push   DWORD PTR [esi+0x5abff469]
  431346:	loopne 0x431384
  431348:	mov    ebp,0xd02ba500
  43134d:	push   edx
  43134e:	push   ss
  43134f:	push   edx
  431350:	jns    0x4313c4
  431352:	sub    eax,0x3017fd6c
  431357:	jmp    0xe800:0xfe8b8503
  43135e:	and    al,cl
  431360:	daa    
  431361:	cli    
  431362:	push   ss
  431363:	popf   
  431364:	push   ss
  431365:	mov    al,ds:0xf1259d63
  43136a:	(bad)  [ebp-0xe]
  43136d:	add    cl,dh
  43136f:	and    ecx,ebp
  431371:	out    0x12,eax
  431373:	add    ecx,DWORD PTR [edi+0x21885728]
  431379:	retf   0x40f4
  43137c:	in     al,dx
  43137d:	add    esi,eax
  43137f:	xchg   DWORD PTR [esp+edx*8],edi
  431382:	shl    DWORD PTR [ecx+ebx*4-0xa014ed6],cl
  431389:	dec    esi
  43138a:	aaa    
  43138b:	xchg   esi,eax
  43138c:	sar    BYTE PTR [esi+0x32],1
  43138f:	sbb    al,0xb3
  431391:	(bad)  
  431393:	xchg   esi,eax
  431394:	clc    
  431395:	sub    dl,BYTE PTR [ecx-0x654fe5f2]
  43139b:	scas   eax,DWORD PTR es:[edi]
  43139c:	mov    ch,0x1b
  43139e:	aam    0x2
  4313a0:	jmp    0xbd562da8
  4313a5:	outs   dx,BYTE PTR ss:[esi]
  4313a7:	fwait
  4313a8:	sub    ah,0x57
  4313ab:	loop   0x431429
  4313ad:	repz add BYTE PTR [eax+0x5ec15bf2],al
  4313b4:	scas   eax,DWORD PTR es:[edi]
  4313b5:	cmp    BYTE PTR [ecx],ch
  4313b7:	mov    cl,0xd6
  4313b9:	bnd ret 
  4313bb:	rol    BYTE PTR [eax+0x40f8ac],cl
  4313c1:	xor    DWORD PTR [edx-0x6d33aeb],esp
  4313c7:	in     al,dx
  4313c8:	ret    
  4313c9:	pop    es
  4313ca:	mov    ds:0xa208cc1b,al
  4313cf:	frstor [ecx]
  4313d1:	loopne 0x431374
  4313d3:	fwait
  4313d4:	inc    ecx
  4313d5:	or     bh,BYTE PTR [ebx-0x24]
  4313d8:	les    ebp,FWORD PTR [ebp-0x3f]
  4313db:	mov    dh,0x89
  4313dd:	sub    bh,BYTE PTR [esp+edi*8+0xef029d9]
  4313e4:	ror    BYTE PTR [esi],0x8
  4313e7:	sub    ah,al
  4313e9:	adc    al,0xd5
  4313eb:	loop   0x431408
  4313ed:	(bad)  
  4313ee:	fstp   TBYTE PTR [edx-0xf]
  4313f1:	aas    
  4313f2:	jmp    0xd34e5310
  4313f7:	lods   eax,DWORD PTR ds:[esi]
  4313f8:	mov    edx,0xaf5f7061
  4313fd:	or     bl,BYTE PTR [edi+0x6261d65c]
  431403:	add    al,0xcf
  431405:	popa   
  431406:	sub    BYTE PTR [esi+0x3],bh
  431409:	(bad)
  43140e:	iret   
  43140f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431410:	rcl    DWORD PTR [ecx+0x6a],0x0
  431414:	(bad)  
  431416:	mov    WORD PTR [edi+0x704fafe2],gs
  43141c:	out    0xb2,eax
  43141e:	cli    
  43141f:	cld    
  431420:	push   cs
  431421:	icebp  
  431422:	aas    
  431423:	jmp    0x704e5341
  431428:	out    0xa6,eax
  43142a:	pop    edx
  43142b:	jb     0x43148c
  43142d:	mov    ecx,0x5ce39056
  431432:	pop    ss
  431433:	jmp    0x392e980b
  431438:	out    dx,al
  431439:	pop    es
  43143a:	mov    bl,0xe8
  43143c:	leave  
  43143d:	dec    esp
  43143e:	jle    0x431411
  431440:	mov    al,ds:0xb600795
  431445:	adc    ecx,DWORD PTR [eax+0x624851c]
  43144b:	push   0xffffff86
  43144d:	lock je 0x43143f
  431450:	daa    
  431451:	mov    dh,0xf7
  431453:	pusha  
  431454:	jmp    0x43146c
  431456:	dec    ebp
  431457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431458:	dec    ebx
  431459:	idiv   dl
  43145b:	adc    al,0xa9
  43145d:	enter  0x1cfa,0x85
  431461:	sbb    eax,0x8eb5e174
  431466:	sti    
  431467:	add    BYTE PTR [ebx],ah
  431469:	imul   esi,edx,0x678e8
  43146f:	add    BYTE PTR ds:0x89000ac0,bh
  431475:	xchg   edi,eax
  431476:	out    0x81,al
  431478:	add    al,dh
  43147a:	adc    edi,edi
  43147c:	inc    DWORD PTR [edi+ebp*1-0x4f]
  431480:	cmp    DWORD PTR fs:[esi],eax
  431483:	add    BYTE PTR [esi+0xb],dl
  431486:	sub    eax,0x6bfb205b
  43148b:	fs je  0x43145a
  43148e:	dec    esp
  43148f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431490:	std    
  431491:	jae    0x431429
  431493:	jmp    0x9e74:0xed267333
  43149a:	mul    BYTE PTR [ebx]
  43149c:	lds    esi,FWORD PTR [ebx+0x7dc029ea]
  4314a2:	imul   ebp,DWORD PTR [edx-0x39],0xfffffffa
  4314a6:	or     eax,0x64044095
  4314ab:	xchg   DWORD PTR [esi+0x38],eax
  4314ae:	xchg   DWORD PTR fs:[esi+0x8],eax
  4314b2:	xchg   edi,eax
  4314b3:	clc    
  4314b4:	test   ebx,esi
  4314b6:	push   0x2241804f
  4314bb:	cli    
  4314bc:	jae    0x431446
  4314be:	jbe    0x431482
  4314c0:	add    BYTE PTR [ebp+eax*1-0x13e2dc18],dh
  4314c7:	cmc    
  4314c8:	mov    esi,esp
  4314ca:	xor    eax,0x74
  4314cd:	xlat   BYTE PTR ds:[ebx]
  4314ce:	std    
  4314cf:	out    dx,eax
  4314d0:	(bad)  
  4314d1:	repz loope 0x4314fd
  4314d4:	sar    bl,0x18
  4314d7:	xchg   edx,eax
  4314d8:	dec    esi
  4314d9:	(bad)  
  4314da:	(bad)  
  4314db:	pop    ebp
  4314dc:	mov    DWORD PTR [eax],eax
  4314de:	mov    edx,0x9d02e156
  4314e3:	cmp    al,0x2c
  4314e5:	mov    BYTE PTR [edx],cl
  4314e7:	cld    
  4314e8:	xor    cl,0xf1
  4314eb:	cmp    BYTE PTR [ebp-0xe],dh
  4314ee:	test   ebp,ebp
  4314f0:	inc    eax
  4314f1:	cli    
  4314f2:	push   0xffffffa7
  4314f4:	inc    ebx
  4314f5:	jae    0x431488
  4314f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314f8:	stos   BYTE PTR es:[edi],al
  4314f9:	outs   dx,DWORD PTR ds:[esi]
  4314fa:	inc    ebp
  4314fb:	stc    
  4314fc:	inc    eax
  4314fd:	cli    
  4314fe:	push   edx
  4314ff:	lahf   
  431500:	inc    ebx
  431501:	je     0x4314af
  431503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431504:	cli    
  431505:	gs pushf 
  431507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431508:	xor    bh,dl
  43150a:	lea    ebx,[esi+edi*1]
  43150d:	pop    edx
  43150e:	shl    DWORD PTR [ebx+edi*1-0x43],cl
  431512:	jge    0x43153f
  431514:	jne    0x431562
  431516:	jge    0x4314ab
  431518:	push   ebx
  431519:	add    BYTE PTR [ebp-0x76381ad5],bl
  43151f:	xor    ch,ah
  431521:	(bad)  
  431522:	xchg   ecx,eax
  431523:	cmp    al,0x77
  431525:	nop
  431526:	aad    0x2a
  431528:	(bad)  
  431529:	jmp    FWORD PTR [edx-0x1ac9d228]
  43152f:	xchg   ebp,eax
  431530:	sti    
  431531:	popa   
  431532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431533:	sbb    ebp,DWORD PTR [ebp+0x16e1160c]
  431539:	or     BYTE PTR [esi],ah
  43153b:	imul   ebx,DWORD PTR [esi+esi*1-0x79024332],0x4504de00
  431546:	or     cl,BYTE PTR [ebx]
  431548:	imul   ebx,DWORD PTR [eax-0x2c5b3b00],0xfffffffa
  43154f:	mov    dl,0x93
  431551:	mov    bh,0x1f
  431553:	adc    eax,0x99e6dfe6
  431558:	popa   
  431559:	mov    edi,0xf2029d23
  43155e:	ins    DWORD PTR es:[edi],dx
  43155f:	(bad)  
  431561:	add    al,BYTE PTR [ebx]
  431563:	pop    esp
  431564:	mov    eax,ds:0xa0b64365
  431569:	pop    edi
  43156a:	mov    esi,0x433a078e
  43156f:	loop   0x43159b
  431571:	(bad)  
  431572:	pop    ebx
  431573:	imul   ebx,DWORD PTR [eax],0x7d92be5f
  431579:	test   al,0xaf
  43157b:	and    eax,0x52fbe384
  431580:	(bad)  
  431581:	sti    
  431582:	rep lods al,BYTE PTR ds:[esi]
  431584:	ret    0xafe8
  431587:	xchg   esp,eax
  431588:	lods   al,BYTE PTR ds:[esi]
  431589:	clc    
  43158a:	es mov cl,0xa
  43158d:	je     0x43154d
  43158f:	fidiv  WORD PTR [edx+0x3eab5239]
  431595:	in     al,0x82
  431597:	mov    eax,ds:0xa4afe906
  43159c:	lods   al,BYTE PTR ds:[esi]
  43159d:	add    al,0x27
  43159f:	mov    DWORD PTR [esi],eax
  4315a1:	ins    BYTE PTR es:[edi],dx
  4315a2:	mov    esi,0x5211b26e
  4315a7:	add    BYTE PTR [ebx+0x7126dc3e],al
  4315ad:	out    dx,al
  4315ae:	outs   dx,BYTE PTR ds:[esi]
  4315af:	shl    BYTE PTR [edx-0x46ec8ce9],0xd4
  4315b6:	icebp  
  4315b7:	scas   eax,DWORD PTR es:[edi]
  4315b8:	mov    esi,0x500da185
  4315bd:	cli    
  4315be:	rcl    ah,1
  4315c0:	fst    DWORD PTR [edi]
  4315c2:	fld    DWORD PTR [ecx+ecx*2-0x61521306]
  4315c9:	shr    DWORD PTR [eax+0x7b079e19],cl
  4315cf:	mov    edi,0xd218a8a
  4315d4:	ret    0xfffd
  4315d7:	shl    BYTE PTR [ecx+0x14aefa3e],0x95
  4315de:	movlps QWORD PTR [ebp-0x7a],xmm6
  4315e2:	inc    edx
  4315e3:	imul   DWORD PTR [esi-0x4f]
  4315e6:	cli    
  4315e7:	mov    edx,0x6a1f8eb8
  4315ec:	mov    ebx,0x9afcfaeb
  4315f1:	mov    ah,0xfa
  4315f3:	call   0x8d9d:0xcd445170
  4315fa:	pop    ds
  4315fb:	push   0xffffffdd
  4315fd:	out    dx,eax
  4315fe:	gs call 0xed2ac772
  431604:	outs   dx,DWORD PTR ds:[esi]
  431605:	sbb    al,0xfa
  431607:	out    0xb1,al
  431609:	mov    ah,0x13
  43160b:	add    BYTE PTR es:[edx+0x7846f90f],bh
  431612:	add    eax,DWORD PTR [eax]
  431614:	jmp    0xbe1093b7
  431619:	sub    BYTE PTR [eax+0x7e93d972],al
  43161f:	mul    DWORD PTR [edi]
  431621:	mov    eax,0x1191e71c
  431626:	sbb    al,0xfa
  431628:	(bad)  
  431629:	shr    BYTE PTR [edx],0xde
  43162c:	xadd   BYTE PTR [esi+eax*4],bl
  431630:	push   es
  431631:	loop   0x4316b2
  431633:	jmp    0x43169d
  431635:	test   DWORD PTR [edi-0x3],eax
  431638:	call   0x494277db
  43163d:	fcom   QWORD PTR [esi]
  43163f:	sub    eax,0xfbbe57ac
  431644:	jo     0x431691
  431646:	aaa    
  431647:	cld    
  431648:	(bad)  
  431649:	jns    0x4315d5
  43164b:	mov    WORD PTR [ebp+0xfa1c83],gs
  431651:	sub    eax,0xebfdd288
  431656:	fld    QWORD PTR [edi-0xa1fff63]
  43165c:	(bad)  
  43165d:	std    
  43165e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43165f:	retf   0x3bfd
  431662:	fild   WORD PTR [edi-0xa22c743]
  431668:	call   DWORD PTR [edx+0x29f8939a]
  43166e:	fcomip st,st(5)
  431670:	data16 add al,ch
  431673:	mov    esi,fs
  431675:	std    
  431676:	jmp    0x431656
  431678:	pusha  
  431679:	mov    ecx,cs
  43167b:	fsincos 
  43167d:	dec    ebx
  43167f:	ja     0x431607
  431681:	test   DWORD PTR [eax+0x62fff5dc],eax
  431687:	mov    fs,WORD PTR [ebx-0xa211640]
  43168d:	data16 fsubr DWORD PTR [esi+esi*4-0x69212403]
  431695:	pop    ecx
  431697:	sar    ebx,1
  431699:	jmp    FWORD PTR [ebx-0x66]
  43169c:	inc    ebx
  43169d:	add    al,0x7d
  43169f:	xchg   esp,eax
  4316a0:	loop   0x43169f
  4316a2:	mov    ebx,0x458bde
  4316a7:	xlat   BYTE PTR ds:[ebx]
  4316a8:	xor    DWORD PTR [eax],0xffffffa9
  4316ab:	fdivrp st(5),st
  4316ad:	add    DWORD PTR [ecx+eax*1],eax
  4316b0:	add    BYTE PTR [ecx-0x41a7f],cl
  4316b6:	jmp    0x431645
  4316b8:	cmp    bh,ah
  4316ba:	sbb    al,0x52
  4316bc:	pop    ss
  4316bd:	inc    eax
  4316be:	les    ebx,FWORD PTR [eax-0x1e461b7d]
  4316c4:	cmc    
  4316c5:	call   ecx
  4316c7:	add    eax,0x2b9d400a
  4316cc:	mov    DWORD PTR [ecx+edi*4-0x8],ecx
  4316d0:	push   eax
  4316d1:	out    0x88,eax
  4316d3:	sub    edi,esi
  4316d5:	inc    DWORD PTR [eax]
  4316d7:	aam    0x68
  4316d9:	mov    bh,dl
  4316db:	dec    eax
  4316dc:	mov    al,ds:0xf4845c2f
  4316e1:	push   ds
  4316e2:	cli    
  4316e3:	xchg   edx,eax
  4316e4:	dec    edi
  4316e5:	dec    edi
  4316e6:	retf   
  4316e7:	pop    ecx
  4316e8:	addr16 dec edi
  4316ea:	retf   
  4316eb:	push   ecx
  4316ec:	xor    BYTE PTR [edi],cl
  4316ee:	add    BYTE PTR ds:0x9e7503e8,bh
  4316f4:	imul   eax,DWORD PTR [ebx],0x84f7400
  4316fa:	add    BYTE PTR [ebp+0x26511ea0],bl
  431700:	cdq    
  431701:	fcmovb st,st(0)
  431703:	leave  
  431704:	adc    al,0x87
  431706:	icebp  
  431707:	rcr    DWORD PTR [eax],1
  431709:	mov    cl,0x86
  43170b:	inc    edx
  43170c:	mov    eax,ds:0xa38d85fc
  431711:	sti    
  431712:	dec    ecx
  431713:	and    eax,0x2040be3a
  431718:	int    0x98
  43171a:	lock (bad) 
  43171c:	ins    DWORD PTR es:[edi],dx
  43171d:	inc    ecx
  43171e:	retf   
  43171f:	jmp    0xe20e671a
  431724:	into   
  431725:	dec    edi
  431726:	retf   
  431727:	(bad)  
  431729:	dec    edi
  43172a:	retf   
  43172b:	rcr    DWORD PTR [edi+0x1726541e],1
  431731:	mov    bl,0x86
  431733:	dec    eax
  431734:	adc    esi,DWORD PTR [ebp+0x1c3fe586]
  43173a:	jno    0x43173c
  43173c:	jae    0x4316de
  43173e:	ror    BYTE PTR [ebx],1
  431740:	sub    BYTE PTR [edi],bl
  431742:	or     al,0x4f
  431744:	and    al,0x2
  431746:	sub    al,0x20
  431748:	ins    BYTE PTR es:[edi],dx
  431749:	sub    ebp,esp
  43174b:	nop
  43174c:	push   ebp
  43174d:	add    bl,BYTE PTR [esi-0x68]
  431750:	mov    dh,0x88
  431752:	scas   al,BYTE PTR es:[edi]
  431753:	fisubr WORD PTR [edi-0x16ef574]
  431759:	fucomp st(0)
  43175b:	add    ebx,DWORD PTR [ebp-0x512fa1fe]
  431761:	scas   eax,DWORD PTR es:[edi]
  431762:	adc    dh,BYTE PTR [ebp-0x79075169]
  431768:	pop    esi
  431769:	pop    es
  43176a:	fs inc ebx
  43176c:	add    al,0x1
  43176e:	pop    esi
  43176f:	inc    ecx
  431770:	jnp    0x431701
  431772:	(bad)  
  431774:	outs   dx,DWORD PTR ds:[esi]
  431775:	lea    ecx,[ecx+0x6e06d98e]
  43177b:	mov    eax,0x8e77879a
  431780:	pop    edi
  431781:	fmul   DWORD PTR [ecx+0x2f7db797]
  431787:	xchg   edi,eax
  431788:	mov    bl,0x87
  43178a:	sub    eax,0x5e7357ee
  43178f:	sti    
  431790:	and    bh,ch
  431792:	out    0x8b,eax
  431794:	xchg   esi,eax
  431795:	add    DWORD PTR [ebx+0x63c29a8b],esi
  43179b:	sbb    DWORD PTR [ecx+0xd05d12],ebp
  4317a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4317a2:	xchg   DWORD PTR [ebx-0x22e645f5],edx
  4317a8:	sbb    eax,0xbeba5e8f
  4317ad:	xchg   DWORD PTR [bp+di],ecx
  4317b0:	sar    BYTE PTR [ebx],0x47
  4317b3:	sbb    al,0x4f
  4317b5:	out    0x46,al
  4317b7:	xor    al,0x4f
  4317b9:	(bad)  
  4317ba:	inc    esi
  4317bb:	sub    al,0x4f
  4317bd:	(bad)  
  4317be:	inc    esi
  4317bf:	jmp    DWORD PTR [ecx+0x7f]
  4317c2:	scas   al,BYTE PTR es:[edi]
  4317c3:	xchg   ch,bh
  4317c5:	push   ds
  4317c6:	sub    bh,bh
  4317c8:	out    0x9e,eax
  4317ca:	add    cl,BYTE PTR [edi+0x72]
  4317cd:	add    bh,ah
  4317cf:	push   edx
  4317d0:	bound  ebx,QWORD PTR [edx]
  4317d2:	or     BYTE PTR [ebp-0x7b23f54e],al
  4317d8:	mov    BYTE PTR ds:0xb2d4fae0,0xf1
  4317df:	aas    
  4317e0:	jmp    0xe9ab2b2d
  4317e5:	inc    eax
  4317e6:	adc    ebp,DWORD PTR [eax-0x17]
  4317e9:	cmp    BYTE PTR [ebx],dl
  4317eb:	shr    ecx,0x84
  4317ee:	adc    edi,edx
  4317f0:	jmp    0x8f3c38bb
  4317f5:	mov    esp,0x5dddc394
  4317fa:	lods   al,BYTE PTR ds:[esi]
  4317fb:	xchg   BYTE PTR [edx+eiz*1+0x32625154],al
  431802:	add    eax,DWORD PTR [ebp+0x1370077]
  431808:	jg     0x4317ee
  43180a:	push   edx
  43180b:	adc    esi,DWORD PTR [ebx+0x4]
  43180e:	jl     0x4317fe
  431810:	sub    edi,edi
  431812:	pop    esi
  431813:	adc    ebp,DWORD PTR [eax-0x17]
  431816:	add    BYTE PTR [ebx],dl
  431818:	push   0x6812f8e9
  43181d:	jmp    0xe9572bf7
  431822:	sahf   
  431823:	add    ch,al
  431825:	je     0x4317e6
  431827:	sbb    dl,bh
  431829:	push   0x55
  43182b:	out    dx,eax
  43182c:	pop    ecx
  43182d:	mov    esi,0xb4e47c41
  431832:	popa   
  431833:	xchg   esp,eax
  431834:	cli    
  431835:	jmp    0x43183f
  431837:	cmovp  eax,DWORD PTR [eax]
  43183a:	repz xchg ecx,eax
  43183c:	clc    
  43183d:	add    ebx,DWORD PTR [edi-0x3b0bbc37]
  431843:	(bad)  
  431844:	(bad)  
  431845:	(bad)  
  431846:	cmp    eax,0x4189f653
  43184b:	test   BYTE PTR [ebx-0x14b65],0xff
  431852:	aas    
  431853:	retf   0xc321
  431856:	xchg   edi,eax
  431857:	int3   
  431858:	in     eax,dx
  431859:	div    BYTE PTR [ebp+edi*2-0xe]
  43185d:	or     BYTE PTR [ebx+0x17],ch
  431860:	add    DWORD PTR [ebp+0x6c],0xb4144b7f
  431867:	push   ebp
  431868:	push   eax
  431869:	push   ebx
  43186a:	add    BYTE PTR [edi],cl
  43186c:	mov    ebx,0xe322c1e2
  431871:	cmc    
  431872:	or     DWORD PTR [eax+0x16],0xffffffe7
  431876:	sahf   
  431877:	test   DWORD PTR [esi],eax
  431879:	add    BYTE PTR [ebx-0x1730f177],cl
  43187f:	jae    0x431814
  431881:	rol    BYTE PTR [ebx],0x7
  431884:	jg     0x431870
  431886:	push   esi
  431887:	mov    bh,0x58
  431889:	cmc    
  43188a:	push   ebp
  43188b:	dec    eax
  43188c:	xchg   DWORD PTR [esi+0x78c5b90c],edi
  431892:	or     al,0xbf
  431894:	pop    eax
  431895:	or     cl,BYTE PTR [ebx-0x1746816e]
  43189b:	pop    eax
  43189c:	in     al,0xf5
  43189e:	jmp    FWORD PTR [edi+0x37571248]
  4318a4:	push   esi
  4318a5:	cmc    
  4318a6:	push   ebp
  4318a7:	call   0x794fd732
  4318ac:	lds    edi,FWORD PTR [eax+0xc]
  4318af:	(bad)  
  4318b0:	pop    eax
  4318b1:	or     cl,BYTE PTR [ebx-0x41741763]
  4318b7:	add    eax,0xeafa2064
  4318bc:	xchg   esp,eax
  4318bd:	leave  
  4318be:	pop    ss
  4318bf:	dec    edx
  4318c0:	jns    0x43186f
  4318c2:	cli    
  4318c3:	jo     0x4318f4
  4318c5:	add    ebx,0xffffffa1
  4318c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4318c9:	ds jns 0x431865
  4318cc:	xchg   esp,eax
  4318cd:	mov    eax,0x6116000f
  4318d2:	xchg   cl,al
  4318d4:	lds    eax,FWORD PTR [edi]
  4318d6:	sbb    bh,dl
  4318d8:	mov    dl,0xf4
  4318da:	push   cs
  4318db:	jno    0x431863
  4318dd:	sbb    al,0xbf
  4318df:	pcmpgtd mm6,QWORD PTR [ecx-0x72]
  4318e3:	adc    esp,DWORD PTR [esi]
  4318e5:	out    dx,al
  4318e6:	sti    
  4318e7:	push   ecx
  4318e8:	out    dx,al
  4318e9:	in     eax,dx
  4318ea:	sbb    dl,BYTE PTR [ecx+esi*4-0x64]
  4318ee:	inc    edi
  4318ef:	or     ebx,DWORD PTR [eax]
  4318f1:	pop    ebx
  4318f2:	cdq    
  4318f3:	call   0x1cd585ae
  4318f8:	sahf   
  4318f9:	fdivrp st(3),st
  4318fb:	ss enter 0x9283,0x14
  431900:	push   ss
  431901:	out    0xfb,al
  431903:	push   ecx
  431904:	out    dx,al
  431905:	jmp    0x431921
  431907:	push   esp
  431908:	test   eax,0x200b479c
  43190d:	fistp  DWORD PTR [ecx-0x70e3c919]
  431913:	dec    eax
  431914:	popf   
  431915:	add    al,0xa1
  431917:	pcmpeqd mm0,mm1
  43191a:	xchg   ecx,eax
  43191b:	movhps xmm2,QWORD PTR [esi-0xa]
  43191f:	push   ecx
  431920:	retf   0x196a
  431923:	push   esp
  431924:	mov    cl,0x9c
  431926:	inc    edi
  431927:	or     ebx,DWORD PTR [eax]
  431929:	fistp  DWORD PTR [edx+0x4202c6e8]
  43192f:	xchg   edi,eax
  431930:	lds    edi,FWORD PTR [ebp-0x4d]
  431933:	repz add BYTE PTR [ebx],ah
  431936:	dec    ecx
  431937:	pushf  
  431938:	loop   0x431955
  43193a:	cmp    eax,0x7b604ebd
  43193f:	fwait
  431940:	adc    edx,DWORD PTR [edi+0x2504d458]
  431946:	mov    bh,0xdd
  431948:	push   cs
  431949:	pslld  mm4,QWORD PTR [eax-0x8]
  43194d:	popf   
  43194e:	add    DWORD PTR [ebx-0x7856448],ebx
  431954:	mov    dl,BYTE PTR [ecx+0x12]
  431957:	sub    BYTE PTR [ecx-0x25386920],cl
  43195d:	scas   eax,DWORD PTR es:[edi]
  43195e:	add    BYTE PTR [esi+edx*4-0x59],ch
  431962:	adc    BYTE PTR [ecx+0x381a8b8a],bh
  431968:	pop    ds
  431969:	xchg   edi,eax
  43196a:	adc    ch,ah
  43196c:	mov    al,ds:0x9299cb9a
  431971:	mov    ecx,0xe590e51b
  431976:	add    bh,BYTE PTR [esi-0x75345d60]
  43197c:	xchg   ebp,eax
  43197d:	test   DWORD PTR [ebx+0x2b],edi
  431980:	cld    
  431981:	int3   
  431982:	mov    bh,0x18
  431984:	pop    ds
  431985:	icebp  
  431986:	mul    BYTE PTR [ebp+0x47]
  431989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43198a:	test   DWORD PTR [eax+0x59cc3597],ebp
  431990:	xchg   ecx,eax
  431991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431992:	sbb    esp,ebp
  431994:	nop
  431995:	in     eax,0x2
  431997:	(bad)  
  431998:	mov    al,ds:0xa37ba200
  43199d:	pop    ds
  43199e:	jae    0x4319aa
  4319a0:	mov    edx,0xe0be1bf2
  4319a5:	mov    ch,0x6f
  4319a7:	mov    cl,0xff
  4319a9:	xor    eax,0x257ef455
  4319ae:	call   0x4488:0xb89dbf85
  4319b5:	sbb    eax,0x62f7b727
  4319ba:	fs mov dl,dh
  4319bd:	ret    0xe857
  4319c0:	out    dx,eax
  4319c1:	ret    0x8b89
  4319c4:	es ret 0xa063
  4319c8:	adc    al,0x62
  4319ca:	in     eax,dx
  4319cb:	adc    ecx,DWORD PTR [eax-0x567d29b]
  4319d1:	out    0xa0,al
  4319d3:	jp     0x431990
  4319d5:	ins    BYTE PTR es:[edi],dx
  4319d6:	mov    eax,ds:0xded6fa0b
  4319db:	jp     0x431a29
  4319dd:	aad    0xc4
  4319df:	xor    eax,0x8f14006e
  4319e4:	div    DWORD PTR [edx+0x32]
  4319e7:	dec    DWORD PTR [eax+0x681abd14]
  4319ed:	scas   eax,DWORD PTR es:[edi]
  4319ee:	test   al,0xc
  4319f0:	ss ret 
  4319f2:	sub    al,0xf6
  4319f4:	xchg   BYTE PTR [edx*4+0x11649b7a],ch
  4319fb:	or     al,0xfa
  4319fd:	mov    es,WORD PTR [eax]
  4319ff:	push   ss
  431a00:	jae    0x43198e
  431a02:	jmp    0x293d2688
  431a07:	es mov esi,0xa0d9b2f3
  431a0d:	or     DWORD PTR [edx+0xa],esp
  431a10:	or     eax,DWORD PTR [esi+0x7c7a4edc]
  431a16:	popa   
  431a17:	xchg   cl,cl
  431a19:	stc    
  431a1a:	push   esi
  431a1b:	nop
  431a1c:	mov    BYTE PTR [ecx+edi*8+0x15],dh
  431a20:	(bad)  
  431a21:	repz add BYTE PTR [edi+0x4188ffde],dh
  431a28:	test   DWORD PTR ds:0xf5ed0388,0x838a7fff
  431a32:	js     0x4319ef
  431a34:	in     eax,dx
  431a35:	cmc    
  431a36:	mov    eax,DWORD PTR [eax-0x74010579]
  431a3c:	in     eax,dx
  431a3d:	xchg   DWORD PTR [ebp-0x68],edx
  431a40:	jnp    0x431a85
  431a42:	clc    
  431a43:	outs   dx,DWORD PTR ds:[esi]
  431a44:	int3   
  431a45:	cmp    eax,0xfff5fdad
  431a4b:	retf   
  431a4c:	mov    esi,0x5527ccc6
  431a51:	dec    ebp
  431a52:	mov    eax,DWORD PTR [eax-0x7f74f5e6]
  431a58:	sbb    cl,BYTE PTR [esi]
  431a5a:	mov    edi,DWORD PTR [eax+0x1a]
  431a5d:	adc    dl,BYTE PTR [ebp+0x66]
  431a60:	push   esi
  431a61:	dec    edi
  431a62:	push   ecx
  431a63:	add    BYTE PTR [edx+ebx*1-0xa],cl
  431a67:	inc    edx
  431a68:	test   BYTE PTR [esi-0xb],ah
  431a6b:	xor    eax,0x284
  431a70:	adc    eax,0x7443a002
  431a75:	xor    edi,DWORD PTR [esi+0x21ac089]
  431a7b:	fs std 
  431a7d:	and    al,0xfa
  431a7f:	push   DWORD PTR [edx+eax*1-0x7d]
  431a83:	inc    esp
  431a84:	push   eax
  431a85:	xor    al,BYTE PTR [ecx+0x467b4c58]
  431a8b:	and    al,0x58
  431a8d:	xor    edx,DWORD PTR [edi]
  431a8f:	mov    eax,DWORD PTR [esi+edi*8+0x7a]
  431a93:	(bad)  
  431a94:	mov    edx,0xf08b3175
  431a99:	and    eax,0xb19d832e
  431a9e:	sbb    al,0x73
  431aa0:	mov    eax,ds:0x73710df0
  431aa5:	xchg   esi,eax
  431aa6:	shl    BYTE PTR [ecx+0x28],cl
  431aa9:	jo     0x431afa
  431aab:	(bad)  
  431aad:	and    DWORD PTR [ebp-0x686766b9],eax
  431ab3:	add    ebx,DWORD PTR [ebp-0x6398b592]
  431ab9:	sbb    bh,dh
  431abb:	jmp    DWORD PTR [esi]
  431abd:	pop    ecx
  431abe:	push   es
  431abf:	call   0x41425b
  431ac4:	and    al,0x1b
  431ac6:	(bad)  
  431ac7:	inc    DWORD PTR [eax]
  431ac9:	popf   
  431aca:	nop
  431acb:	mov    edi,0x237c507
  431ad0:	add    BYTE PTR [ebp+0x12634f00],bl
  431ad6:	pop    ds
  431ad7:	(bad)  
  431ad8:	call   FWORD PTR [ebp-0x6a3c7ee5]
  431ade:	aam    0xb5
  431ae0:	push   esi
  431ae1:	fisub  WORD PTR [eax+0x4c9923c7]
  431ae7:	les    eax,FWORD PTR [ebx]
  431ae9:	mov    ds:0x55fffe1b,eax
  431aee:	sbb    bh,dh
  431af0:	call   FWORD PTR [ebp-0x26792d29]
  431af6:	aas    
  431af7:	push   es
  431af8:	xchg   ebp,esp
  431afa:	adc    edx,ecx
  431afc:	mov    DWORD PTR [ebp+0x6afa1a77],0x85678ad6
  431b06:	test   BYTE PTR [ebx-0x11f4a5f5],dl
  431b0c:	cli    
  431b0d:	int    0x2f
  431b0f:	cmp    DWORD PTR es:[edx-0x64],ecx
  431b13:	push   ss
  431b14:	jle    0x431b6f
  431b16:	add    dh,ch
  431b18:	mov    eax,0xc04c623
  431b1d:	sbb    dh,BYTE PTR [esi+0x15f40c]
  431b23:	xchg   ecx,eax
  431b24:	pop    es
  431b25:	popf   
  431b26:	add    ch,cl
  431b28:	inc    esi
  431b29:	jno    0x431ba4
  431b2b:	lods   al,BYTE PTR ds:[esi]
  431b2c:	fild   WORD PTR [eax]
  431b2e:	call   0x29ee:0x8d1aff79
  431b35:	xchg   ebp,eax
  431b36:	stos   BYTE PTR es:[edi],al
  431b37:	or     eax,0xf702eb97
  431b3c:	sbb    DWORD PTR [ebx],ebx
  431b3e:	test   DWORD PTR [eax+0x4048082c],0xb44803e4
  431b48:	cdq    
  431b49:	mov    dh,0x23
  431b4b:	sbb    BYTE PTR [ebp-0x4ad67cbd],dh
  431b51:	xor    eax,0x1ab5147b
  431b56:	(bad)  
  431b57:	xor    bh,BYTE PTR ds:0xa5af54bb
  431b5d:	mov    ?,WORD PTR [eax-0x22712888]
  431b63:	xchg   edi,eax
  431b64:	out    0x2b,eax
  431b66:	aas    
  431b67:	add    ecx,ebp
  431b69:	add    ecx,edx
  431b6b:	inc    edx
  431b6c:	cmc    
  431b6d:	ds ret 
  431b6f:	cmp    ebp,esi
  431b71:	xor    eax,0x21a90bbb
  431b76:	jmp    0xccf9aff2
  431b7b:	mov    bl,0xe
  431b7d:	add    al,0xfb
  431b7f:	add    al,BYTE PTR [ecx]
  431b81:	dec    edi
  431b82:	shr    ax,0xb4
  431b86:	jp     0x431b4e
  431b88:	push   ss
  431b89:	add    al,0x9d
  431b8b:	stos   DWORD PTR es:[edi],eax
  431b8c:	sbb    bh,BYTE PTR [edi+0x1bff3ff1]
  431b92:	add    BYTE PTR [edx],bl
  431b94:	cwde   
  431b95:	and    esp,ecx
  431b97:	or     BYTE PTR [ebx-0xfa52206],dh
  431b9d:	out    0x95,eax
  431b9f:	xchg   esp,eax
  431ba0:	or     dl,bh
  431ba2:	push   0x6a
  431ba4:	neg    DWORD PTR [ebx+ebp*1-0x6a]
  431ba8:	add    cl,ah
  431baa:	xor    eax,0x2dcb3762
  431baf:	pop    edx
  431bb0:	aaa    
  431bb1:	retf   
  431bb2:	bound  esp,QWORD PTR [edi+0x1b3d86b6]
  431bb8:	sbb    BYTE PTR [edi],dl
  431bba:	jb     0x431b99
  431bbc:	add    ecx,DWORD PTR [edi+0x72]
  431bbf:	xor    eax,0x136251f0
  431bc4:	add    al,0x2f
  431bc6:	fldcw  WORD PTR [edi]
  431bc8:	test   DWORD PTR [ecx],eax
  431bca:	das    
  431bcb:	fisttp QWORD PTR [eax]
  431bcd:	jmp    DWORD PTR ds:0xe9000fdd
  431bd3:	sahf   
  431bd4:	add    cl,BYTE PTR [ebp-0x873318e]
  431bda:	out    0xd,eax
  431bdc:	add    eax,0xb9d2f87
  431be1:	leave  
  431be2:	sbb    dl,BYTE PTR [ebp-0x6acb0536]
  431be8:	or     DWORD PTR [ecx-0xb],0x29
  431bec:	mov    cl,0x7
  431bee:	jmp    0xb6a5:0xf30bdce5
  431bf5:	or     esp,DWORD PTR [edx+0x0]
  431bf8:	inc    edx
  431bf9:	sti    
  431bfa:	icebp  
  431bfb:	sub    DWORD PTR [ebp+0x6b640aa0],ebx
  431c01:	add    al,BYTE PTR [eax]
  431c03:	jmp    0x612ada2b
  431c08:	push   eax
  431c09:	pop    es
  431c0a:	xchg   BYTE PTR [eax],al
  431c0c:	jg     0x431c08
  431c0e:	mov    BYTE PTR [ebp+0x2c],al
  431c11:	jge    0x431c56
  431c13:	sbb    BYTE PTR [ebp-0x307c19b5],bh
  431c19:	call   0x1127c8c
  431c1e:	lea    ebx,[ebx-0xbc]
  431c24:	rcl    DWORD PTR [edx],0x51
  431c27:	mov    eax,DWORD PTR [eax]
  431c29:	xchg   ecx,eax
  431c2a:	push   cs
  431c2b:	lea    ecx,[eax-0x6f]
  431c2e:	or     cl,BYTE PTR [ecx+0x81ef39]
  431c34:	jge    0x431c81
  431c36:	repnz test DWORD PTR [ebp-0x4474f18e],edi
  431c3d:	fiadd  WORD PTR [edx]
  431c3f:	call   DWORD PTR [ebx-0x6cba3f17]
  431c45:	inc    DWORD PTR [eax+eax*8+0x43753310]
  431c4c:	dec    edi
  431c4d:	dec    ebx
  431c4e:	repnz mov edi,DWORD PTR [ebp+eax*4-0xe]
  431c53:	dec    BYTE PTR [ecx-0x47]
  431c56:	jp     0x431cd5
  431c58:	mov    bl,0xfe
  431c5a:	jae    0x431c7c
  431c5c:	add    BYTE PTR [edi],ch
  431c5e:	add    DWORD PTR [ebx-0x8],edi
  431c61:	sar    BYTE PTR [edx+0x1],cl
  431c64:	mov    eax,DWORD PTR [edx-0x783104fe]
  431c6a:	cli    
  431c6b:	aaa    
  431c6c:	(bad)  
  431c6d:	mov    ecx,0x804e82fa
  431c72:	ja     0x431cc4
  431c74:	or     BYTE PTR [edi-0x45],dh
  431c77:	sub    DWORD PTR [esi+ecx*4],ecx
  431c7a:	jmp    0x431ccf
  431c7c:	or     al,0xef
  431c7e:	dec    eax
  431c7f:	out    dx,al
  431c80:	pop    edi
  431c81:	mov    dl,0x47
  431c83:	and    ebp,0xc244ce9d
  431c89:	fsubr  DWORD PTR [edi-0x2]
  431c8c:	call   FWORD PTR [ebp+0x26cc2b1b]
  431c92:	fcomip st,st(3)
  431c94:	add    BYTE PTR [ebp+0x3d6c94fc],0xf
  431c9b:	in     eax,0x7e
  431c9d:	js     0x431cf6
  431c9f:	inc    eax
  431ca0:	ds popf 
  431ca2:	sbb    ecx,DWORD PTR [edx+0x4057b51f]
  431ca8:	ds popf 
  431caa:	ret    
  431cab:	cmp    edi,ebp
  431cad:	sbb    bl,BYTE PTR [ebx+eax*4]
  431cb0:	ret    
  431cb1:	cdq    
  431cb2:	sahf   
  431cb3:	ds jae 0x431c50
  431cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431cb7:	ror    DWORD PTR [edi],0x77
  431cba:	sbb    ch,BYTE PTR [ebp+0x405790fa]
  431cc0:	add    BYTE PTR ds:[ebp+0x16073a9c],bl
  431cc7:	pop    edi
  431cc8:	jmp    0x26fa:0x17fa32e7
  431ccf:	push   edi
  431cd0:	jmp    0x1610:0x8a177538
  431cd7:	addr16 push es
  431cd9:	dec    esi
  431cda:	push   0xffffffa4
  431cdc:	xor    eax,DWORD PTR [esi-0x6b1cc1b]
  431ce2:	mov    dl,0x28
  431ce4:	xchg   BYTE PTR [ecx+edx*4-0x5c],al
  431ce8:	enter  0x14f7,0xe4
  431cec:	pop    es
  431ced:	xchg   DWORD PTR [ebx+0x9f91b9c],esp
  431cf3:	adc    eax,0x1ca14985
  431cf8:	inc    ecx
  431cf9:	cs xchg ecx,eax
  431cfb:	adc    edx,DWORD PTR [ecx]
  431cfd:	push   esp
  431cfe:	test   eax,0xa6c66e02
  431d03:	jge    0x431d37
  431d05:	or     al,0x6a
  431d07:	cmp    ch,dl
  431d09:	pop    es
  431d0a:	stos   DWORD PTR es:[edi],eax
  431d0b:	or     DWORD PTR [ebx],esi
  431d0d:	or     BYTE PTR [edx],ah
  431d0f:	mov    edi,0xfada8b78
  431d14:	ins    DWORD PTR es:[edi],dx
  431d15:	das    
  431d16:	inc    edx
  431d17:	mov    esp,0x4c471772
  431d1c:	push   0x17
  431d1e:	aaa    
  431d1f:	or     DWORD PTR [edi],ebx
  431d21:	mov    bl,0xa6
  431d23:	stc    
  431d24:	fs scas eax,DWORD PTR es:[edi]
  431d26:	add    BYTE PTR [edi],ah
  431d28:	or     DWORD PTR [ecx-0x75],edx
  431d2b:	sar    edx,1
  431d2d:	mov    bh,0xae
  431d2f:	and    edi,DWORD PTR ds:0x914a350
  431d35:	cmp    DWORD PTR ds:0x173109bc,ebp
  431d3b:	pop    es
  431d3c:	(bad)  
  431d3e:	in     eax,dx
  431d3f:	mov    edx,0xaee12202
  431d44:	lock test al,0x3
  431d47:	out    0xde,al
  431d49:	mov    ah,0xed
  431d4b:	mov    ds:0x71175e02,al
  431d50:	jge    0x431d66
  431d52:	test   esi,eax
  431d54:	fxam   
  431d56:	add    ebx,DWORD PTR [ebp-0x7c92d79b]
  431d5c:	add    ah,BYTE PTR [eax+0x9]
  431d5f:	stc    
  431d60:	pop    edx
  431d61:	and    eax,0xa0ef2404
  431d66:	ins    BYTE PTR es:[edi],dx
  431d67:	imul   eax,DWORD PTR [edx],0x60
  431d6a:	clc    
  431d6b:	out    dx,al
  431d6c:	pop    edx
  431d6d:	and    eax,0x78ce2404
  431d72:	ins    BYTE PTR es:[edi],dx
  431d73:	rol    DWORD PTR [edx],cl
  431d75:	jo     0x431d4f
  431d77:	ss pop edx
  431d79:	jmp    FWORD PTR [ecx]
  431d7b:	cdq    
  431d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d7d:	mov    edx,esp
  431d7f:	mov    dh,0x5a
  431d81:	ds jmp 0xad4f9997
  431d87:	stc    
  431d88:	enter  0xeff,0x0
  431d8c:	adc    eax,0x5f40a7e7
  431d91:	or     BYTE PTR [ebp+esi*2-0x63],ah
  431d95:	pop    esi
  431d96:	test   al,0x2a
  431d98:	mov    eax,ds:0xbecc8ba4
  431d9d:	pop    edx
  431d9e:	ds jmp 0x856f99bc
  431da4:	ror    eax,0xff
  431da7:	jl     0x431dcc
  431da9:	dec    edi
  431dab:	sbb    BYTE PTR [edi+0x8],0x85
  431daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431db0:	sahf   
  431db1:	addr16 ret 
  431db3:	nop
  431db4:	fild   WORD PTR [edi]
  431db6:	test   DWORD PTR [edx+ecx*1-0x207f3897],esp
  431dbd:	pop    es
  431dbe:	mov    esp,DWORD PTR [esi+eiz*4-0x20af2c99]
  431dc5:	pop    es
  431dc6:	test   DWORD PTR [esi+edi*4+0xb],esp
  431dca:	cli    
  431dcb:	push   ss
  431dcc:	mov    ds:0xdf400ffe,eax
  431dd1:	pop    es
  431dd2:	(bad)  
  431dd3:	call   0x31e42071
  431dd8:	cmp    eax,ecx
  431dda:	dec    DWORD PTR [ecx+0x5a]
  431ddd:	pop    edi
  431dde:	ds jmp 0x92031c5f
  431de4:	fadd   QWORD PTR [edi]
  431de6:	pop    es
  431de7:	in     eax,0x9e
  431de9:	inc    edx
  431dea:	ret    0x62ec
  431ded:	pop    edi
  431dee:	ds jmp 0x45bcf4
  431df4:	add    BYTE PTR [esp+eiz*4-0x1486006],al
  431dfb:	mov    BYTE PTR [ebp-0xa15d4],al
  431e01:	and    eax,0x8443a002
  431e06:	jl     0x431d8b
  431e08:	fmul   QWORD PTR [eax]
  431e0a:	in     eax,dx
  431e0b:	cmc    
  431e0c:	push   0x74
  431e0e:	out    dx,al
  431e0f:	adc    edi,esp
  431e11:	push   ebp
  431e12:	inc    ebx
  431e13:	cli    
  431e14:	addr16 loopne 0x431e22
  431e17:	cmp    al,BYTE PTR [eax]
  431e19:	retf   
  431e1a:	pop    ss
  431e1b:	cli    
  431e1c:	adc    DWORD PTR [esi+edi*8+0x67],esi
  431e20:	or     DWORD PTR [eax+0x3],eax
  431e23:	sar    bh,0x31
  431e26:	pop    es
  431e27:	or     al,0x40
  431e29:	xor    al,0x53
  431e2b:	cmc    
  431e2c:	adc    eax,0x3a1444
  431e31:	mov    ebp,0xc8ccc6c1
  431e36:	mov    edx,0xbab8ccc6
  431e3b:	(bad)  
  431e3c:	int3   
  431e3d:	and    bh,BYTE PTR [edx+0x3e]
  431e40:	and    al,0xd0
  431e42:	stc    
  431e43:	mov    edi,0x4679cc75
  431e48:	and    al,0xe4
  431e4a:	jns    0x431e8a
  431e4c:	and    al,0xf8
  431e4e:	xor    esp,ecx
  431e50:	div    DWORD PTR [ebp+0x8bd279]
  431e56:	add    BYTE PTR [edi],ah
  431e58:	add    dh,bh
  431e5a:	lds    edi,FWORD PTR [ecx-0x16]
  431e5d:	mov    esi,DWORD PTR [edi-0xb]
  431e60:	pop    esi
  431e61:	and    al,0xd4
  431e63:	jns    0x431e27
  431e65:	mov    eax,DWORD PTR [edx]
  431e67:	neg    BYTE PTR [esi+0x24]
  431e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431e6b:	add    ecx,edx
  431e6d:	jmp    0x431e0c
  431e6f:	fmul   DWORD PTR [eax-0x2027d939]
  431e75:	mov    tr5,eax
  431e78:	fisttp WORD PTR [ebx]
  431e7a:	push   ss
  431e7b:	loopne 0x431e5c
  431e7d:	pop    es
  431e7e:	ins    BYTE PTR es:[edi],dx
  431e7f:	inc    ebx
  431e80:	sub    eax,0x2d424cd6
  431e85:	xlat   BYTE PTR ds:[ebx]
  431e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431e87:	push   edx
  431e88:	mov    ebx,esi
  431e8a:	jb     0x431ef5
  431e8c:	xchg   edi,ebp
  431e8e:	push   0xfffffff8
  431e90:	fist   WORD PTR [ebx]
  431e92:	es xchg DWORD PTR fs:[ebx+0x79],eax
  431e97:	sub    ecx,DWORD PTR [ebx]
  431e99:	loope  0x431e39
  431e9b:	push   0xffffff90
  431e9d:	or     DWORD PTR [esi-0x4df42019],eax
  431ea3:	and    edx,DWORD PTR [eax-0x25a889f6]
  431ea9:	pop    es
  431eaa:	mov    bl,0x12
  431eac:	les    esp,FWORD PTR [esi]
  431eae:	fincstp 
  431eb0:	repz push ss
  431eb2:	jno    0x431eb3
  431eb4:	out    dx,eax
  431eb5:	cs div al
  431eb8:	mov    edi,0x20950023
  431ebd:	stos   BYTE PTR es:[edi],al
  431ebe:	and    edx,DWORD PTR [ecx-0x2a0dc73c]
  431ec4:	cwde   
  431ec5:	cmp    bh,bh
  431ec7:	daa    
  431ec8:	rol    BYTE PTR [edi-0x783ce932],cl
  431ece:	(bad)  
  431ecf:	push   ss
  431ed0:	(bad)  
  431ed1:	mov    ah,0xbd
  431ed3:	lods   eax,DWORD PTR ds:[esi]
  431ed4:	sbb    eax,DWORD PTR [edx-0x35]
  431ed7:	loope  0x431f41
  431ed9:	lods   eax,DWORD PTR ds:[esi]
  431eda:	mov    dh,0xad
  431edc:	mov    ebx,0x20b7ffbf
  431ee1:	scas   eax,DWORD PTR es:[edi]
  431ee2:	push   eax
  431ee3:	imul   BYTE PTR [ebx]
  431ee5:	pop    esi
  431ee6:	ds popf 
  431ee8:	add    ch,BYTE PTR [esi-0x40]
  431eeb:	jle    0x431ee3
  431eed:	outs   dx,DWORD PTR ds:[esi]
  431eee:	mov    edi,0x8257b9a
  431ef3:	and    al,0x99
  431ef5:	fdivr  QWORD PTR [eax-0x52df4d13]
  431efb:	jmp    0x9e893cab
  431f00:	add    dh,BYTE PTR [edx-0x63c9c4cc]
  431f06:	inc    eax
  431f07:	data16 ss mov ah,0x40
  431f0b:	push   esi
  431f0c:	lods   al,BYTE PTR ss:[esi]
  431f0e:	inc    eax
  431f0f:	push   esi
  431f10:	ss pop ebp
  431f12:	adc    esi,ecx
  431f14:	jns    0x431f92
  431f16:	jg     0x431ef9
  431f18:	cli    
  431f19:	inc    eax
  431f1a:	shl    eax,0x2
  431f1d:	jmp    0x3c81fcb
  431f22:	std    
  431f23:	pop    es
  431f24:	mov    al,BYTE PTR [edx+0xb]
  431f27:	inc    edi
  431f28:	sbb    eax,ebx
  431f2a:	and    al,0x7
  431f2c:	pop    esp
  431f2d:	and    DWORD PTR [eax],0xffffffb4
  431f30:	fld    DWORD PTR [edx]
  431f32:	jmp    0x371426cf
  431f37:	dec    ebp
  431f38:	fwait
  431f39:	add    ebp,ecx
  431f3b:	add    edi,DWORD PTR [edi-0x35]
  431f3e:	mov    al,0xeb
  431f40:	xchg   edi,eax
  431f41:	outs   dx,BYTE PTR ds:[esi]
  431f42:	es jg  0x431f7d
  431f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f46:	and    eax,0x3435e640
  431f4b:	inc    eax
  431f4c:	(bad)  
  431f4d:	xor    eax,0x35d6402c
  431f52:	pop    ebp
  431f53:	adc    esi,DWORD PTR [ecx+0x79]
  431f56:	cld    
  431f57:	jle    0x431fb2
  431f59:	cli    
  431f5a:	ins    DWORD PTR es:[edi],dx
  431f5b:	mov    esp,0x3310186
  431f60:	push   cs
  431f61:	ret    
  431f62:	(bad)  
  431f63:	fdivr  st(3),st
  431f65:	mov    dl,0xa
  431f67:	or     BYTE PTR ss:[ebx],al
  431f6a:	das    
  431f6b:	mov    ebx,0xf14375e7
  431f70:	mov    dh,0x7d
  431f72:	icebp  
  431f73:	pop    edi
  431f74:	mov    bh,BYTE PTR [ebp+0x7c]
  431f77:	fst    QWORD PTR [ebx]
  431f79:	mov    esp,0x9598020b
  431f7e:	or     BYTE PTR [edx+0x36],dh
  431f81:	cld    
  431f82:	dec    BYTE PTR [edi+0x6d0d6b00]
  431f88:	jecxz  0x431fe2
  431f8a:	test   DWORD PTR [edi+0x6d325bd1],edi
  431f90:	xchg   ecx,eax
  431f91:	dec    ebx
  431f92:	inc    esp
  431f93:	pop    edx
  431f94:	aaa    
  431f95:	or     ah,BYTE PTR [edi-0x63aefc42]
  431f9b:	xlat   BYTE PTR ds:[ebx]
  431f9c:	bound  eax,QWORD PTR ss:[edx+eiz*8]
  431fa0:	inc    ebp
  431fa1:	sahf   
  431fa2:	add    al,BYTE PTR [eax]
  431fa4:	push   0x5
  431fa6:	or     bh,bh
  431fa8:	cs sahf 
  431faa:	add    al,BYTE PTR [eax-0x17]
  431fad:	in     al,0x1b
  431faf:	pusha  
  431fb0:	pop    esi
  431fb1:	(bad)
  431fb5:	pop    esi
  431fb6:	(bad)  
  431fb7:	cmp    al,0x62
  431fb9:	in     eax,0xfb
  431fbb:	es das 
  431fbd:	dec    esi
  431fbe:	mov    dl,0xe7
  431fc0:	pop    ecx
  431fc1:	scas   eax,DWORD PTR es:[edi]
  431fc2:	or     dl,bh
  431fc4:	nop
  431fc5:	dec    ecx
  431fc6:	jg     0x431f87
  431fc8:	mov    ch,0xd3
  431fca:	jl     0x43200b
  431fcc:	int    0x61
  431fce:	sbb    ebx,DWORD PTR [edx]
  431fd0:	push   ss
  431fd1:	scas   al,BYTE PTR es:[edi]
  431fd2:	test   bh,bl
  431fd4:	call   0x103ede40
  431fd9:	scas   eax,DWORD PTR es:[edi]
  431fda:	or     dl,bh
  431fdc:	add    BYTE PTR [edi-0x6fba7ee1],ch
  431fe2:	test   dl,bh
  431fe4:	mov    al,ah
  431fe6:	sub    al,0xc7
  431fe8:	cmp    eax,0xffffb900
  431fed:	mov    edi,0x8bbf8bb3
  431ff2:	cmc    
  431ff3:	mov    ebp,0xb95c6581
  431ff8:	inc    ebx
  431ff9:	cld    
  431ffa:	(bad)
  431fff:	mov    edi,0xff748ae2
  432004:	inc    edx
  432006:	xor    ebx,DWORD PTR [ebx]
  432008:	pop    esi
  432009:	push   ss
  43200a:	(bad)  
  43200b:	dec    bl
  43200d:	int3   
  43200e:	xor    dl,al
  432010:	(bad)  
  432011:	int3   
  432012:	xor    dl,al
  432014:	(bad)  
  432015:	int3   
  432016:	mov    edi,0xbf081e3a
  43201b:	inc    edx
  43201c:	push   ds
  43201d:	adc    BYTE PTR [edi-0x39],cl
  432020:	or     DWORD PTR [eax+ebx*2+0x3],0x3abf0973
  432028:	push   ds
  432029:	add    al,0xab
  43202b:	fistp  QWORD PTR [eax+edx*1-0x1e12b1cc]
  432032:	scas   eax,DWORD PTR es:[edi]
  432033:	(bad)  
  432034:	add    DWORD PTR [eax+ebp*4+0x6],0xa9864ed
  43203c:	stc    
  43203d:	xlat   BYTE PTR ds:[ebx]
  43203e:	(bad)  
  43203f:	cmp    bl,BYTE PTR [esi]
  432041:	or     bl,cl
  432043:	(bad)  
  432045:	ror    BYTE PTR [edi],cl
  432047:	mov    ebp,0xc3dc000a
  43204c:	inc    DWORD PTR [edx+0x0]
  43204f:	hlt    
  432050:	pop    edx
  432051:	cmc    
  432052:	xor    eax,0xfffffef4
  432057:	popf   
  432058:	mov    al,ds:0xa2ad23c7
  43205d:	lahf   
  43205e:	and    ebp,DWORD PTR [ebp-0x52dc6072]
  432064:	xor    BYTE PTR [esi],bl
  432066:	dec    esi
  432067:	push   ebx
  432068:	fs pop ebp
  43206a:	call   DWORD PTR [edx]
  43206c:	pop    eax
  43206d:	(bad)  
  43206e:	xor    BYTE PTR [eax+0x1d],ah
  432071:	rol    esp,cl
  432073:	dec    ebp
  432074:	xchg   edx,eax
  432075:	mov    eax,ds:0xc5f9ae7
  43207a:	xchg   al,bl
  43207c:	iret   
  43207d:	dec    eax
  43207e:	inc    esp
  43207f:	mov    edx,ecx
  432081:	adc    dl,bh
  432083:	xor    BYTE PTR [ebx-0x3e],0xf7
  432087:	sub    BYTE PTR [edi],ch
  432089:	adc    al,0x63
  43208b:	ds in  al,dx
  43208d:	std    
  43208e:	call   FWORD PTR [ebp+0x6d4c7cac]
  432094:	or     BYTE PTR [ebp+0xc],dh
  432097:	popf   
  432098:	jmp    0x432097
  43209a:	push   esp
  43209c:	xor    BYTE PTR [edi+0x2274e659],ch
  4320a2:	pop    esp
  4320a3:	in     al,dx
  4320a4:	lods   al,BYTE PTR ds:[esi]
  4320a5:	jl     0x4320a1
  4320a7:	shl    BYTE PTR [ecx+ebx*1-0x6],1
  4320ab:	test   al,0xd7
  4320ad:	adc    BYTE PTR [ebp+ecx*4+0x68],dh
  4320b1:	xchg   edx,eax
  4320b2:	or     eax,DWORD PTR [eax]
  4320b4:	and    dl,bh
  4320b6:	cmc    
  4320b7:	addr16 pop ebp
  4320b9:	push   ebx
  4320ba:	ret    
  4320bb:	(bad)  
  4320bc:	jp     0x4320a9
  4320be:	pop    ebp
  4320bf:	ds popf 
  4320c1:	push   ebx
  4320c2:	add    al,0xf7
  4320c4:	add    al,BYTE PTR [ecx-0x7c]
  4320c7:	ret    
  4320c8:	xchg   ebp,eax
  4320c9:	xchg   esi,eax
  4320ca:	inc    esp
  4320cb:	cli    
  4320cc:	mov    eax,0x9d3ff7bf
  4320d1:	add    dh,BYTE PTR [ebx]
  4320d3:	aas    
  4320d4:	(bad)  
  4320d5:	into   
  4320d6:	sub    edi,DWORD PTR [edi]
  4320d8:	out    0xce,al
  4320da:	mov    ecx,0xa18dc27c
  4320df:	out    dx,eax
  4320e0:	and    edx,DWORD PTR [ecx-0x29]
  4320e3:	mov    eax,0xccd37b1b
  4320e8:	mov    ch,0x78
  4320ea:	in     eax,0x7c
  4320ec:	mov    ch,0x87
  4320ee:	jmp    0x1bf4:0x278d7196
  4320f5:	push   ecx
  4320f6:	jmp    0x4320ae
  4320f8:	jmp    0xcb01:0x96c1bf53
  4320ff:	jnp    0x4320dd
  432101:	push   ds
  432102:	call   0x3f46b794
  432107:	hlt    
  432108:	popf   
  432109:	sbb    bl,0xdc
  43210c:	hlt    
  43210d:	adc    bl,BYTE PTR [esi-0x3a]
  432110:	xchg   BYTE PTR [ebx],ch
  432112:	pop    ds
  432113:	clc    
  432114:	sbb    edi,DWORD PTR [eax-0x5]
  432117:	add    BYTE PTR [eax],0x5e
  43211a:	push   cs
  43211b:	data16 mov gs,WORD PTR [esi+0x22061402]
  432122:	pop    eax
  432123:	out    dx,eax
  432124:	jl     0x432112
  432126:	adc    bl,BYTE PTR [edx]
  432128:	scas   al,BYTE PTR es:[edi]
  432129:	sti    
  43212a:	int    0x1c
  43212c:	jnp    0x432174
  43212e:	pop    eax
  43212f:	pop    esi
  432130:	cdq    
  432131:	mov    ds:0x1eff5987,al
  432136:	(bad)  
  432137:	out    0x3,eax
  432139:	popf   
  43213a:	lea    ebp,[ecx-0x253de611]
  432140:	xchg   DWORD PTR [edi+0x2],ecx
  432143:	out    0x3,eax
  432145:	outs   dx,BYTE PTR ds:[esi]
  432146:	lea    edi,[edi+0x1017a07]
  43214c:	add    edx,DWORD PTR ds:0xd42e7d2d
  432152:	je     0x432175
  432154:	push   0xffffff92
  432156:	dec    edx
  432157:	je     0x432124
  432159:	pop    ds
  43215a:	cld    
  43215b:	push   ebp
  43215c:	popf   
  43215d:	int    0x7f
  43215f:	stc    
  432160:	xchg   BYTE PTR [edx],dh
  432162:	sbb    DWORD PTR [ebp+0x6],edi
  432165:	sub    BYTE PTR [ebp+0xd],dh
  432168:	push   0xe8fe97aa
  43216d:	sahf   
  43216e:	jbe    0x432175
  432170:	mov    ss,WORD PTR [esi-0x5]
  432173:	stc    
  432174:	out    0x93,al
  432176:	pop    ebx
  432177:	pop    ebx
  432178:	stos   DWORD PTR es:[edi],eax
  432179:	mov    ds:0x298502,al
  43217e:	xchg   ecx,eax
  43217f:	xchg   eax,eax
  432181:	push   ebp
  432182:	pushf  
  432183:	xchg   DWORD PTR [edx+0xd],ecx
  432186:	dec    ecx
  432187:	mov    DWORD PTR [edx+0x11],eax
  43218a:	xor    ebp,edi
  43218c:	iret   
  43218d:	push   0xffffffda
  43218f:	pop    es
  432190:	test   DWORD PTR [edi],edx
  432192:	ins    DWORD PTR es:[edi],dx
  432193:	mov    DWORD PTR [esi],edi
  432195:	sub    eax,0xec74c014
  43219a:	xlat   BYTE PTR ds:[ebx]
  43219b:	dec    ecx
  43219c:	and    al,0x39
  43219e:	(bad)  
  43219f:	inc    ecx
  4321a0:	sub    BYTE PTR [ecx],bh
  4321a2:	call   0x5289:0x46ad7dd2
  4321a9:	fnsave [edi-0x2193bfc3]
  4321af:	jae    0x4321bc
  4321b1:	(bad)  
  4321b2:	call   0x58b571da
  4321b7:	sub    BYTE PTR [eax+0x5e],dl
  4321ba:	rol    DWORD PTR [eax+0x5197e1c4],1
  4321c0:	sbb    al,0x62
  4321c2:	fdiv   QWORD PTR [edi]
  4321c4:	add    DWORD PTR [eax],0xffffffb4
  4321c7:	xchg   edi,eax
  4321c8:	or     al,0x8b
  4321ca:	dec    edx
  4321cb:	call   0xdc85ad19
  4321d0:	dec    ecx
  4321d1:	inc    DWORD PTR [ebp+0x6f08bd84]
  4321d7:	mov    ch,0x15
  4321d9:	mov    eax,DWORD PTR [edx]
  4321db:	fadd   QWORD PTR [edx+0x49b1e04e]
  4321e1:	inc    DWORD PTR [eax]
  4321e3:	test   DWORD PTR [ebp+edi*4+0x7a440708],eax
  4321ea:	push   DWORD PTR ds:0xbc09500
  4321f0:	dec    ecx
  4321f1:	aas    
  4321f2:	sbb    al,0xb4
  4321f4:	add    eax,DWORD PTR [eax]
  4321f6:	add    BYTE PTR [edx-0x42],bl
  4321f9:	jp     0x4321db
  4321fb:	jns    0x4321ac
  4321fd:	mov    ebx,0xf74b8404
  432202:	call   FWORD PTR [ebx+0xd]
  432205:	push   edi
  432206:	pop    ebp
  432207:	or     al,BYTE PTR ss:[eax]
  43220a:	int3   
  43220b:	dec    eax
  43220c:	inc    edx
  43220d:	(bad)
  432210:	jns    0x4321f7
  432212:	mov    eax,edx
  432214:	or     cl,BYTE PTR [ebp-0x75]
  432217:	cmp    al,0xc9
  432219:	clc    
  43221a:	jbe    0x432262
  43221c:	jp     0x432216
  43221e:	test   DWORD PTR [ebx],ebp
  432220:	xchg   edi,eax
  432221:	add    al,0x33
  432223:	hlt    
  432224:	lods   al,BYTE PTR ds:[esi]
  432225:	pop    esp
  432226:	ret    
  432227:	outs   dx,DWORD PTR ds:[esi]
  432228:	inc    esi
  432229:	mov    BYTE PTR [esi+0x40],al
  43222c:	jp     0x43226d
  43222e:	sbb    al,0xbf
  432230:	(bad)  
  432231:	adc    DWORD PTR [ebx+0xf7303ac],eax
  432237:	scas   eax,DWORD PTR es:[edi]
  432238:	add    BYTE PTR [ebx+0x50b5b456],al
  43223e:	push   edx
  43223f:	popf   
  432240:	inc    ecx
  432241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432242:	and    BYTE PTR [ebp+0xd18e9],bl
  432248:	push   ds
  432249:	inc    ecx
  43224a:	(bad)  
  43224b:	je     0x4321da
  43224d:	je     0x432251
  43224f:	xchg   DWORD PTR [ebx-0x7],esp
  432252:	mov    ah,0x4f
  432254:	dec    esp
  432255:	inc    ecx
  432256:	xchg   ebx,eax
  432257:	and    DWORD PTR [ebp-0x72be8917],ebx
  43225d:	je     0x432251
  43225f:	xchg   BYTE PTR [eax-0x1f],bl
  432262:	mov    ah,0x4d
  432264:	ins    DWORD PTR es:[edi],dx
  432265:	add    DWORD PTR ds:0xfd07c2f5,edx
  43226b:	cmp    DWORD PTR [esi],ebx
  43226d:	and    eax,0xe1330100
  432272:	js     0x432236
  432274:	dec    edx
  432275:	mov    es,WORD PTR [eax-0x35]
  432278:	shl    DWORD PTR [ecx+edi*1+0x39b069cb],1
  43227f:	retf   
  432280:	popa   
  432281:	cmp    DWORD PTR [edi+0x5a],esi
  432284:	mov    ecx,0xc1727735
  432289:	adc    BYTE PTR [ebx-0x5fdad98d],dl
  43228f:	xchg   dl,ah
  432291:	pop    es
  432292:	jns    0x432227
  432294:	xchg   esi,eax
  432295:	mov    cl,0xb
  432297:	cli    
  432298:	(bad)
  43229d:	sbb    ah,BYTE PTR [edi-0x4f2c257a]
  4322a3:	mov    WORD PTR [ecx+0x354faef3],ds
  4322a9:	dec    esi
  4322aa:	pop    es
  4322ab:	cli    
  4322ac:	add    BYTE PTR [edx],bh
  4322ae:	jno    0x432264
  4322b0:	dec    ebx
  4322b1:	es sub eax,0xfbca28c8
  4322b7:	(bad)  
  4322b8:	pop    edx
  4322b9:	mov    cl,0x2
  4322bb:	inc    di
  4322bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322be:	sub    edi,DWORD PTR [edx-0x48f0de51]
  4322c4:	cld    
  4322c5:	dec    edi
  4322c6:	inc    esp
  4322c7:	dec    ecx
  4322c8:	xor    ch,0x0
  4322cb:	inc    BYTE PTR [eax-0x78]
  4322ce:	push   es
  4322cf:	push   cs
  4322d0:	inc    ecx
  4322d1:	sti    
  4322d2:	add    dh,dh
  4322d4:	inc    ebx
  4322d5:	pusha  
  4322d6:	fs pusha 
  4322d8:	add    ch,BYTE PTR [eax-0x15]
  4322db:	outs   dx,BYTE PTR ds:[esi]
  4322dc:	mov    esp,0x7e36899a
  4322e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322e2:	pop    ebx
  4322e3:	loop   0x432339
  4322e5:	pop    ebp
  4322e6:	cld    
  4322e7:	data16 sbb al,al
  4322ea:	cmp    BYTE PTR [esi],ah
  4322ec:	xchg   ecx,eax
  4322ed:	sahf   
  4322ee:	sub    DWORD PTR [esi],esp
  4322f0:	sbb    BYTE PTR [eax+0x3cb92730],dh
  4322f6:	mov    ebp,eax
  4322f8:	xchg   esi,eax
  4322f9:	mov    ch,0x1
  4322fb:	(bad)  
  4322fc:	jg     0x43229d
  4322fe:	sbb    DWORD PTR [edi+0x0],0x426b0d9d
  432305:	mov    bh,ch
  432307:	out    0x7e,eax
  432309:	out    dx,eax
  43230a:	jbe    0x4322f2
  43230c:	mov    dl,0x6
  43230e:	mov    ch,BYTE PTR [ecx+0x3ace0007]
  432314:	pop    esi
  432315:	adc    al,0xd8
  432317:	jmp    0xc2e8:0xfd670aaf
  43231e:	into   
  43231f:	mov    DWORD PTR [edx],esi
  432321:	nop
  432322:	rol    esi,cl
  432324:	jmp    0x4322ac
  432326:	push   eax
  432327:	add    DWORD PTR ds:0x13751be9,edx
  43232d:	pop    es
  43232e:	scas   al,BYTE PTR es:[edi]
  43232f:	cmp    ch,BYTE PTR [esi-0x45]
  432332:	retf   0xd
  432335:	aas    
  432336:	lahf   
  432337:	mov    eax,DWORD PTR [ecx+0x21]
  43233a:	push   0xffffffdd
  43233c:	or     DWORD PTR [edi+0x282d0257],ebx
  432342:	cli    
  432343:	aas    
  432344:	push   esp
  432345:	pusha  
  432346:	fiadd  WORD PTR [edi+edi*2+0x53]
  43234a:	lahf   
  43234b:	add    eax,DWORD PTR [eax]
  43234d:	jmp    0xe6c82c65
  432352:	sbb    esi,DWORD PTR [ebp+0x4]
  432355:	jmp    0x2e6da941
  43235a:	xchg   esi,eax
  43235b:	clc    
  43235c:	test   DWORD PTR [esi+0x61],ebp
  43235f:	adc    eax,DWORD PTR [eax]
  432361:	jmp    0xd27f6bb9
  432366:	popa   
  432367:	ins    BYTE PTR es:[edi],dx
  432368:	popa   
  432369:	bound  ebp,QWORD PTR [esi]
  43236b:	imul   edi,ebp,0x6dc2ebfa
  432371:	int3   
  432372:	ror    edx,cl
  432374:	test   DWORD PTR [eax],edx
  432376:	add    BYTE PTR [eax],ah
  432378:	hlt    
  432379:	(bad)  
  43237a:	out    0x9e,eax
  43237c:	add    dh,BYTE PTR [edx-0x14]
  43237f:	jmp    0x43237e
  432381:	add    cl,ch
  432383:	sahf   
  432384:	or     DWORD PTR [ecx+0x11],0x52
  432388:	std    
  432389:	retf   
  43238a:	inc    ebx
  43238b:	cdq    
  43238c:	push   ecx
  43238d:	call   0xfa3bcd47
  432392:	push   0xffffffb2
  432394:	pop    es
  432395:	std    
  432396:	xchg   esi,eax
  432397:	xor    al,0x8b
  432399:	cdq    
  43239a:	test   eax,0x42f9fc6c
  43239f:	loop   0x43232f
  4323a1:	xchg   edx,eax
  4323a2:	jmp    0x43233d
  4323a4:	add    al,BYTE PTR [eax]
  4323a6:	shl    al,cl
  4323a8:	ins    BYTE PTR es:[edi],dx
  4323a9:	and    edx,eax
  4323ab:	scas   al,BYTE PTR es:[edi]
  4323ac:	add    dl,0x0
  4323af:	inc    esi
  4323b0:	pop    es
  4323b1:	add    BYTE PTR [eax],al
  4323b3:	dec    edi
  4323b4:	cmp    BYTE PTR [edx],dh
  4323b6:	icebp  
  4323b7:	sub    al,BYTE PTR [esi]
  4323b9:	xor    ecx,0x5631b8bf
  4323bf:	pop    es
  4323c0:	cmp    BYTE PTR [ebx+0x0],ah
  4323c3:	push   ebp
  4323c4:	sbb    BYTE PTR [edi+0x7a0873f9],cl
  4323ca:	(bad)  
  4323cb:	loopne 0x4323d3
  4323cd:	lods   eax,DWORD PTR ds:[esi]
  4323ce:	rcr    dl,0xff
  4323d1:	call   FWORD PTR [ebp+0x3f]
  4323d4:	inc    ebp
  4323d5:	(bad)
  4323d8:	jge    0x4323bf
  4323da:	push   esi
  4323db:	add    BYTE PTR [ebx],cl
  4323dd:	jge    0x43245b
  4323df:	or     BYTE PTR [edi-0x40],cl
  4323e2:	add    eax,0xf908b3be
  4323e7:	push   DWORD PTR [edi]
  4323e9:	aas    
  4323ea:	repnz cmp edi,DWORD PTR [edx-0x6c]
  4323ee:	or     BYTE PTR [ebx+0x249d73b4],cl
  4323f4:	(bad)  
  4323f5:	(bad)  
  4323f6:	(bad)  
  4323f7:	(bad)  
  4323f8:	aas    
  4323f9:	shr    BYTE PTR [ebp-0x7d],0xac
  4323fd:	jmp    FWORD PTR [eax+edx*1+0x6c]
  432401:	test   edi,esi
  432403:	push   DWORD PTR [ebx+0x7d]
  432406:	ds je  0x432402
  432409:	inc    esi
  43240a:	push   es
  43240b:	test   bl,dh
  43240d:	push   es
  43240e:	add    BYTE PTR [eax],al
  432410:	test   edx,eax
  432412:	gs mov eax,ebx
  432415:	stos   BYTE PTR es:[edi],al
  432416:	adc    BYTE PTR [edi-0x20],0x41
  43241a:	ds je  0x432491
  43241d:	(bad)  
  43241e:	(bad)  
  43241f:	call   ecx
  432421:	add    ch,BYTE PTR [edi]
  432423:	je     0x43245d
  432425:	into   
  432426:	leave  
  432427:	jb     0x4323c6
  432429:	rcr    ah,cl
  43242b:	iret   
  43242c:	adc    al,0x34
  43242e:	nop
  43242f:	mov    dl,ah
  432431:	adc    eax,0xe4b5c879
  432436:	jl     0x43248a
  432438:	gs call 0xb8e30a6c
  43243e:	xor    esp,DWORD PTR [ebp+0x0]
  432441:	popf   
  432442:	adc    BYTE PTR ds:0x15b46f4f,bh
  432448:	sbb    ecx,ecx
  43244a:	jmp    0xbd9dab4c
  43244f:	jbe    0x432493
  432451:	pop    ecx
  432452:	jo     0x432453
  432454:	jle    0x43242f
  432456:	fcom   DWORD PTR ds:0x733e989
  43245c:	xchg   BYTE PTR [edx-0x62f07a98],dl
  432462:	popf   
  432463:	rol    BYTE PTR [esi+0x527cbd62],0x39
  43246a:	pusha  
  43246b:	mov    edi,0xd13a762b
  432470:	add    DWORD PTR [ecx+ebp*8+0x76cd36fd],ebx
  432477:	add    DWORD PTR [esp+edx*8+0x5a870070],0xffffffb1
  43247f:	add    al,0xc1
  432481:	xchg   dh,ch
  432483:	aam    0xbf
  432485:	pop    es
  432486:	in     al,dx
  432487:	mov    bl,0x4f
  432489:	bnd ret 
  43248b:	sub    al,0x36
  43248d:	popf   
  43248e:	jmp    0x43250c
  432490:	dec    edx
  432491:	or     DWORD PTR [ebp+0x0],esi
  432494:	jg     0x4324ef
  432496:	fdiv   QWORD PTR [esi+0x4a]
  432499:	leave  
  43249a:	ret    
  43249b:	mov    esp,0x7ca962fb
  4324a0:	adc    bl,BYTE PTR [esi]
  4324a2:	add    ebx,DWORD PTR ds:0x95200f4
  4324a8:	fs mov eax,0xa892fa47
  4324ae:	jae    0x432472
  4324b0:	sub    DWORD PTR [edi-0x8037205],esp
  4324b6:	sbb    ecx,esi
  4324b8:	repz adc al,0x23
  4324bb:	dec    edx
  4324bc:	adc    edi,DWORD PTR [edi+0x55]
  4324bf:	jnp    0x4324a3
  4324c1:	jl     0x432522
  4324c3:	cmp    ah,dh
  4324c5:	inc    edx
  4324c6:	sti    
  4324c7:	add    al,0x16
  4324c9:	inc    esp
  4324ca:	mov    ebx,0x9e0966d4
  4324cf:	or     DWORD PTR [ebx+0x45],esi
  4324d2:	push   0xbb979a8d
  4324d7:	rcl    DWORD PTR [ebp+0x63ea4fb3],cl
  4324dd:	int3   
  4324de:	loop   0x4324d9
  4324e0:	pop    esi
  4324e1:	rol    BYTE PTR [esi-0x75],0xaa
  4324e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4324e6:	sbb    eax,DWORD PTR [edx]
  4324e8:	data16 aas 
  4324ea:	call   0x5ef9:0xc70c13ea
  4324f1:	clc    
  4324f2:	mov    eax,edx
  4324f4:	rol    dl,0xa2
  4324f7:	outs   dx,DWORD PTR ds:[esi]
  4324f8:	jmp    0xe241c981
  4324fd:	outs   dx,BYTE PTR ds:[esi]
  4324fe:	loop   0x432559
  432500:	mov    DWORD PTR [ebx-0x571a1ce5],edi
  432506:	push   ebx
  432507:	test   ecx,ebx
  432509:	add    BYTE PTR [eax],al
  43250b:	xchg   esi,eax
  43250c:	mov    fs,WORD PTR [edi+0x2387e4a7]
  432512:	add    al,0x9c
  432514:	push   edi
  432515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432516:	cmp    BYTE PTR [esi-0x3a],ah
  432519:	stos   DWORD PTR es:[edi],eax
  43251a:	cmp    BYTE PTR [esi-0x3a],dl
  43251d:	add    BYTE PTR [esi+eiz*8],bl
  432520:	in     eax,dx
  432521:	dec    ebp
  432522:	pop    ss
  432523:	or     al,BYTE PTR [eax+0x2e7f17b]
  432529:	add    cl,ch
  43252b:	sahf   
  43252c:	cmp    ecx,0x3b750262
  432532:	out    0xa1,eax
  432534:	add    al,BYTE PTR [eax]
  432536:	cli    
  432537:	cmp    al,0xe1
  432539:	dec    edi
  43253a:	jl     0x4324de
  43253c:	cld    
  43253d:	test   DWORD PTR [esi],ebp
  43253f:	or     eax,0xe5dd7380
  432544:	add    bh,bh
  432546:	call   0x644b8ee9
  43254b:	fwait
  43254c:	or     al,0x84
  43254e:	mov    eax,ds:0x6400029c
  432553:	popa   
  432554:	or     al,0x84
  432556:	scas   al,BYTE PTR es:[edi]
  432557:	pushf  
  432558:	add    al,BYTE PTR [eax]
  43255a:	push   0xffffff99
  43255c:	clc    
  43255d:	outs   dx,DWORD PTR ds:[esi]
  43255e:	lds    esp,FWORD PTR [edi+0x44]
  432561:	dec    eax
  432562:	bound  edx,QWORD PTR [edx]
  432564:	push   ecx
  432565:	test   DWORD PTR [esi-0x2a8e7fd6],edi
  43256b:	(bad)  
  43256c:	fld    DWORD PTR [ebp+0xbd600a6]
  432572:	mov    dl,0x9d
  432574:	mov    cl,0xf6
  432576:	sub    BYTE PTR cs:[esi-0xd8dabbd],bh
  43257d:	inc    esp
  43257e:	sbb    eax,0x405427fb
  432583:	pusha  
  432584:	pop    edx
  432585:	inc    eax
  432586:	bound  esi,QWORD PTR [edx-0x6e]
  432589:	inc    ebx
  43258a:	bound  esi,QWORD PTR [eax-0x76]
  43258d:	test   WORD PTR [esi],sp
  432590:	and    eax,0xf6154919
  432595:	push   esp
  432596:	inc    eax
  432597:	add    BYTE PTR [ebx+0x49],ch
  43259a:	std    
  43259b:	dec    ecx
  43259c:	out    dx,eax
  43259d:	mov    al,0x41
  43259f:	mov    eax,DWORD PTR [ebx-0x6c74a03e]
  4325a5:	call   0xc084:0xba70895f
  4325ac:	mov    al,0xdf
  4325ae:	or     BYTE PTR [edi-0x68],0x7b
  4325b2:	dec    esi
  4325b3:	sub    al,0x5f
  4325b5:	cmp    al,0x80
  4325b7:	jmp    0x3a5f:0xffffff42
  4325be:	outs   dx,BYTE PTR ds:[esi]
  4325bf:	or     eax,0x39e1a784
  4325c4:	out    0x3,eax
  4325c6:	add    BYTE PTR [ebx+0x4788fbc0],al
  4325cc:	aam    0x84
  4325ce:	jbe    0x432630
  4325d0:	div    eax
  4325d2:	jnp    0x4325f9
  4325d4:	add    BYTE PTR ds:0x6f660004,al
  4325da:	mov    al,0x65
  4325dc:	data16 (bad) 
  4325de:	scas   eax,DWORD PTR es:[edi]
  4325df:	imul   ecx,DWORD PTR [ebx+0xf6343],0x603e79c4
  4325e9:	dec    edi
  4325ea:	dec    eax
  4325eb:	popf   
  4325ec:	push   ss
  4325ed:	mov    ah,0x3
  4325ef:	add    eax,0x88957db7
  4325f4:	or     al,0xf2
  4325f6:	jl     0x432586
  4325f8:	cwde   
  4325f9:	rol    BYTE PTR [ebx],cl
  4325fb:	add    BYTE PTR [ebx+0xf6373],cl
  432601:	mov    ah,0xcf
  432603:	cli    
  432604:	xchg   DWORD PTR [eax+0x249f00d1],eax
  43260a:	call   0x45bf2608
  43260f:	mov    ecx,0x74979d0f
  432614:	jg     0x4325fc
  432616:	sub    DWORD PTR [edx+eiz*2],eax
  432619:	pushf  
  43261a:	pop    ebp
  43261b:	imul   edx,DWORD PTR [edi-0x7302165f],0x19
  432622:	pop    eax
  432623:	ins    BYTE PTR es:[edi],dx
  432624:	add    ebx,DWORD PTR [ebp+0x52c07ee9]
  43262a:	mov    al,ds:0xe9050004
  43262f:	(bad)  
  432630:	call   FWORD PTR [ebp-0x513838f9]
  432636:	aad    0xf4
  432638:	mov    dl,0x0
  43263a:	fs lock dec ebx
  43263d:	sbb    BYTE PTR ds:0x37ffc432,0xde
  432644:	hlt    
  432645:	mov    dl,0xec
  432647:	test   eax,0x97a20216
  43264c:	jle    0x4326cd
  43264e:	push   edi
  43264f:	test   eax,0x6d9c61fd
  432654:	jnp    0x4325dd
  432656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432657:	jmp    0x5d5dad59
  43265c:	jmp    0xde26:0x36fbeaff
  432663:	icebp  
  432664:	jl     0x432605
  432666:	mov    bl,0xe9
  432668:	std    
  432669:	xchg   BYTE PTR [edx-0x77],bl
  43266c:	hlt    
  43266d:	xchg   ebx,eax
  43266e:	(bad)  
  432670:	mov    esp,0x771a1673
  432675:	dec    edx
  432676:	xor    esp,edx
  432678:	jl     0x4326f9
  43267a:	popf   
  43267b:	jmp    0x6c95997d
  432680:	add    eax,0xb59b2cfe
  432685:	mov    dl,ah
  432687:	mov    edi,esi
  432689:	pop    edx
  43268a:	add    DWORD PTR [ebx],eax
  43268c:	outs   dx,BYTE PTR ds:[esi]
  43268d:	lods   al,BYTE PTR ds:[esi]
  43268e:	test   BYTE PTR [ecx+0x461bbc3a],0x2f
  432695:	jns    0x432676
  432697:	cmp    bl,dl
  432699:	dec    ebp
  43269a:	fiadd  WORD PTR [eax]
  43269c:	in     eax,0x30
  43269e:	add    BYTE PTR [ebx-0x76],cl
  4326a1:	sub    al,al
  4326a3:	mov    bl,0xc1
  4326a5:	push   es
  4326a6:	mov    ebp,0xd00a89ee
  4326ab:	and    eax,0xff52f3e
  4326b0:	jmp    DWORD PTR [edi]
  4326b2:	loope  0x43271c
  4326b4:	mov    bh,BYTE PTR [edx]
  4326b6:	les    edi,FWORD PTR [ebx+ecx*4-0x5258561d]
  4326bd:	sub    bl,BYTE PTR [eax+0x792f4623]
  4326c3:	iret   
  4326c4:	or     DWORD PTR ds:[ebx-0x62],edi
  4326c8:	dec    eax
  4326c9:	push   0xffffffb4
  4326cb:	jb     0x432686
  4326cd:	call   0xd445c3d5
  4326d2:	dec    esp
  4326d3:	cmc    
  4326d4:	and    edi,0xa2039d03
  4326da:	xchg   edi,eax
  4326db:	sbb    ecx,DWORD PTR [esi-0x1]
  4326de:	add    BYTE PTR [esi+0x66],cl
  4326e1:	outs   dx,BYTE PTR ds:[esi]
  4326e2:	mov    ah,0x4a
  4326e4:	mov    ebp,0xf5daa3aa
  4326e9:	out    0x3,eax
  4326eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4326ec:	lods   al,BYTE PTR ds:[esi]
  4326ed:	in     eax,0x7a
  4326ef:	pop    edi
  4326f0:	dec    edx
  4326f1:	and    edx,DWORD PTR ss:[edi-0x75fd6254]
  4326f8:	ret    
  4326f9:	(bad)  
  4326fa:	mov    esp,0xbbaa8b4e
  4326ff:	ret    
  432700:	push   edi
  432701:	outs   dx,BYTE PTR ds:[esi]
  432702:	lods   al,BYTE PTR ds:[esi]
  432703:	add    BYTE PTR [esi],dh
  432705:	mov    DWORD PTR [eax],eax
  432707:	scas   al,BYTE PTR es:[edi]
  432708:	data16 jg 0x43270f
  43270b:	jmp    0x432722
  43270d:	mov    DWORD PTR [eax-0x7afd6101],esp
  432713:	jbe    0x43274a
  432715:	adc    BYTE PTR [eax],al
  432717:	jmp    0x60a617cf
  43271c:	mov    ch,0x3c
  43271e:	test   DWORD PTR [esi+0x41],ebx
  432721:	adc    BYTE PTR [eax],al
  432723:	jmp    0xdfdbb23b
  432728:	sahf   
  432729:	add    cl,BYTE PTR [eax-0x650a561b]
  43272f:	dec    ecx
  432730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432731:	add    al,BYTE PTR [eax]
  432733:	out    dx,al
  432734:	add    al,0xc2
  432736:	(bad)  
  432737:	call   0xe9d7aa56
  43273c:	sahf   
  43273d:	add    al,BYTE PTR [ebp+0xffd76]
  432743:	jmp    0x5dc4a555
  432748:	mov    eax,ds:0xe8ba0002
  43274d:	push   ds
  43274e:	lds    esp,FWORD PTR [eax]
  432750:	mov    cs:0xb9ee912,al
  432756:	xchg   esp,eax
  432757:	sub    ebx,DWORD PTR [esi-0x149d8bb8]
  43275d:	hlt    
  43275e:	pop    edx
  43275f:	aad    0x15
  432761:	lock or DWORD PTR [ebp-0x32],esp
  432765:	clc    
  432766:	stc    
  432767:	add    BYTE PTR ss:[edx],ch
  43276a:	dec    ebx
  43276b:	pop    esp
  43276c:	fs loopne 0x4327e8
  43276f:	add    DWORD PTR [edx+0x56],esi
  432772:	cmp    bh,ch
  432774:	daa    
  432775:	mov    dl,0xf3
  432777:	sub    DWORD PTR cs:[edx],ebp
  43277a:	push   ebx
  43277b:	ins    BYTE PTR es:[edi],dx
  43277c:	sbb    DWORD PTR [esi+0x600cf1f],0x51
  432783:	dec    edi
  432784:	call   0x43602d
  432789:	inc    DWORD PTR [edi+0x6c]
  43278c:	mov    DWORD PTR [ebx],edi
  43278e:	push   esp
  43278f:	add    DWORD PTR [edi],0xfffffff7
  432792:	mov    ebx,0xf5d4e810
  432797:	idiv   edi
  432799:	call   DWORD PTR [eax]
  43279b:	jnp    0x432816
  43279d:	je     0x43279f
  43279f:	pop    es
  4327a0:	test   eax,ecx
  4327a2:	add    dh,dh
  4327a4:	inc    DWORD PTR [ebx-0x503fd4a0]
  4327aa:	popa   
  4327ab:	mov    ebx,0x7d62b38b
  4327b0:	leave  
  4327b1:	jl     0x4327ba
  4327b3:	add    DWORD PTR [edi+0x3c],0xfffffffd
  4327b7:	mov    eax,0xc02d46eb
  4327bc:	xor    esi,esi
  4327be:	jl     0x4327b6
  4327c0:	add    al,0x33
  4327c2:	mov    WORD PTR [edx+0x6c58af52],?
  4327c8:	sub    esi,DWORD PTR ds:0x57504e
  4327ce:	sbb    al,0xa9
  4327d0:	cmp    BYTE PTR [eax],al
  4327d2:	hlt    
  4327d3:	test   BYTE PTR [edi],bh
  4327d5:	ins    BYTE PTR es:[edi],dx
  4327d6:	lea    ecx,[eax+0x5c]
  4327d9:	mov    ecx,DWORD PTR [ebx]
  4327db:	jge    0x4327a1
  4327dd:	adc    BYTE PTR [eax+ebx*1-0xf],bl
  4327e1:	jmp    DWORD PTR [ebx-0x7c]
  4327e4:	pop    es
  4327e5:	xor    esi,DWORD PTR [esi+esi*1+0x11191039]
  4327ec:	jnp    0x4327ec
  4327ee:	mov    eax,0xe3c08d10
  4327f3:	popa   
  4327f4:	push   ebx
  4327f5:	dec    eax
  4327f6:	aaa    
  4327f7:	(bad)  
  4327f9:	pop    esp
  4327fa:	popf   
  4327fb:	sub    BYTE PTR [edx-0x6e2b6606],al
  432801:	ror    BYTE PTR [edx-0x65],0x5a
  432805:	mov    ebx,DWORD PTR [ecx-0x17]
  432808:	add    al,0x5b
  43280a:	pop    esi
  43280b:	xchg   esi,eax
  43280c:	mov    ch,ah
  43280e:	out    dx,al
  43280f:	mov    edx,DWORD PTR [esi-0x7b]
  432812:	or     dl,dh
  432814:	mov    esp,0xfde982ff
  432819:	test   BYTE PTR [edx+0x60],bh
  43281c:	dec    edi
  43281d:	je     0x43283b
  43281f:	rol    BYTE PTR [esi],cl
  432821:	jmp    FWORD PTR [edx-0x17]
  432824:	je     0x432844
  432826:	jne    0x432861
  432828:	cli    
  432829:	stc    
  43282a:	pop    edx
  43282b:	pusha  
  43282c:	dec    edi
  43282d:	je     0x43284b
  43282f:	mov    dl,0x6
  432831:	inc    DWORD PTR [eax]
  432833:	dec    edx
  432834:	jmp    0x16612ead
  432839:	adc    BYTE PTR [eax],al
  43283b:	stos   BYTE PTR es:[edi],al
  43283c:	gs cs (bad) 
  43283f:	xor    ch,cl
  432841:	add    bh,0x9a
  432844:	xlat   BYTE PTR gs:[ebx]
  432846:	(bad)  
  432847:	and    ch,cl
  432849:	xor    al,0xc0
  43284b:	push   ds
  43284c:	jb     0x432851
  43284e:	outs   dx,BYTE PTR ds:[esi]
  43284f:	fs pusha 
  432851:	inc    edi
  432852:	dec    eax
  432853:	push   ss
  432854:	lods   al,BYTE PTR ds:[esi]
  432855:	push   ebp
  432856:	test   DWORD PTR [edx-0x3b],ebp
  432859:	mov    WORD PTR [ecx-0x4f],?
  43285c:	cmp    ah,ah
  43285e:	test   DWORD PTR [edx+0x11],esp
  432861:	lss    ebx,FWORD PTR [ecx-0x26]
  432865:	add    ebp,DWORD PTR ds:0x544707dc
  43286b:	es pushf 
  43286d:	inc    ecx
  43286e:	sbb    eax,0x40575fcf
  432873:	adc    al,0x2
  432875:	stos   BYTE PTR es:[edi],al
  432876:	dec    ebx
  432877:	aas    
  432878:	xchg   ebx,esp
  43287a:	inc    edx
  43287b:	aas    
  43287c:	mov    ebx,ebp
  43287e:	jne    0x432898
  432880:	inc    ebx
  432881:	jnp    0x4328a7
  432883:	push   esp
  432884:	outs   dx,BYTE PTR cs:[esi]
  432886:	pop    ecx
  432887:	pop    ebp
  432888:	add    esi,DWORD PTR [edx]
  43288a:	or     bl,ah
  43288c:	jge    0x432830
  43288e:	dec    ebx
  43288f:	sbb    BYTE PTR [edx-0x5d],bl
  432892:	imul   esp,DWORD PTR [eax],0x6a537a
  432898:	sbb    dh,BYTE PTR [edi]
  43289a:	sub    eax,0x5e62e48d
  43289f:	pop    eax
  4328a0:	in     eax,dx
  4328a1:	mov    al,0xe5
  4328a3:	add    ebx,DWORD PTR [ebp-0x1aaf8ffe]
  4328a9:	jnp    0x4328bd
  4328ab:	push   0x87477a22
  4328b0:	pop    ebp
  4328b1:	ja     0x4328d0
  4328b3:	cmp    eax,0x3e78314
  4328b8:	popf   
  4328b9:	jne    0x4328e0
  4328bb:	(bad)  
  4328bc:	int3   
  4328bd:	pop    esi
  4328be:	pop    esi
  4328bf:	push   eax
  4328c0:	sbb    DWORD PTR ds:0x94282b7,0x2d9d03e8
  4328ca:	cwde   
  4328cb:	js     0x43289a
  4328cd:	push   edx
  4328ce:	sbb    ch,ah
  4328d0:	retf   
  4328d1:	and    ah,bh
  4328d3:	add    ecx,DWORD PTR [eax+0x5c8aefc6]
  4328d9:	bound  esp,QWORD PTR [esi-0x5]
  4328dc:	sahf   
  4328dd:	jns    0x4328d0
  4328df:	cmp    dl,BYTE PTR [ebx+edi*2]
  4328e2:	out    0x3,eax
  4328e4:	popf   
  4328e5:	jbe    0x4328bd
  4328e7:	test   ch,ah
  4328e9:	add    eax,0x5a2012b4
  4328ee:	add    ch,al
  4328f0:	adc    DWORD PTR [ebx+0x70],0x1002c868
  4328f7:	jmp    0x70409d9a
  4328fc:	add    BYTE PTR ds:0x36ae8562,dh
  432902:	outs   dx,DWORD PTR ds:[esi]
  432903:	clc    
  432904:	jmp    0x29e:0xe869708d
  43290b:	aaa    
  43290c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43290d:	(bad)  
  43290e:	sti    
  43290f:	or     BYTE PTR [edi-0x78fffd61],0x19
  432916:	push   ebx
  432917:	ins    BYTE PTR es:[edi],dx
  432918:	dec    edi
  432919:	mov    dh,0x53
  43291b:	fs jb  0x432900
  43291e:	pop    esi
  43291f:	test   DWORD PTR [esi],esp
  432921:	cmc    
  432922:	fs and eax,0xa48b16ba
  432928:	fistp  WORD PTR [esi-0x56ca74fe]
  43292e:	in     eax,dx
  43292f:	xchg   BYTE PTR [esi],ch
  432931:	sar    ebx,1
  432933:	mov    al,0xa3
  432935:	push   ss
  432936:	xchg   ebx,eax
  432937:	mov    al,ds:0x62029eff
  43293c:	jo     0x4328cb
  43293e:	aas    
  43293f:	test   DWORD PTR [esi-0x7],esi
  432942:	adc    eax,DWORD PTR [eax]
  432944:	jmp    0xdfdbbc60
  432949:	sahf   
  43294a:	add    ch,BYTE PTR [edx+ebp*8]
  43294d:	es push es
  43294f:	push   ss
  432950:	out    0x48,al
  432952:	ret    0xe8b5
  432955:	sahf   
  432956:	add    al,BYTE PTR [eax]
  432958:	call   0xe955cb80
  43295d:	sahf   
  43295e:	sti    
  43295f:	mov    cl,0x79
  432961:	add    BYTE PTR [ecx],bl
  432963:	inc    edi
  432964:	inc    eax
  432965:	jmp    0xd91aea
  43296a:	inc    ebx
  43296b:	mov    es,WORD PTR [eax+eax*1]
  43296e:	les    edx,FWORD PTR [ecx-0x593687c]
  432974:	(bad)  
  432975:	push   DWORD PTR ds:0xb4fff7c7
  43297b:	add    al,0xb8
  43297d:	add    ch,al
  43297f:	add    al,0x0
  432981:	iretw  
  432983:	mov    esp,0xb7cb0c6b
  432988:	ror    DWORD PTR [edi],0x62
  43298b:	xchg   DWORD PTR [eax-0x1cfbbbb7],eax
  432991:	or     eax,0xc1c9b97b
  432996:	sahf   
  432997:	pop    es
  432998:	pop    es
  432999:	mov    dh,0xf6
  43299b:	add    DWORD PTR [edx+0x40],0xffffff84
  43299f:	data16 stc 
  4329a1:	fwait
  4329a2:	add    edi,DWORD PTR [ecx+eax*1+0x0]
  4329a6:	je     0x432a25
  4329a8:	jg     0x432946
  4329aa:	inc    edx
  4329ab:	add    al,0x0
  4329ad:	sub    eax,DWORD PTR [edi]
  4329af:	xor    eax,0xa3c339c1
  4329b4:	push   cs
  4329b5:	add    BYTE PTR [edi*2-0x67b487c1],dh
  4329bc:	mov    ecx,0xd01cf78b
  4329c1:	add    DWORD PTR [ebx+0x6a],esi
  4329c4:	jnp    0x432986
  4329c6:	add    BYTE PTR [edx],bl
  4329c8:	jg     0x432a09
  4329ca:	js     0x432979
  4329cc:	push   edx
  4329cd:	or     bl,ch
  4329cf:	pop    es
  4329d0:	xchg   ebx,eax
  4329d1:	inc    ecx
  4329d2:	add    BYTE PTR ds:0xb38b6c51,al
  4329d8:	jb     0x432a0d
  4329da:	(bad)  
  4329db:	jecxz  0x432a0a
  4329dd:	add    DWORD PTR [edi+0x2c],0x7d
  4329e1:	inc    edi
  4329e2:	pop    eax
  4329e3:	popf   
  4329e4:	fs pop edx
  4329e6:	xor    al,0xce
  4329e8:	cmp    DWORD PTR [esi-0x4c075ab7],eax
  4329ee:	dec    esp
  4329ef:	lods   al,BYTE PTR ds:[esi]
  4329f0:	fld    TBYTE PTR [esi]
  4329f2:	mov    edi,0x8551a07e
  4329f7:	pop    edx
  4329f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4329f9:	mov    WORD PTR [ecx+0x55],es
  4329fc:	clc    
  4329fd:	mov    dl,0x4
  4329ff:	pop    esp
  432a00:	mov    esp,0x994a85d7
  432a05:	arpl   WORD PTR [edi-0x4ef54c5f],ax
  432a0b:	pop    edx
  432a0c:	xchg   ebp,eax
  432a0d:	xchg   BYTE PTR [ecx-0x1b],cl
  432a10:	je     0x432a64
  432a12:	inc    esp
  432a13:	sti    
  432a14:	bound  eax,QWORD PTR [ecx]
  432a16:	inc    esi
  432a17:	inc    esi
  432a18:	(bad)  
  432a1a:	call   FWORD PTR [ebp-0xf87b418]
  432a20:	mov    ebp,?
  432a22:	pop    eax
  432a23:	add    DWORD PTR [ebp+0x79],ebx
  432a26:	or     BYTE PTR [ebp+0x6c4364],bl
  432a2c:	pop    edx
  432a2d:	and    BYTE PTR [eax+eax*1-0x63],ch
  432a31:	fscale 
  432a33:	rcr    dl,0x39
  432a36:	(bad)  
  432a37:	call   FWORD PTR [ebp+0x38840cd9]
  432a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a3e:	sti    
  432a3f:	stc    
  432a40:	cmp    BYTE PTR es:[eax-0x7d],ah
  432a44:	dec    edi
  432a45:	adc    DWORD PTR [ebx],eax
  432a47:	test   edx,ebx
  432a49:	rol    DWORD PTR [eax],1
  432a4b:	(bad)  
  432a4c:	(bad)  ss:[eax]
  432a4f:	mov    DWORD PTR [edi+0x6dbe28d9],0xb4e8530a
  432a59:	mov    bh,0xfd
  432a5b:	call   DWORD PTR [esi]
  432a5d:	add    dh,BYTE PTR [edx+0x6607206f]
  432a63:	enter  0x798d,0xa2
  432a67:	pop    edi
  432a68:	cmc    
  432a69:	mov    BYTE PTR [ecx-0x3],dl
  432a6c:	in     al,0x7a
  432a6e:	fiadd  DWORD PTR [eax+0xce71253]
  432a74:	push   ds
  432a75:	popf   
  432a76:	xor    al,0xfd
  432a78:	les    ecx,FWORD PTR [esi-0x77]
  432a7b:	xor    ch,bl
  432a7d:	dec    edx
  432a7e:	(bad)  
  432a7f:	sar    BYTE PTR [eax],0x6f
  432a82:	pop    DWORD PTR [ebx]
  432a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a85:	xchg   BYTE PTR [ebp+0x4],dh
  432a88:	popf   
  432a89:	add    bl,BYTE PTR [esi+0x45]
  432a8c:	xor    DWORD PTR [ebx-0x4e],edi
  432a8f:	cmp    eax,DWORD PTR [eax]
  432a91:	and    eax,DWORD PTR [edi-0x11]
  432a94:	cld    
  432a95:	sbb    BYTE PTR [esi+0x29d1647],dl
  432a9b:	pop    esi
  432a9c:	lea    edi,[ecx]
  432a9e:	adc    eax,0xf4c803e7
  432aa3:	inc    ecx
  432aa4:	mov    ebp,DWORD PTR [ecx+0x5945e53]
  432aaa:	adc    eax,0x7e1803e7
  432aaf:	xchg   DWORD PTR ds:0x76f029d,edx
  432ab5:	fwait
  432ab6:	add    edx,DWORD PTR [edx-0x5d]
  432ab9:	scas   eax,DWORD PTR es:[edi]
  432aba:	add    ah,bh
  432abc:	or     al,0xf
  432abe:	ror    DWORD PTR [ecx],cl
  432ac0:	add    ebx,DWORD PTR [ecx]
  432ac2:	xchg   esi,eax
  432ac3:	jae    0x432ac8
  432ac5:	popf   
  432ac6:	add    ah,BYTE PTR [edi+eax*4+0xc]
  432aca:	xchg   edi,eax
  432acb:	out    0x3,eax
  432acd:	popf   
  432ace:	jns    0x432b3a
  432ad0:	lahf   
  432ad1:	scas   eax,DWORD PTR es:[edi]
  432ad2:	add    ah,bh
  432ad4:	sub    BYTE PTR [eax+0x2c],dl
  432ad7:	add    BYTE PTR [esi+0x3e],ch
  432ada:	adc    DWORD PTR [eax],eax
  432adc:	jmp    0xb6c8466c
  432ae1:	pop    edx
  432ae2:	add    edi,0x418799e1
  432ae8:	adc    DWORD PTR [ebp+ebp*4-0x3d52141b],ebx
  432aef:	test   DWORD PTR [esi+0x1200644a],ebx
  432af5:	add    dh,ch
  432af7:	cmp    al,0x50
  432af9:	sahf   
  432afa:	mov    dh,0x84
  432afc:	xor    ebp,ecx
  432afe:	sahf   
  432aff:	xchg   DWORD PTR [ecx-0x6b],eax
  432b02:	daa    
  432b03:	inc    esp
  432b04:	pop    esp
  432b05:	jb     0x432aa0
  432b07:	outs   dx,DWORD PTR ds:[esi]
  432b08:	(bad)  
  432b09:	stc    
  432b0a:	mov    dh,0xf4
  432b0c:	repz push cs
  432b0e:	mov    eax,ds:0xf9e80987
  432b13:	pop    esi
  432b14:	stc    
  432b15:	scas   al,BYTE PTR es:[edi]
  432b16:	or     dh,BYTE PTR [esi]
  432b18:	outs   dx,DWORD PTR ds:[esi]
  432b19:	fnstenv [edi+0x53]
  432b1c:	stc    
  432b1d:	out    dx,al
  432b1e:	xchg   ch,ch
  432b20:	pop    edx
  432b21:	push   ebp
  432b22:	jbe    0x432b5f
  432b24:	je     0x432b96
  432b26:	(bad)  
  432b27:	pop    edx
  432b28:	out    0xd5,eax
  432b2a:	gs jmp 0x432b26
  432b2d:	push   0xffffffe6
  432b2f:	pop    edx
  432b30:	add    BYTE PTR ds:0x4d5187df,bh
  432b36:	and    al,BYTE PTR [ebx+0x38]
  432b39:	arpl   bp,bx
  432b3b:	in     al,dx
  432b3c:	cli    
  432b3d:	bound  edx,QWORD PTR [esi]
  432b3f:	mov    ds:0x879ee912,al
  432b44:	xchg   ecx,eax
  432b45:	inc    ebp
  432b46:	pop    DWORD PTR [edx]
  432b48:	add    dl,bl
  432b4a:	sub    al,0x60
  432b4c:	xchg   ebp,edx
  432b4e:	rol    BYTE PTR [edi+0x10640091],1
  432b54:	add    BYTE PTR [eax],al
  432b56:	(bad)  
  432b57:	jns    0x432af1
  432b59:	push   ss
  432b5a:	add    ah,dh
  432b5c:	add    BYTE PTR [eax-0x68fa1afc],cl
  432b62:	mov    al,ds:0xf0000fa
  432b67:	or     al,dh
  432b69:	pop    esi
  432b6a:	add    DWORD PTR [eax-0x7f],esi
  432b6d:	xchg   esp,eax
  432b6e:	add    ah,dh
  432b70:	add    BYTE PTR [ebp+0x924b84],al
  432b76:	add    ah,al
  432b78:	jge    0x432be9
  432b7a:	push   0x855c393f
  432b7f:	jge    0x432bef
  432b81:	dec    DWORD PTR [edx-0x3f04d6f5]
  432b87:	pop    DWORD PTR [ebx+ebp*1]
  432b8a:	sar    BYTE PTR [edi],0x73
  432b8d:	or     al,0x33
  432b8f:	test   si,si
  432b92:	add    al,0x93
  432b94:	jl     0x432b50
  432b96:	push   edx
  432b97:	(bad)  
  432b99:	ins    BYTE PTR es:[edi],dx
  432b9a:	sub    esp,DWORD PTR [ebp-0x63a8afac]
  432ba0:	fbstp  TBYTE PTR [eax+eax*1]
  432ba3:	test   BYTE PTR [ebp+0x3f],bh
  432ba6:	ins    BYTE PTR es:[edi],dx
  432ba7:	in     eax,dx
  432ba8:	inc    eax
  432ba9:	pop    esp
  432baa:	mov    edi,DWORD PTR [ebx-0x7b]
  432bad:	les    edx,FWORD PTR [eax]
  432baf:	pop    esp
  432bb0:	push   ecx
  432bb1:	in     eax,dx
  432bb2:	jmp    DWORD PTR [ebx+0x7d]
  432bb5:	pop    es
  432bb6:	xor    eax,DWORD PTR [edi+ebp*1]
  432bb9:	cmp    DWORD PTR [eax],edx
  432bbb:	mov    edi,esi
  432bbd:	jp     0x432bbd
  432bbf:	add    BYTE PTR [eax],bh
  432bc1:	stc    
  432bc2:	mov    eax,es
  432bc4:	jecxz  0x432c0e
  432bc6:	push   ebx
  432bc7:	dec    eax
  432bc8:	(bad)  
  432bc9:	(bad)  
  432bcb:	pop    esp
  432bcc:	popf   
  432bcd:	cwde   
  432bce:	cmp    dl,0x99
  432bd1:	int3   
  432bd2:	mov    eax,eax
  432bd4:	jp     0x432bf9
  432bd6:	pop    ecx
  432bd7:	mov    ebx,DWORD PTR [ecx-0x27]
  432bda:	add    al,0x5b
  432bdc:	fimul  WORD PTR [esi]
  432bde:	mov    esp,ebp
  432be0:	push   ss
  432be1:	pop    ss
  432be2:	or     al,0x2d
  432be4:	in     al,0x20
  432be6:	shl    DWORD PTR [ecx+edi*2+0x70],cl
  432bea:	inc    ebx
  432beb:	sbb    al,0xa6
  432bed:	sbb    ch,BYTE PTR [ecx+0x5b]
  432bf0:	adc    al,0xa2
  432bf2:	adc    DWORD PTR [edi+0x468ccd67],eax
  432bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432bf9:	jb     0x432c46
  432bfb:	sbb    dl,ah
  432bfd:	xchg   edi,eax
  432bfe:	sub    eax,0xfdd9c2ff
  432c03:	xchg   BYTE PTR [ebp+0x24044572],ah
  432c09:	mov    dl,0x1
  432c0b:	xchg   DWORD PTR [ebp-0x47],edx
  432c0e:	mov    WORD PTR [eax+0x75],cs
  432c11:	bound  eax,QWORD PTR [ebp+0x2c]
  432c14:	and    al,0xb1
  432c16:	sub    eax,0x8cc1e587
  432c1b:	dec    eax
  432c1c:	leave  
  432c1d:	test   WORD PTR [eax],si
  432c20:	cwde   
  432c21:	fscale 
  432c23:	rol    BYTE PTR [eax],0xdd
  432c26:	in     eax,dx
  432c27:	std    
  432c28:	jg     0x432bc7
  432c2a:	fld    DWORD PTR [esi+0x4c62f948]
  432c30:	push   eax
  432c31:	adc    al,0x21
  432c33:	dec    eax
  432c34:	rcr    DWORD PTR ds:0x9d001b99,0xda
  432c3b:	std    
  432c3c:	call   FWORD PTR [ebp-0x593b7b64]
  432c42:	fscale 
  432c44:	clc    
  432c45:	cmp    al,BYTE PTR [edx]
  432c47:	mov    ds:0x3cc280f9,al
  432c4c:	(bad)  
  432c4d:	mov    eax,ds:0x24fa4f02
  432c52:	jmp    0x432bde
  432c54:	push   edi
  432c55:	pop    ebx
  432c56:	push   es
  432c57:	out    0xc7,eax
  432c59:	loope  0x432c18
  432c5b:	stos   DWORD PTR es:[edi],eax
  432c5c:	enter  0xbdd9,0x1c
  432c60:	(bad)  
  432c61:	icebp  
  432c62:	jbe    0x432c80
  432c64:	or     al,0x4c
  432c66:	test   DWORD PTR [eax],esi
  432c68:	jo     0x432cd3
  432c6a:	ja     0x432c4c
  432c6c:	pop    ss
  432c6d:	push   ds
  432c6e:	jmp    0x432c4b
  432c70:	push   ax
  432c72:	push   esp
  432c73:	pop    esi
  432c74:	outs   dx,DWORD PTR ds:[esi]
  432c75:	test   eax,0x9f7b3985
  432c7a:	das    
  432c7b:	push   ds
  432c7c:	icebp  
  432c7d:	out    0xd6,eax
  432c7f:	loope  0x432c0d
  432c81:	out    0xc0,eax
  432c83:	add    BYTE PTR cs:[eax+0x7f],bh
  432c87:	and    DWORD PTR [eax+eax*1],esi
  432c8a:	jmp    DWORD PTR ss:[ebp-0x1e]
  432c8e:	xchg   esp,eax
  432c8f:	test   DWORD PTR [ecx],ebx
  432c91:	jo     0x432c22
  432c93:	jg     0x432c9e
  432c95:	or     al,0x19
  432c97:	add    BYTE PTR [esi-0x6],ah
  432c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432c9b:	push   0xaaf059eb
  432ca0:	icebp  
  432ca1:	clc    
  432ca2:	test   dl,ch
  432ca4:	mov    dl,BYTE PTR [esi+0x3b]
  432ca7:	sti    
  432ca8:	out    0x8c,al
  432caa:	fsubr  QWORD PTR [esi]
  432cac:	fs ret 
  432cae:	icebp  
  432caf:	push   es
  432cb0:	adc    BYTE PTR [ecx-0x47],dh
  432cb3:	outs   dx,BYTE PTR ds:[esi]
  432cb4:	repnz push ebx
  432cb6:	and    BYTE PTR [edi+ecx*1-0x73],al
  432cba:	ficomp DWORD PTR [esi]
  432cbc:	pop    ss
  432cbd:	stc    
  432cbe:	pop    edx
  432cbf:	jle    0x432cc1
  432cc1:	and    al,0x91
  432cc3:	(bad)
  432cc8:	xor    al,0xe9
  432cca:	sahf   
  432ccb:	add    al,BYTE PTR [eax]
  432ccd:	cmp    BYTE PTR [esi],dl
  432ccf:	dec    esp
  432cd0:	or     BYTE PTR [eax-0x53],ah
  432cd3:	push   ds
  432cd4:	call   0xfa2f42ba
  432cd9:	daa    
  432cda:	jo     0x432d27
  432cdc:	pop    ebx
  432cdd:	stos   DWORD PTR es:[edi],eax
  432cde:	xchg   esi,eax
  432cdf:	add    bh,BYTE PTR [eax-0x613fa89]
  432ce5:	push   cs
  432ce6:	push   edx
  432ce7:	test   al,0x8
  432ce9:	jmp    0x2e0fe3c8
  432cee:	add    dl,ah
  432cf0:	mov    dh,0xcc
  432cf2:	mov    esp,0xa485d711
  432cf7:	scas   al,BYTE PTR es:[edi]
  432cf8:	aaa    
  432cf9:	sub    eax,0x9a79122
  432cfe:	sub    DWORD PTR gs:[ebx],eax
  432d01:	add    cl,ch
  432d03:	push   ds
  432d04:	sub    ebp,DWORD PTR [edi]
  432d06:	fidivr WORD PTR [ebx]
  432d08:	js     0x432d0a
  432d0a:	jmp    0xf5be94ad
  432d0f:	data16 sti 
  432d11:	and    BYTE PTR [ecx-0x62],0x2
  432d15:	add    BYTE PTR [edi-0x3df78ad7],dh
  432d1b:	mov    DWORD PTR [ebp+0x7],esi
  432d1e:	lahf   
  432d1f:	and    esp,DWORD PTR [edi]
  432d21:	cli    
  432d22:	xchg   edx,eax
  432d23:	jmp    0x432ccd
  432d25:	adc    cl,ch
  432d27:	daa    
  432d28:	dec    esp
  432d29:	sbb    BYTE PTR [eax],ah
  432d2b:	retf   
  432d2c:	and    dh,BYTE PTR [ebx-0xd]
  432d2f:	sub    eax,DWORD PTR [eax+eiz*1+0x69]
  432d33:	fisub  WORD PTR [edi]
  432d35:	add    BYTE PTR [eax-0xd],ah
  432d38:	sbb    dh,BYTE PTR [edi]
  432d3a:	add    BYTE PTR [edx+0x22],bh
  432d3d:	ins    DWORD PTR es:[edi],dx
  432d3e:	pop    es
  432d3f:	add    ebp,DWORD PTR [eax]
  432d41:	and    al,0xa0
  432d43:	ja     0x432d8a
  432d45:	add    BYTE PTR [ebx+0x4e831682],cl
  432d4b:	cmp    BYTE PTR fs:[eax-0x34],ch
  432d4f:	lahf   
  432d50:	(bad)  
  432d51:	jmp    FWORD PTR [ecx+0x0]
  432d54:	xor    eax,0x7fd1f755
  432d59:	out    0x7b,al
  432d5b:	les    ecx,FWORD PTR [eax]
  432d5d:	sub    al,0xf3
  432d5f:	jne    0x432d59
  432d61:	dec    edi
  432d62:	push   esi
  432d63:	mov    eax,0xfff7f188
  432d68:	(bad)  
  432d69:	dec    ebx
  432d6a:	mov    edx,0x4d7c0410
  432d6f:	or     al,0x26
  432d71:	jbe    0x432de9
  432d73:	sbb    al,0x22
  432d75:	jbe    0x432dce
  432d77:	xor    al,0x5c
  432d79:	leave  
  432d7a:	idiv   bh
  432d7c:	pop    ebx
  432d7d:	jge    0x432d57
  432d7f:	test   DWORD PTR [edi+0x72],edi
  432d82:	adc    al,0x8b
  432d84:	repnz sbb al,0x83
  432d87:	dec    esi
  432d88:	mov    al,ds:0x75ff5039
  432d8d:	test   esp,eax
  432d8f:	or     BYTE PTR [ebx-0x4bffe3d8],al
  432d95:	add    al,0x0
  432d97:	pop    edi
  432d98:	dec    edx
  432d99:	jge    0x432d56
  432d9b:	pop    ebx
  432d9c:	cmp    edx,eax
  432d9e:	adc    BYTE PTR [eax],al
  432da0:	fsub   st(4),st
  432da2:	idiv   edi
  432da4:	mov    ecx,DWORD PTR [ebp+0x55]
  432da7:	ret    0x454
  432daa:	int3   
  432dab:	int3   
  432dac:	sub    al,al
  432dae:	int3   
  432daf:	int3   
  432db0:	cmp    al,al
  432db2:	int3   
  432db3:	int3   
  432db4:	popf   
  432db5:	cwde   
  432db6:	cmp    eax,0xf42d004c
  432dbb:	cmp    eax,0x501a5a00
  432dc0:	pop    es
  432dc1:	popf   
  432dc2:	fscale 
  432dc4:	rcr    ch,0x9
  432dc7:	xchg   esp,eax
  432dc8:	push   ds
  432dc9:	fstp   st(1)
  432dcb:	mov    edx,0xfdd6d540
  432dd0:	call   FWORD PTR [ebp+0x51ccc19c]
  432dd6:	daa    
  432dd7:	test   esp,ebp
  432dd9:	ins    BYTE PTR es:[edi],dx
  432dda:	das    
  432ddb:	test   DWORD PTR [ebp-0x4f],ebp
  432dde:	pop    esp
  432ddf:	jae    0x432e15
  432de1:	popf   
  432de2:	adc    BYTE PTR [ebp-0x793b7708],al
  432de8:	dec    edx
  432de9:	shl    DWORD PTR [esi+ecx*2+0x20],0x35
  432dee:	(bad)  
  432df0:	call   FWORD PTR [ebp+0x5685dd2c]
  432df6:	add    DWORD PTR [esi-0x1],esp
  432df9:	push   0xffffffaa
  432dfb:	repnz into 
  432dfd:	push   ds
  432dfe:	push   ss
  432dff:	add    DWORD PTR [edi-0x3f7f129d],eax
  432e05:	dec    eax
  432e06:	in     al,0x52
  432e08:	mov    eax,0xfffdd99c
  432e0d:	push   ebx
  432e0e:	je     0x432df0
  432e10:	pop    ebx
  432e11:	fmulp  st(4),st
  432e13:	mov    ebp,0x70c15b37
  432e18:	or     eax,0xb6198726
  432e1d:	add    BYTE PTR [ecx+ebx*8-0x4910003],bl
  432e24:	mov    eax,DWORD PTR [edx-0x33]
  432e27:	bound  edi,QWORD PTR [ebx]
  432e29:	sub    al,0x24
  432e2b:	(bad)  
  432e2c:	and    eax,0xf702f625
  432e31:	mov    bh,bl
  432e33:	sbb    bl,BYTE PTR [esi]
  432e35:	cld    
  432e36:	repz sbb bl,BYTE PTR [esi+0x49]
  432e3a:	test   eax,0xed30317b
  432e3f:	sbb    ebp,DWORD PTR [edi+0x25dadb53]
  432e45:	in     eax,0x44
  432e47:	out    0x5e,eax
  432e49:	test   DWORD PTR ds:[ebx+0x401a08a3],eax
  432e50:	rcl    DWORD PTR [esp+ebx*2+0x40],cl
  432e54:	xlat   BYTE PTR ds:[ebx]
  432e55:	add    ebx,DWORD PTR [ebp-0x22cf18fe]
  432e5b:	inc    edi
  432e5c:	pop    esi
  432e5d:	fbstp  TBYTE PTR [esi-0x3d]
  432e60:	into   
  432e61:	cmp    eax,0xf82479cd
  432e66:	enter  0xf9bf,0xfe
  432e6a:	and    esp,DWORD PTR [ebp+0x6b]
  432e6d:	mov    esp,ebx
  432e6f:	jp     0x432e1f
  432e71:	pop    es
  432e72:	and    BYTE PTR [eax+0x13],dl
  432e75:	add    DWORD PTR [edi+0x32],ecx
  432e78:	mov    bh,0x28
  432e7a:	in     al,0x50
  432e7c:	mov    ch,0xeb
  432e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e7f:	xlat   BYTE PTR ds:[ebx]
  432e80:	inc    edx
  432e81:	cmc    
  432e82:	add    BYTE PTR [eax],ah
  432e84:	xor    eax,0xf5d9813b
  432e89:	std    
  432e8a:	cli    
  432e8b:	xor    DWORD PTR [esi],ebx
  432e8d:	pop    esi
  432e8e:	inc    ecx
  432e8f:	mov    eax,ds:0x4c2fb17b
  432e94:	sbb    esp,DWORD PTR [edx]
  432e96:	push   esp
  432e97:	push   edx
  432e98:	fiadd  DWORD PTR [ecx]
  432e9a:	out    0x94,al
  432e9c:	out    0x5e,al
  432e9e:	dec    esi
  432e9f:	lds    eax,FWORD PTR [ecx+0x6522082b]
  432ea5:	mov    bh,0x54
  432ea7:	sbb    cl,BYTE PTR [ebp+0x0]
  432eaa:	lds    ebp,FWORD PTR [ebp+0x52625ac2]
  432eb0:	dec    edx
  432eb1:	mov    ebp,0xff1aa872
  432eb6:	cs test eax,0xca19422d
  432ebc:	add    eax,ecx
  432ebe:	daa    
  432ebf:	mov    DWORD PTR [edx],eax
  432ec1:	add    cl,ch
  432ec3:	sahf   
  432ec4:	jg     0x432f18
  432ec6:	or     eax,0xec6dd284
  432ecb:	popf   
  432ecc:	mov    ch,0x87
  432ece:	pop    ss
  432ecf:	test   DWORD PTR [ebx+0x2d],ecx
  432ed2:	test   eax,0x3ce37fd0
  432ed7:	pop    esp
  432ed8:	mov    bh,0xcc
  432eda:	cmp    al,0x24
  432edc:	xlat   BYTE PTR ds:[ebx]
  432edd:	test   DWORD PTR [ecx+eiz*4],esp
  432ee0:	addr16 in al,dx
  432ee2:	mov    ecx,0xeec08159
  432ee7:	add    BYTE PTR [edx-0x6116f212],al
  432eed:	jg     0x432f67
  432eef:	int    0x73
  432ef1:	jmp    0x432efc
  432ef3:	ins    DWORD PTR es:[edi],dx
  432ef4:	div    edi
  432ef6:	(bad)  
  432ef7:	call   0xe94f9a19
  432efc:	mov    eax,ds:0x9efad97e
  432f01:	add    bh,BYTE PTR [ebp+0x1]
  432f04:	mov    eax,ds:0x466a0671
  432f09:	(bad)  
  432f0a:	jmp    ebp
  432f0c:	cmp    edx,edx
  432f0e:	or     eax,0x39679ee9
  432f13:	repnz cmp eax,DWORD PTR [eax]
  432f16:	shl    esi,0x9a
  432f19:	add    al,BYTE PTR [eax]
  432f1b:	jmp    0x624f6945
  432f20:	scas   al,BYTE PTR es:[edi]
  432f21:	jge    0x432f6e
  432f23:	add    BYTE PTR [edx+edi*2+0x420f1048],ch
  432f2a:	add    al,0x53
  432f2c:	dec    DWORD PTR [esi+0x38]
  432f2f:	mov    DWORD PTR [ecx],edi
  432f31:	in     eax,dx
  432f32:	add    DWORD PTR [ebp+0x24],0xef55ff65
  432f39:	imul   edi,DWORD PTR [ecx+ecx*4],0x5581ee81
  432f40:	ins    BYTE PTR es:[edi],dx
  432f41:	addr16 inc ebp
  432f43:	loopne 0x432f40
  432f45:	cmp    bl,al
  432f47:	add    BYTE PTR [ecx+eax*1],dh
  432f4a:	add    BYTE PTR [ebx+0x70fec00],al
  432f50:	xchg   DWORD PTR [esp+ecx*1+0x1a030000],esp
  432f57:	jge    0x432f2d
  432f59:	push   edi
  432f5a:	cmp    al,0x0
  432f5c:	mov    ecx,ebx
  432f5e:	out    0x7e,al
  432f60:	shr    BYTE PTR [ecx+0x1007c0e5],0x1
  432f67:	add    BYTE PTR [eax],al
  432f69:	sub    eax,0x40009f2
  432f6e:	jl     0x432f66
  432f70:	adc    bh,dh
  432f72:	push   ds
  432f73:	jnp    0x432ff2
  432f75:	cmp    dh,0x6
  432f78:	test   BYTE PTR [edi],ch
  432f7a:	sldt   WORD PTR [eax]
  432f7d:	ret    
  432f7e:	stos   BYTE PTR es:[edi],al
  432f7f:	cli    
  432f80:	(bad)  
  432f81:	xor    ebp,edx
  432f83:	or     esi,0xffffffa7
  432f86:	fidivr WORD PTR [edx]
  432f88:	cmp    DWORD PTR [edx-0x1a],0xffffff82
  432f8c:	push   ebp
  432f8d:	ins    BYTE PTR es:[edi],dx
  432f8e:	std    
  432f8f:	xlat   BYTE PTR ds:[ebx]
  432f90:	add    DWORD PTR [edx-0x752195f2],0x39
  432f97:	or     BYTE PTR [edx],al
  432f99:	or     BYTE PTR [ebx],dh
  432f9b:	jns    0x432f98
  432f9d:	popf   
  432f9e:	in     al,dx
  432f9f:	jp     0x432fa1
  432fa1:	popf   
  432fa2:	mov    ?,WORD PTR [edi]
  432fa4:	popfw  
  432fa6:	(bad)  
  432fa7:	std    
  432fa8:	gs popf 
  432faa:	adc    DWORD PTR [ebp+0x17],ecx
  432fad:	popf   
  432fae:	fnstcw WORD PTR [ecx+eax*2+0x0]
  432fb2:	xchg   ebp,eax
  432fb3:	jg     0x432fb8
  432fb5:	mov    ebx,eax
  432fb7:	int    0x67
  432fb9:	xchg   eax,eax
  432fbb:	mov    ch,0x7a
  432fbd:	push   ecx
  432fbe:	mov    ch,0x2a
  432fc0:	push   edx
  432fc1:	call   0x4122aa
  432fc6:	push   ss
  432fc7:	pop    es
  432fc8:	in     al,dx
  432fc9:	sub    eax,0x18467366
  432fce:	outs   dx,BYTE PTR ds:[esi]
  432fcf:	mov    ds:0xd99c01c6,eax
  432fd4:	std    
  432fd5:	push   DWORD PTR [ebx+ebp*2]
  432fd8:	adc    al,0x0
  432fda:	popf   
  432fdb:	jo     0x433023
  432fdd:	and    dl,ah
  432fdf:	adc    al,0x14
  432fe1:	add    BYTE PTR [ebp-0x227d0227],bl
  432fe7:	in     eax,0x6
  432fe9:	rcr    DWORD PTR [ebp-0x57],0xee
  432fed:	stc    
  432fee:	cli    
  432fef:	ins    BYTE PTR es:[edi],dx
  432ff0:	test   DWORD PTR [ecx-0x5b],0xc83feda
  432ff7:	(bad)  
  432ff9:	call   DWORD PTR [edx-0x42403d75]
  432fff:	loope  0x43307b
  433001:	kandnw k6,k4,k5
  433005:	cld    
  433006:	fucomp st(0)
  433008:	shl    DWORD PTR [edi-0x2265e],cl
  43300e:	mov    dl,0x2a
  433010:	mov    dh,cl
  433012:	sub    BYTE PTR [edx+edi*2+0x31d00cd],ch
  433019:	add    eax,0xefe91d02
  43301e:	ja     0x432fcb
  433020:	ja     0x432fce
  433022:	sti    
  433023:	sbb    DWORD PTR [ebp+0xf],ecx
  433026:	retf   0xadd
  433029:	stos   DWORD PTR es:[edi],eax
  43302a:	js     0x433009
  43302c:	add    dl,BYTE PTR [eax]
  43302e:	cmp    DWORD PTR [edx-0x238118fe],ebp
  433034:	push   ds
  433035:	sub    dh,bl
  433037:	mov    eax,ds:0x4285ae77
  43303c:	repz gs loop 0x432fe1
  433040:	jg     0x432fea
  433042:	cld    
  433043:	pop    ds
  433044:	ret    0x2e54
  433047:	and    dh,BYTE PTR [ebx]
  433049:	or     ebp,DWORD PTR [esi+0x3e7e342]
  43304f:	ret    
  433050:	add    dl,BYTE PTR [esi+0x3d02bbe6]
  433056:	add    al,0x22
  433058:	dec    ebx
  433059:	sti    
  43305a:	(bad)  [ebx+0x2003e70f]
  433060:	xor    eax,0xea6e7cdf
  433065:	test   al,0xdd
  433067:	xchg   ebp,eax
  433068:	jmp    0x433000
  43306a:	test   eax,esp
  43306c:	jmp    DWORD PTR [ebp-0x43]
  43306f:	mov    ds:0x1a0c2a79,al
  433074:	inc    ecx
  433075:	mov    bh,0x7a
  433077:	test   BYTE PTR [edi],ch
  433079:	ds xor eax,0x4cd8ef00
  43307f:	adc    al,0x9d
  433081:	add    cl,BYTE PTR [esi]
  433083:	mov    esp,0x575ebd4f
  433088:	(bad)
  43308b:	adc    al,0x9d
  43308d:	add    ch,BYTE PTR [esi+0x57]
  433090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433091:	mov    ebx,0x3ea6ab00
  433096:	jae    0x433041
  433098:	sahf   
  433099:	jge    0x4330ee
  43309b:	and    esi,eax
  43309d:	mov    edx,0x5f9ee910
  4330a2:	cli    
  4330a3:	stc    
  4330a4:	or     DWORD PTR [ecx],eax
  4330a6:	jge    0x433034
  4330a8:	jp     0x4330ad
  4330aa:	or     DWORD PTR [ebp-0x51],ebp
  4330ad:	adc    DWORD PTR [eax],eax
  4330af:	jmp    0xf641c551
  4330b4:	mov    bl,0xde
  4330b6:	test   DWORD PTR [edi],ebx
  4330b8:	push   eax
  4330b9:	jecxz  0x4330f9
  4330bb:	push   0x54
  4330bd:	or     eax,DWORD PTR [edi-0x2e1fb6cc]
  4330c3:	push   0x4c
  4330c5:	rep ins DWORD PTR es:[edi],dx
  4330c7:	scas   eax,DWORD PTR es:[edi]
  4330c8:	(bad)  
  4330c9:	cmp    edx,DWORD PTR [eax]
  4330cb:	imul   esi,DWORD PTR [ecx],0xba64090b
  4330d1:	repnz (bad) 
  4330d3:	call   0xc943d10d
  4330d8:	sahf   
  4330d9:	add    dh,BYTE PTR [esi+esi*8-0x5f]
  4330dd:	inc    ebp
  4330de:	or     BYTE PTR [esi+0x43fa5e00],ah
  4330e4:	sbb    al,0x59
  4330e6:	add    ah,bh
  4330e8:	push   cs
  4330e9:	mov    cl,0x2
  4330eb:	add    BYTE PTR [edx+0x55],dh
  4330ee:	and    al,BYTE PTR [ebx-0x7af78d57]
  4330f4:	mov    ds:0x6a08e9df,al
  4330f9:	jmp    ecx
  4330fb:	mov    cl,dh
  4330fd:	in     eax,0x43
  4330ff:	adc    cl,ch
  433101:	mov    al,ds:0xacdd0002
  433106:	mov    bl,BYTE PTR [ebx+0x3d]
  433109:	(bad)  
  43310b:	or     BYTE PTR [eax],al
  43310d:	out    dx,al
  43310e:	pop    es
  43310f:	test   DWORD PTR [ebp+0x68],edx
  433112:	pop    ebp
  433113:	push   ebp
  433114:	in     eax,dx
  433115:	aas    
  433116:	dec    edx
  433117:	sbb    BYTE PTR [edx+0x4],dl
  43311a:	mov    esi,0x5b417ee
  43311f:	adc    DWORD PTR [ebp-0x44],0x5c
  433123:	aas    
  433124:	sbb    BYTE PTR [edi-0x32],dh
  433127:	sub    esi,esi
  433129:	ret    
  43312a:	or     bh,dl
  43312c:	push   DWORD PTR [ebp+eax*1-0x1d]
  433130:	add    eax,0x7320d407
  433135:	data16 xchg BYTE PTR [ebp-0x4],dh
  433139:	je     0x43313d
  43313b:	test   BYTE PTR [eax+0xf000564],dl
  433141:	xor    al,BYTE PTR [edi+esi*8]
  433144:	dec    ebp
  433145:	add    BYTE PTR [eax+0x5d],ch
  433148:	(bad)  
  433149:	rcl    DWORD PTR [esp+eax*2+0x7b],cl
  43314d:	(bad)  
  43314e:	dec    esp
  43314f:	pop    esi
  433150:	dec    ebp
  433151:	clc    
  433152:	inc    edi
  433153:	int    0x7b
  433155:	(bad)  
  433156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433157:	push   esp
  433158:	(bad)  
  433159:	mov    eax,DWORD PTR [ebx-0x7f3f82da]
  43315f:	add    eax,0xd8005881
  433164:	aas    
  433165:	adc    BYTE PTR [ebx+eax*1],al
  433168:	add    BYTE PTR [eax],al
  43316a:	mov    al,0x0
  43316c:	mov    BYTE PTR [ebp+0x28],bl
  43316f:	pop    ebp
  433170:	ret    
  433171:	mov    edx,DWORD PTR [edi]
  433173:	(bad)  
  433174:	loope  0x43317e
  433176:	inc    ebp
  433177:	mov    esp,0xe1fc110
  43317c:	bound  eax,QWORD PTR [ecx+ebp*2]
  43317f:	dec    ebx
  433180:	in     al,dx
  433181:	mov    BYTE PTR [ecx],cl
  433183:	loop   0x43310d
  433185:	push   ebp
  433186:	popf   
  433187:	dec    ecx
  433188:	jl     0x4331e5
  43318a:	mov    edx,0x6d183963
  43318f:	jp     0x433166
  433191:	jle    0x433125
  433193:	jmp    0x433192
  433195:	test   BYTE PTR [eax+0x13],cl
  433198:	jnp    0x4331db
  43319a:	test   esp,ebx
  43319c:	(bad)  
  43319d:	sub    eax,0xfd012fab
  4331a2:	call   0xea6c:0x98e4fdea
  4331a9:	adc    BYTE PTR [eax],al
  4331ab:	push   cs
  4331ac:	int3   
  4331ad:	jle    0x43322a
  4331af:	sub    edx,0xb99983fa
  4331b5:	std    
  4331b6:	jmp    DWORD PTR [edx-0x270701e1]
  4331bc:	in     eax,dx
  4331bd:	jbe    0x433189
  4331bf:	dec    esi
  4331c0:	retf   0x7d3f
  4331c3:	arpl   dx,dx
  4331c5:	jl     0x43321a
  4331c7:	push   ebp
  4331c8:	in     eax,dx
  4331c9:	lds    edi,FWORD PTR [ebp+0x4b]
  4331cc:	fisubr DWORD PTR [edi-0x26]
  4331cf:	push   ss
  4331d0:	xor    DWORD PTR [ebx+eax*4],esp
  4331d3:	pop    ebp
  4331d4:	push   ss
  4331d5:	adc    al,BYTE PTR [ebp-0x61b949a]
  4331db:	popf   
  4331dc:	jmp    0xd218b8de
  4331e1:	jbe    0x43322c
  4331e3:	mov    ebp,0x5bfbe54
  4331e8:	loop   0x433266
  4331ea:	aas    
  4331eb:	cdq    
  4331ec:	js     0x433230
  4331ee:	adc    BYTE PTR [ebp+0x71fffdeb],bl
  4331f4:	mov    edi,0xab015b75
  4331f9:	(bad)  
  4331fa:	or     BYTE PTR [edi-0x15],dh
  4331fd:	adc    BYTE PTR [ebx-0xf],0x2
  433201:	outs   dx,DWORD PTR ds:[esi]
  433202:	push   eax
  433203:	(bad)  
  433204:	mov    esp,DWORD PTR [edx+0x3f32630b]
  43320a:	cli    
  43320b:	lods   eax,DWORD PTR ds:[esi]
  43320c:	add    ah,bh
  43320e:	jp     0x433210
  433210:	outs   dx,BYTE PTR ds:[esi]
  433211:	fidiv  DWORD PTR [eax+0x46]
  433214:	xchg   ebp,eax
  433215:	adc    ebx,DWORD PTR [esi]
  433217:	xor    ch,BYTE PTR [edi-0x62f81539]
  43321d:	add    ah,bh
  43321f:	neg    BYTE PTR [edx+esi*8-0x1a]
  433223:	pop    es
  433224:	popf   
  433225:	add    dl,BYTE PTR [ebx-0x81eef9c]
  43322b:	jb     0x4331d8
  43322d:	or     DWORD PTR [edi+ebp*8-0x7294f063],0xffffffa4
  433235:	add    ah,bh
  433237:	(bad)  
  433238:	sub    al,0x4
  43323a:	repnz aas 
  43323c:	imul   ecx,DWORD PTR [ebx+0x447dd219],0x89a5c666
  433246:	xor    al,0xec
  433248:	push   eax
  433249:	mov    bh,0x66
  43324b:	out    dx,al
  43324c:	lods   eax,DWORD PTR ds:[esi]
  43324d:	push   esp
  43324e:	test   eax,0x7022dc79
  433253:	dec    ebp
  433254:	fld    QWORD PTR [ebp-0x75cf8759]
  43325a:	nop/reserved BYTE PTR [edi+eax*2]
  43325e:	xlat   BYTE PTR ds:[ebx]
  43325f:	add    esp,DWORD PTR [ebx]
  433261:	(bad)  
  433263:	ja     0x43321c
  433265:	mov    bh,BYTE PTR [eax+eiz*8]
  433268:	push   edx
  433269:	jmp    0x43324a
  43326b:	pop    ecx
  43326c:	or     ecx,DWORD PTR [esi+0x3d15e01c]
  433272:	xchg   esp,eax
  433273:	jns    0x433275
  433275:	dec    esp
  433276:	cli    
  433277:	pop    ss
  433278:	push   edx
  433279:	add    eax,0x9edf007d
  43327e:	add    al,BYTE PTR [ebp+0x4186f114]
  433284:	add    DWORD PTR [ebp+esi*4+0xbf4572d],ecx
  43328b:	test   DWORD PTR [esi-0x2a3f7c82],ebp
  433291:	cdq    
  433292:	rol    DWORD PTR [eax-0x27],0x9e
  433296:	add    al,BYTE PTR [eax]
  433298:	jmp    0xe9463376
  43329d:	sahf   
  43329e:	add    dh,cl
  4332a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4332a1:	mov    es,WORD PTR [edx]
  4332a3:	add    al,0xe9
  4332a5:	sahf   
  4332a6:	or     eax,DWORD PTR [esi+esi*2+0x62000299]
  4332ad:	loopne 0x4332f1
  4332af:	test   DWORD PTR [edx+esi*2-0x3a02bc7a],ebx
  4332b6:	popf   
  4332b7:	jb     0x43329d
  4332b9:	cmc    
  4332ba:	popf   
  4332bb:	xchg   DWORD PTR [edx+esi*2+0x1adec082],esp
  4332c2:	jo     0x4332c4
  4332c4:	jmp    0x98cba67
  4332c9:	sbb    al,dh
  4332cb:	je     0x4332e4
  4332cd:	les    eax,FWORD PTR [ebp+0x10]
  4332d0:	pusha  
  4332d1:	xor    DWORD PTR [esi+0x16b2b083],0xffffff85
  4332d8:	push   ss
  4332d9:	add    BYTE PTR [ecx-0x79],bh
  4332dc:	inc    esi
  4332dd:	fld    QWORD PTR [ebp-0x339dbfb5]
  4332e3:	cli    
  4332e4:	xchg   BYTE PTR [eax*1+0x54e2c1e0],dh
  4332eb:	push   ecx
  4332ec:	add    eax,edx
  4332ee:	jae    0x4332d6
  4332f0:	test   DWORD PTR [ebx+0xf83185],ebp
  4332f6:	xchg   esp,eax
  4332f7:	pop    ebx
  4332f8:	cmp    eax,0xe44507d4
  4332fd:	push   edx
  4332fe:	test   BYTE PTR [esi-0x118c1564],bh
  433304:	add    DWORD PTR [ebp+0x78],0x5a
  433308:	dec    ebp
  433309:	clc    
  43330a:	inc    edi
  43330b:	lds    ecx,FWORD PTR [edi+esi*8]
  43330e:	sti    
  43330f:	icebp  
  433310:	inc    DWORD PTR [ecx]
  433312:	mov    ah,0x1
  433314:	je     0x433330
  433316:	das    
  433317:	xor    al,0xf4
  433319:	mov    edi,ecx
  43331b:	jmp    0x340f82a3
  433320:	push   eax
  433321:	push   ecx
  433322:	pop    esp
  433323:	(bad)  
  433324:	or     eax,0x4d5a8400
  433329:	clc    
  43332a:	or     eax,0x398b1847
  43332f:	aad    0x21
  433331:	inc    ebp
  433332:	nop
  433333:	add    dl,al
  433335:	sub    DWORD PTR [ebx+0x41],ecx
  433338:	adc    DWORD PTR [ebp-0x64],0x407782
  43333f:	je     0x43331f
  433341:	jle    0x4332d7
  433343:	inc    edx
  433344:	add    DWORD PTR [eax],eax
  433346:	(bad)  
  433347:	mov    eax,DWORD PTR [esi+0x0]
  43334a:	add    BYTE PTR [ecx+eax*1-0x41],al
  43334e:	pop    es
  43334f:	cmp    al,BYTE PTR [ecx]
  433351:	add    BYTE PTR [eax],al
  433353:	imul   eax,DWORD PTR [ecx+0x10],0x0
  433357:	sub    al,0x1
  433359:	add    BYTE PTR [edi],cl
  43335b:	mov    eax,0x34000081
  433360:	test   BYTE PTR [ebp-0x4],dh
  433363:	xor    al,0xd8
  433365:	jge    0x4333d7
  433367:	adc    al,BYTE PTR [ecx]
  433369:	add    BYTE PTR [ebx],dh
  43336b:	inc    esp
  43336c:	pop    ebx
  43336d:	inc    ecx
  43336e:	add    BYTE PTR [ebp-0x52f3501c],bl
  433374:	sub    edi,DWORD PTR [ebx+0x43]
  433377:	icebp  
  433378:	dec    edi
  433379:	cmp    eax,0xe02e2420
  43337e:	sbb    ebp,0xffffffde
  433381:	and    al,0x85
  433383:	push   ebp
  433384:	iret   
  433385:	jl     0x4333d2
  433387:	icebp  
  433388:	ins    DWORD PTR es:[edi],dx
  433389:	mov    ebx,0x3550aa74
  43338e:	inc    eax
  43338f:	xchg   BYTE PTR [ebx+0x60926d1d],ah
  433395:	dec    edi
  433396:	aam    0x27
  433398:	scas   al,BYTE PTR es:[edi]
  433399:	(bad)  [eax+0x41e6d199]
  43339f:	pop    ebp
  4333a0:	pusha  
  4333a1:	dec    edi
  4333a2:	clc    
  4333a3:	add    BYTE PTR [esi],bl
  4333a5:	scas   al,BYTE PTR es:[edi]
  4333a6:	fld    DWORD PTR [eax]
  4333a8:	adc    edx,edx
  4333aa:	jp     0x4333ef
  4333ac:	mov    ecx,esp
  4333ae:	inc    eax
  4333af:	cld    
  4333b0:	sysexit 
  4333b2:	in     eax,dx
  4333b3:	inc    ecx
  4333b4:	lods   eax,DWORD PTR ds:[esi]
  4333b5:	jmp    0x5de033bd
  4333ba:	push   cs
  4333bb:	test   eax,esp
  4333bd:	aad    0x7a
  4333bf:	push   ebx
  4333c0:	gs popa 
  4333c2:	cmp    eax,0x4d77cc18
  4333c7:	call   0x4112bc
  4333cc:	es pop ss
  4333ce:	in     al,dx
  4333cf:	xchg   edx,esp
  4333d1:	sar    DWORD PTR [edx+0x43],1
  4333d4:	dec    ecx
  4333d5:	add    edi,DWORD PTR [edi]
  4333d7:	cld    
  4333d8:	sahf   
  4333d9:	jns    0x43335d
  4333db:	jnp    0x433416
  4333dd:	jmp    0xf380:0xe525537c
  4333e4:	nop
  4333e5:	jmp    0x2ef18e7
  4333ea:	outs   dx,BYTE PTR ds:[esi]
  4333eb:	inc    edx
  4333ec:	mov    ebp,0x9c6fa785
  4333f1:	ret    
  4333f2:	daa    
  4333f3:	or     BYTE PTR [ebp-0x23fc18fe],bl
  4333f9:	inc    ebx
  4333fa:	daa    
  4333fb:	add    al,0x9d
  4333fd:	add    ah,bh
  4333ff:	ret    0x39c
  433402:	out    0x3,eax
  433404:	popf   
  433405:	shl    DWORD PTR [edx],cl
  433407:	adc    al,0x0
  433409:	popf   
  43340a:	repnz out 0x3,al
  43340d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43340e:	xchg   BYTE PTR [edi+0x3],ch
  433411:	popf   
  433412:	add    ah,BYTE PTR [esi+0x68]
  433415:	rol    DWORD PTR [edx],0xda
  433418:	jg     0x433414
  43341a:	or     eax,0xc28003e7
  43341f:	ins    BYTE PTR es:[edi],dx
  433420:	pop    edi
  433421:	add    DWORD PTR [edx],0xf291b1e2
  433427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433428:	jl     0x433408
  43342a:	(bad)  
  43342b:	outs   dx,BYTE PTR ds:[esi]
  43342c:	inc    edx
  43342d:	mov    ebp,0x1edfac89
  433432:	ret    0x249b
  433435:	sbb    BYTE PTR [edx-0x3d],cl
  433438:	jl     0x433420
  43343a:	mov    dh,0x6c
  43343c:	mov    esp,0x3a6df3e9
  433441:	fst    QWORD PTR [edi]
  433443:	lahf   
  433444:	sbb    esi,eax
  433446:	or     ebx,DWORD PTR [esi+0x50]
  433449:	jno    0x4333d3
  43344b:	sub    al,0xe0
  43344d:	and    eax,0xdce8ed06
  433452:	inc    edx
  433453:	pop    esi
  433454:	dec    edi
  433455:	inc    ebp
  433456:	jg     0x4334a4
  433458:	loopne 0x4333f7
  43345a:	push   esi
  43345b:	out    dx,eax
  43345c:	jl     0x43343c
  43345e:	(bad)  
  43345f:	(bad)  
  433460:	sub    DWORD PTR ds:[eax+0x0],edx
  433464:	jbe    0x433492
  433466:	inc    ecx
  433467:	adc    cl,ch
  433469:	mov    al,ds:0x1d0002
  43346e:	lods   al,BYTE PTR ds:[esi]
  43346f:	test   DWORD PTR [ebx-0x6b],ecx
  433472:	mov    BYTE PTR [edi],ch
  433474:	clc    
  433475:	bound  ebx,QWORD PTR [edx+edi*8+0x4e]
  433479:	cmp    edx,DWORD PTR [ecx-0x16]
  43347c:	mov    ds:0x85029edd,eax
  433481:	adc    al,0xf9
  433483:	add    BYTE PTR [ecx-0x2f],0x61
  433487:	aas    
  433488:	hlt    
  433489:	rcr    BYTE PTR [ebx+0x1838fdde],0x57
  433490:	in     al,0xe9
  433492:	inc    edi
  433493:	das    
  433494:	clc    
  433495:	out    0x43,al
  433497:	aas    
  433498:	or     ebp,ecx
  43349a:	sahf   
  43349b:	in     eax,0xa
  43349d:	jb     0x4334fb
  43349f:	and    al,BYTE PTR [ebx-0x3efed2d7]
  4334a5:	test   eax,0xe9000282
  4334aa:	sahf   
  4334ab:	ret    
  4334ac:	add    ecx,esi
  4334ae:	sahf   
  4334af:	add    al,BYTE PTR [eax]
  4334b1:	push   ss
  4334b2:	fdivr  st(2),st
  4334b4:	(bad)  
  4334b5:	jmp    0xdd21:0xcc74029e
  4334bc:	adc    BYTE PTR [edx-0x6a],bh
  4334bf:	lea    edx,[ebp+0x29ee9]
  4334c5:	push   0xfffffffa
  4334c7:	(bad)  
  4334c8:	add    dh,bl
  4334ca:	fimul  DWORD PTR [ecx]
  4334cc:	or     ebp,ecx
  4334ce:	sahf   
  4334cf:	or     esi,DWORD PTR [edx+0x4e3500eb]
  4334d5:	cld    
  4334d6:	bound  eax,QWORD PTR [eax+ecx*8]
  4334d9:	loopne 0x433506
  4334db:	and    ch,al
  4334dd:	or     BYTE PTR [eax],al
  4334df:	lods   eax,DWORD PTR ds:[esi]
  4334e0:	dec    eax
  4334e1:	clc    
  4334e2:	add    edi,esp
  4334e4:	jle    0x4334dc
  4334e6:	adc    BYTE PTR [esi-0x34],ah
  4334e9:	pop    es
  4334ea:	mov    bh,0xbb
  4334ec:	push   es
  4334ed:	xor    ebx,ecx
  4334ef:	or     ebx,DWORD PTR [ecx-0xd]
  4334f2:	sti    
  4334f3:	sub    ebp,ebx
  4334f5:	sub    ebx,ebx
  4334f7:	out    0xd3,eax
  4334f9:	add    DWORD PTR [edi-0x1c],0x58
  4334fd:	shl    BYTE PTR [edx+edx*8+0x56],0x47
  433502:	adc    BYTE PTR ds:0x158301ed,dh
  433508:	add    eax,0x57184881
  43350d:	dec    edi
  43350e:	and    BYTE PTR [ebx-0x4bfecfc1],al
  433514:	add    eax,0x37b46a00
  433519:	add    BYTE PTR [edx-0x3c],ch
  43351c:	mov    ebp,0x5c413fe
  433521:	or     DWORD PTR [ebp-0x54],0x56
  433525:	dec    ebp
  433526:	clc    
  433527:	cmp    eax,0x45891842
  43352c:	adc    eax,0x58f07bf
  433531:	add    BYTE PTR [eax],al
  433533:	lods   eax,DWORD PTR ds:[esi]
  433534:	adc    DWORD PTR [eax+eax*1],ecx
  433537:	add    BYTE PTR [esi+edi*2-0xa],dh
  43353b:	and    BYTE PTR [edi],dl
  43353d:	pop    ds
  43353e:	jnp    0x4335bd
  433540:	cwde   
  433541:	add    eax,0xd1ff8407
  433546:	stc    
  433547:	(bad)  
  433548:	jnp    0x4334dd
  43354a:	cli    
  43354b:	(bad)  
  43354c:	cmp    ecx,esp
  43354e:	or     esi,0x17
  433551:	fidivr WORD PTR [edx]
  433553:	add    DWORD PTR [edx],0xffffffd6
  433556:	adc    BYTE PTR [ebp-0x63],0xb3
  43355a:	std    
  43355b:	xlat   BYTE PTR ds:[ebx]
  43355c:	push   ds
  43355d:	leave  
  43355e:	and    al,0x6e
  433560:	push   ebx
  433561:	push   esp
  433562:	mov    ch,0x85
  433564:	pop    esi
  433565:	stos   BYTE PTR es:[edi],al
  433566:	in     al,0x10
  433568:	sbb    al,0xca
  43356a:	add    al,0xf9
  43356c:	popf   
  43356d:	jmp    0x43356d
  43356f:	(bad)  
  433570:	lods   al,BYTE PTR es:[esi]
  433572:	ret    
  433573:	call   0x926e00d
  433578:	mov    eax,0x9d00e2eb
  43357d:	in     al,dx
  43357e:	les    eax,FWORD PTR [ebp-0x1a3b2ca0]
  433584:	test   esp,ebp
  433586:	mov    esi,0x7cb35a87
  43358b:	aas    
  43358c:	lea    ebx,[esi+eax*8-0x6d834d3]
  433593:	add    eax,0x7cfdeb9d
  433598:	inc    edx
  433599:	(bad)  
  43359b:	or     BYTE PTR [eax],al
  43359d:	and    DWORD PTR [ecx-0xb],ecx
  4335a0:	push   DWORD PTR [edx-0x629a024c]
  4335a6:	mov    ch,0xfd
  4335a8:	out    0x50,eax
  4335aa:	loope  0x4335a9
  4335ac:	jmp    DWORD PTR [esi]
  4335ae:	outs   dx,DWORD PTR ds:[esi]
  4335af:	cmc    
  4335b0:	xchg   dl,bl
  4335b2:	add    DWORD PTR [ebx+0x3e],edi
  4335b5:	int    0x54
  4335b7:	dec    edi
  4335b8:	clc    
  4335b9:	pop    edx
  4335ba:	jmp    0xeabe35b5
  4335bf:	jle    0x43363c
  4335c1:	mov    eax,ds:0x8983f2e6
  4335c6:	in     eax,0xfd
  4335c8:	call   FWORD PTR [esi]
  4335ca:	dec    edi
  4335cb:	icebp  
  4335cc:	add    DWORD PTR [edx-0x62f3f1a3],ebp
  4335d2:	add    ah,bh
  4335d4:	add    ah,0xfe
  4335d7:	out    0x6f,al
  4335d9:	test   eax,0x5a82a18b
  4335de:	add    BYTE PTR [esi-0x552e8726],dh
  4335e4:	(bad)  
  4335e5:	nop
  4335e6:	add    ah,bh
  4335e8:	add    edi,DWORD PTR [edx]
  4335ea:	jge    0x4335ca
  4335ec:	add    ebx,DWORD PTR [ebp-0x7ffd567d]
  4335f2:	sub    al,0x8e
  4335f4:	std    
  4335f5:	pop    ss
  4335f6:	jl     0x4335df
  4335f8:	add    ebx,DWORD PTR [ebp-0x69799fe]
  4335fe:	add    bl,dl
  433600:	jg     0x433602
  433602:	ror    BYTE PTR [ebx],cl
  433604:	out    0x3,eax
  433606:	xchg   esp,eax
  433607:	nop
  433608:	in     eax,0xe6
  43360a:	push   esi
  43360b:	(bad)  
  43360c:	pop    esi
  43360d:	mov    ch,0xe8
  43360f:	loop   0x433636
  433611:	sbb    edi,0xa
  433614:	jo     0x433666
  433616:	lds    eax,FWORD PTR [ebx]
  433618:	aas    
  433619:	add    bh,0x3
  43361c:	aad    0xc5
  43361e:	and    ah,cl
  433620:	cmp    dl,bl
  433622:	sbb    ah,al
  433624:	data16 in al,0xaa
  433627:	test   BYTE PTR [edi+0x2],al
  43362a:	sbb    cl,BYTE PTR [eax-0x15]
  43362d:	adc    BYTE PTR [ebp-0x6bb14dfd],0x1e
  433634:	ins    BYTE PTR es:[edi],dx
  433635:	push   ebx
  433636:	rol    DWORD PTR [ebx-0x19],0xc4
  43363a:	js     0x433640
  43363c:	sub    bh,dh
  43363e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43363f:	add    ah,bh
  433641:	add    esi,eax
  433643:	call   0xbe8132e
  433648:	out    0x3,eax
  43364a:	sbb    BYTE PTR [edi-0x2e28ff00],bh
  433650:	stc    
  433651:	out    dx,al
  433652:	sbb    al,0x5b
  433654:	or     al,0xef
  433656:	or     DWORD PTR [ecx],eax
  433658:	or     eax,0x73029ee9
  43365d:	add    eax,0x69fedd5e
  433662:	dec    ebx
  433663:	aad    0xe8
  433665:	inc    esi
  433666:	add    BYTE PTR [edi+edx*8],ah
  433669:	stc    
  43366a:	test   al,0x44
  43366c:	fadd   st,st(2)
  43366e:	out    dx,al
  43366f:	scas   al,BYTE PTR es:[edi]
  433670:	add    al,BYTE PTR [eax]
  433672:	jmp    0x90412294
  433677:	mov    cl,0xfd
  433679:	(bad)  
  43367a:	call   0xae4b7a04
  43367f:	popa   
  433680:	cli    
  433681:	inc    ebx
  433682:	adc    al,0x59
  433684:	add    al,cl
  433686:	out    dx,al
  433687:	mov    ds:0xdfe90002,eax
  43368c:	fdiv   st(6),st
  43368e:	imul   esi,ebx,0xd774e8d4
  433694:	(bad)  
  433695:	stc    
  433696:	jb     0x4336ab
  433698:	push   ebp
  433699:	(bad)  
  43369b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43369c:	out    0xcd,eax
  43369e:	inc    edx
  43369f:	sbb    al,0xdc
  4336a1:	and    dl,bl
  4336a3:	jl     0x4336fa
  4336a5:	jnp    0x4336ec
  4336a7:	mov    eax,ds:0xa4028409
  4336ac:	(bad)  
  4336ad:	stc    
  4336ae:	out    0x48,al
  4336b0:	aad    0xfa
  4336b2:	pushf  
  4336b3:	jp     0x433635
  4336b5:	retf   0x813a
  4336b8:	adc    eax,0x7d81277d
  4336bd:	push   ebx
  4336be:	adc    DWORD PTR [edx+edi*4+0x64b90f7d],ebx
  4336c5:	fiadd  DWORD PTR [eax]
  4336c7:	out    dx,eax
  4336c8:	fwait
  4336c9:	add    ebx,0x0
  4336cc:	imul   esi,DWORD PTR [ecx+0x253ff1d],0x0
  4336d3:	rcr    DWORD PTR [ebp+0x53c132ee],0x55
  4336da:	adc    edi,edx
  4336dc:	arpl   di,bx
  4336de:	sub    ebx,ebx
  4336e0:	xchg   edi,eax
  4336e1:	in     al,0x7b
  4336e3:	jge    0x433735
  4336e5:	fadd   DWORD PTR [edx-0x688bb9]
  4336eb:	or     eax,0xf000234
  4336f0:	mov    bh,ah
  4336f2:	add    al,BYTE PTR [eax]
  4336f4:	add    al,0x97
  4336f6:	dec    DWORD PTR [esi]
  4336f8:	hlt    
  4336f9:	add    DWORD PTR [eax],eax
  4336fb:	mov    edi,DWORD PTR [ebx+0x1845813e]
  433701:	push   ebp
  433702:	ror    BYTE PTR [edi],0x78
  433705:	dec    ecx
  433706:	(bad)  
  433707:	push   esp
  433709:	pop    edx
  43370a:	inc    ebp
  43370b:	cld    
  43370c:	ffreep st(0)
  43370e:	outs   dx,BYTE PTR ds:[esi]
  43370f:	add    eax,0x4d81c03f
  433714:	dec    eax
  433715:	pop    edx
  433716:	inc    ebp
  433717:	lock jg 0x4336db
  43371a:	outs   dx,BYTE PTR ds:[esi]
  43371b:	add    eax,0x4581c04f
  433720:	pop    eax
  433721:	push   esp
  433722:	ror    BYTE PTR [edi],0x38
  433725:	ret    
  433726:	add    al,BYTE PTR [eax]
  433728:	mov    ah,0x5a
  43372a:	inc    ebp
  43372b:	hlt    
  43372c:	das    
  43372d:	inc    esp
  43372e:	clc    
  43372f:	mov    eax,DWORD PTR [eax]
  433731:	dec    ecx
  433732:	mov    ecx,0xb9345249
  433737:	js     0x43371f
  433739:	ret    
  43373a:	fiadd  WORD PTR [ebx+0x3d00a845]
  433740:	clc    
  433741:	popf   
  433742:	ret    0xfc3a
  433745:	les    ebx,FWORD PTR [esi-0xc1e0013]
  43374b:	ja     0x4337a0
  43374d:	gs push 0xa4840cb9
  433753:	cmp    eax,0xfde18be7
  433758:	call   FWORD PTR [esi]
  43375a:	fisttp QWORD PTR [esi]
  43375c:	ins    DWORD PTR es:[edi],dx
  43375d:	jnp    0x4337c5
  43375f:	push   0x5f689d24
  433764:	cld    
  433765:	popf   
  433766:	mov    ah,0x81
  433768:	jg     0x433701
  43376a:	jmp    0x433769
  43376c:	or     bl,ch
  43376e:	call   0x605c8351
  433773:	into   
  433774:	int    0xfd
  433776:	sub    BYTE PTR [ecx+0x375295c2],al
  43377c:	clc    
  43377d:	sahf   
  43377e:	ret    
  43377f:	cmp    edx,0x85bdf9ab
  433785:	out    0x67,al
  433787:	jecxz  0x4337a2
  433789:	fsubr  QWORD PTR [edi+0x7]
  43378c:	jg     0x43376a
  43378e:	jmp    0x60e03797
  433793:	rol    DWORD PTR [edi-0x3cf49e00],0xe5
  43379a:	mov    al,ds:0xbd7dc950
  43379f:	rol    DWORD PTR [edx-0x7d545521],cl
  4337a5:	mov    edi,0x4e92a99
  4337aa:	push   ds
  4337ab:	sub    eax,0xcb227f0e
  4337b0:	(bad)  
  4337b1:	(bad)  
  4337b2:	call   0x4d62:0xf9418cea
  4337b9:	pop    esp
  4337ba:	call   0x1ad4:0x8a206a02
  4337c1:	xchg   DWORD PTR [ebp-0xb],esi
  4337c4:	loope  0x433750
  4337c6:	rcr    cl,0xa
  4337c9:	jecxz  0x433827
  4337cb:	cmp    al,0x8f
  4337cd:	add    ebx,DWORD PTR [ebp-0x633518fe]
  4337d3:	icebp  
  4337d4:	out    0x3,al
  4337d6:	popf   
  4337d7:	xchg   DWORD PTR [edx+0x4343906b],ebx
  4337dd:	push   edi
  4337de:	shl    edi,cl
  4337e0:	out    0x90,al
  4337e2:	loop   0x4337e6
  4337e4:	data16 loope 0x433817
  4337e7:	push   ecx
  4337e8:	add    eax,0xe7d6a687
  4337ed:	adc    bl,BYTE PTR [ecx]
  4337ef:	xlat   BYTE PTR ds:[ebx]
  4337f0:	lock add ebx,DWORD PTR [ebp+0x14057903]
  4337f7:	inc    esi
  4337f8:	stos   DWORD PTR es:[edi],eax
  4337f9:	mov    es,WORD PTR [eax]
  4337fb:	xlat   BYTE PTR ds:[ebx]
  4337fc:	scas   eax,DWORD PTR es:[edi]
  4337fd:	xchg   DWORD PTR [ebp-0x80],eax
  433800:	mov    esp,0xda4e8cef
  433805:	out    0xbb,al
  433807:	jo     0x4337dd
  433809:	out    0x55,al
  43380b:	mov    DWORD PTR [edi-0x746b93d6],0x1fad48e3
  433815:	daa    
  433816:	add    al,0x18
  433818:	enter  0xe466,0x9c
  43381c:	pop    esp
  43381d:	jo     0x43386e
  43381f:	pop    esp
  433820:	push   edx
  433821:	pop    edx
  433822:	dec    edx
  433823:	inc    ebp
  433824:	xchg   DWORD PTR [edx-0x19180d95],esp
  43382a:	xchg   BYTE PTR [edi+0x4152fdff],dh
  433830:	push   eax
  433831:	jbe    0x4337ce
  433833:	test   al,0x2
  433835:	add    cl,ch
  433837:	sahf   
  433838:	or     eax,DWORD PTR [ecx-0x3f]
  43383b:	repz cmc 
  43383d:	in     al,0xee
  43383f:	sub    eax,0x9ee9249e
  433844:	add    al,BYTE PTR [eax]
  433846:	bound  esi,QWORD PTR [edi-0x65a9f696]
  43384c:	das    
  43384d:	adc    dl,cl
  43384f:	fiadd  WORD PTR [edx]
  433851:	sub    eax,0x547bc41b
  433856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433857:	out    dx,al
  433858:	fld    DWORD PTR [ecx-0x7f]
  43385b:	test   eax,0x5b6841
  433860:	aaa    
  433861:	xchg   DWORD PTR [ecx+0x2a219],eax
  433867:	fs int3 
  433869:	xchg   ax,bp
  43386c:	pop    ss
  43386d:	inc    ecx
  43386e:	dec    esp
  43386f:	je     0x433815
  433871:	sar    dh,cl
  433873:	call   0x2ece7d16
  433878:	aad    0x32
  43387a:	dec    edi
  43387b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43387c:	mov    eax,ds:0x9ee90001
  433881:	pop    esp
  433882:	or     eax,0x5052646c
  433887:	add    ebx,DWORD PTR [ecx-0x61275816]
  43388d:	add    al,BYTE PTR [ebp-0x3bab3ee4]
  433893:	loope  0x4338bc
  433895:	aas    
  433896:	fsubr  DWORD PTR [ecx+ebx*8+0x8]
  43389a:	add    DWORD PTR [ecx+ebx*4+0x54700002],0x6a
  4338a2:	shl    esi,0xb0
  4338a5:	sar    cl,cl
  4338a7:	jmp    0xeaa779cd
  4338ac:	push   ebp
  4338ad:	bound  esi,QWORD PTR [edi]
  4338af:	add    bl,dh
  4338b1:	popw   es
  4338b3:	and    DWORD PTR [edi-0xfffff8],0x33
  4338ba:	push   esp
  4338bb:	mov    eax,0x675
  4338c0:	(bad)  
  4338c1:	out    0x83,al
  4338c3:	dec    edi
  4338c4:	add    BYTE PTR [eax+0x3e],cl
  4338c7:	sbb    eax,ebx
  4338c9:	(bad)  
  4338ca:	cli    
  4338cb:	js     0x433858
  4338cd:	mov    esp,0x6b08e1c5
  4338d2:	ins    BYTE PTR es:[edi],dx
  4338d3:	ror    DWORD PTR [ecx-0x31cc45ff],0xd2
  4338da:	and    bh,BYTE PTR [ebx+0x7d]
  4338dd:	cmp    BYTE PTR [esi],al
  4338df:	pop    es
  4338e0:	test   BYTE PTR [ebx-0x3],cl
  4338e3:	(bad)  
  4338e4:	dec    DWORD PTR [ebx+0x6c]
  4338e7:	cli    
  4338e8:	(bad)  
  4338e9:	jns    0x4338cd
  4338eb:	or     esi,0xffffffe7
  4338ee:	in     eax,0x83
  4338f0:	dec    edi
  4338f1:	or     BYTE PTR [eax+0x7b],0xc6
  4338f5:	or     al,0x7
  4338f7:	fdivr  DWORD PTR [eax+0x605]
  4338fd:	daa    
  4338fe:	out    0x83,al
  433900:	dec    edi
  433901:	enter  0x4d7d,0xf8
  433905:	lods   al,BYTE PTR ds:[esi]
  433906:	daa    
  433907:	mov    ebx,0x8385008b
  43390c:	enter  0xdd35,0x8
  433910:	cpuid  
  433912:	mov    esp,0xee504581
  433917:	lds    esi,FWORD PTR [edi+0x5]
  43391a:	jg     0x4338e4
  43391c:	rcr    DWORD PTR ds:0xc4f97cd6,0x36
  433923:	dec    edi
  433924:	mov    ebp,DWORD PTR [esp+eax*8-0x1f]
  433928:	or     BYTE PTR [eax],al
  43392a:	popf   
  43392b:	call   0x2aaa00c7
  433930:	push   esp
  433931:	xor    BYTE PTR [esi-0x3e5b7520],dh
  433937:	(bad)  
  433939:	call   FWORD PTR [ebp-0x6203a5a4]
  43393f:	mov    al,0x81
  433941:	scas   eax,DWORD PTR es:[edi]
  433942:	xchg   ebp,eax
  433943:	(bad)  
  433945:	or     BYTE PTR [ebx],dh
  433947:	fucom  st(0)
  433949:	dec    ebx
  43394a:	jno    0x4339b0
  43394c:	iret   
  43394d:	int    0x7d
  43394f:	popf   
  433950:	test   dl,al
  433952:	xchg   ebp,eax
  433953:	push   edx
  433954:	xor    bh,al
  433956:	sahf   
  433957:	and    ecx,DWORD PTR [ebx+eax*2-0x336817b7]
  43395e:	xchg   dl,cl
  433960:	push   esp
  433961:	xlat   BYTE PTR ds:[ebx]
  433962:	xchg   edx,eax
  433963:	jno    0x433935
  433965:	test   edx,esp
  433967:	xor    ebp,DWORD PTR [ebp+0x62aa86e5]
  43396d:	test   eax,ebx
  43396f:	mov    ecx,0x20d18762
  433974:	push   esp
  433975:	stc    
  433976:	bound  esi,QWORD PTR [ebx]
  433978:	jmp    0x4339c8
  43397a:	pushf  
  43397b:	(bad)  
  43397d:	popa   
  43397e:	push   ss
  43397f:	out    dx,al
  433980:	shl    DWORD PTR [edx+0x1e],1
  433983:	mov    ds:0xe08572f4,al
  433988:	xchg   ebx,eax
  433989:	int3   
  43398a:	and    BYTE PTR [edx],bl
  43398c:	inc    BYTE PTR [esi+0x159f5800]
  433992:	lock outs dx,BYTE PTR ds:[esi]
  433994:	mov    ecx,0xdb81a490
  433999:	std    
  43399a:	call   FWORD PTR [ebp-0x6203a0a4]
  4339a0:	mov    al,0x81
  4339a2:	dec    edi
  4339a3:	xchg   ebp,eax
  4339a4:	add    ah,bh
  4339a6:	add    esp,DWORD PTR [eax+ebx*4-0x3199211b]
  4339ad:	pop    esi
  4339ae:	into   
  4339af:	fsub   st,st(1)
  4339b1:	pop    esi
  4339b2:	push   ecx
  4339b3:	rol    DWORD PTR [ebx+0x66],0xc6
  4339b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4339b8:	add    ebx,DWORD PTR [edi]
  4339ba:	xchg   ecx,eax
  4339bb:	rol    BYTE PTR [eax+eiz*2],cl
  4339be:	cmp    DWORD PTR [ebp+0x6a52370c],eax
  4339c4:	jl     0x433970
  4339c6:	imul   ebp,DWORD PTR [eax-0x24],0xffffffce
  4339ca:	aam    0x1e
  4339cc:	ret    
  4339cd:	loop   0x433956
  4339cf:	sub    al,0x8
  4339d1:	out    0x3,eax
  4339d3:	xchg   esp,eax
  4339d4:	xchg   edi,eax
  4339d5:	mov    bl,0x46
  4339d7:	(bad)  
  4339d8:	jnp    0x433a00
  4339da:	cmp    DWORD PTR ds:0x48c46604,0xffffffc3
  4339e1:	inc    BYTE PTR [ecx]
  4339e3:	sbb    bh,BYTE PTR [esi]
  4339e5:	retf   
  4339e6:	mov    esi,ds
  4339e8:	(bad)  
  4339e9:	in     ax,dx
  4339eb:	xor    ebx,ebx
  4339ed:	jle    0x4339f2
  4339ef:	popf   
  4339f0:	add    al,BYTE PTR [ecx-0x7d]
  4339f3:	add    BYTE PTR [edx],ch
  4339f5:	repnz icebp 
  4339f7:	xchg   ebp,eax
  4339f8:	jmp    0x8f036676
  4339fd:	inc    eax
  4339fe:	fs inc esp
  433a00:	or     BYTE PTR ds:0xdbcd52b7,cl
  433a06:	jmp    0x9d03:0xe7274190
  433a0d:	add    ah,BYTE PTR [esi+0x60]
  433a10:	jmp    0xc2cb1417
  433a15:	pop    es
  433a16:	out    0x3,eax
  433a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433a19:	cwde   
  433a1a:	in     eax,0xde
  433a1c:	data16 into 
  433a1e:	add    BYTE PTR [edx-0x28],ah
  433a21:	mov    ebp,0xae6d62e0
  433a26:	ds push 0xffffffe0
  433a29:	cli    
  433a2a:	cld    
  433a2b:	inc    eax
  433a2c:	or     eax,0x655ffd10
  433a31:	retf   0x5935
  433a34:	dec    esp
  433a35:	mov    bh,0xcd
  433a37:	push   edx
  433a38:	daa    
  433a39:	lea    edi,[ebp+0x49]
  433a3c:	fwait
  433a3d:	dec    ebp
  433a3e:	shr    dl,0x19
  433a41:	inc    ebx
  433a42:	hlt    
  433a43:	sub    BYTE PTR [edi-0x33],dh
  433a46:	mov    cl,0x24
  433a48:	pop    ebx
  433a49:	leave  
  433a4a:	stc    
  433a4b:	adc    bl,bh
  433a4d:	jnp    0x433a8e
  433a4f:	out    dx,al
  433a50:	xchg   edx,edx
  433a52:	ins    DWORD PTR es:[edi],dx
  433a53:	(bad)  
  433a54:	pop    ds
  433a55:	dec    ebx
  433a56:	cld    
  433a57:	jmp    0x9cc9e55c
  433a5c:	out    0x9e,al
  433a5e:	add    cl,BYTE PTR [ecx]
  433a60:	aas    
  433a61:	pushf  
  433a62:	leave  
  433a63:	dec    ebx
  433a64:	in     eax,dx
  433a65:	adc    al,0xbc
  433a67:	int    0xc9
  433a69:	and    al,0x3b
  433a6b:	fsubr  QWORD PTR [ebx]
  433a6d:	sbb    al,0xc4
  433a6f:	or     dl,ch
  433a71:	out    0x7a,al
  433a73:	aas    
  433a74:	out    0x17,al
  433a76:	xor    edi,eax
  433a78:	add    dh,cl
  433a7a:	pop    edi
  433a7b:	xlat   BYTE PTR ds:[ebx]
  433a7c:	call   0x4901:0x6abd8504
  433a83:	jge    0x433a2e
  433a85:	xchg   esp,eax
  433a86:	xchg   DWORD PTR [ebx-0x63],eax
  433a89:	fsubrp st(4),st
  433a8b:	add    DWORD PTR [ecx-0x2a],esp
  433a8e:	enter  0x96f9,0xb4
  433a92:	(bad)  
  433a93:	std    
  433a94:	cwde   
  433a95:	adc    al,0x43
  433a97:	hlt    
  433a98:	add    BYTE PTR [ebx],cl
  433a9a:	inc    edi
  433a9b:	in     al,0x0
  433a9d:	les    eax,FWORD PTR [edx]
  433a9f:	add    BYTE PTR [ebx-0x3804a17d],cl
  433aa5:	aas    
  433aa6:	inc    ebp
  433aa7:	add    ecx,DWORD PTR fs:[ebx]
  433aaa:	arpl   WORD PTR [ebx],si
  433aac:	enter  0x85c3,0xc6
  433ab0:	add    dh,BYTE PTR [edx+eax*1+0x6487d7b]
  433ab7:	je     0x433ad5
  433ab9:	cmovbe esp,esp
  433abc:	jmp    0x433abe
  433abe:	xchg   DWORD PTR [ebp+0x41],edi
  433ac1:	add    bh,bh
  433ac3:	aas    
  433ac4:	push   0x5eb621ff
  433ac9:	mov    DWORD PTR [eax+0x3f],ecx
  433acc:	jo     0x433acd
  433ace:	cmp    ebx,DWORD PTR [edx+0x7b]
  433ad1:	jge    0x433a5b
  433ad3:	push   es
  433ad4:	ins    DWORD PTR es:[edi],dx
  433ad5:	in     al,dx
  433ad6:	inc    DWORD PTR [edi+0x64]
  433ad9:	add    ecx,DWORD PTR [ebx]
  433adb:	bound  esi,QWORD PTR [ecx]
  433add:	inc    edi
  433ade:	sub    al,0xff
  433ae0:	jns    0x433abf
  433ae2:	push   ecx
  433ae3:	scas   eax,DWORD PTR es:[edi]
  433ae4:	test   DWORD PTR [ebx-0x7bf7330d],0x815
  433aee:	fiadd  DWORD PTR [ebx+0x23670b7]
  433af4:	add    BYTE PTR [eax],al
  433af6:	inc    ebx
  433af7:	xchg   BYTE PTR [ebx-0x7afdfbfa],cl
  433afd:	xchg   DWORD PTR [eax*1+0x3e810000],edx
  433b04:	ins    BYTE PTR es:[edi],dx
  433b05:	mov    ebp,esi
  433b07:	js     0x433b48
  433b09:	dec    esp
  433b0a:	jno    0x433b62
  433b0c:	lock add al,BYTE PTR [edx+eax*1]
  433b10:	dec    edx
  433b11:	mov    ebx,DWORD PTR [ebp+0x5a8b640c]
  433b17:	pop    ss
  433b18:	xor    al,0x4f
  433b1a:	loop   0x433af7
  433b1c:	push   es
  433b1d:	add    BYTE PTR [ebp+0x8b2fdb],bl
  433b23:	(bad)  
  433b24:	retf   
  433b25:	sub    eax,0xf4839c66
  433b2a:	sub    BYTE PTR [ebp-0x6a3b7f25],bl
  433b30:	push   edx
  433b31:	inc    edx
  433b32:	fsub   DWORD PTR [eax]
  433b34:	sbb    al,0xc
  433b36:	and    DWORD PTR [eax],0x36
  433b39:	fdiv   st(1),st
  433b3b:	es ins BYTE PTR es:[edi],dx
  433b3d:	imul   ecx,DWORD PTR [ebx+0x5186bfe2],0xf07466ed
  433b47:	lahf   
  433b48:	(bad)  
  433b4a:	dec    ebp
  433b4b:	sub    BYTE PTR [ebp+esi*1+0x4c50cc50],bl
  433b52:	pusha  
  433b53:	(bad)  
  433b54:	fild   DWORD PTR [ebx]
  433b56:	add    BYTE PTR [ebp-0x3ebe7725],bl
  433b5c:	imul   ecx,DWORD PTR [edx+0x2f4be254],0x66
  433b63:	lahf   
  433b64:	add    edi,DWORD PTR [eax-0x7f2462d6]
  433b6a:	les    edx,FWORD PTR [ebp+0x18d83f52]
  433b70:	fwait
  433b71:	add    eax,0xd5af4983
  433b76:	stc    
  433b77:	push   ds
  433b78:	or     BYTE PTR ds:[edx],al
  433b7b:	es out dx,al
  433b7d:	fcmovnb st,st(1)
  433b7f:	call   0x79e4:0x9dfffda8
  433b86:	jae    0x433b88
  433b88:	(bad)  
  433b8b:	shl    BYTE PTR [edx-0x62fc04fe],0x2
  433b92:	pop    cx
  433b94:	jmp    0x62ad509c
  433b99:	dec    edi
  433b9a:	xchg   edi,eax
  433b9b:	push   es
  433b9c:	fcmove st,st(4)
  433b9e:	out    0x55,eax
  433ba0:	ds jns 0x433bc7
  433ba3:	or     al,0x20
  433ba5:	aas    
  433ba6:	jg     0x433b37
  433ba8:	outs   dx,BYTE PTR ds:[esi]
  433ba9:	shl    BYTE PTR [eax+0x4c],cl
  433bac:	test   eax,0x1adbb479
  433bb1:	cli    
  433bb2:	ins    DWORD PTR es:[edi],dx
  433bb3:	dec    ecx
  433bb4:	mov    ebp,0x19f3b77a
  433bb9:	aaa    
  433bba:	dec    ebx
  433bbb:	xor    eax,0x33eb3322
  433bc0:	sbb    ch,BYTE PTR [edi+edi*8]
  433bc3:	mov    WORD PTR [edi+ecx*1],cs
  433bc6:	aas    
  433bc7:	dec    edi
  433bc8:	mov    esp,0xde8ee702
  433bcd:	cli    
  433bce:	ins    DWORD PTR es:[edi],dx
  433bcf:	xor    al,0xa1
  433bd1:	ja     0x433b82
  433bd3:	repz and DWORD PTR [edi+ecx*8],ebp
  433bd7:	mov    gs,esp
  433bd9:	push   cs
  433bda:	pusha  
  433bdb:	xor    DWORD PTR [ebp+0x78],eax
  433bde:	xlat   BYTE PTR ds:[ebx]
  433bdf:	mov    ds,ebp
  433be1:	push   es
  433be2:	data16 rcl BYTE PTR [ebp+0x1a0eb27f],0x3e
  433bea:	test   DWORD PTR [eax+eax*1+0x4070cace],0xa763fc31
  433bf5:	sahf   
  433bf6:	add    ah,bh
  433bf8:	ret    0xc71c
  433bfb:	out    dx,al
  433bfc:	add    ebx,DWORD PTR [ebp+0x14dac2cb]
  433c02:	ficomp DWORD PTR [eax+eax*1-0x63]
  433c06:	add    al,BYTE PTR [eax]
  433c08:	bound  edx,QWORD PTR [edi+0x36]
  433c0b:	mov    eax,0x29ee8
  433c10:	mov    edx,0xa581c1fe
  433c15:	jmp    0x433be2
  433c17:	stc    
  433c18:	jmp    0x21433ebb
  433c1d:	or     BYTE PTR [ebp+0x4223b185],0x4c
  433c24:	jb     0x433bf0
  433c26:	add    DWORD PTR [ebp+0x8e3d9a1],0xffffffde
  433c2d:	or     al,0xc4
  433c2f:	xchg   DWORD PTR [edx+eiz*8+0x61d7ca15],ebp
  433c36:	test   ecx,edi
  433c38:	push   0x45
  433c3a:	into   
  433c3b:	add    dh,bl
  433c3d:	sbb    cl,BYTE PTR [ebx+eax*1-0x4e066117]
  433c44:	jmp    0x433cad
  433c46:	aaa    
  433c47:	cld    
  433c48:	bound  edx,QWORD PTR [ebp+edi*4-0x20]
  433c4c:	(bad)  
  433c4d:	out    0x36,eax
  433c4f:	ds push 0x0
  433c52:	pop    esp
  433c53:	cli    
  433c54:	cld    
  433c55:	inc    eax
  433c56:	push   es
  433c57:	retf   
  433c58:	stc    
  433c59:	jmp    0x6323f9fc
  433c5e:	out    0x3e,eax
  433c60:	xchg   DWORD PTR [esi+esi*2+0x1b2a1d3a],ebx
  433c67:	push   es
  433c68:	jg     0x433ccc
  433c6a:	push   esi
  433c6b:	mov    esp,edi
  433c6d:	loope  0x433c16
  433c6f:	nop
  433c70:	(bad)  
  433c71:	jo     0x433ce5
  433c73:	(bad)  
  433c74:	xor    eax,0x848bccaf
  433c79:	test   eax,0xe9c08694
  433c7e:	sahf   
  433c7f:	add    ch,BYTE PTR [eax+0x7cf95400]
  433c85:	mov    eax,0x8afffef4
  433c8a:	cmp    al,0xbf
  433c8c:	loope  0x433c96
  433c8e:	jge    0x433cd3
  433c90:	aam    0xf
  433c92:	push   edx
  433c93:	mov    bh,0x81
  433c95:	dec    ebp
  433c96:	and    cl,bh
  433c98:	lods   eax,DWORD PTR ds:[esi]
  433c99:	enter  0x43f7,0xe4
  433c9d:	mov    DWORD PTR [ecx-0x3bfe4776],eax
  433ca3:	(bad)  
  433ca4:	call   edx
  433ca6:	adc    al,0x7d
  433ca8:	inc    ebp
  433ca9:	in     al,0x7c
  433cab:	and    eax,0x7d1cd3bb
  433cb0:	inc    ebp
  433cb1:	hlt    
  433cb2:	test   edi,edx
  433cb4:	adc    BYTE PTR [ebx],al
  433cb6:	add    BYTE PTR [ebp+0x7d],dh
  433cb9:	enter  0xf38b,0x42
  433cbd:	add    DWORD PTR [esp+edi*8],0xfffffffb
  433cc1:	lods   eax,DWORD PTR ds:[esi]
  433cc2:	dec    ebp
  433cc3:	mov    al,0x7d
  433cc5:	cmp    eax,0x8d6b5f4
  433cca:	lar    edi,WORD PTR [edi-0x3b903f05]
  433cd1:	outs   dx,BYTE PTR ds:[esi]
  433cd2:	pop    esi
  433cd3:	pop    DWORD PTR [eax*4+0x6749b]
  433cda:	add    bh,dh
  433cdc:	xor    esp,edi
  433cde:	add    BYTE PTR [ebx+0x4a],bh
  433ce1:	sbb    DWORD PTR ds:0xb6070644,eax
  433ce7:	ss ja  0x433cb0
  433cea:	rcl    DWORD PTR [edi+esi*2+0x414bdc45],cl
  433cf1:	cld    
  433cf2:	inc    edx
  433cf3:	inc    edi
  433cf4:	mov    es,WORD PTR [edi]
  433cf6:	mov    dh,0x1
  433cf8:	jge    0x433d37
  433cfa:	in     al,0x9d
  433cfc:	loopne 0x433c8d
  433cfe:	(bad)  
  433cff:	sahf   
  433d00:	mov    ds:0xdc12ff95,eax
  433d05:	std    
  433d06:	int3   
  433d07:	std    
  433d08:	push   esp
  433d09:	inc    edx
  433d0a:	in     al,0x1e
  433d0c:	call   0x1d45:0x93508705
  433d13:	fimul  WORD PTR [ebp+eiz*8-0x49e8cdf7]
  433d1a:	std    
  433d1b:	add    ch,bl
  433d1d:	fs dec eax
  433d1f:	dec    esp
  433d20:	es loopne 0x433da1
  433d23:	xchg   DWORD PTR [eax+0x47],ebx
  433d26:	mov    esi,0x8fd895e8
  433d2b:	rcr    BYTE PTR [esi-0x1cca1fea],0xd0
  433d32:	stos   DWORD PTR es:[edi],eax
  433d33:	or     ebx,ebp
  433d35:	mov    ?,WORD PTR [edx-0x4bd09f7b]
  433d3b:	in     eax,0x76
  433d3d:	sub    al,BYTE PTR [esi-0x22b9e77]
  433d43:	jmp    DWORD PTR [esi]
  433d45:	adc    edi,DWORD PTR [esi-0x70276a19]
  433d4b:	(bad)  
  433d4c:	pushf  
  433d4d:	pusha  
  433d4e:	mov    ecx,0xb4db9d15
  433d53:	in     eax,0xc6
  433d55:	jmp    0xbfc5:0x54814b85
  433d5c:	je     0x433d29
  433d5e:	xchg   BYTE PTR [ecx-0x23],cl
  433d61:	pop    edi
  433d62:	mov    ebp,0x18a673
  433d67:	pop    ss
  433d68:	popf   
  433d69:	(bad)  
  433d6b:	out    0x87,al
  433d6d:	xlat   BYTE PTR ds:[ebx]
  433d6e:	std    
  433d6f:	inc    DWORD PTR ds:0x5a1349bb
  433d75:	add    ch,BYTE PTR [edx-0x40]
  433d78:	nop
  433d79:	add    ah,bh
  433d7b:	(bad)  
  433d7c:	and    al,0xc9
  433d7e:	sar    BYTE PTR [edi-0x19026400],cl
  433d84:	add    ebx,DWORD PTR [ebp-0x62fff725]
  433d8a:	add    cl,BYTE PTR [edi+0x5df98944]
  433d90:	inc    ecx
  433d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433d92:	shl    DWORD PTR [edi],0xfc
  433d95:	pop    esi
  433d96:	dec    edi
  433d97:	daa    
  433d98:	add    al,0x2
  433d9a:	cli    
  433d9b:	loop   0x433da0
  433d9d:	popf   
  433d9e:	stc    
  433d9f:	pop    eax
  433da0:	int3   
  433da1:	pop    eax
  433da2:	jecxz  0x433d7e
  433da4:	mov    WORD PTR [edx+edi*1-0x56],fs
  433da8:	jmp    FWORD PTR [edi+0x1803e702]
  433dae:	inc    ecx
  433daf:	pop    ds
  433db0:	sbb    ebp,0xad1b224d
  433db6:	push   esp
  433db7:	adc    BYTE PTR [ecx+0x3e71e01],cl
  433dbd:	popf   
  433dbe:	add    ah,BYTE PTR [esi+0x59]
  433dc1:	cdq    
  433dc2:	add    ebx,edx
  433dc4:	jg     0x433d98
  433dc6:	(bad)  
  433dc7:	out    0x3,al
  433dc9:	xchg   esp,eax
  433dca:	nop
  433dcb:	in     eax,0xd6
  433dcd:	(bad)  
  433dce:	(bad)  
  433dcf:	pop    esi
  433dd0:	(bad)  
  433dd1:	push   0x5f82a5e3
  433dd6:	sti    
  433dd7:	outs   dx,DWORD PTR ds:[esi]
  433dd8:	xor    DWORD PTR [ebp+0x4],esp
  433ddb:	aas    
  433ddc:	sbb    ebp,esp
  433dde:	cmp    dl,BYTE PTR [ebp-0x60c7df4b]
  433de4:	fwait
  433de5:	add    BYTE PTR [edx-0x38],dl
  433de8:	out    0x3,eax
  433dea:	pop    eax
  433deb:	jecxz  0x433dbb
  433ded:	aam    0xd5
  433def:	and    eax,DWORD PTR [eax]
  433df1:	sub    ah,BYTE PTR [eax+0x461a4041]
  433df7:	enter  0xad8a,0x27
  433dfb:	enter  0x72f9,0xdb
  433dff:	inc    edx
  433e00:	xchg   DWORD PTR [esi-0x1a],esp
  433e03:	in     eax,dx
  433e04:	(bad)  
  433e05:	call   0xe955405d
  433e0a:	sahf   
  433e0b:	add    al,BYTE PTR [ebp-0x753ed2]
  433e11:	call   0xca1040b4
  433e16:	in     ax,0xbc
  433e19:	jb     0x433df1
  433e1b:	jge    0x433e5e
  433e1d:	cmp    DWORD PTR [esi],edx
  433e1f:	inc    DWORD PTR [edi-0x1878199e]
  433e25:	loope  0x433dc2
  433e27:	xchg   esp,eax
  433e28:	(bad)  
  433e29:	jo     0x433e88
  433e2b:	into   
  433e2c:	xor    eax,0x904250af
  433e31:	push   0x55
  433e33:	mov    BYTE PTR [eax],0xde
  433e36:	xor    dh,BYTE PTR [edi-0x6611703]
  433e3c:	mov    cl,0xeb
  433e3e:	retf   
  433e3f:	cmp    edi,esp
  433e41:	bound  esp,QWORD PTR [eax-0x4b]
  433e44:	loopne 0x433ea8
  433e46:	fld    TBYTE PTR [edx]
  433e48:	ds push 0x0
  433e4b:	dec    eax
  433e4c:	cli    
  433e4d:	cld    
  433e4e:	and    BYTE PTR [esi],ah
  433e50:	(bad)  
  433e51:	stc    
  433e52:	jmp    0x6323f3f5
  433e57:	(bad)  [edx]
  433e59:	xchg   DWORD PTR [esi+eax*2+0x172a1d3a],edi
  433e60:	(bad)  
  433e61:	jle    0x433ec5
  433e63:	xchg   di,sp
  433e66:	loope  0x433e03
  433e68:	xchg   esp,eax
  433e69:	mov    DWORD PTR [eax],0x3bf442cd
  433e6f:	jb     0x433ea9
  433e71:	mov    ecx,0x7cfd34a8
  433e76:	mov    al,0x44
  433e78:	add    eax,DWORD PTR [eax]
  433e7a:	mov    ebp,esp
  433e7c:	ret    0x8e1
  433e7f:	lods   eax,DWORD PTR ds:[esi]
  433e80:	aas    
  433e81:	aam    0xf
  433e83:	cmp    bh,BYTE PTR [ebx-0x327b27f]
  433e89:	lods   eax,DWORD PTR ds:[esi]
  433e8a:	enter  0x3ff7,0xe4
  433e8e:	mov    DWORD PTR [ecx+0x401b88a],edi
  433e94:	add    eax,DWORD PTR [eax]
  433e96:	shl    esp,cl
  433e98:	js     0x433edf
  433e9a:	in     al,0xac
  433e9c:	and    DWORD PTR [ebx+0x45790cd3],edi
  433ea2:	hlt    
  433ea3:	add    eax,0x50310db
  433ea8:	jns    0x433e72
  433eaa:	mov    edi,DWORD PTR [ebx+0xe]
  433ead:	add    DWORD PTR [eax+eax*1],0x4c
  433eb1:	std    
  433eb2:	lods   eax,DWORD PTR ds:[esi]
  433eb3:	dec    ebp
  433eb4:	sbb    BYTE PTR [ebx+0x3d],bh
  433eb7:	hlt    
  433eb8:	add    eax,0xa0f08d6
  433ebd:	mov    esi,0x887fc0fb
  433ec2:	outs   dx,BYTE PTR ds:[esi]
  433ec3:	push   esi
  433ec4:	pop    es
  433ec5:	cs cld 
  433ec7:	add    BYTE PTR [ebx+0x46],dh
  433eca:	cmp    DWORD PTR [ebx],eax
  433ecc:	je     0x433ed0
  433ece:	pop    es
  433ecf:	mov    dh,0x76
  433ed1:	jnp    0x433e99
  433ed3:	shl    esp,cl
  433ed5:	jnp    0x433f1c
  433ed7:	fadd   st(3),st
  433ed9:	cmp    eax,0x8a7742fc
  433ede:	pop    es
  433edf:	mov    dh,0xb9
  433ee1:	jns    0x433f20
  433ee3:	in     al,0x9d
  433ee5:	fmul   QWORD PTR [ebx-0x63dc6139]
  433eeb:	dec    DWORD PTR [edx-0x24]
  433eee:	std    
  433eef:	int3   
  433ef0:	cmp    eax,0x1ee44151
  433ef5:	push   ss
  433ef6:	or     al,0x87
  433ef8:	enter  0x45d3,0x1d
  433efc:	pop    esi
  433efd:	mov    ebp,esp
  433eff:	or     edx,ebp
  433f01:	push   ss
  433f02:	mov    dl,0xfd
  433f04:	frstor [eax+0x44]
  433f07:	push   eax
  433f08:	es loopne 0x433f89
  433f0b:	xchg   DWORD PTR [eax-0x79],esp
  433f0e:	mov    esi,0x8bd495e8
  433f13:	rol    BYTE PTR [eax],0x9e
  433f16:	push   ss
  433f17:	loopne 0x433f4e
  433f19:	fisttp DWORD PTR [esi+eiz*4]
  433f1c:	or     DWORD PTR [ebx],esi
  433f1e:	cmpxchg DWORD PTR [ebp-0x1a4f90a8],eax
  433f25:	xchg   BYTE PTR [edx-0x2],ch
  433f28:	mov    cl,bl
  433f2a:	sar    ch,1
  433f2c:	call   DWORD PTR [esi]
  433f2e:	xchg   esp,eax
  433f2f:	mov    esi,0x8bd495e7
  433f34:	(bad)  
  433f35:	pushf  
  433f36:	pop    esp
  433f37:	mov    ecx,0xb0db9d15
  433f3c:	in     eax,0x76
  433f3e:	sub    al,BYTE PTR [esi+0x3d73b94b]
  433f44:	je     0x433ef0
  433f46:	pusha  
  433f47:	cmp    cl,BYTE PTR [eax]
  433f49:	pop    edx
  433f4a:	fwait
  433f4b:	cmc    
  433f4c:	inc    ebx
  433f4d:	adc    BYTE PTR [ebp+edi*8-0x2261a1a],bl
  433f54:	jmp    DWORD PTR [esi]
  433f56:	and    eax,DWORD PTR [edx+esi*4]
  433f59:	pop    ebp
  433f5a:	sbb    ah,dh
  433f5c:	adc    BYTE PTR [esi],bl
  433f5e:	add    al,BYTE PTR [edi]
  433f60:	add    al,0x1a
  433f62:	xor    eax,0x3adc8aa3
  433f67:	sub    bh,ah
  433f69:	lods   eax,DWORD PTR ds:[esi]
  433f6a:	add    ah,bh
  433f6c:	add    esp,DWORD PTR [eax]
  433f6e:	cmp    eax,0x4e5d7eaf
  433f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433f74:	sbb    BYTE PTR ds:0x80c551,ch
  433f7a:	mov    dh,0xc6
  433f7c:	out    0x4,eax
  433f7e:	and    DWORD PTR [edx-0x1b],esi
  433f81:	add    ebx,DWORD PTR [ebp+0x140690f5]
  433f87:	aaa    
  433f88:	sar    DWORD PTR [edi-0x19],cl
  433f8b:	mov    al,0xc7
  433f8d:	inc    esi
  433f8e:	mov    BYTE PTR [edi+ebp*8-0x19359184],bh
  433f95:	stos   DWORD PTR es:[edi],eax
  433f96:	mov    al,0x4d
  433f98:	pop    ds
  433f99:	push   esi
  433f9a:	xlat   BYTE PTR ds:[ebx]
  433f9b:	js     0x433fb7
  433f9d:	cmp    al,0x25
  433f9f:	add    esp,edi
  433fa1:	add    ebx,DWORD PTR [ebp-0x35e0784f]
  433fa7:	cmp    esi,eax
  433fa9:	(bad)  
  433faa:	sar    BYTE PTR [ebx],cl
  433fac:	and    esi,DWORD PTR [edi-0x378dfd40]
  433fb2:	test   al,0x2
  433fb4:	out    0xca,eax
  433fb6:	pushf  
  433fb7:	jmp    0xd3ec:0x819d03e6
  433fbe:	popf   
  433fbf:	cmc    
  433fc0:	push   0x42
  433fc2:	mov    ds:0xe67ee7c4,eax
  433fc7:	loop   0x433fc7
  433fc9:	inc    eax
  433fca:	lea    edi,[eax-0x5e]
  433fcd:	inc    edi
  433fce:	rol    cl,1
  433fd0:	mov    ecx,0x70c1b83c
  433fd5:	dec    ecx
  433fd6:	jno    0x433fe0
  433fd8:	add    BYTE PTR [esi+0x6a0b5092],ch
  433fde:	add    BYTE PTR [esi],cl
  433fe0:	ret    
  433fe1:	adc    eax,0x9029ee9
  433fe6:	fs sub eax,0xd3e9f9c4
  433fec:	cmp    DWORD PTR [eax],esi
  433fee:	shl    BYTE PTR [ecx+0x51],cl
  433ff1:	or     edx,edx
  433ff3:	pop    ecx
  433ff4:	jle    0x43403f
  433ff6:	mov    ch,0xa3
  433ff8:	cmp    DWORD PTR [eax],ebp
  433ffa:	pusha  
  433ffb:	in     al,0xce
  433ffd:	and    eax,0x84fe4a21
  434002:	test   DWORD PTR ss:0x125feac8,ebx
  434009:	test   DWORD PTR [esi*8-0x744ab485],ebp
  434010:	cmp    DWORD PTR [eax+0x70],eax
  434013:	pop    ebp
  434014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434015:	xor    eax,0x84ef54a8
  43401a:	test   al,0xd3
  43401c:	clc    
  43401d:	test   BYTE PTR [ecx+ecx*8],bl
  434020:	sbb    eax,0x425772c8
  434025:	xchg   DWORD PTR [edx*1+0x51b5437c],ebp
  43402c:	aas    
  43402d:	hlt    
  43402e:	bound  ebx,QWORD PTR [ebp-0x2e]
  434031:	xor    eax,0x84ff64a8
  434036:	test   al,0x39
  434038:	aas    
  434039:	hlt    
  43403a:	ret    0x7bf6
  43403d:	dec    ebx
  43403e:	jns    0x43406b
  434040:	aaa    
  434041:	fcom   QWORD PTR [edx]
  434043:	add    cl,ah
  434045:	jge    0x43408a
  434047:	push   ecx
  434048:	sbb    DWORD PTR [edx],edi
  43404a:	inc    eax
  43404b:	(bad)  
  43404c:	(bad)  [esi+0x7b669c25]
  434052:	dec    ebx
  434053:	add    BYTE PTR [eax-0x7814f75c],ah
  434059:	add    BYTE PTR [ecx+0x0],0xff
  43405d:	inc    edx
  43405e:	aam    0x8a
  434060:	dec    eax
  434061:	inc    BYTE PTR [edx+0x8478c45]
  434067:	inc    eax
  434068:	mov    ebx,0x189f442
  43406d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43406e:	ins    DWORD PTR es:[edi],dx
  43406f:	in     al,dx
  434070:	mov    bh,0x30
  434072:	inc    eax
  434073:	add    BYTE PTR [ebx+0x7a],cl
  434076:	aaa    
  434077:	add    DWORD PTR [edi+edi*8-0x42],eax
  43407b:	pop    es
  43407c:	push   eax
  43407d:	(bad)  
  43407e:	(bad)  
  43407f:	call   FWORD PTR [ebp+0x34fff8eb]
  434085:	jle    0x4340fc
  434087:	lock add al,0x2
  43408a:	test   BYTE PTR [eax-0x750000fb],cl
  434090:	shl    DWORD PTR [esi+0x46b44f82],0x8
  434097:	inc    eax
  434098:	cmp    eax,DWORD PTR [ebx]
  43409a:	lock mov ecx,eax
  43409d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43409e:	mov    edi,0xfffed007
  4340a3:	dec    DWORD PTR ds:0xffface
  4340a9:	les    edi,FWORD PTR [ebp+0x77]
  4340ac:	or     ah,al
  4340ae:	add    DWORD PTR [eax+esi*4-0x7d00014c],eax
  4340b5:	sbb    bl,BYTE PTR [esi]
  4340b7:	imul   esp,DWORD PTR [esi],0x49
  4340ba:	pop    edx
  4340bb:	and    al,0x0
  4340bd:	inc    edi
  4340be:	xor    edi,esp
  4340c0:	add    bl,cl
  4340c2:	jp     0x43410d
  4340c4:	add    DWORD PTR [esi+edi*8-0x2c7949fa],esi
  4340cb:	inc    ebp
  4340cc:	cld    
  4340cd:	popf   
  4340ce:	and    al,0xbe
  4340d0:	int    0x7d
  4340d2:	outs   dx,BYTE PTR ds:[esi]
  4340d3:	test   dl,al
  4340d5:	xchg   ebp,eax
  4340d6:	xor    dh,BYTE PTR [ecx]
  4340d8:	clc    
  4340d9:	sahf   
  4340da:	jecxz  0x43405e
  4340dc:	cli    
  4340dd:	mov    ebp,0xe085af7d
  4340e2:	dec    ebx
  4340e3:	sbb    eax,DWORD PTR [ebx+0x6d]
  4340e6:	xor    eax,0x6a9c0839
  4340eb:	icebp  
  4340ec:	(bad)  
  4340ed:	(bad)  [edi+0x273d4376]
  4340f3:	les    esi,FWORD PTR [esp+esi*2+0x34]
  4340f7:	cmp    eax,ebp
  4340f9:	es cdq 
  4340fb:	in     eax,0x4f
  4340fd:	xchg   bl,ah
  4340ff:	cmp    BYTE PTR [ecx-0x73],0xab
  434103:	cs dec esi
  434105:	test   eax,0xa54ed5b0
  43410a:	stos   DWORD PTR es:[edi],eax
  43410b:	std    
  43410c:	in     al,0x0
  43410e:	cwde   
  43410f:	ret    
  434110:	in     al,dx
  434111:	cld    
  434112:	or     ch,BYTE PTR [esp+edi*2+0x3234954b]
  434119:	clc    
  43411a:	and    al,0xe9
  43411c:	jmp    0x4340a4
  43411e:	pop    esp
  43411f:	mov    ebx,0xab8d7984
  434124:	jl     0x434169
  434126:	in     eax,dx
  434127:	xor    al,BYTE PTR [edx-0x20]
  43412a:	es ins DWORD PTR es:[edi],dx
  43412c:	push   edx
  43412d:	sbb    eax,0xd0ab78
  434132:	popf   
  434133:	and    al,0xbc
  434135:	mov    edi,0xbf04dbbc
  43413a:	es jne 0x4340fb
  43413d:	out    0xa5,eax
  43413f:	sub    bl,dh
  434141:	add    BYTE PTR [edx-0x42410255],ch
  434147:	add    ch,bh
  434149:	add    al,0x5a
  43414b:	lea    ebp,[esi]
  43414d:	ret    0x1a7a
  434150:	out    0xc2,al
  434152:	ror    BYTE PTR [ecx-0x11],1
  434155:	push   edi
  434156:	xchg   ecx,eax
  434157:	lea    ebp,[ebx+edi*8+0x47df425d]
  43415e:	out    dx,al
  43415f:	inc    edx
  434160:	out    0xdc,eax
  434162:	shl    ebp,1
  434164:	or     eax,0xeac96f14
  434169:	in     al,dx
  43416a:	pop    edx
  43416b:	shl    edi,0x84
  43416e:	aam    0xa
  434170:	out    0x0,eax
  434172:	add    BYTE PTR [ecx],ah
  434174:	nop
  434175:	out    0x3,eax
  434177:	popf   
  434178:	test   DWORD PTR [edx+0x63103af3],eax
  43417e:	xchg   DWORD PTR [ebp+0x2784e702],ebx
  434184:	loop   0x4341fb
  434186:	and    eax,0x4e33fa0
  43418b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43418c:	xchg   BYTE PTR [esi+0x4],ch
  43418f:	popf   
  434190:	add    ah,dl
  434192:	xchg   ebp,eax
  434193:	or     eax,eax
  434195:	sbb    al,0xd0
  434197:	sbb    al,dl
  434199:	xchg   esi,eax
  43419a:	in     al,0xbb
  43419c:	test   DWORD PTR [ecx-0x50a8e404],esp
  4341a2:	add    eax,ebp
  4341a4:	test   BYTE PTR [ecx-0x211f8cdc],ch
  4341aa:	cs mov ecx,0x667b3336
  4341b0:	or     ch,BYTE PTR [edx+0x1446a545]
  4341b6:	inc    esp
  4341b7:	popf   
  4341b8:	leave  
  4341b9:	jmp    0x9c7a:0xe7c0baf0
  4341c0:	test   DWORD PTR [eax],eax
  4341c2:	jno    0x43417f
  4341c4:	or     DWORD PTR [edx-0x6454377],eax
  4341ca:	mov    eax,ds:0x5ef9ba6b
  4341cf:	ret    
  4341d0:	push   ebp
  4341d1:	pop    ecx
  4341d2:	bound  esi,QWORD PTR [esp+ebx*2-0x42]
  4341d6:	loope  0x4341d8
  4341d8:	sahf   
  4341d9:	test   DWORD PTR [ebx-0xf],eax
  4341dc:	test   DWORD PTR [ebx-0x18],0x850eb170
  4341e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4341e4:	dec    esi
  4341e5:	mov    BYTE PTR [eax],dl
  4341e7:	bound  esp,QWORD PTR [esi+edi*4-0x76b14e79]
  4341ee:	push   eax
  4341ef:	in     eax,0xd1
  4341f1:	xor    DWORD PTR [edi+esi*4],edi
  4341f4:	leave  
  4341f5:	pop    ecx
  4341f6:	cmp    BYTE PTR [edx-0x16063eea],dh
  4341fc:	sahf   
  4341fd:	pop    ecx
  4341fe:	test   DWORD PTR [esp+ebp*2],eax
  434201:	or     BYTE PTR [eax],0xe9
  434204:	(bad)  
  434205:	aad    0x2d
  434207:	neg    DWORD PTR [ebx+0x2]
  43420a:	sbb    al,0xe9
  43420c:	sahf   
  43420d:	add    al,cl
  43420f:	and    al,0x41
  434211:	sar    cl,0xe9
  434214:	sahf   
  434215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434216:	add    DWORD PTR [esi-0x390425ab],esp
  43421c:	jmp    0x4341d7
  43421e:	test   DWORD PTR [ecx+esi*8],esp
  434221:	xchg   BYTE PTR [ebx-0x3f],cl
  434224:	imul   ecx,DWORD PTR [edx+0xc],0x87b25d62
  43422b:	stc    
  43422c:	push   edi
  43422d:	push   ebx
  43422e:	cld    
  43422f:	jo     0x4341c7
  434231:	adc    al,BYTE PTR [edi+0x793d9539]
  434237:	rcr    DWORD PTR [esi+0x5987],0xdc
  43423e:	outs   dx,DWORD PTR ds:[esi]
  434240:	cmp    al,0xa9
  434242:	mov    bl,0x7c
  434244:	aas    
  434245:	into   
  434246:	push   edx
  434247:	mov    edi,DWORD PTR es:[ecx-0x5a]
  43424b:	or     DWORD PTR [ebp-0x74],0xc
  43424f:	cmp    DWORD PTR [eax],edx
  434251:	push   0xd44582e4
  434256:	cmp    al,0x55
  434258:	or     ah,bl
  43425a:	js     0x43423f
  43425c:	jmp    ebx
  43425e:	mov    al,al
  434260:	je     0x4342aa
  434262:	enter  0x1dff,0x74
  434266:	add    eax,DWORD PTR [eax]
  434268:	pop    esi
  434269:	jnp    0xd0c7426b
  43426f:	push   edi
  434270:	mov    ebx,DWORD PTR [ecx+0x3408b9f2]
  434276:	cmp    al,0x6d
  434278:	or     BYTE PTR [edi+0xa2bd04a],bh
  43427e:	pop    es
  43427f:	sbb    DWORD PTR [ebp-0x5c],0x1c
  434283:	push   esi
  434284:	adc    BYTE PTR ds:0x12010845,dh
  43428a:	mov    bh,0xfa
  43428c:	pop    esi
  43428d:	mov    al,ds:0x4087781
  434292:	cmp    al,0x3d
  434294:	shr    BYTE PTR [eax+0x13],1
  434297:	jge    0x434274
  434299:	push   0xd47f7b1f
  43429e:	add    cl,BYTE PTR [ebx+0x74]
  4342a1:	add    ch,dl
  4342a3:	cmp    DWORD PTR [esi+0xc],ecx
  4342a6:	jg     0x4342ed
  4342a8:	sbb    BYTE PTR [ebx],ch
  4342aa:	pop    es
  4342ab:	hlt    
  4342ac:	dec    edi
  4342ad:	call   0x434b2a
  4342b2:	das    
  4342b3:	mov    ebp,0xa59d4e84
  4342b8:	js     0x43430b
  4342ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4342bb:	les    edi,FWORD PTR [eax+0x4f914f4f]
  4342c1:	push   DWORD PTR [edx-0x7abe8958]
  4342c7:	and    al,BYTE PTR [edx+0x30]
  4342ca:	push   ss
  4342cb:	test   al,0x80
  4342cd:	clc    
  4342ce:	scas   al,BYTE PTR es:[edi]
  4342cf:	(bad)  
  4342d1:	rcr    al,0xb3
  4342d4:	std    
  4342d5:	call   FWORD PTR [ebp-0x6c077f55]
  4342db:	(bad)  
  4342dc:	add    al,0xc1
  4342de:	loopne 0x434293
  4342e0:	std    
  4342e1:	(bad)  
  4342e2:	jb     0x434290
  4342e4:	js     0x43432f
  4342e6:	mov    eax,ds:0x5415a4fc
  4342eb:	mov    ecx,0x6c3c7daf
  4342f0:	cmp    al,0xa6
  4342f3:	lods   al,BYTE PTR ds:[esi]
  4342f4:	jb     0x4342b4
  4342f6:	sahf   
  4342f7:	data16 cmc 
  4342f9:	inc    ebp
  4342fa:	sbb    al,0xa
  4342fc:	test   BYTE PTR [eax],al
  4342fe:	popf   
  4342ff:	stos   DWORD PTR es:[edi],eax
  434300:	add    bh,cl
  434302:	sahf   
  434303:	xchg   esp,eax
  434304:	or     DWORD PTR [ebp+0x0],edi
  434307:	test   al,0x1b
  434309:	add    al,0x87
  43430b:	retf   
  43430c:	jg     0x434360
  43430e:	add    al,0x20
  434310:	rcl    DWORD PTR [ecx+0x2],0x1e
  434314:	pop    edi
  434315:	add    BYTE PTR [eax+edx*4],al
  434318:	mov    dl,0x78
  43431a:	inc    ebx
  43431b:	in     eax,0x26
  43431d:	mov    ebp,0xcb3b2009
  434322:	stc    
  434323:	repnz sbb eax,0x74e6b827
  434329:	int3   
  43432a:	stc    
  43432b:	inc    edx
  43432c:	and    dl,ah
  43432e:	pop    ebx
  43432f:	fild   WORD PTR [edx]
  434331:	out    dx,eax
  434332:	add    ebx,DWORD PTR [eax]
  434334:	dec    eax
  434335:	mov    edi,0x5e5d702d
  43433a:	out    0x66,al
  43433c:	rcr    bh,0x3
  43433f:	cmc    
  434340:	mov    esp,0x5db4cc82
  434345:	outs   dx,BYTE PTR ds:[esi]
  434346:	out    0x46,al
  434348:	rcr    bh,0x3
  43434b:	sbb    BYTE PTR [esi+0x2d9f3aa],bh
  434351:	loope  0x434345
  434353:	rol    DWORD PTR [edx],1
  434355:	jmp    0x434348
  434357:	leave  
  434358:	add    ah,BYTE PTR [edi-0xf]
  43435b:	rol    DWORD PTR [edx],0x54
  43435e:	icebp  
  43435f:	mov    ecx,0xb1f0b602
  434364:	add    al,BYTE PTR [ebx]
  434366:	clc    
  434367:	test   eax,0xf71602
  43436c:	mov    eax,ds:0x99f6ab02
  434371:	add    ch,al
  434373:	cmc    
  434374:	xchg   ecx,eax
  434375:	add    bh,BYTE PTR [ecx+0x6c0289f5]
  43437b:	cmc    
  43437c:	add    DWORD PTR [edx],0x279f570
  434382:	lahf   
  434383:	hlt    
  434384:	jno    0x434388
  434386:	xor    al,0xf4
  434388:	imul   eax,DWORD PTR [edx],0x261f42e
  43438e:	shr    bl,cl
  434390:	fld    DWORD PTR [edx]
  434392:	jbe    0x434380
  434394:	rol    DWORD PTR [edx],1
  434396:	dec    eax
  434397:	in     eax,dx
  434398:	leave  
  434399:	add    bl,BYTE PTR [ecx]
  43439b:	call   0xe84e4661
  4343a0:	mov    ecx,0xb1ea3102
  4343a5:	add    cl,BYTE PTR [esi+0x2a9ea]
  4343ab:	out    dx,eax
  4343ac:	mov    esi,0x8119ffff
  4343b1:	(bad)  
  4343b2:	(bad)  
  4343b3:	(bad)  
  4343b4:	js     0x4343b5
  4343b6:	(bad)  
  4343b7:	fild   DWORD PTR [ecx+0x7893ffff]
  4343bd:	(bad)  
  4343be:	push   DWORD PTR [ecx-0x7d]
  4343c1:	(bad)  
  4343c2:	dec    DWORD PTR [ebx+edi*2-0x1]
  4343c6:	(bad)  
  4343c7:	jns    0x43434c
  4343c9:	(bad)  
  4343ca:	push   DWORD PTR [ebx-0x51]
  4343cd:	std    
  4343ce:	(bad)  
  4343cf:	fiadd  WORD PTR [eax]
  4343d1:	(bad)  
  4343d2:	(bad)  
  4343d3:	call   DWORD PTR [esi+ecx*4]
  4343d6:	(bad)  
  4343d7:	call   FWORD PTR [ebx]
  4343d9:	mov    ?,edi
  4343db:	(bad)  
  4343dc:	mov    ebx,0x6252af03
  4343e1:	int3   
  4343e2:	or     al,BYTE PTR [ebx-0x7b0832c1]
  4343e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4343e9:	add    BYTE PTR [ecx-0x7a734240],0x4a
  4343f0:	add    eax,0xd674c41c
  4343f5:	rol    DWORD PTR [edx+0x34],cl
  4343f8:	fs popa 
  4343fa:	aaa    
  4343fb:	push   es
  4343fc:	mov    ecx,0xb92840c3
  434401:	addr16 int3 
  434403:	jge    0x434432
  434405:	xor    DWORD PTR [edi+0x50abdd4a],eax
  43440b:	sub    BYTE PTR [edx-0x21],ah
  43440e:	out    0x4e,al
  434410:	fwait
  434411:	out    0xd2,eax
  434413:	jge    0x4343c2
  434415:	push   ss
  434416:	ret    
  434417:	inc    edx
  434418:	std    
  434419:	sahf   
  43441a:	add    al,BYTE PTR [eax]
  43441c:	jmp    0x2c9e06cc
  434421:	jecxz  0x434429
  434423:	add    BYTE PTR [eax],al
  434425:	sbb    al,0xca
  434427:	idiv   edi
  434429:	sub    ebp,edx
  43442b:	push   esp
  43442c:	ret    0xfff0
  43442f:	retf   
  434430:	int3   
  434431:	cmp    BYTE PTR [esp+ecx*8-0x34],dh
  434435:	add    BYTE PTR [eax],cl
  434437:	je     0x434405
  434439:	int3   
  43443a:	clc    
  43443b:	jae    0x434409
  43443d:	int3   
  43443e:	cmp    DWORD PTR [ebx],0xbe998bec
  434444:	dec    esp
  434445:	mov    edi,DWORD PTR [ecx-0x4a]
  434448:	push   eax
  434449:	mov    ebx,DWORD PTR ds:0x3510e7c7
  43444f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434450:	idiv   edi
  434452:	test   bh,bh
  434454:	jp     0x434451
  434456:	test   DWORD PTR [edx+0x2b],edx
  434459:	mov    eax,DWORD PTR [ecx-0x4d]
  43445c:	or     BYTE PTR [esi-0x7e3dfb7c],dh
  434462:	int    0xd6
  434464:	test   DWORD PTR [eax],0x80fe5584
  43446a:	int    0xd6
  43446c:	test   DWORD PTR [eax],0x81f10474
  434472:	mov    edx,esi
  434474:	test   DWORD PTR [eax],0x80fe5544
  43447a:	fwait
  43447b:	(bad)  
  43447c:	test   DWORD PTR [eax],0xc1bf3c34
  434482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434483:	scas   eax,DWORD PTR es:[edi]
  434484:	pop    eax
  434485:	or     eax,DWORD PTR [ebp+0x38c254ec]
  43448b:	dec    DWORD PTR [ebp-0x75]
  43448e:	mov    eax,ds:0x91f67eb3
  434493:	mov    ebp,0xe9054686
  434498:	push   esi
  434499:	pop    ebx
  43449a:	add    cl,cl
  43449c:	les    ecx,FWORD PTR [eax+eax*1]
  43449f:	popf   
  4344a0:	sub    bl,cl
  4344a2:	adc    BYTE PTR [esi-0x18],ch
  4344a5:	js     0x43447c
  4344a7:	imul   edx,edi,0xa9c1a472
  4344ad:	std    
  4344ae:	call   FWORD PTR [ebp-0x61fd705c]
  4344b4:	popa   
  4344b5:	ds std 
  4344b7:	aad    0xef
  4344b9:	dec    eax
  4344ba:	repz sbb al,0x62
  4344bd:	int    0xf9
  4344bf:	popf   
  4344c0:	test   eax,0x821c0253
  4344c5:	int    0xf9
  4344c7:	popf   
  4344c8:	test   eax,0xa41d6f85
  4344cd:	jge    0x4344c0
  4344cf:	mov    edx,0x2609da69
  4344d4:	outs   dx,BYTE PTR ds:[esi]
  4344d5:	mov    ebp,0xc21499e0
  4344da:	std    
  4344db:	arpl   WORD PTR [edx-0x42],di
  4344de:	loopne 0x43448d
  4344e0:	jo     0x4344de
  4344e2:	mov    esi,0xcc366d6
  4344e7:	popf   
  4344e8:	sub    cl,bl
  4344ea:	mov    al,0x90
  4344ec:	stos   DWORD PTR es:[edi],eax
  4344ed:	std    
  4344ee:	or     BYTE PTR [edi],bl
  4344f0:	push   ds
  4344f1:	add    al,0x0
  4344f3:	popf   
  4344f4:	xor    edx,DWORD PTR [edi-0x2f3e3c59]
  4344fa:	fstp   QWORD PTR [esi+edx*1-0x5]
  4344fe:	xchg   BYTE PTR [eax],al
  434500:	call   0xee28c3a4
  434505:	scas   al,BYTE PTR es:[edi]
  434506:	std    
  434507:	push   ebp
  434509:	fs (bad) 
  43450b:	call   FWORD PTR [ebp-0x62db9fda]
  434511:	mov    al,ds:0xe59e128f
  434516:	div    BYTE PTR [ecx+0x4e8026b]
  43451c:	adc    al,BYTE PTR [esi]
  43451e:	lods   eax,DWORD PTR ds:[esi]
  43451f:	clc    
  434520:	dec    esp
  434521:	push   ecx
  434522:	in     eax,0x4
  434524:	repnz add eax,0x512cf89d
  43452a:	out    0x4,al
  43452c:	repnz add eax,0x512cf8ad
  434532:	jmp    0x434538
  434534:	rol    BYTE PTR ds:0x510cf89d,cl
  43453a:	in     al,dx
  43453b:	add    al,0xd2
  43453d:	add    eax,0x510cf8ad
  434542:	jmp    0x9d48f74b
  434547:	clc    
  434548:	in     al,dx
  434549:	push   eax
  43454a:	jmp    0xecf8:0xad05b204
  434551:	push   eax
  434552:	fild   WORD PTR [edx+edx*4]
  434555:	add    eax,0x504cf89d
  43455a:	lock add al,0x92
  43455d:	add    eax,0x504cf82d
  434562:	fld    QWORD PTR [eax+eax*1]
  434565:	jb     0x43456c
  434567:	sbb    eax,0xee502cf8
  43456c:	add    al,0x72
  43456e:	add    eax,0x502cf82d
  434573:	jecxz  0x434579
  434575:	push   edx
  434576:	add    eax,0x500cf81d
  43457b:	hlt    
  43457c:	add    al,0x52
  43457e:	add    eax,0x500cf82d
  434583:	loope  0x434589
  434585:	xor    al,BYTE PTR ds:0x4fecf81d
  43458b:	repnz add al,0x32
  43458e:	add    eax,0x852a042d
  434593:	add    BYTE PTR [edi],ch
  434595:	push   cs
  434596:	inc    ecx
  434597:	or     DWORD PTR [ebp+ebp*2-0x45],esp
  43459b:	stc    
  43459c:	out    0x19,al
  43459e:	sub    DWORD PTR [eax-0x204ce11a],eax
  4345a4:	test   al,0xd7
  4345a6:	or     ah,BYTE PTR [edi-0x45]
  4345a9:	jmp    0xb8c0:0x9ec6fab8
  4345b0:	cmp    BYTE PTR [ecx],bl
  4345b2:	add    eax,DWORD PTR [eax-0x19870542]
  4345b8:	fidiv  WORD PTR [ecx-0x38]
  4345bb:	or     ecx,ebp
  4345bd:	jecxz  0x434579
  4345bf:	std    
  4345c0:	mov    ds:0xe60c4cda,al
  4345c5:	sbb    eax,0x8ef8ef
  4345ca:	fiadd  DWORD PTR [ebp+edx*8+0xc92af6]
  4345d1:	jmp    0xda387d74
  4345d6:	xchg   ebx,eax
  4345d7:	ss xchg ebx,eax
  4345d9:	jmp    0x2ac8487c
  4345de:	pusha  
  4345df:	stos   DWORD PTR es:[edi],eax
  4345e0:	add    al,0x6c
  4345e2:	std    
  4345e3:	fdivp  st(7),st
  4345e5:	in     eax,0x28
  4345e7:	adc    eax,0x726a22fd
  4345ec:	push   edx
  4345ed:	call   0x3340f591
  4345f2:	push   0x72
  4345f4:	push   edx
  4345f5:	jmp    0x434596
  4345f7:	scas   eax,DWORD PTR es:[edi]
  4345f8:	std    
  4345f9:	and    cl,BYTE PTR [edx+0x72]
  4345fc:	push   edx
  4345fd:	jmp    0x724a:0x32fdaf9f
  434604:	push   edx
  434605:	in     eax,dx
  434606:	lahf   
  434607:	scas   eax,DWORD PTR es:[edi]
  434608:	std    
  434609:	and    ch,BYTE PTR [edx]
  43460b:	jb     0x43465f
  43460d:	add    BYTE PTR [ecx],bh
  43460f:	add    eax,0xaf6e03f1
  434614:	scas   eax,DWORD PTR es:[edi]
  434615:	push   esi
  434616:	or     al,BYTE PTR ds:0xafbe03f1
  43461c:	scas   eax,DWORD PTR es:[edi]
  43461d:	push   esi
  43461e:	sti    
  43461f:	add    al,0xf1
  434621:	add    ecx,DWORD PTR [esi-0x4f]
  434624:	scas   eax,DWORD PTR es:[edi]
  434625:	push   esi
  434626:	cld    
  434627:	add    al,0xf1
  434629:	add    edi,DWORD PTR [esi]
  43462b:	mov    cl,0xaf
  43462d:	push   esi
  43462e:	add    ch,ch
  434630:	add    al,0xf1
  434632:	add    ebp,DWORD PTR [esi]
  434634:	mov    cl,0xaf
  434636:	push   esi
  434637:	mov    esi,0xfe03f104
  43463c:	mov    al,0xaf
  43463e:	push   esi
  43463f:	iret   
  434640:	add    al,0xf1
  434642:	add    ecx,DWORD PTR [esi]
  434644:	mov    cl,0xaf
  434646:	push   esi
  434647:	rol    BYTE PTR [ecx+esi*8],0x3
  43464b:	(bad)  
  43464c:	mov    al,0xaf
  43464e:	push   esi
  43464f:	mov    cl,0x4
  434651:	icebp  
  434652:	add    ebp,esi
  434654:	mov    al,0xaf
  434656:	push   esi
  434657:	add    BYTE PTR [ecx+esi*8],0x3
  43465b:	ds mov al,0xaf
  43465e:	push   esi
  43465f:	xchg   ebx,eax
  434660:	add    al,0xf1
  434662:	add    ecx,esi
  434664:	test   bl,ah
  434666:	adc    BYTE PTR [edi+0x74c67bc6],al
  43466c:	sti    
  43466d:	push   es
  43466e:	test   DWORD PTR [eax],ebp
  434670:	shl    bh,0xff
  434673:	stc    
  434674:	ins    BYTE PTR es:[edi],dx
  434675:	je     0x434682
  434677:	inc    ebx
  434678:	test   esi,edi
  43467a:	add    bh,BYTE PTR [ebp+esi*8-0x6]
  43467e:	clc    
  43467f:	rsqrtps xmm5,xmm5
  434682:	mov    eax,0x7fff8325
  434687:	popf   
  434688:	sbb    ah,ah
  43468a:	mov    edi,0xce5cd847
  43468f:	call   0xf39e:0xf9c2a9
  434696:	test   BYTE PTR [edi+0x1d],ch
  434699:	test   al,0x7d
  43469b:	icebp  
  43469c:	cli    
  43469d:	jmp    0x7bb75078
  4346a2:	repz inc DWORD PTR [ebx]
  4346a5:	fdivr  st,st(7)
  4346a7:	cmc    
  4346a8:	es push 0xb8fdbf22
  4346ae:	and    al,0x5
  4346b0:	fsubr  st(3),st
  4346b2:	and    BYTE PTR [esi-0x334e566f],bh
  4346b8:	jmp    0xcb31bdd3
  4346bd:	cwde   
  4346be:	jns    0x4346b2
  4346c0:	push   ecx
  4346c1:	(bad)  
  4346c2:	jb     0x434668
  4346c4:	jns    0x43466f
  4346c6:	std    
  4346c7:	call   FWORD PTR [ebp+0x2efdbd97]
  4346cd:	mov    dl,0xf4
  4346cf:	mov    cl,0x8c
  4346d1:	jl     0x434680
  4346d3:	jg     0x434694
  4346d5:	aaa    
  4346d6:	add    al,0x0
  4346d8:	popf   
  4346d9:	push   0xffffffdc
  4346db:	or     dh,cl
  4346dd:	lahf   
  4346de:	push   0x38
  4346e0:	mov    esi,0xd33efd6b
  4346e5:	into   
  4346e6:	fisttp WORD PTR [ebp-0x2e]
  4346e9:	sub    dl,al
  4346eb:	and    BYTE PTR [edx+0x6afdf729],ah
  4346f1:	lods   al,BYTE PTR ds:[esi]
  4346f2:	js     0x4346ee
  4346f4:	pop    esp
  4346f5:	inc    ebp
  4346f6:	stc    
  4346f7:	test   BYTE PTR [eax],al
  4346f9:	pop    edx
  4346fa:	mov    ecx,0xeb6d84fe
  4346ff:	aad    0x10
  434701:	push   ss
  434702:	add    edi,DWORD PTR [edi]
  434704:	ret    
  434705:	cmp    BYTE PTR [ebx],cl
  434707:	push   0xe70334e1
  43470c:	add    esi,DWORD PTR [edx-0x62fbf560]
  434712:	add    ch,BYTE PTR [esi-0x10]
  434715:	psubq  mm0,mm1
  434718:	inc    ebx
  434719:	popf   
  43471a:	icebp  
  43471b:	fisub  DWORD PTR [esi-0x2b]
  43471e:	jmp    0xdb634ac9
  434723:	test   al,0xd8
  434725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434726:	icebp  
  434727:	repnz data16 mov ch,0xe1
  43472b:	es add al,0xbe
  43472e:	mov    ch,0xe7
  434730:	add    ebx,DWORD PTR [ebp-0x5a81250f]
  434736:	in     eax,0x26
  434738:	add    al,0x88
  43473a:	push   ebx
  43473b:	jmp    0x4347b5
  43473d:	adc    eax,esp
  43473f:	mov    edi,0xe7b57ff3
  434744:	add    ebx,DWORD PTR [ebp+0x757ee389]
  43474a:	frstor [esi]
  43474c:	add    al,0x18
  43474e:	fldcw  WORD PTR [eax-0x797c6a28]
  434754:	les    ebx,FWORD PTR [ebp-0x5eef18fe]
  43475a:	xchg   edi,eax
  43475b:	scas   eax,DWORD PTR es:[edi]
  43475c:	sbb    BYTE PTR [eax],al
  43475e:	fld    QWORD PTR [edx]
  434760:	pop    esi
  434761:	test   eax,0x10ffa94a
  434766:	cdq    
  434767:	xchg   edi,eax
  434768:	pop    ds
  434769:	and    ebp,ebx
  43476b:	add    ch,BYTE PTR [eax-0x1f]
  43476e:	je     0x434772
  434770:	out    0x3,eax
  434772:	mov    eax,0xb40b5bfe
  434777:	inc    edx
  434778:	out    0x10,eax
  43477a:	call   0xe675:0xe62000a
  434781:	fld    st(5)
  434783:	fidivr DWORD PTR [edi-0x22cbb9ee]
  434789:	push   ds
  43478a:	sahf   
  43478b:	add    al,BYTE PTR [eax]
  43478d:	push   0xe900bb3c
  434792:	sahf   
  434793:	jg     0x4347a9
  434795:	pop    esp
  434796:	xchg   esi,eax
  434797:	jecxz  0x4347d8
  434799:	jmp    0xb1de564b
  43479e:	mov    ch,0x42
  4347a0:	add    BYTE PTR [edx+0x36],ah
  4347a3:	jne    0x43478a
  4347a5:	add    DWORD PTR [edx],ecx
  4347a7:	adc    DWORD PTR [ebx-0xafddf],ebx
  4347ad:	or     ebx,esi
  4347af:	add    DWORD PTR [eax],eax
  4347b1:	jmp    0x1c658a9
  4347b6:	out    dx,al
  4347b7:	hlt    
  4347b8:	(bad)  
  4347b9:	stc    
  4347ba:	jno    0x4347c2
  4347bc:	test   DWORD PTR [ebx+0x410a9d8],ebp
  4347c2:	add    dh,bl
  4347c4:	add    DWORD PTR [eax],eax
  4347c6:	jmp    0xe1c645de
  4347cb:	(bad)  
  4347cc:	hlt    
  4347cd:	jmp    DWORD PTR [ecx-0x2d]
  4347d0:	je     0x4347b7
  4347d2:	loope  0x4347f5
  4347d4:	xlat   BYTE PTR ds:[ebx]
  4347d5:	stc    
  4347d6:	jmp    0xe5704a79
  4347db:	cmp    eax,0x992924fb
  4347e0:	jge    0x4347b8
  4347e2:	test   al,0x3a
  4347e4:	sbb    ebp,DWORD PTR ds:0x1cfb3ded
  4347ea:	test   eax,0x56de339e
  4347ef:	cdq    
  4347f0:	add    al,BYTE PTR [eax]
  4347f2:	sbb    dl,BYTE PTR [ebp-0x74ffc771]
  4347f8:	add    BYTE PTR ds:[ebx],dh
  4347fb:	add    eax,0x85d08310
  434800:	adc    BYTE PTR fs:[ebx+0x8e3bdac],cl
  434807:	mov    ch,0x5c
  434809:	test   DWORD PTR [eax],0x14830044
  43480f:	mov    cl,0xb6
  434811:	and    BYTE PTR [eax+0x34],al
  434814:	jg     0x4347f1
  434816:	push   DWORD PTR [eax+eax*1]
  434819:	add    BYTE PTR [ebx],dh
  43481b:	lock bound edi,QWORD PTR [eax]
  43481e:	sub    eax,DWORD PTR [eax+eax*1-0x7d]
  434822:	fdiv   DWORD PTR [ebp+0x331863]
  434828:	add    BYTE PTR [ebx+0x38],ah
  43482b:	and    eax,esp
  43482d:	(bad)  
  43482e:	sbb    al,0xff
  434830:	add    al,0x0
  434832:	add    BYTE PTR [ebx],dh
  434834:	lock mov bh,BYTE PTR [eax]
  434837:	das    
  434838:	mov    ah,0xfe
  43483a:	sub    dl,BYTE PTR [ecx-0x10]
  43483d:	test   BYTE PTR [edx+0x1d0fdcc1],bh
  434843:	push   DWORD PTR [edi+edi*8-0x754f7501]
  43484a:	cmp    BYTE PTR [edi],ah
  43484c:	test   dh,bh
  43484e:	sbb    dl,0x5
  434851:	or     BYTE PTR gs:[ecx+0xc117],al
  434858:	mov    ah,0xac
  43485a:	std    
  43485b:	pushf  
  43485c:	pop    esp
  43485d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43485e:	cmp    DWORD PTR [eax],eax
  434860:	call   ebp
  434862:	mov    ecx,0xfdac6ceb
  434867:	pushf  
  434868:	mov    esp,0x500399b
  43486d:	pop    esi
  43486e:	test   DWORD PTR [eax],0x2cfda99d
  434874:	mov    eax,ds:0xdd28f52e
  434879:	test   eax,0xb87dbf82
  43487e:	inc    esp
  43487f:	clc    
  434880:	push   ds
  434881:	cmp    ebx,ebp
  434883:	test   BYTE PTR [ebp+0x20],ch
  434886:	aad    0xbf
  434888:	aaa    
  434889:	mov    ecx,0xa500e5c4
  43488e:	sub    ah,BYTE PTR [ebx-0x2566207]
  434894:	test   BYTE PTR [ecx-0x22df0ad2],dl
  43489a:	test   eax,0xa91add84
  43489f:	std    
  4348a0:	dec    esi
  4348a2:	aad    0xa0
  4348a4:	cmp    BYTE PTR [esi-0x1a7b0297],dh
  4348aa:	imul   ebp,DWORD PTR [ebx-0x655251e8],0x3e9be38
  4348b4:	and    ebp,edx
  4348b6:	test   al,0xfd
  4348b8:	jmp    FWORD PTR [esi-0x75c77d2b]
  4348be:	jmp    0x6daf75c6
  4348c3:	mov    edi,DWORD PTR [esi+0x2314c0dc]
  4348c9:	ret    0xfda8
  4348cc:	jmp    DWORD PTR [esi]
  4348ce:	popf   
  4348cf:	cmp    BYTE PTR [eax],0x7a
  4348d2:	jmp    0x6a0acdda
  4348d7:	stos   DWORD PTR es:[edi],eax
  4348d8:	or     BYTE PTR [eax+ecx*4],bl
  4348db:	mov    edi,0xf49b9d00
  4348e0:	add    esi,DWORD PTR [eax]
  4348e2:	je     0x4348d0
  4348e4:	aas    
  4348e5:	popf   
  4348e6:	and    al,0xda
  4348e8:	mov    edi,0xf4ff0376
  4348ed:	sahf   
  4348ee:	(bad)  
  4348ef:	pop    ds
  4348f0:	in     eax,0x0
  4348f2:	mov    dl,0x2
  4348f4:	push   0xe70364a6
  4348f9:	add    esi,DWORD PTR [eax-0x7a03a3fa]
  4348ff:	inc    edx
  434900:	out    0x50,eax
  434902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434903:	xchg   DWORD PTR [ebx],esi
  434905:	mov    edi,0xc266b244
  43490a:	cdq    
  43490b:	xor    al,0xb7
  43490d:	mov    WORD PTR [edi-0x3c],cs
  434910:	or     eax,0xd6b21806
  434915:	add    ch,BYTE PTR [eax+0x258ce3c3]
  43491b:	les    edx,FWORD PTR [edx]
  43491d:	adc    al,0x9a
  43491f:	test   eax,0x29d03fa
  434924:	pop    esi
  434925:	add    BYTE PTR [esi-0x15],al
  434928:	rol    DWORD PTR [ebx-0x63],0x7d
  43492c:	mov    edi,0x67fb00c2
  434931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434932:	hlt    
  434933:	add    ah,bh
  434935:	add    edi,DWORD PTR [eax-0x46049412]
  43493b:	inc    edx
  43493c:	out    0x8c,eax
  43493e:	cmc    
  43493f:	ret    
  434940:	into   
  434941:	sbb    eax,DWORD PTR [eax-0x5604ac12]
  434947:	inc    edx
  434948:	out    0xe6,eax
  43494a:	lds    eax,FWORD PTR [edx]
  43494c:	out    0x3,eax
  43494e:	mov    dh,ch
  434950:	arpl   bx,di
  434952:	test   DWORD PTR [edx-0x19],eax
  434955:	test   BYTE PTR [eax],al
  434957:	mov    bh,0x6
  434959:	sbb    eax,0x3a37dc8d
  43495e:	pusha  
  43495f:	lock xchg DWORD PTR [ecx+0x37],esi
  434963:	stos   DWORD PTR es:[edi],eax
  434964:	xchg   edx,eax
  434965:	add    dh,ah
  434967:	add    al,0x2
  434969:	sub    eax,0xf9d01f99
  43496e:	jmp    0x52024c11
  434973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434974:	fild   WORD PTR [ebx]
  434976:	jl     0x4349de
  434978:	push   cs
  434979:	inc    eax
  43497a:	jmp    0x4eb6865e
  43497f:	adc    eax,0x622a5ad2
  434984:	mov    esi,0x9e199ccc
  434989:	test   DWORD PTR [edx+edx*4-0x5b63387b],ebx
  434990:	fistp  QWORD PTR [edi-0x1a744]
  434996:	popa   
  434997:	rcl    DWORD PTR [edx],cl
  434999:	test   DWORD PTR [esi+edx*4-0x22fbdc66],esp
  4349a0:	stos   BYTE PTR es:[edi],al
  4349a1:	pop    ebx
  4349a2:	sub    esp,DWORD PTR [edx+0x659ccc02]
  4349a8:	push   esp
  4349a9:	dec    ebp
  4349aa:	push   0x32
  4349ac:	out    0x84,al
  4349ae:	cmp    eax,0x2d84f905
  4349b3:	add    eax,0xa92b84ed
  4349b8:	xchg   DWORD PTR [esi+0x299005d],edx
  4349be:	add    BYTE PTR [edx],al
  4349c0:	fiadd  WORD PTR [esi+0x5827f53e]
  4349c6:	jl     0x4349fd
  4349c8:	sahf   
  4349c9:	jno    0x4349b0
  4349cb:	jmp    0x434a24
  4349cd:	jno    0x4349ac
  4349cf:	stc    
  4349d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4349d1:	retf   0xfd87
  4349d4:	mov    edx,0xa1797e85
  4349d9:	add    al,BYTE PTR [eax]
  4349db:	bound  eax,QWORD PTR [edi+0x36]
  4349de:	xor    eax,0xfa433c00
  4349e3:	mov    bh,BYTE PTR [esi+edi*2]
  4349e6:	pop    esp
  4349e7:	and    al,0x6c
  4349e9:	jge    0x434a55
  4349eb:	cmp    ch,bh
  4349ed:	jmp    0x8d6b:0xdcef0423
  4349f4:	push   eax
  4349f5:	stos   DWORD PTR es:[edi],eax
  4349f6:	stc    
  4349f7:	mov    BYTE PTR [eax-0x58],dl
  4349fa:	sbb    DWORD PTR [ebx-0x7c278845],ecx
  434a00:	in     al,0x3
  434a02:	add    DWORD PTR [eax+ebx*4+0xa],0xb1a04283
  434a0a:	inc    DWORD PTR [eax]
  434a0c:	xor    al,0x4
  434a0e:	and    ebp,eax
  434a10:	add    eax,DWORD PTR [edx]
  434a12:	sub    ebp,ebp
  434a14:	scas   eax,DWORD PTR es:[edi]
  434a15:	inc    esp
  434a16:	js     0x4349a1
  434a18:	clc    
  434a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434a1a:	adc    eax,0x747d8403
  434a1f:	and    al,0x0
  434a21:	or     al,0x1
  434a23:	scas   eax,DWORD PTR es:[edi]
  434a24:	pop    ds
  434a25:	lea    esp,[edx]
  434a27:	and    al,0x10
  434a29:	add    edi,DWORD PTR [ecx]
  434a2b:	pop    esp
  434a2c:	cmp    bl,dh
  434a2e:	jle    0x434a8c
  434a30:	and    al,0xf0
  434a32:	jl     0x434aa6
  434a34:	inc    eax
  434a35:	outs   dx,DWORD PTR ds:[esi]
  434a36:	pop    ss
  434a37:	and    al,0xeb
  434a39:	icebp  
  434a3a:	xchg   edx,eax
  434a3b:	inc    ecx
  434a3c:	add    BYTE PTR [edi-0x2f48f844],dl
  434a42:	inc    eax
  434a43:	xor    ecx,ebp
  434a45:	ret    
  434a46:	test   eax,esp
  434a48:	add    BYTE PTR [ebx+eax*1+0x3b4ea79],dh
  434a4f:	stc    
  434a50:	push   DWORD PTR [ebx-0x3bff2b85]
  434a56:	add    eax,DWORD PTR [edi]
  434a58:	mov    bh,0x9d
  434a5a:	(bad)  
  434a5c:	clc    
  434a5d:	pop    sp
  434a5f:	cmp    bl,bl
  434a61:	es fucom st(7)
  434a64:	add    esp,DWORD PTR [edx-0x3800ff08]
  434a6a:	fucom  st(7)
  434a6c:	invd   
  434a6e:	xchg   ecx,eax
  434a6f:	mov    WORD PTR [ecx+eax*8],ss
  434a72:	xor    al,0x31
  434a74:	and    al,0x99
  434a76:	xor    al,0x39
  434a78:	and    al,0xbd
  434a7a:	pushf  
  434a7b:	mov    ah,0x85
  434a7d:	fld    DWORD PTR ds:0x4755b618
  434a83:	mov    edx,0x2d2000f9
  434a88:	cmc    
  434a89:	pop    es
  434a8a:	pushf  
  434a8b:	cdq    
  434a8c:	std    
  434a8d:	mov    cl,BYTE PTR [ecx]
  434a8f:	test   eax,0x993aff05
  434a94:	xchg   BYTE PTR [edi+ebp*2],al
  434a97:	int3   
  434a98:	add    DWORD PTR [esi],esi
  434a9a:	mov    al,0xad
  434a9c:	xchg   BYTE PTR [edi+ebp*2-0x5b],al
  434aa0:	out    dx,al
  434aa1:	inc    ebx
  434aa2:	xlat   BYTE PTR ds:[ebx]
  434aa3:	popf   
  434aa4:	cmp    BYTE PTR [ecx],al
  434aa6:	push   ds
  434aa7:	fild   DWORD PTR [ebx+esi*2]
  434aaa:	hlt    
  434aab:	add    esi,DWORD PTR [edi*2-0x6935b21]
  434ab2:	cli    
  434ab3:	cwde   
  434ab4:	std    
  434ab5:	jb     0x434a52
  434ab7:	sbb    al,0xbe
  434ab9:	(bad)  
  434aba:	ffree  st(0)
  434abc:	adc    al,0x2c
  434abe:	pushf  
  434abf:	sbb    al,0xce
  434ac1:	add    BYTE PTR [eax],ch
  434ac3:	popf   
  434ac4:	test   DWORD PTR [ecx+edx*2-0x1ddb1bfb],0xc2feffb5
  434acf:	cwde   
  434ad0:	cmp    cl,BYTE PTR [esi+eiz*1+0x2]
  434ad4:	cmp    ebp,eax
  434ad6:	push   0x7b
  434ad8:	cmp    ebp,eax
  434ada:	xchg   bl,ch
  434adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434add:	cmp    eax,0xe8137b90
  434ae2:	mov    ds:0x1843fd79,al
  434ae7:	dec    edi
  434ae8:	ret    
  434ae9:	verr   WORD PTR [eax]
  434aec:	pop    ss
  434aed:	retf   
  434aee:	stos   BYTE PTR es:[edi],al
  434aef:	xlat   BYTE PTR ds:[ebx]
  434af0:	lods   eax,DWORD PTR ds:[esi]
  434af1:	push   0xffffffbd
  434af3:	and    BYTE PTR [edi+0xb],cl
  434af6:	sbb    al,0x1a
  434af8:	inc    edi
  434af9:	add    esp,DWORD PTR [eax]
  434afb:	and    bh,BYTE PTR [ecx]
  434afd:	xlat   BYTE PTR ds:[ebx]
  434afe:	clc    
  434aff:	and    DWORD PTR [eax],esi
  434b01:	cld    
  434b02:	mov    cl,dl
  434b04:	out    0xea,al
  434b06:	add    BYTE PTR [ebp+0x7c],cl
  434b09:	mov    bl,0xe7
  434b0b:	mov    ds:0x856079fd,al
  434b10:	lods   eax,DWORD PTR ds:[esi]
  434b11:	pop    esi
  434b12:	cmp    bl,ch
  434b14:	jnp    0x434ad9
  434b16:	out    0xa6,eax
  434b18:	jns    0x434b0d
  434b1a:	out    0x43,eax
  434b1c:	in     al,0x11
  434b1e:	mov    ebp,0xe7b37a24
  434b23:	rol    ch,cl
  434b25:	stos   DWORD PTR es:[edi],eax
  434b26:	out    0xb6,eax
  434b28:	add    al,ch
  434b2a:	add    ebx,DWORD PTR [ebp+0x18339d7b]
  434b30:	push   edi
  434b31:	ret    
  434b32:	sti    
  434b33:	and    DWORD PTR [edi+0xb],ecx
  434b36:	and    BYTE PTR [eax],bl
  434b38:	inc    ecx
  434b39:	push   ebx
  434b3a:	stc    
  434b3b:	shr    BYTE PTR ds:0x822088e5,cl
  434b41:	mov    ds:0x224c71e7,eax
  434b46:	pop    edi
  434b47:	adc    BYTE PTR [eax],al
  434b49:	in     eax,dx
  434b4a:	and    bh,BYTE PTR [eax]
  434b4c:	pop    ds
  434b4d:	add    bh,bh
  434b4f:	add    dh,al
  434b51:	repz pop ds
  434b53:	xchg   BYTE PTR ss:[esi],dh
  434b56:	push   0x6d4d83c9
  434b5b:	or     al,0xad
  434b5d:	or     eax,0x25651969
  434b62:	imul   eax,DWORD PTR [eax],0xffffffcc
  434b65:	and    DWORD PTR [ecx+ecx*8-0x41],esp
  434b69:	pop    ds
  434b6a:	ins    DWORD PTR es:[edi],dx
  434b6b:	add    al,0xba
  434b6d:	dec    esp
  434b6e:	ins    BYTE PTR es:[edi],dx
  434b6f:	lock jle 0x434bc0
  434b72:	imul   eax,DWORD PTR ds:0xdb61e2c2,0xab2019c1
  434b7c:	lods   al,BYTE PTR ds:[esi]
  434b7d:	and    eax,0x3f7ec75f
  434b82:	pop    edi
  434b83:	rcl    BYTE PTR [edx+0x39156e21],0x32
  434b8a:	outs   dx,BYTE PTR ds:[esi]
  434b8b:	rcl    BYTE PTR [edx+0x3ec76336],1
  434b91:	fdiv   QWORD PTR [esi]
  434b93:	lock ss clc 
  434b96:	add    eax,0xccbe622a
  434b9b:	sub    eax,0x64ccbe5a
  434ba0:	sbb    al,0x96
  434ba2:	add    cl,ch
  434ba4:	sahf   
  434ba5:	jne    0x434bc1
  434ba7:	call   0x6c954e4a
  434bac:	ret    0xffe6
  434baf:	mov    ecx,0xb9872048
  434bb4:	add    BYTE PTR ds:0xac3004c2,bl
  434bba:	mov    cl,0x8b
  434bbc:	imul   ebx,DWORD PTR [ecx],0x5
  434bbf:	add    cl,ch
  434bc1:	popa   
  434bc2:	or     BYTE PTR [eax],al
  434bc4:	jmp    0x1352b67
  434bc9:	bound  edi,QWORD PTR [edi+0x30]
  434bcc:	xor    esp,0x1
  434bcf:	inc    ecx
  434bd0:	jne    0x434bd3
  434bd2:	jnp    0x434c4e
  434bd4:	jl     0x434b94
  434bd6:	add    BYTE PTR [eax],al
  434bd8:	mov    ecx,0xb7
  434bdd:	cmp    edx,esp
  434bdf:	and    eax,DWORD PTR [eax]
  434be1:	(bad)  
  434be2:	jb     0x434c42
  434be4:	mov    DWORD PTR [ebp+eax*4-0x40],esi
  434be8:	add    al,0xcd
  434bea:	icebp  
  434beb:	in     al,dx
  434bec:	mov    eax,0x75
  434bf1:	xchg   edx,eax
  434bf2:	jge    0x434c6e
  434bf4:	xchg   esp,eax
  434bf5:	add    BYTE PTR [eax],0x0
  434bf8:	xor    eax,esp
  434bfa:	jge    0x434c76
  434bfc:	lods   al,BYTE PTR ds:[esi]
  434bfd:	jb     0x434bff
  434bff:	add    BYTE PTR [ecx+0xe1ef6],cl
  434c05:	inc    esp
  434c06:	jg     0x434c82
  434c08:	mov    al,0x72
  434c0a:	add    BYTE PTR [eax],al
  434c0c:	mov    DWORD PTR [esi+0x34000e26],esi
  434c12:	dec    edx
  434c13:	mov    ebx,0xccba98cc
  434c18:	int3   
  434c19:	add    BYTE PTR [eax-0x46],ch
  434c1c:	int3   
  434c1d:	int3   
  434c1e:	js     0x434bda
  434c20:	int3   
  434c21:	int3   
  434c22:	loope  0x434ca0
  434c24:	in     al,dx
  434c25:	push   ecx
  434c26:	jg     0x434bbe
  434c28:	push   eax
  434c29:	adc    al,0x4
  434c2b:	add    BYTE PTR [ebx+0x56],cl
  434c2e:	(bad)  
  434c2f:	icebp  
  434c30:	pop    es
  434c31:	mov    ebp,DWORD PTR [eax+0x36]
  434c34:	pop    esp
  434c35:	or     eax,DWORD PTR [eax+eax*1]
  434c38:	test   DWORD PTR [edx+edx*4],ecx
  434c3b:	jge    0x434c92
  434c3d:	cld    
  434c3e:	mov    edi,0x9d8f07bc
  434c43:	jp     0x434c42
  434c45:	call   FWORD PTR [ebp+0x984ef3e]
  434c4b:	xor    bl,BYTE PTR ds:0x8a999d05
  434c51:	pushf  
  434c52:	adc    eax,0x9d000916
  434c57:	int3   
  434c58:	outs   dx,BYTE PTR ds:[esi]
  434c59:	adc    al,0xea
  434c5b:	mov    ah,0x6e
  434c5d:	sbb    al,0xa
  434c5f:	add    al,0xf9
  434c61:	int3   
  434c62:	das    
  434c63:	mov    dl,0x30
  434c65:	sbb    BYTE PTR [edi],ah
  434c67:	xor    eax,0x99a957ff
  434c6c:	std    
  434c6d:	test   BYTE PTR [ecx+0x31],dl
  434c70:	push   ecx
  434c71:	add    eax,0x93fb999d
  434c76:	mov    ds:0x9d001011,eax
  434c7b:	int3   
  434c7c:	add    al,0x3f
  434c7e:	add    BYTE PTR [esi],dl
  434c80:	xchg   ebp,eax
  434c81:	test   DWORD PTR [esi+edx*4-0x67],ebx
  434c85:	std    
  434c86:	test   al,dh
  434c88:	cmp    eax,0x4ca9b106
  434c8d:	push   es
  434c8e:	mov    cl,0xa9
  434c90:	xor    al,0x1f
  434c92:	xor    eax,0x733d676e
  434c97:	mov    fs,WORD PTR [eax]
  434c99:	push   eax
  434c9a:	cld    
  434c9b:	daa    
  434c9c:	test   DWORD PTR [ebx],eax
  434c9e:	pop    eax
  434c9f:	xchg   ecx,eax
  434ca0:	cdq    
  434ca1:	std    
  434ca2:	xor    eax,0x14559b01
  434ca7:	popf   
  434ca8:	cdq    
  434ca9:	das    
  434caa:	sub    ah,BYTE PTR [esi]
  434cac:	mov    es,WORD PTR ds:0x51495187
  434cb2:	add    eax,0x908a999d
  434cb7:	dec    ebp
  434cb8:	aad    0xfd
  434cba:	jmp    DWORD PTR [esi]
  434cbc:	add    bl,al
  434cbe:	add    eax,0xc5478e2
  434cc3:	test   al,0xb8
  434cc5:	push   ecx
  434cc6:	xchg   BYTE PTR [eax],ah
  434cc8:	cmp    eax,0x72218bcb
  434ccd:	and    ecx,DWORD PTR ds:0x5d19029d
  434cd3:	sbb    BYTE PTR [ebp+0x5520c514],ah
  434cd9:	stos   DWORD PTR es:[edi],eax
  434cda:	lea    esp,[esi-0x6]
  434cdd:	inc    eax
  434cde:	mov    edx,DWORD PTR [ecx]
  434ce0:	jp     0x434d1d
  434ce2:	or     eax,0x2e029d00
  434ce7:	lea    edi,[esi+0x48]
  434cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434ceb:	mov    esi,DWORD PTR [ecx]
  434ced:	jae    0x434d12
  434cef:	or     eax,0x5d19029d
  434cf4:	sbb    BYTE PTR [eax-0x48963aec],ah
  434cfa:	fwait
  434cfb:	enter  0xb761,0x33
  434cff:	enter  0xb759,0x2b
  434d03:	enter  0xb751,0xbc
  434d07:	mov    WORD PTR [ecx-0x7a],cs
  434d0a:	cmp    ebp,esp
  434d0c:	sbb    DWORD PTR [ebx+ebp*8+0x54],edx
  434d10:	and    BYTE PTR [esi+ebp*2],cl
  434d13:	dec    ebx
  434d14:	xchg   ebp,eax
  434d15:	jnp    0x434cb3
  434d17:	stos   DWORD PTR es:[edi],eax
  434d18:	and    BYTE PTR [eax+eiz*2],dl
  434d1b:	dec    edi
  434d1c:	push   ecx
  434d1d:	jle    0x434cd7
  434d1f:	dec    esp
  434d21:	jnp    0x434cd7
  434d23:	mov    ds:0x50df5418,eax
  434d28:	and    BYTE PTR [edi+esi*8],ch
  434d2b:	hlt    
  434d2c:	fstp   TBYTE PTR [ebx-0x64]
  434d2f:	lahf   
  434d30:	xchg   esp,eax
  434d31:	jno    0x434d4b
  434d33:	(bad)  
  434d34:	fcmovnb st,st(3)
  434d36:	add    BYTE PTR [ebx],cl
  434d38:	xchg   ecx,eax
  434d39:	inc    ebp
  434d3b:	pusha  
  434d3c:	and    edi,esp
  434d3e:	add    al,0xe9
  434d40:	sahf   
  434d41:	or     DWORD PTR [eax+0x29029],0x3f260060
  434d4b:	add    eax,0x88819ee9
  434d50:	xor    DWORD PTR [eax+0x16700002],ebx
  434d56:	aaa    
  434d57:	add    eax,0x88819ee9
  434d5c:	sbb    DWORD PTR [eax+0x16700002],esp
  434d62:	dec    edi
  434d63:	add    eax,0x88819ee9
  434d68:	xor    DWORD PTR [eax+0x26620002],ebp
  434d6e:	dec    esi
  434d6f:	adc    al,0xe9
  434d71:	sahf   
  434d72:	jg     0x434d08
  434d74:	jno    0x434d60
  434d76:	(bad)  
  434d77:	(bad)  
  434d78:	call   0x60a60dee
  434d7d:	fidiv  DWORD PTR [edi-0x2]
  434d80:	jno    0x434d98
  434d82:	dec    esi
  434d83:	adc    al,0xe9
  434d85:	sahf   
  434d86:	xlat   BYTE PTR ds:[ebx]
  434d87:	icebp  
  434d88:	test   al,0x27
  434d8a:	dec    ebp
  434d8b:	fsub   DWORD PTR [eax-0x75]
  434d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d8f:	xchg   DWORD PTR [esi+eax*1-0x670308d7],edi
  434d96:	add    al,BYTE PTR [eax]
  434d98:	out    0x23,al
  434d9a:	push   eax
  434d9b:	(bad)  
  434d9c:	call   0x71d7cb3f
  434da1:	sar    bh,cl
  434da3:	(bad)  
  434da4:	call   0x5437a2c0
  434da9:	adc    esp,DWORD PTR [edi+0x100e9f9]
  434daf:	mov    eax,0x7ccefffd
  434db4:	dec    ebp
  434db5:	in     al,dx
  434db6:	lea    eax,[eax-0x10]
  434db9:	nop
  434dba:	jg     0x434dfc
  434dbc:	hlt    
  434dbd:	mov    edx,ebp
  434dbf:	stc    
  434dc0:	scas   al,BYTE PTR es:[edi]
  434dc1:	dec    esp
  434dc2:	addr16 add al,0x7
  434dc5:	mov    bh,0xb0
  434dc7:	jge    0x434dc3
  434dc9:	inc    eax
  434dca:	scas   eax,DWORD PTR es:[edi]
  434dcb:	shl    DWORD PTR [esi+0x6],0x7a
  434dcf:	jge    0x434d98
  434dd1:	mov    DWORD PTR [ecx+0x70895e66],ecx
  434dd7:	xchg   ebp,eax
  434dd8:	cli    
  434dd9:	cmp    bl,BYTE PTR [ecx+0x3f477756]
  434ddf:	jmp    0x434dc4
  434de1:	add    ax,WORD PTR [edx+0x4af3c48]
  434de8:	add    BYTE PTR [ebx],dh
  434dea:	cmp    ch,BYTE PTR [eax+edx*8-0x15828184]
  434df1:	sub    ecx,DWORD PTR [ebx]
  434df3:	jl     0x434e6a
  434df5:	loopne 0x434e06
  434df7:	mov    bl,0xb0
  434df9:	btc    DWORD PTR [edx+0x12038c],ebp
  434e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e01:	iret   
  434e02:	jne    0x434e80
  434e04:	test   al,0x16
  434e06:	je     0x434e0c
  434e08:	or     DWORD PTR [ebp-0x70],0xffffff81
  434e0c:	shl    DWORD PTR [esp+edx*2+0x1],0xaf
  434e11:	push   esp
  434e12:	add    ch,ah
  434e14:	add    al,0xfb
  434e16:	aad    0x33
  434e18:	and    edi,ecx
  434e1a:	add    esp,edx
  434e1c:	sbb    cl,BYTE PTR [esi]
  434e1e:	add    BYTE PTR [ebp+edi*2+0x75],al
  434e22:	cld    
  434e23:	scas   eax,DWORD PTR es:[edi]
  434e24:	icebp  
  434e25:	test   DWORD PTR [ebx-0xfba807],0x73a15e9d
  434e2f:	and    DWORD PTR [edi],ebx
  434e31:	stos   BYTE PTR es:[edi],al
  434e32:	or     DWORD PTR [ecx],esp
  434e34:	(bad)  
  434e35:	add    eax,DWORD PTR [eax]
  434e37:	popf   
  434e38:	push   ss
  434e39:	js     0x434eb3
  434e3b:	mov    ecx,0x26fffda4
  434e40:	xchg   DWORD PTR [ecx+0x711c8347],esi
  434e46:	dec    eax
  434e47:	mov    eax,ds:0x9dfffdb4
  434e4c:	push   ds
  434e4d:	mov    DWORD PTR [eax-0x6f],ecx
  434e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434e51:	std    
  434e52:	call   DWORD PTR [eax-0x36]
  434e55:	mov    BYTE PTR [ecx+edi*2-0x62000267],ah
  434e5c:	sbb    al,0xa7
  434e5e:	(bad)  
  434e5f:	gs aas 
  434e61:	jge    0x434e99
  434e63:	popf   
  434e64:	add    eax,0x1e1e62aa
  434e69:	inc    ebp
  434e6a:	cmp    ah,BYTE PTR [esi+0x54fdfd99]
  434e70:	js     0x434e24
  434e72:	add    BYTE PTR [ebp+0x9402f7],bl
  434e78:	aad    0x65
  434e7a:	push   es
  434e7b:	add    BYTE PTR [ebp-0x639d38dc],bl
  434e81:	enter  0xea7e,0x9f
  434e85:	push   ss
  434e86:	stos   DWORD PTR es:[edi],eax
  434e87:	jns    0x434eb3
  434e89:	xor    al,0x50
  434e8b:	cld    
  434e8c:	and    bl,ch
  434e8e:	sub    BYTE PTR [ebx+0x24],ch
  434e91:	mov    dh,0xa1
  434e93:	or     DWORD PTR [edx],edx
  434e95:	add    BYTE PTR [ebx-0x4de1b685],cl
  434e9b:	je     0x434e6e
  434e9d:	and    al,0x48
  434e9f:	lock and BYTE PTR ds:0x2965c85,ch
  434ea6:	out    0x3,eax
  434ea8:	push   ss
  434ea9:	mov    esp,edi
  434eab:	add    ebx,DWORD PTR [ebp+0x11455e02]
  434eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434eb2:	pushf  
  434eb3:	mov    bl,0x88
  434eb5:	cwde   
  434eb6:	jmp    0x434e44
  434eb8:	mov    fs,WORD PTR [edx+0x270548be]
  434ebe:	ret    0x2c06
  434ec1:	es pop esi
  434ec3:	add    DWORD PTR [esi],edx
  434ec5:	outs   dx,BYTE PTR cs:[esi]
  434ec7:	add    ch,BYTE PTR [eax+0x201b53ac]
  434ecd:	int3   
  434ece:	(bad)  
  434ecf:	aam    0x18
  434ed1:	stos   DWORD PTR es:[edi],eax
  434ed2:	pop    esi
  434ed3:	push   edi
  434ed4:	in     eax,0xf6
  434ed6:	jns    0x434ee0
  434ed8:	sbb    bh,dh
  434eda:	mov    DWORD PTR [ebx+0x7f6eba00],edi
  434ee0:	push   cs
  434ee1:	popf   
  434ee2:	add    al,BYTE PTR [ecx-0x75]
  434ee5:	(bad)  
  434ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ee7:	xor    al,0xb0
  434ee9:	sbb    BYTE PTR ds:0xa30e8993,ah
  434eef:	ins    BYTE PTR es:[edi],dx
  434ef0:	mov    ch,0xe
  434ef2:	addr16 pop esi
  434ef4:	aaa    
  434ef5:	jns    0x434e79
  434ef7:	xchg   edx,eax
  434ef8:	add    bl,bl
  434efa:	jnp    0x434ef8
  434efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434efd:	out    dx,al
  434efe:	mov    WORD PTR [edx],ss
  434f00:	push   esi
  434f01:	enter  0x8479,0x57
  434f05:	sub    BYTE PTR [edi-0x48ae37cd],dh
  434f0b:	sub    ecx,eax
  434f0d:	imul   esi,DWORD PTR [edi-0x7dbe7744],0x4cd8143b
  434f17:	call   0xec05:0x1f7a4a88
  434f1e:	cmp    eax,0xb82deb00
  434f23:	shl    DWORD PTR [esi+eiz*8-0x17d90655],0x7d
  434f2b:	inc    ebx
  434f2c:	sbb    DWORD PTR [edx],esp
  434f2e:	cmp    eax,0xfecf6401
  434f33:	sub    BYTE PTR [ecx],0xba
  434f36:	cli    
  434f37:	mov    dh,0x73
  434f39:	cdq    
  434f3a:	add    al,BYTE PTR [eax]
  434f3c:	ins    BYTE PTR es:[edi],dx
  434f3d:	mov    cl,0xa7
  434f3f:	mov    cl,0xf6
  434f41:	add    BYTE PTR [ecx],ch
  434f43:	add    eax,DWORD PTR [eax]
  434f45:	xchg   DWORD PTR [edi],edx
  434f47:	aas    
  434f48:	cdq    
  434f49:	out    dx,eax
  434f4a:	arpl   di,cx
  434f4c:	or     DWORD PTR [ecx+0x2e],esi
  434f4f:	add    eax,DWORD PTR [eax]
  434f51:	jmp    0x2a461373
  434f56:	push   ss
  434f57:	sub    bh,ah
  434f59:	jb     0x434ee6
  434f5b:	cli    
  434f5c:	xchg   BYTE PTR [ebp*8+0x25b95b7f],bl
  434f63:	push   0xfbe50c85
  434f68:	mov    al,0x2
  434f6a:	pop    edi
  434f6b:	out    dx,eax
  434f6c:	into   
  434f6d:	sbb    al,0x9d
  434f6f:	out    dx,eax
  434f70:	mov    esp,0xd1efb31d
  434f75:	or     al,0x97
  434f77:	and    bh,bh
  434f79:	pop    esp
  434f7a:	add    DWORD PTR [edi],esp
  434f7c:	push   es
  434f7d:	jmp    0x6c6cef20
  434f82:	pop    esi
  434f83:	adc    dh,BYTE PTR cs:[edx-0xe8b5555]
  434f8a:	sub    BYTE PTR [ebx-0x36d997c],0xff
  434f91:	call   0x8dc4fb46
  434f96:	xchg   esp,eax
  434f97:	add    al,BYTE PTR [eax]
  434f99:	add    bh,ch
  434f9b:	hlt    
  434f9c:	jp     0x434f98
  434f9e:	cs out dx,al
  434fa0:	add    BYTE PTR [esi+0x6b],ah
  434fa3:	ror    BYTE PTR es:[edx],0x0
  434fa7:	xor    al,0x1
  434fa9:	jecxz  0x434fb2
  434fab:	adc    ch,BYTE PTR [esi+0x7f]
  434fae:	les    ecx,FWORD PTR [esi]
  434fb0:	add    DWORD PTR [eax],eax
  434fb2:	xor    edx,esi
  434fb4:	js     0x434ff3
  434fb6:	clc    
  434fb7:	or     edx,0x7b5d0a6d
  434fbd:	add    BYTE PTR [eax],al
  434fbf:	add    al,0x7c
  434fc1:	push   0x3
  434fc3:	lahf   
  434fc4:	div    DWORD PTR [edx]
  434fc6:	ret    
  434fc7:	jno    0x434fc4
  434fc9:	mov    al,0x6
  434fcb:	hlt    
  434fcc:	add    BYTE PTR [eax],al
  434fce:	lea    esi,[ebp+0x73]
  434fd1:	jecxz  0x434fdb
  434fd3:	sub    eax,0xb4fffff9
  434fd8:	sub    DWORD PTR [ecx-0x3],0x4fc3b37
  434fdf:	sti    
  434fe0:	inc    edx
  434fe1:	hlt    
  434fe2:	jne    0x435028
  434fe4:	push   ecx
  434fe5:	push   esi
  434fe6:	pop    ebx
  434fe7:	aas    
  434fe8:	pop    ebx
  434fe9:	push   ebp
  434fea:	ret    
  434feb:	call   0x49101cb1
  434ff0:	ret    
  434ff1:	int3   
  434ff2:	int3   
  434ff3:	shl    DWORD PTR [ebx],1
  434ff5:	in     al,dx
  434ff6:	or     DWORD PTR [eax],0x13
  434ff9:	dec    ebx
  434ffa:	push   esi
  434ffb:	(bad)  
  434ffd:	pop    es
  434ffe:	mov    bh,0x9a
  435000:	cld    
  435001:	sub    dl,dl
  435003:	xchg   ebx,eax
  435004:	and    esi,ecx
  435006:	mov    ecx,0xfff762
  43500c:	sti    
  43500d:	outs   dx,DWORD PTR ds:[esi]
  43500e:	sbb    DWORD PTR [ebp-0x10],0x9d074281
  435015:	aam    0x46
  435017:	clc    
  435018:	mov    eax,ds:0x18fffd99
  43501d:	loope  0x435055
  43501f:	or     al,0xf4
  435021:	das    
  435022:	add    al,0x0
  435024:	popf   
  435025:	aam    0x46
  435027:	clc    
  435028:	sahf   
  435029:	cdq    
  43502a:	std    
  43502b:	call   FWORD PTR [eax]
  43502d:	(bad)  
  43502f:	xchg   eax,edx
  435031:	sahf   
  435032:	std    
  435033:	call   FWORD PTR [esi]
  435035:	aam    0x5
  435037:	inc    ecx
  435038:	adc    al,0x8f
  43503a:	lods   eax,DWORD PTR ds:[esi]
  43503b:	xchg   DWORD PTR [eax-0x50096ef],eax
  435041:	cdq    
  435042:	std    
  435043:	test   dl,dh
  435045:	and    BYTE PTR [edi],ch
  435047:	lock call 0x2c5:0x6884ecec
  43504f:	int    0x24
  435051:	dec    edi
  435052:	test   al,0x87
  435054:	push   eax
  435055:	lds    edi,FWORD PTR [ebx+edx*2-0x37]
  435059:	adc    bl,dl
  43505b:	jnp    0x434ff2
  43505d:	add    BYTE PTR [ebp+0x16d2109],dh
  435063:	add    BYTE PTR [ebp-0x6507a750],bl
  435069:	inc    esi
  43506a:	push   0x80999d00
  43506f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435070:	add    cl,al
  435072:	cdq    
  435073:	std    
  435074:	call   FWORD PTR [ebp+0x4dbc769c]
  43507a:	repz stc 
  43507c:	inc    DWORD PTR [edx-0x6c438ad0]
  435082:	cdq    
  435083:	std    
  435084:	mov    ch,0x8d
  435086:	cdq    
  435087:	std    
  435088:	push   DWORD PTR [esi-0x1c3a1574]
  43508e:	add    al,ah
  435090:	add    cl,BYTE PTR [esi+ebp*2]
  435093:	xchg   edi,eax
  435094:	das    
  435095:	fwait
  435096:	add    ah,bh
  435098:	sub    DWORD PTR [eax],esp
  43509a:	int3   
  43509b:	rcl    esi,0x63
  43509e:	ja     0x43504f
  4350a0:	sti    
  4350a1:	mov    esp,0x8f6b56f9
  4350a6:	add    ah,bh
  4350a8:	add    ch,bh
  4350aa:	mov    DWORD PTR [edi+0x19],ebp
  4350ad:	popf   
  4350ae:	add    ch,BYTE PTR [esi+0x53]
  4350b1:	mov    cl,0x7a
  4350b3:	sti    
  4350b4:	adc    al,0x14
  4350b6:	inc    edx
  4350b7:	sti    
  4350b8:	add    cl,BYTE PTR [edi-0x76]
  4350bb:	push   eax
  4350bc:	sbb    DWORD PTR [ebp-0x6ec491fe],ebx
  4350c2:	ja     0x43505b
  4350c4:	sti    
  4350c5:	sbb    al,BYTE PTR [esi]
  4350c7:	fdivr  DWORD PTR [esi+0xd]
  4350ca:	rol    WORD PTR [ebx],1
  4350cd:	popf   
  4350ce:	jno    0x4350c7
  4350d0:	ins    BYTE PTR es:[edi],dx
  4350d1:	fisub  DWORD PTR [edx-0x2dfffc19]
  4350d7:	dec    edx
  4350d8:	sti    
  4350d9:	fucom  st(0)
  4350db:	sbb    esi,DWORD PTR [esi-0x2c9e95e]
  4350e1:	mov    bl,0x3f
  4350e3:	jns    0x43515c
  4350e5:	ins    BYTE PTR es:[edi],dx
  4350e6:	pop    DWORD PTR [edx]
  4350e8:	out    0x7c,eax
  4350ea:	cs sahf 
  4350ec:	mov    esi,0x7b773f18
  4350f1:	je     0x43510c
  4350f3:	or     eax,0xb5ff03e7
  4350f8:	test   DWORD PTR [edx],ebp
  4350fa:	mov    ds:0x9d1a4f72,al
  4350ff:	add    ah,dh
  435101:	rol    dl,0x3f
  435104:	jnp    0x435181
  435106:	and    eax,0x9edf005f
  43510b:	add    cl,BYTE PTR [ecx]
  43510d:	fs mov ah,0x9b
  435110:	stc    
  435111:	data16 adc al,BYTE PTR ss:[ecx+ebp*8]
  435116:	sahf   
  435117:	test   edx,esi
  435119:	out    0x22,al
  43511b:	enter  0xe8ff,0x9e
  43511f:	xlat   BYTE PTR ds:[ebx]
  435120:	jb     0x435177
  435122:	pushf  
  435123:	xchg   BYTE PTR [esi+0x9029ee9],ah
  435129:	jle    0x435148
  43512b:	push   ebx
  43512c:	jp     0x435111
  43512e:	sahf   
  43512f:	add    bh,BYTE PTR [ecx+0x29ef9]
  435135:	rol    BYTE PTR [edi-0x76],cl
  435138:	dec    ebx
  435139:	adc    DWORD PTR [eax],eax
  43513b:	mov    BYTE PTR [edx+0x29ef7bc],cl
  435141:	xor    eax,0x92aaf36
  435146:	ss adc eax,0x9ee37c53
  43514c:	add    al,BYTE PTR [edi-0x32dafd6c]
  435152:	retf   
  435153:	pop    ecx
  435154:	dec    edx
  435155:	or     BYTE PTR [eax+0x5b],dh
  435158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435159:	(bad)  
  43515a:	loopne 0x43518a
  43515c:	pop    ebx
  43515d:	adc    ch,cl
  43515f:	sahf   
  435160:	xchg   DWORD PTR [eax-0x23],edx
  435163:	cmp    BYTE PTR [edx+0x29ed7b8],al
  435169:	mov    ch,ch
  43516b:	pop    DWORD PTR [edi+0x3a9fc543]
  435171:	adc    al,0x72
  435173:	(bad)  
  435174:	test   BYTE PTR [ecx+esi*1+0x50908791],0xa4
  43517c:	add    al,BYTE PTR [eax]
  43517e:	popa   
  43517f:	stos   BYTE PTR es:[edi],al
  435180:	or     eax,DWORD PTR [ebp+0xe31d400]
  435186:	add    BYTE PTR [esi+ebx*1+0x4d75ec75],al
  43518d:	adc    al,0xb1
  43518f:	inc    esp
  435190:	mov    edi,0x629766c3
  435195:	or     DWORD PTR [ebp-0x44],0x20
  435199:	push   esp
  43519a:	or     ah,ah
  43519c:	sbb    al,0x90
  43519e:	mov    esp,0x54a00
  4351a3:	mov    ebx,DWORD PTR [ecx]
  4351a5:	jno    0x435205
  4351a7:	mov    DWORD PTR [ebp*1+0x7e34000e],ebx
  4351ae:	sbb    DWORD PTR [esi-0x41],esp
  4351b1:	xor    DWORD PTR [eax+0x50e7c],esi
  4351b7:	data16 xlat BYTE PTR ds:[ebx]
  4351b9:	push   0xffffff83
  4351bb:	mov    BYTE PTR [eax-0x5],dh
  4351be:	(bad)  
  4351bf:	call   FWORD PTR [edx]
  4351c1:	pushf  
  4351c2:	mov    cl,0xb8
  4351c4:	fiadd  DWORD PTR [eax+eax*1]
  4351c7:	add    eax,DWORD PTR [ecx+0x6d]
  4351ca:	or     DWORD PTR [eax-0x450],0x5581b5df
  4351d4:	shl    BYTE PTR [eax-0x63cd7750],0xf9
  4351db:	push   DWORD PTR [ebx]
  4351dd:	idiv   bh
  4351df:	push   DWORD PTR [ebx+edi*4+0x6e7189f2]
  4351e6:	or     DWORD PTR [eax-0x7d0],0xffffffaf
  4351ed:	pop    edi
  4351ee:	jbe    0x435257
  4351f0:	ret    
  4351f1:	pop    ss
  4351f2:	nop
  4351f3:	mov    esp,0x8900048e
  4351f8:	leave  
  4351f9:	bound  ebx,QWORD PTR [esi-0x2d]
  4351fc:	popf   
  4351fd:	mov    esi,DWORD PTR [ebp+0x48]
  435200:	xchg   ebp,eax
  435201:	and    al,BYTE PTR [edi-0x1c]
  435204:	add    BYTE PTR [ebx],al
  435206:	xchg   ebx,eax
  435207:	lea    edi,[eax-0x7b025675]
  43520d:	int    0xbd
  43520f:	ja     0x435191
  435211:	and    eax,0x25fffdb8
  435216:	scas   al,BYTE PTR es:[edi]
  435217:	adc    al,0x85
  435219:	fadd   DWORD PTR [ebp+0x3]
  43521c:	pop    eax
  43521d:	mov    cl,0x24
  43521f:	sub    al,0x14
  435221:	push   ss
  435222:	(bad)  
  435223:	cmc    
  435224:	test   DWORD PTR ds:0x9d001283,ecx
  43522a:	adc    DWORD PTR [eax],ebx
  43522c:	or     DWORD PTR [esi],edx
  43522e:	cmp    dh,BYTE PTR [eax+0x12]
  435231:	popf   
  435232:	test   eax,0xab097b76
  435237:	inc    ebp
  435238:	adc    al,0x4c
  43523a:	call   0x8598:0xdc83c5d7
  435241:	push   eax
  435242:	icebp  
  435243:	jle    0x435299
  435245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435246:	cdq    
  435247:	jl     0x4351d9
  435249:	xor    DWORD PTR [eax+0x7f16fffd],edi
  43524f:	test   eax,0x6bd21462
  435254:	adc    bl,BYTE PTR [ebp+0x3b1696a9]
  43525a:	adc    al,0x65
  43525c:	mov    esp,0x61fda997
  435261:	out    dx,al
  435262:	enter  0x723,0xf5
  435266:	adc    DWORD PTR [ebx],0xac9d0000
  43526c:	inc    eax
  43526d:	clc    
  43526e:	adc    al,0x22
  435270:	imul   edx,DWORD PTR [edx],0x8876a99d
  435276:	pop    ecx
  435277:	add    bh,cl
  435279:	add    ebx,DWORD PTR [ebp+0x8b0a583]
  43527f:	call   0xa034:0x89e12de1
  435286:	push   DWORD PTR [ebx+0xae57a85]
  43528c:	jo     0x4352d6
  43528e:	sub    DWORD PTR [eax],0xf82593e0
  435294:	out    0x3,al
  435296:	and    BYTE PTR [edx],dh
  435298:	sti    
  435299:	jns    0x4352b8
  43529b:	pop    edx
  43529c:	icebp  
  43529d:	add    ebx,DWORD PTR [ebp+0x1814eb8a]
  4352a3:	inc    ebp
  4352a4:	inc    ebx
  4352a5:	add    al,0xd5
  4352a7:	imul   BYTE PTR [ebp+0x2b]
  4352aa:	mov    DWORD PTR [edi+edx*2-0x18fd7094],ecx
  4352b1:	jp     0x435288
  4352b3:	or     bl,BYTE PTR [edi+0x17]
  4352b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4352b7:	mov    esi,DWORD PTR [edi+0x6f]
  4352ba:	scas   eax,DWORD PTR es:[edi]
  4352bb:	add    ah,bh
  4352bd:	jp     0x435245
  4352bf:	scas   al,BYTE PTR es:[edi]
  4352c0:	call   0xf794fc10
  4352c5:	fchs   
  4352c7:	daa    
  4352c8:	push   ss
  4352c9:	sahf   
  4352ca:	jo     0x435290
  4352cc:	cmc    
  4352cd:	jnp    0x4352cf
  4352cf:	or     eax,0x9d03d95e
  4352d4:	sub    BYTE PTR [eax+0x6b],ah
  4352d7:	adc    eax,0xba03e6f8
  4352dc:	xor    ebp,esp
  4352de:	add    ebx,DWORD PTR [ebp+0x3fa2b628]
  4352e4:	or     DWORD PTR [edi+0x6c],esi
  4352e7:	pop    DWORD PTR [edx]
  4352e9:	out    0x80,eax
  4352eb:	repnz add edx,eax
  4352ee:	in     al,dx
  4352ef:	test   al,0x9e
  4352f1:	add    cl,ch
  4352f3:	xor    edx,esi
  4352f5:	(bad)  
  4352f6:	call   0xf4397299
  4352fb:	xchg   ecx,eax
  4352fc:	mov    edx,DWORD PTR [edi]
  4352fe:	call   0x5e4c55a1
  435303:	add    DWORD PTR [ebp+0x6],ebx
  435306:	jmp    0x713a3aa9
  43530b:	mov    dl,0x9a
  43530d:	test   DWORD PTR [ecx-0x13],esi
  435310:	lock (bad) 
  435312:	call   0x6be1e8c
  435317:	pop    eax
  435318:	push   ebx
  435319:	nop
  43531a:	sub    DWORD PTR [edi-0x62],edx
  43531d:	stc    
  43531e:	jo     0x435312
  435320:	scas   al,BYTE PTR es:[edi]
  435321:	bound  edi,QWORD PTR [edx]
  435323:	inc    DWORD PTR [edi+0x41b7e148]
  435329:	in     al,0xcf
  43532b:	aaa    
  43532c:	mov    ?,WORD PTR [eax-0x7afd6129]
  435332:	cdq    
  435333:	add    BYTE PTR [edx-0x4c8e7f7c],cl
  435339:	add    al,BYTE PTR [eax]
  43533b:	jno    0x4352e2
  43533d:	or     eax,0x9e42a485
  435342:	push   ecx
  435343:	std    
  435344:	test   DWORD PTR [edx],ebx
  435346:	adc    al,0x62
  435348:	mov    ecx,0x8659860a
  43534d:	lock (bad) 
  43534f:	call   0x624c49ba
  435354:	or     DWORD PTR [edi+0x12],ebx
  435357:	jmp    0xd5bedafa
  43535c:	lahf   
  43535d:	cmp    dl,BYTE PTR [eax+ebx*4]
  435360:	scas   al,BYTE PTR es:[edi]
  435361:	in     al,0xc5
  435363:	dec    edi
  435364:	in     al,dx
  435365:	stos   DWORD PTR es:[edi],eax
  435366:	test   DWORD PTR [ecx+ecx*1],ebx
  435369:	mov    dl,BYTE PTR [eax+eax*1-0x52]
  43536d:	push   ecx
  43536e:	adc    DWORD PTR [eax-0x8d8],0x66fc343f
  435378:	std    
  435379:	sub    DWORD PTR [eax-0x1cfe7bea],edi
  43537f:	and    BYTE PTR [edx+0x7ec0b81b],ah
  435385:	add    DWORD PTR [eax],eax
  435387:	data16 aaa 
  435389:	or     WORD PTR [eax-0x828],0xffa2
  435391:	cdq    
  435392:	mov    cl,0xb8
  435394:	inc    edx
  435395:	add    DWORD PTR [eax],eax
  435397:	add    eax,DWORD PTR [eax]
  435399:	mov    ecx,0xf888816e
  43539e:	idiv   bh
  4353a0:	dec    edi
  4353a2:	sbb    DWORD PTR [esi+edx*1-0x3d84fecc],edi
  4353a9:	jmp    0x5a514530
  4353ae:	dec    ebp
  4353af:	adc    DWORD PTR [ebp-0x28],0xbfe2cae7
  4353b6:	fld    DWORD PTR [edi]
  4353b8:	mov    DWORD PTR [ecx+0x65],eax
  4353bb:	pop    esi
  4353bc:	or     DWORD PTR [ecx+ebp*1+0x19f4000e],edx
  4353c3:	push   eax
  4353c4:	adc    al,0x7e
  4353c6:	cmp    DWORD PTR [eax-0x77fefbea],0x3d19d504
  4353d0:	in     al,0xf5
  4353d2:	dec    eax
  4353d3:	adc    al,0x8b
  4353d5:	ins    BYTE PTR es:[edi],dx
  4353d6:	cmc    
  4353d7:	adc    DWORD PTR [eax-0x873],0x8807de4f
  4353e1:	rcl    BYTE PTR [edi+0x779d9084],1
  4353e7:	push   cs
  4353e8:	add    BYTE PTR [ebp-0x6313d8e0],bl
  4353ee:	jecxz  0x4353ff
  4353f0:	scas   eax,DWORD PTR es:[edi]
  4353f1:	(bad)  
  4353f2:	icebp  
  4353f3:	mov    ecx,0x81c3ce62
  4353f8:	mov    esi,0xbc94238e
  4353fd:	add    BYTE PTR [ebx+0x1461fda9],ch
  435403:	and    ch,BYTE PTR [edx+edx*1-0x63]
  435407:	test   eax,0xa99c279c
  43540c:	std    
  43540d:	popa   
  43540e:	dec    esi
  43540f:	mov    BYTE PTR [esi],bl
  435411:	pop    es
  435412:	or     eax,0x9d000e42
  435417:	sub    bl,al
  435419:	std    
  43541a:	inc    ebp
  43541b:	mov    ebx,0x949d0004
  435420:	outs   dx,BYTE PTR ds:[esi]
  435421:	mov    BYTE PTR [ebx-0x70],ah
  435424:	std    
  435425:	push   DWORD PTR [esi+0x32]
  435428:	jnp    0x435475
  43542a:	xor    eax,0x8bbc7c21
  43542f:	test   eax,0x5c5a34fd
  435434:	push   ds
  435435:	or     edx,ebp
  435437:	cmp    eax,eax
  435439:	push   es
  43543a:	popf   
  43543b:	test   eax,0x8c01537c
  435440:	rcr    dh,cl
  435442:	push   ss
  435443:	push   edx
  435444:	cmc    
  435445:	xchg   BYTE PTR [eax+0xd],bl
  435448:	push   ds
  435449:	pop    es
  43544a:	or     eax,0x9d000e32
  43544f:	adc    BYTE PTR [esp+edx*1+0x17],dl
  435453:	sub    ch,BYTE PTR [edx+edx*1-0x63]
  435457:	test   eax,0x20ac0475
  43545c:	aas    
  43545d:	in     al,0x9c
  43545f:	add    bh,BYTE PTR [edi]
  435461:	adc    BYTE PTR [eax],al
  435463:	and    BYTE PTR [ebx],bl
  435465:	repz jle 0x4354bd
  435468:	or     bl,BYTE PTR [ebp-0x6d]
  43546b:	repnz hlt 
  43546d:	out    0x3,al
  43546f:	and    eax,0xd7ef1f7
  435474:	pop    edi
  435475:	rol    DWORD PTR [ebx],1
  435477:	popf   
  435478:	xchg   DWORD PTR [eax+ebx*4],esi
  43547b:	call   0xace8:0xad74d333
  435482:	and    DWORD PTR [eax-0x55],ebx
  435485:	outs   dx,BYTE PTR ds:[esi]
  435486:	cmp    BYTE PTR [ebp-0x7501c473],al
  43548c:	mov    DWORD PTR [edi+0x67],esi
  43548f:	pop    DWORD PTR [edx]
  435491:	out    0x7e,eax
  435493:	into   
  435494:	sahf   
  435495:	add    DWORD PTR [ebp+0x25],edi
  435498:	pop    edx
  435499:	fld    DWORD PTR [ebx]
  43549b:	popf   
  43549c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43549d:	(bad)  
  43549e:	and    DWORD PTR [eax],ebx
  4354a0:	pop    edx
  4354a1:	sub    edi,ebp
  4354a3:	dec    edx
  4354a4:	fwait
  4354a5:	rcl    esi,0x3c
  4354a8:	xchg   DWORD PTR [edi+0x67],ebx
  4354ab:	pop    DWORD PTR [edx]
  4354ad:	out    0x21,eax
  4354af:	call   0xe602:0x9d117f5a
  4354b6:	cmp    BYTE PTR ds:0xaf675f89,ah
  4354bc:	add    ah,bh
  4354be:	jle    0x4354e5
  4354c0:	pop    esi
  4354c1:	stc    
  4354c2:	add    ebx,DWORD PTR [ebp+0xb0257f]
  4354c8:	sbb    BYTE PTR [ecx-0x76add620],0xb4
  4354cf:	xchg   edi,eax
  4354d0:	jg     0x435481
  4354d2:	add    eax,0x700a557e
  4354d7:	inc    eax
  4354d8:	stc    
  4354d9:	and    eax,DWORD PTR [eax]
  4354db:	loopne 0x43550b
  4354dd:	pop    edx
  4354de:	adc    ch,cl
  4354e0:	sahf   
  4354e1:	test   DWORD PTR [eax-0x3],edx
  4354e4:	dec    eax
  4354e5:	cmp    BYTE PTR [eax-0x77fd6109],0xed
  4354ec:	pop    DWORD PTR [ebp+0x3a9ec543]
  4354f2:	adc    al,0x72
  4354f4:	jns    0x4354ec
  4354f6:	test   DWORD PTR [ecx+0x36],ebx
  4354f9:	lock (bad) 
  4354fb:	call   0x614ba019
  435500:	lods   eax,DWORD PTR ds:[esi]
  435501:	or     eax,DWORD PTR [ebp-0xb0a87]
  435507:	call   0xe92f730d
  43550c:	out    0xee,al
  43550e:	scas   al,BYTE PTR es:[edi]
  43550f:	stc    
  435510:	push   eax
  435511:	shl    BYTE PTR [edx-0x66],0x4
  435515:	sbb    BYTE PTR [esi-0x438d198a],bh
  43551b:	fistp  WORD PTR [esi-0x3e9f9dfe]
  435521:	pop    edx
  435522:	adc    ch,cl
  435524:	sahf   
  435525:	lahf   
  435526:	or     eax,0x62b969c7
  43552b:	loopne 0x43552d
  43552d:	push   cs
  43552e:	pop    ebx
  43552f:	adc    ch,cl
  435531:	sahf   
  435532:	pop    ss
  435533:	mov    edi,0xbc8aa7ee
  435538:	xlat   BYTE PTR ds:[ebx]
  435539:	sahf   
  43553a:	add    al,BYTE PTR [ebp-0x3217b55c]
  435540:	pusha  
  435541:	ret    0x83a6
  435544:	xor    BYTE PTR [edx-0x668c48f4],bh
  43554a:	add    al,BYTE PTR [eax]
  43554c:	cs mov edx,0x9ee8fd9a
  435552:	add    ah,ch
  435554:	add    BYTE PTR [edx],al
  435556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435557:	jmp    0xc4ff:0xfe2cf275
  43555e:	add    eax,0xfecc45bf
  435563:	(bad)  
  435564:	push   DWORD PTR [esi+esi*2+0x5bbb90c]
  43556b:	add    BYTE PTR [eax],al
  43556d:	or     ebx,ecx
  43556f:	test   DWORD PTR [esp+eax*8],0x79830005
  435576:	dec    esi
  435577:	add    al,0x29
  435579:	xor    DWORD PTR [esi+0x7],0xf7673085
  435580:	jmp    DWORD PTR [ebx+0x198b534c]
  435586:	inc    eax
  435587:	mov    ebx,0xcc5130cc
  43558c:	int3   
  43558d:	mov    ecx,0x51ec17
  435592:	(bad)  
  435593:	fadd   DWORD PTR [edi]
  435595:	mov    esi,edx
  435597:	and    DWORD PTR [esi],ecx
  435599:	add    BYTE PTR [esi+ebp*1-0x3],dh
  43559d:	(bad)  
  43559e:	shr    BYTE PTR [edx-0x9],cl
  4355a1:	push   edi
  4355a2:	pop    DWORD PTR [eax+eax*1]
  4355a5:	add    BYTE PTR [esi+edi*2],dh
  4355a8:	icebp  
  4355a9:	or     esp,DWORD PTR [edx+0x33]
  4355ac:	pop    esi
  4355ad:	mov    esi,DWORD PTR [ebx+eiz*8-0x36]
  4355b1:	loop   0x435572
  4355b3:	fist   DWORD PTR [ebx]
  4355b5:	mov    ecx,edi
  4355b7:	pusha  
  4355b8:	pop    esi
  4355b9:	or     edx,ecx
  4355bb:	sub    eax,0x1604000e
  4355c0:	dec    esi
  4355c1:	or     BYTE PTR [esi-0x7d],bh
  4355c4:	mov    eax,0x8804f416
  4355c9:	add    al,0x5
  4355cb:	add    al,0x56
  4355cd:	adc    al,0x9d
  4355cf:	and    eax,0xab8bb78f
  4355d4:	std    
  4355d5:	test   BYTE PTR [ebx-0x49],ch
  4355d8:	jl     0x435624
  4355da:	xchg   ebp,eax
  4355db:	adc    al,0x3a
  4355dd:	cld    
  4355de:	and    eax,0x2b84f8b7
  4355e3:	out    0xe,eax
  4355e5:	add    BYTE PTR [ebp+0xc1443aa],bl
  4355eb:	fwait
  4355ec:	xlat   BYTE PTR ds:[ebx]
  4355ed:	lds    eax,FWORD PTR [ebx+0x5c]
  4355f0:	pushf  
  4355f1:	jge    0x4355d2
  4355f3:	lods   eax,DWORD PTR ds:[esi]
  4355f4:	jnp    0x435588
  4355f6:	add    cl,ch
  4355f8:	mov    eax,0x123bfffd
  4355fd:	jp     0x4355b7
  4355ff:	mov    bl,0xa9
  435601:	std    
  435602:	in     al,0xae
  435604:	aas    
  435605:	int    0xe0
  435607:	add    edx,DWORD PTR [ebx-0x56544785]
  43560d:	std    
  43560e:	jl     0x43566c
  435610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435611:	jl     0x43559d
  435613:	xor    DWORD PTR [eax-0x18e90003],edx
  435619:	test   DWORD PTR [ebx+edx*1-0x62fff62a],0xa6f77ce1
  435624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435625:	dec    ebx
  435626:	bound  edx,QWORD PTR [esi]
  435628:	ficomp DWORD PTR [ecx]
  43562a:	int    0x3f
  43562c:	adc    eax,0x67241432
  435631:	mov    eax,ds:0x6c0fa462
  435636:	adc    bl,BYTE PTR [ebp-0x6aad8957]
  43563c:	adc    edi,DWORD PTR [edx-0x48]
  43563f:	mov    bl,0xa9
  435641:	std    
  435642:	xchg   DWORD PTR [ecx-0x4ea5fb46],ebx
  435648:	add    ch,BYTE PTR [ebp-0x72]
  43564b:	dec    edx
  43564c:	icebp  
  43564d:	out    0x3,al
  43564f:	and    BYTE PTR [ecx],bl
  435651:	sti    
  435652:	jp     0x4356bb
  435654:	or     bl,BYTE PTR [esi+0x41]
  435657:	jmp    0x13a31e6
  43565c:	sbb    DWORD PTR [ecx+0x3b],esi
  43565f:	push   cs
  435660:	popf   
  435661:	add    ch,al
  435663:	inc    ebp
  435664:	test   eax,0xe0d9d751
  435669:	and    BYTE PTR [esi-0x2b3bbf65],dh
  43566f:	jl     0x435680
  435671:	push   edi
  435672:	stc    
  435673:	add    ebx,DWORD PTR [ebp-0x1a829fe0]
  435679:	lock out 0x3,al
  43567c:	mov    eax,0x7dd340f3
  435681:	and    al,ah
  435683:	jge    0x4356da
  435685:	lock out 0x3,al
  435688:	or     dl,al
  43568a:	in     al,dx
  43568b:	jl     0x4356a4
  43568d:	push   esi
  43568e:	icebp  
  43568f:	add    ebx,DWORD PTR [ebp+0x18142c8b]
  435695:	mov    BYTE PTR [ebx+0xd],cl
  435698:	popf   
  435699:	add    ah,BYTE PTR [esi-0x3d]
  43569c:	popa   
  43569d:	add    DWORD PTR [eax+0x930d4f7],0x7b
  4356a4:	ins    DWORD PTR es:[edi],dx
  4356a5:	and    BYTE PTR [esi-0x4b7df5f],dl
  4356ab:	jl     0x43568b
  4356ad:	xchg   esi,eax
  4356ae:	sar    esp,0xc
  4356b1:	pop    edx
  4356b2:	stc    
  4356b3:	add    ebx,DWORD PTR [ebp+0x20fbb18b]
  4356b9:	cmp    BYTE PTR [edi+0xd],0x9d
  4356bd:	add    ch,BYTE PTR [edi-0x1]
  4356c0:	add    BYTE PTR [ebx-0x5d68ffff],ch
  4356c6:	adc    BYTE PTR [edx+0x29870],0x72
  4356cd:	mov    eax,0xf6af84ee
  4356d2:	jge    0x435717
  4356d4:	adc    eax,0x6208ee76
  4356d9:	sbb    BYTE PTR [esi+0x12],dl
  4356dc:	jmp    0xd59eee7f
  4356e1:	push   ecx
  4356e2:	repnz and eax,0xe8c5b023
  4356e8:	push   0xffffffdc
  4356ea:	lea    eax,[edi-0xbca81]
  4356f0:	call   0x91c5d68d
  4356f5:	mov    ds:0x8cc20002,eax
  4356fa:	and    al,0xcd
  4356fc:	leave  
  4356fd:	cmp    edi,0xffffff81
  435700:	sub    DWORD PTR [ebx+0x5e6a0002],0xf55f86ff
  43570a:	lock (bad) 
  43570c:	call   0x1c7af29e
  435711:	xchg   ecx,eax
  435712:	or     ecx,DWORD PTR [edx+0x29977]
  435718:	(bad)
  43571d:	sahf   
  43571e:	pop    ss
  43571f:	imul   esp
  435721:	and    BYTE PTR [eax],0x9
  435724:	aas    
  435725:	add    BYTE PTR [eax],ah
  435727:	addr16 cmp eax,0xb10ba129
  43572d:	ins    DWORD PTR es:[edi],dx
  43572e:	adc    ebx,DWORD PTR [ecx]
  435730:	push   es
  435731:	jmp    0x39c877d4
  435736:	xchg   ebx,eax
  435737:	(bad)  
  435738:	fisub  WORD PTR [edx+0x73]
  43573b:	out    dx,al
  43573c:	popa   
  43573d:	add    BYTE PTR ds:0x416b888,ch
  435743:	add    al,BYTE PTR [edi]
  435745:	mov    dh,0x6a
  435747:	es push cs
  435749:	add    ah,dh
  43574b:	sbb    cl,BYTE PTR [esi+0x8]
  43574e:	mov    WORD PTR [edx],cs
  435750:	or     edi,edi
  435752:	inc    edx
  435753:	push   es
  435754:	pop    es
  435755:	mov    dh,0x6a
  435757:	sub    DWORD PTR [esi],ecx
  435759:	add    ah,dh
  43575b:	sbb    al,BYTE PTR [esi+0x14]
  43575e:	outs   dx,DWORD PTR ds:[esi]
  43575f:	inc    esp
  435760:	or     BYTE PTR [eax-0x697d0f08],cl
  435766:	mov    BYTE PTR [eax+eax*1],al
  435769:	add    BYTE PTR [ebp+0x52ca21ee],al
  43576f:	mov    bl,0xe8
  435771:	mov    ebx,0x1c5
  435776:	lds    edi,FWORD PTR [edi]
  435778:	adc    al,0x83
  43577a:	not    BYTE PTR [edx+0x5e]
  43577d:	mov    DWORD PTR [edx],esi
  43577f:	sub    DWORD PTR [esi],ecx
  435781:	add    BYTE PTR [eax+ebx*1+0x172bc8e],al
  435788:	add    bl,ch
  43578a:	add    BYTE PTR [esi-0x17785071],dl
  435790:	inc    edx
  435791:	inc    eax
  435792:	add    BYTE PTR [edx-0x75796be5],ah
  435798:	cwde   
  435799:	stc    
  43579a:	jmp    DWORD PTR [edx+0x6d66dab3]
  4357a0:	xchg   DWORD PTR [eax+0x7b014416],edi
  4357a6:	rol    DWORD PTR [edi+0x18],0x86
  4357aa:	mov    esp,0x3000172
  4357af:	mov    edi,0x4b1076aa
  4357b4:	or     eax,0x2c9dff5a
  4357b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4357ba:	test   eax,ebx
  4357bc:	mov    ds:0x370b8b36,eax
  4357c1:	std    
  4357c2:	call   FWORD PTR [ebp+0x60e8bb10]
  4357c8:	shl    DWORD PTR [ebx-0xe89e907],cl
  4357ce:	inc    esi
  4357cf:	adc    BYTE PTR ds:0xab9d0775,dl
  4357d5:	js     0x435799
  4357d7:	add    eax,0xeaf9a5af
  4357dc:	arpl   WORD PTR [eax-0x7b],cx
  4357df:	clc    
  4357e0:	pop    ebp
  4357e1:	ror    ah,0xe9
  4357e4:	out    0xb0,al
  4357e6:	int3   
  4357e7:	loope  0x43585e
  4357e9:	js     0x4357d7
  4357eb:	push   ds
  4357ec:	xchg   edi,eax
  4357ed:	push   cs
  4357ee:	dec    ebp
  4357ef:	add    BYTE PTR [esi],dl
  4357f1:	ds or  al,0x2d
  4357f4:	iret   
  4357f5:	int3   
  4357f6:	xor    al,0x37
  4357f8:	or     eax,0xaafff68b
  4357fd:	mov    bl,0x81
  4357ff:	aaa    
  435800:	sahf   
  435801:	stos   DWORD PTR es:[edi],eax
  435802:	std    
  435803:	in     al,0xa2
  435805:	sub    BYTE PTR es:[ebx*4+0x16f43720],ah
  43580d:	and    ch,BYTE PTR [eax+0x12]
  435810:	popf   
  435811:	test   eax,0xdaa9b10e
  435816:	mov    BYTE PTR [eax-0x26beb],dh
  43581c:	call   0x4f12:0xdf2dd82b
  435823:	cld    
  435824:	and    BYTE PTR [ebx-0x77],dl
  435827:	mov    BYTE PTR [ecx],dl
  435829:	mov    ah,0xfd
  43582b:	call   DWORD PTR [edi+ebp*8]
  43582e:	xchg   edi,eax
  43582f:	or     DWORD PTR [eax],ebx
  435831:	add    esi,DWORD PTR [eax+0x4]
  435834:	popf   
  435835:	add    ch,dl
  435837:	pop    edx
  435838:	leave  
  435839:	dec    edi
  43583a:	in     eax,0x62
  43583c:	lea    eax,[edx]
  43583e:	out    0x3,eax
  435840:	js     0x4357da
  435842:	jo     0x43587d
  435844:	adc    eax,0x722229d8
  435849:	add    edi,DWORD PTR [edx-0x28]
  43584c:	cmp    DWORD PTR ds:0xaf7fba5e,ebx
  435852:	add    eax,0xa65008f
  435857:	jo     0x43589a
  435859:	icebp  
  43585a:	sbb    al,0xe0
  43585c:	jae    0x435883
  43585e:	in     eax,dx
  43585f:	out    0x3,al
  435861:	sbb    BYTE PTR [ebx],dh
  435863:	fisttp DWORD PTR [ebp+0x3d15b35]
  435869:	popf   
  43586a:	mov    dl,bl
  43586c:	hlt    
  43586d:	lds    eax,FWORD PTR [edx-0x2d]
  435870:	mov    ss,WORD PTR [ebp+0xa]
  435873:	ins    DWORD PTR es:[edi],dx
  435874:	jae    0x435868
  435876:	in     al,dx
  435877:	out    0x3,al
  435879:	sbb    BYTE PTR [ebx],bl
  43587b:	sti    
  43587c:	mov    es,WORD PTR [esi-0x6a]
  43587f:	pop    edi
  435880:	not    DWORD PTR [ebp-0x50a0a879]
  435886:	add    ah,bh
  435888:	mov    ds:0xf377eedd,al
  43588d:	ror    al,0x41
  435890:	mov    bh,0x77
  435892:	xchg   DWORD PTR [esp+ebx*4],esi
  435895:	es cs in eax,dx
  435898:	xchg   ebx,eax
  435899:	sbb    dh,BYTE PTR [edx+0x53]
  43589c:	stc    
  43589d:	push   0xffffff93
  43589f:	add    DWORD PTR [ebp+0x3d95a2d],ecx
  4358a5:	popf   
  4358a6:	test   eax,0x29d0563
  4358ab:	add    BYTE PTR [edi],cl
  4358ad:	sbb    cl,dh
  4358af:	lods   al,BYTE PTR ds:[esi]
  4358b0:	pop    es
  4358b1:	or     ah,BYTE PTR [eax+0x5acef062]
  4358b7:	adc    ch,cl
  4358b9:	add    BYTE PTR [esi+0x7940c795],bl
  4358bf:	xchg   esp,eax
  4358c0:	stc    
  4358c1:	jmp    0x69fda955
  4358c6:	imul   eax,DWORD PTR [edx+0x0],0xffffffee
  4358ca:	ja     0x43593a
  4358cc:	mov    ch,0xef
  4358ce:	mov    ds:0xe720002,al
  4358d3:	xchg   ebx,eax
  4358d4:	stc    
  4358d5:	jmp    0xb4cb05e5
  4358da:	push   ss
  4358db:	jge    0x435930
  4358dd:	loope  0x4358aa
  4358df:	mov    ebp,0x518f887a
  4358e4:	xchg   esp,eax
  4358e5:	inc    ebx
  4358e6:	mov    ds:0x21e8fffe,al
  4358eb:	das    
  4358ec:	lock (bad) 
  4358ee:	adc    esi,DWORD PTR [ebp+eax*4+0x72096a1]
  4358f5:	jns    0x435950
  4358f7:	lock (bad) 
  4358f9:	call   0x91dba98b
  4358fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4358ff:	xchg   edx,eax
  435900:	stc    
  435901:	bound  ebp,QWORD PTR [ecx-0x12]
  435904:	xchg   ebp,esp
  435906:	(bad)  
  435907:	mov    eax,DWORD PTR [eax-0x2b]
  43590a:	lods   eax,DWORD PTR ds:[esi]
  43590b:	push   esp
  43590c:	cwde   
  43590d:	jo     0x435896
  43590f:	xchg   edx,eax
  435910:	stc    
  435911:	(bad)
  435916:	test   eax,0x21f81c7a
  43591b:	jae    0x4358d9
  43591d:	inc    DWORD PTR [eax]
  43591f:	sahf   
  435920:	add    al,BYTE PTR [ebp+0x408c092c]
  435926:	add    BYTE PTR [eax+0x35],bh
  435929:	adc    BYTE PTR [edx],ch
  43592b:	push   cs
  43592c:	(bad)  
  43592e:	jmp    0x4358ef
  435930:	inc    ecx
  435931:	clc    
  435932:	lea    ebp,[eax-0x4b761000]
  435938:	and    cl,BYTE PTR [esi]
  43593a:	add    BYTE PTR [esp+ebx*8-0x80],al
  43593e:	cwde   
  43593f:	or     al,0x8d
  435941:	stc    
  435942:	(bad)  
  435943:	fisttp WORD PTR [edi+0x30788b5f]
  435949:	add    al,0x4
  43594b:	add    al,0x6
  43594d:	pop    esi
  43594e:	rcl    DWORD PTR [esi-0x24],cl
  435951:	add    BYTE PTR [eax-0x67374],dl
  435957:	pop    es
  435958:	inc    ecx
  435959:	clc    
  43595a:	mov    DWORD PTR [edx+eiz*1+0xe],ebp
  43595e:	add    ah,dh
  435960:	jle    0x43597e
  435962:	mov    ebp,0x4046cc
  435967:	dec    edi
  435968:	fsincos 
  43596a:	mov    DWORD PTR [ecx],esi
  43596c:	jbe    0x4359eb
  43596e:	fisttp DWORD PTR [eax-0x11]
  435971:	and    dh,BYTE PTR [ecx+esi*2]
  435974:	xchg   BYTE PTR [eax+eax*2-0x3c],cl
  435978:	jle    0x435902
  43597a:	mov    esp,0xbf0005aa
  43597f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435980:	add    eax,0x9f000000
  435985:	outs   dx,DWORD PTR ds:[esi]
  435986:	xor    ecx,edi
  435988:	loop   0x435960
  43598a:	pop    ebp
  43598b:	mov    edx,DWORD PTR [edx-0x25]
  43598e:	retf   0xffe7
  435991:	cmp    eax,0x2d7d6608
  435996:	mov    eax,0x7058416
  43599b:	mov    dh,0x1c
  43599d:	sub    eax,0x9b9d000e
  4359a2:	mov    WORD PTR [eax-0x77],?
  4359a5:	and    edi,ecx
  4359a7:	ss pop edx
  4359a9:	fcomi  st,st(7)
  4359ab:	or     BYTE PTR [ebx],cl
  4359ad:	and    edx,DWORD PTR [esi+0x12]
  4359b0:	popf   
  4359b1:	fwait
  4359b2:	mov    WORD PTR [eax-0x6b],cs
  4359b5:	and    al,0x15
  4359b7:	adc    al,0x25
  4359b9:	pop    es
  4359ba:	jne    0x3ac8d5
  4359c0:	sub    bh,BYTE PTR [eax]
  4359c2:	cmp    eax,0xeb8aec14
  4359c7:	les    eax,FWORD PTR [ebx+0x6085aeec]
  4359cd:	retf   
  4359ce:	mov    DWORD PTR [esi+edx*4-0x35],ecx
  4359d2:	xchg   DWORD PTR es:[ebp+0x13],ecx
  4359d6:	idiv   edi
  4359d8:	cli    
  4359d9:	repz or BYTE PTR [edx-0x32],ah
  4359dd:	or     BYTE PTR [edi],ah
  4359df:	pop    es
  4359e0:	sub    eax,0xe2fff733
  4359e5:	fwait
  4359e6:	int3   
  4359e7:	xchg   DWORD PTR [eax],eax
  4359e9:	and    eax,0xd2fff747
  4359ee:	push   esp
  4359ef:	xchg   BYTE PTR [ebx-0x37],dl
  4359f2:	sbb    DWORD PTR [ebx-0x2646400],ebx
  4359f8:	ins    BYTE PTR es:[edi],dx
  4359f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4359fa:	cwde   
  4359fb:	push   ebx
  4359fc:	scas   al,BYTE PTR es:[edi]
  4359fd:	sbb    eax,0xb60043d2
  435a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435a03:	xchg   dh,al
  435a05:	fadd   st(1),st
  435a07:	add    DWORD PTR [ecx],ecx
  435a09:	push   ebx
  435a0a:	or     eax,DWORD PTR [esi+eax*2+0x4b8699dd]
  435a11:	cdq    
  435a12:	test   al,0x52
  435a14:	jl     0x435a62
  435a16:	pushf  
  435a17:	xchg   BYTE PTR [eax+0x3f90339],cl
  435a1d:	popf   
  435a1e:	dec    ebx
  435a1f:	test   DWORD PTR [ebx],0xbebe029d
  435a25:	sbb    cl,BYTE PTR [esi]
  435a27:	xchg   edi,eax
  435a28:	(bad)  [ecx+0x11]
  435a2b:	pop    es
  435a2c:	mov    ebp,esi
  435a2e:	(bad)  
  435a2f:	jmp    0x997e38a
  435a34:	mov    ebp,DWORD PTR [ecx+ebp*1-0x6a]
  435a38:	mov    ds:0x25ef3b20,al
  435a3d:	call   0xe290:0x2af69f72
  435a44:	push   ebp
  435a45:	add    eax,0x9d03f14b
  435a4a:	jnp    0x4359e3
  435a4c:	test   DWORD PTR [eax],0x9ed7ef1a
  435a52:	pop    ebp
  435a53:	neg    BYTE PTR [ebp+0x4c]
  435a56:	test   eax,0x327c70ff
  435a5b:	stc    
  435a5c:	out    0x3,al
  435a5e:	sbb    BYTE PTR [ebx],dh
  435a60:	out    dx,eax
  435a61:	mov    ecx,DWORD PTR [ecx+0x21745df1]
  435a67:	stc    
  435a68:	out    0x3,al
  435a6a:	aam    0x42
  435a6c:	fist   DWORD PTR [ebp+ebp*4-0x24]
  435a70:	sub    al,0x26
  435a72:	fcomp  DWORD PTR [edi+0x7dcd515e]
  435a78:	xchg   ebx,eax
  435a79:	or     DWORD PTR [ebp-0x70a08887],ebp
  435a7f:	add    ah,bh
  435a81:	mov    cl,BYTE PTR [esi-0x72]
  435a84:	dec    ecx
  435a85:	(bad)  
  435a86:	in     eax,0x4a
  435a88:	icebp  
  435a89:	add    ebx,DWORD PTR [ebp-0x9751f65]
  435a8f:	inc    BYTE PTR [eax-0x75]
  435a92:	test   eax,0x4e4f0053
  435a97:	lods   eax,DWORD PTR ds:[esi]
  435a98:	(bad)  
  435a99:	loopne 0x435a91
  435a9b:	dec    edx
  435a9c:	adc    ch,cl
  435a9e:	sahf   
  435a9f:	(bad)  
  435aa0:	retf   0x1670
  435aa3:	dec    esi
  435aa4:	adc    ch,cl
  435aa6:	sahf   
  435aa7:	test   DWORD PTR [esp+edx*2],edi
  435aaa:	pop    esi
  435aab:	int    0x3f
  435aad:	jmp    0x644b85d9
  435ab2:	add    BYTE PTR [ebx],ch
  435ab4:	stc    
  435ab5:	sub    DWORD PTR [ecx-0x62],0x2
  435ab9:	add    dl,al
  435abb:	xor    dl,BYTE PTR [eax+edi*8-0x4b]
  435abf:	fiadd  WORD PTR [edx]
  435ac1:	test   DWORD PTR [ecx-0x36],esi
  435ac4:	hlt    
  435ac5:	(bad)  
  435ac6:	call   0xe9434d8b
  435acb:	sahf   
  435acc:	in     eax,0xf0
  435ace:	add    ah,bl
  435ad0:	or     edx,DWORD PTR [edx-0x39]
  435ad3:	pop    ss
  435ad4:	mov    al,ds:0x85381a62
  435ad9:	dec    eax
  435ada:	loope  0x435a9c
  435adc:	pop    es
  435add:	mov    al,0x61
  435adf:	call   0x51325472
  435ae4:	push   0xffffffb8
  435ae6:	call   FWORD PTR [esi-0x2d667afe]
  435aec:	xchg   BYTE PTR [eax+edi*4],bl
  435aef:	xor    eax,DWORD PTR [edx+0x14]
  435af2:	out    dx,al
  435af3:	jo     0x435b5f
  435af5:	mov    bh,0xdf
  435af7:	sahf   
  435af8:	add    al,BYTE PTR [ebp+0x4885b279]
  435afe:	icebp  
  435aff:	es out dx,al
  435b01:	or     DWORD PTR [edx+0x29],esi
  435b04:	dec    esi
  435b05:	adc    ch,cl
  435b07:	sahf   
  435b08:	mov    DWORD PTR [eax-0xb],eax
  435b0b:	out    dx,eax
  435b0c:	repnz and eax,0xcae54f00
  435b12:	jmp    0x6200:0xb89079e2
  435b19:	add    al,BYTE PTR [eax]
  435b1b:	lea    edx,[eax-0x26741655]
  435b21:	inc    BYTE PTR [eax-0x66b3770]
  435b27:	call   FWORD PTR [edi]
  435b29:	xchg   ecx,eax
  435b2a:	pop    edi
  435b2b:	shl    DWORD PTR [esi],cl
  435b2d:	in     eax,0x0
  435b2f:	nop
  435b30:	fcom   QWORD PTR [ecx+edi*8-0x7e40c801]
  435b37:	mov    BYTE PTR [eax-0x4000066c],cl
  435b3d:	cmp    eax,0x26ac3bf4
  435b42:	push   cs
  435b43:	add    BYTE PTR [edi+edi*8],dh
  435b46:	jns    0x435b15
  435b48:	enter  0xf76f,0xf
  435b4c:	xor    edx,DWORD PTR [edx+edi*8]
  435b4f:	add    eax,DWORD PTR [edx+eax*1]
  435b52:	or     DWORD PTR [eax-0x66b78],0xffffff8a
  435b59:	xchg   esi,eax
  435b5a:	stc    
  435b5b:	inc    DWORD PTR [ebx+ebx*4]
  435b5e:	jmp    0x435ae9
  435b60:	xor    edx,edi
  435b62:	xor    cl,dh
  435b64:	or     dh,bl
  435b66:	push   es
  435b67:	mov    bh,0x47
  435b69:	push   es
  435b6a:	add    al,0x0
  435b6c:	(bad)  
  435b6d:	out    0x82,eax
  435b6f:	(bad)  
  435b70:	and    dl,BYTE PTR [ebx-0x26]
  435b73:	mov    ecx,DWORD PTR [edx+edi*8]
  435b76:	sbb    BYTE PTR [ebp-0x3c],0xe7
  435b7a:	add    BYTE PTR [eax-0x66b9400],dl
  435b80:	jmp    FWORD PTR [edi]
  435b82:	rcl    DWORD PTR [ebx],1
  435b84:	mov    bl,BYTE PTR [edx+ebp*1]
  435b87:	push   cs
  435b88:	add    BYTE PTR [ebp-0x53e37a65],bl
  435b8e:	mov    esp,0x4326143d
  435b93:	clc    
  435b94:	test   ch,dl
  435b96:	xchg   ebx,eax
  435b97:	xchg   DWORD PTR [eax-0x252bc],edx
  435b9d:	es (bad) 
  435b9f:	xchg   ebx,eax
  435ba0:	mov    BYTE PTR [ecx+0x29908894],cl
  435ba6:	xchg   ebp,eax
  435ba7:	std    
  435ba8:	jmp    DWORD PTR [edx-0x25]
  435bab:	imul   DWORD PTR [esi+0x62c7c1ad]
  435bb1:	outs   dx,BYTE PTR ds:[esi]
  435bb2:	jne    0x435b3c
  435bb4:	dec    ebx
  435bb5:	xchg   ebp,eax
  435bb6:	push   ds
  435bb7:	xor    DWORD PTR [esi],eax
  435bb9:	dec    ebp
  435bba:	and    ch,BYTE PTR [ebp-0x44]
  435bbd:	xchg   ebx,eax
  435bbe:	fwait
  435bbf:	std    
  435bc0:	popa   
  435bc1:	and    al,0x6b
  435bc3:	push   ebp
  435bc4:	adc    bl,BYTE PTR [ebp+0x16b10c9b]
  435bca:	cdq    
  435bcb:	add    DWORD PTR [eax],eax
  435bcd:	popf   
  435bce:	pop    esp
  435bcf:	cmp    eax,DWORD PTR [edi-0xcf0db]
  435bd5:	or     ah,BYTE PTR [eax-0x78]
  435bd8:	jecxz  0x435c3a
  435bda:	fsub   DWORD PTR [edx]
  435bdc:	test   DWORD PTR [esi],ebp
  435bde:	fwait
  435bdf:	add    DWORD PTR [eax],eax
  435be1:	add    BYTE PTR [ebp+0x4ae2b07d],bl
  435be7:	test   DWORD PTR [esi],eax
  435be9:	mov    al,0x25
  435beb:	(bad)  
  435bec:	std    
  435bed:	call   FWORD PTR [esi+0x118885e1]
  435bf3:	lods   eax,DWORD PTR ds:[esi]
  435bf4:	std    
  435bf5:	call   FWORD PTR [edx-0x6101902c]
  435bfb:	fwait
  435bfc:	std    
  435bfd:	pop    ecx
  435bfe:	and    al,0x2b
  435c00:	push   ecx
  435c01:	adc    bl,BYTE PTR [ebp+0x203ee702]
  435c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c08:	cmp    al,0xc7
  435c0a:	sar    DWORD PTR [ebp-0x73a2e473],1
  435c10:	(bad)  
  435c11:	xlat   BYTE PTR ds:[ebx]
  435c12:	push   edx
  435c13:	jle    0x435c86
  435c15:	jo     0x435bb4
  435c17:	add    ah,bh
  435c19:	mov    dl,bl
  435c1b:	add    bh,BYTE PTR [ecx-0x1eef853a]
  435c21:	and    eax,esi
  435c23:	leave  
  435c24:	out    0x10,al
  435c26:	fild   WORD PTR [edx+0x66]
  435c29:	lds    ebx,FWORD PTR [ecx+0x55877db1]
  435c2f:	in     al,dx
  435c30:	or     BYTE PTR [esi+0x5c417fbf],ch
  435c36:	popf   
  435c37:	add    ah,bh
  435c39:	add    ecx,esi
  435c3b:	(bad)  
  435c3c:	or     BYTE PTR [edi+0x3e74ef7],al
  435c42:	popf   
  435c43:	add    bl,ah
  435c45:	in     eax,dx
  435c46:	add    BYTE PTR [edi+edi*2+0x29dcc99],bh
  435c4d:	out    0x3,eax
  435c4f:	mov    fs,edx
  435c51:	mov    fs,esp
  435c53:	adc    cl,BYTE PTR [edi+eiz*8-0x1808e878]
  435c5a:	add    ebx,DWORD PTR [ebp-0x4d79368e]
  435c60:	add    dh,BYTE PTR [ecx+ecx*1+0x287f5d]
  435c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c68:	add    ch,al
  435c6a:	add    ebx,DWORD PTR [ebp+0x1ad7020e]
  435c70:	ror    BYTE PTR [edi+0x5],0x9d
  435c74:	add    ah,bh
  435c76:	(bad)  
  435c77:	fnstcw WORD PTR [esi-0x412e37d5]
  435c7d:	add    BYTE PTR [edx-0x77acf22],bh
  435c83:	sbb    esp,DWORD PTR [ecx+0x44dcf1ff]
  435c89:	iret   
  435c8a:	rcr    BYTE PTR [ebx-0x48447c3e],1
  435c90:	xchg   edx,eax
  435c91:	iret   
  435c92:	rcl    esp,0x4d
  435c95:	int3   
  435c96:	mov    ch,0x62
  435c98:	mov    esi,0xbe5aadcc
  435c9d:	int3   
  435c9e:	bound  esp,QWORD PTR [esi]
  435ca0:	dec    esi
  435ca1:	adc    ch,cl
  435ca3:	sahf   
  435ca4:	cmp    eax,0x896a07d
  435ca9:	push   ds
  435caa:	out    dx,al
  435cab:	add    ah,cl
  435cad:	push   0xffffffb8
  435caf:	call   FWORD PTR [esi+0x4d398502]
  435cb5:	xchg   BYTE PTR [eax-0xf],cl
  435cb8:	push   ss
  435cb9:	out    dx,al
  435cba:	push   cs
  435cbb:	jle    0x435c9b
  435cbd:	test   BYTE PTR [ecx+eiz*1-0x1eaf79d3],0xa7
  435cc5:	push   eax
  435cc6:	cwde   
  435cc7:	mov    al,ds:0x52f98b2c
  435ccc:	cs add bh,0xd7
  435cd0:	adc    BYTE PTR [esi+0x3223e148],al
  435cd6:	adc    al,0x73
  435cd8:	xchg   BYTE PTR [edx+0x12],cl
  435cdb:	jmp    0xd85fd77e
  435ce0:	pop    ss
  435ce1:	inc    edx
  435ce2:	adc    al,0xfa
  435ce4:	loope  0x435d05
  435ce6:	xchg   DWORD PTR [ecx+0x46],esi
  435ce9:	lock (bad) 
  435ceb:	call   0xffffd701
  435cf0:	sahf   
  435cf1:	add    dl,BYTE PTR [ebp+0x2a]
  435cf4:	fidivr DWORD PTR [ebp-0x3c6fff34]
  435cfa:	int3   
  435cfb:	int3   
  435cfc:	jo     0x435cc1
  435cfe:	int3   
  435cff:	int3   
  435d00:	sbb    DWORD PTR [esp+ebp*8+0x53],edi
  435d04:	or     bh,BYTE PTR [ecx+edx*8-0x75]
  435d08:	(bad)  
  435d09:	pop    ebp
  435d0a:	mov    bh,bh
  435d0c:	ret    
  435d0d:	push   0x7c007d7b
  435d12:	push   es
  435d13:	mov    edi,0xf9952880
  435d18:	dec    DWORD PTR [esi+eax*1+0x40c80000]
  435d1f:	or     DWORD PTR [eax+0x58],0x77
  435d23:	push   eax
  435d24:	or     ah,bh
  435d26:	mov    cl,BYTE PTR [edx]
  435d28:	push   DWORD PTR [edx+edx*4-0x2c93af7c]
  435d2f:	cmp    BYTE PTR [eax+0x58],0x77
  435d33:	ret    
  435d34:	rcr    DWORD PTR ds:0x6b0c87f7,0x6b
  435d3b:	inc    eax
  435d3c:	adc    al,0xcf
  435d3e:	out    0x13,al
  435d40:	mov    edx,DWORD PTR [esi+esi*8+0x55aacb81]
  435d47:	mov    BYTE PTR [ebx+ebp*1],cl
  435d4a:	imul   eax,DWORD PTR [eax+0x14],0xffffffaf
  435d4e:	out    0x13,al
  435d50:	mov    edx,DWORD PTR [esi+edi*8-0x7e]
  435d54:	retf   
  435d55:	imul   edx,DWORD PTR [ebp-0x47],0xffffffe9
  435d59:	or     al,0x7e
  435d5b:	or     al,0x17
  435d5d:	ret    
  435d5e:	ds adc al,0x5f
  435d61:	mov    DWORD PTR [edi+0x74],eax
  435d64:	sbb    bh,BYTE PTR [edi+0x36]
  435d67:	adc    al,0x8b
  435d69:	and    al,0xfe
  435d6b:	inc    edx
  435d6c:	mov    DWORD PTR [ecx],esp
  435d6e:	inc    BYTE PTR [ecx-0x7dc62e2]
  435d74:	push   cs
  435d75:	add    BYTE PTR [esi],ah
  435d77:	push   edi
  435d78:	add    eax,0x3fa75df9
  435d7d:	and    esi,0xe
  435d80:	lahf   
  435d81:	pop    edx
  435d82:	push   esi
  435d83:	outs   dx,BYTE PTR ds:[esi]
  435d84:	(bad)  
  435d85:	int3   
  435d86:	loope  0x435d6f
  435d88:	(bad)  
  435d89:	int3   
  435d8a:	(bad)  [edi-0x3f]
  435d8d:	int3   
  435d8e:	rcl    DWORD PTR [edi-0x3f],1
  435d91:	int3   
  435d92:	imul   eax,esi,0x471eec8a
  435d98:	fst    QWORD PTR [ecx+0x18]
  435d9b:	(bad)  
  435d9c:	mov    eax,ds:0xfe83542d
  435da1:	call   FWORD PTR [ebp+0x20d1ec9b]
  435da7:	pop    DWORD PTR [ebx+0x62]
  435daa:	push   ss
  435dab:	out    0xc8,eax
  435dad:	(bad)  
  435daf:	pushf  
  435db0:	mov    fs,WORD PTR [edx-0x62]
  435db3:	imul   ecx,DWORD PTR [eax],0x850163b1
  435db9:	dec    esp
  435dba:	loopne 0x435e37
  435dbc:	cmp    eax,0x1798457d
  435dc1:	in     al,0x6e
  435dc3:	or     DWORD PTR [edx-0x2b],edi
  435dc6:	mov    ch,0xbf
  435dc8:	or     BYTE PTR [ecx-0x7cfc972f],dh
  435dce:	dec    edi
  435dcf:	scas   eax,DWORD PTR es:[edi]
  435dd0:	out    dx,eax
  435dd1:	or     BYTE PTR [edx+0x57],dl
  435dd4:	sub    ah,al
  435dd6:	es jecxz 0x435e15
  435dd9:	bound  eax,QWORD PTR [eax]
  435ddb:	adc    al,0x57
  435ddd:	sub    ah,al
  435ddf:	cmc    
  435de0:	jp     0x435d79
  435de2:	stc    
  435de3:	cli    
  435de4:	mov    eax,0x612a0486
  435de9:	fsub   st(4),st
  435deb:	imul   eax,DWORD PTR [edx],0x43
  435dee:	cmp    DWORD PTR [eax],ebx
  435df0:	lahf   
  435df1:	mov    esp,0xbcb5e9c4
  435df6:	mov    ecx,es
  435df8:	test   bl,bh
  435dfa:	or     ah,BYTE PTR [eax]
  435dfc:	aas    
  435dfd:	out    dx,eax
  435dfe:	xor    al,0x6c
  435e00:	jge    0x435dc1
  435e02:	mov    WORD PTR [ebp-0x6],ds
  435e05:	pop    ebp
  435e06:	xor    esp,DWORD PTR [ecx-0x1d7b3083]
  435e0c:	mov    BYTE PTR [esi],dl
  435e0e:	les    ebx,FWORD PTR [edx]
  435e10:	das    
  435e11:	fisttp WORD PTR [ebp+0x7eaa86e6]
  435e17:	in     eax,dx
  435e18:	out    dx,al
  435e19:	out    0x3,al
  435e1b:	popf   
  435e1c:	add    ah,bh
  435e1e:	add    ebx,DWORD PTR [ecx+eax*4+0x13]
  435e22:	lock jp 0x435dad
  435e25:	hlt    
  435e26:	add    DWORD PTR [ebp-0x184d9bfe],ebx
  435e2c:	ror    BYTE PTR [eax],1
  435e2e:	and    DWORD PTR [ecx-0x44f01881],0xffffff87
  435e35:	imul   esi,DWORD PTR [ecx+ebp*4],0x2f8ae702
  435e3c:	xor    ebx,ebx
  435e3e:	add    eax,DWORD PTR [eax]
  435e40:	popf   
  435e41:	jns    0x435ea6
  435e43:	outs   dx,BYTE PTR ds:[esi]
  435e44:	fsincos 
  435e46:	out    0x3,al
  435e48:	sbb    bh,BYTE PTR [esi]
  435e4a:	imul   edi,DWORD PTR [esi-0x10412cdf],0x22
  435e51:	mov    bh,ah
  435e53:	mov    ah,ch
  435e55:	fwait
  435e56:	jmp    0x1c30:0x6020e0d2
  435e5d:	add    eax,0x8a5fdaa7
  435e62:	mov    ebx,0x4878c9
  435e67:	cdq    
  435e68:	add    cl,BYTE PTR [eax+0x3785ebf9]
  435e6e:	jge    0x435e90
  435e70:	lahf   
  435e71:	or     eax,DWORD PTR [ebx]
  435e73:	test   al,0x27
  435e75:	dec    eax
  435e76:	in     eax,0xeb
  435e78:	out    dx,eax
  435e79:	inc    edi
  435e7a:	stc    
  435e7b:	addr16 xchg ecx,eax
  435e7d:	out    dx,al
  435e7e:	(bad)  
  435e7f:	call   0xd593d39b
  435e84:	sahf   
  435e85:	add    al,BYTE PTR [edi+0x526436d]
  435e8b:	jmp    0xe942af2e
  435e90:	sahf   
  435e91:	add    ah,BYTE PTR [edx+0x70]
  435e94:	mov    al,BYTE PTR [edx+0x2f906dc2]
  435e9a:	adc    al,0xe9
  435e9c:	sahf   
  435e9d:	add    bh,cl
  435e9f:	ja     0x435e97
  435ea1:	hlt    
  435ea2:	(bad)  
  435ea3:	call   0x74f07ba8
  435ea8:	loop   0x435e45
  435eaa:	push   ecx
  435eab:	inc    esp
  435eac:	push   0xffffff9c
  435eae:	fild   WORD PTR [ecx-0x6788fab]
  435eb4:	push   0xfffffff0
  435eb6:	xor    dl,BYTE PTR [ecx+ebp*8]
  435eb9:	sahf   
  435eba:	mov    BYTE PTR [ebp+0x5b],dh
  435ebd:	sbb    DWORD PTR [ebx],edi
  435ebf:	cld    
  435ec0:	jb     0x435e4f
  435ec2:	cli    
  435ec3:	xchg   BYTE PTR [ebx],dh
  435ec5:	popf   
  435ec6:	jge    0x435e4a
  435ec8:	sbb    DWORD PTR ds:0x3750f987,ebp
  435ece:	inc    ebp
  435ecf:	test   DWORD PTR [ecx-0x17],eax
  435ed2:	mov    WORD PTR [ebp+0x62],?
  435ed5:	mov    eax,ds:0x27ba0f06
  435eda:	(bad)  
  435edb:	call   0xf9cc9451
  435ee0:	add    BYTE PTR [edi-0x7c],cl
  435ee3:	les    eax,FWORD PTR [edi+eax*4]
  435ee6:	ins    BYTE PTR es:[edi],dx
  435ee7:	stc    
  435ee8:	jl     0x435f45
  435eea:	jl     0x435f29
  435eec:	clc    
  435eed:	jge    0x435f31
  435eef:	clc    
  435ef0:	jmp    0x435ee5
  435ef2:	jns    0x435e98
  435ef4:	and    al,0xc4
  435ef6:	add    al,BYTE PTR [eax]
  435ef8:	add    BYTE PTR [edi],bh
  435efa:	add    eax,0x2b41450
  435eff:	or     DWORD PTR [edx+esi*1-0x3bfffd31],0x7b
  435f07:	xchg   esi,eax
  435f08:	pusha  
  435f09:	add    BYTE PTR [edi+0x3d480002],bh
  435f0f:	add    eax,0x2b41450
  435f14:	bound  eax,QWORD PTR [ecx]
  435f16:	cmovne eax,DWORD PTR [ecx-0x41b72]
  435f1d:	call   FWORD PTR [eax+ebx*8-0x1c]
  435f21:	call   FWORD PTR [ebx+0x7c]
  435f24:	jle    0x435f86
  435f26:	outs   dx,DWORD PTR ds:[esi]
  435f27:	add    al,BYTE PTR [eax]
  435f29:	cmp    DWORD PTR [esi],0x70
  435f2c:	stc    
  435f2d:	xchg   ebp,eax
  435f2e:	nop
  435f2f:	xchg   edx,eax
  435f30:	stc    
  435f31:	(bad)  
  435f32:	out    dx,eax
  435f33:	jl     0x435f89
  435f35:	adc    al,0x44
  435f37:	add    al,BYTE PTR [ecx+0x2caba9c]
  435f3d:	add    BYTE PTR [ecx+eax*1],dh
  435f40:	mov    ss,WORD PTR [eax+eiz*2+0x2]
  435f44:	add    BYTE PTR [ebx+0x13d2ca],cl
  435f4a:	inc    esp
  435f4b:	jns    0x435ed1
  435f4d:	mov    ds,WORD PTR [eax+0x52fffffb]
  435f53:	jnp    0x435f69
  435f55:	xchg   edx,esp
  435f57:	add    dl,BYTE PTR [edi+ebx*4]
  435f5a:	popf   
  435f5b:	and    BYTE PTR [ecx-0x8],al
  435f5e:	and    DWORD PTR [edx],0xfffffff0
  435f61:	mov    BYTE PTR [edi],dl
  435f63:	sub    dl,dh
  435f65:	push   edi
  435f66:	xchg   ecx,eax
  435f67:	fwait
  435f68:	std    
  435f69:	test   DWORD PTR [ecx],esp
  435f6b:	xchg   esi,eax
  435f6c:	xor    eax,0x9b9d0014
  435f71:	add    ah,0x99
  435f74:	mov    eax,ds:0xca1309ae
  435f79:	push   cs
  435f7a:	std    
  435f7b:	mov    ds:0x5885ad25,eax
  435f80:	repz xchg ecx,eax
  435f82:	mov    esi,0x58022815
  435f87:	xchg   ecx,eax
  435f88:	fwait
  435f89:	std    
  435f8a:	or     dl,ch
  435f8c:	jmp    0x61fe:0x1c518719
  435f93:	adc    al,0xc8
  435f95:	jb     0x435f95
  435f97:	and    eax,0x9d051d15
  435f9c:	fwait
  435f9d:	ds pushfw 
  435fa0:	and    BYTE PTR [ebx-0x5a3c2f79],bh
  435fa6:	into   
  435fa7:	mov    DWORD PTR [esp+edx*4+0x7d],eax
  435fab:	pop    ecx
  435fac:	xchg   edi,eax
  435fad:	cmp    BYTE PTR [edx-0x25033],0x9f
  435fb4:	mov    WORD PTR [edx-0x6b9ba5c2],es
  435fba:	stc    
  435fbb:	and    eax,edi
  435fbd:	out    dx,eax
  435fbe:	dec    DWORD PTR [edx+0x20]
  435fc1:	jnp    0x436017
  435fc3:	test   eax,0x1384fd9b
  435fc8:	sti    
  435fc9:	push   es
  435fca:	add    BYTE PTR [ebp+0x14084220],bl
  435fd0:	das    
  435fd1:	jnp    0x43602f
  435fd3:	add    BYTE PTR [esi+0x2003e702],dl
  435fd9:	mov    esp,0x8506144f
  435fde:	push   edx
  435fdf:	mov    BYTE PTR [esi-0x7a],ah
  435fe2:	pop    esp
  435fe3:	ins    DWORD PTR es:[edi],dx
  435fe4:	sar    ecx,0xe6
  435fe7:	add    eax,DWORD PTR ds:0xf4943c53
  435fed:	and    al,0x8e
  435fef:	mov    dh,bh
  435ff1:	es es (bad) 
  435ff4:	shl    DWORD PTR [ebp-0x4a1638cd],1
  435ffa:	sub    eax,edi
  435ffc:	loope  0x435fb3
  435ffe:	mov    ecx,0x6178cd88
  436003:	neg    DWORD PTR [ecx+0x2786e702]
  436009:	outs   dx,BYTE PTR ds:[esi]
  43600a:	out    0x3,eax
  43600c:	popf   
  43600d:	sub    al,0xff
  43600f:	inc    edi
  436010:	mov    ah,0x84
  436012:	jmp    0x9d03:0xedda1f87
  436019:	jne    0x436084
  43601b:	jl     0x435fb7
  43601d:	add    ah,bh
  43601f:	cmp    DWORD PTR [ebp-0x36],esi
  436022:	mov    ecx,0x69768493
  436027:	aam    0xa1
  436029:	add    ah,bh
  43602b:	xor    eax,DWORD PTR [ebp+0x6493b4b6]
  436031:	and    BYTE PTR [ebx-0x190edb00],0x3
  436038:	add    BYTE PTR [ebp-0x257f1969],bl
  43603e:	add    ah,dl
  436040:	pop    ecx
  436041:	adc    eax,0x9d442657
  436046:	sbb    al,0x66
  436048:	push   eax
  436049:	daa    
  43604a:	add    eax,0x29d03ed
  43604f:	add    ah,bh
  436051:	mov    ecx,edi
  436053:	mov    cl,0x59
  436055:	ret    0x3fc5
  436058:	jmp    0x77ff6621
  43605d:	scas   eax,DWORD PTR es:[edi]
  43605e:	cld    
  43605f:	(bad)  
  436060:	call   0xde7b7003
  436065:	fs jp  0x43600e
  436068:	stos   BYTE PTR es:[edi],al
  436069:	pop    esi
  43606a:	add    ah,BYTE PTR [edx+0x6a]
  43606d:	dec    ebp
  43606e:	js     0x4360ea
  436070:	jecxz  0x436010
  436072:	add    al,BYTE PTR [eax]
  436074:	mov    ah,0xcb
  436076:	cli    
  436077:	mov    cl,0x79
  436079:	js     0x436040
  43607b:	aas    
  43607c:	jmp    0x7fff6605
  436081:	scas   eax,DWORD PTR es:[edi]
  436082:	cld    
  436083:	(bad)  
  436084:	call   0x6a737027
  436089:	sbb    edi,edi
  43608b:	jl     0x43608e
  43608d:	call   0xf42:0x5d64b007
  436094:	call   0xe955bbb5
  436099:	sahf   
  43609a:	sub    BYTE PTR [ebp+0x361c0031],bh
  4360a0:	inc    eax
  4360a1:	clc    
  4360a2:	mov    eax,ds:0x9ef7a878
  4360a7:	add    bl,BYTE PTR [edx-0x56]
  4360aa:	and    ebx,DWORD PTR [edx+0x42b26bfe]
  4360b0:	psubsb mm3,QWORD PTR [edx+ebx*2]
  4360b4:	adc    ch,cl
  4360b6:	sahf   
  4360b7:	sub    BYTE PTR [ebp-0x737ac996],bh
  4360bd:	sub    eax,0x66fef3d9
  4360c2:	out    0xf0,al
  4360c4:	(bad)  
  4360c5:	call   0x10fa656
  4360ca:	lock inc edx
  4360cc:	int3   
  4360cd:	int3   
  4360ce:	add    BYTE PTR [ebx-0x34],al
  4360d1:	int3   
  4360d2:	mov    DWORD PTR [ebx],eax
  4360d4:	in     al,dx
  4360d5:	mov    edi,DWORD PTR [ecx-0x7a]
  4360d8:	test   BYTE PTR [eax-0x676c0],cl
  4360de:	xchg   DWORD PTR [esi+0x5],esi
  4360e1:	jle    0x4360c0
  4360e3:	retf   
  4360e4:	dec    ebp
  4360e5:	mov    ebp,ecx
  4360e7:	mov    bl,BYTE PTR [edi-0x75]
  4360ea:	call   0x7c7:0x6fe2cad9
  4360f1:	data16 std 
  4360f3:	push   cs
  4360f4:	mov    eax,0x6fef416
  4360f9:	mov    dh,0x1c
  4360fb:	aaa    
  4360fc:	push   cs
  4360fd:	add    ah,al
  4360ff:	add    edx,DWORD PTR [eax+0x14]
  436102:	add    BYTE PTR [ebx+edx*4],bh
  436105:	or     cl,BYTE PTR [edi]
  436107:	push   0x17
  436109:	mov    cl,0x16
  43610b:	(bad)  
  43610c:	(bad)  
  43610d:	test   BYTE PTR [eax-0x38],0x3
  436111:	dec    eax
  436112:	adc    al,0x3f
  436114:	iret   
  436115:	pop    es
  436116:	mov    al,dl
  436118:	lea    eax,[eax+edx*4-0x682c0]
  43611f:	jae    0x4360e8
  436121:	adc    esi,DWORD PTR [ecx+0x66c36084]
  436127:	inc    edi
  436128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436129:	or     DWORD PTR [ebp+0x54],0xffffff87
  43612d:	mov    edx,0xbbf6edf3
  436132:	push   ss
  436133:	je     0x43613b
  436135:	adc    DWORD PTR [ebp+0x40],0x2c
  436139:	xor    DWORD PTR [eax-0x68344],0x1622f92
  436143:	popf   
  436144:	cmp    DWORD PTR [ebx-0x7c6ebd0b],0xffffffc4
  43614b:	mov    eax,ds:0x2662c326
  436150:	pop    ss
  436151:	clc    
  436152:	popa   
  436153:	dec    esi
  436154:	mov    es,WORD PTR [ebx+0x7be29ebf]
  43615a:	mov    esp,0x84fd6bb3
  43615f:	pusha  
  436160:	jnp    0x436189
  436162:	pop    es
  436163:	sub    eax,0xfff694
  436168:	add    ah,ch
  43616a:	xor    BYTE PTR [edi+eax*4],cl
  43616d:	push   0xffffff95
  43616f:	sahf   
  436170:	test   BYTE PTR [eax-0x71],0x7d
  436174:	loope  0x4361e5
  436176:	sub    bh,BYTE PTR [ebp-0x333fe02f]
  43617c:	jmp    0xe21021b8
  436181:	das    
  436182:	ror    ah,0xd9
  436185:	mov    esi,0xbc6cec7c
  43618a:	jl     0x4361e7
  43618c:	lea    esp,[ecx-0x135a8c84]
  436192:	dec    ebp
  436193:	test   BYTE PTR [ebp+0x4afffd6b],bl
  436199:	sub    BYTE PTR [ecx-0x4],al
  43619c:	popf   
  43619d:	imul   edi,ebp,0xffffffff
  4361a0:	adc    edi,DWORD PTR ds:0xd81e3a7b
  4361a6:	(bad)  
  4361a8:	or     DWORD PTR [ebp+edx*4+0x72],esp
  4361ac:	ja     0x4361f6
  4361ae:	nop
  4361af:	xchg   edx,ebx
  4361b1:	vmwrite eax,DWORD PTR [edx-0x29b7b]
  4361b8:	int    0x43
  4361ba:	dec    eax
  4361bb:	cld    
  4361bc:	pop    edx
  4361bd:	add    ah,BYTE PTR [edx-0x11d9d882]
  4361c3:	add    ebx,DWORD PTR [ebp+0x46cc7ed3]
  4361c9:	or     DWORD PTR [edx+0xa610084],0x3345c96e
  4361d3:	jns    0x436165
  4361d5:	and    al,0x8d
  4361d7:	pop    ecx
  4361d8:	pop    ebx
  4361d9:	pop    DWORD PTR [edx]
  4361db:	out    0x7c,eax
  4361dd:	daa    
  4361de:	scas   al,BYTE PTR es:[edi]
  4361df:	stc    
  4361e0:	add    ebx,DWORD PTR [ebp-0x7602da7b]
  4361e6:	inc    ebx
  4361e7:	ffree  st(2)
  4361e9:	sti    
  4361ea:	add    al,0x28
  4361ec:	call   0x4ca8:0x8fac89f8
  4361f3:	mov    dl,0x8
  4361f5:	add    BYTE PTR ds:0x8d9e3c64,al
  4361fb:	sbb    BYTE PTR [esi-0x68],bh
  4361fe:	push   es
  4361ff:	faddp  st(5),st
  436201:	dec    esp
  436202:	sbb    eax,0x8799466e
  436207:	daa    
  436208:	pop    ss
  436209:	test   eax,0x4df78c8d
  43620e:	aad    0x96
  436210:	cmp    ebp,eax
  436212:	inc    edx
  436213:	stc    
  436214:	(bad)  
  436215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436216:	test   BYTE PTR [ebx],ch
  436218:	repz mov ebx,0x9d03e7cd
  43621e:	and    DWORD PTR [ecx-0x18fd6284],0x7
  436225:	xchg   esp,eax
  436226:	xchg   BYTE PTR [esp+eax*1-0x45f1fd63],bl
  43622d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43622e:	xchg   BYTE PTR [esp+eax*1+0x6e029d00],dl
  436235:	jle    0x436260
  436237:	sbb    DWORD PTR [eax],eax
  436239:	jmp    0xd5bee7dc
  43623e:	sbb    eax,0x206a03d2
  436243:	or     al,0x7a
  436245:	cmp    eax,DWORD PTR [ebx+0xe0fbe85]
  43624b:	arpl   WORD PTR [ebp+0x6e2351f],ax
  436251:	outs   dx,DWORD PTR ds:[esi]
  436252:	loope  0x436268
  436254:	add    cl,ch
  436256:	sub    esi,DWORD PTR [edx-0x7fd4ce66]
  43625c:	stc    
  43625d:	bound  esp,QWORD PTR [ebx+0xa]
  436260:	mov    BYTE PTR ds:0xf5427998,al
  436266:	or     esi,DWORD PTR [edx-0x7ff46f66]
  43626c:	stc    
  43626d:	bound  esp,QWORD PTR [ebx+0x16]
  436270:	test   DWORD PTR [edi-0xee3780a],esi
  436276:	test   BYTE PTR [si-0x6121],bh
  43627b:	add    bh,cl
  43627d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43627e:	shl    BYTE PTR [eax-0x1ae92cf0],cl
  436284:	int3   
  436285:	adc    ebx,DWORD PTR [esi]
  436287:	inc    ebx
  436288:	in     eax,dx
  436289:	pusha  
  43628a:	sbb    edi,DWORD PTR [edi-0x1b6116ee]
  436290:	xchg   BYTE PTR [edi+0x61],bl
  436293:	adc    al,0x0
  436295:	jmp    0x6251699a
  43629a:	sbb    bh,bh
  43629c:	in     al,0x6
  43629e:	push   edi
  43629f:	jmp    0x202c62b8
  4362a4:	mov    edi,0xbf086ffd
  4362a9:	adc    ch,cl
  4362ab:	sahf   
  4362ac:	test   DWORD PTR [ebx-0x33],eax
  4362af:	test   DWORD PTR [eax+ebp*1+0x36f00],0x46fd28b
  4362ba:	add    BYTE PTR [ebx+eax*8+0x4f],dh
  4362be:	inc    ecx
  4362bf:	mov    ch,0xc4
  4362c1:	dec    ecx
  4362c2:	call   0x3af707
  4362c7:	mov    ecx,0x34098885
  4362cc:	add    edx,DWORD PTR [eax-0x73]
  4362cf:	(bad)  
  4362d1:	(bad)  
  4362d2:	inc    DWORD PTR [esi+esi*1-0x7d]
  4362d6:	(bad)  
  4362d7:	or     al,0x50
  4362d9:	out    dx,al
  4362da:	jmp    FWORD PTR [ebx+0x1d14c484]
  4362e0:	stc    
  4362e1:	(bad)  
  4362e2:	inc    DWORD PTR [esp+edi*8]
  4362e5:	test   DWORD PTR [edx+edx*1-0x1674fffd],edi
  4362ec:	jbe    0x436274
  4362ee:	inc    edi
  4362ef:	push   es
  4362f0:	test   cl,dh
  4362f2:	or     eax,0x8b5e30da
  4362f7:	test   BYTE PTR ds:0x7f00e2cb,ah
  4362fd:	cmp    eax,0xf4bd6614
  436302:	mov    bh,0x16
  436304:	les    eax,FWORD PTR [edx]
  436306:	pop    es
  436307:	mov    dh,0x4a
  436309:	retf   
  43630a:	or     eax,0x4dfbb400
  43630f:	or     BYTE PTR [edi+ebp*2],bh
  436312:	or     bh,bh
  436314:	add    dh,BYTE PTR [edi+0x8]
  436317:	mov    dh,0x4a
  436319:	into   
  43631a:	or     eax,0x45fbb400
  43631f:	adc    al,0xff
  436321:	aaa    
  436322:	or     BYTE PTR [eax-0x697b8e68],cl
  436328:	sub    BYTE PTR [ebp-0x7],dh
  43632b:	call   FWORD PTR [ebp+0x2c144254]
  436331:	jl     0x43630a
  436333:	(bad)  
  436336:	pushf  
  436337:	jge    0x436398
  436339:	mov    ecx,0x5e219275
  43633e:	std    
  43633f:	inc    ebx
  436341:	loop   0x4362c4
  436343:	mov    eax,0xe4fd6bab
  436348:	scas   al,BYTE PTR es:[edi]
  436349:	add    eax,0x62bbe0af
  43634e:	cmp    DWORD PTR [eax+0x7cfd6b93],0x5c
  436355:	imul   esi,DWORD PTR [esi-0x76],0xfffd55e9
  43635c:	mov    ch,0x63
  43635e:	ss inc eax
  436360:	add    BYTE PTR [ebp+0x5d447c03],bl
  436366:	imul   edi,DWORD PTR [eax-0x3e],0xfffffff5
  43636a:	fwait
  43636b:	cwde   
  43636c:	stc    
  43636d:	add    ch,cl
  43636f:	(bad)  
  436370:	or     BYTE PTR [esi],ah
  436372:	ss pushf 
  436374:	xchg   edx,eax
  436375:	add    eax,0xea838ac5
  43637a:	mov    bh,0x4
  43637c:	test   ebx,ebx
  43637e:	ret    
  43637f:	(bad)  
  436380:	neg    dl
  436382:	sub    al,0x2b
  436384:	pop    edx
  436385:	jbe    0x436377
  436387:	mov    al,ds:0xc02fde5b
  43638c:	int3   
  43638d:	sar    DWORD PTR [esi-0x58d91388],1
  436393:	stc    
  436394:	or     BYTE PTR [edx],al
  436396:	scas   eax,DWORD PTR es:[edi]
  436397:	in     eax,dx
  436398:	dec    edi
  436399:	mov    ch,0x89
  43639b:	dec    ebx
  43639c:	stc    
  43639d:	mov    ds:0xf804c7e8,al
  4363a2:	sub    al,al
  4363a4:	int3   
  4363a5:	popa   
  4363a6:	add    dh,BYTE PTR [ebx-0x54b1a641]
  4363ac:	mov    edi,0x793c4e51
  4363b1:	mov    DWORD PTR [ecx+0x6acd0024],ecx
  4363b7:	imul   ecx,DWORD PTR [esi+0x64],0x7d
  4363bb:	data16 (bad) 
  4363bd:	cdq    
  4363be:	fbld   TBYTE PTR [ebp-0x64b19641]
  4363c4:	mov    edi,0xb34e6100
  4363c9:	mov    edi,0xbfab4e59
  4363ce:	push   ecx
  4363cf:	dec    esi
  4363d0:	xor    BYTE PTR [ebp+ebx*4+0x2],0xe7
  4363d5:	jle    0x4363b1
  4363d7:	add    ah,bh
  4363d9:	jle    0x4363bd
  4363db:	add    ah,bh
  4363dd:	jle    0x4363b9
  4363df:	add    ah,bh
  4363e1:	jle    0x436445
  4363e3:	add    ah,bh
  4363e5:	jle    0x436441
  4363e7:	add    ah,bh
  4363e9:	add    ebx,DWORD PTR [ebp-0x62fc17fe]
  4363ef:	add    ah,dh
  4363f1:	add    ebx,DWORD PTR [ebp-0x62fc1dfe]
  4363f7:	add    dh,dl
  4363f9:	add    ebx,DWORD PTR [ebp-0x62fc25fe]
  4363ff:	add    dh,dl
  436401:	add    ebx,DWORD PTR [ebp-0x62fc55fe]
  436407:	add    ah,BYTE PTR [edx]
  436409:	add    ebx,DWORD PTR [ebp-0x62fde5fe]
  43640f:	add    dl,BYTE PTR [edx]
  436411:	add    BYTE PTR [ebp-0x62fbf5fe],bl
  436417:	add    al,BYTE PTR [edx]
  436419:	cld    
  43641a:	stos   BYTE PTR es:[edi],al
  43641b:	jl     0x436417
  43641d:	jmp    0x4363c1
  43641f:	jl     0x436421
  436421:	mul    BYTE PTR [esi+0x7c]
  436424:	stc    
  436425:	out    dx,al
  436426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436427:	add    al,BYTE PTR [eax]
  436429:	out    0x0,al
  43642b:	push   ss
  43642c:	add    eax,DWORD PTR [eax]
  43642e:	ficom  WORD PTR [esi]
  436430:	jl     0x43642b
  436432:	(bad)  
  436433:	es jle 0x43642f
  436436:	into   
  436437:	add    al,BYTE PTR es:[eax]
  43643a:	(bad)  
  43643b:	push   ss
  43643c:	or     al,BYTE PTR [eax]
  43643e:	mov    esi,0xb6001a16
  436443:	cmp    al,BYTE PTR es:[eax]
  436446:	scas   al,BYTE PTR es:[edi]
  436447:	es cli 
  436449:	jmp    DWORD PTR [ebp-0x61ff85ea]
  43644f:	push   ss
  436450:	jp     0x436451
  436452:	xchg   ebp,eax
  436453:	es jp  0x436453
  436456:	lea    esp,[esi]
  436458:	jp     0x43645b
  43645a:	xchg   BYTE PTR [esi],dl
  43645c:	jp     0x436467
  43645e:	jle    0x436476
  436460:	jp     0x43647b
  436462:	jbe    0x43648a
  436464:	jp     0x43649f
  436466:	outs   dx,BYTE PTR ds:[esi]
  436467:	es jp  0x4364e3
  43646a:	pushw  ss
  43646c:	jp     0x436467
  43646e:	mov    dh,0xcc
  436470:	iret   
  436471:	dec    esp
  436472:	jne    0x436496
  436474:	outs   dx,DWORD PTR ds:[esi]
  436475:	inc    eax
  436476:	dec    ebp
  436477:	jb     0x43646f
  436479:	and    esp,DWORD PTR [ecx+0x721bf86b]
  43647f:	scas   eax,DWORD PTR es:[edi]
  436480:	push   es
  436481:	test   edi,ebp
  436483:	mov    ds:0xd2437d52,eax
  436488:	test   BYTE PTR [ebp+ecx*8-0xe],al
  43648c:	test   BYTE PTR [ebp+eax*8+0x0],dl
  436490:	mov    dl,0x86
  436492:	ins    BYTE PTR es:[edi],dx
  436493:	int    0x82
  436495:	test   DWORD PTR [edx-0x7],ecx
  436498:	xor    ebx,eax
  43649a:	or     eax,DWORD PTR [eax]
  43649c:	iret   
  43649d:	sahf   
  43649e:	out    dx,eax
  43649f:	fnsave [edi-0x7a168664]
  4364a5:	push   es
  4364a6:	add    BYTE PTR [eax],al
  4364a8:	xchg   DWORD PTR [ecx+eax*4-0x7db567a4],edi
  4364af:	ins    BYTE PTR es:[edi],dx
  4364b0:	cwde   
  4364b1:	pop    esi
  4364b2:	or     BYTE PTR [eax+ebp*4+0x76],0x84
  4364b7:	inc    edi
  4364b8:	nop
  4364b9:	sti    
  4364ba:	inc    esi
  4364bb:	push   eax
  4364bc:	in     eax,dx
  4364bd:	cmp    esp,DWORD PTR [eax+ecx*1]
  4364c0:	in     eax,dx
  4364c1:	xor    esp,DWORD PTR [esp+ecx*1]
  4364c4:	int3   
  4364c5:	push   es
  4364c6:	add    BYTE PTR [eax],al
  4364c8:	inc    esp
  4364c9:	cld    
  4364ca:	inc    esi
  4364cb:	push   esp
  4364cc:	pop    es
  4364cd:	lahf   
  4364ce:	dec    eax
  4364cf:	mov    DWORD PTR [eax],edi
  4364d1:	pop    ebx
  4364d2:	mov    cl,0x1
  4364d4:	inc    esp
  4364d5:	(bad)  
  4364d6:	dec    DWORD PTR [edx-0x1f34d16d]
  4364dc:	ins    BYTE PTR es:[edi],dx
  4364dd:	std    
  4364de:	inc    ebx
  4364df:	and    al,0x38
  4364e1:	cld    
  4364e2:	sub    BYTE PTR ds:[edi+0x38],bh
  4364e6:	xor    BYTE PTR [ebx+0x448252ab],cl
  4364ec:	cwde   
  4364ed:	push   edx
  4364ee:	or     BYTE PTR [eax+ebx*4+0x56],0x82
  4364f3:	push   esp
  4364f4:	add    BYTE PTR [eax-0x73907bb2],ch
  4364fa:	sti    
  4364fb:	push   esi
  4364fc:	cmp    al,0x6f
  4364fe:	or     esp,DWORD PTR [esp+ebp*1]
  436501:	outs   dx,DWORD PTR ds:[esi]
  436502:	xor    esp,DWORD PTR [esp+edx*1]
  436505:	iret   
  436506:	mov    eax,0x4647226f
  43650b:	add    ebp,DWORD PTR [ebx]
  43650d:	xchg   edx,eax
  43650e:	(bad)  
  43650f:	or     eax,DWORD PTR [eax]
  436511:	mov    ah,0xfe
  436513:	and    al,cl
  436515:	popf   
  436516:	out    0x0,al
  436518:	and    al,0x91
  43651a:	sbb    BYTE PTR [ecx-0x7b],bl
  43651d:	aad    0xb7
  43651f:	mov    ebp,0x8edf7ed
  436524:	and    al,0xb9
  436526:	loop   0x436530
  436528:	and    al,0xa9
  43652a:	add    al,0xe5
  43652c:	lock arpl WORD PTR [ebp-0x3],bp
  436530:	call   FWORD PTR [ebp+0x5d2cf3cf]
  436536:	out    0xfd,al
  436538:	inc    ecx
  436539:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  43653b:	cmp    DWORD PTR [ebp+0x5a49c95],0x75
  436542:	push   ebp
  436543:	pushf  
  436544:	test   ecx,ebx
  436546:	pop    es
  436547:	enter  0x907c,0x1b
  43654b:	arpl   WORD PTR ds:0x83f86d9d,di
  436551:	adc    al,0x6e
  436553:	std    
  436554:	push   DWORD PTR [edx+0x4d3404]
  43655a:	int3   
  43655b:	cmp    eax,0x47a18568
  436560:	jle    0x436596
  436562:	jns    0x4365cf
  436564:	std    
  436565:	pop    ds
  436566:	popf   
  436567:	into   
  436568:	addr16 push esi
  43656a:	into   
  43656b:	fwait
  43656c:	adc    BYTE PTR [esi+ecx*8+0x2b],al
  436570:	neg    DWORD PTR [ebp+0x633ee51c]
  436576:	mov    edx,DWORD PTR [esi+0xa]
  436579:	cmp    BYTE PTR [ebx+edx*8],bl
  43657c:	adc    eax,0xa4f8074
  436581:	xor    BYTE PTR [esi+eax*8],bl
  436584:	adc    al,0x6a
  436586:	inc    eax
  436587:	mov    ds:0x6b15280a,al
  43658c:	std    
  43658d:	call   FWORD PTR [ebp+0x265f202]
  436593:	imul   ebp,edi,0xffffff84
  436596:	mov    ebp,0x9f8c6609
  43659b:	out    dx,eax
  43659c:	lock nop
  43659e:	jmp    0x4365a2
  4365a0:	out    0x83,eax
  4365a2:	popf   
  4365a3:	out    dx,eax
  4365a4:	in     al,0x9c
  4365a6:	test   eax,0x3033ec41
  4365ab:	(bad)
  4365ae:	popf   
  4365af:	add    ah,bh
  4365b1:	pushf  
  4365b2:	fwait
  4365b3:	inc    ecx
  4365b4:	in     al,0x33
  4365b6:	sbb    ch,al
  4365b8:	out    0x4,al
  4365ba:	popf   
  4365bb:	add    ah,bh
  4365bd:	sub    eax,0x1eddd200
  4365c2:	popf   
  4365c3:	sbb    al,0x92
  4365c5:	mov    WORD PTR [si-0x1c0f],fs
  4365ca:	aam    0x12
  4365cc:	loopne 0x436649
  4365ce:	jge    0x436630
  4365d0:	and    BYTE PTR [esi-0x119dae0d],0x9b
  4365d7:	and    BYTE PTR [esi],cl
  4365d9:	retf   
  4365da:	jl     0x4365bd
  4365dc:	push   ds
  4365dd:	(bad)  
  4365df:	dec    edi
  4365e0:	(bad)  
  4365e1:	jmp    0x436655
  4365e3:	sbb    eax,DWORD PTR [esi-0x33]
  4365e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4365e7:	call   0x8f06d152
  4365ec:	sbb    ebp,DWORD PTR [eax+0x20acad9b]
  4365f2:	or     BYTE PTR [ecx+0x5b81ea12],bh
  4365f8:	(bad)  
  4365f9:	out    0x3,al
  4365fb:	stos   BYTE PTR es:[edi],al
  4365fc:	out    dx,al
  4365fd:	add    dh,al
  4365ff:	ins    DWORD PTR es:[edi],dx
  436600:	ds push eax
  436602:	xor    BYTE PTR [ecx-0x128318fe],bl
  436608:	inc    edx
  436609:	add    BYTE PTR [ebx-0x32],al
  43660c:	jle    0x4365d6
  43660e:	or     esi,0x9e1d8409
  436614:	add    al,BYTE PTR [eax]
  436616:	imul   edi,edi,0xe0cc740a
  43661c:	dec    edi
  43661d:	ins    DWORD PTR es:[edi],dx
  43661e:	clc    
  43661f:	sub    BYTE PTR [ecx+0x2d],ah
  436622:	sub    DWORD PTR [eax],eax
  436624:	jl     0x4365d3
  436626:	xchg   BYTE PTR [edx],dh
  436628:	push   ds
  436629:	mov    dh,0x10
  43662b:	sbb    bh,BYTE PTR [esi]
  43662d:	(bad)  
  43662e:	out    0x63,eax
  436630:	push   ebx
  436631:	mov    ebx,0x29ee8ff
  436636:	int    0xc9
  436638:	mov    ecx,0x5c0ad720
  43663d:	inc    esi
  43663e:	jmp    0x43662a
  436640:	adc    BYTE PTR cs:[ebp+ecx*1+0x71],0xf8
  436646:	hlt    
  436647:	out    dx,al
  436648:	stos   DWORD PTR es:[edi],eax
  436649:	or     ebp,DWORD PTR ds:0x86abb3a9
  43664f:	mov    ds:0xba10b621,al
  436654:	stc    
  436655:	std    
  436656:	out    0x72,eax
  436658:	ins    DWORD PTR es:[edi],dx
  436659:	push   ds
  43665a:	add    al,0x62
  43665c:	jne    0x43667c
  43665e:	or     al,0xca
  436660:	in     eax,dx
  436661:	jge    0x436667
  436663:	pop    eax
  436664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436665:	push   edx
  436666:	mov    edi,0xcc7e1193
  43666b:	ret    
  43666c:	cmp    al,BYTE PTR [esi-0x15]
  43666f:	arpl   WORD PTR [ecx-0x55],cx
  436672:	adc    dh,dh
  436674:	sub    BYTE PTR [eax-0x7d611700],0xdf
  43667b:	out    0xa2,al
  43667d:	jecxz  0x4366b4
  43667f:	xor    BYTE PTR [esi+0x4d008607],cl
  436685:	push   ebx
  436686:	mov    ecx,0xfd290066
  43668b:	ret    0x8780
  43668e:	outs   dx,BYTE PTR ds:[esi]
  43668f:	int3   
  436690:	loopne 0x436651
  436692:	fwait
  436693:	or     ch,0x3c
  436696:	std    
  436697:	(bad)  
  436698:	inc    esp
  43669a:	mov    ah,0xe0
  43669c:	dec    eax
  43669d:	fisub  WORD PTR [esi-0x66983ae5]
  4366a3:	sti    
  4366a4:	iret   
  4366a5:	(bad)  
  4366a6:	inc    BYTE PTR [eax-0x7bb09f8c]
  4366ac:	(bad)  
  4366ad:	pop    edi
  4366ae:	aaa    
  4366af:	and    al,0x28
  4366b1:	dec    edi
  4366b2:	inc    ecx
  4366b3:	pop    es
  4366b4:	add    BYTE PTR [eax],0x4
  4366b7:	add    BYTE PTR [eax],al
  4366b9:	out    dx,eax
  4366ba:	das    
  4366bb:	and    al,0x18
  4366bd:	dec    DWORD PTR [eax-0x69080ddd]
  4366c3:	sti    
  4366c4:	mov    DWORD PTR [edx-0x5],esi
  4366c7:	dec    BYTE PTR [ecx+0x5681fd82]
  4366cd:	inc    esi
  4366ce:	test   BYTE PTR [esi-0x6c743fd],bh
  4366d4:	xchg   DWORD PTR [ebx+0x47c77b04],eax
  4366da:	xchg   esp,eax
  4366db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366dc:	mov    edx,DWORD PTR [eax+0x24e92562]
  4366e2:	xor    bh,0xff
  4366e5:	mov    bh,0x89
  4366e7:	stc    
  4366e8:	je     0x4366c3
  4366ea:	inc    esi
  4366eb:	jne    0x436711
  4366ed:	add    ah,bl
  4366ef:	push   es
  4366f0:	scas   eax,DWORD PTR es:[edi]
  4366f1:	dec    edi
  4366f2:	jg     0x436723
  4366f4:	and    al,0x18
  4366f6:	mov    ?,WORD PTR [eax+0x7c]
  4366f9:	jmp    0x1826205
  4366fe:	popf   
  4366ff:	loope  0x43673a
  436701:	(bad)  
  436702:	and    ah,BYTE PTR [eax+0x64da7cfe]
  436708:	mov    fs,WORD PTR [esi-0x67d2f3c]
  43670e:	rol    BYTE PTR [eax+0x5720093d],cl
  436714:	(bad)  
  436715:	call   FWORD PTR [ebp-0x62fffc1f]
  43671b:	imul   ebp,DWORD PTR [esi-0x3fb39a20],0x28e3dcfd
  436725:	and    al,0x95
  436727:	hlt    
  436728:	clc    
  436729:	jge    0x4366af
  43672b:	ret    0xf982
  43672e:	xchg   edx,eax
  43672f:	les    edi,FWORD PTR [ecx+ecx*1]
  436732:	and    BYTE PTR [edx],cl
  436734:	(bad)  
  436735:	call   FWORD PTR [ebp-0x6200025d]
  43673b:	imul   esi,DWORD PTR [eax-0x46f71a20],0xfffffffd
  436742:	pop    esp
  436743:	loope  0x436774
  436745:	and    al,0x91
  436747:	lock (bad) 
  436749:	jge    0x43678f
  43674b:	arpl   WORD PTR [ecx+edi*8-0x7a441eae],ax
  436752:	add    cl,ah
  436754:	dec    edi
  436756:	lock fs icebp 
  436759:	(bad)  
  43675b:	jne    0x4367bd
  43675d:	mov    edi,0xfeae1f09
  436762:	call   FWORD PTR [ebp-0x5e824898]
  436768:	inc    edi
  436769:	int    0xff
  43676b:	xchg   ecx,eax
  43676c:	aas    
  43676d:	fdivr  DWORD PTR [esi+0x4476fb9e]
  436773:	rcl    DWORD PTR [ebx-0x38],0xbe
  436777:	mov    eax,DWORD PTR [edx]
  436779:	(bad)  
  43677a:	fdivr  DWORD PTR [ebx]
  43677c:	jb     0x436701
  43677e:	jns    0x43676c
  436780:	sub    DWORD PTR [ebp-0x67],edx
  436783:	dec    edi
  436784:	cmp    DWORD PTR [eax],ebp
  436786:	push   cs
  436787:	push   ebx
  436788:	sub    DWORD PTR [eax],ebp
  43678a:	xchg   ecx,eax
  43678b:	add    DWORD PTR [edx+0x69c0d932],ecx
  436791:	lahf   
  436792:	js     0x4367f5
  436794:	push   ds
  436795:	test   eax,0xd2ecda
  43679b:	xor    DWORD PTR [esi],ebx
  43679d:	rol    DWORD PTR [eax],cl
  43679f:	lods   eax,DWORD PTR ds:[esi]
  4367a0:	sub    DWORD PTR [eax],ebx
  4367a2:	(bad)  
  4367a4:	mov    DWORD PTR [ebx+0x28398adf],esp
  4367aa:	push   cs
  4367ab:	(bad)  
  4367ac:	sub    DWORD PTR [eax],ebp
  4367ae:	xchg   ecx,eax
  4367af:	cmp    DWORD PTR [ecx-0x762d2085],ecx
  4367b5:	fild   WORD PTR [eax]
  4367b8:	mov    dl,0x39
  4367ba:	test   al,0xd
  4367bc:	xchg   edi,eax
  4367bd:	sub    DWORD PTR [eax-0x2576c670],ebp
  4367c3:	fdivr  DWORD PTR [eax+0x69]
  4367c6:	repz add BYTE PTR [ebp+0x29],ch
  4367ca:	mov    eax,0xdf1ee178
  4367cf:	enter  0xec13,0xde
  4367d3:	fmul   DWORD PTR [ebx]
  4367d5:	jno    0x43675a
  4367d7:	js     0x436825
  4367d9:	sub    DWORD PTR [ebp+0x43716578],edx
  4367df:	js     0x43678a
  4367e1:	push   ds
  4367e2:	ret    
  4367e3:	call   0x7518:0x848a749b
  4367ea:	repnz or al,0xa4
  4367ed:	in     al,0xa3
  4367ef:	js     0x4367e9
  4367f1:	add    al,0x0
  4367f3:	pop    es
  4367f4:	std    
  4367f5:	and    BYTE PTR [ecx],cl
  4367f7:	out    dx,al
  4367f8:	cmp    eax,0xdad56a0b
  4367fd:	add    BYTE PTR [ecx],cl
  4367ff:	ficom  WORD PTR [ebx+ecx*1]
  436802:	jmp    0x2419cd27
  436807:	loope  0x43680e
  436809:	jne    0x436794
  43680b:	test   BYTE PTR ds:0xbe3c7db5,0xf1
  436812:	or     eax,0x971b0e6
  436817:	mov    edi,0xedc1f5d8
  43681c:	add    BYTE PTR [ecx-0xc95059b],dh
  436822:	and    DWORD PTR [ecx],ecx
  436824:	add    ch,cl
  436826:	or     dl,ch
  436828:	or     DWORD PTR [ecx-0x5e092006],ebp
  43682e:	push   esi
  43682f:	test   ebp,esp
  436831:	sbb    eax,0x9125b20a
  436836:	jmp    0x5cc0:0x7f27c2c6
  43683d:	cwde   
  43683e:	mov    bl,0xe8
  436840:	stc    
  436841:	inc    eax
  436842:	sub    al,0x7c
  436844:	or     eax,0xed820991
  436849:	cwde   
  43684a:	add    al,BYTE PTR [eax]
  43684c:	add    BYTE PTR [ebp+0x20],dl
  43684f:	adc    al,0x36
  436851:	adc    ebx,DWORD PTR [edi+ecx*1-0x15]
  436855:	sahf   
  436856:	add    al,BYTE PTR [ebp+0x105cd899]
  43685c:	push   ecx
  43685d:	xchg   ecx,eax
  43685e:	or     DWORD PTR [ecx+ecx*4+0x6a000299],eax
  436865:	ror    DWORD PTR [ecx],0x74
  436868:	cmc    
  436869:	pop    DWORD PTR [ebp-0x41]
  43686c:	add    BYTE PTR [ebx],dl
  43686e:	jb     0x436831
  436870:	movlps xmm7,QWORD PTR [edi+0x3d7e822]
  436877:	jge    0x436851
  436879:	mov    bh,0x3b
  43687b:	stc    
  43687c:	add    dh,BYTE PTR [ebp+0xc1cb0f]
  436882:	xchg   DWORD PTR [ecx+0x10e67720],eax
  436888:	data16 cmc 
  43688a:	ret    
  43688b:	jno    0x4368c4
  43688d:	or     DWORD PTR [edx-0x6d0cf8f6],0x7b
  436894:	mov    ebp,0xbee4c320
  436899:	mov    edx,DWORD PTR [eax]
  43689b:	sbb    al,0xc
  43689d:	maxps  xmm4,xmm6
  4368a0:	push   es
  4368a1:	jle    0x43682f
  4368a3:	emms   
  4368a5:	aad    0x3f
  4368a7:	or     bh,BYTE PTR [ebx+0xf]
  4368aa:	dec    edx
  4368ab:	rol    BYTE PTR [edx+0xfe3c5d8],cl
  4368b1:	sub    ebp,DWORD PTR [ebp-0x233699f1]
  4368b7:	push   cs
  4368b8:	pop    es
  4368b9:	test   al,al
  4368bb:	(bad)  
  4368bc:	(bad)  
  4368bd:	inc    DWORD PTR [edi]
  4368bf:	loopne 0x4368c7
  4368c1:	je     0x43686e
  4368c3:	bswap  ebx
  4368c5:	rol    DWORD PTR [ebx-0x2df03e8f],0xbd
  4368cc:	and    ch,al
  4368ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4368cf:	adc    bh,BYTE PTR [ebp-0x28]
  4368d2:	xchg   DWORD PTR [ebx],edi
  4368d4:	stc    
  4368d5:	add    ch,BYTE PTR ds:0x40247486
  4368db:	test   BYTE PTR [edi+0x282a882b],bh
  4368e1:	cmp    eax,DWORD PTR [edi]
  4368e3:	adc    BYTE PTR [edx-0x57],bh
  4368e6:	add    BYTE PTR [ebp+0x16fffd69],bl
  4368ec:	lahf   
  4368ed:	mov    dh,cl
  4368ef:	xabort 0x81
  4368f2:	out    0x9e,eax
  4368f4:	out    dx,eax
  4368f5:	push   es
  4368f6:	mov    BYTE PTR [edx+0x14fec6df],ah
  4368fc:	or     eax,DWORD PTR [edx]
  4368fe:	jge    0x4368e3
  436900:	test   DWORD PTR [bx+di-0x64],eax
  436904:	icebp  
  436905:	aad    0xfd
  436907:	pop    ds
  436908:	and    al,0x2
  43690a:	in     eax,dx
  43690b:	cmp    eax,esp
  43690d:	lock and ecx,DWORD PTR [ecx-0x5adc2710]
  436914:	shr    BYTE PTR [edi],cl
  436916:	stc    
  436917:	retf   0x902b
  43691a:	inc    edi
  43691b:	popf   
  43691c:	call   0xe175689a
  436921:	cmp    edi,DWORD PTR [ecx+edi*2+0x51]
  436925:	icebp  
  436926:	lods   eax,DWORD PTR ds:[esi]
  436927:	pop    edx
  436928:	loopne 0x436974
  43692a:	xchg   BYTE PTR [edx+0x22fd6be8],bl
  436930:	mov    eax,ds:0x5dda8804
  436935:	test   DWORD PTR [ecx-0x62],eax
  436938:	fadd   QWORD PTR [ebp+0x4]
  43693b:	mov    es,esi
  43693d:	mov    DWORD PTR [ecx+eax*8+0x73],ebx
  436941:	data16 add BYTE PTR [edx+0x51],dh
  436945:	jg     0x4368cc
  436947:	push   0xffffff84
  436949:	les    ecx,FWORD PTR [eax]
  43694b:	add    BYTE PTR [eax],bl
  43694d:	mov    ds:0xdc9d0004,al
  436952:	arpl   WORD PTR [ecx],cx
  436954:	mov    ds:0xcb093d8c,al
  436959:	call   0x3cc3:0x94180c23
  436960:	popf   
  436961:	add    ah,dh
  436963:	dec    ebp
  436964:	sbb    BYTE PTR [edi],al
  436966:	outs   dx,BYTE PTR ds:[esi]
  436967:	imul   ebx,DWORD PTR [ecx+0x71],0xffffff92
  43696b:	sbb    DWORD PTR [eax],0xa5c43f72
  436971:	xchg   DWORD PTR [ecx+0x4],edx
  436974:	popf   
  436975:	add    ah,BYTE PTR [esi+0x64]
  436978:	xchg   esp,eax
  436979:	add    DWORD PTR [esi-0x580f6bbd],edx
  43697f:	and    eax,0xc53f87a9
  436984:	mov    cl,0x2
  436986:	outs   dx,BYTE PTR ds:[esi]
  436987:	enter  0xfebe,0xe5
  43698b:	dec    esp
  43698c:	sbb    BYTE PTR [edi],al
  43698e:	pop    edi
  43698f:	imul   esi,DWORD PTR [edx+0x18814271],0x72
  436996:	outs   dx,BYTE PTR ds:[esi]
  436997:	dec    esp
  436998:	and    bh,al
  43699a:	or     bh,BYTE PTR [eax]
  43699c:	int3   
  43699d:	dec    ebx
  43699e:	pop    esi
  43699f:	clc    
  4369a0:	jle    0x4369cc
  4369a2:	fiadd  WORD PTR [esp+eiz*4-0x7c]
  4369a6:	inc    ebp
  4369a7:	add    al,0x9d
  4369a9:	add    ah,dh
  4369ab:	dec    esp
  4369ac:	and    dh,ch
  4369ae:	ret    0x33
  4369b1:	popf   
  4369b2:	test   esi,0xf705522c
  4369b8:	cmp    al,0x5a
  4369ba:	clc    
  4369bb:	mov    gs,WORD PTR [edx+edx*2]
  4369be:	jne    0x436a03
  4369c0:	lea    ebp,[ebp+ebx*1-0x2a]
  4369c4:	ins    BYTE PTR es:[edi],dx
  4369c5:	out    0x2d,eax
  4369c7:	mov    eax,0xb81de0f9
  4369cc:	je     0x436a07
  4369ce:	jge    0x4369a2
  4369d0:	sub    al,0x48
  4369d2:	pop    ebp
  4369d3:	daa    
  4369d4:	(bad)  
  4369d5:	fldenv [esi]
  4369d7:	idiv   DWORD PTR [edx*2-0x67ff0008]
  4369de:	mul    BYTE PTR [ebx]
  4369e0:	cmc    
  4369e1:	mov    eax,ds:0x81982572
  4369e6:	cmp    dh,BYTE PTR ds:0x252724b8
  4369ec:	mov    eax,0x1585a6a9
  4369f1:	lds    ebp,FWORD PTR [edx]
  4369f3:	test   DWORD PTR ds:0x983532c5,esi
  4369f9:	add    al,0x17
  4369fb:	and    eax,0x85a68998
  436a00:	jbe    0x4369cb
  436a02:	pop    edi
  436a03:	in     eax,0xf9
  436a05:	cdq    
  436a06:	jb     0x436a2d
  436a08:	pop    eax
  436a09:	test   eax,0xb1e17241
  436a0e:	inc    ecx
  436a0f:	in     eax,dx
  436a10:	test   DWORD PTR [ecx],ebp
  436a12:	jae    0x436a39
  436a14:	cmp    al,BYTE PTR [eax]
  436a16:	and    DWORD PTR [eax-0x13],ecx
  436a19:	test   DWORD PTR [ecx],ebx
  436a1b:	mul    BYTE PTR [ebx]
  436a1d:	add    eax,0xe123ce10
  436a22:	inc    edi
  436a23:	es cli 
  436a25:	es sbb eax,0xe1aad0b9
  436a2b:	jo     0x4369e4
  436a2d:	repz sahf 
  436a2f:	add    al,BYTE PTR [eax]
  436a31:	add    cl,dl
  436a33:	call   0xe900:0xb7a27d20
  436a3a:	sahf   
  436a3b:	add    dh,BYTE PTR [esi+0x29ee2]
  436a41:	add    bl,BYTE PTR [edx+0x5e2accb7]
  436a47:	jo     0x436a00
  436a49:	add    esp,DWORD PTR [ecx-0x763dfffe]
  436a4f:	test   DWORD PTR [ebp+eax*1-0x73],esi
  436a53:	mov    bh,0xd4
  436a55:	add    BYTE PTR [edi+0x3eb9f943],al
  436a5b:	add    al,0x0
  436a5d:	add    BYTE PTR [edi+0x7],bl
  436a60:	add    DWORD PTR [eax+eiz*4+0x4e],0x7e
  436a65:	leave  
  436a66:	nop
  436a67:	add    eax,DWORD PTR [ecx+0x407b9c48]
  436a6d:	sbb    al,0xbd
  436a6f:	push   ss
  436a70:	jecxz  0x436a72
  436a72:	xchg   ecx,eax
  436a74:	dec    edi
  436a75:	mov    ds:0x74fa06c7,eax
  436a7a:	add    dh,dh
  436a7c:	jl     0x436a53
  436a7e:	mov    esi,DWORD PTR [eax+0x3f8b581a]
  436a84:	jl     0x436ad6
  436a86:	sbb    al,0xc5
  436a88:	(bad)  
  436a8a:	sub    al,BYTE PTR [ebp-0x3b]
  436a8d:	fadd   DWORD PTR [ebx]
  436a8f:	lahf   
  436a90:	int    0x80
  436a92:	js     0x436a8c
  436a94:	jle    0x436ae8
  436a96:	cmp    al,0x4f
  436a98:	mov    ebx,0x22a05c84
  436a9d:	xor    DWORD PTR [eax+edx*4+0xa],ebx
  436aa1:	ins    DWORD PTR es:[edi],dx
  436aa2:	adc    al,0x9f
  436aa4:	repz sbb BYTE PTR [eax],0x2d
  436aa8:	bound  ebx,QWORD PTR ds:0x82f4b714
  436aae:	pop    eax
  436aaf:	mov    al,0x84
  436ab1:	jecxz  0x436abe
  436ab3:	test   DWORD PTR [edi+0x1d],ecx
  436ab6:	adc    al,0xd
  436ab8:	aaa    
  436ab9:	mov    bl,0x1
  436abb:	je     0x436ac0
  436abd:	add    bl,dl
  436abf:	xchg   edi,eax
  436ac0:	cmp    edi,DWORD PTR [ebp+edi*1+0x14]
  436ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ac5:	cmp    eax,DWORD PTR [eax]
  436ac7:	xchg   BYTE PTR [edx+0x1],ch
  436aca:	(bad)  
  436acc:	mov    BYTE PTR [esi],0x7e
  436acf:	popf   
  436ad0:	sahf   
  436ad1:	or     dh,BYTE PTR [ecx+0x7e]
  436ad4:	inc    esp
  436ad5:	mov    WORD PTR [esi-0x6b],fs
  436ad8:	hlt    
  436ad9:	fsub   DWORD PTR [ebx]
  436adb:	mov    cl,0x4
  436add:	pop    edx
  436ade:	jb     0x436ae0
  436ae0:	xchg   edi,eax
  436ae1:	add    al,0x5a
  436ae3:	jge    0x436b43
  436ae5:	mov    WORD PTR fs:[eax-0x67],ds
  436ae9:	xchg   esp,eax
  436aea:	pop    es
  436aeb:	and    eax,0x7d5b982e
  436af0:	pop    ebx
  436af1:	mov    WORD PTR fs:[eax-0x5f],?
  436af5:	in     al,0xd8
  436af7:	and    ebp,DWORD PTR [ebp-0x678da5bc]
  436afd:	push   esp
  436afe:	pop    edx
  436aff:	jg     0x436adf
  436b01:	pop    ecx
  436b02:	add    al,0x0
  436b04:	popf   
  436b05:	loop   0x436adb
  436b07:	clts   
  436b09:	jbe    0x436b31
  436b0b:	cmc    
  436b0c:	repnz das 
  436b0e:	test   cl,al
  436b10:	pushf  
  436b11:	pop    edx
  436b12:	std    
  436b13:	jmp    DWORD PTR [ecx+edx*2]
  436b16:	or     eax,0xa098d97d
  436b1b:	push   ebp
  436b1c:	push   0xd1bcda8f
  436b21:	lea    eax,[esi-0x6d2e114]
  436b27:	test   BYTE PTR [eax+0x69],cl
  436b2a:	rcr    BYTE PTR cs:[edx-0x237abb28],0x19
  436b32:	adc    BYTE PTR fs:[esi-0xf7b31e6],ah
  436b39:	ja     0x436ac7
  436b3b:	inc    ebx
  436b3c:	inc    ecx
  436b3d:	repz (bad) 
  436b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b40:	adc    al,0x9f
  436b42:	test   eax,0x2be00087
  436b47:	mov    WORD PTR [ebx+0x29],es
  436b4a:	add    esi,DWORD PTR [eax-0x39]
  436b4d:	xor    bh,BYTE PTR [esp-0x40]
  436b51:	sbb    cl,al
  436b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b54:	xor    DWORD PTR [ebp-0x2b],ebx
  436b57:	arpl   WORD PTR [edx-0x37],dx
  436b5a:	or     dh,cl
  436b5c:	push   es
  436b5d:	push   ss
  436b5e:	mov    ah,bh
  436b60:	add    ebx,DWORD PTR [ebp-0x564b1dfe]
  436b66:	rol    DWORD PTR [eax+0x7d],0xd9
  436b6a:	mov    edi,0xbfd98f4a
  436b6f:	inc    edx
  436b70:	les    ebp,FWORD PTR [ecx+0x40]
  436b73:	adc    eax,0xeef8206e
  436b78:	mov    BYTE PTR [edi+0x4580347b],ah
  436b7e:	(bad)  
  436b7f:	out    0x3,al
  436b81:	popf   
  436b82:	xchg   edx,eax
  436b83:	or     DWORD PTR [ecx+0x442c779],eax
  436b89:	outs   dx,BYTE PTR ds:[esi]
  436b8a:	add    al,0xaf
  436b8c:	and    ch,0x3
  436b8f:	(bad)  
  436b90:	jno    0x436bac
  436b92:	enter  0x395a,0xe5
  436b96:	hlt    
  436b97:	jecxz  0x436b23
  436b99:	pop    esi
  436b9a:	outs   dx,BYTE PTR ds:[esi]
  436b9b:	outs   dx,BYTE PTR ds:[esi]
  436b9c:	dec    esp
  436b9d:	push   ds
  436b9e:	inc    ebx
  436b9f:	mov    ah,0x2a
  436ba1:	sbb    al,cl
  436ba3:	fimul  DWORD PTR [eax+0x13a4458d]
  436ba9:	add    BYTE PTR [ebp+0x3],bl
  436bac:	out    0x3,eax
  436bae:	and    al,al
  436bb0:	test   BYTE PTR [edx+0x7e7819b],0x20
  436bb7:	adc    ah,BYTE PTR [eax+0xa]
  436bba:	adc    BYTE PTR [ebx],al
  436bbc:	jmp    0x436c02
  436bbe:	lahf   
  436bbf:	add    esp,edi
  436bc1:	add    ebx,DWORD PTR [ebp-0x21460034]
  436bc7:	xlat   BYTE PTR ds:[ebx]
  436bc8:	test   BYTE PTR [edx+edx*2],al
  436bcb:	scas   al,BYTE PTR es:[edi]
  436bcc:	push   ecx
  436bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436bce:	lahf   
  436bcf:	add    al,BYTE PTR [eax]
  436bd1:	jmp    0xe4b5af7b
  436bd6:	inc    eax
  436bd7:	out    dx,al
  436bd8:	jnp    0x436c26
  436bda:	add    eax,0x61ec7302
  436bdf:	ss clc 
  436be1:	cmp    ecx,esp
  436be3:	aaa    
  436be4:	leave  
  436be5:	cmp    bl,BYTE PTR [ebp+eax*4+0x6cf0ad7b]
  436bec:	stc    
  436bed:	jmp    0x6d15f390
  436bf2:	cmp    ah,BYTE PTR [ecx]
  436bf4:	add    dh,ah
  436bf6:	push   ecx
  436bf7:	mov    esi,0x709d4552
  436bfc:	and    eax,0x3e130678
  436c01:	push   0xffffff84
  436c03:	sti    
  436c04:	jno    0x436b8c
  436c06:	and    eax,0x686407d1
  436c0b:	call   0x4c43d81c
  436c10:	test   BYTE PTR [edx],0x6a
  436c13:	ins    WORD PTR es:[edi],dx
  436c15:	ins    DWORD PTR es:[edi],dx
  436c16:	jecxz  0x436c11
  436c18:	retf   0x217c
  436c1b:	push   ecx
  436c1c:	xlat   BYTE PTR ds:[ebx]
  436c1d:	test   BYTE PTR [ebx+ebp*8-0x53],cl
  436c21:	sub    eax,0x4383b829
  436c26:	outs   dx,DWORD PTR ds:[esi]
  436c27:	imul   BYTE PTR [ebx-0x7]
  436c2a:	jmp    0x744bd3cd
  436c2f:	add    ah,BYTE PTR [esi]
  436c31:	add    cl,ch
  436c33:	sahf   
  436c34:	add    dl,BYTE PTR [eax+0x2bf258f]
  436c3a:	gs js  0x436cac
  436c3d:	inc    ebp
  436c3e:	add    BYTE PTR [ecx-0x5c],bh
  436c41:	jnp    0x436c03
  436c43:	jbe    0x436cab
  436c45:	or     BYTE PTR [ecx+ecx*4-0x7c],0x7b
  436c4a:	clc    
  436c4b:	bound  esi,QWORD PTR [edx-0x1e]
  436c4e:	mov    esi,DWORD PTR [ecx+0x60758316]
  436c54:	xor    eax,0x72fd85c0
  436c59:	and    ah,BYTE PTR [esi-0x39]
  436c5c:	sub    bh,BYTE PTR [ebx]
  436c5e:	add    BYTE PTR [eax+0x68b70709],cl
  436c64:	inc    ebp
  436c65:	or     BYTE PTR [edi+0x667d5198],dh
  436c6b:	mov    ebp,0xcb0f4e02
  436c70:	adc    bh,BYTE PTR [ebx]
  436c72:	data16 add BYTE PTR [ebx],al
  436c75:	inc    ebx
  436c76:	dec    esi
  436c77:	test   BYTE PTR [ecx+0x7f844e52],al
  436c7d:	push   ecx
  436c7e:	add    DWORD PTR [eax-0x21],eax
  436c81:	(bad)  
  436c82:	imul   edx,edi,0xe87ac48f
  436c88:	add    al,0xaf
  436c8a:	idiv   edi
  436c8c:	and    edi,0x73
  436c8f:	cmp    DWORD PTR [esp+ebx*2],ebp
  436c92:	or     al,0xc7
  436c94:	cmp    esp,edx
  436c96:	pop    ss
  436c97:	dec    esi
  436c98:	add    al,0x0
  436c9a:	mov    edi,0x474e6445
  436c9f:	inc    eax
  436ca0:	mov    ah,0x7e
  436ca2:	inc    ebp
  436ca3:	in     al,0x6f
  436ca5:	ss mov eax,0xf9400198
  436cab:	sub    al,0xc6
  436cad:	add    eax,0x412d0000
  436cb2:	aad    0xb8
  436cb4:	pop    esp
  436cb5:	cmp    DWORD PTR [ecx],edi
  436cb7:	add    BYTE PTR [ebp-0x6d01fcba],bl
  436cbd:	pop    ecx
  436cbe:	mov    WORD PTR [ebx+0x7d],es
  436cc1:	sbb    al,0xbf
  436cc3:	jecxz  0x436c62
  436cc5:	pop    edx
  436cc6:	std    
  436cc7:	inc    DWORD PTR [esi+0x7d738c66]
  436ccd:	loop   0x436cbd
  436ccf:	(bad)  [edx+0x1e]
  436cd2:	pusha  
  436cd3:	or     eax,0x84fd599d
  436cd8:	add    al,ah
  436cda:	ins    DWORD PTR es:[edi],dx
  436cdb:	mov    al,BYTE PTR [eax]
  436cdd:	and    al,0x26
  436cdf:	je     0x436c68
  436ce1:	fsub   DWORD PTR [ecx-0x7ebeb476]
  436ce7:	add    al,0x0
  436ce9:	popf   
  436cea:	pop    ecx
  436ceb:	push   edx
  436cec:	loopne 0x436d5c
  436cee:	nop
  436cef:	mov    WORD PTR [ebx+0x25],?
  436cf2:	repnz xlat BYTE PTR ds:[ebx]
  436cf4:	jmp    0x436d0c
  436cf6:	mov    eax,ds:0xe21a4888
  436cfb:	test   edi,0x87502624
  436d01:	pop    eax
  436d02:	mov    ch,0x82
  436d04:	neg    BYTE PTR [esi+esi*2+0x58513afe]
  436d0b:	std    
  436d0c:	inc    DWORD PTR [esi]
  436d0e:	pop    edi
  436d0f:	xor    dh,0x9f
  436d12:	dec    esi
  436d13:	or     bh,BYTE PTR [ebx]
  436d15:	dec    ebp
  436d16:	push   edi
  436d17:	std    
  436d18:	jmp    FWORD PTR [edx-0x2d01e928]
  436d1e:	pop    eax
  436d1f:	mov    WORD PTR [ebx-0x4b],?
  436d22:	iret   
  436d23:	or     ecx,DWORD PTR [ebx-0x2a6da]
  436d29:	popf   
  436d2a:	loopne 0x436d23
  436d2c:	iret   
  436d2d:	daa    
  436d2e:	xchg   esi,eax
  436d2f:	jne    0x436cb6
  436d31:	xor    BYTE PTR [edx],al
  436d33:	or     ebp,DWORD PTR ds:0x14b479d0
  436d39:	and    al,dl
  436d3b:	dec    BYTE PTR [ecx]
  436d3d:	add    BYTE PTR [ebp+eax*1+0x5e],cl
  436d41:	dec    ebx
  436d42:	sar    BYTE PTR [eax],1
  436d44:	test   BYTE PTR [ecx],al
  436d46:	pop    edi
  436d47:	rcl    dh,0x3
  436d4a:	and    BYTE PTR [esi],0x71
  436d4d:	push   ds
  436d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436d4f:	mov    cl,0xe5
  436d51:	mov    ss,esi
  436d53:	(bad)  
  436d54:	out    0x43,al
  436d56:	sbb    ecx,DWORD PTR [edi]
  436d58:	out    dx,eax
  436d59:	mov    esi,fs
  436d5b:	inc    esi
  436d5c:	pop    edi
  436d5d:	iret   
  436d5e:	mov    ds:0x95105de0,al
  436d63:	loopne 0x436dd4
  436d65:	iret   
  436d66:	nop
  436d67:	pop    ebp
  436d68:	in     eax,dx
  436d69:	inc    ecx
  436d6a:	ficom  WORD PTR [edx]
  436d6c:	inc    edi
  436d6d:	xor    eax,0xbf5fe15d
  436d72:	cwde   
  436d73:	jge    0x436da9
  436d75:	jl     0x436def
  436d77:	cmp    eax,0xe820416e
  436d7c:	cmp    BYTE PTR [esi+0x3e76a12],0xd8
  436d83:	outs   dx,BYTE PTR fs:[esi]
  436d85:	dec    ebp
  436d86:	rcr    BYTE PTR [ecx+0x6e],1
  436d89:	(bad)  
  436d8a:	or     bh,BYTE PTR [esp+ebp*1+0x4c]
  436d8e:	es das 
  436d90:	push   esp
  436d91:	add    al,0x9d
  436d93:	add    ah,bh
  436d95:	add    al,0xe5
  436d97:	ja     0x436d84
  436d99:	mov    edx,0x2cf6e820
  436d9e:	out    0x1d,eax
  436da0:	and    eax,0xef92008b
  436da5:	lea    ebp,ds:[esi+0x6a]
  436da9:	ins    BYTE PTR es:[edi],dx
  436daa:	into   
  436dab:	mov    ch,0xaa
  436dad:	add    al,ch
  436daf:	sahf   
  436db0:	add    al,BYTE PTR [eax]
  436db2:	sbb    al,BYTE PTR [ecx+0x7f]
  436db5:	dec    ebx
  436db6:	adc    eax,0xf074a922
  436dbb:	and    eax,ecx
  436dbd:	push   DWORD PTR [edi]
  436dbf:	add    DWORD PTR [esi-0x79f76b41],eax
  436dc5:	sar    BYTE PTR [ebp-0x69],0x7d
  436dc9:	js     0x436dc9
  436dcb:	shl    DWORD PTR [ecx-0x3],0xf0
  436dcf:	add    DWORD PTR [ecx+0x2e],ebp
  436dd2:	out    dx,al
  436dd3:	and    ebp,eax
  436dd5:	out    0xeb,eax
  436dd7:	es imul edi,ecx,0xffffffe9
  436ddb:	sahf   
  436ddc:	in     al,0xfe
  436dde:	sub    al,0x62
  436de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436de1:	xchg   DWORD PTR [ebp+esi*4-0xb],ecx
  436de5:	adc    al,0x2
  436de7:	push   edx
  436de8:	jne    0x436df3
  436dea:	gs loop 0x436def
  436ded:	add    cl,ch
  436def:	and    DWORD PTR [ebp-0x7122119],edi
  436df5:	test   BYTE PTR [edx*4-0x11124f05],ch
  436dfc:	jg     0x436e49
  436dfe:	xchg   ecx,eax
  436dff:	and    DWORD PTR [ecx],edi
  436e01:	xor    eax,0x81fb8534
  436e06:	int    0x0
  436e08:	test   DWORD PTR [ebx-0x7],ebp
  436e0b:	jb     0x436e18
  436e0d:	cmp    eax,0xf5277e1d
  436e12:	ret    
  436e13:	mov    dl,0xfb
  436e15:	push   eax
  436e16:	or     DWORD PTR [ebp-0x77],ebp
  436e19:	imul   edi,ecx,0x5e
  436e1c:	pop    ebx
  436e1d:	dec    edi
  436e1e:	jae    0x436e0a
  436e20:	and    ebp,ecx
  436e22:	sti    
  436e23:	(bad)  
  436e24:	fistp  DWORD PTR [eax-0x7b]
  436e27:	add    cl,dh
  436e29:	mov    esp,0x7c460c84
  436e2e:	inc    ebp
  436e2f:	lock aas 
  436e31:	inc    eax
  436e32:	icebp  
  436e33:	sub    edi,DWORD PTR [edi-0x53]
  436e36:	stc    
  436e37:	push   DWORD PTR [esp+eax*1-0x3070eb7b]
  436e3e:	fistp  QWORD PTR [ebx]
  436e40:	push   ecx
  436e41:	fsubr  DWORD PTR [edx+0x1c]
  436e44:	jmp    0x8be7bca0
  436e49:	mov    bl,0x36
  436e4b:	sub    eax,ebx
  436e4d:	call   0x3ebbed11
  436e52:	cmp    al,BYTE PTR [ebx-0x4005023e]
  436e58:	mov    edi,0x6f72ed51
  436e5d:	jl     0x436ecc
  436e5f:	les    edi,FWORD PTR [edi-0x7e7432af]
  436e65:	div    BYTE PTR [esi+0x43401]
  436e6b:	rol    DWORD PTR [eax],cl
  436e6d:	arpl   WORD PTR [edi+ecx*8],ax
  436e70:	mov    DWORD PTR [ecx-0x32],ebp
  436e73:	adc    BYTE PTR [ebp+0x10],0x84
  436e77:	clc    
  436e78:	add    DWORD PTR [ecx-0x2f05870a],eax
  436e7e:	add    eax,DWORD PTR [eax]
  436e80:	add    BYTE PTR [edi],bl
  436e82:	cld    
  436e83:	jp     0x436e7d
  436e85:	div    BYTE PTR [edx+0x5]
  436e88:	sbb    DWORD PTR [esi],0x4fffb4f
  436e8e:	add    DWORD PTR [ebx-0x50],edi
  436e91:	add    al,0x4
  436e93:	add    BYTE PTR [ebx+0x146d7c42],cl
  436e99:	outs   dx,DWORD PTR ds:[esi]
  436e9a:	clc    
  436e9b:	xchg   DWORD PTR [esi+eax*2],ecx
  436e9e:	jnp    0x436ea6
  436ea0:	mov    bl,BYTE PTR [ebp+0x718871a6]
  436ea6:	fiadd  DWORD PTR [edx]
  436ea8:	test   DWORD PTR [ebx-0x7910390c],ecx
  436eae:	pop    ss
  436eaf:	inc    ebx
  436eb0:	neg    DWORD PTR [edi+0x43d7bee2]
  436eb6:	loop   0x436e7f
  436eb8:	sbb    DWORD PTR [edi-0x650615ee],0xc7be8608
  436ec2:	sbb    al,0x2d
  436ec4:	(bad)  
  436ec5:	arpl   WORD PTR [esi-0x69eabff3],bx
  436ecb:	adc    al,0x62
  436ecd:	and    al,0x96
  436ecf:	jae    0xd428e0d5
  436ed5:	test   al,dh
  436ed7:	imul   eax,DWORD PTR [eax-0x7b02162b],0x38fc6943
  436ee1:	xor    eax,0xde9b1d8
  436ee6:	push   ss
  436ee7:	push   ds
  436ee8:	js     0x436e6f
  436eea:	rol    BYTE PTR [ebp-0x7a],1
  436eed:	das    
  436eee:	outs   dx,BYTE PTR ds:[esi]
  436eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ef0:	mov    WORD PTR [ebx+0x35],es
  436ef3:	loope  0x436eb4
  436ef5:	push   cs
  436ef6:	push   ss
  436ef7:	mov    DWORD PTR [esi+0x4e9816c5],eax
  436efd:	call   0x87578528
  436f02:	mov    eax,ds:0xa4687d7
  436f07:	rol    DWORD PTR [ebx],1
  436f09:	add    BYTE PTR [ebp+0x20e04e59],bl
  436f0f:	mov    al,ds:0x8a0d00e9
  436f14:	gs and edx,0x6d
  436f18:	ja     0x436e9d
  436f1a:	fld    QWORD PTR [ecx]
  436f1c:	fisttp DWORD PTR [esi+eiz*1]
  436f1f:	mov    edx,0x2ca2259
  436f24:	dec    edi
  436f25:	lock clc 
  436f27:	jp     0x436edd
  436f29:	dec    edi
  436f2a:	sbb    BYTE PTR [ebp-0x72567726],bh
  436f30:	out    0x3,eax
  436f32:	popf   
  436f33:	add    ch,al
  436f35:	or     eax,DWORD PTR [eax]
  436f37:	and    BYTE PTR [ebp+0xa4e8a2a],bh
  436f3d:	ret    0x23d5
  436f40:	add    esi,edx
  436f42:	inc    ebx
  436f43:	call   0x4a1b7bc1
  436f48:	(bad)  
  436f49:	test   al,0xbb
  436f4b:	and    BYTE PTR [esi-0x19],0x3
  436f4f:	sar    BYTE PTR [ecx+0x4],1
  436f52:	fdiv   DWORD PTR [ecx]
  436f54:	aaa    
  436f55:	repnz pop ds
  436f57:	xchg   ebp,eax
  436f58:	adc    BYTE PTR [edi+0x6e375103],ah
  436f5e:	inc    edx
  436f5f:	sbb    BYTE PTR [ebx-0x3e1a13b1],dl
  436f65:	out    0xdf,al
  436f67:	sub    eax,DWORD PTR [ebx]
  436f69:	out    0x3,eax
  436f6b:	popf   
  436f6c:	shr    BYTE PTR [ebp-0x40],cl
  436f6f:	jle    0x436f83
  436f71:	jo     0x436f5b
  436f73:	jle    0x436f87
  436f75:	fs call 0x644181f9
  436f7b:	ror    ah,1
  436f7d:	cmp    DWORD PTR [ecx-0x208f95a2],ecx
  436f83:	cli    
  436f84:	rcr    BYTE PTR [ebp-0x41],cl
  436f87:	push   es
  436f88:	ds and al,0x78
  436f8b:	add    al,0x66
  436f8d:	xor    BYTE PTR [ebp+0x22],0xc0
  436f91:	jle    0x436f1a
  436f93:	pop    esi
  436f94:	jb     0x436f96
  436f96:	or     eax,0xe900033c
  436f9b:	add    BYTE PTR [esi+0x4eb485a7],bl
  436fa1:	fiadd  WORD PTR [esi+0x29eec]
  436fa7:	jmp    0xb29d3a93
  436fac:	push   edi
  436fad:	mov    ch,0xbc
  436faf:	inc    esi
  436fb0:	call   0xcc36:0x9ea911da
  436fb7:	call   0xff81:0x5447ed8
  436fbe:	mov    edi,0x4c7fb69c
  436fc3:	lds    esp,FWORD PTR [edx-0x5132bb81]
  436fc9:	pop    ss
  436fca:	into   
  436fcb:	push   ss
  436fcc:	push   cs
  436fcd:	sbb    al,0x72
  436fd0:	pop    ebp
  436fd1:	and    DWORD PTR [esi+esi*8],ecx
  436fd4:	out    dx,eax
  436fd5:	jg     0x436fa4
  436fd7:	add    bl,BYTE PTR [esi+0x7e]
  436fda:	enter  0x4562,0x21
  436fde:	adc    al,0x72
  436fe0:	push   0x21
  436fe2:	adc    BYTE PTR [edx+0x12],dh
  436fe5:	and    DWORD PTR [eax+edi*4],ecx
  436fe8:	mov    bh,0x35
  436fea:	aad    0xb8
  436fec:	mov    ah,0x35
  436fee:	fdiv   st,st(2)
  436ff0:	out    0xf1,eax
  436ff2:	repz mov dh,0xad
  436ff5:	jg     0x436fe7
  436ff7:	mov    esi,0x6218214a
  436ffc:	(bad)  
  436ffd:	jg     0x437043
  436fff:	int    0x0
  437001:	stos   BYTE PTR es:[edi],al
  437002:	jae    0x436fe6
  437004:	jmp    0x20da:0xd209d46f
  43700b:	adc    BYTE PTR [esi],dl
  43700d:	xchg   ecx,eax
  43700e:	aam    0x0
  437010:	add    bh,bl
  437012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437013:	sbb    eax,0x45ffea0c
  437018:	xor    eax,DWORD PTR [esi]
  43701a:	jp     0x436fda
  43701c:	pop    esi
  43701d:	pop    eax
  43701f:	sldt   WORD PTR [edx-0x12]
  437023:	idiv   bh
  437025:	les    eax,FWORD PTR [eax]
  437027:	add    BYTE PTR [eax],al
  437029:	mov    esi,gs
  43702b:	idiv   bh
  43702d:	mov    ah,0x0
  43702f:	add    BYTE PTR [eax],al
  437031:	(bad)  
  437032:	out    dx,al
  437033:	idiv   bh
  437035:	scas   al,BYTE PTR es:[edi]
  437036:	(bad)  
  437037:	cmp    al,BYTE PTR [eax]
  437039:	sar    bh,cl
  43703b:	cmp    al,BYTE PTR [eax]
  43703d:	mov    ah,0x0
  43703f:	add    BYTE PTR [eax],al
  437041:	ret    
  437042:	out    dx,al
  437043:	idiv   bh
  437045:	loope  0x436ffb
  437047:	cmp    DWORD PTR [eax],eax
  437049:	in     eax,0xb4
  43704b:	cmp    DWORD PTR [eax],eax
  43704d:	je     0x43704f
  43704f:	add    BYTE PTR [eax],al
  437051:	mov    ds:0x35fff6ee,eax
  437056:	mov    ch,0x39
  437058:	add    BYTE PTR [ecx],ch
  43705a:	mov    ch,0x39
  43705c:	add    BYTE PTR [eax+eax*1+0x0],dh
  437060:	add    BYTE PTR [ebx-0x10],al
  437063:	idiv   bh
  437065:	add    BYTE PTR [eax-0x34],bl
  437068:	cmp    DWORD PTR [eax],eax
  43706a:	pop    esp
  43706b:	int3   
  43706c:	cmp    DWORD PTR [eax],eax
  43706e:	xor    al,0x0
  437070:	add    BYTE PTR [eax],al
  437072:	arpl   ax,si
  437074:	idiv   bh
  437076:	push   ebp
  437077:	int    0x39
  437079:	add    BYTE PTR [ecx-0x33],cl
  43707c:	cmp    DWORD PTR [eax],eax
  43707e:	xor    al,0x0
  437080:	add    BYTE PTR [eax],al
  437082:	inc    ebx
  437083:	lock idiv bh
  437086:	je     0x4370c7
  437088:	cmp    al,BYTE PTR [eax]
  43708a:	popf   
  43708b:	lds    edi,FWORD PTR [esi+edi*1-0x2a663]
  437092:	popf   
  437093:	jl     0x437102
  437095:	stc    
  437096:	repnz lds ecx,FWORD PTR [edx+0x40]
  43709a:	popf   
  43709b:	mov    ecx,0x599d404a
  4370a0:	std    
  4370a1:	call   FWORD PTR [ebp-0x2d069324]
  4370a7:	aas    
  4370a8:	dec    esp
  4370a9:	inc    eax
  4370aa:	popf   
  4370ab:	stos   DWORD PTR es:[edi],eax
  4370ac:	dec    esp
  4370ad:	inc    eax
  4370ae:	popf   
  4370af:	pop    ecx
  4370b0:	std    
  4370b1:	call   FWORD PTR [ebp-0x4d069344]
  4370b7:	sub    DWORD PTR [esi-0x51c862c2],0x3e
  4370be:	popf   
  4370bf:	pop    ecx
  4370c0:	std    
  4370c1:	call   FWORD PTR [ebp-0x6d0692e4]
  4370c7:	call   0x9d43af23
  4370cc:	in     al,0x57
  4370ce:	ds popf 
  4370d0:	pop    ecx
  4370d1:	std    
  4370d2:	call   FWORD PTR [ebp+0x72f96cfc]
  4370d8:	sub    dl,BYTE PTR [ebx-0x6cd962c2]
  4370de:	ds popf 
  4370e0:	pop    ecx
  4370e1:	std    
  4370e2:	call   FWORD PTR [ebp+0x52f96e5c]
  4370e8:	mov    eax,0xb49d3e93
  4370ed:	xchg   ebx,eax
  4370ee:	ds popf 
  4370f0:	pop    ecx
  4370f1:	std    
  4370f2:	call   FWORD PTR [ebp-0x620002a7]
  4370f8:	pop    ecx
  4370f9:	std    
  4370fa:	call   FWORD PTR [ebp+0x7aec8106]
  437100:	loop   0x437169
  437102:	dec    edi
  437103:	outs   dx,DWORD PTR ds:[esi]
  437104:	add    bh,BYTE PTR [ecx]
  437106:	pop    esp
  437107:	sbb    eax,0x7d03e712
  43710c:	adc    edi,esp
  43710e:	add    esp,DWORD PTR [ecx+0x11]
  437111:	out    0x3,eax
  437113:	push   ebp
  437114:	adc    edi,esp
  437116:	add    ecx,DWORD PTR [ecx+0x11]
  437119:	out    0x3,eax
  43711b:	adc    DWORD PTR [ecx],0x110103e7
  437121:	out    0x3,eax
  437123:	and    eax,0x1903e711
  437128:	adc    edi,esp
  43712a:	add    ebx,DWORD PTR [ebp+0x11]
  43712d:	out    0x3,eax
  43712f:	add    BYTE PTR [ecx+0x7503e711],al
  437135:	adc    edi,esp
  437137:	add    ebp,DWORD PTR [ecx+0x11]
  43713a:	out    0x3,eax
  43713c:	popa   
  43713d:	adc    edi,esp
  43713f:	add    esp,DWORD PTR [ecx]
  437141:	adc    edi,esp
  437143:	add    eax,DWORD PTR ds:0xca03e6f4
  437149:	cld    
  43714a:	out    0x3,al
  43714c:	mov    ebp,0xa103e6f3
  437151:	repz out 0x3,al
  437154:	xchg   ebp,eax
  437155:	repz out 0x3,al
  437158:	mov    ebx,esi
  43715a:	out    0x3,al
  43715c:	shl    ebx,0xe6
  43715f:	add    eax,ecx
  437161:	repz out 0x3,al
  437164:	in     eax,0xf3
  437166:	out    0x3,al
  437168:	fpatan 
  43716a:	out    0x3,al
  43716c:	popf   
  43716d:	repz out 0x3,al
  437170:	inc    ecx
  437171:	repz out 0x3,al
  437174:	xor    eax,0x2903e6f3
  437179:	repz out 0x3,al
  43717c:	mov    eax,ds:0x9ee8fff3
  437181:	push   ds
  437182:	psubsw mm3,QWORD PTR [esi-0x6116f0d6]
  437189:	psubsw mm3,QWORD PTR es:[esi-0x6116ef9e]
  437191:	ds adc cl,ch
  437194:	add    BYTE PTR [esi-0x6116efc6],bl
  43719a:	ss adc cl,ch
  43719d:	sahf   
  43719e:	data16 adc cl,ch
  4371a1:	sahf   
  4371a2:	dec    BYTE PTR [esi]
  4371a4:	jmp    0xe9531647
  4371a9:	sahf   
  4371aa:	push   es
  4371ab:	psubsw mm3,QWORD PTR [esi-0x6116efbe]
  4371b2:	sahf   
  4371b3:	adc    cl,ch
  4371b5:	sahf   
  4371b6:	call   0xe910:0x969ee910
  4371bd:	sahf   
  4371be:	inc    esi
  4371bf:	adc    cl,ch
  4371c1:	sahf   
  4371c2:	pop    esi
  4371c3:	adc    cl,ch
  4371c5:	sahf   
  4371c6:	test   BYTE PTR [edi],cl
  4371c8:	jmp    0xe953d86b
  4371cd:	sahf   
  4371ce:	mov    ds:0x7e9ee910,al
  4371d3:	adc    cl,ch
  4371d5:	sahf   
  4371d6:	jp     0x4371e8
  4371d8:	jmp    0xe953e87b
  4371dd:	sahf   
  4371de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4371df:	adc    cl,ch
  4371e1:	sahf   
  4371e2:	ds adc cl,ch
  4371e5:	sahf   
  4371e6:	in     al,0xe
  4371e8:	jmp    0xe953b88b
  4371ed:	sahf   
  4371ee:	adc    BYTE PTR [eax],0xe9
  4371f1:	sahf   
  4371f2:	fimul  WORD PTR [edi]
  4371f4:	jmp    0x534c97
  4371f9:	add    BYTE PTR [ebp+eax*1+0x74],al
  4371fd:	adc    BYTE PTR [eax*1+0x5341084],dh
  437204:	mov    esp,0x3e050410
  437209:	adc    DWORD PTR [eax*1+0x4f410a4],eax
  437210:	adc    BYTE PTR [ecx],dl
  437212:	hlt    
  437213:	add    al,0xc
  437215:	adc    DWORD PTR [eax*1+0x5041108],eax
  43721c:	add    al,0x11
  43721e:	hlt    
  43721f:	add    al,0x0
  437221:	adc    esp,esi
  437223:	add    al,0xfc
  437225:	adc    ah,al
  437227:	add    al,0xf8
  437229:	adc    ah,al
  43722b:	add    al,0xf4
  43722d:	adc    BYTE PTR [esp+eax*1+0x4b410c4],dh
  437234:	rcl    BYTE PTR [eax],0xc4
  437237:	add    al,0xbc
  437239:	adc    ah,al
  43723b:	add    al,0xb8
  43723d:	adc    BYTE PTR [esp+eax*1+0x4b410b4],dh
  437244:	mov    al,0x10
  437246:	test   BYTE PTR [esp+ebp*4],al
  437249:	adc    BYTE PTR [esp+eax*1+0x47410a8],al
  437250:	xor    BYTE PTR [eax],dl
  437252:	je     0x437258
  437254:	sub    al,0x10
  437256:	test   BYTE PTR [eax+ebp*1],al
  437259:	adc    BYTE PTR [esp+eax*1+0x74001024],al
  437260:	add    al,0x20
  437262:	adc    BYTE PTR [esp+eax*1+0x1c],dh
  437266:	adc    BYTE PTR [esp+eax*1+0x18],al
  43726a:	adc    BYTE PTR [esp+eax*1+0x14],al
  43726e:	adc    BYTE PTR [esp+eax*1],dh
  437271:	adc    BYTE PTR [eax],dl
  437273:	popf   
  437274:	imul   edi,ebp,0xfd698d0b
  43727a:	pop    es
  43727b:	lea    ebp,[ecx-0x3]
  43727e:	add    ecx,DWORD PTR [ebp-0x72000297]
  437284:	imul   edi,ebp,0xfd69aafb
  43728a:	mul    DWORD PTR [edx-0x650c0297]
  437290:	imul   edi,ebp,0xfd6992ef
  437296:	jmp    0x437242
  437298:	imul   edi,ebp,0xfd698c09
  43729e:	rcr    DWORD PTR [edx-0x72560297],cl
  4372a4:	imul   edi,ebp,0xfd69ada5
  4372aa:	mov    eax,0xebfd69aa
  4372af:	mov    dl,0x69
  4372b1:	std    
  4372b2:	(bad)  
  4372b3:	lods   al,BYTE PTR ds:[esi]
  4372b4:	imul   edi,ebp,0xfd698ca3
  4372ba:	retf   
  4372bb:	mov    ds:0x8d28fd69,al
  4372c0:	imul   edi,ebp,0x699200bf
  4372c6:	std    
  4372c7:	mov    ebx,0xb7fd69aa
  4372cc:	mov    ds:0x9ab3fd69,al
  4372d1:	imul   edi,ebp,0xfd6992b3
  4372d7:	scas   eax,DWORD PTR es:[edi]
  4372d8:	stos   BYTE PTR es:[edi],al
  4372d9:	imul   edi,ebp,0xfd69a2ab
  4372df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4372e0:	call   0xfd69:0x92a3fd69
  4372e7:	lahf   
  4372e8:	stos   BYTE PTR es:[edi],al
  4372e9:	imul   edi,ebp,0xe702a29b
  4372ef:	add    esp,DWORD PTR ds:0x2903e70f
  4372f5:	movntq QWORD PTR [ebx],mm0
  4372f8:	or     eax,0x2103e70f
  4372fd:	movntq QWORD PTR [ebx],mm0
  437300:	adc    eax,0x1903e70f
  437305:	movntq QWORD PTR [ebx],mm0
  437308:	sbb    eax,0x9103e70f
  43730d:	movntq QWORD PTR [ebx],mm0
  437310:	test   DWORD PTR [edi],ecx
  437312:	out    0x3,eax
  437314:	call   0xff475a27
  437319:	lock out 0x3,al
  43731c:	loope  0x43730e
  43731e:	out    0x3,al
  437320:	aam    0xe
  437322:	out    0x3,eax
  437324:	dec    ebp
  437325:	movntq QWORD PTR [ebx],mm0
  437328:	add    BYTE PTR [ecx+0xf],ch
  43732b:	out    0x3,eax
  43732d:	movntq QWORD PTR gs:[ebx],mm0
  437331:	popa   
  437332:	movntq QWORD PTR [ebx],mm0
  437335:	pop    ebp
  437336:	movntq QWORD PTR [ebx],mm0
  437339:	jns    0x43734a
  43733b:	out    0x3,eax
  43733d:	jne    0x43734e
  43733f:	out    0x3,eax
  437341:	jno    0x437352
  437343:	out    0x3,eax
  437345:	ins    DWORD PTR es:[edi],dx
  437346:	movntq QWORD PTR [ebx],mm0
  437349:	leave  
  43734a:	or     eax,0xdc503e7
  43734f:	out    0x3,eax
  437351:	xlat   BYTE PTR ds:[ebx]
  437352:	repz out 0x3,al
  437355:	int    0xd
  437357:	out    0x3,eax
  437359:	leave  
  43735a:	or     eax,0xdc503e7
  43735f:	out    0x3,eax
  437361:	ror    DWORD PTR ds:0xdbd03e7,0x0
  437368:	jmp    0xe94c720b
  43736d:	sahf   
  43736e:	cli    
  43736f:	or     cl,ch
  437371:	sahf   
  437372:	test   BYTE PTR [eax],0xe9
  437375:	sahf   
  437376:	repnz or cl,ch
  437379:	sahf   
  43737a:	push   cs
  43737b:	or     ecx,ebp
  43737d:	sahf   
  43737e:	lahf   
  43737f:	adc    cl,ch
  437381:	sahf   
  437382:	push   es
  437383:	or     ecx,ebp
  437385:	sahf   
  437386:	add    cl,BYTE PTR [ecx]
  437388:	jmp    0xe94dd22b
  43738d:	add    BYTE PTR [esi-0x6116f5a6],bl
  437393:	push   esi
  437394:	or     ch,cl
  437396:	sahf   
  437397:	(bad)  
  437398:	psubsw mm3,QWORD PTR [esi-0x6116f04e]
  43739f:	push   ds
  4373a0:	adc    cl,ch
  4373a2:	sahf   
  4373a3:	retf   0xe90f
  4373a6:	sahf   
  4373a7:	bound  ecx,QWORD PTR [edx]
  4373a9:	jmp    0xe94db24c
  4373ae:	sahf   
  4373af:	cmp    cl,BYTE PTR [edx]
  4373b1:	jmp    0xe94daa54
  4373b6:	sahf   
  4373b7:	ss or  ch,cl
  4373ba:	sahf   
  4373bb:	push   cs
  4373bc:	or     ecx,ebp
  4373be:	sahf   
  4373bf:	dec    edx
  4373c0:	or     ch,cl
  4373c2:	sahf   
  4373c3:	inc    esi
  4373c4:	or     ch,cl
  4373c6:	sahf   
  4373c7:	inc    edx
  4373c8:	or     ch,cl
  4373ca:	sahf   
  4373cb:	sahf   
  4373cc:	or     ch,cl
  4373ce:	sahf   
  4373cf:	call   0xe90a:0x969ee90a
  4373d6:	sahf   
  4373d7:	xchg   esi,eax
  4373d8:	or     ch,cl
  4373da:	sahf   
  4373db:	xchg   edx,eax
  4373dc:	or     ch,cl
  4373de:	sahf   
  4373df:	scas   al,BYTE PTR es:[edi]
  4373e0:	or     al,BYTE PTR [eax]
  4373e2:	je     0x4373e5
  4373e4:	test   al,0xe
  4373e6:	je     0x4373e9
  4373e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4373e9:	push   cs
  4373ea:	inc    esp
  4373eb:	add    DWORD PTR [eax-0x63febbf2],esp
  4373f1:	push   cs
  4373f2:	add    BYTE PTR [ecx+eax*1],dh
  4373f5:	cwde   
  4373f6:	push   cs
  4373f7:	xor    al,0x1
  4373f9:	loopne 0x437409
  4373fb:	inc    esp
  4373fc:	add    esp,ebx
  4373fe:	push   cs
  4373ff:	inc    esp
  437400:	add    eax,ebx
  437402:	push   cs
  437403:	xor    al,0x1
  437405:	aam    0xe
  437407:	xor    al,0x1
  437409:	ror    BYTE PTR [esi],1
  43740b:	add    al,0x1
  43740d:	int3   
  43740e:	push   cs
  43740f:	add    al,0x1
  437411:	enter  0xf40e,0x0
  437415:	les    ecx,FWORD PTR [esi]
  437417:	hlt    
  437418:	add    bl,dl
  43741a:	push   cs
  43741b:	add    al,0x1
  43741d:	iret   
  43741e:	push   cs
  43741f:	add    al,0x1
  437421:	scas   eax,DWORD PTR es:[edi]
  437422:	pmuludq mm0,QWORD PTR [eax]
  437425:	fs push cs
  437427:	hlt    
  437428:	add    BYTE PTR [esi+0xf],bh
  43742b:	les    eax,FWORD PTR [eax]
  43742d:	jp     0x43743e
  43742f:	les    eax,FWORD PTR [eax]
  437431:	mov    ebx,0x3d00b40e
  437436:	lfs    eax,FWORD PTR [eax]
  437439:	ins    BYTE PTR es:[edi],dx
  43743a:	pinsrw mm0,WORD PTR [eax],0x4c
  43743e:	push   cs
  43743f:	les    eax,FWORD PTR [eax]
  437441:	(bad)  
  437442:	lfs    eax,FWORD PTR [eax]
  437445:	inc    esp
  437446:	push   cs
  437447:	mov    ah,0x0
  437449:	inc    eax
  43744a:	push   cs
  43744b:	test   BYTE PTR [eax],al
  43744d:	inc    eax
  43744e:	push   cs
  43744f:	test   BYTE PTR [eax],al
  437451:	push   0x3400740e
  437456:	push   cs
  437457:	add    BYTE PTR [eax+eax*1+0x20],dh
  43745b:	push   cs
  43745c:	popf   
  43745d:	imul   edi,ebp,0xfd69a31b
  437463:	pop    ss
  437464:	fwait
  437465:	imul   edi,ebp,0xfd699313
  43746b:	and    al,0xaa
  43746d:	imul   edi,ebp,0xfd69a220
  437473:	pop    ss
  437474:	fwait
  437475:	imul   edi,ebp,0xfd699313
  43747b:	test   DWORD PTR [edx-0x75440297],edx
  437481:	imul   edi,ebp,0xfd69854e
  437487:	test   al,0x85
  437489:	imul   edi,ebp,0xfd69b425
  43748f:	ja     0x437445
  437491:	imul   edi,ebp,0xfd69a4d9
  437497:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  437499:	imul   edi,ebp,0xfd69a8f3
  43749f:	out    dx,eax
  4374a0:	mov    al,ds:0x98ebfd69
  4374a5:	imul   edi,ebp,0xfd6990e7
  4374ab:	jecxz  0x437455
  4374ad:	imul   edi,ebp,0xfd69a0df
  4374b3:	fistp  DWORD PTR [eax-0x6f280297]
  4374b9:	imul   edi,ebp,0x69ab000f
  4374bf:	std    
  4374c0:	or     esp,DWORD PTR [ebx-0x653e0297]
  4374c6:	imul   edi,ebp,0xfd6990c7
  4374cc:	mov    edi,0xbbfd69a8
  4374d1:	mov    al,ds:0x98b7fd69
  4374d6:	add    ah,bh
  4374d8:	add    ecx,DWORD PTR [ecx+0xd]
  4374db:	out    0x3,eax
  4374dd:	test   DWORD PTR [edi+eiz*8],0xe70d4103
  4374e4:	add    edi,DWORD PTR [eax-0xb]
  4374e7:	out    0x3,al
  4374e9:	scas   eax,DWORD PTR es:[edi]
  4374ea:	hlt    
  4374eb:	out    0x3,al
  4374ed:	std    
  4374ee:	or     al,0xe7
  4374f0:	add    esi,DWORD PTR [ecx]
  4374f2:	or     eax,0xf27903e7
  4374f7:	out    0x3,al
  4374f9:	jmp    0x4374ed
  4374fb:	out    0x3,al
  4374fd:	or     eax,0x2103e70d
  437502:	or     eax,0xd1503e7
  437507:	out    0x3,eax
  437509:	sbb    DWORD PTR ds:0xd1d03e7,ecx
  43750f:	out    0x3,eax
  437511:	xchg   ecx,eax
  437512:	or     eax,0xf23503e7
  437517:	out    0x3,al
  437519:	fdivrp st(1),st
  43751b:	out    0x3,al
  43751d:	fcomi  st,st(1)
  43751f:	out    0x3,al
  437521:	add    ah,dh
  437523:	icebp  
  437524:	out    0x3,al
  437526:	inc    ebp
  437527:	or     eax,0xd4903e7
  43752c:	out    0x3,eax
  43752e:	pop    ss
  43752f:	or     esp,edi
  437531:	add    esi,DWORD PTR [ecx+0xd]
  437534:	out    0x3,eax
  437536:	gs or  eax,0xd6903e7
  43753c:	out    0x3,eax
  43753e:	dec    ebp
  43753f:	or     eax,0xd6103e7
  437544:	out    0x3,eax
  437546:	dec    DWORD PTR [edx]
  437548:	out    0x3,eax
  43754a:	pop    ecx
  43754b:	or     eax,0xa3703e7
  437550:	add    cl,ch
  437552:	sahf   
  437553:	es or  ebp,ecx
  437556:	sahf   
  437557:	sbb    cl,BYTE PTR [ebx]
  437559:	jmp    0xe94cfdfc
  43755e:	sahf   
  43755f:	and    cl,BYTE PTR [ebx]
  437561:	jmp    0xe94e6c04
  437566:	sahf   
  437567:	cli    
  437568:	or     ch,cl
  43756a:	sahf   
  43756b:	out    dx,al
  43756c:	or     ch,cl
  43756e:	sahf   
  43756f:	repnz or ch,cl
  437572:	sahf   
  437573:	push   es
  437574:	or     ebp,ecx
  437576:	sahf   
  437577:	or     cl,BYTE PTR [ebx]
  437579:	jmp    0xe94e741c
  43757e:	sahf   
  43757f:	test   DWORD PTR [ecx+ebp*8],edx
  437582:	sahf   
  437583:	push   esi
  437584:	or     al,0xe9
  437586:	add    BYTE PTR [esi-0x6116f3a6],bl
  43758c:	dec    esi
  43758d:	or     al,0xe9
  43758f:	sahf   
  437590:	push   edx
  437591:	or     al,0xe9
  437593:	sahf   
  437594:	data16 or al,0xe9
  437597:	sahf   
  437598:	push   0xc
  43759a:	jmp    0xe94fd43d
  43759f:	sahf   
  4375a0:	sub    cl,BYTE PTR [edx]
  4375a2:	jmp    0xe94d9445
  4375a7:	sahf   
  4375a8:	and    cl,BYTE PTR [edx]
  4375aa:	jmp    0xe94d6c4d
  4375af:	sahf   
  4375b0:	sbb    al,0x9
  4375b2:	jmp    0xe94c8655
  4375b7:	sahf   
  4375b8:	adc    al,0x9
  4375ba:	jmp    0xe94c9e5d
  4375bf:	sahf   
  4375c0:	inc    edx
  4375c1:	or     al,0xe9
  4375c3:	sahf   
  4375c4:	xchg   esi,eax
  4375c5:	or     al,0xe9
  4375c7:	sahf   
  4375c8:	call   0xcb4:0x5b4000c
  4375cf:	test   BYTE PTR ds:0x5840cb0,al
  4375d5:	lods   al,BYTE PTR ds:[esi]
  4375d6:	or     al,0x74
  4375d8:	add    eax,0x5740ca8
  4375dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375de:	or     al,0x84
  4375e0:	add    eax,0x5840cb0
  4375e5:	lods   al,BYTE PTR ds:[esi]
  4375e6:	or     al,0x74
  4375e8:	add    eax,0x74000ca8
  4375ed:	add    eax,0x5440ca4
  4375f2:	mov    al,ds:0x9c05440c
  4375f7:	or     al,0x34
  4375f9:	add    eax,0x5340eee
  4375fe:	jmp    0x4415:0xbc05440e
  437605:	add    eax,0x5340ee2
  43760a:	rcl    DWORD PTR ds:0xeda0534,cl
  437610:	add    al,0x5
  437612:	(bad)  
  437613:	push   cs
  437614:	add    al,0x5
  437616:	ror    BYTE PTR [esi],cl
  437618:	hlt    
  437619:	add    al,0xce
  43761b:	push   cs
  43761c:	hlt    
  43761d:	add    al,0xca
  43761f:	push   cs
  437620:	add    al,0x5
  437622:	pusha  
  437623:	or     al,0x4
  437625:	add    eax,0x4f40c5c
  43762a:	pop    eax
  43762b:	or     al,0xf4
  43762d:	add    al,0x54
  43762f:	or     al,0xc4
  437631:	add    al,0x50
  437633:	or     al,0xc4
  437635:	add    al,0x4c
  437637:	or     al,0xb4
  437639:	add    al,0x48
  43763b:	or     al,0xb4
  43763d:	add    al,0x44
  43763f:	or     al,0xc4
  437641:	add    al,0x40
  437643:	or     al,0x9d
  437645:	imul   edi,ebp,0x3b
  437648:	cdq    
  437649:	imul   edi,ebp,0x37
  43764c:	xchg   ecx,eax
  43764d:	imul   edi,ebp,0x33
  437650:	add    BYTE PTR [ecx-0x5ed00297],ch
  437656:	imul   edi,ebp,0xfd69992b
  43765c:	daa    
  43765d:	xchg   ecx,eax
  43765e:	imul   edi,ebp,0xfd69a923
  437664:	pop    ds
  437665:	mov    eax,ds:0x991bfd69
  43766a:	imul   edi,ebp,0xfd699117
  437670:	adc    ebp,DWORD PTR [ecx-0x5ef00297]
  437676:	imul   edi,ebp,0xfd69990b
  43767c:	pop    es
  43767d:	xchg   ecx,eax
  43767e:	imul   edi,ebp,0xfd69a903
  437684:	jmp    DWORD PTR [ecx-0x69040297]
  43768a:	imul   edi,ebp,0xfd6996f7
  437690:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437692:	imul   edi,ebp,0xfd69a6ef
  437698:	jmp    0x437630
  43769a:	imul   edi,ebp,0xfd6996e7
  4376a0:	jecxz  0x437648
  4376a2:	imul   edi,ebp,0xfd69a6df
  4376a8:	fist   DWORD PTR [esi-0x69280297]
  4376ae:	imul   edi,ebp,0xfd69a6d3
  4376b4:	iret   
  4376b5:	add    BYTE PTR [esi-0x69340297],ah
  4376bb:	imul   edi,ebp,0xe70296c7
  4376c1:	add    esp,ecx
  4376c3:	or     esp,edi
  4376c5:	add    ebx,ebp
  4376c7:	or     esp,edi
  4376c9:	add    ebp,ecx
  4376cb:	or     esp,edi
  4376cd:	add    esp,ebp
  4376cf:	or     esp,edi
  4376d1:	add    edx,DWORD PTR [ecx+0xb]
  4376d4:	out    0x3,eax
  4376d6:	pop    edx
  4376d7:	or     esp,edi
  4376d9:	add    ebx,DWORD PTR [esi+0xb]
  4376dc:	out    0x3,eax
  4376de:	xor    eax,0x4103e70b
  4376e3:	or     esp,edi
  4376e5:	add    edi,DWORD PTR ds:0x1703e70b
  4376eb:	repnz out 0x3,al
  4376ee:	mov    ?,ecx
  4376f0:	out    0x3,al
  4376f2:	cmp    ecx,esi
  4376f4:	out    0x3,al
  4376f6:	sub    eax,0x1903e70b
  4376fb:	or     esp,edi
  4376fd:	add    edx,DWORD PTR ds:0x1103e70b
  437703:	or     esp,edi
  437705:	add    ebx,DWORD PTR ds:0xa903e70b
  43770b:	or     esp,edi
  43770d:	add    edi,DWORD PTR [edi]
  43770f:	add    eax,0x4fb03e7
  437714:	out    0x3,eax
  437716:	lea    ecx,[ebx]
  437718:	out    0x3,eax
  43771a:	add    BYTE PTR [ecx+0xb],bh
  43771d:	out    0x3,eax
  43771f:	jne    0x43772c
  437721:	out    0x3,eax
  437723:	or     DWORD PTR [ebx],0xb2d03e7
  437729:	out    0x3,eax
  43772b:	cmp    DWORD PTR [ebx],ecx
  43772d:	out    0x3,eax
  43772f:	sbb    al,BYTE PTR [esi]
  437731:	out    0x3,eax
  437733:	push   ds
  437734:	push   es
  437735:	out    0x3,eax
  437737:	push   edx
  437738:	push   es
  437739:	add    cl,ch
  43773b:	sahf   
  43773c:	fisttp DWORD PTR [ebx]
  43773e:	jmp    0xe948f1e1
  437743:	sahf   
  437744:	outs   dx,BYTE PTR ds:[esi]
  437745:	add    eax,0x5729ee9
  43774a:	jmp    0xe948fded
  43774f:	sahf   
  437750:	mov    al,BYTE PTR ds:0x57e9ee9
  437756:	jmp    0xe948f9f9
  43775b:	sahf   
  43775c:	(bad)  
  43775d:	add    al,0xe9
  43775f:	sahf   
  437760:	fiadd  DWORD PTR [ecx+ebp*8]
  437763:	sahf   
  437764:	into   
  437765:	add    al,0xe9
  437767:	sahf   
  437768:	and    al,BYTE PTR ds:0x4f69ee9
  43776e:	jmp    0xe9487211
  437773:	sahf   
  437774:	out    dx,al
  437775:	add    al,0xe9
  437777:	sahf   
  437778:	repnz add al,0xe9
  43777b:	sahf   
  43777c:	push   es
  43777d:	add    eax,0xa9e00e9
  437782:	add    eax,0x4fe9ee9
  437787:	jmp    0xe9487a2a
  43778c:	sahf   
  43778d:	push   esi
  43778e:	push   es
  43778f:	jmp    0xe949d232
  437794:	sahf   
  437795:	dec    esi
  437796:	push   es
  437797:	jmp    0xe949ca3a
  43779c:	sahf   
  43779d:	pushw  es
  43779f:	jmp    0xe949e242
  4377a4:	sahf   
  4377a5:	pop    esi
  4377a6:	push   es
  4377a7:	jmp    0xe949ca4a
  4377ac:	sahf   
  4377ad:	pushw  es
  4377af:	jmp    0x49e252
  4377b4:	les    eax,FWORD PTR [ecx]
  4377b6:	aam    0xa
  4377b8:	les    eax,FWORD PTR [ecx]
  4377ba:	inc    ebx
  4377bb:	or     esi,DWORD PTR [ecx+eax*1+0x1b40acc]
  4377c2:	cs or  eax,0xd2a01c4
  4377c8:	les    eax,FWORD PTR [ecx]
  4377ca:	ror    BYTE PTR [edx],1
  4377cc:	mov    ah,0x1
  4377ce:	int3   
  4377cf:	or     dh,BYTE PTR [ecx+eax*1+0x1840ac8]
  4377d6:	mov    ah,0xa
  4377d8:	test   BYTE PTR [ecx],al
  4377da:	and    ecx,DWORD PTR [ebx]
  4377dc:	je     0x4377df
  4377de:	lods   al,BYTE PTR ds:[esi]
  4377df:	or     dh,BYTE PTR [ecx+eax*1+0x68]
  4377e3:	adc    DWORD PTR [eax],eax
  4377e5:	test   BYTE PTR [ecx],al
  4377e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4377e8:	or     al,BYTE PTR [ecx+eax*1+0x1740aa0]
  4377ef:	pushf  
  4377f0:	or     dh,BYTE PTR [ecx+eax*1-0x68]
  4377f4:	or     al,BYTE PTR [ecx+eax*1-0x6c]
  4377f8:	or     al,BYTE PTR [ecx+eax*1-0x70]
  4377fc:	or     dh,BYTE PTR [ecx+eax*1]
  4377ff:	mov    WORD PTR [edx],cs
  437801:	xor    al,0x1
  437803:	mov    BYTE PTR [edx],cl
  437805:	inc    esp
  437806:	add    DWORD PTR [edx+ecx*1+0xa800144],eax
  43780d:	xor    al,0x1
  43780f:	mov    WORD PTR [edx],cs
  437811:	xor    al,0x1
  437813:	in     al,dx
  437814:	push   cs
  437815:	add    al,0x1
  437817:	je     0x437823
  437819:	add    al,0x1
  43781b:	jo     0x437827
  43781d:	hlt    
  43781e:	add    BYTE PTR [edx+ecx*1-0xc],ch
  437822:	add    BYTE PTR [eax+0xa],ch
  437825:	add    al,0x1
  437827:	or     al,BYTE PTR fs:[ecx+eax*1]
  43782b:	pusha  
  43782c:	or     bl,BYTE PTR [ebp-0x68a40295]
  437832:	imul   edi,ebp,0x57
  437835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437836:	imul   edi,ebp,0x53
  437839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43783a:	imul   edi,ebp,0x4f
  43783d:	xchg   edi,eax
  43783e:	imul   edi,ebp,0x4b
  437841:	xchg   edi,eax
  437842:	imul   edi,ebp,0x47
  437845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437846:	imul   edi,ebp,0xffffffd6
  437849:	add    BYTE PTR [ebx-0x68b00295],ah
  43784f:	imul   edi,ebp,0x4b
  437852:	xchg   edi,eax
  437853:	imul   edi,ebp,0x47
  437856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437857:	imul   edi,ebp,0xfd69a743
  43785d:	aas    
  43785e:	xchg   edi,eax
  43785f:	imul   edi,ebp,0xfd69973b
  437865:	aaa    
  437866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437867:	imul   edi,ebp,0xfd69a733
  43786d:	pop    ds
  43786e:	xchg   edi,eax
  43786f:	imul   edi,ebp,0xfd69971b
  437875:	pop    ss
  437876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437877:	imul   edi,ebp,0xfd69a713
  43787d:	seta   BYTE PTR [ecx-0x3]
  437881:	or     edx,DWORD PTR [edi-0x59590297]
  437887:	imul   edi,ebp,0xfd69a703
  43788d:	call   DWORD PTR [edi-0x6b040297]
  437893:	imul   edi,ebp,0xfd69a4f7
  437899:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43789b:	imul   edi,ebp,0xfd6994ef
  4378a1:	jmp    0x437837
  4378a3:	imul   edi,ebp,0xe702a4e7
  4378a9:	add    edi,ecx
  4378ab:	or     edi,esp
  4378ad:	add    eax,DWORD PTR [eax]
  4378af:	std    
  4378b0:	or     edi,esp
  4378b2:	add    eax,ecx
  4378b4:	or     edi,esp
  4378b6:	add    esi,ebp
  4378b8:	or     edi,esp
  4378ba:	add    ebp,ecx
  4378bc:	or     edi,esp
  4378be:	add    ebp,ebp
  4378c0:	or     edi,esp
  4378c2:	add    edx,ecx
  4378c4:	or     edi,esp
  4378c6:	add    eax,DWORD PTR [edx+0x7]
  4378c9:	out    0x3,eax
  4378cb:	(bad)  [ecx]
  4378cd:	out    0x3,eax
  4378cf:	fisttp QWORD PTR [ecx]
  4378d1:	out    0x3,eax
  4378d3:	loope  0x4378de
  4378d5:	out    0x3,eax
  4378d7:	push   ebp
  4378d8:	or     edi,esp
  4378da:	add    ecx,DWORD PTR [ecx+0x9]
  4378dd:	out    0x3,eax
  4378df:	dec    ebp
  4378e0:	or     edi,esp
  4378e2:	add    esi,DWORD PTR [ecx]
  4378e4:	or     edi,esp
  4378e6:	add    eax,DWORD PTR [ebp+0x9]
  4378e9:	out    0x3,eax
  4378eb:	cmp    DWORD PTR [ecx],ecx
  4378ed:	out    0x3,eax
  4378ef:	imul   eax,DWORD PTR [edi],0x90103e7
  4378f5:	out    0x3,eax
  4378f7:	xor    eax,0x2903e709
  4378fc:	or     edi,esp
  4378fe:	add    ebp,DWORD PTR ds:0x1103e709
  437904:	or     edi,esp
  437906:	add    esp,DWORD PTR ds:0x1903e709
  43790c:	or     edi,esp
  43790e:	add    ebx,DWORD PTR ds:0x3e709
  437914:	mov    eax,ds:0x9503e709
  437919:	or     edi,esp
  43791b:	add    ecx,DWORD PTR [ecx-0x72fc18f7]
  437921:	or     DWORD PTR [eax],eax
  437923:	jmp    0xe94a5fc6
  437928:	sahf   
  437929:	jmp    0xe905:0x449ee906
  437930:	sahf   
  437931:	loop   0x437939
  437933:	jmp    0xe94a2fd6
  437938:	sahf   
  437939:	mov    edx,0xae9ee906
  43793e:	push   es
  43793f:	jmp    0xe94a2be2
  437944:	sahf   
  437945:	mov    BYTE PTR [esi],0xe9
  437948:	sahf   
  437949:	retf   0xe906
  43794c:	sahf   
  43794d:	mov    esi,0xc29ee906
  437952:	push   es
  437953:	jmp    0xe94a8ff6
  437958:	sahf   
  437959:	or     al,BYTE PTR [edi]
  43795b:	jmp    0xe94a8ffe
  437960:	sahf   
  437961:	ins    BYTE PTR es:[edi],dx
  437962:	add    eax,0x5789ee9
  437967:	jmp    0xe948ee0a
  43796c:	sahf   
  43796d:	add    BYTE PTR ds:0x7199ee9,0xe9
  437974:	sahf   
  437975:	mov    BYTE PTR ds:0x849e00e9,al
  43797b:	add    eax,0x4d09ee9
  437980:	jmp    0xe94aa323
  437985:	sahf   
  437986:	and    eax,0xd49ee907
  43798b:	add    al,0xe9
  43798d:	sahf   
  43798e:	in     eax,dx
  43798f:	push   es
  437990:	jmp    0xe9485633
  437995:	sahf   
  437996:	call   0xe4e2629f
  43799b:	add    al,0x0
  43799d:	add    al,0x6
  43799f:	pop    edx
  4379a0:	or     esi,esp
  4379a2:	add    eax,0x5f408f0
  4379a7:	in     al,dx
  4379a8:	or     BYTE PTR [esi+eax*1],al
  4379ab:	call   0x4a497db8
  4379b0:	or     esi,esp
  4379b2:	add    eax,0x5f408f1
  4379b7:	in     eax,dx
  4379b8:	or     ah,al
  4379ba:	add    eax,0x5c408e9
  4379bf:	in     eax,0x8
  4379c1:	mov    ah,0x5
  4379c3:	loope  0x4379cd
  4379c5:	mov    ah,0x5
  4379c7:	fisttp QWORD PTR [eax]
  4379c9:	les    eax,FWORD PTR ds:0x5c40b2e
  4379cf:	sub    cl,BYTE PTR [ebx]
  4379d1:	mov    ah,0x5
  4379d3:	ror    DWORD PTR [eax],1
  4379d5:	mov    ah,0x5
  4379d7:	int    0x8
  4379d9:	test   BYTE PTR ds:0x840008c9,al
  4379df:	add    eax,0x57408c5
  4379e4:	push   ss
  4379e5:	or     esi,DWORD PTR [ebp+eax*1+0x12]
  4379e9:	or     eax,DWORD PTR [ebp+eax*1+0x5840b0e]
  4379f0:	or     cl,BYTE PTR [ebx]
  4379f2:	je     0x4379f9
  4379f4:	mov    cl,0x8
  4379f6:	je     0x4379fd
  4379f8:	lods   eax,DWORD PTR ds:[esi]
  4379f9:	or     BYTE PTR [ebp+eax*1-0x57],al
  4379fd:	or     BYTE PTR [ebp+eax*1-0x5b],al
  437a01:	or     BYTE PTR [eax*1+0x53408a1],dh
  437a08:	popf   
  437a09:	or     BYTE PTR [ebp+eax*1-0x12],al
  437a0d:	or     al,BYTE PTR [ebp+eax*1-0x6b]
  437a11:	or     BYTE PTR [eax*1+0x5b9d0891],dh
  437a18:	std    
  437a19:	xchg   edx,eax
  437a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437a1b:	pop    ebx
  437a1c:	std    
  437a1d:	mov    fs,WORD PTR [ebp-0x6a7502a5]
  437a23:	pop    ebx
  437a24:	std    
  437a25:	xchg   BYTE PTR [ebp-0x5a7d02a5],dl
  437a2b:	pop    ebx
  437a2c:	std    
  437a2d:	jle    0x4379d4
  437a2f:	pop    ebx
  437a30:	std    
  437a31:	jp     0x4379c8
  437a33:	pop    ebx
  437a34:	std    
  437a35:	jbe    0x4379cc
  437a37:	pop    ebx
  437a38:	std    
  437a39:	jb     0x4379e0
  437a3b:	pop    ebx
  437a3c:	std    
  437a3d:	shl    DWORD PTR [edi+0xbdfd5b],0x97
  437a44:	pop    ebx
  437a45:	std    
  437a46:	mov    ecx,0xb5fd5b97
  437a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a4c:	pop    ebx
  437a4d:	std    
  437a4e:	mov    cl,0xa7
  437a50:	pop    ebx
  437a51:	std    
  437a52:	lods   eax,DWORD PTR ds:[esi]
  437a53:	xchg   edi,eax
  437a54:	pop    ebx
  437a55:	std    
  437a56:	test   eax,0xa5fd5b97
  437a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a5c:	pop    ecx
  437a5d:	std    
  437a5e:	mov    eax,ds:0x9dfd59a7
  437a63:	xchg   edi,eax
  437a64:	pop    ecx
  437a65:	std    
  437a66:	cdq    
  437a67:	xchg   edi,eax
  437a68:	pop    ecx
  437a69:	std    
  437a6a:	xchg   ebp,eax
  437a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a6c:	pop    ecx
  437a6d:	std    
  437a6e:	xchg   ecx,eax
  437a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a70:	pop    ecx
  437a71:	std    
  437a72:	lea    edx,[edi-0x687602a7]
  437a78:	pop    ecx
  437a79:	std    
  437a7a:	test   DWORD PTR [edi-0x587e02a7],esp
  437a80:	pop    ecx
  437a81:	std    
  437a82:	jge    0x437a1b
  437a84:	pop    ecx
  437a85:	std    
  437a86:	jns    0x437a1f
  437a88:	pop    ecx
  437a89:	std    
  437a8a:	jne    0x437a33
  437a8c:	pop    ecx
  437a8d:	std    
  437a8e:	jno    0x437a37
  437a90:	add    ah,bh
  437a92:	add    edi,DWORD PTR [ebx-0x48fc1904]
  437a98:	cld    
  437a99:	out    0x3,al
  437a9b:	cmp    esp,0xffffffe6
  437a9e:	add    edi,DWORD PTR [edi-0x4]
  437aa1:	out    0x3,al
  437aa3:	imul   edi,esp,0xffffffe6
  437aa6:	add    eax,DWORD PTR [eax]
  437aa8:	addr16 cld 
  437aaa:	out    0x3,al
  437aac:	push   ebx
  437aad:	cld    
  437aae:	out    0x3,al
  437ab0:	dec    edi
  437ab1:	cld    
  437ab2:	out    0x3,al
  437ab4:	pop    ebx
  437ab5:	cld    
  437ab6:	out    0x3,al
  437ab8:	push   edi
  437ab9:	cld    
  437aba:	out    0x3,al
  437abc:	arpl   sp,di
  437abe:	out    0x3,al
  437ac0:	pop    edi
  437ac1:	cld    
  437ac2:	out    0x3,al
  437ac4:	mov    edi,esp
  437ac6:	out    0x3,al
  437ac8:	xchg   esp,edi
  437aca:	out    0x3,al
  437acc:	jae    0x437aca
  437ace:	out    0x3,al
  437ad0:	outs   dx,DWORD PTR ds:[esi]
  437ad1:	cld    
  437ad2:	out    0x3,al
  437ad4:	jnp    0x437ad2
  437ad6:	out    0x3,al
  437ad8:	ja     0x437ad6
  437ada:	out    0x3,al
  437adc:	ret    
  437add:	cld    
  437ade:	out    0x3,al
  437ae0:	mov    edi,0xab03e6fc
  437ae5:	cld    
  437ae6:	out    0x3,al
  437ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ae9:	cld    
  437aea:	out    0x3,al
  437aec:	xchg   ebx,eax
  437aed:	cld    
  437aee:	out    0x3,al
  437af0:	(bad)  
  437af1:	cld    
  437af2:	out    0x3,al
  437af4:	fwait
  437af5:	cld    
  437af6:	out    0x3,al
  437af8:	xchg   edi,eax
  437af9:	cld    
  437afa:	out    0x3,al
  437afc:	mov    ds:0x9f03e6fc,eax
  437b01:	cld    
  437b02:	out    0x3,al
  437b04:	dec    ebx
  437b05:	stc    
  437b06:	out    0x3,al
  437b08:	inc    edi
  437b09:	stc    
  437b0a:	(bad)  
  437b0b:	call   0x79c1910
  437b10:	jmp    0xe94acfb3
  437b15:	sahf   
  437b16:	pusha  
  437b17:	pop    es
  437b18:	jmp    0xe94ad7bb
  437b1d:	sahf   
  437b1e:	push   0x649ee907
  437b23:	pop    es
  437b24:	jmp    0xe94aabc7
  437b29:	sahf   
  437b2a:	sub    al,0x7
  437b2c:	jmp    0xe94ab3cf
  437b31:	sahf   
  437b32:	xor    al,0x7
  437b34:	jmp    0xe94abbd7
  437b39:	sahf   
  437b3a:	cmp    al,0x7
  437b3c:	jmp    0xe94ac3df
  437b41:	sahf   
  437b42:	inc    esp
  437b43:	pop    es
  437b44:	jmp    0xe94b0be7
  437b49:	sahf   
  437b4a:	mov    WORD PTR [edi],es
  437b4c:	jmp    0xe94b13ef
  437b51:	sahf   
  437b52:	xchg   esp,eax
  437b53:	pop    es
  437b54:	jmp    0xe94b1bf7
  437b59:	sahf   
  437b5a:	pushf  
  437b5b:	pop    es
  437b5c:	jmp    0xe94b1fff
  437b61:	sahf   
  437b62:	mov    al,ds:0x6c9ee907
  437b67:	pop    es
  437b68:	jmp    0xe94ae40b
  437b6d:	sahf   
  437b6e:	je     0x437b77
  437b70:	jmp    0x7b41975
  437b75:	jmp    0xe94af818
  437b7a:	sahf   
  437b7b:	js     0x437b84
  437b7d:	jmp    0xe94b0020
  437b82:	sahf   
  437b83:	add    BYTE PTR [edi],0x0
  437b86:	xor    al,0x2
  437b88:	jp     0x437b93
  437b8a:	xor    al,0x2
  437b8c:	jbe    0x437b97
  437b8e:	inc    esp
  437b8f:	add    dh,BYTE PTR [edx+0x9]
  437b92:	inc    esp
  437b93:	add    ch,BYTE PTR [esi+0x9]
  437b96:	xor    al,0x2
  437b98:	push   0x9
  437b9a:	xor    al,0x2
  437b9c:	or     WORD PTR [edx+eax*1],ax
  437ba0:	bound  ecx,QWORD PTR [ecx]
  437ba2:	add    al,0x2
  437ba4:	pop    esi
  437ba5:	or     esp,esi
  437ba7:	add    DWORD PTR [edx+0x9],ebx
  437baa:	hlt    
  437bab:	add    DWORD PTR [esi+0x9],edx
  437bae:	add    al,0x2
  437bb0:	push   edx
  437bb1:	or     DWORD PTR [edx+eax*1],eax
  437bb4:	dec    esi
  437bb5:	or     esp,esi
  437bb7:	add    DWORD PTR [edx+0x9],ecx
  437bba:	hlt    
  437bbb:	add    DWORD PTR [esi+0x9],eax
  437bbe:	les    eax,FWORD PTR [ecx]
  437bc0:	inc    edx
  437bc1:	or     esp,eax
  437bc3:	add    DWORD PTR [esi],edi
  437bc5:	or     DWORD PTR [ecx+eax*1+0x1b4093a],esi
  437bcc:	ss or  esp,eax
  437bcf:	add    DWORD PTR [edx],esi
  437bd1:	or     esp,eax
  437bd3:	add    DWORD PTR [esi],ebp
  437bd5:	or     DWORD PTR [eax],eax
  437bd7:	mov    ah,0x1
  437bd9:	sub    cl,BYTE PTR [ecx]
  437bdb:	mov    ah,0x1
  437bdd:	or     DWORD PTR es:[ecx+eax*1+0x1840922],eax
  437be5:	push   ds
  437be6:	or     DWORD PTR [ecx+eax*1+0x1a],esi
  437bea:	or     DWORD PTR [ecx+eax*1+0x16],esi
  437bee:	or     DWORD PTR [ecx+eax*1+0x1840912],eax
  437bf5:	push   cs
  437bf6:	or     DWORD PTR [ecx+eax*1+0xa],esi
  437bfa:	or     DWORD PTR [ecx+eax*1+0x6],esi
  437bfe:	or     DWORD PTR [ebp-0x5bfa02a5],ebx
  437c04:	pop    ebx
  437c05:	std    
  437c06:	add    DWORD PTR [ebx+ebx*2+0x5b95fdfd],edx
  437c0d:	std    
  437c0e:	stc    
  437c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c10:	pop    ebx
  437c11:	std    
  437c12:	cmc    
  437c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c14:	pop    ebx
  437c15:	std    
  437c16:	icebp  
  437c17:	xchg   ebp,eax
  437c18:	pop    ebx
  437c19:	std    
  437c1a:	in     eax,dx
  437c1b:	xchg   ebp,eax
  437c1c:	pop    ebx
  437c1d:	std    
  437c1e:	jmp    0xe640d7c8
  437c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c24:	pop    ebx
  437c25:	std    
  437c26:	loope  0x437bbd
  437c28:	pop    ebx
  437c29:	std    
  437c2a:	fst    QWORD PTR [ebp-0x5a2602a5]
  437c30:	pop    ebx
  437c31:	std    
  437c32:	aad    0xa5
  437c34:	pop    ebx
  437c35:	std    
  437c36:	rcl    DWORD PTR [ebp+0xcdfd5b],1
  437c3c:	xchg   ebp,eax
  437c3d:	pop    ebx
  437c3e:	std    
  437c3f:	leave  
  437c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c41:	pop    ebx
  437c42:	std    
  437c43:	lds    esp,FWORD PTR [ebp-0x6a3e02a5]
  437c49:	pop    ebx
  437c4a:	std    
  437c4b:	mov    ebp,0xb9fd5b95
  437c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c51:	pop    ebx
  437c52:	std    
  437c53:	mov    ch,0xa5
  437c55:	pop    ebx
  437c56:	std    
  437c57:	mov    cl,0x95
  437c59:	pop    ebx
  437c5a:	std    
  437c5b:	lods   eax,DWORD PTR ds:[esi]
  437c5c:	xchg   ebp,eax
  437c5d:	pop    ebx
  437c5e:	std    
  437c5f:	test   eax,0xa5fd59a5
  437c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c65:	pop    ecx
  437c66:	std    
  437c67:	mov    eax,ds:0x9dfd5995
  437c6c:	xchg   ebp,eax
  437c6d:	pop    ecx
  437c6e:	std    
  437c6f:	cdq    
  437c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c71:	pop    ecx
  437c72:	std    
  437c73:	xchg   ebp,eax
  437c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c75:	pop    ecx
  437c76:	std    
  437c77:	xchg   ecx,eax
  437c78:	xchg   ebp,eax
  437c79:	add    ah,bh
  437c7b:	add    edx,DWORD PTR [ebx]
  437c7d:	sti    
  437c7e:	out    0x3,al
  437c80:	daa    
  437c81:	sti    
  437c82:	out    0x3,al
  437c84:	sbb    edi,ebx
  437c86:	out    0x3,al
  437c88:	pop    ds
  437c89:	sti    
  437c8a:	out    0x3,al
  437c8c:	ret    
  437c8d:	cli    
  437c8e:	out    0x3,al
  437c90:	mov    bh,0xfa
  437c92:	out    0x3,al
  437c94:	stos   DWORD PTR es:[edi],eax
  437c95:	cli    
  437c96:	out    0x3,al
  437c98:	scas   eax,DWORD PTR es:[edi]
  437c99:	cli    
  437c9a:	out    0x3,al
  437c9c:	mov    bl,0xfa
  437c9e:	out    0x3,al
  437ca0:	add    BYTE PTR [edi+0x7b03e6fa],al
  437ca6:	cli    
  437ca7:	out    0x3,al
  437ca9:	jg     0x437ca5
  437cab:	out    0x3,al
  437cad:	arpl   dx,di
  437caf:	out    0x3,al
  437cb1:	push   edi
  437cb2:	cli    
  437cb3:	out    0x3,al
  437cb5:	dec    ebx
  437cb6:	cli    
  437cb7:	out    0x3,al
  437cb9:	dec    edi
  437cba:	cli    
  437cbb:	out    0x3,al
  437cbd:	push   ebx
  437cbe:	cli    
  437cbf:	out    0x3,al
  437cc1:	addr16 cli 
  437cc3:	out    0x3,al
  437cc5:	pop    ebx
  437cc6:	cli    
  437cc7:	out    0x3,al
  437cc9:	pop    edi
  437cca:	cli    
  437ccb:	out    0x3,al
  437ccd:	cmp    edx,0xffffffe6
  437cd0:	add    esi,DWORD PTR [edi-0x6]
  437cd3:	out    0x3,al
  437cd5:	imul   edi,edx,0xffffffe6
  437cd8:	add    ebp,DWORD PTR [edi-0x6]
  437cdb:	out    0x3,al
  437cdd:	jae    0x437cd9
  437cdf:	out    0x3,al
  437ce1:	(bad)  
  437ce2:	cli    
  437ce3:	out    0x3,al
  437ce5:	mov    ebx,0xbf03e6fa
  437cea:	cli    
  437ceb:	out    0x3,al
  437ced:	mov    ds:0x9703e6fa,eax
  437cf2:	cli    
  437cf3:	(bad)  
  437cf4:	call   0xe94b7197
  437cf9:	sahf   
  437cfa:	lock pop es
  437cfc:	jmp    0xe94b799f
  437d01:	sahf   
  437d02:	sbb    DWORD PTR [ecx],eax
  437d04:	jmp    0x1691b09
  437d09:	jmp    0xe94b7dac
  437d0e:	sahf   
  437d0f:	dec    esp
  437d10:	add    ecx,ebp
  437d12:	sahf   
  437d13:	dec    eax
  437d14:	add    ecx,ebp
  437d16:	sahf   
  437d17:	push   esp
  437d18:	add    ecx,ebp
  437d1a:	sahf   
  437d1b:	push   eax
  437d1c:	add    ecx,ebp
  437d1e:	sahf   
  437d1f:	pop    esp
  437d20:	add    ecx,ebp
  437d22:	sahf   
  437d23:	pop    eax
  437d24:	add    ecx,ebp
  437d26:	sahf   
  437d27:	fs add ecx,ebp
  437d2a:	sahf   
  437d2b:	pusha  
  437d2c:	add    ecx,ebp
  437d2e:	sahf   
  437d2f:	sub    al,0x1
  437d31:	jmp    0xe944a5d4
  437d36:	sahf   
  437d37:	xor    al,0x1
  437d39:	jmp    0xe944addc
  437d3e:	sahf   
  437d3f:	cmp    al,0x1
  437d41:	jmp    0xe944b5e4
  437d46:	sahf   
  437d47:	inc    esp
  437d48:	add    ecx,ebp
  437d4a:	sahf   
  437d4b:	inc    eax
  437d4c:	add    ecx,ebp
  437d4e:	sahf   
  437d4f:	mov    WORD PTR [ecx],es
  437d51:	jmp    0xe94505f4
  437d56:	sahf   
  437d57:	xchg   esp,eax
  437d58:	add    ecx,ebp
  437d5a:	sahf   
  437d5b:	nop
  437d5c:	add    ecx,ebp
  437d5e:	sahf   
  437d5f:	pushf  
  437d60:	add    ecx,ebp
  437d62:	sahf   
  437d63:	fild   WORD PTR [edx]
  437d65:	jmp    0xe9466108
  437d6a:	add    BYTE PTR [esi+0x740002a7],bl
  437d70:	push   es
  437d71:	push   edi
  437d72:	add    eax,0x5530684
  437d77:	test   BYTE PTR [esi],al
  437d79:	dec    edi
  437d7a:	add    eax,0x54b0674
  437d7f:	je     0x437d87
  437d81:	and    al,0x5
  437d83:	inc    esp
  437d84:	push   es
  437d85:	xchg   BYTE PTR [edi],al
  437d87:	inc    esp
  437d88:	push   es
  437d89:	add    BYTE PTR [edi],0x34
  437d8c:	push   es
  437d8d:	jle    0x437d96
  437d8f:	xor    al,0x6
  437d91:	jp     0x437d9a
  437d93:	inc    esp
  437d94:	push   es
  437d95:	xor    eax,DWORD PTR ds:0x52f0644
  437d9b:	xor    al,0x6
  437d9d:	sub    eax,DWORD PTR ds:0x5270634
  437da3:	add    al,0x6
  437da5:	popw   es
  437da7:	add    al,0x6
  437da9:	bound  eax,QWORD PTR [edi]
  437dab:	hlt    
  437dac:	add    eax,0x5f4075e
  437db1:	pop    edx
  437db2:	pop    es
  437db3:	add    al,0x6
  437db5:	push   esi
  437db6:	pop    es
  437db7:	add    al,0x6
  437db9:	push   edx
  437dba:	pop    es
  437dbb:	hlt    
  437dbc:	add    eax,0x5f4074e
  437dc1:	dec    edx
  437dc2:	pop    es
  437dc3:	les    eax,FWORD PTR ds:0x5c40503
  437dc9:	inc    DWORD PTR [esp+esi*4]
  437dcc:	add    eax,0xb40004fb
  437dd1:	add    eax,0x5c4073a
  437dd6:	ss pop es
  437dd8:	les    eax,FWORD PTR ds:0x5b40732
  437dde:	cs pop es
  437de0:	mov    ah,0x5
  437de2:	sub    al,BYTE PTR [edi]
  437de4:	test   BYTE PTR ds:0x5b9d0726,al
  437dea:	std    
  437deb:	and    eax,0x21fd5ba2
  437df0:	call   0xfd5b:0xa21dfd5b
  437df7:	sbb    DWORD PTR [edx-0x5dea02a5],ebx
  437dfd:	pop    ebx
  437dfe:	std    
  437dff:	adc    DWORD PTR [edx-0x5df202a5],ebx
  437e05:	pop    ebx
  437e06:	std    
  437e07:	or     DWORD PTR [edx-0x5dfa02a5],ebx
  437e0d:	pop    ebx
  437e0e:	std    
  437e0f:	add    DWORD PTR [edx-0x5c0202a5],ebx
  437e15:	pop    ebx
  437e16:	std    
  437e17:	stc    
  437e18:	fwait
  437e19:	pop    ebx
  437e1a:	std    
  437e1b:	cmc    
  437e1c:	mov    ds:0x9bf1fd5b,eax
  437e21:	pop    ebx
  437e22:	std    
  437e23:	in     eax,dx
  437e24:	mov    ds:0x9be9fd5b,eax
  437e29:	pop    ebx
  437e2a:	std    
  437e2b:	in     eax,0xa3
  437e2d:	pop    ebx
  437e2e:	std    
  437e2f:	loope  0x437dcc
  437e31:	pop    ebx
  437e32:	std    
  437e33:	fld    QWORD PTR [eax]
  437e35:	mov    ds:0x9bd9fd5b,eax
  437e3a:	pop    ebx
  437e3b:	std    
  437e3c:	aad    0xa3
  437e3e:	pop    ebx
  437e3f:	std    
  437e40:	rcr    DWORD PTR [ebx-0x5c3202a5],1
  437e46:	pop    ebx
  437e47:	std    
  437e48:	test   BYTE PTR [ecx-0x5e7f02a5],bl
  437e4e:	pop    ebx
  437e4f:	std    
  437e50:	jl     0x437deb
  437e52:	pop    ebx
  437e53:	std    
  437e54:	mov    ebp,0xb9fd5ba3
  437e59:	fwait
  437e5a:	pop    ebx
  437e5b:	std    
  437e5c:	mov    ch,0xa3
  437e5e:	pop    ebx
  437e5f:	std    
  437e60:	mov    cl,0x9b
  437e62:	add    ah,bh
  437e64:	add    ecx,DWORD PTR [ebx+0x1]
  437e67:	out    0x3,eax
  437e69:	inc    edi
  437e6a:	add    edi,esp
  437e6c:	add    eax,DWORD PTR [ebx+0x1]
  437e6f:	out    0x3,eax
  437e71:	aas    
  437e72:	add    edi,esp
  437e74:	add    ebx,DWORD PTR [ebx]
  437e76:	add    edi,esp
  437e78:	add    edx,DWORD PTR [edi]
  437e7a:	add    edi,esp
  437e7c:	add    edx,DWORD PTR [ebx]
  437e7e:	add    edi,esp
  437e80:	add    ecx,DWORD PTR [edi]
  437e82:	add    edi,esp
  437e84:	add    ebp,DWORD PTR [ebx]
  437e86:	add    edi,esp
  437e88:	add    esp,DWORD PTR [edi]
  437e8a:	add    edi,esp
  437e8c:	add    esp,DWORD PTR [ebx]
  437e8e:	add    edi,esp
  437e90:	add    ebx,DWORD PTR [edi]
  437e92:	add    edi,esp
  437e94:	add    edi,DWORD PTR [ebx+0x3e700]
  437e9a:	mov    bh,0x0
  437e9c:	out    0x3,eax
  437e9e:	mov    bl,0x0
  437ea0:	out    0x3,eax
  437ea2:	scas   eax,DWORD PTR es:[edi]
  437ea3:	add    bh,ah
  437ea5:	add    ecx,DWORD PTR [ebx-0x78fc1900]
  437eab:	add    bh,ah
  437ead:	add    eax,DWORD PTR [ebx+0x7f03e700]
  437eb3:	add    bh,ah
  437eb5:	add    ebx,DWORD PTR [ebx+0x0]
  437eb8:	out    0x3,eax
  437eba:	push   edi
  437ebb:	add    bh,ah
  437ebd:	add    edx,DWORD PTR [ebx+0x0]
  437ec0:	out    0x3,eax
  437ec2:	dec    edi
  437ec3:	add    bh,ah
  437ec5:	add    ebp,DWORD PTR [ebx+0x0]
  437ec8:	out    0x3,eax
  437eca:	cwde   
  437ecb:	(bad)  
  437ecc:	out    0x3,al
  437ece:	pushf  
  437ecf:	(bad)  
  437ed0:	out    0x3,al
  437ed2:	rol    BYTE PTR [ebx],0xe7
  437ed5:	add    esi,DWORD PTR [ebx+eax*1+0x7703e7]
  437edc:	add    cl,ch
  437ede:	sahf   
  437edf:	adc    BYTE PTR [edx],al
  437ee1:	jmp    0xe9459384
  437ee6:	sahf   
  437ee7:	sbb    BYTE PTR [edx],al
  437ee9:	jmp    0xe9459b8c
  437eee:	sahf   
  437eef:	and    BYTE PTR [edx],al
  437ef1:	jmp    0xe945a394
  437ef6:	sahf   
  437ef7:	call   0xece267fd
  437efc:	add    ecx,ebp
  437efe:	add    BYTE PTR [esi-0x6116fe10],bl
  437f04:	hlt    
  437f05:	add    ecx,ebp
  437f07:	sahf   
  437f08:	clc    
  437f09:	add    ecx,ebp
  437f0b:	sahf   
  437f0c:	cld    
  437f0d:	add    ecx,ebp
  437f0f:	sahf   
  437f10:	add    BYTE PTR [edx],al
  437f12:	jmp    0xe94583b5
  437f17:	sahf   
  437f18:	dec    eax
  437f19:	add    ebp,ecx
  437f1b:	sahf   
  437f1c:	dec    esp
  437f1d:	add    ebp,ecx
  437f1f:	sahf   
  437f20:	push   eax
  437f21:	add    ebp,ecx
  437f23:	sahf   
  437f24:	push   esp
  437f25:	add    ebp,ecx
  437f27:	sahf   
  437f28:	pop    eax
  437f29:	add    ebp,ecx
  437f2b:	sahf   
  437f2c:	pop    esp
  437f2d:	add    ebp,ecx
  437f2f:	sahf   
  437f30:	pusha  
  437f31:	add    ebp,ecx
  437f33:	sahf   
  437f34:	fs add ebp,ecx
  437f37:	sahf   
  437f38:	sub    BYTE PTR [ebx],al
  437f3a:	jmp    0xe946abdd
  437f3f:	sahf   
  437f40:	xor    BYTE PTR [ebx],al
  437f42:	jmp    0xe946b3e5
  437f47:	sahf   
  437f48:	cmp    BYTE PTR [ebx],al
  437f4a:	jmp    0xe946bbed
  437f4f:	sahf   
  437f50:	inc    eax
  437f51:	add    ebp,ecx
  437f53:	sahf   
  437f54:	inc    esp
  437f55:	add    eax,DWORD PTR [eax]
  437f57:	les    eax,FWORD PTR [edx]
  437f59:	mov    edx,0xb602c405
  437f5e:	add    eax,0x5b202b4
  437f63:	add    BYTE PTR [edx+eax*1+0x28405ae],dh
  437f6a:	stos   BYTE PTR es:[edi],al
  437f6b:	add    eax,0x5a60284
  437f70:	je     0x437f74
  437f72:	mov    ds:0x9e027405,al
  437f77:	add    eax,0x59a0284
  437f7c:	test   BYTE PTR [edx],al
  437f7e:	xchg   esi,eax
  437f7f:	add    eax,0x5920274
  437f84:	je     0x437f88
  437f86:	mov    es,WORD PTR ds:0x58a0244
  437f8c:	inc    esp
  437f8d:	add    al,BYTE PTR [esi-0x7dfdcbfb]
  437f93:	add    eax,0x57e0234
  437f98:	inc    esp
  437f99:	add    bh,BYTE PTR [edx+0x5]
  437f9c:	inc    esp
  437f9d:	add    dh,BYTE PTR [esi+0x5]
  437fa0:	xor    al,0x2
  437fa2:	jb     0x437fa9
  437fa4:	xor    al,0x2
  437fa6:	outs   dx,BYTE PTR ds:[esi]
  437fa7:	add    eax,0x56a0204
  437fac:	add    al,0x2
  437fae:	add    ax,0x1f4
  437fb2:	bound  eax,QWORD PTR ds:0x55e01f4
  437fb8:	add    al,0x2
  437fba:	pop    edx
  437fbb:	add    eax,0x5560204
  437fc0:	hlt    
  437fc1:	add    DWORD PTR [edx+0x5],edx
  437fc4:	hlt    
  437fc5:	add    DWORD PTR [esi+0x5],ecx
  437fc8:	add    ah,al
  437fca:	add    DWORD PTR [edx+0x5],ecx
  437fcd:	les    eax,FWORD PTR [ecx]
  437fcf:	inc    esi
  437fd0:	add    eax,0x45fd5b9d
  437fd5:	cwde   
  437fd6:	pop    ebx
  437fd7:	std    
  437fd8:	inc    ecx
  437fd9:	mov    al,ds:0x983dfd5b
  437fde:	pop    ebx
  437fdf:	std    
  437fe0:	cmp    DWORD PTR [eax-0x67ca02a5],esp
  437fe6:	pop    ebx
  437fe7:	std    
  437fe8:	xor    DWORD PTR [eax-0x67d202a5],esp
  437fee:	pop    ebx
  437fef:	std    
  437ff0:	sub    DWORD PTR [eax-0x67da02a5],esp
  437ff6:	pop    ebx
  437ff7:	std    
  437ff8:	and    DWORD PTR [eax-0x67e202a5],esp
  437ffe:	pop    ebx
  437fff:	std    
  438000:	sbb    DWORD PTR [eax-0x67ea02a5],esp
  438006:	pop    ebx
  438007:	std    
  438008:	adc    DWORD PTR [eax-0x67f202a5],esp
  43800e:	pop    ebx
  43800f:	std    
  438010:	or     DWORD PTR [eax-0x67fa02a5],esp
  438016:	pop    ebx
  438017:	std    
  438018:	add    DWORD PTR [eax-0x660202a5],esp
  43801e:	pop    ebx
  43801f:	std    
  438020:	stc    
  438021:	mov    eax,ds:0x99f5fd5b
  438026:	pop    ebx
  438027:	std    
  438028:	icebp  
  438029:	mov    eax,ds:0xedfd5b
  43802e:	cdq    
  43802f:	pop    ebx
  438030:	std    
  438031:	jmp    0xe640dbd7
  438036:	cdq    
  438037:	pop    ebx
  438038:	std    
  438039:	loope  0x437fdc
  43803b:	pop    ebx
  43803c:	std    
  43803d:	fstp   QWORD PTR [ecx-0x5e2602a5]
  438043:	pop    ebx
  438044:	std    
  438045:	aad    0x99
  438047:	pop    ebx
  438048:	std    
  438049:	shl    DWORD PTR [ecx-0x1cfc18fe],1
  43804f:	std    
  438050:	out    0x3,al
  438052:	xlat   BYTE PTR ds:[ebx]
  438053:	std    
  438054:	out    0x3,al
  438056:	(bad)  
  438058:	out    0x3,al
  43805a:	(bad)  
  43805c:	out    0x3,al
  43805e:	repz std 
  438060:	out    0x3,al
  438062:	out    0xfd,eax
  438064:	out    0x3,al
  438066:	jmp    0x438065
  438068:	out    0x3,al
  43806a:	dec    edi
  43806b:	jmp    esi
  43806d:	add    eax,DWORD PTR [ebx-0x1]
  438070:	out    0x3,al
  438072:	aaa    
  438073:	jmp    esi
  438075:	add    edi,DWORD PTR [ebx]
  438077:	jmp    esi
  438079:	add    edi,DWORD PTR [edi]
  43807b:	jmp    esi
  43807d:	add    edx,DWORD PTR [ebx]
  43807f:	jmp    esi
  438081:	add    eax,DWORD PTR [edi]
  438083:	jmp    esi
  438085:	add    ecx,DWORD PTR [ebx]
  438087:	jmp    esi
  438089:	add    ebp,DWORD PTR [edi]
  43808b:	jmp    esi
  43808d:	add    esp,DWORD PTR [ebx]
  43808f:	jmp    esi
  438091:	add    eax,DWORD PTR [eax]
  438093:	pop    ss
  438094:	jmp    esi
  438096:	add    ebx,DWORD PTR [ebx]
  438098:	jmp    esi
  43809a:	add    ebx,DWORD PTR [edi]
  43809c:	jmp    esi
  43809e:	add    esi,DWORD PTR [ebx-0x58fc1902]
  4380a4:	(bad)  
  4380a5:	out    0x3,al
  4380a7:	stos   DWORD PTR es:[edi],eax
  4380a8:	(bad)  
  4380a9:	out    0x3,al
  4380ab:	(bad)  
  4380ac:	(bad)  
  4380ad:	out    0x3,al
  4380af:	cmp    esi,0xffffffe6
  4380b2:	add    esi,DWORD PTR [edi-0x2]
  4380b5:	out    0x3,al
  4380b7:	jnp    0x4380b7
  4380b9:	out    0x3,al
  4380bb:	jg     0x4380bb
  4380bd:	out    0x3,al
  4380bf:	push   ebx
  4380c0:	(bad)  
  4380c1:	out    0x3,al
  4380c3:	inc    edi
  4380c4:	(bad)  
  4380c5:	(bad)  
  4380c6:	call   0xe9472d69
  4380cb:	sahf   
  4380cc:	mov    al,0x3
  4380ce:	jmp    0xe9473571
  4380d3:	sahf   
  4380d4:	mov    eax,0xbc9ee903
  4380d9:	add    ebp,ecx
  4380db:	sahf   
  4380dc:	rol    BYTE PTR [ebx],0xe9
  4380df:	sahf   
  4380e0:	add    al,0x4
  4380e2:	jmp    0xe9478985
  4380e7:	sahf   
  4380e8:	or     al,0x4
  4380ea:	jmp    0xe947918d
  4380ef:	sahf   
  4380f0:	adc    al,0x4
  4380f2:	jmp    0xe9479995
  4380f7:	add    BYTE PTR [esi-0x6116fbe4],bl
  4380fd:	and    BYTE PTR [ecx+ebp*8],al
  438100:	sahf   
  438101:	in     al,0x3
  438103:	jmp    0xe94769a6
  438108:	sahf   
  438109:	in     al,dx
  43810a:	add    ebp,ecx
  43810c:	sahf   
  43810d:	lock add ebp,ecx
  438110:	sahf   
  438111:	hlt    
  438112:	add    ebp,ecx
  438114:	sahf   
  438115:	clc    
  438116:	add    ebp,ecx
  438118:	sahf   
  438119:	cld    
  43811a:	add    ebp,ecx
  43811c:	sahf   
  43811d:	add    BYTE PTR [ecx+ebp*8],al
  438120:	sahf   
  438121:	inc    esp
  438122:	std    
  438123:	call   0xe940c9c6
  438128:	sahf   
  438129:	dec    esp
  43812a:	std    
  43812b:	call   0xe940d1ce
  438130:	sahf   
  438131:	push   esp
  438132:	std    
  438133:	call   0xe940d9d6
  438138:	sahf   
  438139:	pop    esp
  43813a:	std    
  43813b:	call   0x40e1de
  438140:	add    al,0xff
  438142:	fld    DWORD PTR [ebx]
  438144:	hlt    
  438145:	(bad)  
  438146:	aad    0x3
  438148:	hlt    
  438149:	(bad)  
  43814a:	rol    DWORD PTR [ebx],1
  43814c:	(bad)  
  43814d:	dec    ch
  43814f:	add    eax,esp
  438151:	dec    cl
  438153:	add    esi,DWORD PTR [esi+edi*8-0x14bfee8]
  43815a:	adc    al,0x1
  43815c:	add    ah,al
  43815e:	(bad)  
  43815f:	adc    BYTE PTR [ecx],al
  438161:	(bad)  
  438162:	dec    BYTE PTR [ecx+eax*1]
  438165:	mov    ah,0xfe
  438167:	or     DWORD PTR [ecx],eax
  438169:	mov    ah,0xfe
  43816b:	sub    eax,0x35068401
  438170:	add    DWORD PTR [esi+eax*1+0x67400fd],eax
  438177:	stc    
  438178:	add    BYTE PTR [esi+eax*1-0xb],dh
  43817c:	add    BYTE PTR [esi+eax*1+0x68400f1],al
  438183:	in     eax,dx
  438184:	add    BYTE PTR [esi+eax*1-0x16],dh
  438188:	add    BYTE PTR [esi+eax*1-0x1b],dh
  43818c:	add    BYTE PTR [esi+eax*1-0x1f],al
  438190:	add    BYTE PTR [esi+eax*1-0x23],al
  438194:	add    BYTE PTR [esi+eax*1],dh
  438197:	fld    DWORD PTR [eax]
  438199:	xor    al,0x6
  43819b:	aad    0x0
  43819d:	inc    esp
  43819e:	push   es
  43819f:	rol    DWORD PTR [eax],1
  4381a1:	inc    esp
  4381a2:	push   es
  4381a3:	int    0x0
  4381a5:	xor    al,0x6
  4381a7:	retf   0x3400
  4381aa:	push   es
  4381ab:	lds    eax,FWORD PTR [eax]
  4381ad:	add    al,0x6
  4381af:	rol    DWORD PTR [eax],0x4
  4381b2:	push   es
  4381b3:	mov    ebp,0xb905f400
  4381b8:	add    BYTE PTR [ebp-0x624502d5],bl
  4381be:	sub    edi,ebp
  4381c0:	mov    dh,0x0
  4381c2:	popf   
  4381c3:	sub    edi,ebp
  4381c5:	mov    dl,0x9d
  4381c7:	sub    edi,ebp
  4381c9:	scas   al,BYTE PTR es:[edi]
  4381ca:	popf   
  4381cb:	sub    edi,ebp
  4381cd:	stos   BYTE PTR es:[edi],al
  4381ce:	popf   
  4381cf:	sub    edi,ebp
  4381d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4381d2:	popf   
  4381d3:	sub    edi,ebp
  4381d5:	mov    ds:0x59fd2b9d,al
  4381da:	ret    0x1f1e
  4381dd:	mov    DWORD PTR [eax+0x4c],esp
  4381e0:	inc    edi
  4381e1:	inc    ebx
  4381e2:	jg     0x43820f
  4381e4:	dec    eax
  4381e5:	inc    ebx
  4381e6:	lahf   
  4381e7:	dec    ebx
  4381e8:	std    
  4381e9:	call   FWORD PTR [ebp-0x42fe3e90]
  4381ef:	sub    edi,ebp
  4381f1:	call   FWORD PTR [esi]
  4381f3:	es adc al,0x40
  4381f6:	adc    BYTE PTR [ecx],ch
  4381f8:	dec    eax
  4381f9:	inc    ebx
  4381fa:	fwait
  4381fb:	imul   edi,ebp,0xffffffff
  4381fe:	popf   
  4381ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438200:	rcr    BYTE PTR [edx+eiz*4],0xc1
  438204:	sti    
  438205:	mov    ah,BYTE PTR [ecx+0x1e0002b1]
  43820b:	jmp    0x438214
  43820d:	stc    
  43820e:	ins    DWORD PTR es:[edi],dx
  43820f:	lods   al,BYTE PTR ds:[esi]
  438210:	dec    ebx
  438211:	stc    
  438212:	leave  
  438213:	xor    DWORD PTR [ebx+eax*2+0x7e],edi
  438217:	push   esp
  438218:	ret    0xe328
  43821b:	jne    0x4381c3
  43821d:	jl     0x438280
  43821f:	dec    eax
  438220:	stos   BYTE PTR es:[edi],al
  438221:	mov    ebp,0x43482ba5
  438226:	add    BYTE PTR [edi-0x620002d5],al
  43822c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43822d:	rcr    BYTE PTR [edx+ebp*4],0xf9
  438231:	ret    
  438232:	(bad)  
  438233:	mov    ecx,0x9d03aa02
  438238:	add    ah,BYTE PTR [eax-0x18befd3d]
  43823e:	adc    ch,bl
  438240:	cmp    al,bl
  438242:	jp     0x4382a2
  438244:	or     al,0x66
  438246:	dec    ebx
  438247:	jmp    0xe81c:0x5e84e2b5
  43824e:	test   ch,dl
  438250:	add    esi,DWORD PTR [eax+ecx*1]
  438253:	push   eax
  438254:	(bad)  
  438255:	cld    
  438256:	pop    es
  438257:	and    dl,bh
  438259:	call   0xe84a3fa0
  43825e:	push   ebx
  43825f:	sahf   
  438260:	add    dh,bh
  438262:	add    ebx,DWORD PTR [ebp-0x578c1471]
  438268:	inc    eax
  438269:	inc    bx
  43826b:	cdq    
  43826c:	inc    ecx
  43826d:	xchg   edi,eax
  43826e:	inc    esp
  43826f:	and    dh,al
  438271:	lds    eax,FWORD PTR [eax]
  438273:	dec    edi
  438274:	ret    
  438275:	out    0x84,eax
  438277:	jge    0x438274
  438279:	daa    
  43827a:	pop    ebx
  43827b:	or     BYTE PTR [ebx+0x4439f9ac],0x66
  438282:	into   
  438283:	pushf  
  438284:	loop   0x438248
  438286:	and    ch,al
  438288:	(bad)
  43828b:	add    BYTE PTR [eax],bl
  43828d:	mov    BYTE PTR ds:0xe4c30f01,0x84
  438294:	cmp    eax,0x98c67008
  438299:	sbb    DWORD PTR [ebp+esi*8-0x7b234a61],0xffffffb6
  4382a1:	or     al,0xe7
  4382a3:	(bad)  
  4382a4:	sahf   
  4382a5:	sub    DWORD PTR [ebp+ebp*8-0x3199bc62],0xffffff9c
  4382ad:	loop   0x4382ae
  4382af:	je     0x438253
  4382b1:	mov    ebp,0x7d9ad342
  4382b6:	jge    0x43831c
  4382b8:	mov    ds:0x1fe57312,eax
  4382bd:	les    edx,FWORD PTR ds:0x5e2a5feb
  4382c3:	into   
  4382c4:	bound  edi,QWORD PTR [ecx]
  4382c6:	test   DWORD PTR [edi+esi*8],ebp
  4382c9:	inc    eax
  4382ca:	inc    esp
  4382cb:	or     bl,BYTE PTR [esi]
  4382cd:	les    ebx,FWORD PTR [ebx+ebp*8]
  4382d0:	pop    edi
  4382d1:	cmp    DWORD PTR [ebx+0xa],eax
  4382d4:	pop    esi
  4382d5:	mov    ebp,0x7d9cca42
  4382da:	jge    0x4382f8
  4382dc:	lahf   
  4382dd:	adc    dh,BYTE PTR [ebx-0x11]
  4382e0:	push   esi
  4382e1:	pop    esi
  4382e2:	stc    
  4382e3:	mov    fs,WORD PTR [edx+0x7d]
  4382e6:	call   0x462218
  4382eb:	stos   BYTE PTR es:[edi],al
  4382ec:	push   ds
  4382ed:	mov    esp,0x7500d8fd
  4382f2:	or     al,ch
  4382f4:	mov    ds:0x66f939e2,eax
  4382f9:	push   esp
  4382fa:	push   ds
  4382fb:	mov    ebp,0xf940a251
  438300:	jmp    0x1abe40e4
  438305:	pop    ecx
  438306:	mov    ah,0x1
  438308:	push   ecx
  438309:	mov    esi,0xdfe9f940
  43830e:	cmp    DWORD PTR [ebx+0xa],eax
  438311:	fidivr WORD PTR [ebp-0x41811486]
  438317:	add    ch,BYTE PTR [edx+0x54]
  43831a:	push   ds
  43831b:	add    ebp,DWORD PTR [edx]
  43831d:	push   ds
  43831e:	ret    
  43831f:	sbb    al,0xea
  438321:	fistp  QWORD PTR [ebp-0x4ba11486]
  438327:	add    al,BYTE PTR [eax]
  438329:	mov    bh,0x49
  43832b:	sbb    al,0x9
  43832d:	ja     0x4382b2
  43832f:	jne    0x438333
  438331:	in     al,0x59
  438333:	inc    BYTE PTR [edx-0x3d031bc7]
  438339:	ja     0x438385
  43833b:	sbb    al,0x3
  43833d:	aaa    
  43833e:	fstp   TBYTE PTR [edi-0x1]
  438341:	ror    edi,cl
  438343:	test   BYTE PTR [ebp-0x59],0xc3
  438347:	jp     0x4383c6
  438349:	out    0x42,eax
  43834b:	outs   dx,BYTE PTR ds:[esi]
  43834c:	and    bh,BYTE PTR [ebx]
  43834e:	dec    edx
  43834f:	sti    
  438350:	aas    
  438351:	les    eax,FWORD PTR [edx]
  438353:	add    bh,bh
  438355:	add    BYTE PTR [ecx-0x1d],bh
  438358:	add    BYTE PTR [ebp-0x29],0x3f
  43835c:	scas   eax,DWORD PTR es:[edi]
  43835d:	or     BYTE PTR [ecx],dh
  43835f:	pop    es
  438360:	xchg   BYTE PTR [ebx],al
  438362:	les    eax,FWORD PTR [ebx-0xcdcfb40]
  438368:	mov    esi,0xffe2b645
  43836d:	push   DWORD PTR [ebx+eax*8-0x3e98ba0a]
  438374:	jp     0x4383f3
  438376:	push   edi
  438377:	inc    edx
  438378:	outs   dx,BYTE PTR ds:[esi]
  438379:	and    eax,DWORD PTR [ebx]
  43837b:	dec    ebx
  43837c:	sbb    al,0xfe
  43837e:	cmp    esp,esp
  438380:	jg     0x4383ff
  438382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438383:	cmp    eax,0x64dc066e
  438388:	stc    
  438389:	push   DWORD PTR [ecx+eax*8-0x7e]
  43838d:	inc    ebp
  43838e:	xchg   edi,eax
  43838f:	cmp    eax,0x5c108af
  438394:	xchg   BYTE PTR [ebx],al
  438396:	inc    esp
  438397:	add    eax,0xbaf18304
  43839d:	cmp    ecx,0xffffffe0
  4383a0:	clc    
  4383a1:	ret    0x149d
  4383a4:	enter  0x331c,0x67
  4383a8:	pop    ds
  4383a9:	sub    BYTE PTR [eax-0x648d05b7],0x13
  4383b0:	retf   0x1afe
  4383b3:	sub    al,0x3e
  4383b5:	test   DWORD PTR [eax+0x48],ebx
  4383b8:	cli    
  4383b9:	mov    cl,0x0
  4383bb:	xchg   ebp,eax
  4383bc:	mov    dh,0x7
  4383be:	mov    bl,BYTE PTR [esi-0x5e3f7fd5]
  4383c4:	push   esp
  4383c5:	xor    al,0xbd
  4383c7:	push   ds
  4383c8:	iret   
  4383c9:	std    
  4383ca:	pop    ds
  4383cb:	imul   esi,DWORD PTR [ecx],0x7ce3f455
  4383d1:	dec    ebx
  4383d2:	jge    0x438434
  4383d4:	or     BYTE PTR [eax],cl
  4383d6:	mov    ebp,0xf94a41c5
  4383db:	retf   0xc0a8
  4383de:	sbb    al,0x9f
  4383e0:	push   0xeb6e7b7f
  4383e5:	rol    BYTE PTR [ecx],1
  4383e7:	(bad)
  4383ea:	call   FWORD PTR [ebp+0x7e437f68]
  4383f0:	sub    DWORD PTR [eax+0x7d],eax
  4383f3:	loopne 0x43843d
  4383f5:	add    DWORD PTR [ebp+0x31ee61e],edi
  4383fb:	pop    esi
  4383fc:	test   al,0xc8
  4383fe:	sub    al,0xdd
  438400:	push   esi
  438401:	add    ebp,eax
  438403:	enter  0xfd2a,0xff
  438407:	pop    esi
  438408:	ret    
  438409:	test   dl,bh
  43840b:	push   0xffffffc4
  43840d:	ds call 0xf98e819a
  438413:	push   ds
  438414:	jbe    0x43840d
  438416:	cld    
  438417:	leave  
  438418:	and    eax,0x24ba855
  43841d:	and    cl,BYTE PTR [ebp+0x0]
  438420:	add    BYTE PTR [edx],ch
  438422:	test   DWORD PTR [edx],0x8126029d
  438428:	fsubrp st(1),st
  43842a:	in     eax,0x40
  43842c:	test   al,0xbf
  43842e:	call   0x664b33f6
  438433:	(bad)  
  438434:	mov    ecx,0x5e81260b
  438439:	loope  0x43841e
  43843b:	inc    eax
  43843c:	mov    BYTE PTR [edi+0x78ff3e8],bh
  438442:	data16 (bad) 
  438444:	cdq    
  438445:	add    DWORD PTR [esi+0x7047680],esp
  43844b:	xlat   BYTE PTR ds:[ebx]
  43844c:	lahf   
  43844d:	sub    DWORD PTR [ecx+eiz*1],0xc666419e
  438454:	mov    ecx,0x5683a60b
  438459:	add    ch,al
  43845b:	(bad)  
  43845c:	pushf  
  43845d:	sub    cl,BYTE PTR [ecx]
  43845f:	dec    esi
  438460:	les    edi,FWORD PTR [esi+eiz*4]
  438463:	pop    ebx
  438464:	out    0x1,eax
  438466:	out    0x3,eax
  438468:	lock or DWORD PTR [esp+eax*1],0x5be8b5aa
  438470:	dec    ecx
  438471:	cmp    al,0x7a
  438473:	dec    esp
  438474:	pop    eax
  438475:	xor    esp,0x2
  438478:	xchg   edx,eax
  438479:	mov    bh,0xe0
  43847b:	pop    ebx
  43847c:	aad    0x3c
  43847e:	bound  ecx,QWORD PTR [eax+eax*2-0x80]
  438482:	fadd   QWORD PTR [ecx]
  438484:	add    BYTE PTR [ebp-0x4ea4174b],cl
  43848a:	cmp    al,0x4a
  43848c:	dec    esp
  43848d:	sub    BYTE PTR [ebx],ch
  43848f:	mov    eax,DWORD PTR [ebx]
  438491:	popf   
  438492:	add    ah,BYTE PTR [esi]
  438494:	adc    dh,0xef
  438497:	jmp    FWORD PTR [eax+0x51e8026b]
  43849d:	sahf   
  43849e:	add    al,BYTE PTR [eax]
  4384a0:	sub    bl,BYTE PTR ds:0x53c8fdb8
  4384a6:	add    DWORD PTR [ebp-0x54],edi
  4384a9:	jge    0x4384ac
  4384ab:	mov    ebp,0x31f636a
  4384b0:	sub    bl,ch
  4384b2:	mov    ebp,0xb00eeb7a
  4384b7:	(bad)  
  4384b9:	jmp    0x15bf:0x92eef938
  4384c0:	call   0x24c0a3a2
  4384c5:	ret    0xbd00
  4384c8:	sar    ebp,0x38
  4384cb:	stc    
  4384cc:	into   
  4384cd:	push   0xffffffbf
  4384cf:	adc    eax,0x7d1edde8
  4384d4:	and    al,0x82
  4384d6:	push   es
  4384d7:	mov    ebp,0x3feee46a
  4384dc:	xor    al,0x9f
  4384de:	sub    dl,BYTE PTR [ebx-0x17]
  4384e1:	sahf   
  4384e2:	add    bh,BYTE PTR [ebp+0x193de46a]
  4384e8:	sbb    al,0x0
  4384ea:	pushf  
  4384eb:	mov    ebp,0x7d9fca42
  4384f0:	jge    0x43851e
  4384f2:	jp     0x4384f3
  4384f4:	mov    esp,0xf9372091
  4384f9:	jbe    0x438515
  4384fb:	mov    bh,0x11
  4384fd:	jmp    0x302b866f
  438502:	aam    0x39
  438504:	stc    
  438505:	sub    bl,cl
  438507:	call   0x7de26e0b
  43850c:	jge    0x4384da
  43850e:	xchg   ebx,eax
  43850f:	ret    0x72
  438512:	jno    0x438498
  438514:	cmp    eax,0x7ac44123
  438519:	jge    0x438561
  43851b:	fild   QWORD PTR [ebp+eax*1-0x49]
  43851f:	inc    ecx
  438520:	sbb    al,0x5
  438522:	ja     0x4384a7
  438524:	cmp    eax,0x7fc44723
  438529:	jge    0x43856f
  43852b:	push   es
  43852c:	ins    DWORD PTR es:[edi],dx
  43852d:	push   es
  43852e:	pushf  
  43852f:	lods   eax,DWORD PTR ds:[esi]
  438530:	hlt    
  438531:	call   FWORD PTR [ebx+0x401e7c3]
  438537:	(bad)  
  438538:	inc    edx
  43853a:	int3   
  43853b:	(bad)  
  43853c:	idiv   bh
  43853e:	sti    
  43853f:	ret    
  438540:	jp     0x4385bf
  438542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438543:	inc    esi
  438544:	outs   dx,BYTE PTR ds:[esi]
  438545:	push   es
  438546:	int3   
  438547:	xlat   BYTE PTR ds:[ebx]
  438548:	idiv   bh
  43854a:	retf   
  43854b:	ret    
  43854c:	out    0x7b,eax
  43854e:	add    cl,bl
  438550:	(bad)  
  438551:	test   BYTE PTR [ebx-0x3d071c4f],0x47
  438558:	dec    edx
  438559:	sti    
  43855a:	pop    ds
  43855b:	mov    BYTE PTR [ecx+eiz*8],bh
  43855e:	imul   edi,ecx,0xffffffc7
  438561:	test   BYTE PTR [ebx-0x3cfc1c8f],0xc
  438568:	es idiv bh
  43856b:	or     eax,DWORD PTR [ebp+edi*1-0x183c49dd]
  438572:	mov    esi,0xe8f6c818
  438577:	xchg   bl,cl
  438579:	idiv   bh
  43857b:	pop    es
  43857c:	dec    ebx
  43857d:	lldt   WORD PTR [ecx-0x61ba7bc7]
  438584:	(bad)  
  438585:	cmp    al,0x23
  438587:	pop    es
  438588:	inc    ebx
  438589:	sbb    al,0x3
  43858b:	popf   
  43858c:	in     al,dx
  43858d:	cmp    DWORD PTR [ebx-0x6d],0x7501d02a
  438594:	mov    BYTE PTR [esi-0x7],al
  438597:	pop    edx
  438598:	in     eax,dx
  438599:	jns    0x4385de
  43859b:	mov    bh,0x2a
  43859d:	rcr    BYTE PTR [esi+ebx*1],0x5f
  4385a1:	and    bh,dh
  4385a3:	pop    edi
  4385a4:	lods   eax,DWORD PTR ds:[esi]
  4385a5:	(bad)  
  4385a6:	std    
  4385a7:	call   0x4610:0x1be81397
  4385ae:	stc    
  4385af:	xor    eax,0xf940e6
  4385b4:	and    ch,BYTE PTR [ebp-0x5162ee39]
  4385ba:	stc    
  4385bb:	test   BYTE PTR [eax+0x55],bl
  4385be:	add    al,0x43
  4385c0:	mov    esi,0x9b1cbfac
  4385c5:	ins    BYTE PTR es:[edi],dx
  4385c6:	cmp    DWORD PTR [ebx-0x6d],0x2a
  4385ca:	retf   0x501
  4385cd:	rol    BYTE PTR [esi-0x7],0xea
  4385d1:	ins    BYTE PTR es:[edi],dx
  4385d2:	jnp    0x438617
  4385d4:	xchg   DWORD PTR [edx],ebp
  4385d6:	mov    edx,0x22df1e1c
  4385db:	(bad)  
  4385dc:	fild   WORD PTR [ebx-0x50]
  4385df:	sti    
  4385e0:	retf   0x5c68
  4385e3:	cwde   
  4385e4:	shl    DWORD PTR [eax+0x47],0x7d
  4385e8:	cmp    BYTE PTR [ecx],dh
  4385ea:	std    
  4385eb:	jb     0x438593
  4385ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4385ee:	mov    eax,0x22de9c15
  4385f3:	jge    0x43864d
  4385f5:	dec    esp
  4385f6:	stc    
  4385f7:	mov    esp,0xfeef361e
  4385fc:	or     DWORD PTR [edx],ebp
  4385fe:	push   ebp
  4385ff:	mov    ch,BYTE PTR ss:[eax+0x216bd46]
  438606:	lods   al,BYTE PTR ds:[esi]
  438607:	in     eax,dx
  438608:	jnp    0x4385c8
  43860a:	add    eax,0xe4e5de85
  43860f:	inc    esp
  438610:	jne    0x4385f6
  438612:	dec    edx
  438613:	dec    ecx
  438614:	fs sub cl,cl
  438617:	inc    edi
  438618:	add    BYTE PTR [ecx+edi*1+0x66],dl
  43861c:	(bad)  
  43861d:	lods   al,BYTE PTR ds:[esi]
  43861e:	add    esi,DWORD PTR [ecx+0x2a1b3501]
  438624:	dec    ecx
  438625:	inc    esp
  438626:	inc    ebp
  438627:	outs   dx,BYTE PTR ds:[esi]
  438628:	mov    edi,0x24a40390
  43862d:	mov    al,0xbf
  43862f:	lds    eax,FWORD PTR ds:0x479d29e8
  438635:	and    al,0x39
  438637:	data16 (bad) 
  438639:	lods   al,BYTE PTR ds:[esi]
  43863a:	add    BYTE PTR [ecx+0x1],bh
  43863d:	add    eax,0x448f137
  438642:	inc    ebp
  438643:	call   DWORD PTR [ebx+0x8]
  438646:	cmp    edx,esp
  438648:	jl     0x4386a8
  43864a:	sbb    al,0xe8
  43864c:	mov    esi,0x252c8591
  438651:	jmp    0x438696
  438653:	mov    edi,0xc238e863
  438658:	pop    ebx
  438659:	xor    DWORD PTR [esi],0xb75048ba
  43865f:	fdivr  st,st(6)
  438661:	inc    esp
  438662:	add    BYTE PTR [edi-0x5dc738d0],bh
  438668:	inc    esp
  438669:	and    BYTE PTR [edi-0x1aa1fd04],bh
  43866f:	gs mov esi,0x5ba60489
  438675:	in     al,0x3c
  438677:	or     BYTE PTR [eax-0x7b],0x4
  43867b:	jnp    0x4386c5
  43867d:	add    BYTE PTR [esp+eax*4+0x388cf400],dl
  438684:	je     0x438659
  438686:	sbb    DWORD PTR [ebp+eax*1-0x537a8a16],edi
  43868d:	jmp    0xd4c08930
  438692:	fs add al,0x9
  438695:	pop    edi
  438696:	cmp    BYTE PTR [ebx],al
  438698:	add    cl,ch
  43869a:	neg    BYTE PTR [eax+0x75e53efa]
  4386a0:	jge    0x438656
  4386a2:	dec    esp
  4386a3:	cmp    DWORD PTR [ebx+edx*8+0x19],esi
  4386a7:	mov    esp,0x8535ea05
  4386ac:	mov    ecx,gs
  4386ae:	sahf   
  4386af:	add    bh,BYTE PTR [ebp-0x6c]
  4386b2:	and    al,0x39
  4386b4:	or     bl,BYTE PTR [edi+0x18]
  4386b7:	add    eax,DWORD PTR [eax]
  4386b9:	jmp    0xff3d3f34
  4386be:	pop    edx
  4386bf:	jne    0x43873e
  4386c1:	je     0x4386cf
  4386c3:	ss je  0x43869f
  4386c6:	sbb    DWORD PTR [ebp+eax*1+0x6c84f3ea],edi
  4386cd:	jmp    0x462b8970
  4386d2:	arpl   WORD PTR [ecx],di
  4386d4:	stc    
  4386d5:	stos   BYTE PTR es:[edi],al
  4386d6:	push   ds
  4386d7:	mov    esp,0xbedea11
  4386dc:	jge    0x43871a
  4386de:	xlat   BYTE PTR ds:[ebx]
  4386df:	ss je  0x4386f5
  4386e2:	add    BYTE PTR [ecx-0x30],ch
  4386e5:	stc    
  4386e6:	scas   al,BYTE PTR es:[edi]
  4386e7:	pop    edx
  4386e8:	jne    0x438767
  4386ea:	and    al,0xcb
  4386ec:	add    esi,DWORD PTR [ebx-0x13]
  4386ef:	pop    ds
  4386f0:	mov    esp,0xbfcdea05
  4386f5:	out    0x21,eax
  4386f7:	pop    ebx
  4386f8:	cmp    ecx,edi
  4386fa:	add    BYTE PTR [edi-0x7d],al
  4386fd:	jne    0x438715
  4386ff:	jns    0x438753
  438701:	jmp    edi
  438703:	push   eax
  438704:	mov    ebp,0x8337fff6
  438709:	jne    0x438721
  43870b:	mov    dl,BYTE PTR [edx+0x5]
  43870e:	adc    DWORD PTR [ecx+0x39],0xfffffffc
  438712:	je     0x4386b2
  438714:	(bad)  
  438715:	and    esi,edi
  438717:	sar    DWORD PTR [edi+0x256183ba],cl
  43871d:	add    BYTE PTR [ebp+0x72],dh
  438720:	test   BYTE PTR [ebp+0xa],dh
  438723:	aaa    
  438724:	push   edx
  438725:	adc    DWORD PTR [ebx+0x754013f1],eax
  43872b:	xor    BYTE PTR [ebp+esi*2+0x547440e],al
  438732:	call   0x3a4477
  438737:	ja     0x43870f
  438739:	std    
  43873a:	std    
  43873b:	mov    ds:0x398bbabf,eax
  438740:	sub    edx,edi
  438742:	inc    esp
  438743:	xlat   BYTE PTR ds:[ebx]
  438744:	cmp    DWORD PTR ds:0xc3f60023,0xffffffe7
  43874b:	out    dx,al
  43874c:	(bad)  
  43874d:	mov    edi,0xcb96e8f6
  438752:	idiv   bh
  438754:	ja     0x4387a0
  438756:	(bad)  
  438758:	push   ecx
  438759:	cmp    cl,ah
  43875b:	in     eax,0xe1
  43875d:	mov    edi,0x424fc3f6
  438762:	adc    eax,DWORD PTR [ecx]
  438764:	jns    0x438749
  438766:	jp     0x4387ad
  438768:	xchg   edi,eax
  438769:	add    edi,DWORD PTR [ebx-0x9370e18]
  43876f:	dec    DWORD PTR [esi+ebp*1]
  438772:	hlt    
  438773:	call   FWORD PTR [ebp-0x74848170]
  438779:	sub    eax,edx
  43877b:	add    DWORD PTR [ebp-0x6d06b798],eax
  438781:	imul   edi,DWORD PTR [esi+0x7b],0x1d029b3
  438788:	jne    0x43877e
  43878a:	inc    edi
  43878b:	stc    
  43878c:	jp     0x438777
  43878e:	jge    0x43880b
  438790:	mov    ebp,DWORD PTR [eax]
  438792:	rol    BYTE PTR [ecx],1
  438794:	jne    0x438716
  438796:	dec    eax
  438797:	stc    
  438798:	(bad)  
  438799:	jmp    0x27f7031b
  43879e:	rol    BYTE PTR [ecx],1
  4387a0:	inc    ebp
  4387a1:	mov    WORD PTR [eax-0x7],cs
  4387a4:	dec    edx
  4387a5:	jmp    0x1eef0327
  4387aa:	rol    BYTE PTR [ecx],1
  4387ac:	add    BYTE PTR [ebp-0x48],al
  4387af:	inc    edi
  4387b0:	stc    
  4387b1:	xor    ch,cl
  4387b3:	jge    0x438830
  4387b5:	xchg   ebx,eax
  4387b6:	and    al,0xc3
  4387b8:	add    DWORD PTR ds:0x1af947a4,esi
  4387be:	jmp    0x2afacb38
  4387c3:	rcr    BYTE PTR [esi+ebx*1],0x67
  4387c7:	push   ds
  4387c8:	(bad)  
  4387c9:	fild   WORD PTR [ebx]
  4387cb:	mov    esi,?
  4387cd:	cli    
  4387ce:	sbb    al,0x7f
  4387d0:	jnp    0x43875d
  4387d2:	sub    ecx,edx
  4387d4:	add    ebp,esi
  4387d6:	mov    edi,0x68e2f940
  4387db:	jg     0x438858
  4387dd:	mov    bl,0x2a
  4387df:	retf   0xc501
  4387e2:	retf   
  4387e3:	inc    eax
  4387e4:	stc    
  4387e5:	retf   0x7f68
  4387e8:	jnp    0x438795
  4387ea:	sub    edx,ecx
  4387ec:	push   cs
  4387ed:	lds    eax,FWORD PTR [edx]
  4387ef:	xor    al,0x4a
  4387f1:	mov    ah,0x35
  4387f3:	data16 (bad) 
  4387f5:	mov    al,ds:0xbab21b01
  4387fa:	retf   
  4387fb:	mov    eax,DWORD PTR [ebp-0x6c]
  4387fe:	inc    ecx
  4387ff:	data16 (bad) 
  438801:	lods   al,BYTE PTR ds:[esi]
  438802:	add    esp,esi
  438804:	std    
  438805:	xor    bh,0x73
  438808:	inc    ebp
  438809:	test   BYTE PTR [ecx+0x66],al
  43880c:	(bad)  
  43880d:	mov    esi,?
  43880f:	fcomi  st,st(2)
  438811:	add    BYTE PTR [edx-0x18],bh
  438814:	pop    esp
  438815:	inc    ebp
  438816:	fs adc esp,0xf9b161f9
  43881d:	pop    ebx
  43881e:	jg     0x438857
  438820:	inc    edx
  438821:	inc    ebp
  438822:	adc    BYTE PTR [ecx-0x50601244],al
  438828:	call   0x2a7b3388
  43882d:	inc    ebp
  43882e:	clc    
  43882f:	and    BYTE PTR [ebp+ebp*8+0x5bf7af9c],0x9c
  438837:	cmp    BYTE PTR [edx],dl
  438839:	inc    ebp
  43883a:	mov    al,ds:0x9100dcb7
  43883f:	push   es
  438840:	lgdtd  [esi]
  438843:	xor    eax,0x36f540fa
  438848:	repz inc esp
  43884a:	add    al,0x41
  43884c:	pop    esi
  43884d:	mov    edi,0x212c0390
  438852:	jo     0x438813
  438854:	add    eax,0x12a2801
  438859:	dec    edx
  43885a:	in     al,0x34
  43885c:	data16 (bad) 
  43885e:	lods   al,BYTE PTR ds:[esi]
  43885f:	add    bh,BYTE PTR [esi+edi*8]
  438862:	mov    edx,0xc444bb22
  438867:	inc    eax
  438868:	add    BYTE PTR [edx-0x25],ch
  43886b:	adc    bh,bh
  43886d:	xor    edi,DWORD PTR [ebx+0x59a5d31c]
  438873:	cmp    edi,DWORD PTR [ebp+0x12e3006a]
  438879:	(bad)  
  43887a:	sbb    ebp,DWORD PTR [esi-0x1e6f41e4]
  438880:	cmp    DWORD PTR [ebp+0x4],edi
  438883:	xchg   edi,eax
  438884:	aaa    
  438885:	ins    DWORD PTR es:[edi],dx
  438886:	sbb    ebp,ecx
  438888:	js     0x438886
  43888a:	jbe    0x438865
  43888c:	jne    0x43890b
  43888e:	in     al,dx
  43888f:	mov    BYTE PTR [edi],dh
  438891:	je     0x438882
  438893:	(bad)  
  438894:	fs cld 
  438896:	pop    esi
  438897:	loope  0x43890e
  438899:	jge    0x43886f
  43889b:	jo     0x43889d
  43889d:	jae    0x438897
  43889f:	neg    BYTE PTR [ecx-0x4a26b909]
  4388a5:	jp     0x43889a
  4388a7:	popf   
  4388a8:	scas   al,BYTE PTR es:[edi]
  4388a9:	sub    BYTE PTR [ecx-0x4b],al
  4388ac:	ss stc 
  4388ae:	fnsave cs:[ebp-0x4ecc0086]
  4388b5:	add    DWORD PTR [ecx],edx
  4388b7:	mov    cl,0x36
  4388b9:	stc    
  4388ba:	push   ss
  4388bb:	fnsave [ebp-0x4ee70886]
  4388c1:	push   cs
  4388c2:	adc    edx,ebx
  4388c4:	sub    al,0xf9
  4388c6:	dec    BYTE PTR [edx-0x2d15fa49]
  4388cc:	pop    es
  4388cd:	call   0xf97ceb43
  4388d2:	stos   BYTE PTR es:[edi],al
  4388d3:	shl    DWORD PTR [ebx+edi*8-0x7a8aa122],0x2c
  4388db:	add    BYTE PTR [ebx+0x220a4433],al
  4388e1:	rcr    BYTE PTR [eax+eax*1],0xc7
  4388e5:	mov    esp,0xbfdda3e7
  4388ea:	test   BYTE PTR [ebx+0x75001889],0xc2
  4388f1:	out    0x4d,eax
  4388f3:	cld    
  4388f4:	sti    
  4388f5:	mov    edi,0x188983ba
  4388fa:	stc    
  4388fb:	je     0x4388af
  4388fd:	out    0x41,eax
  4388ff:	cld    
  438900:	sub    edi,DWORD PTR [edi+0x189983ba]
  438906:	cli    
  438907:	je     0x43897a
  438909:	out    0x2e,eax
  43890b:	stc    
  43890c:	or     eax,eax
  43890e:	jp     0x43898d
  438910:	jle    0x43890e
  438912:	push   es
  438913:	test   BYTE PTR [edi-0x1],bh
  438916:	(bad)  
  438917:	dec    esp
  438919:	das    
  43891a:	cmc    
  43891b:	dec    ebx
  43891d:	mov    ebx,0xfc527d7a
  438922:	ins    BYTE PTR es:[edi],dx
  438923:	sbb    eax,0xffb41c7
  438928:	adc    DWORD PTR [esi],ecx
  43892a:	call   0xf7031645
  43892f:	or     DWORD PTR [ecx],0x5
  438932:	sti    
  438933:	jae    0x43898f
  438935:	out    0x9,eax
  438937:	cld    
  438938:	mov    edi,DWORD PTR [edi-0xcc71746]
  43893e:	idiv   bh
  438940:	add    bh,al
  438942:	jnp    0x4389b9
  438944:	push   ss
  438945:	add    BYTE PTR [edx-0x1],bh
  438948:	out    0xf4,eax
  43894a:	repnz idiv bh
  43894d:	mov    bh,0x7b
  43894f:	jne    0x438967
  438951:	add    DWORD PTR [edx-0x1],edi
  438954:	out    0xd0,eax
  438956:	repz idiv bh
  438959:	aaa    
  43895a:	jl     0x4389d1
  43895c:	push   ss
  43895d:	popf   
  43895e:	and    edi,DWORD PTR [eax+0x3549c50e]
  438964:	stc    
  438965:	shl    BYTE PTR [edi-0x1261fa41],cl
  43896b:	jmp    0xdef9:0x3e6fe0e7
  438972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438973:	mov    edi,0x15169a11
  438978:	jge    0x4389a2
  43897a:	daa    
  43897b:	or     eax,0x41818c73
  438980:	clc    
  438981:	call   0xb11c:0xa77b8281
  438988:	or     esi,DWORD PTR [ebp+0x5c]
  43898b:	cmp    bh,cl
  43898d:	sbb    BYTE PTR [ebp+0x25],0xb6
  438991:	jbe    0x438934
  438993:	cmp    eax,0x1b5f26bd
  438998:	jmp    ecx
  43899a:	cld    
  43899b:	add    BYTE PTR [ebx-0x42],0x1c
  43899f:	inc    edx
  4389a0:	call   0xf9815deb
  4389a5:	add    BYTE PTR [esi],bl
  4389a7:	inc    edi
  4389a8:	pop    ss
  4389a9:	add    al,dl
  4389ab:	push   esi
  4389ac:	and    eax,0x3df94591
  4389b1:	jge    0x43896b
  4389b3:	and    eax,0xbc180902
  4389b8:	cld    
  4389b9:	call   FWORD PTR [ebp+0x22f58e13]
  4389bf:	sbb    DWORD PTR [edx+0x7d],eax
  4389c2:	cwde   
  4389c3:	cmp    DWORD PTR [ebx+esi*2],eax
  4389c6:	test   al,0x13
  4389c8:	mov    ecx,0x83310af7
  4389cd:	jnp    0x438966
  4389cf:	sbb    al,0xe
  4389d1:	and    DWORD PTR [eax],0x1c
  4389d4:	std    
  4389d5:	inc    DWORD PTR ds:0xe43d5b03
  4389db:	xor    DWORD PTR [esi-0x1ae7997b],esp
  4389e1:	mov    dh,0xaf
  4389e3:	sbb    cl,BYTE PTR [eax+0x3c]
  4389e6:	aam    0x31
  4389e8:	mov    di,0x5a0
  4389ec:	jmp    0xc503:0xe7023b86
  4389f3:	retf   
  4389f4:	lods   eax,DWORD PTR ds:[esi]
  4389f5:	inc    ecx
  4389f6:	mov    ah,0x45
  4389f8:	mov    di,0x58c
  4389fc:	adc    al,0x13
  4389fe:	mov    ch,0xc8
  438a00:	mov    es,WORD PTR [ecx-0x6c]
  438a03:	test   DWORD PTR [esi+ecx*1],ecx
  438a06:	nop
  438a07:	mov    dh,0x15
  438a09:	sub    al,0x0
  438a0b:	retf   
  438a0c:	sub    eax,0x8540417a
  438a11:	hlt    
  438a12:	sbb    DWORD PTR [ecx-0x50d41f49],esp
  438a18:	sub    eax,0x85284162
  438a1d:	fcomp  QWORD PTR [ecx]
  438a1f:	sahf   
  438a20:	mov    bh,0xf7
  438a22:	sub    edi,DWORD PTR [eax-0x2fbeb5d6]
  438a28:	scas   eax,DWORD PTR es:[edi]
  438a29:	in     al,dx
  438a2a:	add    al,0xce
  438a2c:	repnz dec esi
  438a2e:	and    DWORD PTR [eax+0x31],ecx
  438a31:	xor    al,BYTE PTR [ebp-0x48]
  438a34:	scas   eax,DWORD PTR es:[edi]
  438a35:	ror    BYTE PTR [ecx],1
  438a37:	scas   al,BYTE PTR es:[edi]
  438a38:	adc    ecx,DWORD PTR [edi]
  438a3a:	adc    BYTE PTR ds:0xa6851a31,ah
  438a40:	cld    
  438a41:	in     eax,0xb6
  438a43:	mov    bl,0x1a
  438a45:	fistp  QWORD PTR [esp+edx*1]
  438a48:	xor    DWORD PTR [esi],esp
  438a4a:	test   DWORD PTR [esi-0x623f1de8],eax
  438a50:	sbb    al,BYTE PTR [eax]
  438a52:	cld    
  438a53:	mov    ch,0x2b
  438a55:	stc    
  438a56:	add    ah,BYTE PTR [edi+0x5de3f31a]
  438a5c:	sub    edi,DWORD PTR [ebp-0xe9248e]
  438a62:	sub    eax,eax
  438a64:	lods   eax,DWORD PTR ds:[esi]
  438a65:	inc    edx
  438a66:	or     bl,BYTE PTR [ebx-0x76f01791]
  438a6c:	sub    edi,ecx
  438a6e:	push   0x0
  438a70:	add    edx,DWORD PTR [ebx]
  438a72:	add    BYTE PTR [esi+ecx*4],bh
  438a75:	sbb    cl,dh
  438a77:	mov    dh,0x5d
  438a79:	sub    edi,DWORD PTR [ebp+0x24]
  438a7c:	fwait
  438a7d:	das    
  438a7e:	je     0x438ab8
  438a80:	jno    0x438abe
  438a82:	not    BYTE PTR [esi+0xc7d6ddd]
  438a88:	mov    bh,0x2f
  438a8a:	je     0x438a64
  438a8c:	mov    dh,0x75
  438a8e:	icebp  
  438a8f:	jle    0x438a6e
  438a91:	lods   eax,DWORD PTR ds:[esi]
  438a92:	jp     0x438a77
  438a94:	mov    eax,ds:0xf58135b3
  438a99:	cmp    cl,bh
  438a9b:	data16 loope 0x438a4b
  438a9e:	jp     0x438a97
  438aa0:	cwde   
  438aa1:	mov    bl,0xe
  438aa3:	inc    ecx
  438aa4:	ret    0xf931
  438aa7:	dec    esi
  438aa8:	sbb    DWORD PTR [ebp+eax*1-0x17f0ec16],ebp
  438aaf:	mov    DWORD PTR [eax+0x212af929],eax
  438ab5:	lods   al,BYTE PTR ds:[esi]
  438ab6:	adc    edx,ebp
  438ab8:	jmp    0x438aba
  438aba:	call   0xf96cf033
  438abf:	push   0xffffffe3
  438ac1:	add    eax,0x1aaa9bfd
  438ac6:	xchg   DWORD PTR [ebx],edx
  438ac8:	pop    ebp
  438ac9:	sub    DWORD PTR [ebp-0xd795400],edi
  438acf:	inc    DWORD PTR [ebx]
  438ad1:	les    eax,FWORD PTR [edx+0x4ce0045]
  438ad7:	cmp    eax,0x1c488723
  438adc:	add    dh,BYTE PTR [edi]
  438ade:	lock cmp al,0x23
  438ae1:	cmp    edi,DWORD PTR [edx]
  438ae3:	sti    
  438ae4:	pinsrw mm0,WORD PTR [ebx],0x0
  438ae8:	(bad)  
  438ae9:	jns    0x438b0f
  438aeb:	jns    0x438b6a
  438aed:	xchg   esi,eax
  438aee:	jmp    FWORD PTR [esi+eax*1-0x14]
  438af2:	dec    edi
  438af3:	repz push ebx
  438af6:	ret    
  438af7:	add    BYTE PTR [ebp-0x59],0xff
  438afb:	lods   eax,DWORD PTR ds:[esi]
  438afc:	or     BYTE PTR [ecx],dh
  438afe:	cli    
  438aff:	test   DWORD PTR [ebx],eax
  438b01:	mov    ah,0x84
  438b03:	rol    BYTE PTR [ebx+esi*1],0xd6
  438b07:	mov    esi,0xf9238645
  438b0c:	push   DWORD PTR [esp+eax*8-0xa]
  438b10:	inc    ebp
  438b11:	push   edi
  438b12:	in     eax,dx
  438b13:	cmp    al,0x22
  438b15:	add    al,0x42
  438b17:	sbb    ecx,DWORD PTR [edi]
  438b19:	imul   eax,DWORD PTR ds:0xeffe35e8,0x51efc3f6
  438b23:	call   eax
  438b25:	fnstsw WORD PTR [ebp+0x55]
  438b28:	push   es
  438b29:	mov    edi,0xca0f1c39
  438b2e:	inc    BYTE PTR [esp+eax*1-0x7cfffc4e]
  438b35:	test   dl,bh
  438b37:	not    al
  438b39:	add    BYTE PTR [edi-0x6a2f00df],bh
  438b3f:	jge    0x438b86
  438b41:	push   es
  438b42:	ja     0x438b33
  438b44:	cmp    al,0x23
  438b46:	popf   
  438b47:	pop    ss
  438b48:	(bad)  
  438b49:	sbb    eax,0x8df7e1d
  438b4e:	nop
  438b4f:	pop    ds
  438b50:	and    eax,0x3a3004fe
  438b55:	mov    ebp,0x8de5e26
  438b5a:	sub    ebx,DWORD PTR [ecx]
  438b5c:	stc    
  438b5d:	mov    ds:0xa0f92b71,eax
  438b62:	imul   ebx,DWORD PTR [edi],0x2351a9f9
  438b68:	stc    
  438b69:	test   al,0x49
  438b6b:	daa    
  438b6c:	stc    
  438b6d:	or     BYTE PTR [ecx+0x1b],dl
  438b70:	es add al,0xdb
  438b73:	in     eax,0x3
  438b75:	jmp    DWORD PTR [edi]
  438b77:	(bad)  
  438b79:	or     bl,ch
  438b7b:	and    BYTE PTR [eax-0x2e3e4fc],dl
  438b81:	jl     0x438b60
  438b83:	and    al,0x3a
  438b85:	shl    BYTE PTR [ebx-0x21],1
  438b88:	add    eax,DWORD PTR [eax]
  438b8a:	pop    esi
  438b8b:	jge    0x438b55
  438b8d:	sbb    al,0x8b
  438b8f:	(bad)  
  438b91:	jg     0x438b93
  438b93:	cmp    cl,BYTE PTR [edx]
  438b95:	jae    0x438b3a
  438b97:	xor    DWORD PTR [esi-0x9],0x72
  438b9b:	popf   
  438b9c:	cmp    eax,0xf8e00085
  438ba1:	or     BYTE PTR [edx+0x74940f9d],dh
  438ba7:	fwait
  438ba8:	pop    ss
  438ba9:	push   0x66ff9774
  438bae:	je     0x438b43
  438bb0:	pop    es
  438bb1:	bound  esi,QWORD PTR [edi+ecx*4+0x2f]
  438bb5:	bound  esi,QWORD PTR [ebx+ecx*4+0x37]
  438bb9:	addr16 je 0x438b43
  438bbc:	pop    ds
  438bbd:	data16 je 0x438b43
  438bc0:	add    ah,bl
  438bc2:	outs   dx,DWORD PTR ds:[esi]
  438bc3:	test   eax,0x9170dae0
  438bc8:	or     al,0xd3
  438bca:	ins    DWORD PTR es:[edi],dx
  438bcb:	mov    DWORD PTR [eax],ecx
  438bcd:	retf   
  438bce:	outs   dx,BYTE PTR ds:[esi]
  438bcf:	xchg   ecx,eax
  438bd0:	adc    al,0xc3
  438bd2:	scas   eax,DWORD PTR es:[edi]
  438bd3:	mov    ss,WORD PTR [eax]
  438bd5:	mov    ebx,0xb2fc6eb0
  438bda:	lods   eax,DWORD PTR ds:[esi]
  438bdb:	outs   dx,BYTE PTR ds:[esi]
  438bdc:	clc    
  438bdd:	stos   BYTE PTR es:[edi],al
  438bde:	scas   al,BYTE PTR es:[edi]
  438bdf:	outs   dx,BYTE PTR ds:[esi]
  438be0:	add    al,0x23
  438be2:	or     eax,0x8ce0069
  438be7:	ffreep st(7)
  438be9:	out    0x2,eax
  438beb:	sbb    al,cl
  438bed:	add    eax,0x73fb0f0d
  438bf2:	or     BYTE PTR [edi],dl
  438bf4:	add    ah,bh
  438bf6:	sbb    ch,0x6
  438bf9:	mov    dl,0x54
  438bfb:	ffreep st(7)
  438bfd:	out    0x3,eax
  438bff:	call   0x124b831
  438c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438c05:	mov    esp,0xe1e11683
  438c0b:	mov    dh,0x9c
  438c0d:	sbb    bl,BYTE PTR [edi]
  438c0f:	cmp    eax,DWORD PTR [ebp+ebp*1-0x1e21765a]
  438c16:	jmp    0x6bc33190
  438c1b:	mov    ds,WORD PTR [ebp+0x6803e706]
  438c21:	sub    eax,0x2d994466
  438c26:	aaa    
  438c27:	inc    ecx
  438c28:	push   esp
  438c29:	mov    DWORD PTR ds:0x66e0de3e,0xbbfda8bf
  438c33:	add    eax,0x3d3fe335
  438c38:	xor    al,0x41
  438c3a:	add    BYTE PTR [edx+0x5a],ah
  438c3d:	push   cs
  438c3e:	or     DWORD PTR [edi-0x67],esi
  438c41:	jns    0x438bc7
  438c43:	ja     0x438bde
  438c45:	cli    
  438c46:	(bad)  
  438c47:	call   0x29c08ee9
  438c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c4d:	sub    edx,eax
  438c4f:	sub    cl,al
  438c51:	rcr    DWORD PTR [edi+eax*1],0xda
  438c55:	push   cs
  438c56:	cmp    BYTE PTR [esp+edi*8-0x7],0x72
  438c5b:	out    dx,eax
  438c5c:	(bad)  
  438c5d:	xor    al,0xf8
  438c5f:	out    dx,al
  438c60:	test   eax,0xfc2c856f
  438c65:	stc    
  438c66:	mov    cl,0xf1
  438c68:	add    BYTE PTR [ebx],ch
  438c6a:	xchg   BYTE PTR [edx+0x2a2e9],cl
  438c70:	jmp    0x5281:0xedbfaf9e
  438c77:	mov    ebp,0x16e3a6
  438c7c:	jmp    0x24c88f1f
  438c81:	mov    esp,0x9e29b1f9
  438c86:	jmp    0x2e27643
  438c8b:	jns    0x438c85
  438c8d:	(bad)  
  438c8e:	(bad)  
  438c8f:	icebp  
  438c90:	mov    cs,ecx
  438c92:	lods   eax,DWORD PTR ds:[esi]
  438c93:	jp     0x438c74
  438c95:	cdq    
  438c96:	test   al,0x1
  438c98:	xchg   ecx,eax
  438c99:	stc    
  438c9a:	sub    bh,cl
  438c9c:	jbe    0x438c7b
  438c9e:	sbb    ch,BYTE PTR [esi-0x7ad6568c]
  438ca4:	lods   al,BYTE PTR ds:[esi]
  438ca5:	test   BYTE PTR [ebx],ch
  438ca7:	inc    esp
  438ca8:	or     bl,BYTE PTR [eax+eax*8]
  438cab:	sbb    al,0xeb
  438cad:	fld    QWORD PTR [ecx+0x43]
  438cb0:	repz sahf 
  438cb2:	add    al,BYTE PTR [eax]
  438cb4:	add    BYTE PTR [ebx+edi*2],dh
  438cb7:	cmp    eax,0x3fb64b23
  438cbc:	add    DWORD PTR [ecx],ebp
  438cbe:	scas   eax,DWORD PTR es:[edi]
  438cbf:	(bad)  
  438cc0:	push   DWORD PTR [edi+ebp*2]
  438cc3:	adc    al,ch
  438cc5:	(bad)  
  438cc6:	hlt    
  438cc7:	idiv   bh
  438cc9:	xchg   DWORD PTR [edi+ecx*1+0x1],ebp
  438ccd:	add    BYTE PTR [ecx],dh
  438ccf:	pop    ecx
  438cd0:	jl     0x438d4f
  438cd2:	adc    al,BYTE PTR [edi]
  438cd4:	jbe    0x438d39
  438cd6:	lods   al,BYTE PTR ds:[esi]
  438cd7:	cmp    al,0xff
  438cda:	sti    
  438cdb:	jmp    0x438d11
  438cdd:	rol    BYTE PTR [eax+eax*1],0x0
  438ce1:	jl     0x438cf5
  438ce3:	jns    0x438c9f
  438ce5:	ror    esi,0x2
  438ce8:	add    ecx,0x8306e547
  438cee:	out    dx,al
  438cef:	stc    
  438cf0:	ins    BYTE PTR es:[edi],dx
  438cf1:	or     esi,DWORD PTR [edi]
  438cf3:	in     eax,dx
  438cf4:	push   DWORD PTR [ebx+0x76]
  438cf7:	ficomp WORD PTR [ecx-0x8]
  438cfa:	sti    
  438cfb:	out    0xba,eax
  438cfd:	sub    esi,0xfffffff8
  438d00:	ins    BYTE PTR es:[edi],dx
  438d01:	aaa    
  438d02:	aaa    
  438d03:	in     eax,dx
  438d04:	stc    
  438d05:	je     0x438cb9
  438d07:	xlat   BYTE PTR ds:[ebx]
  438d08:	dec    ecx
  438d09:	clc    
  438d0a:	cmp    esp,edi
  438d0c:	mov    edx,0x6d032d83
  438d11:	push   es
  438d12:	sbb    al,0x3f
  438d14:	icebp  
  438d15:	call   FWORD PTR [ebx]
  438d17:	ret    
  438d18:	jp     0x438d13
  438d1a:	xor    BYTE PTR [edx-0x1],0xe7
  438d1e:	sub    bh,ah
  438d20:	idiv   bh
  438d22:	aaa    
  438d23:	xor    ecx,0x7
  438d26:	inc    ecx
  438d27:	add    eax,ebp
  438d29:	xor    DWORD PTR [edi+eiz*8-0x67623c0a],edi
  438d30:	cmp    cl,BYTE PTR [ecx]
  438d32:	add    al,dl
  438d34:	and    esp,DWORD PTR ds:0x34c44522
  438d3a:	mov    ebp,0xf9302245
  438d3f:	xor    ah,BYTE PTR [eax+0x669c15be]
  438d45:	loop   0x438dc3
  438d47:	fdivr  DWORD PTR [eax]
  438d49:	add    edi,DWORD PTR [ebp+0x1b65e2]
  438d4f:	popf   
  438d50:	sbb    ebp,edi
  438d52:	test   BYTE PTR [eax+0x38],ah
  438d55:	push   es
  438d56:	mov    dl,0x5d
  438d58:	sbb    bh,al
  438d5a:	mov    eax,0x78fd199d
  438d5f:	mov    WORD PTR [ecx],es
  438d61:	div    edx
  438d63:	jmp    0xb71c:0x8b7b821b
  438d6a:	sub    eax,0xf92e48c5
  438d6f:	rcl    BYTE PTR [edi-0x8],cl
  438d72:	mov    edi,0x7bfd199d
  438d77:	js     0x438d2b
  438d79:	inc    edx
  438d7a:	mov    edi,0xbf8c24c7
  438d7f:	push   ds
  438d80:	cmp    al,BYTE PTR [esi]
  438d82:	jge    0x438d2b
  438d84:	dec    edx
  438d85:	mov    al,0x4
  438d87:	push   ds
  438d88:	bound  ecx,QWORD PTR [esp+esi*2]
  438d8b:	lods   al,BYTE PTR ds:[esi]
  438d8c:	xchg   ebx,eax
  438d8d:	inc    esi
  438d8e:	icebp  
  438d8f:	xchg   edx,eax
  438d90:	xchg   ecx,eax
  438d91:	inc    edx
  438d92:	jge    0x438d1b
  438d94:	dec    ecx
  438d95:	mov    al,0x1
  438d97:	add    BYTE PTR [ebp+0x58],dh
  438d9a:	cs stc 
  438d9c:	jp     0x438dfb
  438d9e:	and    eax,0x35b169b1
  438da3:	test   eax,esp
  438da5:	push   ebp
  438da6:	add    al,0x43
  438da8:	mov    esi,0xb9c06602
  438dad:	add    al,0x26
  438daf:	inc    edx
  438db0:	fimul  WORD PTR [edi+eiz*8]
  438db3:	add    ebx,DWORD PTR [ebp-0x5e3fa1fe]
  438db9:	stc    
  438dba:	js     0x438d7f
  438dbc:	cmp    esp,edi
  438dbe:	jns    0x438dc3
  438dc0:	popf   
  438dc1:	add    dh,BYTE PTR [edx+0x334e351a]
  438dc7:	cmp    ah,BYTE PTR [esi+eax*4]
  438dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438dcb:	adc    DWORD PTR [ecx-0x69791752],esp
  438dd1:	adc    cl,ch
  438dd3:	scas   eax,DWORD PTR es:[edi]
  438dd4:	mov    ds:0x9c118c85,al
  438dd9:	test   eax,0x1aba2ee4
  438dde:	addr16 xor dh,ah
  438de1:	sub    DWORD PTR [esi],esp
  438de3:	clc    
  438de4:	sub    al,BYTE PTR [ebx]
  438de6:	out    0x3,eax
  438de8:	popa   
  438de9:	out    dx,al
  438dea:	outs   dx,DWORD PTR ds:[esi]
  438deb:	inc    esi
  438dec:	sbb    bl,BYTE PTR ds:0x86128ae3
  438df2:	enter  0x4809,0x2c
  438df6:	fldcw  WORD PTR [esi+0xcc085af]
  438dfc:	add    BYTE PTR [esi],dh
  438dfe:	loop   0x438e65
  438e00:	cmp    esi,DWORD PTR [eax-0x4d7b324b]
  438e06:	add    al,0x33
  438e08:	adc    dh,BYTE PTR [ebp-0x6bc66631]
  438e0e:	inc    ebp
  438e0f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e12:	scas   eax,DWORD PTR es:[edi]
  438e13:	fld    QWORD PTR [edx+edx*4+0x75020afa]
  438e1a:	mov    edi,0x45743979
  438e1f:	(bad)  
  438e20:	cld    
  438e21:	outs   dx,BYTE PTR ds:[esi]
  438e22:	sub    DWORD PTR [eax],eax
  438e24:	jbe    0x438e3e
  438e26:	lds    edx,FWORD PTR ds:0x7d0623e8
  438e2c:	lods   al,BYTE PTR ds:[esi]
  438e2d:	inc    ecx
  438e2e:	daa    
  438e2f:	mov    esi,0xf1226
  438e34:	jmp    0xa4c890d7
  438e39:	cmp    edx,edi
  438e3b:	mov    cl,0xa9
  438e3d:	lahf   
  438e3e:	in     eax,dx
  438e3f:	mov    eax,0x79029ee9
  438e44:	fdiv   DWORD PTR [esi-0x3a]
  438e47:	repz cs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  438e4b:	jp     0x438e4c
  438e4d:	popf   
  438e4e:	lods   al,BYTE PTR ds:[esi]
  438e4f:	sbb    eax,0xf933a411
  438e54:	push   ss
  438e55:	pusha  
  438e56:	in     eax,dx
  438e57:	mov    edi,0x7c029ee9
  438e5c:	fsub   QWORD PTR [edi]
  438e5e:	push   0x9d0013bf
  438e63:	cmp    DWORD PTR [edi+0x7cfbbe6a],0x1b59bf3
  438e6d:	rcl    DWORD PTR [ecx+0x59def934],1
  438e73:	sbb    ah,dl
  438e75:	fiadd  DWORD PTR [ebp-0x5cdb7ad5]
  438e7b:	sub    DWORD PTR [edx+ecx*1+0x20],eax
  438e7f:	lds    ebx,FWORD PTR [ebx+ebp*8]
  438e82:	pop    ecx
  438e83:	inc    ebx
  438e84:	inc    ebx
  438e85:	rcr    DWORD PTR [esi+0x11e90002],cl
  438e8b:	lds    ebx,FWORD PTR [esi+esi*8]
  438e8e:	or     al,0xc3
  438e90:	(bad)  
  438e91:	fist   DWORD PTR ds:0x45e90003
  438e97:	adc    eax,ebp
  438e99:	jecxz  0x438e4d
  438e9b:	sub    ecx,edi
  438e9d:	add    BYTE PTR [edi],al
  438e9f:	jno    0x438eb0
  438ea1:	add    eax,0x7d7afc68
  438ea6:	dec    edx
  438ea7:	add    esi,DWORD PTR [edi+0x2]
  438eaa:	pop    ds
  438eab:	cs loope 0x438e63
  438eae:	cli    
  438eaf:	jmp    0xffff:0xbeb1c3f6
  438eb6:	xor    al,0x70
  438eb8:	push   ds
  438eb9:	mov    DWORD PTR [esi-0x3c],esi
  438ebc:	loope  0x438ec2
  438ebe:	lods   eax,DWORD PTR ds:[esi]
  438ebf:	les    edi,FWORD PTR [edx-0x1f]
  438ec2:	inc    ebx
  438ec3:	jg     0x438eb7
  438ec5:	or     al,0x0
  438ec7:	jmp    0x3d3d09c2
  438ecc:	jo     0x438ed8
  438ece:	call   0x3a806b
  438ed3:	(bad)  
  438ed4:	jle    0x438ec8
  438ed6:	movaps XMMWORD PTR [edx],xmm0
  438ed9:	call   0xf72e3967
  438ede:	ret    
  438edf:	mov    WORD PTR [edi-0x14],gs
  438ee2:	push   ebx
  438ee4:	jnp    0x438f23
  438ee6:	sbb    dh,ch
  438ee8:	push   0x1f39831c
  438eed:	sti    
  438eee:	ret    0x420b
  438ef1:	adc    eax,DWORD PTR [eax]
  438ef3:	les    eax,FWORD PTR [ebx]
  438ef5:	add    BYTE PTR [ebx-0x49f7dc87],cl
  438efb:	je     0x438efa
  438efd:	xor    al,0xbf
  438eff:	les    eax,FWORD PTR [ebx]
  438f01:	add    BYTE PTR [edi-0x2b],bh
  438f04:	fistp  DWORD PTR [edi+0x7aeff3f3]
  438f0a:	jge    0x438ed6
  438f0c:	sub    BYTE PTR [edi+0x27],dh
  438f0f:	sub    al,0x53
  438f11:	out    dx,eax
  438f12:	push   DWORD PTR [ebx]
  438f14:	ret    
  438f15:	xor    al,0xc0
  438f17:	popf   
  438f18:	sbb    ebp,edi
  438f1a:	inc    DWORD PTR [ecx]
  438f1c:	xor    al,0x8c
  438f1e:	mov    esi,0x8700935c
  438f23:	pop    esp
  438f24:	pushf  
  438f25:	and    cl,BYTE PTR [ecx]
  438f27:	push   ds
  438f28:	mov    bl,0x6
  438f2a:	jae    0x438f2c
  438f2c:	xchg   esi,eax
  438f2d:	pushf  
  438f2e:	cmp    al,BYTE PTR [edi]
  438f30:	rcl    DWORD PTR [edi],1
  438f32:	and    eax,0x30c84b2e
  438f37:	mov    ebp,0xf92cf635
  438f3c:	inc    edx
  438f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438f3e:	mov    esi,0xde569c15
  438f43:	jl     0x438f1d
  438f45:	cld    
  438f46:	std    
  438f47:	mov    esp,0x175662
  438f4c:	popf   
  438f4d:	sbb    ebp,edi
  438f4f:	test   BYTE PTR [eax+0x3c],ah
  438f52:	add    dh,BYTE PTR [edx-0x4707e5a3]
  438f58:	popf   
  438f59:	sbb    ebp,edi
  438f5b:	js     0x438f09
  438f5d:	add    ebx,ecx
  438f5f:	in     al,dx
  438f60:	cli    
  438f61:	(bad)  
  438f62:	jl     0x438fdf
  438f64:	mov    esp,DWORD PTR [eax]
  438f66:	mov    bl,0x4d
  438f68:	cmc    
  438f69:	sub    al,0x30
  438f6b:	stc    
  438f6c:	loop   0x438f49
  438f6e:	idiv   BYTE PTR [edi+0x7bfd199d]
  438f74:	pop    eax
  438f75:	mov    dl,0x3e
  438f77:	mov    edi,0xbf8c14b7
  438f7c:	push   ds
  438f7d:	cmp    al,BYTE PTR [edx]
  438f7f:	jge    0x438f38
  438f81:	sub    al,0xb0
  438f83:	add    ebp,eax
  438f85:	cmp    BYTE PTR [eax],dh
  438f87:	stc    
  438f88:	stos   BYTE PTR es:[edi],al
  438f89:	pop    ebx
  438f8a:	jle    0x438f82
  438f8c:	nop
  438f8d:	out    dx,al
  438f8e:	stc    
  438f8f:	out    0x0,eax
  438f91:	jo     0x438f96
  438f93:	pushf  
  438f94:	ss xchg esp,eax
  438f96:	inc    edx
  438f97:	cmp    WORD PTR [edi-0x757d0951],dx
  438f9e:	add    edx,DWORD PTR [ebx]
  438fa0:	sbb    edi,eax
  438fa2:	sub    ebp,edi
  438fa4:	mov    eax,0x30a71a8c
  438fa9:	fs cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  438fac:	sub    BYTE PTR [ebx-0xa],0xf3
  438fb0:	or     bl,al
  438fb2:	sub    ebp,edi
  438fb4:	mov    bh,0x9c
  438fb6:	sbb    dl,BYTE PTR [edi+0x26264430]
  438fbc:	sub    esp,DWORD PTR [eax]
  438fbe:	xor    DWORD PTR [edx+0x36],ecx
  438fc1:	and    al,al
  438fc3:	fadd   QWORD PTR [esi+ebx*8]
  438fc6:	loope  0x43902d
  438fc8:	ror    BYTE PTR [ecx+0x51472600],0x37
  438fcf:	push   DWORD PTR [ecx+ebx*1-0x62fc18da]
  438fd6:	add    ah,bh
  438fd8:	add    ebx,DWORD PTR [ebp+0x839702]
  438fde:	adc    edx,DWORD PTR es:[ebx]
  438fe1:	popf   
  438fe2:	add    dh,bh
  438fe4:	mov    cl,0xf1
  438fe6:	and    eax,0x29d03e7
  438feb:	out    0x3,eax
  438fed:	popf   
  438fee:	add    dh,BYTE PTR [ecx-0x5cda2782]
  438ff4:	adc    DWORD PTR [eax],eax
  438ff6:	popf   
  438ff7:	add    dl,BYTE PTR [ebx]
  438ff9:	mov    ah,0xc9
  438ffb:	and    eax,0x29d03e7
  439000:	out    0x3,eax
  439002:	popf   
  439003:	add    cl,BYTE PTR [ebx]
  439005:	mov    dh,BYTE PTR [eax-0x62ec18db]
  43900b:	add    al,BYTE PTR [eax]
  43900d:	gs in  al,dx
  43900f:	es stc 
  439011:	jmp    0xe94392b4
  439016:	sahf   
  439017:	add    al,BYTE PTR [eax]
  439019:	jg     0x43902f
  43901b:	daa    
  43901c:	stc    
  43901d:	xor    DWORD PTR [edx+eax*1+0x262c0d00],ebp
  439024:	stc    
  439025:	jmp    0xe94392c8
  43902a:	sahf   
  43902b:	add    al,BYTE PTR [eax]
  43902d:	lea    edx,[edi+eiz*1]
  439030:	stc    
  439031:	and    DWORD PTR [edx+eax*1+0x260c5100],ebp
  439038:	stc    
  439039:	jmp    0xe94392dc
  43903e:	sahf   
  43903f:	add    al,BYTE PTR [eax]
  439041:	jmp    0x439065
  439043:	daa    
  439044:	stc    
  439045:	jge    0x438fd3
  439047:	add    al,BYTE PTR [eax]
  439049:	xchg   ecx,eax
  43904a:	sti    
  43904b:	and    eax,0x29ee9f9
  439050:	add    cl,ch
  439052:	sahf   
  439053:	add    al,BYTE PTR [eax]
  439055:	addr16 and eax,0x95f927
  43905b:	cwde   
  43905c:	add    al,BYTE PTR [eax]
  43905e:	or     DWORD PTR [ecx+0x26],ecx
  439061:	stc    
  439062:	jmp    0xe9439305
  439067:	sahf   
  439068:	add    al,BYTE PTR [eax]
  43906a:	dec    edi
  43906b:	and    ah,BYTE PTR [edi]
  43906d:	stc    
  43906e:	inc    ebp
  43906f:	mov    DWORD PTR [edx],eax
  439071:	add    BYTE PTR ds:0xe9f9260a,al
  439077:	sahf   
  439078:	add    al,BYTE PTR [eax]
  43907a:	jmp    0x3143931d
  43907f:	sbb    esp,DWORD PTR [edi]
  439081:	stc    
  439082:	cdq    
  439083:	stos   DWORD PTR es:[edi],eax
  439084:	add    al,BYTE PTR [eax]
  439086:	add    BYTE PTR [eax],bl
  439088:	jno    0x439086
  43908a:	push   DWORD PTR [eax+eax*1+0xb40000]
  439091:	add    BYTE PTR [eax],al
  439093:	nop
  439094:	jg     0x439091
  439096:	dec    DWORD PTR [eax+edx*1]
  439099:	add    BYTE PTR [eax],al
  43909b:	or     al,0x55
  43909d:	cld    
  43909e:	push   DWORD PTR [eax+eax*1+0x0]
  4390a2:	add    BYTE PTR [eax+eax*1-0x6ed00000],al
  4390a9:	sti    
  4390aa:	call   DWORD PTR [eax-0x6300000d]
  4390b0:	jno    0x4390ae
  4390b2:	inc    DWORD PTR [eax+eax*1+0x0]
  4390b6:	add    BYTE PTR [eax+eax*1+0x0],al
  4390ba:	add    ah,dh
  4390bc:	nop
  4390bd:	sti    
  4390be:	inc    DWORD PTR [eax]
  4390c0:	mov    al,ds:0xec000011
  4390c5:	jb     0x4390c3
  4390c7:	inc    DWORD PTR [eax+eax*1+0x0]
  4390cb:	add    BYTE PTR [eax+eax*1],dh
  4390ce:	add    BYTE PTR [eax],al
  4390d0:	mov    dh,0x90
  4390d2:	sti    
  4390d3:	jmp    DWORD PTR [eax-0x1bffffef]
  4390d9:	jo     0x4390d7
  4390db:	push   esp
  4390dd:	(bad)  
  4390de:	(bad)  
  4390df:	push   esp
  4390e1:	(bad)  
  4390e2:	(bad)  
  4390e3:	call   FWORD PTR [eax+edx*4-0x5]
  4390e7:	dec    DWORD PTR [eax+0x1400000f]
  4390ed:	push   esi
  4390ee:	cld    
  4390ef:	push   esp
  4390f1:	(bad)  
  4390f2:	(bad)  
  4390f3:	inc    esp
  4390f5:	(bad)  
  4390f6:	(bad)  
  4390f7:	inc    DWORD PTR [edx-0x67000474]
  4390fd:	or     BYTE PTR [eax],al
  4390ff:	add    BYTE PTR [ebp-0x620002e7],bl
  439105:	sbb    ebp,edi
  439107:	call   FWORD PTR [ebp-0x620002e7]
  43910d:	sbb    ebp,edi
  43910f:	call   FWORD PTR [ebp-0x620002e7]
  439115:	xlat   BYTE PTR ds:[ebx]
  439116:	test   ch,bh
  439118:	xchg   edx,eax
  439119:	cmc    
  43911a:	test   ch,bh
  43911c:	mov    al,BYTE PTR [ebx]
  43911e:	test   ebp,edi
  439120:	and    BYTE PTR [edi+0x7a00fd84],0xbf
  439127:	test   ch,bh
  439129:	jb     0x439184
  43912b:	test   ebp,edi
  43912d:	push   0xffffff87
  43912f:	test   ebp,edi
  439131:	bound  esi,QWORD PTR [ebx-0x7b]
  439134:	std    
  439135:	pop    edx
  439136:	stos   DWORD PTR es:[edi],eax
  439137:	test   ch,bh
  439139:	push   edx
  43913a:	das    
  43913b:	jne    0x43913a
  43913d:	dec    edx
  43913e:	stc    
  43913f:	jnp    0x43913e
  439141:	inc    edx
  439142:	pop    es
  439143:	jl     0x439142
  439145:	cmp    al,BYTE PTR [ebp+0x3732fd75]
  43914b:	jne    0x43914a
  43914d:	sub    bh,BYTE PTR [edi]
  43914f:	jne    0x43914e
  439151:	and    al,bh
  439153:	jnp    0x439152
  439155:	sbb    bh,BYTE PTR [edi+0x7c]
  439158:	std    
  439159:	adc    dl,bh
  43915b:	jnp    0x43915a
  43915d:	or     ch,bl
  43915f:	jnp    0x43915e
  439161:	add    al,BYTE PTR [ecx]
  439163:	jl     0x439162
  439165:	cli    
  439166:	push   cs
  439167:	jl     0x439166
  439169:	repnz inc edx
  43916b:	jl     0x43916a
  43916d:	jmp    0x7c86:0xe2fd7c6a
  439174:	std    
  439175:	ficomp DWORD PTR [esi+0x1d2fd7a]
  43917b:	mov    DWORD PTR [eax+ecx*8+0x22],edi
  43917f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439180:	jl     0x439142
  439182:	and    bh,BYTE PTR [ebx-0x40dd4784]
  439188:	jl     0x43918a
  43918a:	mov    al,0x22
  43918c:	mov    edi,0xe122a87c
  439191:	jge    0x439133
  439193:	and    cl,bh
  439195:	jge    0x43912f
  439197:	and    dl,BYTE PTR [ebx]
  439199:	mov    edx,DWORD PTR [eax-0x62fc18de]
  43919f:	add    bl,BYTE PTR [ebp-0x4cdd7f7f]
  4391a5:	cmp    DWORD PTR [eax+0x22],0x2270819d
  4391ac:	xor    eax,0x57226881
  4391b1:	and    DWORD PTR [eax+0x22],0x225881ed
  4391b8:	add    eax,DWORD PTR [edx-0x7cfcddb0]
  4391be:	dec    eax
  4391bf:	and    ah,bh
  4391c1:	add    ebx,DWORD PTR [ebp+0x38806102]
  4391c7:	and    dh,ch
  4391c9:	xor    BYTE PTR [eax],0x22
  4391cc:	aas    
  4391cd:	jg     0x4391f7
  4391cf:	and    ah,BYTE PTR [ebx-0x80]
  4391d2:	and    BYTE PTR [edx],ah
  4391d4:	scas   eax,DWORD PTR es:[edi]
  4391d5:	sbb    BYTE PTR [eax],0x22
  4391d8:	ret    
  4391d9:	adc    BYTE PTR [eax],0x22
  4391dc:	mov    edi,0xad220880
  4391e1:	add    BYTE PTR [eax],0x22
  4391e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4391e5:	cmp    al,0x21
  4391e8:	rol    DWORD PTR [eax-0x7f30de10],cl
  4391ee:	add    al,ch
  4391f0:	and    DWORD PTR [edi],ecx
  4391f2:	jg     0x4391d4
  4391f4:	and    DWORD PTR [eax],eax
  4391f6:	push   ebx
  4391f7:	sbb    eax,0x5221f920
  4391fc:	pop    ds
  4391fd:	stc    
  4391fe:	rcr    DWORD PTR ds:0x9ee9f920,0x2
  439205:	add    BYTE PTR [ecx+0xe],bh
  439208:	and    cl,bh
  43920a:	jmp    0x474394ad
  43920f:	clc    
  439210:	push   ds
  439211:	stc    
  439212:	pop    ecx
  439213:	lock push ds
  439215:	stc    
  439216:	(bad)
  43921a:	jae    0x43925c
  43921c:	push   ds
  43921d:	stc    
  43921e:	mov    bh,0x38
  439220:	push   ds
  439221:	stc    
  439222:	xchg   DWORD PTR [eax],esi
  439224:	push   ds
  439225:	stc    
  439226:	fwait
  439227:	dec    eax
  439228:	push   ds
  439229:	stc    
  43922a:	pop    DWORD PTR [eax+0x1e]
  43922d:	stc    
  43922e:	repz cmp bl,BYTE PTR [esi]
  439231:	stc    
  439232:	xlat   BYTE PTR ds:[ebx]
  439233:	xor    bl,BYTE PTR [esi]
  439235:	stc    
  439236:	iret   
  439237:	or     bl,BYTE PTR [esi]
  439239:	stc    
  43923a:	mov    bh,0x2
  43923c:	push   ds
  43923d:	stc    
  43923e:	mov    bl,0xfa
  439240:	sbb    eax,0x1df2c5f9
  439245:	stc    
  439246:	fisttp WORD PTR [edx]
  439248:	push   ds
  439249:	stc    
  43924a:	gs in  eax,dx
  43924c:	sbb    eax,0x1ded5df9
  439251:	stc    
  439252:	test   DWORD PTR [eax],eax
  439254:	in     eax,dx
  439255:	sbb    eax,0x1e4d29f9
  43925a:	stc    
  43925b:	or     eax,0x1df91e4d
  439260:	dec    ebp
  439261:	push   ds
  439262:	stc    
  439263:	stc    
  439264:	xor    ebx,DWORD PTR [esi]
  439266:	stc    
  439267:	ret    
  439268:	dec    ebx
  439269:	push   ds
  43926a:	stc    
  43926b:	iret   
  43926c:	inc    ebx
  43926d:	push   ds
  43926e:	stc    
  43926f:	add    BYTE PTR [esi],al
  439271:	jo     0x43926f
  439273:	call   DWORD PTR [esi]
  439275:	jo     0x439273
  439277:	call   DWORD PTR [esi+0x70]
  43927a:	cld    
  43927b:	(bad)  
  43927c:	cmp    al,0x71
  43927e:	cld    
  43927f:	dec    DWORD PTR [eax+0x70]
  439282:	cld    
  439283:	inc    DWORD PTR [edx+0x70]
  439286:	cld    
  439287:	jmp    DWORD PTR [eax]
  439289:	jo     0x439287
  43928b:	dec    DWORD PTR [esi]
  43928d:	jo     0x43928b
  43928f:	push   edx
  439291:	outs   dx,DWORD PTR ds:[esi]
  439292:	cld    
  439293:	inc    DWORD PTR [eax]
  439295:	jo     0x439293
  439297:	call   FWORD PTR [eax+0x71]
  43929a:	cld    
  43929b:	call   edx
  43929d:	ins    DWORD PTR es:[edi],dx
  43929e:	cld    
  43929f:	call   FWORD PTR [esp+edx*2+0x5266fffc]
  4392a6:	cld    
  4392a7:	dec    eax
  4392a9:	push   esp
  4392aa:	cld    
  4392ab:	push   DWORD PTR [esp+edx*2+0x5494fffc]
  4392b2:	cld    
  4392b3:	call   FWORD PTR [esi+0xfffc54]
  4392b9:	mov    esp,0xe2fffc51
  4392be:	push   ecx
  4392bf:	cld    
  4392c0:	push   DWORD PTR [edx]
  4392c2:	push   edx
  4392c3:	cld    
  4392c4:	push   DWORD PTR [eax+0x51]
  4392c7:	cld    
  4392c8:	jmp    esp
  4392ca:	push   ecx
  4392cb:	cld    
  4392cc:	call   esi
  4392ce:	push   ecx
  4392cf:	cld    
  4392d0:	jmp    edx
  4392d2:	push   ecx
  4392d3:	cld    
  4392d4:	dec    DWORD PTR [edx+0x53]
  4392d7:	cld    
  4392d8:	call   DWORD PTR [esi]
  4392da:	push   ebx
  4392db:	cld    
  4392dc:	(bad)  
  4392dd:	cmp    al,0x53
  4392df:	cld    
  4392e0:	call   DWORD PTR [ebx+edx*2]
  4392e3:	cld    
  4392e4:	jmp    FWORD PTR [edx]
  4392e6:	push   ebx
  4392e7:	cld    
  4392e8:	call   FWORD PTR [ebp-0xd03505f]
  4392ee:	xchg   ebx,eax
  4392ef:	scas   eax,DWORD PTR es:[edi]
  4392f0:	cld    
  4392f1:	jmp    0xafc1:0xe2fcafb1
  4392f8:	cld    
  4392f9:	(bad)  
  4392fb:	scas   eax,DWORD PTR es:[edi]
  4392fc:	cld    
  4392fd:	ror    BYTE PTR ds:0x33cafcb0,cl
  439303:	test   eax,0xa923c2fc
  439308:	cld    
  439309:	mov    edx,0xb2fd7d27
  43930e:	sub    eax,0xe9aafd7d
  439313:	cmp    ebp,0xffffffa2
  439316:	stc    
  439317:	cmp    ebp,0xffffff9a
  43931a:	lahf   
  43931b:	(bad)  
  43931c:	std    
  43931d:	add    BYTE PTR [edx-0x7502724d],dl
  439323:	scas   eax,DWORD PTR es:[edi]
  439324:	(bad)  
  439325:	std    
  439326:	and    bl,0x8d
  439329:	std    
  43932a:	jp     0x439339
  43932c:	mov    ?,ebp
  43932e:	jb     0x439311
  439330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439331:	cld    
  439332:	push   0xffffffe7
  439334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439335:	cld    
  439336:	bound  esi,QWORD PTR [ebx]
  439338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439339:	cld    
  43933a:	pop    edx
  43933b:	xor    eax,0x3f52fca6
  439340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439341:	cld    
  439342:	dec    edx
  439343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439345:	cld    
  439346:	inc    edx
  439347:	iret   
  439348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439349:	cld    
  43934a:	cmp    dl,bl
  43934c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43934d:	cld    
  43934e:	xor    bh,ch
  439350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439351:	cld    
  439352:	sub    ch,cl
  439354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439355:	cld    
  439356:	and    dh,BYTE PTR [ebx-0x5a]
  439359:	cld    
  43935a:	sbb    dh,BYTE PTR [edi-0x46ed035b]
  439360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439361:	cld    
  439362:	or     al,BYTE PTR [edx]
  439364:	mov    ds:0x8b1f01a9,eax
  439369:	test   eax,0xa9ad1ef9
  43936e:	icebp  
  43936f:	push   ds
  439370:	popf   
  439371:	test   eax,0xa9bf1ee9
  439376:	loope  0x439396
  439378:	iret   
  439379:	test   eax,0xa9cd1ed9
  43937e:	rcr    DWORD PTR [esi],1
  439380:	fild   QWORD PTR [ecx-0x24e13700]
  439386:	lods   al,BYTE PTR ds:[esi]
  439387:	rcr    DWORD PTR [esi],0xc7
  43938a:	lods   al,BYTE PTR ds:[esi]
  43938b:	mov    ecx,0xb1aca11e
  439390:	push   ds
  439391:	(bad)  
  439392:	lods   al,BYTE PTR ds:[esi]
  439393:	test   eax,0xa1ac851e
  439398:	push   ds
  439399:	push   ecx
  43939a:	lods   al,BYTE PTR ds:[esi]
  43939b:	cdq    
  43939c:	push   ds
  43939d:	pop    ebp
  43939e:	lods   al,BYTE PTR ds:[esi]
  43939f:	xchg   ecx,eax
  4393a0:	push   ds
  4393a1:	sub    DWORD PTR [ebp-0x52eee177],ebp
  4393a7:	sbb    DWORD PTR [esi],0x1e79ad39
  4393ad:	ret    
  4393ae:	lods   al,BYTE PTR ds:[esi]
  4393af:	jno    0x4393cf
  4393b1:	and    ebp,DWORD PTR [ebp-0x5326e197]
  4393b7:	popa   
  4393b8:	push   ds
  4393b9:	in     eax,dx
  4393ba:	lods   al,BYTE PTR ds:[esi]
  4393bb:	pop    ecx
  4393bc:	push   ds
  4393bd:	jnp    0x43936a
  4393bf:	push   ecx
  4393c0:	push   ds
  4393c1:	sub    DWORD PTR [ebx-0x54c4e1b7],0xab211e41
  4393cb:	cmp    DWORD PTR [esi],ebx
  4393cd:	lea    ebp,[ebx-0x5486e1cf]
  4393d3:	sub    DWORD PTR [esi],ebx
  4393d5:	pop    ebx
  4393d6:	stos   DWORD PTR es:[edi],eax
  4393d7:	and    DWORD PTR [esi],ebx
  4393d9:	arpl   WORD PTR [ebx-0x44ffe1e7],bp
  4393df:	inc    esi
  4393e0:	pop    ds
  4393e1:	stc    
  4393e2:	lea    esi,[esi]
  4393e4:	pop    ds
  4393e5:	stc    
  4393e6:	mov    ch,0x0
  4393e8:	ss pop ds
  4393ea:	stc    
  4393eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4393ec:	inc    esi
  4393ed:	pop    ds
  4393ee:	stc    
  4393ef:	fld    QWORD PTR [esi+0x1f]
  4393f2:	stc    
  4393f3:	leave  
  4393f4:	ss pop ds
  4393f6:	stc    
  4393f7:	fnsave [esi]
  4393f9:	pop    ds
  4393fa:	stc    
  4393fb:	jmp    0xfa3cb306
  439400:	or     BYTE PTR [edi],bl
  439402:	stc    
  439403:	movlps QWORD PTR [edi],xmm3
  439406:	stc    
  439407:	mov    ecx,0xa1f91f08
  43940c:	lock push ds
  43940e:	stc    
  43940f:	mov    eax,ebp
  439411:	push   ds
  439412:	stc    
  439413:	popa   
  439414:	lock push ds
  439416:	stc    
  439417:	push   ebp
  439418:	call   0x50638d3b
  43941d:	push   ds
  43941e:	stc    
  43941f:	and    eax,0x29f91e48
  439424:	push   eax
  439425:	push   ds
  439426:	stc    
  439427:	fisttp QWORD PTR [ecx+0x1e]
  43942a:	stc    
  43942b:	(bad)  
  43942c:	xor    DWORD PTR [esi],ebx
  43942e:	stc    
  43942f:	jmp    FWORD PTR [ecx]
  439431:	push   ds
  439432:	stc    
  439433:	jmp    0x923cb269
  439438:	sub    ebx,DWORD PTR [esi]
  43943a:	stc    
  43943b:	icebp  
  43943c:	or     BYTE PTR [esi],bl
  43943e:	stc    
  43943f:	cdq    
  439440:	or     ebx,DWORD PTR [esi]
  439442:	stc    
  439443:	jmp    0xdd4396e6
  439448:	das    
  439449:	pop    ds
  43944a:	stc    
  43944b:	leave  
  43944c:	add    BYTE PTR [edi],cl
  43944e:	pop    ds
  43944f:	stc    
  439450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439451:	nop    ecx
  439454:	jmp    0x4396f7
  439459:	sub    al,0x1
  43945b:	add    BYTE PTR [eax-0x7ffffef3],al
  439461:	push   es
  439462:	add    DWORD PTR [eax],eax
  439464:	add    BYTE PTR [edx],0x1
  439467:	add    BYTE PTR [eax+0xf4],al
  43946d:	mov    al,0x9b
  43946f:	cli    
  439470:	dec    DWORD PTR [edx-0x65]
  439473:	cli    
  439474:	call   FWORD PTR [esi-0x65]
  439477:	cli    
  439478:	push   esp
  43947a:	add    BYTE PTR [eax],al
  43947c:	add    BYTE PTR [esi-0x65],dh
  43947f:	cli    
  439480:	dec    DWORD PTR [edx-0x66]
  439483:	cli    
  439484:	call   FWORD PTR [esi]
  439486:	call   0xfffa:0x9b80fffa
  43948d:	sbb    BYTE PTR [ebx-0x64690006],0xfa
  439494:	jmp    DWORD PTR [edx-0x3d000565]
  43949a:	cdq    
  43949b:	cli    
  43949c:	inc    DWORD PTR [eax+0x58fffa9b]
  4394a2:	call   0xfffa:0x9a32fffa
  4394a9:	ss call 0xfffa:0x99eafffa
  4394b1:	add    dh,ah
  4394b3:	cdq    
  4394b4:	cli    
  4394b5:	dec    eax
  4394b7:	cdq    
  4394b8:	cli    
  4394b9:	call   FWORD PTR [eax+ebx*4-0x67510006]
  4394c0:	cli    
  4394c1:	jmp    FWORD PTR [edx-0x55000568]
  4394c7:	cwde   
  4394c8:	cli    
  4394c9:	dec    DWORD PTR [edx+0x0]
  4394cc:	add    BYTE PTR [eax-0x565fc],al
  4394d2:	popf   
  4394d3:	div    DWORD PTR [ebp-0x3]
  4394d6:	sub    ch,BYTE PTR [edx]
  4394d8:	std    
  4394d9:	call   FWORD PTR [ebp+0x1afd77d9]
  4394df:	sub    bh,ch
  4394e1:	call   FWORD PTR [ebp+0xafd8179]
  4394e7:	adc    al,BYTE PTR [ecx-0x7ecdfd03]
  4394ed:	std    
  4394ee:	cli    
  4394ef:	add    DWORD PTR [eax-0x7ed20d03],ecx
  4394f5:	std    
  4394f6:	jmp    0x7fe5:0xe2fd791b
  4394fd:	std    
  4394fe:	fucompp 
  439500:	jg     0x4394ff
  439502:	rcr    cl,cl
  439504:	jg     0x439503
  439506:	retf   0x7fc3
  439509:	std    
  43950a:	ret    0x808f
  43950d:	std    
  43950e:	mov    edx,0xb2fd80a1
  439513:	mov    edi,0xaa00fd80
  439518:	iret   
  439519:	cmp    ch,0xa2
  43951c:	aad    0x80
  43951e:	std    
  43951f:	call   0x8101:0x92fd80ff
  439526:	std    
  439527:	mov    dh,BYTE PTR [ebx]
  439529:	cmp    ch,0x82
  43952c:	sub    DWORD PTR [edx+0x7fa97afd],eax
  439532:	std    
  439533:	jb     0x4394d2
  439535:	jg     0x439534
  439537:	push   0xffffffc5
  439539:	jg     0x439538
  43953b:	bound  ecx,QWORD PTR ds:0x635afd80
  439541:	cmp    ch,0x52
  439544:	jnp    0x4394c6
  439546:	std    
  439547:	dec    edx
  439548:	jg     0x4394ca
  43954a:	std    
  43954b:	inc    edx
  43954c:	add    ch,bl
  43954e:	cmp    BYTE PTR [eax],0x1b
  439551:	cmc    
  439552:	xor    BYTE PTR [eax],0x1b
  439555:	pop    es
  439556:	sub    DWORD PTR [eax],0x2080fb1b
  43955c:	sbb    eax,DWORD PTR [ebx]
  43955e:	sbb    DWORD PTR [eax],0x1080af1b
  439564:	sbb    ecx,DWORD PTR [edi-0x40e4f780]
  43956a:	add    BYTE PTR [eax],0x1b
  43956d:	fwait
  43956e:	cmp    al,0x1a
  439571:	ret    
  439572:	xor    al,0x1a
  439575:	fild   WORD PTR [edx-0x7dece518]
  43957b:	add    al,ah
  43957d:	sbb    cl,BYTE PTR [ebx]
  43957f:	sbb    al,0x1a
  439582:	pop    ds
  439583:	adc    al,0x1a
  439586:	pop    ds
  439587:	or     al,0x1a
  43958a:	sub    eax,0x8d1ac082
  43958f:	cmp    DWORD PTR [eax-0x4f7e86e6],0xa881631a
  439599:	sbb    cl,BYTE PTR [edi-0x7e]
  43959c:	mov    al,ds:0x987f751a
  4395a1:	sbb    dh,BYTE PTR [ecx]
  4395a3:	adc    BYTE PTR [eax-0x777dbce6],0x1a
  4395aa:	inc    edi
  4395ab:	add    BYTE PTR [eax+0x7882351a],0x1a
  4395b2:	and    eax,DWORD PTR [edx-0x7beee590]
  4395b8:	push   0x6083591a
  4395bd:	sbb    ah,BYTE PTR [ebx-0x7d]
  4395c0:	pop    eax
  4395c1:	sbb    dh,BYTE PTR [edi]
  4395c3:	adc    DWORD PTR [eax+0x1a],0x0
  4395c7:	stos   DWORD PTR es:[edi],eax
  4395c8:	push   ds
  4395c9:	sbb    cl,bh
  4395cb:	fwait
  4395cc:	push   ds
  4395cd:	sbb    cl,bh
  4395cf:	dec    ebx
  4395d0:	push   ds
  4395d1:	sbb    cl,bh
  4395d3:	push   ebp
  4395d4:	push   ds
  4395d5:	sbb    cl,bh
  4395d7:	out    dx,eax
  4395d8:	and    DWORD PTR [eax],ebx
  4395da:	stc    
  4395db:	icebp  
  4395dc:	sbb    DWORD PTR [eax],ebx
  4395de:	stc    
  4395df:	cmp    eax,0xf9182000
  4395e4:	push   ecx
  4395e5:	sbb    BYTE PTR [eax],bl
  4395e7:	stc    
  4395e8:	adc    esp,DWORD PTR [eax]
  4395ea:	sbb    cl,bh
  4395ec:	and    ebx,DWORD PTR [eax]
  4395ee:	sbb    cl,bh
  4395f0:	and    BYTE PTR gs:[eax],bl
  4395f3:	stc    
  4395f4:	push   ecx
  4395f5:	sbb    BYTE PTR [eax],bl
  4395f7:	stc    
  4395f8:	jae    0x43961a
  4395fa:	sbb    cl,bh
  4395fc:	pop    ebp
  4395fd:	sbb    BYTE PTR [eax],bl
  4395ff:	stc    
  439600:	xchg   DWORD PTR [eax],esp
  439602:	sbb    cl,bh
  439604:	(bad)  
  439605:	sbb    BYTE PTR [eax],bl
  439607:	stc    
  439608:	xchg   ebx,eax
  439609:	and    BYTE PTR [eax],bl
  43960b:	stc    
  43960c:	popf   
  43960d:	sbb    BYTE PTR [eax],bl
  43960f:	stc    
  439610:	and    eax,0x15f91823
  439615:	sbb    ebx,DWORD PTR [eax]
  439617:	stc    
  439618:	mov    db3,eax
  43961b:	stc    
  43961c:	sti    
  43961d:	sbb    BYTE PTR [eax],bl
  43961f:	stc    
  439620:	(bad)  
  439621:	push   ds
  439622:	pop    ss
  439623:	stc    
  439624:	iret   
  439625:	push   ds
  439626:	pop    ss
  439627:	stc    
  439628:	xchg   ebx,eax
  439629:	push   ds
  43962a:	pop    ss
  43962b:	stc    
  43962c:	mov    ds:0xd9f9171e,eax
  439631:	sbb    al,0x17
  439633:	stc    
  439634:	retf   
  439635:	sbb    al,0x17
  439637:	stc    
  439638:	stc    
  439639:	sbb    al,0x17
  43963b:	stc    
  43963c:	xchg   edi,eax
  43963d:	loop   0x439656
  43963f:	stc    
  439640:	add    BYTE PTR [ecx+ebx*4],ah
  439643:	cli    
  439644:	inc    DWORD PTR [eax]
  439646:	or     al,0x99
  439648:	cli    
  439649:	jmp    edx
  43964b:	cdq    
  43964c:	cli    
  43964d:	call   edx
  43964f:	cdq    
  439650:	cli    
  439651:	jmp    FWORD PTR [esi-0x6f000567]
  439657:	test   ebx,edi
  439659:	jmp    esp
  43965b:	cmp    ebx,0xffffffff
  43965e:	repnz cmp ebx,0xffffffff
  439662:	repnz cmp ebx,0xffffffff
  439666:	xchg   BYTE PTR [ebp-0x7a990005],al
  43966c:	sti    
  43966d:	call   FWORD PTR [eax]
  43966f:	test   ebx,edi
  439671:	call   DWORD PTR [ebp+eax*4-0x5]
  439675:	inc    esp
  439677:	test   ebx,edi
  439679:	(bad)  
  43967a:	fiadd  WORD PTR [ebx+0x4f4fffb]
  439680:	add    BYTE PTR [eax],al
  439682:	mov    esi,0xc6fffb73
  439687:	jae    0x439684
  439689:	jmp    DWORD PTR [eax-0x53000492]
  43968f:	outs   dx,BYTE PTR ds:[esi]
  439690:	sti    
  439691:	inc    DWORD PTR [esi*2+0x7514fffb]
  439698:	sti    
  439699:	jmp    FWORD PTR [edx]
  43969b:	jne    0x439698
  43969d:	push   DWORD PTR [esi]
  43969f:	jne    0x43969c
  4396a1:	(bad)  
  4396a2:	out    dx,al
  4396a3:	outs   dx,BYTE PTR ds:[esi]
  4396a4:	sti    
  4396a5:	jmp    FWORD PTR [edx+0xfffb6e]
  4396ab:	mov    ah,0x6e
  4396ad:	sti    
  4396ae:	inc    DWORD PTR [eax+0x72fffb74]
  4396b4:	je     0x4396b1
  4396b6:	(bad)  
  4396b7:	ds fwait
  4396b9:	cli    
  4396ba:	call   FWORD PTR [ebp+0x62fd7885]
  4396c0:	pop    edx
  4396c1:	js     0x4396c0
  4396c3:	pop    edx
  4396c4:	les    esi,FWORD PTR [edi-0x3]
  4396c7:	push   edx
  4396c8:	mov    dh,0x77
  4396ca:	std    
  4396cb:	dec    edx
  4396cc:	adc    BYTE PTR [eax-0x3],bh
  4396cf:	inc    edx
  4396d0:	add    dh,BYTE PTR [edi-0x3]
  4396d3:	cmp    bl,BYTE PTR [eax+0x78]
  4396d6:	std    
  4396d7:	xor    ch,BYTE PTR [edx+0x78]
  4396da:	std    
  4396db:	sub    ch,BYTE PTR [edx]
  4396dd:	std    
  4396de:	call   FWORD PTR [ebp+0x1dfffd1b]
  4396e4:	fidiv  WORD PTR [ecx-0x3]
  4396e7:	adc    bh,BYTE PTR [ebx]
  4396e9:	std    
  4396ea:	call   FWORD PTR ds:0x1dfffd27
  4396f0:	sub    edi,ebp
  4396f2:	call   FWORD PTR ds:0xf2fd71f4
  4396f8:	es std 
  4396fa:	call   FWORD PTR ds:0x1dfffd29
  439700:	bound  esi,QWORD PTR [edi-0x3]
  439703:	fidivr DWORD PTR ds:0x1dd2fd77
  439709:	std    
  43970a:	call   FWORD PTR ds:0xfffc9d
  439710:	sbb    eax,0xbafd773e
  439715:	sbb    esi,DWORD PTR [ebx-0x3]
  439718:	mov    dl,0xf
  43971a:	std    
  43971b:	call   FWORD PTR ds:0x1dfffd17
  439721:	scas   al,BYTE PTR es:[edi]
  439722:	add    eax,DWORD PTR [eax]
  439724:	sbb    eax,0x1dfffd2b
  439729:	xor    ch,bh
  43972b:	call   FWORD PTR ds:0x82fd7329
  439731:	pop    ds
  439732:	std    
  439733:	call   FWORD PTR ds:0x9d03fb02
  439739:	sub    BYTE PTR [ebx-0x5ae89787],0x79
  439740:	pusha  
  439741:	pop    ss
  439742:	dec    edi
  439743:	jns    0x43979d
  439745:	pop    ss
  439746:	adc    al,BYTE PTR [ebx*4-0x62fc287e]
  43974d:	and    dh,0x3
  439750:	popf   
  439751:	adc    dh,0x3
  439754:	popf   
  439755:	adc    bh,0x3
  439758:	popf   
  439759:	and    bh,0x3
  43975c:	popf   
  43975d:	add    bl,BYTE PTR [ecx+0x27172095]
  439763:	xchg   ebp,eax
  439764:	sbb    BYTE PTR [edi],dl
  439766:	sub    eax,0x13171095
  43976b:	xchg   ebp,eax
  43976c:	or     BYTE PTR [edi],dl
  43976e:	adc    DWORD PTR [ebp-0x6ac0e900],edx
  439774:	add    al,bh
  439776:	push   ss
  439777:	pop    ss
  439778:	xchg   ebp,eax
  439779:	lock push ss
  43977b:	sbb    DWORD PTR [ebp-0x6e1ce918],edx
  439781:	loopne 0x439799
  439783:	icebp  
  439784:	xchg   ecx,eax
  439785:	fcom   DWORD PTR [esi]
  439787:	(bad)  
  439788:	xchg   ecx,eax
  439789:	rcl    BYTE PTR [esi],1
  43978b:	int    0x91
  43978d:	enter  0xbb16,0x91
  439791:	rcl    BYTE PTR [esi],0xa7
  439794:	xchg   ecx,eax
  439795:	mov    eax,0xb0923516
  43979a:	push   ss
  43979b:	mov    bl,0x91
  43979d:	test   al,0x16
  43979f:	sub    eax,0xe716a092
  4397a4:	add    ebx,DWORD PTR [ebp-0x6f8892fe]
  4397aa:	push   ss
  4397ab:	pop    ebp
  4397ac:	ja     0x439736
  4397ae:	push   ss
  4397af:	add    BYTE PTR [ebp+0x3bf9180a],al
  4397b5:	cmc    
  4397b6:	pop    ss
  4397b7:	stc    
  4397b8:	inc    edi
  4397b9:	cmc    
  4397ba:	pop    ss
  4397bb:	stc    
  4397bc:	sub    eax,0xddf917e5
  4397c1:	jmp    0xf917:0xd2cbf917
  4397c8:	test   edx,0x9ee9f917
  4397ce:	add    al,BYTE PTR [eax]
  4397d0:	xchg   BYTE PTR [ebp+edi*4-0x58020a97],bl
  4397d7:	imul   edx,esi,0x0
  4397da:	call   FWORD PTR [esi-0x54163a9e]
  4397e0:	pop    esp
  4397e1:	(bad)  
  4397e3:	test   al,0x62
  4397e5:	mov    edi,0x52f9164a
  4397ea:	pushf  
  4397eb:	mov    ebp,0xa83db569
  4397f0:	imul   eax,esi,0x3f
  4397f3:	lahf   
  4397f4:	(bad)  
  4397f5:	lds    edi,FWORD PTR [edx]
  4397f7:	mov    eax,ds:0xa93d9b5c
  4397fc:	bound  ecx,QWORD PTR [edi+0x10f9163a]
  439802:	loop   0x4397b6
  439804:	pop    esi
  439805:	or     BYTE PTR [edx],0xc4
  439808:	push   0x699cef7b
  43980d:	xchg   BYTE PTR [edx],dh
  43980f:	mov    eax,ds:0xa1248b48
  439814:	pop    esp
  439815:	jne    0x4397b5
  439817:	xchg   esi,edi
  439819:	sub    eax,0x50539212
  43981e:	cld    
  43981f:	sahf   
  439820:	cmp    al,0x46
  439822:	repnz stos DWORD PTR es:[edi],eax
  439824:	jae    0x43980f
  439826:	sahf   
  439827:	inc    esp
  439828:	(bad)  
  439829:	dec    esp
  43982b:	jne    0x439887
  43982d:	jo     0x4397d5
  43982f:	jne    0x43986b
  439831:	ins    BYTE PTR es:[edi],dx
  439832:	fsubr  DWORD PTR [edi+0x5c]
  439835:	add    BYTE PTR [edi],bh
  439837:	add    BYTE PTR [eax+0x65],cl
  43983a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43983b:	dec    esi
  43983c:	cmp    ch,BYTE PTR [eax+eax*1-0x68]
  439840:	outs   dx,DWORD PTR ds:[esi]
  439841:	pop    esp
  439842:	add    BYTE PTR [ebx],bh
  439844:	add    BYTE PTR [eax+0x65],cl
  439847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439848:	dec    esi
  439849:	aas    
  43984a:	jb     0x4397ed
  43984c:	jne    0x439847
  43984e:	dec    DWORD PTR [esi+0x40653f00]
  439854:	xor    DWORD PTR [ebx+0x6f],ebp
  439857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439858:	jne    0x4398c6
  43985a:	jae    0x439848
  43985c:	jae    0x4398b8
  43985e:	jo     0x439894
  439860:	add    ebp,eax
  439862:	add    bh,ah
  439864:	jae    0x4398c0
  439866:	jo     0x4398af
  439868:	push   ebx
  439869:	pop    esi
  43986a:	popa   
  43986b:	push   eax
  43986c:	je     0x439867
  43986e:	call   DWORD PTR [esi+0x0]
  439871:	inc    ecx
  439872:	outs   dx,BYTE PTR ds:[esi]
  439873:	frstor [edx+eiz*2+0x61]
  439877:	cmp    BYTE PTR [eax+0x73],bh
  43987a:	gs inc edi
  43987c:	push   ebx
  43987d:	bound  esi,QWORD PTR [ebp+ecx*1+0x62]
  439881:	pop    edx
  439882:	ins    BYTE PTR es:[edi],dx
  439883:	daa    
  439884:	je     0x4398e2
  439886:	je     0x4398a5
  439888:	outs   dx,BYTE PTR ds:[esi]
  439889:	addr16 add ch,bl
  43988c:	add    DWORD PTR [ebp+eiz*2+0x15],ecx
  439890:	addr16 pop esi
  439892:	inc    ebx
  439893:	inc    esi
  439894:	js     0x439903
  439896:	imul   esp,DWORD PTR [edi],0x61536560
  43989c:	arpl   WORD PTR [ebp+0x69],bp
  43989f:	pop    ebx
  4398a0:	ins    BYTE PTR es:[edi],dx
  4398a1:	stc    
  4398a2:	inc    DWORD PTR [eax]
  4398a4:	popf   
  4398a5:	cmp    eax,0xae0b42fd
  4398aa:	cwde   
  4398ab:	ins    DWORD PTR es:[edi],dx
  4398ac:	(bad)  
  4398ae:	xchg   esp,eax
  4398af:	jae    0x4398a5
  4398b1:	enter  0x6b9c,0xee
  4398b5:	(bad)  
  4398b6:	sahf   
  4398b7:	jae    0x4398bd
  4398b9:	aad    0x91
  4398bb:	push   DWORD PTR [edx+0x5b]
  4398be:	std    
  4398bf:	inc    ebx
  4398c0:	add    BYTE PTR [esi],al
  4398c2:	cdq    
  4398c3:	jae    0x4398bd
  4398c5:	call   0x314ff77
  4398ca:	lahf   
  4398cb:	pop    esi
  4398cc:	sar    eax,0x98
  4398cf:	pop    esp
  4398d0:	shl    edx,1
  4398d2:	xchg   edx,eax
  4398d3:	imul   ebx,DWORD PTR [ebp-0x4abd01ce],0xaf4fb002
  4398dd:	sub    al,0xa0
  4398df:	bound  ebp,QWORD PTR [esi-0x637f02c8]
  4398e5:	fs call 0x7c6a:0x92545e73
  4398ed:	sub    ebx,DWORD PTR [ecx-0x65bc8bb5]
  4398f3:	push   eax
  4398f4:	popf   
  4398f5:	jno    0x4398f0
  4398f7:	dec    esp
  4398f8:	or     BYTE PTR [ebp-0x46],0x6d
  4398fc:	outs   dx,DWORD PTR ds:[esi]
  4398fd:	ins    BYTE PTR es:[edi],dx
  4398fe:	scas   eax,DWORD PTR es:[edi]
  4398ff:	dec    edx
  439900:	jp     0x43997f
  439902:	call   0x40:0xfd9ce2ff
  439909:	inc    eax
  43990a:	ins    DWORD PTR es:[edi],dx
  43990b:	shr    BYTE PTR [eax+0x40],0x99
  43990f:	test   eax,0xb2974073
  439914:	pop    esi
  439915:	xor    BYTE PTR [esi+0x72baffcc],al
  43991b:	stc    
  43991c:	dec    esp
  43991d:	cmp    BYTE PTR [edx],al
  43991f:	pop    ebx
  439920:	leave  
  439921:	sub    al,0x9d
  439923:	dec    eax
  439924:	cwde   
  439925:	mov    ds:0xdc05ef13,al
  43992a:	popf   
  43992b:	push   edx
  43992c:	rol    DWORD PTR ds:0xffb03b9f,1
  439932:	retf   0xb247
  439935:	(bad)  
  439936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439937:	dec    ebx
  439938:	mov    ebx,0x8bc137a
  43993d:	iret   
  43993e:	test   eax,0xa1ef9814
  439943:	or     cl,dl
  439945:	lock popf 
  439947:	or     ecx,ecx
  439949:	rol    BYTE PTR [edx],cl
  43994b:	push   ebp
  43994c:	or     al,ah
  43994e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43994f:	or     ebp,DWORD PTR [ecx+0x64302ba]
  439955:	fcomp  QWORD PTR [ebp-0x6f404606]
  43995b:	cmc    
  43995c:	lods   al,BYTE PTR ds:[esi]
  43995d:	lds    esp,FWORD PTR [ebx+ebp*4-0xcfd3265]
  439964:	add    eax,0xd0da9ddc
  439969:	test   DWORD PTR [esi+0x7f00afd3],ebx
  43996f:	mov    esp,0xc47fafcf
  439974:	(bad)  
  439975:	mov    al,0x7f
  439977:	stos   DWORD PTR es:[edi],eax
  439978:	out    0x3,al
  43997a:	pop    esi
  43997b:	add    BYTE PTR [edx-0x6b4d9158],ah
  439981:	mov    dl,0x49
  439983:	rol    DWORD PTR [edx-0x6a628f59],0x96
  43998a:	ficom  DWORD PTR [edx]
  43998c:	fs add al,0x90
  43998f:	nop
  439990:	mov    esp,DWORD PTR [esi+ecx*2+0x3f99a39d]
  439997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439998:	(bad)  
  439999:	jl     0x439992
  43999b:	adc    bh,cl
  43999d:	neg    BYTE PTR [edx+0x5505eb1]
  4399a3:	shr    DWORD PTR [eax+0x5b],0xcc
  4399a7:	(bad)  
  4399a8:	imul   ebx,DWORD PTR [ebp+0x48],0xffffffa2
  4399ac:	imul   eax,DWORD PTR [esi+ebp*2-0x50],0x65
  4399b1:	dec    esp
  4399b2:	inc    edx
  4399b3:	xchg   esi,eax
  4399b4:	ins    BYTE PTR es:[edi],dx
  4399b5:	jmp    0x45465f58
  4399ba:	adc    dl,BYTE PTR [esi-0x5dd3b593]
  4399c0:	mov    ax,ds:0xa0d02cb
  4399c7:	xchg   esi,eax
  4399c8:	ins    DWORD PTR es:[edi],dx
  4399c9:	or     al,BYTE PTR [eax]
  4399cb:	xchg   esi,eax
  4399cc:	push   eax
  4399cd:	jmp    0x36402f70
  4399d2:	add    BYTE PTR [ecx],dh
  4399d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4399d5:	imul   esp,DWORD PTR [edi+eiz*1],0xf7fd69a5
  4399dc:	adc    ecx,edi
  4399de:	sbb    DWORD PTR [esi-0x5268d3a],0xac85ca8
  4399e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4399e9:	inc    edi
  4399ea:	enter  0xa64c,0x6b
  4399ee:	les    ebx,FWORD PTR [esi+0x3aa9ffc0]
  4399f4:	fwait
  4399f5:	ins    BYTE PTR es:[edi],dx
  4399f6:	(bad)  
  4399f7:	(bad)  
  4399f8:	mov    al,0x69
  4399fa:	int    0x4a
  4399fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4399fd:	jmp    DWORD PTR [edi]
  4399ff:	cdq    
  439a00:	ret    
  439a01:	bound  ebx,QWORD PTR [ebp-0x64926b1d]
  439a07:	xor    eax,0x30b9739c
  439a0c:	fwait
  439a0d:	pop    esp
  439a0e:	test   BYTE PTR [ebx],ch
  439a10:	lahf   
  439a11:	inc    esi
  439a12:	add    BYTE PTR [eax],bl
  439a14:	push   es
  439a15:	dec    eax
  439a16:	add    esi,eax
  439a18:	push   esp
  439a19:	pop    esp
  439a1a:	popa   
  439a1b:	and    BYTE PTR [ebx+ebp*2],bh
  439a1e:	sbb    DWORD PTR gs:[esi],eax
  439a21:	es add eax,0x7462786b
  439a27:	pop    ecx
  439a28:	push   esi
  439a29:	imul   ebp,DWORD PTR [edi-0x19],0x69
  439a2d:	ins    BYTE PTR es:[edi],dx
  439a2e:	jae    0x4399e1
  439a30:	imul   esp,DWORD PTR [esi+0x6f],0xfff96dc6
  439a37:	add    BYTE PTR [ecx],al
  439a39:	sti    
  439a3a:	dec    edx
  439a3b:	jns    0x4399f4
  439a3d:	push   0x5e
  439a3f:	ins    DWORD PTR es:[edi],dx
  439a40:	mov    BYTE PTR [ebp+0x66],bl
  439a43:	gs test al,0x53
  439a46:	aas    
  439a47:	imul   edx,DWORD PTR [eax-0x5e96b297],0xccfff969
  439a51:	or     BYTE PTR [edi],bh
  439a53:	gs dec eax
  439a55:	pop    ecx
  439a56:	bound  ebp,QWORD PTR [ebp-0x67]
  439a59:	push   eax
  439a5a:	push   0x673da96e
  439a5f:	xor    si,WORD PTR [edi+0x66]
  439a63:	popa   
  439a64:	dec    eax
  439a65:	pop    esp
  439a66:	push   0xfb05346e
  439a6b:	add    DWORD PTR [ebx+0x68],ecx
  439a6e:	ins    DWORD PTR es:[edi],dx
  439a6f:	dec    esp
  439a70:	push   ebx
  439a71:	pop    dx
  439a73:	ins    BYTE PTR es:[edi],dx
  439a74:	sub    BYTE PTR [esi+eiz*2+0x65],bl
  439a78:	hlt    
  439a79:	add    al,0x6f
  439a7b:	add    cl,BYTE PTR [ebx+0x68]
  439a7e:	ins    DWORD PTR es:[edi],dx
  439a7f:	push   ebx
  439a80:	sub    eax,0x11656d76
  439a85:	pop    ecx
  439a86:	bound  ebp,QWORD PTR [ebp+0x19]
  439a89:	add    eax,0x879d0546
  439a8e:	xchg   esp,eax
  439a8f:	jae    0x439ae0
  439a91:	(bad)  
  439a92:	mov    eax,ds:0xfd1b7269
  439a97:	inc    ebx
  439a98:	cwde   
  439a99:	jg     0x439a2f
  439a9b:	jae    0x439a9d
  439a9d:	das    
  439a9e:	jl     0x439a4a
  439aa0:	outs   dx,DWORD PTR ds:[esi]
  439aa1:	inc    esp
  439aa2:	pop    edx
  439aa3:	std    
  439aa4:	dec    edx
  439aa5:	mov    al,ds:0x2f7392b7
  439aaa:	mov    edi,0x19dc69a0
  439aaf:	std    
  439ab0:	pusha  
  439ab1:	sahf   
  439ab2:	out    dx,al
  439ab3:	nop
  439ab4:	imul   edx,DWORD PTR [ecx],0xffffffb3
  439ab7:	shl    DWORD PTR [esi+0x9],0xc7
  439abb:	mov    bh,0x68
  439abd:	rol    dl,cl
  439abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439ac0:	(bad)  
  439ac1:	faddp  st(1),st
  439ac3:	pushf  
  439ac4:	ins    DWORD PTR es:[edi],dx
  439ac5:	popf   
  439ac6:	or     al,BYTE PTR [edx]
  439ac8:	push   ecx
  439ac9:	hlt    
  439aca:	add    eax,0xfac53ca1
  439acf:	xchg   ecx,eax
  439ad0:	push   ebx
  439ad1:	ret    0x90ee
  439ad4:	imul   edx,ecx,0xfffffff2
  439ad7:	shl    DWORD PTR [esi-0x37],0x6
  439adb:	add    al,0xee
  439add:	mov    eax,ds:0xa96da4ef
  439ae2:	push   ss
  439ae3:	sahf   
  439ae4:	imul   ecx,esp,0x2e
  439ae7:	mov    ds:0x9566a46d,al
  439aec:	call   FWORD PTR [edx]
  439aee:	fld    QWORD PTR [ebx]
  439af0:	dec    esi
  439af1:	js     0x439b2d
  439af3:	mov    eax,ds:0xa4388f4f
  439af8:	bound  ecx,QWORD PTR [esi-0x779d35b4]
  439afe:	dec    eax
  439aff:	xchg   ebx,eax
  439b00:	jbe    0x439b02
  439b02:	popf   
  439b03:	leave  
  439b04:	add    BYTE PTR [edx+0x74],dl
  439b07:	add    dl,BYTE PTR [ebp-0x755e9069]
  439b0d:	mov    bl,0x48
  439b0f:	lahf   
  439b10:	call   0xca9b:0xa39671a6
  439b17:	prefetch BYTE PTR [edi]
  439b1a:	outs   dx,DWORD PTR ds:[esi]
  439b1b:	cdq    
  439b1c:	je     0x439ab5
  439b1e:	das    
  439b1f:	mov    eax,ds:0x9e46c282
  439b24:	jns    0x439aca
  439b26:	pop    edi
  439b27:	mov    ah,dh
  439b29:	add    eax,DWORD PTR [ebx+0x1]
  439b2c:	and    DWORD PTR [edx-0x52dd5a01],edx
  439b32:	lock xchg esp,eax
  439b34:	inc    edi
  439b35:	xchg   edx,eax
  439b36:	adc    eax,DWORD PTR [ebx]
  439b38:	add    al,BYTE PTR [ebx]
  439b3a:	rcr    DWORD PTR [edi-0x661957b9],1
  439b40:	inc    esp
  439b41:	xchg   edx,eax
  439b42:	rcl    DWORD PTR [edi+ebp*1-0x57f09549],cl
  439b49:	or     cl,cl
  439b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b4c:	adc    al,0xb1
  439b4e:	ret    
  439b4f:	mov    al,ds:0xb6bf9807
  439b54:	(bad)  
  439b55:	xchg   ecx,eax
  439b56:	mov    edi,0xe040aa1
  439b5b:	add    ah,BYTE PTR [esi]
  439b5d:	xchg   edx,eax
  439b5e:	mov    edi,0xcea8faa1
  439b63:	call   0xe6a6:0xcb00a8f4
  439b6a:	add    esi,DWORD PTR [esi+eax*1]
  439b6d:	mov    cl,0xac
  439b6f:	mov    BYTE PTR [esi-0x4d795b25],dl
  439b75:	aam    0xae
  439b77:	mov    fs,WORD PTR [ebp+0xf0297c5]
  439b7d:	xchg   esi,eax
  439b7e:	pop    es
  439b7f:	push   0xe5bcffa5
  439b84:	cwde   
  439b85:	arpl   WORD PTR [esi-0x6a993ec0],bx
  439b8b:	xor    eax,0xa286f90f
  439b90:	mov    ebp,0xa7d89d62
  439b95:	imul   eax,DWORD PTR [esi+ecx*1+0x2a97669a],0xffffffa4
  439b9d:	ins    DWORD PTR es:[edi],dx
  439b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439b9f:	push   ss
  439ba0:	psubw  mm0,QWORD PTR [ebx+0x7562bd9a]
  439ba7:	loopne 0x439b50
  439ba9:	imul   ecx,DWORD PTR [ebp+eiz*8-0x59],0x6a
  439bae:	inc    esp
  439baf:	mov    eax,ds:0x2f3e02e1
  439bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bb5:	jae    0x439bfb
  439bb7:	arpl   WORD PTR [ebp+0x24994c6b],sp
  439bbd:	jmp    DWORD PTR ds:0x40419244
  439bc3:	sub    eax,0x5353ea1
  439bc8:	mov    al,ds:0x4000b66
  439bcd:	xchg   edx,eax
  439bce:	bound  ebx,QWORD PTR [edx]
  439bd0:	adc    cl,BYTE PTR [esi]
  439bd2:	stc    
  439bd3:	test   eax,0x862bc9f
  439bd8:	cmc    
  439bd9:	ret    
  439bda:	adc    ax,0xdf4
  439bde:	stc    
  439bdf:	outs   dx,BYTE PTR ds:[esi]
  439be0:	sahf   
  439be1:	iret   
  439be2:	ins    DWORD PTR es:[edi],dx
  439be3:	or     al,0xf8
  439be5:	xchg   ecx,eax
  439be6:	bound  esp,QWORD PTR [edi]
  439be8:	clc    
  439be9:	cdq    
  439bea:	bound  edi,QWORD PTR [esi-0x59014c62]
  439bf0:	dec    edx
  439bf1:	xchg   ecx,eax
  439bf2:	ins    BYTE PTR es:[edi],dx
  439bf3:	rcr    eax,0xa4
  439bf6:	imul   eax,esp,0xffffffdc
  439bf9:	nop
  439bfa:	popa   
  439bfb:	add    dl,dl
  439bfd:	pop    edx
  439bfe:	imul   esi,DWORD PTR [ebx+0x4],0x2
  439c02:	jmp    0x6d9edf08
  439c07:	inc    esi
  439c08:	fstp   QWORD PTR [ebp+0x5e]
  439c0b:	push   ebx
  439c0c:	or     eax,0xfc455e6c
  439c11:	add    DWORD PTR [ebx+0x4],ebp
  439c14:	pop    ss
  439c15:	pop    ebx
  439c16:	ins    DWORD PTR es:[edi],dx
  439c17:	dec    esp
  439c18:	adc    eax,0x46456d71
  439c1d:	jae    0x439c87
  439c1f:	jb     0x439be5
  439c21:	add    edx,ebp
  439c23:	add    DWORD PTR [ebx],eax
  439c25:	pop    ebx
  439c26:	ins    DWORD PTR es:[edi],dx
  439c27:	inc    esi
  439c28:	sbb    eax,0x4d545e5e
  439c2d:	pop    ebp
  439c2e:	pop    esi
  439c2f:	add    BYTE PTR [eax],al
  439c31:	push   edx
  439c32:	push   es
  439c33:	inc    esp
  439c34:	fsub   DWORD PTR gs:[ebp+0x6d]
  439c38:	gs ret 0x6559
  439c3c:	mov    gs:0xc301ec06,eax
  439c42:	gs ins DWORD PTR es:[edi],dx
  439c44:	inc    esi
  439c45:	fst    QWORD PTR [edx+0x5e]
  439c48:	dec    ecx
  439c49:	stos   BYTE PTR es:[edi],al
  439c4a:	fs push 0x6d618972
  439c50:	imul   ebp,DWORD PTR [ebx+0x7c793b5c],0x48646761
  439c5a:	fs stc 
  439c5c:	call   DWORD PTR [ebp+0x30654afa]
  439c62:	inc    edi
  439c63:	bound  ebp,QWORD PTR [ecx+eiz*4+0x41]
  439c67:	ins    DWORD PTR es:[edi],dx
  439c68:	je     0x439c90
  439c6a:	pop    eax
  439c6b:	pop    ebx
  439c6c:	jne    0x439cae
  439c6e:	fs ins BYTE PTR es:[edi],dx
  439c70:	push   edi
  439c71:	add    al,0x1
  439c73:	repnz add ebx,DWORD PTR [ebp-0x7f945db7]
  439c7a:	cmp    dl,BYTE PTR [eax-0x6eb1af9e]
  439c80:	bound  esi,QWORD PTR [ebp+0x1b]
  439c83:	std    
  439c84:	push   eax
  439c85:	sahf   
  439c86:	data16 sahf 
  439c88:	outs   dx,DWORD PTR ds:[esi]
  439c89:	push   ebx
  439c8a:	inc    edx
  439c8b:	mov    ds:0xc37d5270,al
  439c90:	dec    cx
  439c92:	xchg   ch,bh
  439c94:	rol    DWORD PTR [eax],1
  439c96:	cdq    
  439c97:	dec    esi
  439c98:	stos   DWORD PTR es:[edi],eax
  439c99:	push   0x3c
  439c9b:	imul   esi,DWORD PTR [ebx-0x3473c79a],0x61
  439ca2:	arpl   WORD PTR [edx-0x57],si
  439ca5:	bound  ebx,QWORD PTR [ebp+0x2f3d03a7]
  439cab:	xchg   BYTE PTR [esi-0x5b22c78d],bl
  439cb1:	imul   eax,DWORD PTR [eax],0xffffffdf
  439cb4:	pushf  
  439cb5:	outs   dx,DWORD PTR ds:[esi]
  439cb6:	or     eax,0xf260a9c3
  439cbb:	sbb    ebp,edi
  439cbd:	ret    
  439cbe:	pushf  
  439cbf:	fsub   QWORD PTR [eax-0x7229218d]
  439cc5:	ins    DWORD PTR es:[edi],dx
  439cc6:	clc    
  439cc7:	ret    
  439cc8:	xchg   edi,eax
  439cc9:	push   ebx
  439cca:	cmc    
  439ccb:	(bad)  
  439ccc:	mov    al,ds:0xfd19f95e
  439cd1:	xchg   esi,eax
  439cd2:	mov    eax,ds:0xe973a0c8
  439cd7:	add    DWORD PTR [esi-0x4bfa439e],ecx
  439cdd:	ins    DWORD PTR es:[edi],dx
  439cde:	mov    ah,0xf4
  439ce0:	lea    esp,[esi-0x4f]
  439ce3:	add    al,BYTE PTR [ecx+edi*8]
  439ce6:	pushf  
  439ce7:	fsub   QWORD PTR [eax-0x56052a8d]
  439ced:	arpl   WORD PTR [ecx-0x7b3533fe],si
  439cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439cf4:	leave  
  439cf5:	xchg   ecx,eax
  439cf6:	xchg   DWORD PTR [ecx+0x7500aada],esp
  439cfc:	pushf  
  439cfd:	out    0x3,al
  439cff:	push   ebp
  439d00:	add    eax,0x906e90d3
  439d05:	lds    edx,FWORD PTR [ebx+0x3e6b36b]
  439d0b:	pop    esp
  439d0c:	add    eax,0x906e90bb
  439d11:	test   DWORD PTR [ebx+0x3e6c153],edx
  439d17:	xchg   edx,eax
  439d18:	add    eax,0x904e9083
  439d1d:	test   DWORD PTR [esi+0x3e6c132],ebp
  439d23:	arpl   WORD PTR ds:0x902e908b,ax
  439d29:	test   DWORD PTR [ebx+0x3a79c33],edx
  439d2f:	mov    ds:0xea12a01,eax
  439d34:	mov    edi,0xc60e9747
  439d39:	push   esp
  439d3a:	xchg   esi,eax
  439d3b:	cmc    
  439d3c:	nop
  439d3d:	out    0x3,al
  439d3f:	sar    edi,0x32
  439d42:	stos   DWORD PTR es:[edi],eax
  439d43:	(bad)  [esi-0x6f2f52d6]
  439d49:	inc    edi
  439d4a:	xchg   esi,eax
  439d4b:	repz shl esi,0x3
  439d4f:	jge    0x439d52
  439d51:	sub    ah,BYTE PTR [ecx-0x52e13a32]
  439d57:	into   
  439d58:	mov    edi,0xb6bfa001
  439d5d:	(bad)  
  439d5e:	xchg   ebp,eax
  439d5f:	add    BYTE PTR [edi+0x59040aa1],bh
  439d65:	add    DWORD PTR [edx],esp
  439d67:	mov    eax,ds:0x6ffc5ae
  439d6c:	shld   DWORD PTR [ebp-0x2],ebp,0xf4
  439d71:	xchg   edi,eax
  439d72:	(bad)  
  439d73:	xlat   BYTE PTR ds:[ebx]
  439d74:	sub    dh,BYTE PTR [ecx-0x53be24a2]
  439d7a:	pop    ebp
  439d7b:	lds    edi,FWORD PTR ds:0x9980ffb2
  439d81:	int    0x6d
  439d83:	int3   
  439d84:	inc    ecx
  439d85:	(bad)  
  439d86:	bound  ebx,QWORD PTR [ecx-0x33a365f8]
  439d8c:	adc    ebx,DWORD PTR [esi-0x7d6116b0]
  439d92:	std    
  439d93:	mov    ch,0x2e
  439d95:	mov    al,ds:0x9a28b969
  439d9a:	pop    esp
  439d9b:	mov    WORD PTR [ebx],?
  439d9d:	sahf   
  439d9e:	jmp    FWORD PTR [ecx]
  439da0:	popf   
  439da1:	mov    dh,0x67
  439da3:	jnp    0x439da2
  439da5:	stos   DWORD PTR es:[edi],eax
  439da6:	arpl   WORD PTR [edx+0x7b66c0c8],di
  439dac:	adc    ecx,DWORD PTR [edi-0x4962db01]
  439db2:	addr16 pop ebx
  439db4:	cmp    al,0xa9
  439db6:	arpl   WORD PTR [edx],bx
  439db8:	imul   edi,DWORD PTR [edx+eiz*2-0x6f5d2af],0xffffff8f
  439dc0:	sahf   
  439dc1:	(bad)  
  439dc2:	ins    DWORD PTR es:[edi],dx
  439dc3:	dec    esp
  439dc4:	add    BYTE PTR [eax-0x6a],al
  439dc7:	bound  edx,QWORD PTR ds:0x416b9b46
  439dcd:	cmp    al,0x9e
  439dcf:	outs   dx,DWORD PTR ds:[esi]
  439dd0:	cli    
  439dd1:	dec    eax
  439dd2:	mov    bh,0x69
  439dd4:	or     BYTE PTR [ecx],dh
  439dd6:	xchg   edi,eax
  439dd7:	addr16 push cs
  439dd9:	sub    eax,0xa32bf90a
  439dde:	ret    
  439ddf:	bound  edx,QWORD PTR ds:0x669809
  439de5:	cmp    bl,BYTE PTR [edi+0x6d]
  439de8:	gs xchg esp,eax
  439dea:	jo     0x439e54
  439dec:	popfw  
  439dee:	pop    edx
  439def:	pop    esi
  439df0:	push   ebx
  439df1:	sub    BYTE PTR [eax+0x62],dh
  439df4:	outs   dx,BYTE PTR ds:[esi]
  439df5:	jmp    0x439e4b
  439df7:	stc    
  439df8:	push   DWORD PTR [eax-0x179ac100]
  439dfe:	push   ebp
  439dff:	imul   ebp,DWORD PTR [ecx-0x16],0x5e
  439e03:	ins    DWORD PTR es:[edi],dx
  439e04:	gs adc al,0x70
  439e07:	push   0x5e61cd66
  439e0c:	dec    ecx
  439e0d:	loop   0x439e88
  439e0f:	push   eax
  439e10:	add    cl,dl
  439e12:	(bad)  
  439e13:	cmp    al,0x78
  439e15:	xor    al,0x5f
  439e17:	addr16 fs stc 
  439e1a:	pop    ebx
  439e1b:	outs   dx,DWORD PTR ds:[esi]
  439e1c:	imul   esp,DWORD PTR [esi],0x196d675d
  439e22:	pop    esp
  439e23:	ins    DWORD PTR es:[edi],dx
  439e24:	push   ebx
  439e25:	cmp    BYTE PTR [edi+0x62],ch
  439e28:	outs   dx,BYTE PTR ds:[esi]
  439e29:	add    BYTE PTR [ebx],bl
  439e2b:	jno    0x439e7d
  439e2d:	add    BYTE PTR [edx+0x2d724d09],al
  439e33:	inc    edx
  439e34:	addr16 je 0x439e20
  439e37:	jo     0x439e75
  439e39:	jb     0x439e28
  439e3b:	jb     0x439e9f
  439e3d:	arpl   bp,dx
  439e3f:	pop    edx
  439e40:	dec    esp
  439e41:	xlat   BYTE PTR gs:[ebx]
  439e43:	jb     0x439ea7
  439e45:	outs   dx,DWORD PTR ds:[esi]
  439e46:	sar    dh,cl
  439e48:	jge    0x439e4c
  439e4a:	mov    ebx,0xdc546d69
  439e4f:	jo     0x439eaf
  439e51:	popa   
  439e52:	fdivr  DWORD PTR [edi]
  439e54:	push   0x7169b86e
  439e59:	je     0x439e9f
  439e5b:	add    eax,0xcc9d0489
  439e60:	cwde   
  439e61:	jae    0x439e4c
  439e63:	add    edx,DWORD PTR [edx-0x3d08439e]
  439e69:	push   0x779a0fc3
  439e6e:	mov    cl,0x1b
  439e70:	std    
  439e71:	dec    ebx
  439e72:	lahf   
  439e73:	loopne 0x439e0d
  439e75:	jae    0x439ee4
  439e77:	sub    eax,0x2c785ca8
  439e7c:	xchg   esp,eax
  439e7d:	inc    esi
  439e7e:	sbb    DWORD PTR [ebx],0x5c9d99fd
  439e84:	xchg   ebx,eax
  439e85:	bound  edi,QWORD PTR [edi+eax*2-0x66]
  439e89:	dec    edx
  439e8a:	push   0x779a4f
  439e8f:	push   edx
  439e90:	sbb    edi,ebp
  439e92:	ret    0x609c
  439e95:	call   0x386d:0x93665e73
  439e9c:	jns    0x439e27
  439e9e:	push   ebx
  439e9f:	xor    eax,0x395e9a6d
  439ea4:	bound  ebx,QWORD PTR [ecx-0x2a4501]
  439eaa:	push   ebx
  439eab:	inc    ecx
  439eac:	mov    WORD PTR [ebp-0x5b7fc695],?
  439eb2:	jmp    DWORD PTR [edx+0x953ffe0]
  439eb8:	lods   eax,DWORD PTR ds:[esi]
  439eb9:	mov    ebp,0x3bef86d
  439ebe:	shl    DWORD PTR [ecx-0x2593583b],0xbe
  439ec5:	(bad)  
  439ec6:	push   ecx
  439ec7:	cld    
  439ec8:	lods   eax,DWORD PTR ds:[esi]
  439ec9:	mov    BYTE PTR [edx-0x63],ah
  439ecc:	push   ecx
  439ecd:	stc    
  439ece:	push   ebx
  439ecf:	stc    
  439ed0:	int3   
  439ed1:	mov    dl,0x62
  439ed3:	jmp    0xd0af3bc7
  439ed8:	add    cl,BYTE PTR [esp+eax*1]
  439edb:	pop    ebp
  439edc:	push   DWORD PTR [edx]
  439ede:	lahf   
  439edf:	mov    eax,0xe3a9ff95
  439ee4:	mov    es,WORD PTR [ebx]
  439ee6:	mov    ah,0xc8
  439ee8:	xchg   edi,eax
  439ee9:	add    eax,0xe693c19f
  439eee:	add    edx,DWORD PTR [esi+edi*8-0x4eff60ec]
  439ef5:	popf   
  439ef6:	repnz mov esi,0x8fd09d8c
  439efc:	adc    cl,BYTE PTR [eax]
  439efe:	push   es
  439eff:	add    ebx,DWORD PTR [edi-0x67]
  439f02:	ret    0x6e9e
  439f05:	cdq    
  439f06:	mov    ebx,0xaa974e9e
  439f0b:	test   al,0x81
  439f0d:	mov    esi,0xae7f8fc7
  439f12:	mov    edi,0x66027fa6
  439f17:	add    eax,0xaf9a9d5c
  439f1c:	aas    
  439f1d:	xchg   ebp,eax
  439f1e:	xchg   esi,eax
  439f1f:	rol    DWORD PTR [ebx-0x6a],0x8b
  439f23:	leave  
  439f24:	arpl   WORD PTR [ebp+0x7bab083],dx
  439f2a:	ins    BYTE PTR es:[edi],dx
  439f2b:	add    eax,0xaf729d5c
  439f30:	aas    
  439f31:	xchg   ebp,eax
  439f32:	jbe    0x439ee7
  439f34:	inc    ebx
  439f35:	mov    ?,WORD PTR [esi-0x50]
  439f38:	call   0x4a99:0xdf050b07
  439f3f:	mov    eax,ds:0xa14399ee
  439f44:	out    dx,al
  439f45:	xchg   edi,eax
  439f46:	sbb    ah,BYTE PTR [edi-0x41ad5e27]
  439f4c:	sti    
  439f4d:	xchg   esi,eax
  439f4e:	inc    ebx
  439f4f:	mov    al,0x3
  439f51:	xchg   esi,eax
  439f52:	dec    DWORD PTR [ebx-0x67]
  439f55:	iret   
  439f56:	(bad)  
  439f57:	add    BYTE PTR es:[eax],cl
  439f5a:	cdq    
  439f5b:	arpl   WORD PTR [edi],bp
  439f5d:	add    BYTE PTR [ebp-0x5ff4ea94],dl
  439f63:	imul   ecx,DWORD PTR [edx+esi*8],0x6
  439f67:	stc    
  439f68:	mov    edi,0x1766c4a1
  439f6d:	std    
  439f6e:	lds    ebp,FWORD PTR [ebx+0xe]
  439f71:	push   cs
  439f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439f73:	jmp    FWORD PTR [ebx]
  439f75:	cwde   
  439f76:	les    esp,FWORD PTR [esi-0x1]
  439f79:	cmp    bh,BYTE PTR [ecx-0x3edd1e9e]
  439f7f:	data16 int 0x3d
  439f82:	mov    dl,0xff
  439f84:	lea    ebx,[esi+0xcc472b7]
  439f8a:	nop
  439f8b:	dec    edi
  439f8c:	int3   
  439f8d:	or     al,0xa1
  439f8f:	push   0x69a835bb
  439f94:	retf   0xc63d
  439f97:	push   0x629300b4
  439f9c:	fwait
  439f9d:	sahf   
  439f9e:	mov    ds:0x9103abfc,al
  439fa3:	bound  ebp,QWORD PTR [edi-0x5b9d650f]
  439fa9:	push   ss
  439faa:	mov    dl,0xff
  439fac:	retf   
  439fad:	pushf  
  439fae:	shl    DWORD PTR [edx+0x75],0xe0
  439fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439fb3:	jae    0x439f35
  439fb5:	adc    BYTE PTR [esp+ecx*2+0x62922f70],ah
  439fbc:	push   esp
  439fbd:	add    BYTE PTR [eax-0x64],ah
  439fc0:	popa   
  439fc1:	dec    esi
  439fc2:	mov    eax,ds:0x3c2dff37
  439fc7:	xchg   edx,eax
  439fc8:	inc    ebx
  439fc9:	pop    ebx
  439fca:	dec    eax
  439fcb:	xchg   esp,eax
  439fcc:	bound  eax,QWORD PTR [eax]
  439fce:	nop
  439fcf:	imul   esp,DWORD PTR [di-0x6d],0xb30265fe
  439fd7:	arpl   WORD PTR [ebp+0x53],bp
  439fda:	lea    esi,[ecx+0x6d]
  439fdd:	gs test eax,0x95665e42
  439fe3:	jae    0x43a04a
  439fe5:	je     0x439f68
  439fe7:	aaa    
  439fe8:	inc    ebp
  439fe9:	popa   
  439fea:	cmp    ah,BYTE PTR [ebp+0x6e]
  439fed:	popa   
  439fee:	mov    ds:0x2dfff963,eax
  439ff3:	add    al,0x3f
  439ff5:	and    BYTE PTR gs:[esi],bh
  439ff8:	push   0x5a619d67
  439ffd:	ins    BYTE PTR es:[edi],dx
  439ffe:	inc    eax
  439fff:	je     0x43a063
  43a001:	jbe    0x439fe4
  43a003:	jo     0x439ffe
  43a005:	inc    DWORD PTR [esi+0x4]
  43a008:	aas    
  43a009:	rcl    BYTE PTR gs:[ecx+0x6b],1
  43a00d:	outs   dx,DWORD PTR ds:[esi]
  43a00e:	out    0x62,eax
  43a010:	ins    BYTE PTR es:[edi],dx
  43a011:	jae    0x43a023
  43a013:	push   edi
  43a014:	data16 gs daa 
  43a017:	add    bh,BYTE PTR [edx]
  43a019:	add    eax,0x726d7118
  43a01e:	daa    
  43a01f:	pop    ebx
  43a020:	imul   edx,DWORD PTR [edi+0x0],0x2c001b4
  43a027:	repz pop ebp
  43a029:	push   0x465e2562
  43a02e:	or     DWORD PTR gs:[ebp+0x6b],ebx
  43a032:	jns    0x43a03b
  43a034:	jbe    0x43a090
  43a036:	je     0x43a059
  43a038:	jo     0x43a078
  43a03a:	js     0x439fc0
  43a03c:	add    DWORD PTR [esi+0x6d65c302],edx
  43a042:	push   ebp
  43a043:	out    0x65,eax
  43a045:	imul   eax,DWORD PTR [ebp+ebx*4-0x4a],0xffffff99
  43a04a:	pop    esi
  43a04b:	lock (bad) 
  43a04d:	(bad)  
  43a04e:	push   edx
  43a04f:	in     al,0xcf
  43a051:	pushf  
  43a052:	imul   eax,DWORD PTR [edx],0xf8609ccf
  43a058:	sbb    edi,ebp
  43a05a:	leave  
  43a05b:	pushf  
  43a05c:	fcomp  QWORD PTR [eax-0x710d268d]
  43a062:	fs jecxz 0x43a04e
  43a065:	cwde   
  43a066:	(bad)  
  43a067:	out    dx,al
  43a068:	jmp    0x43a006
  43a06a:	pop    esp
  43a06b:	rcr    dh,0x9b
  43a06e:	push   eax
  43a06f:	popf   
  43a070:	mov    ah,0xfd
  43a072:	inc    eax
  43a073:	ror    BYTE PTR [edi],0xab
  43a076:	push   0x62a206b1
  43a07b:	fs add eax,0x2e8f689b
  43a081:	sahf   
  43a082:	jae    0x43a0f8
  43a084:	xor    al,0xa3
  43a086:	push   eax
  43a087:	add    BYTE PTR [ebp+0x6f3d0482],bl
  43a08d:	ds sahf 
  43a08f:	jae    0x43a109
  43a091:	imul   ebx,DWORD PTR [edx-0x65b08596],0x9a497553
  43a09b:	pop    esi
  43a09c:	inc    ecx
  43a09d:	sbb    edi,ebp
  43a09f:	xchg   ecx,eax
  43a0a0:	sahf   
  43a0a1:	dec    ebx
  43a0a2:	(bad)
  43a0a6:	nop
  43a0a7:	ins    BYTE PTR es:[edi],dx
  43a0a8:	mov    gs,WORD PTR [ecx]
  43a0aa:	mov    ebx,0x89682f66
  43a0af:	push   eax
  43a0b0:	popf   
  43a0b1:	mov    ds:0x742f4ffe,eax
  43a0b6:	mov    al,ds:0xcf882e62
  43a0bb:	sub    eax,0x73957eeb
  43a0c0:	jmp    0x2201:0x4703e702
  43a0c7:	test   al,0xf5
  43a0c9:	mov    al,ds:0x93e6a847
  43a0ce:	inc    ebp
  43a0cf:	test   eax,0x1ac0472
  43a0d4:	fcom   QWORD PTR [esi-0x693c5db7]
  43a0da:	sbb    esp,DWORD PTR [esi-0x56ba6c3a]
  43a0e0:	push   edx
  43a0e1:	add    al,0xf6
  43a0e3:	(bad)  
  43a0e4:	fcomp  DWORD PTR [ebp-0x624870eb]
  43a0ea:	cmp    ch,BYTE PTR [eax+eax*1-0x5ff86238]
  43a0f1:	xor    al,BYTE PTR [eax+ebp*2]
  43a0f4:	add    ebp,DWORD PTR [eax-0x70]
  43a0f7:	add    esp,DWORD PTR [ebx-0x54d56252]
  43a0fd:	mov    BYTE PTR [ebp-0x6f7a6ffb],bl
  43a103:	fild   QWORD PTR [edx+ecx*1+0x6cff4b04]
  43a10a:	cdq    
  43a10b:	aam    0x8f
  43a10d:	outs   dx,DWORD PTR ds:[esi]
  43a10e:	mov    eax,ds:0x9d80bdba
  43a113:	retf   
  43a114:	add    eax,DWORD PTR [edx]
  43a116:	call   DWORD PTR [eax-0x44718f56]
  43a11c:	mov    ds:0xa7bac146,al
  43a121:	inc    ebp
  43a122:	lahf   
  43a123:	out    0x3,al
  43a125:	enter  0xb4ff,0x9e
  43a129:	aaa    
  43a12a:	xchg   ebx,eax
  43a12b:	cwde   
  43a12c:	sahf   
  43a12d:	pop    esi
  43a12e:	cdq    
  43a12f:	xchg   esp,eax
  43a130:	sahf   
  43a131:	push   ecx
  43a132:	mov    ss,WORD PTR [ecx-0x1954cc6f]
  43a138:	add    esp,DWORD PTR [esi]
  43a13a:	(bad)  
  43a13b:	jmp    DWORD PTR [ebp-0x63965fd2]
  43a141:	and    ecx,DWORD PTR [edi+0x3466162]
  43a147:	stc    
  43a148:	nop
  43a149:	fwait
  43a14a:	shl    DWORD PTR [edx+0x5d],0x37
  43a14e:	call   0x49a0:0x3c00546b
  43a155:	dec    eax
  43a156:	cmp    al,0xa0
  43a158:	inc    ecx
  43a159:	dec    esi
  43a15a:	or     esi,DWORD PTR [ecx-0x67cbba98]
  43a160:	bound  ebx,QWORD PTR [esi+edi*8]
  43a163:	(bad)
  43a167:	call   0x9dff:0xb2250f66
  43a16e:	mov    ds:0xf82b6cbb,eax
  43a173:	sahf   
  43a174:	dec    ebp
  43a175:	or     al,0x0
  43a177:	lahf   
  43a178:	dec    edi
  43a179:	cmc    
  43a17a:	or     BYTE PTR [ebx],al
  43a17c:	stc    
  43a17d:	jge    0x43a124
  43a17f:	mov    cl,0x53
  43a181:	sbb    ah,dh
  43a183:	lahf   
  43a184:	jae    0x43a12e
  43a186:	inc    ebx
  43a187:	(bad)  
  43a188:	data16 xlat BYTE PTR ds:[ebx]
  43a18a:	xor    eax,0x13c768c6
  43a18f:	call   0xba6c:0xa02bc46b
  43a196:	or     DWORD PTR [edx+0x33ab069],ebx
  43a19c:	stc    
  43a19d:	mov    ds:0xa449b4e5,al
  43a1a2:	adc    dl,dh
  43a1a4:	sub    eax,0x6b9702d7
  43a1a9:	jmp    0xac43b14c
  43a1ae:	es pushf 
  43a1b0:	jae    0x43a168
  43a1b2:	adc    DWORD PTR [ecx+0x13000063],ebx
  43a1b8:	push   0xff1c456c
  43a1bd:	and    al,BYTE PTR [eax]
  43a1bf:	inc    edi
  43a1c0:	sahf   
  43a1c1:	pop    ecx
  43a1c2:	jb     0x43a1f4
  43a1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a1c5:	outs   dx,DWORD PTR ds:[esi]
  43a1c6:	gs out 0xc7,al
  43a1c9:	clc    
  43a1ca:	jmp    edx
  43a1cc:	pop    es
  43a1cd:	aas    
  43a1ce:	fdivr  DWORD PTR gs:[ecx-0x54378c8f]
  43a1d5:	gs dec ebp
  43a1d7:	fstp   DWORD PTR [edx-0x66289696]
  43a1dd:	clc    
  43a1de:	(bad)  
  43a1df:	jg     0x43a1e9
  43a1e1:	dec    edx
  43a1e2:	fistp  DWORD PTR gs:[edi-0x67668b95]
  43a1e9:	cmp    ebp,DWORD PTR [ebp+edx*4-0x67]
  43a1ed:	imul   eax,DWORD PTR [ecx+0x44],0x6
  43a1f1:	pop    DWORD PTR [eax]
  43a1f3:	js     0x43a1a0
  43a1f5:	pop    esi
  43a1f6:	inc    esi
  43a1f7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  43a1f9:	gs test BYTE PTR gs:[eax+0x6bb6367],bl
  43a201:	push   ebx
  43a202:	add    DWORD PTR [ebx-0x26b29355],edi
  43a208:	cwde   
  43a209:	imul   esp,DWORD PTR [ecx-0x25],0xffffffaa
  43a20d:	dec    eax
  43a20e:	outs   dx,DWORD PTR ds:[esi]
  43a20f:	xlat   BYTE PTR ds:[ebx]
  43a210:	add    eax,0xab38009c
  43a215:	pop    esi
  43a216:	push   edi
  43a217:	int    0xa3
  43a219:	pop    esp
  43a21a:	outs   dx,DWORD PTR ds:[esi]
  43a21b:	add    BYTE PTR [ebx],ch
  43a21d:	mov    dh,0x6a
  43a21f:	outs   dx,DWORD PTR ds:[esi]
  43a220:	out    0xbc,eax
  43a222:	clc    
  43a223:	jmp    edx
  43a225:	add    eax,0xa230613b
  43a22a:	dec    edi
  43a22b:	imul   edx,DWORD PTR [edx],0x9d7767aa
  43a231:	mov    ebx,0xb83e6892
  43a236:	cld    
  43a237:	sbb    bl,BYTE PTR [ebp+0x316ba3ac]
  43a23d:	cwde   
  43a23e:	fwait
  43a23f:	imul   eax,DWORD PTR [ecx],0xf4f9589
  43a245:	and    DWORD PTR [edx+0x2399d3e],0x9548f84e
  43a24f:	ins    BYTE PTR es:[edi],dx
  43a250:	icebp  
  43a251:	dec    esi
  43a252:	xchg   edx,eax
  43a253:	cmp    al,0x1
  43a255:	dec    ebx
  43a256:	xchg   ebx,eax
  43a257:	ins    BYTE PTR es:[edi],dx
  43a258:	shr    bl,cl
  43a25a:	cld    
  43a25b:	arpl   WORD PTR [edi-0x3f945ee3],bx
  43a261:	dec    edx
  43a262:	xchg   ebx,eax
  43a263:	(bad)  
  43a264:	fimul  WORD PTR [edx-0x6c]
  43a267:	jae    0x43a239
  43a269:	sbb    eax,0x8342ffa1
  43a26e:	add    eax,DWORD PTR [eax+eax*8+0x11]
  43a272:	mov    ecx,0x9c2ce443
  43a277:	mov    cx,0xb40f
  43a27b:	ins    DWORD PTR es:[edi],dx
  43a27c:	mov    dl,0xc
  43a27e:	mov    ebp,0x5f1a00ff
  43a283:	add    al,0x44
  43a285:	js     0x43a290
  43a287:	enter  0x826b,0xbb
  43a28b:	xchg   edx,eax
  43a28c:	push   0xe7fcaa7e
  43a291:	lahf   
  43a292:	mov    esp,0xcc696697
  43a297:	xchg   esp,eax
  43a298:	inc    ebx
  43a299:	cmp    BYTE PTR [ebx+ebx*4-0x3448d8d],0x96
  43a2a1:	popf   
  43a2a2:	scas   eax,DWORD PTR es:[edi]
  43a2a3:	mov    eax,ds:0xb5a76061
  43a2a8:	cmp    al,0x35
  43a2aa:	add    dl,BYTE PTR [eax-0x6aadc161]
  43a2b0:	mov    al,ds:0x3e75959
  43a2b5:	jge    0x43a2ba
  43a2b7:	mov    ds:0x7c452ea6,al
  43a2bc:	xchg   ebp,eax
  43a2bd:	xor    DWORD PTR [ecx+0x75],esi
  43a2c0:	mov    bl,0x5
  43a2c2:	je     0x43a2ab
  43a2c4:	add    ebp,DWORD PTR [eax]
  43a2c6:	add    esp,DWORD PTR [ebx+0x5057fca6]
  43a2cc:	mov    ds:0xb4526ffe,al
  43a2d1:	or     BYTE PTR [eax+0x46],dh
  43a2d4:	ret    
  43a2d5:	jb     0x43a2d7
  43a2d7:	inc    esp
  43a2d8:	push   es
  43a2d9:	(bad)  [ebp+0x53]
  43a2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a2dd:	ret    
  43a2de:	jae    0x43a324
  43a2e0:	enter  0x299,0xf5
  43a2e4:	add    eax,0x4465ed00
  43a2e9:	popf   
  43a2ea:	xlat   BYTE PTR ds:[ebx]
  43a2eb:	gs push ss
  43a2ed:	xchg   ebp,eax
  43a2ee:	jecxz  0x43a357
  43a2f0:	add    al,0xc3
  43a2f2:	cmp    al,BYTE PTR [eax]
  43a2f4:	lds    eax,FWORD PTR [edx]
  43a2f6:	fsub   QWORD PTR [ebp+0x13]
  43a2f9:	enter  0x4569,0xff
  43a2fd:	add    esi,DWORD PTR [eax+0x4]
  43a300:	pop    ss
  43a301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a302:	jg     0x43a36f
  43a304:	and    al,0xa7
  43a306:	xor    DWORD PTR [ebx+0x8],0xe7577fa9
  43a30d:	add    ebp,DWORD PTR [edi+0x6ea6a201]
  43a313:	inc    ebx
  43a314:	ret    
  43a315:	call   0x6678:0xa2ba6482
  43a31c:	stos   DWORD PTR es:[edi],eax
  43a31d:	mov    ds:0x3e7616e,al
  43a322:	and    eax,DWORD PTR ds:0x73fb9a00
  43a328:	cmp    eax,0x696f30b4
  43a32d:	fwait
  43a32e:	push   cs
  43a32f:	imul   ebp,DWORD PTR [ebp-0x17],0xffffff9e
  43a333:	dec    ebx
  43a334:	(bad)  
  43a335:	mov    edx,0x9a6762fb
  43a33a:	adc    ah,BYTE PTR [ebp+0x6e]
  43a33d:	stos   BYTE PTR es:[edi],al
  43a33e:	add    ah,BYTE PTR [ecx+0x6d]
  43a341:	jp     0x43a3a6
  43a343:	ja     0x43a396
  43a345:	jmp    0x9541a1e8
  43a34a:	add    BYTE PTR [eax],dh
  43a34c:	pusha  
  43a34d:	push   0x5a
  43a34f:	cmp    eax,0x5c447460
  43a354:	fs ins DWORD PTR es:[edi],dx
  43a356:	pop    edx
  43a357:	cmp    BYTE PTR [edx+0x63],ah
  43a35a:	jmp    0x2e42adfd
  43a35f:	xor    al,0x73
  43a361:	cmp    eax,0x73733148
  43a366:	cmp    eax,DWORD PTR [edi+edi*8]
  43a369:	clc    
  43a36a:	or     BYTE PTR [eax+0x551d6341],ah
  43a370:	add    BYTE PTR ds:[esi-0x60],ah
  43a374:	inc    ecx
  43a375:	arpl   WORD PTR ds:0x8646ef4,bx
  43a37b:	add    eax,0xfe0c4e64
  43a380:	jb     0x43a382
  43a382:	out    dx,eax
  43a383:	sahf   
  43a384:	inc    eax
  43a385:	arpl   WORD PTR [esi],cx
  43a387:	xor    BYTE PTR [ecx+0x50],ch
  43a38a:	or     BYTE PTR [eax],ch
  43a38c:	imul   esi,DWORD PTR [ecx+ebp*8-0x62],0xeadfe28
  43a394:	fs push 0xffffffa0
  43a397:	adc    BYTE PTR [edi+0x73],ch
  43a39a:	aad    0xe2
  43a39c:	arpl   WORD PTR [ebp+0x0],bp
  43a39f:	iret   
  43a3a0:	xchg   esi,eax
  43a3a1:	addr16 jo 0x43a368
  43a3a4:	add    cl,BYTE PTR [esi+0x5eaa0000]
  43a3aa:	inc    esi
  43a3ab:	push   es
  43a3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a3ad:	gs add BYTE PTR gs:[ecx+edx*4],al
  43a3b2:	arpl   WORD PTR [di],ax
  43a3b5:	add    ecx,DWORD PTR [ebp+0x5eaa0000]
  43a3bb:	inc    esp
  43a3bc:	sub    BYTE PTR [eax-0x5bf48db8],ch
  43a3c2:	dec    edi
  43a3c3:	add    BYTE PTR [ecx+eax*1],al
  43a3c6:	dec    ebx
  43a3c7:	gs adc cl,al
  43a3ca:	pop    ecx
  43a3cb:	jo     0x43a3dd
  43a3cd:	fwait
  43a3ce:	push   0x65
  43a3d0:	je     0x43a3d4
  43a3d2:	mov    al,BYTE PTR [ecx]
  43a3d4:	ret    
  43a3d5:	stos   DWORD PTR es:[edi],eax
  43a3d6:	ins    BYTE PTR es:[edi],dx
  43a3d7:	push   edi
  43a3d8:	fstp   QWORD PTR [esp+ebx*2+0x3bcad36f]
  43a3df:	add    BYTE PTR [eax-0x1c9ab600],ch
  43a3e5:	lahf   
  43a3e6:	imul   esi,DWORD PTR [ecx+eiz*8-0x70],0x3b
  43a3eb:	ins    BYTE PTR es:[edi],dx
  43a3ec:	aad    0x91
  43a3ee:	imul   eax,DWORD PTR [ebp+0x7c],0xffffffc7
  43a3f2:	clc    
  43a3f3:	(bad)  
  43a3f4:	jns    0x43a3fd
  43a3f6:	aas    
  43a3f7:	gs nop
  43a3f9:	ret    
  43a3fa:	pop    ebp
  43a3fb:	jae    0x43a384
  43a3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a3fe:	pop    edi
  43a3ff:	add    DWORD PTR gs:[esi],0xffffff88
  43a403:	add    ebx,eax
  43a405:	stos   DWORD PTR es:[edi],eax
  43a406:	ins    BYTE PTR es:[edi],dx
  43a407:	push   ebp
  43a408:	adc    al,0xa6
  43a40a:	pop    ecx
  43a40b:	je     0x43a3ae
  43a40d:	mov    al,0x5f
  43a40f:	outs   dx,BYTE PTR ds:[esi]
  43a410:	hlt    
  43a411:	add    DWORD PTR [ecx+0x1],edx
  43a414:	add    BYTE PTR [ebx-0x55],al
  43a417:	ins    BYTE PTR es:[edi],dx
  43a418:	dec    ebp
  43a419:	popf   
  43a41a:	into   
  43a41b:	lea    ebp,[esp+edi*2-0x3c]
  43a41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a420:	ds popf 
  43a422:	daa    
  43a423:	std    
  43a424:	inc    edx
  43a425:	dec    ebx
  43a426:	(bad)  
  43a427:	lods   al,BYTE PTR ds:[esi]
  43a428:	pop    esi
  43a429:	inc    esp
  43a42a:	lds    edx,FWORD PTR [eax+0x45dcaff]
  43a430:	inc    ecx
  43a431:	cmp    BYTE PTR [edi-0x78b4994f],bl
  43a437:	cdq    
  43a438:	jo     0x43a3d7
  43a43a:	nop
  43a43b:	dec    BYTE PTR [eax+eax*2+0x7d]
  43a43f:	mov    eax,ds:0x8e78384a
  43a444:	pop    esi
  43a445:	add    al,BYTE PTR [edi-0x70ff9950]
  43a44b:	cdq    
  43a44c:	jb     0x43a45f
  43a44e:	xchg   ebp,eax
  43a44f:	cld    
  43a450:	ret    
  43a451:	lahf   
  43a452:	cmp    BYTE PTR [ecx-0x65ad2d8d],ah
  43a458:	arpl   WORD PTR [edx],ax
  43a45a:	pop    ebp
  43a45b:	shr    BYTE PTR [eax-0x5],0x44
  43a45f:	mov    bl,0xff
  43a461:	bound  ebx,QWORD PTR [ebp-0x3]
  43a464:	inc    eax
  43a465:	shl    BYTE PTR [edi],0xb3
  43a468:	retw   
  43a46a:	dec    edi
  43a46b:	fwait
  43a46c:	jo     0x43a447
  43a46e:	cmp    al,0x9a
  43a470:	pusha  
  43a471:	jmp    0x9534:0x9e2bfceb
  43a478:	imul   eax,DWORD PTR [eax],0x419304b9
  43a47e:	scas   eax,DWORD PTR es:[edi]
  43a47f:	cld    
  43a480:	cdq    
  43a481:	dec    edi
  43a482:	mov    dl,0x12
  43a484:	call   0x824b:0xfc8c9d73
  43a48b:	or     ch,BYTE PTR [eax-0x5cf587ba]
  43a491:	bound  ebp,QWORD PTR [edx+0x2]
  43a494:	out    0x3,eax
  43a496:	push   ds
  43a497:	add    esp,DWORD PTR [edx-0x3da9915a]
  43a49d:	xchg   ebx,eax
  43a49e:	dec    ebp
  43a49f:	imul   edi,DWORD PTR [ecx-0x188a8a59],0x3
  43a4a6:	xchg   ebp,eax
  43a4a7:	add    ah,BYTE PTR [esi-0x648f8c65]
  43a4ad:	pushf  
  43a4ae:	push   ebp
  43a4af:	addr16 mov esp,0x9ffcc2b4
  43a4b5:	add    bl,BYTE PTR [edi+eiz*2-0x6d]
  43a4b9:	mov    al,0x3a
  43a4bb:	sbb    DWORD PTR [bx+0x6b4d],0x79
  43a4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a4c2:	xor    eax,0x4103e775
  43a4c7:	add    ah,BYTE PTR [edx-0x7fabf15a]
  43a4cd:	popf   
  43a4ce:	(bad)  
  43a4cf:	imul   esi,DWORD PTR [edx-0x49],0xfffffffa
  43a4d3:	jo     0x43a521
  43a4d5:	mov    ds:0x9d5552fe,eax
  43a4da:	shl    DWORD PTR [ebp+0x56],1
  43a4dd:	xchg   ecx,eax
  43a4de:	add    bl,ah
  43a4e0:	out    0x3,ax
  43a4e3:	dec    eax
  43a4e4:	add    ebp,DWORD PTR [esi+ebx*4]
  43a4e7:	mov    esi,0xcf9e444d
  43a4ec:	add    dh,BYTE PTR [ebx]
  43a4ee:	add    bl,al
  43a4f0:	cmp    DWORD PTR gs:[eax-0x6ee99a29],ebp
  43a4f7:	(bad)  [ebx+0x4]
  43a4fa:	mov    ch,0x32
  43a4fc:	cld    
  43a4fd:	pop    ebp
  43a4fe:	add    bl,ah
  43a500:	adc    esi,DWORD PTR gs:[edi-0x430a9a4f]
  43a507:	js     0x43a571
  43a509:	add    al,0xa1
  43a50b:	mov    cs,WORD PTR [ecx+0x0]
  43a50e:	pop    es
  43a50f:	inc    ebx
  43a510:	imul   ebp,DWORD PTR [esi-0x4],0x3f
  43a514:	jo     0x43a57d
  43a516:	(bad)  
  43a517:	sbb    BYTE PTR [ebx+0x0],dl
  43a51a:	xchg   ebx,eax
  43a51b:	lahf   
  43a51c:	dec    edx
  43a51d:	lds    eax,FWORD PTR [bx]
  43a520:	jo     0x43a585
  43a522:	pushf  
  43a523:	cmp    ebp,DWORD PTR [edx+0x73]
  43a526:	mov    al,0x32
  43a528:	popa   
  43a529:	imul   ebp,ecx,0xffffff9e
  43a52c:	xor    edi,esi
  43a52e:	cwde   
  43a52f:	sub    DWORD PTR [edi+0x74],ebp
  43a532:	xchg   ebp,eax
  43a533:	outs   dx,BYTE PTR es:[esi]
  43a535:	arpl   WORD PTR [eax-0x659cb6fe],cx
  43a53b:	or     eax,0xf18c615d
  43a540:	sti    
  43a541:	clc    
  43a542:	mov    eax,0x63419f00
  43a547:	jge    0x43a5a4
  43a549:	pusha  
  43a54a:	push   0x74
  43a54c:	push   edi
  43a54d:	outs   dx,DWORD PTR ds:[esi]
  43a54e:	arpl   WORD PTR [ebp+ebx*2+0x2a7f736a],ax
  43a555:	sti    
  43a556:	clc    
  43a557:	aas    
  43a558:	mov    al,ds:0x34556341
  43a55d:	pusha  
  43a55e:	push   0x5c
  43a560:	xor    ch,BYTE PTR [edi+0x5f]
  43a563:	push   ebp
  43a564:	cmp    al,0xfb
  43a566:	clc    
  43a567:	(bad)  [ecx+0x5a356341]
  43a56d:	addr16 pop edi
  43a56f:	cmp    dh,BYTE PTR [edx]
  43a571:	dec    ecx
  43a572:	pop    edi
  43a573:	cmp    al,0xfc
  43a575:	push   ecx
  43a576:	add    BYTE PTR [ebp+0x1a774da3],dl
  43a57c:	or     eax,0x396b60
  43a581:	ins    DWORD PTR es:[edi],dx
  43a582:	pop    edi
  43a583:	cld    
  43a584:	std    
  43a585:	outs   dx,BYTE PTR ds:[esi]
  43a586:	arpl   WORD PTR [eax],ax
  43a588:	push   ss
  43a589:	xchg   esp,eax
  43a58a:	inc    ecx
  43a58b:	outs   dx,BYTE PTR ds:[esi]
  43a58c:	call   0x5404:0x8b004f97
  43a593:	jb     0x43a52a
  43a595:	mov    ds:0x8ed35063,eax
  43a59a:	ins    DWORD PTR es:[edi],dx
  43a59b:	jo     0x43a5de
  43a59d:	mov    ds:0x87397566,al
  43a5a2:	clc    
  43a5a3:	jmp    FWORD PTR [ecx]
  43a5a5:	push   es
  43a5a6:	aas    
  43a5a7:	add    BYTE PTR gs:[eax],bl
  43a5aa:	mov    edx,0xbe096e5d
  43a5af:	ins    BYTE PTR es:[edi],dx
  43a5b0:	gs loope 0x43a567
  43a5b3:	pop    ebp
  43a5b4:	arpl   WORD PTR [eax],cx
  43a5b6:	inc    DWORD PTR [edx+0x1]
  43a5b9:	or     esp,DWORD PTR [edx-0x66e6b294]
  43a5bf:	ins    DWORD PTR es:[edi],dx
  43a5c0:	add    BYTE PTR [esi+0x22654504],bh
  43a5c6:	xchg   edx,eax
  43a5c7:	inc    ecx
  43a5c8:	je     0x43a5f3
  43a5ca:	fwait
  43a5cb:	ds jb  0x43a5f1
  43a5ce:	fwait
  43a5cf:	dec    eax
  43a5d0:	outs   dx,DWORD PTR ds:[esi]
  43a5d1:	sbb    eax,0x5c006c9c
  43a5d6:	add    BYTE PTR [edi+0x70],al
  43a5d9:	jmp    0xd7a8e27a
  43a5de:	cdq    
  43a5df:	ins    BYTE PTR es:[edi],dx
  43a5e0:	outs   dx,DWORD PTR ds:[esi]
  43a5e1:	les    esi,FWORD PTR [ebp-0x310008]
  43a5e7:	ds gs cwde 
  43a5ea:	mov    cl,0x6d
  43a5ec:	bound  eax,QWORD PTR [ecx+0x347566a3]
  43a5f2:	push   es
  43a5f3:	mov    es,WORD PTR [edx]
  43a5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a5f6:	mov    ds:0x87a94b6c,eax
  43a5fb:	pop    edx
  43a5fc:	outs   dx,DWORD PTR ds:[esi]
  43a5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a5fe:	nop
  43a5ff:	pop    esp
  43a600:	push   ebx
  43a601:	popf   
  43a602:	pop    ss
  43a603:	mov    ds:0xfcebb873,eax
  43a608:	dec    ebp
  43a609:	pushf  
  43a60a:	sub    BYTE PTR [edi-0x19fff8d],bl
  43a610:	xchg   ebp,eax
  43a611:	jb     0x43a667
  43a613:	neg    DWORD PTR [edi+0x41f546a]
  43a619:	jle    0x43a5b7
  43a61b:	test   al,0x9f
  43a61d:	jae    0x43a668
  43a61f:	rcl    DWORD PTR [edx-0x4738839e],cl
  43a625:	bound  ebp,QWORD PTR [esi-0x3c]
  43a628:	mov    BYTE PTR [eax+0x4d],ch
  43a62b:	jmp    0x43a629
  43a62d:	pop    esp
  43a62e:	lahf   
  43a62f:	popf   
  43a630:	lahf   
  43a631:	pusha  
  43a632:	xor    al,0xbc
  43a634:	mov    BYTE PTR [edx+0x4f],ah
  43a637:	nop
  43a638:	fwait
  43a639:	imul   eax,DWORD PTR [ecx-0x70],0x9c384a8d
  43a640:	xchg   ecx,eax
  43a641:	pop    esi
  43a642:	inc    edx
  43a643:	xchg   BYTE PTR [ebp+0x42fa2ff],ch
  43a649:	inc    edi
  43a64a:	push   cs
  43a64b:	sahf   
  43a64c:	lahf   
  43a64d:	pop    esp
  43a64e:	or     DWORD PTR [edi+0x73116f97],ebx
  43a654:	std    
  43a655:	xor    eax,0x66929b9f
  43a65a:	or     ebx,DWORD PTR [eax-0x51]
  43a65d:	add    ax,WORD PTR [eax-0x69]
  43a661:	jo     0x43a600
  43a663:	fadd   QWORD PTR [ebx]
  43a665:	inc    ebx
  43a666:	in     al,dx
  43a667:	dec    esi
  43a668:	popf   
  43a669:	imul   ebp,edi,0x46
  43a66c:	mov    ds:0xfd769d73,eax
  43a671:	inc    esi
  43a672:	add    BYTE PTR [ebx-0x319266c9],bh
  43a678:	mov    ds:0xc02cf73,eax
  43a67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a67f:	scas   al,BYTE PTR es:[edi]
  43a680:	add    ah,BYTE PTR [esi+0x874e104]
  43a686:	xchg   ecx,eax
  43a687:	fistp  WORD PTR [esi+0x2]
  43a68a:	lahf   
  43a68b:	sbb    bh,cl
  43a68d:	pop    edx
  43a68e:	add    ebx,DWORD PTR [edi+ebx*2-0xd]
  43a692:	mov    al,0x83
  43a694:	push   0x4b8d990b
  43a699:	stc    
  43a69a:	mov    eax,ds:0x6190285
  43a69f:	dec    ebp
  43a6a0:	imul   edx,esi,0xd65f578f
  43a6a6:	xchg   esp,eax
  43a6a7:	inc    ebx
  43a6a8:	popa   
  43a6a9:	les    esi,FWORD PTR [eax+0x438f8da]
  43a6af:	pop    edi
  43a6b0:	imul   ecx,ebx,0xffffff97
  43a6b3:	pop    eax
  43a6b4:	pop    edi
  43a6b5:	(bad)  
  43a6b6:	pop    edx
  43a6b8:	clc    
  43a6b9:	sti    
  43a6ba:	add    eax,0x998c7264
  43a6bf:	dec    ebp
  43a6c0:	imul   ecx,DWORD PTR [ecx-0x498eca61],0xffffff8f
  43a6c7:	inc    ebx
  43a6c8:	outs   dx,BYTE PTR ds:[esi]
  43a6c9:	sbb    BYTE PTR [eax+0x3e75004],0x4b
  43a6d0:	add    eax,0x4f0e9e96
  43a6d5:	jg     0x43a66c
  43a6d7:	add    bh,bh
  43a6d9:	popa   
  43a6da:	cmp    DWORD PTR [edi-0x6fb18c01],0x5
  43a6e1:	jae    0x43a6ca
  43a6e3:	add    esp,ebx
  43a6e5:	add    ah,BYTE PTR [esi]
  43a6e7:	cwde   
  43a6e8:	cmc    
  43a6e9:	jae    0x43a72f
  43a6eb:	sar    BYTE PTR [edi-0x3a6fb18d],0x72
  43a6f2:	out    0x3,eax
  43a6f4:	mov    ch,0x1
  43a6f6:	add    BYTE PTR [esi],ch
  43a6f8:	and    dh,BYTE PTR [eax+edx*2+0x3b]
  43a6fc:	adc    al,0x57
  43a6fe:	arpl   WORD PTR [edx],bx
  43a700:	or     BYTE PTR [ebx+0x67],dl
  43a703:	paddw  mm5,QWORD PTR [edx+0x71]
  43a707:	cmp    cl,BYTE PTR ds:0x34007459
  43a70d:	push   0x0
  43a70f:	stc    
  43a710:	sahf   
  43a711:	xor    eax,0x743e046e
  43a716:	arpl   WORD PTR [esi],bx
  43a718:	es push 0x64
  43a71b:	dec    BYTE PTR ds:0x22c87447
  43a721:	popa   
  43a722:	imul   ecx,edi,0xa7f8f82d
  43a728:	sahf   
  43a729:	xor    eax,0x6531be6c
  43a72e:	push   ecx
  43a72f:	shl    BYTE PTR [esp+eiz*2],1
  43a732:	imul   esi,DWORD PTR [esi-0x42a08bef],0xe96a6b27
  43a73c:	add    BYTE PTR [esi+0x13b9fda0],bl
  43a742:	je     0x43a794
  43a744:	fwait
  43a745:	add    eax,0x99a6357
  43a74a:	push   ebx
  43a74b:	addr16 jg 0x43a788
  43a74e:	push   0x71
  43a750:	call   0x6925:0x90745822
  43a757:	add    BYTE PTR [edi-0x7b91ca62],dl
  43a75d:	aas    
  43a75e:	jae    0x43a7c3
  43a760:	sub    eax,0x5565663c
  43a765:	adc    ah,BYTE PTR [edi+0x51]
  43a768:	jmp    0x2a43d40b
  43a76d:	cmp    DWORD PTR [eax+0x6e],ebx
  43a770:	add    BYTE PTR [eax-0x799a9071],cl
  43a776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a777:	clc    
  43a778:	push   DWORD PTR [ecx-0x3]
  43a77b:	ds gs jo 0x43a739
  43a77f:	pop    ecx
  43a780:	jae    0x43a712
  43a782:	mov    ch,0x66
  43a784:	jo     0x43a717
  43a786:	xchg   edx,eax
  43a787:	inc    ecx
  43a788:	outs   dx,BYTE PTR ds:[esi]
  43a789:	xchg   edx,eax
  43a78a:	(bad)  
  43a78b:	clc    
  43a78c:	(bad)  
  43a78d:	call   0xa5abe294
  43a792:	xchg   esp,eax
  43a793:	dec    ebp
  43a794:	jo     0x43a79a
  43a796:	mov    ds:0x2f4576a,al
  43a79b:	sub    eax,DWORD PTR [ecx]
  43a79d:	ret    
  43a79e:	mov    eax,ds:0xe700496c
  43a7a3:	(bad)  
  43a7a4:	dec    cx
  43a7a6:	ficom  DWORD PTR [edi+eiz*2+0x43feb300]
  43a7ad:	jb     0x43a794
  43a7af:	xchg   DWORD PTR [ecx+0x63],eax
  43a7b2:	jmp    0x43a740
  43a7b4:	clc    
  43a7b5:	inc    DWORD PTR [edi+0x216f5404]
  43a7bb:	lea    esp,[ecx+0x63]
  43a7be:	sti    
  43a7bf:	xchg   esi,eax
  43a7c0:	pop    ebp
  43a7c1:	add    BYTE PTR [esi],al
  43a7c3:	(bad)  
  43a7c4:	ds adc BYTE PTR gs:[ebp+ebx*2+0x59901679],bh
  43a7cd:	jb     0x43a7ef
  43a7cf:	mov    cl,0x6c
  43a7d1:	popa   
  43a7d2:	adc    BYTE PTR [ebx+0x48dfff8],ah
  43a7d8:	inc    ebp
  43a7d9:	popa   
  43a7da:	add    al,0xa5
  43a7dc:	popa   
  43a7dd:	outs   dx,BYTE PTR ds:[esi]
  43a7de:	and    BYTE PTR [ebp-0x6834af91],cl
  43a7e4:	data16 je 0x43a7ae
  43a7e7:	(bad)  
  43a7e8:	rol    BYTE PTR [ecx],cl
  43a7ea:	popf   
  43a7eb:	and    cl,BYTE PTR [ebp-0x5fca3bb0]
  43a7f1:	push   0xc1fcebca
  43a7f6:	lahf   
  43a7f7:	sbb    BYTE PTR [edi-0x6dbd158d],bl
  43a7fd:	arpl   dx,cx
  43a7ff:	sub    al,0xb4
  43a801:	push   0x3fcebae
  43a806:	add    BYTE PTR [esp+ebx*1-0x2238c61],bl
  43a80d:	pushf  
  43a80e:	bound  ecx,QWORD PTR [esi-0x62926ef1]
  43a814:	fild   DWORD PTR [ebx]
  43a816:	inc    ecx
  43a817:	sub    bh,0xbd
  43a81a:	imul   edi,DWORD PTR [eax+edi*8-0x73],0x4b
  43a81f:	mov    dh,ch
  43a821:	cdq    
  43a822:	push   eax
  43a823:	popf   
  43a824:	mov    DWORD PTR [ebx],0xaccf8041
  43a82a:	pop    esi
  43a82b:	outs   dx,DWORD PTR ds:[esi]
  43a82c:	(bad)  
  43a82d:	xchg   edx,eax
  43a82e:	jae    0x43a7cd
  43a830:	addr16 add al,0x41
  43a833:	cmp    BYTE PTR [edi-0x40c49957],dh
  43a839:	xchg   ecx,eax
  43a83a:	jo     0x43a8ab
  43a83c:	(bad)  
  43a83d:	popf   
  43a83e:	jae    0x43a7dd
  43a840:	je     0x43a83f
  43a842:	inc    ebx
  43a843:	inc    esp
  43a844:	cwde   
  43a845:	mov    WORD PTR [esi+0x31],ds
  43a848:	mov    BYTE PTR [edx+ecx*2+0x5e8d9838],dl
  43a84f:	add    bh,BYTE PTR [edi-0x57]
  43a852:	call   DWORD PTR [edx+0xe4afedf]
  43a858:	jge    0x43a803
  43a85a:	pop    esi
  43a85b:	hlt    
  43a85c:	ja     0x43a819
  43a85e:	push   0x6b8f96ef
  43a863:	jmp    0xf6d7f86a
  43a868:	pop    edi
  43a869:	sub    ah,BYTE PTR [edx+0x465ff800]
  43a86f:	nop
  43a870:	leave  
  43a871:	add    bl,bh
  43a873:	add    esi,esp
  43a875:	arpl   WORD PTR [edi],si
  43a877:	scas   al,BYTE PTR es:[edi]
  43a878:	ret    
  43a879:	jo     0x43a8ae
  43a87b:	(bad)  
  43a87c:	jecxz  0x43a8e4
  43a87e:	push   ds
  43a87f:	lahf   
  43a880:	mov    bl,0x4d
  43a882:	out    0x3,eax
  43a884:	into   
  43a885:	push   ecx
  43a886:	sub    al,0xb2
  43a888:	jns    0x43a8ba
  43a88a:	leave  
  43a88b:	lahf   
  43a88c:	mov    dh,0x66
  43a88e:	out    0x3,eax
  43a890:	sbb    al,0x3
  43a892:	and    BYTE PTR [ecx-0x67eca093],dl
  43a898:	popa   
  43a899:	or     cl,BYTE PTR fs:[ebp-0x5fffae8c]
  43a8a0:	cli    
  43a8a1:	hlt    
  43a8a2:	mov    al,0x2
  43a8a4:	pop    esp
  43a8a5:	pop    edi
  43a8a6:	(bad)  [edi-0x703d9b81]
  43a8ac:	jp     0x43a8ff
  43a8ae:	rcr    BYTE PTR [edi+0x3baf4da],0x90
  43a8b5:	ror    DWORD PTR gs:[ebp-0x4f4c8fc1],1
  43a8bc:	cmp    ebx,DWORD PTR [esi-0x65]
  43a8bf:	xchg   esp,eax
  43a8c0:	imul   ebp,DWORD PTR [esi-0x4b],0xb65d449a
  43a8c7:	call   0x1d9:0x3e74d3e
  43a8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8cf:	xchg   ecx,eax
  43a8d0:	add    BYTE PTR [ebx],dl
  43a8d2:	jae    0x43a867
  43a8d4:	mov    esp,0xa2af6eff
  43a8d9:	stc    
  43a8da:	push   0xffffff97
  43a8dc:	mov    ds:0x840061f0,al
  43a8e1:	sahf   
  43a8e2:	mov    ds:0x6d0ca9ff,eax
  43a8e7:	jo     0x43a946
  43a8e9:	pop    esi
  43a8ea:	push   edi
  43a8eb:	outs   dx,DWORD PTR ds:[esi]
  43a8ec:	push   esp
  43a8ed:	push   es
  43a8ee:	data16 arpl WORD PTR [edx],bp
  43a8f1:	xor    BYTE PTR [edx+0x74],ch
  43a8f4:	inc    esp
  43a8f5:	and    DWORD PTR [eax+0x51],esi
  43a8f8:	jmp    0x2a43669b
  43a8fd:	das    
  43a8fe:	ins    DWORD PTR es:[edi],dx
  43a8ff:	jo     0x43a93e
  43a901:	out    dx,eax
  43a902:	pusha  
  43a903:	ins    BYTE PTR es:[edi],dx
  43a904:	inc    esp
  43a905:	(bad)  
  43a906:	data16 arpl WORD PTR [edx],bp
  43a909:	adc    BYTE PTR [edx+0x74],ch
  43a90c:	add    al,0x11
  43a90e:	jo     0x43a910
  43a910:	pop    edx
  43a911:	sahf   
  43a912:	xor    eax,0x7029106e
  43a917:	cmp    eax,0x74552bfb
  43a91c:	add    al,0x41
  43a91e:	push   ebp
  43a91f:	ins    DWORD PTR es:[edi],dx
  43a920:	add    DWORD PTR [ecx+0xf29ffb0],esp
  43a926:	ins    DWORD PTR es:[edi],dx
  43a927:	jo     0x43a906
  43a929:	sub    ah,BYTE PTR [ecx+0x6d]
  43a92c:	aad    0xc
  43a92e:	imul   esi,DWORD PTR [edi-0x5f],0xffffffff
  43a932:	pushw  0xe9
  43a936:	sahf   
  43a937:	retf   0xa9ff
  43a93a:	sub    al,0x6d
  43a93c:	jo     0x43a8f3
  43a93e:	push   es
  43a93f:	push   ebp
  43a940:	ins    DWORD PTR es:[edi],dx
  43a941:	sar    edx,0x54
  43a944:	je     0x43a90e
  43a946:	sahf   
  43a947:	icebp  
  43a948:	(bad)  
  43a949:	mov    ch,0xe
  43a94b:	popa   
  43a94c:	push   0xffffffb9
  43a94e:	or     al,0x6b
  43a950:	pop    ebp
  43a951:	mov    WORD PTR ds:0x357e5466,gs
  43a957:	pusha  
  43a958:	push   0x0
  43a95a:	je     0x43a95b
  43a95c:	dec    esi
  43a95d:	add    DWORD PTR [ebx],edi
  43a95f:	xchg   esp,eax
  43a960:	ins    BYTE PTR es:[edi],dx
  43a961:	push   ebx
  43a962:	sbb    eax,0x26754b93
  43a967:	shr    BYTE PTR [ebp+0x74],0xcc
  43a96b:	outs   dx,DWORD PTR ds:[esi]
  43a96c:	push   0x69
  43a96e:	enter  0x75,0x0
  43a972:	jo     0x43a971
  43a974:	inc    esi
  43a975:	jo     0x43a950
  43a977:	jo     0x43a9cd
  43a979:	push   0x64596986
  43a97e:	test   al,0x6f
  43a980:	arpl   WORD PTR [ebp-0x1e],sp
  43a983:	(bad)  
  43a984:	push   edi
  43a985:	add    DWORD PTR [ebx+0x69],edi
  43a988:	je     0x43a9dd
  43a98a:	lea    ebp,[edx+0x4b]
  43a98d:	jne    0x43a925
  43a98f:	cmp    eax,0x6f9c746d
  43a994:	push   0x69
  43a996:	test   al,0x75
  43a998:	cmp    ebp,DWORD PTR [edi+0x0]
  43a99b:	or     DWORD PTR [ecx+0x74],esi
  43a99e:	add    BYTE PTR [esi-0x79ac103],bh
  43a9a4:	dec    edx
  43a9a5:	imul   ebx,DWORD PTR [bx+di+0x4170],0x6e
  43a9ab:	fisubr DWORD PTR [edi+0x6a]
  43a9ae:	ins    DWORD PTR es:[edi],dx
  43a9af:	aad    0x6a
  43a9b1:	popa   
  43a9b2:	outs   dx,DWORD PTR ds:[esi]
  43a9b3:	loop   0x43a9b3
  43a9b5:	jnp    0x43a9b7
  43a9b7:	pop    es
  43a9b8:	ins    DWORD PTR es:[edi],dx
  43a9b9:	pop    ebp
  43a9ba:	popa   
  43a9bb:	or     BYTE PTR [edx+0x50],ch
  43a9be:	jb     0x43a993
  43a9c0:	pop    ebx
  43a9c1:	pop    ebp
  43a9c2:	jae    0x43a9bb
  43a9c4:	cmp    eax,0x69f7556b
  43a9c9:	push   0x57
  43a9cb:	mov    ah,0xfe
  43a9cd:	mov    es,WORD PTR [ecx]
  43a9cf:	lock outs dx,DWORD PTR ds:[esi]
  43a9d1:	imul   ebx,DWORD PTR [di+0x6c8e],0x50
  43a9d7:	jae    0x7f3d1153
  43a9dd:	gs arpl bx,bp
  43a9e0:	jp     0x43aa4a
  43a9e2:	jae    0x43a9e4
  43a9e4:	xchg   ecx,eax
  43a9e5:	cld    
  43a9e6:	sbb    BYTE PTR [ebp-0xf999f66],bl
  43a9ec:	dec    esp
  43a9ed:	js     0x43aa43
  43a9ef:	repnz push esp
  43a9f1:	addr16 push 0xffffffed
  43a9f4:	dec    ebp
  43a9f5:	imul   esi,DWORD PTR [edx-0x3c],0x2f
  43a9f9:	addr16 popa 
  43a9fb:	shr    BYTE PTR [esp+eax*1],0xd2
  43a9ff:	add    BYTE PTR [ebp-0x52888de4],bl
  43aa05:	das    
  43aa06:	push   esi
  43aa07:	arpl   WORD PTR [edi-0x318899be],bp
  43aa0d:	adc    ah,BYTE PTR [ebp+0x6a]
  43aa10:	mov    esp,0x806e7717
  43aa15:	xor    BYTE PTR [ebx+eax*8],al
  43aa18:	popf   
  43aa19:	sbb    al,0x72
  43aa1b:	ja     0x43a9aa
  43aa1d:	out    dx,eax
  43aa1e:	inc    ebp
  43aa1f:	arpl   WORD PTR [ecx+0x4d776734],cx
  43aa25:	cli    
  43aa26:	jno    0x43aa87
  43aa28:	sbb    bl,0xfc
  43aa2b:	lds    ebx,FWORD PTR [ebp+0x6d77729c]
  43aa31:	xlat   BYTE PTR ds:[ebx]
  43aa32:	dec    ebx
  43aa33:	imul   ecx,DWORD PTR [ebp-0x38],0x72
  43aa37:	je     0x43aa9f
  43aa39:	(bad)  
  43aa3a:	jnp    0x43aa3c
  43aa3c:	popf   
  43aa3d:	jo     0x43aa3c
  43aa3f:	cmp    al,0x4f
  43aa41:	ret    0x746c
  43aa44:	popa   
  43aa45:	mov    esi,0xb02f7471
  43aa4a:	jnp    0x43aa91
  43aa4c:	inc    eax
  43aa4d:	add    ah,BYTE PTR [eax-0x4ffcd9fd]
  43aa53:	jno    0x43aa57
  43aa55:	ja     0x43a9d7
  43aa57:	or     DWORD PTR fs:[eax-0x4a],ebp
  43aa5b:	jl     0x43aa55
  43aa5d:	jbe    0x43a9eb
  43aa5f:	jo     0x43aa31
  43aa61:	pop    edx
  43aa62:	je     0x43aadb
  43aa64:	add    BYTE PTR [ecx],al
  43aa66:	bound  edi,QWORD PTR [edx+0x71]
  43aa69:	fisubr WORD PTR [edx-0x6e]
  43aa6c:	add    ebp,esp
  43aa6e:	add    esi,DWORD PTR [eax]
  43aa70:	jb     0x43aa6c
  43aa72:	jbe    0x43aac4
  43aa74:	arpl   cx,cx
  43aa76:	pop    ebx
  43aa77:	dec    ebp
  43aa78:	addr16 loopne 0x43aae2
  43aa7b:	inc    esi
  43aa7c:	ja     0x43aa39
  43aa7e:	pop    ebx
  43aa7f:	cmp    edi,DWORD PTR [ebx-0x27]
  43aa82:	addr16 ss gs retf 
  43aa86:	pop    ebx
  43aa87:	aaa    
  43aa88:	js     0x43aa4e
  43aa8a:	je     0x43aa73
  43aa8c:	add    ebp,edi
  43aa8e:	add    esi,DWORD PTR [esi]
  43aa90:	addr16 test eax,0x8e650455
  43aa96:	je     0x43aa98
  43aa98:	js     0x43aa24
  43aa9a:	inc    esi
  43aa9b:	add    al,0x75
  43aa9d:	push   0x89741074
  43aaa2:	popa   
  43aaa3:	cmc    
  43aaa4:	inc    edi
  43aaa5:	pop    edx
  43aaa6:	add    eax,DWORD PTR gs:[ebx+eax*4]
  43aaaa:	add    ah,BYTE PTR [esi]
  43aaac:	jno    0x43ab25
  43aaae:	js     0x43aa7c
  43aab0:	jne    0x43ab1b
  43aab2:	push   ebp
  43aab3:	shl    DWORD PTR [ebp+0x42],cl
  43aab6:	pusha  
  43aab7:	retf   0x3e54
  43aaba:	gs aam 0x75
  43aabd:	inc    edx
  43aabe:	jbe    0x43aa80
  43aac0:	inc    edi
  43aac1:	ds jne 0x43aa8a
  43aac4:	jne    0x43ab08
  43aac6:	jb     0x43aac8
  43aac8:	mov    ebp,0x54602d00
  43aacd:	mov    esi,0x9c5d6551
  43aad2:	sub    BYTE PTR [ecx+0x74],ch
  43aad5:	mov    al,ds:0x8a6d63e2
  43aada:	or     BYTE PTR [eax+0x70],ch
  43aadd:	xchg   ebp,eax
  43aade:	or     eax,0x9ee95161
  43aae3:	cmp    edi,edi
  43aae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aae6:	add    esi,DWORD PTR [edi+0x4d]
  43aae9:	mov    ecx,?
  43aaeb:	jae    0x43ab5b
  43aaed:	xor    dl,0x77
  43aaf0:	inc    esp
  43aaf1:	dec    esp
  43aaf2:	call   0xd1941944
  43aaf7:	jbe    0x43ab62
  43aaf9:	pop    ebx
  43aafa:	call   0xa181084e
  43aaff:	mov    eax,0x76ba19fd
  43ab04:	dec    ebp
  43ab05:	inc    esp
  43ab06:	shl    BYTE PTR [ebx+0x6e],0x40
  43ab0a:	mov    ch,0x77
  43ab0c:	inc    esp
  43ab0d:	inc    esp
  43ab0e:	mov    al,0x4d
  43ab10:	outs   dx,BYTE PTR ds:[esi]
  43ab11:	adc    BYTE PTR [ecx+0x701b6976],ch
  43ab17:	dec    edi
  43ab18:	pop    ebp
  43ab19:	add    eax,0x3afe3799
  43ab1e:	and    BYTE PTR [ecx+0x3d],0xfb
  43ab22:	jnp    0x43ab73
  43ab24:	je     0x43ab2a
  43ab26:	push   0x712c7763
  43ab2b:	push   ecx
  43ab2c:	add    bh,bh
  43ab2e:	add    BYTE PTR [eax+0x4fce6340],ah
  43ab34:	jae    0x43ab99
  43ab36:	fist   DWORD PTR [edi+0x54]
  43ab39:	pop    edi
  43ab3a:	lds    ecx,FWORD PTR [ebx+0x63]
  43ab3d:	inc    ebx
  43ab3e:	shl    DWORD PTR [ebp+0x2],1
  43ab41:	add    BYTE PTR [eax],al
  43ab43:	aad    0x5
  43ab45:	dec    edx
  43ab46:	gs jecxz 0x43ab9b
  43ab49:	jo     0x43abb0
  43ab4b:	fidivr DWORD PTR [esi]
  43ab4d:	pop    ebp
  43ab4e:	jns    0x43ab51
  43ab50:	ins    BYTE PTR es:[edi],dx
  43ab51:	dec    edi
  43ab52:	add    ah,al
  43ab54:	add    eax,0x4623654a
  43ab59:	ins    BYTE PTR es:[edi],dx
  43ab5a:	outs   dx,DWORD PTR ds:[esi]
  43ab5b:	aaa    
  43ab5c:	push   0x32d6543
  43ab61:	jbe    0x43ab65
  43ab63:	es push 0x7721535f
  43ab69:	dec    esi
  43ab6a:	popa   
  43ab6b:	sbb    BYTE PTR [eax+0x5d],bh
  43ab6e:	inc    ebp
  43ab6f:	in     al,dx
  43ab70:	dec    edx
  43ab71:	add    BYTE PTR [eax],al
  43ab73:	jae    0x43ab7b
  43ab75:	cmp    eax,0x6c65f171
  43ab7a:	push   ebx
  43ab7b:	fstp   QWORD PTR [edx+0x0]
  43ab7e:	add    BYTE PTR [ebp+0x3a],dh
  43ab81:	dec    esi
  43ab82:	inc    ecx
  43ab83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ab84:	cmp    eax,0x5aaa322b
  43ab89:	ins    BYTE PTR es:[edi],dx
  43ab8a:	ins    BYTE PTR es:[edi],dx
  43ab8b:	inc    esp
  43ab8c:	add    esi,DWORD PTR [eax+0x1]
  43ab8f:	jae    0x43ac09
  43ab91:	data16 jae 0x43ab94
  43ab94:	test   BYTE PTR [ecx+eiz*2+0x6e],dh
  43ab98:	mov    al,0x68
  43ab9a:	dec    edi
  43ab9b:	add    BYTE PTR [ebx+0xa766f05],bl
  43aba1:	je     0x43ac13
  43aba3:	jb     0x43ab52
  43aba5:	pusha  
  43aba6:	je     0x43ac0e
  43aba8:	lds    eax,FWORD PTR [esi]
  43abaa:	bound  eax,QWORD PTR [ecx]
  43abac:	xchg   ecx,eax
  43abad:	je     0x43ac1b
  43abaf:	push   ebp
  43abb0:	jmp    0x5d72:0xd5636b59
  43abb7:	inc    ecx
  43abb8:	les    eax,FWORD PTR [edx]
  43abba:	push   ss
  43abbb:	add    DWORD PTR [ebp+0x5e6e70ac],ebx
  43abc1:	scas   al,BYTE PTR es:[edi]
  43abc2:	ins    BYTE PTR es:[edi],dx
  43abc3:	dec    edx
  43abc4:	push   esp
  43abc5:	call   0x7463:0x899d6cfc
  43abcc:	inc    ebp
  43abcd:	mov    ds:0x8d4f536d,al
  43abd2:	push   ecx
  43abd3:	add    BYTE PTR [ebp-0x3b0034e],bl
  43abd9:	xchg   edi,eax
  43abda:	fs inc edx
  43abdc:	add    al,0x86
  43abde:	pusha  
  43abdf:	inc    edx
  43abe0:	hlt    
  43abe1:	outs   dx,DWORD PTR ds:[esi]
  43abe2:	push   0x6796fc4a
  43abe7:	push   ecx
  43abe8:	popf   
  43abe9:	jo     0x43abef
  43abeb:	push   eax
  43abec:	cld    
  43abed:	outs   dx,DWORD PTR ds:[esi]
  43abee:	gs dec esi
  43abf0:	add    BYTE PTR [edi+0x6a],ch
  43abf3:	jb     0x43abed
  43abf5:	sbb    eax,0xc0006c6b
  43abfa:	sub    BYTE PTR [ebx+eiz*2-0x42],dh
  43abfe:	sub    al,0x4
  43ac00:	adc    eax,0x6e78289c
  43ac05:	ficom  WORD PTR [esi+0x74]
  43ac08:	dec    edx
  43ac09:	(bad)  
  43ac0b:	cld    
  43ac0c:	push   esp
  43ac0d:	popf   
  43ac0e:	or     esp,DWORD PTR [ebx+0x74]
  43ac11:	mov    ch,0x22
  43ac13:	ins    DWORD PTR es:[edi],dx
  43ac14:	inc    esp
  43ac15:	mov    ah,0x9
  43ac17:	addr16 pop ebp
  43ac19:	xchg   ecx,eax
  43ac1a:	cld    
  43ac1b:	ins    DWORD PTR es:[edi],dx
  43ac1c:	ja     0x43ac88
  43ac1e:	(bad)  
  43ac20:	sub    eax,0x74632b9d
  43ac25:	jne    0x43ac41
  43ac27:	push   0x78036064
  43ac2c:	arpl   WORD PTR [ebx+0x7b696be8],ax
  43ac32:	adc    al,0x4
  43ac34:	push   ebx
  43ac35:	popf   
  43ac36:	add    dh,BYTE PTR [edi-0x5da5ae9c]
  43ac3c:	push   0x6cd54649
  43ac41:	dec    edi
  43ac42:	addr16 cdq 
  43ac44:	js     0x43ac7c
  43ac46:	pusha  
  43ac47:	int3   
  43ac48:	jno    0x43ac96
  43ac4a:	add    ah,BYTE PTR [ebx+eax*1+0x4d]
  43ac4e:	arpl   WORD PTR [ebx-0x4398a495],di
  43ac54:	outs   dx,BYTE PTR ds:[esi]
  43ac55:	das    
  43ac56:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43ac58:	fs clc 
  43ac5a:	pop    ecx
  43ac5b:	xchg   esi,eax
  43ac5c:	outs   dx,DWORD PTR ds:[esi]
  43ac5d:	add    dl,dh
  43ac5f:	jno    0x43ace0
  43ac61:	push   esi
  43ac62:	popf   
  43ac63:	add    dl,BYTE PTR [edx+0x3]
  43ac66:	sar    BYTE PTR [edx],1
  43ac68:	stos   DWORD PTR es:[edi],eax
  43ac69:	push   0x68736809
  43ac6e:	iret   
  43ac6f:	arpl   WORD PTR [ebx-0x18aa0188],ax
  43ac75:	add    esi,DWORD PTR [eax]
  43ac77:	add    dh,BYTE PTR [esi]
  43ac79:	dec    esp
  43ac7a:	loope  0x43ace3
  43ac7c:	dec    ebx
  43ac7d:	addr16 leave 
  43ac7f:	addr16 push ds
  43ac81:	rcl    BYTE PTR [di-0x19],cl
  43ac85:	add    esp,DWORD PTR [ebx-0x3487e9fd]
  43ac8b:	inc    ecx
  43ac8c:	dec    esp
  43ac8d:	je     0x43ac76
  43ac8f:	push   ebp
  43ac90:	out    0x3,eax
  43ac92:	mov    al,0x2
  43ac94:	pop    ss
  43ac95:	arpl   WORD PTR [ecx-0x6e9ccba6],bp
  43ac9b:	popa   
  43ac9c:	sqrtps xmm1,XMMWORD PTR [ebp-0x62aaf999]
  43aca3:	add    dh,BYTE PTR [esi+0x4]
  43aca6:	ins    DWORD PTR es:[edi],dx
  43aca7:	arpl   bx,di
  43aca9:	imul   ebp,DWORD PTR [eax+0x59],0x10
  43acad:	je     0x43ad12
  43acaf:	pop    ebp
  43acb0:	add    BYTE PTR [esi],al
  43acb2:	gs push ebx
  43acb4:	add    BYTE PTR [esi-0x67],cl
  43acb7:	push   edx
  43acb8:	pop    edi
  43acb9:	fld    QWORD PTR [esi+0x51]
  43acbc:	push   0xffffffd8
  43acbe:	dec    ebx
  43acbf:	pop    ebx
  43acc0:	je     0x43ac8e
  43acc2:	add    BYTE PTR [ebp+0x72],ch
  43acc5:	pop    edi
  43acc6:	retf   0x5f3b
  43acc9:	push   ecx
  43acca:	jmp    0x9944186d
  43accf:	aas    
  43acd0:	jbe    0x43ad3a
  43acd2:	cwde   
  43acd3:	xor    ebx,DWORD PTR [ebx+0x74]
  43acd6:	les    ecx,FWORD PTR [ebp+0x72]
  43acd9:	pop    edi
  43acda:	mov    al,BYTE PTR [ebx]
  43acdc:	pop    esi
  43acdd:	push   ecx
  43acde:	jmp    0xb943df81
  43ace3:	push   DWORD PTR [esi+0x68]
  43ace6:	test   al,0xfa
  43ace8:	data16 ds mov ch,bh
  43acec:	gs ins DWORD PTR es:[edi],dx
  43acee:	(bad)  
  43acef:	call   FWORD PTR [ebp+0x68]
  43acf2:	sahf   
  43acf3:	sahf   
  43acf4:	or     edi,edi
  43acf6:	cdq    
  43acf7:	jmp    0x4738:0xd1543d5c
  43acfe:	ss cdq 
  43ad00:	cmp    eax,0x2bf02548
  43ad05:	push   eax
  43ad06:	and    BYTE PTR [ebx+0x66],dh
  43ad09:	ins    BYTE PTR es:[edi],dx
  43ad0a:	push   ebp
  43ad0b:	mov    eax,ds:0xe119ffad
  43ad10:	inc    ecx
  43ad11:	arpl   WORD PTR ds:0x456c59e3,di
  43ad17:	mov    edx,0x9508505c
  43ad1c:	pop    edx
  43ad1d:	push   ecx
  43ad1e:	jmp    0x2a43adc1
  43ad23:	js     0x43ad7c
  43ad25:	imul   ecx,DWORD PTR [eax],0x0
  43ad28:	jae    0x43ad90
  43ad2a:	dec    esp
  43ad2b:	add    BYTE PTR [ebp-0x5caba2a4],cl
  43ad31:	aas    
  43ad32:	push   0x67
  43ad34:	jmp    0x4b00:0xd6000056
  43ad3b:	push   0x456c5be9
  43ad40:	mov    esp,0xe8755b64
  43ad45:	fs dec edi
  43ad47:	add    BYTE PTR [edi],al
  43ad49:	cmp    BYTE PTR ds:0x2a32f04c,bh
  43ad4f:	fcomp  DWORD PTR cs:[ebx+0x6c]
  43ad53:	add    dl,dl
  43ad55:	(bad)  
  43ad56:	ds gs call 0x36a918b1
  43ad5d:	cmp    eax,0x44196d59
  43ad62:	js     0x43adbb
  43ad64:	je     0x43ad65
  43ad66:	dec    edx
  43ad67:	gs pop ss
  43ad69:	je     0x43add5
  43ad6b:	xor    esi,DWORD PTR [esi]
  43ad6d:	sbb    eax,0xff206c64
  43ad72:	(bad)  
  43ad74:	aaa    
  43ad75:	pop    esi
  43ad76:	cmp    esi,DWORD PTR [edx+0x19]
  43ad79:	pusha  
  43ad7a:	je     0x43ade1
  43ad7c:	lea    ebx,[eax+0x6b]
  43ad7f:	je     0x43ad66
  43ad81:	pop    eax
  43ad82:	pop    ebx
  43ad83:	gs xor al,0xff
  43ad86:	imul   eax,DWORD PTR [eax],0x77
  43ad89:	push   edi
  43ad8a:	dec    ebp
  43ad8b:	outs   dx,BYTE PTR ds:[esi]
  43ad8c:	add    ch,cl
  43ad8e:	pop    eax
  43ad8f:	popa   
  43ad90:	je     0x43ad5f
  43ad92:	gs ins BYTE PTR es:[edi],dx
  43ad94:	imul   ebp,DWORD PTR [esi+0x61],0x6740000
  43ad9b:	cmp    ebp,DWORD PTR [edi-0x33]
  43ad9e:	pop    eax
  43ad9f:	popa   
  43ada0:	je     0x43ad4f
  43ada2:	gs ins BYTE PTR es:[edi],dx
  43ada4:	imul   ebx,DWORD PTR [ebp+0x784d5f0f],0x846e6ef8
  43adae:	in     eax,dx
  43adaf:	jnp    0x43adb1
  43adb1:	popf   
  43adb2:	lods   al,BYTE PTR ds:[esi]
  43adb3:	cld    
  43adb4:	cmp    al,0x7a
  43adb6:	and    ah,BYTE PTR [esi+0x67]
  43adb9:	imul   eax,DWORD PTR [edx],0xdf446c63
  43adbf:	pop    edi
  43adc0:	inc    ebx
  43adc1:	push   ebp
  43adc2:	frndint 
  43adc4:	pop    esp
  43adc5:	popf   
  43adc6:	cwde   
  43adc7:	gs dec ebp
  43adc9:	cmp    ch,dl
  43adcb:	dec    esp
  43adcc:	outs   dx,BYTE PTR ds:[esi]
  43adcd:	dec    edx
  43adce:	sar    DWORD PTR [ebx+0x3e],0x41
  43add2:	mov    edx,0xad406566
  43add7:	cld    
  43add8:	sbb    DWORD PTR [ebp-0x39c8d68],0x94d5f87
  43ade2:	mov    ds,WORD PTR [edi+0x5f]
  43ade5:	clc    
  43ade6:	mov    al,ds:0x67da4866
  43adeb:	pop    si
  43aded:	cld    
  43adee:	(bad)  
  43adef:	cld    
  43adf0:	add    BYTE PTR [di+0x659c],bl
  43adf5:	push   esp
  43adf6:	cld    
  43adf7:	ins    BYTE PTR es:[edi],dx
  43adf8:	push   0x4b
  43adfa:	clc    
  43adfb:	data16 aas 
  43adfd:	outs   dx,BYTE PTR ds:[esi]
  43adfe:	shl    BYTE PTR [esi],0x4
  43ae01:	or     BYTE PTR [ebp-0x2bb2b7e4],bl
  43ae07:	pop    ss
  43ae08:	outs   dx,BYTE PTR ds:[esi]
  43ae0a:	mov    dl,0x26
  43ae0c:	push   ecx
  43ae0d:	je     0x43adbe
  43ae0f:	push   edx
  43ae10:	popaw  
  43ae12:	popf   
  43ae13:	inc    edx
  43ae14:	add    ecx,DWORD PTR [ebp-0x4f]
  43ae17:	sub    eax,0x21ba6a6b
  43ae1c:	jb     0x43ae87
  43ae1e:	mov    BYTE PTR [edx],al
  43ae20:	sub    dl,BYTE PTR [ecx+0x5a]
  43ae23:	ds aad 0x3
  43ae26:	je     0x43ae7e
  43ae28:	or     al,0x37
  43ae2a:	mov    bl,0x18
  43ae2c:	add    ebp,DWORD PTR [eax-0x77]
  43ae2f:	add    bh,dl
  43ae31:	add    eax,0x610b5f60
  43ae36:	dec    eax
  43ae37:	outs   dx,BYTE PTR ds:[esi]
  43ae38:	and    ah,BYTE PTR [esi+0x7b]
  43ae3b:	pop    edi
  43ae3c:	push   es
  43ae3d:	jo     0x43addc
  43ae3f:	add    cl,BYTE PTR [ecx+0x3]
  43ae42:	pop    ecx
  43ae43:	pop    edi
  43ae44:	retf   
  43ae45:	pusha  
  43ae46:	push   ecx
  43ae47:	pop    edi
  43ae48:	mov    ds:0xc65f3b65,al
  43ae4d:	outs   dx,DWORD PTR ds:[esi]
  43ae4e:	popf   
  43ae4f:	add    ch,BYTE PTR [esi]
  43ae51:	add    al,0x5c
  43ae53:	pop    edi
  43ae54:	mov    bl,0x3f
  43ae56:	add    BYTE PTR [esi],bh
  43ae58:	jo     0x43ae1a
  43ae5a:	ds inc bp
  43ae5d:	enter  0x873,0x3
  43ae61:	rol    BYTE PTR [ebx],cl
  43ae63:	shl    BYTE PTR [esp+eax*4+0x64],1
  43ae67:	adc    DWORD PTR [eax-0x5a],esp
  43ae6a:	push   0xfffffff6
  43ae6c:	jb     0x43adf6
  43ae6e:	outs   dx,DWORD PTR ds:[esi]
  43ae6f:	add    ah,BYTE PTR [ebp-0x6d]
  43ae72:	pusha  
  43ae73:	mov    bl,0x5b
  43ae75:	jae    0x43aedf
  43ae77:	retf   0xe772
  43ae7a:	add    ebp,DWORD PTR [ebp-0x418a59fe]
  43ae80:	arpl   WORD PTR [ebx+0x5f],bx
  43ae83:	nop
  43ae84:	pop    ecx
  43ae85:	dec    esp
  43ae86:	je     0x43ae72
  43ae88:	outs   dx,BYTE PTR ds:[esi]
  43ae89:	inc    eax
  43ae8a:	data16 mov cl,0x5f
  43ae8d:	and    eax,DWORD PTR [ebp-0x63]
  43ae90:	add    al,dh
  43ae92:	add    al,0xd9
  43ae94:	pop    edi
  43ae95:	dec    ebx
  43ae96:	pop    edi
  43ae97:	mov    cl,0x5f
  43ae99:	add    BYTE PTR ds:0x400002d8,ch
  43ae9f:	mov    ds:0x8d1a6338,eax
  43aea4:	pop    ebx
  43aea5:	outs   dx,BYTE PTR ds:[esi]
  43aea6:	add    al,0x5d
  43aea8:	daa    
  43aea9:	add    BYTE PTR [ecx],bl
  43aeab:	fwait
  43aeac:	aaa    
  43aead:	pop    edi
  43aeae:	pop    ss
  43aeaf:	pop    edx
  43aeb0:	ds cmp eax,0xfda29ee9
  43aeb6:	sbb    DWORD PTR [edx+0x6e],ecx
  43aeb9:	dec    esi
  43aeba:	or     al,0x0
  43aebc:	js     0x43af2c
  43aebe:	dec    esi
  43aebf:	push   es
  43aec0:	inc    edi
  43aec1:	add    al,BYTE PTR [eax]
  43aec3:	fcomp  QWORD PTR [edi+0x5cd06443]
  43aec9:	push   esi
  43aeca:	jae    0x43aea6
  43aecc:	add    al,BYTE PTR ss:[eax]
  43aecf:	and    BYTE PTR [ebx+0x4cbd6337],0x61
  43aed6:	arpl   WORD PTR [esi-0x4291a4d2],si
  43aedc:	push   ebp
  43aedd:	pop    eax
  43aede:	popa   
  43aedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aee0:	push   ss
  43aee1:	add    eax,DWORD PTR [eax]
  43aee3:	fistp  DWORD PTR [esi-0x7b91db]
  43aee9:	outs   dx,BYTE PTR ds:[esi]
  43aeea:	arpl   WORD PTR [ebp-0x5ffae27],bp
  43aef0:	sahf   
  43aef1:	sub    BYTE PTR [edi+0x7d],ah
  43aef4:	fcom   DWORD PTR [esi+0x74]
  43aef7:	jmp    0xae426f9a
  43aefc:	ret    
  43aefd:	outs   dx,BYTE PTR ds:[esi]
  43aefe:	inc    esp
  43aeff:	mov    al,ds:0x5a745fe0
  43af04:	cdq    
  43af05:	xor    eax,DWORD PTR [eax]
  43af07:	sub    dl,bl
  43af09:	arpl   WORD PTR [edi+0x5d],bx
  43af0c:	loop   0x43af4c
  43af0e:	inc    edi
  43af0f:	sub    edx,eax
  43af11:	arpl   WORD PTR [ebp+0x0],bx
  43af14:	jo     0x43af71
  43af16:	outs   dx,BYTE PTR ds:[si]
  43af18:	xor    al,0x4
  43af1a:	aas    
  43af1b:	inc    esp
  43af1c:	jge    0x43af4b
  43af1e:	sub    ch,BYTE PTR [esi]
  43af20:	add    BYTE PTR [eax+0x5a],ah
  43af23:	ins    BYTE PTR es:[edi],dx
  43af24:	add    ch,cl
  43af26:	dec    BYTE PTR [esi+0x53]
  43af29:	mov    ch,0x4d
  43af2b:	pop    ebp
  43af2c:	outs   dx,BYTE PTR ds:[esi]
  43af2d:	nop
  43af2e:	inc    BYTE PTR [ebx+0x0]
  43af31:	mov    bl,0x4d
  43af33:	cmp    DWORD PTR [edx-0x5f],edx
  43af36:	pop    ebp
  43af37:	outs   dx,BYTE PTR ds:[esi]
  43af38:	add    BYTE PTR [ebx+eax*1+0x5e],ch
  43af3c:	jb     0x43aecf
  43af3e:	inc    edi
  43af3f:	pop    ecx
  43af40:	mov    al,fs:0xe26e6170
  43af46:	pop    edx
  43af47:	add    BYTE PTR [eax],al
  43af49:	dec    ebp
  43af4a:	add    ebx,DWORD PTR [edi+0x65]
  43af4d:	loopne 0x43afb3
  43af4f:	fs fs (bad) 
  43af52:	pop    esp
  43af53:	data16 retfw 
  43af56:	add    eax,DWORD PTR [esi]
  43af58:	add    BYTE PTR [ebx],dl
  43af5a:	dec    edi
  43af5b:	cmp    DWORD PTR [ecx-0x30],eax
  43af5e:	inc    edi
  43af5f:	push   0x65
  43af61:	push   edi
  43af62:	outs   dx,BYTE PTR ds:[esi]
  43af63:	push   esp
  43af64:	outs   dx,DWORD PTR ds:[esi]
  43af65:	push   edi
  43af66:	push   edi
  43af67:	push   0x69
  43af69:	sbb    ah,BYTE PTR [edx+0x39]
  43af6c:	add    BYTE PTR [ebx+eax*1+0x4f],dl
  43af70:	push   ebx
  43af71:	inc    ebp
  43af72:	ds push 0x65
  43af75:	and    eax,0xf2455d57
  43af7a:	dec    eax
  43af7b:	data16 je 0x43aff2
  43af7e:	add    esp,DWORD PTR [edx]
  43af80:	add    BYTE PTR [ebx],dh
  43af82:	dec    esi
  43af83:	cmp    DWORD PTR [ebp+0x0],eax
  43af86:	repnz popa 
  43af88:	data16 je 0x43af12
  43af8b:	popa   
  43af8c:	ins    BYTE PTR es:[edi],dx
  43af8d:	gs popf 
  43af8f:	cmp    al,0x70
  43af91:	add    BYTE PTR [ebp-0x31aefc00],bl
  43af97:	sbb    bh,BYTE PTR [edi]
  43af99:	push   0xffffffb0
  43af9b:	ss inc edx
  43af9d:	arpl   WORD PTR [ecx-0x79919ed8],bp
  43afa3:	push   ds
  43afa4:	push   0x63
  43afa6:	add    DWORD PTR ds:0xcf9d006d,0xfffffffc
  43afad:	push   eax
  43afae:	outs   dx,BYTE PTR ds:[esi]
  43afaf:	sbb    cl,BYTE PTR [ebx+0x69]
  43afb2:	jle    0x43afc1
  43afb4:	push   0xfce49d00
  43afb9:	push   eax
  43afba:	dec    esi
  43afbb:	sbb    bh,BYTE PTR ds:0x5fec726c
  43afc1:	inc    ebx
  43afc2:	push   ebx
  43afc3:	(bad)  
  43afc4:	popa   
  43afc5:	je     0x43af64
  43afc7:	test   al,0x4d
  43afc9:	cs push 0xc
  43afcc:	sub    bh,BYTE PTR cs:[ecx]
  43afcf:	mov    ebp,0x349d0060
  43afd4:	add    al,0x3d
  43afd6:	das    
  43afd7:	ret    0x746c
  43afda:	push   eax
  43afdb:	mov    bh,0x6c
  43afdd:	outs   dx,BYTE PTR ds:[esi]
  43afde:	xor    ah,BYTE PTR [ebp-0x5feea2a1]
  43afe4:	arpl   WORD PTR [esp+edi*8-0x25],si
  43afe8:	cld    
  43afe9:	adc    BYTE PTR [eax],al
  43afeb:	pushf  
  43afec:	stos   DWORD PTR es:[edi],eax
  43afed:	cmp    bl,BYTE PTR [eax-0x2c]
  43aff0:	jle    0x43b05e
  43aff2:	imul   ebp,edi,0xef633d8f
  43aff8:	addr16 dec esi
  43affa:	je     0x43aff6
  43affc:	imul   esp,DWORD PTR [eax+0x0],0x3cfcba9d
  43b003:	shr    BYTE PTR [ecx+0x69],0x44
  43b007:	mov    eax,0xd1615302
  43b00c:	pop    edi
  43b00d:	es popa 
  43b00f:	mov    bl,0x6e
  43b011:	inc    eax
  43b012:	pop    esi
  43b013:	ret    0x4861
  43b016:	jo     0x43afd6
  43b018:	cmp    al,0x35
  43b01a:	addr16 mov dh,0x51
  43b01d:	xor    esp,DWORD PTR [edi-0x4d]
  43b020:	pop    edi
  43b021:	out    0x3,eax
  43b023:	jb     0x43b027
  43b025:	es popa 
  43b027:	sub    DWORD PTR [esi+0x32],0x74
  43b02b:	jle    0x43b081
  43b02d:	ss jge 0x43b0a0
  43b030:	outs   dx,BYTE PTR ds:[esi]
  43b031:	or     al,0x69
  43b033:	push   0x7e71fa6e
  43b038:	dec    ebp
  43b039:	out    0x3,eax
  43b03b:	fwait
  43b03c:	add    ah,BYTE PTR [esi]
  43b03e:	popa   
  43b03f:	jae    0x43b0af
  43b041:	es push 0x53047144
  43b047:	dec    ecx
  43b048:	push   ebp
  43b049:	aad    0x60
  43b04b:	popf   
  43b04c:	add    cl,BYTE PTR [ebx]
  43b04e:	add    al,0x0
  43b050:	sbb    BYTE PTR [edi-0x2b],0x6f
  43b054:	pop    esi
  43b055:	push   esp
  43b056:	aam    0x68
  43b058:	jo     0x43b0b9
  43b05a:	mov    ch,0x6f
  43b05c:	inc    edx
  43b05d:	pop    esp
  43b05e:	shl    BYTE PTR [edx+0x42],1
  43b061:	outs   dx,BYTE PTR ds:[esi]
  43b062:	int3   
  43b063:	jb     0x43b047
  43b065:	push   esp
  43b066:	xchg   esi,eax
  43b067:	outs   dx,DWORD PTR ds:[esi]
  43b068:	add    al,0x71
  43b06a:	mov    WORD PTR [ebx],es
  43b06c:	mov    esi,0xf360a602
  43b071:	outs   dx,BYTE PTR ds:[esi]
  43b072:	stos   DWORD PTR es:[edi],eax
  43b073:	jo     0x43b062
  43b075:	push   esi
  43b076:	and    BYTE PTR [edx-0x2e],0x6e
  43b07a:	mov    WORD PTR [edx-0x2],es
  43b07d:	jo     0x43b0f2
  43b07f:	ins    BYTE PTR es:[edi],dx
  43b080:	call   FWORD PTR [ebx+0x0]
  43b083:	mov    al,cl
  43b085:	outs   dx,BYTE PTR ds:[esi]
  43b086:	arpl   WORD PTR [edx+0x4c7458bb],bp
  43b08c:	leave  
  43b08d:	outs   dx,BYTE PTR ds:[esi]
  43b08e:	add    bh,dh
  43b090:	lahf   
  43b091:	push   edx
  43b092:	inc    edx
  43b093:	xor    DWORD PTR [edx+0x6a],edi
  43b096:	jo     0x43b0d6
  43b098:	scas   eax,DWORD PTR es:[edi]
  43b099:	outs   dx,BYTE PTR ds:[esi]
  43b09a:	cmp    eax,0x4d6eaf4c
  43b09f:	xor    eax,0x2c6354b8
  43b0a4:	cdq    
  43b0a5:	add    al,BYTE PTR [eax]
  43b0a7:	sub    ch,BYTE PTR [edi+0x4d]
  43b0aa:	push   eax
  43b0ab:	cmp    eax,0x52a14cc
  43b0b0:	jne    0x43b108
  43b0b2:	add    BYTE PTR ds:0x743aa100,dh
  43b0b8:	adc    eax,0x17633769
  43b0bd:	jge    0x43b0f3
  43b0bf:	arpl   ax,di
  43b0c1:	jae    0x43b124
  43b0c3:	ins    DWORD PTR es:[edi],dx
  43b0c4:	std    
  43b0c5:	fwait
  43b0c6:	push   0x3f
  43b0c8:	jmp    0xb143fe6b
  43b0cd:	cmp    ch,BYTE PTR [esi+0x70]
  43b0d0:	mov    eax,0xd06e6133
  43b0d5:	addr16 pop eax
  43b0d7:	bound  edi,QWORD PTR [esi-0x5bfffda1]
  43b0dd:	sahf   
  43b0de:	cmp    dh,BYTE PTR [ebp+esi*4+0x2e]
  43b0e2:	aaa    
  43b0e3:	arpl   di,ax
  43b0e5:	cli    
  43b0e6:	xor    al,0x63
  43b0e8:	mov    eax,0x9d6d6003
  43b0ed:	retf   
  43b0ee:	push   0x51
  43b0f0:	jmp    0xa0434693
  43b0f5:	add    BYTE PTR [edi+0x63],ch
  43b0f8:	fwait
  43b0f9:	clc    
  43b0fa:	pop    edi
  43b0fb:	je     0x43b0fd
  43b0fd:	pop    es
  43b0fe:	inc    ebp
  43b0ff:	je     0x43b154
  43b101:	call   0xd7b92566
  43b106:	inc    edx
  43b107:	pop    ecx
  43b108:	ins    BYTE PTR es:[edi],dx
  43b109:	shl    BYTE PTR [ecx+0x59],1
  43b10c:	arpl   di,bp
  43b10e:	aas    
  43b10f:	add    BYTE PTR [eax],al
  43b111:	pop    ds
  43b112:	add    BYTE PTR [ecx+0x6e],al
  43b115:	fadd   DWORD PTR [ebx+0x6a]
  43b118:	outs   dx,BYTE PTR ds:[esi]
  43b119:	add    cl,bl
  43b11b:	jb     0x43b166
  43b11d:	jne    0x43b0f8
  43b11f:	jo     0x43b192
  43b121:	inc    esp
  43b122:	aad    0x72
  43b124:	pop    ecx
  43b125:	inc    ecx
  43b126:	ficomp DWORD PTR [edi+0x61]
  43b129:	ins    BYTE PTR es:[edi],dx
  43b12a:	gs pusha 
  43b12c:	ins    BYTE PTR es:[edi],dx
  43b12d:	gs hlt 
  43b12f:	call   FWORD PTR [edi+0x745ccd00]
  43b135:	gs xchg esi,eax
  43b137:	pop    esp
  43b138:	pop    ebp
  43b139:	je     0x43b0f1
  43b13b:	inc    ebx
  43b13c:	pop    ecx
  43b13d:	fs mov edx,0xb9656c57
  43b143:	cmp    WORD PTR [eax],ax
  43b146:	jae    0x43b147
  43b148:	inc    eax
  43b149:	outs   dx,BYTE PTR ds:[esi]
  43b14a:	enter  0x6a44,0x6e
  43b14e:	fst    DWORD PTR [ebx+0x4a]
  43b151:	gs aad 0x43
  43b154:	ds imul esp,eax,0x30000044
  43b15b:	inc    DWORD PTR [eax+0x6e]
  43b15e:	call   0xd9b21ba7
  43b163:	push   ebx
  43b164:	dec    ebx
  43b165:	gs pop eax
  43b167:	ds jo  0x43b1de
  43b16a:	pop    ebp
  43b16b:	pop    esi
  43b16c:	inc    cx
  43b16e:	je     0x43b16f
  43b170:	push   ebp
  43b171:	add    BYTE PTR [ebx+edx*2+0x74],cl
  43b175:	jo     0x43b114
  43b177:	test   al,0x59
  43b179:	push   0xfffffff9
  43b17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b17c:	pop    ecx
  43b17d:	outs   dx,DWORD PTR ds:[esi]
  43b17e:	add    al,dh
  43b180:	jbe    0x43b1f1
  43b182:	je     0x43b14e
  43b184:	frndint 
  43b186:	mov    bl,0x9d
  43b188:	mov    ds:0x67b87462,al
  43b18d:	arpl   WORD PTR [ebx-0x2f],sp
  43b190:	sub    BYTE PTR [edi+0x74],ah
  43b193:	out    dx,al
  43b194:	dec    ebp
  43b195:	arpl   WORD PTR [eax+esi*4+0x48],si
  43b199:	inc    ecx
  43b19a:	pop    edi
  43b19b:	shl    DWORD PTR ds:0x50be5f62,0x55
  43b1a2:	add    BYTE PTR [ebp-0x6eb7fbe0],bl
  43b1a8:	and    eax,0x23784d74
  43b1ad:	push   0x770a804e
  43b1b2:	arpl   WORD PTR [esi-0x62ffbcf3],cx
  43b1b8:	add    BYTE PTR [edi+eax*2],al
  43b1bb:	or     DWORD PTR ds:0xf67b6e67,0x77
  43b1c2:	cmp    eax,0x6370f471
  43b1c7:	gs cli 
  43b1c9:	pop    ebp
  43b1ca:	fs inc ecx
  43b1cc:	inc    BYTE PTR [ebx]
  43b1ce:	outs   dx,DWORD PTR ds:[esi]
  43b1cf:	popf   
  43b1d0:	mov    dl,0x5e
  43b1d2:	je     0x43b20c
  43b1d4:	(bad)  
  43b1d5:	pop    esi
  43b1d6:	arpl   WORD PTR [ecx],si
  43b1d8:	cwde   
  43b1d9:	pop    ebp
  43b1da:	push   0x43
  43b1dc:	mov    esi,0xd95c7461
  43b1e1:	cld    
  43b1e2:	cdq    
  43b1e3:	add    BYTE PTR [ebp+0x745eb2],bl
  43b1e9:	sahf   
  43b1ea:	pop    esi
  43b1eb:	arpl   WORD PTR [ecx],cx
  43b1ed:	jnp    0x43b266
  43b1ef:	arpl   WORD PTR [edi],cx
  43b1f1:	add    esp,DWORD PTR [eax-0x6fa8f2be]
  43b1f7:	bound  eax,QWORD PTR [edi]
  43b1f9:	cmp    ah,bh
  43b1fb:	add    ecx,esp
  43b1fd:	add    bl,BYTE PTR [edi-0x4dad0e89]
  43b203:	jae    0x43b203
  43b205:	jo     0x43b19c
  43b207:	push   0x768c57ca
  43b20c:	leave  
  43b20d:	inc    ebx
  43b20e:	out    0x3,eax
  43b210:	fild   DWORD PTR [edx]
  43b212:	das    
  43b213:	js     0x43b1de
  43b215:	push   edx
  43b216:	sub    BYTE PTR [eax-0x3f],ch
  43b219:	xor    al,0x4c
  43b21b:	jne    0x43b1cb
  43b21d:	addr16 push esi
  43b21f:	js     0x43b1f6
  43b221:	addr16 dec eax
  43b223:	push   0x453654be
  43b228:	popf   
  43b229:	add    bl,BYTE PTR [edx+0x3]
  43b22c:	pop    edx
  43b22d:	jo     0x43b262
  43b22f:	imul   edi,DWORD PTR [ebx+0x70],0x5254780c
  43b236:	add    al,0x62
  43b238:	mov    edx,0x5a037402
  43b23d:	jo     0x43b252
  43b23f:	imul   edi,DWORD PTR [ebx+0x70],0x5752780c
  43b246:	add    al,0x76
  43b248:	add    BYTE PTR [edx+0x51],dl
  43b24b:	div    DWORD PTR [edi+0x3a]
  43b24e:	jno    0x43b249
  43b250:	inc    esp
  43b251:	popf   
  43b252:	add    dl,dh
  43b254:	add    ebx,DWORD PTR [edx+0x70]
  43b257:	shr    DWORD PTR [eax+0x4b],cl
  43b25a:	jo     0x43b228
  43b25c:	ja     0x43b2ce
  43b25e:	push   esp
  43b25f:	enter  0x4066,0x37
  43b263:	mov    ch,0x5f
  43b265:	bound  eax,QWORD PTR [edx]
  43b267:	add    DWORD PTR [ebx],0xffffffe2
  43b26a:	jo     0x43b26c
  43b26c:	mov    ebp,0xc46a7105
  43b271:	adc    dl,BYTE PTR [eax+0x63]
  43b274:	popf   
  43b275:	fld    TBYTE PTR [ebx+0x69]
  43b278:	xchg   edx,eax
  43b279:	fldenv [ebp+0x3f]
  43b27c:	jmp    0xa643f91f
  43b281:	cmc    
  43b282:	push   esi
  43b283:	push   ebx
  43b284:	jnp    0x43b248
  43b286:	pop    ds
  43b287:	pop    edi
  43b288:	mov    dh,dh
  43b28a:	gs inc ebx
  43b28c:	xchg   edx,ecx
  43b28e:	jo     0x43b307
  43b290:	mov    al,ds:0x3e6964bc
  43b295:	cdq    
  43b296:	dec    edi
  43b297:	add    BYTE PTR [ecx],dh
  43b299:	mov    ch,0x56
  43b29b:	jo     0x43b2c5
  43b29d:	lds    esp,FWORD PTR [esi+0x4e]
  43b2a0:	inc    esp
  43b2a1:	scas   al,BYTE PTR es:[edi]
  43b2a2:	push   ebp
  43b2a3:	arpl   WORD PTR [edx],di
  43b2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b2a6:	dec    edx
  43b2a7:	arpl   WORD PTR [eax-0x7b],cx
  43b2aa:	outs   dx,BYTE PTR gs:[esi]
  43b2ac:	cmp    al,BYTE PTR [eax]
  43b2ae:	je     0x43b2b2
  43b2b0:	add    BYTE PTR [esi],dl
  43b2b2:	(bad)  
  43b2b3:	dec    esp
  43b2b4:	inc    edi
  43b2b5:	aaa    
  43b2b6:	pop    edx
  43b2b7:	sub    al,BYTE PTR ss:0x26006e7d
  43b2be:	pop    ebp
  43b2bf:	inc    ebp
  43b2c0:	aas    
  43b2c1:	xor    al,0x45
  43b2c3:	das    
  43b2c4:	xlat   BYTE PTR cs:[ebx]
  43b2c6:	jp     0x43b336
  43b2c8:	ins    BYTE PTR es:[edi],dx
  43b2c9:	jmp    0x27438e6c
  43b2ce:	cmp    dl,BYTE PTR [esi+0x53]
  43b2d1:	cli    
  43b2d2:	inc    ebx
  43b2d3:	jo     0x43b316
  43b2d5:	int3   
  43b2d6:	dec    edx
  43b2d7:	dec    ecx
  43b2d8:	push   0xffffffc7
  43b2da:	cmp    eax,0x9ecc0002
  43b2df:	dec    esp
  43b2e0:	arpl   bp,dx
  43b2e2:	pop    edi
  43b2e3:	push   edx
  43b2e4:	addr16 add dh,dh
  43b2e7:	push   edi
  43b2e8:	pop    esi
  43b2e9:	popaw  
  43b2eb:	push   esi
  43b2ec:	ds jb  0x43b350
  43b2ef:	imul   eax,DWORD PTR [eax],0x4606b900
  43b2f5:	and    BYTE PTR gs:[ecx],bh
  43b2f8:	imul   esp,DWORD PTR [ebp+0x16],0x49
  43b2fc:	data16 jne 0x43b318
  43b2ff:	add    al,0x46
  43b301:	inc    ebp
  43b302:	xor    BYTE PTR [ebp+0x50],al
  43b305:	dec    ecx
  43b306:	daa    
  43b307:	push   ss
  43b308:	es sub BYTE PTR fs:[eax+0x0],al
  43b30d:	add    BYTE PTR [edx],cl
  43b30f:	add    al,0x3f
  43b311:	gs add al,dl
  43b314:	inc    esp
  43b315:	fs popa 
  43b317:	in     al,0x5a
  43b319:	pop    ebp
  43b31a:	jb     0x43b2f3
  43b31c:	inc    ebx
  43b31d:	fs fs (bad) 
  43b320:	imul   esi,DWORD PTR [bp+di-0x1f],0x55
  43b325:	add    BYTE PTR [eax],al
  43b327:	ins    DWORD PTR es:[edi],dx
  43b328:	ss dec eax
  43b32a:	dec    esp
  43b32b:	mov    ah,0x43
  43b32d:	push   eax
  43b32e:	dec    ecx
  43b32f:	call   0x4e03:0xf44c4c4a
  43b336:	add    DWORD PTR [ebx+0x67],ebx
  43b339:	push   0x72
  43b33b:	stos   BYTE PTR es:[edi],al
  43b33c:	popa   
  43b33d:	add    BYTE PTR [eax],al
  43b33f:	push   ds
  43b340:	or     BYTE PTR [ebp+0x65],ah
  43b343:	jmp    0xf4bd23ae
  43b348:	add    esp,esi
  43b34a:	add    al,0xa9
  43b34c:	addr16 gs jae 0x43b2f1
  43b350:	pop    edx
  43b351:	add    BYTE PTR [eax],al
  43b353:	lock or BYTE PTR [ebx+0x74],ch
  43b357:	out    0x66,al
  43b359:	gs jo  0x43b320
  43b35c:	add    esp,ecx
  43b35e:	add    al,0x9d
  43b360:	(bad)  
  43b361:	popa   
  43b362:	imul   edi,DWORD PTR [esi],0xffffff9e
  43b365:	ins    BYTE PTR es:[edi],dx
  43b366:	add    BYTE PTR [ebp+0x125900b2],bl
  43b36c:	xchg   esi,eax
  43b36d:	pop    edi
  43b36e:	addr16 popf 
  43b370:	daa    
  43b371:	add    al,0x59
  43b373:	adc    ebx,DWORD PTR [ebp+0xd00715e]
  43b379:	jl     0x43b3d0
  43b37b:	push   0xfffffff1
  43b37d:	xchg   esp,edi
  43b37f:	(bad)  
  43b380:	sahf   
  43b381:	cwde   
  43b382:	jbe    0x43b3f1
  43b384:	sti    
  43b385:	jns    0x43b3f9
  43b387:	addr16 repz pop ebp
  43b38a:	add    BYTE PTR [di+0x43f],bl
  43b38f:	pop    ecx
  43b390:	enter  0x7085,0x69
  43b394:	shr    cl,cl
  43b396:	cld    
  43b397:	jmp    0x43b332
  43b399:	ss addr16 imul ecx,eax,0x50
  43b39e:	jb     0x43b403
  43b3a0:	popf   
  43b3a1:	rol    DWORD PTR [edi],0x6b
  43b3a4:	rcr    BYTE PTR [esi],0x5d
  43b3a7:	push   0x9bfce9af
  43b3ac:	sahf   
  43b3ad:	add    BYTE PTR [edi+0x6c],dh
  43b3b0:	mov    DWORD PTR [eax+0x63],ecx
  43b3b3:	add    BYTE PTR [ebp-0x72a70253],bl
  43b3b9:	(bad)  
  43b3ba:	ins    DWORD PTR es:[edi],dx
  43b3bb:	arpl   WORD PTR [esi+0xa],di
  43b3be:	pusha  
  43b3bf:	ins    BYTE PTR es:[edi],dx
  43b3c0:	popf   
  43b3c1:	add    BYTE PTR [eax],cl
  43b3c3:	pop    edi
  43b3c4:	jg     0x43b3c2
  43b3c6:	add    ebp,DWORD PTR [ebx+0x6e]
  43b3c9:	fistp  WORD PTR [ebp+0x6e]
  43b3cc:	push   ecx
  43b3cd:	iret   
  43b3ce:	pusha  
  43b3cf:	ins    BYTE PTR es:[edi],dx
  43b3d0:	inc    ecx
  43b3d1:	jmp    0x7e555d2
  43b3d6:	outs   dx,BYTE PTR ds:[esi]
  43b3d7:	arpl   WORD PTR [eax],di
  43b3d9:	add    ah,bh
  43b3db:	add    eax,DWORD PTR [eax]
  43b3dd:	xlat   BYTE PTR ds:[ebx]
  43b3de:	add    eax,0x6e4164cc
  43b3e3:	ret    0x9d62
  43b3e6:	add    ah,BYTE PTR [eax+0x3]
  43b3e9:	push   esp
  43b3ea:	push   ebp
  43b3eb:	mov    ebx,0xa3570e73
  43b3f0:	push   0x52ca57f3
  43b3f5:	adc    DWORD PTR [ecx-0x40],edx
  43b3f8:	pop    ebp
  43b3f9:	cld    
  43b3fa:	inc    ebx
  43b3fb:	out    0x3,eax
  43b3fd:	xchg   ebp,eax
  43b3fe:	push   es
  43b3ff:	mov    ch,0x77
  43b401:	add    DWORD PTR [eax],edi
  43b403:	xor    DWORD PTR [esi+0x2],0x5d03836d
  43b40a:	add    al,0xaa
  43b40c:	push   0x717441d1
  43b411:	ret    
  43b412:	xor    DWORD PTR [bx-0x13],0xbe627a50
  43b41a:	push   ecx
  43b41b:	push   esi
  43b41c:	add    al,0x68
  43b41e:	pop    es
  43b41f:	xor    al,0x5e
  43b421:	lds    esp,FWORD PTR [ebx+0x41]
  43b424:	push   0x494367b9
  43b429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b42a:	popa   
  43b42b:	dec    esp
  43b42c:	je     0x43b3bf
  43b42e:	imul   ecx,DWORD PTR [edx+0x5e],0x5f
  43b432:	imul   eax,DWORD PTR [ebx+0x78],0x7e
  43b436:	push   eax
  43b437:	out    0x3,eax
  43b439:	ds pop es
  43b43b:	imul   esi,DWORD PTR ss:[ecx+0x37],0x52005c09
  43b443:	ins    BYTE PTR es:[edi],dx
  43b444:	or     esp,DWORD PTR [eax+0x7e]
  43b447:	data16 and al,0x6c
  43b44a:	inc    eax
  43b44b:	div    DWORD PTR [bx+0x42]
  43b44f:	ins    DWORD PTR es:[edi],dx
  43b450:	or     DWORD PTR [esi+0x3a],eax
  43b453:	outs   dx,BYTE PTR ds:[esi]
  43b454:	add    ch,bh
  43b456:	xor    eax,0x9811006c
  43b45b:	cmp    esp,DWORD PTR [ebx-0x1f]
  43b45e:	aas    
  43b45f:	popa   
  43b460:	jo     0x43b437
  43b462:	arpl   WORD PTR [edx+0x5f],bp
  43b465:	mov    DWORD PTR [edx+0x6e],0x26fdb63
  43b46c:	add    cl,ch
  43b46e:	sahf   
  43b46f:	add    al,BYTE PTR [eax]
  43b471:	jmp    0xe943b714
  43b476:	sahf   
  43b477:	add    al,BYTE PTR [eax]
  43b479:	jmp    0xe943b71c
  43b47e:	sahf   
  43b47f:	add    al,BYTE PTR [eax]
  43b481:	jmp    0xe943b724
  43b486:	sahf   
  43b487:	add    al,BYTE PTR [eax]
  43b489:	jmp    0xe943b72c
  43b48e:	sahf   
  43b48f:	add    al,BYTE PTR [eax]
  43b491:	jmp    0xe943b734
  43b496:	sahf   
  43b497:	add    al,BYTE PTR [eax]
  43b499:	jmp    0xe943b73c
  43b49e:	sahf   
  43b49f:	add    al,BYTE PTR [eax]
  43b4a1:	jmp    0xe943b744
  43b4a6:	add    BYTE PTR [esi-0x6116fffe],bl
  43b4ac:	add    al,BYTE PTR [eax]
  43b4ae:	jmp    0xe943b751
  43b4b3:	sahf   
  43b4b4:	add    al,BYTE PTR [eax]
  43b4b6:	jmp    0xe943b759
  43b4bb:	sahf   
  43b4bc:	add    al,BYTE PTR [eax]
  43b4be:	jmp    0xe943b761
  43b4c3:	sahf   
  43b4c4:	add    al,BYTE PTR [eax]
  43b4c6:	jmp    0xe943b769
  43b4cb:	sahf   
  43b4cc:	add    al,BYTE PTR [eax]
  43b4ce:	add    ah,al
  43b4d0:	add    BYTE PTR [eax],al
  43b4d2:	add    ah,al
  43b4d4:	add    BYTE PTR [eax],al
  43b4d6:	add    BYTE PTR [eax+eax*1+0xb40000],dh
  43b4dd:	add    BYTE PTR [eax],al
  43b4df:	les    eax,FWORD PTR [eax]
  43b4e1:	add    BYTE PTR [eax],al
  43b4e3:	les    eax,FWORD PTR [eax]
  43b4e5:	add    BYTE PTR [eax],al
  43b4e7:	mov    ah,0x0
  43b4e9:	add    BYTE PTR [eax],al
  43b4eb:	mov    ah,0x0
  43b4ed:	add    BYTE PTR [eax],al
  43b4ef:	test   BYTE PTR [eax],al
  43b4f1:	add    BYTE PTR [eax],al
  43b4f3:	test   BYTE PTR [eax],al
  43b4f5:	add    BYTE PTR [eax],al
  43b4f7:	je     0x43b4f9
  43b4f9:	add    BYTE PTR [eax],al
  43b4fb:	je     0x43b4fd
  43b4fd:	add    BYTE PTR [eax],al
  43b4ff:	test   BYTE PTR [eax],al
  43b501:	add    BYTE PTR [eax],al
  43b503:	test   BYTE PTR [eax],al
  43b505:	add    BYTE PTR [eax],al
  43b507:	je     0x43b509
  43b509:	add    BYTE PTR [eax],al
  43b50b:	add    BYTE PTR [eax+eax*1+0x0],dh
  43b50f:	add    BYTE PTR [eax+eax*1+0x0],al
  43b513:	add    BYTE PTR [eax+eax*1+0x0],al
  43b517:	add    BYTE PTR [eax+eax*1],dh
  43b51a:	add    BYTE PTR [eax],al
  43b51c:	xor    al,0x0
  43b51e:	add    BYTE PTR [eax],al
  43b520:	inc    esp
  43b521:	add    BYTE PTR [eax],al
  43b523:	add    BYTE PTR [eax+eax*1+0x0],al
  43b527:	add    BYTE PTR [eax+eax*1],dh
  43b52a:	add    BYTE PTR [eax],al
  43b52c:	xor    al,0x0
  43b52e:	add    BYTE PTR [eax],al
  43b530:	add    al,0x0
  43b532:	add    BYTE PTR [eax],al
  43b534:	add    al,0x0
  43b536:	add    BYTE PTR [eax],al
  43b538:	hlt    
  43b539:	(bad)  
  43b53a:	(bad)  
  43b53b:	push   esp
  43b53d:	(bad)  
  43b53e:	(bad)  
  43b53f:	inc    DWORD PTR [eax+eax*1]
  43b542:	add    BYTE PTR [eax],al
  43b544:	add    al,0x0
  43b546:	add    BYTE PTR [eax],al
  43b548:	popf   
  43b549:	jmp    0xe9e1b54a
  43b54e:	cld    
  43b54f:	call   FWORD PTR [ebp-0x62000317]
  43b555:	jmp    0xe9e1b556
  43b55a:	cld    
  43b55b:	call   FWORD PTR [ebp-0x62000317]
  43b561:	jmp    0xe9e1b562
  43b566:	cld    
  43b567:	call   FWORD PTR [ebp-0x62000317]
  43b56d:	jmp    0x9d44b56e
  43b572:	jmp    0xe9e1b573
  43b577:	cld    
  43b578:	call   FWORD PTR [ebp-0x62000317]
  43b57e:	jmp    0xe9e1b57f
  43b583:	cld    
  43b584:	call   FWORD PTR [ebp-0x62000317]
  43b58a:	mov    ds:0x3a263fe2,eax
  43b58f:	push   es
  43b590:	mov    ecx,0xfffce9e1
  43b595:	popf   
  43b596:	jmp    0xc9e1b597
  43b59b:	add    DWORD PTR [ebp-0x3165c],ecx
  43b5a1:	popf   
  43b5a2:	jmp    0xe9e1b5a3
  43b5a7:	cld    
  43b5a8:	call   FWORD PTR [ebp+0x22fff8e9]
  43b5ae:	jmp    0xfffc:0xde1af8e0
  43b5b5:	popf   
  43b5b6:	sar    ah,1
  43b5b8:	call   FWORD PTR [ebp-0x62fffbd7]
  43b5be:	lods   al,BYTE PTR ds:[esi]
  43b5bf:	add    BYTE PTR [eax],al
  43b5c1:	popf   
  43b5c2:	add    ah,BYTE PTR [edi+0x4]
  43b5c5:	popf   
  43b5c6:	add    ch,BYTE PTR [eax-0x15]
  43b5c9:	in     eax,0xda
  43b5cb:	out    dx,al
  43b5cc:	add    ebx,DWORD PTR [ebp-0x62fc20fe]
  43b5d2:	add    al,bh
  43b5d4:	add    eax,DWORD PTR [eax]
  43b5d6:	popf   
  43b5d7:	add    bh,dl
  43b5d9:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43b5df:	add    ah,bh
  43b5e1:	add    ebx,DWORD PTR [ebp-0x4f5c18fe]
  43b5e7:	sbb    ah,bh
  43b5e9:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43b5ef:	add    ah,bh
  43b5f1:	mov    ebx,0x3e7429f
  43b5f6:	popf   
  43b5f7:	add    ah,bh
  43b5f9:	add    ebx,DWORD PTR [ebp-0x651218fe]
  43b5ff:	inc    edx
  43b600:	out    0x3,eax
  43b602:	popf   
  43b603:	add    ah,bh
  43b605:	add    ebx,DWORD PTR [ebp-0x697858fe]
  43b60b:	inc    edx
  43b60c:	out    0x3,eax
  43b60e:	popf   
  43b60f:	add    ah,bh
  43b611:	add    ebx,DWORD PTR [ebp-0x5a3968fe]
  43b617:	inc    edx
  43b618:	out    0x3,eax
  43b61a:	popf   
  43b61b:	add    ah,bh
  43b61d:	add    ebx,DWORD PTR [ebp-0x57103cfe]
  43b623:	inc    edx
  43b624:	out    0x3,eax
  43b626:	popf   
  43b627:	add    ah,bh
  43b629:	add    ebx,DWORD PTR [ebp-0x7374877e]
  43b62f:	inc    edx
  43b630:	out    0x3,eax
  43b632:	popf   
  43b633:	add    ah,bh
  43b635:	add    ebx,DWORD PTR [ebp+0xa97b22]
  43b63b:	mov    bl,0x42
  43b63d:	add    cl,ch
  43b63f:	sahf   
  43b640:	add    al,BYTE PTR [eax]
  43b642:	jmp    0x30a5141
  43b647:	ja     0x43b65e
  43b649:	inc    eax
  43b64a:	jmp    0x84e2b8ed
  43b64f:	sub    cl,ah
  43b651:	adc    al,0xab
  43b653:	repz dec ebx
  43b655:	inc    eax
  43b656:	leave  
  43b657:	into   
  43b658:	jnp    0x43b60c
  43b65a:	stc    
  43b65b:	stos   DWORD PTR es:[edi],eax
  43b65c:	stos   BYTE PTR es:[edi],al
  43b65d:	stos   BYTE PTR es:[edi],al
  43b65e:	lods   al,BYTE PTR ds:[esi]
  43b65f:	adc    eax,0x65994061
  43b664:	frstor [edx]
  43b666:	dec    esp
  43b667:	mov    al,ds:0xca00488c
  43b66c:	push   esi
  43b66d:	inc    eax
  43b66e:	fmul   DWORD PTR [ebx+esi*4]
  43b671:	xchg   edx,eax
  43b672:	stos   BYTE PTR es:[edi],al
  43b673:	xchg   esp,eax
  43b674:	add    al,0x8b
  43b676:	adc    BYTE PTR [esi],dh
  43b678:	jnp    0x43b6b9
  43b67a:	inc    eax
  43b67b:	aaa    
  43b67c:	jns    0x43b6c1
  43b67e:	inc    esp
  43b67f:	sbb    DWORD PTR [edi],eax
  43b681:	mov    DWORD PTR [eax+0x20],ebp
  43b684:	nop
  43b685:	aas    
  43b686:	mov    dx,0xa1b5
  43b68a:	cs ja  0x43b6cd
  43b68d:	sbb    DWORD PTR [ecx+0x7e3fc658],edx
  43b693:	pop    esp
  43b694:	mov    ecx,0xc01e108b
  43b699:	inc    eax
  43b69a:	inc    ebx
  43b69b:	xor    esp,DWORD PTR [ecx+0x1d00353e]
  43b6a1:	pop    esi
  43b6a2:	push   ebx
  43b6a3:	(bad)  
  43b6a4:	mov    DWORD PTR [ebp+0x5d3959f0],ecx
  43b6aa:	ds popf 
  43b6ac:	bound  ecx,QWORD PTR [ebx-0x31e52f27]
  43b6b2:	in     al,0x4f
  43b6b4:	cmp    ecx,DWORD PTR [eax+0x3d]
  43b6b7:	add    BYTE PTR ds:0x38e36ee4,ah
  43b6bd:	shl    BYTE PTR [ecx],1
  43b6bf:	das    
  43b6c0:	jo     0x43b647
  43b6c2:	push   ds
  43b6c3:	inc    esp
  43b6c4:	pushf  
  43b6c5:	out    dx,al
  43b6c6:	push   cs
  43b6c7:	stos   BYTE PTR es:[edi],al
  43b6c8:	cmp    al,0x7c
  43b6ca:	or     bl,ah
  43b6cc:	inc    ecx
  43b6cd:	ret    0x44f2
  43b6d0:	pop    ds
  43b6d1:	mov    ds:0xb733f3cc,eax
  43b6d6:	(bad)  [edx-0x62]
  43b6d9:	mov    edi,eax
  43b6db:	inc    ebp
  43b6dc:	mov    eax,ds:0xba91bf9a
  43b6e1:	mov    ds:0xddcda0a6,al
  43b6e6:	fwait
  43b6e7:	inc    esi
  43b6e8:	test   eax,0xd10c0f37
  43b6ed:	cmp    DWORD PTR [esi+0x75],0xffffffc2
  43b6f1:	fwait
  43b6f2:	inc    eax
  43b6f3:	dec    ebp
  43b6f4:	dec    esp
  43b6f5:	ds in  al,0xa7
  43b6f8:	imul   DWORD PTR [ebx]
  43b6fa:	xor    esi,DWORD PTR ds:0x53e5911c
  43b700:	cmp    DWORD PTR [ebx-0x76ffa223],esp
  43b706:	cdq    
  43b707:	push   ebp
  43b708:	cmp    ebp,edi
  43b70a:	mov    WORD PTR [edx-0x61c074a6],cs
  43b710:	lock aad 0x1e
  43b713:	rcl    BYTE PTR [ecx+eiz*8+0x5a],0x30
  43b718:	popa   
  43b719:	mov    ch,0xdf
  43b71b:	sbb    DWORD PTR [edx-0x31],0xffffffc6
  43b71f:	sbb    eax,0xd3ebbd5d
  43b724:	fiadd  WORD PTR [bx-0xc10]
  43b729:	mov    ds:0x69c89aa9,eax
  43b72e:	mov    edi,0x1d9d6e78
  43b733:	mov    ch,0x94
  43b735:	xor    cl,BYTE PTR [edx]
  43b737:	jp     0x43b736
  43b739:	ins    BYTE PTR es:[edi],dx
  43b73a:	dec    ecx
  43b73b:	shl    BYTE PTR [edx],0x90
  43b73e:	jmp    0x9ee1b73f
  43b743:	mov    al,0xca
  43b745:	jmp    0xe20f67bf
  43b74a:	lea    esi,[eax+0x20faaaf4]
  43b750:	push   es
  43b751:	retf   0x6d4c
  43b754:	cmp    esp,DWORD PTR [edi-0x6d085c70]
  43b75a:	and    esp,DWORD PTR [eax+0x35]
  43b75d:	jmp    0x83bb:0x33907128
  43b764:	bnd jp 0x43b713
  43b767:	shr    DWORD PTR [ebx],cl
  43b769:	add    BYTE PTR [eax],bh
  43b76b:	add    ah,dl
  43b76d:	push   edi
  43b76e:	xchg   edx,eax
  43b76f:	jo     0x43b73e
  43b771:	out    dx,al
  43b772:	bound  ebx,QWORD PTR [ecx]
  43b774:	clc    
  43b775:	sbb    al,0x21
  43b777:	mov    al,ds:0x2641410b
  43b77c:	mov    al,ds:0x9ea9cae9
  43b781:	mov    cl,0xf4
  43b783:	mov    ebp,0xd0380297
  43b788:	jle    0x43b76e
  43b78a:	mov    dl,0xbc
  43b78c:	and    DWORD PTR [edi+ebx*8+0x9d2d9a3],edi
  43b793:	xor    bh,cl
  43b795:	loopne 0x43b731
  43b797:	sub    esp,edx
  43b799:	cli    
  43b79a:	arpl   WORD PTR [edx+0x25d20e78],cx
  43b7a0:	pushf  
  43b7a1:	jecxz  0x43b725
  43b7a3:	shl    BYTE PTR [eax],0x55
  43b7a6:	cmp    al,0x76
  43b7a8:	mov    eax,0x7c0209b9
  43b7ad:	fisub  WORD PTR [ebx+0x17]
  43b7b0:	jne    0x43b772
  43b7b2:	rcr    DWORD PTR [ebx],1
  43b7b4:	pop    esp
  43b7b5:	inc    eax
  43b7b6:	out    0xed,al
  43b7b8:	mov    BYTE PTR [edx+0x5fa11745],cl
  43b7be:	push   ebx
  43b7bf:	outs   dx,BYTE PTR ds:[esi]
  43b7c0:	inc    DWORD PTR [eax+0x36]
  43b7c3:	clc    
  43b7c4:	ja     0x43b77d
  43b7c6:	push   cs
  43b7c7:	pop    ss
  43b7c8:	add    esp,DWORD PTR [ebx]
  43b7ca:	(bad)  
  43b7cc:	bound  ebp,QWORD PTR [edx+0x811b100]
  43b7d2:	jnp    0x43b83c
  43b7d4:	pop    ss
  43b7d5:	or     BYTE PTR [ecx+0x72],dl
  43b7d8:	ror    DWORD PTR [eax],0xb5
  43b7db:	popa   
  43b7dc:	push   esi
  43b7dd:	aad    0xaa
  43b7df:	gs pop ss
  43b7e1:	xchg   edx,eax
  43b7e2:	(bad)  
  43b7e3:	jne    0x43b76a
  43b7e5:	call   0xd3c0e08f
  43b7ea:	jmp    0xe8fe:0x270b175e
  43b7f1:	pop    ds
  43b7f2:	mov    eax,ds:0x9bd1ec7d
  43b7f7:	rcl    BYTE PTR ds:0xdf3397cc,0x82
  43b7fe:	pusha  
  43b7ff:	or     DWORD PTR ds:0x14efc917,edi
  43b805:	(bad)  
  43b806:	push   0xffffff9f
  43b808:	mov    BYTE PTR ds:0x2181ec50,0x95
  43b80f:	jmp    0x43b828
  43b811:	js     0x43b7fd
  43b813:	test   al,0xfb
  43b815:	mov    WORD PTR [edx+0x7e],fs
  43b818:	inc    ecx
  43b819:	fadd   st,st(3)
  43b81b:	push   es
  43b81c:	pop    ss
  43b81d:	enter  0x5b7c,0x1b
  43b821:	gs aas 
  43b823:	sub    al,0x9b
  43b825:	(bad)  
  43b826:	call   0xd786b70
  43b82b:	mov    cl,0x2d
  43b82d:	or     BYTE PTR [edx],al
  43b82f:	lock fstp st(4)
  43b832:	add    BYTE PTR [bx+si],al
  43b835:	xlat   BYTE PTR ds:[ebx]
  43b836:	xor    eax,0x3e409aaf
  43b83b:	out    0x40,al
  43b83d:	ins    DWORD PTR es:[edi],dx
  43b83e:	jb     0x43b83e
  43b840:	xlat   BYTE PTR ds:[ebx]
  43b841:	sub    esi,DWORD PTR [esi]
  43b843:	cli    
  43b844:	mov    esi,esi
  43b846:	int    0xa
  43b848:	out    0x27,al
  43b84a:	jmp    0x6b4f:0x37300920
  43b851:	fwait
  43b852:	mov    edi,0x7da0d736
  43b857:	dec    edi
  43b858:	cld    
  43b859:	nop
  43b85a:	sub    eax,0xea4768b
  43b85f:	dec    esi
  43b860:	ins    BYTE PTR es:[edi],dx
  43b861:	jnp    0x43b8a6
  43b863:	and    dl,dh
  43b865:	add    eax,0xde79cc2c
  43b86a:	sub    dh,BYTE PTR [edi-0x68b2b47e]
  43b870:	lock pop esi
  43b872:	and    ebp,DWORD PTR [esi+0x51]
  43b875:	(bad)  
  43b876:	mov    ds:0x7a976029,eax
  43b87b:	push   edx
  43b87c:	jbe    0x43b841
  43b87e:	sbb    DWORD PTR [edi+0x6b],esp
  43b881:	jge    0x43b8d8
  43b883:	xchg   esi,eax
  43b884:	sub    DWORD PTR [ecx],ebx
  43b886:	mov    ecx,0x17f71f99
  43b88b:	lahf   
  43b88c:	mov    bh,0x61
  43b88e:	pop    esi
  43b88f:	and    al,0x1f
  43b891:	mov    ch,BYTE PTR [eax+0xf5812e7]
  43b897:	or     eax,0x98b8b500
  43b89c:	pop    ds
  43b89d:	ins    BYTE PTR es:[edi],dx
  43b89e:	mov    ebp,0x77810003
  43b8a3:	ror    BYTE PTR [edx],1
  43b8a5:	xor    al,0x1
  43b8a7:	add    BYTE PTR [eax],al
  43b8a9:	mov    esp,0xec004015
  43b8ae:	aas    
  43b8af:	inc    eax
  43b8b0:	add    BYTE PTR ds:0x22000000,dh
  43b8b6:	add    BYTE PTR [eax],al
  43b8b8:	add    BYTE PTR [ebx],al
  43b8ba:	add    DWORD PTR [eax],eax
  43b8bc:	add    ah,bh
  43b8be:	pop    ss
  43b8bf:	inc    eax
  43b8c0:	add    BYTE PTR [ebx+eax*2],dh
  43b8c3:	inc    eax
  43b8c4:	add    ah,dh
  43b8c6:	add    BYTE PTR [eax],al
  43b8c8:	add    dl,dl
  43b8ca:	add    BYTE PTR [eax],al
  43b8cc:	add    bl,dl
  43b8ce:	add    BYTE PTR [eax],al
  43b8d0:	add    ah,dh
  43b8d2:	add    BYTE PTR [eax],al
  43b8d4:	add    ah,bh
  43b8d6:	adc    al,0x40
  43b8d8:	add    ah,al
  43b8da:	add    BYTE PTR [eax],al
  43b8dc:	add    bh,dl
  43b8de:	add    BYTE PTR [eax],al
  43b8e0:	add    BYTE PTR [ebx-0x4c000000],bh
  43b8e6:	add    BYTE PTR [eax],al
  43b8e8:	add    ch,al
  43b8ea:	add    BYTE PTR [eax],al
  43b8ec:	add    ah,al
  43b8ee:	add    BYTE PTR [eax],al
  43b8f0:	add    BYTE PTR [eax+0x70003884],dh
  43b8f6:	fs inc eax
  43b8f8:	add    BYTE PTR [eax+0x3884],cl
  43b8fe:	mov    eax,0x74004064
  43b903:	test   BYTE PTR [eax],bh
  43b905:	add    ah,bl
  43b907:	jno    0x43b941
  43b909:	add    BYTE PTR [ecx+esi*2+0x71dc0038],dh
  43b910:	cmp    BYTE PTR [eax],al
  43b912:	xchg   esp,eax
  43b913:	jno    0x43b94d
  43b915:	add    ah,bl
  43b917:	jno    0x43b951
  43b919:	add    BYTE PTR [ebp-0x62c070e7],bl
  43b91f:	and    DWORD PTR [edi-0x70c262c1],ecx
  43b925:	aas    
  43b926:	popf   
  43b927:	sbb    DWORD PTR [edi-0x70be62c1],ecx
  43b92d:	aas    
  43b92e:	popf   
  43b92f:	dec    ecx
  43b930:	(bad)  
  43b931:	aas    
  43b932:	popf   
  43b933:	push   ebp
  43b934:	nop
  43b935:	aas    
  43b936:	popf   
  43b937:	push   ecx
  43b938:	nop
  43b939:	aas    
  43b93a:	popf   
  43b93b:	imul   edx,DWORD PTR [eax-0x70d262c1],0x8f2d9d3f
  43b945:	aas    
  43b946:	popf   
  43b947:	dec    ecx
  43b948:	(bad)  
  43b949:	aas    
  43b94a:	popf   
  43b94b:	cmc    
  43b94c:	mov    ?,WORD PTR [edi]
  43b94e:	popf   
  43b94f:	cmc    
  43b950:	mov    ?,WORD PTR [edi]
  43b952:	popf   
  43b953:	and    eax,0xb59d3f8f
  43b958:	(bad)  
  43b959:	aas    
  43b95a:	popf   
  43b95b:	lds    ecx,FWORD PTR [edi-0x717a62c1]
  43b961:	aas    
  43b962:	add    BYTE PTR [ebp-0x62c070a7],bl
  43b968:	ins    DWORD PTR es:[edi],dx
  43b969:	mov    ?,WORD PTR [edi]
  43b96b:	popf   
  43b96c:	test   eax,0x459d3f8e
  43b971:	(bad)  
  43b972:	aas    
  43b973:	popf   
  43b974:	push   ecx
  43b975:	(bad)  
  43b976:	aas    
  43b977:	popf   
  43b978:	mov    ebp,0x9d9d3f8e
  43b97d:	mov    ?,WORD PTR [edi]
  43b97f:	popf   
  43b980:	std    
  43b981:	lea    edi,[edi]
  43b983:	popf   
  43b984:	loope  0x43b914
  43b986:	aas    
  43b987:	popf   
  43b988:	adc    eax,0x459d3f8e
  43b98d:	mov    ?,WORD PTR [edi]
  43b98f:	popf   
  43b990:	mov    ?,WORD PTR gs:[edi]
  43b993:	popf   
  43b994:	add    cl,BYTE PTR [ebx-0x6e]
  43b997:	mov    ds:0x9a926702,al
  43b99c:	add    al,BYTE PTR [ebx-0x34fd6d6e]
  43b9a2:	xchg   edx,eax
  43b9a3:	mov    al,BYTE PTR [edx]
  43b9a5:	retf   
  43b9a6:	xchg   edx,eax
  43b9a7:	add    BYTE PTR [edx],0xb
  43b9aa:	xchg   ebx,eax
  43b9ab:	jp     0x43b9af
  43b9ad:	setae  BYTE PTR [edx+0x2]
  43b9b1:	daa    
  43b9b2:	xchg   ebx,eax
  43b9b3:	push   0x2
  43b9b5:	xchg   ebx,eax
  43b9b6:	je     0x43ba1a
  43b9b8:	add    dh,BYTE PTR [edi+0x74]
  43b9bb:	fiadd  DWORD PTR [edx]
  43b9bd:	push   ebx
  43b9be:	je     0x43b992
  43b9c0:	add    bh,BYTE PTR [edi]
  43b9c2:	je     0x43b98e
  43b9c4:	add    bl,BYTE PTR [edi]
  43b9c6:	je     0x43b9c8
  43b9c8:	ret    0x2b02
  43b9cb:	je     0x43b987
  43b9cd:	add    ch,bh
  43b9cf:	jae    0x43b983
  43b9d1:	add    bh,bh
  43b9d3:	jae    0x43b97f
  43b9d5:	add    bh,bl
  43b9d7:	jae    0x43b97b
  43b9d9:	add    ah,bl
  43b9db:	jae    0x43b977
  43b9dd:	add    dl,BYTE PTR [edi-0x78fd6d6d]
  43b9e3:	xchg   ebx,eax
  43b9e4:	mov    al,BYTE PTR [edx]
  43b9e6:	stos   DWORD PTR es:[edi],eax
  43b9e7:	xchg   ebx,eax
  43b9e8:	add    BYTE PTR [edx],0x4b
  43b9eb:	xchg   ebx,eax
  43b9ec:	jp     0x43b9f0
  43b9ee:	pop    ebx
  43b9ef:	xchg   ebx,eax
  43b9f0:	jb     0x43b9f4
  43b9f2:	addr16 xchg ebx,eax
  43b9f4:	push   0x2
  43b9f6:	xlat   BYTE PTR ds:[ebx]
  43b9f7:	xchg   edx,eax
  43b9f8:	bound  eax,QWORD PTR [edx]
  43b9fa:	mov    edi,0x1302da92
  43b9ff:	xchg   ebx,eax
  43ba00:	rol    BYTE PTR [edx],cl
  43ba02:	pop    es
  43ba03:	xchg   ebx,eax
  43ba04:	retf   0xeb02
  43ba07:	xchg   edx,eax
  43ba08:	ret    0x1f02
  43ba0b:	xchg   edx,eax
  43ba0c:	mov    edx,0xf290002
  43ba11:	adc    al,BYTE PTR [eax]
  43ba13:	push   ecx
  43ba14:	movlps xmm0,QWORD PTR [eax]
  43ba17:	imul   ecx,DWORD PTR [edi],0x2c910012
  43ba1d:	adc    al,BYTE PTR [eax]
  43ba1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba20:	sub    al,0x12
  43ba22:	add    ch,al
  43ba24:	sub    al,0x12
  43ba26:	add    cl,ah
  43ba28:	sub    al,0x12
  43ba2a:	add    BYTE PTR [ecx],al
  43ba2c:	add    BYTE PTR [edx+edx*1],cl
  43ba2f:	add    BYTE PTR ds:0x1100120c,al
  43ba35:	or     al,0x12
  43ba37:	add    BYTE PTR [ebp-0x66ffedf3],dh
  43ba3d:	sub    eax,0x9ee90012
  43ba42:	add    al,BYTE PTR [eax]
  43ba44:	jmp    0xe943bce7
  43ba49:	sahf   
  43ba4a:	add    al,BYTE PTR [eax]
  43ba4c:	jmp    0xe943bcef
  43ba51:	sahf   
  43ba52:	add    al,BYTE PTR [eax]
  43ba54:	push   esi
  43ba55:	add    dl,BYTE PTR [ecx]
  43ba57:	add    cl,ch
  43ba59:	sahf   
  43ba5a:	add    al,BYTE PTR [eax]
  43ba5c:	jmp    0xe943bcff
  43ba61:	sahf   
  43ba62:	add    al,BYTE PTR [eax]
  43ba64:	push   ds
  43ba65:	mov    edx,DWORD PTR [eax]
  43ba67:	add    cl,ch
  43ba69:	sahf   
  43ba6a:	add    al,BYTE PTR [eax]
  43ba6c:	jmp    0xe943bd0f
  43ba71:	sahf   
  43ba72:	add    al,BYTE PTR [eax]
  43ba74:	inc    edi
  43ba75:	push   0x9ee90010
  43ba7a:	add    al,BYTE PTR [eax]
  43ba7c:	jmp    0xe943bd1f
  43ba81:	sahf   
  43ba82:	add    al,BYTE PTR [eax]
  43ba84:	dec    esp
  43ba85:	enter  0x10,0x0
  43ba89:	je     0x43ba90
  43ba8b:	add    BYTE PTR [eax],al
  43ba8d:	test   BYTE PTR ds:0x84000000,al
  43ba93:	add    eax,0x10160000
  43ba98:	cmp    al,BYTE PTR [eax]
  43ba9a:	je     0x43baa1
  43ba9c:	add    BYTE PTR [eax],al
  43ba9e:	inc    esp
  43ba9f:	add    eax,0x5440000
  43baa4:	add    BYTE PTR [eax],al
  43baa6:	add    edx,DWORD PTR [ecx]
  43baa8:	cmp    al,BYTE PTR [eax]
  43baaa:	xor    al,0x5
  43baac:	add    BYTE PTR [eax],al
  43baae:	inc    esp
  43baaf:	add    eax,0x5440000
  43bab4:	add    BYTE PTR [eax],al
  43bab6:	mov    esi,0x34003a11
  43babb:	add    eax,0x5040000
  43bac0:	add    BYTE PTR [eax],al
  43bac2:	add    al,0x5
  43bac4:	add    BYTE PTR [eax],al
  43bac6:	ds inc edx
  43bac8:	cmp    al,BYTE PTR [eax]
  43baca:	hlt    
  43bacb:	add    al,0x0
  43bacd:	add    BYTE PTR [eax*1+0x5040000],al
  43bad4:	add    BYTE PTR [eax],al
  43bad6:	int3   
  43bad7:	(bad)  
  43bada:	hlt    
  43badb:	add    al,0x0
  43badd:	add    ah,al
  43badf:	add    al,0x0
  43bae1:	add    ah,al
  43bae3:	add    al,0x0
  43bae5:	add    BYTE PTR [ecx+edx*1+0x3a],bh
  43bae9:	add    BYTE PTR [esp+eax*1+0x4c40000],dh
  43baf0:	add    BYTE PTR [eax],al
  43baf2:	les    eax,FWORD PTR [eax+eax*1]
  43baf5:	add    BYTE PTR [eax],al
  43baf7:	pop    ecx
  43baf8:	adc    DWORD PTR [edx],edi
  43bafa:	add    BYTE PTR [esp+eax*1+0x4840000],dh
  43bb01:	add    BYTE PTR [eax],al
  43bb03:	popf   
  43bb04:	frndint 
  43bb06:	call   FWORD PTR [ebp-0x62c1c78a]
  43bb0c:	frndint 
  43bb0e:	call   FWORD PTR [ebp-0x62000327]
  43bb14:	frndint 
  43bb16:	call   FWORD PTR [ebp-0x62c1c712]
  43bb1c:	frndint 
  43bb1e:	call   FWORD PTR [ebp-0x62000327]
  43bb24:	frndint 
  43bb26:	call   FWORD PTR [ebp-0x62c05c49]
  43bb2c:	frndint 
  43bb2e:	call   FWORD PTR [ebp-0x62000327]
  43bb34:	frndint 
  43bb36:	call   FWORD PTR [ebp-0x62c05c9f]
  43bb3c:	frndint 
  43bb3e:	call   FWORD PTR [ebp-0x62000327]
  43bb44:	frndint 
  43bb46:	call   FWORD PTR [ebp-0x62c05c65]
  43bb4c:	frndint 
  43bb4e:	call   FWORD PTR [ebp-0x62000327]
  43bb54:	frndint 
  43bb56:	call   FWORD PTR [ebp+0x3fa0d5]
  43bb5c:	popf   
  43bb5d:	frndint 
  43bb5f:	call   FWORD PTR [ebp-0x62000327]
  43bb65:	frndint 
  43bb67:	call   FWORD PTR [ebp-0x62c05803]
  43bb6d:	frndint 
  43bb6f:	call   FWORD PTR [ebp-0x62000327]
  43bb75:	frndint 
  43bb77:	call   FWORD PTR [ebp-0x62c1335a]
  43bb7d:	add    ah,bh
  43bb7f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bb85:	add    ah,bh
  43bb87:	add    ebx,DWORD PTR [ebp-0x3c2d0bfe]
  43bb8d:	add    ah,bh
  43bb8f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bb95:	add    ah,bh
  43bb97:	add    ebx,DWORD PTR [ebp-0x5c2d09fe]
  43bb9d:	add    ah,bh
  43bb9f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bba5:	add    ah,bh
  43bba7:	add    ebx,DWORD PTR [ebp-0x7c2d6ffe]
  43bbad:	add    ah,bh
  43bbaf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bbb5:	add    ah,bh
  43bbb7:	add    ebx,DWORD PTR [ebp+0x63d22a02]
  43bbbd:	add    ah,bh
  43bbbf:	add    eax,DWORD PTR [eax]
  43bbc1:	popf   
  43bbc2:	add    ah,bh
  43bbc4:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bbca:	add    ah,ah
  43bbcc:	rol    ebx,1
  43bbce:	add    ah,bh
  43bbd0:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bbd6:	add    ah,bh
  43bbd8:	add    ebx,DWORD PTR [ebp-0x5c2de1fe]
  43bbde:	add    ah,bh
  43bbe0:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bbe6:	add    ah,bh
  43bbe8:	add    ebx,DWORD PTR [ebp-0x7c2d8cfe]
  43bbee:	add    ah,bh
  43bbf0:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bbf6:	add    al,BYTE PTR [eax]
  43bbf8:	jmp    0x8c43be9b
  43bbfd:	iret   
  43bbfe:	verw   cx
  43bc01:	sahf   
  43bc02:	add    al,BYTE PTR [eax]
  43bc04:	jmp    0xe943bea7
  43bc09:	sahf   
  43bc0a:	add    al,BYTE PTR [eax]
  43bc0c:	or     ch,BYTE PTR [esi+0xd]
  43bc0f:	add    cl,ch
  43bc11:	sahf   
  43bc12:	add    al,BYTE PTR [eax]
  43bc14:	jmp    0xe943beb7
  43bc19:	sahf   
  43bc1a:	add    al,BYTE PTR [eax]
  43bc1c:	ror    BYTE PTR [edi+0xd],0x0
  43bc20:	jmp    0xe943bec3
  43bc25:	add    BYTE PTR [esi-0x6116fffe],bl
  43bc2b:	add    al,BYTE PTR [eax]
  43bc2d:	pop    ebx
  43bc2e:	outs   dx,BYTE PTR ds:[esi]
  43bc2f:	or     eax,0x29ee900
  43bc34:	add    cl,ch
  43bc36:	sahf   
  43bc37:	add    al,BYTE PTR [eax]
  43bc39:	jmp    0xb643bedc
  43bc3e:	dec    edx
  43bc3f:	or     eax,0x29ee900
  43bc44:	add    cl,ch
  43bc46:	sahf   
  43bc47:	add    al,BYTE PTR [eax]
  43bc49:	jmp    0x6543beec
  43bc4e:	jmp    0x2:0x9ee9000c
  43bc55:	jmp    0xe943bef8
  43bc5a:	sahf   
  43bc5b:	add    al,BYTE PTR [eax]
  43bc5d:	cwde   
  43bc5e:	retf   0xc
  43bc61:	jmp    0xe943bf04
  43bc66:	sahf   
  43bc67:	add    al,BYTE PTR [eax]
  43bc69:	jmp    0xca43bf0c
  43bc6e:	in     eax,0xc
  43bc70:	add    BYTE PTR [eax],al
  43bc72:	les    eax,FWORD PTR [ecx]
  43bc74:	add    BYTE PTR [eax],al
  43bc76:	les    eax,FWORD PTR [ecx]
  43bc78:	add    BYTE PTR [eax],al
  43bc7a:	mov    ah,0x1
  43bc7c:	add    BYTE PTR [eax],al
  43bc7e:	imul   ebx,DWORD PTR [ecx],0x184003a
  43bc84:	add    BYTE PTR [eax],al
  43bc86:	test   BYTE PTR [ecx],al
  43bc88:	add    BYTE PTR [eax],al
  43bc8a:	add    BYTE PTR [ecx+eax*1+0x0],dh
  43bc8e:	add    BYTE PTR [ecx-0x7bffc5e1],bl
  43bc94:	add    DWORD PTR [eax],eax
  43bc96:	add    BYTE PTR [ecx+eax*1+0x1740000],al
  43bc9d:	add    BYTE PTR [eax],al
  43bc9f:	pop    ecx
  43bca0:	push   ds
  43bca1:	cmp    al,BYTE PTR [eax]
  43bca3:	inc    esp
  43bca4:	add    DWORD PTR [eax],eax
  43bca6:	add    BYTE PTR [ecx+eax*1+0x0],al
  43bcaa:	add    BYTE PTR [ecx+eax*1],dh
  43bcad:	add    BYTE PTR [eax],al
  43bcaf:	je     0x43bccf
  43bcb1:	cmp    al,BYTE PTR [eax]
  43bcb3:	inc    esp
  43bcb4:	add    DWORD PTR [eax],eax
  43bcb6:	add    BYTE PTR [ecx+eax*1+0x0],al
  43bcba:	add    BYTE PTR [ecx+eax*1],dh
  43bcbd:	add    BYTE PTR [eax],al
  43bcbf:	xor    ebx,DWORD PTR [ecx]
  43bcc1:	cmp    al,BYTE PTR [eax]
  43bcc3:	add    al,0x1
  43bcc5:	add    BYTE PTR [eax],al
  43bcc7:	add    al,0x1
  43bcc9:	add    BYTE PTR [eax],al
  43bccb:	hlt    
  43bccc:	add    BYTE PTR [eax],al
  43bcce:	add    BYTE PTR [edx+0x4003a18],dl
  43bcd4:	add    DWORD PTR [eax],eax
  43bcd6:	add    BYTE PTR [ecx+eax*1],al
  43bcd9:	add    BYTE PTR [eax],al
  43bcdb:	hlt    
  43bcdc:	add    BYTE PTR [eax],al
  43bcde:	add    BYTE PTR [edx-0x3bffc5e8],dh
  43bce4:	add    BYTE PTR [eax],al
  43bce6:	add    ah,al
  43bce8:	add    BYTE PTR [eax],al
  43bcea:	add    BYTE PTR [ebp+0xfffcdb],bl
  43bcf0:	popf   
  43bcf1:	retf   0x3e27
  43bcf4:	popf   
  43bcf5:	(bad)  
  43bcf7:	call   FWORD PTR [ebp-0x62000325]
  43bcfd:	(bad)  
  43bcff:	call   FWORD PTR [ebp-0x62c236c3]
  43bd05:	frndint 
  43bd07:	call   FWORD PTR [ebp-0x62000327]
  43bd0d:	frndint 
  43bd0f:	call   FWORD PTR [ebp-0x62c236f7]
  43bd15:	frndint 
  43bd17:	call   FWORD PTR [ebp-0x62000327]
  43bd1d:	frndint 
  43bd1f:	call   FWORD PTR [ebp-0x62c2354c]
  43bd25:	frndint 
  43bd27:	call   FWORD PTR [ebp-0x62000327]
  43bd2d:	frndint 
  43bd2f:	call   FWORD PTR [ebp-0x62c2356b]
  43bd35:	frndint 
  43bd37:	call   FWORD PTR [ebp-0x62000327]
  43bd3d:	frndint 
  43bd3f:	call   FWORD PTR [ebp-0x62c235f5]
  43bd45:	frndint 
  43bd47:	call   FWORD PTR [ebp-0x62000327]
  43bd4d:	frndint 
  43bd4f:	call   FWORD PTR [ebp+0x3dcabb]
  43bd55:	popf   
  43bd56:	frndint 
  43bd58:	call   FWORD PTR [ebp-0x62000327]
  43bd5e:	frndint 
  43bd60:	call   FWORD PTR [ebp-0x62c233c2]
  43bd66:	add    ah,bh
  43bd68:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bd6e:	add    ah,bh
  43bd70:	add    ebx,DWORD PTR [ebp+0x78cca402]
  43bd76:	add    ah,bh
  43bd78:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bd7e:	add    ah,bh
  43bd80:	add    ebx,DWORD PTR [ebp-0x273383fe]
  43bd86:	add    ah,bh
  43bd88:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bd8e:	add    ah,bh
  43bd90:	add    ebx,DWORD PTR [ebp-0x474c10fe]
  43bd96:	add    ah,bh
  43bd98:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bd9e:	add    ah,bh
  43bda0:	add    ebx,DWORD PTR [ebp-0x67712cfe]
  43bda6:	add    ah,bh
  43bda8:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bdae:	add    ah,bh
  43bdb0:	add    ebx,DWORD PTR [ebp+0x788d8c02]
  43bdb6:	add    ah,bh
  43bdb8:	add    eax,DWORD PTR [eax]
  43bdba:	popf   
  43bdbb:	add    ah,bh
  43bdbd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bdc3:	add    dl,BYTE PTR [edi]
  43bdc5:	data16 fild DWORD PTR [edx]
  43bdc8:	out    0x3,eax
  43bdca:	popf   
  43bdcb:	add    ah,bh
  43bdcd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bdd3:	add    dl,BYTE PTR [edx-0x18fd446c]
  43bdd9:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bddf:	add    al,BYTE PTR [eax]
  43bde1:	jmp    0xb343c084
  43bde6:	xor    DWORD PTR [eax+eax*1],ecx
  43bde9:	jmp    0xe943c08c
  43bdee:	sahf   
  43bdef:	add    al,BYTE PTR [eax]
  43bdf1:	jmp    0x2343c094
  43bdf6:	push   ss
  43bdf7:	or     al,0x0
  43bdf9:	jmp    0xe943c09c
  43bdfe:	sahf   
  43bdff:	add    al,BYTE PTR [eax]
  43be01:	jmp    0xdc43c0a4
  43be06:	das    
  43be07:	or     DWORD PTR [eax],eax
  43be09:	jmp    0xe943c0ac
  43be0e:	sahf   
  43be0f:	add    al,BYTE PTR [eax]
  43be11:	jmp    0x5a43c0b4
  43be16:	sbb    cl,BYTE PTR [ecx]
  43be18:	add    cl,ch
  43be1a:	sahf   
  43be1b:	add    al,BYTE PTR [eax]
  43be1d:	jmp    0x465c22
  43be22:	cmp    DWORD PTR [edx+ecx*1],eax
  43be25:	add    BYTE PTR [esi],dh
  43be27:	xor    al,0xa
  43be29:	add    BYTE PTR [ecx],ch
  43be2b:	out    dx,eax
  43be2c:	inc    edx
  43be2d:	add    cl,ch
  43be2f:	sahf   
  43be30:	add    al,BYTE PTR [eax]
  43be32:	(bad)  
  43be33:	out    dx,eax
  43be34:	inc    edx
  43be35:	add    BYTE PTR [ecx-0x5affbd31],cl
  43be3b:	iret   
  43be3c:	inc    edx
  43be3d:	add    BYTE PTR [ecx-0x62ffbd31],ah
  43be43:	iret   
  43be44:	inc    edx
  43be45:	add    BYTE PTR [ecx+0x3500426f],bl
  43be4b:	outs   dx,BYTE PTR ds:[esi]
  43be4c:	inc    edx
  43be4d:	add    BYTE PTR [ecx],dh
  43be4f:	outs   dx,BYTE PTR ds:[esi]
  43be50:	inc    edx
  43be51:	add    BYTE PTR ds:0x2900426e,ch
  43be57:	dec    esi
  43be58:	inc    edx
  43be59:	add    BYTE PTR [eax],al
  43be5b:	cwde   
  43be5c:	xor    eax,0x359c0040
  43be61:	inc    eax
  43be62:	add    ah,dh
  43be64:	add    eax,0x762b0000
  43be69:	add    BYTE PTR [ecx+0x5c4],bl
  43be6f:	mov    ah,0x5
  43be71:	add    BYTE PTR [eax],al
  43be73:	mov    ah,0x5
  43be75:	add    BYTE PTR [eax],al
  43be77:	les    eax,FWORD PTR ds:0x5c40000
  43be7d:	add    BYTE PTR [eax],al
  43be7f:	mov    ah,0x5
  43be81:	add    BYTE PTR [eax],al
  43be83:	add    BYTE PTR [ebp+eax*1+0x5840000],dh
  43be8a:	add    BYTE PTR [eax],al
  43be8c:	test   BYTE PTR ds:0x5740000,al
  43be92:	add    BYTE PTR [eax],al
  43be94:	je     0x43be9b
  43be96:	add    BYTE PTR [eax],al
  43be98:	test   BYTE PTR ds:0x5840000,al
  43be9e:	add    BYTE PTR [eax],al
  43bea0:	je     0x43bea7
  43bea2:	add    BYTE PTR [eax],al
  43bea4:	je     0x43beab
  43bea6:	add    BYTE PTR [eax],al
  43bea8:	inc    esp
  43bea9:	add    eax,0x5440000
  43beae:	add    BYTE PTR [eax],al
  43beb0:	xor    al,0x5
  43beb2:	add    BYTE PTR [eax],al
  43beb4:	xor    al,0x5
  43beb6:	add    BYTE PTR [eax],al
  43beb8:	inc    esp
  43beb9:	add    eax,0x5440000
  43bebe:	add    BYTE PTR [eax],al
  43bec0:	xor    al,0x5
  43bec2:	add    BYTE PTR [eax],al
  43bec4:	xor    al,0x5
  43bec6:	add    BYTE PTR [eax],al
  43bec8:	add    al,0x5
  43beca:	add    BYTE PTR [eax],al
  43becc:	add    al,0x5
  43bece:	add    BYTE PTR [eax],al
  43bed0:	hlt    
  43bed1:	add    al,0x0
  43bed3:	add    BYTE PTR [ebp-0x62000325],bl
  43bed9:	(bad)  
  43bedb:	call   FWORD PTR [ebp-0x62000325]
  43bee1:	(bad)  
  43bee3:	call   FWORD PTR [ebp+0xfffcdb]
  43bee9:	popf   
  43beea:	(bad)  
  43beec:	call   FWORD PTR [ebp-0x62000325]
  43bef2:	(bad)  
  43bef4:	call   FWORD PTR [ebp-0x62000325]
  43befa:	(bad)  
  43befc:	call   FWORD PTR [ebp-0x62000325]
  43bf02:	(bad)  
  43bf04:	call   FWORD PTR [ebp-0x62000325]
  43bf0a:	frndint 
  43bf0c:	call   FWORD PTR [ebp-0x62000327]
  43bf12:	frndint 
  43bf14:	call   FWORD PTR [ebp-0x62000327]
  43bf1a:	frndint 
  43bf1c:	call   FWORD PTR [ebp-0x62000327]
  43bf22:	frndint 
  43bf24:	call   FWORD PTR [ebp-0x62000327]
  43bf2a:	frndint 
  43bf2c:	call   FWORD PTR [ebp-0x62000327]
  43bf32:	frndint 
  43bf34:	call   FWORD PTR [ebp-0x62000327]
  43bf3a:	frndint 
  43bf3c:	call   FWORD PTR [ebp-0x62000327]
  43bf42:	frndint 
  43bf44:	call   FWORD PTR [ebp-0x62000327]
  43bf4a:	frndint 
  43bf4c:	inc    DWORD PTR [eax]
  43bf4e:	popf   
  43bf4f:	add    ah,bh
  43bf51:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf57:	add    ah,bh
  43bf59:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf5f:	add    ah,bh
  43bf61:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf67:	add    ah,bh
  43bf69:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf6f:	add    ah,bh
  43bf71:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf77:	add    ah,bh
  43bf79:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf7f:	add    ah,bh
  43bf81:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf87:	add    ah,bh
  43bf89:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf8f:	add    ah,bh
  43bf91:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf97:	add    ah,bh
  43bf99:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf9f:	add    ah,bh
  43bfa1:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bfa7:	add    ah,bh
  43bfa9:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bfaf:	add    ah,bh
  43bfb1:	add    eax,DWORD PTR [eax]
  43bfb3:	popf   
  43bfb4:	add    ah,bh
  43bfb6:	add    ebx,DWORD PTR [ebp+0x3af3e702]
  43bfbc:	mov    esi,0x4b029d03
  43bfc2:	sbb    dh,ch
  43bfc4:	or     bh,bl
  43bfc6:	sbb    eax,0xb9000c79
  43bfcb:	mov    eax,0xb0a13606
  43bfd0:	cs ss dec ecx
  43bfd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bfd4:	push   esi
  43bfd5:	ss popa 
  43bfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bfd8:	jle    0x43c00f
  43bfda:	jmp    0x143c23d
  43bfdf:	cdq    
  43bfe0:	add    al,BYTE PTR [eax]
  43bfe2:	cmp    DWORD PTR [esi+ecx*2+0x4684413b],eax
  43bfe9:	cmp    ebp,DWORD PTR [ecx-0x4c]
  43bfec:	jle    0x43c028
  43bfee:	popa   
  43bfef:	mov    ah,0x76
  43bff1:	cmp    bh,BYTE PTR [ecx-0x5c]
  43bff4:	outs   dx,BYTE PTR ds:[esi]
  43bff5:	cmp    al,BYTE PTR [ecx+0x493966ab]
  43bffb:	xchg   ebx,eax
  43bffc:	sahf   
  43bffd:	cmp    DWORD PTR [ecx-0x75],eax
  43c000:	add    al,BYTE PTR [eax]
  43c002:	jmp    0x9943c245
  43c007:	cwde   
  43c008:	add    al,BYTE PTR [eax]
  43c00a:	pop    ecx
  43c00b:	stos   DWORD PTR es:[edi],eax
  43c00c:	xor    WORD PTR [ecx-0x5d],cx
  43c010:	call   0x9d31:0x8e9b9531
  43c017:	add    BYTE PTR [ebx-0x54dace42],dl
  43c01d:	scas   al,BYTE PTR es:[edi]
  43c01e:	xor    DWORD PTR ds:0x5531dea3,ebp
  43c024:	fwait
  43c025:	into   
  43c026:	xor    DWORD PTR ds:0xe530fe93,edi
  43c02c:	stos   DWORD PTR es:[edi],eax
  43c02d:	out    dx,al
  43c02e:	xor    ch,cl
  43c030:	mov    ds:0x9bd5311e,eax
  43c035:	push   cs
  43c036:	xor    ebp,ebx
  43c038:	xchg   ebx,eax
  43c039:	xor    DWORD PTR ds:[ebp-0x52ced155],esp
  43c040:	mov    ds:0x1000315e,eax
  43c045:	cmc    
  43c046:	jae    0x43c07f
  43c048:	mov    al,ds:0x803783f4
  43c04d:	cmc    
  43c04e:	xchg   ebx,eax
  43c04f:	aaa    
  43c050:	pusha  
  43c051:	cmc    
  43c052:	mov    ds:0xb3f53037,eax
  43c057:	aaa    
  43c058:	and    ch,dh
  43c05a:	ret    
  43c05b:	aaa    
  43c05c:	inc    eax
  43c05d:	cmc    
  43c05e:	shl    DWORD PTR [edi],cl
  43c060:	inc    eax
  43c061:	cmc    
  43c062:	jecxz  0x43c09b
  43c064:	shl    ah,1
  43c066:	repz aaa 
  43c068:	and    ch,dh
  43c06a:	add    edi,DWORD PTR [eax]
  43c06c:	shr    cl,0x13
  43c06f:	cmp    al,ah
  43c071:	jmp    0xea33f899
  43c076:	xor    edi,DWORD PTR [eax]
  43c078:	loopne 0x43c063
  43c07a:	inc    ebx
  43c07b:	cmp    BYTE PTR [eax],al
  43c07d:	and    dh,0x53
  43c080:	cmp    BYTE PTR [eax-0x6fc79c1a],al
  43c086:	out    0x73,al
  43c088:	cmp    BYTE PTR [eax+0x3883e9],ah
  43c08e:	jmp    0x38a3:0xe9e03893
  43c095:	xor    cl,ch
  43c097:	mov    bl,0x38
  43c099:	and    cl,ch
  43c09b:	ret    
  43c09c:	cmp    al,al
  43c09e:	jmp    0xea03f976
  43c0a3:	jecxz  0x43c0dd
  43c0a5:	shr    cl,1
  43c0a7:	repz cmp BYTE PTR [eax+0x403903e9],ah
  43c0ae:	out    0x13,al
  43c0b0:	cmp    DWORD PTR [eax-0x1a],esp
  43c0b3:	and    edi,DWORD PTR [ecx]
  43c0b5:	jo     0x43c09d
  43c0b7:	xor    edi,DWORD PTR [ecx]
  43c0b9:	pusha  
  43c0ba:	out    0x43,al
  43c0bc:	cmp    DWORD PTR [ebp+0x74541b9f],ebx
  43c0c2:	xchg   edi,eax
  43c0c3:	sbb    esp,DWORD PTR [esp+eiz*2+0x6f]
  43c0c7:	sbb    esi,DWORD PTR [esp+eiz*2+0x47]
  43c0cb:	sbb    al,0x84
  43c0cd:	aam    0x5f
  43c0cf:	sbb    al,0x94
  43c0d1:	aam    0x37
  43c0d3:	sbb    al,0xa4
  43c0d5:	les    ebp,FWORD PTR [edi+0x14]
  43c0d8:	mov    ah,0xc4
  43c0da:	addr16 adc al,0xc4
  43c0dd:	mov    ah,0x9f
  43c0df:	adc    al,0xd4
  43c0e1:	add    BYTE PTR [edi+edx*4-0x505b1bec],dh
  43c0e8:	adc    al,0xf4
  43c0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c0eb:	xchg   DWORD PTR [esp+eax*1],edx
  43c0ee:	xchg   edi,eax
  43c0ef:	fist   WORD PTR [esi]
  43c0f1:	adc    al,0x97
  43c0f3:	mov    bh,0x16
  43c0f5:	and    al,0x87
  43c0f7:	scas   eax,DWORD PTR es:[edi]
  43c0f8:	push   ss
  43c0f9:	xor    al,0x87
  43c0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c0fc:	push   ss
  43c0fd:	inc    esp
  43c0fe:	ja     0x43c11f
  43c100:	push   ss
  43c101:	push   esp
  43c102:	ja     0x43c11b
  43c104:	push   ss
  43c105:	fs addr16 out dx,eax
  43c108:	adc    eax,0x16c76774
  43c10d:	test   bh,dl
  43c10f:	pop    ebp
  43c110:	push   ss
  43c111:	xchg   esp,eax
  43c112:	xlat   BYTE PTR ds:[ebx]
  43c113:	xor    eax,0x6dc7a416
  43c118:	adc    eax,0x1565c7b4
  43c11d:	les    esi,FWORD PTR [edi-0x482be9e3]
  43c123:	adc    eax,0x2da7e416
  43c128:	push   ss
  43c129:	hlt    
  43c12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c12b:	add    eax,0xdd960416
  43c130:	pop    ss
  43c131:	adc    al,0x96
  43c133:	mov    ch,0x17
  43c135:	and    al,0x86
  43c137:	add    dl,bl
  43c139:	sbb    BYTE PTR [ecx-0x1ee724f9],cl
  43c13f:	pop    es
  43c140:	mov    ds:0xab07c918,eax
  43c145:	sbb    BYTE PTR [eax],al
  43c147:	rol    DWORD PTR [edi],0x93
  43c14a:	sbb    BYTE PTR [ecx+0x21187b07],ch
  43c150:	or     BYTE PTR [ebx+0x19],ah
  43c153:	sub    DWORD PTR [eax],ecx
  43c155:	dec    ebx
  43c156:	sbb    DWORD PTR [ecx+0x8],eax
  43c159:	xchg   ebx,eax
  43c15a:	sbb    BYTE PTR [ecx+0x8],cl
  43c15d:	fwait
  43c15e:	sbb    cl,ah
  43c160:	pop    es
  43c161:	mov    ds:0xab07c918,eax
  43c166:	sbb    BYTE PTR [ecx],al
  43c168:	or     bl,dl
  43c16a:	sbb    cl,ch
  43c16c:	pop    es
  43c16d:	mov    ebx,0xe306a118
  43c172:	pop    ss
  43c173:	test   eax,0x8117cb06
  43c178:	push   es
  43c179:	rcl    DWORD PTR [edi],cl
  43c17b:	mov    DWORD PTR [esi],eax
  43c17d:	fist   DWORD PTR [edi]
  43c17f:	popa   
  43c180:	push   es
  43c181:	and    ebx,DWORD PTR [eax]
  43c183:	dec    ecx
  43c184:	push   es
  43c185:	sub    ebx,DWORD PTR [eax]
  43c187:	inc    ecx
  43c188:	push   es
  43c189:	adc    ebx,DWORD PTR [eax]
  43c18b:	sub    DWORD PTR [esi],eax
  43c18d:	sti    
  43c18e:	pop    ss
  43c18f:	and    DWORD PTR [esi],eax
  43c191:	arpl   WORD PTR [edi],dx
  43c193:	sub    DWORD PTR [esi],eax
  43c195:	dec    ebx
  43c196:	pop    ss
  43c197:	inc    ecx
  43c198:	push   es
  43c199:	xchg   ebx,eax
  43c19a:	pop    ss
  43c19b:	dec    ecx
  43c19c:	push   es
  43c19d:	daa    
  43c19e:	pop    ss
  43c19f:	imul   eax,DWORD PTR [esi],0x679172f
  43c1a5:	push   edi
  43c1a6:	pop    ss
  43c1a7:	imul   eax,DWORD PTR [esi],0xa9001713
  43c1ad:	add    eax,0x5e116fb
  43c1b2:	add    BYTE PTR [ebp-0x72c4d155],ah
  43c1b8:	mov    bl,0x5e
  43c1ba:	cmp    edx,DWORD PTR [ebp-0x62c4b155]
  43c1c0:	xchg   ebx,eax
  43c1c1:	jle    0x43c1fd
  43c1c3:	mov    ebp,DWORD PTR gs:[esi+0x3a]
  43c1c7:	ins    DWORD PTR es:[edi],dx
  43c1c8:	xchg   ebx,eax
  43c1c9:	sahf   
  43c1ca:	cmp    dl,BYTE PTR [ebp-0x75]
  43c1cd:	mov    ?,WORD PTR [edx]
  43c1cf:	cmp    eax,0x253abeb3
  43c1d4:	stos   DWORD PTR es:[edi],eax
  43c1d5:	scas   al,BYTE PTR es:[edi]
  43c1d6:	cmp    cl,BYTE PTR ds:0xe93adeb3
  43c1dc:	outs   dx,BYTE PTR ds:[esi]
  43c1dd:	add    al,BYTE PTR [eax]
  43c1df:	and    DWORD PTR [ecx-0x6a0afffe],esp
  43c1e5:	and    dh,BYTE PTR [ebx]
  43c1e7:	add    eax,0x15331a84
  43c1ec:	test   BYTE PTR [edx],dl
  43c1ee:	xor    esi,ebp
  43c1f0:	mov    ch,0xa
  43c1f2:	xor    esi,ebp
  43c1f4:	mov    ch,0x42
  43c1f6:	xor    ebx,DWORD PTR ds:0xb132bea4
  43c1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c1fd:	mov    dh,0x32
  43c1ff:	inc    ebp
  43c200:	xchg   edi,eax
  43c201:	call   0x5531:0x92974531
  43c208:	xchg   DWORD PTR [esi-0x316e4ec9],edi
  43c20e:	aaa    
  43c20f:	add    DWORD PTR [eax],0xe937bea9
  43c215:	push   ds
  43c216:	ret    0xf5f8
  43c219:	sahf   
  43c21a:	add    al,BYTE PTR [eax]
  43c21c:	push   ebp
  43c21d:	nop
  43c21e:	mov    dl,0x36
  43c220:	push   ebp
  43c221:	test   al,0xba
  43c223:	ss push ebp
  43c225:	mov    al,ds:0x98e53602
  43c22a:	or     dh,BYTE PTR [esi]
  43c22c:	add    BYTE PTR [eax+0x10],ch
  43c22f:	aam    0x3a
  43c231:	jl     0x43c243
  43c233:	fdivr  QWORD PTR [edx]
  43c235:	in     al,0x10
  43c237:	in     al,0x3a
  43c239:	test   BYTE PTR [eax],dl
  43c23b:	hlt    
  43c23c:	cmp    bh,BYTE PTR [eax+edx*1-0x4]
  43c240:	cmp    al,BYTE PTR [ecx+edx*1+0x4]
  43c244:	cmp    edi,DWORD PTR [ecx+edx*1]
  43c247:	cmp    ebx,DWORD PTR fs:[ecx+edx*1]
  43c24b:	ins    BYTE PTR es:[edi],dx
  43c24c:	cmp    esp,DWORD PTR [eax+edx*1+0x111c3b74]
  43c253:	jl     0x43c290
  43c255:	test   BYTE PTR [ecx],dl
  43c257:	test   BYTE PTR [ebx],bh
  43c259:	jl     0x43c26c
  43c25b:	mov    WORD PTR [ebx],?
  43c25d:	test   BYTE PTR [eax],dl
  43c25f:	xchg   esp,eax
  43c260:	cmp    ebx,DWORD PTR [ecx+edx*1]
  43c263:	mov    eax,0xc011083b
  43c268:	cmp    ebp,DWORD PTR [ecx+edx*1]
  43c26b:	in     al,0x3b
  43c26d:	xchg   esp,eax
  43c26e:	adc    dh,ah
  43c270:	cmp    al,0xdc
  43c272:	adc    esp,edi
  43c274:	cmp    al,0x0
  43c276:	les    edx,FWORD PTR [edx]
  43c278:	add    al,0x3d
  43c27a:	mov    esp,0xc43d0c12
  43c27f:	adc    dl,BYTE PTR [edi*1+0x3d1c139c]
  43c286:	in     al,0x12
  43c288:	and    al,0x3d
  43c28a:	mov    ah,0x35
  43c28c:	stc    
  43c28d:	dec    DWORD PTR [eax-0x67fffffa]
  43c293:	sbb    DWORD PTR [eax-0x77e5ffcc],eax
  43c299:	xor    al,0xe8
  43c29b:	sbb    DWORD PTR [eax-0x17e62fcc],edx
  43c2a1:	xor    al,0x9c
  43c2a3:	sbb    ebx,DWORD PTR ds:0x17ea9d35
  43c2a9:	clc    
  43c2aa:	mov    al,0xde
  43c2ac:	push   ss
  43c2ad:	dec    ebx
  43c2ae:	stos   DWORD PTR es:[edi],eax
  43c2af:	cmp    BYTE PTR [edi],dl
  43c2b1:	stc    
  43c2b2:	xchg   ebx,eax
  43c2b3:	add    eax,0xb48a4d15
  43c2b8:	or     esp,edi
  43c2ba:	test   BYTE PTR [ebx-0x16784cf6],dh
  43c2c0:	or     DWORD PTR [ecx+edi*2+0x62],esp
  43c2c4:	or     BYTE PTR [edx+0x5908eb71],dh
  43c2ca:	push   0x63331010
  43c2cf:	sahf   
  43c2d0:	push   cs
  43c2d1:	data16 fld TBYTE PTR [ebx]
  43c2d4:	setb   bl
  43c2d7:	icebp  
  43c2d8:	push   cs
  43c2d9:	int3   
  43c2da:	add    bl,cl
  43c2dc:	sbb    BYTE PTR [edi],cl
  43c2de:	fcmovnb st,st(3)
  43c2e0:	mov    dh,0xf
  43c2e2:	or     eax,0x240fc1ba
  43c2e7:	mov    dl,0x18
  43c2e9:	cmovae ebp,DWORD PTR [edx-0x5da2f112]
  43c2f0:	inc    edx
  43c2f1:	vmwrite ebx,DWORD PTR [edx-0x62fff184]
  43c2f8:	stos   DWORD PTR es:[edi],eax
  43c2f9:	pushf  
  43c2fa:	dec    edx
  43c2fc:	inc    edx
  43c2fd:	std    
  43c2fe:	call   FWORD PTR [ebp+0x6d651407]
  43c304:	cs adc al,0xbf
  43c307:	ins    DWORD PTR es:[edi],dx
  43c308:	jl     0x43c31d
  43c30a:	fild   QWORD PTR [ebp-0x43]
  43c30d:	or     eax,0xcf96c1e
  43c312:	pop    ebx
  43c313:	int3   
  43c314:	adc    cl,BYTE PTR ds:0xd2ccc69
  43c31a:	nop
  43c31b:	int3   
  43c31c:	lock or al,0xc6
  43c31f:	int3   
  43c320:	add    bh,BYTE PTR [ecx]
  43c322:	adc    edx,DWORD PTR [esi-0xe]
  43c325:	xchg   ebp,eax
  43c326:	push   ss
  43c327:	sub    esi,ebp
  43c329:	sub    edx,DWORD PTR [esi]
  43c32b:	push   0xb714dcf5
  43c330:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c332:	adc    al,0xe2
  43c334:	repz mov edx,0x4cf41914
  43c33a:	adc    eax,0x17a0f43d
  43c33f:	add    BYTE PTR [eax],ch
  43c341:	not    DWORD PTR [ebx]
  43c343:	sbb    cl,cl
  43c345:	cmc    
  43c346:	xchg   edx,eax
  43c347:	push   ss
  43c348:	adc    dh,dh
  43c34a:	loop   0x43c365
  43c34c:	mov    edi,eax
  43c34e:	mov    eax,0xaaf86c19
  43c353:	sbb    DWORD PTR [ebx-0x8],esp
  43c356:	xchg   ebx,eax
  43c357:	sbb    DWORD PTR ds:0x181a60f9,ebx
  43c35d:	stc    
  43c35e:	dec    ebp
  43c35f:	sbb    ah,BYTE PTR [edx]
  43c361:	stc    
  43c362:	mov    BYTE PTR [ecx],bl
  43c364:	inc    esi
  43c365:	stc    
  43c366:	xchg   ebp,eax
  43c367:	sbb    DWORD PTR ds:0xde1991f9,esi
  43c36d:	clc    
  43c36e:	pushf  
  43c36f:	sbb    edx,edx
  43c371:	clc    
  43c372:	cdq    
  43c373:	sbb    ecx,edi
  43c375:	clc    
  43c376:	lds    ebx,FWORD PTR [ecx]
  43c378:	mov    edx,0xce19c0f8
  43c37d:	clc    
  43c37e:	lods   eax,DWORD PTR ds:[esi]
  43c37f:	sbb    eax,eax
  43c381:	clc    
  43c382:	in     eax,dx
  43c383:	sbb    BYTE PTR [eax+0x5e18dbf7],ch
  43c389:	neg    DWORD PTR [ecx+ebx*1]
  43c38c:	dec    esi
  43c38d:	test   DWORD PTR [ecx],0x55f72419
  43c393:	sbb    BYTE PTR [ecx-0x9],al
  43c396:	sbb    BYTE PTR ss:[esi-0x9],dl
  43c39a:	jmp    FWORD PTR [ecx-0x61cf355b]
  43c3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c3a1:	mov    al,0x30
  43c3a3:	out    dx,eax
  43c3a4:	add    BYTE PTR [esi-0x5edec81d],ah
  43c3aa:	push   ebp
  43c3ab:	cmp    ah,al
  43c3ad:	xchg   esi,eax
  43c3ae:	xchg   DWORD PTR [edi],esi
  43c3b0:	jns    0x43c348
  43c3b2:	ins    BYTE PTR es:[edi],dx
  43c3b3:	aaa    
  43c3b4:	and    BYTE PTR [esi-0x59dfc833],0xdf
  43c3bb:	aaa    
  43c3bc:	inc    ebx
  43c3bd:	xchg   esi,eax
  43c3be:	pop    es
  43c3bf:	aaa    
  43c3c0:	fist   WORD PTR [edi-0x5835c8e2]
  43c3c6:	out    0x36,eax
  43c3c8:	into   
  43c3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3ca:	repz rcl BYTE PTR ss:[edi-0x68a2c8aa],cl
  43c3d2:	ret    0x3436
  43c3d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3d6:	scas   eax,DWORD PTR es:[edi]
  43c3d7:	ss out dx,eax
  43c3d9:	mov    al,ds:0x989d3619
  43c3de:	pop    eax
  43c3df:	mov    DWORD PTR ss:[eax-0x58a4c9d2],edx
  43c3e6:	test   DWORD PTR ds:0x357ba794,esi
  43c3ec:	mov    ah,0x97
  43c3ee:	loopne 0x43c425
  43c3f0:	mov    ebp,0xbe35af97
  43c3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3f6:	mov    ecx,0x14a7e635
  43c3fb:	xor    eax,0x352097d2
  43c400:	cmc    
  43c401:	xchg   edi,eax
  43c402:	clc    
  43c403:	xor    al,0x3a
  43c405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c406:	push   edi
  43c407:	xor    eax,0x23a6003e
  43c40c:	xor    eax,0x34939679
  43c411:	outs   dx,BYTE PTR ds:[esi]
  43c412:	xchg   esi,eax
  43c413:	jo     0x43c449
  43c415:	add    bl,bl
  43c417:	or     esi,ecx
  43c419:	cmp    edi,DWORD PTR [edi]
  43c41b:	or     ah,al
  43c41d:	cmp    ebp,DWORD PTR [edx-0x70c392ee]
  43c423:	push   cs
  43c424:	jg     0x43c462
  43c426:	stc    
  43c427:	adc    al,bl
  43c429:	cmp    al,0xb7
  43c42b:	adc    al,BYTE PTR [eax]
  43c42d:	cmp    eax,0x3d0d137a
  43c432:	fwait
  43c433:	adc    esi,DWORD PTR ds:0x78136f3d
  43c439:	cmp    eax,0x3d8313b9
  43c43e:	in     eax,0x13
  43c440:	mov    ds:0xcc13c53d,eax
  43c445:	cmp    eax,0x3ddf1375
  43c44a:	mov    al,ds:0x5a3e0913
  43c44f:	adc    BYTE PTR [esi+edi*1],ch
  43c452:	call   0x79822766
  43c457:	or     al,0x6
  43c459:	aas    
  43c45a:	mov    eax,0xa53fc30d
  43c45f:	or     eax,0xcf13fcf
  43c464:	add    BYTE PTR [eax],al
  43c466:	add    al,0x92
  43c468:	clc    
  43c469:	inc    DWORD PTR [edx+eax*1+0x0]
  43c46d:	add    BYTE PTR [eax],al
  43c46f:	push   ebp
  43c470:	push   ss
  43c471:	pop    es
  43c472:	xor    DWORD PTR [eax-0x64ceb6e9],edi
  43c478:	pop    ss
  43c479:	xor    DWORD PTR [ecx],0x31a81668
  43c47f:	dec    eax
  43c480:	push   ss
  43c481:	mov    bl,0x31
  43c483:	sti    
  43c484:	push   ss
  43c485:	into   
  43c486:	xor    DWORD PTR [ecx],edx
  43c488:	pop    ss
  43c489:	or     DWORD PTR [edx],esi
  43c48b:	mov    al,0x13
  43c48d:	sbb    eax,0xede9d32
  43c492:	cmp    DWORD PTR [edi+0x1a],ebp
  43c495:	push   cs
  43c496:	test   bh,cl
  43c498:	and    DWORD PTR [edi],ecx
  43c49a:	mov    bh,0xcf
  43c49c:	gs push cs
  43c49e:	fmul   st(7),st
  43c4a0:	(bad)  
  43c4a1:	or     eax,0xdf7ce5e
  43c4a6:	das    
  43c4a7:	mov    cl,0x1c
  43c4a9:	sbb    BYTE PTR [ecx-0x57],al
  43c4ac:	outs   dx,BYTE PTR ds:[esi]
  43c4ad:	adc    BYTE PTR [eax-0x4f],dh
  43c4b0:	popf   
  43c4b1:	adc    bl,dl
  43c4b3:	test   eax,0x90031146
  43c4b8:	fst    DWORD PTR [edi]
  43c4ba:	data16 mov BYTE PTR [edi+0x17],dh
  43c4be:	xchg   ebx,eax
  43c4bf:	nop
  43c4c0:	push   edi
  43c4c1:	sbb    cl,cl
  43c4c3:	mov    BYTE PTR [eax+ebx*1],dl
  43c4c6:	push   DWORD PTR [eax-0x5f]
  43c4c9:	adc    al,BYTE PTR [eax+0x6b]
  43c4cc:	ret    0x6712
  43c4cf:	jae    0x43c455
  43c4d1:	adc    bl,BYTE PTR [ebx+0x12f26b00]
  43c4d7:	jecxz  0x43c4ac
  43c4d9:	pop    ss
  43c4da:	adc    ebp,DWORD PTR [ecx]
  43c4dc:	retf   0x1176
  43c4df:	dec    esp
  43c4e0:	ror    BYTE PTR [ecx+0x4eca6a11],cl
  43c4e6:	adc    ch,BYTE PTR [eax-0x7ced9e4e]
  43c4ec:	mov    ch,0x84
  43c4ee:	or     ecx,DWORD PTR [ecx-0x5c]
  43c4f1:	es add eax,0x617a4ef
  43c4f7:	inc    ebx
  43c4f8:	xchg   edi,eax
  43c4f9:	lock add eax,0x57397bf
  43c4ff:	fadd   QWORD PTR [edi-0x7966f8fd]
  43c505:	das    
  43c506:	pop    es
  43c507:	stc    
  43c508:	jbe    0x43c50c
  43c50a:	lds    ecx,FWORD PTR [edi]
  43c50c:	pop    esp
  43c50d:	(bad)  
  43c50e:	adc    BYTE PTR ss:[esi+edi*8+0x33],cl
  43c513:	adc    BYTE PTR [esi+edi*8],dh
  43c516:	adc    BYTE PTR [eax],dl
  43c518:	pop    ss
  43c519:	call   FWORD PTR [eax+edx*1+0x3a]
  43c51d:	(bad)  
  43c51e:	jg     0x43c530
  43c520:	lods   eax,DWORD PTR ds:[esi]
  43c521:	std    
  43c522:	mov    dl,0xe
  43c524:	push   ss
  43c525:	(bad)  
  43c526:	push   ecx
  43c527:	push   cs
  43c528:	inc    edx
  43c529:	std    
  43c52a:	out    0xc3,al
  43c52c:	jb     0x43c4ea
  43c52e:	mov    dh,0x3
  43c530:	popf   
  43c531:	add    cl,dh
  43c533:	adc    esi,DWORD PTR [eax]
  43c535:	repz pop ss
  43c537:	adc    eax,DWORD PTR [eax]
  43c539:	(bad)  
  43c53a:	icebp  
  43c53b:	jne    0x43c550
  43c53d:	out    0xf0,eax
  43c53f:	into   
  43c540:	adc    edx,edi
  43c542:	lock jns 0x43c557
  43c545:	jo     0x43c536
  43c547:	mov    ch,0x10
  43c549:	test   dh,dh
  43c54b:	sbb    BYTE PTR cs:[ebp+esi*8-0x9cde892],al
  43c553:	rcl    DWORD PTR ds:0x14e6f4e4,1
  43c559:	and    bh,bl
  43c55b:	pop    esi
  43c55c:	or     al,0x3f
  43c55e:	cli    
  43c55f:	sbb    DWORD PTR [ebx],ecx
  43c561:	add    al,0xfa
  43c563:	inc    ebp
  43c564:	or     edx,esi
  43c566:	(bad)  
  43c567:	scas   eax,DWORD PTR es:[edi]
  43c568:	push   cs
  43c569:	inc    ecx
  43c56a:	(bad)  
  43c56b:	sbb    cl,BYTE PTR [esi]
  43c56d:	xchg   esp,edi
  43c56f:	ror    BYTE PTR ds:0xd4ffb5f,cl
  43c575:	xor    eax,0x9d0ca8fc
  43c57a:	add    ah,bh
  43c57c:	mov    bl,0xd2
  43c57e:	mov    ebx,0x29d044a
  43c583:	add    ah,ah
  43c585:	scas   al,BYTE PTR es:[edi]
  43c586:	fs das 
  43c588:	les    ecx,FWORD PTR [esi-0x70a6d0cb]
  43c58e:	shr    BYTE PTR [esi],0xf8
  43c591:	mov    WORD PTR [ebx],ds
  43c593:	and    ecx,DWORD PTR cs:[edi-0x50ccd1b3]
  43c59a:	and    ch,BYTE PTR [esi]
  43c59c:	sti    
  43c59d:	add    BYTE PTR [ebx+esi*1-0x7e5397d2],ch
  43c5a4:	sub    eax,0x2d6eac53
  43c5a9:	jge    0x43c537
  43c5ab:	out    0x2c,al
  43c5ad:	and    DWORD PTR [edi+eax*2+0x7d8da32d],ecx
  43c5b4:	sub    al,0xba
  43c5b6:	mov    bh,BYTE PTR ds:0x1b23034
  43c5bc:	xor    edi,DWORD PTR [ecx]
  43c5be:	stos   DWORD PTR es:[edi],eax
  43c5bf:	or     eax,0x4b97fd31
  43c5c4:	aaa    
  43c5c5:	mov    bl,0x97
  43c5c7:	mov    DWORD PTR [esi],esi
  43c5c9:	outs   dx,DWORD PTR ds:[esi]
  43c5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5cb:	retf   
  43c5cc:	ss daa 
  43c5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5cf:	push   ebx
  43c5d0:	adc    BYTE PTR ss:[esp+eax*8+0x54941e35],0x35
  43c5d9:	mov    fs,WORD PTR [ebp-0x5aedcb9b]
  43c5df:	pop    ss
  43c5e0:	cmp    al,0x7a
  43c5e2:	call   0x392a:0x90b93b6f
  43c5e9:	jmp    0x3a3c80ec
  43c5ee:	cdq    
  43c5ef:	add    al,BYTE PTR [eax]
  43c5f1:	push   esp
  43c5f2:	xchg   ecx,eax
  43c5f3:	push   ss
  43c5f4:	das    
  43c5f5:	mov    ds:0x592d8a88,eax
  43c5fa:	mov    dl,0x86
  43c5fc:	sub    al,0x0
  43c5fe:	push   ebp
  43c5ff:	adc    edi,DWORD PTR [edx+0x123f0033]
  43c605:	mov    edx,0x2f109e34
  43c60a:	ss pop edi
  43c60c:	bndstx [eax],(bad)
  43c60f:	push   0xe
  43c611:	push   ebx
  43c612:	cmp    BYTE PTR [esi+ecx*1],ah
  43c615:	sar    BYTE PTR [eax],cl
  43c617:	mov    WORD PTR ds:0x853399a,cs
  43c61d:	jnp    0x43c65a
  43c61f:	cli    
  43c620:	or     DWORD PTR [ebp+0x450af43b],edi
  43c626:	cmp    eax,0x3e820c6e
  43c62b:	int    0xc
  43c62d:	mov    ds:0xd103e,al
  43c632:	aas    
  43c633:	inc    ebx
  43c634:	or     eax,0xd503f52
  43c639:	add    BYTE PTR [eax],al
  43c63b:	inc    esp
  43c63c:	(bad)  
  43c63d:	clc    
  43c63e:	push   DWORD PTR [eax]
  43c640:	push   es
  43c641:	add    BYTE PTR [eax],al
  43c643:	add    BYTE PTR [esi],dl
  43c645:	push   eax
  43c646:	xor    DWORD PTR [ebx],edx
  43c648:	adc    BYTE PTR [ebp+0x400f9431],dh
  43c64e:	xor    ch,BYTE PTR [eax+0x6a33c710]
  43c654:	adc    esi,ebx
  43c656:	xor    ecx,DWORD PTR [ecx+edx*1+0x9ff3404]
  43c65d:	pop    ds
  43c65e:	xor    eax,0x367c137f
  43c663:	jne    0x43c679
  43c665:	scas   eax,DWORD PTR es:[edi]
  43c666:	ss add al,cl
  43c669:	adc    al,0xfe
  43c66b:	aaa    
  43c66c:	dec    edx
  43c66d:	push   cs
  43c66e:	js     0x43c6a8
  43c670:	jns    0x43c678
  43c672:	dec    ebx
  43c673:	cmp    DWORD PTR [eax+0x7],edx
  43c676:	jp     0x43c6b1
  43c678:	popf   
  43c679:	lea    ecx,[ecx]
  43c67b:	cld    
  43c67c:	xchg   esi,eax
  43c67d:	mov    bl,0x0
  43c67f:	inc    edx
  43c680:	xchg   ecx,eax
  43c681:	das    
  43c682:	add    DWORD PTR [eax-0x78],eax
  43c685:	arpl   WORD PTR [edi],ax
  43c687:	icebp  
  43c688:	add    cl,0x6
  43c68b:	push   edi
  43c68c:	jp     0x43c6b0
  43c68e:	push   es
  43c68f:	add    BYTE PTR [ebp-0x55010355],bl
  43c695:	jecxz  0x43c69a
  43c697:	add    BYTE PTR [ebp-0x32a8f328],bl
  43c69d:	dec    ebp
  43c69e:	adc    al,0x2f
  43c6a0:	iret   
  43c6a1:	call   0x631312b7
  43c6a6:	adc    bh,BYTE PTR [edi-0x32]
  43c6a9:	stos   DWORD PTR es:[edi],eax
  43c6aa:	or     eax,0xd04b23e
  43c6af:	xchg   ecx,eax
  43c6b0:	stos   BYTE PTR es:[edi],al
  43c6b1:	dec    ebx
  43c6b2:	push   cs
  43c6b3:	pop    ds
  43c6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c6b5:	jp     0x43c6bb
  43c6b7:	je     0x43c65e
  43c6b9:	push   ds
  43c6ba:	add    eax,0x5279593
  43c6bf:	sahf   
  43c6c0:	xchg   ebp,eax
  43c6c1:	xchg   ebp,eax
  43c6c2:	add    al,0xb0
  43c6c4:	test   DWORD PTR [ecx],esi
  43c6c6:	add    eax,0x4e785bc
  43c6cb:	mov    BYTE PTR [eax],0x75
  43c6ce:	sbb    al,0x5
  43c6d0:	xlat   BYTE PTR ds:[ebx]
  43c6d1:	jne    0x43c6e0
  43c6d3:	add    eax,0x50965e7
  43c6d8:	sbb    BYTE PTR [ebx+ecx*8+0xb],ah
  43c6dc:	and    esp,edx
  43c6de:	jbe    0x43c6eb
  43c6e0:	xor    edx,esp
  43c6e2:	les    ecx,FWORD PTR [ebx]
  43c6e4:	aas    
  43c6e5:	les    esp,FWORD PTR [eax+0xb]
  43c6e8:	dec    ecx
  43c6e9:	les    edx,FWORD PTR [esi+0x7fb45a0b]
  43c6ef:	or     ebp,DWORD PTR [ebx-0x4c]
  43c6f2:	add    bl,BYTE PTR [ebx+0xb]
  43c6f5:	jb     0x43c6f2
  43c6f7:	mov    dh,0xb
  43c6f9:	mov    edi,0x6e0e12fc
  43c6fe:	cld    
  43c6ff:	lods   eax,DWORD PTR ds:[esi]
  43c700:	push   cs
  43c701:	xchg   edi,eax
  43c702:	std    
  43c703:	push   ds
  43c704:	or     eax,0xd9bfd6b
  43c709:	popf   
  43c70a:	add    ah,bh
  43c70c:	repz mov ebx,0x9d0406b8
  43c712:	add    cl,BYTE PTR [esi+0xb]
  43c715:	add    bh,ch
  43c717:	int3   
  43c718:	push   es
  43c719:	imul   esi,edi,0xf91d06fc
  43c71f:	inc    esi
  43c720:	or     dl,BYTE PTR [ecx-0x7]
  43c723:	stos   DWORD PTR es:[edi],eax
  43c724:	or     bh,BYTE PTR [ebx-0x7]
  43c727:	add    cl,BYTE PTR [ecx]
  43c729:	sub    al,0xf8
  43c72b:	out    0x23,al
  43c72d:	jp     0x43c6e7
  43c72f:	or     al,BYTE PTR [ebx]
  43c731:	add    BYTE PTR [ebp-0x27eb63fe],bl
  43c737:	icebp  
  43c738:	sahf   
  43c739:	adc    ecx,DWORD PTR [ecx-0xe]
  43c73c:	mov    ebp,0x5bf42915
  43c741:	adc    ah,BYTE PTR [eax]
  43c743:	icebp  
  43c744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c745:	adc    BYTE PTR [ecx],bh
  43c747:	lock mov ds:0xbbfae80b,eax
  43c74d:	or     edx,DWORD PTR [eax]
  43c74f:	sti    
  43c750:	jl     0x43c75e
  43c752:	add    edi,ebx
  43c754:	and    ecx,DWORD PTR [eax*4-0x44f57907]
  43c75b:	stc    
  43c75c:	or     BYTE PTR [edx],0x8e
  43c75f:	stc    
  43c760:	lea    ecx,[edx]
  43c762:	xchg   esp,eax
  43c763:	stc    
  43c764:	push   0xb
  43c766:	and    bh,dl
  43c768:	push   0xfffa100b
  43c76d:	push   eax
  43c76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c76f:	fwait
  43c770:	ss dec ebx
  43c772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c773:	popa   
  43c774:	ss xchg ebp,eax
  43c776:	xchg   edi,eax
  43c777:	addr16 ss xchg edi,eax
  43c77a:	xchg   edi,eax
  43c77b:	ins    DWORD PTR es:[edi],dx
  43c77c:	ss test eax,0xa336c3a7
  43c782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c783:	leave  
  43c784:	ss popf 
  43c786:	xchg   edi,eax
  43c787:	iret   
  43c788:	ss lahf 
  43c78a:	xchg   edi,eax
  43c78b:	aad    0x36
  43c78d:	shl    DWORD PTR [edi-0x5844c955],0xb1
  43c794:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43c796:	add    BYTE PTR [edi-0x6f18c949],dl
  43c79c:	std    
  43c79d:	xor    eax,0x3613a8f9
  43c7a2:	repz mov al,ds:0x98cd3619
  43c7a8:	fbstp  TBYTE PTR ds:0x35e590cf
  43c7ae:	mov    cl,0xa8
  43c7b0:	sti    
  43c7b1:	xor    eax,0x3641a32b
  43c7b6:	mov    ch,0x98
  43c7b8:	inc    edi
  43c7b9:	ss mov bh,0x90
  43c7bc:	dec    ebp
  43c7bd:	ss leave 
  43c7bf:	test   al,0x23
  43c7c1:	ss ret 
  43c7c3:	mov    al,ds:0x98bd3629
  43c7c8:	das    
  43c7c9:	ss mov edi,0x61363590
  43c7cf:	test   al,0x8b
  43c7d1:	xor    eax,0x3591a05b
  43c7d6:	test   DWORD PTR [eax-0x6fb8ca69],ebx
  43c7dc:	pop    ebp
  43c7dd:	xor    eax,0x3573a859
  43c7e2:	push   ebx
  43c7e3:	mov    al,ds:0xb8003579
  43c7e8:	add    eax,0x5b23ac1
  43c7ed:	retf   
  43c7ee:	cmp    cl,BYTE PTR [ebp+eax*1+0x5a63ad5]
  43c7f5:	fistp  QWORD PTR [edx]
  43c7f7:	ror    BYTE PTR [ebx],1
  43c7f9:	jmp    0xc0dc838
  43c7fe:	repz cmp al,ah
  43c801:	or     edi,ebp
  43c803:	cmp    bh,BYTE PTR [esi-0x17c4f8f5]
  43c809:	or     edx,DWORD PTR [ecx]
  43c80b:	cmp    esp,edx
  43c80d:	or     ebx,DWORD PTR [ebx]
  43c80f:	cmp    ebx,DWORD PTR [ebx+ecx*1+0xbb63b25]
  43c816:	das    
  43c817:	cmp    eax,eax
  43c819:	or     edi,DWORD PTR [ecx]
  43c81b:	cmp    edi,DWORD PTR [edx+0xb]
  43c81e:	inc    ebx
  43c81f:	cmp    edx,esp
  43c821:	or     DWORD PTR [ebp+0x3b],ecx
  43c824:	into   
  43c825:	or     DWORD PTR [edi+0x3b],edx
  43c828:	cwde   
  43c829:	or     DWORD PTR [ecx+0x3b],esp
  43c82c:	xchg   edx,eax
  43c82d:	or     DWORD PTR [ebx+0x3b],ebp
  43c830:	ins    BYTE PTR es:[edi],dx
  43c831:	or     DWORD PTR [ebp+0x3b],esi
  43c834:	push   es
  43c835:	or     bh,BYTE PTR [edi+0x3b]
  43c838:	lock or DWORD PTR [ecx-0x6cf615c5],ecx
  43c83f:	cmp    esp,DWORD PTR [edx+ecx*1]
  43c842:	popf   
  43c843:	cmp    edx,eax
  43c845:	or     DWORD PTR [ecx-0x3bf5dcc5],ebp
  43c84b:	cmp    esi,DWORD PTR [eax+0x9]
  43c84e:	retf   0x8d3b
  43c851:	or     edi,edx
  43c853:	cmp    ebx,edx
  43c855:	or     esp,ebp
  43c857:	cmp    eax,DWORD PTR [edi+0x363bf109]
  43c85d:	(bad)  
  43c85e:	(bad)  
  43c85f:	cmp    eax,DWORD PTR [eax]
  43c861:	popf   
  43c862:	mov    bl,0x0
  43c864:	and    cl,dl
  43c866:	mov    ebp,0x79c92c00
  43c86b:	add    BYTE PTR [edi+0x590844c1],dl
  43c871:	mov    ebx,0xb3a50285
  43c876:	test   eax,0xf1aa4001
  43c87b:	add    BYTE PTR [ebx-0x5e],ah
  43c87e:	sub    eax,0x859a9a02
  43c883:	add    DWORD PTR [edx-0x45fe726e],ebp
  43c889:	mov    ah,BYTE PTR [ebp+0x1]
  43c88c:	add    BYTE PTR [ebp-0x4500f355],bl
  43c892:	(bad)  
  43c893:	cld    
  43c894:	call   FWORD PTR [ebp+0x6d55140e]
  43c89a:	clc    
  43c89b:	adc    dl,BYTE PTR [edi+0x6c]
  43c89e:	add    eax,0xeecf1413
  43c8a3:	or     eax,0xe0fcf5d
  43c8a8:	test   bh,cl
  43c8aa:	and    ecx,DWORD PTR [edi]
  43c8ac:	call   0xebaf:0xe70f51cf
  43c8b3:	or     al,0x41
  43c8b5:	scas   al,BYTE PTR es:[edi]
  43c8b6:	inc    edi
  43c8b7:	push   cs
  43c8b8:	popa   
  43c8b9:	mov    cl,0x30
  43c8bb:	or     DWORD PTR [edi-0x53f4c957],ecx
  43c8c1:	xchg   ebx,eax
  43c8c2:	cdq    
  43c8c3:	or     bh,BYTE PTR [eax+0xaea8b00]
  43c8c9:	enter  0xed93,0xa
  43c8cd:	loopne 0x43c85a
  43c8cf:	aas    
  43c8d0:	or     esp,esi
  43c8d2:	jae    0x43c8cd
  43c8d4:	or     bh,BYTE PTR [eax]
  43c8d6:	push   0xffffffa5
  43c8d8:	or     DWORD PTR [ecx+0x72],eax
  43c8db:	add    dh,BYTE PTR [ecx-0x7f1236f2]
  43c8e1:	push   cs
  43c8e2:	sub    ebp,0xffffff96
  43c8e5:	push   cs
  43c8e6:	xchg   ebp,eax
  43c8e7:	in     eax,dx
  43c8e8:	push   0x3ed3b0e
  43c8ed:	push   cs
  43c8ee:	(bad)  
  43c8f1:	or     eax,DWORD PTR [edx+0x90b72fa]
  43c8f7:	cli    
  43c8f8:	dec    ebx
  43c8f9:	or     esi,DWORD PTR [edx+edi*8]
  43c8fc:	les    ecx,FWORD PTR [esi+edi*2]
  43c8ff:	sti    
  43c900:	pop    esi
  43c901:	or     esi,DWORD PTR [eax]
  43c903:	sti    
  43c904:	or     BYTE PTR [ebx],0xdc
  43c907:	cli    
  43c908:	icebp  
  43c909:	or     DWORD PTR [edx+0x4e0a03f8],ebp
  43c90f:	clc    
  43c910:	stos   BYTE PTR es:[edi],al
  43c911:	or     bl,dl
  43c913:	test   ecx,0x38f7b60a
  43c919:	or     ecx,ebp
  43c91b:	clc    
  43c91c:	mov    dl,0x9
  43c91e:	fwait
  43c91f:	div    bh
  43c921:	pop    es
  43c922:	mov    dl,0xf6
  43c924:	mov    esp,0x15f6d907
  43c929:	or     BYTE PTR [eax],al
  43c92b:	pop    ebp
  43c92c:	test   DWORD PTR [ebx+0x2bf5a908],0x41f62707
  43c936:	pop    es
  43c937:	fs neg al
  43c93a:	add    eax,0x691f4f7
  43c93f:	dec    ecx
  43c940:	cmc    
  43c941:	dec    edi
  43c942:	push   es
  43c943:	dec    ebx
  43c944:	cmc    
  43c945:	dec    edi
  43c946:	push   es
  43c947:	push   esp
  43c948:	cmc    
  43c949:	test   DWORD PTR [esi+ebp*4],0xa304ddf3
  43c950:	repz test DWORD PTR [edi+ecx*8],0x99bbfff3
  43c958:	cmp    DWORD PTR ss:[edx-0x60],ebp
  43c95c:	jnp    0x43c996
  43c95e:	sbb    DWORD PTR [eax-0x5fbac768],0x66
  43c965:	cmp    BYTE PTR [edi-0x68],dl
  43c968:	sar    BYTE PTR [eax],cl
  43c96a:	adc    DWORD PTR [eax+0x5ee90002],esp
  43c970:	mov    bl,0xf8
  43c972:	mov    eax,gs:0x8eb70002
  43c978:	jge    0x43c9a9
  43c97a:	cmp    dl,BYTE PTR [ecx-0x714bd042]
  43c980:	into   
  43c981:	das    
  43c982:	ret    
  43c983:	scas   al,BYTE PTR es:[edi]
  43c984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c985:	das    
  43c986:	fldcw  WORD PTR [esi-0x5130d050]
  43c98c:	adc    ebp,DWORD PTR [edi]
  43c98e:	adc    eax,DWORD PTR [eax]
  43c990:	scas   al,BYTE PTR es:[edi]
  43c991:	in     eax,0x2e
  43c993:	sbb    eax,0x272eda8e
  43c998:	(bad)  
  43c999:	and    ebp,DWORD PTR [esi]
  43c99b:	push   edi
  43c99c:	mov    ecx,ds
  43c99e:	sub    eax,0x2cf18c94
  43c9a3:	adc    DWORD PTR [ecx+edi*1+0x2bad672d],ebp
  43c9aa:	xor    edi,DWORD PTR [ecx-0x77cd2e65]
  43c9b0:	xchg   ebx,eax
  43c9b1:	in     al,dx
  43c9b2:	xor    DWORD PTR [ecx],edx
  43c9b4:	stos   DWORD PTR es:[edi],eax
  43c9b5:	and    esi,DWORD PTR [edx]
  43c9b7:	icebp  
  43c9b8:	mov    al,ds:0x98593238
  43c9bd:	xchg   ecx,eax
  43c9be:	xor    DWORD PTR [esi-0x6dcea170],eax
  43c9c4:	test   al,0x63
  43c9c6:	xor    DWORD PTR [ecx],ebp
  43c9c8:	mov    al,ds:0x985131c4
  43c9cd:	mov    ah,0x31
  43c9cf:	add    BYTE PTR [ebp+0x6],cl
  43c9d2:	pop    es
  43c9d3:	aaa    
  43c9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9d5:	add    eax,0x6343728
  43c9da:	ins    DWORD PTR es:[edi],dx
  43c9db:	aaa    
  43c9dc:	rol    BYTE PTR [esi],1
  43c9de:	ret    0x6137
  43c9e1:	push   es
  43c9e2:	cmp    DWORD PTR [eax],edi
  43c9e4:	xchg   esi,eax
  43c9e5:	pop    es
  43c9e6:	idiv   BYTE PTR [eax]
  43c9e8:	stc    
  43c9e9:	pop    es
  43c9ea:	fwait
  43c9eb:	cmp    bl,BYTE PTR [ecx+ecx*1-0x448c3b0]
  43c9f2:	push   0xef04003f
  43c9f7:	clc    
  43c9f8:	call   FWORD PTR [eax-0x1]
  43c9fb:	(bad)  
  43c9fc:	inc    DWORD PTR [ebx+0xf]
  43c9ff:	ins    DWORD PTR es:[edi],dx
  43ca00:	xor    BYTE PTR [ecx],dl
  43ca02:	scas   al,BYTE PTR es:[edi]
  43ca03:	out    dx,al
  43ca04:	xor    ch,dl
  43ca06:	lods   eax,DWORD PTR ds:[esi]
  43ca07:	push   ebp
  43ca08:	xor    DWORD PTR [esi-0x53],esi
  43ca0b:	xor    DWORD PTR [ecx],0x31c7ad21
  43ca11:	add    ebp,DWORD PTR [ebp-0x534ecddc]
  43ca17:	cmp    dh,BYTE PTR [edx]
  43ca19:	jge    0x43c9c7
  43ca1b:	dec    esi
  43ca1c:	xor    dh,BYTE PTR [ebx-0x54]
  43ca1f:	jp     0x43ca53
  43ca21:	inc    esp
  43ca22:	lods   al,BYTE PTR ds:[esi]
  43ca23:	int    0x32
  43ca25:	sub    eax,0x2f32e8b9
  43ca2a:	mov    ecx,0xb95f3301
  43ca2f:	cmp    al,0x33
  43ca31:	cmp    BYTE PTR [ecx-0x4646cc67],0xee
  43ca38:	xor    edi,DWORD PTR [edi-0x2dcb8c56]
  43ca3e:	stos   BYTE PTR es:[edi],al
  43ca3f:	mov    ch,0x34
  43ca41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ca42:	stos   BYTE PTR es:[edi],al
  43ca43:	fnsave [ebx+ebp*2]
  43ca46:	stos   DWORD PTR es:[edi],eax
  43ca47:	ins    DWORD PTR es:[edi],dx
  43ca48:	xor    eax,0x89f71e9d
  43ca4d:	nop
  43ca4e:	jp     0x43ca46
  43ca50:	mov    al,ds:0xf1f73a88
  43ca55:	jo     0x43ca23
  43ca57:	mul    BYTE PTR [eax+0x0]
  43ca5a:	imul   ebx,DWORD PTR [esi],0xfffffff6
  43ca5d:	shl    DWORD PTR [ebx+0x0],1
  43ca60:	idiv   dl
  43ca62:	imul   edi,DWORD PTR [esi+0x29d265f5],0xfffffff5
  43ca69:	ror    dl,cl
  43ca6b:	or     dh,ch
  43ca6d:	cmp    eax,esp
  43ca6f:	(bad)  
  43ca70:	sti    
  43ca71:	jl     0x43ca37
  43ca73:	aas    
  43ca74:	sti    
  43ca75:	mov    bh,0xb4
  43ca77:	fdivp  st(2),st
  43ca79:	fidiv  DWORD PTR [esi+ebp*2+0x3ba766fa]
  43ca80:	cli    
  43ca81:	stos   DWORD PTR es:[edi],eax
  43ca82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ca83:	nop
  43ca84:	cli    
  43ca85:	into   
  43ca86:	xchg   edi,eax
  43ca87:	mov    ebx,0x4d9606fa
  43ca8c:	stc    
  43ca8d:	stos   DWORD PTR es:[edi],eax
  43ca8e:	xchg   BYTE PTR [ebp-0x7],ch
  43ca91:	or     eax,DWORD PTR [ecx+0x79aafff1]
  43ca97:	int3   
  43ca98:	push   DWORD PTR [eax]
  43ca9a:	jo     0x43cb18
  43ca9c:	push   DWORD PTR [esi+0x6b]
  43ca9f:	pop    ecx
  43caa0:	dec    ebp
  43caa2:	bound  ebx,QWORD PTR [ebx-0x386500e4]
  43caa8:	cld    
  43caa9:	call   FWORD PTR [ebp-0x3274133a]
  43caaf:	sbb    ebx,esi
  43cab1:	jp     0x43ca7f
  43cab3:	es hlt 
  43cab5:	adc    al,0xaf
  43cab7:	outs   dx,BYTE PTR ds:[esi]
  43cab8:	icebp  
  43cab9:	cwde   
  43caba:	scas   al,BYTE PTR es:[edi]
  43cabb:	gs lock and al,0x0
  43cabf:	mov    al,0xd1
  43cac1:	idiv   BYTE PTR [eax-0x56]
  43cac4:	add    dh,ch
  43cac6:	sti    
  43cac7:	adc    ch,ah
  43cac9:	out    0x33,al
  43cacb:	push   edx
  43cacc:	mov    cl,0xa
  43cace:	add    al,0x9d
  43cad0:	add    bl,dh
  43cad2:	hlt    
  43cad3:	nop
  43cad4:	repz icebp 
  43cad6:	cmc    
  43cad7:	mov    esp,?
  43cad9:	scas   eax,DWORD PTR es:[edi]
  43cada:	mul    dl
  43cadc:	cmc    
  43cadd:	inc    esi
  43cade:	clc    
  43cadf:	cmp    eax,0xcdfb96f7
  43cae4:	jmp    0x240:0xeea1fb72
  43caeb:	popf   
  43caec:	add    ah,bh
  43caee:	or     DWORD PTR [ebx],0xffffffb1
  43caf1:	mov    esi,0xe8029d04
  43caf6:	repz adc eax,0xf2f327f2
  43cafc:	icebp  
  43cafd:	mov    bl,0xf4
  43caff:	fs repz and ah,dh
  43cb03:	cwde   
  43cb04:	hlt    
  43cb05:	xor    esi,esi
  43cb07:	sub    dh,ah
  43cb09:	(bad)  
  43cb0a:	hlt    
  43cb0b:	add    al,0xf5
  43cb0d:	pop    ebp
  43cb0e:	clc    
  43cb0f:	div    ch
  43cb11:	scas   al,BYTE PTR es:[edi]
  43cb12:	clc    
  43cb13:	jae    0x43cb0c
  43cb15:	xor    eax,0x89f721f7
  43cb1a:	mul    DWORD PTR [ebx+0x75fcfdec]
  43cb20:	in     eax,dx
  43cb21:	cmc    
  43cb22:	cld    
  43cb23:	add    BYTE PTR [ebp-0x13],ch
  43cb26:	(bad)  
  43cb28:	aad    0xeb
  43cb2a:	and    eax,0x1debddfd
  43cb2f:	std    
  43cb30:	aad    0xeb
  43cb32:	xor    eax,0x1debedfd
  43cb37:	std    
  43cb38:	aad    0xeb
  43cb3a:	add    eax,0xffebfdfd
  43cb3f:	add    DWORD PTR [eax+0x1b],ebp
  43cb42:	xor    eax,0x353361fa
  43cb47:	loop   0x43cba2
  43cb49:	sub    esi,DWORD PTR ds:0x3483506a
  43cb4f:	bound  ecx,QWORD PTR [eax+0x7b]
  43cb52:	xor    al,0x7a
  43cb54:	inc    eax
  43cb55:	xchg   ebx,eax
  43cb56:	xor    al,0x62
  43cb58:	cmp    BYTE PTR [ebx+0x63308a34],cl
  43cb5e:	xor    al,0x82
  43cb60:	sub    BYTE PTR [ebx+0x34],bl
  43cb63:	jp     0x43cb85
  43cb65:	jae    0x43cb9b
  43cb67:	bound  ebx,QWORD PTR [eax]
  43cb69:	imul   esi,DWORD PTR [edx+ebp*1],0x10
  43cb6d:	ret    
  43cb6e:	xor    al,0x22
  43cb70:	or     BYTE PTR [ebx-0x2cffc5cc],bh
  43cb76:	xor    al,0x22
  43cb78:	clc    
  43cb79:	retf   0xa34
  43cb7c:	lock mov ds:0x9ae80234,al
  43cb82:	xor    al,0xfa
  43cb84:	loope  0x43cb38
  43cb86:	xor    al,0xe2
  43cb88:	add    cl,bl
  43cb8a:	stos   BYTE PTR es:[edi],al
  43cb8b:	xor    al,0xea
  43cb8d:	rol    BYTE PTR [edx],cl
  43cb8f:	cmp    al,0xe2
  43cb91:	retf   0x3bfa
  43cb94:	cli    
  43cb95:	ret    0x3c12
  43cb98:	loop   0x43cb54
  43cb9a:	or     bh,BYTE PTR [edx+ecx*1]
  43cb9d:	popf   
  43cb9e:	loope  0x43cbdb
  43cba0:	add    bl,BYTE PTR [ebp-0x5d05c427]
  43cba6:	repnz cmp esp,edx
  43cba9:	call   0x3c41:0x9d2a3bea
  43cbb0:	and    bl,BYTE PTR [ebp-0x7d5dc3c7]
  43cbb6:	mov    edx,0xaf17003b
  43cbbb:	iret   
  43cbbc:	cmp    al,0x3f
  43cbbe:	scas   eax,DWORD PTR es:[edi]
  43cbbf:	xlat   BYTE PTR ds:[ebx]
  43cbc0:	cmp    al,0x17
  43cbc2:	scas   eax,DWORD PTR es:[edi]
  43cbc3:	fistp  QWORD PTR [edi+ebx*1]
  43cbc6:	scas   eax,DWORD PTR es:[edi]
  43cbc7:	out    0x3c,eax
  43cbc9:	imul   DWORD PTR [edi-0x5040c311]
  43cbcf:	idiv   DWORD PTR [edi+esi*1]
  43cbd2:	mov    al,0xff
  43cbd4:	cmp    al,0x3f
  43cbd6:	mov    al,0x7
  43cbd8:	cmp    eax,0x3d0fb057
  43cbdd:	aas    
  43cbde:	mov    al,0x17
  43cbe0:	cmp    eax,0x3d1faf97
  43cbe5:	lahf   
  43cbe6:	scas   eax,DWORD PTR es:[edi]
  43cbe7:	daa    
  43cbe8:	cmp    eax,0x3d2faff7
  43cbed:	add    bh,bh
  43cbef:	scas   eax,DWORD PTR es:[edi]
  43cbf0:	aaa    
  43cbf1:	cmp    eax,0x3d3fb037
  43cbf6:	aas    
  43cbf7:	mov    al,0x47
  43cbf9:	cmp    eax,0x3d4fb017
  43cbfe:	aas    
  43cbff:	mov    al,0x57
  43cc01:	cmp    eax,0x3d5fb017
  43cc06:	pop    ds
  43cc07:	mov    al,0x67
  43cc09:	cmp    eax,0x3d6f0177
  43cc0e:	aas    
  43cc0f:	add    DWORD PTR [edi+0x3d],esi
  43cc12:	aaa    
  43cc13:	add    DWORD PTR [edi+0x3d],edi
  43cc16:	shr    BYTE PTR [eax+esi*8-0x66d3bc1],0xff
  43cc1e:	je     0x43cc26
  43cc20:	add    BYTE PTR [eax],al
  43cc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cc23:	mov    dh,0x93
  43cc25:	xor    al,0x29
  43cc27:	stos   BYTE PTR es:[edi],al
  43cc28:	sti    
  43cc29:	xor    al,0xb7
  43cc2b:	stos   DWORD PTR es:[edi],eax
  43cc2c:	cdq    
  43cc2d:	xor    eax,0x36e5ac46
  43cc32:	popf   
  43cc33:	shl    ecx,1
  43cc35:	fcmovne st,st(2)
  43cc37:	cdq    
  43cc38:	hlt    
  43cc39:	sbb    al,0xb5
  43cc3b:	aad    0xf4
  43cc3d:	dec    esp
  43cc3e:	mov    ch,0x1a
  43cc40:	cld    
  43cc41:	mov    esp,DWORD PTR [ebp-0x58ff04bf]
  43cc47:	fs cmc 
  43cc49:	loope  0x43cbe2
  43cc4b:	cld    
  43cc4c:	hlt    
  43cc4d:	ss xchg esi,eax
  43cc4f:	shl    ch,cl
  43cc51:	lods   al,BYTE PTR ds:[esi]
  43cc52:	add    BYTE PTR [esi-0x7e1807a1],al
  43cc58:	jp     0x43cc58
  43cc5a:	hlt    
  43cc5b:	js     0x43cc59
  43cc5d:	stc    
  43cc5e:	cmp    esi,DWORD PTR [ebx-0x6b]
  43cc61:	cli    
  43cc62:	outs   dx,BYTE PTR ds:[esi]
  43cc63:	imul   ebx,DWORD PTR [edx+edi*8],0xffffff8d
  43cc67:	arpl   WORD PTR [ebx],bp
  43cc69:	cli    
  43cc6a:	mov    al,0xdb
  43cc6c:	repnz stc 
  43cc6e:	jmp    0xb0ca:0xbf999d3
  43cc75:	stc    
  43cc76:	aaa    
  43cc77:	ret    0xf964
  43cc7a:	pop    ecx
  43cc7b:	mov    edx,0xb2a7f94a
  43cc80:	or     cl,bh
  43cc82:	loope  0x43cc2e
  43cc84:	pop    es
  43cc85:	stc    
  43cc86:	repnz mov ds:0xdafff99f,al
  43cc8c:	fwait
  43cc8d:	pop    esp
  43cc8e:	(bad)  
  43cc8f:	ror    BYTE PTR [ebx+0x129dfffc],cl
  43cc95:	hlt    
  43cc96:	lea    ecx,gs:[edi-0x13]
  43cc9a:	mov    dl,0x6d
  43cc9c:	jo     0x43cc8a
  43cc9e:	pop    es
  43cc9f:	ins    BYTE PTR es:[edi],dx
  43cca0:	retf   0x23f3
  43cca3:	ins    BYTE PTR es:[edi],dx
  43cca4:	add    dh,bl
  43cca6:	cs ins BYTE PTR es:[edi],dx
  43cca8:	div    edx
  43ccaa:	scas   al,BYTE PTR es:[edi]
  43ccab:	int3   
  43ccac:	add    ah,BYTE PTR [ecx-0xc]
  43ccaf:	jne    0x43cca4
  43ccb1:	xchg   ebp,eax
  43ccb2:	hlt    
  43ccb3:	mov    ebp,0xf1d4f0
  43ccb8:	jmp    0x96f0:0x45f203f0
  43ccbf:	icebp  
  43ccc0:	push   eax
  43ccc1:	lock (bad) 
  43ccc3:	repnz loopne 0x43ccb7
  43ccc6:	push   ss
  43ccc7:	repz std 
  43ccc9:	icebp  
  43ccca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cccb:	repnz aas 
  43cccd:	icebp  
  43ccce:	in     al,0xf7
  43ccd0:	mov    esi,esi
  43ccd2:	xchg   esi,eax
  43ccd3:	not    DWORD PTR [ebx+0x7af8c9f7]
  43ccd9:	hlt    
  43ccda:	adc    dh,dh
  43ccdc:	out    0xf4,eax
  43ccde:	retf   
  43ccdf:	cmc    
  43cce0:	and    eax,0xfef558f4
  43cce5:	repz je 0x43ccdd
  43cce8:	push   edx
  43cce9:	cmc    
  43ccea:	sar    bl,1
  43ccec:	mov    eax,0x70fbb5ea
  43ccf1:	jmp    0xfcb5:0xe9f4fb8b
  43ccf8:	sub    bl,0x9a
  43ccfb:	stc    
  43ccfc:	mov    ch,al
  43ccfe:	pusha  
  43ccff:	stc    
  43cd00:	fucom  st(7)
  43cd02:	push   ss
  43cd03:	stc    
  43cd04:	stc    
  43cd05:	out    0xea,eax
  43cd07:	cli    
  43cd08:	cwde   
  43cd09:	jmp    0xe94ec7d3
  43cd0e:	sahf   
  43cd0f:	stc    
  43cd10:	adc    al,0xe9
  43cd12:	mov    ds:0xbae8d6f9,al
  43cd17:	stc    
  43cd18:	out    0xe8,al
  43cd1a:	ret    0xf9
  43cd1d:	(bad)  
  43cd1e:	call   0xeee1c6e1
  43cd23:	(bad)  
  43cd24:	dec    DWORD PTR [eax-0x62fe0012]
  43cd2a:	jmp    0x4ae0f46a
  43cd2f:	cmp    al,0x46
  43cd31:	popf   
  43cd32:	pop    ds
  43cd33:	cmp    al,0xc
  43cd35:	popf   
  43cd36:	das    
  43cd37:	cmp    al,0x14
  43cd39:	popf   
  43cd3a:	jp     0x43cd77
  43cd3c:	xchg   esi,eax
  43cd3d:	jp     0x43cceb
  43cd3f:	clc    
  43cd40:	jmp    0x523c7a33
  43cd45:	mov    eax,ds:0x6ee30002
  43cd4a:	adc    esi,DWORD PTR [eax]
  43cd4c:	dec    eax
  43cd4d:	push   ecx
  43cd4e:	push   0x2f
  43cd50:	xor    cl,BYTE PTR [ecx-0x37]
  43cd53:	das    
  43cd54:	inc    ebp
  43cd55:	push   ecx
  43cd56:	popf   
  43cd57:	das    
  43cd58:	jmp    0xd82e:0x42f104f
  43cd5f:	cs stos DWORD PTR es:[edi],eax
  43cd61:	das    
  43cd62:	sub    eax,0x762e662f
  43cd67:	sub    DWORD PTR cs:[esi],ebp
  43cd6a:	pop    es
  43cd6b:	cs jg  0x43cd7d
  43cd6e:	leave  
  43cd6f:	sub    eax,0x337b0d9c
  43cd74:	push   ss
  43cd75:	add    eax,0xbc632fb
  43cd7a:	out    0x31,al
  43cd7c:	(bad)  
  43cd7d:	lock adc BYTE PTR [ecx],dh
  43cd80:	sahf   
  43cd81:	add    cl,ch
  43cd83:	inc    edi
  43cd84:	xor    DWORD PTR [ebp-0xf],edi
  43cd87:	in     al,dx
  43cd88:	aaa    
  43cd89:	mov    eax,ds:0x663852e6
  43cd8e:	fldcw  WORD PTR [ecx+0x37]
  43cd91:	add    edi,edx
  43cd93:	sbb    eax,0x2cc76136
  43cd98:	outs   dx,BYTE PTR ss:[esi]
  43cd9a:	les    ecx,FWORD PTR [edi+0x5cb48b35]
  43cda0:	xor    eax,0xcea9ef00
  43cda5:	cmp    dl,bh
  43cda7:	test   eax,0xaab93aec
  43cdac:	adc    eax,0x6ea9bc3b
  43cdb1:	cmp    edi,DWORD PTR [eax+0xf3b7ca9]
  43cdb7:	stos   DWORD PTR es:[edi],eax
  43cdb8:	fwait
  43cdb9:	cmp    esp,eax
  43cdbb:	stos   BYTE PTR es:[edi],al
  43cdbc:	lds    edi,FWORD PTR [ebx]
  43cdbe:	dec    ecx
  43cdbf:	stos   BYTE PTR es:[edi],al
  43cdc0:	fistp  QWORD PTR [ebx]
  43cdc2:	sub    BYTE PTR [ebx+0x2ac3c39],0x64
  43cdc9:	cmp    al,0xaa
  43cdcb:	stos   DWORD PTR es:[edi],eax
  43cdcc:	lds    edi,FWORD PTR [esp+edi*1]
  43cdcf:	lods   al,BYTE PTR ds:[esi]
  43cdd0:	or     al,0x3d
  43cdd2:	shr    BYTE PTR [ecx+eiz*4+0x69adfb3d],cl
  43cdd9:	aas    
  43cdda:	arpl   WORD PTR [esi-0x5178c06c],bp
  43cde0:	sar    DWORD PTR [edi],0x92
  43cde3:	scas   al,BYTE PTR es:[edi]
  43cde4:	fstp   TBYTE PTR [edi]
  43cde6:	add    ch,cl
  43cde8:	scas   al,BYTE PTR es:[edi]
  43cde9:	clc    
  43cdea:	push   DWORD PTR [edi+edi*4]
  43cded:	stc    
  43cdee:	call   DWORD PTR [eax-0x1]
  43cdf1:	(bad)  
  43cdf2:	dec    DWORD PTR [ebp-0x5bce1e51]
  43cdf8:	mov    al,0xf2
  43cdfa:	xor    DWORD PTR [edi],eax
  43cdfc:	mov    dl,0x1e
  43cdfe:	xor    esp,DWORD PTR [esi-0x4d]
  43ce01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ce02:	xor    al,0xa6
  43ce04:	mov    bl,0xe2
  43ce06:	xor    al,0x3
  43ce08:	mov    ah,0x28
  43ce0a:	xor    eax,0x3591b46b
  43ce0f:	addr16 mov ah,0xd1
  43ce12:	xor    eax,0x3680b08c
  43ce17:	cli    
  43ce18:	scas   eax,DWORD PTR es:[edi]
  43ce19:	sbb    esi,DWORD PTR [edi]
  43ce1b:	popf   
  43ce1c:	push   es
  43ce1d:	in     eax,dx
  43ce1e:	xor    eax,0x4eece372
  43ce23:	push   0x3e
  43ce25:	in     eax,dx
  43ce26:	mov    edi,0xfdec7672
  43ce2b:	push   0xffffffd1
  43ce2d:	hlt    
  43ce2e:	sbb    ah,dl
  43ce30:	inc    eax
  43ce31:	sti    
  43ce32:	mov    bh,0xd4
  43ce34:	cmp    al,0xfa
  43ce36:	loopne 0x43cdff
  43ce38:	cmp    ecx,edi
  43ce3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ce3b:	shr    DWORD PTR [edi+esi*8-0x15],0xb9
  43ce40:	pushf  
  43ce41:	mul    DWORD PTR [ecx-0x3a09a250]
  43ce47:	test   al,0xac
  43ce49:	imul   BYTE PTR [ebp-0x9d25d00]
  43ce4f:	add    ebx,DWORD PTR [edx-0x6dde0a4a]
  43ce55:	or     esi,ebp
  43ce57:	inc    ecx
  43ce58:	mov    al,dl
  43ce5a:	cmc    
  43ce5b:	push   0xd9f5c682
  43ce60:	jp     0x43cdfd
  43ce62:	int3   
  43ce63:	(bad)  
  43ce64:	xor    al,ah
  43ce66:	cld    
  43ce67:	call   FWORD PTR [ebp+0x6d23eccc]
  43ce6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ce6e:	in     al,dx
  43ce6f:	xor    eax,0x65ec91cd
  43ce74:	int    0x88
  43ce76:	in     al,dx
  43ce77:	lahf   
  43ce78:	int    0x25
  43ce7a:	hlt    
  43ce7b:	dec    edi
  43ce7c:	int3   
  43ce7d:	(bad)  
  43ce7e:	repz scas eax,DWORD PTR es:[edi]
  43ce80:	lods   al,BYTE PTR ds:[esi]
  43ce81:	(bad)  
  43ce83:	dec    eax
  43ce84:	test   eax,0xb1ccf018
  43ce89:	mov    ch,0xef
  43ce8b:	sub    DWORD PTR [eax-0x6cb61128],0x2b
  43ce92:	out    dx,eax
  43ce93:	scas   eax,DWORD PTR es:[edi]
  43ce94:	mov    eax,DWORD PTR [edx]
  43ce96:	(bad)  
  43ce97:	icebp  
  43ce98:	xchg   edi,eax
  43ce99:	icebp  
  43ce9a:	sub    al,0xf3
  43ce9c:	dec    edx
  43ce9d:	icebp  
  43ce9e:	out    0xfb,al
  43cea0:	stos   BYTE PTR es:[edi],al
  43cea1:	jmp    0xfce0:0xeacbfc31
  43cea8:	imul   ebp,ebx,0xeb20fd41
  43ceae:	jae    0x43ceac
  43ceb0:	add    BYTE PTR [eax-0x15],dh
  43ceb3:	mov    esi,0x3beca9fc
  43ceb8:	(bad)  
  43ceb9:	and    eax,0xeffe62ec
  43cebe:	out    0xe6,al
  43cec0:	clc    
  43cec1:	mov    ebp,0x2bf875e7
  43cec6:	out    0xf1,eax
  43cec8:	stc    
  43cec9:	mov    edx,0x4efa02e8
  43cece:	call   0xe9d1c842
  43ced3:	push   ecx
  43ced4:	cli    
  43ced5:	adc    cl,ch
  43ced7:	aaa    
  43ced8:	cli    
  43ced9:	dec    edx
  43ceda:	test   eax,0xa943a3e6
  43cedf:	add    ebx,DWORD PTR es:[ebp-0x20bebfe]
  43cee6:	icebp  
  43cee7:	inc    ebp
  43cee8:	repz test eax,0xb9f59df3
  43ceee:	hlt    
  43ceef:	or     eax,0x6f5b1f5
  43cef4:	idiv   DWORD PTR [ebp+esi*8-0xa9b095c]
  43cefb:	jle    0x43cef3
  43cefd:	out    dx,al
  43cefe:	hlt    
  43ceff:	fsubp  st(7),st
  43cf01:	nop
  43cf02:	out    dx,al
  43cf03:	mov    esp,0xa4eea8ef
  43cf08:	out    dx,eax
  43cf09:	sub    dh,0x66
  43cf0c:	out    dx,eax
  43cf0d:	sbb    ebp,esi
  43cf0f:	dec    DWORD PTR [esi-0x36]
  43cf12:	ins    DWORD PTR es:[edi],dx
  43cf13:	xor    ebx,DWORD PTR [eax+eax*1]
  43cf16:	ret    0x339d
  43cf19:	fcmovne st,st(5)
  43cf1b:	mov    al,0x33
  43cf1d:	jmp    0xf676d1d5
  43cf22:	retf   
  43cf23:	loope  0x43cf57
  43cf25:	adc    eax,edx
  43cf27:	out    0x32,eax
  43cf29:	dec    ebp
  43cf2a:	mov    edx,0xaf1231ff
  43cf2f:	mov    al,0x31
  43cf31:	xor    al,0x99
  43cf33:	xchg   DWORD PTR [edi],esi
  43cf35:	les    edx,FWORD PTR [ecx-0x79cbc901]
  43cf3b:	jl     0x43cf73
  43cf3d:	jge    0x43cec5
  43cf3f:	xchg   BYTE PTR [esi],dh
  43cf41:	mov    ecx,0xf1369a76
  43cf46:	jo     0x43cf37
  43cf48:	xor    eax,0x36256b2b
  43cf4d:	pop    ecx
  43cf4e:	arpl   WORD PTR [edx+0x35],sp
  43cf51:	lods   eax,DWORD PTR ds:[esi]
  43cf52:	pop    ebx
  43cf53:	aad    0x35
  43cf55:	jb     0x43cfaa
  43cf57:	pop    es
  43cf58:	xor    eax,0x34d349e2
  43cf5d:	cmp    al,0x40
  43cf5f:	xchg   esi,eax
  43cf60:	xor    al,0x56
  43cf62:	cmp    BYTE PTR [esp+edi*1],dl
  43cf65:	add    dh,BYTE PTR ds:0x32983be9
  43cf6b:	and    BYTE PTR [edi+edi*4],bh
  43cf6e:	sub    dl,BYTE PTR [edx-0x30ea8bc5]
  43cf74:	cmp    esi,DWORD PTR [edx]
  43cf76:	adc    eax,0xd3b14
  43cf7b:	adc    bl,BYTE PTR [edi-0xefb1ac6]
  43cf81:	cmp    DWORD PTR [ecx+0x3d3a46f4],esp
  43cf87:	div    DWORD PTR [ebx+0x39]
  43cf8a:	add    BYTE PTR [edi],dh
  43cf8c:	stos   DWORD PTR es:[edi],eax
  43cf8d:	push   ecx
  43cf8e:	aas    
  43cf8f:	gs stos BYTE PTR es:[edi],al
  43cf91:	jns    0x43cfd2
  43cf93:	jne    0x43cf3e
  43cf95:	lahf   
  43cf96:	aas    
  43cf97:	(bad)
  43cf9b:	fild   QWORD PTR [edx+0x73b43ff7]
  43cfa1:	stc    
  43cfa2:	(bad)  
  43cfa3:	cmp    BYTE PTR [ebx],al
  43cfa5:	add    BYTE PTR [eax],al
  43cfa7:	lods   eax,DWORD PTR ds:[esi]
  43cfa8:	mov    bl,0x32
  43cfaa:	xor    BYTE PTR [esi+0x2f3063ae],al
  43cfb0:	mov    bl,0x9c
  43cfb2:	xor    BYTE PTR [esi],bl
  43cfb4:	mov    bl,0xa8
  43cfb6:	xor    BYTE PTR [edx],cl
  43cfb8:	mov    ah,0xc5
  43cfba:	xor    BYTE PTR [eax-0x4d],al
  43cfbd:	add    eax,0x27b48b31
  43cfc2:	xor    DWORD PTR [esp+esi*4+0x46],ecx
  43cfc6:	xor    DWORD PTR [ebx+esi*4-0x4b37ce8a],edx
  43cfcd:	scas   al,BYTE PTR es:[edi]
  43cfce:	xor    DWORD PTR [eax],edi
  43cfd0:	mov    ah,0xd2
  43cfd2:	xor    eax,edx
  43cfd4:	mov    ah,0x2
  43cfd6:	xor    ah,BYTE PTR [ebp+ebp*4+0x3a]
  43cfda:	xor    al,BYTE PTR [ebp*4-0x30ffcda2]
  43cfe1:	lods   eax,DWORD PTR ds:[esi]
  43cfe2:	xchg   ecx,eax
  43cfe3:	xor    ah,BYTE PTR [ebx]
  43cfe5:	lods   eax,DWORD PTR ds:[esi]
  43cfe6:	int3   
  43cfe7:	xor    ah,dh
  43cfe9:	lods   eax,DWORD PTR ds:[esi]
  43cfea:	lock xor bh,BYTE PTR [esi]
  43cfed:	scas   al,BYTE PTR es:[edi]
  43cfee:	and    BYTE PTR [ebx],dh
  43cff0:	and    ch,BYTE PTR [esi-0x521dcca8]
  43cff6:	jl     0x43d02b
  43cff8:	sbb    eax,0xd133afae
  43cffd:	scas   al,BYTE PTR es:[edi]
  43cffe:	jmp    0x9d33:0xfcaea133
  43d005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d006:	call   0xe8f67918
  43d00b:	pop    ds
  43d00c:	mov    cl,0xb8
  43d00e:	call   0xe8ac7940
  43d013:	je     0x43cfa6
  43d015:	sbb    eax,0x1289c7e9
  43d01a:	jmp    0xef586034
  43d01f:	imul   ecx,DWORD PTR [eax+0x73a5ea4d],0xe
  43d026:	jmp    0xfb323a98
  43d02b:	xchg   ecx,eax
  43d02c:	addr16 pop ecx
  43d02e:	hlt    
  43d02f:	out    0x61,al
  43d031:	add    al,0xf7
  43d033:	call   FWORD PTR [edx-0x6d020364]
  43d039:	cwde   
  43d03a:	cld    
  43d03b:	call   FWORD PTR [ebp-0x30aa1330]
  43d041:	hlt    
  43d042:	in     eax,dx
  43d043:	jnp    0x43d045
  43d045:	scas   eax,DWORD PTR es:[edi]
  43d046:	retf   0x58ed
  43d049:	scas   al,BYTE PTR es:[edi]
  43d04a:	(bad)  
  43d04c:	test   BYTE PTR [ecx-0x56430fb1],dh
  43d052:	loopne 0x43d042
  43d054:	sbb    dl,BYTE PTR [ebx-0x744215be]
  43d05a:	xchg   bl,bh
  43d05c:	(bad)  
  43d05d:	test   DWORD PTR ds:0xd585dcfc,edi
  43d063:	cli    
  43d064:	dec    eax
  43d065:	jbe    0x43d024
  43d067:	lock pop eax
  43d069:	jo     0x43d021
  43d06b:	test   DWORD PTR [ebx-0xed998],0xfe0c9c22
  43d075:	sbb    dh,BYTE PTR [esp+edi*8-0x1]
  43d079:	popf   
  43d07a:	daa    
  43d07b:	hlt    
  43d07c:	call   0xf5b6d34e
  43d081:	sub    al,0xf4
  43d083:	jge    0x43d07a
  43d085:	sbb    esi,esp
  43d087:	std    
  43d088:	hlt    
  43d089:	add    esi,esp
  43d08b:	arpl   bx,si
  43d08d:	stc    
  43d08e:	icebp  
  43d08f:	scas   eax,DWORD PTR es:[edi]
  43d090:	out    dx,eax
  43d091:	addr16 out dx,al
  43d093:	ds lock cld 
  43d096:	out    dx,eax
  43d097:	xor    ecx,esi
  43d099:	push   ebx
  43d09a:	in     al,dx
  43d09b:	pop    esi
  43d09c:	out    dx,al
  43d09d:	adc    al,0xed
  43d09f:	jg     0x43d08e
  43d0a1:	repz in al,dx
  43d0a3:	test   eax,0xebecd1ed
  43d0a8:	out    dx,al
  43d0a9:	add    BYTE PTR [ecx+0x3def35ed],dl
  43d0af:	in     eax,dx
  43d0b0:	stc    
  43d0b1:	cld    
  43d0b2:	adc    al,0xec
  43d0b4:	jecxz  0x43d0af
  43d0b6:	scas   al,BYTE PTR es:[edi]
  43d0b7:	call   0xe9eecab9
  43d0bc:	cmp    al,0xfb
  43d0be:	add    eax,0x98fa44ea
  43d0c3:	out    0x1d,al
  43d0c5:	stc    
  43d0c6:	sti    
  43d0c7:	out    0x4d,eax
  43d0c9:	clc    
  43d0ca:	xor    bh,ah
  43d0cc:	mov    ch,0xf8
  43d0ce:	push   ebx
  43d0cf:	out    0x87,eax
  43d0d1:	clc    
  43d0d2:	jbe    0x43d0bb
  43d0d4:	out    0xf5,eax
  43d0d6:	popf   
  43d0d7:	in     al,0x6d
  43d0d9:	cmc    
  43d0da:	jge    0x43d0c1
  43d0dc:	daa    
  43d0dd:	mul    edx
  43d0df:	in     eax,0xcc
  43d0e1:	test   bl,0xe5
  43d0e4:	xchg   dh,dh
  43d0e6:	pop    ebx
  43d0e7:	in     eax,0x4d
  43d0e9:	div    BYTE PTR [edx]
  43d0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d0ec:	out    0xe3,al
  43d0ee:	sub    BYTE PTR [ebp+0x29d034e],ah
  43d0f4:	push   es
  43d0f5:	hlt    
  43d0f6:	shl    edx,cl
  43d0f8:	jmp    FWORD PTR [ecx+0xe30380e]
  43d0fe:	push   cs
  43d0ff:	out    0x2e,al
  43d101:	lea    ecx,[ecx]
  43d103:	sbb    DWORD PTR [edi],ebp
  43d105:	dec    ebp
  43d106:	icebp  
  43d107:	mov    eax,0x87ece72e
  43d10c:	xor    esi,DWORD PTR [ebp+0x0]
  43d10f:	in     eax,dx
  43d110:	pop    edi
  43d111:	xor    bl,BYTE PTR [eax-0x72cdb910]
  43d117:	enter  0x3223,0x66
  43d11b:	sar    BYTE PTR [edx-0x5f47eccf],0x31
  43d122:	fnsave [ebx-0x37fcce57]
  43d128:	cmp    BYTE PTR [ecx],dh
  43d12a:	dec    edx
  43d12b:	sar    BYTE PTR [edi+0x30],0x72
  43d12f:	mov    eax,0xb09c3066
  43d134:	mov    cl,0x30
  43d136:	repnz xchg esi,eax
  43d138:	cmc    
  43d139:	aaa    
  43d13a:	clc    
  43d13b:	xchg   esi,eax
  43d13c:	cmp    DWORD PTR [eax],edi
  43d13e:	dec    edx
  43d13f:	mov    DWORD PTR [esi],ebx
  43d141:	cmp    BYTE PTR [ebx-0x7f],bh
  43d144:	pop    esp
  43d145:	aaa    
  43d146:	push   esi
  43d147:	jns    0x43d115
  43d149:	aaa    
  43d14a:	mov    bh,0x71
  43d14c:	getsec 
  43d14e:	(bad)  
  43d14f:	addr16 jmp 0x1337:0x49662d36
  43d157:	push   esi
  43d158:	and    eax,0x85566e37
  43d15d:	ss aaa 
  43d15f:	inc    esi
  43d160:	ss inc ax
  43d163:	inc    esi
  43d164:	retf   
  43d165:	ss push esi
  43d167:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43d169:	ss icebp 
  43d16b:	xor    al,0xa
  43d16d:	ss pop ss
  43d16f:	daa    
  43d170:	in     al,0x35
  43d172:	add    BYTE PTR [eax],al
  43d174:	add    ebp,DWORD PTR [edx-0x55adc5ab]
  43d17a:	jnp    0x43d1b6
  43d17c:	outs   dx,BYTE PTR ds:[esi]
  43d17d:	test   al,0x98
  43d17f:	cmp    ah,BYTE PTR [eax+ebp*4-0x5759c528]
  43d186:	(bad)  
  43d187:	cmp    dh,dl
  43d189:	stos   BYTE PTR es:[edi],al
  43d18a:	and    eax,0x4baad73b
  43d18f:	cmp    edx,DWORD PTR [edi]
  43d191:	stos   DWORD PTR es:[edi],eax
  43d192:	imul   edi,DWORD PTR [ebx],0x71
  43d195:	test   eax,0xa99b3b93
  43d19a:	sti    
  43d19b:	cmp    esi,DWORD PTR [ecx]
  43d19d:	lods   al,BYTE PTR ds:[esi]
  43d19e:	gs cmp al,0x38
  43d1a1:	stos   DWORD PTR es:[edi],eax
  43d1a2:	mov    ds:0xd2abfc3c,al
  43d1a7:	cmp    al,0xe5
  43d1a9:	stos   DWORD PTR es:[edi],eax
  43d1aa:	fistp  QWORD PTR [ecx+ebx*8]
  43d1ad:	stos   DWORD PTR es:[edi],eax
  43d1ae:	in     eax,dx
  43d1af:	cmp    al,0xc1
  43d1b1:	lods   al,BYTE PTR ds:[esi]
  43d1b2:	or     edi,DWORD PTR ds:0x3d26ab97
  43d1b8:	sahf   
  43d1b9:	stos   DWORD PTR es:[edi],eax
  43d1ba:	cmp    DWORD PTR ds:0x3df5ac3d,0x68
  43d1c1:	lods   eax,DWORD PTR ds:[esi]
  43d1c2:	aas    
  43d1c3:	(bad)  ds:[esi+esi*2-0x575205c2]
  43d1cb:	ds inc eax
  43d1cd:	lods   eax,DWORD PTR ds:[esi]
  43d1ce:	jmp    0x39f24d11
  43d1d3:	aas    
  43d1d4:	in     al,dx
  43d1d5:	scas   al,BYTE PTR es:[edi]
  43d1d6:	clc    
  43d1d7:	inc    DWORD PTR [eax]
  43d1d9:	inc    esp
  43d1da:	scas   eax,DWORD PTR es:[edi]
  43d1db:	cli    
  43d1dc:	dec    DWORD PTR [eax-0x76000001]
  43d1e2:	mov    al,0xb0
  43d1e4:	xor    DWORD PTR [ecx+0x3731efb0],ecx
  43d1ea:	mov    cl,0x26
  43d1ec:	xor    bl,BYTE PTR [ebp+0x6f56ee10]
  43d1f2:	push   esp
  43d1f3:	out    dx,al
  43d1f4:	jb     0x43d265
  43d1f6:	inc    ebp
  43d1f7:	out    dx,eax
  43d1f8:	or     cl,dh
  43d1fa:	stos   BYTE PTR es:[edi],al
  43d1fb:	out    dx,eax
  43d1fc:	inc    edx
  43d1fd:	into   
  43d1fe:	outs   dx,DWORD PTR ds:[esi]
  43d1ff:	out    dx,eax
  43d200:	mov    cl,dh
  43d202:	xor    esi,eax
  43d204:	(bad)  
  43d205:	into   
  43d206:	push   cs
  43d207:	lock imul BYTE PTR [esi-0x56f21767]
  43d20e:	mov    ch,0xe8
  43d210:	cmp    BYTE PTR [ecx-0x57551684],dh
  43d216:	lock jmp 0xeaf86532
  43d21c:	mov    ds:0x33f4b88b,eax
  43d221:	test   DWORD PTR [edx+0x2c8581f4],eax
  43d227:	in     al,dx
  43d228:	(bad)  
  43d229:	jne    0x43d1cc
  43d22b:	jmp    0x43d238
  43d22d:	je     0x43d20e
  43d22f:	jmp    0x646c:0xeb3f644e
  43d236:	xor    ch,bl
  43d238:	(bad)  
  43d239:	aam    0xca
  43d23b:	jmp    0x3ea:0x59d400e0
  43d242:	(bad)  
  43d243:	mov    ebp,0xccc710ea
  43d248:	jmp    0xb778:0xe9eab72d
  43d24f:	adc    al,0xea
  43d251:	and    ah,BYTE PTR [esi-0x59cb1646]
  43d257:	lock call 0xe94368ad
  43d25d:	pop    esi
  43d25e:	xchg   esi,eax
  43d25f:	adc    ecx,ebp
  43d261:	xchg   BYTE PTR fs:[ebx+0x28672e9],bl
  43d268:	fucomp st(6)
  43d26a:	mov    ch,0xdd
  43d26c:	popa   
  43d26d:	out    dx,eax
  43d26e:	arpl   si,bx
  43d270:	test   eax,0xb7ded6ef
  43d275:	out    dx,eax
  43d276:	retf   0x42de
  43d279:	lock retf 0xfadf
  43d27d:	lock jns 0x43d25f
  43d280:	mov    dh,0xf0
  43d282:	inc    ecx
  43d283:	loopne 0x43d296
  43d285:	icebp  
  43d286:	push   esi
  43d287:	loopne 0x43d249
  43d289:	icebp  
  43d28a:	fsub   st,st(0)
  43d28c:	jmp    0x43d280
  43d28e:	or     dl,ah
  43d290:	dec    ecx
  43d291:	repz xlat BYTE PTR ds:[ebx]
  43d293:	loope  0x43d297
  43d295:	repz stc 
  43d297:	loope  0x43d27f
  43d299:	inc    ebx
  43d29a:	(bad)  [ecx+0x29d03fa]
  43d2a0:	mov    ?,ebx
  43d2a2:	add    BYTE PTR [ebx+edx*8],bl
  43d2a5:	add    ah,dh
  43d2a7:	sbb    esp,edx
  43d2a9:	mov    eax,ds:0xf2d3cbf4
  43d2ae:	cmc    
  43d2af:	pmullw mm1,QWORD PTR [ebp+esi*8-0x87629b9]
  43d2b7:	mov    dl,bh
  43d2b9:	stc    
  43d2ba:	clc    
  43d2bb:	(bad)  
  43d2bd:	(bad)  
  43d2bf:	mov    ecx,0xd3f9f4d8
  43d2c4:	fsub   DWORD PTR [esi]
  43d2c6:	cli    
  43d2c7:	fstp   st(0)
  43d2c9:	xor    dl,bh
  43d2cb:	iret   
  43d2cc:	fadd   DWORD PTR [ecx]
  43d2ce:	cli    
  43d2cf:	push   ds
  43d2d0:	fcomp  DWORD PTR [ecx+edi*8+0x42]
  43d2d4:	fcom   DWORD PTR [esi-0x7]
  43d2d7:	sub    eax,0x71f99ad8
  43d2dc:	fadd   DWORD PTR [edx-0x27bf07]
  43d2e2:	outs   dx,DWORD PTR ds:[esi]
  43d2e3:	inc    esp
  43d2e4:	mov    al,ds:0xec47d131
  43d2e9:	xor    BYTE PTR [ebx-0x51ceb8c9],ch
  43d2ef:	aaa    
  43d2f0:	ds xor ebx,eax
  43d2f3:	daa    
  43d2f4:	xor    DWORD PTR [ecx],esi
  43d2f6:	shl    BYTE PTR [edi],1
  43d2f8:	sbb    dh,BYTE PTR [ecx]
  43d2fa:	jns    0x43d313
  43d2fc:	push   ebx
  43d2fd:	xor    BYTE PTR [ecx],ch
  43d2ff:	pop    ss
  43d300:	(bad)  
  43d301:	xor    BYTE PTR [edi+eax*1],dl
  43d304:	mov    esi,0x7004330
  43d309:	scas   eax,DWORD PTR es:[edi]
  43d30a:	xor    BYTE PTR [ebx],ah
  43d30c:	neg    DWORD PTR [edi-0x2f90cd0]
  43d312:	aaa    
  43d313:	leave  
  43d314:	mul    dl
  43d316:	aaa    
  43d317:	mov    esi,0x2d375bf6
  43d31c:	(bad)  
  43d31d:	retf   
  43d31e:	aaa    
  43d31f:	adc    eax,0xe63708c6
  43d324:	mov    ecx,0xb1ce36f8
  43d329:	arpl   WORD PTR [esi],si
  43d32b:	cmp    cl,bl
  43d32d:	cmp    DWORD PTR [esi],esi
  43d32f:	jb     0x43d2f4
  43d331:	js     0x43d368
  43d333:	xchg   ebp,eax
  43d334:	mov    ebx,0xb3b835c5
  43d339:	mov    esp,0xf78bd435
  43d33e:	xor    al,0x11
  43d340:	xor    BYTE PTR ds:0x89784835,0x34
  43d347:	push   esp
  43d348:	jo     0x43d2ca
  43d34a:	xor    al,0x57
  43d34c:	mov    BYTE PTR [ecx],cl
  43d34e:	cmp    al,0xf9
  43d350:	cmp    dh,0x3b
  43d353:	fdivr  QWORD PTR [edx-0x26]
  43d356:	cmp    edx,DWORD PTR [edi]
  43d358:	ins    DWORD PTR es:[edi],dx
  43d359:	sbb    al,0x3c
  43d35b:	add    bl,cl
  43d35d:	xchg   edx,eax
  43d35e:	mov    ?,WORD PTR [edi+edi*4]
  43d361:	xchg   edx,eax
  43d362:	mov    eax,ds:0xc892893c
  43d367:	cmp    al,0x16
  43d369:	xchg   ebx,eax
  43d36a:	loopne 0x43d3a8
  43d36c:	add    dl,dl
  43d36e:	xchg   edx,eax
  43d36f:	repnz cmp al,0x45
  43d372:	mov    cl,0xa
  43d374:	cmp    eax,0x3d2db132
  43d379:	in     eax,dx
  43d37a:	mov    al,0x5c
  43d37c:	cmp    eax,0x3d6bb0f0
  43d381:	fnsave [eax-0x5035c279]
  43d387:	idiv   BYTE PTR ds:0x3e0491fa
  43d38d:	cli    
  43d38e:	xchg   ecx,eax
  43d38f:	adc    eax,0x4f91cd3e
  43d394:	not    DWORD PTR ds:[edx+0x33f4fff8]
  43d39b:	cli    
  43d39c:	(bad)  
  43d39d:	js     0x43d3a5
  43d39f:	add    BYTE PTR [eax],al
  43d3a1:	cmp    al,0x93
  43d3a3:	mov    bl,0x31
  43d3a5:	jmp    0x43d33c
  43d3a7:	and    DWORD PTR [edx],esi
  43d3a9:	or     al,0x97
  43d3ab:	xor    edi,DWORD PTR ss:[ebx-0x6b]
  43d3af:	arpl   WORD PTR [ebx],si
  43d3b1:	xor    al,0x96
  43d3b3:	lahf   
  43d3b4:	xor    eax,DWORD PTR ds:0xaf340c97
  43d3ba:	xchg   edi,eax
  43d3bb:	sub    eax,0x809ae134
  43d3c0:	xor    al,0x43
  43d3c2:	xchg   edi,eax
  43d3c3:	xor    BYTE PTR ds:0x36329988,0xd5
  43d3ca:	pushf  
  43d3cb:	jno    0x43d403
  43d3cd:	mov    ds:0x383699,al
  43d3d2:	pop    ds
  43d3d3:	stos   DWORD PTR es:[edi],eax
  43d3d4:	lds    edi,FWORD PTR [eax]
  43d3d6:	popf   
  43d3d7:	lahf   
  43d3d8:	in     eax,0x1a
  43d3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d3db:	out    0xe4,al
  43d3dd:	push   ebp
  43d3de:	xchg   esp,eax
  43d3df:	icebp  
  43d3e0:	in     al,0x6d
  43d3e2:	xchg   esp,eax
  43d3e3:	popf   
  43d3e4:	in     eax,0x82
  43d3e6:	test   BYTE PTR [ebx],bh
  43d3e8:	out    0x98,al
  43d3ea:	test   BYTE PTR [ecx-0x1b],bh
  43d3ed:	shl    BYTE PTR [eax+eax*2-0x1a],1
  43d3f1:	adc    esi,DWORD PTR [edi-0xd]
  43d3f4:	jmp    0xeaf53b2b
  43d3f9:	cdq    
  43d3fa:	addr16 add bl,ch
  43d3fd:	repnz xlat BYTE PTR ds:[ebx]
  43d3ff:	or     ch,bl
  43d401:	push   esi
  43d402:	(bad)  
  43d403:	cmp    ah,ch
  43d405:	rol    esi,0xd7
  43d408:	jmp    0x43d445
  43d40a:	sar    DWORD PTR [ecx-0x18],0x5e
  43d40e:	mov    ecx,0xb179e871
  43d413:	jmp    0x43d3fd
  43d415:	or     BYTE PTR [eax-0x5faf1697],ch
  43d41b:	outs   dx,DWORD PTR ds:[esi]
  43d41c:	jmp    0xea7d6c94
  43d421:	xchg   esi,eax
  43d422:	nop
  43d423:	fucompp 
  43d425:	(bad)  
  43d426:	mov    BYTE PTR [ecx+0xb8307ea],bl
  43d42c:	out    dx,eax
  43d42d:	adc    BYTE PTR [edx-0x57],bh
  43d430:	sbb    al,0xfe
  43d432:	mov    dl,0x68
  43d434:	add    eax,DWORD PTR [eax]
  43d436:	add    BYTE PTR [ebp+0x6de5f440],bl
  43d43c:	mov    eax,0xdccc66f3
  43d441:	repnz retf 0xb6cc
  43d445:	out    dx,al
  43d446:	xor    cl,bh
  43d448:	adc    esi,ebp
  43d44a:	fxch   st(7)
  43d44c:	pop    edx
  43d44d:	in     eax,dx
  43d44e:	or     eax,0xf30102ae
  43d453:	lods   eax,DWORD PTR ds:[esi]
  43d454:	sar    DWORD PTR ds:0xb4d239f3,1
  43d45a:	repz xchg edx,eax
  43d45c:	(bad)  
  43d45d:	add    eax,edi
  43d45f:	enter  0x6ad6,0xf8
  43d463:	pop    ebp
  43d464:	xlat   BYTE PTR ds:[ebx]
  43d465:	fdivp  st(0),st
  43d467:	ja     0x43d440
  43d469:	scas   al,BYTE PTR es:[edi]
  43d46a:	clc    
  43d46b:	sub    eax,ebx
  43d46d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d46e:	stc    
  43d46f:	inc    ecx
  43d470:	fcomp  DWORD PTR [ecx]
  43d472:	neg    BYTE PTR [ebp+edx*8+0x2b]
  43d476:	test   BYTE PTR [ebp-0x2f08f42b],0xd5
  43d47d:	(bad)  
  43d47e:	idiv   BYTE PTR [edx]
  43d480:	(bad)  
  43d481:	sbb    esi,edi
  43d483:	push   es
  43d484:	(bad)  
  43d485:	in     eax,dx
  43d486:	jmp    0x43d432
  43d488:	fimul  DWORD PTR [ebx]
  43d48a:	in     al,dx
  43d48b:	(bad)  
  43d48c:	fidiv  DWORD PTR [ebx+ebp*8-0x139d24db]
  43d493:	in     eax,dx
  43d494:	(bad)  
  43d496:	in     al,dx
  43d497:	mov    ebx,0xec84db
  43d49c:	sbb    eax,0xdced05dc
  43d4a1:	fcomp  DWORD PTR [edi]
  43d4a3:	jmp    0xd95d:0xead4d8cb
  43d4aa:	fucomi st,st(7)
  43d4ac:	test   eax,0x6bef9ede
  43d4b1:	fisubr WORD PTR [edi+ebp*8-0x25]
  43d4b5:	fiadd  WORD PTR [ecx+esi*8]
  43d4b8:	sbb    bh,0x18
  43d4bb:	icebp  
  43d4bc:	pop    ebp
  43d4bd:	fistp  WORD PTR [ebp-0x62209010]
  43d4c3:	lock jl 0x43d4a5
  43d4c6:	mov    cl,0xf0
  43d4c8:	xchg   edi,ebx
  43d4ca:	(bad)  
  43d4cb:	jmp    0x43d53d
  43d4cd:	push   es
  43d4ce:	cmp    cl,ah
  43d4d0:	mov    ch,ah
  43d4d2:	cmp    eax,esp
  43d4d4:	sbb    dl,0x39
  43d4d7:	es jnp 0x43d522
  43d4da:	cmp    dh,BYTE PTR [esi]
  43d4dc:	jae    0x43d4f7
  43d4de:	cmp    dh,BYTE PTR [ebx+0x48]
  43d4e1:	cmp    DWORD PTR gs:[edx-0x78c647c0],esi
  43d4e8:	cmp    BYTE PTR [ecx+edi*1+0x3852320b],ch
  43d4ef:	xchg   esi,eax
  43d4f0:	dec    ebx
  43d4f1:	xchg   esp,eax
  43d4f2:	cmp    cl,ch
  43d4f4:	outs   dx,BYTE PTR ds:[esi]
  43d4f5:	pushf  
  43d4f6:	clc    
  43d4f7:	inc    ebp
  43d4f8:	sahf   
  43d4f9:	add    al,BYTE PTR [eax]
  43d4fb:	leave  
  43d4fc:	cs dec ecx
  43d4fe:	das    
  43d4ff:	mov    ah,0x0
  43d501:	movaps XMMWORD PTR ds:0x2cbc0f64,xmm5
  43d508:	rcl    DWORD PTR [edx],cl
  43d50a:	push   esp
  43d50b:	xor    ecx,DWORD PTR [eax+0xa]
  43d50e:	add    dh,BYTE PTR [ebx]
  43d510:	sahf   
  43d511:	cmc    
  43d512:	jo     0x43d546
  43d514:	xor    dh,ch
  43d516:	or     eax,0x32f06532
  43d51b:	xor    DWORD PTR [ebx+ebp*8-0x2c6ecedf],esi
  43d522:	sbb    eax,0x74cb7731
  43d527:	xor    BYTE PTR [ebx-0x2d],cl
  43d52a:	push   eax
  43d52b:	xor    BYTE PTR [ecx],ch
  43d52d:	retf   
  43d52e:	(bad)  
  43d52f:	xor    BYTE PTR [ecx],dl
  43d531:	mov    bl,0xa4
  43d533:	xor    dl,bl
  43d535:	test   al,0x95
  43d537:	xor    cl,dh
  43d539:	mov    dh,0xe
  43d53b:	cmp    BYTE PTR [ecx],cl
  43d53d:	mov    cl,0xe2
  43d53f:	aaa    
  43d540:	push   cs
  43d541:	mov    DWORD PTR [edx+0x38],eax
  43d544:	add    bl,cl
  43d546:	scas   al,BYTE PTR es:[edi]
  43d547:	dec    esi
  43d548:	cmp    BYTE PTR [edi-0x26c7a452],bh
  43d54e:	scas   al,BYTE PTR es:[edi]
  43d54f:	outs   dx,DWORD PTR ds:[esi]
  43d550:	cmp    dh,bh
  43d552:	scas   al,BYTE PTR es:[edi]
  43d553:	(bad)  
  43d554:	cmp    BYTE PTR [ecx],bl
  43d556:	scas   eax,DWORD PTR es:[edi]
  43d557:	fwait
  43d558:	cmp    ch,cl
  43d55a:	scas   al,BYTE PTR es:[edi]
  43d55b:	scas   eax,DWORD PTR es:[edi]
  43d55c:	cmp    BYTE PTR [edi+ebp*4],dh
  43d55f:	mov    edi,0xd7af3938
  43d564:	cmp    BYTE PTR [eax],al
  43d566:	and    ch,BYTE PTR [edi-0x512fc71a]
  43d56c:	repz cmp BYTE PTR [eax],dh
  43d56f:	test   eax,0xa9553903
  43d574:	sbb    edi,DWORD PTR [ecx]
  43d576:	mov    fs,WORD PTR [edi-0x5883c6d6]
  43d57c:	ds cmp edx,edi
  43d57f:	test   al,0x4d
  43d581:	cmp    DWORD PTR [edi-0x57],ecx
  43d584:	cmp    DWORD PTR fs:[esi-0x57],edx
  43d588:	jb     0x43d5c3
  43d58a:	je     0x43d533
  43d58c:	cmp    DWORD PTR [ecx],0x3991a766
  43d592:	sbb    al,0xa8
  43d594:	test   al,0x39
  43d596:	push   ebx
  43d597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d598:	mov    ch,0x39
  43d59a:	test   BYTE PTR [edi-0x5628c5ea],ah
  43d5a0:	cdq    
  43d5a1:	cmp    ah,BYTE PTR [edx-0x58]
  43d5a4:	mov    ah,0x3a
  43d5a6:	ret    0xbbaa
  43d5a9:	cmp    ecx,DWORD PTR [ecx+ebp*4-0x5411c3ff]
  43d5b0:	xor    al,0x3c
  43d5b2:	xor    ch,BYTE PTR [ebx-0x5404c382]
  43d5b8:	jo     0x43d5f7
  43d5ba:	das    
  43d5bb:	lods   al,BYTE PTR ds:[esi]
  43d5bc:	out    0x3d,eax
  43d5be:	popf   
  43d5bf:	mov    eax,ds:0xf8db27ea
  43d5c4:	jmp    0xeab9a921
  43d5c9:	add    al,BYTE PTR [eax]
  43d5cb:	retf   0xeb06
  43d5ce:	sub    eax,0x42eb95c2
  43d5d3:	mov    edx,0xb260eafd
  43d5d8:	dec    eax
  43d5d9:	in     al,dx
  43d5da:	mov    edx,0xfd7ca9aa
  43d5df:	bound  ebx,QWORD PTR [ebp+0x3e9dfffd]
  43d5e5:	in     eax,dx
  43d5e6:	fwait
  43d5e7:	lea    ebx,[ebp*8-0x124673fa]
  43d5ee:	pop    ds
  43d5ef:	mov    ecx,gs
  43d5f1:	in     al,dx
  43d5f2:	inc    esp
  43d5f3:	ins    BYTE PTR es:[edi],dx
  43d5f4:	or     al,0xed
  43d5f6:	arpl   WORD PTR [esi+esi*4-0x13],bp
  43d5fa:	mov    ebx,0xd3ede56c
  43d5ff:	ins    BYTE PTR es:[edi],dx
  43d600:	aam    0xed
  43d602:	pop    esp
  43d603:	iret   
  43d604:	test   dh,ch
  43d606:	mov    eax,0xa3f023cf
  43d60b:	into   
  43d60c:	inc    ebx
  43d60d:	lock stc 
  43d60f:	into   
  43d610:	fwait
  43d611:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d613:	mov    cl,0x14
  43d615:	icebp  
  43d616:	mov    ecx,0x17f1a7a9
  43d61b:	mov    al,0xc3
  43d61d:	icebp  
  43d61e:	cld    
  43d61f:	test   al,0x94
  43d621:	repnz and BYTE PTR [ebx-0x74bc0d46],dl
  43d628:	push   esi
  43d629:	repnz pop esi
  43d62b:	xchg   ebx,eax
  43d62c:	jno    0x43d620
  43d62e:	jge    0x43d630
  43d630:	mov    esi,DWORD PTR [edx]
  43d632:	repz mov ebp,0x1af2f073
  43d638:	push   0x2
  43d63a:	es repz push edi
  43d63d:	shl    DWORD PTR ds:0xa8d347f3,cl
  43d643:	repz popf 
  43d645:	ficomp DWORD PTR [ebp-0x14]
  43d648:	push   ecx
  43d649:	fcmovnu st,st(0)
  43d64b:	in     al,dx
  43d64c:	mov    esi,0xfbed29db
  43d651:	fld    TBYTE PTR [esi]
  43d653:	in     eax,dx
  43d654:	sub    ebx,esp
  43d656:	stos   DWORD PTR es:[edi],eax
  43d657:	in     eax,dx
  43d658:	mov    ebx,esp
  43d65a:	iret   
  43d65b:	in     eax,dx
  43d65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d65d:	fsubr  QWORD PTR [esi]
  43d65f:	out    dx,al
  43d660:	retf   0x31dc
  43d663:	out    dx,al
  43d664:	sub    ch,bl
  43d666:	outs   dx,BYTE PTR ds:[esi]
  43d667:	out    dx,al
  43d668:	push   es
  43d669:	fnsave [edx-0x75229b12]
  43d66f:	out    dx,al
  43d670:	dec    ebx
  43d671:	fstp   st(2)
  43d673:	out    dx,al
  43d674:	frstor [ecx]
  43d677:	out    dx,eax
  43d678:	ret    0x7bdd
  43d67b:	out    dx,eax
  43d67c:	add    al,0xde
  43d67e:	sub    edi,0xfffffff5
  43d681:	fisttp QWORD PTR [esi+0x47dde0ef]
  43d687:	out    dx,eax
  43d688:	add    ebx,esi
  43d68a:	ds out dx,eax
  43d68c:	add    al,0xde
  43d68e:	out    dx,eax
  43d68f:	out    0x91,eax
  43d691:	(bad)  
  43d692:	iret   
  43d693:	out    0x0,eax
  43d695:	mov    esi,0xc3e7fcd6
  43d69a:	(bad)  
  43d69b:	fsubrp st(7),st
  43d69d:	pop    ebx
  43d69e:	(bad)  
  43d69f:	mov    ecx,0x6bd672e7
  43d6a4:	call   0xe886addc
  43d6a9:	or     dl,bh
  43d6ab:	inc    ebx
  43d6ac:	call   0xe85aadba
  43d6b1:	in     eax,dx
  43d6b2:	(bad)  
  43d6b3:	dec    DWORD PTR [eax]
  43d6b5:	lds    esp,FWORD PTR [ebx+0xdc5e73b]
  43d6bb:	cmp    esi,DWORD PTR [ebx]
  43d6bd:	mov    ah,0x49
  43d6bf:	cmp    esi,DWORD PTR [esi]
  43d6c1:	mov    ah,0x1f
  43d6c3:	cmp    eax,DWORD PTR [eax-0x72c5ab7b]
  43d6c9:	test   DWORD PTR [ecx+0x975bf3a],ebp
  43d6cf:	cmp    al,BYTE PTR [ecx]
  43d6d1:	ja     0x43d720
  43d6d3:	cmp    bh,BYTE PTR [ecx]
  43d6d5:	xchg   DWORD PTR [ecx-0x6b7b92c7],eax
  43d6db:	cmp    DWORD PTR [ebp-0x5c6678c],esp
  43d6e1:	ja     0x43d6c6
  43d6e3:	cmp    bh,dl
  43d6e5:	inc    edi
  43d6e6:	dec    edx
  43d6e7:	cmp    DWORD PTR [esi+eax*2],ebp
  43d6ea:	push   cs
  43d6eb:	cmp    DWORD PTR [edx+0x37],ebp
  43d6ee:	js     0x43d728
  43d6f0:	aaa    
  43d6f1:	aaa    
  43d6f2:	pop    ebp
  43d6f3:	cmp    cl,ch
  43d6f5:	push   cs
  43d6f6:	xchg   edi,eax
  43d6f7:	clc    
  43d6f8:	jge    0x43d6fa
  43d6fa:	sahf   
  43d6fb:	add    al,BYTE PTR [eax]
  43d6fd:	mov    cl,0x2e
  43d6ff:	xor    esi,DWORD PTR [eax]
  43d701:	(bad)  
  43d702:	cs int 0x2f
  43d705:	dec    ecx
  43d706:	push   cs
  43d707:	mov    ds:0xa09e12f,al
  43d70c:	das    
  43d70d:	add    al,0x10
  43d70f:	push   cs
  43d710:	das    
  43d711:	outs   dx,BYTE PTR ds:[esi]
  43d712:	or     ebp,eax
  43d714:	cs dec edi
  43d716:	icebp  
  43d717:	call   0x782e:0x20e89a2e
  43d71e:	lock out dx,eax
  43d720:	sub    al,0xfe
  43d722:	jmp    0x43d76f
  43d724:	sub    eax,0x2d19d388
  43d729:	jne    0x43d6f6
  43d72b:	dec    edi
  43d72c:	sub    al,0x0
  43d72e:	ja     0x43d6c0
  43d730:	ret    0xd633
  43d733:	test   al,0x46
  43d735:	xor    al,0x12
  43d737:	test   eax,0x920e34d1
  43d73c:	cwde   
  43d73d:	xor    eax,0x36ba9450
  43d742:	in     eax,dx
  43d743:	xchg   ebx,eax
  43d744:	enter  0x5a36,0x95
  43d748:	(bad)  
  43d749:	ss pop eax
  43d74b:	xchg   ebp,eax
  43d74c:	loop   0x43d784
  43d74e:	inc    esi
  43d74f:	xchg   ebp,eax
  43d750:	pop    es
  43d751:	aaa    
  43d752:	jl     0x43d6e7
  43d754:	sbb    DWORD PTR [edi],esi
  43d756:	sahf   
  43d757:	xchg   ecx,eax
  43d758:	sub    esi,DWORD PTR [edi]
  43d75a:	outs   dx,BYTE PTR ds:[esi]
  43d75b:	xchg   ebx,eax
  43d75c:	cmp    al,0x37
  43d75e:	add    BYTE PTR [esi-0x21c8b46f],ch
  43d764:	xchg   ecx,eax
  43d765:	push   edi
  43d766:	aaa    
  43d767:	lahf   
  43d768:	xchg   ecx,eax
  43d769:	push   0x37
  43d76b:	fist   DWORD PTR [ecx-0x6df0c854]
  43d771:	push   ebp
  43d772:	cmp    BYTE PTR [ebx+0x1a38a0a6],bl
  43d778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d779:	fdivr  DWORD PTR [eax]
  43d77b:	stos   DWORD PTR es:[edi],eax
  43d77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d77d:	adc    bh,BYTE PTR [ecx]
  43d77f:	test   DWORD PTR [ebx-0x52afc6c1],ebp
  43d785:	je     0x43d7c0
  43d787:	and    BYTE PTR [esp+edi*4+0x18a60739],ch
  43d78e:	cmp    ch,BYTE PTR [esi-0x62c5d558]
  43d794:	test   al,0x53
  43d796:	cmp    ch,dl
  43d798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d799:	outs   dx,BYTE PTR ds:[esi]
  43d79a:	cmp    bh,BYTE PTR [eax+ebp*4-0x57]
  43d79e:	cmp    ah,BYTE PTR [eax+ebp*4-0x591fc51b]
  43d7a5:	sbb    DWORD PTR [ebx*4-0x6eb31f53],edi
  43d7ac:	push   ebx
  43d7ad:	loopne 0x43d73c
  43d7af:	mov    edx,ebx
  43d7b1:	out    0xe6,eax
  43d7b3:	and    DWORD PTR [ebp+0x647816e1],0x1d7059e1
  43d7bd:	loope  0x43d75a
  43d7bf:	push   0xbce163
  43d7c4:	pusha  
  43d7c5:	retf   0xe8e1
  43d7c8:	fsub   DWORD PTR [eax-0x6a2cdf1a]
  43d7ce:	out    0x72,al
  43d7d0:	retf   
  43d7d1:	cmp    al,0xe7
  43d7d3:	mov    dl,0xc3
  43d7d5:	push   ebx
  43d7d6:	out    0xc8,al
  43d7d8:	mov    ebx,0xb251e7a1
  43d7dd:	out    0xe6,eax
  43d7df:	mov    ebp,DWORD PTR [edx-0x5d2317e0]
  43d7e5:	test   eax,0xd15afd5c
  43d7ea:	add    eax,DWORD PTR [eax]
  43d7ec:	popf   
  43d7ed:	enter  0x45ec,0x8d
  43d7f1:	div    ebx
  43d7f3:	pop    edx
  43d7f4:	lea    esp,ds:0x2e6d8ded
  43d7fa:	in     eax,dx
  43d7fb:	mov    ds:0x20ed256d,eax
  43d800:	outs   dx,DWORD PTR ds:[esi]
  43d801:	cmp    eax,0x666e24f3
  43d806:	repz adc eax,0xa2ea19d1
  43d80c:	enter  0xe9e9,0xd7
  43d810:	shr    DWORD PTR [esi],cl
  43d812:	out    dx,eax
  43d813:	add    al,0xca
  43d815:	mov    ds:0x66b232ef,al
  43d81a:	out    dx,eax
  43d81b:	inc    esi
  43d81c:	stos   BYTE PTR es:[edi],al
  43d81d:	jbe    0x43d80e
  43d81f:	dec    esi
  43d820:	mov    dl,0x2
  43d822:	mov    esp,0xbbcf4bf0
  43d827:	lock add BYTE PTR [ebx-0x31],bh
  43d82b:	mov    esi,eax
  43d82d:	cmp    ecx,edi
  43d82f:	jnp    0x43d821
  43d831:	cmp    ecx,edi
  43d833:	jnp    0x43d825
  43d835:	dec    ebx
  43d836:	iret   
  43d837:	jnp    0x43d829
  43d839:	cmp    ecx,edi
  43d83b:	jle    0x43d828
  43d83d:	das    
  43d83e:	aad    0xe6
  43d840:	jae    0x43d7ea
  43d842:	xchg   esi,eax
  43d843:	mov    BYTE PTR [ebx*4+0x4ff43702],0xd3
  43d84b:	mov    ah,0xf4
  43d84d:	mov    eax,0x13f52cd3
  43d852:	aam    0x87
  43d854:	cmc    
  43d855:	pop    ebx
  43d856:	aam    0xde
  43d858:	out    dx,eax
  43d859:	add    ecx,edi
  43d85b:	dec    edi
  43d85c:	lock adc eax,0x5
  43d860:	out    dx,al
  43d861:	(bad)  
  43d862:	(bad)  
  43d864:	in     al,dx
  43d865:	xchg   ebx,ebx
  43d867:	(bad)  
  43d868:	in     al,dx
  43d869:	jg     0x43d846
  43d86b:	mov    edi,0xd7db87ec
  43d870:	in     al,dx
  43d871:	(bad)  
  43d872:	fstp   TBYTE PTR [edi+0x27db87ec]
  43d878:	in     eax,dx
  43d879:	(bad)  
  43d87b:	pop    ds
  43d87c:	in     eax,dx
  43d87d:	out    0xdb,eax
  43d87f:	pop    ss
  43d880:	in     eax,dx
  43d881:	iret   
  43d882:	fstp   TBYTE PTR [edi-0x38243814]
  43d888:	in     al,dx
  43d889:	jg     0x43d866
  43d88b:	mov    edi,0xdb8700ec
  43d890:	xlat   BYTE PTR ds:[ebx]
  43d891:	in     al,dx
  43d892:	(bad)  
  43d893:	fstp   TBYTE PTR [edi+0x67db87ec]
  43d899:	in     eax,dx
  43d89a:	pop    ds
  43d89b:	fdiv   st(7),st
  43d89d:	pop    edi
  43d89e:	add    BYTE PTR [ecx+0x70f85836],cl
  43d8a4:	ss xor al,0x78
  43d8a8:	ss dec eax
  43d8aa:	enter  0x3660,0x40
  43d8ae:	shr    BYTE PTR [eax+0x36],0x58
  43d8b2:	mov    eax,0xb0403650
  43d8b7:	pop    eax
  43d8b8:	ss sub al,cl
  43d8bb:	shl    BYTE PTR [esi],0x20
  43d8be:	ror    al,0x36
  43d8c1:	sbb    BYTE PTR [eax-0x4e3fc950],bh
  43d8c7:	mov    eax,0xa089c836
  43d8cc:	rol    BYTE PTR ss:[ecx+0x79d836a8],0x90
  43d8d4:	shl    BYTE PTR ss:[ecx-0x68],0x36
  43d8d9:	call   0xe079d962
  43d8de:	test   BYTE PTR [eax],cl
  43d8e0:	fdiv   DWORD PTR ss:[eax+esi*8+0x35]
  43d8e5:	add    BYTE PTR [edi-0x8],dh
  43d8e8:	xor    eax,0x35e044c8
  43d8ed:	rol    BYTE PTR [eax+ebp*8+0x35],0xd8
  43d8f2:	add    BYTE PTR [eax+edx*8],dh
  43d8f5:	xor    eax,0x355434c0
  43d8fa:	sub    DWORD PTR [esi+0x3f],eax
  43d8fd:	xor    eax,0x351a47fd
  43d902:	pop    esp
  43d903:	aaa    
  43d904:	ja     0x43d93a
  43d906:	push   edx
  43d907:	aaa    
  43d908:	lea    esi,[ebx+esi*4]
  43d90b:	add    ch,BYTE PTR [edi]
  43d90d:	cmp    al,0x71
  43d90f:	cli    
  43d910:	arpl   WORD PTR [edx],di
  43d912:	sub    ch,dh
  43d914:	ret    0x3a
  43d917:	push   esp
  43d918:	stos   BYTE PTR es:[edi],al
  43d919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d91a:	ds fwait
  43d91c:	lahf   
  43d91d:	jno    0x43d95e
  43d91f:	dec    edi
  43d920:	pushf  
  43d921:	clc    
  43d922:	push   esp
  43d924:	sar    dl,0xff
  43d927:	inc    eax
  43d928:	add    DWORD PTR [eax],eax
  43d92a:	add    BYTE PTR [ecx-0x6f],al
  43d92d:	mov    ds:0xc6916b30,eax
  43d932:	xor    BYTE PTR [ebx+0xf311391],ah
  43d938:	mov    ds,WORD PTR [edx+0x31]
  43d93b:	popf   
  43d93c:	mov    ?,eax
  43d93e:	xor    edx,eax
  43d940:	xchg   edx,eax
  43d941:	or     dh,BYTE PTR [edx]
  43d943:	jecxz  0x43d8d7
  43d945:	dec    esp
  43d946:	xor    bl,BYTE PTR [edi-0x70]
  43d949:	test   eax,0xf2916932
  43d94e:	xor    cl,BYTE PTR [esi-0x32cce16d]
  43d954:	xchg   ecx,eax
  43d955:	jp     0x43d98a
  43d957:	add    ch,ah
  43d959:	xchg   ecx,eax
  43d95a:	jmp    0x43d98f
  43d95c:	xchg   BYTE PTR [eax+edx*1-0x3a5c32cc],ah
  43d963:	xor    eax,0x35e6a410
  43d968:	add    ah,BYTE PTR [esi+ecx*1+0x3aa67136]
  43d96f:	add    ah,BYTE PTR ss:[ebp-0x5ae0c933]
  43d976:	in     al,dx
  43d977:	ss cmp al,0xa7
  43d97a:	xor    DWORD PTR [edi],0x3823a57a
  43d980:	xchg   edx,eax
  43d981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d982:	jns    0x43d9bc
  43d984:	jmp    0xb6aa:0x1839b8a8
  43d98b:	cmp    esp,DWORD PTR [edi-0x57]
  43d98e:	(bad)  
  43d98f:	cmp    ebx,DWORD PTR [ebp-0x37731fad]
  43d995:	mov    eax,esp
  43d997:	lods   eax,DWORD PTR ds:[esi]
  43d998:	ror    ch,0xe0
  43d99b:	int    0xb8
  43d99d:	inc    ebp
  43d99e:	loope  0x43d995
  43d9a0:	mov    al,0xb8
  43d9a2:	loop   0x43d9ba
  43d9a4:	stos   DWORD PTR es:[edi],eax
  43d9a5:	jmp    ecx
  43d9a7:	cmp    DWORD PTR [ebx-0x64ae1da7],esp
  43d9ad:	vprolvq zmm4{k3}{z},zmm7,zmm2
  43d9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d9b4:	mov    edi,DWORD PTR [ecx]
  43d9b6:	loop   0x43d975
  43d9b8:	adc    ecx,0xffffffe1
  43d9bb:	fld    DWORD PTR [eax]
  43d9bd:	jnp    0x43d959
  43d9bf:	loop   0x43d9b6
  43d9c1:	jae    0x43d96c
  43d9c3:	jecxz  0x43d9d1
  43d9c5:	push   0xffffffb2
  43d9c7:	jecxz  0x43d9f6
  43d9c9:	(bad)  
  43d9ca:	jmp    0x78e3:0x43da51e2
  43d9d1:	rcr    BYTE PTR [esi],cl
  43d9d3:	in     al,0xad
  43d9d5:	retf   0xe34f
  43d9d8:	inc    DWORD PTR [edx+0x7afdcca9]
  43d9de:	xor    eax,0xa59dfffd
  43d9e3:	in     al,dx
  43d9e4:	sub    BYTE PTR [ebp-0x52a20c0a],ch
  43d9ea:	sub    ch,ch
  43d9ec:	mov    cl,BYTE PTR [ebp-0x725612cf]
  43d9f2:	sub    al,0xed
  43d9f4:	lds    ecx,FWORD PTR [ebp-0x73fe1376]
  43d9fa:	cld    
  43d9fb:	in     al,dx
  43d9fc:	xchg   BYTE PTR [ecx+eiz*1-0x12],ch
  43da00:	mov    al,ds:0xe9edd56c
  43da05:	ins    BYTE PTR es:[edi],dx
  43da06:	xor    ebp,edi
  43da08:	nop
  43da09:	outs   dx,DWORD PTR ds:[esi]
  43da0a:	add    bl,BYTE PTR [ebx+0x5ad058f1]
  43da10:	icebp  
  43da11:	mov    ebp,0xbef052cf
  43da16:	into   
  43da17:	lods   eax,DWORD PTR ds:[esi]
  43da18:	out    dx,eax
  43da19:	or     esi,0xcd63ef8d
  43da1f:	fucomi st,st(4)
  43da21:	add    BYTE PTR [ecx+0x41eca8cb],ch
  43da27:	retf   
  43da28:	jo     0x43da16
  43da2a:	fmul   st(2),st
  43da2c:	out    0xeb,eax
  43da2e:	mov    al,ds:0x21eb92da
  43da33:	fidiv  DWORD PTR [ecx-0x18]
  43da36:	call   esi
  43da38:	mov    edi,0xfcd5cee7
  43da3d:	out    0xd4,al
  43da3f:	aam    0xc5
  43da41:	in     eax,0x78
  43da43:	aam    0xb7
  43da45:	in     eax,0x6d
  43da47:	aam    0xa9
  43da49:	in     eax,0x5c
  43da4b:	aam    0x2c
  43da4d:	loop   0x43da39
  43da4f:	shl    BYTE PTR [eax],1
  43da51:	loop   0x43da47
  43da53:	rcr    BYTE PTR [edx-0x1e],1
  43da56:	cmp    dl,cl
  43da58:	xchg   ecx,eax
  43da59:	loop   0x43da9f
  43da5b:	shr    DWORD PTR [edx-0x6a2e991e],1
  43da61:	loop   0x43dab0
  43da63:	rcl    DWORD PTR [ebx-0x422eb61e],1
  43da69:	loop   0x43da09
  43da6b:	rcl    eax,1
  43da6d:	loop   0x43da4c
  43da6f:	shl    DWORD PTR [ebx+eiz*8+0x7],1
  43da73:	sar    BYTE PTR [edi-0x1d],cl
  43da76:	inc    esi
  43da77:	shl    dh,cl
  43da79:	mov    ds:0x3fa9240,eax
  43da7e:	popf   
  43da7f:	add    cl,ch
  43da81:	shl    esi,cl
  43da83:	sar    bh,cl
  43da85:	add    al,0x0
  43da87:	push   ecx
  43da88:	pop    ecx
  43da89:	das    
  43da8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da8b:	dec    ecx
  43da8c:	loop   0x43dabc
  43da8e:	out    0xf1,eax
  43da90:	push   ebp
  43da91:	cs pop ds
  43da93:	jmp    0x43dada
  43da95:	cs mov al,0xf0
  43da98:	jl     0x43dac7
  43da9a:	jp     0x43da87
  43da9c:	pop    ebx
  43da9d:	sub    eax,0x2d07d34f
  43daa2:	(bad)  
  43daa3:	retf   
  43daa4:	xor    DWORD PTR ds:0x2c54d26d,ebp
  43daaa:	daa    
  43daab:	retf   0x2cab
  43daae:	icebp  
  43daaf:	repnz jmp 0xfd34:0x12eadf33
  43dab7:	in     eax,0xe2
  43dab9:	xor    ah,BYTE PTR [edx+0x1432c8e5]
  43dabf:	aam    0xf2
  43dac1:	xor    DWORD PTR [ebp-0x67cdb82c],esp
  43dac7:	les    esi,FWORD PTR [ebx]
  43dac9:	xor    cl,BYTE PTR [ebx-0x36ce483c]
  43dacf:	je     0x43db06
  43dad1:	xor    DWORD PTR [edi],edi
  43dad3:	jbe    0x43da8f
  43dad5:	xor    ah,cl
  43dad7:	cmp    DWORD PTR ds:0x63ae,esi
  43dadc:	test   al,0x34
  43dade:	les    ebx,FWORD PTR [ebx+0x48]
  43dae1:	cmp    al,0x3a
  43dae3:	jge    0x43daa0
  43dae5:	cmp    ebx,DWORD PTR [edi]
  43dae7:	jg     0x43dafe
  43dae9:	cmp    cl,BYTE PTR [ecx-0x76e8400]
  43daef:	jmp    0x4a3c6a22
  43daf4:	sahf   
  43daf5:	add    al,BYTE PTR [eax]
  43daf7:	leave  
  43daf8:	outs   dx,BYTE PTR ds:[esi]
  43daf9:	sbb    DWORD PTR [esi],ebp
  43dafb:	mov    ch,BYTE PTR [eax-0xb]
  43dafe:	sub    al,0x0
  43db00:	cmp    al,0xb8
  43db02:	adc    al,0x33
  43db04:	fs mov eax,0xb85c331c
  43db0a:	and    al,0x33
  43db0c:	in     al,0xb7
  43db0e:	sub    al,0x33
  43db10:	mov    esp,0x443334b9
  43db15:	mov    eax,0xb83c333c
  43db1a:	inc    esp
  43db1b:	xor    eax,DWORD PTR [eax+edi*4-0x79]
  43db1f:	xor    edx,DWORD PTR [ecx]
  43db21:	mov    eax,0xb8b333cc
  43db26:	and    dh,BYTE PTR [esi+eiz*8]
  43db29:	mov    eax,0xb96e3467
  43db2e:	adc    esi,DWORD PTR ds:0x3579aa15
  43db34:	mov    ecx,0x91362eaa
  43db39:	stos   DWORD PTR es:[edi],eax
  43db3a:	mov    esi,DWORD PTR [edi]
  43db3c:	lds    ebp,FWORD PTR [ebp+edx*1+0x25ad0638]
  43db43:	cmp    DWORD PTR [ebx],edx
  43db45:	scas   al,BYTE PTR es:[edi]
  43db46:	mov    eax,ds:0xb9b0693b
  43db4b:	cmp    al,0x8c
  43db4d:	mov    ds:0x7c003dd8,al
  43db52:	mov    al,0x6c
  43db54:	ds (bad) 
  43db56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db57:	js     0x43db97
  43db59:	add    al,0xa5
  43db5b:	mov    ?,WORD PTR [esi]
  43db5d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db5f:	call   0xe93e:0xa6a50c3e
  43db66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db67:	mov    ah,0x3e
  43db69:	aaa    
  43db6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db6b:	ret    0x53e
  43db6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db6f:	sar    BYTE PTR [esi],1
  43db71:	arpl   WORD PTR [ebp-0x5adcc121],sp
  43db77:	out    dx,eax
  43db78:	ds popf 
  43db7a:	pushf  
  43db7b:	fisttp WORD PTR [ebx]
  43db7d:	or     BYTE PTR [edx-0x4585ef21],0xdf
  43db84:	and    eax,0x3cdf5672
  43db89:	push   0xffffffe1
  43db8b:	fimul  WORD PTR [ecx+0x62]
  43db8e:	repnz ficomp WORD PTR [edi-0x26]
  43db92:	cdq    
  43db93:	cld    
  43db94:	cld    
  43db95:	adc    ch,dl
  43db97:	add    eax,DWORD PTR [eax]
  43db99:	popf   
  43db9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db9b:	int3   
  43db9c:	adc    ecx,ebp
  43db9e:	call   0x8bf1ae76
  43dba3:	int    0x72
  43dba5:	lods   al,BYTE PTR ds:[esi]
  43dba6:	sub    ecx,ebp
  43dba8:	fsubr  DWORD PTR [ebp+edi*1-0x4530c33]
  43dbaf:	(bad)  
  43dbb0:	inc    esp
  43dbb1:	xchg   edx,eax
  43dbb2:	ret    
  43dbb3:	xlat   BYTE PTR ds:[ebx]
  43dbb4:	pop    esi
  43dbb5:	add    BYTE PTR [edi-0x786925ed],dl
  43dbbb:	mov    ecx,0x3c8328de
  43dbc0:	fisubr WORD PTR [esi-0x3136685]
  43dbc6:	mov    dl,0xad
  43dbc8:	cld    
  43dbc9:	call   FWORD PTR [ebp+0x6c07cc54]
  43dbcf:	or     ecx,esi
  43dbd1:	mov    eax,0x3cd6a2cc
  43dbd6:	retf   0xd45f
  43dbd9:	add    ah,al
  43dbdb:	out    dx,eax
  43dbdc:	fucom  st(1)
  43dbde:	ret    0xdc99
  43dbe1:	cld    
  43dbe2:	jp     0x43dc5d
  43dbe4:	cld    
  43dbe5:	call   FWORD PTR [ebp-0x50c33242]
  43dbeb:	ins    DWORD PTR es:[edi],dx
  43dbec:	rcl    edi,cl
  43dbee:	scas   al,BYTE PTR es:[edi]
  43dbef:	jge    0x43dbc4
  43dbf1:	fisttp WORD PTR [esi+0x3ad48b02]
  43dbf7:	ror    DWORD PTR [edx-0x652cc52c],cl
  43dbfd:	aam    0x4a
  43dbff:	ror    DWORD PTR [edx-0x152cc52c],cl
  43dc05:	xlat   BYTE PTR ds:[ebx]
  43dc06:	call   0xdad6:0x9ad7ead6
  43dc0d:	xlat   BYTE PTR ds:[ebx]
  43dc0e:	mov    dl,dh
  43dc10:	retf   0xbad7
  43dc13:	(bad)  
  43dc14:	or     bl,al
  43dc16:	mov    edx,0xd80ad6
  43dc1b:	mov    edx,0xcad81ad6
  43dc20:	(bad)  
  43dc21:	or     bl,al
  43dc23:	mov    edx,0x5ad7aad6
  43dc28:	(bad)  
  43dc29:	stos   BYTE PTR es:[edi],al
  43dc2a:	xlat   BYTE PTR ds:[ebx]
  43dc2b:	pop    edx
  43dc2c:	(bad)  
  43dc2d:	call   0x6cd7:0x8ad64ad7
  43dc34:	xlat   BYTE PTR ds:[ebx]
  43dc35:	ins    DWORD PTR es:[edi],dx
  43dc36:	fsub   DWORD PTR [eax]
  43dc38:	xlat   BYTE PTR ds:[ebx]
  43dc39:	js     0x43dc13
  43dc3b:	add    bh,dl
  43dc3d:	push   eax
  43dc3e:	fcom   st(2)
  43dc40:	(bad)  
  43dc41:	sub    bl,al
  43dc43:	ret    
  43dc44:	(bad)  
  43dc45:	out    dx,eax
  43dc46:	(bad)  [edx-0x7d242536]
  43dc4c:	retf   0xdbb2
  43dc4f:	push   esp
  43dc50:	retf   0xdb8c
  43dc53:	std    
  43dc54:	retf   0xdc67
  43dc57:	and    al,0xcb
  43dc59:	jl     0x43dc37
  43dc5b:	cmp    al,0xcb
  43dc5d:	mov    esp,ds
  43dc5f:	push   esi
  43dc60:	retf   
  43dc61:	scas   al,BYTE PTR es:[edi]
  43dc62:	fdivr  QWORD PTR [edi-0x35]
  43dc65:	jmp    0x43dc43
  43dc67:	mov    al,ds:0xc0dcd8cb
  43dc6c:	retf   
  43dc6d:	push   esi
  43dc6f:	inc    ecx
  43dc70:	ds aaa 
  43dc72:	or     eax,0x7a372578
  43dc77:	jo     0x43dcda
  43dc79:	ss pop eax
  43dc7b:	push   0x883649
  43dc80:	pusha  
  43dc81:	mov    ?,eax
  43dc83:	jmp    0xe63c6bd6
  43dc88:	sahf   
  43dc89:	add    al,BYTE PTR [eax]
  43dc8b:	sbb    edx,DWORD PTR [edx+0x56]
  43dc8e:	xor    BYTE PTR [ecx+0x54368241],al
  43dc94:	clc    
  43dc95:	div    BYTE PTR ds:0x35c0f710
  43dc9b:	ss out 0x8d,eax
  43dc9e:	clc    
  43dc9f:	jmp    0xaa3c6c02
  43dca4:	sahf   
  43dca5:	add    al,BYTE PTR [eax]
  43dca7:	stos   BYTE PTR es:[edi],al
  43dca8:	into   
  43dca9:	xor    BYTE PTR [eax],dh
  43dcab:	(bad)  
  43dcac:	into   
  43dcad:	adc    al,0x30
  43dcaf:	cdq    
  43dcb0:	iret   
  43dcb1:	xor    BYTE PTR ds:0x327cf5f5,ch
  43dcb7:	test   ah,dh
  43dcb9:	cmp    BYTE PTR ds:[edx-0x17],dl
  43dcbd:	shl    DWORD PTR [esi],1
  43dcbf:	mov    cl,0xe1
  43dcc1:	xchg   esi,eax
  43dcc2:	ss not ah
  43dcc5:	loop   0x43dcfc
  43dcc7:	scas   eax,DWORD PTR es:[edi]
  43dcc8:	aam    0x71
  43dcca:	xor    eax,0x3c20ca9f
  43dccf:	xchg   dl,al
  43dcd1:	or     DWORD PTR [ebx+ebx*8],edi
  43dcd4:	jnp    0x43dcbe
  43dcd6:	cmp    BYTE PTR [ebx+0x72],dl
  43dcd9:	cdq    
  43dcda:	cmp    cl,bl
  43dcdc:	imul   ecx,DWORD PTR [ecx-0x703116c8],0xfffffff8
  43dce3:	adc    eax,0x2a100
  43dce8:	add    BYTE PTR [ecx+esi*4-0x4ebbcffc],al
  43dcef:	adc    al,0x30
  43dcf1:	xchg   esp,eax
  43dcf2:	mov    dh,0x24
  43dcf4:	xor    BYTE PTR [ecx+esi*4+0x34],dl
  43dcf8:	xor    BYTE PTR [esi+esi*4-0x497bcfbc],al
  43dcff:	push   esp
  43dd00:	xor    BYTE PTR [esi+esi*4-0x496bcf9c],dl
  43dd07:	je     0x43dd39
  43dd09:	les    esi,FWORD PTR [ecx-0x4e3bcf7c]
  43dd0f:	xchg   esp,eax
  43dd10:	xor    ah,dl
  43dd12:	mov    cl,0xf8
  43dd14:	inc    DWORD PTR [ecx+eiz*1]
  43dd17:	cld    
  43dd18:	dec    DWORD PTR [eax+0x6]
  43dd1b:	add    BYTE PTR [eax],al
  43dd1d:	add    al,0xb0
  43dd1f:	or     al,0x33
  43dd21:	nop
  43dd22:	mov    cl,0x20
  43dd24:	xor    ebp,DWORD PTR [eax+0x383350b1]
  43dd2a:	mov    al,0x58
  43dd2c:	xor    esp,eax
  43dd2e:	scas   eax,DWORD PTR es:[edi]
  43dd2f:	pusha  
  43dd30:	xor    ebx,eax
  43dd32:	scas   eax,DWORD PTR es:[edi]
  43dd33:	push   0x70b01033
  43dd38:	xor    edi,eax
  43dd3a:	scas   eax,DWORD PTR es:[edi]
  43dd3b:	js     0x43dd70
  43dd3d:	inc    eax
  43dd3e:	mov    al,0x80
  43dd40:	xor    edi,DWORD PTR [eax]
  43dd42:	mov    al,0x88
  43dd44:	xor    esi,DWORD PTR [eax]
  43dd46:	mov    al,0x90
  43dd48:	xor    eax,DWORD PTR [eax]
  43dd4a:	cmp    BYTE PTR [eax-0x4f9fcc68],dh
  43dd50:	mov    al,ds:0xa8b05833
  43dd55:	xor    edx,eax
  43dd57:	mov    al,0xb0
  43dd59:	xor    edi,DWORD PTR [eax]
  43dd5b:	mov    dl,0xb8
  43dd5d:	xor    eax,DWORD PTR [eax-0x4e]
  43dd60:	shl    BYTE PTR [ebx],0x9d
  43dd63:	gs into 
  43dd65:	iret   
  43dd66:	scas   al,BYTE PTR es:[edi]
  43dd67:	push   ebp
  43dd68:	into   
  43dd69:	xlat   BYTE PTR ds:[ebx]
  43dd6a:	scas   al,BYTE PTR es:[edi]
  43dd6b:	gs into 
  43dd6d:	fild   QWORD PTR [esi-0x5118313b]
  43dd73:	(bad)
  43dd76:	mov    ss,WORD PTR [ebp-0x32]
  43dd79:	test   DWORD PTR [esi-0x7100319b],0x8907d0a5
  43dd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd84:	ror    BYTE PTR [edi],1
  43dd86:	jno    0x43dd1d
  43dd88:	rcl    BYTE PTR [edi],1
  43dd8a:	imul   esp,DWORD PTR [ebp-0x3a8ee030],0xc56927d0
  43dd94:	shr    BYTE PTR [edi],1
  43dd96:	rcl    DWORD PTR [ebp-0x30],1
  43dd99:	aaa    
  43dd9a:	leave  
  43dd9b:	in     eax,0xd7
  43dd9d:	aas    
  43dd9e:	shl    DWORD PTR [ebp-0x30],1
  43dda1:	inc    edi
  43dda2:	leave  
  43dda3:	ror    BYTE PTR gs:[edi-0x4f],1
  43dda7:	push   ebp
  43dda8:	rcl    BYTE PTR [edi-0x57],1
  43ddab:	rcr    BYTE PTR gs:[edi+0x0],1
  43ddaf:	mov    cl,0xc5
  43ddb1:	shl    BYTE PTR [edi-0x57],1
  43ddb4:	(bad)
  43ddb7:	xchg   ecx,eax
  43ddb8:	push   ebp
  43ddb9:	shl    BYTE PTR [edi-0x77],1
  43ddbc:	sar    BYTE PTR gs:[edi-0x6f],1
  43ddc0:	and    eax,0x258987d8
  43ddc5:	fmul   DWORD PTR [edi-0x6827ea8f]
  43ddcb:	imul   esp,DWORD PTR ds:0xe571b3d8,0xfd69d3d7
  43ddd5:	xlat   BYTE PTR ds:[ebx]
  43ddd6:	repz shl DWORD PTR [ebp+0x2c813d1],1
  43dddd:	or     edx,edi
  43dddf:	into   
  43dde0:	aad    0x22
  43dde2:	xlat   BYTE PTR ds:[ebx]
  43dde3:	out    dx,al
  43dde4:	aad    0x4a
  43dde6:	xlat   BYTE PTR ds:[ebx]
  43dde7:	out    dx,al
  43dde8:	aad    0x62
  43ddea:	(bad)  
  43ddeb:	push   cs
  43ddec:	aad    0x8a
  43ddee:	(bad)  
  43ddef:	cs aad 0xa2
  43ddf2:	(bad)  
  43ddf3:	dec    esi
  43ddf4:	aad    0xca
  43ddf6:	(bad)  
  43ddf7:	dec    esi
  43ddf8:	aad    0xe2
  43ddfa:	aad    0xae
  43ddfc:	aam    0xca
  43ddfe:	aad    0x8e
  43de00:	aam    0x22
  43de02:	(bad)  
  43de03:	out    dx,al
  43de04:	aam    0xa
  43de06:	(bad)  
  43de07:	scas   al,BYTE PTR es:[edi]
  43de08:	aam    0x62
  43de0a:	aad    0xe
  43de0c:	aam    0x4a
  43de0e:	aad    0xee
  43de10:	shl    DWORD PTR [edx-0x2bb1ff2b],cl
  43de16:	mov    dl,ch
  43de18:	push   cs
  43de19:	aam    0xe2
  43de1b:	aam    0xae
  43de1d:	ror    DWORD PTR [edx],cl
  43de1f:	aad    0xce
  43de21:	shl    DWORD PTR [edx-0x352c912c],cl
  43de27:	aam    0x6e
  43de29:	shl    DWORD PTR [edx-0x2c],cl
  43de2c:	push   cs
  43de2d:	ror    DWORD PTR [edx+0x22d32ed4],cl
  43de33:	aam    0xce
  43de35:	ror    BYTE PTR [edx-0x2c],cl
  43de38:	into   
  43de39:	shl    dl,cl
  43de3b:	fld    TBYTE PTR [esi-0x71243536]
  43de41:	retf   0xdba2
  43de44:	outs   dx,BYTE PTR ds:[esi]
  43de45:	retf   0xdb8a
  43de48:	dec    edx
  43de49:	retf   0xdb92
  43de4c:	sub    cl,dl
  43de4e:	data16 fistp DWORD PTR [esi]
  43de51:	retf   0xdb6e
  43de54:	push   ss
  43de55:	retf   0x58ff
  43de58:	jbe    0x43ded0
  43de5a:	aaa    
  43de5b:	push   ecx
  43de5c:	jbe    0x43decc
  43de5e:	aaa    
  43de5f:	mov    DWORD PTR [ecx+0x66],ebp
  43de62:	aaa    
  43de63:	xchg   ecx,eax
  43de64:	popa   
  43de65:	pop    esi
  43de66:	aaa    
  43de67:	jmp    0xe943e10a
  43de6c:	sahf   
  43de6d:	add    al,BYTE PTR [eax]
  43de6f:	jmp    0xe943e112
  43de74:	sahf   
  43de75:	add    al,BYTE PTR [eax]
  43de77:	jmp    0x467c7c
  43de7c:	jmp    0xe943e11f
  43de81:	sahf   
  43de82:	add    al,BYTE PTR [eax]
  43de84:	jmp    0xe943e127
  43de89:	sahf   
  43de8a:	add    al,BYTE PTR [eax]
  43de8c:	jmp    0xe943e12f
  43de91:	sahf   
  43de92:	add    al,BYTE PTR [eax]
  43de94:	jmp    0xe943e137
  43de99:	sahf   
  43de9a:	add    al,BYTE PTR [eax]
  43de9c:	jmp    0xe943e13f
  43dea1:	sahf   
  43dea2:	add    al,BYTE PTR [eax]
  43dea4:	jmp    0xe943e147
  43dea9:	sahf   
  43deaa:	add    al,BYTE PTR [eax]
  43deac:	jmp    0xe943e14f
  43deb1:	sahf   
  43deb2:	add    al,BYTE PTR [eax]
  43deb4:	jmp    0xe943e157
  43deb9:	sahf   
  43deba:	add    al,BYTE PTR [eax]
  43debc:	jmp    0xe943e15f
  43dec1:	sahf   
  43dec2:	add    al,BYTE PTR [eax]
  43dec4:	jmp    0xe943e167
  43dec9:	sahf   
  43deca:	add    al,BYTE PTR [eax]
  43decc:	jmp    0x43e16f
  43ded1:	mov    ah,0x5
  43ded3:	add    BYTE PTR [eax],al
  43ded5:	mov    ah,0x5
  43ded7:	add    BYTE PTR [eax],al
  43ded9:	test   BYTE PTR ds:0x84000000,al
  43dedf:	add    eax,0x5740000
  43dee4:	add    BYTE PTR [eax],al
  43dee6:	je     0x43deed
  43dee8:	add    BYTE PTR [eax],al
  43deea:	test   BYTE PTR ds:0x5840000,al
  43def0:	add    BYTE PTR [eax],al
  43def2:	je     0x43def9
  43def4:	add    BYTE PTR [eax],al
  43def6:	je     0x43defd
  43def8:	add    BYTE PTR [eax],al
  43defa:	inc    esp
  43defb:	add    eax,0x5440000
  43df00:	add    BYTE PTR [eax],al
  43df02:	xor    al,0x5
  43df04:	add    BYTE PTR [eax],al
  43df06:	xor    al,0x5
  43df08:	add    BYTE PTR [eax],al
  43df0a:	inc    esp
  43df0b:	add    eax,0x5440000
  43df10:	add    BYTE PTR [eax],al
  43df12:	xor    al,0x5
  43df14:	add    BYTE PTR [eax],al
  43df16:	xor    al,0x5
  43df18:	add    BYTE PTR [eax],al
  43df1a:	add    al,0x5
  43df1c:	add    BYTE PTR [eax],al
  43df1e:	add    al,0x5
  43df20:	add    BYTE PTR [eax],al
  43df22:	hlt    
  43df23:	add    al,0x0
  43df25:	add    ah,dh
  43df27:	add    al,0x0
  43df29:	add    BYTE PTR [eax*1+0x5040000],al
  43df30:	add    BYTE PTR [eax],al
  43df32:	hlt    
  43df33:	add    al,0x0
  43df35:	add    ah,dh
  43df37:	add    al,0x0
  43df39:	add    ah,al
  43df3b:	add    al,0x0
  43df3d:	add    ah,al
  43df3f:	add    al,0x0
  43df41:	add    BYTE PTR [eax],al
  43df43:	mov    ah,0x4
  43df45:	add    BYTE PTR [eax],al
  43df47:	mov    ah,0x4
  43df49:	add    BYTE PTR [eax],al
  43df4b:	popf   
  43df4c:	fwait
  43df4d:	cld    
  43df4e:	call   FWORD PTR [ebp-0x62000365]
  43df54:	fwait
  43df55:	cld    
  43df56:	call   FWORD PTR [ebp-0x62000365]
  43df5c:	cdq    
  43df5d:	cld    
  43df5e:	call   FWORD PTR [ebp-0x62000367]
  43df64:	cdq    
  43df65:	cld    
  43df66:	call   FWORD PTR [ebp-0x62000367]
  43df6c:	cdq    
  43df6d:	cld    
  43df6e:	call   FWORD PTR [ebp-0x62000367]
  43df74:	cdq    
  43df75:	cld    
  43df76:	call   FWORD PTR [ebp-0x62000367]
  43df7c:	cdq    
  43df7d:	cld    
  43df7e:	call   FWORD PTR [ebp-0x62000367]
  43df84:	cdq    
  43df85:	cld    
  43df86:	call   FWORD PTR [ebp-0x62000367]
  43df8c:	cdq    
  43df8d:	cld    
  43df8e:	call   FWORD PTR [ebp-0x62000367]
  43df94:	cdq    
  43df95:	cld    
  43df96:	call   FWORD PTR [ebp-0x62000367]
  43df9c:	cdq    
  43df9d:	cld    
  43df9e:	call   FWORD PTR [ebp-0x62000367]
  43dfa4:	cdq    
  43dfa5:	cld    
  43dfa6:	inc    DWORD PTR [eax]
  43dfa8:	popf   
  43dfa9:	cdq    
  43dfaa:	cld    
  43dfab:	call   FWORD PTR [ebp-0x62000367]
  43dfb1:	cdq    
  43dfb2:	cld    
  43dfb3:	call   FWORD PTR [ebp-0x62000367]
  43dfb9:	cdq    
  43dfba:	cld    
  43dfbb:	call   FWORD PTR [ebp-0x62000367]
  43dfc1:	cdq    
  43dfc2:	cld    
  43dfc3:	call   FWORD PTR [ebp-0x62fc18fe]
  43dfc9:	add    ah,bh
  43dfcb:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43dfd1:	add    ah,bh
  43dfd3:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43dfd9:	add    ah,bh
  43dfdb:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43dfe1:	add    ah,bh
  43dfe3:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43dfe9:	add    ah,bh
  43dfeb:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43dff1:	add    ah,bh
  43dff3:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43dff9:	add    ah,bh
  43dffb:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e001:	add    ah,bh
  43e003:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e009:	add    ah,bh
  43e00b:	add    eax,DWORD PTR [eax]
  43e00d:	popf   
  43e00e:	add    ah,bh
  43e010:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e016:	add    ah,bh
  43e018:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e01e:	add    ah,bh
  43e020:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e026:	add    ah,bh
  43e028:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e02e:	add    ah,bh
  43e030:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e036:	add    ah,bh
  43e038:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e03e:	add    al,BYTE PTR [eax]
  43e040:	jmp    0xe943e2e3
  43e045:	sahf   
  43e046:	add    al,BYTE PTR [eax]
  43e048:	jmp    0xe943e2eb
  43e04d:	sahf   
  43e04e:	add    al,BYTE PTR [eax]
  43e050:	jmp    0xe943e2f3
  43e055:	sahf   
  43e056:	add    al,BYTE PTR [eax]
  43e058:	jmp    0xe943e2fb
  43e05d:	sahf   
  43e05e:	add    al,BYTE PTR [eax]
  43e060:	jmp    0xe943e303
  43e065:	sahf   
  43e066:	add    al,BYTE PTR [eax]
  43e068:	jmp    0xe943e30b
  43e06d:	sahf   
  43e06e:	add    al,BYTE PTR [eax]
  43e070:	jmp    0x467e75
  43e075:	jmp    0xe943e318
  43e07a:	sahf   
  43e07b:	add    al,BYTE PTR [eax]
  43e07d:	jmp    0xe943e320
  43e082:	sahf   
  43e083:	add    al,BYTE PTR [eax]
  43e085:	jmp    0xe943e328
  43e08a:	sahf   
  43e08b:	add    al,BYTE PTR [eax]
  43e08d:	jmp    0xe943e330
  43e092:	sahf   
  43e093:	add    al,BYTE PTR [eax]
  43e095:	jmp    0xe943e338
  43e09a:	sahf   
  43e09b:	add    al,BYTE PTR [eax]
  43e09d:	jmp    0xe943e340
  43e0a2:	sahf   
  43e0a3:	add    al,BYTE PTR [eax]
  43e0a5:	jmp    0xe943e348
  43e0aa:	sahf   
  43e0ab:	add    al,BYTE PTR [eax]
  43e0ad:	jmp    0xe943e350
  43e0b2:	sahf   
  43e0b3:	add    al,BYTE PTR [eax]
  43e0b5:	jmp    0x43e358
  43e0ba:	hlt    
  43e0bb:	add    DWORD PTR [eax],eax
  43e0bd:	add    ah,al
  43e0bf:	add    DWORD PTR [eax],eax
  43e0c1:	add    ah,al
  43e0c3:	add    DWORD PTR [eax],eax
  43e0c5:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
  43e0cc:	add    BYTE PTR [eax],al
  43e0ce:	les    eax,FWORD PTR [ecx]
  43e0d0:	add    BYTE PTR [eax],al
  43e0d2:	les    eax,FWORD PTR [ecx]
  43e0d4:	add    BYTE PTR [eax],al
  43e0d6:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
  43e0dd:	add    BYTE PTR [eax],al
  43e0df:	test   BYTE PTR [ecx],al
  43e0e1:	add    BYTE PTR [eax],al
  43e0e3:	test   BYTE PTR [ecx],al
  43e0e5:	add    BYTE PTR [eax],al
  43e0e7:	je     0x43e0ea
  43e0e9:	add    BYTE PTR [eax],al
  43e0eb:	je     0x43e0ee
  43e0ed:	add    BYTE PTR [eax],al
  43e0ef:	test   BYTE PTR [ecx],al
  43e0f1:	add    BYTE PTR [eax],al
  43e0f3:	test   BYTE PTR [ecx],al
  43e0f5:	add    BYTE PTR [eax],al
  43e0f7:	je     0x43e0fa
  43e0f9:	add    BYTE PTR [eax],al
  43e0fb:	je     0x43e0fe
  43e0fd:	add    BYTE PTR [eax],al
  43e0ff:	inc    esp
  43e100:	add    DWORD PTR [eax],eax
  43e102:	add    BYTE PTR [ecx+eax*1+0x0],al
  43e106:	add    BYTE PTR [ecx+eax*1],dh
  43e109:	add    BYTE PTR [eax],al
  43e10b:	xor    al,0x1
  43e10d:	add    BYTE PTR [eax],al
  43e10f:	inc    esp
  43e110:	add    DWORD PTR [eax],eax
  43e112:	add    BYTE PTR [ecx+eax*1+0x0],al
  43e116:	add    BYTE PTR [ecx+eax*1],dh
  43e119:	add    BYTE PTR [eax],al
  43e11b:	xor    al,0x1
  43e11d:	add    BYTE PTR [eax],al
  43e11f:	add    al,0x1
  43e121:	add    BYTE PTR [eax],al
  43e123:	add    al,0x1
  43e125:	add    BYTE PTR [eax],al
  43e127:	hlt    
  43e128:	add    BYTE PTR [eax],al
  43e12a:	add    ah,dh
  43e12c:	add    BYTE PTR [eax],al
  43e12e:	add    BYTE PTR [ecx+eax*1],al
  43e131:	add    BYTE PTR [eax],al
  43e133:	popf   
  43e134:	fwait
  43e135:	cld    
  43e136:	call   FWORD PTR [ebp+0xfffc9b]
  43e13c:	popf   
  43e13d:	fwait
  43e13e:	cld    
  43e13f:	call   FWORD PTR [ebp-0x62000365]
  43e145:	fwait
  43e146:	cld    
  43e147:	call   FWORD PTR [ebp-0x62000365]
  43e14d:	fwait
  43e14e:	cld    
  43e14f:	call   FWORD PTR [ebp-0x62000365]
  43e155:	fwait
  43e156:	cld    
  43e157:	call   FWORD PTR [ebp-0x62000365]
  43e15d:	fwait
  43e15e:	cld    
  43e15f:	call   FWORD PTR [ebp-0x62000367]
  43e165:	cdq    
  43e166:	cld    
  43e167:	call   FWORD PTR [ebp-0x62000367]
  43e16d:	cdq    
  43e16e:	cld    
  43e16f:	call   FWORD PTR [ebp-0x62000367]
  43e175:	cdq    
  43e176:	cld    
  43e177:	call   FWORD PTR [ebp-0x62000367]
  43e17d:	cdq    
  43e17e:	cld    
  43e17f:	call   FWORD PTR [ebp-0x62000367]
  43e185:	cdq    
  43e186:	cld    
  43e187:	call   FWORD PTR [ebp-0x62000367]
  43e18d:	cdq    
  43e18e:	cld    
  43e18f:	call   FWORD PTR [ebp-0x62000367]
  43e195:	cdq    
  43e196:	cld    
  43e197:	call   FWORD PTR [ebp-0x62000367]
  43e19d:	cdq    
  43e19e:	cld    
  43e19f:	inc    DWORD PTR [eax]
  43e1a1:	popf   
  43e1a2:	cdq    
  43e1a3:	cld    
  43e1a4:	call   FWORD PTR [ebp-0x62000367]
  43e1aa:	cdq    
  43e1ab:	cld    
  43e1ac:	call   FWORD PTR [ebp-0x62fc18fe]
  43e1b2:	add    ah,bh
  43e1b4:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1ba:	add    ah,bh
  43e1bc:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1c2:	add    ah,bh
  43e1c4:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1ca:	add    ah,bh
  43e1cc:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1d2:	add    ah,bh
  43e1d4:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1da:	add    ah,bh
  43e1dc:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1e2:	add    ah,bh
  43e1e4:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1ea:	add    ah,bh
  43e1ec:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1f2:	add    ah,bh
  43e1f4:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e1fa:	add    ah,bh
  43e1fc:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e202:	add    ah,bh
  43e204:	add    eax,DWORD PTR [eax]
  43e206:	popf   
  43e207:	add    ah,bh
  43e209:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e20f:	add    ah,bh
  43e211:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e217:	add    ah,bh
  43e219:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e21f:	add    ah,bh
  43e221:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e227:	add    al,BYTE PTR [eax]
  43e229:	jmp    0xe943e4cc
  43e22e:	sahf   
  43e22f:	add    al,BYTE PTR [eax]
  43e231:	jmp    0xe943e4d4
  43e236:	sahf   
  43e237:	add    al,BYTE PTR [eax]
  43e239:	jmp    0xe943e4dc
  43e23e:	sahf   
  43e23f:	add    al,BYTE PTR [eax]
  43e241:	jmp    0xe943e4e4
  43e246:	sahf   
  43e247:	add    al,BYTE PTR [eax]
  43e249:	jmp    0xe943e4ec
  43e24e:	sahf   
  43e24f:	add    al,BYTE PTR [eax]
  43e251:	jmp    0xe943e4f4
  43e256:	sahf   
  43e257:	add    al,BYTE PTR [eax]
  43e259:	jmp    0xe943e4fc
  43e25e:	sahf   
  43e25f:	add    al,BYTE PTR [eax]
  43e261:	jmp    0xe943e504
  43e266:	sahf   
  43e267:	add    al,BYTE PTR [eax]
  43e269:	jmp    0x46806e
  43e26e:	jmp    0xe943e511
  43e273:	sahf   
  43e274:	add    al,BYTE PTR [eax]
  43e276:	jmp    0xe943e519
  43e27b:	sahf   
  43e27c:	add    al,BYTE PTR [eax]
  43e27e:	jmp    0xe943e521
  43e283:	sahf   
  43e284:	add    al,BYTE PTR [eax]
  43e286:	jmp    0xe943e529
  43e28b:	sahf   
  43e28c:	add    al,BYTE PTR [eax]
  43e28e:	jmp    0xe943e531
  43e293:	sahf   
  43e294:	add    al,BYTE PTR [eax]
  43e296:	jmp    0xe943e539
  43e29b:	sahf   
  43e29c:	add    al,BYTE PTR [eax]
  43e29e:	jmp    0x43e541
  43e2a3:	add    al,0x6
  43e2a5:	add    BYTE PTR [eax],al
  43e2a7:	add    al,0x6
  43e2a9:	add    BYTE PTR [eax],al
  43e2ab:	hlt    
  43e2ac:	add    eax,0x5f40000
  43e2b1:	add    BYTE PTR [eax],al
  43e2b3:	add    al,0x6
  43e2b5:	add    BYTE PTR [eax],al
  43e2b7:	add    al,0x6
  43e2b9:	add    BYTE PTR [eax],al
  43e2bb:	hlt    
  43e2bc:	add    eax,0x5f40000
  43e2c1:	add    BYTE PTR [eax],al
  43e2c3:	les    eax,FWORD PTR ds:0x5c40000
  43e2c9:	add    BYTE PTR [eax],al
  43e2cb:	mov    ah,0x5
  43e2cd:	add    BYTE PTR [eax],al
  43e2cf:	add    BYTE PTR [ebp+eax*1+0x5c40000],dh
  43e2d6:	add    BYTE PTR [eax],al
  43e2d8:	les    eax,FWORD PTR ds:0x5b40000
  43e2de:	add    BYTE PTR [eax],al
  43e2e0:	mov    ah,0x5
  43e2e2:	add    BYTE PTR [eax],al
  43e2e4:	test   BYTE PTR ds:0x5840000,al
  43e2ea:	add    BYTE PTR [eax],al
  43e2ec:	je     0x43e2f3
  43e2ee:	add    BYTE PTR [eax],al
  43e2f0:	je     0x43e2f7
  43e2f2:	add    BYTE PTR [eax],al
  43e2f4:	test   BYTE PTR ds:0x5840000,al
  43e2fa:	add    BYTE PTR [eax],al
  43e2fc:	je     0x43e303
  43e2fe:	add    BYTE PTR [eax],al
  43e300:	je     0x43e307
  43e302:	add    BYTE PTR [eax],al
  43e304:	inc    esp
  43e305:	add    eax,0x5440000
  43e30a:	add    BYTE PTR [eax],al
  43e30c:	xor    al,0x5
  43e30e:	add    BYTE PTR [eax],al
  43e310:	xor    al,0x5
  43e312:	add    BYTE PTR [eax],al
  43e314:	inc    esp
  43e315:	add    eax,0x5440000
  43e31a:	add    BYTE PTR [eax],al
  43e31c:	popf   
  43e31d:	imul   edi,esp,0xffffffff
  43e320:	popf   
  43e321:	imul   edi,esp,0xffffffff
  43e324:	popf   
  43e325:	imul   edi,esp,0xffffffff
  43e328:	popf   
  43e329:	imul   edi,esp,0xffffffff
  43e32c:	popf   
  43e32d:	imul   edi,esp,0xffffffff
  43e330:	popf   
  43e331:	imul   edi,esp,0xffffffff
  43e334:	add    BYTE PTR [ebp-0x62000395],bl
  43e33a:	imul   edi,esp,0xffffffff
  43e33d:	popf   
  43e33e:	imul   edi,esp,0xffffffff
  43e341:	popf   
  43e342:	imul   edi,esp,0xffffffff
  43e345:	popf   
  43e346:	imul   edi,esp,0xffffffff
  43e349:	popf   
  43e34a:	imul   edi,esp,0xffffffff
  43e34d:	popf   
  43e34e:	imul   edi,esp,0xffffffff
  43e351:	popf   
  43e352:	imul   edi,esp,0xffffffff
  43e355:	popf   
  43e356:	imul   edi,esp,0xffffffff
  43e359:	popf   
  43e35a:	imul   edi,esp,0xffffffff
  43e35d:	popf   
  43e35e:	imul   edi,esp,0xffffffff
  43e361:	popf   
  43e362:	imul   edi,esp,0xffffffff
  43e365:	popf   
  43e366:	imul   edi,esp,0xfc699dff
  43e36c:	call   FWORD PTR [ebp-0x62000397]
  43e372:	imul   edi,esp,0xfc699dff
  43e378:	call   FWORD PTR [ebp-0x62000397]
  43e37e:	imul   edi,esp,0xfc699dff
  43e384:	call   FWORD PTR [ebp-0x62000397]
  43e38a:	imul   edi,esp,0xfc699dff
  43e390:	call   FWORD PTR [ebp-0x62000397]
  43e396:	add    ah,bh
  43e398:	add    eax,DWORD PTR [eax]
  43e39a:	popf   
  43e39b:	add    ah,bh
  43e39d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3a3:	add    ah,bh
  43e3a5:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3ab:	add    ah,bh
  43e3ad:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3b3:	add    ah,bh
  43e3b5:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3bb:	add    ah,bh
  43e3bd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3c3:	add    ah,bh
  43e3c5:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3cb:	add    ah,bh
  43e3cd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3d3:	add    ah,bh
  43e3d5:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3db:	add    ah,bh
  43e3dd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3e3:	add    ah,bh
  43e3e5:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3eb:	add    ah,bh
  43e3ed:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3f3:	add    ah,bh
  43e3f5:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e3fb:	add    ah,bh
  43e3fd:	add    eax,DWORD PTR [eax]
  43e3ff:	popf   
  43e400:	add    ah,bh
  43e402:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e408:	add    ah,bh
  43e40a:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e410:	add    al,BYTE PTR [eax]
  43e412:	jmp    0xe943e6b5
  43e417:	sahf   
  43e418:	add    al,BYTE PTR [eax]
  43e41a:	jmp    0xe943e6bd
  43e41f:	sahf   
  43e420:	add    al,BYTE PTR [eax]
  43e422:	jmp    0xe943e6c5
  43e427:	sahf   
  43e428:	add    al,BYTE PTR [eax]
  43e42a:	jmp    0xe943e6cd
  43e42f:	sahf   
  43e430:	add    al,BYTE PTR [eax]
  43e432:	jmp    0xe943e6d5
  43e437:	sahf   
  43e438:	add    al,BYTE PTR [eax]
  43e43a:	jmp    0xe943e6dd
  43e43f:	sahf   
  43e440:	add    al,BYTE PTR [eax]
  43e442:	jmp    0xe943e6e5
  43e447:	sahf   
  43e448:	add    al,BYTE PTR [eax]
  43e44a:	jmp    0xe943e6ed
  43e44f:	sahf   
  43e450:	add    al,BYTE PTR [eax]
  43e452:	jmp    0xe943e6f5
  43e457:	sahf   
  43e458:	add    al,BYTE PTR [eax]
  43e45a:	jmp    0xe943e6fd
  43e45f:	sahf   
  43e460:	add    al,BYTE PTR [eax]
  43e462:	jmp    0x468267
  43e467:	jmp    0xe943e70a
  43e46c:	sahf   
  43e46d:	add    al,BYTE PTR [eax]
  43e46f:	jmp    0xe943e712
  43e474:	sahf   
  43e475:	add    al,BYTE PTR [eax]
  43e477:	jmp    0xe943e71a
  43e47c:	sahf   
  43e47d:	add    al,BYTE PTR [eax]
  43e47f:	jmp    0xe943e722
  43e484:	sahf   
  43e485:	add    al,BYTE PTR [eax]
  43e487:	jmp    0x43e72a
  43e48c:	inc    esp
  43e48d:	add    al,BYTE PTR [eax]
  43e48f:	add    BYTE PTR [edx+eax*1],dh
  43e492:	add    BYTE PTR [eax],al
  43e494:	xor    al,0x2
  43e496:	add    BYTE PTR [eax],al
  43e498:	inc    esp
  43e499:	add    al,BYTE PTR [eax]
  43e49b:	add    BYTE PTR [edx+eax*1+0x0],al
  43e49f:	add    BYTE PTR [edx+eax*1],dh
  43e4a2:	add    BYTE PTR [eax],al
  43e4a4:	xor    al,0x2
  43e4a6:	add    BYTE PTR [eax],al
  43e4a8:	add    al,0x2
  43e4aa:	add    BYTE PTR [eax],al
  43e4ac:	add    al,0x2
  43e4ae:	add    BYTE PTR [eax],al
  43e4b0:	hlt    
  43e4b1:	add    DWORD PTR [eax],eax
  43e4b3:	add    ah,dh
  43e4b5:	add    DWORD PTR [eax],eax
  43e4b7:	add    BYTE PTR [edx+eax*1],al
  43e4ba:	add    BYTE PTR [eax],al
  43e4bc:	add    al,0x2
  43e4be:	add    BYTE PTR [eax],al
  43e4c0:	hlt    
  43e4c1:	add    DWORD PTR [eax],eax
  43e4c3:	add    ah,dh
  43e4c5:	add    DWORD PTR [eax],eax
  43e4c7:	add    BYTE PTR [eax],al
  43e4c9:	les    eax,FWORD PTR [ecx]
  43e4cb:	add    BYTE PTR [eax],al
  43e4cd:	les    eax,FWORD PTR [ecx]
  43e4cf:	add    BYTE PTR [eax],al
  43e4d1:	mov    ah,0x1
  43e4d3:	add    BYTE PTR [eax],al
  43e4d5:	mov    ah,0x1
  43e4d7:	add    BYTE PTR [eax],al
  43e4d9:	les    eax,FWORD PTR [ecx]
  43e4db:	add    BYTE PTR [eax],al
  43e4dd:	les    eax,FWORD PTR [ecx]
  43e4df:	add    BYTE PTR [eax],al
  43e4e1:	mov    ah,0x1
  43e4e3:	add    BYTE PTR [eax],al
  43e4e5:	mov    ah,0x1
  43e4e7:	add    BYTE PTR [eax],al
  43e4e9:	test   BYTE PTR [ecx],al
  43e4eb:	add    BYTE PTR [eax],al
  43e4ed:	test   BYTE PTR [ecx],al
  43e4ef:	add    BYTE PTR [eax],al
  43e4f1:	je     0x43e4f4
  43e4f3:	add    BYTE PTR [eax],al
  43e4f5:	je     0x43e4f8
  43e4f7:	add    BYTE PTR [eax],al
  43e4f9:	test   BYTE PTR [ecx],al
  43e4fb:	add    BYTE PTR [eax],al
  43e4fd:	test   BYTE PTR [ecx],al
  43e4ff:	add    BYTE PTR [eax],al
  43e501:	je     0x43e504
  43e503:	add    BYTE PTR [eax],al
  43e505:	popf   
  43e506:	imul   edi,esp,0xffffffff
  43e509:	popf   
  43e50a:	imul   edi,esp,0xffffffff
  43e50d:	popf   
  43e50e:	imul   edi,esp,0xffffffff
  43e511:	popf   
  43e512:	imul   edi,esp,0xffffffff
  43e515:	popf   
  43e516:	imul   edi,esp,0xffffffff
  43e519:	popf   
  43e51a:	imul   edi,esp,0xffffffff
  43e51d:	popf   
  43e51e:	imul   edi,esp,0xffffffff
  43e521:	popf   
  43e522:	imul   edi,esp,0xffffffff
  43e525:	popf   
  43e526:	imul   edi,esp,0xffffffff
  43e529:	popf   
  43e52a:	imul   edi,esp,0xffffffff
  43e52d:	add    BYTE PTR [ebp-0x62000395],bl
  43e533:	imul   edi,esp,0xffffffff
  43e536:	popf   
  43e537:	imul   edi,esp,0xffffffff
  43e53a:	popf   
  43e53b:	imul   edi,esp,0xffffffff
  43e53e:	popf   
  43e53f:	imul   edi,esp,0xffffffff
  43e542:	popf   
  43e543:	imul   edi,esp,0xffffffff
  43e546:	popf   
  43e547:	imul   edi,esp,0xffffffff
  43e54a:	popf   
  43e54b:	imul   edi,esp,0xffffffff
  43e54e:	popf   
  43e54f:	imul   edi,esp,0xffffffff
  43e552:	popf   
  43e553:	imul   edi,esp,0xffffffff
  43e556:	popf   
  43e557:	imul   edi,esp,0xffffffff
  43e55a:	popf   
  43e55b:	imul   edi,esp,0xffffffff
  43e55e:	popf   
  43e55f:	imul   edi,esp,0xffffffff
  43e562:	popf   
  43e563:	imul   edi,esp,0xffffffff
  43e566:	popf   
  43e567:	imul   edi,esp,0xffffffff
  43e56a:	popf   
  43e56b:	imul   edi,esp,0xfc699dff
  43e571:	call   FWORD PTR [ebp-0x62000397]
  43e577:	imul   edi,esp,0xfc699dff
  43e57d:	call   FWORD PTR [ebp-0x62fc18fe]
  43e583:	add    ah,bh
  43e585:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e58b:	add    ah,bh
  43e58d:	add    ebx,DWORD PTR [ebp+0x3e702]
  43e593:	popf   
  43e594:	add    ah,bh
  43e596:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e59c:	add    ah,bh
  43e59e:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5a4:	add    ah,bh
  43e5a6:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5ac:	add    ah,bh
  43e5ae:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5b4:	add    ah,bh
  43e5b6:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5bc:	add    ah,bh
  43e5be:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5c4:	add    ah,bh
  43e5c6:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5cc:	add    ah,bh
  43e5ce:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5d4:	add    ah,bh
  43e5d6:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5dc:	add    ah,bh
  43e5de:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5e4:	add    ah,bh
  43e5e6:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5ec:	add    ah,bh
  43e5ee:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e5f4:	add    ah,bh
  43e5f6:	add    eax,DWORD PTR [eax]
  43e5f8:	popf   
  43e5f9:	add    al,BYTE PTR [eax]
  43e5fb:	jmp    0xe943e89e
  43e600:	sahf   
  43e601:	add    al,BYTE PTR [eax]
  43e603:	jmp    0xe943e8a6
  43e608:	sahf   
  43e609:	add    al,BYTE PTR [eax]
  43e60b:	jmp    0xe943e8ae
  43e610:	sahf   
  43e611:	add    al,BYTE PTR [eax]
  43e613:	jmp    0xe943e8b6
  43e618:	sahf   
  43e619:	add    al,BYTE PTR [eax]
  43e61b:	jmp    0xe943e8be
  43e620:	sahf   
  43e621:	add    al,BYTE PTR [eax]
  43e623:	jmp    0xe943e8c6
  43e628:	sahf   
  43e629:	add    al,BYTE PTR [eax]
  43e62b:	jmp    0xe943e8ce
  43e630:	sahf   
  43e631:	add    al,BYTE PTR [eax]
  43e633:	jmp    0xe943e8d6
  43e638:	sahf   
  43e639:	add    al,BYTE PTR [eax]
  43e63b:	jmp    0xe943e8de
  43e640:	sahf   
  43e641:	add    al,BYTE PTR [eax]
  43e643:	jmp    0xe943e8e6
  43e648:	sahf   
  43e649:	add    al,BYTE PTR [eax]
  43e64b:	jmp    0xe943e8ee
  43e650:	sahf   
  43e651:	add    al,BYTE PTR [eax]
  43e653:	jmp    0xe943e8f6
  43e658:	sahf   
  43e659:	add    al,BYTE PTR [eax]
  43e65b:	jmp    0x468460
  43e660:	jmp    0xe943e903
  43e665:	sahf   
  43e666:	add    al,BYTE PTR [eax]
  43e668:	jmp    0xe943e90b
  43e66d:	sahf   
  43e66e:	add    al,BYTE PTR [eax]
  43e670:	jmp    0x43e913
  43e675:	je     0x43e67d
  43e677:	add    BYTE PTR [eax],al
  43e679:	je     0x43e681
  43e67b:	add    BYTE PTR [eax],al
  43e67d:	test   BYTE PTR [esi],al
  43e67f:	add    BYTE PTR [eax],al
  43e681:	test   BYTE PTR [esi],al
  43e683:	add    BYTE PTR [eax],al
  43e685:	je     0x43e68d
  43e687:	add    BYTE PTR [eax],al
  43e689:	je     0x43e691
  43e68b:	add    BYTE PTR [eax],al
  43e68d:	inc    esp
  43e68e:	push   es
  43e68f:	add    BYTE PTR [eax],al
  43e691:	inc    esp
  43e692:	push   es
  43e693:	add    BYTE PTR [eax],al
  43e695:	xor    al,0x6
  43e697:	add    BYTE PTR [eax],al
  43e699:	xor    al,0x6
  43e69b:	add    BYTE PTR [eax],al
  43e69d:	inc    esp
  43e69e:	push   es
  43e69f:	add    BYTE PTR [eax],al
  43e6a1:	inc    esp
  43e6a2:	push   es
  43e6a3:	add    BYTE PTR [eax],al
  43e6a5:	xor    al,0x6
  43e6a7:	add    BYTE PTR [eax],al
  43e6a9:	xor    al,0x6
  43e6ab:	add    BYTE PTR [eax],al
  43e6ad:	add    al,0x6
  43e6af:	add    BYTE PTR [eax],al
  43e6b1:	add    al,0x6
  43e6b3:	add    BYTE PTR [eax],al
  43e6b5:	hlt    
  43e6b6:	add    eax,0x5f40000
  43e6bb:	add    BYTE PTR [eax],al
  43e6bd:	add    al,0x6
  43e6bf:	add    BYTE PTR [eax],al
  43e6c1:	add    BYTE PTR [esi+eax*1],al
  43e6c4:	add    BYTE PTR [eax],al
  43e6c6:	hlt    
  43e6c7:	add    eax,0x5f40000
  43e6cc:	add    BYTE PTR [eax],al
  43e6ce:	les    eax,FWORD PTR ds:0x5c40000
  43e6d4:	add    BYTE PTR [eax],al
  43e6d6:	mov    ah,0x5
  43e6d8:	add    BYTE PTR [eax],al
  43e6da:	mov    ah,0x5
  43e6dc:	add    BYTE PTR [eax],al
  43e6de:	les    eax,FWORD PTR ds:0x5c40000
  43e6e4:	add    BYTE PTR [eax],al
  43e6e6:	mov    ah,0x5
  43e6e8:	add    BYTE PTR [eax],al
  43e6ea:	mov    ah,0x5
  43e6ec:	add    BYTE PTR [eax],al
  43e6ee:	popf   
  43e6ef:	imul   edi,esp,0xffffffff
  43e6f2:	popf   
  43e6f3:	imul   edi,esp,0xffffffff
  43e6f6:	popf   
  43e6f7:	imul   edi,esp,0xffffffff
  43e6fa:	popf   
  43e6fb:	imul   edi,esp,0xffffffff
  43e6fe:	popf   
  43e6ff:	imul   edi,esp,0xffffffff
  43e702:	popf   
  43e703:	imul   edi,esp,0xffffffff
  43e706:	popf   
  43e707:	imul   edi,esp,0xffffffff
  43e70a:	popf   
  43e70b:	imul   edi,esp,0xffffffff
  43e70e:	popf   
  43e70f:	imul   edi,esp,0xffffffff
  43e712:	popf   
  43e713:	imul   edi,esp,0xffffffff
  43e716:	popf   
  43e717:	imul   edi,esp,0xffffffff
  43e71a:	popf   
  43e71b:	imul   edi,esp,0xffffffff
  43e71e:	popf   
  43e71f:	imul   edi,esp,0xffffffff
  43e722:	popf   
  43e723:	imul   edi,esp,0xffffffff
  43e726:	add    BYTE PTR [ebp-0x62000395],bl
  43e72c:	imul   edi,esp,0xffffffff
  43e72f:	popf   
  43e730:	imul   edi,esp,0xffffffff
  43e733:	popf   
  43e734:	imul   edi,esp,0xffffffff
  43e737:	popf   
  43e738:	imul   edi,esp,0xffffffff
  43e73b:	popf   
  43e73c:	imul   edi,esp,0xffffffff
  43e73f:	popf   
  43e740:	imul   edi,esp,0xffffffff
  43e743:	popf   
  43e744:	imul   edi,esp,0xffffffff
  43e747:	popf   
  43e748:	imul   edi,esp,0xffffffff
  43e74b:	popf   
  43e74c:	imul   edi,esp,0xffffffff
  43e74f:	popf   
  43e750:	imul   edi,esp,0xffffffff
  43e753:	popf   
  43e754:	imul   edi,esp,0xffffffff
  43e757:	popf   
  43e758:	imul   edi,esp,0xffffffff
  43e75b:	popf   
  43e75c:	imul   edi,esp,0xffffffff
  43e75f:	popf   
  43e760:	imul   edi,esp,0xffffffff
  43e763:	popf   
  43e764:	imul   edi,esp,0xffffffff
  43e767:	popf   
  43e768:	add    ah,bh
  43e76a:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e770:	add    ah,bh
  43e772:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e778:	add    ah,bh
  43e77a:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e780:	add    ah,bh
  43e782:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e788:	add    ah,bh
  43e78a:	add    eax,DWORD PTR [eax]
  43e78c:	popf   
  43e78d:	add    ah,bh
  43e78f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e795:	add    ah,bh
  43e797:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e79d:	add    ah,bh
  43e79f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7a5:	add    ah,bh
  43e7a7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7ad:	add    ah,bh
  43e7af:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7b5:	add    ah,bh
  43e7b7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7bd:	add    ah,bh
  43e7bf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7c5:	add    ah,bh
  43e7c7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7cd:	add    ah,bh
  43e7cf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7d5:	add    ah,bh
  43e7d7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e7dd:	add    ah,bh
  43e7df:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  43e7e5:	add    al,BYTE PTR [eax]
  43e7e7:	jmp    0xe943ea8a
  43e7ec:	sahf   
  43e7ed:	add    al,BYTE PTR [eax]
  43e7ef:	jmp    0x4685f4
  43e7f4:	jmp    0xe943ea97
  43e7f9:	sahf   
  43e7fa:	add    al,BYTE PTR [eax]
  43e7fc:	jmp    0xe943ea9f
  43e801:	sahf   
  43e802:	add    al,BYTE PTR [eax]
  43e804:	jmp    0xe943eaa7
  43e809:	sahf   
  43e80a:	add    al,BYTE PTR [eax]
  43e80c:	jmp    0xe943eaaf
  43e811:	sahf   
  43e812:	add    al,BYTE PTR [eax]
  43e814:	jmp    0xe943eab7
  43e819:	sahf   
  43e81a:	add    al,BYTE PTR [eax]
  43e81c:	jmp    0xe943eabf
  43e821:	sahf   
  43e822:	add    al,BYTE PTR [eax]
  43e824:	jmp    0xe943eac7
  43e829:	sahf   
  43e82a:	add    al,BYTE PTR [eax]
  43e82c:	jmp    0xe943eacf
  43e831:	sahf   
  43e832:	add    al,BYTE PTR [eax]
  43e834:	jmp    0xe943ead7
  43e839:	sahf   
  43e83a:	add    al,BYTE PTR [eax]
  43e83c:	jmp    0xe943eadf
  43e841:	sahf   
  43e842:	add    al,BYTE PTR [eax]
  43e844:	jmp    0xe943eae7
  43e849:	sahf   
  43e84a:	add    al,BYTE PTR [eax]
  43e84c:	jmp    0xe943eaef
  43e851:	sahf   
  43e852:	add    al,BYTE PTR [eax]
  43e854:	jmp    0x468659
  43e859:	jmp    0x43eafc
  43e85e:	mov    ah,0x2
  43e860:	add    BYTE PTR [eax],al
  43e862:	les    eax,FWORD PTR [edx]
  43e864:	add    BYTE PTR [eax],al
  43e866:	les    eax,FWORD PTR [edx]
  43e868:	add    BYTE PTR [eax],al
  43e86a:	mov    ah,0x2
  43e86c:	add    BYTE PTR [eax],al
  43e86e:	mov    ah,0x2
  43e870:	add    BYTE PTR [eax],al
  43e872:	test   BYTE PTR [edx],al
  43e874:	add    BYTE PTR [eax],al
  43e876:	xchg   ebp,eax
  43e877:	jg     0x43e8ea
  43e879:	and    ecx,esp
  43e87b:	or     DWORD PTR [ecx],eax
  43e87d:	std    
  43e87e:	leave  
  43e87f:	xlat   BYTE PTR ds:[ebx]
  43e880:	xor    eax,0xf9302552
  43e885:	inc    edx
  43e886:	push   edx
  43e887:	and    al,0xb7
  43e889:	gs xchg esp,eax
  43e88b:	sub    edi,DWORD PTR [ecx]
  43e88d:	jo     0x43e90d
  43e88f:	(bad)  
  43e890:	or     eax,0xa6cd7955
  43e895:	gs popa 
  43e897:	js     0x43e8aa
  43e899:	dec    ecx
  43e89a:	inc    eax
  43e89c:	enter  0xee87,0x11
  43e8a0:	pop    ebx
  43e8a2:	or     BYTE PTR [ebp-0x36],ah
  43e8a5:	adc    eax,0x40e20795
  43e8aa:	mov    WORD PTR [esi+0x4d],ss
  43e8ad:	pop    edx
  43e8ae:	mov    eax,ds:0xacffed7
  43e8b3:	shl    BYTE PTR [ebp+edi*4+0x24],1
  43e8b7:	xchg   ebx,eax
  43e8b8:	imul   eax,edx,0x0
  43e8bb:	jmp    0x7a4a:0xe89f3070
  43e8c2:	clc    
  43e8c3:	jb     0x43e892
  43e8c5:	jo     0x43e90a
  43e8c7:	lahf   
  43e8c8:	cld    
  43e8c9:	cmp    eax,0xd83f6ad0
  43e8ce:	dec    ecx
  43e8cf:	std    
  43e8d0:	sub    eax,DWORD PTR [eax-0x58f78e2f]
  43e8d6:	inc    esi
  43e8d7:	popf   
  43e8d8:	mov    bh,BYTE PTR [eax]
  43e8da:	mov    al,0x6
  43e8dc:	sub    esi,ebp
  43e8de:	push   ds
  43e8df:	ja     0x43e8cd
  43e8e1:	mov    eax,ds:0x64d7529
  43e8e6:	adc    edx,DWORD PTR [ebp+0x28]
  43e8e9:	adc    BYTE PTR cs:[esp+ecx*4],0x29
  43e8ee:	test   DWORD PTR ds:0xafa1c8c7,ebp
  43e8f4:	xchg   edx,eax
  43e8f5:	aad    0xf6
  43e8f7:	loopne 0x43e8ef
  43e8f9:	xchg   edx,eax
  43e8fa:	pop    esp
  43e8fb:	shl    BYTE PTR [edx+0x3d],0x45
  43e8ff:	rol    DWORD PTR [eax-0x53ce212a],0x5
  43e906:	xor    eax,0x33527b5f
  43e90b:	daa    
  43e90c:	sti    
  43e90d:	push   esi
  43e90e:	imul   esp,edi,0x7ff0c0ae
  43e914:	mov    ds:0xe7b41b74,eax
  43e919:	div    BYTE PTR [ebx]
  43e91b:	retf   
  43e91c:	fucomi st,st(4)
  43e91e:	outs   dx,DWORD PTR ds:[esi]
  43e91f:	add    ah,cl
  43e921:	cld    
  43e922:	sbb    al,0x5f
  43e924:	sbb    dh,BYTE PTR [eax+0x16]
  43e927:	loop   0x43e925
  43e929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e92a:	stc    
  43e92b:	push   es
  43e92c:	sub    al,0x75
  43e92e:	shl    DWORD PTR [eax],1
  43e930:	mov    cl,ch
  43e932:	ret    
  43e933:	ror    edx,cl
  43e935:	mov    bh,0xa
  43e937:	push   esi
  43e938:	aad    0x7d
  43e93a:	push   edx
  43e93b:	jae    0x43e90a
  43e93d:	mov    al,0x27
  43e93f:	rcl    DWORD PTR [edx+0x1eb669a],1
  43e945:	std    
  43e946:	je     0x43e9c5
  43e948:	and    DWORD PTR [ecx+esi*2-0x13c8c43b],esi
  43e94f:	cli    
  43e950:	retf   
  43e951:	add    eax,edi
  43e953:	retf   
  43e954:	mov    bl,0xb9
  43e956:	pop    es
  43e957:	dec    ebx
  43e958:	out    dx,eax
  43e959:	into   
  43e95a:	test   DWORD PTR ds:0xdcb4c43,esp
  43e960:	retf   
  43e961:	dec    ecx
  43e962:	xor    BYTE PTR [eax+esi*2],bl
  43e965:	mov    BYTE PTR [eax-0x46],cl
  43e968:	out    0x11,eax
  43e96a:	push   es
  43e96b:	aam    0xc7
  43e96d:	rol    eax,cl
  43e96f:	jp     0x43e996
  43e971:	(bad)  
  43e972:	push   ebp
  43e973:	push   edi
  43e974:	dec    ecx
  43e975:	das    
  43e976:	and    cl,BYTE PTR [ecx+eax*2-0x25]
  43e97a:	dec    esi
  43e97b:	jmp    0x43e95d
  43e97d:	ss sbb al,0x3b
  43e980:	xor    BYTE PTR [ebx+0x700870b],0x7
  43e987:	sbb    edx,DWORD PTR [esi-0x29dc4598]
  43e98d:	out    0x4f,eax
  43e98f:	sub    esi,DWORD PTR [eax]
  43e991:	inc    ecx
  43e992:	xchg   ebp,eax
  43e993:	push   0x1f
  43e995:	jl     0x43e940
  43e997:	push   cs
  43e998:	mov    eax,ds:0x8bcc4473
  43e99d:	test   BYTE PTR [ebp+0x52582a7f],0x9a
  43e9a4:	sbb    cl,ah
  43e9a6:	int    0xf1
  43e9a8:	cs dec ebp
  43e9aa:	ret    0x283f
  43e9ad:	aad    0x4b
  43e9af:	lahf   
  43e9b0:	fwait
  43e9b1:	jge    0x43ea09
  43e9b3:	push   0x1501e3a3
  43e9b8:	jo     0x43ea1d
  43e9ba:	and    esi,ecx
  43e9bc:	xchg   BYTE PTR [edx-0x3183e4fa],bl
  43e9c2:	inc    ecx
  43e9c3:	lds    ecx,FWORD PTR [ebp+0x69ad03a1]
  43e9c9:	pop    edi
  43e9ca:	or     eax,0xd0fc8f00
  43e9cf:	pop    edx
  43e9d0:	sub    al,0xec
  43e9d2:	pop    eax
  43e9d3:	sbb    BYTE PTR [ecx+0x7b],dh
  43e9d6:	jl     0x43e95d
  43e9d8:	sub    DWORD PTR [bp+di],esp
  43e9db:	mov    esi,0xe1f67548
  43e9e0:	mov    edi,0xc38132a1
  43e9e5:	mov    bh,0x7f
  43e9e7:	sub    BYTE PTR [ebp-0x5fa81e00],0x87
  43e9ee:	push   ebp
  43e9ef:	mov    eax,ds:0x2a62092f
  43e9f4:	cdq    
  43e9f5:	jb     0x43e99d
  43e9f7:	xchg   esp,eax
  43e9f8:	dec    ebx
  43e9f9:	mov    esi,0x27e4cef4
  43e9fe:	pop    ebp
  43e9ff:	and    ecx,DWORD PTR [esi-0x754ef377]
  43ea05:	in     al,0xe1
  43ea07:	xor    eax,0xca597b14
  43ea0c:	adc    BYTE PTR [ebp+0x42],al
  43ea0f:	pop    ebp
  43ea10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ea11:	mov    edx,0x1d69663
  43ea16:	fdiv   DWORD PTR [esp+esi*1]
  43ea19:	aaa    
  43ea1a:	in     al,dx
  43ea1b:	stos   DWORD PTR es:[edi],eax
  43ea1c:	dec    edi
  43ea1d:	les    ebx,FWORD PTR [ebx-0x3c8f3fd0]
  43ea23:	gs into 
  43ea25:	and    al,0xa3
  43ea27:	sar    DWORD PTR [ebx-0x705b19c1],1
  43ea2d:	jo     0x43ea61
  43ea2f:	pop    esp
  43ea30:	test   DWORD PTR [esi+edx*8+0x21],edi
  43ea34:	pop    es
  43ea35:	in     al,0xd5
  43ea37:	scas   al,BYTE PTR es:[edi]
  43ea38:	out    dx,al
  43ea39:	mov    edi,0x58153a1f
  43ea3e:	loopne 0x43ea6b
  43ea40:	(bad)  
  43ea41:	popa   
  43ea42:	push   edi
  43ea43:	mov    ecx,0xe4340099
  43ea48:	bound  edx,QWORD PTR [ebp+0x3d]
  43ea4b:	mov    bl,BYTE PTR [ebp-0x25]
  43ea4e:	add    BYTE PTR [esi],ch
  43ea50:	mov    ebp,0xe50b3adb
  43ea55:	xor    al,0x40
  43ea57:	cld    
  43ea58:	aam    0x5
  43ea5a:	pop    edx
  43ea5b:	and    DWORD PTR [ebp-0x2],ecx
  43ea5e:	xlat   BYTE PTR ds:[ebx]
  43ea5f:	push   esi
  43ea60:	(bad)
  43ea63:	inc    edi
  43ea64:	hlt    
  43ea65:	les    eax,FWORD PTR [ebx+ecx*8-0x4]
  43ea69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ea6a:	outs   dx,DWORD PTR ds:[esi]
  43ea6b:	xor    al,0xd6
  43ea6d:	mov    WORD PTR [edx+0x3a],ds
  43ea70:	cli    
  43ea71:	aaa    
  43ea72:	cmp    dh,bh
  43ea74:	out    dx,al
  43ea75:	mov    eax,0xcf017e5d
  43ea7a:	frstor [ebx]
  43ea7c:	popa   
  43ea7d:	pop    ss
  43ea7e:	rcr    BYTE PTR [ecx+0x3f],cl
  43ea81:	retf   
  43ea82:	int3   
  43ea83:	call   0x2695d605
  43ea88:	enter  0x8a07,0xa5
  43ea8c:	jp     0x43ead8
  43ea8e:	call   DWORD PTR [esi]
  43ea90:	push   0x7dc8c35a
  43ea95:	jmp    0x43eae8
  43ea97:	repz fldcw WORD PTR [ecx+ecx*8]
  43ea9b:	mov    ecx,0x16306e7d
  43eaa0:	stc    
  43eaa1:	or     ecx,DWORD PTR [ebx+0x46850ecb]
  43eaa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eaa8:	jnp    0x43eaec
  43eaaa:	cld    
  43eaab:	es icebp 
  43eaad:	pop    ds
  43eaae:	mov    esi,DWORD PTR [ebx-0x7e]
  43eab1:	cmp    BYTE PTR [ebx+0x0],ch
  43eab4:	test   eax,0x663f8009
  43eab9:	idiv   ch
  43eabb:	jmp    0xd000:0x8b59d204
  43eac2:	mov    esp,0xeb7d68cc
  43eac7:	or     DWORD PTR [ecx],0x27
  43eaca:	test   DWORD PTR [ebp-0x5b],eax
  43eacd:	jnp    0x43eb11
  43eacf:	loopne 0x43eae7
  43ead1:	rcr    bh,0x8b
  43ead4:	dec    eax
  43ead5:	(bad)  
  43ead6:	cld    
  43ead7:	push   eax
  43ead8:	cdq    
  43ead9:	jnp    0x43eb2d
  43eadb:	in     al,0x26
  43eadd:	enter  0x8be3,0x55
  43eae1:	jmp    0xf84a:0x7b954cfc
  43eae8:	es fdiv st,st(7)
  43eaeb:	mov    ebx,DWORD PTR [edi+0x26]
  43eaee:	std    
  43eaef:	inc    esp
  43eaf0:	xchg   ebp,eax
  43eaf1:	jnp    0x43eb35
  43eaf3:	call   0x8c3bab0e
  43eaf8:	in     al,dx
  43eaf9:	and    bh,ch
  43eafb:	push   esp
  43eafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eafd:	jnp    0x43eb51
  43eaff:	lock push ss
  43eb01:	(bad)  
  43eb02:	test   DWORD PTR [ebx+0x4cfd0ed5],0xfc4a7ba5
  43eb0c:	pop    edx
  43eb0d:	(bad)  
  43eb0e:	repz add BYTE PTR [ebp-0x6b14fffe],bl
  43eb15:	jge    0x43eb69
  43eb17:	hlt    
  43eb18:	add    BYTE PTR [esi],bl
  43eb1a:	inc    esp
  43eb1b:	dec    BYTE PTR [eax+0x458476e8]
  43eb21:	inc    ebp
  43eb22:	jge    0x43eb6e
  43eb24:	hlt    
  43eb25:	xchg   BYTE PTR [edx+0x7de57317],bh
  43eb2b:	push   edx
  43eb2c:	lock es add al,0xfd
  43eb30:	inc    esp
  43eb31:	xchg   ebp,eax
  43eb32:	jnp    0x43eb76
  43eb34:	fdiv   QWORD PTR [edi-0x61539800]
  43eb3a:	ret    0x8aff
  43eb3d:	pusha  
  43eb3e:	dec    esi
  43eb3f:	dec    esi
  43eb40:	call   0x43eeb2
  43eb45:	push   ds
  43eb46:	inc    esi
  43eb47:	or     eax,DWORD PTR [ebp-0x74eb0923]
  43eb4d:	dec    eax
  43eb4e:	jbe    0x43ead4
  43eb50:	inc    ebp
  43eb51:	cmc    
  43eb52:	add    BYTE PTR [ecx+0x4a7b4d0c],dh
  43eb58:	in     al,dx
  43eb59:	xlat   BYTE PTR es:[ebx]
  43eb5b:	jmp    0x43eae8
  43eb5d:	pop    eax
  43eb5e:	outs   dx,BYTE PTR ds:[esi]
  43eb5f:	test   BYTE PTR [ebp*1-0x49f7bcfb],al
  43eb66:	inc    BYTE PTR [ebp+ecx*2+0x4be84ad]
  43eb6d:	and    al,0xbf
  43eb6f:	out    dx,eax
  43eb70:	jmp    0x43eb73
  43eb72:	xor    eax,0xceb88bc0
  43eb77:	mov    esp,0xcb3f69cc
  43eb7c:	int3   
  43eb7d:	add    BYTE PTR [ecx+0x3f],ah
  43eb80:	retf   
  43eb81:	int3   
  43eb82:	pop    ecx
  43eb83:	aas    
  43eb84:	retf   
  43eb85:	int3   
  43eb86:	call   0x89c7d706
  43eb8b:	or     ebp,eax
  43eb8d:	add    eax,0x89f87072
  43eb92:	loopne 0x43ebee
  43eb94:	test   BYTE PTR [ebp+0x75],al
  43eb97:	shl    edi,cl
  43eb99:	sub    DWORD PTR [edx+0x70],ebx
  43eb9c:	clc    
  43eb9d:	sbb    DWORD PTR [ecx+0x7],0xffffff9d
  43eba1:	hlt    
  43eba2:	outs   dx,BYTE PTR ds:[esi]
  43eba3:	(bad)  
  43eba4:	jmp    DWORD PTR [edi+0x1]
  43eba7:	add    al,0x40
  43eba9:	add    BYTE PTR [esi],ah
  43ebab:	mov    esi,0x163251e7
  43ebb0:	hlt    
  43ebb1:	rcr    esi,cl
  43ebb3:	add    bl,BYTE PTR [ebp-0x3bb108]
  43ebb9:	imul   ebx,DWORD PTR [ebp-0x1e980024],0xa004003
  43ebc3:	push   ss
  43ebc4:	clc    
  43ebc5:	rcr    DWORD PTR [esi+0x2],cl
  43ebc8:	xchg   DWORD PTR [ebp+0x5],eax
  43ebcb:	dec    eax
  43ebcc:	inc    edx
  43ebcd:	cld    
  43ebce:	popf   
  43ebcf:	add    al,BYTE PTR [eax]
  43ebd1:	add    dh,dh
  43ebd3:	stc    
  43ebd4:	test   BYTE PTR [ebp-0x1f],dl
  43ebd7:	cmp    DWORD PTR [ebp-0x429dbff],0xffffff83
  43ebde:	push   eax
  43ebdf:	outs   dx,BYTE PTR ds:[esi]
  43ebe0:	pop    es
  43ebe1:	jae    0x43ebe3
  43ebe3:	jl     0x43ec60
  43ebe5:	inc    edx
  43ebe6:	cld    
  43ebe7:	push   ss
  43ebe8:	inc    DWORD PTR [edx-0x3d6174]
  43ebee:	push   eax
  43ebef:	es (bad) 
  43ebf1:	out    0x52,eax
  43ebf3:	stos   BYTE PTR es:[edi],al
  43ebf4:	adc    eax,0x25ed3f4
  43ebf9:	test   DWORD PTR [ebp-0x67],ecx
  43ebfc:	jns    0x43ec01
  43ebfe:	lea    ecx,[ecx+0x76003c53]
  43ec04:	push   edx
  43ec05:	test   ch,ah
  43ec07:	loopne 0x43ec4c
  43ec09:	retf   
  43ec0a:	int3   
  43ec0b:	imul   edi,DWORD PTR [esi],0x3e61cccb
  43ec11:	retf   
  43ec12:	int3   
  43ec13:	pop    ecx
  43ec14:	ds retf 
  43ec16:	int3   
  43ec17:	enter  0xeb7b,0xa1
  43ec1b:	in     eax,dx
  43ec1c:	push   esi
  43ec1d:	cmp    al,0x0
  43ec1f:	xchg   ebx,eax
  43ec20:	jnp    0x43ec61
  43ec22:	xor    BYTE PTR [esi],dl
  43ec24:	mov    ebp,0xba143e07
  43ec29:	pop    es
  43ec2a:	pop    ebp
  43ec2b:	pop    esi
  43ec2c:	ds retf 
  43ec2e:	int3   
  43ec2f:	popa   
  43ec30:	ds retf 
  43ec32:	int3   
  43ec33:	pop    ecx
  43ec34:	ds retf 
  43ec36:	int3   
  43ec37:	enter  0xeb7b,0x8b
  43ec3b:	pusha  
  43ec3c:	dec    BYTE PTR [edi-0x75]
  43ec3f:	pusha  
  43ec40:	cli    
  43ec41:	dec    esi
  43ec42:	push   DWORD PTR [eax+0x43cc76]
  43ec48:	popf   
  43ec49:	int    0xbc
  43ec4b:	int3   
  43ec4c:	jmp    0xe210b78e
  43ec51:	cmp    eax,0x3dd9cccb
  43ec56:	retf   
  43ec57:	int3   
  43ec58:	dec    eax
  43ec59:	jnp    0x43ec46
  43ec5b:	or     ecx,0xfffffff9
  43ec5e:	add    BYTE PTR gs:[edi+0x2],al
  43ec62:	push   0xffc29edc
  43ec67:	(bad)  
  43ec68:	test   al,0x6a
  43ec6a:	int3   
  43ec6b:	inc    ebx
  43ec6c:	popf   
  43ec6d:	jns    0x43ecb1
  43ec6f:	clc    
  43ec70:	inc    ebp
  43ec71:	pop    edx
  43ec72:	cld    
  43ec73:	aas    
  43ec74:	popf   
  43ec75:	jnp    0x43ecb9
  43ec77:	clc    
  43ec78:	dec    ebp
  43ec79:	pop    edx
  43ec7a:	mov    ch,0xff
  43ec7c:	call   0x427b:0xa5c47c6e
  43ec83:	cld    
  43ec84:	push   ss
  43ec85:	ror    BYTE PTR [edi],0x51
  43ec88:	push   ss
  43ec89:	fmul   DWORD PTR [ebx]
  43ec8b:	push   edx
  43ec8c:	es enter 0x5007,0x72
  43ec91:	fdivr  st,st(3)
  43ec93:	mov    eax,DWORD PTR [eax-0x37334330]
  43ec99:	jns    0x43ec86
  43ec9b:	push   ecx
  43ec9c:	(bad)  
  43ec9d:	enter  0xfb,0x9d
  43eca1:	add    al,BYTE PTR [eax]
  43eca3:	jmp    0x43ec39
  43eca5:	jns    0x43ece9
  43eca7:	cld    
  43eca8:	push   ds
  43eca9:	inc    ebx
  43ecaa:	dec    BYTE PTR [eax-0x7b912000]
  43ecb0:	dec    ebp
  43ecb1:	xor    DWORD PTR [edx],ebp
  43ecb3:	dec    ebx
  43ecb4:	adc    BYTE PTR [esi-0x6aaa7af3],ch
  43ecba:	add    DWORD PTR [ebx-0x4],edx
  43ecbd:	stos   BYTE PTR es:[edi],al
  43ecbe:	mov    ah,0xfd
  43ecc0:	mov    ah,BYTE PTR [eax-0x2]
  43ecc3:	cld    
  43ecc4:	dec    esp
  43ecc5:	or     esi,edi
  43ecc7:	mov    cl,0x11
  43ecc9:	mov    BYTE PTR [eax+0x73],0x7
  43eccd:	xor    eax,0x9d000004
  43ecd2:	pop    ecx
  43ecd3:	add    ebp,ebx
  43ecd5:	int    0x31
  43ecd7:	ror    BYTE PTR [ebx-0x33433008],0xe9
  43ecde:	ds retf 
  43ece0:	int3   
  43ece1:	loope  0x43ed21
  43ece3:	retf   
  43ece4:	int3   
  43ece5:	fnstcw WORD PTR [esi]
  43ece7:	retf   
  43ece8:	int3   
  43ece9:	push   0x95b9eb79
  43ecee:	add    al,BYTE PTR [eax]
  43ecf0:	add    BYTE PTR [ecx],bh
  43ecf2:	jns    0x43ecfa
  43ecf4:	mov    DWORD PTR [eax-0x62bc2c2e],ebx
  43ecfa:	iret   
  43ecfb:	mov    esp,0xcb3e69cc
  43ed00:	int3   
  43ed01:	popa   
  43ed02:	ds retf 
  43ed04:	int3   
  43ed05:	pop    ecx
  43ed06:	ds retf 
  43ed08:	int3   
  43ed09:	call   0x89c7d887
  43ed0e:	adc    al,BYTE PTR [ebp-0x7e5affbb]
  43ed14:	ja     0x43ed1a
  43ed16:	popf   
  43ed17:	std    
  43ed18:	or     DWORD PTR [eax-0x74fffd63],0xffffffe8
  43ed1f:	cli    
  43ed20:	test   BYTE PTR [ecx-0x67],dl
  43ed23:	and    ebp,0x86586c08
  43ed29:	push   ebp
  43ed2a:	dec    ecx
  43ed2b:	jns    0x43ed6f
  43ed2d:	or     BYTE PTR [esi],bl
  43ed2f:	inc    edx
  43ed30:	pop    es
  43ed31:	mov    eax,ebx
  43ed33:	jb     0x43ecf5
  43ed35:	inc    ebp
  43ed36:	sub    DWORD PTR [edx],eax
  43ed38:	add    BYTE PTR [eax],al
  43ed3a:	popf   
  43ed3b:	pop    ecx
  43ed3c:	push   es
  43ed3d:	mov    ebp,DWORD PTR [eax+0x6e]
  43ed40:	jl     0x43ed03
  43ed42:	pushf  
  43ed43:	jnp    0x43ed8f
  43ed45:	cld    
  43ed46:	push   ss
  43ed47:	xlat   BYTE PTR ds:[ebx]
  43ed48:	sti    
  43ed49:	cmp    ebp,DWORD PTR [eax+0x76]
  43ed4c:	ins    BYTE PTR es:[edi],dx
  43ed4d:	inc    esi
  43ed4e:	es (bad) 
  43ed50:	sti    
  43ed51:	mov    esp,DWORD PTR [eax+0x72]
  43ed54:	or     BYTE PTR [edi-0x5413c6f],dh
  43ed5a:	xchg   ecx,eax
  43ed5b:	xor    ebp,0x85305003
  43ed61:	inc    ebp
  43ed62:	sar    DWORD PTR [eax+0x4a],1
  43ed65:	lock call 0xf860:0x1c4113b5
  43ed6d:	setge  BYTE PTR [edx]
  43ed70:	xchg   DWORD PTR [ebp-0x4b],edx
  43ed73:	js     0x43edb7
  43ed75:	or     BYTE PTR [eax],al
  43ed77:	push   ss
  43ed78:	mov    edi,0x7995030b
  43ed7d:	push   edx
  43ed7e:	clc    
  43ed7f:	es pop es
  43ed81:	lsl    ebx,ax
  43ed84:	adc    al,BYTE PTR [ebp+0x5277954d]
  43ed8a:	or     al,0x9e
  43ed8c:	adc    DWORD PTR [ebp+0x37a754d],eax
  43ed92:	or     al,BYTE PTR [esi-0x6aaa7b66]
  43ed98:	ja     0x43eddc
  43ed9a:	or     BYTE PTR [esi-0x1f76fc40],bl
  43eda0:	cli    
  43eda1:	out    0x6b,al
  43eda3:	push   edx
  43eda4:	ins    BYTE PTR es:[edi],dx
  43eda5:	clc    
  43eda6:	mov    eax,DWORD PTR [eax-0x32]
  43eda9:	mov    esp,0xeb77e8cc
  43edae:	or     DWORD PTR [ecx+0x27],0xffffff85
  43edb2:	inc    ebp
  43edb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43edb4:	jns    0x43edf8
  43edb6:	in     al,0x16
  43edb8:	mov    esi,0x66c88be3
  43edbd:	cld    
  43edbe:	push   eax
  43edbf:	fnstcw WORD PTR [ecx+0x52]
  43edc2:	call   0x8c2bb3ed
  43edc7:	adc    eax,0x9dffff83
  43edcc:	jns    0x43ee18
  43edce:	lock push ds
  43edd0:	out    dx,al
  43edd1:	out    dx,eax
  43edd2:	add    BYTE PTR [edx-0x62ff0b7a],ah
  43edd8:	add    al,BYTE PTR [ebp-0x6affab]
  43edde:	push   edx
  43eddf:	lock and al,0xd6
  43ede2:	fisttp WORD PTR [ebx+0x787c6258]
  43ede8:	lods   eax,DWORD PTR ds:[esi]
  43ede9:	add    cl,BYTE PTR [ecx]
  43edeb:	test   BYTE PTR [eax+0x47000002],bh
  43edf1:	add    ah,BYTE PTR [esi+0x0]
  43edf4:	es mov esi,0xfa508bdf
  43edfa:	cld    
  43edfb:	push   eax
  43edfc:	xchg   ecx,eax
  43edfd:	sar    al,1
  43edff:	adc    eax,0x3c4f95
  43ee04:	and    al,0xc5
  43ee06:	sti    
  43ee07:	mov    esp,eax
  43ee09:	bound  edi,QWORD PTR [eax+edi*1-0x63]
  43ee0d:	not    BYTE PTR [esi]
  43ee0f:	mov    ebp,eax
  43ee11:	bound  eax,QWORD PTR [ebp+edx*2-0x76f1005b]
  43ee18:	shl    BYTE PTR [esi-0x7c],1
  43ee1b:	inc    ebp
  43ee1c:	jge    0x43ee95
  43ee1e:	dec    edx
  43ee1f:	or     BYTE PTR [esi-0x1f76f046],bl
  43ee25:	pop    esi
  43ee26:	in     al,0x17
  43ee28:	push   ss
  43ee29:	aad    0xdf
  43ee2b:	mov    ebx,eax
  43ee2d:	cli    
  43ee2e:	cld    
  43ee2f:	inc    ecx
  43ee30:	lea    edi,[ecx+0x42]
  43ee33:	hlt    
  43ee34:	es mov ebp,0xfad08bdf
  43ee3a:	cld    
  43ee3b:	adc    BYTE PTR [edx*8+0x6000c7eb],dl
  43ee42:	push   0xffffffff
  43ee44:	call   FWORD PTR [ebp-0x2ba7afe]
  43ee4a:	jle    0x43eec3
  43ee4c:	adc    BYTE PTR [ebp+0x688b08f6],bl
  43ee52:	bound  edi,QWORD PTR [ecx+edi*1-0x63]
  43ee56:	test   BYTE PTR [eax],0xc7
  43ee59:	pusha  
  43ee5a:	push   0xfffffffe
  43ee5c:	call   FWORD PTR [ebp-0x2eaa7afe]
  43ee62:	jle    0x43ee99
  43ee64:	add    BYTE PTR [ecx-0x1f],cl
  43ee67:	test   BYTE PTR [ebp-0x2f],al
  43ee6a:	jbe    0x43ee73
  43ee6c:	cmp    DWORD PTR [ecx+eax*1-0x9e30000],0x76488b1b
  43ee77:	test   BYTE PTR [edx],al
  43ee79:	sub    BYTE PTR [ebx-0x8],0xff
  43ee7d:	and    dl,dl
  43ee7f:	test   BYTE PTR [ebp-0x67],cl
  43ee82:	aam    0xe7
  43ee84:	mov    ch,0x90
  43ee86:	push   0xfffffff8
  43ee88:	and    DWORD PTR [ecx-0x5],0xffffff86
  43ee8c:	inc    ebp
  43ee8d:	popa   
  43ee8e:	pop    esi
  43ee8f:	sbb    ecx,DWORD PTR [ebx+0x2846ed0]
  43ee95:	es mov eax,0xfad18d07
  43ee9b:	std    
  43ee9c:	push   ecx
  43ee9d:	push   ss
  43ee9e:	sar    bl,0x50
  43eea1:	inc    ebp
  43eea2:	xchg   edx,eax
  43eea3:	cli    
  43eea4:	inc    DWORD PTR [eax]
  43eea6:	push   edx
  43eea7:	xchg   bl,al
  43eea9:	or     BYTE PTR [eax+eax*8],dl
  43eeac:	fisttp DWORD PTR [ebx+0x558456d0]
  43eeb2:	pop    ecx
  43eeb3:	jl     0x43eec3
  43eeb5:	mov    ebx,eax
  43eeb7:	outs   dx,BYTE PTR ds:[esi]
  43eeb8:	jl     0x43ee7a
  43eeba:	mov    eax,ds:0x16f4427b
  43eebf:	mov    eax,0xfedc83eb
  43eec4:	xchg   BYTE PTR [ebp+0x1],cl
  43eec7:	pop    esi
  43eec8:	nop
  43eec9:	mov    esi,DWORD PTR [eax+0x62]
  43eecc:	jl     0x43ee90
  43eece:	test   eax,0x4e0527b
  43eed3:	stc    
  43eed4:	clc    
  43eed5:	push   edx
  43eed7:	jge    0x43eebb
  43eed9:	pop    ebp
  43eeda:	fidiv  WORD PTR [esi]
  43eedc:	retf   
  43eedd:	int3   
  43eede:	dec    eax
  43eedf:	jge    0x43eecc
  43eee1:	or     ecx,0xfffffffa
  43eee4:	addr16 lock sahf 
  43eee7:	ret    0xfeff
  43eeea:	mov    al,0x2
  43eeec:	aam    0x43
  43eeee:	popf   
  43eeef:	jnp    0x43ef33
  43eef1:	clc    
  43eef2:	inc    ebp
  43eef3:	data16 cld 
  43eef5:	aas    
  43eef6:	popf   
  43eef7:	jge    0x43ef3b
  43eef9:	clc    
  43eefa:	dec    ebp
  43eefb:	pop    edx
  43eefc:	cmp    ebp,edi
  43eefe:	mov    ds:0xa5c47c69,al
  43ef03:	jnp    0x43ef47
  43ef05:	cld    
  43ef06:	es mov bh,0xf
  43ef09:	push   ecx
  43ef0a:	add    BYTE PTR [esi],dl
  43ef0c:	iret   
  43ef0d:	or     edx,DWORD PTR [edx+0x16]
  43ef10:	mov    edi,0xcf7a5007
  43ef15:	sti    
  43ef16:	mov    edi,DWORD PTR [eax-0x39]
  43ef19:	mov    esp,0xcb3659cc
  43ef1e:	int3   
  43ef1f:	enter  0xeb7d,0xa1
  43ef23:	stc    
  43ef24:	dec    esi
  43ef25:	cmp    al,0x0
  43ef27:	pop    ebx
  43ef28:	add    ch,BYTE PTR [eax-0x75]
  43ef2b:	mov    al,0xce
  43ef2d:	rol    DWORD PTR [ebx-0x63],cl
  43ef30:	jnp    0x43ef81
  43ef32:	add    edi,ebp
  43ef34:	inc    esp
  43ef35:	xchg   DWORD PTR [eax-0x68],edx
  43ef38:	(bad)  
  43ef39:	mov    esp,0xcb3659cc
  43ef3e:	int3   
  43ef3f:	enter  0xeb7d,0x83
  43ef43:	or     esi,esi
  43ef45:	sahf   
  43ef46:	push   eax
  43ef47:	jmp    0xefceef10
  43ef4c:	xor    al,0xc7
  43ef4e:	ds push ss
  43ef50:	ret    0x8b2f
  43ef53:	iret   
  43ef54:	jl     0x43ef23
  43ef56:	ds es mov edx,0x7acf8b0b
  43ef5d:	dec    edx
  43ef5e:	hlt    
  43ef5f:	push   ss
  43ef60:	mov    edi,0xf6658bf3
  43ef65:	xchg   BYTE PTR [ebp-0x2b],cl
  43ef68:	jl     0x43efbc
  43ef6a:	clc    
  43ef6b:	adc    al,0xcf
  43ef6d:	sti    
  43ef6e:	mov    eax,0x29c00
  43ef73:	add    BYTE PTR [eax],ah
  43ef75:	inc    edx
  43ef76:	jae    0x43efbc
  43ef78:	push   ds
  43ef79:	out    0xf7,eax
  43ef7b:	add    BYTE PTR [eax],dh
  43ef7d:	(bad)  
  43ef7e:	sub    al,0xc0
  43ef80:	mov    dh,0x25
  43ef82:	test   DWORD PTR [ebp-0x6b],ecx
  43ef85:	jl     0x43efd5
  43ef87:	sbb    dh,dl
  43ef89:	int    0x7
  43ef8b:	jne    0x43ef31
  43ef8d:	jnp    0x43efd1
  43ef8f:	clc    
  43ef90:	push   ss
  43ef91:	mov    dh,0xb
  43ef93:	mov    ebp,esp
  43ef95:	push   es
  43ef96:	test   DWORD PTR [ebp+0x75],edx
  43ef99:	jl     0x43efdd
  43ef9b:	adc    BYTE PTR [eax*8+0x29cb817],dl
  43efa2:	add    BYTE PTR [eax],al
  43efa4:	inc    esi
  43efa5:	or     eax,DWORD PTR [ebp+0xe7c554d]
  43efab:	mov    eax,esi
  43efad:	push   0xffffff84
  43efaf:	inc    ebp
  43efb0:	inc    ebp
  43efb1:	sub    al,0x43
  43efb3:	cld    
  43efb4:	mov    al,0xfe
  43efb6:	sub    al,0xc0
  43efb8:	inc    esi
  43efb9:	jmp    esp
  43efbb:	mov    bl,0x6e
  43efbd:	inc    edx
  43efbe:	test   ch,ah
  43efc0:	rol    BYTE PTR [ebx-0x35],0xcc
  43efc4:	jmp    0xe210baff
  43efc9:	ss retf 
  43efcb:	int3   
  43efcc:	fnstenv [esi]
  43efce:	retf   
  43efcf:	int3   
  43efd0:	push   0x83eb7b
  43efd5:	or     DWORD PTR [ebx],ecx
  43efd7:	rol    DWORD PTR [ebp-0xb],0x2
  43efdb:	xor    BYTE PTR [eax],al
  43efdd:	popf   
  43efde:	fiadd  DWORD PTR [ebx]
  43efe0:	add    al,0x5d
  43efe2:	add    bl,BYTE PTR [edi-0x3c0ec4]
  43efe8:	dec    edi
  43efe9:	(bad)
  43efec:	dec    edx
  43efee:	add    ebx,0x8
  43eff1:	adc    al,0xbe
  43eff3:	repz push 0x5d
  43eff6:	jnp    0x43f042
  43eff8:	clc    
  43eff9:	dec    esp
  43effa:	jnp    0x43f00e
  43effc:	sbb    al,0xd1
  43effe:	ret    
  43efff:	dec    DWORD PTR [edx+0x6a4fd25f]
  43f005:	popf   
  43f006:	addr16 push edx
  43f008:	hlt    
  43f009:	ds push cs
  43f00b:	aam    0x43
  43f00d:	popf   
  43f00e:	cmp    DWORD PTR [edx],0x14
  43f011:	imul   eax,ebx,0xfff0ffff
  43f017:	mov    bh,0x2
  43f019:	popf   
  43f01a:	add    al,BYTE PTR [eax]
  43f01c:	jmp    0x43f015
  43f01e:	jnp    0x43f02a
  43f020:	add    BYTE PTR [esi-0x1777003e],bl
  43f026:	jb     0x43f08f
  43f028:	add    BYTE PTR [edi+0x3],ch
  43f02b:	add    BYTE PTR [eax-0x63],ch
  43f02e:	add    eax,DWORD PTR [eax+0x0]
  43f031:	push   ss
  43f032:	or     eax,0x2ded414
  43f037:	jg     0x43effb
  43f039:	add    BYTE PTR [ebp-0x30fffffd],bl
  43f03f:	pop    edx
  43f040:	cdq    
  43f041:	(bad)  
  43f042:	and    ah,BYTE PTR [edi+0x7c]
  43f045:	les    ebp,FWORD PTR [ecx+0x5d02ffaa]
  43f04b:	add    ch,BYTE PTR [ebx]
  43f04d:	add    BYTE PTR [esi-0x6f74fffe],bl
  43f053:	push   cs
  43f054:	aam    0x43
  43f056:	popf   
  43f057:	sbb    ecx,eax
  43f059:	mov    DWORD PTR [eax-0x62bc2c42],esp
  43f05f:	jnp    0x43f073
  43f061:	inc    esp
  43f062:	leave  
  43f063:	ret    0x51ff
  43f066:	cld    
  43f067:	or     eax,0xd29d43d4
  43f06c:	test   BYTE PTR [ebp-0x33],cl
  43f06f:	shl    bh,1
  43f071:	popf   
  43f072:	shl    DWORD PTR [esi-0x8],0x83
  43f076:	loope  0x43f06d
  43f078:	test   BYTE PTR ds:0x3c4e89,dl
  43f07e:	sahf   
  43f07f:	int    0x7
  43f081:	mov    DWORD PTR [eax+0x5a],ecx
  43f084:	test   BYTE PTR [ebp-0x7b],dl
  43f087:	data16 fisttp QWORD PTR [ebx-0x33433788]
  43f08e:	pop    ecx
  43f08f:	aaa    
  43f090:	retf   
  43f091:	int3   
  43f092:	call   0xe0cfdc10
  43f097:	cli    
  43f098:	xor    al,0x45
  43f09a:	mov    eax,ds:0x8b00f1
  43f09f:	loopne 0x43f09b
  43f0a1:	in     al,0x5
  43f0a3:	jbe    0x43f0a7
  43f0a5:	test   DWORD PTR [ebp-0x57],eax
  43f0a8:	(bad)  
  43f0a9:	mov    esp,0xcb3761cc
  43f0ae:	int3   
  43f0af:	pop    ecx
  43f0b0:	aaa    
  43f0b1:	retf   
  43f0b2:	int3   
  43f0b3:	call   0x49c7dc31
  43f0b8:	pop    ss
  43f0b9:	rol    DWORD PTR [ebp+0x31],0x3
  43f0bd:	add    BYTE PTR [ebx*4+0x14084279],al
  43f0c4:	rcl    bh,0x8b
  43f0c7:	push   0xa555844a
  43f0cc:	add    DWORD PTR [edi+0x3c],ecx
  43f0cf:	adc    al,0xd0
  43f0d1:	fisttp WORD PTR [ebx-0x48f79da8]
  43f0d7:	gs push cs
  43f0d9:	test   DWORD PTR [ebp-0x3],edx
  43f0dc:	ja     0x43f121
  43f0de:	or     al,BYTE PTR [ebp+0x75e8427b]
  43f0e4:	push   cs
  43f0e5:	add    al,0x40
  43f0e7:	popf   
  43f0e8:	jns    0x43f0f4
  43f0ea:	cmp    al,0xe9
  43f0ec:	sar    edi,0x50
  43f0ef:	mov    ch,0xb5
  43f0f1:	hlt    
  43f0f2:	inc    edx
  43f0f4:	add    ebx,0xefc02408
  43f0fa:	push   0x5d
  43f0fc:	(bad)  
  43f0fe:	das    
  43f0ff:	popf   
  43f100:	add    ch,BYTE PTR [eax+0x0]
  43f103:	add    BYTE PTR [ebp-0x62960002],bl
  43f109:	gs push edx
  43f10b:	lock and al,0xbf
  43f10e:	jecxz  0x43f09b
  43f110:	lock bound eax,QWORD PTR [edx+eax*2+0x4d84d2e9]
  43f118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f119:	rol    DWORD PTR [ebp+edx*2-0x3e182f87],cl
  43f120:	push   0x5983f865
  43f125:	test   al,0x45
  43f128:	push   ecx
  43f129:	add    al,BYTE PTR [eax]
  43f12b:	add    BYTE PTR [ebp-0x1f74f9a7],bl
  43f131:	outs   dx,BYTE PTR ds:[esi]
  43f132:	jl     0x43f0f4
  43f134:	pushf  
  43f135:	jnp    0x43f179
  43f137:	hlt    
  43f138:	es mov bh,0xdf
  43f13b:	pminsw mm2,mm2
  43f13e:	add    DWORD PTR [ecx],edi
  43f140:	shr    BYTE PTR [esi+0x6c],1
  43f143:	pop    ecx
  43f144:	push   ss
  43f145:	mov    edi,0xe9583e7
  43f14a:	add    BYTE PTR [eax+ebx*2+0x79],dh
  43f14e:	dec    edx
  43f14f:	call   0x53dc72
  43f154:	mov    DWORD PTR [esi],esp
  43f156:	test   DWORD PTR [ebp+0x5],edx
  43f159:	jns    0x43f198
  43f15b:	adc    BYTE PTR [esi],ah
  43f15d:	mov    bh,0xdf
  43f15f:	mov    ecx,DWORD PTR [esi+eiz*1-0x75]
  43f163:	inc    esp
  43f164:	lea    esp,[ebp-0x7c]
  43f167:	dec    ebp
  43f168:	add    BYTE PTR [ebp+0x4cf7ce30],bh
  43f16e:	test   DWORD PTR es:[ebp-0x43],edx
  43f172:	hlt    
  43f173:	test   al,0x42
  43f175:	adc    edx,0x78c54584
  43f17b:	dec    edx
  43f17c:	or     BYTE PTR [esi+0x165113ba],bl
  43f182:	iret   
  43f183:	out    0x8b,eax
  43f185:	pop    eax
  43f186:	pop    esi
  43f187:	cld    
  43f188:	inc    ecx
  43f189:	test   eax,0x9055e7d2
  43f18e:	fs clc 
  43f190:	and    DWORD PTR [ecx-0x9],0xffffff84
  43f194:	dec    ebp
  43f195:	jne    0x43f117
  43f197:	mov    esi,0xe7b62428
  43f19c:	jmp    0x43f1ad
  43f19e:	js     0x43f1f2
  43f1a0:	in     al,0xcf
  43f1a2:	pop    edx
  43f1a3:	or     esp,edi
  43f1a5:	bound  esp,QWORD PTR [esp+edi*2-0x3c]
  43f1a9:	mov    eax,ds:0xdd0423da
  43f1ae:	add    bl,BYTE PTR [edi-0x3f8ec4]
  43f1b4:	dec    edi
  43f1b5:	xor    eax,0x3afff578
  43f1ba:	add    bl,0x8
  43f1bd:	and    al,0xbe
  43f1bf:	fild   DWORD PTR [ebx+0x43d42a68]
  43f1c5:	popf   
  43f1c6:	add    dh,BYTE PTR [ebx+0xa]
  43f1c9:	imul   BYTE PTR es:[edi]
  43f1cc:	aam    0x0
  43f1ce:	pop    esi
  43f1cf:	add    cl,BYTE PTR [edi-0x1]
  43f1d2:	jo     0x43f21a
  43f1d4:	jl     0x43f213
  43f1d6:	lds    ecx,FWORD PTR [esi+0x3c]
  43f1d9:	add    BYTE PTR [ebp+0x5d6a1bed],bl
  43f1df:	(bad)  
  43f1e1:	das    
  43f1e2:	popf   
  43f1e3:	add    al,BYTE PTR [ebp-0x7b2f1eab]
  43f1e9:	inc    ebp
  43f1ea:	mov    ebp,0x6c344777
  43f1ef:	arpl   WORD PTR [edx-0x10],dx
  43f1f2:	dec    BYTE PTR [esi]
  43f1f4:	aam    0x43
  43f1f6:	popf   
  43f1f7:	push   edi
  43f1f8:	adc    ch,BYTE PTR [edx+0x5d]
  43f1fb:	(bad)  
  43f1fd:	das    
  43f1fe:	popf   
  43f1ff:	add    al,BYTE PTR [ebp+0x65d0a955]
  43f205:	add    BYTE PTR [edx-0x4e5c1033],ah
  43f20b:	dec    esi
  43f20c:	cmp    al,0x0
  43f20e:	push   ds
  43f20f:	and    eax,0x2ded414
  43f214:	add    BYTE PTR [ebp-0x58],dh
  43f217:	fdivr  DWORD PTR [edi]
  43f219:	push   0x329d
  43f21e:	es mov ebp,0x2f750fb
  43f224:	stc    
  43f225:	push   ebp
  43f226:	ins    DWORD PTR es:[edi],dx
  43f227:	lahf   
  43f228:	adc    edx,esp
  43f22a:	fiadd  WORD PTR [edx]
  43f22c:	test   DWORD PTR [ebp+0x39],ecx
  43f22f:	jns    0x43f27b
  43f231:	fadd   DWORD PTR [eax]
  43f233:	push   ss
  43f234:	int    0xd7
  43f236:	mov    ebx,eax
  43f238:	dec    edx
  43f239:	cld    
  43f23a:	inc    ecx
  43f23b:	jns    0x43f2b6
  43f23d:	inc    edx
  43f23e:	loopne 0x43f266
  43f240:	mov    ch,0xdf
  43f242:	mov    ecx,esp
  43f244:	ror    BYTE PTR [ebp-0x75],cl
  43f247:	fcomp  DWORD PTR [esi+0x4f]
  43f24a:	mov    ebp,DWORD PTR [eax-0x62bc2bf2]
  43f250:	shl    edi,1
  43f252:	xchg   ecx,eax
  43f253:	or     DWORD PTR [ebx-0x8],esp
  43f256:	sbb    ecx,0xfffffff5
  43f259:	test   BYTE PTR [ebp-0x3],dl
  43f25c:	jle    0x43f213
  43f25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f25f:	popf   
  43f260:	add    al,BYTE PTR [eax]
  43f262:	add    BYTE PTR [ecx+0x29],dh
  43f265:	test   DWORD PTR [ebp-0x3],eax
  43f268:	jbe    0x43f2b4
  43f26a:	fcomp  DWORD PTR [esi-0x62ff6086]
  43f270:	add    al,BYTE PTR [edi+0x5276b94d]
  43f276:	loopne 0x43f274
  43f278:	or     eax,0x179d43d4
  43f27d:	ds xor al,0xfe
  43f280:	mov    ebp,0x779d43d3
  43f285:	or     al,BYTE PTR [ecx+ecx*8-0x42]
  43f289:	call   DWORD PTR [eax+0x26]
  43f28c:	clc    
  43f28d:	adc    edx,esp
  43f28f:	fiadd  WORD PTR [edx]
  43f291:	dec    esi
  43f292:	mov    esp,eax
  43f294:	outs   dx,BYTE PTR ds:[esi]
  43f295:	dec    edi
  43f296:	call   0xf8a0f39b
  43f29b:	call   FWORD PTR [esi]
  43f29d:	inc    edi
  43f29e:	or     ecx,DWORD PTR [ebx+0x158462e0]
  43f2a4:	xchg   ecx,eax
  43f2a5:	ss cmp al,0x0
  43f2a8:	sahf   
  43f2a9:	mov    bl,0x27
  43f2ab:	mov    DWORD PTR [eax-0x62bc2c4a],esi
  43f2b1:	test   DWORD PTR [edx],edi
  43f2b3:	cmp    BYTE PTR [ecx-0x3a],dh
  43f2b6:	(bad)  
  43f2b7:	dec    eax
  43f2b9:	cs lahf 
  43f2bb:	adc    al,0x51
  43f2bd:	(bad)  
  43f2be:	dec    DWORD PTR [edi+0x26]
  43f2c1:	adc    BYTE PTR [esp+edx*8-0x22],dl
  43f2c5:	add    cl,BYTE PTR [edi-0x75]
  43f2c8:	mov    BYTE PTR [edx],dl
  43f2ca:	aam    0x43
  43f2cc:	popf   
  43f2cd:	mov    ah,0xe7
  43f2cf:	jne    0x43f2e2
  43f2d1:	(bad)  
  43f2d2:	clc    
  43f2d3:	and    ecx,0xe
  43f2d6:	lahf   
  43f2d7:	adc    al,0xe9
  43f2d9:	(bad)  
  43f2dc:	add    eax,0xf2fff6ca
  43f2e1:	test   ebx,eax
  43f2e3:	add    al,0xf6
  43f2e5:	loop   0x43f34e
  43f2e7:	xor    al,0x99
  43f2e9:	ret    0x8aff
  43f2ec:	test   al,0x1e
  43f2ee:	aam    0x43
  43f2f0:	popf   
  43f2f1:	mov    bl,0xe7
  43f2f3:	push   ecx
  43f2f4:	les    esp,FWORD PTR [ecx-0x8]
  43f2f7:	sbb    ecx,0xa
  43f2fa:	xchg   DWORD PTR [ebp+0x0],eax
  43f2fd:	ror    DWORD PTR [ebp-0x3a36ebee],1
  43f303:	call   DWORD PTR [ecx+0x16]
  43f306:	enter  0x8bdf,0x90
  43f30a:	not    bl
  43f30c:	inc    ebx
  43f30d:	popf   
  43f30e:	add    eax,0x8dec2848
  43f313:	adc    dh,BYTE PTR [eax]
  43f315:	jno    0x43f2dc
  43f317:	call   DWORD PTR [ecx+0x75]
  43f31a:	sub    eax,0x857afffc
  43f31f:	ret    
  43f320:	or     al,0x3c
  43f322:	adc    dl,ah
  43f324:	inc    ebx
  43f325:	popf   
  43f326:	pop    es
  43f327:	nop
  43f328:	rcr    DWORD PTR [esi+0x715c9d02],1
  43f32e:	(bad)  
  43f331:	loopne 0x43f38d
  43f333:	dec    esi
  43f334:	push   0xffffffdd
  43f336:	in     al,dx
  43f337:	add    DWORD PTR [ebx+0x43d3bea8],ecx
  43f33d:	popf   
  43f33e:	mov    ah,0xf8
  43f340:	push   ebp
  43f341:	dec    ecx
  43f342:	push   0xffffffdd
  43f344:	sti    
  43f345:	sub    ah,BYTE PTR [ecx-0x49]
  43f348:	add    DWORD PTR [ebp+0x8b0002],ebx
  43f34e:	mov    edi,0x4e9d04bd
  43f353:	retf   
  43f354:	int3   
  43f355:	(bad)  [ebp-0x35]
  43f358:	int3   
  43f359:	push   0x608beb8d
  43f35e:	or     al,BYTE PTR [ebp-0x410effc0]
  43f364:	mov    esp,0xcb4dd9cc
  43f369:	int3   
  43f36a:	dec    eax
  43f36b:	(bad)  
  43f36c:	jmp    0x43f3c1
  43f36e:	jae    0x43f329
  43f370:	test   BYTE PTR ds:0x3c367d,bh
  43f376:	push   ss
  43f377:	jmp    FWORD PTR [ebx]
  43f379:	aam    0x5e
  43f37b:	add    al,BYTE PTR [ebp+0x3c369535]
  43f381:	add    BYTE PTR [edx-0x40],dl
  43f384:	push   esp
  43f385:	pop    ebp
  43f386:	fimul  WORD PTR [ebp-0x35]
  43f389:	int3   
  43f38a:	dec    eax
  43f38b:	(bad)  
  43f38c:	jmp    0x43f3df
  43f38e:	add    eax,0x9d4003c7
  43f393:	mov    eax,ds:0x2ded43b
  43f398:	push   eax
  43f399:	call   0x3c4ecf
  43f39e:	push   ds
  43f39f:	inc    edi
  43f3a0:	pop    es
  43f3a1:	mov    eax,ebx
  43f3a3:	pop    esi
  43f3a4:	test   BYTE PTR [ebp-0x6b],cl
  43f3a7:	mov    cl,0x65
  43f3a9:	add    BYTE PTR [esi],dl
  43f3ab:	not    BYTE PTR [edi-0x2c]
  43f3ae:	fiadd  WORD PTR [edx]
  43f3b0:	dec    esi
  43f3b1:	(bad)  
  43f3b2:	call   0xe9297815
  43f3b7:	inc    ebx
  43f3b8:	retf   
  43f3b9:	int3   
  43f3ba:	call   0x49c7df4a
  43f3bf:	daa    
  43f3c0:	rol    DWORD PTR [ebp+0x35],0x3
  43f3c4:	add    BYTE PTR [eax],al
  43f3c6:	add    BYTE PTR [ebp-0x5a23bdb9],bl
  43f3cc:	add    al,BYTE PTR [eax]
  43f3ce:	add    dl,ah
  43f3d0:	(bad)
  43f3d3:	popf   
  43f3d4:	add    al,BYTE PTR [eax]
  43f3d6:	(bad)  
  43f3d7:	pusha  
  43f3d8:	pop    esi
  43f3d9:	(bad)  
  43f3da:	call   FWORD PTR [ebp+0x145c102]
  43f3e0:	add    eax,DWORD PTR [eax]
  43f3e2:	add    BYTE PTR [ebp+0x14084a8b],bl
  43f3e8:	push   cs
  43f3e9:	xor    ah,dl
  43f3eb:	pop    esi
  43f3ec:	add    ch,al
  43f3ee:	test   eax,0xa1f85fd2
  43f3f3:	lea    esi,[esi]
  43f3f5:	cmp    al,0x0
  43f3f7:	sbb    BYTE PTR [edi-0x8],0x0
  43f3fb:	popf   
  43f3fc:	(bad)  
  43f3fd:	or     eax,edi
  43f3ff:	mov    al,ds:0x9d43d41a
  43f404:	add    al,BYTE PTR [eax]
  43f406:	add    BYTE PTR [ebp-0x6738fa95],bl
  43f40c:	sbb    dl,ah
  43f40e:	inc    ebx
  43f40f:	popf   
  43f410:	add    DWORD PTR [eax],eax
  43f412:	add    BYTE PTR [ebp+0x71303a83],bl
  43f418:	ret    
  43f419:	(bad)  
  43f41a:	dec    DWORD PTR [eax]
  43f41c:	or     eax,0x36b505c1
  43f421:	cmp    al,0x0
  43f423:	popf   
  43f424:	add    al,BYTE PTR [eax]
  43f426:	add    BYTE PTR [esi],bl
  43f428:	sbb    eax,0xde00d438
  43f42d:	add    al,BYTE PTR [eax]
  43f42f:	jne    0x43f3d9
  43f431:	in     al,dx
  43f432:	(bad)  
  43f433:	(bad)  
  43f434:	test   al,0x2
  43f436:	aam    0x43
  43f438:	popf   
  43f439:	mov    ds:0x2ded42f,eax
  43f43e:	test   DWORD PTR ds:0x3c366d,ecx
  43f444:	and    al,0xcd
  43f446:	out    0x8b,eax
  43f448:	nop
  43f449:	adc    dl,ah
  43f44b:	inc    ebx
  43f44c:	popf   
  43f44d:	mov    eax,DWORD PTR [edx-0x18]
  43f450:	sahf   
  43f451:	les    edi,FWORD PTR [ebx]
  43f453:	mov    DWORD PTR [eax+0x6a],ebx
  43f456:	test   BYTE PTR [ebp-0xb],cl
  43f459:	mov    BYTE PTR [edx],cl
  43f45b:	sbb    al,0xe9
  43f45d:	ret    0x67ff
  43f460:	dec    ebp
  43f461:	push   es
  43f462:	inc    eax
  43f463:	add    dl,dh
  43f465:	hlt    
  43f466:	call   ebx
  43f468:	pop    esi
  43f469:	add    bl,BYTE PTR [ebp-0x3d36c4]
  43f46f:	(bad)  
  43f470:	mov    al,ds:0x9d43d3ce
  43f475:	aad    0x3
  43f477:	inc    eax
  43f478:	popf   
  43f479:	jmp    0x1585:0x25d045f
  43f480:	jns    0x43f4b8
  43f482:	cmp    al,0x0
  43f484:	dec    edi
  43f485:	push   0xffffffbd
  43f487:	imul   DWORD PTR [edx-0x6a3b83a2]
  43f48d:	mov    ds:0xde00d447,eax
  43f492:	add    bh,cl
  43f494:	adc    eax,0x3c36e5
  43f499:	ds mov ebx,0xa39d43d3
  43f49f:	dec    ebx
  43f4a0:	aam    0xde
  43f4a2:	add    dl,BYTE PTR [eax-0x18]
  43f4a5:	sub    DWORD PTR [ebp-0x8],ebx
  43f4a8:	call   FWORD PTR [esi]
  43f4aa:	inc    edi
  43f4ab:	add    ecx,DWORD PTR [ecx+0x4d8452d8]
  43f4b1:	dec    ebp
  43f4b2:	mov    ah,0xe7
  43f4b4:	aad    0x53
  43f4b6:	pop    esi
  43f4b7:	clc    
  43f4b8:	and    DWORD PTR [ecx+0x7],0xffffff9d
  43f4bc:	xor    al,0x69
  43f4be:	ret    0x8aff
  43f4c1:	rcl    BYTE PTR [edx+0x4d],1
  43f4c4:	push   0xffffff9d
  43f4c6:	mov    ds:0x2ded433,eax
  43f4cb:	push   eax
  43f4cc:	call   0x3c4ad2
  43f4d1:	push   ds
  43f4d2:	inc    edi
  43f4d3:	or     ecx,DWORD PTR [ebx+0x4d865260]
  43f4d9:	std    
  43f4da:	mov    DWORD PTR [edx-0x4],edx
  43f4dd:	(bad)  
  43f4de:	mov    bh,0xef
  43f4e0:	jae    0x43f539
  43f4e2:	mov    DWORD PTR [edx-0x20],eax
  43f4e5:	dec    ebp
  43f4e6:	mov    DWORD PTR [edx-0x24],ecx
  43f4e9:	dec    esp
  43f4ea:	push   0xffffffa9
  43f4ec:	sti    
  43f4ed:	loop   0x43f54c
  43f4ef:	jl     0x43f4b5
  43f4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f4f2:	mov    eax,ds:0x5e00d43f
  43f4f7:	add    al,BYTE PTR [ebp+0x3c365d15]
  43f4fd:	add    BYTE PTR [edi-0x5d],ch
  43f500:	dec    ebx
  43f501:	aam    0x5e
  43f503:	add    bh,ch
  43f505:	inc    esp
  43f506:	mov    ecx,0x710d84b2
  43f50b:	ss cmp al,0x0
  43f50e:	sahf   
  43f50f:	iret   
  43f510:	sti    
  43f511:	push   ecx
  43f512:	test   DWORD PTR ds:0x8192fff6,esi
  43f518:	ret    
  43f519:	or     al,0x16
  43f51b:	mov    bh,0xf3
  43f51d:	add    ebp,eax
  43f51f:	ds cld 
  43f521:	push   esp
  43f522:	or     DWORD PTR [ebx-0x38d91bae],0x3ee003fb
  43f52c:	xchg   BYTE PTR [ebp+0x61],al
  43f52f:	mov    DWORD PTR [edx-0x20],ecx
  43f532:	xchg   BYTE PTR [edi],cl
  43f534:	inc    eax
  43f535:	aam    0xde
  43f537:	add    al,BYTE PTR [edi-0x6696c2b3]
  43f53d:	(bad)  
  43f53e:	fcomp  DWORD PTR [edx-0x1]
  43f541:	call   FWORD PTR [ebp+0x2609e502]
  43f547:	mov    bh,0xf7
  43f549:	sbb    DWORD PTR [edi+0x6],0xffffff87
  43f54d:	push   ebp
  43f54e:	and    eax,0xd6f84289
  43f553:	(bad)  
  43f554:	out    dx,eax
  43f555:	jae    0x43f52c
  43f557:	mov    DWORD PTR [edx],ecx
  43f559:	xor    al,0x0
  43f55b:	icebp  
  43f55c:	sar    bh,0x2
  43f55f:	push   eax
  43f560:	pop    edx
  43f561:	test   BYTE PTR [ecx],dl
  43f563:	sahf   
  43f564:	mov    bh,0xf7
  43f566:	mov    eax,ds:0x3c36a9
  43f56b:	sahf   
  43f56c:	(bad)  
  43f56d:	test   DWORD PTR [ecx-0x7b57673],0x3e6431c
  43f577:	popf   
  43f578:	add    al,BYTE PTR [ebp+0x3c369115]
  43f57e:	add    BYTE PTR [esi-0x58cc0849],bl
  43f584:	mov    ds:0x25ed433,eax
  43f589:	std    
  43f58a:	inc    esp
  43f58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f58c:	mov    al,BYTE PTR [edi]
  43f58e:	jmp    0x43f57a
  43f590:	mov    ch,BYTE PTR [edx]
  43f592:	and    al,0x71
  43f594:	sar    bh,0x88
  43f597:	shl    BYTE PTR [edx],1
  43f599:	aam    0x43
  43f59b:	popf   
  43f59c:	cmpxchg8b QWORD PTR [ecx+0x43d3fac8]
  43f5a3:	popf   
  43f5a4:	cmpxchg8b QWORD PTR [ecx+0x43d42e90]
  43f5ab:	popf   
  43f5ac:	push   0x49
  43f5ae:	mul    DWORD PTR [edx+0x5c]
  43f5b1:	mov    cl,BYTE PTR ds:0x3c300a
  43f5b7:	and    al,0xce
  43f5b9:	idiv   DWORD PTR [ecx+0x3fff9d]
  43f5bf:	add    BYTE PTR [edx+ebp*2],bl
  43f5c2:	inc    DWORD PTR [edx]
  43f5c4:	popf   
  43f5c5:	add    al,BYTE PTR [ebp-0x30d7caab]
  43f5cb:	mov    DWORD PTR [eax-0x62bc2bd6],edx
  43f5d1:	mov    eax,ds:0x25ed427
  43f5d6:	push   eax
  43f5d7:	call   0x3c4e75
  43f5dc:	push   ds
  43f5dd:	inc    edi
  43f5de:	add    ecx,DWORD PTR [ebx+0x43d41690]
  43f5e4:	popf   
  43f5e5:	mov    cl,0xe7
  43f5e7:	aad    0xf7
  43f5e9:	pop    ebx
  43f5ea:	clc    
  43f5eb:	test   ebp,ebx
  43f5ed:	aad    0x3
  43f5ef:	xor    ebx,ebp
  43f5f1:	addr16 and eax,0xd426808b
  43f5f7:	inc    ebx
  43f5f8:	popf   
  43f5f9:	jg     0x43f5be
  43f5fb:	add    al,0x1e
  43f5fd:	push   ds
  43f5fe:	cmp    ah,dl
  43f600:	pop    esi
  43f601:	add    al,BYTE PTR [eax]
  43f603:	je     0x43f5a9
  43f605:	mov    eax,ds:0x25ed413
  43f60a:	xchg   DWORD PTR [ecx+eax*4+0x6],eax
  43f60e:	call   0xf89f9670
  43f613:	mov    esi,DWORD PTR [eax-0x62bc2c4a]
  43f619:	mov    al,0xbc
  43f61b:	xor    ebx,DWORD PTR [ebp-0x79]
  43f61e:	loop   0x43f67d
  43f620:	pop    esi
  43f621:	dec    esi
  43f622:	retf   
  43f623:	int3   
  43f624:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f62a:	add    al,BYTE PTR [eax]
  43f62c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f632:	add    al,BYTE PTR [eax]
  43f634:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f63a:	add    al,BYTE PTR [eax]
  43f63c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f642:	add    al,BYTE PTR [eax]
  43f644:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f64a:	add    al,BYTE PTR [eax]
  43f64c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f652:	add    al,BYTE PTR [eax]
  43f654:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f65a:	add    al,BYTE PTR [eax]
  43f65c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f662:	add    al,BYTE PTR [eax]
  43f664:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f66a:	add    al,BYTE PTR [eax]
  43f66c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f672:	add    al,BYTE PTR [eax]
  43f674:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f67a:	add    al,BYTE PTR [eax]
  43f67c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f682:	add    al,BYTE PTR [eax]
  43f684:	add    BYTE PTR [ebp+0x2],bl
  43f68a:	popf   
  43f68b:	add    al,BYTE PTR [eax]
  43f68d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f693:	add    al,BYTE PTR [eax]
  43f695:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f69b:	add    al,BYTE PTR [eax]
  43f69d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6a3:	add    al,BYTE PTR [eax]
  43f6a5:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6ab:	add    al,BYTE PTR [eax]
  43f6ad:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6b3:	add    al,BYTE PTR [eax]
  43f6b5:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6bb:	add    al,BYTE PTR [eax]
  43f6bd:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6c3:	add    al,BYTE PTR [eax]
  43f6c5:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6cb:	add    al,BYTE PTR [eax]
  43f6cd:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6d3:	add    al,BYTE PTR [eax]
  43f6d5:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6db:	add    al,BYTE PTR [eax]
  43f6dd:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6e3:	add    al,BYTE PTR [eax]
  43f6e5:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6eb:	add    al,BYTE PTR [eax]
  43f6ed:	add    BYTE PTR [eax],al
  43f6ef:	popf   
  43f6f0:	add    al,BYTE PTR [eax]
  43f6f2:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f6f8:	add    al,BYTE PTR [eax]
  43f6fa:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f700:	add    al,BYTE PTR [eax]
  43f702:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f708:	add    al,BYTE PTR [eax]
  43f70a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f710:	add    al,BYTE PTR [eax]
  43f712:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f718:	add    al,BYTE PTR [eax]
  43f71a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f720:	add    al,BYTE PTR [eax]
  43f722:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f728:	add    al,BYTE PTR [eax]
  43f72a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f730:	add    al,BYTE PTR [eax]
  43f732:	add    BYTE PTR [eax],al
  43f734:	add    al,0x0
  43f736:	add    BYTE PTR [ebp-0x4afffffe],bl
  43f73c:	add    al,BYTE PTR [eax]
  43f73e:	add    BYTE PTR [ecx],ah
  43f740:	xor    DWORD PTR [eax-0x67cececd],edx
  43f746:	xor    esp,DWORD PTR [ecx]
  43f748:	xor    DWORD PTR [eax-0x57cefecd],esp
  43f74e:	xor    ebx,DWORD PTR [ebp-0x4afffc3e]
  43f754:	add    al,BYTE PTR [eax]
  43f756:	add    BYTE PTR [esi+0x3b],bh
  43f759:	mov    edi,DWORD PTR [ecx]
  43f75b:	sub    eax,0x32399a3b
  43f760:	cmp    ebp,DWORD PTR [eax-0x2cc4c4c7]
  43f766:	cmp    ebx,esp
  43f768:	cmp    ch,al
  43f76a:	cmp    DWORD PTR [ecx+0x663a2d38],esp
  43f770:	cmp    BYTE PTR [ecx+0x3a],dl
  43f773:	inc    esp
  43f774:	cmp    ch,bl
  43f776:	cmp    bh,cl
  43f778:	cmp    bh,al
  43f77a:	cmp    al,0xe8
  43f77c:	cmp    eax,0x3f993cd5
  43f781:	or     eax,0xbe3f823d
  43f786:	cmp    eax,0x3ddb3ede
  43f78b:	les    edi,FWORD PTR [esi]
  43f78d:	out    dx,eax
  43f78e:	cmp    eax,0x3e0c3eb2
  43f793:	(bad)  
  43f794:	cmp    al,0x26
  43f796:	ds ins BYTE PTR es:[edi],dx
  43f798:	cmp    al,0x39
  43f79a:	ds add dl,bl
  43f79d:	cmp    al,0x45
  43f79f:	ds cmc 
  43f7a1:	cmp    al,0xc1
  43f7a3:	bound  edi,QWORD PTR ds:0x3c163f86
  43f7aa:	popf   
  43f7ab:	aas    
  43f7ac:	inc    ebx
  43f7ad:	cmp    al,0xb0
  43f7af:	aas    
  43f7b0:	pusha  
  43f7b1:	cmp    al,0xe4
  43f7b3:	aas    
  43f7b4:	ja     0x43f7f2
  43f7b6:	add    BYTE PTR [eax],al
  43f7b8:	popf   
  43f7b9:	rol    BYTE PTR [ebx],cl
  43f7bb:	add    BYTE PTR [ecx],bh
  43f7bd:	add    eax,DWORD PTR [eax]
  43f7bf:	add    BYTE PTR [edi-0x13cfdace],bl
  43f7c5:	xor    bl,BYTE PTR [ecx+0x30]
  43f7c8:	loop   0x43f7fc
  43f7ca:	data16 xor BYTE PTR [ecx+0x26308532],bh
  43f7d1:	xor    edx,DWORD PTR [ebx-0x5eccf8d0]
  43f7d7:	xor    dl,dh
  43f7d9:	xor    bh,BYTE PTR [edi-0x28cd1fd0]
  43f7df:	xor    ah,bh
  43f7e1:	xor    ch,bl
  43f7e3:	xor    BYTE PTR [ebx+esi*1],al
  43f7e6:	add    esi,DWORD PTR [ecx]
  43f7e8:	lods   al,BYTE PTR ds:[esi]
  43f7e9:	xor    DWORD PTR [eax+0x31],ecx
  43f7ec:	imul   esi,DWORD PTR [ecx],0x54
  43f7ef:	xor    DWORD PTR [eax+0x31],edi
  43f7f2:	push   0x31
  43f7f4:	pop    ds
  43f7f5:	xor    bh,BYTE PTR [esi-0x2ace2acf]
  43f7fb:	xor    DWORD PTR [ecx+esi*1-0x36ffce15],edi
  43f802:	xor    esi,edi
  43f804:	xor    DWORD PTR [eax+esi*1+0x30a9320e],edx
  43f80b:	sbb    eax,0x34308a32
  43f810:	xor    dh,BYTE PTR [edi+0x30]
  43f813:	aas    
  43f814:	xor    ah,BYTE PTR [eax+0x30]
  43f817:	dec    ecx
  43f818:	xor    dl,BYTE PTR [ebx+0x30]
  43f81b:	push   esp
  43f81c:	xor    bh,bh
  43f81e:	xor    BYTE PTR [eax+0x32],ch
  43f821:	add    BYTE PTR [ecx],dh
  43f823:	jb     0x43f857
  43f825:	sbb    dh,BYTE PTR [eax]
  43f827:	call   0x4f32:0xcc305b32
  43f82e:	xor    ah,bl
  43f830:	xor    bl,BYTE PTR [ebx-0x5accd4d1]
  43f836:	das    
  43f837:	dec    esp
  43f838:	xor    ecx,ebx
  43f83a:	das    
  43f83b:	arpl   WORD PTR [ebx],si
  43f83d:	les    ebp,FWORD PTR [edi]
  43f83f:	jno    0x43f874
  43f841:	aam    0x2f
  43f843:	test   BYTE PTR [ebx],dh
  43f845:	sbb    DWORD PTR [edi],ebp
  43f847:	popf   
  43f848:	xor    edi,edi
  43f84a:	cs mov cl,0x33
  43f84d:	pusha  
  43f84e:	das    
  43f84f:	into   
  43f850:	xor    ecx,DWORD PTR [ebx+0x2f]
  43f853:	in     eax,0x33
  43f855:	popf   
  43f856:	add    al,BYTE PTR [eax]
  43f858:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f85e:	add    al,BYTE PTR [eax]
  43f860:	add    BYTE PTR [ebp+0x2],bl
  43f866:	popf   
  43f867:	add    al,BYTE PTR [eax]
  43f869:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f86f:	add    al,BYTE PTR [eax]
  43f871:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f877:	add    al,BYTE PTR [eax]
  43f879:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f87f:	add    al,BYTE PTR [eax]
  43f881:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f887:	add    al,BYTE PTR [eax]
  43f889:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f88f:	add    al,BYTE PTR [eax]
  43f891:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f897:	add    al,BYTE PTR [eax]
  43f899:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f89f:	add    al,BYTE PTR [eax]
  43f8a1:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8a7:	add    al,BYTE PTR [eax]
  43f8a9:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8af:	add    al,BYTE PTR [eax]
  43f8b1:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8b7:	add    al,BYTE PTR [eax]
  43f8b9:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8bf:	add    al,BYTE PTR [eax]
  43f8c1:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8c7:	add    al,BYTE PTR [eax]
  43f8c9:	add    BYTE PTR [eax],al
  43f8cb:	popf   
  43f8cc:	add    al,BYTE PTR [eax]
  43f8ce:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8d4:	add    al,BYTE PTR [eax]
  43f8d6:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8dc:	add    al,BYTE PTR [eax]
  43f8de:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8e4:	add    al,BYTE PTR [eax]
  43f8e6:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8ec:	add    al,BYTE PTR [eax]
  43f8ee:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8f4:	add    al,BYTE PTR [eax]
  43f8f6:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f8fc:	add    al,BYTE PTR [eax]
  43f8fe:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f904:	add    al,BYTE PTR [eax]
  43f906:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f90c:	add    al,BYTE PTR [eax]
  43f90e:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f914:	add    al,BYTE PTR [eax]
  43f916:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f91c:	add    al,BYTE PTR [eax]
  43f91e:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f924:	add    al,BYTE PTR [eax]
  43f926:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f92c:	add    al,BYTE PTR [eax]
  43f92e:	add    BYTE PTR [eax],al
  43f930:	popf   
  43f931:	add    al,BYTE PTR [eax]
  43f933:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f939:	add    al,BYTE PTR [eax]
  43f93b:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f941:	add    al,BYTE PTR [eax]
  43f943:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f949:	add    al,BYTE PTR [eax]
  43f94b:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f951:	add    al,BYTE PTR [eax]
  43f953:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f959:	add    al,BYTE PTR [eax]
  43f95b:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f961:	add    al,BYTE PTR [eax]
  43f963:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f969:	add    al,BYTE PTR [eax]
  43f96b:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f971:	add    al,BYTE PTR [eax]
  43f973:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f979:	add    al,BYTE PTR [eax]
  43f97b:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f981:	add    al,BYTE PTR [eax]
  43f983:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f989:	add    al,BYTE PTR [eax]
  43f98b:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f991:	add    al,BYTE PTR [eax]
  43f993:	add    BYTE PTR [eax],al
  43f995:	popf   
  43f996:	add    al,BYTE PTR [eax]
  43f998:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f99e:	add    al,BYTE PTR [eax]
  43f9a0:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9a6:	add    al,BYTE PTR [eax]
  43f9a8:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9ae:	add    al,BYTE PTR [eax]
  43f9b0:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9b6:	add    al,BYTE PTR [eax]
  43f9b8:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9be:	add    al,BYTE PTR [eax]
  43f9c0:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9c6:	add    al,BYTE PTR [eax]
  43f9c8:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9ce:	add    al,BYTE PTR [eax]
  43f9d0:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9d6:	add    al,BYTE PTR [eax]
  43f9d8:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9de:	add    al,BYTE PTR [eax]
  43f9e0:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9e6:	add    al,BYTE PTR [eax]
  43f9e8:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9ee:	add    al,BYTE PTR [eax]
  43f9f0:	add    BYTE PTR [ebp-0x62fffffe],bl
  43f9f6:	add    al,BYTE PTR [eax]
  43f9f8:	add    BYTE PTR [eax],al
  43f9fa:	popf   
  43f9fb:	add    al,BYTE PTR [eax]
  43f9fd:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa03:	add    al,BYTE PTR [eax]
  43fa05:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa0b:	add    al,BYTE PTR [eax]
  43fa0d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa13:	add    al,BYTE PTR [eax]
  43fa15:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa1b:	add    al,BYTE PTR [eax]
  43fa1d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa23:	add    al,BYTE PTR [eax]
  43fa25:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa2b:	add    al,BYTE PTR [eax]
  43fa2d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa33:	add    al,BYTE PTR [eax]
  43fa35:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa3b:	add    al,BYTE PTR [eax]
  43fa3d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa43:	add    al,BYTE PTR [eax]
  43fa45:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa4b:	add    al,BYTE PTR [eax]
  43fa4d:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa53:	add    al,BYTE PTR [eax]
  43fa55:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa5b:	add    al,BYTE PTR [eax]
  43fa5d:	add    BYTE PTR [eax],al
  43fa5f:	popf   
  43fa60:	add    al,BYTE PTR [eax]
  43fa62:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa68:	add    al,BYTE PTR [eax]
  43fa6a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa70:	add    al,BYTE PTR [eax]
  43fa72:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa78:	add    al,BYTE PTR [eax]
  43fa7a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa80:	add    al,BYTE PTR [eax]
  43fa82:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa88:	add    al,BYTE PTR [eax]
  43fa8a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa90:	add    al,BYTE PTR [eax]
  43fa92:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fa98:	add    al,BYTE PTR [eax]
  43fa9a:	add    BYTE PTR [ebp-0x62fffffe],bl
  43faa0:	add    al,BYTE PTR [eax]
  43faa2:	add    BYTE PTR [ebp-0x62fffffe],bl
  43faa8:	add    al,BYTE PTR [eax]
  43faaa:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fab0:	add    al,BYTE PTR [eax]
  43fab2:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fab8:	add    al,BYTE PTR [eax]
  43faba:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fac0:	add    al,BYTE PTR [eax]
  43fac2:	add    BYTE PTR [eax],al
  43fac4:	popf   
  43fac5:	add    al,BYTE PTR [eax]
  43fac7:	add    BYTE PTR [ebp-0x62fffffe],bl
  43facd:	add    al,BYTE PTR [eax]
  43facf:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fad5:	add    al,BYTE PTR [eax]
  43fad7:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fadd:	add    al,BYTE PTR [eax]
  43fadf:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fae5:	add    al,BYTE PTR [eax]
  43fae7:	add    BYTE PTR [ebp-0x62fffffe],bl
  43faed:	add    al,BYTE PTR [eax]
  43faef:	add    BYTE PTR [ebp-0x62fffffe],bl
  43faf5:	add    al,BYTE PTR [eax]
  43faf7:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fafd:	add    al,BYTE PTR [eax]
  43faff:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb05:	add    al,BYTE PTR [eax]
  43fb07:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb0d:	add    al,BYTE PTR [eax]
  43fb0f:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb15:	add    al,BYTE PTR [eax]
  43fb17:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb1d:	add    al,BYTE PTR [eax]
  43fb1f:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb25:	add    al,BYTE PTR [eax]
  43fb27:	add    BYTE PTR [eax],al
  43fb29:	popf   
  43fb2a:	add    al,BYTE PTR [eax]
  43fb2c:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb32:	add    al,BYTE PTR [eax]
  43fb34:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fb3a:	add    al,BYTE PTR [eax]
  43fb3c:	add    BYTE PTR [ebp+0x10000002],bl
  43fb42:	ds inc esp
  43fb44:	add    BYTE PTR [esi+edi*1],dl
  43fb47:	inc    esp
  43fb48:	add    BYTE PTR [eax],bl
  43fb4a:	ds inc esp
  43fb4c:	add    BYTE PTR [esi+edi*1],bl
  43fb4f:	inc    esp
  43fb50:	add    BYTE PTR [eax],ah
  43fb52:	ds inc esp
  43fb54:	add    BYTE PTR [esi+edi*1],ah
  43fb57:	inc    esp
  43fb58:	add    BYTE PTR [eax],ch
  43fb5a:	ds inc esp
  43fb5c:	add    BYTE PTR [esi+edi*1],ch
  43fb5f:	inc    esp
  43fb60:	add    BYTE PTR [eax],dh
  43fb62:	ds inc esp
  43fb64:	add    BYTE PTR [esi+edi*1],dh
  43fb67:	inc    esp
  43fb68:	add    BYTE PTR [eax],bh
  43fb6a:	ds inc esp
  43fb6c:	add    BYTE PTR [esi+edi*1],bh
  43fb6f:	inc    esp
  43fb70:	add    BYTE PTR [eax+0x3e],al
  43fb73:	inc    esp
  43fb74:	add    al,bh
  43fb76:	cmp    eax,0x3e440044
  43fb7b:	inc    esp
  43fb7c:	add    BYTE PTR [eax+0x3e],cl
  43fb7f:	inc    esp
  43fb80:	add    BYTE PTR [esi+edi*1+0x44],cl
  43fb84:	add    BYTE PTR [eax+0x3e],dl
  43fb87:	inc    esp
  43fb88:	add    BYTE PTR [esi+edi*1+0x44],dl
  43fb8c:	add    BYTE PTR [eax+0x3e],bl
  43fb8f:	inc    esp
  43fb90:	add    BYTE PTR [esi+edi*1+0x44],bl
  43fb94:	add    BYTE PTR [eax+0x3e],ah
  43fb97:	inc    esp
  43fb98:	add    BYTE PTR [esi+edi*1+0x44],ah
  43fb9c:	add    BYTE PTR [eax+0x3e],ch
  43fb9f:	inc    esp
  43fba0:	add    BYTE PTR [esi+edi*1+0x44],ch
  43fba4:	add    BYTE PTR [eax+0x3e],dh
  43fba7:	inc    esp
  43fba8:	add    BYTE PTR [esi+edi*1+0x44],dh
  43fbac:	add    BYTE PTR [eax+0x3e],bh
  43fbaf:	inc    esp
  43fbb0:	add    BYTE PTR [esi+edi*1+0x44],bh
  43fbb4:	add    BYTE PTR [eax-0x7bffbbc2],al
  43fbba:	ds inc esp
  43fbbc:	add    BYTE PTR [eax-0x73ffbbc2],cl
  43fbc2:	ds inc esp
  43fbc4:	add    BYTE PTR [eax-0x6bffbbc2],dl
  43fbca:	ds inc esp
  43fbcc:	add    BYTE PTR [eax-0x63ffbbc2],bl
  43fbd2:	ds inc esp
  43fbd4:	add    BYTE PTR [eax-0x5bffbbc2],ah
  43fbda:	ds inc esp
  43fbdc:	add    BYTE PTR [esi+edi*1],dh
  43fbdf:	inc    esp
  43fbe0:	add    BYTE PTR [eax-0x53ffbbc2],ch
  43fbe6:	ds inc esp
  43fbe8:	add    BYTE PTR [eax-0x4bffbbc2],dh
  43fbee:	ds inc esp
  43fbf0:	add    BYTE PTR [eax-0x43ffbbc2],bh
  43fbf6:	ds inc esp
  43fbf8:	add    al,al
  43fbfa:	ds inc esp
  43fbfc:	add    ah,al
  43fbfe:	ds inc esp
  43fc00:	add    al,cl
  43fc02:	ds inc esp
  43fc04:	add    ah,cl
  43fc06:	ds inc esp
  43fc08:	add    al,dl
  43fc0a:	ds inc esp
  43fc0c:	add    ah,dl
  43fc0e:	ds inc esp
  43fc10:	add    al,bl
  43fc12:	ds inc esp
  43fc14:	add    ah,bl
  43fc16:	ds inc esp
  43fc18:	add    al,ah
  43fc1a:	ds inc esp
  43fc1c:	add    ah,ah
  43fc1e:	ds inc esp
  43fc20:	add    al,ch
  43fc22:	ds inc esp
  43fc24:	add    ah,ch
  43fc26:	ds inc esp
  43fc28:	add    al,dh
  43fc2a:	ds inc esp
  43fc2c:	add    ah,dh
  43fc2e:	ds inc esp
  43fc30:	add    al,bh
  43fc32:	ds inc esp
  43fc34:	add    ah,bh
  43fc36:	ds inc esp
  43fc38:	add    BYTE PTR [eax],al
  43fc3a:	aas    
  43fc3b:	inc    esp
  43fc3c:	add    BYTE PTR [edi+edi*1],al
  43fc3f:	inc    esp
  43fc40:	add    BYTE PTR [eax],cl
  43fc42:	aas    
  43fc43:	inc    esp
  43fc44:	add    BYTE PTR [edi+edi*1],cl
  43fc47:	inc    esp
  43fc48:	add    BYTE PTR [eax],dl
  43fc4a:	aas    
  43fc4b:	inc    esp
  43fc4c:	add    BYTE PTR [edi+edi*1],dl
  43fc4f:	inc    esp
  43fc50:	add    BYTE PTR [eax],bl
  43fc52:	aas    
  43fc53:	inc    esp
  43fc54:	add    BYTE PTR [edi+edi*1],bl
  43fc57:	inc    esp
  43fc58:	add    BYTE PTR [eax],ah
  43fc5a:	aas    
  43fc5b:	inc    esp
  43fc5c:	add    BYTE PTR [edi+edi*1],ah
  43fc5f:	inc    esp
  43fc60:	add    BYTE PTR [eax],ch
  43fc62:	aas    
  43fc63:	inc    esp
  43fc64:	add    BYTE PTR [edi+edi*1],ch
  43fc67:	inc    esp
  43fc68:	add    BYTE PTR [eax],dh
  43fc6a:	aas    
  43fc6b:	inc    esp
  43fc6c:	add    BYTE PTR [edi+edi*1],dh
  43fc6f:	inc    esp
  43fc70:	add    BYTE PTR [eax],bh
  43fc72:	aas    
  43fc73:	inc    esp
  43fc74:	add    BYTE PTR [edi+edi*1],bh
  43fc77:	inc    esp
  43fc78:	add    BYTE PTR [eax+0x3f],al
  43fc7b:	inc    esp
  43fc7c:	add    BYTE PTR [edi+edi*1+0x44],al
  43fc80:	add    BYTE PTR [eax],bl
  43fc82:	aas    
  43fc83:	inc    esp
  43fc84:	add    BYTE PTR [eax+0x3f],cl
  43fc87:	inc    esp
  43fc88:	add    BYTE PTR [edi+edi*1+0x44],cl
  43fc8c:	add    BYTE PTR [eax+0x3f],dl
  43fc8f:	inc    esp
  43fc90:	add    BYTE PTR [edi+edi*1+0x44],dl
  43fc94:	add    ah,bh
  43fc96:	cmp    eax,0x3f580044
  43fc9b:	inc    esp
  43fc9c:	add    BYTE PTR [edi+edi*1+0x44],bl
  43fca0:	add    BYTE PTR [eax+0x3f],ah
  43fca3:	inc    esp
  43fca4:	add    BYTE PTR [edi+edi*1+0x44],ah
  43fca8:	add    BYTE PTR [eax+0x3f],ch
  43fcab:	inc    esp
  43fcac:	add    BYTE PTR [edi+edi*1+0x44],ch
  43fcb0:	add    al,ah
  43fcb2:	ds inc esp
  43fcb4:	add    BYTE PTR [eax+0x3f],dh
  43fcb7:	inc    esp
  43fcb8:	add    BYTE PTR [edi+edi*1+0x44],dh
  43fcbc:	add    BYTE PTR [eax+0x3f],bh
  43fcbf:	inc    esp
  43fcc0:	add    BYTE PTR [edi+edi*1+0x44],bh
  43fcc4:	add    BYTE PTR [eax-0x7bffbbc1],al
  43fcca:	aas    
  43fccb:	inc    esp
  43fccc:	add    BYTE PTR [eax+0x400443f],cl
  43fcd2:	aas    
  43fcd3:	inc    esp
  43fcd4:	add    BYTE PTR [esi+edi*1+0x3f8c0044],dl
  43fcdb:	inc    esp
  43fcdc:	add    BYTE PTR [eax-0x6bffbbc1],dl
  43fce2:	aas    
  43fce3:	inc    esp
  43fce4:	add    BYTE PTR [eax-0x63ffbbc1],bl
  43fcea:	aas    
  43fceb:	inc    esp
  43fcec:	add    BYTE PTR [eax-0x5bffbbc1],ah
  43fcf2:	aas    
  43fcf3:	inc    esp
  43fcf4:	add    BYTE PTR [eax-0x53ffbbc1],ch
  43fcfa:	aas    
  43fcfb:	inc    esp
  43fcfc:	add    BYTE PTR [eax-0x4bffbbc1],dh
  43fd02:	aas    
  43fd03:	inc    esp
  43fd04:	add    BYTE PTR [eax+0x3f],al
  43fd07:	inc    esp
  43fd08:	add    BYTE PTR [eax-0x43ffbbc1],bh
  43fd0e:	aas    
  43fd0f:	inc    esp
  43fd10:	add    al,al
  43fd12:	aas    
  43fd13:	inc    esp
  43fd14:	add    ah,al
  43fd16:	aas    
  43fd17:	inc    esp
  43fd18:	add    al,cl
  43fd1a:	aas    
  43fd1b:	inc    esp
  43fd1c:	add    BYTE PTR [edi+edi*1+0x44],dl
  43fd20:	add    ah,cl
  43fd22:	aas    
  43fd23:	inc    esp
  43fd24:	add    al,dl
  43fd26:	aas    
  43fd27:	inc    esp
  43fd28:	add    ah,dl
  43fd2a:	aas    
  43fd2b:	inc    esp
  43fd2c:	add    ah,dl
  43fd2e:	ds inc esp
  43fd30:	add    al,bl
  43fd32:	aas    
  43fd33:	inc    esp
  43fd34:	add    ah,bl
  43fd36:	aas    
  43fd37:	inc    esp
  43fd38:	add    BYTE PTR [eax],bh
  43fd3a:	aas    
  43fd3b:	inc    esp
  43fd3c:	add    al,ah
  43fd3e:	aas    
  43fd3f:	inc    esp
  43fd40:	add    ah,ah
  43fd42:	aas    
  43fd43:	inc    esp
  43fd44:	add    BYTE PTR [edi+edi*1+0x3fe80044],al
  43fd4b:	inc    esp
  43fd4c:	add    ah,ch
  43fd4e:	aas    
  43fd4f:	inc    esp
  43fd50:	add    al,dh
  43fd52:	aas    
  43fd53:	inc    esp
  43fd54:	add    ah,dh
  43fd56:	aas    
  43fd57:	inc    esp
  43fd58:	add    al,bh
  43fd5a:	aas    
  43fd5b:	inc    esp
  43fd5c:	add    ah,bh
  43fd5e:	aas    
  43fd5f:	inc    esp
  43fd60:	add    BYTE PTR [eax],al
  43fd62:	inc    eax
  43fd63:	inc    esp
  43fd64:	add    BYTE PTR [eax+eax*2],al
  43fd67:	inc    esp
  43fd68:	add    BYTE PTR [eax],cl
  43fd6a:	inc    eax
  43fd6b:	inc    esp
  43fd6c:	add    BYTE PTR [eax+eax*2],cl
  43fd6f:	inc    esp
  43fd70:	add    BYTE PTR [eax],dl
  43fd72:	inc    eax
  43fd73:	inc    esp
  43fd74:	add    BYTE PTR [eax+eax*2],dl
  43fd77:	inc    esp
  43fd78:	add    ah,bh
  43fd7a:	aas    
  43fd7b:	inc    esp
  43fd7c:	add    BYTE PTR [eax],bl
  43fd7e:	inc    eax
  43fd7f:	inc    esp
  43fd80:	add    BYTE PTR [eax+eax*2],bl
  43fd83:	inc    esp
  43fd84:	add    BYTE PTR [eax],ah
  43fd86:	inc    eax
  43fd87:	inc    esp
  43fd88:	add    BYTE PTR [eax+eax*2],ah
  43fd8b:	inc    esp
  43fd8c:	add    BYTE PTR [eax],ch
  43fd8e:	inc    eax
  43fd8f:	inc    esp
  43fd90:	add    BYTE PTR [eax],bl
  43fd92:	ds inc esp
  43fd94:	add    BYTE PTR [eax+eax*2],ch
  43fd97:	inc    esp
  43fd98:	add    al,bl
  43fd9a:	ds inc esp
  43fd9c:	add    BYTE PTR [eax],dh
  43fd9e:	inc    eax
  43fd9f:	inc    esp
  43fda0:	add    BYTE PTR [eax+eax*2],dh
  43fda3:	inc    esp
  43fda4:	add    BYTE PTR [eax],bh
  43fda6:	inc    eax
  43fda7:	inc    esp
  43fda8:	add    BYTE PTR [eax+eax*2],bh
  43fdab:	inc    esp
  43fdac:	add    BYTE PTR [eax+0x40],al
  43fdaf:	inc    esp
  43fdb0:	add    BYTE PTR [eax+eax*2],ah
  43fdb3:	inc    esp
  43fdb4:	add    BYTE PTR [eax+eax*2+0x44],al
  43fdb8:	add    BYTE PTR [eax+0x40],cl
  43fdbb:	inc    esp
  43fdbc:	add    BYTE PTR [eax+eax*2+0x44],cl
  43fdc0:	add    BYTE PTR [eax+0x40],dl
  43fdc3:	inc    esp
  43fdc4:	add    BYTE PTR [eax+eax*2+0x44],dl
  43fdc8:	add    BYTE PTR [eax+0x40],bl
  43fdcb:	inc    esp
  43fdcc:	add    BYTE PTR [eax+eax*2+0x44],bl
  43fdd0:	add    ah,al
  43fdd2:	ds inc esp
  43fdd4:	add    BYTE PTR [eax+0x6000443f],dl
  43fdda:	inc    eax
  43fddb:	inc    esp
  43fddc:	add    BYTE PTR [eax+eax*2+0x44],ah
  43fde0:	add    BYTE PTR [eax+0x40],ch
  43fde3:	inc    esp
  43fde4:	add    BYTE PTR [eax+eax*2+0x44],ch
  43fde8:	add    BYTE PTR [eax],cl
  43fdea:	ds inc esp
  43fdec:	add    BYTE PTR [eax+0x40],dh
  43fdef:	inc    esp
  43fdf0:	add    BYTE PTR [eax+eax*2+0x44],dh
  43fdf4:	add    BYTE PTR [eax+0x40],bh
  43fdf7:	inc    esp
  43fdf8:	add    BYTE PTR [esi+edi*1],al
  43fdfb:	inc    esp
  43fdfc:	add    BYTE PTR [eax+eax*2+0x44],bh
  43fe00:	add    BYTE PTR [eax-0x43ffbbc0],al
  43fe06:	ds inc esp
  43fe08:	add    BYTE PTR [eax+eax*2+0x40880044],al
  43fe0f:	inc    esp
  43fe10:	add    ah,bh
  43fe12:	ds inc esp
  43fe14:	add    BYTE PTR [eax+eax*2+0x40900044],cl
  43fe1b:	inc    esp
  43fe1c:	add    BYTE PTR [eax+eax*2+0x3ef80044],dl
  43fe23:	inc    esp
  43fe24:	add    BYTE PTR [eax],cl
  43fe26:	ds inc esp
  43fe28:	add    BYTE PTR [eax+0x3f],ch
  43fe2b:	inc    esp
  43fe2c:	add    BYTE PTR [eax+0x2c004440],bl
  43fe32:	inc    eax
  43fe33:	inc    esp
  43fe34:	add    BYTE PTR [eax],bl
  43fe36:	inc    eax
  43fe37:	inc    esp
  43fe38:	add    BYTE PTR [eax+eax*2+0x40a00044],bl
  43fe3f:	inc    esp
  43fe40:	add    BYTE PTR [eax+eax*2+0x3ea40044],ah
  43fe47:	inc    esp
  43fe48:	add    BYTE PTR [eax-0x53ffbbc0],ch
  43fe4e:	inc    eax
  43fe4f:	inc    esp
  43fe50:	add    BYTE PTR [eax-0x4bffbbc0],dh
  43fe56:	inc    eax
  43fe57:	inc    esp
  43fe58:	add    BYTE PTR [eax+eax*2+0x44],dl
  43fe5c:	add    BYTE PTR [eax-0x1bffbbc0],bh
  43fe62:	inc    eax
  43fe63:	inc    esp
  43fe64:	add    al,ch
  43fe66:	inc    eax
  43fe67:	inc    esp
  43fe68:	add    ah,ch
  43fe6a:	inc    eax
  43fe6b:	inc    esp
  43fe6c:	add    al,dh
  43fe6e:	inc    eax
  43fe6f:	inc    esp
  43fe70:	add    ah,ah
  43fe72:	inc    eax
  43fe73:	inc    esp
  43fe74:	add    ah,dh
  43fe76:	inc    eax
  43fe77:	inc    esp
  43fe78:	add    al,bh
  43fe7a:	inc    eax
  43fe7b:	inc    esp
  43fe7c:	add    ah,bh
  43fe7e:	inc    eax
  43fe7f:	inc    esp
  43fe80:	add    BYTE PTR [eax],al
  43fe82:	inc    ecx
  43fe83:	inc    esp
  43fe84:	add    BYTE PTR [ecx+eax*2],al
  43fe87:	inc    esp
  43fe88:	add    BYTE PTR [eax],cl
  43fe8a:	inc    ecx
  43fe8b:	inc    esp
  43fe8c:	add    BYTE PTR [ecx+eax*2],cl
  43fe8f:	inc    esp
  43fe90:	add    BYTE PTR [eax],dl
  43fe92:	inc    ecx
  43fe93:	inc    esp
  43fe94:	add    BYTE PTR [ecx+eax*2],dl
  43fe97:	inc    esp
  43fe98:	add    BYTE PTR [eax],bl
  43fe9a:	inc    ecx
  43fe9b:	inc    esp
  43fe9c:	add    BYTE PTR [ecx+eax*2],bl
  43fe9f:	inc    esp
  43fea0:	add    BYTE PTR [eax],ah
  43fea2:	inc    ecx
  43fea3:	inc    esp
  43fea4:	add    BYTE PTR [ecx+eax*2],ah
  43fea7:	inc    esp
  43fea8:	add    BYTE PTR [eax],ch
  43feaa:	inc    ecx
  43feab:	inc    esp
  43feac:	add    BYTE PTR [ecx+eax*2],ch
  43feaf:	inc    esp
  43feb0:	add    BYTE PTR [eax],dh
  43feb2:	inc    ecx
  43feb3:	inc    esp
  43feb4:	add    BYTE PTR [ecx+eax*2],dh
  43feb7:	inc    esp
  43feb8:	add    BYTE PTR [eax],bh
  43feba:	inc    ecx
  43febb:	inc    esp
  43febc:	add    BYTE PTR [ecx+eax*2],bh
  43febf:	inc    esp
  43fec0:	add    BYTE PTR [eax+0x41],al
  43fec3:	inc    esp
  43fec4:	add    BYTE PTR [ecx+eax*2+0x44],al
  43fec8:	add    BYTE PTR [eax+0x41],cl
  43fecb:	inc    esp
  43fecc:	add    BYTE PTR [ecx+eax*2+0x44],cl
  43fed0:	add    BYTE PTR [eax+0x41],dl
  43fed3:	inc    esp
  43fed4:	add    BYTE PTR [ecx+eax*2+0x44],dl
  43fed8:	add    BYTE PTR [eax+0x41],bl
  43fedb:	inc    esp
  43fedc:	add    BYTE PTR [ecx+eax*2+0x44],bl
  43fee0:	add    BYTE PTR [eax+0x41],ah
  43fee3:	inc    esp
  43fee4:	add    BYTE PTR [ecx+eax*2+0x44],ah
  43fee8:	add    BYTE PTR [eax+0x41],ch
  43feeb:	inc    esp
  43feec:	add    BYTE PTR [eax],al
  43feee:	inc    ecx
  43feef:	inc    esp
  43fef0:	add    BYTE PTR [ecx+eax*2+0x44],ch
  43fef4:	add    BYTE PTR [eax+0x41],dh
  43fef7:	inc    esp
  43fef8:	add    BYTE PTR [eax],dl
  43fefa:	inc    ecx
  43fefb:	inc    esp
  43fefc:	add    BYTE PTR [ecx+eax*2+0x44],dh
  43ff00:	add    BYTE PTR [eax+0x41],bh
  43ff03:	inc    esp
  43ff04:	add    BYTE PTR [ecx+eax*2+0x44],bh
  43ff08:	add    BYTE PTR [eax-0x7bffbbbf],al
  43ff0e:	inc    ecx
  43ff0f:	inc    esp
  43ff10:	add    BYTE PTR [eax-0x73ffbbbf],cl
  43ff16:	inc    ecx
  43ff17:	inc    esp
  43ff18:	add    BYTE PTR [eax-0x6bffbbbf],dl
  43ff1e:	inc    ecx
  43ff1f:	inc    esp
  43ff20:	add    BYTE PTR [eax-0x63ffbbbf],bl
  43ff26:	inc    ecx
  43ff27:	inc    esp
  43ff28:	add    BYTE PTR [eax-0x5bffbbbf],ah
  43ff2e:	inc    ecx
  43ff2f:	inc    esp
  43ff30:	add    BYTE PTR [eax+0x18004441],ch
  43ff36:	inc    ecx
  43ff37:	inc    esp
  43ff38:	add    BYTE PTR [ecx+eax*2+0x41b00044],ch
  43ff3f:	inc    esp
  43ff40:	add    BYTE PTR [ecx+eax*2+0x41b80044],dh
  43ff47:	inc    esp
  43ff48:	add    BYTE PTR [ecx+eax*2+0x44],ah
  43ff4c:	add    al,dl
  43ff4e:	inc    eax
  43ff4f:	inc    esp
  43ff50:	add    BYTE PTR [ecx+eax*2+0x41c00044],bh
  43ff57:	inc    esp
  43ff58:	add    ah,al
  43ff5a:	inc    ecx
  43ff5b:	inc    esp
  43ff5c:	add    BYTE PTR [ecx+eax*2],al
  43ff5f:	inc    esp
  43ff60:	add    al,cl
  43ff62:	inc    ecx
  43ff63:	inc    esp
  43ff64:	add    ah,cl
  43ff66:	inc    ecx
  43ff67:	inc    esp
  43ff68:	add    al,cl
  43ff6a:	inc    eax
  43ff6b:	inc    esp
  43ff6c:	add    al,dl
  43ff6e:	inc    ecx
  43ff6f:	inc    esp
  43ff70:	add    ah,dl
  43ff72:	inc    ecx
  43ff73:	inc    esp
  43ff74:	add    ah,ah
  43ff76:	inc    eax
  43ff77:	inc    esp
  43ff78:	add    al,bl
  43ff7a:	inc    ecx
  43ff7b:	inc    esp
  43ff7c:	add    BYTE PTR [ecx+eax*2+0x44],ch
  43ff80:	add    BYTE PTR [ecx+eax*2+0x44],dl
  43ff84:	add    BYTE PTR [eax-0x23ffbbbf],cl
  43ff8a:	inc    ecx
  43ff8b:	inc    esp
  43ff8c:	add    BYTE PTR [eax],dl
  43ff8e:	inc    ecx
  43ff8f:	inc    esp
  43ff90:	add    al,ah
  43ff92:	inc    ecx
  43ff93:	inc    esp
  43ff94:	add    BYTE PTR [ecx+eax*2+0x41e40044],ah
  43ff9b:	inc    esp
  43ff9c:	add    al,ch
  43ff9e:	inc    ecx
  43ff9f:	inc    esp
  43ffa0:	add    ah,ch
  43ffa2:	inc    ecx
  43ffa3:	inc    esp
  43ffa4:	add    BYTE PTR [ecx+eax*2+0x416c0044],ah
  43ffab:	inc    esp
  43ffac:	add    al,dh
  43ffae:	inc    ecx
  43ffaf:	inc    esp
  43ffb0:	add    ah,dh
  43ffb2:	inc    ecx
  43ffb3:	inc    esp
  43ffb4:	add    al,bh
  43ffb6:	inc    ecx
  43ffb7:	inc    esp
  43ffb8:	add    ah,bh
  43ffba:	inc    ecx
  43ffbb:	inc    esp
  43ffbc:	add    BYTE PTR [eax],al
  43ffbe:	inc    edx
  43ffbf:	inc    esp
  43ffc0:	add    BYTE PTR [edx+eax*2],al
  43ffc3:	inc    esp
  43ffc4:	add    BYTE PTR [eax],cl
  43ffc6:	inc    edx
  43ffc7:	inc    esp
  43ffc8:	add    BYTE PTR [edx+eax*2],cl
  43ffcb:	inc    esp
  43ffcc:	add    BYTE PTR [ecx+eax*2+0x40cc0044],bl
  43ffd3:	inc    esp
  43ffd4:	add    BYTE PTR [eax],dl
  43ffd6:	inc    edx
  43ffd7:	inc    esp
  43ffd8:	add    BYTE PTR [edx+eax*2],dl
  43ffdb:	inc    esp
  43ffdc:	add    BYTE PTR [eax],bl
  43ffde:	inc    edx
  43ffdf:	inc    esp
  43ffe0:	add    BYTE PTR [edx+eax*2],bl
  43ffe3:	inc    esp
  43ffe4:	add    BYTE PTR [eax],ah
  43ffe6:	inc    edx
  43ffe7:	inc    esp
  43ffe8:	add    BYTE PTR [edx+eax*2],ah
  43ffeb:	inc    esp
  43ffec:	add    ah,dh
  43ffee:	inc    ecx
  43ffef:	inc    esp
  43fff0:	add    BYTE PTR [eax],ch
  43fff2:	inc    edx
  43fff3:	inc    esp
  43fff4:	add    BYTE PTR [edx+eax*2],ch
  43fff7:	inc    esp
  43fff8:	add    BYTE PTR [eax],dh
  43fffa:	inc    edx
  43fffb:	inc    esp
  43fffc:	add    BYTE PTR [edx+eax*2],dh
  43ffff:	inc    esp
  440000:	add    BYTE PTR [eax],bh
  440002:	inc    edx
  440003:	inc    esp
  440004:	add    BYTE PTR [edx+eax*2],bh
  440007:	inc    esp
  440008:	add    BYTE PTR [eax+0x42],al
  44000b:	inc    esp
  44000c:	add    BYTE PTR [edx+eax*2+0x44],al
  440010:	add    BYTE PTR [ecx+eax*2+0x42480044],cl
  440017:	inc    esp
  440018:	add    BYTE PTR [edx+eax*2+0x44],cl
  44001c:	add    BYTE PTR [eax+0x42],dl
  44001f:	inc    esp
  440020:	add    BYTE PTR [edx+eax*2+0x44],dl
  440024:	add    BYTE PTR [eax+0x41],bh
  440027:	inc    esp
  440028:	add    BYTE PTR [eax+0x42],bl
  44002b:	inc    esp
  44002c:	add    BYTE PTR [edx+eax*2+0x44],bl
  440030:	add    BYTE PTR [eax+0x42],ah
  440033:	inc    esp
  440034:	add    BYTE PTR [eax+0x34004441],ch
  44003a:	inc    ecx
  44003b:	inc    esp
  44003c:	add    BYTE PTR [eax+0x42],cl
  44003f:	inc    esp
  440040:	add    BYTE PTR [edx+eax*2+0x44],ah
  440044:	add    BYTE PTR [eax+0x42],ch
  440047:	inc    esp
  440048:	add    BYTE PTR [edx+eax*2+0x44],ch
  44004c:	add    BYTE PTR [eax+0x42],dh
  44004f:	inc    esp
  440050:	add    BYTE PTR [edx+eax*2+0x44],dh
  440054:	add    BYTE PTR [eax+0x42],bh
  440057:	inc    esp
  440058:	add    BYTE PTR [eax],ah
  44005a:	inc    edx
  44005b:	inc    esp
  44005c:	add    BYTE PTR [edx+eax*2+0x44],bh
  440060:	add    BYTE PTR [eax-0x7bffbbbe],al
  440066:	inc    edx
  440067:	inc    esp
  440068:	add    BYTE PTR [eax-0x73ffbbbe],cl
  44006e:	inc    edx
  44006f:	inc    esp
  440070:	add    BYTE PTR [eax-0x6bffbbbe],dl
  440076:	inc    edx
  440077:	inc    esp
  440078:	add    BYTE PTR [eax-0x63ffbbbe],bl
  44007e:	inc    edx
  44007f:	inc    esp
  440080:	add    BYTE PTR [eax-0x5bffbbbe],ah
  440086:	inc    edx
  440087:	inc    esp
  440088:	add    BYTE PTR [eax-0x53ffbbbe],ch
  44008e:	inc    edx
  44008f:	inc    esp
  440090:	add    BYTE PTR [ecx+eax*2],dh
  440093:	inc    esp
  440094:	add    BYTE PTR [eax-0x4fffbbbe],cl
  44009a:	inc    edx
  44009b:	inc    esp
  44009c:	add    BYTE PTR [edx+eax*2+0x42b80044],dh
  4400a3:	inc    esp
  4400a4:	add    BYTE PTR [edx+eax*2+0x42c00044],bh
  4400ab:	inc    esp
  4400ac:	add    BYTE PTR [ecx+eax*2],bh
  4400af:	inc    esp
  4400b0:	add    ah,al
  4400b2:	inc    edx
  4400b3:	inc    esp
  4400b4:	add    al,cl
  4400b6:	inc    edx
  4400b7:	inc    esp
  4400b8:	add    ah,cl
  4400ba:	inc    edx
  4400bb:	inc    esp
  4400bc:	add    al,dl
  4400be:	inc    edx
  4400bf:	inc    esp
  4400c0:	add    ah,dl
  4400c2:	inc    edx
  4400c3:	inc    esp
  4400c4:	add    ah,al
  4400c6:	inc    eax
  4400c7:	inc    esp
  4400c8:	add    al,bl
  4400ca:	inc    edx
  4400cb:	inc    esp
  4400cc:	add    ah,bl
  4400ce:	inc    edx
  4400cf:	inc    esp
  4400d0:	add    al,ah
  4400d2:	inc    edx
  4400d3:	inc    esp
  4400d4:	add    BYTE PTR [eax+0x42],ch
  4400d7:	inc    esp
  4400d8:	add    ah,ah
  4400da:	inc    edx
  4400db:	inc    esp
  4400dc:	add    BYTE PTR [edx+eax*2+0x44],bh
  4400e0:	add    al,ch
  4400e2:	inc    edx
  4400e3:	inc    esp
  4400e4:	add    ah,ch
  4400e6:	inc    edx
  4400e7:	inc    esp
  4400e8:	add    al,dh
  4400ea:	inc    edx
  4400eb:	inc    esp
  4400ec:	add    ah,dh
  4400ee:	inc    edx
  4400ef:	inc    esp
  4400f0:	add    al,bh
  4400f2:	inc    edx
  4400f3:	inc    esp
  4400f4:	add    BYTE PTR [edx+eax*2],ch
  4400f7:	inc    esp
  4400f8:	add    ah,dh
  4400fa:	inc    eax
  4400fb:	inc    esp
  4400fc:	add    BYTE PTR [eax+0x42],al
  4400ff:	inc    esp
  440100:	add    ah,bh
  440102:	inc    edx
  440103:	inc    esp
  440104:	add    BYTE PTR [eax],al
  440106:	inc    ebx
  440107:	inc    esp
  440108:	add    BYTE PTR [ebx+eax*2],al
  44010b:	inc    esp
  44010c:	add    BYTE PTR [edx+eax*2],bh
  44010f:	inc    esp
  440110:	add    BYTE PTR [eax],cl
  440112:	inc    ebx
  440113:	inc    esp
  440114:	add    BYTE PTR [eax+0x42],ah
  440117:	inc    esp
  440118:	add    BYTE PTR [ebx+eax*2],cl
  44011b:	inc    esp
  44011c:	add    BYTE PTR [eax],dl
  44011e:	inc    ebx
  44011f:	inc    esp
  440120:	add    BYTE PTR [ebx+eax*2],dl
  440123:	inc    esp
  440124:	add    BYTE PTR [eax],bl
  440126:	inc    ebx
  440127:	inc    esp
  440128:	add    BYTE PTR [ebx+eax*2],bl
  44012b:	inc    esp
  44012c:	add    BYTE PTR [eax],ah
  44012e:	inc    ebx
  44012f:	inc    esp
  440130:	add    BYTE PTR [ebx+eax*2],ah
  440133:	inc    esp
  440134:	add    BYTE PTR [eax],ch
  440136:	inc    ebx
  440137:	inc    esp
  440138:	add    BYTE PTR [ebx+eax*2],ch
  44013b:	inc    esp
  44013c:	add    BYTE PTR [eax],dh
  44013e:	inc    ebx
  44013f:	inc    esp
  440140:	add    BYTE PTR [ebx+eax*2],dh
  440143:	inc    esp
  440144:	add    BYTE PTR [eax],bh
  440146:	inc    ebx
  440147:	inc    esp
  440148:	add    BYTE PTR [ebx+eax*2],bh
  44014b:	inc    esp
  44014c:	add    BYTE PTR [eax+0x43],al
  44014f:	inc    esp
  440150:	add    BYTE PTR [ecx+eax*2],bl
  440153:	inc    esp
  440154:	add    BYTE PTR [ebx+eax*2+0x44],al
  440158:	add    BYTE PTR [eax+0x43],cl
  44015b:	inc    esp
  44015c:	add    BYTE PTR [ebx+eax*2+0x44],cl
  440160:	add    BYTE PTR [eax+0x43],dl
  440163:	inc    esp
  440164:	add    BYTE PTR [ebx+eax*2+0x44],dl
  440168:	add    BYTE PTR [eax+0x43],bl
  44016b:	inc    esp
  44016c:	add    BYTE PTR [eax-0x33ffbbbf],dh
  440172:	inc    ecx
  440173:	inc    esp
  440174:	add    BYTE PTR [ebx+eax*2+0x44],bl
  440178:	add    BYTE PTR [eax+0x43],ah
  44017b:	inc    esp
  44017c:	add    BYTE PTR [ebx+eax*2+0x44],ah
  440180:	add    al,bh
  440182:	inc    ebx
  440183:	inc    esp
  440184:	add    ah,bh
  440186:	inc    ebx
  440187:	inc    esp
  440188:	add    BYTE PTR [eax],al
  44018a:	inc    esp
  44018b:	inc    esp
  44018c:	add    BYTE PTR [esp+eax*2],al
  44018f:	inc    esp
  440190:	add    BYTE PTR [eax],cl
  440192:	inc    esp
  440193:	inc    esp
  440194:	add    BYTE PTR [esp+eax*2],cl
  440197:	inc    esp
  440198:	add    BYTE PTR [eax],dl
  44019a:	inc    esp
  44019b:	inc    esp
  44019c:	add    BYTE PTR [esp+eax*2],dl
  44019f:	inc    esp
  4401a0:	add    BYTE PTR [eax],bl
  4401a2:	inc    esp
  4401a3:	inc    esp
  4401a4:	add    BYTE PTR [esp+eax*2],bl
  4401a7:	inc    esp
  4401a8:	add    BYTE PTR [eax],ah
  4401aa:	inc    esp
  4401ab:	inc    esp
  4401ac:	add    BYTE PTR [esp+eax*2],ah
  4401af:	inc    esp
  4401b0:	add    BYTE PTR [eax],ch
  4401b2:	inc    esp
  4401b3:	inc    esp
  4401b4:	add    BYTE PTR [esp+eax*2],ch
  4401b7:	inc    esp
  4401b8:	add    BYTE PTR [eax],dh
  4401ba:	inc    esp
  4401bb:	inc    esp
  4401bc:	add    BYTE PTR [esp+eax*2],dh
  4401bf:	inc    esp
  4401c0:	add    BYTE PTR [eax],bh
  4401c2:	inc    esp
  4401c3:	inc    esp
  4401c4:	add    BYTE PTR [esp+eax*2],bh
  4401c7:	inc    esp
  4401c8:	add    BYTE PTR [eax+0x44],al
  4401cb:	inc    esp
  4401cc:	add    BYTE PTR [esp+eax*2+0x44],al
  4401d0:	add    BYTE PTR [eax+0x44],cl
  4401d3:	inc    esp
  4401d4:	add    BYTE PTR [esp+eax*2+0x44],cl
  4401d8:	add    BYTE PTR [eax+0x44],dl
  4401db:	inc    esp
  4401dc:	add    BYTE PTR [esp+eax*2+0x44],dl
  4401e0:	add    BYTE PTR [eax+0x44],bl
  4401e3:	inc    esp
  4401e4:	add    BYTE PTR [esp+eax*2+0x44],bl
  4401e8:	add    BYTE PTR [esp+eax*2],ah
  4401eb:	inc    esp
  4401ec:	add    BYTE PTR [eax+0x44],ah
  4401ef:	inc    esp
  4401f0:	add    BYTE PTR [esp+eax*2+0x44],ah
  4401f4:	add    BYTE PTR [eax+0x44],ch
  4401f7:	inc    esp
  4401f8:	add    BYTE PTR [esp+eax*2+0x44],ch
  4401fc:	add    BYTE PTR [eax+0x44],dh
  4401ff:	inc    esp
  440200:	add    BYTE PTR [esp+eax*2+0x44],dh
  440204:	add    BYTE PTR [esp+eax*2],al
  440207:	inc    esp
  440208:	add    BYTE PTR [eax+0x44],bh
  44020b:	inc    esp
  44020c:	add    BYTE PTR [esp+eax*2+0x44],bh
  440210:	add    BYTE PTR [eax+0x44],bh
  440213:	inc    esp
  440214:	add    BYTE PTR [eax-0x7bffbbbc],al
  44021a:	inc    esp
  44021b:	inc    esp
  44021c:	add    BYTE PTR [eax-0x73ffbbbc],cl
  440222:	inc    esp
  440223:	inc    esp
  440224:	add    BYTE PTR [eax-0x6bffbbbc],dl
  44022a:	inc    esp
  44022b:	inc    esp
  44022c:	add    BYTE PTR [eax-0x63ffbbbc],bl
  440232:	inc    esp
  440233:	inc    esp
  440234:	add    BYTE PTR [esp+eax*2+0x44],dh
  440238:	add    BYTE PTR [eax+0x44004444],ah
  44023e:	inc    esp
  44023f:	inc    esp
  440240:	add    BYTE PTR [esp+eax*2+0x44a80044],ah
  440247:	inc    esp
  440248:	add    BYTE PTR [esp+eax*2+0x44b00044],ch
  44024f:	inc    esp
  440250:	add    BYTE PTR [esp+eax*2+0x44b80044],dh
  440257:	inc    esp
  440258:	add    BYTE PTR [esp+eax*2+0x44c00044],bh
  44025f:	inc    esp
  440260:	add    ah,al
  440262:	inc    esp
  440263:	inc    esp
  440264:	add    al,cl
  440266:	inc    esp
  440267:	inc    esp
  440268:	add    ah,cl
  44026a:	inc    esp
  44026b:	inc    esp
  44026c:	add    al,dl
  44026e:	inc    esp
  44026f:	inc    esp
  440270:	add    BYTE PTR [esp+eax*2+0x44],dl
  440274:	add    ah,dl
  440276:	inc    esp
  440277:	inc    esp
  440278:	add    al,bl
  44027a:	inc    esp
  44027b:	inc    esp
  44027c:	add    ah,bl
  44027e:	inc    esp
  44027f:	inc    esp
  440280:	add    al,ah
  440282:	inc    esp
  440283:	inc    esp
  440284:	add    ah,ah
  440286:	inc    esp
  440287:	inc    esp
  440288:	add    al,ch
  44028a:	inc    esp
  44028b:	inc    esp
  44028c:	add    BYTE PTR [eax+0x44],bh
  44028f:	inc    esp
  440290:	add    ah,ch
  440292:	inc    esp
  440293:	inc    esp
  440294:	add    al,dh
  440296:	inc    esp
  440297:	inc    esp
  440298:	add    BYTE PTR [eax+0x44],bl
  44029b:	inc    esp
  44029c:	add    BYTE PTR [esp+eax*2+0x44],al
  4402a0:	add    BYTE PTR [esp+eax*2],ch
  4402a3:	inc    esp
  4402a4:	add    ah,dh
  4402a6:	inc    esp
  4402a7:	inc    esp
  4402a8:	add    BYTE PTR [esp+eax*2+0x44],bl
  4402ac:	add    al,bh
  4402ae:	inc    esp
  4402af:	inc    esp
  4402b0:	add    BYTE PTR [esp+eax*2+0x44],ch
  4402b4:	add    ah,bh
  4402b6:	inc    esp
  4402b7:	inc    esp
  4402b8:	add    BYTE PTR [eax],al
  4402ba:	inc    ebp
  4402bb:	inc    esp
  4402bc:	add    BYTE PTR [eax*2+0x45080044],al
  4402c3:	inc    esp
  4402c4:	add    BYTE PTR [eax*2+0x45100044],cl
  4402cb:	inc    esp
  4402cc:	add    ah,ah
  4402ce:	inc    esp
  4402cf:	inc    esp
  4402d0:	add    BYTE PTR [eax*2+0x441c0044],dl
  4402d7:	inc    esp
  4402d8:	add    BYTE PTR [eax*2+0x45180044],cl
  4402df:	inc    esp
  4402e0:	add    BYTE PTR [eax*2+0x44100044],bl
  4402e7:	inc    esp
  4402e8:	add    BYTE PTR [eax],ah
  4402ea:	inc    ebp
  4402eb:	inc    esp
  4402ec:	add    BYTE PTR [eax*2+0x45280044],ah
  4402f3:	inc    esp
  4402f4:	add    BYTE PTR [esp+eax*2],ah
  4402f7:	inc    esp
  4402f8:	add    BYTE PTR [eax*2+0x45300044],ch
  4402ff:	inc    esp
  440300:	add    al,ch
  440302:	inc    esp
  440303:	inc    esp
  440304:	add    BYTE PTR [eax-0x6bffbbbc],bl
  44030a:	inc    esp
  44030b:	inc    esp
  44030c:	add    BYTE PTR [eax*2+0x45380044],dh
  440313:	inc    esp
  440314:	add    BYTE PTR [eax*2+0x45000044],bh
  44031b:	inc    esp
  44031c:	add    ah,bh
  44031e:	inc    esp
  44031f:	inc    esp
  440320:	add    BYTE PTR [eax+0x45],al
  440323:	inc    esp
  440324:	add    BYTE PTR [ebp+eax*2+0x44],al
  440328:	add    BYTE PTR [eax+0x45],cl
  44032b:	inc    esp
  44032c:	add    BYTE PTR [esp+eax*2+0x454c0044],cl
  440333:	inc    esp
  440334:	add    BYTE PTR [eax*2+0x45500044],bh
  44033b:	inc    esp
  44033c:	add    BYTE PTR [esp+eax*2+0x44],al
  440340:	add    BYTE PTR [esp+eax*2],ch
  440343:	inc    esp
  440344:	add    BYTE PTR [ebp+eax*2+0x44],dl
  440348:	add    BYTE PTR [eax],bl
  44034a:	inc    ebp
  44034b:	inc    esp
  44034c:	add    BYTE PTR [esp+eax*2+0x44],ah
  440350:	add    BYTE PTR [eax+0x45],bl
  440353:	inc    esp
  440354:	add    BYTE PTR [eax+0x44],cl
  440357:	inc    esp
  440358:	add    BYTE PTR [ebp+eax*2+0x44],bl
  44035c:	add    BYTE PTR [eax+0x45],ah
  44035f:	inc    esp
  440360:	add    BYTE PTR [ebp+eax*2+0x44],ah
  440364:	add    BYTE PTR [eax+0x45],ch
  440367:	inc    esp
  440368:	add    BYTE PTR [ebp+eax*2+0x44],ch
  44036c:	add    BYTE PTR [eax+0x45],dh
  44036f:	inc    esp
  440370:	add    BYTE PTR [ebp+eax*2+0x44],dh
  440374:	add    BYTE PTR [eax+0x45],bh
  440377:	inc    esp
  440378:	add    BYTE PTR [ebp+eax*2+0x44],bh
  44037c:	add    BYTE PTR [eax-0x7bffbbbb],al
  440382:	inc    ebp
  440383:	inc    esp
  440384:	add    BYTE PTR [eax+0x44],dl
  440387:	inc    esp
  440388:	add    BYTE PTR [eax-0x73ffbbbb],cl
  44038e:	inc    ebp
  44038f:	inc    esp
  440390:	add    BYTE PTR [eax-0x6fffbbbc],cl
  440396:	inc    ebp
  440397:	inc    esp
  440398:	add    BYTE PTR [ebp+eax*2+0x45980044],dl
  44039f:	inc    esp
  4403a0:	add    BYTE PTR [ebp+eax*2+0x45a00044],bl
  4403a7:	inc    esp
  4403a8:	add    BYTE PTR [ebp+eax*2+0x45a80044],ah
  4403af:	inc    esp
  4403b0:	add    BYTE PTR [eax],al
  4403b2:	inc    ebp
  4403b3:	inc    esp
  4403b4:	add    BYTE PTR [eax+0x45],dl
  4403b7:	inc    esp
  4403b8:	add    BYTE PTR [ebp+eax*2+0x45b00044],ch
  4403bf:	inc    esp
  4403c0:	add    BYTE PTR [esp+eax*2],ah
  4403c3:	inc    esp
  4403c4:	add    BYTE PTR [eax+0x45],dl
  4403c7:	inc    esp
  4403c8:	add    BYTE PTR [ebp+eax*2+0x44],dh
  4403cc:	add    BYTE PTR [esp+eax*2+0x44],dl
  4403d0:	add    BYTE PTR [ebp+eax*2+0x44580044],dh
  4403d7:	inc    esp
  4403d8:	add    BYTE PTR [eax-0x43ffbbbb],bh
  4403de:	inc    ebp
  4403df:	inc    esp
  4403e0:	add    al,al
  4403e2:	inc    ebp
  4403e3:	inc    esp
  4403e4:	add    ah,al
  4403e6:	inc    ebp
  4403e7:	inc    esp
  4403e8:	add    BYTE PTR [ebp+eax*2+0x44],ah
  4403ec:	add    al,cl
  4403ee:	inc    ebp
  4403ef:	inc    esp
  4403f0:	add    ah,cl
  4403f2:	inc    ebp
  4403f3:	inc    esp
  4403f4:	add    BYTE PTR [eax*2+0x45600044],dl
  4403fb:	inc    esp
  4403fc:	add    al,dl
  4403fe:	inc    ebp
  4403ff:	inc    esp
  440400:	add    BYTE PTR [ebp+eax*2+0x45540044],dl
  440407:	inc    esp
  440408:	add    BYTE PTR [eax-0x6fffbbbb],dh
  44040e:	inc    esp
  44040f:	inc    esp
  440410:	add    ah,dl
  440412:	inc    ebp
  440413:	inc    esp
  440414:	add    BYTE PTR [eax-0x27ffbbbb],ah
  44041a:	inc    ebp
  44041b:	inc    esp
  44041c:	add    ah,bl
  44041e:	inc    ebp
  44041f:	inc    esp
  440420:	add    al,ah
  440422:	inc    ebp
  440423:	inc    esp
  440424:	add    ah,ah
  440426:	inc    ebp
  440427:	inc    esp
  440428:	add    BYTE PTR [ebp+eax*2+0x44],dl
  44042c:	add    BYTE PTR [eax],ah
  44042e:	inc    esp
  44042f:	inc    esp
  440430:	add    BYTE PTR [esp+eax*2+0x45e80044],ah
  440437:	inc    esp
  440438:	add    BYTE PTR [esp+eax*2+0x44],cl
  44043c:	add    BYTE PTR [eax+0x44],bl
  44043f:	inc    esp
  440440:	add    ah,dl
  440442:	inc    ebp
  440443:	inc    esp
  440444:	add    BYTE PTR [eax-0x13ffbbbc],ch
  44044a:	inc    ebp
  44044b:	inc    esp
  44044c:	add    BYTE PTR [esp+eax*2+0x44],dl
  440450:	add    al,dh
  440452:	inc    ebp
  440453:	inc    esp
  440454:	add    ah,dh
  440456:	inc    ebp
  440457:	inc    esp
  440458:	add    BYTE PTR [eax+0x4c004445],ch
  44045e:	inc    ebp
  44045f:	inc    esp
  440460:	add    al,bh
  440462:	inc    ebp
  440463:	inc    esp
  440464:	add    ah,ch
  440466:	inc    ebp
  440467:	inc    esp
  440468:	add    BYTE PTR [eax],bl
  44046a:	inc    ebp
  44046b:	inc    esp
  44046c:	add    ah,bh
  44046e:	inc    ebp
  44046f:	inc    esp
  440470:	add    al,ah
  440472:	inc    esp
  440473:	inc    esp
  440474:	add    BYTE PTR [eax],al
  440476:	inc    esi
  440477:	inc    esp
  440478:	add    BYTE PTR [esi+eax*2],al
  44047b:	inc    esp
  44047c:	add    BYTE PTR [eax],bh
  44047e:	inc    esp
  44047f:	inc    esp
  440480:	add    ah,dl
  440482:	inc    esp
  440483:	inc    esp
  440484:	add    BYTE PTR [eax],cl
  440486:	inc    esi
  440487:	inc    esp
  440488:	add    BYTE PTR [esi+eax*2],cl
  44048b:	inc    esp
  44048c:	add    BYTE PTR [eax*2+0x46100044],ah
  440493:	inc    esp
  440494:	add    BYTE PTR [esi+eax*2],dl
  440497:	inc    esp
  440498:	add    BYTE PTR [eax],al
  44049a:	inc    esi
  44049b:	inc    esp
  44049c:	add    BYTE PTR [eax],bl
  44049e:	inc    esi
  44049f:	inc    esp
  4404a0:	add    BYTE PTR [eax],ah
  4404a2:	inc    esi
  4404a3:	inc    esp
  4404a4:	add    BYTE PTR [esi+eax*2],ah
  4404a7:	inc    esp
  4404a8:	add    BYTE PTR [eax],ch
  4404aa:	inc    esi
  4404ab:	inc    esp
  4404ac:	add    BYTE PTR [esi+eax*2],ch
  4404af:	inc    esp
  4404b0:	add    BYTE PTR [eax],dh
  4404b2:	inc    esi
  4404b3:	inc    esp
  4404b4:	add    BYTE PTR [esi+eax*2],dh
  4404b7:	inc    esp
  4404b8:	add    BYTE PTR [eax],ch
  4404ba:	inc    esi
  4404bb:	inc    esp
  4404bc:	add    BYTE PTR [eax],bh
  4404be:	inc    esi
  4404bf:	inc    esp
  4404c0:	add    BYTE PTR [esi+eax*2],bh
  4404c3:	inc    esp
  4404c4:	add    BYTE PTR [eax+0x46],al
  4404c7:	inc    esp
  4404c8:	add    BYTE PTR [esi+eax*2+0x44],al
  4404cc:	add    BYTE PTR [eax+0x46],cl
  4404cf:	inc    esp
  4404d0:	add    BYTE PTR [esi+eax*2+0x44],cl
  4404d4:	add    BYTE PTR [eax+0x46],dl
  4404d7:	inc    esp
  4404d8:	add    BYTE PTR [esi+eax*2+0x44],dl
  4404dc:	add    BYTE PTR [eax+0x46],bl
  4404df:	inc    esp
  4404e0:	add    BYTE PTR [esi+eax*2+0x44],bl
  4404e4:	add    BYTE PTR [eax+0x46],ah
  4404e7:	inc    esp
  4404e8:	add    BYTE PTR [esi+eax*2+0x44],ah
  4404ec:	add    BYTE PTR [eax+0x46],ch
  4404ef:	inc    esp
  4404f0:	add    BYTE PTR [esi+eax*2+0x44],ch
  4404f4:	add    BYTE PTR [eax+0x46],dh
  4404f7:	inc    esp
  4404f8:	add    BYTE PTR [esi+eax*2+0x44],dh
  4404fc:	add    BYTE PTR [eax+0x46],bh
  4404ff:	inc    esp
  440500:	add    BYTE PTR [esi+eax*2+0x44],bh
  440504:	add    BYTE PTR [eax-0x7bffbbba],al
  44050a:	inc    esi
  44050b:	inc    esp
  44050c:	add    BYTE PTR [eax-0x73ffbbba],cl
  440512:	inc    esi
  440513:	inc    esp
  440514:	add    BYTE PTR [eax-0x6bffbbba],dl
  44051a:	inc    esi
  44051b:	inc    esp
  44051c:	add    BYTE PTR [eax+0x4c004446],bl
  440522:	inc    esi
  440523:	inc    esp
  440524:	add    BYTE PTR [esi+eax*2+0x46a00044],bl
  44052b:	inc    esp
  44052c:	add    BYTE PTR [esi+eax*2+0x46a80044],ah
  440533:	inc    esp
  440534:	add    BYTE PTR [esi+eax*2+0x46b00044],ch
  44053b:	inc    esp
  44053c:	add    BYTE PTR [esi+eax*2+0x46b80044],dh
  440543:	inc    esp
  440544:	add    BYTE PTR [esi+eax*2+0x46c00044],bh
  44054b:	inc    esp
  44054c:	add    ah,al
  44054e:	inc    esi
  44054f:	inc    esp
  440550:	add    BYTE PTR [esi+eax*2+0x46c80044],bh
  440557:	inc    esp
  440558:	add    ah,cl
  44055a:	inc    esi
  44055b:	inc    esp
  44055c:	add    al,dl
  44055e:	inc    esi
  44055f:	inc    esp
  440560:	add    ah,dl
  440562:	inc    esi
  440563:	inc    esp
  440564:	add    al,bl
  440566:	inc    esi
  440567:	inc    esp
  440568:	add    ah,bl
  44056a:	inc    esi
  44056b:	inc    esp
  44056c:	add    BYTE PTR [esi+eax*2],ah
  44056f:	inc    esp
  440570:	add    al,ah
  440572:	inc    esi
  440573:	inc    esp
  440574:	add    ah,ah
  440576:	inc    esi
  440577:	inc    esp
  440578:	add    al,ch
  44057a:	inc    esi
  44057b:	inc    esp
  44057c:	add    ah,ch
  44057e:	inc    esi
  44057f:	inc    esp
  440580:	add    al,dh
  440582:	inc    esi
  440583:	inc    esp
  440584:	add    ah,dh
  440586:	inc    esi
  440587:	inc    esp
  440588:	add    al,bh
  44058a:	inc    esi
  44058b:	inc    esp
  44058c:	add    ah,bh
  44058e:	inc    esi
  44058f:	inc    esp
  440590:	add    BYTE PTR [eax+0x46],cl
  440593:	inc    esp
  440594:	add    BYTE PTR [eax],al
  440596:	inc    edi
  440597:	inc    esp
  440598:	add    BYTE PTR [edi+eax*2],al
  44059b:	inc    esp
  44059c:	add    BYTE PTR [eax],cl
  44059e:	inc    edi
  44059f:	inc    esp
  4405a0:	add    BYTE PTR [edi+eax*2],cl
  4405a3:	inc    esp
  4405a4:	add    BYTE PTR [eax],dl
  4405a6:	inc    edi
  4405a7:	inc    esp
  4405a8:	add    BYTE PTR [edi+eax*2],dl
  4405ab:	inc    esp
  4405ac:	add    BYTE PTR [eax],bl
  4405ae:	inc    edi
  4405af:	inc    esp
  4405b0:	add    BYTE PTR [edi+eax*2],bl
  4405b3:	inc    esp
  4405b4:	add    BYTE PTR [eax],ah
  4405b6:	inc    edi
  4405b7:	inc    esp
  4405b8:	add    BYTE PTR [edi+eax*2],ah
  4405bb:	inc    esp
  4405bc:	add    BYTE PTR [eax],ch
  4405be:	inc    edi
  4405bf:	inc    esp
  4405c0:	add    BYTE PTR [edi+eax*2],ch
  4405c3:	inc    esp
  4405c4:	add    BYTE PTR [eax],dh
  4405c6:	inc    edi
  4405c7:	inc    esp
  4405c8:	add    BYTE PTR [edi+eax*2],dh
  4405cb:	inc    esp
  4405cc:	add    BYTE PTR [edi+eax*2],dl
  4405cf:	inc    esp
  4405d0:	add    BYTE PTR [eax+0x46],dl
  4405d3:	inc    esp
  4405d4:	add    BYTE PTR [eax],bh
  4405d6:	inc    edi
  4405d7:	inc    esp
  4405d8:	add    BYTE PTR [edi+eax*2],bh
  4405db:	inc    esp
  4405dc:	add    BYTE PTR [eax+0x47],al
  4405df:	inc    esp
  4405e0:	add    BYTE PTR [edi+eax*2+0x44],al
  4405e4:	add    BYTE PTR [eax+0x48004446],bl
  4405ea:	inc    edi
  4405eb:	inc    esp
  4405ec:	add    BYTE PTR [esi+eax*2+0x44],dl
  4405f0:	add    BYTE PTR [edi+eax*2+0x44],cl
  4405f4:	add    BYTE PTR [eax+0x47],dl
  4405f7:	inc    esp
  4405f8:	add    BYTE PTR [edi+eax*2+0x44],dl
  4405fc:	add    BYTE PTR [eax+0x47],bl
  4405ff:	inc    esp
  440600:	add    BYTE PTR [edi+eax*2+0x44],bl
  440604:	add    BYTE PTR [eax+0x47],ah
  440607:	inc    esp
  440608:	add    BYTE PTR [edi+eax*2+0x44],ah
  44060c:	add    BYTE PTR [eax+0x47],ch
  44060f:	inc    esp
  440610:	add    BYTE PTR [esi+eax*2+0x44],ch
  440614:	add    BYTE PTR [edi+eax*2+0x44],ch
  440618:	add    BYTE PTR [eax],al
  44061a:	inc    edi
  44061b:	inc    esp
  44061c:	add    BYTE PTR [eax+0x47],dh
  44061f:	inc    esp
  440620:	add    BYTE PTR [edi+eax*2+0x44],dh
  440624:	add    BYTE PTR [eax+0x47],bh
  440627:	inc    esp
  440628:	add    BYTE PTR [eax+0x46],ah
  44062b:	inc    esp
  44062c:	add    BYTE PTR [edi+eax*2+0x44],bh
  440630:	add    BYTE PTR [eax+0x46],bh
  440633:	inc    esp
  440634:	add    BYTE PTR [esi+eax*2+0x44],ch
  440638:	add    BYTE PTR [edi+eax*2+0x44],dl
  44063c:	add    BYTE PTR [eax-0x7bffbbb9],al
  440642:	inc    edi
  440643:	inc    esp
  440644:	add    BYTE PTR [esi+eax*2+0x47880044],dl
  44064b:	inc    esp
  44064c:	add    BYTE PTR [edi+eax*2+0x47900044],cl
  440653:	inc    esp
  440654:	add    BYTE PTR [edi+eax*2+0x47980044],dl
  44065b:	inc    esp
  44065c:	add    BYTE PTR [edi+eax*2+0x46c40044],bl
  440663:	inc    esp
  440664:	add    BYTE PTR [edi+eax*2],bl
  440667:	inc    esp
  440668:	add    BYTE PTR [eax+0x74004447],ah
  44066e:	inc    esi
  44066f:	inc    esp
  440670:	add    ah,ch
  440672:	inc    esi
  440673:	inc    esp
  440674:	add    BYTE PTR [edi+eax*2+0x47a40044],dl
  44067b:	inc    esp
  44067c:	add    BYTE PTR [eax-0x53ffbbb9],ch
  440682:	inc    edi
  440683:	inc    esp
  440684:	add    BYTE PTR [eax-0x4bffbbb9],dh
  44068a:	inc    edi
  44068b:	inc    esp
  44068c:	add    BYTE PTR [eax-0x43ffbbb9],bh
  440692:	inc    edi
  440693:	inc    esp
  440694:	add    al,al
  440696:	inc    edi
  440697:	inc    esp
  440698:	add    ah,al
  44069a:	inc    edi
  44069b:	inc    esp
  44069c:	add    al,cl
  44069e:	inc    edi
  44069f:	inc    esp
  4406a0:	add    ah,cl
  4406a2:	inc    edi
  4406a3:	inc    esp
  4406a4:	add    BYTE PTR [edi+eax*2+0x47d00044],ch
  4406ab:	inc    esp
  4406ac:	add    ah,dl
  4406ae:	inc    edi
  4406af:	inc    esp
  4406b0:	add    BYTE PTR [edi+eax*2],dl
  4406b3:	inc    esp
  4406b4:	add    BYTE PTR [eax-0x27ffbbb9],ah
  4406ba:	inc    edi
  4406bb:	inc    esp
  4406bc:	add    ah,ah
  4406be:	inc    esi
  4406bf:	inc    esp
  4406c0:	add    ah,bl
  4406c2:	inc    edi
  4406c3:	inc    esp
  4406c4:	add    BYTE PTR [edi+eax*2+0x47e00044],al
  4406cb:	inc    esp
  4406cc:	add    ah,ah
  4406ce:	inc    edi
  4406cf:	inc    esp
  4406d0:	add    al,ch
  4406d2:	inc    edi
  4406d3:	inc    esp
  4406d4:	add    ah,ch
  4406d6:	inc    edi
  4406d7:	inc    esp
  4406d8:	add    al,dh
  4406da:	inc    edi
  4406db:	inc    esp
  4406dc:	add    BYTE PTR [edi+eax*2+0x44],bh
  4406e0:	add    BYTE PTR [eax],ch
  4406e2:	inc    esi
  4406e3:	inc    esp
  4406e4:	add    BYTE PTR [esi+eax*2+0x46500044],ah
  4406eb:	inc    esp
  4406ec:	add    ah,dh
  4406ee:	inc    edi
  4406ef:	inc    esp
  4406f0:	add    al,bh
  4406f2:	inc    edi
  4406f3:	inc    esp
  4406f4:	add    al,dh
  4406f6:	inc    esi
  4406f7:	inc    esp
  4406f8:	add    ah,bh
  4406fa:	inc    edi
  4406fb:	inc    esp
  4406fc:	add    BYTE PTR [eax],al
  4406fe:	dec    eax
  4406ff:	inc    esp
  440700:	add    BYTE PTR [eax+ecx*2],al
  440703:	inc    esp
  440704:	add    BYTE PTR [eax],cl
  440706:	dec    eax
  440707:	inc    esp
  440708:	add    BYTE PTR [eax+ecx*2],cl
  44070b:	inc    esp
  44070c:	add    BYTE PTR [esi+eax*2+0x44],bl
  440710:	add    ah,ch
  440712:	inc    esi
  440713:	inc    esp
  440714:	add    BYTE PTR [eax],dl
  440716:	dec    eax
  440717:	inc    esp
  440718:	add    BYTE PTR [eax+0x14004447],bh
  44071e:	dec    eax
  44071f:	inc    esp
  440720:	add    BYTE PTR [eax],bl
  440722:	dec    eax
  440723:	inc    esp
  440724:	add    BYTE PTR [eax+ecx*2],bl
  440727:	inc    esp
  440728:	add    BYTE PTR [eax],ch
  44072a:	inc    edi
  44072b:	inc    esp
  44072c:	add    BYTE PTR [eax+0x46],bh
  44072f:	inc    esp
  440730:	add    BYTE PTR [eax+0x47],bh
  440733:	inc    esp
  440734:	add    BYTE PTR [eax],ah
  440736:	dec    eax
  440737:	inc    esp
  440738:	add    BYTE PTR [eax+ecx*2],ah
  44073b:	inc    esp
  44073c:	add    BYTE PTR [eax],ch
  44073e:	dec    eax
  44073f:	inc    esp
  440740:	add    al,bh
  440742:	inc    esi
  440743:	inc    esp
  440744:	add    BYTE PTR [eax+ecx*2],ch
  440747:	inc    esp
  440748:	add    al,cl
  44074a:	inc    esi
  44074b:	inc    esp
  44074c:	add    BYTE PTR [eax],dh
  44074e:	dec    eax
  44074f:	inc    esp
  440750:	add    al,cl
  440752:	inc    edi
  440753:	inc    esp
  440754:	add    BYTE PTR [eax+ecx*2],dh
  440757:	inc    esp
  440758:	add    BYTE PTR [eax],bh
  44075a:	dec    eax
  44075b:	inc    esp
  44075c:	add    BYTE PTR [edi+eax*2+0x44],ch
  440760:	add    BYTE PTR [eax+ecx*2],cl
  440763:	inc    esp
  440764:	add    BYTE PTR [eax+ecx*2],bh
  440767:	inc    esp
  440768:	add    BYTE PTR [eax+0x48],al
  44076b:	inc    esp
  44076c:	add    BYTE PTR [eax+ecx*2+0x44],al
  440770:	add    BYTE PTR [eax+0x48],cl
  440773:	inc    esp
  440774:	add    BYTE PTR [eax+ecx*2+0x44],cl
  440778:	add    BYTE PTR [eax+0x48],dl
  44077b:	inc    esp
  44077c:	add    BYTE PTR [eax+ecx*2+0x44],dl
  440780:	add    BYTE PTR [eax+0x48],bl
  440783:	inc    esp
  440784:	add    BYTE PTR [edi+eax*2],bl
  440787:	inc    esp
  440788:	add    BYTE PTR [eax+ecx*2+0x44],bl
  44078c:	add    BYTE PTR [eax],cl
  44078e:	dec    eax
  44078f:	inc    esp
  440790:	add    BYTE PTR [eax+0x48],ah
  440793:	inc    esp
  440794:	add    BYTE PTR [eax],ah
  440796:	inc    esi
  440797:	inc    esp
  440798:	add    BYTE PTR [eax+ecx*2+0x44],ah
  44079c:	add    BYTE PTR [eax+0x48],ch
  44079f:	inc    esp
  4407a0:	add    BYTE PTR [eax+ecx*2+0x44],ch
  4407a4:	add    BYTE PTR [eax+0x48],dh
  4407a7:	inc    esp
  4407a8:	add    BYTE PTR [eax+0x47],dl
  4407ab:	inc    esp
  4407ac:	add    BYTE PTR [eax-0x4bffbbb9],bh
  4407b2:	inc    esi
  4407b3:	inc    esp
  4407b4:	add    BYTE PTR [eax+ecx*2+0x44],dh
  4407b8:	add    BYTE PTR [eax+0x48],bh
  4407bb:	inc    esp
  4407bc:	add    BYTE PTR [eax+ecx*2+0x44],bh
  4407c0:	add    BYTE PTR [eax-0x63ffbbbd],bl
  4407c6:	inc    ebx
  4407c7:	inc    esp
  4407c8:	add    BYTE PTR [eax-0x5bffbbbd],ah
  4407ce:	inc    ebx
  4407cf:	inc    esp
  4407d0:	add    BYTE PTR [eax-0x53ffbbbd],ch
  4407d6:	inc    ebx
  4407d7:	inc    esp
  4407d8:	add    BYTE PTR [eax-0x4fffbbbd],dh
  4407de:	inc    ebx
  4407df:	inc    esp
  4407e0:	add    BYTE PTR [ebx+eax*2+0x43b40044],bl
  4407e7:	inc    esp
  4407e8:	add    BYTE PTR [eax-0x47ffbbbd],dh
  4407ee:	inc    ebx
  4407ef:	inc    esp
  4407f0:	add    BYTE PTR [ebx+eax*2+0x43c00044],bh
  4407f7:	inc    esp
  4407f8:	add    BYTE PTR [ebx+eax*2+0x43c40044],ah
  4407ff:	inc    esp
  440800:	add    al,al
  440802:	inc    ebx
  440803:	inc    esp
  440804:	add    al,cl
  440806:	inc    ebx
  440807:	inc    esp
  440808:	add    BYTE PTR [ebx+eax*2+0x43980044],bh
  44080f:	inc    esp
  440810:	add    ah,cl
  440812:	inc    ebx
  440813:	inc    esp
  440814:	add    al,dl
  440816:	inc    ebx
  440817:	inc    esp
  440818:	add    BYTE PTR [eax-0x5bffbbbd],ah
  44081e:	inc    ebx
  44081f:	inc    esp
  440820:	add    ah,al
  440822:	inc    ebx
  440823:	inc    esp
  440824:	add    BYTE PTR [eax-0x2fffbbbd],bl
  44082a:	inc    ebx
  44082b:	inc    esp
  44082c:	add    BYTE PTR [eax-0x3bffbbbd],ch
  440832:	inc    ebx
  440833:	inc    esp
  440834:	add    ah,dl
  440836:	inc    ebx
  440837:	inc    esp
  440838:	add    BYTE PTR [ebx+eax*2+0x43b80044],ah
  44083f:	inc    esp
  440840:	add    al,bl
  440842:	inc    ebx
  440843:	inc    esp
  440844:	add    ah,dl
  440846:	inc    ebx
  440847:	inc    esp
  440848:	add    BYTE PTR [ebx+eax*2+0x43dc0044],ch
  44084f:	inc    esp
  440850:	add    al,cl
  440852:	inc    ebx
  440853:	inc    esp
  440854:	add    ah,bl
  440856:	inc    ebx
  440857:	inc    esp
  440858:	add    BYTE PTR [eax-0x47ffbbbd],ah
  44085e:	inc    ebx
  44085f:	inc    esp
  440860:	add    al,al
  440862:	inc    ebx
  440863:	inc    esp
  440864:	add    BYTE PTR [eax-0x5bffbbbd],bl
  44086a:	inc    ebx
  44086b:	inc    esp
  44086c:	add    BYTE PTR [ebx+eax*2+0x43c00044],ah
  440873:	inc    esp
  440874:	add    BYTE PTR [eax-0x33ffbbbd],ah
  44087a:	inc    ebx
  44087b:	inc    esp
  44087c:	add    BYTE PTR [ebx+eax*2+0x43d00044],ah
  440883:	inc    esp
  440884:	add    ah,cl
  440886:	inc    ebx
  440887:	inc    esp
  440888:	add    ah,al
  44088a:	inc    ebx
  44088b:	inc    esp
  44088c:	add    ah,bl
  44088e:	inc    ebx
  44088f:	inc    esp
  440890:	add    BYTE PTR [ebx+eax*2+0x43c40044],dh
  440897:	inc    esp
  440898:	add    al,ah
  44089a:	inc    ebx
  44089b:	inc    esp
  44089c:	add    ah,dl
  44089e:	inc    ebx
  44089f:	inc    esp
  4408a0:	add    BYTE PTR [ebx+eax*2+0x43d40044],dh
  4408a7:	inc    esp
  4408a8:	add    al,al
  4408aa:	inc    ebx
  4408ab:	inc    esp
  4408ac:	add    BYTE PTR [ebx+eax*2+0x43e40044],bh
  4408b3:	inc    esp
  4408b4:	add    BYTE PTR [eax-0x4bffbbbd],ch
  4408ba:	inc    ebx
  4408bb:	inc    esp
  4408bc:	add    BYTE PTR [ebx+eax*2+0x43c80044],ah
  4408c3:	inc    esp
  4408c4:	add    ah,cl
  4408c6:	inc    ebx
  4408c7:	inc    esp
  4408c8:	add    BYTE PTR [ebx+eax*2+0x43980044],bl
  4408cf:	inc    esp
  4408d0:	add    al,bl
  4408d2:	inc    ebx
  4408d3:	inc    esp
  4408d4:	add    al,ah
  4408d6:	inc    ebx
  4408d7:	inc    esp
  4408d8:	add    BYTE PTR [eax-0x2bffbbbd],bl
  4408de:	inc    ebx
  4408df:	inc    esp
  4408e0:	add    BYTE PTR [ebx+eax*2+0x43c00044],ch
  4408e7:	inc    esp
  4408e8:	add    al,ch
  4408ea:	inc    ebx
  4408eb:	inc    esp
  4408ec:	add    al,ah
  4408ee:	inc    ebx
  4408ef:	inc    esp
  4408f0:	add    BYTE PTR [eax-0x53ffbbbd],bh
  4408f6:	inc    ebx
  4408f7:	inc    esp
  4408f8:	add    ah,dl
  4408fa:	inc    ebx
  4408fb:	inc    esp
  4408fc:	add    BYTE PTR [eax-0x5fffbbbd],dh
  440902:	inc    ebx
  440903:	inc    esp
  440904:	add    ah,cl
  440906:	inc    ebx
  440907:	inc    esp
  440908:	add    al,cl
  44090a:	inc    ebx
  44090b:	inc    esp
  44090c:	add    BYTE PTR [ebx+eax*2+0x43ac0044],bl
  440913:	inc    esp
  440914:	add    BYTE PTR [eax-0x17ffbbbd],bl
  44091a:	inc    ebx
  44091b:	inc    esp
  44091c:	add    al,cl
  44091e:	inc    ebx
  44091f:	inc    esp
  440920:	add    BYTE PTR [eax-0x4fffbbbd],ah
  440926:	inc    ebx
  440927:	inc    esp
  440928:	add    BYTE PTR [ebx+eax*2+0x43c80044],ch
  44092f:	inc    esp
  440930:	add    al,cl
  440932:	inc    ebx
  440933:	inc    esp
  440934:	add    al,dl
  440936:	inc    ebx
  440937:	inc    esp
  440938:	add    al,ah
  44093a:	inc    ebx
  44093b:	inc    esp
  44093c:	add    al,ch
  44093e:	inc    ebx
  44093f:	inc    esp
  440940:	add    BYTE PTR [eax-0x4bffbbbd],bl
  440946:	inc    ebx
  440947:	inc    esp
  440948:	add    ah,ah
  44094a:	inc    ebx
  44094b:	inc    esp
  44094c:	add    BYTE PTR [eax-0x5fffbbbd],ch
  440952:	inc    ebx
  440953:	inc    esp
  440954:	add    BYTE PTR [ebx+eax*2+0x43e40044],ch
  44095b:	inc    esp
  44095c:	add    al,dl
  44095e:	inc    ebx
  44095f:	inc    esp
  440960:	add    BYTE PTR [ebx+eax*2+0x43a80044],bl
  440967:	inc    esp
  440968:	add    al,ah
  44096a:	inc    ebx
  44096b:	inc    esp
  44096c:	add    BYTE PTR [ebx+eax*2+0x43ac0044],ah
  440973:	inc    esp
  440974:	add    BYTE PTR [eax-0x1bffbbbd],ch
  44097a:	inc    ebx
  44097b:	inc    esp
  44097c:	add    BYTE PTR [ebx+eax*2+0x43b00044],bl
  440983:	inc    esp
  440984:	add    BYTE PTR [ebx+eax*2+0x439c0044],ch
  44098b:	inc    esp
  44098c:	add    al,al
  44098e:	inc    ebx
  44098f:	inc    esp
  440990:	add    BYTE PTR [ebx+eax*2+0x43e80044],dh
  440997:	inc    esp
  440998:	add    ah,dl
  44099a:	inc    ebx
  44099b:	inc    esp
  44099c:	add    ah,bl
  44099e:	inc    ebx
  44099f:	inc    esp
  4409a0:	add    ah,ah
  4409a2:	inc    ebx
  4409a3:	inc    esp
  4409a4:	add    al,cl
  4409a6:	inc    ebx
  4409a7:	inc    esp
  4409a8:	add    ah,dl
  4409aa:	inc    ebx
  4409ab:	inc    esp
  4409ac:	add    BYTE PTR [eax-0x2bffbbbd],ah
  4409b2:	inc    ebx
  4409b3:	inc    esp
  4409b4:	add    BYTE PTR [ebx+eax*2+0x43c40044],bh
  4409bb:	inc    esp
  4409bc:	add    al,ch
  4409be:	inc    ebx
  4409bf:	inc    esp
  4409c0:	add    al,cl
  4409c2:	inc    ebx
  4409c3:	inc    esp
  4409c4:	add    al,ah
  4409c6:	inc    ebx
  4409c7:	inc    esp
  4409c8:	add    ah,ah
  4409ca:	inc    ebx
  4409cb:	inc    esp
  4409cc:	add    BYTE PTR [ebx+eax*2+0x43d80044],ah
  4409d3:	inc    esp
  4409d4:	add    BYTE PTR [ebx+eax*2+0x43a80044],ch
  4409db:	inc    esp
  4409dc:	add    ah,ah
  4409de:	inc    ebx
  4409df:	inc    esp
  4409e0:	add    BYTE PTR [ebx+eax*2+0x43b80044],ah
  4409e7:	inc    esp
  4409e8:	add    BYTE PTR [ebx+eax*2+0x43a80044],ah
  4409ef:	inc    esp
  4409f0:	add    BYTE PTR [eax-0x33ffbbbd],ah
  4409f6:	inc    ebx
  4409f7:	inc    esp
  4409f8:	add    ah,bl
  4409fa:	inc    ebx
  4409fb:	inc    esp
  4409fc:	add    BYTE PTR [eax-0x53ffbbbd],ah
  440a02:	inc    ebx
  440a03:	inc    esp
  440a04:	add    al,al
  440a06:	inc    ebx
  440a07:	inc    esp
  440a08:	add    BYTE PTR [eax-0x2fffbbbd],bl
  440a0e:	inc    ebx
  440a0f:	inc    esp
  440a10:	add    ah,dl
  440a12:	inc    ebx
  440a13:	inc    esp
  440a14:	add    ah,ah
  440a16:	inc    ebx
  440a17:	inc    esp
  440a18:	add    al,ch
  440a1a:	inc    ebx
  440a1b:	inc    esp
  440a1c:	add    BYTE PTR [ebx+eax*2+0x43e00044],ch
  440a23:	inc    esp
  440a24:	add    ah,cl
  440a26:	inc    ebx
  440a27:	inc    esp
  440a28:	add    BYTE PTR [eax-0x33ffbbbd],ah
  440a2e:	inc    ebx
  440a2f:	inc    esp
  440a30:	add    ah,dl
  440a32:	inc    ebx
  440a33:	inc    esp
  440a34:	add    al,cl
  440a36:	inc    ebx
  440a37:	inc    esp
  440a38:	add    ah,dl
  440a3a:	inc    ebx
  440a3b:	inc    esp
  440a3c:	add    al,ch
  440a3e:	inc    ebx
  440a3f:	inc    esp
  440a40:	add    ah,al
  440a42:	inc    ebx
  440a43:	inc    esp
  440a44:	add    BYTE PTR [eax-0x2bffbbbd],dh
  440a4a:	inc    ebx
  440a4b:	inc    esp
  440a4c:	add    al,ch
  440a4e:	inc    ebx
  440a4f:	inc    esp
  440a50:	add    ah,ah
  440a52:	inc    ebx
  440a53:	inc    esp
  440a54:	add    al,bl
  440a56:	inc    ebx
  440a57:	inc    esp
  440a58:	add    BYTE PTR [ebx+eax*2+0x43a00044],dh
  440a5f:	inc    esp
  440a60:	add    BYTE PTR [ebx+eax*2+0x43ac0044],ah
  440a67:	inc    esp
  440a68:	add    ah,bl
  440a6a:	inc    ebx
  440a6b:	inc    esp
  440a6c:	add    BYTE PTR [ebx+eax*2+0x43d80044],dh
  440a73:	inc    esp
  440a74:	add    al,al
  440a76:	inc    ebx
  440a77:	inc    esp
  440a78:	add    ah,dl
  440a7a:	inc    ebx
  440a7b:	inc    esp
  440a7c:	add    BYTE PTR [eax-0x43ffbbbd],ch
  440a82:	inc    ebx
  440a83:	inc    esp
  440a84:	add    BYTE PTR [eax-0x33ffbbbd],ch
  440a8a:	inc    ebx
  440a8b:	inc    esp
  440a8c:	add    BYTE PTR [eax-0x63ffbbbd],ch
  440a92:	inc    ebx
  440a93:	inc    esp
  440a94:	add    ah,ah
  440a96:	inc    ebx
  440a97:	inc    esp
  440a98:	add    BYTE PTR [ebx+eax*2+0x43980044],bh
  440a9f:	inc    esp
  440aa0:	add    al,cl
  440aa2:	inc    ebx
  440aa3:	inc    esp
  440aa4:	add    BYTE PTR [eax-0x3bffbbbd],bh
  440aaa:	inc    ebx
  440aab:	inc    esp
  440aac:	add    BYTE PTR [eax-0x23ffbbbd],dh
  440ab2:	inc    ebx
  440ab3:	inc    esp
  440ab4:	add    ah,dl
  440ab6:	inc    ebx
  440ab7:	inc    esp
  440ab8:	add    al,ch
  440aba:	inc    ebx
  440abb:	inc    esp
  440abc:	add    al,ch
  440abe:	inc    ebx
  440abf:	inc    esp
  440ac0:	add    al,cl
  440ac2:	inc    ebx
  440ac3:	inc    esp
  440ac4:	add    ah,dl
  440ac6:	inc    ebx
  440ac7:	inc    esp
  440ac8:	add    BYTE PTR [eax-0x3bffbbbd],ah
  440ace:	inc    ebx
  440acf:	inc    esp
  440ad0:	add    BYTE PTR [eax-0x67ffbbbd],ch
  440ad6:	inc    ebx
  440ad7:	inc    esp
  440ad8:	add    al,ch
  440ada:	inc    ebx
  440adb:	inc    esp
  440adc:	add    al,ch
  440ade:	inc    ebx
  440adf:	inc    esp
  440ae0:	add    BYTE PTR [eax+ecx*2+0x48880044],al
  440ae7:	inc    esp
  440ae8:	add    BYTE PTR [eax+ecx*2+0x48900044],cl
  440aef:	inc    esp
  440af0:	add    BYTE PTR [eax+ecx*2+0x48980044],dl
  440af7:	inc    esp
  440af8:	add    BYTE PTR [eax+ecx*2+0x48a00044],bl
  440aff:	inc    esp
  440b00:	add    BYTE PTR [eax+ecx*2+0x48a80044],ah
  440b07:	inc    esp
  440b08:	add    BYTE PTR [eax-0x53ffbbb8],ch
  440b0e:	dec    eax
  440b0f:	inc    esp
  440b10:	add    BYTE PTR [eax+ecx*2+0x48b00044],ch
  440b17:	inc    esp
  440b18:	add    BYTE PTR [eax+ecx*2+0x48b80044],dh
  440b1f:	inc    esp
  440b20:	add    BYTE PTR [eax+ecx*2+0x48c00044],bh
  440b27:	inc    esp
  440b28:	add    ah,al
  440b2a:	dec    eax
  440b2b:	inc    esp
  440b2c:	add    al,cl
  440b2e:	dec    eax
  440b2f:	inc    esp
  440b30:	add    ah,cl
  440b32:	dec    eax
  440b33:	inc    esp
  440b34:	add    al,dl
  440b36:	dec    eax
  440b37:	inc    esp
  440b38:	add    ah,dl
  440b3a:	dec    eax
  440b3b:	inc    esp
  440b3c:	add    BYTE PTR [eax+ecx*2+0x48d80044],bh
  440b43:	inc    esp
  440b44:	add    ah,bl
  440b46:	dec    eax
  440b47:	inc    esp
  440b48:	add    al,ah
  440b4a:	dec    eax
  440b4b:	inc    esp
  440b4c:	add    ah,ah
  440b4e:	dec    eax
  440b4f:	inc    esp
  440b50:	add    al,ch
  440b52:	dec    eax
  440b53:	inc    esp
  440b54:	add    ah,ch
  440b56:	dec    eax
  440b57:	inc    esp
  440b58:	add    al,dh
  440b5a:	dec    eax
  440b5b:	inc    esp
  440b5c:	add    ah,dh
  440b5e:	dec    eax
  440b5f:	inc    esp
  440b60:	add    al,bh
  440b62:	dec    eax
  440b63:	inc    esp
  440b64:	add    ah,bh
  440b66:	dec    eax
  440b67:	inc    esp
  440b68:	add    BYTE PTR [eax],al
  440b6a:	dec    ecx
  440b6b:	inc    esp
  440b6c:	add    al,dl
  440b6e:	dec    eax
  440b6f:	inc    esp
  440b70:	add    BYTE PTR [eax+0x4004448],dl
  440b76:	dec    ecx
  440b77:	inc    esp
  440b78:	add    al,ah
  440b7a:	dec    eax
  440b7b:	inc    esp
  440b7c:	add    al,bl
  440b7e:	dec    eax
  440b7f:	inc    esp
  440b80:	add    BYTE PTR [eax],cl
  440b82:	dec    ecx
  440b83:	inc    esp
  440b84:	add    BYTE PTR [ecx+ecx*2],cl
  440b87:	inc    esp
  440b88:	add    BYTE PTR [eax],dl
  440b8a:	dec    ecx
  440b8b:	inc    esp
  440b8c:	add    BYTE PTR [ecx+ecx*2],dl
  440b8f:	inc    esp
  440b90:	add    BYTE PTR [eax],bl
  440b92:	dec    ecx
  440b93:	inc    esp
  440b94:	add    BYTE PTR [ecx+ecx*2],bl
  440b97:	inc    esp
  440b98:	add    al,bh
  440b9a:	dec    eax
  440b9b:	inc    esp
  440b9c:	add    BYTE PTR [eax],ah
  440b9e:	dec    ecx
  440b9f:	inc    esp
  440ba0:	add    BYTE PTR [eax-0x5fffbbb8],cl
  440ba6:	dec    eax
  440ba7:	inc    esp
  440ba8:	add    BYTE PTR [eax+ecx*2+0x48fc0044],dl
  440baf:	inc    esp
  440bb0:	add    BYTE PTR [eax+ecx*2+0x49240044],dh
  440bb7:	inc    esp
  440bb8:	add    BYTE PTR [eax],cl
  440bba:	dec    ecx
  440bbb:	inc    esp
  440bbc:	add    BYTE PTR [eax],ch
  440bbe:	dec    ecx
  440bbf:	inc    esp
  440bc0:	add    BYTE PTR [eax+ecx*2+0x48d80044],bh
  440bc7:	inc    esp
  440bc8:	add    BYTE PTR [ecx+ecx*2],ch
  440bcb:	inc    esp
  440bcc:	add    BYTE PTR [eax+0x30004448],cl
  440bd2:	dec    ecx
  440bd3:	inc    esp
  440bd4:	add    BYTE PTR [ecx+ecx*2],dh
  440bd7:	inc    esp
  440bd8:	add    BYTE PTR [eax],bh
  440bda:	dec    ecx
  440bdb:	inc    esp
  440bdc:	add    BYTE PTR [ecx+ecx*2],bh
  440bdf:	inc    esp
  440be0:	add    BYTE PTR [eax],dh
  440be2:	dec    ecx
  440be3:	inc    esp
  440be4:	add    ah,bh
  440be6:	dec    eax
  440be7:	inc    esp
  440be8:	add    BYTE PTR [eax+0x49],al
  440beb:	inc    esp
  440bec:	add    BYTE PTR [ecx+ecx*2],dl
  440bef:	inc    esp
  440bf0:	add    BYTE PTR [eax+ecx*2+0x48cc0044],cl
  440bf7:	inc    esp
  440bf8:	add    BYTE PTR [ecx+ecx*2+0x44],al
  440bfc:	add    BYTE PTR [eax+0x49],cl
  440bff:	inc    esp
  440c00:	add    BYTE PTR [ecx+ecx*2+0x44],al
  440c04:	add    BYTE PTR [ecx+ecx*2],ch
  440c07:	inc    esp
  440c08:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  440c0c:	add    BYTE PTR [ecx+ecx*2+0x44],al
  440c10:	add    ah,al
  440c12:	dec    eax
  440c13:	inc    esp
  440c14:	add    BYTE PTR [eax+ecx*2+0x48cc0044],cl
  440c1b:	inc    esp
  440c1c:	add    BYTE PTR [eax+0x49],dl
  440c1f:	inc    esp
  440c20:	add    BYTE PTR [eax],dh
  440c22:	dec    ecx
  440c23:	inc    esp
  440c24:	add    BYTE PTR [eax],bl
  440c26:	dec    ecx
  440c27:	inc    esp
  440c28:	add    BYTE PTR [eax-0x3bffbbb8],bh
  440c2e:	dec    eax
  440c2f:	inc    esp
  440c30:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  440c34:	add    al,ah
  440c36:	dec    eax
  440c37:	inc    esp
  440c38:	add    ah,al
  440c3a:	dec    eax
  440c3b:	inc    esp
  440c3c:	add    BYTE PTR [ecx+ecx*2],cl
  440c3f:	inc    esp
  440c40:	add    BYTE PTR [ecx+ecx*2],al
  440c43:	inc    esp
  440c44:	add    BYTE PTR [ecx+ecx*2+0x44],al
  440c48:	add    BYTE PTR [eax+0x49],bl
  440c4b:	inc    esp
  440c4c:	add    BYTE PTR [ecx+ecx*2+0x44],bl
  440c50:	add    BYTE PTR [eax+0x49],ah
  440c53:	inc    esp
  440c54:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  440c58:	add    BYTE PTR [eax],bh
  440c5a:	dec    ecx
  440c5b:	inc    esp
  440c5c:	add    BYTE PTR [eax+ecx*2+0x48c40044],bh
  440c63:	inc    esp
  440c64:	add    al,dh
  440c66:	dec    eax
  440c67:	inc    esp
  440c68:	add    BYTE PTR [eax+0x49],ch
  440c6b:	inc    esp
  440c6c:	add    BYTE PTR [ecx+ecx*2+0x44],ch
  440c70:	add    BYTE PTR [eax],ah
  440c72:	dec    ecx
  440c73:	inc    esp
  440c74:	add    al,dl
  440c76:	dec    eax
  440c77:	inc    esp
  440c78:	add    BYTE PTR [eax+ecx*2+0x49100044],dl
  440c7f:	inc    esp
  440c80:	add    BYTE PTR [eax],bh
  440c82:	dec    ecx
  440c83:	inc    esp
  440c84:	add    al,ah
  440c86:	dec    eax
  440c87:	inc    esp
  440c88:	add    BYTE PTR [ecx+ecx*2],bl
  440c8b:	inc    esp
  440c8c:	add    BYTE PTR [eax+ecx*2+0x49240044],bh
  440c93:	inc    esp
  440c94:	add    ah,al
  440c96:	dec    eax
  440c97:	inc    esp
  440c98:	add    BYTE PTR [eax+ecx*2+0x496c0044],ch
  440c9f:	inc    esp
  440ca0:	add    BYTE PTR [eax],ah
  440ca2:	dec    ecx
  440ca3:	inc    esp
  440ca4:	add    ah,bl
  440ca6:	dec    eax
  440ca7:	inc    esp
  440ca8:	add    ah,bl
  440caa:	dec    eax
  440cab:	inc    esp
  440cac:	add    BYTE PTR [ecx+ecx*2],cl
  440caf:	inc    esp
  440cb0:	add    al,bl
  440cb2:	dec    eax
  440cb3:	inc    esp
  440cb4:	add    BYTE PTR [eax-0x43ffbbb8],cl
  440cba:	dec    eax
  440cbb:	inc    esp
  440cbc:	add    BYTE PTR [eax+ecx*2+0x496c0044],cl
  440cc3:	inc    esp
  440cc4:	add    BYTE PTR [eax+0x49],dh
  440cc7:	inc    esp
  440cc8:	add    BYTE PTR [eax-0x3bffbbb8],cl
  440cce:	dec    eax
  440ccf:	inc    esp
  440cd0:	add    al,cl
  440cd2:	dec    eax
  440cd3:	inc    esp
  440cd4:	add    BYTE PTR [eax+ecx*2+0x49600044],ch
  440cdb:	inc    esp
  440cdc:	add    BYTE PTR [eax+ecx*2+0x49740044],al
  440ce3:	inc    esp
  440ce4:	add    BYTE PTR [eax+0x49],bh
  440ce7:	inc    esp
  440ce8:	add    BYTE PTR [eax+0x3c004448],ah
  440cee:	dec    ecx
  440cef:	inc    esp
  440cf0:	add    ah,bh
  440cf2:	dec    eax
  440cf3:	inc    esp
  440cf4:	add    BYTE PTR [eax+ecx*2+0x497c0044],dh
  440cfb:	inc    esp
  440cfc:	add    BYTE PTR [eax+ecx*2+0x48a00044],cl
  440d03:	inc    esp
  440d04:	add    BYTE PTR [eax+ecx*2+0x489c0044],cl
  440d0b:	inc    esp
  440d0c:	add    BYTE PTR [ecx+ecx*2],dl
  440d0f:	inc    esp
  440d10:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  440d14:	add    al,ah
  440d16:	dec    eax
  440d17:	inc    esp
  440d18:	add    al,bl
  440d1a:	dec    eax
  440d1b:	inc    esp
  440d1c:	add    al,dh
  440d1e:	dec    eax
  440d1f:	inc    esp
  440d20:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  440d24:	add    ah,al
  440d26:	dec    eax
  440d27:	inc    esp
  440d28:	add    BYTE PTR [eax-0x5fffbbb8],bh
  440d2e:	dec    eax
  440d2f:	inc    esp
  440d30:	add    BYTE PTR [eax+0x10004449],al
  440d36:	dec    ecx
  440d37:	inc    esp
  440d38:	add    BYTE PTR [ecx+ecx*2],dl
  440d3b:	inc    esp
  440d3c:	add    ah,dl
  440d3e:	dec    eax
  440d3f:	inc    esp
  440d40:	add    al,cl
  440d42:	dec    eax
  440d43:	inc    esp
  440d44:	add    ah,bh
  440d46:	dec    eax
  440d47:	inc    esp
  440d48:	add    BYTE PTR [eax+0x49],cl
  440d4b:	inc    esp
  440d4c:	add    BYTE PTR [eax-0x7bffbbb8],bl
  440d52:	dec    ecx
  440d53:	inc    esp
  440d54:	add    BYTE PTR [ecx+ecx*2],bl
  440d57:	inc    esp
  440d58:	add    BYTE PTR [eax-0x3ffbbb7],cl
  440d5e:	dec    eax
  440d5f:	inc    esp
  440d60:	add    BYTE PTR [eax+0x49],dl
  440d63:	inc    esp
  440d64:	add    BYTE PTR [eax+ecx*2+0x49140044],ch
  440d6b:	inc    esp
  440d6c:	add    BYTE PTR [ecx+ecx*2],dl
  440d6f:	inc    esp
  440d70:	add    BYTE PTR [eax-0x2bffbbb8],bl
  440d76:	dec    eax
  440d77:	inc    esp
  440d78:	add    BYTE PTR [ecx+ecx*2+0x48840044],cl
  440d7f:	inc    esp
  440d80:	add    BYTE PTR [eax+0x34004449],dl
  440d86:	dec    ecx
  440d87:	inc    esp
  440d88:	add    BYTE PTR [ecx+ecx*2],al
  440d8b:	inc    esp
  440d8c:	add    BYTE PTR [eax+0x49],ah
  440d8f:	inc    esp
  440d90:	add    BYTE PTR [ecx+ecx*2+0x44],bl
  440d94:	add    BYTE PTR [ecx+ecx*2+0x44],ch
  440d98:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  440d9c:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  440da0:	add    al,bh
  440da2:	dec    eax
  440da3:	inc    esp
  440da4:	add    BYTE PTR [eax+0x49],dh
  440da7:	inc    esp
  440da8:	add    al,al
  440daa:	dec    eax
  440dab:	inc    esp
  440dac:	add    BYTE PTR [ecx+ecx*2],dl
  440daf:	inc    esp
  440db0:	add    BYTE PTR [ecx+ecx*2+0x48b00044],dl
  440db7:	inc    esp
  440db8:	add    ah,bl
  440dba:	dec    eax
  440dbb:	inc    esp
  440dbc:	add    BYTE PTR [eax+0x2c004448],dh
  440dc2:	dec    ecx
  440dc3:	inc    esp
  440dc4:	add    BYTE PTR [eax+ecx*2+0x49580044],dl
  440dcb:	inc    esp
  440dcc:	add    BYTE PTR [eax],al
  440dce:	dec    ecx
  440dcf:	inc    esp
  440dd0:	add    BYTE PTR [eax-0x67ffbbb8],cl
  440dd6:	dec    ecx
  440dd7:	inc    esp
  440dd8:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  440ddc:	add    ah,bl
  440dde:	dec    eax
  440ddf:	inc    esp
  440de0:	add    BYTE PTR [ecx+ecx*2+0x44],bh
  440de4:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  440de8:	add    BYTE PTR [ecx+ecx*2],ah
  440deb:	inc    esp
  440dec:	add    BYTE PTR [eax-0x3bffbbb8],ah
  440df2:	dec    eax
  440df3:	inc    esp
  440df4:	add    BYTE PTR [ecx+ecx*2],cl
  440df7:	inc    esp
  440df8:	add    BYTE PTR [ecx+ecx*2],al
  440dfb:	inc    esp
  440dfc:	add    BYTE PTR [eax+0x49],bh
  440dff:	inc    esp
  440e00:	add    BYTE PTR [ecx],dl
  440e02:	cmp    DWORD PTR [ecx+0x21],0xffffffa5
  440e06:	js     0x440e11
  440e08:	std    
  440e09:	int    0xaa
  440e0b:	cmp    eax,0x1526152
  440e10:	inc    ebx
  440e11:	push   ss
  440e12:	mov    di,0xe065
  440e16:	pop    esi
  440e17:	inc    ecx
  440e18:	jo     0x440e14
  440e1a:	lock adc eax,0xaeaefd55
  440e20:	gs in  eax,0x9
  440e23:	sbb    DWORD PTR [ecx-0x35],ecx
  440e26:	inc    edx
  440e27:	rol    DWORD PTR [edi-0x3c688c96],1
  440e2d:	int3   
  440e2e:	push   ss
  440e2f:	rcl    BYTE PTR ds:0x40ea7951,cl
  440e35:	pop    eax
  440e36:	sub    BYTE PTR [ebp+0x5a],dl
  440e39:	xchg   ebp,eax
  440e3a:	test   eax,0xae0ed006
  440e3f:	ins    BYTE PTR es:[edi],dx
  440e40:	mov    ebp,0xc273f4e0
  440e45:	push   cs
  440e46:	adc    edi,DWORD PTR [eax]
  440e48:	lahf   
  440e49:	sub    al,0x3d
  440e4b:	cmp    al,0xf6
  440e4e:	scas   eax,DWORD PTR es:[edi]
  440e4f:	js     0x440e94
  440e51:	imul   edi,DWORD PTR [esi+0x46],0xffffffd0
  440e55:	out    dx,al
  440e56:	shl    eax,0x49
  440e59:	jns    0x440eb5
  440e5b:	adc    cl,0xf5
  440e5e:	jp     0x440e0f
  440e60:	inc    esi
  440e61:	mov    eax,ds:0xc1bbb047
  440e66:	or     esp,DWORD PTR [ecx]
  440e68:	sub    cl,BYTE PTR [edi+0x16382ede]
  440e6e:	jp     0x440e85
  440e70:	pop    eax
  440e71:	ret    
  440e72:	push   edx
  440e73:	xchg   BYTE PTR [ecx+0x708b56a0],cl
  440e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440e7a:	aaa    
  440e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440e7c:	adc    ch,BYTE PTR [ecx+0x2b]
  440e7f:	stc    
  440e80:	dec    ebp
  440e81:	xchg   ebp,eax
  440e82:	icebp  
  440e83:	arpl   WORD PTR ds:0x3c4b4309,sp
  440e89:	jnp    0x440eb5
  440e8b:	loope  0x440e41
  440e8d:	aaa    
  440e8e:	jnp    0x440ecb
  440e90:	ret    0xaef0
  440e93:	xor    al,0xba
  440e95:	jo     0x440e41
  440e97:	outs   dx,BYTE PTR ds:[esi]
  440e98:	jp     0x440e67
  440e9a:	cmp    al,0xf7
  440e9c:	and    bh,BYTE PTR [eax-0x7be6e378]
  440ea2:	or     dh,BYTE PTR [esi+edi*2]
  440ea5:	jo     0x440eba
  440ea7:	jo     0x440f1a
  440ea9:	aas    
  440eaa:	arpl   WORD PTR [ecx-0x61],sp
  440ead:	or     ebp,DWORD PTR [edx-0x1a]
  440eb0:	mov    eax,ds:0xf10907c4
  440eb5:	cs das 
  440eb7:	daa    
  440eb8:	adc    eax,0x2fd4c182
  440ebd:	fdiv   QWORD PTR [esi+0x5a]
  440ec0:	cmp    dh,ch
  440ec2:	scas   al,BYTE PTR es:[edi]
  440ec3:	je     0x440ef5
  440ec5:	fistp  DWORD PTR [ebp-0x29]
  440ec8:	psrlw  mm3,QWORD PTR [edx-0x74991b14]
  440ecf:	or     BYTE PTR [edi+esi*1-0x53513571],0x19
  440ed7:	std    
  440ed8:	(bad)  
  440ed9:	adc    DWORD PTR [eax],edi
  440edb:	sbb    DWORD PTR [ebx+0x55d5bb21],edi
  440ee1:	mov    ds:0x7dd66a5e,eax
  440ee6:	jbe    0x440ee2
  440ee8:	enter  0x69ce,0x3b
  440eec:	mov    ch,dh
  440eee:	retf   
  440eef:	int    0x10
  440ef1:	and    esi,DWORD PTR [eax]
  440ef3:	fstp   QWORD PTR [esi+0x66]
  440ef6:	mov    edi,DWORD PTR [edi-0x6b]
  440ef9:	mov    bl,0xac
  440efb:	mov    bl,0x34
  440efd:	(bad)  
  440efe:	mov    ecx,0x18b858b3
  440f03:	dec    edx
  440f04:	cmp    al,0xcd
  440f06:	dec    eax
  440f07:	add    esi,DWORD PTR [ecx+0xc6dfce5]
  440f0d:	fsub   st(7),st
  440f0f:	cli    
  440f10:	mov    ecx,0xd37d2fcd
  440f15:	mov    ebp,0x849edc55
  440f1a:	gs daa 
  440f1c:	test   eax,0xcfe1e328
  440f21:	cli    
  440f22:	stc    
  440f23:	lods   al,BYTE PTR ds:[esi]
  440f24:	xchg   ebp,eax
  440f25:	test   eax,0xd4d1cb5a
  440f2a:	push   0x57
  440f2c:	push   ebp
  440f2d:	aaa    
  440f2e:	push   ebp
  440f2f:	rol    BYTE PTR [ecx+0x69],1
  440f32:	pop    esp
  440f33:	dec    eax
  440f34:	xlat   BYTE PTR ds:[ebx]
  440f35:	leave  
  440f36:	jmp    0xe1caeb62
  440f3b:	leave  
  440f3c:	add    DWORD PTR [edx-0x6c],esi
  440f3f:	push   ecx
  440f40:	and    DWORD PTR [ebx],edi
  440f42:	std    
  440f43:	adc    BYTE PTR [esp+ecx*2],cl
  440f46:	mov    BYTE PTR [ecx+eax*8],dh
  440f49:	and    esi,esi
  440f4b:	or     ecx,DWORD PTR [edi]
  440f4d:	retf   0x459b
  440f50:	adc    eax,0x5d5523e6
  440f55:	mov    ebp,0x881fdd13
  440f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f5b:	mov    DWORD PTR [edx-0x3dd80f7a],ecx
  440f61:	loope  0x440fbf
  440f63:	jl     0x440f4b
  440f65:	outs   dx,BYTE PTR ds:[esi]
  440f66:	xor    BYTE PTR [bx+0x97a],al
  440f6b:	test   BYTE PTR [edi-0x5823cbb4],al
  440f71:	scas   al,BYTE PTR es:[edi]
  440f72:	mov    esp,0x452030a6
  440f77:	sub    BYTE PTR [edi+0x4ca2798b],bl
  440f7d:	pop    edi
  440f7e:	stos   BYTE PTR es:[edi],al
  440f7f:	pop    ebx
  440f80:	jmp    0x440f50
  440f82:	les    esi,FWORD PTR [eax]
  440f84:	xchg   edx,eax
  440f85:	pusha  
  440f86:	xchg   edx,eax
  440f87:	mov    ch,0x8d
  440f89:	sbb    eax,0x721442bf
  440f8e:	aas    
  440f8f:	dec    edi
  440f90:	pop    ss
  440f91:	lods   al,BYTE PTR ds:[esi]
  440f92:	fucomp st(2)
  440f94:	stos   BYTE PTR es:[edi],al
  440f95:	xor    eax,DWORD PTR ds:0x8718d9a3
  440f9b:	inc    ecx
  440f9c:	xor    al,0x56
  440f9e:	mov    bl,0xb8
  440fa0:	push   eax
  440fa1:	in     eax,dx
  440fa2:	jne    0x440fda
  440fa4:	rcr    BYTE PTR [ecx+0x5dd1f285],0x7e
  440fab:	push   edi
  440fac:	mov    esp,0x90b1b97e
  440fb1:	mov    ecx,0xad8ae90c
  440fb6:	mov    eax,0x4b3d0926
  440fbb:	mov    ah,0xf1
  440fbd:	fiadd  WORD PTR [ecx+0x3eb11b3f]
  440fc3:	cmp    edx,ecx
  440fc5:	mov    BYTE PTR [ecx-0x6acf6142],bh
  440fcb:	push   0x55
  440fcd:	fsincos 
  440fcf:	fstp   TBYTE PTR gs:[edx]
  440fd2:	mov    esi,0x96d73ae3
  440fd7:	cmp    al,0x40
  440fd9:	mov    eax,0xad5a0da6
  440fde:	cs push es
  440fe0:	fsub   st,st(2)
  440fe2:	mov    dh,0xdb
  440fe4:	adc    BYTE PTR [ebx+0x744cc85],dl
  440fea:	jle    0x440f94
  440fec:	outs   dx,DWORD PTR ds:[esi]
  440fed:	mov    al,0xa7
  440fef:	xchg   esp,eax
  440ff0:	pop    edx
  440ff1:	xchg   BYTE PTR [ebx-0x6fb5c7c1],cl
  440ff7:	rcr    BYTE PTR [ebp+0x3a],0x75
  440ffb:	xlat   BYTE PTR ds:[ebx]
  440ffc:	(bad)  [edi+0x15]
  440fff:	pop    ds
  441000:	sar    bh,cl
  441002:	and    eax,0x443df4
  441007:	jmp    DWORD PTR ds:0x443df8
  44100d:	jmp    DWORD PTR ds:0x443dfc
  441013:	jmp    DWORD PTR ds:0x443e00
  441019:	jmp    DWORD PTR ds:0x443e04
  44101f:	jmp    DWORD PTR ds:0x443e08
  441025:	jmp    DWORD PTR ds:0x443e0c
  44102b:	jmp    DWORD PTR ds:0x443e10
  441031:	jmp    DWORD PTR ds:0x443e14
  441037:	jmp    DWORD PTR ds:0x443e18
  44103d:	jmp    DWORD PTR ds:0x443e1c
  441043:	jmp    DWORD PTR ds:0x443e20
  441049:	jmp    DWORD PTR ds:0x443e24
  44104f:	jmp    DWORD PTR ds:0x443e28
  441055:	jmp    DWORD PTR ds:0x443e2c
  44105b:	jmp    DWORD PTR ds:0x443e30
  441061:	jmp    DWORD PTR ds:0x443e34
  441067:	jmp    DWORD PTR ds:0x443e38
  44106d:	jmp    DWORD PTR ds:0x443e3c
  441073:	jmp    DWORD PTR ds:0x443e40
  441079:	jmp    DWORD PTR ds:0x443e44
  44107f:	jmp    DWORD PTR ds:0x443e48
  441085:	jmp    DWORD PTR ds:0x443e4c
  44108b:	jmp    DWORD PTR ds:0x443e50
  441091:	jmp    DWORD PTR ds:0x443e54
  441097:	jmp    DWORD PTR ds:0x443e58
  44109d:	jmp    DWORD PTR ds:0x443e5c
  4410a3:	jmp    DWORD PTR ds:0x443e60
  4410a9:	jmp    DWORD PTR ds:0x443e64
  4410af:	jmp    DWORD PTR ds:0x443e68
  4410b5:	jmp    DWORD PTR ds:0x443e6c
  4410bb:	jmp    DWORD PTR ds:0x443e70
  4410c1:	jmp    DWORD PTR ds:0x443e74
  4410c7:	jmp    DWORD PTR ds:0x443e78
  4410cd:	jmp    DWORD PTR ds:0x443e7c
  4410d3:	jmp    DWORD PTR ds:0x443e80
  4410d9:	jmp    DWORD PTR ds:0x443e84
  4410df:	jmp    DWORD PTR ds:0x443e88
  4410e5:	jmp    DWORD PTR ds:0x443e8c
  4410eb:	jmp    DWORD PTR ds:0x443e90
  4410f1:	jmp    DWORD PTR ds:0x443e94
  4410f7:	jmp    DWORD PTR ds:0x443e98
  4410fd:	jmp    DWORD PTR ds:0x443e9c
  441103:	jmp    DWORD PTR ds:0x443ea0
  441109:	jmp    DWORD PTR ds:0x443ea4
  44110f:	jmp    DWORD PTR ds:0x443ea8
  441115:	jmp    DWORD PTR ds:0x443eac
  44111b:	jmp    DWORD PTR ds:0x443eb0
  441121:	jmp    DWORD PTR ds:0x443eb4
  441127:	jmp    DWORD PTR ds:0x443eb8
  44112d:	jmp    DWORD PTR ds:0x443ebc
  441133:	jmp    DWORD PTR ds:0x443ec0
  441139:	jmp    DWORD PTR ds:0x443ec4
  44113f:	jmp    DWORD PTR ds:0x443ec8
  441145:	jmp    DWORD PTR ds:0x443ecc
  44114b:	jmp    DWORD PTR ds:0x443ed0
  441151:	jmp    DWORD PTR ds:0x443ed4
  441157:	jmp    DWORD PTR ds:0x443ed8
  44115d:	jmp    DWORD PTR ds:0x443edc
  441163:	jmp    DWORD PTR ds:0x443ee0
  441169:	jmp    DWORD PTR ds:0x443ee4
  44116f:	jmp    DWORD PTR ds:0x443ee8
  441175:	jmp    DWORD PTR ds:0x443eec
  44117b:	jmp    DWORD PTR ds:0x443ef0
  441181:	jmp    DWORD PTR ds:0x443ef4
  441187:	jmp    DWORD PTR ds:0x443ef8
  44118d:	jmp    DWORD PTR ds:0x443efc
  441193:	jmp    DWORD PTR ds:0x443f00
  441199:	jmp    DWORD PTR ds:0x443f04
  44119f:	jmp    DWORD PTR ds:0x443f08
  4411a5:	jmp    DWORD PTR ds:0x443f0c
  4411ab:	jmp    DWORD PTR ds:0x443f10
  4411b1:	jmp    DWORD PTR ds:0x443f14
  4411b7:	jmp    DWORD PTR ds:0x443f18
  4411bd:	jmp    DWORD PTR ds:0x443f1c
  4411c3:	jmp    DWORD PTR ds:0x443f20
  4411c9:	jmp    DWORD PTR ds:0x443f24
  4411cf:	jmp    DWORD PTR ds:0x443f28
  4411d5:	jmp    DWORD PTR ds:0x443f2c
  4411db:	jmp    DWORD PTR ds:0x443f30
  4411e1:	jmp    DWORD PTR ds:0x443f34
  4411e7:	jmp    DWORD PTR ds:0x443f38
  4411ed:	jmp    DWORD PTR ds:0x443f3c
  4411f3:	jmp    DWORD PTR ds:0x443f40
  4411f9:	jmp    DWORD PTR ds:0x443f44
  4411ff:	jmp    DWORD PTR ds:0x443f48
  441205:	jmp    DWORD PTR ds:0x443f4c
  44120b:	jmp    DWORD PTR ds:0x443f50
  441211:	jmp    DWORD PTR ds:0x443f54
  441217:	jmp    DWORD PTR ds:0x443f58
  44121d:	jmp    DWORD PTR ds:0x443f5c
  441223:	jmp    DWORD PTR ds:0x443f60
  441229:	jmp    DWORD PTR ds:0x443f64
  44122f:	jmp    DWORD PTR ds:0x443f68
  441235:	jmp    DWORD PTR ds:0x443f6c
  44123b:	jmp    DWORD PTR ds:0x443f70
  441241:	jmp    DWORD PTR ds:0x443f74
  441247:	jmp    DWORD PTR ds:0x443f78
  44124d:	jmp    DWORD PTR ds:0x443f7c
  441253:	jmp    DWORD PTR ds:0x443f80
  441259:	jmp    DWORD PTR ds:0x443f84
  44125f:	jmp    DWORD PTR ds:0x443f88
  441265:	jmp    DWORD PTR ds:0x443f8c
  44126b:	jmp    DWORD PTR ds:0x443f90
  441271:	jmp    DWORD PTR ds:0x443f94
  441277:	jmp    DWORD PTR ds:0x443f98
  44127d:	jmp    DWORD PTR ds:0x443f9c
  441283:	jmp    DWORD PTR ds:0x443fa0
  441289:	jmp    DWORD PTR ds:0x443fa4
  44128f:	jmp    DWORD PTR ds:0x443fa8
  441295:	jmp    DWORD PTR ds:0x443fac
  44129b:	jmp    DWORD PTR ds:0x443fb0
  4412a1:	jmp    DWORD PTR ds:0x443fb4
  4412a7:	jmp    DWORD PTR ds:0x443fb8
  4412ad:	jmp    DWORD PTR ds:0x443fbc
  4412b3:	jmp    DWORD PTR ds:0x443fc0
  4412b9:	jmp    DWORD PTR ds:0x443fc4
  4412bf:	jmp    DWORD PTR ds:0x443fc8
  4412c5:	jmp    DWORD PTR ds:0x443fcc
  4412cb:	jmp    DWORD PTR ds:0x443fd0
  4412d1:	jmp    DWORD PTR ds:0x443fd4
  4412d7:	jmp    DWORD PTR ds:0x443fd8
  4412dd:	jmp    DWORD PTR ds:0x443fdc
  4412e3:	jmp    DWORD PTR ds:0x443fe0
  4412e9:	jmp    DWORD PTR ds:0x443fe4
  4412ef:	jmp    DWORD PTR ds:0x443fe8
  4412f5:	jmp    DWORD PTR ds:0x443fec
  4412fb:	jmp    DWORD PTR ds:0x443ff0
  441301:	jmp    DWORD PTR ds:0x443ff4
  441307:	jmp    DWORD PTR ds:0x443ff8
  44130d:	jmp    DWORD PTR ds:0x443ffc
  441313:	jmp    DWORD PTR ds:0x444000
  441319:	jmp    DWORD PTR ds:0x444004
  44131f:	jmp    DWORD PTR ds:0x444008
  441325:	jmp    DWORD PTR ds:0x44400c
  44132b:	jmp    DWORD PTR ds:0x444010
  441331:	jmp    DWORD PTR ds:0x444014
  441337:	jmp    DWORD PTR ds:0x444018
  44133d:	jmp    DWORD PTR ds:0x44401c
  441343:	jmp    DWORD PTR ds:0x444020
  441349:	jmp    DWORD PTR ds:0x444024
  44134f:	jmp    DWORD PTR ds:0x444028
  441355:	jmp    DWORD PTR ds:0x44402c
  44135b:	jmp    DWORD PTR ds:0x444030
  441361:	jmp    DWORD PTR ds:0x444034
  441367:	jmp    DWORD PTR ds:0x444038
  44136d:	jmp    DWORD PTR ds:0x44403c
  441373:	jmp    DWORD PTR ds:0x444040
  441379:	jmp    DWORD PTR ds:0x444044
  44137f:	jmp    DWORD PTR ds:0x444048
  441385:	jmp    DWORD PTR ds:0x44404c
  44138b:	jmp    DWORD PTR ds:0x444050
  441391:	jmp    DWORD PTR ds:0x444054
  441397:	jmp    DWORD PTR ds:0x444058
  44139d:	jmp    DWORD PTR ds:0x44405c
  4413a3:	jmp    DWORD PTR ds:0x444060
  4413a9:	jmp    DWORD PTR ds:0x444064
  4413af:	jmp    DWORD PTR ds:0x444068
  4413b5:	jmp    DWORD PTR ds:0x44406c
  4413bb:	jmp    DWORD PTR ds:0x444070
  4413c1:	jmp    DWORD PTR ds:0x444074
  4413c7:	jmp    DWORD PTR ds:0x444078
  4413cd:	jmp    DWORD PTR ds:0x44407c
  4413d3:	jmp    DWORD PTR ds:0x444080
  4413d9:	jmp    DWORD PTR ds:0x444084
  4413df:	jmp    DWORD PTR ds:0x444088
  4413e5:	jmp    DWORD PTR ds:0x44408c
  4413eb:	jmp    DWORD PTR ds:0x444090
  4413f1:	jmp    DWORD PTR ds:0x444094
  4413f7:	jmp    DWORD PTR ds:0x444098
  4413fd:	jmp    DWORD PTR ds:0x44409c
  441403:	jmp    DWORD PTR ds:0x4440a0
  441409:	jmp    DWORD PTR ds:0x4440a4
  44140f:	jmp    DWORD PTR ds:0x4440a8
  441415:	jmp    DWORD PTR ds:0x4440ac
  44141b:	jmp    DWORD PTR ds:0x4440b0
  441421:	jmp    DWORD PTR ds:0x4440b4
  441427:	jmp    DWORD PTR ds:0x4440b8
  44142d:	jmp    DWORD PTR ds:0x4440c0
  441433:	jmp    DWORD PTR ds:0x4440c4
  441439:	jmp    DWORD PTR ds:0x4440c8
  44143f:	jmp    DWORD PTR ds:0x4440cc
  441445:	jmp    DWORD PTR ds:0x4440d0
  44144b:	jmp    DWORD PTR ds:0x4440d4
  441451:	jmp    DWORD PTR ds:0x4440d8
  441457:	jmp    DWORD PTR ds:0x4440dc
  44145d:	jmp    DWORD PTR ds:0x4440e0
  441463:	jmp    DWORD PTR ds:0x4440e4
  441469:	jmp    DWORD PTR ds:0x4440e8
  44146f:	jmp    DWORD PTR ds:0x4440ec
  441475:	jmp    DWORD PTR ds:0x4440f0
  44147b:	jmp    DWORD PTR ds:0x4440f4
  441481:	jmp    DWORD PTR ds:0x4440f8
  441487:	jmp    DWORD PTR ds:0x4440fc
  44148d:	jmp    DWORD PTR ds:0x444100
  441493:	jmp    DWORD PTR ds:0x444104
  441499:	jmp    DWORD PTR ds:0x444108
  44149f:	jmp    DWORD PTR ds:0x44410c
  4414a5:	jmp    DWORD PTR ds:0x444110
  4414ab:	jmp    DWORD PTR ds:0x444114
  4414b1:	jmp    DWORD PTR ds:0x444118
  4414b7:	jmp    DWORD PTR ds:0x44411c
  4414bd:	jmp    DWORD PTR ds:0x444120
  4414c3:	jmp    DWORD PTR ds:0x444124
  4414c9:	jmp    DWORD PTR ds:0x444128
  4414cf:	jmp    DWORD PTR ds:0x44412c
  4414d5:	jmp    DWORD PTR ds:0x444130
  4414db:	jmp    DWORD PTR ds:0x444134
  4414e1:	jmp    DWORD PTR ds:0x444138
  4414e7:	jmp    DWORD PTR ds:0x44413c
  4414ed:	jmp    DWORD PTR ds:0x444140
  4414f3:	jmp    DWORD PTR ds:0x444144
  4414f9:	jmp    DWORD PTR ds:0x444148
  4414ff:	jmp    DWORD PTR ds:0x44414c
  441505:	jmp    DWORD PTR ds:0x444150
  44150b:	jmp    DWORD PTR ds:0x444154
  441511:	jmp    DWORD PTR ds:0x444158
  441517:	jmp    DWORD PTR ds:0x44415c
  44151d:	jmp    DWORD PTR ds:0x444160
  441523:	jmp    DWORD PTR ds:0x444164
  441529:	jmp    DWORD PTR ds:0x444168
  44152f:	jmp    DWORD PTR ds:0x44416c
  441535:	jmp    DWORD PTR ds:0x444170
  44153b:	jmp    DWORD PTR ds:0x444174
  441541:	jmp    DWORD PTR ds:0x444178
  441547:	jmp    DWORD PTR ds:0x44417c
  44154d:	jmp    DWORD PTR ds:0x444180
  441553:	jmp    DWORD PTR ds:0x444184
  441559:	jmp    DWORD PTR ds:0x444188
  44155f:	jmp    DWORD PTR ds:0x44418c
  441565:	jmp    DWORD PTR ds:0x444190
  44156b:	jmp    DWORD PTR ds:0x444194
  441571:	jmp    DWORD PTR ds:0x444198
  441577:	jmp    DWORD PTR ds:0x44419c
  44157d:	jmp    DWORD PTR ds:0x4441a0
  441583:	jmp    DWORD PTR ds:0x4441a4
  441589:	jmp    DWORD PTR ds:0x4441a8
  44158f:	jmp    DWORD PTR ds:0x4441ac
  441595:	jmp    DWORD PTR ds:0x4441b0
  44159b:	jmp    DWORD PTR ds:0x4441b4
  4415a1:	jmp    DWORD PTR ds:0x4441b8
  4415a7:	jmp    DWORD PTR ds:0x4441bc
  4415ad:	jmp    DWORD PTR ds:0x4441c0
  4415b3:	jmp    DWORD PTR ds:0x4441c4
  4415b9:	jmp    DWORD PTR ds:0x4441c8
  4415bf:	jmp    DWORD PTR ds:0x4441cc
  4415c5:	jmp    DWORD PTR ds:0x4441d0
  4415cb:	jmp    DWORD PTR ds:0x4441d4
  4415d1:	jmp    DWORD PTR ds:0x4441d8
  4415d7:	jmp    DWORD PTR ds:0x4441dc
  4415dd:	jmp    DWORD PTR ds:0x4441e0
  4415e3:	jmp    DWORD PTR ds:0x4441e4
  4415e9:	jmp    DWORD PTR ds:0x4441e8
  4415ef:	jmp    DWORD PTR ds:0x4441ec
  4415f5:	jmp    DWORD PTR ds:0x4441f0
  4415fb:	jmp    DWORD PTR ds:0x4441f4
  441601:	jmp    DWORD PTR ds:0x4441f8
  441607:	jmp    DWORD PTR ds:0x4441fc
  44160d:	jmp    DWORD PTR ds:0x444200
  441613:	jmp    DWORD PTR ds:0x444204
  441619:	jmp    DWORD PTR ds:0x444208
  44161f:	jmp    DWORD PTR ds:0x44420c
  441625:	jmp    DWORD PTR ds:0x444210
  44162b:	jmp    DWORD PTR ds:0x444214
  441631:	jmp    DWORD PTR ds:0x444218
  441637:	jmp    DWORD PTR ds:0x44421c
  44163d:	jmp    DWORD PTR ds:0x444220
  441643:	jmp    DWORD PTR ds:0x444224
  441649:	jmp    DWORD PTR ds:0x444228
  44164f:	jmp    DWORD PTR ds:0x44422c
  441655:	jmp    DWORD PTR ds:0x444230
  44165b:	jmp    DWORD PTR ds:0x444234
  441661:	jmp    DWORD PTR ds:0x444238
  441667:	jmp    DWORD PTR ds:0x44423c
  44166d:	jmp    DWORD PTR ds:0x444240
  441673:	jmp    DWORD PTR ds:0x444244
  441679:	jmp    DWORD PTR ds:0x444248
  44167f:	jmp    DWORD PTR ds:0x44424c
  441685:	jmp    DWORD PTR ds:0x444250
  44168b:	jmp    DWORD PTR ds:0x444254
  441691:	jmp    DWORD PTR ds:0x444258
  441697:	jmp    DWORD PTR ds:0x44425c
  44169d:	jmp    DWORD PTR ds:0x444260
  4416a3:	jmp    DWORD PTR ds:0x444264
  4416a9:	jmp    DWORD PTR ds:0x444268
  4416af:	jmp    DWORD PTR ds:0x44426c
  4416b5:	jmp    DWORD PTR ds:0x444270
  4416bb:	jmp    DWORD PTR ds:0x444274
  4416c1:	jmp    DWORD PTR ds:0x444278
  4416c7:	jmp    DWORD PTR ds:0x44427c
  4416cd:	jmp    DWORD PTR ds:0x444280
  4416d3:	jmp    DWORD PTR ds:0x444284
  4416d9:	jmp    DWORD PTR ds:0x444288
  4416df:	jmp    DWORD PTR ds:0x44428c
  4416e5:	jmp    DWORD PTR ds:0x444290
  4416eb:	jmp    DWORD PTR ds:0x444294
  4416f1:	jmp    DWORD PTR ds:0x444298
  4416f7:	jmp    DWORD PTR ds:0x44429c
  4416fd:	jmp    DWORD PTR ds:0x4442a0
  441703:	jmp    DWORD PTR ds:0x4442a4
  441709:	jmp    DWORD PTR ds:0x4442a8
  44170f:	jmp    DWORD PTR ds:0x4442ac
  441715:	jmp    DWORD PTR ds:0x4442b0
  44171b:	jmp    DWORD PTR ds:0x4442b4
  441721:	jmp    DWORD PTR ds:0x4442b8
  441727:	jmp    DWORD PTR ds:0x4442bc
  44172d:	jmp    DWORD PTR ds:0x4442c0
  441733:	jmp    DWORD PTR ds:0x4442c4
  441739:	jmp    DWORD PTR ds:0x4442c8
  44173f:	jmp    DWORD PTR ds:0x4442cc
  441745:	jmp    DWORD PTR ds:0x4442d0
  44174b:	jmp    DWORD PTR ds:0x4442d4
  441751:	jmp    DWORD PTR ds:0x4442d8
  441757:	jmp    DWORD PTR ds:0x4442dc
  44175d:	jmp    DWORD PTR ds:0x4442e0
  441763:	jmp    DWORD PTR ds:0x4442e4
  441769:	jmp    DWORD PTR ds:0x4442e8
  44176f:	jmp    DWORD PTR ds:0x4442ec
  441775:	jmp    DWORD PTR ds:0x4442f0
  44177b:	jmp    DWORD PTR ds:0x4442f4
  441781:	jmp    DWORD PTR ds:0x4442f8
  441787:	jmp    DWORD PTR ds:0x4442fc
  44178d:	jmp    DWORD PTR ds:0x444300
  441793:	jmp    DWORD PTR ds:0x444304
  441799:	jmp    DWORD PTR ds:0x444308
  44179f:	jmp    DWORD PTR ds:0x44430c
  4417a5:	jmp    DWORD PTR ds:0x444310
  4417ab:	jmp    DWORD PTR ds:0x444314
  4417b1:	jmp    DWORD PTR ds:0x444318
  4417b7:	jmp    DWORD PTR ds:0x44431c
  4417bd:	jmp    DWORD PTR ds:0x444320
  4417c3:	jmp    DWORD PTR ds:0x444324
  4417c9:	jmp    DWORD PTR ds:0x444328
  4417cf:	jmp    DWORD PTR ds:0x44432c
  4417d5:	jmp    DWORD PTR ds:0x444330
  4417db:	jmp    DWORD PTR ds:0x444334
  4417e1:	jmp    DWORD PTR ds:0x444338
  4417e7:	jmp    DWORD PTR ds:0x44433c
  4417ed:	jmp    DWORD PTR ds:0x444340
  4417f3:	jmp    DWORD PTR ds:0x444344
  4417f9:	jmp    DWORD PTR ds:0x444348
  4417ff:	jmp    DWORD PTR ds:0x44434c
  441805:	jmp    DWORD PTR ds:0x444350
  44180b:	jmp    DWORD PTR ds:0x444354
  441811:	jmp    DWORD PTR ds:0x444358
  441817:	jmp    DWORD PTR ds:0x44435c
  44181d:	jmp    DWORD PTR ds:0x444360
  441823:	jmp    DWORD PTR ds:0x444364
  441829:	jmp    DWORD PTR ds:0x44436c
  44182f:	jmp    DWORD PTR ds:0x444370
  441835:	jmp    DWORD PTR ds:0x444374
  44183b:	jmp    DWORD PTR ds:0x444378
  441841:	jmp    DWORD PTR ds:0x44437c
  441847:	jmp    DWORD PTR ds:0x444380
  44184d:	jmp    DWORD PTR ds:0x444384
  441853:	jmp    DWORD PTR ds:0x444388
  441859:	int3   
  44185a:	jmp    DWORD PTR ds:0x444390
  441860:	jmp    DWORD PTR ds:0x444398
  441866:	jmp    DWORD PTR ds:0x44439c
  44186c:	jmp    DWORD PTR ds:0x4443a0
  441872:	jmp    DWORD PTR ds:0x4443a4
  441878:	jmp    DWORD PTR ds:0x4443a8
  44187e:	jmp    DWORD PTR ds:0x4443ac
  441884:	jmp    DWORD PTR ds:0x4443b0
  44188a:	jmp    DWORD PTR ds:0x4443b4
  441890:	jmp    DWORD PTR ds:0x4443b8
  441896:	jmp    DWORD PTR ds:0x4443bc
  44189c:	jmp    DWORD PTR ds:0x4443c0
  4418a2:	jmp    DWORD PTR ds:0x4443c4
  4418a8:	jmp    DWORD PTR ds:0x4443c8
  4418ae:	jmp    DWORD PTR ds:0x4443cc
  4418b4:	jmp    DWORD PTR ds:0x4443d0
  4418ba:	jmp    DWORD PTR ds:0x4443d4
  4418c0:	jmp    DWORD PTR ds:0x4443d8
  4418c6:	jmp    DWORD PTR ds:0x4443dc
  4418cc:	jmp    DWORD PTR ds:0x4443e0
  4418d2:	jmp    DWORD PTR ds:0x4443e4
  4418d8:	jmp    DWORD PTR ds:0x4443e8
  4418de:	jmp    DWORD PTR ds:0x4443f0
  4418e4:	jmp    DWORD PTR ds:0x4443f8
  4418ea:	jmp    DWORD PTR ds:0x4443fc
  4418f0:	jmp    DWORD PTR ds:0x444400
  4418f6:	jmp    DWORD PTR ds:0x444404
  4418fc:	jmp    DWORD PTR ds:0x444408
  441902:	jmp    DWORD PTR ds:0x44440c
  441908:	jmp    DWORD PTR ds:0x444410
  44190e:	jmp    DWORD PTR ds:0x444414
  441914:	jmp    DWORD PTR ds:0x444418
  44191a:	jmp    DWORD PTR ds:0x44441c
  441920:	jmp    DWORD PTR ds:0x444420
  441926:	jmp    DWORD PTR ds:0x444424
  44192c:	jmp    DWORD PTR ds:0x444428
  441932:	jmp    DWORD PTR ds:0x44442c
  441938:	jmp    DWORD PTR ds:0x444430
  44193e:	jmp    DWORD PTR ds:0x444434
  441944:	jmp    DWORD PTR ds:0x444438
  44194a:	jmp    DWORD PTR ds:0x44443c
  441950:	jmp    DWORD PTR ds:0x444440
  441956:	jmp    DWORD PTR ds:0x444444
  44195c:	jmp    DWORD PTR ds:0x444448
  441962:	jmp    DWORD PTR ds:0x44444c
  441968:	jmp    DWORD PTR ds:0x444450
  44196e:	jmp    DWORD PTR ds:0x444454
  441974:	jmp    DWORD PTR ds:0x444458
  44197a:	jmp    DWORD PTR ds:0x44445c
  441980:	jmp    DWORD PTR ds:0x444460
  441986:	jmp    DWORD PTR ds:0x444464
  44198c:	jmp    DWORD PTR ds:0x444468
  441992:	jmp    DWORD PTR ds:0x44446c
  441998:	jmp    DWORD PTR ds:0x444470
  44199e:	jmp    DWORD PTR ds:0x444474
  4419a4:	jmp    DWORD PTR ds:0x444478
  4419aa:	jmp    DWORD PTR ds:0x44447c
  4419b0:	jmp    DWORD PTR ds:0x444480
  4419b6:	jmp    DWORD PTR ds:0x444484
  4419bc:	jmp    DWORD PTR ds:0x444488
  4419c2:	jmp    DWORD PTR ds:0x44448c
  4419c8:	jmp    DWORD PTR ds:0x444490
  4419ce:	jmp    DWORD PTR ds:0x444494
  4419d4:	jmp    DWORD PTR ds:0x444498
  4419da:	jmp    DWORD PTR ds:0x44449c
  4419e0:	jmp    DWORD PTR ds:0x4444a0
  4419e6:	jmp    DWORD PTR ds:0x4444a4
  4419ec:	jmp    DWORD PTR ds:0x4444a8
  4419f2:	jmp    DWORD PTR ds:0x4444ac
  4419f8:	jmp    DWORD PTR ds:0x4444b0
  4419fe:	jmp    DWORD PTR ds:0x4444b4
  441a04:	jmp    DWORD PTR ds:0x4444b8
  441a0a:	jmp    DWORD PTR ds:0x4444bc
  441a10:	jmp    DWORD PTR ds:0x4444c0
  441a16:	jmp    DWORD PTR ds:0x4444c4
  441a1c:	jmp    DWORD PTR ds:0x4444c8
  441a22:	jmp    DWORD PTR ds:0x4444cc
  441a28:	jmp    DWORD PTR ds:0x4444d0
  441a2e:	jmp    DWORD PTR ds:0x4444d4
  441a34:	jmp    DWORD PTR ds:0x4444d8
  441a3a:	jmp    DWORD PTR ds:0x4444dc
  441a40:	jmp    DWORD PTR ds:0x4444e0
  441a46:	jmp    DWORD PTR ds:0x4444e4
  441a4c:	jmp    DWORD PTR ds:0x4444e8
  441a52:	jmp    DWORD PTR ds:0x4444ec
  441a58:	jmp    DWORD PTR ds:0x4444f0
  441a5e:	jmp    DWORD PTR ds:0x4444f4
  441a64:	jmp    DWORD PTR ds:0x4444f8
  441a6a:	jmp    DWORD PTR ds:0x4444fc
  441a70:	jmp    DWORD PTR ds:0x444500
  441a76:	jmp    DWORD PTR ds:0x444504
  441a7c:	jmp    DWORD PTR ds:0x444508
  441a82:	jmp    DWORD PTR ds:0x44450c
  441a88:	jmp    DWORD PTR ds:0x444510
  441a8e:	jmp    DWORD PTR ds:0x444514
  441a94:	jmp    DWORD PTR ds:0x444518
  441a9a:	jmp    DWORD PTR ds:0x44451c
  441aa0:	jmp    DWORD PTR ds:0x444520
  441aa6:	jmp    DWORD PTR ds:0x444524
  441aac:	jmp    DWORD PTR ds:0x444528
  441ab2:	jmp    DWORD PTR ds:0x44452c
  441ab8:	jmp    DWORD PTR ds:0x444530
  441abe:	jmp    DWORD PTR ds:0x444534
  441ac4:	jmp    DWORD PTR ds:0x444538
  441aca:	jmp    DWORD PTR ds:0x44453c
  441ad0:	jmp    DWORD PTR ds:0x444540
  441ad6:	jmp    DWORD PTR ds:0x444544
  441adc:	jmp    DWORD PTR ds:0x444548
  441ae2:	jmp    DWORD PTR ds:0x44454c
  441ae8:	jmp    DWORD PTR ds:0x444550
  441aee:	jmp    DWORD PTR ds:0x444554
  441af4:	jmp    DWORD PTR ds:0x444558
  441afa:	jmp    DWORD PTR ds:0x44455c
  441b00:	jmp    DWORD PTR ds:0x444560
  441b06:	jmp    DWORD PTR ds:0x444564
  441b0c:	jmp    DWORD PTR ds:0x444568
  441b12:	jmp    DWORD PTR ds:0x44456c
  441b18:	jmp    DWORD PTR ds:0x444570
  441b1e:	jmp    DWORD PTR ds:0x444574
  441b24:	jmp    DWORD PTR ds:0x444578
  441b2a:	jmp    DWORD PTR ds:0x44457c
  441b30:	jmp    DWORD PTR ds:0x444580
  441b36:	jmp    DWORD PTR ds:0x444584
  441b3c:	jmp    DWORD PTR ds:0x444588
  441b42:	jmp    DWORD PTR ds:0x44458c
  441b48:	jmp    DWORD PTR ds:0x444590
  441b4e:	jmp    DWORD PTR ds:0x444594
  441b54:	jmp    DWORD PTR ds:0x444598
  441b5a:	jmp    DWORD PTR ds:0x44459c
  441b60:	jmp    DWORD PTR ds:0x4445a0
  441b66:	jmp    DWORD PTR ds:0x4445a4
  441b6c:	jmp    DWORD PTR ds:0x4445a8
  441b72:	jmp    DWORD PTR ds:0x4445ac
  441b78:	jmp    DWORD PTR ds:0x4445b0
  441b7e:	jmp    DWORD PTR ds:0x4445b4
  441b84:	jmp    DWORD PTR ds:0x4445b8
  441b8a:	jmp    DWORD PTR ds:0x4445bc
  441b90:	jmp    DWORD PTR ds:0x4445c0
  441b96:	jmp    DWORD PTR ds:0x4445c4
  441b9c:	jmp    DWORD PTR ds:0x4445c8
  441ba2:	jmp    DWORD PTR ds:0x4445cc
  441ba8:	jmp    DWORD PTR ds:0x4445d0
  441bae:	jmp    DWORD PTR ds:0x4445d4
  441bb4:	jmp    DWORD PTR ds:0x4445d8
  441bba:	jmp    DWORD PTR ds:0x4445dc
  441bc0:	jmp    DWORD PTR ds:0x4445e0
  441bc6:	jmp    DWORD PTR ds:0x4445e4
  441bcc:	jmp    DWORD PTR ds:0x4445e8
  441bd2:	jmp    DWORD PTR ds:0x4445ec
  441bd8:	jmp    DWORD PTR ds:0x4445f0
  441bde:	jmp    DWORD PTR ds:0x4445f4
  441be4:	jmp    DWORD PTR ds:0x4445f8
  441bea:	jmp    DWORD PTR ds:0x4445fc
  441bf0:	jmp    DWORD PTR ds:0x444600
  441bf6:	jmp    DWORD PTR ds:0x444604
  441bfc:	jmp    DWORD PTR ds:0x444608
  441c02:	jmp    DWORD PTR ds:0x44460c
  441c08:	jmp    DWORD PTR ds:0x444610
  441c0e:	jmp    DWORD PTR ds:0x444614
  441c14:	jmp    DWORD PTR ds:0x444618
  441c1a:	jmp    DWORD PTR ds:0x444620
  441c20:	jmp    DWORD PTR ds:0x444624
  441c26:	jmp    DWORD PTR ds:0x444628
  441c2c:	jmp    DWORD PTR ds:0x44462c
  441c32:	jmp    DWORD PTR ds:0x444630
  441c38:	jmp    DWORD PTR ds:0x444634
  441c3e:	jmp    DWORD PTR ds:0x444638
  441c44:	jmp    DWORD PTR ds:0x44463c
  441c4a:	jmp    DWORD PTR ds:0x444640
  441c50:	jmp    DWORD PTR ds:0x444644
  441c56:	jmp    DWORD PTR ds:0x444648
  441c5c:	jmp    DWORD PTR ds:0x44464c
  441c62:	jmp    DWORD PTR ds:0x444650
  441c68:	jmp    DWORD PTR ds:0x444654
  441c6e:	jmp    DWORD PTR ds:0x444658
  441c74:	jmp    DWORD PTR ds:0x44465c
  441c7a:	jmp    DWORD PTR ds:0x444660
  441c80:	jmp    DWORD PTR ds:0x444664
  441c86:	jmp    DWORD PTR ds:0x444668
  441c8c:	jmp    DWORD PTR ds:0x44466c
  441c92:	jmp    DWORD PTR ds:0x444670
  441c98:	jmp    DWORD PTR ds:0x444674
  441c9e:	jmp    DWORD PTR ds:0x444678
  441ca4:	jmp    DWORD PTR ds:0x44467c
  441caa:	jmp    DWORD PTR ds:0x444680
  441cb0:	jmp    DWORD PTR ds:0x444684
  441cb6:	jmp    DWORD PTR ds:0x444688
  441cbc:	jmp    DWORD PTR ds:0x44468c
  441cc2:	jmp    DWORD PTR ds:0x444690
  441cc8:	jmp    DWORD PTR ds:0x444694
  441cce:	jmp    DWORD PTR ds:0x444698
  441cd4:	jmp    DWORD PTR ds:0x44469c
  441cda:	jmp    DWORD PTR ds:0x4446a0
  441ce0:	jmp    DWORD PTR ds:0x4446a4
  441ce6:	jmp    DWORD PTR ds:0x4446a8
  441cec:	jmp    DWORD PTR ds:0x4446ac
  441cf2:	jmp    DWORD PTR ds:0x4446b0
  441cf8:	jmp    DWORD PTR ds:0x4446b4
  441cfe:	jmp    DWORD PTR ds:0x4446b8
  441d04:	jmp    DWORD PTR ds:0x4446bc
  441d0a:	jmp    DWORD PTR ds:0x4446c0
  441d10:	jmp    DWORD PTR ds:0x4446c4
  441d16:	jmp    DWORD PTR ds:0x4446c8
  441d1c:	jmp    DWORD PTR ds:0x4446cc
  441d22:	jmp    DWORD PTR ds:0x4446d0
  441d28:	jmp    DWORD PTR ds:0x4446d4
  441d2e:	jmp    DWORD PTR ds:0x4446d8
  441d34:	jmp    DWORD PTR ds:0x4446dc
  441d3a:	jmp    DWORD PTR ds:0x4446e0
  441d40:	jmp    DWORD PTR ds:0x4446e4
  441d46:	jmp    DWORD PTR ds:0x4446e8
  441d4c:	jmp    DWORD PTR ds:0x4446ec
  441d52:	jmp    DWORD PTR ds:0x4446f0
  441d58:	jmp    DWORD PTR ds:0x4446f4
  441d5e:	jmp    DWORD PTR ds:0x4446f8
  441d64:	jmp    DWORD PTR ds:0x4446fc
  441d6a:	jmp    DWORD PTR ds:0x444700
  441d70:	jmp    DWORD PTR ds:0x444704
  441d76:	jmp    DWORD PTR ds:0x444708
  441d7c:	jmp    DWORD PTR ds:0x44470c
  441d82:	jmp    DWORD PTR ds:0x444710
  441d88:	jmp    DWORD PTR ds:0x444714
  441d8e:	jmp    DWORD PTR ds:0x444718
  441d94:	jmp    DWORD PTR ds:0x44471c
  441d9a:	jmp    DWORD PTR ds:0x444720
  441da0:	jmp    DWORD PTR ds:0x444724
  441da6:	jmp    DWORD PTR ds:0x444728
  441dac:	jmp    DWORD PTR ds:0x44472c
  441db2:	jmp    DWORD PTR ds:0x444730
  441db8:	jmp    DWORD PTR ds:0x444734
  441dbe:	jmp    DWORD PTR ds:0x444738
  441dc4:	jmp    DWORD PTR ds:0x44473c
  441dca:	jmp    DWORD PTR ds:0x444740
  441dd0:	jmp    DWORD PTR ds:0x444744
  441dd6:	jmp    DWORD PTR ds:0x444748
  441ddc:	jmp    DWORD PTR ds:0x44474c
  441de2:	jmp    DWORD PTR ds:0x444750
  441de8:	jmp    DWORD PTR ds:0x444754
  441dee:	jmp    DWORD PTR ds:0x444758
  441df4:	jmp    DWORD PTR ds:0x44475c
  441dfa:	jmp    DWORD PTR ds:0x444760
  441e00:	jmp    DWORD PTR ds:0x444764
  441e06:	jmp    DWORD PTR ds:0x444768
  441e0c:	jmp    DWORD PTR ds:0x44476c
  441e12:	jmp    DWORD PTR ds:0x444770
  441e18:	jmp    DWORD PTR ds:0x444774
  441e1e:	jmp    DWORD PTR ds:0x444778
  441e24:	jmp    DWORD PTR ds:0x44477c
  441e2a:	jmp    DWORD PTR ds:0x444780
  441e30:	jmp    DWORD PTR ds:0x444784
  441e36:	jmp    DWORD PTR ds:0x444788
  441e3c:	jmp    DWORD PTR ds:0x44478c
  441e42:	jmp    DWORD PTR ds:0x444790
  441e48:	jmp    DWORD PTR ds:0x444794
  441e4e:	jmp    DWORD PTR ds:0x444798
  441e54:	jmp    DWORD PTR ds:0x44479c
  441e5a:	jmp    DWORD PTR ds:0x4447a0
  441e60:	jmp    DWORD PTR ds:0x4447a4
  441e66:	jmp    DWORD PTR ds:0x4447a8
  441e6c:	jmp    DWORD PTR ds:0x4447ac
  441e72:	jmp    DWORD PTR ds:0x4447b0
  441e78:	jmp    DWORD PTR ds:0x4447b4
  441e7e:	jmp    DWORD PTR ds:0x4447b8
  441e84:	jmp    DWORD PTR ds:0x4447bc
  441e8a:	jmp    DWORD PTR ds:0x4447c0
  441e90:	jmp    DWORD PTR ds:0x4447c4
  441e96:	jmp    DWORD PTR ds:0x4447c8
  441e9c:	jmp    DWORD PTR ds:0x4447cc
  441ea2:	jmp    DWORD PTR ds:0x4447d0
  441ea8:	jmp    DWORD PTR ds:0x4447d4
  441eae:	jmp    DWORD PTR ds:0x4447d8
  441eb4:	jmp    DWORD PTR ds:0x4447dc
  441eba:	jmp    DWORD PTR ds:0x4447e0
  441ec0:	jmp    DWORD PTR ds:0x4447e4
  441ec6:	jmp    DWORD PTR ds:0x4447e8
  441ecc:	jmp    DWORD PTR ds:0x4447ec
  441ed2:	jmp    DWORD PTR ds:0x4447f0
  441ed8:	jmp    DWORD PTR ds:0x4447f4
  441ede:	jmp    DWORD PTR ds:0x4447f8
  441ee4:	jmp    DWORD PTR ds:0x4447fc
  441eea:	jmp    DWORD PTR ds:0x444800
  441ef0:	jmp    DWORD PTR ds:0x444804
  441ef6:	jmp    DWORD PTR ds:0x444808
  441efc:	jmp    DWORD PTR ds:0x44480c
  441f02:	jmp    DWORD PTR ds:0x444810
  441f08:	jmp    DWORD PTR ds:0x444814
  441f0e:	jmp    DWORD PTR ds:0x444818
  441f14:	jmp    DWORD PTR ds:0x44481c
  441f1a:	jmp    DWORD PTR ds:0x444820
  441f20:	jmp    DWORD PTR ds:0x444824
  441f26:	jmp    DWORD PTR ds:0x444828
  441f2c:	jmp    DWORD PTR ds:0x44482c
  441f32:	jmp    DWORD PTR ds:0x444830
  441f38:	jmp    DWORD PTR ds:0x444834
  441f3e:	jmp    DWORD PTR ds:0x444838
  441f44:	jmp    DWORD PTR ds:0x44483c
  441f4a:	jmp    DWORD PTR ds:0x444840
  441f50:	jmp    DWORD PTR ds:0x444844
  441f56:	jmp    DWORD PTR ds:0x444848
  441f5c:	jmp    DWORD PTR ds:0x44484c
  441f62:	jmp    DWORD PTR ds:0x444850
  441f68:	jmp    DWORD PTR ds:0x444854
  441f6e:	jmp    DWORD PTR ds:0x444858
  441f74:	jmp    DWORD PTR ds:0x44485c
  441f7a:	jmp    DWORD PTR ds:0x444860
  441f80:	jmp    DWORD PTR ds:0x444864
  441f86:	jmp    DWORD PTR ds:0x444868
  441f8c:	jmp    DWORD PTR ds:0x44486c
  441f92:	jmp    DWORD PTR ds:0x444870
  441f98:	jmp    DWORD PTR ds:0x444874
  441f9e:	jmp    DWORD PTR ds:0x444878
  441fa4:	jmp    DWORD PTR ds:0x44487c
  441faa:	jmp    DWORD PTR ds:0x444884
  441fb0:	jmp    DWORD PTR ds:0x444888
  441fb6:	jmp    DWORD PTR ds:0x44488c
  441fbc:	jmp    DWORD PTR ds:0x444890
  441fc2:	jmp    DWORD PTR ds:0x444894
  441fc8:	jmp    DWORD PTR ds:0x444898
  441fce:	jmp    DWORD PTR ds:0x44489c
  441fd4:	jmp    DWORD PTR ds:0x4448a0
  441fda:	jmp    DWORD PTR ds:0x4448a4
  441fe0:	jmp    DWORD PTR ds:0x4448a8
  441fe6:	jmp    DWORD PTR ds:0x4448ac
  441fec:	jmp    DWORD PTR ds:0x4448b0
  441ff2:	jmp    DWORD PTR ds:0x4448b4
  441ff8:	jmp    DWORD PTR ds:0x4448b8
  441ffe:	jmp    DWORD PTR ds:0x4448bc
  442004:	jmp    DWORD PTR ds:0x4448c0
  44200a:	jmp    DWORD PTR ds:0x4448c4
  442010:	jmp    DWORD PTR ds:0x4448c8
  442016:	jmp    DWORD PTR ds:0x4448cc
  44201c:	jmp    DWORD PTR ds:0x4448d0
  442022:	jmp    DWORD PTR ds:0x4448d4
  442028:	jmp    DWORD PTR ds:0x4448d8
  44202e:	jmp    DWORD PTR ds:0x4448dc
  442034:	jmp    DWORD PTR ds:0x4448e0
  44203a:	jmp    DWORD PTR ds:0x4448e4
  442040:	jmp    DWORD PTR ds:0x4448e8
  442046:	jmp    DWORD PTR ds:0x4448ec
  44204c:	jmp    DWORD PTR ds:0x4448f0
  442052:	jmp    DWORD PTR ds:0x4448f4
  442058:	jmp    DWORD PTR ds:0x4448f8
  44205e:	jmp    DWORD PTR ds:0x4448fc
  442064:	jmp    DWORD PTR ds:0x444900
  44206a:	jmp    DWORD PTR ds:0x444904
  442070:	jmp    DWORD PTR ds:0x444908
  442076:	jmp    DWORD PTR ds:0x44490c
  44207c:	jmp    DWORD PTR ds:0x444910
  442082:	jmp    DWORD PTR ds:0x444914
  442088:	jmp    DWORD PTR ds:0x444918
  44208e:	jmp    DWORD PTR ds:0x44491c
  442094:	jmp    DWORD PTR ds:0x444920
  44209a:	jmp    DWORD PTR ds:0x444924
  4420a0:	jmp    DWORD PTR ds:0x444928
  4420a6:	jmp    DWORD PTR ds:0x44492c
  4420ac:	jmp    DWORD PTR ds:0x444930
  4420b2:	jmp    DWORD PTR ds:0x444934
  4420b8:	jmp    DWORD PTR ds:0x444938
  4420be:	jmp    DWORD PTR ds:0x44493c
  4420c4:	jmp    DWORD PTR ds:0x444940
  4420ca:	jmp    DWORD PTR ds:0x444944
  4420d0:	jmp    DWORD PTR ds:0x444948
  4420d6:	jmp    DWORD PTR ds:0x44494c
  4420dc:	jmp    DWORD PTR ds:0x444950
  4420e2:	jmp    DWORD PTR ds:0x444954
  4420e8:	jmp    DWORD PTR ds:0x444958
  4420ee:	jmp    DWORD PTR ds:0x44495c
  4420f4:	jmp    DWORD PTR ds:0x444960
  4420fa:	jmp    DWORD PTR ds:0x444964
  442100:	jmp    DWORD PTR ds:0x444968
  442106:	jmp    DWORD PTR ds:0x44496c
  44210c:	jmp    DWORD PTR ds:0x444970
  442112:	jmp    DWORD PTR ds:0x444974
  442118:	jmp    DWORD PTR ds:0x444978
  44211e:	jmp    DWORD PTR ds:0x44497c
  442124:	jmp    DWORD PTR ds:0x444980
  44212a:	jmp    DWORD PTR ds:0x444984
  442130:	jmp    DWORD PTR ds:0x444988
  442136:	jmp    DWORD PTR ds:0x44498c
  44213c:	jmp    DWORD PTR ds:0x444990
  442142:	jmp    DWORD PTR ds:0x444994
  442148:	jmp    DWORD PTR ds:0x444998
