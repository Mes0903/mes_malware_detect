
c5be0b5ffd57e8fa233e8cf7af0f1894915a51cbca3ac98e8644fef09cf72d41.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c56
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d62
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237e2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238a9
  4012ea:	push   0x42392d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	push   ss
  40143e:	pop    esp
  40143f:	add    dl,BYTE PTR [esi+0x62]
  401442:	bound  esp,QWORD PTR [edx+0x62]
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	xor    DWORD PTR [ebp+0x27714272],edi
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	les    esp,FWORD PTR [esp+esi*8]
  401507:	add    esp,DWORD PTR [esi]
  401509:	jle    0x401501
  40150b:	stos   BYTE PTR es:[edi],al
  40150c:	fs fadd st(1),st
  40150f:	repz adc dl,0xb8
  401513:	jp     0x4014fd
  401515:	mov    bl,0x58
  401517:	cli    
  401518:	retf   0x55e4
  40151b:	cmp    eax,0x68dfccc2
  401520:	sub    esi,edi
  401522:	push   edx
  401523:	shl    esp,0xbe
  401526:	test   DWORD PTR [edx],esp
  401528:	xor    esp,esi
  40152a:	loope  0x401560
  40152c:	repnz rcl DWORD PTR ds:0xb75c48a1,0x85
  401534:	test   dh,dl
  401536:	xor    DWORD PTR [edx+0x23],esp
  401539:	push   ecx
  40153a:	push   0xffffff91
  40153c:	mov    cl,0x86
  40153e:	xchg   edi,eax
  40153f:	ret    0xc344
  401542:	xor    eax,0xe0f04b6b
  401547:	inc    edx
  401548:	cmp    BYTE PTR [edx-0x4b],0x8
  40154c:	lds    edi,FWORD PTR [edx]
  40154e:	in     al,dx
  40154f:	ror    BYTE PTR [edx+0x37bb4754],0x65
  401556:	lea    esp,[eax-0x5666c241]
  40155c:	outs   dx,DWORD PTR ds:[esi]
  40155d:	jno    0x40151e
  40155f:	jle    0x401533
  401561:	jmp    0x9f:0x4c36e490
  401568:	or     ebp,edx
  40156a:	or     eax,0x298c56be
  40156f:	cld    
  401570:	mov    ch,0x70
  401572:	mov    ecx,0x4ddf0939
  401577:	push   ss
  401578:	les    esi,FWORD PTR [ecx+0x42ab179a]
  40157e:	dec    ecx
  40157f:	adc    dl,cl
  401581:	jo     0x4015c7
  401583:	call   0x38c4:0x92db6a16
  40158a:	jmp    0xa88b:0x7b931669
  401591:	push   eax
  401592:	mov    cs,WORD PTR [ebp+0xedcbcbf]
  401598:	jge    0x401581
  40159a:	mov    ds:0x1eb26b2,eax
  40159f:	rol    DWORD PTR [ebp-0x67],cl
  4015a2:	xchg   ebp,eax
  4015a3:	imul   edx,ebp,0xffffff99
  4015a6:	data16 mov bh,0x46
  4015a9:	es add al,0xb0
  4015ac:	push   eax
  4015ad:	aaa    
  4015ae:	add    ah,bh
  4015b0:	retf   
  4015b1:	pop    ebx
  4015b2:	lods   al,BYTE PTR ds:[esi]
  4015b3:	sub    DWORD PTR [ecx],0x8bc6c041
  4015b9:	mov    ecx,0xee972f49
  4015be:	call   0x301:0xd4b3303
  4015c5:	lock jge 0x4015cb
  4015c8:	jle    0x4015dd
  4015ca:	les    ebp,FWORD PTR ds:0xda3e98e
  4015d0:	lods   eax,DWORD PTR ds:[esi]
  4015d1:	xor    al,0x1b
  4015d3:	pop    es
  4015d4:	leave  
  4015d5:	mov    WORD PTR [ebp+edx*8+0x7d34352],ds
  4015dc:	mov    ebp,0x79e7ec15
  4015e1:	adc    BYTE PTR [ebx-0x2d],0x93
  4015e5:	shl    DWORD PTR [ecx],0x13
  4015e8:	std    
  4015e9:	and    dh,BYTE PTR [eax+0x22]
  4015ec:	pop    ebx
  4015ed:	aas    
  4015ee:	mov    dl,BYTE PTR [ebp+ebp*8-0x17c5cdd2]
  4015f5:	add    al,0xee
  4015f7:	(bad)
  4015fb:	mov    ss,WORD PTR ds:0xe947b1f1
  401601:	push   esi
  401602:	jmp    0x401623
  401604:	dec    edi
  401605:	cmp    BYTE PTR [edx+eiz*1-0x19],cl
  401609:	lahf   
  40160a:	pusha  
  40160b:	push   esp
  40160c:	ins    DWORD PTR es:[edi],dx
  40160d:	scas   eax,DWORD PTR es:[edi]
  40160e:	repz cmp ch,BYTE PTR [ebp-0x63]
  401612:	ret    
  401613:	loop   0x401630
  401615:	mov    ds:0x85b673e0,al
  40161a:	stos   DWORD PTR es:[edi],eax
  40161b:	pop    es
  40161c:	jo     0x4015d2
  40161e:	imul   ecx,DWORD PTR [ecx],0x39
  401621:	int    0x6a
  401623:	int    0x6d
  401625:	xor    BYTE PTR [esi],bh
  401627:	or     DWORD PTR [edi-0xfe3d52b],edx
  40162d:	fs loope 0x401616
  401630:	push   eax
  401631:	icebp  
  401632:	xchg   esi,eax
  401633:	or     eax,0x752bec08
  401638:	inc    esp
  401639:	sbb    bh,BYTE PTR [edi-0x37]
  40163c:	dec    edx
  40163d:	push   ss
  40163e:	fcomp  QWORD PTR [eax-0x49]
  401641:	cdq    
  401642:	jecxz  0x401650
  401644:	cmp    ch,al
  401646:	mov    ?,edx
  401648:	mov    esp,0xdfb333ed
  40164d:	out    0xfe,eax
  40164f:	push   cs
  401650:	pop    esi
  401651:	pop    es
  401652:	sti    
  401653:	data16 scas al,BYTE PTR es:[edi]
  401655:	pop    ss
  401656:	add    eax,0xb25a4119
  40165b:	daa    
  40165c:	xchg   ebx,eax
  40165d:	push   ds
  40165e:	aad    0xcd
  401660:	in     eax,dx
  401661:	mov    gs,edx
  401663:	jg     0x40164b
  401665:	cli    
  401666:	xor    al,0x81
  401668:	out    0xdf,al
  40166a:	pushf  
  40166b:	xor    BYTE PTR [esi-0x73180b2],cl
  401671:	or     eax,DWORD PTR [ebp-0x8686afa]
  401677:	mov    eax,0x91ab40de
  40167c:	das    
  40167d:	stc    
  40167e:	enter  0x589,0xd0
  401682:	fld    QWORD PTR [esi-0x27]
  401685:	call   0xd3c5:0xb79e3dcf
  40168c:	and    bh,ah
  40168e:	std    
  40168f:	and    DWORD PTR [eax],edi
  401691:	sub    dh,BYTE PTR [ebp+0x5]
  401694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401695:	dec    esi
  401696:	lea    edi,[esi-0x26e6950b]
  40169c:	clc    
  40169d:	xor    edx,DWORD PTR [ebx-0x2d]
  4016a0:	pop    esi
  4016a1:	ja     0x401651
  4016a3:	inc    ebp
  4016a4:	sahf   
  4016a5:	add    bl,BYTE PTR [edi-0x58cd18e2]
  4016ab:	jecxz  0x4016fe
  4016ad:	(bad)  
  4016ae:	jg     0x401707
  4016b0:	cli    
  4016b1:	(bad)  
  4016b2:	mov    dl,0x8e
  4016b4:	into   
  4016b5:	stos   BYTE PTR es:[edi],al
  4016b6:	add    DWORD PTR [esi+esi*2-0x743fb90b],ecx
  4016bd:	scas   al,BYTE PTR es:[edi]
  4016be:	loop   0x4016bc
  4016c0:	es aaa 
  4016c2:	lahf   
  4016c3:	dec    ebp
  4016c4:	mov    al,0x37
  4016c6:	call   0xe93f37d7
  4016cb:	or     eax,0xb9fb68fc
  4016d0:	test   BYTE PTR [ebx],dh
  4016d2:	jnp    0x4016bb
  4016d4:	scas   al,BYTE PTR es:[edi]
  4016d5:	mov    ds:0xa4fddf53,al
  4016da:	or     DWORD PTR [edx+0x38236963],eax
  4016e0:	push   0x27
  4016e2:	adc    al,0x47
  4016e4:	push   eax
  4016e5:	popa   
  4016e6:	jns    0x4016b4
  4016e8:	jmp    0x4016d6
  4016ea:	cmp    DWORD PTR [ebp-0x7],ebx
  4016ed:	ret    
  4016ee:	push   0xffffffef
  4016f0:	cmovle ecx,DWORD PTR [edi+eiz*1-0x2653c18]
  4016f8:	push   es
  4016f9:	mov    al,ds:0xfe84364b
  4016fe:	xchg   edi,eax
  4016ff:	add    DWORD PTR [edi],0xfffffff2
  401702:	out    dx,eax
  401703:	test   ah,bl
  401705:	(bad)  
  401707:	xchg   ecx,eax
  401708:	and    ebx,0x55374db7
  40170e:	je     0x401716
  401710:	arpl   WORD PTR ds:0xf142bb77,dx
  401716:	adc    eax,0xed224567
  40171b:	iretw  
  40171d:	xor    al,0x1f
  40171f:	dec    edi
  401720:	(bad)  
  401721:	imul   esi,DWORD PTR [ebx-0x6b],0x63
  401725:	or     al,0x6c
  401727:	call   0x8d88:0xeb8f4922
  40172e:	push   edi
  40172f:	cmc    
  401730:	rol    dh,0x9d
  401733:	loopne 0x401770
  401735:	xor    eax,0xaeced084
  40173a:	shl    esi,1
  40173c:	jge    0x40178b
  40173e:	pop    ss
  40173f:	dec    edi
  401740:	adc    ebp,esp
  401742:	adc    al,0xf7
  401744:	and    cl,al
  401746:	ror    BYTE PTR [ecx+0x44],1
  401749:	sub    eax,0xefb6a0a4
  40174e:	icebp  
  40174f:	iret   
  401750:	xchg   esp,eax
  401751:	imul   ebx,DWORD PTR [ebx+0x453c30aa],0x17f8ddf7
  40175b:	aas    
  40175c:	push   ebp
  40175d:	imul   esp,DWORD PTR [edx+ebx*1],0x39b28d04
  401764:	and    al,0x5d
  401766:	lea    ebp,[eax+0x4]
  401769:	aaa    
  40176a:	xchg   ecx,eax
  40176b:	sti    
  40176c:	call   0x39baf0a4
  401771:	js     0x4017f1
  401773:	mov    dh,0xc0
  401775:	cld    
  401776:	xor    DWORD PTR [edx+0x7b],0xffffffde
  40177a:	mov    ecx,0x7c235054
  40177f:	jl     0x4017c2
  401781:	dec    eax
  401782:	xchg   DWORD PTR [ebp-0x73],edx
  401785:	in     al,dx
  401786:	es enter 0x313,0x3c
  40178b:	xor    BYTE PTR [ebx+0x78],0xbf
  40178f:	arpl   WORD PTR [ebp+0x6a],bx
  401792:	call   0x1d797f82
  401797:	aas    
  401798:	and    eax,0xd18933a7
  40179d:	and    al,0x5c
  40179f:	add    eax,0xa1cad4d3
  4017a4:	mov    bh,BYTE PTR [edx+0x46505c8c]
  4017aa:	xchg   esp,eax
  4017ab:	mov    ecx,esp
  4017ad:	sbb    al,0xbc
  4017af:	fistp  DWORD PTR [eax+0x42]
  4017b2:	das    
  4017b3:	cmp    eax,DWORD PTR [ecx+0x52]
  4017b6:	sar    DWORD PTR [edi+0x40],0xa7
  4017ba:	pop    ecx
  4017bb:	mov    bl,BYTE PTR fs:[eax]
  4017be:	add    ah,bh
  4017c0:	fwait
  4017c1:	jecxz  0x4017d7
  4017c3:	sbb    eax,0xa4838b62
  4017c8:	jl     0x4017b3
  4017ca:	out    0x69,eax
  4017cc:	pop    es
  4017cd:	das    
  4017ce:	xlat   BYTE PTR ds:[ebx]
  4017cf:	cmp    al,0x51
  4017d1:	sbb    ecx,DWORD PTR [ebx]
  4017d3:	fdiv   st(1),st
  4017d5:	and    eax,0xe3a7ddea
  4017da:	cmp    al,0x89
  4017dc:	inc    esi
  4017dd:	pushf  
  4017de:	inc    edx
  4017df:	push   ebx
  4017e0:	xor    al,0x2d
  4017e2:	loope  0x401802
  4017e4:	dec    edx
  4017e5:	push   ss
  4017e6:	mov    edi,esp
  4017e8:	xor    dl,cl
  4017ea:	sub    al,BYTE PTR ds:0xff260e42
  4017f0:	sub    BYTE PTR [ebx-0x3e],bl
  4017f3:	push   ss
  4017f4:	jbe    0x401871
  4017f6:	adc    DWORD PTR [eax-0x7f82896d],ecx
  4017fc:	dec    eax
  4017fd:	ret    
  4017fe:	sbb    eax,0x951648d0
  401803:	dec    edx
  401804:	mov    gs,WORD PTR [edi]
  401806:	mov    bl,0xd3
  401808:	mov    edx,0x194d6723
  40180d:	js     0x40179d
  40180f:	sbb    bh,BYTE PTR [ebp+0x6e]
  401812:	push   ebx
  401813:	mov    bh,BYTE PTR [edx]
  401815:	cmp    al,0x7
  401817:	cmc    
  401818:	ret    0x2436
  40181b:	xchg   ecx,eax
  40181c:	(bad)  
  40181d:	mov    ecx,0x5e3b8619
  401822:	inc    esp
  401823:	pop    esi
  401824:	sbb    ecx,DWORD PTR [ebx]
  401826:	adc    edx,DWORD PTR [ecx-0x7d95ba34]
  40182c:	or     esi,edi
  40182e:	mov    bh,0x53
  401830:	jmp    0x7981e290
  401835:	sti    
  401836:	(bad)  
  401837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401838:	lods   eax,DWORD PTR ds:[esi]
  401839:	mov    ds:0x319d02b6,al
  40183e:	fmul   QWORD PTR gs:[esi-0x4f98382e]
  401845:	xchg   BYTE PTR [edx+0x3c200207],al
  40184b:	jne    0x40187e
  40184d:	mov    bl,0xa4
  40184f:	mov    ah,0xb6
  401851:	loope  0x4017e2
  401853:	mov    edi,0x834dd34
  401858:	test   DWORD PTR [esi-0x63],ebp
  40185b:	sub    eax,0x71893d7d
  401860:	add    al,BYTE PTR [ebp-0x53ac3968]
  401866:	inc    esp
  401867:	mov    ah,0xf0
  401869:	mov    bh,0x60
  40186b:	jmp    esp
  40186d:	and    al,0xf8
  40186f:	push   0x181a602c
  401874:	mov    bh,0xb4
  401876:	loope  0x40180a
  401878:	jge    0x40188f
  40187a:	jp     0x401860
  40187c:	push   edx
  40187d:	push   ss
  40187e:	(bad)  
  40187f:	scas   al,BYTE PTR es:[edi]
  401880:	dec    edx
  401881:	add    cl,BYTE PTR [edi-0x1e]
  401884:	leave  
  401885:	dec    esp
  401886:	push   edi
  401887:	outs   dx,DWORD PTR ds:[esi]
  401888:	cmp    eax,0x4212dbd0
  40188d:	popf   
  40188e:	mov    ds:0x23f7dc33,al
  401893:	jg     0x40185c
  401895:	mov    ch,BYTE PTR [eax]
  401897:	stc    
  401898:	jmp    0x51c0:0xf650094
  40189f:	out    0x27,al
  4018a1:	je     0x4018b1
  4018a3:	fldcw  WORD PTR [ebx]
  4018a5:	jno    0x4018b2
  4018a7:	test   eax,0xea9ec0f2
  4018ac:	and    ebp,DWORD PTR [eax-0x596182b0]
  4018b2:	gs mov al,0x1c
  4018b5:	fild   QWORD PTR [eax]
  4018b7:	and    al,0x26
  4018b9:	xor    DWORD PTR [ebx+0x623f9608],ebx
  4018bf:	mov    edx,0xf69ddb03
  4018c4:	mov    ebp,0x325becd9
  4018c9:	jmp    FWORD PTR [edi]
  4018cb:	lods   al,BYTE PTR ds:[esi]
  4018cc:	ja     0x4018ba
  4018ce:	sahf   
  4018cf:	jmp    0x4018e9
  4018d1:	mov    ebp,0xb54b1811
  4018d6:	dec    esp
  4018d7:	mov    ecx,0x6ed27de5
  4018dc:	out    dx,al
  4018dd:	cmp    BYTE PTR fs:[edi-0x4d],bh
  4018e1:	shl    BYTE PTR [eax+eiz*8+0x6e9b0a5e],0xcc
  4018e9:	fistp  WORD PTR [ebx]
  4018eb:	jmp    0x121:0x53c4be62
  4018f2:	add    eax,0x1355b6d0
  4018f7:	iret   
  4018f8:	adc    eax,0x50c89d75
  4018fd:	pop    edx
  4018fe:	cmp    eax,0x4e53357a
  401903:	lahf   
  401904:	cs xchg ebx,eax
  401906:	lea    edi,[edi+eiz*2]
  401909:	sbb    DWORD PTR [ecx+0x67157fbc],eax
  40190f:	stc    
  401910:	sub    eax,0x64220399
  401915:	lods   al,BYTE PTR ds:[esi]
  401916:	cs or  esi,ebp
  401919:	retf   
  40191a:	dec    ebx
  40191c:	jecxz  0x4018ff
  40191e:	popf   
  40191f:	lock inc edi
  401921:	ja     0x40193e
  401923:	xchg   ecx,eax
  401924:	xchg   BYTE PTR [edx-0x57c307fc],dh
  40192a:	into   
  40192b:	xchg   ecx,eax
  40192c:	shl    edi,1
  40192e:	retf   
  40192f:	int3   
  401930:	fstp   QWORD PTR [ecx]
  401932:	icebp  
  401933:	cmp    al,BYTE PTR [esi]
  401935:	rcr    BYTE PTR [edi-0x4292c0a2],cl
  40193b:	jle    0x4018f3
  40193d:	xor    eax,0x97dedcdf
  401942:	mov    ecx,0x4b432534
  401947:	dec    ebp
  401948:	stc    
  401949:	push   ds
  40194a:	push   edx
  40194b:	add    DWORD PTR [ebp+ebp*4+0x66],edx
  40194f:	iret   
  401950:	(bad)
  401954:	jmp    0x636e:0x6dfe3805
  40195b:	loope  0x4018fd
  40195d:	dec    esi
  40195e:	pop    es
  40195f:	inc    edi
  401960:	xchg   ecx,eax
  401961:	xchg   edx,eax
  401962:	inc    esi
  401963:	push   cs
  401964:	and    eax,DWORD PTR [eax+0x61]
  401967:	fadd   st,st(1)
  401969:	and    ecx,DWORD PTR [esi-0x2d]
  40196c:	pop    ebx
  40196d:	jo     0x40192e
  40196f:	inc    esp
  401970:	sub    al,0x85
  401972:	cmp    DWORD PTR [ecx+esi*8+0x7f5e5767],ebp
  401979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40197a:	jb     0x401993
  40197c:	stos   DWORD PTR es:[edi],eax
  40197d:	sbb    DWORD PTR [ebx-0x3e],edi
  401980:	push   ecx
  401981:	push   ebx
  401982:	ror    DWORD PTR [ebx+0x12],1
  401985:	push   ss
  401986:	rol    DWORD PTR [esp+edx*4-0xb],0xd7
  40198b:	mov    edi,0xc7afd852
  401990:	adc    BYTE PTR [edx*1+0x2958b5c5],bl
  401997:	xchg   edi,eax
  401998:	inc    esi
  401999:	dec    eax
  40199a:	add    BYTE PTR [ecx+0xb],dl
  40199d:	iret   
  40199e:	adc    al,0x8c
  4019a0:	cld    
  4019a1:	mov    al,0x7e
  4019a3:	adc    al,0xcf
  4019a5:	jae    0x401a05
  4019a7:	xchg   ebp,eax
  4019a8:	pop    edx
  4019a9:	fwait
  4019aa:	pop    eax
  4019ab:	sub    DWORD PTR [ebx],edi
  4019ad:	lahf   
  4019ae:	imul   esp,DWORD PTR [esi+0x3ed486e7],0x29
  4019b5:	stc    
  4019b6:	add    ebp,ebp
  4019b8:	hlt    
  4019b9:	add    al,0x98
  4019bb:	stos   DWORD PTR es:[edi],eax
  4019bc:	jnp    0x401a25
  4019be:	bound  ebp,QWORD PTR [edi+edx*2]
  4019c1:	mov    edi,0xdcd6d030
  4019c6:	lds    esp,FWORD PTR [ebx-0x64c9163]
  4019cc:	dec    eax
  4019cd:	cmp    al,0x3c
  4019cf:	inc    edi
  4019d0:	int    0x83
  4019d2:	inc    eax
  4019d3:	sbb    ecx,DWORD PTR [ecx+ecx*8-0x5b6c0f01]
  4019da:	lock ret 
  4019dc:	retf   0xd2c9
  4019df:	sub    edx,DWORD PTR [edx]
  4019e1:	dec    ecx
  4019e2:	es mov bl,0x62
  4019e5:	shl    BYTE PTR [esi+0x5de579e2],0xcb
  4019ec:	mov    ecx,0x553dd293
  4019f1:	sub    cl,BYTE PTR [edx-0x19]
  4019f4:	ss jbe 0x4019a4
  4019f7:	jp     0x40198b
  4019f9:	std    
  4019fa:	mov    eax,ds:0x28f50fe1
  4019ff:	adc    esp,eax
  401a01:	inc    ebp
  401a02:	jnp    0x401a0d
  401a04:	lahf   
  401a05:	mov    bh,0xf9
  401a07:	push   cs
  401a08:	xor    al,0x85
  401a0a:	inc    DWORD PTR [ecx]
  401a0c:	mov    WORD PTR [edx],gs
  401a0e:	imul   esi,DWORD PTR [ebp+0xfb64e39],0xffffffc9
  401a15:	xchg   esi,eax
  401a16:	cmp    eax,0xf56fd9a0
  401a1b:	adc    eax,DWORD PTR [ebp-0x61bb37f5]
  401a21:	xor    eax,esp
  401a23:	sar    DWORD PTR gs:[eax-0x61],1
  401a27:	sub    al,0xbd
  401a29:	cmp    DWORD PTR [eax+0x7c],ebp
  401a2c:	and    ebp,DWORD PTR [ebx-0x73be971c]
  401a32:	and    al,0xb2
  401a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a35:	pop    esp
  401a36:	push   esp
  401a37:	not    BYTE PTR [ebx]
  401a39:	hlt    
  401a3a:	adc    DWORD PTR [ecx-0x15],ebp
  401a3d:	adc    BYTE PTR [ecx+0x6e6efca2],bl
  401a43:	or     edi,edx
  401a45:	add    eax,ebp
  401a47:	ret    0x2eed
  401a4a:	xchg   ebx,eax
  401a4b:	out    dx,al
  401a4c:	mov    ecx,0xf4746fc
  401a51:	loop   0x401a48
  401a53:	inc    ebp
  401a54:	and    eax,0x4d81e391
  401a59:	leave  
  401a5a:	jl     0x401a79
  401a5c:	cmp    ebp,DWORD PTR [edi+0x2]
  401a5f:	lds    eax,FWORD PTR [edx]
  401a61:	push   edx
  401a62:	xchg   esp,eax
  401a63:	mov    bh,dl
  401a65:	cmp    DWORD PTR [edx+0x7a],0xfbc1dbad
  401a6c:	sbb    ch,BYTE PTR [esi+0x1ea8e27f]
  401a72:	sbb    eax,0x9444f6
  401a77:	push   ecx
  401a78:	(bad)  
  401a7a:	jnp    0x401a74
  401a7c:	mov    dh,0x48
  401a7e:	inc    ebp
  401a7f:	mov    edx,0x6c290492
  401a84:	adc    dl,BYTE PTR [eax]
  401a86:	xchg   esi,eax
  401a87:	sub    eax,0xe3352b72
  401a8c:	pop    ebp
  401a8d:	ret    
  401a8e:	xor    DWORD PTR [ebx+0x6f],ebp
  401a91:	inc    ebp
  401a92:	ss inc ebx
  401a94:	lock sti 
  401a96:	xchg   esi,eax
  401a97:	test   eax,0x6b90ffa5
  401a9c:	xor    al,0xf4
  401a9e:	retf   0x4ec6
  401aa1:	stos   DWORD PTR es:[edi],eax
  401aa2:	cmp    eax,0x64e609e4
  401aa7:	(bad)  
  401aa8:	scas   al,BYTE PTR es:[edi]
  401aa9:	aam    0xc7
  401aab:	push   ds
  401aac:	lea    esp,[edx]
  401aae:	fdiv   DWORD PTR [edi-0x26]
  401ab2:	loope  0x401af8
  401ab4:	push   eax
  401ab5:	out    0x42,eax
  401ab7:	add    BYTE PTR [esi-0x467a997e],dl
  401abd:	outs   dx,DWORD PTR ds:[esi]
  401abe:	mov    cl,0xd1
  401ac0:	lods   al,BYTE PTR ds:[esi]
  401ac1:	adc    edx,DWORD PTR [ebx-0x1f]
  401ac4:	je     0x401ac0
  401ac6:	loope  0x401b22
  401ac8:	or     DWORD PTR [edi],edx
  401aca:	or     ah,ch
  401acc:	aad    0xf6
  401ace:	sub    bl,BYTE PTR [eax]
  401ad0:	das    
  401ad1:	ss retf 
  401ad3:	icebp  
  401ad4:	mov    eax,DWORD PTR [ecx-0x59]
  401ad7:	scas   eax,DWORD PTR es:[edi]
  401ad8:	adc    BYTE PTR [edx+0x9],bh
  401adb:	xor    BYTE PTR [eax],ch
  401add:	retf   
  401ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401adf:	pop    eax
  401ae0:	test   eax,0xf01332ea
  401ae5:	xor    DWORD PTR [edi-0x34340a36],edx
  401aeb:	fnstsw WORD PTR [edi]
  401aed:	mov    ch,BYTE PTR [ecx+0xc]
  401af0:	jl     0x401b36
  401af2:	xchg   ebx,eax
  401af3:	jp     0x401ae4
  401af5:	aas    
  401af6:	ret    0xb57c
  401af9:	(bad)  
  401afa:	jns    0x401b6d
  401afc:	(bad)  
  401afd:	das    
  401afe:	inc    ebp
  401aff:	mov    ds:0x12e5f00,al
  401b04:	add    BYTE PTR gs:0x2af65377,0xb4
  401b0c:	add    al,0xea
  401b0e:	jbe    0x401b5b
  401b10:	sub    BYTE PTR gs:[eax-0x304cea2e],bl
  401b17:	push   ss
  401b18:	imul   edi,DWORD PTR [edx-0x14],0xf24f2da0
  401b1f:	mov    ebp,DWORD PTR [ebp-0x10]
  401b22:	retf   
  401b23:	cdq    
  401b24:	add    BYTE PTR [ecx+edi*1+0x11aa3d79],0xf
  401b2c:	fidivr DWORD PTR [eax*4+0x7e505b3c]
  401b33:	(bad)  
  401b34:	out    0xe7,eax
  401b36:	adc    edx,ebx
  401b38:	mov    al,ds:0x4633da66
  401b3d:	and    ah,bl
  401b3f:	adc    DWORD PTR [ecx],edi
  401b41:	loopne 0x401b51
  401b43:	xlat   BYTE PTR ds:[ebx]
  401b44:	test   edx,esi
  401b46:	cld    
  401b47:	mov    edi,0x78bd081f
  401b4c:	jno    0x401b49
  401b4e:	push   ss
  401b4f:	inc    eax
  401b50:	std    
  401b51:	fiadd  WORD PTR [eax]
  401b53:	call   0x7af7cb11
  401b58:	adc    al,0x15
  401b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b5b:	mov    al,0xa7
  401b5d:	aad    0x81
  401b5f:	pop    es
  401b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b61:	add    edx,ecx
  401b63:	add    al,0xfb
  401b65:	xchg   esp,eax
  401b66:	fwait
  401b67:	scas   al,BYTE PTR es:[edi]
  401b68:	add    eax,0xda51a497
  401b6d:	xchg   DWORD PTR [eax],eax
  401b6f:	mov    eax,esi
  401b71:	out    dx,eax
  401b72:	xchg   edx,eax
  401b73:	mov    BYTE PTR [ebx],ah
  401b75:	mov    eax,0xc810c542
  401b7a:	jp     0x401b8f
  401b7c:	push   ecx
  401b7d:	mov    ch,0xe0
  401b7f:	and    BYTE PTR [edx],ch
  401b81:	inc    eax
  401b82:	lods   eax,DWORD PTR ds:[esi]
  401b83:	aad    0x2c
  401b85:	jb     0x401b61
  401b87:	mov    eax,ds:0xf59de7cc
  401b8c:	mov    ds:0xfd76c818,al
  401b91:	pop    ecx
  401b92:	fld    DWORD PTR [ebx-0x57]
  401b95:	cmp    dl,BYTE PTR [edx*4-0xa94844c]
  401b9c:	jnp    0x401b95
  401b9e:	mov    DWORD PTR ds:0x66bd7395,0xa15d94cd
  401ba8:	dec    edx
  401ba9:	dec    edx
  401baa:	push   esp
  401bab:	jns    0x401b66
  401bad:	sbb    bh,al
  401baf:	out    dx,eax
  401bb0:	mov    BYTE PTR [eax-0x6f],al
  401bb3:	mov    dh,0xc5
  401bb5:	adc    bh,BYTE PTR [ecx]
  401bb7:	mov    eax,ds:0x991126da
  401bbc:	mov    al,ds:0x7855a60f
  401bc1:	rcr    dh,1
  401bc3:	sbb    ch,ah
  401bc5:	mov    dl,0x1b
  401bc7:	sti    
  401bc8:	shr    BYTE PTR [edx-0x7c],cl
  401bcb:	mov    cl,BYTE PTR [eax]
  401bcd:	add    ecx,DWORD PTR [eax]
  401bcf:	dec    esi
  401bd0:	out    dx,eax
  401bd1:	and    ecx,DWORD PTR [eax-0x6ee98802]
  401bd7:	clc    
  401bd8:	inc    DWORD PTR [ebp-0x57]
  401bdb:	(bad)  
  401bdc:	mov    dl,ah
  401bde:	pushf  
  401bdf:	cwde   
  401be0:	mov    eax,DWORD PTR [eax]
  401be2:	mov    dh,0xa9
  401be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401be5:	call   0xe8b0:0x469eb9d0
  401bec:	sub    al,0xc3
  401bee:	popa   
  401bef:	ficomp DWORD PTR [ebx+0x419b1cff]
  401bf5:	or     bh,BYTE PTR [esi]
  401bf7:	dec    eax
  401bf8:	adc    DWORD PTR [eax-0x32],ebx
  401bfb:	aad    0xb9
  401bfd:	loope  0x401c4f
  401bff:	dec    ebx
  401c00:	pop    ebx
  401c01:	dec    ebx
  401c02:	mov    ah,0xcc
  401c04:	mov    eax,ds:0xb064f287
  401c09:	ret    
  401c0a:	call   0xb2a8:0x7d207a50
  401c11:	cli    
  401c12:	or     ebp,eax
  401c14:	cmp    dh,bh
  401c16:	or     DWORD PTR [edi-0x6a],0x21
  401c1a:	sbb    BYTE PTR [ebx+0x30fe0edc],al
  401c20:	xchg   esp,eax
  401c21:	pop    es
  401c22:	shr    BYTE PTR [edx+ebx*4+0x3ae44d8f],0xdb
  401c2a:	jae    0x401c6d
  401c2c:	add    DWORD PTR [ecx+0xd],0xffffffd5
  401c30:	(bad)  
  401c32:	dec    esi
  401c33:	jae    0x401bb7
  401c35:	jo     0x401c84
  401c37:	push   cs
  401c38:	mov    ah,0x6d
  401c3a:	inc    esp
  401c3b:	sbb    BYTE PTR [ecx+edi*2+0x64],bl
  401c3f:	mov    dh,0x58
  401c41:	(bad)  
  401c42:	retf   
  401c43:	ins    BYTE PTR es:[edi],dx
  401c44:	mov    bl,0x1e
  401c46:	ja     0x401c1b
  401c48:	add    ah,al
  401c4a:	scas   eax,DWORD PTR es:[edi]
  401c4b:	leave  
  401c4c:	pop    ebp
  401c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c4e:	in     eax,0x23
  401c50:	xchg   esi,eax
  401c51:	fbstp  TBYTE PTR [ebp+0x25]
  401c54:	and    BYTE PTR [edx+0xe],al
  401c57:	push   ecx
  401c58:	pop    es
  401c59:	xchg   BYTE PTR ds:0xb72015c3,dh
  401c5f:	mov    WORD PTR [eax-0x78],fs
  401c62:	lahf   
  401c63:	inc    ebp
  401c64:	push   esi
  401c65:	push   edi
  401c66:	mov    cl,BYTE PTR [ecx-0x4e]
  401c69:	bound  ebx,QWORD PTR [eax+0x3396e2b]
  401c6f:	cmp    eax,0xfca28566
  401c74:	or     DWORD PTR [edx+edi*4-0x14aed3fc],esp
  401c7b:	push   ebx
  401c7c:	push   0x1
  401c7e:	dec    esi
  401c7f:	mov    BYTE PTR [ebx+0x4ca54cf5],bh
  401c85:	push   esp
  401c86:	cmp    ebp,DWORD PTR [edx+ebp*2-0x39e3a91d]
  401c8d:	push   edx
  401c8e:	rol    BYTE PTR [ecx+ecx*2],cl
  401c91:	dec    ebp
  401c92:	aam    0x7
  401c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c95:	dec    edx
  401c96:	dec    eax
  401c97:	add    ecx,DWORD PTR [eax]
  401c99:	xor    al,0x88
  401c9b:	inc    eax
  401c9c:	stos   DWORD PTR es:[edi],eax
  401c9d:	fwait
  401c9e:	(bad)  
  401c9f:	pop    ds
  401ca0:	ficom  DWORD PTR [edx+0x5b]
  401ca3:	pop    esi
  401ca4:	add    ecx,ebx
  401ca6:	fcmovnb st,st(5)
  401ca8:	js     0x401c72
  401caa:	fs adc edi,ecx
  401cad:	std    
  401cae:	into   
  401caf:	or     bl,ah
  401cb1:	sbb    eax,0x80b3ca89
  401cb6:	test   al,0x36
  401cb8:	cmp    BYTE PTR [ebx+0x11be06b7],cl
  401cbe:	mov    ds:0x4c131436,al
  401cc3:	fdivr  QWORD PTR [ebx]
  401cc5:	jle    0x401d21
  401cc7:	ds enter 0xf111,0x8
  401ccc:	pop    ebp
  401ccd:	repnz inc DWORD PTR [eax-0x448f9c7e]
  401cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cd5:	sbb    al,0x6e
  401cd7:	mov    ah,bl
  401cd9:	outs   dx,DWORD PTR ds:[esi]
  401cda:	mov    bl,0xbd
  401cdc:	test   al,0xa9
  401cde:	dec    ebx
  401cdf:	xchg   esi,eax
  401ce0:	xor    ah,BYTE PTR [ebx-0x25]
  401ce3:	in     eax,0x1c
  401ce5:	ret    
  401ce6:	inc    edi
  401ce7:	xchg   ecx,eax
  401ce8:	or     DWORD PTR [ebp-0x748236ee],eax
  401cee:	adc    eax,esp
  401cf0:	mov    dl,0x62
  401cf2:	mov    bl,0x29
  401cf4:	xor    dh,al
  401cf6:	fbstp  TBYTE PTR [eax+0x3b3fe7ef]
  401cfc:	pusha  
  401cfd:	or     edx,DWORD PTR [eax]
  401cff:	ret    0xe1e6
  401d02:	js     0x401c8f
  401d04:	push   eax
  401d05:	add    cl,BYTE PTR [edi]
  401d07:	test   eax,0x7345a4df
  401d0c:	sub    DWORD PTR ds:0x531d71f5,ebp
  401d12:	fcmove st,st(7)
  401d14:	add    bh,bl
  401d16:	ja     0x401d3d
  401d18:	dec    esi
  401d19:	jecxz  0x401ce0
  401d1b:	pop    esi
  401d1c:	fsubr  QWORD PTR [ecx]
  401d1e:	les    eax,FWORD PTR [edx+0x11efa69]
  401d24:	lods   eax,DWORD PTR ds:[esi]
  401d25:	cmp    cl,BYTE PTR [edx-0x1980603c]
  401d2b:	loope  0x401d79
  401d2d:	popa   
  401d2e:	or     DWORD PTR ds:0x5178766a,edi
  401d34:	jge    0x401d7e
  401d36:	inc    edx
  401d37:	and    BYTE PTR [ebp-0x6],cl
  401d3a:	mov    edx,0x251197cf
  401d3f:	in     al,dx
  401d40:	dec    edi
  401d41:	int    0x69
  401d43:	mov    al,ds:0x3d22eed2
  401d48:	push   edx
  401d49:	leave  
  401d4a:	dec    esp
  401d4b:	mov    eax,ds:0x57bba67e
  401d50:	adc    ah,BYTE PTR [esp+edx*8-0x37]
  401d54:	stos   DWORD PTR es:[edi],eax
  401d55:	push   ds
  401d56:	mov    eax,ds:0x82cf1939
  401d5b:	fwait
  401d5c:	out    0xc1,eax
  401d5e:	pop    ss
  401d5f:	imul   esi,DWORD PTR [edx-0x3d],0xb755ae83
  401d66:	repnz sbb edx,DWORD PTR [esp+eax*4+0x250a1d7c]
  401d6e:	stos   DWORD PTR es:[edi],eax
  401d6f:	xchg   esi,eax
  401d70:	std    
  401d71:	mov    WORD PTR [eax],cs
  401d73:	xor    eax,0x2f368af1
  401d78:	std    
  401d79:	loopne 0x401d7f
  401d7b:	addr16 (bad) 
  401d7e:	jecxz  0x401dee
  401d80:	mov    DWORD PTR [esi+0x3d],esp
  401d83:	mov    ds:0xa03625f0,eax
  401d88:	inc    ebx
  401d89:	sub    esi,DWORD PTR [edi+0x4b8e353d]
  401d8f:	add    esi,DWORD PTR [ecx]
  401d91:	mov    ecx,0xfa85dff
  401d96:	jb     0x401d1c
  401d98:	bound  esp,QWORD PTR [esi+0x216cdf2c]
  401d9e:	out    0x46,eax
  401da0:	mov    cl,0x22
  401da2:	xchg   esp,eax
  401da3:	cdq    
  401da4:	sbb    DWORD PTR [edi-0x18b227a8],0xffffffe9
  401dab:	cld    
  401dac:	mov    esi,0x9369021b
  401db1:	mov    ebx,0x82c478e5
  401db6:	jmp    0x62c9:0x9ef189b5
  401dbd:	cmp    BYTE PTR [edx],0x35
  401dc0:	or     al,0xa3
  401dc2:	shl    BYTE PTR [ecx+0x24],1
  401dc5:	iret   
  401dc6:	repz cmc 
  401dc8:	or     DWORD PTR [esp+ebx*2],ecx
  401dcb:	aas    
  401dcc:	xchg   esi,eax
  401dcd:	mov    BYTE PTR [edi],0x4c
  401dd0:	mov    esi,0x92df810b
  401dd5:	mov    al,ds:0x8102fecf
  401dda:	mov    ch,0xb5
  401ddc:	push   esi
  401ddd:	xor    ecx,DWORD PTR [edi+0x25]
  401de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de1:	repnz add BYTE PTR [ebx],ah
  401de4:	mov    dh,0x3b
  401de6:	lds    ebx,FWORD PTR [esi-0x4045585b]
  401dec:	cmp    cl,bh
  401dee:	bound  ebx,QWORD PTR [edi-0x56]
  401df1:	ret    
  401df2:	not    BYTE PTR [edx-0x69]
  401df5:	add    eax,0x60b22b98
  401dfa:	and    ebx,ebp
  401dfc:	adc    esi,DWORD PTR [eax+0x1a]
  401dff:	mov    edi,0xaf73414a
  401e04:	and    edx,esp
  401e06:	lock inc esi
  401e08:	sbb    BYTE PTR [edi],dl
  401e0a:	bound  ebp,QWORD PTR [edx-0xfa9de2f]
  401e10:	mov    ecx,edx
  401e12:	jge    0x401e09
  401e14:	mov    bh,0x5f
  401e16:	pop    es
  401e17:	mov    esp,0xf22e2cf
  401e1c:	push   edi
  401e1d:	(bad)  
  401e1e:	jecxz  0x401de5
  401e20:	dec    ecx
  401e21:	push   ebp
  401e22:	mov    dl,0x5c
  401e24:	mov    ebp,0x4c2fa4b2
  401e29:	sar    DWORD PTR [eax],cl
  401e2b:	test   BYTE PTR [ebp+0x19],0x57
  401e2f:	icebp  
  401e30:	fidivr WORD PTR [ebx]
  401e32:	cmp    al,0x90
  401e34:	push   0xa8c26b62
  401e39:	add    eax,0xa140257b
  401e3e:	xchg   BYTE PTR [eax+0xcd04172],dh
  401e44:	mov    ds:0x93fd927f,eax
  401e49:	scas   al,BYTE PTR es:[edi]
  401e4a:	hlt    
  401e4b:	push   ebx
  401e4c:	push   ds
  401e4d:	xchg   edx,eax
  401e4e:	pop    edi
  401e4f:	or     al,0xc1
  401e51:	neg    DWORD PTR [ebp-0x74ceb042]
  401e57:	jmp    0x6de07f1
  401e5c:	mov    edx,0x51fd6bca
  401e61:	inc    ecx
  401e62:	push   ebx
  401e63:	ret    0x4f62
  401e66:	pop    esi
  401e67:	ret    
  401e68:	dec    edi
  401e69:	push   es
  401e6a:	imul   ebp,esi,0x48
  401e6d:	lahf   
  401e6e:	inc    ebx
  401e6f:	mov    ds:0x7b6f1271,al
  401e74:	push   0xe0e11a3e
  401e79:	dec    edi
  401e7a:	div    bl
  401e7c:	gs loope 0x401efe
  401e7f:	cs (bad) 
  401e81:	into   
  401e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e83:	sar    ebx,1
  401e85:	outs   dx,DWORD PTR ds:[esi]
  401e86:	jb     0x401e48
  401e88:	xlat   BYTE PTR ds:[ebx]
  401e89:	mov    ds:0xd5d609d5,eax
  401e8e:	dec    esp
  401e8f:	xchg   edi,eax
  401e90:	fwait
  401e91:	or     bl,dl
  401e93:	in     eax,dx
  401e94:	jmp    esp
  401e96:	mov    al,ds:0xcc7ccf95
  401e9b:	add    al,0x92
  401e9d:	das    
  401e9e:	adc    al,0x4a
  401ea0:	lock inc edx
  401ea2:	addr16 arpl si,si
  401ea5:	lock sbb eax,0x101b23e7
  401eab:	mov    eax,0x940d1293
  401eb0:	stos   BYTE PTR es:[edi],al
  401eb1:	sti    
  401eb2:	xlat   BYTE PTR ds:[ebx]
  401eb3:	(bad)  
  401eb4:	fisttp QWORD PTR [edi+esi*1-0x8]
  401eb8:	scas   eax,DWORD PTR es:[edi]
  401eb9:	adc    al,0xd9
  401ebb:	dec    ecx
  401ebc:	icebp  
  401ebd:	jb     0x401eb9
  401ebf:	xchg   ecx,eax
  401ec0:	fdiv   DWORD PTR [ebx]
  401ec2:	pop    ecx
  401ec3:	(bad)  [ecx]
  401ec5:	xchg   edx,eax
  401ec6:	sbb    DWORD PTR [eax+0x52],eax
  401ec9:	push   edi
  401eca:	arpl   WORD PTR [eax+ebp*1+0x3b],bx
  401ece:	xchg   BYTE PTR [esi],cl
  401ed0:	jg     0x401e69
  401ed2:	or     BYTE PTR [ecx],0xbb
  401ed5:	mov    eax,ds:0x42747dae
  401eda:	and    al,ch
  401edc:	dec    ebx
  401edd:	icebp  
  401ede:	call   0x6fe8:0x520fcf80
  401ee5:	mov    esi,ebx
  401ee7:	add    al,BYTE PTR gs:[edi-0x20df82d4]
  401eee:	push   esi
  401eef:	jp     0x401eaa
  401ef1:	fcomp  QWORD PTR [edi-0x7a]
  401ef4:	(bad)
  401ef8:	in     al,dx
  401ef9:	and    BYTE PTR [edi+0x73],ah
  401efc:	fisttp DWORD PTR [eax-0x46f46838]
  401f02:	ins    BYTE PTR es:[edi],dx
  401f03:	out    0x34,eax
  401f05:	add    al,0x93
  401f07:	jmp    FWORD PTR [esi]
  401f09:	std    
  401f0a:	push   ds
  401f0b:	mov    ecx,0x2c7bd111
  401f10:	adc    al,0xac
  401f12:	fst    QWORD PTR [ebp+0x4a]
  401f15:	int    0x50
  401f17:	push   ebx
  401f18:	cli    
  401f19:	sbb    DWORD PTR [edx+0x4f],esp
  401f1c:	sub    esp,DWORD PTR [ecx+0xb]
  401f1f:	cmp    al,0xf
  401f21:	popa   
  401f22:	fmul   QWORD PTR [esi+0x396b1413]
  401f28:	int    0x1c
  401f2a:	adc    eax,0x7f85ce36
  401f2f:	mov    DWORD PTR [edi+0x47],esi
  401f32:	in     eax,dx
  401f33:	adc    BYTE PTR [eax-0x4f],bl
  401f36:	mov    al,0xb0
  401f38:	push   0x2c143029
  401f3d:	(bad)  [edx]
  401f3f:	sub    ah,BYTE PTR [esi]
  401f41:	ss enter 0x47c9,0x59
  401f46:	call   0x11b64ede
  401f4b:	repz sti 
  401f4d:	lock movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  401f50:	in     al,dx
  401f51:	mov    bh,0x40
  401f53:	std    
  401f54:	rcr    esi,cl
  401f56:	fsub   QWORD PTR [eax]
  401f58:	outs   dx,BYTE PTR ds:[esi]
  401f59:	push   es
  401f5a:	addr16 in al,dx
  401f5c:	lea    eax,[edi-0x31103f76]
  401f62:	sub    eax,0x31e4b06b
  401f67:	pop    esp
  401f68:	ds out dx,eax
  401f6a:	das    
  401f6b:	push   DWORD PTR [eax+0x3df353c2]
  401f71:	mov    ah,0xa9
  401f73:	mov    ah,0x2f
  401f75:	mov    al,ds:0x695e5e50
  401f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f7b:	jns    0x401f48
  401f7d:	scas   al,BYTE PTR es:[edi]
  401f7e:	out    0xb0,eax
  401f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f81:	mov    edi,DWORD PTR [ecx+0x2]
  401f84:	xchg   ecx,eax
  401f85:	fadd   st,st(4)
  401f87:	pop    edi
  401f88:	xchg   BYTE PTR [esi-0x32],bh
  401f8b:	mov    dh,BYTE PTR [ebx+0x706f3119]
  401f91:	sub    al,0xc
  401f93:	mov    edi,eax
  401f95:	xor    eax,0xf0a641d4
  401f9a:	inc    ebx
  401f9b:	sub    BYTE PTR [eax],bl
  401f9d:	sbb    BYTE PTR [esi+esi*4+0x27857597],al
  401fa4:	add    bl,bl
  401fa6:	jne    0x402020
  401fa8:	mov    ds:0x50f1eb3f,al
  401fad:	dec    edi
  401fae:	sbb    eax,DWORD PTR cs:[esi]
  401fb1:	pop    ss
  401fb2:	outs   dx,DWORD PTR ds:[esi]
  401fb3:	cmp    eax,ebx
  401fb5:	sub    eax,0x99ccd3ce
  401fba:	mov    dl,0x34
  401fbc:	adc    eax,0xe1b1e475
  401fc1:	loop   0x40201f
  401fc3:	mov    eax,ds:0x6227af66
  401fc8:	arpl   WORD PTR [esi],bp
  401fca:	mov    eax,0x76bbfa97
  401fcf:	cs int3 
  401fd1:	shl    DWORD PTR [eax-0x416fc742],0x7d
  401fd8:	lds    ebx,FWORD PTR [eax-0x8]
  401fdb:	inc    edi
  401fdc:	popa   
  401fdd:	xchg   esp,eax
  401fde:	xor    eax,0x6ad06939
  401fe3:	lds    edi,FWORD PTR [esi-0x25]
  401fe6:	div    DWORD PTR ds:0x908a5420
  401fec:	pop    edx
  401fed:	ds inc edi
  401fef:	idiv   BYTE PTR [ebx+0x56]
  401ff2:	ss mov al,0x6d
  401ff5:	mov    edx,0x2ba7dff0
  401ffa:	or     eax,0xbe1a596
  401fff:	cld    
  402000:	pop    ds
  402001:	pop    ss
  402002:	ins    DWORD PTR es:[edi],dx
  402003:	ret    0x616a
  402006:	outs   dx,BYTE PTR gs:[esi]
  402008:	inc    edi
  402009:	xchg   esi,eax
  40200a:	inc    ecx
  40200b:	sti    
  40200c:	outs   dx,DWORD PTR ds:[esi]
  40200d:	pushf  
  40200e:	mov    dh,0x2e
  402010:	adc    eax,0xaa325919
  402015:	ins    DWORD PTR es:[edi],dx
  402016:	(bad)
  40201a:	cld    
  40201b:	or     BYTE PTR [esi-0x6f],bh
  40201e:	jne    0x402075
  402020:	dec    ebx
  402021:	dec    edx
  402022:	sahf   
  402023:	lds    esi,FWORD PTR [ebx+ebp*2-0x62ac7961]
  40202a:	inc    ecx
  40202b:	and    DWORD PTR [ebx],0x9fb37f6f
  402031:	push   0xb7a0242f
  402036:	push   eax
  402037:	fdivr  DWORD PTR [edx]
  402039:	xchg   ebx,eax
  40203a:	fs test al,0x1e
  40203d:	ja     0x40200d
  40203f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402040:	mov    dl,0x56
  402042:	sub    bl,BYTE PTR [edi]
  402044:	stc    
  402045:	jbe    0x402008
  402047:	out    dx,eax
  402048:	mov    eax,edx
  40204a:	lods   al,BYTE PTR ds:[esi]
  40204b:	loop   0x40208a
  40204d:	mov    edi,0x1e9e976a
  402052:	and    ah,dh
  402054:	inc    esp
  402055:	mov    ds:0x25e89b02,al
  40205a:	mov    esi,0x1f675d79
  40205f:	jne    0x40202c
  402061:	xchg   esi,eax
  402062:	sbb    eax,0x15b7bc4a
  402067:	mov    al,0xf8
  402069:	and    eax,0xa9c29948
  40206e:	fmul   DWORD PTR [edx]
  402070:	leave  
  402071:	retf   0xe130
  402074:	cmp    al,0x25
  402076:	mov    dl,0xa2
  402078:	xor    eax,0xb9ac86d0
  40207d:	or     dh,BYTE PTR [edx+0x28e6c437]
  402083:	fidiv  WORD PTR ds:0x6284592f
  402089:	xlat   BYTE PTR ds:[ebx]
  40208a:	jmp    0xff553eee
  40208f:	lods   al,BYTE PTR ds:[esi]
  402090:	out    0x2b,eax
  402092:	fs repz adc esi,DWORD PTR es:[edi-0x28]
  402098:	sbb    BYTE PTR [eax+0x3c213708],dl
  40209e:	in     eax,0x72
  4020a0:	sar    BYTE PTR [eax+esi*8],1
  4020a3:	shr    DWORD PTR ds:0xdaf2cc9b,cl
  4020a9:	pop    edi
  4020aa:	add    al,0xec
  4020ac:	adc    al,0xcf
  4020ae:	and    DWORD PTR [eax+0x41b779c3],esp
  4020b4:	into   
  4020b5:	rol    BYTE PTR [edx+esi*2+0x3],1
  4020b9:	jns    0x40209b
  4020bb:	inc    edx
  4020bc:	mov    ds,WORD PTR [esi+ecx*1-0x555e022b]
  4020c3:	cld    
  4020c4:	daa    
  4020c5:	retf   0x614e
  4020c8:	sar    BYTE PTR [ebx+0x6a458030],0x61
  4020cf:	cli    
  4020d0:	adc    al,0x8e
  4020d2:	mov    ecx,0xe3f76fa3
  4020d7:	sub    ecx,eax
  4020d9:	cmp    BYTE PTR [ebx],0xd8
  4020dc:	arpl   WORD PTR [edi],dx
  4020de:	push   ebx
  4020df:	and    eax,0x23a290bf
  4020e4:	cmp    eax,0x11eb407e
  4020e9:	dec    ebx
  4020ea:	mov    al,ds:0x8af5c7cb
  4020ef:	or     ebp,DWORD PTR [ecx-0x74cf0af6]
  4020f5:	test   BYTE PTR [ebp-0x4],dl
  4020f8:	(bad)  
  4020fa:	add    DWORD PTR [edx],0xdcc76990
  402100:	push   esi
  402101:	scas   eax,DWORD PTR es:[edi]
  402102:	mov    edx,0x3f7cf871
  402107:	into   
  402108:	push   0xffffff85
  40210a:	xchg   esi,edx
  40210c:	shl    ebx,0x1b
  40210f:	out    0xe0,al
  402111:	stc    
  402112:	ror    BYTE PTR [ebp-0x5388aa15],0xf5
  402119:	sar    BYTE PTR ss:[ecx+0x62],0xe4
  40211e:	cmp    BYTE PTR [eax],ch
  402120:	sar    BYTE PTR [ecx+0x64c1f6],1
  402126:	scas   eax,DWORD PTR es:[edi]
  402127:	cmp    bl,0xf4
  40212a:	xchg   esp,eax
  40212b:	and    al,0xcc
  40212d:	mov    edx,0x4e38ecc4
  402132:	mov    ds:0x6eac7001,eax
  402137:	or     eax,0x30764c8e
  40213c:	sahf   
  40213d:	aad    0xcc
  40213f:	je     0x402129
  402141:	jge    0x402184
  402143:	jo     0x402193
  402145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402146:	ret    0x9b20
  402149:	int3   
  40214a:	lahf   
  40214b:	mov    eax,ds:0x6022593e
  402150:	arpl   WORD PTR [ebx],ax
  402152:	xchg   DWORD PTR [esi],edi
  402154:	neg    DWORD PTR [ebp+0x2]
  402157:	inc    esp
  402158:	clc    
  402159:	ja     0x4020f4
  40215b:	aad    0x6a
  40215d:	pop    ss
  40215e:	daa    
  40215f:	sbb    dl,BYTE PTR [ebx+edx*1-0x2dcc8e38]
  402166:	sub    eax,0xc2074c0
  40216b:	dec    ebp
  40216c:	arpl   WORD PTR [esi-0x7a],si
  40216f:	and    eax,DWORD PTR [ecx]
  402171:	jo     0x40217e
  402173:	jp     0x4021c8
  402175:	pop    esi
  402176:	dec    edx
  402177:	pop    ss
  402178:	dec    ecx
  402179:	mov    edi,0xc47c2db1
  40217e:	ins    DWORD PTR es:[edi],dx
  40217f:	mov    ds:0xc97bd639,eax
  402184:	sbb    DWORD PTR [eax+0x30ed6f7b],ebp
  40218a:	es js  0x40211c
  40218d:	out    0xdd,eax
  40218f:	test   al,0xce
  402191:	jbe    0x402178
  402193:	imul   ebx,DWORD PTR [edi],0x1d708774
  402199:	(bad)  
  40219a:	cwde   
  40219b:	sbb    BYTE PTR [ebp+0x6b],bl
  40219e:	mov    bl,0xd9
  4021a0:	ins    DWORD PTR es:[edi],dx
  4021a1:	pushf  
  4021a2:	jnp    0x4021d7
  4021a4:	(bad)  
  4021a5:	mov    ah,0xdb
  4021a7:	fdivrp st(4),st
  4021a9:	jg     0x402137
  4021ab:	mov    esp,0x5c8a4b29
  4021b0:	pop    eax
  4021b1:	sub    BYTE PTR [ebx+0x44],dl
  4021b4:	adc    cl,al
  4021b6:	popa   
  4021b7:	cmp    al,BYTE PTR [esi-0x1f0158e4]
  4021bd:	pop    es
  4021be:	sbb    DWORD PTR [ecx+0x25],0x18
  4021c2:	add    esi,DWORD PTR [eax+esi*1+0x7a871e25]
  4021c9:	icebp  
  4021ca:	fcomp  DWORD PTR [esi]
  4021cc:	sbb    BYTE PTR [edi+ebp*4-0x42],bl
  4021d0:	scas   al,BYTE PTR es:[edi]
  4021d1:	daa    
  4021d2:	(bad)  [ebp-0xf]
  4021d5:	push   eax
  4021d6:	inc    edi
  4021d7:	(bad)  
  4021d8:	imul   DWORD PTR [eax+ebx*8]
  4021db:	dec    ebp
  4021dc:	sbb    dl,BYTE PTR [ecx-0x60]
  4021df:	cs jnp 0x4021fc
  4021e2:	adc    cl,BYTE PTR [ebx-0x6e]
  4021e5:	jnp    0x4021d7
  4021e7:	rol    BYTE PTR [ebp-0x4b],0xde
  4021eb:	jmp    0x1a3cd97d
  4021f0:	dec    edx
  4021f1:	jno    0x40222f
  4021f3:	jmp    0x8416:0x6c19c88d
  4021fa:	pop    ecx
  4021fb:	xchg   esp,eax
  4021fc:	mov    dh,0x9
  4021fe:	cld    
  4021ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402200:	xlat   BYTE PTR ds:[ebx]
  402201:	repnz dec ebp
  402203:	loop   0x4021c8
  402205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402206:	popf   
  402207:	adc    al,0x32
  402209:	push   ss
  40220a:	xchg   ebp,eax
  40220b:	sbb    al,0x9f
  40220d:	sub    BYTE PTR [esp+edx*2],0x8b
  402211:	push   ebx
  402212:	xor    BYTE PTR [edi-0x5902bf39],0x87
  402219:	call   0x25513253
  40221e:	rcl    DWORD PTR [edi+0x6eac29a],1
  402224:	sub    BYTE PTR [ebx-0xc],bl
  402227:	int3   
  402228:	aas    
  402229:	inc    edi
  40222a:	inc    BYTE PTR [eax+0x62721fd1]
  402230:	cmp    al,0x93
  402232:	inc    ecx
  402233:	hlt    
  402234:	iret   
  402235:	popa   
  402236:	push   0x4faae2b1
  40223b:	pop    ss
  40223c:	mov    al,ds:0xd3150587
  402241:	sbb    BYTE PTR cs:[esi],ah
  402244:	fxch   st(7)
  402246:	mov    esp,0xc0d737a6
  40224b:	inc    ebx
  40224c:	nop
  40224d:	push   ds
  40224e:	in     eax,dx
  40224f:	iret   
  402250:	seto   cl
  402253:	mov    edx,0xf1e6e795
  402258:	sub    bh,BYTE PTR [esp+ebp*8-0x7c]
  40225c:	push   esp
  40225d:	dec    esp
  40225e:	mov    dl,0x61
  402260:	bound  esp,QWORD PTR [edi]
  402262:	pop    eax
  402263:	std    
  402264:	jns    0x40223a
  402266:	mov    esi,0x8eb5c23f
  40226b:	add    bh,cl
  40226d:	mov    ch,0x4d
  40226f:	sbb    DWORD PTR [ebx],edx
  402271:	imul   BYTE PTR [edi-0x6536d67e]
  402277:	lods   eax,DWORD PTR ds:[esi]
  402278:	loope  0x4022a7
  40227a:	xor    DWORD PTR [esi+0x4bc947d5],edi
  402280:	out    dx,eax
  402281:	xchg   edx,eax
  402282:	cs xchg edi,eax
  402284:	call   0xcdf4:0x39535512
  40228b:	cwde   
  40228c:	sub    eax,esi
  40228e:	mov    ch,0x6a
  402290:	push   ds
  402291:	dec    ebp
  402292:	jne    0x402273
  402294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402295:	(bad)  
  402296:	(bad)  
  402297:	in     eax,0xc5
  402299:	adc    ebp,esi
  40229b:	mov    cl,0xed
  40229d:	jmp    0xe849:0x4b2e3dae
  4022a4:	mov    ebp,0xe6078a72
  4022a9:	sbb    eax,0xc63284
  4022ae:	mov    esp,DWORD PTR [ebp-0x4d2d1464]
  4022b4:	xor    eax,0x4b369330
  4022b9:	int    0x91
  4022bb:	call   0x4c04:0x2a3565f8
  4022c2:	leave  
  4022c3:	inc    esi
  4022c4:	cdq    
  4022c5:	cmp    ecx,DWORD PTR ds:0x7224b2b1
  4022cb:	es inc edi
  4022cd:	iret   
  4022ce:	adc    al,0x9d
  4022d0:	fcmovnu st,st(6)
  4022d2:	shr    BYTE PTR [edx+eax*4+0x3f],0x82
  4022d7:	lds    eax,FWORD PTR [bp+si+0x100e]
  4022dc:	pop    ds
  4022dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	out    0x13,eax
  4022e0:	mov    ah,0x89
  4022e2:	mov    ah,0xf3
  4022e4:	scas   eax,DWORD PTR es:[edi]
  4022e5:	xor    DWORD PTR [eax-0x6765615],0x19
  4022ec:	mov    esi,0x2f0e69ac
  4022f1:	pop    ss
  4022f2:	jmp    0x9d54:0x4aabc831
  4022f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022fa:	cmc    
  4022fb:	ds jnp 0x4022c1
  4022fe:	mov    ebx,0xc319876d
  402303:	push   edx
  402304:	pop    es
  402305:	aad    0x5c
  402307:	pop    esi
  402308:	lock mov ah,0x60
  40230b:	stos   DWORD PTR es:[edi],eax
  40230c:	or     esi,eax
  40230e:	adc    ch,BYTE PTR [ebp+edx*4+0x4d4fc073]
  402315:	xacquire xchg DWORD PTR [eax+0x2d44094c],ebx
  40231c:	jb     0x402374
  40231e:	test   BYTE PTR [edx+0x66],bh
  402321:	mov    edx,0x919375fa
  402326:	mov    dh,0xa3
  402328:	dec    eax
  402329:	inc    ebp
  40232a:	cmp    eax,0xf68263f2
  40232f:	sbb    BYTE PTR [eax-0x7b],cl
  402332:	pmulhuw mm3,mm1
  402335:	aaa    
  402336:	mov    ebp,DWORD PTR [edx-0x6e]
  402339:	pop    ds
  40233a:	xor    eax,0x22218bf0
  40233f:	outs   dx,BYTE PTR ds:[esi]
  402340:	push   ebp
  402341:	lds    ecx,FWORD PTR [edi-0x5]
  402344:	js     0x402360
  402346:	cdq    
  402347:	outs   dx,DWORD PTR ds:[esi]
  402348:	adc    BYTE PTR [edx],ah
  40234a:	inc    esi
  40234b:	mov    ah,0x4a
  40234d:	jp     0x4022f0
  40234f:	rol    al,0x83
  402352:	pop    eax
  402353:	mov    bl,0x90
  402355:	sbb    dl,dl
  402357:	outs   dx,BYTE PTR ds:[esi]
  402358:	repnz dec ecx
  40235a:	nop
  40235b:	cmp    dl,al
  40235d:	dec    ecx
  40235e:	mov    ch,0x2a
  402360:	xchg   esp,eax
  402361:	cmp    esp,DWORD PTR [esi]
  402363:	mov    ds:0x651c2ce0,al
  402368:	fisttp DWORD PTR [ebx]
  40236a:	push   esp
  40236b:	popf   
  40236c:	fsub   st,st(0)
  40236e:	loopne 0x4023c8
  402370:	inc    edi
  402371:	cmp    ebx,0x1a
  402374:	cwde   
  402375:	daa    
  402376:	sub    esi,DWORD PTR [esi+ecx*1+0x6a92f304]
  40237d:	outs   dx,BYTE PTR ds:[esi]
  40237e:	iret   
  40237f:	push   0xffffffd5
  402381:	lods   al,BYTE PTR ds:[esi]
  402382:	(bad)  
  402383:	into   
  402384:	dec    esp
  402385:	loopne 0x4023c6
  402387:	shr    dh,cl
  402389:	sub    al,0x88
  40238b:	fstp   TBYTE PTR ds:0x7af728ca
  402391:	fimul  WORD PTR [ebx+0x2]
  402394:	push   0x1b05f2aa
  402399:	xchg   edi,eax
  40239a:	mov    edi,0xe072b1f6
  40239f:	sub    ebp,ecx
  4023a1:	push   edx
  4023a2:	aam    0xa5
  4023a4:	out    dx,eax
  4023a5:	call   0xaf25:0x872a0f8c
  4023ac:	jmp    0xafb0:0x6fd189ef
  4023b3:	inc    edx
  4023b4:	clc    
  4023b5:	rcr    DWORD PTR [eax+0x1f486f34],0xb0
  4023bc:	imul   ebp,eax,0xffffff96
  4023bf:	call   0xfe09f152
  4023c4:	jmp    0x85500807
  4023c9:	retf   
  4023ca:	mov    ?,WORD PTR [eax-0x73e84b61]
  4023d0:	adc    ecx,DWORD PTR [ebx]
  4023d2:	outs   dx,BYTE PTR ds:[esi]
  4023d3:	lods   eax,DWORD PTR ds:[esi]
  4023d4:	and    eax,0x1434bf99
  4023d9:	mov    ah,0xab
  4023db:	pop    ebx
  4023dc:	test   DWORD PTR [ecx+0x1e2c8465],0xdf79eb4c
  4023e6:	or     ch,ch
  4023e8:	pusha  
  4023e9:	stos   DWORD PTR es:[edi],eax
  4023ea:	mov    cl,0x3d
  4023ec:	mov    ecx,0x1415fbd8
  4023f1:	jae    0x402413
  4023f3:	sti    
  4023f4:	push   0x4f952976
  4023f9:	jno    0x40247a
  4023fb:	outs   dx,BYTE PTR ds:[esi]
  4023fc:	inc    edi
  4023fd:	test   al,0xbf
  4023ff:	xchg   DWORD PTR [eax],esp
  402401:	adc    al,0x2c
  402403:	aaa    
  402404:	pusha  
  402405:	jmp    0x40246c
  402407:	push   cs
  402408:	sahf   
  402409:	cld    
  40240a:	lock lahf 
  40240c:	mov    edi,0xe4989b87
  402411:	or     BYTE PTR [ecx],bl
  402413:	fnsave [esi+0x7ece4692]
  402419:	ret    0x4477
  40241c:	repz pop ds
  40241e:	cmp    eax,edi
  402420:	ja     0x402458
  402422:	or     BYTE PTR [edx-0x458673a9],ah
  402428:	sbb    BYTE PTR [esi-0x3],ah
  40242b:	sbb    BYTE PTR [esi-0x41],bl
  40242e:	pop    esp
  40242f:	hlt    
  402430:	aaa    
  402431:	lock jp 0x4023b5
  402434:	xchg   esi,eax
  402435:	cmp    BYTE PTR [eax-0x36bdd026],dl
  40243b:	into   
  40243c:	(bad)  [edi+0x32ba9aff]
  402442:	lods   al,BYTE PTR ds:[esi]
  402443:	mov    ds:0xd5659c59,eax
  402448:	push   esi
  402449:	scas   eax,DWORD PTR es:[edi]
  40244a:	int    0xcd
  40244c:	aaa    
  40244d:	bound  esp,QWORD PTR [edx-0x41]
  402450:	mov    db7,esi
  402453:	xor    al,0xe3
  402455:	icebp  
  402456:	retf   
  402457:	cmp    ebx,ecx
  402459:	and    DWORD PTR [ebp+0x10e68ea1],0x684140b6
  402463:	mov    edi,0x6aee0aa6
  402468:	sahf   
  402469:	pop    edi
  40246a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40246b:	push   ecx
  40246c:	mov    ebx,0x85de1484
  402471:	daa    
  402472:	gs hlt 
  402474:	sub    al,0xf
  402476:	je     0x402461
  402478:	lock sub DWORD PTR ds:[edx],ecx
  40247c:	adc    ah,bl
  40247e:	ins    BYTE PTR es:[edi],dx
  40247f:	mov    WORD PTR [esi],ss
  402481:	fdivr  QWORD PTR [ebx+0x6dcb8a87]
  402487:	dec    esp
  402488:	je     0x402475
  40248a:	and    BYTE PTR [bx-0x7c],ch
  40248e:	stos   DWORD PTR es:[edi],eax
  40248f:	imul   si,WORD PTR [ebx],0x31
  402493:	pop    eax
  402494:	jnp    0x402422
  402496:	leave  
  402497:	mov    ecx,DWORD PTR [edx]
  402499:	out    0x6,eax
  40249b:	mov    bh,0x17
  40249d:	lock or bl,BYTE PTR [ecx]
  4024a0:	jns    0x402425
  4024a2:	adc    al,0xb3
  4024a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024a5:	adc    BYTE PTR [edi-0xc],ch
  4024a8:	xor    BYTE PTR [ebp-0x6c],ch
  4024ab:	pop    ebx
  4024ac:	pop    esi
  4024ad:	mov    ?,WORD PTR [esi+ecx*1-0x2ad03552]
  4024b4:	dec    edx
  4024b5:	outs   dx,BYTE PTR ds:[esi]
  4024b6:	and    al,0xf
  4024b8:	aad    0x79
  4024ba:	call   0xcae6:0x7cbb01bb
  4024c1:	jmp    DWORD PTR [edi+0x5e]
  4024c4:	add    ch,ah
  4024c6:	in     al,dx
  4024c7:	mov    ch,0x42
  4024c9:	loop   0x4024fb
  4024cb:	aad    0x57
  4024cd:	ret    
  4024ce:	mov    DWORD PTR [edx+ebp*4+0xfd3a01f],edi
  4024d5:	les    edx,FWORD PTR [esi]
  4024d7:	pop    esi
  4024d8:	call   DWORD PTR [ebp-0x6807f0ee]
  4024de:	sub    eax,DWORD PTR [ebp-0x25]
  4024e1:	ins    BYTE PTR es:[edi],dx
  4024e2:	cdq    
  4024e3:	mov    dh,0xad
  4024e5:	add    al,0x3e
  4024e7:	in     al,dx
  4024e8:	sub    BYTE PTR ds:0xcb5dc8c2,0xb
  4024ef:	cli    
  4024f0:	sbb    al,0x22
  4024f2:	in     al,dx
  4024f3:	js     0x402546
  4024f5:	stc    
  4024f6:	pop    edi
  4024f7:	push   0x5b
  4024f9:	stc    
  4024fa:	je     0x402541
  4024fc:	pop    ss
  4024fd:	(bad)
  402500:	push   ebp
  402501:	and    al,0x53
  402503:	iret   
  402504:	icebp  
  402505:	mov    edx,0x84e19dda
  40250a:	retf   
  40250b:	call   0x76cda355
  402510:	fdivr  DWORD PTR ds:0x4900d861
  402516:	xchg   ebx,ebx
  402518:	xor    edx,DWORD PTR [eax-0x7e9b75c0]
  40251e:	(bad)  
  40251f:	jg     0x402532
  402521:	jae    0x4024b3
  402523:	add    eax,0x769af026
  402528:	or     DWORD PTR [edi+0x10],ebp
  40252b:	out    0x1f,eax
  40252d:	rcl    DWORD PTR [esi+0x56],1
  402530:	repz push 0x7f262d79
  402536:	(bad)  
  402537:	gs repnz mov si,0x6df3
  40253d:	jl     0x402522
  40253f:	pop    ss
  402540:	mov    ecx,0xbf1b403a
  402545:	es jbe 0x402595
  402548:	inc    ebx
  402549:	jg     0x4024e5
  40254b:	scas   al,BYTE PTR es:[edi]
  40254c:	call   0xbf24:0x964b4ed7
  402553:	mov    al,BYTE PTR [eax+0x1c]
  402556:	inc    edi
  402557:	add    BYTE PTR [ebx+0x18],ah
  40255a:	jb     0x40257e
  40255c:	add    eax,esi
  40255e:	jne    0x4024fb
  402560:	test   al,0x9b
  402562:	outs   dx,DWORD PTR ds:[esi]
  402563:	jmp    0xa795:0x5cab1b2c
  40256a:	outs   dx,DWORD PTR ds:[esi]
  40256b:	pop    es
  40256c:	rep ins DWORD PTR es:[edi],dx
  40256e:	push   0xdd3a1b41
  402573:	mov    al,ds:0x8329a7ca
  402578:	push   ds
  402579:	pop    ecx
  40257a:	cdq    
  40257b:	pop    ecx
  40257d:	adc    BYTE PTR [esi],bl
  40257f:	fs jg  0x4025e2
  402582:	or     eax,edx
  402584:	loope  0x402526
  402586:	loop   0x4025d2
  402588:	fdivr  QWORD PTR [edx-0x2ccf647b]
  40258e:	mov    ds:0x32e1e687,eax
  402593:	icebp  
  402594:	neg    BYTE PTR [edi+0x531f7954]
  40259a:	dec    ebx
  40259b:	add    al,0x28
  40259d:	(bad)  
  40259e:	jmp    0x4025b2
  4025a0:	mov    bh,0xfe
  4025a2:	or     ebx,0x4ee7eb0f
  4025a8:	pop    edx
  4025a9:	pushf  
  4025aa:	xchg   esp,eax
  4025ab:	or     al,0xd5
  4025ad:	js     0x402612
  4025af:	sbb    al,0x1f
  4025b1:	push   edi
  4025b2:	out    0x21,eax
  4025b4:	call   0xe391293e
  4025b9:	or     eax,0x16eed44d
  4025be:	xchg   edx,eax
  4025bf:	dec    ecx
  4025c0:	ror    ebx,1
  4025c2:	clc    
  4025c3:	bound  esi,QWORD PTR [ebp+0x1e759f0a]
  4025c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025ca:	dec    ebx
  4025cb:	icebp  
  4025cc:	jo     0x402566
  4025ce:	mul    eax
  4025d0:	mov    cl,0x65
  4025d2:	add    ah,BYTE PTR [ebx+0xb52dc5]
  4025d8:	sbb    al,0x95
  4025da:	jo     0x402560
  4025dc:	jnp    0x40262e
  4025de:	ror    eax,1
  4025e0:	dec    ecx
  4025e1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025e3:	jp     0x4025c2
  4025e5:	pop    ss
  4025e6:	jo     0x40261c
  4025e8:	jge    0x402642
  4025ea:	or     edi,DWORD PTR [ecx+eax*1]
  4025ed:	fadd   QWORD PTR [ecx-0x7e]
  4025f0:	stos   DWORD PTR es:[edi],eax
  4025f1:	mov    esi,DWORD PTR ds:0x55b2588d
  4025f7:	push   edi
  4025f8:	ror    bh,cl
  4025fa:	push   0x422ee9a8
  4025ff:	add    ebx,DWORD PTR [eax+eax*2+0x63]
  402603:	sub    BYTE PTR [ebp-0x19f12ead],bh
  402609:	pop    esp
  40260a:	lds    edi,FWORD PTR [edi+0x26]
  40260d:	push   0x6ff1a0cd
  402612:	(bad)  
  402613:	int    0xb1
  402615:	loopne 0x4025f9
  402617:	jmp    0x5809e93e
  40261c:	lahf   
  40261d:	scas   al,BYTE PTR es:[edi]
  40261e:	(bad)  
  40261f:	sahf   
  402620:	nop
  402621:	push   edi
  402622:	into   
  402623:	jne    0x402607
  402625:	out    dx,al
  402626:	(bad)  [eax+edi*2-0x3b]
  40262a:	fs into 
  40262c:	adc    eax,0x5e44233d
  402631:	mov    ds:0x76135a88,al
  402636:	retf   
  402637:	dec    esp
  402638:	rol    DWORD PTR [edx-0x7ed4664a],cl
  40263e:	cmp    dh,BYTE PTR [eax+ebp*8-0x2940e52b]
  402645:	mov    edi,0xc67a1363
  40264a:	scas   eax,DWORD PTR es:[edi]
  40264b:	and    eax,0x7e
  40264e:	call   0x47b5c7da
  402653:	cmp    BYTE PTR [eax],dl
  402655:	pop    eax
  402656:	add    BYTE PTR [esi],0x66
  402659:	mov    al,0xcc
  40265b:	mov    dh,0xd3
  40265d:	jb     0x4025f2
  40265f:	mov    al,ds:0xc1187a34
  402664:	js     0x402610
  402666:	sub    BYTE PTR [ebx-0x3c],ah
  402669:	fwait
  40266a:	and    DWORD PTR [ecx+0x79bd8606],ebp
  402670:	pusha  
  402671:	scas   eax,DWORD PTR es:[edi]
  402672:	dec    DWORD PTR [eax+0x3b]
  402675:	mov    ah,0xd1
  402677:	lds    eax,FWORD PTR [edi]
  402679:	pop    ecx
  40267a:	gs xchg ecx,eax
  40267c:	loope  0x4026b8
  40267e:	cmp    eax,0x335fd840
  402683:	data16 adc al,0xd6
  402686:	adc    eax,0x69340c04
  40268b:	dec    esi
  40268c:	inc    esi
  40268d:	mov    ds,eax
  40268f:	daa    
  402690:	retf   0xd1ad
  402693:	(bad)  
  402694:	cwde   
  402695:	xor    bh,BYTE PTR [edi+0x37349b8]
  40269b:	jle    0x402624
  40269d:	imul   esp,esi,0xd30c9ee8
  4026a3:	test   BYTE PTR [ecx-0x68f77b3d],dl
  4026a9:	push   ebp
  4026aa:	pop    ebx
  4026ab:	or     ah,BYTE PTR [edi+0x6259eb42]
  4026b1:	add    eax,0x57500d16
  4026b6:	push   edi
  4026b7:	sub    eax,0x8bc10f5b
  4026bc:	int3   
  4026bd:	sbb    DWORD PTR [ebx],edx
  4026bf:	push   eax
  4026c0:	dec    esp
  4026c1:	and    BYTE PTR [edi-0x35a44742],bl
  4026c7:	pop    esp
  4026c8:	or     BYTE PTR [ebx+0x3b01fffd],0xf
  4026cf:	jae    0x40273c
  4026d1:	cdq    
  4026d2:	xchg   esp,eax
  4026d3:	call   DWORD PTR [eax+0x7a7f3fef]
  4026d9:	pop    esi
  4026da:	cmp    ah,bh
  4026dc:	xor    BYTE PTR [ecx+esi*8],al
  4026df:	ja     0x4026ba
  4026e1:	fld    DWORD PTR [eax+ebp*8+0x691a3118]
  4026e8:	add    esp,ecx
  4026ea:	mov    al,ds:0xf0414122
  4026ef:	push   esp
  4026f0:	mov    ebp,0xca6c3653
  4026f5:	adc    BYTE PTR [ebp+0x46],0x1a
  4026f9:	mov    ecx,0x786a53a2
  4026fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026ff:	adc    BYTE PTR [ebp-0x59],dl
  402702:	or     edx,DWORD PTR [edx]
  402704:	jp     0x40275a
  402706:	dec    ecx
  402707:	mov    ah,0xf3
  402709:	push   ecx
  40270a:	out    0x21,al
  40270c:	in     eax,0x66
  40270e:	ss sub al,0x11
  402711:	xor    eax,0xcc87e936
  402716:	fdivr  QWORD PTR [esi]
  402718:	popf   
  402719:	mov    al,ds:0x2d707c0a
  40271e:	int    0xa0
  402720:	add    BYTE PTR ds:0xf36310c0,bl
  402726:	push   ds
  402727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402728:	int3   
  402729:	or     dl,BYTE PTR [eax]
  40272b:	inc    esi
  40272c:	add    BYTE PTR [ebx],0x3
  40272f:	mov    bh,0xe9
  402731:	add    DWORD PTR [esi-0x50],0x7d
  402735:	repz mov eax,0xc4c6dd7c
  40273b:	daa    
  40273c:	push   ss
  40273d:	mov    edx,0xa8d3b934
  402742:	loope  0x402795
  402744:	and    al,BYTE PTR [ecx+0x1ce74d3f]
  40274a:	ret    0x531d
  40274d:	out    0xec,eax
  40274f:	and    edx,edi
  402751:	cmp    ah,cl
  402753:	rep lods eax,DWORD PTR ds:[esi]
  402755:	or     DWORD PTR [eax+0x531187ce],0xfffffffd
  40275c:	push   esi
  40275d:	ficomp WORD PTR ds:0x17ad8b4f
  402763:	and    ebx,ecx
  402765:	dec    esi
  402766:	xlat   BYTE PTR ds:[ebx]
  402767:	cmp    DWORD PTR [esi],0xffffffd7
  40276a:	push   0x80b3aa08
  40276f:	mov    bh,0x99
  402771:	and    BYTE PTR [ecx+edx*1+0x42],ah
  402775:	retf   0xb106
  402778:	sar    DWORD PTR [ecx-0x762b223b],cl
  40277e:	jle    0x402769
  402780:	stos   BYTE PTR es:[edi],al
  402781:	out    dx,al
  402782:	jl     0x402728
  402784:	sub    eax,0x2606229b
  402789:	ficom  WORD PTR [ecx]
  40278b:	aas    
  40278c:	cmp    ch,BYTE PTR [ebx-0x7c]
  40278f:	out    dx,eax
  402790:	pushw  0x50bb
  402794:	inc    ecx
  402795:	mov    cl,0x3e
  402797:	(bad)  [ecx-0x38369a32]
  40279d:	call   0xae71:0x4c141ce7
  4027a4:	sub    al,0x1a
  4027a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a7:	xor    eax,0xc76d412c
  4027ac:	ret    0xbb9e
  4027af:	iret   
  4027b0:	sbb    BYTE PTR [edi],ch
  4027b2:	sar    bh,0xf4
  4027b5:	out    dx,al
  4027b6:	std    
  4027b7:	in     al,dx
  4027b8:	mov    ebx,0x6c5bb0d0
  4027bd:	mov    al,ds:0xe0d77aef
  4027c2:	lods   eax,DWORD PTR ds:[esi]
  4027c3:	adc    BYTE PTR [esi],cl
  4027c5:	jp     0x402785
  4027c7:	xchg   esi,eax
  4027c8:	test   DWORD PTR [eax-0x7701bed8],ecx
  4027ce:	out    0xb0,al
  4027d0:	jle    0x40276d
  4027d2:	icebp  
  4027d3:	jle    0x402835
  4027d5:	fmul   QWORD PTR [edx+0x3b0726d2]
  4027db:	xchg   edi,eax
  4027dc:	jb     0x402858
  4027de:	int3   
  4027df:	je     0x4027b3
  4027e1:	arpl   WORD PTR [edx],cx
  4027e3:	cmc    
  4027e4:	addr16 jno 0x402860
  4027e7:	int3   
  4027e8:	adc    DWORD PTR [eax-0x14],0x6c8a286a
  4027ef:	repnz cdq 
  4027f1:	adc    ebx,DWORD PTR [edi]
  4027f3:	into   
  4027f4:	sbb    DWORD PTR [edi],ecx
  4027f6:	pushf  
  4027f7:	cli    
  4027f8:	xlat   BYTE PTR ds:[ebx]
  4027f9:	push   ds
  4027fa:	cmp    al,ch
  4027fc:	dec    edi
  4027fd:	enter  0x18c2,0x4e
  402801:	mov    al,BYTE PTR [esp+ebp*2+0x28]
  402805:	(bad)
  402808:	fist   WORD PTR [esi]
  40280a:	mov    WORD PTR [esp+ecx*1-0x74415f04],fs
  402811:	fstp   TBYTE PTR [ebp+0x74]
  402814:	cmp    al,0x5a
  402816:	jmp    0xfb01:0x470c5fd4
  40281d:	cld    
  40281e:	add    al,0xc8
  402820:	push   0x2e
  402822:	cmp    dh,BYTE PTR [esi+eiz*8-0x49f6d66d]
  402829:	sub    BYTE PTR [esi+0x5],dh
  40282c:	imul   edx,esi,0xe8c1b8ff
  402832:	mov    edx,esi
  402834:	xchg   esi,eax
  402835:	mov    cl,0x52
  402837:	fisub  WORD PTR [ebp+0x65694215]
  40283d:	sti    
  40283e:	lea    ebx,[ebp+0x5e]
  402841:	popf   
  402842:	in     eax,0x2e
  402844:	or     BYTE PTR [edx],bl
  402846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402847:	mov    ch,0x3a
  402849:	adc    esi,esp
  40284b:	repz adc al,0xa3
  40284e:	and    DWORD PTR [edi+0x503eb743],edx
  402854:	dec    eax
  402855:	pushf  
  402856:	ficom  DWORD PTR [edx]
  402858:	xor    al,0x0
  40285a:	push   ds
  40285b:	push   ebx
  40285c:	(bad)  
  40285d:	lods   al,BYTE PTR ds:[esi]
  40285e:	inc    edi
  40285f:	mov    eax,0x50c9d8a7
  402864:	xor    al,0xe8
  402866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402867:	out    dx,eax
  402868:	sub    ecx,DWORD PTR [esi]
  40286a:	out    dx,al
  40286b:	aam    0x48
  40286d:	dec    esp
  40286e:	push   ebp
  40286f:	jg     0x40281b
  402871:	in     eax,0x36
  402873:	scas   eax,DWORD PTR es:[edi]
  402874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402875:	add    esi,esp
  402877:	push   ebx
  402878:	mov    ah,0x9e
  40287a:	sbb    bl,bh
  40287c:	(bad)  
  40287e:	or     eax,0x9a24b923
  402883:	enter  0x4156,0xfb
  402887:	shl    ebp,0xef
  40288a:	mov    ebp,0x605d58e0
  40288f:	fstp   DWORD PTR [edx+0x6563a2b9]
  402895:	scas   al,BYTE PTR es:[edi]
  402896:	adc    bh,BYTE PTR [edx-0x4ba429c3]
  40289c:	dec    esp
  40289d:	addr16 out dx,eax
  40289f:	inc    ebp
  4028a0:	ds dec esi
  4028a2:	cmp    esp,ebx
  4028a4:	wrmsr  
  4028a6:	jmp    0xb49ad13f
  4028ab:	(bad)  
  4028ac:	pushw  cs
  4028ae:	sbb    eax,0xd30e137d
  4028b3:	int3   
  4028b4:	xchg   DWORD PTR [esi-0x22],eax
  4028b7:	adc    eax,0x36e1c631
  4028bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028bd:	js     0x40288d
  4028bf:	popa   
  4028c0:	loop   0x402904
  4028c2:	jmp    0xc721:0x995c8cfb
  4028c9:	adc    al,BYTE PTR [edi+0x7c]
  4028cc:	stc    
  4028cd:	mov    BYTE PTR [ecx-0x67],ah
  4028d0:	pop    eax
  4028d1:	pop    edi
  4028d2:	or     al,0xfe
  4028d4:	test   BYTE PTR [edx-0x5823696d],cl
  4028da:	xor    bl,BYTE PTR [ebp-0x17db1084]
  4028e0:	call   0xdfa1:0x61a4e76d
  4028e7:	retf   0xe26b
  4028ea:	xor    BYTE PTR [ebx],cl
  4028ec:	and    BYTE PTR [edi-0x445d6ad9],bh
  4028f2:	mov    edx,0x4f2c281d
  4028f7:	stc    
  4028f8:	aad    0xa4
  4028fa:	arpl   bp,cx
  4028fc:	pop    esi
  4028fd:	fist   WORD PTR [esi+0x33ffd2a2]
  402903:	xchg   esp,eax
  402904:	pop    ss
  402905:	inc    ebp
  402906:	mov    ebp,DWORD PTR [edx-0x18]
  402909:	test   DWORD PTR [edx+edx*8+0x1f22a7c0],esi
  402910:	sbb    al,0x4d
  402912:	imul   ecx,DWORD PTR [edx-0x34990c30],0xffffff86
  402919:	add    esi,DWORD PTR [edx]
  40291b:	test   DWORD PTR [edx-0x17],ecx
  40291e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40291f:	cmp    eax,0x76af3da0
  402924:	bound  eax,QWORD PTR [edi]
  402926:	mov    ds:0xa0e44bb7,al
  40292b:	(bad)  
  40292c:	hlt    
  40292d:	jecxz  0x402905
  40292f:	mov    ebx,0xc7918851
  402934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402935:	pop    esi
  402936:	sbb    al,0xcc
  402938:	jge    0x4028e3
  40293a:	xor    ebp,DWORD PTR [eax-0x1b]
  40293d:	das    
  40293e:	iret   
  40293f:	aad    0x37
  402941:	adc    DWORD PTR [esi-0x35],ecx
  402944:	sbb    DWORD PTR [esi+ebx*4+0x30],0x5b
  402949:	icebp  
  40294a:	mov    esi,0xa08182a5
  40294f:	mov    ds:0x13449544,eax
  402954:	push   ss
  402955:	mov    dh,0xe6
  402957:	sahf   
  402958:	inc    eax
  402959:	xchg   DWORD PTR [eax-0x4d6a16d5],esp
  40295f:	or     al,0x2e
  402961:	shr    BYTE PTR [ebp-0x68],1
  402964:	aaa    
  402965:	das    
  402966:	dec    ebp
  402967:	int3   
  402968:	lea    ebp,[edx]
  40296a:	jo     0x4028fa
  40296c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40296d:	in     eax,dx
  40296e:	sti    
  40296f:	jbe    0x4029ce
  402971:	icebp  
  402972:	int3   
  402973:	or     eax,0x6c22e9d9
  402978:	sub    eax,0x7a03b7d
  40297d:	push   ecx
  40297e:	fldl2e 
  402980:	jne    0x402969
  402982:	mov    ?,WORD PTR [edi+0x55]
  402985:	js     0x40290a
  402987:	push   es
  402988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402989:	jp     0x40299a
  40298b:	xchg   edx,eax
  40298c:	xchg   esi,eax
  40298d:	jecxz  0x40292b
  40298f:	mov    eax,ds:0x3af38a3e
  402994:	enter  0xc8ef,0xe8
  402998:	jnp    0x4029d4
  40299a:	sub    WORD PTR [edx+0x35],cx
  40299e:	xlat   BYTE PTR ds:[ebx]
  40299f:	jbe    0x402a1b
  4029a1:	mov    bh,0xa3
  4029a3:	pop    es
  4029a4:	xlat   BYTE PTR ds:[ebx]
  4029a5:	int3   
  4029a6:	fs (bad) 
  4029a8:	jg     0x4029fb
  4029aa:	cdq    
  4029ab:	aam    0x96
  4029ad:	and    al,0x88
  4029af:	icebp  
  4029b0:	jb     0x40293c
  4029b2:	int    0xb4
  4029b4:	cwde   
  4029b5:	add    edx,edi
  4029b7:	lds    edi,FWORD PTR [eax+0x4c]
  4029ba:	(bad)  
  4029bb:	jge    0x4029c1
  4029bd:	aad    0x3e
  4029bf:	fcomp  DWORD PTR [esi]
  4029c1:	jmp    0x23848034
  4029c6:	mov    esi,0xd7fc9369
  4029cb:	mov    BYTE PTR [esi+0x44],dl
  4029ce:	(bad)  
  4029cf:	dec    ebx
  4029d0:	vprotd ymm0,xmm3,0xcb
  4029d6:	adc    al,BYTE PTR [esi-0x45]
  4029d9:	stos   DWORD PTR es:[edi],eax
  4029da:	pop    ebx
  4029db:	hlt    
  4029dc:	adc    eax,0x3ee6e6f7
  4029e1:	push   ecx
  4029e2:	les    edx,FWORD PTR [eax+0x22ae4039]
  4029e8:	(bad)  
  4029e9:	pop    ebx
  4029ea:	push   0x45
  4029ec:	pavgb  mm7,QWORD PTR [eax]
  4029ef:	adc    esi,edi
  4029f1:	push   ebx
  4029f2:	ret    
  4029f3:	fwait
  4029f4:	or     ch,BYTE PTR [ecx+0x21]
  4029f7:	fisttp QWORD PTR [edi+ecx*2]
  4029fa:	es cmp edi,esi
  4029fd:	ret    
  4029fe:	xchg   edi,eax
  4029ff:	jb     0x4029a4
  402a01:	daa    
  402a02:	pop    eax
  402a03:	pop    es
  402a04:	push   ecx
  402a05:	dec    ebx
  402a06:	jbe    0x402a74
  402a08:	mov    cl,0xae
  402a0a:	add    DWORD PTR [ebx+0x3ed7e8f8],0xf61bb36b
  402a14:	pusha  
  402a15:	mov    edi,0x1b4f09a3
  402a1a:	rcr    DWORD PTR [edi-0x16f9daa6],1
  402a20:	out    0xa5,al
  402a22:	jb     0x402a79
  402a24:	into   
  402a25:	mov    edx,0x888b424b
  402a2a:	(bad)  
  402a2b:	xchg   dx,ax
  402a2d:	xchg   ecx,eax
  402a2e:	add    eax,0xce0753b6
  402a33:	hlt    
  402a34:	or     cl,BYTE PTR [esi]
  402a36:	je     0x402a69
  402a38:	fmul   st(0),st
  402a3a:	aad    0x9f
  402a3c:	js     0x4029cd
  402a3e:	popa   
  402a3f:	adc    eax,0x1466c9f1
  402a44:	test   al,0x76
  402a46:	jmp    DWORD PTR [eax]
  402a48:	mov    ah,BYTE PTR [ecx]
  402a4a:	jl     0x402a5c
  402a4c:	outs   dx,BYTE PTR ds:[esi]
  402a4d:	div    BYTE PTR [edi+0x1abc4e28]
  402a53:	mov    ch,0x86
  402a55:	ins    DWORD PTR es:[edi],dx
  402a56:	add    BYTE PTR [ecx],dl
  402a58:	bound  ecx,QWORD PTR [ebx+0x72]
  402a5b:	pop    edi
  402a5c:	xchg   ebp,eax
  402a5d:	imul   BYTE PTR [edx-0x21]
  402a60:	cmp    ebp,DWORD PTR ds:0x8cb82979
  402a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a67:	inc    edx
  402a68:	jp     0x402a19
  402a6a:	mov    esi,0x4e1c4f4
  402a6f:	push   esi
  402a70:	pop    esi
  402a71:	add    al,0xc9
  402a73:	sub    ch,BYTE PTR [edx]
  402a75:	int    0x95
  402a77:	test   BYTE PTR [eax-0x69291878],ch
  402a7d:	out    0x93,al
  402a7f:	push   eax
  402a80:	dec    esi
  402a81:	es in  eax,dx
  402a83:	push   ss
  402a84:	stos   BYTE PTR es:[edi],al
  402a85:	dec    esi
  402a86:	pop    edx
  402a87:	dec    ebp
  402a88:	mov    esp,eax
  402a8a:	ror    edx,cl
  402a8c:	sbb    DWORD PTR [eax+0x255ab5e2],eax
  402a92:	dec    eax
  402a93:	fst    QWORD PTR [eax+0x2aa0c9df]
  402a99:	pop    eax
  402a9b:	sub    al,0xbd
  402a9d:	pop    esi
  402a9e:	aam    0xc9
  402aa0:	pop    ebp
  402aa1:	aad    0xe0
  402aa3:	push   0xffffffdf
  402aa5:	and    BYTE PTR ds:0x1490b44b,al
  402aab:	pop    edx
  402aac:	sti    
  402aad:	inc    edi
  402aae:	jns    0x402ac6
  402ab0:	lea    edx,[eax-0x7f13b267]
  402ab6:	ficomp WORD PTR [esi+0x4d]
  402ab9:	add    al,0x4f
  402abb:	xchg   edx,eax
  402abc:	sub    cl,BYTE PTR [edx-0x72ab1947]
  402ac2:	and    eax,DWORD PTR [edx+ebx*2-0x30db70ad]
  402ac9:	mov    ah,0xcc
  402acb:	push   cs
  402acc:	dec    eax
  402acd:	and    DWORD PTR [eax-0x40],esp
  402ad0:	push   esi
  402ad1:	imul   eax
  402ad3:	pop    eax
  402ad4:	sbb    edx,DWORD PTR [eax-0x401fbf21]
  402ada:	mov    edi,0xb39aaf54
  402adf:	fwait
  402ae0:	push   edi
  402ae1:	and    eax,0x6ac49009
  402ae6:	fisubr DWORD PTR [edi-0x6d6a0290]
  402aec:	sbb    al,0x8c
  402aee:	sti    
  402aef:	pop    ds
  402af0:	push   ss
  402af1:	sti    
  402af2:	cmp    DWORD PTR [esi+eiz*1+0x6fd0c223],esi
  402af9:	adc    eax,0x441a490d
  402afe:	cli    
  402aff:	mov    esp,esp
  402b01:	inc    esp
  402b03:	lahf   
  402b04:	fdivr  QWORD PTR [ebx]
  402b06:	push   0x17
  402b08:	(bad)  
  402b09:	xchg   ecx,eax
  402b0a:	inc    edx
  402b0b:	cdq    
  402b0c:	mov    ds:0x4199d89d,al
  402b11:	cmp    ch,dh
  402b13:	int    0x7
  402b15:	das    
  402b16:	daa    
  402b17:	inc    esi
  402b18:	xchg   ecx,eax
  402b19:	mov    dh,0x5a
  402b1b:	adc    ebx,DWORD PTR [edx-0x15]
  402b1e:	inc    edi
  402b1f:	cmp    eax,0x51135ec1
  402b24:	stos   BYTE PTR es:[edi],al
  402b25:	out    0xb5,al
  402b27:	and    DWORD PTR [ecx-0x33],edi
  402b2a:	fild   WORD PTR [ebx-0x65]
  402b2d:	push   edi
  402b2e:	test   DWORD PTR [edx+eax*8],ecx
  402b31:	ja     0x402b49
  402b33:	mov    esi,0x77cf7b1c
  402b38:	pop    ecx
  402b39:	pop    eax
  402b3a:	(bad)  
  402b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b3c:	and    bl,BYTE PTR [ebx]
  402b3e:	ss cmp al,0xeb
  402b41:	retf   0x616d
  402b44:	loope  0x402b35
  402b46:	adc    eax,0xa596cf84
  402b4b:	mov    bh,0x66
  402b4d:	push   0xc3a32c9b
  402b52:	dec    ebp
  402b53:	mov    DWORD PTR [esi-0x3a],edx
  402b56:	(bad)  
  402b57:	sbb    eax,0xecda3b70
  402b5c:	or     BYTE PTR [edx+0x77cca1f8],bh
  402b62:	ret    0x16fd
  402b65:	mov    ds:0x42957d78,al
  402b6a:	adc    BYTE PTR [edx],ah
  402b6c:	mov    DWORD PTR [ecx],ebx
  402b6e:	scas   eax,DWORD PTR es:[edi]
  402b6f:	(bad)  
  402b70:	mov    bh,0x83
  402b72:	stos   BYTE PTR es:[edi],al
  402b73:	and    BYTE PTR [esp+eiz*8+0xc],dh
  402b77:	push   0x5
  402b79:	mov    edi,0xefc7f3f5
  402b7e:	cli    
  402b7f:	fwait
  402b80:	jo     0x402be8
  402b82:	xlat   BYTE PTR ds:[ebx]
  402b83:	(bad)  
  402b84:	popf   
  402b85:	js     0x402bcb
  402b87:	stc    
  402b88:	mov    edi,0xe4bd85b4
  402b8d:	jle    0x402bdd
  402b8f:	test   cl,cl
  402b91:	mov    cl,0xea
  402b93:	mov    esi,0xd6f1c0ca
  402b98:	push   ebp
  402b99:	or     eax,0x17033aeb
  402b9e:	test   eax,0x3a64544f
  402ba3:	cmp    DWORD PTR [esi],edi
  402ba5:	add    eax,0x6003f814
  402baa:	mov    ah,dh
  402bac:	ret    
  402bad:	jbe    0x402c13
  402baf:	and    ch,BYTE PTR [ecx]
  402bb1:	and    cl,BYTE PTR [eax+eiz*2+0x1e482069]
  402bb8:	cld    
  402bb9:	fs sti 
  402bbb:	in     al,0xac
  402bbd:	sbb    ah,ch
  402bbf:	fstp   QWORD PTR [eax-0x78c03cee]
  402bc5:	stos   BYTE PTR es:[edi],al
  402bc6:	sub    dl,ch
  402bc8:	lahf   
  402bc9:	leave  
  402bca:	xchg   esp,eax
  402bcb:	lea    edx,[esi+0x1cd555f5]
  402bd1:	lahf   
  402bd2:	in     eax,0xca
  402bd4:	imul   esp
  402bd6:	pusha  
  402bd7:	pop    es
  402bd8:	mov    ah,0xc6
  402bda:	loopne 0x402b6f
  402bdc:	aad    0x4
  402bde:	cmp    ecx,ebp
  402be0:	popf   
  402be1:	sub    eax,0xf44bd6b7
  402be6:	sbb    edx,DWORD PTR [eax-0x277ef042]
  402bec:	sbb    dl,bh
  402bee:	mov    ds:0x49edcc4c,eax
  402bf3:	mov    ebp,cs
  402bf5:	mov    ecx,0x981570a0
  402bfa:	fnsave [ebp+eax*1-0x6b]
  402bfe:	es stos BYTE PTR es:[edi],al
  402c00:	push   ds
  402c01:	jmp    0x69b4:0xe78e52f4
  402c08:	lea    eax,[ebx+eiz*2]
  402c0b:	xor    BYTE PTR [edi-0x6e],bh
  402c0e:	dec    ebp
  402c0f:	adc    dl,al
  402c11:	add    al,0x81
  402c13:	dec    eax
  402c14:	jns    0x402c74
  402c16:	jae    0x402c4d
  402c18:	popf   
  402c19:	retf   0xc85f
  402c1c:	add    eax,0x9f2b5cab
  402c21:	push   0xffffff99
  402c23:	test   DWORD PTR ds:[edx],edx
  402c26:	xlat   BYTE PTR gs:[ebx]
  402c28:	in     eax,dx
  402c29:	pusha  
  402c2a:	lahf   
  402c2b:	jle    0x402c0b
  402c2d:	or     BYTE PTR [ebp+0x108482d8],al
  402c33:	push   ebx
  402c34:	int3   
  402c35:	or     al,0x20
  402c37:	out    dx,eax
  402c38:	aas    
  402c39:	cmp    DWORD PTR [ecx-0x7e],ecx
  402c3c:	jb     0x402c43
  402c3e:	fwait
  402c3f:	loope  0x402c0f
  402c41:	jae    0x402c30
  402c43:	pop    es
  402c44:	fcomp  QWORD PTR [eax-0x17]
  402c47:	mov    ah,0xe0
  402c49:	xor    DWORD PTR [edx],edi
  402c4b:	xor    eax,0x3667138
  402c50:	sub    ebx,DWORD PTR [edi-0x5fb7e4c5]
  402c56:	aam    0xff
  402c58:	sub    eax,0x6a080cdb
  402c5d:	popa   
  402c5e:	clc    
  402c5f:	cmp    eax,0xbd618d0b
  402c64:	and    BYTE PTR [edi-0x7a39562a],cl
  402c6a:	test   BYTE PTR [ebx-0x53],0x55
  402c6e:	ja     0x402c03
  402c70:	fild   WORD PTR [edi]
  402c72:	or     eax,0x2842fcdc
  402c77:	mov    cl,0x28
  402c79:	cmp    al,bl
  402c7b:	cmp    BYTE PTR [ecx-0x73],0x98
  402c7f:	jmp    0x402c62
  402c81:	mov    eax,ds:0x80e7c37d
  402c86:	(bad)  
  402c87:	jo     0x402caf
  402c89:	jg     0x402c33
  402c8b:	mov    ebp,0x376f9c
  402c90:	ins    BYTE PTR es:[edi],dx
  402c91:	xchg   edx,eax
  402c92:	add    al,0xaa
  402c94:	xlat   BYTE PTR ds:[ebx]
  402c95:	ret    0xa392
  402c98:	or     al,0x8d
  402c9a:	loopne 0x402c52
  402c9c:	enter  0x4453,0xb8
  402ca0:	add    DWORD PTR [eax+0x7e4ddd8c],0x6b0e4c7e
  402caa:	dec    esp
  402cab:	or     ebp,DWORD PTR [ebp+0x27]
  402cae:	call   0x1ccc03b
  402cb3:	and    edi,eax
  402cb5:	mov    bl,0x8
  402cb7:	popa   
  402cb8:	cli    
  402cb9:	inc    esp
  402cba:	inc    ecx
  402cbb:	cmp    DWORD PTR [edx+0x1a],esi
  402cbe:	mov    ds:0xf0496887,al
  402cc3:	sbb    BYTE PTR [ebx-0x69],cl
  402cc6:	fcmovne st,st(0)
  402cc8:	popf   
  402cc9:	cwde   
  402cca:	cwde   
  402ccb:	cmp    ecx,ebx
  402ccd:	imul   ebx,esp,0x197d5daa
  402cd3:	or     edx,DWORD PTR [ebp+0x7e74a708]
  402cd9:	aaa    
  402cda:	dec    BYTE PTR [eax+0x630100f9]
  402ce0:	fidiv  DWORD PTR [edi+edx*8]
  402ce3:	and    al,0xa1
  402ce5:	stos   BYTE PTR es:[edi],al
  402ce6:	push   edi
  402ce7:	push   es
  402ce8:	outs   dx,BYTE PTR ds:[esi]
  402ce9:	pop    esp
  402cea:	pop    ecx
  402ceb:	lss    ebx,FWORD PTR [edi+0x2c]
  402cef:	mov    ebx,0x82af113
  402cf4:	fmul   DWORD PTR [edx+0x287e1367]
  402cfa:	jecxz  0x402d61
  402cfc:	adc    al,0x28
  402cfe:	push   0xffffffc2
  402d00:	fyl2xp1 
  402d02:	pop    ds
  402d03:	mov    ebp,0xf385f809
  402d08:	cmp    ch,BYTE PTR [eax]
  402d0a:	jmp    0x402d4c
  402d0c:	xchg   esp,eax
  402d0d:	js     0x402cae
  402d0f:	add    BYTE PTR [edi+0x1],bh
  402d12:	cli    
  402d13:	pop    ebx
  402d14:	jmp    0x402d2f
  402d16:	repz fld TBYTE PTR [ebx+0x177856]
  402d1d:	dec    esp
  402d1e:	jo     0x402d6e
  402d20:	mov    edi,0x5cd3f66b
  402d25:	stc    
  402d26:	push   edi
  402d27:	lds    edi,FWORD PTR ds:0xf07576e
  402d2e:	jmp    0x402cc0
  402d30:	dec    ebp
  402d31:	add    edi,0x2783fff9
  402d37:	lea    esp,[ecx-0x4c]
  402d3a:	dec    esi
  402d3b:	push   eax
  402d3c:	stc    
  402d3d:	aam    0x59
  402d3f:	stos   DWORD PTR es:[edi],eax
  402d40:	dec    BYTE PTR [edi-0x5c]
  402d43:	out    0xf9,eax
  402d45:	pop    eax
  402d46:	inc    ebp
  402d47:	pop    ebx
  402d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d4a:	add    DWORD PTR [edx+0xfae592c],ebx
  402d50:	mov    dh,0x7c
  402d52:	xchg   edx,eax
  402d53:	xchg   ah,bh
  402d55:	jl     0x402d75
  402d57:	sahf   
  402d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d59:	ret    0x2aea
  402d5c:	push   ebp
  402d5d:	loopne 0x402dd9
  402d5f:	std    
  402d60:	shr    BYTE PTR [ebx-0x3d6ec70e],cl
  402d66:	pop    ebp
  402d67:	inc    BYTE PTR [esi-0x3006d8e9]
  402d6d:	ds addr16 xchg edx,eax
  402d70:	aad    0x4f
  402d72:	(bad)  
  402d73:	js     0x402d32
  402d75:	bts    DWORD PTR [ebx+0x508467dc],esp
  402d7c:	jnp    0x402d6c
  402d7e:	ds mov dl,0x91
  402d81:	xchg   edi,eax
  402d82:	xchg   edi,eax
  402d83:	xchg   esi,eax
  402d84:	cld    
  402d85:	jge    0x402d85
  402d87:	test   al,0x6d
  402d89:	jbe    0x402d88
  402d8b:	or     edi,ebx
  402d8d:	inc    ecx
  402d8e:	repnz xor al,0xdd
  402d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d92:	mov    ah,0x78
  402d94:	(bad)  
  402d96:	call   0x543:0xe6173568
  402d9d:	xchg   ebp,eax
  402d9e:	adc    bl,bl
  402da0:	or     BYTE PTR [edx-0x3a3b036b],al
  402da6:	cmp    ebx,DWORD PTR [di+0x8]
  402daa:	popa   
  402dab:	pop    eax
  402dac:	mov    ss,edx
  402dae:	leave  
  402daf:	nop
  402db0:	mov    edi,DWORD PTR [edx]
  402db2:	(bad)  
  402db3:	out    0x2d,eax
  402db5:	fisubr WORD PTR [ecx]
  402db7:	add    eax,0x30c69613
  402dbc:	std    
  402dbd:	test   BYTE PTR [esi],bh
  402dbf:	outs   dx,DWORD PTR ds:[esi]
  402dc0:	aas    
  402dc1:	loope  0x402d64
  402dc3:	mov    esp,0x3981d761
  402dc8:	push   cs
  402dc9:	stos   BYTE PTR es:[edi],al
  402dca:	push   eax
  402dcb:	push   eax
  402dcc:	or     al,0x40
  402dce:	repz or eax,0xb67baa11
  402dd4:	into   
  402dd5:	nop
  402dd6:	fadd   QWORD PTR [edx-0x17]
  402dd9:	adc    BYTE PTR [eax+0x488b6446],0x4c
  402de0:	test   DWORD PTR [eax+0x7f538215],eax
  402de6:	cmp    DWORD PTR [edi*4-0x3259c656],ebx
  402ded:	dec    esp
  402dee:	nop
  402def:	pop    esi
  402df0:	pop    bx
  402df2:	pop    edx
  402df3:	mov    WORD PTR [ebp+0x4c],gs
  402df6:	outs   dx,BYTE PTR ds:[esi]
  402df7:	adc    ebx,DWORD PTR ds:0xe2a24a10
  402dfd:	push   ebp
  402dfe:	out    0x39,al
  402e00:	inc    edx
  402e01:	and    BYTE PTR [edx+0x41a5465a],ah
  402e07:	cwde   
  402e08:	daa    
  402e09:	stc    
  402e0a:	pop    eax
  402e0b:	cwde   
  402e0c:	or     ebp,ebp
  402e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e0f:	jb     0x402e48
  402e11:	es push edi
  402e13:	mov    ds:0xed9eb89b,eax
  402e18:	js     0x402e90
  402e1a:	inc    eax
  402e1b:	push   ebx
  402e1c:	push   ecx
  402e1d:	mov    ds:0xf742dfe7,al
  402e22:	adc    eax,0x115aa033
  402e27:	ins    DWORD PTR es:[edi],dx
  402e28:	ss ins DWORD PTR es:[edi],dx
  402e2a:	push   ecx
  402e2b:	das    
  402e2c:	arpl   WORD PTR [ecx-0x57af5338],si
  402e32:	fsub   QWORD PTR [esi+0x31]
  402e35:	popa   
  402e36:	push   0x91581f44
  402e3b:	sub    ch,BYTE PTR [edi-0x683a0531]
  402e41:	in     al,0x69
  402e43:	mov    edx,DWORD PTR [edi-0x51293f99]
  402e49:	xchg   DWORD PTR [edi],ecx
  402e4b:	or     eax,0xfc70c313
  402e50:	nop
  402e51:	in     eax,0x17
  402e53:	cwde   
  402e54:	retf   
  402e55:	jge    0x402df7
  402e57:	push   cs
  402e58:	inc    ecx
  402e59:	or     BYTE PTR [eax+esi*2+0x405a15f0],ah
  402e60:	cld    
  402e61:	jg     0x402e8e
  402e63:	push   es
  402e64:	repz jmp 0xa727:0x23fb7daa
  402e6c:	add    al,0x5
  402e6e:	fdivrp st(2),st
  402e70:	aad    0xdb
  402e72:	shr    DWORD PTR [edi+0x65],0x8
  402e76:	mov    al,0xaa
  402e78:	adc    esp,DWORD PTR [ecx+0x2723d09f]
  402e7e:	in     eax,0x7
  402e80:	ins    BYTE PTR es:[edi],dx
  402e81:	mov    eax,DWORD PTR [eax]
  402e83:	(bad)  
  402e84:	push   ds
  402e85:	fdivr  st(5),st
  402e87:	pop    edi
  402e88:	mov    eax,ds:0xf595776
  402e8d:	mov    al,ds:0x46b5fb12
  402e92:	pop    es
  402e93:	xchg   BYTE PTR [edx-0x45cd53d2],dl
  402e99:	ret    0x27e0
  402e9c:	retf   0x24ba
  402e9f:	add    ch,BYTE PTR [edi-0x4ecb0fc3]
  402ea5:	sub    DWORD PTR [eax+0x4a],ebx
  402ea8:	retf   
  402ea9:	push   edi
  402eaa:	cdq    
  402eab:	pusha  
  402eac:	cmp    al,0x8
  402eae:	pop    es
  402eaf:	aas    
  402eb0:	retf   
  402eb1:	scas   al,BYTE PTR es:[edi]
  402eb2:	mov    DWORD PTR [ebp+0x75],ebp
  402eb5:	(bad)
  402eb8:	pop    ebp
  402eb9:	xchg   edx,eax
  402eba:	push   ebp
  402ebb:	mov    WORD PTR [ebx],cs
  402ebd:	imul   ebx,DWORD PTR [ecx-0x523dbe72],0x474f57f5
  402ec7:	mov    al,0x21
  402ec9:	ds jmp 0x26b882ca
  402ecf:	ret    
  402ed0:	inc    esp
  402ed1:	push   ebx
  402ed2:	ins    BYTE PTR es:[edi],dx
  402ed3:	mov    ?,WORD PTR [edi]
  402ed5:	push   ebp
  402ed6:	mov    ecx,0x71ad3ff3
  402edb:	adc    eax,0x4cfc49d9
  402ee0:	aam    0xb1
  402ee2:	imul   esi,eax,0xffffffaa
  402ee5:	add    BYTE PTR [esi],ah
  402ee7:	retf   
  402ee8:	xor    ch,al
  402eea:	retf   0x4dfe
  402eed:	adc    BYTE PTR [ecx],ch
  402eef:	xor    eax,ebx
  402ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ef2:	sbb    ebp,eax
  402ef4:	push   esp
  402ef5:	push   es
  402ef6:	push   cs
  402ef7:	cwde   
  402ef8:	scas   al,BYTE PTR es:[edi]
  402ef9:	iret   
  402efa:	jb     0x402f01
  402efc:	not    esp
  402efe:	and    dh,BYTE PTR [edx-0x41]
  402f01:	push   ecx
  402f02:	dec    esp
  402f03:	jo     0x402ec7
  402f05:	loope  0x402f6c
  402f07:	popf   
  402f08:	sbb    eax,0x788db88f
  402f0d:	aad    0x5f
  402f0f:	inc    eax
  402f10:	mov    cl,0xa1
  402f12:	test   DWORD PTR ds:0x3793512f,edi
  402f18:	gs sbb eax,0xf70977d4
  402f1e:	jns    0x402f2e
  402f20:	int    0x26
  402f22:	jbe    0x402ea5
  402f24:	sbb    eax,0xd7c185b5
  402f29:	iret   
  402f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f2b:	sti    
  402f2c:	pop    ebx
  402f2d:	call   0x960b67f1
  402f32:	mov    dh,0xbf
  402f34:	lock loopne 0x402f36
  402f37:	outs   dx,BYTE PTR ds:[esi]
  402f38:	dec    esi
  402f39:	imul   ebx,edx,0x58
  402f3c:	pop    ebx
  402f3d:	and    cl,BYTE PTR [edi+0x53]
  402f40:	mov    bh,0x4b
  402f42:	js     0x402faa
  402f44:	push   eax
  402f45:	(bad)  
  402f46:	jmp    0x402f46
  402f48:	mov    BYTE PTR [edi-0x2546e4ba],cl
  402f4e:	or     eax,0x705b4ad1
  402f53:	addr16 aad 0x45
  402f56:	arpl   WORD PTR [esi+eax*4],sp
  402f59:	or     ah,dh
  402f5b:	dec    eax
  402f5c:	push   esi
  402f5d:	cmp    al,0xcb
  402f5f:	add    BYTE PTR [ebx],al
  402f61:	out    0x2a,eax
  402f63:	popf   
  402f64:	mov    ds:0x44740710,eax
  402f69:	dec    esi
  402f6a:	into   
  402f6b:	ja     0x402fd5
  402f6d:	push   esp
  402f6e:	mov    bl,0x4e
  402f70:	xchg   esp,eax
  402f71:	stc    
  402f72:	call   0x3014:0x1dcbd9d8
  402f79:	imul   edi,DWORD PTR [edx+0x32],0x6731d6fc
  402f80:	gs jae 0x402f36
  402f83:	sbb    al,BYTE PTR [ecx-0x5]
  402f86:	mov    bh,0x3c
  402f88:	sbb    eax,0x4d6bdc44
  402f8d:	int    0xe6
  402f8f:	ins    BYTE PTR es:[edi],dx
  402f90:	and    edx,0x4fdab16b
  402f96:	mov    al,ds:0x3b06d45c
  402f9b:	(bad)  
  402f9c:	imul   ecx,DWORD PTR [ecx],0xffffffa8
  402f9f:	cmp    edi,edx
  402fa1:	into   
  402fa2:	lods   eax,DWORD PTR ds:[esi]
  402fa3:	(bad)  
  402fa4:	cld    
  402fa5:	fimul  DWORD PTR [ebp+0x454bb2b9]
  402fab:	mov    bh,al
  402fad:	xchg   ebx,eax
  402fae:	cwde   
  402faf:	and    ch,BYTE PTR [edi+0x2c]
  402fb2:	adc    eax,0xa26e9b3e
  402fb7:	outs   dx,DWORD PTR ds:[esi]
  402fb8:	push   es
  402fb9:	arpl   WORD PTR [eax+0x58],cx
  402fbc:	cwde   
  402fbd:	add    eax,ebp
  402fbf:	mov    cl,0xa9
  402fc1:	dec    esp
  402fc2:	scas   eax,DWORD PTR es:[edi]
  402fc3:	jmp    0xc1c89441
  402fc8:	pushf  
  402fc9:	stc    
  402fca:	in     eax,dx
  402fcb:	and    dl,BYTE PTR [esp+ecx*2]
  402fce:	clc    
  402fcf:	xchg   edi,eax
  402fd0:	dec    eax
  402fd1:	cli    
  402fd2:	out    0xee,al
  402fd4:	xchg   ebx,eax
  402fd5:	inc    ecx
  402fd6:	ins    DWORD PTR es:[edi],dx
  402fd7:	jae    0x403057
  402fd9:	out    0x63,eax
  402fdb:	mov    dh,0xa3
  402fdd:	pop    ebp
  402fde:	mov    edi,0x6a42c77e
  402fe3:	or     edi,0x18
  402fe6:	mov    al,0xf0
  402fe8:	les    eax,FWORD PTR [ecx+0x9ec7142]
  402fee:	retf   0xd381
  402ff1:	mov    ds:0x9a1301ff,al
  402ff6:	aaa    
  402ff7:	push   es
  402ff8:	dec    edi
  402ff9:	scas   al,BYTE PTR es:[edi]
  402ffa:	scas   al,BYTE PTR es:[edi]
  402ffb:	repz xchg ebp,eax
  402ffd:	imul   eax,DWORD PTR [ebp+0x610ef74d],0xffffffb5
  403004:	pop    gs
  403006:	push   edi
  403007:	adc    cl,BYTE PTR [ebx]
  403009:	push   0xffffffa1
  40300b:	or     edx,DWORD PTR ds:0xfaf47f24
  403011:	adc    DWORD PTR [ebp+0x5da087ea],esi
  403017:	push   0x5a9cdf23
  40301c:	out    0x12,eax
  40301e:	dec    edx
  40301f:	in     eax,dx
  403020:	jge    0x403091
  403022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403023:	xor    esi,esp
  403025:	test   eax,0x7fffe70f
  40302a:	xchg   ebx,eax
  40302b:	jmp    0x7c384856
  403030:	mov    bl,bh
  403032:	aad    0x5b
  403034:	and    edx,esp
  403036:	sbb    eax,0xa14bddb4
  40303b:	push   ecx
  40303c:	adc    eax,0x379733bc
  403041:	scas   eax,DWORD PTR es:[edi]
  403042:	ja     0x403075
  403044:	adc    ah,BYTE PTR [ebx+edx*1-0x1d]
  403048:	xchg   BYTE PTR [eax],al
  40304a:	xchg   ecx,eax
  40304b:	xor    BYTE PTR [eax],ch
  40304d:	cli    
  40304e:	test   BYTE PTR [edi-0x259fbdd9],ch
  403054:	cmp    DWORD PTR [esi-0x1],edx
  403057:	add    al,0xb
  403059:	or     ebx,DWORD PTR [edi+0x6e416596]
  40305f:	outs   dx,DWORD PTR ds:[esi]
  403060:	fild   WORD PTR [ebx-0x19bee8c1]
  403066:	fmul   QWORD PTR [ecx]
  403068:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40306a:	fsubr  QWORD PTR [edx-0x35]
  40306d:	popf   
  40306e:	idiv   DWORD PTR [edx+eax*1]
  403071:	xchg   esp,eax
  403072:	popf   
  403073:	test   al,0x2e
  403075:	sbb    eax,DWORD PTR [ecx+ebp*8+0x4]
  403079:	push   ss
  40307a:	and    BYTE PTR [edi-0x922b3e7],0x8e
  403081:	mov    BYTE PTR [esi-0x3f6854c5],bh
  403087:	jecxz  0x403047
  403089:	pop    ds
  40308a:	dec    esi
  40308b:	dec    esp
  40308c:	pop    esp
  40308d:	call   0xc0c491e8
  403092:	sbb    al,0x6e
  403094:	xchg   ebp,eax
  403095:	loopne 0x40301b
  403097:	cdq    
  403098:	daa    
  403099:	jne    0x4030ea
  40309b:	push   ecx
  40309c:	jo     0x4030ed
  40309e:	adc    BYTE PTR [esi-0x74],ah
  4030a1:	mov    al,0x55
  4030a3:	popa   
  4030a4:	scas   eax,DWORD PTR es:[edi]
  4030a5:	adc    DWORD PTR [esi+0xb],eax
  4030a8:	ins    DWORD PTR es:[edi],dx
  4030a9:	into   
  4030aa:	sbb    ch,ch
  4030ac:	daa    
  4030ad:	jl     0x40311a
  4030af:	jl     0x403091
  4030b1:	out    0x3f,eax
  4030b3:	cs push edi
  4030b5:	sub    esp,DWORD PTR [eax-0x4a00dc19]
  4030bb:	or     bh,BYTE PTR [eax]
  4030bd:	cmp    eax,0xe41dcacc
  4030c2:	in     eax,dx
  4030c3:	js     0x40310a
  4030c5:	into   
  4030c6:	aad    0xce
  4030c8:	loope  0x4030cf
  4030ca:	xchg   ecx,eax
  4030cb:	stos   BYTE PTR es:[edi],al
  4030cc:	or     BYTE PTR [ebx-0x45],ch
  4030cf:	jne    0x403092
  4030d1:	jbe    0x403095
  4030d3:	pop    ss
  4030d4:	cmp    al,0x3c
  4030d6:	dec    ebx
  4030d7:	lds    esi,FWORD PTR [eax-0x30]
  4030da:	jp     0x4030bb
  4030dc:	gs into 
  4030de:	in     al,dx
  4030df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030e0:	pop    ds
  4030e1:	imul   esi,DWORD PTR [eax],0x88ca8c22
  4030e7:	stos   BYTE PTR es:[edi],al
  4030e8:	(bad)  
  4030ea:	stos   DWORD PTR es:[edi],eax
  4030eb:	add    BYTE PTR [ecx],al
  4030ed:	or     esp,esp
  4030ef:	in     al,dx
  4030f0:	sub    al,0x48
  4030f2:	popa   
  4030f3:	pop    ecx
  4030f4:	mov    ecx,0xca44d03a
  4030f9:	or     edx,DWORD PTR [edx+0x2c220fb5]
  4030ff:	pop    ss
  403100:	outs   dx,DWORD PTR ds:[esi]
  403101:	sbb    eax,0xd9805c01
  403106:	(bad)  
  403107:	cmc    
  403108:	sti    
  403109:	outs   dx,BYTE PTR ds:[esi]
  40310a:	arpl   WORD PTR [esi],bx
  40310c:	inc    ecx
  40310d:	iret   
  40310e:	xlat   BYTE PTR ds:[ebx]
  40310f:	popa   
  403110:	pop    esi
  403111:	outs   dx,BYTE PTR ds:[esi]
  403112:	dec    ebp
  403113:	out    dx,al
  403114:	mov    al,ds:0xc5aa37ec
  403119:	mov    ds:0x1bf8c02c,eax
  40311e:	or     DWORD PTR [edi+edx*1],0x39a67803
  403125:	imul   esi,esp,0x39238d46
  40312b:	lods   al,BYTE PTR ds:[esi]
  40312c:	inc    ebx
  40312d:	and    eax,0x9176dc28
  403132:	jb     0x40319b
  403134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403135:	mov    ch,0x52
  403137:	sub    eax,0x9cac092b
  40313c:	int    0xe0
  40313e:	aaa    
  40313f:	es (bad) 
  403143:	inc    esp
  403144:	int    0x15
  403146:	xchg   ebx,eax
  403147:	leave  
  403148:	aas    
  403149:	mov    ch,BYTE PTR ds:0xd3371881
  40314f:	clc    
  403150:	xchg   BYTE PTR [eax+0x7],bl
  403153:	dec    esp
  403154:	jle    0x403104
  403156:	cli    
  403157:	or     eax,0xd99f85aa
  40315c:	fs mov ah,0xb5
  40315f:	(bad)  
  403160:	loopne 0x403195
  403162:	cs push ebp
  403164:	push   ecx
  403165:	int    0xa2
  403167:	jmp    0x6257845
  40316c:	xchg   esi,eax
  40316d:	jmp    0x9686:0xa539649d
  403174:	mov    BYTE PTR [ebp-0x283e448d],ch
  40317a:	retf   0x6846
  40317d:	mov    dl,0x9d
  40317f:	jl     0x4031fa
  403181:	or     ebp,DWORD PTR [edi-0x1eb4df0b]
  403187:	adc    dl,BYTE PTR [edi-0x31]
  40318a:	adc    eax,0x574c67df
  40318f:	cli    
  403190:	bound  ebp,QWORD PTR [ebp-0x712a418a]
  403196:	pop    ecx
  403197:	stc    
  403198:	sahf   
  403199:	shr    BYTE PTR [edi],0x1f
  40319c:	cmp    bh,bh
  40319e:	lea    ebx,[ebx]
  4031a0:	stos   DWORD PTR es:[edi],eax
  4031a1:	adc    ebx,ebp
  4031a3:	cmp    DWORD PTR [edx],0x1905a2f5
  4031a9:	add    BYTE PTR [ebx+edx*1-0x636d7709],0x1c
  4031b1:	push   esi
  4031b2:	enter  0xccd7,0xe0
  4031b6:	sub    ch,bl
  4031b8:	pop    edi
  4031b9:	(bad)
  4031bc:	arpl   WORD PTR [edi],sp
  4031be:	fsubr  st(7),st
  4031c0:	bound  ebp,QWORD PTR [edx+0x62e9e025]
  4031c6:	in     eax,dx
  4031c7:	das    
  4031c8:	cmp    al,0x71
  4031ca:	inc    ebx
  4031cb:	aas    
  4031cc:	add    BYTE PTR [ecx+0x34],bl
  4031cf:	pushf  
  4031d0:	fs ret 0x796b
  4031d4:	adc    BYTE PTR [ecx+edi*2-0x6dfb5c5c],ch
  4031db:	push   edi
  4031dc:	xchg   esp,ecx
  4031de:	cmp    esi,DWORD PTR [esi+0x38]
  4031e1:	pop    ds
  4031e2:	outs   dx,DWORD PTR ds:[esi]
  4031e3:	mov    ds:0xc69ba03b,eax
  4031e8:	sub    BYTE PTR [edi+0x3840fbe2],dh
  4031ee:	adc    eax,0x5a8d1735
  4031f3:	pop    es
  4031f4:	outs   dx,BYTE PTR ds:[esi]
  4031f5:	ins    BYTE PTR es:[edi],dx
  4031f6:	pop    es
  4031f7:	lods   al,BYTE PTR ds:[esi]
  4031f8:	outs   dx,DWORD PTR ds:[esi]
  4031f9:	dec    ebp
  4031fa:	popa   
  4031fb:	out    0x39,al
  4031fd:	adc    al,0x34
  4031ff:	xchg   ebx,eax
  403200:	jae    0x403250
  403202:	dec    ebp
  403203:	sub    eax,0x115fa6eb
  403208:	and    BYTE PTR [edi],ch
  40320a:	jle    0x40327d
  40320c:	rcr    eax,0x54
  40320f:	pop    esi
  403210:	mov    esp,0xbbeef8be
  403215:	push   esp
  403216:	dec    esp
  403217:	repnz cdq 
  403219:	mov    WORD PTR [ebp+0x7ac90d0],gs
  40321f:	fwait
  403220:	cmp    bl,0x36
  403223:	push   edi
  403224:	(bad)  
  403225:	jmp    0x937f3a56
  40322a:	and    edi,DWORD PTR [ecx-0x21d4f96c]
  403230:	popf   
  403231:	xor    dl,ch
  403233:	jns    0x40326e
  403235:	or     ah,BYTE PTR [eax-0x7f746335]
  40323b:	(bad)  
  40323c:	jae    0x403246
  40323e:	outs   dx,BYTE PTR ds:[esi]
  40323f:	mov    edx,0xb3a0ac2f
  403244:	test   al,0x59
  403246:	addr16 pop es
  403248:	fisttp QWORD PTR [edx]
  40324a:	sub    DWORD PTR [ebp+ebp*4+0x1471a088],0x1621454b
  403255:	ds xchg ebx,eax
  403257:	(bad)  
  403258:	xchg   edi,eax
  403259:	mov    WORD PTR [edi+ebx*1-0x2cb4a296],gs
  403260:	mov    esp,0x6b59b66f
  403265:	sbb    BYTE PTR [ebx-0x6cb58574],0xd4
  40326c:	int    0xbb
  40326e:	imul   edx,DWORD PTR [edi],0xffffff82
  403271:	inc    eax
  403272:	out    0x21,al
  403274:	sar    DWORD PTR [esi-0x54],0x79
  403278:	or     esi,eax
  40327a:	adc    eax,0x79ca275f
  40327f:	sar    ebx,cl
  403281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403282:	and    esp,DWORD PTR [ecx-0x2]
  403285:	cmp    dl,cl
  403287:	sbb    eax,0x269fe3e9
  40328c:	pushf  
  40328d:	aad    0xc2
  40328f:	xchg   ah,cl
  403291:	jp     0x4032f6
  403293:	jecxz  0x40330b
  403295:	push   cs
  403296:	push   0x49250e51
  40329b:	jmp    0x4032dc
  40329d:	fcomp  st(2)
  40329f:	enter  0x44b1,0xe8
  4032a3:	or     BYTE PTR [edi],0xb4
  4032a6:	fst    DWORD PTR [ebp+0x75]
  4032a9:	push   ss
  4032aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ab:	hlt    
  4032ac:	dec    edx
  4032ad:	push   ds
  4032ae:	popf   
  4032af:	cs dec edx
  4032b1:	loopne 0x4032ba
  4032b3:	sub    ah,al
  4032b5:	and    al,0xff
  4032b7:	jae    0x4032b7
  4032b9:	fisttp WORD PTR [ecx+0x1b2a7cb]
  4032bf:	pop    eax
  4032c0:	sbb    BYTE PTR [edx+0x66],dl
  4032c3:	(bad)  
  4032c4:	adc    eax,0xa16bb608
  4032c9:	inc    edx
  4032ca:	xchg   ecx,eax
  4032cb:	add    eax,esp
  4032cd:	adc    ebp,esp
  4032cf:	fild   QWORD PTR [edi-0x1044c3a2]
  4032d5:	(bad)  
  4032d6:	push   edx
  4032d7:	jmp    FWORD PTR [ecx+0x74]
  4032da:	repnz jmp FWORD PTR [esi+eiz*2-0x2def0bdf]
  4032e2:	push   ecx
  4032e3:	jl     0x4032c6
  4032e5:	(bad)  
  4032e6:	mov    edi,0x2ff39fea
  4032eb:	mov    ebp,0x1570e23f
  4032f0:	pop    ecx
  4032f1:	adc    al,0xdf
  4032f3:	les    ebx,FWORD PTR [eax-0x1b]
  4032f6:	sub    eax,0x2f41b470
  4032fb:	jge    0x403349
  4032fd:	or     eax,0x97ca8f2c
  403302:	inc    esi
  403303:	xor    al,0x78
  403305:	outs   dx,DWORD PTR ds:[esi]
  403306:	jb     0x403360
  403308:	out    0x3d,al
  40330a:	add    BYTE PTR [ebx+0x336fec16],dh
  403310:	sub    bl,BYTE PTR [esi+ebx*4+0x23]
  403314:	test   DWORD PTR [ecx+0x35],eax
  403317:	aaa    
  403318:	cmp    DWORD PTR [edx*4+0x5c04d2d4],0xf7c957d9
  403323:	xor    esi,ebx
  403325:	adc    esp,DWORD PTR [esi-0xf]
  403328:	int    0x3
  40332a:	pop    ebx
  40332b:	push   esp
  40332c:	mov    edx,0x2a90abb3
  403331:	xchg   edx,eax
  403332:	pop    esp
  403333:	push   ds
  403334:	xchg   edi,eax
  403335:	inc    esp
  403336:	adc    BYTE PTR [edx],dh
  403338:	(bad)  
  403339:	iret   
  40333a:	inc    eax
  40333b:	mov    es,ebp
  40333d:	adc    ecx,DWORD PTR [eax-0x1f]
  403340:	rol    DWORD PTR [edx],0xec
  403343:	arpl   si,bx
  403345:	mov    edi,0x8da42d86
  40334a:	xor    eax,0x36504b66
  40334f:	ss sbb eax,0x4a195fa8
  403355:	pop    ss
  403356:	hlt    
  403357:	clc    
  403358:	push   esi
  403359:	xlat   BYTE PTR ds:[ebx]
  40335a:	sub    ebp,DWORD PTR [ebp+0x1f1389f0]
  403360:	retf   0xf379
  403363:	adc    dl,ah
  403365:	dec    eax
  403366:	daa    
  403367:	loope  0x403329
  403369:	fs xchg cl,dh
  40336c:	cmp    BYTE PTR [ecx],0xea
  40336f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403370:	(bad)  
  403371:	jg     0x4033d4
  403373:	out    dx,al
  403374:	out    dx,al
  403375:	jp     0x403391
  403377:	dec    edi
  403378:	jp     0x40331a
  40337a:	adc    eax,0x26670bc0
  40337f:	adc    esi,ebp
  403381:	rcr    BYTE PTR [eax],0x85
  403384:	lock (bad) 
  403386:	neg    DWORD PTR [ecx+0x27dab6f2]
  40338c:	push   0xffffffa8
  40338e:	sti    
  40338f:	rol    DWORD PTR [ecx+edx*2-0x3c],1
  403393:	cdq    
  403394:	pop    esi
  403395:	adc    DWORD PTR [ecx+0x44],edx
  403398:	test   DWORD PTR [edx+0x3de626e4],edi
  40339e:	sbb    BYTE PTR [ecx-0x2c7376a0],dh
  4033a4:	jb     0x403355
  4033a6:	pop    ss
  4033a7:	add    eax,0x6926a897
  4033ac:	int3   
  4033ad:	lahf   
  4033ae:	test   BYTE PTR [ecx+0x229f41d2],dh
  4033b4:	push   ds
  4033b5:	and    eax,0x3660fc92
  4033ba:	js     0x403428
  4033bc:	and    al,0x53
  4033be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033bf:	pop    ss
  4033c0:	or     BYTE PTR [edi],cl
  4033c2:	dec    esi
  4033c3:	sub    BYTE PTR [eax+0x54fb4e99],dh
  4033c9:	(bad)  
  4033ca:	cmc    
  4033cb:	pop    ss
  4033cc:	pop    edi
  4033cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ce:	mov    esi,cs
  4033d0:	shr    esp,cl
  4033d2:	ror    DWORD PTR [ebp+0x263fc113],0x90
  4033d9:	dec    ebx
  4033da:	and    al,0xef
  4033dc:	das    
  4033dd:	cwde   
  4033de:	adc    eax,ecx
  4033e0:	sti    
  4033e1:	aas    
  4033e2:	stos   DWORD PTR es:[edi],eax
  4033e3:	nop
  4033e4:	add    al,0x74
  4033e6:	mov    gs,WORD PTR [ecx+0x12d259aa]
  4033ec:	sbb    al,0x76
  4033ee:	lods   eax,DWORD PTR ds:[esi]
  4033ef:	(bad)  
  4033f0:	ret    0xb17f
  4033f3:	xor    BYTE PTR [edi+0x33c61a2b],ah
  4033f9:	ins    BYTE PTR es:[edi],dx
  4033fa:	sub    esp,DWORD PTR [esi-0x422a40ce]
  403400:	mov    dh,0xed
  403402:	jge    0x4033f5
  403404:	test   eax,0xfc4c8af2
  403409:	cli    
  40340a:	adc    DWORD PTR [eax],edx
  40340c:	fidivr DWORD PTR [eax-0x3ba574f6]
  403412:	add    ch,BYTE PTR [esi]
  403414:	cmp    eax,0x71c24d70
  403419:	in     al,dx
  40341a:	pop    edi
  40341b:	xor    eax,DWORD PTR [ebp+0x6dbe9b6b]
  403421:	dec    edx
  403422:	pop    eax
  403423:	retf   
  403424:	adc    BYTE PTR [esi+0x52714d6],bl
  40342a:	pop    ebp
  40342b:	pushf  
  40342c:	test   al,0xbe
  40342e:	das    
  40342f:	les    ecx,FWORD PTR [eax]
  403431:	push   cs
  403432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403433:	mov    eax,0x1939b6d
  403438:	cmc    
  403439:	clc    
  40343a:	sub    dl,BYTE PTR [edx]
  40343c:	ret    
  40343d:	pop    ss
  40343e:	adc    BYTE PTR [ecx-0x72],0x3d
  403442:	sbb    ecx,DWORD PTR [esi+0x6d]
  403445:	mov    bl,0x85
  403447:	adc    DWORD PTR [esi],edx
  403449:	mov    al,ds:0xae2e0bd1
  40344e:	inc    edi
  40344f:	adc    bl,ch
  403451:	adc    eax,0xfd2e64b6
  403456:	sbb    dl,ah
  403458:	sub    DWORD PTR [ebp-0x21],esp
  40345b:	mov    eax,ds:0x7d14403c
  403460:	ror    BYTE PTR [esi+eiz*2-0x7],cl
  403464:	test   al,0x30
  403466:	xchg   ebx,eax
  403467:	sbb    eax,0x2a21f6ee
  40346c:	jae    0x4033f1
  40346e:	mov    eax,0x98258850
  403473:	cmp    eax,0x7964dde1
  403478:	test   al,0x50
  40347a:	arpl   WORD PTR [ebp-0x7d788beb],bx
  403480:	jp     0x403487
  403482:	push   edx
  403483:	jno    0x403491
  403485:	nop
  403486:	mov    eax,ds:0xd6f00792
  40348b:	add    BYTE PTR ds:[esi],0xbb
  40348f:	sub    esi,ecx
  403491:	test   eax,0xe918a6fc
  403496:	mov    ecx,0x42d733df
  40349b:	pusha  
  40349c:	cmp    DWORD PTR [edx+0x18ccd6ee],ebx
  4034a2:	adc    eax,0x14c9e04c
  4034a7:	and    al,0x95
  4034a9:	js     0x4034bf
  4034ab:	(bad)  
  4034ac:	retf   0x4960
  4034af:	add    al,BYTE PTR [esi]
  4034b1:	fiadd  WORD PTR [edi+0x3ffd018b]
  4034b7:	cmp    ebx,0x11
  4034ba:	pop    edx
  4034bb:	int    0x6
  4034bd:	int3   
  4034be:	dec    ebx
  4034bf:	mov    ecx,ss
  4034c1:	stos   BYTE PTR es:[edi],al
  4034c2:	repnz pop ecx
  4034c4:	push   esp
  4034c5:	xchg   BYTE PTR ds:0xd791991b,bl
  4034cb:	mov    ds:0x91479e4b,al
  4034d0:	dec    ecx
  4034d1:	cmp    dl,BYTE PTR [ebx]
  4034d3:	lock and ah,BYTE PTR [eax-0xffd39db]
  4034da:	push   ebp
  4034db:	fistp  DWORD PTR [eax]
  4034dd:	aad    0xeb
  4034df:	sbb    bl,bl
  4034e1:	inc    ebp
  4034e2:	outs   dx,BYTE PTR ds:[esi]
  4034e3:	(bad)  {k2}
  4034e8:	fwait
  4034e9:	push   ecx
  4034ea:	dec    esp
  4034eb:	rol    esp,cl
  4034ed:	cmp    bh,BYTE PTR [edx+0x58]
  4034f0:	push   es
  4034f1:	xchg   ebp,eax
  4034f2:	or     eax,0xb802ff13
  4034f7:	daa    
  4034f8:	aaa    
  4034f9:	sti    
  4034fa:	mov    al,ds:0x49ec694f
  4034ff:	rcr    esp,cl
  403501:	inc    esp
  403502:	add    esp,0xffffffe0
  403505:	cmp    BYTE PTR ds:0x94da2bf8,al
  40350b:	mov    edx,0x9c464cc0
  403510:	popa   
  403511:	mov    bh,0x56
  403513:	and    eax,0x81cde9e4
  403518:	or     BYTE PTR [eax],0xb8
  40351b:	fwait
  40351c:	and    eax,0x39f60e3c
  403521:	push   edx
  403522:	ins    DWORD PTR es:[edi],dx
  403523:	test   al,0x59
  403525:	mov    cl,0xd9
  403527:	int    0xe3
  403529:	mov    bl,0xd8
  40352b:	sub    bh,0x56
  40352e:	shl    DWORD PTR [esi-0xfbd288e],cl
  403534:	push   edx
  403535:	ror    DWORD PTR [ebx-0x1],1
  403538:	mov    BYTE PTR [ebx],dh
  40353a:	mov    esi,0xa5ab366e
  40353f:	bound  ebx,QWORD PTR [ebp-0x55]
  403542:	aaa    
  403543:	(bad)  
  403544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403545:	dec    edi
  403546:	sbb    dl,BYTE PTR [edx]
  403548:	adc    eax,0x8953122e
  40354d:	pop    ss
  40354e:	sar    DWORD PTR [esi+0x3],1
  403551:	mov    dh,0x75
  403553:	ins    DWORD PTR es:[edi],dx
  403554:	imul   ebp,DWORD PTR [ecx+0x7f9dfcc7],0xc01f820
  40355e:	(bad)  
  40355f:	retf   0x3813
  403562:	cs dec esp
  403564:	fldenv [edi+edx*2-0x146da052]
  40356b:	fdecstp 
  40356d:	pop    esp
  40356e:	cmp    DWORD PTR fs:[eax-0x1dc65fb6],ecx
  403575:	repz aad 0x6e
  403578:	mov    ds:0x32f6656f,eax
  40357d:	and    ch,BYTE PTR [ebx]
  40357f:	ret    
  403580:	outs   dx,BYTE PTR ds:[esi]
  403581:	push   0xb0fa2247
  403586:	iret   
  403587:	dec    edi
  403588:	and    BYTE PTR [edx],dh
  40358a:	popa   
  40358b:	push   ds
  40358c:	lahf   
  40358d:	mov    cl,0xbb
  40358f:	in     al,0xd3
  403591:	and    BYTE PTR [esi],dh
  403593:	ins    BYTE PTR es:[edi],dx
  403594:	(bad)  
  403595:	inc    esp
  403596:	jnp    0x40351f
  403598:	xor    BYTE PTR [ecx],0x4c
  40359b:	adc    BYTE PTR [ebx],cl
  40359d:	mov    eax,ds:0xbd93b2d
  4035a2:	mov    bh,0x55
  4035a4:	pusha  
  4035a5:	std    
  4035a6:	and    ebp,esi
  4035a8:	or     eax,0x2f72b1ae
  4035ad:	loopne 0x403625
  4035af:	inc    esi
  4035b0:	push   ss
  4035b1:	push   ecx
  4035b2:	push   ds
  4035b3:	sbb    al,0x1c
  4035b5:	push   ebx
  4035b6:	inc    esp
  4035b7:	or     DWORD PTR [esp+edx*1],esp
  4035ba:	iret   
  4035bb:	(bad)  
  4035bc:	mul    BYTE PTR [eax-0x740eda40]
  4035c2:	jecxz  0x403551
  4035c4:	jmp    0x31ef:0xcb97d738
  4035cb:	std    
  4035cc:	mov    cl,0xa1
  4035ce:	pushf  
  4035cf:	adc    bl,BYTE PTR [ecx]
  4035d1:	jo     0x40364d
  4035d3:	pop    esp
  4035d4:	jae    0x4035c8
  4035d6:	push   cs
  4035d7:	mov    eax,ds:0x9d3bbab
  4035dc:	int    0x95
  4035de:	lods   al,BYTE PTR ds:[esi]
  4035df:	test   al,0x1c
  4035e1:	and    eax,0x1c36fb99
  4035e6:	adc    DWORD PTR [edx],0x38581e6e
  4035ec:	add    al,0xf1
  4035ee:	icebp  
  4035ef:	aas    
  4035f0:	imul   ebp,esi,0xffffffa3
  4035f3:	dec    esi
  4035f4:	imul   edx,DWORD PTR [eax+0x4b923f2b],0x5
  4035fb:	aad    0xd0
  4035fd:	fcomp  DWORD PTR [eax+0x758f23d7]
  403603:	fmul   DWORD PTR [ebp-0x158186ba]
  403609:	call   0x47e0:0xcb258dc7
  403610:	inc    esp
  403611:	jo     0x403674
  403613:	nop
  403614:	sbb    eax,0x1130fae8
  403619:	add    esi,edi
  40361b:	mov    bl,BYTE PTR [ebx+eiz*4]
  40361e:	outs   dx,BYTE PTR ds:[esi]
  40361f:	out    dx,al
  403620:	xor    esi,DWORD PTR [ebx-0x38b36d06]
  403626:	xor    al,0xc8
  403628:	jnp    0x403602
  40362a:	fadd   st,st(1)
  40362c:	into   
  40362d:	shr    BYTE PTR [esi+0x59a46845],cl
  403633:	daa    
  403634:	gs mov edx,0x25d8140e
  40363a:	inc    esi
  40363b:	gs jbe 0x40360a
  40363e:	xchg   ecx,eax
  40363f:	outs   dx,BYTE PTR ds:[esi]
  403640:	jbe    0x4036a7
  403642:	add    eax,0xeffd1a0c
  403647:	inc    ebx
  403648:	mov    al,0x67
  40364a:	mov    ds:0xbcd05d66,eax
  40364f:	fldenv [eax+0x12]
  403652:	mov    edi,cr6
  403655:	mov    es,WORD PTR [esi+0x29]
  403658:	retf   0xd9a8
  40365b:	inc    ebp
  40365c:	add    eax,0x91eab029
  403661:	icebp  
  403662:	outs   dx,DWORD PTR ds:[esi]
  403663:	push   edi
  403664:	or     al,0x8c
  403666:	jne    0x40363e
  403668:	dec    esp
  403669:	adc    ah,0x1a
  40366c:	xor    dl,BYTE PTR [ecx+ebp*1-0x26]
  403670:	dec    esi
  403671:	jmp    0x40361b
  403673:	pop    ss
  403674:	mov    dl,0x7
  403676:	inc    esp
  403677:	xor    DWORD PTR [eax],eax
  403679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40367a:	cmp    al,BYTE PTR [ebx-0x62]
  40367d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40367e:	leave  
  40367f:	pop    ebp
  403681:	lods   eax,DWORD PTR ds:[esi]
  403682:	out    0x61,al
  403684:	sub    BYTE PTR [edx],bh
  403686:	mov    edi,0x59316109
  40368b:	pop    ebp
  40368c:	mov    bl,0x10
  40368e:	pushf  
  40368f:	aaa    
  403690:	mov    ch,0x3a
  403692:	xchg   edi,ecx
  403694:	inc    esp
  403695:	daa    
  403696:	call   0x456cc2de
  40369b:	test   DWORD PTR [edx-0x37b336d6],0x9651b792
  4036a5:	and    BYTE PTR [ebp+0xba63f01],0xcb
  4036ac:	mov    ch,0x12
  4036ae:	int    0xd6
  4036b0:	jle    0x40366b
  4036b2:	cdq    
  4036b3:	(bad)  
  4036b4:	lock xor eax,0x6dad8b59
  4036ba:	es jmp 0x40365b
  4036bd:	cmp    dh,BYTE PTR [eax-0x7b649ac2]
  4036c3:	or     eax,0xbf0762d5
  4036c8:	retf   0xee43
  4036cb:	leave  
  4036cc:	lock cmp ch,BYTE PTR [ecx-0x515e0f77]
  4036d3:	inc    edx
  4036d4:	push   esi
  4036d5:	mov    ds:0xb113ec0d,eax
  4036da:	mov    WORD PTR [esp+eax*4+0x5a39fac1],?
  4036e1:	(bad)
  4036e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e6:	sbb    al,0xc0
  4036e8:	pop    eax
  4036e9:	mov    edx,0x91d04977
  4036ee:	cs sbb al,0xac
  4036f1:	and    eax,0xfd598988
  4036f6:	(bad)  [ecx+0x1216177e]
  4036fc:	push   ebx
  4036fd:	or     BYTE PTR [edx],bh
  4036ff:	push   es
  403700:	xor    al,cl
  403702:	dec    edi
  403703:	pop    ss
  403704:	inc    esp
  403705:	sbb    ebp,ebp
  403707:	xor    al,0xae
  403709:	xchg   esp,eax
  40370a:	mov    edx,0x773270b3
  40370f:	jle    0x40372e
  403711:	(bad)  
  403712:	shl    DWORD PTR [ebp-0x2217600],1
  403718:	test   eax,0x23f199d3
  40371d:	mov    dh,0xbe
  40371f:	mov    ds:0x31f771b4,al
  403724:	mov    ebx,0xd40c0da5
  403729:	lds    ebp,FWORD PTR [ecx+0x52]
  40372c:	xor    BYTE PTR [esi],ah
  40372e:	pop    edx
  40372f:	sbb    eax,DWORD PTR [edx-0x65064f8a]
  403735:	and    ebx,edi
  403737:	inc    edx
  403738:	leave  
  403739:	and    DWORD PTR [edx],ebx
  40373b:	popf   
  40373c:	scas   eax,DWORD PTR es:[edi]
  40373d:	(bad)  
  40373e:	or     eax,0x156378fe
  403743:	xor    eax,0xd7e48b4
  403748:	ret    
  403749:	loopne 0x4036ed
  40374b:	mov    ch,0xa6
  40374d:	mov    al,0xf4
  40374f:	mov    BYTE PTR [ecx-0x3f],cl
  403752:	push   ds
  403753:	add    DWORD PTR [esi],ebx
  403755:	fwait
  403756:	adc    al,0xdf
  403758:	dec    esp
  403759:	mov    ?,WORD PTR [esi-0x36]
  40375c:	push   eax
  40375d:	aas    
  40375e:	addr16 cwde 
  403760:	hlt    
  403761:	rcr    BYTE PTR [ecx*8-0x33e43a30],0x24
  403769:	rol    DWORD PTR [edi-0x73],1
  40376c:	mov    edx,0x16f12333
  403771:	outs   dx,DWORD PTR ds:[esi]
  403772:	xchg   BYTE PTR [edi+0x75],bl
  403775:	xchg   BYTE PTR [ebx+ecx*2+0x7f],ch
  403779:	mov    al,ds:0x95e5001f
  40377e:	mov    dh,0xbb
  403780:	mov    dh,cl
  403782:	ins    DWORD PTR es:[edi],dx
  403783:	cmp    esi,DWORD PTR [edx-0x41]
  403786:	jno    0x4037f9
  403788:	inc    esi
  403789:	push   ds
  40378a:	popf   
  40378b:	xlat   BYTE PTR ds:[ebx]
  40378c:	adc    ebp,ebp
  40378e:	add    BYTE PTR [ecx],0x4a
  403791:	mov    fs,ebx
  403793:	ret    0x9e90
  403796:	pop    ss
  403797:	pop    ebx
  403798:	push   edx
  403799:	cmp    edi,ebx
  40379b:	into   
  40379c:	adc    eax,DWORD PTR [ebx-0x22991caa]
  4037a2:	mov    ds:0x7cc7a980,eax
  4037a7:	mov    al,0x44
  4037a9:	mov    ds,ebx
  4037ab:	dec    BYTE PTR [eax-0x41c90027]
  4037b1:	iret   
  4037b2:	outs   dx,BYTE PTR ds:[esi]
  4037b3:	fsub   QWORD PTR ds:0xeb9d4a2
  4037b9:	imul   ebx,esi,0xc
  4037bc:	adc    al,0xc9
  4037be:	(bad)  
  4037bf:	shl    DWORD PTR [edx+0x9fc756a],cl
  4037c5:	xchg   edx,eax
  4037c6:	retf   
  4037c7:	push   ecx
  4037c8:	je     0x4037e1
  4037ca:	clc    
  4037cb:	jecxz  0x403776
  4037cd:	stos   BYTE PTR es:[edi],al
  4037ce:	inc    edx
  4037cf:	inc    edi
  4037d0:	dec    eax
  4037d1:	adc    al,0x86
  4037d3:	mov    al,ds:0xae15f19
  4037d8:	sbb    BYTE PTR ds:0xdf35fcb8,al
  4037de:	mov    bh,0x48
  4037e0:	xor    BYTE PTR [edx-0x410a388e],dl
  4037e6:	jl     0x403864
  4037e8:	xchg   esi,eax
  4037e9:	adc    eax,0x1852711f
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fdiv   QWORD PTR fs:[ecx]
  40389a:	popf   
  40389b:	mov    esi,DWORD PTR [ebx]
  40389d:	fstp   QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  esp,QWORD PTR [eax-0x66]
  4038a7:	in     al,0xa6
  4038a9:	pushf  
  4038aa:	arpl   WORD PTR [edi],dx
  4038ac:	add    esi,DWORD PTR [ebp-0x13a0de22]
  4038b2:	popa   
  4038b3:	xchg   edx,eax
  4038b4:	mov    eax,0x93bb921b
  4038b9:	xor    esp,DWORD PTR [ebx+esi*4+0x7a]
  4038bd:	aad    0xf9
  4038bf:	xchg   ebp,eax
  4038c0:	inc    edx
  4038c1:	outs   dx,DWORD PTR ds:[esi]
  4038c2:	push   cs
  4038c3:	inc    esi
  4038c4:	outs   dx,BYTE PTR ds:[esi]
  4038c5:	inc    edi
  4038c6:	sub    eax,0x2663d80a
  4038cb:	std    
  4038cc:	pop    ebx
  4038cd:	ds push ebp
  4038cf:	sub    DWORD PTR [esi+0x14223e1f],edx
  4038d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d6:	sti    
  4038d7:	daa    
  4038d8:	frstor ds:0x63a9d1c
  4038de:	je     0x4038db
  4038e0:	pop    ecx
  4038e1:	dec    esi
  4038e2:	stos   BYTE PTR es:[edi],al
  4038e3:	cmp    eax,0xcac095f6
  4038e8:	mov    eax,0x8856ac9b
  4038ed:	in     eax,dx
  4038ee:	cmp    eax,0x348a6d6e
  4038f3:	inc    esi
  4038f4:	and    eax,edi
  4038f6:	out    dx,al
  4038f7:	jg     0x403946
  4038f9:	retf   0xd832
  4038fc:	xchg   edx,esp
  4038fe:	icebp  
  4038ff:	jne    0x403953
  403901:	in     al,0x7c
  403903:	leave  
  403904:	repnz out dx,al
  403906:	dec    ecx
  403907:	cmp    esi,DWORD PTR [esp+esi*1-0x3f685762]
  40390e:	or     ecx,ebp
  403910:	inc    ebx
  403911:	inc    esp
  403912:	imul   edi,DWORD PTR [edi-0x40e92045],0x5dc64040
  40391c:	mov    eax,0x7012b5b8
  403921:	or     eax,0x4bc6bfb9
  403926:	retf   0x193
  403929:	cmp    DWORD PTR [edx+0x3c],edi
  40392c:	retf   
  40392d:	sub    DWORD PTR [ecx],ebx
  40392f:	retf   
  403930:	or     eax,0xeaebb398
  403935:	xor    al,0xc0
  403937:	cmp    DWORD PTR [ecx],edx
  403939:	dec    ecx
  40393a:	fcom   QWORD PTR [eax-0x54]
  40393d:	mov    al,0xb9
  40393f:	rcl    DWORD PTR [edx],1
  403941:	in     eax,0x5d
  403943:	and    ecx,eax
  403945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403946:	or     eax,eax
  403948:	mov    eax,esp
  40394a:	fistp  DWORD PTR ds:0xfa99ea5
  403950:	inc    esi
  403951:	aad    0xa8
  403953:	sbb    eax,0x55883832
  403958:	jno    0x40392e
  40395a:	mov    ds:0x2818df47,eax
  40395f:	mov    al,ds:0xbe40f7ef
  403964:	inc    esp
  403965:	pop    ebx
  403966:	mov    ebx,0x984ba2af
  40396b:	mov    cs,WORD PTR [edx+0x218b62c9]
  403971:	xchg   edx,eax
  403972:	pop    es
  403973:	jl     0x40398f
  403975:	sub    eax,0x627075e0
  40397a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397b:	sbb    esp,esp
  40397d:	xor    DWORD PTR [eax],ecx
  40397f:	in     eax,0x55
  403981:	xor    edi,esp
  403983:	jge    0x403923
  403985:	repz dec eax
  403987:	aas    
  403988:	stos   BYTE PTR es:[edi],al
  403989:	cmp    dl,BYTE PTR [ecx]
  40398b:	pop    ecx
  40398c:	cmp    ah,ah
  40398e:	out    0x8d,al
  403990:	iret   
  403991:	mov    cl,BYTE PTR [eax+ebp*2+0x9]
  403995:	xor    BYTE PTR [esi],ah
  403997:	or     edi,DWORD PTR [esi-0x24ef4e2]
  40399d:	ss loope 0x4039cc
  4039a0:	push   ebx
  4039a1:	lds    esp,FWORD PTR [edi-0x23]
  4039a4:	lock aaa 
  4039a6:	pop    ebx
  4039a7:	test   cl,al
  4039a9:	mov    al,ds:0x17d5b6de
  4039ae:	xor    al,0x10
  4039b0:	mov    edx,DWORD PTR [eax+0x2f7ecb3]
  4039b6:	daa    
  4039b7:	push   0x2a67e0bd
  4039bc:	mov    WORD PTR [ebx],?
  4039be:	sbb    DWORD PTR [ecx+0x3e],ecx
  4039c1:	jp     0x403954
  4039c3:	pop    es
  4039c4:	sub    DWORD PTR [edi-0x2db22952],eax
  4039ca:	arpl   WORD PTR [ebx-0x5c],di
  4039cd:	jnp    0x4039fe
  4039cf:	mov    ds:0xd79240e7,al
  4039d4:	mov    ds:0x414e5c19,al
  4039d9:	fbld   TBYTE PTR [esi+0x71a1e10b]
  4039df:	push   ds
  4039e0:	shr    BYTE PTR [ecx+0x75755823],1
  4039e6:	cs ds ret 0xcd8
  4039eb:	int    0x75
  4039ed:	pop    esp
  4039ee:	retf   0x9642
  4039f1:	ror    dh,0xc3
  4039f4:	xchg   esi,eax
  4039f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039f6:	int    0x19
  4039f8:	int    0xad
  4039fa:	ja     0x403a05
  4039fc:	jg     0x4039cd
  4039fe:	pushf  
  4039ff:	xchg   ebp,eax
  403a00:	or     ebx,DWORD PTR [ebx-0x4c59475b]
  403a06:	inc    edx
  403a07:	inc    eax
  403a08:	jne    0x403a67
  403a0a:	and    esp,edx
  403a0c:	out    0x24,eax
  403a0e:	aam    0x62
  403a10:	or     esi,DWORD PTR [ebp+0xaad2c12]
  403a16:	(bad)  
  403a17:	pushf  
  403a18:	rcr    DWORD PTR [ebx+0x5a],0xc3
  403a1c:	shr    BYTE PTR [eax-0x47d70c34],cl
  403a22:	jns    0x4039df
  403a24:	mov    cl,0x77
  403a26:	aaa    
  403a27:	out    dx,eax
  403a28:	clc    
  403a29:	mov    al,0x3e
  403a2b:	xor    al,0x55
  403a2d:	in     eax,dx
  403a2e:	shl    ebx,cl
  403a30:	fnstsw WORD PTR [eax-0x6c]
  403a33:	loope  0x4039f9
  403a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a36:	and    DWORD PTR [edx-0x2c],0xaef54d02
  403a3d:	fidiv  DWORD PTR [ecx]
  403a3f:	pop    edi
  403a40:	add    eax,0x5064698d
  403a45:	(bad)  
  403a46:	jge    0x403a94
  403a48:	jne    0x403a58
  403a4a:	fcomp  DWORD PTR ds:0xac8ab35c
  403a50:	clc    
  403a51:	out    dx,eax
  403a52:	mov    ecx,0x241b54c
  403a57:	enter  0x2643,0x85
  403a5b:	xchg   ecx,eax
  403a5c:	pop    ss
  403a5d:	cmc    
  403a5e:	adc    edi,DWORD PTR [edi-0x1b]
  403a61:	test   BYTE PTR [eax-0x2a4d4c0a],ch
  403a67:	loop   0x403a0f
  403a69:	shl    BYTE PTR [esi+0x38],1
  403a6c:	jne    0x403ad3
  403a6e:	pushf  
  403a6f:	aad    0xf5
  403a71:	inc    esi
  403a72:	cmp    al,0x88
  403a74:	and    DWORD PTR [edi+0x65],0x633f8df9
  403a7b:	or     DWORD PTR [ebp+0x67761114],esi
  403a81:	mov    dl,ch
  403a83:	mov    ah,0x67
  403a85:	mov    al,ds:0xe76c9cb5
  403a8a:	imul   esi,esi,0xffffffd4
  403a8d:	mov    al,0xff
  403a8f:	or     BYTE PTR [edi+edx*8-0x11f3a239],dl
  403a96:	xchg   DWORD PTR [ebx+0x21b253a9],esi
  403a9c:	push   ss
  403a9d:	push   ebx
  403a9e:	dec    ecx
  403a9f:	mov    ah,0x2c
  403aa1:	adc    eax,0x1eb6a1f5
  403aa6:	idiv   ah
  403aa8:	enter  0x8956,0x49
  403aac:	outs   dx,BYTE PTR ds:[esi]
  403aad:	dec    edi
  403aae:	lea    eax,[ebp-0x5e]
  403ab1:	int    0x6d
  403ab3:	imul   edx,esi,0x4074470a
  403ab9:	inc    eax
  403aba:	mov    edi,0xd393c0f4
  403abf:	dec    eax
  403ac0:	lods   eax,DWORD PTR ds:[esi]
  403ac1:	cli    
  403ac2:	cs jmp 0x403ac6
  403ac5:	(bad)  
  403ac6:	cwde   
  403ac7:	daa    
  403ac8:	pop    edx
  403ac9:	out    dx,eax
  403aca:	test   bh,bl
  403acc:	mov    ah,0x36
  403ace:	retf   
  403acf:	adc    al,BYTE PTR [esi]
  403ad1:	jo     0x403acc
  403ad3:	inc    ebx
  403ad4:	jge    0x403ad4
  403ad6:	adc    edx,DWORD PTR [edi+ecx*1-0x71]
  403ada:	sbb    DWORD PTR [esi-0x46d457b4],eax
  403ae0:	fimul  DWORD PTR [ebx-0x52783a37]
  403ae6:	arpl   WORD PTR [edi],cx
  403ae8:	fdivr  QWORD PTR [eax-0xf]
  403aeb:	mov    al,ds:0xc4d21222
  403af0:	shl    bl,cl
  403af2:	fstp   st(3)
  403af4:	cmp    ah,dh
  403af6:	sbb    eax,0x6aff02b
  403afb:	loope  0x403b12
  403afd:	xor    eax,0x477dafd5
  403b02:	repz out dx,eax
  403b04:	mov    ds:0xcbf3560c,eax
  403b09:	cmp    ecx,ebp
  403b0b:	loop   0x403ad1
  403b0d:	fadd   st(6),st
  403b0f:	in     eax,0xbf
  403b11:	(bad)  
  403b12:	retf   0xa172
  403b15:	push   ss
  403b16:	add    BYTE PTR [esp+esi*1+0x21f3476e],ch
  403b1d:	(bad)  
  403b1e:	mov    bh,0xdb
  403b20:	mov    edi,0xa91e97eb
  403b25:	fwait
  403b26:	mov    ss,edx
  403b28:	jge    0x403b39
  403b2a:	ret    
  403b2b:	mov    al,0xe
  403b2d:	or     edi,ecx
  403b2f:	(bad)  
  403b30:	mov    esi,0xaa7b8fda
  403b35:	test   DWORD PTR [edi+ebp*1-0x2fc73138],ebp
  403b3c:	std    
  403b3d:	imul   esi,DWORD PTR [ecx-0x76],0x40
  403b41:	scas   eax,DWORD PTR es:[edi]
  403b42:	stc    
  403b43:	stos   BYTE PTR es:[edi],al
  403b44:	pop    ds
  403b45:	inc    eax
  403b46:	iret   
  403b47:	gs and eax,0x406c6028
  403b4d:	add    dh,ch
  403b4f:	mov    gs,edi
  403b51:	leave  
  403b52:	push   0x600c7432
  403b57:	xchg   ecx,eax
  403b58:	mov    WORD PTR [ebp+eax*2-0x61877c3e],es
  403b5f:	jne    0x403b52
  403b61:	out    dx,eax
  403b62:	std    
  403b63:	or     BYTE PTR [eax],dl
  403b65:	mov    bl,0xdd
  403b67:	dec    esp
  403b68:	cmp    edi,esi
  403b6a:	test   BYTE PTR [edi-0x52411eda],ah
  403b70:	dec    esp
  403b71:	mov    bl,BYTE PTR [esi]
  403b73:	imul   ebp,DWORD PTR [ebp-0x79f95edb],0xf0b03683
  403b7d:	repnz add cl,BYTE PTR [ecx]
  403b80:	inc    eax
  403b81:	loope  0x403bb8
  403b83:	call   0x9e16:0xa2583ebe
  403b8a:	shr    DWORD PTR es:[edx],0xbe
  403b8e:	mov    cl,BYTE PTR [esi+0x3f0aff3]
  403b94:	cmp    esp,ebp
  403b96:	fs inc edx
  403b98:	jbe    0x403b39
  403b9a:	mov    ds:0xf55c9d2a,al
  403b9f:	xchg   ebp,eax
  403ba0:	pop    ds
  403ba1:	call   0x41bd94c2
  403ba6:	inc    eax
  403ba7:	pop    ss
  403ba8:	push   eax
  403ba9:	or     al,BYTE PTR [eax-0x39]
  403bac:	inc    edi
  403bad:	cmp    dl,BYTE PTR [ebp-0x25700f81]
  403bb3:	into   
  403bb4:	daa    
  403bb5:	stc    
  403bb6:	xchg   ebx,eax
  403bb7:	and    eax,0x715c8fdd
  403bbc:	jle    0x403b97
  403bbe:	dec    eax
  403bbf:	ja     0x403b62
  403bc1:	out    dx,eax
  403bc2:	jns    0x403c23
  403bc4:	dec    edi
  403bc5:	cmp    al,0x48
  403bc7:	sub    DWORD PTR [esi+0xf],ecx
  403bca:	fcmove st,st(7)
  403bcc:	adc    ch,BYTE PTR [edi+0x1387048]
  403bd2:	aad    0xe
  403bd4:	arpl   WORD PTR [eax],dx
  403bd6:	repz adc DWORD PTR [eax],0x10
  403bda:	or     esi,DWORD PTR [eax]
  403bdc:	pop    eax
  403bdd:	mov    bh,0x4d
  403bdf:	sub    eax,0x422b918a
  403be4:	rol    BYTE PTR ds:0xe9381c4,1
  403bea:	rol    DWORD PTR [esi+0x7b],0x0
  403bee:	xor    bh,bl
  403bf0:	mov    DWORD PTR [edx-0x7f42f37],esi
  403bf6:	sbb    al,0xba
  403bf8:	(bad)  
  403bf9:	js     0x403b7d
  403bfb:	mov    DWORD PTR [esp+ebx*8-0x67],eax
  403bff:	cmp    DWORD PTR [esi-0x661789e1],ebp
  403c05:	push   ebp
  403c06:	sbb    eax,0xc17faac1
  403c0b:	fs adc ecx,esi
  403c0e:	test   BYTE PTR [ebx+0x7c],dl
  403c11:	pop    edx
  403c12:	or     eax,0xd8eabbde
  403c17:	(bad)  
  403c18:	mov    ebx,0x74cd9095
  403c1d:	jle    0x403bc6
  403c1f:	test   DWORD PTR [ebp-0x47],edi
  403c22:	push   0xffffff9e
  403c24:	push   edi
  403c25:	xchg   BYTE PTR ds:0x3ee4959f,bh
  403c2b:	stos   DWORD PTR es:[edi],eax
  403c2c:	jecxz  0x403c3c
  403c2e:	stos   DWORD PTR es:[edi],eax
  403c2f:	rol    BYTE PTR [eax-0x6838b6aa],0x3e
  403c36:	daa    
  403c37:	mov    WORD PTR [ebp-0x18],ds
  403c3a:	mov    edi,0x1605e191
  403c3f:	xchg   BYTE PTR ds:0xd2088212,ah
  403c45:	jbe    0x403bd1
  403c47:	cli    
  403c48:	aaa    
  403c49:	push   eax
  403c4a:	cld    
  403c4b:	adc    al,0xb8
  403c4d:	mov    eax,ds:0xf0aae5f6
  403c52:	pop    ecx
  403c53:	call   0x4cd:0x3de05fd3
  403c5a:	in     al,dx
  403c5b:	jo     0x403c09
  403c5d:	sti    
  403c5e:	int3   
  403c5f:	sub    ebx,ebp
  403c61:	xor    bl,BYTE PTR [edi-0x2b]
  403c64:	push   esp
  403c65:	int    0xa
  403c67:	mov    al,ds:0x9a0c23c0
  403c6c:	sub    esp,ebx
  403c6e:	enter  0xfc5e,0x3e
  403c72:	push   es
  403c73:	sbb    BYTE PTR [edx+0x13d4298b],bh
  403c79:	sub    BYTE PTR [esi],0xa5
  403c7c:	cdq    
  403c7d:	push   0x99a277bb
  403c82:	push   ebp
  403c83:	and    cl,BYTE PTR [ebx+0x1c]
  403c86:	xor    BYTE PTR ds:0x49604a40,dl
  403c8c:	cmp    ebx,DWORD PTR [esi+0x6d69fab]
  403c92:	jns    0x403c3b
  403c94:	(bad)  
  403c96:	loopne 0x403d07
  403c98:	or     al,dh
  403c9a:	cmp    BYTE PTR [edx-0x1713e10f],dl
  403ca0:	stc    
  403ca1:	cmp    bl,BYTE PTR [edx]
  403ca3:	lods   eax,DWORD PTR ds:[esi]
  403ca4:	clc    
  403ca5:	bound  ebp,QWORD PTR [ecx]
  403ca7:	sbb    eax,0x1a05622f
  403cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cad:	xor    al,BYTE PTR [esi+0x34135020]
  403cb3:	push   cs
  403cb4:	ins    BYTE PTR es:[edi],dx
  403cb5:	mov    ecx,0x6fa5ab35
  403cba:	push   cs
  403cbb:	mov    dl,0x4
  403cbd:	fidiv  DWORD PTR [eax]
  403cbf:	cmp    al,0x87
  403cc1:	dec    eax
  403cc2:	inc    edi
  403cc3:	ror    BYTE PTR [ebx+0x455ce119],cl
  403cc9:	scas   al,BYTE PTR es:[edi]
  403cca:	xchg   BYTE PTR ds:0xe463055d,al
  403cd0:	cld    
  403cd1:	and    DWORD PTR ds:0x2275d6de,ecx
  403cd7:	outs   dx,DWORD PTR ds:[esi]
  403cd8:	adc    al,0x3d
  403cda:	mov    ebp,0x9cfe19fa
  403cdf:	idiv   DWORD PTR [ebp-0x80]
  403ce2:	test   al,0x6c
  403ce4:	mov    ebp,0x25a5ef6b
  403ce9:	mov    ah,0xfa
  403ceb:	push   esi
  403cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ced:	test   al,0xeb
  403cef:	push   edi
  403cf0:	mov    ah,0x8a
  403cf2:	(bad)  
  403cf4:	sub    BYTE PTR [ecx+0x3284441c],0x74
  403cfb:	push   ss
  403cfc:	dec    ebx
  403cfd:	ret    0xaf69
  403d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d01:	and    dl,bl
  403d03:	data16 jge 0x403cfd
  403d06:	and    ah,al
  403d08:	pop    esp
  403d09:	sub    ah,bh
  403d0b:	loopne 0x403cbf
  403d0d:	dec    ebp
  403d0e:	stos   BYTE PTR es:[edi],al
  403d0f:	lea    ebp,[ecx+ebx*4-0x48]
  403d13:	jp     0x403d5a
  403d15:	mov    db6,edx
  403d18:	xor    eax,0x9b18339d
  403d1d:	and    dh,dl
  403d1f:	ret    0x9dc7
  403d22:	sub    al,0xad
  403d24:	xchg   edi,eax
  403d25:	sbb    dh,BYTE PTR [esi-0x699ea6a0]
  403d2b:	jae    0x403cc1
  403d2d:	adc    ebx,0x79
  403d30:	push   eax
  403d31:	or     BYTE PTR [ebp-0x43],0xa9
  403d35:	cmp    BYTE PTR [edi],bl
  403d37:	aam    0xaa
  403d39:	pop    eax
  403d3a:	or     al,0x3
  403d3c:	out    dx,al
  403d3d:	mov    BYTE PTR [ebp+0x1e871c2a],al
  403d43:	shr    BYTE PTR [esi+0x13a6465a],0xb
  403d4a:	fidivr DWORD PTR [eax+ebx*2]
  403d4d:	xor    al,0x7b
  403d4f:	push   es
  403d50:	xor    eax,0x9c4a9ea1
  403d55:	mov    eax,ds:0x5c0d6cfb
  403d5a:	sub    esp,ebx
  403d5c:	ins    DWORD PTR es:[edi],dx
  403d5d:	and    ch,BYTE PTR [ecx+eiz*8]
  403d60:	in     eax,dx
  403d61:	or     al,0x4a
  403d63:	cwde   
  403d64:	jmp    0x9c427aed
  403d69:	xchg   BYTE PTR [eax+eiz*8-0x58],ah
  403d6d:	xchg   DWORD PTR [eax-0x41],ebp
  403d70:	cmp    DWORD PTR [esi],esp
  403d72:	fidiv  DWORD PTR [edi]
  403d74:	push   ds
  403d75:	push   0xffffff88
  403d77:	test   eax,0xa87972b8
  403d7c:	dec    ebx
  403d7d:	ja     0x403d7b
  403d7f:	stc    
  403d80:	stc    
  403d81:	mov    al,ch
  403d83:	inc    ecx
  403d84:	xor    edx,ebx
  403d86:	inc    ecx
  403d87:	jne    0x403d73
  403d89:	xchg   ecx,eax
  403d8a:	es pop edi
  403d8c:	pop    edi
  403d8d:	sub    BYTE PTR [edx+0x4c1a2cff],0x92
  403d94:	dec    edx
  403d95:	rcr    BYTE PTR [edx],0x28
  403d98:	test   ebx,ebx
  403d9a:	std    
  403d9b:	dec    eax
  403d9c:	nop
  403d9d:	les    ebp,FWORD PTR [esi-0x31f262d7]
  403da3:	pop    esi
  403da4:	not    DWORD PTR fs:[edx]
  403da7:	pop    ebx
  403da8:	shr    al,1
  403daa:	(bad)  
  403dab:	lock push cs
  403dad:	mov    esi,0x7925e577
  403db2:	mov    ah,0x27
  403db4:	or     al,BYTE PTR [edx-0x6f]
  403db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403db8:	inc    ebp
  403db9:	adc    dh,BYTE PTR [edi+0x9]
  403dbc:	mov    es,ebx
  403dbe:	sbb    al,0x32
  403dc0:	pop    ecx
  403dc1:	and    al,0xe6
  403dc3:	mov    ah,0x8c
  403dc5:	push   edx
  403dc6:	adc    ecx,ebp
  403dc8:	mov    bh,0x5d
  403dca:	pop    edi
  403dcb:	jmp    0x53041ab2
  403dd0:	and    eax,0x4702be23
  403dd5:	in     eax,dx
  403dd6:	jne    0x403dee
  403dd8:	sbb    bl,BYTE PTR [ecx-0x6bdc3537]
  403dde:	les    ebp,FWORD PTR [esi-0x73284b17]
  403de4:	push   eax
  403de5:	push   cs
  403de6:	outs   dx,DWORD PTR ds:[esi]
  403de7:	aaa    
  403de8:	sub    eax,0x22abbcdb
  403ded:	arpl   bp,bx
  403def:	lods   al,BYTE PTR ds:[esi]
  403df0:	and    al,0x60
  403df2:	(bad)  
  403df3:	loop   0x403e73
  403df5:	pop    ecx
  403df6:	and    cl,BYTE PTR [eax]
  403df8:	out    dx,eax
  403df9:	cmp    bh,bh
  403dfb:	mov    DWORD PTR [eax+0x1d351ad0],eax
  403e01:	popa   
  403e02:	jecxz  0x403e21
  403e04:	mov    al,ds:0xf37fbb0d
  403e09:	xchg   BYTE PTR [ecx-0x6f],dl
  403e0c:	xchg   esi,eax
  403e0d:	mov    BYTE PTR [eax],al
  403e0f:	pop    esp
  403e10:	dec    ecx
  403e11:	jne    0x403dde
  403e13:	fsub   QWORD PTR [eax]
  403e15:	outs   dx,BYTE PTR ds:[esi]
  403e16:	mov    dh,0xbc
  403e18:	retf   0x9511
  403e1b:	mov    edx,0x560f8d7a
  403e20:	iret   
  403e21:	sbb    eax,0xad13e47d
  403e26:	lock xor ah,BYTE PTR [ebp+0x283403b8]
  403e2d:	stc    
  403e2e:	loope  0x403e35
  403e30:	jns    0x403e81
  403e32:	sar    BYTE PTR [esi-0x498384aa],1
  403e38:	outs   dx,DWORD PTR ds:[esi]
  403e39:	and    dh,BYTE PTR [edx]
  403e3b:	mov    ?,WORD PTR es:[edx+0x51]
  403e3f:	or     DWORD PTR [edi-0x6224c723],edi
  403e45:	aaa    
  403e46:	loope  0x403e80
  403e48:	push   edx
  403e49:	fild   QWORD PTR [edx-0x7e5225d9]
  403e4f:	inc    ebx
  403e50:	pop    ebx
  403e51:	and    eax,0x4b2bf073
  403e56:	pop    esp
  403e57:	xlat   BYTE PTR ds:[ebx]
  403e58:	cmp    DWORD PTR [eax+ebp*4-0x45],esi
  403e5c:	mov    BYTE PTR [ecx+eax*8-0x7b],al
  403e60:	or     ebp,esp
  403e62:	sub    DWORD PTR [ebp-0x640c2db1],esi
  403e68:	lea    eax,[ebx-0x33825396]
  403e6e:	or     esi,DWORD PTR [eax]
  403e70:	dec    esi
  403e71:	adc    al,0xa8
  403e73:	hlt    
  403e74:	nop
  403e75:	loope  0x403e64
  403e77:	xchg   esi,eax
  403e78:	repz add al,0xf0
  403e7b:	xchg   esp,eax
  403e7c:	(bad)  
  403e7d:	xlat   BYTE PTR ds:[ebx]
  403e7e:	pushf  
  403e7f:	push   0x75ec8287
  403e84:	and    edi,ebp
  403e86:	adc    al,0x5e
  403e88:	pushf  
  403e89:	cmp    DWORD PTR [edi+0x79975c25],ebp
  403e8f:	push   ebp
  403e90:	mov    ch,0xa
  403e92:	jo     0x403eb3
  403e94:	jp     0x403eae
  403e96:	mov    ds:0x1bdcbc92,al
  403e9b:	and    BYTE PTR [edx],bl
  403e9d:	push   cs
  403e9e:	or     DWORD PTR [eax],0xaf7b7cff
  403ea4:	cmp    BYTE PTR [ecx],cl
  403ea6:	out    0x73,al
  403ea8:	pop    ss
  403ea9:	or     BYTE PTR [esi+0x2c],bl
  403eac:	or     eax,0x3740f62
  403eb1:	xor    eax,0x25f4e06f
  403eb6:	jl     0x403f10
  403eb8:	inc    ebx
  403eb9:	call   0x8631:0x94b58bd4
  403ec0:	in     al,0x84
  403ec2:	outs   dx,BYTE PTR ds:[esi]
  403ec3:	gs cmp al,0x60
  403ec6:	jmp    0xef42:0xfaac04c7
  403ecd:	push   0xffffffa1
  403ecf:	leave  
  403ed0:	in     al,0xb6
  403ed2:	dec    ecx
  403ed3:	aaa    
  403ed4:	mov    eax,0xcb1b660e
  403ed9:	dec    edi
  403eda:	push   cs
  403edb:	int    0xd
  403edd:	imul   ebp,DWORD PTR [ebp+0x77],0x4e
  403ee1:	jb     0x403f00
  403ee3:	xchg   edi,eax
  403ee4:	mov    esp,0xb45b339d
  403ee9:	and    al,0xd9
  403eeb:	mov    ch,bl
  403eed:	cmovae ebp,DWORD PTR [esi-0x595150fa]
  403ef4:	and    DWORD PTR [edx],esp
  403ef6:	jno    0x403f15
  403ef8:	mov    DWORD PTR [ebx+0x65],edi
  403efb:	mov    edx,0x1e9632eb
  403f00:	push   edx
  403f01:	inc    ebx
  403f02:	jne    0x403ede
  403f04:	cmp    bl,ch
  403f06:	mov    DWORD PTR [edi-0x1092fe8b],0x4baa74fa
  403f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f11:	or     esi,DWORD PTR [eax+0x19]
  403f14:	or     ebp,DWORD PTR fs:[ebx-0x21]
  403f18:	call   0x87764516
  403f1d:	mov    cl,0x22
  403f1f:	stc    
  403f20:	fwait
  403f21:	xchg   edx,eax
  403f22:	retf   0xc17c
  403f25:	sti    
  403f26:	jb     0x403f48
  403f28:	cmp    al,0xc7
  403f2a:	sbb    eax,0xd1c6c9f9
  403f2f:	mov    dh,BYTE PTR [edx]
  403f31:	(bad)  
  403f32:	xchg   esp,eax
  403f33:	loop   0x403f65
  403f35:	(bad)  
  403f36:	pop    eax
  403f37:	div    dh
  403f39:	lahf   
  403f3a:	test   eax,0x8a1c4a7
  403f3f:	xor    al,0x5f
  403f41:	jle    0x403f22
  403f43:	ret    
  403f44:	loop   0x403f37
  403f46:	pushf  
  403f47:	imul   ecx,DWORD PTR [eax+0xb20bca2],0xffffffbf
  403f4e:	lahf   
  403f4f:	mov    ecx,0x758e1604
  403f54:	pop    esp
  403f55:	xlat   BYTE PTR ds:[ebx]
  403f56:	fild   DWORD PTR [eax-0x6f]
  403f59:	jae    0x403f38
  403f5b:	mov    bl,0x6
  403f5d:	jbe    0x403f14
  403f5f:	xor    eax,0xd43ca45
  403f64:	cmp    BYTE PTR [esi],bl
  403f66:	push   cs
  403f67:	push   cs
  403f68:	and    cl,BYTE PTR [ebx+0x5a0cf46b]
  403f6e:	addr16 inc esp
  403f70:	add    eax,0x966d0755
  403f75:	out    0xc6,eax
  403f77:	std    
  403f78:	retf   0x2cb1
  403f7b:	ja     0x403f97
  403f7d:	sbb    al,0x1d
  403f7f:	pop    esi
  403f80:	push   ebx
  403f81:	add    bl,dh
  403f83:	aaa    
  403f84:	sub    edi,edx
  403f86:	aaa    
  403f87:	xchg   eax,esi
  403f89:	pop    ecx
  403f8a:	push   esi
  403f8b:	cmp    DWORD PTR [ebx-0x7ea26241],esp
  403f91:	stc    
  403f92:	xchg   ebp,eax
  403f93:	xchg   ecx,eax
  403f94:	lock fcom QWORD PTR [edx+0x57f71391]
  403f9b:	or     dh,bh
  403f9d:	push   eax
  403f9e:	pusha  
  403f9f:	sbb    ebx,DWORD PTR [eax]
  403fa1:	sbb    edi,DWORD PTR [ebp-0x35]
  403fa4:	fadd   DWORD PTR [ecx-0x2c]
  403fa7:	shr    DWORD PTR [esi-0x7d16257b],1
  403fad:	mov    edi,0x29e8cb35
  403fb2:	ret    
  403fb3:	fimul  DWORD PTR [edx-0x5769fa4]
  403fb9:	js     0x40401a
  403fbb:	lods   eax,DWORD PTR ds:[esi]
  403fbc:	pop    ecx
  403fbd:	in     eax,dx
  403fbe:	xchg   esi,eax
  403fbf:	xchg   esi,eax
  403fc0:	push   esp
  403fc1:	ins    DWORD PTR es:[edi],dx
  403fc2:	sub    BYTE PTR [ebx+0xd],al
  403fc5:	(bad)  
  403fc6:	aas    
  403fc7:	mov    ebp,0xa8d22d84
  403fcc:	xchg   ebx,eax
  403fcd:	mov    ds:0xdd02afb,eax
  403fd2:	xchg   BYTE PTR [ecx+0x3080b053],al
  403fd8:	imul   eax,DWORD PTR [ebx],0x282d38ea
  403fde:	fwait
  403fdf:	push   es
  403fe0:	icebp  
  403fe1:	jnp    0x40404e
  403fe3:	jnp    0x403ff6
  403fe5:	and    eax,DWORD PTR [eax]
  403fe7:	jl     0x40401e
  403fe9:	pop    edi
  403fea:	or     eax,DWORD PTR [edi+0x7948e865]
  403ff0:	xchg   ebx,eax
  403ff1:	jo     0x40401c
  403ff3:	xor    esi,esi
  403ff5:	ja     0x40401e
  403ff7:	or     dl,ah
  403ff9:	das    
  403ffa:	test   DWORD PTR [edx+0x73],esp
  403ffd:	loopne 0x403fed
  403fff:	addr16 pop ecx
  404002:	lock mov eax,ds:0x490a6ebc
  404008:	mov    ds:0x1eafcdd,eax
  40400d:	mov    esi,0xd8d9da84
  404012:	xchg   ebx,eax
  404013:	pop    ebp
  404014:	stos   BYTE PTR es:[edi],al
  404015:	sbb    eax,0x8f8c1548
  40401a:	push   esp
  40401b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401c:	push   es
  40401d:	stc    
  40401e:	adc    BYTE PTR [eax+0x78901f31],bl
  404024:	mov    al,ds:0x4dc97aba
  404029:	mov    WORD PTR [ebp*8+0x670602a2],?
  404030:	jmp    0x41d1:0x6793381
  404037:	dec    edx
  404038:	icebp  
  404039:	jmp    0x404067
  40403b:	inc    eax
  40403c:	dec    esp
  40403d:	mov    esp,0xc1ce5834
  404042:	test   DWORD PTR [eax],esi
  404044:	sbb    al,0x84
  404046:	in     eax,dx
  404047:	pop    edi
  404048:	imul   ecx,DWORD PTR [ecx-0x543dafc4],0x69
  40404f:	mov    edi,DWORD PTR [edx]
  404051:	outs   dx,BYTE PTR ds:[esi]
  404052:	mov    bl,0x70
  404054:	cmp    al,0x5b
  404056:	mov    ds:0xebf5d8c,eax
  40405b:	ins    BYTE PTR es:[edi],dx
  40405c:	hlt    
  40405d:	pop    edi
  40405e:	fadd   DWORD PTR ds:0xce2fec7
  404064:	inc    ecx
  404065:	inc    ecx
  404066:	or     eax,0x63870cfb
  40406b:	push   edi
  40406c:	test   BYTE PTR ds:0xbe8967f4,0xe4
  404073:	pop    ebx
  404074:	mov    esi,0xb50784b0
  404079:	imul   ebp,DWORD PTR [esi],0x2
  40407c:	std    
  40407d:	sbb    BYTE PTR [edi],cl
  40407f:	pop    esi
  404080:	loope  0x404016
  404082:	mov    esi,0x3193886
  404087:	ret    
  404088:	test   al,cl
  40408a:	xchg   BYTE PTR [edx-0x73],bl
  40408d:	(bad)  
  40408e:	fcomp  QWORD PTR [ebx]
  404090:	ja     0x40405b
  404092:	es push ebx
  404094:	aam    0xbb
  404096:	pushf  
  404097:	mov    ah,0xfc
  404099:	mov    cl,0x54
  40409b:	inc    edi
  40409c:	mulps  xmm7,xmm0
  40409f:	push   ecx
  4040a0:	repnz das 
  4040a2:	outs   dx,DWORD PTR ds:[esi]
  4040a3:	out    dx,eax
  4040a4:	not    BYTE PTR [esi+0xd5a0b00]
  4040aa:	jns    0x4040f8
  4040ac:	xchg   cl,ah
  4040ae:	xchg   BYTE PTR ds:0xc2b52d40,cl
  4040b4:	mov    dh,0xcd
  4040b6:	bound  ebp,QWORD PTR [edi+0x1418337c]
  4040bc:	pop    ebx
  4040bd:	mov    bl,0xaf
  4040bf:	sub    BYTE PTR [edi-0x26],bl
  4040c2:	loope  0x40409c
  4040c4:	mov    ecx,0xc16f3287
  4040c9:	xchg   edx,eax
  4040ca:	inc    esp
  4040cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040cc:	adc    al,0xb3
  4040ce:	and    DWORD PTR [ebp-0x3c],esp
  4040d1:	pusha  
  4040d2:	jecxz  0x4040d3
  4040d4:	(bad)  
  4040d5:	cmp    eax,0x6c893b41
  4040da:	cmp    DWORD PTR [ebx],eax
  4040dc:	add    DWORD PTR [edi-0x67485a44],esi
  4040e2:	mov    ah,0xf7
  4040e4:	jne    0x4040fa
  4040e6:	fnstcw WORD PTR [ebx+0x6f]
  4040e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ea:	std    
  4040eb:	xchg   edx,eax
  4040ec:	mov    ebp,0xeef82f32
  4040f1:	repz xchg ecx,eax
  4040f3:	sbb    ch,bh
  4040f5:	xlat   BYTE PTR ds:[ebx]
  4040f6:	adc    ecx,ebx
  4040f8:	mov    eax,ds:0x444f3738
  4040fd:	mov    bh,0x66
  4040ff:	mov    ebp,0xb67bdcc8
  404104:	add    BYTE PTR [ecx-0x3f],bl
  404107:	rol    BYTE PTR ds:0x31bffee7,cl
  40410d:	aad    0x16
  40410f:	pop    eax
  404110:	and    eax,0xd96b7753
  404116:	pop    ebp
  404117:	sti    
  404118:	les    eax,FWORD PTR [eax-0x18512794]
  40411e:	sub    dh,BYTE PTR [ebx-0x1dc65051]
  404124:	(bad)  
  404126:	hlt    
  404127:	jle    0x404123
  404129:	ret    0x1c70
  40412c:	xor    al,0x9d
  40412e:	idiv   ah
  404130:	pop    ss
  404131:	pop    eax
  404132:	into   
  404133:	in     eax,0x76
  404135:	and    eax,0x2bced683
  40413a:	adc    al,0xee
  40413c:	adc    eax,esi
  40413e:	and    DWORD PTR [ecx-0x20050605],esi
  404144:	mov    esi,0xf616cc50
  404149:	mov    eax,ds:0xffee9b4a
  40414e:	sbb    edx,DWORD PTR [ecx-0x16]
  404151:	lahf   
  404152:	xchg   ebp,eax
  404153:	sub    al,0x1
  404155:	xor    al,0x1e
  404157:	(bad)  
  404158:	xor    edi,DWORD PTR [ecx]
  40415a:	mov    BYTE PTR [edx+0x14ab1705],bl
  404160:	(bad)  
  404161:	test   al,0xd
  404163:	cmc    
  404164:	cld    
  404165:	and    BYTE PTR [edi+ebx*1],al
  404168:	aas    
  404169:	scas   al,BYTE PTR es:[edi]
  40416a:	fnstsw WORD PTR [edi]
  40416c:	inc    esp
  40416d:	rcr    BYTE PTR [edx],0xce
  404170:	cmp    al,0x96
  404172:	add    eax,0xee3c89e9
  404177:	mov    eax,0x1cfe38b7
  40417c:	hlt    
  40417d:	adc    ch,BYTE PTR [esi+ebp*1+0x8]
  404181:	inc    ecx
  404182:	in     al,0x93
  404184:	or     ch,bl
  404186:	fld    st(7)
  404188:	bound  ebp,QWORD PTR [ecx]
  40418a:	mov    al,0x8f
  40418c:	imul   edx,DWORD PTR [ebx-0x2035a6ae],0x9e0e9286
  404196:	sub    eax,0xfd876
  40419b:	inc    bl
  40419d:	dec    ebp
  40419e:	aad    0x54
  4041a0:	dec    ebp
  4041a1:	or     eax,0x66f39c21
  4041a6:	bound  esi,QWORD PTR [esi]
  4041a8:	int    0x94
  4041aa:	jle    0x404185
  4041ac:	je     0x404213
  4041ae:	(bad)  
  4041af:	adc    al,0xf7
  4041b1:	loop   0x404186
  4041b3:	(bad)  
  4041b4:	jmp    0xd61b3627
  4041b9:	lock xor eax,DWORD PTR [ebp+esi*8-0x5]
  4041be:	test   BYTE PTR ss:[esi+ebx*2],bl
  4041c2:	stos   BYTE PTR es:[edi],al
  4041c3:	(bad)  
  4041c4:	stc    
  4041c5:	les    edi,FWORD PTR [ebp-0x2d3e9ae6]
  4041cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041cc:	push   esi
  4041cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ce:	shl    DWORD PTR [eax],0x28
  4041d1:	gs data16 (bad) 
  4041d4:	add    dl,BYTE PTR [esi-0x54]
  4041d7:	retf   0x7745
  4041da:	cmp    eax,0xfb3da3c6
  4041df:	xchg   ebp,eax
  4041e0:	cdq    
  4041e1:	cwde   
  4041e2:	pusha  
  4041e3:	mov    ss,WORD PTR [edi-0x5a]
  4041e6:	inc    ebp
  4041e7:	adc    DWORD PTR [ecx+0x51309d8d],0xaa0825c7
  4041f1:	jmp    0x3960414b
  4041f6:	push   ss
  4041f7:	cmc    
  4041f8:	cwde   
  4041f9:	push   esp
  4041fa:	fnstcw WORD PTR [ebp+0x62]
  4041fd:	mov    eax,0x66390343
  404202:	xchg   ebx,eax
  404203:	and    ecx,ecx
  404205:	inc    edx
  404206:	pusha  
  404207:	push   ecx
  404208:	lock js 0x4041b3
  40420b:	jnp    0x40425b
  40420d:	or     BYTE PTR [ebx+0x5143edd6],bl
  404213:	mov    ds:0xb7249dca,al
  404218:	xor    BYTE PTR [esi-0x12d9f13c],0x28
  40421f:	mov    bl,0x9d
  404221:	mov    esp,0xbb982a9a
  404226:	jg     0x40426a
  404228:	sub    BYTE PTR [edi-0x4af09405],0x58
  40422f:	mov    edi,ss
  404231:	jp     0x40426f
  404233:	and    eax,0x642bbffb
  404238:	ret    
  404239:	into   
  40423a:	cmp    al,0x24
  40423c:	out    dx,al
  40423d:	push   esi
  40423e:	(bad)  
  40423f:	jmp    0xb5072c58
  404244:	mov    dl,BYTE PTR [ebx-0x4f3822dd]
  40424a:	popf   
  40424b:	lods   al,BYTE PTR ds:[esi]
  40424c:	mov    cl,BYTE PTR [eax-0x7095550c]
  404252:	dec    esi
  404253:	mov    bl,bh
  404255:	cmc    
  404256:	jbe    0x404214
  404258:	clc    
  404259:	and    eax,DWORD PTR [edi+0x55768bb7]
  40425f:	pop    ecx
  404260:	adc    DWORD PTR [ebx+0x62c4a12],edi
  404266:	mov    edx,ebx
  404268:	adc    al,0xf
  40426a:	and    BYTE PTR [esi+edi*1],0x74
  40426e:	xchg   ebx,eax
  40426f:	and    eax,0x273f58f9
  404275:	push   0x41f1346
  40427a:	dec    edx
  40427b:	cmp    DWORD PTR [esi],0xf6797d24
  404281:	sahf   
  404282:	dec    ebp
  404283:	xchg   esi,eax
  404284:	or     al,0xfd
  404286:	ror    DWORD PTR [edx+edi*4],0xce
  40428a:	mov    ds:0x5f15e997,eax
  40428f:	pop    ebp
  404290:	mov    al,ds:0xf6d6ce98
  404295:	pusha  
  404296:	push   0xffffff9f
  404298:	aad    0xcc
  40429a:	mov    eax,0x52c1b03
  40429f:	mov    WORD PTR [edi+eiz*4],es
  4042a2:	cmc    
  4042a3:	push   edi
  4042a4:	push   ss
  4042a5:	push   ebx
  4042a6:	inc    edx
  4042a7:	pop    ecx
  4042a8:	mul    DWORD PTR [edx-0x30e29e32]
  4042ae:	bound  edi,QWORD PTR [esi-0x26]
  4042b1:	add    DWORD PTR [esi],0xb3c1a66c
  4042b7:	pop    es
  4042b8:	mov    dl,0x35
  4042ba:	jmp    0x841b:0xf0a74632
  4042c1:	test   DWORD PTR [eax+0x47bc3cb4],ebx
  4042c7:	push   ecx
  4042c8:	xor    DWORD PTR [edi+0x3b022afc],ebx
  4042ce:	loope  0x4042a8
  4042d0:	out    dx,al
  4042d1:	lea    ebp,[edx]
  4042d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d4:	mov    esp,0x34120c24
  4042d9:	outs   dx,BYTE PTR ds:[esi]
  4042da:	cmp    DWORD PTR [edx+edi*2-0x3bbb9ad9],0x5
  4042e2:	repz sub eax,0xa56422fa
  4042e8:	stos   BYTE PTR es:[edi],al
  4042e9:	or     ebx,DWORD PTR [ecx+esi*2-0x193e7fa2]
  4042f0:	mov    edx,edx
  4042f2:	call   0xba5712fc
  4042f7:	dec    eax
  4042f8:	fidivr DWORD PTR ds:0xffeef974
  4042fe:	mov    esp,0x4fa8609
  404303:	mov    esi,0x31f9d75
  404308:	fidivr DWORD PTR [edx]
  40430a:	js     0x4042cb
  40430c:	ret    
  40430d:	outs   dx,BYTE PTR ds:[esi]
  40430e:	dec    edx
  40430f:	lods   eax,DWORD PTR ds:[esi]
  404310:	jae    0x404306
  404312:	pminub mm2,QWORD PTR [edi+eax*1-0x2044c300]
  40431a:	gs jge 0x40437e
  40431d:	cs scas al,BYTE PTR es:[edi]
  40431f:	adc    eax,0x5b984b71
  404324:	(bad)  
  404325:	pop    esi
  404326:	outs   dx,DWORD PTR ds:[esi]
  404327:	mov    dh,dl
  404329:	pop    ebp
  40432a:	loope  0x40438e
  40432c:	mov    bh,0x4f
  40432e:	sbb    BYTE PTR [edx+0x33],bl
  404331:	cmp    edi,ebx
  404333:	add    DWORD PTR [eax],ecx
  404335:	add    al,0x5d
  404337:	adc    eax,DWORD PTR [edi-0x1d]
  40433a:	outs   dx,DWORD PTR ds:[esi]
  40433b:	inc    esp
  40433c:	lock pop ss
  40433e:	fcmove st,st(1)
  404340:	push   ebp
  404341:	shl    BYTE PTR [ebx-0x64],cl
  404344:	sbb    BYTE PTR [edx-0x6f48fe43],ch
  40434a:	(bad)  
  40434c:	das    
  40434d:	(bad)  
  40434e:	and    DWORD PTR [edx],edx
  404350:	pop    eax
  404351:	(bad)  
  404352:	mov    ebx,0x2620d9ea
  404357:	les    ecx,FWORD PTR ds:0x9b03b7a0
  40435d:	adc    al,0xef
  40435f:	out    dx,eax
  404360:	pop    es
  404361:	push   ss
  404362:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404364:	push   es
  404365:	aad    0xd0
  404367:	adc    al,ah
  404369:	(bad)  
  40436a:	mov    eax,ds:0x8fd6bc02
  40436f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404370:	sub    eax,0x1cadc9f9
  404375:	ja     0x4043af
  404377:	cli    
  404378:	icebp  
  404379:	and    esp,DWORD PTR [edx]
  40437b:	ret    
  40437c:	jno    0x40437e
  40437e:	push   eax
  40437f:	(bad)  [esi]
  404381:	mov    edx,ecx
  404383:	ss pushf 
  404385:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404387:	scas   eax,DWORD PTR es:[edi]
  404388:	repnz adc al,BYTE PTR [eax]
  40438b:	mov    eax,ds:0xd5ed3354
  404390:	je     0x404394
  404392:	fcom   QWORD PTR ss:[eax+0x55e47692]
  404399:	jl     0x404408
  40439b:	and    al,0xe5
  40439d:	sub    eax,0x1486d87c
  4043a2:	out    0xa8,al
  4043a4:	dec    ebx
  4043a5:	cmp    ebp,DWORD PTR [ecx+0x30]
  4043a8:	(bad)  
  4043a9:	fs data16 int3 
  4043ac:	or     al,0x2c
  4043ae:	xor    dh,BYTE PTR [edi+0x4603f966]
  4043b4:	shl    edx,1
  4043b6:	cdq    
  4043b7:	mov    BYTE PTR [ebp+0x194f4d76],dh
  4043bd:	xor    bl,al
  4043bf:	jns    0x404377
  4043c1:	leave  
  4043c2:	in     al,0xf9
  4043c4:	leave  
  4043c5:	inc    eax
  4043c6:	pusha  
  4043c7:	push   0xb387e31b
  4043cc:	dec    esi
  4043cd:	rol    BYTE PTR [eax-0x503a9416],1
  4043d3:	pop    eax
  4043d4:	jne    0x4043ad
  4043d6:	or     eax,esp
  4043d8:	sbb    dh,BYTE PTR [edx]
  4043da:	push   0xffffffc2
  4043dc:	lock sub al,0xe0
  4043df:	fldenv [esi-0x55]
  4043e2:	mov    ecx,0x38a45605
  4043e7:	ret    
  4043e8:	into   
  4043e9:	ret    
  4043ea:	sahf   
  4043eb:	inc    esp
  4043ec:	xchg   ebp,eax
  4043ed:	mov    ebx,0x5af419ff
  4043f2:	pop    ebp
  4043f3:	inc    esp
  4043f4:	and    eax,0x5d0599c5
  4043f9:	fwait
  4043fa:	out    0xbb,al
  4043fc:	test   DWORD PTR [edx],ebx
  4043fe:	inc    ebp
  4043ff:	div    DWORD PTR [esi+eax*2+0x151a2c95]
  404406:	(bad)  
  404407:	scas   eax,DWORD PTR es:[edi]
  404408:	imul   esi,DWORD PTR [esi+eiz*2-0x2b939b7b],0xa5658783
  404413:	or     al,0x4
  404415:	in     al,dx
  404416:	(bad)  
  404417:	int    0xfe
  404419:	xchg   ax,ax
  40441b:	ja     0x404497
  40441d:	fcmove st,st(7)
  40441f:	pop    es
  404420:	fistp  WORD PTR [edx+eax*1]
  404423:	cmp    edx,ecx
  404425:	mov    edx,es
  404427:	mov    edi,0x1abfaa02
  40442c:	sbb    al,0x8c
  40442e:	leave  
  40442f:	and    BYTE PTR [esi-0x1eee682b],0x83
  404436:	dec    ebx
  404437:	pop    es
  404438:	aam    0xd6
  40443a:	into   
  40443b:	fisttp QWORD PTR [ebx]
  40443d:	xor    bl,BYTE PTR [ecx-0x79f827ac]
  404443:	pop    esp
  404444:	int3   
  404445:	sbb    al,0xf3
  404447:	adc    eax,0x8941564e
  40444c:	xor    BYTE PTR [edi],dl
  40444e:	stos   DWORD PTR es:[edi],eax
  40444f:	cdq    
  404450:	mov    esp,0x2c64dc57
  404455:	mov    ch,0xa
  404457:	pop    esi
  404458:	pop    edx
  404459:	cmp    cl,cl
  40445b:	cdq    
  40445c:	and    DWORD PTR [ecx-0x2d9d263b],0x64bae9e2
  404466:	or     al,0xc3
  404468:	mov    esi,0x9d8a10c8
  40446d:	adc    edx,DWORD PTR [edx+0x5a]
  404470:	imul   eax,DWORD PTR [edx-0x6fd5e90d],0x61
  404477:	mov    ss,WORD PTR [edx+0x1ea1b2c0]
  40447d:	jb     0x40446b
  40447f:	hlt    
  404480:	mov    ebp,0x9045870b
  404485:	xchg   ecx,eax
  404486:	inc    ebx
  404487:	js     0x4044cd
  404489:	and    al,0x8d
  40448b:	test   eax,0xc0d627ba
  404490:	push   ebx
  404491:	pop    ds
  404492:	inc    eax
  404493:	scas   eax,DWORD PTR es:[edi]
  404494:	push   ss
  404495:	or     eax,0xffffff80
  404498:	push   0x7b
  40449a:	mov    ch,0x73
  40449c:	push   ss
  40449d:	mov    edi,0x6013f904
  4044a2:	(bad)  [esi+0x56d7c845]
  4044a8:	rcl    BYTE PTR [ebp-0x40],0x2e
  4044ac:	outs   dx,BYTE PTR ds:[esi]
  4044ad:	inc    esi
  4044ae:	jne    0x4044ea
  4044b0:	xor    eax,0xf51409c6
  4044b5:	push   edi
  4044b6:	lea    ebx,[edx-0x5e6c2676]
  4044bc:	fnsave [esi+0x23266f95]
  4044c2:	and    al,0x6d
  4044c4:	ret    0x8068
  4044c7:	das    
  4044c8:	dec    ecx
  4044c9:	nop
  4044ca:	enter  0xedc6,0x11
  4044ce:	shl    DWORD PTR [esi-0x5718aa76],cl
  4044d4:	xchg   DWORD PTR [si+0x34],ebp
  4044d8:	jl     0x4044d6
  4044da:	xor    al,0x9a
  4044dc:	lock div BYTE PTR [esi]
  4044df:	std    
  4044e0:	push   ebp
  4044e1:	daa    
  4044e2:	push   ds
  4044e3:	push   0x1d
  4044e5:	push   ss
  4044e6:	je     0x4044d9
  4044e8:	sbb    al,0x3
  4044ea:	adc    al,0x9e
  4044ec:	fwait
  4044ed:	sahf   
  4044ee:	inc    ebp
  4044ef:	pop    ss
  4044f0:	hlt    
  4044f1:	dec    DWORD PTR [edx+0x1743222f]
  4044f7:	ja     0x40451e
  4044f9:	push   ebp
  4044fa:	call   0xe51:0x8f0e64a
  404501:	xor    al,0xc5
  404503:	aad    0xd0
  404505:	out    0xaf,al
  404507:	xor    DWORD PTR [ebp-0x7b],eax
  40450a:	sbb    eax,0xa6a32e4
  40450f:	pop    ebp
  404510:	xor    al,0x4f
  404512:	lock sbb dl,0xda
  404516:	cmp    DWORD PTR [ecx-0x6176ad92],ebp
  40451c:	push   esp
  40451d:	adc    ebx,ebx
  40451f:	aas    
  404520:	loop   0x404542
  404522:	imul   esi,DWORD PTR [ecx+0x3e],0xfca79e8c
  404529:	jb     0x4044ab
  40452b:	adc    bl,BYTE PTR [ebp+edx*4+0x2d0ec28c]
  404532:	push   ds
  404533:	lea    edx,ds:0xf5bc598a
  404539:	xchg   ebp,eax
  40453a:	loope  0x4044ca
  40453c:	mov    edx,0x72f7e9eb
  404541:	pop    esi
  404542:	pop    es
  404543:	adc    eax,0x650187f0
  404548:	sti    
  404549:	xor    BYTE PTR [ecx-0x27],al
  40454c:	addr16 fcmove st,st(4)
  40454f:	or     DWORD PTR [esi+0x35cf48d5],ecx
  404555:	mov    edx,0x675bfc4
  40455a:	sub    cl,BYTE PTR [ebp+0x686a4c08]
  404560:	cmp    edi,DWORD PTR [ecx*8-0x4f9bf24f]
  404567:	cld    
  404568:	(bad)  
  404569:	fisttp QWORD PTR [edi-0x7ba57afe]
  40456f:	repz push ds
  404571:	retf   
  404572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404573:	xor    esi,DWORD PTR [eax+0x65]
  404576:	adc    dl,BYTE PTR [esi-0x3a]
  404579:	mov    ds:0xa1f693bc,eax
  40457e:	clc    
  40457f:	leave  
  404580:	stos   DWORD PTR es:[edi],eax
  404581:	jecxz  0x404509
  404583:	inc    esp
  404584:	and    eax,0xe17ec5
  404589:	xor    DWORD PTR [ebp+0x5a],0x3330a86e
  404590:	jl     0x40456f
  404592:	jns    0x40454d
  404594:	and    bh,BYTE PTR [esp+eax*1]
  404597:	ret    
  404598:	pop    ss
  404599:	jno    0x4045eb
  40459b:	sbb    eax,0xefdb0414
  4045a0:	shl    BYTE PTR [ecx],0xd
  4045a3:	mov    ch,0x63
  4045a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a6:	rcr    BYTE PTR [edx+0x25],0x29
  4045aa:	out    dx,al
  4045ab:	pop    ecx
  4045ac:	and    ah,ah
  4045ae:	test   eax,0x4353bfb8
  4045b3:	mov    edi,0x16f90f15
  4045b8:	sub    eax,0xa67bd7c5
  4045bd:	xor    BYTE PTR [eax],ah
  4045bf:	sbb    BYTE PTR [edx+eiz*4+0x31],bl
  4045c3:	sub    al,0x7
  4045c5:	dec    esp
  4045c6:	push   esp
  4045c7:	into   
  4045c8:	repz das 
  4045ca:	lods   eax,DWORD PTR ds:[esi]
  4045cb:	stos   BYTE PTR es:[edi],al
  4045cc:	dec    ecx
  4045cd:	inc    ecx
  4045ce:	(bad)  
  4045cf:	or     cx,WORD PTR [ecx]
  4045d2:	imul   edx,DWORD PTR [ecx+0x1],0x92420c3c
  4045d9:	sub    dl,BYTE PTR [edi+eiz*1]
  4045dc:	dec    eax
  4045dd:	push   ss
  4045de:	xchg   esi,eax
  4045df:	mov    al,ds:0x15fef934
  4045e4:	or     eax,0x60b29fea
  4045e9:	pop    ds
  4045ea:	es ss push edi
  4045ed:	jge    0x40464d
  4045ef:	stos   BYTE PTR es:[edi],al
  4045f0:	or     BYTE PTR [ecx+eiz*1],ch
  4045f3:	fadd   QWORD PTR [esi+ebp*8+0x67]
  4045f7:	dec    ebx
  4045f8:	mov    fs,WORD PTR [edi+0x4d2abe9a]
  4045fe:	adc    dl,BYTE PTR [ecx]
  404600:	and    bl,BYTE PTR [ebx]
  404602:	mov    ch,0x22
  404604:	jae    0x404592
  404606:	lods   eax,DWORD PTR ds:[esi]
  404607:	cwde   
  404608:	push   edx
  404609:	out    dx,eax
  40460a:	ss inc edi
  40460c:	in     eax,dx
  40460d:	sahf   
  40460e:	aad    0xff
  404610:	mov    bh,0x4c
  404612:	sar    DWORD PTR [esi-0x35c09cae],0x55
  404619:	jg     0x404626
  40461b:	mov    DWORD PTR [esi],esi
  40461d:	popa   
  40461e:	xor    esi,edx
  404620:	inc    ebp
  404621:	sbb    esi,esp
  404623:	fist   DWORD PTR [ebx]
  404625:	adc    eax,DWORD PTR [ecx]
  404627:	mov    ecx,0x1a1a19c7
  40462c:	push   es
  40462d:	add    eax,0x931ab5d1
  404632:	jae    0x40466d
  404634:	mov    BYTE PTR [ebp+0x63],dl
  404637:	test   al,0x57
  404639:	loope  0x4046b5
  40463b:	xor    ebx,DWORD PTR [ecx+ebx*8-0x72]
  40463f:	mov    DWORD PTR [edi-0xb],edi
  404642:	data16 mov dl,0xf0
  404645:	cmp    eax,DWORD PTR [edi-0x30]
  404648:	leave  
  404649:	lea    eax,[edi-0x9]
  40464c:	(bad)  
  40464d:	xor    BYTE PTR [ecx],ch
  40464f:	popf   
  404650:	test   eax,0xdc7055c0
  404655:	jae    0x404652
  404657:	xchg   ebp,eax
  404658:	fmul   QWORD PTR [ebx+ebx*8+0x7cd254f0]
  40465f:	pop    edi
  404660:	cld    
  404661:	jne    0x40464b
  404663:	int    0x96
  404665:	mul    edi
  404667:	into   
  404668:	int3   
  404669:	sub    esi,DWORD PTR [ebx-0x6ec763a2]
  40466f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404670:	pop    ds
  404671:	scas   eax,DWORD PTR es:[edi]
  404672:	cmc    
  404673:	sbb    edx,DWORD PTR [ebx-0x3d]
  404676:	xchg   edx,eax
  404677:	cmc    
  404678:	pushf  
  404679:	rcr    BYTE PTR [ebx-0x62ae97c8],cl
  40467f:	sbb    BYTE PTR [edi],bh
  404681:	loope  0x404656
  404683:	loop   0x40463a
  404685:	mov    cl,0xa8
  404687:	loope  0x404659
  404689:	mov    edx,0x1af217a0
  40468e:	add    ch,dh
  404690:	inc    edi
  404691:	mov    ch,0x1f
  404693:	sub    bh,BYTE PTR [ebx+0x2185d9e2]
  404699:	cs repnz loop 0x40464d
  40469d:	shr    BYTE PTR [esi],cl
  40469f:	outs   dx,DWORD PTR ds:[esi]
  4046a0:	mov    cl,0x72
  4046a2:	cdq    
  4046a3:	xchg   ebp,eax
  4046a4:	cdq    
  4046a5:	ins    DWORD PTR es:[edi],dx
  4046a6:	cmp    al,0xe3
  4046a8:	adc    DWORD PTR [edx-0x44],ebp
  4046ab:	mov    ebp,ebx
  4046ad:	adc    BYTE PTR ds:0x45fc064a,0xb9
  4046b4:	dec    edx
  4046b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b6:	lods   eax,DWORD PTR ds:[esi]
  4046b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b8:	test   eax,0x80ac408f
  4046bd:	xor    BYTE PTR [ebx+0x72],al
  4046c0:	sbb    eax,0x620e1f3
  4046c5:	aam    0xb0
  4046c7:	xchg   ebp,eax
  4046c8:	cwde   
  4046c9:	jne    0x4046e9
  4046cb:	fwait
  4046cc:	dec    edi
  4046cd:	pop    esp
  4046ce:	(bad)  [esp+eax*2+0x46]
  4046d2:	adc    eax,0x1ba6cae5
  4046d7:	jecxz  0x404732
  4046d9:	popa   
  4046da:	cmp    eax,0x67876eca
  4046df:	pop    ecx
  4046e0:	popa   
  4046e1:	test   eax,0x703f0700
  4046e6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4046e8:	ins    BYTE PTR es:[edi],dx
  4046e9:	lock je 0x40466d
  4046ec:	sbb    BYTE PTR [ebp+0x6a18b003],0x49
  4046f3:	pusha  
  4046f4:	(bad)  
  4046f5:	sbb    DWORD PTR [ecx-0x1f],eax
  4046f8:	xchg   ebp,eax
  4046f9:	sbb    dl,dl
  4046fb:	in     al,0xd2
  4046fd:	stos   DWORD PTR es:[edi],eax
  4046fe:	es add eax,0xb7c4d9d2
  404704:	idiv   BYTE PTR [esi+ecx*1-0x2729e755]
  40470b:	push   eax
  40470c:	add    ah,BYTE PTR [ebp-0x3f]
  40470f:	gs aam 0x72
  404712:	vmread DWORD PTR [eax+0x80784a2],ebp
  404719:	inc    esi
  40471a:	in     eax,dx
  40471b:	enter  0x6354,0x1e
  40471f:	cmp    BYTE PTR [ebx-0x5b4db57b],bl
  404725:	ret    0x2593
  404728:	inc    ecx
  404729:	and    ch,BYTE PTR [ebx+ebp*2]
  40472c:	or     eax,0x24aa1f14
  404731:	push   ecx
  404732:	call   0xe693:0xc9a1f11f
  404739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473a:	das    
  40473b:	retf   0x7ea3
  40473e:	jnp    0x404756
  404740:	ret    
  404741:	push   0xeac1bb8e
  404746:	sbb    ecx,esi
  404748:	cmp    eax,0x24982318
  40474d:	mov    eax,ds:0xd335b7b4
  404752:	in     al,dx
  404753:	aam    0x2c
  404755:	mov    ah,0x51
  404757:	inc    edi
  404758:	jg     0x4047b7
  40475a:	bound  esp,QWORD PTR [ecx-0x2483067f]
  404760:	sbb    ch,bl
  404762:	sbb    bh,bl
  404764:	rcr    BYTE PTR [ecx],1
  404766:	pop    eax
  404767:	les    ecx,FWORD PTR [ebx-0x4c]
  40476a:	sbb    al,0x76
  40476c:	jbe    0x4047a7
  40476e:	or     BYTE PTR [eax+0x3bb640cc],ah
  404774:	cwde   
  404775:	test   BYTE PTR [bx+di-0x11],bl
  404779:	stc    
  40477a:	jge    0x4047b4
  40477c:	xchg   ah,ah
  40477e:	and    BYTE PTR [ecx-0x5b],0x23
  404782:	xchg   esp,eax
  404783:	in     eax,0x8e
  404785:	int3   
  404786:	mov    ah,0xcb
  404788:	or     BYTE PTR [eax+0x760db05f],ah
  40478e:	xor    ebx,0x37b7538c
  404794:	xor    esi,DWORD PTR [edx+0x4e]
  404797:	ror    BYTE PTR ds:0x3e101c1a,1
  40479d:	inc    esp
  40479e:	cmp    BYTE PTR [edi],bh
  4047a0:	sbb    DWORD PTR [edi],edx
  4047a2:	leave  
  4047a3:	icebp  
  4047a4:	frstor [edx+0x11]
  4047a7:	cmp    eax,0xa598e535
  4047ac:	cmp    esp,DWORD PTR [esp+ecx*1-0x66e7153b]
  4047b3:	push   esp
  4047b4:	mov    eax,0x8603a273
  4047b9:	in     al,dx
  4047ba:	add    esi,DWORD PTR [edx+0x2a093839]
  4047c0:	test   DWORD PTR [edi+0x4b],edx
  4047c3:	in     al,dx
  4047c4:	mov    ds:0x5828312,eax
  4047c9:	fdivr  QWORD PTR [edi+0x35]
  4047cc:	shld   DWORD PTR [esi+0x67],edx,0x43
  4047d1:	(bad)  
  4047d2:	lea    esp,fs:0x3570b555
  4047d9:	ds in  al,0x9c
  4047dc:	push   ebp
  4047dd:	test   ebx,ebp
  4047df:	or     DWORD PTR [esi],ecx
  4047e1:	push   edx
  4047e2:	mov    DWORD PTR [ebx+0xe],ebx
  4047e5:	or     DWORD PTR [eax],ebp
  4047e7:	fidivr WORD PTR [ebx+edx*4-0x48ae7ae2]
  4047ee:	(bad)  
  4047ef:	ss aad 0xc0
  4047f2:	aad    0xf3
  4047f4:	pop    ds
  4047f5:	xor    cl,dl
  4047f7:	dec    ecx
  4047f8:	fmul   st,st(7)
  4047fa:	outs   dx,BYTE PTR ds:[esi]
  4047fb:	cmp    esp,DWORD PTR [ebx]
  4047fd:	enter  0x6fe1,0xa3
  404801:	jne    0x404852
  404803:	mov    ch,0x39
  404805:	push   edx
  404806:	add    ebp,edi
  404808:	int3   
  404809:	test   eax,0x65b70df4
  40480e:	xor    dl,0x9a
  404811:	lds    edx,FWORD PTR [ecx]
  404813:	inc    ebp
  404814:	mov    al,0x30
  404816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404817:	jno    0x4047c2
  404819:	or     edx,DWORD PTR [ebx-0x5c]
  40481c:	inc    ebp
  40481d:	sahf   
  40481e:	pop    edi
  40481f:	and    eax,0xa4b3c2a8
  404824:	mov    ds:0xba0e6a07,al
  404829:	fnstenv [eax+0xf]
  40482c:	cmp    ebx,DWORD PTR [ebx+0xe]
  40482f:	test   al,0x5b
  404831:	out    dx,al
  404832:	mov    edx,0x6e6372f9
  404837:	scas   eax,DWORD PTR es:[edi]
  404838:	(bad)  
  404839:	lahf   
  40483a:	adc    BYTE PTR [edx+ecx*8+0x3e31350],ah
  404841:	das    
  404842:	pop    ss
  404843:	mov    eax,ds:0x7e945fb6
  404848:	mov    esi,0x4f97dcd0
  40484d:	sbb    eax,0x1257a65b
  404852:	outs   dx,BYTE PTR ds:[esi]
  404853:	int    0x98
  404855:	and    al,BYTE PTR [edx-0x7c]
  404858:	addr16 jno 0x4048b0
  40485b:	push   0xffffffcc
  40485d:	xchg   edx,eax
  40485e:	adc    ch,BYTE PTR [edx+0xb88d426]
  404864:	ins    DWORD PTR es:[edi],dx
  404865:	or     BYTE PTR [ebx],dh
  404867:	fs xchg esi,eax
  404869:	and    DWORD PTR [ebx],esp
  40486b:	addr16 cld 
  40486d:	in     eax,dx
  40486e:	mov    cl,0x41
  404870:	je     0x40480f
  404872:	mov    ebp,DWORD PTR [ebp-0x4d036f40]
  404878:	aas    
  404879:	mov    ds:0xc50a415f,al
  40487e:	sub    BYTE PTR [ecx-0x4b27d64a],0xde
  404885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404886:	add    eax,0xa8bf9b14
  40488b:	sbb    edi,ecx
  40488d:	fsubr  QWORD PTR [eax+0x52144915]
  404893:	ins    DWORD PTR es:[edi],dx
  404894:	mov    edx,0x1a7b8649
  404899:	push   0xffffff8b
  40489b:	sub    DWORD PTR [edi+0x1],ebx
  40489e:	push   ss
  40489f:	push   eax
  4048a0:	jl     0x4048f7
  4048a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a3:	stc    
  4048a4:	sbb    eax,0x80c3abbe
  4048a9:	ret    
  4048aa:	mov    DWORD PTR [esi+0x2f],0x390aa6c
  4048b1:	mov    ecx,0x62c9738b
  4048b6:	(bad)  
  4048b7:	dec    eax
  4048b8:	mov    ds:0xe2c96e27,al
  4048bd:	clc    
  4048be:	mov    eax,ds:0xcc372b7d
  4048c3:	in     al,0x94
  4048c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048c6:	jp     0x4048a5
  4048c8:	jne    0x4048b1
  4048ca:	repnz pop ebx
  4048cc:	mov    ch,BYTE PTR [eax-0x2e328ee5]
  4048d2:	xor    eax,0xbe85814
  4048d7:	(bad)  
  4048d8:	imul   DWORD PTR [edx-0x80]
  4048db:	push   edi
  4048dc:	fdivr  st(6),st
  4048de:	fbstp  TBYTE PTR [eax]
  4048e0:	xchg   esi,eax
  4048e1:	dec    ecx
  4048e2:	sub    al,0xad
  4048e4:	popf   
  4048e5:	jns    0x404875
  4048e7:	jmp    0x9588ed91
  4048ec:	(bad)  
  4048ed:	sbb    al,0x28
  4048ef:	rcr    ebx,0x2e
  4048f2:	mov    dl,0x8b
  4048f4:	call   0x679d041d
  4048f9:	sub    al,cl
  4048fb:	mov    ebx,0xc770781c
  404900:	or     eax,0xab2a97f7
  404905:	inc    edx
  404906:	xor    al,0x44
  404909:	imul   ebx,DWORD PTR ds:0x5d837d3b,0x94da6d9f
  404913:	cmp    eax,0x6fd30c38
  404918:	and    ch,BYTE PTR [ebx-0x34f925f4]
  40491e:	sbb    al,0x13
  404920:	stos   BYTE PTR es:[edi],al
  404921:	sbb    DWORD PTR [ebp+0x33135530],esi
  404927:	test   cl,cl
  404929:	ror    BYTE PTR [esi-0x82b366f],0x34
  404930:	jmp    0x8884:0x37e43a12
  404937:	adc    al,0x20
  404939:	mov    esi,0xe163e80b
  40493e:	jg     0x4049ba
  404940:	ds retf 
  404942:	dec    ecx
  404943:	mov    BYTE PTR [ecx],0x21
  404946:	sbb    DWORD PTR [eax+0xbbe7822],ecx
  40494c:	retf   
  40494d:	pop    ds
  40494e:	imul   esi,edi,0xffffffd7
  404951:	fs mov ecx,0x4c61bad7
  404957:	jae    0x404921
  404959:	sub    eax,0x34c0b9e0
  40495e:	dec    eax
  40495f:	shl    BYTE PTR [ebp-0xf],0xf0
  404963:	pusha  
  404964:	xchg   ebp,eax
  404965:	dec    ebp
  404966:	push   ss
  404967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404968:	push   ds
  404969:	dec    edx
  40496a:	cmp    ecx,DWORD PTR [edx+eax*8]
  40496d:	dec    ebx
  40496e:	ffreep st(1)
  404970:	jle    0x40491d
  404972:	add    eax,0x6afd6a02
  404977:	cmp    BYTE PTR [edi],0x53
  40497a:	ficomp DWORD PTR [esi]
  40497c:	in     eax,0xf
  40497e:	xlat   BYTE PTR ds:[ebx]
  40497f:	or     eax,0x72fdc287
  404984:	cmp    DWORD PTR [edx-0x733922a],esi
  40498a:	cmc    
  40498b:	mov    ebp,0xd9de5527
  404990:	push   ebp
  404991:	xchg   edi,eax
  404992:	out    0xaa,eax
  404994:	add    eax,0xbb4acd32
  404999:	ret    
  40499a:	jmp    0x884663d1
  40499f:	jmp    0x7afab069
  4049a4:	add    DWORD PTR [edi+0x7df0db17],esi
  4049aa:	adc    BYTE PTR ds:0x542a6055,dh
  4049b0:	in     eax,0xb8
  4049b2:	push   0x6a
  4049b4:	inc    edx
  4049b5:	shl    DWORD PTR [eax+0x3c],0xd4
  4049b9:	lods   al,BYTE PTR ds:[esi]
  4049ba:	jbe    0x404a1d
  4049bc:	aad    0xda
  4049be:	out    dx,eax
  4049bf:	pop    ecx
  4049c0:	pop    esp
  4049c1:	mov    dh,0x52
  4049c3:	lea    esp,[esi]
  4049c5:	das    
  4049c6:	sbb    eax,0x320a2ce0
  4049cb:	in     al,dx
  4049cc:	daa    
  4049cd:	jae    0x4049c3
  4049cf:	(bad)  
  4049d0:	adc    DWORD PTR [eax],esi
  4049d2:	mov    BYTE PTR [ebp+0x6580df6b],al
  4049d8:	add    ah,0x8f
  4049db:	sbb    al,0x51
  4049dd:	shl    BYTE PTR [edi-0x762fc494],cl
  4049e3:	xor    ebx,ebx
  4049e5:	xchg   edi,eax
  4049e6:	in     eax,0xe8
  4049e8:	mov    ah,0x7
  4049ea:	jl     0x4049b1
  4049ec:	push   es
  4049ed:	inc    ebx
  4049ee:	(bad)  
  4049ef:	leave  
  4049f0:	add    eax,0xffffffa2
  4049f3:	jle    0x4049e3
  4049f5:	push   esi
  4049f6:	pop    ds
  4049f7:	xchg   ebx,eax
  4049f8:	mov    edi,0xf3a73c89
  4049fd:	scas   eax,DWORD PTR es:[edi]
  4049fe:	pop    es
  4049ff:	jmp    0x404a10
  404a01:	xor    ah,BYTE PTR [ebx-0x46d86e80]
  404a07:	ja     0x404a3f
  404a09:	push   es
  404a0a:	adc    BYTE PTR [eax],al
  404a0c:	inc    ebp
  404a0d:	xchg   ebx,eax
  404a0e:	call   0x57a7:0x58c51ff3
  404a15:	cs push 0xcb83f068
  404a1b:	push   ebp
  404a1c:	push   ecx
  404a1d:	shr    BYTE PTR [eax+0x33],0xf7
  404a21:	sti    
  404a22:	imul   ebx,DWORD PTR [eax],0xffffffec
  404a25:	jg     0x404a45
  404a27:	aaa    
  404a28:	daa    
  404a29:	adc    edx,DWORD PTR [ecx]
  404a2b:	xor    eax,0x86e9f72b
  404a30:	lahf   
  404a31:	cmp    esp,esi
  404a33:	fldcw  WORD PTR [ebp-0x5f]
  404a36:	jmp    0x9cef10bf
  404a3b:	pop    ecx
  404a3c:	mov    edx,0x33adaf0f
  404a41:	mov    dl,0xf1
  404a43:	outs   dx,DWORD PTR ds:[esi]
  404a44:	sbb    al,0x7f
  404a46:	inc    esi
  404a47:	mov    ds:0xad8cfad3,eax
  404a4c:	lods   eax,DWORD PTR ds:[esi]
  404a4d:	daa    
  404a4e:	loop   0x404a75
  404a50:	push   eax
  404a51:	mov    eax,0xc885a70e
  404a56:	mov    cl,0x34
  404a58:	shl    esp,0xd1
  404a5b:	sub    dh,BYTE PTR [eax-0x71297f4]
  404a61:	jns    0x404ae0
  404a63:	add    ebp,edx
  404a65:	push   ds
  404a66:	call   0xa7ae:0x27914e70
  404a6d:	jo     0x4049f6
  404a6f:	(bad)  
  404a70:	(bad)  
  404a71:	lahf   
  404a72:	dec    edx
  404a73:	shl    ch,cl
  404a75:	adc    esi,DWORD PTR [ebp+ebx*8+0x2b68d2dc]
  404a7c:	(bad)  
  404a7d:	shl    DWORD PTR [edx+0x1867c0c4],1
  404a83:	xchg   BYTE PTR [ebx-0x12],bh
  404a86:	cmp    eax,0x3415ddd8
  404a8b:	je     0x404b02
  404a8d:	xchg   esi,eax
  404a8e:	ss mov cl,0x81
  404a91:	mov    ch,BYTE PTR [edx]
  404a93:	ja     0x404a7a
  404a95:	sub    edi,edx
  404a97:	outs   dx,DWORD PTR ds:[esi]
  404a98:	add    BYTE PTR [ebx+0x5c3c3ddd],al
  404a9e:	jno    0x404a49
  404aa0:	clc    
  404aa1:	xchg   DWORD PTR [ebp-0x408461d7],ebp
  404aa7:	call   0xdcf2:0xfa4564b2
  404aae:	cmp    eax,0xf9a15f64
  404ab3:	mul    DWORD PTR ds:0xbdac7b7
  404ab9:	fisttp DWORD PTR [eax+0x651186c2]
  404abf:	setnp  BYTE PTR [edi-0xfbf08ad]
  404ac6:	adc    BYTE PTR [ebp+0x15],ah
  404ac9:	push   esi
  404aca:	fnstenv [ebx+0x3]
  404acd:	lea    edi,[edx-0x10ba9b7f]
  404ad3:	adc    ebx,edx
  404ad5:	or     BYTE PTR [ecx-0x7f],0x1e
  404ad9:	in     al,dx
  404ada:	les    edi,FWORD PTR [ebx]
  404adc:	mov    edi,0xe1469a65
  404ae1:	and    eax,0x5fdb9e8f
  404ae6:	pop    ebp
  404ae7:	xchg   ecx,eax
  404ae8:	mov    eax,ds:0x6fb926b4
  404aed:	add    BYTE PTR [ecx-0x61],ch
  404af0:	rol    DWORD PTR [esi+0x9],cl
  404af3:	and    al,0x55
  404af5:	mov    al,BYTE PTR [ebp-0x1c]
  404af8:	xchg   bx,ax
  404afa:	jle    0x404a8c
  404afc:	mov    bl,0x9d
  404afe:	(bad)  
  404aff:	addr16 div ebx
  404b02:	mov    ecx,0x8dfc2814
  404b07:	fiadd  WORD PTR [ecx-0x71cdf647]
  404b0d:	xor    DWORD PTR [edi+0x44],0xffffffdd
  404b11:	ins    DWORD PTR es:[edi],dx
  404b12:	mov    eax,0xb277cb05
  404b17:	(bad)  
  404b18:	ficomp WORD PTR [edi+0x5e4a9d49]
  404b1e:	or     al,0x96
  404b20:	call   0x316e:0xec2a9490
  404b27:	shl    dh,0xae
  404b2a:	shl    BYTE PTR [ecx+0x1a],1
  404b2d:	dec    eax
  404b2e:	clc    
  404b2f:	xchg   edx,eax
  404b30:	add    al,0xe1
  404b32:	mov    dh,0xa2
  404b34:	push   ecx
  404b35:	sbb    dl,BYTE PTR [edx+0x1b]
  404b38:	rcr    BYTE PTR [edx+edx*8],0x5f
  404b3c:	clc    
  404b3d:	inc    eax
  404b3e:	and    eax,ebp
  404b40:	(bad)  
  404b41:	loopne 0x404b27
  404b43:	jns    0x404b18
  404b45:	sub    edi,ebp
  404b47:	cmp    eax,0x25685bf3
  404b4c:	in     al,dx
  404b4d:	adc    ebp,DWORD PTR [esi]
  404b4f:	jmp    0x86cb:0x537d1999
  404b56:	fnstenv ds:0x8f311686
  404b5c:	inc    edx
  404b5d:	mov    ebx,0x19f55b17
  404b62:	cmc    
  404b63:	inc    ecx
  404b64:	mov    al,ds:0x2acd1c65
  404b69:	or     edi,ebp
  404b6b:	call   0x3fb13c9f
  404b70:	fs nop
  404b72:	mov    ds:0x3bb4a11a,eax
  404b77:	or     DWORD PTR [ebp+0x1e747904],ebp
  404b7d:	push   0x16
  404b7f:	jmp    0x7a535be7
  404b84:	ins    BYTE PTR es:[edi],dx
  404b85:	call   0xdbc2d01a
  404b8a:	push   ds
  404b8b:	cmp    DWORD PTR [edx],esi
  404b8d:	dec    edx
  404b8e:	push   0x6b
  404b90:	sbb    ah,BYTE PTR [esp+eax*2]
  404b93:	jmp    0x6181c717
  404b98:	or     dl,BYTE PTR [eax+0x297b2ca6]
  404b9e:	or     ecx,DWORD PTR [esi]
  404ba0:	adc    ch,cl
  404ba2:	call   0x7d05311b
  404ba7:	popa   
  404ba8:	mov    BYTE PTR [ebx-0x5e],ah
  404bab:	and    eax,0xebe0ab5a
  404bb0:	scas   al,BYTE PTR es:[edi]
  404bb1:	sbb    bh,BYTE PTR ds:0x64e83601
  404bb7:	jmp    0x702b421b
  404bbc:	jle    0x404be4
  404bbe:	(bad)  
  404bbf:	mov    eax,0xbaceb73a
  404bc4:	sbb    al,0x1c
  404bc6:	shr    bl,cl
  404bc8:	push   es
  404bc9:	and    al,0xc1
  404bcb:	aas    
  404bcc:	add    al,0xa2
  404bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bcf:	in     eax,0x11
  404bd1:	cmp    bh,BYTE PTR ds:[edx+0x2baae1e5]
  404bd8:	faddp  st(0),st
  404bda:	ror    DWORD PTR [edx+0x66],0x37
  404bde:	imul   eax,DWORD PTR [edx-0x21],0x21
  404be2:	paddq  mm2,QWORD PTR [edi]
  404be5:	or     al,0x32
  404be7:	mov    cl,0xd1
  404be9:	ins    BYTE PTR es:[edi],dx
  404bea:	js     0x404c2e
  404bec:	jecxz  0x404b88
  404bee:	mov    ebp,0xbc551616
  404bf3:	loopne 0x404ba2
  404bf5:	rol    BYTE PTR [eax+0x21ae3789],0xa5
  404bfc:	out    dx,al
  404bfd:	cmp    DWORD PTR [esp+eax*4],esp
  404c00:	mov    ch,0x49
  404c02:	or     BYTE PTR [esi-0x36],bl
  404c05:	jle    0x404c6c
  404c07:	ds xor bl,bl
  404c0a:	mov    al,ds:0x23f9a019
  404c0f:	pop    ebp
  404c10:	add    ebp,edx
  404c12:	and    al,0xcc
  404c14:	sub    DWORD PTR [ebp+0x32],ebx
  404c17:	mov    BYTE PTR [esi],dl
  404c19:	ins    DWORD PTR es:[edi],dx
  404c1a:	push   0xffffff9f
  404c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c1d:	dec    edi
  404c1e:	pop    es
  404c1f:	es xchg esi,eax
  404c21:	mov    dh,0x2f
  404c23:	inc    esi
  404c24:	fs aam 0xfa
  404c27:	sbb    edx,DWORD PTR [edx-0x3641438]
  404c2d:	push   0x44dc85d9
  404c32:	shr    eax,1
  404c34:	gs push ds
  404c36:	hlt    
  404c37:	stos   BYTE PTR es:[edi],al
  404c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c39:	dec    ebp
  404c3a:	jp     0x404c3a
  404c3c:	adc    al,0xd2
  404c3e:	xchg   edi,eax
  404c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c40:	lods   eax,DWORD PTR ds:[esi]
  404c41:	btc    DWORD PTR [eax+0x2633ba86],ecx
  404c48:	lods   eax,DWORD PTR ds:[esi]
  404c49:	mov    ds:0x7ed1c6c6,eax
  404c4e:	aam    0x47
  404c50:	lahf   
  404c51:	adc    BYTE PTR [esi+0x27],0x3b
  404c55:	inc    edi
  404c56:	out    0x4f,eax
  404c58:	dec    esi
  404c59:	shr    DWORD PTR [ecx+0x64aabc04],cl
  404c5f:	mov    bh,0x4a
  404c61:	mov    edx,0xc808c03f
  404c66:	mov    BYTE PTR [esi],0x17
  404c69:	into   
  404c6a:	sbb    DWORD PTR [ebp+0x79750ba2],0xffffffa4
  404c71:	aas    
  404c72:	es and al,0x7f
  404c75:	inc    edi
  404c76:	psrad  mm0,QWORD PTR [eax]
  404c79:	mov    ss,WORD PTR [ecx-0x5cc6ce49]
  404c7f:	inc    ecx
  404c80:	fistp  QWORD PTR [ecx+eax*2-0x3d]
  404c84:	mov    esi,0x530b5cf1
  404c89:	lock out dx,al
  404c8b:	call   0x861d:0xd800b8d5
  404c92:	lock fs cli 
  404c95:	out    0xf8,eax
  404c97:	dec    ebp
  404c98:	pusha  
  404c99:	fiadd  WORD PTR [esi]
  404c9b:	push   ds
  404c9c:	jmp    0xd87f57ee
  404ca1:	pushf  
  404ca2:	pop    ds
  404ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca4:	daa    
  404ca5:	add    cl,BYTE PTR [esi-0x6a]
  404ca8:	sbb    eax,0xbcf56545
  404cad:	ret    0xffe3
  404cb0:	test   al,0xb4
  404cb2:	ins    BYTE PTR es:[edi],dx
  404cb3:	jp     0x404d2c
  404cb5:	in     eax,dx
  404cb6:	js     0x404ce7
  404cb8:	rol    BYTE PTR [edi-0x38a47d00],1
  404cbe:	inc    ebx
  404cbf:	and    cl,bh
  404cc1:	arpl   WORD PTR [ebp-0x30],bx
  404cc4:	mov    ds:0x5849fb0c,eax
  404cc9:	lea    esp,[esi-0x1fd77d43]
  404ccf:	adc    ch,bl
  404cd1:	(bad)  
  404cd2:	cmp    al,0x15
  404cd4:	outs   dx,DWORD PTR ds:[esi]
  404cd5:	inc    edx
  404cd6:	mov    esi,0x4f7fc1a6
  404cdb:	data16 cld 
  404cdd:	jno    0x404d51
  404cdf:	mov    edi,0x865a7074
  404ce5:	clc    
  404ce6:	jae    0x404c70
  404ce8:	xchg   edi,eax
  404ce9:	xchg   esi,eax
  404cea:	aad    0xe9
  404cec:	xchg   edi,eax
  404ced:	es ja  0x404d56
  404cf0:	dec    esp
  404cf1:	scas   eax,DWORD PTR es:[edi]
  404cf2:	lock mov edi,esp
  404cf5:	push   esp
  404cf6:	lods   al,BYTE PTR ds:[esi]
  404cf7:	jne    0x404d6e
  404cf9:	lods   al,BYTE PTR ds:[esi]
  404cfa:	xor    edi,edx
  404cfc:	mov    ebx,0x70fcb544
  404d01:	(bad)  
  404d02:	jmp    0x11dc7e3d
  404d07:	(bad)  
  404d08:	xor    cl,al
  404d0a:	adc    ah,bl
  404d0c:	fsubp  st(5),st
  404d0e:	cmp    cl,BYTE PTR [edi-0x7edb9bb1]
  404d14:	dec    ebp
  404d15:	mov    ecx,DWORD PTR [ebx-0x4d]
  404d18:	outs   dx,BYTE PTR ds:[esi]
  404d19:	or     BYTE PTR [ebx-0x16903661],bh
  404d1f:	dec    esp
  404d20:	mov    ?,ebp
  404d22:	fwait
  404d23:	cwde   
  404d24:	(bad)  
  404d25:	mov    ebx,0xb0b56cb
  404d2a:	jb     0x404d61
  404d2c:	loop   0x404d2c
  404d2e:	inc    esp
  404d2f:	cmp    DWORD PTR [ebx],ecx
  404d31:	js     0x404ced
  404d33:	sub    al,0x82
  404d35:	das    
  404d36:	jnp    0x404d55
  404d38:	sub    al,0x41
  404d3a:	pusha  
  404d3b:	push   ecx
  404d3c:	push   esi
  404d3d:	sbb    BYTE PTR [edx-0xa],bh
  404d40:	fbld   TBYTE PTR [esi-0x18]
  404d43:	fwait
  404d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d45:	aaa    
  404d46:	dec    esi
  404d47:	lods   eax,DWORD PTR ds:[esi]
  404d48:	lock fistp DWORD PTR [ebx]
  404d4b:	jns    0x404d5e
  404d4d:	jns    0x404d26
  404d4f:	dec    ebp
  404d50:	adc    BYTE PTR [eax],cl
  404d52:	inc    esp
  404d53:	(bad)
  404d56:	sub    eax,0xd9ac18d8
  404d5b:	(bad)  
  404d5c:	add    eax,0x1d943249
  404d61:	arpl   bx,si
  404d63:	push   0xffffffca
  404d65:	xchg   ecx,eax
  404d66:	in     eax,0x57
  404d68:	iret   
  404d69:	lahf   
  404d6a:	daa    
  404d6b:	or     dh,al
  404d6d:	pop    ecx
  404d6e:	les    edi,FWORD PTR [ebx+0x30d009f2]
  404d74:	mov    ecx,0xfda47a78
  404d79:	ins    DWORD PTR es:[edi],dx
  404d7a:	push   eax
  404d7b:	cwde   
  404d7c:	jno    0x404d64
  404d7e:	out    0xd6,al
  404d80:	loope  0x404d38
  404d82:	mov    edx,0x995f6244
  404d87:	ret    0x52b1
  404d8a:	cld    
  404d8b:	repnz pushfw 
  404d8e:	and    eax,DWORD PTR [eax]
  404d90:	pop    esp
  404d91:	push   edx
  404d92:	push   ecx
  404d93:	sahf   
  404d94:	inc    ebx
  404d95:	inc    edx
  404d97:	(bad)  
  404d98:	(bad)  ds:0x93dd1ace
  404d9e:	cmp    BYTE PTR [eax+0x25],cl
  404da1:	pop    ebp
  404da2:	mov    esi,0xb5f95677
  404da7:	sar    DWORD PTR [ecx+0x7bf11a56],cl
  404dad:	mov    dl,0xbe
  404daf:	jge    0x404dbb
  404db1:	mov    bh,0x24
  404db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db4:	retf   
  404db5:	add    bh,BYTE PTR [edi]
  404db7:	test   al,0x38
  404db9:	sub    BYTE PTR [ecx-0x53efe58],cl
  404dbf:	xchg   edx,eax
  404dc0:	mov    eax,0xe86abebe
  404dc5:	mov    DWORD PTR [eax-0x634f6bc4],ebp
  404dcb:	sbb    edi,ecx
  404dcd:	inc    esp
  404dce:	std    
  404dcf:	aas    
  404dd0:	js     0x404e49
  404dd2:	(bad)  
  404dd3:	xor    BYTE PTR [edi-0x3e],dl
  404dd6:	cmp    ah,BYTE PTR [ebp+ebx*8-0xd69a2e5]
  404ddd:	clc    
  404dde:	out    dx,eax
  404ddf:	lods   eax,DWORD PTR ds:[esi]
  404de0:	dec    edx
  404de1:	xchg   ecx,eax
  404de2:	jle    0x404df2
  404de4:	and    DWORD PTR [ecx+ecx*8+0x8],ebx
  404de8:	pop    edi
  404de9:	stc    
  404dea:	mov    eax,ds:0x75a47cd4
  404def:	mov    esp,0xa7a1a6e6
  404df4:	sbb    ah,BYTE PTR [ebp-0x32]
  404df7:	not    BYTE PTR [edi+0xc]
  404dfa:	add    al,0xd
  404dfc:	in     al,0x2d
  404dfe:	je     0x404dcb
  404e00:	into   
  404e01:	jne    0x404dc5
  404e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e04:	jbe    0x404dc0
  404e06:	loope  0x404e46
  404e08:	sub    al,0x1a
  404e0a:	fsubrp st(0),st
  404e0c:	fwait
  404e0d:	test   eax,0xf8fc667a
  404e12:	jno    0x404e69
  404e14:	cmp    ecx,esp
  404e16:	pop    esi
  404e17:	jnp    0x404e6a
  404e19:	sbb    eax,0x8f65db8b
  404e1e:	iret   
  404e1f:	pop    ebp
  404e20:	aaa    
  404e21:	pop    ds
  404e22:	or     bl,BYTE PTR ds:0x93d1a398
  404e28:	fwait
  404e29:	inc    ecx
  404e2a:	inc    ebx
  404e2b:	loop   0x404e2d
  404e2d:	jmp    0xf341:0x4b6ac732
  404e34:	dec    esp
  404e35:	stc    
  404e36:	clc    
  404e37:	cmc    
  404e38:	cli    
  404e39:	pop    esi
  404e3a:	jl     0x404e54
  404e3c:	test   al,0x95
  404e3e:	test   BYTE PTR [esi-0x45c4e2ac],0x3a
  404e45:	add    BYTE PTR [esp+edi*4-0x5ba9af],0xd2
  404e4d:	xchg   edi,eax
  404e4e:	dec    ebx
  404e4f:	aas    
  404e50:	jl     0x404e3f
  404e52:	mov    al,0xf3
  404e54:	out    0xf3,eax
  404e56:	iret   
  404e57:	pop    ecx
  404e58:	into   
  404e59:	inc    ecx
  404e5a:	sbb    eax,0x59f01c56
  404e5f:	pop    ebx
  404e60:	add    ah,BYTE PTR [esi+0x3f]
  404e63:	outs   dx,BYTE PTR ds:[esi]
  404e64:	mov    edx,0xf9e019e4
  404e69:	mov    ch,0x1c
  404e6b:	icebp  
  404e6c:	and    BYTE PTR [ebp-0x4f8f32c8],ch
  404e72:	jg     0x404e2f
  404e74:	lock jmp 0x78160f
  404e7a:	or     al,0x36
  404e7c:	retf   0xce7e
  404e7f:	fnstenv [eax+0x52]
  404e82:	imul   esp,DWORD PTR ds:0xbddd9bf6,0x2085ac85
  404e8c:	pop    eax
  404e8d:	pop    ds
  404e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8f:	jae    0x404e31
  404e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e92:	call   0x53ce:0x46fa651a
  404e99:	push   eax
  404e9a:	sub    edi,esi
  404e9c:	in     eax,0xe2
  404e9e:	test   DWORD PTR [eax-0x1e],eax
  404ea1:	pop    es
  404ea2:	push   ds
  404ea3:	dec    eax
  404ea4:	cmp    eax,0x55dd3139
  404ea9:	mov    ds:0x6723a0c2,al
  404eae:	adc    eax,0xfd376372
  404eb3:	xchg   ebp,eax
  404eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb5:	or     esi,DWORD PTR [edi+0x48]
  404eb8:	aam    0x9d
  404eba:	dec    esi
  404ebb:	mov    dl,BYTE PTR [edi]
  404ebd:	in     eax,0xfb
  404ebf:	mov    ecx,0xa9325ca4
  404ec4:	pop    edi
  404ec5:	and    eax,0x9a16c606
  404eca:	or     eax,0x9c024688
  404ecf:	adc    DWORD PTR [ecx+0x3231a9ad],ebp
  404ed5:	pop    ds
  404ed6:	(bad)  
  404ed7:	fwait
  404ed8:	ins    BYTE PTR es:[edi],dx
  404ed9:	push   esp
  404eda:	push   0x44
  404edc:	cmc    
  404edd:	xchg   edi,eax
  404ede:	add    DWORD PTR [ecx-0x2d],0xaf1f5b76
  404ee5:	push   cs
  404ee6:	sub    dl,ah
  404ee8:	mov    ?,WORD PTR [edx+0x4]
  404eeb:	out    0x37,al
  404eed:	xor    dl,bh
  404eef:	xor    edx,edx
  404ef1:	mov    ebp,0x5764c7a
  404ef6:	cli    
  404ef7:	fidiv  WORD PTR ds:0x15b52b2
  404efd:	add    ch,ah
  404eff:	inc    edi
  404f00:	and    esi,DWORD PTR [edi+0x5da7ca3d]
  404f06:	aaa    
  404f07:	pop    edi
  404f08:	jno    0x404f76
  404f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0b:	aaa    
  404f0c:	xor    bl,BYTE PTR [ecx-0x67d1f653]
  404f12:	xor    DWORD PTR [edx+0x52],esp
  404f15:	dec    esp
  404f16:	arpl   WORD PTR [eax-0x7d],dx
  404f19:	pop    edi
  404f1a:	mov    al,ds:0x891c801c
  404f1f:	lods   eax,DWORD PTR ds:[esi]
  404f20:	sbb    eax,edi
  404f22:	in     al,dx
  404f23:	add    BYTE PTR [edi+0x63],dh
  404f26:	or     DWORD PTR [ecx-0x7e],0x65040acf
  404f2d:	add    eax,0x8c810958
  404f32:	sbb    eax,0xc198ebb
  404f37:	dec    ebp
  404f38:	mov    ebp,0x210960b6
  404f3d:	mov    ch,0x11
  404f3f:	cdq    
  404f40:	lods   al,BYTE PTR ds:[esi]
  404f41:	add    BYTE PTR [ebx-0x26],0x6c
  404f45:	into   
  404f46:	and    BYTE PTR [ebx-0x57],0x95
  404f4a:	pop    eax
  404f4b:	(bad)  [edi-0x42648d9d]
  404f51:	inc    ebp
  404f52:	jecxz  0x404ed5
  404f54:	pop    ebx
  404f55:	lock pusha 
  404f57:	dec    esi
  404f58:	lock jae 0x404fab
  404f5b:	push   eax
  404f5c:	sub    BYTE PTR [esi-0x48cfee29],ah
  404f62:	sub    eax,DWORD PTR [ebx-0x8d9bb34]
  404f68:	mov    bl,0x85
  404f6a:	daa    
  404f6b:	sbb    eax,0x61ef1be2
  404f70:	nop
  404f71:	mov    WORD PTR ds:0x58a5674,gs
  404f77:	inc    esi
  404f78:	cmp    DWORD PTR [esi-0x522e3166],ebx
  404f7e:	test   cl,0xc5
  404f81:	shl    ah,0x4
  404f84:	and    ebp,DWORD PTR [eax]
  404f86:	sub    al,0xbf
  404f88:	and    ebx,ecx
  404f8a:	and    eax,0x471aad2b
  404f8f:	add    eax,0xe456526c
  404f94:	inc    edx
  404f95:	repz xchg esp,eax
  404f97:	or     al,0xd9
  404f99:	ja     0x405006
  404f9b:	sbb    BYTE PTR [ecx-0x31],cl
  404f9e:	mov    dh,0x1e
  404fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa1:	dec    eax
  404fa2:	fcomip st,st(0)
  404fa4:	retf   0x5d46
  404fa7:	pop    esi
  404fa8:	or     ebp,DWORD PTR [esi]
  404faa:	sar    bl,1
  404fac:	ins    BYTE PTR es:[edi],dx
  404fad:	lea    esp,[eax-0x4224854b]
  404fb3:	mov    bh,0x6a
  404fb5:	aad    0x75
  404fb7:	or     DWORD PTR [ebp+0x60],eax
  404fba:	adc    cl,ah
  404fbc:	jge    0x404ff6
  404fbe:	out    0x59,eax
  404fc0:	enter  0x14b3,0x80
  404fc4:	stos   BYTE PTR es:[edi],al
  404fc5:	ror    DWORD PTR [edi+0x42],1
  404fc8:	dec    esi
  404fc9:	xor    DWORD PTR [eax],edx
  404fcb:	pop    ds
  404fcc:	aam    0xdb
  404fce:	(bad)  
  404fd0:	out    dx,al
  404fd1:	mov    eax,0x506a781d
  404fd6:	mov    esi,DWORD PTR [esi]
  404fd8:	loopne 0x404f62
  404fda:	jge    0x404f61
  404fdc:	cmp    ebx,DWORD PTR [eax]
  404fde:	mov    ds:0xe7afbfa0,al
  404fe3:	fidiv  DWORD PTR [ecx-0x4c5ff6f9]
  404fe9:	pop    ebx
  404fea:	lods   eax,DWORD PTR ds:[esi]
  404feb:	mul    edx
  404fed:	cmp    ecx,DWORD PTR [eax+edi*2]
  404ff0:	push   edx
  404ff1:	pusha  
  404ff2:	mov    ebx,0x3ad75dd7
  404ff7:	imul   esi,DWORD PTR [ebx+0x33],0xad2dafa6
  404ffe:	scas   eax,DWORD PTR es:[edi]
  404fff:	cli    
  405000:	xor    edi,DWORD PTR [bp+si-0x3b]
  405004:	xchg   edi,eax
  405005:	sub    eax,0x87a85156
  40500a:	js     0x405031
  40500c:	mov    ds:0xc4497fd5,al
  405011:	dec    ebx
  405012:	mov    DWORD PTR [ebx+0x4b353f4d],esp
  405018:	enter  0xb1c2,0x7f
  40501c:	sbb    DWORD PTR [ebx-0xf],ebx
  40501f:	xchg   BYTE PTR [eax+0x31ac3b67],bh
  405025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405026:	imul   edx,DWORD PTR [edi],0xffffffbb
  405029:	adc    al,BYTE PTR [edx-0x61e85f35]
  40502f:	sbb    dl,BYTE PTR [esi+0x78]
  405032:	lea    esp,[ecx]
  405034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405035:	std    
  405036:	xchg   edx,eax
  405037:	inc    ebx
  405038:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40503a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40503b:	repz mov ds:0xcd51e7cc,eax
  405041:	loop   0x405005
  405043:	mov    ebx,0x61d02ddb
  405048:	adc    al,0x41
  40504a:	out    0x34,eax
  40504c:	mov    ch,0xb5
  40504e:	xor    BYTE PTR [edi],0x13
  405051:	enter  0x7d91,0x5d
  405055:	sbb    eax,DWORD PTR [edi+0x3f]
  405058:	sub    BYTE PTR [edi],ch
  40505a:	jo     0x195277b5
  405060:	int3   
  405061:	add    bl,BYTE PTR [ecx-0x76c06825]
  405067:	jne    0x405040
  405069:	or     al,0xc2
  40506b:	sbb    eax,0x8c07f3ca
  405070:	jnp    0x405055
  405072:	xchg   ebp,edi
  405074:	and    ebp,DWORD PTR [eax+0x7c4cbe4d]
  40507a:	push   ebp
  40507b:	sbb    al,0x96
  40507d:	sub    dl,BYTE PTR [ecx]
  40507f:	jmp    0x405048
  405081:	adc    esp,DWORD PTR [ecx]
  405083:	ficomp DWORD PTR [ebx+0x6f]
  405086:	add    esi,edx
  405088:	iret   
  405089:	(bad)  
  40508b:	inc    ebx
  40508c:	mov    ecx,0xaba99fbb
  405091:	mov    edx,0x19685587
  405096:	rcl    DWORD PTR [ebx-0x1b76fc7c],1
  40509c:	mov    ?,WORD PTR [edx-0x30]
  40509f:	dec    esp
  4050a0:	ret    
  4050a1:	mov    ebx,0x3cf9b0c4
  4050a6:	not    BYTE PTR [ebx-0x5b]
  4050a9:	rol    BYTE PTR [esp+esi*1],0xae
  4050ad:	adc    bl,cl
  4050af:	(bad)  
  4050b0:	into   
  4050b1:	pop    es
  4050b2:	sbb    DWORD PTR [edi],esp
  4050b4:	repz or BYTE PTR [eax+0x42061955],dh
  4050bb:	inc    ebp
  4050bc:	sti    
  4050bd:	fimul  WORD PTR [esi+0x47511ba6]
  4050c3:	fld    QWORD PTR [esi-0xa2f053d]
  4050c9:	add    BYTE PTR [edx-0x70047057],bl
  4050cf:	mov    bh,0xda
  4050d1:	adc    BYTE PTR [ebx+0x3d6dd09e],bl
  4050d7:	mov    esi,0x380a328
  4050dc:	xor    ch,BYTE PTR [edi]
  4050de:	jb     0x405139
  4050e0:	not    BYTE PTR [esi+0x16f77dee]
  4050e6:	lea    ebp,[ecx+0x589a7931]
  4050ec:	lea    esp,[esi+0x5c]
  4050ef:	mov    dh,ch
  4050f1:	inc    ebp
  4050f2:	retf   0xee07
  4050f5:	jmp    0x8eb7695c
  4050fa:	and    BYTE PTR [esi],ch
  4050fc:	(bad)  
  4050fd:	mov    ah,0xf7
  4050ff:	cmc    
  405100:	stos   DWORD PTR es:[edi],eax
  405101:	mov    ah,0xba
  405103:	sbb    ebx,DWORD PTR [ecx-0x3e]
  405106:	cmp    esp,ecx
  405108:	cwde   
  405109:	xchg   DWORD PTR [edi],eax
  40510b:	push   ds
  40510c:	and    eax,0x91bf8b7f
  405111:	mov    esp,0xbc751d1d
  405116:	lahf   
  405117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405118:	arpl   cx,si
  40511a:	sbb    al,0x0
  40511c:	and    BYTE PTR [eax],dl
  40511e:	push   0x258669d8
  405123:	ins    DWORD PTR es:[edi],dx
  405124:	pushf  
  405125:	test   DWORD PTR [edx+0x498206d3],esp
  40512b:	cmp    BYTE PTR [ecx+0x26d049db],dl
  405131:	sar    DWORD PTR [ebx-0x7ae88ada],1
  405137:	sbb    cl,cl
  405139:	xchg   edi,eax
  40513a:	xchg   edi,eax
  40513b:	xchg   DWORD PTR [ecx],eax
  40513d:	mov    ?,WORD PTR [esi-0x3b]
  405140:	scas   eax,DWORD PTR es:[edi]
  405141:	sbb    eax,0x11ee7db
  405146:	addr16 nop
  405148:	sub    ebp,DWORD PTR [eax]
  40514a:	mov    ds:0x6add79fa,al
  40514f:	xchg   BYTE PTR [edx],bl
  405151:	mov    cl,0x36
  405153:	xchg   edx,eax
  405154:	stc    
  405155:	jecxz  0x40514f
  405157:	dec    ebp
  405158:	lahf   
  405159:	adc    esp,DWORD PTR [ebp-0x19]
  40515c:	push   edi
  40515d:	cs jno 0x4051c3
  405160:	(bad)
  405163:	inc    esp
  405164:	xchg   ecx,eax
  405165:	lods   al,BYTE PTR ds:[esi]
  405166:	rcr    BYTE PTR [edi],cl
  405168:	adc    ebx,DWORD PTR [eax+0x22]
  40516b:	xchg   BYTE PTR [edi],bh
  40516d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516e:	sbb    DWORD PTR [esi+0x49],0x6ce62816
  405175:	add    al,0x40
  405177:	mov    eax,ds:0x6a01c5d1
  40517c:	inc    ebx
  40517d:	mov    edi,edi
  40517f:	and    BYTE PTR [ecx+ecx*4-0x2e],0x9a
  405184:	sti    
  405185:	pop    ss
  405186:	cld    
  405187:	push   eax
  405188:	or     edi,esi
  40518a:	pause  
  40518c:	ds lea ebx,ds:[ecx+0x265ac364]
  405194:	jbe    0x4051fe
  405196:	sbb    esi,esp
  405198:	or     BYTE PTR [ebx+0x70835054],0xbd
  40519f:	sar    bh,0xf7
  4051a2:	dec    ebp
  4051a3:	aas    
  4051a4:	lock data16 jo 0x40521c
  4051a8:	push   cs
  4051a9:	sub    al,0x39
  4051ab:	jp     0x405187
  4051ad:	push   ebp
  4051ae:	popw   ds
  4051b0:	imul   ebx,ebp,0xffffffb8
  4051b3:	fs loop 0x405217
  4051b6:	lods   al,BYTE PTR ds:[esi]
  4051b7:	xchg   sp,ax
  4051b9:	mov    ah,0x3e
  4051bb:	loopne 0x4051ea
  4051bd:	add    eax,0xfb7d7c40
  4051c2:	repnz imul esp,DWORD PTR [esi],0xfffffff3
  4051c6:	into   
  4051c7:	sbb    DWORD PTR [edx-0x6ade388e],ebp
  4051cd:	clc    
  4051ce:	inc    edi
  4051cf:	ins    DWORD PTR es:[edi],dx
  4051d0:	and    DWORD PTR [eax+ebx*8+0x25fcf4f9],ebx
  4051d7:	repnz push ds
  4051d9:	jns    0x405259
  4051db:	sbb    al,BYTE PTR [ebx]
  4051dd:	test   DWORD PTR [edi+esi*8-0x7faaac4e],eax
  4051e4:	pop    edi
  4051e5:	in     eax,0x14
  4051e7:	mov    bh,0xb3
  4051e9:	mov    WORD PTR [ebx],es
  4051eb:	push   DWORD PTR [ebx+0x21621c70]
  4051f1:	jmp    0x405230
  4051f3:	stc    
  4051f4:	fs out dx,al
  4051f6:	cli    
  4051f7:	aam    0xfc
  4051f9:	repnz mov esi,0xfe7b9e05
  4051ff:	mov    ds,WORD PTR [ebx]
  405201:	push   esp
  405202:	mov    ebx,DWORD PTR [edx]
  405204:	imul   ebx,DWORD PTR [edx-0x60],0xbfa1a5d7
  40520b:	or     al,0xd0
  40520d:	xchg   ebx,eax
  40520e:	mov    dl,0xd8
  405210:	leave  
  405211:	sbb    esp,0x3e
  405214:	out    0x67,al
  405216:	or     bh,cl
  405218:	sbb    eax,0xe7d25bee
  40521d:	mov    ah,0xc2
  40521f:	dec    ecx
  405220:	lahf   
  405221:	xchg   esp,edx
  405223:	xor    BYTE PTR [ebx+eiz*4+0x3b07ff00],0x61
  40522b:	push   ss
  40522c:	sahf   
  40522d:	mov    ebp,0xf3d014f4
  405232:	imul   esi,DWORD PTR [edi-0x549b3b4f],0xffffffa6
  405239:	scas   eax,DWORD PTR es:[edi]
  40523a:	xchg   esp,eax
  40523b:	(bad)  
  40523c:	jbe    0x405262
  40523e:	loope  0x40522f
  405240:	jae    0x405275
  405242:	dec    edi
  405243:	mov    esi,0x9bbd1e32
  405248:	xlat   BYTE PTR ds:[ebx]
  405249:	sub    BYTE PTR [edx-0x2c],dh
  40524c:	stc    
  40524d:	inc    edx
  40524e:	stos   BYTE PTR es:[di],al
  405250:	mov    al,0xe2
  405252:	lea    ebx,[esi-0x4331ff17]
  405258:	mov    al,ds:0x8a7d021e
  40525d:	mov    dl,0x1d
  40525f:	out    dx,eax
  405260:	arpl   WORD PTR [eax-0x28081f84],si
  405266:	test   esp,edi
  405268:	mov    cl,0x89
  40526a:	push   DWORD PTR [edx-0x550a8d25]
  405270:	and    eax,0xd715b3d6
  405275:	retf   0xc48b
  405278:	xlat   BYTE PTR ds:[ebx]
  405279:	(bad)  
  40527a:	jecxz  0x4052c6
  40527c:	in     al,0x58
  40527e:	xchg   ecx,eax
  40527f:	or     DWORD PTR [ecx*1-0x25339a94],ebp
  405286:	inc    eax
  405287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405288:	lahf   
  405289:	lahf   
  40528a:	sub    DWORD PTR [ebx+eax*1],ebx
  40528d:	inc    esi
  40528e:	cld    
  40528f:	mov    dl,0x69
  405291:	sbb    bl,dh
  405293:	fbstp  TBYTE PTR [ebp-0x2f]
  405296:	aam    0x40
  405298:	and    eax,0xfe6aae67
  40529d:	inc    esi
  40529e:	sub    ecx,DWORD PTR [eax-0x6d]
  4052a1:	(bad)  
  4052a2:	mov    esi,0x773f88a0
  4052a7:	sbb    bl,0x78
  4052aa:	dec    eax
  4052ab:	push   ebx
  4052ac:	in     eax,0x4
  4052ae:	mov    DWORD PTR [ecx-0x3f],edx
  4052b1:	mov    ah,0x63
  4052b3:	sti    
  4052b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b5:	push   ebx
  4052b6:	ftst   
  4052b8:	dec    BYTE PTR [edx]
  4052ba:	xchg   esi,eax
  4052bb:	xchg   esi,eax
  4052bc:	sahf   
  4052bd:	mov    bl,0xe6
  4052bf:	data16 data16 and BYTE PTR [esi+0x5db3d9fe],0x7f
  4052c8:	data16 and BYTE PTR ss:[ebx+eax*8+0x12],bh
  4052ce:	imul   edx,DWORD PTR [ebp+0x4d2b36cf],0xfffffff8
  4052d5:	inc    ecx
  4052d6:	xor    edi,ebx
  4052d8:	dec    esi
  4052d9:	jbe    0x405310
  4052db:	std    
  4052dc:	mov    ds:0xfce7de77,eax
  4052e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e2:	data16 fucompp 
  4052e5:	lods   eax,DWORD PTR ds:[esi]
  4052e6:	shr    BYTE PTR [ebx],cl
  4052e8:	sub    eax,0x9d2c812d
  4052ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ee:	mov    esi,0x93e061e2
  4052f3:	mov    esi,0x499e48b7
  4052f8:	add    BYTE PTR [esi],cl
  4052fa:	inc    edi
  4052fb:	sbb    DWORD PTR ds:0x3d7cc5ca,esi
  405301:	pop    edx
  405302:	clc    
  405303:	out    dx,eax
  405304:	xchg   DWORD PTR [ebx+ebp*2-0x3c],esp
  405308:	dec    ebx
  405309:	mov    ebx,0xd6a20836
  40530e:	mov    ebp,0xd8e42bc8
  405313:	mov    bl,0x19
  405315:	pop    edx
  405316:	xchg   ebp,eax
  405317:	sbb    cl,cl
  405319:	cmp    BYTE PTR [edi],dl
  40531b:	cmp    eax,0xe67d8bef
  405320:	pushf  
  405321:	out    dx,eax
  405322:	aad    0x39
  405324:	push   0x7c5037e2
  405329:	dec    edi
  40532a:	mov    WORD PTR [edi],ss
  40532c:	lods   al,BYTE PTR ds:[esi]
  40532d:	addr16 jg 0x4052cc
  405330:	lea    esp,[eax+0x41fe5dbb]
  405336:	push   ecx
  405337:	loope  0x405352
  405339:	cmp    DWORD PTR [eax+0x6f],edi
  40533c:	repnz mov edi,0x25f718ce
  405342:	stc    
  405343:	and    eax,0xc515f0c8
  405348:	pusha  
  405349:	push   es
  40534a:	aaa    
  40534b:	hlt    
  40534c:	jecxz  0x40531b
  40534e:	bound  esi,QWORD PTR [edi-0x3d88e025]
  405354:	(bad)  
  405356:	push   edi
  405357:	xchg   ebx,eax
  405358:	push   ds
  405359:	adc    eax,0x8083ed00
  40535e:	popa   
  40535f:	rol    DWORD PTR [ebx],1
  405361:	repnz or ah,BYTE PTR [ebx+0x37]
  405365:	les    edx,FWORD PTR [edi-0x3514ef92]
  40536b:	jle    0x405388
  40536d:	jecxz  0x405380
  40536f:	lods   al,BYTE PTR ds:[esi]
  405370:	addr16 inc ecx
  405372:	(bad)  
  405373:	repz sub eax,0xe92e0960
  405379:	jg     0x4053fa
  40537b:	mov    fs,edx
  40537d:	popf   
  40537e:	cmp    dl,BYTE PTR [eax-0x2f]
  405381:	mov    edi,DWORD PTR [esi]
  405383:	cmp    bl,BYTE PTR [ecx+0x49]
  405386:	es stc 
  405388:	outs   dx,BYTE PTR ds:[esi]
  405389:	cmp    BYTE PTR [edx+0x16dc8025],0xd7
  405390:	or     eax,0xceefe7f2
  405395:	je     0x405343
  405397:	mov    DWORD PTR [esi-0x1937dc18],ebx
  40539d:	xor    DWORD PTR cs:[edx-0x11],edi
  4053a1:	mov    eax,0x6980bfa9
  4053a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053a7:	cdq    
  4053a8:	pop    eax
  4053a9:	clc    
  4053aa:	fcmovne st,st(3)
  4053ac:	mov    ebp,0xaeb67c72
  4053b1:	outs   dx,DWORD PTR ds:[esi]
  4053b2:	in     al,0x91
  4053b4:	pop    esi
  4053b5:	cmc    
  4053b6:	scas   al,BYTE PTR es:[edi]
  4053b7:	push   ecx
  4053b8:	ja     0x4053e0
  4053ba:	rol    eax,0x58
  4053bd:	fild   QWORD PTR [edi-0x5167f998]
  4053c3:	dec    esp
  4053c4:	in     eax,dx
  4053c5:	icebp  
  4053c6:	dec    ecx
  4053c7:	loop   0x4053df
  4053c9:	hlt    
  4053ca:	or     DWORD PTR [eax+edi*2+0x55204f64],ecx
  4053d1:	outs   dx,DWORD PTR gs:[esi]
  4053d3:	jbe    0x405396
  4053d5:	ja     0x40535f
  4053d7:	dec    ecx
  4053d8:	repnz cld 
  4053da:	sub    BYTE PTR fs:[edx],0x3a
  4053de:	dec    ecx
  4053df:	fwait
  4053e0:	aam    0x37
  4053e2:	mov    ebp,0x1c75032a
  4053e7:	fild   WORD PTR ds:0xe9c4677b
  4053ed:	xchg   esp,eax
  4053ee:	ds inc ecx
  4053f0:	push   eax
  4053f1:	pop    edi
  4053f2:	popa   
  4053f3:	loope  0x405452
  4053f5:	fs cld 
  4053f7:	scas   al,BYTE PTR es:[edi]
  4053f8:	mov    ch,0x7a
  4053fa:	add    ecx,eax
  4053fc:	imul   edi,DWORD PTR [edi],0xffffffa4
  4053ff:	stos   DWORD PTR es:[edi],eax
  405400:	sbb    al,0xd5
  405402:	cmp    DWORD PTR [ecx],0x4a3393b4
  405408:	xchg   ah,ah
  40540a:	adc    BYTE PTR [edi],dl
  40540c:	call   0x23b1:0x656fa206
  405413:	neg    DWORD PTR [esi-0x4e039f69]
  405419:	aaa    
  40541a:	(bad)  
  40541b:	pop    edi
  40541c:	mov    cl,0xa6
  40541e:	inc    bp
  405420:	cmp    al,BYTE PTR [esp+eiz*4]
  405423:	(bad)  
  405424:	cli    
  405425:	iret   
  405426:	in     al,0x92
  405428:	add    edx,DWORD PTR es:[eax+0x6a772066]
  40542f:	(bad)  
  405430:	pushf  
  405431:	pop    ecx
  405432:	shr    ch,cl
  405434:	xchg   edi,eax
  405435:	fcomp  DWORD PTR [ebp-0x60]
  405438:	or     eax,0x5cc743fd
  40543d:	fdiv   QWORD PTR [edi]
  40543f:	mov    bh,0xe4
  405441:	dec    esi
  405442:	mov    edi,0x2a5edc5e
  405447:	jno    0x4054ab
  405449:	les    esp,FWORD PTR [ebx]
  40544b:	mov    ebp,0x79cbc135
  405450:	pop    esi
  405451:	pop    ss
  405452:	xor    eax,DWORD PTR [edx]
  405454:	mov    ch,0x21
  405456:	in     eax,0x52
  405458:	(bad)  
  405459:	pop    edx
  40545a:	std    
  40545b:	dec    eax
  40545c:	push   0xd392d1a1
  405461:	rcr    eax,1
  405463:	(bad)  
  405464:	dec    ebp
  405465:	dec    ebp
  405466:	add    DWORD PTR [ebp-0x68],0xffffffa8
  40546a:	dec    eax
  40546b:	sub    al,0xd9
  40546d:	jmp    0x4054c1
  40546f:	enter  0xb80d,0x7
  405473:	sub    edx,edi
  405475:	inc    eax
  405476:	lods   eax,DWORD PTR ds:[esi]
  405477:	fst    DWORD PTR [bx+si]
  40547a:	jbe    0x405425
  40547c:	sar    bl,cl
  40547e:	mov    ebp,DWORD PTR [esi+ebp*4+0x2f]
  405482:	popa   
  405483:	add    DWORD PTR [esp+esi*2],eax
  405486:	adc    eax,0x19f6d17c
  40548b:	push   ds
  40548c:	jmp    0x40544c
  40548e:	push   cs
  40548f:	rcr    DWORD PTR [edi-0x37],cl
  405492:	shl    BYTE PTR [eax+ebp*2+0x4bebff86],cl
  405499:	(bad)  
  40549a:	iret   
  40549b:	jae    0x4054ac
  40549d:	cmp    al,0x29
  40549f:	call   0x61da1a2c
  4054a4:	xchg   ebx,ebx
  4054a6:	mov    ch,0xf5
  4054a8:	and    edi,DWORD PTR [esp+ecx*1-0x15]
  4054ac:	and    eax,0xd5aded02
  4054b1:	dec    esi
  4054b2:	mov    esp,0xf63181a4
  4054b7:	jecxz  0x405481
  4054b9:	jo     0x405483
  4054bb:	fsubr  DWORD PTR [edx+0x6ebd49a3]
  4054c1:	sbb    edx,DWORD PTR [esp+edi*1+0x15]
  4054c5:	stos   BYTE PTR es:[edi],al
  4054c6:	xor    eax,0x9c114a64
  4054cb:	cmp    ecx,DWORD PTR [edx+ebp*2-0x1ce261f7]
  4054d2:	and    eax,0x667f6562
  4054d7:	shl    ecx,cl
  4054d9:	fdivr  st(6),st
  4054db:	rcl    DWORD PTR [edi+0x2bab2b5d],0x1a
  4054e2:	cdq    
  4054e3:	sbb    bl,al
  4054e5:	xor    al,0x3f
  4054e7:	std    
  4054e8:	inc    esp
  4054e9:	and    edi,DWORD PTR [ebp+0x4511f23a]
  4054ef:	sbb    edi,esp
  4054f1:	and    al,0x49
  4054f3:	mov    WORD PTR [ebx],?
  4054f5:	outs   dx,DWORD PTR ds:[esi]
  4054f6:	(bad)  
  4054f7:	ficom  DWORD PTR [eax-0x7f]
  4054fa:	add    dl,cl
  4054fc:	dec    edi
  4054fd:	mov    ecx,0xdfee39ba
  405502:	inc    edi
  405503:	lods   eax,DWORD PTR ds:[esi]
  405504:	jle    0x4054ea
  405506:	dec    BYTE PTR [edx]
  405508:	lea    edi,ds:0x70345d5a
  40550e:	push   es
  40550f:	pop    ebx
  405510:	and    eax,0x8198f2fd
  405515:	sub    BYTE PTR [eax-0x64ae435],0xcc
  40551c:	addr16 ss mov esp,0x6997a942
  405523:	repnz and esi,edi
  405526:	mov    WORD PTR [ebx],ss
  405528:	sar    esi,0x8e
  40552b:	loopne 0x4055a8
  40552d:	mov    ch,0x99
  40552f:	or     edi,esp
  405531:	out    0x54,al
  405533:	xchg   ecx,eax
  405534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405535:	push   ss
  405536:	jnp    0x4054da
  405538:	inc    ecx
  405539:	repnz nop
  40553b:	(bad)  
  40553c:	call   0xfc00:0xe6486c68
  405543:	(bad)  
  405544:	cmp    edi,ecx
  405546:	pop    esi
  405547:	ins    BYTE PTR es:[edi],dx
  405548:	add    ecx,DWORD PTR [ebx]
  40554a:	(bad)  
  40554b:	std    
  40554c:	cmp    ah,al
  40554e:	lods   al,BYTE PTR ds:[esi]
  40554f:	push   ss
  405550:	adc    BYTE PTR [ebx+0x383b3268],al
  405556:	sbb    eax,0xeef61f30
  40555b:	cs push ds
  40555d:	push   esi
  40555e:	ss jo  0x4055b1
  405561:	pushf  
  405562:	jl     0x4054eb
  405564:	inc    ecx
  405565:	hlt    
  405566:	xchg   BYTE PTR [ecx+0x6c47a91f],ah
  40556c:	xchg   DWORD PTR [ebx],esi
  40556e:	xchg   esi,eax
  40556f:	push   ebp
  405570:	ror    DWORD PTR [edi+0x21],1
  405573:	sub    BYTE PTR [ebp+ecx*2-0x1e],0x64
  405578:	mov    al,0x16
  40557a:	mov    eax,es:0xaaf36823
  405580:	jo     0x40557c
  405582:	xor    ecx,esp
  405584:	aad    0xce
  405586:	je     0x4055fc
  405588:	pop    esi
  405589:	test   eax,0xc2920ea7
  40558e:	ss cmp eax,0x25462dba
  405594:	icebp  
  405595:	add    DWORD PTR [ebp+edi*1+0x65e6a52f],ebp
  40559c:	dec    esp
  40559d:	mov    BYTE PTR [ebx],ah
  40559f:	sbb    al,0xf5
  4055a1:	(bad)  
  4055a2:	sti    
  4055a3:	mov    ah,al
  4055a5:	lahf   
  4055a6:	mov    dl,ch
  4055a8:	imul   BYTE PTR [edi+0x6e786a37]
  4055ae:	shl    BYTE PTR [edi+edi*8],1
  4055b1:	xchg   ebx,eax
  4055b2:	iret   
  4055b3:	data16 xor cl,BYTE PTR [ecx+0x43]
  4055b7:	fld    DWORD PTR [ebx-0x43f479de]
  4055bd:	shl    DWORD PTR [ebx-0x68600009],0xe7
  4055c4:	dec    ecx
  4055c5:	das    
  4055c6:	sub    ah,BYTE PTR [ecx+0x2da8a205]
  4055cc:	mov    al,0x3c
  4055ce:	cmp    DWORD PTR [ebx],ebp
  4055d0:	cli    
  4055d1:	lods   eax,DWORD PTR ds:[esi]
  4055d2:	fiadd  DWORD PTR [ebp+0x6d]
  4055d5:	jmp    0x5ecd:0xa51d96a
  4055dc:	add    ch,BYTE PTR [ebp+edx*1+0x3e]
  4055e0:	outs   dx,BYTE PTR ds:[esi]
  4055e1:	jecxz  0x40562c
  4055e3:	int3   
  4055e4:	sub    eax,0xe746a1b6
  4055e9:	out    dx,al
  4055ea:	ds sahf 
  4055ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ed:	jmp    0x4055e0
  4055ef:	sub    ah,ch
  4055f1:	adc    eax,0xd161045d
  4055f6:	push   edi
  4055f7:	das    
  4055f8:	imul   bl
  4055fa:	dec    eax
  4055fb:	mov    BYTE PTR [ebx],bh
  4055fd:	dec    esp
  4055fe:	jg     0x405602
  405600:	cmc    
  405601:	pop    ebp
  405602:	mov    WORD PTR [ecx+0x42],?
  405605:	mov    edx,0xe0add552
  40560a:	ret    
  40560b:	test   cl,ah
  40560d:	mov    bh,0xed
  40560f:	mov    WORD PTR [edi-0x638b3b1b],ss
  405615:	xchg   ebx,eax
  405616:	gs nop
  405618:	ret    0x8722
  40561b:	sbb    eax,0x737ea46f
  405620:	inc    edx
  405621:	arpl   WORD PTR [eax-0x8],dx
  405624:	push   0x74
  405626:	mov    edx,0x33d514b3
  40562b:	inc    ebx
  40562c:	xor    ebx,eax
  40562e:	adc    ebp,DWORD PTR [ecx]
  405630:	adc    BYTE PTR [ecx+0x76],0xd1
  405634:	and    ebp,DWORD PTR [esi+0x1be8b45b]
  40563a:	mov    ds:0xc84f7221,al
  40563f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405640:	shl    DWORD PTR [ebx+0x1c],1
  405643:	sub    DWORD PTR [eax+0x34],ebp
  405646:	loope  0x4055ff
  405648:	jae    0x4056b6
  40564a:	xchg   esp,eax
  40564b:	enter  0x8290,0x5d
  40564f:	mov    edx,0xcb642232
  405654:	xlat   BYTE PTR ds:[ebx]
  405655:	addr16 xor ebx,ecx
  405658:	lods   al,BYTE PTR ds:[esi]
  405659:	arpl   dx,cx
  40565b:	jmp    0xa704786c
  405660:	jmp    0x4055ee
  405662:	xchg   ebp,eax
  405663:	lea    ebx,[edi+0x3a428b09]
  405669:	fcmovnb st,st(5)
  40566b:	add    DWORD PTR [ebp+0x54],esp
  40566e:	jnp    0x405672
  405670:	scas   eax,DWORD PTR es:[edi]
  405671:	shl    bh,cl
  405673:	mov    ah,0x8
  405675:	add    BYTE PTR [edi],dh
  405677:	push   edi
  405678:	icebp  
  405679:	dec    ebp
  40567a:	mov    ch,0x1f
  40567c:	in     al,0x14
  40567e:	adc    al,0x10
  405680:	push   eax
  405681:	out    dx,al
  405682:	ins    BYTE PTR es:[edi],dx
  405683:	xchg   edx,eax
  405684:	(bad)  
  405685:	mov    ch,0x4d
  405687:	(bad)  
  405688:	ja     0x40563e
  40568a:	inc    esp
  40568b:	mov    dl,0xba
  40568d:	sbb    dl,ch
  40568f:	mov    edx,0x4baa284a
  405694:	mov    ebp,eax
  405696:	inc    esp
  405697:	fnop   
  405699:	cmp    ecx,eax
  40569b:	lods   eax,DWORD PTR ds:[esi]
  40569c:	and    DWORD PTR [edi+edx*2-0x2ac8092c],esp
  4056a3:	sub    cl,BYTE PTR [eax+0xa]
  4056a6:	ret    0x1f15
  4056a9:	mov    ds:0x2ceca963,eax
  4056ae:	icebp  
  4056af:	ins    BYTE PTR es:[edi],dx
  4056b0:	xor    al,0x23
  4056b2:	ja     0x40568e
  4056b4:	out    dx,eax
  4056b5:	add    DWORD PTR [esi+ebx*4+0x69829394],ecx
  4056bc:	mov    eax,0xad38a765
  4056c1:	out    dx,eax
  4056c2:	pop    edi
  4056c3:	jae    0x405693
  4056c5:	jle    0x4056fb
  4056c7:	mov    ch,0xe2
  4056c9:	test   al,0x5a
  4056cb:	mov    esp,0xea75fc7f
  4056d0:	mov    ecx,0x401f9730
  4056d5:	mov    ss,esi
  4056d7:	in     al,0xfa
  4056d9:	fldcw  WORD PTR [ebx-0x34]
  4056dc:	push   DWORD PTR [edx]
  4056de:	sbb    BYTE PTR [edx],ch
  4056e0:	adc    al,0x1b
  4056e2:	enter  0xcb89,0x78
  4056e6:	mov    dh,0x88
  4056e8:	sub    al,0xe3
  4056ea:	sar    DWORD PTR [ebp+0x4f],1
  4056ed:	pusha  
  4056ee:	jno    0x40571b
  4056f0:	lds    ecx,FWORD PTR [edi]
  4056f2:	lods   al,BYTE PTR ds:[esi]
  4056f3:	ret    
  4056f4:	adc    bh,al
  4056f6:	repnz pop ds
  4056f8:	sbb    al,0xcc
  4056fa:	addr16 ds pop es
  4056fd:	aas    
  4056fe:	test   eax,0xf8ce7699
  405703:	leave  
  405704:	lea    edx,[edx]
  405706:	retf   0x6d42
  405709:	cmp    DWORD PTR [edx],ebp
  40570b:	in     eax,0x4c
  40570d:	dec    esp
  40570e:	sub    ch,ah
  405710:	push   es
  405711:	outs   dx,DWORD PTR ds:[esi]
  405712:	je     0x405791
  405714:	fld    QWORD PTR [ecx+0x1d]
  405717:	xchg   ebx,eax
  405718:	push   esi
  405719:	mov    dl,0x51
  40571b:	cld    
  40571c:	in     eax,0x9d
  40571e:	pmaxsw mm0,QWORD PTR [ebp-0x4aeb6d64]
  405725:	popf   
  405726:	scas   eax,DWORD PTR es:[edi]
  405727:	mov    WORD PTR [edx-0x9],?
  40572a:	fsubr  DWORD PTR [ebx+eiz*4-0x10]
  40572e:	sub    al,0x95
  405730:	sub    DWORD PTR [esi+eax*2+0x174c3ac],ebx
  405737:	pop    esp
  405738:	jmp    0x134:0x5aeb4cb9
  40573f:	es xchg ebx,eax
  405741:	imul   ecx,DWORD PTR [edi-0x59791897],0xd6b9a900
  40574b:	in     eax,0x9d
  40574d:	jns    0x405733
  40574f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405750:	mov    dh,0xb6
  405752:	fild   QWORD PTR [edx+0x3309264f]
  405758:	pop    eax
  405759:	clc    
  40575a:	into   
  40575b:	sub    eax,0x8119c8c8
  405760:	xchg   ebp,eax
  405761:	(bad)  
  405762:	adc    BYTE PTR [edx],dl
  405764:	sbb    DWORD PTR [ecx+0x9],ebp
  405767:	and    ecx,DWORD PTR [ecx]
  405769:	repz pop ds
  40576b:	mov    bl,0x5b
  40576d:	cli    
  40576e:	push   edi
  40576f:	dec    ecx
  405770:	add    BYTE PTR [ebp-0x7edfd1f5],ah
  405776:	push   edx
  405777:	or     edx,DWORD PTR [edx]
  405779:	setle  bl
  40577c:	dec    eax
  40577d:	pop    ebp
  40577e:	scas   eax,DWORD PTR es:[edi]
  40577f:	adc    edx,esi
  405781:	mov    ecx,edx
  405783:	cmp    DWORD PTR [edx+0x291d4b6],edi
  405789:	jno    0x4057ee
  40578b:	outs   dx,BYTE PTR ds:[esi]
  40578c:	test   ah,0x84
  40578f:	sti    
  405790:	fcomp  QWORD PTR [ebp+0x413a25e1]
  405796:	mov    cl,0xe7
  405798:	out    0x8b,al
  40579a:	sbb    esp,eax
  40579c:	xchg   sp,ax
  40579e:	fdiv   QWORD PTR [ecx]
  4057a0:	fdiv   DWORD PTR [edi+0x52ae99a0]
  4057a6:	hlt    
  4057a7:	or     bl,bl
  4057a9:	aad    0x81
  4057ab:	clc    
  4057ac:	bound  ebx,QWORD PTR [esi-0x13]
  4057af:	add    cl,BYTE PTR [edi+edi*2+0x2c]
  4057b3:	into   
  4057b4:	and    BYTE PTR [esi+eiz*2],ch
  4057b7:	ins    BYTE PTR es:[edi],dx
  4057b8:	sub    eax,0xa8896b8d
  4057bd:	mov    dh,0xf0
  4057bf:	cld    
  4057c0:	or     bl,cl
  4057c2:	sub    eax,0x8a3e91b7
  4057c7:	mov    dh,0xa0
  4057c9:	inc    esi
  4057ca:	ret    0x4774
  4057cd:	cmp    eax,DWORD PTR [edx-0x38]
  4057d0:	scas   eax,DWORD PTR es:[edi]
  4057d1:	fldcw  WORD PTR ds:0xca1cddff
  4057d7:	sti    
  4057d8:	mov    esp,0xc0e49e31
  4057dd:	fisttp WORD PTR [edi-0x7018c54e]
  4057e3:	sub    ch,bl
  4057e5:	clc    
  4057e6:	push   edi
  4057e7:	ficomp WORD PTR [edx]
  4057e9:	stos   DWORD PTR es:[edi],eax
  4057ea:	cld    
  4057eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ec:	outs   dx,BYTE PTR ds:[esi]
  4057ed:	shl    BYTE PTR [edx-0x5fd24bc4],cl
  4057f3:	mov    cl,0x16
  4057f5:	sub    bl,dh
  4057f7:	daa    
  4057f8:	or     BYTE PTR [edi+edi*2],cl
  4057fb:	jp     0x405823
  4057fd:	xchg   ebx,eax
  4057fe:	repnz push esi
  405800:	sbb    BYTE PTR [edx],0xfe
  405803:	xchg   esi,eax
  405804:	data16 (bad) 
  405806:	fcomp  st(0)
  405808:	rcl    ebx,0x8b
  40580b:	imul   ebx,DWORD PTR ds:0xd605c821,0xd
  405812:	outs   dx,BYTE PTR ds:[esi]
  405813:	cwde   
  405814:	(bad)  [esi-0x9]
  405817:	xchg   esp,eax
  405818:	pop    ss
  405819:	pop    es
  40581a:	in     al,dx
  40581b:	jne    0x4057f7
  40581d:	xchg   DWORD PTR [esi+0x6fc6d14c],ebx
  405823:	ret    
  405824:	es xchg ecx,eax
  405826:	jbe    0x405808
  405828:	xchg   DWORD PTR [eax],eax
  40582a:	punpckldq mm0,DWORD PTR [edi+0x33]
  40582e:	sbb    DWORD PTR [ebx+eax*8],esi
  405831:	xchg   esi,eax
  405832:	adc    eax,0x4f381b6d
  405837:	mov    esp,0x341b0301
  40583c:	ins    DWORD PTR es:[edi],dx
  40583d:	xchg   BYTE PTR [ecx+0x52a884a2],dl
  405843:	mov    bl,0xf7
  405845:	xchg   BYTE PTR ds:0xcef01f4c,bl
  40584b:	sbb    esi,DWORD PTR [ebx]
  40584d:	sbb    eax,edx
  40584f:	sbb    edx,DWORD PTR [eax]
  405851:	add    al,0x1d
  405853:	push   ebp
  405854:	jecxz  0x4057e5
  405856:	jp     0x405895
  405858:	js     0x405830
  40585a:	xchg   BYTE PTR [edx+0x0],al
  40585d:	adc    dl,BYTE PTR [esi-0x60]
  405860:	(bad)  
  405861:	leave  
  405862:	or     eax,0x9737bbb9
  405867:	add    BYTE PTR [edi],bh
  405869:	xchg   esi,eax
  40586a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586b:	ins    DWORD PTR es:[edi],dx
  40586c:	sahf   
  40586d:	ja     0x4058ab
  40586f:	pop    edx
  405870:	and    DWORD PTR [edi+0x62e2ea11],edx
  405876:	jne    0x4058d1
  405878:	jbe    0x4058d3
  40587a:	clc    
  40587b:	sar    DWORD PTR [ebx-0x33184ef5],1
  405881:	mov    ch,0xf3
  405883:	adc    BYTE PTR [ebx-0x53025c83],bh
  405889:	push   ss
  40588a:	retf   0xc7e
  40588d:	nop
  40588e:	sub    al,0x94
  405890:	(bad)  
  405891:	push   esp
  405892:	loopne 0x405847
  405894:	mov    bh,0x8e
  405896:	lahf   
  405897:	push   esi
  405898:	adc    eax,0xbe86ab93
  40589d:	and    al,0x88
  40589f:	mov    ch,0xe9
  4058a1:	or     edx,0xffffff9f
  4058a4:	fcmovnbe st,st(4)
  4058a6:	dec    edi
  4058a7:	sbb    DWORD PTR [eax+0x5d],0x1195e823
  4058ae:	pushf  
  4058af:	(bad)  
  4058b0:	adc    al,0x1f
  4058b2:	xchg   BYTE PTR [edx],ah
  4058b4:	mov    ds:0x5ce02df5,eax
  4058b9:	ins    BYTE PTR es:[edi],dx
  4058ba:	cmp    esp,DWORD PTR [edi+0x48]
  4058bd:	test   eax,0xe62963b0
  4058c2:	mov    gs,WORD PTR [esi+0x42]
  4058c5:	add    edi,DWORD PTR [esi+edx*1-0x18521a7f]
  4058cc:	icebp  
  4058cd:	(bad)  
  4058ce:	pop    esp
  4058cf:	adc    bl,BYTE PTR [edi-0x359c76fd]
  4058d5:	inc    eax
  4058d6:	lahf   
  4058d7:	push   ecx
  4058d8:	mov    ecx,0x4e686d69
  4058dd:	jmp    0x40587c
  4058df:	jns    0x4058d8
  4058e1:	push   esi
  4058e2:	pop    edx
  4058e3:	into   
  4058e4:	repz jnp 0x40593d
  4058e7:	push   0x21
  4058e9:	imul   ecx,esi,0x8121f6b6
  4058ef:	adc    eax,0x6791abaa
  4058f4:	ss mov cl,0x78
  4058f7:	cdq    
  4058f8:	mov    ah,0xe5
  4058fa:	in     al,0x47
  4058fc:	mov    dl,0x1a
  4058fe:	xchg   DWORD PTR [esi],esi
  405900:	jns    0x405905
  405902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405903:	sub    DWORD PTR [ebp-0x5c],esi
  405906:	out    0x97,eax
  405908:	mov    bl,dl
  40590a:	adc    eax,0x39abb679
  40590f:	jmp    0x8475:0x39783b64
  405916:	sub    bh,BYTE PTR [ecx-0x2a72fac0]
  40591c:	repz xchg ebp,eax
  40591e:	push   0xb
  405920:	fist   WORD PTR [esi-0x1e]
  405923:	mov    esp,ecx
  405925:	mov    esi,0x6f8b7a24
  40592a:	sbb    edx,DWORD PTR [edi+0x535c1cab]
  405930:	inc    ebx
  405931:	add    ecx,ecx
  405933:	push   ebx
  405934:	sbb    dh,BYTE PTR [edx-0x7f5452ba]
  40593a:	inc    di
  40593c:	and    edi,DWORD PTR [edx-0x3b]
  40593f:	sbb    esi,DWORD PTR [esi-0x72]
  405942:	pop    edi
  405943:	icebp  
  405944:	(bad)  
  405945:	test   esp,0x6712ecf
  40594b:	mov    bh,0x63
  40594d:	cwde   
  40594e:	xor    al,0x8
  405950:	mov    ch,0x9f
  405952:	test   BYTE PTR [ebp+0x39],dh
  405955:	pop    ecx
  405956:	arpl   WORD PTR [edx+esi*4],bp
  405959:	clc    
  40595a:	jns    0x4058f3
  40595c:	cmp    eax,ebx
  40595e:	inc    esp
  40595f:	lds    esi,FWORD PTR [edx]
  405961:	jae    0x405929
  405963:	hlt    
  405964:	shr    BYTE PTR [ebp+eax*1+0x1f],1
  405968:	jmp    0x490d:0xe1344367
  40596f:	mov    dh,0xde
  405971:	and    esi,ebp
  405973:	fs ins DWORD PTR es:[edi],dx
  405975:	into   
  405976:	(bad)  
  405977:	shr    ebp,cl
  405979:	dec    edx
  40597a:	rcr    ecx,0x4c
  40597d:	xor    BYTE PTR [ecx-0x4c],bl
  405980:	xchg   ebx,eax
  405981:	loope  0x405961
  405983:	not    DWORD PTR [ebx+edi*1+0x23250abf]
  40598a:	or     edx,DWORD PTR ds:0x40e8fd85
  405990:	xchg   esi,eax
  405991:	adc    al,0x33
  405993:	js     0x40594a
  405995:	jg     0x405927
  405997:	rol    DWORD PTR [ebx+edx*8+0x7b5b15ed],cl
  40599e:	sbb    al,0xd9
  4059a0:	pop    ebx
  4059a1:	push   esp
  4059a2:	loopne 0x4059f4
  4059a4:	div    BYTE PTR [edx-0x2587feaa]
  4059aa:	sub    dl,BYTE PTR [eax+0x717c9fed]
  4059b0:	jmp    0x405955
  4059b2:	mov    bh,0x2e
  4059b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b5:	outs   dx,DWORD PTR ds:[esi]
  4059b6:	test   eax,0x7a4a11b6
  4059bb:	shl    DWORD PTR [esi+0x184f828b],0xe2
  4059c2:	jo     0x4059cf
  4059c4:	lock cwde 
  4059c6:	pop    ebp
  4059c7:	xor    eax,0x6459f32c
  4059cc:	fsub   QWORD PTR [edx-0x1dbd7ed5]
  4059d2:	or     al,0xa9
  4059d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059d5:	shr    al,1
  4059d7:	dec    esi
  4059d8:	(bad)  
  4059da:	sar    esp,1
  4059dc:	jne    0x40598a
  4059de:	adc    BYTE PTR [ecx],bh
  4059e0:	xchg   ecx,eax
  4059e1:	push   esp
  4059e2:	dec    esp
  4059e3:	loopne 0x405a5d
  4059e5:	xchg   ebp,eax
  4059e6:	cdq    
  4059e7:	push   ss
  4059e8:	push   ss
  4059e9:	fimul  DWORD PTR [eax]
  4059eb:	out    dx,eax
  4059ec:	and    ecx,esi
  4059ee:	ret    
  4059ef:	das    
  4059f0:	fist   DWORD PTR [eax]
  4059f2:	clc    
  4059f3:	push   cs
  4059f4:	ins    BYTE PTR es:[edi],dx
  4059f5:	and    al,0x0
  4059f7:	dec    ebx
  4059f8:	or     eax,0x978b420
  4059fd:	mov    ecx,0x26cfccb
  405a02:	stos   BYTE PTR es:[edi],al
  405a03:	add    ah,BYTE PTR [ebp-0x6e]
  405a06:	das    
  405a07:	pop    ebp
  405a08:	xchg   DWORD PTR [edx],ebp
  405a0a:	fldcw  WORD PTR [eax+0x17]
  405a0d:	repz jge 0x405a0e
  405a10:	dec    edx
  405a11:	xor    ebx,esp
  405a13:	pop    ebx
  405a14:	int3   
  405a15:	(bad)  
  405a16:	loop   0x4059d3
  405a18:	inc    ecx
  405a19:	stos   BYTE PTR es:[edi],al
  405a1a:	in     al,0x2
  405a1c:	ret    0x8f40
  405a1f:	dec    ebp
  405a20:	fisub  WORD PTR [ebx+edx*4-0x2781c49a]
  405a27:	cmp    al,0x8c
  405a29:	inc    ecx
  405a2a:	mov    bl,0x7
  405a2c:	scas   eax,DWORD PTR es:[edi]
  405a2d:	(bad)  
  405a2e:	push   esp
  405a2f:	fistp  WORD PTR [esp]
  405a32:	js     0x4059f6
  405a34:	dec    edx
  405a35:	leave  
  405a36:	sbb    al,0x68
  405a38:	jb     0x4059ec
  405a3a:	add    DWORD PTR [eax],edx
  405a3c:	mov    ch,0xb1
  405a3e:	add    dl,bl
  405a40:	or     DWORD PTR [ecx],esp
  405a42:	in     eax,dx
  405a43:	fwait
  405a44:	inc    esi
  405a45:	loope  0x405a87
  405a47:	and    al,0xfc
  405a49:	add    al,0x4e
  405a4b:	loop   0x4059cf
  405a4d:	adc    edx,DWORD PTR [ebx+esi*2]
  405a50:	xor    edi,esi
  405a52:	sti    
  405a53:	std    
  405a54:	in     al,dx
  405a55:	cmc    
  405a56:	ins    DWORD PTR es:[edi],dx
  405a57:	pop    esp
  405a58:	adc    eax,ebp
  405a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5b:	dec    eax
  405a5c:	xor    BYTE PTR [esi+0x7b],al
  405a5f:	mov    esi,0x8493726b
  405a64:	push   0x22
  405a66:	pop    edx
  405a67:	ret    
  405a68:	cmp    DWORD PTR [ebp+0x3d33f964],ebx
  405a6e:	fdivr  DWORD PTR [ecx]
  405a70:	icebp  
  405a71:	adc    dh,dl
  405a73:	inc    edi
  405a74:	call   0x6b91:0x6ff5dcc2
  405a7b:	dec    edi
  405a7c:	int    0x2c
  405a7e:	mov    edx,0xd8ff2ade
  405a83:	pop    esi
  405a84:	rol    BYTE PTR [ebx-0x73],cl
  405a87:	and    al,0x23
  405a89:	iret   
  405a8a:	push   edi
  405a8b:	jl     0x405ad0
  405a8d:	ds mov dl,0xe0
  405a90:	repz jmp 0x405a7d
  405a93:	and    ecx,DWORD PTR ds:0x26c7d116
  405a99:	int3   
  405a9a:	(bad)  
  405a9b:	push   0xe01ff249
  405aa0:	arpl   ax,ax
  405aa2:	stos   BYTE PTR es:[edi],al
  405aa3:	(bad)  
  405aa4:	xchg   ebx,eax
  405aa5:	xchg   edi,eax
  405aa6:	mov    cl,0xcb
  405aa8:	(bad)  
  405aa9:	adc    DWORD PTR ds:0xd892e839,esp
  405aaf:	mov    dl,0xab
  405ab1:	in     al,0x42
  405ab3:	pop    edx
  405ab4:	dec    edi
  405ab5:	mov    ch,0x83
  405ab7:	retf   0x5677
  405aba:	adc    ebp,eax
  405abc:	mov    al,ds:0x7c400dc5
  405ac1:	adc    DWORD PTR [ecx+0x25],edi
  405ac4:	(bad)  
  405ac5:	cmp    al,dl
  405ac7:	loope  0x405b02
  405ac9:	and    al,0xd7
  405acb:	imul   DWORD PTR [esi+0x22]
  405ace:	outs   dx,BYTE PTR ds:[esi]
  405acf:	pushf  
  405ad0:	pop    ebp
  405ad1:	out    dx,eax
  405ad2:	inc    eax
  405ad3:	call   0xd743:0x8e77ab12
  405ada:	push   edi
  405adb:	pop    esp
  405adc:	das    
  405add:	outs   dx,BYTE PTR ds:[esi]
  405ade:	cli    
  405adf:	and    al,0x6a
  405ae1:	loopne 0x405ab1
  405ae3:	ss pop edi
  405ae5:	or     eax,0xab9457a5
  405aea:	sub    ecx,DWORD PTR [eax+0x6f4cdc9f]
  405af0:	(bad)  
  405af1:	ins    BYTE PTR es:[edi],dx
  405af2:	aad    0x29
  405af4:	or     eax,0xd5ae14f8
  405af9:	jns    0x405ae0
  405afb:	cmc    
  405afc:	outs   dx,DWORD PTR ds:[esi]
  405afd:	test   eax,0x23c4b4e0
  405b02:	pop    esi
  405b03:	daa    
  405b04:	inc    ecx
  405b05:	jnp    0x405add
  405b07:	call   0x192f:0x42ee0ca8
  405b0e:	repz cmp al,0x1e
  405b11:	mov    ebx,DWORD PTR [esi]
  405b13:	fcomi  st,st(3)
  405b15:	into   
  405b16:	inc    ebx
  405b17:	in     al,0x4
  405b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b1a:	cmc    
  405b1b:	jmp    0x405b5c
  405b1d:	in     eax,0xd2
  405b1f:	js     0x405b34
  405b21:	cld    
  405b22:	call   0x76c6:0xe3ff97c1
  405b29:	daa    
  405b2a:	fwait
  405b2b:	fwait
  405b2c:	repnz ins DWORD PTR es:[edi],dx
  405b2e:	int3   
  405b2f:	enter  0xfcba,0xb3
  405b33:	dec    ebp
  405b34:	add    edx,esi
  405b36:	nop
  405b37:	pop    edx
  405b38:	repz aas 
  405b3a:	sub    esi,DWORD PTR [ebx]
  405b3c:	push   ss
  405b3d:	fild   QWORD PTR [edi+0x56bbfb48]
  405b43:	mov    ah,0x24
  405b45:	aaa    
  405b46:	cmp    eax,0x569d8f4b
  405b4b:	xchg   ah,cl
  405b4d:	inc    esi
  405b4e:	and    eax,0xcc39c5d3
  405b53:	jbe    0x405b1a
  405b55:	dec    eax
  405b56:	xor    eax,0xb819cc5e
  405b5b:	repnz mov DWORD PTR [esi+eiz*8],edi
  405b5f:	sub    BYTE PTR [ebp+0x3479c2],ah
  405b65:	jnp    0x405b67
  405b67:	test   al,0xab
  405b69:	xor    ch,BYTE PTR [eax-0x727ed995]
  405b6f:	call   0xfa5b013
  405b74:	aas    
  405b75:	aam    0xb5
  405b77:	sbb    al,0xcc
  405b79:	push   ss
  405b7a:	ins    DWORD PTR es:[edi],dx
  405b7b:	jae    0x405b3b
  405b7d:	out    dx,eax
  405b7e:	inc    eax
  405b7f:	pushf  
  405b80:	out    dx,al
  405b81:	push   ds
  405b82:	xor    BYTE PTR [eax],ah
  405b84:	push   ss
  405b85:	ja     0x405bc6
  405b87:	psllw  mm4,QWORD PTR [ebx+0x46]
  405b8b:	xor    al,0x18
  405b8d:	fimul  WORD PTR [ecx-0x6f6ef28a]
  405b93:	mov    bh,0x0
  405b95:	fwait
  405b96:	popa   
  405b97:	dec    ebp
  405b98:	popf   
  405b99:	ss inc esi
  405b9b:	(bad)  
  405b9c:	dec    ebp
  405b9d:	out    dx,eax
  405b9e:	ss cdq 
  405ba0:	pop    DWORD PTR [eax]
  405ba2:	push   edx
  405ba3:	push   ebx
  405ba4:	or     eax,0xf82eab9b
  405ba9:	call   0x66ecc9fd
  405bae:	sbb    bl,BYTE PTR [eax+0x2968feaf]
  405bb4:	pop    esi
  405bb5:	pop    edx
  405bb6:	ja     0x405b83
  405bb8:	imul   ebx,edx,0xffffffb7
  405bbb:	ror    dl,1
  405bbd:	jnp    0x405c32
  405bbf:	xor    eax,0x4c7d4509
  405bc4:	or     al,0xfa
  405bc6:	imul   edx,DWORD PTR [edi],0xfffffff7
  405bc9:	call   0x87c9f808
  405bce:	bound  eax,QWORD PTR [edx+0x31]
  405bd1:	call   0xacb2b3c3
  405bd6:	mov    eax,0xe123f33
  405bdb:	arpl   dx,cx
  405bdd:	(bad)  
  405bde:	inc    ebp
  405bdf:	pop    edx
  405be0:	imul   ecx,DWORD PTR [esi+0x6b],0xffffffdf
  405be4:	das    
  405be5:	repz cmp DWORD PTR [ecx-0x52],edx
  405be9:	aas    
  405bea:	adc    DWORD PTR [ebx+ebx*4-0x3c5c7833],ecx
  405bf1:	mov    ds:0x4892d285,eax
  405bf6:	mul    DWORD PTR [eax-0x4]
  405bf9:	adc    esi,DWORD PTR [esi]
  405bfb:	rcr    BYTE PTR [esp+edx*8],cl
  405bfe:	mov    eax,ds:0x91642143
  405c03:	push   ebp
  405c04:	inc    ecx
  405c05:	inc    esp
  405c06:	clc    
  405c07:	xor    cl,BYTE PTR [edx]
  405c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c0a:	mov    edi,0x2dc1002
  405c0f:	mov    ebp,0x7c3b2bf4
  405c14:	adc    BYTE PTR [edx-0x11],cl
  405c17:	xchg   ecx,eax
  405c18:	cmp    ecx,DWORD PTR [edi]
  405c1a:	sub    dl,bh
  405c1c:	xchg   ebx,eax
  405c1d:	iret   
  405c1e:	xchg   DWORD PTR [ebp-0x55],eax
  405c21:	les    eax,FWORD PTR [edi+0x4c]
  405c24:	stos   DWORD PTR es:[edi],eax
  405c25:	mov    ecx,0x7d63a67
  405c2a:	xchg   DWORD PTR [ecx-0x5f7b622],esi
  405c30:	aad    0x42
  405c32:	das    
  405c33:	repz fmulp st(4),st
  405c36:	scas   al,BYTE PTR es:[edi]
  405c37:	and    eax,0x57eb97ef
  405c3c:	mov    dl,0x3
  405c3e:	add    DWORD PTR [ecx+0x5e],eax
  405c41:	and    BYTE PTR [ebp+ebx*1-0x34a68e3c],al
  405c48:	or     al,0x51
  405c4a:	mov    eax,ds:0x421ad2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d2e
  405c57:	push   DWORD PTR ds:0x421ada
  405c5d:	push   DWORD PTR ds:0x421d0e
  405c63:	push   DWORD PTR ds:0x421da2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cd2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423837
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x4237f6
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a62
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423982
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	dec    edx
  40635b:	mov    al,0x1e
  40635d:	push   edi
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx+0x44]
  406367:	dec    esi
  406368:	jno    0x406393
  40636a:	inc    ecx
  40636b:	arpl   bx,si
  40636d:	fstp   TBYTE PTR [ebp+0x57]
  406370:	lahf   
  406371:	xlat   BYTE PTR ds:[ebx]
  406372:	push   cs
  406373:	(bad)  [edx]
  406375:	mov    esp,0xc0bc8213
  40637a:	fcmovb st,st(5)
  40637c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40637d:	pop    ds
  40637e:	int3   
  40637f:	sbb    DWORD PTR [ebx+0x68],ecx
  406382:	xchg   edx,eax
  406383:	xor    al,0x9b
  406385:	push   eax
  406386:	leave  
  406387:	push   ebx
  406388:	jmp    0x4063ee
  40638a:	outs   dx,BYTE PTR ds:[esi]
  40638b:	push   edx
  40638c:	xchg   edx,eax
  40638d:	xchg   BYTE PTR [edi],bh
  40638f:	inc    BYTE PTR [esi+0x52]
  406392:	aaa    
  406393:	es mov ebp,0x191e5306
  406399:	cdq    
  40639a:	push   ds
  40639b:	data16 sub al,0x5c
  40639e:	fdiv   QWORD PTR [esi+esi*1-0x463ac2ec]
  4063a5:	bound  ebp,QWORD PTR ds:0x6cb8e958
  4063ab:	lods   eax,DWORD PTR ds:[esi]
  4063ac:	dec    ecx
  4063ad:	test   al,0x7c
  4063af:	enter  0xaa3d,0x43
  4063b3:	stos   DWORD PTR es:[edi],eax
  4063b4:	dec    BYTE PTR [eax+0x3e3784e0]
  4063ba:	add    eax,0xf4c19777
  4063bf:	cmp    al,0xe1
  4063c1:	sbb    eax,0xa597d8ea
  4063c6:	cmp    al,0x93
  4063c8:	sub    BYTE PTR [ecx],al
  4063ca:	out    dx,al
  4063cb:	xchg   edi,eax
  4063cc:	lds    esp,FWORD PTR [ebp-0x7]
  4063cf:	jge    0x406402
  4063d1:	add    DWORD PTR [esi+esi*4],ebp
  4063d4:	loop   0x4063d5
  4063d6:	and    DWORD PTR [ebp+0x36777c6d],ebx
  4063dc:	adc    eax,DWORD PTR [ecx+0x3fcda1ad]
  4063e2:	sub    eax,0x1ae7acd1
  4063e7:	add    DWORD PTR [eax+edx*8+0x60b346e3],edi
  4063ee:	sub    DWORD PTR [esi+0x7a],esi
  4063f1:	pop    ebp
  4063f2:	fwait
  4063f3:	mov    esp,0x3853a21e
  4063f8:	ret    
  4063f9:	mov    esp,0xa4741e09
  4063fe:	adc    ebx,ebx
  406400:	jle    0x40647b
  406402:	pop    ss
  406403:	mov    ebp,0xba6ad065
  406408:	pop    ebp
  406409:	vmread DWORD PTR ds:0xd11f406b,edi
  406410:	std    
  406411:	(bad)  
  406412:	ins    BYTE PTR es:[edi],dx
  406413:	fidiv  WORD PTR [ebp+0x651ae029]
  406419:	out    0xa1,eax
  40641b:	(bad)  
  40641e:	inc    ecx
  40641f:	in     eax,dx
  406420:	pop    es
  406421:	jle    0x4063b3
  406423:	or     al,0x20
  406425:	(bad)  
  406426:	adc    al,0xed
  406428:	pop    es
  406429:	aaa    
  40642a:	inc    esp
  40642b:	mov    edi,0xbbdcd277
  406430:	add    BYTE PTR [esi],dh
  406432:	mov    al,gs:0xf15b0e67
  406438:	mov    edx,DWORD PTR [eax]
  40643a:	dec    BYTE PTR [edx-0x69b7c73f]
  406440:	sahf   
  406441:	aam    0xae
  406443:	and    eax,ecx
  406445:	ss ins DWORD PTR es:[edi],dx
  406447:	sub    DWORD PTR [ebx+0x4e],ebp
  40644a:	imul   ebp,DWORD PTR [ebp-0xe],0x8c963d9
  406451:	shl    bh,0x60
  406454:	jp     0x40640e
  406456:	sbb    DWORD PTR [edi-0x1b],edx
  406459:	test   DWORD PTR [eax+esi*2-0x10],esp
  40645d:	lods   al,BYTE PTR ds:[esi]
  40645e:	or     bh,BYTE PTR [ebp+0x77b4bc0c]
  406464:	mov    ch,0x42
  406466:	mov    esi,0x7447ad17
  40646b:	push   0xffffff89
  40646d:	mov    ds:0xa1b5908e,al
  406472:	repnz sub DWORD PTR [ebx],ebp
  406475:	cmp    edi,edi
  406477:	mov    bh,0xfb
  406479:	jmp    0xec5d9a2
  40647e:	cmp    eax,0x50056828
  406483:	xchg   ecx,eax
  406484:	lods   al,BYTE PTR ds:[esi]
  406485:	scas   eax,DWORD PTR es:[edi]
  406486:	mov    ebp,DWORD PTR [ebx]
  406488:	and    ah,cl
  40648a:	jecxz  0x406440
  40648c:	out    dx,al
  40648d:	in     eax,0xec
  40648f:	sub    al,0xf4
  406491:	add    al,0x34
  406493:	mov    ecx,0x6b85d3a2
  406498:	fcmovbe st,st(7)
  40649a:	pushf  
  40649b:	cmp    BYTE PTR [ebx+0x1e],0xe
  40649f:	xchg   DWORD PTR [edx+ebp*8-0x7aaf01ea],ebp
  4064a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a7:	sub    DWORD PTR [esi],ecx
  4064a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064aa:	fwait
  4064ab:	rcl    BYTE PTR [ebx+ecx*4-0x64109959],1
  4064b2:	xchg   ebp,eax
  4064b3:	adc    al,BYTE PTR [edx+0x1074573f]
  4064b9:	sbb    al,0x13
  4064bb:	enter  0x5f88,0xba
  4064bf:	cmc    
  4064c0:	icebp  
  4064c1:	call   0xef17:0x3c8a6cc9
  4064c8:	and    bl,BYTE PTR [esp+edi*2+0x20]
  4064cc:	aaa    
  4064cd:	sub    cl,BYTE PTR [eax]
  4064cf:	ret    
  4064d0:	add    al,0x1
  4064d2:	push   ds
  4064d3:	mov    ecx,0xd633adc6
  4064d8:	sbb    ebx,DWORD PTR [esi]
  4064da:	adc    eax,0xff953d1b
  4064df:	push   cs
  4064e0:	call   0x7395:0xc8d2283e
  4064e7:	or     al,0x4
  4064e9:	add    eax,edi
  4064eb:	sbb    edi,ecx
  4064ed:	retf   0x92b8
  4064f0:	inc    eax
  4064f1:	jl     0x406476
  4064f3:	jno    0x40653f
  4064f5:	inc    esp
  4064f6:	daa    
  4064f7:	mov    eax,0xa166acdd
  4064fc:	mov    ds:0xa529eabd,al
  406501:	jge    0x406530
  406503:	or     bh,dl
  406505:	cli    
  406506:	cmc    
  406507:	xchg   esi,eax
  406508:	jbe    0x4064be
  40650a:	adc    al,0x80
  40650c:	xchg   edx,eax
  40650d:	xchg   BYTE PTR [edx-0x387533d1],dh
  406513:	inc    edi
  406514:	inc    edx
  406515:	mov    bh,0x62
  406517:	pop    ecx
  406518:	stos   DWORD PTR es:[edi],eax
  406519:	jae    0x4064f0
  40651b:	pop    edi
  40651c:	sbb    cl,cl
  40651e:	mov    esp,0xaa14bb6c
  406523:	cdq    
  406524:	shl    eax,cl
  406526:	xchg   ecx,eax
  406527:	sub    BYTE PTR [ebx],bh
  406529:	xor    dh,BYTE PTR [esi+0x4f686ce4]
  40652f:	leave  
  406530:	sbb    BYTE PTR [edx-0x1fad5432],ah
  406536:	push   0x7d
  406538:	push   esi
  406539:	frstor ds:0xe721f18e
  40653f:	sahf   
  406540:	dec    ebx
  406541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406542:	add    BYTE PTR [esi],ah
  406544:	cli    
  406545:	lahf   
  406546:	jmp    0x588117f3
  40654b:	adc    al,0xd0
  40654d:	and    DWORD PTR [edi],esp
  40654f:	sbb    DWORD PTR [edi+edx*4],esi
  406552:	adc    BYTE PTR [edi],bh
  406554:	mov    ch,0x1a
  406556:	loopne 0x4065bd
  406558:	or     ebx,DWORD PTR [ecx-0x5b]
  40655b:	and    DWORD PTR [ebx-0x27031154],eax
  406561:	mov    cl,0x24
  406563:	mov    dh,0x3e
  406565:	cli    
  406566:	imul   BYTE PTR [ebx+esi*4-0xd]
  40656a:	leave  
  40656b:	cmp    dl,ch
  40656d:	xchg   esp,eax
  40656e:	pushf  
  40656f:	or     edx,0x61
  406572:	cld    
  406573:	pop    esp
  406574:	sub    esi,DWORD PTR [ebx]
  406576:	and    ax,bx
  406579:	jmp    0xd512ef4a
  40657e:	pop    ds
  40657f:	ins    BYTE PTR es:[edi],dx
  406580:	call   0xa11a7fc4
  406585:	cmc    
  406586:	imul   ebp,DWORD PTR ds:0xb94eb546,0xffffff88
  40658d:	inc    edx
  40658e:	mov    esp,0x7d5d6da8
  406593:	jno    0x40658c
  406595:	mov    ds:0x8680f39e,eax
  40659a:	(bad)  
  40659b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659c:	add    DWORD PTR [edx],0xffffffc2
  40659f:	mov    bh,0xd3
  4065a1:	stos   BYTE PTR es:[edi],al
  4065a2:	push   edi
  4065a3:	xchg   bh,ah
  4065a5:	push   ebp
  4065a6:	scas   ax,WORD PTR es:[edi]
  4065a8:	cmp    eax,0x8c360d33
  4065ad:	retf   0x92d2
  4065b0:	push   esi
  4065b1:	ror    DWORD PTR [esi+0x5bdb36a2],1
  4065b7:	repz push ebp
  4065b9:	xor    al,0x11
  4065bb:	sub    al,0x6b
  4065bd:	je     0x4065b5
  4065bf:	icebp  
  4065c0:	leave  
  4065c1:	add    BYTE PTR [eax-0x51],0x51
  4065c5:	xchg   BYTE PTR [ebx+0x68],bh
  4065c8:	xchg   edi,eax
  4065c9:	xor    al,0x7d
  4065cb:	call   0xbf3c7506
  4065d0:	add    edi,ebx
  4065d2:	jne    0x4065d4
  4065d4:	aad    0x23
  4065d6:	mov    al,ds:0xd92264cf
  4065db:	mov    ch,BYTE PTR [edi]
  4065dd:	rep stos BYTE PTR es:[edi],al
  4065df:	inc    ebx
  4065e0:	push   edx
  4065e1:	sbb    DWORD PTR fs:[ecx],edx
  4065e4:	neg    esp
  4065e6:	fidiv  DWORD PTR [ebp+0x10c0533e]
  4065ec:	jo     0x4065d2
  4065ee:	retf   
  4065ef:	mov    ebp,0xa5940f8c
  4065f4:	cli    
  4065f5:	jbe    0x40662e
  4065f7:	jbe    0x4065cf
  4065f9:	push   edx
  4065fa:	(bad)  
  4065fc:	jns    0x4065c2
  4065fe:	sub    BYTE PTR [eax],cl
  406600:	adc    DWORD PTR [ebx-0x4759512],esi
  406606:	ds clc 
  406608:	fidivr DWORD PTR [ebp+0x590c18c8]
  40660e:	sbb    DWORD PTR [ecx+eax*2+0x72],esi
  406612:	stos   BYTE PTR es:[edi],al
  406613:	fs sbb eax,0xfbc1066d
  406619:	jmp    FWORD PTR [edx+0x4f67507d]
  40661f:	sbb    DWORD PTR [ecx],ebx
  406621:	jmp    0x3f03:0x8c9ab376
  406628:	rcl    edx,cl
  40662a:	mov    esp,0xb5f3dd3d
  40662f:	retf   
  406630:	nop
  406631:	mov    bh,0xe4
  406633:	push   esi
  406634:	mov    ds:0x33f1f2dc,eax
  406639:	xchg   esp,eax
  40663a:	sahf   
  40663b:	jnp    0x406608
  40663d:	jg     0x40663f
  40663f:	xor    edi,esp
  406641:	mov    esi,0x658f38ea
  406646:	(bad)
  406649:	and    eax,0xf26eb798
  40664e:	mov    esi,0x9215f49d
  406653:	mov    fs,WORD PTR [edx-0x48]
  406656:	sbb    DWORD PTR [edi],0xc33bec7c
  40665c:	cmovo  ebx,DWORD PTR [esi+eax*2]
  406660:	push   ebx
  406661:	push   edi
  406662:	dec    ecx
  406663:	popf   
  406664:	call   0x8778:0xc8aef3c
  40666b:	adc    al,0x50
  40666d:	or     dl,al
  40666f:	(bad)  
  406671:	pop    edi
  406672:	hlt    
  406673:	jbe    0x4066d9
  406675:	lods   eax,DWORD PTR ds:[esi]
  406676:	mov    ah,0x4c
  406678:	pop    ecx
  406679:	gs jecxz 0x406656
  40667c:	inc    esi
  40667d:	popa   
  40667e:	cmp    BYTE PTR [ebx],bl
  406680:	stos   BYTE PTR es:[edi],al
  406681:	leave  
  406682:	push   ds
  406683:	in     al,dx
  406684:	mov    eax,ds:0x4c6686a0
  406689:	sbb    esp,DWORD PTR [ecx+0x23cd9f6]
  40668f:	mov    ebp,0x7e8021fe
  406694:	sub    edi,DWORD PTR [edx+0x4d]
  406697:	jb     0x4066d9
  406699:	test   al,0xd7
  40669b:	xor    eax,DWORD PTR [eax-0x587f1216]
  4066a1:	sub    DWORD PTR [eax-0x784ca08c],edx
  4066a7:	push   0x1198d404
  4066ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ad:	mov    WORD PTR [esi+edx*1-0x1054ae0a],ss
  4066b4:	dec    esp
  4066b5:	xchg   ecx,eax
  4066b6:	ds jae 0x406735
  4066b9:	xor    ebp,DWORD PTR [eax]
  4066bb:	mov    DWORD PTR [esi-0x3d8ce764],0xd66a466b
  4066c5:	pop    ss
  4066c6:	int3   
  4066c7:	(bad)  
  4066c8:	imul   bl
  4066ca:	mov    al,ds:0x73f43bd7
  4066cf:	xchg   edx,eax
  4066d0:	(bad)  
  4066d1:	dec    esi
  4066d2:	test   BYTE PTR [edx-0x78],ah
  4066d5:	lea    eax,[edx+0x3dc19024]
  4066db:	xor    dh,al
  4066dd:	neg    BYTE PTR [edx-0x404554ce]
  4066e3:	loopne 0x4066be
  4066e5:	push   0x81e509d3
  4066ea:	push   es
  4066eb:	rol    DWORD PTR [ebx],1
  4066ed:	stos   DWORD PTR es:[edi],eax
  4066ee:	pop    ebx
  4066ef:	xor    al,BYTE PTR [edi+0x24cf573b]
  4066f5:	cs push bp
  4066f8:	int    0xf1
  4066fa:	and    eax,0xdce8ecfe
  4066ff:	inc    ebp
  406700:	out    0x75,al
  406702:	popf   
  406703:	(bad)  
  406704:	dec    eax
  406705:	je     0x40673f
  406707:	mov    bl,0x74
  406709:	(bad)  
  40670a:	outs   dx,DWORD PTR ds:[esi]
  40670b:	iret   
  40670c:	jle    0x406705
  40670e:	in     eax,dx
  40670f:	int3   
  406710:	repz mov esp,0x24c3a06
  406716:	enter  0xd5ca,0x55
  40671a:	lds    eax,FWORD PTR [edx-0x6b]
  40671d:	ffreep st(5)
  40671f:	sbb    BYTE PTR ds:0xdfcc4dcf,ch
  406725:	pop    ebx
  406726:	push   0x6d1bceaf
  40672b:	popa   
  40672c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40672d:	inc    edi
  40672e:	mov    eax,ds:0xf83d3ec7
  406733:	jns    0x406750
  406735:	xchg   ebp,eax
  406736:	es in  al,dx
  406738:	out    0x7b,eax
  40673a:	dec    ecx
  40673b:	push   es
  40673c:	xchg   esi,eax
  40673d:	iret   
  40673e:	mov    bl,0xe7
  406740:	(bad)  
  406741:	enter  0xd47b,0xb0
  406745:	jecxz  0x406701
  406747:	mov    dh,0x1b
  406749:	in     eax,0xc0
  40674b:	in     eax,dx
  40674c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40674d:	or     DWORD PTR [ebx+0x756205a],ecx
  406753:	jae    0x4067a5
  406755:	test   DWORD PTR gs:[eax+0x198f1557],ebx
  40675c:	sbb    al,0x80
  40675e:	xor    al,0x51
  406760:	in     eax,0x60
  406762:	imul   ebp,DWORD PTR ds:0x376833a0,0x5dc686ef
  40676c:	aad    0xc2
  40676e:	mov    WORD PTR [edi-0x560ca6f4],fs
  406774:	test   BYTE PTR [esi+0x6c],dh
  406777:	(bad)  
  406778:	into   
  406779:	aaa    
  40677a:	push   eax
  40677b:	gs sbb al,0x6c
  40677e:	push   0x390d2e34
  406783:	jae    0x4067eb
  406785:	mov    al,0x9
  406787:	jecxz  0x406741
  406789:	lea    ecx,[ebp+0x3b5d4fa]
  40678f:	mov    edi,0xbb224332
  406794:	pop    esi
  406795:	pusha  
  406796:	or     eax,DWORD PTR [ebp+0x6a4ebc2d]
  40679c:	push   esp
  40679d:	(bad)  
  40679e:	(bad)  
  4067a2:	ror    bl,1
  4067a4:	sbb    ebx,0x13
  4067a7:	jle    0x406777
  4067a9:	sub    DWORD PTR [edx],edx
  4067ab:	out    dx,eax
  4067ac:	xor    al,0x25
  4067ae:	mov    ecx,0x4147426b
  4067b3:	rol    DWORD PTR [edi],1
  4067b5:	jmp    FWORD PTR [ecx+edi*4]
  4067b8:	test   BYTE PTR [edx-0x55],dh
  4067bb:	add    eax,0xf0cd644e
  4067c0:	sbb    al,0xe
  4067c2:	fstp   QWORD PTR [ebp+0x64f7d915]
  4067c8:	mov    BYTE PTR [ebx],ch
  4067ca:	fucompp 
  4067cc:	add    BYTE PTR [ebx-0x24],dl
  4067cf:	pop    eax
  4067d0:	popf   
  4067d1:	aam    0x90
  4067d3:	mov    WORD PTR [ebx],es
  4067d5:	into   
  4067d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d7:	xchg   DWORD PTR [eax+0x450adf2b],edx
  4067dd:	sub    DWORD PTR [edi+0x21],0x8f992519
  4067e4:	sub    eax,0x4caa7555
  4067e9:	cmc    
  4067ea:	xor    eax,0x3e8db498
  4067ef:	arpl   WORD PTR [esi+0x45],sp
  4067f2:	aaa    
  4067f3:	outs   dx,BYTE PTR ds:[esi]
  4067f4:	test   BYTE PTR [ecx-0x50],0x35
  4067f8:	mov    esi,0x6a89458f
  4067fd:	sbb    al,0x6e
  4067ff:	or     esi,0x3e
  406802:	mov    al,ds:0x47d9472
  406807:	imul   edx,DWORD PTR [ebp+0x6],0xffffffdc
  40680b:	push   esp
  40680c:	dec    ebp
  40680d:	jp     0x4067cb
  40680f:	jb     0x406813
  406811:	scas   eax,DWORD PTR es:[edi]
  406812:	sahf   
  406813:	int    0x9f
  406815:	pop    esi
  406816:	mov    esp,0xd4420ea2
  40681b:	sub    DWORD PTR [ebp+ebx*8+0x22706ce3],ebp
  406822:	mov    ebx,0x6372cf9f
  406827:	fwait
  406828:	(bad)  
  406829:	ja     0x4067e6
  40682b:	xchg   DWORD PTR [eax],eax
  40682d:	pusha  
  40682e:	inc    ebp
  40682f:	jmp    0x406870
  406831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406832:	gs imul ebx,ecx,0x4f
  406836:	jnp    0x40685c
  406838:	cdq    
  406839:	sub    DWORD PTR [eax],esp
  40683b:	inc    ebx
  40683c:	add    cl,ah
  40683e:	and    DWORD PTR fs:[ebx+0x12],0xac311e74
  406846:	inc    ebx
  406847:	sbb    BYTE PTR [edx+0x31fbc98e],bh
  40684d:	sbb    DWORD PTR [edi+0x61],ebp
  406850:	add    dl,bl
  406852:	push   ss
  406853:	dec    eax
  406854:	push   ax
  406856:	stc    
  406857:	xchg   edi,eax
  406858:	dec    ebp
  406859:	jle    0x40687e
  40685b:	sbb    eax,0x93d3d12
  406860:	sbb    al,0x39
  406862:	in     eax,dx
  406863:	sbb    dl,BYTE PTR [edx+ecx*1+0x30]
  406867:	out    0x59,al
  406869:	mov    ebp,0xf84b38ad
  40686e:	inc    eax
  40686f:	das    
  406870:	inc    edi
  406871:	xchg   esp,eax
  406872:	fld    QWORD PTR [ecx+0x6eb816fb]
  406878:	dec    eax
  406879:	xlat   BYTE PTR ds:[ebx]
  40687a:	adc    edx,edx
  40687c:	ds mov ebp,0xa8f299db
  406882:	xchg   edi,eax
  406883:	jb     0x4068e8
  406885:	jns    0x4068e7
  406887:	xchg   DWORD PTR [ebp+0x1d],edx
  40688a:	pop    edx
  40688b:	xlat   BYTE PTR ds:[ebx]
  40688c:	mov    ebx,0xfd83ac4d
  406891:	and    al,BYTE PTR cs:[edx+eax*4]
  406895:	mov    bh,0x9d
  406897:	gs mov edx,ecx
  40689a:	xchg   esp,eax
  40689b:	mov    dh,0x82
  40689d:	jmp    0xea9946dd
  4068a2:	retf   0x1bc6
  4068a5:	call   0x6fd67860
  4068aa:	test   eax,0x2e1a3241
  4068af:	xlat   BYTE PTR ds:[ebx]
  4068b0:	sti    
  4068b1:	cwde   
  4068b2:	jae    0x406868
  4068b4:	ss jne 0x406913
  4068b7:	mov    ah,0x2f
  4068b9:	sbb    al,0x59
  4068bb:	adc    bh,al
  4068bd:	mov    al,0x49
  4068bf:	or     edi,DWORD PTR [eax+0x14]
  4068c2:	mov    ds:0x8548c69d,eax
  4068c7:	dec    edx
  4068c8:	loope  0x4068f0
  4068ca:	xor    BYTE PTR [ecx],dl
  4068cc:	cmp    esi,edi
  4068ce:	dec    ebp
  4068cf:	das    
  4068d0:	xchg   edi,eax
  4068d1:	push   edi
  4068d2:	xor    esi,DWORD PTR [ecx-0x14]
  4068d5:	xchg   edx,eax
  4068d6:	sbb    DWORD PTR [eax],ebp
  4068d8:	cwde   
  4068d9:	add    dl,BYTE PTR [ebx-0x64]
  4068dc:	xlat   BYTE PTR ds:[ebx]
  4068dd:	fs pop esi
  4068df:	jbe    0x40689b
  4068e1:	fldcw  WORD PTR [ecx+0x4ce913d2]
  4068e7:	jmp    0xcac2:0x642fe7ab
  4068ee:	dec    esp
  4068ef:	js     0x406964
  4068f1:	inc    edi
  4068f2:	les    esi,FWORD PTR [ecx+0x40]
  4068f5:	jo     0x4068b8
  4068f7:	lahf   
  4068f8:	inc    eax
  4068f9:	js     0x40692e
  4068fb:	inc    esp
  4068fc:	mov    edx,0x26a6bc26
  406901:	outs   dx,DWORD PTR ds:[esi]
  406902:	mov    ds:0x1bb328d5,eax
  406907:	inc    ebp
  406908:	or     ebx,DWORD PTR [ecx-0x44]
  40690b:	sub    al,0x4c
  40690d:	test   eax,0x23b9e1b7
  406912:	es mov edi,0x295ee2e4
  406918:	fldenv [ebx+0x15b711b6]
  40691e:	sub    BYTE PTR [edx],dh
  406920:	mov    ah,0x8a
  406922:	xchg   dl,bh
  406924:	aam    0x6d
  406926:	ret    0x8db4
  406929:	xor    DWORD PTR [esi+ebx*4-0x55b6e84b],eax
  406930:	xor    al,0xa5
  406932:	jns    0x4068c3
  406934:	push   cs
  406935:	mov    esp,DWORD PTR [edi]
  406937:	adc    ah,BYTE PTR [eax+0x60]
  40693a:	inc    ecx
  40693b:	out    0x75,al
  40693d:	hlt    
  40693e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40693f:	leave  
  406940:	jg     0x4068d5
  406942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406943:	add    al,0xb3
  406945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406946:	in     eax,dx
  406947:	daa    
  406948:	and    cl,dh
  40694a:	mov    ah,0xce
  40694c:	mov    ds:0x1d2ba295,al
  406951:	je     0x406926
  406953:	or     al,0x53
  406955:	test   al,0xd9
  406957:	xchg   edx,eax
  406958:	das    
  406959:	push   ds
  40695a:	test   BYTE PTR [edi-0x7a],al
  40695d:	(bad)  
  40695f:	daa    
  406960:	mov    al,ds:0x48375495
  406965:	jno    0x40698b
  406967:	xchg   BYTE PTR ds:[edx],dl
  40696a:	stos   BYTE PTR es:[edi],al
  40696b:	mov    ecx,esp
  40696d:	xchg   BYTE PTR [edx+edi*4-0xc50339],bl
  406974:	hlt    
  406975:	ja     0x406906
  406977:	and    al,0x97
  406979:	lahf   
  40697a:	inc    edx
  40697b:	loope  0x406929
  40697d:	pop    edx
  40697e:	in     al,0x2b
  406980:	ja     0x406928
  406982:	jp     0x4069a3
  406984:	pop    es
  406985:	lea    edi,[ecx]
  406987:	repz push ds
  406989:	cmp    al,0x50
  40698b:	jae    0x406977
  40698d:	mov    esi,0xbb68fd87
  406992:	sub    DWORD PTR ss:[esi],edx
  406995:	pop    eax
  406996:	mov    edi,0x8749e6db
  40699b:	sahf   
  40699c:	dec    edi
  40699d:	sti    
  40699e:	arpl   WORD PTR [eax+0x128e5537],sp
  4069a4:	setae  BYTE PTR [edx+0xe]
  4069a8:	aad    0xe8
  4069aa:	fistp  WORD PTR [ebx-0x58]
  4069ad:	dec    ecx
  4069ae:	dec    esi
  4069af:	ss xor al,0x18
  4069b2:	adc    al,0x77
  4069b4:	adc    ah,cl
  4069b6:	adc    al,0x94
  4069b8:	mov    esp,edi
  4069ba:	loopne 0x40695f
  4069bc:	cmp    al,0x22
  4069be:	mov    ds:0x26eeacf4,eax
  4069c3:	add    eax,0xc5f492c2
  4069c8:	inc    ebp
  4069c9:	stos   DWORD PTR es:[edi],eax
  4069ca:	mov    al,ds:0x1a503c8f
  4069cf:	sbb    eax,0x46ed9948
  4069d4:	and    BYTE PTR [edi+eiz*4],cl
  4069d7:	aas    
  4069d8:	aas    
  4069d9:	je     0x406a58
  4069db:	test   BYTE PTR es:[ebp-0x4606c7b],ah
  4069e2:	out    0x7d,eax
  4069e4:	pop    eax
  4069e5:	sar    DWORD PTR [edi],cl
  4069e7:	leave  
  4069e8:	imul   ebx,DWORD PTR [esi+0x77733bd5],0x889f1a45
  4069f2:	ficom  DWORD PTR [edx+0x59]
  4069f5:	repnz push ds
  4069f7:	xchg   ecx,eax
  4069f8:	mov    al,ds:0x10e1b282
  4069fd:	(bad)  
  4069fe:	call   0x268f174c
  406a03:	sub    BYTE PTR [eax+ebp*8+0x67],bl
  406a07:	fimul  DWORD PTR [ebx]
  406a09:	push   ebx
  406a0a:	mov    edi,0x59a2334
  406a0f:	add    ebp,DWORD PTR [eax+0x6bde5fd]
  406a15:	mov    ah,0x6c
  406a17:	jbe    0x406a4b
  406a19:	or     al,0xe9
  406a1b:	xchg   edi,eax
  406a1c:	pop    ecx
  406a1d:	stc    
  406a1e:	push   eax
  406a1f:	xchg   DWORD PTR [ecx+0x2],esp
  406a22:	xchg   BYTE PTR [edi-0x9602b42],dl
  406a28:	and    eax,0x27b056fb
  406a2d:	inc    BYTE PTR [edi-0x13]
  406a30:	add    BYTE PTR [edi],cl
  406a32:	sahf   
  406a33:	jge    0x406ab2
  406a35:	xchg   edi,eax
  406a36:	aaa    
  406a37:	and    al,0xd6
  406a39:	out    dx,al
  406a3a:	sar    BYTE PTR [ebx+eiz*1+0x4c],cl
  406a3e:	sub    eax,0x7ff7bc9e
  406a43:	(bad)  
  406a44:	popf   
  406a45:	in     eax,0xfd
  406a47:	pop    ebx
  406a48:	fst    DWORD PTR [edi+0x67]
  406a4b:	mov    DWORD PTR [eax],esi
  406a4d:	sub    eax,0xd27f968
  406a52:	mov    bl,0x4d
  406a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a55:	pushf  
  406a56:	mov    cl,0x1
  406a58:	int3   
  406a59:	push   esi
  406a5a:	mov    edx,DWORD PTR [eax-0x6f]
  406a5d:	ja     0x406a57
  406a5f:	ja     0x4069e3
  406a61:	jp     0x406a65
  406a63:	add    ecx,esi
  406a65:	xor    al,0x27
  406a67:	or     bl,BYTE PTR [ecx+0x5bedc313]
  406a6d:	mov    esp,ecx
  406a6f:	pushf  
  406a70:	mov    edx,ecx
  406a72:	mov    bh,0x3b
  406a74:	call   0xa52d5d62
  406a79:	icebp  
  406a7a:	cli    
  406a7b:	fild   WORD PTR [ebp-0x2a9e0cd9]
  406a81:	mov    bl,0x96
  406a83:	mov    dh,0x3a
  406a85:	stc    
  406a86:	sahf   
  406a87:	push   ss
  406a88:	imul   edx,DWORD PTR [edi+0x5ddc8ec2],0x72c0ab37
  406a92:	cs ins DWORD PTR es:[edi],dx
  406a94:	or     eax,0xd1c07031
  406a99:	ins    BYTE PTR es:[edi],dx
  406a9a:	sbb    bl,BYTE PTR [ebx]
  406a9c:	dec    ebx
  406a9d:	aaa    
  406a9e:	ss int3 
  406aa0:	fdiv   QWORD PTR [esi-0x1ba0bff6]
  406aa6:	add    ebp,edi
  406aa8:	leave  
  406aa9:	pop    eax
  406aaa:	pop    ebx
  406aab:	inc    ebp
  406aac:	clc    
  406aad:	push   ds
  406aae:	gs aaa 
  406ab0:	fwait
  406ab1:	(bad)  
  406ab2:	inc    eax
  406ab3:	loop   0x406a53
  406ab5:	pop    eax
  406ab6:	push   ds
  406ab7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  406ab9:	in     al,0x80
  406abb:	mov    bl,0xe
  406abd:	test   al,0x7
  406abf:	add    eax,0x2698f536
  406ac4:	xchg   esp,eax
  406ac5:	std    
  406ac6:	scas   eax,DWORD PTR es:[edi]
  406ac7:	arpl   WORD PTR [esi+edi*4+0x6e2541a7],sp
  406ace:	and    eax,ebp
  406ad0:	jnp    0x406ad4
  406ad2:	out    0xc8,al
  406ad4:	xchg   esi,eax
  406ad5:	add    eax,0xd56ae11f
  406ada:	sbb    al,al
  406adc:	outs   dx,BYTE PTR ds:[esi]
  406add:	sbb    ebp,edi
  406adf:	cli    
  406ae0:	cmp    ax,0xeb5b
  406ae4:	cmp    ecx,esp
  406ae6:	je     0x406af8
  406ae8:	jo     0x406b16
  406aea:	xchg   ecx,eax
  406aeb:	inc    ebp
  406aec:	shl    DWORD PTR [ecx+0x3ae5ee97],cl
  406af2:	loopne 0x406a75
  406af4:	retf   
  406af5:	arpl   WORD PTR [edi-0x21],ax
  406af8:	mov    ecx,fs
  406afa:	call   0x3325bcc9
  406aff:	fcom   QWORD PTR [ebx+0x33]
  406b02:	into   
  406b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b04:	aas    
  406b05:	xor    DWORD PTR [esi],ecx
  406b07:	mov    eax,ds:0xbda20901
  406b0c:	xlat   BYTE PTR ds:[ebx]
  406b0d:	lahf   
  406b0e:	add    eax,0xc370d5ed
  406b13:	inc    esi
  406b14:	adc    ebp,esp
  406b16:	and    eax,DWORD PTR [edx]
  406b18:	fwait
  406b19:	adc    al,0xa4
  406b1b:	outs   dx,DWORD PTR ds:[esi]
  406b1c:	jge    0x406b31
  406b1e:	pop    edi
  406b1f:	inc    edx
  406b20:	call   0xdfdc4cde
  406b25:	mov    edx,0x8a7d738f
  406b2a:	adc    BYTE PTR [esi],cl
  406b2c:	dec    eax
  406b2d:	xor    bh,BYTE PTR [eax-0x4acee97e]
  406b33:	jmp    0xc2acfd5a
  406b38:	aad    0x9a
  406b3a:	in     eax,dx
  406b3b:	sbb    DWORD PTR [ebx+0x70576de0],ebx
  406b41:	push   0x33a00c18
  406b46:	bound  ebp,QWORD PTR [ebx]
  406b48:	and    ah,BYTE PTR [edi+0x45859744]
  406b4e:	pop    esi
  406b4f:	push   edi
  406b50:	jle    0x406bcd
  406b52:	add    al,0x5e
  406b54:	pop    es
  406b55:	(bad)  
  406b56:	scas   eax,DWORD PTR es:[edi]
  406b57:	xor    ebp,ebx
  406b59:	xchg   edx,eax
  406b5a:	out    dx,al
  406b5b:	lods   eax,DWORD PTR ds:[esi]
  406b5c:	stc    
  406b5d:	ret    
  406b5e:	xchg   esi,eax
  406b5f:	js     0x406b64
  406b61:	(bad)  
  406b62:	pushf  
  406b63:	adc    BYTE PTR [ebx-0x36],al
  406b66:	cmp    DWORD PTR [ecx-0x7fafdf2b],edx
  406b6c:	or     eax,0x36d1dcac
  406b71:	icebp  
  406b72:	test   BYTE PTR [eax+0x7a],dh
  406b75:	mov    DWORD PTR [eax],eax
  406b77:	(bad)  [eax-0xc51f193]
  406b7d:	fidivr WORD PTR [ebx]
  406b7f:	adc    DWORD PTR ds:[esi+0x13642820],ebp
  406b86:	dec    ebp
  406b87:	inc    ebx
  406b88:	lods   eax,DWORD PTR ds:[esi]
  406b89:	xor    eax,0x248b454e
  406b8e:	(bad)  
  406b8f:	jnp    0x406bfb
  406b91:	in     al,dx
  406b92:	inc    edi
  406b93:	push   0x908ca99a
  406b98:	test   al,0x76
  406b9a:	xchg   edx,eax
  406b9b:	push   0x42234a8
  406ba0:	cmp    DWORD PTR ds:0x7c49b15a,eax
  406ba6:	mov    eax,0xbec38697
  406bab:	stos   DWORD PTR es:[edi],eax
  406bac:	pop    edi
  406bad:	sbb    eax,DWORD PTR [edi+0x5a29247d]
  406bb3:	cmp    ebx,ebp
  406bb5:	and    al,0x31
  406bb7:	adc    eax,0x31a79d28
  406bbc:	(bad)  
  406bbd:	adc    al,0xf
  406bbf:	xchg   edi,eax
  406bc0:	fwait
  406bc1:	stc    
  406bc2:	lods   al,BYTE PTR ds:[esi]
  406bc3:	or     ch,BYTE PTR [edx]
  406bc5:	data16 jecxz 0x406b90
  406bc8:	imul   esi,DWORD PTR [esi+0x52e35b20],0xb6a5aa33
  406bd2:	inc    eax
  406bd3:	fisubr WORD PTR [ebp-0x690d58a6]
  406bd9:	cmp    eax,0x70f713d9
  406bde:	mov    esi,0x90cb1ef2
  406be3:	xor    bx,WORD PTR [eax+ecx*4+0x14]
  406be8:	pop    esp
  406be9:	rcr    BYTE PTR [esi+0x12c0dfd5],0x27
  406bf0:	xchg   edx,eax
  406bf1:	mov    ds:0xecce6cb5,al
  406bf6:	pusha  
  406bf7:	and    al,0x43
  406bf9:	push   ds
  406bfa:	push   eax
  406bfb:	jg     0x406bf1
  406bfd:	pop    esp
  406bfe:	pop    ecx
  406bff:	out    0xeb,al
  406c01:	mov    al,0x62
  406c03:	sbb    al,0x81
  406c05:	inc    edi
  406c06:	int3   
  406c07:	jne    0x406bce
  406c09:	cmp    ebp,eax
  406c0b:	xchg   ecx,eax
  406c0c:	sti    
  406c0d:	into   
  406c0e:	mov    DWORD PTR [edi-0x34869fd2],ecx
  406c14:	loop   0x406c66
  406c16:	push   0xffffffea
  406c18:	push   esi
  406c19:	pop    esp
  406c1a:	mov    WORD PTR [edx],es
  406c1c:	xchg   edx,eax
  406c1d:	and    al,0x1d
  406c1f:	ins    BYTE PTR es:[edi],dx
  406c20:	dec    edx
  406c21:	add    dh,cl
  406c23:	ret    
  406c24:	xor    ecx,DWORD PTR [ebp-0x2f507c36]
  406c2a:	mov    BYTE PTR [ebx],dl
  406c2c:	das    
  406c2d:	pop    edx
  406c2e:	xlat   BYTE PTR ds:[ebx]
  406c2f:	adc    BYTE PTR [edi+0x1e985db],0x93
  406c36:	in     al,0xb2
  406c38:	mov    BYTE PTR [ebp-0x34c610fd],0x52
  406c3f:	cmp    al,0x17
  406c41:	push   edi
  406c42:	bound  ebx,QWORD PTR [esi+0x2b6134d1]
  406c48:	push   eax
  406c49:	jle    0x406c69
  406c4b:	sbb    esi,edi
  406c4d:	vdivsd xmm5,xmm5,QWORD PTR [ebx]
  406c51:	fimul  WORD PTR [ecx+0x39726f61]
  406c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c58:	mov    edi,edi
  406c5a:	or     BYTE PTR [edx+esi*1-0x310cb402],dh
  406c61:	daa    
  406c62:	mov    eax,0x3a86aaff
  406c67:	movlps xmm1,QWORD PTR [edx+ebp*2]
  406c6b:	inc    ebp
  406c6c:	mov    edi,0x6978b5f2
  406c71:	adc    edi,DWORD PTR [edi+0x1]
  406c74:	add    esp,DWORD PTR [edi]
  406c76:	clc    
  406c77:	hlt    
  406c78:	pusha  
  406c79:	aam    0x5a
  406c7b:	jp     0x406c37
  406c7d:	ins    DWORD PTR es:[edi],dx
  406c7e:	dec    BYTE PTR [esi-0x64e1d244]
  406c84:	xchg   ebx,eax
  406c85:	push   cs
  406c86:	in     eax,dx
  406c87:	dec    esp
  406c88:	leave  
  406c89:	loop   0x406cc2
  406c8b:	retf   
  406c8c:	inc    edi
  406c8d:	imul   eax,esi,0x65
  406c90:	arpl   WORD PTR [edi+ebp*8-0x33],di
  406c94:	mov    eax,0x35020532
  406c99:	xchg   edx,eax
  406c9a:	(bad)  
  406c9b:	mov    dh,0x1f
  406c9d:	aam    0x8f
  406c9f:	mov    ebx,0xef3e324b
  406ca4:	repnz xor edi,DWORD PTR [esi-0x13]
  406ca8:	nop
  406ca9:	mov    dl,0xb4
  406cab:	and    edx,DWORD PTR [esp+ebp*4-0x42]
  406caf:	inc    edi
  406cb0:	cmp    BYTE PTR [esi-0x1],ah
  406cb3:	scas   al,BYTE PTR es:[edi]
  406cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb5:	stc    
  406cb6:	pop    ds
  406cb7:	jecxz  0x406cbe
  406cb9:	add    al,0x58
  406cbb:	cmp    al,0x5a
  406cbd:	sub    ecx,esi
  406cbf:	xchg   ebx,eax
  406cc0:	sub    dh,BYTE PTR [esi]
  406cc2:	inc    ebx
  406cc3:	mov    cl,0x8f
  406cc5:	and    edi,DWORD PTR [edi-0x1]
  406cc8:	xchg   edx,eax
  406cc9:	popf   
  406cca:	push   ebx
  406ccb:	sbb    al,0xbb
  406ccd:	push   eax
  406cce:	mov    ebx,0x8a46110a
  406cd3:	neg    BYTE PTR ds:0x144d3f4e
  406cd9:	ret    
  406cda:	and    al,0xb7
  406cdc:	adc    BYTE PTR [ecx-0x52],0x38
  406ce0:	cmp    al,0x21
  406ce2:	fisubr DWORD PTR [ebx+0x64919734]
  406ce8:	rcl    BYTE PTR ds:0x3b505e70,1
  406cee:	cmp    esp,DWORD PTR [ebp-0x79]
  406cf1:	xor    eax,DWORD PTR [ebp-0x6e596648]
  406cf7:	inc    eax
  406cf8:	sbb    DWORD PTR [ecx-0x463dc7b],ecx
  406cfe:	shr    DWORD PTR [ebx],cl
  406d00:	rcr    BYTE PTR [eax],1
  406d02:	test   al,0x42
  406d04:	xchg   edx,eax
  406d05:	js     0x406cdf
  406d07:	mov    eax,0xed54c039
  406d0c:	dec    eax
  406d0d:	xor    DWORD PTR [ecx],0xffffff92
  406d10:	pusha  
  406d11:	je     0x406cb4
  406d13:	ja     0x406c98
  406d15:	dec    edx
  406d16:	test   DWORD PTR [edx+0x2df4f69f],0xdaacf51
  406d20:	jns    0x406d09
  406d22:	mov    dl,0xf8
  406d24:	pop    ebp
  406d25:	or     BYTE PTR [esi],al
  406d27:	dec    esi
  406d28:	in     al,dx
  406d29:	enter  0xf170,0xc9
  406d2d:	ins    BYTE PTR es:[edi],dx
  406d2e:	push   cx
  406d30:	mov    edi,0xac4bbf83
  406d35:	(bad)  
  406d36:	int3   
  406d37:	ins    DWORD PTR es:[edi],dx
  406d38:	xor    DWORD PTR [edx-0x453251da],0x5
  406d3f:	sub    eax,DWORD PTR [ebx]
  406d41:	jge    0x406dae
  406d43:	in     al,0xd5
  406d45:	adc    al,0xe1
  406d47:	and    edx,DWORD PTR [ebx+0x61e468da]
  406d4d:	ret    0x657f
  406d50:	or     DWORD PTR [esi],edi
  406d52:	enter  0xed0b,0x28
  406d56:	test   al,0x25
  406d58:	and    edi,edx
  406d5a:	add    eax,0xf9135c16
  406d5f:	jmp    0xf8d0:0xd5d79bf6
  406d66:	mov    ah,BYTE PTR ds:0x39649009
  406d6c:	sub    al,0x85
  406d6e:	jns    0x406d3e
  406d70:	out    0xc6,al
  406d72:	xor    DWORD PTR [ecx-0x28a5f939],esi
  406d78:	push   es
  406d79:	fsubr  QWORD PTR [edx]
  406d7b:	xchg   ecx,eax
  406d7c:	call   0x56eb:0x5ea42602
  406d83:	pop    ebp
  406d84:	into   
  406d85:	stos   BYTE PTR es:[edi],al
  406d86:	mov    al,ds:0x8d808c13
  406d8b:	retf   0xe233
  406d8e:	xchg   edx,eax
  406d8f:	imul   eax,esi,0x75
  406d92:	ror    BYTE PTR [edx+0x2d],cl
  406d95:	lods   eax,DWORD PTR ds:[esi]
  406d96:	sahf   
  406d97:	push   cs
  406d98:	test   eax,0xbab8a9f0
  406d9d:	inc    ecx
  406d9e:	jge    0x406e0d
  406da0:	aas    
  406da1:	call   0x6ce5:0xc60d8dae
  406da8:	cmp    eax,0x5dfde49b
  406dad:	mov    ch,0x65
  406daf:	mov    WORD PTR [esi+0x4],fs
  406db2:	inc    eax
  406db3:	cs pusha 
  406db5:	ficomp DWORD PTR [ebx]
  406db7:	arpl   WORD PTR [ecx+0x2f],dx
  406dba:	in     eax,dx
  406dbb:	rcr    DWORD PTR [ebx],cl
  406dbd:	stc    
  406dbe:	push   cs
  406dbf:	loope  0x406dd4
  406dc1:	push   ebp
  406dc2:	out    0xd8,al
  406dc4:	test   BYTE PTR [eax+0x162cd1e],0x15
  406dcb:	loopne 0x406df4
  406dcd:	gs and eax,0x10965f53
  406dd3:	cld    
  406dd4:	mov    esp,0xa2ab564e
  406dd9:	(bad)  
  406dda:	(bad)  
  406ddb:	mov    esi,0x8ba27525
  406de0:	cmc    
  406de1:	lods   eax,DWORD PTR ds:[esi]
  406de2:	jnp    0x406e32
  406de4:	cld    
  406de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406de6:	in     eax,dx
  406de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de8:	out    0x7c,al
  406dea:	arpl   WORD PTR [edx],si
  406dec:	test   BYTE PTR [eax],ch
  406dee:	jmp    0x1c19:0xcdb2919e
  406df5:	hlt    
  406df6:	sub    DWORD PTR [ebx-0x15],0xfffffff0
  406dfa:	mov    ch,0x62
  406dfc:	lods   al,BYTE PTR ds:[esi]
  406dfd:	xor    BYTE PTR [eax],ah
  406dff:	leave  
  406e00:	out    0x34,al
  406e02:	xor    BYTE PTR [eax-0x16],dl
  406e05:	das    
  406e06:	push   esi
  406e07:	es jp  0x406e15
  406e0a:	and    eax,0x4f5c74fc
  406e0f:	adc    eax,0xf9674b47
  406e14:	sub    esp,DWORD PTR [ecx]
  406e16:	aam    0x11
  406e18:	xchg   BYTE PTR [edi+eiz*1],ch
  406e1b:	retf   
  406e1c:	hlt    
  406e1d:	mov    bh,BYTE PTR [eax-0x7b]
  406e20:	cmp    eax,0x9e887d29
  406e25:	test   DWORD PTR [ebx],eax
  406e27:	sbb    al,0x35
  406e29:	xor    ebx,DWORD PTR [edi]
  406e2b:	push   0xffffffa9
  406e2d:	mov    ebp,0xb30499e3
  406e32:	nop
  406e33:	aas    
  406e34:	ret    
  406e35:	mov    bh,0x44
  406e37:	jg     0x406dc4
  406e39:	xchg   edx,eax
  406e3a:	jae    0x406de7
  406e3c:	jb     0x406e67
  406e3e:	es push eax
  406e40:	push   0xffffffcf
  406e42:	add    bh,ch
  406e44:	xchg   edi,eax
  406e45:	mov    ds:0x22abea8,eax
  406e4a:	xchg   esi,eax
  406e4b:	push   ds
  406e4c:	loopne 0x406e73
  406e4e:	push   ecx
  406e4f:	jecxz  0x406e6b
  406e51:	and    edi,esp
  406e53:	ret    
  406e54:	loop   0x406e1a
  406e56:	(bad)  
  406e57:	aaa    
  406e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e59:	sar    bh,cl
  406e5b:	lock data16 or cl,BYTE PTR gs:[edi-0x205e2d8e]
  406e64:	jae    0x406e9c
  406e66:	inc    eax
  406e67:	aam    0x7f
  406e69:	jecxz  0x406dff
  406e6b:	dec    ebx
  406e6c:	jl     0x406dee
  406e6e:	pusha  
  406e6f:	adc    ch,BYTE PTR [ecx+ebp*1]
  406e72:	fmul   QWORD PTR [ebp+0x35]
  406e75:	aad    0xa4
  406e77:	into   
  406e78:	adc    al,0x5d
  406e7a:	repnz mov bh,0x89
  406e7d:	jno    0x406e10
  406e7f:	jo     0x406e23
  406e81:	mov    al,BYTE PTR [eax+0x4dd2c736]
  406e87:	push   0x24
  406e89:	call   0x8e80:0xf72dabec
  406e90:	in     eax,0x4c
  406e92:	inc    esp
  406e93:	mov    ds:0x7602edb0,al
  406e98:	loopne 0x406e91
  406e9a:	aad    0x6d
  406e9c:	fisub  DWORD PTR [ecx+0x2e]
  406e9f:	mov    cl,0xe8
  406ea1:	cmc    
  406ea2:	gs push ecx
  406ea4:	inc    ebx
  406ea6:	arpl   WORD PTR ds:0x1d7cfe96,di
  406eac:	and    ebx,esp
  406eae:	jp     0x406e45
  406eb0:	pop    edx
  406eb1:	leave  
  406eb2:	inc    esi
  406eb3:	mov    ebx,0x9cbff9f1
  406eb8:	lahf   
  406eb9:	lahf   
  406eba:	arpl   WORD PTR [eax],sp
  406ebc:	inc    esp
  406ebd:	push   esi
  406ebe:	int    0x8a
  406ec0:	fnstcw WORD PTR [edx]
  406ec2:	sbb    al,0x7e
  406ec4:	cwde   
  406ec5:	shl    BYTE PTR [edi],0xd7
  406ec8:	fmul   QWORD PTR [esi+0x415a2b0b]
  406ece:	push   es
  406ecf:	jno    0x406e67
  406ed1:	push   ebx
  406ed2:	mov    ch,0xe2
  406ed4:	pop    esi
  406ed5:	adc    eax,0xc50ffa0d
  406eda:	loopne 0x406e8e
  406edc:	cmp    edx,DWORD PTR [ebp-0x34a3e7f3]
  406ee2:	push   0x33a98d9c
  406ee7:	cwde   
  406ee8:	out    dx,eax
  406ee9:	scas   al,BYTE PTR es:[edi]
  406eea:	cs jmp 0x406f3e
  406eed:	ret    
  406eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eef:	lods   al,BYTE PTR fs:[esi]
  406ef1:	fidivr WORD PTR [eax]
  406ef4:	dec    esi
  406ef5:	xor    BYTE PTR fs:[edx],ch
  406ef8:	pop    ebx
  406ef9:	dec    ebx
  406efa:	test   eax,0xa468e3d8
  406eff:	sbb    al,0xa6
  406f01:	lds    edx,FWORD PTR [edx-0x11]
  406f04:	mov    edx,0xf5caa3f8
  406f09:	cmp    DWORD PTR [edx-0x1f],edi
  406f0c:	call   0x36eb:0x230b602
  406f13:	(bad)  
  406f14:	sahf   
  406f15:	and    al,0x96
  406f17:	pop    eax
  406f18:	adc    esi,DWORD PTR [esi]
  406f1a:	loopne 0x406ea8
  406f1c:	lds    ebx,FWORD PTR [edi+esi*2]
  406f1f:	dec    ecx
  406f20:	mov    eax,0xed433de2
  406f25:	pop    eax
  406f26:	retf   0x7ebd
  406f29:	adc    ecx,ecx
  406f2b:	fistp  DWORD PTR [esp+ebp*2-0x4ea58dd]
  406f32:	dec    ebp
  406f33:	xchg   esp,eax
  406f34:	sub    eax,0x8d72a25b
  406f39:	xor    DWORD PTR [esp+ebp*2],ebp
  406f3c:	push   ecx
  406f3d:	jp     0x406ee8
  406f3f:	jae    0x406ee5
  406f41:	mov    esp,0x1d6b933b
  406f46:	in     eax,0x82
  406f48:	mov    eax,ds:0x235468c5
  406f4d:	in     eax,dx
  406f4e:	push   ss
  406f4f:	ja     0x406f7f
  406f51:	sub    ch,BYTE PTR [ebx+0x7259e5d]
  406f57:	pop    ecx
  406f58:	scas   al,BYTE PTR es:[edi]
  406f59:	(bad)  
  406f5b:	adc    ah,al
  406f5d:	lds    edx,FWORD PTR [eax+0x11]
  406f60:	cs xchg edi,eax
  406f62:	or     eax,0x9b8df9c1
  406f67:	xor    ebx,DWORD PTR [ebx+0x1161da5f]
  406f6d:	push   ds
  406f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6f:	in     eax,0xce
  406f71:	push   ebx
  406f72:	daa    
  406f73:	scas   al,BYTE PTR es:[edi]
  406f74:	aas    
  406f75:	push   ebp
  406f76:	pop    edi
  406f77:	pop    ds
  406f78:	xchg   edi,eax
  406f79:	std    
  406f7a:	inc    esi
  406f7b:	and    dh,BYTE PTR [edx+0x36c9afa8]
  406f81:	mov    cs,WORD PTR [edx+0x5d]
  406f84:	xor    al,0x67
  406f86:	popf   
  406f87:	sar    BYTE PTR [edx+0x44],cl
  406f8a:	xchg   ecx,eax
  406f8b:	je     0x406f73
  406f8d:	pop    ecx
  406f8e:	mov    eax,ds:0x3d841a04
  406f93:	mov    eax,0x98637d26
  406f98:	inc    ebp
  406f99:	add    al,0xad
  406f9b:	push   ds
  406f9c:	inc    edx
  406f9d:	test   eax,0x84e0f93d
  406fa2:	lea    edx,[eax]
  406fa4:	add    DWORD PTR [esi-0x1b022548],0xffffffa8
  406fab:	xchg   esp,eax
  406fac:	and    DWORD PTR [edx-0x4138890],edx
  406fb2:	dec    ebp
  406fb3:	pop    esp
  406fb4:	test   DWORD PTR [ebp+ecx*8-0xf],edi
  406fb8:	aam    0xb7
  406fba:	push   0xffffff8a
  406fbc:	inc    ebx
  406fbd:	stos   BYTE PTR es:[edi],al
  406fbe:	dec    eax
  406fbf:	dec    esi
  406fc0:	mov    ecx,0x87892d9e
  406fc5:	cwde   
  406fc6:	jp     0x406f95
  406fc8:	ins    DWORD PTR es:[edi],dx
  406fc9:	xchg   esp,eax
  406fca:	and    eax,0xbc1e7577
  406fcf:	mov    ?,WORD PTR [edi+0x5900b8a5]
  406fd5:	mov    ds:0x970b6fbe,al
  406fda:	adc    al,0x40
  406fdc:	sbb    DWORD PTR [eax-0x1],ebx
  406fdf:	mul    DWORD PTR [ecx+0x1d74ad5b]
  406fe5:	add    al,0x65
  406fe7:	xchg   esi,eax
  406fe8:	(bad)  [ebx-0x50]
  406feb:	push   eax
  406fec:	dec    esi
  406fed:	bnd ret 0x13bd
  406ff1:	outs   dx,DWORD PTR ds:[esi]
  406ff2:	adc    eax,0xbdb94e4a
  406ff7:	jne    0x406f97
  406ff9:	jecxz  0x406ff3
  406ffb:	inc    esi
  406ffc:	or     BYTE PTR [ecx],dl
  406ffe:	mov    dh,0x6d
  407000:	sbb    dl,bl
  407002:	rol    DWORD PTR [ebx],cl
  407004:	xchg   esp,eax
  407005:	mov    DWORD PTR [ebx-0x2a1dd1f5],edx
  40700b:	push   0xffffffd3
  40700d:	inc    edx
  40700e:	jp     0x407049
  407010:	repz scas eax,DWORD PTR es:[edi]
  407012:	pop    ss
  407013:	adc    DWORD PTR [edi+ecx*4-0x33],edx
  407017:	push   es
  407018:	fstp   QWORD PTR [ebp-0x2b]
  40701b:	lock mov bh,0xee
  40701e:	pop    ecx
  40701f:	into   
  407020:	scas   eax,DWORD PTR es:[edi]
  407021:	int3   
  407022:	nop
  407023:	call   0x41e9:0x3d19378
  40702a:	cmp    DWORD PTR [eax-0x57],ecx
  40702d:	adc    eax,ecx
  40702f:	sti    
  407030:	mov    dh,0x72
  407032:	mov    ebp,0x404de173
  407037:	js     0x406ff4
  407039:	out    dx,eax
  40703a:	popa   
  40703b:	cmp    BYTE PTR [edx-0x6f],bh
  40703e:	aam    0x20
  407040:	jle    0x40702f
  407042:	scas   al,BYTE PTR es:[edi]
  407043:	mov    ebp,0x8f618bd
  407048:	mov    bh,0xf4
  40704a:	lds    ecx,FWORD PTR [edx-0x30]
  40704d:	mov    ch,0x8c
  40704f:	arpl   WORD PTR [edi+0x6532741e],dx
  407055:	sub    edx,DWORD PTR [ecx]
  407057:	lock cwde 
  407059:	push   ss
  40705a:	jg     0x4070a7
  40705c:	int    0x16
  40705e:	push   ecx
  40705f:	mov    al,0xb
  407061:	or     al,0x30
  407063:	or     eax,0x73943b63
  407068:	in     eax,0x19
  40706a:	cdq    
  40706b:	int    0x11
  40706d:	(bad)  
  40706e:	and    al,0xb3
  407070:	xchg   ebp,eax
  407071:	lahf   
  407072:	jp     0x4070df
  407074:	fidivr WORD PTR [ecx-0x4f70299e]
  40707a:	shr    ebp,cl
  40707c:	mov    DWORD PTR [edx+0x22],eax
  40707f:	lods   eax,DWORD PTR ds:[esi]
  407080:	mov    eax,ebx
  407082:	out    0xf0,eax
  407084:	outs   dx,BYTE PTR ds:[esi]
  407085:	out    0xa9,al
  407087:	mov    ah,0x24
  407089:	adc    DWORD PTR [edi+0x2f],edx
  40708c:	mov    dh,0xbd
  40708e:	rcr    ch,0x83
  407091:	lods   eax,DWORD PTR ds:[esi]
  407092:	fdivr  DWORD PTR ds:0x1040e993
  407098:	repnz test DWORD PTR [ecx+ecx*8+0x4d2bed1],ebx
  4070a0:	mov    bl,0x30
  4070a2:	sbb    esi,ebx
  4070a4:	iret   
  4070a5:	and    BYTE PTR [edi-0x3f],dh
  4070a8:	(bad)  
  4070aa:	cmp    al,0x8
  4070ac:	fidiv  DWORD PTR [ebx+eax*8+0x72d68251]
  4070b3:	sub    eax,0x5b4dce8f
  4070b8:	and    esp,DWORD PTR [edx+0x7878d02b]
  4070be:	sub    ah,0xf5
  4070c1:	or     BYTE PTR [edi-0x69],ch
  4070c4:	int3   
  4070c5:	lock ss cdq 
  4070c8:	shr    DWORD PTR [eax],cl
  4070ca:	cmp    bl,al
  4070cc:	cmp    al,0xe4
  4070ce:	popf   
  4070cf:	imul   edi,ebp,0xe55c439e
  4070d5:	test   ch,ah
  4070d7:	and    ch,BYTE PTR [esi+0x4e41ea29]
  4070dd:	rcl    edi,cl
  4070df:	mov    ebp,0xa266602c
  4070e4:	sar    DWORD PTR [ebx-0x36],cl
  4070e7:	sbb    esp,DWORD PTR [esi+0x6bb8687]
  4070ed:	lahf   
  4070ee:	xor    DWORD PTR [ebp+0x6a],0x31d87683
  4070f5:	lock mov esi,0x344e59f1
  4070fb:	xor    DWORD PTR [ecx-0x62],esi
  4070fe:	mov    bh,0x9b
  407100:	or     DWORD PTR ds:0x941a25fd,ecx
  407106:	mov    bl,0x58
  407108:	stc    
  407109:	push   es
  40710a:	repnz test DWORD PTR [ebx-0x2ad77abf],esi
  407111:	and    eax,0x3e338b47
  407116:	in     eax,0xa0
  407118:	fisttp QWORD PTR [ebx]
  40711a:	mov    esp,0xc80bbadb
  40711f:	sbb    BYTE PTR [ebp+0x363acc89],ch
  407125:	xor    eax,0xd9b283f8
  40712a:	ja     0x40711d
  40712c:	mov    bh,0x81
  40712e:	cli    
  40712f:	mov    DWORD PTR [edi],edi
  407131:	add    bh,BYTE PTR [ecx]
  407133:	or     al,0xbe
  407135:	push   esp
  407136:	test   al,0xe7
  407138:	jmp    0xe46c:0x525a34f4
  40713f:	int    0x6
  407141:	mov    bl,0xb4
  407143:	stos   DWORD PTR es:[edi],eax
  407144:	(bad)  
  407145:	sbb    al,0x48
  407147:	cmp    DWORD PTR [esi+0x15],ecx
  40714a:	cmp    BYTE PTR [ecx+0x3935db24],al
  407150:	fisttp WORD PTR [esi]
  407152:	scas   eax,DWORD PTR es:[edi]
  407153:	cmp    eax,0xcc98b732
  407158:	lods   eax,DWORD PTR ds:[esi]
  407159:	jae    0x407112
  40715b:	out    0x3e,eax
  40715d:	or     dh,BYTE PTR [esp+esi*8+0x74]
  407161:	test   al,0x17
  407163:	out    0xc6,al
  407165:	pop    edi
  407166:	es jmp 0x16724f06
  40716c:	xchg   dl,ah
  40716e:	sbb    DWORD PTR [ebp+0x1c],edi
  407171:	or     al,0x43
  407173:	jge    0x407126
  407175:	pushf  
  407176:	xlat   BYTE PTR ds:[ebx]
  407177:	shr    al,0xe7
  40717a:	push   es
  40717b:	sub    bh,BYTE PTR [ebx]
  40717d:	ss pusha 
  40717f:	fwait
  407180:	push   es
  407181:	dec    esi
  407182:	gs pushf 
  407184:	xchg   esp,eax
  407185:	and    al,0x99
  407187:	jecxz  0x4071ed
  407189:	and    eax,0x1ac19fff
  40718e:	lea    edi,[edx+edi*2]
  407191:	ins    DWORD PTR es:[edi],dx
  407192:	mov    dl,0x50
  407194:	adc    eax,0x922252c5
  407199:	xlat   BYTE PTR ds:[ebx]
  40719a:	ficomp WORD PTR [ebx+0x3a]
  40719d:	jmp    0x40712d
  40719f:	clc    
  4071a0:	mov    cl,0x46
  4071a2:	fs enterw 0x6edb,0x56
  4071a8:	adc    al,0xdd
  4071aa:	sbb    edi,DWORD PTR [ecx-0x2d119d97]
  4071b0:	xor    DWORD PTR [edi+0x196a29d],esp
  4071b6:	mov    bh,0x52
  4071b8:	mov    ds:0x3081ad5a,al
  4071bd:	pop    es
  4071be:	xlat   BYTE PTR ds:[ebx]
  4071bf:	xor    cl,BYTE PTR [ebx]
  4071c1:	cmp    ebx,DWORD PTR [ecx+0x5b583e6e]
  4071c7:	xchg   edi,eax
  4071c8:	sar    cl,0xbc
  4071cb:	or     BYTE PTR [eax-0x32a4b831],cl
  4071d1:	push   edx
  4071d2:	je     0x407247
  4071d4:	(bad)  
  4071d5:	inc    ebp
  4071d6:	cs (bad) 
  4071d8:	pop    ebp
  4071d9:	test   BYTE PTR [ecx+eiz*2-0x123e6bf2],0x83
  4071e1:	xor    eax,0x66af04dd
  4071e6:	or     cl,dh
  4071e8:	es xor al,0xfb
  4071eb:	pop    ss
  4071ec:	mov    WORD PTR [edi+0x16],es
  4071ef:	inc    ebp
  4071f0:	jnp    0x40725c
  4071f2:	jmp    0xa30e:0x10b72625
  4071f9:	mov    eax,0xad780de1
  4071fe:	cmp    al,0x18
  407200:	ret    
  407201:	das    
  407202:	xchg   ecx,eax
  407203:	push   ebx
  407204:	add    eax,0x51da8d3e
  407209:	sbb    ebp,edi
  40720b:	dec    esi
  40720c:	pop    eax
  40720d:	int3   
  40720e:	and    eax,DWORD PTR [ebx-0x69a17262]
  407214:	cwde   
  407215:	cmc    
  407216:	jge    0x4071f2
  407218:	inc    ecx
  407219:	imul   edi,ebp,0x1e
  40721c:	sub    eax,0x6bc2d8b2
  407221:	aam    0xbc
  407223:	dec    esi
  407224:	fs mov cl,0xe3
  407227:	sub    BYTE PTR [edx],0x39
  40722a:	aam    0x24
  40722c:	push   ds
  40722d:	pop    ds
  40722e:	fs pop esi
  407230:	and    ecx,DWORD PTR [ebx+ebx*4+0x32]
  407234:	stos   BYTE PTR es:[edi],al
  407235:	jne    0x40729a
  407237:	das    
  407238:	jno    0x407210
  40723a:	sbb    DWORD PTR [ebx-0x5d],ecx
  40723d:	shr    ecx,0xdd
  407240:	leave  
  407241:	adc    ebx,esi
  407243:	sub    esp,DWORD PTR [edi+0x54]
  407246:	ret    0x1885
  407249:	fldcw  WORD PTR es:[ecx-0xf]
  40724d:	out    0x7e,eax
  40724f:	lods   al,BYTE PTR ds:[esi]
  407250:	in     eax,dx
  407251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407252:	leave  
  407253:	loope  0x407246
  407255:	adc    ah,bl
  407257:	int3   
  407258:	loopne 0x4071e3
  40725a:	(bad)  
  40725b:	icebp  
  40725c:	mov    esi,0x965cd943
  407261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407262:	imul   ecx,edi,0xb2b65a92
  407268:	jmp    0xea5f64f2
  40726d:	adc    BYTE PTR [ecx-0x79],dh
  407270:	lods   eax,DWORD PTR ds:[esi]
  407271:	jle    0x407287
  407273:	xchg   esp,eax
  407274:	cld    
  407275:	mov    al,ds:0x725ef1c6
  40727a:	inc    eax
  40727b:	dec    edx
  40727c:	inc    ebx
  40727d:	cmp    esp,DWORD PTR [esi]
  40727f:	rcl    DWORD PTR [eax+0x11678a7b],0xd8
  407286:	pop    es
  407287:	aad    0xae
  407289:	es dec esp
  40728b:	pop    ecx
  40728c:	ficomp WORD PTR [edx]
  40728e:	mov    esi,0xeea1d17c
  407293:	cmp    DWORD PTR [esi],0x6b
  407296:	es pushf 
  407298:	fiadd  DWORD PTR [eax]
  40729a:	enter  0x15ca,0x7d
  40729e:	dec    edi
  40729f:	aas    
  4072a0:	mov    esp,0xdae0d52e
  4072a5:	jp     0x407281
  4072a7:	adc    ebx,DWORD PTR [ebp+0x63]
  4072aa:	or     BYTE PTR [edi-0x61eb8946],ah
  4072b0:	mov    ebp,es
  4072b2:	loopne 0x407288
  4072b4:	int    0xfa
  4072b6:	les    edi,FWORD PTR [ebp+0x7530cedf]
  4072bc:	or     ch,BYTE PTR [ebx+0x43d76127]
  4072c2:	(bad)  
  4072c3:	fld    QWORD PTR [edx]
  4072c5:	cdq    
  4072c6:	dec    ecx
  4072c7:	or     eax,0x846b89fb
  4072cc:	jmp    DWORD PTR [edx+0x2a8fcdd4]
  4072d2:	(bad)  
  4072d3:	imul   BYTE PTR [ebp+0x7ad3c2f6]
  4072d9:	iret   
  4072da:	xor    BYTE PTR [ecx-0x1f],dh
  4072dd:	nop
  4072de:	and    al,0xfa
  4072e0:	test   al,0xcb
  4072e2:	dec    BYTE PTR ds:0x9e0a7af
  4072e8:	aam    0x29
  4072ea:	adc    dl,BYTE PTR [edx]
  4072ec:	lea    edx,[eax+0xfc37588]
  4072f2:	loop   0x4072f1
  4072f4:	neg    DWORD PTR [edx-0x576f30bc]
  4072fa:	lock adc bh,bh
  4072fd:	sub    BYTE PTR [ecx-0x4f783511],bl
  407303:	imul   esp,DWORD PTR [esi+esi*2-0x5f99e67f],0xffffff9e
  40730b:	lods   eax,DWORD PTR ds:[esi]
  40730c:	push   ebx
  40730d:	leave  
  40730e:	rcl    DWORD PTR [edi+0xc],0xa2
  407312:	(bad)  
  407313:	cld    
  407314:	sti    
  407315:	mov    fs,ecx
  407317:	jno    0x4072ac
  407319:	(bad)  
  40731a:	cmp    al,0xb5
  40731c:	jp     0x407347
  40731e:	xchg   ecx,eax
  40731f:	jmp    0x4072f3
  407321:	fld    st(6)
  407323:	outs   dx,DWORD PTR ds:[esi]
  407324:	pop    eax
  407325:	or     al,0x2a
  407327:	popf   
  407328:	push   ds
  407329:	cli    
  40732a:	fadd   st,st(4)
  40732c:	cmp    esp,DWORD PTR [edx-0x3c]
  40732f:	(bad)  
  407330:	pop    eax
  407331:	push   ebx
  407332:	xor    edx,DWORD PTR [esi+esi*4+0x85ac9b5]
  407339:	push   0x2f0a86c2
  40733e:	cmp    al,0x8d
  407340:	fist   WORD PTR [edi-0x5987ab15]
  407346:	xor    ecx,DWORD PTR gs:[esi]
  407349:	mov    ds:0x4b67a75e,al
  40734e:	sbb    eax,0x67f5ea47
  407353:	jnp    0x4073c0
  407355:	hlt    
  407356:	jb     0x407352
  407358:	lahf   
  407359:	repnz lods al,BYTE PTR ds:[esi]
  40735b:	mov    eax,0xb8eab5e1
  407360:	push   eax
  407361:	pop    esi
  407362:	ins    DWORD PTR es:[edi],dx
  407363:	adc    al,dh
  407365:	pop    esi
  407366:	stos   DWORD PTR es:[edi],eax
  407367:	push   ebx
  407368:	push   esi
  407369:	(bad)  
  40736b:	cli    
  40736c:	aad    0xd8
  40736e:	pop    es
  40736f:	mov    edi,DWORD PTR [ebx+ebx*1-0x1b57713b]
  407376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407377:	dec    ebp
  407378:	add    BYTE PTR ds:0xcf3856b6,0x3
  40737f:	pop    es
  407380:	cli    
  407381:	gs lahf 
  407383:	mov    ecx,0xedc74326
  407388:	cmp    edx,edi
  40738a:	mov    ah,0xb0
  40738c:	mov    BYTE PTR [ebx-0x63],dh
  40738f:	mov    ds:0xf190dbe2,eax
  407394:	push   esp
  407395:	scas   eax,DWORD PTR es:[edi]
  407396:	outs   dx,DWORD PTR ds:[esi]
  407397:	ins    DWORD PTR es:[edi],dx
  407398:	fiadd  WORD PTR [ebx-0x55]
  40739b:	(bad)  
  40739c:	fmulp  st(4),st
  40739e:	cmp    eax,0x35653fc
  4073a3:	mov    ds,WORD PTR [ebx+0x28d88538]
  4073a9:	xchg   esp,eax
  4073aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ab:	scas   al,BYTE PTR es:[edi]
  4073ac:	mov    eax,0xa7979a99
  4073b1:	pop    ss
  4073b2:	push   0x36
  4073b4:	les    ebp,FWORD PTR [eax+ebp*2]
  4073b7:	jl     0x4073f1
  4073b9:	out    0xc7,al
  4073bb:	jo     0x4073b3
  4073bd:	adc    dl,BYTE PTR [ecx]
  4073bf:	mov    al,ds:0x1ad8f012
  4073c4:	nop
  4073c5:	push   esi
  4073c7:	xlat   BYTE PTR ds:[ebx]
  4073c8:	vmptrst QWORD PTR [esi-0x69]
  4073cc:	mov    ch,0x4
  4073ce:	push   esp
  4073cf:	loopne 0x40740e
  4073d1:	clc    
  4073d2:	adc    bh,BYTE PTR [eax]
  4073d4:	cmp    BYTE PTR [edi+0x14082f4f],ch
  4073da:	jns    0x4073d2
  4073dc:	shl    DWORD PTR es:[ebx],0x80
  4073e0:	cmp    DWORD PTR [eax],0x2f
  4073e3:	popa   
  4073e4:	pop    edi
  4073e5:	cmp    al,cl
  4073e7:	push   0xffffffdb
  4073e9:	xchg   ebp,eax
  4073ea:	fsub   DWORD PTR [ebx-0x2558a80a]
  4073f0:	xor    eax,esp
  4073f2:	ror    ebp,1
  4073f4:	dec    ebp
  4073f5:	jno    0x407466
  4073f7:	out    dx,al
  4073f8:	sbb    DWORD PTR [eax+0x14],0xa5a171e
  4073ff:	out    0x6e,eax
  407401:	jmp    0x75d2:0xe5f737a0
  407408:	push   es
  407409:	pushf  
  40740a:	outs   dx,DWORD PTR ds:[esi]
  40740b:	mov    cl,0x9a
  40740d:	or     al,0x7d
  40740f:	call   0x963bed3a
  407414:	std    
  407415:	add    esp,0xdd680ca5
  40741b:	aad    0xe6
  40741d:	into   
  40741e:	ja     0x4073c3
  407420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407421:	jp     0x4073ff
  407423:	lea    edx,[edx-0x6d45e101]
  407429:	xchg   BYTE PTR [ecx],bl
  40742b:	ss scas al,BYTE PTR es:[edi]
  40742d:	arpl   WORD PTR [edx-0x7be1bb46],bp
  407433:	pop    esi
  407434:	popa   
  407435:	data16 jge 0x4074b5
  407438:	mov    esp,esi
  40743a:	add    DWORD PTR cs:[ebx],eax
  40743d:	cmc    
  40743e:	rcl    cl,0x20
  407441:	mov    ebp,0xf4b405be
  407446:	pop    ds
  407447:	mov    ebx,DWORD PTR [eax-0x473fe195]
  40744d:	fwait
  40744e:	jmp    0x407499
  407450:	aas    
  407451:	adc    al,0xe4
  407453:	dec    edx
  407454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407455:	scas   eax,DWORD PTR es:[edi]
  407456:	xchg   esp,eax
  407457:	popf   
  407458:	(bad)  
  407459:	sar    BYTE PTR [ecx],1
  40745b:	(bad)  
  40745c:	and    bh,BYTE PTR [edi]
  40745e:	sbb    BYTE PTR [ecx-0x14],cl
  407461:	mov    eax,0x462399b6
  407466:	adc    dh,bh
  407468:	add    dl,BYTE PTR [eax+0x36]
  40746b:	or     DWORD PTR [ecx],0x2
  40746e:	leave  
  40746f:	xchg   edi,eax
  407470:	cmp    ah,bh
  407472:	into   
  407473:	jne    0x4074de
  407475:	mov    ss,WORD PTR [ecx]
  407477:	push   ecx
  407478:	dec    ebp
  407479:	sbb    edi,DWORD PTR ds:0x9e6f6b72
  40747f:	adc    edx,DWORD PTR [esi-0x2f23af0a]
  407485:	icebp  
  407486:	adc    bl,BYTE PTR [esi]
  407488:	into   
  407489:	pop    es
  40748a:	xchg   ecx,eax
  40748b:	fs lock push es
  40748e:	mov    edx,0x9cd402b7
  407493:	outs   dx,BYTE PTR ds:[esi]
  407494:	xor    BYTE PTR [edx+0x3d],bh
  407497:	xchg   edi,eax
  407498:	call   0x6d11dddf
  40749d:	jae    0x407433
  40749f:	lea    edi,[edx+eiz*2-0x26]
  4074a3:	dec    bx
  4074a5:	nop
  4074a6:	cs fcmovb st,st(1)
  4074a9:	mov    edi,0x64ff5a10
  4074ae:	(bad)  
  4074b0:	mov    cl,0xf3
  4074b2:	or     esi,ecx
  4074b4:	mov    ecx,0xad6bdcff
  4074b9:	jge    0x40746c
  4074bb:	out    dx,eax
  4074bc:	idiv   BYTE PTR [ecx]
  4074be:	pushfw 
  4074c0:	dec    esi
  4074c1:	and    DWORD PTR [eax+0x166fc329],ebp
  4074c7:	ja     0x4074ff
  4074c9:	aam    0xb8
  4074cb:	inc    ebp
  4074cc:	rol    BYTE PTR [ebx+0x6a],cl
  4074cf:	xchg   edx,eax
  4074d0:	jns    0x407485
  4074d2:	push   cs
  4074d3:	pop    ss
  4074d4:	fucomip st,st(7)
  4074d6:	sahf   
  4074d7:	sub    eax,0x6a41b912
  4074dc:	jl     0x40752d
  4074de:	or     DWORD PTR [eax+edi*2-0x2d524aa7],ebx
  4074e5:	leave  
  4074e6:	pop    edi
  4074e7:	pop    ss
  4074e8:	out    dx,eax
  4074e9:	retf   0xf54e
  4074ec:	out    0xb2,al
  4074ee:	fnsave [ebx+0x47df39aa]
  4074f4:	dec    eax
  4074f5:	cld    
  4074f6:	mov    ecx,0x20b8b031
  4074fb:	mov    ebx,0x5f6585c0
  407500:	add    eax,0x1b6eaf16
  407505:	cmc    
  407506:	xor    esi,edi
  407508:	xor    ah,BYTE PTR [edx+0x3cea11f2]
  40750e:	test   BYTE PTR [edi-0x61],dh
  407511:	and    BYTE PTR [ecx+eiz*1+0x56],dl
  407515:	ret    0xc8da
  407518:	fstp   TBYTE PTR [ebx]
  40751a:	sub    al,0xbb
  40751c:	mov    BYTE PTR [ebx+0x749fa4d9],ch
  407522:	call   0xafa8:0x21afff87
  407529:	push   edi
  40752a:	out    0x19,eax
  40752c:	xchg   edi,eax
  40752d:	pop    es
  40752e:	jo     0x4074bf
  407530:	dec    esi
  407531:	cdq    
  407532:	adc    BYTE PTR [esi],al
  407534:	mov    al,ds:0xed0d9adf
  407539:	xchg   ebx,eax
  40753a:	repz fwait
  40753c:	xor    DWORD PTR [ebp-0x7f],ebp
  40753f:	mov    bh,0xb6
  407541:	or     BYTE PTR [esi-0x3d468112],ah
  407547:	call   0x18e0:0x7ba70d41
  40754e:	jcxz   0x407582
  407551:	sub    bh,BYTE PTR [eax-0x6]
  407554:	cmp    ebx,DWORD PTR [eax+0x4a]
  407557:	mov    ecx,0xe29a8525
  40755c:	sti    
  40755d:	mov    gs,WORD PTR ss:[edx+0x4d]
  407561:	adc    al,0xcb
  407563:	mov    ds,edx
  407565:	push   0x16
  407567:	add    eax,0xa8cb87d
  40756c:	stc    
  40756d:	mov    dl,0xc5
  40756f:	inc    ebx
  407570:	jae    0x407537
  407572:	ficomp DWORD PTR [esi]
  407574:	mov    edi,0x1123b91e
  407579:	imul   ecx,DWORD PTR [ebx+0x5b5a4443],0xf156bd55
  407583:	ja     0x407525
  407585:	pop    edx
  407586:	xor    bh,al
  407588:	cmp    eax,0x7c01a789
  40758d:	jns    0x407521
  40758f:	sub    bh,0xfa
  407592:	jbe    0x407612
  407594:	dec    edi
  407595:	mov    esp,0x2f6f6c83
  40759a:	inc    edi
  40759b:	enter  0xfb70,0xd3
  40759f:	cmp    al,0xc
  4075a1:	inc    ebx
  4075a2:	or     DWORD PTR [ecx+0x1c],ecx
  4075a5:	das    
  4075a6:	dec    esi
  4075a7:	fnsave [edi+0x294f0456]
  4075ad:	rcr    BYTE PTR [ebp+0x76],0x2e
  4075b1:	dec    esi
  4075b2:	cld    
  4075b3:	jle    0x407632
  4075b5:	jmp    0x407593
  4075b7:	jns    0x407591
  4075b9:	mov    bh,0xb3
  4075bb:	std    
  4075bc:	xor    BYTE PTR [ecx+edx*4+0x32827d27],cl
  4075c3:	int3   
  4075c4:	(bad)  
  4075c5:	repnz cmp DWORD PTR [eax+ecx*2],0xffffff9e
  4075ca:	repnz inc ebp
  4075cc:	cmp    DWORD PTR [eax+0x28],ebp
  4075cf:	psubusw mm6,QWORD PTR [ebx]
  4075d2:	xchg   ebx,eax
  4075d3:	and    DWORD PTR [ecx+edx*8-0x1f91f86a],esi
  4075da:	add    DWORD PTR [ebx+ebx*8+0x6fb04bf1],edx
  4075e1:	inc    edi
  4075e2:	ja     0x40764c
  4075e4:	dec    ebp
  4075e5:	add    eax,0x1b9511e4
  4075ea:	adc    edi,esi
  4075ec:	push   esp
  4075ed:	xor    al,0x76
  4075ef:	push   ds
  4075f0:	sti    
  4075f1:	out    dx,al
  4075f2:	mov    WORD PTR [edi],gs
  4075f4:	mov    edi,0x5ed658f5
  4075f9:	arpl   WORD PTR [edx-0x18],si
  4075fc:	imul   esp,edx,0x54
  4075ff:	and    eax,0xb6986370
  407604:	clc    
  407605:	addr16 pminub mm4,mm3
  407609:	loopne 0x407610
  40760b:	test   ecx,edi
  40760d:	pusha  
  40760e:	aaa    
  40760f:	jg     0x40759a
  407611:	pop    ebx
  407612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407613:	adc    eax,0xab1cc937
  407618:	jecxz  0x407688
  40761a:	or     eax,0xf2682557
  40761f:	push   esi
  407620:	hlt    
  407621:	cmp    eax,0xba6531cd
  407626:	jmp    0x5d9a:0xd902e101
  40762d:	outs   dx,DWORD PTR ds:[esi]
  40762e:	lock pop es
  407630:	test   al,0xb1
  407632:	int3   
  407633:	sahf   
  407634:	ficom  WORD PTR [edx-0xead4510]
  40763a:	sub    edx,DWORD PTR [edi-0x63123767]
  407640:	out    0x62,al
  407642:	inc    edx
  407643:	sub    al,0x8d
  407645:	and    al,0xd0
  407647:	mov    ds:0x976efc3c,al
  40764c:	jle    0x407619
  40764e:	add    edx,DWORD PTR [ebp-0xb]
  407651:	aad    0x91
  407653:	enter  0xfe88,0xc9
  407657:	test   BYTE PTR [ebp+0x7bc62101],dl
  40765d:	jns    0x407610
  40765f:	sbb    bh,BYTE PTR [edx+0x79726037]
  407665:	jae    0x407663
  407667:	not    DWORD PTR [ebp+0x7e3d46fb]
  40766d:	sub    eax,0x4710fa4d
  407672:	cs mov bh,0x3a
  407675:	lods   eax,DWORD PTR ds:[esi]
  407676:	stos   BYTE PTR es:[edi],al
  407677:	sbb    BYTE PTR [ebx+0x4540ab49],dh
  40767d:	inc    ecx
  40767e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40767f:	mov    eax,ds:0xd1aa3b4e
  407684:	(bad)  
  407685:	or     eax,0x3b7917f3
  40768a:	les    esp,FWORD PTR [edx+0x4d]
  40768d:	icebp  
  40768e:	add    al,0xe3
  407690:	data16 and BYTE PTR [edi+0x13e953ec],cl
  407697:	fidiv  DWORD PTR [esi-0x57]
  40769a:	pop    edi
  40769b:	add    eax,0xf67dafb8
  4076a0:	stos   BYTE PTR es:[edi],al
  4076a1:	in     eax,0x44
  4076a3:	clc    
  4076a4:	cld    
  4076a5:	pushf  
  4076a6:	nop
  4076a7:	leave  
  4076a8:	sti    
  4076a9:	push   esi
  4076aa:	(bad)  
  4076ab:	fwait
  4076ac:	loopne 0x407664
  4076ae:	ss out 0xd9,al
  4076b1:	mov    cl,0xfb
  4076b3:	call   0x1d7c:0x97cfbfd9
  4076ba:	pop    eax
  4076bb:	mov    ?,WORD PTR [edx+edx*8+0x59]
  4076bf:	es mov ebp,0xc84d4b4e
  4076c5:	mov    ebp,ds
  4076c7:	mov    eax,0xac94f8dc
  4076cd:	lods   al,BYTE PTR ds:[esi]
  4076ce:	push   0xffffff8f
  4076d0:	jle    0x4076be
  4076d2:	xchg   ebp,eax
  4076d3:	ss dec edi
  4076d5:	ins    BYTE PTR es:[edi],dx
  4076d6:	enter  0xa8fa,0xc
  4076da:	dec    esp
  4076db:	cmp    eax,0x7b5e0c9e
  4076e0:	push   ss
  4076e1:	mov    ah,0x3a
  4076e3:	scas   al,BYTE PTR es:[edi]
  4076e4:	push   edx
  4076e5:	sbb    BYTE PTR [edi],dh
  4076e7:	aad    0x68
  4076e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076ea:	mov    ds:0x38b82dc2,al
  4076ef:	mov    edx,0x84750780
  4076f4:	mov    ah,0x5c
  4076f6:	jmp    0x4076b8
  4076f8:	shl    bh,0xa7
  4076fb:	mov    bl,0xb1
  4076fd:	xchg   edi,eax
  4076fe:	stos   DWORD PTR es:[edi],eax
  4076ff:	jne    0x407757
  407701:	mov    al,0x4f
  407703:	xchg   edi,eax
  407704:	mov    WORD PTR [eax],ss
  407706:	cli    
  407707:	adc    eax,ecx
  407709:	rcr    DWORD PTR [edx+0x10],cl
  40770c:	xchg   ebx,eax
  40770d:	mov    al,ds:0xb0856072
  407712:	sub    bh,bh
  407714:	jae    0x407745
  407716:	push   cs
  407717:	outs   dx,BYTE PTR ds:[esi]
  407719:	adc    esp,ebx
  40771b:	dec    esi
  40771c:	inc    ecx
  40771d:	enter  0xa8b7,0x71
  407721:	sbb    esi,DWORD PTR ds:0x98d10205
  407727:	imul   ebp,DWORD PTR [ebx-0x1376afb9],0xffffffaf
  40772e:	xor    cl,BYTE PTR ds:0xfef79d63
  407734:	jne    0x407708
  407736:	les    edi,FWORD PTR [ebp+ebp*8-0x5e]
  40773a:	jp     0x4076fd
  40773c:	loope  0x40778a
  40773e:	aaa    
  40773f:	push   edi
  407740:	adc    al,0x86
  407742:	pop    es
  407743:	jl     0x4076dd
  407745:	dec    eax
  407746:	(bad)  
  407747:	adc    esp,ecx
  407749:	mov    BYTE PTR [edi+0x7a028267],bl
  40774f:	int3   
  407750:	(bad)  
  407751:	js     0x407792
  407753:	jae    0x407712
  407755:	sbb    eax,0xf2e269
  40775a:	sub    eax,0x61c0c6ae
  40775f:	call   0x6a50:0x9ce2065c
  407766:	sbb    eax,0x6db8eb06
  40776b:	sbb    bh,BYTE PTR [ebp+0x6cbabb91]
  407771:	inc    eax
  407772:	xlat   BYTE PTR ds:[ebx]
  407773:	imul   esi,DWORD PTR [edx+eax*2-0x70],0x842a6a6d
  40777b:	push   0xffffffc8
  40777d:	inc    edx
  40777e:	out    0x35,eax
  407780:	leave  
  407781:	add    ecx,DWORD PTR ds:0x41833a6d
  407787:	stos   BYTE PTR es:[edi],al
  407788:	or     BYTE PTR [edx-0x189bfcd3],bh
  40778e:	mov    edx,0xde271292
  407793:	out    dx,al
  407794:	cmp    bh,BYTE PTR [eax]
  407796:	shl    al,0x59
  407799:	mov    DWORD PTR [ebp+ecx*1-0x5f],esp
  40779d:	mov    al,bh
  40779f:	sbb    bl,al
  4077a1:	jae    0x40772e
  4077a3:	adc    al,0x2a
  4077a5:	xchg   edx,eax
  4077a6:	lds    edx,FWORD PTR [ecx]
  4077a8:	je     0x4077e2
  4077aa:	dec    ebx
  4077ab:	add    al,0x63
  4077ad:	jno    0x4077c8
  4077af:	pushf  
  4077b0:	bound  edi,QWORD PTR [edi+edi*4]
  4077b3:	mov    DWORD PTR [esi+0x14],ebx
  4077b6:	jmp    0x40773b
  4077b8:	sbb    BYTE PTR [esi-0x950e182],bh
  4077be:	mov    cl,0xbd
  4077c0:	inc    edi
  4077c1:	mov    ds:0x2b75f0b5,al
  4077c6:	(bad)  
  4077c8:	ret    0x617b
  4077cb:	loop   0x4077cc
  4077cd:	push   edi
  4077ce:	popa   
  4077cf:	mov    ebp,0x72ec766
  4077d4:	inc    ecx
  4077d5:	inc    ebx
  4077d6:	xchg   ebp,eax
  4077d7:	mov    al,0xb5
  4077d9:	ss mov ch,0xde
  4077dc:	lahf   
  4077dd:	(bad)  
  4077de:	pop    esi
  4077df:	repnz cmp al,0x94
  4077e2:	scas   al,BYTE PTR es:[edi]
  4077e3:	jmp    FWORD PTR [eax-0x5d]
  4077e6:	(bad)  
  4077e7:	and    esi,DWORD PTR [eax]
  4077e9:	jno    0x40786a
  4077eb:	push   0xffffffae
  4077ed:	adc    al,0xfa
  4077ef:	sbb    DWORD PTR [ebp+0x52],0x9d7c17b7
  4077f6:	ss inc ebp
  4077f8:	xor    al,0xd0
  4077fa:	cwde   
  4077fb:	ds jl  0x4077d2
  4077fe:	inc    esi
  4077ff:	bsr    esp,DWORD PTR [esi-0x21]
  407803:	sbb    al,0x9c
  407805:	shl    BYTE PTR ds:0xf4a5aa93,1
  40780b:	push   esi
  40780c:	daa    
  40780d:	jno    0x407866
  40780f:	aas    
  407810:	call   0xf86854d6
  407815:	stos   BYTE PTR es:[edi],al
  407816:	jge    0x4077a2
  407818:	dec    ebx
  407819:	push   ebp
  40781a:	mov    al,0xa9
  40781c:	xchg   ebp,eax
  40781d:	push   0xffffffa6
  40781f:	inc    ebx
  407820:	repnz neg esp
  407823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407824:	dec    edi
  407825:	cmp    al,0x61
  407827:	mov    cl,0xe1
  407829:	sub    al,0xcd
  40782b:	cmc    
  40782c:	adc    DWORD PTR [ebx+ebx*8-0x5eeee48a],ebp
  407833:	cwde   
  407834:	es daa 
  407836:	clc    
  407837:	(bad)  
  407838:	stos   BYTE PTR es:[edi],al
  407839:	neg    BYTE PTR [ecx-0xdeff6bd]
  40783f:	push   edi
  407840:	xor    ch,BYTE PTR [edi-0x567af690]
  407846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407847:	lods   eax,DWORD PTR ds:[esi]
  407848:	fcom   DWORD PTR [ebp+0x2f00f11c]
  40784e:	cmp    DWORD PTR [edi-0x6e],0x7929d549
  407855:	test   BYTE PTR [ecx-0x77],bl
  407858:	and    al,0x3c
  40785a:	mov    ebp,0xf4fc526f
  40785f:	pop    ebx
  407860:	shl    ebx,cl
  407862:	repnz (bad) 
  407864:	lahf   
  407865:	rcr    BYTE PTR [edi+ecx*8-0x70],cl
  407869:	loopne 0x407849
  40786b:	cmp    DWORD PTR [edx+0x377605e3],ebx
  407871:	sar    DWORD PTR [esi+eiz*1],cl
  407874:	scas   al,BYTE PTR es:[edi]
  407875:	pop    es
  407876:	push   ecx
  407877:	mov    ds:0x80133285,al
  40787c:	adc    DWORD PTR [ebp-0x58583c5c],ecx
  407882:	aaa    
  407883:	pop    eax
  407884:	leave  
  407885:	push   eax
  407886:	dec    esi
  407887:	add    eax,0xd4c7725e
  40788c:	es popa 
  40788e:	dec    ebx
  40788f:	in     eax,0x25
  407891:	aaa    
  407892:	xchg   BYTE PTR [edx+0x25ead0e9],cl
  407898:	push   edx
  407899:	jae    0x407899
  40789b:	out    dx,al
  40789c:	add    al,0xc2
  40789e:	icebp  
  40789f:	sub    cl,BYTE PTR [ebx]
  4078a1:	ds loopne 0x4078c8
  4078a4:	aaa    
  4078a5:	jb     0x407879
  4078a7:	add    bl,bh
  4078a9:	mov    ds:0x1c3b30ba,al
  4078ae:	jne    0x40792f
  4078b0:	mov    cl,0xb4
  4078b2:	inc    edx
  4078b3:	add    eax,0xe0497817
  4078b8:	push   ss
  4078b9:	popa   
  4078ba:	xchg   ebp,eax
  4078bb:	cwde   
  4078bc:	fcomp  DWORD PTR [ebx+0x55daa14b]
  4078c2:	sub    BYTE PTR [ebp-0x6b9de206],al
  4078c8:	je     0x407942
  4078ca:	imul   edx,DWORD PTR ds:0x73c4a1d0,0xffffff95
  4078d1:	rcr    BYTE PTR [ebp+0x67],0xfc
  4078d5:	inc    ebp
  4078d6:	test   al,0xd2
  4078d8:	dec    ecx
  4078d9:	sbb    al,0x23
  4078db:	loopne 0x40793d
  4078dd:	mov    al,0xbb
  4078df:	call   0x17d8:0x92d64181
  4078e6:	ret    0x95ea
  4078e9:	ret    
  4078ea:	clc    
  4078eb:	xor    BYTE PTR [esi-0x5fd7453],dh
  4078f1:	dec    ebp
  4078f2:	dec    esi
  4078f3:	or     esi,esp
  4078f5:	adc    bl,BYTE PTR [edi+0x43]
  4078f8:	push   ds
  4078f9:	dec    esp
  4078fa:	pop    ss
  4078fb:	adc    al,BYTE PTR [edi]
  4078fd:	repnz mov ds:0xb72016b5,al
  407903:	or     al,BYTE PTR [edi]
  407905:	sbb    DWORD PTR [ebx+eax*8-0x244cba8],edi
  40790c:	lock stos BYTE PTR es:[edi],al
  40790e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40790f:	mov    BYTE PTR [ecx],dh
  407911:	or     BYTE PTR [ecx],0x56
  407914:	jecxz  0x407950
  407916:	pop    esp
  407917:	aam    0xdc
  407919:	scas   eax,DWORD PTR es:[edi]
  40791a:	leave  
  40791b:	adc    DWORD PTR [edi-0x26fbfc23],0xffffffbc
  407922:	ins    BYTE PTR es:[edi],dx
  407923:	int    0xdf
  407925:	es push ecx
  407927:	push   ds
  407928:	sub    edi,DWORD PTR [ecx]
  40792a:	add    cl,BYTE PTR [edi]
  40792c:	pop    ebp
  40792d:	dec    edi
  40792e:	pop    ebp
  40792f:	mov    BYTE PTR [ecx+esi*1+0x1c],cl
  407933:	bound  edx,QWORD PTR [esi-0x6a]
  407936:	inc    edx
  407937:	xlat   BYTE PTR ds:[ebx]
  407938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407939:	je     0x40798f
  40793b:	fiadd  WORD PTR fs:[ebp-0xbe282ea]
  407942:	sub    ah,BYTE PTR [ebp+0x0]
  407945:	and    bl,BYTE PTR [eax-0x63]
  407948:	jle    0x407994
  40794a:	outs   dx,DWORD PTR ds:[esi]
  40794b:	mov    al,ds:0x340e371e
  407950:	dec    ecx
  407951:	clc    
  407952:	sti    
  407953:	mov    bh,0x5d
  407955:	mov    al,ds:0xb669ee20
  40795a:	adc    al,0x97
  40795c:	push   es
  40795d:	xchg   dh,dh
  40795f:	gs cs cdq 
  407962:	push   es
  407963:	inc    edi
  407964:	inc    esi
  407965:	popa   
  407966:	mov    edx,0xb0bb14c1
  40796c:	mov    ch,0xc5
  40796e:	xchg   BYTE PTR [ebp+ebp*8+0x70672454],ah
  407975:	cwde   
  407976:	xchg   edx,eax
  407977:	adc    BYTE PTR [ecx+0x698f14f5],cl
  40797d:	addr16 (bad) 
  40797f:	sub    edx,DWORD PTR [ebx]
  407981:	inc    edi
  407982:	lods   eax,DWORD PTR ds:[esi]
  407983:	push   edi
  407984:	icebp  
  407985:	scas   al,BYTE PTR es:[edi]
  407986:	popf   
  407987:	jle    0x407941
  407989:	ss inc edi
  40798b:	mov    bh,0xd5
  40798d:	push   0xe6df734
  407992:	mov    WORD PTR [ebp+0x3c],?
  407995:	xor    DWORD PTR [edi+0x74],ebx
  407998:	add    bh,0x54
  40799b:	and    al,0xe7
  40799d:	dec    edx
  40799e:	out    0xf8,eax
  4079a0:	and    dh,bl
  4079a2:	push   cs
  4079a3:	aas    
  4079a4:	sbb    eax,0xfec1a1b1
  4079a9:	test   dl,al
  4079ab:	js     0x407a10
  4079ad:	jmp    0x57b2e822
  4079b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b3:	sbb    DWORD PTR [eax],edi
  4079b5:	(bad)  
  4079b6:	les    ecx,FWORD PTR [esp+edx*2]
  4079b9:	pop    esi
  4079ba:	jge    0x40797e
  4079bc:	pop    ebp
  4079bd:	push   edi
  4079be:	out    0x28,eax
  4079c0:	sbb    esp,DWORD PTR [eax]
  4079c2:	adc    bh,BYTE PTR [ebx-0xd89ecf]
  4079c8:	popf   
  4079c9:	sti    
  4079ca:	cmp    al,BYTE PTR [ebx+0x6e]
  4079cd:	pop    eax
  4079ce:	popf   
  4079cf:	shl    BYTE PTR ds:0xd9a0464b,cl
  4079d5:	xor    eax,0x66e77ffb
  4079da:	lods   al,BYTE PTR ds:[esi]
  4079db:	mov    ecx,0x86bfa453
  4079e0:	inc    esp
  4079e1:	pushf  
  4079e2:	lock nop
  4079e4:	pop    ecx
  4079e5:	fsub   st,st(2)
  4079e7:	or     al,0xda
  4079e9:	push   eax
  4079ea:	jbe    0x407986
  4079ec:	mov    dh,0xf4
  4079ee:	add    edi,ecx
  4079f0:	mov    bl,0x64
  4079f2:	or     ebp,DWORD PTR [ebp-0x23a8802e]
  4079f8:	jecxz  0x407a47
  4079fa:	stos   BYTE PTR es:[edi],al
  4079fb:	mov    eax,0x607b1b10
  407a00:	xor    DWORD PTR [esp+esi*8+0x5b],0x3f
  407a05:	scas   al,BYTE PTR es:[edi]
  407a06:	sub    DWORD PTR [ecx+0x55],edi
  407a09:	cdq    
  407a0a:	sbb    al,dh
  407a0c:	mov    ch,0xf1
  407a0e:	cmp    esp,DWORD PTR [esi-0x7e]
  407a11:	jne    0x407a31
  407a13:	out    dx,eax
  407a14:	jmp    0x4079ab
  407a16:	mov    dh,0x39
  407a18:	je     0x407a74
  407a1a:	inc    eax
  407a1b:	ins    DWORD PTR es:[edi],dx
  407a1c:	aaa    
  407a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1e:	push   es
  407a1f:	xor    eax,0x4d217110
  407a24:	push   esi
  407a25:	jb     0x407a0c
  407a27:	fs fld st(1)
  407a2a:	imul   BYTE PTR [edi]
  407a2c:	sbb    al,0xcd
  407a2e:	sub    BYTE PTR [ebx-0x10588eff],cl
  407a34:	div    BYTE PTR [edx+0x405add4]
  407a3a:	daa    
  407a3b:	retf   0x70d5
  407a3e:	add    BYTE PTR ss:[eax-0x55],dh
  407a42:	test   al,ah
  407a44:	test   DWORD PTR [ecx],eax
  407a46:	fcmovbe st,st(3)
  407a48:	and    cl,BYTE PTR [esi+0x3138b394]
  407a4e:	(bad)  
  407a4f:	in     al,0x4a
  407a51:	or     ebp,0x38
  407a54:	add    edi,DWORD PTR [ebp-0x122ce213]
  407a5a:	imul   ecx,ecx,0xffffffff
  407a5d:	outs   dx,DWORD PTR ds:[esi]
  407a5e:	test   BYTE PTR [eax+0x2ad32df4],al
  407a64:	div    BYTE PTR [ecx-0x17c96cdd]
  407a6a:	mov    ch,0xde
  407a6c:	sbb    al,0xa2
  407a6e:	imul   esi,edx,0xed9ce893
  407a74:	call   0x7a36:0xc4a0a1cd
  407a7b:	add    esp,DWORD PTR [ebx+edi*4]
  407a7e:	add    bl,BYTE PTR [edx+0x275fea65]
  407a84:	enter  0xfe7e,0x2c
  407a88:	push   esi
  407a89:	mov    ebp,0xb042cd21
  407a8e:	neg    dh
  407a90:	cmp    eax,0xd33488a2
  407a95:	in     al,dx
  407a96:	mov    al,0xf1
  407a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a99:	popa   
  407a9a:	mov    esp,0xa3a17eb4
  407a9f:	sahf   
  407aa0:	loopne 0x407a66
  407aa2:	retf   
  407aa3:	mov    dl,0x15
  407aa5:	cmc    
  407aa6:	pop    ebp
  407aa7:	sar    DWORD PTR [esi+ecx*8-0x230d049a],1
  407aae:	cdq    
  407aaf:	push   ss
  407ab0:	neg    bh
  407ab2:	cmp    bl,ah
  407ab4:	add    eax,0xbf92e115
  407ab9:	int3   
  407aba:	cmp    eax,0x4c7d169c
  407abf:	test   BYTE PTR [edi-0x19],dh
  407ac2:	lahf   
  407ac3:	mov    ch,0x4b
  407ac5:	mov    esi,0x4edc5c6c
  407aca:	jns    0x407b32
  407acc:	data16 scas al,BYTE PTR es:[edi]
  407ace:	mov    al,0x3c
  407ad0:	jns    0x407b37
  407ad2:	mov    esp,DWORD PTR [ecx+edx*8]
  407ad5:	mov    eax,0x7c2472c2
  407ada:	loopne 0x407a5c
  407adc:	cmp    ebp,edx
  407ade:	scas   al,BYTE PTR es:[edi]
  407adf:	lods   al,BYTE PTR ds:[esi]
  407ae0:	arpl   WORD PTR cs:[ebx+0x78],bp
  407ae4:	dec    edi
  407ae5:	in     eax,dx
  407ae6:	mov    al,0x20
  407ae8:	paddd  mm4,mm2
  407aeb:	shr    DWORD PTR [ebx-0x196441c4],1
  407af1:	dec    eax
  407af2:	lods   al,BYTE PTR ds:[esi]
  407af3:	leave  
  407af4:	sub    al,0x61
  407af6:	cmp    eax,0x90f2fa65
  407afb:	mov    bl,0x70
  407afd:	loope  0x407a8b
  407aff:	ss popa 
  407b01:	adc    DWORD PTR [edi+0x18],0x6b
  407b05:	xor    dh,BYTE PTR [ecx+0x1800c513]
  407b0b:	xrelease xchg BYTE PTR [eax],dl
  407b0e:	das    
  407b0f:	adc    cl,BYTE PTR [edi+edi*2-0x3bd21b51]
  407b16:	pop    edi
  407b17:	xor    BYTE PTR [edi+0x34],al
  407b1a:	(bad)
  407b1d:	dec    edi
  407b1e:	push   0xfffffff3
  407b20:	fcomip st,st(0)
  407b22:	jno    0x407b0a
  407b24:	sbb    eax,0x47ea8d18
  407b29:	(bad)  
  407b2a:	fsub   st,st(1)
  407b2c:	fist   WORD PTR [eax+esi*1-0x2d]
  407b30:	mov    eax,ds:0xf098349
  407b35:	and    al,0x24
  407b37:	lods   al,BYTE PTR ds:[esi]
  407b38:	inc    edi
  407b39:	mov    bh,0xc4
  407b3b:	in     al,0xfd
  407b3d:	popa   
  407b3e:	cmp    al,0xe3
  407b40:	inc    esi
  407b41:	fdiv   DWORD PTR [esi-0x56bba9c5]
  407b47:	ja     0x407b14
  407b49:	fst    QWORD PTR [edx+0x2382be91]
  407b4f:	mov    ebp,0xace71a16
  407b54:	mov    edi,DWORD PTR [ebx]
  407b56:	jno    0x407b06
  407b58:	and    BYTE PTR [eax+0x3d],al
  407b5b:	inc    esp
  407b5c:	xchg   ecx,eax
  407b5d:	sub    eax,ebx
  407b5f:	fwait
  407b60:	rcr    BYTE PTR [edx+ebp*1-0xe],cl
  407b64:	dec    ebx
  407b65:	iret   
  407b66:	adc    DWORD PTR [esp+ebp*8],ebp
  407b69:	cmp    bl,BYTE PTR [esi]
  407b6b:	mov    dh,0x8b
  407b6d:	nop
  407b6e:	pop    ss
  407b6f:	fst    DWORD PTR [esi+0x7b]
  407b72:	push   es
  407b73:	(bad)  
  407b74:	fdivrp st(2),st
  407b76:	rcr    edx,cl
  407b78:	popa   
  407b79:	mov    edx,DWORD PTR [ebx-0x20]
  407b7c:	jp     0x407b4a
  407b7e:	jge    0x407b76
  407b80:	adc    BYTE PTR [ebp-0x27b7a88],0x72
  407b87:	jmp    0x407bd3
  407b89:	outs   dx,DWORD PTR ds:[esi]
  407b8a:	mov    esi,0x8b974b4
  407b8f:	enter  0xe995,0xe4
  407b93:	sbb    edi,DWORD PTR [ecx]
  407b95:	out    dx,ax
  407b97:	stos   DWORD PTR es:[edi],eax
  407b98:	sar    DWORD PTR [ebx-0x62],0x3d
  407b9c:	push   ebp
  407b9d:	jmp    0x407b81
  407b9f:	out    0xe1,al
  407ba1:	inc    ebp
  407ba2:	cmp    DWORD PTR [ebx],0xc617869b
  407ba8:	jp     0x407ba8
  407baa:	cld    
  407bab:	call   0x97e0c664
  407bb0:	adc    ebx,DWORD PTR [ecx+0x660b42e4]
  407bb6:	cdq    
  407bb7:	push   ebx
  407bb8:	ret    0x3049
  407bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bbc:	add    DWORD PTR [ebx],eax
  407bbe:	mov    cl,0xa9
  407bc0:	icebp  
  407bc1:	push   ds
  407bc2:	sub    al,0xaa
  407bc4:	mov    DWORD PTR [edi+0x542da0aa],ebx
  407bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bcb:	cmp    DWORD PTR [edi-0x62],eax
  407bce:	into   
  407bcf:	adc    al,0x65
  407bd1:	dec    edx
  407bd2:	or     ch,BYTE PTR [edx+0x3c]
  407bd5:	or     eax,0x5b97c08
  407bda:	xchg   esi,eax
  407bdb:	mov    WORD PTR [edx-0x30043fea],fs
  407be1:	aaa    
  407be2:	shr    DWORD PTR [edi-0x7],0x80
  407be6:	mov    al,0xcd
  407be8:	mov    ecx,0xd277cb8c
  407bed:	push   0x318f3994
  407bf2:	int    0xd2
  407bf4:	pop    eax
  407bf5:	sub    dh,BYTE PTR [ebx-0x70b377b2]
  407bfb:	and    BYTE PTR ds:0xfa3830c8,ah
  407c01:	in     eax,dx
  407c02:	push   ecx
  407c03:	mov    ecx,0xdf665060
  407c08:	mov    esp,0xd3213d1d
  407c0d:	jecxz  0x407ba4
  407c0f:	adc    DWORD PTR [esi-0x632cdcf2],edx
  407c15:	lock inc ecx
  407c17:	jmp    0x407c54
  407c19:	dec    ebx
  407c1a:	pop    edi
  407c1b:	mov    ecx,0x8b2b1f49
  407c20:	push   ebp
  407c21:	rcr    bl,cl
  407c23:	dec    ebx
  407c24:	shl    BYTE PTR [edi],1
  407c26:	imul   ecx,DWORD PTR [esi],0x28143b7b
  407c2c:	inc    edi
  407c2d:	xchg   ecx,eax
  407c2e:	rcr    BYTE PTR [ecx+0x20015753],cl
  407c34:	xor    BYTE PTR [eax+0x239e879f],al
  407c3a:	sub    ebx,DWORD PTR [ebx+0x4]
  407c3d:	add    eax,0xc3f609fd
  407c42:	loopne 0x407c50
  407c44:	in     al,dx
  407c45:	xor    dh,BYTE PTR [esi+0x77]
  407c48:	mov    ds:0xc02bc96c,eax
  407c4d:	rcl    DWORD PTR [ebx],0x8a
  407c50:	sub    BYTE PTR [ecx+0x3a],cl
  407c53:	xchg   esi,eax
  407c54:	xchg   ebx,eax
  407c55:	call   0xb83b:0x7e48998c
  407c5c:	daa    
  407c5d:	aad    0x5f
  407c5f:	and    bl,ah
  407c61:	sar    edi,1
  407c63:	jnp    0x407c1c
  407c65:	mov    ch,0xeb
  407c67:	es nop
  407c69:	test   eax,0x911c928f
  407c6e:	cmp    edx,DWORD PTR [edi+eiz*8+0x68cf3de8]
  407c75:	(bad)  
  407c76:	inc    edx
  407c77:	xor    BYTE PTR [eax],dh
  407c79:	enter  0xc671,0xa0
  407c7d:	dec    edx
  407c7e:	popa   
  407c7f:	loop   0x407c65
  407c81:	call   0x2dbcb054
  407c86:	xor    BYTE PTR es:[edi+0x4a],cl
  407c8a:	out    0x99,al
  407c8c:	pop    ss
  407c8d:	sbb    eax,DWORD PTR [edx]
  407c8f:	jns    0x407cd4
  407c91:	jecxz  0x407c8a
  407c93:	add    BYTE PTR [ecx+0x5d],bh
  407c96:	push   esi
  407c97:	jne    0x407c6f
  407c99:	fimul  WORD PTR [ebx]
  407c9b:	lods   eax,DWORD PTR ds:[esi]
  407c9c:	jmp    0x76f2:0x88eec657
  407ca3:	arpl   si,si
  407ca5:	cs cmp eax,0xaba02724
  407cab:	inc    esi
  407cac:	sub    al,0x62
  407cae:	dec    eax
  407caf:	mov    ds:0x9466c2ce,eax
  407cb4:	cmp    ah,BYTE PTR [edx+0xa]
  407cb7:	jle    0x407cad
  407cb9:	push   esi
  407cba:	shr    BYTE PTR [eax+0x24],1
  407cbd:	cmp    al,0x86
  407cbf:	sub    al,0x66
  407cc1:	inc    ebp
  407cc2:	vcvtsd2ss xmm5,xmm5,xmm0
  407cc6:	mov    WORD PTR [edx],cs
  407cc8:	mov    eax,0x5a8d2229
  407ccd:	jbe    0x407ced
  407ccf:	cmp    DWORD PTR [ebx],0xffffffa3
  407cd2:	xchg   ebp,eax
  407cd3:	test   al,0x3
  407cd5:	sbb    ecx,DWORD PTR [esi-0x4c]
  407cd8:	push   eax
  407cd9:	xchg   esp,eax
  407cda:	out    0x98,eax
  407cdc:	adc    BYTE PTR [edx+0x7b],0x9d
  407ce0:	aas    
  407ce1:	test   edi,ebx
  407ce3:	aaa    
  407ce4:	jg     0x407c70
  407ce6:	(bad)  
  407ce7:	out    0xa1,eax
  407ce9:	mov    edi,0x2335cfd0
  407cee:	adc    BYTE PTR [eax-0x7e157e56],bh
  407cf4:	scas   eax,DWORD PTR es:[edi]
  407cf5:	inc    esp
  407cf6:	fdivr  st,st(6)
  407cf8:	fstp   DWORD PTR [esi+0xae7e8ec]
  407cfe:	fdiv   DWORD PTR [edx-0x3b912ed]
  407d04:	aam    0x13
  407d06:	push   esi
  407d07:	inc    edx
  407d08:	push   ds
  407d09:	sbb    DWORD PTR [edx-0x5e728a7b],edx
  407d0f:	sub    BYTE PTR [ecx-0x69],cl
  407d12:	push   esp
  407d13:	sub    dl,ah
  407d15:	inc    esi
  407d16:	xlat   BYTE PTR ds:[ebx]
  407d17:	bound  ebx,QWORD PTR [eax-0x8]
  407d1a:	sbb    BYTE PTR [esi],0xf
  407d1d:	cdq    
  407d1e:	daa    
  407d1f:	imul   edx,eax,0xffffffac
  407d22:	jo     0x407cc0
  407d24:	les    ebx,FWORD PTR [edx]
  407d26:	mov    ds:0x1c0c6f02,al
  407d2b:	pop    es
  407d2c:	idiv   edi
  407d2e:	hlt    
  407d2f:	dec    edx
  407d30:	stos   DWORD PTR es:[edi],eax
  407d31:	lahf   
  407d32:	daa    
  407d33:	inc    ecx
  407d34:	pop    edx
  407d35:	jnp    0x407d68
  407d37:	cld    
  407d38:	outs   dx,DWORD PTR ss:[esi]
  407d3a:	adc    eax,0xad540188
  407d3f:	xchg   dh,al
  407d41:	dec    edi
  407d42:	popf   
  407d43:	jb     0x407d30
  407d45:	mul    DWORD PTR [esi+eax*4+0x3bf6f3b0]
  407d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d4d:	or     bl,dh
  407d4f:	add    eax,DWORD PTR ds:0x31a8c018
  407d55:	das    
  407d56:	ret    
  407d57:	ins    DWORD PTR es:[edi],dx
  407d58:	push   0xffffffa9
  407d5a:	or     BYTE PTR [edi-0xe],ah
  407d5d:	out    dx,al
  407d5e:	fs ds (bad) 
  407d61:	daa    
  407d62:	pminub mm6,mm2
  407d65:	sub    BYTE PTR [eax+0x74],0x49
  407d69:	sub    eax,0x6e8edaef
  407d6e:	pop    esp
  407d6f:	pushf  
  407d70:	pop    es
  407d71:	xchg   esp,eax
  407d72:	push   edi
  407d73:	cmp    eax,0x52498428
  407d78:	bound  edx,QWORD PTR [eax]
  407d7a:	sbb    DWORD PTR [ebx-0x72],edi
  407d7d:	dec    ebx
  407d7e:	nop
  407d7f:	shl    BYTE PTR fs:[edx+0x40],0xb5
  407d84:	cmp    edx,DWORD PTR [edi-0x3a]
  407d87:	mov    esp,0xfec53bae
  407d8c:	mov    al,ds:0xce5b9516
  407d91:	pop    ds
  407d92:	inc    eax
  407d93:	adc    eax,0xbc923a9
  407d98:	cmp    esp,DWORD PTR [ebx-0x951dd46]
  407d9e:	outs   dx,DWORD PTR ds:[esi]
  407d9f:	shl    DWORD PTR [edx+0x4e475174],cl
  407da5:	pop    edi
  407da6:	ins    DWORD PTR es:[edi],dx
  407da7:	dec    esi
  407da8:	test   ebp,edi
  407daa:	in     al,dx
  407dab:	sbb    BYTE PTR [ecx],bh
  407dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dae:	xchg   edi,eax
  407daf:	sub    DWORD PTR [esi],0xcda25bb
  407db5:	fucom  st(3)
  407db7:	xchg   ebx,eax
  407db8:	retf   
  407db9:	adc    eax,DWORD PTR [eax+eax*1]
  407dbc:	or     ecx,edx
  407dbe:	mov    ecx,0x15871770
  407dc3:	jo     0x407da8
  407dc5:	fcmovne st,st(0)
  407dc7:	and    eax,DWORD PTR [ecx]
  407dc9:	push   ebx
  407dca:	in     al,dx
  407dcb:	ja     0x407de2
  407dcd:	push   ebp
  407dcf:	ss add ah,dl
  407dd2:	jae    0x407df2
  407dd4:	jmp    0x407d7d
  407dd6:	ja     0x407d67
  407dd8:	push   0xe50d8757
  407ddd:	stos   BYTE PTR es:[edi],al
  407dde:	in     al,dx
  407ddf:	mov    al,ah
  407de1:	mov    WORD PTR [esi-0x65c6c693],ss
  407de7:	jecxz  0x407dea
  407de9:	dec    edx
  407dea:	test   eax,0xc24c6ce9
  407def:	add    bl,BYTE PTR es:[ebx+0xec5ce20]
  407df6:	ror    BYTE PTR [ebp-0x22],1
  407df9:	js     0x407e46
  407dfb:	jo     0x407d93
  407dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dfe:	inc    ebx
  407dff:	push   ebx
  407e00:	mov    edx,0x146abcb5
  407e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e06:	int3   
  407e07:	js     0x407e7e
  407e09:	mov    ah,0xc3
  407e0b:	xor    edx,edx
  407e0d:	xor    BYTE PTR [eax],ch
  407e0f:	and    DWORD PTR [edx-0x62],edx
  407e12:	sub    ebp,ebp
  407e14:	cmp    DWORD PTR [ebx],ecx
  407e16:	mov    dl,0xf0
  407e18:	scas   al,BYTE PTR es:[edi]
  407e19:	jns    0x407e8c
  407e1b:	dec    ebp
  407e1c:	mov    BYTE PTR [ebp-0x18],bh
  407e1f:	leave  
  407e20:	loope  0x407e00
  407e22:	cmp    BYTE PTR [edi],dl
  407e24:	mov    edi,0x9b613789
  407e29:	ja     0x407dbe
  407e2b:	sbb    DWORD PTR [edx-0x2d],ecx
  407e2e:	sbb    eax,0x6f74fdc0
  407e33:	ins    DWORD PTR es:[edi],dx
  407e34:	enter  0xacae,0xb8
  407e38:	retf   0x173e
  407e3b:	loop   0x407e27
  407e3d:	imul   esp,DWORD PTR [ebx+0xd],0xbbbcb671
  407e44:	fwait
  407e45:	js     0x407e3b
  407e47:	shl    BYTE PTR [eax+0x36bb543d],cl
  407e4d:	popf   
  407e4e:	test   eax,0xaf2fdd1
  407e53:	sub    esp,DWORD PTR [ebp+0x39b0e3fc]
  407e59:	dec    edx
  407e5a:	xchg   ecx,eax
  407e5b:	xchg   BYTE PTR [esi],dl
  407e5d:	(bad)  [ecx]
  407e5f:	out    0xe,al
  407e61:	jmp    0x407eba
  407e63:	loopne 0x407e46
  407e65:	lods   eax,DWORD PTR ds:[esi]
  407e66:	xor    al,0x73
  407e68:	popf   
  407e69:	xchg   esp,eax
  407e6a:	or     eax,0x16deec4f
  407e6f:	test   DWORD PTR ds:0xd8cbcda4,ebx
  407e75:	fdivr  DWORD PTR [esi]
  407e77:	std    
  407e78:	add    bh,cl
  407e7a:	xchg   edx,eax
  407e7b:	jbe    0x407ebd
  407e7d:	or     BYTE PTR [ebp-0x590d4180],ah
  407e83:	mov    bh,0xee
  407e85:	out    dx,al
  407e86:	hlt    
  407e87:	pop    edi
  407e88:	mov    ch,0x7b
  407e8a:	cmp    ch,ah
  407e8c:	(bad)  
  407e8d:	pop    edx
  407e8e:	mov    al,0x1c
  407e90:	push   eax
  407e91:	test   eax,0x3e9d3c74
  407e96:	mov    dh,0xfc
  407e98:	je     0x407e6f
  407e9a:	jne    0x407eeb
  407e9c:	stc    
  407e9d:	lea    edi,[esi+eiz*8+0x56afed7e]
  407ea4:	and    al,0x6e
  407ea6:	int    0x65
  407ea8:	ds in  eax,dx
  407eaa:	out    dx,eax
  407eab:	xor    eax,0xffa91b48
  407eb0:	inc    eax
  407eb1:	clc    
  407eb2:	into   
  407eb3:	adc    al,0xca
  407eb5:	cmp    eax,0x998dadbe
  407eba:	in     eax,dx
  407ebb:	mov    ah,0x49
  407ebd:	mov    dl,0xab
  407ebf:	(bad)  
  407ec0:	mov    dh,0x2a
  407ec2:	or     cl,BYTE PTR [eax]
  407ec4:	push   ebp
  407ec5:	or     eax,0xe5e32eeb
  407eca:	(bad)  
  407ecb:	xchg   edx,eax
  407ecc:	test   BYTE PTR [ecx+0x2bd8b713],dh
  407ed2:	pop    esi
  407ed3:	xchg   ebp,eax
  407ed4:	es aad 0x3e
  407ed7:	test   DWORD PTR [edx+0x2a],0x113c65fe
  407ede:	xor    al,BYTE PTR [eax-0x23970f6b]
  407ee4:	(bad)  
  407ee5:	arpl   WORD PTR [edx],bp
  407ee7:	pop    eax
  407ee8:	push   ebx
  407ee9:	push   edx
  407eea:	push   edi
  407eeb:	daa    
  407eec:	or     al,0x86
  407eee:	stc    
  407eef:	cmp    ebx,DWORD PTR [esi+0x3fddb724]
  407ef5:	push   cs
  407ef6:	(bad)  
  407ef7:	xchg   esp,eax
  407ef8:	pop    eax
  407ef9:	int    0x6d
  407efb:	push   ecx
  407efc:	rcl    BYTE PTR [edi+0x25337880],1
  407f02:	xor    DWORD PTR [ecx-0x5d],ebp
  407f05:	popa   
  407f06:	push   ebp
  407f07:	mov    al,ds:0x5d1afb5b
  407f0c:	ror    BYTE PTR [ecx+0x33],cl
  407f0f:	es xchg ebp,eax
  407f11:	dec    edi
  407f12:	xlat   BYTE PTR ds:[ebx]
  407f13:	sbb    cl,BYTE PTR [esi-0x6e]
  407f16:	mov    al,0x1
  407f18:	mov    edi,0xf7935186
  407f1d:	push   ds
  407f1e:	popa   
  407f1f:	shr    al,cl
  407f21:	dec    edi
  407f22:	sub    DWORD PTR [edx],0x73
  407f25:	test   al,0x19
  407f27:	xor    DWORD PTR [eax-0x51d48fe3],ecx
  407f2d:	mov    ah,0x94
  407f2f:	into   
  407f30:	jb     0x407f79
  407f32:	fdivr  QWORD PTR [eax+esi*1]
  407f35:	cmp    al,0xbe
  407f37:	cli    
  407f38:	daa    
  407f39:	stc    
  407f3a:	xchg   edx,eax
  407f3b:	popa   
  407f3c:	popf   
  407f3d:	mov    eax,0x98954756
  407f42:	div    DWORD PTR [edi+edx*4+0x15]
  407f46:	xchg   edi,eax
  407f47:	leave  
  407f48:	into   
  407f49:	ins    DWORD PTR es:[edi],dx
  407f4a:	mov    ?,WORD PTR [eax+0x47]
  407f4d:	push   ss
  407f4e:	je     0x407f72
  407f50:	jge    0x407f5b
  407f52:	ret    
  407f53:	retf   0x313d
  407f56:	mov    ebx,0xd6356775
  407f5b:	stc    
  407f5c:	adc    DWORD PTR [edx],edi
  407f5e:	push   0xffffffd4
  407f60:	clc    
  407f61:	cwde   
  407f62:	test   BYTE PTR [edi+0x20],dl
  407f65:	push   ss
  407f66:	jmp    0x128d:0x9533d62
  407f6d:	inc    ecx
  407f6e:	dec    ebp
  407f6f:	adc    bh,ch
  407f71:	or     esi,DWORD PTR ds:[ebp-0x235b1959]
  407f78:	mov    WORD PTR [eax-0x54],fs
  407f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f7c:	outs   dx,DWORD PTR ds:[esi]
  407f7d:	cld    
  407f7e:	xchg   edi,eax
  407f7f:	pop    ss
  407f80:	sub    ebp,edi
  407f82:	imul   ebx,DWORD PTR [edx],0xffffffe9
  407f85:	adc    dh,BYTE PTR [esi-0x52abd793]
  407f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8c:	lock jb 0x407f82
  407f8f:	sub    bh,BYTE PTR [edx+0x2969c68b]
  407f95:	adc    dl,ch
  407f97:	mov    ecx,0xcc87247f
  407f9c:	inc    esp
  407f9d:	ret    
  407f9e:	or     dh,BYTE PTR [eax+0x22214f1b]
  407fa4:	xor    eax,0x47d7f801
  407fa9:	add    BYTE PTR ds:0x411bdce3,al
  407faf:	sub    DWORD PTR ds:0x80eb9a8e,ebx
  407fb5:	jg     0x407f8a
  407fb7:	outs   dx,BYTE PTR ds:[esi]
  407fb8:	jge    0x407fd3
  407fba:	adc    BYTE PTR [edi+0x26],ch
  407fbd:	clc    
  407fbe:	sbb    ch,bh
  407fc0:	popa   
  407fc1:	dec    edx
  407fc2:	cli    
  407fc3:	jmp    0xdd6a:0x981e3c4d
  407fca:	push   es
  407fcb:	int    0x23
  407fcd:	jp     0x407f6a
  407fcf:	aas    
  407fd0:	das    
  407fd1:	cmc    
  407fd2:	push   ebx
  407fd3:	jae    0x407f6a
  407fd5:	hlt    
  407fd6:	outs   dx,BYTE PTR ds:[esi]
  407fd7:	cmp    DWORD PTR [ebp+0x314e5011],ebp
  407fdd:	add    ebp,edi
  407fdf:	push   eax
  407fe0:	xor    edx,DWORD PTR [esi+0x7a]
  407fe3:	push   esi
  407fe4:	popa   
  407fe5:	mov    WORD PTR [edx],cs
  407fe7:	push   esi
  407fe8:	(bad)  
  407fe9:	xchg   ebx,eax
  407fea:	sub    BYTE PTR [edx],ah
  407fec:	es jbe 0x407fbf
  407fef:	sub    al,0xaa
  407ff1:	adc    al,ah
  407ff3:	pop    ds
  407ff4:	mov    ah,0xaa
  407ff6:	shl    DWORD PTR [ebp+0x782bd76b],cl
  407ffc:	sbb    dl,dh
  407ffe:	mov    ebp,0xa4933702
  408003:	mov    edi,0xe87f8c4d
  408008:	hlt    
  408009:	out    0xfe,al
  40800b:	sub    eax,0x55b2627f
  408010:	clc    
  408011:	cmp    ecx,DWORD PTR [ebx]
  408013:	(bad)  
  408015:	xor    DWORD PTR [ebx+esi*4-0x12c29ab0],ecx
  40801c:	xor    eax,0x98c16f6
  408021:	pop    ecx
  408022:	fwait
  408023:	mov    gs,WORD PTR [edi+0x12]
  408026:	out    0x27,eax
  408028:	clc    
  408029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40802a:	mov    ebx,DWORD PTR [ebx-0x48]
  40802d:	xchg   ebx,eax
  40802e:	push   ss
  40802f:	and    bl,0xc3
  408032:	dec    edx
  408033:	add    DWORD PTR [ecx-0x7f497d19],ebx
  408039:	sbb    DWORD PTR [edi],0xffffff84
  40803c:	or     BYTE PTR ds:0x8add3b74,bh
  408042:	push   0x8b46e9b2
  408047:	mov    al,0x58
  408049:	lods   al,BYTE PTR ds:[esi]
  40804a:	in     eax,0xf5
  40804c:	test   eax,0x772839eb
  408051:	mov    ah,BYTE PTR fs:[ecx]
  408054:	jg     0x40806b
  408056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408057:	(bad)  [ecx-0x2c7d9fc1]
  40805d:	push   edx
  40805e:	mov    esi,0xd6e95cc5
  408063:	pusha  
  408064:	dec    ebx
  408065:	xor    ch,bl
  408067:	cmp    eax,0xedbcb2a0
  40806c:	fst    DWORD PTR [esi+0x3b]
  40806f:	xor    al,ch
  408071:	add    al,BYTE PTR [ecx+0x3d]
  408074:	ds pop ss
  408076:	jbe    0x408034
  408078:	sub    DWORD PTR [ecx-0x5],eax
  40807b:	inc    edi
  40807c:	mov    bl,0x20
  40807e:	xor    ch,0xb8
  408081:	xchg   edi,eax
  408082:	int    0xd2
  408084:	sbb    bh,bh
  408086:	or     BYTE PTR [ecx+ebp*2],bl
  408089:	xor    DWORD PTR [ebx],edi
  40808b:	shl    DWORD PTR [esi+0x7e],cl
  40808e:	lods   al,BYTE PTR ds:[esi]
  40808f:	cwde   
  408090:	dec    eax
  408091:	shl    DWORD PTR [esp+edi*2-0x27],0x64
  408096:	ret    
  408097:	dec    esp
  408098:	xlat   BYTE PTR ds:[ebx]
  408099:	fisttp QWORD PTR [ecx+edi*4]
  40809c:	xchg   esi,eax
  40809d:	xchg   ebx,eax
  40809e:	sti    
  40809f:	or     esi,ebp
  4080a1:	dec    ebp
  4080a2:	mov    esp,ebx
  4080a4:	or     eax,0x72ae2247
  4080a9:	or     eax,0xfdecaa41
  4080ae:	int    0xe4
  4080b0:	and    esp,esi
  4080b2:	mov    ecx,DWORD PTR [ecx]
  4080b4:	lods   al,BYTE PTR ds:[esi]
  4080b5:	dec    ebp
  4080b6:	(bad)  
  4080b7:	dec    edi
  4080b8:	xor    al,0xbe
  4080ba:	(bad)  
  4080bb:	sub    al,0x1a
  4080bd:	lahf   
  4080be:	test   al,0xe5
  4080c0:	stos   DWORD PTR es:[edi],eax
  4080c1:	mov    BYTE PTR [ecx-0x72],dl
  4080c4:	xlat   BYTE PTR ds:[ebx]
  4080c5:	mov    esp,DWORD PTR [ebp+0x4]
  4080c8:	cmp    eax,ecx
  4080ca:	adc    al,0x68
  4080cc:	cmc    
  4080cd:	(bad)  
  4080ce:	ins    DWORD PTR es:[edi],dx
  4080cf:	jae    0x40809a
  4080d1:	sbb    DWORD PTR [ebx+0x60c79532],ebx
  4080d7:	mov    DWORD PTR [ebp+0x6b],ebp
  4080da:	cdq    
  4080db:	leave  
  4080dc:	cmp    DWORD PTR [ebx-0x158c2a5b],ebp
  4080e2:	(bad)  
  4080e4:	aas    
  4080e5:	cmp    al,0xd1
  4080e7:	retf   0xcccc
  4080ea:	(bad)  
  4080ec:	cmp    eax,0xb869bda0
  4080f1:	call   0x4d0bc78f
  4080f6:	popa   
  4080f7:	cmp    eax,0xe32444f9
  4080fc:	mov    eax,ds:0x3daa2e63
  408101:	jnp    0x408128
  408103:	xor    DWORD PTR [edi],eax
  408105:	pop    ebx
  408106:	test   BYTE PTR [ebp-0x34],bl
  408109:	cwde   
  40810a:	out    dx,al
  40810b:	sbb    DWORD PTR [ebx-0x73],edi
  40810e:	adc    al,0xa7
  408110:	pop    es
  408111:	inc    edx
  408112:	or     al,0x84
  408114:	cwde   
  408115:	jo     0x408141
  408117:	mov    ebx,esp
  408119:	lods   al,BYTE PTR ds:[esi]
  40811a:	pop    esp
  40811b:	cmp    al,0xa5
  40811d:	pushf  
  40811e:	sub    DWORD PTR [edx+0x3],ebp
  408121:	adc    bh,BYTE PTR [edi]
  408123:	test   eax,0xe3675761
  408128:	push   cs
  408129:	pushf  
  40812a:	pop    ebp
  40812b:	(bad)  
  40812c:	ins    BYTE PTR es:[edi],dx
  40812d:	xlat   BYTE PTR ds:[ebx]
  40812e:	test   BYTE PTR [eax+0x716cf7c6],ch
  408134:	mov    ds:0x46d1716a,al
  408139:	sahf   
  40813a:	sbb    al,BYTE PTR [edi-0x5f]
  40813d:	mov    dh,BYTE PTR [eax]
  40813f:	dec    edx
  408140:	push   0xffffff91
  408142:	daa    
  408143:	out    0x29,al
  408145:	fld    QWORD PTR ds:0x2eb8338c
  40814b:	iret   
  40814c:	cs cmp eax,0xf819aeb1
  408152:	in     eax,dx
  408153:	dec    ebx
  408154:	ss jb  0x4080df
  408157:	ins    DWORD PTR es:[edi],dx
  408158:	scas   eax,DWORD PTR es:[edi]
  408159:	mov    cl,0xa
  40815b:	nop
  40815c:	fimul  WORD PTR [esi+0x46]
  40815f:	push   es
  408160:	jns    0x4081cf
  408162:	xchg   ebp,eax
  408163:	mov    dh,0xf8
  408165:	cmp    BYTE PTR [edi-0x62],cl
  408168:	jnp    0x408148
  40816a:	or     eax,ebp
  40816c:	ins    BYTE PTR es:[edi],dx
  40816d:	add    ecx,ebx
  40816f:	enter  0x934b,0x59
  408173:	xchg   edi,eax
  408174:	fild   QWORD PTR [esi+0x414c7dc0]
  40817a:	inc    ebp
  40817b:	pop    ebx
  40817c:	jns    0x4081e8
  40817e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408180:	pop    ds
  408181:	jecxz  0x4081d3
  408183:	sub    DWORD PTR [ebp-0x64],0xffffffc6
  408187:	pop    eax
  408188:	jg     0x40815d
  40818a:	mov    esp,0x2fc6074a
  40818f:	fwait
  408190:	and    DWORD PTR [ecx],esi
  408192:	cmp    ah,dh
  408194:	mov    cs,WORD PTR [edx-0x4b]
  408197:	xchg   edi,eax
  408198:	mov    ecx,0x5143babd
  40819d:	inc    ecx
  40819e:	out    dx,eax
  40819f:	xchg   ebp,eax
  4081a0:	xchg   ebp,eax
  4081a1:	push   ss
  4081a2:	jmp    0xa8be:0xbd244f6f
  4081a9:	push   0xca5a8070
  4081ae:	arpl   WORD PTR [esi+0x19],ax
  4081b1:	pop    es
  4081b2:	add    ebx,DWORD PTR [esi-0x2dd67a20]
  4081b8:	je     0x40816f
  4081ba:	mov    DWORD PTR [ecx],edi
  4081bc:	fcom   DWORD PTR [eax]
  4081be:	lds    eax,FWORD PTR [eax-0x2e]
  4081c1:	ret    
  4081c2:	and    eax,0x93ef6f35
  4081c7:	imul   esp,DWORD PTR [ebx+ecx*8+0x2455c88b],0xffffffad
  4081cf:	out    dx,al
  4081d0:	(bad)  
  4081d1:	dec    eax
  4081d2:	pushf  
  4081d3:	and    WORD PTR [ecx+0x6b3ccff7],di
  4081da:	rol    BYTE PTR [ebp+0x6],cl
  4081dd:	ffree  st(3)
  4081df:	cli    
  4081e0:	lock and dl,BYTE PTR [ebp-0x26]
  4081e4:	hlt    
  4081e5:	push   cs
  4081e6:	shl    dl,0x14
  4081e9:	(bad)  [edx+edx*4]
  4081ec:	sbb    esp,edx
  4081ee:	cs nop
  4081f0:	mov    edi,0xbba21b8a
  4081f5:	iretw  
  4081f7:	xchg   edx,eax
  4081f8:	mov    ch,0x4b
  4081fa:	or     ebx,DWORD PTR [eax-0x25]
  4081fd:	fnstenv ds:0x48824fe3
  408203:	xchg   ebp,eax
  408204:	mov    ds:0x24be602f,al
  408209:	sub    ah,BYTE PTR [edi]
  40820b:	mov    edi,0xc53d7085
  408210:	add    esi,esp
  408212:	lea    esp,[esi+0x4f]
  408215:	adc    al,cl
  408217:	stos   DWORD PTR es:[edi],eax
  408218:	sti    
  408219:	out    dx,eax
  40821a:	(bad)  [eax+0x3f]
  40821d:	sub    cl,bh
  40821f:	push   0xffffffee
  408221:	out    dx,eax
  408222:	repz sub DWORD PTR [ebx-0x1f15e2e3],0xf081253e
  40822d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40822e:	(bad)  
  40822f:	cmp    ch,BYTE PTR [eax-0x22ef9985]
  408235:	int3   
  408236:	leave  
  408237:	push   ds
  408238:	js     0x4081dc
  40823a:	ins    BYTE PTR es:[edi],dx
  40823b:	pop    eax
  40823c:	bound  ecx,QWORD PTR [ebx+edi*2]
  40823f:	xchg   BYTE PTR [edx+0x70],dh
  408242:	xchg   ebx,eax
  408243:	inc    esp
  408244:	mov    eax,0xafafa2fd
  408249:	or     DWORD PTR gs:[eax+0x2c],ebx
  40824d:	jg     0x408234
  40824f:	and    cl,BYTE PTR [esi-0x42f245ae]
  408255:	lea    ebp,ds:0xd158712a
  40825b:	retf   0xb967
  40825e:	sar    BYTE PTR [esi-0x4482f7de],1
  408264:	mov    bl,0x80
  408266:	rcr    BYTE PTR [esi+ecx*4],1
  408269:	or     BYTE PTR [eax+0x13],bl
  40826c:	test   eax,0x129ccba4
  408271:	or     eax,0x68134b10
  408276:	pushf  
  408277:	jb     0x4082ce
  408279:	mov    esp,0x472138d4
  40827e:	pop    ecx
  40827f:	(bad)  
  408280:	mov    ch,0xde
  408282:	pop    ds
  408283:	outs   dx,DWORD PTR ds:[esi]
  408284:	ja     0x408232
  408286:	inc    ebx
  408287:	ins    DWORD PTR es:[edi],dx
  408288:	out    0xd9,al
  40828a:	mov    bh,0x2f
  40828c:	fisub  WORD PTR [ebp+0x55]
  40828f:	daa    
  408290:	push   ecx
  408291:	jp     0x408280
  408293:	cmp    bh,BYTE PTR [ebx]
  408295:	xlat   BYTE PTR cs:[ebx]
  408297:	add    bl,BYTE PTR [edx-0x8]
  40829a:	test   edx,edx
  40829c:	(bad)  
  40829d:	ficomp WORD PTR [ebx+0x3fcf895]
  4082a3:	lods   eax,DWORD PTR ds:[esi]
  4082a4:	leave  
  4082a5:	jmp    0xb22c1742
  4082aa:	and    al,0xbe
  4082ac:	ret    0xd5e3
  4082af:	out    0xfe,eax
  4082b1:	xor    eax,0xca68c1e8
  4082b6:	js     0x408321
  4082b8:	sbb    esi,DWORD PTR [ebp-0x74b9e643]
  4082be:	mov    bh,0x4f
  4082c0:	pop    ecx
  4082c1:	jne    0x408248
  4082c3:	cmp    bh,al
  4082c5:	cs add al,0x12
  4082c8:	sbb    BYTE PTR [edi+0x1],ah
  4082cb:	mov    dh,0x14
  4082cd:	out    0x28,al
  4082cf:	ins    DWORD PTR es:[edi],dx
  4082d0:	mov    cs,WORD PTR [esi]
  4082d2:	pop    edi
  4082d3:	cmp    ebx,DWORD PTR [edx-0x27]
  4082d6:	add    edx,0x77
  4082d9:	test   BYTE PTR [ebx+0x44d842f8],ch
  4082df:	xchg   edx,eax
  4082e0:	out    0xff,eax
  4082e2:	jp     0x4082d6
  4082e4:	aaa    
  4082e5:	adc    edx,0xffffffe5
  4082e8:	push   esi
  4082e9:	jp     0x4082b8
  4082eb:	test   al,0xe8
  4082ed:	mov    ebx,ds
  4082ef:	dec    eax
  4082f0:	std    
  4082f1:	loope  0x40831c
  4082f3:	mov    ds:0x15e41a42,al
  4082f8:	sbb    dl,0x68
  4082fb:	loope  0x4082c8
  4082fd:	mov    WORD PTR ds:0x992c5fc3,ss
  408303:	in     eax,dx
  408304:	out    0xd8,eax
  408306:	ss xchg ebx,eax
  408308:	(bad)  
  40830a:	ins    DWORD PTR es:[edi],dx
  40830b:	jmp    0xd830:0xa103dd9f
  408312:	cmp    al,0x53
  408314:	push   0xffffffe9
  408316:	aad    0xec
  408318:	pop    esp
  408319:	sahf   
  40831a:	jae    0x4082b1
  40831c:	cmp    BYTE PTR [esi-0x18c615b],ah
  408322:	std    
  408323:	sub    edi,esp
  408325:	push   ebp
  408326:	shl    cl,0x1a
  408329:	xchg   esi,eax
  40832a:	pop    esp
  40832b:	dec    ecx
  40832c:	dec    ecx
  40832d:	cdq    
  40832e:	stos   BYTE PTR es:[edi],al
  40832f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408330:	jb     0x408387
  408332:	pop    ds
  408333:	sahf   
  408334:	stos   DWORD PTR es:[edi],eax
  408335:	xchg   esp,eax
  408336:	add    al,0xcc
  408338:	je     0x40834f
  40833a:	pop    ss
  40833b:	retf   0xa8cc
  40833e:	sub    esi,eax
  408340:	sahf   
  408341:	ds cmc 
  408343:	sub    dh,BYTE PTR [eax-0x7b]
  408346:	cli    
  408347:	out    0x1a,eax
  408349:	jle    0x4082e8
  40834b:	ficom  WORD PTR [ebx+0x79]
  40834e:	push   ds
  40834f:	mov    dh,0xd8
  408351:	push   0x2e
  408353:	test   BYTE PTR [edi+edx*4+0x69317b9e],dh
  40835a:	add    al,0xe6
  40835c:	jb     0x408360
  40835e:	xchg   edi,eax
  40835f:	jmp    0xb64b09b
  408364:	mov    bl,0x9a
  408366:	mov    ch,0xa2
  408368:	lods   al,BYTE PTR ds:[esi]
  408369:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40836b:	lea    eax,[eax]
  40836d:	jle    0x408381
  40836f:	inc    esp
  408370:	fldcw  WORD PTR [ebp-0x2e]
  408373:	enter  0xba45,0x8
  408377:	sbb    eax,0x26b2ced7
  40837c:	pop    ebp
  40837d:	in     al,0xbb
  40837f:	mov    ds:0xd471e064,eax
  408384:	neg    BYTE PTR [esi-0x2a3159bb]
  40838a:	adc    eax,0x28382726
  40838f:	mov    ds:0x17d24277,al
  408394:	and    al,0xb8
  408396:	shl    BYTE PTR [ebp-0x21],cl
  408399:	and    eax,0xeffdb420
  40839e:	rcl    DWORD PTR [eax],0x5b
  4083a1:	jo     0x4083ca
  4083a3:	js     0x4083b9
  4083a5:	inc    eax
  4083a6:	jae    0x4083de
  4083a8:	mov    ecx,0xa5e42959
  4083ad:	inc    ecx
  4083ae:	jnp    0x408334
  4083b0:	loopne 0x408347
  4083b2:	add    eax,0xa68949c1
  4083b7:	mov    esp,0xe6d2b421
  4083bc:	shl    DWORD PTR [edi+0x2b09d00f],cl
  4083c2:	adc    dl,BYTE PTR [ebx]
  4083c4:	xor    al,0x6d
  4083c6:	sub    ebx,DWORD PTR [eax+ebp*8]
  4083c9:	mov    al,0x95
  4083cb:	mov    ah,dl
  4083cd:	je     0x408416
  4083cf:	pop    esp
  4083d0:	fcomp  st(6)
  4083d2:	arpl   WORD PTR [ebx],cx
  4083d4:	inc    edx
  4083d5:	push   0xffffffbf
  4083d7:	and    ecx,DWORD PTR [ebx]
  4083d9:	xchg   BYTE PTR [eax+0x43],ch
  4083dc:	mov    bh,BYTE PTR [ecx+0x7e]
  4083df:	fwait
  4083e0:	xor    BYTE PTR [edx+ebx*8+0x6501d896],dl
  4083e7:	or     DWORD PTR [ecx-0x7611c4d2],0xffffffcf
  4083ee:	sbb    bl,bh
  4083f0:	es xchg ecx,eax
  4083f2:	lds    ecx,FWORD PTR [ebp+0x7fe2531]
  4083f8:	test   BYTE PTR ds:0x5507fc6f,0x99
  4083ff:	xchg   esi,eax
  408400:	push   edi
  408401:	xchg   ecx,eax
  408402:	ret    0x28c
  408405:	aas    
  408406:	clc    
  408407:	inc    eax
  408408:	stc    
  408409:	mov    al,0x8a
  40840b:	pop    ds
  40840c:	dec    esp
  40840d:	dec    edx
  40840e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40840f:	pop    DWORD PTR [ebp+edi*4-0x71]
  408413:	or     ebp,DWORD PTR [eax-0x22]
  408416:	xchg   ebx,eax
  408417:	push   edi
  408418:	xor    eax,0x17ddc921
  40841d:	in     eax,0xfb
  40841f:	xchg   DWORD PTR [ebp-0x3c],ebx
  408422:	push   cx
  408424:	xor    eax,0xffffffbc
  408427:	mov    eax,ds:0x75d33bb8
  40842c:	fisubr DWORD PTR [ebp+0x69]
  40842f:	sub    edi,esp
  408431:	ret    
  408432:	fsubr  DWORD PTR [edx+edx*2+0x31cb539d]
  408439:	dec    esi
  40843a:	sbb    eax,0xe6f0f78
  40843f:	xchg   ebp,eax
  408440:	sbb    BYTE PTR [edi],cl
  408442:	jl     0x4083e1
  408444:	adc    eax,0x9b842d49
  408449:	dec    esp
  40844a:	mov    DWORD PTR gs:[ecx-0x1b112446],0xba88b15c
  408455:	dec    esp
  408456:	xchg   edi,edx
  408458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408459:	mov    eax,ds:0x22cd1fa5
  40845e:	cwde   
  40845f:	fstp   TBYTE PTR [ebx-0x54f7b27d]
  408465:	pop    ds
  408466:	fchs   
  408468:	fld    DWORD PTR [ebp+0x6d]
  40846b:	xor    dl,BYTE PTR [ecx]
  40846d:	ds add al,0x4f
  408470:	sbb    al,0xd8
  408472:	mov    edx,0x57481e24
  408477:	add    eax,0xb8fb0bcb
  40847c:	daa    
  40847d:	das    
  40847e:	arpl   WORD PTR [edx],ax
  408480:	sahf   
  408481:	xchg   ebp,eax
  408482:	jecxz  0x4084b6
  408484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408485:	aam    0x28
  408487:	jno    0x408470
  408489:	dec    ecx
  40848a:	ret    
  40848b:	mov    cl,0x29
  40848d:	push   cs
  40848e:	adc    bl,ch
  408490:	jb     0x4084da
  408492:	in     eax,0x59
  408494:	adc    BYTE PTR [ebx-0x476d275b],ah
  40849a:	pop    edi
  40849b:	jmp    0xa32e:0x82a6c019
  4084a2:	push   esi
  4084a3:	add    ebx,DWORD PTR [eax-0x2cb8aee0]
  4084a9:	add    DWORD PTR [eax+0x28],edi
  4084ac:	inc    esp
  4084ad:	imul   esp,DWORD PTR [edx+0x78d489e8],0x4e
  4084b4:	xor    DWORD PTR [ebx],ebp
  4084b6:	scas   eax,DWORD PTR es:[edi]
  4084b7:	push   esi
  4084b8:	cdq    
  4084b9:	stc    
  4084ba:	fild   WORD PTR [ecx-0x65]
  4084bd:	cmp    cl,cl
  4084bf:	test   eax,0x8fb109f3
  4084c4:	(bad)  
  4084c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c7:	jno    0x408471
  4084c9:	sbb    edx,DWORD PTR [ebx-0x645b3190]
  4084cf:	inc    edi
  4084d0:	call   ecx
  4084d2:	inc    ecx
  4084d3:	xchg   ecx,eax
  4084d4:	and    eax,0xc22029a
  4084d9:	ror    esi,0xd6
  4084dc:	and    eax,0x40e2971f
  4084e1:	scas   eax,DWORD PTR es:[edi]
  4084e2:	adc    BYTE PTR [ecx],dh
  4084e4:	xchg   ebp,eax
  4084e5:	pop    ss
  4084e6:	inc    esi
  4084e7:	sbb    DWORD PTR [esi+0x49],ebp
  4084ea:	or     DWORD PTR [ebx],ebp
  4084ec:	(bad)  [ebp+0x3f3ea48d]
  4084f2:	dec    esp
  4084f3:	mov    edx,ecx
  4084f5:	popa   
  4084f6:	mov    eax,ds:0x75add03
  4084fb:	nop
  4084fc:	pop    es
  4084fd:	add    BYTE PTR [edi],ch
  4084ff:	mov    eax,ds:0x5d3ac4d7
  408504:	dec    esp
  408505:	jmp    0x98f8:0xf9f6f18a
  40850c:	xchg   BYTE PTR [esi-0x75876409],dh
  408512:	xchg   edx,eax
  408513:	mov    al,0x8f
  408515:	int    0x8f
  408517:	stc    
  408518:	mov    bl,0xe2
  40851a:	mov    eax,0x7158318a
  40851f:	fadd   QWORD PTR [ecx+0x59]
  408522:	stc    
  408523:	fstp   st(1)
  408525:	mov    bl,0xc7
  408527:	pop    ecx
  408529:	in     al,dx
  40852a:	cmp    al,0xe0
  40852c:	xor    ebx,DWORD PTR [ecx*2-0x76ce4162]
  408533:	les    ebx,FWORD PTR [eax-0x10d8e80b]
  408539:	xor    DWORD PTR [ebx-0xc],esi
  40853c:	mov    esi,0x368eff81
  408541:	or     al,0x54
  408543:	dec    esp
  408544:	or     BYTE PTR [edx],0xd1
  408547:	fwait
  408548:	sbb    cl,BYTE PTR [ecx]
  40854a:	pop    esi
  40854b:	cmc    
  40854c:	sbb    eax,0x3b866426
  408551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408552:	sub    esi,DWORD PTR [edi+0x7b296b27]
  408558:	adc    eax,0xabbabe
  40855d:	mov    BYTE PTR [eax],ch
  40855f:	xchg   esp,eax
  408560:	in     al,dx
  408561:	call   0x5f635606
  408566:	dec    esp
  408567:	mov    DWORD PTR [esi-0x54],esp
  40856a:	mov    edi,0x6ede8004
  40856f:	pop    esp
  408570:	push   DWORD PTR [edi+eax*1-0x58]
  408574:	call   0x43b1f1e1
  408579:	in     eax,0x98
  40857b:	fbstp  TBYTE PTR [eax-0xd]
  40857e:	jp     0x40857d
  408580:	jns    0x40859b
  408582:	pushf  
  408583:	push   ss
  408584:	mov    cl,0x2f
  408586:	fdiv   DWORD PTR [eax+0x25f5f775]
  40858c:	push   es
  40858d:	in     eax,0xea
  40858f:	pop    ds
  408590:	sbb    eax,0x91c1b27f
  408595:	rcr    BYTE PTR [ebp+0x56bcbe79],cl
  40859b:	inc    eax
  40859c:	out    dx,al
  40859d:	adc    al,0x36
  40859f:	in     eax,dx
  4085a0:	mov    esp,ebx
  4085a2:	(bad)  
  4085a3:	rol    DWORD PTR [edi+0x2c43083f],1
  4085a9:	mul    DWORD PTR [ecx]
  4085ab:	(bad)  
  4085ac:	(bad)  
  4085ad:	adc    ebx,DWORD PTR [esi-0x172e8814]
  4085b3:	mov    DWORD PTR [edx],edi
  4085b5:	sti    
  4085b6:	mov    gs,WORD PTR [bp-0x3b12]
  4085bb:	retf   0xa505
  4085be:	add    al,0x39
  4085c0:	int3   
  4085c1:	test   DWORD PTR [edx-0x4f],esp
  4085c4:	dec    ecx
  4085c5:	aas    
  4085c6:	and    eax,0xdda9b93f
  4085cb:	int    0xb3
  4085cd:	pop    ds
  4085ce:	dec    ebp
  4085cf:	aam    0x24
  4085d1:	ffree  st(6)
  4085d3:	or     BYTE PTR [esi],bl
  4085d5:	mov    ecx,0x42abee81
  4085da:	(bad)  
  4085db:	pop    edi
  4085dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085dd:	mov    ebx,0xff3d9944
  4085e2:	add    eax,0x35548049
  4085e7:	aas    
  4085e8:	jl     0x40862a
  4085ea:	ss das 
  4085ec:	sub    eax,DWORD PTR [ebp+0x56]
  4085ef:	std    
  4085f0:	lahf   
  4085f1:	add    BYTE PTR [esp+ebp*4-0x80],dh
  4085f5:	and    eax,0xc2a823e0
  4085fa:	mov    bh,0xf7
  4085fc:	and    eax,0xdc6c5bec
  408601:	shl    ah,cl
  408603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408604:	cmp    BYTE PTR [edi+0x2dcead49],0x28
  40860b:	je     0x408647
  40860d:	scas   al,BYTE PTR es:[edi]
  40860e:	inc    esp
  40860f:	inc    edx
  408610:	inc    esp
  408611:	(bad)  
  408613:	repz adc DWORD PTR [ebx-0x60],eax
  408617:	xchg   esi,eax
  408618:	push   ds
  408619:	mov    ds:0x10a75052,eax
  40861e:	ins    BYTE PTR es:[edi],dx
  40861f:	std    
  408620:	fld    QWORD PTR [ebx-0x287e72b3]
  408626:	adc    dl,BYTE PTR [ebx-0xee47b40]
  40862c:	dec    ebx
  40862d:	dec    edx
  40862e:	jmp    edx
  408630:	push   ebp
  408631:	in     eax,dx
  408632:	popf   
  408633:	xor    ah,ah
  408635:	ins    DWORD PTR es:[edi],dx
  408636:	sub    esi,esp
  408638:	sti    
  408639:	mov    esi,ebx
  40863b:	push   cs
  40863c:	add    esi,DWORD PTR [ebx+0x6e24fd03]
  408642:	jg     0x4085e3
  408644:	pop    ebp
  408645:	ret    
  408646:	mov    ah,0x9b
  408648:	int    0xed
  40864a:	(bad)  
  40864b:	cli    
  40864c:	jae    0x4085db
  40864e:	(bad)  
  40864f:	mov    ch,0xf6
  408651:	dec    ebp
  408652:	mov    ch,0x40
  408654:	mov    ds:0x7db1374f,al
  408659:	pop    es
  40865a:	imul   ebp,DWORD PTR [ebx],0xffffffc0
  40865d:	add    al,BYTE PTR [esi]
  40865f:	(bad)  
  408660:	mov    eax,0x646cb3e3
  408665:	xchg   ecx,eax
  408666:	and    ebx,DWORD PTR [ecx+0x65]
  408669:	loop   0x4086b9
  40866b:	jb     0x4086c5
  40866d:	pop    edi
  40866e:	hlt    
  40866f:	les    ebx,FWORD PTR [eax]
  408671:	mov    ecx,0x60455ba4
  408676:	jbe    0x408667
  408678:	ins    DWORD PTR es:[edi],dx
  408679:	or     DWORD PTR [edx+0x2a329dfc],esp
  40867f:	mov    ecx,0xefda5783
  408684:	xor    bl,bl
  408686:	push   edx
  408687:	jle    0x4086a0
  408689:	das    
  40868a:	jecxz  0x40861f
  40868c:	push   esi
  40868d:	sbb    DWORD PTR [eax+0x53],esp
  408690:	pop    edx
  408691:	mov    ebx,0xeea8144b
  408696:	shl    DWORD PTR [eax-0x33],0xc2
  40869a:	in     al,dx
  40869b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40869c:	std    
  40869d:	xor    edi,eax
  40869f:	inc    eax
  4086a0:	ret    0x6b36
  4086a3:	test   edx,eax
  4086a5:	fisttp WORD PTR [eax-0x2efb4fdd]
  4086ab:	cld    
  4086ac:	aad    0xfd
  4086ae:	js     0x408706
  4086b0:	mov    ebx,0x8f2b2285
  4086b5:	jge    0x4086a5
  4086b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b8:	(bad)  
  4086b9:	(bad)  
  4086ba:	fild   DWORD PTR [ebp+0x60df96f7]
  4086c0:	test   eax,0x984016ea
  4086c5:	into   
  4086c6:	xchg   ecx,eax
  4086c7:	jns    0x408711
  4086c9:	cmp    ch,cl
  4086cb:	cld    
  4086cc:	imul   ecx,DWORD PTR [ecx+ecx*1],0xbfbcd656
  4086d3:	cwde   
  4086d4:	mul    DWORD PTR [edx-0xc]
  4086d7:	add    al,0x6a
  4086d9:	add    esi,DWORD PTR [ebx]
  4086db:	rcr    BYTE PTR [edx-0x7d],cl
  4086de:	ret    0x5208
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x89bc72f1
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  ebx,QWORD PTR [eax-0x27]
  408720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408721:	mov    al,BYTE PTR ds:0xb3e4a94d
  408727:	cmp    esp,DWORD PTR [eax+0x28]
  40872a:	or     al,0xf1
  40872c:	and    eax,ecx
  40872e:	add    bl,ch
  408730:	fsubr  st,st(3)
  408732:	mov    dl,BYTE PTR [esi]
  408734:	jns    0x408757
  408736:	and    al,0xae
  408738:	add    edi,DWORD PTR [ebx]
  40873a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40873b:	ret    0xb3cf
  40873e:	(bad)  
  40873f:	adc    DWORD PTR [edx],ebx
  408741:	imul   ebp,DWORD PTR [edi],0x12fa37b6
  408747:	das    
  408748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408749:	gs aam 0x42
  40874c:	fwait
  40874d:	mov    dh,0x6a
  40874f:	scas   al,BYTE PTR es:[edi]
  408750:	xchg   DWORD PTR [esi+0x59aaabb9],edi
  408756:	je     0x408714
  408758:	xchg   BYTE PTR [ecx-0x6ff6dd3e],ch
  40875e:	sbb    BYTE PTR [edx+0x5ba9fc93],bh
  408764:	mov    DWORD PTR [edi+0x10],eax
  408767:	pop    ss
  408768:	ret    0xe92e
  40876b:	pop    esp
  40876c:	mov    DWORD PTR [eax],ebp
  40876e:	push   eax
  40876f:	mov    ch,0x79
  408771:	pop    edi
  408772:	test   BYTE PTR [ebp+0x7f],0x6e
  408776:	pop    edi
  408777:	dec    esi
  408778:	pusha  
  408779:	mov    esp,0x4a15e5e5
  40877e:	js     0x4087df
  408780:	loopne 0x408713
  408782:	inc    eax
  408783:	sub    cl,BYTE PTR [edi-0x65f0fe01]
  408789:	sub    eax,0x6d27dd1f
  40878e:	cmp    ch,BYTE PTR [esi+eiz*2]
  408791:	iret   
  408792:	mov    cl,0xc6
  408794:	push   esp
  408795:	(bad)
  408798:	imul   ch
  40879a:	daa    
  40879b:	(bad)  
  40879c:	lods   eax,DWORD PTR ds:[esi]
  40879d:	push   esp
  40879e:	das    
  40879f:	cdq    
  4087a0:	xchg   edi,eax
  4087a1:	std    
  4087a2:	adc    BYTE PTR [ebp-0x17],bh
  4087a5:	cdq    
  4087a6:	lods   eax,DWORD PTR ds:[esi]
  4087a7:	jmp    0xf4998fe9
  4087ac:	rcl    BYTE PTR [ebx-0x6c],0xf4
  4087b0:	es mov esi,0x79718a85
  4087b6:	ficom  WORD PTR [ebx+0x1f3a553e]
  4087bc:	mov    ah,0xed
  4087be:	jnp    0x4087eb
  4087c0:	push   0xeb2abf40
  4087c5:	mov    dh,0xa0
  4087c7:	rcl    BYTE PTR [eax-0x5e],1
  4087ca:	xchg   BYTE PTR [esi+0x77],ch
  4087cd:	xor    DWORD PTR ds:0xfb126a64,ebx
  4087d3:	xor    eax,DWORD PTR [esi+0x6590acfd]
  4087d9:	inc    eax
  4087da:	sbb    DWORD PTR [ecx-0x61acc2b0],ebp
  4087e0:	les    ebp,FWORD PTR [edi+0x577c7eb]
  4087e6:	push   cs
  4087e7:	cmp    DWORD PTR [eax+esi*2-0x4c],ebp
  4087eb:	mov    bh,dh
  4087ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ee:	stos   DWORD PTR es:[edi],eax
  4087ef:	jmp    0xf37e:0xb723e628
  4087f6:	cdq    
  4087f7:	scas   al,BYTE PTR es:[edi]
  4087f8:	pop    es
  4087f9:	dec    ecx
  4087fa:	test   DWORD PTR [ebx+0x5c],0x1e34685d
  408801:	xchg   ebp,eax
  408802:	outs   dx,BYTE PTR ds:[esi]
  408803:	pop    edx
  408804:	push   ds
  408805:	mov    ah,0xe9
  408807:	sti    
  408808:	pop    ds
  408809:	lods   al,BYTE PTR ds:[esi]
  40880a:	add    al,0x8f
  40880c:	cmp    ah,bl
  40880e:	pop    ebx
  40880f:	rcr    DWORD PTR [ebp-0x15eb4e88],0x84
  408816:	(bad)  
  408817:	adc    eax,0x89ce2603
  40881c:	and    eax,0xd4c950ab
  408821:	push   es
  408822:	fucomi st,st(3)
  408824:	dec    eax
  408825:	loop   0x40887b
  408827:	jmp    0xb0e278b5
  40882c:	xchg   ebx,eax
  40882d:	jmp    0xbd11a456
  408832:	inc    ecx
  408833:	xor    DWORD PTR [edx+0x646d9bae],ebx
  408839:	shl    bh,cl
  40883b:	inc    edi
  40883c:	mul    cl
  40883e:	adc    al,0x9c
  408840:	test   eax,0x7580e53d
  408845:	add    cl,BYTE PTR [ebp+edi*4-0x220762ac]
  40884c:	cli    
  40884d:	js     0x40885e
  40884f:	jmp    0xbf4be0d8
  408854:	inc    ebx
  408855:	into   
  408856:	gs push esi
  408858:	mov    WORD PTR [eax],fs
  40885a:	leave  
  40885b:	push   eax
  40885c:	imul   ecx,DWORD PTR [ebx+0x9e23dd6],0x1494ebb8
  408866:	mov    cs,WORD PTR [ebx+eiz*8+0x35975c8a]
  40886d:	jmp    0x408840
  40886f:	stos   BYTE PTR es:[edi],al
  408870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408871:	outs   dx,DWORD PTR fs:[esi]
  408873:	dec    edx
  408874:	mov    bl,0x9f
  408876:	enter  0x1989,0xa3
  40887a:	dec    edx
  40887b:	jecxz  0x4088b2
  40887d:	stc    
  40887e:	loopne 0x408861
  408880:	cmp    esp,DWORD PTR [edx+edi*1-0x7d0134bb]
  408887:	fidiv  WORD PTR [edi-0x10a39c33]
  40888d:	fld    DWORD PTR [ebx]
  40888f:	mov    al,0xc3
  408891:	mov    eax,DWORD PTR [ebp-0x279f973]
  408897:	lgdtd  [edx]
  40889a:	or     al,0x36
  40889c:	sub    eax,0x14387c50
  4088a1:	sub    eax,0x2062c7d3
  4088a6:	push   DWORD PTR [ecx+0x2536c278]
  4088ac:	mov    dh,0xa0
  4088ae:	std    
  4088af:	jl     0x408882
  4088b1:	add    ch,bh
  4088b3:	pushf  
  4088b4:	pcmpeqd mm7,mm4
  4088b7:	xchg   edi,eax
  4088b8:	adc    al,0x4
  4088ba:	lods   eax,DWORD PTR ds:[esi]
  4088bb:	sbb    eax,0x1809d946
  4088c0:	pop    edx
  4088c1:	mov    al,ds:0x40c963fc
  4088c6:	cwde   
  4088c7:	adc    eax,0x5b6b6959
  4088cc:	cmp    ebx,ebp
  4088ce:	mov    al,ds:0xd4a9b5e6
  4088d3:	fld    QWORD PTR [ecx]
  4088d5:	enter  0x47f9,0xfa
  4088d9:	mov    esp,0x36a32f63
  4088de:	arpl   WORD PTR [edi+0x173bba2e],sp
  4088e4:	add    DWORD PTR [eax],eax
  4088e6:	jge    0x4088f9
  4088e8:	pop    sp
  4088ea:	sbb    eax,0x7be087f4
  4088ef:	xchg   esp,eax
  4088f0:	dec    ecx
  4088f1:	arpl   WORD PTR [ecx],di
  4088f3:	or     al,0x24
  4088f5:	imul   eax,DWORD PTR [ebp+0x16acc10b],0xdbd1c6be
  4088ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408900:	xchg   ebp,eax
  408901:	(bad)
  408904:	fsub   QWORD PTR [edi]
  408906:	xor    esp,DWORD PTR [ebx+0x27d97ace]
  40890c:	sbb    cl,ch
  40890e:	mov    bl,0xc4
  408910:	enter  0xde25,0x93
  408914:	and    DWORD PTR [edi],edx
  408916:	clc    
  408917:	shl    BYTE PTR [ebp+0x3faf405c],0x86
  40891e:	daa    
  40891f:	mov    ch,0x55
  408921:	(bad)  
  408922:	hlt    
  408923:	arpl   WORD PTR [edx-0x75558ae8],ax
  408929:	clc    
  40892a:	mov    ds:0x842dd411,eax
  40892f:	cmp    eax,0x65fde36b
  408934:	out    0x49,al
  408936:	popa   
  408937:	mov    WORD PTR [edx+0x56],ds
  40893a:	leave  
  40893b:	sub    edx,DWORD PTR [ebx+0x7053865f]
  408941:	test   eax,0x393fcd03
  408946:	shl    BYTE PTR [edx+0x2],0xa1
  40894a:	xchg   edi,eax
  40894b:	sbb    BYTE PTR [ebx+esi*1+0x9],0x8a
  408950:	lods   al,BYTE PTR ds:[esi]
  408951:	push   edx
  408952:	mov    ebx,0x8dc4c369
  408957:	dec    dh
  408959:	add    BYTE PTR [edx+0x616f7122],ch
  40895f:	addr16 mov esi,0x9daf0ce2
  408965:	inc    esp
  408967:	ds pop ss
  408969:	dec    edi
  40896a:	mov    ebx,0x51373577
  40896f:	push   0x41
  408971:	add    BYTE PTR [edx+0x39],bl
  408974:	fadd   QWORD PTR [ebx-0x181d4d13]
  40897a:	jp     0x40891e
  40897c:	std    
  40897d:	xchg   ebx,ebx
  40897f:	mov    bl,0xc1
  408981:	sub    bh,0xc3
  408984:	push   ebx
  408985:	sbb    al,0x36
  408987:	js     0x4089e8
  408989:	mov    BYTE PTR [ebx-0xc4c2379],dh
  40898f:	adc    ecx,ebp
  408991:	or     edx,DWORD PTR [edx+eiz*2]
  408994:	jno    0x40899f
  408996:	mov    cl,ah
  408998:	mov    ecx,0x599abd69
  40899d:	adc    dh,bh
  40899f:	push   0x25
  4089a1:	adc    eax,0xc71b25ee
  4089a6:	dec    esp
  4089a7:	add    BYTE PTR [ecx+ebx*4-0x21],bl
  4089ab:	mov    ebp,0x430648b1
  4089b0:	or     dh,0x3f
  4089b3:	shl    ecx,1
  4089b5:	dec    ebp
  4089b6:	mov    al,ds:0x8bb18bac
  4089bb:	lds    esp,FWORD PTR [ecx+ecx*4-0x34007410]
  4089c2:	cmc    
  4089c3:	jg     0x40899e
  4089c5:	js     0x408a13
  4089c7:	xchg   edx,eax
  4089c8:	sbb    eax,0xbd35c3d4
  4089cd:	out    0xf7,al
  4089cf:	iret   
  4089d0:	pop    esp
  4089d1:	add    DWORD PTR [ebp-0x2f8ee1a7],edx
  4089d7:	cmp    DWORD PTR [ebp-0x32],edi
  4089da:	push   eax
  4089db:	adc    ebx,eax
  4089dd:	sub    DWORD PTR [edi-0x58d2fea9],eax
  4089e3:	or     bh,BYTE PTR [ebp+ecx*1-0x1]
  4089e7:	inc    edx
  4089e8:	dec    edx
  4089e9:	std    
  4089ea:	push   ebx
  4089eb:	out    dx,al
  4089ec:	xchg   ebx,eax
  4089ed:	mov    BYTE PTR [edi+0x63d6797e],dh
  4089f3:	jl     0x408a33
  4089f5:	das    
  4089f6:	xor    eax,0x21875f4c
  4089fb:	fisttp WORD PTR [edi-0x18]
  4089fe:	fnsave [ebx+0x63f43695]
  408a04:	mov    esi,0x28c2d2d9
  408a09:	and    BYTE PTR [eax-0x5859f20],ah
  408a0f:	push   es
  408a10:	and    DWORD PTR [ebp-0x2a8dcf85],edi
  408a16:	jle    0x408a69
  408a18:	sub    edi,ebx
  408a1a:	mov    esp,0xc408f9e7
  408a1f:	push   esp
  408a20:	icebp  
  408a21:	stos   BYTE PTR es:[edi],al
  408a22:	push   cs
  408a23:	(bad)  [esi+0x1da3ebf2]
  408a29:	call   0x4f6a9854
  408a2e:	call   0x9172:0xcd511a82
  408a35:	out    dx,al
  408a36:	pop    ebp
  408a37:	mov    al,ds:0x7e0bf998
  408a3c:	je     0x408a5d
  408a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a40:	adc    ebx,DWORD PTR [ecx-0x56f8fff8]
  408a46:	in     al,0xd
  408a48:	(bad)  
  408a49:	out    dx,eax
  408a4a:	imul   edx,DWORD PTR ds:0x144ac331,0xffffffdc
  408a51:	adc    esp,DWORD PTR [ebp+0x24162376]
  408a57:	dec    ecx
  408a58:	add    eax,0x73ff6513
  408a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a5e:	xchg   edi,eax
  408a5f:	push   esi
  408a60:	out    0xa,al
  408a62:	mov    cs,WORD PTR [edx]
  408a64:	outs   dx,DWORD PTR ds:[esi]
  408a65:	or     DWORD PTR [ecx],0x8426df8c
  408a6b:	mov    BYTE PTR [ecx+0x5cafbb92],0x9d
  408a72:	leave  
  408a73:	adc    bl,al
  408a75:	xchg   edx,eax
  408a76:	inc    edi
  408a77:	jo     0x408a66
  408a79:	out    dx,al
  408a7a:	fwait
  408a7b:	pop    eax
  408a7c:	mov    ds:0x5ce53680,eax
  408a81:	nop
  408a82:	pop    ebx
  408a83:	add    ebp,DWORD PTR [edi-0x6b]
  408a86:	push   es
  408a87:	js     0x408abe
  408a89:	(bad)  
  408a8a:	fnstcw WORD PTR [ebp-0x1]
  408a8d:	adc    eax,0xb2548b02
  408a92:	jecxz  0x408ac2
  408a94:	sub    eax,ecx
  408a96:	sub    BYTE PTR [edi-0x24],cl
  408a99:	jb     0x408b04
  408a9b:	in     eax,0xee
  408a9d:	outs   dx,BYTE PTR ds:[esi]
  408a9e:	ss dec edx
  408aa0:	pop    ebx
  408aa1:	xchg   ebp,eax
  408aa2:	ret    
  408aa3:	pop    eax
  408aa4:	(bad)  
  408aa5:	adc    eax,0x118f2389
  408aaa:	sbb    edi,DWORD PTR [edx-0x4e2d267]
  408ab0:	inc    ebp
  408ab1:	sbb    BYTE PTR [edi+0x7e743baa],0x21
  408ab8:	mov    cs,ecx
  408aba:	neg    BYTE PTR [edx-0x445342de]
  408ac0:	inc    ecx
  408ac1:	lods   eax,DWORD PTR ds:[esi]
  408ac2:	dec    ecx
  408ac3:	cmp    bh,ah
  408ac5:	in     eax,0x9a
  408ac7:	outs   dx,DWORD PTR ds:[esi]
  408ac8:	add    DWORD PTR [ecx-0x7b],ebx
  408acb:	fidivr WORD PTR ds:0xc7a4b936
  408ad1:	sub    BYTE PTR [edi+edi*4+0x400df379],ah
  408ad8:	stc    
  408ad9:	inc    esi
  408ada:	fmul   st(7),st
  408adc:	sbb    al,0x2e
  408ade:	xor    BYTE PTR [eax],0xfd
  408ae1:	ins    DWORD PTR es:[edi],dx
  408ae2:	sub    BYTE PTR [eax],0xea
  408ae5:	push   es
  408ae6:	repnz cld 
  408ae8:	(bad)  
  408ae9:	mov    eax,0x4f0172c1
  408aee:	ins    BYTE PTR es:[edi],dx
  408aef:	push   ebp
  408af0:	xchg   esp,eax
  408af1:	cmp    DWORD PTR ds:0xa9493424,esp
  408af7:	dec    esp
  408af8:	jle    0x408b0e
  408afa:	mov    bh,al
  408afc:	and    eax,0xfb1575b2
  408b01:	or     al,0xe1
  408b03:	mov    edi,0xca3876a4
  408b08:	dec    ecx
  408b09:	cmp    DWORD PTR [esi+esi*8+0x12725233],0xef97d667
  408b14:	cli    
  408b15:	xlat   BYTE PTR ds:[ebx]
  408b16:	and    BYTE PTR [edi],0xc9
  408b19:	xchg   DWORD PTR ds:0x8d22c1f6,ecx
  408b1f:	not    BYTE PTR [ebx-0x1b]
  408b22:	retf   
  408b23:	or     eax,0x6fcb6df1
  408b28:	outs   dx,BYTE PTR ds:[esi]
  408b29:	pop    ds
  408b2a:	mov    ch,0x56
  408b2c:	dec    esp
  408b2d:	push   es
  408b2e:	add    eax,0xc2545502
  408b33:	sahf   
  408b34:	(bad)  
  408b35:	jns    0x408b5f
  408b37:	pop    esi
  408b38:	hlt    
  408b39:	stos   DWORD PTR es:[edi],eax
  408b3a:	scas   al,BYTE PTR es:[edi]
  408b3b:	ret    
  408b3c:	adc    esp,esp
  408b3e:	pop    ebp
  408b3f:	pusha  
  408b40:	add    DWORD PTR [ebp+0x3c5f8a],ecx
  408b46:	nop
  408b47:	mov    ah,0x90
  408b49:	xchg   esp,eax
  408b4a:	(bad)  
  408b4b:	icebp  
  408b4c:	mov    DWORD PTR ds:0xf56574b,ebp
  408b52:	rcr    DWORD PTR [eax-0x3c],1
  408b55:	add    edi,DWORD PTR [ebp-0x2]
  408b58:	sar    BYTE PTR [edx+esi*4+0x32b9386c],0xcf
  408b60:	cdq    
  408b61:	cmp    bl,al
  408b63:	bound  edx,QWORD PTR [esi+0x625e4a87]
  408b69:	xor    al,0xa8
  408b6b:	addr16 lock or eax,0x432b6471
  408b72:	xlat   BYTE PTR ds:[ebx]
  408b73:	loope  0x408afd
  408b75:	les    eax,FWORD PTR [edx]
  408b77:	test   al,0xc7
  408b79:	sbb    al,BYTE PTR [edi-0xe]
  408b7c:	or     al,0x1
  408b7e:	push   0xd1dc291b
  408b83:	inc    ebx
  408b84:	mov    bl,0xa8
  408b86:	mov    al,0x99
  408b88:	mov    dh,0x80
  408b8a:	jae    0x408b58
  408b8c:	dec    ebx
  408b8d:	jge    0x408b4d
  408b8f:	scas   eax,DWORD PTR es:[edi]
  408b90:	sbb    esi,esp
  408b92:	pushf  
  408b93:	(bad)  
  408b94:	or     al,0x68
  408b96:	cld    
  408b97:	push   esi
  408b98:	out    dx,al
  408b99:	nop
  408b9a:	add    al,0xc4
  408b9c:	cmc    
  408b9d:	pop    ebp
  408b9e:	mov    cl,0x62
  408ba1:	sbb    al,0x68
  408ba3:	dec    si
  408ba5:	push   esp
  408ba6:	sub    eax,0x61d2c27f
  408bab:	mov    ds:0x5d2a007e,eax
  408bb0:	test   al,0xe7
  408bb2:	xor    bh,al
  408bb4:	enter  0x77ac,0x5a
  408bb8:	fmul   st(0),st
  408bba:	loop   0x408bc5
  408bbc:	push   ebp
  408bbd:	loopne 0x408bdf
  408bbf:	jnp    0x408bed
  408bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc2:	out    0x35,al
  408bc4:	mov    dh,BYTE PTR [esi-0x5e6c19d4]
  408bca:	imul   edi,DWORD PTR [edx+0x7b],0xffffffd4
  408bce:	outs   dx,BYTE PTR ds:[esi]
  408bcf:	lods   eax,DWORD PTR ds:[esi]
  408bd0:	xchg   ecx,eax
  408bd1:	adc    ebx,esi
  408bd3:	sbb    cl,0x55
  408bd6:	sub    BYTE PTR [ebx-0x5b],0xad
  408bda:	xor    cl,BYTE PTR [eax-0x12be0f86]
  408be0:	int3   
  408be1:	fnstenv [ecx+0x22]
  408be4:	int    0xbd
  408be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be7:	loopne 0x408c19
  408be9:	into   
  408bea:	push   ecx
  408beb:	sbb    cl,BYTE PTR [esi+esi*1]
  408bee:	and    ebp,DWORD PTR [ecx-0x38]
  408bf1:	cmc    
  408bf2:	cs mov ebx,0xe334becc
  408bf8:	push   ebp
  408bf9:	stc    
  408bfa:	xor    BYTE PTR [ecx],ah
  408bfc:	xor    ebp,DWORD PTR [ecx+0x25]
  408bff:	retf   
  408c00:	inc    ecx
  408c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c02:	adc    dh,al
  408c04:	add    bl,ch
  408c06:	cmp    esp,DWORD PTR [edx-0x2a]
  408c09:	push   eax
  408c0a:	ficom  WORD PTR [edx+0x3c]
  408c0d:	jb     0x408c55
  408c0f:	fild   QWORD PTR [ecx+eax*2]
  408c12:	and    eax,0xaf8e8a2f
  408c17:	hlt    
  408c18:	cli    
  408c19:	push   esi
  408c1a:	add    DWORD PTR [edx+ecx*8-0x7bfb80c4],edx
  408c21:	xchg   ebx,eax
  408c22:	(bad)  
  408c23:	iret   
  408c24:	dec    edx
  408c25:	sub    al,0x20
  408c27:	cld    
  408c28:	cmp    eax,0x7e46bdf7
  408c2d:	outs   dx,DWORD PTR ds:[esi]
  408c2e:	add    BYTE PTR [eax],ah
  408c30:	jb     0x408c5d
  408c32:	sbb    BYTE PTR [ebx+0x3be2f796],ah
  408c38:	stos   DWORD PTR es:[edi],eax
  408c39:	or     DWORD PTR [esp+ebx*1+0x4dfbf29d],0x33fba5ed
  408c44:	add    ecx,DWORD PTR [ebp-0x7]
  408c47:	push   ss
  408c48:	push   eax
  408c49:	dec    BYTE PTR [esi-0x7b]
  408c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4d:	jg     0x408c82
  408c4f:	mov    ch,0xed
  408c51:	(bad)  
  408c52:	pop    esi
  408c53:	or     bh,ah
  408c55:	add    ecx,DWORD PTR [eax-0x1d]
  408c58:	scas   al,BYTE PTR es:[edi]
  408c59:	(bad)  
  408c5a:	cld    
  408c5b:	add    eax,0xbf1ad9ad
  408c60:	sbb    BYTE PTR [eax-0x11ab0787],ah
  408c66:	cli    
  408c67:	xchg   bp,ax
  408c69:	cdq    
  408c6a:	pop    ebx
  408c6b:	sbb    al,0xdb
  408c6d:	std    
  408c6e:	je     0x408c48
  408c70:	add    esp,DWORD PTR [esi+0x50ae8128]
  408c76:	add    ah,ch
  408c78:	inc    ecx
  408c79:	sbb    DWORD PTR [ebx+0x6f0ce4c1],0xd6c6f660
  408c83:	sub    eax,0x769e20d7
  408c88:	and    eax,0xb81f758a
  408c8d:	cdq    
  408c8e:	ds jnp 0x408cfa
  408c91:	jle    0x408c7f
  408c93:	into   
  408c94:	std    
  408c95:	in     al,0xe6
  408c97:	(bad)  
  408c98:	xchg   esp,eax
  408c99:	aad    0x93
  408c9b:	or     bh,BYTE PTR [edx+0x10]
  408c9e:	mov    al,ds:0x63216f8b
  408ca3:	lods   eax,DWORD PTR ds:[esi]
  408ca4:	pop    ss
  408ca5:	add    al,BYTE PTR [eax-0x61]
  408ca8:	call   0x5a4a:0x6c0fa0f1
  408caf:	mov    edi,0x49bbccac
  408cb4:	(bad)  
  408cb5:	test   eax,0xba356402
  408cbb:	jbe    0x408c82
  408cbd:	adc    al,0x15
  408cbf:	mov    cl,0x8a
  408cc1:	mov    WORD PTR ds:0x4e56d8b1,fs
  408cc7:	push   0x535fe236
  408ccc:	dec    ebp
  408ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cce:	data16 repz aad 0xf2
  408cd2:	daa    
  408cd3:	dec    ebx
  408cd4:	ror    DWORD PTR [esi-0x7554d3d6],1
  408cda:	pop    edi
  408cdb:	inc    ebp
  408cdc:	retf   0x4f1
  408cdf:	ss daa 
  408ce1:	pop    ds
  408ce2:	cmp    ebp,DWORD PTR [esi-0x61]
  408ce5:	pop    esp
  408ce6:	pop    edi
  408ce7:	aam    0x8b
  408ce9:	scas   eax,DWORD PTR es:[edi]
  408cea:	mov    ?,WORD PTR es:0x86c9cacf
  408cf1:	stos   DWORD PTR es:[edi],eax
  408cf2:	cmp    ebx,DWORD PTR [ebp+0x29]
  408cf5:	jb     0x408d18
  408cf7:	loope  0x408c7d
  408cf9:	cld    
  408cfa:	pusha  
  408cfb:	sub    ebp,DWORD PTR [edx+0x53]
  408cfe:	dec    edi
  408cff:	dec    eax
  408d00:	sbb    ebx,DWORD PTR [edi]
  408d02:	push   ds
  408d03:	pop    es
  408d04:	and    eax,0x535f8152
  408d09:	add    ebx,DWORD PTR [ecx*1-0x14766832]
  408d10:	or     eax,0xda8559f0
  408d15:	loopne 0x408cb2
  408d17:	and    eax,0x92d670cf
  408d1c:	xchg   DWORD PTR [edi],edi
  408d1e:	les    ebp,FWORD PTR [eax+0x3089b483]
  408d24:	into   
  408d25:	push   es
  408d26:	mov    ecx,0x731ca1e4
  408d2b:	inc    eax
  408d2c:	xor    DWORD PTR [esi+0x78dd5fe],0xbc15edfe
  408d36:	add    BYTE PTR [ebp+ebx*8-0x6023d14c],ch
  408d3d:	stos   BYTE PTR es:[edi],al
  408d3e:	and    BYTE PTR [eax+edx*1+0x6c],ch
  408d42:	outs   dx,BYTE PTR ds:[esi]
  408d43:	or     DWORD PTR [esi],0x74
  408d46:	ja     0x408dc2
  408d48:	xor    ah,ch
  408d4a:	daa    
  408d4b:	out    dx,eax
  408d4c:	adc    eax,DWORD PTR [eax]
  408d4e:	add    eax,0x6ab01cf
  408d53:	test   BYTE PTR [edx+0x38],dl
  408d56:	(bad)  
  408d57:	lods   al,BYTE PTR ds:[esi]
  408d58:	cmp    BYTE PTR [ebx],ah
  408d5a:	or     eax,0xe6993a85
  408d5f:	adc    DWORD PTR [ebp-0x5d],edx
  408d62:	paddsb mm6,QWORD PTR [edi+0x52]
  408d66:	(bad)  
  408d68:	push   edi
  408d69:	(bad)  
  408d6a:	fisubr WORD PTR [edx]
  408d6c:	imul   esi,DWORD PTR [edx-0x7a],0xad329b9d
  408d73:	lds    ecx,FWORD PTR [ecx+esi*2+0x7c]
  408d77:	xor    ebx,esp
  408d79:	inc    ebx
  408d7a:	popf   
  408d7b:	inc    esp
  408d7c:	pop    esp
  408d7d:	push   ss
  408d7e:	inc    esp
  408d7f:	in     al,dx
  408d80:	into   
  408d81:	jecxz  0x408dfd
  408d83:	push   eax
  408d84:	fdiv   QWORD PTR [ebx]
  408d86:	xor    al,0x6b
  408d88:	fs dec esi
  408d8a:	sub    dh,dl
  408d8c:	outs   dx,BYTE PTR ds:[esi]
  408d8d:	push   esi
  408d8e:	mov    bh,0x65
  408d90:	and    al,0x6a
  408d92:	xor    BYTE PTR [edi],bh
  408d94:	shr    DWORD PTR [ebp-0x5243a3ce],cl
  408d9a:	jmp    0xd6b9:0x936fc005
  408da1:	mov    ds:0x49282805,eax
  408da6:	mov    edx,?
  408da8:	mov    ah,0xfa
  408daa:	xchg   BYTE PTR [eax+eiz*2],dh
  408dad:	xor    BYTE PTR [edx-0x147903ec],0xa
  408db4:	mov    DWORD PTR [esi+0x41],esi
  408db7:	add    edx,DWORD PTR [edi-0x60bfd9f9]
  408dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbe:	or     BYTE PTR [esi-0x22],dh
  408dc1:	mov    esi,0x9a1f0b17
  408dc6:	rol    BYTE PTR [eax+0x11],0xf5
  408dca:	pop    ecx
  408dcb:	jb     0x408da6
  408dcd:	addr16 push ebx
  408dcf:	add    BYTE PTR [eax+0x3f4d54be],cl
  408dd5:	in     al,dx
  408dd6:	ror    BYTE PTR [ebp+eax*8+0x21],0x27
  408ddb:	(bad)
  408dde:	dec    esp
  408ddf:	mov    eax,ds:0xb631481a
  408de4:	in     al,dx
  408de5:	cli    
  408de6:	xor    al,0xe4
  408de8:	int3   
  408de9:	jmp    0x408e4c
  408deb:	dec    edx
  408dec:	mov    bh,BYTE PTR [edx+0x5791f7ce]
  408df2:	sub    BYTE PTR [edx+0x6706ee95],cl
  408df8:	add    BYTE PTR [edi],dh
  408dfa:	push   cs
  408dfb:	cwde   
  408dfc:	jmp    0x408e77
  408dfe:	sbb    DWORD PTR [eax],ecx
  408e00:	jne    0x408ded
  408e02:	repz xchg esp,eax
  408e04:	or     al,0xa2
  408e06:	pop    ss
  408e07:	sub    DWORD PTR [esi-0x39],ebp
  408e0a:	rcl    ah,1
  408e0c:	lock mov edi,0x15bf2fae
  408e12:	mov    ds:0x8bdc3e0f,al
  408e17:	shl    DWORD PTR [ecx],cl
  408e19:	push   edi
  408e1a:	sbb    eax,0x8f26c5d8
  408e1f:	ret    0x7152
  408e22:	mov    esp,0x633ce426
  408e27:	shr    DWORD PTR [ebx+0x4ca06c15],1
  408e2d:	sti    
  408e2e:	push   edi
  408e2f:	iret   
  408e30:	inc    ebp
  408e31:	aad    0x25
  408e33:	or     al,0x66
  408e35:	inc    ebx
  408e36:	lods   eax,DWORD PTR ds:[esi]
  408e37:	prefetchw BYTE PTR ds:0xc59abcf1
  408e3e:	jmp    0x298108df
  408e43:	push   eax
  408e44:	mov    DWORD PTR [ebx-0x54992433],0x7840c31e
  408e4e:	inc    ecx
  408e4f:	fs out dx,eax
  408e51:	sbb    BYTE PTR [eax+0x33],ah
  408e54:	add    ebp,DWORD PTR [ecx]
  408e56:	adc    al,0x32
  408e58:	pop    edx
  408e59:	pop    ebx
  408e5a:	fiadd  WORD PTR [eax]
  408e5c:	sbb    eax,0x8cefca2e
  408e61:	xlat   BYTE PTR ds:[ebx]
  408e62:	push   esi
  408e63:	mov    ebp,0x1cf947c4
  408e68:	jb     0x408ec2
  408e6a:	adc    al,0xec
  408e6c:	retf   0xfe0c
  408e6f:	xor    dl,BYTE PTR [edx]
  408e71:	dec    esi
  408e72:	add    edi,ebx
  408e74:	ror    DWORD PTR [eax-0x2a3cfff6],1
  408e7a:	mov    edx,0x418538d0
  408e7f:	(bad)  [ebx+0x7d]
  408e82:	jno    0x408e46
  408e84:	fcomp  DWORD PTR [edx+ecx*2+0x65]
  408e88:	imul   esp,DWORD PTR [ebx+0x112281d4],0xb9fefe8e
  408e92:	leave  
  408e93:	call   0x7752:0xcce2b841
  408e9a:	add    dh,0x5f
  408e9d:	stc    
  408e9e:	fistp  QWORD PTR [edi*4-0x3f31fdb4]
  408ea5:	jle    0xb1b0d2ef
  408eab:	ds pop eax
  408ead:	dec    edx
  408eae:	outs   dx,BYTE PTR ds:[esi]
  408eaf:	bound  ebp,QWORD PTR [eax+0x82f00f8]
  408eb5:	push   0x48451f7d
  408eba:	clc    
  408ebb:	ret    
  408ebc:	mov    al,ds:0xdc9128b9
  408ec1:	dec    eax
  408ec2:	xor    DWORD PTR [edi+edx*8-0x3c],ebx
  408ec6:	cmp    al,0x59
  408ec8:	sub    edx,esi
  408eca:	hlt    
  408ecb:	es push edi
  408ecd:	clc    
  408ece:	add    eax,edi
  408ed0:	push   ebp
  408ed1:	mov    bl,0xf9
  408ed3:	scas   al,BYTE PTR es:[edi]
  408ed4:	and    DWORD PTR [ebx-0x5339d1b4],0xeb90febf
  408ede:	js     0x408e6f
  408ee0:	in     eax,dx
  408ee1:	int3   
  408ee2:	dec    ecx
  408ee3:	stc    
  408ee4:	sbb    DWORD PTR [edx-0x4c],ebx
  408ee7:	sub    eax,0xad956a17
  408eec:	pop    edx
  408eed:	add    al,0xd9
  408eef:	lods   eax,DWORD PTR ds:[esi]
  408ef0:	mov    dh,0x7b
  408ef2:	jmp    0x408f5a
  408ef4:	pop    ds
  408ef5:	push   0xffffffc1
  408ef7:	nop
  408ef8:	jae    0x408ee1
  408efa:	test   BYTE PTR [edx-0x5671aa0b],bh
  408f00:	daa    
  408f01:	call   0xb7ce3d85
  408f06:	xor    cl,cl
  408f08:	dec    esi
  408f09:	sar    BYTE PTR [ecx],cl
  408f0b:	ds in  al,dx
  408f0d:	push   0x66071fe9
  408f12:	test   eax,0x2518464a
  408f17:	sub    DWORD PTR [ecx+0x32],ebp
  408f1a:	lds    esp,FWORD PTR cs:[ebp-0x308e96db]
  408f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f22:	fsub   DWORD PTR [esi+0xc]
  408f25:	mov    esp,DWORD PTR [esi]
  408f27:	push   edi
  408f28:	loope  0x408f1c
  408f2a:	xchg   BYTE PTR [ecx+edx*1],dl
  408f2d:	sub    bh,ah
  408f2f:	mov    bl,cl
  408f31:	std    
  408f32:	jecxz  0x408f7a
  408f34:	lds    ecx,FWORD PTR [eax+0x12]
  408f37:	pop    esp
  408f38:	sahf   
  408f39:	jmp    0x408f1f
  408f3b:	inc    eax
  408f3c:	xchg   DWORD PTR [edi],edx
  408f3e:	js     0x408f64
  408f40:	xor    eax,0x6a718c7
  408f45:	or     al,0x8a
  408f47:	push   cs
  408f48:	lock sahf 
  408f4a:	test   dl,dh
  408f4c:	shl    DWORD PTR [ebx+0x28],1
  408f4f:	dec    edi
  408f50:	fidiv  DWORD PTR [edx+edi*1]
  408f53:	adc    ebx,esp
  408f55:	(bad)
  408f58:	(bad)  
  408f59:	sbb    eax,0x11261f5a
  408f5e:	dec    esi
  408f5f:	sti    
  408f60:	xor    BYTE PTR [edi-0x44],al
  408f63:	jnp    0x408efd
  408f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f66:	jnp    0x408fa8
  408f68:	pop    ecx
  408f69:	jmp    0x408ef9
  408f6b:	mov    edi,0x69e2cccf
  408f70:	cmp    eax,0xdb5e740
  408f75:	add    cl,ah
  408f77:	push   esi
  408f78:	cmp    al,0xbf
  408f7a:	push   ds
  408f7b:	xlat   BYTE PTR ds:[ebx]
  408f7c:	cs jo  0x408fa6
  408f7f:	xchg   ecx,eax
  408f80:	mov    edi,es
  408f82:	xor    al,0x17
  408f84:	out    dx,al
  408f85:	retf   0x469f
  408f88:	jb     0x408f39
  408f8a:	jnp    0x408fad
  408f8c:	mov    eax,0x44df1f7d
  408f91:	xlat   BYTE PTR ds:[ebx]
  408f92:	mov    ds:0xe4190eaf,eax
  408f97:	pop    edi
  408f98:	pop    esi
  408f99:	popa   
  408f9a:	mov    dl,0x11
  408f9c:	pushf  
  408f9d:	sbb    BYTE PTR [esi+ecx*1-0x42da1801],dh
  408fa4:	inc    esi
  408fa5:	cld    
  408fa6:	test   BYTE PTR [esi-0x5d],ch
  408fa9:	retf   
  408faa:	or     al,0x73
  408fac:	lods   eax,DWORD PTR ds:[esi]
  408fad:	out    0x23,al
  408faf:	rol    BYTE PTR [ecx-0x3a436e9a],0xaf
  408fb6:	stos   DWORD PTR es:[edi],eax
  408fb7:	arpl   bp,dx
  408fb9:	mov    cl,al
  408fbb:	mov    eax,ds:0x989fd290
  408fc0:	les    ebp,FWORD PTR [esi-0x24]
  408fc3:	popf   
  408fc4:	inc    edx
  408fc5:	adc    BYTE PTR [ecx+ebp*2-0x5e],0x16
  408fca:	adc    DWORD PTR [edx-0x16],0x5b71a5f0
  408fd1:	imul   eax,DWORD PTR [ebx+0x16],0x4f43fbb1
  408fd8:	(bad)  
  408fd9:	(bad)  
  408fda:	popf   
  408fdb:	lock mov ecx,0x4d6f346f
  408fe1:	sbb    dl,0x29
  408fe4:	mov    ch,0x23
  408fe6:	les    esi,FWORD PTR [ecx+ebx*8]
  408fe9:	xlat   BYTE PTR ds:[ebx]
  408fea:	mov    al,0x6f
  408fec:	xchg   esp,eax
  408fed:	xor    bl,cl
  408fef:	add    BYTE PTR [edx],0x34
  408ff2:	repnz nop
  408ff4:	aas    
  408ff5:	sbb    ebx,DWORD PTR [ecx+0x16]
  408ff8:	xchg   edi,edi
  408ffa:	(bad)  
  408ffb:	and    BYTE PTR [esi+0x5c4b1b22],dh
  409001:	sbb    eax,0x57e8228c
  409006:	(bad)  
  409007:	and    DWORD PTR [ebp-0x62],ecx
  40900a:	shl    DWORD PTR [ebx-0x47],cl
  40900d:	ins    DWORD PTR es:[edi],dx
  40900e:	(bad)  
  409010:	dec    ecx
  409011:	cwde   
  409012:	jo     0x40908f
  409014:	mov    ebx,0xb9ef1661
  409019:	out    0x9a,al
  40901b:	imul   ecx,DWORD PTR [ecx+0x25842010],0xc4752763
  409025:	hlt    
  409026:	mov    BYTE PTR [edi],bl
  409028:	scas   eax,DWORD PTR es:[edi]
  409029:	lahf   
  40902a:	fcomip st,st(1)
  40902c:	clc    
  40902d:	sbb    ah,BYTE PTR [eax+ecx*1-0x19be7f]
  409034:	stc    
  409035:	push   esp
  409036:	dec    DWORD PTR [eax-0x4dd15a6c]
  40903c:	push   ss
  40903d:	out    0x75,al
  40903f:	sub    ecx,DWORD PTR [ecx]
  409041:	out    0xe1,al
  409043:	test   eax,0x5974180e
  409048:	lods   eax,DWORD PTR ds:[esi]
  409049:	js     0x408fe1
  40904b:	mov    eax,ds:0x6935fffe
  409050:	int3   
  409051:	mov    esi,0x412e4b63
  409056:	ins    BYTE PTR es:[edi],dx
  409057:	xor    edi,DWORD PTR [edx]
  409059:	outs   dx,DWORD PTR ds:[esi]
  40905a:	inc    esi
  40905b:	push   edx
  40905c:	dec    edi
  40905d:	mov    esp,0x4fe53c85
  409062:	push   ds
  409063:	mov    al,0x2b
  409065:	jbe    0x4090cf
  409067:	mov    BYTE PTR [esi+0x1f],dl
  40906a:	adc    dl,0x5b
  40906d:	test   BYTE PTR [edx+ebp*2],0x8f
  409071:	daa    
  409072:	push   edi
  409073:	xchg   BYTE PTR [esi],al
  409075:	push   cs
  409076:	xor    DWORD PTR [edi-0x40],esi
  409079:	cmp    al,0x36
  40907b:	rcr    DWORD PTR [eax+0x78],cl
  40907e:	int    0x27
  409080:	mov    bh,0x2b
  409082:	sahf   
  409083:	add    al,0x91
  409085:	jge    0x4090df
  409087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409088:	jne    0x40904a
  40908a:	fbstp  TBYTE PTR [edx-0x2e6dab91]
  409090:	xlat   BYTE PTR ds:[ebx]
  409092:	out    0x6b,al
  409094:	jmp    DWORD PTR [ebp-0x29a933ba]
  40909a:	cwde   
  40909b:	cwde   
  40909c:	xor    bl,BYTE PTR [ebp-0x2cf30ef8]
  4090a2:	psrlq  mm5,QWORD PTR [esp+eiz*2]
  4090a6:	mov    edi,0x38bc0dc
  4090ab:	(bad)  
  4090ac:	fild   QWORD PTR [ecx+0x68]
  4090af:	dec    ebx
  4090b0:	ins    DWORD PTR es:[edi],dx
  4090b1:	loop   0x40905d
  4090b3:	mov    al,0xcd
  4090b5:	push   cs
  4090b6:	dec    esp
  4090b7:	push   0x827a2439
  4090bc:	inc    ebp
  4090bd:	test   eax,0x3ba2cbdf
  4090c2:	or     DWORD PTR [esi+0x4ab4bc8c],ecx
  4090c8:	fs js  0x409060
  4090cb:	pop    ebx
  4090cc:	add    BYTE PTR [edi],ch
  4090ce:	push   ss
  4090cf:	jo     0x40905a
  4090d1:	ds call 0x2157:0x3d121b89
  4090d9:	and    DWORD PTR [eax],ebp
  4090db:	pop    esp
  4090dc:	repz xchg edx,eax
  4090de:	mov    bl,BYTE PTR [esi-0x45d85520]
  4090e4:	ds out 0x56,eax
  4090e7:	and    BYTE PTR [esi-0xa],al
  4090ea:	inc    edi
  4090eb:	fidivr DWORD PTR [ebp-0x66]
  4090ee:	arpl   WORD PTR [ebp+0x496ead27],si
  4090f4:	push   0xf71e0308
  4090f9:	mov    esp,0xc0e4219d
  4090fe:	std    
  4090ff:	mov    al,ds:0xeb73a0e5
  409104:	pop    ss
  409105:	and    al,0x53
  409107:	pop    edi
  409108:	and    al,0x69
  40910a:	dec    eax
  40910b:	sub    eax,0x3ccd2e4f
  409110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409111:	mov    ecx,0xab01e58e
  409116:	pop    edx
  409117:	inc    edi
  409118:	pop    ecx
  409119:	mov    ebx,0xbba22214
  40911e:	test   BYTE PTR [edx-0x11430fde],ch
  409124:	cmp    DWORD PTR [esi-0x384a10ee],ecx
  40912a:	int3   
  40912b:	and    al,0x10
  40912d:	js     0x40912b
  40912f:	push   0x6e
  409131:	icebp  
  409132:	int3   
  409133:	jmp    0x409178
  409135:	jge    0x409165
  409137:	popf   
  409138:	pop    ds
  409139:	rol    BYTE PTR [eax],1
  40913b:	cmp    eax,DWORD PTR [eax]
  40913d:	sbb    DWORD PTR cs:[esi+ebx*8+0x13],ebx
  409142:	cwde   
  409143:	jne    0x40914e
  409145:	fnstsw WORD PTR [ebx+0x1eef9fa4]
  40914b:	push   edi
  40914c:	ds xchg edx,eax
  40914e:	sbb    DWORD PTR [ecx-0x725382e9],edi
  409154:	dec    eax
  409155:	sbb    ah,cl
  409157:	frstor [ecx-0x6e7899a1]
  40915d:	mov    edi,0x541c3640
  409162:	xchg   esp,eax
  409163:	frstor [ebx]
  409165:	dec    edx
  409166:	push   edx
  409167:	jbe    0x40914d
  409169:	pop    ebp
  40916a:	or     BYTE PTR [esi+0x26],0x4d
  40916e:	sub    BYTE PTR [eax+esi*8+0x771287a9],bh
  409175:	adc    BYTE PTR [ecx+eiz*4+0x39],dl
  409179:	pusha  
  40917a:	mov    esp,0xc68d39d0
  40917f:	xlat   BYTE PTR ds:[ebx]
  409180:	pop    edx
  409181:	jle    0x409106
  409183:	dec    ebx
  409184:	add    bl,bh
  409186:	and    al,al
  409188:	dec    esi
  409189:	hlt    
  40918a:	fwait
  40918b:	sub    bh,BYTE PTR [edi]
  40918d:	add    eax,0x3c72ef83
  409192:	scas   eax,DWORD PTR es:[edi]
  409193:	out    0xe3,eax
  409195:	and    al,0x68
  409197:	fwait
  409198:	jno    0x409179
  40919a:	inc    esi
  40919b:	repnz xor dl,bh
  40919e:	mov    eax,ds:0x6196e976
  4091a3:	lods   al,BYTE PTR ds:[esi]
  4091a4:	mov    eax,0x2f9a1664
  4091a9:	xor    bl,dh
  4091ab:	xchg   edx,eax
  4091ac:	xor    eax,DWORD PTR [ebx-0x40]
  4091af:	inc    edi
  4091b0:	sbb    eax,0x5d4cc9da
  4091b5:	addr16 sub al,0xa3
  4091b8:	outs   dx,BYTE PTR ds:[esi]
  4091b9:	xchg   ecx,eax
  4091ba:	sub    BYTE PTR [edi+0x6a3079d1],cl
  4091c0:	mov    ebp,0x3dd0148a
  4091c5:	pop    esi
  4091c6:	xlat   BYTE PTR ds:[ebx]
  4091c7:	sub    al,0x38
  4091c9:	mov    bh,0xda
  4091cb:	xchg   esi,eax
  4091cc:	push   ecx
  4091cd:	ja     0x40921e
  4091cf:	test   eax,0x844ea01
  4091d4:	push   edi
  4091d5:	pop    esi
  4091d6:	fadd   QWORD PTR [esi]
  4091d8:	fcomp  QWORD PTR [ecx+0x4fe8651b]
  4091de:	add    esi,DWORD PTR [eax-0x4d1720a6]
  4091e4:	je     0x4091a0
  4091e6:	or     bl,BYTE PTR gs:[esi+0x31]
  4091ea:	sub    ch,BYTE PTR [ebx+0x17]
  4091ed:	test   dl,cl
  4091ef:	ss mov dl,0x62
  4091f2:	cmp    al,0xde
  4091f4:	cs dec edx
  4091f6:	retf   
  4091f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f8:	(bad)  
  4091f9:	or     edx,DWORD PTR [edx+ebx*8+0x3fc2a07b]
  409200:	shl    DWORD PTR [ebx],1
  409202:	sub    DWORD PTR [ebp-0x5e7d8a91],esp
  409208:	test   eax,0xa219f9e1
  40920d:	fistp  QWORD PTR [ecx+0x4a]
  409210:	mov    esi,0x301139cb
  409215:	int    0x7b
  409217:	out    dx,al
  409218:	ror    BYTE PTR es:[edx+eiz*4-0x107fc791],1
  409220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409221:	sub    ebp,DWORD PTR [edx]
  409223:	push   ss
  409224:	fwait
  409225:	retf   
  409226:	xor    eax,0x53f99336
  40922b:	mov    al,ds:0xd41ab86b
  409230:	scas   al,BYTE PTR es:[edi]
  409231:	int3   
  409232:	mov    ch,0xeb
  409234:	jecxz  0x40925c
  409236:	lds    esi,FWORD PTR [esi+0x52]
  409239:	sbb    al,0xa1
  40923b:	cmp    DWORD PTR [eax+0x6d],esi
  40923e:	jmp    0x193:0x1a67908b
  409245:	adc    BYTE PTR [esi-0xd],dl
  409248:	dec    edx
  409249:	adc    BYTE PTR [edx+0x68a81c4e],ah
  40924f:	jle    0x409267
  409251:	aaa    
  409252:	xchg   edx,eax
  409253:	test   al,0xcd
  409255:	dec    esp
  409256:	dec    eax
  409257:	add    al,0xf4
  409259:	mov    ch,0xa7
  40925b:	adc    dh,BYTE PTR [edi+0x5e]
  40925e:	gs pop es
  409260:	push   esp
  409261:	jg     0x409222
  409263:	aaa    
  409264:	add    al,0x1f
  409266:	icebp  
  409267:	dec    ecx
  409268:	adc    eax,DWORD PTR [ecx+edi*4+0x20a13017]
  40926f:	or     BYTE PTR [ebp+0x61],ah
  409272:	xchg   ebp,eax
  409273:	enter  0xa6e,0x15
  409277:	repnz dec esi
  409279:	push   edi
  40927a:	jne    0x4092cc
  40927c:	inc    ebp
  40927d:	dec    ebx
  40927e:	shl    DWORD PTR ds:0x88fafc76,0x65
  409285:	or     ah,dl
  409287:	xor    ecx,DWORD PTR [edx]
  409289:	call   0xf80db243
  40928e:	fwait
  40928f:	in     eax,0xaf
  409291:	aam    0x3
  409293:	jecxz  0x40928f
  409295:	mov    ah,0x2e
  409297:	jmp    0x36c1:0x85e75164
  40929e:	mov    esi,es
  4092a0:	les    ebx,FWORD PTR es:[edx+0x6e]
  4092a4:	mov    ebx,0xd4337095
  4092a9:	adc    edi,DWORD PTR [ebx]
  4092ab:	push   ecx
  4092ac:	pop    ss
  4092ad:	push   eax
  4092ae:	adc    eax,0xd54cd4f3
  4092b3:	sbb    al,0xc9
  4092b5:	jp     0x40928c
  4092b7:	adc    BYTE PTR [edx],ch
  4092b9:	stos   BYTE PTR es:[edi],al
  4092ba:	sbb    dl,BYTE PTR [ebx]
  4092bc:	ror    cl,cl
  4092be:	pop    eax
  4092bf:	rcl    BYTE PTR [edi+0x58],1
  4092c2:	daa    
  4092c3:	js     0x4092ed
  4092c5:	sub    BYTE PTR [esi-0x61],dh
  4092c8:	mov    WORD PTR [edx+0x17],fs
  4092cb:	inc    esi
  4092cc:	lea    ecx,[ebp-0x798c5d84]
  4092d2:	not    BYTE PTR [edi-0x50]
  4092d5:	out    dx,al
  4092d6:	xchg   ecx,eax
  4092d7:	(bad)  
  4092d8:	sbb    BYTE PTR [ecx+esi*8+0x4ae25e53],al
  4092df:	jg     0x409283
  4092e1:	(bad)  
  4092e2:	inc    esp
  4092e3:	inc    eax
  4092e4:	add    DWORD PTR [edi-0x4d],0x4f
  4092e8:	fimul  WORD PTR [edi-0x15029db0]
  4092ee:	rcr    DWORD PTR [esi-0x3fca6afc],1
  4092f4:	pop    edi
  4092f5:	push   eax
  4092f6:	sub    edi,DWORD PTR [edi+0x4cf5849]
  4092fc:	stc    
  4092fd:	test   BYTE PTR [eax+0x744c1962],ch
  409303:	push   ebx
  409304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409305:	call   0x70489de9
  40930a:	cld    
  40930b:	mov    ah,0x65
  40930d:	(bad)  
  40930e:	out    0x8b,al
  409310:	loopne 0x4092b7
  409312:	test   DWORD PTR [ecx+0x15],esp
  409315:	(bad)  
  409316:	pop    eax
  409317:	ror    BYTE PTR [ebx],0xa2
  40931a:	push   es
  40931b:	cli    
  40931c:	and    ebx,ecx
  40931e:	push   cs
  40931f:	pop    edx
  409320:	dec    edi
  409321:	mov    al,0x91
  409323:	xchg   esp,eax
  409324:	sbb    eax,0x898fa049
  409329:	dec    ecx
  40932a:	nop
  40932b:	je     0x4092da
  40932d:	sbb    al,0x7b
  40932f:	or     edi,ecx
  409331:	push   ds
  409332:	outs   dx,BYTE PTR ds:[esi]
  409333:	xor    BYTE PTR [esi+0x7fc96cf0],0x56
  40933a:	imul   edx,ebx,0xffffffd7
  40933d:	idiv   BYTE PTR [eax-0x43]
  409340:	(bad)  
  409341:	sahf   
  409342:	adc    edx,edx
  409344:	push   ss
  409345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409346:	jmp    0xa57bfb17
  40934b:	pop    ebp
  40934c:	cs mov esi,0xe8bccd72
  409352:	fisttp WORD PTR [ecx-0x482144bc]
  409358:	push   edi
  409359:	shl    BYTE PTR [ebp-0x42],1
  40935c:	add    al,0x30
  40935e:	jne    0x40936f
  409360:	lock jg 0x40939e
  409363:	pop    ebp
  409364:	test   DWORD PTR [esi+0x78],edi
  409367:	pop    ss
  409368:	mov    dh,0x67
  40936a:	retf   
  40936b:	mov    dh,0x11
  40936d:	sub    al,0xb8
  40936f:	sbb    BYTE PTR [edx],dh
  409371:	pop    ecx
  409372:	xchg   eax,eax
  409374:	push   esp
  409375:	mov    al,ds:0xe569a418
  40937a:	or     DWORD PTR [edx+0x7],0xf7ee92b5
  409381:	dec    edx
  409382:	(bad)  
  409384:	xchg   edx,eax
  409385:	cmp    ax,0x23cb
  409389:	add    esi,esp
  40938b:	aam    0x4
  40938d:	(bad)  [edi-0x412d051f]
  409393:	jae    0x4093d0
  409395:	outs   dx,DWORD PTR ds:[esi]
  409396:	call   FWORD PTR [ebx-0x48b4bf24]
  40939c:	icebp  
  40939d:	sbb    BYTE PTR [esi-0x55],dh
  4093a0:	inc    ebp
  4093a1:	retf   
  4093a2:	push   0x52
  4093a4:	sahf   
  4093a5:	fist   WORD PTR [esi-0x19]
  4093a8:	pop    eax
  4093a9:	add    al,0x2e
  4093ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ac:	and    ah,bl
  4093ae:	xchg   esp,eax
  4093af:	mov    ebx,0xfeb12459
  4093b4:	out    0x56,al
  4093b6:	data16 jnp 0x409375
  4093b9:	in     al,dx
  4093ba:	stos   BYTE PTR es:[edi],al
  4093bb:	pop    eax
  4093bc:	fmul   st,st(6)
  4093be:	pop    ds
  4093bf:	push   esp
  4093c0:	retf   
  4093c1:	mov    bl,0x8b
  4093c3:	jb     0x409354
  4093c5:	mov    eax,0xe1b0efdd
  4093ca:	jmp    0x40943a
  4093cc:	xchg   esi,eax
  4093cd:	jecxz  0x4093c3
  4093cf:	mov    esp,0x70aaa2de
  4093d4:	imul   esi,esp,0x1c
  4093d7:	push   0xe059572c
  4093dc:	test   al,0x7f
  4093de:	or     al,0xc5
  4093e0:	push   0x71
  4093e2:	mov    cl,0x61
  4093e4:	fcomp  st(6)
  4093e6:	or     BYTE PTR [ebp+0x4a43a76d],al
  4093ec:	mov    dl,0x42
  4093ee:	mov    esi,0x4a0880f3
  4093f3:	xchg   ebx,eax
  4093f4:	or     al,0xef
  4093f6:	leave  
  4093f7:	mov    dh,0x1c
  4093f9:	rol    BYTE PTR [edx-0x17],0x36
  4093fd:	mov    dh,0x79
  4093ff:	cmp    ecx,DWORD PTR [eax-0x452bbfda]
  409405:	mov    dl,0x63
  409407:	(bad)  
  409408:	mov    ecx,0x139e6b95
  40940d:	push   eax
  40940e:	sub    al,0xbf
  409410:	dec    ebx
  409411:	push   esp
  409412:	retf   
  409413:	test   BYTE PTR [ecx-0x5f06ad84],bh
  409419:	mov    al,0xbc
  40941b:	dec    ebp
  40941c:	xchg   esi,eax
  40941d:	xor    BYTE PTR [ecx+esi*4-0x172f7149],ch
  409424:	and    al,0x37
  409426:	imul   ebp,DWORD PTR [ecx],0x3df3e6f9
  40942c:	sbb    esp,DWORD PTR [ebp+ebp*1-0x50]
  409430:	lahf   
  409431:	arpl   WORD PTR [ecx+ebx*2-0x6c7e5262],cx
  409438:	sbb    al,0xcf
  40943a:	pusha  
  40943b:	enter  0x8594,0x6e
  40943f:	ret    0x5957
  409442:	adc    DWORD PTR [ebx+ebp*1-0x8dc359d],0xffffffa5
  40944a:	mov    edx,0x61f4d8c2
  40944f:	sub    ecx,esi
  409451:	push   ebx
  409452:	jle    0x40944a
  409454:	clc    
  409455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409456:	xchg   BYTE PTR ds:0x1c100b25,bl
  40945c:	dec    eax
  40945d:	in     al,dx
  40945e:	cmp    eax,0x10c5e36c
  409463:	and    al,0x4
  409465:	dec    edi
  409466:	out    0xb5,eax
  409468:	ret    0xddf9
  40946b:	fild   QWORD PTR [esi-0x80]
  40946e:	cwde   
  40946f:	test   al,0xeb
  409471:	or     ebx,DWORD PTR [edx-0x28]
  409474:	test   al,0xd
  409476:	pop    ebp
  409477:	push   ebx
  409478:	push   ecx
  409479:	(bad)  
  40947a:	call   0xbdabc0c5
  40947f:	dec    edx
  409480:	inc    eax
  409481:	fist   WORD PTR [eax-0x57]
  409484:	push   ds
  409485:	fmul   DWORD PTR [ebx+0x18]
  409488:	daa    
  409489:	sbb    al,bh
  40948b:	test   DWORD PTR [esi-0x66],ebp
  40948e:	inc    ecx
  40948f:	shl    DWORD PTR [esi+ebp*4-0x2c],1
  409493:	aaa    
  409494:	inc    ebp
  409495:	xor    al,BYTE PTR [ebx+0x2761297]
  40949b:	xchg   edi,eax
  40949c:	sub    DWORD PTR gs:[eax+0x28],ebx
  4094a0:	jle    0x4094f3
  4094a2:	or     ah,BYTE PTR gs:[edi]
  4094a5:	imul   BYTE PTR [eax+0x11]
  4094a8:	mov    bh,0x4d
  4094aa:	aaa    
  4094ab:	lock sbb dl,bh
  4094ae:	sub    al,0x9f
  4094b0:	inc    esp
  4094b1:	push   ecx
  4094b2:	push   0x96668fda
  4094b7:	mov    eax,ds:0x7c829d68
  4094bc:	lods   al,BYTE PTR ds:[esi]
  4094bd:	push   edi
  4094be:	ret    
  4094bf:	aas    
  4094c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c1:	sbb    DWORD PTR [ecx-0x6d],ebx
  4094c4:	int3   
  4094c5:	inc    edx
  4094c6:	in     eax,0x82
  4094c8:	sbb    ebp,DWORD PTR [ebx]
  4094ca:	dec    esp
  4094cb:	jl     0x409545
  4094cd:	xor    BYTE PTR [ecx+0x4f],0xe
  4094d1:	fnsave ds:0x7304c8cc
  4094d7:	out    dx,al
  4094d8:	sbb    DWORD PTR cs:[edx],edi
  4094db:	std    
  4094dc:	sbb    edi,DWORD PTR [ecx]
  4094de:	cmp    ecx,DWORD PTR [ebx-0x7b]
  4094e1:	push   es
  4094e2:	ja     0x409537
  4094e4:	mov    ds:0x2c98bf0b,eax
  4094e9:	test   DWORD PTR [ebx-0x40],ebx
  4094ec:	or     BYTE PTR [ebx+0x65839ab5],bl
  4094f2:	xchg   ebx,eax
  4094f3:	xor    DWORD PTR [ebp-0x2b],0xace9d76b
  4094fa:	int3   
  4094fb:	dec    esi
  4094fc:	mov    DWORD PTR [edi],eax
  4094fe:	jns    0x409513
  409500:	lods   al,BYTE PTR ds:[esi]
  409502:	repz scas eax,DWORD PTR es:[edi]
  409504:	or     eax,0xb3ea9283
  409509:	lods   eax,DWORD PTR ds:[esi]
  40950a:	xor    BYTE PTR [eax],al
  40950c:	aaa    
  40950d:	xor    al,0xee
  40950f:	int3   
  409510:	pop    esp
  409511:	jl     0x409518
  409513:	sbb    edi,ebp
  409515:	mov    ds:0xe68cdcd6,al
  40951a:	jmp    0x40951b
  40951c:	sub    al,0x3d
  40951e:	dec    edx
  40951f:	cmp    bl,BYTE PTR [edx+0x1d]
  409522:	fld    st(0)
  409524:	fcomp  QWORD PTR [esi-0x2c]
  409527:	retf   
  409528:	fnstenv [edx+0x41d67fc3]
  40952e:	in     al,dx
  40952f:	dec    eax
  409530:	test   DWORD PTR [esi+0x31e9cd32],edx
  409536:	push   esi
  409537:	loopne 0x4095a2
  409539:	test   al,0x75
  40953b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40953c:	push   ebp
  40953d:	pop    esi
  40953e:	mov    esp,0x44541c5b
  409543:	mov    ecx,0x8e24469
  409548:	(bad)  
  409549:	sar    DWORD PTR [eax-0x608486e3],0x5e
  409550:	out    0xd7,eax
  409552:	out    0xcc,eax
  409554:	inc    eax
  409555:	and    BYTE PTR [edi-0x42e24b0f],dl
  40955b:	mov    ecx,0xc86e9978
  409560:	dec    esp
  409561:	(bad)  
  409562:	push   ecx
  409563:	cmp    esp,DWORD PTR [eax+0x680a20b7]
  409569:	or     ecx,DWORD PTR [esi+0x75]
  40956c:	dec    ebx
  40956d:	xchg   edx,eax
  40956e:	(bad)
  409572:	(bad)  
  409573:	jmp    0x40956a
  409575:	push   es
  409576:	jecxz  0x409545
  409578:	mov    ds:0xbf136c57,al
  40957d:	aas    
  40957e:	les    eax,FWORD PTR [ebx]
  409580:	mov    WORD PTR [edx+0x2ae19f7d],ds
  409586:	nop
  409587:	rol    bl,1
  409589:	les    ecx,FWORD PTR [ecx]
  40958b:	mov    ah,0x7f
  40958d:	adc    BYTE PTR [ebp-0x3c],bl
  409590:	and    BYTE PTR [ecx],dh
  409592:	push   eax
  409593:	push   esp
  409594:	outs   dx,DWORD PTR ds:[esi]
  409595:	das    
  409596:	xor    dh,BYTE PTR [eax+0x24]
  409599:	xor    BYTE PTR [esi+ebx*4+0x7162ba3d],cl
  4095a0:	pop    ebp
  4095a1:	add    dh,BYTE PTR [edx+ebp*2-0x4]
  4095a5:	push   esi
  4095a6:	push   cs
  4095a7:	mov    dl,0x96
  4095a9:	out    dx,eax
  4095aa:	iret   
  4095ab:	xchg   ebp,eax
  4095ac:	dec    esp
  4095ad:	scas   eax,DWORD PTR es:[edi]
  4095ae:	xchg   ebp,eax
  4095af:	mov    esi,0x4f6619ed
  4095b4:	je     0x409607
  4095b6:	sti    
  4095b7:	push   eax
  4095b8:	pop    edx
  4095b9:	add    al,0x85
  4095bb:	inc    eax
  4095bc:	enter  0x4244,0xd0
  4095c0:	dec    edx
  4095c1:	or     eax,0x1f8ae24e
  4095c6:	nop
  4095c7:	rol    DWORD PTR [bp-0x78],cl
  4095cb:	fcom   st(6)
  4095cd:	dec    ecx
  4095ce:	and    BYTE PTR [ecx],bl
  4095d0:	leave  
  4095d1:	clc    
  4095d2:	sahf   
  4095d3:	(bad)  
  4095d4:	xor    eax,0xc211d6d6
  4095d9:	not    al
  4095db:	mov    DWORD PTR [ecx+0x1efd09e1],ecx
  4095e1:	cmp    edi,DWORD PTR [edi-0x25]
  4095e4:	jmp    0x409595
  4095e6:	and    edx,DWORD PTR ds:0xb2694d7a
  4095ec:	adc    eax,0x2b77d785
  4095f1:	in     eax,dx
  4095f2:	rcl    BYTE PTR [ebp-0x12],0xfe
  4095f6:	sub    DWORD PTR ss:[ecx+0x68],esi
  4095fa:	mov    ebx,0x968e9cfe
  4095ff:	imul   di,WORD PTR [ebx],0xf78e
  409604:	xbegin 0xa69726cb
  40960a:	test   al,0xa1
  40960c:	or     ecx,DWORD PTR [edi]
  40960e:	shl    BYTE PTR [esi-0x57d6b3c4],cl
  409614:	jne    0x409619
  409616:	(bad)  
  409617:	icebp  
  409618:	and    eax,0x6c7a4024
  40961d:	cmp    DWORD PTR ds:0xeb92866e,edi
  409623:	pop    ebp
  409624:	cmc    
  409625:	add    esi,eax
  409627:	mov    edi,0xa4c01d5f
  40962c:	xor    eax,0x8dffa74b
  409631:	cmp    esi,esi
  409633:	cli    
  409634:	outs   dx,DWORD PTR ds:[esi]
  409635:	jo     0x409644
  409637:	pusha  
  409638:	and    BYTE PTR [ebx+0x6f],ah
  40963b:	dec    edi
  40963c:	sub    BYTE PTR [ebx-0x7e31b1a3],al
  409642:	mov    ds:0xaf3dbad6,eax
  409647:	add    eax,0x11d47a87
  40964c:	nop
  40964d:	(bad)  [ebx-0x16c8baad]
  409653:	pop    eax
  409654:	aam    0x9
  409656:	inc    edx
  409657:	pop    edi
  409658:	jnp    0x4096b6
  40965a:	mov    ecx,0xa44933c7
  40965f:	cmp    edi,DWORD PTR [ebx-0x74b7fea]
  409665:	stc    
  409666:	nop
  409667:	pop    ebx
  409668:	mov    ebx,0x71e537a8
  40966d:	add    eax,0xfb607d0a
  409672:	xchg   esp,eax
  409673:	(bad)  
  409674:	mov    edi,0x9ecaf27e
  409679:	loopne 0x40967f
  40967b:	mov    DWORD PTR [ecx],eax
  40967d:	(bad)
  409680:	mov    al,0x98
  409682:	sbb    DWORD PTR [edi-0x5f],esp
  409685:	cli    
  409686:	jbe    0x409615
  409688:	add    eax,0x8c4292db
  40968d:	ss iret 
  40968f:	mov    bh,0xf9
  409691:	push   0xb5947d75
  409696:	les    ebp,FWORD PTR [ebp-0x60]
  409699:	stos   DWORD PTR es:[edi],eax
  40969a:	jl     0x4096f7
  40969c:	inc    ebx
  40969d:	dec    edi
  40969e:	mov    BYTE PTR [edx-0x11],dl
  4096a1:	sub    al,0x8c
  4096a3:	inc    esi
  4096a4:	out    0x22,al
  4096a6:	arpl   WORD PTR [edi],sp
  4096a8:	or     eax,0x96fe54dd
  4096ad:	(bad)  
  4096ae:	pop    edi
  4096af:	adc    eax,0xa511817a
  4096b4:	data16 cli 
  4096b6:	loope  0x40972a
  4096b8:	push   ss
  4096b9:	jnp    0x409738
  4096bb:	xchg   ebx,eax
  4096bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096bd:	ins    WORD PTR es:[edi],dx
  4096bf:	scas   eax,DWORD PTR es:[edi]
  4096c0:	imul   esi,DWORD PTR ds:0xc5cf6a83,0x7f530f08
  4096ca:	mov    cl,0x70
  4096cc:	fnsave [esi+0xa]
  4096cf:	mov    dh,0xf0
  4096d1:	mov    al,0x5e
  4096d3:	addr16 in al,dx
  4096d5:	std    
  4096d6:	cmp    ebx,eax
  4096d8:	and    eax,0x31cccca7
  4096dd:	clc    
  4096de:	push   es
  4096df:	push   ecx
  4096e0:	inc    ebp
  4096e1:	add    DWORD PTR [edx],0x20
  4096e4:	out    dx,al
  4096e5:	dec    eax
  4096e6:	cmp    esi,DWORD PTR [ebx+esi*8-0x2c]
  4096ea:	xor    al,0xbd
  4096ec:	jmp    0xb0d3:0x2ac28d4e
  4096f3:	mov    ecx,0x3c821bdf
  4096f8:	push   esp
  4096f9:	sub    DWORD PTR fs:[edi],ebx
  4096fc:	xor    eax,DWORD PTR [eax]
  4096fe:	mov    ecx,0x60caf080
  409703:	scas   eax,DWORD PTR es:[edi]
  409704:	jp     0x4096a9
  409706:	mov    ds:0x3a3d2b4d,al
  40970b:	mov    bl,0xce
  40970d:	or     edi,DWORD PTR [edi]
  40970f:	jecxz  0x409732
  409711:	add    eax,0xda676f1d
  409716:	fucomi st,st(7)
  409718:	jno    0x4096d8
  40971a:	sti    
  40971b:	xor    al,dl
  40971d:	sbb    DWORD PTR [edx+0x2f],0x5681711
  409724:	xchg   ebx,eax
  409725:	retf   0x3e9b
  409728:	push   ecx
  409729:	clc    
  40972a:	mov    al,ds:0xaa6ba692
  40972f:	and    DWORD PTR [edx-0x22],edi
  409732:	and    al,0x34
  409734:	push   edx
  409735:	scas   eax,DWORD PTR es:[edi]
  409736:	mov    ebx,0xa9d3bf93
  40973b:	test   BYTE PTR [eax],0xcf
  40973e:	inc    edx
  40973f:	jecxz  0x409786
  409741:	retf   0xf563
  409744:	and    eax,0x142a5ae1
  409749:	and    ebx,DWORD PTR [ecx-0x5b741cd3]
  40974f:	and    DWORD PTR [esi+0x55ae5b26],ebp
  409755:	xor    eax,DWORD PTR [edx-0x79c38ae6]
  40975b:	cmp    al,0xd5
  40975d:	pop    eax
  40975e:	popf   
  40975f:	dec    ebx
  409760:	sub    al,0x39
  409762:	xchg   esp,eax
  409763:	daa    
  409764:	dec    edx
  409765:	inc    edx
  409766:	jmp    0x94a9:0xd341ac67
  40976d:	and    al,0xa9
  40976f:	mov    WORD PTR fs:[edx+eax*4],ds
  409773:	sbb    esi,ecx
  409775:	jg     0x4097b7
  409777:	lods   eax,DWORD PTR ds:[esi]
  409778:	jmp    0x409794
  40977a:	jae    0x409702
  40977c:	pushf  
  40977d:	cwde   
  40977e:	mov    DWORD PTR [edi-0xced395c],esi
  409784:	inc    esi
  409785:	ret    
  409786:	ds pushf 
  409788:	js     0x40970b
  40978a:	sbb    eax,0xe5c40326
  40978f:	pop    esi
  409790:	aaa    
  409791:	mov    bh,0xc9
  409793:	dec    DWORD PTR [ecx-0x77838e7c]
  409799:	fs fwait
  40979b:	enter  0x1091,0xdb
  40979f:	mov    dl,0x1e
  4097a1:	scas   al,BYTE PTR es:[edi]
  4097a2:	dec    esi
  4097a3:	xchg   esp,eax
  4097a4:	out    dx,eax
  4097a5:	inc    eax
  4097a6:	push   eax
  4097a7:	div    BYTE PTR [ebx+0x5e]
  4097aa:	cli    
  4097ab:	(bad)  
  4097ac:	xor    al,0x11
  4097ae:	sub    DWORD PTR [esp+esi*4+0x1d87c97e],esi
  4097b5:	fstp   QWORD PTR [ebx-0x46]
  4097b8:	adc    BYTE PTR [eax-0x1f88c5e8],0x16
  4097bf:	sbb    bh,BYTE PTR [ebx+0x602f0c09]
  4097c5:	lods   eax,DWORD PTR ds:[esi]
  4097c6:	(bad)  
  4097c7:	xor    dl,BYTE PTR [edi-0x77]
  4097ca:	int3   
  4097cb:	inc    edx
  4097cc:	cld    
  4097cd:	test   DWORD PTR [esi-0x49cfd0fe],edi
  4097d3:	jle    0x409780
  4097d5:	xor    ebx,eax
  4097d7:	push   cs
  4097d8:	outs   dx,BYTE PTR ds:[esi]
  4097d9:	ins    BYTE PTR es:[edi],dx
  4097da:	cmp    eax,0x99f177d3
  4097df:	or     ebx,ecx
  4097e1:	out    dx,al
  4097e2:	imul   bp,WORD PTR [edx+0x69],0xff9d
  4097e7:	call   0x9dfb:0x1c5ff9e1
  4097ee:	xchg   edi,eax
  4097ef:	in     al,0xac
  4097f1:	and    cl,al
  4097f3:	test   al,0x49
  4097f5:	sbb    bh,BYTE PTR [edi]
  4097f7:	test   dl,bh
  4097f9:	xor    al,0x6c
  4097fb:	mov    esi,0x8e3b3622
  409800:	xor    DWORD PTR [ecx-0xf1974ce],0xffffffda
  409807:	mov    DWORD PTR [edi+0x24],ecx
  40980a:	pop    eax
  40980b:	xchg   edx,eax
  40980c:	mov    cl,0xd0
  40980e:	sub    DWORD PTR [ecx],esi
  409810:	mov    dh,0x59
  409813:	fild   WORD PTR [ebp-0x60]
  409816:	lods   al,BYTE PTR ds:[esi]
  409817:	(bad)  
  409818:	fidiv  WORD PTR [ecx+0x2c97aacc]
  40981e:	ins    BYTE PTR es:[edi],dx
  40981f:	and    eax,0x593b67e6
  409824:	and    al,0x88
  409826:	jo     0x409801
  409828:	mov    eax,ds:0xbb174e91
  40982d:	inc    ebp
  40982e:	aad    0xcb
  409830:	aad    0x12
  409832:	and    eax,0x1102b918
  409837:	(bad)  
  409838:	ja     0x409875
  40983a:	mov    ds:0x83daa069,al
  40983f:	sbb    edx,DWORD PTR [ecx+eiz*2+0x12a6a694]
  409846:	push   0xffffff98
  409848:	stos   BYTE PTR es:[edi],al
  409849:	or     BYTE PTR [ebx],ah
  40984b:	jne    0x409837
  40984d:	sub    edx,DWORD PTR [edi-0x16]
  409850:	sar    DWORD PTR [eax],1
  409852:	cdq    
  409853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409854:	ds jl  0x409807
  409857:	test   BYTE PTR [esi],dh
  409859:	mov    ds:0x239cdfa5,eax
  40985e:	mov    cl,0x7a
  409860:	adc    al,0x6f
  409862:	fs scas al,BYTE PTR es:[edi]
  409864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409865:	pop    eax
  409866:	and    edx,DWORD PTR [eax]
  409868:	in     eax,0x21
  40986a:	out    dx,al
  40986b:	adc    eax,0x2bed4dc7
  409870:	push   ds
  409871:	add    esi,eax
  409873:	(bad)  
  409874:	aas    
  409875:	inc    si
  409877:	not    BYTE PTR [esi]
  409879:	jmp    0x8a0f0f2f
  40987e:	add    eax,0x6e5e89e1
  409883:	dec    esp
  409884:	jp     0x4098bf
  409886:	mov    esp,?
  409888:	je     0x40985d
  40988a:	and    eax,0x2f882048
  40988f:	shl    BYTE PTR [edx-0x44e749b5],0x6a
  409896:	push   esp
  409897:	xchg   esi,eax
  409898:	mov    ds,WORD PTR [edi+0x784f183f]
  40989e:	ins    DWORD PTR es:[edi],dx
  40989f:	push   eax
  4098a0:	fwait
  4098a1:	jnp    0x4098da
  4098a3:	cmc    
  4098a4:	mov    bl,0x42
  4098a7:	ja     0x4098d0
  4098a9:	call   0xc1e7:0x6232d3fb
  4098b0:	sub    DWORD PTR ds:0x7ca1e35a,edx
  4098b6:	cmp    al,0x75
  4098b8:	sbb    BYTE PTR [eax+ebp*2-0x43],bl
  4098bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098bd:	inc    edi
  4098be:	aam    0xd1
  4098c0:	dec    ecx
  4098c1:	cmp    ch,al
  4098c3:	mov    eax,0x719be057
  4098c8:	je     0x409885
  4098ca:	adc    DWORD PTR [edx+0x74874c6d],esi
  4098d0:	and    DWORD PTR [eax+0x23],ebp
  4098d3:	(bad)  
  4098d4:	jecxz  0x409879
  4098d6:	dec    esp
  4098d7:	into   
  4098d8:	(bad)  
  4098d9:	shl    DWORD PTR [eax],cl
  4098db:	pusha  
  4098dc:	mov    ?,WORD PTR [eax]
  4098de:	sub    al,0x80
  4098e0:	jnp    0x409956
  4098e2:	ret    0x783e
  4098e5:	adc    edx,0xd2f4a9cc
  4098eb:	dec    ebx
  4098ec:	imul   ecx,DWORD PTR [edi+0xe],0xde588019
  4098f3:	sub    esi,DWORD PTR [ebx-0x7e3bef2]
  4098f9:	inc    ebx
  4098fa:	hlt    
  4098fb:	pushf  
  4098fc:	mov    al,0x44
  4098fe:	push   0x8fc041f4
  409903:	popa   
  409904:	fnsave [ebx+0x44b24c6]
  40990a:	xlat   BYTE PTR ds:[ebx]
  40990b:	adc    al,0xa5
  40990d:	adc    eax,esp
  40990f:	or     edx,eax
  409911:	jecxz  0x4098cb
  409913:	repnz div BYTE PTR [edx-0x43572427]
  40991a:	pop    ds
  40991b:	addr16 or eax,0x59d5647e
  409921:	sub    ebx,0x4f
  409924:	loope  0x4098c7
  409926:	jbe    0x40997e
  409928:	jns    0x4098d3
  40992a:	mov    ch,0xb9
  40992c:	inc    ecx
  40992d:	(bad)  
  40992e:	out    0xf9,eax
  409930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409931:	and    eax,0x8ca23c08
  409936:	mov    cl,0x3c
  409938:	sub    dh,BYTE PTR [edi+0x61b05a29]
  40993e:	push   0x1faba0a4
  409943:	sar    BYTE PTR [edi-0xf],cl
  409946:	jmp    0xb61e:0xafeabb44
  40994d:	int3   
  40994e:	push   ds
  40994f:	std    
  409950:	test   DWORD PTR [ecx+0x2811f80e],ecx
  409956:	stos   BYTE PTR es:[edi],al
  409957:	ins    BYTE PTR es:[edi],dx
  409958:	cmp    dl,BYTE PTR [esi-0x22]
  40995b:	add    DWORD PTR [ebp+0x3e],0x22440126
  409962:	pop    edx
  409963:	iret   
  409964:	mov    edx,0xd7e4d19b
  409969:	mov    edi,edx
  40996b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996c:	jmp    0x4099e8
  40996e:	jg     0x409978
  409970:	loopne 0x409900
  409972:	(bad)  
  409973:	aam    0x9d
  409975:	sub    ebx,esi
  409977:	pop    esp
  409978:	and    DWORD PTR [esp+edi*1],eax
  40997b:	push   ebx
  40997c:	daa    
  40997d:	int    0x43
  40997f:	fwait
  409980:	(bad)  
  409981:	dec    esi
  409982:	mov    ebx,?
  409984:	shr    DWORD PTR [ecx-0x1baeb1fa],cl
  40998a:	jb     0x409932
  40998c:	sub    esi,DWORD PTR [edi]
  40998e:	call   0x682fc488
  409993:	dec    esi
  409994:	daa    
  409995:	mov    ebx,0x9ec189b0
  40999a:	enter  0xf580,0x6a
  40999e:	shl    DWORD PTR [esi-0x1b],0x48
  4099a2:	ret    0x11df
  4099a5:	xchg   BYTE PTR [edi+0xc50a29],dl
  4099ab:	mov    cl,BYTE PTR [ecx]
  4099ad:	xchg   edi,eax
  4099ae:	repnz sbb al,0x6d
  4099b1:	adc    eax,0xd8ef6335
  4099b6:	imul   esp,DWORD PTR [ecx+eiz*1+0x1fb4989c],0xffffffdc
  4099be:	jmp    0x55a7:0x47b2b2bd
  4099c5:	iret   
  4099c6:	add    al,0x7b
  4099c8:	jns    0x409955
  4099ca:	pushf  
  4099cb:	push   0xde40cff9
  4099d0:	aaa    
  4099d1:	pushf  
  4099d2:	mov    bh,0xf6
  4099d4:	in     al,0xef
  4099d6:	icebp  
  4099d7:	xchg   ecx,eax
  4099d8:	jle    0x409a18
  4099da:	adc    DWORD PTR [ebp+0x6b],eax
  4099dd:	cmp    BYTE PTR [edx+edi*1+0x1d],dh
  4099e1:	stos   DWORD PTR es:[edi],eax
  4099e2:	and    ebp,ebp
  4099e4:	push   esp
  4099e5:	xlat   BYTE PTR ds:[ebx]
  4099e6:	jl     0x409a3d
  4099e8:	cli    
  4099e9:	push   ds
  4099ea:	mov    ah,dl
  4099ec:	mov    DWORD PTR [edi],edx
  4099ee:	push   ds
  4099ef:	dec    esi
  4099f0:	inc    ecx
  4099f1:	mov    ebx,0x94c9eb97
  4099f6:	(bad)  
  4099f7:	stc    
  4099f8:	out    0xbb,al
  4099fa:	(bad)  
  4099fc:	push   eax
  4099fd:	push   edx
  4099fe:	das    
  4099ff:	sbb    edi,edi
  409a01:	inc    ebp
  409a02:	(bad)  
  409a03:	jl     0x409a45
  409a05:	adc    eax,0xe911c624
  409a0a:	xlat   BYTE PTR ds:[ebx]
  409a0b:	mov    ecx,0x8ba3a299
  409a10:	loopne 0x409a52
  409a12:	dec    edx
  409a13:	fst    st(1)
  409a15:	in     eax,dx
  409a16:	inc    ebx
  409a17:	std    
  409a18:	inc    ebx
  409a19:	(bad)  
  409a1b:	inc    edx
  409a1c:	es je  0x4099d5
  409a1f:	popf   
  409a20:	push   esi
  409a21:	sub    bh,BYTE PTR [esi-0x4]
  409a24:	mov    esp,fs
  409a26:	cld    
  409a27:	sbb    BYTE PTR [ebx+0x0],dh
  409a2a:	je     0x409a2d
  409a2c:	ins    DWORD PTR es:[edi],dx
  409a2d:	push   es
  409a2e:	jg     0x409a12
  409a30:	(bad)  
  409a32:	sub    edx,DWORD PTR [ebp+0x12]
  409a35:	adc    al,0x35
  409a37:	scas   al,BYTE PTR es:[edi]
  409a38:	test   BYTE PTR [eax+0x5d],ah
  409a3b:	xchg   ebx,eax
  409a3c:	cs addr16 push esi
  409a3f:	(bad)  
  409a40:	xor    al,0xfd
  409a42:	xor    dh,al
  409a44:	stos   BYTE PTR es:[edi],al
  409a45:	mov    al,0xb0
  409a47:	fiadd  DWORD PTR [eax]
  409a49:	jo     0x4099d0
  409a4b:	rsqrtps xmm4,XMMWORD PTR [esp+esi*1-0x56]
  409a50:	cld    
  409a51:	dec    ecx
  409a52:	loopne 0x409a2b
  409a54:	mov    ds:0xdfb827f3,al
  409a59:	xchg   ebp,eax
  409a5a:	stos   BYTE PTR es:[edi],al
  409a5b:	sbb    ah,ah
  409a5d:	pop    ecx
  409a5e:	lock std 
  409a60:	jo     0x409a9a
  409a62:	cdq    
  409a63:	pop    ebx
  409a64:	mov    eax,edx
  409a66:	aam    0x3a
  409a68:	xchg   bl,ch
  409a6a:	and    ebp,DWORD PTR [edi]
  409a6c:	pop    esi
  409a6d:	jb     0x409a5e
  409a6f:	mov    bl,0xdb
  409a71:	cmp    cl,dh
  409a73:	jns    0x409a5d
  409a75:	gs addr16 jbe 0x409a24
  409a79:	lock data16 pop bp
  409a7d:	push   esi
  409a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7f:	mov    esi,0xd07b816a
  409a84:	inc    ebp
  409a85:	push   esp
  409a86:	leave  
  409a87:	popf   
  409a88:	popf   
  409a89:	or     bh,BYTE PTR [bx+di-0x7a29]
  409a8e:	xor    esi,DWORD PTR [ecx+ebp*1+0x2910bd58]
  409a95:	sbb    BYTE PTR [eax+0x1fe477f5],dl
  409a9b:	test   eax,0x828e9a63
  409aa0:	loop   0x409aa1
  409aa2:	fnstcw WORD PTR [ebp+0x4]
  409aa5:	cmp    al,0xac
  409aa7:	xchg   esp,eax
  409aa8:	pushf  
  409aa9:	shr    BYTE PTR [eax-0x6a],cl
  409aac:	out    dx,al
  409aad:	xchg   ecx,eax
  409aae:	arpl   WORD PTR [ebp-0x24],di
  409ab1:	leave  
  409ab2:	dec    eax
  409ab3:	enter  0x9234,0x51
  409ab7:	fsub   QWORD PTR [ebp-0x38bac7eb]
  409abd:	out    dx,al
  409abe:	inc    BYTE PTR [ebp-0xbedf9f3]
  409ac4:	fmul   st,st(2)
  409ac6:	data16 mov ah,0x51
  409ac9:	shr    BYTE PTR [ecx-0x1a],1
  409acc:	mov    BYTE PTR [ecx+0x4e065e],dh
  409ad2:	les    esp,FWORD PTR [edi]
  409ad4:	or     ebx,DWORD PTR [esi+0x4]
  409ad7:	mov    cs,ebx
  409ad9:	sub    ah,BYTE PTR [ebp-0x16]
  409adc:	xchg   BYTE PTR ds:0x47026935,cl
  409ae2:	jb     0x409a78
  409ae4:	jl     0x409af8
  409ae6:	out    dx,eax
  409ae7:	xchg   edx,eax
  409ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae9:	sub    eax,0x11fda39a
  409aee:	add    al,0xee
  409af0:	popf   
  409af1:	or     DWORD PTR [ecx+0x27109d36],0xffffff9c
  409af8:	fst    DWORD PTR [edx]
  409afa:	jp     0x409b05
  409afc:	int3   
  409afd:	stos   DWORD PTR es:[edi],eax
  409afe:	mov    ebx,0x31cea19
  409b03:	push   0xf9f439f6
  409b08:	jne    0x409ad2
  409b0a:	pop    ecx
  409b0b:	push   ds
  409b0c:	jmp    0xe5d9:0x3286ce3e
  409b13:	mov    al,ds:0x9d6bea75
  409b18:	and    ebx,DWORD PTR [edi+esi*8-0x3dca7c5e]
  409b1f:	and    DWORD PTR [edx],edi
  409b21:	shl    DWORD PTR [ebx-0x47c365da],cl
  409b27:	imul   edx,DWORD PTR [edx],0x44c9373c
  409b2d:	int    0x7b
  409b2f:	call   0x338:0xfbbc524
  409b36:	cmp    DWORD PTR [ecx-0x48],esp
  409b39:	inc    ecx
  409b3a:	out    dx,al
  409b3b:	rol    ah,0x1a
  409b3e:	in     eax,0x93
  409b40:	aas    
  409b41:	fmul   QWORD PTR [eax]
  409b43:	dec    eax
  409b44:	mov    dh,0x60
  409b46:	call   0xd3d7:0x479399ab
  409b4d:	(bad)  
  409b4e:	push   esp
  409b4f:	cwde   
  409b50:	repz sbb BYTE PTR [edi+ebp*4-0x4443a5e8],0x99
  409b59:	dec    edx
  409b5a:	pop    ds
  409b5b:	xchg   ebp,eax
  409b5c:	xor    esp,DWORD PTR [edi+0x351f939]
  409b62:	xor    al,0x4e
  409b64:	lods   eax,DWORD PTR ds:[esi]
  409b65:	into   
  409b66:	adc    eax,0x228f389d
  409b6b:	js     0x409bcd
  409b6d:	and    al,0x6b
  409b6f:	out    0x7a,eax
  409b71:	ret    0xc309
  409b74:	inc    eax
  409b75:	(bad)  
  409b76:	ds dec edi
  409b78:	sub    ah,BYTE PTR [esi+0x1f9d8690]
  409b7e:	push   0x965b7d51
  409b83:	pop    eax
  409b84:	pop    edx
  409b85:	mov    bl,BYTE PTR [esi]
  409b87:	jo     0x409b97
  409b89:	addr16 in al,dx
  409b8b:	call   0x2cc7:0xb38b2832
  409b92:	scas   al,BYTE PTR es:[edi]
  409b93:	mov    bl,dl
  409b95:	clc    
  409b96:	or     eax,0xe83c935e
  409b9b:	sbb    BYTE PTR [esi+0x41],bh
  409b9e:	ja     0x409bce
  409ba0:	cwde   
  409ba1:	xchg   esi,eax
  409ba2:	daa    
  409ba3:	adc    al,BYTE PTR [eax+0x7]
  409ba6:	jno    0x409c04
  409ba8:	outs   dx,DWORD PTR ds:[esi]
  409ba9:	iret   
  409baa:	pop    edx
  409bab:	(bad)
  409bae:	in     al,dx
  409baf:	push   ecx
  409bb0:	sub    al,0x31
  409bb2:	fstp   QWORD PTR [ebp+0x17]
  409bb5:	iret   
  409bb6:	and    al,0xb2
  409bb8:	inc    eax
  409bb9:	pushf  
  409bba:	pop    edx
  409bbb:	xlat   BYTE PTR ds:[ebx]
  409bbc:	pushf  
  409bbd:	sub    DWORD PTR [ebx],ebx
  409bbf:	or     ebx,DWORD PTR [eax]
  409bc1:	sbb    WORD PTR [ecx+ecx*1],dx
  409bc5:	test   bh,cl
  409bc7:	stos   DWORD PTR es:[edi],eax
  409bc8:	cld    
  409bc9:	push   cs
  409bca:	nop
  409bcb:	pop    ds
  409bcc:	push   ecx
  409bcd:	scas   al,BYTE PTR es:[edi]
  409bce:	das    
  409bcf:	ror    DWORD PTR [ecx+0x64],1
  409bd2:	xchg   esi,eax
  409bd3:	cmp    eax,0xe764cbb3
  409bd8:	xchg   ebp,eax
  409bd9:	sub    al,0x79
  409bdb:	aaa    
  409bdc:	pop    edx
  409bdd:	jmp    0xa6d9:0x7c20b634
  409be4:	pop    edx
  409be5:	sar    BYTE PTR [esi+0x25],cl
  409be8:	mov    ebx,0x4ca04677
  409bed:	out    0x84,eax
  409bef:	int    0x58
  409bf1:	xor    esp,DWORD PTR [ebx]
  409bf3:	cmp    BYTE PTR [eax+edi*2-0x2e],dl
  409bf7:	and    DWORD PTR [eax-0x5],edi
  409bfa:	sub    esp,DWORD PTR [eax+0x34]
  409bfd:	clc    
  409bfe:	(bad)  
  409bff:	or     BYTE PTR [eax-0x31e13403],dh
  409c05:	mov    dh,0x4c
  409c07:	jge    0x409bf8
  409c09:	push   ss
  409c0a:	dec    ebp
  409c0b:	pop    ebx
  409c0c:	push   cs
  409c0d:	add    dh,BYTE PTR [esi]
  409c0f:	aaa    
  409c10:	stos   BYTE PTR es:[edi],al
  409c11:	and    cl,ch
  409c13:	add    esi,edx
  409c15:	shr    DWORD PTR [eax+eiz*1],1
  409c18:	cmp    esp,DWORD PTR [eax-0x6247912]
  409c1e:	pop    es
  409c1f:	sbb    al,0x5b
  409c21:	stos   BYTE PTR es:[edi],al
  409c22:	(bad)  
  409c23:	call   0x65c61104
  409c28:	dec    eax
  409c29:	es jg  0x409bbc
  409c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2d:	arpl   bx,dx
  409c2f:	jmp    0xbd087361
  409c34:	sti    
  409c35:	dec    eax
  409c36:	int    0xeb
  409c38:	sub    DWORD PTR [ebx],ecx
  409c3a:	xor    ecx,DWORD PTR [edx-0x7f]
  409c3d:	and    al,0x73
  409c3f:	lds    edi,FWORD PTR [eax]
  409c41:	xlat   BYTE PTR ds:[ebx]
  409c42:	test   eax,0x2d7e86fc
  409c47:	sbb    ah,dl
  409c49:	retf   0xc441
  409c4c:	inc    ecx
  409c4d:	dec    ebx
  409c4e:	fwait
  409c4f:	sbb    al,0x14
  409c51:	jno    0x409cd1
  409c53:	hlt    
  409c54:	jmp    0x46d9:0xca261375
  409c5b:	hlt    
  409c5c:	jp     0x409c09
  409c5e:	xchg   edx,eax
  409c5f:	dec    ebx
  409c60:	xor    al,0xd5
  409c62:	adc    al,0xeb
  409c64:	repz xlat BYTE PTR ds:[ebx]
  409c66:	fadd   DWORD PTR [ebx-0x75]
  409c69:	inc    ebx
  409c6a:	sahf   
  409c6b:	ror    BYTE PTR [esi+0x5ad9d3cc],0x6
  409c72:	mov    dh,0xf2
  409c74:	cmp    BYTE PTR [ecx],al
  409c76:	std    
  409c77:	jns    0x409c28
  409c79:	scas   eax,DWORD PTR es:[edi]
  409c7a:	into   
  409c7b:	pop    edi
  409c7c:	inc    ebx
  409c7d:	retf   0x8d56
  409c80:	add    DWORD PTR [esi+0x7f],0xffffffa1
  409c84:	or     edi,DWORD PTR [eax+0x53]
  409c87:	retf   
  409c88:	scas   al,BYTE PTR es:[edi]
  409c89:	pop    ds
  409c8a:	call   0x298b769c
  409c8f:	adc    eax,0x4b37cca3
  409c94:	jbe    0x409c17
  409c96:	loopne 0x409d14
  409c98:	mov    ?,edx
  409c9a:	fwait
  409c9b:	xor    BYTE PTR [esi],bh
  409c9d:	pop    es
  409c9e:	shl    cl,1
  409ca0:	sub    DWORD PTR [ecx-0x4e],edi
  409ca3:	popa   
  409ca4:	mov    WORD PTR [ecx-0x6e],?
  409ca7:	inc    ecx
  409ca8:	aas    
  409ca9:	imul   ecx,esp,0xab38bb0b
  409caf:	sbb    ecx,DWORD PTR [ecx-0x1d1a2e0a]
  409cb5:	push   0xa6826711
  409cba:	xor    al,0x9f
  409cbc:	iret   
  409cbd:	dec    esi
  409cbe:	mov    ah,dh
  409cc0:	cwde   
  409cc1:	xchg   esp,eax
  409cc2:	sub    DWORD PTR [edx],0x5f
  409cc5:	mov    al,ds:0x369e0615
  409cca:	push   ecx
  409ccb:	(bad)  
  409ccc:	sbb    eax,0x1dc65c69
  409cd1:	cmp    esi,DWORD PTR [edi-0x57976f67]
  409cd7:	pop    ebx
  409cd8:	xlat   BYTE PTR ds:[ebx]
  409cd9:	mov    esp,0xb099dd4
  409cde:	mov    ebx,0xd67b3d2c
  409ce3:	jmp    0xde51:0x2c6f2934
  409cea:	(bad)  
  409ceb:	push   cs
  409cec:	inc    esi
  409ced:	mov    ebx,esi
  409cef:	xchg   DWORD PTR [ebp-0x70e023be],edx
  409cf5:	push   0xffffffed
  409cf7:	shl    al,cl
  409cf9:	push   edx
  409cfa:	inc    ebx
  409cfb:	in     al,0xff
  409cfd:	stos   BYTE PTR es:[edi],al
  409cfe:	add    edx,DWORD PTR [ebx-0x6f]
  409d01:	popa   
  409d02:	mov    ah,0x2b
  409d04:	adc    ecx,DWORD PTR [ebx+0x35]
  409d07:	(bad)  
  409d08:	out    0x28,al
  409d0a:	or     esp,DWORD PTR [eax+0x3663997f]
  409d10:	aas    
  409d11:	mov    esi,0xcf94d154
  409d16:	out    dx,al
  409d17:	sar    ecx,0xc1
  409d1a:	dec    ebp
  409d1b:	data16 xor ah,BYTE PTR [edi+0x2e8b6131]
  409d22:	inc    edi
  409d23:	cmp    ecx,DWORD PTR es:[edx+eiz*8-0x18848bfd]
  409d2b:	aam    0xf
  409d2d:	sahf   
  409d2e:	fild   DWORD PTR [ecx+edi*1]
  409d31:	jl     0x409d8a
  409d33:	retf   
  409d34:	dec    esp
  409d35:	ret    0x8ae2
  409d38:	addr16 out dx,eax
  409d3a:	pusha  
  409d3b:	mov    ebx,0xd18d1dd6
  409d40:	fwait
  409d41:	out    dx,eax
  409d42:	pop    eax
  409d43:	in     al,dx
  409d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d45:	shr    BYTE PTR [ecx-0x5c],1
  409d48:	sbb    DWORD PTR [ecx-0x6be2c269],eax
  409d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4f:	(bad)  
  409d50:	xchg   ebp,eax
  409d51:	pop    edi
  409d52:	cmp    dh,BYTE PTR [edi]
  409d54:	mov    cl,0xd9
  409d56:	add    al,0x80
  409d58:	adc    al,0x38
  409d5a:	mov    BYTE PTR [esi],al
  409d5c:	loopne 0x409dd3
  409d5e:	mov    ds:0xc06c7ddb,al
  409d63:	fldpi  
  409d65:	fcom   st(3)
  409d67:	sbb    eax,0x5719e191
  409d6c:	jb     0x409d59
  409d6e:	push   es
  409d6f:	adc    al,ah
  409d71:	add    edi,DWORD PTR [edx]
  409d73:	push   esp
  409d74:	scas   al,BYTE PTR es:[edi]
  409d75:	shl    BYTE PTR [eax-0x6c],0x4e
  409d79:	mov    ah,0xf0
  409d7b:	mov    bh,0xb4
  409d7d:	hlt    
  409d7e:	xor    dh,dh
  409d80:	jl     0x409d17
  409d82:	rcl    ecx,cl
  409d84:	arpl   bx,bx
  409d86:	push   0xfffffff0
  409d88:	pushf  
  409d89:	cmp    DWORD PTR [esi-0x19027f3e],0x22
  409d90:	dec    esp
  409d91:	ror    DWORD PTR [ecx],cl
  409d93:	js     0x409d4b
  409d95:	xor    BYTE PTR [edx],dl
  409d97:	dec    esi
  409d98:	sbb    esp,ebp
  409d9a:	mov    ebp,ebx
  409d9c:	adc    DWORD PTR [ebx+0x2cc89935],edx
  409da2:	xchg   edx,eax
  409da3:	in     al,dx
  409da4:	loopne 0x409e02
  409da6:	add    eax,0x3e3f181c
  409dab:	jecxz  0x409d56
  409dad:	gs cli 
  409daf:	xchg   esi,eax
  409db0:	shl    DWORD PTR [ebx-0x5d],0xdd
  409db4:	dec    esi
  409db5:	jno    0x409e09
  409db7:	xchg   edi,eax
  409db8:	sbb    edi,eax
  409dba:	jnp    0x409d54
  409dbc:	pop    es
  409dbd:	push   ecx
  409dbe:	test   BYTE PTR [esi],dl
  409dc0:	mov    al,ds:0x7a47d0f3
  409dc5:	push   esi
  409dc6:	fdivr  QWORD PTR [eax]
  409dc8:	xor    al,0x60
  409dca:	test   dl,al
  409dcc:	push   ecx
  409dcd:	lock bound ebp,QWORD PTR [eax]
  409dd0:	push   eax
  409dd1:	mov    ecx,0xcbd421f
  409dd6:	jno    0x409e34
  409dd8:	add    BYTE PTR [edi-0xfb25983],ah
  409dde:	neg    BYTE PTR [esi+0x12]
  409de1:	in     al,dx
  409de2:	xor    al,0x1d
  409de4:	mov    eax,0x33beffe5
  409de9:	and    eax,DWORD PTR [ebx-0x26]
  409dec:	add    dl,BYTE PTR [ebx]
  409dee:	or     eax,0x29745c37
  409df3:	adc    DWORD PTR [esi+0x74],esi
  409df6:	cs icebp 
  409df8:	fs add al,dh
  409dfb:	add    eax,0xb078b693
  409e00:	ss push ecx
  409e02:	nop
  409e03:	jl     0x409e02
  409e05:	push   cs
  409e06:	idiv   BYTE PTR [ebp+edi*1-0x43]
  409e0a:	xchg   ebp,eax
  409e0b:	mov    ds:0x414bb9bb,eax
  409e10:	pushf  
  409e11:	out    0xb,al
  409e13:	es inc esp
  409e15:	jo     0x409e53
  409e17:	push   0x1c
  409e19:	push   eax
  409e1a:	and    al,0x17
  409e1c:	sub    bl,bh
  409e1e:	xlat   BYTE PTR ds:[ebx]
  409e1f:	outs   dx,DWORD PTR ds:[esi]
  409e20:	or     BYTE PTR [esi+eax*1-0x5b1e8a48],cl
  409e27:	data16 cmp BYTE PTR [eax-0x4c],dl
  409e2b:	cmc    
  409e2c:	aaa    
  409e2d:	mov    ecx,0xb08b86b7
  409e32:	dec    ebp
  409e33:	push   es
  409e34:	rcl    BYTE PTR [ebx+edi*4+0x7d],cl
  409e38:	repz and ch,BYTE PTR [eax-0xf0e32d4]
  409e3f:	shl    BYTE PTR [eax+0x56],1
  409e42:	rcl    DWORD PTR [edi+0x35],1
  409e45:	mov    ebp,DWORD PTR [esi]
  409e47:	data16 (bad) 
  409e49:	jp     0x409e07
  409e4b:	xor    eax,0x2a0127f0
  409e50:	daa    
  409e51:	jg     0x409eb7
  409e53:	scas   eax,DWORD PTR es:[edi]
  409e54:	ror    BYTE PTR [ebx-0x4e8478c0],0x9d
  409e5b:	mov    bl,BYTE PTR [ebp+0x10]
  409e5e:	xchg   ebx,eax
  409e5f:	inc    edx
  409e60:	mov    cl,0xb4
  409e62:	retf   0xb065
  409e65:	mov    bh,0xa5
  409e67:	push   0x94e995be
  409e6c:	inc    ecx
  409e6d:	adc    eax,eax
  409e6f:	shl    BYTE PTR [edi],cl
  409e71:	cmp    ah,BYTE PTR [edx]
  409e73:	mov    ch,0xe1
  409e75:	adc    cl,dl
  409e77:	mov    ds:0xf02763b9,eax
  409e7c:	add    eax,0x9c6108a4
  409e81:	(bad)  
  409e82:	cmc    
  409e83:	and    dh,BYTE PTR [edi-0x1b]
  409e86:	cli    
  409e87:	pop    es
  409e88:	bound  eax,QWORD PTR [edi]
  409e8a:	and    al,dl
  409e8c:	sbb    BYTE PTR [ebx+0x4f],0x7c
  409e90:	and    eax,0x4f491d7e
  409e95:	outs   dx,DWORD PTR ds:[esi]
  409e96:	adc    eax,0x9f4d4817
  409e9b:	mov    edx,0xc009f25e
  409ea0:	fist   DWORD PTR [esp]
  409ea3:	fdivrp st(5),st
  409ea5:	mov    ch,0xa0
  409ea7:	cmp    DWORD PTR [eax],ecx
  409ea9:	cmp    al,0xff
  409eab:	out    dx,al
  409eac:	out    0xa1,al
  409eae:	xor    eax,0xc45a3dad
  409eb3:	and    BYTE PTR [edx],al
  409eb5:	popa   
  409eb6:	or     al,0x92
  409eb8:	xor    eax,0x8c6c240b
  409ebd:	clc    
  409ebe:	loope  0x409f3e
  409ec0:	add    BYTE PTR [edx-0x517f76c9],bh
  409ec6:	adc    BYTE PTR cs:[ebp+edi*8-0x24],ch
  409ecb:	clc    
  409ecc:	add    al,0xe3
  409ece:	adc    esp,esp
  409ed0:	and    al,0x8f
  409ed2:	sub    eax,0x9aeaefe0
  409ed7:	sbb    DWORD PTR [edi+edx*8+0xd13edd5],ecx
  409ede:	lock lea ebx,[edi+0x7e19a173]
  409ee5:	and    eax,0x1f83545d
  409eea:	retf   0xeb48
  409eed:	pop    es
  409eee:	push   cs
  409eef:	push   ebp
  409ef0:	rol    BYTE PTR [edi],1
  409ef2:	add    BYTE PTR [edx+0x55],0x32
  409ef6:	ds mov ebp,0x387fee3c
  409efc:	pusha  
  409efd:	stc    
  409efe:	cli    
  409eff:	jb     0x409f44
  409f01:	rcl    esp,1
  409f03:	loop   0x409f0d
  409f05:	lahf   
  409f06:	xchg   BYTE PTR [edx],dh
  409f08:	repz jmp 0x136a:0x165b18d9
  409f10:	jnp    0x409ebb
  409f12:	sub    eax,0x8017190b
  409f17:	mov    ecx,0x9ea383d8
  409f1c:	cmp    BYTE PTR [esi+esi*8-0x689d1a1f],ah
  409f23:	or     BYTE PTR [edx],ch
  409f25:	add    DWORD PTR ds:0xa4e803b2,ecx
  409f2b:	cwde   
  409f2c:	sub    al,0xed
  409f2e:	imul   esi,DWORD PTR [esi-0x3ed6339e],0x49
  409f35:	scas   al,BYTE PTR es:[edi]
  409f36:	cdq    
  409f37:	or     DWORD PTR [esi],ecx
  409f39:	add    al,BYTE PTR [edx]
  409f3b:	cdq    
  409f3c:	das    
  409f3d:	adc    dl,BYTE PTR [ebp+ecx*2-0x5f]
  409f41:	dec    ebx
  409f42:	test   BYTE PTR [esi+0x71],bh
  409f45:	ds test al,0x30
  409f48:	lock cwde 
  409f4a:	fidiv  WORD PTR [edi+0x76]
  409f4d:	cld    
  409f4e:	or     al,0x39
  409f50:	sbb    edi,DWORD PTR [edx+ebx*8]
  409f53:	adc    edx,DWORD PTR [ecx+edi*2]
  409f56:	ss inc ecx
  409f58:	xchg   ebp,eax
  409f59:	xchg   ebp,eax
  409f5a:	push   ds
  409f5b:	xor    DWORD PTR [eax+eiz*1-0x2a4479f4],0x662d3f3d
  409f66:	add    BYTE PTR [edx-0x79ed1fa9],0xdf
  409f6d:	ja     0x409f3e
  409f6f:	jg     0x409f38
  409f71:	cmp    eax,0x2dbc54b9
  409f76:	out    dx,eax
  409f77:	pop    ebx
  409f78:	retf   0xf41c
  409f7b:	stc    
  409f7c:	sbb    eax,0x7832a779
  409f81:	cmp    eax,0xc7babcd5
  409f86:	cld    
  409f87:	mov    eax,ds:0xe4bbb1e8
  409f8c:	adc    eax,0x12f8b449
  409f91:	enter  0x5848,0x7
  409f95:	dec    ebp
  409f97:	adc    BYTE PTR [ebp+0x130c1718],dl
  409f9d:	fnstcw WORD PTR [ebx+0x9]
  409fa0:	ja     0x409f7b
  409fa2:	lahf   
  409fa3:	sbb    BYTE PTR [ebp-0x65],dh
  409fa6:	repnz (bad) 
  409fa8:	int3   
  409fa9:	popa   
  409faa:	jnp    0x409f89
  409fac:	daa    
  409fad:	fdiv   DWORD PTR [esi-0x19]
  409fb0:	sub    dh,bh
  409fb2:	dec    edi
  409fb3:	(bad)  
  409fb4:	imul   ecx,ebx,0xb6ec6f04
  409fba:	ins    BYTE PTR es:[edi],dx
  409fbb:	imul   ecx,DWORD PTR [edi-0x165630fc],0x888e1219
  409fc5:	push   esi
  409fc6:	inc    ecx
  409fc7:	push   ecx
  409fc8:	fs jg  0x409f80
  409fcb:	jp     0x409ffc
  409fcd:	inc    edi
  409fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fcf:	pop    ecx
  409fd0:	push   0xee678da6
  409fd5:	push   cs
  409fd6:	or     bl,BYTE PTR [eax+eiz*8]
  409fd9:	(bad)  
  409fda:	shl    BYTE PTR [edi-0x1b],1
  409fdd:	sbb    BYTE PTR [eax-0x3290a0ab],bh
  409fe3:	pushf  
  409fe4:	lahf   
  409fe5:	inc    esi
  409fe6:	mov    DWORD PTR [ecx-0x23fb1e9e],0xbcefcc98
  409ff0:	cmp    eax,0x2de11964
  409ff5:	xchg   dl,ch
  409ff7:	pop    ds
  409ff8:	sub    ah,BYTE PTR [eax-0x2752c861]
  409ffe:	stc    
  409fff:	scas   al,BYTE PTR es:[edi]
  40a000:	dec    ebp
  40a001:	js     0x40a03e
  40a003:	icebp  
  40a004:	xchg   ecx,eax
  40a005:	repnz shl DWORD PTR ds:[esp+ecx*8],0xaa
  40a00b:	lods   al,BYTE PTR ds:[esi]
  40a00c:	push   0x1f
  40a00e:	into   
  40a00f:	push   esp
  40a010:	dec    esi
  40a011:	xor    BYTE PTR [edx+0x4a],ah
  40a014:	add    BYTE PTR [edi],0x1a
  40a017:	and    ebp,edi
  40a019:	fsub   st,st(3)
  40a01b:	and    edi,edi
  40a01d:	xor    BYTE PTR [esi+0x6],al
  40a020:	mov    bl,0x20
  40a022:	xchg   edx,eax
  40a023:	popf   
  40a024:	xchg   ebx,eax
  40a025:	jnp    0x409fde
  40a027:	mov    esp,0xfd88bda9
  40a02c:	lea    esp,[esi]
  40a02e:	(bad)  
  40a02f:	imul   edx,DWORD PTR ds:0x4a3937b9,0x66e04e5e
  40a039:	ins    BYTE PTR es:[edi],dx
  40a03a:	int    0x4b
  40a03c:	icebp  
  40a03d:	mov    edx,0x77763e61
  40a042:	inc    edx
  40a043:	or     esp,DWORD PTR [ecx+edi*1]
  40a046:	push   esi
  40a047:	pop    eax
  40a048:	lea    ebx,[edx]
  40a04a:	call   0x22f49d2c
  40a04f:	and    bl,al
  40a051:	jns    0x40a016
  40a053:	fild   WORD PTR [esi]
  40a055:	adc    al,0x79
  40a057:	sub    DWORD PTR [esi],ebx
  40a059:	mov    bl,0xd4
  40a05b:	sub    edx,DWORD PTR [ebx+0x77]
  40a05e:	pop    ebx
  40a05f:	nop
  40a060:	lock sub ebp,DWORD PTR [ebp-0x7a40944b]
  40a067:	mov    DWORD PTR [ecx+ebx*4+0x587c3c6],ebp
  40a06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a06f:	cwde   
  40a070:	mov    cl,0x72
  40a072:	or     dl,BYTE PTR [edx]
  40a074:	adc    al,0xe8
  40a076:	fbstp  TBYTE PTR ds:0xe3f4fbd3
  40a07c:	mov    edx,0x5a6a437d
  40a081:	push   esi
  40a082:	cdq    
  40a083:	jle    0x40a054
  40a085:	adc    ah,BYTE PTR [esi+0x63e6a3a7]
  40a08b:	xchg   esi,eax
  40a08c:	repz pop ds
  40a08e:	in     al,dx
  40a08f:	push   ecx
  40a090:	push   edi
  40a091:	test   BYTE PTR [eax+0x34],bh
  40a094:	(bad)  
  40a095:	push   cs
  40a096:	pop    ecx
  40a097:	inc    DWORD PTR [edi-0x61439c9c]
  40a09d:	and    eax,0x8fdb7bf3
  40a0a2:	(bad)  
  40a0a3:	push   esp
  40a0a4:	sahf   
  40a0a5:	pop    ds
  40a0a6:	sar    BYTE PTR [esi-0x1],cl
  40a0a9:	test   DWORD PTR [ebp-0x72],ebx
  40a0ac:	and    edx,DWORD PTR [esi+0x48]
  40a0af:	cmp    ebp,DWORD PTR [esi+0x28]
  40a0b2:	rcr    BYTE PTR [esi-0x1],cl
  40a0b5:	inc    ecx
  40a0b6:	inc    ecx
  40a0b7:	jbe    0x40a123
  40a0b9:	aas    
  40a0ba:	bound  ebx,QWORD PTR [edi]
  40a0bc:	aas    
  40a0bd:	test   DWORD PTR [eax],esi
  40a0bf:	cs mov eax,0x15882a9a
  40a0c5:	imul   eax,DWORD PTR [eax-0x3d],0x7d9b33b9
  40a0cc:	and    al,BYTE PTR [ebp+0x71]
  40a0cf:	shl    BYTE PTR [esi],1
  40a0d1:	out    0x67,eax
  40a0d3:	fisub  WORD PTR [edi-0x70e54138]
  40a0d9:	mov    ah,0x4c
  40a0db:	mov    ebp,0x7f46779d
  40a0e0:	mov    BYTE PTR [eax],al
  40a0e2:	(bad)  
  40a0e4:	or     BYTE PTR [ebx],ch
  40a0e6:	jmp    0x73e3:0x6440646a
  40a0ed:	(bad)  
  40a0ee:	arpl   WORD PTR [eax-0x33],sp
  40a0f1:	xchg   al,dl
  40a0f3:	(bad)  
  40a0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f6:	repz cmp BYTE PTR [ebx-0x54],al
  40a0fa:	and    eax,0xb36f8f71
  40a0ff:	push   eax
  40a100:	hlt    
  40a101:	lods   al,BYTE PTR ds:[esi]
  40a102:	cmp    eax,DWORD PTR [esi]
  40a104:	pushf  
  40a105:	ror    BYTE PTR [eax+edi*2],cl
  40a108:	cld    
  40a109:	iret   
  40a10a:	loopne 0x40a149
  40a10c:	cmp    eax,0xd9c5ef4a
  40a111:	inc    ebx
  40a112:	mov    ds:0x1435cd4e,al
  40a117:	std    
  40a118:	adc    eax,0x5a6994d6
  40a11d:	inc    esi
  40a11e:	rol    DWORD PTR [ecx-0x463589a],cl
  40a124:	dec    eax
  40a125:	mov    ss,WORD PTR [esi]
  40a127:	sbb    DWORD PTR [ebp*1-0x52e8b719],edx
  40a12e:	inc    ebp
  40a12f:	mov    ds,WORD PTR [ebp+0x617fba58]
  40a135:	jmp    0x451f65
  40a13a:	inc    esp
  40a13b:	sub    ch,dh
  40a13d:	loope  0x40a0d0
  40a13f:	mov    eax,ds:0x85cc02e
  40a144:	jl     0x40a1bc
  40a146:	in     eax,0xc8
  40a148:	push   DWORD PTR [ecx+0x21ec9d8a]
  40a14e:	dec    ebp
  40a14f:	and    DWORD PTR [ebp+0x65],edi
  40a152:	pop    ss
  40a153:	popa   
  40a154:	cmp    BYTE PTR [ebp-0x46fee837],ah
  40a15a:	add    al,0x76
  40a15c:	fstp   QWORD PTR [ebx-0x5b]
  40a15f:	fstp   QWORD PTR [edi-0x65d4783]
  40a165:	sbb    eax,0x87a4e985
  40a16a:	or     al,0xa6
  40a16c:	test   al,0xce
  40a16e:	mov    bh,0x56
  40a170:	fistp  WORD PTR [ebp+edx*8+0x7e]
  40a174:	imul   esp,DWORD PTR [ebp+0x26],0xd2875052
  40a17b:	dec    ebx
  40a17c:	sbb    DWORD PTR [eax-0x1f],edi
  40a17f:	sbb    esi,edx
  40a181:	jp     0x40a111
  40a183:	add    al,0x97
  40a185:	cmp    eax,0x72db37b6
  40a18a:	cli    
  40a18b:	pusha  
  40a18c:	inc    esp
  40a18d:	or     bl,BYTE PTR [ebx+0x37]
  40a190:	fcmovb st,st(1)
  40a192:	call   0xf60e0365
  40a197:	and    ch,BYTE PTR [ecx+eax*8]
  40a19a:	jbe    0x40a1d6
  40a19c:	fld    DWORD PTR [esi-0x72859040]
  40a1a2:	mov    eax,0x35f0f6b0
  40a1a7:	push   0xb7424d07
  40a1ac:	pop    ss
  40a1ad:	inc    ecx
  40a1ae:	fldl2e 
  40a1b0:	pop    edx
  40a1b1:	sub    al,0x83
  40a1b3:	and    DWORD PTR [esi],edx
  40a1b5:	xchg   esi,eax
  40a1b6:	popa   
  40a1b7:	retf   0x7208
  40a1ba:	jnp    0x40a1d0
  40a1bc:	dec    esp
  40a1bd:	imul   ecx,DWORD PTR [edx],0x5c
  40a1c0:	jae    0x40a19e
  40a1c2:	pusha  
  40a1c3:	or     DWORD PTR [eax+ecx*1-0xd],ebx
  40a1c7:	sub    dl,BYTE PTR [ecx-0x36]
  40a1ca:	fdiv   DWORD PTR [edx]
  40a1cc:	mov    ebx,0x3a45635e
  40a1d1:	ja     0x40a20c
  40a1d3:	push   esi
  40a1d4:	sti    
  40a1d5:	dec    ebx
  40a1d6:	xchg   ecx,eax
  40a1d7:	sub    ebx,DWORD PTR [ebp+0x4bc333ea]
  40a1dd:	push   esi
  40a1de:	mov    ebp,edx
  40a1e0:	mov    ah,0x5
  40a1e2:	out    dx,eax
  40a1e3:	in     eax,dx
  40a1e4:	jno    0x40a21a
  40a1e6:	sub    al,0x60
  40a1e8:	mov    ah,0xb1
  40a1ea:	xchg   esp,eax
  40a1eb:	popf   
  40a1ec:	inc    ebx
  40a1ed:	add    dh,ch
  40a1ef:	push   ds
  40a1f0:	addr16 xor eax,0x64216025
  40a1f6:	fnsave [ecx]
  40a1f8:	push   cs
  40a1f9:	pop    esp
  40a1fa:	fld    QWORD PTR [ecx+ebx*4]
  40a1fd:	and    BYTE PTR [edx-0x22],ch
  40a200:	xchg   esp,eax
  40a201:	shl    DWORD PTR ds:0x9b2d7989,1
  40a207:	and    al,BYTE PTR [esi+0x22ab6d79]
  40a20d:	cld    
  40a20e:	fwait
  40a20f:	mov    ch,0x34
  40a211:	jae    0x40a1e7
  40a213:	jnp    0x40a231
  40a215:	lea    esi,[eax+0x338ccdd5]
  40a21b:	pop    ds
  40a21c:	test   al,0xd9
  40a21e:	cwde   
  40a21f:	pop    ebp
  40a220:	fiadd  WORD PTR [edi-0x3b]
  40a223:	inc    esi
  40a224:	xchg   ecx,eax
  40a225:	retf   0x7f2c
  40a228:	add    al,BYTE PTR [edi]
  40a22a:	and    edx,DWORD PTR [eax+0x5b25eb99]
  40a230:	into   
  40a231:	cld    
  40a232:	push   edx
  40a233:	dec    edi
  40a234:	popa   
  40a235:	adc    ebx,esi
  40a237:	(bad)  
  40a238:	aam    0xbd
  40a23a:	and    eax,0xaea237cf
  40a23f:	push   eax
  40a240:	inc    ebx
  40a241:	jg     0x40a2b4
  40a243:	clc    
  40a244:	test   al,0x31
  40a246:	push   0xcfd55c31
  40a24b:	add    DWORD PTR [ecx-0x1f66ab82],edx
  40a251:	jmp    0xa744e92a
  40a256:	imul   edx,DWORD PTR [esi+0x66],0x1
  40a25a:	mov    al,BYTE PTR [eax-0x34d94b4]
  40a260:	mov    eax,0x42874570
  40a265:	xchg   esi,eax
  40a266:	and    ah,BYTE PTR ss:[edx]
  40a269:	cli    
  40a26a:	lock rcr DWORD PTR [edi-0x2cc81901],0x83
  40a272:	jecxz  0x40a2d9
  40a274:	jns    0x40a1fe
  40a276:	mov    bh,0x4e
  40a278:	pop    ss
  40a279:	cmp    BYTE PTR [ebx+0x86eab07],al
  40a27f:	adc    al,0x34
  40a281:	cwde   
  40a282:	dec    ecx
  40a283:	sbb    dh,dl
  40a285:	mov    ebp,0xcd13823f
  40a28a:	ins    DWORD PTR es:[edi],dx
  40a28b:	jns    0x40a247
  40a28d:	outs   dx,BYTE PTR ds:[esi]
  40a28e:	sbb    BYTE PTR [esi],dh
  40a290:	(bad)  
  40a291:	shr    BYTE PTR [esi],cl
  40a293:	out    dx,al
  40a294:	lahf   
  40a295:	xor    ah,dl
  40a297:	pop    ss
  40a298:	sbb    edi,esp
  40a29a:	int3   
  40a29b:	push   0x289c50a8
  40a2a0:	add    ebp,DWORD PTR [edx+0x7c]
  40a2a3:	mov    eax,ds:0x924d2e62
  40a2a8:	xchg   ebp,eax
  40a2a9:	sbb    eax,0xc8accd26
  40a2ae:	add    dh,BYTE PTR [ecx-0x64]
  40a2b1:	sbb    ebx,DWORD PTR [ecx+0x59]
  40a2b4:	ja     0x40a335
  40a2b6:	push   esp
  40a2b7:	and    eax,ebx
  40a2b9:	mov    eax,ds:0x5c38ec64
  40a2be:	test   dl,ah
  40a2c0:	fist   DWORD PTR [ebp+0x39]
  40a2c3:	cs jl  0x40a319
  40a2c6:	push   edx
  40a2c7:	nop
  40a2c8:	imul   ecx,DWORD PTR [ebp-0x19],0xb2ac8da6
  40a2cf:	jns    0x40a2a4
  40a2d1:	std    
  40a2d2:	in     al,0x40
  40a2d4:	outs   dx,BYTE PTR ds:[esi]
  40a2d5:	push   esi
  40a2d6:	mov    dl,BYTE PTR ds:0x30e58249
  40a2dc:	and    al,0x9a
  40a2de:	inc    ecx
  40a2df:	aad    0x8e
  40a2e1:	mov    bl,bh
  40a2e3:	imul   ebx,esp,0xbdccdc37
  40a2e9:	add    al,0xee
  40a2eb:	nop
  40a2ec:	add    BYTE PTR [edi],ah
  40a2ee:	lods   eax,DWORD PTR ds:[esi]
  40a2ef:	in     eax,dx
  40a2f0:	fcomp  st(7)
  40a2f2:	out    dx,al
  40a2f3:	mov    bh,0x75
  40a2f5:	cmc    
  40a2f6:	mov    bh,0xe0
  40a2f8:	out    0x64,al
  40a2fa:	out    0x15,al
  40a2fc:	jns    0x40a326
  40a2fe:	lock adc dl,BYTE PTR [edx]
  40a301:	adc    cl,BYTE PTR [edx]
  40a303:	nop
  40a304:	(bad)  
  40a305:	out    0x8c,al
  40a307:	and    eax,0xe430d295
  40a30c:	push   edi
  40a30d:	xor    DWORD PTR [eax-0xc85f7c0],ecx
  40a313:	in     eax,0x44
  40a315:	loope  0x40a373
  40a317:	push   0x8f2fdc6a
  40a31c:	xor    DWORD PTR [ecx+0x4091023b],ebx
  40a322:	xor    al,0x40
  40a324:	xchg   edi,eax
  40a325:	push   cs
  40a326:	adc    BYTE PTR [ecx],bl
  40a328:	arpl   WORD PTR [ebp-0x6e],si
  40a32b:	loop   0x40a338
  40a32d:	inc    esp
  40a32e:	lahf   
  40a32f:	leave  
  40a330:	adc    cl,BYTE PTR ds:0x79f72acd
  40a336:	out    dx,eax
  40a337:	cmp    eax,0xffffff88
  40a33a:	test   esp,0x1a8f9d2e
  40a340:	das    
  40a341:	mov    fs,WORD PTR cs:[edi]
  40a344:	and    BYTE PTR [edx],0xec
  40a347:	adc    DWORD PTR [ebx-0x6cf9b311],edi
  40a34d:	jmp    0xe32d75b9
  40a352:	cmp    bh,ch
  40a354:	jecxz  0x40a3bb
  40a356:	add    eax,0x39493954
  40a35b:	out    dx,al
  40a35c:	mov    es,WORD PTR [esi+0x15]
  40a35f:	pushf  
  40a360:	imul   ecx,edx,0xfffffff8
  40a363:	scas   eax,DWORD PTR es:[edi]
  40a364:	jno    0x40a348
  40a366:	sahf   
  40a367:	iret   
  40a368:	sahf   
  40a369:	adc    BYTE PTR [eax],ah
  40a36b:	cmp    DWORD PTR ds:0x6e00161e,0x43
  40a372:	inc    ebx
  40a373:	cmp    eax,0xe378723e
  40a378:	sar    DWORD PTR [ecx+edi*1+0x131faf94],0x52
  40a380:	push   eax
  40a381:	xchg   ecx,eax
  40a382:	sar    DWORD PTR [esi+0x5d],0x91
  40a386:	push   esi
  40a387:	std    
  40a388:	int3   
  40a389:	fisub  WORD PTR [ebx+edx*4+0x3a]
  40a38d:	out    0xa5,eax
  40a38f:	push   esi
  40a390:	jae    0x40a3d0
  40a392:	sahf   
  40a393:	mov    BYTE PTR [edx],bl
  40a395:	jbe    0x40a370
  40a397:	pop    ss
  40a398:	xor    DWORD PTR [ebx+ebx*8-0x26b4e1d7],eax
  40a39f:	pop    esi
  40a3a0:	repnz sti 
  40a3a2:	and    esp,edi
  40a3a4:	mov    esp,0x96a9f56f
  40a3a9:	pop    ecx
  40a3aa:	clc    
  40a3ab:	xchg   DWORD PTR ds:0xa61642f9,ebp
  40a3b1:	xor    esp,DWORD PTR [ebp-0x1a41713e]
  40a3b7:	fcomp  DWORD PTR [ecx+ebp*8]
  40a3ba:	in     al,dx
  40a3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3bc:	into   
  40a3bd:	xlat   BYTE PTR ds:[ebx]
  40a3be:	adc    dh,ch
  40a3c0:	scas   al,BYTE PTR es:[edi]
  40a3c1:	cmp    esi,ebx
  40a3c3:	gs mov bh,0x2e
  40a3c6:	mov    eax,ds:0xdc7814c2
  40a3cb:	das    
  40a3cc:	sub    dh,0x4d
  40a3cf:	(bad)  
  40a3d0:	gs xchg edi,eax
  40a3d2:	(bad)  
  40a3d3:	fstp   TBYTE PTR [esi]
  40a3d5:	(bad)  
  40a3d6:	gs test eax,0x9173a4eb
  40a3dc:	adc    eax,0x207c7ced
  40a3e1:	ja     0x40a450
  40a3e3:	ins    DWORD PTR es:[edi],dx
  40a3e4:	jecxz  0x40a45c
  40a3e6:	jns    0x40a3c8
  40a3e8:	ror    BYTE PTR [eax],1
  40a3ea:	mov    dh,0x43
  40a3ec:	retf   0x2330
  40a3ef:	(bad)  
  40a3f0:	mov    al,ds:0xeedd88d1
  40a3f5:	push   0x16d90809
  40a3fa:	(bad)  
  40a3fb:	jo     0x40a43d
  40a3fd:	jne    0x40a446
  40a3ff:	inc    edx
  40a400:	pop    ebp
  40a401:	rol    WORD PTR [ecx],cl
  40a404:	xchg   ecx,eax
  40a405:	mov    ds:0xd6dbfa78,eax
  40a40a:	push   ss
  40a40b:	mov    al,0x5e
  40a40d:	inc    eax
  40a40e:	sysexit 
  40a410:	icebp  
  40a411:	ror    BYTE PTR [ecx],0xcb
  40a414:	loopne 0x40a434
  40a416:	dec    eax
  40a417:	call   0xf559:0xf3796cff
  40a41e:	int3   
  40a41f:	push   cs
  40a420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a421:	ds push 0x7c4e1538
  40a427:	ja     0x40a47a
  40a429:	mov    dl,0xdf
  40a42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a42c:	jb     0x40a3f3
  40a42e:	fisubr WORD PTR [eax-0x4]
  40a431:	mov    eax,ds:0x55871a6e
  40a436:	xlat   BYTE PTR ds:[ebx]
  40a437:	adc    ecx,DWORD PTR [ecx]
  40a439:	mov    ah,0x3a
  40a43b:	sub    DWORD PTR [ebp+0x35a6c5a5],edi
  40a441:	rcl    DWORD PTR [esi+0x3f],cl
  40a444:	xchg   esp,eax
  40a445:	out    0xa0,eax
  40a447:	scas   eax,DWORD PTR es:[edi]
  40a448:	mov    al,ds:0xdd68148f
  40a44d:	and    BYTE PTR [edi+esi*8],al
  40a450:	out    dx,eax
  40a451:	xchg   ecx,eax
  40a452:	loop   0x40a42f
  40a454:	das    
  40a455:	mov    esp,0x3e436586
  40a45a:	int3   
  40a45b:	ror    DWORD PTR [esp+ebp*2+0x3911a2d6],cl
  40a462:	push   ebx
  40a463:	mov    bl,BYTE PTR [ecx]
  40a465:	xor    BYTE PTR [eax-0x69bbdb14],0xdd
  40a46c:	rcr    DWORD PTR [edi],cl
  40a46e:	(bad)  
  40a470:	aaa    
  40a471:	lods   al,BYTE PTR ds:[esi]
  40a472:	xchg   ebp,ebx
  40a474:	mov    al,ds:0xa67f60bf
  40a479:	hlt    
  40a47a:	and    eax,0x9cc643fd
  40a47f:	int3   
  40a480:	push   es
  40a481:	into   
  40a482:	xchg   esp,eax
  40a483:	sar    ebx,1
  40a485:	sub    ebp,DWORD PTR [eax+edx*4+0x7f367725]
  40a48c:	out    dx,al
  40a48d:	mov    gs,WORD PTR [esi+0x51]
  40a490:	mov    dh,0x73
  40a492:	clc    
  40a493:	pop    es
  40a494:	push   ss
  40a495:	sti    
  40a496:	loope  0x40a4b9
  40a498:	dec    esi
  40a499:	je     0x40a421
  40a49b:	jge    0x40a498
  40a49d:	(bad)  
  40a49e:	cmp    al,0x87
  40a4a0:	rcr    ebp,1
  40a4a2:	fs int3 
  40a4a4:	mov    edx,0x21e821c7
  40a4a9:	dec    ebx
  40a4aa:	cs mov ebp,ebx
  40a4ad:	sub    BYTE PTR [eax+0x599ec505],dh
  40a4b3:	cmp    al,0x47
  40a4b5:	lahf   
  40a4b6:	dec    edi
  40a4b7:	(bad)  
  40a4b8:	fdivrp st(3),st
  40a4ba:	faddp  st(7),st
  40a4bc:	test   esp,esp
  40a4be:	mov    ebx,0xb1e3b4b
  40a4c3:	xchg   ebp,eax
  40a4c4:	pusha  
  40a4c5:	push   ss
  40a4c6:	ja     0x40a497
  40a4c8:	or     eax,0x52c095bb
  40a4cd:	(bad)  
  40a4ce:	sub    DWORD PTR [eax+0x5b],ebp
  40a4d1:	and    eax,0xc5aef6d6
  40a4d6:	jne    0x40a4e7
  40a4d8:	and    DWORD PTR [ecx-0x4f3deff8],esi
  40a4de:	jbe    0x40a4c4
  40a4e0:	inc    eax
  40a4e1:	xchg   dl,ch
  40a4e3:	pop    es
  40a4e4:	rol    BYTE PTR [ecx+0x5a],0x1d
  40a4e8:	adc    DWORD PTR [ebx+0x41],edi
  40a4eb:	es inc ecx
  40a4ed:	push   eax
  40a4ee:	pop    ebx
  40a4ef:	js     0x40a476
  40a4f1:	mov    ecx,0xaf59203d
  40a4f6:	jbe    0x40a4c2
  40a4f8:	mov    BYTE PTR [esi],ah
  40a4fa:	xor    eax,0xbc624ec7
  40a4ff:	add    ebx,esi
  40a501:	fcomp  QWORD PTR [edi]
  40a503:	out    dx,eax
  40a504:	repz arpl WORD PTR [ebx+0x32b0be8b],sp
  40a50b:	ror    DWORD PTR [eax+0x1bfa3599],1
  40a511:	sub    DWORD PTR [edi+0x13],0xffffffa5
  40a515:	daa    
  40a516:	inc    ebp
  40a517:	jl     0x40a4ff
  40a519:	xchg   ecx,eax
  40a51a:	jg     0x40a4e4
  40a51c:	sub    DWORD PTR [ebx-0xcad8d9e],0xa8f079c
  40a526:	fdiv   DWORD PTR [esi+edx*4-0x4f414d19]
  40a52d:	push   ebx
  40a52e:	icebp  
  40a52f:	mov    BYTE PTR [ebp-0x60],al
  40a532:	xchg   ecx,eax
  40a533:	lea    edx,[edi+eax*8-0x11ba93fe]
  40a53a:	loop   0x40a4cb
  40a53c:	pop    ebp
  40a53d:	fwait
  40a53e:	dec    esp
  40a53f:	das    
  40a540:	inc    esp
  40a541:	retf   
  40a542:	jnp    0x40a5ad
  40a544:	inc    edx
  40a545:	xchg   esp,eax
  40a546:	push   cs
  40a547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a548:	pop    ecx
  40a549:	and    eax,DWORD PTR [edx+edx*1-0x32d40253]
  40a550:	xchg   esi,eax
  40a551:	cmp    al,0xad
  40a553:	add    ebx,DWORD PTR [eax-0x2d31be38]
  40a559:	fwait
  40a55a:	test   al,0x40
  40a55c:	mov    WORD PTR [edx-0x5db9f179],?
  40a562:	(bad)  
  40a564:	xchg   esi,eax
  40a565:	gs inc esp
  40a567:	xor    DWORD PTR [ebp+0x4a],ecx
  40a56a:	js     0x40a51b
  40a56c:	sub    DWORD PTR [esp+eax*2],edi
  40a56f:	aas    
  40a570:	xchg   ecx,eax
  40a571:	adc    al,0x8e
  40a573:	jl     0x40a5d2
  40a575:	cmp    esi,edx
  40a577:	pop    ecx
  40a578:	pushf  
  40a579:	jnp    0x40a53f
  40a57b:	pushf  
  40a57c:	jmp    0x298:0xb27fd5c3
  40a583:	jno    0x40a5cd
  40a585:	fwait
  40a586:	inc    edi
  40a587:	mov    ds:0xc269867d,eax
  40a58c:	call   0x76e2:0x755a1e38
  40a593:	inc    esi
  40a594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a595:	mov    ds:0x16ce1066,eax
  40a59a:	and    esp,edi
  40a59c:	jg     0x40a56b
  40a59e:	enter  0xce36,0x14
  40a5a2:	cmp    al,0x87
  40a5a4:	int3   
  40a5a5:	sub    BYTE PTR [edx],cl
  40a5a7:	(bad)  
  40a5a8:	mov    bh,0xee
  40a5aa:	xchg   BYTE PTR [edx],ah
  40a5ac:	mov    esp,0x25979db1
  40a5b1:	pushf  
  40a5b2:	lock mov edi,0x21dcbbbb
  40a5b8:	shr    DWORD PTR [esi-0x5ada003b],cl
  40a5be:	cld    
  40a5bf:	int3   
  40a5c0:	imul   ebx,DWORD PTR [eax],0xe5ebc44a
  40a5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c7:	aaa    
  40a5c8:	adc    al,0xb9
  40a5ca:	sub    al,0xba
  40a5cc:	push   ecx
  40a5cd:	jbe    0x40a551
  40a5cf:	sub    eax,0x3a80cdfc
  40a5d4:	mov    dl,ch
  40a5d6:	add    esi,DWORD PTR [ebx+0x3]
  40a5d9:	pop    ebx
  40a5da:	lahf   
  40a5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5dc:	jo     0x40a608
  40a5de:	(bad)  
  40a5df:	jecxz  0x40a5a0
  40a5e1:	xor    DWORD PTR [ebx-0xe6cdbcf],ecx
  40a5e7:	loope  0x40a585
  40a5e9:	dec    esi
  40a5ea:	mov    gs,WORD PTR [eax-0x1c47df52]
  40a5f0:	leave  
  40a5f1:	inc    ecx
  40a5f2:	mov    ds:0x75adab6e,al
  40a5f7:	popa   
  40a5f8:	push   cs
  40a5f9:	cmp    DWORD PTR [ecx-0x44eb1e79],ebp
  40a5ff:	fnstcw WORD PTR [ebx]
  40a601:	adc    al,0x43
  40a603:	shl    DWORD PTR [edx+0x55912c5],0xc0
  40a60a:	or     eax,0xc8740579
  40a60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a610:	fidiv  DWORD PTR [ecx+ebp*2]
  40a613:	and    bl,BYTE PTR [edx+0x1f]
  40a616:	mov    bh,BYTE PTR [esi]
  40a618:	mov    dh,BYTE PTR [edi+eax*8-0x7d]
  40a61c:	cdq    
  40a61d:	jge    0x40a66c
  40a61f:	repnz faddp st(5),st
  40a622:	stc    
  40a623:	sbb    eax,DWORD PTR [ebp+0x6c]
  40a626:	push   eax
  40a627:	(bad)  
  40a628:	mov    ds:0x3a8aaa68,al
  40a62d:	pop    edi
  40a62e:	cmp    DWORD PTR [esi-0x18],ebx
  40a631:	loopne 0x40a662
  40a633:	out    dx,al
  40a634:	imul   edi,ebp,0xffffffb9
  40a637:	dec    esi
  40a638:	and    esp,DWORD PTR [eax-0x2b]
  40a63b:	mov    esi,0x86bd8ed5
  40a640:	jne    0x40a5e1
  40a642:	movhps xmm4,QWORD PTR [edi]
  40a645:	jmp    0x2069924f
  40a64a:	int    0x6f
  40a64c:	mov    eax,0x8de45b9
  40a651:	jae    0x40a631
  40a653:	sub    bh,bl
  40a655:	cmp    al,0x32
  40a657:	inc    esp
  40a658:	shr    DWORD PTR [esi+eiz*2-0x42],cl
  40a65c:	jle    0x40a686
  40a65e:	hlt    
  40a65f:	fwait
  40a660:	sub    esp,DWORD PTR ds:0x7ba5ffcc
  40a666:	arpl   WORD PTR [esi],si
  40a668:	xor    esi,esi
  40a66a:	xor    DWORD PTR [eax-0x6047881],0x18
  40a671:	mov    esi,0x29955bec
  40a676:	xor    al,0x45
  40a678:	mov    bl,0x19
  40a67a:	mov    edi,0xff474d3f
  40a67f:	(bad)  
  40a680:	jns    0x40a623
  40a682:	cld    
  40a683:	cmp    al,0x50
  40a685:	fcom   DWORD PTR [ebx+edx*2-0x7e7377d5]
  40a68c:	mov    edx,0xa3b1b7d6
  40a691:	jno    0x40a68d
  40a693:	es mov BYTE PTR fs:[ecx+0x58],dl
  40a698:	int    0xb0
  40a69a:	aam    0x89
  40a69c:	call   0xb163:0x9d1e69b6
  40a6a3:	sti    
  40a6a4:	daa    
  40a6a5:	ins    BYTE PTR es:[edi],dx
  40a6a6:	pop    esi
  40a6a7:	in     eax,dx
  40a6a8:	fcmovnbe st,st(4)
  40a6aa:	mov    ecx,0x47fd56e7
  40a6af:	pushw  cs
  40a6b1:	(bad)  
  40a6b3:	and    eax,0xc9556484
  40a6b8:	ficom  WORD PTR [edx]
  40a6ba:	cmp    esp,DWORD PTR [edi+0x67]
  40a6bd:	mov    esp,0xaaa9c888
  40a6c2:	fmulp  st(6),st
  40a6c4:	sub    ah,BYTE PTR [ecx+0x40]
  40a6c7:	rol    DWORD PTR [esi],cl
  40a6c9:	or     al,0x45
  40a6cb:	iret   
  40a6cc:	push   ds
  40a6cd:	(bad)  
  40a6ce:	jb     0x40a6a5
  40a6d0:	scas   eax,DWORD PTR es:[edi]
  40a6d1:	sar    ecx,cl
  40a6d3:	into   
  40a6d4:	(bad)  
  40a6d5:	push   0xffffffd0
  40a6d7:	(bad)  
  40a6d8:	jge    0x40a6b5
  40a6da:	push   ebp
  40a6db:	jne    0x40a6e3
  40a6dd:	xor    ebx,0xfffffffa
  40a6e0:	mov    edx,0xb79c4c89
  40a6e5:	mov    eax,0x26d476ea
  40a6ea:	imul   edi,DWORD PTR [edx-0x28],0xffffff93
  40a6ee:	imul   edx,DWORD PTR [edi+0x3f],0xffffffd2
  40a6f2:	sbb    edx,DWORD PTR [esi-0x13]
  40a6f5:	enter  0x659b,0xda
  40a6f9:	sub    BYTE PTR [ebx+0x3654124c],bl
  40a6ff:	test   eax,0x17812ed2
  40a704:	mov    ds:0x44da5388,al
  40a709:	xchg   ebp,eax
  40a70a:	add    DWORD PTR [ecx+0x781c67a2],edx
  40a710:	aam    0x1d
  40a712:	xor    eax,0xec63fee0
  40a717:	iret   
  40a718:	je     0x40a71b
  40a71a:	outs   dx,BYTE PTR ds:[esi]
  40a71b:	inc    eax
  40a71c:	pop    ss
  40a71d:	and    BYTE PTR [eax],al
  40a71f:	jno    0x40a79a
  40a721:	sub    eax,0x40f3c5cc
  40a726:	je     0x40a761
  40a728:	push   ss
  40a729:	xlat   BYTE PTR ds:[ebx]
  40a72a:	add    DWORD PTR [ebp-0x2a],eax
  40a72d:	daa    
  40a72e:	mov    ds:0xba150e54,eax
  40a733:	(bad)  
  40a734:	retf   0x19c4
  40a737:	ror    BYTE PTR [ecx-0x4a],0xb2
  40a73b:	inc    ebp
  40a73c:	mov    ah,0x7f
  40a73e:	les    ebx,FWORD PTR [ecx+0x6cc95245]
  40a744:	xchg   ebx,eax
  40a745:	fs or  dl,dl
  40a748:	aaa    
  40a749:	push   cs
  40a74a:	mov    edi,DWORD PTR [edi+0x1c2db301]
  40a750:	outs   dx,BYTE PTR ds:[esi]
  40a751:	rcr    BYTE PTR [esi+0x59],cl
  40a754:	int    0x80
  40a756:	call   0xb84b3112
  40a75b:	es rol dl,1
  40a75e:	outs   dx,DWORD PTR ds:[esi]
  40a75f:	fidiv  DWORD PTR [edx]
  40a761:	jb     0x40a76e
  40a763:	xchg   ebp,eax
  40a764:	into   
  40a765:	mov    dh,0x1b
  40a767:	sub    al,0x30
  40a769:	cmp    ah,BYTE PTR [ebx-0x2f450c3c]
  40a76f:	clc    
  40a770:	scas   al,BYTE PTR es:[edi]
  40a771:	popa   
  40a772:	jmp    0xd47cf023
  40a777:	test   ah,bh
  40a779:	lock (bad) 
  40a77c:	jmp    0x5874:0x66be6c59
  40a783:	inc    esp
  40a784:	loop   0x40a7e6
  40a786:	movd   DWORD PTR [eax+0x2d],mm4
  40a78a:	test   DWORD PTR [esi+edx*8+0x2466c3e7],esi
  40a791:	aaa    
  40a792:	pop    ds
  40a793:	adc    al,0x8b
  40a795:	ror    BYTE PTR [ecx-0x5b660d08],cl
  40a79b:	inc    esi
  40a79c:	adc    edx,eax
  40a79e:	xchg   ebx,eax
  40a79f:	fcom   QWORD PTR [esi-0x1b]
  40a7a2:	xor    ebp,edx
  40a7a4:	popa   
  40a7a5:	mov    BYTE PTR [edi],dl
  40a7a7:	lods   al,BYTE PTR ds:[esi]
  40a7a8:	push   es
  40a7a9:	lea    ecx,[ebp-0x59]
  40a7ac:	mov    DWORD PTR [esi],0x551ea346
  40a7b2:	mov    esp,gs
  40a7b4:	into   
  40a7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b6:	xchg   DWORD PTR [ebx+0x14],edx
  40a7b9:	cmp    al,0x7b
  40a7bb:	add    eax,DWORD PTR [ecx]
  40a7bd:	push   cs
  40a7be:	rcr    ebx,cl
  40a7c0:	mov    esp,0x36e22dfb
  40a7c5:	add    eax,0xf48266d3
  40a7ca:	stc    
  40a7cb:	out    0x48,eax
  40a7cd:	xchg   ebp,eax
  40a7ce:	pop    ebp
  40a7cf:	add    al,0x38
  40a7d1:	pop    ss
  40a7d2:	mov    ds:0xe7f9f2,eax
  40a7d7:	xchg   edx,eax
  40a7d8:	dec    ebx
  40a7d9:	inc    esp
  40a7da:	gs loopne 0x40a829
  40a7dd:	adc    BYTE PTR cs:[esp+ecx*8],ah
  40a7e1:	dec    esp
  40a7e2:	xchg   esi,eax
  40a7e3:	fs cs int 0x7e
  40a7e7:	xlat   BYTE PTR ds:[ebx]
  40a7e8:	cs call 0xaa262cdb
  40a7ee:	cmp    BYTE PTR [edx+0x22],dh
  40a7f1:	mov    ebx,?
  40a7f3:	in     eax,dx
  40a7f4:	jo     0x40a84a
  40a7f6:	(bad)  
  40a7f7:	iret   
  40a7f8:	push   eax
  40a7f9:	sub    DWORD PTR [edi-0x47],0x5f177a0b
  40a800:	jmp    0x4b54:0x9825ba3a
  40a807:	ja     0x40a815
  40a809:	pushf  
  40a80a:	or     edx,DWORD PTR [ecx+0x7f0bcb30]
  40a810:	mov    dl,0x28
  40a812:	ror    DWORD PTR [ecx+0x37],0x47
  40a816:	jmp    0xc71883f7
  40a81b:	or     edi,DWORD PTR [eax+0x159c6be1]
  40a821:	and    DWORD PTR [ebx-0x3357cd7],eax
  40a827:	cdq    
  40a828:	in     eax,dx
  40a829:	out    dx,eax
  40a82a:	in     eax,dx
  40a82b:	jmp    0x59be20a2
  40a830:	push   ebx
  40a831:	nop
  40a832:	xor    al,cl
  40a834:	lock add edi,0x52f98841
  40a83b:	pop    eax
  40a83c:	dec    ecx
  40a83d:	push   ecx
  40a83e:	ins    BYTE PTR es:[edi],dx
  40a83f:	and    bl,BYTE PTR [eax]
  40a841:	int3   
  40a842:	push   esp
  40a843:	cmp    edi,DWORD PTR [ebx+0x40160f00]
  40a849:	loop   0x40a863
  40a84b:	adc    DWORD PTR es:[edi-0x2051417],esp
  40a852:	jb     0x40a8b7
  40a854:	and    BYTE PTR [ebx+0x5c],ch
  40a857:	ss push ss
  40a859:	xor    eax,0xa0535ce6
  40a85e:	test   BYTE PTR [ecx+0x19c130d4],cl
  40a864:	inc    edx
  40a865:	jbe    0x40a87d
  40a867:	dec    edx
  40a868:	test   eax,0x37bcd4ab
  40a86d:	(bad)  
  40a86e:	sti    
  40a86f:	in     eax,0x96
  40a871:	aad    0x52
  40a873:	inc    ebx
  40a874:	outs   dx,BYTE PTR ds:[esi]
  40a875:	and    eax,0x47f1bdc9
  40a87a:	cmp    esp,DWORD PTR [esi-0x69]
  40a87d:	sbb    BYTE PTR [ebp+0x36],dh
  40a880:	pop    ebx
  40a881:	rol    BYTE PTR [esi-0x1c],cl
  40a884:	pop    ds
  40a885:	jne    0x40a87d
  40a887:	jecxz  0x40a8d3
  40a889:	adc    eax,0xc4c44fb8
  40a88e:	adc    eax,DWORD PTR [ebx-0xf]
  40a891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a892:	lock into 
  40a894:	loope  0x40a82e
  40a896:	mov    al,ds:0xd29499a
  40a89b:	mov    ebx,0x20bfdfed
  40a8a0:	sbb    al,0xe7
  40a8a2:	aas    
  40a8a3:	cmp    DWORD PTR [ebp+0x31e8b6f0],esp
  40a8a9:	jmp    0x1746:0x8893a9c8
  40a8b0:	jg     0x40a835
  40a8b2:	sub    DWORD PTR [esi],ecx
  40a8b4:	lea    ebp,[ebx+0xa]
  40a8b7:	call   0x11e7:0xbd13a34
  40a8be:	inc    esp
  40a8bf:	jp     0x40a8b1
  40a8c1:	test   DWORD PTR [esi],ecx
  40a8c3:	(bad)
  40a8c7:	gs pop es
  40a8c9:	out    0xae,eax
  40a8cb:	jle    0x40a84d
  40a8cd:	sbb    dl,al
  40a8cf:	adc    DWORD PTR [ebp+0x29],eax
  40a8d2:	fs stc 
  40a8d4:	mov    esp,0xf7c340ce
  40a8d9:	test   al,0x1b
  40a8db:	bsf    esi,DWORD PTR [esi-0x5eb9621]
  40a8e2:	out    dx,eax
  40a8e3:	mov    ah,0x78
  40a8e5:	add    ecx,ebx
  40a8e7:	call   0xb474:0xdb414de0
  40a8ee:	sahf   
  40a8ef:	jle    0x40a8e1
  40a8f1:	scas   eax,DWORD PTR es:[edi]
  40a8f2:	push   esi
  40a8f3:	mov    eax,0xca1289e2
  40a8f8:	sub    edx,ebp
  40a8fa:	cmp    BYTE PTR [esi+0xf59963e],bh
  40a900:	int    0xf4
  40a902:	pop    eax
  40a903:	mov    esp,0xa3380277
  40a908:	add    eax,0x48037d44
  40a90d:	shr    BYTE PTR gs:[ebx],cl
  40a910:	pop    ds
  40a911:	add    al,0x56
  40a913:	xor    dl,BYTE PTR [eax+0x7d]
  40a916:	adc    al,0x0
  40a918:	or     eax,DWORD PTR [ebp-0x74]
  40a91b:	or     BYTE PTR gs:[edi-0x1f],ah
  40a91f:	sbb    edx,DWORD PTR [ebx+0x6439f852]
  40a925:	(bad)  
  40a926:	rcr    BYTE PTR [eax-0x7183e88f],0xd
  40a92d:	sub    ah,bh
  40a92f:	fld    TBYTE PTR [edi+0x5dc5f700]
  40a935:	int3   
  40a936:	scas   al,BYTE PTR es:[edi]
  40a937:	or     bl,BYTE PTR [edi-0x7d0c2646]
  40a93d:	xchg   ecx,eax
  40a93e:	xchg   ecx,eax
  40a93f:	mov    al,ds:0x657ff050
  40a944:	mov    DWORD PTR [ebp+0x6c6cad8f],esi
  40a94a:	jnp    0x40a8d9
  40a94c:	cld    
  40a94d:	les    ebx,FWORD PTR [edi-0x548a285c]
  40a953:	dec    esp
  40a954:	pop    edi
  40a955:	cmp    eax,0x8929fd82
  40a95a:	stos   DWORD PTR es:[edi],eax
  40a95b:	pop    ds
  40a95c:	fidiv  DWORD PTR [edx+0x51]
  40a95f:	sbb    al,0xdc
  40a961:	mov    ebx,0x4b22ce61
  40a966:	pop    edi
  40a967:	imul   edi,ecx,0x6
  40a96a:	pop    edi
  40a96b:	sub    eax,0x918952cd
  40a970:	add    eax,ecx
  40a972:	adc    BYTE PTR [ebp-0x64],bl
  40a975:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a977:	sar    BYTE PTR gs:[ebx],0x45
  40a97b:	iret   
  40a97c:	cwde   
  40a97d:	mov    dl,0x64
  40a97f:	mov    al,ds:0xdb0bd876
  40a984:	dec    esp
  40a985:	sub    bl,BYTE PTR [esi-0x6a]
  40a988:	mov    esp,0x16d11efd
  40a98d:	add    eax,0x7b2b2279
  40a992:	mov    bl,0xfe
  40a994:	outs   dx,BYTE PTR ds:[esi]
  40a995:	sub    ch,dh
  40a997:	jecxz  0x40a9ad
  40a999:	jnp    0x40a9be
  40a99b:	pushf  
  40a99c:	cmp    BYTE PTR [ebx+ebp*8-0x14],cl
  40a9a0:	mov    BYTE PTR [ebx+ecx*1+0x3c],bl
  40a9a4:	push   ss
  40a9a5:	fisubr WORD PTR [ebx+0x6f]
  40a9a8:	loopne 0x40a9d2
  40a9aa:	inc    edi
  40a9ab:	mov    bh,0x9f
  40a9ad:	lods   eax,DWORD PTR ds:[esi]
  40a9ae:	mov    bl,0xc8
  40a9b0:	int    0x94
  40a9b2:	ds mov eax,0x2c81ac10
  40a9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b9:	inc    ebp
  40a9ba:	fstp   st(6)
  40a9bc:	test   al,0x1d
  40a9be:	and    dh,BYTE PTR [edi-0x27]
  40a9c1:	mov    eax,0xb98fab01
  40a9c6:	arpl   WORD PTR [edi],cx
  40a9c8:	fcomi  st,st(4)
  40a9ca:	pop    esp
  40a9cb:	pusha  
  40a9cc:	xchg   edi,eax
  40a9cd:	mov    eax,ds:0xa8f528a8
  40a9d2:	mov    bl,0x1f
  40a9d4:	jae    0x40a984
  40a9d6:	sbb    DWORD PTR [ebx],edx
  40a9d8:	(bad)  
  40a9da:	cld    
  40a9db:	push   edx
  40a9dc:	mov    ebx,0x409753f
  40a9e1:	xchg   edx,eax
  40a9e2:	enter  0x8a28,0x99
  40a9e6:	std    
  40a9e7:	(bad)  
  40a9e8:	ss daa 
  40a9ea:	lods   eax,DWORD PTR ds:[esi]
  40a9eb:	cmp    BYTE PTR [esi],bl
  40a9ed:	xor    esp,DWORD PTR [ebx-0x1b]
  40a9f0:	push   ebx
  40a9f1:	aaa    
  40a9f2:	add    eax,DWORD PTR [esi-0x33fd9999]
  40a9f8:	xor    esi,DWORD PTR [eax-0x52911619]
  40a9fe:	in     al,0x6f
  40aa00:	inc    ecx
  40aa01:	inc    esp
  40aa02:	push   esi
  40aa03:	dec    edx
  40aa04:	into   
  40aa05:	test   al,0xce
  40aa07:	dec    eax
  40aa08:	stc    
  40aa09:	ins    DWORD PTR es:[edi],dx
  40aa0a:	and    eax,0xf853f03e
  40aa0f:	out    0x41,eax
  40aa11:	loop   0x40aa4a
  40aa13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa14:	push   esi
  40aa15:	int    0x84
  40aa17:	mov    cl,0x21
  40aa19:	pusha  
  40aa1a:	xchg   esp,eax
  40aa1b:	xchg   ebx,eax
  40aa1c:	mov    bl,0xf7
  40aa1e:	mov    ecx,0x2de9ea3b
  40aa23:	xchg   esp,eax
  40aa24:	outs   dx,DWORD PTR ds:[esi]
  40aa25:	(bad)  
  40aa26:	jnp    0x40aaa3
  40aa28:	das    
  40aa29:	les    ebx,FWORD PTR [ebp-0x71789445]
  40aa2f:	push   esp
  40aa30:	push   cs
  40aa31:	pusha  
  40aa32:	stc    
  40aa33:	lock push ss
  40aa35:	cmp    DWORD PTR [edi],eax
  40aa37:	rol    BYTE PTR [edi-0x52066290],1
  40aa3d:	cmp    ebx,DWORD PTR [si-0x73ab]
  40aa42:	cmp    eax,0xec544514
  40aa47:	out    dx,eax
  40aa48:	(bad)  
  40aa4a:	popf   
  40aa4b:	push   esi
  40aa4c:	cli    
  40aa4d:	and    BYTE PTR [ebx],0x8e
  40aa50:	scas   al,BYTE PTR es:[edi]
  40aa51:	cwde   
  40aa52:	loope  0x40aa3e
  40aa54:	mov    eax,ds:0x973dd1f9
  40aa59:	pop    ecx
  40aa5a:	retf   
  40aa5b:	push   0xf4b3556e
  40aa60:	jnp    0x40aa8a
  40aa62:	call   0xaeae:0x49c43b6e
  40aa69:	(bad)  
  40aa6a:	jecxz  0x40aace
  40aa6c:	sub    BYTE PTR [esi+0xd3a7b90],bl
  40aa72:	xor    eax,0x45f86b4f
  40aa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa78:	push   es
  40aa79:	pop    ecx
  40aa7a:	pop    esp
  40aa7b:	pop    edx
  40aa7c:	cmp    DWORD PTR [edx-0x5b],eax
  40aa7f:	mov    eax,ds:0x3077e3ef
  40aa84:	je     0x40aa08
  40aa86:	xlat   BYTE PTR ds:[ebx]
  40aa87:	dec    esi
  40aa88:	mul    BYTE PTR [ecx-0x1f]
  40aa8b:	push   ebx
  40aa8c:	pop    ebp
  40aa8d:	(bad)  
  40aa8e:	mov    eax,ds:0xbac133bb
  40aa93:	(bad)  [edx+0x32]
  40aa96:	add    BYTE PTR [ebx],al
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xf956e2bc
  40aacc:	loopne 0x40ab22
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x3f]
  40aad6:	adc    BYTE PTR ds:0x1e9c938b,0x12
  40aadd:	jl     0x40aa7d
  40aadf:	lea    edi,[eax+0x5e]
  40aae2:	retf   0x89c7
  40aae5:	and    BYTE PTR [ebp-0x28bcd516],ch
  40aaeb:	bound  edx,QWORD PTR [esi]
  40aaed:	cmp    eax,0x9a6ca695
  40aaf2:	cld    
  40aaf3:	jne    0x40ab14
  40aaf5:	(bad)  
  40aaf6:	loop   0x40ab1a
  40aaf8:	mov    esi,0x818f8abe
  40aafd:	push   0xffffffdf
  40aaff:	add    ebx,DWORD PTR [ecx-0x3b]
  40ab02:	push   ebp
  40ab03:	shl    DWORD PTR [edi-0x2257aeee],0x91
  40ab0a:	fs jge 0x40ab1a
  40ab0d:	mov    eax,ds:0x93aac506
  40ab12:	mov    ds:0xe3acf47d,al
  40ab17:	or     ah,cl
  40ab19:	int    0x41
  40ab1b:	enter  0x39e,0x1
  40ab1f:	and    ebp,DWORD PTR [eax+0x49]
  40ab22:	mov    ecx,0x7b5d0c3b
  40ab27:	ret    0xf27c
  40ab2a:	es lock pop esi
  40ab2d:	mov    bh,bl
  40ab2f:	or     DWORD PTR [ecx+eiz*2],ecx
  40ab32:	inc    ebx
  40ab33:	lahf   
  40ab34:	cmp    DWORD PTR [ebx+0x2e17bc9a],0x8b45d468
  40ab3e:	ins    BYTE PTR es:[edi],dx
  40ab3f:	lock lods eax,DWORD PTR ds:[esi]
  40ab41:	or     ebp,ecx
  40ab43:	imul   edi,DWORD PTR [ebp-0x2cc1e9c8],0xffffff8f
  40ab4a:	pop    esp
  40ab4b:	scas   eax,DWORD PTR es:[edi]
  40ab4c:	ror    BYTE PTR [edx+eiz*8],cl
  40ab4f:	retf   
  40ab50:	hlt    
  40ab51:	leave  
  40ab52:	loope  0x40ab44
  40ab54:	pusha  
  40ab55:	int    0x19
  40ab57:	rcr    BYTE PTR [edx],1
  40ab59:	out    dx,al
  40ab5a:	add    dh,BYTE PTR [edx+0x5d]
  40ab5d:	mov    al,ds:0x2742ae42
  40ab62:	sbb    esp,DWORD PTR [edx-0x3c]
  40ab65:	push   ebx
  40ab66:	or     eax,0x27182184
  40ab6b:	xchg   ebx,eax
  40ab6c:	dec    eax
  40ab6d:	call   0x4c120440
  40ab72:	popa   
  40ab73:	jecxz  0x40ab48
  40ab75:	jp     0x40ab1c
  40ab77:	iret   
  40ab78:	lods   eax,DWORD PTR ds:[esi]
  40ab79:	jne    0x40ab10
  40ab7b:	aad    0x9f
  40ab7d:	push   ss
  40ab7e:	test   dl,dl
  40ab80:	sub    BYTE PTR [ecx],al
  40ab82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab83:	inc    edi
  40ab84:	dec    edx
  40ab85:	stc    
  40ab86:	(bad)  
  40ab87:	rcr    DWORD PTR [eax],1
  40ab89:	in     eax,dx
  40ab8a:	dec    edi
  40ab8b:	jb     0x40ab39
  40ab8d:	(bad)
  40ab91:	std    
  40ab92:	and    BYTE PTR [esi+0x6e],dl
  40ab95:	lea    edx,[esi+0x37185d62]
  40ab9b:	fstp   TBYTE PTR ds:0xa46ca8f2
  40aba1:	arpl   sp,bx
  40aba3:	push   ss
  40aba4:	and    ebp,DWORD PTR [ebx+0x681864d1]
  40abaa:	pop    esi
  40abab:	bsr    edx,esp
  40abae:	fild   WORD PTR [edx+0x4e]
  40abb1:	aad    0xbf
  40abb3:	shl    BYTE PTR [ecx+0x7],0xd6
  40abb7:	in     al,dx
  40abb8:	ret    0x9a1b
  40abbb:	push   edi
  40abbc:	dec    ecx
  40abbd:	sbb    cl,al
  40abbf:	inc    BYTE PTR [edi+0xd8a6835]
  40abc5:	fnstenv gs:[ebp-0x153205a4]
  40abcc:	lea    esi,[ebx-0x3be81fa6]
  40abd2:	stos   DWORD PTR es:[edi],eax
  40abd3:	popf   
  40abd4:	jmp    0xd47cc6ab
  40abd9:	mov    dh,0x39
  40abdb:	xchg   BYTE PTR [edi+0xf9d299b],bl
  40abe1:	fadd   DWORD PTR [ebx-0x51]
  40abe4:	and    al,0x5b
  40abe6:	pop    ecx
  40abe7:	rcr    DWORD PTR [ebx+0x31],cl
  40abea:	hlt    
  40abeb:	dec    esp
  40abec:	(bad)  
  40abed:	adc    DWORD PTR [ebp-0x6b],esp
  40abf0:	pop    edi
  40abf1:	jo     0x40ac65
  40abf3:	popf   
  40abf4:	xor    DWORD PTR [esi+0x59df47e9],eax
  40abfa:	ja     0x7facf5e8
  40ac00:	push   ebx
  40ac01:	xor    DWORD PTR [esp+ecx*2],0xffffffc0
  40ac05:	sti    
  40ac06:	jle    0x40ac78
  40ac08:	mov    ?,WORD PTR [esi+0x10]
  40ac0b:	pusha  
  40ac0c:	(bad)  
  40ac0d:	pusha  
  40ac0e:	fwait
  40ac0f:	adc    edx,DWORD PTR [eax+0x17]
  40ac12:	pop    esi
  40ac13:	mov    edi,0x80ab596b
  40ac18:	xor    ah,dh
  40ac1a:	jp     0x40abff
  40ac1c:	cmp    cl,BYTE PTR [eax]
  40ac1e:	bound  esp,QWORD PTR [ecx+ebx*4-0x1]
  40ac22:	cdq    
  40ac23:	test   DWORD PTR [ebx+0x6c5a7fc5],eax
  40ac29:	shr    BYTE PTR [ecx+0x753480d0],1
  40ac2f:	jmp    0x7db8:0xc4141479
  40ac36:	mov    ebx,0x36cedd2c
  40ac3b:	dec    esi
  40ac3c:	mov    dh,0xaf
  40ac3e:	adc    edi,0x19
  40ac41:	and    eax,0xd00601e6
  40ac46:	mov    ah,0xaa
  40ac48:	(bad)  
  40ac49:	retf   
  40ac4a:	push   ebp
  40ac4b:	dec    ebp
  40ac4c:	mov    edi,0xb550e950
  40ac51:	dec    ecx
  40ac52:	rcr    BYTE PTR [edi],1
  40ac54:	sbb    eax,0x2c4ac3b7
  40ac59:	mov    edi,0x65e6b344
  40ac5e:	retf   
  40ac5f:	jge    0x40acb0
  40ac61:	pop    ebx
  40ac62:	push   ecx
  40ac63:	int3   
  40ac64:	mov    cs,esp
  40ac66:	aad    0x3d
  40ac68:	and    esi,edx
  40ac6a:	fs nop
  40ac6c:	pop    edi
  40ac6d:	scas   al,BYTE PTR es:[edi]
  40ac6e:	lods   al,BYTE PTR ds:[esi]
  40ac6f:	push   eax
  40ac70:	or     DWORD PTR [eax],0x47aff2dd
  40ac76:	popa   
  40ac77:	push   ds
  40ac78:	push   edx
  40ac79:	loopne 0x40ac8d
  40ac7b:	sahf   
  40ac7c:	add    al,0x44
  40ac7e:	(bad)  
  40ac7f:	mov    dh,0x45
  40ac81:	xlat   BYTE PTR ds:[ebx]
  40ac82:	push   0xffffffaa
  40ac84:	push   esi
  40ac85:	push   edx
  40ac86:	inc    DWORD PTR [edx]
  40ac88:	sti    
  40ac89:	cdq    
  40ac8a:	cmp    al,0x0
  40ac8c:	test   al,0xb4
  40ac8e:	aas    
  40ac8f:	push   ecx
  40ac90:	mov    esp,0xc1ed5722
  40ac95:	outs   dx,DWORD PTR ds:[esi]
  40ac96:	jle    0x40acc2
  40ac98:	stc    
  40ac99:	int3   
  40ac9a:	mov    eax,ds:0x138f0323
  40ac9f:	fs into 
  40aca1:	sbb    BYTE PTR [ebx+ebx*4-0x36],dh
  40aca5:	add    eax,0x6548df83
  40acaa:	mov    ebp,0x2c78cb05
  40acaf:	jecxz  0x40ac5e
  40acb1:	aad    0xd3
  40acb3:	cld    
  40acb4:	or     eax,DWORD PTR [edx]
  40acb6:	inc    ecx
  40acb7:	call   0xe248ba49
  40acbc:	and    al,0xdc
  40acbe:	mov    ebx,0xda5187c
  40acc3:	pop    esi
  40acc4:	popa   
  40acc5:	push   0xffffffb2
  40acc7:	ret    
  40acc8:	into   
  40acc9:	ret    0x1566
  40accc:	jmp    0x40acc6
  40acce:	popa   
  40accf:	dec    eax
  40acd0:	xchg   edi,eax
  40acd1:	bound  esp,QWORD PTR [edi]
  40acd3:	aaa    
  40acd4:	outs   dx,BYTE PTR ds:[esi]
  40acd5:	mov    eax,ds:0x71eb0de0
  40acda:	nop
  40acdb:	out    0x48,al
  40acdd:	mov    ds:0x241a74f6,al
  40ace2:	into   
  40ace3:	retf   0xb4c1
  40ace6:	retf   
  40ace7:	mov    ebp,DWORD PTR [ebp+edx*2-0x3e7aae67]
  40acee:	scas   al,BYTE PTR es:[edi]
  40acef:	mov    BYTE PTR [eax],dh
  40acf1:	mov    dh,0xb
  40acf3:	push   esp
  40acf4:	adc    DWORD PTR [ecx+0x758d0d4a],0xffffffb1
  40acfb:	sbb    ah,BYTE PTR [eax]
  40acfd:	(bad)  
  40acfe:	fcmovnbe st,st(6)
  40ad00:	and    al,0x69
  40ad02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad03:	dec    ebp
  40ad04:	cmc    
  40ad05:	jae    0x40acec
  40ad07:	push   ds
  40ad08:	mov    ecx,0x8d0ebd0d
  40ad0d:	push   esp
  40ad0e:	test   DWORD PTR [ecx-0x57],ebx
  40ad11:	adc    cl,BYTE PTR [edi]
  40ad13:	pusha  
  40ad14:	fnsave [edi+0x1f6de37b]
  40ad1a:	xchg   ebp,eax
  40ad1b:	fs in  al,dx
  40ad1d:	and    eax,0x266a7409
  40ad22:	xor    dl,dl
  40ad24:	loop   0x40ace4
  40ad26:	pushf  
  40ad27:	add    edi,DWORD PTR [edi-0x67e464fa]
  40ad2d:	imul   esi,DWORD PTR [edx-0x7e],0x13
  40ad31:	cli    
  40ad32:	xor    DWORD PTR [eax],ebx
  40ad34:	enter  0x97a0,0x52
  40ad38:	mov    ah,0xc0
  40ad3a:	mov    edi,0xa4d9c3e1
  40ad3f:	and    edx,DWORD PTR ds:0x9f776d81
  40ad45:	mov    ebp,0xc991f13c
  40ad4a:	pop    ds
  40ad4b:	cmp    esi,DWORD PTR ds:0xe2fd1a34
  40ad51:	pop    esi
  40ad52:	push   0x3
  40ad54:	cmp    dh,dl
  40ad56:	adc    eax,0x7083bad2
  40ad5b:	mov    eax,0xa7bc22ea
  40ad60:	mov    edi,0xb97a0399
  40ad65:	mov    ah,0xe5
  40ad67:	cs mov ebp,0x7aefc1a7
  40ad6d:	push   esp
  40ad6e:	jb     0x40ad62
  40ad70:	sub    DWORD PTR [edi],0x99e3ee8c
  40ad76:	loope  0x40ad84
  40ad78:	sub    eax,0x4dbfa80e
  40ad7d:	retf   
  40ad7e:	jnp    0x40ad7e
  40ad80:	les    ebx,FWORD PTR [eax+ecx*4+0x52]
  40ad84:	icebp  
  40ad85:	mov    ebp,DWORD PTR [ebp+0x68]
  40ad88:	push   ebx
  40ad89:	rol    BYTE PTR [ebx],1
  40ad8b:	aam    0x62
  40ad8d:	popa   
  40ad8e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad90:	push   esi
  40ad91:	or     BYTE PTR [edx+0x6e],bh
  40ad94:	add    ecx,DWORD PTR [edi+0x2e]
  40ad97:	inc    edi
  40ad98:	scas   eax,DWORD PTR es:[edi]
  40ad99:	je     0x40ad1e
  40ad9b:	rol    DWORD PTR [edx+0x5b],0x2a
  40ad9f:	rol    DWORD PTR [ebp-0x23],1
  40ada2:	pmulhw mm7,QWORD PTR [ebx+0x36]
  40ada6:	jns    0x40ad46
  40ada8:	xor    eax,0xca291bca
  40adad:	xchg   esp,eax
  40adae:	call   FWORD PTR [edi-0x2f8401e7]
  40adb4:	sahf   
  40adb5:	xchg   edx,eax
  40adb6:	dec    eax
  40adb7:	cmp    ebp,DWORD PTR [ecx+0x7b]
  40adba:	outs   dx,BYTE PTR ds:[esi]
  40adbb:	push   esi
  40adbc:	cli    
  40adbd:	jp     0x40ad76
  40adbf:	repnz cmp dl,bh
  40adc2:	hlt    
  40adc3:	scas   eax,DWORD PTR es:[edi]
  40adc4:	aaa    
  40adc5:	cmp    dl,BYTE PTR [edi]
  40adc7:	loopne 0x40ade1
  40adc9:	or     DWORD PTR [eax-0x28],ecx
  40adcc:	mov    al,0x59
  40adce:	(bad)  
  40adcf:	leave  
  40add0:	push   ecx
  40add1:	push   edi
  40add2:	or     BYTE PTR [ebp-0x2de02ad4],bh
  40add8:	inc    ecx
  40add9:	jg     0x40ae28
  40addb:	mov    ah,0xf7
  40addd:	adc    DWORD PTR [ecx-0x2e78732b],esp
  40ade3:	mov    ebx,0x24eb5a62
  40ade8:	push   ecx
  40ade9:	lock mov edx,0xa54c6f4c
  40adef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adf0:	pop    ebp
  40adf1:	imul   esp,edi,0xfffffffd
  40adf4:	add    DWORD PTR [eax],ebp
  40adf6:	rcl    DWORD PTR [edx+edi*1-0x1],1
  40adfa:	and    cl,ah
  40adfc:	icebp  
  40adfd:	scas   al,BYTE PTR es:[edi]
  40adfe:	cdq    
  40adff:	sbb    DWORD PTR [eax-0x60],edi
  40ae02:	push   es
  40ae03:	repz mov WORD PTR [edx],ds
  40ae06:	fsubr  st,st(6)
  40ae08:	popf   
  40ae09:	inc    ecx
  40ae0a:	aaa    
  40ae0b:	cmp    BYTE PTR [ebx+0x36fb08cd],bh
  40ae11:	mov    eax,DWORD PTR [edx-0x47]
  40ae14:	outs   dx,DWORD PTR ds:[esi]
  40ae15:	test   BYTE PTR [edx-0x2f7094d7],ch
  40ae1b:	gs cmp ebx,ebx
  40ae1e:	call   0xc614778a
  40ae23:	or     al,0x9d
  40ae25:	adc    al,0x31
  40ae27:	lods   eax,DWORD PTR ds:[esi]
  40ae28:	pop    ss
  40ae29:	aam    0x36
  40ae2b:	inc    esi
  40ae2c:	push   ebp
  40ae2d:	cmc    
  40ae2e:	aam    0xd3
  40ae30:	(bad)  
  40ae31:	xor    eax,0xfc38e8fb
  40ae36:	arpl   WORD PTR ds:[ebp+0x5],ax
  40ae3a:	adc    dh,BYTE PTR [ebx]
  40ae3c:	data16 lahf 
  40ae3e:	lods   al,BYTE PTR ds:[esi]
  40ae3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae40:	jge    0x40ade9
  40ae42:	out    0xd3,eax
  40ae44:	add    dh,BYTE PTR [ecx+0x60]
  40ae47:	fidiv  WORD PTR [eax+0x34]
  40ae4a:	lds    edx,FWORD PTR [edi-0x629282e1]
  40ae50:	add    dh,BYTE PTR [ecx+edx*2]
  40ae53:	push   ebx
  40ae54:	xor    DWORD PTR [edi+0x52550552],0xffffffbc
  40ae5b:	retf   
  40ae5c:	and    DWORD PTR [ebx+0x54a21767],esp
  40ae62:	adc    BYTE PTR [ebx+0x24],dh
  40ae65:	xchg   ecx,eax
  40ae66:	and    ebp,DWORD PTR [ecx-0x3e]
  40ae69:	pop    ss
  40ae6a:	jno    0x40ae62
  40ae6c:	jmp    0x463b:0x6ce5bddd
  40ae73:	aam    0xea
  40ae75:	imul   esp,DWORD PTR [edi-0x26b86719],0xffffff8e
  40ae7c:	push   ebx
  40ae7d:	mov    dh,0x30
  40ae7f:	loop   0x40ae79
  40ae81:	pop    edx
  40ae82:	push   ecx
  40ae83:	fsubr  st,st(4)
  40ae85:	xchg   DWORD PTR [ecx+0x72],ebx
  40ae88:	push   ecx
  40ae89:	push   ecx
  40ae8a:	mov    ch,0x15
  40ae8c:	hlt    
  40ae8d:	out    dx,eax
  40ae8e:	out    0xad,al
  40ae90:	push   eax
  40ae91:	scas   eax,DWORD PTR es:[edi]
  40ae92:	dec    ebx
  40ae93:	loope  0x40ae4c
  40ae95:	repz mul DWORD PTR ds:0x47bcb572
  40ae9c:	push   ebp
  40ae9d:	arpl   si,ax
  40ae9f:	cdq    
  40aea0:	into   
  40aea1:	dec    esi
  40aea2:	loope  0x40ae24
  40aea4:	mov    dl,0x23
  40aea6:	btr    eax,esi
  40aea9:	xor    esp,ecx
  40aeab:	mov    esi,DWORD PTR [ecx-0x5f]
  40aeae:	test   eax,0xe1167d15
  40aeb3:	popa   
  40aeb4:	pusha  
  40aeb5:	mov    DWORD PTR [esi-0x6645353e],edx
  40aebb:	adc    BYTE PTR [eax-0x18],cl
  40aebe:	scas   eax,DWORD PTR es:[edi]
  40aebf:	mov    bh,0xb9
  40aec1:	stos   BYTE PTR es:[edi],al
  40aec2:	or     ch,BYTE PTR [edi+ebx*2]
  40aec5:	int3   
  40aec6:	lods   eax,DWORD PTR ds:[esi]
  40aec7:	jae    0x40aeb1
  40aec9:	dec    edi
  40aeca:	mov    al,ds:0xf81737e0
  40aecf:	inc    edi
  40aed0:	xchg   ch,bl
  40aed2:	dec    esi
  40aed3:	lock out 0xaf,al
  40aed6:	sbb    eax,0xe85d02c7
  40aedb:	pop    DWORD PTR ds:[edx-0x13322161]
  40aee2:	loop   0x40af12
  40aee4:	inc    esp
  40aee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee6:	xchg   BYTE PTR [ebp-0x2],cl
  40aee9:	(bad)  
  40aeea:	icebp  
  40aeeb:	retf   0x6fa2
  40aeee:	and    ch,ch
  40aef0:	scas   al,BYTE PTR es:[edi]
  40aef1:	arpl   WORD PTR [ecx],dx
  40aef3:	or     eax,0x960c3f8a
  40aef8:	inc    esp
  40aef9:	(bad)  
  40aefa:	cmp    eax,0x4638583
  40aeff:	fdivr  QWORD PTR [esp+ebp*2+0x74]
  40af03:	loop   0x40af82
  40af05:	aas    
  40af06:	xchg   ebx,eax
  40af07:	out    0x2b,eax
  40af09:	int    0x5a
  40af0b:	(bad)  
  40af0c:	mov    edi,0x23e228e
  40af11:	in     al,0xcf
  40af13:	stc    
  40af14:	ficom  DWORD PTR [ebp-0x34e04e81]
  40af1a:	pop    ebp
  40af1b:	mov    fs,WORD PTR [esi+0x71e5bfb2]
  40af21:	iret   
  40af22:	and    ebp,DWORD PTR [edi+0x34f7dcbb]
  40af28:	push   edi
  40af29:	pop    esp
  40af2a:	jl     0x40aeb4
  40af2c:	and    cl,BYTE PTR [eax+0x50c6a729]
  40af32:	nop
  40af33:	out    dx,eax
  40af34:	pop    ss
  40af35:	jge    0x40af0b
  40af37:	(bad)
  40af3a:	cmp    al,0xcb
  40af3c:	add    eax,0x2c6ba128
  40af41:	aaa    
  40af42:	cmp    DWORD PTR [edi-0x12f3b191],0xffffff94
  40af49:	mul    DWORD PTR [esi-0x7428107c]
  40af4f:	push   ebp
  40af50:	repz scas al,BYTE PTR es:[edi]
  40af52:	push   ebx
  40af53:	inc    ebp
  40af54:	jl     0x40af25
  40af56:	inc    ebp
  40af57:	pop    eax
  40af58:	pop    ebp
  40af59:	sub    eax,esi
  40af5b:	aam    0x1
  40af5d:	cld    
  40af5e:	sti    
  40af5f:	adc    edx,esi
  40af61:	ret    
  40af62:	mov    ebx,0xb5c9ef37
  40af67:	cdq    
  40af68:	or     esp,esp
  40af6a:	js     0x40af97
  40af6c:	test   eax,0x4e716023
  40af71:	cwde   
  40af72:	adc    DWORD PTR [edi],esp
  40af74:	sar    ah,1
  40af76:	push   esp
  40af77:	fmul   QWORD PTR [esi+0x3d]
  40af7a:	outs   dx,BYTE PTR ds:[esi]
  40af7b:	clc    
  40af7c:	stos   DWORD PTR es:[edi],eax
  40af7d:	sbb    al,0x90
  40af7f:	or     ch,BYTE PTR [edi]
  40af81:	adc    eax,0xc4b755ac
  40af86:	xchg   DWORD PTR [ecx+ecx*1-0x54],ecx
  40af8a:	in     al,0x8
  40af8c:	lahf   
  40af8d:	(bad)  
  40af8e:	pop    ss
  40af8f:	xor    ebp,esp
  40af91:	jbe    0x40af36
  40af93:	xchg   edi,eax
  40af94:	outs   dx,BYTE PTR ds:[esi]
  40af95:	sbb    ah,BYTE PTR [edx]
  40af97:	sbb    DWORD PTR [ebp+0x77444eb4],ebx
  40af9d:	add    BYTE PTR [edi],dh
  40af9f:	sahf   
  40afa0:	adc    bh,BYTE PTR [esi+ebx*8+0x768bb928]
  40afa7:	pop    es
  40afa8:	xchg   edx,eax
  40afa9:	xor    al,0x9c
  40afab:	adc    BYTE PTR [edx],dh
  40afad:	test   DWORD PTR [esi+0x1b5df86b],ecx
  40afb3:	inc    ebp
  40afb4:	test   DWORD PTR [ecx-0x6a],0x37df56c7
  40afbb:	push   edx
  40afbc:	test   eax,edi
  40afbe:	enter  0xd24a,0xb9
  40afc2:	fadd   st(2),st
  40afc4:	sbb    BYTE PTR ds:0x51ec7feb,dh
  40afca:	aam    0xb8
  40afcc:	xor    DWORD PTR [eax+0x75bdc940],0x4d
  40afd3:	xlat   BYTE PTR ds:[ebx]
  40afd4:	stos   DWORD PTR es:[edi],eax
  40afd5:	mov    al,ds:0xe8a490f9
  40afda:	push   0x59518eb5
  40afdf:	bound  esp,QWORD PTR [edi-0x37]
  40afe2:	adc    bl,dl
  40afe4:	mov    ebp,0x6a96a889
  40afe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afea:	imul   esi,esi,0xffffffd7
  40afed:	add    DWORD PTR [ebx],esp
  40afef:	retf   0x9a6a
  40aff2:	scas   eax,DWORD PTR es:[edi]
  40aff3:	jmp    0xb124:0xd8e43414
  40affa:	cdq    
  40affb:	cmc    
  40affc:	ja     0x40af94
  40affe:	or     eax,0xf282edbd
  40b003:	jo     0x40af91
  40b005:	jo     0x40b067
  40b007:	xor    BYTE PTR [edx],cl
  40b009:	jmp    0x40b00a
  40b00b:	ror    BYTE PTR [eax-0x4b],cl
  40b00e:	repnz cmp eax,0xb7b3efa2
  40b014:	dec    esp
  40b015:	dec    ebp
  40b016:	retf   
  40b017:	add    BYTE PTR [esi],bl
  40b019:	sub    BYTE PTR [edx-0x1d],cl
  40b01c:	inc    esi
  40b01d:	sub    ah,BYTE PTR [esi+0x70546bc3]
  40b023:	sub    al,0x69
  40b025:	loopne 0x40b078
  40b027:	test   eax,0x76ddf5b1
  40b02c:	and    al,0xdd
  40b02e:	mov    ebx,0x338bb73e
  40b033:	cmp    al,0x4a
  40b035:	into   
  40b036:	mov    eax,ds:0xfdfb35a6
  40b03b:	sub    BYTE PTR [edi+esi*1-0x3d],0x9c
  40b040:	out    0x7a,eax
  40b042:	ins    BYTE PTR es:[edi],dx
  40b043:	ret    0xf378
  40b046:	scas   al,BYTE PTR es:[edi]
  40b047:	arpl   WORD PTR [ecx+0x7c],si
  40b04a:	inc    ebp
  40b04b:	(bad)  
  40b04c:	xchg   ebx,eax
  40b04d:	mov    ebp,0x241549cc
  40b052:	xor    BYTE PTR [ebx+0x40428e25],dh
  40b058:	push   ebp
  40b059:	push   cs
  40b05a:	in     al,dx
  40b05b:	pushf  
  40b05c:	xor    DWORD PTR [edi],ecx
  40b05e:	adc    ch,BYTE PTR [edx-0x5021ec02]
  40b064:	mov    esp,0xd287b204
  40b069:	mov    eax,ds:0x97c6ae5a
  40b06e:	cmp    eax,0x3dd42e98
  40b073:	dec    esi
  40b074:	pop    edx
  40b075:	push   es
  40b076:	fs adc dh,ch
  40b079:	add    dl,al
  40b07b:	fist   DWORD PTR [ebx-0x196b9321]
  40b081:	inc    eax
  40b082:	jp     0x40b100
  40b084:	test   eax,0x1b24b59a
  40b089:	add    eax,0x622bc6e3
  40b08e:	push   ecx
  40b08f:	mov    esp,0x71da9499
  40b094:	sar    DWORD PTR [ecx+0x18],cl
  40b097:	jnp    0x40b051
  40b099:	fild   QWORD PTR [edi+0x46]
  40b09c:	test   eax,0x3c9ad065
  40b0a1:	cmp    DWORD PTR [ecx],0x1f3d8235
  40b0a7:	icebp  
  40b0a8:	out    0xc,al
  40b0aa:	mov    bl,0xaf
  40b0ac:	hlt    
  40b0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0ae:	fwait
  40b0af:	jle    0x40b0d2
  40b0b1:	loopne 0x40b085
  40b0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b4:	add    eax,0x5c846266
  40b0b9:	push   ds
  40b0ba:	push   ds
  40b0bb:	dec    ebp
  40b0bc:	(bad)  
  40b0bd:	fist   DWORD PTR [ebp-0x79]
  40b0c0:	inc    esi
  40b0c1:	dec    edx
  40b0c2:	jmp    0x40b060
  40b0c4:	inc    esp
  40b0c5:	inc    edx
  40b0c6:	pop    ecx
  40b0c7:	mov    DWORD PTR [edx-0x75d37711],ebx
  40b0cd:	jmp    0xdb5ac911
  40b0d2:	dec    ebx
  40b0d3:	sbb    al,0x8f
  40b0d5:	test   BYTE PTR [edi],al
  40b0d7:	xchg   ecx,eax
  40b0d8:	(bad)  
  40b0d9:	(bad)  
  40b0db:	xor    DWORD PTR [ebx+0xdaa61bf],ebx
  40b0e1:	sbb    DWORD PTR [edi+0xa],eax
  40b0e4:	jbe    0x40b142
  40b0e6:	push   esi
  40b0e7:	and    eax,DWORD PTR [edx+0x193e3d15]
  40b0ed:	ret    0x8a26
  40b0f0:	sbb    edi,DWORD PTR [esi+0x3a]
  40b0f3:	into   
  40b0f4:	lock iret 
  40b0f6:	retf   
  40b0f7:	sahf   
  40b0f8:	bnd jb 0x40b0e6
  40b0fb:	adc    esi,DWORD PTR [esi]
  40b0fd:	addr16 ret 0x15ed
  40b101:	and    edx,esp
  40b103:	loope  0x40b0b8
  40b105:	imul   edi
  40b107:	ins    DWORD PTR es:[edi],dx
  40b108:	or     eax,0xdf87bc01
  40b10d:	test   eax,0x8ef47ed7
  40b112:	mov    esi,0xaf2258f4
  40b117:	shl    DWORD PTR [ebx],cl
  40b119:	jmp    0x9ba0:0x5cc6d89c
  40b120:	(bad)  
  40b121:	popa   
  40b122:	mov    edx,0xd81cbc96
  40b127:	retf   
  40b128:	jbe    0x40b135
  40b12a:	loope  0x40b117
  40b12c:	sti    
  40b12d:	(bad)  
  40b12e:	mov    ecx,0x5c8bb888
  40b133:	push   ss
  40b134:	cmp    eax,0x3343abdb
  40b139:	ds dec edx
  40b13b:	and    bl,BYTE PTR [edx+ebx*8+0x327067c2]
  40b142:	sub    edi,esi
  40b144:	dec    ebx
  40b145:	(bad)  
  40b146:	imul   ecx,DWORD PTR [ebp+edi*1+0x38],0x49
  40b14b:	adc    al,0x7c
  40b14d:	or     ebp,DWORD PTR [ecx+edi*4-0x21]
  40b151:	lods   eax,DWORD PTR ds:[esi]
  40b152:	(bad)  
  40b154:	mov    ds:0x1b36aa75,al
  40b159:	(bad)  [eax-0x52d68903]
  40b15f:	inc    ecx
  40b160:	fs int3 
  40b162:	jbe    0x40b0f9
  40b164:	mov    ebp,ebx
  40b166:	pop    eax
  40b167:	iret   
  40b168:	cld    
  40b169:	test   al,0xfc
  40b16b:	xchg   ecx,eax
  40b16c:	arpl   WORD PTR [ebp-0x4e3abea4],cx
  40b172:	hlt    
  40b173:	push   es
  40b174:	jg     0x40b1b8
  40b176:	outs   dx,BYTE PTR ds:[esi]
  40b177:	mov    edi,eax
  40b179:	mov    eax,0xaba97f40
  40b17e:	mov    ds:0x17807fd4,eax
  40b183:	lods   eax,DWORD PTR ds:[esi]
  40b184:	out    0x8b,al
  40b186:	add    al,0x5b
  40b188:	mov    esp,0x7ae50335
  40b18d:	(bad)  
  40b18e:	rcl    DWORD PTR [ecx+edx*2+0x6272ce0f],cl
  40b195:	cmp    DWORD PTR [esi],eax
  40b197:	and    BYTE PTR [esi],cl
  40b199:	adc    BYTE PTR [eax-0x6a],0xf6
  40b19d:	dec    eax
  40b19e:	jmp    0x40b12c
  40b1a0:	xor    eax,DWORD PTR [ebx-0xdb83975]
  40b1a6:	xor    al,BYTE PTR [esi+0x7a]
  40b1a9:	aaa    
  40b1aa:	fistp  QWORD PTR [ecx+0x64fca37a]
  40b1b0:	or     al,0xf7
  40b1b2:	(bad)  
  40b1b3:	clc    
  40b1b4:	fs push ds
  40b1b6:	xor    ebp,ecx
  40b1b8:	pop    ebx
  40b1b9:	pop    es
  40b1ba:	or     al,0xbe
  40b1bc:	je     0x40b150
  40b1be:	shl    BYTE PTR [esi+0x36],cl
  40b1c1:	adc    al,0x95
  40b1c3:	(bad)  
  40b1c4:	rcl    DWORD PTR [edx+0x45],cl
  40b1c7:	sub    DWORD PTR [ebx],edx
  40b1c9:	out    dx,al
  40b1ca:	and    edi,ecx
  40b1cc:	daa    
  40b1cd:	out    dx,eax
  40b1ce:	cs es ss out dx,eax
  40b1d2:	and    BYTE PTR [edi+edx*2],ah
  40b1d5:	push   edi
  40b1d6:	icebp  
  40b1d7:	(bad)  
  40b1d8:	push   ss
  40b1d9:	xchg   edi,eax
  40b1da:	jl     0x40b20c
  40b1dc:	pop    ecx
  40b1dd:	jae    0x40b1b9
  40b1df:	in     eax,dx
  40b1e0:	xchg   DWORD PTR [edx+0xb12f437],edi
  40b1e6:	mov    bl,0x70
  40b1e8:	xor    bl,cl
  40b1ea:	adc    eax,DWORD PTR [edi+0x33]
  40b1ed:	push   eax
  40b1ee:	outs   dx,BYTE PTR ds:[esi]
  40b1ef:	repnz sbb DWORD PTR [eax-0x1],edi
  40b1f3:	mov    BYTE PTR [edi+edi*2-0x56],bh
  40b1f7:	adc    BYTE PTR [edx+0x10fd872e],ah
  40b1fd:	shl    BYTE PTR [eax+ecx*4-0x41],0xc1
  40b202:	aam    0x62
  40b204:	dec    cl
  40b206:	mov    dl,0xe9
  40b208:	push   edi
  40b209:	jge    0x40b1fa
  40b20b:	call   0xdc659a58
  40b210:	pop    esp
  40b211:	in     al,0x27
  40b213:	ds pop eax
  40b215:	sub    ebp,DWORD PTR [eax+0x64]
  40b218:	mov    ecx,0x4b110dad
  40b21d:	fisubr WORD PTR [eax]
  40b21f:	retf   0x1391
  40b222:	xor    bh,BYTE PTR [ebp-0x10daae96]
  40b228:	aam    0x79
  40b22a:	xor    BYTE PTR [edi+0x70],0x93
  40b22e:	sbb    BYTE PTR [eax+eax*8+0x18],bh
  40b232:	mov    ebp,0x377b1561
  40b237:	ror    ecx,1
  40b239:	adc    edx,DWORD PTR [esi+0x19393dfb]
  40b23f:	shl    DWORD PTR [edx-0x5b6a6fe6],1
  40b245:	add    cl,BYTE PTR [edi+0x6d]
  40b248:	fild   QWORD PTR cs:[edx+0x8]
  40b24c:	mov    BYTE PTR [ebp-0x37],cl
  40b24f:	fld    TBYTE PTR [ebp-0x7d]
  40b252:	(bad)  
  40b253:	sahf   
  40b254:	stos   BYTE PTR es:[edi],al
  40b255:	inc    edi
  40b256:	adc    BYTE PTR ds:0x1cd6cfcd,0x8e
  40b25d:	outs   dx,BYTE PTR ds:[esi]
  40b25e:	bound  ecx,QWORD PTR [esi]
  40b260:	fist   WORD PTR [ecx+0x79]
  40b263:	mov    esp,0x268ed2f7
  40b268:	dec    ebx
  40b269:	jmp    FWORD PTR [edi+edx*1+0x54]
  40b26d:	addr16 es out dx,eax
  40b270:	mov    ds:0x4e80f066,eax
  40b275:	jge    0x40b230
  40b277:	lahf   
  40b278:	cmp    esp,DWORD PTR [ebx+ebx*8-0x1]
  40b27c:	fsub   QWORD PTR ds:0x644655a
  40b282:	fwait
  40b283:	or     al,0x46
  40b285:	mov    al,0x8f
  40b287:	pushf  
  40b288:	adc    DWORD PTR [edi+ebp*2-0x19],0x888dc1e8
  40b290:	in     al,0x4
  40b292:	pop    esp
  40b293:	popf   
  40b294:	ss hlt 
  40b296:	fstp   QWORD PTR [eax+0x13]
  40b299:	sub    eax,0xe8710cb0
  40b29e:	xor    DWORD PTR [ebx+0x70920730],edx
  40b2a4:	mov    ecx,0xf95b5998
  40b2a9:	dec    esi
  40b2aa:	addr16 inc ecx
  40b2ac:	mov    WORD PTR [eax-0x32],fs
  40b2af:	jo     0x40b24c
  40b2b1:	lods   eax,DWORD PTR ds:[esi]
  40b2b2:	adc    edi,ecx
  40b2b4:	es lahf 
  40b2b6:	cmp    BYTE PTR [eax+edx*8+0x5ba1350d],ah
  40b2bd:	out    dx,al
  40b2be:	inc    ebp
  40b2bf:	push   edx
  40b2c0:	ret    0xb017
  40b2c3:	jbe    0x40b276
  40b2c5:	mov    dh,0x9c
  40b2c7:	imul   eax,DWORD PTR [ebx],0xeb1a3d99
  40b2cd:	mov    ds:0xdf1b6522,al
  40b2d2:	push   ebp
  40b2d3:	les    eax,FWORD PTR [ebp+0x51]
  40b2d6:	ds push edx
  40b2d8:	(bad)  
  40b2d9:	ins    DWORD PTR es:[edi],dx
  40b2da:	mov    ch,0x66
  40b2dc:	str    edx
  40b2df:	or     eax,0x51dca365
  40b2e4:	fldenv [edi]
  40b2e6:	shl    DWORD PTR [esi],1
  40b2e8:	stc    
  40b2e9:	sub    esp,DWORD PTR [ecx-0x34]
  40b2ec:	jg     0x40b359
  40b2ee:	jmp    0x7a3e:0x39ff588f
  40b2f5:	adc    dh,dl
  40b2f7:	cld    
  40b2f8:	adc    eax,edx
  40b2fa:	fs retf 0x5406
  40b2fe:	or     al,0x32
  40b300:	xchg   edx,eax
  40b301:	add    ah,BYTE PTR [edi]
  40b303:	pushf  
  40b304:	or     esp,DWORD PTR [ecx]
  40b306:	jns    0x40b365
  40b308:	scas   al,BYTE PTR es:[edi]
  40b309:	aad    0x30
  40b30b:	ins    BYTE PTR es:[edi],dx
  40b30c:	pop    eax
  40b30d:	mov    eax,0x2c94e8a1
  40b312:	mov    ds:0x7f4b3402,eax
  40b317:	cmp    eax,0x7824aea4
  40b31c:	mov    bh,0xca
  40b31e:	and    DWORD PTR [ebp+0x5a],eax
  40b321:	xor    DWORD PTR [ecx+0x4453fece],ecx
  40b327:	push   esp
  40b328:	jmp    0x6ab3:0x56e23e7a
  40b32f:	xchg   edx,eax
  40b330:	or     ecx,esi
  40b332:	mov    ds:0x535c95e,eax
  40b337:	sbb    DWORD PTR [esi-0x66735dbd],eax
  40b33d:	stos   BYTE PTR es:[edi],al
  40b33e:	dec    ebx
  40b33f:	jns    0x40b34a
  40b341:	frstor [edx+ebx*4]
  40b344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b345:	xor    DWORD PTR [esi-0x44],esp
  40b348:	inc    ebp
  40b349:	push   edi
  40b34a:	outs   dx,DWORD PTR ds:[esi]
  40b34b:	enter  0x9145,0x9f
  40b34f:	mov    ch,0x20
  40b351:	dec    edi
  40b352:	cmp    al,0x94
  40b354:	sar    BYTE PTR [esi],0x5a
  40b357:	fimul  WORD PTR [ebx+eiz*4]
  40b35a:	fimul  DWORD PTR [eax+edi*8]
  40b35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b35e:	dec    ebx
  40b35f:	adc    BYTE PTR [ebp+0x56b82d02],ah
  40b365:	dec    eax
  40b366:	lahf   
  40b367:	add    BYTE PTR [ecx],cl
  40b369:	sub    al,0xb5
  40b36b:	fldpi  
  40b36d:	sbb    BYTE PTR [esi],al
  40b36f:	fs mov cl,0xf6
  40b372:	or     ecx,edi
  40b374:	push   ecx
  40b375:	popa   
  40b376:	ret    
  40b377:	jb     0x40b355
  40b379:	xlat   BYTE PTR ds:[ebx]
  40b37a:	pushf  
  40b37b:	mov    ecx,0x2e10a669
  40b380:	xchg   esi,eax
  40b381:	js     0x40b3e6
  40b383:	or     ebp,0xffffffdc
  40b386:	sahf   
  40b387:	mov    al,BYTE PTR ds:0x362593a
  40b38d:	adc    eax,0x59236d3
  40b392:	sbb    BYTE PTR [eax*1-0x4a21de7a],bh
  40b399:	mov    cl,0x57
  40b39b:	push   eax
  40b39c:	int3   
  40b39d:	or     ebx,DWORD PTR [ecx]
  40b39f:	mov    cl,0x1d
  40b3a1:	rcr    bh,0x49
  40b3a4:	test   eax,0x27a24050
  40b3a9:	sub    DWORD PTR [eax+ecx*1],0xffffffe7
  40b3ad:	or     cl,cl
  40b3af:	jmp    0xd0712649
  40b3b4:	enter  0x9f30,0xf8
  40b3b8:	fmul   DWORD PTR [ecx]
  40b3ba:	pop    edi
  40b3bb:	mov    esi,0x82ab322a
  40b3c0:	dec    eax
  40b3c1:	mov    dh,0xe9
  40b3c3:	xchg   esi,eax
  40b3c4:	in     eax,dx
  40b3c5:	aam    0x12
  40b3c7:	cmp    eax,0x522ad561
  40b3cc:	xchg   ebx,eax
  40b3cd:	inc    edx
  40b3ce:	sub    BYTE PTR [edx-0x4a],bl
  40b3d1:	mov    dh,0x62
  40b3d3:	adc    ebp,ebp
  40b3d5:	cli    
  40b3d6:	push   cs
  40b3d7:	dec    eax
  40b3d8:	jl     0x40b3bb
  40b3da:	push   eax
  40b3db:	je     0x40b3bc
  40b3dd:	and    dh,BYTE PTR [eax]
  40b3df:	dec    esi
  40b3e0:	push   esi
  40b3e1:	mov    es,eax
  40b3e3:	data16 mov al,0xfd
  40b3e6:	ss ins DWORD PTR es:[edi],dx
  40b3e8:	and    ah,bl
  40b3ea:	iret   
  40b3eb:	pop    DWORD PTR [ebx]
  40b3ed:	cli    
  40b3ee:	pop    ebx
  40b3ef:	out    dx,al
  40b3f0:	cld    
  40b3f1:	fcomp  QWORD PTR [ebx-0x32e9a42c]
  40b3f7:	xchg   ebp,edi
  40b3f9:	pop    esp
  40b3fa:	mov    ecx,0xa7fa872f
  40b3ff:	sub    eax,0xa2858e2d
  40b404:	lea    eax,[ecx]
  40b406:	xor    ecx,DWORD PTR [esp+edx*4+0x5c]
  40b40a:	or     eax,0x12b0dbb3
  40b40f:	and    ah,BYTE PTR [edx]
  40b411:	ret    
  40b412:	mov    al,ds:0xa38751a7
  40b417:	(bad)  
  40b418:	fiadd  WORD PTR [edx-0xd]
  40b41b:	es xchg ebx,eax
  40b41d:	inc    eax
  40b41e:	pop    esi
  40b41f:	cmp    dh,BYTE PTR [ebp+ebx*1+0x1b277e90]
  40b426:	aam    0xd5
  40b428:	or     edi,esi
  40b42a:	int3   
  40b42b:	lea    ebp,[esi+0x75947008]
  40b431:	(bad)  
  40b432:	clc    
  40b433:	adc    eax,0x3930dcb5
  40b438:	ds cs retf 
  40b43b:	(bad)
  40b43e:	inc    edi
  40b43f:	test   eax,0xd3f50372
  40b444:	lds    esi,FWORD PTR [esi+0x2]
  40b447:	ins    BYTE PTR es:[edi],dx
  40b448:	jns    0x40b408
  40b44a:	jle    0x3bd4dee
  40b450:	es or  eax,0x707ba223
  40b456:	dec    ebp
  40b457:	add    edi,DWORD PTR [ebx-0x600e0d60]
  40b45d:	sbb    eax,0xa347ab3b
  40b462:	jle    0x40b425
  40b464:	pop    esp
  40b465:	pop    ebx
  40b466:	push   ecx
  40b467:	mov    al,ds:0xfeea5200
  40b46c:	mov    al,ds:0xec10a9b7
  40b471:	pop    ebp
  40b472:	dec    esp
  40b473:	cmp    ah,BYTE PTR [edi]
  40b475:	lahf   
  40b476:	ret    0xd13f
  40b479:	mov    ebx,0xf30c80a6
  40b47e:	add    BYTE PTR [edi+0x728858a5],bl
  40b484:	xor    DWORD PTR [ecx+0x74],ecx
  40b487:	ins    DWORD PTR es:[edi],dx
  40b488:	mov    ah,0xd8
  40b48a:	das    
  40b48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48c:	adc    DWORD PTR [eax+0x7e],eax
  40b48f:	lods   al,BYTE PTR ds:[esi]
  40b490:	cmp    ebx,DWORD PTR [ecx-0x6f7fd745]
  40b496:	stos   DWORD PTR es:[edi],eax
  40b497:	mov    ch,BYTE PTR [eax]
  40b499:	mov    ch,0xb6
  40b49b:	addr16 xchg edi,eax
  40b49d:	add    edi,DWORD PTR [ebp+0x478e912f]
  40b4a3:	mov    cl,0x13
  40b4a5:	(bad)  
  40b4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a7:	xchg   esp,eax
  40b4a8:	std    
  40b4a9:	pusha  
  40b4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ab:	xor    edx,0xa
  40b4ae:	je     0x40b4e4
  40b4b0:	fsub   DWORD PTR [esi+0x40]
  40b4b3:	push   0x1de4516b
  40b4b8:	call   0x5f44bd2c
  40b4bd:	int3   
  40b4be:	daa    
  40b4bf:	int3   
  40b4c0:	mov    bl,0xe4
  40b4c2:	loopne 0x40b494
  40b4c4:	shl    ecx,cl
  40b4c6:	push   eax
  40b4c7:	jge    0x40b53b
  40b4c9:	xchg   ecx,eax
  40b4ca:	imul   ebx,DWORD PTR [ecx-0x78],0xffffffd9
  40b4ce:	inc    edi
  40b4cf:	or     DWORD PTR ds:0x51932311,ebx
  40b4d5:	shl    esi,1
  40b4d7:	mov    edi,0x8eccc7a1
  40b4dc:	es jne 0x40b504
  40b4df:	nop
  40b4e0:	fcom   DWORD PTR [ebp-0x29fd44b2]
  40b4e6:	xchg   BYTE PTR [ebx+0x41],dh
  40b4e9:	ret    0xb7d
  40b4ec:	jne    0x40b535
  40b4ee:	imul   edi,esi,0xffffffaa
  40b4f1:	dec    esi
  40b4f2:	mov    ds:0xe6abc6a0,eax
  40b4f7:	idiv   BYTE PTR [edi+edi*4+0x11]
  40b4fb:	fidivr WORD PTR ds:0xe4d4d73a
  40b501:	lahf   
  40b502:	mov    bl,0x65
  40b504:	xchg   ecx,eax
  40b505:	mov    ch,0xc9
  40b507:	mov    eax,ds:0xc65c35a3
  40b50c:	sub    DWORD PTR [ebp+0xf19be46],ebp
  40b512:	jbe    0x40b4a9
  40b514:	enter  0x6c7c,0xd4
  40b518:	je     0x40b577
  40b51a:	leave  
  40b51b:	xchg   DWORD PTR [eax+eiz*4-0x6d],edx
  40b51f:	xor    BYTE PTR [ebx-0x25],bl
  40b522:	mov    ebp,eax
  40b524:	(bad)  
  40b525:	cmc    
  40b526:	repz arpl WORD PTR [esi-0x4c9e20b0],bx
  40b52d:	add    eax,0xfadbcc6c
  40b532:	xchg   ebx,eax
  40b533:	mov    BYTE PTR ds:0x75b63e0c,bh
  40b539:	imul   esi,eax,0xffffffbb
  40b53c:	push   ss
  40b53d:	outs   dx,DWORD PTR ds:[esi]
  40b53e:	mov    ebp,0x9efa141
  40b543:	outs   dx,BYTE PTR ds:[esi]
  40b544:	or     ch,BYTE PTR ss:[eax+0x26]
  40b548:	aas    
  40b549:	loopne 0x40b5af
  40b54b:	(bad)  
  40b54c:	out    dx,eax
  40b54d:	sti    
  40b54e:	outs   dx,BYTE PTR ds:[esi]
  40b54f:	test   dl,0x78
  40b552:	xor    eax,0x32c29b2b
  40b557:	(bad)  [edi+0x3784bcf5]
  40b55d:	ins    DWORD PTR es:[edi],dx
  40b55e:	aaa    
  40b55f:	rol    DWORD PTR [ebx+ebx*8-0x58],0x94
  40b564:	mov    ds:0xef8ec640,al
  40b569:	sbb    al,0x13
  40b56b:	in     eax,0x39
  40b56d:	jp     0x40b588
  40b56f:	xchg   ebx,eax
  40b570:	les    edx,FWORD PTR [ecx-0x1f]
  40b573:	xor    al,0xc3
  40b575:	cmp    ch,cl
  40b577:	sar    DWORD PTR [eax],1
  40b579:	push   es
  40b57a:	adc    esi,DWORD PTR [ecx-0x1d3f3cef]
  40b580:	rcr    BYTE PTR [esp+esi*4+0x20],cl
  40b584:	adc    DWORD PTR [edi-0x57],0xb522021e
  40b58b:	popf   
  40b58c:	ret    
  40b58d:	or     al,0x38
  40b58f:	sub    dl,dl
  40b591:	imul   ebp,DWORD PTR ds:0xe7aebbf8,0x47
  40b598:	mov    dl,0xdd
  40b59a:	jnp    0x40b576
  40b59c:	pop    es
  40b59d:	mov    dl,0xca
  40b59f:	adc    dh,BYTE PTR [edi]
  40b5a1:	in     eax,0xd1
  40b5a3:	stos   BYTE PTR es:[edi],al
  40b5a4:	dec    edi
  40b5a5:	push   0xffffffc0
  40b5a7:	or     eax,0xea273105
  40b5ac:	data16 xor al,0x1c
  40b5af:	retf   
  40b5b0:	push   edx
  40b5b1:	mov    ds:0xb1a7af6,eax
  40b5b6:	sbb    DWORD PTR [edi],eax
  40b5b8:	add    eax,0x9ff4753c
  40b5bd:	mov    eax,ds:0x12790935
  40b5c2:	ins    BYTE PTR es:[edi],dx
  40b5c3:	xchg   edx,eax
  40b5c4:	mov    ecx,esi
  40b5c6:	push   es
  40b5c7:	std    
  40b5c8:	loopne 0x40b583
  40b5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5cb:	lods   al,BYTE PTR ds:[esi]
  40b5cc:	pop    ecx
  40b5cd:	sbb    al,0x77
  40b5cf:	cmc    
  40b5d0:	pop    ebx
  40b5d1:	push   cs
  40b5d2:	push   esp
  40b5d3:	js     0x40b58f
  40b5d5:	xchg   edi,edx
  40b5d7:	adc    al,0xcf
  40b5d9:	cli    
  40b5da:	xor    eax,0xc4d67556
  40b5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e0:	cwde   
  40b5e1:	jl     0x40b61f
  40b5e3:	dec    edi
  40b5e4:	lods   al,BYTE PTR ds:[esi]
  40b5e5:	rcl    BYTE PTR [esi+eax*1-0x77fcc9e2],cl
  40b5ec:	pop    ebx
  40b5ed:	jmp    0x25632168
  40b5f2:	loopne 0x40b642
  40b5f4:	aam    0x43
  40b5f6:	les    ecx,FWORD PTR ds:0x3a8eaed4
  40b5fc:	mov    WORD PTR [ebx+0x4d],?
  40b5ff:	mov    DWORD PTR [edi],esi
  40b601:	rol    DWORD PTR [esi+0x60],cl
  40b604:	pusha  
  40b605:	fld    QWORD PTR [ebx]
  40b607:	leave  
  40b608:	cmp    ah,bh
  40b60a:	sub    eax,DWORD PTR [eax+0x25c446ae]
  40b610:	xchg   ebx,eax
  40b611:	scas   al,BYTE PTR es:[edi]
  40b612:	dec    ebx
  40b613:	in     al,dx
  40b614:	dec    ebx
  40b615:	mov    ah,0x60
  40b617:	sub    ch,BYTE PTR [edi+eax*1-0x7c9ef6b2]
  40b61e:	sbb    al,0xc6
  40b620:	in     eax,0xcd
  40b622:	xor    BYTE PTR [edx+0x65],ah
  40b625:	push   es
  40b626:	out    dx,eax
  40b627:	xor    ebx,DWORD PTR [edi+eiz*8+0x1396cfe9]
  40b62e:	hlt    
  40b62f:	enter  0x166e,0x99
  40b633:	mov    eax,ds:0x742d75ff
  40b638:	adc    eax,0x1389851f
  40b63d:	add    BYTE PTR ds:0xeddd2fdd,ah
  40b643:	jmp    0x3e1:0x6acc9949
  40b64a:	scas   eax,DWORD PTR es:[edi]
  40b64b:	daa    
  40b64c:	stc    
  40b64d:	mov    al,ch
  40b64f:	jecxz  0x40b674
  40b651:	jle    0x40b641
  40b653:	fwait
  40b654:	retf   
  40b655:	shr    DWORD PTR [ecx-0xf],1
  40b658:	popf   
  40b659:	mov    es,WORD PTR ds:0xcf39f800
  40b65f:	mov    ebx,esp
  40b661:	int3   
  40b662:	popa   
  40b663:	sbb    edi,DWORD PTR [ebx]
  40b665:	sar    DWORD PTR [ebx+edx*2+0x105bd755],0x4
  40b66d:	xor    al,dl
  40b66f:	ins    DWORD PTR es:[edi],dx
  40b670:	addr16 mov edx,0x24b9ba6f
  40b676:	sbb    cl,BYTE PTR [edx-0x3f]
  40b679:	aas    
  40b67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b67b:	(bad)  
  40b67c:	mov    ?,WORD PTR [ebx]
  40b67e:	ds xor ecx,ecx
  40b681:	adc    al,0xe0
  40b683:	adc    al,0x5d
  40b685:	add    bl,BYTE PTR [esi+0x29fd3a1a]
  40b68b:	push   ds
  40b68c:	mov    bh,0x87
  40b68e:	sbb    DWORD PTR [edx-0x47],edx
  40b691:	xchg   ebp,eax
  40b692:	shl    DWORD PTR [ebx],1
  40b694:	push   cs
  40b695:	mul    DWORD PTR [esi]
  40b697:	mov    fs,edi
  40b699:	lods   al,BYTE PTR ds:[esi]
  40b69a:	or     al,0x8b
  40b69c:	adc    eax,0xb02255ea
  40b6a1:	inc    ebp
  40b6a2:	stos   DWORD PTR es:[edi],eax
  40b6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a4:	in     al,0xbe
  40b6a6:	mov    cl,0x46
  40b6a8:	mov    edx,0x88cddc7b
  40b6ad:	rol    DWORD PTR [ebx-0x37a7d039],cl
  40b6b3:	mov    dh,0x2a
  40b6b5:	jmp    0xe347e73b
  40b6ba:	das    
  40b6bb:	adc    al,0x1
  40b6bd:	nop
  40b6be:	jecxz  0x40b656
  40b6c0:	std    
  40b6c1:	cmp    eax,DWORD PTR [eax+0x5d]
  40b6c4:	cmp    ch,BYTE PTR [ebp-0x24]
  40b6c7:	addr16 loope 0x40b6e5
  40b6ca:	mov    ah,0xca
  40b6cc:	(bad)  
  40b6cd:	pop    esp
  40b6ce:	mov    ss,WORD PTR [eax-0x69]
  40b6d1:	cmp    BYTE PTR [ecx+0x10a2f4ee],dl
  40b6d7:	(bad)  
  40b6d8:	loope  0x40b685
  40b6da:	out    dx,al
  40b6db:	mov    ebp,0xd45e0cf3
  40b6e0:	xor    al,0xd1
  40b6e2:	jae    0x40b680
  40b6e4:	mov    ds:0xeb44033e,al
  40b6e9:	in     eax,dx
  40b6ea:	xchg   edx,eax
  40b6eb:	shl    DWORD PTR [edx],1
  40b6ed:	or     edx,DWORD PTR [ebx-0xffdf3fc]
  40b6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f4:	cdq    
  40b6f5:	pop    edx
  40b6f6:	push   0xffffffde
  40b6f8:	jl     0x40b76e
  40b6fa:	xchg   edx,eax
  40b6fb:	and    ebx,DWORD PTR [ebp+0x57]
  40b6fe:	sti    
  40b6ff:	cwde   
  40b700:	das    
  40b701:	push   es
  40b702:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40b704:	dec    eax
  40b705:	jmp    0x15d6f784
  40b70a:	nop
  40b70b:	gs mov ecx,ecx
  40b70e:	retf   
  40b70f:	shr    BYTE PTR ds:0x1f7e2c42,cl
  40b715:	inc    eax
  40b716:	pop    ebx
  40b717:	lods   al,BYTE PTR ds:[esi]
  40b718:	push   ebp
  40b719:	or     DWORD PTR [ebx+0x5e],ebp
  40b71c:	test   cl,0xa0
  40b71f:	lock sbb eax,eax
  40b722:	jno    0x40b6f5
  40b724:	leave  
  40b725:	int    0xd7
  40b727:	fld    TBYTE PTR [ebx-0x2aebf26a]
  40b72d:	aam    0xe6
  40b72f:	jl     0x40b7a0
  40b731:	push   0x8f34f85f
  40b736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b737:	mov    ebp,DWORD PTR [edx]
  40b739:	leave  
  40b73a:	pop    ss
  40b73b:	add    eax,0x126ecb69
  40b740:	rcr    BYTE PTR [ebx-0x68ec8ae0],0x91
  40b747:	retf   0x4086
  40b74a:	lea    esp,[edi+edi*4]
  40b74d:	shr    DWORD PTR [edi-0xc],1
  40b750:	(bad)  
  40b751:	sbb    eax,eax
  40b753:	mov    ebp,0x511d55be
  40b758:	sbb    DWORD PTR [edi-0x58468ee1],esi
  40b75e:	iret   
  40b75f:	or     al,0x6c
  40b761:	stc    
  40b762:	inc    esp
  40b763:	jmp    0x957c:0xd62d6f2b
  40b76a:	push   es
  40b76b:	jmp    0xc733cf82
  40b770:	rep ins BYTE PTR es:[edi],dx
  40b772:	add    BYTE PTR [eax],cl
  40b774:	or     eax,0x3e23018
  40b779:	push   ss
  40b77a:	je     0x40b799
  40b77c:	xchg   ebx,eax
  40b77d:	mov    esp,0xde1435c4
  40b782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b784:	xchg   edx,eax
  40b785:	sbb    ebx,eax
  40b787:	and    eax,0xf2aacea6
  40b78c:	xchg   DWORD PTR [esi-0x1c],esp
  40b78f:	mov    DWORD PTR [edx],0x98bda04
  40b795:	or     ecx,DWORD PTR [ebx-0x42]
  40b798:	mov    ah,0x55
  40b79a:	js     0x40b751
  40b79c:	es out 0x77,eax
  40b79f:	and    DWORD PTR [ebp+edx*1-0x2367417b],esp
  40b7a6:	(bad)  
  40b7a7:	(bad)  [ebp-0x6f4fb22d]
  40b7ad:	ins    BYTE PTR es:[edi],dx
  40b7ae:	push   0xb61e7011
  40b7b3:	xor    al,0x6f
  40b7b5:	retf   
  40b7b6:	inc    ebx
  40b7b7:	fidiv  WORD PTR [edx-0x16]
  40b7ba:	push   edx
  40b7bb:	in     eax,0x5f
  40b7bd:	outs   dx,BYTE PTR ds:[esi]
  40b7be:	ret    0xb187
  40b7c1:	xor    esi,ecx
  40b7c3:	pop    es
  40b7c4:	loope  0x40b786
  40b7c6:	aas    
  40b7c7:	inc    esp
  40b7c8:	int    0xd
  40b7ca:	cdq    
  40b7cb:	fimul  DWORD PTR [esi]
  40b7cd:	dec    ebx
  40b7ce:	stos   BYTE PTR es:[edi],al
  40b7cf:	in     eax,dx
  40b7d0:	push   ebp
  40b7d1:	stos   BYTE PTR es:[edi],al
  40b7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d3:	add    eax,0xaef6e2a5
  40b7d8:	inc    esi
  40b7d9:	jg     0x40b832
  40b7db:	mov    al,0x42
  40b7dd:	pop    es
  40b7de:	and    BYTE PTR [esi-0x37],ah
  40b7e1:	jmp    0x5a5dc597
  40b7e6:	(bad)  
  40b7e7:	out    0xb,eax
  40b7e9:	pop    ss
  40b7ea:	sbb    bh,BYTE PTR [edx+esi*4+0x57]
  40b7ee:	out    dx,eax
  40b7ef:	pop    ss
  40b7f0:	mov    ch,0x2d
  40b7f2:	sbb    BYTE PTR [edx],0xf0
  40b7f5:	aad    0x44
  40b7f7:	pop    ebx
  40b7f8:	jno    0x40b78b
  40b7fa:	jb     0x40b7b8
  40b7fc:	pop    esp
  40b7fd:	xor    eax,0x77ac0d92
  40b802:	add    eax,0x35dd343a
  40b807:	xor    BYTE PTR [ebx],dh
  40b809:	das    
  40b80a:	xor    esi,DWORD PTR [ecx+0x186cf8c]
  40b810:	push   cs
  40b811:	mov    edi,cs
  40b813:	sub    al,0xfa
  40b815:	xor    ch,BYTE PTR [ebx]
  40b817:	pop    es
  40b818:	xchg   DWORD PTR [ebx+0x678cb4a2],edi
  40b81e:	pop    esp
  40b81f:	in     al,0x37
  40b821:	jns    0x40b7c4
  40b823:	fdiv   st(7),st
  40b825:	dec    ecx
  40b826:	in     eax,dx
  40b827:	std    
  40b828:	div    BYTE PTR [ebp-0x554d957e]
  40b82e:	pop    esp
  40b82f:	adc    esi,DWORD PTR [esi-0x1680b567]
  40b835:	int3   
  40b836:	inc    bx
  40b838:	adc    eax,0x4a002e13
  40b83d:	add    DWORD PTR [eax],0x62
  40b840:	adc    ecx,DWORD PTR [ecx]
  40b842:	mov    dh,0x7e
  40b844:	pushf  
  40b845:	fnstenv [eax-0x79]
  40b848:	call   0x4f6bad06
  40b84d:	fs dec eax
  40b84f:	js     0x40b847
  40b851:	sahf   
  40b852:	push   edx
  40b853:	jno    0x40b7e8
  40b855:	or     ch,BYTE PTR [edi-0x2]
  40b858:	push   edi
  40b859:	(bad)  
  40b85a:	push   ds
  40b85b:	clc    
  40b85c:	xor    cl,ch
  40b85e:	push   ebp
  40b85f:	(bad)  
  40b861:	push   eax
  40b862:	ins    BYTE PTR es:[edi],dx
  40b863:	mov    dh,0x22
  40b865:	les    ecx,FWORD PTR [ebx-0x78]
  40b868:	cdq    
  40b869:	inc    ebp
  40b86a:	lahf   
  40b86b:	xor    esi,ebx
  40b86d:	dec    edi
  40b86e:	sbb    BYTE PTR [edi+ecx*8-0x19d44eb6],0x9e
  40b876:	fstp   st(5)
  40b878:	jb     0x40b8c1
  40b87a:	ins    DWORD PTR es:[edi],dx
  40b87b:	in     al,dx
  40b87c:	and    BYTE PTR [esi+0x6c4af633],dl
  40b882:	sub    bl,BYTE PTR [edx+0x49]
  40b885:	fwait
  40b886:	or     edi,DWORD PTR [esi-0x75]
  40b889:	andnps xmm7,XMMWORD PTR [ecx+ebp*8+0x626b325]
  40b891:	aam    0x29
  40b893:	outs   dx,DWORD PTR ds:[esi]
  40b894:	call   0x5fd9813e
  40b899:	pop    eax
  40b89a:	or     edx,DWORD PTR [esi-0x49]
  40b89d:	outs   dx,DWORD PTR ds:[esi]
  40b89e:	mov    eax,esp
  40b8a0:	ret    0xc007
  40b8a3:	popf   
  40b8a4:	pop    esp
  40b8a5:	cmp    esi,DWORD PTR [esi+0x58]
  40b8a8:	shr    BYTE PTR [edx+0x30],cl
  40b8ab:	dec    ebx
  40b8ac:	sub    ebp,DWORD PTR [edi]
  40b8ae:	mov    BYTE PTR [edi-0x7d3a30c7],al
  40b8b4:	sub    esp,0x767bd343
  40b8ba:	and    DWORD PTR [ebp+0x4e5d6ec1],ebx
  40b8c0:	xor    DWORD PTR [eax],esp
  40b8c2:	stc    
  40b8c3:	fdiv   st(0),st
  40b8c5:	mov    ds:0xac89afc0,eax
  40b8ca:	out    dx,al
  40b8cb:	inc    BYTE PTR [edi+0x27143a09]
  40b8d1:	push   ecx
  40b8d2:	into   
  40b8d3:	sbb    BYTE PTR [ecx],0x1c
  40b8d6:	sub    al,0xcd
  40b8d8:	jb     0x40b8d6
  40b8da:	jmp    0x40b886
  40b8dc:	dec    ecx
  40b8dd:	jge    0x40b941
  40b8df:	xor    ah,dh
  40b8e1:	xor    eax,0x1b
  40b8e4:	inc    esi
  40b8e5:	mov    eax,DWORD PTR [eax-0x550b162d]
  40b8eb:	cmp    ebp,DWORD PTR [eax]
  40b8ed:	jecxz  0x40b898
  40b8ef:	jmp    0x434c6d17
  40b8f4:	sbb    cl,BYTE PTR ss:[eax]
  40b8f7:	xor    BYTE PTR [edx],bl
  40b8f9:	dec    edi
  40b8fa:	ins    BYTE PTR es:[edi],dx
  40b8fb:	xlat   BYTE PTR ds:[ebx]
  40b8fc:	jmp    0x4d0ac2c5
  40b901:	adc    DWORD PTR [edi-0x5],ecx
  40b904:	sbb    DWORD PTR [esi+0x67989704],ebp
  40b90a:	ss jmp 0x377d:0xd45d4385
  40b912:	imul   DWORD PTR [ebp-0x4616079b]
  40b918:	js     0x40b8fc
  40b91a:	jl     0x40b8c3
  40b91c:	fs lahf 
  40b91e:	sahf   
  40b91f:	and    DWORD PTR [eax+0x2d0e1366],ebp
  40b925:	push   ecx
  40b926:	outs   dx,DWORD PTR ds:[esi]
  40b927:	dec    edi
  40b928:	push   edi
  40b929:	xor    al,0x2
  40b92b:	mov    DWORD PTR [ebx+esi*8],edx
  40b92e:	int    0xe0
  40b930:	mov    ?,edx
  40b932:	popf   
  40b933:	test   BYTE PTR [eax*8+0x2cba12e0],al
  40b93a:	mov    bl,0xcb
  40b93c:	pusha  
  40b93d:	pop    ebx
  40b93e:	inc    ebx
  40b93f:	sbb    DWORD PTR [ecx+0x0],ebx
  40b942:	(bad)  
  40b943:	or     al,0x56
  40b945:	xchg   ecx,eax
  40b946:	mov    ch,BYTE PTR [ebx+0x1fdb66d6]
  40b94c:	sbb    ecx,DWORD PTR [edi-0x15a59830]
  40b952:	shl    DWORD PTR [edi],cl
  40b954:	ds ja  0x40b97e
  40b957:	imul   ebp,ebx,0xffffffcf
  40b95a:	je     0x40b917
  40b95c:	jmp    0x4139cec
  40b961:	add    BYTE PTR [esi-0x48f3ce0],bh
  40b967:	sub    edx,esp
  40b969:	ins    DWORD PTR es:[edi],dx
  40b96a:	xchg   esi,eax
  40b96b:	hlt    
  40b96c:	mov    eax,0xe72abb9c
  40b971:	pop    ecx
  40b972:	sub    DWORD PTR [eax],eax
  40b974:	jge    0x40b94f
  40b976:	call   0x935968dd
  40b97b:	aaa    
  40b97c:	loopne 0x40b9aa
  40b97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b97f:	push   eax
  40b980:	loope  0x40b9f5
  40b982:	jl     0x40b97e
  40b984:	aas    
  40b985:	pop    esi
  40b986:	(bad)  
  40b987:	mov    dh,0x43
  40b989:	aaa    
  40b98a:	daa    
  40b98b:	push   DWORD PTR [eax]
  40b98d:	loopne 0x40b95a
  40b98f:	sub    al,0xea
  40b991:	add    BYTE PTR [ebx-0x14e2fc32],ah
  40b997:	(bad)  
  40b998:	fxch   st(7)
  40b99a:	arpl   bx,bp
  40b99c:	out    dx,eax
  40b99d:	sbb    al,0xa8
  40b99f:	dec    edi
  40b9a0:	pusha  
  40b9a1:	pop    ebx
  40b9a2:	imul   ebp,DWORD PTR [ebx+ecx*4-0x5e2230e0],0x62
  40b9aa:	pop    ds
  40b9ab:	sbb    eax,0x32f05811
  40b9b0:	std    
  40b9b1:	retf   0x2e1c
  40b9b4:	adc    BYTE PTR [ecx+edi*8+0x62],ch
  40b9b8:	(bad)  
  40b9b9:	pop    edi
  40b9ba:	loop   0x40b9ad
  40b9bc:	inc    edi
  40b9bd:	pop    ebp
  40b9be:	sbb    esp,DWORD PTR [ebp+0x48]
  40b9c1:	cmp    ah,BYTE PTR [ecx+0x7cee37c4]
  40b9c7:	fstp   TBYTE PTR [esi-0x6ef73825]
  40b9cd:	cli    
  40b9ce:	mov    al,0xbd
  40b9d0:	imul   eax,DWORD PTR [esi-0x4f64ffa6],0x366cd357
  40b9da:	jno    0x40b9ca
  40b9dc:	mov    ebp,ss
  40b9de:	outs   dx,DWORD PTR ds:[esi]
  40b9df:	repnz or dl,BYTE PTR [ecx-0x74]
  40b9e3:	jecxz  0x40ba3c
  40b9e5:	jb     0x40ba5e
  40b9e7:	retf   0x79c7
  40b9ea:	jmp    0x4c5c:0xa1b512e4
  40b9f1:	inc    edx
  40b9f2:	mov    esi,0x4083489b
  40b9f7:	push   ss
  40b9f8:	pop    ecx
  40b9f9:	sbb    al,0xe7
  40b9fb:	mov    ecx,0x62e75af4
  40ba00:	(bad)  
  40ba01:	mov    WORD PTR [eax],fs
  40ba03:	xlat   BYTE PTR ds:[ebx]
  40ba04:	jle    0x40ba05
  40ba06:	ret    
  40ba07:	mov    ch,0x32
  40ba09:	xchg   ebx,eax
  40ba0a:	xor    eax,eax
  40ba0c:	push   edi
  40ba0d:	(bad)  
  40ba0e:	cld    
  40ba0f:	cs sub al,0x9b
  40ba12:	leave  
  40ba13:	mov    ds:0x39337987,eax
  40ba18:	lahf   
  40ba19:	xchg   ebp,eax
  40ba1a:	enter  0x2ba3,0xbe
  40ba1e:	outs   dx,DWORD PTR ds:[esi]
  40ba1f:	xor    al,0x83
  40ba21:	mov    eax,0x84426b4a
  40ba26:	imul   edx,edi,0xa634a102
  40ba2c:	sbb    DWORD PTR [ecx],0xffffff82
  40ba2f:	inc    edx
  40ba30:	adc    eax,0xaa3c976a
  40ba35:	xchg   ebp,eax
  40ba36:	xor    al,0xbb
  40ba38:	mov    ds:0x57e7e7e2,eax
  40ba3d:	imul   ebp,DWORD PTR [edi-0x5a],0x2e
  40ba41:	std    
  40ba42:	inc    eax
  40ba43:	mov    eax,ds:0xedde4c41
  40ba48:	aaa    
  40ba49:	xchg   ebp,eax
  40ba4a:	mov    cl,0x77
  40ba4c:	push   eax
  40ba4d:	jo     0x40ba8c
  40ba4f:	lods   al,BYTE PTR ds:[esi]
  40ba50:	ds das 
  40ba52:	(bad)  
  40ba53:	ins    DWORD PTR es:[edi],dx
  40ba54:	mov    DWORD PTR [ebp-0x16],edi
  40ba57:	mov    ebp,0xfe066aaf
  40ba5c:	sbb    BYTE PTR [eax+0x4b],dl
  40ba5f:	xor    esp,DWORD PTR [esi]
  40ba61:	mov    eax,ds:0x833c3932
  40ba66:	sub    eax,0x9b049ccf
  40ba6b:	push   es
  40ba6c:	repnz cmp DWORD PTR [ebx],edx
  40ba6f:	mov    ch,0x3e
  40ba71:	test   eax,0xef6b1592
  40ba76:	adc    DWORD PTR [eax+0x3af80faf],0xf99ce1a5
  40ba80:	cs add eax,0x798485b3
  40ba86:	sub    BYTE PTR [ecx],al
  40ba88:	rcr    BYTE PTR ds:0x9cfb8e3b,cl
  40ba8e:	sbb    eax,0xa02ce8a9
  40ba93:	gs sub eax,0xcfe4ca4e
  40ba99:	jns    0x40baf8
  40ba9b:	mov    ds:0xb527680f,eax
  40baa0:	jp     0x40ba38
  40baa2:	dec    eax
  40baa3:	push   ecx
  40baa4:	cwde   
  40baa5:	inc    edi
  40baa6:	add    al,0x20
  40baa8:	ret    
  40baa9:	ins    DWORD PTR es:[edi],dx
  40baaa:	xor    BYTE PTR [edx],cl
  40baac:	arpl   WORD PTR [edi],sp
  40baae:	and    ecx,esi
  40bab0:	mov    edi,0x6172e312
  40bab5:	inc    esp
  40bab6:	in     eax,dx
  40bab7:	cmp    cl,ch
  40bab9:	lods   al,BYTE PTR ds:[esi]
  40baba:	outs   dx,BYTE PTR ds:[esi]
  40babb:	jecxz  0x40bb2e
  40babd:	push   ecx
  40babe:	mov    ecx,0x81834d42
  40bac3:	nop
  40bac4:	add    dl,cl
  40bac6:	mov    ebp,0x26b3ef3b
  40bacb:	inc    esi
  40bacc:	mov    WORD PTR [ecx+0x44313d4a],?
  40bad2:	add    ah,BYTE PTR [ecx]
  40bad4:	sbb    BYTE PTR ds:0x6f898d57,bh
  40bada:	daa    
  40badb:	call   0xefe97b80
  40bae0:	and    DWORD PTR ss:[ebx+0x4b08539],ebp
  40bae7:	cmp    BYTE PTR [ebp-0x78deee04],0x63
  40baee:	xchg   esi,eax
  40baef:	in     eax,0xb7
  40baf1:	shl    BYTE PTR [edx+0x699626a],cl
  40baf7:	sbb    ecx,esi
  40baf9:	ins    DWORD PTR es:[edi],dx
  40bafa:	mov    bh,cl
  40bafc:	sub    al,0x31
  40bafe:	fdiv   QWORD PTR [ecx+0x73]
  40bb01:	data16 sbb al,0x24
  40bb04:	push   es
  40bb05:	jp     0x40baec
  40bb07:	xchg   ecx,eax
  40bb08:	dec    edx
  40bb09:	mov    cl,0xc9
  40bb0b:	push   ds
  40bb0c:	jg     0x40bb04
  40bb0e:	and    al,0xb9
  40bb10:	mov    ss,ebx
  40bb12:	dec    esp
  40bb13:	xor    ebp,ecx
  40bb15:	loope  0x40baa3
  40bb17:	sub    al,0xb6
  40bb19:	jle    0x40bae8
  40bb1b:	fbld   TBYTE PTR [esp+edx*2+0x38]
  40bb1f:	mov    esi,0xdc6850f5
  40bb24:	jge    0x40bb6b
  40bb26:	(bad)  
  40bb27:	mov    al,ds:0xe13c32f3
  40bb2c:	out    dx,eax
  40bb2d:	dec    edx
  40bb2e:	adc    edx,DWORD PTR [edi]
  40bb30:	int    0x33
  40bb32:	clc    
  40bb33:	(bad)  
  40bb34:	mov    eax,0x7ef43534
  40bb39:	pop    esp
  40bb3a:	inc    ebx
  40bb3b:	pop    eax
  40bb3c:	sbb    al,0x41
  40bb3e:	rcl    DWORD PTR [ebx],cl
  40bb40:	xor    al,0xbd
  40bb42:	std    
  40bb43:	pop    ebx
  40bb44:	mov    dh,BYTE PTR [edx-0x3c]
  40bb47:	mov    WORD PTR [edi-0x70],es
  40bb4a:	pop    eax
  40bb4b:	mov    ebx,0x8ae85499
  40bb50:	clc    
  40bb51:	test   al,0x1e
  40bb53:	and    dl,BYTE PTR [eax+0x213e5b88]
  40bb59:	cmp    ah,bl
  40bb5b:	jle    0x40bb06
  40bb5d:	jne    0x40bb27
  40bb5f:	rcl    esi,cl
  40bb61:	push   0xffffffdc
  40bb63:	outs   dx,BYTE PTR ds:[esi]
  40bb64:	push   esi
  40bb65:	xor    al,0xaf
  40bb67:	arpl   WORD PTR [ebp+esi*1-0x495c8bc7],cx
  40bb6e:	enter  0xf134,0x22
  40bb72:	ror    BYTE PTR [ebp-0x57d4a9c1],cl
  40bb78:	and    esp,DWORD PTR [ebx+0xfdc964f]
  40bb7e:	imul   edx,eax,0x566cd3bd
  40bb84:	arpl   WORD PTR [edi],dx
  40bb86:	mov    ds:0x9bf70d04,eax
  40bb8b:	push   ecx
  40bb8c:	adc    esp,eax
  40bb8e:	push   ebx
  40bb8f:	adc    edx,esp
  40bb91:	adc    al,0x7b
  40bb93:	bound  ebp,QWORD PTR [ecx]
  40bb95:	dec    ebp
  40bb96:	fimul  DWORD PTR [ecx+0x3b]
  40bb99:	pop    ebp
  40bb9a:	fmul   DWORD PTR [ebp+0x19]
  40bb9d:	lods   eax,DWORD PTR ds:[esi]
  40bb9e:	int    0xd8
  40bba0:	add    eax,0x74fd9321
  40bba5:	adc    al,0x7b
  40bba7:	jbe    0x40bb2a
  40bba9:	cld    
  40bbaa:	cmp    eax,0x877a6b1e
  40bbaf:	sub    al,0x48
  40bbb2:	jo     0x40bba1
  40bbb4:	jae    0x40bbcb
  40bbb6:	out    0x6c,eax
  40bbb8:	out    dx,eax
  40bbb9:	fwait
  40bbba:	jb     0x40bb87
  40bbbc:	xor    al,0xf9
  40bbbe:	mov    eax,ds:0x2fa635a4
  40bbc3:	popa   
  40bbc4:	dec    edi
  40bbc5:	dec    eax
  40bbc6:	xchg   ecx,eax
  40bbc7:	add    eax,0xb502c439
  40bbcc:	push   es
  40bbcd:	mov    edx,0xe939d737
  40bbd2:	mov    edx,0x6f1486f
  40bbd7:	pop    ebx
  40bbd8:	cld    
  40bbd9:	sub    eax,0xaf320313
  40bbde:	jmp    0x5461:0x23f46b3d
  40bbe5:	mul    BYTE PTR [ebx+0x213100e0]
  40bbeb:	mov    eax,0x633edd12
  40bbf0:	call   0x740b707a
  40bbf5:	call   0x724daf9
  40bbfa:	or     ecx,DWORD PTR [eax+edi*8+0x368e1001]
  40bc01:	(bad)  
  40bc02:	enter  0x2865,0xf8
  40bc06:	dec    ebp
  40bc07:	(bad)  
  40bc08:	iret   
  40bc09:	adc    al,BYTE PTR [edx]
  40bc0b:	ins    DWORD PTR es:[edi],dx
  40bc0c:	mov    esi,0xbccc29fc
  40bc11:	inc    ecx
  40bc12:	shr    BYTE PTR [edi+0x3f],0x5e
  40bc16:	sbb    eax,0x51d416f7
  40bc1b:	scas   al,BYTE PTR es:[edi]
  40bc1c:	or     DWORD PTR [ebp-0x2d47abe9],eax
  40bc22:	pop    eax
  40bc23:	xchg   ebx,eax
  40bc24:	sahf   
  40bc25:	xchg   DWORD PTR [esi],ebx
  40bc27:	pop    DWORD PTR [eax-0x6]
  40bc2a:	(bad)  
  40bc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc2c:	push   ebx
  40bc2d:	aaa    
  40bc2e:	dec    ebx
  40bc2f:	sub    al,0x56
  40bc31:	(bad)  
  40bc32:	ficomp WORD PTR [edi]
  40bc34:	xor    al,0x5a
  40bc36:	xchg   BYTE PTR [edx+0x7e3c8d2a],dl
  40bc3c:	push   esp
  40bc3d:	dec    BYTE PTR [eax]
  40bc3f:	xchg   ebp,eax
  40bc40:	js     0x40bbff
  40bc42:	inc    esi
  40bc43:	pusha  
  40bc44:	jns    0x40bc41
  40bc46:	jae    0x40bbc9
  40bc48:	xor    ebp,edx
  40bc4a:	pop    edx
  40bc4b:	imul   BYTE PTR [edi+esi*4-0x13]
  40bc4f:	in     eax,dx
  40bc50:	push   ecx
  40bc51:	jno    0x40bc74
  40bc53:	or     dh,BYTE PTR [ebx+0x2df749da]
  40bc59:	in     eax,0xf3
  40bc5b:	and    eax,0xe80929ae
  40bc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc61:	xchg   edx,eax
  40bc62:	sub    BYTE PTR [esi+0x24],al
  40bc65:	mov    ecx,0xf07f7cd2
  40bc6a:	cmc    
  40bc6b:	hlt    
  40bc6c:	jno    0x40bced
  40bc6e:	scas   al,BYTE PTR es:[edi]
  40bc6f:	aad    0xaa
  40bc71:	aam    0xe2
  40bc73:	push   ebx
  40bc74:	int3   
  40bc75:	test   BYTE PTR [ebp+0x3b],cl
  40bc78:	neg    DWORD PTR [esi]
  40bc7a:	push   0xc5ee6611
  40bc7f:	call   0x8c7c5d4c
  40bc84:	dec    ebp
  40bc85:	push   0x3a
  40bc87:	rcr    dh,1
  40bc89:	repz add DWORD PTR [eax-0x47],0x5a60821e
  40bc91:	add    DWORD PTR [esi-0x52],ebx
  40bc94:	push   cs
  40bc95:	imul   BYTE PTR [ebp-0x6938c274]
  40bc9b:	and    al,0xf4
  40bc9d:	lea    ecx,[edx-0x428add37]
  40bca3:	aas    
  40bca4:	dec    ebp
  40bca5:	push   ebp
  40bca6:	(bad)  
  40bca7:	clc    
  40bca8:	inc    ebp
  40bca9:	arpl   WORD PTR [edi+edi*1-0x4b],dx
  40bcad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcae:	pop    ebp
  40bcaf:	mov    ebp,0x22cae1ba
  40bcb4:	xchg   edx,eax
  40bcb5:	(bad)  
  40bcb6:	push   esi
  40bcb7:	int3   
  40bcb8:	inc    ebp
  40bcb9:	dec    esp
  40bcba:	sti    
  40bcbb:	data16 sahf 
  40bcbd:	js     0x40bcdd
  40bcbf:	addr16 dec ebx
  40bcc1:	fwait
  40bcc2:	sti    
  40bcc3:	and    BYTE PTR [edx+0x5d7f9dd],ch
  40bcc9:	outs   dx,DWORD PTR ds:[esi]
  40bcca:	in     al,0xe0
  40bccc:	push   ecx
  40bccd:	inc    esi
  40bcce:	in     al,dx
  40bccf:	adc    ebp,DWORD PTR [ecx]
  40bcd1:	rcr    esi,cl
  40bcd3:	fwait
  40bcd4:	shl    DWORD PTR [edx-0xe],cl
  40bcd7:	mov    ds:0x1195facb,eax
  40bcdc:	adc    BYTE PTR [eax-0x52d27b88],al
  40bce2:	jp     0x40bcac
  40bce4:	loope  0x40bc90
  40bce6:	arpl   bp,sp
  40bce8:	jl     0x40bcc5
  40bcea:	bnd jle 0x40bcc2
  40bced:	cmc    
  40bcee:	push   edi
  40bcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf0:	test   DWORD PTR [esi+esi*1],ebx
  40bcf3:	cmp    al,0xf1
  40bcf5:	sti    
  40bcf6:	pop    ds
  40bcf7:	jns    0x40bcd1
  40bcf9:	add    BYTE PTR [eax-0x5c],bh
  40bcfc:	adc    bh,BYTE PTR [esi-0x71]
  40bcff:	mov    ch,0xfd
  40bd01:	cmp    edx,DWORD PTR [ebx]
  40bd03:	xchg   DWORD PTR [esi-0x14d4eb9],esi
  40bd09:	clc    
  40bd0a:	test   eax,0x26a730e1
  40bd0f:	inc    edi
  40bd10:	clc    
  40bd11:	sbb    ch,bl
  40bd13:	shr    BYTE PTR [esi-0x6],0x93
  40bd17:	xlat   BYTE PTR ds:[ebx]
  40bd18:	fdivr  st,st(0)
  40bd1a:	mov    bh,0xf8
  40bd1c:	or     al,0xb2
  40bd1e:	je     0x40bd0e
  40bd20:	in     al,0x4a
  40bd22:	jl     0x40bcb5
  40bd24:	push   esp
  40bd25:	pop    ss
  40bd26:	mov    esi,0xf44a0ce
  40bd2b:	xchg   DWORD PTR [eax+0x1b795621],ecx
  40bd31:	push   ecx
  40bd32:	out    0x42,eax
  40bd34:	sbb    al,0xcc
  40bd36:	scas   eax,DWORD PTR es:[edi]
  40bd37:	dec    esi
  40bd38:	test   eax,0xd4fffd4d
  40bd3d:	push   ecx
  40bd3e:	cdq    
  40bd3f:	add    al,0xf3
  40bd41:	test   eax,0xa99cd6dd
  40bd46:	shl    DWORD PTR [ebp-0x71],cl
  40bd49:	mov    esi,DWORD PTR ds:0x68795dd
  40bd4f:	push   esp
  40bd50:	loopne 0x40bdab
  40bd52:	xchg   ebx,eax
  40bd53:	stc    
  40bd54:	idiv   ah
  40bd56:	ja     0x40bd85
  40bd58:	aaa    
  40bd59:	sahf   
  40bd5a:	clc    
  40bd5b:	push   esp
  40bd5c:	cwde   
  40bd5d:	daa    
  40bd5e:	inc    edx
  40bd5f:	xchg   DWORD PTR [esi-0x7c0395b9],esp
  40bd65:	jecxz  0x40bd04
  40bd67:	add    al,0x47
  40bd69:	add    eax,0x3a632147
  40bd6e:	dec    BYTE PTR [ecx+0x3e1152e2]
  40bd74:	mov    bh,0xc2
  40bd76:	cmp    eax,DWORD PTR [edx-0x2a]
  40bd79:	push   eax
  40bd7a:	cwde   
  40bd7b:	mov    dh,0xe
  40bd7d:	js     0x40bd98
  40bd7f:	add    cl,BYTE PTR [ecx+0x74]
  40bd82:	stos   BYTE PTR es:[edi],al
  40bd83:	leave  
  40bd84:	aad    0x10
  40bd86:	jno    0x40bdef
  40bd88:	or     DWORD PTR [esi],ebp
  40bd8a:	fdiv   DWORD PTR ds:0xf02c565e
  40bd90:	in     eax,0xaa
  40bd92:	xchg   esp,eax
  40bd93:	retf   0x213a
  40bd96:	or     bh,dl
  40bd98:	xor    DWORD PTR [ebx],edi
  40bd9a:	pusha  
  40bd9b:	imul   ebx,DWORD PTR [ebx],0x104d3026
  40bda1:	scas   al,BYTE PTR es:[edi]
  40bda2:	pop    edi
  40bda3:	xchg   esp,eax
  40bda4:	push   es
  40bda5:	cmp    edi,edi
  40bda7:	and    DWORD PTR fs:[ebx-0x7e6e256],ebx
  40bdae:	xchg   esp,eax
  40bdaf:	jge    0x40bd7e
  40bdb1:	sbb    edx,0x85de9537
  40bdb7:	or     BYTE PTR [ebx+0x690e9cc0],al
  40bdbd:	es nop
  40bdbf:	push   eax
  40bdc0:	xor    al,0x46
  40bdc2:	repnz xor edi,esi
  40bdc5:	mov    edi,0xcc22772
  40bdca:	clc    
  40bdcb:	cmp    DWORD PTR [ecx+0x75],ebx
  40bdce:	dec    ecx
  40bdcf:	outs   dx,DWORD PTR ds:[esi]
  40bdd0:	or     bl,0x9d
  40bdd3:	lahf   
  40bdd4:	or     ecx,DWORD PTR [eax-0x25]
  40bdd7:	xor    eax,eax
  40bdd9:	std    
  40bdda:	lea    esi,[ebx]
  40bddc:	inc    edx
  40bddd:	dec    edx
  40bdde:	leave  
  40bddf:	leave  
  40bde0:	or     BYTE PTR [bp+di+0x1d],dl
  40bde4:	dec    esp
  40bde5:	adc    bl,BYTE PTR [ebx]
  40bde7:	into   
  40bde8:	cmp    al,0xde
  40bdea:	mov    WORD PTR [edi+0x2bbd24dd],cs
  40bdf0:	or     cl,ah
  40bdf2:	push   ds
  40bdf3:	jmp    0x480bfdbb
  40bdf8:	stos   DWORD PTR es:[edi],eax
  40bdf9:	arpl   WORD PTR [edi+0xddd5dd1],sp
  40bdff:	adc    BYTE PTR [eax+0x69],al
  40be02:	pop    ebx
  40be03:	leave  
  40be04:	cmp    dh,ah
  40be06:	xor    edx,DWORD PTR [ebp-0x2595eeae]
  40be0c:	scas   al,BYTE PTR es:[edi]
  40be0d:	xchg   esi,eax
  40be0e:	stos   BYTE PTR es:[edi],al
  40be0f:	lods   al,BYTE PTR ds:[esi]
  40be10:	pop    edx
  40be11:	ret    0xbd35
  40be14:	pusha  
  40be15:	xchg   esi,eax
  40be16:	in     al,0x6d
  40be18:	adc    ebx,DWORD PTR [edx]
  40be1a:	mov    bl,0x14
  40be1c:	adc    ah,dh
  40be1e:	in     eax,dx
  40be1f:	jno    0x40bdb6
  40be21:	pop    esi
  40be22:	fidivr DWORD PTR [esi+edi*1]
  40be25:	or     bl,BYTE PTR [ebp-0x3b]
  40be28:	rcr    DWORD PTR [ebx+0x3080a1ff],cl
  40be2e:	(bad)
  40be31:	push   cs
  40be32:	rol    DWORD PTR [esi+0x68],1
  40be35:	add    al,0xdb
  40be37:	stc    
  40be38:	dec    esp
  40be39:	jbe    0x40be0e
  40be3b:	pop    ebx
  40be3c:	cmp    al,0x37
  40be3e:	stos   BYTE PTR es:[edi],al
  40be3f:	pop    esp
  40be40:	inc    ebp
  40be41:	test   BYTE PTR [ecx],dh
  40be43:	push   esi
  40be44:	add    DWORD PTR [edi],eax
  40be46:	ror    BYTE PTR [ebp-0x12],cl
  40be49:	sbb    eax,0xb1b8c519
  40be4e:	adc    BYTE PTR ds:0x65f9202f,dl
  40be54:	pop    edi
  40be55:	out    dx,al
  40be56:	cmp    DWORD PTR [ebp-0x32],esp
  40be59:	sub    al,0x9f
  40be5b:	jle    0x40beb9
  40be5d:	test   DWORD PTR [edx-0x1ac9b792],ebp
  40be63:	mov    ebp,0x44c9817a
  40be68:	mov    bl,0x2b
  40be6a:	cmp    DWORD PTR [ebx],ebp
  40be6c:	cwde   
  40be6d:	and    DWORD PTR [ebp+eiz*8-0x2e],esi
  40be71:	mov    BYTE PTR [ebp+0x395d74e0],bl
  40be77:	loope  0x40be12
  40be79:	test   BYTE PTR [esi-0x7d],ah
  40be7c:	mul    DWORD PTR [esi-0x588ca5a1]
  40be82:	xor    eax,0xaf0b7080
  40be87:	mov    al,0x3f
  40be89:	clc    
  40be8a:	push   esi
  40be8b:	dec    ebx
  40be8c:	pop    esp
  40be8d:	inc    ebp
  40be8e:	jae    0x40bed9
  40be90:	vminps xmm1,xmm2,xmm6
  40be94:	adc    DWORD PTR [edi+ebx*4-0x48e00569],ecx
  40be9b:	jae    0x40befe
  40be9d:	add    eax,0xdc096cb8
  40bea2:	mov    ch,0x40
  40bea4:	pop    esp
  40bea5:	mov    ebp,0x5becfa67
  40beaa:	gs pop ds
  40beac:	or     ah,BYTE PTR [edx+eiz*1+0x1346bfe5]
  40beb3:	sub    DWORD PTR [ebx-0x7f],edi
  40beb6:	imul   esp,DWORD PTR [ecx+0x5d],0x63929c1
  40bebd:	daa    
  40bebe:	xchg   edx,eax
  40bebf:	pop    edi
  40bec0:	dec    ecx
  40bec1:	adc    al,0xb6
  40bec3:	adc    al,BYTE PTR [eax]
  40bec5:	ret    0x41f
  40bec8:	arpl   WORD PTR [edx+0x411dc473],bp
  40bece:	cld    
  40becf:	jno    0x40bf3f
  40bed1:	leave  
  40bed2:	lds    esp,FWORD PTR [edi]
  40bed4:	inc    edx
  40bed5:	xor    dl,0xc7
  40bed8:	dec    ebx
  40bed9:	add    BYTE PTR [ebp+0x4e],dl
  40bedc:	mov    al,0xb5
  40bede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bedf:	sti    
  40bee0:	mov    edi,0xf24b02d1
  40bee5:	mov    al,0x52
  40bee7:	jecxz  0x40befe
  40bee9:	daa    
  40beea:	push   0xc64a9eca
  40beef:	push   ss
  40bef0:	sub    BYTE PTR [edx],cl
  40bef2:	fdivr  QWORD PTR [ecx-0x1]
  40bef5:	outs   dx,DWORD PTR ds:[esi]
  40bef6:	imul   esi,DWORD PTR [edi-0x44],0x90e1411d
  40befd:	mov    esi,0xf3e28196
  40bf02:	inc    esp
  40bf03:	push   ebp
  40bf04:	inc    edi
  40bf05:	push   es
  40bf06:	cli    
  40bf07:	xchg   ebp,esp
  40bf09:	jns    0x40bf85
  40bf0b:	jg     0x40bea0
  40bf0d:	imul   eax,ecx,0xca449ec4
  40bf13:	arpl   WORD PTR [edx],bx
  40bf15:	repnz push es
  40bf17:	neg    BYTE PTR [ebx+0x7e04c913]
  40bf1d:	rol    BYTE PTR [esi+edx*2+0x2ad87a35],cl
  40bf24:	add    al,0x9b
  40bf26:	cwde   
  40bf27:	or     BYTE PTR [ebx-0x6847fb0d],0x30
  40bf2e:	sbb    BYTE PTR [eax],dh
  40bf30:	jge    0x40bf8f
  40bf32:	mov    dl,0xf2
  40bf34:	mov    DWORD PTR ds:0x8d59e1e,0x24afebe9
  40bf3e:	inc    ebp
  40bf3f:	das    
  40bf40:	mov    ds:0x42661d6a,eax
  40bf45:	rcr    BYTE PTR [esi-0x1a],cl
  40bf48:	pop    edi
  40bf49:	jecxz  0x40bf88
  40bf4b:	outs   dx,DWORD PTR ds:[esi]
  40bf4c:	cs pop ebp
  40bf4e:	mov    edx,0xa3e7f704
  40bf53:	xlat   BYTE PTR ds:[ebx]
  40bf54:	popa   
  40bf55:	inc    ecx
  40bf56:	xchg   edi,eax
  40bf57:	xchg   dh,al
  40bf59:	imul   BYTE PTR [edi+edx*2-0x67]
  40bf5d:	xor    dh,BYTE PTR [edi+edx*1-0x55]
  40bf61:	jmp    0x40bfac
  40bf63:	fimul  WORD PTR [ecx+edx*2+0x21]
  40bf67:	bound  ebx,QWORD PTR [eax-0x32dc7fd7]
  40bf6d:	and    DWORD PTR [esi+0x7c],esp
  40bf70:	xchg   esi,eax
  40bf71:	inc    ebp
  40bf72:	adc    DWORD PTR [eax-0x17],eax
  40bf75:	and    al,0x86
  40bf77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf78:	add    al,0x78
  40bf7a:	imul   edi,DWORD PTR [ebx+0x5feb080],0x67
  40bf81:	popa   
  40bf82:	sti    
  40bf83:	sbb    bl,BYTE PTR [esi+0x29]
  40bf86:	(bad)  
  40bf87:	ret    0x4d61
  40bf8a:	cld    
  40bf8b:	shl    ah,cl
  40bf8d:	push   esp
  40bf8e:	mov    dh,0x1
  40bf90:	or     al,0x14
  40bf92:	or     al,0x93
  40bf94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf95:	outs   dx,DWORD PTR ds:[esi]
  40bf96:	std    
  40bf97:	rcl    DWORD PTR [edx-0x21],1
  40bf9a:	mov    edx,0xb33a6c6c
  40bf9f:	push   eax
  40bfa0:	adc    ecx,ecx
  40bfa2:	pminsw mm0,mm7
  40bfa5:	xchg   ebp,eax
  40bfa6:	mov    dh,0x7d
  40bfa8:	cmp    al,dh
  40bfaa:	mov    edx,0x293074a5
  40bfaf:	nop
  40bfb0:	cs cli 
  40bfb2:	repz sbb eax,0x53958a23
  40bfb8:	loop   0x40bfa0
  40bfba:	test   bl,ah
  40bfbc:	pop    eax
  40bfbd:	dec    edx
  40bfbe:	jmp    0x2ae9:0xd3f63247
  40bfc5:	out    0x5b,al
  40bfc7:	les    esp,FWORD PTR [edx-0x6b]
  40bfca:	dec    ebp
  40bfcb:	push   0xfbb335b4
  40bfd0:	jl     0x40bf85
  40bfd2:	add    al,0x35
  40bfd4:	lahf   
  40bfd5:	aaa    
  40bfd6:	xchg   esi,eax
  40bfd7:	nop
  40bfd8:	inc    ebx
  40bfd9:	sbb    al,0x7c
  40bfdb:	aas    
  40bfdc:	xor    al,0x9b
  40bfde:	dec    esp
  40bfdf:	adc    esi,edi
  40bfe1:	shl    DWORD PTR [edi-0x2c],1
  40bfe4:	fcomp  DWORD PTR [esi]
  40bfe6:	neg    BYTE PTR [ebp+0x66]
  40bfe9:	jmp    0x27745a69
  40bfee:	(bad)  
  40bfef:	das    
  40bff0:	jno    0x40bff4
  40bff2:	(bad)  
  40bff3:	aad    0x83
  40bff5:	loop   0x40c02c
  40bff7:	cs push ebp
  40bff9:	push   ss
  40bffa:	push   ss
  40bffb:	or     ch,BYTE PTR [bp-0x5724]
  40c000:	dec    edi
  40c001:	stos   BYTE PTR es:[edi],al
  40c002:	mov    DWORD PTR [bp-0x60],ebp
  40c006:	jae    0x40bfd9
  40c008:	into   
  40c009:	lods   al,BYTE PTR ds:[esi]
  40c00a:	fdiv   st,st(5)
  40c00c:	test   BYTE PTR [ecx],ah
  40c00e:	jg     0x40c077
  40c010:	lods   al,BYTE PTR ds:[esi]
  40c011:	(bad)
  40c014:	sbb    al,0xb0
  40c016:	pop    ecx
  40c017:	pop    eax
  40c018:	xor    DWORD PTR [ebp-0x18],ebp
  40c01b:	adc    cl,BYTE PTR [ebp-0x78e994f2]
  40c021:	adc    DWORD PTR [eax-0x2757e6bb],0xbd4c832a
  40c02b:	int    0x87
  40c02d:	and    ebp,ebp
  40c02f:	push   ebp
  40c030:	cwde   
  40c031:	and    eax,0xe5484963
  40c036:	and    al,ah
  40c038:	push   edi
  40c039:	ret    
  40c03a:	or     ah,0x1e
  40c03d:	and    eax,0x4018411e
  40c042:	dec    ebx
  40c043:	push   edi
  40c044:	or     al,0x15
  40c046:	mov    al,ds:0xeb56da75
  40c04b:	and    al,0xc3
  40c04d:	mov    ds:0x6334348b,eax
  40c052:	mov    al,ds:0x87dc0bad
  40c057:	push   ebp
  40c058:	push   es
  40c059:	or     al,0xb
  40c05b:	fmulp  st(1),st
  40c05d:	sub    esi,DWORD PTR [ebp-0x1f5eac92]
  40c063:	push   0xffffffb5
  40c065:	jle    0x40c029
  40c067:	sbb    BYTE PTR [ebx+0x60],dh
  40c06a:	popa   
  40c06b:	out    dx,eax
  40c06c:	xchg   ecx,eax
  40c06d:	sbb    bh,cl
  40c06f:	iret   
  40c070:	add    BYTE PTR [ebx],0x24
  40c073:	and    al,0xa0
  40c075:	or     dl,BYTE PTR [eax]
  40c077:	or     bh,dh
  40c079:	imul   edi,DWORD PTR [edx+0x1178bd47],0x36e797db
  40c083:	mov    ds,eax
  40c085:	jmp    0x40c096
  40c087:	sti    
  40c088:	inc    edi
  40c089:	and    al,0xc6
  40c08b:	mov    dh,0xeb
  40c08d:	iret   
  40c08e:	iret   
  40c08f:	inc    ecx
  40c090:	add    esp,DWORD PTR [eax+edx*4+0x59]
  40c094:	pop    esp
  40c095:	add    ebx,DWORD PTR [edx+0x69]
  40c098:	bound  esp,QWORD PTR [esi+edi*2-0x68ea340e]
  40c09f:	dec    ebx
  40c0a0:	push   edi
  40c0a1:	sbb    edi,edi
  40c0a3:	(bad)  
  40c0a4:	mov    bh,0x51
  40c0a6:	sub    eax,0x7aad5557
  40c0ab:	dec    edi
  40c0ac:	mov    bl,0x14
  40c0ae:	cmp    eax,0x3387f8dd
  40c0b3:	fs (bad) 
  40c0b5:	leave  
  40c0b6:	sub    ch,0x4a
  40c0b9:	retf   
  40c0ba:	repz and al,0xcc
  40c0bd:	mov    BYTE PTR [ebx+0x208f52c5],bl
  40c0c3:	add    esp,DWORD PTR [eax-0x62]
  40c0c6:	dec    edi
  40c0c7:	ss ja  0x40c075
  40c0ca:	loope  0x40c109
  40c0cc:	inc    eax
  40c0cd:	mov    DWORD PTR [edx-0x72],edi
  40c0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d1:	fcmovu st,st(7)
  40c0d3:	fld    QWORD PTR [ebx]
  40c0d5:	cld    
  40c0d6:	xchg   esp,eax
  40c0d7:	fcom   DWORD PTR [esi-0x874e8be]
  40c0dd:	pop    ebx
  40c0de:	out    0x37,al
  40c0e0:	jae    0x40c0d4
  40c0e2:	cmp    BYTE PTR [edi],ah
  40c0e4:	or     cl,BYTE PTR ds:0x6991f957
  40c0ea:	push   esp
  40c0eb:	mov    ebx,0x32237811
  40c0f0:	and    ah,BYTE PTR [ebp-0x7]
  40c0f3:	add    BYTE PTR [ebx+0x1e298aa6],bh
  40c0f9:	jb     0x40c154
  40c0fb:	ror    ebx,0xe3
  40c0fe:	fcomp  DWORD PTR [edi]
  40c100:	sub    ebx,ecx
  40c102:	and    DWORD PTR [eax-0x3a793673],eax
  40c108:	lds    edx,FWORD PTR [edx+ecx*4+0x1a]
  40c10c:	imul   ebx,DWORD PTR [esp+edx*8-0x6cf7dd0],0x6a80b82e
  40c117:	jne    0x40c0c6
  40c119:	sbb    eax,0xceb41114
  40c11e:	scas   eax,DWORD PTR es:[edi]
  40c11f:	inc    ebx
  40c120:	mov    ds:0xdb404f27,eax
  40c125:	fnstsw WORD PTR [ebx+edi*4-0x2d]
  40c129:	adc    cl,BYTE PTR [ebp-0x1bf1bc1c]
  40c12f:	mov    eax,0x189f30b
  40c134:	push   ds
  40c135:	xchg   ebp,eax
  40c136:	xchg   al,dh
  40c138:	xchg   edi,eax
  40c139:	and    bh,BYTE PTR [esi]
  40c13b:	or     DWORD PTR ds:0x1081d367,ecx
  40c141:	mov    ds:0x10b08a,al
  40c146:	add    DWORD PTR [ebx+0x4],0x41
  40c14a:	jge    0x40c194
  40c14c:	das    
  40c14d:	adc    al,0x24
  40c14f:	sbb    al,0x3d
  40c151:	dec    eax
  40c152:	popa   
  40c153:	fist   WORD PTR [eax+0x619ddef0]
  40c159:	push   es
  40c15a:	or     DWORD PTR [eax+0x36b41924],ebp
  40c160:	lea    ebx,[ebp-0x37]
  40c163:	out    0xe0,al
  40c165:	aas    
  40c166:	push   esi
  40c167:	cld    
  40c168:	mov    WORD PTR ds:0xc9885203,?
  40c16e:	push   edi
  40c16f:	dec    ebx
  40c170:	shr    BYTE PTR [ebx+esi*1+0x74],cl
  40c174:	mul    DWORD PTR [edx]
  40c176:	in     al,0x6d
  40c178:	scas   eax,DWORD PTR es:[edi]
  40c179:	adc    bh,BYTE PTR [eax-0x404d99b0]
  40c17f:	jb     0x40c1e2
  40c181:	cli    
  40c182:	sub    BYTE PTR [ebx],0x84
  40c185:	ret    
  40c186:	pop    ebp
  40c187:	jl     0x40c127
  40c189:	fnstcw WORD PTR [ecx]
  40c18b:	jno    0x40c110
  40c18d:	adc    DWORD PTR [ecx+esi*2],eax
  40c190:	test   DWORD PTR [eax-0x36483495],ebx
  40c196:	jge    0x40c17d
  40c198:	cwde   
  40c199:	pop    ecx
  40c19a:	mov    ss,esi
  40c19c:	push   ecx
  40c19d:	sbb    BYTE PTR [edx],0xf3
  40c1a0:	in     eax,dx
  40c1a1:	mov    ds:0x62410eb9,eax
  40c1a6:	das    
  40c1a7:	mov    ds:0xf77946ae,eax
  40c1ac:	mov    bl,0x84
  40c1ae:	in     eax,dx
  40c1af:	(bad)  
  40c1b0:	jmp    0x4979dc05
  40c1b5:	loope  0x40c203
  40c1b7:	sbb    BYTE PTR [edi],ah
  40c1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1ba:	repz add BYTE PTR [esi+0x1],dh
  40c1be:	mov    esp,0xa43940f
  40c1c3:	dec    ebx
  40c1c4:	cmp    eax,0x8e9fa7f2
  40c1c9:	pop    es
  40c1ca:	xchg   ecx,eax
  40c1cb:	lds    eax,FWORD PTR [ebx+eiz*2-0x599407ad]
  40c1d2:	inc    ecx
  40c1d3:	inc    ebx
  40c1d4:	and    bl,BYTE PTR [ecx-0x42]
  40c1d7:	enter  0x6c7e,0xcb
  40c1db:	push   ds
  40c1dc:	shr    DWORD PTR [esi-0x50],1
  40c1df:	cmp    al,0x8a
  40c1e1:	xchg   ch,ch
  40c1e3:	add    al,0x6b
  40c1e5:	xchg   edx,eax
  40c1e6:	jno    0x40c210
  40c1e8:	and    esi,DWORD PTR [eax-0x6f]
  40c1eb:	cmp    al,0x83
  40c1ed:	retf   0xe18d
  40c1f0:	sub    cl,BYTE PTR [edx]
  40c1f2:	xor    al,0x4
  40c1f4:	xchg   esp,eax
  40c1f5:	jno    0x40c217
  40c1f7:	sbb    eax,0x22263716
  40c1fc:	pop    ebp
  40c1fd:	mov    eax,ds:0x91db4384
  40c202:	js     0x40c1fc
  40c204:	lea    edx,[ecx-0x11]
  40c207:	shl    BYTE PTR [edi+eax*8],cl
  40c20a:	fcom   DWORD PTR [ebp+0x6c]
  40c20d:	push   edx
  40c20e:	and    DWORD PTR [edi],ecx
  40c210:	mov    edx,ebx
  40c212:	push   edx
  40c213:	mov    esi,0x57fd1847
  40c218:	push   esi
  40c219:	fwait
  40c21a:	outs   dx,BYTE PTR ds:[esi]
  40c21b:	dec    ebp
  40c21c:	xor    DWORD PTR [ebp+0x674df3d2],edx
  40c222:	jmp    0xf708:0xe30fd029
  40c229:	push   ebp
  40c22a:	cmp    bl,BYTE PTR [ebx]
  40c22c:	add    eax,ecx
  40c22e:	and    al,0x10
  40c230:	mov    edx,DWORD PTR [ecx+0x1aef176d]
  40c236:	rcr    edi,1
  40c238:	loop   0x40c284
  40c23a:	mov    ss,WORD PTR [ebp-0x67]
  40c23d:	mov    eax,0x53c6e6c7
  40c242:	xchg   ebx,eax
  40c243:	cmp    al,0x97
  40c245:	mov    ecx,0x98be299c
  40c24a:	jge    0x40c232
  40c24c:	xchg   ebx,eax
  40c24d:	or     eax,0xb47c18b3
  40c252:	addr16 aam 0x2f
  40c255:	out    0x3c,al
  40c257:	mov    cl,0xef
  40c259:	and    eax,0xa68a6dee
  40c25e:	sbb    ah,BYTE PTR [eax-0x1cde5abb]
  40c264:	sbb    ah,BYTE PTR [esi-0x6684aa3b]
  40c26a:	loop   0x40c26f
  40c26c:	mov    eax,0xca2874a5
  40c271:	mov    cl,BYTE PTR [edi-0x5985929d]
  40c277:	repz jbe 0x40c238
  40c27a:	adc    DWORD PTR [edi+0x1a812360],ebp
  40c280:	push   esi
  40c281:	loopne 0x40c238
  40c283:	and    DWORD PTR [ecx+0x7cef90d],edi
  40c289:	mov    ebx,0x4b40682c
  40c28e:	stos   DWORD PTR es:[edi],eax
  40c28f:	lods   eax,DWORD PTR ds:[esi]
  40c290:	inc    edx
  40c291:	pop    esi
  40c292:	mov    bl,BYTE PTR [esp+ebx*8-0x30]
  40c296:	add    ch,BYTE PTR [esp+ecx*2]
  40c299:	or     dh,BYTE PTR [esp+esi*4+0x2d1c528f]
  40c2a0:	icebp  
  40c2a1:	aaa    
  40c2a2:	add    al,0xc3
  40c2a4:	xlat   BYTE PTR ds:[ebx]
  40c2a5:	mov    ebx,0x45323e2c
  40c2aa:	cmp    esi,esp
  40c2ac:	jae    0x40c318
  40c2ae:	adc    eax,0xdb77e59c
  40c2b3:	mov    esi,0xf32b8592
  40c2b8:	lods   al,BYTE PTR ds:[esi]
  40c2b9:	(bad)  
  40c2bb:	dec    esi
  40c2bc:	sub    eax,0x10fc76e3
  40c2c1:	jo     0x40c2b5
  40c2c3:	push   ebp
  40c2c4:	mov    edi,0x79b5bcc6
  40c2c9:	add    al,0x8e
  40c2cb:	dec    edi
  40c2cc:	pop    edx
  40c2cd:	outs   dx,DWORD PTR ds:[esi]
  40c2ce:	inc    ebx
  40c2cf:	lods   al,BYTE PTR ds:[esi]
  40c2d0:	(bad)  
  40c2d2:	dec    edx
  40c2d3:	jbe    0x40c2bb
  40c2d5:	stos   DWORD PTR es:[edi],eax
  40c2d6:	repnz xlat BYTE PTR ds:[ebx]
  40c2d8:	sbb    al,0x9a
  40c2da:	out    0x2f,eax
  40c2dc:	hlt    
  40c2dd:	daa    
  40c2de:	jge    0x40c29a
  40c2e0:	mov    ebx,0x8fde0da0
  40c2e5:	push   ecx
  40c2e6:	bound  ebp,QWORD PTR [edx-0x1462c003]
  40c2ec:	mov    dh,BYTE PTR [ebx]
  40c2ee:	gs mov esi,0x7143fd8a
  40c2f4:	popf   
  40c2f5:	mov    ds:0x106d9118,al
  40c2fa:	test   al,0xa8
  40c2fc:	out    dx,al
  40c2fd:	push   ebx
  40c2fe:	or     bl,BYTE PTR [eax]
  40c300:	adc    al,0xae
  40c302:	jle    0x40c2f7
  40c304:	or     BYTE PTR [esi],bl
  40c306:	xchg   ecx,eax
  40c307:	sti    
  40c308:	js     0x40c2d5
  40c30a:	and    eax,0xce31d970
  40c30f:	sar    DWORD PTR ds:0x97beaf45,cl
  40c315:	in     eax,0xe2
  40c317:	scas   eax,DWORD PTR es:[edi]
  40c318:	mov    cl,BYTE PTR [edx-0x72d6be92]
  40c31e:	imul   esi,DWORD PTR [ecx],0x2ee42b4e
  40c324:	adc    eax,DWORD PTR [eax+0x2c]
  40c327:	mov    edx,gs
  40c329:	add    ebx,ecx
  40c32b:	jmp    0x7c0114db
  40c330:	push   edi
  40c331:	cmp    bl,dh
  40c333:	pop    esi
  40c334:	sub    DWORD PTR [ecx-0x63],ebp
  40c337:	les    esi,FWORD PTR [edi]
  40c339:	mov    ecx,0xad4bb17c
  40c33e:	add    ah,bl
  40c340:	mov    edx,0xe958d445
  40c345:	cwde   
  40c346:	mov    dl,0xa0
  40c348:	push   eax
  40c349:	adc    BYTE PTR [edi],ch
  40c34b:	(bad)  [edx-0x4877ca3]
  40c351:	sub    al,0x69
  40c353:	stc    
  40c354:	js     0x40c2e4
  40c356:	(bad)  
  40c357:	cmp    al,0xb6
  40c359:	icebp  
  40c35a:	inc    esp
  40c35b:	popa   
  40c35c:	jnp    0x40c32d
  40c35e:	push   esi
  40c360:	dec    ecx
  40c361:	inc    ebp
  40c362:	jl     0x40c3c9
  40c364:	xchg   edx,eax
  40c365:	cmp    eax,0x6c030c59
  40c36a:	xchg   esi,eax
  40c36b:	das    
  40c36c:	(bad)  
  40c36d:	cli    
  40c36e:	inc    ebp
  40c36f:	dec    eax
  40c370:	inc    ecx
  40c371:	sub    ebx,DWORD PTR [esi+0x12]
  40c374:	dec    ebx
  40c375:	dec    esi
  40c376:	mov    ebx,esi
  40c378:	and    BYTE PTR [ecx],dh
  40c37a:	pop    ebx
  40c37b:	ficom  WORD PTR [ecx]
  40c37d:	in     eax,dx
  40c37e:	adc    al,0x9b
  40c380:	stc    
  40c381:	adc    BYTE PTR [edi+ecx*4],al
  40c384:	inc    eax
  40c385:	xchg   edx,eax
  40c386:	(bad)  
  40c387:	mov    edx,0xa6c443fb
  40c38c:	mov    al,0x1e
  40c38e:	outs   dx,DWORD PTR ds:[esi]
  40c38f:	jnp    0x40c3de
  40c391:	inc    ebp
  40c392:	(bad)  
  40c393:	out    0xfb,eax
  40c395:	or     al,BYTE PTR [edi-0x62f6ce52]
  40c39b:	mov    WORD PTR [ebx-0x1fa15d7a],ds
  40c3a1:	bound  ebp,QWORD PTR [ebx]
  40c3a3:	and    bl,BYTE PTR ds:0xdb93fc16
  40c3a9:	adc    DWORD PTR [ecx+0x11],ecx
  40c3ac:	inc    ebp
  40c3ad:	lgs    esp,FWORD PTR [esi+0x159f60ae]
  40c3b4:	pop    esp
  40c3b5:	adc    BYTE PTR [esi],dl
  40c3b7:	inc    esp
  40c3b8:	fcmovu st,st(5)
  40c3ba:	arpl   WORD PTR [edi+edx*4+0x3a85c744],cx
  40c3c1:	sub    al,0x8c
  40c3c3:	jle    0x40c3fc
  40c3c5:	xchg   edi,eax
  40c3c6:	xor    al,0x9a
  40c3c8:	pop    ds
  40c3c9:	stos   DWORD PTR es:[edi],eax
  40c3ca:	fdivr  DWORD PTR [edi+0x8a08631]
  40c3d0:	enter  0xd8bf,0x5d
  40c3d4:	xchg   bl,bl
  40c3d6:	call   esp
  40c3d8:	or     al,0x24
  40c3da:	xlat   BYTE PTR ds:[ebx]
  40c3db:	lahf   
  40c3dc:	sbb    dh,dh
  40c3de:	or     edx,0x78bbb934
  40c3e4:	push   edx
  40c3e5:	rcr    BYTE PTR [edi+0x7bec0983],0x6f
  40c3ec:	mov    esi,0xfb67577f
  40c3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f2:	test   DWORD PTR [ecx],ebp
  40c3f4:	and    ebp,DWORD PTR [ecx+0x6e]
  40c3f7:	outs   dx,DWORD PTR ds:[esi]
  40c3f8:	data16 shl BYTE PTR [ecx+ebx*1-0x4d7d40d3],0xf4
  40c401:	and    esi,edi
  40c403:	lock xor ch,ch
  40c406:	(bad)  
  40c407:	xchg   esp,eax
  40c408:	ins    DWORD PTR es:[edi],dx
  40c409:	(bad)  
  40c40a:	dec    esp
  40c40b:	outs   dx,BYTE PTR ds:[esi]
  40c40c:	or     BYTE PTR [ebx],0xa6
  40c40f:	rcl    DWORD PTR [ebp-0x22],0xc1
  40c413:	fst    QWORD PTR [ecx-0x12f5a75b]
  40c419:	push   edx
  40c41a:	in     al,dx
  40c41b:	dec    eax
  40c41c:	mov    dh,0x9e
  40c41e:	cld    
  40c41f:	lock imul ecx,DWORD PTR [ebx+0x27],0x4d
  40c424:	arpl   WORD PTR [ebp-0x7f],ax
  40c427:	je     0x40c3e8
  40c429:	jmp    0xc5ae:0xbcde663b
  40c430:	inc    edi
  40c431:	outs   dx,DWORD PTR ds:[esi]
  40c432:	call   0xb72f1823
  40c437:	xor    DWORD PTR [edx],edx
  40c439:	stos   DWORD PTR es:[edi],eax
  40c43a:	(bad)  
  40c43b:	xchg   esp,eax
  40c43c:	mov    ebp,0x88b6727b
  40c441:	mov    BYTE PTR [edx-0x39],bh
  40c444:	fld1   
  40c446:	ret    
  40c447:	fwait
  40c448:	or     eax,0x31f2ef80
  40c44d:	hlt    
  40c44e:	test   DWORD PTR gs:[ecx+0x49],eax
  40c452:	loop   0x40c419
  40c454:	shr    BYTE PTR [ebx],0x3a
  40c457:	gs or  al,0xf9
  40c45a:	and    DWORD PTR [esi-0x4c4d735d],edx
  40c460:	and    al,0x74
  40c462:	pop    es
  40c463:	sbb    eax,0x5439e1f
  40c468:	inc    DWORD PTR [esi-0x65]
  40c46b:	mov    bl,0xb9
  40c46d:	mov    ch,0xec
  40c46f:	inc    esp
  40c470:	sub    ch,0x66
  40c473:	push   0x3a
  40c475:	push   es
  40c476:	bound  esp,QWORD PTR [esi+ecx*1]
  40c479:	mov    ds:0x6d61b67e,al
  40c47e:	dec    esi
  40c47f:	es addr16 inc eax
  40c482:	rcr    BYTE PTR [esi+esi*1+0x2a],0x3c
  40c487:	sbb    eax,0xa997a8df
  40c48c:	inc    ebx
  40c48d:	sbb    al,0xda
  40c48f:	iret   
  40c490:	adc    BYTE PTR [eax],ch
  40c492:	adc    BYTE PTR [edx-0x541cd1cd],cl
  40c498:	pop    es
  40c499:	sbb    esp,ebp
  40c49b:	daa    
  40c49c:	or     dl,ch
  40c49e:	inc    ebp
  40c49f:	lods   al,BYTE PTR ds:[esi]
  40c4a0:	jmp    0xfb00304e
  40c4a5:	mov    esp,0x20d842bd
  40c4aa:	inc    esp
  40c4ab:	add    edi,DWORD PTR [eax-0x58]
  40c4ae:	mov    esp,0xf51e96cd
  40c4b3:	outs   dx,BYTE PTR ds:[esi]
  40c4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b5:	ret    
  40c4b6:	in     al,0x8a
  40c4b8:	xor    DWORD PTR [ecx],0x8
  40c4bb:	int3   
  40c4bc:	sbb    eax,0x60f67ebd
  40c4c1:	mov    DWORD PTR [ebx-0x19],ecx
  40c4c4:	fs (bad) 
  40c4c6:	mov    ds:0x9c21ec66,al
  40c4cb:	xor    edi,DWORD PTR [esi+0x44]
  40c4ce:	int    0x5a
  40c4d0:	clc    
  40c4d1:	mov    ebx,0xfba8cdc8
  40c4d6:	int3   
  40c4d7:	out    0x58,eax
  40c4d9:	(bad)  
  40c4da:	mov    edi,0x4322193
  40c4df:	stos   DWORD PTR es:[edi],eax
  40c4e0:	push   edx
  40c4e1:	fcom   QWORD PTR [ecx+0x76]
  40c4e4:	push   ebp
  40c4e5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c4e7:	jp     0x40c4d3
  40c4e9:	add    dl,BYTE PTR [edi+esi*1+0x69f7ee05]
  40c4f0:	mov    ds:0x61bf1dac,al
  40c4f5:	xlat   BYTE PTR ds:[ebx]
  40c4f6:	sti    
  40c4f7:	dec    esp
  40c4f8:	imul   edi,DWORD PTR [esi-0x51],0xffffff8a
  40c4fc:	and    BYTE PTR ds:[edi+edi*8-0x3c],0x65
  40c502:	ins    DWORD PTR es:[edi],dx
  40c503:	aam    0xc1
  40c505:	out    0x11,eax
  40c507:	xchg   esp,eax
  40c508:	fisub  WORD PTR [esi]
  40c50a:	or     DWORD PTR [edx-0x2b],0xffffff9a
  40c50e:	jmp    0x40c4c4
  40c510:	jne    0x40c4ba
  40c512:	popa   
  40c513:	cmp    BYTE PTR [esi+0x51],cl
  40c516:	out    dx,al
  40c517:	loop   0x40c56c
  40c519:	div    BYTE PTR [eax+edi*2+0x7e61285]
  40c520:	jmp    0xf492:0x493c7b6
  40c527:	sar    BYTE PTR [ebp-0x29519786],0xd3
  40c52e:	cwde   
  40c52f:	pop    ebp
  40c530:	dec    edi
  40c531:	test   dh,0x5d
  40c534:	out    0x2c,eax
  40c536:	arpl   WORD PTR [eax+0x2b],cx
  40c539:	adc    eax,0x2a7eb580
  40c53e:	mov    ebp,0xf2b6f36
  40c543:	ret    0x923b
  40c546:	icebp  
  40c547:	jmp    0x40c5ba
  40c549:	and    eax,0xc983a8be
  40c54e:	aad    0xd7
  40c550:	aas    
  40c551:	push   eax
  40c552:	(bad)  
  40c553:	cmp    eax,0x5d7ff66
  40c558:	or     eax,0x1602a09f
  40c55d:	mov    DWORD PTR [edx+0xb],esp
  40c560:	cli    
  40c561:	lods   al,BYTE PTR ds:[esi]
  40c562:	cmp    al,0x90
  40c564:	mov    dl,0x3e
  40c566:	fimul  DWORD PTR [edi+0x2d]
  40c569:	sub    ch,bl
  40c56b:	jne    0x40c540
  40c56d:	int    0x6b
  40c56f:	mov    al,BYTE PTR ds:0xe25cca1f
  40c575:	cld    
  40c576:	repz cmp esi,edi
  40c579:	and    DWORD PTR fs:[esi-0x79f5463f],ecx
  40c580:	xchg   DWORD PTR [ebx],ecx
  40c582:	sub    al,dh
  40c584:	test   BYTE PTR [ebp-0x75],ah
  40c587:	aad    0x59
  40c589:	pop    edi
  40c58a:	retf   
  40c58b:	pop    ds
  40c58c:	std    
  40c58d:	(bad)  
  40c58e:	mov    ecx,esp
  40c590:	xor    eax,ecx
  40c592:	jmp    0x1b83a14c
  40c597:	ficom  DWORD PTR [ecx+0x6b9817fc]
  40c59d:	push   0x43
  40c59f:	(bad)  
  40c5a2:	jae    0x40c5e6
  40c5a4:	iret   
  40c5a5:	mov    ecx,0xd20b7e7a
  40c5aa:	add    eax,0x7865cfbc
  40c5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b0:	jnp    0x40c5a6
  40c5b2:	std    
  40c5b3:	jns    0x40c55d
  40c5b5:	cli    
  40c5b6:	mov    ebx,0xfacdc44b
  40c5bb:	push   esi
  40c5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5bd:	xchg   edx,eax
  40c5be:	outs   dx,DWORD PTR ds:[esi]
  40c5bf:	shl    DWORD PTR [ebx+0x74],0xc
  40c5c3:	aad    0xd4
  40c5c5:	lock pop ds
  40c5c7:	xor    al,0x97
  40c5c9:	push   edi
  40c5ca:	in     al,dx
  40c5cb:	push   0xfffffffe
  40c5cd:	inc    esi
  40c5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5cf:	mov    ecx,0xf77b4087
  40c5d4:	xchg   ebx,eax
  40c5d5:	or     ebp,ebx
  40c5d7:	in     eax,0xb8
  40c5d9:	or     bh,BYTE PTR [ebx-0x5bb26850]
  40c5df:	inc    esi
  40c5e0:	sahf   
  40c5e1:	push   ds
  40c5e2:	enter  0x6fbb,0x4c
  40c5e6:	out    0x99,al
  40c5e8:	push   ecx
  40c5e9:	xor    BYTE PTR [ebp-0x3725e840],0x51
  40c5f0:	and    eax,DWORD PTR [edx+0x6f07e568]
  40c5f6:	(bad)  
  40c5f8:	jmp    0xe756:0x1443f451
  40c5ff:	push   ss
  40c600:	dec    ebx
  40c601:	push   0x63
  40c603:	sbb    ecx,DWORD PTR [esi-0x2c]
  40c606:	jl     0x40c665
  40c608:	mov    eax,0xdb85a2f7
  40c60d:	mov    esi,0x7f113e8e
  40c612:	bound  esi,QWORD PTR [ecx+0x7a]
  40c615:	push   edi
  40c616:	push   edi
  40c617:	in     eax,dx
  40c618:	std    
  40c619:	push   ds
  40c61a:	repnz icebp 
  40c61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61d:	out    dx,eax
  40c61e:	cmp    al,0x3f
  40c620:	push   esi
  40c621:	mov    dl,0x5e
  40c623:	add    al,BYTE PTR [edx]
  40c625:	sub    ebp,DWORD PTR [ebx-0x2d]
  40c628:	adc    BYTE PTR [eax+ebp*1-0x1aef271c],0xd
  40c630:	or     al,BYTE PTR [edi]
  40c632:	cmp    BYTE PTR [eax],al
  40c634:	xor    BYTE PTR [esi-0x4e],dl
  40c637:	sti    
  40c638:	add    ecx,edi
  40c63a:	jmp    0x40c631
  40c63c:	shl    DWORD PTR [esi-0x7c046afc],cl
  40c642:	(bad)  
  40c643:	sub    al,0xa9
  40c645:	jge    0x40c65f
  40c647:	(bad)  
  40c648:	pop    ecx
  40c649:	pusha  
  40c64a:	mul    BYTE PTR [esi]
  40c64c:	push   ss
  40c64d:	mov    ebx,0x924b038
  40c652:	mov    cs,WORD PTR [ebx]
  40c654:	inc    ebx
  40c655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c656:	add    BYTE PTR [eax],ch
  40c658:	jl     0x40c5f0
  40c65a:	mov    ebp,0x125c5bd0
  40c65f:	or     DWORD PTR [edi],ecx
  40c661:	test   DWORD PTR [edx],esi
  40c663:	dec    edi
  40c664:	jmp    0x40c6c7
  40c666:	jg     0x40c657
  40c668:	shr    DWORD PTR [ecx],0xcd
  40c66b:	push   0x5b
  40c66d:	clc    
  40c66e:	sub    edi,DWORD PTR fs:[ebx-0x708ed883]
  40c675:	cmp    ch,bh
  40c677:	ror    esp,1
  40c679:	xchg   DWORD PTR [ecx],ebx
  40c67b:	xchg   edi,eax
  40c67c:	fidivr WORD PTR [ecx-0x2cd4d523]
  40c682:	in     eax,dx
  40c683:	xor    eax,0x5091f865
  40c688:	push   esi
  40c689:	pushf  
  40c68a:	mov    edi,DWORD PTR [eax]
  40c68c:	imul   ecx,DWORD PTR [eax],0xbc649055
  40c692:	sub    eax,0x263c20bb
  40c697:	int3   
  40c698:	cmp    DWORD PTR [ebx+0x38],0x1d
  40c69c:	jg     0x40c69c
  40c69e:	test   BYTE PTR [esp+ebp*4-0x63],ch
  40c6a2:	nop
  40c6a3:	push   ecx
  40c6a4:	mov    al,0xd1
  40c6a6:	ja     0x40c71b
  40c6a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a9:	mov    al,BYTE PTR [esi-0x4f]
  40c6ac:	iret   
  40c6ad:	aad    0xe7
  40c6af:	xchg   esi,eax
  40c6b0:	xchg   BYTE PTR ds:0xc04f981d,dh
  40c6b6:	out    0xd8,eax
  40c6b8:	das    
  40c6b9:	pop    es
  40c6ba:	add    ebp,DWORD PTR [ebp-0x2867bad5]
  40c6c0:	enter  0xd5c8,0x94
  40c6c4:	gs jno 0x40c6a1
  40c6c7:	pop    es
  40c6c8:	adc    DWORD PTR [ecx+esi*1+0x62cd1608],ebp
  40c6cf:	add    BYTE PTR [edx],0x8
  40c6d2:	popf   
  40c6d3:	int3   
  40c6d4:	cmc    
  40c6d5:	push   ebx
  40c6d6:	mov    cl,0x3f
  40c6d8:	sahf   
  40c6d9:	inc    eax
  40c6da:	data16 jne 0x40c6f5
  40c6dd:	inc    edi
  40c6de:	mov    dl,0x27
  40c6e0:	(bad)  
  40c6e1:	out    0x56,eax
  40c6e3:	(bad)  
  40c6e4:	jmp    DWORD PTR [eax]
  40c6e6:	pop    esp
  40c6e7:	xor    dh,dl
  40c6e9:	cwde   
  40c6ea:	pop    esp
  40c6eb:	add    ebx,ebx
  40c6ed:	xor    BYTE PTR [edx+ebx*8-0x2ca90bf2],bl
  40c6f4:	gs cmp eax,0x98d3a243
  40c6fa:	sub    DWORD PTR [ecx],edx
  40c6fc:	call   0x6887:0xebc71206
  40c703:	scas   al,BYTE PTR es:[edi]
  40c704:	push   cs
  40c705:	mov    al,0x3c
  40c707:	mov    edx,0x7d44f1a5
  40c70c:	sbb    DWORD PTR [esi-0x27],esp
  40c70f:	es js  0x40c701
  40c712:	push   ecx
  40c713:	maxps  xmm1,XMMWORD PTR [ecx+0x46]
  40c717:	push   esi
  40c718:	shl    DWORD PTR [ebp+0x7f],0x73
  40c71c:	je     0x40c6a5
  40c71e:	loopne 0x40c70f
  40c720:	jle    0x40c6d2
  40c722:	sbb    DWORD PTR [esi+ebx*2-0xb49b2e7],esi
  40c729:	xor    al,0x3d
  40c72b:	dec    esp
  40c72c:	sbb    eax,0x829b9763
  40c731:	jmp    0x52c994d8
  40c736:	rol    DWORD PTR [ebp+ebx*8+0x61],1
  40c73a:	sar    BYTE PTR [edx-0x4e8f768f],cl
  40c740:	das    
  40c741:	add    bh,BYTE PTR [ebp-0x15e973aa]
  40c747:	push   0xffffff9d
  40c749:	pop    ds
  40c74a:	fwait
  40c74b:	pop    ds
  40c74c:	jns    0x40c765
  40c74e:	test   DWORD PTR [edx-0x53],ecx
  40c751:	ret    
  40c752:	sub    cl,BYTE PTR [edi+0x59935fd3]
  40c758:	fucomip st,st(2)
  40c75a:	sti    
  40c75b:	push   ecx
  40c75c:	or     DWORD PTR [edx-0x36],edi
  40c75f:	in     eax,0x1e
  40c761:	mov    al,0xc9
  40c763:	(bad)  
  40c765:	test   bl,ah
  40c767:	pop    edx
  40c768:	icebp  
  40c769:	outs   dx,DWORD PTR ds:[esi]
  40c76a:	cmp    BYTE PTR [esi-0x3d7fb045],0x27
  40c771:	jne    0x40c717
  40c773:	out    0x7,al
  40c775:	xor    eax,0x1d4fc894
  40c77a:	pop    esp
  40c77b:	cld    
  40c77c:	jg     0x40c709
  40c77e:	xor    BYTE PTR [esi-0x4f2a8e4e],0x52
  40c785:	fcmove st,st(2)
  40c787:	dec    esi
  40c788:	xchg   DWORD PTR [edi],edi
  40c78a:	cmc    
  40c78b:	aam    0x1a
  40c78d:	stos   DWORD PTR es:[edi],eax
  40c78e:	mov    ds,WORD PTR [eax+0x1dc3ae60]
  40c794:	jo     0x40c739
  40c796:	mov    ebp,0x5a1b4537
  40c79b:	inc    eax
  40c79c:	ret    0x85fa
  40c79f:	loop   0x40c7aa
  40c7a1:	push   edx
  40c7a2:	mov    al,0xf3
  40c7a4:	fs inc ebx
  40c7a6:	cli    
  40c7a7:	sub    ecx,DWORD PTR ds:0xa936453f
  40c7ad:	aam    0x98
  40c7af:	push   ecx
  40c7b0:	xchg   esi,eax
  40c7b1:	cmp    eax,0xf2baa674
  40c7b6:	jo     0x40c79d
  40c7b8:	out    dx,al
  40c7b9:	mov    WORD PTR [ecx-0x5a],gs
  40c7bc:	test   DWORD PTR [edi+0x6ba039a],esp
  40c7c2:	outs   dx,DWORD PTR ds:[esi]
  40c7c3:	js     0x40c75f
  40c7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7c6:	popf   
  40c7c7:	mov    esp,0xfc6dc88
  40c7cc:	mov    ecx,0xa07b471d
  40c7d1:	sub    BYTE PTR ds:0xde14df5,cl
  40c7d7:	test   BYTE PTR [esi-0x7d],ch
  40c7da:	push   0xffffffcc
  40c7dc:	mov    ecx,0x2c0e178a
  40c7e1:	push   esp
  40c7e2:	je     0x40c787
  40c7e4:	and    ecx,esi
  40c7e6:	or     eax,0xfdfbfc33
  40c7eb:	loop   0x40c867
  40c7ed:	dec    ebx
  40c7ee:	sbb    al,0x38
  40c7f0:	mov    ds:0xd8e0163d,al
  40c7f5:	jbe    0x40c850
  40c7f7:	push   edi
  40c7f8:	int3   
  40c7f9:	ja     0x40c7be
  40c7fb:	pop    esp
  40c7fc:	addr16 jbe 0x40c7ef
  40c7ff:	xor    BYTE PTR [ebx-0x47],bl
  40c802:	ins    DWORD PTR es:[edi],dx
  40c803:	mov    dl,0x48
  40c805:	dec    ebp
  40c806:	into   
  40c807:	in     eax,dx
  40c808:	cmp    DWORD PTR [edi-0x1132b292],ebx
  40c80e:	pop    es
  40c80f:	retf   
  40c810:	enter  0x4984,0xb
  40c814:	and    ebp,DWORD PTR es:[eax-0x18]
  40c818:	inc    esi
  40c819:	add    DWORD PTR [esi],eax
  40c81b:	xor    esp,0x15f6aa30
  40c821:	fisttp DWORD PTR [ebx]
  40c823:	sbb    ah,BYTE PTR [ebx]
  40c825:	ins    DWORD PTR es:[edi],dx
  40c826:	dec    esp
  40c827:	popa   
  40c828:	mov    ebx,DWORD PTR [edi-0x5f357ed2]
  40c82e:	scas   al,BYTE PTR es:[edi]
  40c82f:	frstor [ebx]
  40c831:	xchg   edi,eax
  40c832:	dec    ebp
  40c833:	cmp    esi,edx
  40c835:	mov    esp,DWORD PTR [eax+0x200b03ed]
  40c83b:	push   ecx
  40c83c:	push   es
  40c83d:	mov    BYTE PTR [ecx+0x17b0198d],0x24
  40c844:	push   esp
  40c845:	jg     0x40c83b
  40c847:	xchg   esp,eax
  40c848:	fucomi st,st(4)
  40c84a:	mov    ecx,0x1554dc21
  40c84f:	xchg   esp,eax
  40c850:	sub    al,BYTE PTR [ebx+0x53]
  40c853:	jge    0x40c89e
  40c855:	adc    ah,al
  40c857:	lods   eax,DWORD PTR ds:[esi]
  40c858:	mov    fs,WORD PTR [edi-0x68196cd]
  40c85e:	mov    edx,0x9adfd0ee
  40c863:	out    dx,al
  40c864:	loope  0x40c89f
  40c866:	inc    ebx
  40c867:	mov    cr1,ecx
  40c86a:	jnp    0x40c83a
  40c86c:	mov    al,0x77
  40c86e:	inc    edx
  40c86f:	ins    BYTE PTR es:[edi],dx
  40c870:	mov    cs,WORD PTR [ebx+0x1acfedc3]
  40c876:	jno    0x40c837
  40c878:	clc    
  40c879:	idiv   cl
  40c87b:	nop
  40c87c:	sub    DWORD PTR [ebx-0x71eeb2cc],esi
  40c882:	mov    edx,0xfa91485f
  40c887:	(bad)  
  40c888:	jo     0x40c8a2
  40c88a:	out    0x42,eax
  40c88c:	in     eax,dx
  40c88d:	lahf   
  40c88e:	or     edi,ecx
  40c890:	dec    ecx
  40c891:	mov    bl,0x78
  40c893:	inc    ebx
  40c894:	adc    eax,DWORD PTR [ebx-0x1c]
  40c897:	mov    ah,0x8b
  40c899:	test   dh,bh
  40c89b:	and    ch,BYTE PTR [edx+0x2b6e35ca]
  40c8a1:	jl     0x40c909
  40c8a3:	cmp    DWORD PTR [edi+0x10],ebp
  40c8a6:	out    0x5f,al
  40c8a8:	repnz int3 
  40c8aa:	xchg   edx,eax
  40c8ab:	pop    esp
  40c8ac:	pusha  
  40c8ad:	mov    esi,0x17484d2
  40c8b2:	fnstcw WORD PTR [ecx+0x66]
  40c8b5:	retf   0x8fd0
  40c8b8:	cwde   
  40c8b9:	out    0xc5,eax
  40c8bb:	jge    0x40c85c
  40c8bd:	scas   eax,DWORD PTR es:[edi]
  40c8be:	xor    eax,0x8f85fcce
  40c8c3:	fadd   st,st(6)
  40c8c5:	rcl    DWORD PTR [esi+0x77],cl
  40c8c8:	mov    cs,WORD PTR [ebx-0x63077310]
  40c8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8cf:	gs lahf 
  40c8d1:	(bad)  
  40c8d2:	push   ss
  40c8d3:	or     al,0x33
  40c8d5:	adc    al,0x7c
  40c8d7:	inc    ebx
  40c8d8:	dec    esi
  40c8d9:	loope  0x40c8dd
  40c8db:	sub    cl,BYTE PTR [ebx-0x3eb82e00]
  40c8e1:	int3   
  40c8e2:	leave  
  40c8e3:	shl    BYTE PTR ss:[ecx+0x3d7055ca],1
  40c8ea:	sbb    DWORD PTR [esi+0x6e],edi
  40c8ed:	mov    bh,0x24
  40c8ef:	inc    edi
  40c8f0:	mov    eax,0x4d25374c
  40c8f5:	mov    al,ds:0x27e3a836
  40c8fa:	add    al,dh
  40c8fc:	xor    al,0x4
  40c8fe:	cmp    BYTE PTR [esi],dl
  40c900:	mov    al,0x39
  40c902:	inc    ebx
  40c903:	mov    dl,0x20
  40c905:	jg     0x40c89b
  40c907:	mov    ah,0x60
  40c909:	and    edi,edi
  40c90b:	cdq    
  40c90c:	pop    edi
  40c90d:	dec    ebx
  40c90e:	dec    edx
  40c90f:	xchg   ebx,eax
  40c910:	or     bh,ch
  40c912:	sub    BYTE PTR [eax-0x36e3b7c6],cl
  40c918:	stos   BYTE PTR es:[edi],al
  40c919:	sub    dh,BYTE PTR [ecx]
  40c91b:	adc    dh,BYTE PTR [edi-0x54]
  40c91e:	cwde   
  40c91f:	adc    al,0x9d
  40c921:	enter  0x1180,0xb6
  40c925:	dec    esi
  40c926:	inc    eax
  40c927:	or     DWORD PTR [edi-0x4243682a],eax
  40c92d:	xchg   ecx,eax
  40c92e:	jno    0x40c960
  40c930:	test   DWORD PTR [ecx],edi
  40c932:	sbb    DWORD PTR [edi+esi*8+0x6b507c9f],eax
  40c939:	mov    bl,0x2a
  40c93b:	es sub al,0x3e
  40c93e:	inc    ebx
  40c93f:	dec    ebx
  40c940:	pop    edx
  40c941:	ror    BYTE PTR [esi+0x40],cl
  40c944:	add    DWORD PTR [edx],ebp
  40c946:	push   esi
  40c947:	sbb    al,0xe
  40c949:	call   0x67b8:0x2754192
  40c950:	loop   0x40c988
  40c952:	loop   0x40c967
  40c954:	adc    bh,dl
  40c956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c957:	pop    ebx
  40c958:	addr16 pop es
  40c95a:	jecxz  0x40c8e3
  40c95c:	hlt    
  40c95d:	icebp  
  40c95e:	jo     0x40c997
  40c960:	test   al,0x8c
  40c962:	fisttp QWORD PTR [esi]
  40c964:	popa   
  40c965:	pop    edi
  40c966:	jns    0x40c8fa
  40c968:	add    dl,BYTE PTR [edx-0x4f]
  40c96b:	in     eax,dx
  40c96c:	fmul   QWORD PTR [ebp+eax*8+0x39f9806]
  40c973:	clc    
  40c974:	popf   
  40c975:	push   eax
  40c976:	jle    0x40c9c2
  40c978:	xor    ebx,DWORD PTR [edi-0x4a]
  40c97b:	loope  0x40c971
  40c97d:	mov    ds:0xe6b952c2,al
  40c982:	sub    al,ah
  40c984:	mov    ah,0x41
  40c986:	data16 sti 
  40c988:	push   edi
  40c989:	data16 jae 0x40c9e5
  40c98c:	xchg   edx,eax
  40c98d:	add    al,0x88
  40c98f:	and    BYTE PTR [esp+ebp*8],al
  40c992:	sbb    BYTE PTR ss:[eax-0x37630c17],cl
  40c999:	mov    bl,0x8c
  40c99b:	ins    BYTE PTR es:[edi],dx
  40c99c:	mul    DWORD PTR [esp+edx*4+0x11268bf5]
  40c9a3:	push   ecx
  40c9a4:	mov    cl,BYTE PTR [ecx-0x17]
  40c9a7:	xor    esp,DWORD PTR [eax-0xb19d3cf]
  40c9ad:	mov    ecx,0xd9a0520e
  40c9b2:	mov    ch,0x60
  40c9b4:	ins    DWORD PTR es:[edi],dx
  40c9b5:	imul   edx,DWORD PTR [ebx],0x8dbdbbe6
  40c9bb:	xchg   ecx,eax
  40c9bc:	scas   eax,DWORD PTR es:[edi]
  40c9bd:	push   ss
  40c9be:	dec    edi
  40c9bf:	cs leave 
  40c9c1:	hlt    
  40c9c2:	or     ecx,DWORD PTR [ebx+0x2090ee08]
  40c9c8:	or     DWORD PTR [edi-0x5],ebx
  40c9cb:	sub    DWORD PTR [ebx-0x1],esi
  40c9ce:	jecxz  0x40c9e8
  40c9d0:	ja     0x40c958
  40c9d2:	bound  eax,QWORD PTR [edx]
  40c9d4:	icebp  
  40c9d5:	hlt    
  40c9d6:	lea    edx,[ebp+0x4f66785b]
  40c9dc:	pop    esi
  40c9dd:	inc    edx
  40c9de:	xor    BYTE PTR [ecx+0x24],dh
  40c9e1:	ins    BYTE PTR es:[edi],dx
  40c9e2:	aaa    
  40c9e3:	(bad)  
  40c9e4:	xor    eax,0xfa3eb56d
  40c9e9:	jg     0x40ca62
  40c9eb:	outs   dx,DWORD PTR ds:[esi]
  40c9ec:	ja     0x40c97d
  40c9ee:	push   esp
  40c9ef:	cs repz es repnz mov cl,0x2b
  40c9f5:	ja     0x40c9fc
  40c9f7:	push   ebx
  40c9f8:	mov    al,ds:0xaffc5b55
  40c9fd:	inc    esi
  40c9fe:	lods   al,BYTE PTR ds:[esi]
  40c9ff:	icebp  
  40ca00:	adc    al,0x95
  40ca02:	xchg   ebx,eax
  40ca03:	jns    0x40ca33
  40ca05:	xor    al,0xed
  40ca07:	imul   edx,DWORD PTR [edi-0x61a93417],0x34
  40ca0e:	jno    0x40c9cb
  40ca10:	jmp    0x8b59f22
  40ca15:	fisub  WORD PTR [ebx]
  40ca17:	das    
  40ca18:	rol    DWORD PTR [ebx],0x3b
  40ca1b:	sbb    edx,DWORD PTR [ecx]
  40ca1d:	in     eax,0x3c
  40ca1f:	or     bh,dl
  40ca21:	sbb    ah,BYTE PTR [eax+0x6d58d785]
  40ca27:	xchg   ecx,eax
  40ca28:	sub    eax,esp
  40ca2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca2c:	(bad)  
  40ca2e:	call   0x57ed7445
  40ca33:	xor    BYTE PTR [edi+ebx*4],cl
  40ca36:	mov    ds:0x14ee93ec,eax
  40ca3b:	pop    ecx
  40ca3c:	pop    DWORD PTR [ebx+esi*1]
  40ca3f:	xor    eax,0x4e12b9a2
  40ca44:	inc    ebx
  40ca45:	pop    eax
  40ca46:	fucomi st,st(6)
  40ca48:	lods   al,BYTE PTR ds:[esi]
  40ca49:	pop    edi
  40ca4a:	and    ebp,DWORD PTR [edi+0x19]
  40ca4d:	xor    al,0x5f
  40ca4f:	shr    bh,1
  40ca51:	pop    edi
  40ca52:	sbb    bh,BYTE PTR [edi+0x6b]
  40ca55:	test   eax,0x5b370d66
  40ca5a:	out    dx,eax
  40ca5b:	pop    ecx
  40ca5c:	neg    BYTE PTR [esi-0x1e]
  40ca5f:	add    al,0xb3
  40ca61:	repnz aad 0x94
  40ca64:	cmp    ch,dl
  40ca66:	dec    ebp
  40ca67:	test   al,0xa1
  40ca69:	inc    ebx
  40ca6a:	jnp    0x40ca16
  40ca6c:	or     BYTE PTR [esi+0x6],bh
  40ca6f:	jmp    0xec3e84c7
  40ca74:	frstor [ecx-0x42]
  40ca77:	ret    
  40ca78:	and    edi,DWORD PTR [edi+0x77]
  40ca7b:	push   cs
  40ca7c:	ss in  al,dx
  40ca7e:	inc    ebx
  40ca7f:	mov    bl,0xc3
  40ca81:	fwait
  40ca82:	loope  0x40ca8d
  40ca84:	fnstsw WORD PTR [ecx]
  40ca86:	out    0x60,al
  40ca88:	mov    ds:0x148d02b8,al
  40ca8d:	cmp    ch,0x2f
  40ca90:	test   eax,0x4f9835cf
  40ca95:	jmp    0x236f:0x41c988d0
  40ca9c:	(bad)  
  40ca9d:	mov    edx,0xdc288e04
  40caa2:	stos   DWORD PTR es:[edi],eax
  40caa3:	sbb    al,0xf8
  40caa5:	lea    esp,[esi+0x1e176930]
  40caab:	dec    esi
  40caac:	push   cs
  40caad:	push   ds
  40caae:	ror    DWORD PTR [ebx+0x2009e638],0x13
  40cab5:	pop    edi
  40cab6:	dec    ebx
  40cab7:	cwde   
  40cab8:	add    al,0xd9
  40caba:	out    dx,al
  40cabb:	xchg   edx,eax
  40cabc:	test   al,0x93
  40cabe:	adc    WORD PTR [eax-0x4df6b14c],bp
  40cac5:	xchg   esi,eax
  40cac6:	out    0x53,eax
  40cac8:	cmp    ecx,DWORD PTR [ecx]
  40caca:	sub    al,0xd5
  40cacc:	jle    0x40cae9
  40cace:	dec    eax
  40cacf:	scas   al,BYTE PTR es:[edi]
  40cad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad1:	fidivr DWORD PTR [ebx-0x58]
  40cad4:	retf   
  40cad5:	aas    
  40cad6:	mov    eax,ds:0x6ac9100e
  40cadb:	and    BYTE PTR ds:0x77863a3d,dh
  40cae1:	ins    DWORD PTR es:[edi],dx
  40cae2:	int    0x38
  40cae4:	fst    st(3)
  40cae6:	pop    esi
  40cae7:	dec    esp
  40cae8:	xchg   BYTE PTR [ebx+0x5d118fc0],ch
  40caee:	ror    edx,1
  40caf0:	dec    esp
  40caf1:	mov    dh,0xb8
  40caf3:	xor    al,0x20
  40caf5:	(bad)  
  40caf7:	cmp    al,ah
  40caf9:	enter  0xbd89,0xf7
  40cafd:	sbb    eax,DWORD PTR [eax+0x13]
  40cb00:	fisttp QWORD PTR [eax-0x76]
  40cb03:	ds jb  0x40cb6f
  40cb06:	adc    ebx,DWORD PTR [edx+0x3d]
  40cb09:	(bad)  
  40cb0a:	loopne 0x40caa0
  40cb0c:	jns    0x40cb4b
  40cb0e:	xchg   ebp,eax
  40cb0f:	out    dx,al
  40cb10:	loope  0x40cb65
  40cb12:	xor    al,0x78
  40cb14:	out    0x4e,eax
  40cb16:	ss xchg cl,dl
  40cb19:	stc    
  40cb1a:	int3   
  40cb1b:	rcr    BYTE PTR ds:[ecx],0x94
  40cb1f:	push   ebx
  40cb20:	xchg   BYTE PTR ds:0xe5d0f60e,bl
  40cb26:	sbb    DWORD PTR [ecx-0x4e],esp
  40cb29:	pop    es
  40cb2a:	mov    ah,ch
  40cb2c:	add    al,0x99
  40cb2e:	and    dh,0xe3
  40cb31:	lahf   
  40cb32:	stc    
  40cb33:	das    
  40cb34:	sub    cl,BYTE PTR [ebx+0xd]
  40cb37:	cdq    
  40cb38:	mov    al,0x41
  40cb3a:	dec    ecx
  40cb3b:	retf   
  40cb3c:	aaa    
  40cb3d:	mov    DWORD PTR [edx],edi
  40cb3f:	cs cwde 
  40cb41:	enter  0xe3f8,0x55
  40cb45:	push   es
  40cb46:	sub    ecx,DWORD PTR [eax]
  40cb48:	outs   dx,DWORD PTR ds:[esi]
  40cb49:	push   esi
  40cb4a:	arpl   di,bx
  40cb4c:	push   0x43
  40cb4e:	fstp   QWORD PTR ds:0x71e74841
  40cb54:	in     al,dx
  40cb55:	pop    edi
  40cb56:	pusha  
  40cb57:	and    BYTE PTR [eax-0x8a6069],0xac
  40cb5e:	fistp  QWORD PTR [edx+0x63bb7ca0]
  40cb64:	in     al,0x0
  40cb66:	repnz cmp eax,0xad3a801a
  40cb6c:	das    
  40cb6d:	push   ebx
  40cb6e:	and    eax,0xc5a9488
  40cb73:	adc    al,0x1d
  40cb75:	(bad)  
  40cb76:	xor    ebp,DWORD PTR ds:0xbd295c92
  40cb7c:	jg     0x40cb02
  40cb7e:	cmp    eax,eax
  40cb80:	sbb    BYTE PTR [ebx+0x7d],0x42
  40cb84:	jle    0x40cb08
  40cb86:	mov    ebp,ds
  40cb88:	mov    al,BYTE PTR [ecx+0xe]
  40cb8b:	mov    ds:0xccdb739e,al
  40cb90:	xor    al,0xd2
  40cb92:	cmp    eax,0x22928819
  40cb97:	call   0x6b01:0x880a1e2
  40cb9e:	loop   0x40cb4d
  40cba0:	js     0x40cc1c
  40cba2:	mov    bl,0xd9
  40cba4:	cmp    BYTE PTR ds:0xf8343269,dl
  40cbaa:	mov    cl,0xbd
  40cbac:	imul   edi,DWORD PTR [esi+0x18],0xffffff94
  40cbb0:	jb     0x40cbf2
  40cbb2:	or     edx,DWORD PTR [edx]
  40cbb4:	mov    BYTE PTR [eax-0x2b],bh
  40cbb7:	out    0x22,eax
  40cbb9:	ins    BYTE PTR es:[edi],dx
  40cbba:	sti    
  40cbbb:	or     eax,0x7b5deb94
  40cbc0:	aad    0xca
  40cbc2:	fisttp WORD PTR [ebx]
  40cbc4:	sub    BYTE PTR [ebx],0xbc
  40cbc7:	mov    dh,0x26
  40cbc9:	retf   
  40cbca:	retf   
  40cbcb:	mov    ss,WORD PTR [ecx-0x11]
  40cbce:	mov    ah,0xa0
  40cbd0:	test   BYTE PTR [esi-0x61],dl
  40cbd3:	jge    0x40cb9a
  40cbd5:	add    ebx,eax
  40cbd7:	mov    edx,0x62d222e5
  40cbdc:	inc    edx
  40cbdd:	xor    DWORD PTR [eax-0x45],edx
  40cbe0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe2:	sti    
  40cbe3:	pop    es
  40cbe4:	push   0xf3d00a71
  40cbe9:	fdivr  DWORD PTR [esi-0x5080286b]
  40cbef:	mov    ebp,0x8c22b7da
  40cbf4:	loope  0x40cbda
  40cbf6:	jecxz  0x40cc41
  40cbf8:	add    DWORD PTR [edi-0x30],0xffffffe4
  40cbfc:	mov    dh,0xff
  40cbfe:	sbb    eax,0x37ca8b7
  40cc03:	ins    DWORD PTR es:[edi],dx
  40cc04:	fld    QWORD PTR [ebx]
  40cc06:	adc    eax,0xb8ab260c
  40cc0b:	push   ss
  40cc0c:	xchg   esp,eax
  40cc0d:	loope  0x40cb92
  40cc0f:	sbb    DWORD PTR [ecx+0x3e03a0d],eax
  40cc15:	scas   eax,DWORD PTR es:[edi]
  40cc16:	sub    DWORD PTR [ecx+0x7dfc5723],esp
  40cc1c:	call   0x2fe1:0x10e82803
  40cc23:	scas   al,BYTE PTR es:[edi]
  40cc24:	push   ebp
  40cc25:	cmc    
  40cc26:	xor    al,0x15
  40cc28:	into   
  40cc29:	jnp    0x40cc3b
  40cc2b:	(bad)  
  40cc2c:	(bad)  
  40cc2d:	iret   
  40cc2e:	clc    
  40cc2f:	lods   al,BYTE PTR ds:[esi]
  40cc30:	jo     0x40cc0f
  40cc32:	mov    dh,0xd1
  40cc34:	fmulp  st(3),st
  40cc36:	repnz lods al,BYTE PTR ds:[esi]
  40cc38:	add    esp,DWORD PTR gs:[edi+0x21bd12d9]
  40cc3f:	outs   dx,DWORD PTR ds:[esi]
  40cc40:	xchg   ebx,eax
  40cc41:	fs mov bh,0xbb
  40cc44:	xor    ch,BYTE PTR [eax+eiz*2]
  40cc47:	out    0xe1,eax
  40cc49:	push   es
  40cc4a:	inc    edx
  40cc4b:	int    0x79
  40cc4d:	sti    
  40cc4e:	or     BYTE PTR [edi-0x2856ff5a],0xa
  40cc55:	(bad)  
  40cc56:	and    DWORD PTR [ebp+0x6ad54308],esi
  40cc5c:	std    
  40cc5d:	mov    bh,0x6a
  40cc5f:	xor    al,0x94
  40cc61:	enter  0x163b,0xf7
  40cc65:	pop    edx
  40cc66:	pop    eax
  40cc67:	cmp    bl,BYTE PTR [ebx-0x17]
  40cc6a:	nop
  40cc6b:	leave  
  40cc6c:	popf   
  40cc6d:	add    cl,BYTE PTR [ecx-0x17313013]
  40cc73:	arpl   WORD PTR [ebx],bx
  40cc75:	mov    DWORD PTR [edi],eax
  40cc77:	icebp  
  40cc78:	es inc esp
  40cc7a:	ja     0x40cc36
  40cc7c:	(bad)  
  40cc7d:	mov    ah,0x3b
  40cc7f:	jle    0x40cc55
  40cc81:	xor    ecx,esi
  40cc83:	fld    QWORD PTR [edi+0x6d]
  40cc86:	test   al,0x7f
  40cc88:	add    esp,esp
  40cc8a:	lock cs stos BYTE PTR es:[edi],al
  40cc8d:	adc    dl,BYTE PTR [edx]
  40cc8f:	jmp    0x1431:0x6f41bb9f
  40cc96:	dec    eax
  40cc97:	std    
  40cc98:	(bad)  ds:0x7a295f8a
  40cc9e:	(bad)  
  40cc9f:	aad    0x9c
  40cca1:	loopne 0x40cc4a
  40cca3:	outs   dx,DWORD PTR ds:[esi]
  40cca4:	xchg   ebp,eax
  40cca5:	sbb    DWORD PTR [edx+0x5b],edi
  40cca8:	cmp    ebp,DWORD PTR [esi+eax*1]
  40ccab:	(bad)  
  40ccac:	bound  esi,QWORD PTR [ebp+0x391ddea1]
  40ccb2:	mov    edi,0x8ad2bd2d
  40ccb7:	mov    BYTE PTR [ebx+0x5fa17ef5],ah
  40ccbd:	int    0x6d
  40ccbf:	inc    esp
  40ccc0:	jne    0x40cc7d
  40ccc2:	loopne 0x40cd02
  40ccc4:	add    BYTE PTR [edx],0xb9
  40ccc7:	push   0x2fb97eed
  40cccc:	lahf   
  40cccd:	ins    DWORD PTR es:[edi],dx
  40ccce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cccf:	bound  eax,QWORD PTR [eax+esi*2+0x2d]
  40ccd3:	pop    edi
  40ccd4:	(bad)  
  40ccd5:	fs out 0x75,al
  40ccd8:	adc    BYTE PTR [esi+0x576bad5f],0x5c
  40ccdf:	fs jns 0x40cc9e
  40cce2:	clc    
  40cce3:	loopne 0x40cc79
  40cce5:	sub    eax,0x3cfbd78a
  40ccea:	jb     0x40cc9d
  40ccec:	loop   0x40ccfd
  40ccee:	dec    ebx
  40ccef:	shl    DWORD PTR [edx],0x38
  40ccf2:	repnz cmc 
  40ccf4:	rol    DWORD PTR [esi],1
  40ccf6:	fldenv [esi+0x69]
  40ccf9:	dec    ecx
  40ccfa:	mov    ss,WORD PTR [ecx]
  40ccfc:	enter  0xc3b2,0xa7
  40cd00:	cld    
  40cd01:	(bad)  
  40cd02:	jo     0x40cd7f
  40cd04:	shr    cl,1
  40cd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd07:	sahf   
  40cd08:	les    ebp,FWORD PTR [edx-0x5f]
  40cd0b:	cmp    edx,edx
  40cd0d:	mov    cl,0x10
  40cd0f:	xchg   ecx,eax
  40cd10:	mov    DWORD PTR [edx],eax
  40cd12:	mov    edx,0x77db1775
  40cd17:	inc    ecx
  40cd18:	sub    bl,BYTE PTR [edi+0x21f43a08]
  40cd1e:	sub    DWORD PTR [edi-0xd46dc5b],ebx
  40cd24:	mov    bh,0xed
  40cd26:	in     eax,dx
  40cd27:	mov    BYTE PTR [edx-0x6bb9f579],0x44
  40cd2e:	xchg   edi,eax
  40cd2f:	sti    
  40cd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd31:	vhaddpd ymm5,ymm3,YMMWORD PTR [edi+0x37]
  40cd36:	jmp    0x40cdb5
  40cd38:	adc    ebx,ecx
  40cd3a:	aas    
  40cd3b:	xchg   ecx,eax
  40cd3c:	inc    ebp
  40cd3d:	call   0xdc64:0x8e38fe21
  40cd44:	scas   al,BYTE PTR es:[edi]
  40cd45:	mov    ch,0x44
  40cd47:	mov    eax,ds:0xa503e94e
  40cd4c:	lds    ebp,FWORD PTR [ebx-0x552a8e50]
  40cd52:	xor    esp,ecx
  40cd54:	dec    ebx
  40cd55:	cmp    BYTE PTR [edx+0x4d],al
  40cd58:	lock cwde 
  40cd5a:	dec    ebp
  40cd5b:	bound  edi,QWORD PTR [edx+esi*1+0x5dc3ce1f]
  40cd62:	cmc    
  40cd63:	scas   eax,DWORD PTR es:[edi]
  40cd64:	leave  
  40cd65:	ret    
  40cd66:	mov    ecx,0xe31941e2
  40cd6b:	jb     0x40ccff
  40cd6d:	adc    eax,0x1318a0c6
  40cd72:	stos   BYTE PTR es:[edi],al
  40cd73:	leave  
  40cd74:	jnp    0x40cd14
  40cd76:	rcl    DWORD PTR [ebx-0x4ef39046],1
  40cd7c:	jno    0x40cdc7
  40cd7e:	ret    0xf4a4
  40cd81:	lea    esi,ds:0x3b11cb56
  40cd87:	pop    edi
  40cd88:	xor    DWORD PTR [eax],0x5a
  40cd8b:	mov    ebp,DWORD PTR [edi-0x68c6e230]
  40cd91:	loope  0x40cdb2
  40cd93:	shr    BYTE PTR [esi],cl
  40cd95:	repz aaa 
  40cd97:	shl    DWORD PTR [ebx-0x15a2bbe2],0xde
  40cd9e:	add    DWORD PTR [eax-0x1f],ebp
  40cda1:	and    BYTE PTR [esi+0x167dd9de],ah
  40cda7:	push   ecx
  40cda8:	int3   
  40cda9:	mov    al,0x7a
  40cdab:	test   ebx,eax
  40cdad:	push   es
  40cdae:	mov    edx,0x99b0b3aa
  40cdb3:	mov    eax,0xc09b7ac7
  40cdb8:	inc    ebx
  40cdb9:	cmp    edx,ecx
  40cdbb:	fcmovnu st,st(0)
  40cdbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdbf:	je     0x40cdf3
  40cdc1:	int3   
  40cdc2:	xchg   ebx,eax
  40cdc3:	shl    BYTE PTR [ebx-0x10800205],1
  40cdc9:	je     0x40cde8
  40cdcb:	stos   DWORD PTR es:[edi],eax
  40cdcc:	xor    eax,DWORD PTR [edx]
  40cdce:	sub    eax,0xbe75d07a
  40cdd3:	pop    edi
  40cdd4:	push   esp
  40cdd5:	outs   dx,DWORD PTR ds:[esi]
  40cdd6:	inc    ecx
  40cdd7:	leave  
  40cdd8:	outs   dx,BYTE PTR ds:[esi]
  40cdd9:	pushf  
  40cdda:	mov    ds:0xb4afc3ad,al
  40cddf:	(bad)  
  40cde0:	adc    esp,DWORD PTR [ecx-0x30]
  40cde3:	or     eax,0x7fb0120a
  40cde8:	int    0x70
  40cdea:	dec    ebx
  40cdeb:	imul   DWORD PTR [ecx-0x16]
  40cdee:	sar    DWORD PTR [ebx-0x73],1
  40cdf1:	and    eax,0xbc786ba
  40cdf6:	int3   
  40cdf7:	sbb    eax,0x703461b7
  40cdfc:	or     edi,DWORD PTR [edi-0x71194368]
  40ce02:	loope  0x40cdc1
  40ce04:	stos   DWORD PTR es:[edi],eax
  40ce05:	mov    edx,DWORD PTR [ecx]
  40ce07:	xor    BYTE PTR [edx],0x6d
  40ce0a:	sar    esp,0xd8
  40ce0d:	or     bh,dl
  40ce0f:	scas   al,BYTE PTR es:[edi]
  40ce10:	loop   0x40cdd2
  40ce12:	push   edx
  40ce13:	int    0x65
  40ce15:	and    BYTE PTR [esp+ebx*8+0x28b3071a],bl
  40ce1c:	ret    
  40ce1d:	push   cs
  40ce1e:	add    bh,BYTE PTR [esi]
  40ce20:	shl    ebp,1
  40ce22:	mov    ecx,0xb1a4ccc9
  40ce27:	icebp  
  40ce28:	xchg   ecx,eax
  40ce29:	outs   dx,BYTE PTR ds:[esi]
  40ce2a:	ds out 0xb1,eax
  40ce2d:	push   ss
  40ce2e:	mov    eax,ds:0xce852590
  40ce33:	das    
  40ce34:	mov    bh,0x58
  40ce36:	mov    dh,0x5
  40ce38:	sub    eax,0xfedecbf0
  40ce3d:	mov    edx,0x5eb79699
  40ce42:	fild   DWORD PTR [ecx+0x3b1ed501]
  40ce48:	enter  0x840f,0x71
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	add    BYTE PTR [ebx+0x458bec7d],cl
  40ce54:	or     BYTE PTR [ebx+0x448b1455],cl
  40ce5a:	add    BYTE PTR [ecx+edi*4],0x93
  40ce5e:	or     BYTE PTR [ecx+0x7],dl
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c56
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42385a
  40cf91:	push   0x423812
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a76
  40cff7:	mov    ebx,DWORD PTR ds:0x421a9e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c56
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cda
  40d0ed:	mov    esi,DWORD PTR ds:0x421cd2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cd2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	mov    dl,0xcc
  40d113:	ins    DWORD PTR es:[edi],dx
  40d114:	out    dx,eax
  40d115:	ret    0x62d1
  40d118:	(bad)  
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x20]
  40d11e:	addr16 dec eax
  40d120:	shl    BYTE PTR cs:[edx+0x1d0ac579],1
  40d127:	fnstcw WORD PTR [ebx-0x7fa357d4]
  40d12d:	outs   dx,BYTE PTR ds:[esi]
  40d12e:	loope  0x40d0ce
  40d130:	inc    esp
  40d131:	cld    
  40d132:	jnp    0x40d0fe
  40d134:	cdq    
  40d135:	enter  0x3453,0x93
  40d139:	jmp    0x40d1ab
  40d13b:	sar    DWORD PTR [si+0x197],cl
  40d140:	out    0xfa,al
  40d142:	mov    ebx,0x69bb9a9b
  40d147:	mov    dh,0xfa
  40d149:	aaa    
  40d14a:	in     eax,dx
  40d14b:	sti    
  40d14c:	lock inc eax
  40d14e:	ins    BYTE PTR es:[edi],dx
  40d14f:	iret   
  40d150:	xchg   DWORD PTR [eax],esi
  40d152:	mov    cl,0x1c
  40d154:	sbb    DWORD PTR [esi],ebp
  40d156:	pop    DWORD PTR [si+0x50]
  40d15a:	jp     0x40d106
  40d15c:	daa    
  40d15d:	ret    0xc4ed
  40d160:	stos   DWORD PTR es:[edi],eax
  40d161:	push   esp
  40d162:	lds    ebx,FWORD PTR [edi-0x40]
  40d165:	js     0x40d1e4
  40d167:	or     edi,DWORD PTR [esi-0x61f857e]
  40d16d:	sbb    al,0xfc
  40d16f:	pop    eax
  40d170:	sub    ecx,DWORD PTR [esi+0x2aa8e43]
  40d176:	mov    al,BYTE PTR [esi-0x1f]
  40d179:	push   es
  40d17a:	psllq  mm4,mm1
  40d17d:	mov    ebx,0xf3eaec0b
  40d182:	fs in  eax,0xb6
  40d185:	hlt    
  40d186:	push   cs
  40d187:	mov    edx,0x5a6acafa
  40d18c:	xchg   ebp,eax
  40d18d:	out    0x91,eax
  40d18f:	loopne 0x40d1c0
  40d191:	mov    cl,BYTE PTR [eax+0x29a316c3]
  40d197:	stos   BYTE PTR es:[edi],al
  40d198:	das    
  40d199:	mov    ds:0x996822a,eax
  40d19e:	inc    edx
  40d19f:	push   esi
  40d1a0:	repz adc BYTE PTR ds:0x14488d51,bh
  40d1a7:	retf   0x57d8
  40d1aa:	ret    
  40d1ab:	xchg   edx,eax
  40d1ac:	jnp    0x40d1c9
  40d1ae:	add    cl,ch
  40d1b0:	mov    ecx,0xbf2a749f
  40d1b5:	clc    
  40d1b6:	(bad)  
  40d1b7:	out    0x4a,eax
  40d1b9:	push   ss
  40d1ba:	(bad)  
  40d1bb:	adc    dh,bh
  40d1bd:	pop    ds
  40d1be:	cwde   
  40d1bf:	and    ebp,eax
  40d1c1:	fimul  WORD PTR [ecx+0x22]
  40d1c4:	dec    ebx
  40d1c5:	inc    edx
  40d1c6:	pop    es
  40d1c7:	fist   DWORD PTR [esi-0x13]
  40d1ca:	test   eax,0x7b53226f
  40d1cf:	adc    eax,0x4c26a192
  40d1d4:	mov    dh,0xb4
  40d1d6:	mov    esi,0xa660c7fb
  40d1db:	ins    DWORD PTR es:[edi],dx
  40d1dc:	sti    
  40d1dd:	add    DWORD PTR [edi+0x3187d9b4],ebx
  40d1e3:	jg     0x40d25c
  40d1e5:	scas   eax,DWORD PTR es:[edi]
  40d1e6:	push   ebx
  40d1e7:	xchg   ecx,eax
  40d1e8:	aad    0x78
  40d1ea:	in     eax,0x7f
  40d1ec:	imul   ecx,edx,0x7ed61b5e
  40d1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f3:	jle    0x40d20b
  40d1f5:	mov    al,0xca
  40d1f7:	dec    edx
  40d1f8:	push   ebx
  40d1f9:	sub    dh,BYTE PTR [ecx-0x43]
  40d1fc:	and    BYTE PTR [ebp*8+0x4b82b5ff],ah
  40d203:	ds cdq 
  40d205:	or     ah,BYTE PTR ds:0x794428d0
  40d20b:	pop    ecx
  40d20c:	inc    eax
  40d20d:	iret   
  40d20e:	xor    BYTE PTR [ecx+0x69],al
  40d211:	aas    
  40d212:	push   esp
  40d213:	mov    dh,0xef
  40d215:	mov    edx,0xa3fd6cef
  40d21a:	sub    DWORD PTR ss:[ecx+0x14bb8fc],esi
  40d221:	mov    esi,0xccb6544
  40d226:	lock mov esp,0x11d0bfdd
  40d22c:	push   esp
  40d22d:	fwait
  40d22e:	inc    ebx
  40d22f:	mov    ebx,0x4d6f787d
  40d234:	jo     0x40d225
  40d236:	xor    ecx,ebx
  40d238:	push   edx
  40d239:	(bad)  
  40d23a:	mov    edi,0xc785c9ef
  40d23f:	add    BYTE PTR [esi-0x2a],al
  40d242:	jae    0x40d1cd
  40d244:	mov    cl,0x55
  40d246:	lods   al,BYTE PTR ds:[esi]
  40d247:	dec    ebx
  40d248:	int3   
  40d249:	and    bl,dh
  40d24b:	xchg   edx,eax
  40d24c:	push   ecx
  40d24d:	ja     0x40d23f
  40d24f:	scas   al,BYTE PTR es:[edi]
  40d250:	mov    al,ds:0xb9795760
  40d255:	sahf   
  40d256:	(bad)  
  40d257:	outs   dx,DWORD PTR ds:[esi]
  40d258:	test   BYTE PTR [edi+0x15],cl
  40d25b:	sub    al,0xf9
  40d25d:	cmp    al,0xfc
  40d25f:	xchg   edi,eax
  40d260:	mov    bh,0x3f
  40d262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d263:	daa    
  40d264:	retf   
  40d265:	inc    ecx
  40d266:	jb     0x40d2c8
  40d268:	push   0x16679860
  40d26d:	stos   BYTE PTR es:[edi],al
  40d26e:	mov    ds:0xa40e276d,al
  40d273:	sbb    dl,BYTE PTR [edx+0x5e]
  40d276:	jno    0x40d29d
  40d278:	ror    DWORD PTR [edi-0x1e337026],cl
  40d27e:	jp     0x40d267
  40d280:	xchg   edx,eax
  40d281:	jg     0x40d26e
  40d283:	ds jg  0x40d28b
  40d286:	mov    dh,0xec
  40d288:	sub    dl,BYTE PTR [edi]
  40d28a:	test   DWORD PTR [edi],esi
  40d28c:	add    eax,0xe62099b0
  40d291:	sub    ah,BYTE PTR [edi-0x47209384]
  40d297:	sub    dh,BYTE PTR [esi]
  40d299:	and    bh,bl
  40d29b:	fs stos BYTE PTR es:[edi],al
  40d29d:	enter  0x8c2c,0x4a
  40d2a1:	nop
  40d2a2:	fsub   st(6),st
  40d2a4:	pop    ecx
  40d2a5:	popf   
  40d2a6:	in     eax,0x8f
  40d2a8:	(bad)  
  40d2a9:	ss sub al,0xa1
  40d2ac:	sbb    al,0xcb
  40d2ae:	inc    ebx
  40d2af:	mov    ebx,0xe92c01f7
  40d2b4:	bound  ebx,QWORD PTR [eax+0x79]
  40d2b7:	sar    DWORD PTR ds:0xc95c437d,0x8
  40d2be:	ins    DWORD PTR es:[edi],dx
  40d2bf:	dec    ebp
  40d2c0:	dec    ebx
  40d2c1:	xchg   edi,edx
  40d2c3:	leave  
  40d2c4:	adc    al,0x32
  40d2c6:	and    eax,0xbf08e8ed
  40d2cb:	cmp    ebp,DWORD PTR [edi-0x1d86f34c]
  40d2d1:	inc    ebp
  40d2d2:	cmp    bh,0x1d
  40d2d5:	icebp  
  40d2d6:	xchg   ecx,eax
  40d2d7:	jnp    0x40d276
  40d2d9:	fiadd  WORD PTR [eax+0x46]
  40d2dc:	mov    edi,0xeb22dc02
  40d2e1:	push   esp
  40d2e2:	in     al,dx
  40d2e3:	inc    ecx
  40d2e4:	jle    0x9eb8c64f
  40d2ea:	dec    ebx
  40d2eb:	fwait
  40d2ec:	lods   eax,DWORD PTR ds:[esi]
  40d2ed:	fiadd  WORD PTR [esi-0xbbc3139]
  40d2f3:	jl     0x40d359
  40d2f5:	push   eax
  40d2f6:	mul    DWORD PTR [edx+0x6a33c110]
  40d2fc:	and    BYTE PTR [ecx+0x44c16afe],ch
  40d302:	test   DWORD PTR ds:0x69dd6bfa,esp
  40d308:	add    DWORD PTR [ebx+0x45],ebp
  40d30b:	xor    bl,al
  40d30d:	mov    ah,0x2
  40d30f:	pop    esi
  40d310:	(bad)  
  40d311:	jno    0x40d2bb
  40d313:	add    DWORD PTR [esi-0x14aeb6f6],edi
  40d319:	mov    ebx,0x800c68d3
  40d31e:	mov    ds:0x8adc7e69,eax
  40d323:	pop    eax
  40d324:	adc    ebx,DWORD PTR [ecx-0x78]
  40d327:	xchg   ebx,eax
  40d328:	jns    0x40d352
  40d32a:	push   ss
  40d32b:	jo     0x40d37a
  40d32d:	ror    BYTE PTR [ecx],1
  40d32f:	xchg   DWORD PTR [ecx-0x7f],edx
  40d332:	jl     0x40d2f6
  40d334:	jno    0x40d2bd
  40d336:	adc    bh,0xf1
  40d339:	ret    0xa200
  40d33c:	jmp    0x6e9f2e4c
  40d341:	ret    0x4543
  40d344:	mov    DWORD PTR [ebx+ebp*4-0x33a652a5],esp
  40d34b:	and    ebp,eax
  40d34d:	adc    BYTE PTR [eax-0x79],al
  40d350:	adc    BYTE PTR [ecx-0x799a4208],dh
  40d356:	jg     0x40d357
  40d358:	(bad)  
  40d35a:	push   ecx
  40d35b:	jmp    0x40d333
  40d35d:	dec    edi
  40d35e:	aad    0x40
  40d360:	outs   dx,BYTE PTR ds:[esi]
  40d361:	les    eax,FWORD PTR [ebx+0x447c2cd8]
  40d367:	jnp    0x40d3d1
  40d369:	sbb    DWORD PTR es:[esi-0x4fe90255],ebx
  40d370:	loop   0x40d3ce
  40d372:	and    DWORD PTR [edx+ebp*8-0x43],eax
  40d376:	pop    ds
  40d377:	jp     0x40d3d3
  40d379:	fwait
  40d37a:	popf   
  40d37b:	dec    ebp
  40d37c:	sbb    ecx,ebp
  40d37e:	pop    esp
  40d37f:	outs   dx,DWORD PTR ds:[esi]
  40d380:	dec    esi
  40d381:	inc    ebx
  40d382:	(bad)  
  40d383:	and    al,BYTE PTR [ebx]
  40d385:	pop    esp
  40d386:	pop    esp
  40d387:	cld    
  40d388:	in     al,0x1a
  40d38a:	jge    0x40d313
  40d38c:	mov    es,WORD PTR [ebp+0x4e0f892e]
  40d392:	sub    eax,0x19d279e
  40d397:	xor    al,0xdf
  40d399:	mov    edx,0xb8acef13
  40d39e:	cmp    al,0x33
  40d3a0:	and    al,0x61
  40d3a2:	and    eax,ecx
  40d3a4:	dec    esp
  40d3a5:	mov    ebp,?
  40d3a7:	leave  
  40d3a8:	enter  0xe61a,0x36
  40d3ac:	sahf   
  40d3ad:	loopne 0x40d359
  40d3af:	xchg   ecx,eax
  40d3b0:	mov    ch,0xb2
  40d3b2:	mov    ch,ch
  40d3b4:	(bad)  
  40d3b5:	xor    al,0x94
  40d3b7:	sub    BYTE PTR [eax],bl
  40d3b9:	ror    BYTE PTR [ebp-0x2b870daf],cl
  40d3bf:	das    
  40d3c0:	je     0x40d3d2
  40d3c2:	dec    edi
  40d3c3:	mov    al,0x1d
  40d3c5:	xlat   BYTE PTR ds:[ebx]
  40d3c6:	outs   dx,DWORD PTR ds:[esi]
  40d3c7:	ret    
  40d3c8:	jmp    DWORD PTR [edx+ebx*4+0x9]
  40d3cc:	imul   ebp,edx,0x774fd1fa
  40d3d2:	mov    ch,0xe0
  40d3d4:	xor    ah,bl
  40d3d6:	dec    esp
  40d3d7:	rcl    BYTE PTR [esi+0x538fa514],cl
  40d3dd:	not    DWORD PTR ds:0xd2be5352
  40d3e3:	lock sbb cl,dh
  40d3e6:	shl    BYTE PTR [eax-0x41f62515],1
  40d3ec:	pop    ebp
  40d3ed:	xchg   esi,eax
  40d3ee:	add    BYTE PTR [edx],0x5d
  40d3f1:	inc    edi
  40d3f2:	xor    bl,BYTE PTR [esi+esi*4+0x15]
  40d3f6:	and    DWORD PTR [eax],eax
  40d3f8:	ins    DWORD PTR es:[edi],dx
  40d3f9:	fisttp WORD PTR [edx+0x1d]
  40d3fc:	push   edx
  40d3fd:	and    ch,al
  40d3ff:	inc    ecx
  40d400:	outs   dx,BYTE PTR ds:[esi]
  40d401:	ror    DWORD PTR [edx+edi*8],1
  40d404:	xchg   esi,eax
  40d405:	ds loop 0x40d3ad
  40d408:	ror    esp,0x2f
  40d40b:	mov    dl,0xe5
  40d40d:	pop    ebp
  40d40e:	mov    ch,0x0
  40d410:	out    dx,al
  40d411:	sbb    ch,dh
  40d413:	enter  0xe6cc,0x6e
  40d417:	rcl    DWORD PTR [esi+0x2f],1
  40d41a:	cmp    eax,DWORD PTR [ebp+0x7e69c40f]
  40d420:	sub    al,0x8f
  40d422:	mov    ah,BYTE PTR [esi+0x5a4a39d8]
  40d428:	pusha  
  40d429:	popf   
  40d42a:	cmc    
  40d42b:	(bad)  
  40d42c:	mov    ch,0x44
  40d42e:	ds inc esi
  40d430:	pop    esi
  40d431:	iret   
  40d432:	jg     0x40d3e5
  40d434:	xchg   ecx,eax
  40d435:	rol    edx,0x7a
  40d438:	shl    dl,1
  40d43a:	in     al,dx
  40d43b:	sub    ebp,DWORD PTR [eax+0x98ec84a]
  40d441:	imul   ebx,DWORD PTR [esi+0x4],0xdc06c764
  40d448:	pop    eax
  40d449:	jg     0x40d3ed
  40d44b:	xor    DWORD PTR [eax],ebx
  40d44d:	pop    ebx
  40d44e:	hlt    
  40d44f:	adc    dl,BYTE PTR [ecx-0x78]
  40d452:	pop    es
  40d453:	xor    ebp,edx
  40d455:	mov    ah,0x67
  40d457:	jno    0x40d463
  40d459:	jno    0x40d474
  40d45b:	mov    ebp,0x3a1c9e1d
  40d460:	cli    
  40d461:	adc    cl,BYTE PTR [edi-0x24]
  40d464:	jbe    0x40d483
  40d466:	xchg   dl,al
  40d468:	mov    edi,0xf256e5f7
  40d46d:	lods   eax,DWORD PTR ds:[esi]
  40d46e:	fs jmp 0x40d4d9
  40d471:	mov    ds:0xb09ea17,eax
  40d476:	push   cs
  40d477:	inc    ebp
  40d478:	sub    al,0xf
  40d47a:	inc    esi
  40d47b:	mov    esi,0x73ae1a6
  40d480:	pop    ss
  40d481:	retf   0xdbad
  40d484:	sbb    ah,BYTE PTR ds:0xc20020cb
  40d48a:	xor    cl,ah
  40d48c:	aam    0x82
  40d48e:	jne    0x40d4c6
  40d490:	xchg   esi,eax
  40d491:	cmp    al,BYTE PTR [ebx]
  40d493:	lea    esi,[eax]
  40d495:	sbb    bl,bl
  40d497:	dec    ebp
  40d498:	rcl    ebx,cl
  40d49a:	add    al,0xdb
  40d49c:	fs dec edx
  40d49e:	jbe    0x40d4a9
  40d4a0:	sbb    BYTE PTR [eax-0x36],ch
  40d4a3:	pushf  
  40d4a4:	packssdw mm7,QWORD PTR [eax+0x5b]
  40d4a8:	inc    ebx
  40d4a9:	jno    0x40d4b0
  40d4ab:	add    eax,0x23085da3
  40d4b0:	shl    dl,1
  40d4b2:	mov    eax,gs:0x5f2da738
  40d4b8:	call   0x3d90a3d9
  40d4bd:	pop    ds
  40d4be:	out    dx,eax
  40d4bf:	sub    eax,0x9832756b
  40d4c4:	or     al,0xc
  40d4c6:	std    
  40d4c7:	(bad)  
  40d4c8:	cs int 0xb9
  40d4cb:	pop    esi
  40d4cc:	int3   
  40d4cd:	jmp    0x3d74:0xb4c2c5e4
  40d4d4:	pop    esi
  40d4d5:	js     0x40d52c
  40d4d7:	mov    eax,DWORD PTR [edi+0x19]
  40d4da:	in     al,dx
  40d4db:	cs pop ebp
  40d4dd:	(bad)  
  40d4de:	jbe    0x40d4ad
  40d4e0:	pop    ss
  40d4e1:	dec    edx
  40d4e2:	xchg   ecx,eax
  40d4e3:	ja     0x40d50d
  40d4e5:	pop    es
  40d4e6:	fist   DWORD PTR [ecx+0x43eb8486]
  40d4ec:	les    ebp,FWORD PTR ds:0x63a65b9a
  40d4f2:	pop    eax
  40d4f3:	mov    eax,0xd6ea316
  40d4f8:	jmp    0x40d54d
  40d4fa:	mov    esi,0x86db52f1
  40d4ff:	add    al,BYTE PTR [esi+0x2e]
  40d502:	pop    ecx
  40d503:	cli    
  40d504:	aam    0xe7
  40d506:	pop    esi
  40d507:	jns    0x40d4a3
  40d509:	addr16 push ecx
  40d50b:	leave  
  40d50c:	sbb    eax,DWORD PTR ds:0x4d558096
  40d512:	adc    BYTE PTR [edx+0x2500d81e],cl
  40d518:	xchg   esp,eax
  40d519:	sar    BYTE PTR [eax+0x3efea50d],1
  40d51f:	push   edx
  40d520:	sub    al,0x20
  40d522:	popa   
  40d523:	jg     0x40d531
  40d525:	loop   0x40d576
  40d527:	div    BYTE PTR [ebx+0x5972932c]
  40d52d:	cmp    DWORD PTR [eax+0x2f2c07bb],eax
  40d533:	pop    ds
  40d534:	test   DWORD PTR [esi],esi
  40d536:	pop    esi
  40d537:	jno    0x40d4ed
  40d539:	int3   
  40d53a:	adc    bl,bl
  40d53c:	pushf  
  40d53d:	imul   esi,DWORD PTR [edx+ebp*1-0x275bebc1],0xfffffff4
  40d545:	mov    dh,cl
  40d547:	(bad)  
  40d549:	cmc    
  40d54a:	sbb    ebx,DWORD PTR [ebx+edx*2-0x4f524bcf]
  40d551:	dec    ecx
  40d552:	pop    edx
  40d553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d554:	shl    DWORD PTR [ecx],0xbf
  40d557:	dec    edi
  40d558:	and    BYTE PTR [ecx-0x37],bh
  40d55b:	or     bl,bh
  40d55d:	into   
  40d55e:	loope  0x40d595
  40d560:	inc    ecx
  40d561:	cs mov ch,0x1f
  40d564:	psubusb mm2,QWORD PTR [eax+esi*8-0x60]
  40d569:	cmp    DWORD PTR [ebx],eax
  40d56b:	inc    edi
  40d56c:	repz stc 
  40d56e:	cdq    
  40d56f:	push   ss
  40d570:	inc    eax
  40d571:	xor    edi,DWORD PTR ds:0x3f1ca6be
  40d577:	sbb    BYTE PTR [edi-0x6aaa1409],dh
  40d57d:	cmp    eax,0xe38af255
  40d582:	dec    eax
  40d583:	mov    esi,0x3fb660bd
  40d588:	push   ss
  40d589:	xor    edi,DWORD PTR [edi]
  40d58b:	lods   al,BYTE PTR ds:[esi]
  40d58c:	icebp  
  40d58d:	pop    eax
  40d58e:	push   0xe75d8c2c
  40d593:	cwde   
  40d594:	xchg   edi,eax
  40d595:	xchg   ecx,eax
  40d596:	and    cl,BYTE PTR [eax]
  40d598:	pop    edx
  40d599:	in     eax,0xab
  40d59b:	rol    BYTE PTR [ebp-0x39],1
  40d59e:	add    esp,DWORD PTR [eax]
  40d5a0:	daa    
  40d5a1:	std    
  40d5a2:	shl    esi,1
  40d5a4:	dec    esi
  40d5a5:	xchg   ebp,eax
  40d5a6:	cli    
  40d5a7:	sbb    dl,BYTE PTR [ebx+0x403b0879]
  40d5ad:	push   edi
  40d5ae:	add    al,0x7a
  40d5b0:	pop    ds
  40d5b1:	or     BYTE PTR ds:0x9ca479eb,ah
  40d5b7:	pop    esp
  40d5b8:	add    BYTE PTR [ebx-0x47f0cc34],al
  40d5be:	jns    0x40d567
  40d5c0:	imul   esi,edi,0x7c205bbc
  40d5c6:	mov    dl,0xbb
  40d5c8:	sub    al,0x91
  40d5ca:	cmc    
  40d5cb:	add    eax,0x9bc002e9
  40d5d0:	loopne 0x40d56e
  40d5d2:	ret    
  40d5d3:	mov    al,0x72
  40d5d6:	je     0x40d5e4
  40d5d8:	pop    ss
  40d5d9:	lods   eax,DWORD PTR ds:[esi]
  40d5da:	les    edx,FWORD PTR [ebx-0x11]
  40d5dd:	push   ebx
  40d5de:	and    bl,bl
  40d5e0:	int    0xaf
  40d5e2:	adc    edi,DWORD PTR [ecx]
  40d5e4:	or     al,0xea
  40d5e6:	mov    eax,0x41d06031
  40d5eb:	fnstenv [ebp+0x3e]
  40d5ee:	ret    
  40d5ef:	mov    eax,0xe2b61354
  40d5f4:	jl     0x40d647
  40d5f6:	hlt    
  40d5f7:	sbb    eax,0x564c0f67
  40d5fc:	loop   0x40d67b
  40d5fe:	cmp    ch,BYTE PTR [ecx-0x2b]
  40d601:	mov    eax,0x5a439cf7
  40d606:	(bad)  
  40d607:	das    
  40d608:	sar    DWORD PTR [esi],cl
  40d60a:	mov    DWORD PTR ds:[ebp+0x3b],0x57c8862c
  40d612:	out    dx,al
  40d613:	jno    0x40d5dc
  40d615:	loope  0x40d5e9
  40d617:	pop    edx
  40d618:	loopne 0x40d5d7
  40d61a:	jns    0x40d628
  40d61c:	adc    eax,0xa1fb5c1f
  40d621:	jle    0x40d646
  40d623:	push   0x3e
  40d625:	inc    ecx
  40d626:	adc    ecx,DWORD PTR ds:[ebx+edi*8]
  40d62a:	enter  0x9cc0,0x3f
  40d62e:	or     ah,ch
  40d630:	popa   
  40d631:	jb     0x40d5f4
  40d633:	push   ebx
  40d634:	pop    esi
  40d635:	jno    0x40d699
  40d637:	das    
  40d638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d639:	xor    bl,0xb3
  40d63c:	mov    dh,0xbb
  40d63e:	data16 stc 
  40d640:	shl    ebx,cl
  40d642:	mov    BYTE PTR [si+0x38],al
  40d646:	call   0x33cada4e
  40d64b:	jno    0x40d613
  40d64d:	mov    dl,0xda
  40d64f:	std    
  40d650:	mov    dh,BYTE PTR [esi]
  40d652:	jle    0x40d634
  40d654:	in     al,0x81
  40d656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d657:	out    0xa,al
  40d659:	jno    0x40d66f
  40d65b:	sar    DWORD PTR [edx+0x63],0xec
  40d65f:	push   edx
  40d660:	pop    ss
  40d661:	push   ebx
  40d662:	adc    eax,0xc4b6a59f
  40d667:	or     eax,0xcaedd53
  40d66c:	test   DWORD PTR [esi],ebp
  40d66e:	arpl   WORD PTR [ebx-0x2b774757],bp
  40d674:	cmp    eax,0x67a1c8e3
  40d679:	or     eax,0xdc706b8f
  40d67e:	sbb    eax,0x9e318976
  40d683:	sbb    dl,0x19
  40d686:	sub    BYTE PTR [esi-0x2f637705],0xa5
  40d68d:	cmp    BYTE PTR [ecx+0x3c03eec],al
  40d693:	hlt    
  40d694:	mov    eax,0x43e57005
  40d699:	cmp    ah,BYTE PTR [ecx+esi*8]
  40d69c:	nop
  40d69d:	and    edi,DWORD PTR [edi-0x1249948a]
  40d6a3:	sbb    esi,DWORD PTR [eax+0x5db88b16]
  40d6a9:	and    dh,ch
  40d6ab:	sub    eax,0xcb669ed4
  40d6b0:	loope  0x40d701
  40d6b2:	push   esi
  40d6b3:	jae    0x40d692
  40d6b5:	push   cs
  40d6b6:	sub    eax,0x66f35cdb
  40d6bb:	repz xchg ebx,eax
  40d6bd:	inc    edx
  40d6be:	fs out 0xcd,eax
  40d6c1:	mov    bl,0x26
  40d6c3:	add    eax,0x3f74f7c9
  40d6c8:	dec    cl
  40d6ca:	mov    bl,0x95
  40d6cc:	mov    ds:0x82525c1d,al
  40d6d1:	push   ds
  40d6d2:	lods   eax,DWORD PTR ds:[esi]
  40d6d3:	in     al,dx
  40d6d4:	xor    al,0xfe
  40d6d6:	out    0xef,eax
  40d6d8:	mov    edx,fs
  40d6da:	add    DWORD PTR [ebx-0x1b],ecx
  40d6dd:	std    
  40d6de:	ins    BYTE PTR es:[edi],dx
  40d6df:	shr    BYTE PTR [edx-0x43],1
  40d6e2:	sub    al,0xfb
  40d6e4:	adc    DWORD PTR [esp+ebx*4+0x4a17ea33],ebp
  40d6eb:	pusha  
  40d6ec:	or     DWORD PTR [ecx-0x2a],esp
  40d6ef:	das    
  40d6f0:	cmp    DWORD PTR [ebp+0x28],0x9cdfc763
  40d6f7:	int3   
  40d6f8:	ja     0x40d744
  40d6fa:	xchg   edx,eax
  40d6fb:	loopne 0x40d6fe
  40d6fd:	pop    ds
  40d6fe:	retf   0x4bf9
  40d701:	inc    eax
  40d702:	fisub  DWORD PTR [eax+0x59]
  40d705:	fistp  WORD PTR cs:[esi+0x32]
  40d709:	pop    ebx
  40d70a:	test   BYTE PTR [ebx+0x23cd8eac],cl
  40d710:	or     esi,DWORD PTR [edx-0x67464cd3]
  40d716:	idiv   DWORD PTR ss:0xcdfeec4d
  40d71d:	xchg   BYTE PTR [edi],dh
  40d71f:	adc    BYTE PTR [esi+0x3a],cl
  40d722:	in     al,dx
  40d723:	out    0x84,eax
  40d725:	shl    DWORD PTR [ebx+ebp*4+0x40407431],cl
  40d72c:	sbb    eax,ebp
  40d72e:	jecxz  0x40d72a
  40d730:	les    ebx,FWORD PTR [edx+0x75bcf7c]
  40d736:	inc    ebp
  40d737:	adc    eax,0xd13caac8
  40d73c:	pop    edx
  40d73d:	jbe    0x40d70c
  40d73f:	aad    0x20
  40d741:	aas    
  40d742:	and    al,0xa4
  40d744:	or     ah,dl
  40d746:	cmc    
  40d747:	jo     0x40d760
  40d749:	add    ebp,ebp
  40d74b:	gs popa 
  40d74d:	punpckhbw mm7,QWORD PTR [ecx+0x1ef38ab2]
  40d754:	neg    BYTE PTR [edi+0x74]
  40d757:	dec    edx
  40d758:	push   ds
  40d759:	fwait
  40d75a:	and    eax,0xaf88ccb
  40d75f:	or     edi,eax
  40d761:	or     cl,BYTE PTR [ecx]
  40d763:	lahf   
  40d764:	mov    BYTE PTR [esi],dl
  40d766:	inc    edx
  40d767:	test   al,0xe0
  40d769:	sub    edi,DWORD PTR [ebp+0x785d14c1]
  40d76f:	dec    eax
  40d770:	scas   al,BYTE PTR es:[edi]
  40d771:	push   bx
  40d773:	not    bl
  40d775:	push   ebx
  40d776:	loop   0x40d71c
  40d778:	ins    DWORD PTR es:[edi],dx
  40d779:	and    DWORD PTR [eax+0x19718fd4],ebx
  40d77f:	cwde   
  40d780:	(bad)  [ebx+0x10]
  40d783:	(bad)  
  40d784:	mov    cl,0x20
  40d786:	push   ebx
  40d787:	adc    ebx,DWORD PTR [edx+esi*2+0x7e]
  40d78b:	iret   
  40d78c:	fsubr  DWORD PTR [edi+0x3b]
  40d78f:	arpl   WORD PTR [edx],bp
  40d791:	outs   dx,DWORD PTR ds:[esi]
  40d792:	jno    0x40d810
  40d794:	jp     0x40d7c3
  40d796:	rcl    eax,0x7c
  40d799:	js     0x40d79a
  40d79b:	fidivr DWORD PTR [esi+ebx*8-0x527b8b12]
  40d7a2:	xchg   esp,eax
  40d7a3:	in     al,dx
  40d7a4:	loopne 0x40d756
  40d7a6:	cmp    al,0x10
  40d7a8:	xchg   ebx,eax
  40d7a9:	pop    eax
  40d7aa:	cmc    
  40d7ab:	sub    bl,BYTE PTR [eax]
  40d7ad:	cmp    bl,BYTE PTR [ecx+0x6ad67b93]
  40d7b3:	or     DWORD PTR [edi],ebx
  40d7b5:	dec    ecx
  40d7b6:	mov    bh,0x90
  40d7b8:	scas   eax,DWORD PTR es:[edi]
  40d7b9:	dec    edi
  40d7ba:	mov    ds:0xf40168b7,al
  40d7bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c0:	das    
  40d7c1:	ret    0x202e
  40d7c4:	(bad)  
  40d7c5:	iret   
  40d7c6:	sub    eax,0x209c3b42
  40d7cc:	pop    ebx
  40d7cd:	sub    DWORD PTR [eax-0x55ef423c],edx
  40d7d3:	fwait
  40d7d4:	push   ebx
  40d7d5:	test   eax,0xbe3fdea6
  40d7da:	retf   0x7855
  40d7dd:	gs xchg ebx,eax
  40d7df:	adc    DWORD PTR [edi-0x5ee0e1da],0x51
  40d7e6:	jmp    0x40d77d
  40d7e8:	popf   
  40d7e9:	sub    esp,DWORD PTR [eax]
  40d7eb:	pop    edx
  40d7ec:	push   edi
  40d7ed:	cmp    cl,0x73
  40d7f0:	repnz or eax,0x52a1c2f3
  40d7f6:	jmp    0xd03e:0x8f0c2f64
  40d7fd:	cmp    al,0x62
  40d7ff:	dec    edx
  40d800:	or     esi,esp
  40d802:	jmp    ecx
  40d804:	jmp    0x40d7ed
  40d806:	retf   
  40d807:	dec    esi
  40d808:	adc    BYTE PTR [edx-0x5dd50f79],dl
  40d80e:	mov    bh,0x88
  40d810:	adc    ch,BYTE PTR [ebp-0x1b]
  40d813:	inc    ebx
  40d814:	scas   al,BYTE PTR es:[edi]
  40d815:	or     dh,BYTE PTR [eax+eax*2-0x34]
  40d819:	mov    edx,0x813ecd7e
  40d81e:	cmp    al,BYTE PTR [edx-0x39]
  40d821:	sbb    ah,BYTE PTR [eax+0x7b]
  40d824:	out    dx,eax
  40d825:	sub    eax,0xbdf5dae5
  40d82a:	jnp    0x40d859
  40d82c:	sbb    eax,0x10ef7659
  40d831:	push   0x9fbbde53
  40d836:	fdiv   DWORD PTR ds:0xfab5bd99
  40d83c:	inc    ebp
  40d83d:	repz or DWORD PTR [esp+eiz*2+0x45c36b1],ebx
  40d845:	aaa    
  40d846:	bound  edx,QWORD PTR [esp+esi*1]
  40d849:	adc    cl,BYTE PTR [eax-0x56a5325]
  40d84f:	and    al,0x4f
  40d851:	movhps QWORD PTR [edx],xmm4
  40d854:	xor    ebx,ebx
  40d856:	add    bl,cl
  40d858:	push   ebx
  40d859:	cli    
  40d85a:	in     al,0x6d
  40d85c:	hlt    
  40d85d:	sub    eax,0xacfdff53
  40d862:	stc    
  40d863:	out    0x8c,al
  40d865:	out    0xa2,eax
  40d867:	or     eax,0xb51d70fb
  40d86c:	inc    ebp
  40d86d:	jecxz  0x40d87c
  40d86f:	xor    BYTE PTR [esi+0x44012d40],bl
  40d875:	mov    al,0xf6
  40d877:	push   0x5ec1abaa
  40d87c:	call   0x990:0x9458edd
  40d883:	pop    ds
  40d884:	in     al,dx
  40d885:	iret   
  40d886:	push   es
  40d887:	out    dx,al
  40d888:	mov    esi,0x6dfc7ace
  40d88d:	mov    bl,0x48
  40d88f:	in     eax,0x62
  40d891:	xchg   ecx,eax
  40d892:	stc    
  40d893:	cmp    eax,0xb55f223e
  40d898:	mov    cl,0x6f
  40d89a:	cmovle esp,DWORD PTR [ebx-0x658a9fcf]
  40d8a1:	and    eax,0xb7dc36a1
  40d8a6:	mov    ds:0xbf1f5dbf,eax
  40d8ab:	mov    eax,ds:0x56466d8c
  40d8b0:	push   ss
  40d8b1:	nop
  40d8b2:	jae    0x40d8c5
  40d8b4:	hlt    
  40d8b5:	adc    BYTE PTR [esi-0x5f],ch
  40d8b8:	push   0x7d74f42
  40d8bd:	or     bh,bl
  40d8bf:	adc    esp,DWORD PTR [esi]
  40d8c1:	add    edi,edx
  40d8c3:	sub    DWORD PTR ds:[edx+0x53261311],edx
  40d8ca:	les    edx,FWORD PTR [edx+0x6b7c1a59]
  40d8d0:	aam    0x19
  40d8d2:	and    al,0x3c
  40d8d4:	stc    
  40d8d5:	pop    esi
  40d8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d7:	leave  
  40d8d8:	xor    al,0x47
  40d8da:	mov    dh,0x9
  40d8dc:	mul    DWORD PTR [edi+0x55593314]
  40d8e2:	ret    0x4434
  40d8e5:	jbe    0x40d91f
  40d8e7:	ins    DWORD PTR es:[edi],dx
  40d8e8:	and    esp,ebp
  40d8ea:	call   0xba0b11c
  40d8ef:	sar    DWORD PTR [edi-0x4d5abb05],cl
  40d8f5:	mov    dl,0x89
  40d8f7:	call   esp
  40d8f9:	cmp    bl,dh
  40d8fb:	inc    esi
  40d8fc:	fdiv   DWORD PTR [edi+0x65]
  40d8ff:	pop    ss
  40d900:	cli    
  40d901:	popa   
  40d902:	nop
  40d903:	jecxz  0x40d8d8
  40d905:	sbb    dl,BYTE PTR [eax-0x33]
  40d908:	jmp    0x9b63ad23
  40d90d:	jb     0x40d8b2
  40d90f:	ja     0x40d8b1
  40d911:	adc    BYTE PTR [eax+eiz*1-0x783c55ad],ch
  40d918:	test   BYTE PTR [edi+0x1839fe71],al
  40d91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91f:	mov    eax,0xc4fa48fb
  40d924:	inc    esi
  40d925:	into   
  40d926:	or     eax,0xba01e56d
  40d92b:	inc    eax
  40d92c:	cmp    eax,0xc9d9414a
  40d931:	gs out dx,eax
  40d933:	sub    DWORD PTR [esi],esp
  40d935:	pop    edi
  40d936:	or     eax,0x85f13d2e
  40d93b:	cdq    
  40d93c:	icebp  
  40d93d:	retf   
  40d93e:	or     al,0x33
  40d940:	addr16 mov al,0x6
  40d943:	popf   
  40d944:	inc    edi
  40d945:	mov    bl,0x7f
  40d947:	(bad)  [ebp-0x52fccdce]
  40d94d:	div    BYTE PTR [ecx+0x45]
  40d950:	pop    ecx
  40d951:	fild   DWORD PTR [edx-0x7c]
  40d954:	in     al,dx
  40d955:	push   cs
  40d956:	cmp    BYTE PTR [edx-0x6c46e99e],ch
  40d95c:	sahf   
  40d95d:	add    ah,BYTE PTR es:[edx+0x4e0ee127]
  40d964:	push   edi
  40d965:	xchg   esi,eax
  40d966:	rcl    DWORD PTR ss:[ecx],cl
  40d969:	mul    esi
  40d96b:	dec    esp
  40d96c:	mov    dl,0x90
  40d96e:	and    BYTE PTR [eax+0x6a4e6a73],cl
  40d974:	xchg   edx,eax
  40d975:	push   ecx
  40d976:	pop    ebx
  40d977:	sub    eax,0xcefe4e89
  40d97c:	mov    cl,0x9e
  40d97e:	add    DWORD PTR [esi+ecx*4+0x4cb2c519],ecx
  40d985:	out    dx,eax
  40d986:	jne    0x40d9a7
  40d988:	punpcklwd mm1,DWORD PTR [eax-0x2c]
  40d98c:	ins    DWORD PTR es:[edi],dx
  40d98d:	or     eax,0x640be424
  40d992:	push   ecx
  40d993:	mov    ?,esp
  40d995:	mov    dl,0x4e
  40d997:	lock adc edx,eax
  40d99a:	dec    ebp
  40d99b:	add    al,0xce
  40d99d:	scas   al,BYTE PTR es:[edi]
  40d99e:	fcom   QWORD PTR ds:[eax-0x15]
  40d9a2:	cmp    DWORD PTR [ebx],0xffffffeb
  40d9a5:	popa   
  40d9a6:	jge    0x40d986
  40d9a8:	pop    edx
  40d9a9:	lds    ebx,FWORD PTR [edi+0x1b]
  40d9ac:	retf   
  40d9ad:	out    dx,eax
  40d9ae:	xor    al,0xd3
  40d9b0:	sub    BYTE PTR [edi+0x6e],dh
  40d9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b4:	xchg   ebp,eax
  40d9b5:	push   ss
  40d9b6:	jmp    0x40d958
  40d9b8:	fist   DWORD PTR [ebx-0x29b2df4d]
  40d9be:	xchg   edi,eax
  40d9bf:	dec    eax
  40d9c0:	fcomp  QWORD PTR [eax+ebx*8]
  40d9c3:	or     eax,0x2ef67b6e
  40d9c8:	stc    
  40d9c9:	addr16 out 0x53,al
  40d9cc:	sbb    DWORD PTR [ecx+0x218238f8],edx
  40d9d2:	sub    ecx,DWORD PTR [ecx-0x3094b0f5]
  40d9d8:	retf   0xbf8e
  40d9db:	adc    BYTE PTR [ebp+eiz*4-0x7693fb12],ch
  40d9e2:	lods   al,BYTE PTR ds:[esi]
  40d9e3:	add    bl,BYTE PTR [edx-0x76]
  40d9e6:	sub    eax,0x3895c29e
  40d9eb:	sbb    DWORD PTR [esi-0x7d],ebx
  40d9ee:	leave  
  40d9ef:	cmc    
  40d9f0:	xchg   ebp,eax
  40d9f1:	inc    eax
  40d9f2:	push   ecx
  40d9f3:	inc    esp
  40d9f4:	sbb    eax,0xb18a7279
  40d9f9:	mov    ah,0xa5
  40d9fb:	jg     0x40d9a5
  40d9fd:	retf   0xba1a
  40da00:	sub    BYTE PTR [ecx],dh
  40da02:	jmp    0x42fdb6ee
  40da07:	sub    ebx,esp
  40da09:	xor    eax,ebp
  40da0b:	aam    0x62
  40da0d:	data16 jmp 0x40d9a3
  40da10:	or     eax,0xf0b50a8f
  40da15:	or     esi,eax
  40da17:	int    0x25
  40da19:	pop    ecx
  40da1a:	int3   
  40da1b:	or     ebp,DWORD PTR [edx]
  40da1d:	outs   dx,DWORD PTR ds:[esi]
  40da1e:	adc    eax,0x95ae683a
  40da23:	dec    esp
  40da24:	jmp    0x6860:0x86602fa7
  40da2b:	xor    dh,bl
  40da2d:	mov    bh,0xca
  40da2f:	bndstx [esi],bnd1
  40da32:	(bad)  
  40da33:	icebp  
  40da34:	pop    eax
  40da35:	or     ch,dl
  40da37:	pop    edx
  40da38:	or     BYTE PTR [ebp-0x2f],ch
  40da3b:	mov    ds:0xb9f6d0d2,eax
  40da40:	(bad)  
  40da41:	std    
  40da42:	sbb    edi,DWORD PTR [ebp-0x4cb5e66f]
  40da48:	test   BYTE PTR [ecx],0xf4
  40da4b:	push   ebp
  40da4c:	and    dl,BYTE PTR [ebx]
  40da4e:	into   
  40da4f:	push   es
  40da50:	ins    BYTE PTR es:[edi],dx
  40da51:	add    BYTE PTR [ecx],ah
  40da53:	xchg   edi,eax
  40da54:	adc    BYTE PTR [ebp+0x3a798f7c],ch
  40da5a:	inc    ebp
  40da5b:	jae    0x40dad3
  40da5d:	mov    al,0x9e
  40da5f:	cmp    al,0x66
  40da61:	jl     0x40dab9
  40da63:	clts   
  40da65:	test   cl,ah
  40da67:	xchg   ecx,eax
  40da68:	and    eax,esp
  40da6a:	sbb    DWORD PTR [edx],esi
  40da6c:	jmp    0x6b1e:0x2c73eb94
  40da73:	ret    
  40da74:	or     esp,ebx
  40da76:	and    BYTE PTR [ebx+esi*4-0x4e],ch
  40da7a:	in     al,dx
  40da7b:	test   eax,0x57d8acc6
  40da80:	dec    edi
  40da81:	push   esp
  40da82:	cmc    
  40da83:	mov    edi,0x9edc98e7
  40da88:	ret    0xceb4
  40da8b:	or     BYTE PTR [esi],ch
  40da8d:	retf   
  40da8e:	jmp    0x40da8b
  40da90:	out    dx,al
  40da91:	sbb    DWORD PTR [eax-0x3b],edx
  40da94:	jae    0x40da7a
  40da96:	sbb    al,0x40
  40da98:	pop    esp
  40da99:	dec    ebp
  40da9a:	call   0x1ea2c40
  40da9f:	loopne 0x40da7c
  40daa1:	mov    dl,0x99
  40daa3:	lahf   
  40daa4:	push   0xfffffff6
  40daa6:	add    ebp,0x47323dc4
  40daac:	mov    WORD PTR [esi+0x16],ds
  40daaf:	and    BYTE PTR [ebp-0x67d68f9f],bh
  40dab5:	scas   al,BYTE PTR es:[edi]
  40dab6:	clc    
  40dab7:	cmp    BYTE PTR [edi+ecx*1+0xfd7c84d],ch
  40dabe:	pop    es
  40dabf:	int3   
  40dac0:	sub    DWORD PTR [ebx],ebx
  40dac2:	imul   edx,ebp,0xffffffce
  40dac5:	jne    0x40dab9
  40dac7:	idiv   DWORD PTR [eax-0x14]
  40daca:	xor    al,0x74
  40dacc:	sub    ebp,ebx
  40dace:	pop    ss
  40dacf:	out    0x1a,eax
  40dad1:	mov    ds:0x50ce61cd,al
  40dad6:	pop    ebp
  40dad7:	std    
  40dad8:	fidivr WORD PTR [ecx-0x21e4b951]
  40dade:	jge    0x40db28
  40dae0:	lock or ebx,edi
  40dae3:	loop   0x40da6f
  40dae5:	in     eax,dx
  40dae6:	jnp    0x40db22
  40dae8:	or     dh,BYTE PTR [ecx]
  40daea:	data16 sub al,0x13
  40daed:	cmp    DWORD PTR [ebx],0x8b88f39c
  40daf3:	enter  0xbf2a,0xae
  40daf7:	cmp    al,0x50
  40daf9:	in     eax,dx
  40dafa:	mov    fs,edi
  40dafc:	mov    eax,0x679f6e6c
  40db01:	cs cli 
  40db03:	mov    al,ds:0xe2e80ab4
  40db08:	cmp    DWORD PTR [ebp+edx*2+0x6],ebx
  40db0c:	xor    al,0x67
  40db0f:	mov    es,WORD PTR [edx-0x12523aa8]
  40db15:	loopne 0x40db1a
  40db17:	dec    ebx
  40db18:	out    dx,al
  40db19:	ins    DWORD PTR es:[edi],dx
  40db1a:	or     DWORD PTR [esi],0xd91592ab
  40db20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db21:	fwait
  40db22:	stc    
  40db23:	mov    al,0xaf
  40db25:	fistp  WORD PTR [edi]
  40db27:	push   ss
  40db28:	loopne 0x40db89
  40db2a:	nop
  40db2b:	pusha  
  40db2c:	dec    esi
  40db2d:	mov    eax,ds:0x33efc84d
  40db32:	add    al,0x41
  40db34:	inc    edx
  40db35:	and    esp,ecx
  40db37:	xor    dh,BYTE PTR [esi+0x37]
  40db3a:	enter  0x7f8c,0x73
  40db3e:	and    esp,DWORD PTR [edx]
  40db40:	add    eax,0x9bd0a686
  40db45:	or     eax,0x55e3c29a
  40db4a:	imul   esi,DWORD PTR [ebp+0x62c3cd18],0xb81a0045
  40db54:	test   al,0xc5
  40db56:	or     dh,BYTE PTR [edi+0x1d]
  40db59:	jmp    0x79d94f8f
  40db5e:	adc    BYTE PTR ds:0xddcf53f6,cl
  40db64:	hlt    
  40db65:	xor    BYTE PTR [edi],ah
  40db67:	shl    BYTE PTR [ecx+0x7d841f77],0xa9
  40db6e:	mov    esp,DWORD PTR [ecx]
  40db70:	fnstsw WORD PTR [eax]
  40db72:	jns    0x40db7f
  40db74:	add    BYTE PTR [ecx],bl
  40db76:	rol    DWORD PTR [ecx],cl
  40db78:	(bad)  
  40db79:	out    0x72,al
  40db7b:	mov    bl,0x8f
  40db7d:	mov    ecx,0xda3d28c5
  40db82:	push   ebp
  40db83:	and    DWORD PTR cs:[edx+0x2b],esi
  40db87:	xchg   edx,eax
  40db88:	test   DWORD PTR [ecx+0x4efb3d18],ecx
  40db8e:	ins    BYTE PTR es:[edi],dx
  40db8f:	test   BYTE PTR [esi],0x81
  40db92:	jbe    0x40db8b
  40db94:	mov    ebx,0x587ce51f
  40db99:	mov    ecx,0xfc6ac777
  40db9e:	imul   BYTE PTR [esi+0x250f767b]
  40dba4:	std    
  40dba5:	int    0x57
  40dba7:	push   ecx
  40dba8:	and    eax,esp
  40dbaa:	(bad)  
  40dbab:	loope  0x40dbd5
  40dbad:	imul   ebx,esi,0xffffffae
  40dbb0:	test   al,0x36
  40dbb2:	mov    ecx,0xf067b6c9
  40dbb7:	mov    cl,0xab
  40dbb9:	ins    DWORD PTR es:[edi],dx
  40dbba:	rcl    BYTE PTR [esi+0x5d],1
  40dbbd:	fs pusha 
  40dbbf:	stc    
  40dbc0:	push   bp
  40dbc2:	push   ebp
  40dbc3:	jmp    0xe933:0x9c98e712
  40dbca:	mov    bl,0x9b
  40dbcc:	lods   eax,DWORD PTR ds:[esi]
  40dbcd:	push   ecx
  40dbce:	out    0xe,al
  40dbd0:	inc    ecx
  40dbd1:	mov    ecx,DWORD PTR [ebp+ecx*4+0x1f76ccc2]
  40dbd8:	jo     0x40db8f
  40dbda:	iret   
  40dbdb:	mov    ds:0xaa55f49f,al
  40dbe0:	xor    ebx,ebx
  40dbe2:	xchg   edi,eax
  40dbe3:	fld1   
  40dbe5:	mov    al,ds:0x9e6ead83
  40dbea:	mov    ebx,0x5e41ce27
  40dbef:	and    eax,0x410289c2
  40dbf4:	mov    DWORD PTR [ebx],eax
  40dbf6:	imul   ebp,DWORD PTR [edi-0x47a0984d],0xffffffd5
  40dbfd:	inc    ebx
  40dbfe:	out    dx,eax
  40dbff:	or     dh,BYTE PTR ds:0x5469ca62
  40dc05:	mov    edx,esi
  40dc07:	int3   
  40dc08:	or     al,0xc3
  40dc0a:	dec    BYTE PTR [ebx-0x3b3effc6]
  40dc10:	shl    bh,0x72
  40dc13:	aad    0x18
  40dc15:	push   cs
  40dc16:	cmp    al,0x91
  40dc18:	enter  0x7e92,0x29
  40dc1c:	jmp    0xc2af46de
  40dc21:	ins    DWORD PTR es:[edi],dx
  40dc22:	jno    0x40dc93
  40dc24:	sbb    bl,ah
  40dc26:	pop    ecx
  40dc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc28:	aad    0xcc
  40dc2a:	in     al,dx
  40dc2b:	dec    eax
  40dc2c:	jae    0x40dc02
  40dc2e:	jb     0x40dbce
  40dc30:	retf   
  40dc31:	int    0x22
  40dc33:	fdiv   st,st(1)
  40dc35:	nop
  40dc36:	sub    BYTE PTR [edi],0x65
  40dc39:	jns    0x40dc94
  40dc3b:	jbe    0x40dcad
  40dc3d:	daa    
  40dc3e:	sub    al,0x54
  40dc40:	fadd   QWORD PTR ds:0x3293445
  40dc46:	pop    esi
  40dc47:	cmp    eax,0x9178e9b5
  40dc4c:	adc    al,0x97
  40dc4e:	dec    edx
  40dc4f:	std    
  40dc50:	add    bh,BYTE PTR [eax-0x45]
  40dc53:	loopne 0x40dcce
  40dc55:	xchg   eax,eax
  40dc57:	dec    esi
  40dc58:	mov    dl,0x7d
  40dc5a:	scas   eax,DWORD PTR es:[edi]
  40dc5b:	mov    eax,ds:0x7c92f5d7
  40dc60:	sub    BYTE PTR [edi],ah
  40dc62:	xchg   ebp,eax
  40dc63:	and    ebp,edi
  40dc65:	push   ss
  40dc66:	test   bl,dh
  40dc68:	push   ds
  40dc69:	sub    ebx,DWORD PTR [esi-0x69]
  40dc6c:	jne    0x40dc88
  40dc6e:	jns    0x40dcae
  40dc70:	repz and ah,BYTE PTR [edi-0x77]
  40dc74:	leave  
  40dc75:	or     DWORD PTR [esi+0x58c6373c],ecx
  40dc7b:	jl     0x40dc7b
  40dc7d:	popf   
  40dc7e:	dec    esi
  40dc7f:	outs   dx,BYTE PTR ds:[esi]
  40dc80:	push   0xf250cfd0
  40dc85:	fisttp DWORD PTR [esi]
  40dc87:	test   BYTE PTR [eax-0x438a2a3],bl
  40dc8d:	sbb    DWORD PTR [ecx-0x4a5436e],ecx
  40dc93:	pop    ecx
  40dc94:	popa   
  40dc95:	stos   DWORD PTR es:[edi],eax
  40dc96:	mov    ch,0x6f
  40dc98:	mov    dh,0xe8
  40dc9a:	or     eax,DWORD PTR [edx+0x4ce3cbd3]
  40dca0:	inc    ecx
  40dca1:	sbb    BYTE PTR [ebp-0x3c],0x5a
  40dca5:	push   edi
  40dca6:	push   ds
  40dca7:	outs   dx,DWORD PTR ds:[esi]
  40dca8:	outs   dx,BYTE PTR ds:[esi]
  40dca9:	mov    edx,?
  40dcab:	iret   
  40dcac:	retf   
  40dcad:	ss aas 
  40dcaf:	enter  0x3865,0x29
  40dcb3:	cld    
  40dcb4:	mov    esi,0x69a3605c
  40dcb9:	sub    al,0x61
  40dcbb:	mov    dl,0xc4
  40dcbd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40dcbf:	aam    0x4f
  40dcc1:	xor    BYTE PTR [ebx-0x6cc49ada],0xed
  40dcc8:	inc    ecx
  40dcc9:	stos   BYTE PTR es:[edi],al
  40dcca:	lahf   
  40dccb:	(bad)  
  40dccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dccd:	mov    edx,DWORD PTR ds:0xb7bd15f9
  40dcd3:	cmp    DWORD PTR [eax-0x53],esp
  40dcd6:	(bad)  
  40dcd7:	shl    DWORD PTR [eax+0x44],cl
  40dcda:	push   ds
  40dcdb:	xor    edi,DWORD PTR [eax]
  40dcdd:	das    
  40dcde:	out    0x3f,eax
  40dce0:	jnp    0x40dd5f
  40dce2:	cdq    
  40dce3:	sub    eax,0xd53118ea
  40dce8:	add    ah,BYTE PTR [edx+0x3742ce40]
  40dcee:	nop
  40dcef:	lods   eax,DWORD PTR ds:[esi]
  40dcf0:	push   edi
  40dcf1:	fcomp  QWORD PTR ds:[eax+0x15]
  40dcf5:	lds    esp,FWORD PTR [edi-0x43]
  40dcf8:	add    esp,ecx
  40dcfa:	bound  esp,QWORD PTR [esi-0x3f]
  40dcfd:	in     al,dx
  40dcfe:	cmp    ah,al
  40dd00:	test   BYTE PTR [eax+eax*8-0x3aa5b5a9],ah
  40dd07:	mov    ecx,0x9e586ad3
  40dd0c:	cdq    
  40dd0d:	dec    esp
  40dd0e:	loopne 0x40dce9
  40dd10:	test   BYTE PTR [edi-0x66],ah
  40dd13:	outs   dx,BYTE PTR cs:[esi]
  40dd15:	dec    ebx
  40dd16:	pop    esi
  40dd17:	and    dl,bh
  40dd19:	mov    ds:0xc8e3b2e7,al
  40dd1e:	inc    esp
  40dd1f:	dec    ebx
  40dd20:	push   cs
  40dd21:	in     eax,dx
  40dd22:	rcl    BYTE PTR [ebp-0x46951203],1
  40dd28:	loopne 0x40dcc3
  40dd2a:	fwait
  40dd2b:	xor    ecx,DWORD PTR [ebp-0x627941f7]
  40dd31:	xor    eax,0x7b365fe2
  40dd36:	das    
  40dd37:	ins    DWORD PTR es:[edi],dx
  40dd38:	arpl   WORD PTR [edx],si
  40dd3a:	jmp    0x40dd58
  40dd3c:	mov    cl,0x5
  40dd3e:	pop    edi
  40dd3f:	test   eax,0xd9af2c84
  40dd44:	jmp    0x9848:0x9a9f994
  40dd4b:	xor    BYTE PTR [ebx+0x85d77fa],ch
  40dd51:	cmp    al,0x37
  40dd53:	and    eax,0x2a5ab34c
  40dd58:	fsubrp st(1),st
  40dd5a:	ss stos DWORD PTR es:[edi],eax
  40dd5c:	inc    edx
  40dd5d:	and    eax,DWORD PTR [eax+0x268e4109]
  40dd63:	cmp    BYTE PTR [edx-0x195a8e19],cl
  40dd69:	ret    
  40dd6a:	lock in eax,0xd9
  40dd6d:	add    esi,DWORD PTR [edx]
  40dd6f:	mov    bl,0x66
  40dd71:	inc    esi
  40dd72:	cbw    
  40dd74:	inc    ebx
  40dd75:	add    cl,dl
  40dd77:	inc    eax
  40dd78:	int3   
  40dd79:	out    0xe6,eax
  40dd7b:	int3   
  40dd7c:	dec    ebx
  40dd7d:	fxch   st(2)
  40dd7f:	mov    DWORD PTR [eax],0x63691291
  40dd85:	push   es
  40dd86:	push   esp
  40dd87:	sub    DWORD PTR [ecx],0x472a107f
  40dd8d:	mov    BYTE PTR [ecx+0xe],ah
  40dd90:	mov    ah,0xa3
  40dd92:	sbb    al,0xa3
  40dd94:	ret    
  40dd95:	push   edx
  40dd96:	xor    edx,ecx
  40dd98:	int3   
  40dd99:	xlat   BYTE PTR ds:[ebx]
  40dd9a:	outs   dx,BYTE PTR ds:[esi]
  40dd9b:	sbb    BYTE PTR [eax+esi*8],bl
  40dd9e:	sbb    eax,edx
  40dda0:	mov    DWORD PTR [ebx-0x9],esi
  40dda3:	dec    ebx
  40dda4:	inc    eax
  40dda5:	aas    
  40dda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda7:	adc    BYTE PTR [ebx],dl
  40dda9:	push   0x2f
  40ddab:	sbb    ebx,DWORD PTR [ecx+eax*8-0x2e]
  40ddaf:	mov    eax,ds:0x960cecd5
  40ddb4:	pop    ss
  40ddb5:	pop    edi
  40ddb6:	cmp    bl,BYTE PTR [esi-0x49]
  40ddb9:	lahf   
  40ddba:	int    0x33
  40ddbc:	aaa    
  40ddbd:	mov    bl,0x1e
  40ddbf:	fisub  WORD PTR [ecx-0x4e]
  40ddc2:	and    ecx,ebp
  40ddc4:	ret    
  40ddc5:	loope  0x40dde6
  40ddc7:	(bad)  
  40ddc8:	jecxz  0x40de2d
  40ddca:	enter  0xd14e,0xa9
  40ddce:	aam    0x8a
  40ddd0:	sbb    ebx,ecx
  40ddd2:	cwde   
  40ddd3:	cmp    esp,ebp
  40ddd5:	fsubr  DWORD PTR [eax]
  40ddd7:	sbb    ebx,DWORD PTR [edx-0x38]
  40ddda:	(bad)  
  40dddb:	dec    ebx
  40dddc:	jp     0x40ddfd
  40ddde:	push   ecx
  40dddf:	fucomp st(2)
  40dde1:	fnstenv [edx+0x71b542db]
  40dde7:	and    DWORD PTR [eax],esp
  40dde9:	inc    esi
  40ddea:	into   
  40ddeb:	pop    es
  40ddec:	inc    esp
  40dded:	add    al,0xe
  40ddef:	outs   dx,DWORD PTR ds:[esi]
  40ddf0:	mov    esi,0xfcd7be24
  40ddf5:	xchg   BYTE PTR [eax+0x5a],dh
  40ddf8:	add    al,0xa7
  40ddfa:	inc    ebx
  40ddfb:	sbb    edx,DWORD PTR [esp+eax*1-0x53d9492e]
  40de02:	(bad)  
  40de03:	xchg   edi,eax
  40de04:	jmp    0x40dda7
  40de06:	call   0x24d3:0x82ab666
  40de0d:	shr    bl,0x9f
  40de10:	mov    ecx,0x867958a7
  40de15:	stos   BYTE PTR es:[edi],al
  40de16:	sbb    DWORD PTR [ebx+edi*2+0x5d850b8e],esi
  40de1d:	outs   dx,DWORD PTR ss:[esi]
  40de1f:	xchg   ebp,eax
  40de20:	hlt    
  40de21:	inc    edi
  40de22:	into   
  40de23:	jle    0x40de8c
  40de25:	dec    edi
  40de26:	mov    bh,0x79
  40de28:	mov    BYTE PTR [edx+0x46],al
  40de2b:	stos   DWORD PTR es:[edi],eax
  40de2c:	jecxz  0x40ddfd
  40de2e:	xchg   DWORD PTR [ebx],eax
  40de30:	sbb    dl,ch
  40de32:	dec    edi
  40de33:	cmp    BYTE PTR [ebx-0x158e6b08],0xd
  40de3a:	adc    ecx,DWORD PTR [esi]
  40de3c:	pop    ss
  40de3d:	or     al,0xcb
  40de3f:	jmp    0x40de8a
  40de41:	aam    0x16
  40de43:	xchg   ebp,eax
  40de44:	mov    bh,0xe6
  40de46:	push   ds
  40de47:	add    BYTE PTR [ecx-0x17],dl
  40de4a:	jg     0x40ddfb
  40de4c:	mov    eax,0x14c3f8af
  40de51:	mov    eax,ds:0xc7f764fa
  40de56:	pusha  
  40de57:	ficom  WORD PTR [eax+0x7e3bf66d]
  40de5d:	push   ss
  40de5e:	xor    eax,0xb6eca1db
  40de63:	aaa    
  40de64:	cmp    BYTE PTR cs:[ebp-0xe],ah
  40de68:	js     0x40de2f
  40de6a:	mov    esi,0x847c282e
  40de6f:	xchg   edi,eax
  40de70:	pop    eax
  40de71:	push   ebx
  40de72:	fs lock jbe 0x40deeb
  40de76:	xchg   ecx,eax
  40de77:	inc    ecx
  40de78:	and    eax,DWORD PTR [eax-0x68]
  40de7b:	xchg   esi,eax
  40de7c:	outs   dx,DWORD PTR ds:[esi]
  40de7d:	mov    esp,0xe5aeaae2
  40de82:	jg     0x40dec9
  40de84:	or     DWORD PTR [edx+eiz*4+0x60],ebx
  40de88:	push   esp
  40de89:	cmp    dh,bh
  40de8b:	xlat   BYTE PTR ds:[ebx]
  40de8d:	adc    DWORD PTR [edi-0x3e],edx
  40de90:	or     eax,0x779d1682
  40de95:	aam    0x83
  40de97:	mov    cs,WORD PTR [ecx+ebx*8-0x30e9909a]
  40de9e:	push   ebx
  40de9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea0:	fwait
  40dea1:	mov    ds:0xc89ee470,eax
  40dea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea7:	xor    bl,BYTE PTR [ebp+0x36bf8168]
  40dead:	xor    esp,esi
  40deaf:	leave  
  40deb0:	(bad)  
  40deb1:	call   0x3f1:0xd2114410
  40deb8:	shl    BYTE PTR [ebx-0x23],0x8a
  40debc:	sti    
  40debd:	pop    edi
  40debe:	ds and al,0x6c
  40dec1:	mov    ebx,0x307ae165
  40dec6:	inc    edi
  40dec7:	xor    al,0xdf
  40dec9:	in     al,0xe9
  40decb:	adc    DWORD PTR [edx+0x9],esi
  40dece:	mov    ebp,0xec989799
  40ded3:	sbb    DWORD PTR [ebx+0x1a6de2d],ebx
  40ded9:	gs jnp 0x40deb6
  40dedc:	mov    ecx,0xbf1905ac
  40dee1:	inc    ebp
  40dee2:	adc    bh,dl
  40dee4:	les    edx,FWORD PTR [esi-0x31]
  40dee7:	repnz inc eax
  40dee9:	fsub   DWORD PTR [esi]
  40deeb:	mov    dh,0x18
  40deed:	or     eax,DWORD PTR [edx+0x414c565e]
  40def3:	add    esp,DWORD PTR [ebp+0xe]
  40def6:	xchg   esp,eax
  40def7:	lods   al,BYTE PTR ds:[esi]
  40def8:	jmp    0x1373:0xa835
  40defe:	mov    edi,0xde7efc71
  40df03:	dec    eax
  40df04:	fnstenv [edx-0x1f98146a]
  40df0a:	ja     0x40debd
  40df0c:	fldenv [edi]
  40df0e:	fbld   TBYTE PTR [edi+0x4e]
  40df11:	imul   esi,DWORD PTR [esi+0x1ed900b],0x5d3067f7
  40df1b:	in     eax,dx
  40df1c:	mov    al,0xc8
  40df1e:	leave  
  40df1f:	mov    ebx,edi
  40df21:	or     dl,BYTE PTR [eax+ebp*1]
  40df24:	in     eax,0x4a
  40df26:	xlat   BYTE PTR ds:[ebx]
  40df27:	cmc    
  40df28:	xchg   ebp,eax
  40df29:	test   BYTE PTR [ecx],cl
  40df2b:	sbb    dh,BYTE PTR [ecx-0x246880f9]
  40df31:	ins    BYTE PTR es:[edi],dx
  40df32:	mov    es,WORD PTR [eax]
  40df34:	cwde   
  40df35:	xlat   BYTE PTR ds:[ebx]
  40df36:	loope  0x40dfb0
  40df38:	cwde   
  40df39:	add    eax,0x3b353716
  40df3e:	pop    ecx
  40df3f:	mov    WORD PTR [ebp-0x1d8dc911],es
  40df45:	hlt    
  40df46:	imul   ecx
  40df48:	rcr    esp,0x81
  40df4b:	inc    edx
  40df4c:	lock int3 
  40df4e:	jmp    0x25f:0xe3942c3f
  40df55:	jbe    0x40df25
  40df57:	jecxz  0x40df75
  40df59:	ror    DWORD PTR [esi-0x12a41725],0x82
  40df60:	into   
  40df61:	mov    bl,0x2e
  40df63:	in     eax,dx
  40df64:	inc    ebx
  40df65:	add    bl,BYTE PTR [edx-0x6522da6b]
  40df6b:	mov    al,ds:0xbaf4927b
  40df70:	jmp    0xb2ff9378
  40df75:	fidivr DWORD PTR [eax+0x7]
  40df78:	inc    esi
  40df79:	sar    BYTE PTR [edi],1
  40df7b:	data16 aad 0x11
  40df7e:	scas   eax,DWORD PTR es:[edi]
  40df7f:	xor    esi,ebx
  40df81:	(bad)  [eax]
  40df83:	pop    esi
  40df84:	aad    0x65
  40df86:	out    dx,eax
  40df87:	or     DWORD PTR [edi+0x32a09863],eax
  40df8d:	pop    eax
  40df8e:	mov    BYTE PTR [ebx-0x18],dl
  40df91:	inc    edi
  40df92:	arpl   cx,sp
  40df94:	(bad)  
  40df95:	fsubr  st(0),st
  40df97:	dec    edi
  40df98:	push   ebx
  40df99:	ins    DWORD PTR es:[edi],dx
  40df9a:	push   ds
  40df9b:	cmc    
  40df9c:	dec    ebp
  40df9d:	jmp    0x40dfad
  40df9f:	push   es
  40dfa0:	sbb    eax,DWORD PTR ds:0xd6fb5fee
  40dfa7:	add    cl,BYTE PTR [esi+0x550144b4]
  40dfad:	out    0xed,al
  40dfaf:	mov    ah,0x78
  40dfb1:	lods   al,BYTE PTR ds:[esi]
  40dfb2:	outs   dx,DWORD PTR ds:[esi]
  40dfb3:	retf   0x1a15
  40dfb6:	cwde   
  40dfb7:	dec    esp
  40dfb8:	or     al,0xd2
  40dfba:	xchg   ebx,eax
  40dfbb:	mov    BYTE PTR [esi-0xfe65e8d],ah
  40dfc1:	stos   DWORD PTR es:[edi],eax
  40dfc2:	mov    esp,0x7efe742e
  40dfc7:	out    dx,eax
  40dfc8:	jnp    0x40e01d
  40dfca:	push   edi
  40dfcb:	xor    edi,ebx
  40dfcd:	mov    dh,dl
  40dfcf:	mov    ebx,DWORD PTR [ecx-0x5e9d0b77]
  40dfd5:	xchg   ecx,eax
  40dfd6:	jno    0x40df84
  40dfd8:	cmp    DWORD PTR [edi+0x8b39455],ecx
  40dfde:	mov    al,0xd7
  40dfe0:	mov    WORD PTR [esi+0x63],fs
  40dfe3:	mul    DWORD PTR [eax-0x46]
  40dfe6:	push   0x2d26a897
  40dfeb:	jl     0x40dfb1
  40dfed:	xor    al,0xc
  40dfef:	and    al,0xd9
  40dff1:	ss aaa 
  40dff3:	aad    0xac
  40dff5:	push   esp
  40dff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff7:	xlat   BYTE PTR ds:[ebx]
  40dff8:	jne    0x40dff5
  40dffa:	mov    cs,WORD PTR [bx+di-0x34]
  40dffe:	pop    ebx
  40dfff:	popf   
  40e000:	adc    ch,BYTE PTR [ebx]
  40e002:	fcomp  DWORD PTR [ebx+0x533ab9e2]
  40e008:	ins    DWORD PTR es:[edi],dx
  40e009:	pop    ebp
  40e00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e00b:	sbb    BYTE PTR [ebp-0x565481e6],dh
  40e011:	in     eax,dx
  40e012:	fld    QWORD PTR [ebx]
  40e014:	sbb    BYTE PTR [esi],0xa5
  40e017:	push   eax
  40e018:	inc    ebx
  40e019:	sbb    cl,BYTE PTR [ebx-0x72]
  40e01c:	inc    esp
  40e01d:	cmp    ecx,DWORD PTR ds:0x179ff7bd
  40e023:	stos   DWORD PTR es:[edi],eax
  40e024:	xchg   esp,eax
  40e025:	int    0xb9
  40e027:	and    BYTE PTR [eax-0x12],bl
  40e02a:	sub    bl,dh
  40e02c:	rol    ecx,0x82
  40e02f:	fisubr DWORD PTR [edx+0xe]
  40e032:	rcr    al,cl
  40e034:	mov    edx,0xccf73783
  40e039:	or     cl,BYTE PTR [ecx-0x4]
  40e03c:	inc    ecx
  40e03d:	mov    ecx,DWORD PTR [ecx+ebp*8-0x7c655418]
  40e044:	cli    
  40e045:	adc    dh,BYTE PTR [edi]
  40e047:	mov    esp,0xd2df1833
  40e04c:	repz jp 0x40e041
  40e04f:	mov    al,0xc3
  40e051:	stos   BYTE PTR es:[edi],al
  40e052:	arpl   WORD PTR [edi+0x73fd4290],dx
  40e058:	js     0x40e075
  40e05a:	fdiv   DWORD PTR [ebp-0x46]
  40e05d:	iret   
  40e05e:	mov    edx,0x901fd8a2
  40e063:	push   es
  40e064:	xchg   esp,eax
  40e065:	xchg   ecx,eax
  40e066:	sbb    BYTE PTR [ebx+0x70],cl
  40e069:	sahf   
  40e06a:	mov    edi,0x4a0d0c39
  40e06f:	jmp    FWORD PTR [eax]
  40e071:	je     0x40e0bf
  40e073:	push   0xffffffce
  40e075:	pop    ebp
  40e076:	jmp    0x40e00f
  40e078:	xchg   ecx,eax
  40e079:	jg     0x40e0e8
  40e07b:	cmp    esp,esi
  40e07d:	cwde   
  40e07e:	imul   ebp,DWORD PTR [edx+0x465fe864],0xffffffcf
  40e085:	or     BYTE PTR [edi+ecx*1-0x202f936f],al
  40e08c:	push   ebp
  40e08d:	or     eax,0xd4fe5f56
  40e092:	pushf  
  40e093:	sub    al,0x6b
  40e095:	mov    esi,0x3207640d
  40e09a:	mov    edi,0xf89e6a12
  40e09f:	cmp    eax,0x370130b
  40e0a4:	push   esp
  40e0a5:	lock pusha 
  40e0a7:	lock js 0x40e049
  40e0aa:	(bad)  
  40e0ab:	cs xor eax,0x5e7f2b05
  40e0b1:	test   ecx,edi
  40e0b3:	lahf   
  40e0b4:	push   ds
  40e0b5:	fisub  WORD PTR [esi-0xbcb32ae]
  40e0bb:	xchg   ecx,eax
  40e0bc:	and    al,0xb
  40e0be:	sub    eax,0x25709204
  40e0c3:	push   0x2
  40e0c5:	mov    dl,0x8
  40e0c7:	push   esp
  40e0c8:	and    al,0xef
  40e0ca:	lahf   
  40e0cb:	ret    
  40e0cc:	mov    edi,0x23d15b18
  40e0d1:	sub    bh,0x4b
  40e0d4:	sbb    al,0x76
  40e0d6:	add    bh,BYTE PTR [eax]
  40e0d8:	cmp    BYTE PTR [eax+0x6d1e8630],cl
  40e0de:	je     0x40e108
  40e0e0:	enter  0x9a20,0x62
  40e0e4:	xchg   edi,eax
  40e0e5:	cld    
  40e0e6:	je     0x40e108
  40e0e8:	test   eax,0xcd5fba82
  40e0ed:	jnp    0x40e135
  40e0ef:	and    ebx,ecx
  40e0f1:	sti    
  40e0f2:	jecxz  0x40e09d
  40e0f4:	fxch   st(1)
  40e0f6:	fmul   DWORD PTR [edx+0x59]
  40e0f9:	jle    0x40e086
  40e0fb:	rcl    ah,0xf6
  40e0fe:	push   edx
  40e0ff:	data16 fistp WORD PTR ds:0x322459f0
  40e106:	lock ja 0x40e08c
  40e109:	loope  0x40e124
  40e10b:	xchg   ebx,eax
  40e10c:	xor    al,0x7b
  40e10e:	sbb    al,0x2d
  40e110:	jnp    0x40e096
  40e112:	push   0xffffffa7
  40e114:	mov    dl,0x3c
  40e116:	popf   
  40e117:	je     0x40e14d
  40e119:	mov    bh,0xbc
  40e11b:	push   ecx
  40e11c:	or     eax,DWORD PTR [ecx+eiz*2+0x61]
  40e120:	ja     0x40e11b
  40e122:	or     ebx,DWORD PTR [edi-0x7d]
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	inc    esp
  40e127:	call   0x43db7713
  40e12c:	inc    ebp
  40e12d:	or     eax,0x87b23d9b
  40e132:	ss jo  0x40e0be
  40e135:	mov    ch,0x2b
  40e137:	pop    ebp
  40e138:	push   esp
  40e139:	cwde   
  40e13a:	inc    edx
  40e13b:	add    dh,BYTE PTR [edi-0x2c1c1ba8]
  40e141:	mov    eax,ds:0xdadedf5e
  40e146:	and    BYTE PTR [ecx],0xfa
  40e149:	fyl2x  
  40e14b:	lods   eax,DWORD PTR ds:[esi]
  40e14c:	sub    al,0xe8
  40e14e:	(bad)  [edx-0x1598f630]
  40e154:	or     al,0xcf
  40e156:	dec    edx
  40e157:	ror    BYTE PTR [eax+0x1a2628cf],1
  40e15d:	cld    
  40e15e:	cmp    esp,edi
  40e160:	ficom  WORD PTR [edi+0x1f]
  40e163:	inc    edx
  40e164:	mov    al,0xaf
  40e166:	dec    ebp
  40e167:	cwde   
  40e168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e169:	sbb    DWORD PTR [ebp+0x4d],esi
  40e16c:	pop    ss
  40e16d:	xlat   BYTE PTR ds:[ebx]
  40e16e:	mov    edi,DWORD PTR [esi+0x7481d8bb]
  40e174:	add    ecx,esi
  40e176:	mov    ebx,0x51a25c7a
  40e17b:	adc    DWORD PTR [ecx],edx
  40e17d:	test   esp,0x7c46bdf9
  40e183:	cli    
  40e184:	inc    esi
  40e185:	fistp  WORD PTR [edx-0x359ca14c]
  40e18b:	call   0xeca75d77
  40e190:	xchg   edi,eax
  40e191:	aam    0x90
  40e193:	add    esp,ebp
  40e195:	jecxz  0x40e20d
  40e197:	jle    0x40e1e2
  40e199:	leave  
  40e19a:	mov    edi,DWORD PTR [eax+0x2d78a843]
  40e1a0:	fld    DWORD PTR [ebx]
  40e1a2:	loopne 0x40e1f8
  40e1a4:	int    0xcb
  40e1a6:	leave  
  40e1a7:	and    dh,BYTE PTR [esi-0x1b5d7a74]
  40e1ad:	daa    
  40e1ae:	push   ss
  40e1af:	in     eax,0x5f
  40e1b1:	pop    eax
  40e1b2:	inc    ebx
  40e1b3:	sub    cl,BYTE PTR [edx]
  40e1b5:	pop    ecx
  40e1b6:	cmc    
  40e1b7:	std    
  40e1b8:	mov    esi,0xa8d949b
  40e1bd:	imul   esp,esi,0xffffffbf
  40e1c0:	xor    BYTE PTR ds:0xfa424cbd,dh
  40e1c6:	out    0x65,al
  40e1c8:	outs   dx,DWORD PTR ds:[esi]
  40e1c9:	cld    
  40e1ca:	ins    BYTE PTR es:[edi],dx
  40e1cb:	push   ebp
  40e1cc:	push   esi
  40e1cd:	xchg   DWORD PTR [ebx-0x64],esp
  40e1d0:	std    
  40e1d1:	(bad)  
  40e1d2:	mov    bh,0x83
  40e1d4:	jne    0x40e219
  40e1d6:	add    BYTE PTR [ebx+0x66806e02],dl
  40e1dc:	gs icebp 
  40e1de:	icebp  
  40e1df:	ja     0x40e234
  40e1e1:	fdivr  QWORD PTR [edx+0x5c509a7e]
  40e1e7:	pop    es
  40e1e8:	pop    edi
  40e1e9:	jecxz  0x40e20a
  40e1eb:	push   eax
  40e1ec:	xchg   ecx,eax
  40e1ed:	call   0xc427:0xc14c6e90
  40e1f4:	inc    ebx
  40e1f5:	gs repz push edi
  40e1f8:	ja     0x40e1bc
  40e1fa:	add    bh,BYTE PTR [ebx-0x3155cf17]
  40e200:	gs in  eax,dx
  40e202:	inc    edi
  40e203:	sbb    eax,0x3a6d91f0
  40e208:	sahf   
  40e209:	imul   edx,esp,0x31c36358
  40e20f:	inc    ebx
  40e210:	lock leave 
  40e212:	jne    0x40e20f
  40e214:	push   eax
  40e215:	cmp    al,0xce
  40e217:	fadd   st(4),st
  40e219:	fcomp  DWORD PTR [eax+0x526c4aa1]
  40e21f:	mov    ds:0xad1ccb26,eax
  40e224:	cmp    ch,dl
  40e226:	stos   DWORD PTR es:[edi],eax
  40e227:	rcr    BYTE PTR [eax+esi*4-0xe],cl
  40e22b:	fmulp  st(3),st
  40e22d:	xor    dh,BYTE PTR ds:0x7ec1f01b
  40e233:	scas   al,BYTE PTR es:[edi]
  40e234:	imul   edi,DWORD PTR [esi],0x55
  40e237:	dec    ebp
  40e238:	(bad)  
  40e239:	hlt    
  40e23a:	mov    BYTE PTR [ecx],al
  40e23c:	in     eax,dx
  40e23d:	jne    0x40e279
  40e23f:	cmp    eax,0x2993fd73
  40e244:	icebp  
  40e245:	pop    ecx
  40e246:	inc    ecx
  40e247:	pop    esp
  40e248:	rol    bh,1
  40e24a:	and    BYTE PTR [ebx-0x65],0xf1
  40e24e:	loop   0x40e1df
  40e250:	(bad)
  40e254:	jp     0x40e25e
  40e256:	pop    eax
  40e257:	adc    BYTE PTR [edi-0x175a8aa6],ah
  40e25d:	push   eax
  40e25e:	cmc    
  40e25f:	xchg   ebp,eax
  40e260:	xchg   esp,eax
  40e261:	xchg   ecx,eax
  40e262:	xor    al,0xf9
  40e264:	and    eax,0x2863b3d1
  40e269:	ds dec edx
  40e26b:	std    
  40e26c:	dec    edi
  40e26d:	xchg   ecx,eax
  40e26e:	mov    ecx,0xe7721d31
  40e273:	cs push ebp
  40e275:	call   0x26ef:0x73c406e3
  40e27c:	mov    ebx,esi
  40e27e:	cmc    
  40e27f:	sbb    BYTE PTR [esi-0xd],cl
  40e282:	cld    
  40e283:	sub    al,0x92
  40e285:	jmp    0x40e261
  40e287:	push   ebp
  40e288:	cmp    bh,al
  40e28a:	lahf   
  40e28b:	mov    ds:0x22499cb9,al
  40e290:	jle    0x40e216
  40e292:	dec    ebp
  40e293:	mov    bh,0x1b
  40e295:	dec    eax
  40e296:	imul   edx,DWORD PTR [ebx],0x2c
  40e299:	xor    BYTE PTR cs:[edi+0x61],cl
  40e29d:	call   0xe0a0de7a
  40e2a2:	ins    BYTE PTR es:[edi],dx
  40e2a3:	mov    al,0xdc
  40e2a5:	fnstsw WORD PTR [ecx]
  40e2a7:	adc    dh,ch
  40e2a9:	xor    BYTE PTR [edx],bh
  40e2ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ad:	es xchg esi,eax
  40e2af:	pop    ss
  40e2b0:	test   al,0xb3
  40e2b2:	and    ebp,esp
  40e2b4:	pop    esp
  40e2b5:	sub    BYTE PTR [eax],0x68
  40e2b8:	int    0xe6
  40e2ba:	aaa    
  40e2bb:	adc    cl,BYTE PTR [esi+0x30]
  40e2be:	fst    QWORD PTR [ebx-0x1dac3086]
  40e2c4:	loope  0x40e33e
  40e2c6:	sbb    BYTE PTR [edx-0x54f587f],dh
  40e2cc:	sbb    al,BYTE PTR [ebx+0x3b1f827c]
  40e2d2:	push   edx
  40e2d3:	int    0xfd
  40e2d5:	xchg   ebx,eax
  40e2d6:	and    al,0xdd
  40e2d8:	cmp    eax,DWORD PTR [eax-0x45943fe6]
  40e2de:	cmp    BYTE PTR [edx],bh
  40e2e0:	inc    edi
  40e2e1:	hlt    
  40e2e2:	in     al,dx
  40e2e3:	xor    eax,0xdc8dad3d
  40e2e8:	push   ebp
  40e2e9:	pop    ss
  40e2ea:	dec    DWORD PTR [edi]
  40e2ec:	cmp    DWORD PTR [ebp-0x5],ebp
  40e2ef:	or     DWORD PTR [ebx+0x17],eax
  40e2f2:	clc    
  40e2f3:	shr    DWORD PTR [ebp+ecx*1+0x25ddce8c],1
  40e2fa:	(bad)  
  40e2fb:	inc    edi
  40e2fd:	fcom   QWORD PTR [ecx]
  40e2ff:	outs   dx,DWORD PTR ds:[esi]
  40e300:	les    ebx,FWORD PTR [edi+ecx*8-0x72]
  40e304:	pop    ebx
  40e305:	and    eax,0x12ac2882
  40e30a:	or     BYTE PTR [eax+0x59],al
  40e30d:	inc    ebx
  40e30e:	and    DWORD PTR [ecx-0x68292f98],edx
  40e314:	inc    ebp
  40e315:	sbb    dl,BYTE PTR [ecx-0x7463d2e4]
  40e31b:	cs pop ss
  40e31d:	push   ss
  40e31e:	add    al,0x8
  40e320:	iret   
  40e321:	push   ds
  40e322:	cs dec eax
  40e324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e325:	push   ecx
  40e326:	daa    
  40e327:	cmp    cl,bh
  40e329:	inc    eax
  40e32a:	mov    ds:0xbd3f2cba,al
  40e32f:	ja     0x40e300
  40e331:	pop    ss
  40e332:	xlat   BYTE PTR ds:[ebx]
  40e333:	or     esi,eax
  40e335:	fucom  st(5)
  40e337:	cmp    DWORD PTR [edx+0x79717a4b],0x4a
  40e33e:	dec    ecx
  40e33f:	test   cl,dl
  40e341:	mov    cl,0x98
  40e343:	dec    eax
  40e344:	scas   al,BYTE PTR es:[edi]
  40e345:	out    0xb3,eax
  40e347:	sub    al,0x9f
  40e349:	mov    al,ds:0xf230a704
  40e34e:	dec    eax
  40e34f:	pop    ebx
  40e350:	stos   BYTE PTR es:[edi],al
  40e351:	clc    
  40e352:	pop    ebx
  40e354:	mov    dl,0x50
  40e356:	imul   edx
  40e358:	int    0x96
  40e35a:	push   ebp
  40e35b:	xchg   esp,eax
  40e35c:	inc    ebx
  40e35d:	jae    0x40e3b7
  40e35f:	rol    BYTE PTR [esi],0x81
  40e362:	jl     0x40e366
  40e364:	xchg   BYTE PTR [edi+0x69b4c3bc],bh
  40e36a:	fmul   QWORD PTR [edi-0x6510cca5]
  40e370:	aad    0xd8
  40e372:	enterw 0xd5fe,0x3a
  40e377:	pushf  
  40e378:	xchg   esi,eax
  40e379:	dec    esi
  40e37a:	jns    0x40e3eb
  40e37c:	jmp    0x99dd:0x78c3741
  40e383:	repnz adc bl,dh
  40e386:	out    0x77,al
  40e388:	adc    BYTE PTR [ebx+eiz*1+0x75],ch
  40e38c:	neg    DWORD PTR [eax]
  40e38e:	push   esi
  40e38f:	in     al,0xe6
  40e391:	icebp  
  40e392:	add    al,0x2f
  40e394:	mov    esi,0x4f0e4351
  40e399:	lea    eax,[ebp-0x1c]
  40e39c:	out    dx,eax
  40e39d:	cmp    cl,al
  40e39f:	ja     0x40e336
  40e3a1:	loopne 0x40e376
  40e3a3:	shr    BYTE PTR [edi-0xe94ecdb],1
  40e3a9:	xchg   ecx,eax
  40e3aa:	dec    edx
  40e3ab:	mov    dl,0xe7
  40e3ad:	imul   ebp,DWORD PTR [esi-0x1bf28002],0x56be80
  40e3b7:	(bad)  
  40e3b8:	mov    edi,0xa090a84c
  40e3bd:	push   0x6
  40e3bf:	cmp    eax,0xc2406f78
  40e3c4:	ja     0x40e429
  40e3c6:	outs   dx,DWORD PTR ds:[esi]
  40e3c7:	jae    0x40e3dd
  40e3c9:	or     ecx,DWORD PTR [ebx+0x293988a1]
  40e3cf:	lahf   
  40e3d0:	xor    eax,0xda92ea72
  40e3d5:	popf   
  40e3d6:	or     DWORD PTR [ebx],ecx
  40e3d8:	xor    al,0xae
  40e3da:	xchg   ecx,eax
  40e3db:	ficomp DWORD PTR [edx+ebp*8-0x11]
  40e3df:	jmp    0x40e40f
  40e3e1:	sbb    BYTE PTR [ebx-0x4f],cl
  40e3e4:	arpl   WORD PTR ss:[ecx],cx
  40e3e7:	sub    al,0x89
  40e3e9:	xchg   edi,eax
  40e3ea:	cmp    cl,cl
  40e3ec:	inc    esp
  40e3ed:	in     eax,dx
  40e3ee:	(bad)  
  40e3ef:	outs   dx,DWORD PTR ds:[esi]
  40e3f0:	add    dh,cl
  40e3f2:	aas    
  40e3f3:	cmp    DWORD PTR [eax],esp
  40e3f5:	scas   al,BYTE PTR es:[edi]
  40e3f6:	mov    ah,0x6b
  40e3f8:	xor    bh,BYTE PTR [eax-0x3]
  40e3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fc:	push   ebp
  40e3fd:	test   eax,0x28af6b4a
  40e402:	adc    al,BYTE PTR [ecx-0x62048962]
  40e408:	xchg   esi,eax
  40e409:	aaa    
  40e40a:	and    bl,BYTE PTR [edi+0x63725113]
  40e410:	test   al,0x81
  40e412:	fcomip st,st(1)
  40e414:	add    esp,DWORD PTR [edi+0x70]
  40e417:	aaa    
  40e418:	fwait
  40e419:	xchg   ecx,eax
  40e41a:	mov    esi,0xe81d6c21
  40e41f:	test   eax,0xe1a20acd
  40e424:	lahf   
  40e425:	in     al,dx
  40e426:	outs   dx,DWORD PTR ds:[esi]
  40e427:	mov    ecx,0x29040564
  40e42c:	mov    edx,0x3be84cfb
  40e431:	push   0xffffffec
  40e433:	pop    ss
  40e434:	and    edx,DWORD PTR [esi-0x52]
  40e437:	leave  
  40e438:	arpl   sp,sp
  40e43a:	out    0xee,al
  40e43c:	mov    bl,0x35
  40e43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43f:	outs   dx,DWORD PTR ds:[esi]
  40e440:	xadd   al,bl
  40e443:	xchg   esi,eax
  40e444:	pop    esi
  40e445:	retf   
  40e446:	test   DWORD PTR [ebp-0x2b],ebp
  40e449:	pop    eax
  40e44a:	add    BYTE PTR [edx-0x241497b1],dh
  40e450:	add    DWORD PTR [ebp-0xe],0x5b058370
  40e457:	inc    ecx
  40e458:	push   0x299f9f86
  40e45d:	xchg   edx,eax
  40e45e:	fwait
  40e45f:	pop    ebx
  40e460:	sub    dh,BYTE PTR [edx+0x0]
  40e463:	retf   
  40e464:	scas   eax,DWORD PTR es:[edi]
  40e465:	xchg   ebx,eax
  40e466:	xchg   edi,eax
  40e467:	cmp    ecx,DWORD PTR [eax+0x1]
  40e46a:	mov    ds:0xbc8bd0bd,al
  40e46f:	xchg   edx,eax
  40e470:	fdivrp st(5),st
  40e472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e473:	xor    eax,0x331203cd
  40e478:	jnp    0x40e4f6
  40e47a:	sbb    DWORD PTR ds:0xf3b407ca,eax
  40e480:	add    al,0x90
  40e482:	in     eax,0x8e
  40e484:	sub    al,0xb9
  40e486:	sti    
  40e487:	lods   eax,DWORD PTR ds:[esi]
  40e488:	pop    eax
  40e489:	sbb    eax,0xab966e2f
  40e48e:	jle    0x40e4da
  40e490:	and    esi,edi
  40e492:	inc    esi
  40e493:	mov    ds:0xa86afc57,eax
  40e498:	xor    al,0x6b
  40e49a:	and    eax,0xa10774f
  40e49f:	fbstp  TBYTE PTR [edx]
  40e4a1:	inc    ebp
  40e4a2:	mov    edx,0xf525ddcc
  40e4a7:	sub    al,0x65
  40e4a9:	stos   BYTE PTR es:[edi],al
  40e4aa:	ror    DWORD PTR [edi-0xed55816],1
  40e4b0:	push   ebx
  40e4b1:	out    dx,al
  40e4b2:	daa    
  40e4b3:	jno    0x40e4a8
  40e4b5:	sahf   
  40e4b6:	addr16 sbb eax,ecx
  40e4b9:	hlt    
  40e4ba:	popa   
  40e4bb:	mov    bh,0x86
  40e4bd:	push   ecx
  40e4be:	xor    DWORD PTR [edx+edi*2-0x3eb73519],edx
  40e4c5:	fwait
  40e4c6:	jo     0x40e484
  40e4c8:	idiv   DWORD PTR [eax]
  40e4ca:	pop    ds
  40e4cb:	lods   eax,DWORD PTR ds:[esi]
  40e4cc:	mov    esi,0xe8539284
  40e4d1:	add    DWORD PTR [edi+0x3bfd47b5],0x69153e49
  40e4db:	adc    ch,dh
  40e4dd:	ss sbb al,0x69
  40e4e0:	das    
  40e4e1:	test   al,0x50
  40e4e3:	fbld   TBYTE PTR [edi-0xe]
  40e4e6:	stos   DWORD PTR es:[edi],eax
  40e4e7:	jp     0x40e55e
  40e4e9:	pop    edx
  40e4eb:	retf   0xb313
  40e4ee:	xor    ebx,edx
  40e4f0:	scas   al,BYTE PTR es:[edi]
  40e4f1:	ja     0x40e47f
  40e4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4f4:	xchg   esp,esp
  40e4f6:	inc    ecx
  40e4f7:	or     bl,BYTE PTR [ebx+0x5c0aa3a9]
  40e4fd:	xor    DWORD PTR ds:0x3be08bf7,ecx
  40e503:	dec    edi
  40e504:	inc    ebx
  40e505:	sbb    DWORD PTR [ebp+0x6e287c4],0xf4cda580
  40e50f:	mov    bl,0xf6
  40e511:	dec    ecx
  40e512:	adc    eax,0x910e3b2a
  40e517:	popa   
  40e518:	sub    ecx,DWORD PTR [ebp-0x381849bb]
  40e51e:	int3   
  40e51f:	enter  0x41c0,0xc7
  40e523:	xor    al,0x45
  40e525:	adc    BYTE PTR [esi-0x10197038],ch
  40e52b:	sbb    edx,DWORD PTR [ebx-0x20]
  40e52e:	out    0x93,eax
  40e530:	std    
  40e531:	enter  0xd8ed,0x96
  40e535:	(bad)  [edx-0x4e0490b6]
  40e53b:	fstp   QWORD PTR [eax+ecx*4-0x48ae94c7]
  40e542:	mov    cl,al
  40e544:	cmp    BYTE PTR ds:0x28fa7e20,dh
  40e54a:	xor    cl,BYTE PTR [esi+0x429330cb]
  40e550:	dec    esp
  40e551:	popa   
  40e552:	sbb    eax,eax
  40e554:	cmp    al,0xb1
  40e556:	add    eax,0xfbfee0f5
  40e55b:	xchg   esi,eax
  40e55c:	int3   
  40e55d:	xchg   ebp,eax
  40e55e:	inc    ebp
  40e55f:	adc    dh,BYTE PTR [edx-0x3b]
  40e562:	pop    esp
  40e563:	mov    esi,0xac13c025
  40e568:	mov    ecx,0x80272b0a
  40e56d:	aam    0x19
  40e56f:	clc    
  40e570:	jp     0x40e59d
  40e572:	cmp    al,0xb6
  40e574:	mov    ah,0x39
  40e576:	cmc    
  40e577:	xor    al,0x46
  40e579:	stos   DWORD PTR es:[edi],eax
  40e57a:	lock pop ebp
  40e57c:	xchg   edi,eax
  40e57d:	push   ebx
  40e57e:	inc    ecx
  40e57f:	cs adc al,0x75
  40e582:	lds    edi,FWORD PTR [ebx+0x656bb1c4]
  40e588:	and    al,0x98
  40e58a:	and    BYTE PTR [eax-0x557b99a3],0x3e
  40e591:	and    BYTE PTR [edi-0x44904c02],cl
  40e597:	rcl    DWORD PTR ds:0x9302757b,0xa5
  40e59e:	or     cl,BYTE PTR [edx-0x2]
  40e5a1:	out    dx,eax
  40e5a2:	xchg   esi,eax
  40e5a3:	xchg   ecx,eax
  40e5a4:	sahf   
  40e5a5:	enter  0x867a,0x5
  40e5a9:	repnz sbb ch,BYTE PTR [edx+edx*8]
  40e5ad:	loopne 0x40e54d
  40e5af:	xor    BYTE PTR [eax+0xa],ch
  40e5b2:	pop    ebx
  40e5b3:	hlt    
  40e5b4:	mov    al,0xea
  40e5b6:	sub    eax,0xef6f8de6
  40e5bb:	scas   al,BYTE PTR es:[edi]
  40e5bc:	add    BYTE PTR [ebx-0x76e37294],dh
  40e5c2:	rcr    BYTE PTR [edi-0x36],0xf8
  40e5c6:	and    DWORD PTR [edi-0xa63cac],0x10
  40e5cd:	mov    edx,DWORD PTR [edx-0x45]
  40e5d0:	mov    bh,0x54
  40e5d2:	in     eax,dx
  40e5d3:	cmp    DWORD PTR [edi+0x1ea589f7],0x20024114
  40e5dd:	fidivr DWORD PTR [ebx]
  40e5df:	iret   
  40e5e0:	dec    ecx
  40e5e1:	xor    ebx,edx
  40e5e3:	fnstenv [eax+0x21]
  40e5e6:	xchg   esp,eax
  40e5e7:	icebp  
  40e5e8:	js     0x40e5c6
  40e5ea:	add    edi,0xd
  40e5ed:	inc    ebx
  40e5ee:	mov    dl,0x7f
  40e5f0:	lds    esp,FWORD PTR [esi-0x44]
  40e5f3:	dec    esi
  40e5f4:	xchg   DWORD PTR [ebx+0x6fe27c0b],esi
  40e5fa:	data16 outs dx,BYTE PTR ds:[esi]
  40e5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5fd:	mov    ebp,esp
  40e5ff:	nop
  40e600:	xchg   ebp,eax
  40e601:	push   ebx
  40e602:	sti    
  40e603:	fs jnp 0x40e5ee
  40e606:	and    BYTE PTR [eax],dl
  40e608:	mov    cl,0x47
  40e60a:	mov    BYTE PTR [edx+0x400c72a7],cl
  40e610:	(bad)  
  40e611:	cs dec edx
  40e613:	ja     0x40e619
  40e615:	adc    al,0x81
  40e617:	cld    
  40e618:	mov    cl,0x43
  40e61a:	xchg   DWORD PTR [edi+0x17be0479],ecx
  40e620:	mov    dh,0x84
  40e622:	(bad)  
  40e623:	idiv   DWORD PTR [ecx+0x7b]
  40e626:	inc    edi
  40e627:	ss mov dh,0xed
  40e62a:	dec    ebx
  40e62b:	rol    DWORD PTR [edx-0x517b07b1],cl
  40e631:	test   BYTE PTR [ebx-0x26],0xa9
  40e635:	pop    ebx
  40e636:	(bad)  ds:0x46f00fe5
  40e63c:	sub    ecx,esi
  40e63e:	jecxz  0x40e6ba
  40e640:	or     edx,eax
  40e642:	fisttp WORD PTR [edi-0x4e]
  40e645:	mov    ch,0xe3
  40e647:	aam    0x80
  40e649:	pop    esi
  40e64a:	sbb    edx,esp
  40e64c:	(bad)  
  40e64d:	xor    dl,BYTE PTR [edx-0x2cb738e]
  40e653:	inc    esp
  40e654:	mov    ebp,0x44573213
  40e659:	add    bl,BYTE PTR [eax-0x33]
  40e65c:	shl    BYTE PTR [edi-0x24],0xc4
  40e660:	jmp    0x3083:0xbb6ad4f2
  40e667:	jp     0x40e612
  40e669:	stos   DWORD PTR es:[edi],eax
  40e66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66b:	aam    0xf8
  40e66d:	sbb    al,0x79
  40e66f:	ficomp WORD PTR [ecx]
  40e671:	inc    edi
  40e672:	and    ch,cl
  40e674:	jo     0x40e6bb
  40e676:	fucomi st,st(2)
  40e678:	fucomip st,st(2)
  40e67a:	out    0x63,al
  40e67c:	loope  0x40e64b
  40e67e:	jne    0x40e694
  40e680:	add    ah,BYTE PTR [ecx-0x7612315f]
  40e686:	mov    ch,0x20
  40e688:	mov    al,ds:0xe00a6333
  40e68d:	in     al,0x5
  40e68f:	sar    BYTE PTR [esi],cl
  40e691:	pop    edi
  40e692:	lods   eax,DWORD PTR ds:[esi]
  40e693:	xor    eax,0xbf7f269e
  40e698:	or     eax,0xc51946d0
  40e69d:	(bad)  
  40e69f:	jb     0x40e720
  40e6a1:	add    BYTE PTR [edi+0x4d],ch
  40e6a4:	push   0xfa908ad0
  40e6a9:	or     BYTE PTR [ecx+eiz*8-0x354e2dc3],0x11
  40e6b1:	enter  0x42d0,0x37
  40e6b5:	xor    DWORD PTR [eax-0x4f],ebx
  40e6b8:	into   
  40e6b9:	mov    esp,0x613b532a
  40e6be:	mov    WORD PTR [esi+0x4d5ede4],gs
  40e6c4:	fdivr  st,st(3)
  40e6c6:	ss and al,0x44
  40e6c9:	sti    
  40e6ca:	and    BYTE PTR [esi],cl
  40e6cc:	xchg   edi,eax
  40e6cd:	out    dx,al
  40e6ce:	fnstcw WORD PTR [eax+0x42]
  40e6d1:	mov    esp,0xdeacf653
  40e6d6:	xchg   ebp,eax
  40e6d7:	mov    ecx,0xcd1f253d
  40e6dc:	aas    
  40e6dd:	fwait
  40e6de:	sub    eax,0x4f118187
  40e6e3:	adc    eax,0x7a91e9e0
  40e6e8:	test   al,0x24
  40e6ea:	adc    dl,dl
  40e6ec:	dec    edx
  40e6ed:	clc    
  40e6ee:	or     BYTE PTR es:0xb0096806,cl
  40e6f5:	mov    bl,0x24
  40e6f7:	xchg   esp,eax
  40e6f8:	xor    edi,edi
  40e6fa:	ins    DWORD PTR es:[edi],dx
  40e6fb:	cmp    eax,0xef52e229
  40e700:	jmp    DWORD PTR [edx]
  40e702:	ins    BYTE PTR es:[edi],dx
  40e703:	(bad)  
  40e704:	pushf  
  40e705:	shr    DWORD PTR ds:0xdcac3211,0x4c
  40e70c:	cld    
  40e70d:	fs mov ch,0x7f
  40e710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e711:	mov    dh,0xcb
  40e713:	ror    BYTE PTR [ecx+0x27d77e2a],0xcb
  40e71a:	test   BYTE PTR [ebp+0x4f],dh
  40e71d:	rcr    DWORD PTR [eax+eax*1+0x72bf1d34],cl
  40e724:	add    DWORD PTR [ebx-0x7ef8d8a2],edx
  40e72a:	jmp    0x40e798
  40e72c:	pop    edx
  40e72d:	adc    eax,0x6d08897b
  40e732:	addr16 in al,0x53
  40e735:	sub    cl,BYTE PTR [ebx]
  40e737:	sub    eax,0xc2b9a233
  40e73c:	mov    bh,0x68
  40e73e:	pop    es
  40e73f:	push   edx
  40e740:	and    eax,0xbafdd5c7
  40e745:	jle    0x40e732
  40e747:	push   ss
  40e748:	sub    eax,edi
  40e74a:	lahf   
  40e74b:	dec    esi
  40e74c:	das    
  40e74d:	mov    eax,cs
  40e74f:	sub    eax,0xf2c1f876
  40e754:	je     0x40e7cb
  40e756:	es fxam 
  40e759:	dec    ecx
  40e75a:	cmp    esi,DWORD PTR [edi+0x10e01ed2]
  40e760:	fcomp  DWORD PTR [ecx+ebp*2-0x6f]
  40e764:	and    BYTE PTR [ebx+ebp*8+0x78],0xc2
  40e769:	mov    ch,0xbf
  40e76b:	rol    DWORD PTR [ecx],0x8c
  40e76e:	inc    esp
  40e76f:	ja     0x40e715
  40e771:	mov    bh,0xf3
  40e773:	mov    bl,0x62
  40e775:	jmp    0xba3e8193
  40e77a:	stc    
  40e77b:	mov    edx,0xdcffc5e
  40e780:	mov    eax,0x14889819
  40e785:	xchg   BYTE PTR [eax],al
  40e787:	ins    BYTE PTR es:[edi],dx
  40e788:	push   ebx
  40e789:	dec    esp
  40e78a:	jne    0x40e7a1
  40e78c:	jnp    0x40e76c
  40e78e:	popa   
  40e78f:	and    eax,0x58b583af
  40e794:	sti    
  40e795:	mov    bl,0xe5
  40e797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e798:	adc    bl,bl
  40e79a:	mov    eax,ecx
  40e79c:	pop    ebp
  40e79d:	jmp    0x9a57554f
  40e7a2:	push   edx
  40e7a3:	jae    0x561a77ac
  40e7a9:	push   eax
  40e7aa:	sbb    al,0x1b
  40e7ac:	mov    esp,0xb9f972eb
  40e7b1:	mov    ebp,0x48f9ab59
  40e7b6:	lahf   
  40e7b7:	stc    
  40e7b8:	out    dx,eax
  40e7b9:	inc    ecx
  40e7ba:	xchg   esp,eax
  40e7bb:	cld    
  40e7bc:	out    0x15,eax
  40e7be:	push   cs
  40e7bf:	aaa    
  40e7c0:	(bad)  
  40e7c1:	sub    ebx,0x37a77331
  40e7c7:	xchg   ebp,eax
  40e7c8:	xchg   BYTE PTR [ebp-0x7],cl
  40e7cb:	addr16 test al,0xb7
  40e7ce:	sub    al,0x65
  40e7d0:	cmp    eax,0x1ed6f37f
  40e7d5:	into   
  40e7d6:	jne    0x40e7c3
  40e7d8:	ret    
  40e7d9:	retf   0xa5dd
  40e7dc:	inc    ecx
  40e7dd:	mov    eax,0xa2ae5c81
  40e7e2:	add    ebx,DWORD PTR [ebx+0x3104c44d]
  40e7e8:	xchg   esp,eax
  40e7e9:	sub    eax,0xcbe9da99
  40e7ee:	frstor [ebp-0x4f]
  40e7f1:	imul   edi,DWORD PTR [esi-0x2f2c399a],0x5936d817
  40e7fb:	xchg   edi,eax
  40e7fc:	sub    bl,BYTE PTR [ebp+0x49d2e703]
  40e802:	or     BYTE PTR [ecx+0x52],0x55
  40e806:	or     BYTE PTR [ebx+0x7e],ah
  40e809:	dec    ecx
  40e80a:	(bad)  
  40e80b:	mov    ah,0xdf
  40e80d:	jg     0x40e7df
  40e80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e810:	aas    
  40e811:	sub    esi,DWORD PTR [ecx]
  40e813:	and    al,0xf2
  40e815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e816:	hlt    
  40e817:	mov    ebx,0x2f846b10
  40e81c:	cld    
  40e81d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e81e:	daa    
  40e81f:	mov    esp,0x151107df
  40e824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e825:	arpl   WORD PTR [ebx+0x60],sp
  40e828:	retf   
  40e829:	daa    
  40e82a:	ja     0x40e872
  40e82c:	mov    ds:0x83061f1b,al
  40e831:	dec    esp
  40e832:	jge    0x40e7f9
  40e834:	inc    esp
  40e835:	jmp    0x6387:0x90d0d30c
  40e83c:	pop    edx
  40e83d:	fcomp  DWORD PTR [edx]
  40e83f:	xor    DWORD PTR [esi+0x50],ebx
  40e842:	test   al,0xf4
  40e844:	adc    ebx,DWORD PTR [ebx]
  40e846:	cwde   
  40e847:	fstp   TBYTE PTR [ebx+0x35]
  40e84a:	aam    0x55
  40e84c:	push   cs
  40e84d:	mov    ds:0x312121e,al
  40e852:	push   edx
  40e853:	push   edx
  40e854:	dec    edx
  40e855:	fsubr  st,st(5)
  40e857:	mov    BYTE PTR [esi],cl
  40e859:	bound  ebx,QWORD PTR [esi-0x4f]
  40e85c:	retf   
  40e85d:	jge    0x40e860
  40e85f:	pop    ds
  40e860:	push   eax
  40e861:	nop
  40e862:	lods   eax,DWORD PTR ds:[esi]
  40e863:	(bad)  
  40e864:	mov    ah,0x88
  40e866:	fcmovnu st,st(4)
  40e868:	push   ebx
  40e869:	cmp    DWORD PTR [edx-0x358d199d],ecx
  40e86f:	outs   dx,DWORD PTR ds:[esi]
  40e870:	and    ch,bh
  40e872:	add    BYTE PTR [ebx-0x2702f8dc],ch
  40e878:	pushf  
  40e879:	mov    al,ds:0x76314a4f
  40e87e:	or     eax,0x8f98765
  40e883:	xchg   BYTE PTR ds:0xec40d739,bl
  40e889:	mov    al,0x3e
  40e88b:	pop    esi
  40e88c:	or     DWORD PTR [esi-0x7c],esp
  40e88f:	pop    DWORD PTR [esi-0x557845df]
  40e895:	sbb    eax,0x4dd729a4
  40e89a:	jno    0x40e884
  40e89c:	inc    edi
  40e89d:	mov    ebp,0xdc41578c
  40e8a2:	popf   
  40e8a3:	std    
  40e8a4:	call   0x13c18093
  40e8a9:	add    esp,DWORD PTR [esi]
  40e8ab:	push   esp
  40e8ac:	dec    eax
  40e8ad:	lds    eax,FWORD PTR fs:[ebp+0x47e1e29b]
  40e8b4:	xchg   esi,eax
  40e8b5:	and    eax,0xaa39b8f8
  40e8ba:	xchg   edx,eax
  40e8bb:	in     al,dx
  40e8bc:	pop    ebx
  40e8bd:	push   esp
  40e8be:	xor    eax,0xf94b7904
  40e8c3:	fisub  DWORD PTR [edx+0x15]
  40e8c6:	lea    ebx,[ebp-0x6]
  40e8c9:	in     eax,dx
  40e8ca:	mov    dh,0x78
  40e8cc:	or     al,0x54
  40e8ce:	fsub   st,st(3)
  40e8d0:	(bad)  
  40e8d1:	repz test al,0x5e
  40e8d4:	xor    al,0xcc
  40e8d6:	arpl   WORD PTR [edi-0x2b],ax
  40e8d9:	retf   
  40e8da:	lahf   
  40e8db:	aaa    
  40e8dc:	out    dx,al
  40e8dd:	nop
  40e8de:	mov    ecx,0x178b920b
  40e8e3:	sbb    eax,0x35ce799f
  40e8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e9:	mov    dh,dl
  40e8eb:	pop    es
  40e8ec:	push   ecx
  40e8ed:	mov    bl,0x74
  40e8ef:	lods   eax,DWORD PTR ds:[esi]
  40e8f0:	mov    BYTE PTR [esi-0x5e],cl
  40e8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f4:	inc    ebp
  40e8f5:	out    0xa4,eax
  40e8f7:	inc    eax
  40e8f8:	pmulhw mm1,QWORD PTR [edi+esi*8-0x4b24210d]
  40e900:	adc    al,0x20
  40e902:	pop    edi
  40e903:	scas   eax,DWORD PTR es:[edi]
  40e904:	add    BYTE PTR [edx-0x24a7919d],0x82
  40e90b:	push   ss
  40e90c:	or     DWORD PTR [esi+0x5dc7de80],0x9f0becb5
  40e916:	out    0xaf,eax
  40e918:	std    
  40e919:	and    al,0x6a
  40e91b:	int    0x51
  40e91d:	call   0x7db04db4
  40e922:	ss pop ss
  40e924:	mov    dh,BYTE PTR [esi]
  40e926:	jl     0x40e8f1
  40e928:	cmp    BYTE PTR [ebp-0x7ede7764],dl
  40e92e:	add    al,0x81
  40e930:	jns    0x40e950
  40e932:	mov    esp,DWORD PTR [eax+0x1113eec3]
  40e938:	mov    dh,0xef
  40e93a:	sub    BYTE PTR [ebp-0x6c],0x3a
  40e93e:	fwait
  40e93f:	sahf   
  40e940:	add    DWORD PTR [ebx+edi*2],esi
  40e943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e944:	rcl    BYTE PTR [ecx+0x43c34270],0x80
  40e94b:	ins    BYTE PTR es:[edi],dx
  40e94c:	mov    esp,DWORD PTR [eax-0x2793956f]
  40e952:	imul   eax,DWORD PTR [ebx-0x29],0x65
  40e956:	inc    eax
  40e957:	jo     0x40e9b3
  40e959:	scas   eax,DWORD PTR es:[edi]
  40e95a:	mov    cl,0xc5
  40e95c:	out    0xf6,al
  40e95e:	add    eax,0xde72a7e
  40e963:	push   cs
  40e964:	pop    ebx
  40e965:	ja     0x40e9c1
  40e967:	sub    esp,DWORD PTR [ebx]
  40e969:	cmp    eax,0xad9165
  40e96e:	pop    edi
  40e970:	mov    bh,0x12
  40e972:	sbb    eax,0x246591fe
  40e977:	imul   esi,esp,0xfffffff7
  40e97a:	add    edx,DWORD PTR [ebp-0x46d545d2]
  40e980:	push   edi
  40e981:	loope  0x40e929
  40e983:	xchg   edx,eax
  40e984:	mov    eax,0x4346bb94
  40e989:	mov    ah,0x87
  40e98b:	dec    eax
  40e98c:	imul   esi,ecx,0xda487f0f
  40e992:	xor    eax,0x755b73d6
  40e997:	mov    ds:0x3f83533e,eax
  40e99c:	mov    esp,DWORD PTR [ebp+0x78fbd811]
  40e9a2:	daa    
  40e9a3:	mov    cl,0x93
  40e9a5:	adc    eax,0x1e860a80
  40e9aa:	fld    st(6)
  40e9ac:	hlt    
  40e9ad:	cs pop esp
  40e9af:	sub    ch,BYTE PTR [ebx]
  40e9b1:	mov    DWORD PTR [esi],ecx
  40e9b3:	hlt    
  40e9b4:	call   0xd904:0xc396b96b
  40e9bb:	stos   DWORD PTR es:[edi],eax
  40e9bc:	mov    ch,BYTE PTR [edi-0x3106ce3]
  40e9c2:	aam    0xaa
  40e9c4:	and    eax,0xc1c7f72c
  40e9c9:	add    DWORD PTR [esi],ecx
  40e9cb:	mov    edi,DWORD PTR [ebp+0x2d]
  40e9ce:	xor    eax,DWORD PTR [edi+0x5eabf7b6]
  40e9d4:	call   0x7cb4:0x8340bcf6
  40e9db:	addr16 jp 0x40e9be
  40e9de:	ret    
  40e9df:	dec    ebp
  40e9e0:	std    
  40e9e1:	stos   BYTE PTR es:[edi],al
  40e9e2:	add    eax,0xd534de3d
  40e9e7:	ret    
  40e9e8:	push   es
  40e9e9:	jb     0x40ea3a
  40e9eb:	mov    cl,0x54
  40e9ed:	mov    dh,0xd3
  40e9ef:	sbb    ch,BYTE PTR [edi]
  40e9f1:	cld    
  40e9f2:	add    esp,DWORD PTR [edi-0x5c8578eb]
  40e9f8:	into   
  40e9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9fa:	pop    ecx
  40e9fb:	repnz int 0xb3
  40e9fe:	retf   
  40e9ff:	sbb    esp,DWORD PTR [eax+0x4906e0ec]
  40ea05:	mov    ebp,0xec17d74f
  40ea0a:	enter  0x90ff,0xa3
  40ea0e:	dec    ecx
  40ea0f:	repnz cld 
  40ea11:	cwde   
  40ea12:	(bad)  
  40ea13:	call   0xb7003c5f
  40ea18:	jmp    0x2706:0x62e44104
  40ea1f:	cmp    BYTE PTR [edi-0x1b208ecc],bl
  40ea25:	jae    0x40ea4b
  40ea27:	les    esi,FWORD PTR [eax+edi*1+0x250578dc]
  40ea2e:	add    esi,DWORD PTR [esi-0x1b]
  40ea31:	and    eax,0x7823e4ad
  40ea36:	push   0x5e
  40ea38:	test   bh,ah
  40ea3a:	mov    bh,0xc
  40ea3c:	sbb    cl,bl
  40ea3e:	push   ebp
  40ea3f:	or     BYTE PTR [ecx+0x1d81b6af],bh
  40ea45:	(bad)  
  40ea46:	jmp    0x18b1:0xe1d7e6b7
  40ea4d:	sub    al,0xb4
  40ea4f:	test   al,0x6c
  40ea51:	pop    esp
  40ea52:	or     al,0x6e
  40ea54:	cmc    
  40ea55:	pop    edx
  40ea56:	push   edi
  40ea57:	pop    esp
  40ea58:	bound  esp,QWORD PTR [edx]
  40ea5a:	dec    ebp
  40ea5b:	jecxz  0x40ea66
  40ea5d:	(bad)  
  40ea5e:	sub    BYTE PTR [edi-0x45],0xd1
  40ea62:	out    0xb4,al
  40ea64:	stos   DWORD PTR es:[edi],eax
  40ea65:	pop    eax
  40ea66:	in     eax,dx
  40ea67:	or     bh,BYTE PTR [ecx+0x5b]
  40ea6a:	sub    al,0xeb
  40ea6c:	mov    dh,0xdd
  40ea6e:	loopne 0x40ea35
  40ea70:	pop    edi
  40ea71:	push   esi
  40ea72:	add    dl,BYTE PTR [ecx]
  40ea74:	jmp    0x40ead7
  40ea76:	js     0x40eac5
  40ea78:	leave  
  40ea79:	dec    edx
  40ea7a:	and    eax,0xb67d18da
  40ea7f:	push   ss
  40ea80:	jg     0x40ea6e
  40ea82:	lods   al,BYTE PTR ds:[esi]
  40ea83:	sbb    esp,ebx
  40ea85:	push   ss
  40ea86:	bound  ecx,QWORD PTR [eax-0x750219b5]
  40ea8c:	cmp    BYTE PTR [ebx-0x52],0x4f
  40ea90:	cmp    al,bl
  40ea92:	in     eax,0x94
  40ea94:	add    BYTE PTR [ebx],al
  40ea96:	xchg   BYTE PTR [esp+edx*4],ah
  40ea99:	(bad)  
  40ea9b:	sahf   
  40ea9c:	mov    fs,edi
  40ea9e:	sub    edx,DWORD PTR [ecx+0x6]
  40eaa1:	sahf   
  40eaa2:	mov    BYTE PTR [edx-0x49d103a0],dl
  40eaa8:	fld    QWORD PTR [edx+0x455e4432]
  40eaae:	xchg   ecx,eax
  40eaaf:	repz mov eax,ds:0x23be79bd
  40eab5:	dec    ebp
  40eab6:	leave  
  40eab7:	push   esi
  40eab8:	retf   0xf38d
  40eabb:	adc    al,0x5f
  40eabd:	stos   BYTE PTR es:[edi],al
  40eabe:	dec    esp
  40eabf:	fld    TBYTE PTR [ebp+0x3369668a]
  40eac5:	push   es
  40eac6:	into   
  40eac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eac8:	fild   WORD PTR [eax-0x5b]
  40eacb:	sbb    al,0xc0
  40eacd:	fst    DWORD PTR [ebx+0x6f]
  40ead0:	push   cs
  40ead1:	xchg   BYTE PTR [esi],al
  40ead3:	enter  0xffa6,0xf4
  40ead7:	loop   0x40eac6
  40ead9:	dec    ebp
  40eada:	sahf   
  40eadb:	mov    edx,DWORD PTR [edi+0x739b52ae]
  40eae1:	ss sub al,0xb7
  40eae4:	scas   eax,DWORD PTR es:[edi]
  40eae5:	scas   eax,DWORD PTR es:[edi]
  40eae6:	cmp    ebp,edx
  40eae8:	bound  ebx,QWORD PTR [edx+eax*1]
  40eaeb:	je     0x40eaf3
  40eaed:	cmp    al,0x2a
  40eaef:	sbb    BYTE PTR [ebx+0x76e29672],0x30
  40eaf6:	sbb    eax,0xe88d1caf
  40eafb:	stos   DWORD PTR es:[edi],eax
  40eafc:	xor    DWORD PTR [edi+ebx*8-0x6e],edx
  40eb00:	mov    ecx,0xc748345
  40eb05:	mov    eax,ds:0x5859cdcb
  40eb0a:	jo     0x40ea9b
  40eb0c:	callw  0xebd0
  40eb10:	push   ebx
  40eb11:	or     ah,BYTE PTR [ecx+eax*1]
  40eb14:	jl     0x40eb31
  40eb16:	xchg   esi,eax
  40eb17:	pop    ecx
  40eb18:	rcl    BYTE PTR [edx-0x13],0x53
  40eb1c:	pop    ebx
  40eb1d:	jmp    0x40eb60
  40eb1f:	inc    eax
  40eb20:	jmp    0x3242ff1
  40eb25:	add    al,0x31
  40eb27:	push   cs
  40eb28:	xlat   BYTE PTR ds:[ebx]
  40eb29:	ja     0x40eb75
  40eb2b:	stos   DWORD PTR es:[edi],eax
  40eb2c:	mov    ebp,0xc17c74a3
  40eb31:	fidivr WORD PTR [edi]
  40eb33:	shl    BYTE PTR [ecx],1
  40eb35:	and    eax,0xb560e914
  40eb3a:	call   0x791b8d19
  40eb3f:	inc    ecx
  40eb40:	mov    cl,BYTE PTR [ebp-0x13f3b276]
  40eb46:	je     0x40eb5c
  40eb48:	sub    bl,BYTE PTR [eax+0x293763a8]
  40eb4e:	or     DWORD PTR [eax+0x58c692dd],ecx
  40eb54:	dec    eax
  40eb55:	enter  0x5bcf,0x7a
  40eb59:	pop    es
  40eb5a:	jle    0x40eb98
  40eb5c:	retf   0xa48f
  40eb5f:	std    
  40eb60:	pushf  
  40eb61:	add    ah,BYTE PTR [eax+0x4]
  40eb64:	mov    al,ds:0x4b7e7e31
  40eb69:	jmp    0xb2aebfbe
  40eb6e:	jp     0x40ebd5
  40eb70:	(bad)  
  40eb71:	faddp  st(6),st
  40eb73:	xchg   ebp,ecx
  40eb75:	into   
  40eb76:	pop    es
  40eb77:	inc    ecx
  40eb78:	inc    esi
  40eb79:	jo     0x40ebb1
  40eb7b:	int3   
  40eb7c:	cdq    
  40eb7d:	les    edi,FWORD PTR [eax-0x39]
  40eb80:	std    
  40eb81:	adc    ch,BYTE PTR [esi+eiz*1]
  40eb84:	inc    edi
  40eb85:	jg     0x40ebca
  40eb87:	cmp    ecx,edi
  40eb89:	ins    DWORD PTR es:[edi],dx
  40eb8a:	out    0xba,eax
  40eb8c:	inc    edx
  40eb8d:	jnp    0x40ebc9
  40eb8f:	icebp  
  40eb90:	outs   dx,DWORD PTR ds:[esi]
  40eb91:	out    dx,al
  40eb92:	jge    0x40ebd5
  40eb94:	ins    BYTE PTR es:[edi],dx
  40eb95:	lods   eax,DWORD PTR ds:[esi]
  40eb96:	ja     0x40ebd2
  40eb98:	mov    al,ds:0x1eebacb6
  40eb9d:	jnp    0x40eb54
  40eb9f:	test   BYTE PTR [esi+0x1e0145d8],cl
  40eba5:	sbb    eax,0xed55a867
  40ebaa:	xchg   ebp,eax
  40ebab:	pop    ecx
  40ebac:	test   dh,cl
  40ebae:	nop
  40ebaf:	cmp    al,0x21
  40ebb1:	and    dh,BYTE PTR [eax+0xb]
  40ebb4:	dec    ebp
  40ebb5:	mov    cl,0x32
  40ebb7:	pusha  
  40ebb8:	mov    dh,0x8f
  40ebba:	stos   BYTE PTR es:[edi],al
  40ebbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbc:	iret   
  40ebbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbe:	jae    0x40eb87
  40ebc0:	pop    ds
  40ebc1:	pop    ebx
  40ebc2:	data16 sbb al,BYTE PTR [edi-0x5]
  40ebc6:	test   edx,0xf1294e04
  40ebcc:	mov    esp,0xdaa503c7
  40ebd1:	jne    0x40ec25
  40ebd3:	lods   eax,DWORD PTR ds:[esi]
  40ebd4:	push   0x655f43e6
  40ebd9:	add    eax,0x5fbbbe11
  40ebde:	sub    dl,ch
  40ebe0:	mov    ds:0xbc710077,eax
  40ebe5:	lds    ecx,FWORD PTR [edi]
  40ebe7:	push   ds
  40ebe8:	xchg   ebp,eax
  40ebe9:	sbb    al,0x9a
  40ebeb:	mov    ebx,0x3cf45f75
  40ebf0:	mov    cl,BYTE PTR ds:0x9e5fea4c
  40ebf6:	fist   WORD PTR [ebp-0x37]
  40ebf9:	in     eax,0xe2
  40ebfb:	into   
  40ebfc:	sub    BYTE PTR [edx],ch
  40ebfe:	adc    eax,0x3dab0291
  40ec03:	mov    eax,ds:0xbf8463a0
  40ec08:	jp     0x40ec56
  40ec0a:	add    eax,0xa1f3106a
  40ec0f:	xor    al,0x5a
  40ec11:	xor    al,0xae
  40ec13:	rcr    DWORD PTR [eax],cl
  40ec15:	fbld   TBYTE PTR cs:[eax+0xf]
  40ec19:	xor    eax,0xf1431faa
  40ec1e:	clc    
  40ec1f:	inc    esp
  40ec20:	cmp    eax,0xf2960019
  40ec25:	mov    esi,0x36f8c087
  40ec2a:	add    eax,0xcf1b6e78
  40ec2f:	mov    edi,0x57624f26
  40ec34:	es js  0x40ec2c
  40ec37:	or     DWORD PTR [eax-0x40],edx
  40ec3a:	mul    DWORD PTR [edi+eax*8+0x45475dbc]
  40ec41:	pop    ecx
  40ec42:	mov    dl,0x5a
  40ec44:	dec    esp
  40ec45:	aam    0x55
  40ec47:	fcom   st(5)
  40ec49:	popa   
  40ec4a:	jmp    0xe430426
  40ec4f:	adc    ch,BYTE PTR [edx+0x7be82af3]
  40ec55:	hlt    
  40ec56:	pop    esi
  40ec57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec58:	scas   eax,DWORD PTR es:[edi]
  40ec59:	adc    DWORD PTR [eax],eax
  40ec5b:	(bad)  
  40ec5c:	fisttp WORD PTR [ebx-0x67]
  40ec5f:	popa   
  40ec60:	shr    BYTE PTR ds:0xee425ec6,1
  40ec66:	sahf   
  40ec67:	call   0x7c1294ab
  40ec6c:	ds gs inc esp
  40ec6f:	mov    ds:0x945d1599,al
  40ec74:	and    DWORD PTR [edi],eax
  40ec76:	jne    0x40ec72
  40ec78:	xchg   ebp,eax
  40ec79:	inc    edx
  40ec7a:	outs   dx,DWORD PTR ds:[esi]
  40ec7b:	stos   BYTE PTR es:[edi],al
  40ec7c:	add    esp,DWORD PTR [eax+eax*2]
  40ec7f:	xchg   edi,eax
  40ec80:	aam    0x7a
  40ec82:	jmp    0x8e27d5df
  40ec87:	pushf  
  40ec88:	sbb    al,0x6d
  40ec8a:	lahf   
  40ec8b:	mov    ebp,0x7f20e864
  40ec90:	or     ah,BYTE PTR [ebp+0x38df5605]
  40ec96:	jno    0x40ecd1
  40ec98:	cwde   
  40ec99:	mov    es,WORD PTR [eax+edi*1+0x71]
  40ec9d:	adc    al,0x34
  40ec9f:	test   ecx,0x24eca8ec
  40eca5:	pop    ss
  40eca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca7:	rcr    BYTE PTR [ebx],cl
  40eca9:	xor    bl,cl
  40ecab:	fild   WORD PTR [esp+esi*2]
  40ecae:	lods   al,BYTE PTR ds:[esi]
  40ecaf:	aaa    
  40ecb0:	push   edx
  40ecb1:	pop    esi
  40ecb2:	out    0x5b,eax
  40ecb4:	sub    BYTE PTR [ebp-0x34],0x86
  40ecb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecb9:	jne    0x40ecf9
  40ecbb:	push   edi
  40ecbc:	push   esi
  40ecbd:	or     al,0x94
  40ecbf:	mov    edi,ss
  40ecc1:	retf   0xab26
  40ecc4:	retf   
  40ecc5:	call   0x179c:0xc41f0f6e
  40eccc:	dec    eax
  40eccd:	adc    al,0x3c
  40eccf:	mov    bl,0xb7
  40ecd1:	hlt    
  40ecd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecd3:	rol    BYTE PTR [ebp+0x76],cl
  40ecd6:	cmp    eax,DWORD PTR [ebx+0x343dcd52]
  40ecdc:	mov    ebx,0xd6afe459
  40ece1:	mov    esp,0xb3d11b9
  40ece6:	sub    BYTE PTR [ebx],bh
  40ece8:	cmp    DWORD PTR [eax-0x45d17bdb],ebp
  40ecee:	mov    bl,0xa8
  40ecf0:	xor    al,0x2e
  40ecf2:	icebp  
  40ecf3:	and    dh,bh
  40ecf5:	inc    ecx
  40ecf6:	dec    ebx
  40ecf7:	jge    0x40ecff
  40ecf9:	mov    DWORD PTR [ebp+0x29ad934],ebp
  40ecff:	xchg   bx,ax
  40ed01:	fimul  DWORD PTR ds:0xbcb1a087
  40ed07:	(bad)  
  40ed08:	cmc    
  40ed09:	pop    ecx
  40ed0a:	adc    al,0x23
  40ed0c:	or     DWORD PTR gs:[eax*2-0x7f2b08ca],eax
  40ed14:	jo     0x40ecc8
  40ed16:	out    0x6e,al
  40ed18:	(bad)  
  40ed19:	dec    ebp
  40ed1b:	cmp    DWORD PTR [edi+0x34618439],eax
  40ed21:	adc    eax,0x31c179a
  40ed26:	in     al,dx
  40ed27:	cmp    esi,DWORD PTR [ebx-0x61d5fe5e]
  40ed2d:	aaa    
  40ed2e:	sbb    ebp,edx
  40ed30:	inc    edx
  40ed31:	pop    eax
  40ed32:	imul   ebx,DWORD PTR [esi-0x76],0xffffff87
  40ed36:	mov    esi,0xaa596f8e
  40ed3b:	js     0x40ed22
  40ed3d:	jmp    DWORD PTR [edi]
  40ed3f:	rol    DWORD PTR ds:0x8d5a9d60,cl
  40ed45:	scas   eax,DWORD PTR es:[edi]
  40ed46:	and    al,0xec
  40ed48:	movsx  edx,BYTE PTR [ecx]
  40ed4b:	sub    cl,BYTE PTR cs:[edi+0x2e]
  40ed4f:	push   esp
  40ed50:	mov    bh,0x42
  40ed52:	cmp    esp,ebx
  40ed54:	arpl   di,sp
  40ed56:	(bad)  [eax]
  40ed58:	shr    BYTE PTR [eax],0x27
  40ed5b:	mov    ebp,0xcc554d99
  40ed60:	sbb    ecx,ebp
  40ed62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed63:	(bad)
  40ed66:	mov    ah,0xaf
  40ed68:	mov    al,ds:0xa84b6d87
  40ed6d:	xor    dh,BYTE PTR [esi+edx*4-0x21]
  40ed71:	ror    BYTE PTR [ebx+0x6f04a143],1
  40ed77:	outs   dx,DWORD PTR ds:[esi]
  40ed78:	pop    edi
  40ed79:	test   DWORD PTR [edi+0x4f],ebx
  40ed7c:	jae    0x40edfd
  40ed7e:	enter  0x69a0,0x6
  40ed82:	out    0x81,eax
  40ed84:	inc    ebx
  40ed85:	mov    al,0x50
  40ed87:	mov    esi,0xe9ba4ea1
  40ed8c:	sub    eax,ebp
  40ed8e:	sub    al,0xa
  40ed90:	cmp    BYTE PTR [ecx-0x5c5ec579],cl
  40ed96:	pop    ebp
  40ed97:	repnz inc eax
  40ed99:	dec    edx
  40ed9a:	cmp    al,0x95
  40ed9c:	stos   BYTE PTR es:[edi],al
  40ed9d:	arpl   WORD PTR [ecx+0x69],si
  40eda0:	sub    DWORD PTR [ebp+0x42],esp
  40eda3:	fwait
  40eda4:	sahf   
  40eda5:	popa   
  40eda6:	aam    0x45
  40eda8:	jge    0x40edc2
  40edaa:	jmp    0x906afcf4
  40edaf:	out    dx,eax
  40edb0:	mov    ecx,0x1035ea6d
  40edb5:	jae    0x40ee11
  40edb7:	scas   eax,DWORD PTR es:[edi]
  40edb8:	cmp    BYTE PTR [esi],al
  40edba:	adc    DWORD PTR [di],ecx
  40edbd:	pop    ebp
  40edbe:	xor    DWORD PTR [eax+0x4e],eax
  40edc1:	outs   dx,BYTE PTR ds:[esi]
  40edc2:	mov    dl,0xbc
  40edc4:	ret    0xacd2
  40edc7:	jmp    0x8d310872
  40edcc:	xchg   ecx,eax
  40edcd:	loopne 0x40edeb
  40edcf:	mov    ds:0xba9f589b,al
  40edd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd5:	repnz rol ecx,cl
  40edd8:	inc    ebp
  40edd9:	sub    BYTE PTR ds:0xac2d7c21,bh
  40eddf:	push   ds
  40ede0:	inc    ebp
  40ede1:	stc    
  40ede2:	cmp    eax,0xd657d47e
  40ede7:	mov    ch,0x9d
  40ede9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edea:	dec    ebp
  40edeb:	push   eax
  40edec:	sahf   
  40eded:	jbe    0x40ee58
  40edef:	mov    bh,0x50
  40edf1:	jg     0x40ee27
  40edf3:	pop    eax
  40edf4:	add    al,0x21
  40edf6:	add    cl,BYTE PTR [ebx+0x40]
  40edf9:	push   0x7
  40edfb:	(bad)  
  40edfc:	pop    ss
  40edfd:	repz ficom DWORD PTR [edx-0x409a42b8]
  40ee04:	aas    
  40ee05:	aaa    
  40ee06:	pop    eax
  40ee07:	cld    
  40ee08:	loope  0x40ee34
  40ee0a:	inc    ebp
  40ee0b:	iret   
  40ee0c:	fdiv   st(1),st
  40ee0e:	cmp    edi,DWORD PTR [edi-0xe]
  40ee11:	push   ebp
  40ee12:	fstp   QWORD PTR [ebx-0xe]
  40ee15:	test   eax,0x51cb1683
  40ee1a:	mov    ?,ecx
  40ee1c:	xchg   ebp,eax
  40ee1d:	xchg   esi,eax
  40ee1e:	imul   edi,DWORD PTR ds:0x31b947b,0xffffffed
  40ee25:	enter  0x13c5,0xa1
  40ee29:	dec    eax
  40ee2a:	sahf   
  40ee2b:	out    0xca,al
  40ee2d:	mov    ch,0x5c
  40ee2f:	dec    ecx
  40ee30:	mov    dl,al
  40ee32:	xor    ch,BYTE PTR [ebx+0x2a]
  40ee35:	test   al,0x45
  40ee37:	les    ebx,FWORD PTR [edx-0x78]
  40ee3a:	mov    eax,ds:0xbfd776a1
  40ee3f:	lods   al,BYTE PTR ds:[esi]
  40ee40:	call   0x2b90:0xc3b04467
  40ee47:	jns    0x40eec5
  40ee49:	in     eax,dx
  40ee4a:	rcl    DWORD PTR [ebx+eax*1+0x644deed1],0xfd
  40ee52:	stos   DWORD PTR es:[edi],eax
  40ee53:	jecxz  0x40ee41
  40ee55:	push   cs
  40ee56:	test   BYTE PTR [ebp+0x47],al
  40ee59:	arpl   WORD PTR [esi+0x53588ce9],cx
  40ee5f:	(bad)
  40ee62:	and    eax,0x4bfe56de
  40ee67:	push   ecx
  40ee68:	pop    edi
  40ee69:	adc    dl,BYTE PTR [ebx]
  40ee6b:	mov    ds,WORD PTR [eax-0x4a8dfe48]
  40ee71:	fs push esi
  40ee73:	pop    edx
  40ee74:	jp     0x40ee5e
  40ee76:	mov    bl,0x34
  40ee78:	jns    0x40ee40
  40ee7a:	sub    bh,bh
  40ee7c:	xchg   edi,eax
  40ee7d:	iret   
  40ee7e:	leave  
  40ee7f:	jl     0x40ee99
  40ee81:	pushf  
  40ee82:	pop    ss
  40ee83:	fwait
  40ee84:	push   eax
  40ee85:	scas   eax,DWORD PTR es:[edi]
  40ee86:	inc    ecx
  40ee87:	ret    0xc194
  40ee8a:	mov    BYTE PTR [edi-0x79832bdf],ch
  40ee90:	pop    ebp
  40ee91:	je     0x40ee66
  40ee93:	push   0xffffffd2
  40ee95:	into   
  40ee96:	retf   0xe0b9
  40ee99:	xchg   esp,eax
  40ee9a:	aam    0xb
  40ee9c:	sub    al,0x1e
  40ee9e:	adc    edi,DWORD PTR [esp+eax*2-0x406e9fdd]
  40eea5:	mov    esp,0x88b4376a
  40eeaa:	(bad)  
  40eeab:	nop
  40eeac:	mov    gs,ebp
  40eeae:	pop    edi
  40eeaf:	sahf   
  40eeb0:	in     ax,dx
  40eeb2:	sub    BYTE PTR [edi+0x5158b01c],dl
  40eeb8:	inc    esi
  40eeb9:	cli    
  40eeba:	cld    
  40eebb:	pop    esp
  40eebc:	(bad)
  40eebf:	xchg   BYTE PTR [ebx-0x72dcead7],ah
  40eec5:	sbb    al,0x8b
  40eec7:	mov    ds:0xd6ec1963,al
  40eecc:	div    BYTE PTR [ecx-0x1c6d6f2c]
  40eed2:	mov    al,0x1
  40eed4:	jns    0x40eea4
  40eed6:	dec    esi
  40eed7:	icebp  
  40eed8:	mov    ebp,0xb37fd856
  40eedd:	mov    bh,0x82
  40eedf:	lahf   
  40eee0:	addr16 jae 0x40ee88
  40eee3:	jbe    0x40ef28
  40eee5:	add    eax,0x529a3542
  40eeea:	xchg   esi,eax
  40eeeb:	mov    ds:0xadd42bb4,eax
  40eef0:	mov    ds:0x5c81e0f3,eax
  40eef5:	cmc    
  40eef6:	scas   al,BYTE PTR es:[edi]
  40eef7:	dec    esp
  40eef8:	mov    bh,0x5c
  40eefa:	fscale 
  40eefc:	and    eax,DWORD PTR [ebp+0x1]
  40eeff:	add    ecx,DWORD PTR [edx+0x10ca9c9]
  40ef05:	add    esp,esp
  40ef07:	std    
  40ef08:	cmp    al,0xa4
  40ef0a:	aam    0x96
  40ef0c:	jnp    0x40ef5e
  40ef0e:	lahf   
  40ef0f:	xchg   edi,eax
  40ef10:	pushf  
  40ef11:	fbld   TBYTE PTR [edi-0x5c]
  40ef14:	out    dx,al
  40ef15:	imul   esp,DWORD PTR [ecx+0x63],0x37
  40ef19:	sub    eax,0xbe598598
  40ef1e:	xor    eax,0xf5a8a578
  40ef23:	add    al,0xef
  40ef25:	(bad)  
  40ef26:	scas   eax,DWORD PTR es:[edi]
  40ef27:	imul   DWORD PTR [eax+0x7fbc68da]
  40ef2d:	mov    ebx,0x365bb20d
  40ef32:	mov    esp,0x3e10a3e4
  40ef37:	fcmovu st,st(4)
  40ef39:	adc    edi,esi
  40ef3b:	push   0x48
  40ef3d:	pop    ds
  40ef3e:	popf   
  40ef3f:	loope  0x40ef53
  40ef41:	pop    ebx
  40ef42:	xchg   ebp,eax
  40ef43:	scas   al,BYTE PTR es:[edi]
  40ef44:	add    al,0x4b
  40ef46:	leave  
  40ef47:	cmp    ebp,ebp
  40ef49:	iret   
  40ef4a:	push   esi
  40ef4b:	and    bl,BYTE PTR [ecx-0x431c58be]
  40ef51:	xchg   esp,eax
  40ef52:	jecxz  0x40ef62
  40ef54:	call   FWORD PTR [edx]
  40ef56:	lods   eax,DWORD PTR ds:[esi]
  40ef57:	or     DWORD PTR [edi+0x40],esi
  40ef5a:	imul   esp,DWORD PTR [edx],0xa35464cd
  40ef60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef61:	adc    DWORD PTR [eax],edx
  40ef63:	call   0xafc9:0x3ec15bd2
  40ef6a:	push   esi
  40ef6b:	in     al,0x71
  40ef6d:	xchg   DWORD PTR [edx-0x6a],esi
  40ef70:	dec    edx
  40ef71:	mov    al,ds:0xaa629234
  40ef76:	xor    BYTE PTR [esi+0x14],dh
  40ef79:	inc    ebp
  40ef7a:	jnp    0x40ef81
  40ef7c:	scas   eax,DWORD PTR es:[edi]
  40ef7d:	sbb    ebx,DWORD PTR [ebp+0xa]
  40ef80:	and    al,0xaf
  40ef82:	pop    eax
  40ef83:	sbb    eax,0x9bcfe16f
  40ef88:	or     ebp,DWORD PTR [edx-0x36dd623d]
  40ef8e:	out    0xf6,al
  40ef90:	aad    0x44
  40ef92:	ret    
  40ef93:	mov    al,0x56
  40ef95:	lea    esp,[edi-0x34]
  40ef98:	dec    esi
  40ef99:	or     ebp,edx
  40ef9b:	mov    DWORD PTR [esi-0x3],edi
  40ef9e:	cmc    
  40ef9f:	xchg   edx,eax
  40efa0:	cmp    al,0xb6
  40efa2:	mov    esi,0x4e1df70e
  40efa7:	jae    0x40ef63
  40efa9:	lds    esp,FWORD PTR [eax-0x4c2ae689]
  40efaf:	xor    esi,eax
  40efb1:	fs fs jge 0x40efef
  40efb5:	retf   0x6f8
  40efb8:	inc    ecx
  40efb9:	rol    DWORD PTR [edi],1
  40efbb:	(bad)  
  40efbc:	jl     0x40ef64
  40efbe:	fbstp  TBYTE PTR [bx+di]
  40efc1:	fwait
  40efc2:	jne    0x40f032
  40efc4:	adc    ebp,DWORD PTR [esi]
  40efc6:	add    bh,cl
  40efc8:	bsf    ebp,DWORD PTR ds:0x71fa9f56
  40efcf:	mov    esp,0xc1b281ca
  40efd4:	iret   
  40efd5:	dec    esp
  40efd6:	mov    eax,ds:0xfe76d18a
  40efdb:	pop    edx
  40efdc:	mov    ecx,DWORD PTR [ecx]
  40efde:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe0:	jne    0x40efe6
  40efe2:	mov    dh,0x37
  40efe4:	repnz and BYTE PTR [ebx+0x5e3b05af],0xf0
  40efec:	pop    es
  40efed:	ret    
  40efee:	fcomp  DWORD PTR [edx-0x55]
  40eff1:	or     dh,al
  40eff3:	rol    BYTE PTR [ebx-0x13b6ee1f],0x38
  40effa:	jbe    0x40efd8
  40effc:	xor    ecx,edi
  40effe:	jle    0x40f031
  40f000:	cwde   
  40f001:	ins    DWORD PTR es:[edi],dx
  40f002:	fs mov eax,0xb19c5112
  40f008:	inc    esp
  40f009:	mov    DWORD PTR [ecx-0xd379eb7],0xcbf71796
  40f013:	sbb    edi,DWORD PTR [edx-0x30573cbb]
  40f019:	sbb    eax,0x8b0bb743
  40f01e:	pushf  
  40f01f:	mov    eax,DWORD PTR [ecx-0x76]
  40f022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f023:	lods   eax,DWORD PTR es:[esi]
  40f025:	push   0xffffffe1
  40f027:	xchg   ebx,eax
  40f028:	sar    dl,cl
  40f02a:	icebp  
  40f02b:	sbb    al,0x53
  40f02d:	retf   0x91b8
  40f030:	or     eax,DWORD PTR [esi+eax*4]
  40f033:	pop    edx
  40f034:	fwait
  40f035:	cmp    DWORD PTR [eax+0x70],0xffffffe6
  40f039:	jne    0x40effb
  40f03b:	adc    al,0x73
  40f03d:	nop
  40f03e:	ins    BYTE PTR es:[edi],dx
  40f03f:	jnp    0x40efdc
  40f041:	xchg   edi,eax
  40f042:	jno    0x40f008
  40f044:	popa   
  40f045:	mov    eax,0xbf4e6dde
  40f04a:	sar    DWORD PTR [ecx-0x23],cl
  40f04d:	mov    ch,0x69
  40f04f:	pop    edx
  40f050:	je     0x40f065
  40f052:	cs sbb eax,0x45b8daa
  40f058:	cs or  eax,0xd2b513c0
  40f05e:	inc    esp
  40f05f:	aad    0x5e
  40f061:	jne    0x40f069
  40f063:	je     0x40f087
  40f065:	pop    esp
  40f066:	fwait
  40f067:	ret    
  40f068:	jge    0x40f051
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	cmp    eax,0x30bd60d2
  40f070:	(bad)  
  40f071:	dec    ecx
  40f072:	in     eax,0x6d
  40f074:	mov    esp,0x13b29639
  40f079:	fild   QWORD PTR [edx+0x21]
  40f07c:	jne    0x40f011
  40f07e:	fisttp QWORD PTR [ecx]
  40f080:	clc    
  40f081:	jns    0x40f046
  40f083:	jae    0x40f00a
  40f085:	aas    
  40f086:	adc    BYTE PTR [ebx+0x73],dl
  40f089:	xor    dl,BYTE PTR ds:0xba79c8e0
  40f08f:	pop    edx
  40f090:	pusha  
  40f091:	daa    
  40f092:	push   ss
  40f093:	je     0x40f082
  40f095:	retf   0xd555
  40f098:	aam    0xb2
  40f09a:	sbb    DWORD PTR [ecx-0x1e],ebp
  40f09d:	clc    
  40f09e:	les    edx,FWORD PTR [ecx]
  40f0a0:	int    0x41
  40f0a2:	dec    edx
  40f0a3:	mov    eax,0x383b5e81
  40f0a8:	popf   
  40f0a9:	ret    
  40f0aa:	gs pop ds
  40f0ac:	(bad)  
  40f0ad:	icebp  
  40f0ae:	xor    ah,BYTE PTR [esi+0x33ba2c6a]
  40f0b4:	cmp    al,BYTE PTR [edx-0xd]
  40f0b7:	jl     0x40f047
  40f0b9:	popa   
  40f0ba:	gs mov ecx,0xed09d76f
  40f0c0:	cli    
  40f0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c2:	mov    ds:0x2b959781,al
  40f0c7:	xchg   ebx,eax
  40f0c8:	mov    cl,0x2c
  40f0ca:	jle    0x40f0e4
  40f0cc:	jle    0x40f098
  40f0ce:	mov    ds:0x9cfd5de3,eax
  40f0d3:	jecxz  0x40f0aa
  40f0d5:	outs   dx,BYTE PTR ds:[esi]
  40f0d6:	out    0x37,al
  40f0d8:	or     al,0x8f
  40f0da:	(bad)  
  40f0db:	sbb    ecx,DWORD PTR [edx+0x1107bf1b]
  40f0e1:	ds mov ah,0x8d
  40f0e4:	or     esp,DWORD PTR [edx+edi*2+0x42]
  40f0e8:	cmp    DWORD PTR [eax-0x6f7194ec],eax
  40f0ee:	(bad)  
  40f0f0:	fs xor al,0x99
  40f0f3:	int    0x25
  40f0f5:	dec    eax
  40f0f6:	fldenv [esi]
  40f0f8:	fs or  ch,bh
  40f0fb:	sahf   
  40f0fc:	xchg   edx,eax
  40f0fd:	bound  eax,QWORD PTR [ecx+0x79967bf]
  40f103:	clc    
  40f104:	dec    ebp
  40f105:	or     edx,DWORD PTR [eax]
  40f107:	xchg   DWORD PTR [edx+0x32450c9f],esp
  40f10d:	fadd   DWORD PTR [ebp+0x22dda66]
  40f113:	push   cs
  40f114:	dec    edi
  40f115:	xchg   esi,eax
  40f116:	mov    ebx,DWORD PTR ds:0x60ee57c5
  40f11c:	mov    edx,0x28d9a941
  40f121:	mov    esp,0x878d4a77
  40f126:	or     BYTE PTR [eax+0x13],cl
  40f129:	scas   eax,DWORD PTR es:[edi]
  40f12a:	(bad)  
  40f12b:	out    0x79,al
  40f12d:	xor    al,0x1e
  40f12f:	std    
  40f130:	sbb    ecx,DWORD PTR [ebx-0x494ba1c4]
  40f136:	mov    ebp,0x4caae114
  40f13b:	sub    DWORD PTR [edi],eax
  40f13d:	push   es
  40f13e:	leave  
  40f13f:	mov    ebx,0x9880f4f3
  40f144:	sbb    al,0x56
  40f146:	lds    esp,FWORD PTR [ebx+0x68]
  40f149:	push   ss
  40f14a:	dec    ebp
  40f14b:	dec    esi
  40f14c:	inc    esi
  40f14d:	cdq    
  40f14e:	mov    ebp,gs
  40f150:	jno    0x40f10d
  40f152:	push   edi
  40f153:	push   edi
  40f154:	sbb    ebx,edx
  40f156:	pop    edi
  40f157:	cmc    
  40f158:	xchg   esp,eax
  40f159:	dec    ebp
  40f15a:	dec    edx
  40f15b:	int    0x95
  40f15d:	(bad)  
  40f15e:	enter  0x501c,0x7e
  40f162:	sahf   
  40f163:	inc    edi
  40f164:	mov    ds:0x44d78d91,eax
  40f169:	aad    0x3f
  40f16b:	out    0xb8,eax
  40f16d:	lods   al,BYTE PTR ds:[esi]
  40f16e:	arpl   si,bx
  40f170:	inc    edi
  40f171:	lods   al,BYTE PTR ds:[esi]
  40f172:	xor    eax,0xc79d9e78
  40f177:	xor    ebp,esi
  40f179:	imul   esi
  40f17b:	iret   
  40f17c:	std    
  40f17d:	push   edx
  40f17e:	mov    al,ds:0x4ef363c4
  40f183:	sbb    eax,0x31488ebc
  40f188:	push   edi
  40f189:	jnp    0x40f1ff
  40f18b:	int    0x58
  40f18d:	stc    
  40f18e:	in     eax,dx
  40f18f:	imul   BYTE PTR [ebx-0x2d285df7]
  40f195:	ror    DWORD PTR [ebx],0x9b
  40f198:	xor    al,BYTE PTR [ecx+0x39]
  40f19b:	xchg   edx,eax
  40f19c:	or     eax,0xac46dc71
  40f1a1:	cli    
  40f1a2:	or     BYTE PTR [ebp+0x40],ch
  40f1a5:	dec    ebx
  40f1a6:	sub    eax,0x38075ba0
  40f1ab:	sbb    ebp,ebx
  40f1ad:	push   ecx
  40f1ae:	out    dx,eax
  40f1af:	jecxz  0x40f192
  40f1b1:	push   eax
  40f1b2:	adc    BYTE PTR [esi],0x17
  40f1b5:	cmp    ebp,edi
  40f1b7:	push   edi
  40f1b8:	xchg   ebx,eax
  40f1b9:	sub    al,0x10
  40f1bb:	lods   al,BYTE PTR ds:[esi]
  40f1bc:	or     DWORD PTR ss:0x72d4864d,edi
  40f1c3:	jmp    0xd713:0x13b2025
  40f1ca:	outs   dx,DWORD PTR ds:[esi]
  40f1cb:	aad    0x2f
  40f1cd:	arpl   WORD PTR ds:0x31599a5c,cx
  40f1d3:	in     eax,dx
  40f1d4:	or     DWORD PTR [eax],ecx
  40f1d6:	add    al,0x62
  40f1d8:	xlat   BYTE PTR ds:[ebx]
  40f1d9:	dec    esp
  40f1da:	pop    ebx
  40f1db:	pop    ecx
  40f1dc:	jae    0x40f25b
  40f1de:	adc    dh,dl
  40f1e0:	mov    al,0x68
  40f1e2:	jmp    DWORD PTR [eax-0x42]
  40f1e5:	(bad)  
  40f1e6:	sbb    BYTE PTR [edi-0x1fbcabb1],dh
  40f1ec:	sbb    BYTE PTR [edx+eax*2+0x54],dh
  40f1f0:	(bad)  
  40f1f1:	loopne 0x40f227
  40f1f3:	sub    eax,0xcfaf8247
  40f1f8:	mov    ecx,0xd8c4020f
  40f1fd:	mov    ds:0xe2938889,al
  40f202:	mov    edi,0x762feed3
  40f207:	push   ds
  40f208:	in     al,dx
  40f209:	add    eax,0xac633ab6
  40f20e:	iret   
  40f20f:	jnp    0x40f212
  40f211:	imul   esi,DWORD PTR [ebx],0xa8b06157
  40f217:	lods   eax,DWORD PTR ds:[esi]
  40f218:	dec    edi
  40f219:	hlt    
  40f21a:	iret   
  40f21b:	cld    
  40f21c:	sti    
  40f21d:	inc    eax
  40f21e:	cwde   
  40f21f:	xchg   ecx,eax
  40f220:	pop    edx
  40f221:	int    0x58
  40f223:	in     eax,0xd
  40f225:	mov    ds:0xca132e82,al
  40f22a:	(bad)  
  40f22b:	pop    ebx
  40f22c:	popf   
  40f22d:	adc    ch,BYTE PTR [ecx+0x63]
  40f230:	fidiv  DWORD PTR [esi-0x63caa1e5]
  40f236:	sub    bh,dh
  40f238:	ja     0x40f286
  40f23a:	fcomp  DWORD PTR [esi+0x53]
  40f23d:	repnz pop edx
  40f23f:	pop    es
  40f240:	mov    esp,0xb95d3400
  40f245:	xor    BYTE PTR [eax+0x52282bc2],al
  40f24b:	test   DWORD PTR [edi+0x47],esi
  40f24e:	mov    bh,0x2f
  40f250:	call   0xb415:0xaccf0ec3
  40f257:	mov    DWORD PTR [esi-0x63],edx
  40f25a:	stos   BYTE PTR es:[edi],al
  40f25b:	jae    0x40f2b3
  40f25d:	arpl   WORD PTR [ebx+0x6a11808],bx
  40f263:	and    BYTE PTR [eax-0x598bbf30],dl
  40f269:	sub    DWORD PTR [esi],edx
  40f26b:	lahf   
  40f26c:	dec    edx
  40f26d:	inc    ecx
  40f26e:	fsubr  QWORD PTR [edx-0x27835a44]
  40f274:	xchg   edx,eax
  40f275:	mov    edx,0xfe9afe5f
  40f27a:	pop    edx
  40f27b:	jb     0x40f200
  40f27d:	ds popf 
  40f27f:	rep ins DWORD PTR es:[edi],dx
  40f281:	pop    ecx
  40f282:	in     al,dx
  40f283:	iret   
  40f284:	test   eax,0xbc311634
  40f289:	mov    bh,0x77
  40f28b:	in     al,0x50
  40f28d:	add    DWORD PTR [bp+0x44],ecx
  40f291:	pop    edi
  40f292:	dec    ecx
  40f293:	pop    ecx
  40f294:	xchg   BYTE PTR [esi+0x4b],cl
  40f297:	scas   al,BYTE PTR es:[edi]
  40f298:	aas    
  40f299:	cs test eax,0x1fd60e7b
  40f29f:	fwait
  40f2a0:	adc    dh,bh
  40f2a2:	les    edi,FWORD PTR [eax-0x4ab9f48c]
  40f2a8:	and    BYTE PTR [eax+0x6b],cl
  40f2ab:	loope  0x40f2fa
  40f2ad:	iret   
  40f2ae:	enter  0x67e8,0xfd
  40f2b2:	(bad)  
  40f2b3:	xchg   ecx,eax
  40f2b4:	mov    edx,0xfed0a8d8
  40f2b9:	in     eax,dx
  40f2ba:	pop    eax
  40f2bb:	jmp    0x40f2af
  40f2bd:	jle    0x40f304
  40f2bf:	inc    ecx
  40f2c0:	vhaddps ymm1,ymm7,YMMWORD PTR [esi]
  40f2c4:	(bad)  [ebx+edi*4]
  40f2c7:	xor    eax,DWORD PTR [edi]
  40f2c9:	(bad)  
  40f2ca:	sahf   
  40f2cb:	div    DWORD PTR [eax+0x7033fac]
  40f2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d2:	test   al,0x4e
  40f2d4:	sbb    DWORD PTR [ebx+0x40],ebp
  40f2d7:	jl     0x40f2af
  40f2d9:	in     al,dx
  40f2da:	outs   dx,BYTE PTR ds:[esi]
  40f2db:	xchg   esp,eax
  40f2dc:	dec    edx
  40f2dd:	jb     0x40f344
  40f2df:	imul   ecx,DWORD PTR ds:0x4faa8d2d,0xffffffea
  40f2e6:	shr    dh,0xee
  40f2e9:	fmul   QWORD PTR [esi]
  40f2eb:	mov    cl,0xd7
  40f2ed:	repz fidivr WORD PTR ds:0xb3bb1ad
  40f2f4:	out    dx,al
  40f2f5:	stos   DWORD PTR es:[edi],eax
  40f2f6:	sbb    eax,0xbaa30028
  40f2fb:	bound  ebp,QWORD PTR [esp+eax*8-0x4cf98ea1]
  40f302:	out    dx,al
  40f303:	jb     0x40f2a6
  40f305:	frstor [esi+0xe]
  40f308:	mov    cl,0xb2
  40f30a:	push   ebp
  40f30b:	xchg   edi,eax
  40f30c:	push   es
  40f30d:	fdiv   DWORD PTR [edi]
  40f30f:	in     al,dx
  40f310:	push   cs
  40f311:	jecxz  0x40f2c0
  40f313:	fcmove st,st(1)
  40f315:	test   eax,0x6b354b1c
  40f31a:	jno    0x40f2f2
  40f31c:	repz pop es
  40f31e:	pop    esi
  40f31f:	dec    esi
  40f320:	pop    es
  40f321:	sub    esi,ebx
  40f323:	(bad)  [edi-0x2c]
  40f326:	mov    ecx,0x2f33c199
  40f32b:	mov    ecx,0xd227cc08
  40f330:	and    eax,0xbaf8eca2
  40f335:	mov    cl,0x54
  40f337:	mov    eax,ds:0x42a2f699
  40f33c:	leave  
  40f33d:	and    al,0xf8
  40f33f:	je     0x40f301
  40f341:	and    al,0xfd
  40f343:	inc    ebp
  40f344:	mov    bh,0xc3
  40f346:	push   cs
  40f347:	in     eax,0x4e
  40f349:	push   eax
  40f34a:	js     0x40f334
  40f34c:	jmp    0xcfff:0xa26966b9
  40f353:	sbb    eax,0xb4c23711
  40f358:	jge    0x40f2dc
  40f35a:	scas   al,BYTE PTR es:[edi]
  40f35b:	pop    ebp
  40f35c:	mov    ecx,0xa8f4e9e0
  40f361:	in     eax,dx
  40f362:	ja     0x40f375
  40f364:	mov    eax,DWORD PTR [ebx-0x5a7ed927]
  40f36a:	pushf  
  40f36b:	dec    ebx
  40f36c:	dec    ecx
  40f36d:	cld    
  40f36e:	dec    edi
  40f36f:	(bad)  
  40f371:	xchg   DWORD PTR [ecx],ebp
  40f373:	fstp   st(4)
  40f375:	call   0x5ee9:0xd2e0c9af
  40f37c:	pop    ecx
  40f37d:	cmp    DWORD PTR [edx+ecx*4-0x5a],ecx
  40f381:	aad    0xea
  40f383:	lods   al,BYTE PTR ds:[esi]
  40f384:	pop    edi
  40f385:	or     BYTE PTR [ebp+esi*1+0x1575a839],dl
  40f38c:	inc    edi
  40f38d:	cmp    dh,ah
  40f38f:	cmp    al,0xfb
  40f391:	jle    0x40f36f
  40f393:	xor    al,0x5d
  40f395:	cmp    eax,DWORD PTR [edx-0x72fe8bf]
  40f39b:	(bad)  
  40f39c:	lds    eax,FWORD PTR [eax+0x75]
  40f39f:	mov    gs,WORD PTR [ebp-0x4eb73bcf]
  40f3a5:	push   ecx
  40f3a6:	or     eax,0x1b50e7c8
  40f3ab:	jge    0x40f3a3
  40f3ad:	aam    0xc3
  40f3af:	iret   
  40f3b0:	ds aam 0x54
  40f3b3:	inc    ebp
  40f3b4:	cmp    DWORD PTR [eax-0x5],ecx
  40f3b7:	jmp    0x1567:0xe0e19c2d
  40f3be:	xor    DWORD PTR [eax-0x1],ecx
  40f3c1:	out    dx,eax
  40f3c2:	ss and BYTE PTR fs:[esi+edx*2-0xa],0xa4
  40f3c9:	dec    edx
  40f3ca:	sub    BYTE PTR [edi],dl
  40f3cc:	sti    
  40f3cd:	jbe    0x40f3e8
  40f3cf:	fidiv  DWORD PTR [ecx-0x20]
  40f3d2:	or     ebp,DWORD PTR [edi]
  40f3d4:	js     0x40f432
  40f3d6:	add    BYTE PTR [ebx-0x35109025],bl
  40f3dc:	mov    esp,0x2f7dd79c
  40f3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e2:	ss aaa 
  40f3e4:	sbb    esi,DWORD PTR [edx+0x50]
  40f3e7:	push   esi
  40f3e8:	xchg   ebp,eax
  40f3e9:	(bad)  
  40f3ea:	cmp    BYTE PTR [edx],al
  40f3ec:	sbb    al,0x86
  40f3ee:	test   BYTE PTR [esi+0x1b],cl
  40f3f1:	cmp    BYTE PTR [ebp+0x41],ch
  40f3f4:	cmp    ecx,esp
  40f3f6:	xchg   ebx,eax
  40f3f7:	scas   eax,DWORD PTR es:[edi]
  40f3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3f9:	push   ss
  40f3fa:	ror    DWORD PTR [esi],1
  40f3fc:	fidivr WORD PTR ds:0xd3510a09
  40f402:	push   esi
  40f403:	outs   dx,DWORD PTR ds:[esi]
  40f404:	sbb    DWORD PTR [esp+ebp*8+0x2d],ebp
  40f408:	cmp    al,0xcd
  40f40a:	icebp  
  40f40b:	pop    ebp
  40f40c:	or     eax,0xabd61e34
  40f411:	sar    BYTE PTR [ebx],0xb6
  40f414:	pop    ss
  40f415:	push   ds
  40f416:	out    dx,eax
  40f417:	sti    
  40f418:	xor    eax,0xe35e529c
  40f41d:	pop    ebp
  40f41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f41f:	mov    bh,0x6b
  40f421:	adc    DWORD PTR [esi-0x6c217c49],eax
  40f427:	push   esi
  40f428:	into   
  40f429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f42a:	pusha  
  40f42b:	mov    fs,eax
  40f42d:	inc    ebx
  40f42e:	xchg   esi,eax
  40f42f:	jae    0x40f3b4
  40f431:	inc    edi
  40f432:	neg    DWORD PTR [ecx]
  40f434:	dec    esi
  40f435:	arpl   WORD PTR [ecx-0x4c],bx
  40f438:	sub    eax,0x4d0cda2e
  40f43d:	cs jl  0x40f3d9
  40f440:	(bad)  
  40f441:	sbb    eax,0x1ce3a8b6
  40f446:	icebp  
  40f447:	int3   
  40f448:	push   es
  40f449:	adc    edx,ebx
  40f44b:	mov    dl,BYTE PTR [esi]
  40f44d:	cmp    al,0x18
  40f44f:	sbb    ah,BYTE PTR [eax]
  40f451:	sbb    BYTE PTR [edi-0x4c94f1ab],al
  40f457:	cli    
  40f458:	push   edx
  40f459:	push   0x51
  40f45b:	out    0xd5,eax
  40f45d:	stos   BYTE PTR es:[edi],al
  40f45e:	push   0xceceb1c4
  40f463:	xchg   ebx,eax
  40f464:	pop    esi
  40f465:	(bad)  
  40f467:	sub    esi,DWORD PTR [eax]
  40f469:	mov    ch,0x13
  40f46b:	dec    esi
  40f46c:	push   esp
  40f46d:	bound  eax,QWORD PTR [ebp+0x30ddef74]
  40f473:	dec    ecx
  40f474:	or     ebx,DWORD PTR [eax]
  40f476:	pop    edx
  40f477:	dec    ecx
  40f478:	lahf   
  40f479:	lahf   
  40f47a:	xor    edx,DWORD PTR [ecx+ecx*4+0x6c2c72b2]
  40f481:	int    0xf4
  40f483:	ror    DWORD PTR [ecx],cl
  40f485:	add    BYTE PTR [edi+0x79],0xf0
  40f489:	ret    0x8a43
  40f48c:	(bad)  
  40f48d:	jmp    0xe42c0f85
  40f492:	repz mov ch,0x8b
  40f495:	adc    cl,BYTE PTR [ebx+0x421cd235]
  40f49b:	add    BYTE PTR [ecx],al
  40f49d:	xor    cl,BYTE PTR [ebx+0x158b0875]
  40f4a3:	rcr    BYTE PTR [edx+eax*2],cl
  40f4a6:	add    BYTE PTR [ecx+0x510893f6],al
  40f4ac:	pop    es
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	in     eax,0xba
  40f4c6:	pop    ecx
  40f4c7:	pop    edi
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x20]
  40f4d1:	out    0xb3,al
  40f4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4d4:	pop    es
  40f4d5:	sbb    edi,DWORD PTR [edi+eiz*1-0x4b]
  40f4d9:	js     0x40f54c
  40f4db:	inc    ecx
  40f4dc:	sub    edx,DWORD PTR [edi+0x2c]
  40f4df:	xchg   edx,eax
  40f4e0:	addr16 pop ss
  40f4e2:	mov    WORD PTR [ebp-0x6931bbbb],ds
  40f4e8:	adc    dl,0x8b
  40f4eb:	loop   0x40f48c
  40f4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ee:	sbb    DWORD PTR [ebx+ebx*1-0x19],0xffffff9d
  40f4f3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f4f5:	(bad)  
  40f4f7:	mov    eax,ds:0x9dd1ffc4
  40f4fc:	mov    dl,0x54
  40f4fe:	xor    eax,DWORD PTR [eax]
  40f500:	add    edx,DWORD PTR [eax+0x28e10b12]
  40f506:	stc    
  40f507:	shr    cl,cl
  40f509:	jne    0x40f56a
  40f50b:	cwde   
  40f50c:	xchg   edx,eax
  40f50d:	nop
  40f50e:	push   0xffffffd2
  40f510:	stc    
  40f511:	es stc 
  40f513:	and    al,0x52
  40f515:	ss cmp al,cl
  40f518:	sbb    dl,cl
  40f51a:	test   eax,0xadf26964
  40f51f:	mov    ebx,0x1c7bce03
  40f524:	and    BYTE PTR [ebp+0x79ccdd4],0xd
  40f52b:	xor    dh,dl
  40f52d:	jge    0x40f4f9
  40f52f:	(bad)  
  40f530:	fisub  WORD PTR [eax-0x175ca2bb]
  40f536:	call   DWORD PTR [ebx]
  40f538:	std    
  40f539:	or     dl,BYTE PTR [esi]
  40f53b:	test   edi,edx
  40f53d:	xor    ah,BYTE PTR [edi-0x4d5a6203]
  40f543:	inc    ebx
  40f544:	(bad)  
  40f545:	push   eax
  40f546:	xor    DWORD PTR [esi],edx
  40f548:	inc    esp
  40f549:	fstp   DWORD PTR [esp+esi*1+0x11]
  40f54d:	mov    eax,ds:0x99ab98e5
  40f552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f553:	mov    esi,0x31171e7e
  40f558:	mov    ebp,0x2b851353
  40f55d:	aas    
  40f55e:	push   es
  40f55f:	fisttp QWORD PTR [eax-0x39]
  40f562:	cld    
  40f563:	xchg   ebx,eax
  40f564:	sub    eax,0x798191c1
  40f569:	jecxz  0x40f580
  40f56b:	push   esp
  40f56c:	js     0x40f5ae
  40f56e:	jmp    0x40f587
  40f570:	int    0x35
  40f572:	mov    dl,0x35
  40f574:	enter  0xc366,0x84
  40f578:	mov    BYTE PTR [ebp+0x10],0x7a
  40f57c:	xor    eax,0x506deb32
  40f581:	lods   al,BYTE PTR ds:[esi]
  40f582:	jno    0x40f5a8
  40f584:	add    DWORD PTR [ecx+0x798db535],ebx
  40f58a:	or     al,0x3
  40f58c:	xchg   esp,eax
  40f58d:	xchg   ebp,eax
  40f58e:	or     al,0xa5
  40f590:	pop    esp
  40f591:	mov    eax,0x1892e34c
  40f596:	dec    esp
  40f597:	mov    cl,0x65
  40f599:	std    
  40f59a:	fst    DWORD PTR [ebp+0x5becaf86]
  40f5a0:	ins    BYTE PTR es:[edi],dx
  40f5a1:	pop    esi
  40f5a2:	call   0x8bbd:0xf8033102
  40f5a9:	mov    ebp,0xc7131f9f
  40f5ae:	pop    eax
  40f5af:	push   0x221c55bc
  40f5b4:	scas   al,BYTE PTR es:[edi]
  40f5b5:	xlat   BYTE PTR ds:[ebx]
  40f5b6:	and    bh,BYTE PTR [esi-0x1d9d7751]
  40f5bc:	hlt    
  40f5bd:	shl    BYTE PTR [ecx-0x5d],cl
  40f5c0:	pop    ecx
  40f5c1:	lds    ebx,FWORD PTR [eax]
  40f5c3:	dec    edi
  40f5c4:	mov    dl,0xf4
  40f5c6:	das    
  40f5c7:	ret    0xd39d
  40f5ca:	or     cl,BYTE PTR ds:0x9bf7483
  40f5d0:	mov    ds:0xa9f50915,al
  40f5d5:	(bad)  
  40f5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5d7:	push   esp
  40f5d8:	in     al,0x36
  40f5da:	and    eax,0x1a47c7b2
  40f5df:	out    0x5c,al
  40f5e1:	dec    esp
  40f5e2:	sub    BYTE PTR [edx+ebx*8-0x5a],dh
  40f5e6:	add    ecx,ebp
  40f5e8:	xchg   ecx,eax
  40f5e9:	sbb    ch,ah
  40f5eb:	daa    
  40f5ec:	adc    cl,BYTE PTR [eax-0x13]
  40f5ef:	mov    eax,ds:0x48d859cf
  40f5f4:	cmp    esi,DWORD PTR [eax]
  40f5f6:	add    al,0xbf
  40f5f8:	mov    BYTE PTR [eax-0x424d49fd],bh
  40f5fe:	pop    edi
  40f5ff:	pop    edx
  40f600:	retf   
  40f601:	dec    ebx
  40f602:	lahf   
  40f603:	retf   
  40f604:	dec    edi
  40f605:	xchg   esi,eax
  40f606:	ss push ds
  40f608:	cmp    DWORD PTR [edi+0x8],ebp
  40f60b:	sar    BYTE PTR [edi+0x11617cff],0x84
  40f612:	ror    ch,1
  40f614:	sub    BYTE PTR [edi+0x49],0xb8
  40f618:	mov    dh,0xe
  40f61a:	mov    dh,0x5d
  40f61c:	pop    es
  40f61d:	lea    ebx,[ebp+0x1608946a]
  40f623:	(bad)  
  40f625:	mov    ebp,0xdcaf86d9
  40f62a:	dec    eax
  40f62b:	cmp    DWORD PTR [esi],edx
  40f62d:	and    edx,esi
  40f62f:	and    eax,0x7360e271
  40f634:	add    al,al
  40f636:	mov    eax,0x8412aa9
  40f63b:	xchg   BYTE PTR ss:[eax],al
  40f63e:	sub    BYTE PTR ds:0xd7295eba,ah
  40f644:	repnz dec esi
  40f646:	fwait
  40f647:	sbb    edx,edi
  40f649:	mov    ebx,0x9b37437f
  40f64e:	sbb    al,dl
  40f650:	xor    al,0xa5
  40f652:	sub    eax,0xeed79b9c
  40f657:	and    eax,0xe3b9d965
  40f65c:	sub    DWORD PTR [eax+0x21],0xffffff8d
  40f660:	pop    esi
  40f661:	jmp    0x40f5f5
  40f663:	xchg   edi,eax
  40f664:	ins    BYTE PTR es:[edi],dx
  40f665:	data16 das 
  40f667:	inc    esi
  40f668:	mov    ds:0x98a5c724,al
  40f66e:	iret   
  40f66f:	sub    ebp,esi
  40f671:	mov    esp,0xaf1e8859
  40f676:	test   eax,0xc5272726
  40f67b:	adc    BYTE PTR [ebx-0x736332e6],dh
  40f681:	ja     0x40f604
  40f683:	stc    
  40f684:	pop    edi
  40f685:	pop    ebp
  40f686:	or     al,0x2c
  40f688:	cmp    al,0x10
  40f68a:	push   ebp
  40f68b:	lds    ecx,FWORD PTR [edx+0x2a442a14]
  40f691:	mov    DWORD PTR [ecx],ebp
  40f693:	inc    esp
  40f694:	add    DWORD PTR [esi-0x7],ebx
  40f697:	cdq    
  40f698:	or     DWORD PTR [ebp-0x6bb4b1a],ecx
  40f69e:	(bad)  
  40f69f:	jmp    0xbca22870
  40f6a4:	push   ds
  40f6a5:	mov    ds:0x12901255,al
  40f6aa:	mov    ecx,0x1e9ff9b1
  40f6af:	cmp    BYTE PTR [ebx+0x1a],0xff
  40f6b3:	sti    
  40f6b4:	fwait
  40f6b5:	repnz imul edx,DWORD PTR [edx-0x7a],0xc0e6cadb
  40f6bd:	mov    WORD PTR [edx],fs
  40f6bf:	pop    es
  40f6c0:	dec    ebx
  40f6c1:	push   ecx
  40f6c2:	inc    ecx
  40f6c3:	push   ss
  40f6c4:	out    dx,al
  40f6c5:	imul   ebp,DWORD PTR [eax+0x4b75edcd],0x569cecd2
  40f6cf:	(bad)  
  40f6d0:	cmp    BYTE PTR [edx+0x78],cl
  40f6d3:	sbb    DWORD PTR ds:0x104d872,ebp
  40f6d9:	mov    bl,0xd5
  40f6db:	dec    ecx
  40f6dc:	mov    ds:0x6a71de4a,al
  40f6e1:	in     eax,0xd0
  40f6e3:	loope  0x40f6f0
  40f6e5:	or     ebx,ebp
  40f6e7:	out    0x9b,al
  40f6e9:	jo     0x40f6d1
  40f6eb:	xchg   ecx,eax
  40f6ec:	loopne 0x40f69a
  40f6ee:	bound  esp,QWORD PTR [ebx]
  40f6f0:	inc    eax
  40f6f1:	mov    ah,0x6d
  40f6f3:	out    0x38,al
  40f6f5:	lock imul eax,DWORD PTR [edx-0x785e8881],0x779f1d2c
  40f700:	ins    BYTE PTR es:[edi],dx
  40f701:	dec    esp
  40f702:	or     DWORD PTR [esi+esi*1],0x4b
  40f706:	and    al,0xd6
  40f708:	or     DWORD PTR [esi+0x5a],0xf32ed3fe
  40f70f:	clc    
  40f710:	jl     0x40f6d2
  40f712:	fimul  DWORD PTR [edx]
  40f714:	lock test BYTE PTR [edi-0x65862297],cl
  40f71b:	jno    0x40f6d3
  40f71d:	mov    bl,0xff
  40f71f:	cs xchg edi,eax
  40f721:	movntps XMMWORD PTR [ecx-0x7a],xmm0
  40f725:	jns    0x40f780
  40f727:	mov    WORD PTR [edi-0x79],ds
  40f72a:	scas   eax,DWORD PTR es:[edi]
  40f72b:	mov    al,ds:0x38207311
  40f730:	in     al,dx
  40f731:	cdq    
  40f732:	js     0x40f780
  40f734:	pop    ebp
  40f735:	cmp    BYTE PTR [ebx],0x2a
  40f738:	cmp    BYTE PTR [esi],dh
  40f73a:	adc    ch,cl
  40f73c:	dec    ebp
  40f73d:	fstp   DWORD PTR [esi]
  40f73f:	aaa    
  40f740:	mov    bl,BYTE PTR [ebx]
  40f742:	inc    edi
  40f743:	or     al,0x6a
  40f745:	and    BYTE PTR [eax-0x6e71e2f5],ah
  40f74b:	mov    dh,0x75
  40f74d:	das    
  40f74e:	std    
  40f74f:	pop    edx
  40f750:	daa    
  40f751:	das    
  40f752:	dec    edi
  40f753:	sbb    eax,0xaac113c3
  40f758:	test   al,0x5
  40f75a:	fdivr  QWORD PTR [esi+0x67ef7142]
  40f760:	pop    edx
  40f761:	clc    
  40f762:	arpl   WORD PTR [edx+ecx*2+0x2648d4ef],dx
  40f769:	adc    BYTE PTR [ebx+0x4a6b218e],bh
  40f76f:	pop    ds
  40f770:	aad    0x1d
  40f772:	jmp    0x40f7f0
  40f774:	and    ebx,DWORD PTR [edx+edi*2+0x41]
  40f778:	pusha  
  40f779:	call   0x958dc073
  40f77e:	sub    bh,BYTE PTR [edx+ebp*8]
  40f781:	push   esi
  40f782:	xor    eax,ecx
  40f784:	pop    ss
  40f785:	inc    edx
  40f786:	fcomp  QWORD PTR ds:[eax+0x10]
  40f78a:	push   0x8daf3653
  40f78f:	ret    
  40f790:	call   0x4935d34c
  40f795:	shl    ebx,cl
  40f797:	xor    eax,eax
  40f799:	adc    BYTE PTR [ebp+0x31],dh
  40f79c:	ja     0x40f79f
  40f79e:	adc    DWORD PTR [esi],edx
  40f7a0:	jle    0x40f76e
  40f7a2:	push   ss
  40f7a3:	loope  0x40f7a7
  40f7a5:	fs mov esp,0xbffad5f9
  40f7ab:	stc    
  40f7ac:	sbb    bl,0x72
  40f7af:	sar    DWORD PTR [esi],cl
  40f7b1:	out    0x9f,al
  40f7b3:	out    0x47,al
  40f7b5:	dec    ebp
  40f7b6:	adc    al,bl
  40f7b8:	dec    edi
  40f7b9:	sub    BYTE PTR [edx+ebx*8],ch
  40f7bc:	(bad)  
  40f7bd:	addr16 das 
  40f7bf:	push   eax
  40f7c0:	mov    al,0xd9
  40f7c2:	jb     0x40f7b8
  40f7c4:	or     al,0xa7
  40f7c6:	xchg   ebx,eax
  40f7c7:	cmp    ah,BYTE PTR [ecx-0x391da1da]
  40f7cd:	ds sub al,0xec
  40f7d0:	push   esp
  40f7d1:	dec    esi
  40f7d2:	popf   
  40f7d3:	push   0x5b
  40f7d5:	sar    BYTE PTR [edi+0x29],cl
  40f7d8:	jo     0x40f7d9
  40f7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7db:	ret    
  40f7dc:	out    0x9e,al
  40f7de:	sbb    DWORD PTR [ebx],edi
  40f7e0:	pop    es
  40f7e1:	and    al,0xc7
  40f7e3:	cs (bad) 
  40f7e5:	stos   BYTE PTR es:[edi],al
  40f7e6:	xchg   esp,eax
  40f7e7:	loopne 0x40f7b8
  40f7e9:	loope  0x40f81b
  40f7eb:	sti    
  40f7ec:	mov    ds:0x17d71c57,eax
  40f7f1:	ins    BYTE PTR es:[edi],dx
  40f7f2:	sub    ecx,eax
  40f7f4:	xor    BYTE PTR [ecx],al
  40f7f6:	xchg   ebp,eax
  40f7f7:	cmp    al,0x7a
  40f7f9:	pop    ds
  40f7fa:	jae    0xbc506bec
  40f800:	mov    ds:0x660649a2,al
  40f805:	fbld   TBYTE PTR [ecx+0x64f693fb]
  40f80b:	fcomp  DWORD PTR [ebp+0xe]
  40f80e:	adc    al,0x8e
  40f810:	outs   dx,DWORD PTR ds:[esi]
  40f811:	jmp    0xf4ca2d60
  40f816:	fild   WORD PTR [edx+edi*2]
  40f819:	jns    0x40f80c
  40f81b:	cwde   
  40f81c:	pop    eax
  40f81d:	or     ch,0xfb
  40f820:	jne    0x40f7c0
  40f822:	xor    edi,DWORD PTR [edx]
  40f824:	addr16 in al,0xc6
  40f827:	sti    
  40f828:	push   ecx
  40f829:	int3   
  40f82a:	and    bl,ah
  40f82c:	aas    
  40f82d:	push   es
  40f82e:	mov    eax,0x7cb7f728
  40f833:	inc    eax
  40f834:	pusha  
  40f835:	shl    BYTE PTR [eax],cl
  40f837:	pop    esp
  40f838:	mov    esp,0xfe362304
  40f83d:	mov    ch,0x2
  40f83f:	sbb    BYTE PTR [edi+0x31],ch
  40f842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f843:	out    dx,eax
  40f844:	and    esp,DWORD PTR [esp+ecx*8-0x1339171a]
  40f84b:	pop    edi
  40f84c:	inc    esp
  40f84d:	adc    al,0x81
  40f84f:	out    dx,al
  40f850:	fstp   DWORD PTR [eax-0x665cc7a2]
  40f856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f857:	xor    BYTE PTR [ebp-0x68503ae5],0xd8
  40f85e:	sub    BYTE PTR [ebx+edx*8],0xe3
  40f862:	and    DWORD PTR [edx+0x5365a50],edi
  40f868:	iret   
  40f869:	and    dh,ah
  40f86b:	inc    DWORD PTR [eax-0x1e]
  40f86e:	and    bh,bl
  40f870:	jle    0x40f86b
  40f872:	push   esp
  40f873:	and    edx,DWORD PTR [edx]
  40f875:	clc    
  40f876:	xchg   BYTE PTR [edx],bh
  40f878:	inc    esp
  40f879:	pop    ebp
  40f87a:	jmp    0x226dcfaf
  40f87f:	ss or  ah,ch
  40f882:	cmp    al,0x6f
  40f884:	sbb    al,0xa
  40f886:	mov    cs,WORD PTR [eax+0x77b6b26f]
  40f88c:	adc    al,0xfb
  40f88e:	cmp    BYTE PTR [esi],0x19
  40f891:	sub    BYTE PTR [ecx],bh
  40f893:	cwde   
  40f894:	test   DWORD PTR [esi-0x63a3429e],esi
  40f89a:	fild   DWORD PTR [ebx+0x6f]
  40f89d:	pushf  
  40f89e:	push   ebp
  40f89f:	jbe    0x40f91a
  40f8a1:	xchg   ecx,eax
  40f8a2:	(bad)
  40f8a5:	int    0x7a
  40f8a7:	cmp    edi,ebp
  40f8a9:	mov    eax,0x784b66ab
  40f8ae:	pushf  
  40f8af:	add    al,0x36
  40f8b1:	inc    ebx
  40f8b2:	push   ds
  40f8b3:	fisub  WORD PTR [ecx+0x1d]
  40f8b6:	mov    edi,0xe58b6a66
  40f8bb:	push   cs
  40f8bc:	fisub  DWORD PTR [esi+0x39]
  40f8bf:	mov    cl,0xdb
  40f8c1:	mov    ds:0xe438c4a8,eax
  40f8c6:	lock push edx
  40f8c8:	jb     0x40f854
  40f8ca:	sub    ch,BYTE PTR [esi+0x3cbe9c30]
  40f8d0:	jp     0x40f893
  40f8d2:	pop    ebp
  40f8d3:	repnz std 
  40f8d5:	outs   dx,BYTE PTR fs:[esi]
  40f8d7:	adc    al,0x5a
  40f8d9:	cmp    edi,DWORD PTR [esi+0x1dd2b485]
  40f8df:	arpl   WORD PTR [edi+0x694866ad],di
  40f8e5:	dec    esi
  40f8e6:	jbe    0x40f8dd
  40f8e8:	adc    BYTE PTR [ebx-0x2184c71c],cl
  40f8ee:	mov    esi,0x636455d0
  40f8f3:	jle    0x374e30ab
  40f8f9:	je     0x40f908
  40f8fb:	out    0xeb,eax
  40f8fd:	mov    esi,0x30889f4e
  40f902:	xchg   ecx,eax
  40f903:	jo     0x40f8cf
  40f905:	xor    dl,BYTE PTR [eax]
  40f907:	enter  0x6fc1,0xf8
  40f90b:	call   0x6434:0x872ad61b
  40f912:	push   es
  40f913:	inc    edx
  40f914:	mov    dl,0x97
  40f916:	jno    0x40f922
  40f918:	jle    0x40f8c2
  40f91a:	shr    BYTE PTR [ebp+edi*1+0x2c9aedda],0x92
  40f922:	lods   al,BYTE PTR ds:[esi]
  40f923:	inc    ebp
  40f924:	sbb    al,0xeb
  40f926:	imul   DWORD PTR [ebp+0xe]
  40f929:	dec    ecx
  40f92a:	and    al,0xfb
  40f92c:	mov    ecx,0xc27f35c4
  40f931:	xor    eax,0x736915a9
  40f936:	xchg   DWORD PTR [ecx+0x5e],ecx
  40f939:	je     0x40f92b
  40f93b:	lods   eax,DWORD PTR ds:[esi]
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	bound  ebx,QWORD PTR [esi+edx*4+0x213a28b7]
  40f944:	ffree  st(0)
  40f946:	mov    ds:0x9e302574,eax
  40f94b:	pop    ds
  40f94c:	lahf   
  40f94d:	loop   0x40f907
  40f94f:	add    bl,BYTE PTR [edx+0x25]
  40f952:	ss pop ds
  40f954:	mov    cl,0x25
  40f956:	loopne 0x40f94f
  40f958:	ret    0x4097
  40f95b:	adc    BYTE PTR [edx-0x4359a1a0],ch
  40f961:	mov    ebp,0x63ebf514
  40f966:	cmp    al,0x76
  40f968:	mov    edi,esi
  40f96a:	xor    BYTE PTR ds:[edi-0x76d824cf],dl
  40f971:	cmc    
  40f972:	inc    esp
  40f973:	xchg   edx,eax
  40f974:	mov    cl,0xea
  40f976:	and    cl,ah
  40f978:	arpl   WORD PTR [eax+0x5984f729],bp
  40f97e:	dec    eax
  40f97f:	jmp    0x51ac4c7e
  40f984:	jmp    0xff6ab90a
  40f989:	je     0x40f98d
  40f98b:	fcomip st,st(4)
  40f98d:	sub    al,0x9a
  40f98f:	mov    dl,0xf8
  40f991:	loop   0x40f986
  40f993:	pop    ecx
  40f994:	aaa    
  40f995:	jae    0x40f9ef
  40f997:	sbb    eax,0xa77af635
  40f99c:	jo     0x40f924
  40f99e:	xor    BYTE PTR [ecx+0x50f02840],ch
  40f9a4:	sbb    esp,DWORD PTR [esi]
  40f9a6:	pop    eax
  40f9a7:	jae    0x40f973
  40f9a9:	mov    ebp,0xee45c06d
  40f9ae:	mov    eax,ds:0x7e6f5b5
  40f9b3:	dec    ecx
  40f9b4:	jno    0x40f962
  40f9b6:	sub    BYTE PTR [esi+0x32],dl
  40f9b9:	aas    
  40f9ba:	and    al,0xb5
  40f9bc:	mov    dh,0x28
  40f9be:	push   ds
  40f9bf:	add    ebx,DWORD PTR [edi+eiz*1-0x59efad1]
  40f9c6:	xor    BYTE PTR [edx],0x71
  40f9c9:	xchg   DWORD PTR [edx-0x453758fe],eax
  40f9cf:	mov    DWORD PTR [ebx],ecx
  40f9d1:	mov    ds:0xbf186702,al
  40f9d6:	adc    al,0x6e
  40f9d8:	sbb    al,0x76
  40f9da:	xchg   edi,eax
  40f9db:	sbb    DWORD PTR [ebp+0x2f],ebp
  40f9de:	mov    al,ds:0xe162eebc
  40f9e3:	pusha  
  40f9e4:	daa    
  40f9e5:	lea    eax,[edi]
  40f9e7:	cmp    DWORD PTR [esp+ebx*4],edi
  40f9ea:	xchg   BYTE PTR [eax-0x147506e6],ah
  40f9f0:	pushw  0x66
  40f9f3:	outs   dx,BYTE PTR ds:[esi]
  40f9f4:	fcmovnu st,st(6)
  40f9f6:	int    0x98
  40f9f8:	add    ebp,DWORD PTR [ebx-0x6c]
  40f9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fc:	popf   
  40f9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9fe:	jb     0x40f982
  40fa00:	mov    cl,0x31
  40fa02:	or     eax,0xee459657
  40fa07:	shl    BYTE PTR [ecx-0x36],cl
  40fa0a:	call   0xe44a4a15
  40fa0f:	das    
  40fa10:	pop    edx
  40fa11:	retf   
  40fa12:	push   eax
  40fa13:	sbb    al,0x43
  40fa15:	sub    DWORD PTR [edi+0x2cb11e39],esp
  40fa1b:	(bad)  
  40fa1c:	out    0x50,al
  40fa1e:	sub    eax,0x7de4983d
  40fa23:	push   cs
  40fa24:	cmp    BYTE PTR [ebx-0x2cc36c5a],bh
  40fa2a:	or     DWORD PTR [edx+0x7e8a8999],edi
  40fa30:	xchg   ecx,eax
  40fa31:	mov    dl,0xbe
  40fa33:	push   esi
  40fa34:	xor    DWORD PTR [ebx-0xf483ad9],0x39d5a18f
  40fa3e:	mov    esp,0xbc143c4e
  40fa43:	sbb    eax,0x4bafcc1e
  40fa48:	jne    0x40fa0d
  40fa4a:	test   eax,0xe67b1aa5
  40fa4f:	fcmovne st,st(0)
  40fa51:	cdq    
  40fa52:	shl    edx,cl
  40fa54:	jbe    0x40fa4e
  40fa56:	jg     0x40f9f0
  40fa58:	adc    dl,BYTE PTR [edx+eiz*2]
  40fa5b:	mov    WORD PTR [edx-0x62],es
  40fa5e:	test   DWORD PTR [ebx],ebp
  40fa60:	jmp    0x6c05:0x4898dede
  40fa67:	push   ds
  40fa68:	int3   
  40fa69:	push   ebp
  40fa6a:	and    esp,DWORD PTR [ebx]
  40fa6c:	loope  0x40faa0
  40fa6e:	sbb    eax,0x6175071e
  40fa73:	ins    BYTE PTR es:[edi],dx
  40fa74:	ss jae 0x40fa05
  40fa77:	pop    ecx
  40fa78:	stc    
  40fa79:	mov    DWORD PTR [edx],ecx
  40fa7b:	popa   
  40fa7c:	or     dh,BYTE PTR [eax+edi*8]
  40fa7f:	and    al,0x36
  40fa81:	jmp    0x8bb63065
  40fa86:	ds and eax,0x1e23fd7b
  40fa8c:	xchg   edx,eax
  40fa8d:	mov    ds,WORD PTR [eax+0x67]
  40fa90:	jb     0x40fa2d
  40fa92:	call   0xc0ee8c0c
  40fa97:	pop    esi
  40fa98:	mov    ss,WORD PTR [edi-0x48]
  40fa9b:	neg    DWORD PTR [esi]
  40fa9d:	pop    edx
  40fa9e:	mov    ebx,ecx
  40faa0:	jne    0x40fad5
  40faa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa3:	and    DWORD PTR [esi],ebx
  40faa5:	arpl   WORD PTR [ecx],cx
  40faa7:	inc    ebp
  40faa8:	and    al,0xf6
  40faaa:	frstor [edi-0xe0e0e85]
  40fab0:	stc    
  40fab1:	and    DWORD PTR [ebp-0x5],edi
  40fab4:	daa    
  40fab5:	jae    0x40faa6
  40fab7:	jae    0x40fb04
  40fab9:	and    al,0x41
  40fabc:	iret   
  40fabd:	out    0xf8,eax
  40fabf:	and    ah,BYTE PTR [edi+ecx*1+0x1450176d]
  40fac6:	pop    ebp
  40fac7:	test   edi,0x305e0628
  40facd:	sub    cl,BYTE PTR [esi-0x67]
  40fad0:	mul    DWORD PTR [ecx+ebp*8]
  40fad3:	mov    ?,WORD PTR [edi+0x3783def4]
  40fad9:	mov    bh,0x6c
  40fadb:	xlat   BYTE PTR ds:[ebx]
  40fadc:	unpckhps xmm0,XMMWORD PTR [esi+0x0]
  40fae0:	retf   
  40fae1:	lods   al,BYTE PTR ds:[esi]
  40fae2:	jg     0x40fafc
  40fae4:	imul   ecx,eax,0xf28ca08c
  40faea:	int    0xea
  40faec:	jo     0x40fafc
  40faee:	out    0x4,al
  40faf0:	std    
  40faf1:	push   ebp
  40faf2:	or     BYTE PTR [edx],dh
  40faf4:	aam    0x9c
  40faf6:	loopne 0x40fa95
  40faf8:	xor    bh,BYTE PTR [ebx]
  40fafa:	nop
  40fafb:	test   eax,0xfecd4cda
  40fb00:	pop    ecx
  40fb01:	stc    
  40fb02:	adc    al,0x77
  40fb04:	dec    esp
  40fb05:	imul   eax,DWORD PTR [esi],0x11
  40fb08:	pop    dx
  40fb0a:	aad    0x56
  40fb0c:	fimul  DWORD PTR [eax]
  40fb0e:	mov    BYTE PTR [edi],0x9a
  40fb11:	cmp    al,0xf8
  40fb13:	mov    ah,0xaf
  40fb15:	fwait
  40fb16:	dec    eax
  40fb17:	retf   0xe5e5
  40fb1a:	loop   0x40fab9
  40fb1c:	out    0xe8,eax
  40fb1e:	(bad)  
  40fb1f:	pusha  
  40fb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb21:	add    ebp,eax
  40fb23:	iret   
  40fb24:	shr    BYTE PTR [ecx-0xb],1
  40fb27:	out    dx,al
  40fb28:	jl     0x40fb52
  40fb2a:	les    ebx,FWORD PTR [ecx-0x2a]
  40fb2d:	jle    0x40fb38
  40fb2f:	fisttp QWORD PTR [edi+edi*8-0x159142f6]
  40fb36:	pop    ebp
  40fb37:	pop    ecx
  40fb38:	jns    0x40fabe
  40fb3a:	aas    
  40fb3b:	or     DWORD PTR [edi],esi
  40fb3d:	inc    esi
  40fb3e:	shl    BYTE PTR [ebx+eax*4],cl
  40fb41:	test   eax,0xe3ad60a2
  40fb46:	icebp  
  40fb47:	jl     0x40fb05
  40fb49:	sbb    eax,0xd45af713
  40fb4e:	int    0x57
  40fb50:	mov    WORD PTR [esi],gs
  40fb52:	mov    ecx,0x2bebaa43
  40fb57:	outs   dx,BYTE PTR ds:[esi]
  40fb58:	jecxz  0x40fb55
  40fb5a:	push   edi
  40fb5b:	aaa    
  40fb5c:	jmp    0x40fb81
  40fb5e:	dec    eax
  40fb5f:	pop    ecx
  40fb60:	xchg   edx,eax
  40fb61:	mov    esi,0x11707bd5
  40fb66:	icebp  
  40fb67:	int3   
  40fb68:	sub    BYTE PTR [ecx-0x7c],0x59
  40fb6c:	or     al,0x83
  40fb6e:	xor    al,0xa
  40fb70:	arpl   WORD PTR [ebx],dx
  40fb72:	inc    ebp
  40fb73:	mov    dh,0xaf
  40fb75:	sahf   
  40fb76:	call   0x87c3a1e3
  40fb7b:	pop    ecx
  40fb7c:	das    
  40fb7d:	es mov ah,0x68
  40fb80:	add    al,0x99
  40fb82:	mov    ds:0xb063ee26,eax
  40fb87:	inc    ebp
  40fb88:	mov    eax,ds:0xdf7bef53
  40fb8d:	xor    al,0x6a
  40fb8f:	cmp    al,0x96
  40fb91:	stos   DWORD PTR es:[edi],eax
  40fb92:	outs   dx,BYTE PTR ds:[esi]
  40fb93:	jo     0x40fc00
  40fb95:	mov    esp,0x5af63f98
  40fb9a:	mov    ecx,0x9eda8587
  40fb9f:	cld    
  40fba0:	jmp    0x7bfb6583
  40fba5:	mov    ecx,0x607a7c83
  40fbaa:	inc    ecx
  40fbab:	pop    ebp
  40fbac:	cmp    ah,BYTE PTR ds:0x7bab5613
  40fbb2:	mov    ch,0x5a
  40fbb4:	mov    ?,WORD PTR [ebx+0x170505b2]
  40fbba:	mov    bl,0x29
  40fbbc:	jecxz  0x40fbf2
  40fbbe:	stc    
  40fbbf:	mov    al,0x8e
  40fbc1:	repz fsubrp st(6),st
  40fbc4:	loope  0x40fb6c
  40fbc6:	sbb    al,0x90
  40fbc8:	jmp    0x40fbb8
  40fbca:	push   esi
  40fbcb:	mov    esi,0x43806787
  40fbd0:	popa   
  40fbd1:	xchg   edi,eax
  40fbd2:	mov    esi,0xf1bb1c3f
  40fbd7:	jecxz  0x40fc04
  40fbd9:	pop    esp
  40fbda:	sub    ebx,DWORD PTR [eax]
  40fbdc:	js     0x40fc1a
  40fbde:	sahf   
  40fbdf:	(bad)  
  40fbe1:	mov    cl,0xd1
  40fbe3:	ret    0xe1e
  40fbe6:	adc    al,0xdd
  40fbe8:	retf   
  40fbe9:	mov    ch,0x95
  40fbeb:	xchg   edi,eax
  40fbec:	stos   DWORD PTR es:[edi],eax
  40fbed:	and    eax,0xbc4787d5
  40fbf2:	sub    DWORD PTR [ecx-0x40],edx
  40fbf5:	lods   al,BYTE PTR ds:[esi]
  40fbf6:	popf   
  40fbf7:	lods   al,BYTE PTR ds:[esi]
  40fbf8:	jecxz  0x40fc3d
  40fbfa:	das    
  40fbfb:	enter  0x60e1,0x81
  40fbff:	inc    esp
  40fc00:	xchg   ebp,eax
  40fc01:	ror    BYTE PTR [edx-0x4b0a44e7],1
  40fc07:	outs   dx,BYTE PTR ds:[esi]
  40fc08:	je     0x40fc62
  40fc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc0b:	xor    ecx,DWORD PTR [ebp+0x4f]
  40fc0e:	mov    bh,0x65
  40fc10:	push   0xfffffff5
  40fc12:	mov    ebx,0xe29daf44
  40fc17:	cld    
  40fc18:	sbb    BYTE PTR [edi+0x7c],ch
  40fc1b:	js     0x40fc6f
  40fc1d:	inc    edi
  40fc1e:	xchg   esp,eax
  40fc1f:	(bad)  
  40fc20:	mov    ebp,0x80d58c2
  40fc25:	inc    esp
  40fc26:	loop   0x40fc82
  40fc28:	xor    al,0x2a
  40fc2a:	sbb    ch,BYTE PTR [ecx]
  40fc2c:	xor    al,0x16
  40fc2e:	xchg   edi,eax
  40fc2f:	inc    esp
  40fc30:	cmp    edi,esp
  40fc32:	push   cs
  40fc33:	cmp    BYTE PTR [edi*8-0x1722d346],ah
  40fc3a:	jb     0x40fc09
  40fc3c:	fsubr  DWORD PTR [ecx+0x5540d3e9]
  40fc42:	sub    DWORD PTR ds:0x5006992,edi
  40fc48:	es push 0x99ba3ee4
  40fc4e:	pushf  
  40fc4f:	cld    
  40fc50:	in     al,0x78
  40fc52:	mov    cl,0x16
  40fc54:	fbld   TBYTE PTR [ebp+0x77]
  40fc57:	ss cwde 
  40fc59:	jne    0x40fc90
  40fc5b:	adc    DWORD PTR [ebx+0x4b],esi
  40fc5e:	mov    ds:0xdffbd48,al
  40fc63:	out    dx,al
  40fc64:	pop    esp
  40fc65:	mov    ebx,0x983f4b9b
  40fc6a:	adc    DWORD PTR [ebx-0x78872d0c],eax
  40fc70:	jo     0x40fcac
  40fc72:	imul   ecx,DWORD PTR gs:[ecx+0x69],0xe4ab68e5
  40fc7a:	in     al,0x23
  40fc7c:	rcr    DWORD PTR [ebx-0x2e474536],1
  40fc82:	mov    ecx,0x87d35491
  40fc87:	dec    esi
  40fc88:	loop   0x40fce8
  40fc8a:	push   esp
  40fc8b:	ja     0x40fc2a
  40fc8d:	and    DWORD PTR [edi],ebx
  40fc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc90:	jbe    0x40fce6
  40fc92:	out    0x25,eax
  40fc94:	sbb    dh,BYTE PTR [edx-0x7b]
  40fc97:	lds    edi,FWORD PTR [edx-0x52]
  40fc9a:	sub    DWORD PTR [eax-0x12f9bb8a],edx
  40fca0:	ins    BYTE PTR es:[edi],dx
  40fca1:	in     eax,dx
  40fca2:	mov    cl,0x12
  40fca4:	lods   eax,DWORD PTR ds:[esi]
  40fca5:	xchg   ecx,eax
  40fca6:	and    eax,0x71fa4d9a
  40fcab:	sub    BYTE PTR [edi+eax*8+0x56],ch
  40fcaf:	enter  0x64de,0x9d
  40fcb3:	jecxz  0x40fcb5
  40fcb5:	pusha  
  40fcb6:	push   ebp
  40fcb7:	add    al,0x18
  40fcb9:	rcr    DWORD PTR [esi+esi*1],cl
  40fcbc:	pop    ebx
  40fcbd:	dec    ebp
  40fcbe:	jbe    0x40fca4
  40fcc0:	push   ebp
  40fcc1:	cmp    al,0x6c
  40fcc3:	adc    ch,0x36
  40fcc6:	pop    edx
  40fcc7:	inc    esi
  40fcc8:	loop   0x40fce5
  40fcca:	(bad)  
  40fccb:	retf   0x39e4
  40fcce:	jge    0x40fd0b
  40fcd0:	addr16 dec ax
  40fcd3:	cs pop ebx
  40fcd5:	pop    edi
  40fcd6:	fdecstp 
  40fcd8:	mov    ebp,0x5402b71e
  40fcdd:	lods   eax,DWORD PTR ds:[esi]
  40fcde:	jb     0x40fd58
  40fce0:	add    ah,BYTE PTR [eax]
  40fce2:	push   ds
  40fce3:	aad    0x1
  40fce5:	mov    dl,0x63
  40fce7:	mov    edi,0xc000cd4e
  40fcec:	xchg   ebp,eax
  40fced:	pop    edi
  40fcee:	push   edx
  40fcef:	or     bl,cl
  40fcf1:	rol    DWORD PTR [ebx-0x36074838],0x56
  40fcf8:	pop    ss
  40fcf9:	add    ecx,ebp
  40fcfb:	stos   DWORD PTR es:[edi],eax
  40fcfc:	push   ds
  40fcfd:	lds    ecx,FWORD PTR ds:0x77c88771
  40fd03:	test   al,0xad
  40fd05:	stc    
  40fd06:	xchg   ecx,eax
  40fd07:	outs   dx,BYTE PTR ds:[esi]
  40fd08:	inc    edi
  40fd09:	mov    eax,ds:0xad990266
  40fd0e:	scas   al,BYTE PTR es:[edi]
  40fd0f:	mov    esp,DWORD PTR [edx+eiz*2-0x18739935]
  40fd16:	arpl   WORD PTR [ebx],dx
  40fd18:	lods   eax,DWORD PTR ds:[esi]
  40fd19:	add    ah,BYTE PTR [ebx+0x47eb3d6b]
  40fd1f:	popa   
  40fd20:	popf   
  40fd21:	pushf  
  40fd22:	les    ebx,FWORD PTR [esi]
  40fd24:	push   ss
  40fd25:	xor    eax,edi
  40fd27:	dec    ebp
  40fd28:	xchg   dh,bl
  40fd2a:	(bad)  
  40fd2b:	ins    DWORD PTR es:[edi],dx
  40fd2c:	mov    ds:0xb4e979c9,al
  40fd31:	dec    ebx
  40fd32:	add    ch,ah
  40fd34:	loope  0x40fd0a
  40fd36:	mul    DWORD PTR [ecx+ebp*1-0x7ae05b21]
  40fd3d:	lods   al,BYTE PTR ds:[esi]
  40fd3e:	test   DWORD PTR [eax],esi
  40fd40:	push   0x44bbc07
  40fd45:	repnz lock and cl,ah
  40fd49:	mul    edx
  40fd4b:	xchg   esp,eax
  40fd4c:	out    0x5f,al
  40fd4e:	test   BYTE PTR [edx+eax*4],cl
  40fd51:	pop    edx
  40fd52:	out    dx,eax
  40fd53:	test   eax,0xb655156a
  40fd58:	pop    ds
  40fd59:	pop    edi
  40fd5a:	lock jmp 0x40fd0a
  40fd5d:	mov    cl,0xf0
  40fd5f:	pop    esi
  40fd60:	clc    
  40fd61:	sub    DWORD PTR [esi-0x70],eax
  40fd64:	adc    al,0x73
  40fd66:	mov    DWORD PTR [edi],esi
  40fd68:	mov    bl,0x1
  40fd6a:	mov    edx,0xc35451f1
  40fd6f:	neg    BYTE PTR [ecx-0x103c4ea1]
  40fd75:	adc    DWORD PTR [ebp-0x23],ecx
  40fd78:	rcr    edi,cl
  40fd7a:	mov    dh,0x1a
  40fd7c:	lock in eax,dx
  40fd7e:	or     DWORD PTR [eax+0x1c],ebx
  40fd81:	sbb    eax,0x2f74d339
  40fd86:	sub    al,0x2a
  40fd88:	shl    BYTE PTR [ecx+0x3a],1
  40fd8b:	stos   DWORD PTR es:[edi],eax
  40fd8c:	lods   eax,DWORD PTR ds:[esi]
  40fd8d:	enter  0x6c78,0x31
  40fd91:	mov    ebp,0x5d3d92f0
  40fd96:	dec    ecx
  40fd97:	mov    ch,0xbe
  40fd99:	fwait
  40fd9a:	div    BYTE PTR [esp+edx*4-0x25e1d2dd]
  40fda1:	sub    dh,BYTE PTR ds:0x86f81c0
  40fda7:	xchg   ebp,eax
  40fda8:	xor    ah,BYTE PTR [edx-0x2d]
  40fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdac:	add    ebx,DWORD PTR [edx+0x9]
  40fdaf:	repnz sbb BYTE PTR ss:[esi-0x71],dl
  40fdb4:	mov    ah,0x89
  40fdb6:	ret    
  40fdb7:	or     DWORD PTR [esi-0x67cd11aa],0x8f5a6909
  40fdc1:	enter  0x1ed4,0x8a
  40fdc5:	iret   
  40fdc6:	scas   al,BYTE PTR es:[edi]
  40fdc7:	adc    BYTE PTR [eax+ebp*2+0x181cb4bc],0xc4
  40fdcf:	loopne 0x40fe4a
  40fdd1:	mov    esp,0x3813409a
  40fdd6:	mov    esp,0x29afe5c0
  40fddb:	aaa    
  40fddc:	cwde   
  40fddd:	nop
  40fdde:	xchg   edi,eax
  40fddf:	xchg   ebx,eax
  40fde0:	sbb    edi,DWORD PTR [edx+eax*2+0x53]
  40fde4:	fsubr  QWORD PTR [edx+0x3e]
  40fde7:	sub    BYTE PTR [edx+0x9d0fd18],bh
  40fded:	adc    al,0xb5
  40fdef:	mov    DWORD PTR [ebx+0x17],esp
  40fdf2:	out    dx,eax
  40fdf3:	xor    BYTE PTR [edi+0x43],bl
  40fdf6:	dec    ebp
  40fdf7:	xor    BYTE PTR [edx-0x6dda3c87],ah
  40fdfd:	das    
  40fdfe:	retf   0x9eff
  40fe01:	push   ecx
  40fe02:	call   0xe0b7:0xb8c3b659
  40fe09:	sub    edx,DWORD PTR [ebx+0x36]
  40fe0c:	or     edi,DWORD PTR [edi+ebx*8+0x7ec33221]
  40fe13:	(bad)  
  40fe14:	push   DWORD PTR ds:0x95b991af
  40fe1a:	dec    eax
  40fe1b:	adc    eax,0x37fc0935
  40fe20:	xor    BYTE PTR [ecx+0x73],bh
  40fe23:	(bad)  
  40fe24:	lock pop ss
  40fe26:	mov    edi,0xf00ad992
  40fe2b:	inc    ebp
  40fe2c:	pop    esi
  40fe2d:	pop    ds
  40fe2e:	push   edi
  40fe2f:	inc    ebx
  40fe30:	xchg   ebx,eax
  40fe31:	jle    0x40fdea
  40fe33:	mov    bl,0x28
  40fe35:	and    al,0x52
  40fe37:	jmp    0x3df3:0x291a2612
  40fe3e:	stos   BYTE PTR es:[edi],al
  40fe3f:	je     0x40fe3c
  40fe41:	mov    esp,DWORD PTR [eax-0x4e84dbbd]
  40fe47:	(bad)  [ecx]
  40fe49:	adc    cl,BYTE PTR [ecx+0x13518021]
  40fe4f:	push   edx
  40fe50:	repz sbb DWORD PTR [ebx-0x4a],0x55e4de3f
  40fe58:	popa   
  40fe59:	jecxz  0x40fe1e
  40fe5b:	dec    edx
  40fe5c:	outs   dx,BYTE PTR ds:[esi]
  40fe5d:	ret    
  40fe5e:	mov    edi,DWORD PTR [ebp+0x37280b6]
  40fe64:	adc    DWORD PTR [edi+0x4b2e5d19],esp
  40fe6a:	mov    edi,0x62cb3711
  40fe6f:	adc    eax,0x425b6e93
  40fe74:	xchg   ebp,eax
  40fe75:	fldenv [ebx+0x1a]
  40fe78:	mov    eax,0x112491da
  40fe7d:	and    eax,0x9ade5e05
  40fe82:	dec    ebp
  40fe83:	dec    ebx
  40fe84:	imul   eax,ebp,0xa3acf8bb
  40fe8a:	pop    eax
  40fe8b:	pop    DWORD PTR [eax]
  40fe8d:	fld    st(6)
  40fe8f:	inc    edx
  40fe90:	mov    eax,0xbd93e98
  40fe95:	push   esp
  40fe96:	xchg   edi,eax
  40fe97:	sbb    DWORD PTR [esi+ecx*1],eax
  40fe9a:	cwde   
  40fe9b:	jge    0x40fe36
  40fe9d:	fmul   QWORD PTR [ebx]
  40fe9f:	loope  0x40fe2e
  40fea1:	xchg   edx,eax
  40fea2:	pop    ecx
  40fea3:	cdq    
  40fea4:	mov    ds:0x5e69ebb3,al
  40fea9:	je     0x40fea1
  40feab:	ror    esi,1
  40fead:	cmp    DWORD PTR [edi],ecx
  40feaf:	push   cs
  40feb0:	push   0xa77b6621
  40feb5:	mov    dl,0xa2
  40feb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb8:	and    BYTE PTR [ebp+0x410e102d],al
  40febe:	pop    eax
  40febf:	mov    bh,0x5c
  40fec1:	gs adc eax,0xe521076a
  40fec7:	ins    DWORD PTR es:[edi],dx
  40fec8:	sar    BYTE PTR [edi-0x3e],0x1f
  40fecc:	out    dx,eax
  40fecd:	sahf   
  40fece:	push   esp
  40fecf:	scas   eax,DWORD PTR es:[edi]
  40fed0:	or     al,BYTE PTR [ebx+edx*8]
  40fed3:	jo     0x40ff51
  40fed5:	mov    BYTE PTR [ebp-0x7d],dl
  40fed8:	lods   al,BYTE PTR ds:[esi]
  40fed9:	sub    eax,0xa14885db
  40fede:	int3   
  40fedf:	dec    esp
  40fee0:	popf   
  40fee1:	imul   esp,eax,0x3bb47ae5
  40fee7:	hlt    
  40fee8:	xor    al,0x12
  40feea:	mov    ds:0x38e831d9,eax
  40feef:	xchg   esi,eax
  40fef0:	loop   0x40fea0
  40fef2:	daa    
  40fef3:	lds    eax,FWORD PTR [edi]
  40fef5:	cwde   
  40fef6:	dec    eax
  40fef7:	adc    esi,DWORD PTR [ecx]
  40fef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fefa:	test   BYTE PTR [esi-0x4],al
  40fefd:	jle    0x40ff34
  40feff:	adc    eax,0x177952c9
  40ff04:	cmp    BYTE PTR [edi+0x16],cl
  40ff07:	mov    ds:0x40f51f66,eax
  40ff0c:	mov    edx,0xb3fc74af
  40ff11:	imul   esi,DWORD PTR [edi],0xf300a85e
  40ff17:	sbb    eax,0xd907803d
  40ff1c:	mov    cl,0xd8
  40ff1e:	or     dl,0x47
  40ff21:	into   
  40ff22:	outs   dx,DWORD PTR ds:[esi]
  40ff23:	ror    DWORD PTR [edx],cl
  40ff25:	(bad)  
  40ff27:	test   DWORD PTR [edx],esp
  40ff29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff2a:	sub    DWORD PTR [eax-0x5c],0xffffffe0
  40ff2e:	dec    esp
  40ff2f:	mov    BYTE PTR [esi],cl
  40ff31:	jg     0x40ff73
  40ff33:	(bad)  
  40ff34:	imul   esp,DWORD PTR [edi-0x62],0xffffff8c
  40ff38:	inc    edi
  40ff39:	out    0x4d,eax
  40ff3b:	and    DWORD PTR [edx],esp
  40ff3d:	sub    ah,BYTE PTR [edi-0x78]
  40ff40:	mov    esi,?
  40ff42:	xor    DWORD PTR [esi-0x56],esp
  40ff45:	jo     0x40ffa7
  40ff47:	cs add edx,esp
  40ff4a:	sbb    eax,0xf6c8eb00
  40ff4f:	stc    
  40ff50:	sar    bl,1
  40ff52:	xchg   esi,eax
  40ff53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff54:	imul   edi,DWORD PTR [esi],0xffffff8d
  40ff57:	(bad)  
  40ff58:	ins    BYTE PTR es:[edi],dx
  40ff59:	push   ecx
  40ff5a:	inc    ebp
  40ff5b:	repz push edx
  40ff5d:	adc    eax,0xcfa5ac6b
  40ff62:	sbb    DWORD PTR [eax+eiz*4-0x29],esp
  40ff66:	xor    edi,DWORD PTR [edi+ebx*2+0x57]
  40ff6a:	inc    esp
  40ff6b:	mov    al,0xaa
  40ff6d:	push   0xffffffa1
  40ff6f:	inc    edx
  40ff70:	xor    DWORD PTR [edi-0x6ec62680],esp
  40ff76:	and    bh,al
  40ff78:	mov    ds:0xfefd3599,eax
  40ff7d:	mov    edx,0x8cecfeb1
  40ff82:	sub    al,0xa0
  40ff84:	pop    eax
  40ff85:	and    ecx,0x1f
  40ff88:	adc    ebx,DWORD PTR [esi+0x5f]
  40ff8b:	pop    edi
  40ff8c:	sub    dl,BYTE PTR [edx-0x4efc6294]
  40ff92:	outs   dx,BYTE PTR ds:[esi]
  40ff93:	push   esp
  40ff94:	mov    eax,DWORD PTR [ebx]
  40ff96:	mov    al,0xe1
  40ff98:	int3   
  40ff99:	sti    
  40ff9a:	ds push cs
  40ff9c:	fcmovbe st,st(0)
  40ff9e:	add    eax,0x868350a0
  40ffa3:	dec    edx
  40ffa4:	sbb    bl,bl
  40ffa6:	retf   
  40ffa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa8:	adc    edx,esi
  40ffaa:	push   esi
  40ffab:	mov    cl,0x5f
  40ffad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffae:	or     eax,0xe90f6685
  40ffb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb4:	fadd   st,st(0)
  40ffb6:	(bad)  
  40ffb7:	das    
  40ffb8:	ss cmp al,0xf
  40ffbb:	xor    cl,cl
  40ffbd:	dec    ebp
  40ffbe:	lock int 0x8
  40ffc1:	stc    
  40ffc2:	pop    ebp
  40ffc3:	xchg   ebp,eax
  40ffc4:	inc    edi
  40ffc5:	out    dx,al
  40ffc6:	mov    ebx,0xec9f8021
  40ffcb:	out    dx,al
  40ffcc:	xor    eax,0x26c7aec9
  40ffd1:	mov    bh,0x33
  40ffd3:	add    al,0xab
  40ffd5:	es (bad) 
  40ffd7:	into   
  40ffd8:	adc    esi,eax
  40ffda:	shl    eax,0xb2
  40ffdd:	xchg   DWORD PTR [eax],eax
  40ffdf:	add    bl,BYTE PTR [edx]
  40ffe1:	cdq    
  40ffe2:	sbb    BYTE PTR [edx+0x71],bl
  40ffe5:	add    al,0x32
  40ffe7:	mov    esp,0x82756976
  40ffec:	add    BYTE PTR [ebx-0xd9bec25],ah
  40fff2:	xor    eax,0x276905fb
  40fff7:	push   edx
  40fff8:	out    dx,al
  40fff9:	inc    ebp
  40fffa:	jle    0x410075
  40fffc:	push   0xffffffba
  40fffe:	push   esi
  40ffff:	jb     0x40ffd1
  410001:	popf   
  410002:	sti    
  410003:	dec    ebp
  410004:	clc    
  410005:	push   edx
  410006:	sbb    eax,0x2f16c5b9
  41000b:	xchg   DWORD PTR [esi],ebx
  41000d:	cwde   
  41000e:	pusha  
  41000f:	xor    ebp,0xffffffdc
  410012:	aam    0x3e
  410014:	call   0xe61c0caf
  410019:	add    eax,0x2c4c64d4
  41001e:	mov    bl,0xee
  410020:	push   ss
  410021:	bound  esi,QWORD PTR [ecx]
  410023:	mov    edi,0x6c7be3c9
  410028:	mov    al,0x68
  41002a:	or     ecx,DWORD PTR [ebx+0xa]
  41002d:	mov    ds:0xee12b769,eax
  410032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410033:	popa   
  410034:	dec    ebp
  410035:	push   0xffffffc6
  410037:	push   ds
  410038:	loopne 0x410057
  41003a:	pop    ecx
  41003b:	sub    BYTE PTR [ecx],ch
  41003d:	cmc    
  41003e:	push   edx
  41003f:	and    eax,edx
  410041:	sub    al,0x80
  410043:	test   eax,0x489e7648
  410048:	fstp   DWORD PTR [edi]
  41004a:	in     eax,0x62
  41004c:	adc    DWORD PTR [ebx],ecx
  41004e:	add    al,0x88
  410050:	push   ds
  410051:	inc    edx
  410052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410053:	pop    ebp
  410054:	and    BYTE PTR ds:0x13c03384,ch
  41005a:	dec    ecx
  41005b:	add    dh,BYTE PTR [esi]
  41005d:	arpl   WORD PTR [ecx+0x42],dx
  410060:	gs push edx
  410062:	sete   BYTE PTR [eax-0x7a]
  410066:	in     eax,dx
  410067:	pop    ss
  410068:	push   esi
  410069:	aaa    
  41006a:	idiv   eax
  41006c:	xor    ebp,DWORD PTR [esi+edx*1]
  41006f:	jl     0x4100da
  410071:	cmp    al,0x7a
  410073:	or     ecx,DWORD PTR [ebp+0x4274ed15]
  410079:	fwait
  41007a:	pop    ecx
  41007b:	push   0xc8d8afe3
  410080:	mov    ch,0xa
  410082:	pop    esi
  410083:	and    al,0x26
  410085:	cmp    eax,0x1f29f61f
  41008a:	mov    edx,esi
  41008c:	jp     0x4100a5
  41008e:	aaa    
  41008f:	sub    eax,0x7937f1cf
  410094:	push   edx
  410095:	push   es
  410096:	pop    ebp
  410097:	sbb    BYTE PTR [edx-0x61],dh
  41009a:	sti    
  41009b:	xor    BYTE PTR [ebp-0x4e],cl
  41009e:	xchg   ebx,eax
  41009f:	dec    eax
  4100a0:	cmp    ebp,ecx
  4100a2:	dec    edi
  4100a3:	not    BYTE PTR [esi+0x68]
  4100a6:	test   BYTE PTR [esi-0x1d],0xa7
  4100aa:	std    
  4100ab:	push   ecx
  4100ac:	out    0x50,eax
  4100ae:	sub    ebx,DWORD PTR ds:0x31dd8bae
  4100b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b5:	pop    es
  4100b6:	push   cs
  4100b7:	fsub   DWORD PTR [eax-0x261774e8]
  4100bd:	inc    ecx
  4100be:	out    0x4f,al
  4100c0:	shl    BYTE PTR [edx],0xa8
  4100c3:	cmp    bl,ch
  4100c5:	pusha  
  4100c6:	adc    al,0x48
  4100c8:	in     al,0xa4
  4100ca:	jge    0x410148
  4100cc:	push   eax
  4100cd:	sub    esp,ecx
  4100cf:	jmp    0x7ad4:0xfa244450
  4100d6:	pop    esi
  4100d7:	ret    
  4100d8:	loop   0x410125
  4100da:	mov    DWORD PTR [esi],ebx
  4100dc:	(bad)  
  4100dd:	repz shl edx,cl
  4100e0:	adc    cl,bh
  4100e2:	and    al,0x99
  4100e4:	loop   0x410149
  4100e6:	ins    DWORD PTR es:[edi],dx
  4100e7:	imul   eax,DWORD PTR [esp+ebp*4-0x4e0b0d6c],0x4479fabe
  4100f2:	sbb    DWORD PTR gs:[edx+0x2e],0x8bcc2c42
  4100fa:	jmp    DWORD PTR [ebp+0x67a8f770]
  410100:	pop    ss
  410101:	test   eax,0x8ece1e99
  410106:	mov    ah,0xe8
  410108:	stos   DWORD PTR es:[edi],eax
  410109:	repz enter 0xc294,0x41
  41010e:	neg    DWORD PTR [edx]
  410110:	adc    BYTE PTR [eax],0x98
  410113:	adc    DWORD PTR [esi+esi*8+0x17],0x60
  410118:	fisttp QWORD PTR [ebp+edx*2-0x492e874a]
  41011f:	hlt    
  410120:	mov    esi,0x20fdc529
  410125:	cmc    
  410126:	rol    DWORD PTR [eax+esi*1-0x43],1
  41012a:	fdivr  st(6),st
  41012c:	push   0xffffffa1
  41012e:	cmp    eax,0xf0e4fe63
  410133:	les    esi,FWORD PTR [edx-0x8b7a603]
  410139:	stos   BYTE PTR es:[edi],al
  41013a:	pop    ebx
  41013b:	push   ebp
  41013c:	rcl    BYTE PTR [esi-0x28],cl
  41013f:	icebp  
  410140:	push   cs
  410141:	in     eax,0x36
  410143:	jg     0x410159
  410145:	push   edi
  410146:	xchg   esi,eax
  410147:	mov    edx,0x8091ab17
  41014c:	dec    ebp
  41014d:	inc    ebp
  41014e:	push   cs
  41014f:	sub    eax,0x640052c2
  410154:	daa    
  410155:	scas   eax,DWORD PTR es:[edi]
  410156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410157:	(bad)  
  410158:	fwait
  410159:	mov    bh,0xd8
  41015b:	mov    al,0xbf
  41015d:	mov    ah,0x4d
  41015f:	xchg   ebx,eax
  410160:	sbb    eax,0xd2bff727
  410165:	dec    ebx
  410166:	sbb    BYTE PTR [eax],cl
  410168:	xchg   edi,eax
  410169:	jbe    0x41014f
  41016b:	jb     0x41010f
  41016d:	outs   dx,DWORD PTR ds:[esi]
  41016e:	pop    es
  41016f:	mov    esi,0xdcffc09e
  410174:	push   0x42
  410176:	fs repz mov eax,DWORD PTR ss:[edx-0x40]
  41017c:	das    
  41017d:	call   0x93e905e7
  410182:	fst    QWORD PTR [esi-0x34]
  410185:	mov    bh,0x53
  410187:	cmp    BYTE PTR [esi-0x2b],cl
  41018a:	sbb    eax,0xddb9d288
  41018f:	in     al,0xe1
  410191:	js     0x4101ff
  410193:	fcomp  st(5)
  410195:	cld    
  410196:	mov    BYTE PTR [edx],dl
  410198:	add    al,0xa0
  41019a:	daa    
  41019b:	mov    WORD PTR [ebx+0x24],?
  41019e:	xchg   ebp,eax
  41019f:	pop    es
  4101a0:	call   DWORD PTR [esi+ebp*1]
  4101a4:	out    0x29,eax
  4101a6:	cmp    al,0x67
  4101a8:	(bad)  
  4101a9:	mov    ecx,0x18944e84
  4101ae:	ins    DWORD PTR es:[edi],dx
  4101af:	push   ecx
  4101b0:	push   eax
  4101b1:	sbb    BYTE PTR [edi],al
  4101b3:	push   esp
  4101b4:	sbb    DWORD PTR [edi],ecx
  4101b6:	push   esp
  4101b7:	xor    ebp,DWORD PTR [ecx+0x275024ca]
  4101bd:	leave  
  4101be:	rcr    BYTE PTR [eax+0x3b23f11d],cl
  4101c4:	(bad)  
  4101c5:	outs   dx,BYTE PTR ds:[esi]
  4101c6:	push   edi
  4101c7:	push   esi
  4101c8:	add    DWORD PTR [ebp-0x4fdf28dd],eax
  4101ce:	lahf   
  4101cf:	push   ebp
  4101d0:	in     eax,dx
  4101d1:	clc    
  4101d2:	shl    DWORD PTR [eax],1
  4101d4:	and    eax,0xef5c2ac3
  4101d9:	bound  edi,QWORD PTR [esp+ebp*1-0x5f49a322]
  4101e0:	xchg   esp,eax
  4101e1:	repz fstp TBYTE PTR [esi-0x2]
  4101e5:	lods   al,BYTE PTR ds:[esi]
  4101e6:	mov    esp,0xce1c5e1f
  4101eb:	in     al,0x33
  4101ed:	fdiv   QWORD PTR [edx]
  4101ef:	xor    BYTE PTR [ebp-0x2b25147a],ah
  4101f5:	inc    esp
  4101f6:	xor    DWORD PTR [ebp+0x6df92fcd],0x76114564
  410200:	jge    0x4101eb
  410202:	enter  0x78aa,0x7a
  410206:	or     ch,bl
  410208:	cmp    al,0x70
  41020a:	mov    eax,0xb9ff1cbe
  41020f:	stos   DWORD PTR es:[edi],eax
  410210:	xchg   ebp,eax
  410211:	pop    eax
  410212:	or     eax,0xfa6721f1
  410217:	sub    dh,BYTE PTR [esi+eiz*2]
  41021a:	jg     0x4101fa
  41021c:	jecxz  0x4101b4
  41021e:	xor    ah,BYTE PTR [ebx-0x6a]
  410221:	popa   
  410222:	push   edx
  410223:	sahf   
  410224:	std    
  410225:	icebp  
  410226:	test   eax,0x11d1234c
  41022b:	pop    edx
  41022c:	push   ebp
  41022d:	mov    esi,0x445d9dc6
  410232:	imul   edi,DWORD PTR [eax+0x4a835fba],0x36
  410239:	shl    BYTE PTR [eax],cl
  41023b:	sahf   
  41023c:	stos   DWORD PTR es:[edi],eax
  41023d:	call   0xeca7:0x6cd4dea5
  410244:	shl    DWORD PTR [ebx-0x76356402],cl
  41024a:	ins    BYTE PTR es:[edi],dx
  41024b:	push   0xed4ca20c
  410250:	inc    esp
  410251:	push   esp
  410252:	and    dh,BYTE PTR [edi]
  410254:	pusha  
  410255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410256:	and    DWORD PTR [edx+ebx*1],0x6b
  41025a:	out    0xa1,al
  41025c:	test   eax,0xf853507
  410261:	sar    dh,0x94
  410264:	adc    bl,BYTE PTR [bx+di-0x22]
  410268:	test   BYTE PTR [ebx+0x11d3aeba],bh
  41026e:	or     BYTE PTR [ecx-0x1991001a],cl
  410274:	push   ss
  410275:	and    BYTE PTR [eax],0x70
  410278:	mov    ecx,ebx
  41027a:	gs es xchg ecx,eax
  41027d:	(bad)  
  41027e:	js     0x4102f8
  410280:	xlat   BYTE PTR ds:[ebx]
  410281:	inc    edi
  410282:	mov    es,ecx
  410284:	cwde   
  410285:	mov    eax,0x18a0b807
  41028a:	mov    cl,0x3e
  41028c:	fldcw  WORD PTR [ecx-0x5a]
  41028f:	push   es
  410290:	sahf   
  410291:	test   DWORD PTR [ebx+0xc],edx
  410294:	sub    bl,bl
  410296:	leave  
  410297:	cdq    
  410298:	sub    al,0x69
  41029a:	fsub   QWORD PTR [eax+edx*1-0xe73ec5]
  4102a1:	mov    esi,0xbb8d0db6
  4102a6:	call   0xde18a2e0
  4102ab:	push   ebx
  4102ac:	jge    0x41024d
  4102ae:	and    ebp,esi
  4102b0:	out    dx,al
  4102b1:	rol    dh,0xd1
  4102b4:	cmp    bl,BYTE PTR [ebx+eiz*1+0x7b]
  4102b8:	xchg   DWORD PTR ds:0x5f41800b,edi
  4102be:	dec    esp
  4102bf:	sbb    al,0x80
  4102c1:	or     ah,BYTE PTR [ebp-0x24286d68]
  4102c7:	fnstenv [ebx]
  4102c9:	jge    0x4102a2
  4102cb:	ins    BYTE PTR es:[edi],dx
  4102cc:	aad    0x3
  4102ce:	fs aaa 
  4102d0:	out    0x25,al
  4102d2:	imul   edi,DWORD PTR [ecx],0xc80c6145
  4102d8:	pop    esi
  4102d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102da:	bnd jne 0x4102eb
  4102dd:	mov    al,0x3
  4102df:	popf   
  4102e0:	fist   WORD PTR [ebx-0x5e]
  4102e3:	popf   
  4102e4:	fs es dec eax
  4102e7:	and    eax,0x130ddf2a
  4102ec:	dec    edx
  4102ed:	add    BYTE PTR [edi+0x10],al
  4102f0:	stos   BYTE PTR es:[edi],al
  4102f1:	mov    ah,0xd3
  4102f3:	cmc    
  4102f4:	fs dec dl
  4102f7:	push   ds
  4102f8:	iret   
  4102f9:	push   ebp
  4102fa:	cdq    
  4102fb:	cmp    ebp,ecx
  4102fd:	aad    0x75
  4102ff:	inc    ebx
  410300:	cmp    eax,0x9f423c2
  410305:	pop    esi
  410306:	lahf   
  410307:	lods   al,BYTE PTR ds:[esi]
  410308:	fs jbe 0x410368
  41030b:	add    dh,BYTE PTR [edx+esi*4-0x41fb1f79]
  410312:	scas   eax,DWORD PTR es:[edi]
  410313:	into   
  410314:	pop    ebx
  410315:	int3   
  410316:	mov    ebx,0x978df313
  41031b:	cwde   
  41031c:	mov    bl,0xd4
  41031e:	adc    eax,0x83bb0fdb
  410323:	jl     0x4102c5
  410325:	je     0x41033f
  410327:	lds    ebp,FWORD PTR [ecx-0x8]
  41032a:	adc    al,0x2f
  41032c:	mov    bl,0x1c
  41032e:	mov    ah,0x4
  410330:	and    al,0xb3
  410332:	mov    ds:0x54803de7,al
  410337:	je     0x410314
  410339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033a:	icebp  
  41033b:	jmp    0x4102c9
  41033d:	dec    esi
  41033e:	pop    DWORD PTR [ecx+ecx*1-0x659596d4]
  410345:	xchg   esi,eax
  410346:	or     BYTE PTR [edx-0x26],0x48
  41034a:	je     0x4102fc
  41034c:	xchg   esp,eax
  41034d:	adc    esi,esi
  41034f:	sar    BYTE PTR [ebx+0xd],0x3b
  410353:	pop    ebx
  410354:	outs   dx,DWORD PTR ds:[esi]
  410355:	pusha  
  410356:	fldenv [edx]
  410358:	(bad)  
  410359:	mov    dh,0x61
  41035b:	pop    esp
  41035c:	cdq    
  41035d:	fsubr  QWORD PTR [ebp+0x3c910f4e]
  410363:	and    BYTE PTR [ecx],0x26
  410366:	cmp    BYTE PTR [ebp-0x56b6c9ee],dl
  41036c:	jnp    0x41034c
  41036e:	sti    
  41036f:	mov    esi,0x56852107
  410374:	pop    es
  410375:	lea    esi,[ebp+0x3c4a0928]
  41037b:	mov    ds:0x5bcb1b15,eax
  410380:	xchg   DWORD PTR [esi-0x1b1d22f2],edx
  410386:	jae    0x4103f7
  410388:	push   ds
  410389:	mov    eax,0xbdb51f13
  41038e:	shl    DWORD PTR [edi+0xf4d510],0xb3
  410395:	xchg   edx,eax
  410396:	push   edi
  410397:	stos   BYTE PTR es:[edi],al
  410398:	push   ecx
  410399:	or     eax,0xbdd3e7b1
  41039e:	pop    esi
  41039f:	pop    ecx
  4103a0:	and    eax,0x43580af
  4103a5:	stos   BYTE PTR es:[edi],al
  4103a6:	inc    esi
  4103a7:	(bad)  
  4103a8:	cwde   
  4103a9:	jg     0x410350
  4103ab:	aam    0x2f
  4103ad:	rcr    esp,cl
  4103af:	mov    bp,0xb5ef
  4103b3:	lds    ebx,FWORD PTR [eax]
  4103b5:	and    cl,ah
  4103b7:	es mov ebp,0xb99fb8c2
  4103bd:	in     al,dx
  4103be:	inc    edi
  4103bf:	and    eax,0xd54ef7d
  4103c4:	sbb    al,0x3
  4103c6:	pop    edx
  4103c7:	jbe    0x41042b
  4103c9:	outs   dx,DWORD PTR ds:[esi]
  4103ca:	cmc    
  4103cb:	add    al,0x1c
  4103cd:	(bad)
  4103d0:	into   
  4103d1:	sbb    dh,BYTE PTR [ecx-0x1bbeed5e]
  4103d7:	xchg   edx,eax
  4103d8:	mov    al,BYTE PTR [eax+0x497723e9]
  4103de:	aas    
  4103df:	mov    DWORD PTR [ebx+esi*8-0x66e7ec11],esp
  4103e6:	cmc    
  4103e7:	dec    ebp
  4103e8:	call   0xce9:0xaf62a8f4
  4103ef:	int    0x67
  4103f1:	push   esp
  4103f2:	push   esp
  4103f3:	or     edx,DWORD PTR [ecx-0xf]
  4103f6:	imul   BYTE PTR [esi-0x6]
  4103f9:	dec    ebp
  4103fa:	jne    0x4103c3
  4103fc:	xor    eax,0x2fe310df
  410401:	inc    esp
  410402:	pop    eax
  410403:	or     al,dl
  410405:	mov    ebp,0xe591fcef
  41040a:	inc    edi
  41040b:	outs   dx,DWORD PTR ds:[esi]
  41040c:	mov    WORD PTR [ecx+0x215077ae],?
  410412:	push   ds
  410413:	jb     0x41041f
  410415:	hlt    
  410416:	xchg   edx,eax
  410417:	mov    esi,0x981f67d2
  41041c:	add    al,bh
  41041e:	fidivr WORD PTR [eax-0x3d]
  410421:	add    ebx,DWORD PTR [edi]
  410423:	je     0x4103a7
  410425:	std    
  410426:	mov    edi,0x3e9168a3
  41042b:	pop    esp
  41042c:	sub    dh,dl
  41042e:	adc    eax,0x663c5bbf
  410433:	or     eax,0xa82171ee
  410438:	jo     0x4103f1
  41043a:	outs   dx,BYTE PTR ds:[esi]
  41043b:	dec    ecx
  41043c:	call   0x5c9d:0x28a1fa6d
  410443:	ror    edx,cl
  410445:	push   es
  410446:	xchg   ecx,eax
  410447:	jmp    0x410418
  410449:	aad    0xc4
  41044b:	jno    0x410420
  41044d:	dec    ecx
  41044e:	mov    cl,0x5f
  410450:	or     DWORD PTR [ebx],ecx
  410452:	test   BYTE PTR [edi+0x354e3954],al
  410458:	mov    edi,0x4576c87a
  41045d:	and    bl,BYTE PTR [esi-0x101355ea]
  410463:	xor    DWORD PTR [ebx-0x3e],edi
  410466:	mov    edx,DWORD PTR [edx+ebp*1-0x47f7e01f]
  41046d:	jns    0x41047d
  41046f:	and    eax,DWORD PTR [edi+0x2fcbe210]
  410475:	sub    eax,0xb27c3820
  41047a:	mov    DWORD PTR [ecx-0x3],ebp
  41047d:	and    eax,0x7de35855
  410482:	xchg   BYTE PTR [ecx],bh
  410484:	test   BYTE PTR [ebx+0x51def14e],0xfd
  41048b:	fiadd  WORD PTR [edi+0x5de1180]
  410491:	add    ebp,DWORD PTR [eax+0x6f6b0b5e]
  410497:	daa    
  410498:	add    bl,BYTE PTR [edx+ebp*2+0x610fcaa2]
  41049f:	in     eax,0xdc
  4104a1:	adc    DWORD PTR [esi-0x36402abc],ebp
  4104a7:	into   
  4104a8:	mov    esp,0x3004f6e1
  4104ad:	cwde   
  4104ae:	inc    eax
  4104af:	mov    bh,0xef
  4104b1:	mov    ds:0x2741be46,al
  4104b6:	sti    
  4104b7:	mov    dl,0xc1
  4104b9:	fistp  WORD PTR [bx+si-0x5c]
  4104bd:	scas   al,BYTE PTR es:[edi]
  4104be:	jbe    0x4104d2
  4104c0:	push   eax
  4104c1:	xchg   edi,eax
  4104c2:	outs   dx,DWORD PTR ds:[esi]
  4104c3:	out    0x5a,eax
  4104c5:	lods   al,BYTE PTR ds:[esi]
  4104c6:	pop    ebx
  4104c7:	out    dx,al
  4104c8:	(bad)  
  4104c9:	pmaddwd mm1,QWORD PTR [edx+edx*1-0x71c682b2]
  4104d1:	sub    DWORD PTR [esi],0x24
  4104d4:	mov    dh,0x3d
  4104d6:	cmp    BYTE PTR [esi+0x2c],bl
  4104d9:	into   
  4104da:	and    al,0xf2
  4104dc:	mov    dl,BYTE PTR [edi]
  4104de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104df:	xor    BYTE PTR [edx],dl
  4104e1:	sub    ebx,DWORD PTR [ebp+0x18]
  4104e4:	(bad)  
  4104e5:	sub    eax,0xa4e80c9b
  4104ea:	inc    edi
  4104eb:	push   0xffffffe3
  4104ed:	mov    edx,0x7055be0f
  4104f2:	repz xchg esi,eax
  4104f4:	ficomp DWORD PTR [eax]
  4104f6:	or     BYTE PTR [edx+0x1b],0xb7
  4104fa:	add    esi,0x29f63515
  410500:	and    al,0xa2
  410502:	jle    0x4104bf
  410504:	mov    bl,ch
  410506:	adc    BYTE PTR [edx+ebp*4],dh
  410509:	pushf  
  41050a:	les    ebx,FWORD PTR [esi]
  41050c:	rol    BYTE PTR [eax-0x2c],1
  41050f:	mov    eax,0x79c97786
  410514:	or     BYTE PTR [ecx+0x5b5f3687],0x6a
  41051b:	(bad)  
  41051c:	clc    
  41051d:	fsub   DWORD PTR [eax]
  41051f:	retf   0x1ee4
  410522:	rcl    edi,cl
  410524:	call   0x4e0e620e
  410529:	sub    al,0x99
  41052b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41052c:	popa   
  41052d:	mov    WORD PTR [ebp+0x7fe3f82f],?
  410533:	push   ds
  410534:	jno    0x4105a8
  410536:	sbb    edx,DWORD PTR [ecx]
  410538:	out    0xa9,eax
  41053a:	or     DWORD PTR [esi-0xe],0xaaa8e3a
  410541:	jo     0x4104f1
  410543:	inc    edx
  410544:	iret   
  410545:	sbb    eax,0x6634e291
  41054a:	lahf   
  41054b:	push   esi
  41054c:	push   0x523a7d6c
  410551:	or     BYTE PTR [ebx+0x55],cl
  410554:	jno    0x410518
  410556:	and    BYTE PTR [ebp+0x4d],dl
  410559:	mov    edx,esp
  41055b:	sub    DWORD PTR [edx+0x6c],0xe8311260
  410562:	stc    
  410563:	add    bl,BYTE PTR [ebp-0x31]
  410566:	sbb    al,0x51
  410568:	cmp    esp,DWORD PTR [eax+0x7]
  41056b:	retf   0xdead
  41056e:	or     bl,dh
  410570:	xlat   BYTE PTR ds:[ebx]
  410571:	lea    edx,[edi-0x2b9a07bc]
  410577:	cmp    ecx,DWORD PTR [edx-0x78]
  41057a:	es mov esi,fs
  41057d:	mov    ecx,0xad7740cf
  410582:	test   eax,0xff84f20a
  410587:	fnstenv [eax]
  410589:	ja     0x4105d6
  41058b:	jno    0x410599
  41058d:	push   0xe
  41058f:	sbb    edx,DWORD PTR [ebx-0x64]
  410592:	iret   
  410593:	aas    
  410594:	sbb    ecx,DWORD PTR [eax+0x6d]
  410597:	int    0xf6
  410599:	pop    esi
  41059a:	or     al,0xd9
  41059c:	push   0xfffffffd
  41059e:	pop    es
  41059f:	xchg   ecx,eax
  4105a0:	inc    esi
  4105a1:	mov    ch,0xe6
  4105a3:	pop    ebx
  4105a4:	ja     0x41056b
  4105a6:	iret   
  4105a7:	dec    esp
  4105a8:	(bad)  
  4105a9:	les    ebp,FWORD PTR [edx+ebp*4-0x76071778]
  4105b0:	pop    ebp
  4105b1:	add    BYTE PTR [ebx-0x41a88b46],0x22
  4105b8:	psubsw mm0,QWORD PTR [edi]
  4105bb:	in     eax,dx
  4105bc:	data16 fidiv DWORD PTR [eax]
  4105bf:	lds    esi,FWORD PTR [ebp+edx*8+0xe]
  4105c3:	xor    BYTE PTR [esi+0x1dfca295],bh
  4105c9:	outs   dx,DWORD PTR ds:[esi]
  4105ca:	les    esi,FWORD PTR [edi-0x52]
  4105cd:	pushf  
  4105ce:	inc    ebx
  4105cf:	add    eax,0x6b729c3
  4105d4:	cmp    eax,0x9e4f1356
  4105d9:	pop    ebx
  4105da:	jmp    0x64be3497
  4105df:	int    0x8f
  4105e1:	mov    dl,0x86
  4105e3:	dec    esi
  4105e4:	xchg   DWORD PTR [edi-0x1],ebp
  4105e7:	cmp    eax,DWORD PTR [edx+0x46]
  4105ea:	test   DWORD PTR [ecx+0x4a377615],ebp
  4105f0:	aad    0x24
  4105f2:	ins    BYTE PTR es:[edi],dx
  4105f3:	jns    0x41062e
  4105f5:	mov    gs,WORD PTR [eax]
  4105f7:	cmp    BYTE PTR [edx-0x12a8cec0],ch
  4105fd:	xor    al,0xf0
  4105ff:	js     0x4105b7
  410601:	xor    al,0xfa
  410603:	out    0x6c,eax
  410605:	(bad)  
  410606:	jg     0x4105b1
  410608:	inc    esp
  410609:	sbb    eax,0x54eda969
  41060e:	ss (bad) 
  410610:	cld    
  410611:	dec    ebx
  410612:	pop    es
  410613:	hlt    
  410614:	jmp    DWORD PTR [ecx+edx*4]
  410617:	xor    al,0xef
  410619:	adc    DWORD PTR [esi+0x63],eax
  41061c:	jl     0x410616
  41061e:	sbb    al,0x3f
  410620:	xchg   ebp,eax
  410621:	push   ds
  410622:	pop    ebp
  410623:	push   es
  410624:	mov    eax,ds:0x55928ef1
  410629:	mov    dl,bl
  41062b:	cmc    
  41062c:	out    0xd0,al
  41062e:	ror    DWORD PTR [esp+ebx*2-0x5c],0x4b
  410633:	mov    al,0x52
  410635:	enter  0xdf74,0x6f
  410639:	repnz fstp TBYTE PTR [ebx+0xf]
  41063d:	mov    dh,0xe4
  41063f:	sbb    al,BYTE PTR [edi-0x23]
  410642:	mov    ebx,0x135fdd3a
  410647:	adc    eax,0xdca738fd
  41064c:	cs clc 
  41064e:	adc    bl,ah
  410650:	jmp    0x48b896af
  410655:	sar    DWORD PTR [ebx+0x23],cl
  410658:	dec    edi
  410659:	mov    dh,0x58
  41065b:	jnp    0x410647
  41065d:	stos   DWORD PTR es:[edi],eax
  41065e:	jge    0x410600
  410660:	jbe    0x4106d2
  410662:	push   ds
  410663:	inc    ebx
  410664:	mov    ebx,0xcca9c1eb
  410669:	lods   eax,DWORD PTR ds:[esi]
  41066a:	shl    BYTE PTR [edi+0x1e968211],cl
  410670:	pop    ds
  410671:	add    bl,cl
  410673:	shl    ebp,0x5b
  410676:	mov    edi,0x6209e58e
  41067b:	shr    al,0xb5
  41067e:	add    bh,BYTE PTR [edi-0x27df840]
  410684:	push   es
  410685:	xchg   edi,eax
  410686:	loopne 0x41061e
  410688:	in     al,dx
  410689:	stos   DWORD PTR es:[edi],eax
  41068a:	ja     0x410702
  41068c:	stos   BYTE PTR es:[edi],al
  41068d:	dec    esp
  41068e:	arpl   WORD PTR [esi-0x49],si
  410691:	dec    edx
  410692:	jae    0x41061d
  410694:	xchg   DWORD PTR [edi+eax*4+0x15],ecx
  410698:	fwait
  410699:	xchg   ebp,eax
  41069a:	jmp    0x2c6f:0x28d09522
  4106a1:	and    BYTE PTR [edx+0x3745348d],al
  4106a7:	fbld   TBYTE PTR [ecx]
  4106a9:	(bad)  
  4106aa:	fcomp  QWORD PTR [eax+edi*2-0x27]
  4106ae:	adc    DWORD PTR [eax-0x7b],ebx
  4106b1:	sahf   
  4106b2:	cmc    
  4106b3:	dec    eax
  4106b4:	retf   0xc2e3
  4106b7:	int    0xa2
  4106b9:	inc    ebp
  4106ba:	int    0x2
  4106bc:	xchg   esi,eax
  4106bd:	(bad)  
  4106be:	pop    edi
  4106bf:	pop    ds
  4106c0:	mov    ecx,ebp
  4106c2:	out    0xeb,eax
  4106c4:	pop    ebx
  4106c5:	and    al,0x5f
  4106c7:	mov    ecx,0x33fdb03b
  4106cc:	xchg   esp,eax
  4106cd:	inc    esi
  4106ce:	jo     0x41070f
  4106d0:	push   es
  4106d1:	clc    
  4106d2:	dec    edx
  4106d3:	sub    cl,BYTE PTR [edx-0x48]
  4106d6:	fsubr  QWORD PTR [ecx-0x319d133c]
  4106dc:	sbb    DWORD PTR [edi-0x65],ebp
  4106df:	mov    eax,ds:0xfbe73ff7
  4106e4:	inc    ebp
  4106e5:	(bad)  [edx-0x20]
  4106e8:	push   esp
  4106e9:	adc    BYTE PTR [ebp+0x4f7a0f47],bh
  4106ef:	push   ds
  4106f0:	push   es
  4106f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f2:	push   edi
  4106f3:	sbb    eax,0xf62928c8
  4106f8:	add    esi,DWORD PTR [edx-0x3cb8f013]
  4106fe:	push   esp
  4106ff:	popa   
  410700:	out    0x5e,al
  410702:	or     al,0xe6
  410704:	in     al,0x55
  410706:	jmp    DWORD PTR [edi]
  410708:	add    dl,bh
  41070a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41070b:	pop    esp
  41070c:	pop    eax
  41070d:	and    al,0x2b
  41070f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410710:	stc    
  410711:	cmp    DWORD PTR [edi],ecx
  410713:	xchg   ebx,eax
  410714:	out    dx,al
  410715:	aaa    
  410716:	(bad)  
  410718:	retf   
  410719:	mov    eax,ds:0xd2c92341
  41071e:	pop    edi
  41071f:	adc    al,0x39
  410721:	gs cli 
  410723:	call   0xb57c318e
  410728:	adc    DWORD PTR [edx+eiz*8+0x61],edx
  41072c:	push   ebx
  41072d:	push   ds
  41072e:	sub    dh,bh
  410730:	arpl   WORD PTR [ebx+ebx*8-0x3220bb17],sp
  410737:	sub    al,0x61
  410739:	fcmovnb st,st(2)
  41073b:	push   ebp
  41073c:	imul   edx,DWORD PTR ds:0x4c2188fb,0x1fec9396
  410746:	dec    ecx
  410747:	out    0x78,eax
  410749:	jb     0x4106e4
  41074b:	call   0xb3e4855
  410750:	adc    al,0x7c
  410752:	cmp    DWORD PTR [ebp+edx*8+0x4e],ebx
  410756:	mov    ebx,0x561f4260
  41075b:	dec    ecx
  41075c:	ror    ah,0xe9
  41075f:	fstp   TBYTE PTR [esi]
  410761:	pop    ds
  410762:	xchg   edi,eax
  410763:	and    DWORD PTR [edi-0x97a175d],ecx
  410769:	cli    
  41076a:	pusha  
  41076b:	in     eax,dx
  41076c:	or     DWORD PTR [esi-0x1b],ecx
  41076f:	retf   
  410770:	jo     0x41076d
  410772:	jp     0x4106fb
  410774:	or     esi,DWORD PTR [ebp-0x2d626ce9]
  41077a:	push   ds
  41077b:	adc    al,0x6d
  41077d:	cwde   
  41077e:	retf   0xb8c5
  410781:	mov    ds:0x2300ed87,al
  410786:	push   edi
  410787:	mov    WORD PTR [edx-0x6c],ds
  41078a:	push   0xffffffb5
  41078c:	and    eax,DWORD PTR [eax-0x50]
  41078f:	or     BYTE PTR [ebp-0x50d6712c],bh
  410795:	xor    DWORD PTR [esi+0x3e051be4],0xffffff8c
  41079c:	adc    BYTE PTR [ebx+ecx*1-0x427cb896],dl
  4107a3:	das    
  4107a4:	daa    
  4107a5:	jne    0x41081b
  4107a7:	xchg   esi,eax
  4107a8:	shr    DWORD PTR [ecx],cl
  4107aa:	(bad)  
  4107ab:	sub    esp,DWORD PTR [esi]
  4107ad:	out    0xe7,eax
  4107af:	cwde   
  4107b0:	icebp  
  4107b1:	adc    al,0x44
  4107b3:	lods   al,BYTE PTR ds:[esi]
  4107b4:	push   ecx
  4107b5:	dec    edx
  4107b6:	sub    DWORD PTR [eax+0x304ea3c9],ebx
  4107bc:	mov    dl,0x71
  4107be:	jo     0x410789
  4107c0:	movaps xmm4,xmm7
  4107c3:	test   BYTE PTR [edx],al
  4107c5:	call   0x38b88f09
  4107ca:	rol    BYTE PTR [ecx],cl
  4107cc:	jge    0x4107a2
  4107ce:	cdq    
  4107cf:	bound  ebx,QWORD PTR [ebx]
  4107d1:	dec    esi
  4107d2:	xchg   BYTE PTR ds:[eax],bl
  4107d5:	(bad)  
  4107d6:	div    al
  4107d8:	scas   eax,DWORD PTR es:[edi]
  4107d9:	aad    0x1c
  4107db:	cwde   
  4107dc:	inc    eax
  4107dd:	pop    eax
  4107de:	call   0xa31a:0x3d7a1af7
  4107e5:	dec    edx
  4107e6:	inc    ebx
  4107e7:	mov    cl,0x8d
  4107e9:	inc    eax
  4107ea:	pushf  
  4107eb:	and    DWORD PTR [edi],ebp
  4107ed:	or     BYTE PTR [esi],al
  4107ef:	sub    BYTE PTR [ecx],0xf3
  4107f2:	pop    esi
  4107f3:	jmp    0x410807
  4107f5:	pop    es
  4107f6:	imul   ebx,ecx,0xde3dd4f
  4107fc:	push   ebx
  4107fd:	push   ecx
  4107fe:	dec    esp
  4107ff:	dec    eax
  410800:	sub    DWORD PTR [edi],ecx
  410802:	das    
  410803:	pusha  
  410804:	cdq    
  410805:	dec    ebx
  410806:	out    0xc1,eax
  410808:	push   ss
  410809:	std    
  41080a:	inc    esp
  41080b:	retf   
  41080c:	sbb    bh,BYTE PTR [edx+0x74]
  41080f:	pop    ss
  410810:	sub    al,0x33
  410812:	and    DWORD PTR [ecx-0x2f692b6f],ecx
  410818:	(bad)  [ebp+0x14593b8b]
  41081e:	dec    edi
  41081f:	fdiv   DWORD PTR [edi-0x51]
  410822:	jns    0x4107fe
  410824:	sbb    esi,DWORD PTR [edi+0x1e30cbe3]
  41082a:	inc    edi
  41082b:	xor    bl,bh
  41082d:	jo     0x41088a
  41082f:	mov    ebx,0x224a9426
  410834:	push   eax
  410835:	or     esp,DWORD PTR [esi]
  410837:	sbb    ah,BYTE PTR cs:[esi+0x43]
  41083b:	nop
  41083c:	and    DWORD PTR [ebp+0x79a4676d],eax
  410842:	jns    0x41089b
  410844:	sub    al,al
  410846:	mov    eax,0xefa5a5e0
  41084b:	cmp    eax,0x25e1cab9
  410850:	sub    al,0x74
  410852:	xchg   esp,eax
  410853:	xor    bp,dx
  410856:	pop    esp
  410857:	into   
  410858:	mov    cl,0xde
  41085a:	leave  
  41085b:	div    BYTE PTR [edx]
  41085d:	into   
  41085e:	jle    0x4107fe
  410860:	mov    ebx,0x1ab738da
  410865:	sbb    BYTE PTR [eax+0x12a71c32],bl
  41086b:	cmp    DWORD PTR [esi+0x7f],esi
  41086e:	mov    al,ds:0x17b72b74
  410873:	add    ebp,eax
  410875:	shl    DWORD PTR [edx+0x69e3a99],0x63
  41087c:	sub    eax,DWORD PTR [ecx-0x16658f0b]
  410882:	cmc    
  410883:	fs xor ebx,esp
  410886:	add    ebp,eax
  410888:	cmp    eax,0x90721657
  41088d:	pusha  
  41088e:	lods   al,BYTE PTR ds:[esi]
  41088f:	cwde   
  410890:	pop    esp
  410891:	not    BYTE PTR [edx+esi*4]
  410894:	or     al,0xc5
  410896:	ins    DWORD PTR es:[edi],dx
  410897:	mov    ah,0x54
  410899:	adc    BYTE PTR [edi],dh
  41089b:	lahf   
  41089c:	fs sub eax,0x2c222f83
  4108a2:	sub    eax,0xb2495020
  4108a7:	add    DWORD PTR [esi],ebx
  4108a9:	pop    edx
  4108aa:	mov    ds:0x85cfd715,eax
  4108af:	inc    esi
  4108b0:	gs repz jmp 0x6a1e382e
  4108b7:	test   DWORD PTR [esi-0x59682641],ebp
  4108bd:	les    ecx,FWORD PTR [ecx]
  4108bf:	or     al,0x7e
  4108c1:	xor    edi,DWORD PTR [ecx]
  4108c3:	inc    edx
  4108c4:	pop    edi
  4108c5:	mov    bl,0x3a
  4108c7:	(bad)  
  4108c8:	mov    ch,0xe7
  4108ca:	xchg   esi,eax
  4108cb:	int3   
  4108cc:	test   al,0x25
  4108ce:	(bad)  
  4108cf:	pushf  
  4108d0:	cmp    BYTE PTR [ebx+eax*8-0x50d35583],0x39
  4108d8:	mov    DWORD PTR es:[ebx],0x896c8b62
  4108df:	dec    ebx
  4108e0:	xor    al,al
  4108e2:	jno    0x4108c1
  4108e4:	xchg   edx,eax
  4108e5:	retf   
  4108e6:	pusha  
  4108e7:	lock mov ds:0x8d1bacd7,al
  4108ed:	arpl   si,si
  4108ef:	ret    
  4108f0:	push   ebp
  4108f1:	fucomi st,st(4)
  4108f3:	mov    bh,ah
  4108f5:	(bad)  
  4108f6:	mov    dh,0xd
  4108f8:	adc    eax,0xe99dec98
  4108fd:	retf   0xee8a
  410900:	cmp    ebp,DWORD PTR [ebp+eiz*4-0x78]
  410904:	inc    edi
  410905:	jnp    0x41088d
  410907:	cmp    DWORD PTR [edi],esp
  410909:	fidivr DWORD PTR [ecx+ebp*8]
  41090c:	cmp    eax,0x7079c18c
  410911:	pop    esi
  410912:	mov    ecx,0x4795965e
  410917:	bnd js 0x410970
  41091a:	lock push eax
  41091c:	sub    dh,dh
  41091e:	in     al,0xef
  410920:	or     eax,0xec8dba0f
  410925:	jne    0x410925
  410927:	dec    ebx
  410928:	sbb    dl,BYTE PTR [esi-0x7a06f285]
  41092e:	push   esi
  41092f:	dec    eax
  410930:	stos   BYTE PTR es:[edi],al
  410931:	call   0xfff034b6
  410936:	lods   al,BYTE PTR ds:[esi]
  410937:	jo     0x4108e9
  410939:	popa   
  41093a:	pop    es
  41093b:	mov    BYTE PTR ss:[ebp+0x27af9fbb],ch
  410942:	sub    bl,BYTE PTR [ecx]
  410944:	jl     0x410974
  410946:	cmp    ebx,DWORD PTR [esi]
  410948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410949:	add    ecx,DWORD PTR [edx+0x1f]
  41094c:	jno    0x4108d0
  41094e:	or     BYTE PTR [edi+0x24bdaeb8],cl
  410954:	mov    bh,0x44
  410956:	xchg   ebx,eax
  410957:	cli    
  410958:	ror    DWORD PTR [ecx-0xb9ccc0c],0xea
  41095f:	fimul  WORD PTR [ebx+0x6aa70bd1]
  410965:	test   BYTE PTR [ecx],dh
  410967:	and    DWORD PTR [ebp-0x322caaf0],esp
  41096d:	leave  
  41096e:	jge    0x41095a
  410970:	lock je 0x410940
  410973:	sar    BYTE PTR [edi+edi*4],1
  410976:	mov    bl,0x1e
  410978:	xchg   esi,eax
  410979:	xchg   ecx,esi
  41097b:	and    eax,DWORD PTR [edi+0x284d12d]
  410981:	rcr    BYTE PTR [esi],cl
  410983:	xor    BYTE PTR [ebx+0x2f],bh
  410986:	add    ch,BYTE PTR [esi+0x31]
  410989:	pop    eax
  41098a:	aas    
  41098b:	nop
  41098c:	test   DWORD PTR [edi+0x20],0x919856a7
  410993:	adc    bh,BYTE PTR [edi]
  410995:	repnz pop ss
  410997:	sbb    edx,DWORD PTR [ebx+0x34]
  41099a:	push   ebp
  41099b:	sub    bh,al
  41099d:	and    DWORD PTR [ebx],0xfffffff3
  4109a0:	inc    ebx
  4109a1:	cwde   
  4109a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a3:	cdq    
  4109a4:	sahf   
  4109a5:	mov    ds:0x10e876ab,al
  4109aa:	ror    DWORD PTR [eax+0x1b6e6c0b],0xa4
  4109b1:	mov    ebx,0x6f80a28c
  4109b6:	popf   
  4109b7:	fcomp  QWORD PTR [ecx*1-0x5d70833f]
  4109be:	sahf   
  4109bf:	mov    edi,0xe5cb0d85
  4109c4:	neg    BYTE PTR [esi-0x77728d71]
  4109ca:	test   al,0x4e
  4109cc:	mov    edx,DWORD PTR [ecx]
  4109ce:	sub    BYTE PTR [edi],ah
  4109d0:	dec    edx
  4109d1:	out    dx,eax
  4109d2:	lods   eax,DWORD PTR ds:[esi]
  4109d3:	sbb    al,BYTE PTR [edi+esi*8+0xd]
  4109d7:	jno    0x41099f
  4109d9:	xchg   ebx,eax
  4109da:	mov    ch,0x16
  4109dc:	dec    ecx
  4109dd:	mov    bl,0x53
  4109df:	sbb    DWORD PTR [ebx+0x62],ecx
  4109e2:	fsub   st(6),st
  4109e4:	mov    esp,0x5873f2f1
  4109e9:	out    dx,al
  4109ea:	dec    ebp
  4109eb:	popf   
  4109ec:	mov    esp,0x13ab4b8f
  4109f1:	dec    edx
  4109f2:	inc    ebx
  4109f3:	push   es
  4109f4:	lods   al,BYTE PTR ds:[esi]
  4109f5:	xor    BYTE PTR [eax+ebx*8],bh
  4109f8:	test   BYTE PTR [ebx+0x7d325071],dh
  4109fe:	xchg   edi,eax
  4109ff:	out    0x29,al
  410a01:	jno    0x4109c4
  410a03:	cmc    
  410a04:	les    esi,FWORD PTR [eax]
  410a06:	sahf   
  410a07:	sar    ebp,cl
  410a09:	dec    eax
  410a0a:	push   0xffffff96
  410a0c:	stos   BYTE PTR es:[edi],al
  410a0d:	shl    DWORD PTR [edi+0x6c],0x13
  410a11:	or     ecx,DWORD PTR [eax+0x21cecb8f]
  410a17:	adc    ch,BYTE PTR [esi-0x1298f328]
  410a1d:	push   edx
  410a1e:	bound  eax,QWORD PTR [ecx+0x75]
  410a21:	cwde   
  410a22:	call   0x8ea0:0x3e734a39
  410a29:	cmp    al,0x4b
  410a2b:	sub    DWORD PTR [ebx-0x3c],0xad7dc112
  410a32:	nop
  410a33:	aam    0xd7
  410a35:	sbb    eax,0x57541aa0
  410a3a:	dec    eax
  410a3b:	or     esi,DWORD PTR [edi-0x1e294f77]
  410a41:	lods   al,BYTE PTR ds:[esi]
  410a42:	mov    ch,0xa
  410a44:	push   edi
  410a45:	jbe    0x410a49
  410a47:	scas   al,BYTE PTR es:[edi]
  410a48:	fs push 0x3f
  410a4b:	or     esp,DWORD PTR [ebx+edi*4]
  410a4e:	gs enter 0x6049,0xe4
  410a53:	xor    al,0x22
  410a55:	xchg   esp,eax
  410a56:	mov    eax,0xefdaf3fc
  410a5b:	or     eax,0x40ff5a06
  410a60:	mov    BYTE PTR [ebp+0x1f2b9526],ah
  410a66:	into   
  410a67:	iret   
  410a68:	inc    esi
  410a69:	ret    
  410a6a:	js     0x410a8d
  410a6c:	popa   
  410a6d:	mov    WORD PTR [edi-0x310d4e3a],cs
  410a73:	pop    ebp
  410a74:	inc    edx
  410a75:	or     al,0xf9
  410a77:	sbb    esp,DWORD PTR [ebx+ebx*1-0x8d2b5ca]
  410a7e:	dec    edi
  410a7f:	test   al,0xb3
  410a81:	int    0xb9
  410a83:	push   ds
  410a84:	sub    al,0xa1
  410a86:	(bad)  
  410a87:	out    0x52,al
  410a89:	call   DWORD PTR ds:0x17d0d694
  410a8f:	rcl    BYTE PTR [eax-0x1ddd0aa6],1
  410a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a96:	repnz xor cl,BYTE PTR [edx-0x3683ea7]
  410a9d:	ins    DWORD PTR es:[edi],dx
  410a9e:	shl    ebx,0x29
  410aa1:	inc    esi
  410aa2:	push   cs
  410aa3:	test   BYTE PTR [ecx],bh
  410aa5:	aaa    
  410aa6:	push   0x21
  410aa8:	in     eax,0x52
  410aaa:	jmp    0x253ef75c
  410aaf:	xchg   ebp,eax
  410ab0:	push   edx
  410ab1:	cmp    eax,0xc502372e
  410ab6:	shl    eax,0xbf
  410ab9:	mov    al,ds:0xf32360bc
  410abe:	outs   dx,DWORD PTR ds:[esi]
  410abf:	sahf   
  410ac0:	scas   al,BYTE PTR es:[edi]
  410ac1:	rep lods al,BYTE PTR ds:[esi]
  410ac3:	jo     0x410b13
  410ac5:	mov    ah,0x56
  410ac7:	cmp    DWORD PTR [edi],edx
  410ac9:	xor    ebp,DWORD PTR [esi]
  410acb:	dec    edx
  410acc:	jmp    0x654be13
  410ad1:	pop    edi
  410ad2:	xor    eax,0x18cc2d53
  410ad7:	in     eax,dx
  410ad8:	fdiv   QWORD PTR [esp+ebp*2]
  410adb:	xchg   edx,eax
  410adc:	test   eax,0x8944710a
  410ae2:	jae    0x410abc
  410ae4:	in     eax,dx
  410ae5:	in     eax,0xc7
  410ae7:	scas   al,BYTE PTR es:[edi]
  410ae8:	sar    DWORD PTR [edi-0x32e2405b],cl
  410aee:	inc    eax
  410aef:	leave  
  410af0:	loop   0x410aa4
  410af2:	xchg   DWORD PTR [ebp+ecx*8-0x3a],ebp
  410af6:	mov    DWORD PTR [edi+0x4361af9],edx
  410afc:	dec    eax
  410afd:	jg     0x410af5
  410aff:	xor    dh,ah
  410b01:	mov    ebx,0xf368d3cb
  410b06:	adc    BYTE PTR [ebx],dh
  410b08:	jecxz  0x410aed
  410b0a:	loope  0x410b4a
  410b0c:	adc    al,0xe4
  410b0e:	aam    0x23
  410b10:	jbe    0x410b29
  410b12:	repz mov ds:0xc917a22f,al
  410b18:	mov    dl,0x81
  410b1a:	xchg   ebx,eax
  410b1b:	dec    ecx
  410b1c:	ins    BYTE PTR es:[edi],dx
  410b1d:	pop    ebx
  410b1e:	push   cs
  410b1f:	pop    edx
  410b20:	loope  0x410b68
  410b22:	jg     0x410b5e
  410b24:	lock loope 0x410ab8
  410b27:	and    eax,0x29f22968
  410b2c:	ins    DWORD PTR es:[edi],dx
  410b2d:	mov    ebx,0x9f19091e
  410b32:	pop    ds
  410b33:	push   ebp
  410b34:	jecxz  0x410b52
  410b36:	inc    esi
  410b37:	jo     0x410b7c
  410b39:	dec    edi
  410b3a:	arpl   di,bp
  410b3c:	addr16 mov ds:0x6948,al
  410b40:	mov    esi,0xc9831e4e
  410b45:	and    DWORD PTR [ebx],0xffffffa3
  410b48:	sbb    cl,BYTE PTR [esi]
  410b4a:	or     bl,BYTE PTR [esi-0x4c3cb68a]
  410b50:	aad    0x47
  410b52:	mov    BYTE PTR [edi+0x2d],dl
  410b55:	nop
  410b56:	fstp   st(1)
  410b58:	call   0xce00e819
  410b5d:	xchg   BYTE PTR [ecx+0x7d],ch
  410b60:	sbb    ch,ch
  410b62:	rol    DWORD PTR [ebp-0x52],cl
  410b65:	mov    esp,0xc85e9db
  410b6a:	and    al,0x7f
  410b6c:	or     eax,0xf49250a8
  410b71:	pop    ecx
  410b72:	mov    bh,0x3d
  410b74:	mov    edx,0x30cccc09
  410b79:	into   
  410b7a:	(bad)  
  410b7b:	fcomp  QWORD PTR [ecx+0x64]
  410b7e:	xchg   bp,ax
  410b80:	push   ebx
  410b81:	inc    ebp
  410b82:	adc    ecx,esp
  410b84:	mov    ds:0x34d6ec27,eax
  410b89:	lods   eax,DWORD PTR ds:[esi]
  410b8a:	pop    edx
  410b8b:	leave  
  410b8c:	and    al,0xc4
  410b8e:	clc    
  410b8f:	mov    esi,DWORD PTR [edx+0x23]
  410b92:	sbb    DWORD PTR [edx-0x68],ecx
  410b95:	sbb    esp,DWORD PTR [ecx+0x2c]
  410b98:	mov    al,ds:0x4c29ad26
  410b9d:	jno    0x410b52
  410b9f:	push   es
  410ba0:	mov    edx,0x52be648b
  410ba5:	push   0x89e83148
  410baa:	fs gs std 
  410bad:	ja     0x410be2
  410baf:	mov    esi,0xc4cc9b12
  410bb4:	cmp    eax,0x130f760
  410bb9:	repz or ebp,DWORD PTR [esi]
  410bbc:	mov    ch,0x86
  410bbe:	les    esi,FWORD PTR [esi*4-0x4fdeea0d]
  410bc5:	les    ecx,FWORD PTR [eax-0x105a64b0]
  410bcb:	pop    ebx
  410bcc:	dec    ebx
  410bcd:	cs adc ch,bh
  410bd0:	xchg   BYTE PTR [ecx+0x31c1e4f5],dh
  410bd6:	pop    edi
  410bd7:	xchg   ebx,eax
  410bd8:	mov    al,0x68
  410bda:	pop    edx
  410bdb:	pop    es
  410bdc:	stc    
  410bdd:	add    bh,BYTE PTR [edx+ebx*8-0x4aafe6ec]
  410be4:	or     ebp,edi
  410be6:	std    
  410be7:	lea    edx,[edx+0x3]
  410bea:	leave  
  410beb:	inc    ecx
  410bec:	sub    dh,BYTE PTR [ebp-0x28f7c5ae]
  410bf2:	push   ds
  410bf3:	dec    edi
  410bf4:	rol    BYTE PTR ds:0x84e91f84,1
  410bfa:	mov    bh,0xfa
  410bfc:	pop    ebx
  410bfd:	out    dx,eax
  410bfe:	call   0xea3d2ce0
  410c03:	std    
  410c04:	test   ch,bh
  410c06:	pop    ss
  410c07:	inc    edx
  410c08:	out    0x32,al
  410c0a:	cmp    edi,eax
  410c0c:	int    0x66
  410c0e:	and    al,0x6d
  410c10:	add    al,0x1a
  410c12:	pop    es
  410c13:	setle  BYTE PTR [ebp-0x52b7a0e8]
  410c1a:	cmp    DWORD PTR [edx+0x1c51bdc6],esp
  410c20:	cwde   
  410c21:	out    0x46,eax
  410c23:	leave  
  410c24:	sar    BYTE PTR [edx],0xf5
  410c27:	mov    ecx,0xedbcaa00
  410c2c:	adc    BYTE PTR [edi],bl
  410c2e:	cwde   
  410c2f:	js     0x410c07
  410c31:	mov    ds:0xb6513d73,al
  410c36:	ret    
  410c37:	popf   
  410c38:	xchg   ebp,eax
  410c39:	add    dl,al
  410c3b:	scas   eax,DWORD PTR es:[edi]
  410c3c:	fcomip st,st(7)
  410c3e:	test   eax,0x91a346ff
  410c43:	stos   DWORD PTR es:[edi],eax
  410c44:	imul   ebx,DWORD PTR ds:0x72292fa2,0xdd45e01e
  410c4e:	xor    edx,DWORD PTR [eax+0x70]
  410c51:	jns    0x410c52
  410c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c54:	xchg   edx,eax
  410c55:	xchg   ebx,eax
  410c56:	xchg   esp,eax
  410c57:	cli    
  410c58:	stos   DWORD PTR es:[edi],eax
  410c59:	sbb    eax,0x1c2babf2
  410c5e:	and    esp,DWORD PTR [ecx+0x23e4293c]
  410c64:	lock push 0xffffffab
  410c67:	cli    
  410c68:	push   edi
  410c69:	(bad)  
  410c6a:	std    
  410c6b:	sub    eax,0xc68d1395
  410c70:	add    ch,ah
  410c72:	arpl   WORD PTR ds:0x8a5cb67b,ax
  410c78:	jmp    0x6fba:0xe88100a5
  410c7f:	mov    ch,0xec
  410c81:	fwait
  410c82:	out    0x2,eax
  410c84:	outs   dx,BYTE PTR ds:[esi]
  410c85:	je     0x410c83
  410c87:	inc    esi
  410c88:	xchg   edx,eax
  410c89:	in     eax,0x57
  410c8b:	cs mov eax,0xddb0c08f
  410c91:	and    esp,edx
  410c93:	mov    dl,0xa6
  410c95:	in     eax,0x1a
  410c97:	dec    edi
  410c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c99:	or     DWORD PTR [ebx+esi*8+0x2f],edi
  410c9d:	sbb    ch,ch
  410c9f:	jmp    0x410c64
  410ca1:	add    BYTE PTR [ecx-0x6b],0xa2
  410ca5:	in     eax,dx
  410ca6:	and    BYTE PTR [esi-0x480ebf26],0x7b
  410cad:	mov    bh,0x65
  410caf:	mov    esp,0x9dec8898
  410cb4:	dec    edi
  410cb5:	in     al,0x76
  410cb7:	sub    ch,BYTE PTR [eax]
  410cb9:	lods   al,BYTE PTR ds:[esi]
  410cba:	xchg   ebp,eax
  410cbb:	pushf  
  410cbc:	jo     0x410c9e
  410cbe:	imul   edi,DWORD PTR [eax],0xfffffff4
  410cc1:	loopne 0x410c9f
  410cc3:	xchg   ebx,eax
  410cc4:	in     al,dx
  410cc5:	aad    0x12
  410cc7:	test   eax,0x5a758642
  410ccc:	out    dx,al
  410ccd:	jp     0x410d08
  410ccf:	dec    edi
  410cd0:	cdq    
  410cd1:	lods   al,BYTE PTR ds:[esi]
  410cd2:	add    dl,BYTE PTR [esi+0xe]
  410cd5:	ins    BYTE PTR es:[edi],dx
  410cd6:	inc    edx
  410cd7:	adc    al,0x14
  410cd9:	std    
  410cda:	jge    0x410cf3
  410cdc:	fimul  WORD PTR [ebx]
  410cde:	jmp    0xbdc2ca5b
  410ce3:	jae    0x410d22
  410ce5:	jbe    0x410caa
  410ce7:	push   ecx
  410ce8:	or     DWORD PTR [edx+0x7e],esi
  410ceb:	add    BYTE PTR [esi-0x38],bh
  410cee:	mov    cl,0xe7
  410cf0:	push   es
  410cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf2:	fs icebp 
  410cf4:	mov    ds:0xfb72c633,eax
  410cf9:	lea    esi,[ebp+0x1c7cb54a]
  410cff:	imul   ebx,DWORD PTR [edx-0x7290a390],0xffffff87
  410d06:	xchg   esp,eax
  410d07:	pop    edi
  410d08:	sub    dh,BYTE PTR [ecx-0x29]
  410d0b:	shl    DWORD PTR [eax+0x71],0x2b
  410d0f:	dec    esp
  410d10:	push   eax
  410d11:	loope  0x410d70
  410d13:	or     DWORD PTR [edi+0x21],edi
  410d16:	dec    eax
  410d17:	mov    ebp,0xaabc7889
  410d1c:	mov    esp,ebp
  410d1e:	xchg   ebx,ecx
  410d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d21:	pop    esi
  410d22:	dec    ecx
  410d23:	xchg   ebp,eax
  410d24:	mov    ah,0x35
  410d26:	ins    BYTE PTR es:[edi],dx
  410d27:	or     DWORD PTR [ecx+0x2f],ebp
  410d2a:	or     dl,cl
  410d2c:	test   BYTE PTR [eax-0x101eb21b],cl
  410d32:	add    ebx,ebx
  410d34:	retf   0x135b
  410d37:	xor    bl,BYTE PTR [edx]
  410d39:	(bad)  
  410d3a:	popf   
  410d3b:	sbb    eax,0xa813c40e
  410d40:	sahf   
  410d41:	sbb    DWORD PTR [esi],edi
  410d43:	loop   0x410dba
  410d45:	cmp    al,0x56
  410d47:	sbb    BYTE PTR [eax],bh
  410d49:	mov    dl,0x3
  410d4b:	xchg   ebp,eax
  410d4c:	in     eax,dx
  410d4d:	sbb    DWORD PTR ds:0x887832bf,edi
  410d53:	jns    0x410dc5
  410d55:	cli    
  410d56:	add    eax,0xe5777393
  410d5b:	js     0x410d8a
  410d5d:	xchg   ebp,ebx
  410d5f:	aaa    
  410d60:	xchg   esi,eax
  410d61:	pop    DWORD PTR [ebp-0x514d190e]
  410d67:	js     0x410d2f
  410d69:	mov    ebx,0xb133001f
  410d6e:	in     al,dx
  410d6f:	popa   
  410d70:	daa    
  410d71:	pop    esp
  410d72:	xchg   edi,eax
  410d73:	clc    
  410d74:	jne    0x410d62
  410d76:	fwait
  410d77:	test   eax,0xcc3abbe9
  410d7c:	pop    ebx
  410d7d:	push   ebx
  410d7e:	hlt    
  410d7f:	add    ch,BYTE PTR [eax-0x39]
  410d82:	inc    edx
  410d83:	cmp    ah,BYTE PTR [esp+ecx*2]
  410d86:	pop    ebp
  410d87:	xchg   ebp,eax
  410d88:	xchg   edx,eax
  410d89:	inc    edi
  410d8a:	and    eax,0x645babb0
  410d8f:	fwait
  410d90:	adc    eax,0xa592b046
  410d95:	popa   
  410d96:	fiadd  WORD PTR [edi+0x45]
  410d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d9a:	ins    DWORD PTR es:[edi],dx
  410d9b:	push   edx
  410d9c:	sub    al,0x95
  410d9e:	hlt    
  410d9f:	and    bl,ah
  410da1:	adc    eax,0xae10899e
  410da6:	mov    esp,0x21937859
  410dab:	iret   
  410dac:	ficomp DWORD PTR [edx-0x4c]
  410daf:	pop    ecx
  410db0:	mov    ds:0xf78ddf8d,eax
  410db5:	xchg   BYTE PTR [ecx],ch
  410db7:	fcmove st,st(4)
  410db9:	stc    
  410dba:	outs   dx,DWORD PTR ds:[esi]
  410dbb:	fimul  WORD PTR [eax]
  410dbd:	mov    ?,WORD PTR [edi-0x3e]
  410dc0:	and    cl,dh
  410dc2:	adc    ch,ah
  410dc4:	mov    edi,0x2f4191a1
  410dc9:	jle    0x410d89
  410dcb:	out    0x82,al
  410dcd:	in     al,0x19
  410dcf:	inc    edx
  410dd0:	xchg   bl,al
  410dd2:	test   eax,0x87812cfb
  410dd7:	stos   BYTE PTR es:[edi],al
  410dd8:	les    esp,FWORD PTR [ecx-0x1a691b39]
  410dde:	hlt    
  410ddf:	or     al,0xef
  410de1:	xchg   BYTE PTR [edx+0x7d],cl
  410de4:	sub    ah,dh
  410de6:	mov    DWORD PTR [edi-0x1b],esi
  410de9:	mov    dl,0xdd
  410deb:	lahf   
  410dec:	cmp    bh,al
  410dee:	jbe    0x410d97
  410df0:	push   ds
  410df1:	gs cdq 
  410df3:	inc    esp
  410df4:	lahf   
  410df5:	jno    0x410dcc
  410df7:	xor    eax,0x6fdf09ae
  410dfc:	pop    ss
  410dfd:	(bad)  
  410dff:	xchg   BYTE PTR [esi+0x55],bh
  410e02:	addr16 in al,0x42
  410e05:	cdq    
  410e06:	adc    cl,BYTE PTR [edx]
  410e08:	push   es
  410e09:	test   bl,bh
  410e0b:	fs cwde 
  410e0d:	dec    ebx
  410e0e:	adc    BYTE PTR ds:[esi],ch
  410e11:	imul   eax,DWORD PTR [eax+0x33],0x5435832b
  410e18:	xchg   ecx,eax
  410e19:	lods   eax,DWORD PTR ds:[esi]
  410e1a:	ds jnp 0x410e84
  410e1d:	cwde   
  410e1e:	into   
  410e1f:	ins    DWORD PTR es:[edi],dx
  410e20:	outs   dx,BYTE PTR ds:[esi]
  410e21:	ins    DWORD PTR es:[edi],dx
  410e22:	push   esi
  410e23:	adc    DWORD PTR [edi-0x6df41d83],ebp
  410e29:	push   ss
  410e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e2b:	jae    0x410dd0
  410e2d:	repz (bad) 
  410e30:	inc    esi
  410e31:	outs   dx,DWORD PTR ds:[esi]
  410e32:	popa   
  410e33:	pop    ecx
  410e34:	dec    ebx
  410e35:	push   esp
  410e36:	push   0xb8febf0c
  410e3b:	ficomp DWORD PTR [ecx-0x198f0af8]
  410e41:	push   0x8bc76a4e
  410e46:	xor    eax,0x3e5e052e
  410e4b:	push   ebp
  410e4c:	dec    ecx
  410e4d:	and    al,ch
  410e4f:	fimul  DWORD PTR [ebx]
  410e51:	bound  ebp,QWORD PTR [ecx+0x71b4e1]
  410e57:	xchg   DWORD PTR [ebp-0x37d11d52],esp
  410e5d:	rcr    edx,1
  410e5f:	xor    esi,DWORD PTR [eax+0x1c]
  410e62:	out    0x74,eax
  410e64:	cmc    
  410e65:	fld    st(7)
  410e67:	fild   DWORD PTR [ebx-0x8]
  410e6a:	cmc    
  410e6b:	cmpxchg BYTE PTR [edi+0x53],al
  410e6f:	(bad)  
  410e70:	mov    esi,0x6b52ea6d
  410e75:	jno    0x410ecd
  410e77:	and    edx,DWORD PTR [ebp+eiz*8-0x1807f47b]
  410e7e:	xchg   ebx,eax
  410e7f:	pop    edx
  410e80:	ret    
  410e81:	cmc    
  410e82:	nop
  410e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e84:	retf   
  410e85:	adc    esp,DWORD PTR cs:[esi+0x1378f45c]
  410e8c:	cmp    DWORD PTR fs:[esi+0x36e14887],esp
  410e93:	sbb    al,0xdf
  410e95:	mov    al,0xf8
  410e97:	(bad)  
  410e98:	rol    DWORD PTR [ebp+ebx*2-0x54],1
  410e9c:	mov    DWORD PTR [eax+0x53],ebp
  410e9f:	sbb    BYTE PTR [ecx-0x16],dl
  410ea2:	sar    BYTE PTR [esi],1
  410ea4:	add    al,0x4c
  410ea6:	mov    gs,WORD PTR [edx-0x6eff9c57]
  410eac:	mov    bh,0x5c
  410eae:	pop    ecx
  410eaf:	out    0x8e,al
  410eb1:	repnz neg BYTE PTR [ebp-0x436634ef]
  410eb8:	scas   eax,DWORD PTR es:[edi]
  410eb9:	pop    esi
  410eba:	lahf   
  410ebb:	dec    edi
  410ebc:	mov    eax,ds:0x291dd69d
  410ec1:	sbb    cl,al
  410ec3:	js     0x410e48
  410ec5:	xchg   bh,dl
  410ec7:	fistp  WORD PTR [edi+0x2b99db9d]
  410ecd:	outs   dx,BYTE PTR ds:[esi]
  410ece:	inc    edi
  410ecf:	and    BYTE PTR [edi+0xfca4561],0xf4
  410ed6:	xchg   ebp,eax
  410ed7:	ins    DWORD PTR es:[edi],dx
  410ed8:	(bad)  
  410eda:	clc    
  410edb:	inc    edi
  410edc:	aad    0x4e
  410ede:	repnz sbb BYTE PTR ds:0xbf1f8037,bh
  410ee5:	inc    ecx
  410ee6:	jmp    0x410f27
  410ee8:	hlt    
  410ee9:	adc    eax,0xd659e89f
  410eee:	(bad)  
  410eef:	hlt    
  410ef0:	pushf  
  410ef1:	push   esi
  410ef2:	pushf  
  410ef3:	outs   dx,BYTE PTR cs:[esi]
  410ef5:	mov    edx,0x7cb0089c
  410efa:	loop   0x410f53
  410efc:	stc    
  410efd:	cmp    al,0xba
  410eff:	stos   BYTE PTR es:[edi],al
  410f00:	mov    ecx,0x82dc0804
  410f05:	std    
  410f06:	(bad)  
  410f07:	xchg   ebx,eax
  410f08:	dec    esi
  410f09:	popf   
  410f0a:	lds    ecx,FWORD PTR [edx]
  410f0c:	cwde   
  410f0d:	(bad)  
  410f0e:	push   ebx
  410f0f:	push   es
  410f10:	push   ebx
  410f11:	into   
  410f12:	mov    gs,WORD PTR [edx]
  410f14:	hlt    
  410f15:	or     eax,0xa7154547
  410f1a:	and    dl,al
  410f1c:	pop    ds
  410f1d:	cld    
  410f1e:	cmp    eax,DWORD PTR [ebx+ebp*8+0x66]
  410f22:	mov    edx,0x3354b15d
  410f27:	fild   QWORD PTR [ecx-0x27]
  410f2a:	out    0x28,eax
  410f2c:	xchg   esp,eax
  410f2d:	imul   esp,DWORD PTR [edi+eax*4+0x26],0x89dcb8c4
  410f35:	xor    eax,0x2f3f0ee2
  410f3a:	daa    
  410f3b:	std    
  410f3c:	je     0x410ee5
  410f3e:	inc    ecx
  410f3f:	adc    eax,0x3b2bd8c3
  410f44:	aad    0x96
  410f46:	xchg   ebx,eax
  410f47:	cmp    al,0x76
  410f49:	adc    BYTE PTR [eax],0xa1
  410f4c:	and    bl,BYTE PTR [ecx]
  410f4e:	inc    ebp
  410f4f:	aad    0x7
  410f51:	pop    ds
  410f52:	test   DWORD PTR [esi],edi
  410f54:	add    DWORD PTR [edx],edx
  410f56:	lods   al,BYTE PTR ds:[esi]
  410f57:	fcmove st,st(4)
  410f59:	push   esi
  410f5a:	test   al,0xaf
  410f5c:	and    DWORD PTR [edi-0x57766b40],ebx
  410f62:	call   0x54f:0x285c2483
  410f69:	inc    edx
  410f6a:	pop    ss
  410f6b:	mov    cl,0x90
  410f6d:	jnp    0x410feb
  410f6f:	inc    esi
  410f70:	pop    ds
  410f71:	mov    esp,0xf5c5d639
  410f76:	fs mov ah,ah
  410f79:	mov    ah,0x36
  410f7b:	aam    0xdb
  410f7d:	arpl   WORD PTR [edi+0x12],ax
  410f80:	cmc    
  410f81:	jle    0x410fa1
  410f83:	cmp    al,0xa2
  410f85:	add    al,0x29
  410f87:	jne    0x410f35
  410f89:	mov    ds:0x95105a13,eax
  410f8e:	in     eax,0x9e
  410f90:	inc    edi
  410f91:	ins    BYTE PTR es:[edi],dx
  410f92:	mov    cl,0x5d
  410f94:	inc    ecx
  410f95:	push   edi
  410f96:	sbb    BYTE PTR [edx],dl
  410f98:	mov    WORD PTR [ecx-0x1ed68166],es
  410f9e:	and    bh,ch
  410fa0:	jnp    0x410f3c
  410fa2:	xchg   ebp,esi
  410fa4:	nop
  410fa5:	add    ebx,DWORD PTR [eax-0x47]
  410fa8:	loopne 0x410fb1
  410faa:	pop    ss
  410fab:	test   bl,dh
  410fad:	cwde   
  410fae:	retf   
  410faf:	jno    0x410f57
  410fb1:	sbb    DWORD PTR [edx],esp
  410fb3:	rcl    DWORD PTR [ebp+0x52],cl
  410fb6:	jl     0x410f9b
  410fb8:	jae    0x410f3d
  410fba:	(bad)  
  410fbb:	jge    0x411006
  410fbd:	fwait
  410fbe:	mov    esi,0x86299ab2
  410fc3:	mov    dh,0x85
  410fc5:	mov    ds:0x63671f3,eax
  410fca:	test   BYTE PTR [ebp+0x5f],dh
  410fcd:	sub    ch,BYTE PTR [ecx-0x40]
  410fd0:	add    eax,0xe01cfefd
  410fd5:	stos   DWORD PTR es:[edi],eax
  410fd6:	cli    
  410fd7:	lea    ecx,[esi+0x36c3030d]
  410fdd:	frstor [edx-0x18]
  410fe0:	mov    ds:0xf1bf0f90,eax
  410fe5:	xor    eax,0xe65526f1
  410fea:	sbb    eax,0x4e5c1d01
  410fef:	popf   
  410ff0:	das    
  410ff1:	out    dx,eax
  410ff2:	push   es
  410ff3:	mov    ecx,0x9d13a49a
  410ff8:	fs pop edx
  410ffa:	add    DWORD PTR [edi+0x37cee632],ecx
  411000:	ror    BYTE PTR ds:0x3d6ccf14,0x45
  411007:	scas   al,BYTE PTR es:[edi]
  411008:	jo     0x410f94
  41100a:	jle    0x410fbb
  41100c:	fiadd  WORD PTR [edi+0x450f1c24]
  411012:	xchg   ecx,eax
  411013:	sbb    al,0xee
  411015:	xchg   esi,eax
  411016:	push   edi
  411017:	dec    esi
  411018:	jecxz  0x41100d
  41101a:	jecxz  0x410fd2
  41101c:	cmp    BYTE PTR [esi+0x0],0x21
  411020:	push   ebp
  411021:	mov    dl,0xa7
  411023:	jge    0x411036
  411025:	sbb    dh,al
  411027:	std    
  411028:	inc    cx
  41102a:	int    0xf1
  41102c:	sub    dl,0x17
  41102f:	push   es
  411030:	jae    0x41106a
  411032:	adc    eax,DWORD PTR [ebx+0x13a7e673]
  411038:	jecxz  0x410fc1
  41103a:	(bad)  
  41103b:	outs   dx,DWORD PTR ds:[esi]
  41103c:	xchg   esp,eax
  41103d:	inc    esp
  41103e:	mov    ebx,0x927c2739
  411043:	test   DWORD PTR [edx],esi
  411045:	xchg   edx,eax
  411046:	xor    al,0xe9
  411048:	je     0x4110b1
  41104a:	iret   
  41104b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41104c:	in     eax,0x8f
  41104e:	jmp    0x411094
  411050:	arpl   bx,cx
  411052:	add    ebx,DWORD PTR [ebp+0x6b203a22]
  411058:	inc    eax
  411059:	jb     0x411070
  41105b:	jne    0x411091
  41105d:	jmp    0x41d5eeec
  411062:	ins    DWORD PTR es:[edi],dx
  411063:	push   ds
  411064:	sbb    BYTE PTR [ebx+0x5a4d0a31],0x3b
  41106b:	out    0xb,eax
  41106d:	stc    
  41106e:	retf   0xd654
  411071:	fucomi st,st(7)
  411073:	pusha  
  411074:	(bad)  
  411075:	call   0xe3b3:0x2522024e
  41107c:	sub    DWORD PTR [ecx],esi
  41107e:	shl    DWORD PTR [ebp+edi*8+0x47],cl
  411082:	dec    esi
  411083:	test   ah,ch
  411085:	jmp    0xcea7:0xfbf6144c
  41108c:	adc    esp,ebp
  41108e:	aam    0x88
  411090:	outs   dx,DWORD PTR ds:[esi]
  411091:	xchg   ebp,eax
  411092:	push   ecx
  411093:	xor    ah,BYTE PTR [eax-0x1b]
  411096:	jbe    0x41102b
  411098:	cmp    BYTE PTR [esi],ah
  41109a:	test   al,0xbe
  41109c:	dec    esp
  41109d:	fisubr WORD PTR [eax]
  41109f:	or     BYTE PTR [edi+0x4f89e753],cl
  4110a5:	jmp    0xa0b0:0xdd90d4a0
  4110ac:	ror    BYTE PTR [edx],cl
  4110ae:	jg     0x411112
  4110b0:	bound  edi,QWORD PTR [ebp-0x6d]
  4110b3:	push   0xeb94ac0b
  4110b8:	sar    ah,0xae
  4110bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110bc:	xor    eax,0xfae8b882
  4110c1:	shl    DWORD PTR [ecx+edi*4-0xb],1
  4110c5:	sbb    ch,al
  4110c7:	cld    
  4110c8:	pop    esi
  4110c9:	mov    ebx,0x813b0138
  4110ce:	xchg   ebp,eax
  4110cf:	rcr    BYTE PTR [edi],cl
  4110d1:	jnp    0x4110b5
  4110d3:	jle    0x411082
  4110d5:	lods   eax,DWORD PTR ds:[esi]
  4110d6:	cmp    eax,0x5fbc2a40
  4110db:	push   esp
  4110dc:	mov    al,0xe4
  4110de:	or     DWORD PTR [ebx-0x5f],0x201c1529
  4110e5:	push   eax
  4110e6:	ret    
  4110e7:	fisub  DWORD PTR [ebp+0x332aa64d]
  4110ed:	mov    eax,0x2404061e
  4110f2:	ds add al,0x50
  4110f5:	sbb    BYTE PTR [eax],ch
  4110f7:	sub    DWORD PTR [ecx+0x6a],ecx
  4110fa:	inc    esi
  4110fb:	sbb    DWORD PTR [ebp+0x5542d71a],eax
  411101:	lods   al,BYTE PTR ds:[esi]
  411102:	(bad)  
  411103:	cmc    
  411104:	and    DWORD PTR [edx],ebx
  411106:	ss std 
  411108:	loope  0x411174
  41110a:	repnz push cs
  41110c:	xor    BYTE PTR [edx-0x60f3591e],dh
  411112:	cmp    edx,DWORD PTR [edi-0x62]
  411115:	loopne 0x411178
  411117:	lods   al,BYTE PTR ds:[esi]
  411118:	adc    BYTE PTR [edx],dh
  41111a:	lock or BYTE PTR [ebx],0xf1
  41111e:	(bad)  
  41111f:	jle    0x4110dc
  411121:	xor    BYTE PTR [ebx-0x36e82c5e],dh
  411127:	xor    DWORD PTR [ebx+0x38d22be0],eax
  41112d:	imul   ecx,DWORD PTR [edx],0x44a5dd32
  411133:	dec    edx
  411134:	neg    BYTE PTR ds:0x1014a8d3
  41113a:	xchg   edi,eax
  41113b:	sbb    eax,0x4de3db41
  411140:	lds    ebp,FWORD PTR [edx]
  411142:	ins    DWORD PTR es:[edi],dx
  411143:	fidiv  WORD PTR [edi-0x77061cbb]
  411149:	(bad)  
  41114a:	fldcw  WORD PTR [esi-0x6f]
  41114d:	call   0x83942500
  411152:	cdq    
  411153:	cmp    bl,dl
  411155:	ins    DWORD PTR es:[edi],dx
  411156:	std    
  411157:	(bad)  
  411158:	jnp    0x411161
  41115a:	mov    eax,0x848dd543
  41115f:	xchg   ebp,eax
  411160:	push   ecx
  411161:	loopne 0x411180
  411163:	jo     0x4111c7
  411165:	and    eax,0x62c21ad
  41116a:	xchg   DWORD PTR [ecx],eax
  41116c:	xor    BYTE PTR [esi-0x7ecc164c],0xe4
  411173:	sub    al,BYTE PTR [ebp-0x38ad8a47]
  411179:	aam    0x20
  41117b:	dec    eax
  41117c:	fadd   st(4),st
  41117e:	adc    DWORD PTR [esi],0x87ecac27
  411184:	pusha  
  411185:	out    0xc0,al
  411187:	bound  ecx,QWORD PTR ds:0x2590663c
  41118d:	jne    0x411179
  41118f:	fs push edx
  411191:	jge    0x4111eb
  411193:	mov    eax,ds:0x3f763490
  411198:	push   ebx
  411199:	rcl    DWORD PTR [ecx-0x43],cl
  41119c:	mov    ah,0x53
  41119e:	pop    edx
  41119f:	adc    ch,BYTE PTR [edx+0x20]
  4111a2:	cld    
  4111a3:	cmc    
  4111a4:	mov    ebp,0xfc3dec41
  4111a9:	cld    
  4111aa:	in     al,dx
  4111ab:	pop    ecx
  4111ac:	(bad)  
  4111ad:	out    0xb0,al
  4111af:	pushf  
  4111b0:	xor    al,0x8
  4111b2:	cmp    eax,0x6f29a621
  4111b7:	into   
  4111b8:	repnz push esi
  4111ba:	int3   
  4111bb:	imul   ebp,DWORD PTR [esi+0x7],0xe48a7e6a
  4111c2:	ror    ah,0xcd
  4111c5:	icebp  
  4111c6:	sbb    al,0x27
  4111c8:	adc    DWORD PTR [ebx+0x15d8ebbb],ecx
  4111ce:	sahf   
  4111cf:	push   fs
  4111d1:	fld    st(0)
  4111d3:	jp     0x411235
  4111d5:	test   BYTE PTR [eax],ch
  4111d7:	fist   WORD PTR gs:[eax+0x70]
  4111db:	scas   eax,DWORD PTR es:[edi]
  4111dc:	fs int 0xf4
  4111df:	aam    0xba
  4111e1:	sbb    bl,BYTE PTR [ebp+0x4c9ee877]
  4111e7:	sbb    eax,0x9f932f9d
  4111ec:	mov    esp,0x2c47e0f3
  4111f1:	mov    ss,ecx
  4111f3:	sbb    eax,eax
  4111f5:	mov    esi,0xb7004b3c
  4111fa:	mov    ds:0x3b6d6882,eax
  4111ff:	fbld   TBYTE PTR [edi+0x1d]
  411202:	bound  ebx,QWORD PTR [edi]
  411204:	stos   BYTE PTR es:[edi],al
  411205:	shl    esi,cl
  411207:	mov    edi,0xd7c9ddd7
  41120c:	hlt    
  41120d:	xlat   BYTE PTR ds:[ebx]
  41120e:	jo     0x4111a9
  411210:	data16 sub dh,bh
  411213:	push   es
  411214:	and    al,0x4c
  411216:	push   edi
  411217:	push   esp
  411218:	add    eax,0x4ee72f0b
  41121d:	inc    edx
  41121e:	sub    al,0xcf
  411220:	cmp    al,0x5b
  411222:	mov    ch,0x6e
  411224:	aas    
  411225:	les    esp,FWORD PTR [ecx-0x4fae2ddd]
  41122b:	jb     0x4111ae
  41122d:	cdq    
  41122e:	dec    ebx
  41122f:	jg     0x41126d
  411231:	pop    ecx
  411232:	cmp    eax,0xde1f94e2
  411237:	push   es
  411238:	mov    dl,0xdb
  41123a:	inc    ebx
  41123b:	iret   
  41123c:	nop
  41123d:	pop    edx
  41123e:	sbb    al,0xd4
  411240:	xchg   ecx,eax
  411241:	push   0xc040dae1
  411246:	test   BYTE PTR [ecx+edx*8-0xb52b631],cl
  41124d:	aaa    
  41124e:	xchg   esi,eax
  41124f:	imul   ebp,ebp,0x1d
  411252:	and    ecx,ebp
  411254:	cmc    
  411255:	mov    ds:0x16fc5060,eax
  41125a:	les    esi,FWORD PTR [eax-0x21e837d1]
  411260:	loop   0x4112c9
  411262:	add    ecx,eax
  411264:	dec    ebp
  411265:	jmp    0x4112bb
  411267:	dec    ebx
  411268:	adc    DWORD PTR [esi+0xf],ecx
  41126b:	and    al,0xdf
  41126d:	pop    ebx
  41126e:	arpl   cx,di
  411270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411271:	loopne 0x411226
  411273:	fiadd  WORD PTR [edi+0x4122a2f1]
  411279:	mov    ecx,0xe952101
  41127e:	ret    0x343b
  411281:	scas   al,BYTE PTR es:[edi]
  411282:	nop
  411283:	push   edx
  411284:	pusha  
  411285:	cmp    eax,DWORD PTR [ebx+0x2eacc28d]
  41128b:	repz fnstenv [edx+0x449fe036]
  411292:	adc    dl,ah
  411294:	jns    0x411267
  411296:	and    DWORD PTR [ecx+0x564eaa6d],eax
  41129c:	sbb    dh,0x5c
  41129f:	sbb    ecx,DWORD PTR [edi+0x4930a7]
  4112a5:	(bad)  
  4112a6:	arpl   WORD PTR [edx-0x18],bx
  4112a9:	mov    edi,ecx
  4112ab:	sbb    dh,ch
  4112ad:	int3   
  4112ae:	je     0x411247
  4112b0:	ficomp WORD PTR [edx+0x25]
  4112b3:	or     esp,DWORD PTR [eax]
  4112b5:	sbb    eax,0x5ab6bf36
  4112ba:	push   ds
  4112bb:	mov    bh,BYTE PTR [edx]
  4112bd:	(bad)  
  4112be:	aad    0x97
  4112c0:	dec    edi
  4112c1:	call   0xa404:0xb10a5178
  4112c8:	mov    ebx,edx
  4112ca:	rep lods al,BYTE PTR ds:[esi]
  4112cc:	and    eax,0x5685e8d8
  4112d1:	repz fcom QWORD PTR [ecx]
  4112d4:	sahf   
  4112d5:	adc    BYTE PTR [edx+esi*4+0x6c],dl
  4112d9:	scas   eax,DWORD PTR es:[edi]
  4112da:	arpl   WORD PTR [ebx+0x10],bx
  4112dd:	lahf   
  4112de:	push   cs
  4112df:	push   ebx
  4112e0:	daa    
  4112e1:	jmp    0x411352
  4112e3:	jnp    0x4112ce
  4112e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e6:	je     0x4112d1
  4112e8:	push   edi
  4112e9:	aaa    
  4112ea:	push   0xa
  4112ec:	inc    ebp
  4112ed:	jbe    0x411358
  4112ef:	adc    BYTE PTR [ebx-0x67fde5b0],bl
  4112f5:	inc    edx
  4112f6:	jb     0x411299
  4112f8:	sahf   
  4112f9:	push   ebx
  4112fa:	leave  
  4112fb:	jae    0x4112bf
  4112fd:	add    esi,DWORD PTR [ecx-0x4d]
  411300:	sbb    DWORD PTR [eax],0xffffffc1
  411303:	cdq    
  411304:	sub    esi,ebx
  411306:	mov    ds:0xe8b82a84,eax
  41130b:	outs   dx,DWORD PTR ds:[esi]
  41130c:	out    0xc5,eax
  41130e:	pop    eax
  41130f:	mov    cl,0xc7
  411311:	daa    
  411312:	pop    esp
  411313:	adc    esi,ecx
  411315:	mov    ebp,0x75772791
  41131a:	adc    DWORD PTR [ecx+0xa],0xffffffb4
  41131e:	sahf   
  41131f:	mov    DWORD PTR [edx+0x795469f2],0x6d68285f
  411329:	jmp    0x4112ed
  41132b:	ret    
  41132c:	aad    0xa3
  41132e:	xor    al,0x12
  411330:	mov    WORD PTR [esi-0x38],fs
  411333:	push   eax
  411334:	pop    ebx
  411336:	cs (bad) 
  411338:	dec    esi
  411339:	test   al,0x8b
  41133b:	leave  
  41133c:	push   edx
  41133d:	and    BYTE PTR [ecx+0x6cac6479],bh
  411343:	rcl    bl,1
  411345:	mov    esi,0x5477e74b
  41134a:	and    BYTE PTR [edi-0x1d],ch
  41134d:	add    al,BYTE PTR [eax]
  41134f:	sub    esi,DWORD PTR [esi]
  411351:	loope  0x411300
  411353:	add    ebp,DWORD PTR [edx+0x6f]
  411356:	sub    DWORD PTR [edx-0x64],eax
  411359:	nop
  41135a:	jo     0x411328
  41135c:	out    dx,eax
  41135d:	and    cl,ah
  41135f:	test   eax,0x8799b5fc
  411364:	or     ah,BYTE PTR [ebp+0x4e]
  411367:	pop    edi
  411368:	add    BYTE PTR [edi],ch
  41136a:	ror    DWORD PTR [ebx+0x5bca42db],cl
  411370:	mov    edx,0x68a0491c
  411375:	jbe    0x4113ad
  411377:	retf   
  411378:	daa    
  411379:	mov    ebx,0xa0227098
  41137e:	rcr    DWORD PTR [eax+ebx*2+0x18],cl
  411382:	xor    DWORD PTR [eax],edi
  411384:	jnp    0x41130a
  411386:	xor    BYTE PTR ds:0x38de3240,cl
  41138c:	(bad)  
  41138d:	cwde   
  41138e:	ins    BYTE PTR es:[edi],dx
  41138f:	icebp  
  411390:	push   ebx
  411391:	(bad)
  411394:	inc    ebx
  411395:	xor    ah,BYTE PTR [edi+0x22]
  411398:	mov    ecx,0x55ffe622
  41139d:	mov    ds:0xcb8860d1,al
  4113a2:	sbb    al,0x2a
  4113a4:	stos   BYTE PTR es:[edi],al
  4113a5:	pop    es
  4113a6:	and    ebx,DWORD PTR [edx]
  4113a8:	(bad)  
  4113a9:	aaa    
  4113aa:	push   edx
  4113ab:	addr16 push edi
  4113ad:	jae    0x411355
  4113af:	aas    
  4113b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b1:	ret    0xbb85
  4113b4:	ret    0x41b8
  4113b7:	push   ecx
  4113b8:	jae    0x4113ce
  4113ba:	add    eax,0xf62e0935
  4113bf:	and    DWORD PTR [edi-0x7db8c16f],0xffffffb8
  4113c6:	je     0x411348
  4113c8:	xchg   ebx,eax
  4113c9:	fst    DWORD PTR [eax]
  4113cb:	cmp    eax,0x434ad0ca
  4113d0:	add    ebx,edi
  4113d2:	ss sbb eax,0x1ab0c972
  4113d8:	fsubr  DWORD PTR [edi+0x3c]
  4113db:	sbb    eax,0xea4394ad
  4113e0:	aam    0x47
  4113e2:	xor    eax,0xee5c59e
  4113e7:	mov    ah,0xf
  4113e9:	xchg   edi,eax
  4113ea:	retf   
  4113eb:	xor    eax,0xd712c53e
  4113f0:	jne    0x411398
  4113f2:	nop
  4113f3:	xor    eax,0xfed25f21
  4113f8:	or     esp,DWORD PTR [esi+edx*2-0x76]
  4113fc:	in     al,0xf
  4113fe:	nop
  4113ff:	push   esi
  411400:	sti    
  411401:	inc    edi
  411402:	push   edi
  411403:	jmp    0x379cefd
  411408:	lds    ecx,FWORD PTR [esi]
  41140a:	mov    WORD PTR [edx+0x5c69149c],ss
  411410:	xchg   esi,eax
  411411:	in     eax,dx
  411412:	bound  edx,QWORD PTR [ecx+0x5813c7e4]
  411418:	lds    edx,FWORD PTR [edx]
  41141a:	and    eax,0x5e8be359
  41141f:	xchg   ecx,eax
  411420:	(bad)  
  411422:	adc    dh,BYTE PTR [eax-0xfb9db0]
  411428:	enter  0x504e,0xee
  41142c:	adc    al,0x78
  41142e:	shl    bh,cl
  411430:	mov    al,ds:0x5b56e64c
  411435:	js     0x411492
  411437:	mov    bl,0x10
  411439:	mov    ah,0xcf
  41143b:	stos   BYTE PTR es:[edi],al
  41143c:	outs   dx,DWORD PTR ds:[esi]
  41143d:	mov    esi,0xa90e4292
  411442:	xor    al,BYTE PTR [edi-0x29]
  411445:	xchg   esi,eax
  411446:	mov    ds:0x77a33f37,eax
  41144b:	(bad)  
  41144c:	mov    DWORD PTR ds:0x18136a39,ebx
  411452:	out    dx,al
  411453:	loop   0x4113df
  411455:	add    dh,bl
  411457:	test   bl,bl
  411459:	adc    al,0x3a
  41145b:	aas    
  41145c:	icebp  
  41145d:	scas   eax,DWORD PTR es:[edi]
  41145e:	adc    al,0x71
  411460:	xchg   edi,eax
  411461:	adc    al,BYTE PTR [ebx+0x4160659d]
  411467:	(bad)
  41146a:	mov    ecx,0x53b96c12
  41146f:	ret    
  411470:	mov    ch,0x58
  411472:	scas   eax,DWORD PTR es:[edi]
  411473:	push   0xffffff86
  411475:	ja     0x41144c
  411477:	mov    BYTE PTR [edx],ah
  411479:	inc    edx
  41147a:	(bad)  
  41147b:	hlt    
  41147c:	shr    ch,cl
  41147e:	and    edx,esp
  411480:	pusha  
  411481:	mov    cl,0x8c
  411483:	jne    0x41148b
  411485:	inc    esp
  411486:	sbb    eax,esi
  411488:	mov    edx,0x1fcbdb78
  41148d:	icebp  
  41148e:	lds    esi,FWORD PTR [eax]
  411490:	cs push es
  411492:	loopne 0x41145d
  411494:	xchg   edi,eax
  411495:	(bad)  
  411496:	mov    edi,0xf86223a5
  41149b:	shl    BYTE PTR [edx+0x761599e],cl
  4114a1:	cmc    
  4114a2:	adc    edi,DWORD PTR [edx+0x31]
  4114a5:	xchg   esi,eax
  4114a6:	or     dl,bh
  4114a8:	lahf   
  4114a9:	pop    eax
  4114aa:	push   eax
  4114ab:	in     eax,dx
  4114ac:	jge    0x4114c7
  4114ae:	ret    0x2e83
  4114b1:	scas   eax,DWORD PTR es:[edi]
  4114b2:	pushf  
  4114b3:	dec    ebp
  4114b4:	push   edi
  4114b5:	(bad)  [eax]
  4114b7:	inc    ecx
  4114b8:	pop    ebp
  4114b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ba:	out    0x13,eax
  4114bc:	std    
  4114bd:	iret   
  4114be:	(bad)  
  4114c0:	les    edx,FWORD PTR [ebx]
  4114c2:	or     BYTE PTR [eax+0x7],0xc1
  4114c6:	push   ebx
  4114c7:	sub    ecx,DWORD PTR [esi+0x4f2d2401]
  4114cd:	dec    edi
  4114ce:	adc    bl,BYTE PTR [edx]
  4114d0:	add    BYTE PTR [edi+eax*4],cl
  4114d3:	clc    
  4114d4:	add    al,0xfa
  4114d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d7:	pusha  
  4114d8:	outs   dx,BYTE PTR ds:[esi]
  4114d9:	fdivrp st(7),st
  4114db:	xor    bh,bh
  4114dd:	fwait
  4114de:	mov    esp,0x4d44c105
  4114e3:	adc    DWORD PTR [edi-0x70],esi
  4114e6:	dec    esp
  4114e7:	pop    eax
  4114e8:	mov    ecx,DWORD PTR ds:0xac246a8e
  4114ee:	adc    ah,BYTE PTR [eax+0x5c]
  4114f1:	lahf   
  4114f2:	push   edi
  4114f3:	inc    ebp
  4114f4:	or     al,0xca
  4114f6:	outs   dx,BYTE PTR ds:[esi]
  4114f7:	fild   QWORD PTR [edi]
  4114f9:	push   cs
  4114fa:	jbe    0x411517
  4114fc:	inc    edx
  4114fd:	push   eax
  4114fe:	sub    eax,0x84f23c57
  411503:	adc    ah,BYTE PTR [esi+ebx*8+0x3]
  411507:	pop    ss
  411508:	xchg   DWORD PTR [edi-0x318a2bec],ecx
  41150e:	sbb    eax,0x64d48669
  411513:	div    DWORD PTR [ebx-0x5adc8002]
  411519:	(bad)  
  41151a:	mov    ah,0x87
  41151c:	pop    eax
  41151d:	mov    ch,0x43
  41151f:	xchg   esp,eax
  411520:	inc    esp
  411521:	clc    
  411522:	dec    ebx
  411523:	push   ecx
  411524:	ret    0x6192
  411527:	xchg   DWORD PTR [ebx+0x17db4f1e],edx
  41152d:	ds aas 
  41152f:	aaa    
  411530:	push   0x2f126fb6
  411535:	sbb    dl,BYTE PTR [edx-0x55]
  411538:	dec    esi
  411539:	lea    edi,[edi-0x78]
  41153c:	jle    0x41154a
  41153e:	mov    cl,0xff
  411540:	mov    eax,ds:0x4b68eeef
  411545:	sbb    eax,0x9fa05165
  41154a:	cmp    DWORD PTR [edx+ebp*8],edx
  41154d:	pop    ds
  41154e:	and    al,0x97
  411550:	mov    ch,0x3e
  411552:	and    ebp,0xffffffbb
  411555:	(bad)  
  411556:	out    0x1,al
  411558:	pushf  
  411559:	or     eax,0xe7c75fa5
  41155e:	(bad)  [edx+edx*4+0x24]
  411562:	lods   eax,DWORD PTR ds:[esi]
  411563:	and    esi,ebx
  411565:	mov    esi,0xbdee0069
  41156a:	xchg   esi,eax
  41156b:	or     ecx,DWORD PTR [edx]
  41156d:	or     al,0xf2
  41156f:	test   eax,0x60060ef
  411574:	adc    al,0xcc
  411576:	add    esp,esp
  411578:	push   es
  411579:	push   esi
  41157a:	daa    
  41157b:	adc    al,0x69
  41157d:	jle    0x41156c
  41157f:	pop    edx
  411580:	js     0x411564
  411582:	xor    eax,0x801ad1c1
  411587:	inc    eax
  411588:	cmp    al,BYTE PTR [edi-0x6a]
  41158b:	cmp    eax,DWORD PTR [edx+0x4c]
  41158e:	add    ah,BYTE PTR [ecx+ebp*4]
  411591:	test   BYTE PTR [eax],0x13
  411594:	int3   
  411595:	fmul   QWORD PTR ds:0xc4cc63a3
  41159b:	or     edx,eax
  41159d:	inc    esp
  41159e:	ret    0x8883
  4115a1:	adc    ah,BYTE PTR [esi+0x7]
  4115a4:	popf   
  4115a5:	ffreep st(1)
  4115a7:	lods   al,BYTE PTR ds:[esi]
  4115a8:	rol    DWORD PTR [esi-0x5],cl
  4115ab:	mov    ecx,0xc4f85ed5
  4115b0:	test   BYTE PTR [esi],ch
  4115b2:	adc    ecx,0xffffffdd
  4115b5:	leave  
  4115b6:	xor    DWORD PTR [edi-0x16],edi
  4115b9:	push   esp
  4115ba:	mov    edx,es
  4115bc:	clc    
  4115bd:	popa   
  4115be:	push   esi
  4115bf:	es shl ch,cl
  4115c2:	inc    esi
  4115c3:	aaa    
  4115c4:	imul   edi,DWORD PTR [ebp+0x77a9e348],0xc1183e06
  4115ce:	adc    ah,bl
  4115d0:	and    esp,esp
  4115d2:	jae    0x4115ef
  4115d4:	cmp    eax,DWORD PTR [edi-0x721af1b3]
  4115da:	mov    edx,0x3581ceae
  4115df:	repnz in al,dx
  4115e1:	ret    0xa124
  4115e4:	and    eax,DWORD PTR [edi+0x38502588]
  4115ea:	pop    ds
  4115eb:	stos   DWORD PTR es:[edi],eax
  4115ec:	sbb    al,0x62
  4115ee:	mov    ch,0x47
  4115f0:	rol    BYTE PTR [eax-0x5],1
  4115f3:	shl    eax,1
  4115f5:	inc    ebp
  4115f6:	pushf  
  4115f7:	jg     0x411596
  4115f9:	cmp    esi,DWORD PTR [ebp+edi*2+0x61]
  4115fd:	push   edi
  4115fe:	ret    
  4115ff:	adc    BYTE PTR [eax+0x6b362f00],cl
  411605:	pop    ebp
  411606:	test   BYTE PTR gs:[edi-0x46],ah
  41160a:	pop    eax
  41160b:	cld    
  41160c:	cmp    BYTE PTR [eax-0x7828a262],0x27
  411613:	lock out 0xc4,eax
  411616:	sub    al,BYTE PTR [ebx]
  411618:	hlt    
  411619:	xchg   DWORD PTR [edx],esp
  41161b:	mov    ch,bh
  41161d:	jg     0x4115e7
  41161f:	mov    al,0x68
  411621:	out    0x3c,al
  411623:	fiadd  DWORD PTR [ebx]
  411625:	ins    DWORD PTR es:[edi],dx
  411626:	mov    esi,ebx
  411628:	xor    ebx,DWORD PTR [ebx]
  41162a:	ins    DWORD PTR es:[edi],dx
  41162b:	or     esi,edi
  41162d:	mov    DWORD PTR [edi+0x1b],ebp
  411630:	idiv   BYTE PTR [eax-0x69f642e3]
  411636:	push   ecx
  411637:	cmp    bl,BYTE PTR [esi]
  411639:	dec    esp
  41163a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163b:	daa    
  41163c:	and    dl,BYTE PTR [eax+0x6f]
  41163f:	or     BYTE PTR [edi],ah
  411641:	repnz push ds
  411643:	icebp  
  411644:	xchg   esp,eax
  411645:	cdq    
  411646:	dec    esi
  411647:	push   ebx
  411648:	xchg   esi,eax
  411649:	jp     0x411636
  41164b:	loope  0x4115d0
  41164d:	es xchg edi,eax
  41164f:	test   DWORD PTR [edx],ecx
  411651:	xchg   ebp,eax
  411652:	shr    BYTE PTR gs:[edx+esi*8],cl
  411656:	hlt    
  411657:	inc    edi
  411658:	test   bh,ah
  41165a:	xor    DWORD PTR [ecx-0x23],0x8
  41165e:	dec    esi
  41165f:	aaa    
  411660:	mov    esi,0x2c9fcd9a
  411665:	ficom  WORD PTR [esi]
  411667:	pusha  
  411668:	data16 (bad) 
  41166a:	pop    ebp
  41166b:	stos   BYTE PTR es:[di],al
  41166d:	push   edx
  41166e:	xor    ebp,DWORD PTR [ecx+edx*8]
  411671:	mov    ds:0x2a3e639a,eax
  411676:	rcr    esi,cl
  411678:	jmp    0x9a35:0x15c94980
  41167f:	clc    
  411680:	scas   al,BYTE PTR es:[edi]
  411681:	int3   
  411682:	leave  
  411683:	ds stc 
  411685:	cli    
  411686:	inc    ecx
  411687:	mov    esi,0x5b9e3489
  41168c:	dec    esi
  41168d:	push   eax
  41168e:	fs stos DWORD PTR es:[edi],eax
  411690:	je     0x411649
  411692:	loopne 0x4116eb
  411694:	stc    
  411695:	inc    eax
  411696:	daa    
  411697:	js     0x41167b
  411699:	ins    BYTE PTR es:[edi],dx
  41169a:	out    dx,al
  41169b:	sahf   
  41169c:	leave  
  41169d:	sahf   
  41169e:	int    0xdd
  4116a0:	loopne 0x41167a
  4116a2:	es mov esp,0x5aa1faa
  4116a8:	mov    cl,0x2e
  4116aa:	inc    ecx
  4116ab:	xor    al,0xc6
  4116ad:	mov    dh,0x66
  4116af:	jl     0x4116dd
  4116b1:	(bad)  
  4116b2:	into   
  4116b3:	ss mov bh,0xe6
  4116b6:	mov    ah,0x94
  4116b8:	cmp    BYTE PTR ss:[ecx],cl
  4116bb:	or     eax,0xe7b69019
  4116c0:	add    BYTE PTR [esi-0x71],0xbb
  4116c4:	pusha  
  4116c5:	mov    ebp,0x93761ab6
  4116ca:	icebp  
  4116cb:	jae    0x411707
  4116cd:	xor    bl,dl
  4116cf:	pop    cx
  4116d1:	stos   BYTE PTR es:[edi],al
  4116d2:	mov    ebp,0xcd30ae3
  4116d7:	mov    BYTE PTR [eax-0x2b],0xc4
  4116db:	jle    0x4116a1
  4116dd:	pop    esi
  4116de:	push   eax
  4116df:	xchg   edx,eax
  4116e0:	inc    edx
  4116e1:	push   esp
  4116e2:	jno    0x41166a
  4116e4:	mov    dh,0x21
  4116e6:	push   edx
  4116e7:	push   0xdcb1d0ea
  4116ec:	int    0x3b
  4116ee:	ins    DWORD PTR es:[edi],dx
  4116ef:	cld    
  4116f0:	cwde   
  4116f1:	test   eax,0x77862475
  4116f6:	add    esi,DWORD PTR [esi+0x6b2ba9bc]
  4116fc:	inc    ebx
  4116fd:	jbe    0x41174c
  4116ff:	pop    ebx
  411700:	cdq    
  411701:	push   edi
  411703:	pop    esp
  411704:	fsubr  QWORD PTR [edi+0xc]
  411707:	leave  
  411708:	jp     0x411705
  41170a:	sub    al,0x82
  41170c:	push   ebp
  41170d:	in     eax,0x39
  41170f:	mov    WORD PTR [edx],ds
  411711:	rcr    DWORD PTR [ebx+edx*8+0x161090ac],0x13
  411719:	jo     0x411775
  41171b:	gs xchg ecx,eax
  41171d:	out    0x12,eax
  41171f:	jb     0x411765
  411721:	lock shl eax,cl
  411724:	sub    dl,ch
  411726:	call   0x190185cc
  41172b:	and    DWORD PTR [esi],ebx
  41172d:	or     bl,ch
  41172f:	ret    
  411730:	xor    esi,DWORD PTR [edi-0x80]
  411733:	push   es
  411734:	pushf  
  411735:	xor    BYTE PTR [edx],0xee
  411738:	cmp    BYTE PTR ds:0xdaeea866,0x90
  41173f:	hlt    
  411740:	mov    ds:0xd82af1b7,eax
  411745:	mov    bl,BYTE PTR [ebx]
  411747:	dec    esi
  411748:	inc    ebp
  411749:	jecxz  0x411777
  41174b:	nop
  41174c:	into   
  41174d:	out    dx,al
  41174e:	mov    cl,0xb7
  411750:	sub    edi,ebp
  411752:	mov    eax,ds:0x8bc0616f
  411757:	aam    0x5d
  411759:	pop    ecx
  41175a:	jbe    0x4117d9
  41175c:	stos   BYTE PTR es:[edi],al
  41175d:	push   eax
  41175e:	nop
  41175f:	and    esp,DWORD PTR [ebx+0x19]
  411762:	xchg   ecx,eax
  411763:	call   0x96c5b001
  411768:	sar    ebx,0x54
  41176b:	or     bl,0x65
  41176e:	aaa    
  41176f:	sahf   
  411770:	(bad)  
  411771:	jns    0x411751
  411773:	adc    DWORD PTR [eax+0x3d],esp
  411776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411777:	dec    esp
  411778:	loop   0x411721
  41177a:	stos   BYTE PTR es:[edi],al
  41177b:	and    al,0x8
  41177d:	pop    ebx
  41177e:	bound  ebx,QWORD PTR [ecx]
  411780:	das    
  411781:	pop    edi
  411782:	mov    DWORD PTR [ecx+eiz*8],ecx
  411785:	xor    bh,dh
  411787:	shl    DWORD PTR [ecx],1
  411789:	mov    al,ds:0xc95c8627
  41178e:	and    DWORD PTR [edx+eiz*2-0x3],eax
  411792:	sub    esp,esp
  411794:	cwde   
  411795:	xchg   ecx,eax
  411796:	enter  0x7d36,0x89
  41179a:	cmp    eax,0x81e176ba
  41179f:	outs   dx,BYTE PTR ds:[esi]
  4117a0:	push   es
  4117a1:	add    eax,DWORD PTR [edi-0x3f]
  4117a4:	dec    ebp
  4117a5:	lods   eax,DWORD PTR ds:[esi]
  4117a6:	adc    al,BYTE PTR [ecx+0x2dc12681]
  4117ac:	call   DWORD PTR [ebx]
  4117ae:	sbb    ah,ch
  4117b0:	hlt    
  4117b1:	push   ecx
  4117b2:	jb     0x411804
  4117b4:	xchg   ebx,eax
  4117b5:	adc    BYTE PTR [eax+0x54],0xb0
  4117b9:	inc    edx
  4117ba:	mov    ds:0x162ef92a,al
  4117bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c0:	mov    esp,0xd8c5b8e0
  4117c5:	jnp    0x4117a5
  4117c7:	and    bl,ch
  4117c9:	stc    
  4117ca:	pop    esi
  4117cb:	cmc    
  4117cc:	fs nop
  4117ce:	sub    bh,dl
  4117d0:	or     dh,ch
  4117d2:	sbb    dl,BYTE PTR [ebp-0x1a]
  4117d5:	adc    eax,0xfeef0e1
  4117da:	ror    BYTE PTR [esi],1
  4117dc:	inc    eax
  4117dd:	cmp    DWORD PTR [edx],ebx
  4117df:	xchg   edi,eax
  4117e0:	xor    eax,0xa4a95668
  4117e5:	jno    0x4117bb
  4117e7:	add    al,0xc7
  4117e9:	xlat   BYTE PTR ds:[ebx]
  4117ea:	mov    dl,bh
  4117ec:	mov    dl,0x1e
  4117ee:	mov    esi,0x88b55cf5
  4117f3:	lods   al,BYTE PTR ds:[esi]
  4117f4:	(bad)  
  4117f5:	fimul  WORD PTR [edi+0x4e]
  4117f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117f9:	add    ecx,DWORD PTR [edx-0x35]
  4117fc:	mov    ebp,0x81c2ecdf
  411801:	in     eax,dx
  411802:	dec    ecx
  411803:	xlat   BYTE PTR ds:[ebx]
  411804:	add    DWORD PTR [eax],ecx
  411806:	into   
  411807:	test   al,0xcb
  411809:	or     esi,edi
  41180b:	push   ebx
  41180c:	int    0x1b
  41180e:	int    0xae
  411810:	mov    bl,BYTE PTR [esi-0x7225fb8e]
  411816:	dec    edi
  411817:	xchg   esp,eax
  411818:	dec    ecx
  411819:	repz mov edx,0x772fa6d4
  41181f:	mov    al,0x92
  411821:	hlt    
  411822:	inc    esi
  411823:	pop    ebp
  411824:	ins    BYTE PTR es:[edi],dx
  411825:	and    DWORD PTR [edx+0x7b3d4bf5],0x16a7e3a2
  41182f:	scas   al,BYTE PTR es:[edi]
  411830:	ins    BYTE PTR es:[edi],dx
  411831:	mov    edx,0xa4372f3c
  411836:	sub    DWORD PTR [esi],eax
  411838:	bsr    edi,DWORD PTR [esi]
  41183b:	jg     0x411887
  41183d:	inc    eax
  41183e:	jns    0x41181a
  411840:	(bad)  
  411842:	(bad)  
  411843:	aam    0xd1
  411845:	aas    
  411846:	shl    BYTE PTR [ebx],1
  411848:	fild   DWORD PTR [ebx]
  41184a:	icebp  
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xae9eba54
  411868:	xor    eax,edx
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x6b]
  411873:	loopne 0x4118ac
  411875:	or     dl,BYTE PTR [ecx]
  411877:	inc    ebp
  411878:	ja     0x4118c0
  41187a:	loopne 0x411810
  41187c:	and    dh,BYTE PTR [esi+0x5dac40f8]
  411882:	icebp  
  411883:	jne    0x41180e
  411885:	rol    BYTE PTR [ecx-0x6e],0xf3
  411889:	std    
  41188a:	iret   
  41188b:	das    
  41188c:	add    edx,ebx
  41188e:	mov    ds:0x61d35412,eax
  411893:	dec    eax
  411894:	in     al,0x4d
  411896:	xchg   edx,eax
  411897:	sar    BYTE PTR [edi+0x6ae66dc2],0xfe
  41189e:	retf   
  41189f:	ins    DWORD PTR es:[edi],dx
  4118a0:	pop    edx
  4118a1:	sti    
  4118a2:	fs dec esi
  4118a4:	test   eax,0x58715af
  4118a9:	pop    ebx
  4118aa:	jb     0x411857
  4118ac:	aam    0x6b
  4118ae:	outs   dx,DWORD PTR ds:[esi]
  4118af:	test   eax,0x81f6cac3
  4118b4:	push   ecx
  4118b5:	cs lahf 
  4118b7:	daa    
  4118b8:	adc    BYTE PTR [ebx],ah
  4118ba:	add    ah,BYTE PTR [eax-0x75]
  4118bd:	dec    esp
  4118be:	jmp    eax
  4118c0:	sar    BYTE PTR [ebx+eiz*8+0x26d2f806],cl
  4118c7:	cmp    BYTE PTR [ecx+edi*1],bl
  4118ca:	push   ebp
  4118cb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4118cd:	sbb    dh,BYTE PTR [ecx+0x68808dbb]
  4118d3:	sahf   
  4118d4:	add    al,0xec
  4118d6:	mov    ds:0xe0734133,al
  4118db:	mov    bh,0x76
  4118dd:	mov    ebx,ecx
  4118df:	xchg   edi,eax
  4118e0:	mov    cl,0x71
  4118e2:	mov    cl,0xf4
  4118e4:	xchg   esi,eax
  4118e5:	xchg   di,ax
  4118e7:	ficom  WORD PTR [esi-0x7b]
  4118ea:	push   eax
  4118ec:	ret    0x7af6
  4118ef:	push   es
  4118f0:	rcl    DWORD PTR [edx-0x4b],1
  4118f3:	add    eax,0x4c2c8761
  4118f8:	hlt    
  4118f9:	sub    ebp,DWORD PTR [esi-0x4dd907c1]
  4118ff:	rcl    cl,1
  411901:	scas   eax,DWORD PTR es:[edi]
  411902:	scas   eax,DWORD PTR es:[edi]
  411903:	imul   esi,DWORD PTR [esi-0x73202d3e],0xffffffdd
  41190a:	test   eax,0xc55b4db4
  41190f:	mov    edx,0x3b4b1632
  411914:	mov    al,0x3d
  411916:	or     eax,0x95e67c4
  41191b:	je     0x41195a
  41191d:	dec    ebx
  41191e:	xchg   esi,esp
  411920:	cwde   
  411921:	xchg   ecx,eax
  411922:	in     eax,dx
  411923:	outs   dx,BYTE PTR ds:[esi]
  411924:	int    0xa0
  411926:	xlat   BYTE PTR ds:[ebx]
  411927:	clc    
  411928:	xchg   edx,eax
  411929:	outs   dx,BYTE PTR ds:[esi]
  41192a:	sub    DWORD PTR [ebx+0x7a],edx
  41192d:	jns    0x41191c
  41192f:	lahf   
  411930:	mov    dl,BYTE PTR [edi]
  411932:	cmp    BYTE PTR [ebx-0x16],0xb7
  411936:	pop    edx
  411937:	sub    esi,0x68
  41193a:	out    0x0,al
  41193c:	mov    eax,ds:0xa7e13cd6
  411941:	inc    esp
  411942:	sub    ecx,DWORD PTR [edx-0x1de0ce0c]
  411948:	cwde   
  411949:	in     eax,0x7f
  41194b:	mov    esi,0x729b952d
  411950:	jno    0x411967
  411952:	or     al,0x34
  411954:	xchg   ebp,eax
  411955:	lahf   
  411956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411957:	ret    0x163b
  41195a:	mov    bl,0x75
  41195c:	lea    ebx,[esi+0x3de8307b]
  411962:	stos   DWORD PTR es:[edi],eax
  411963:	sti    
  411964:	test   al,0x3c
  411966:	lods   al,BYTE PTR ds:[esi]
  411967:	push   ds
  411968:	out    dx,eax
  411969:	and    eax,0xbc5713a2
  41196e:	jo     0x41197e
  411970:	lods   al,BYTE PTR ds:[esi]
  411971:	mov    eax,0x89f53aa3
  411976:	xchg   edi,eax
  411977:	imul   esp,DWORD PTR [edx+0x4c],0x69e9e1ab
  41197e:	mov    al,0x35
  411980:	mov    dl,0x78
  411982:	sahf   
  411983:	in     al,dx
  411984:	imul   ebp,DWORD PTR [ebp-0x1fdb0072],0xfd02ad8a
  41198e:	adc    eax,0x3806c402
  411993:	xor    edx,esi
  411995:	mov    bl,0xa8
  411997:	shl    cl,1
  411999:	push   ds
  41199a:	adc    esi,edi
  41199c:	and    BYTE PTR [edx],0xe7
  41199f:	in     al,0xac
  4119a1:	xchg   esi,eax
  4119a2:	and    al,0xc6
  4119a4:	dec    edx
  4119a5:	xchg   DWORD PTR [esi+0x1fbe77d7],esi
  4119ab:	je     0x411996
  4119ad:	mov    ds:0x9d7b89ff,al
  4119b2:	or     al,0x12
  4119b4:	dec    ebp
  4119b5:	ret    0xd68d
  4119b8:	adc    al,cl
  4119ba:	fidivr WORD PTR [esp+eax*1+0x6f]
  4119be:	loop   0x411998
  4119c0:	call   0x41f28c4b
  4119c5:	xor    edi,0xffffffcf
  4119c8:	jbe    0x411a31
  4119ca:	jecxz  0x4119ee
  4119cc:	push   ebp
  4119cd:	lock xor bh,dl
  4119d0:	inc    ecx
  4119d1:	inc    edi
  4119d2:	cmp    esp,esp
  4119d4:	pop    ecx
  4119d5:	lock adc cl,dl
  4119d8:	retf   
  4119d9:	lock sub eax,DWORD PTR [ecx]
  4119dc:	cmp    al,0xe3
  4119de:	in     al,dx
  4119df:	js     0x411976
  4119e1:	lock stos BYTE PTR es:[edi],al
  4119e3:	sub    DWORD PTR [ecx-0xe],eax
  4119e6:	cwde   
  4119e7:	dec    ecx
  4119e8:	(bad)  
  4119e9:	mov    cl,0x57
  4119eb:	sub    edx,DWORD PTR [ebx]
  4119ed:	leave  
  4119ee:	ja     0x41199d
  4119f0:	adc    esp,DWORD PTR [edi+0x5d]
  4119f3:	or     al,0x27
  4119f5:	(bad)  
  4119f7:	test   esi,0x67a9e65d
  4119fd:	adc    al,0x86
  4119ff:	aad    0x6f
  411a01:	fldenv [eax-0x26d7a400]
  411a07:	inc    esp
  411a08:	dec    ebp
  411a09:	std    
  411a0a:	div    edi
  411a0c:	daa    
  411a0d:	add    ecx,DWORD PTR [edi]
  411a0f:	ja     0x411a17
  411a11:	jb     0x4119a7
  411a13:	jb     0x4119f4
  411a15:	dec    esp
  411a16:	push   ds
  411a17:	ins    BYTE PTR es:[edi],dx
  411a18:	mov    edi,0xc31263bc
  411a1d:	jle    0x411a77
  411a1f:	xor    DWORD PTR [edx],esp
  411a21:	fiadd  WORD PTR [ebx-0x45]
  411a24:	xor    eax,0x7e5e6af
  411a29:	pop    eax
  411a2a:	jg     0x4119dc
  411a2c:	add    ebx,ebx
  411a2e:	jae    0x411a15
  411a30:	clc    
  411a31:	ds xchg esp,eax
  411a33:	xchg   ecx,eax
  411a34:	outs   dx,BYTE PTR ds:[esi]
  411a35:	into   
  411a36:	imul   edx,DWORD PTR [ebx-0x77],0xffffffd4
  411a3a:	jle    0x411a8e
  411a3c:	pop    esp
  411a3d:	popf   
  411a3e:	xchg   edi,eax
  411a3f:	mov    DWORD PTR [ebx+0x2f90dbe],ecx
  411a45:	(bad)  
  411a46:	push   ebx
  411a47:	push   0x140fbc18
  411a4c:	fcom   DWORD PTR [eax-0x3b]
  411a4f:	hlt    
  411a50:	add    DWORD PTR [ebp+0x46],eax
  411a53:	(bad)  
  411a54:	xchg   ecx,eax
  411a55:	mov    eax,0x1bd1d66
  411a5a:	xor    ebx,DWORD PTR [ebx-0x7a09fb9a]
  411a60:	push   eax
  411a61:	mov    al,0xcd
  411a63:	in     eax,dx
  411a64:	ffreep st(4)
  411a66:	lahf   
  411a67:	adc    eax,0x98745697
  411a6c:	push   edx
  411a6d:	ja     0x411ad6
  411a6f:	inc    esi
  411a70:	sbb    BYTE PTR [ebp-0x218ff54],al
  411a76:	neg    DWORD PTR [eax-0x11]
  411a79:	cld    
  411a7a:	adc    eax,0x6310ddce
  411a7f:	adc    BYTE PTR [edi+0x75],dl
  411a82:	xchg   esi,eax
  411a83:	pop    es
  411a84:	adc    DWORD PTR [edx-0xb733b50],0xffffff8a
  411a8b:	jmp    DWORD PTR [edi]
  411a8d:	fs jle 0x411aff
  411a90:	repz or dh,BYTE PTR [ecx+ecx*4+0x6c]
  411a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a96:	iret   
  411a97:	ins    BYTE PTR es:[edi],dx
  411a98:	xchg   ebp,eax
  411a99:	shl    dh,cl
  411a9b:	hlt    
  411a9c:	ret    0x6eb4
  411a9f:	arpl   WORD PTR [edi+0x25267ddd],dx
  411aa5:	enter  0x30fd,0xf
  411aa9:	stos   DWORD PTR es:[edi],eax
  411aaa:	adc    DWORD PTR [esi-0x54],esp
  411aad:	out    0x8b,eax
  411aaf:	add    eax,0xd7b5c8e5
  411ab4:	test   al,0xb9
  411ab6:	xor    DWORD PTR [ecx-0x29abf7ac],ebx
  411abc:	arpl   WORD PTR [eax+0x550b464c],di
  411ac2:	inc    dh
  411ac4:	add    al,0xe3
  411ac6:	int    0x1f
  411ac8:	or     esp,esp
  411aca:	in     eax,dx
  411acb:	fimul  DWORD PTR [ebx+0x3d428930]
  411ad1:	push   edi
  411ad2:	jp     0x411aa5
  411ad4:	into   
  411ad5:	outs   dx,DWORD PTR ds:[esi]
  411ad6:	fdiv   st,st(1)
  411ad8:	mov    ds:0x1a10f1ca,al
  411add:	repz int 0x5b
  411ae0:	test   al,0xd
  411ae3:	ret    0x34cb
  411ae6:	aam    0x67
  411ae8:	adc    eax,esi
  411aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aeb:	rol    dl,0xed
  411aee:	adc    DWORD PTR [edx+0x3c],ebp
  411af1:	(bad)
  411af4:	test   eax,0x355713e5
  411af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411afa:	pushf  
  411afb:	lods   al,BYTE PTR ds:[esi]
  411afc:	push   ds
  411afd:	test   ecx,edi
  411aff:	inc    edi
  411b00:	add    ah,BYTE PTR [ecx+0x48857451]
  411b06:	xlat   BYTE PTR ds:[ebx]
  411b07:	outs   dx,BYTE PTR ds:[esi]
  411b08:	js     0x411b7a
  411b0a:	and    ebp,DWORD PTR [esi+0x47]
  411b0d:	test   DWORD PTR [edx+0x2e],edx
  411b10:	mov    ds:0x3a279dc3,eax
  411b15:	adc    ebp,DWORD PTR [edi-0x3b]
  411b18:	jae    0x411b8a
  411b1a:	int    0x99
  411b1c:	dec    BYTE PTR [eax-0x3d5d966e]
  411b22:	sbb    al,0xad
  411b24:	add    al,0x45
  411b26:	xor    al,0x60
  411b28:	bound  ecx,QWORD PTR [ebp+0x4f42869a]
  411b2e:	mov    ch,0x11
  411b30:	sub    BYTE PTR [esi],dh
  411b32:	test   eax,0xadb95f96
  411b37:	fild   QWORD PTR [ecx+eax*2-0x73e1e1e6]
  411b3e:	adc    BYTE PTR [ebx],ah
  411b40:	push   ebx
  411b41:	mov    eax,0x93b896dd
  411b46:	pop    ds
  411b47:	fbld   TBYTE PTR [edi-0x1b]
  411b4a:	cld    
  411b4b:	out    0x23,al
  411b4d:	push   esp
  411b4e:	jmp    0x411b67
  411b50:	or     dl,BYTE PTR [edx]
  411b52:	sbb    al,0xd9
  411b54:	dec    ebx
  411b55:	lds    esp,FWORD PTR [ebx-0x14]
  411b58:	xchg   esp,eax
  411b59:	mov    WORD PTR [edx-0x4e],?
  411b5c:	leave  
  411b5d:	call   0x7f83:0x632bb4ba
  411b64:	sti    
  411b65:	inc    edx
  411b66:	push   eax
  411b67:	dec    eax
  411b68:	std    
  411b69:	mov    ds,eax
  411b6b:	ret    
  411b6c:	out    0x16,al
  411b6e:	in     eax,dx
  411b6f:	dec    ecx
  411b70:	add    al,BYTE PTR [edx]
  411b72:	sbb    DWORD PTR [edx+0x76],edi
  411b75:	push   0xffffffaf
  411b77:	or     dl,BYTE PTR [ecx+0x788f6263]
  411b7d:	push   0x6db85280
  411b82:	adc    al,0xed
  411b84:	mov    bl,0xb4
  411b86:	jp     0x411bf5
  411b88:	push   DWORD PTR [esi-0x2eb0f773]
  411b8e:	or     esi,eax
  411b90:	pop    eax
  411b91:	jecxz  0x411b90
  411b93:	test   al,0x9e
  411b95:	dec    esp
  411b96:	and    eax,0xdae75332
  411b9b:	scas   eax,DWORD PTR es:[edi]
  411b9c:	add    al,0x4a
  411b9e:	xlat   BYTE PTR ds:[ebx]
  411b9f:	mov    DWORD PTR [eax],esi
  411ba1:	pop    edx
  411ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba3:	push   0x453f7e1c
  411ba8:	dec    edx
  411ba9:	pushf  
  411baa:	sar    DWORD PTR [edx+0x1b],cl
  411bad:	les    eax,FWORD PTR [ebx+0x1d735107]
  411bb3:	or     bl,cl
  411bb5:	pop    eax
  411bb6:	adc    DWORD PTR ds:0xe76172ee,ecx
  411bbc:	loope  0x411b4b
  411bbe:	jns    0x411bf6
  411bc0:	xchg   esi,eax
  411bc1:	xchg   BYTE PTR [esi-0x6baf95ab],dl
  411bc7:	add    al,0x8c
  411bc9:	out    dx,al
  411bca:	inc    eax
  411bcb:	adc    eax,0x380df1da
  411bd0:	jmp    0x411bb4
  411bd2:	adc    eax,0xee9b5244
  411bd7:	push   eax
  411bd8:	(bad)  [ebx-0x4d]
  411bdb:	lods   al,BYTE PTR ds:[esi]
  411bdc:	xor    BYTE PTR [ecx],0x39
  411bdf:	mov    ecx,0x37011514
  411be4:	inc    eax
  411be5:	mov    dh,0xb1
  411be7:	fild   QWORD PTR [ebx]
  411be9:	out    0x0,al
  411beb:	mov    edx,?
  411bed:	daa    
  411bee:	dec    edi
  411bef:	pop    esp
  411bf0:	mov    ecx,0x3b6bef5
  411bf5:	cmc    
  411bf6:	jecxz  0x411c00
  411bf8:	stc    
  411bf9:	lods   eax,DWORD PTR ds:[esi]
  411bfa:	out    0x7f,al
  411bfc:	fdiv   DWORD PTR [ecx-0x720c6e0a]
  411c02:	int    0x85
  411c04:	aaa    
  411c05:	dec    ebx
  411c06:	or     al,0xb3
  411c08:	sbb    esp,DWORD PTR [edi-0x3e]
  411c0b:	jle    0x411c83
  411c0d:	add    DWORD PTR [ebx+ecx*1-0x70],esp
  411c11:	icebp  
  411c12:	and    dh,BYTE PTR [edi-0x2cd4b46b]
  411c18:	cmp    cl,ah
  411c1a:	dec    ebx
  411c1b:	mov    eax,0xf62aef5a
  411c20:	ins    BYTE PTR es:[edi],dx
  411c21:	inc    ebp
  411c22:	push   ecx
  411c23:	sahf   
  411c24:	add    edx,DWORD PTR [edx+0x7c35f364]
  411c2a:	loopne 0x411c9b
  411c2c:	imul   ebp,DWORD PTR [ebx-0x6393738c],0xc
  411c33:	cmp    DWORD PTR [edx],ecx
  411c35:	xchg   edx,eax
  411c36:	inc    esi
  411c37:	cmp    al,0x75
  411c39:	jl     0x411bbb
  411c3b:	in     al,dx
  411c3c:	pop    eax
  411c3d:	or     eax,0x1592c9be
  411c42:	and    eax,0xa67b7257
  411c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c48:	cmp    eax,0x2a341bd9
  411c4d:	ins    BYTE PTR es:[edi],dx
  411c4e:	xchg   edx,eax
  411c4f:	sti    
  411c50:	xchg   bl,cl
  411c52:	lods   eax,DWORD PTR ds:[esi]
  411c53:	lock push 0xc58e4abc
  411c59:	push   edi
  411c5a:	or     al,0x8a
  411c5c:	pop    edx
  411c5d:	add    BYTE PTR [edx+edi*4+0x38],al
  411c61:	int3   
  411c62:	outs   dx,BYTE PTR ds:[esi]
  411c63:	push   edi
  411c64:	xor    eax,0x1a2f5d4c
  411c69:	jp     0x411c57
  411c6b:	adc    eax,0xc13c1bbf
  411c70:	aas    
  411c71:	loopne 0x411c99
  411c73:	(bad)  
  411c75:	addr16 and ecx,esp
  411c78:	or     edi,DWORD PTR [ebp+0x31421ad8]
  411c7e:	mov    ebp,cs
  411c80:	mov    ecx,0xd5e200a5
  411c85:	add    edi,DWORD PTR [ecx]
  411c87:	jecxz  0x411d01
  411c89:	adc    DWORD PTR [edx+0x7483203d],edx
  411c8f:	push   ebx
  411c90:	loop   0x411c38
  411c92:	mov    ds:0xbe4e0ec8,al
  411c97:	xor    bl,BYTE PTR [ebx]
  411c99:	jecxz  0x411c9f
  411c9b:	and    BYTE PTR [ebp+0x4644becd],al
  411ca1:	leave  
  411ca2:	or     dh,dl
  411ca4:	pop    eax
  411ca5:	xchg   BYTE PTR [ecx-0x6feda765],ch
  411cab:	fs xor al,0x1b
  411cae:	int3   
  411caf:	mov    ds:0xbe1ee1f0,al
  411cb4:	inc    ebx
  411cb5:	ja     0x411cbe
  411cb7:	inc    BYTE PTR [ecx+ebp*2+0x1e]
  411cbb:	mov    eax,0x2c6e9b7
  411cc0:	adc    al,0xdc
  411cc2:	scas   al,BYTE PTR es:[edi]
  411cc3:	xchg   ebx,eax
  411cc4:	sbb    bh,BYTE PTR [edi+ebx*8+0x3b]
  411cc8:	jge    0x411cd3
  411cca:	stos   BYTE PTR es:[edi],al
  411ccb:	aaa    
  411ccc:	jg     0x411ccf
  411cce:	and    al,0xf0
  411cd0:	nop
  411cd1:	fld    QWORD PTR [ebx+0x3b]
  411cd4:	(bad)  
  411cd5:	xor    bh,bl
  411cd7:	les    esi,FWORD PTR [ebp-0x74e54542]
  411cdd:	fild   WORD PTR [esi+0x3b49c5b9]
  411ce3:	in     al,dx
  411ce4:	out    dx,eax
  411ce5:	scas   al,BYTE PTR es:[edi]
  411ce6:	popa   
  411ce7:	jno    0x411cc8
  411ce9:	mov    cl,0xc0
  411ceb:	test   eax,0x6e97b4e0
  411cf0:	mov    bl,0x40
  411cf2:	outs   dx,BYTE PTR ds:[esi]
  411cf3:	inc    edi
  411cf4:	mov    ds,esp
  411cf6:	ret    
  411cf7:	cmp    DWORD PTR ss:[eax+0x1d5d7416],esp
  411cfe:	and    ebx,ecx
  411d00:	xor    edi,eax
  411d02:	pushf  
  411d03:	fist   WORD PTR [edx+0x16]
  411d06:	jle    0x411d5f
  411d08:	lahf   
  411d09:	xchg   ecx,eax
  411d0a:	retf   
  411d0b:	xchg   ebx,eax
  411d0c:	push   es
  411d0d:	jne    0x411d7f
  411d0f:	inc    esi
  411d10:	(bad)
  411d13:	add    eax,0x92a9ff37
  411d18:	adc    edx,eax
  411d1a:	and    DWORD PTR [edx+0x32],ebp
  411d1d:	jae    0x411d3e
  411d1f:	and    al,0xad
  411d21:	imul   edi,DWORD PTR [ebx+0x70f1493c],0xffffffde
  411d28:	xor    ch,ah
  411d2a:	mov    esp,DWORD PTR [eax]
  411d2c:	fcomp  DWORD PTR [esi-0x797addfc]
  411d32:	loopne 0x411d89
  411d34:	adc    ebx,ebp
  411d36:	shl    DWORD PTR [edx-0x1c8b9800],0x94
  411d3d:	cdq    
  411d3e:	mov    eax,ds:0x126a35fa
  411d43:	mov    esp,0x6b63aa8
  411d48:	push   ecx
  411d49:	dec    ebx
  411d4a:	push   ebp
  411d4b:	in     al,dx
  411d4c:	or     DWORD PTR [esi-0x40a702e2],esi
  411d52:	cmp    eax,0x64884f33
  411d57:	jnp    0x411d11
  411d59:	jnp    0x411d0a
  411d5b:	xor    BYTE PTR [esi-0x4054339],ah
  411d61:	mov    esp,0xb4e14eac
  411d66:	jns    0x411cf9
  411d68:	and    ch,al
  411d6a:	stos   BYTE PTR es:[edi],al
  411d6b:	xchg   BYTE PTR [ecx+0x6c8d453f],dl
  411d71:	in     al,0x1
  411d73:	pop    ss
  411d74:	pop    es
  411d75:	xchg   edx,eax
  411d76:	leave  
  411d77:	ds std 
  411d79:	jmp    0x6452:0x14827450
  411d80:	mov    WORD PTR [ebp+0xd],?
  411d83:	iret   
  411d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d85:	loope  0x411d46
  411d87:	cld    
  411d88:	scas   al,BYTE PTR es:[edi]
  411d89:	mov    al,0xae
  411d8b:	shrd   DWORD PTR [ebp+0x358164d9],ebp,0x8b
  411d93:	dec    ebx
  411d94:	sti    
  411d95:	adc    eax,0xeea7d8de
  411d9a:	mov    ds:0x3c037669,eax
  411d9f:	mov    al,0xd3
  411da1:	jne    0x411daa
  411da3:	call   0x43d0:0xf6773435
  411daa:	and    dl,BYTE PTR [eax+edx*2+0x40224e07]
  411db1:	or     ebp,DWORD PTR [edx+0x26f3b858]
  411db7:	pop    ds
  411db8:	jle    0x411d83
  411dba:	mov    esi,0xb574d7f1
  411dbf:	stos   BYTE PTR es:[edi],al
  411dc0:	mov    edi,DWORD PTR [eax+0x47af1c3f]
  411dc6:	test   eax,0x993a95de
  411dcb:	adc    ebp,DWORD PTR [ebx-0x18d1bbe3]
  411dd1:	adc    edx,DWORD PTR [ecx]
  411dd3:	push   esi
  411dd4:	lahf   
  411dd5:	adc    DWORD PTR [ecx+ebp*1-0x509cbb9d],ecx
  411ddc:	adc    DWORD PTR ds:0xd87d2e6b,0xffffffb2
  411de3:	shl    DWORD PTR [ecx+0x2a],cl
  411de6:	(bad)  
  411de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de8:	mov    ch,0xf9
  411dea:	mov    al,BYTE PTR [ecx]
  411dec:	or     eax,0x21e50085
  411df1:	ret    0x7842
  411df4:	fcomp  QWORD PTR ds:0x34c75383
  411dfa:	and    cl,BYTE PTR [edx+0x43478d52]
  411e00:	or     al,bl
  411e02:	push   es
  411e03:	data16 fcmovnb st,st(1)
  411e06:	mov    edi,0xbcb339bb
  411e0b:	inc    edx
  411e0c:	out    0xaa,al
  411e0e:	or     ch,0x8f
  411e11:	or     bh,BYTE PTR [eax-0x74]
  411e14:	icebp  
  411e15:	ret    0xb6dc
  411e18:	lods   eax,DWORD PTR ds:[esi]
  411e19:	fidivr DWORD PTR [ecx]
  411e1b:	or     ecx,esp
  411e1d:	test   eax,0xcfcdac9
  411e22:	fidivr WORD PTR cs:0x91bde5dc
  411e29:	rol    BYTE PTR [ebp+eax*4-0x40d86e5d],cl
  411e30:	retf   0xc7fc
  411e33:	pop    ebp
  411e34:	es (bad) 
  411e36:	or     eax,0x1f779d5
  411e3b:	lds    esi,FWORD PTR [ecx]
  411e3d:	out    dx,eax
  411e3e:	icebp  
  411e3f:	ret    
  411e40:	adc    BYTE PTR [edx-0x40],ch
  411e43:	jno    0x411eac
  411e45:	jnp    0x411e33
  411e47:	push   ecx
  411e48:	aas    
  411e49:	pop    esi
  411e4a:	pop    ebx
  411e4b:	sbb    al,0x50
  411e4d:	mov    ecx,0xd4e8d6b3
  411e52:	mov    esp,0x70189d5b
  411e57:	pop    esi
  411e58:	test   al,0xf9
  411e5a:	imul   ecx,DWORD PTR [esi+0x3f0b9d7d],0x2b
  411e61:	mov    WORD PTR [ecx+eax*8],gs
  411e64:	aas    
  411e65:	cdq    
  411e66:	or     eax,DWORD PTR [esi-0x79]
  411e69:	xor    BYTE PTR [esi-0x6508426a],bl
  411e6f:	xlat   BYTE PTR ds:[ebx]
  411e70:	mov    cl,BYTE PTR [eax-0x1d081b7]
  411e76:	(bad)  
  411e77:	out    dx,eax
  411e78:	cs ret 
  411e7a:	cdq    
  411e7b:	push   ebp
  411e7c:	leave  
  411e7d:	jp     0x411e43
  411e7f:	clc    
  411e80:	sti    
  411e81:	data16 xor BYTE PTR [edx-0x2dd8091a],bh
  411e88:	push   eax
  411e89:	scas   al,BYTE PTR es:[edi]
  411e8a:	mov    edx,0x260afa87
  411e8f:	xchg   ecx,eax
  411e90:	in     al,dx
  411e91:	xchg   DWORD PTR [ebx],edi
  411e93:	stc    
  411e94:	fisubr DWORD PTR [ecx-0x2c1b5b99]
  411e9a:	cmp    DWORD PTR [edx+0x79],edx
  411e9d:	fcomp  QWORD PTR [ebx-0x8]
  411ea0:	shl    BYTE PTR [esi-0x1c39daa1],0xb2
  411ea7:	leave  
  411ea8:	inc    edi
  411ea9:	ins    BYTE PTR es:[edi],dx
  411eaa:	adc    al,0x7a
  411eac:	mov    ch,BYTE PTR [ecx+eax*4+0x2112520a]
  411eb3:	ret    0x8e4c
  411eb6:	clc    
  411eb7:	inc    ebx
  411eb8:	scas   al,BYTE PTR es:[edi]
  411eb9:	mov    ch,ch
  411ebb:	jnp    0x411ee9
  411ebd:	or     al,0x6f
  411ebf:	adc    dh,BYTE PTR [edi]
  411ec1:	es jo  0x411eaf
  411ec4:	cmp    ecx,DWORD PTR [edx+0x2dbe6e4b]
  411eca:	(bad)  
  411ecb:	bound  edx,QWORD PTR ds:0x61da792d
  411ed1:	xchg   esi,eax
  411ed2:	out    0xa8,eax
  411ed4:	mov    al,ds:0x993a52ab
  411ed9:	das    
  411eda:	pop    esi
  411edb:	icebp  
  411edc:	cwde   
  411edd:	jmp    0x7aac:0xc7b74fb4
  411ee4:	inc    ebp
  411ee5:	sbb    al,0x1e
  411ee7:	test   esi,edi
  411ee9:	mov    esi,0x338bd1ae
  411eee:	and    dh,BYTE PTR [edi]
  411ef0:	xor    al,0x6a
  411ef2:	add    edi,eax
  411ef4:	fnstsw WORD PTR [ebx+eax*4+0x633ba81c]
  411efb:	mov    ?,edx
  411efd:	jl     0x411ee4
  411eff:	cmp    DWORD PTR [esi],ebp
  411f01:	stos   BYTE PTR es:[edi],al
  411f02:	sti    
  411f03:	or     bh,bh
  411f05:	sbb    esi,DWORD PTR [eax-0x7745bb5d]
  411f0b:	jns    0x411ec0
  411f0d:	mov    ebp,0x6a0f6a97
  411f12:	sbb    DWORD PTR [ecx],ecx
  411f14:	ja     0x411ee9
  411f16:	daa    
  411f17:	iret   
  411f18:	push   ecx
  411f19:	idiv   BYTE PTR [ecx]
  411f1b:	pop    edi
  411f1c:	jle    0x411eb1
  411f1e:	stc    
  411f1f:	stos   DWORD PTR es:[edi],eax
  411f20:	std    
  411f21:	xor    al,0x79
  411f23:	jl     0x411f04
  411f25:	jbe    0x411ece
  411f27:	fdiv   st,st(2)
  411f29:	leave  
  411f2a:	clc    
  411f2b:	call   0x15a6af58
  411f30:	cmp    eax,esp
  411f32:	dec    edx
  411f33:	cmp    eax,0xcaa81c3
  411f38:	sub    BYTE PTR [edi+0x73],dl
  411f3b:	add    dh,BYTE PTR [eax+edx*4-0x6a]
  411f3f:	mov    bh,0xfb
  411f41:	rcr    BYTE PTR [ecx],1
  411f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f44:	push   edi
  411f45:	leave  
  411f46:	push   esi
  411f47:	cmp    ah,al
  411f49:	in     al,dx
  411f4a:	add    BYTE PTR [esi+0x74cb7628],cl
  411f50:	sbb    DWORD PTR [edi+edi*8],esi
  411f53:	dec    ecx
  411f54:	enter  0x73a5,0xc1
  411f58:	bound  edx,QWORD PTR [ebx-0x7a]
  411f5b:	out    0xe1,eax
  411f5d:	js     0x411ee1
  411f5f:	xchg   ebx,eax
  411f60:	fwait
  411f61:	adc    dl,BYTE PTR [ecx]
  411f63:	jnp    0x411fb9
  411f65:	bound  edx,QWORD PTR [eax+0x4513c09d]
  411f6b:	cmp    BYTE PTR [ecx-0x6],cl
  411f6e:	gs loop 0x411f87
  411f71:	sbb    eax,0x388de4b9
  411f76:	pop    esi
  411f77:	jo     0x411fc9
  411f79:	cmp    al,0xfd
  411f7b:	pop    ds
  411f7c:	stos   BYTE PTR es:[edi],al
  411f7d:	test   al,0x92
  411f7f:	cmp    DWORD PTR [edx+edx*4+0x2a59c1ac],0xffffffee
  411f87:	or     ah,dh
  411f89:	push   ds
  411f8a:	sub    al,0x10
  411f8c:	or     eax,0x18ccb284
  411f91:	sbb    BYTE PTR [ebp-0x75],bh
  411f94:	xchg   esi,eax
  411f95:	adc    bh,BYTE PTR [esi-0x42]
  411f98:	popf   
  411f99:	jg     0x411f54
  411f9b:	mov    al,0x97
  411f9d:	dec    edi
  411f9e:	mov    bx,0xd715
  411fa2:	xchg   DWORD PTR [ecx+0x6c],edi
  411fa5:	push   0x9be0d76d
  411faa:	dec    ecx
  411fab:	test   eax,0xc87da13b
  411fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb1:	sub    DWORD PTR [ebp-0x2f],0x570873c6
  411fb8:	push   esi
  411fb9:	xor    al,al
  411fbb:	inc    esi
  411fbc:	popf   
  411fbd:	pop    ds
  411fbe:	fst    QWORD PTR [ecx+0x2588178a]
  411fc4:	add    bl,BYTE PTR [edx+edx*8]
  411fc7:	mov    DWORD PTR [ebx],esp
  411fc9:	loop   0x412030
  411fcb:	test   eax,0xe6e6fe4
  411fd0:	ss adc dl,bh
  411fd3:	mov    eax,0x11a5af16
  411fd8:	sbb    BYTE PTR [ecx-0x78],0x94
  411fdc:	xchg   DWORD PTR [ebx],esi
  411fde:	addr16 mov edx,0xedbc7162
  411fe4:	fst    QWORD PTR [edi+0xb4a28c7]
  411fea:	xchg   edx,eax
  411feb:	aad    0x38
  411fed:	xor    DWORD PTR [ebx],ecx
  411fef:	sbb    edx,DWORD PTR [edi]
  411ff1:	ret    0xe161
  411ff4:	out    dx,eax
  411ff5:	in     al,0xd
  411ff7:	sbb    al,0x37
  411ff9:	loop   0x412015
  411ffb:	pop    ds
  411ffc:	push   esp
  411ffd:	imul   DWORD PTR [edi+0x2b]
  412000:	stos   BYTE PTR es:[edi],al
  412001:	int    0xff
  412003:	aas    
  412004:	and    DWORD PTR [esi+eiz*2],ecx
  412007:	xor    BYTE PTR [ebx],ah
  412009:	ds hlt 
  41200b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41200c:	retf   
  41200d:	pop    esp
  41200e:	(bad)  
  41200f:	retf   
  412010:	jno    0x411fe1
  412012:	int    0xfc
  412014:	lods   eax,DWORD PTR ds:[esi]
  412015:	dec    edx
  412016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412017:	jns    0x41205a
  412019:	dec    ebx
  41201a:	jae    0x41205d
  41201c:	sub    eax,DWORD PTR [edx+0x485bf96]
  412022:	sub    BYTE PTR [edi],bh
  412024:	dec    BYTE PTR [esi]
  412026:	fistp  QWORD PTR [esi+0x712a2acb]
  41202c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41202d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41202f:	jg     0x4120b0
  412031:	scas   al,BYTE PTR es:[edi]
  412032:	xor    esp,DWORD PTR [edi+0x2e45657c]
  412038:	or     esp,eax
  41203a:	add    eax,0xd21c9895
  41203f:	inc    esp
  412040:	popf   
  412041:	xor    bh,BYTE PTR [esi-0xc881913]
  412047:	cmp    BYTE PTR [edi+0x45],dl
  41204a:	xor    cl,cl
  41204c:	lods   eax,DWORD PTR ds:[esi]
  41204d:	out    dx,eax
  41204e:	mov    ds,eax
  412050:	loopne 0x412030
  412052:	inc    edi
  412053:	or     al,dl
  412055:	scas   al,BYTE PTR es:[edi]
  412056:	push   esp
  412057:	add    BYTE PTR [esi+0x62],0x45
  41205b:	lds    ecx,FWORD PTR [eax]
  41205d:	lock addr16 lahf 
  412060:	dec    bl
  412062:	je     0x412008
  412064:	mov    BYTE PTR [esi],ch
  412066:	cmp    dh,BYTE PTR [edx]
  412068:	ins    BYTE PTR es:[edi],dx
  412069:	sub    al,0x70
  41206b:	into   
  41206c:	test   BYTE PTR [edi],bh
  41206e:	fsubr  QWORD PTR [ebx-0x68cc4a77]
  412074:	cld    
  412075:	cmp    cl,ah
  412077:	cli    
  412078:	popa   
  412079:	in     eax,0xe3
  41207b:	dec    eax
  41207c:	jb     0x4120ba
  41207e:	out    0xaf,al
  412080:	lock push es
  412082:	loopne 0x412009
  412084:	push   DWORD PTR [edx]
  412086:	inc    ecx
  412087:	(bad)  
  412088:	ins    BYTE PTR es:[edi],dx
  412089:	aad    0x58
  41208b:	imul   ebx,DWORD PTR [edx],0x93911917
  412091:	push   ecx
  412092:	sub    esi,DWORD PTR [esi-0x75]
  412095:	rol    dl,cl
  412097:	inc    esp
  412098:	into   
  412099:	inc    ebx
  41209a:	cmp    esp,edi
  41209c:	aam    0xa0
  41209e:	push   ebx
  41209f:	xchg   edx,eax
  4120a0:	jmp    0x412091
  4120a2:	mov    DWORD PTR [edx],esp
  4120a4:	mov    ds:0xe549587d,al
  4120a9:	stos   BYTE PTR es:[edi],al
  4120aa:	dec    esi
  4120ab:	mov    cs,WORD PTR [eax-0x30e78692]
  4120b1:	push   ds
  4120b2:	les    esp,FWORD PTR [ebx]
  4120b4:	rcr    DWORD PTR [edi+ebx*4],1
  4120b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b8:	jbe    0x412099
  4120ba:	(bad)  
  4120bb:	push   esp
  4120bc:	popw   ss
  4120be:	popa   
  4120bf:	or     bh,BYTE PTR [esi+0x62]
  4120c2:	push   cs
  4120c3:	ins    BYTE PTR es:[edi],dx
  4120c4:	retf   0xccc6
  4120c7:	mov    edi,0x17169437
  4120cc:	dec    ebx
  4120cd:	pop    esi
  4120ce:	mul    BYTE PTR [ecx]
  4120d0:	sub    al,0x3c
  4120d2:	mov    bl,0xd
  4120d4:	inc    ebx
  4120d5:	call   0xe75e:0xc5b31a22
  4120dc:	push   cs
  4120dd:	add    ch,BYTE PTR [ebx-0x23]
  4120e0:	xor    eax,0x122b800e
  4120e5:	in     al,dx
  4120e6:	or     eax,0x6a27166a
  4120eb:	mov    eax,0x2974d1b4
  4120f0:	mov    esp,0x41da5a5f
  4120f5:	jo     0x412101
  4120f7:	xchg   esi,eax
  4120f8:	sub    BYTE PTR [ecx+eiz*1],dh
  4120fb:	(bad)  
  4120fd:	adc    eax,DWORD PTR [ecx]
  4120ff:	pop    edi
  412100:	cdq    
  412101:	mov    esi,0xcbc7e825
  412106:	dec    ebp
  412107:	adc    DWORD PTR [ebp-0x75a009b7],eax
  41210d:	inc    esi
  41210e:	scas   al,BYTE PTR es:[edi]
  41210f:	push   edx
  412110:	mov    es,WORD PTR [edx]
  412112:	and    dh,BYTE PTR [edx]
  412114:	fs adc al,0x91
  412117:	loope  0x4120eb
  412119:	int3   
  41211a:	mov    es,WORD PTR [edi+0x61]
  41211d:	mov    edx,0x872beb1f
  412122:	inc    edx
  412123:	jle    0x412106
  412125:	pop    ebp
  412126:	xchg   edi,eax
  412127:	scas   eax,DWORD PTR es:[edi]
  412128:	adc    eax,0x2ce6f6d2
  41212d:	fild   QWORD PTR [ecx+0x1f]
  412130:	retf   0x5a3b
  412133:	xchg   esp,eax
  412134:	xor    DWORD PTR [edi],eax
  412136:	mov    eax,ebp
  412138:	cmp    eax,0x8095d0d9
  41213d:	xchg   esi,eax
  41213e:	(bad)  [esp+ebx*8-0x71]
  412142:	cmp    BYTE PTR [edi+0x31f6f42c],0x5f
  412149:	jp     0x41210c
  41214b:	(bad)  
  41214c:	mov    ss,WORD PTR [eax+0x7da92b3d]
  412152:	pop    ds
  412153:	nop
  412154:	mov    ds:0x126d4cb8,eax
  412159:	(bad)  
  41215a:	sbb    al,0xba
  41215c:	stos   DWORD PTR es:[edi],eax
  41215d:	fiadd  DWORD PTR [edx-0x2818ade]
  412163:	mov    al,ds:0x3bc10452
  412168:	mov    dh,0x37
  41216a:	out    dx,eax
  41216b:	in     eax,dx
  41216c:	xchg   ecx,eax
  41216d:	out    0x9e,eax
  41216f:	retf   0x6aff
  412172:	jae    0x412108
  412174:	(bad)  
  412175:	pop    esi
  412176:	pop    edi
  412177:	popa   
  412178:	mov    esp,ebx
  41217a:	dec    esi
  41217b:	jbe    0x41219b
  41217d:	test   al,0x5
  41217f:	inc    eax
  412180:	jne    0x4121d0
  412182:	and    bh,BYTE PTR [edx]
  412184:	jb     0x4121fb
  412186:	retf   0xf16f
  412189:	ds (bad) 
  41218b:	mov    bl,0xb8
  41218d:	fs inc edi
  41218f:	enter  0x7511,0xcc
  412193:	jnp    0x412194
  412195:	cmp    al,0x11
  412197:	push   0xffffffb1
  412199:	inc    ebx
  41219a:	push   ebx
  41219b:	not    eax
  41219d:	pop    ss
  41219e:	lods   eax,DWORD PTR ds:[esi]
  41219f:	xor    ecx,edi
  4121a1:	sahf   
  4121a2:	sbb    DWORD PTR [esi-0x29fff35c],esi
  4121a8:	xchg   esi,eax
  4121a9:	lods   eax,DWORD PTR ds:[esi]
  4121aa:	mov    ebp,DWORD PTR [edi-0x71d34d44]
  4121b0:	adc    ebx,ebx
  4121b2:	cmp    DWORD PTR [edx+eiz*2],0xb3627ff
  4121b9:	cmp    esi,ebx
  4121bb:	daa    
  4121bc:	shl    BYTE PTR [ebx+esi*4-0x9],0x9b
  4121c1:	or     al,0xc4
  4121c3:	or     DWORD PTR [esi],ecx
  4121c5:	aad    0xac
  4121c7:	in     al,dx
  4121c8:	in     eax,0xd1
  4121ca:	inc    eax
  4121cb:	fld    TBYTE PTR [ebp-0x72a03954]
  4121d1:	or     esp,DWORD PTR [eax+0x6d]
  4121d4:	cmp    ch,BYTE PTR [esi+0x12]
  4121d7:	test   eax,0xfd5b7c6f
  4121dc:	cld    
  4121dd:	add    DWORD PTR [edx+0x49],0xffffffe0
  4121e1:	dec    edi
  4121e2:	dec    edi
  4121e3:	imul   edi,ebx,0x36
  4121e6:	je     0x4121e2
  4121e8:	push   0x9cb9b50e
  4121ed:	(bad)  
  4121ef:	cdq    
  4121f0:	ins    BYTE PTR es:[edi],dx
  4121f1:	jmp    0x41225e
  4121f3:	push   cs
  4121f4:	pushf  
  4121f5:	pop    edi
  4121f6:	stos   BYTE PTR es:[edi],al
  4121f7:	pushf  
  4121f8:	addr16 repz push esi
  4121fb:	pop    ebp
  4121fc:	cmp    al,0x70
  4121fe:	add    BYTE PTR [esp+ebx*2-0x34f8d9a6],bh
  412205:	pop    esp
  412206:	mov    esp,0xb2f14510
  41220b:	(bad)  
  41220c:	scas   eax,DWORD PTR es:[edi]
  41220d:	rcl    BYTE PTR [edx+0x4d],1
  412210:	(bad)  
  412211:	out    dx,eax
  412212:	sbb    ah,ch
  412214:	cmp    esp,ecx
  412216:	enter  0xd324,0xfc
  41221a:	xor    edx,DWORD PTR [eax]
  41221c:	lods   al,BYTE PTR ds:[esi]
  41221d:	sbb    eax,0x16e930fc
  412222:	sbb    eax,0xf9c25905
  412227:	jg     0x412288
  412229:	dec    ebp
  41222a:	imul   edx,DWORD PTR [edi+0x66],0xffffff98
  41222e:	add    cl,bh
  412230:	inc    edi
  412231:	mov    DWORD PTR [esi],esi
  412233:	pop    es
  412234:	iret   
  412235:	dec    ebp
  412236:	fcmovb st,st(2)
  412238:	rcl    DWORD PTR [edi-0x55807448],cl
  41223e:	(bad)  
  41223f:	pop    es
  412240:	cmp    ebp,DWORD PTR es:[esp+eax*4-0x8]
  412245:	outs   dx,BYTE PTR ds:[esi]
  412246:	(bad)  
  412248:	mov    ds:0xd9135b26,eax
  41224d:	in     eax,dx
  41224e:	(bad)  
  41224f:	in     al,0xd9
  412251:	mov    eax,0xa58ae1e
  412256:	stc    
  412257:	das    
  412258:	aam    0xa7
  41225a:	stos   DWORD PTR es:[edi],eax
  41225b:	inc    ebx
  41225c:	pop    edx
  41225d:	xor    al,0x70
  41225f:	mov    bh,0x89
  412261:	xchg   BYTE PTR [ebp+0x9cb4e5],bh
  412267:	fmul   st(5),st
  412269:	push   cs
  41226a:	jno    0x4121fd
  41226c:	mov    ecx,0x9d955c67
  412271:	mov    dl,BYTE PTR [eax]
  412273:	lock les esp,FWORD PTR [ecx-0xf6d8c33]
  41227a:	jnp    0x4122cd
  41227c:	mov    esp,ebp
  41227e:	xor    ebx,esp
  412280:	ja     0x41223a
  412282:	mov    edi,0x622bf72d
  412287:	adc    bh,dl
  412289:	sbb    al,BYTE PTR [edi-0x7f86ac9e]
  41228f:	sbb    BYTE PTR [edi+0x16],bl
  412292:	xlat   BYTE PTR ds:[ebx]
  412293:	dec    ecx
  412294:	mov    ebx,0xff8f1b41
  412299:	cmp    al,0xcf
  41229b:	in     eax,0xd6
  41229d:	aad    0x56
  41229f:	jl     0x4122c3
  4122a1:	fstp   TBYTE PTR [esi+edi*1-0x46]
  4122a5:	fs jp  0x4122d4
  4122a8:	dec    esi
  4122a9:	inc    esi
  4122aa:	and    al,0xcd
  4122ac:	xor    eax,0xf79c218e
  4122b1:	(bad)  
  4122b3:	dec    edx
  4122b4:	into   
  4122b5:	dec    edi
  4122b6:	mov    bl,0x45
  4122b8:	add    edx,edx
  4122ba:	jne    0x4122ca
  4122bc:	jp     0x41232f
  4122be:	bound  esp,QWORD PTR cs:[eax+0x1e10e731]
  4122c5:	nop
  4122c6:	push   esp
  4122c7:	inc    edx
  4122c8:	cmp    eax,0xf09e6198
  4122cd:	add    ch,BYTE PTR [ecx-0x7cc8840b]
  4122d3:	test   eax,0xf17f2cf4
  4122d8:	cli    
  4122d9:	in     eax,0x6f
  4122db:	mov    edx,0x3a570a07
  4122e0:	xor    eax,0x3544ca15
  4122e5:	ins    DWORD PTR es:[edi],dx
  4122e6:	inc    esp
  4122e7:	cmc    
  4122e8:	jle    0x412352
  4122ea:	add    DWORD PTR [edi],ecx
  4122ec:	mov    eax,ds:0x7ec171c3
  4122f1:	push   ecx
  4122f2:	rol    DWORD PTR [ecx],cl
  4122f4:	mov    cs,WORD PTR [esi-0x70a21bd1]
  4122fa:	xor    ch,bl
  4122fc:	out    dx,eax
  4122fd:	shl    edi,1
  4122ff:	dec    eax
  412300:	inc    ebx
  412301:	ja     0x41234c
  412303:	mov    al,0x2f
  412305:	loop   0x412335
  412307:	push   edi
  412308:	xchg   esp,eax
  412309:	fdivr  DWORD PTR [edx+ecx*8+0x2e]
  41230d:	pusha  
  41230e:	pop    edi
  41230f:	adc    dl,ah
  412311:	loop   0x412293
  412313:	stos   BYTE PTR es:[edi],al
  412314:	add    BYTE PTR [esi],bh
  412316:	int    0xd2
  412318:	mov    ebp,0x354caa16
  41231d:	pop    ss
  41231e:	(bad)  
  41231f:	push   eax
  412320:	loope  0x4122a2
  412322:	test   al,0xda
  412324:	loopne 0x4122d8
  412326:	mov    ds:0xb2020af2,al
  41232b:	xchg   esp,eax
  41232c:	sti    
  41232d:	(bad)  
  41232e:	xor    ebp,ebx
  412330:	cmp    eax,0x96ff0737
  412335:	mov    ah,0xcd
  412337:	fs or  al,0x2c
  41233a:	pop    ss
  41233b:	mov    dh,0x4a
  41233d:	call   0x2d441576
  412342:	xor    DWORD PTR [edx+0x43aa4afc],edx
  412348:	inc    esp
  412349:	push   ebp
  41234a:	jns    0x4122fe
  41234c:	ret    
  41234d:	inc    esi
  41234e:	add    ch,BYTE PTR [eax+ebx*2]
  412351:	inc    eax
  412352:	mov    eax,ds:0xa063a63a
  412357:	xchg   esp,eax
  412358:	out    dx,eax
  412359:	lahf   
  41235a:	lds    ebp,FWORD PTR [eax]
  41235c:	inc    esp
  41235d:	lea    esp,[eax-0x45fea12b]
  412363:	sbb    ch,BYTE PTR [ebx+0x62]
  412366:	sbb    DWORD PTR [edx-0x609f0a52],ecx
  41236c:	jg     0x412326
  41236e:	adc    al,0x2a
  412370:	aad    0x98
  412372:	iret   
  412373:	scas   eax,DWORD PTR es:[edi]
  412374:	(bad)  
  412375:	jecxz  0x412339
  412377:	repz and DWORD PTR es:[esi+0x4b],ecx
  41237c:	ins    BYTE PTR es:[edi],dx
  41237d:	pop    esi
  41237e:	(bad)  
  41237f:	adc    eax,0xfabffdf2
  412384:	push   ecx
  412385:	fist   DWORD PTR es:[edi+0x738f8763]
  41238c:	in     eax,dx
  41238d:	bound  ebx,QWORD PTR [eax]
  41238f:	mov    esp,0xc53bcf69
  412394:	(bad)  
  412395:	aad    0xf0
  412397:	pop    ebx
  412398:	cmp    ah,0x19
  41239b:	fild   QWORD PTR [ecx+0x6c]
  41239e:	inc    edi
  41239f:	inc    edi
  4123a0:	pop    eax
  4123a1:	cli    
  4123a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a3:	scas   al,BYTE PTR es:[edi]
  4123a4:	inc    esp
  4123a5:	xchg   esi,eax
  4123a6:	mov    al,0x9
  4123a8:	mov    ebx,0x4554ee54
  4123ad:	sar    DWORD PTR [ebp+0x5d8ec148],0x6c
  4123b4:	data16 loope 0x412343
  4123b7:	cmp    BYTE PTR [esi],bh
  4123b9:	clc    
  4123ba:	int3   
  4123bb:	push   esi
  4123bc:	inc    ebx
  4123bd:	aaa    
  4123be:	mov    DWORD PTR [ebp+0x5d],edi
  4123c1:	mov    eax,ds:0x3ec4b638
  4123c6:	scas   al,BYTE PTR es:[edi]
  4123c7:	call   FWORD PTR [eax+0x26dc21bd]
  4123cd:	sub    al,0x88
  4123cf:	(bad)  
  4123d0:	cld    
  4123d1:	(bad)
  4123d5:	les    ecx,FWORD PTR [ebx-0x72]
  4123d8:	jecxz  0x41244c
  4123da:	xor    ecx,DWORD PTR [ebx-0x2f3b70da]
  4123e0:	xchg   DWORD PTR [esi-0x63db5927],edx
  4123e6:	fst    QWORD PTR [eax]
  4123e8:	and    DWORD PTR [edx+ecx*8],ebp
  4123eb:	imul   ebp,DWORD PTR [esi+0x58d6f040],0x10
  4123f2:	out    0xd4,eax
  4123f4:	inc    edi
  4123f5:	mov    edi,0x36973c46
  4123fa:	jo     0x41242a
  4123fc:	pop    ebx
  4123fd:	stc    
  4123fe:	pusha  
  4123ff:	call   0x872c:0x248be0c9
  412406:	jge    0x4123cb
  412408:	dec    esi
  412409:	fsubr  QWORD PTR [edx+0x6c85546b]
  41240f:	or     BYTE PTR [edx+0x8c1f802],al
  412415:	aas    
  412416:	inc    ebp
  412417:	mov    edx,0x7b69ea0
  41241c:	call   0xe77ca896
  412421:	mov    BYTE PTR [esi+0x39],dh
  412424:	ins    DWORD PTR es:[edi],dx
  412425:	push   esi
  412426:	ins    DWORD PTR es:[edi],dx
  412427:	inc    esi
  412428:	inc    ecx
  412429:	and    ch,BYTE PTR [edx-0x19affc35]
  41242f:	mov    ch,0x50
  412431:	mov    WORD PTR [edi+ebx*8-0x31],?
  412435:	je     0x412483
  412437:	or     BYTE PTR ds:0xab8f533f,0x3
  41243e:	inc    esi
  41243f:	or     dh,BYTE PTR es:0x689773d9
  412446:	pop    esp
  412447:	or     edx,DWORD PTR ds:0x6777012c
  41244d:	and    BYTE PTR [esi],al
  41244f:	xchg   esi,eax
  412450:	xor    BYTE PTR [edx+eax*8],cl
  412453:	mov    esi,0xdcf76028
  412458:	fist   DWORD PTR [ebp+0x69]
  41245b:	jne    0x412413
  41245d:	jns    0x412419
  41245f:	mov    esp,0xabd8dea8
  412464:	inc    eax
  412465:	jb     0x41242b
  412467:	icebp  
  412468:	mov    cl,0xad
  41246a:	lock in al,0xee
  41246d:	sub    edi,DWORD PTR [ebp+0x36241d7f]
  412473:	pop    esi
  412474:	stos   DWORD PTR es:[edi],eax
  412475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412476:	adc    eax,0x8179d82a
  41247b:	mov    dl,0x2f
  41247d:	push   ebx
  41247e:	inc    edx
  41247f:	stos   BYTE PTR es:[edi],al
  412480:	int    0x8b
  412482:	push   ecx
  412483:	pop    edx
  412484:	out    dx,eax
  412485:	mov    BYTE PTR [ecx-0x75],dl
  412488:	daa    
  412489:	rcr    BYTE PTR [edx+0x52],1
  41248c:	mov    cl,BYTE PTR [edx+0x8695ce6]
  412492:	push   ds
  412493:	fldcw  WORD PTR [esi-0x2bfa9714]
  412499:	or     DWORD PTR [ecx+eax*8],0x4ef49d3d
  4124a0:	lods   eax,DWORD PTR ds:[esi]
  4124a1:	mov    edx,ebp
  4124a3:	push   0xffffffdc
  4124a5:	mov    ebx,0xde5773f4
  4124aa:	out    dx,eax
  4124ab:	lea    esp,[edi]
  4124ad:	imul   edi,DWORD PTR [edx-0x30e09229],0x8
  4124b4:	or     al,BYTE PTR [esi]
  4124b6:	inc    edi
  4124b7:	and    BYTE PTR [edi],dl
  4124b9:	add    al,bh
  4124bb:	iret   
  4124bc:	inc    eax
  4124bd:	or     DWORD PTR [esi],ebp
  4124bf:	xor    eax,0x4b9f499d
  4124c4:	dec    edx
  4124c5:	jne    0x41253d
  4124c7:	dec    edi
  4124c8:	xchg   ebp,eax
  4124c9:	stos   DWORD PTR es:[edi],eax
  4124ca:	mov    ah,0x42
  4124cc:	rcl    BYTE PTR [esi],0x28
  4124cf:	cmp    eax,esi
  4124d1:	data16 cs out 0xe8,al
  4124d5:	xor    al,0xc7
  4124d7:	and    ebp,DWORD PTR [ecx]
  4124d9:	push   ebp
  4124da:	cdq    
  4124db:	lods   eax,DWORD PTR ds:[esi]
  4124dc:	pop    edx
  4124dd:	cli    
  4124de:	and    eax,0xd6f0000
  4124e3:	gs in  eax,0x2f
  4124e6:	mov    dl,0x16
  4124e8:	xor    dh,BYTE PTR [eax-0x3b]
  4124eb:	jo     0x412486
  4124ed:	out    dx,al
  4124ee:	cmp    BYTE PTR [edi+0x3a2e6ae6],dh
  4124f4:	cld    
  4124f5:	xchg   DWORD PTR [edi+0xbd8d768],eax
  4124fb:	popf   
  4124fc:	mov    dh,0x95
  4124fe:	je     0x4124d9
  412500:	mov    esp,0x59c96995
  412505:	std    
  412506:	add    DWORD PTR [ebx],esi
  412508:	sub    esi,0xffffffd0
  41250b:	jecxz  0x41253a
  41250d:	sub    DWORD PTR [ebp+esi*8+0x676537ed],eax
  412514:	and    BYTE PTR [ebp+0x6b94e010],0x3d
  41251b:	add    ebp,DWORD PTR [eax+0x1a]
  41251e:	or     ch,BYTE PTR [ebx+0x0]
  412521:	or     cl,BYTE PTR [eax+0x4602ec19]
  412527:	xchg   edi,eax
  412528:	cmp    cl,ch
  41252a:	lods   eax,DWORD PTR ds:[esi]
  41252b:	sub    DWORD PTR [ebp+0x7314ad4d],0x17
  412532:	sbb    BYTE PTR [edi],cl
  412534:	push   eax
  412535:	inc    edx
  412536:	das    
  412537:	test   al,0x23
  412539:	iret   
  41253a:	cmp    ebx,ecx
  41253c:	mov    eax,ds:0xaa7ce9e2
  412541:	cmc    
  412542:	es mov ebp,0xb3a01b6
  412548:	sbb    ah,BYTE PTR [esi]
  41254a:	jb     0x4125ab
  41254c:	shl    DWORD PTR fs:[edx+0x79],cl
  412550:	xchg   BYTE PTR [ebx+0x64b4247f],dh
  412556:	cmp    dl,BYTE PTR ds:0x6685f252
  41255c:	mov    esp,0x9e468deb
  412561:	shr    cl,cl
  412563:	push   ecx
  412564:	test   al,0xed
  412566:	mov    BYTE PTR [ebx-0x21],ah
  412569:	(bad)  
  41256a:	cld    
  41256b:	dec    esp
  41256c:	inc    edx
  41256d:	mov    dh,0x93
  41256f:	out    dx,eax
  412570:	pop    ebp
  412571:	fldcw  WORD PTR [esi]
  412573:	mov    ebx,0xf3d7d509
  412578:	mov    esi,0x62840594
  41257d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41257e:	(bad)  
  41257f:	jnp    0x4125f3
  412581:	ret    0x7485
  412584:	jp     0x4125ad
  412586:	sbb    al,0xf4
  412588:	sub    esp,DWORD PTR [eax]
  41258a:	fild   DWORD PTR cs:[ebx]
  41258d:	push   ebp
  41258e:	fbstp  TBYTE PTR [ecx]
  412590:	dec    edi
  412591:	popa   
  412592:	inc    esi
  412593:	adc    BYTE PTR ds:0x6755747e,ch
  412599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41259a:	jne    0x412522
  41259c:	jmp    0xc0c6f3e3
  4125a1:	test   al,0x9b
  4125a3:	cs mov ebx,0x9c7f171f
  4125aa:	mov    cl,0xac
  4125ad:	adc    edi,DWORD PTR [edi-0x5a]
  4125b0:	gs xor eax,0xec35d779
  4125b6:	mov    ds:0x667c8b4b,al
  4125bb:	lea    edx,[eax]
  4125bd:	inc    ebp
  4125be:	lods   eax,DWORD PTR ds:[esi]
  4125bf:	inc    ecx
  4125c0:	mov    ebp,0xd05d4a08
  4125c5:	lods   al,BYTE PTR ds:[esi]
  4125c6:	sub    al,0x45
  4125c8:	rol    BYTE PTR [esi+0x60],0x2a
  4125cc:	mov    ecx,0x50bb1c17
  4125d1:	jecxz  0x412569
  4125d3:	aas    
  4125d4:	sub    eax,0xe3584ffb
  4125d9:	dec    edi
  4125da:	fisttp WORD PTR [ecx-0x65cc6ef8]
  4125e0:	mov    ch,0x92
  4125e2:	pushf  
  4125e3:	push   ebx
  4125e4:	pop    ds
  4125e5:	fcom   QWORD PTR [eax+edx*2-0x5d]
  4125e9:	jp     0x41262c
  4125eb:	mov    al,ds:0x362396e4
  4125f0:	push   ss
  4125f1:	ds mov ebp,0x9102a322
  4125f7:	jb     0x4125b4
  4125f9:	jnp    0x412609
  4125fb:	popf   
  4125fc:	push   cs
  4125fd:	sbb    al,0x27
  4125ff:	fiadd  WORD PTR [edi-0x60c489ec]
  412605:	into   
  412606:	(bad)  
  412607:	dec    ebp
  412608:	mov    ds:0xfc63eb34,eax
  41260d:	es loopne 0x412592
  412610:	retf   0x9687
  412613:	cs jge 0x41265f
  412616:	pop    ss
  412617:	adc    BYTE PTR [esi],bl
  412619:	stos   BYTE PTR es:[edi],al
  41261a:	cli    
  41261b:	pop    esi
  41261c:	je     0x41269a
  41261e:	sar    BYTE PTR [edx+0x3bcaa85d],0xf8
  412625:	mov    DWORD PTR [esi],edx
  412627:	aaa    
  412628:	loope  0x4125da
  41262a:	imul   esp,DWORD PTR [ebp-0x5cd6e9d3],0x47
  412631:	int    0xb2
  412633:	icebp  
  412634:	xor    ah,bh
  412636:	push   esi
  412637:	daa    
  412638:	loope  0x412619
  41263a:	stc    
  41263b:	xor    ebx,DWORD PTR [edi+ebx*2+0x67]
  41263f:	sub    DWORD PTR [ecx+0x61],ebx
  412642:	mov    ds:0xc0235f3b,eax
  412647:	sbb    cl,BYTE PTR [eax+0x39946958]
  41264d:	pop    ss
  41264e:	jge    0x4125d9
  412650:	jno    0x4126bd
  412652:	add    DWORD PTR [ecx-0x4f5760c],esp
  412658:	sub    eax,0x69aebf40
  41265d:	push   eax
  41265e:	ret    
  41265f:	and    eax,0xddb7cf2c
  412664:	xchg   WORD PTR [ebp-0x75],dx
  412668:	jl     0x41262d
  41266a:	push   ecx
  41266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41266c:	mov    bh,0x86
  41266e:	int3   
  41266f:	xor    DWORD PTR [eax+0x7a8e24dd],edx
  412675:	lods   al,BYTE PTR ds:[esi]
  412676:	pop    ebp
  412677:	lock (bad) 
  41267a:	loope  0x41260f
  41267c:	push   ebp
  41267d:	ins    BYTE PTR es:[edi],dx
  41267e:	pop    edi
  41267f:	dec    ebp
  412680:	sbb    dl,ch
  412682:	out    0xc8,eax
  412684:	fistp  QWORD PTR [esi]
  412686:	cmc    
  412687:	push   es
  412688:	loope  0x4126c7
  41268a:	lock jnp 0x412623
  41268d:	mov    esp,0x9f153973
  412692:	push   edx
  412693:	ret    0x172e
  412696:	sub    DWORD PTR [ecx],esp
  412698:	in     al,0x81
  41269a:	(bad)  
  41269b:	fwait
  41269c:	or     BYTE PTR [eax-0x373d2165],dl
  4126a2:	test   DWORD PTR [esi-0x63e55697],eax
  4126a8:	push   ebp
  4126a9:	addr16 in al,dx
  4126ab:	jb     0x4126ae
  4126ad:	rcr    DWORD PTR [ebx],0x5a
  4126b0:	add    al,0xd6
  4126b2:	adc    ah,BYTE PTR [ebx]
  4126b4:	ror    BYTE PTR [ebx],1
  4126b6:	mov    ds:0xb1203838,al
  4126bb:	mov    ss,WORD PTR [edi-0x1fa312bf]
  4126c1:	add    al,0x9
  4126c3:	sahf   
  4126c4:	push   ecx
  4126c5:	or     DWORD PTR [edx],ebp
  4126c7:	mov    cl,0x51
  4126c9:	xor    dl,BYTE PTR [ebx-0x5e]
  4126cc:	in     al,dx
  4126cd:	sub    eax,0x9b7a466a
  4126d2:	xchg   edi,eax
  4126d3:	stos   BYTE PTR es:[edi],al
  4126d4:	jp     0x41268b
  4126d6:	pushf  
  4126d7:	cmc    
  4126d8:	cs dec edi
  4126da:	jae    0x4126fa
  4126dc:	out    dx,eax
  4126dd:	dec    ebp
  4126de:	shl    ebx,1
  4126e0:	mov    edx,0xb321c331
  4126e5:	or     esi,ecx
  4126e7:	jl     0x412747
  4126e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ea:	popf   
  4126eb:	stc    
  4126ec:	hlt    
  4126ed:	repnz push ecx
  4126ef:	push   edx
  4126f0:	loope  0x4126b1
  4126f2:	hlt    
  4126f3:	sar    ecx,cl
  4126f5:	(bad)  
  4126f6:	lods   eax,DWORD PTR ds:[esi]
  4126f7:	inc    edi
  4126f8:	and    eax,0x97b3aac2
  4126fd:	push   es
  4126fe:	loope  0x41276c
  412700:	xchg   ebp,eax
  412701:	ins    BYTE PTR es:[edi],dx
  412702:	dec    BYTE PTR ds:[ecx]
  412705:	mov    ebx,0x2ba980cf
  41270a:	xor    BYTE PTR [edx+eiz*1],ah
  41270d:	push   eax
  41270e:	push   esp
  41270f:	mov    BYTE PTR es:[edx-0x51],0x3f
  412714:	or     esi,0xffffffd3
  412717:	daa    
  412718:	(bad)  
  412719:	jl     0x41274f
  41271b:	aad    0x3b
  41271d:	mov    edx,0x62a68957
  412722:	push   eax
  412723:	test   BYTE PTR [ebx],0x6d
  412726:	mov    ecx,0x417f1777
  41272b:	cmc    
  41272c:	or     edx,ecx
  41272e:	pop    esi
  41272f:	adc    DWORD PTR [eax+eiz*4+0x6e],ebp
  412733:	and    esi,DWORD PTR [eax+0x1f]
  412736:	sbb    al,0xf0
  412738:	call   0x1fd5dff4
  41273d:	daa    
  41273e:	(bad)  
  412740:	cwde   
  412741:	mov    bh,0x99
  412743:	sar    DWORD PTR [eax-0x1c0e7b9e],1
  412749:	fild   WORD PTR [eax]
  41274b:	xor    al,0x7
  41274d:	mov    ch,BYTE PTR [edi+ebp*4]
  412750:	jge    0x412768
  412752:	mov    dh,0x51
  412754:	iret   
  412755:	aas    
  412756:	xchg   BYTE PTR [eax],dl
  412758:	fnstsw WORD PTR [ebp-0x11]
  41275b:	in     eax,dx
  41275c:	loopne 0x4126e9
  41275e:	sbb    bh,BYTE PTR [ebx+0x59c59367]
  412764:	xor    edx,ecx
  412766:	leave  
  412767:	lahf   
  412768:	(bad)  
  412769:	loope  0x4127ea
  41276b:	ret    
  41276c:	lods   al,BYTE PTR ds:[esi]
  41276d:	dec    esp
  41276e:	xchg   BYTE PTR [edx+esi*1],bl
  412771:	mov    ?,WORD PTR [edi+0xce3a282]
  412777:	div    DWORD PTR [ebp+0x7]
  41277a:	push   cs
  41277b:	jecxz  0x41272a
  41277d:	dec    ebx
  41277e:	sub    esp,DWORD PTR [ecx+0x299d890f]
  412784:	mov    ebp,0xbe97e209
  412789:	xchg   ebx,eax
  41278a:	jbe    0x4127dc
  41278c:	pop    es
  41278d:	inc    edx
  41278e:	or     dh,BYTE PTR [edx-0x324bf9d4]
  412794:	xor    BYTE PTR [esi],cl
  412796:	in     eax,dx
  412797:	call   0xf3e7:0xef3c0c7d
  41279e:	xchg   esi,eax
  41279f:	test   al,0x92
  4127a1:	pop    ecx
  4127a2:	or     ebp,DWORD PTR [eax-0x5edd89ea]
  4127a8:	iret   
  4127a9:	jmp    0x2f9a:0xcf9a3f12
  4127b0:	jmp    0xb39e114d
  4127b5:	lods   al,BYTE PTR ds:[esi]
  4127b6:	xchg   ebx,eax
  4127b7:	lods   al,BYTE PTR ds:[esi]
  4127b8:	jle    0x41280b
  4127ba:	dec    ecx
  4127bb:	mov    al,0x30
  4127bd:	sahf   
  4127be:	int    0x5b
  4127c0:	add    esp,DWORD PTR [ecx+0x67f9dbd6]
  4127c6:	mov    ebx,0xaeeefa90
  4127cb:	ror    BYTE PTR [edi-0x9],cl
  4127ce:	in     al,dx
  4127cf:	or     cl,BYTE PTR [ebx]
  4127d1:	xor    eax,DWORD PTR [ecx-0x3951a618]
  4127d7:	mov    ah,0x49
  4127d9:	inc    edi
  4127da:	xor    DWORD PTR [edi],esp
  4127dc:	pop    esi
  4127dd:	add    DWORD PTR [eax-0x37],eax
  4127e0:	std    
  4127e1:	jmp    0x4127db
  4127e3:	push   esi
  4127e4:	jg     0x412839
  4127e6:	in     eax,dx
  4127e7:	inc    ecx
  4127e8:	cmp    dl,dh
  4127ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127eb:	adc    BYTE PTR [edi],cl
  4127ed:	push   ss
  4127ee:	ss aad 0x22
  4127f1:	mov    dh,0x69
  4127f3:	daa    
  4127f4:	in     al,0x64
  4127f6:	ins    BYTE PTR es:[edi],dx
  4127f7:	sbb    al,0x79
  4127f9:	push   eax
  4127fa:	sahf   
  4127fb:	repnz mov bh,0xef
  4127fe:	test   DWORD PTR [edx+eax*8],eax
  412801:	dec    eax
  412802:	in     al,dx
  412803:	jge    0x4127b6
  412805:	dec    ebx
  412806:	xchg   esp,eax
  412807:	ret    0xb41c
  41280a:	xor    al,0x45
  41280c:	adc    DWORD PTR [ebx],0x56
  41280f:	lods   al,BYTE PTR ds:[esi]
  412810:	sti    
  412811:	push   ecx
  412812:	ficomp WORD PTR [esi+0x2d25f507]
  412818:	sub    al,cl
  41281a:	pop    edi
  41281b:	lds    ecx,FWORD PTR [eax]
  41281d:	fwait
  41281e:	pop    esi
  41281f:	add    DWORD PTR fs:[edx],esi
  412822:	ret    
  412823:	out    dx,al
  412824:	pushf  
  412825:	jne    0x41289d
  412827:	push   ebx
  412828:	lea    ebp,[esi]
  41282a:	ins    DWORD PTR es:[edi],dx
  41282b:	and    DWORD PTR [ecx+0x59aa585a],edi
  412831:	mov    edx,0xe874cd4
  412836:	mov    bl,0xd6
  412838:	stos   DWORD PTR es:[edi],eax
  412839:	addr16 out 0xd,eax
  41283c:	daa    
  41283d:	(bad)  
  41283e:	imul   BYTE PTR [esi]
  412840:	(bad)  
  412842:	jbe    0x412811
  412844:	mov    ds:0x26685516,eax
  412849:	(bad)  
  41284a:	push   0xffffffbb
  41284c:	xchg   esp,eax
  41284d:	mov    BYTE PTR [ecx-0x4c5a6af9],0xfd
  412854:	fisttp QWORD PTR [edx]
  412856:	fild   QWORD PTR [edi]
  412858:	sbb    al,0xe0
  41285a:	popf   
  41285b:	pop    es
  41285c:	ror    BYTE PTR fs:[edi],cl
  41285f:	popf   
  412860:	xor    bh,BYTE PTR [edx]
  412862:	xor    DWORD PTR [ebp-0x3e806f59],0xfffffff7
  412869:	and    BYTE PTR [edi+0x49],0x8c
  41286d:	imul   esi,DWORD PTR ds:0x993e1462,0x7589b8c3
  412877:	add    eax,0x987dcf97
  41287c:	pop    ebx
  41287d:	int    0xc8
  41287f:	(bad)  
  412880:	out    0x9,eax
  412882:	add    ah,BYTE PTR [ebx+0x30d01549]
  412888:	aam    0x4e
  41288a:	fist   WORD PTR [edi]
  41288c:	pop    ebx
  41288d:	out    0xa3,eax
  41288f:	stos   BYTE PTR es:[edi],al
  412890:	mov    dl,BYTE PTR [esi-0x21a909dd]
  412896:	sar    DWORD PTR [ecx+0x37938fe2],1
  41289c:	inc    eax
  41289d:	stos   BYTE PTR es:[edi],al
  41289e:	pop    esp
  41289f:	jecxz  0x412911
  4128a1:	fs inc esp
  4128a3:	push   ss
  4128a4:	fild   QWORD PTR [ebx+ebx*8]
  4128a7:	aas    
  4128a8:	std    
  4128a9:	dec    ecx
  4128aa:	ja     0x41287b
  4128ac:	bound  ecx,QWORD PTR [edi+0x65]
  4128af:	xor    eax,0x9fcbff3c
  4128b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b5:	mov    ah,0x4d
  4128b7:	mov    ebp,0x9c80e93
  4128bc:	xchg   edx,eax
  4128bd:	fistp  DWORD PTR [esi+ebp*2+0x64]
  4128c1:	inc    ecx
  4128c2:	cmp    DWORD PTR [ebx],esp
  4128c4:	aam    0xb1
  4128c6:	lahf   
  4128c7:	cmp    al,0x5c
  4128c9:	stc    
  4128ca:	mov    ah,0x4
  4128cc:	dec    esp
  4128cd:	inc    edx
  4128ce:	icebp  
  4128cf:	xlat   BYTE PTR ds:[ebx]
  4128d0:	adc    BYTE PTR [esi],0xea
  4128d3:	out    0x4f,eax
  4128d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d6:	cli    
  4128d7:	push   esp
  4128d8:	xchg   edx,eax
  4128d9:	and    BYTE PTR [eax+0x6b],dl
  4128dc:	mov    bh,BYTE PTR [ecx]
  4128de:	repz in al,dx
  4128e0:	and    ch,BYTE PTR [edi+0x9c4e371]
  4128e6:	lock or eax,0xb1f55b2a
  4128ec:	xchg   edi,eax
  4128ed:	pop    esi
  4128ee:	loope  0x412889
  4128f0:	mov    al,0x1e
  4128f2:	ror    BYTE PTR [ecx-0x61],1
  4128f5:	jbe    0x412938
  4128f7:	push   0x8dd39b43
  4128fc:	outs   dx,BYTE PTR ds:[esi]
  4128fd:	mov    eax,0xfdca0ba
  412902:	cmp    DWORD PTR [ebx-0x77],ecx
  412905:	jp     0x4128d7
  412907:	pusha  
  412908:	sub    dh,BYTE PTR [ebp-0x1]
  41290b:	dec    edx
  41290c:	pop    esi
  41290d:	and    al,0x98
  41290f:	sub    BYTE PTR ds:0x9140ac47,ch
  412915:	nop
  412916:	aaa    
  412917:	jg     0x41290b
  412919:	add    edx,DWORD PTR [edx+edx*8]
  41291c:	xor    edx,0xfaa86a35
  412922:	retf   0x6343
  412925:	fistp  WORD PTR [edi]
  412927:	push   0x552e2975
  41292c:	or     eax,0x72b48948
  412931:	adc    BYTE PTR [eax+0x731a5525],bh
  412937:	jno    0x41298b
  412939:	pop    eax
  41293b:	mov    cl,0x59
  41293d:	cli    
  41293e:	mov    ds:0xe8deb972,eax
  412943:	mov    ebx,0x2dac65da
  412948:	loopne 0x4128d1
  41294a:	cmp    ebp,esi
  41294c:	mov    ss,WORD PTR [ebp-0x66178fd3]
  412952:	ret    0x4f02
  412955:	test   BYTE PTR [ebx+esi*1+0x3],bl
  412959:	sub    al,0x8b
  41295b:	mov    ah,0x6e
  41295d:	enter  0x1461,0xa7
  412961:	xor    eax,DWORD PTR [esi]
  412963:	imul   ebx,DWORD PTR [eax],0x45
  412966:	fnstenv [edi+0xa723aca]
  41296c:	retf   0x3bc9
  41296f:	and    esi,DWORD PTR [ebp-0x33cc29c2]
  412975:	and    eax,0x8936b402
  41297a:	ss mov esp,0x9150dafd
  412980:	(bad)  
  412981:	sub    al,BYTE PTR [edx-0x80]
  412984:	lods   al,BYTE PTR ds:[esi]
  412985:	mov    esp,0xee4595e7
  41298a:	mov    al,0x6b
  41298c:	inc    ebx
  41298d:	hlt    
  41298e:	adc    esp,ecx
  412990:	mov    WORD PTR [eax+0x5e],gs
  412993:	retf   0x9198
  412996:	out    0x42,eax
  412998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412999:	mov    dh,0x69
  41299b:	out    dx,al
  41299c:	cmp    al,0xf1
  41299e:	jmp    0x412a02
  4129a0:	dec    edi
  4129a1:	or     eax,DWORD PTR [ecx-0x43]
  4129a4:	push   esp
  4129a5:	inc    edi
  4129a6:	ds mov al,0xeb
  4129a9:	(bad)
  4129ad:	sub    eax,0x6a3f0d01
  4129b2:	out    0x83,al
  4129b4:	or     DWORD PTR [esi-0x24],ebx
  4129b7:	and    bl,BYTE PTR [ebx+0x40]
  4129ba:	(bad)  
  4129bb:	aam    0xa0
  4129bd:	loopne 0x412976
  4129bf:	sub    DWORD PTR [ebx],esi
  4129c1:	dec    ecx
  4129c2:	or     DWORD PTR [edi-0x2f],esi
  4129c5:	push   0x17
  4129c7:	fistp  DWORD PTR [edx+ebx*2-0x7c]
  4129cb:	mov    ah,0x53
  4129cd:	push   ebp
  4129ce:	(bad)  
  4129cf:	cld    
  4129d0:	shl    DWORD PTR ss:[ebx+0x3e],0x24
  4129d5:	fdivr  st(2),st
  4129d7:	inc    edi
  4129d8:	xor    dl,BYTE PTR [edi+0x54]
  4129db:	ret    0x2746
  4129de:	jne    0x41297a
  4129e0:	mov    ebx,0xfdea1851
  4129e5:	rcl    BYTE PTR [edi],0x2b
  4129e8:	cdq    
  4129e9:	cwde   
  4129ea:	inc    ebp
  4129eb:	dec    ecx
  4129ec:	mov    eax,DWORD PTR [edi]
  4129ee:	pusha  
  4129ef:	test   al,0x12
  4129f1:	mov    eax,eax
  4129f3:	pushf  
  4129f4:	dec    eax
  4129f5:	fs unpcklps xmm3,xmm2
  4129f9:	jmp    0x6159:0x66f29609
  412a00:	jg     0x4129bb
  412a02:	or     BYTE PTR ds:0xb505540d,cl
  412a08:	inc    edi
  412a09:	pop    ds
  412a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0b:	adc    al,0x5
  412a0d:	les    eax,FWORD PTR [ebx-0x65a44232]
  412a13:	mov    BYTE PTR [ebx],bl
  412a15:	imul   esp,DWORD PTR [eax+0x74],0xfffffffe
  412a19:	data16 cli 
  412a1b:	cmp    ebp,ecx
  412a1d:	mov    edi,0x13d571de
  412a22:	mov    edx,0x156ba757
  412a27:	mov    ebp,0x2b3c5743
  412a2c:	mov    ds:0x186309cb,al
  412a31:	int    0xa6
  412a33:	rol    DWORD PTR [ebp+ebx*1+0xfa841bf],0xa
  412a3b:	mov    eax,0x143a205f
  412a40:	adc    ecx,edi
  412a42:	ds lock sub eax,0xd11bf5aa
  412a49:	fisttp WORD PTR [esi-0x70]
  412a4c:	adc    DWORD PTR [edx-0x2b3abadc],edi
  412a52:	cmp    dh,ah
  412a54:	xor    ecx,ebx
  412a56:	cmc    
  412a57:	dec    esi
  412a58:	cmp    eax,0xfdb4884c
  412a5d:	popa   
  412a5e:	adc    cl,BYTE PTR [ebp+0x5b12a569]
  412a64:	ror    BYTE PTR [edi-0x437f22d7],1
  412a6a:	push   ebp
  412a6b:	xor    bh,al
  412a6d:	imul   esp,DWORD PTR [esp+ecx*8-0x6a],0x20
  412a72:	adc    eax,0xae4bbeb4
  412a77:	cmp    BYTE PTR [esi+0x5b0917a9],dl
  412a7d:	adc    ebx,DWORD PTR [ebx-0x6c]
  412a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a81:	test   al,0x3a
  412a83:	js     0x412a63
  412a85:	cmp    al,0xca
  412a87:	mov    ds:0x4c375f1,eax
  412a8c:	lods   eax,DWORD PTR ds:[esi]
  412a8d:	dec    ebx
  412a8e:	lds    ebx,FWORD PTR [ecx+0x20d72cde]
  412a94:	mov    cl,0xa7
  412a96:	lds    edx,FWORD PTR [esp+eiz*4+0x7fb1cd87]
  412a9d:	out    dx,eax
  412a9e:	mul    ah
  412aa0:	les    ebx,FWORD PTR [ebx+eax*4+0x24f25f6]
  412aa7:	loope  0x412abe
  412aa9:	pop    ebx
  412aaa:	xor    ah,ah
  412aac:	pop    ebx
  412aad:	call   0x20de:0x691833a2
  412ab4:	fsubrp st(6),st
  412ab6:	inc    ebp
  412ab7:	xchg   edi,eax
  412ab8:	es arpl bp,di
  412abb:	mov    ds,WORD PTR [esi+eax*1+0x689d212d]
  412ac2:	and    ecx,DWORD PTR [eax+ebx*8+0x7fe17c47]
  412ac9:	lds    esi,FWORD PTR [ecx-0x36421c7b]
  412acf:	jb     0x412afb
  412ad1:	hlt    
  412ad2:	leave  
  412ad3:	lock xor DWORD PTR [esi-0x4904c1ea],ecx
  412ada:	daa    
  412adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412adc:	leave  
  412add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ade:	mov    edx,DWORD PTR [eax-0x19]
  412ae1:	xlat   BYTE PTR ds:[ebx]
  412ae2:	adc    al,0xa0
  412ae4:	retf   0x5066
  412ae7:	fs dec edx
  412ae9:	push   esi
  412aea:	gs ss xchg ebx,eax
  412aed:	cmp    esp,esp
  412aef:	rcl    BYTE PTR cs:[eax+0x1],cl
  412af3:	or     eax,0x1a9633b4
  412af8:	pop    ds
  412af9:	psadbw mm3,QWORD PTR fs:[ecx]
  412afd:	mov    DWORD PTR [ebx+0x37],ebx
  412b00:	shl    al,cl
  412b02:	call   0xa1112235
  412b07:	fnstsw WORD PTR [esi+0x6aff377e]
  412b0d:	inc    dx
  412b0f:	test   eax,0x83461592
  412b14:	inc    ecx
  412b15:	cs push ecx
  412b17:	aaa    
  412b18:	inc    ebp
  412b19:	jg     0x412b38
  412b1b:	std    
  412b1c:	lahf   
  412b1d:	je     0x412af4
  412b1f:	jmp    0xe84b:0x8bb842fd
  412b26:	lahf   
  412b27:	mov    ah,0x3a
  412b29:	bound  eax,QWORD PTR [ecx]
  412b2b:	xlat   BYTE PTR ds:[ebx]
  412b2c:	cmp    eax,esp
  412b2e:	aas    
  412b2f:	lods   eax,DWORD PTR ds:[esi]
  412b30:	cmp    al,0xf9
  412b32:	call   0x5f98:0x30fab2b2
  412b39:	stos   DWORD PTR es:[edi],eax
  412b3a:	jne    0x412b55
  412b3c:	xor    edx,DWORD PTR [ecx-0x639b3493]
  412b42:	pusha  
  412b43:	pop    edi
  412b44:	fdivp  st(6),st
  412b46:	sbb    BYTE PTR [ecx+eax*2-0x65efc900],ch
  412b4d:	adc    eax,0x618dd012
  412b52:	fidiv  WORD PTR [edx+0x2c]
  412b55:	mov    dh,0x44
  412b57:	sbb    esp,DWORD PTR [ebp+0x10]
  412b5a:	xchg   edi,eax
  412b5b:	dec    ebx
  412b5c:	loopne 0x412ba0
  412b5e:	xor    ebx,DWORD PTR [ebx+0x33046857]
  412b64:	mov    gs,WORD PTR [ecx+ecx*2]
  412b67:	adc    al,0xa6
  412b69:	nop
  412b6a:	mov    ds:0x79fbe350,eax
  412b6f:	dec    esp
  412b70:	adc    cl,BYTE PTR [ebp+0x45db12af]
  412b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b77:	das    
  412b78:	or     dl,BYTE PTR [edx+0x46]
  412b7b:	je     0x412bcb
  412b7d:	xor    cl,BYTE PTR [ecx-0x24]
  412b80:	loopne 0x412bbc
  412b82:	or     BYTE PTR [esi-0x549a9e14],ch
  412b88:	cwde   
  412b89:	mov    dh,0x52
  412b8b:	or     dh,BYTE PTR [ebx+edx*1-0x61067acb]
  412b92:	cmp    dh,BYTE PTR [edx-0x7994]
  412b98:	xor    BYTE PTR [ebp-0x44],bh
  412b9b:	es retf 0xe50c
  412b9f:	stos   BYTE PTR es:[edi],al
  412ba0:	or     bh,ch
  412ba2:	clc    
  412ba3:	addr16 jbe 0x412c01
  412ba6:	jbe    0x412b92
  412ba8:	add    DWORD PTR [eax-0x32],esp
  412bab:	lds    edi,FWORD PTR ds:0x7a3512bc
  412bb1:	add    DWORD PTR [edi+0x3],eax
  412bb4:	mov    ebp,esi
  412bb6:	(bad)  
  412bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb9:	mov    cs,WORD PTR [ecx-0x175daa8f]
  412bbf:	jae    0x412b6e
  412bc1:	and    ecx,DWORD PTR [esi-0x61]
  412bc4:	add    al,0xf3
  412bc6:	cmp    eax,0x4dde6d3e
  412bcb:	sub    al,0xfe
  412bcd:	adc    eax,0xb6d37e14
  412bd2:	shl    DWORD PTR [ebx+ebx*4],cl
  412bd5:	sub    al,0x66
  412bd7:	mov    DWORD PTR [esi-0x52],ebp
  412bda:	mov    ch,0xfb
  412bdc:	or     DWORD PTR [edx],0x22585e2b
  412be2:	imul   ebp,DWORD PTR [ebx+0x56a2836b],0x77
  412be9:	pop    esi
  412bea:	int    0x88
  412bec:	mov    ecx,0x6f104f0f
  412bf1:	mov    edi,0x9f9d93ff
  412bf6:	jae    0x412c10
  412bf8:	inc    esi
  412bf9:	sub    DWORD PTR [ebp-0x40],ebp
  412bfc:	xor    al,0xcd
  412bfe:	push   ecx
  412bff:	or     BYTE PTR [esi],ch
  412c01:	push   edx
  412c02:	and    eax,0x2370ebbf
  412c07:	mov    bl,0x72
  412c09:	sar    esp,cl
  412c0b:	into   
  412c0c:	int    0x4e
  412c0e:	aam    0x6d
  412c10:	sti    
  412c11:	mov    DWORD PTR [ebp+ebx*8+0x1e],esp
  412c15:	fscale 
  412c17:	aaa    
  412c18:	mov    al,0x73
  412c1a:	pop    ss
  412c1b:	push   esp
  412c1c:	test   DWORD PTR [eax+0x46],edi
  412c1f:	and    al,0xd5
  412c21:	mov    edi,0xdcf529eb
  412c26:	int    0x2d
  412c28:	cwde   
  412c29:	test   DWORD PTR [ecx-0x31],esp
  412c2c:	int3   
  412c2d:	shl    ecx,1
  412c2f:	enter  0x4bfb,0x71
  412c33:	jl     0x412bda
  412c35:	push   cs
  412c36:	jmp    0x412bc5
  412c38:	(bad)  
  412c39:	push   esp
  412c3a:	inc    eax
  412c3b:	add    edx,DWORD PTR [ebx+0x573adc4d]
  412c41:	inc    ebx
  412c42:	loope  0x412c7b
  412c44:	(bad)  
  412c45:	jmp    0x9f0a:0xc4493195
  412c4c:	pop    edi
  412c4d:	xor    eax,0x80545aea
  412c52:	xchg   edx,eax
  412c53:	dec    edx
  412c54:	sub    eax,eax
  412c56:	lahf   
  412c57:	xor    al,0x6e
  412c59:	push   eax
  412c5a:	call   0x3b7f78a2
  412c5f:	push   esi
  412c60:	pusha  
  412c61:	jl     0x412c4c
  412c63:	push   ebp
  412c64:	jne    0x412bfb
  412c66:	add    esi,DWORD PTR [eax+0x6]
  412c69:	adc    al,0x41
  412c6b:	rol    BYTE PTR [esi-0x5be8e4fe],cl
  412c71:	arpl   WORD PTR [eax-0x5a],bx
  412c74:	mov    bh,BYTE PTR [esi-0x5d68c4d3]
  412c7a:	jns    0x412c82
  412c7c:	out    0x22,eax
  412c7e:	sub    ebx,ebx
  412c80:	mov    cl,0x5
  412c82:	out    0xf9,eax
  412c84:	jns    0x412c46
  412c86:	rcr    BYTE PTR [ecx],cl
  412c88:	lock ja 0x412cc6
  412c8b:	icebp  
  412c8c:	(bad)  
  412c8d:	or     edx,DWORD PTR [eax-0x64d63843]
  412c93:	loop   0x412c53
  412c95:	dec    edi
  412c96:	cmp    BYTE PTR [edi-0x3b93ae6e],dh
  412c9c:	and    eax,0xed6fc03e
  412ca1:	jmp    FWORD PTR [esi+ebx*2-0x6c]
  412ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ca6:	fcomi  st,st(4)
  412ca8:	sbb    ecx,DWORD PTR [ecx-0x43ad7eb0]
  412cae:	mov    ebx,cs
  412cb0:	cli    
  412cb1:	mov    bh,BYTE PTR [edx-0x53]
  412cb4:	push   ds
  412cb5:	mov    ds:0x6f5b71d7,al
  412cba:	in     al,dx
  412cbb:	repnz sub DWORD PTR [ebx+ecx*8+0x7d4c092f],edi
  412cc3:	add    esi,DWORD PTR [ecx+ebx*8+0x2c]
  412cc7:	mov    esi,0x21344f31
  412ccc:	pop    ebp
  412ccd:	call   0x7a5c8563
  412cd2:	and    al,0x5d
  412cd4:	cmp    eax,0xefd90d6c
  412cd9:	out    dx,al
  412cda:	push   esi
  412cdb:	cmp    BYTE PTR [eax+0x2d],bh
  412cde:	aad    0x88
  412ce0:	sar    BYTE PTR [ecx+0x2a0bcbb1],1
  412ce6:	push   0x4e
  412ce8:	push   0xffffff91
  412cea:	arpl   WORD PTR gs:[ecx-0x56],sp
  412cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cef:	mov    dl,0x5c
  412cf1:	nop
  412cf2:	inc    edi
  412cf3:	imul   ecx,DWORD PTR [eax-0x1841950f],0xa285f5f5
  412cfd:	aad    0xe3
  412cff:	sar    DWORD PTR [ebx-0x36175c2b],1
  412d05:	push   es
  412d06:	ja     0x412c8f
  412d08:	aam    0x47
  412d0a:	push   esp
  412d0b:	inc    BYTE PTR ds:0xfbe5b24c
  412d11:	mov    edi,0xb43405db
  412d16:	mov    esi,0x9033bea5
  412d1b:	(bad)  
  412d1d:	pop    ebx
  412d1e:	jg     0x412cac
  412d20:	pop    eax
  412d21:	pop    edx
  412d22:	leave  
  412d23:	adc    eax,edx
  412d25:	call   0x2854369e
  412d2a:	adc    bh,BYTE PTR [ecx-0x9]
  412d2d:	add    ch,bl
  412d2f:	mov    bl,0x2
  412d31:	inc    ebp
  412d32:	(bad)  
  412d33:	dec    esp
  412d34:	xchg   ecx,eax
  412d35:	mov    al,ds:0x78add9db
  412d3a:	fmul   QWORD PTR [ebp+0x2164563f]
  412d40:	push   eax
  412d41:	cs sub al,0x19
  412d44:	(bad)  
  412d45:	lahf   
  412d46:	or     eax,0x2c122a22
  412d4b:	jg     0x412d70
  412d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4e:	retf   
  412d4f:	repz data16 xor ah,BYTE PTR [esi+0x3d]
  412d54:	stc    
  412d55:	cdq    
  412d56:	(bad)  
  412d57:	inc    BYTE PTR [ecx-0x7]
  412d5a:	out    dx,eax
  412d5b:	jns    0x412d7f
  412d5d:	mov    bh,0x1d
  412d5f:	sub    eax,0x81e72934
  412d64:	test   al,0xef
  412d66:	leave  
  412d67:	sub    edx,edi
  412d69:	cmp    al,BYTE PTR [ecx+ebx*2-0x19f5821]
  412d70:	jo     0x412d75
  412d72:	test   ah,dh
  412d74:	enter  0xe30f,0xc8
  412d78:	retf   0x2a7a
  412d7b:	addr16 js 0x412d93
  412d7e:	stc    
  412d7f:	xchg   ecx,eax
  412d80:	add    al,ah
  412d82:	add    ecx,DWORD PTR [ecx-0x3d]
  412d85:	fldcw  WORD PTR [esi+ebp*8-0x34]
  412d89:	dec    edi
  412d8a:	mov    al,0xfa
  412d8c:	clc    
  412d8d:	add    dl,BYTE PTR [ecx-0x39]
  412d90:	icebp  
  412d91:	mov    ebp,0xa53c4807
  412d96:	pop    ss
  412d97:	xchg   DWORD PTR [ecx],esp
  412d99:	out    0x5a,al
  412d9b:	push   ecx
  412d9c:	mov    ch,0x4
  412d9e:	ret    0x61b5
  412da1:	(bad)  
  412da2:	(bad)  
  412da3:	sub    al,dh
  412da5:	sti    
  412da6:	xchg   edi,eax
  412da7:	lahf   
  412da8:	pop    edx
  412da9:	nop
  412daa:	outs   dx,DWORD PTR ds:[esi]
  412dab:	leave  
  412dac:	jp     0x412d9b
  412dae:	retf   
  412daf:	retf   
  412db0:	mov    edi,esp
  412db2:	jne    0x412d54
  412db4:	jmp    0x6b097aee
  412db9:	push   eax
  412dba:	adc    eax,edx
  412dbc:	test   DWORD PTR [ecx],edx
  412dbe:	popa   
  412dbf:	pop    ecx
  412dc0:	fimul  DWORD PTR [ecx-0x75]
  412dc3:	out    dx,al
  412dc4:	loop   0x412d90
  412dc6:	fmul   st,st(5)
  412dc8:	and    eax,0xa1310175
  412dcd:	pop    eax
  412dce:	jae    0x412dad
  412dd0:	or     DWORD PTR [ebx+edx*4+0x2587d7f8],0x1b
  412dd8:	and    eax,0xaae5401b
  412ddd:	mov    al,ds:0xf43076cd
  412de2:	pop    esi
  412de3:	ss cwde 
  412de5:	out    dx,al
  412de6:	sbb    al,0xe8
  412de8:	gs std 
  412dea:	fcom   st(2)
  412dec:	pop    ebp
  412ded:	scas   al,BYTE PTR es:[edi]
  412dee:	lods   eax,DWORD PTR ds:[esi]
  412def:	stc    
  412df0:	mov    esi,0xadbadaa7
  412df5:	(bad)  
  412df6:	out    dx,al
  412df7:	ret    0xa995
  412dfa:	retf   0x6366
  412dfd:	sbb    al,ah
  412dff:	test   eax,ebx
  412e01:	mov    DWORD PTR [ebx],eax
  412e03:	xchg   DWORD PTR [ecx-0xa4d3155],ebx
  412e09:	cs scas eax,DWORD PTR es:[edi]
  412e0b:	repnz xchg edi,eax
  412e0d:	aam    0xbc
  412e0f:	xor    eax,0xe801c57
  412e14:	jmp    0x412e92
  412e16:	cld    
  412e17:	or     bh,BYTE PTR [ebp+0xb]
  412e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1b:	mov    BYTE PTR [ecx],al
  412e1d:	cmp    al,0xcb
  412e1f:	mov    eax,0x2299ffda
  412e24:	xchg   esp,eax
  412e25:	cmp    ch,BYTE PTR [edi-0x6bf9ba3c]
  412e2b:	loopne 0x412dd5
  412e2d:	mov    dh,0xfc
  412e2f:	mov    dl,BYTE PTR ds:0x59a4ac28
  412e35:	daa    
  412e36:	and    DWORD PTR [edx+ebp*2-0x437edc8e],edi
  412e3d:	fisttp DWORD PTR [eax+edi*1]
  412e40:	clc    
  412e41:	outs   dx,DWORD PTR ds:[esi]
  412e42:	cmp    bh,BYTE PTR ds:0x8ad22e67
  412e48:	jno    0x412dd0
  412e4a:	cdq    
  412e4b:	repz jb 0x412ebb
  412e4e:	mov    esi,0xff99446a
  412e53:	add    eax,0x70197e97
  412e58:	outs   dx,BYTE PTR ds:[esi]
  412e59:	loopne 0x412e3c
  412e5b:	or     dh,BYTE PTR [esi]
  412e5d:	(bad)
  412e60:	and    BYTE PTR [edi-0x39],al
  412e63:	mov    esi,0x3d4603b2
  412e68:	push   edi
  412e6a:	sub    BYTE PTR [edx],ah
  412e6c:	test   BYTE PTR [ecx],bl
  412e6e:	ds icebp 
  412e70:	fdiv   st(2),st
  412e72:	push   ss
  412e73:	sub    al,BYTE PTR [esi]
  412e75:	cdq    
  412e76:	add    BYTE PTR [edi],al
  412e78:	std    
  412e79:	scas   al,BYTE PTR es:[edi]
  412e7a:	test   DWORD PTR [ecx+0x7e],ecx
  412e7d:	icebp  
  412e7e:	pop    eax
  412e7f:	repnz imul DWORD PTR [ebx-0x5a1edbd8]
  412e86:	gs stc 
  412e88:	out    0xd8,al
  412e8a:	add    eax,0xbfd0a45b
  412e8f:	(bad)  
  412e90:	lock imul ebp,DWORD PTR [ebx+0x26],0xfa0e30d2
  412e98:	aaa    
  412e99:	push   cs
  412e9a:	and    eax,0xda6729dd
  412e9f:	push   es
  412ea0:	dec    ebp
  412ea1:	loope  0x412e8e
  412ea3:	(bad)
  412ea7:	and    ch,cl
  412ea9:	sub    eax,0xa9e39bc5
  412eae:	adc    al,0x4c
  412eb0:	pop    es
  412eb1:	add    al,0x9
  412eb3:	xchg   edx,eax
  412eb4:	ffree  st(6)
  412eb6:	xchg   esp,eax
  412eb7:	popf   
  412eb8:	cmp    eax,0xd8f3182e
  412ebd:	sub    DWORD PTR [ecx+0x437c333d],ebp
  412ec3:	fild   DWORD PTR [ebx-0x34101a3c]
  412ec9:	ins    BYTE PTR es:[edi],dx
  412eca:	pop    edx
  412ecb:	test   DWORD PTR [esi-0x119ad61d],esi
  412ed1:	push   es
  412ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed3:	leave  
  412ed4:	retf   0x5e9e
  412ed7:	push   0xfffffffe
  412ed9:	call   0x2a336b02
  412ede:	rol    BYTE PTR ds:0xbf982769,cl
  412ee4:	out    0xbd,al
  412ee6:	fstp   DWORD PTR [eax]
  412ee8:	bswap  esp
  412eea:	enter  0xbab,0xdd
  412eee:	aad    0x3f
  412ef0:	adc    eax,0x3a4cc7af
  412ef5:	das    
  412ef6:	xchg   esi,eax
  412ef7:	push   eax
  412ef8:	gs ja  0x412eb1
  412efb:	int    0x34
  412efd:	mov    dl,0x74
  412eff:	fild   DWORD PTR [eax+0x1e]
  412f02:	add    edx,ecx
  412f04:	rcr    DWORD PTR ds:0xd261f4c0,0x42
  412f0b:	adc    bl,al
  412f0d:	jg     0x412ea3
  412f0f:	sub    ecx,DWORD PTR [eax+0x65dd9438]
  412f15:	out    dx,al
  412f16:	dec    edx
  412f17:	cmc    
  412f18:	inc    ebx
  412f19:	push   ebx
  412f1a:	sub    eax,0x652e17d0
  412f1f:	pop    es
  412f20:	mov    WORD PTR [esi-0x5dbb047c],cs
  412f26:	cmp    eax,DWORD PTR [ecx]
  412f28:	jge    0x412f57
  412f2a:	and    al,0x3a
  412f2c:	mov    DWORD PTR [ebx+eiz*1-0x75534920],ecx
  412f33:	pop    esp
  412f34:	pop    esp
  412f35:	push   edx
  412f36:	add    ebx,DWORD PTR [edi+0x3193b8c6]
  412f3c:	das    
  412f3d:	or     ah,bl
  412f3f:	inc    ecx
  412f40:	or     DWORD PTR [ecx+esi*1],ebx
  412f43:	and    eax,0x7b92a3b9
  412f48:	in     al,dx
  412f49:	fmul   QWORD PTR [ebp-0x21]
  412f4c:	jle    0x412f25
  412f4e:	push   ebx
  412f4f:	inc    esp
  412f50:	xor    BYTE PTR [edi+0x77],0x49
  412f54:	dec    esp
  412f55:	retf   0x842b
  412f58:	stos   DWORD PTR es:[edi],eax
  412f59:	loopne 0x412f43
  412f5b:	mov    al,ah
  412f5d:	lods   eax,DWORD PTR ds:[esi]
  412f5e:	pop    edx
  412f5f:	mov    eax,0x808e1c97
  412f64:	clc    
  412f65:	or     ebx,DWORD PTR [edx+esi*2]
  412f68:	sbb    eax,0x98dd1d6
  412f6d:	mov    ss,WORD PTR [edi-0x3e6cb10c]
  412f73:	pop    ebx
  412f74:	mov    DWORD PTR [esi+0x63],ebp
  412f77:	js     0x412f77
  412f79:	sar    DWORD PTR [eax-0x56d5e29f],cl
  412f7f:	sub    esi,DWORD PTR [ebx]
  412f81:	aad    0x9b
  412f83:	sub    al,0x50
  412f85:	push   ebp
  412f86:	rol    BYTE PTR [eax-0x1e],1
  412f89:	arpl   WORD PTR [edx-0x2d],si
  412f8c:	int    0x23
  412f8e:	mov    edi,0x89ecaa37
  412f93:	into   
  412f94:	dec    esi
  412f95:	xlat   BYTE PTR ds:[ebx]
  412f96:	sub    DWORD PTR [ecx-0x2b11805],edx
  412f9c:	fmul   QWORD PTR [edx+0x3bf01ce3]
  412fa2:	sub    DWORD PTR [ecx-0x452c7376],ebp
  412fa8:	jl     0x412ff0
  412faa:	xor    ch,dl
  412fac:	fiadd  DWORD PTR [ecx-0x44]
  412faf:	mov    al,0x11
  412fb1:	hlt    
  412fb2:	test   al,0x7d
  412fb4:	out    0x68,al
  412fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb7:	push   0x3e
  412fb9:	lds    ebp,FWORD PTR [edi-0x767d99fb]
  412fbf:	lahf   
  412fc0:	or     eax,0x3eaf7ffb
  412fc5:	and    BYTE PTR [esi+ebp*1+0x15],ah
  412fc9:	fwait
  412fca:	add    al,ah
  412fcc:	mov    bl,0xf3
  412fce:	add    ah,dh
  412fd0:	cli    
  412fd1:	ret    0x33bc
  412fd4:	and    al,0x2b
  412fd6:	mov    esi,0x94f1ce75
  412fdb:	je     0x413013
  412fdd:	inc    ecx
  412fde:	out    0xc,al
  412fe0:	into   
  412fe1:	pop    ecx
  412fe2:	cmp    DWORD PTR [ebx],ecx
  412fe4:	adc    edi,DWORD PTR [ebp-0x4d0e8a43]
  412fea:	xchg   edi,eax
  412feb:	mov    ebp,0x2232fc68
  412ff0:	cdq    
  412ff1:	repnz adc DWORD PTR [ebx-0x25],edx
  412ff5:	dec    DWORD PTR [ecx-0x5b34de9a]
  412ffb:	xchg   esp,eax
  412ffc:	rcr    al,cl
  412ffe:	or     ebp,DWORD PTR [edi-0x3c]
  413001:	inc    eax
  413002:	test   eax,0x969e9084
  413007:	cdq    
  413008:	cmc    
  413009:	sbb    eax,0x994b298d
  41300e:	fsubr  DWORD PTR [edi]
  413010:	(bad)  
  413011:	dec    ecx
  413012:	cmp    DWORD PTR [ebx+edi*4+0x81cb71e],ebp
  413019:	xchg   ebp,eax
  41301a:	cld    
  41301b:	sar    DWORD PTR [ebx+ebx*8+0x5e],cl
  41301f:	test   DWORD PTR [ebx+ecx*1],eax
  413022:	jns    0x412ff1
  413024:	cli    
  413025:	sbb    eax,DWORD PTR [edi+0x3464a0ea]
  41302b:	dec    edx
  41302c:	loopne 0x41305f
  41302e:	mov    ?,WORD PTR [ecx]
  413030:	aas    
  413031:	add    BYTE PTR [eax+0x4c],ah
  413034:	cli    
  413035:	jo     0x412fe2
  413037:	push   ecx
  413038:	mov    ebp,0x526c1866
  41303d:	xor    al,0xf2
  41303f:	add    bh,BYTE PTR ds:0xfc540b57
  413045:	dec    edx
  413046:	mov    ebp,DWORD PTR [edx]
  413048:	aam    0x6a
  41304a:	hlt    
  41304b:	jno    0x4130a1
  41304d:	xor    BYTE PTR [eax-0x6d76da4c],0x8f
  413054:	jne    0x413043
  413056:	jp     0x41307a
  413058:	pop    edi
  413059:	(bad)  
  41305a:	fmul   QWORD PTR [ebx-0x5e5ae2c4]
  413060:	adc    eax,0x4c30f421
  413065:	hlt    
  413066:	mov    esp,0xc29659e6
  41306b:	add    ecx,DWORD PTR [ecx+edi*2-0x20]
  41306f:	cmc    
  413070:	cld    
  413071:	pop    esi
  413072:	icebp  
  413073:	xor    eax,0xfc749c9f
  413078:	add    al,0x7e
  41307a:	sbb    DWORD PTR [ebp+0x2e],0x5e
  41307e:	sub    edx,ecx
  413080:	mov    eax,ds:0xcdcf7352
  413085:	iret   
  413086:	mov    eax,ds:0x373a69ec
  41308b:	hlt    
  41308c:	lods   eax,DWORD PTR ds:[esi]
  41308d:	test   eax,0xb01e2f55
  413092:	mov    bh,0x9b
  413094:	call   0xc82c:0x1c2d8380
  41309b:	mul    BYTE PTR [esi+0x32]
  41309e:	mov    ds:0x61fea95a,eax
  4130a3:	test   eax,0xa719df4c
  4130a8:	xchg   DWORD PTR [ebp+0x2f],edi
  4130ab:	mov    dh,0x44
  4130ad:	dec    ebx
  4130ae:	cdq    
  4130af:	mov    esi,DWORD PTR [esi-0xc]
  4130b2:	sbb    BYTE PTR [esi-0x55],ch
  4130b5:	xchg   BYTE PTR [edx+0x410207b5],bl
  4130bb:	ret    0xbc25
  4130be:	mov    esp,0x47afebdd
  4130c3:	push   ss
  4130c4:	mov    dl,0xe7
  4130c6:	adc    al,0x71
  4130c8:	fidiv  WORD PTR [ecx+0xb]
  4130cb:	adc    al,0xde
  4130cd:	mov    edi,0xbaf7315e
  4130d2:	sub    edx,DWORD PTR [ebx]
  4130d4:	lods   eax,DWORD PTR ds:[esi]
  4130d5:	aas    
  4130d6:	mov    ss,WORD PTR [ebp+0x2b]
  4130d9:	adc    BYTE PTR [eax+0x5d7fb271],bl
  4130df:	aam    0xc8
  4130e1:	adc    ecx,DWORD PTR [ebx]
  4130e3:	cmp    BYTE PTR [ebx+ecx*8+0x3d],0x77
  4130e8:	adc    ebp,0x4a58aa66
  4130ee:	ss int 0xd8
  4130f1:	inc    ebx
  4130f2:	repz mov ebx,0x8d5fc6c3
  4130f8:	xor    eax,0x67240a86
  4130fd:	mov    ch,0x35
  4130ff:	stos   DWORD PTR es:[edi],eax
  413100:	push   eax
  413101:	loopne 0x41316d
  413103:	adc    ebp,DWORD PTR [esi+ecx*2+0x4c]
  413107:	clc    
  413108:	loop   0x41313c
  41310a:	leave  
  41310b:	das    
  41310c:	sub    bl,BYTE PTR [eax-0x59]
  41310f:	daa    
  413110:	sbb    DWORD PTR [eax-0x6],edx
  413113:	jle    0x41315c
  413115:	xchg   ebx,eax
  413116:	push   eax
  413117:	add    DWORD PTR [esi+0x9],edx
  41311a:	jo     0x41312a
  41311c:	clc    
  41311d:	js     0x413131
  41311f:	jl     0x4130ed
  413121:	mov    edx,0xa8fa64a8
  413126:	mov    dh,0x61
  413128:	adc    al,0x5f
  41312a:	mov    bl,0xa2
  41312c:	aam    0x42
  41312e:	and    dh,cl
  413130:	adc    ecx,esi
  413132:	sar    BYTE PTR ds:0x61efa20b,1
  413138:	push   0xffffff8b
  41313a:	inc    eax
  41313b:	xor    DWORD PTR [ebx+edx*8],0x61
  41313f:	mov    WORD PTR ds:[eax],?
  413142:	popa   
  413143:	mov    DWORD PTR [ebx+0xb],0xcc8f1a19
  41314a:	imul   eax,ebp,0xffffffa7
  41314d:	popa   
  41314e:	(bad)  
  41314f:	mov    al,ds:0xc7887a3b
  413154:	out    0x52,al
  413156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413157:	aam    0x34
  413159:	jmp    0x413150
  41315b:	pop    edi
  41315c:	lods   eax,DWORD PTR ds:[esi]
  41315d:	inc    edx
  41315e:	bnd ja 0x4130e6
  413161:	jne    0x4131bf
  413163:	xchg   ecx,eax
  413164:	mov    edi,DWORD PTR [edx]
  413166:	addr16 jmp 0xb7c6:0xd68086fe
  41316e:	outs   dx,DWORD PTR ds:[esi]
  41316f:	mov    ds:0xd1f03669,al
  413174:	push   esp
  413175:	arpl   WORD PTR [esp+edx*8],si
  413178:	mov    dh,0xeb
  41317a:	push   es
  41317b:	rcl    BYTE PTR [ebx+0x4cad35e5],cl
  413181:	popf   
  413182:	adc    BYTE PTR [eax],ah
  413184:	mov    ah,0x48
  413186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413187:	xchg   esi,eax
  413188:	dec    ebx
  413189:	fwait
  41318a:	push   ds
  41318b:	(bad)  
  41318c:	shl    BYTE PTR [ebx-0x3bb8c1fd],cl
  413192:	jb     0x413192
  413194:	(bad)  
  413195:	mov    eax,0xfdb9bbea
  41319a:	es dec esi
  41319c:	mov    al,ds:0xb38eae82
  4131a1:	mov    esp,0x5e2c65bd
  4131a6:	mov    eax,ds:0xa96a2622
  4131ab:	dec    edx
  4131ac:	xchg   ecx,ebx
  4131ae:	fimul  WORD PTR [edx]
  4131b0:	out    dx,eax
  4131b1:	mov    WORD PTR [esi+0x5e],?
  4131b4:	jo     0x4131b2
  4131b6:	(bad)  
  4131b7:	mov    ch,0x59
  4131b9:	and    BYTE PTR ds:0xb72d8286,cl
  4131bf:	jbe    0x4131f6
  4131c1:	jne    0x413222
  4131c3:	cmp    BYTE PTR [ebx-0x11],bh
  4131c6:	in     eax,0xc0
  4131c8:	mov    ch,0x4f
  4131ca:	daa    
  4131cb:	imul   esi,DWORD PTR [ecx],0xffffffb3
  4131ce:	pop    ebp
  4131cf:	xlat   BYTE PTR ds:[ebx]
  4131d0:	fist   WORD PTR [edi]
  4131d2:	cmp    eax,0x5dd88049
  4131d7:	ficomp WORD PTR ds:0xb4ef15c4
  4131dd:	outs   dx,BYTE PTR ds:[esi]
  4131de:	xchg   ecx,eax
  4131df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e0:	js     0x413165
  4131e2:	sbb    eax,0x39733df2
  4131e7:	(bad)  
  4131e8:	mov    cl,0x64
  4131ea:	in     eax,0x96
  4131ec:	and    eax,0xb5798478
  4131f1:	sub    DWORD PTR [edx],edi
  4131f3:	ins    DWORD PTR es:[edi],dx
  4131f4:	fisub  DWORD PTR [esi+0x11b38791]
  4131fa:	jge    0x413236
  4131fc:	sub    ecx,DWORD PTR [eax-0x2b]
  4131ff:	push   0xffffffe2
  413201:	jmp    0x4131a6
  413203:	inc    esp
  413204:	jmp    0xb6ef42
  413209:	cdq    
  41320a:	repnz inc esi
  41320c:	jp     0x413264
  41320e:	test   DWORD PTR [esi-0x16261422],edx
  413214:	nop
  413215:	(bad)  
  413216:	xchg   ecx,eax
  413217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413218:	pusha  
  413219:	in     al,0x6f
  41321b:	out    dx,eax
  41321c:	call   0x46a79466
  413221:	stos   BYTE PTR es:[edi],al
  413222:	push   eax
  413223:	dec    ebp
  413224:	sbb    esp,DWORD PTR [edi-0x31]
  413227:	jmp    0xcec5:0x19be8cea
  41322e:	jnp    0x413288
  413230:	sub    ch,BYTE PTR [esi-0x6f]
  413233:	dec    esp
  413234:	call   0x67044a33
  413239:	adc    DWORD PTR [ebx+ebx*1-0x57221ce9],esp
  413240:	enter  0x564b,0x52
  413244:	icebp  
  413245:	push   ebp
  413246:	aaa    
  413247:	ret    
  413248:	adc    DWORD PTR [edx],esp
  41324a:	xor    DWORD PTR [edi-0x54bbc759],0x19
  413251:	arpl   WORD PTR [edx],bp
  413253:	or     dl,BYTE PTR [esi+ebx*1-0x45]
  413257:	call   0x3457:0xbae3aadc
  41325e:	sub    dh,BYTE PTR [eax]
  413260:	test   eax,0x2a37b294
  413265:	in     eax,0x10
  413267:	push   ds
  413268:	jmp    0xce17:0x99abd7c0
  41326f:	mov    eax,ds:0x21f191fa
  413274:	mov    bl,0x58
  413276:	ds inc ecx
  413278:	mov    ds:0xb9ad0332,eax
  41327d:	xchg   edx,eax
  41327e:	test   eax,0xfaa3fc47
  413283:	jmp    0x527b:0x756b74ec
  41328a:	nop
  41328b:	arpl   si,sp
  41328d:	pop    esp
  41328e:	cli    
  41328f:	aam    0xf0
  413291:	fsub   DWORD PTR [eax+0x2a]
  413294:	int    0xe0
  413296:	jb     0x4132cf
  413298:	mov    DWORD PTR [edx-0x7e],esi
  41329b:	pop    esp
  41329c:	push   ebp
  41329d:	mov    eax,0xf8e24779
  4132a2:	je     0x41325c
  4132a4:	mov    dh,0x2f
  4132a6:	sub    al,0x5
  4132a8:	les    ebx,FWORD PTR [edi-0x274491f2]
  4132ae:	std    
  4132af:	xchg   edx,eax
  4132b0:	imul   eax,DWORD PTR [ebx+0x1d421ee1],0xffffffc4
  4132b7:	push   0xeebabc1d
  4132bc:	adc    bl,BYTE PTR [ecx]
  4132be:	mov    BYTE PTR [esi],dh
  4132c0:	pop    esi
  4132c1:	push   ecx
  4132c2:	call   0xfd8a6950
  4132c7:	and    al,0x76
  4132c9:	ss (bad) 
  4132cb:	cmp    al,0xd6
  4132cd:	or     esp,esp
  4132cf:	out    0x46,eax
  4132d1:	das    
  4132d2:	out    dx,al
  4132d3:	(bad)  
  4132d4:	out    dx,eax
  4132d5:	xchg   ebp,eax
  4132d6:	add    ah,BYTE PTR [ecx+0x23]
  4132d9:	(bad)  
  4132da:	stos   DWORD PTR es:[edi],eax
  4132db:	retf   
  4132dc:	bound  ebx,QWORD PTR [ecx+esi*1]
  4132df:	dec    ebx
  4132e0:	dec    edx
  4132e1:	fisub  WORD PTR [ebx+0x1]
  4132e4:	aad    0xd5
  4132e6:	sub    BYTE PTR [ebp+ecx*8-0x5791bdd8],al
  4132ed:	sbb    cl,BYTE PTR [esi-0x51]
  4132f0:	jnp    0x41328a
  4132f2:	xchg   esi,eax
  4132f3:	xor    ecx,DWORD PTR [edi+0x15]
  4132f6:	fcmovb st,st(3)
  4132f8:	shr    BYTE PTR [esi-0x24991ec5],0x3a
  4132ff:	sub    cl,dl
  413301:	cmp    al,0x51
  413303:	repz jecxz 0x413376
  413306:	sbb    DWORD PTR [eax],0x86315d64
  41330c:	ror    ebp,1
  41330e:	imul   ebp,DWORD PTR [ebx+0x5c48ddc4],0xe7e34c46
  413318:	shr    DWORD PTR [edi-0x5e],0x68
  41331c:	inc    esi
  41331d:	mov    ah,0x8e
  41331f:	inc    esi
  413320:	adc    dl,al
  413322:	push   edi
  413323:	sti    
  413324:	pop    edi
  413325:	test   al,0xd4
  413327:	jg     0x413397
  413329:	ret    
  41332a:	mov    BYTE PTR [edx+0x40],dl
  41332d:	out    0xe2,eax
  41332f:	sub    DWORD PTR [ebx-0x22],0x6bd85976
  413336:	push   0xffffffb2
  413338:	cmp    BYTE PTR [ebx-0x37],ah
  41333b:	mov    cl,ah
  41333d:	mov    ds:0x4a9bb7e6,eax
  413342:	lods   al,BYTE PTR ds:[esi]
  413343:	or     BYTE PTR [ebp+edx*1-0x3277bb88],0x64
  41334b:	and    BYTE PTR [eax-0x2a31ef53],ah
  413351:	inc    ecx
  413352:	mov    esi,0x7b90cbd3
  413357:	dec    ebp
  413358:	mov    al,ds:0xe6b2f6fb
  41335d:	sti    
  41335e:	pop    ebx
  41335f:	and    BYTE PTR [ecx-0x1b],0x5e
  413363:	xor    eax,0xa5b91d1a
  413368:	fst    QWORD PTR [esi]
  41336a:	jmp    0x41334e
  41336c:	mov    esp,0x3da958c1
  413371:	leave  
  413372:	(bad)  
  413373:	loopne 0x41339e
  413375:	jno    0x41332b
  413377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413378:	fs sbb al,0x22
  41337b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337c:	(bad)  
  41337e:	and    BYTE PTR [ebx],0x9b
  413381:	aas    
  413382:	sbb    dl,BYTE PTR [esi-0x76487cba]
  413388:	pop    ss
  413389:	jno    0x413370
  41338b:	jns    0x413386
  41338d:	std    
  41338e:	add    BYTE PTR [ebp+eiz*1+0x82d812a],bl
  413395:	xchg   edi,eax
  413396:	lea    edx,[ebp-0x59]
  413399:	in     al,0x34
  41339b:	jnp    0x413337
  41339d:	xor    al,0x7f
  41339f:	xor    ah,dl
  4133a1:	inc    ebx
  4133a2:	fdivrp st(5),st
  4133a4:	popf   
  4133a5:	sbb    al,0x22
  4133a7:	push   ebx
  4133a8:	jg     0x413415
  4133aa:	xor    eax,esp
  4133ac:	neg    BYTE PTR [ecx+0x79296693]
  4133b2:	push   esp
  4133b3:	in     eax,dx
  4133b4:	mov    dh,0x4b
  4133b6:	sbb    al,0xfe
  4133b8:	and    ecx,edx
  4133ba:	mov    cl,0x6a
  4133bc:	out    0xe,eax
  4133be:	(bad)  
  4133c0:	pop    ebx
  4133c1:	pop    eax
  4133c2:	outs   dx,BYTE PTR ds:[esi]
  4133c3:	or     dl,bh
  4133c5:	add    eax,0xef9ce31e
  4133ca:	sub    dl,BYTE PTR [esi-0x7c]
  4133cd:	add    BYTE PTR [esp+esi*8],al
  4133d0:	imul   esp,DWORD PTR [esi+0x6642a8b9],0x4c
  4133d7:	xchg   edi,eax
  4133d8:	iret   
  4133d9:	or     al,0x27
  4133db:	sbb    al,0xc2
  4133dd:	or     edi,ecx
  4133df:	shl    BYTE PTR [edi-0x30874dda],cl
  4133e5:	adc    DWORD PTR [ebx+esi*1+0x22],ebx
  4133e9:	imul   edi,DWORD PTR [ecx-0x70982e6f],0x7b
  4133f0:	clc    
  4133f1:	push   eax
  4133f2:	mov    eax,DWORD PTR [ebx+0x2b967422]
  4133f8:	jno    0x41341d
  4133fa:	jb     0x413476
  4133fc:	jno    0x413399
  4133fe:	mov    DWORD PTR [ebx-0x57],0xd4521483
  413405:	nop
  413406:	xlat   BYTE PTR ds:[ebx]
  413407:	aam    0xe9
  413409:	cdq    
  41340a:	or     eax,0xe9db2807
  41340f:	neg    DWORD PTR [ebx+edx*8+0x59]
  413413:	add    eax,0x807b24a6
  413418:	(bad)  [ebx+0x57]
  41341b:	or     DWORD PTR [ecx-0x16],0xc3617c6c
  413422:	pop    es
  413423:	pusha  
  413424:	ja     0x41346d
  413426:	fist   WORD PTR [eax+0x38bb38f1]
  41342c:	xlat   BYTE PTR ds:[ebx]
  41342d:	cli    
  41342e:	sbb    al,0x12
  413430:	and    al,0xf5
  413432:	cdq    
  413433:	(bad)  
  413434:	inc    esp
  413435:	xchg   edx,eax
  413436:	mov    edi,0x986fd9f
  41343b:	or     eax,0x8961e9f8
  413440:	adc    eax,0x233efc88
  413445:	js     0x41344a
  413447:	push   es
  413448:	add    edi,eax
  41344a:	in     al,0xf
  41344c:	dec    esi
  41344d:	stos   DWORD PTR es:[edi],eax
  41344e:	pusha  
  41344f:	lock sbb dl,BYTE PTR [esi-0x11]
  413453:	loop   0x413454
  413455:	or     al,0x39
  413457:	jmp    0xe6ac6987
  41345c:	push   esp
  41345d:	xor    DWORD PTR [ebp+0x786d55ab],edi
  413463:	dec    eax
  413464:	push   esi
  413465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413466:	fst    DWORD PTR [eax-0x2c]
  413469:	cdq    
  41346a:	sub    al,0xde
  41346c:	xor    ebp,edx
  41346e:	xor    eax,0x9992f707
  413473:	xchg   edx,eax
  413474:	xor    ecx,esp
  413476:	xchg   DWORD PTR [edi+0x19],esi
  413479:	std    
  41347a:	cld    
  41347b:	mov    al,0xf7
  41347d:	pop    ebx
  41347e:	lahf   
  41347f:	in     eax,0x16
  413481:	int    0xe1
  413483:	or     eax,0xbc3aabb3
  413488:	daa    
  413489:	sbb    DWORD PTR [esi],0xb
  41348c:	push   esp
  41348d:	jns    0x41348e
  41348f:	jne    0x413426
  413491:	inc    ecx
  413492:	push   esi
  413493:	dec    ecx
  413494:	xchg   edi,eax
  413495:	xor    DWORD PTR [ecx*2+0x665d608b],0xffffffef
  41349d:	mov    ch,0xc0
  41349f:	repnz fld TBYTE PTR [esi-0x6dbd6323]
  4134a6:	mov    ds:0x60326c09,al
  4134ab:	mov    al,0xe6
  4134ad:	cmovno ebx,DWORD PTR ds:0xeff1ed54
  4134b4:	and    DWORD PTR [edi],0x552f0a3c
  4134ba:	lods   eax,DWORD PTR ds:[esi]
  4134bb:	jmp    0x4134a9
  4134bd:	pushf  
  4134be:	shl    cl,cl
  4134c0:	xchg   ebx,eax
  4134c1:	gs data16 cs mov ah,0x8c
  4134c6:	add    ecx,esi
  4134c8:	outs   dx,DWORD PTR ds:[esi]
  4134c9:	outs   dx,DWORD PTR ds:[esi]
  4134ca:	pop    ebx
  4134cb:	inc    ebp
  4134cc:	ins    BYTE PTR es:[edi],dx
  4134cd:	push   ebx
  4134ce:	lock xor esi,edx
  4134d1:	out    dx,eax
  4134d2:	pop    ds
  4134d3:	jb     0x413540
  4134d5:	adc    edx,edx
  4134d7:	jmp    0xc26c706e
  4134dc:	push   esi
  4134dd:	add    al,0xaf
  4134df:	xchg   edx,eax
  4134e0:	xor    eax,0xa57c03b6
  4134e5:	sub    dl,bl
  4134e7:	cmp    BYTE PTR [edi-0x29],cl
  4134ea:	sub    eax,0xb5bbd5c0
  4134ef:	dec    ecx
  4134f0:	es ret 
  4134f2:	test   BYTE PTR [eax+0x6dbe6681],dl
  4134f8:	sbb    DWORD PTR [esi+0x5e],0x6a
  4134fc:	mov    ds:0x8578c70a,al
  413501:	or     bh,bh
  413503:	push   esi
  413504:	out    dx,al
  413505:	addr16 push es
  413507:	imul   eax,esp,0x43
  41350a:	xor    BYTE PTR [ecx+0x6f71d388],al
  413510:	push   ss
  413511:	xor    al,dl
  413513:	pop    edx
  413514:	jbe    0x41358a
  413516:	push   es
  413517:	pop    ss
  413518:	mov    eax,ds:0x80dade40
  41351d:	sbb    BYTE PTR ds:0x29b3d28f,cl
  413523:	mov    DWORD PTR [ebp-0x7b60c847],ecx
  413529:	pop    edi
  41352a:	sbb    BYTE PTR fs:[ecx-0x138ef50e],0xda
  413532:	pushf  
  413533:	dec    ebx
  413534:	pop    edi
  413535:	add    eax,0xe051eec4
  41353a:	cmp    ecx,DWORD PTR ss:[eax+0x3a0ceb4a]
  413541:	mov    edi,0x60f16e43
  413546:	pop    eax
  413547:	rcr    BYTE PTR [ebx+0xc20afc4],0xa6
  41354e:	sbb    eax,0x80339b31
  413553:	jne    0x4134ea
  413555:	add    al,0x5b
  413557:	add    BYTE PTR [eax+0x423aecc5],ah
  41355d:	(bad)  
  41355e:	jb     0x413576
  413560:	dec    eax
  413561:	cmp    eax,0x999d912c
  413566:	push   edx
  413567:	retf   0xf056
  41356a:	xchg   edi,eax
  41356b:	mov    cl,0x20
  41356d:	lea    esi,[edi+0x5617b88b]
  413573:	mov    ds:0x414e125,eax
  413578:	and    eax,0x9e69bfca
  41357d:	jns    0x41359e
  41357f:	xor    ecx,edi
  413581:	ror    BYTE PTR [ebp-0x6ac5c575],0x31
  413588:	mov    ah,0x85
  41358a:	or     al,0x63
  41358c:	out    dx,eax
  41358d:	and    eax,esp
  41358f:	xchg   DWORD PTR [edx+eax*1],esi
  413592:	out    dx,al
  413593:	frstor [eax]
  413595:	call   0x5c67:0x95cb3166
  41359c:	scas   eax,DWORD PTR es:[edi]
  41359d:	fbstp  TBYTE PTR [ecx-0x10364cf9]
  4135a3:	leave  
  4135a4:	and    DWORD PTR [ecx+0x18140514],0x2d
  4135ab:	rcr    BYTE PTR [eax+0x53],0x70
  4135af:	and    bl,dl
  4135b1:	push   cs
  4135b2:	int    0x9f
  4135b4:	adc    cl,BYTE PTR [ecx-0x1c56b6d]
  4135ba:	mov    dl,0xfb
  4135bc:	pop    ebp
  4135bd:	and    eax,0xb6810f3e
  4135c2:	push   0xb2420e09
  4135c7:	popf   
  4135c8:	dec    ebp
  4135c9:	js     0x41358f
  4135cb:	shl    DWORD PTR [edx+0x30],1
  4135ce:	jb     0x4135d6
  4135d0:	test   DWORD PTR [ebx],ecx
  4135d2:	ins    BYTE PTR es:[edi],dx
  4135d3:	sar    BYTE PTR [eax+0x47b776f3],1
  4135d9:	xchg   edx,eax
  4135da:	jge    0x4135ca
  4135dc:	(bad)
  4135df:	aaa    
  4135e0:	push   0xafef372
  4135e5:	rol    DWORD PTR [edi-0x54dfb724],0xa1
  4135ec:	jb     0x4135e3
  4135ee:	dec    edx
  4135ef:	push   ebx
  4135f0:	lea    ebx,[esi+0x35]
  4135f3:	dec    edx
  4135f4:	mov    ds:0x91df8923,eax
  4135f9:	dec    edx
  4135fa:	or     BYTE PTR [edi+eax*1-0x65],0xf1
  4135ff:	lahf   
  413600:	out    0xc4,eax
  413602:	repnz mov DWORD PTR [ebp+0x5e],esi
  413606:	fwait
  413607:	outs   dx,BYTE PTR ds:[esi]
  413608:	xor    BYTE PTR ds:0xfd849ee1,ch
  41360e:	dec    edi
  41360f:	adc    bh,BYTE PTR [eax]
  413611:	mov    ecx,0x73598d6d
  413616:	in     al,dx
  413617:	sub    bl,BYTE PTR [ebp-0x1a26f68]
  41361d:	push   ds
  41361e:	jmp    0xe0a8a6f9
  413623:	in     eax,0x88
  413625:	mov    DWORD PTR [ebp-0x1c5961b0],esp
  41362b:	xchg   dl,ah
  41362d:	cld    
  41362e:	jmp    FWORD PTR [eax+0x7a182e7e]
  413634:	inc    eax
  413635:	out    dx,eax
  413636:	jno    0x41368e
  413638:	dec    BYTE PTR [esi]
  41363a:	call   0x1be3:0xef0bde10
  413641:	xchg   edi,eax
  413642:	aas    
  413643:	sub    al,0xcb
  413645:	pop    ds
  413646:	ds push 0x7fa11b46
  41364c:	xor    al,al
  41364e:	ds push ebp
  413650:	neg    DWORD PTR ds:0x6797035c
  413656:	mov    al,0x8
  413658:	cmp    al,0x3b
  41365a:	sbb    al,0xe6
  41365c:	jl     0x4135e3
  41365e:	mov    edi,0x58fa205e
  413663:	push   esi
  413664:	sub    ebp,DWORD PTR ds:0xa98aac01
  41366a:	sub    BYTE PTR [edi-0x1ba55754],al
  413670:	pop    ss
  413671:	ins    DWORD PTR es:[edi],dx
  413672:	inc    ebp
  413673:	push   ebx
  413674:	and    eax,0xfaded0fb
  413679:	scas   al,BYTE PTR es:[edi]
  41367a:	in     ax,dx
  41367c:	(bad)  
  41367d:	or     BYTE PTR [esi+0x6a],cl
  413680:	scas   eax,DWORD PTR es:[edi]
  413681:	sub    ecx,DWORD PTR [eax+0x6e6dcf4]
  413687:	jl     0x413659
  413689:	repnz cmp al,0x8b
  41368c:	addr16 iret 
  41368e:	cmp    DWORD PTR [edi],0x5470484b
  413694:	adc    al,0x60
  413696:	mov    ds:0x1a88c604,eax
  41369b:	imul   edx,DWORD PTR [edi+0x74],0xbb1fa2f1
  4136a2:	ret    
  4136a3:	bound  edi,QWORD PTR [edx-0x72]
  4136a6:	mov    DWORD PTR [ebx],0xe199060f
  4136ac:	in     al,0x67
  4136ae:	repnz pop edx
  4136b0:	(bad)  
  4136b1:	mov    bl,0xa2
  4136b3:	out    0x1c,eax
  4136b5:	icebp  
  4136b6:	cmc    
  4136b7:	(bad)  [edx-0x3c]
  4136ba:	into   
  4136bb:	pusha  
  4136bc:	mov    ds:0x881d36f8,al
  4136c1:	or     BYTE PTR [esi-0x70],dl
  4136c4:	add    eax,0x2f36149f
  4136c9:	fidivr WORD PTR [ebx]
  4136cb:	and    BYTE PTR ds:0x65657674,0x72
  4136d2:	ror    DWORD PTR [ecx-0x15],1
  4136d5:	cmp    esi,DWORD PTR [ebx-0x74e06207]
  4136db:	icebp  
  4136dc:	fcomip st,st(6)
  4136de:	jbe    0x4136e2
  4136e0:	and    al,0xa6
  4136e2:	and    ebx,DWORD PTR [ebx-0x45]
  4136e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136e6:	mov    ah,0x95
  4136e8:	mov    bh,BYTE PTR [ecx+0x5be90f42]
  4136ee:	ret    
  4136ef:	sub    ebx,esi
  4136f1:	dec    esi
  4136f2:	ds (bad) 
  4136f4:	sbb    dl,BYTE PTR [ebx]
  4136f6:	dec    edx
  4136f7:	mov    eax,0xa3bb5b78
  4136fc:	sub    DWORD PTR [esi],edx
  4136fe:	stos   BYTE PTR es:[edi],al
  4136ff:	push   esi
  413700:	mov    WORD PTR [esi+ebp*2-0x7],?
  413704:	jb     0x41369f
  413706:	add    BYTE PTR [esi-0x6f3da979],0x82
  41370d:	int3   
  41370e:	clc    
  41370f:	jns    0x4136d7
  413711:	aam    0x5d
  413713:	xchg   ebp,eax
  413714:	inc    esi
  413715:	push   ecx
  413716:	xchg   ebp,eax
  413717:	mov    ebx,0xf3bab2db
  41371c:	shl    BYTE PTR [esi-0x3691f54a],1
  413722:	mov    esi,0x4bf176b0
  413727:	retf   
  413728:	and    eax,0xf9d56acf
  41372d:	pop    ds
  41372e:	fidiv  WORD PTR [ebx-0x3c]
  413731:	jmp    DWORD PTR [edx-0x68]
  413734:	out    dx,al
  413735:	or     BYTE PTR [ebp-0x773a68f2],0x98
  41373c:	jb     0x41371c
  41373e:	clc    
  41373f:	dec    ebx
  413740:	sbb    ebx,ebp
  413742:	and    DWORD PTR [ecx+0xf],ecx
  413745:	pusha  
  413746:	out    dx,al
  413747:	and    bh,BYTE PTR [ebx-0x3c]
  41374a:	xor    ah,BYTE PTR [edx+edx*2-0x3a]
  41374e:	xchg   ecx,eax
  41374f:	sti    
  413750:	mov    bh,0x47
  413752:	sbb    bl,BYTE PTR [ebx-0x4d0b979f]
  413758:	fldenv [edi]
  41375a:	inc    ebx
  41375b:	cmp    BYTE PTR [edx+0x3e27eead],0x66
  413762:	xor    eax,0x78546a4d
  413767:	inc    edx
  413768:	adc    dl,ch
  41376a:	mov    esi,0xdab73a1f
  41376f:	sub    al,0x9
  413771:	and    ebx,0xfffffffb
  413774:	(bad)  
  413775:	out    0x71,al
  413777:	call   FWORD PTR [eax-0x3c]
  41377a:	mov    ah,0xf9
  41377c:	jmp    0x413748
  41377e:	jb     0x4137f4
  413780:	dec    esi
  413781:	jbe    0x41376e
  413783:	add    BYTE PTR [ecx-0x2],ch
  413786:	inc    ebx
  413787:	iret   
  413788:	or     edi,esp
  41378a:	test   al,0x96
  41378c:	int3   
  41378d:	mov    al,0xc0
  41378f:	sub    al,BYTE PTR [edi+ecx*1-0x730c2783]
  413796:	icebp  
  413797:	popa   
  413798:	int3   
  413799:	add    bh,BYTE PTR [eax-0x5abc3639]
  41379f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a1:	add    eax,DWORD PTR [esi]
  4137a3:	mov    dh,0xf5
  4137a5:	mov    ?,WORD PTR [eax+0x40]
  4137a8:	push   esi
  4137a9:	test   BYTE PTR [ebx-0x738bcbc9],0x67
  4137b0:	inc    ebp
  4137b1:	add    dh,BYTE PTR [eax]
  4137b3:	push   ds
  4137b4:	lods   eax,DWORD PTR ds:[esi]
  4137b5:	dec    eax
  4137b6:	in     eax,0x20
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	mov    dl,0xa6
  4137bb:	push   ebx
  4137bc:	or     al,0x4b
  4137be:	popa   
  4137bf:	pop    eax
  4137c0:	jp     0x4137b0
  4137c2:	(bad)  
  4137c3:	addr16 lahf 
  4137c5:	push   ecx
  4137c6:	jp     0x4137b7
  4137c8:	add    edi,edx
  4137ca:	and    ebx,ebx
  4137cc:	fimul  DWORD PTR [ebp-0x7]
  4137cf:	test   eax,0x2be388ed
  4137d4:	(bad)  
  4137d5:	mov    ah,0x8b
  4137d7:	mov    eax,0x9c243af5
  4137dc:	dec    edi
  4137dd:	loop   0x413802
  4137df:	push   es
  4137e0:	aad    0xf3
  4137e2:	mov    al,ds:0x8ea48031
  4137e7:	loope  0x41383d
  4137e9:	cmp    cl,BYTE PTR [ebp+ecx*4-0x8]
  4137ed:	push   0x13fd5737
  4137f2:	sbb    BYTE PTR ds:0xf6f49e64,0x21
  4137f9:	rcl    dh,cl
  4137fb:	xlat   BYTE PTR ds:[ebx]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	adc    esi,DWORD PTR [ecx]
  4137ff:	cmp    ecx,ecx
  413801:	mov    eax,0x7cd250cf
  413806:	int3   
  413807:	sti    
  413808:	icebp  
  413809:	int3   
  41380a:	sub    ebp,esp
  41380c:	inc    eax
  41380d:	fstp   st(2)
  41380f:	ins    DWORD PTR es:[edi],dx
  413810:	ror    BYTE PTR [esi],cl
  413812:	mov    cl,BYTE PTR [edx]
  413814:	test   BYTE PTR [eax+0x33ab799d],ch
  41381a:	scas   al,BYTE PTR es:[edi]
  41381b:	push   0xd1d58a28
  413820:	cs aad 0x36
  413823:	add    BYTE PTR [esi-0x66],dl
  413826:	mov    edi,0xe6c7ba31
  41382b:	fnstenv [esi]
  41382d:	ja     0x41389b
  41382f:	call   0xbcfb:0x4cb4535a
  413836:	retf   
  413837:	shl    esi,cl
  413839:	mov    eax,0x47fc77e8
  41383e:	dec    ebx
  41383f:	retf   0x127
  413842:	inc    ebp
  413843:	dec    edx
  413844:	(bad)  
  413845:	shl    BYTE PTR [esi+eiz*2+0xe379b27],1
  41384c:	dec    esi
  41384d:	in     eax,dx
  41384e:	sahf   
  41384f:	or     al,0xe8
  413851:	xlat   BYTE PTR ds:[ebx]
  413852:	add    BYTE PTR [ebp+0x11],bh
  413855:	fxch   st(6)
  413857:	mov    cl,0x90
  413859:	inc    ecx
  41385a:	xor    eax,DWORD PTR [eiz*8+0x69953f04]
  413861:	xor    BYTE PTR [ebx+ebx*1],cl
  413864:	sub    eax,0x415488d1
  413869:	imul   ebp,DWORD PTR [edx+0x626a8a97],0x2b0dea79
  413873:	arpl   WORD PTR [ebx],bp
  413875:	outs   dx,DWORD PTR ds:[esi]
  413876:	out    dx,al
  413877:	pop    ebp
  413878:	rol    DWORD PTR [ecx-0x58],0xaa
  41387c:	out    dx,eax
  41387d:	aad    0x3b
  41387f:	mov    ds:0x63545ef1,eax
  413884:	es stc 
  413886:	int3   
  413887:	jge    0x413865
  413889:	outs   dx,BYTE PTR ds:[esi]
  41388a:	pop    eax
  41388b:	es jecxz 0x413842
  41388e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388f:	inc    esp
  413890:	aam    0xf5
  413892:	sbb    al,ch
  413894:	sub    edi,ebp
  413896:	sbb    DWORD PTR [edx-0x30d4ea82],esp
  41389c:	mov    bh,bl
  41389e:	mov    esi,ebx
  4138a0:	sub    eax,0xf4ca14c3
  4138a5:	jmp    DWORD PTR [esi]
  4138a7:	lods   al,BYTE PTR ds:[esi]
  4138a8:	mov    BYTE PTR [ebp+0x33b9c579],ch
  4138ae:	fdivr  st,st(2)
  4138b0:	les    edi,FWORD PTR [edi]
  4138b2:	pop    edx
  4138b3:	sar    DWORD PTR [ebx],cl
  4138b5:	sub    eax,0x25269cf8
  4138ba:	inc    ecx
  4138bb:	or     dl,BYTE PTR [eax+0x250d693b]
  4138c1:	(bad)  
  4138c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138c3:	out    dx,al
  4138c4:	test   al,0x58
  4138c6:	stc    
  4138c7:	add    cl,dl
  4138c9:	leave  
  4138ca:	nop
  4138cb:	xor    eax,0x41402730
  4138d0:	clc    
  4138d1:	xchg   ebp,eax
  4138d2:	sub    al,0x4e
  4138d4:	imul   ebp,DWORD PTR [eax],0xffffffdb
  4138d7:	or     ebx,DWORD PTR [ebx-0x41]
  4138da:	(bad)  
  4138db:	int    0xa4
  4138dd:	inc    edx
  4138de:	shld   DWORD PTR [ebp-0x42],eax,cl
  4138e2:	mov    al,ds:0x4a4093da
  4138e7:	arpl   WORD PTR [edx],dx
  4138e9:	inc    edx
  4138ea:	jle    0x41391f
  4138ec:	js     0x41390d
  4138ee:	mov    esp,0x57b896fc
  4138f3:	or     DWORD PTR [ebx-0x39],ebp
  4138f6:	fwait
  4138f7:	ror    edi,cl
  4138f9:	jmp    0x43485cf4
  4138fe:	clc    
  4138ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413900:	add    eax,0xabbb6aea
  413905:	mov    ds:0xeab4c373,eax
  41390a:	nop
  41390b:	(bad)  
  41390c:	std    
  41390d:	into   
  41390e:	jo     0x41398c
  413910:	adc    BYTE PTR [esi+0x71c268f7],dl
  413916:	or     BYTE PTR [ebp+0x46],ch
  413919:	push   eax
  41391a:	inc    edx
  41391b:	or     BYTE PTR [edx+ebp*8-0x4ec29e9f],0x21
  413923:	sub    al,0x7c
  413925:	int    0xa0
  413927:	int    0x90
  413929:	xor    al,0x3b
  41392b:	scas   al,BYTE PTR es:[edi]
  41392c:	lds    eax,FWORD PTR [ebx]
  41392e:	fnstenv [ebp+0x29]
  413931:	dec    eax
  413932:	into   
  413933:	in     al,0xdd
  413935:	mov    ds:0x1570201e,eax
  41393a:	mov    bl,0x82
  41393c:	mov    esi,0x3b34b82
  413941:	fdivr  st(5),st
  413943:	and    DWORD PTR gs:[edi+0x63],ebp
  413947:	pop    ss
  413948:	mov    edi,0xa5e81cae
  41394d:	pop    edi
  41394e:	pusha  
  41394f:	sahf   
  413950:	lds    ecx,FWORD PTR ds:0xce23b279
  413956:	in     eax,0x40
  413958:	sub    ebx,DWORD PTR [ebx]
  41395a:	ds xor esp,ebx
  41395d:	pop    esi
  41395e:	push   edx
  41395f:	adc    DWORD PTR [edi],0xe
  413962:	and    al,0x1d
  413964:	mov    DWORD PTR [edx+0xd],0x3666c431
  41396b:	add    DWORD PTR [eax-0x2],0xa3b0a44d
  413972:	mov    ds:0xa4a1c4fd,al
  413977:	jno    0x4139cd
  413979:	adc    bh,BYTE PTR [ebx+0x31]
  41397c:	xor    al,0xd9
  41397e:	or     DWORD PTR [eax],edx
  413980:	push   edx
  413981:	in     al,dx
  413982:	adc    bh,BYTE PTR [ebx+eiz*8-0x4f63a4f3]
  413989:	add    ch,BYTE PTR [esp+ecx*1+0x5a]
  41398d:	fmul   DWORD PTR [ebp+ebx*1-0x4c357a3]
  413994:	inc    esi
  413995:	jo     0x4139d9
  413997:	ja     0x41394a
  413999:	sbb    ch,BYTE PTR [edx+eiz*8-0x34]
  41399d:	iret   
  41399e:	mov    fs,WORD PTR ds:0xcb472848
  4139a4:	test   DWORD PTR [ebp+0x20c42c59],ebp
  4139aa:	pop    ss
  4139ab:	xchg   ecx,eax
  4139ac:	mov    ecx,0xbbc87116
  4139b1:	xchg   edi,eax
  4139b2:	scas   al,BYTE PTR es:[edi]
  4139b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b4:	iret   
  4139b5:	mov    bh,0x7f
  4139b7:	nop
  4139b8:	and    BYTE PTR [ecx+0x66],ch
  4139bb:	(bad)  
  4139bc:	mov    BYTE PTR [eax+edx*8-0x35b4593c],bh
  4139c3:	adc    eax,0xce5bc1f0
  4139c8:	and    BYTE PTR [edx],bh
  4139ca:	enter  0x3abf,0xea
  4139ce:	inc    eax
  4139cf:	xor    cl,BYTE PTR [edx-0x69]
  4139d2:	adc    BYTE PTR [edx+0x3593161e],ch
  4139d8:	les    ebp,FWORD PTR [esi]
  4139da:	pop    es
  4139db:	lock icebp 
  4139dd:	mov    BYTE PTR [esi-0x146997ce],bh
  4139e3:	push   ebp
  4139e4:	jno    0x4139d3
  4139e6:	dec    ebx
  4139e7:	nop
  4139e8:	je     0x4139cf
  4139ea:	mov    DWORD PTR [edi-0x2],esp
  4139ed:	xchg   BYTE PTR [esi],dl
  4139ef:	aam    0x71
  4139f1:	aad    0xce
  4139f3:	fcom   QWORD PTR [edx-0x6b8055f3]
  4139f9:	adc    ebp,DWORD PTR [edx+0x6fe84c9]
  4139ff:	int3   
  413a00:	dec    ebx
  413a01:	cdq    
  413a02:	in     eax,0x16
  413a04:	mov    ch,0x60
  413a06:	adc    al,BYTE PTR [eax-0x1755b71f]
  413a0c:	add    BYTE PTR ds:0xa93766f1,bl
  413a12:	push   0xbfa43e59
  413a17:	sub    DWORD PTR [ebx-0x4],esp
  413a1a:	or     BYTE PTR [ebx+0x69],0xbf
  413a1e:	retf   0xba1b
  413a21:	shl    DWORD PTR [eax-0x954c539],1
  413a27:	adc    BYTE PTR [ecx],dh
  413a29:	(bad)  
  413a2a:	xchg   edi,eax
  413a2b:	out    0xd2,eax
  413a2d:	mov    es:0xe21591e7,eax
  413a33:	sbb    al,0xc0
  413a35:	nop
  413a36:	cmp    dh,BYTE PTR [esi]
  413a38:	aas    
  413a39:	sbb    eax,0x5b0ab52b
  413a3e:	inc    esp
  413a3f:	sub    edx,DWORD PTR [ecx-0x20]
  413a42:	xchg   DWORD PTR [edi+0x1],ecx
  413a45:	je     0x413ab9
  413a47:	js     0x413ac8
  413a49:	pop    ss
  413a4a:	jo     0x413a88
  413a4c:	hlt    
  413a4d:	push   edx
  413a4e:	aaa    
  413a4f:	ror    DWORD PTR [esi],cl
  413a51:	jg     0x413ad2
  413a53:	xchg   esi,eax
  413a54:	or     BYTE PTR ds:0x7f399efa,dl
  413a5a:	dec    ebx
  413a5b:	rcr    BYTE PTR [esi+0x41],cl
  413a5e:	or     bh,BYTE PTR [eax+0x1c]
  413a61:	hlt    
  413a62:	and    BYTE PTR ds:0x880a4254,cl
  413a68:	clc    
  413a69:	cld    
  413a6a:	push   ebp
  413a6b:	sbb    BYTE PTR [ecx],bh
  413a6d:	push   eax
  413a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a6f:	das    
  413a70:	sub    BYTE PTR [ecx],dh
  413a72:	or     al,0x2a
  413a74:	cmp    al,0x2a
  413a76:	adc    al,0x81
  413a78:	lods   eax,DWORD PTR ds:[esi]
  413a79:	sub    eax,0x2fb3a617
  413a7e:	jp     0x413a89
  413a80:	xor    ebx,DWORD PTR [ebx]
  413a82:	adc    al,0xc
  413a84:	mov    ds,WORD PTR [ebx+0x49]
  413a87:	inc    esp
  413a88:	push   ebx
  413a89:	ins    BYTE PTR es:[edi],dx
  413a8a:	xchg   ebx,eax
  413a8b:	addr16 xchg edx,eax
  413a8d:	out    dx,al
  413a8e:	jno    0x413a3c
  413a90:	and    bh,cl
  413a92:	ds pop edi
  413a94:	adc    ah,BYTE PTR [eax]
  413a96:	jno    0x413a55
  413a98:	fsub   QWORD PTR [eax]
  413a9a:	pop    edi
  413a9b:	sub    BYTE PTR [esi-0x17],bh
  413a9e:	inc    ebp
  413a9f:	xlat   BYTE PTR ds:[ebx]
  413aa0:	mov    WORD PTR fs:[esi+0x346d4086],gs
  413aa7:	xor    al,dl
  413aa9:	inc    ebp
  413aaa:	outs   dx,BYTE PTR ds:[esi]
  413aab:	popf   
  413aac:	scas   eax,DWORD PTR es:[edi]
  413aad:	pop    esp
  413aae:	xchg   BYTE PTR [ebx],bh
  413ab0:	fxch   st(2)
  413ab2:	pushf  
  413ab3:	cmp    esi,edi
  413ab5:	dec    ecx
  413ab6:	jno    0x413aec
  413ab8:	lds    ebp,FWORD PTR [ecx+0xe]
  413abb:	fistp  QWORD PTR [edx+0x56]
  413abe:	or     DWORD PTR [esi+esi*2],ebx
  413ac1:	jae    0x413af6
  413ac3:	jns    0x413a4b
  413ac5:	popf   
  413ac6:	mov    ch,0xff
  413ac8:	ins    DWORD PTR es:[edi],dx
  413ac9:	ficom  DWORD PTR [edi+eax*4+0x29]
  413acd:	mov    ecx,DWORD PTR [ebp+ecx*2+0x5e9a2f5a]
  413ad4:	xor    al,0xef
  413ad6:	xor    al,0x9c
  413ad8:	push   cs
  413ad9:	inc    edx
  413ada:	int    0x3a
  413adc:	outs   dx,BYTE PTR ds:[esi]
  413add:	jmp    0x1455:0x2fea4989
  413ae4:	les    ecx,FWORD PTR [ebx+0x61]
  413ae7:	cs aad 0xf2
  413aea:	das    
  413aeb:	lock or DWORD PTR [edi+0x7952ad52],edx
  413af2:	sub    al,0x67
  413af4:	push   esp
  413af5:	inc    eax
  413af6:	and    al,0x54
  413af8:	popf   
  413af9:	scas   al,BYTE PTR es:[edi]
  413afa:	loope  0x413b07
  413afc:	xchg   esp,eax
  413afd:	fldenv [ebp-0x7de2850]
  413b03:	pop    eax
  413b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b05:	inc    edx
  413b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b07:	pop    edi
  413b08:	pop    es
  413b09:	mov    bh,0x5d
  413b0b:	sbb    esi,ebx
  413b0d:	push   esi
  413b0e:	lods   al,BYTE PTR ds:[esi]
  413b0f:	jb     0x413b02
  413b11:	je     0x413b5c
  413b13:	sub    al,0xba
  413b15:	push   es
  413b16:	cmp    eax,0xc4d71254
  413b1b:	jo     0x413b66
  413b1d:	cld    
  413b1e:	pop    esp
  413b1f:	test   BYTE PTR [edx-0x2],al
  413b22:	cli    
  413b23:	(bad)  
  413b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b25:	mov    dh,0x63
  413b27:	pop    eax
  413b28:	jge    0x413aba
  413b2a:	shr    DWORD PTR [esi],cl
  413b2c:	and    al,0x9c
  413b2e:	(bad)  
  413b2f:	das    
  413b30:	in     eax,0x3c
  413b32:	sub    BYTE PTR [ebx-0x48853740],ch
  413b38:	pushf  
  413b39:	out    dx,al
  413b3a:	jmp    0x413ac6
  413b3c:	inc    ebp
  413b3d:	addr16 (bad) 
  413b40:	in     eax,dx
  413b41:	clc    
  413b42:	xchg   DWORD PTR [eax],ecx
  413b44:	dec    esi
  413b45:	int    0xfc
  413b47:	(bad)  
  413b48:	int3   
  413b49:	sbb    esp,DWORD PTR [edx]
  413b4b:	jp     0x413b75
  413b4d:	push   ebx
  413b4e:	and    al,0x77
  413b50:	sbb    al,0xe6
  413b52:	stos   BYTE PTR es:[edi],al
  413b53:	mov    ds:0xf4f6dd66,eax
  413b58:	push   ebx
  413b59:	cmp    esi,DWORD PTR [ecx-0x2a3ec02c]
  413b5f:	sub    DWORD PTR [ebx+0x66],0xffffffcc
  413b63:	shl    bh,1
  413b65:	(bad)  
  413b66:	mov    al,ds:0xb1ef4726
  413b6b:	inc    ecx
  413b6c:	jp     0x413b7c
  413b6e:	sar    BYTE PTR [edx-0x56],1
  413b71:	in     eax,0xa
  413b73:	nop
  413b74:	aam    0x98
  413b76:	repnz in eax,0xfa
  413b79:	enter  0x3285,0x98
  413b7d:	aam    0xc2
  413b7f:	cld    
  413b80:	(bad)  
  413b81:	fild   DWORD PTR [eax+0x2d7c46a5]
  413b87:	(bad)  
  413b8a:	mov    dh,BYTE PTR [ecx+0x1a]
  413b8d:	dec    edi
  413b8e:	push   es
  413b8f:	mov    cl,0x7e
  413b91:	mov    ch,0xd7
  413b93:	retf   
  413b94:	dec    ebp
  413b95:	adc    al,0xcc
  413b97:	sbb    BYTE PTR [edx],0x68
  413b9a:	sbb    al,0x4
  413b9c:	cmp    DWORD PTR [ecx+eax*1-0x1a],ebp
  413ba0:	pop    ecx
  413ba1:	push   esi
  413ba2:	imul   BYTE PTR [ebx+0xf]
  413ba5:	in     eax,0xe1
  413ba7:	mov    ecx,0xa7c90b99
  413bac:	mov    al,ds:0xe33a973c
  413bb1:	mov    cl,cl
  413bb3:	sti    
  413bb4:	cmc    
  413bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb6:	cld    
  413bb7:	xsavec [edi+0x7f2b6cf4]
  413bbe:	sbb    BYTE PTR [edi],ah
  413bc0:	rcr    BYTE PTR [ebp+0x49],cl
  413bc3:	ret    0x2dac
  413bc6:	aad    0xfb
  413bc8:	sbb    al,0xb
  413bca:	mov    al,ds:0xfe76549a
  413bcf:	adc    eax,0xa3e48f41
  413bd4:	or     DWORD PTR [ebp+0x6767bd98],ebx
  413bda:	dec    eax
  413bdb:	sub    BYTE PTR [ebx+eax*1-0x14],cl
  413bdf:	outs   dx,DWORD PTR ds:[esi]
  413be0:	push   edi
  413be1:	test   eax,0x4ac6dea6
  413be6:	pop    esi
  413be7:	sub    eax,0x83d103f6
  413bec:	xlat   BYTE PTR ds:[ebx]
  413bed:	push   DWORD PTR [ebx]
  413bef:	rol    BYTE PTR [ebx-0x29c4ff09],1
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cd2
  413c08:	mov    ds:0x421cda,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421aa2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423868
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a6e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423883
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423946
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a66
  413f9e:	mov    eax,ds:0x421a76
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ace
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c56
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239c0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	dec    edx
  41424d:	dec    ecx
  41424e:	push   0x61467db0
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	rol    edi,1
  41425a:	pusha  
  41425b:	and    bl,BYTE PTR [edx]
  41425d:	das    
  41425e:	setbe  BYTE PTR [esi]
  414261:	mov    WORD PTR [ebx-0x12828412],fs
  414267:	mov    esi,eax
  414269:	aad    0x6b
  41426b:	gs fs xchg esi,eax
  41426e:	adc    eax,DWORD PTR [ebx+0x5ffdb49d]
  414274:	jge    0x414241
  414276:	adc    DWORD PTR ds:0xf36eea6c,esi
  41427c:	sbb    DWORD PTR [esi],ebx
  41427e:	push   cs
  41427f:	cmp    BYTE PTR [ebx+0x63],0x78
  414283:	adc    DWORD PTR [ecx],edi
  414285:	gs jns 0x4142eb
  414288:	push   ebx
  414289:	push   esp
  41428a:	mov    bh,0x5a
  41428c:	mov    dl,0x29
  41428e:	aaa    
  41428f:	int3   
  414290:	dec    eax
  414291:	outs   dx,BYTE PTR ds:[esi]
  414292:	mov    dh,0x74
  414294:	dec    ebx
  414295:	xchg   ecx,eax
  414296:	jbe    0x414267
  414298:	scas   al,BYTE PTR es:[edi]
  414299:	mov    esi,DWORD PTR [ebx+0x3a]
  41429c:	sbb    al,0x4
  41429e:	sub    eax,0x28883d1f
  4142a3:	lahf   
  4142a4:	lahf   
  4142a5:	jg     0x4142f0
  4142a7:	aam    0x9a
  4142a9:	push   ebp
  4142aa:	and    DWORD PTR [ebx],0xdb89e02b
  4142b0:	mov    ds:0x6406182c,al
  4142b5:	mov    esi,0xaee8dfd6
  4142ba:	cmp    BYTE PTR [eax],0x1d
  4142bd:	repnz ins DWORD PTR es:[edi],dx
  4142bf:	call   0x6627011d
  4142c4:	add    al,0x2c
  4142c6:	mov    ?,WORD PTR [edi-0x11c70bb6]
  4142cc:	push   ss
  4142cd:	or     al,0xcc
  4142cf:	and    eax,0xeae2a2f8
  4142d4:	mov    esp,0xe9ddda0a
  4142d9:	xor    al,BYTE PTR [ebp-0x58accb73]
  4142df:	push   ds
  4142e0:	test   DWORD PTR [edx],ebp
  4142e2:	inc    edi
  4142e3:	sub    ch,dh
  4142e5:	or     edi,DWORD PTR [edi]
  4142e7:	sbb    ah,ah
  4142e9:	retf   0x5c74
  4142ec:	into   
  4142ed:	in     eax,0x7d
  4142ef:	pop    edi
  4142f0:	dec    esp
  4142f1:	fs ss jns 0x414370
  4142f5:	mov    bl,0xbb
  4142f7:	cdq    
  4142f8:	xchg   ebx,eax
  4142f9:	pop    eax
  4142fa:	jbe    0x414322
  4142fc:	inc    esp
  4142fd:	inc    edi
  4142fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ff:	sub    bl,BYTE PTR [esi]
  414301:	not    DWORD PTR [ebx+ebp*1+0x3e4a6d2b]
  414308:	dec    ebp
  414309:	inc    esi
  41430a:	data16 loope 0x414316
  41430d:	cmp    bl,BYTE PTR [eax-0x2722bc25]
  414313:	in     al,0xba
  414315:	clc    
  414316:	aas    
  414317:	into   
  414318:	js     0x414354
  41431a:	mov    ebx,0xadd3317c
  41431f:	into   
  414320:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414322:	sub    DWORD PTR [edi-0x64],0x488307af
  414329:	pop    ss
  41432a:	gs icebp 
  41432c:	push   ebp
  41432d:	sti    
  41432e:	jle    0x4143a0
  414330:	pushf  
  414331:	push   ebx
  414332:	ret    0x7f9
  414335:	push   es
  414336:	mov    esi,0x9703d745
  41433b:	das    
  41433c:	stos   BYTE PTR es:[edi],al
  41433d:	mov    ecx,0xde369928
  414342:	mov    eax,ds:0x48bbed54
  414347:	xor    eax,0x7a2c5ad4
  41434c:	icebp  
  41434d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434e:	xor    eax,0x8e00ad84
  414353:	cld    
  414354:	data16 in al,0x25
  414357:	call   DWORD PTR [esi]
  414359:	icebp  
  41435a:	jp     0x414342
  41435c:	js     0x414337
  41435e:	dec    ebp
  41435f:	push   esi
  414360:	mov    ch,0xee
  414362:	or     al,BYTE PTR [esi+0x4aa83863]
  414368:	pop    si
  41436a:	or     bh,BYTE PTR [ebp+0x36c15e66]
  414370:	test   eax,0x7bb31aa0
  414375:	mov    al,0xea
  414377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414378:	dec    cl
  41437a:	lahf   
  41437b:	jns    0x414364
  41437d:	jno    0x4143ad
  41437f:	cmp    ecx,DWORD PTR [ebx-0x56]
  414382:	loopne 0x414304
  414384:	or     eax,0xb9d36481
  414389:	ror    DWORD PTR [edi+0x555fbddf],cl
  41438f:	std    
  414390:	dec    ecx
  414391:	mov    dl,0x30
  414393:	jae    0x414371
  414395:	pop    edx
  414396:	arpl   WORD PTR [ecx],di
  414398:	push   esp
  414399:	jmp    0x414382
  41439b:	(bad)  
  41439d:	outs   dx,DWORD PTR ds:[esi]
  41439e:	pop    esi
  41439f:	push   ebx
  4143a0:	mov    al,ds:0x62c11c4e
  4143a5:	shr    DWORD PTR [ebp+eax*1-0x24929459],1
  4143ac:	test   eax,0xed8ec82d
  4143b1:	cmp    BYTE PTR [ebx+esi*1+0x40],al
  4143b5:	shr    BYTE PTR [edx+0x200c7108],cl
  4143bb:	mov    eax,0xa6e55148
  4143c0:	dec    edi
  4143c1:	push   edi
  4143c2:	stos   DWORD PTR es:[edi],eax
  4143c3:	lahf   
  4143c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c5:	ss (bad) 
  4143c7:	fcom   QWORD PTR [edi-0x7b]
  4143ca:	xor    BYTE PTR [edx+0x7a],bh
  4143cd:	and    al,0x4f
  4143cf:	sar    ecx,0x43
  4143d2:	mov    al,ds:0xcd9b0d53
  4143d7:	mov    dh,al
  4143d9:	daa    
  4143da:	mov    bh,0xe
  4143dc:	jae    0x41438b
  4143de:	mov    bl,0x3c
  4143e0:	push   edx
  4143e1:	in     eax,0xd6
  4143e3:	xor    bl,0x15
  4143e6:	shl    BYTE PTR [esi+0x7c],0x24
  4143ea:	lods   eax,DWORD PTR ds:[esi]
  4143eb:	inc    esi
  4143ec:	and    al,0x34
  4143ee:	and    dh,BYTE PTR [ecx]
  4143f0:	fild   WORD PTR [ebx+0x1172f09b]
  4143f6:	xchg   esi,eax
  4143f7:	cmp    DWORD PTR [di],edx
  4143fa:	mov    esi,edi
  4143fc:	hlt    
  4143fd:	xchg   BYTE PTR [edi],bh
  4143ff:	out    dx,eax
  414400:	pushf  
  414401:	ja     0x414384
  414403:	push   ebp
  414404:	cmp    al,0x13
  414406:	sbb    esp,DWORD PTR [edx]
  414408:	stc    
  414409:	xchg   ebp,ebp
  41440b:	jge    0x4143e5
  41440d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41440e:	mov    esi,DWORD PTR [edx-0xd]
  414411:	(bad)  
  414412:	(bad)  
  414414:	gs push ds
  414416:	jg     0x414404
  414418:	ret    
  414419:	inc    ebp
  41441a:	sbb    dl,dh
  41441c:	sub    edx,ebp
  41441e:	iret   
  41441f:	sub    BYTE PTR [ebx],0x5
  414422:	push   0xffffffd6
  414424:	jge    0x414419
  414426:	icebp  
  414427:	ins    BYTE PTR es:[edi],dx
  414428:	pop    ds
  414429:	retf   
  41442a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41442b:	test   edi,esp
  41442d:	nop
  41442e:	loope  0x4143b7
  414430:	pushf  
  414431:	add    BYTE PTR [ebx],0xbc
  414434:	lea    ecx,[ebx]
  414436:	dec    ecx
  414437:	adc    dl,BYTE PTR [edx-0x700e5d3b]
  41443d:	imul   esp,DWORD PTR [edx+0x6ab8c6a4],0x4b145c9a
  414447:	xchg   ebp,eax
  414448:	push   cs
  414449:	xchg   esi,eax
  41444a:	call   DWORD PTR [esp+ebx*2+0xa04df57]
  414451:	jbe    0x414450
  414453:	fcmovnb st,st(5)
  414455:	lahf   
  414456:	mov    al,0xf4
  414458:	sbb    edx,DWORD PTR [edi+0x51a68a35]
  41445e:	fwait
  41445f:	sbb    al,BYTE PTR [ebx+eax*1]
  414462:	out    0x15,eax
  414464:	rol    DWORD PTR [edi+0x55637c63],0xb5
  41446b:	mov    edi,0xd80c4e71
  414470:	jbe    0x4144d2
  414472:	sbb    dh,BYTE PTR [eax+edi*2+0x47]
  414476:	cld    
  414477:	jb     0x414492
  414479:	sbb    eax,0xb2350034
  41447e:	jo     0x414420
  414480:	sub    DWORD PTR [esi],0x39
  414483:	fild   DWORD PTR [eax+0x5b830fd9]
  414489:	push   0xffffffba
  41448b:	nop
  41448c:	inc    ebp
  41448d:	imul   esp,DWORD PTR ss:[esi+0x4fafe973],0x40639472
  414498:	std    
  414499:	ins    DWORD PTR es:[edi],dx
  41449a:	mov    ch,0x5e
  41449c:	fyl2x  
  41449e:	add    BYTE PTR [ecx],bh
  4144a0:	int3   
  4144a1:	fisubr WORD PTR [ecx+0x6bf9646e]
  4144a7:	sub    eax,0x2524a919
  4144ac:	xchg   esp,eax
  4144ad:	out    0x4f,eax
  4144af:	add    dh,BYTE PTR [ecx-0x62]
  4144b2:	imul   ebp,DWORD PTR [esi],0x479d443e
  4144b8:	loop   0x4144bf
  4144ba:	mov    esi,0x7ed2492b
  4144bf:	inc    edx
  4144c0:	xchg   edx,eax
  4144c1:	and    BYTE PTR [edx-0x15],bl
  4144c4:	mov    ds:0x3bcc86b,eax
  4144c9:	ret    
  4144ca:	sti    
  4144cb:	test   eax,0xac82ced1
  4144d0:	sbb    eax,0xca92ed04
  4144d5:	fcomp  QWORD PTR [edi]
  4144d7:	cdq    
  4144d8:	out    dx,al
  4144d9:	mov    esp,DWORD PTR [edx+esi*2+0x7c]
  4144dd:	mov    eax,ds:0x14030e2d
  4144e2:	inc    ecx
  4144e3:	mov    ds:0x1ad7ab9,al
  4144e8:	cmp    edx,edx
  4144ea:	dec    esp
  4144eb:	dec    ecx
  4144ec:	pop    ecx
  4144ed:	push   cs
  4144ee:	in     eax,dx
  4144ef:	sub    BYTE PTR [ebp-0x7fe05820],al
  4144f5:	or     ebp,DWORD PTR [ecx+edi*4-0x369c051e]
  4144fc:	and    al,0x7
  4144fe:	stc    
  4144ff:	loop   0x414577
  414501:	pushw  0x33
  414504:	or     ah,BYTE PTR [ecx-0x24db9c13]
  41450a:	xor    DWORD PTR [edx-0xe],ecx
  41450d:	push   ecx
  41450e:	push   ecx
  41450f:	lods   eax,DWORD PTR ds:[esi]
  414510:	sub    eax,0x75ae3589
  414515:	adc    edi,DWORD PTR [ebp+esi*1-0x5c048c18]
  41451c:	cmp    al,0x4f
  41451e:	scas   eax,DWORD PTR es:[edi]
  41451f:	dec    eax
  414520:	sub    al,0x7b
  414522:	pop    ebx
  414523:	pop    ds
  414524:	into   
  414525:	sub    BYTE PTR [ebp-0x76],al
  414528:	(bad)  
  414529:	mov    dh,0x22
  41452b:	loope  0x414548
  41452d:	mov    WORD PTR [edi+eiz*4],?
  414530:	aam    0xab
  414532:	in     eax,dx
  414533:	dec    esi
  414534:	xchg   ebp,eax
  414535:	mov    eax,ds:0xe826449f
  41453a:	int3   
  41453b:	xor    DWORD PTR [ebp+0x327ebdb1],edi
  414541:	(bad)  
  414542:	or     al,0xcf
  414544:	(bad)  
  414545:	jle    0x41457c
  414547:	scas   eax,DWORD PTR es:[edi]
  414548:	push   cs
  414549:	dec    esp
  41454a:	in     al,0x32
  41454c:	mov    ah,BYTE PTR [edi-0x2a]
  41454f:	dec    eax
  414550:	stc    
  414551:	pop    edi
  414552:	sbb    edi,DWORD PTR [eax+0x33]
  414555:	or     al,0x5b
  414557:	push   0x6006e6c7
  41455c:	jbe    0x4145d1
  41455e:	cdq    
  41455f:	(bad)  
  414560:	dec    eax
  414561:	neg    dl
  414563:	gs dec esp
  414565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414566:	push   cs
  414567:	dec    edx
  414568:	test   BYTE PTR [eax-0x6],al
  41456b:	or     BYTE PTR [ebx-0x5c],dl
  41456e:	enter  0x2bc6,0x89
  414572:	sbb    al,0xb5
  414574:	out    0x85,eax
  414576:	ror    BYTE PTR [edx],1
  414578:	or     eax,0x925469a
  41457d:	inc    edi
  41457e:	cmp    bl,bl
  414580:	aaa    
  414581:	mov    ecx,0xea695193
  414586:	(bad)  [eax+0x2410d05f]
  41458c:	lock inc edi
  41458e:	pusha  
  41458f:	enter  0x119b,0x21
  414593:	in     eax,dx
  414594:	push   esp
  414595:	aaa    
  414596:	jle    0x414569
  414598:	ret    
  414599:	stc    
  41459a:	inc    ecx
  41459b:	fstp   DWORD PTR ds:0x3c44c7b3
  4145a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a2:	mov    edi,0x4c7a3401
  4145a7:	sub    dl,BYTE PTR ds:0x9b504282
  4145ad:	push   edx
  4145ae:	pop    esi
  4145af:	lock arpl WORD PTR [edx],bx
  4145b2:	push   ds
  4145b3:	add    al,0xe9
  4145b5:	ins    DWORD PTR es:[edi],dx
  4145b6:	outs   dx,BYTE PTR ds:[esi]
  4145b7:	jns    0x4145d7
  4145b9:	adc    eax,0x349908
  4145be:	sub    esp,DWORD PTR [ecx]
  4145c0:	fsubr  QWORD PTR [ebp+esi*2-0x55]
  4145c4:	rcr    BYTE PTR [edx],1
  4145c6:	mov    ebx,0xa73c79d9
  4145cb:	stos   DWORD PTR es:[edi],eax
  4145cc:	xchg   ecx,eax
  4145cd:	mov    ds:0x3bf77c05,eax
  4145d2:	inc    ebp
  4145d3:	in     al,dx
  4145d4:	pop    ss
  4145d5:	cs inc edi
  4145d7:	(bad)  
  4145d8:	xor    BYTE PTR [edi-0x13],ah
  4145db:	push   cs
  4145dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145dd:	sub    DWORD PTR [eax-0xd],0xffffffde
  4145e1:	in     eax,0xbc
  4145e3:	bound  edi,QWORD PTR [edx]
  4145e5:	mov    cl,0x27
  4145e7:	loopne 0x414593
  4145e9:	sbb    ch,BYTE PTR [ebx]
  4145eb:	or     al,0x71
  4145ed:	mov    bl,0xef
  4145ef:	sbb    al,0xa4
  4145f1:	ficomp DWORD PTR [edi]
  4145f3:	mov    al,0xe4
  4145f5:	adc    ch,BYTE PTR [edi]
  4145f7:	call   DWORD PTR [bx+si-0x5]
  4145fb:	test   DWORD PTR [edi-0x23f16aa0],edi
  414601:	adc    BYTE PTR ds:0x77adb9be,bl
  414607:	add    eax,0x56b1c2d6
  41460c:	jns    0x4145b0
  41460e:	das    
  41460f:	and    al,0x69
  414611:	imul   ecx,DWORD PTR [ebx+0x3],0x2b
  414615:	pop    esp
  414616:	call   0xba20:0x52b3c5c6
  41461d:	mov    ecx,0x310480cb
  414622:	sbb    al,0x80
  414624:	aas    
  414625:	mov    esp,0xe4df8d71
  41462a:	(bad)  
  41462b:	push   ecx
  41462c:	push   eax
  41462d:	mov    WORD PTR [esi+0x759c94b4],?
  414633:	pop    ecx
  414634:	dec    esp
  414635:	mov    al,0xac
  414637:	push   edx
  414638:	mov    bh,0x87
  41463a:	test   eax,0x3427677
  41463f:	int3   
  414640:	into   
  414641:	push   esi
  414642:	xlat   BYTE PTR ds:[ebx]
  414643:	int    0x65
  414645:	dec    ecx
  414646:	dec    esi
  414647:	push   eax
  414648:	xchg   BYTE PTR [ebx-0x4bc8a16e],bl
  41464e:	sbb    cl,cl
  414650:	(bad)
  414654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414655:	popa   
  414656:	xor    edi,esi
  414658:	and    ebp,ecx
  41465a:	cmp    al,0xbe
  41465c:	and    BYTE PTR ds:0xb653cec9,0xc6
  414663:	ins    DWORD PTR es:[edi],dx
  414664:	lods   al,BYTE PTR ds:[esi]
  414665:	int3   
  414666:	bound  edi,QWORD PTR [ebx]
  414668:	push   eax
  414669:	adc    DWORD PTR [esp+edi*8],0x8684e062
  414670:	and    esi,DWORD PTR [edi]
  414672:	and    al,0x62
  414674:	or     dh,BYTE PTR ds:[ebp-0x3ce290bb]
  41467b:	(bad)
  41467f:	jne    0x4146eb
  414681:	lea    ebx,[ebp+0x5fce696a]
  414687:	push   eax
  414688:	and    DWORD PTR [esi],0x62
  41468b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468c:	push   ebp
  41468d:	dec    edi
  41468e:	out    0x9e,eax
  414690:	fisubr DWORD PTR [ebx+0x45]
  414693:	sti    
  414694:	adc    DWORD PTR [eax],eax
  414696:	adc    dl,BYTE PTR [edx+0x44]
  414699:	es (bad) 
  41469b:	out    dx,eax
  41469c:	rcl    DWORD PTR [ebx],cl
  41469e:	loope  0x41469c
  4146a0:	inc    eax
  4146a1:	in     eax,dx
  4146a2:	or     ch,dl
  4146a4:	adc    al,0x35
  4146a6:	mov    esp,0x9e47fd6a
  4146ab:	cdq    
  4146ac:	js     0x4146a1
  4146ae:	or     BYTE PTR [ebx+0x6d],al
  4146b1:	push   ecx
  4146b2:	(bad)  
  4146b3:	push   esp
  4146b4:	sbb    al,0xfb
  4146b6:	fbstp  TBYTE PTR [edx]
  4146b8:	sub    BYTE PTR [edx-0x58119f45],dh
  4146be:	mul    DWORD PTR [edi+edi*4-0x60]
  4146c2:	dec    esi
  4146c3:	dec    esi
  4146c4:	je     0x414743
  4146c6:	fild   QWORD PTR [edi]
  4146c8:	push   ecx
  4146c9:	xchg   DWORD PTR [eax-0x4c],ecx
  4146cc:	fimul  WORD PTR [ebx+0x64]
  4146cf:	aad    0xa5
  4146d1:	daa    
  4146d2:	scas   al,BYTE PTR es:[edi]
  4146d3:	test   eax,0x54118936
  4146d8:	xor    ecx,esp
  4146da:	out    dx,eax
  4146db:	clc    
  4146dc:	and    BYTE PTR [ebx+0x228352ed],ch
  4146e2:	mov    al,0x29
  4146e4:	cs xchg ebp,eax
  4146e6:	adc    edx,ebx
  4146e8:	adc    bl,bl
  4146ea:	int    0xe
  4146ec:	jne    0x414677
  4146ee:	push   edx
  4146ef:	mul    BYTE PTR [ebp+0x62]
  4146f2:	mov    ds:0xc2247227,eax
  4146f7:	cmp    BYTE PTR [eax+0x73f56e16],ah
  4146fd:	adc    ebp,eax
  4146ff:	inc    esi
  414700:	jl     0x41476d
  414702:	xor    BYTE PTR [esi-0x6cb526a0],ah
  414708:	adc    esi,eax
  41470a:	in     al,dx
  41470b:	or     dh,dh
  41470d:	jp     0x414778
  41470f:	ror    DWORD PTR [ebx],1
  414711:	or     al,0x25
  414713:	retf   
  414714:	bound  eax,QWORD PTR [ecx+0x1]
  414717:	ss push edx
  414719:	jge    0x4146d4
  41471b:	mov    esi,0xbf3f945c
  414720:	out    dx,eax
  414721:	test   al,0x24
  414723:	call   0x2e20e6a9
  414728:	fld    DWORD PTR [edx+edi*8]
  41472b:	mov    ch,0xed
  41472d:	inc    ecx
  41472e:	sub    bh,BYTE PTR [ebp-0x70ff9e96]
  414734:	data16 mov WORD PTR [ebx+eax*2],es
  414738:	jne    0x414736
  41473a:	(bad)  
  41473b:	jo     0x414781
  41473d:	and    ecx,edi
  41473f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414741:	test   BYTE PTR [edx],al
  414743:	jmp    0xceb6:0x5dcaa2c
  41474a:	push   cs
  41474b:	mov    dl,0x2
  41474d:	ficom  WORD PTR [edi]
  41474f:	jmp    0xb10784ed
  414754:	cmp    al,bh
  414756:	dec    esi
  414757:	les    eax,FWORD PTR [edx+0x61]
  41475a:	jo     0x41471e
  41475c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41475d:	mov    ds,ebp
  41475f:	pop    edx
  414760:	xchg   ebx,eax
  414761:	cdq    
  414762:	clc    
  414763:	gs stos BYTE PTR es:[edi],al
  414765:	add    BYTE PTR [ebp+0x5c],0xc6
  414769:	imul   esi,DWORD PTR [ebp+0x16],0x5b
  41476d:	xchg   esp,eax
  41476e:	pusha  
  41476f:	inc    ebx
  414770:	ds dec ebx
  414772:	pop    ebp
  414773:	ret    
  414774:	or     al,0x31
  414776:	xor    esp,ebp
  414778:	xchg   dh,ch
  41477a:	mov    bl,0x9d
  41477c:	pop    ecx
  41477d:	retf   0x6a28
  414780:	fmul   QWORD PTR [ecx+ecx*4]
  414783:	jmp    0x4147d6
  414785:	jmp    0x3bcef38b
  41478a:	fbstp  TBYTE PTR [esi-0x72]
  41478d:	xchg   DWORD PTR [edi-0x77],esp
  414790:	sbb    BYTE PTR [ebp+ecx*1+0x47ba6ea2],ah
  414797:	dec    esp
  414798:	sti    
  414799:	mov    eax,ds:0x30fdb2f3
  41479e:	bound  ebx,QWORD PTR [ebx]
  4147a0:	mov    ebp,0xc462633b
  4147a5:	push   ebp
  4147a6:	dec    al
  4147a8:	(bad)  [edi]
  4147aa:	mov    ?,WORD PTR [ebp+0x727ceef0]
  4147b0:	sub    ebx,DWORD PTR [edx+0x52]
  4147b3:	xor    DWORD PTR [esi],ebx
  4147b5:	fsubr  DWORD PTR [ebx+0x39]
  4147b8:	mov    eax,ds:0x974bbf08
  4147bd:	adc    al,0x9d
  4147bf:	dec    ebx
  4147c0:	sub    DWORD PTR [edx-0x66310ceb],ecx
  4147c6:	cmp    eax,esp
  4147c8:	mov    BYTE PTR [edi-0x1d],al
  4147cb:	mov    bl,0xeb
  4147cd:	cmc    
  4147ce:	cmp    BYTE PTR [edi],dl
  4147d0:	mov    bh,0x28
  4147d2:	jns    0x414831
  4147d4:	inc    esp
  4147d5:	or     al,0x32
  4147d7:	ret    
  4147d8:	adc    cl,ah
  4147da:	add    al,BYTE PTR [ecx+0x7d]
  4147dd:	or     ebp,ebp
  4147df:	xor    ecx,DWORD PTR [ebx-0x4e]
  4147e2:	mov    esi,0x30e9645f
  4147e7:	mov    al,0x94
  4147e9:	ret    
  4147ea:	cwde   
  4147eb:	mul    DWORD PTR [ebx+ebp*8+0x7eb6b3de]
  4147f2:	dec    ecx
  4147f3:	sbb    al,0x76
  4147f5:	fwait
  4147f6:	(bad)  
  4147f7:	je     0x414817
  4147f9:	mov    WORD PTR [ebx+0x6aeb86d0],?
  4147ff:	iret   
  414800:	adc    esi,0x5e
  414803:	mov    DWORD PTR [edi+0x79c107ee],esi
  414809:	or     eax,0x3969bae
  41480e:	pop    ebx
  41480f:	iret   
  414810:	aas    
  414811:	ss popa 
  414813:	mov    dh,0x1e
  414815:	jle    0x414799
  414817:	jmp    0x41486f
  414819:	stc    
  41481a:	jecxz  0x414828
  41481c:	xlat   BYTE PTR ds:[ebx]
  41481d:	scas   al,BYTE PTR es:[edi]
  41481e:	test   eax,0x7dc53b39
  414823:	xchg   ebx,eax
  414824:	mov    edi,0xc79034c8
  414829:	and    DWORD PTR [eax-0x2be97c61],0x5
  414830:	pop    ebx
  414831:	fst    DWORD PTR [ebx]
  414833:	push   0x70
  414835:	push   ecx
  414836:	std    
  414837:	jo     0x4148a9
  414839:	adc    BYTE PTR [ebp-0x6e32acb3],dl
  41483f:	test   eax,0x9b52cf6a
  414844:	xor    al,0x78
  414846:	sti    
  414847:	lea    esi,ds:0x5bdb596e
  41484d:	lock jbe 0x414862
  414850:	jne    0x414890
  414852:	mov    cl,dl
  414854:	xchg   ebx,edx
  414856:	jecxz  0x414800
  414858:	test   DWORD PTR [esp+ebp*4-0x2fb71731],edi
  41485f:	aas    
  414860:	retf   
  414861:	jne    0x41487b
  414863:	inc    ebx
  414864:	fld    TBYTE PTR [ebx-0x16]
  414867:	jmp    0x41482c
  414869:	push   edx
  41486a:	xchg   edx,eax
  41486b:	leave  
  41486c:	cmp    BYTE PTR [edx+0x68],ch
  41486f:	sbb    al,0xc0
  414871:	push   0x12
  414873:	test   eax,0xa9c9db82
  414878:	inc    esi
  414879:	mov    ecx,0x4dbfefb2
  41487e:	push   edx
  41487f:	mov    ebx,0x47242b56
  414884:	repz adc al,0xe4
  414887:	popf   
  414888:	inc    edi
  414889:	jmp    FWORD PTR [esi-0x1c]
  41488c:	std    
  41488d:	cmp    cl,BYTE PTR [edx-0x3f38da1e]
  414893:	aaa    
  414894:	dec    edi
  414895:	not    edx
  414897:	fmulp  st(7),st
  414899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489a:	add    DWORD PTR ds:0x1e12d8ad,0x6d9e64b9
  4148a4:	aad    0x1c
  4148a6:	jp     0x41482d
  4148a8:	jmp    0xe8863199
  4148ad:	fsubr  st,st(4)
  4148af:	add    al,dh
  4148b1:	sbb    al,al
  4148b3:	hlt    
  4148b4:	inc    ecx
  4148b5:	bound  eax,QWORD PTR [edi+0x1f]
  4148b8:	xchg   ecx,eax
  4148b9:	pop    edx
  4148ba:	daa    
  4148bb:	lods   al,BYTE PTR ds:[esi]
  4148bc:	pop    edx
  4148bd:	inc    esp
  4148be:	mov    WORD PTR [esi],?
  4148c0:	add    al,0xa6
  4148c2:	fwait
  4148c3:	jno    0x41489d
  4148c5:	mov    ebp,es
  4148c7:	jbe    0x41492a
  4148c9:	pop    ds
  4148ca:	gs dec ebp
  4148cc:	jl     0x4148a2
  4148ce:	jge    0x414948
  4148d0:	push   ds
  4148d1:	push   edi
  4148d2:	xchg   edx,eax
  4148d3:	jae    0x41488d
  4148d5:	inc    ebx
  4148d6:	stc    
  4148d7:	lods   eax,DWORD PTR ds:[esi]
  4148d8:	call   0x2326:0x29f39f17
  4148df:	push   eax
  4148e0:	xor    eax,0xfe9af259
  4148e5:	scas   eax,DWORD PTR es:[edi]
  4148e6:	not    BYTE PTR [ecx+0x137699d0]
  4148ec:	adc    dl,al
  4148ee:	jae    0x4148e2
  4148f0:	scas   al,BYTE PTR es:[edi]
  4148f1:	sbb    DWORD PTR [edx],esp
  4148f3:	in     al,0x7b
  4148f5:	sub    al,0x63
  4148f7:	add    ebp,ecx
  4148f9:	cld    
  4148fa:	pop    ebp
  4148fb:	xor    al,0x31
  4148fd:	int    0xe9
  4148ff:	mov    esi,0xcde9cdde
  414904:	inc    edi
  414905:	pop    edi
  414906:	dec    esp
  414907:	adc    DWORD PTR [ecx+ecx*4+0x6b26c514],ecx
  41490e:	fstp   QWORD PTR [esp+ebp*2]
  414911:	xor    BYTE PTR [edi+ebx*2+0x7fc34db1],al
  414918:	fimul  WORD PTR [ebp+0x56]
  41491b:	pop    es
  41491c:	test   al,0x47
  41491e:	pusha  
  41491f:	cmp    al,dh
  414921:	in     eax,dx
  414922:	shr    DWORD PTR [ecx],cl
  414924:	leave  
  414925:	pop    ebp
  414926:	(bad)  
  414927:	cmc    
  414928:	pusha  
  414929:	xchg   esp,eax
  41492a:	stos   BYTE PTR es:[edi],al
  41492b:	fidiv  DWORD PTR [ecx+0x69]
  41492e:	aas    
  41492f:	adc    ebx,DWORD PTR [esi]
  414931:	lods   eax,DWORD PTR ds:[esi]
  414932:	jbe    0x4148c2
  414934:	xor    eax,0x85b05e5
  414939:	ret    
  41493a:	mov    bl,0x16
  41493c:	jecxz  0x4148e7
  41493e:	loop   0x4149a5
  414940:	pop    ebx
  414941:	xor    bh,bh
  414943:	jae    0x414985
  414945:	push   edi
  414946:	fdivr  QWORD PTR [esi-0x72dfda40]
  41494c:	call   0x45292d00
  414951:	add    edi,DWORD PTR [edi+ecx*2-0x60]
  414955:	inc    esp
  414956:	ror    eax,cl
  414958:	pop    ds
  414959:	mov    ds:0x11e5ff2,al
  41495e:	jmp    0x41499c
  414960:	out    0xc0,eax
  414962:	add    BYTE PTR [eax-0x74653fd4],ah
  414968:	int3   
  414969:	and    DWORD PTR [ebx-0x24fea631],ecx
  41496f:	imul   ecx,DWORD PTR [edx],0x40b154ee
  414975:	and    cl,bh
  414977:	sub    ah,BYTE PTR [esi-0x28b1b4c2]
  41497d:	fld    TBYTE PTR [edx+ebp*4-0x58473964]
  414984:	adc    cl,BYTE PTR [esi]
  414986:	mov    bh,bl
  414988:	pop    ss
  414989:	xchg   edi,eax
  41498a:	or     DWORD PTR [ecx-0x67],ebp
  41498d:	pop    ss
  41498e:	rol    BYTE PTR [edx],0xb
  414991:	mov    WORD PTR [edi+0x41],ss
  414994:	xchg   edi,eax
  414995:	jecxz  0x4149c1
  414997:	mov    al,0xab
  414999:	ins    DWORD PTR es:[edi],dx
  41499a:	jecxz  0x4149c3
  41499c:	cmc    
  41499d:	mov    ds:0x84fa2c36,eax
  4149a2:	xchg   edx,eax
  4149a3:	jbe    0x414958
  4149a5:	retf   0xb327
  4149a8:	xchg   BYTE PTR [esi-0x1a4f0d31],bh
  4149ae:	rol    dl,0x74
  4149b1:	repz add bh,BYTE PTR es:[bp-0x5ae5]
  4149b8:	vpshlq xmm14,xmm3,xmm2
  4149bd:	daa    
  4149be:	or     al,0x54
  4149c0:	xchg   esp,eax
  4149c1:	xor    bh,BYTE PTR [edx+0x55]
  4149c4:	xchg   esi,eax
  4149c5:	or     eax,0x52474a74
  4149ca:	mov    ds,WORD PTR [edx+0x2bad22ca]
  4149d0:	or     eax,0x2f41c84b
  4149d5:	aam    0x3e
  4149d7:	bound  edx,QWORD PTR [esi-0x636a37a2]
  4149dd:	ss sbb ebx,edi
  4149e0:	sti    
  4149e1:	mov    esi,0x43f7acc3
  4149e6:	aas    
  4149e7:	inc    esi
  4149e8:	fild   WORD PTR [edx-0x36]
  4149eb:	push   ss
  4149ec:	and    al,0x95
  4149ee:	inc    eax
  4149ef:	pop    ecx
  4149f0:	push   edx
  4149f1:	stos   DWORD PTR es:[edi],eax
  4149f2:	sahf   
  4149f3:	pop    DWORD PTR [esi+ebp*4-0x243aedee]
  4149fa:	nop
  4149fb:	jg     0x4149e3
  4149fd:	inc    eax
  4149fe:	adc    DWORD PTR [edi],ebx
  414a00:	sub    al,0x6b
  414a02:	jecxz  0x4149e7
  414a04:	cmc    
  414a05:	pop    ds
  414a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a07:	adc    DWORD PTR [edi-0x2fd082b3],eax
  414a0d:	cs jecxz 0x414a0d
  414a10:	fisttp WORD PTR [esi-0x5b1497a0]
  414a16:	loopne 0x414a24
  414a18:	mov    edx,0x406907d9
  414a1d:	jno    0x4149af
  414a1f:	xor    eax,0xb55865f9
  414a24:	jae    0x414a32
  414a26:	push   edx
  414a27:	repz iret 
  414a29:	mov    esi,0xe41f86cb
  414a2e:	mov    ah,0xa1
  414a30:	fist   WORD PTR [edx+ecx*8]
  414a33:	inc    edi
  414a34:	sub    DWORD PTR [eax],esi
  414a36:	xor    eax,0xff171aa5
  414a3b:	lds    ecx,FWORD PTR [ecx+edx*4-0xa8674fb]
  414a42:	jmp    0x78ef:0xa590c410
  414a49:	fnsave [eax]
  414a4b:	mov    DWORD PTR [ecx-0x383ab4ed],ebx
  414a51:	adc    al,0x36
  414a53:	(bad)  
  414a54:	mov    esp,0xfc28c1d9
  414a59:	loope  0x414a0e
  414a5b:	pop    ecx
  414a5c:	fwait
  414a5d:	stos   BYTE PTR es:[edi],al
  414a5e:	jge    0x4149f2
  414a60:	sbb    al,0x3f
  414a62:	mov    bh,0x89
  414a64:	cmc    
  414a65:	es jge 0x414ab1
  414a68:	mov    bl,0xb2
  414a6a:	mov    al,ds:0xfb483c35
  414a6f:	mov    bl,0x38
  414a71:	push   0xffffffc6
  414a73:	lds    ecx,FWORD PTR [edi+0x3c]
  414a76:	adc    ebp,edx
  414a78:	sub    BYTE PTR [edi],bl
  414a7a:	cdq    
  414a7b:	daa    
  414a7c:	mov    BYTE PTR [edx-0x387de911],dh
  414a82:	dec    ecx
  414a83:	dec    edi
  414a84:	dec    edi
  414a85:	rcr    DWORD PTR [ebx-0x16],cl
  414a88:	mov    ds:0xcb5b6959,eax
  414a8d:	popf   
  414a8e:	fnstenv [eax]
  414a90:	out    0xce,eax
  414a92:	adc    bl,BYTE PTR [edx-0x6c]
  414a95:	or     esp,eax
  414a97:	mov    edi,0xbcf5371a
  414a9c:	(bad)  
  414a9e:	inc    ebx
  414aa0:	ja     0x414b20
  414aa2:	mov    ch,0x65
  414aa4:	xor    eax,DWORD PTR ds:0xc70bfbef
  414aaa:	rol    eax,cl
  414aac:	ja     0x414aad
  414aae:	leave  
  414aaf:	xlat   BYTE PTR ds:[ebx]
  414ab0:	(bad)  
  414ab1:	mov    ecx,0x131f27d7
  414ab6:	mov    esi,0x6840b780
  414abb:	mov    gs,WORD PTR [ebp+0x3c]
  414abe:	scas   al,BYTE PTR es:[edi]
  414abf:	adc    DWORD PTR [ebx-0x33ee1ab0],0x5d
  414ac6:	push   ecx
  414ac7:	and    al,0x26
  414ac9:	and    dh,BYTE PTR [ecx]
  414acb:	jp     0x414ac7
  414acd:	mov    edi,edx
  414acf:	pushf  
  414ad0:	dec    esi
  414ad1:	mov    es,WORD PTR [esi+ebx*8+0x22]
  414ad5:	jge    0x414af8
  414ad7:	in     eax,dx
  414ad8:	jge    0x414a5b
  414ada:	fsubr  st,st(4)
  414adc:	fcomp  DWORD PTR [edi+0xa]
  414adf:	imul   ebp,DWORD PTR [esi],0x6f883876
  414ae5:	jl     0x414af6
  414ae7:	pushf  
  414ae8:	push   esi
  414ae9:	push   ecx
  414aea:	mov    bl,0x94
  414aec:	mov    cl,0x55
  414aee:	iret   
  414aef:	shl    ah,0x78
  414af2:	or     esi,eax
  414af4:	repnz and eax,0xbd26312a
  414afa:	push   0xffffffaa
  414afc:	dec    esi
  414afd:	gs retf 
  414aff:	sub    eax,0x9cc08985
  414b05:	xchg   BYTE PTR [eax],bl
  414b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b08:	int3   
  414b09:	push   ebx
  414b0a:	and    DWORD PTR [eax+eax*2+0x3477a32c],0xffffffa9
  414b12:	jmp    0xd030:0xfc228df7
  414b19:	mov    ch,0x46
  414b1b:	sbb    ebx,DWORD PTR [edi]
  414b1d:	adc    BYTE PTR [eax],ch
  414b1f:	hlt    
  414b20:	cli    
  414b21:	pop    ebp
  414b22:	push   ss
  414b23:	mov    bh,0x20
  414b25:	and    eax,0xe653d2db
  414b2a:	sbb    al,0xb5
  414b2c:	or     al,0x5a
  414b2e:	jle    0x414b74
  414b30:	fidiv  WORD PTR [esi+0x6eae6b86]
  414b36:	adc    eax,0x4fc94e6e
  414b3b:	or     bh,BYTE PTR [esi-0x58]
  414b3e:	not    BYTE PTR [ecx]
  414b40:	ja     0x414b47
  414b42:	or     ebp,edx
  414b44:	mov    edi,0x1657f25f
  414b49:	imul   ebx,eax,0x4cfca1
  414b4f:	xchg   edi,eax
  414b50:	adc    DWORD PTR [ecx],ebx
  414b52:	es jle 0x414bbb
  414b55:	inc    eax
  414b56:	call   0xbaae:0x4457c1f0
  414b5d:	push   edi
  414b5e:	hlt    
  414b5f:	inc    ebp
  414b60:	cmp    esi,DWORD PTR [esp+edi*2]
  414b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b64:	xor    dl,BYTE PTR [esi]
  414b66:	jae    0x414b2f
  414b68:	fmul   QWORD PTR ds:0xafd24444
  414b6e:	sub    bl,BYTE PTR [ebp+esi*1-0x79]
  414b72:	mov    edi,0xcd63d687
  414b77:	test   al,0xf7
  414b79:	inc    ecx
  414b7a:	test   eax,0x8eff7bf0
  414b7f:	dec    edi
  414b80:	lods   al,BYTE PTR ds:[esi]
  414b81:	cmp    BYTE PTR [edx],bh
  414b83:	mov    esi,0xe874e1ce
  414b88:	out    0x64,al
  414b8a:	mov    ch,0x24
  414b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b8d:	js     0x414bce
  414b8f:	xchg   BYTE PTR [ebx+0x2],dh
  414b92:	cld    
  414b93:	imul   BYTE PTR [edx+0x106954bb]
  414b99:	icebp  
  414b9a:	mov    esi,0x9c20b1cd
  414b9f:	(bad)  
  414ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba2:	or     dl,BYTE PTR [esi-0x63fb7d55]
  414ba8:	inc    eax
  414ba9:	push   0xb61103dc
  414bae:	cld    
  414baf:	loopne 0x414b77
  414bb1:	ror    DWORD PTR [edi],0x27
  414bb4:	jecxz  0x414bdf
  414bb6:	aam    0xc6
  414bb8:	inc    esi
  414bb9:	inc    ebx
  414bba:	call   0x88ce:0xb091dbcf
  414bc1:	cmp    DWORD PTR [esi+0x7c10a3af],ecx
  414bc7:	mov    al,ds:0xdcb2fb27
  414bcc:	shl    BYTE PTR [esi],1
  414bce:	in     eax,dx
  414bcf:	test   eax,0x8a0467b4
  414bd4:	cmp    bl,dl
  414bd6:	out    0x8c,al
  414bd8:	cmp    DWORD PTR [eax],eax
  414bda:	mov    al,ds:0x121e812b
  414bdf:	and    DWORD PTR [eax+edx*8+0x6],ebx
  414be3:	das    
  414be4:	fucomi st,st(0)
  414be6:	add    eax,edi
  414be8:	mov    ds:0x81963a0b,eax
  414bed:	xchg   esi,edi
  414bef:	xchg   edx,eax
  414bf0:	cmp    BYTE PTR [ebx+0x3e],dh
  414bf3:	and    eax,0xb8f2ed3e
  414bf9:	mov    al,0x65
  414bfb:	enter  0x4da5,0x9d
  414bff:	mov    bl,0x8f
  414c01:	jns    0x414c1e
  414c03:	jo     0x414c30
  414c05:	push   esp
  414c06:	dec    ebp
  414c07:	dec    edi
  414c08:	mov    ah,0x90
  414c0a:	push   ds
  414c0b:	sub    al,0xcb
  414c0d:	xchg   edi,eax
  414c0e:	(bad)  
  414c0f:	int3   
  414c10:	imul   esi,DWORD PTR [esi],0x74135538
  414c16:	mov    al,ds:0xa50a5
  414c1b:	test   al,0xb8
  414c1d:	or     BYTE PTR [edx],ah
  414c1f:	leave  
  414c20:	inc    esp
  414c21:	cmp    DWORD PTR [ecx-0x4f92bbb7],eax
  414c27:	inc    edx
  414c28:	mov    eax,ds:0xe871dc17
  414c2d:	mov    ds:0x3a6e6b17,al
  414c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c33:	into   
  414c34:	(bad)  
  414c35:	mul    eax
  414c37:	test   BYTE PTR [esi+0x78],0xe1
  414c3b:	pop    ebx
  414c3c:	int    0x35
  414c3e:	dec    ecx
  414c3f:	jne    0x414cc0
  414c41:	fdivr  QWORD PTR [eax+edx*8]
  414c44:	xor    ah,al
  414c46:	(bad)
  414c4a:	sbb    DWORD PTR [ebx-0x1548a228],ebx
  414c50:	pop    esi
  414c51:	xchg   ebx,eax
  414c52:	xor    eax,0xbd36378b
  414c57:	mov    es,ebp
  414c59:	lea    eax,[eax+ecx*1-0x1090cb1d]
  414c60:	jno    0x414c21
  414c62:	aad    0xdf
  414c64:	ficomp DWORD PTR [esi]
  414c66:	data16 (bad) 
  414c68:	sub    eax,0x569c5b31
  414c6d:	out    0x1,al
  414c6f:	or     BYTE PTR [esi+ecx*4-0x5b84610],al
  414c76:	xor    DWORD PTR [ebp+0x4672bf0d],0xf1f1a8df
  414c80:	sbb    eax,0x6902c58d
  414c85:	sahf   
  414c86:	frstor [edx-0x621bc828]
  414c8c:	fistp  WORD PTR [edi]
  414c8e:	bound  ecx,QWORD PTR [edi]
  414c90:	push   esp
  414c91:	pop    esi
  414c92:	shl    DWORD PTR [edi-0x8],1
  414c95:	popf   
  414c96:	mov    bh,0xfd
  414c98:	xor    BYTE PTR [edx+0x2ae2adba],cl
  414c9e:	mov    ch,0x97
  414ca0:	dec    edx
  414ca1:	cli    
  414ca2:	rcr    al,1
  414ca4:	loope  0x414c57
  414ca6:	cmp    eax,0x5e81a852
  414cab:	in     al,dx
  414cac:	jle    0x414c4a
  414cae:	std    
  414caf:	ss cmp eax,0xdb12acce
  414cb5:	push   esp
  414cb6:	mov    al,0xff
  414cb8:	(bad)  
  414cb9:	out    dx,al
  414cba:	fwait
  414cbb:	(bad)  
  414cbc:	mov    edx,0xf6e043d2
  414cc1:	adc    DWORD PTR [esi+0x2ca8174a],esi
  414cc7:	icebp  
  414cc8:	dec    ecx
  414cc9:	mov    bl,0x48
  414ccb:	ror    BYTE PTR [ebx-0x17],1
  414cce:	not    BYTE PTR [eax]
  414cd0:	nop
  414cd1:	(bad)  
  414cd3:	xchg   ebp,eax
  414cd4:	sbb    ebx,eax
  414cd6:	loop   0x414cb7
  414cd8:	jmp    0x414d50
  414cda:	adc    al,BYTE PTR [esi+esi*2]
  414cdd:	pop    ebp
  414cde:	ja     0x414c6b
  414ce0:	mov    eax,0x2555d4b3
  414ce5:	out    dx,al
  414ce6:	test   al,0xe9
  414ce8:	mov    edi,0x6dfdbaba
  414ced:	mov    edx,0x423428e1
  414cf2:	mov    eax,ds:0xf4564795
  414cf7:	dec    edi
  414cf8:	nop
  414cf9:	test   DWORD PTR [ebx-0x66],esi
  414cfc:	jge    0x414d1f
  414cfe:	(bad)  
  414cff:	jg     0x414c94
  414d01:	ret    
  414d02:	pop    ecx
  414d03:	(bad)  
  414d04:	push   eax
  414d05:	push   esi
  414d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d07:	(bad)  
  414d08:	sub    ch,BYTE PTR [ecx-0x1986779c]
  414d0e:	mov    ah,0xb2
  414d10:	sbb    BYTE PTR [esi-0x9],bh
  414d13:	out    0xc9,eax
  414d15:	push   esp
  414d16:	in     al,0xa2
  414d18:	xchg   ebx,eax
  414d19:	in     al,dx
  414d1a:	push   cs
  414d1b:	shl    DWORD PTR [edx-0x19d8b258],0x0
  414d22:	bound  edi,QWORD PTR [edi]
  414d24:	pop    DWORD PTR [esi+0xd]
  414d27:	loopne 0x414d10
  414d29:	and    edx,eax
  414d2b:	add    esp,edi
  414d2d:	xchg   esp,eax
  414d2e:	rcr    BYTE PTR [esi],0xe8
  414d31:	or     BYTE PTR [edx+0x74],dh
  414d34:	daa    
  414d35:	pop    esp
  414d36:	dec    ecx
  414d37:	mov    bh,0x75
  414d39:	cmp    edx,DWORD PTR [ecx]
  414d3b:	pop    esi
  414d3c:	pop    esp
  414d3d:	inc    ebp
  414d3e:	cdq    
  414d3f:	dec    edx
  414d40:	pop    edx
  414d41:	lods   al,BYTE PTR ds:[esi]
  414d42:	fcomi  st,st(6)
  414d44:	push   0xffffffa0
  414d46:	lock sub ebx,DWORD PTR [esi+edi*1]
  414d4a:	int3   
  414d4b:	hlt    
  414d4c:	adc    BYTE PTR [edi],ch
  414d4e:	into   
  414d4f:	pushf  
  414d50:	mov    bh,dl
  414d52:	jbe    0x414d2c
  414d54:	mov    bh,0x39
  414d56:	ins    BYTE PTR es:[edi],dx
  414d57:	lahf   
  414d58:	or     ch,cl
  414d5a:	push   esp
  414d5b:	aam    0x9
  414d5d:	sti    
  414d5e:	jbe    0x414d72
  414d60:	loopne 0x414da5
  414d62:	push   ds
  414d63:	xor    eax,0xf12a3579
  414d68:	sub    eax,0xcadd7999
  414d6d:	test   BYTE PTR [edi],ah
  414d6f:	mov    bl,0x49
  414d71:	adc    bl,BYTE PTR ds:0x659b403f
  414d77:	mov    WORD PTR [edx-0x32],fs
  414d7a:	ud0    esi,edi
  414d7d:	or     al,bl
  414d7f:	jne    0x414d3f
  414d81:	rol    bl,0xae
  414d84:	adc    eax,0xe9d9a8a4
  414d89:	mov    dl,0xd4
  414d8b:	div    eax
  414d8d:	jne    0x414d3b
  414d8f:	lods   al,BYTE PTR ds:[esi]
  414d90:	add    BYTE PTR ds:0xcf3f8659,al
  414d96:	pop    ebx
  414d97:	repnz add dh,0x9b
  414d9b:	ja     0x414df2
  414d9d:	adc    dl,0xf7
  414da0:	inc    esi
  414da1:	xlat   BYTE PTR ds:[ebx]
  414da2:	pop    ebp
  414da3:	aam    0xaf
  414da5:	int3   
  414da6:	(bad)  
  414da7:	push   eax
  414da8:	pusha  
  414da9:	sbb    BYTE PTR [edx-0x193333a7],dh
  414daf:	push   ds
  414db0:	mov    al,0x33
  414db2:	and    al,BYTE PTR [eax+0x4398dc2d]
  414db8:	hlt    
  414db9:	mov    ds:0xf16e461b,al
  414dbe:	inc    eax
  414dbf:	div    BYTE PTR ss:0xc9677f3a
  414dc6:	sbb    ebp,esi
  414dc8:	pop    edi
  414dc9:	dec    edi
  414dca:	in     ax,dx
  414dcc:	ret    
  414dcd:	ret    0xa71d
  414dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd1:	mov    al,ds:0x6dc13398
  414dd6:	loop   0x414e57
  414dd8:	imul   ecx,edx,0x3cd6fdb7
  414dde:	adc    ch,BYTE PTR ds:0x18e566c4
  414de4:	cmp    ecx,DWORD PTR [edx+ebp*8+0x2e]
  414de8:	out    0x85,al
  414dea:	std    
  414deb:	sbb    edi,DWORD PTR [ecx]
  414ded:	pop    ebx
  414dee:	cdq    
  414def:	push   ss
  414df0:	xchg   esp,eax
  414df1:	outs   dx,BYTE PTR ds:[esi]
  414df2:	fnstenv [esi]
  414df4:	pop    es
  414df5:	xchg   edi,eax
  414df6:	inc    eax
  414df7:	jne    0x414e51
  414df9:	cwde   
  414dfa:	xchg   esp,eax
  414dfb:	dec    ebx
  414dfc:	sbb    al,0xed
  414dfe:	push   esi
  414dff:	push   cs
  414e00:	lahf   
  414e01:	sub    al,0xb
  414e03:	fsubrp st(1),st
  414e05:	pusha  
  414e06:	mov    dh,bh
  414e08:	test   eax,0xe8bbb945
  414e0d:	or     eax,0x80f2dfd4
  414e12:	ss out 0x83,al
  414e15:	sbb    eax,0xac4770cf
  414e1a:	dec    edi
  414e1b:	add    eax,0x65faae6
  414e20:	jge    0x414e73
  414e22:	fmul   st(7),st
  414e24:	outs   dx,BYTE PTR fs:[esi]
  414e26:	out    dx,al
  414e27:	test   eax,0x2c0a1308
  414e2c:	adc    bp,WORD PTR [esi-0x8ef0775]
  414e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e34:	fcmove st,st(6)
  414e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e37:	fimul  DWORD PTR [ebx+0x54]
  414e3a:	xor    BYTE PTR [ecx+0xf45b277],ah
  414e40:	mov    eax,0x6861a27a
  414e45:	inc    eax
  414e46:	jne    0x414ec5
  414e48:	fadd   st,st(5)
  414e4a:	mul    BYTE PTR [edx]
  414e4c:	mov    ecx,0x8884fcc0
  414e51:	test   BYTE PTR [ebx+0x51],dh
  414e54:	and    al,dl
  414e56:	mov    bl,0x49
  414e58:	pop    ebp
  414e59:	add    eax,0x638e2ef7
  414e5e:	push   edx
  414e5f:	lea    ebx,[edx-0x38]
  414e62:	jg     0x414e2c
  414e64:	ins    DWORD PTR es:[edi],dx
  414e65:	dec    edi
  414e66:	cmp    eax,0xf4e38345
  414e6b:	mov    dl,0x5c
  414e6d:	push   edx
  414e6e:	sub    DWORD PTR [ecx-0x10],0x773d7f6b
  414e75:	mov    DWORD PTR [ebx],edi
  414e77:	jb     0x414eda
  414e79:	(bad)  
  414e7a:	sbb    ebp,ebp
  414e7c:	dec    edx
  414e7d:	daa    
  414e7e:	rcr    ch,0x11
  414e81:	add    esp,DWORD PTR [esi-0x6e]
  414e84:	jbe    0x414ee4
  414e86:	rcl    dl,cl
  414e88:	jae    0x414e3f
  414e8a:	stos   DWORD PTR es:[edi],eax
  414e8b:	mov    dl,0x94
  414e8d:	push   ds
  414e8e:	(bad)  
  414e90:	outs   dx,DWORD PTR ds:[esi]
  414e91:	sub    al,0x34
  414e93:	jmp    0xe0dbd4fa
  414e98:	jge    0x414e7f
  414e9a:	xchg   esi,eax
  414e9b:	adc    ecx,0x78
  414e9e:	cld    
  414e9f:	pusha  
  414ea0:	adc    edx,DWORD PTR [esi+0x33]
  414ea3:	test   BYTE PTR [ecx-0x2f69d2bd],dl
  414ea9:	or     BYTE PTR [ecx],dh
  414eab:	pop    eax
  414eac:	fld    QWORD PTR [edx]
  414eae:	pop    ds
  414eaf:	xchg   ebp,eax
  414eb0:	stc    
  414eb1:	push   cs
  414eb2:	inc    edi
  414eb3:	add    eax,0x96149f8f
  414eb8:	push   esp
  414eb9:	imul   eax,DWORD PTR [ecx+0x67],0xffffffaa
  414ebd:	jae    0x414e50
  414ebf:	sbb    dl,cl
  414ec1:	gs pop esi
  414ec3:	dec    ecx
  414ec4:	adc    eax,0xd9630825
  414ec9:	frstor [edx]
  414ecb:	mov    ecx,DWORD PTR [ecx]
  414ecd:	call   0x47921216
  414ed2:	adc    DWORD PTR [ebx-0x1c],edi
  414ed5:	imul   edi,DWORD PTR [ebx-0x3fd22469],0x2a3e4bcf
  414edf:	jo     0x414ef2
  414ee1:	sti    
  414ee2:	mov    ds:0x352380f1,al
  414ee7:	out    0xbf,eax
  414ee9:	pop    ebp
  414eea:	sbb    ecx,eax
  414eec:	(bad)  
  414eed:	and    ch,BYTE PTR [ebx]
  414eef:	rcl    DWORD PTR [eax-0x5e],0x40
  414ef3:	data16 lahf 
  414ef5:	(bad)  
  414ef6:	lods   eax,DWORD PTR ds:[esi]
  414ef7:	dec    edx
  414ef8:	mov    al,ds:0x90fcb083
  414efd:	(bad)  
  414eff:	jb     0x414f2a
  414f01:	dec    esi
  414f02:	inc    esp
  414f03:	fcom   DWORD PTR [ebx+0x9]
  414f06:	sub    al,BYTE PTR [ebp+edi*8+0x47]
  414f0a:	in     al,0x50
  414f0c:	js     0x414f79
  414f0e:	(bad)  
  414f0f:	neg    DWORD PTR [esi]
  414f11:	push   esi
  414f12:	shl    al,0x94
  414f15:	stos   DWORD PTR es:[edi],eax
  414f16:	scas   eax,DWORD PTR es:[edi]
  414f17:	dec    edi
  414f18:	pop    eax
  414f19:	sub    eax,0xdb2d8caf
  414f1e:	mov    esi,0x849aa74f
  414f23:	sbb    ecx,DWORD PTR [esi]
  414f25:	repnz push es
  414f27:	or     al,BYTE PTR [edx-0x2fc75b80]
  414f2d:	sub    ecx,ecx
  414f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f30:	xchg   esp,eax
  414f31:	xor    BYTE PTR [ecx],0xbd
  414f34:	(bad)  
  414f35:	fidivr DWORD PTR [esp+esi*1+0x22664464]
  414f3c:	mov    ah,0xab
  414f3e:	lea    esi,[eax-0x1d]
  414f41:	push   ecx
  414f42:	xchg   ebx,eax
  414f43:	inc    esi
  414f44:	mov    esp,0xeb81e684
  414f49:	mov    ch,0x9b
  414f4b:	imul   ebx,DWORD PTR [eax+0x266bab1b],0xe4948a84
  414f55:	ret    
  414f56:	popa   
  414f57:	and    esi,esp
  414f59:	lods   al,BYTE PTR ds:[esi]
  414f5a:	dec    ebp
  414f5b:	cld    
  414f5c:	mov    ecx,DWORD PTR [esi+0x184adb80]
  414f62:	(bad)  
  414f63:	mov    bl,0x84
  414f65:	leave  
  414f66:	push   ss
  414f67:	push   0xdf8683c0
  414f6c:	enter  0x7b7f,0x6a
  414f70:	cmp    al,0xf0
  414f72:	xor    bh,bl
  414f74:	mov    edx,DWORD PTR [eax]
  414f76:	lea    esi,[esi]
  414f78:	aaa    
  414f79:	shr    BYTE PTR [eax],0x9d
  414f7c:	popa   
  414f7d:	(bad)  
  414f7e:	xchg   ebp,eax
  414f7f:	push   es
  414f80:	addr16 in eax,dx
  414f82:	jp     0x414fe5
  414f84:	leave  
  414f85:	(bad)  
  414f86:	fnsave [ebx+0x31]
  414f89:	je     0x414fd1
  414f8b:	inc    eax
  414f8c:	push   cs
  414f8d:	leave  
  414f8e:	arpl   WORD PTR [ecx],sp
  414f90:	(bad)  
  414f91:	int    0x60
  414f93:	mov    BYTE PTR [ebx],dl
  414f95:	xlat   BYTE PTR ds:[ebx]
  414f96:	out    dx,eax
  414f97:	mul    esi
  414f99:	stos   BYTE PTR es:[edi],al
  414f9a:	into   
  414f9b:	test   eax,0xf11e37b6
  414fa0:	pop    eax
  414fa1:	mov    ebp,edi
  414fa3:	push   esp
  414fa4:	dec    ebp
  414fa5:	(bad)  
  414fa6:	cld    
  414fa7:	cmovs  eax,ecx
  414faa:	imul   ebx,esp,0x10cdce10
  414fb0:	dec    ecx
  414fb1:	add    al,0x11
  414fb3:	adc    BYTE PTR [ecx-0x3dbe1414],dl
  414fb9:	add    eax,0x63746177
  414fbe:	arpl   bx,ax
  414fc0:	xor    bl,0x46
  414fc3:	mov    ebx,0xbc013fd8
  414fc8:	xor    eax,0xce4360fc
  414fcd:	sub    ch,BYTE PTR [edi-0x70]
  414fd0:	add    DWORD PTR [ebx-0x24a832af],0xaba09b89
  414fda:	jmp    0x82f3:0xc0c9dfc2
  414fe1:	ja     0x41502f
  414fe3:	(bad)  
  414fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe6:	mov    bh,0x2d
  414fe8:	ret    0x44aa
  414feb:	ja     0x414ffd
  414fed:	mov    WORD PTR [edi-0x272be051],fs
  414ff3:	xor    edi,eax
  414ff5:	mov    al,ds:0x221a3051
  414ffa:	sahf   
  414ffb:	loope  0x415040
  414ffd:	jne    0x415029
  414fff:	dec    eax
  415000:	enter  0xb1fa,0xa2
  415004:	jo     0x414fc3
  415006:	mov    dl,0xbc
  415008:	fisttp QWORD PTR [edi]
  41500a:	push   ebx
  41500b:	inc    esp
  41500c:	xor    BYTE PTR [edi],dl
  41500e:	cmp    eax,0x1e7d0915
  415013:	and    edi,DWORD PTR [edi]
  415015:	scas   al,BYTE PTR es:[edi]
  415016:	dec    esi
  415017:	pop    es
  415018:	xor    al,0xdf
  41501a:	jno    0x41503e
  41501c:	xchg   esi,eax
  41501d:	inc    edi
  41501e:	cmp    al,0x5a
  415020:	iret   
  415021:	mov    ch,0x27
  415023:	xchg   esi,eax
  415024:	mov    BYTE PTR [esi*1+0x6a0bc44c],bl
  41502b:	outs   dx,BYTE PTR ds:[esi]
  41502c:	or     al,0x2
  41502e:	mov    eax,0xc983c4cd
  415033:	push   ecx
  415034:	dec    edi
  415035:	aam    0x8a
  415037:	lods   al,BYTE PTR ds:[esi]
  415038:	fcmovnb st,st(1)
  41503a:	xchg   ebp,eax
  41503b:	push   0xfffffff3
  41503d:	(bad)
  415041:	or     bl,BYTE PTR [ebp+edx*4-0x699a338]
  415048:	or     esi,DWORD PTR [ecx+0x3acf673d]
  41504e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41504f:	leave  
  415050:	cdq    
  415051:	dec    ebp
  415052:	(bad)  
  415053:	jo     0x41506e
  415055:	in     eax,dx
  415056:	aad    0xf2
  415058:	cmp    al,0x8b
  41505a:	clc    
  41505b:	imul   ebp,eax,0x37
  41505e:	imul   esp,DWORD PTR [eax],0xd90b5917
  415064:	mov    eax,0x5518c509
  415069:	retf   
  41506a:	jge    0x4150c4
  41506c:	leave  
  41506d:	xchg   esp,eax
  41506e:	mov    esp,0x77343124
  415073:	test   BYTE PTR [ebx],cl
  415075:	mov    ebx,0xc8d9c6f1
  41507a:	mov    bh,0x46
  41507c:	aam    0x1a
  41507e:	jge    0x4150ee
  415080:	pop    es
  415081:	jg     0x4150fe
  415083:	stc    
  415084:	or     BYTE PTR [eax+0xdde685b],dh
  41508a:	dec    eax
  41508b:	and    ah,BYTE PTR ds:0xf33f6ef8
  415091:	imul   edi,DWORD PTR [eax],0xa8d85b1
  415097:	out    dx,al
  415098:	jg     0x415055
  41509a:	out    0x94,eax
  41509c:	pop    es
  41509d:	popf   
  41509e:	jl     0x415111
  4150a0:	ss inc edx
  4150a2:	or     edi,DWORD PTR [esi-0xc03ca72]
  4150a8:	xchg   BYTE PTR [edi+0x54ed4ad2],dh
  4150ae:	xchg   ebx,eax
  4150af:	(bad)  
  4150b0:	and    ebp,esp
  4150b2:	gs popa 
  4150b4:	repnz out 0xba,al
  4150b7:	push   edi
  4150b8:	jmp    0x99c9:0x1cec43d8
  4150bf:	mov    ss,WORD PTR [ebx+0x7a29a43b]
  4150c5:	pop    ss
  4150c6:	test   eax,0xffe6cced
  4150cb:	retf   
  4150cc:	aad    0x78
  4150ce:	add    eax,ecx
  4150d0:	push   ebx
  4150d1:	mov    dl,0xa4
  4150d3:	or     DWORD PTR [ecx+0x14ce120b],0xffffffa2
  4150da:	pusha  
  4150db:	jne    0x415073
  4150dd:	xor    edx,DWORD PTR [ebp+0x3f]
  4150e0:	or     DWORD PTR [edx-0x58513c38],ebp
  4150e6:	lods   al,BYTE PTR ds:[esi]
  4150e7:	test   DWORD PTR [ebp+0x1b],eax
  4150ea:	push   ds
  4150eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ec:	(bad)  
  4150ed:	push   ss
  4150ee:	out    0x9c,eax
  4150f0:	jg     0x4150b5
  4150f2:	sahf   
  4150f3:	loope  0x415078
  4150f5:	out    0xf2,al
  4150f7:	xor    ebx,DWORD PTR [esi+0x6e]
  4150fa:	pop    edi
  4150fb:	mov    ecx,0xc735264f
  415100:	and    BYTE PTR [esi+0xb],0xe4
  415104:	fst    DWORD PTR [edi]
  415106:	bswap  edx
  415108:	push   edx
  415109:	mov    eax,0x48ea303e
  41510e:	das    
  41510f:	daa    
  415110:	jle    0x41516d
  415112:	arpl   WORD PTR [edi],dx
  415114:	dec    esi
  415115:	and    BYTE PTR [ecx+0x60],ah
  415118:	add    BYTE PTR [edx+0x6a33ee28],0xc5
  41511f:	enter  0xa12f,0xe1
  415123:	sbb    eax,0x1d337a3
  415128:	(bad)  
  41512a:	repnz inc edx
  41512c:	test   eax,0xb49b8b23
  415131:	call   0xc20a:0xd595e0e6
  415138:	mov    ah,bh
  41513a:	jbe    0x415111
  41513c:	sar    DWORD PTR [ecx*2-0x2905845e],0x8b
  415144:	mov    gs,ebp
  415146:	cli    
  415147:	pop    ebx
  415148:	xor    al,0x49
  41514a:	lods   al,BYTE PTR ds:[esi]
  41514b:	lds    esp,FWORD PTR [esi-0xf]
  41514e:	add    esp,DWORD PTR [edi+0x5d]
  415151:	loop   0x41513a
  415153:	lea    edi,[edx+0x7a]
  415156:	stc    
  415157:	test   BYTE PTR [ebx+0x3c],0x7d
  41515b:	sar    DWORD PTR [esi+0x72016fb4],cl
  415161:	popa   
  415162:	rcl    BYTE PTR [ecx],1
  415164:	sbb    eax,0x304ae331
  415169:	ret    0xbf58
  41516c:	out    0x6c,al
  41516e:	add    DWORD PTR [edx-0x2f93d5c4],0xc61ad389
  415178:	mov    WORD PTR [edi+ebp*2+0x6a],cs
  41517c:	(bad)  
  41517d:	test   eax,0x6a8fee2f
  415182:	sub    eax,0x44f2a028
  415187:	hlt    
  415188:	loope  0x415208
  41518a:	pop    esp
  41518b:	(bad)  
  41518c:	aad    0xd6
  41518e:	pop    ebp
  41518f:	push   cs
  415190:	sub    BYTE PTR ds:0x7d13cce3,bh
  415196:	fidivr DWORD PTR [ebp-0x472d1fb8]
  41519c:	and    cl,BYTE PTR [ebx+ecx*1]
  41519f:	jle    0x4151de
  4151a1:	mov    esp,0xf572b777
  4151a6:	int3   
  4151a7:	sbb    dl,bh
  4151a9:	mov    edx,0xae640ede
  4151ae:	sub    edi,esp
  4151b0:	ds or  dl,cl
  4151b3:	pop    ss
  4151b4:	retf   0x1dda
  4151b7:	push   ds
  4151b8:	btr    DWORD PTR [edi],ebx
  4151bb:	and    dl,BYTE PTR [ebx+0x2ec86216]
  4151c1:	lock fsubr DWORD PTR ds:0x8be16e69
  4151c8:	retf   
  4151c9:	leave  
  4151ca:	scas   eax,DWORD PTR es:[edi]
  4151cb:	je     0x4151d4
  4151cd:	int    0xe
  4151cf:	sub    BYTE PTR ds:0xfd06ac79,0xaf
  4151d6:	retf   
  4151d7:	bound  ebp,QWORD PTR gs:[esi+0x504534dd]
  4151de:	dec    eax
  4151df:	xchg   BYTE PTR [ebp-0x26],dl
  4151e2:	std    
  4151e3:	lds    edi,FWORD PTR [ebx]
  4151e5:	repnz shr BYTE PTR [eax+0x564fa198],1
  4151ec:	mov    esp,0x69b0bb0e
  4151f1:	pop    edx
  4151f2:	push   cs
  4151f3:	ret    0x2ff2
  4151f6:	test   eax,0x53430fc3
  4151fb:	inc    esp
  4151fc:	xor    DWORD PTR [esi-0x32],ebx
  4151ff:	adc    esi,DWORD PTR ds:0x98261474
  415205:	mov    al,ds:0x1fd50167
  41520a:	shl    DWORD PTR [ebx+0x43],cl
  41520d:	ret    0xd45d
  415210:	cdq    
  415211:	add    eax,DWORD PTR [ebx]
  415213:	repnz cwde 
  415215:	push   0x8b7e0d5b
  41521a:	push   cs
  41521b:	cli    
  41521c:	mov    edi,0x12ed1860
  415221:	loop   0x415225
  415223:	repnz int3 
  415225:	and    ch,BYTE PTR [ebp-0x34]
  415228:	push   edi
  415229:	pop    ecx
  41522a:	xchg   edi,eax
  41522b:	mov    es,WORD PTR [ecx-0x1450d4b7]
  415231:	sar    BYTE PTR [ebx],cl
  415233:	inc    edx
  415234:	out    dx,eax
  415235:	pop    ss
  415236:	fld    TBYTE PTR [ebp-0x25a088f6]
  41523c:	(bad)  
  41523d:	aaa    
  41523e:	pop    ecx
  41523f:	cmp    al,0x68
  415241:	jmp    0x6e5cbb0c
  415246:	cmp    esi,edi
  415248:	stos   BYTE PTR es:[edi],al
  415249:	jg     0x41529e
  41524b:	popa   
  41524c:	mov    ecx,0xf970f2af
  415251:	and    dl,bl
  415253:	and    BYTE PTR [edi+0x399e85e6],dl
  415259:	dec    eax
  41525a:	clc    
  41525b:	mov    eax,0x30972490
  415260:	int    0xf2
  415262:	retf   0xd1f0
  415265:	pop    ebx
  415266:	inc    ecx
  415267:	adc    eax,0xeb781b60
  41526c:	cmp    al,0x4a
  41526e:	shl    DWORD PTR [ebx+0x44],cl
  415271:	mov    dh,0xdd
  415273:	inc    ebp
  415274:	je     0x415268
  415276:	push   ebx
  415277:	mov    edi,0x6f451dd6
  41527c:	mov    al,0xfd
  41527e:	xlat   BYTE PTR ds:[ebx]
  41527f:	in     al,0x8b
  415281:	mov    eax,0x6c5d673
  415286:	and    al,0xdf
  415288:	(bad)  [edi]
  41528a:	outs   dx,BYTE PTR ds:[esi]
  41528b:	clc    
  41528c:	inc    BYTE PTR [ebx+eax*8-0x60]
  415290:	push   DWORD PTR [edx-0x7d]
  415293:	ret    0xa24d
  415296:	mov    ebp,0x62ef3303
  41529b:	xchg   ecx,eax
  41529c:	xchg   ebx,eax
  41529d:	sub    eax,edx
  41529f:	jecxz  0x4152d7
  4152a1:	xlat   BYTE PTR ds:[ebx]
  4152a2:	pop    ds
  4152a3:	pop    es
  4152a4:	fisub  WORD PTR [ecx-0x10fabf33]
  4152aa:	stos   DWORD PTR es:[edi],eax
  4152ab:	pop    ss
  4152ac:	ds push ebp
  4152ae:	pop    ebx
  4152af:	mov    eax,0x8d79eee1
  4152b4:	jl     0x415284
  4152b6:	sub    al,0x13
  4152b8:	xor    al,0x55
  4152ba:	enter  0xb597,0xe4
  4152be:	mov    ?,WORD PTR [esi]
  4152c0:	inc    edx
  4152c1:	(bad)  
  4152c3:	push   es
  4152c4:	cmc    
  4152c5:	pop    esp
  4152c6:	xor    dh,al
  4152c8:	mov    esi,0xf65cb479
  4152cd:	cmp    DWORD PTR [ebx-0x24],0xffffffda
  4152d1:	mov    dh,0x59
  4152d3:	addr16 add al,0xc2
  4152d6:	inc    esp
  4152d7:	xlat   BYTE PTR ds:[ebx]
  4152d8:	in     al,dx
  4152d9:	cmp    DWORD PTR [edx+0x6d],ebx
  4152dc:	push   esi
  4152dd:	jne    0x415341
  4152df:	xchg   edx,eax
  4152e0:	dec    esp
  4152e1:	and    bl,BYTE PTR [eax-0x1e]
  4152e4:	mov    DWORD PTR [esi+0x23904da4],ebp
  4152ea:	ret    
  4152eb:	femms  
  4152ed:	or     esi,ebx
  4152ef:	ins    DWORD PTR es:[edi],dx
  4152f0:	addr16 out dx,eax
  4152f2:	in     eax,0xf2
  4152f4:	(bad)  
  4152f5:	mov    dl,0xcf
  4152f7:	mov    ah,bh
  4152f9:	pusha  
  4152fa:	sub    DWORD PTR [ebx+ecx*8],eax
  4152fd:	push   ecx
  4152fe:	(bad)  [esi+0x75]
  415301:	loopne 0x4152fe
  415303:	adc    eax,0x607e13c
  415308:	cmp    eax,0x1c4b5df6
  41530d:	or     BYTE PTR [esi-0xd],0x6e
  415311:	mov    esi,0x452df3e5
  415316:	(bad)  
  415317:	ret    0x82e1
  41531a:	popa   
  41531b:	dec    eax
  41531c:	ds ret 0x506
  415320:	out    0xbe,al
  415322:	jnp    0x415354
  415324:	imul   esp,DWORD PTR [eax+0x67e1662],0x3593473b
  41532e:	mul    DWORD PTR [ebx+0xfcc6ed9]
  415334:	inc    esp
  415335:	icebp  
  415336:	cmp    ah,ah
  415338:	std    
  415339:	rol    DWORD PTR ss:[eax-0x13],0x13
  41533e:	push   ss
  41533f:	int3   
  415340:	sub    BYTE PTR [edi+eiz*1-0x7e7e0d6b],cl
  415347:	jne    0x41533a
  415349:	mov    bl,BYTE PTR ds:0xee973482
  41534f:	adc    DWORD PTR [esp+edx*4],0xfffffff5
  415353:	retf   
  415354:	xor    BYTE PTR [edi-0x61],dh
  415357:	jp     0x41539f
  415359:	mov    cs,ebx
  41535b:	cmp    BYTE PTR [edx],dh
  41535d:	sar    dl,1
  41535f:	mov    DWORD PTR [ebx+0x16],edx
  415362:	xchg   BYTE PTR [edi+ecx*8-0x408810c8],dl
  415369:	ja     0x41532e
  41536b:	dec    ecx
  41536c:	add    dl,BYTE PTR [ecx]
  41536e:	pop    ecx
  41536f:	and    ah,0x7e
  415372:	jne    0x415396
  415374:	add    BYTE PTR [eax-0x24b7bdfd],dh
  41537a:	adc    DWORD PTR [esi-0x6f8ce3ba],edi
  415380:	xor    BYTE PTR [edi],ah
  415382:	mov    ah,BYTE PTR [eax+edi*1+0x1c962e19]
  415389:	dec    ecx
  41538a:	xchg   esi,eax
  41538b:	lods   eax,DWORD PTR ds:[esi]
  41538c:	nop
  41538d:	mov    ss,WORD PTR [edx]
  41538f:	in     al,0xd
  415391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415392:	into   
  415393:	ins    BYTE PTR es:[edi],dx
  415394:	scas   al,BYTE PTR es:[edi]
  415395:	loop   0x415410
  415397:	retf   
  415398:	test   BYTE PTR ds:0x73c61073,0x82
  41539f:	add    dh,ch
  4153a1:	sbb    dh,BYTE PTR [eax+0x12433346]
  4153a7:	inc    eax
  4153a8:	idiv   esp
  4153aa:	sub    al,0xa5
  4153ac:	mov    ds:0x8a7c57c0,al
  4153b1:	(bad)  
  4153b2:	or     ebx,ecx
  4153b4:	mov    eax,DWORD PTR [edi-0x30]
  4153b7:	outs   dx,DWORD PTR ds:[esi]
  4153b8:	push   cs
  4153b9:	jg     0x4153a1
  4153bb:	mov    edx,0x157fc7c4
  4153c0:	xchg   esp,eax
  4153c1:	out    0xb0,al
  4153c3:	cmp    ebx,ecx
  4153c5:	test   BYTE PTR [ecx+0x47fa7fcf],bh
  4153cb:	mov    esi,0x45cccfe0
  4153d0:	pop    ebx
  4153d1:	xchg   esi,eax
  4153d2:	test   DWORD PTR [edi+ecx*1+0x7b3695e9],eax
  4153d9:	repz mov ds:0xb224ae51,al
  4153df:	mov    ds:0x64c93a93,eax
  4153e4:	or     ebp,DWORD PTR ds:0x1772668e
  4153ea:	add    DWORD PTR [esi],0x8da2c8c6
  4153f0:	inc    eax
  4153f1:	adc    DWORD PTR [edi+0x5c2076cc],ecx
  4153f7:	jb     0x4153df
  4153f9:	shl    DWORD PTR [edx],1
  4153fb:	clc    
  4153fc:	aam    0xde
  4153fe:	mov    dh,0x8e
  415400:	lods   al,BYTE PTR ds:[esi]
  415401:	adc    esp,esi
  415403:	test   BYTE PTR [ecx-0x78930900],ch
  415409:	ins    BYTE PTR es:[edi],dx
  41540a:	je     0x4153ba
  41540c:	lea    ecx,[ebp+eiz*2+0x6e]
  415410:	xlat   BYTE PTR ds:[ebx]
  415411:	sbb    DWORD PTR [edx],0x3
  415414:	push   esi
  415415:	mov    WORD PTR [eax],es
  415417:	dec    ecx
  415418:	adc    eax,esp
  41541a:	(bad)  
  41541b:	rcr    BYTE PTR [ebx-0x5c],cl
  41541e:	add    DWORD PTR [ecx],eax
  415420:	sub    BYTE PTR [ebp+0x1fc47ccb],dh
  415426:	shr    BYTE PTR [esi+0x61],cl
  415429:	aad    0xba
  41542b:	add    al,0x48
  41542d:	cmp    edx,DWORD PTR [ebp+0x5b]
  415430:	aam    0x99
  415432:	div    BYTE PTR [ebx]
  415434:	push   edx
  415435:	daa    
  415436:	(bad)  
  415437:	jmp    0x4153c0
  415439:	idiv   DWORD PTR [ebx+0x3a1111e4]
  41543f:	inc    edi
  415440:	lahf   
  415441:	pusha  
  415442:	sar    BYTE PTR [ebp+0x4c],1
  415445:	add    ebp,DWORD PTR [eax]
  415447:	lock cmp DWORD PTR [ecx-0x55],ebp
  41544b:	test   eax,0x7ff794a3
  415450:	xchg   edx,eax
  415451:	daa    
  415452:	xchg   esi,eax
  415453:	stc    
  415454:	ficom  DWORD PTR [eax]
  415456:	cmp    ecx,DWORD PTR [ebp+0x3]
  415459:	sbb    BYTE PTR [ebp+esi*4-0x7d],ch
  41545d:	or     al,0xa7
  41545f:	int    0xff
  415461:	cmc    
  415462:	leave  
  415463:	push   cs
  415464:	pushf  
  415465:	jmp    0x415481
  415467:	(bad)  
  415468:	mov    ch,0x67
  41546a:	inc    eax
  41546b:	imul   eax,DWORD PTR [ebx+0x75682b30],0x2c577e7e
  415475:	outs   dx,DWORD PTR ds:[esi]
  415476:	xchg   esp,eax
  415477:	icebp  
  415478:	adc    BYTE PTR [esi-0x65eadda9],ah
  41547e:	lods   al,BYTE PTR ds:[esi]
  41547f:	pop    bx
  415481:	adc    al,BYTE PTR [esi+edi*1-0x24bb71bb]
  415488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415489:	add    BYTE PTR [ebp-0x5f],dh
  41548c:	pop    ss
  41548d:	leave  
  41548e:	adc    DWORD PTR [ebp+0x21240bb5],esp
  415494:	mov    al,ds:0xa56024ae
  415499:	push   esi
  41549a:	fmul   QWORD PTR [edx]
  41549c:	test   BYTE PTR [ecx-0x52591697],bh
  4154a2:	dec    esp
  4154a3:	inc    ebp
  4154a4:	add    BYTE PTR [ebx-0x42],bl
  4154a7:	(bad)  
  4154a8:	add    DWORD PTR [edi],esi
  4154aa:	rcr    BYTE PTR [edx-0x77],0xb8
  4154ae:	cmp    esp,DWORD PTR [eax+0x1c31fc56]
  4154b4:	scas   eax,DWORD PTR es:[edi]
  4154b5:	sub    BYTE PTR [ebp+0xc],bh
  4154b8:	enter  0x8aef,0xa0
  4154bc:	inc    esi
  4154bd:	add    DWORD PTR [esi-0x164addf6],edx
  4154c3:	jmp    0xb5ff0d79
  4154c8:	sbb    al,BYTE PTR [eax]
  4154ca:	jle    0x41554b
  4154cc:	and    eax,0xc42855c7
  4154d1:	inc    edx
  4154d2:	arpl   WORD PTR [edi],ax
  4154d4:	and    cl,BYTE PTR [ebx-0x62]
  4154d7:	leave  
  4154d8:	mov    bh,BYTE PTR [ebp-0x4a]
  4154db:	and    al,0xc
  4154dd:	and    eax,0xfb1a1d61
  4154e2:	fiadd  DWORD PTR [edx]
  4154e4:	ret    
  4154e5:	inc    DWORD PTR [esi-0x27937aa1]
  4154eb:	pop    esp
  4154ec:	retf   0xfca8
  4154ef:	and    dh,BYTE PTR [ebx+0x40be46a2]
  4154f5:	sub    DWORD PTR [edi+0x1026e48d],0x9a516e94
  4154ff:	sub    ebx,DWORD PTR [eax+0xa]
  415502:	adc    eax,0xb39a3b0c
  415507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415508:	mov    BYTE PTR [edx-0x22],bl
  41550b:	mov    bl,BYTE PTR [edx+ebp*2]
  41550e:	frstor [ebx+edi*2+0x19]
  415512:	loop   0x415516
  415514:	sets   BYTE PTR [edi]
  415517:	inc    edx
  415518:	in     eax,0xe
  41551a:	mov    DWORD PTR [ecx-0x36],edi
  41551d:	das    
  41551e:	adc    DWORD PTR [ebp+0x6d6a5211],edi
  415524:	fidivr WORD PTR cs:[ebp-0x38]
  415528:	sti    
  415529:	(bad)  
  41552a:	fdivr  DWORD PTR [ebp-0x47]
  41552d:	jecxz  0x4154d6
  41552f:	xchg   DWORD PTR [edx],ecx
  415531:	mov    cl,0x2
  415533:	xor    al,0x57
  415535:	cmc    
  415536:	(bad)  
  415538:	data16 sbb al,0xab
  41553b:	outs   dx,DWORD PTR ds:[esi]
  41553c:	int3   
  41553d:	and    ebx,DWORD PTR [edi+0x247924c2]
  415543:	xchg   DWORD PTR [esi],ebp
  415545:	add    esi,DWORD PTR [edx+0x19]
  415548:	lea    edi,[ebp-0x21]
  41554b:	add    ch,BYTE PTR [ebx+0x5fd73e7f]
  415551:	cmp    al,0xdb
  415553:	mov    bh,0x3d
  415555:	dec    edi
  415556:	mov    cl,0x7f
  415558:	aad    0xb4
  41555a:	or     ecx,esi
  41555c:	push   sp
  41555e:	(bad)  
  415560:	add    esi,esi
  415562:	xlat   BYTE PTR ds:[ebx]
  415563:	jmp    0x62dff456
  415568:	xlat   BYTE PTR ds:[ebx]
  415569:	inc    esi
  41556a:	int    0x65
  41556c:	xchg   DWORD PTR [eax-0x71],ebx
  41556f:	call   0x87db8716
  415574:	mov    al,0x78
  415576:	jno    0x4155d2
  415578:	hlt    
  415579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557a:	gs sub al,0x15
  41557d:	mov    ?,WORD PTR [edi]
  41557f:	pop    es
  415580:	das    
  415581:	hlt    
  415582:	xor    DWORD PTR [edi],eax
  415584:	jecxz  0x4155b6
  415586:	push   ss
  415587:	bound  ebx,QWORD PTR [esi]
  415589:	add    dh,al
  41558b:	int3   
  41558c:	retf   
  41558d:	outs   dx,BYTE PTR ds:[esi]
  41558e:	pop    eax
  41558f:	(bad)
  415593:	inc    edx
  415594:	ret    
  415595:	ins    BYTE PTR es:[edi],dx
  415596:	and    BYTE PTR [eax+0x3e28b523],bl
  41559c:	pusha  
  41559d:	popa   
  41559e:	mov    ecx,0x1c4b0d10
  4155a3:	icebp  
  4155a4:	retf   0x4b17
  4155a7:	push   ecx
  4155a8:	push   esp
  4155a9:	jb     0x415562
  4155ab:	sbb    BYTE PTR [ecx-0x3757d8fa],0x54
  4155b2:	mov    ds:0x1b43e1cd,eax
  4155b7:	and    BYTE PTR [ecx+0x2dcff249],ch
  4155bd:	repz hlt 
  4155bf:	ret    
  4155c0:	ja     0x415630
  4155c2:	add    eax,0x4e2d53c6
  4155c7:	mov    bl,0x5e
  4155c9:	push   ebp
  4155ca:	pop    edi
  4155cb:	adc    al,0x5d
  4155cd:	call   0xd2a03c3c
  4155d2:	iret   
  4155d3:	pop    ebx
  4155d4:	data16 hlt 
  4155d6:	adc    BYTE PTR [eax-0x7],al
  4155d9:	dec    edi
  4155da:	ror    BYTE PTR [ecx+eiz*4],cl
  4155dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155de:	cwde   
  4155df:	popa   
  4155e0:	nop
  4155e1:	push   edi
  4155e2:	call   0xbd4c638a
  4155e7:	mov    dh,0x1e
  4155e9:	repnz pushf 
  4155eb:	not    edx
  4155ed:	inc    esp
  4155ee:	rol    BYTE PTR [edx+edi*1],0x18
  4155f2:	test   BYTE PTR [ebx],0x8e
  4155f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f6:	push   edi
  4155f7:	add    BYTE PTR [esi+0x2d8fec87],cl
  4155fd:	(bad)  
  4155fe:	loopne 0x415649
  415600:	mov    ebx,0x91c2bf9a
  415605:	jno    0x41561c
  415607:	xchg   DWORD PTR [ebp+0x64],esi
  41560a:	fisubr WORD PTR [ebx]
  41560c:	loope  0x415626
  41560e:	test   al,0xe4
  415610:	mov    ch,0xdb
  415612:	fnstenv [ecx+0xe6ec9cd]
  415618:	push   ss
  415619:	test   eax,0x4a34c8c7
  41561e:	add    dh,BYTE PTR [edx+0x4f]
  415621:	jge    0x4155c7
  415623:	clc    
  415624:	mov    edi,0x33332ba
  415629:	daa    
  41562a:	sbb    ch,cl
  41562c:	sub    eax,0x795f6cac
  415631:	loop   0x4155ff
  415633:	nop
  415634:	dec    edi
  415635:	add    BYTE PTR [eax],0x29
  415638:	and    bl,BYTE PTR [ebx]
  41563a:	fucom  st(5)
  41563c:	inc    eax
  41563d:	shr    BYTE PTR [eax],cl
  41563f:	(bad)  
  415640:	aad    0xe2
  415642:	mov    WORD PTR ds:0xfcb71540,ds
  415648:	sbb    al,0x31
  41564a:	les    esp,FWORD PTR ds:0x1c673593
  415650:	lods   al,BYTE PTR ds:[esi]
  415651:	mov    dh,0x8c
  415653:	dec    eax
  415654:	cs (bad) 
  415656:	cmp    eax,0xefac920b
  41565b:	adc    al,BYTE PTR [ecx-0x74]
  41565e:	sbb    al,0x87
  415660:	dec    esi
  415661:	jmp    0x69c8bbb5
  415666:	fcmovu st,st(0)
  415668:	dec    ecx
  415669:	dec    esp
  41566a:	jecxz  0x415603
  41566c:	pop    ebx
  41566d:	mov    ebp,0x615c3757
  415672:	pop    ebp
  415673:	arpl   WORD PTR ss:[ebp+0x439b5a42],dx
  41567a:	pop    ecx
  41567b:	mov    ds:0x63539789,eax
  415680:	ror    DWORD PTR [esp+ecx*2+0x4bacc14a],1
  415687:	ds retf 
  415689:	aad    0x60
  41568b:	push   ss
  41568c:	mov    dl,0xd4
  41568e:	pusha  
  41568f:	daa    
  415690:	in     eax,0x3
  415692:	cdq    
  415693:	jecxz  0x415676
  415695:	out    0x1c,eax
  415697:	jmp    0x97d:0xd06ddb9c
  41569e:	push   ss
  41569f:	mov    ah,0x85
  4156a1:	sub    cl,BYTE PTR [ecx+edx*1+0x56]
  4156a5:	bound  eax,QWORD PTR [ebp+0x68]
  4156a8:	xor    DWORD PTR [eax],edi
  4156aa:	lds    esp,FWORD PTR [eax]
  4156ac:	add    DWORD PTR [ecx-0x4f8f02a5],eax
  4156b2:	mov    esi,DWORD PTR [ecx+eiz*4-0xfa2842]
  4156b9:	mov    ds:0x844d318a,eax
  4156be:	cdq    
  4156bf:	add    DWORD PTR [esi],ecx
  4156c1:	mov    BYTE PTR [ebx],dh
  4156c3:	or     DWORD PTR [edx],edx
  4156c5:	mov    ebx,0xdf23977c
  4156ca:	or     eax,eax
  4156cc:	pushf  
  4156cd:	addr16 push ds
  4156cf:	push   ebp
  4156d0:	daa    
  4156d1:	jae    0x41571f
  4156d3:	call   0x92e2:0xfc847830
  4156da:	pop    esp
  4156db:	mov    bl,0x87
  4156dd:	mov    esp,0xefdfa18a
  4156e2:	mov    bh,0xd0
  4156e4:	jb     0x415736
  4156e6:	retf   0x5d9f
  4156e9:	cmp    ecx,DWORD PTR [edi+0x2f4616ff]
  4156ef:	adc    al,0x57
  4156f1:	push   edi
  4156f2:	xor    DWORD PTR [ebp+0x10],0x9d308595
  4156f9:	jmp    0x41575b
  4156fb:	pop    es
  4156fc:	add    bx,0x179d
  415701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415702:	xchg   ebx,eax
  415703:	mov    ecx,0x197f1108
  415708:	clc    
  415709:	dec    eax
  41570a:	dec    edi
  41570b:	adc    eax,0xff201700
  415710:	dec    edi
  415711:	jg     0x415776
  415713:	repnz sub eax,edi
  415716:	jmp    0x415745
  415718:	in     al,dx
  415719:	mov    DWORD PTR [ecx-0x75],ecx
  41571c:	xor    eax,0x278a051e
  415721:	fdiv   DWORD PTR [ecx-0x80]
  415724:	test   eax,0x7a499faf
  415729:	stc    
  41572a:	add    BYTE PTR [edx-0x328f5df6],ah
  415730:	dec    ebp
  415731:	rol    DWORD PTR [edi*8+0x59805c7f],1
  415738:	lods   al,BYTE PTR ds:[esi]
  415739:	push   ds
  41573a:	pop    ebx
  41573b:	or     al,0x47
  41573d:	stc    
  41573e:	fbstp  TBYTE PTR [ebx]
  415740:	test   DWORD PTR [edx+0x36a6a0f4],edi
  415746:	cmp    bh,BYTE PTR [edx+0x27]
  415749:	dec    ecx
  41574a:	jnp    0x4156d4
  41574c:	mov    ds:0x63ecc2da,eax
  415751:	ret    
  415752:	or     eax,DWORD PTR fs:[ecx]
  415755:	pusha  
  415756:	outs   dx,BYTE PTR ds:[esi]
  415757:	and    ah,ah
  415759:	lods   eax,DWORD PTR ds:[esi]
  41575a:	fiadd  WORD PTR [ebx]
  41575c:	add    cl,BYTE PTR [ecx+eiz*1-0x4faf327e]
  415763:	pop    es
  415764:	dec    esp
  415765:	(bad)  
  415766:	into   
  415767:	cmc    
  415768:	xor    DWORD PTR [ecx+0x5d],edx
  41576b:	adc    al,0x30
  41576d:	std    
  41576e:	add    ecx,DWORD PTR [esi-0x51]
  415771:	inc    ecx
  415772:	popa   
  415773:	ins    BYTE PTR es:[edi],dx
  415774:	inc    ebx
  415775:	inc    esi
  415776:	adc    bh,BYTE PTR [ebx+ebp*8]
  415779:	mov    dl,0xc5
  41577b:	adc    dh,BYTE PTR [edi]
  41577d:	sub    esi,DWORD PTR [ebp+0x28864de6]
  415783:	cs mov esi,0x49916473
  415789:	mov    bl,0x4e
  41578b:	cld    
  41578c:	popf   
  41578d:	or     eax,0x8a21feae
  415792:	add    al,0xb6
  415794:	adc    eax,0x146de9b4
  415799:	ins    BYTE PTR es:[edi],dx
  41579a:	les    eax,FWORD PTR [esi+0x70c33580]
  4157a0:	adc    DWORD PTR [esp+esi*2-0x2bbcf012],0x6ae3c4b1
  4157ab:	push   ds
  4157ac:	cmp    esp,edx
  4157ae:	repnz stos DWORD PTR es:[edi],eax
  4157b0:	mov    ds:0xde2f7b28,al
  4157b5:	cld    
  4157b6:	mov    ds:0x87c178c3,eax
  4157bb:	jb     0x4157c4
  4157bd:	and    eax,0x62701c1
  4157c2:	inc    eax
  4157c3:	rcr    DWORD PTR [eax-0x65d2722],cl
  4157c9:	xchg   ebp,eax
  4157ca:	call   0x319337e8
  4157cf:	mov    ebp,DWORD PTR [ecx-0x15]
  4157d2:	shl    ecx,1
  4157d4:	mov    dh,bl
  4157d6:	in     al,dx
  4157d7:	shl    al,0x9a
  4157da:	cmc    
  4157db:	popa   
  4157dc:	mov    al,bl
  4157de:	mul    ebp
  4157e0:	and    eax,0xaab98f1c
  4157e5:	(bad)  
  4157e6:	cmp    DWORD PTR [ebp+0x2b],edi
  4157e9:	sbb    al,0x50
  4157eb:	or     al,0x10
  4157ed:	mov    bh,0x1f
  4157ef:	jmp    0x4157ad
  4157f1:	retf   0x73c3
  4157f4:	pop    ebx
  4157f5:	test   BYTE PTR [esi+esi*4+0x20],dl
  4157f9:	adc    eax,0xaf147322
  4157fe:	dec    ecx
  4157ff:	call   0x20d:0x30500d21
  415806:	and    eax,0xf57380aa
  41580b:	jmp    0x415818
  41580d:	mov    eax,0xfeabc9f1
  415812:	xchg   edi,eax
  415813:	push   ebx
  415814:	jp     0x415868
  415816:	xchg   ebp,eax
  415817:	xchg   si,ax
  415819:	mov    BYTE PTR [esi+0x4690b05f],cl
  41581f:	xor    DWORD PTR [ecx+eiz*4-0x6e],eax
  415823:	std    
  415824:	(bad)  
  415826:	ja     0x415888
  415828:	cmp    ecx,DWORD PTR [edx+eiz*1+0x6a827bb1]
  41582f:	aad    0x32
  415831:	sub    DWORD PTR [edx],esi
  415833:	aas    
  415834:	jl     0x4157ba
  415836:	repz ret 
  415838:	(bad)
  41583b:	test   eax,0x44a782e3
  415840:	and    DWORD PTR [edi],edx
  415842:	sbb    BYTE PTR gs:[ebp-0x68b39481],0x4a
  41584a:	(bad)  
  41584b:	jp     0x415894
  41584d:	ret    
  41584e:	dec    esi
  41584f:	xchg   ebp,eax
  415850:	das    
  415851:	cli    
  415852:	cli    
  415853:	or     eax,0xd42d1f0a
  415858:	sahf   
  415859:	mov    dl,0xf4
  41585b:	or     al,BYTE PTR [ecx]
  41585d:	inc    ecx
  41585e:	mov    dl,0x88
  415860:	nop
  415861:	xor    al,0xe3
  415863:	push   edx
  415864:	stos   BYTE PTR es:[edi],al
  415865:	jmp    0x6dd8:0x50c021ad
  41586c:	mov    edx,0xdcea4478
  415871:	cmc    
  415872:	jo     0x415867
  415874:	je     0x4158a1
  415876:	push   0x67
  415878:	sbb    eax,0x6e64af74
  41587d:	sub    edi,DWORD PTR [eax-0x25]
  415880:	aas    
  415881:	push   esp
  415882:	xchg   ecx,eax
  415883:	cmp    bh,BYTE PTR [esi-0x55f75168]
  415889:	sar    ch,1
  41588b:	loopne 0x415864
  41588d:	sub    BYTE PTR [ebp+0x64],bl
  415890:	fwait
  415891:	xor    al,0x97
  415893:	pop    esi
  415894:	sbb    BYTE PTR [ecx],0xcb
  415897:	call   0x2c244fd2
  41589c:	daa    
  41589d:	mov    esp,0x49d80418
  4158a2:	jnp    0x4158dd
  4158a4:	dec    ecx
  4158a5:	or     eax,DWORD PTR [ebx-0x49742cdd]
  4158ab:	pushf  
  4158ac:	dec    edx
  4158ad:	hlt    
  4158ae:	std    
  4158af:	sbb    edi,ecx
  4158b1:	pop    edx
  4158b2:	addr16 out 0xee,eax
  4158b5:	jns    0x4158ca
  4158b7:	add    esi,DWORD PTR [edi-0x5c]
  4158ba:	fdivr  DWORD PTR [edi]
  4158bc:	and    cl,BYTE PTR [ebx]
  4158be:	fdivr  QWORD PTR [eax-0x1d]
  4158c1:	dec    ebp
  4158c2:	sub    DWORD PTR [edi],edx
  4158c4:	sub    eax,0x334a44f1
  4158c9:	jbe    0x415939
  4158cb:	or     al,0x42
  4158cd:	jo     0x415868
  4158cf:	push   edi
  4158d0:	mov    WORD PTR [esi],fs
  4158d2:	xchg   ecx,eax
  4158d3:	ins    DWORD PTR es:[edi],dx
  4158d4:	mov    edi,0x36b6d216
  4158d9:	mov    ebp,0xb223dd10
  4158de:	pop    edx
  4158df:	pop    esi
  4158e0:	enter  0xb176,0x59
  4158e4:	push   eax
  4158e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e6:	aad    0x38
  4158e8:	push   0xb6d4cc69
  4158ed:	jmp    0x1951a9ee
  4158f2:	inc    ecx
  4158f3:	jp     0x41596a
  4158f5:	mov    eax,ds:0x8f4a233a
  4158fa:	daa    
  4158fb:	xadd   cl,ch
  4158fe:	mov    bl,0x59
  415900:	lock popf 
  415902:	loope  0x4158fb
  415904:	push   ds
  415905:	adc    ebp,DWORD PTR [eax+0x67419d28]
  41590b:	add    al,0xa6
  41590d:	mov    eax,ds:0xea9c75fb
  415912:	jmp    0x4158c5
  415914:	and    DWORD PTR [esi+eiz*8-0x75a1963f],edx
  41591b:	push   esi
  41591c:	cwde   
  41591d:	ja     0x4158f4
  41591f:	into   
  415920:	arpl   WORD PTR [ecx+0x66],bx
  415923:	lods   eax,DWORD PTR ds:[esi]
  415924:	sub    al,0x8e
  415926:	jo     0x4158b8
  415928:	jbe    0x415963
  41592a:	sub    al,0xa4
  41592c:	mov    bl,0x4b
  41592e:	call   FWORD PTR [ebx-0x3]
  415931:	ror    DWORD PTR [eax-0x4b],0x18
  415935:	cmp    DWORD PTR [esi+eax*1-0x2b],esp
  415939:	arpl   ax,di
  41593b:	push   esi
  41593c:	(bad)  
  41593d:	in     eax,dx
  41593e:	ficomp DWORD PTR [edi-0x6366a03d]
  415944:	jl     0x415981
  415946:	inc    edx
  415947:	hlt    
  415948:	mov    bh,BYTE PTR [ebx-0xa5766d3]
  41594e:	pop    ss
  41594f:	jge    0x415988
  415951:	popa   
  415952:	cmc    
  415953:	xchg   edi,eax
  415954:	out    dx,al
  415955:	imul   ebp,DWORD PTR [ebx-0x65359cd0],0x646934d2
  41595f:	sbb    esi,DWORD PTR [eax+0x47466de3]
  415965:	add    DWORD PTR [edi],0xffffffe3
  415968:	fwait
  415969:	xchg   esi,esp
  41596b:	jne    0x41599b
  41596d:	or     al,al
  41596f:	mov    edx,0x2424feb2
  415974:	pop    ecx
  415975:	jmp    0x415937
  415977:	mov    al,0x7f
  415979:	in     eax,0x62
  41597b:	sbb    BYTE PTR [ebp+0x486e5751],ah
  415981:	pop    edi
  415982:	sti    
  415983:	out    dx,eax
  415984:	fld    TBYTE PTR [eax]
  415986:	repnz rol bl,1
  415989:	xlat   BYTE PTR ds:[ebx]
  41598b:	jmp    0x6056:0xda73653e
  415992:	(bad)  
  415993:	sbb    BYTE PTR [ecx],bh
  415995:	mov    bl,0x6e
  415997:	pop    es
  415998:	jle    0x4159da
  41599a:	push   ebx
  41599b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599c:	push   edi
  41599d:	cmp    cl,BYTE PTR [ecx-0x26]
  4159a0:	sub    al,dh
  4159a2:	and    BYTE PTR [eax-0x35],dh
  4159a5:	or     BYTE PTR [eax],bl
  4159a7:	and    eax,DWORD PTR [edx+0x24deb9eb]
  4159ad:	add    DWORD PTR ds:[edx+0x27],edx
  4159b1:	inc    esp
  4159b2:	sbb    BYTE PTR [ecx-0x2206bc6b],bl
  4159b8:	push   sp
  4159ba:	cs pop es
  4159bc:	or     al,0x7e
  4159be:	cdq    
  4159bf:	mov    dl,0xb7
  4159c1:	test   ecx,ebx
  4159c3:	out    0x1,al
  4159c5:	js     0x415a17
  4159c7:	test   al,0xbf
  4159c9:	xchg   BYTE PTR [edx-0x395665c3],bh
  4159cf:	cmp    dl,BYTE PTR [edx]
  4159d1:	gs cmp esi,esi
  4159d4:	aad    0x80
  4159d6:	mov    al,ds:0x7a447e21
  4159db:	mov    cl,BYTE PTR [edi]
  4159dd:	ja     0x415a0f
  4159df:	pop    ds
  4159e0:	jo     0x415971
  4159e2:	(bad)  
  4159e4:	cmp    DWORD PTR [edx+esi*1-0x44708926],0xf6ca184e
  4159ef:	sti    
  4159f0:	push   es
  4159f1:	jae    0x4159df
  4159f3:	pop    edi
  4159f4:	pop    esi
  4159f5:	jae    0x415977
  4159f7:	cs int3 
  4159f9:	jne    0x4159e0
  4159fb:	mov    ds:0xc79abe94,eax
  415a00:	scas   al,BYTE PTR es:[edi]
  415a01:	not    DWORD PTR [edx]
  415a03:	cs rol bh,1
  415a06:	cld    
  415a07:	sbb    eax,0x8ad2c847
  415a0c:	xor    ecx,DWORD PTR gs:[ecx]
  415a0f:	inc    ecx
  415a10:	pop    eax
  415a11:	je     0x415a6c
  415a13:	cdq    
  415a14:	dec    ebp
  415a15:	push   cs
  415a16:	(bad)  
  415a17:	sub    bl,ch
  415a19:	lea    ebx,[ebp+0x70]
  415a1c:	jbe    0x4159b0
  415a1e:	jbe    0x4159ba
  415a20:	addr16 loope 0x4159d6
  415a23:	fiadd  WORD PTR [ecx+0x27]
  415a26:	inc    esp
  415a27:	iret   
  415a28:	pop    edi
  415a29:	fild   DWORD PTR [esi]
  415a2b:	ret    0x3b99
  415a2e:	ror    BYTE PTR [esi+0x4bae926],0x52
  415a35:	aam    0x7
  415a37:	pop    esp
  415a38:	jge    0x415a25
  415a3a:	call   0x8981:0x89901d9b
  415a41:	in     al,dx
  415a42:	in     eax,0x34
  415a44:	adc    BYTE PTR [ebp-0x4f43c689],dh
  415a4a:	cmp    eax,0x1f5346c2
  415a4f:	mov    ebp,ebx
  415a51:	jmp    0x415ad1
  415a53:	packuswb mm6,QWORD PTR [esi-0x6e]
  415a57:	iret   
  415a58:	fwait
  415a59:	sub    al,0xa2
  415a5b:	ja     0x415a65
  415a5d:	jnp    0x415acf
  415a5f:	xor    al,0x7e
  415a61:	pop    edi
  415a62:	push   ds
  415a63:	pop    ds
  415a64:	fdiv   st(4),st
  415a66:	mov    esp,0xe24b5af5
  415a6b:	jnp    0x415abe
  415a6d:	(bad)  
  415a6e:	repz inc di
  415a71:	sub    eax,0x49933aa7
  415a76:	in     al,dx
  415a77:	xchg   DWORD PTR [ebx],eax
  415a79:	aas    
  415a7a:	mov    esp,0xbc0bd081
  415a7f:	xchg   BYTE PTR [ebp-0x5d],al
  415a82:	mov    dl,dh
  415a84:	mov    esi,0xf20c6dd
  415a89:	mov    DWORD PTR [ecx-0x4f],esp
  415a8c:	arpl   WORD PTR [ebx+0x50883570],di
  415a92:	outs   dx,DWORD PTR ds:[esi]
  415a93:	jno    0x415a6e
  415a95:	and    eax,0xca463da5
  415a9a:	(bad)  
  415a9b:	jb     0x415ad9
  415a9d:	adc    al,0xa5
  415a9f:	imul   edx,DWORD PTR [ebx-0x2818f3de],0x74edf89b
  415aa9:	jl     0x415aaa
  415aab:	int3   
  415aac:	test   eax,0xa2a30ca4
  415ab1:	and    DWORD PTR [ebx+eax*2-0x6c],esi
  415ab5:	pop    esp
  415ab6:	sti    
  415ab7:	mov    WORD PTR [edi+0x1b],fs
  415aba:	xchg   ebp,eax
  415abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415abc:	or     al,0xea
  415abe:	sub    cl,BYTE PTR [edi]
  415ac0:	add    eax,esi
  415ac2:	or     DWORD PTR [ebp+ebx*8-0x1],esp
  415ac6:	mov    ch,0x9f
  415ac8:	lea    esi,[esi+0x2043ff41]
  415ace:	jmp    0x415b19
  415ad0:	sbb    ch,BYTE PTR [eax+0x42]
  415ad3:	outs   dx,BYTE PTR ds:[esi]
  415ad4:	aas    
  415ad5:	xchg   edx,eax
  415ad6:	push   ecx
  415ad7:	call   0x7bf3a3d
  415adc:	(bad)  
  415add:	ds mov ah,0x25
  415ae0:	xchg   ecx,eax
  415ae1:	dec    eax
  415ae2:	cs pop esp
  415ae4:	sahf   
  415ae5:	mov    eax,0xf313b86a
  415aea:	push   cs
  415aeb:	dec    eax
  415aec:	mov    bh,0x8d
  415aee:	xor    BYTE PTR [eax+0x72356383],0x32
  415af5:	shl    BYTE PTR [ebp+0x5ba3327e],1
  415afb:	add    dh,BYTE PTR [ebp+0x98f96ed]
  415b01:	xchg   esp,eax
  415b02:	popa   
  415b03:	adc    ebx,DWORD PTR [edx+0x7115560f]
  415b09:	call   0x49a4:0x64689516
  415b10:	jbe    0x415b20
  415b12:	jno    0x415ac4
  415b14:	rcl    esp,0xa7
  415b17:	popf   
  415b18:	cwde   
  415b19:	sbb    ch,ah
  415b1b:	int    0xd5
  415b1d:	cmp    ch,ah
  415b1f:	mov    cl,0xc9
  415b21:	xchg   BYTE PTR [ebp+0x2886aaae],dl
  415b27:	inc    ecx
  415b28:	repz inc edx
  415b2a:	add    al,0xcb
  415b2d:	inc    ecx
  415b2e:	jno    0x415af0
  415b30:	dec    esp
  415b31:	pop    ebx
  415b32:	(bad)  
  415b33:	jno    0x415b18
  415b35:	cwde   
  415b36:	push   edx
  415b37:	cld    
  415b38:	call   0xdd70:0xf9e8afd
  415b3f:	sbb    dl,BYTE PTR [edi+0x5d]
  415b42:	xlat   BYTE PTR ds:[ebx]
  415b43:	fild   DWORD PTR [esp+eiz*8]
  415b46:	(bad)  
  415b47:	pop    esi
  415b48:	fst    QWORD PTR [edi]
  415b4a:	jl     0x415acd
  415b4c:	inc    ebp
  415b4d:	and    BYTE PTR [edx],bh
  415b4f:	in     al,dx
  415b50:	shl    BYTE PTR ds:0x2ea1f9d5,cl
  415b56:	push   eax
  415b57:	xor    BYTE PTR [edi],bh
  415b59:	cmp    eax,0xda3ec9d9
  415b5e:	jb     0x415b32
  415b60:	dec    ebp
  415b61:	je     0x415b45
  415b63:	mov    edi,0x896a6fb8
  415b68:	pop    edx
  415b69:	es push cs
  415b6b:	sub    al,0x9c
  415b6d:	or     edx,DWORD PTR [ecx]
  415b6f:	and    cl,BYTE PTR es:[edi+esi*8-0x30]
  415b74:	scas   al,BYTE PTR es:[edi]
  415b75:	mov    ebx,0x77f584ce
  415b7a:	retf   
  415b7b:	and    DWORD PTR [ebx],eax
  415b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b7e:	out    0xe,al
  415b80:	jle    0x415b55
  415b82:	jmp    0x421:0x861ecd81
  415b89:	and    al,ah
  415b8b:	or     bh,ah
  415b8d:	sub    DWORD PTR [eax+0x2a9fdb21],eax
  415b93:	pusha  
  415b94:	inc    ecx
  415b95:	lds    ebx,FWORD PTR [si-0x65]
  415b99:	pop    ebp
  415b9a:	clc    
  415b9b:	push   cs
  415b9c:	add    eax,0x784f3a03
  415ba1:	outs   dx,DWORD PTR gs:[esi]
  415ba3:	xor    edi,DWORD PTR [eax]
  415ba5:	mov    esp,0xb9d3cbd9
  415baa:	fs mov ebx,0x9f800124
  415bb0:	and    eax,0x11f23c44
  415bb5:	out    dx,al
  415bb6:	sti    
  415bb7:	pop    edx
  415bb8:	mov    dl,0x3e
  415bba:	mov    esi,0x488aeac4
  415bbf:	jo     0x415b80
  415bc1:	test   DWORD PTR [edi-0x47792e94],ecx
  415bc7:	arpl   WORD PTR [edx],di
  415bc9:	mov    ch,0xd2
  415bcb:	and    ebp,DWORD PTR [ecx]
  415bcd:	enter  0x14f,0x68
  415bd1:	mov    ebp,0xe17048b2
  415bd6:	jmp    0xdd70:0x3af804a7
  415bdd:	pop    ds
  415bde:	push   ss
  415bdf:	mov    ds:0xdbf3bb23,eax
  415be4:	xor    al,0x8
  415be6:	push   edx
  415be7:	pop    es
  415be8:	mov    edi,0x90356387
  415bed:	ret    0x566a
  415bf0:	add    DWORD PTR [eax-0xb],esi
  415bf3:	in     eax,dx
  415bf4:	call   0x99a4:0x219c5e38
  415bfb:	jecxz  0x415c3e
  415bfd:	xchg   ebx,eax
  415bfe:	xlat   BYTE PTR ds:[ebx]
  415bff:	stos   DWORD PTR es:[edi],eax
  415c00:	pop    ds
  415c01:	push   eax
  415c02:	(bad)  
  415c03:	mov    ebp,0x3d80de2b
  415c08:	les    ecx,FWORD PTR [esi]
  415c0a:	rol    DWORD PTR [eax-0x4348142d],1
  415c10:	mov    esi,DWORD PTR [ebp-0x25]
  415c13:	pcmpgtb mm6,QWORD PTR [edi]
  415c16:	out    dx,eax
  415c17:	dec    ecx
  415c18:	and    DWORD PTR [ebx+eiz*2+0x6424d4ad],edi
  415c1f:	jb     0x415bf2
  415c21:	sbb    BYTE PTR [esp+ebp*2+0x2cd3dc9a],ch
  415c28:	mov    eax,0xb5532dae
  415c2d:	xor    edx,DWORD PTR [ebx]
  415c2f:	stos   DWORD PTR es:[edi],eax
  415c30:	push   ss
  415c31:	stc    
  415c32:	shl    BYTE PTR [edx],0xa9
  415c35:	jnp    0x415c25
  415c37:	neg    BYTE PTR [eax+0x15515179]
  415c3d:	movq   mm1,QWORD PTR [ecx+eiz*8+0x72]
  415c42:	mov    esp,cs
  415c44:	pop    DWORD PTR [ebx]
  415c46:	arpl   WORD PTR [ecx-0x52],ax
  415c49:	mov    ebp,0x8dfb651b
  415c4e:	scas   eax,DWORD PTR es:[edi]
  415c4f:	inc    edi
  415c50:	and    bh,BYTE PTR [edx+0x9]
  415c53:	adc    DWORD PTR [ecx-0x4a],ebx
  415c56:	mov    ecx,DWORD PTR [eax+0x5e036083]
  415c5c:	lods   eax,DWORD PTR ds:[esi]
  415c5d:	ret    0x1616
  415c60:	push   esi
  415c61:	jmp    0x415bfe
  415c63:	xor    edx,DWORD PTR ds:0x5c316076
  415c69:	push   ecx
  415c6a:	dec    ecx
  415c6b:	mov    esp,0xf2bcac85
  415c70:	scas   eax,DWORD PTR es:[edi]
  415c71:	cmp    dl,BYTE PTR [ebp+0x5f82a8a4]
  415c77:	fild   WORD PTR [edx-0x49]
  415c7a:	aaa    
  415c7b:	jo     0x415c07
  415c7d:	push   0x3663dad2
  415c82:	repnz adc eax,0xcb26273a
  415c88:	pusha  
  415c89:	push   edi
  415c8a:	and    al,0xa3
  415c8c:	inc    esp
  415c8d:	push   ebp
  415c8e:	(bad)  [ebx-0x6f]
  415c91:	mov    cl,0x80
  415c93:	jmp    0xb9f:0x415b8ab0
  415c9a:	test   DWORD PTR [edx+eiz*8],ebp
  415c9d:	lahf   
  415c9e:	test   BYTE PTR [ebp-0x393136a1],0xad
  415ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca6:	outs   dx,DWORD PTR ds:[esi]
  415ca7:	jmp    0x415cd1
  415ca9:	(bad)  
  415caa:	or     eax,0xaf72fc6
  415caf:	push   0x31b2a7ed
  415cb4:	jmp    0x1bbe8228
  415cb9:	cmc    
  415cba:	scas   al,BYTE PTR es:[edi]
  415cbb:	pop    ss
  415cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cbd:	je     0x415ca7
  415cbf:	mov    al,0x3a
  415cc1:	das    
  415cc2:	movsx  ebp,bl
  415cc5:	mov    ds:0x7e55f113,eax
  415cca:	sub    BYTE PTR [ebx-0x3d775576],ch
  415cd0:	bound  esi,QWORD PTR ds:0x126e511c
  415cd6:	add    eax,0xfc927428
  415cdb:	fisttp DWORD PTR [esi-0x492f0fad]
  415ce1:	mov    dl,0x7e
  415ce3:	test   al,0x83
  415ce5:	popf   
  415ce6:	ret    0x3ca2
  415ce9:	out    0xf2,al
  415ceb:	mov    ah,0xfa
  415ced:	test   al,0xb8
  415cef:	call   0x1fe19da9
  415cf4:	sbb    ebp,DWORD PTR [ecx]
  415cf6:	stos   BYTE PTR es:[edi],al
  415cf7:	js     0x415d69
  415cf9:	scas   eax,DWORD PTR es:[edi]
  415cfa:	imul   esi,esp,0xffffffb2
  415cfd:	ficomp DWORD PTR [esi+0x74c9de54]
  415d03:	popf   
  415d04:	and    ebx,DWORD PTR [edx-0x49]
  415d07:	repnz inc edx
  415d09:	mov    ecx,0x527e4834
  415d0e:	cmp    BYTE PTR [edx],0x97
  415d11:	xor    BYTE PTR [edx+0x71],dl
  415d14:	lds    edi,FWORD PTR ds:0x1ca25e8f
  415d1a:	test   al,0x52
  415d1c:	dec    esp
  415d1d:	ficom  DWORD PTR [esi+0xb]
  415d20:	(bad)  [esi]
  415d22:	sbb    ch,BYTE PTR [edi]
  415d24:	fcmovu st,st(5)
  415d26:	mov    ecx,0x4f3e13d5
  415d2b:	sbb    eax,0xd7f7ce7e
  415d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d31:	cvtps2pi mm0,xmm5
  415d34:	imul   edx,DWORD PTR [ebp-0xecb260b],0x513c2ec
  415d3e:	xor    al,0x49
  415d40:	dec    BYTE PTR [ebx+ebx*2+0x71]
  415d44:	jp     0x415d7c
  415d46:	push   0xffffffa2
  415d48:	lods   eax,DWORD PTR ds:[esi]
  415d49:	sti    
  415d4a:	fsincos 
  415d4c:	pop    edi
  415d4d:	es call 0xd009:0x9b80a0d2
  415d55:	fld    TBYTE PTR [ebx-0x50]
  415d58:	scas   eax,DWORD PTR es:[edi]
  415d59:	lea    edx,[esi]
  415d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5c:	and    DWORD PTR ds:0xf299b156,esi
  415d62:	or     al,BYTE PTR [ebp-0xc15c12b]
  415d68:	lock inc eax
  415d6a:	dec    ebp
  415d6b:	jg     0x415d00
  415d6d:	push   es
  415d6e:	and    dl,BYTE PTR [ebp-0x75]
  415d71:	popa   
  415d72:	push   edi
  415d73:	push   0x46
  415d75:	popa   
  415d76:	pop    eax
  415d77:	aam    0x95
  415d79:	arpl   WORD PTR [esp+edx*8-0x4c],cx
  415d7d:	in     eax,0x9d
  415d7f:	sbb    eax,0xd70c507a
  415d84:	xor    dh,BYTE PTR [ecx+edx*4+0xf]
  415d88:	jmp    0xa8e8:0xe259bc7a
  415d8f:	cmp    al,0xff
  415d91:	mov    ah,0x24
  415d93:	lds    esi,FWORD PTR [ebp+0x4bce3ab7]
  415d99:	hlt    
  415d9a:	popa   
  415d9b:	js     0x415dfa
  415d9d:	sahf   
  415d9e:	std    
  415d9f:	add    bl,ch
  415da1:	adc    ch,BYTE PTR ds:0x63c63fcc
  415da7:	jnp    0x415de6
  415da9:	imul   ebx,DWORD PTR [ebx+0x18],0xb89d44d
  415db0:	aaa    
  415db1:	inc    ebp
  415db2:	(bad)  [esi+0x62d78854]
  415db8:	(bad)  
  415db9:	shl    DWORD PTR [ecx+0x27decc8d],1
  415dbf:	arpl   bx,sp
  415dc1:	popa   
  415dc2:	push   ss
  415dc3:	pop    es
  415dc4:	or     dl,dh
  415dc6:	xor    esp,edx
  415dc8:	(bad)  
  415dc9:	or     eax,0x40e4eac7
  415dce:	das    
  415dcf:	ja     0x415d9d
  415dd1:	(bad)  
  415dd2:	push   eax
  415dd3:	out    dx,eax
  415dd4:	lahf   
  415dd5:	cs scas al,BYTE PTR es:[edi]
  415dd7:	(bad)  
  415dd8:	jbe    0x415e3f
  415dda:	xchg   edx,eax
  415ddb:	cmp    ebx,DWORD PTR [edx+eax*1+0x5d75f256]
  415de2:	dec    ebx
  415de3:	adc    cl,BYTE PTR [ecx]
  415de5:	push   ebp
  415de6:	jle    0x415d9b
  415de8:	xchg   esp,eax
  415de9:	cdq    
  415dea:	(bad)  
  415deb:	ficomp DWORD PTR [edx+0x39a8849e]
  415df1:	mov    ?,WORD PTR [edi+eax*8+0x22]
  415df5:	aad    0x7e
  415df7:	int    0x32
  415df9:	pusha  
  415dfa:	sub    eax,0xd18af08d
  415dff:	xchg   edi,eax
  415e00:	pop    esp
  415e01:	mov    dh,0xb2
  415e03:	jns    0x415e4c
  415e05:	jl     0x415e1c
  415e07:	cmp    DWORD PTR [eax+0x50c0d59b],esi
  415e0d:	enter  0xaa5a,0xa0
  415e11:	test   BYTE PTR [edx],bl
  415e13:	and    ecx,esp
  415e15:	xchg   esp,eax
  415e16:	and    BYTE PTR [edx],bh
  415e18:	xor    ch,BYTE PTR [edx+ecx*2-0x5c30638f]
  415e1f:	and    eax,0x24eded8a
  415e24:	inc    esi
  415e25:	je     0x415e04
  415e27:	pmulhuw mm0,QWORD PTR [edi-0x256a4701]
  415e2e:	call   0x926ddebd
  415e33:	test   eax,0xea9e035e
  415e38:	mov    WORD PTR [edx-0x4ff42e60],fs
  415e3e:	scas   al,BYTE PTR es:[edi]
  415e3f:	in     al,0xfa
  415e41:	test   BYTE PTR [edi-0x4],0x6f
  415e45:	(bad)  
  415e46:	fcmovne st,st(5)
  415e48:	bound  ecx,QWORD PTR [eax-0x61]
  415e4b:	push   ecx
  415e4c:	jmp    0xbebd:0xcf7ce465
  415e53:	test   DWORD PTR ds:[edi-0x60ea1b91],edx
  415e5a:	(bad)  
  415e5b:	mov    dl,0x16
  415e5d:	lea    esp,[edi-0x53]
  415e60:	xchg   esi,eax
  415e61:	in     eax,0xd1
  415e63:	sub    al,0xb1
  415e65:	loope  0x415ec2
  415e67:	and    bl,BYTE PTR [ebx+0xc245a46]
  415e6d:	rol    BYTE PTR [ecx+eiz*8],1
  415e70:	add    ecx,DWORD PTR [ebx-0x7c]
  415e73:	mov    al,fs:0xee058e61
  415e79:	mov    ds:0xbd0721e9,eax
  415e7e:	loop   0x415eed
  415e80:	lds    esp,FWORD PTR [ebp-0x77]
  415e83:	xor    bh,BYTE PTR [edx]
  415e85:	in     al,dx
  415e86:	(bad)  
  415e87:	rcl    edi,1
  415e89:	rol    BYTE PTR [ebp-0xa],0x6
  415e8d:	xor    DWORD PTR [esi+0x5e],edx
  415e90:	fimul  WORD PTR [ecx-0x1b]
  415e93:	xor    BYTE PTR [edi+0x23e34b5e],bh
  415e99:	test   al,0xe2
  415e9b:	add    edx,DWORD PTR [ebx-0x43]
  415e9e:	mov    esi,0x2b06549a
  415ea3:	mov    esp,0xb03cc2af
  415ea8:	inc    esi
  415ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eaa:	push   edx
  415eab:	inc    edx
  415eac:	stos   DWORD PTR es:[edi],eax
  415ead:	pop    ds
  415eae:	add    DWORD PTR [edi],eax
  415eb0:	push   cs
  415eb1:	sbb    eax,0x38e857f3
  415eb6:	adc    BYTE PTR [edx*1+0x52747a03],al
  415ebd:	mov    al,ds:0xed2af47c
  415ec2:	add    eax,0x3ac2d2c7
  415ec7:	mov    bl,0x93
  415ec9:	fist   WORD PTR [eax]
  415ecb:	cwde   
  415ecc:	add    BYTE PTR [edi+0x63bc481e],dh
  415ed2:	scas   eax,DWORD PTR es:[edi]
  415ed3:	in     al,0xe4
  415ed5:	jnp    0x415e6d
  415ed7:	je     0x415f55
  415ed9:	jno    0x415edb
  415edb:	push   ebx
  415edc:	sbb    eax,0xfb4f68f9
  415ee1:	pop    ecx
  415ee2:	daa    
  415ee3:	(bad)  
  415ee4:	mov    ch,0xd5
  415ee6:	jg     0x415e71
  415ee8:	popf   
  415ee9:	lods   al,BYTE PTR ds:[esi]
  415eea:	or     BYTE PTR [ebp+0x4189c00a],0x63
  415ef1:	mov    al,0x1b
  415ef3:	xor    DWORD PTR [ebx+0x23b8e7f],0x4319599
  415efd:	sub    esi,edi
  415eff:	dec    ebp
  415f00:	jnp    0x415f6f
  415f02:	fsubr  st(7),st
  415f04:	imul   eax,ebx,0x48
  415f07:	adc    ebx,DWORD PTR [edx]
  415f09:	lods   al,BYTE PTR es:[esi]
  415f0b:	(bad)  
  415f0c:	dec    ebx
  415f0d:	xchg   ebp,eax
  415f0e:	pop    edi
  415f0f:	xchg   esp,eax
  415f10:	mov    ebx,0x201b2fbb
  415f15:	scas   eax,DWORD PTR es:[edi]
  415f16:	stc    
  415f17:	jae    0x415f5c
  415f19:	pusha  
  415f1a:	(bad)  
  415f1b:	fwait
  415f1c:	cli    
  415f1d:	ret    0x6c28
  415f20:	jg     0x415ef1
  415f22:	or     BYTE PTR [edx+0x16],ah
  415f25:	sbb    esp,DWORD PTR [eax+0x27]
  415f28:	outs   dx,BYTE PTR ds:[esi]
  415f29:	mov    dh,0xe7
  415f2b:	jmp    0xe90330b2
  415f30:	sbb    al,BYTE PTR [esi-0x7c]
  415f33:	addr16 adc edi,eax
  415f36:	lea    ebx,[ebp-0x1e1a7465]
  415f3c:	(bad)  
  415f3d:	out    0xc2,eax
  415f3f:	sub    ah,BYTE PTR [eax]
  415f41:	dec    eax
  415f42:	stos   DWORD PTR es:[edi],eax
  415f43:	dec    eax
  415f44:	lods   al,BYTE PTR ds:[esi]
  415f45:	shr    si,cl
  415f48:	xchg   BYTE PTR [ecx+0x6a],dl
  415f4b:	dec    ebx
  415f4c:	lods   al,BYTE PTR ds:[esi]
  415f4d:	loop   0x415f6b
  415f4f:	mov    bl,0x6f
  415f51:	and    DWORD PTR [edi+0xdda2de],0xa148ec85
  415f5b:	jmp    0xcb68cf48
  415f60:	xor    eax,0xa2077960
  415f65:	fwait
  415f66:	push   cs
  415f67:	push   ss
  415f68:	nop
  415f69:	adc    cl,BYTE PTR [edi+edx*1+0xbe7d0ec]
  415f70:	adc    al,al
  415f72:	ret    0x34f6
  415f75:	cmp    al,0x42
  415f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f78:	jmp    0xe3a79f
  415f7d:	jb     0x415f05
  415f7f:	imul   edi,DWORD PTR [edi+0x34a762f8],0xa4e55757
  415f89:	fwait
  415f8a:	mov    dl,0x13
  415f8c:	pop    ds
  415f8d:	xchg   edi,eax
  415f8e:	cli    
  415f8f:	or     bl,BYTE PTR [esi-0x4c66c36b]
  415f95:	mov    eax,ds:0x1cbfb88f
  415f9a:	jnp    0x416014
  415f9c:	(bad)  
  415f9d:	ss jns 0x416015
  415fa0:	(bad)  
  415fa1:	mov    edx,0x662a159b
  415fa6:	fisttp DWORD PTR [ebx]
  415fa8:	jns    0x415f35
  415faa:	mov    esp,0xec66539d
  415faf:	add    al,0x6a
  415fb1:	sbb    eax,esi
  415fb3:	xchg   BYTE PTR [esi-0x50cd3640],dl
  415fb9:	in     al,0xcd
  415fbb:	adc    al,bl
  415fbd:	in     eax,dx
  415fbe:	fcomp  QWORD PTR ds:0xfbe1bfc4
  415fc4:	aad    0x34
  415fc6:	ds jbe 0x415fa1
  415fc9:	sub    edx,DWORD PTR [esi]
  415fcb:	or     bl,BYTE PTR gs:[edx-0x3c0f3361]
  415fd2:	adc    DWORD PTR [edi-0x2ea61888],ebx
  415fd8:	sahf   
  415fd9:	adc    dl,al
  415fdb:	dec    esp
  415fdc:	xchg   esp,eax
  415fdd:	in     eax,0x45
  415fdf:	jmp    0x41603b
  415fe1:	and    BYTE PTR [ecx],bh
  415fe3:	ja     0x415fb7
  415fe5:	(bad)  
  415fe6:	shl    DWORD PTR [eax+0x1353fd38],1
  415fec:	and    bh,ch
  415fee:	je     0x416047
  415ff0:	jne    0x41601a
  415ff2:	fsubr  st(5),st
  415ff4:	xchg   edx,eax
  415ff5:	xchg   DWORD PTR [ebp+0x7a],ecx
  415ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ff9:	outs   dx,DWORD PTR ds:[esi]
  415ffa:	cmp    ebp,ebp
  415ffc:	xchg   ebx,eax
  415ffd:	sbb    dh,BYTE PTR [esi-0x4db1f3a9]
  416003:	scas   al,BYTE PTR es:[edi]
  416004:	lods   al,BYTE PTR ds:[esi]
  416005:	je     0x41600c
  416007:	fldcw  WORD PTR [ebp-0x37]
  41600a:	mov    ah,BYTE PTR [eax-0x57]
  41600d:	pop    ds
  41600e:	mov    BYTE PTR [ecx+0x42],al
  416011:	aad    0x24
  416013:	mov    ds:0x1d25fff2,eax
  416018:	and    al,BYTE PTR es:[esi-0x2d553c61]
  41601f:	call   0x9536:0xdc489981
  416026:	or     DWORD PTR [eax+0x5f],ebx
  416029:	out    0xd4,eax
  41602b:	enter  0x4200,0x22
  41602f:	push   edi
  416030:	xor    ah,dh
  416032:	lahf   
  416033:	repz jmp 0x41601d
  416036:	adc    DWORD PTR [ecx+0x22],edi
  416039:	inc    ecx
  41603a:	jg     0x41600b
  41603c:	mov    al,BYTE PTR [ebx-0x5e5c1ffe]
  416042:	out    dx,al
  416043:	cmp    bl,BYTE PTR [edi-0x43]
  416046:	das    
  416047:	js     0x415fca
  416049:	xchg   ebx,eax
  41604a:	fwait
  41604b:	pop    ds
  41604c:	into   
  41604d:	adc    BYTE PTR [ebp+0x66503bc2],cl
  416053:	xchg   ebx,eax
  416054:	lock test al,0xe6
  416057:	dec    edx
  416058:	scas   al,BYTE PTR es:[edi]
  416059:	stos   DWORD PTR es:[edi],eax
  41605a:	not    BYTE PTR [ecx+0x23]
  41605d:	cmp    al,0x6
  41605f:	push   es
  416060:	adc    DWORD PTR [esp+eax*1],0x72813fcd
  416067:	dec    ebp
  416068:	xchg   ecx,esi
  41606a:	out    0x70,eax
  41606c:	and    ch,BYTE PTR [edx+0x4d]
  41606f:	fmul   st(5),st
  416071:	push   edx
  416072:	lea    edx,[ebx+eax*4+0x464f6252]
  416079:	sub    al,0xa2
  41607b:	sub    bh,al
  41607d:	inc    edx
  41607e:	das    
  41607f:	add    eax,0x1a0b32fc
  416084:	lahf   
  416085:	(bad)  
  416086:	nop
  416087:	add    BYTE PTR [edi+0x4de0bbf4],bh
  41608d:	pop    ecx
  41608e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41608f:	add    cl,BYTE PTR [ebx]
  416091:	mov    dh,0x71
  416093:	jp     0x4160fb
  416095:	mov    ds:0x56d02b19,eax
  41609a:	ins    DWORD PTR es:[edi],dx
  41609b:	or     ah,BYTE PTR [ecx+eax*4]
  41609e:	adc    BYTE PTR [ecx],al
  4160a0:	mov    ebx,0x1f60c782
  4160a5:	stos   DWORD PTR es:[edi],eax
  4160a6:	adc    ebp,0x7
  4160a9:	jno    0x41607c
  4160ab:	jg     0x41607a
  4160ad:	mov    DWORD PTR [ecx+0x5fbd5aa1],ecx
  4160b3:	pop    es
  4160b4:	sub    eax,0xffffffee
  4160b7:	add    al,0xfc
  4160b9:	in     al,dx
  4160ba:	loop   0x4160bb
  4160bc:	je     0x416117
  4160be:	pusha  
  4160bf:	cld    
  4160c0:	call   0x7e7d:0x4c2fb9ae
  4160c7:	aam    0xe4
  4160c9:	pop    esi
  4160ca:	adc    DWORD PTR [edx+0x2f],eax
  4160cd:	jne    0x4160a6
  4160cf:	add    BYTE PTR [edi-0x3b],dh
  4160d2:	(bad)  
  4160d3:	fxch   st(1)
  4160d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160d6:	mov    gs,WORD PTR [esi-0x1e]
  4160d9:	pop    esp
  4160da:	mov    es,edx
  4160dc:	xor    DWORD PTR [ecx],edx
  4160de:	or     al,0x8c
  4160e0:	or     BYTE PTR [esi-0x7c86a3e6],bh
  4160e6:	repnz add al,0xaf
  4160e9:	aam    0x11
  4160eb:	f2xm1  
  4160ed:	inc    ecx
  4160ee:	push   ds
  4160ef:	jmp    0x55205417
  4160f4:	and    cl,BYTE PTR [ecx+0x3c]
  4160f7:	ss and eax,0x4791abd2
  4160fd:	and    BYTE PTR [ebp-0x45e9211a],bl
  416103:	lock in eax,dx
  416105:	ds in  eax,0x18
  416108:	jmp    0x47a11ddc
  41610d:	retf   0xea65
  416110:	mov    esi,0xaa4ee246
  416115:	xlat   BYTE PTR ds:[ebx]
  416116:	mov    DWORD PTR [esi-0x2540d208],0x6f077170
  416120:	push   esi
  416121:	jl     0x416184
  416123:	das    
  416124:	cwde   
  416125:	or     al,0xaa
  416127:	mov    ch,0x43
  416129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41612a:	cmp    DWORD PTR es:[ecx-0x33ae0bb1],0x2e
  416132:	or     BYTE PTR [edx+0x4b],al
  416135:	cld    
  416136:	jle    0x41613f
  416138:	outs   dx,DWORD PTR ds:[esi]
  416139:	jecxz  0x4160fe
  41613b:	std    
  41613c:	and    eax,0x649e3852
  416141:	retf   
  416142:	mov    cl,0x22
  416144:	test   BYTE PTR [ebx+0x1a09be86],al
  41614a:	ins    BYTE PTR es:[edi],dx
  41614b:	ins    BYTE PTR es:[edi],dx
  41614c:	out    dx,al
  41614d:	stos   BYTE PTR es:[edi],al
  41614e:	das    
  41614f:	lahf   
  416150:	xor    eax,0xfddea15
  416155:	sar    DWORD PTR [esi],1
  416157:	mov    bl,0x2b
  416159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41615a:	daa    
  41615b:	or     DWORD PTR [esi-0x5c408211],ecx
  416161:	jo     0x4161d2
  416163:	pop    ss
  416164:	fdiv   DWORD PTR [edx+0x1633198b]
  41616a:	mov    esp,0x81bdbfca
  41616f:	das    
  416170:	jmp    0xc93:0xa816a38c
  416177:	or     al,0xdf
  416179:	pop    esp
  41617a:	add    ch,BYTE PTR [ebx+0x73]
  41617d:	pop    es
  41617e:	(bad)  
  41617f:	iret   
  416180:	test   BYTE PTR [edi+0x74],bh
  416183:	cmc    
  416184:	add    BYTE PTR [esp+eiz*2+0x4],0x19
  416189:	js     0x416152
  41618b:	test   BYTE PTR [ecx-0x345000bb],dh
  416191:	jns    0x416189
  416193:	(bad)  
  416194:	and    ecx,DWORD PTR [edi+esi*4]
  416197:	and    bl,BYTE PTR [eax-0x14]
  41619a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619b:	or     al,0x5c
  41619d:	adc    BYTE PTR [esi+0x7936724a],ah
  4161a3:	and    BYTE PTR [esi+0x59],0x93
  4161a7:	ds push edi
  4161a9:	out    0x39,eax
  4161ab:	xor    dl,cl
  4161ad:	retf   
  4161ae:	push   ds
  4161af:	jmp    0xbe0f:0x8ee10ab0
  4161b6:	sbb    eax,0x8f91afeb
  4161bb:	sub    al,0xa8
  4161bd:	jae    0x4161a7
  4161bf:	mov    bh,0xa
  4161c1:	xor    esp,esp
  4161c3:	add    esi,edi
  4161c5:	dec    edi
  4161c6:	adc    eax,0x6ef8660b
  4161cb:	push   edi
  4161cc:	ss sub ebx,eax
  4161cf:	sbb    dh,dl
  4161d1:	gs (bad) 
  4161d3:	pop    ss
  4161d4:	pop    esp
  4161d5:	adc    BYTE PTR [edx-0xae4c71f],bl
  4161db:	sbb    BYTE PTR [edi+0x5e],al
  4161de:	sti    
  4161df:	and    esi,ebp
  4161e1:	adc    DWORD PTR [ecx+0x30],edx
  4161e4:	push   ds
  4161e5:	inc    ebp
  4161e6:	pop    ss
  4161e7:	jecxz  0x416253
  4161e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ea:	and    cl,dl
  4161ec:	push   es
  4161ed:	stos   BYTE PTR es:[edi],al
  4161ee:	push   es
  4161ef:	ret    0x3cfd
  4161f2:	push   es
  4161f3:	or     eax,DWORD PTR [esi+0x4d94c335]
  4161f9:	call   0xae8967f0
  4161fe:	cmp    DWORD PTR [edi+ebx*4+0x9e1cd57],ebx
  416205:	mov    ch,0xa9
  416207:	and    ch,al
  416209:	mov    dl,0xb5
  41620b:	jo     0x4161d8
  41620d:	mov    dh,0xb5
  41620f:	fmul   QWORD PTR [ecx]
  416211:	and    al,0x70
  416213:	jbe    0x416196
  416215:	mov    ds:0x7894d71,eax
  41621a:	fadd   QWORD PTR [eax]
  41621c:	and    ch,BYTE PTR [esi-0x3a0b1988]
  416222:	mov    eax,0x69e47e25
  416227:	pop    ebp
  416228:	dec    ebp
  416229:	push   edx
  41622a:	lods   al,BYTE PTR ds:[esi]
  41622b:	pop    bx
  41622d:	mov    eax,ds:0x8ff40ae7
  416232:	jmp    0x46e41a38
  416237:	dec    edi
  416238:	inc    ecx
  416239:	dec    esi
  41623a:	xor    dh,BYTE PTR [ebx]
  41623c:	sub    BYTE PTR [edi-0x7],0xd3
  416240:	test   BYTE PTR [edx+ebx*4+0x47],al
  416244:	outs   dx,DWORD PTR ds:[esi]
  416245:	popa   
  416246:	mov    al,0xed
  416248:	jno    0x416256
  41624a:	lds    ebp,FWORD PTR [esi]
  41624c:	stos   DWORD PTR es:[di],eax
  41624e:	div    DWORD PTR [edi-0x596e02ec]
  416254:	bound  eax,QWORD PTR [ecx-0x69]
  416257:	pop    ecx
  416258:	pop    esp
  416259:	shl    DWORD PTR [ebp-0x6e],1
  41625c:	stos   BYTE PTR es:[edi],al
  41625d:	movzx  edx,ch
  416260:	dec    ebp
  416261:	pop    ecx
  416262:	mov    eax,ds:0xd8e2422
  416267:	adc    esp,DWORD PTR [edx+0x6]
  41626a:	mov    al,ds:0xf7e4f0e1
  41626f:	loop   0x41623a
  416271:	(bad)  
  416272:	sti    
  416273:	sbb    dl,BYTE PTR [edi-0x4d]
  416276:	add    BYTE PTR [edi+0x3e],dh
  416279:	daa    
  41627a:	rcl    edi,0x4d
  41627d:	pusha  
  41627e:	in     eax,0x9f
  416280:	cmp    BYTE PTR [eax-0x71a11b8f],cl
  416286:	push   cs
  416287:	mov    edx,0x3c0631fa
  41628c:	or     DWORD PTR [ebx+0x44],esp
  41628f:	lods   eax,DWORD PTR ds:[esi]
  416290:	push   ds
  416291:	xor    edx,ecx
  416293:	fwait
  416294:	(bad)  
  416295:	cmp    DWORD PTR [ebx-0x71cf3917],ecx
  41629b:	pop    ss
  41629c:	fadd   QWORD PTR [esi-0x5b1a8d89]
  4162a2:	pop    edx
  4162a3:	add    BYTE PTR [ecx-0x6d8db238],0xd6
  4162aa:	xor    ebp,DWORD PTR [edi-0x2ed3f510]
  4162b0:	cmp    DWORD PTR [eax+0x77b398bd],0xffffffa8
  4162b7:	in     al,dx
  4162b8:	int    0xf1
  4162ba:	daa    
  4162bb:	ret    
  4162bc:	test   DWORD PTR [ecx+0x7c],esp
  4162bf:	cmp    al,0xd
  4162c1:	xor    edx,DWORD PTR [esi-0x5f]
  4162c4:	cmp    ch,BYTE PTR [eax-0x72]
  4162c7:	scas   al,BYTE PTR es:[edi]
  4162c8:	in     eax,0x85
  4162ca:	aam    0xe
  4162cc:	ja     0x416252
  4162ce:	aaa    
  4162cf:	in     eax,dx
  4162d0:	adc    al,0xbf
  4162d2:	inc    edx
  4162d3:	mov    fs,WORD PTR ss:[ecx+0x65407474]
  4162da:	fsub   QWORD PTR [esi-0xa29b0dc]
  4162e0:	xor    ebx,edx
  4162e2:	shl    BYTE PTR [edi-0x39251b00],cl
  4162e8:	and    esp,edi
  4162ea:	cmp    eax,0x2a
  4162ed:	adc    al,0x33
  4162ef:	xchg   ecx,eax
  4162f0:	mov    ecx,0xf2f118dd
  4162f5:	mov    ds:0x70c92510,al
  4162fa:	push   ecx
  4162fb:	mov    bl,0x3
  4162fd:	xor    BYTE PTR [edx-0x63],ch
  416300:	add    BYTE PTR [eax],bl
  416302:	ss (bad) 
  416304:	mov    cl,0x1
  416306:	and    ecx,DWORD PTR [ecx]
  416308:	mov    al,0x5a
  41630a:	xor    DWORD PTR [esi-0x5d42fd03],ecx
  416310:	xchg   ebx,eax
  416311:	mov    ds:0x7f97f7a0,al
  416316:	xor    esp,ebp
  416318:	int3   
  416319:	pop    ebp
  41631a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41631b:	sbb    al,0x89
  41631d:	adc    eax,0xd41ce3b4
  416322:	mov    cl,0xe9
  416324:	jbe    0x41635d
  416326:	popa   
  416327:	(bad)  
  416328:	mov    eax,ds:0xd67ea327
  41632d:	mov    ds:0x2f8b68e5,eax
  416332:	pushf  
  416333:	es mov cl,0x19
  416336:	out    0xad,al
  416338:	adc    DWORD PTR [esi],ebx
  41633a:	dec    edi
  41633b:	iret   
  41633c:	sub    BYTE PTR [esi],0x6e
  41633f:	ins    BYTE PTR es:[edi],dx
  416340:	xchg   esp,eax
  416341:	loop   0x416390
  416343:	push   ebp
  416344:	fwait
  416345:	jne    0x41635c
  416347:	pop    esi
  416348:	lock add si,dx
  41634c:	rol    BYTE PTR [esi-0x40],0xbd
  416350:	push   eax
  416351:	scas   al,BYTE PTR es:[edi]
  416352:	and    ecx,0x4b
  416355:	push   0xe9b2dcff
  41635a:	mov    DWORD PTR [ebx+0x1b66eb52],edx
  416360:	push   edx
  416361:	cmp    BYTE PTR [eax],0x33
  416364:	push   eax
  416365:	std    
  416366:	lahf   
  416367:	pop    ebp
  416368:	adc    edi,DWORD PTR [eax+eax*1]
  41636b:	sub    ch,BYTE PTR [ecx+eiz*1]
  41636e:	iret   
  41636f:	(bad)  
  416370:	jecxz  0x416306
  416372:	pop    esp
  416373:	test   edx,esp
  416375:	mov    al,ds:0xf3c6bb4e
  41637a:	jno    0x4163bf
  41637c:	fucomp st(7)
  41637e:	loope  0x4163ad
  416380:	add    ah,dl
  416382:	jnp    0x416337
  416384:	std    
  416385:	add    al,0x80
  416387:	sahf   
  416388:	sbb    DWORD PTR [esi],edi
  41638a:	inc    ebx
  41638b:	push   ebx
  41638c:	pop    ebx
  41638d:	xor    esi,DWORD PTR [ebp+0x78e7f455]
  416393:	dec    ecx
  416394:	pop    eax
  416395:	(bad)  [ebp-0x59]
  416398:	inc    edi
  416399:	sar    ch,0x2d
  41639c:	lahf   
  41639d:	bound  esi,QWORD PTR [ebp+0x48]
  4163a0:	xchg   ecx,eax
  4163a1:	mov    eax,0xedb9cd11
  4163a6:	rcl    DWORD PTR [edx-0x5],1
  4163a9:	pop    ecx
  4163aa:	bound  edx,QWORD PTR [esi-0x66]
  4163ad:	xchg   ebp,eax
  4163ae:	clc    
  4163af:	call   0x7a2eb490
  4163b4:	dec    esp
  4163b5:	push   ecx
  4163b6:	lock jne 0x41640f
  4163b9:	shl    BYTE PTR [eax-0x6],cl
  4163bc:	in     al,0xfa
  4163be:	or     edx,DWORD PTR [esi-0xc]
  4163c1:	cmovg  ebp,DWORD PTR [ebp-0x5b267a92]
  4163c8:	mov    bh,0x6b
  4163ca:	pushf  
  4163cb:	scas   al,BYTE PTR es:[edi]
  4163cc:	mov    edx,0x4185e1b9
  4163d1:	sbb    DWORD PTR [ebx],0xffffff8a
  4163d4:	out    0xe7,al
  4163d6:	sub    ebx,DWORD PTR ds:0x727455d5
  4163dc:	pushf  
  4163dd:	add    BYTE PTR [ebx-0x15],0xa9
  4163e1:	push   cs
  4163e2:	cmp    edi,edx
  4163e4:	inc    eax
  4163e5:	sbb    eax,0xc842e611
  4163ea:	addr16 in al,dx
  4163ec:	cmp    DWORD PTR [ecx+0x4b2bce3a],esp
  4163f2:	push   edi
  4163f3:	cli    
  4163f4:	cmp    BYTE PTR [eax+0x2c40a385],dh
  4163fa:	or     DWORD PTR ds:0xd6394dbb,0xfffffffc
  416401:	push   edi
  416402:	fdivr  st(6),st
  416404:	test   al,0x69
  416406:	dec    eax
  416407:	inc    ebp
  416408:	fiadd  WORD PTR [esi-0x8aa3bdd]
  41640e:	push   ds
  41640f:	stos   DWORD PTR es:[edi],eax
  416410:	neg    bl
  416412:	outs   dx,BYTE PTR ds:[esi]
  416413:	mov    cl,0xba
  416415:	mov    al,0xfd
  416417:	xlat   BYTE PTR ds:[ebx]
  416418:	dec    eax
  416419:	loope  0x416440
  41641b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41641c:	jnp    0x4163c0
  41641e:	pop    edx
  41641f:	retf   0xfcf8
  416422:	inc    ebx
  416423:	(bad)  
  416424:	das    
  416425:	xchg   ebx,eax
  416426:	mov    esp,0x19db8923
  41642b:	cmp    eax,0x51af989e
  416430:	out    dx,al
  416431:	jb     0x416478
  416433:	inc    ecx
  416434:	jbe    0x41642b
  416436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416437:	and    ebp,DWORD PTR [esi+eiz*4+0x63]
  41643b:	add    eax,ebx
  41643d:	rcr    DWORD PTR [ebx],cl
  41643f:	inc    esi
  416440:	std    
  416441:	jge    0x416432
  416443:	ror    DWORD PTR [edx+ebx*8-0x47244c17],0x5d
  41644b:	shl    BYTE PTR [ecx-0x2d52943a],1
  416451:	pop    edi
  416452:	dec    eax
  416453:	lock xchg DWORD PTR [ebp-0x75],ebx
  416457:	sbb    al,0xfc
  416459:	mov    ah,0x1c
  41645b:	mov    esp,0x5c1c2ec0
  416460:	add    al,0x39
  416462:	inc    esp
  416463:	add    BYTE PTR [edi],cl
  416465:	inc    ebp
  416466:	aam    0x54
  416468:	stc    
  416469:	test   BYTE PTR [ecx+0x3a06f32f],al
  41646f:	mov    esp,edx
  416471:	jmp    0xa1ca:0x23732eab
  416478:	std    
  416479:	jp     0x416483
  41647b:	jmp    DWORD PTR [ecx-0x67]
  41647e:	mov    al,0x4b
  416480:	dec    ebp
  416481:	dec    eax
  416482:	pop    ebp
  416483:	ins    DWORD PTR es:[edi],dx
  416484:	inc    ecx
  416485:	xchg   edi,eax
  416486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416487:	lods   eax,DWORD PTR ds:[esi]
  416488:	push   ebx
  416489:	pop    edi
  41648a:	xchg   esp,eax
  41648b:	xlat   BYTE PTR ds:[ebx]
  41648c:	test   eax,0x9a81abbd
  416491:	arpl   WORD PTR [ebp-0x4f551d6f],bx
  416497:	faddp  st(5),st
  416499:	mov    esp,0xa6608dc8
  41649e:	add    al,0x37
  4164a0:	cmp    DWORD PTR [ebp-0x5c],esi
  4164a3:	jle    0x416470
  4164a5:	cmp    edx,DWORD PTR [eax-0x63]
  4164a8:	push   ecx
  4164a9:	retf   0x2097
  4164ac:	adc    edi,DWORD PTR [eax]
  4164ae:	dec    ebp
  4164af:	inc    ebp
  4164b0:	fs xor eax,0xd4ba6e57
  4164b6:	cli    
  4164b7:	cmp    eax,0xf97f085a
  4164bc:	fnstcw WORD PTR [ebp-0x5a]
  4164bf:	sti    
  4164c0:	dec    eax
  4164c1:	sahf   
  4164c2:	daa    
  4164c3:	jmp    0xf5c:0x94f9f24e
  4164ca:	adc    al,0x5a
  4164cc:	sub    ah,BYTE PTR [esp+esi*2+0x2f2e356d]
  4164d3:	mov    ch,0xf9
  4164d5:	test   eax,0xcc78680e
  4164da:	adc    BYTE PTR [edi-0x47],ch
  4164dd:	mov    BYTE PTR [edx-0x43],bh
  4164e0:	fsub   QWORD PTR [eax]
  4164e2:	scas   eax,DWORD PTR es:[edi]
  4164e3:	mov    ah,0x2e
  4164e5:	ds pop esi
  4164e7:	imul   ebx,DWORD PTR [ebx+esi*1-0xeda1687],0xbca6cc4e
  4164f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f3:	push   es
  4164f4:	xchg   edi,eax
  4164f5:	adc    eax,0x63e6b29e
  4164fa:	sub    BYTE PTR [esi],dh
  4164fc:	mov    DWORD PTR [ebx-0x7f7b0d9b],ebp
  416502:	mov    WORD PTR [edi-0x1e],?
  416505:	(bad)  
  416506:	adc    ebx,DWORD PTR [ecx]
  416508:	js     0x416574
  41650a:	xchg   ebx,eax
  41650b:	inc    edx
  41650c:	mov    eax,ds:0x74d1f9ee
  416511:	ins    BYTE PTR es:[edi],dx
  416512:	popa   
  416513:	jnp    0x4164cf
  416515:	mov    esi,ebp
  416517:	shl    DWORD PTR [ebp-0x67de33e9],0x79
  41651e:	nop
  41651f:	out    dx,eax
  416520:	sbb    eax,0xe8216c43
  416525:	je     0x416546
  416527:	cmc    
  416528:	stos   BYTE PTR es:[edi],al
  416529:	bound  eax,QWORD PTR [eax+eax*8+0x125c5f79]
  416530:	popf   
  416531:	scas   al,BYTE PTR es:[edi]
  416532:	dec    esi
  416533:	dec    edi
  416534:	cmp    DWORD PTR [eax+0x2],esi
  416537:	popa   
  416538:	arpl   sp,dx
  41653a:	or     eax,0xbbaaca17
  41653f:	or     DWORD PTR [ecx],0x845d6e1b
  416545:	adc    bh,BYTE PTR ds:0x64806b97
  41654b:	es jecxz 0x41659d
  41654e:	daa    
  41654f:	fsub   DWORD PTR [ebp-0x6a]
  416552:	inc    edx
  416553:	inc    ebp
  416554:	sub    DWORD PTR [ebp+0x41],ecx
  416557:	(bad)  [eax]
  416559:	xor    DWORD PTR [esi+0x19ff1b84],esp
  41655f:	(bad)  
  416560:	dec    edi
  416561:	sub    al,cl
  416563:	dec    ebp
  416564:	(bad)  
  416565:	dec    edi
  416566:	add    dh,ch
  416568:	clc    
  416569:	ds out dx,al
  41656b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41656c:	sahf   
  41656d:	lods   eax,DWORD PTR ds:[esi]
  41656e:	xchg   ecx,eax
  41656f:	add    BYTE PTR [ebp-0xc8b703d],dh
  416575:	dec    ecx
  416576:	repz push ebp
  416578:	mov    eax,0xbe330f59
  41657d:	ins    DWORD PTR es:[edi],dx
  41657e:	mov    bh,0x78
  416580:	les    ebx,FWORD PTR [ecx+0x35ca6214]
  416586:	outs   dx,DWORD PTR ds:[esi]
  416587:	int    0x2b
  416589:	test   BYTE PTR [ecx+0x7781acc3],dh
  41658f:	arpl   sp,si
  416591:	push   ebp
  416592:	mov    cl,0x8d
  416594:	cwde   
  416595:	(bad)  
  416596:	call   0xd15f1b7f
  41659b:	mov    cl,0x1d
  41659d:	jne    0x41652b
  41659f:	push   esp
  4165a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a1:	mov    cl,0x76
  4165a3:	fbstp  TBYTE PTR [eax+0x1d78f89b]
  4165a9:	hlt    
  4165aa:	xlat   BYTE PTR ds:[ebx]
  4165ab:	jmp    0x416626
  4165ad:	xor    DWORD PTR [eax+0xc6d696c],eax
  4165b3:	lds    edx,FWORD PTR [ecx+edx*2+0x7c]
  4165b7:	scas   al,BYTE PTR es:[edi]
  4165b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b9:	sbb    BYTE PTR [ecx-0x10],ah
  4165bc:	sub    eax,0x9e5612b
  4165c1:	dec    ecx
  4165c2:	(bad)  
  4165c3:	jmp    0xbab6b0cb
  4165c8:	and    BYTE PTR [ecx+0x45db8615],ch
  4165ce:	ins    DWORD PTR es:[edi],dx
  4165cf:	push   0xffffffa2
  4165d1:	add    ecx,DWORD PTR [edx+0x4575885f]
  4165d7:	test   esi,eax
  4165d9:	sbb    esp,eax
  4165db:	imul   esp,DWORD PTR [ecx-0x47cb52ff],0x2f
  4165e2:	add    esi,ebx
  4165e4:	(bad)  
  4165e5:	jnp    0x41662d
  4165e7:	or     ecx,ebp
  4165e9:	and    eax,0x7c44d0f
  4165ee:	enter  0xa96e,0xaf
  4165f2:	inc    edi
  4165f3:	push   edx
  4165f4:	test   eax,0x26b180e2
  4165f9:	daa    
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    ch,BYTE PTR [edi-0x24290634]
  416677:	and    esp,DWORD PTR [ecx+0x62]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	(bad)  
  41667f:	(bad)  
  416680:	sbb    eax,DWORD PTR [edi+0x37]
  416683:	(bad)  
  416684:	scas   al,BYTE PTR es:[edi]
  416685:	push   edi
  416686:	xor    al,0x1e
  416688:	stos   BYTE PTR es:[edi],al
  416689:	fwait
  41668a:	retf   
  41668b:	stc    
  41668c:	stos   BYTE PTR es:[edi],al
  41668d:	cdq    
  41668e:	cmp    BYTE PTR [eax+0x2f],dh
  416691:	ret    
  416692:	leave  
  416693:	pushfw 
  416695:	sub    al,bl
  416697:	test   BYTE PTR [edx+0x58],0x8a
  41669b:	neg    esi
  41669d:	daa    
  41669e:	call   0xa135:0x740390f
  4166a5:	cmp    al,0x3d
  4166a7:	xchg   ebx,eax
  4166a8:	jmp    0x41664b
  4166aa:	in     al,dx
  4166ab:	push   ebx
  4166ac:	jmp    0x416645
  4166ae:	frstor [ecx-0x3649cc2b]
  4166b4:	fld    DWORD PTR es:[ebp-0x75]
  4166b8:	(bad)  [edi-0x77]
  4166bb:	dec    ecx
  4166bc:	adc    eax,DWORD PTR [ebx+0x399b41ea]
  4166c2:	sbb    ah,BYTE PTR [edx]
  4166c4:	scas   al,BYTE PTR es:[edi]
  4166c5:	mov    ds:0x5ad4e3db,al
  4166ca:	mov    esp,0x3fb8b47d
  4166cf:	retf   0xf349
  4166d2:	ret    
  4166d3:	xchg   edi,eax
  4166d4:	shr    BYTE PTR [eax-0x1d],0x6a
  4166d8:	jbe    0x4166a3
  4166da:	aam    0x57
  4166dc:	mov    dh,0x3
  4166de:	xor    al,0x5f
  4166e0:	stos   DWORD PTR es:[edi],eax
  4166e1:	repnz (bad) 
  4166e4:	repz push ecx
  4166e6:	pop    edx
  4166e7:	data16 (bad) 
  4166e9:	shl    BYTE PTR [edi+eax*4],0x45
  4166ed:	into   
  4166ee:	mov    DWORD PTR ds:0xd707d277,ebx
  4166f4:	arpl   bp,cx
  4166f6:	xchg   edi,eax
  4166f7:	add    eax,0xae12f099
  4166fc:	cwde   
  4166fd:	imul   eax,eax,0x1f
  416700:	pop    esp
  416701:	rcl    DWORD PTR [edi+0x3b604333],cl
  416707:	lock and dh,0x84
  41670b:	(bad)  
  41670c:	mov    cl,0x71
  41670e:	mov    BYTE PTR [ecx],ah
  416710:	pop    es
  416711:	sub    BYTE PTR [ebx-0x68],ch
  416714:	(bad)  
  416715:	fdiv   st,st(6)
  416717:	inc    esp
  416718:	push   ebp
  416719:	ficomp WORD PTR [edi-0x2b]
  41671c:	xor    BYTE PTR [ecx+0x17320e90],ch
  416722:	fistp  DWORD PTR [esi+0xe6d203f]
  416728:	stos   DWORD PTR es:[edi],eax
  416729:	mov    ?,ebx
  41672b:	mov    ah,0x46
  41672d:	or     DWORD PTR [ebp-0x58],ecx
  416730:	push   edi
  416731:	ins    DWORD PTR es:[edi],dx
  416732:	xchg   ebx,eax
  416733:	inc    DWORD PTR [esi-0x29a2dcd8]
  416739:	push   es
  41673a:	ins    DWORD PTR es:[edi],dx
  41673b:	aad    0xcd
  41673d:	js     0x4166da
  41673f:	jmp    0xef77:0xa4156c0b
  416746:	outs   dx,BYTE PTR ds:[esi]
  416747:	test   BYTE PTR [ecx+0xadd24f4],bl
  41674d:	mov    bh,0x1a
  41674f:	push   esp
  416750:	cdq    
  416751:	scas   eax,DWORD PTR es:[edi]
  416752:	fisttp QWORD PTR [ebx+0x13aa24f]
  416758:	test   DWORD PTR [eax+0x702670a3],ecx
  41675e:	fiadd  WORD PTR [ecx]
  416760:	test   eax,0x4b8a6951
  416765:	dec    eax
  416766:	cld    
  416767:	adc    al,0xec
  416769:	cmp    esi,0xc8ccd479
  41676f:	aas    
  416770:	ret    0x5ca9
  416773:	sbb    al,0xa9
  416775:	xchg   esi,eax
  416776:	cmp    eax,0xf9a82a6a
  41677b:	push   edi
  41677c:	test   al,0x73
  41677e:	add    esi,DWORD PTR [ecx-0x7c7bc552]
  416784:	nop
  416785:	push   ebx
  416786:	add    eax,0x38715ef2
  41678b:	inc    esi
  41678c:	sbb    BYTE PTR [ebp+0x0],cl
  41678f:	cmp    DWORD PTR ds:0x27714d8,ecx
  416795:	mov    ch,0x65
  416797:	shr    esi,0xb9
  41679a:	repnz adc ch,BYTE PTR [edx+ebx*8]
  41679e:	ins    BYTE PTR es:[edi],dx
  41679f:	mov    ebx,0xb2ab1b2e
  4167a4:	fsub   DWORD PTR [esp+ecx*8]
  4167a7:	scas   eax,DWORD PTR es:[edi]
  4167a8:	aam    0xba
  4167aa:	std    
  4167ab:	jecxz  0x416803
  4167ad:	xor    al,0x7c
  4167af:	mov    ah,0x64
  4167b1:	ret    0x42db
  4167b4:	pop    esi
  4167b5:	sub    eax,0x2daa3531
  4167ba:	and    eax,0xe06da862
  4167bf:	div    DWORD PTR [ecx+0x1d6393b7]
  4167c5:	pop    ecx
  4167c6:	jae    0x416836
  4167c8:	jns    0x416809
  4167ca:	scas   al,BYTE PTR es:[edi]
  4167cb:	call   0x8079:0x8e005c11
  4167d2:	js     0x416765
  4167d4:	push   0x32
  4167d6:	in     eax,dx
  4167d7:	out    0x7c,eax
  4167d9:	ret    
  4167da:	clc    
  4167db:	cli    
  4167dc:	pop    ds
  4167dd:	or     DWORD PTR [ebp+0x74],0x84edb132
  4167e4:	test   DWORD PTR [edx+0x59],0xa260eb90
  4167eb:	fsub   DWORD PTR ds:0x82e7c8a9
  4167f1:	retf   
  4167f2:	mov    ecx,0xfb98557e
  4167f7:	inc    DWORD PTR [ebx]
  4167f9:	push   esp
  4167fa:	push   0xdcdaa86d
  4167ff:	jae    0x416814
  416801:	ficomp WORD PTR [edx]
  416803:	not    DWORD PTR [esi]
  416805:	mov    dh,0x39
  416807:	xchg   ah,cl
  416809:	cmp    eax,0x6d9d7a5
  41680e:	outs   dx,DWORD PTR ds:[esi]
  41680f:	mov    esp,0x527fd8a2
  416814:	out    dx,al
  416815:	and    ecx,DWORD PTR [ecx]
  416817:	std    
  416818:	fwait
  416819:	jge    0x416864
  41681b:	or     eax,0xca437101
  416820:	pop    ecx
  416821:	ins    BYTE PTR es:[edi],dx
  416822:	or     eax,0xbc2f7346
  416827:	mov    edi,?
  416829:	loop   0x416897
  41682b:	inc    edx
  41682c:	dec    esi
  41682d:	ret    0xdd97
  416830:	stc    
  416831:	jecxz  0x416831
  416833:	cmp    DWORD PTR [eax],edx
  416835:	cmc    
  416836:	mov    cl,0x66
  416838:	les    esp,FWORD PTR [ebx+0x4a963451]
  41683e:	imul   ebp,DWORD PTR ds:0xd16b750e,0xffffffc3
  416845:	ins    BYTE PTR es:[edi],dx
  416846:	mov    edi,DWORD PTR [eax]
  416848:	nop
  416849:	ret    
  41684a:	pop    esp
  41684b:	stos   BYTE PTR es:[edi],al
  41684c:	mov    cs,edi
  41684e:	mov    gs,WORD PTR [ecx+edx*8]
  416851:	lods   eax,DWORD PTR ds:[esi]
  416852:	gs inc esp
  416854:	dec    esi
  416855:	push   ebx
  416856:	sbb    edi,edx
  416858:	xchg   ecx,eax
  416859:	shl    BYTE PTR [edx+0x78],0xdc
  41685d:	dec    edi
  41685e:	daa    
  41685f:	ror    dl,0x4
  416862:	(bad)  
  416863:	xchg   edi,eax
  416864:	sbb    BYTE PTR [ebx],0xc9
  416867:	pop    ebp
  416868:	ss test eax,0x32c59bda
  41686e:	inc    edi
  41686f:	cmp    eax,0x93a19e2a
  416874:	add    BYTE PTR [ecx+0x4b],ch
  416877:	adc    al,0xc4
  416879:	push   ds
  41687a:	test   bl,0x36
  41687d:	push   eax
  41687e:	xor    dl,BYTE PTR [edi]
  416880:	inc    ebx
  416881:	sbb    BYTE PTR [eax-0x4c],bl
  416884:	mov    ecx,DWORD PTR [ebx+0xf]
  416887:	dec    edi
  416888:	and    dl,dh
  41688a:	out    dx,eax
  41688b:	bound  ebp,QWORD PTR [eax-0x7f]
  41688e:	and    ch,ch
  416890:	push   edx
  416891:	ja     0x4168bb
  416893:	jp     0x41687a
  416895:	adc    eax,DWORD PTR ds:0xd724a636
  41689b:	sub    edi,0x7
  41689e:	pop    es
  41689f:	out    0xad,eax
  4168a1:	pop    es
  4168a2:	aad    0x9b
  4168a4:	mov    ds:0x9e8c6c8d,al
  4168a9:	inc    ebx
  4168aa:	mov    esp,0xee6d8e5a
  4168af:	stos   DWORD PTR es:[edi],eax
  4168b0:	jnp    0x416930
  4168b2:	jb     0x4168ed
  4168b4:	xchg   esi,eax
  4168b5:	xor    ah,BYTE PTR cs:[edx]
  4168b8:	inc    edi
  4168b9:	push   edx
  4168ba:	dec    esp
  4168bb:	push   edi
  4168bc:	in     eax,dx
  4168bd:	jmp    0x416901
  4168bf:	stc    
  4168c0:	outs   dx,BYTE PTR ds:[esi]
  4168c1:	out    0x81,eax
  4168c3:	pushf  
  4168c4:	call   0x1edb1309
  4168c9:	jb     0x4168a7
  4168cb:	retf   0xfbbf
  4168ce:	sbb    BYTE PTR [ebx],0x9
  4168d1:	mov    edx,0xedff7e1e
  4168d6:	xchg   ebp,eax
  4168d7:	ds sar ch,cl
  4168da:	push   ecx
  4168db:	imul   ebx,DWORD PTR [ecx+0x17843877],0x1c
  4168e2:	mov    DWORD PTR [esi+ecx*4],ecx
  4168e5:	mov    ds:0xf1496b86,al
  4168ea:	dec    esp
  4168eb:	pusha  
  4168ec:	pop    es
  4168ed:	fdiv   QWORD PTR [eax-0x47]
  4168f0:	add    al,0xc4
  4168f2:	(bad)  
  4168f3:	mov    bh,0x75
  4168f5:	adc    eax,DWORD PTR [eax-0x15c8d44b]
  4168fb:	div    BYTE PTR [ebx+ecx*2]
  4168fe:	nop
  4168ff:	jge    0x4168cd
  416901:	outs   dx,DWORD PTR ds:[esi]
  416902:	and    BYTE PTR [edi+0x39],al
  416905:	xchg   ebx,eax
  416906:	stc    
  416907:	les    edi,FWORD PTR [edx-0x73]
  41690a:	outs   dx,DWORD PTR ds:[esi]
  41690b:	inc    esi
  41690c:	inc    esi
  41690d:	mov    eax,ds:0xf44e1c39
  416912:	xor    DWORD PTR [edx+0x43],esi
  416915:	pop    ecx
  416916:	aas    
  416917:	push   es
  416918:	in     al,dx
  416919:	fnstsw WORD PTR [edx]
  41691b:	inc    esp
  41691c:	sbb    eax,0xb8dff3e4
  416921:	leave  
  416922:	adc    DWORD PTR [edx-0x28],eax
  416925:	mov    ebx,0xa8b68788
  41692a:	cmp    BYTE PTR [edi+0x74],dl
  41692d:	lds    ecx,FWORD PTR [si-0x36]
  416931:	xchg   ebp,eax
  416932:	das    
  416933:	fiadd  WORD PTR ds:0xc9667ee3
  416939:	cmp    BYTE PTR [edx+0x32],cl
  41693c:	stos   BYTE PTR es:[edi],al
  41693d:	les    ebp,FWORD PTR [ecx-0x76]
  416940:	cwde   
  416941:	xchg   esi,eax
  416942:	mov    edi,0xcce4698e
  416947:	xor    al,0xf1
  416949:	and    dl,ah
  41694b:	xor    ecx,edx
  41694d:	dec    ecx
  41694e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694f:	or     BYTE PTR [edx-0x68],0xd7
  416953:	pop    ss
  416954:	inc    WORD PTR [eax-0x78]
  416958:	mov    ds:0x22cc23f3,eax
  41695d:	loope  0x4169ac
  41695f:	inc    ebx
  416960:	pusha  
  416961:	shr    DWORD PTR [eax],cl
  416963:	sub    dl,BYTE PTR [esi-0x46]
  416966:	sub    ecx,edx
  416968:	lea    ebp,[ebp-0x3c38fd5c]
  41696e:	sbb    al,0xd9
  416970:	and    BYTE PTR [ebp+0x6cad1151],ch
  416976:	int3   
  416977:	add    BYTE PTR [eax+0x6669e7dc],dh
  41697d:	or     al,0xe6
  41697f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416980:	sub    ah,BYTE PTR es:[bx+si+0x3]
  416985:	inc    esp
  416986:	and    ebp,DWORD PTR [ebx]
  416988:	jmp    0x41696a
  41698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698b:	jmp    0x4169b9
  41698d:	lds    esp,FWORD PTR [edi-0x2d]
  416990:	mov    dl,0x7b
  416992:	sub    eax,0x7fe6626e
  416997:	mov    al,ds:0x318c2b1d
  41699c:	out    0xdd,al
  41699e:	stos   DWORD PTR es:[edi],eax
  41699f:	scas   eax,DWORD PTR es:[edi]
  4169a0:	cmp    ch,BYTE PTR [esp+edi*4-0x79c3a61b]
  4169a7:	jle    0x416a1c
  4169a9:	jmp    0xe489cca6
  4169ae:	out    0xb5,eax
  4169b0:	xchg   esi,eax
  4169b1:	mov    esi,0x2b2285f0
  4169b6:	ins    DWORD PTR es:[edi],dx
  4169b7:	ins    BYTE PTR es:[edi],dx
  4169b8:	aad    0x67
  4169ba:	xchg   ebx,eax
  4169bb:	push   es
  4169bc:	je     0x41694e
  4169be:	jb     0x41694b
  4169c0:	jne    0x4169e4
  4169c2:	(bad)  
  4169c4:	es xor al,0xdd
  4169c7:	sbb    al,0xb3
  4169c9:	jl     0x416a0f
  4169cb:	mov    dh,0x88
  4169cd:	xor    bh,cl
  4169cf:	cli    
  4169d0:	mov    eax,0x9697fb2c
  4169d5:	leave  
  4169d6:	loopne 0x4169d4
  4169d8:	dec    edx
  4169d9:	xor    al,0x20
  4169db:	shr    BYTE PTR [ebp+edi*2-0x40db8411],cl
  4169e2:	add    edx,DWORD PTR [eax]
  4169e4:	loop   0x4169c7
  4169e6:	and    ebp,DWORD PTR [esi+esi*8]
  4169e9:	cli    
  4169ea:	or     esp,DWORD PTR [edi-0x7d]
  4169ed:	sbb    al,0xd
  4169ef:	nop
  4169f0:	xor    DWORD PTR [edi+0x72],0x95552c94
  4169f7:	loopne 0x416a6f
  4169f9:	adc    BYTE PTR [ebx],dh
  4169fb:	outs   dx,DWORD PTR ds:[esi]
  4169fc:	xor    BYTE PTR [eax+edx*8],dh
  4169ff:	cmp    ebp,DWORD PTR [eax]
  416a01:	addr16 into 
  416a03:	mov    ds:0xa9a94d91,al
  416a08:	ret    0x3dc1
  416a0b:	mov    edx,0x72982277
  416a10:	push   eax
  416a11:	(bad)  
  416a12:	js     0x4169e4
  416a14:	mov    dh,0xee
  416a16:	xchg   edi,eax
  416a17:	mov    bh,0x82
  416a19:	sub    BYTE PTR [edx-0xe],dh
  416a1c:	jno    0x416a7a
  416a1e:	out    0x39,al
  416a20:	aam    0x51
  416a22:	std    
  416a23:	daa    
  416a24:	and    eax,0xe772c742
  416a29:	push   ebp
  416a2a:	(bad)  
  416a2b:	je     0x416a92
  416a2d:	jmp    FWORD PTR gs:[eax]
  416a30:	rcr    DWORD PTR [eax+0x4207c753],0x77
  416a37:	into   
  416a38:	lods   eax,DWORD PTR ss:[esi]
  416a3a:	sbb    eax,0xbf332db2
  416a3f:	iret   
  416a40:	shl    DWORD PTR ds:0x75e97015,0xc0
  416a47:	data16 (bad) 
  416a49:	not    al
  416a4b:	and    edx,DWORD PTR [edi-0x5f]
  416a4e:	out    0x21,eax
  416a50:	ret    
  416a51:	or     BYTE PTR [esi+edi*2+0x6],ch
  416a55:	retf   
  416a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a57:	cmp    al,0xf8
  416a59:	mov    bh,BYTE PTR ss:[ecx]
  416a5c:	js     0x416ab8
  416a5e:	sub    al,0x73
  416a60:	scas   al,BYTE PTR es:[edi]
  416a61:	mov    dh,0x28
  416a63:	mov    edx,0xc86f7fe5
  416a68:	pusha  
  416a69:	xchg   dl,ch
  416a6b:	pop    ecx
  416a6c:	xchg   ebx,eax
  416a6d:	mov    edx,0x922c89f5
  416a72:	sbb    esi,esp
  416a74:	retf   
  416a75:	addr16 in eax,dx
  416a77:	and    BYTE PTR [edx+0x2],dl
  416a7a:	push   0x2e
  416a7c:	call   0x43e6f9aa
  416a81:	jnp    0x416a42
  416a83:	fwait
  416a84:	js     0x416b01
  416a86:	and    ebx,edi
  416a88:	lods   al,BYTE PTR ds:[esi]
  416a89:	(bad)  
  416a8a:	aas    
  416a8b:	push   0x5b
  416a8d:	hlt    
  416a8e:	and    bl,BYTE PTR [ebx-0x1]
  416a91:	pop    ecx
  416a92:	jno    0x416a56
  416a94:	adc    BYTE PTR [ecx],bl
  416a96:	outs   dx,BYTE PTR ds:[esi]
  416a97:	cs cmc 
  416a99:	and    DWORD PTR [esi+0x8],ebx
  416a9c:	adc    eax,0x1441e9f7
  416aa1:	mov    edx,0x6769e6e2
  416aa6:	test   al,0x4d
  416aa8:	fs in  al,0x7f
  416aab:	pop    esi
  416aac:	mov    ebp,0x43e098b0
  416ab1:	sbb    edi,DWORD PTR ss:[ebx-0x62]
  416ab5:	data16 sub bl,BYTE PTR ds:0x2eba7cdf
  416abc:	adc    al,0x97
  416abe:	sub    al,0xb1
  416ac0:	dec    edx
  416ac1:	xlat   BYTE PTR ds:[ebx]
  416ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ac3:	jne    0x416a7a
  416ac5:	mov    DWORD PTR [edx+0x46],ebx
  416ac8:	fcomp  DWORD PTR [eax+0x78169fd1]
  416ace:	lea    ebx,[ebx+0x5edb0961]
  416ad4:	xor    BYTE PTR [eax-0x54],dl
  416ad7:	mov    ah,0xcb
  416ad9:	xor    DWORD PTR ds:0xb198d1ab,0xffffffd4
  416ae0:	dec    eax
  416ae1:	pop    eax
  416ae2:	mov    eax,0x68f09020
  416ae7:	xchg   edi,eax
  416ae8:	idiv   BYTE PTR [edi-0x1719c665]
  416aee:	sbb    cl,BYTE PTR [ebx-0x4b7cb1e7]
  416af4:	(bad)  
  416af5:	mov    ch,0xc1
  416af7:	jp     0x416add
  416af9:	xor    ah,BYTE PTR [ebx+0x47]
  416afc:	jle    0x416b66
  416afe:	push   eax
  416aff:	shl    BYTE PTR [ecx-0x356dae72],0x8
  416b06:	outs   dx,BYTE PTR ds:[esi]
  416b07:	enter  0x9fd5,0x69
  416b0b:	(bad)  
  416b0c:	dec    esp
  416b0d:	loope  0x416ae7
  416b0f:	mov    eax,ebp
  416b11:	hlt    
  416b12:	cli    
  416b13:	adc    ah,bl
  416b15:	ret    0x6338
  416b18:	mov    dl,0xa7
  416b1a:	xor    edx,DWORD PTR [ebx-0x422d7c14]
  416b20:	fstp   QWORD PTR [esi]
  416b22:	in     al,dx
  416b23:	push   ds
  416b24:	jle    0x416b67
  416b26:	ret    
  416b27:	inc    ebx
  416b28:	mov    al,0xe6
  416b2a:	fdiv   QWORD PTR [eax+0x25]
  416b2d:	mov    ch,0xee
  416b2f:	cmp    DWORD PTR [edi],esp
  416b31:	mov    al,0xcd
  416b33:	mov    edx,0xfbf0c8fb
  416b38:	push   0x94473045
  416b3d:	clc    
  416b3e:	push   ss
  416b3f:	xchg   ebp,eax
  416b40:	cld    
  416b41:	hlt    
  416b42:	cmp    cl,BYTE PTR [edi+0x4e729f4b]
  416b48:	data16 (bad) 
  416b4a:	fsub   DWORD PTR [eax-0x373580c2]
  416b50:	out    0x11,al
  416b52:	xlat   BYTE PTR ds:[ebx]
  416b53:	mov    ch,BYTE PTR [edx+0x1d3ef55d]
  416b59:	xchg   ebx,eax
  416b5a:	add    eax,0x852d1905
  416b5f:	sbb    al,0x20
  416b61:	and    BYTE PTR [esi+0x74f75a08],ch
  416b67:	lea    edi,[esi-0x29]
  416b6a:	inc    esp
  416b6b:	adc    DWORD PTR [ebx+0x769825b0],eax
  416b71:	and    al,0xab
  416b73:	cmp    eax,ebp
  416b75:	call   0xc3996f17
  416b7a:	enter  0xda8,0x44
  416b7e:	fisttp QWORD PTR [eax]
  416b80:	std    
  416b81:	popf   
  416b82:	aaa    
  416b83:	(bad)  [ecx-0x285a81c4]
  416b89:	push   es
  416b8a:	jo     0x416bb8
  416b8c:	jle    0x416b6b
  416b8e:	xchg   edx,eax
  416b8f:	scas   al,BYTE PTR es:[edi]
  416b90:	stc    
  416b91:	jo     0x416bbf
  416b93:	add    BYTE PTR [ebx],ah
  416b95:	sbb    ah,BYTE PTR [edi]
  416b97:	dec    esi
  416b98:	bound  ecx,QWORD PTR [edi+0x3bd5909b]
  416b9e:	mov    dh,0xdf
  416ba0:	and    al,0xc0
  416ba2:	mov    bh,0x1d
  416ba4:	push   0xffffffc1
  416ba6:	mov    eax,es
  416ba8:	lods   al,BYTE PTR ds:[esi]
  416ba9:	imul   ecx,DWORD PTR [ebp+edi*4-0x41792e01],0x2752ef82
  416bb4:	xor    ebx,DWORD PTR [ebx]
  416bb6:	(bad)  
  416bb7:	sub    edx,ebp
  416bb9:	lock xor ebx,DWORD PTR [edi-0x13]
  416bbd:	xchg   BYTE PTR [eax],bh
  416bbf:	repnz add DWORD PTR [edi-0xe],ebp
  416bc3:	(bad)  
  416bc4:	xchg   ecx,eax
  416bc5:	into   
  416bc6:	bound  edx,QWORD PTR [ebp-0x3b9832a2]
  416bcc:	test   eax,0x7f4a5d9d
  416bd1:	xchg   esp,eax
  416bd2:	(bad)  
  416bd3:	mov    ah,0xb2
  416bd5:	retf   0xa6d9
  416bd8:	push   ss
  416bd9:	ja     0x416bbb
  416bdb:	pop    edi
  416bdc:	popf   
  416bdd:	pop    ss
  416bde:	and    ch,al
  416be0:	push   eax
  416be1:	fidiv  WORD PTR [ebp-0x1a1f605a]
  416be7:	add    al,0xe9
  416be9:	into   
  416bea:	ret    0xddb8
  416bed:	jno    0x416c40
  416bef:	xchg   ebx,eax
  416bf0:	call   0x7a1a37db
  416bf5:	mov    eax,ds:0x5177aec9
  416bfa:	add    al,0x55
  416bfc:	jns    0x416c0a
  416bfe:	add    ch,ch
  416c00:	std    
  416c01:	push   ds
  416c02:	push   ebp
  416c03:	out    dx,eax
  416c04:	cmp    eax,0xb386462b
  416c09:	push   ecx
  416c0a:	outs   dx,BYTE PTR ds:[esi]
  416c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c0c:	(bad)  
  416c0d:	pusha  
  416c0e:	add    al,0x1a
  416c10:	sahf   
  416c11:	outs   dx,BYTE PTR ds:[esi]
  416c12:	js     0x416c8a
  416c14:	jmp    0xf8c3:0x32e6a6b3
  416c1b:	bound  ecx,QWORD PTR [eax]
  416c1d:	stos   DWORD PTR es:[edi],eax
  416c1e:	rcr    dh,0x4e
  416c21:	jecxz  0x416c73
  416c23:	add    ecx,edx
  416c25:	mov    esi,0x61274f65
  416c2a:	out    dx,eax
  416c2b:	imul   esp,DWORD PTR [eax+0x3b],0x7e
  416c2f:	push   edx
  416c30:	dec    edi
  416c31:	mov    ecx,0x5cf8d395
  416c36:	(bad)  
  416c37:	pop    esp
  416c38:	loope  0x416c36
  416c3a:	retf   0xc89e
  416c3d:	sbb    al,0xb4
  416c3f:	lock sub al,0x9c
  416c42:	xor    DWORD PTR [edi],ebp
  416c44:	cmp    DWORD PTR [ebp-0x2e],0xffffffb1
  416c48:	into   
  416c49:	jae    0x416bd4
  416c4b:	(bad)  
  416c4c:	pop    edi
  416c4d:	inc    esp
  416c4e:	test   eax,0xbf97820c
  416c53:	mov    es,WORD PTR [eax+0x240bdb25]
  416c59:	jge    0x416c45
  416c5b:	popa   
  416c5c:	add    BYTE PTR [edx],bh
  416c5e:	push   edx
  416c5f:	cmp    ebp,ebx
  416c61:	aad    0xa9
  416c63:	repnz pop edx
  416c65:	xor    BYTE PTR [ebp+0x3f],al
  416c68:	adc    cl,al
  416c6a:	mov    ah,0x30
  416c6c:	in     al,0xa9
  416c6e:	(bad)  
  416c6f:	lock lods al,BYTE PTR gs:[esi]
  416c72:	enter  0x1771,0x7a
  416c76:	xor    al,0x81
  416c78:	adc    ch,bl
  416c7a:	call   0xf60f273d
  416c7f:	xor    cl,bh
  416c81:	inc    edi
  416c82:	lods   al,BYTE PTR ds:[esi]
  416c83:	fsub   st,st(2)
  416c85:	mov    edx,0xed6ce926
  416c8a:	inc    esp
  416c8b:	and    ebx,DWORD PTR [esi-0x41b4804]
  416c91:	nop
  416c92:	push   edi
  416c93:	enter  0x503b,0xfb
  416c97:	mov    ch,0x94
  416c99:	in     eax,dx
  416c9a:	or     al,cl
  416c9c:	sar    BYTE PTR [edi],0xe6
  416c9f:	ret    
  416ca0:	imul   eax,DWORD PTR [esi],0x538d920
  416ca6:	jnp    0x416ce7
  416ca8:	add    DWORD PTR [edx-0x64],ecx
  416cab:	mov    cl,0x0
  416cad:	push   ecx
  416cae:	jge    0x416c56
  416cb0:	lahf   
  416cb1:	adc    esi,DWORD PTR [ebx+edi*2-0x3b]
  416cb5:	daa    
  416cb6:	popf   
  416cb7:	outs   dx,DWORD PTR ds:[esi]
  416cb8:	and    ebp,DWORD PTR [ebx+0x2c]
  416cbb:	in     al,0x4e
  416cbd:	sbb    ecx,eax
  416cbf:	mov    dl,0x5
  416cc1:	add    cl,bl
  416cc3:	ja     0x416d30
  416cc5:	dec    edx
  416cc6:	or     al,0xf2
  416cc8:	sbb    eax,0x3b056d49
  416ccd:	cdq    
  416cce:	hlt    
  416ccf:	sub    eax,0xbdbfd294
  416cd4:	pop    ds
  416cd5:	out    0x71,eax
  416cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd8:	or     edi,DWORD PTR [edi]
  416cda:	sbb    BYTE PTR [eax],dh
  416cdc:	lods   eax,DWORD PTR ds:[esi]
  416cdd:	adc    BYTE PTR [esi-0x44],dl
  416ce0:	cmp    dh,BYTE PTR [eax]
  416ce2:	adc    ch,bh
  416ce4:	mov    esi,0x54b6d046
  416ce9:	call   0xefac:0x685ecfa2
  416cf0:	cld    
  416cf1:	push   edi
  416cf2:	icebp  
  416cf3:	call   0xa829:0xe80cdbb0
  416cfa:	lock add ebp,eax
  416cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cfe:	fild   DWORD PTR [ebp-0x3e]
  416d01:	xchg   BYTE PTR [ebx],al
  416d03:	pop    edi
  416d04:	test   DWORD PTR ds:0x4669ce47,ebx
  416d0a:	jne    0x416d18
  416d0c:	clc    
  416d0d:	mov    dh,0x26
  416d0f:	ret    0xde24
  416d12:	(bad)  
  416d13:	loop   0x416d68
  416d15:	std    
  416d16:	inc    eax
  416d17:	inc    ebx
  416d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d19:	data16 stos BYTE PTR es:[edi],al
  416d1b:	arpl   si,si
  416d1d:	mov    edx,0x49f71cc6
  416d22:	adc    BYTE PTR [ebp-0xf0b7430],dh
  416d28:	loop   0x416d3c
  416d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d2b:	push   esi
  416d2c:	popa   
  416d2d:	fidiv  DWORD PTR [ebx]
  416d2f:	or     DWORD PTR [eax],esp
  416d31:	loope  0x416da9
  416d33:	jns    0x416cbb
  416d35:	ret    0x6355
  416d38:	fld    QWORD PTR [ebx+0x4d]
  416d3b:	dec    ebx
  416d3c:	jge    0x416ce9
  416d3e:	xor    BYTE PTR [edi],0x7d
  416d41:	and    eax,0xf4bbfef2
  416d46:	mov    al,BYTE PTR [edx]
  416d48:	gs loope 0x416d2f
  416d4b:	push   esp
  416d4c:	nop
  416d4d:	add    BYTE PTR [esi+0x5d664467],bh
  416d53:	add    al,0x62
  416d55:	dec    ebp
  416d56:	xor    bh,BYTE PTR [esi-0x6443ce4e]
  416d5c:	icebp  
  416d5d:	and    BYTE PTR [edx+edi*2],0x24
  416d61:	test   eax,0xfa4de1cd
  416d66:	push   0xffebba98
  416d6b:	jns    0x416d96
  416d6d:	aam    0xbd
  416d6f:	inc    esi
  416d70:	loopne 0x416d9d
  416d72:	and    ch,ch
  416d74:	xchg   edx,eax
  416d75:	pop    eax
  416d76:	out    0x7d,eax
  416d78:	adc    bh,BYTE PTR [edi+edx*8+0x53]
  416d7c:	jcxz   0x416dab
  416d7f:	sbb    BYTE PTR [ebp+0x36aacdf7],dh
  416d85:	aaa    
  416d86:	(bad)  
  416d87:	iret   
  416d88:	cmp    esp,DWORD PTR [eax+0x1337db04]
  416d8e:	lods   eax,DWORD PTR ds:[esi]
  416d8f:	jae    0x416d49
  416d91:	sbb    al,0x21
  416d93:	xor    bl,0x4b
  416d96:	xchg   ebx,eax
  416d97:	jg     0x416ded
  416d99:	bound  ecx,QWORD PTR [ecx]
  416d9b:	fcomp  QWORD PTR [ecx+0x41f815bd]
  416da1:	or     BYTE PTR [edi],cl
  416da3:	es (bad) 
  416da6:	xor    eax,DWORD PTR [eax+ebp*4-0x5d1a55db]
  416dad:	in     al,dx
  416dae:	int    0x19
  416db0:	int    0xf8
  416db2:	shl    BYTE PTR [ecx-0x513304b2],0xcd
  416db9:	or     eax,0x471a81ff
  416dbe:	leave  
  416dbf:	xchg   esi,eax
  416dc1:	hlt    
  416dc2:	retf   
  416dc3:	jmp    0x416d5c
  416dc5:	lods   eax,DWORD PTR ds:[esi]
  416dc6:	or     al,0x61
  416dc8:	jnp    0x416dfa
  416dca:	loop   0x416e4b
  416dcc:	ja     0x416de9
  416dce:	push   ecx
  416dcf:	scas   eax,DWORD PTR es:[edi]
  416dd0:	int    0x76
  416dd2:	sbb    ebx,DWORD PTR [ecx-0x47]
  416dd5:	js     0x416d7b
  416dd7:	jmp    0xed3792c4
  416ddc:	pop    ecx
  416ddd:	lahf   
  416dde:	mov    eax,0x791dad35
  416de3:	xor    al,0xe7
  416de5:	arpl   WORD PTR [ebp+edx*2+0x10],si
  416de9:	sub    edx,DWORD PTR [eax-0x4e514147]
  416def:	fmul   QWORD PTR [edx]
  416df1:	ret    
  416df2:	inc    ebx
  416df3:	rol    DWORD PTR ds:0x974a24a,cl
  416df9:	fcmovnu st,st(1)
  416dfb:	xchg   edx,eax
  416dfc:	xor    eax,0xefcfcf3b
  416e01:	retf   0xa80b
  416e04:	div    DWORD PTR [esp+esi*2+0x4c]
  416e08:	adc    bl,cl
  416e0a:	popa   
  416e0b:	scas   al,BYTE PTR es:[edi]
  416e0c:	xchg   DWORD PTR [ecx+0x71ff5e],edx
  416e12:	push   eax
  416e13:	jmp    0x416e45
  416e15:	add    eax,DWORD PTR [ecx+esi*2+0x15b7ba2f]
  416e1c:	das    
  416e1d:	cmp    esp,eax
  416e1f:	(bad)  
  416e20:	xchg   esp,eax
  416e21:	fcmovnu st,st(3)
  416e23:	mov    al,0xfd
  416e25:	lahf   
  416e26:	cmp    BYTE PTR [edx-0x15],bl
  416e29:	in     al,dx
  416e2a:	pop    ebx
  416e2b:	mov    ah,0xa4
  416e2d:	mov    eax,0x52b0246a
  416e32:	stc    
  416e33:	(bad)  
  416e34:	xor    al,BYTE PTR [edx-0x25]
  416e37:	aam    0x2b
  416e39:	imul   DWORD PTR [ebx]
  416e3b:	out    0x78,al
  416e3d:	xor    DWORD PTR [ecx],edx
  416e3f:	sbb    al,0xdd
  416e41:	dec    esp
  416e42:	or     al,0xc2
  416e44:	das    
  416e45:	sub    al,0xd6
  416e47:	lea    edx,[edi-0x47]
  416e4a:	test   eax,0xa65beaaf
  416e4f:	aad    0x51
  416e51:	fdivr  DWORD PTR [esi]
  416e53:	imul   edi,DWORD PTR [eax+0x10],0xa63dff37
  416e5a:	adc    ebx,DWORD PTR [ebx-0x6b]
  416e5d:	ret    
  416e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e5f:	ds call 0xe861:0x6ff7ddfd
  416e67:	scas   al,BYTE PTR es:[edi]
  416e68:	std    
  416e69:	ins    BYTE PTR es:[edi],dx
  416e6a:	cmp    BYTE PTR [ebx-0xc],cl
  416e6d:	xchg   edx,eax
  416e6e:	jmp    0xb2d4:0x837bb734
  416e75:	xor    esi,DWORD PTR [ecx]
  416e77:	lea    esp,[edi+edi*8]
  416e7a:	mov    esp,?
  416e7c:	pop    edi
  416e7d:	test   ebp,0x1b6d6db8
  416e83:	(bad)  
  416e84:	fsub   QWORD PTR [ebp+0x284b636a]
  416e8a:	bnd jmp 0xef1710a6
  416e90:	lods   al,BYTE PTR ds:[esi]
  416e91:	fimul  DWORD PTR [edx]
  416e93:	ficom  DWORD PTR [esi]
  416e95:	cmp    al,0x6c
  416e97:	(bad)  
  416e98:	mov    ecx,0xf37cf465
  416e9d:	jno    0x416f1e
  416e9f:	int    0xfe
  416ea1:	out    dx,eax
  416ea2:	xchg   ebp,eax
  416ea3:	mov    edi,0xea80f9ee
  416ea8:	outs   dx,BYTE PTR ds:[esi]
  416ea9:	adc    BYTE PTR [edx],al
  416eab:	mov    dh,0x37
  416ead:	aam    0x4a
  416eaf:	xchg   bh,ah
  416eb1:	adc    al,0x2
  416eb3:	je     0x416eaf
  416eb5:	jmp    0x4aa8:0xb1a3a5d0
  416ebc:	jnp    0x416e66
  416ebe:	cmc    
  416ebf:	fwait
  416ec0:	stos   DWORD PTR es:[edi],eax
  416ec1:	push   edx
  416ec2:	fnsetpm(287 only) 
  416ec4:	call   0x3583:0x6ef8df90
  416ecb:	inc    eax
  416ecc:	loop   0x416e67
  416ece:	mov    al,ch
  416ed0:	cwde   
  416ed1:	jo     0x416edb
  416ed3:	mov    eax,0x413add09
  416ed8:	aam    0x51
  416eda:	je     0x416f42
  416edc:	adc    edi,DWORD PTR [ecx+0x2a0a5e6f]
  416ee2:	ret    0xc462
  416ee5:	sub    esp,edi
  416ee7:	pop    ds
  416ee8:	test   BYTE PTR [edx],bl
  416eea:	cld    
  416eeb:	adc    BYTE PTR ds:0xa717e195,ch
  416ef1:	mov    al,BYTE PTR [ebx]
  416ef3:	sti    
  416ef4:	ja     0x416eb6
  416ef6:	cmp    ecx,DWORD PTR [eax-0x15]
  416ef9:	dec    esi
  416efa:	or     eax,0xdf88de28
  416eff:	cld    
  416f00:	push   ecx
  416f01:	bound  ebx,QWORD PTR [ebx-0x7a5ad20e]
  416f07:	or     BYTE PTR [eax+ecx*2-0xb],ch
  416f0b:	push   esp
  416f0c:	mov    bh,0x26
  416f0e:	xor    al,0xff
  416f10:	sti    
  416f11:	aas    
  416f12:	mov    ah,0x71
  416f14:	stos   BYTE PTR es:[edi],al
  416f15:	cli    
  416f16:	mov    dh,dh
  416f18:	fld    st(4)
  416f1a:	loopne 0x416f09
  416f1c:	mov    dh,0x5f
  416f1e:	dec    edx
  416f1f:	fisub  WORD PTR ds:[edx+0x7a7dba69]
  416f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f28:	mov    ds:0xccb68318,eax
  416f2d:	mov    al,0x3c
  416f2f:	adc    dh,BYTE PTR [edx+0xb]
  416f32:	jae    0x416f15
  416f34:	xchg   esp,eax
  416f35:	iret   
  416f36:	xchg   DWORD PTR [edx],edi
  416f38:	and    BYTE PTR [ebp+0x2],cl
  416f3b:	lahf   
  416f3c:	push   edx
  416f3d:	unpcklps xmm1,XMMWORD PTR [ebx+0x492f0075]
  416f44:	xlat   BYTE PTR ds:[ebx]
  416f45:	pop    ecx
  416f46:	mov    ebx,0x6a151493
  416f4b:	jno    0x416f76
  416f4d:	add    eax,0x83de0a7c
  416f52:	xchg   esi,eax
  416f53:	push   esi
  416f54:	fwait
  416f55:	sub    ebp,DWORD PTR [edx]
  416f57:	nop
  416f58:	pop    esp
  416f59:	jle    0x416f0f
  416f5b:	push   0x1d
  416f5d:	inc    edi
  416f5e:	std    
  416f5f:	rol    DWORD PTR [esi-0x1f1e7831],cl
  416f65:	lahf   
  416f66:	sub    edi,DWORD PTR [edx-0x5926f405]
  416f6c:	mov    esi,0xccf38aab
  416f71:	imul   edi,DWORD PTR [eax],0x8caf6d9
  416f77:	int    0x7c
  416f79:	mov    al,ds:0xedaeb07d
  416f7e:	mov    edi,0xef09f974
  416f83:	lods   al,BYTE PTR ds:[esi]
  416f84:	pusha  
  416f85:	popf   
  416f86:	add    eax,0x405789a0
  416f8b:	mov    cl,0xca
  416f8d:	popf   
  416f8e:	jmp    0x416ffb
  416f90:	pop    ss
  416f91:	aas    
  416f92:	sbb    al,0x7c
  416f94:	sub    eax,0x60d5b78a
  416f99:	pop    esp
  416f9a:	retf   
  416f9b:	lods   al,BYTE PTR ds:[esi]
  416f9c:	mov    dh,BYTE PTR [esi]
  416f9e:	and    al,0x75
  416fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa1:	out    dx,al
  416fa2:	in     eax,0xb3
  416fa4:	jmp    0x52dc:0x472ba9a
  416fab:	pop    ds
  416fac:	xchg   DWORD PTR ds:0x7eca6f8c,esp
  416fb2:	push   ss
  416fb3:	jbe    0x416f9d
  416fb5:	in     eax,dx
  416fb6:	retf   0xb0ca
  416fb9:	sbb    al,0xe1
  416fbb:	cwde   
  416fbc:	out    dx,eax
  416fbd:	(bad)
  416fc0:	stos   BYTE PTR es:[edi],al
  416fc1:	iret   
  416fc2:	and    eax,0xdfa3cfaa
  416fc7:	mov    bl,0x21
  416fc9:	add    esi,ebp
  416fcb:	xchg   edi,eax
  416fcc:	xchg   edi,eax
  416fcd:	repz cli 
  416fcf:	(bad)  
  416fd0:	fstp   QWORD PTR [esi-0x12]
  416fd3:	(bad)  
  416fd5:	(bad)  
  416fd6:	sub    BYTE PTR [edx],cl
  416fd8:	lock stc 
  416fda:	dec    eax
  416fdb:	(bad)  
  416fdc:	retf   0x8d9e
  416fdf:	in     eax,0xbd
  416fe1:	and    dh,BYTE PTR [eax]
  416fe3:	mov    ecx,0xef6a8fe2
  416fe8:	ins    DWORD PTR es:[edi],dx
  416fe9:	sub    DWORD PTR [edi+esi*2+0x2fed23cc],edi
  416ff0:	clc    
  416ff1:	sbb    ebp,esp
  416ff3:	in     al,0x28
  416ff5:	sub    eax,edi
  416ff7:	mov    esp,0xef8d8e5f
  416ffc:	mov    eax,0x1db776ce
  417001:	and    eax,0x64150031
  417006:	js     0x416f8b
  417008:	dec    esp
  417009:	adc    al,BYTE PTR [ebp+ecx*4-0x6b]
  41700d:	and    DWORD PTR [ebp+0x16cd74a6],0xd5d16d2e
  417017:	out    dx,al
  417018:	imul   esp,DWORD PTR [edi],0xfb7f4d27
  41701e:	mov    ecx,0x511ef01
  417023:	loop   0x417056
  417025:	xchg   ebp,eax
  417026:	and    edx,esi
  417028:	push   edi
  417029:	iret   
  41702a:	rol    DWORD PTR [edi+0xaa08895],1
  417030:	or     DWORD PTR [ebx-0x70bceb22],esi
  417036:	cmp    bl,BYTE PTR [ecx-0x56]
  417039:	and    BYTE PTR [ebx],bh
  41703b:	and    al,0x93
  41703d:	pop    es
  41703e:	int    0x94
  417040:	jo     0x417074
  417042:	adc    bl,bl
  417044:	into   
  417045:	xchg   BYTE PTR [edi+0x5c],ch
  417048:	push   ecx
  417049:	bound  edi,QWORD PTR [eax-0x42]
  41704c:	(bad)  
  41704d:	nop
  41704e:	stos   BYTE PTR es:[edi],al
  41704f:	mov    dl,0xe4
  417051:	stos   DWORD PTR es:[edi],eax
  417052:	lea    edi,[eax+0x6e]
  417055:	adc    al,0xcb
  417057:	or     al,0xf
  417059:	cwde   
  41705a:	adc    eax,0x5e73bc26
  41705f:	sub    bl,dh
  417061:	push   0x5a
  417063:	add    esi,ecx
  417065:	pusha  
  417066:	ins    BYTE PTR es:[edi],dx
  417067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417068:	adc    BYTE PTR [edi+0xf71bff6],dh
  41706e:	cmp    eax,0xec2b051b
  417073:	shl    BYTE PTR [ebp+0x4c02a8a5],1
  417079:	and    bl,BYTE PTR [edx-0x45]
  41707c:	daa    
  41707d:	and    al,BYTE PTR [ecx-0x5e]
  417080:	loop   0x4170fd
  417082:	call   0xc6fc:0x508b0dfe
  417089:	and    eax,0x64839701
  41708e:	ins    DWORD PTR es:[edi],dx
  41708f:	xchg   esi,eax
  417090:	repz js 0x417024
  417093:	or     edx,ebp
  417095:	jg     0x4170cf
  417097:	mov    BYTE PTR [esi-0x16],dl
  41709a:	pop    eax
  41709b:	mov    ch,0x9a
  41709d:	out    dx,al
  41709e:	cmp    al,0x7e
  4170a0:	loopne 0x41708c
  4170a2:	dec    esp
  4170a3:	les    edi,FWORD PTR [edi-0x20a90ee3]
  4170a9:	cmp    DWORD PTR [edi-0x64e387a],esi
  4170af:	popa   
  4170b0:	retf   
  4170b1:	jl     0x4170ba
  4170b3:	les    ecx,FWORD PTR [edx-0x571fba9c]
  4170b9:	sub    al,0x8d
  4170bb:	or     ecx,ebp
  4170bd:	ret    
  4170be:	bound  edx,QWORD PTR [ebx-0x5d]
  4170c1:	mov    DWORD PTR [esi+0x2965d91d],esi
  4170c7:	mov    ah,0x9d
  4170c9:	fwait
  4170ca:	in     al,0xaa
  4170cc:	xchg   edx,eax
  4170ce:	mov    al,0x95
  4170d0:	rcr    BYTE PTR [edi+0x55],cl
  4170d3:	inc    esi
  4170d4:	mov    ebx,DWORD PTR [edx-0x193639b0]
  4170da:	dec    eax
  4170db:	sub    dh,dh
  4170dd:	leave  
  4170de:	js     0x4170cc
  4170e0:	pop    DWORD PTR [ecx-0x3cf6986a]
  4170e6:	xor    al,0x2b
  4170e8:	fstp   st(3)
  4170ea:	mov    ch,0xc4
  4170ec:	dec    edx
  4170ed:	(bad)  
  4170ee:	aad    0x52
  4170f0:	xor    eax,DWORD PTR [ecx]
  4170f2:	fwait
  4170f3:	(bad)  
  4170f4:	ror    BYTE PTR [edi-0x6e9ccac7],cl
  4170fa:	and    ah,BYTE PTR [eax-0x26]
  4170fd:	add    edi,DWORD PTR [edi]
  4170ff:	mov    dl,BYTE PTR [ebp+0x43d45c05]
  417105:	and    eax,0xdf84f9a7
  41710a:	jnp    0x4170eb
  41710c:	loop   0x4170b5
  41710e:	das    
  41710f:	mov    ah,0x9d
  417111:	jecxz  0x417124
  417113:	in     eax,0x56
  417115:	inc    edx
  417116:	mov    WORD PTR [ebx+0x2719377a],fs
  41711c:	aam    0x7d
  41711e:	jae    0x4170c3
  417120:	xor    bl,0x52
  417123:	mov    BYTE PTR [ebp+eax*2-0x3c7a865c],dh
  41712a:	and    BYTE PTR [edx],ah
  41712c:	mov    ah,0xe6
  41712e:	sbb    DWORD PTR [edi+0x3afebaf8],edx
  417134:	sbb    DWORD PTR [ecx],esi
  417136:	xor    eax,0x6345b5bc
  41713b:	ins    BYTE PTR es:[edi],dx
  41713c:	mov    eax,0xdc99ce23
  417141:	sar    BYTE PTR [ebx+0x31],0xaa
  417145:	mov    gs,WORD PTR [esi]
  417147:	xor    DWORD PTR [eax+esi*2+0x4db09e67],ecx
  41714e:	pop    ebx
  41714f:	jo     0x4170d8
  417151:	mov    ch,0x5
  417153:	xor    al,0x22
  417155:	retf   
  417156:	cmp    al,BYTE PTR [edx]
  417158:	mov    dl,0x48
  41715a:	cdq    
  41715b:	sub    al,BYTE PTR [edx]
  41715d:	iret   
  41715e:	rcl    DWORD PTR [ecx-0x14],0x3b
  417162:	ja     0x417160
  417164:	ins    DWORD PTR es:[edi],dx
  417165:	lock jl 0x41714e
  417168:	jnp    0x417107
  41716a:	dec    ecx
  41716b:	mov    al,ds:0x130661df
  417170:	fmul   QWORD PTR [edi+ebp*2]
  417173:	in     al,0xfd
  417175:	xchg   esp,eax
  417176:	add    dl,BYTE PTR [esi-0x534db974]
  41717c:	jp     0x417131
  41717e:	sub    al,0x85
  417180:	bound  esp,QWORD PTR [edx]
  417182:	add    eax,0x943c54b3
  417187:	repnz and edi,ebp
  41718a:	(bad)  
  41718b:	push   ss
  41718c:	sub    dl,bl
  41718e:	xchg   DWORD PTR ds:[eax+0x224d467b],edx
  417195:	outs   dx,DWORD PTR ds:[esi]
  417196:	cld    
  417197:	sar    DWORD PTR [esi],1
  417199:	cmp    esi,DWORD PTR [ecx-0x1c]
  41719c:	sbb    DWORD PTR [esi-0x3b],esi
  41719f:	inc    esi
  4171a0:	frstor [eax]
  4171a2:	and    DWORD PTR [ebx+0x1c],esi
  4171a5:	fisub  DWORD PTR [ebx+0x2a8e9362]
  4171ab:	jl     0x41722b
  4171ad:	sub    al,dl
  4171af:	dec    ebp
  4171b0:	or     ecx,DWORD PTR [edi]
  4171b2:	jae    0x4171dc
  4171b4:	mov    eax,0xd5512aaf
  4171b9:	outs   dx,BYTE PTR es:[esi]
  4171bb:	(bad)  
  4171bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171be:	scas   al,BYTE PTR es:[edi]
  4171bf:	jmp    0x4883189c
  4171c4:	push   ebp
  4171c5:	cmp    al,0x7d
  4171c7:	fwait
  4171c8:	(bad)
  4171cc:	scas   eax,DWORD PTR es:[edi]
  4171cd:	fcomp  QWORD PTR [edi]
  4171cf:	mov    edx,0xffdd9c47
  4171d4:	jae    0x4171db
  4171d6:	js     0x4171cd
  4171d8:	jo     0x41721f
  4171da:	enter  0x826c,0x74
  4171de:	out    0x78,al
  4171e0:	cmp    ecx,DWORD PTR [ebx]
  4171e2:	lock shl BYTE PTR [edx],cl
  4171e5:	out    0x5d,eax
  4171e7:	push   ecx
  4171e8:	push   esi
  4171e9:	pop    eax
  4171ea:	or     ah,al
  4171ec:	or     eax,0x3dafa41e
  4171f1:	adc    al,0xc4
  4171f3:	icebp  
  4171f4:	pop    es
  4171f5:	into   
  4171f6:	inc    eax
  4171f7:	and    eax,0xeb1d1b62
  4171fc:	imul   ebx,DWORD PTR ds:[edi],0xfdbef2cf
  417203:	inc    eax
  417204:	pop    edi
  417205:	jno    0x417267
  417207:	mov    ebp,0x5b0e2ab6
  41720c:	mov    ebx,0xcb58589b
  417211:	imul   BYTE PTR [ebx+0x338a62f4]
  417217:	leave  
  417218:	inc    esp
  417219:	das    
  41721a:	out    0x0,al
  41721c:	xor    cl,BYTE PTR [edx-0x53405959]
  417222:	adc    BYTE PTR [edx+0x5a9687f0],0xe9
  417229:	and    DWORD PTR [ebx+0x7f],ebp
  41722c:	imul   ebp,DWORD PTR [eax+0x43],0xe04231b3
  417233:	push   eax
  417234:	(bad)  
  417235:	sub    eax,0x420bd710
  41723a:	xor    ecx,ecx
  41723c:	pop    ds
  41723d:	sub    eax,0xf49300
  417242:	mov    bl,0x82
  417244:	in     eax,0x40
  417246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417247:	mov    al,0xdc
  417249:	rol    DWORD PTR [eax],1
  41724b:	das    
  41724c:	clc    
  41724d:	dec    edx
  41724e:	jne    0x4172b1
  417250:	ret    0xa13c
  417253:	cs (bad) 
  417255:	xchg   ebp,eax
  417256:	mov    ecx,0x2b6ee554
  41725b:	int3   
  41725c:	dec    BYTE PTR [edi-0x3d1e52dd]
  417262:	mov    dh,0xdf
  417264:	cmp    eax,DWORD PTR [ebx]
  417266:	mov    bh,0x80
  417268:	push   edx
  417269:	xor    ebx,ebx
  41726b:	jb     0x41720f
  41726d:	lods   al,BYTE PTR ds:[esi]
  41726e:	sub    eax,0x5d7d12a7
  417273:	add    eax,0x76523720
  417278:	aad    0x2a
  41727a:	fninit 
  41727c:	adc    ch,BYTE PTR [ebx+esi*4-0x5e]
  417280:	scas   eax,DWORD PTR es:[edi]
  417281:	test   DWORD PTR [ebp-0x255190f9],ebx
  417287:	push   esp
  417288:	pop    ebp
  417289:	mov    WORD PTR [edx],es
  41728b:	pop    ecx
  41728c:	imul   BYTE PTR [esi]
  41728e:	aaa    
  41728f:	popf   
  417290:	(bad)  
  417291:	push   edi
  417292:	fwait
  417293:	inc    eax
  417294:	dec    esp
  417295:	aam    0x84
  417297:	imul   DWORD PTR [ebx-0x8957a8a]
  41729d:	ss push edi
  41729f:	lock shl BYTE PTR [edi],0x83
  4172a3:	dec    esi
  4172a4:	ss out 0x65,eax
  4172a7:	lock and al,0xf5
  4172aa:	loop   0x4172ce
  4172ac:	adc    edx,DWORD PTR [edx+ecx*4+0x6e]
  4172b0:	xor    BYTE PTR [ecx],dl
  4172b2:	inc    ebx
  4172b3:	mov    bl,0x19
  4172b5:	add    DWORD PTR es:[esi+0x2f],0xffffffe0
  4172ba:	xchg   DWORD PTR ds:[esp+esi*2+0x33],eax
  4172bf:	xchg   ecx,eax
  4172c0:	scas   eax,DWORD PTR es:[edi]
  4172c1:	fbstp  TBYTE PTR [eax]
  4172c3:	repz pop edx
  4172c5:	push   ds
  4172c6:	mov    esp,0x491e281c
  4172cb:	xor    eax,0x7fba19c4
  4172d0:	bound  esi,QWORD PTR [ebx-0x57]
  4172d3:	push   es
  4172d4:	push   es
  4172d5:	mov    bl,BYTE PTR ds:0xe2bed3c5
  4172db:	dec    ebp
  4172dc:	xchg   esi,eax
  4172dd:	iret   
  4172de:	out    0xea,eax
  4172e0:	std    
  4172e1:	clc    
  4172e2:	mov    edi,0x30ed38eb
  4172e7:	mov    ah,0x27
  4172e9:	out    0x43,eax
  4172eb:	inc    edi
  4172ec:	fs xchg ebx,eax
  4172ee:	push   es
  4172ef:	fs cmp eax,0xef8d999d
  4172f5:	clc    
  4172f6:	inc    ebx
  4172f7:	in     al,dx
  4172f8:	sbb    ebx,eax
  4172fa:	or     eax,DWORD PTR [edx+0x3c]
  4172fd:	xchg   esi,eax
  4172fe:	or     eax,0x767db623
  417303:	retf   
  417304:	fs mov al,0xc9
  417307:	or     dh,BYTE PTR [ebx+0x725a0eae]
  41730d:	cmp    BYTE PTR [eax],0x35
  417310:	sub    eax,0xc0c9a6
  417315:	xchg   BYTE PTR [ebx],dl
  417317:	sub    eax,0xac660ddd
  41731c:	ins    BYTE PTR es:[edi],dx
  41731d:	mov    cl,BYTE PTR [eax-0x71]
  417320:	je     0x4172e3
  417322:	push   esi
  417323:	loopne 0x4172b6
  417325:	fadd   QWORD PTR [ebx+0x383e8194]
  41732b:	add    eax,0x73ad7867
  417330:	hlt    
  417331:	cld    
  417332:	jecxz  0x4172bb
  417334:	jb     0x4172d2
  417336:	jo     0x417388
  417338:	call   0x659a2361
  41733d:	mov    eax,ds:0x7c47506b
  417342:	pusha  
  417343:	jbe    0x417308
  417345:	hlt    
  417346:	popa   
  417347:	push   edx
  417348:	inc    ebp
  417349:	jbe    0x41735d
  41734b:	push   DWORD PTR [ebx-0x207a9e5b]
  417351:	loop   0x41738d
  417353:	jnp    0x4173cc
  417355:	mov    bl,0x9a
  417357:	loope  0x417353
  417359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41735a:	adc    BYTE PTR [edx+0x530e90d],ah
  417360:	add    BYTE PTR [esi+0x6b],dh
  417363:	push   cs
  417364:	push   esi
  417365:	jns    0x417331
  417367:	into   
  417368:	pop    edx
  417369:	dec    ebp
  41736a:	push   esp
  41736b:	add    edx,DWORD PTR [ebx-0x45]
  41736e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736f:	cmp    eax,0x54c7b298
  417374:	mov    al,0xae
  417376:	add    al,0xd2
  417378:	mov    edx,0x62aa2617
  41737d:	mov    esp,0x8badc2c9
  417382:	enter  0xaf1e,0x6c
  417386:	jbe    0x41734d
  417388:	mov    WORD PTR [ecx-0x5c2e40b],ds
  41738e:	leave  
  41738f:	push   esi
  417390:	fwait
  417391:	pop    esp
  417392:	imul   ebp,DWORD PTR [ecx-0x6f25a23b],0xcde77123
  41739c:	push   ds
  41739d:	jecxz  0x41734d
  41739f:	adc    ebx,DWORD PTR [eax]
  4173a1:	mov    bh,BYTE PTR [edx+0x64]
  4173a4:	repz jge 0x417392
  4173a7:	mov    esp,0x85856100
  4173ac:	add    al,0x29
  4173ae:	popf   
  4173af:	repz jmp 0x5e4b:0xddeedf75
  4173b7:	cmp    al,0x51
  4173b9:	pop    esi
  4173ba:	ret    0x3201
  4173bd:	push   cs
  4173be:	(bad)  
  4173bf:	bound  ecx,QWORD PTR [ebx+0x6415910]
  4173c5:	loope  0x41739b
  4173c7:	fwait
  4173c8:	mov    ch,0x7
  4173ca:	dec    edx
  4173cb:	xchg   ecx,eax
  4173cc:	adc    ebx,DWORD PTR [ebx]
  4173ce:	mov    BYTE PTR [esp+ecx*8+0x3c],al
  4173d2:	adc    ebp,ebx
  4173d4:	xchg   edi,eax
  4173d5:	pop    ecx
  4173d6:	cmp    al,0x49
  4173d8:	add    dh,BYTE PTR [ebp-0x4a]
  4173db:	jae    0x41741f
  4173dd:	push   edx
  4173de:	xchg   al,bh
  4173e0:	xor    dl,bh
  4173e2:	or     dh,BYTE PTR [ecx+0x6f]
  4173e5:	retf   0xa44e
  4173e8:	fs dec eax
  4173ea:	ins    DWORD PTR es:[edi],dx
  4173eb:	push   ebp
  4173ec:	in     eax,dx
  4173ed:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4173ef:	xchg   edi,eax
  4173f0:	(bad)  
  4173f1:	push   0x12cafdb9
  4173f6:	test   ebx,ebx
  4173f8:	jne    0x417449
  4173fa:	sub    BYTE PTR [ecx],al
  4173fc:	es push ds
  4173fe:	stos   BYTE PTR es:[edi],al
  4173ff:	cmp    al,0xb
  417401:	jmp    0x41747c
  417403:	mov    edx,0xbdf5957f
  417408:	ret    0x7f1f
  41740b:	push   esi
  41740c:	jno    0x4173a0
  41740e:	xchg   ecx,eax
  41740f:	dec    esi
  417410:	fcmovb st,st(6)
  417412:	mov    ?,WORD PTR [edi]
  417414:	pop    edx
  417415:	sbb    DWORD PTR [ecx+0x67],0x66047829
  41741c:	enter  0xed67,0xb4
  417420:	in     eax,0x8d
  417422:	loopne 0x41746f
  417424:	xor    al,0xa8
  417426:	xchg   edx,eax
  417427:	xchg   esi,eax
  417428:	pop    esi
  417429:	pop    esi
  41742a:	mov    al,0xa
  41742c:	jmp    0x4173f7
  41742e:	mov    ebx,0x456a4c21
  417433:	retf   0x45de
  417436:	sbb    eax,0xefe6dc60
  41743b:	sbb    BYTE PTR [edi-0x20],bl
  41743e:	and    BYTE PTR [ecx],bl
  417440:	mov    cl,0x4d
  417442:	jg     0x417461
  417444:	imul   ebp,DWORD PTR [eax],0x72ecdd84
  41744a:	and    BYTE PTR [edx-0x4e54174c],al
  417450:	(bad)  
  417451:	loopne 0x417408
  417453:	in     al,0x37
  417455:	(bad)  
  417456:	and    DWORD PTR [eax-0x39],ecx
  417459:	ja     0x41742f
  41745b:	pop    ds
  41745c:	test   BYTE PTR [ecx-0x4fa295bd],dh
  417462:	adc    dl,BYTE PTR cs:[ebp+0x5f]
  417466:	lods   eax,DWORD PTR ds:[esi]
  417467:	xchg   esp,eax
  417468:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746a:	ins    BYTE PTR es:[edi],dx
  41746b:	inc    esp
  41746c:	int    0x69
  41746e:	shr    BYTE PTR [eax+0x4bbd8046],1
  417474:	inc    ebx
  417475:	mov    WORD PTR [ebp+0x5851605e],es
  41747b:	mov    al,ds:0xdc0ccca3
  417480:	test   DWORD PTR [eax+0x319b9e5a],ebp
  417486:	test   DWORD PTR [ebx+0x22033bd3],ebp
  41748c:	test   al,0xad
  41748e:	sar    BYTE PTR [edi+0x45],cl
  417491:	push   0x1f
  417493:	inc    ecx
  417494:	(bad)  
  417495:	cld    
  417496:	call   0x3123f2d6
  41749b:	push   edi
  41749c:	iret   
  41749d:	pop    esp
  41749e:	aas    
  41749f:	lods   al,BYTE PTR ds:[esi]
  4174a0:	adc    cl,BYTE PTR ds:0x5f85668d
  4174a6:	pop    edi
  4174a7:	fisttp DWORD PTR [ecx+0x2bfeac3]
  4174ad:	mov    dl,0x6c
  4174af:	popa   
  4174b0:	addr16 and al,0x3c
  4174b3:	mov    bl,0xab
  4174b5:	mov    esi,0x33b33d21
  4174ba:	rcr    DWORD PTR [ecx+0x4],1
  4174bd:	out    0xce,eax
  4174bf:	mov    al,ds:0x9dd091a6
  4174c4:	cmp    ebp,DWORD PTR [esi]
  4174c6:	adc    BYTE PTR [esi],0x24
  4174c9:	cmc    
  4174ca:	mov    ebx,0x1180d7ae
  4174cf:	cmp    al,0x79
  4174d1:	push   eax
  4174d2:	jl     0x4174dd
  4174d4:	mov    ah,bl
  4174d6:	cmp    edx,edx
  4174d8:	jo     0x417530
  4174da:	jge    0x417510
  4174dc:	dec    ebx
  4174dd:	push   0x70
  4174df:	xor    eax,0xe69109fa
  4174e4:	push   ebx
  4174e5:	add    eax,0xa5a6014d
  4174ea:	sub    al,0x5b
  4174ec:	mov    BYTE PTR [edi+0x8378d1d],dl
  4174f2:	lods   al,BYTE PTR ds:[esi]
  4174f3:	(bad)  
  4174f4:	pop    ecx
  4174f5:	jae    0x417508
  4174f7:	popf   
  4174f8:	cmp    edi,ebx
  4174fa:	sub    al,0x3a
  4174fc:	fimul  DWORD PTR [eax]
  4174fe:	mov    dh,0xc8
  417500:	add    DWORD PTR [ecx-0xf314ccd],esi
  417506:	fidivr DWORD PTR [edi+0x45]
  417509:	add    DWORD PTR [ebp-0x267599],0xd5588b68
  417513:	mov    al,ds:0x85952942
  417518:	sub    DWORD PTR [edx+0xa],edx
  41751b:	test   DWORD PTR [ebx],0xba22738
  417521:	mov    esi,es
  417523:	shl    DWORD PTR [edi-0x4a39f283],1
  417529:	aaa    
  41752a:	xchg   ebp,eax
  41752b:	scas   eax,DWORD PTR es:[edi]
  41752c:	push   0xffffffca
  41752e:	cmp    al,0x27
  417530:	dec    edi
  417531:	cmc    
  417532:	add    edi,eax
  417534:	push   ss
  417535:	inc    eax
  417536:	lods   al,BYTE PTR ds:[esi]
  417537:	addr16 xchg esp,eax
  417539:	pop    ebp
  41753a:	sbb    BYTE PTR [ecx+ebp*8-0x73f5d2f3],ah
  417541:	xchg   BYTE PTR [edx+0x5],bl
  417544:	and    al,0xc
  417546:	jns    0x417523
  417548:	xor    esp,DWORD PTR [eax+edi*2+0x4303426]
  41754f:	iret   
  417550:	mov    ebx,0xae0527cf
  417555:	mov    ebx,0xdfb416fc
  41755a:	dec    ebx
  41755b:	or     DWORD PTR [ebx],eax
  41755d:	sahf   
  41755e:	cld    
  41755f:	lea    ecx,[eax-0x58d54994]
  417565:	pop    es
  417566:	jns    0x417571
  417568:	pop    esi
  417569:	rol    BYTE PTR [edi+edx*2+0x22],cl
  41756d:	and    eax,0x2c64df1
  417573:	or     al,BYTE PTR [edx-0x2]
  417576:	stc    
  417577:	add    edx,0xb95f43f2
  41757d:	push   esp
  41757e:	pop    ss
  41757f:	mov    dl,0x2d
  417581:	mov    bh,BYTE PTR [edx+0x17]
  417584:	fwait
  417585:	mov    ds:0xd0ae0768,eax
  41758a:	cmp    al,0x66
  41758c:	ja     0x417540
  41758e:	mov    al,BYTE PTR [edi-0x7fffcf67]
  417594:	popf   
  417595:	jmp    0x37a:0xcb98d6cd
  41759c:	sbb    BYTE PTR [esi-0x5d],bh
  41759f:	in     al,dx
  4175a0:	xor    DWORD PTR [esi],0xe6c48544
  4175a6:	push   ebp
  4175a7:	dec    ebx
  4175a8:	loop   0x417566
  4175aa:	jne    0x41755e
  4175ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175ad:	xor    edx,ecx
  4175af:	sbb    al,0x9
  4175b1:	mov    ecx,0x15630171
  4175b6:	rcl    BYTE PTR [edx],0x9d
  4175b9:	sbb    DWORD PTR [eax+ebp*1-0x38a6be52],0xffffff8a
  4175c1:	int    0x3f
  4175c3:	(bad)  
  4175c4:	popf   
  4175c5:	mov    esi,0x4cba8baf
  4175ca:	cmovne esp,DWORD PTR [ebx-0x6]
  4175ce:	or     BYTE PTR [esi],al
  4175d0:	out    dx,eax
  4175d1:	pop    edx
  4175d2:	xchg   BYTE PTR [ebx-0x35],dl
  4175d5:	mov    ds:0x2f053871,eax
  4175da:	sub    edx,0x2b
  4175dd:	push   0x3b3816ee
  4175e2:	jae    0x417640
  4175e4:	cmp    DWORD PTR [ebp+0x29ccd69b],edi
  4175ea:	test   eax,0xbbc92950
  4175ef:	cmp    ch,dl
  4175f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175f2:	lods   al,BYTE PTR ds:[esi]
  4175f3:	ins    BYTE PTR es:[edi],dx
  4175f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f5:	test   al,0x68
  4175f7:	imul   esi,DWORD PTR [ebp+0xbe0fd9d],0xbc1c0ea
  417601:	inc    esp
  417602:	mov    ds:0x8504f6f8,eax
  417607:	cli    
  417608:	mov    ch,0x29
  41760a:	clc    
  41760b:	std    
  41760c:	push   cs
  41760d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41760e:	(bad)  
  41760f:	mov    ch,0x3
  417611:	lahf   
  417612:	xor    al,ch
  417614:	out    dx,al
  417615:	stos   BYTE PTR es:[edi],al
  417616:	test   BYTE PTR [esi+0x50],bl
  417619:	jns    0x41766e
  41761b:	ficom  WORD PTR [edx]
  41761d:	aad    0xcb
  41761f:	mov    al,ds:0xb56ca823
  417624:	adc    al,0xac
  417626:	mov    ebp,0xbaf3b7a
  41762b:	sbb    dh,BYTE PTR [ebx+eiz*4+0x62]
  41762f:	dec    edi
  417630:	and    ebx,DWORD PTR [eax+0x48fb7ed3]
  417636:	or     eax,0x9f0188e7
  41763b:	ss push ebp
  41763d:	xor    ecx,DWORD PTR ds:0xd62e6aee
  417643:	cmp    eax,0xd0d14df3
  417648:	sub    DWORD PTR [esi],ecx
  41764a:	xchg   edx,eax
  41764b:	push   esp
  41764c:	fsub   DWORD PTR [ebp+0xc]
  41764f:	cmp    eax,0xb638a407
  417654:	jne    0x417638
  417656:	retf   0xbe17
  417659:	nop
  41765a:	or     BYTE PTR [esi],ah
  41765c:	ins    DWORD PTR es:[edi],dx
  41765d:	push   cs
  41765e:	sub    ch,BYTE PTR [ecx+edx*1]
  417661:	adc    eax,0x9ff4bd53
  417666:	enter  0x16be,0x46
  41766a:	in     al,dx
  41766b:	leave  
  41766c:	stos   BYTE PTR es:[edi],al
  41766d:	push   ds
  41766e:	imul   DWORD PTR [ecx+ecx*4]
  417671:	cmp    dl,BYTE PTR [edi]
  417673:	(bad)  
  417674:	mov    bh,BYTE PTR [ecx-0x2ed9510]
  41767a:	retf   
  41767b:	fst    QWORD PTR [edi+0x33e025db]
  417681:	lds    ebx,FWORD PTR [ecx-0x5a]
  417684:	mov    ch,0x65
  417686:	cwde   
  417687:	mov    cl,0x84
  417689:	xchg   edx,eax
  41768a:	in     al,0xb0
  41768c:	xchg   ebp,eax
  41768d:	xor    eax,0x79bf55d6
  417692:	cmc    
  417693:	shl    BYTE PTR [ebx+0x5f7b6bd7],cl
  417699:	adc    dl,dh
  41769b:	pavgb  mm6,mm5
  41769e:	add    DWORD PTR [esi-0x39],esi
  4176a1:	out    0x8e,eax
  4176a3:	test   eax,0x97d9ab4c
  4176a8:	ficomp DWORD PTR [ecx+0x7]
  4176ab:	fmul   QWORD PTR [ecx+0xc81e5b]
  4176b1:	dec    ebx
  4176b2:	jno    0x417701
  4176b4:	pop    ecx
  4176b5:	loop   0x4176f0
  4176b7:	mov    fs,WORD PTR [edx-0x4d]
  4176ba:	in     eax,dx
  4176bb:	mov    eax,ds:0x43a74468
  4176c0:	(bad)  
  4176c1:	in     eax,0xfb
  4176c3:	jmp    FWORD PTR [ebp+ecx*4-0xf]
  4176c7:	clc    
  4176c8:	mov    ds:0x34053f37,eax
  4176cd:	xor    eax,0x139e0c5f
  4176d2:	pop    es
  4176d3:	jp     0x41766e
  4176d5:	xchg   esp,eax
  4176d6:	inc    eax
  4176d7:	les    ebx,FWORD PTR [edx]
  4176d9:	add    al,0xe7
  4176db:	arpl   WORD PTR [ecx+0x2dee9c2e],bx
  4176e1:	fdiv   QWORD PTR [edi+0x4f]
  4176e4:	icebp  
  4176e5:	stos   DWORD PTR es:[edi],eax
  4176e6:	xchg   ebx,eax
  4176e7:	xchg   edi,eax
  4176e8:	lock aaa 
  4176ea:	jo     0x41774b
  4176ec:	push   cs
  4176ed:	(bad)  
  4176ef:	(bad)  
  4176f1:	stos   BYTE PTR es:[edi],al
  4176f2:	pop    ebx
  4176f3:	pop    edx
  4176f4:	repnz pop esp
  4176f7:	mov    ?,WORD PTR [edi-0x2b345757]
  4176fd:	stos   DWORD PTR es:[edi],eax
  4176fe:	mov    ebx,0xc36658b6
  417703:	inc    ebx
  417704:	ret    
  417705:	xchg   ebx,eax
  417706:	mov    bh,0x19
  417708:	stc    
  417709:	jmp    0x738326ed
  41770e:	xchg   ecx,eax
  41770f:	and    esp,edi
  417711:	(bad)  
  417712:	jg     0x41771d
  417714:	hlt    
  417715:	je     0x417759
  417717:	inc    esi
  417718:	inc    ecx
  417719:	ja     0x41771f
  41771b:	adc    al,0xc5
  41771d:	dec    eax
  41771e:	xchg   DWORD PTR [ebp-0x13],esi
  417721:	xor    ebp,DWORD PTR [edi-0xc76d190]
  417727:	hlt    
  417728:	jg     0x41777d
  41772a:	jp     0x41773a
  41772c:	fisub  DWORD PTR [eax+ebx*1+0x46]
  417730:	clc    
  417731:	call   0x3f59:0xdb38944d
  417738:	mov    esi,0x24b05d74
  41773d:	imul   ebp,DWORD PTR [edx+0x33],0xffffffcc
  417741:	xchg   DWORD PTR [esi],edx
  417743:	cs push esi
  417745:	mov    bl,0x17
  417747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417748:	jge    0x417797
  41774a:	fdiv   QWORD PTR [edx+0x40ed0c38]
  417750:	ja     0x4177ca
  417752:	fistp  DWORD PTR [ebp-0x2ec4fef7]
  417758:	add    DWORD PTR [edi-0x76cfede3],ebx
  41775e:	cmp    eax,0xe967e4c4
  417763:	and    BYTE PTR [edi],dh
  417765:	ss cld 
  417767:	es dec eax
  417769:	loope  0x417745
  41776b:	push   ebp
  41776c:	and    eax,0xa197f00e
  417771:	not    eax
  417773:	mov    esi,0xd3bb9966
  417778:	inc    ebp
  417779:	lock dec cl
  41777c:	lahf   
  41777d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41777e:	sub    DWORD PTR [edi+0x311c3f16],ebp
  417784:	arpl   WORD PTR [ecx+0x615f4e79],bx
  41778a:	ja     0x4177fa
  41778c:	add    ebp,DWORD PTR [ebp-0x35]
  41778f:	fs inc edx
  417791:	fdivr  QWORD PTR [ebx]
  417793:	(bad)  
  417794:	in     eax,dx
  417795:	loop   0x4177a2
  417797:	inc    edi
  417798:	mov    ds:0xe4dd8564,eax
  41779d:	inc    ecx
  41779e:	(bad)  
  41779f:	aaa    
  4177a0:	das    
  4177a1:	mov    bl,0xd6
  4177a3:	jmp    0x3cfaf8f6
  4177a8:	(bad)  
  4177aa:	call   0x4745:0x1ddd02c1
  4177b1:	dec    esi
  4177b2:	adc    DWORD PTR [edx+ebp*1-0x6045b6ac],0xa830563f
  4177bd:	xor    ah,ch
  4177bf:	inc    ebp
  4177c0:	adc    eax,0x783cc800
  4177c5:	pop    esp
  4177c6:	icebp  
  4177c7:	mov    ah,0xa7
  4177c9:	push   edx
  4177ca:	mov    WORD PTR [ebp+0x7f],ss
  4177cd:	ret    0x19e6
  4177d0:	fyl2x  
  4177d2:	rcl    BYTE PTR [ebx-0x72],0x68
  4177d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177d7:	mov    ebx,0x3d6a4c02
  4177dc:	sbb    eax,0xe514ca59
  4177e1:	push   0x52e88b51
  4177e6:	xchg   esi,eax
  4177e7:	push   ebx
  4177e8:	scas   al,BYTE PTR es:[edi]
  4177e9:	jne    0x4177d5
  4177eb:	fsubr  QWORD PTR [ebp+edx*4-0x620b3bb1]
  4177f2:	(bad)  
  4177f4:	fisttp QWORD PTR [eax-0x2a]
  4177f7:	inc    dh
  4177f9:	into   
  4177fa:	pop    ds
  4177fb:	xchg   BYTE PTR ds:0xb3e3b190,bh
  417801:	pop    ebp
  417802:	mov    bl,0x63
  417804:	sbb    eax,ecx
  417806:	cmp    dl,ah
  417808:	ret    
  417809:	jmp    0x96f7:0xa293034b
  417810:	int    0xc2
  417812:	jmp    0x417844
  417814:	js     0x41786e
  417816:	adc    ecx,DWORD PTR [edi-0x2c]
  417819:	push   0x4f3747df
  41781e:	loop   0x417856
  417820:	ret    
  417821:	mov    bl,BYTE PTR [edi-0x4a]
  417824:	fldenv [ecx+0x4c30e8d2]
  41782a:	lea    ebp,[edx+0x727c38fc]
  417830:	jmp    0xd4a3338f
  417835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417836:	jb     0x417840
  417838:	test   eax,0x96bd011a
  41783d:	xor    cl,bl
  41783f:	scas   al,BYTE PTR es:[edi]
  417840:	sub    ecx,ebx
  417842:	push   ss
  417843:	cmc    
  417844:	(bad)  
  417845:	(bad)  
  417846:	adc    al,0x56
  417848:	jne    0x41780c
  41784a:	repnz dec ebx
  41784c:	stos   BYTE PTR es:[edi],al
  41784d:	in     eax,dx
  41784e:	cmc    
  41784f:	loopne 0x417823
  417851:	xchg   edx,eax
  417852:	dec    edx
  417853:	shr    BYTE PTR [ebp-0x77d0530a],cl
  417859:	add    eax,0x2a89c2f5
  41785e:	add    al,0xe0
  417860:	and    BYTE PTR [eax+0x46ca1d11],cl
  417866:	lods   eax,DWORD PTR ds:[esi]
  417867:	inc    eax
  417868:	push   es
  417869:	sub    bh,BYTE PTR [ebx+0x3f940202]
  41786f:	and    ebp,DWORD PTR gs:[edi]
  417872:	ss lahf 
  417874:	leave  
  417875:	repz fsub QWORD PTR [ebp+0x17ee2cf2]
  41787c:	or     bh,BYTE PTR [esi-0x27]
  41787f:	hlt    
  417880:	das    
  417881:	arpl   WORD PTR [ebx-0x298a0cea],ax
  417887:	ds push ebp
  417889:	fwait
  41788a:	in     al,dx
  41788b:	into   
  41788c:	pop    esi
  41788d:	xchg   ebx,eax
  41788e:	cmp    BYTE PTR [edi],ch
  417890:	sub    ebx,DWORD PTR [eax]
  417892:	inc    edi
  417893:	aad    0x97
  417895:	popa   
  417896:	int    0x4c
  417898:	inc    edx
  417899:	pop    edi
  41789a:	xchg   ebp,eax
  41789b:	sahf   
  41789c:	outs   dx,BYTE PTR ds:[esi]
  41789d:	xchg   DWORD PTR [ebp-0x381d20e8],ecx
  4178a3:	nop
  4178a4:	int    0x6e
  4178a6:	jae    0x41785a
  4178a8:	pop    ds
  4178a9:	dec    esp
  4178aa:	xor    DWORD PTR [eax-0x72cff747],esi
  4178b0:	jae    0x417861
  4178b2:	inc    esp
  4178b3:	xchg   esi,eax
  4178b4:	push   cs
  4178b5:	pop    DWORD PTR [ebp+0x3b]
  4178b8:	imul   edx,DWORD PTR [edx+0x4ce4e0de],0x296ac13d
  4178c2:	add    ecx,edi
  4178c4:	mov    esi,DWORD PTR [esi-0x52]
  4178c7:	mov    edx,0xb07b51c1
  4178cc:	in     al,dx
  4178cd:	mov    dl,0x94
  4178cf:	jecxz  0x417864
  4178d1:	sbb    bh,BYTE PTR [esi]
  4178d3:	rcl    edx,1
  4178d5:	retf   
  4178d6:	(bad)  
  4178d7:	leave  
  4178d8:	out    0x87,al
  4178da:	pop    ebp
  4178db:	scas   eax,DWORD PTR es:[edi]
  4178dc:	mov    WORD PTR [ebx+0x61],cs
  4178df:	jle    0x417931
  4178e1:	sub    DWORD PTR ds:0x12b4ff5,ecx
  4178e7:	imul   eax,DWORD PTR [eax-0x5e],0x1e
  4178eb:	das    
  4178ec:	pop    esi
  4178ed:	and    bh,BYTE PTR [ebx-0x76a9b961]
  4178f3:	mov    ss,ebp
  4178f5:	div    DWORD PTR [edi]
  4178f7:	scas   eax,DWORD PTR es:[di]
  4178f9:	jp     0x41794c
  4178fb:	retf   
  4178fc:	jo     0x4178ca
  4178fe:	(bad)  
  4178ff:	push   ecx
  417900:	mov    ds:0xbe667b72,eax
  417905:	out    dx,ax
  417907:	repnz hlt 
  417909:	imul   ebx,DWORD PTR [edi+0x14ad9ef0],0x1f
  417910:	pusha  
  417911:	scas   al,BYTE PTR es:[edi]
  417912:	mov    dl,0xa8
  417914:	or     DWORD PTR [esi+0x7f],ecx
  417917:	jnp    0x4178fe
  417919:	test   edx,edi
  41791b:	xchg   BYTE PTR [ebx+0x46],ah
  41791e:	push   0x4
  417920:	cmp    al,0x94
  417922:	arpl   WORD PTR [ecx],bp
  417924:	pop    ebp
  417925:	sub    eax,0xdbc1cdb8
  41792a:	rcr    BYTE PTR [edi],1
  41792c:	cwde   
  41792d:	ds sbb ecx,ebx
  417930:	ins    DWORD PTR es:[edi],dx
  417931:	hlt    
  417932:	sbb    dh,BYTE PTR [edi+0x709bbcfa]
  417938:	gs std 
  41793a:	jns    0x4178cb
  41793c:	mov    ds:0x97b2359c,al
  417941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417942:	mov    edx,0xf57e00de
  417947:	rcl    edi,0x6c
  41794a:	addr16 dec ebp
  41794c:	loope  0x4178eb
  41794e:	ss jbe 0x4179ca
  417951:	mov    fs,WORD PTR [ebx-0x26c87cd8]
  417957:	cdq    
  417958:	push   esi
  417959:	pushf  
  41795a:	jg     0x417922
  41795c:	add    BYTE PTR [edx+0x2ff230bf],bl
  417962:	popf   
  417963:	cwde   
  417964:	hlt    
  417965:	jnp    0x4179e0
  417967:	mov    ds:0x583e72d4,eax
  41796c:	pushf  
  41796d:	in     al,dx
  41796e:	enter  0x7bdf,0x5d
  417972:	cmp    ch,BYTE PTR [esi+esi*8]
  417975:	pop    ebx
  417976:	push   ecx
  417977:	loopne 0x41795f
  417979:	repz scas eax,DWORD PTR es:[edi]
  41797b:	out    dx,eax
  41797c:	jb     0x4179a6
  41797e:	jle    0x4179e4
  417980:	mov    esp,0x74223d66
  417985:	pop    ebx
  417986:	out    dx,al
  417987:	sbb    DWORD PTR [edx],ebx
  417989:	ins    BYTE PTR es:[edi],dx
  41798a:	fidivr DWORD PTR [eax-0x2a]
  41798d:	push   ss
  41798e:	not    BYTE PTR [ecx]
  417990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417991:	inc    edi
  417992:	push   ecx
  417993:	dec    ecx
  417994:	jae    0x4179ef
  417996:	mov    dh,0xe2
  417998:	jb     0x41794b
  41799a:	retf   
  41799b:	in     al,dx
  41799c:	test   DWORD PTR [edi+0x48],esi
  41799f:	adc    edi,DWORD PTR [ecx+0x11dddcfd]
  4179a5:	mov    WORD PTR [esp+eiz*2+0x1c],cs
  4179a9:	push   eax
  4179aa:	rol    DWORD PTR [esi+0x12],cl
  4179ad:	jmp    0x45375754
  4179b2:	test   DWORD PTR [edi-0x20],ecx
  4179b5:	mov    ds:0xbecb0ec,al
  4179ba:	pusha  
  4179bb:	icebp  
  4179bc:	xchg   edi,eax
  4179bd:	push   ss
  4179be:	push   ebp
  4179bf:	jecxz  0x417987
  4179c1:	jmp    0x417a22
  4179c3:	hlt    
  4179c4:	mov    esi,DWORD PTR [esi]
  4179c6:	ret    
  4179c7:	add    DWORD PTR [edi],0x44
  4179ca:	mov    gs,WORD PTR [ecx-0x3ad84dc6]
  4179d0:	mov    ebp,0xe8bb727e
  4179d5:	les    eax,FWORD PTR [ebx]
  4179d7:	dec    eax
  4179d8:	push   0x8576526b
  4179dd:	clc    
  4179de:	lds    edx,FWORD PTR [ebx+0x5a]
  4179e1:	pusha  
  4179e2:	nop
  4179e3:	xlat   BYTE PTR ds:[ebx]
  4179e4:	push   0xffffffba
  4179e6:	mov    cl,0xbd
  4179e8:	shl    DWORD PTR [ebx],1
  4179ea:	loop   0x41799e
  4179ec:	test   ah,dl
  4179ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ef:	icebp  
  4179f0:	icebp  
  4179f1:	cs test eax,0xacc58d38
  4179f7:	jg     0x417991
  4179f9:	inc    edx
  4179fa:	push   ecx
  4179fb:	cmp    bh,bh
  4179fd:	ds (bad) 
  4179ff:	ret    0x7a46
  417a02:	pop    ss
  417a03:	ins    BYTE PTR es:[edi],dx
  417a04:	adc    dh,bh
  417a06:	retf   
  417a07:	icebp  
  417a08:	xchg   DWORD PTR ds:[ebx+0x7a52e001],edx
  417a0f:	push   eax
  417a10:	adc    al,0xce
  417a12:	cld    
  417a13:	jmp    0xcd41c81b
  417a18:	mov    edx,0x88dd9069
  417a1d:	mov    esp,0x776ab88a
  417a22:	imul   DWORD PTR [ebx+ebp*1]
  417a25:	cmp    DWORD PTR [ebx+edi*1],esi
  417a28:	icebp  
  417a29:	mov    dl,BYTE PTR [esi-0xe9b3088]
  417a2f:	lods   eax,DWORD PTR ds:[esi]
  417a30:	(bad)  
  417a31:	sahf   
  417a32:	call   0x309:0xaa93a3e4
  417a39:	sar    BYTE PTR [ecx],1
  417a3b:	jnp    0x4179f6
  417a3d:	test   al,0xfd
  417a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a40:	inc    edx
  417a41:	jle    0x4179f5
  417a43:	aas    
  417a44:	cwde   
  417a45:	cmp    eax,0x4c5c87e0
  417a4a:	mov    edx,0x3b518055
  417a4f:	dec    edx
  417a50:	std    
  417a51:	into   
  417a52:	push   edx
  417a53:	xchg   ebp,eax
  417a54:	daa    
  417a55:	add    bl,BYTE PTR [edi*2-0x524533d7]
  417a5c:	xchg   BYTE PTR [ecx+0x73],ch
  417a5f:	dec    eax
  417a60:	xchg   DWORD PTR [edx-0x28],esi
  417a63:	jmp    FWORD PTR [eax+edx*8+0x62]
  417a67:	lock sbb al,ch
  417a6a:	xchg   BYTE PTR [esi-0x1476a645],bh
  417a70:	mov    ds:0xd1dbf6dd,eax
  417a75:	es out 0xcc,eax
  417a78:	xchg   BYTE PTR [esi],dl
  417a7a:	imul   eax,DWORD PTR [ebp+edx*4+0x42dd59f1],0xec7d2446
  417a85:	fwait
  417a86:	push   0xede58b56
  417a8b:	adc    edi,eax
  417a8d:	fist   DWORD PTR [edx]
  417a8f:	nop
  417a90:	xor    BYTE PTR [edi-0x12],al
  417a93:	mov    ds:0x4a2bd37f,eax
  417a98:	mov    al,0x93
  417a9a:	in     al,0x72
  417a9c:	mov    dl,0x6a
  417a9e:	jp     0x417a4a
  417aa0:	into   
  417aa1:	mov    BYTE PTR [eax],cl
  417aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa4:	sbb    al,0x92
  417aa6:	or     bl,BYTE PTR [ebp+ebp*2+0x465f4f99]
  417aad:	xchg   esi,eax
  417aae:	jmp    0x417a40
  417ab0:	pop    es
  417ab1:	fstp   DWORD PTR [edx]
  417ab3:	popf   
  417ab4:	jle    0x417a8b
  417ab6:	cmp    BYTE PTR [di],bh
  417ab9:	push   0xfffffff8
  417abb:	mov    edi,DWORD PTR [esp+ebp*4-0x1b869a7c]
  417ac2:	jecxz  0x417ade
  417ac4:	jge    0x417a69
  417ac6:	std    
  417ac7:	cld    
  417ac8:	out    0xf0,eax
  417aca:	imul   edi,DWORD PTR [edx+esi*2+0x32a54429],0x38
  417ad2:	int    0xa7
  417ad4:	or     ecx,ebp
  417ad6:	leave  
  417ad7:	js     0x417ae0
  417ad9:	mov    ah,BYTE PTR [ebx+0x587e772a]
  417adf:	mov    es,WORD PTR es:[edi+0x39f7fd91]
  417ae6:	xor    bh,BYTE PTR [edx-0x791707bc]
  417aec:	pop    edx
  417aed:	repnz scas eax,DWORD PTR es:[edi]
  417aef:	pop    es
  417af0:	sub    DWORD PTR [edx-0xd],edx
  417af3:	js     0x417b19
  417af5:	xchg   edi,eax
  417af6:	xlat   BYTE PTR ds:[ebx]
  417af7:	int3   
  417af8:	in     eax,0x43
  417afa:	cmp    eax,DWORD PTR [edx+0xa84837b]
  417b00:	(bad)  
  417b01:	mov    esp,0xd4a551c7
  417b06:	and    al,0x6b
  417b08:	jp     0x417afd
  417b0a:	ins    BYTE PTR es:[edi],dx
  417b0b:	push   0x2907a776
  417b10:	cli    
  417b11:	iret   
  417b12:	pmuludq mm6,mm3
  417b15:	mov    edi,0x74531d79
  417b1a:	xchg   edi,eax
  417b1b:	add    DWORD PTR [eax-0x5b],ebp
  417b1e:	(bad)  
  417b1f:	lea    esi,[ecx+0x714e45a7]
  417b25:	sbb    edi,esp
  417b27:	sahf   
  417b28:	sub    BYTE PTR [eax],ah
  417b2a:	pop    ss
  417b2b:	aaa    
  417b2c:	into   
  417b2d:	js     0x417b53
  417b2f:	mov    edi,0xa6b51f4d
  417b34:	fwait
  417b35:	scas   eax,DWORD PTR es:[edi]
  417b36:	es js  0x417bb1
  417b39:	in     al,0x99
  417b3b:	ret    
  417b3c:	pop    ss
  417b3d:	scas   al,BYTE PTR es:[edi]
  417b3e:	rcr    ecx,cl
  417b40:	mov    bh,0x14
  417b42:	fs inc ecx
  417b44:	fisttp QWORD PTR [edx+0x66]
  417b47:	and    bl,BYTE PTR [edx+0xc0159ca]
  417b4d:	data16 jnp 0x417b1d
  417b50:	push   ecx
  417b51:	xchg   ebp,eax
  417b52:	call   0xff324275
  417b57:	xchg   edx,eax
  417b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b59:	lods   al,BYTE PTR ds:[esi]
  417b5a:	mov    DWORD PTR [esi+0x6c5bdccd],0x9cba846c
  417b64:	jbe    0x417b53
  417b66:	cmp    DWORD PTR [esi],ebx
  417b68:	inc    ecx
  417b69:	in     al,dx
  417b6a:	xchg   ebp,eax
  417b6b:	bound  esp,QWORD PTR [edi]
  417b6d:	(bad)  
  417b6e:	neg    DWORD PTR [esi-0x28d886f5]
  417b74:	arpl   WORD PTR [eax],bx
  417b76:	add    esi,DWORD PTR ss:[ebx]
  417b79:	mov    esi,0x5eb50a25
  417b7e:	pop    ss
  417b7f:	adc    eax,0xeb268d18
  417b84:	add    esi,ebx
  417b86:	ror    DWORD PTR [ecx-0x5c1d80e6],1
  417b8c:	pop    ebx
  417b8d:	std    
  417b8e:	xchg   esi,eax
  417b8f:	jle    0x417b17
  417b91:	ins    BYTE PTR es:[edi],dx
  417b92:	xor    bh,al
  417b94:	jle    0x417bdf
  417b96:	push   esi
  417b97:	mov    esi,0x52202f98
  417b9c:	xchg   edi,eax
  417b9d:	test   eax,0x89c5a08a
  417ba2:	mov    edx,0x3b587a14
  417ba7:	pop    ds
  417ba8:	call   0x95222775
  417bad:	inc    ebp
  417bae:	jmp    0x18e28cb2
  417bb3:	lods   al,BYTE PTR ds:[esi]
  417bb4:	or     DWORD PTR [ecx-0x24417a9d],0xbcaf1c6f
  417bbe:	pop    ecx
  417bbf:	dec    ecx
  417bc0:	pusha  
  417bc1:	mov    bl,0x1a
  417bc3:	sbb    eax,0x92d20f39
  417bc8:	adc    al,0xb2
  417bca:	or     al,0x89
  417bcc:	sti    
  417bcd:	jmp    0x417bb7
  417bcf:	xor    al,0x8d
  417bd1:	jbe    0x417be2
  417bd3:	jmp    0x417c51
  417bd5:	push   ebp
  417bd7:	ret    0xa825
  417bda:	ret    0x6545
  417bdd:	pop    edx
  417bde:	add    ebx,DWORD PTR [esi+ebp*1]
  417be1:	mov    esi,0xf0ed97aa
  417be6:	leave  
  417be7:	outs   dx,BYTE PTR ds:[esi]
  417be9:	mov    ebx,0x60960ee8
  417bee:	pushf  
  417bef:	outs   dx,DWORD PTR ds:[esi]
  417bf0:	xchg   edi,eax
  417bf1:	or     DWORD PTR [ebx-0x4d23713b],ebx
  417bf7:	clc    
  417bf8:	cmp    al,0x1c
  417bfa:	repnz cmc 
  417bfc:	fld    TBYTE PTR [eax]
  417bfe:	dec    ebp
  417bff:	cmp    bl,ch
  417c01:	mov    edx,DWORD PTR [edi-0x58ea3a70]
  417c07:	and    ecx,edx
  417c09:	sub    al,0x9a
  417c0b:	ror    DWORD PTR [edx],0x1e
  417c0e:	gs (bad) 
  417c10:	jmp    0x3df8:0x18eb035c
  417c17:	retf   0x62e2
  417c1a:	rcl    DWORD PTR [eax+0x3a404019],0x71
  417c21:	(bad)  
  417c22:	retf   
  417c23:	inc    ecx
  417c24:	mov    al,0x25
  417c26:	mov    eax,ds:0x634990a1
  417c2b:	or     BYTE PTR [eax+0x41711f8c],al
  417c31:	(bad)  
  417c32:	mov    edi,DWORD PTR [ebx]
  417c34:	test   eax,0x1971a4a
  417c39:	push   esp
  417c3a:	sub    dh,cl
  417c3c:	adc    al,BYTE PTR [esi+0x37f8158c]
  417c42:	call   0x23d15a3f
  417c47:	sub    esi,DWORD PTR [edi]
  417c49:	in     al,0x22
  417c4b:	sahf   
  417c4c:	pop    edi
  417c4d:	ds mov bh,0xb5
  417c50:	fld    DWORD PTR [esi+0x4f68d0d6]
  417c56:	js     0x417c5e
  417c58:	push   esp
  417c59:	(bad)  
  417c5a:	sbb    eax,0xba69bdb
  417c5f:	div    DWORD PTR ds:0x366270f4
  417c65:	pop    edx
  417c66:	jbe    0x417c4f
  417c68:	push   esi
  417c69:	mov    bh,0x9d
  417c6b:	out    dx,al
  417c6c:	shr    ch,1
  417c6e:	mov    dh,0x3d
  417c70:	lahf   
  417c71:	loop   0x417bfa
  417c73:	adc    al,0x39
  417c75:	stc    
  417c76:	shl    BYTE PTR [ebp-0x5fff5dc5],0x93
  417c7d:	data16 fsub DWORD PTR [edx]
  417c80:	xor    cl,ch
  417c82:	fcomp  QWORD PTR [ebx+eax*8]
  417c85:	into   
  417c86:	pop    ebx
  417c87:	repz and dl,ch
  417c8a:	xchg   esi,eax
  417c8b:	gs dec edi
  417c8d:	inc    ebp
  417c8e:	in     al,0xef
  417c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c91:	xchg   esi,eax
  417c92:	adc    DWORD PTR [ecx-0x80],ebp
  417c95:	or     al,0x1d
  417c97:	sbb    al,ah
  417c99:	mov    ah,0x98
  417c9b:	cs sbb al,0x1
  417c9e:	jmp    0x1290f7b2
  417ca3:	cmp    DWORD PTR [ebx],0xe832eff1
  417ca9:	or     al,0x9c
  417cab:	in     al,dx
  417cac:	ins    BYTE PTR es:[edi],dx
  417cad:	dec    edx
  417cae:	fidivr WORD PTR [edx-0x72]
  417cb1:	or     DWORD PTR [ecx-0x1fadda4a],ecx
  417cb7:	mov    ebp,0x57a0bf1d
  417cbc:	arpl   WORD PTR [ebx+0x12071ae7],sp
  417cc2:	mov    edi,0x58157b65
  417cc7:	sbb    DWORD PTR [ebx+0x37e9bb18],eax
  417ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cce:	dec    DWORD PTR ss:[edx]
  417cd1:	nop
  417cd2:	sbb    bh,BYTE PTR [edx]
  417cd4:	xor    eax,0x9b65b7a4
  417cd9:	jae    0x417cb8
  417cdb:	pop    eax
  417cdc:	fist   WORD PTR [eax]
  417cde:	jb     0x417d17
  417ce0:	pop    esp
  417ce1:	cwde   
  417ce2:	add    dl,BYTE PTR [edi+0x7c]
  417ce5:	xchg   edi,eax
  417ce6:	xchg   ebp,eax
  417ce7:	cwde   
  417ce8:	cmp    dl,BYTE PTR [esi+0x2801d89a]
  417cee:	sbb    eax,0xb9dd486
  417cf3:	fidivr WORD PTR ds:0x4e0260f8
  417cf9:	push   ebp
  417cfa:	sti    
  417cfb:	add    al,0xef
  417cfd:	dec    ebp
  417cfe:	pop    ebx
  417cff:	jnp    0x417d76
  417d01:	xchg   BYTE PTR ds:0x91356b0f,bl
  417d07:	in     al,dx
  417d08:	adc    DWORD PTR [edi-0x9c4958e],ebx
  417d0e:	mov    ebp,0xf160b730
  417d13:	popf   
  417d14:	mov    al,0xbb
  417d16:	ins    BYTE PTR es:[edi],dx
  417d17:	xor    edx,edx
  417d19:	iret   
  417d1a:	cmp    al,0x13
  417d1c:	sar    ebx,1
  417d1e:	enter  0x7f66,0xf8
  417d22:	cmp    ebx,DWORD PTR [ebx+ebp*8-0x2f4fda35]
  417d29:	xor    ebp,DWORD PTR [eax-0x16b81ebc]
  417d2f:	mov    ds:0x63c706ba,al
  417d34:	std    
  417d35:	pop    ds
  417d36:	sbb    eax,0x907960a7
  417d3b:	cmp    eax,0x1ff53401
  417d40:	and    al,0xa3
  417d42:	and    al,0x98
  417d44:	inc    ebp
  417d45:	shl    esp,0xe9
  417d48:	addr16 add eax,0x2427428d
  417d4e:	xor    BYTE PTR [edi],bh
  417d50:	xor    ah,BYTE PTR [ebx-0x41]
  417d53:	mov    cl,0xde
  417d55:	ss fcmove st,st(7)
  417d58:	jno    0x417dae
  417d5a:	sub    ch,bl
  417d5c:	aaa    
  417d5d:	mov    eax,0x27f75719
  417d62:	pop    ecx
  417d63:	dec    eax
  417d64:	mov    bh,0xac
  417d66:	adc    DWORD PTR [edi],ebx
  417d68:	out    dx,al
  417d69:	push   cs
  417d6a:	xor    BYTE PTR [edx+0x15fdd735],0x31
  417d71:	inc    ecx
  417d72:	xchg   edi,eax
  417d73:	or     ebp,edx
  417d75:	inc    ecx
  417d76:	mov    ds:0x3547e239,al
  417d7b:	sub    edi,DWORD PTR [esi+0x69ec3db1]
  417d81:	mov    bh,BYTE PTR [edi-0x6a]
  417d84:	daa    
  417d85:	int3   
  417d86:	outs   dx,BYTE PTR ds:[esi]
  417d87:	stc    
  417d88:	jns    0x417db9
  417d8a:	fistp  DWORD PTR [edx-0xf7fb78d]
  417d90:	(bad)  
  417d91:	jmp    0x3015698a
  417d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d97:	(bad)
  417d9a:	inc    eax
  417d9b:	push   esp
  417d9c:	mov    ebx,DWORD PTR [edi+0x3605d293]
  417da2:	jno    0x417dcc
  417da4:	push   cs
  417da5:	dec    edi
  417da6:	lahf   
  417da7:	inc    ebp
  417da8:	jae    0x417df1
  417daa:	push   es
  417dab:	js     0x417db4
  417dad:	add    esi,0xffffffc1
  417db0:	mov    ebx,0x7aec1dc1
  417db5:	neg    DWORD PTR [ecx+edx*4-0x738ab421]
  417dbc:	loop   0x417daf
  417dbe:	xchg   ebp,eax
  417dbf:	out    dx,eax
  417dc0:	sahf   
  417dc1:	xor    edx,edi
  417dc3:	push   0x2aaaf2ad
  417dc8:	cmc    
  417dc9:	mov    ebp,0x3f2816f7
  417dce:	gs shr ebp,1
  417dd1:	das    
  417dd2:	mov    al,BYTE PTR [ebp+0x312667f6]
  417dd8:	das    
  417dd9:	xor    eax,0xedafefc7
  417dde:	fcomp  DWORD PTR ds:0xb552c9f1
  417de4:	xchg   ebp,eax
  417de5:	xchg   DWORD PTR [ebp-0x61],eax
  417de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de9:	popf   
  417dea:	fstp   QWORD PTR [ebp-0x66a6c6c]
  417df0:	push   0x85155372
  417df5:	and    al,0xc0
  417df7:	pop    edx
  417df8:	call   FWORD PTR [eax-0x2c3f21e1]
  417dfe:	add    DWORD PTR [ebx-0x2b],0x59
  417e02:	dec    ebx
  417e03:	mov    edx,cs
  417e05:	je     0x417e44
  417e07:	ret    
  417e08:	sar    ch,1
  417e0a:	stos   BYTE PTR es:[edi],al
  417e0b:	inc    esp
  417e0c:	cmp    ecx,ebp
  417e0e:	mov    ebp,0xb8ecf3d
  417e13:	neg    BYTE PTR [ebx]
  417e15:	repz std 
  417e17:	fwait
  417e18:	popf   
  417e19:	out    0xa6,al
  417e1b:	sub    DWORD PTR [eax],esp
  417e1d:	dec    ecx
  417e1e:	pop    ecx
  417e1f:	in     eax,0x43
  417e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e22:	mov    ch,0x64
  417e24:	div    DWORD PTR [eax-0x50]
  417e27:	mov    eax,0x5dfaa349
  417e2c:	(bad)  
  417e2d:	mov    ebp,?
  417e2f:	pop    edi
  417e30:	imul   ebp,edx,0xfb07dd67
  417e36:	or     ebp,DWORD PTR [ebx-0x667ce9a6]
  417e3c:	and    eax,0xaa4f94ef
  417e41:	in     eax,0x26
  417e43:	je     0x417e13
  417e45:	xlat   BYTE PTR ds:[ebx]
  417e46:	pop    esp
  417e47:	test   ecx,esp
  417e49:	push   esi
  417e4a:	mov    esi,0xb27fb339
  417e4f:	jmp    0x417ecd
  417e51:	adc    edi,DWORD PTR [ebp+0x23]
  417e54:	ror    DWORD PTR [ebx+esi*2+0x2e],0x39
  417e59:	ja     0x417e40
  417e5b:	sbb    edx,edx
  417e5d:	popa   
  417e5e:	cs add eax,0x23222c03
  417e64:	es pop es
  417e66:	xchg   esi,eax
  417e67:	or     DWORD PTR [edi-0x463ebbd1],0x62
  417e6e:	lock scas eax,DWORD PTR es:[edi]
  417e70:	popf   
  417e71:	pop    ebp
  417e72:	mov    ecx,0x45f038ef
  417e77:	inc    esi
  417e78:	push   0xb927ef43
  417e7d:	ins    BYTE PTR es:[edi],dx
  417e7e:	mov    ss,eax
  417e80:	cld    
  417e81:	fst    QWORD PTR [edx+0x36]
  417e84:	(bad)  
  417e85:	aaa    
  417e86:	dec    edi
  417e87:	push   edi
  417e88:	mov    ds:0x1b1d8d84,al
  417e8d:	inc    edi
  417e8e:	scas   eax,DWORD PTR es:[edi]
  417e8f:	mov    cl,0xed
  417e91:	(bad)  
  417e92:	(bad)  
  417e93:	(bad)  
  417e94:	lahf   
  417e95:	mov    al,ds:0x6266d692
  417e9a:	adc    edx,esi
  417e9c:	in     al,0x20
  417e9e:	push   cs
  417e9f:	push   es
  417ea0:	jne    0x417efe
  417ea2:	mov    DWORD PTR [ebp-0x4968833c],ecx
  417ea8:	xor    BYTE PTR [ebx],cl
  417eaa:	enter  0x4ce4,0x23
  417eae:	mov    BYTE PTR [eax],bl
  417eb0:	push   ss
  417eb1:	(bad)  
  417eb2:	je     0x417e4d
  417eb4:	sub    ecx,DWORD PTR [ebx+0x7e]
  417eb7:	in     eax,0xfb
  417eb9:	add    al,0xa6
  417ebb:	call   0xf4cedfa0
  417ec0:	in     eax,dx
  417ec1:	pop    es
  417ec2:	repz cmp ecx,DWORD PTR [ebp+0x35]
  417ec6:	scas   al,BYTE PTR es:[edi]
  417ec7:	ret    0xbc06
  417eca:	fxch   st(7)
  417ecc:	nop
  417ecd:	add    DWORD PTR [ebp+eiz*8+0x69],edi
  417ed1:	imul   edi,DWORD PTR [eax],0xffffff82
  417ed4:	fdivr  QWORD PTR [ebx-0x78]
  417ed7:	cmp    edi,ebx
  417ed9:	int    0x9f
  417edb:	sub    DWORD PTR ds:0xe3d85b90,ebx
  417ee1:	push   es
  417ee2:	dec    edi
  417ee3:	mov    ds:0xa67f0aa1,eax
  417ee8:	sahf   
  417ee9:	lahf   
  417eea:	outs   dx,BYTE PTR ds:[esi]
  417eeb:	nop
  417eec:	cmp    DWORD PTR [edx+0x69601ba0],ebp
  417ef2:	xchg   edx,eax
  417ef3:	das    
  417ef4:	pushf  
  417ef5:	jno    0x417f05
  417ef7:	pop    eax
  417ef8:	mul    BYTE PTR [esi+0x34968722]
  417efe:	mov    ch,0xd4
  417f00:	cwde   
  417f01:	xor    al,0x9a
  417f03:	out    dx,eax
  417f04:	(bad)  
  417f05:	sbb    bl,BYTE PTR [ecx]
  417f07:	xor    BYTE PTR [edi-0x86e6552],dl
  417f0d:	aad    0xcf
  417f0f:	sar    BYTE PTR [ecx+0x7e],0x9a
  417f13:	loope  0x417f89
  417f15:	gs adc al,0xaa
  417f18:	test   ah,dh
  417f1a:	(bad)  
  417f1c:	imul   ecx,DWORD PTR [ebp+0x595d1d41],0xffffffe3
  417f23:	arpl   WORD PTR ds:0x30bdfe58,bx
  417f29:	mov    bl,0xe6
  417f2b:	sub    dh,al
  417f2d:	(bad)  
  417f2e:	nop
  417f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f30:	sbb    cl,BYTE PTR [edi-0x529dd212]
  417f36:	jg     0x417efc
  417f38:	sbb    bl,BYTE PTR [edx+0x426c1c89]
  417f3e:	jbe    0x417f0e
  417f40:	sub    eax,0xde4cf2a1
  417f45:	mov    eax,0x39caafc8
  417f4a:	out    dx,al
  417f4b:	jecxz  0x417f30
  417f4d:	cmp    DWORD PTR [edx-0x94d84d4],0xffffffd8
  417f54:	ss js  0x417fd0
  417f57:	jg     0x417fac
  417f59:	fistp  DWORD PTR [ebx]
  417f5b:	loope  0x417f4d
  417f5d:	sbb    BYTE PTR [ebp-0x3fb43845],dh
  417f63:	inc    ecx
  417f64:	inc    edi
  417f65:	add    ah,dh
  417f67:	mov    cl,0xfb
  417f69:	add    BYTE PTR [edi+0x527da96e],0x35
  417f70:	bound  eax,QWORD PTR [eax+0x160e56ff]
  417f76:	cld    
  417f77:	mov    ch,0xb2
  417f79:	cmc    
  417f7a:	add    eax,0xef9fa5c7
  417f7f:	push   ebx
  417f80:	in     eax,0x89
  417f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f83:	push   ds
  417f84:	outs   dx,DWORD PTR ds:[esi]
  417f85:	cmp    esi,DWORD PTR [edi-0x19]
  417f88:	mul    ah
  417f8a:	nop
  417f8b:	or     bh,dh
  417f8d:	add    eax,0x59eb6d17
  417f92:	test   BYTE PTR [eax+0x3],ch
  417f95:	nop
  417f96:	add    al,0x9b
  417f98:	inc    esi
  417f99:	add    al,0x3c
  417f9b:	push   es
  417f9c:	aas    
  417f9d:	dec    esp
  417f9e:	fwait
  417f9f:	rcl    DWORD PTR [ebx],0x18
  417fa2:	cmp    BYTE PTR [ecx],ch
  417fa4:	jle    0x417fa8
  417fa6:	add    ebx,esp
  417fa8:	xor    eax,0x36e48695
  417fad:	add    ebp,ebp
  417faf:	push   esp
  417fb0:	jo     0x417f3f
  417fb2:	cmp    eax,0xac91b346
  417fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb8:	pop    ebx
  417fb9:	loope  0x417fde
  417fbb:	dec    esi
  417fbc:	dec    eax
  417fbd:	(bad)  
  417fbe:	lock sub eax,0x21a63c4f
  417fc4:	cdq    
  417fc5:	bound  ebp,QWORD PTR [ebx+0x41]
  417fc8:	and    DWORD PTR [ebx+0x7f],0x82ea65ed
  417fcf:	retf   
  417fd0:	jecxz  0x417fd4
  417fd2:	push   0x55fb85a8
  417fd7:	iret   
  417fd8:	paddsb mm6,QWORD PTR [eax-0x6cb67fd6]
  417fdf:	pop    edi
  417fe0:	inc    esp
  417fe1:	inc    edi
  417fe2:	lahf   
  417fe3:	dec    edi
  417fe4:	push   edi
  417fe5:	inc    edx
  417fe6:	addr16 adc bh,ah
  417fe9:	int    0x88
  417feb:	pop    edx
  417fec:	push   ebp
  417fed:	xor    BYTE PTR [esp+ecx*1+0x7f871b8c],bl
  417ff4:	jns    0x418023
  417ff6:	(bad)  
  417ff7:	das    
  417ff8:	and    BYTE PTR [edi+0x75],ch
  417ffb:	fs mov bl,bh
  417ffe:	adc    WORD PTR [edi+0x7a],bp
  418002:	pusha  
  418003:	repnz popf 
  418005:	ins    DWORD PTR es:[edi],dx
  418006:	jno    0x417f8c
  418008:	add    eax,0x7189b793
  41800d:	sub    BYTE PTR [eax+0x22],0xe7
  418011:	fldenv [esi-0x69]
  418014:	mov    esp,0xf9fe874d
  418019:	xchg   edx,eax
  41801a:	jne    0x418035
  41801c:	pushf  
  41801d:	aas    
  41801e:	fcom   DWORD PTR [eax+0x4bc6b006]
  418024:	in     eax,dx
  418025:	dec    ebx
  418026:	das    
  418027:	in     eax,dx
  418028:	stos   BYTE PTR es:[edi],al
  418029:	jns    0x41800c
  41802b:	loop   0x417fcc
  41802d:	addr16 and eax,0xf340ce32
  418033:	pop    es
  418034:	xchg   edi,eax
  418035:	xor    eax,DWORD PTR ds:0xedf0fa93
  41803b:	lds    esp,FWORD PTR [esi]
  41803d:	dec    eax
  41803e:	sahf   
  41803f:	pop    edx
  418040:	mov    ds:0x4f91ac54,eax
  418045:	jmp    0x591e:0xa004051b
  41804c:	lods   al,BYTE PTR ds:[esi]
  41804d:	inc    ebx
  41804e:	adc    ebx,DWORD PTR [edi]
  418050:	in     eax,0x16
  418052:	test   eax,0xdf77d3f7
  418057:	cwde   
  418058:	pusha  
  418059:	sbb    al,0x25
  41805b:	and    ecx,DWORD PTR [edx]
  41805d:	imul   ebx,esi,0x633f63c3
  418063:	sbb    eax,0x5ca353cc
  418068:	jmp    DWORD PTR [esi-0x55]
  41806b:	push   ds
  41806c:	add    al,0xa0
  41806e:	gs push cs
  418070:	mov    al,0x93
  418072:	jp     0x4180d4
  418074:	mov    esp,DWORD PTR ds:0xc9a42ad
  41807a:	outs   dx,BYTE PTR ds:[esi]
  41807b:	xchg   ch,bh
  41807d:	mov    dh,0xbc
  41807f:	icebp  
  418080:	clc    
  418081:	jecxz  0x418050
  418083:	outs   dx,BYTE PTR ds:[esi]
  418084:	and    al,0x78
  418086:	jmp    0x418046
  418088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418089:	jmp    0x1e741405
  41808e:	adc    DWORD PTR [edx],0x26e11b0d
  418094:	push   esi
  418095:	push   ss
  418096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418097:	pop    edx
  418098:	sbb    dh,BYTE PTR [eax]
  41809a:	loop   0x41803e
  41809c:	aad    0x4b
  41809e:	mov    ecx,0x67fa4f1b
  4180a3:	fldcw  WORD PTR [eax-0x40b1bdc]
  4180a9:	imul   edi,edx,0x41
  4180ac:	sbb    edi,DWORD PTR [eax+0x291a3005]
  4180b2:	adc    BYTE PTR ds:0x431d05b2,0xd4
  4180b9:	or     BYTE PTR [ecx],bl
  4180bb:	fst    QWORD PTR [edi]
  4180bd:	push   ebp
  4180be:	mov    ch,0x22
  4180c0:	imul   DWORD PTR [eax-0x4d]
  4180c3:	ret    0xf4b2
  4180c6:	sbb    BYTE PTR [ebx-0x7d],bl
  4180c9:	or     al,BYTE PTR [ebx+0x711886ef]
  4180cf:	mov    bh,0x1e
  4180d1:	adc    dl,BYTE PTR [edi-0x30]
  4180d4:	out    dx,al
  4180d5:	sar    BYTE PTR [eax-0x645ce607],0x5a
  4180dc:	test   al,0x48
  4180de:	push   ebp
  4180df:	push   ebp
  4180e0:	sbb    cl,bh
  4180e2:	fs and al,0x2b
  4180e5:	retf   
  4180e6:	ins    BYTE PTR es:[edi],dx
  4180e7:	mov    ebp,0x59c2a519
  4180ec:	jp     0x418117
  4180ee:	in     al,dx
  4180ef:	mov    WORD PTR [ebp-0x7f73930c],?
  4180f5:	int    0xdd
  4180f7:	xor    DWORD PTR [ecx-0x80],esp
  4180fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180fb:	sbb    BYTE PTR [ecx],cl
  4180fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180fe:	pop    ecx
  4180ff:	mov    cl,0x7d
  418101:	loop   0x418087
  418103:	test   eax,0x3daa6493
  418108:	pop    esp
  418109:	rcl    DWORD PTR [esp+edi*8+0x20],cl
  41810d:	adc    BYTE PTR [ebx+0x50],0xde
  418111:	pop    ss
  418112:	fs or  al,0x6a
  418115:	scas   eax,DWORD PTR es:[edi]
  418116:	xor    eax,0xb664d35c
  41811b:	mov    ds:0x43957410,eax
  418120:	push   cs
  418121:	popa   
  418122:	data16 jo 0x418111
  418125:	push   eax
  418126:	jns    0x418117
  418128:	xor    eax,0x2fb3e6f
  41812d:	add    eax,0xde5c4d34
  418132:	(bad)  
  418133:	js     0x418112
  418135:	inc    ebp
  418136:	push   ds
  418137:	xchg   BYTE PTR [esp+eax*4+0x7071e7ab],cl
  41813e:	je     0x418148
  418140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418141:	xor    BYTE PTR [eax],dl
  418143:	sbb    al,0x8e
  418145:	mov    fs,WORD PTR [ebx]
  418147:	inc    edi
  418148:	fcomp  st(1)
  41814a:	mov    ch,0xf5
  41814c:	mov    cs,WORD PTR [edi+0x51be77ca]
  418152:	(bad)
  418155:	pop    ss
  418156:	adc    DWORD PTR [edi],edi
  418158:	xor    al,0xf
  41815a:	jmp    0x48cb:0xc07de12f
  418161:	push   esp
  418162:	fidivr WORD PTR [edx+0xcd12e64]
  418168:	not    BYTE PTR [esi]
  41816a:	add    DWORD PTR [ecx],0x39
  41816d:	dec    DWORD PTR [edi+0x4dc27e5f]
  418173:	adc    dh,BYTE PTR [esi]
  418175:	(bad)  
  418176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418177:	pop    ds
  418178:	xchg   ecx,eax
  418179:	(bad)  
  41817a:	imul   ebx,DWORD PTR [edi-0x62],0xffffff83
  41817e:	shl    BYTE PTR [esi+0x24296ae3],1
  418184:	je     0x418162
  418186:	test   DWORD PTR [eax-0x95a08cc],ebx
  41818c:	mov    ecx,0x3d0d1bff
  418191:	mov    WORD PTR [ebx],fs
  418193:	iret   
  418194:	mov    al,ds:0xe5570fa6
  418199:	and    eax,0x87d29fe1
  41819e:	and    eax,0x4507e2fc
  4181a3:	outs   dx,DWORD PTR ds:[esi]
  4181a4:	jl     0x418127
  4181a6:	dec    ebx
  4181a7:	fld    DWORD PTR [ebx]
  4181a9:	jb     0x4181cb
  4181ab:	cmp    edx,ebp
  4181ad:	mov    al,0x80
  4181af:	cmp    eax,0x2a8d3b82
  4181b4:	test   DWORD PTR [edi+edx*4-0x77],0xa25736d8
  4181bc:	or     DWORD PTR ds:[edi+0x66],ebp
  4181c0:	pusha  
  4181c1:	shl    BYTE PTR [ebp+0x4b],1
  4181c4:	sbb    ecx,DWORD PTR [edi+0x5f52f265]
  4181ca:	dec    edx
  4181cb:	xchg   bl,al
  4181cd:	ret    0xab7b
  4181d0:	sub    bl,bh
  4181d2:	sar    DWORD PTR [eax+eiz*8+0x47],1
  4181d6:	fadd   DWORD PTR [eax]
  4181d8:	xor    ch,BYTE PTR [eax+ebp*4]
  4181db:	add    eax,0xe3bcdb4f
  4181e0:	mov    ch,BYTE PTR [edx]
  4181e2:	gs shl ebp,1
  4181e5:	retf   
  4181e6:	and    eax,DWORD PTR [esi-0x25]
  4181e9:	cs dec ebp
  4181eb:	jle    0x418226
  4181ed:	xchg   ecx,eax
  4181ee:	out    dx,eax
  4181ef:	aas    
  4181f0:	xor    al,0x58
  4181f2:	or     ah,BYTE PTR [eax+0x30]
  4181f5:	das    
  4181f6:	mov    al,0x6b
  4181f8:	repnz cmp DWORD PTR [esp+edx*4],ebx
  4181fc:	mov    dl,0x6f
  4181fe:	push   ebx
  4181ff:	add    eax,0xd9257ac3
  418204:	mov    eax,0x55d2fb5d
  418209:	xor    bl,dh
  41820b:	and    DWORD PTR [esi-0x1fb1e455],ebp
  418211:	mov    eax,ds:0xe4ec7765
  418216:	xchg   edx,eax
  418217:	xor    al,0xbb
  418219:	cmp    edx,DWORD PTR [esi]
  41821b:	ja     0x41822a
  41821d:	xchg   esp,eax
  41821e:	into   
  41821f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418220:	test   al,0x62
  418222:	inc    DWORD PTR [ebx+edx*4]
  418225:	xor    BYTE PTR [ebx-0x60],dh
  418228:	pop    esp
  418229:	mov    ds,WORD PTR [esi]
  41822b:	inc    eax
  41822c:	scas   eax,DWORD PTR es:[edi]
  41822d:	int3   
  41822e:	js     0x418278
  418230:	int3   
  418231:	mov    dh,0xbc
  418233:	das    
  418234:	pop    es
  418235:	inc    ecx
  418236:	out    0x99,al
  418238:	out    0xb2,eax
  41823a:	scas   eax,DWORD PTR es:[edi]
  41823b:	je     0x4182a5
  41823d:	adc    al,0x78
  41823f:	aad    0x45
  418241:	xor    BYTE PTR [ebx+eax*8],al
  418244:	repz mov ah,0xd9
  418247:	fwait
  418248:	std    
  418249:	jg     0x4182c3
  41824b:	stos   DWORD PTR es:[edi],eax
  41824c:	aam    0x52
  41824e:	jae    0x418204
  418250:	or     esp,DWORD PTR [ebp-0x6f]
  418253:	jbe    0x41820a
  418255:	and    edx,DWORD PTR [esi+0x6d5ab4db]
  41825b:	pushw  ss
  41825d:	adc    ebx,DWORD PTR ds:[edx]
  418260:	jg     0x418253
  418262:	cwde   
  418263:	sbb    ebx,eax
  418265:	add    DWORD PTR cs:[ecx-0x1d],eax
  418269:	sub    DWORD PTR [ebp+edx*8+0x12],eax
  41826d:	sub    DWORD PTR [esi+0x58],esi
  418270:	cmc    
  418271:	popf   
  418272:	mov    dh,0xb6
  418274:	imul   eax,DWORD PTR [ecx],0x67
  418277:	lds    esp,FWORD PTR [ebx-0x2c]
  41827a:	ins    DWORD PTR es:[edi],dx
  41827b:	dec    edx
  41827c:	scas   eax,DWORD PTR es:[edi]
  41827d:	and    esp,0xa7851197
  418283:	sbb    al,0x6
  418285:	nop
  418286:	cdq    
  418287:	neg    BYTE PTR [ecx]
  418289:	outs   dx,DWORD PTR ds:[esi]
  41828a:	or     DWORD PTR [ecx+edx*2-0x62],ecx
  41828e:	popa   
  41828f:	jp     0x41827e
  418291:	dec    ebx
  418292:	xchg   edx,eax
  418293:	neg    BYTE PTR [eax]
  418295:	mov    ebp,0x943315e2
  41829a:	adc    al,0xd
  41829c:	dec    esp
  41829d:	adc    DWORD PTR [edx+ebp*2+0x328a56b7],edx
  4182a4:	sti    
  4182a5:	daa    
  4182a6:	inc    ecx
  4182a7:	test   eax,0xa38f1b4b
  4182ac:	sub    al,bh
  4182ae:	xor    edx,DWORD PTR [edx-0x301794e1]
  4182b4:	shr    DWORD PTR [edi],cl
  4182b6:	or     esi,DWORD PTR [ecx+0x43]
  4182b9:	imul   ebp,DWORD PTR [edi],0xffffffc7
  4182bc:	mov    ebp,0xddebcc2b
  4182c1:	mov    ecx,0xa85358ed
  4182c6:	and    al,0xda
  4182c8:	retf   0x41e3
  4182cb:	xchg   edx,eax
  4182cc:	repnz mov ebp,0xeb05ac66
  4182d2:	sbb    esp,DWORD PTR [ecx]
  4182d4:	xchg   DWORD PTR [ebp+0x73eef2ca],ecx
  4182da:	jge    0x418263
  4182dc:	add    BYTE PTR [ecx+0x310d0464],0x23
  4182e3:	xchg   DWORD PTR [ebx],eax
  4182e5:	test   BYTE PTR [ebx],dh
  4182e7:	pop    ds
  4182e8:	dec    esi
  4182e9:	fsubr  st(0),st
  4182eb:	jmp    0x54e49605
  4182f0:	pop    edx
  4182f1:	xor    bl,BYTE PTR [edx-0x4b65e1ea]
  4182f7:	fisttp DWORD PTR [ebx-0x56d7dbfe]
  4182fd:	mov    esi,0x9fd5d94
  418302:	(bad)  
  418304:	add    al,0x7f
  418306:	rcl    DWORD PTR [edi-0x13],cl
  418309:	(bad)  
  41830a:	and    eax,DWORD PTR [edi-0x21]
  41830d:	push   0x4b
  41830f:	enter  0x82,0xb3
  418313:	mov    al,0x54
  418315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418316:	xchg   dh,bl
  418318:	sub    ecx,DWORD PTR [esi+esi*4+0x1c53cb08]
  41831f:	or     edi,DWORD PTR [edx-0x1e184778]
  418325:	lds    esi,FWORD PTR [edi+0x4e]
  418328:	je     0x418305
  41832a:	addr16 jno 0x41834c
  41832d:	(bad)  
  41832e:	sbb    al,BYTE PTR [esi]
  418330:	dec    eax
  418331:	sbb    eax,0x66f3b8da
  418336:	jnp    0x41837a
  418338:	pop    ss
  418339:	arpl   sp,cx
  41833b:	retf   0x963d
  41833e:	push   edx
  41833f:	xchg   edx,eax
  418340:	lahf   
  418341:	arpl   WORD PTR [edi+ebx*1],cx
  418344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418345:	mov    BYTE PTR [edx+0x45],ah
  418348:	not    BYTE PTR [esi-0x7a]
  41834b:	retf   0xf04b
  41834e:	call   DWORD PTR [esi+ebp*1-0xf2a9017]
  418355:	mov    esp,DWORD PTR [edx+ebp*8-0x62]
  418359:	outs   dx,BYTE PTR ds:[esi]
  41835a:	ja     0x4183d9
  41835c:	xor    bl,bl
  41835e:	cwde   
  41835f:	pop    edx
  418360:	cwde   
  418361:	mov    dl,0x32
  418363:	cwde   
  418364:	mov    ebp,0xd65b2d49
  418369:	or     edx,edx
  41836b:	out    dx,al
  41836c:	or     eax,0xb48d9b36
  418371:	and    esi,DWORD PTR [ebx+0x7d5719a5]
  418377:	or     cl,BYTE PTR [edx-0x77]
  41837a:	cmp    eax,DWORD PTR [edi]
  41837c:	out    dx,al
  41837d:	iret   
  41837e:	clc    
  41837f:	sbb    al,0xb3
  418381:	add    esi,edx
  418383:	jbe    0x418398
  418385:	mov    dl,0xf4
  418387:	jne    0x418323
  418389:	in     eax,0x80
  41838b:	cs push edi
  41838d:	push   ds
  41838e:	push   es
  41838f:	add    bl,BYTE PTR [edi+0x65]
  418392:	ins    BYTE PTR es:[edi],dx
  418393:	add    BYTE PTR ds:0xe2a23020,bl
  418399:	lock xchg ecx,eax
  41839b:	out    dx,eax
  41839c:	dec    eax
  41839d:	stos   BYTE PTR es:[edi],al
  41839e:	push   esp
  41839f:	sbb    DWORD PTR [eax+0x2c],edi
  4183a2:	or     al,0x6b
  4183a4:	sbb    DWORD PTR [ebx],edi
  4183a6:	daa    
  4183a7:	shr    DWORD PTR [ebp+0x7e9cf304],1
  4183ad:	out    dx,eax
  4183ae:	popa   
  4183af:	lock ret 
  4183b1:	cmovp  edi,DWORD PTR [ecx-0x1a]
  4183b5:	sbb    dh,ch
  4183b7:	neg    DWORD PTR [ebx]
  4183b9:	mov    bl,0x2
  4183bb:	pop    ecx
  4183bc:	sar    BYTE PTR ds:0x4105e871,cl
  4183c2:	mov    WORD PTR [ebx-0x56],?
  4183c5:	xchg   ebx,eax
  4183c6:	xchg   edx,eax
  4183c7:	enter  0x201f,0x50
  4183cb:	and    DWORD PTR [edi+0xa],edi
  4183ce:	add    DWORD PTR [esi-0x609c06d8],edi
  4183d4:	mov    DWORD PTR [edx],esi
  4183d6:	xchg   edi,eax
  4183d7:	jnp    0x418443
  4183d9:	(bad)  
  4183da:	jp     0x4183b2
  4183dc:	fnclex 
  4183de:	pop    es
  4183df:	inc    edi
  4183e0:	sbb    al,0x71
  4183e2:	aaa    
  4183e3:	xchg   esp,eax
  4183e4:	imul   eax,DWORD PTR [esi-0x49],0x1a
  4183e8:	and    DWORD PTR [ebp-0x64],ecx
  4183eb:	ja     0x418459
  4183ed:	jno    0x4183fd
  4183ef:	lods   eax,DWORD PTR ds:[esi]
  4183f0:	mov    esi,0x7ac920ca
  4183f5:	or     ecx,DWORD PTR [ecx-0x61]
  4183f8:	pop    esp
  4183f9:	mov    esp,0x99ba9826
  4183fe:	jo     0x4183ce
  418400:	and    al,0x3c
  418402:	mov    ds:0xaf7e88b9,al
  418407:	dec    ebp
  418408:	arpl   WORD PTR ds:0x665df1b0,bx
  41840e:	mov    ds:0x85194dd0,eax
  418413:	(bad)  
  418414:	cmc    
  418415:	jmp    DWORD PTR [ebx+0x465d7f4d]
  41841b:	leave  
  41841c:	fdiv   st,st(6)
  41841e:	inc    edx
  41841f:	xor    eax,0x2574e894
  418424:	fldenv [ebx-0x44]
  418427:	jns    0x418477
  418429:	loopne 0x418454
  41842b:	xor    dl,BYTE PTR [ebp+0x1063e2f9]
  418431:	and    ebp,eax
  418433:	cmp    eax,0x5c89229c
  418438:	or     ch,BYTE PTR [eax+ebx*2+0x7d]
  41843c:	in     eax,0xc1
  41843e:	fld    QWORD PTR [ebx-0x7bcd5b3f]
  418444:	dec    esp
  418445:	dec    ebp
  418446:	outs   dx,DWORD PTR ds:[esi]
  418447:	es not edx
  41844a:	pop    es
  41844b:	(bad)  
  41844c:	xchg   ebp,eax
  41844d:	mov    esi,0xab3c23a2
  418452:	cmp    edx,DWORD PTR [ebx]
  418454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418455:	sub    ah,BYTE PTR [ebp-0x51]
  418458:	std    
  418459:	out    dx,al
  41845a:	inc    edi
  41845b:	test   DWORD PTR [ecx-0x31976243],eax
  418461:	inc    esp
  418462:	aam    0x97
  418464:	sub    al,0x72
  418466:	nop
  418467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846a:	aaa    
  41846b:	xchg   DWORD PTR [eax+0x66dc5351],eax
  418471:	jb     0x418491
  418473:	sub    edi,DWORD PTR [ebp-0x59]
  418476:	xchg   esp,eax
  418477:	mov    esp,DWORD PTR [ebx-0x1a]
  41847a:	in     al,0xc8
  41847c:	adc    ah,ah
  41847e:	fcom   DWORD PTR [ebx+0x2c00d14]
  418484:	fstp   TBYTE PTR [eax+0x53]
  418487:	fs jb  0x41841d
  41848a:	mov    ch,0x30
  41848c:	rol    DWORD PTR [edx],1
  41848e:	jnp    0x4184c2
  418490:	cmp    ah,BYTE PTR [esi+0x257a2469]
  418496:	push   esi
  418497:	mov    ah,0xec
  418499:	xchg   edx,eax
  41849a:	imul   ebp,DWORD PTR [edi],0x9eb4cea3
  4184a0:	sub    esp,DWORD PTR [edx+0x2635a48]
  4184a6:	mov    BYTE PTR [esi+0x27],cl
  4184a9:	and    DWORD PTR [eax+0x5fc56666],0x529a5673
  4184b3:	daa    
  4184b4:	mov    esi,0x9cbc02a5
  4184b9:	mov    DWORD PTR [edx+0x52],esi
  4184bc:	pop    ds
  4184bd:	test   DWORD PTR [ebp-0x2d],esi
  4184c0:	jle    0x4184ab
  4184c2:	mov    bh,0x8d
  4184c4:	jle    0x4184c8
  4184c6:	sbb    bl,dl
  4184c8:	jmp    0x418549
  4184ca:	jp     0x4184f5
  4184cc:	dec    ecx
  4184cd:	mov    DWORD PTR [ebp-0x46b89b57],esp
  4184d3:	fstp   TBYTE PTR [eax+0x73]
  4184d6:	jo     0x4184a7
  4184d8:	cmp    eax,0x3a414093
  4184dd:	add    cl,BYTE PTR [edi+0x7cf4eff]
  4184e3:	pop    es
  4184e4:	or     ebx,0x2c27bd42
  4184ea:	sahf   
  4184eb:	sbb    bh,BYTE PTR [edx]
  4184ed:	int    0x95
  4184ef:	aas    
  4184f0:	scas   eax,DWORD PTR es:[edi]
  4184f1:	ror    DWORD PTR [ebp+0x6978f5dc],1
  4184f7:	outs   dx,DWORD PTR ds:[esi]
  4184f8:	xchg   BYTE PTR [ebp-0x7e],dh
  4184fb:	sbb    BYTE PTR [edx-0x64],dl
  4184fe:	add    DWORD PTR [edx+0x40b328e8],ebp
  418504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418505:	scas   al,BYTE PTR es:[edi]
  418506:	sahf   
  418507:	add    al,0xcd
  418509:	cmp    al,0x3d
  41850b:	ud2    
  41850d:	hlt    
  41850e:	and    DWORD PTR [eax-0x5f],0xf98d12d
  418515:	mov    eax,0x7cdce57
  41851a:	test   BYTE PTR [ebx+0x41da4dfa],bl
  418520:	xor    al,0xbd
  418522:	fs push esi
  418524:	xchg   ebx,eax
  418525:	push   ebp
  418526:	push   ebp
  418527:	pop    ds
  418528:	mov    ds:0x5ad69d3,al
  41852d:	hlt    
  41852e:	cld    
  41852f:	mov    esp,0x615a9677
  418534:	cmp    ch,BYTE PTR [edi+0x45f5c677]
  41853a:	je     0x418592
  41853c:	nop
  41853d:	cli    
  41853e:	in     al,0x73
  418540:	out    0x28,eax
  418542:	enter  0x7835,0x61
  418546:	mov    BYTE PTR [ecx+edi*1-0x11ec691a],al
  41854d:	dec    edi
  41854e:	call   0xa5a2508c
  418553:	adc    eax,0xb66417d4
  418558:	adc    eax,0xc0989eaa
  41855d:	xor    BYTE PTR [edx-0x2699f000],0xa4
  418564:	mov    esi,DWORD PTR [edx+eiz*2]
  418567:	and    dl,dl
  418569:	jmp    0x823f5b8a
  41856e:	dec    edx
  41856f:	xchg   esp,eax
  418570:	mov    dl,0x24
  418572:	scas   eax,DWORD PTR es:[edi]
  418573:	cmp    esi,0xffffffd9
  418576:	popa   
  418577:	aaa    
  418578:	enter  0x9e8d,0xc4
  41857c:	cdq    
  41857d:	jecxz  0x4185f9
  41857f:	adc    al,0xe1
  418581:	mov    eax,0x7f9f8963
  418587:	cmp    ecx,DWORD PTR [esi+0x6d80e2b9]
  41858d:	shl    BYTE PTR [esi],cl
  41858f:	rcl    BYTE PTR [eiz*8-0x46699f78],1
  418596:	sub    edi,edi
  418598:	adc    eax,0xcf9a51fe
  41859d:	dec    esp
  41859e:	dec    DWORD PTR [edi]
  4185a0:	fwait
  4185a1:	retf   
  4185a2:	sbb    ecx,DWORD PTR [eax]
  4185a4:	inc    edi
  4185a5:	adc    bh,BYTE PTR [edx+0x16662535]
  4185ab:	sbb    ch,bh
  4185ad:	stc    
  4185ae:	out    dx,eax
  4185af:	fnstenv ds:0x1f279124
  4185b5:	sar    DWORD PTR [ebx-0xe479ca1],1
  4185bb:	cmp    BYTE PTR [ebp-0x6c],bl
  4185be:	mov    esp,0x39131b95
  4185c3:	retf   
  4185c4:	push   edi
  4185c5:	imul   edi,DWORD PTR [ecx-0x53],0x7829d73b
  4185cc:	mov    ebp,es
  4185ce:	mov    dh,BYTE PTR [edi]
  4185d0:	jns    0x41856f
  4185d2:	hlt    
  4185d3:	xor    esi,edx
  4185d5:	data16 and dl,BYTE PTR [ebp+0x6a228c5]
  4185dc:	cmp    eax,0x4ff74243
  4185e1:	sub    al,0xf3
  4185e3:	adc    BYTE PTR [ebp-0x6b],ah
  4185e6:	mov    es,WORD PTR [bx+di]
  4185e9:	push   ebx
  4185ea:	cld    
  4185eb:	aaa    
  4185ec:	pop    ds
  4185ed:	fnop   
  4185ef:	lods   eax,DWORD PTR ds:[esi]
  4185f0:	mov    ds:0xcc68f726,eax
  4185f5:	jg     0x418598
  4185f7:	pop    edi
  4185f8:	jecxz  0x4185d4
  4185fa:	enter  0x2479,0x2c
  4185fe:	cmp    dl,BYTE PTR [eax-0x1f7e5ca4]
  418604:	cs pop eax
  418606:	mov    BYTE PTR [edx+0x13aeaba0],bh
  41860c:	jp     0x4185dd
  41860e:	in     al,0xe2
  418610:	add    edx,ebx
  418612:	ds jmp 0xea113fc3
  418618:	inc    edx
  418619:	sbb    eax,DWORD PTR [ecx]
  41861b:	xlat   BYTE PTR ds:[ebx]
  41861c:	in     eax,0x8d
  41861e:	pop    edi
  41861f:	xor    BYTE PTR [edx+0x1e5fa38e],dh
  418625:	pop    eax
  418626:	adc    BYTE PTR [edi+0x6026ae75],bl
  41862c:	adc    al,0x9b
  41862e:	xchg   ecx,eax
  41862f:	sub    al,BYTE PTR [ebx+0x4b8c27ad]
  418635:	les    edi,FWORD PTR [edx+0x62]
  418638:	pop    ebx
  418639:	test   eax,0x66e01a2
  41863e:	or     DWORD PTR [esi],eax
  418640:	inc    esp
  418641:	jnp    0x4185fc
  418643:	iret   
  418644:	cdq    
  418645:	aad    0x6f
  418647:	inc    edx
  418648:	cmp    DWORD PTR [ebp+0x53],ebx
  41864b:	test   eax,0xa3e55c5a
  418650:	int    0x55
  418652:	sbb    eax,0x37dd3b63
  418657:	pop    edi
  418658:	push   ds
  418659:	cwde   
  41865a:	push   eax
  41865b:	add    dl,BYTE PTR [edx+0x3]
  41865e:	hlt    
  41865f:	push   esi
  418660:	test   DWORD PTR [ebx+0x2e6c7ea2],eax
  418666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418667:	mov    dl,0x85
  418669:	retf   0x808b
  41866c:	jno    0x4186c9
  41866e:	retf   0x45e5
  418671:	mov    ah,0xab
  418673:	sub    esi,ecx
  418675:	stos   DWORD PTR es:[edi],eax
  418676:	push   edx
  418677:	ja     0x4186d3
  418679:	imul   edx,DWORD PTR [eax+0x17],0x6406d170
  418680:	xchg   edi,eax
  418681:	push   cs
  418682:	and    dl,al
  418684:	scas   eax,DWORD PTR es:[edi]
  418685:	xor    al,0x4f
  418687:	das    
  418688:	push   ss
  418689:	jns    0x418615
  41868b:	in     eax,dx
  41868c:	jnp    0x418623
  41868e:	pop    ds
  41868f:	out    0x50,al
  418691:	lea    esi,[edx+0x18921248]
  418697:	(bad)  
  418699:	fwait
  41869a:	cmp    ebp,esp
  41869c:	enter  0xfee6,0x93
  4186a0:	test   eax,0xf21ddd5c
  4186a5:	inc    edi
  4186a6:	pop    ecx
  4186a7:	lock mov ds:0xdbba8f5f,eax
  4186ad:	lahf   
  4186ae:	imul   esi,DWORD PTR ds:0xfd45bb06,0x77
  4186b5:	adc    ebp,ebx
  4186b7:	leave  
  4186b8:	not    edi
  4186ba:	push   edx
  4186bb:	mov    ah,0xbe
  4186bd:	xchg   BYTE PTR [edx-0x4936b9fe],bh
  4186c3:	fst    st(7)
  4186c5:	xchg   ecx,esi
  4186c7:	pop    edx
  4186c8:	cld    
  4186c9:	lods   eax,DWORD PTR ds:[esi]
  4186ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186cb:	hlt    
  4186cc:	add    al,0x86
  4186ce:	shr    ah,cl
  4186d0:	push   eax
  4186d1:	cmc    
  4186d2:	xchg   BYTE PTR [ebp+0x3bedfbe4],dh
  4186d8:	mov    edx,eax
  4186da:	enter  0xb401,0x10
  4186de:	mov    DWORD PTR [ecx-0x20104408],ebp
  4186e4:	imul   esi,DWORD PTR es:[ecx+0x21],0x68
  4186e9:	stos   BYTE PTR es:[edi],al
  4186ea:	stc    
  4186eb:	or     al,BYTE PTR gs:[ebx+ebx*1]
  4186ef:	jl     0x41875c
  4186f1:	sti    
  4186f2:	push   ebp
  4186f3:	sbb    edx,esp
  4186f5:	pop    eax
  4186f6:	mov    esp,0xa6ebdd04
  4186fb:	dec    eax
  4186fc:	dec    edi
  4186fd:	and    esp,DWORD PTR [edx+0x5c]
  418700:	jge    0x418725
  418702:	xchg   ebx,eax
  418703:	mov    ds:0xea093c4f,al
  418708:	inc    edx
  418709:	fdiv   DWORD PTR [ebp-0x19]
  41870c:	dec    ecx
  41870d:	gs xchg esi,eax
  41870f:	and    DWORD PTR [ebp+0x75],ebp
  418712:	ror    BYTE PTR [edi-0x26],0x38
  418716:	fs adc al,0xa0
  418719:	jmp    0x95ec:0x967a4085
  418720:	jns    0x4186f6
  418722:	outs   dx,BYTE PTR ds:[esi]
  418723:	out    dx,eax
  418724:	div    BYTE PTR [edi]
  418726:	sub    bh,BYTE PTR [ebp-0x46b15f08]
  41872c:	imul   edx,DWORD PTR [ecx-0x49e8d89e],0xbb7c6e91
  418736:	iret   
  418737:	mov    edx,0x4bb5b23f
  41873c:	inc    esi
  41873d:	ret    
  41873e:	add    cl,bl
  418740:	stos   BYTE PTR es:[edi],al
  418741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418742:	and    ah,BYTE PTR [edi+0x69]
  418745:	inc    edi
  418746:	mov    esi,0x8ea7f1d1
  41874b:	pop    es
  41874c:	mov    dh,0x62
  41874e:	push   ebp
  41874f:	add    dh,al
  418751:	ss in  eax,dx
  418753:	xchg   esp,eax
  418754:	push   ss
  418755:	push   ds
  418756:	jl     0x41870d
  418758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418759:	fbld   TBYTE PTR [edx-0x37bae69c]
  41875f:	scas   al,BYTE PTR es:[edi]
  418760:	or     al,BYTE PTR [ebx-0x50]
  418763:	arpl   WORD PTR es:[ecx-0x1d],si
  418767:	stos   BYTE PTR es:[edi],al
  418768:	rcl    DWORD PTR [esi],1
  41876a:	(bad)  
  41876c:	jb     0x418730
  41876e:	push   ecx
  41876f:	push   ebx
  418770:	dec    ebx
  418771:	sub    eax,0x3f510b61
  418776:	fadd   DWORD PTR [ebx+eax*4-0x4b]
  41877a:	jnp    0x41871e
  41877c:	repnz fld DWORD PTR [ecx+edi*2]
  418780:	pop    ebp
  418781:	fstp   TBYTE PTR [ebp-0x4f6e1dd4]
  418787:	xchg   esi,eax
  418788:	sub    bh,dh
  41878a:	sti    
  41878b:	or     BYTE PTR [ebp+0x4d],0x52
  41878f:	minps  xmm6,XMMWORD PTR [esi+0x1ae02ac]
  418796:	fs hlt 
  418798:	cmc    
  418799:	cmp    eax,0x34055c22
  41879e:	adc    eax,eax
  4187a0:	dec    edi
  4187a1:	fild   DWORD PTR [ebp-0x77395382]
  4187a7:	sbb    esp,ebp
  4187a9:	mov    dh,0x1b
  4187ab:	popa   
  4187ac:	or     BYTE PTR [esi-0x49],al
  4187af:	outs   dx,DWORD PTR ds:[esi]
  4187b0:	out    0xe3,al
  4187b2:	mov    esi,0x5ff4464d
  4187b7:	sbb    al,0x5b
  4187b9:	sbb    ebx,ebp
  4187bb:	fwait
  4187bc:	je     0x41874e
  4187be:	cmp    dl,BYTE PTR ds:0x1efea6e8
  4187c4:	pop    ebx
  4187c5:	lock xchg DWORD PTR [edx-0x60],eax
  4187c9:	out    0x38,al
  4187cb:	cmp    ebx,DWORD PTR [edx-0x48]
  4187ce:	jge    0x4187ea
  4187d0:	(bad)  
  4187d1:	xchg   edx,eax
  4187d2:	add    ebx,ebx
  4187d4:	scas   eax,DWORD PTR es:[edi]
  4187d5:	call   0x7ba:0x58baff69
  4187dc:	pop    esi
  4187dd:	jbe    0x41883d
  4187df:	or     ebx,DWORD PTR [ecx+0x5f97d16a]
  4187e5:	mov    bl,0xa9
  4187e7:	add    ebp,DWORD PTR [edx+0xc9ccaff]
  4187ed:	js     0x4187b6
  4187ef:	or     al,0xf0
  4187f1:	scas   al,BYTE PTR es:[edi]
  4187f2:	ret    0x533b
  4187f5:	adc    al,0x60
  4187f7:	push   0xffffffb1
  4187f9:	xchg   esp,eax
  4187fa:	inc    edi
  4187fb:	pop    ebp
  4187fc:	stos   BYTE PTR es:[edi],al
  4187fd:	dec    sp
  4187ff:	or     eax,0xd142c2fb
  418804:	push   cs
  418805:	cmc    
  418806:	jb     0x4187f2
  418808:	fnstsw WORD PTR ds:0x5b639e95
  41880e:	(bad)  
  41880f:	pop    ss
  418810:	repz mov ebx,0xd84c5053
  418816:	cmp    eax,DWORD PTR fs:[ebx+0x2a]
  41881a:	outs   dx,DWORD PTR ds:[esi]
  41881b:	push   eax
  41881c:	jmp    0xaa9f:0xee2d42a8
  418823:	pushf  
  418824:	sub    ch,0xb5
  418827:	lds    esp,FWORD PTR [eax+0x2e]
  41882a:	cmp    ecx,eax
  41882c:	lods   al,BYTE PTR ds:[esi]
  41882d:	mov    eax,ds:0x321bcc87
  418832:	clc    
  418833:	imul   edx,DWORD PTR [ebx-0x13],0x20dd0c69
  41883a:	loopne 0x418812
  41883c:	lods   eax,DWORD PTR ds:[esi]
  41883d:	or     dh,BYTE PTR [edi+0x728ab846]
  418843:	mov    edi,0x4d8b988
  418848:	inc    ecx
  418849:	out    0xad,eax
  41884b:	shl    ebp,1
  41884d:	hlt    
  41884e:	push   esp
  41884f:	mov    bl,0x16
  418851:	jno    0x4188b6
  418853:	and    al,0x5c
  418855:	test   al,0x6
  418857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418858:	mov    ds:0x6ba4d8c7,eax
  41885d:	lods   al,BYTE PTR ds:[esi]
  41885e:	scas   eax,DWORD PTR es:[edi]
  41885f:	xchg   ebp,eax
  418860:	push   0x1ee65d3d
  418865:	(bad)  [eax+0x26]
  418868:	mov    ebp,DWORD PTR [ecx+edi*4]
  41886b:	push   ecx
  41886c:	add    ah,BYTE PTR [edx+ebx*8]
  41886f:	cmp    al,0xbf
  418871:	cmp    al,0x12
  418873:	push   ebx
  418874:	add    bh,BYTE PTR [ebx-0x6399b98e]
  41887a:	jns    0x418853
  41887c:	into   
  41887d:	test   eax,0x6ac072b8
  418883:	sub    cl,ch
  418885:	in     eax,0x39
  418887:	pop    eax
  418888:	std    
  418889:	adc    BYTE PTR [ecx],cl
  41888b:	xchg   edx,eax
  41888c:	cmp    al,0x27
  41888e:	mov    esi,0x3f2ede3e
  418893:	mov    ?,WORD PTR [eax-0x7fae1477]
  418899:	retf   
  41889a:	cmp    ch,BYTE PTR [ebx-0x52cf1fb8]
  4188a0:	out    0x25,al
  4188a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a3:	cmp    al,BYTE PTR [eax+0x16]
  4188a6:	push   ecx
  4188a7:	jge    0x41889d
  4188a9:	aaa    
  4188aa:	ror    DWORD PTR [edx+0xe2f0ea],1
  4188b0:	xchg   sp,ax
  4188b2:	std    
  4188b3:	xchg   ecx,eax
  4188b4:	xchg   BYTE PTR [ebp-0x66a795ef],dh
  4188ba:	xor    BYTE PTR [edi],bl
  4188bc:	pop    ss
  4188bd:	inc    edi
  4188be:	sbb    cl,BYTE PTR [edx+0x75e7163e]
  4188c4:	inc    ecx
  4188c5:	popf   
  4188c6:	leave  
  4188c7:	sbb    al,0x6f
  4188c9:	out    dx,eax
  4188ca:	inc    ebx
  4188cb:	mov    edi,0xf11523a8
  4188d0:	add    al,0xc8
  4188d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188d3:	pop    edi
  4188d4:	into   
  4188d5:	sahf   
  4188d6:	xor    al,0x4b
  4188d8:	cmp    dl,BYTE PTR [edx+esi*2]
  4188db:	adc    ebx,0xe9a73373
  4188e1:	out    0x5a,eax
  4188e3:	or     al,0xbf
  4188e5:	lds    esi,FWORD PTR [ebx-0x22]
  4188e8:	sbb    eax,0x1c4f52f3
  4188ed:	test   BYTE PTR [ebp-0x69],0x27
  4188f1:	jle    0x418873
  4188f3:	fld    QWORD PTR [ebp-0x1d]
  4188f6:	ja     0x41887a
  4188f8:	dec    eax
  4188f9:	xchg   esp,eax
  4188fa:	popa   
  4188fb:	ja     0xfa649c11
  418901:	test   DWORD PTR [eax+ebx*2+0x58],ebp
  418905:	fistp  DWORD PTR [edx]
  418907:	jno    0x418971
  418909:	ret    
  41890a:	retf   
  41890b:	dec    ebx
  41890c:	outs   dx,DWORD PTR ds:[esi]
  41890d:	cld    
  41890e:	in     al,dx
  41890f:	mov    ebp,0xaea8694d
  418914:	lock scas eax,DWORD PTR es:[edi]
  418916:	js     0x41893b
  418918:	rcr    BYTE PTR [ebx+0x781844a1],1
  41891e:	cmp    eax,0xccf6c950
  418923:	fstp   TBYTE PTR [ecx]
  418925:	ret    0x6fb7
  418928:	rol    DWORD PTR [edx],1
  41892a:	fist   DWORD PTR [ecx-0xc]
  41892d:	xor    DWORD PTR [esi+0x44c8035b],eax
  418933:	outs   dx,BYTE PTR ds:[esi]
  418934:	out    dx,al
  418935:	repnz add ch,dh
  418938:	lods   eax,DWORD PTR ds:[esi]
  418939:	(bad)  
  41893b:	mov    esi,0x907a8eb2
  418940:	das    
  418941:	push   ecx
  418942:	inc    ebx
  418943:	into   
  418944:	dec    ecx
  418945:	inc    ebp
  418946:	sub    dl,dh
  418948:	xchg   edx,eax
  418949:	sub    DWORD PTR [ecx-0x525354fb],edx
  41894f:	cmp    al,0xd7
  418951:	fwait
  418952:	adc    al,0xdc
  418954:	sub    DWORD PTR [ebx+0x62a52413],0xbbb2bced
  41895e:	mov    cl,0xdf
  418960:	cld    
  418961:	mov    BYTE PTR [eax-0x1c],bh
  418964:	jmp    0xf2cf:0x28f8677a
  41896b:	out    0xab,eax
  41896d:	fs js  0x418986
  418970:	call   0x4874:0x7252df3e
  418977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418978:	jp     0x4188fa
  41897a:	(bad)  
  41897b:	retf   0x499d
  41897e:	mov    ah,0xc
  418980:	scas   eax,DWORD PTR es:[edi]
  418981:	sub    dh,0x99
  418984:	jg     0x418947
  418986:	cmp    DWORD PTR [ecx+ecx*8-0x346f5596],0x1fd7788e
  418991:	mov    ds:0x738e8105,eax
  418996:	out    dx,eax
  418997:	rcr    BYTE PTR [ecx+0x672bf031],cl
  41899d:	das    
  41899e:	adc    cl,al
  4189a0:	je     0x4189cd
  4189a2:	push   eax
  4189a3:	loopne 0x41895b
  4189a5:	jno    0x418a11
  4189a7:	and    dl,BYTE PTR [eax+edi*2+0x472d3c85]
  4189ae:	dec    esp
  4189af:	test   al,0x65
  4189b1:	enter  0x3d9a,0xcc
  4189b5:	int    0x8d
  4189b7:	pop    eax
  4189b8:	popa   
  4189b9:	addr16 cld 
  4189bb:	loop   0x418998
  4189bd:	jmp    0x48ab:0xa56dc8c9
  4189c4:	shl    DWORD PTR [ebp-0x1f],0x5d
  4189c8:	lods   eax,DWORD PTR ds:[esi]
  4189c9:	sti    
  4189ca:	cs pop edi
  4189cc:	sub    ah,BYTE PTR [esi]
  4189ce:	test   eax,0xfb51c548
  4189d3:	mov    al,ds:0xbf0fd382
  4189d8:	push   ds
  4189d9:	sbb    al,0xec
  4189db:	or     DWORD PTR fs:[esi+ebp*4],ecx
  4189df:	add    al,0xdf
  4189e1:	dec    esp
  4189e2:	push   ebx
  4189e3:	xchg   edx,eax
  4189e4:	push   esi
  4189e5:	shl    DWORD PTR [ecx+0x126ebf0e],1
  4189eb:	pop    edi
  4189ec:	add    DWORD PTR [edx+0x7356f4b7],0x3a158f30
  4189f6:	sub    BYTE PTR [esi+edi*1+0x71],al
  4189fa:	daa    
  4189fb:	pop    ebx
  4189fc:	adc    BYTE PTR [edi+0x77],al
  4189ff:	and    bl,BYTE PTR [edx+eax*2+0x7a9e5f17]
  418a06:	scas   eax,DWORD PTR es:[edi]
  418a07:	jns    0x418a4f
  418a09:	fsub   DWORD PTR [ebp+0x3da944ac]
  418a0f:	and    al,0x53
  418a11:	push   ds
  418a12:	pop    edx
  418a13:	adc    eax,0x95cde227
  418a18:	mov    ecx,0x97a998fb
  418a1d:	call   FWORD PTR [edi+0x58]
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	cld    
  418a3f:	jae    0x418a83
  418a41:	out    dx,al
  418a42:	cmp    DWORD PTR [edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	jg     0x418a8a
  418a4c:	les    ecx,FWORD PTR [edi-0x6d01db53]
  418a52:	ret    
  418a53:	dec    ebp
  418a54:	test   DWORD PTR [edi-0x5d1f7983],ecx
  418a5a:	bound  edi,QWORD PTR [ecx]
  418a5c:	mov    edi,esi
  418a5e:	xor    eax,0x9c3946d0
  418a63:	inc    esp
  418a64:	inc    ecx
  418a65:	push   edx
  418a66:	jns    0x418a56
  418a68:	aam    0x37
  418a6a:	xlat   BYTE PTR ds:[ebx]
  418a6b:	ror    BYTE PTR [ecx+ecx*2+0x4ea2708a],1
  418a72:	lods   al,BYTE PTR ds:[esi]
  418a73:	sbb    eax,DWORD PTR [ecx]
  418a75:	xchg   edi,eax
  418a76:	ss jge 0x418a61
  418a79:	adc    eax,0xf26993d
  418a7e:	dec    edi
  418a7f:	and    BYTE PTR [esi+0x75],0xd8
  418a83:	loopne 0x418acc
  418a85:	retf   
  418a86:	xor    eax,edx
  418a88:	add    al,0x39
  418a8a:	inc    ebx
  418a8b:	xlat   BYTE PTR ds:[ebx]
  418a8c:	inc    edi
  418a8d:	outs   dx,DWORD PTR ds:[esi]
  418a8e:	pop    ss
  418a8f:	jo     0x418ad7
  418a91:	in     al,0x3c
  418a93:	push   ebx
  418a94:	scas   al,BYTE PTR es:[edi]
  418a95:	imul   esi,DWORD PTR [eax+0x6c6a71f5],0x69
  418a9c:	or     al,BYTE PTR [edi-0x189987ec]
  418aa2:	cmp    al,0x96
  418aa4:	or     ecx,ebp
  418aa6:	sbb    ch,bh
  418aa8:	dec    ebx
  418aa9:	xor    al,0x34
  418aab:	pop    DWORD PTR [eax+0x46]
  418aae:	mov    BYTE PTR [edi+0x20],ch
  418ab1:	dec    esi
  418ab2:	and    bl,BYTE PTR [eax]
  418ab4:	cli    
  418ab5:	sahf   
  418ab6:	mov    edx,0x96e63384
  418abb:	or     al,0xb1
  418abd:	push   ebp
  418abe:	cld    
  418abf:	nop
  418ac0:	ror    eax,1
  418ac2:	fisttp DWORD PTR [ecx]
  418ac4:	mov    bl,0x8e
  418ac6:	jecxz  0x418ab2
  418ac8:	xor    eax,0xfed88cf6
  418acd:	push   ebx
  418ace:	adc    BYTE PTR [eax-0x1f6f6530],ch
  418ad4:	mov    ds:0xbef494e1,eax
  418ad9:	adc    al,0x66
  418adb:	cld    
  418adc:	xor    edi,DWORD PTR [ebp+0x6b]
  418adf:	add    eax,0xea0caff4
  418ae4:	fadd   DWORD PTR [ebx-0x11]
  418ae7:	and    DWORD PTR [ecx-0x1834233a],ebp
  418aed:	pop    edx
  418aee:	push   eax
  418aef:	cld    
  418af0:	sub    dh,BYTE PTR [eax-0x23]
  418af3:	add    eax,0x182400ea
  418af8:	jbe    0x418b37
  418afa:	mov    al,ds:0x9815781
  418aff:	scas   eax,DWORD PTR es:[edi]
  418b00:	fistp  WORD PTR [edx]
  418b02:	and    ch,BYTE PTR [edx]
  418b04:	jle    0x418b36
  418b06:	jle    0x418af0
  418b08:	daa    
  418b09:	cmp    cl,0xbd
  418b0c:	mov    cl,0x51
  418b0e:	cmp    BYTE PTR [ebx-0x4e],bl
  418b11:	push   es
  418b12:	(bad)  
  418b13:	gs bound eax,QWORD PTR ss:[esi]
  418b17:	(bad)  
  418b18:	mov    cl,0x89
  418b1a:	mov    al,ds:0x60c130e0
  418b1f:	test   al,0x9f
  418b21:	in     eax,0x5c
  418b23:	popa   
  418b24:	fwait
  418b25:	shr    DWORD PTR [eax+0x505a1a02],0x14
  418b2c:	jbe    0x418ae3
  418b2e:	mov    dh,0x28
  418b30:	mov    bh,BYTE PTR [ecx-0xd]
  418b33:	push   ebp
  418b34:	enter  0x33d7,0xb2
  418b38:	stos   DWORD PTR es:[edi],eax
  418b39:	(bad)  
  418b3a:	adc    ch,BYTE PTR [edx]
  418b3c:	aad    0x13
  418b3e:	xchg   edx,eax
  418b3f:	aaa    
  418b40:	loope  0x418aff
  418b42:	test   al,0xcf
  418b44:	xchg   ebx,eax
  418b45:	jae    0x418b10
  418b47:	push   esp
  418b48:	jne    0x418ae9
  418b4a:	push   es
  418b4b:	out    0x95,eax
  418b4d:	xlat   BYTE PTR ds:[ebx]
  418b4e:	xor    DWORD PTR [edx+0x538964b2],ebp
  418b54:	or     edx,DWORD PTR [edi]
  418b56:	sti    
  418b57:	and    DWORD PTR [esi],edx
  418b59:	sbb    eax,0x43450184
  418b5e:	syscall 
  418b60:	test   DWORD PTR [ecx+0x1b08257f],esp
  418b66:	rol    DWORD PTR [ebp+edx*2+0x1005869e],1
  418b6d:	je     0x418b1d
  418b6f:	add    BYTE PTR [esi],cl
  418b71:	mov    bh,dl
  418b73:	dec    esp
  418b74:	ss sub ch,0xc6
  418b78:	popa   
  418b79:	xchg   ecx,eax
  418b7a:	scas   eax,DWORD PTR es:[edi]
  418b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b7c:	stos   BYTE PTR es:[edi],al
  418b7d:	ss mov dl,0xe1
  418b80:	out    dx,al
  418b81:	pusha  
  418b82:	retf   0x84cd
  418b85:	nop
  418b86:	add    ch,BYTE PTR [eax-0x7026fa23]
  418b8c:	aas    
  418b8d:	lods   al,BYTE PTR ds:[esi]
  418b8e:	mov    cl,0x1a
  418b90:	push   0xfffffff5
  418b92:	lea    eax,[edi*8-0x3c0e9c53]
  418b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b9a:	jnp    0x418c0f
  418b9c:	stos   DWORD PTR es:[edi],eax
  418b9d:	sub    eax,0x365f3ee6
  418ba2:	rol    BYTE PTR [edx+0x4b682c61],0x31
  418ba9:	retf   
  418baa:	xchg   ebx,eax
  418bab:	clc    
  418bac:	xor    eax,0x23033e0f
  418bb1:	retf   0xe99c
  418bb4:	pop    ds
  418bb5:	and    al,0x22
  418bb7:	iret   
  418bb8:	adc    WORD PTR [ebx],di
  418bbb:	mov    BYTE PTR [eax],bl
  418bbd:	mov    dh,0xce
  418bbf:	mov    ebp,0x9c01b0fe
  418bc4:	inc    edi
  418bc5:	sbb    eax,0xf2da34e4
  418bca:	stc    
  418bcb:	jl     0x418be0
  418bcd:	push   ecx
  418bce:	push   esi
  418bcf:	lods   eax,DWORD PTR ds:[esi]
  418bd0:	ret    
  418bd1:	ss stc 
  418bd3:	add    al,0xfe
  418bd5:	mov    ebp,0x9d8b4e68
  418bda:	jno    0x418bec
  418bdc:	mov    bh,BYTE PTR [eax-0x5ef62aaa]
  418be2:	aam    0x1b
  418be4:	stos   DWORD PTR es:[edi],eax
  418be5:	cmc    
  418be6:	pop    es
  418be7:	sar    BYTE PTR [ecx-0x36],1
  418bea:	lock nop
  418bec:	dec    edi
  418bed:	add    al,0x8f
  418bef:	ds push 0x5fb8a9eb
  418bf5:	retf   0xcfb7
  418bf8:	and    ah,BYTE PTR [edi]
  418bfa:	lea    ecx,[ebp-0x24]
  418bfd:	jmp    0x418bc5
  418bff:	lahf   
  418c00:	fs jmp 0xc4be65cd
  418c06:	add    DWORD PTR [edi],edx
  418c08:	mov    BYTE PTR [edx-0x75e9d1aa],dl
  418c0e:	retf   0x4b6f
  418c11:	mov    bl,0x54
  418c13:	loopne 0x418c0f
  418c15:	xor    cl,BYTE PTR [edx-0x43]
  418c18:	shr    BYTE PTR [ebx],1
  418c1a:	jge    0x418bf7
  418c1c:	ror    DWORD PTR ds:[esi*2-0x6ad12ef3],cl
  418c24:	mov    dh,0x5c
  418c26:	jmp    0x4cbfd6a0
  418c2b:	add    DWORD PTR [ebx-0x14f81361],edi
  418c31:	xor    bl,BYTE PTR [eax]
  418c33:	mov    eax,gs:0x4afb20de
  418c39:	xchg   ebp,eax
  418c3a:	sub    dh,dl
  418c3c:	adc    BYTE PTR ds:0xf122ca7e,0x9a
  418c43:	and    ebx,DWORD PTR [edi+ebp*8]
  418c46:	add    DWORD PTR [ecx-0x7cd130e5],ebx
  418c4c:	jb     0x418bec
  418c4e:	das    
  418c4f:	xor    esp,DWORD PTR [ebx-0x8]
  418c52:	adc    al,cl
  418c54:	pushf  
  418c55:	cmp    DWORD PTR [ebx-0x381e5caf],ebp
  418c5b:	ins    DWORD PTR es:[edi],dx
  418c5c:	loop   0x418cbe
  418c5e:	shr    BYTE PTR gs:[ecx+ebp*1-0x60],0xea
  418c64:	(bad)  
  418c65:	mov    edx,0x10eea039
  418c6a:	mov    WORD PTR [ecx+0x683cb564],ds
  418c70:	lahf   
  418c71:	dec    esp
  418c72:	loope  0x418bff
  418c74:	ja     0x418c4e
  418c76:	sbb    al,0x5f
  418c78:	or     BYTE PTR [edi+0x59],ch
  418c7b:	iret   
  418c7c:	pop    esi
  418c7d:	gs inc esp
  418c7f:	addr16 jb 0x418c4c
  418c82:	or     DWORD PTR [ecx-0x5f1b3bba],ebp
  418c88:	xchg   esi,eax
  418c89:	jbe    0x418c72
  418c8b:	xor    bh,BYTE PTR [esp+ebp*8-0x4a]
  418c8f:	arpl   WORD PTR [edx],si
  418c91:	xchg   ebx,eax
  418c92:	mov    ds:0xcc5c8423,al
  418c97:	mov    bh,0x1f
  418c99:	jbe    0x418c83
  418c9b:	arpl   WORD PTR [esi-0x476c4459],bx
  418ca1:	cmp    ebp,DWORD PTR [edi]
  418ca3:	mov    ds:0x1454b9d9,al
  418ca8:	jge    0x418ca7
  418caa:	pop    ds
  418cab:	dec    ecx
  418cac:	ficom  WORD PTR [esi+0x44a6aaf0]
  418cb2:	mov    ds:0xf8242043,al
  418cb7:	cmp    ch,BYTE PTR [edi]
  418cb9:	sub    DWORD PTR [eax],esp
  418cbb:	xchg   DWORD PTR [eax],ebp
  418cbd:	pop    edx
  418cbe:	std    
  418cbf:	int3   
  418cc0:	movd   mm5,DWORD PTR [ebx]
  418cc3:	sub    BYTE PTR [eax+ebp*4-0x17],0xbf
  418cc8:	cmp    al,BYTE PTR [edi-0x8]
  418ccb:	push   ecx
  418ccc:	shr    BYTE PTR [ebx-0x5d],1
  418ccf:	das    
  418cd0:	inc    ecx
  418cd1:	clc    
  418cd2:	retf   0xab72
  418cd5:	mov    ds:0x85ef7e12,eax
  418cda:	retf   0x3590
  418cdd:	xchg   ebx,eax
  418cde:	dec    esi
  418cdf:	cli    
  418ce0:	icebp  
  418ce1:	inc    cl
  418ce3:	aas    
  418ce4:	pop    ebp
  418ce5:	sub    BYTE PTR [ebx-0x7b],dh
  418ce8:	icebp  
  418ce9:	sub    eax,0x6cd00a7b
  418cee:	clc    
  418cef:	rcr    BYTE PTR [edx+0x67],0x8b
  418cf3:	mov    eax,ds:0x15678023
  418cf8:	xor    bl,dh
  418cfa:	inc    esi
  418cfb:	fs out dx,eax
  418cfd:	loop   0x418cd2
  418cff:	and    DWORD PTR [ecx+0x5f2bc236],esp
  418d05:	call   0x22437777
  418d0a:	outs   dx,BYTE PTR ds:[esi]
  418d0b:	sti    
  418d0c:	jbe    0x418d76
  418d0e:	inc    edi
  418d0f:	mov    eax,0x2abaaad8
  418d14:	test   al,0xdb
  418d16:	mov    esp,0xa2f17902
  418d1b:	mov    eax,ds:0xb53d99de
  418d20:	inc    edi
  418d21:	xor    BYTE PTR [eax+0x2fe13866],0xfd
  418d28:	popf   
  418d29:	dec    ecx
  418d2a:	lods   al,BYTE PTR ds:[esi]
  418d2b:	es (bad) 
  418d2d:	mov    bh,0xa1
  418d2f:	jmp    0xa843:0x815d02af
  418d36:	xchg   ecx,eax
  418d37:	in     al,0x49
  418d39:	mov    dh,0xf2
  418d3b:	jbe    0x418d25
  418d3d:	mov    ebp,0x5ddc65c6
  418d42:	mov    cs,WORD PTR [eax+esi*4-0x3047d44d]
  418d49:	sub    dh,BYTE PTR [edi]
  418d4b:	mov    ah,0xce
  418d4d:	pop    eax
  418d4e:	popa   
  418d4f:	mov    edx,eax
  418d51:	pushf  
  418d52:	shl    cl,0x60
  418d55:	jle    0x418d4c
  418d57:	mov    ebx,0x892c12bb
  418d5c:	hlt    
  418d5d:	lods   eax,DWORD PTR ds:[esi]
  418d5e:	pop    ebx
  418d5f:	jge    0x418cf4
  418d61:	mov    ecx,0x338e47f6
  418d66:	mov    bl,0xa6
  418d68:	cmp    al,0xc1
  418d6a:	neg    bl
  418d6c:	mov    esp,0x861cfdd5
  418d71:	jmp    0x418d38
  418d73:	mov    edx,0x50c29ca9
  418d78:	cmc    
  418d79:	xchg   edx,eax
  418d7a:	xchg   ebp,eax
  418d7b:	mov    bh,0x9d
  418d7d:	fs pop ebx
  418d7f:	jmp    0xd0a0:0xb1448fb4
  418d86:	pop    ecx
  418d87:	mov    ecx,ebx
  418d89:	push   ds
  418d8a:	xchg   DWORD PTR [esp+ecx*1+0x1f9d3749],ebp
  418d91:	arpl   bp,ax
  418d93:	pop    ecx
  418d94:	sub    eax,0x73931e9e
  418d99:	or     esp,DWORD PTR [esi+0x526c2526]
  418d9f:	fistp  WORD PTR [ebx+0x2c]
  418da2:	jns    0x418de9
  418da4:	or     dl,BYTE PTR [ebx+0x3c]
  418da7:	aaa    
  418da8:	ret    
  418da9:	fsub   st(0),st
  418dab:	cld    
  418dac:	and    WORD PTR ds:0xaa2bd41a,di
  418db3:	pusha  
  418db4:	cld    
  418db5:	in     al,0x7d
  418db7:	mov    esp,0x2da0969d
  418dbc:	iret   
  418dbd:	inc    ebx
  418dbe:	fcos   
  418dc0:	lds    esp,FWORD PTR [ecx+ebx*1+0x1d3c282b]
  418dc7:	mov    BYTE PTR [edx-0x66],0x89
  418dcb:	addr16 call 0x778d:0xd0b52192
  418dd3:	pop    esi
  418dd4:	popa   
  418dd5:	loop   0x418dd4
  418dd7:	ror    ebx,cl
  418dd9:	inc    esi
  418dda:	xor    dh,BYTE PTR [ebx-0x4f047988]
  418de0:	mov    esp,0x3702711
  418de5:	xor    eax,0x1bc2386f
  418dea:	shl    DWORD PTR [edi+0x1e],cl
  418ded:	std    
  418dee:	aas    
  418def:	cli    
  418df0:	xor    eax,0xf18df257
  418df5:	and    BYTE PTR [eax-0x16],ch
  418df8:	xchg   ebp,eax
  418df9:	hlt    
  418dfa:	std    
  418dfb:	sahf   
  418dfc:	push   ds
  418dfd:	cmp    al,0xde
  418dff:	call   0x380bf862
  418e04:	clc    
  418e05:	comiss xmm5,DWORD PTR [eax]
  418e08:	repz xchg edx,eax
  418e0a:	or     eax,0xd8b567e3
  418e0f:	adc    edx,DWORD PTR [ebx-0x1cb89ecf]
  418e15:	icebp  
  418e16:	rol    BYTE PTR [edi-0x41293c52],0x5c
  418e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1e:	fadd   QWORD PTR [esi-0x10]
  418e21:	aad    0x8c
  418e23:	or     eax,0xca437efd
  418e28:	push   cs
  418e29:	push   edx
  418e2a:	sub    eax,0x89c94140
  418e2f:	sbb    al,0x41
  418e31:	jl     0x418e2e
  418e33:	ss test ax,0x9793
  418e38:	mov    WORD PTR [edx-0x12f70664],?
  418e3e:	sbb    al,0x73
  418e40:	not    esi
  418e42:	adc    al,0x8c
  418e44:	fidiv  WORD PTR [esi-0x58]
  418e47:	bound  esi,QWORD PTR ds:0xd7fa72fb
  418e4d:	jne    0x418ea1
  418e4f:	and    eax,0x85560f35
  418e54:	mov    WORD PTR [eax+edx*1-0x274d4545],es
  418e5b:	mov    ch,0xac
  418e5d:	aam    0xa
  418e5f:	mov    edi,0x39b446a4
  418e64:	repz adc dl,BYTE PTR [ebp+0x7a02baf3]
  418e6b:	int    0xae
  418e6d:	xchg   edx,eax
  418e6e:	rcl    DWORD PTR [ecx+0x2b],0x22
  418e72:	xor    al,0x57
  418e74:	adc    ecx,DWORD PTR [ecx]
  418e76:	aaa    
  418e77:	out    dx,al
  418e78:	lods   al,BYTE PTR ds:[esi]
  418e79:	adc    al,0x3f
  418e7b:	imul   eax,DWORD PTR [ecx+eiz*1-0x17ed90b1],0xfffffffd
  418e83:	fmul   QWORD PTR [eax]
  418e85:	and    DWORD PTR [edx],ecx
  418e87:	sti    
  418e88:	sbb    edx,DWORD PTR [eax+0x3]
  418e8b:	or     ch,ah
  418e8d:	into   
  418e8e:	fnstenv [edi-0x10]
  418e91:	xor    ebx,DWORD PTR [ebx]
  418e93:	imul   edi,DWORD PTR [edi-0x383c99b1],0x609e5e46
  418e9d:	stc    
  418e9e:	push   esp
  418e9f:	out    dx,eax
  418ea0:	push   cs
  418ea1:	jl     0x418e6f
  418ea3:	aaa    
  418ea4:	sbb    DWORD PTR [ecx+ecx*8],0xd9b52de6
  418eab:	add    eax,0x326a3cbe
  418eb0:	xlat   BYTE PTR ds:[ebx]
  418eb1:	mov    cs,eax
  418eb3:	retf   0xb6fc
  418eb6:	jge    0x418ea6
  418eb8:	nop
  418eb9:	loopne 0x418ed8
  418ebb:	mov    WORD PTR [edx],fs
  418ebd:	outs   dx,DWORD PTR ds:[esi]
  418ebe:	push   ds
  418ebf:	sub    eax,0xb0b2f82f
  418ec4:	aas    
  418ec5:	(bad)  
  418ec6:	xchg   esi,eax
  418ec7:	push   edx
  418ec8:	and    edi,esi
  418eca:	fld    TBYTE PTR [eax+0x41]
  418ecd:	cs and al,0xa1
  418ed0:	stc    
  418ed1:	sar    DWORD PTR [ecx],0x90
  418ed4:	mov    esp,0xd642d85f
  418ed9:	xchg   esi,eax
  418eda:	into   
  418edb:	jmp    FWORD PTR cs:[edi+ecx*8+0x1769074e]
  418ee3:	pop    ebx
  418ee4:	or     ecx,ebx
  418ee6:	fs (bad) 
  418ee8:	sub    ebx,eax
  418eea:	pop    ds
  418eeb:	dec    eax
  418eec:	cdq    
  418eed:	dec    esi
  418eee:	in     ax,dx
  418ef0:	dec    ebx
  418ef1:	xchg   ebp,eax
  418ef2:	outs   dx,DWORD PTR ds:[esi]
  418ef3:	fisttp QWORD PTR [ecx+eax*1]
  418ef6:	jbe    0x418f00
  418ef8:	mov    fs,WORD PTR [eax-0x6d]
  418efb:	iret   
  418efc:	add    ecx,DWORD PTR [eax+0x70]
  418eff:	cmp    al,0x6e
  418f01:	je     0x418f05
  418f03:	test   al,0xc0
  418f05:	or     BYTE PTR [edx+0x4423196],0x4
  418f0c:	pop    ecx
  418f0d:	std    
  418f0e:	adc    BYTE PTR [eax-0x30415768],bh
  418f14:	mov    bh,0x9a
  418f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f17:	push   edi
  418f18:	sbb    ecx,ebp
  418f1a:	adc    eax,0xc4d764ec
  418f1f:	gs mov edx,0xedc321ea
  418f25:	adc    DWORD PTR [ecx],ebp
  418f27:	pop    edi
  418f28:	dec    edi
  418f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2a:	push   ds
  418f2b:	jb     0x418f73
  418f2d:	ins    DWORD PTR es:[edi],dx
  418f2e:	cli    
  418f2f:	push   ds
  418f30:	push   0xea5461e1
  418f35:	cs ja  0x418eea
  418f38:	gs jbe 0x418ed9
  418f3b:	xchg   ecx,eax
  418f3c:	(bad)  [edx+ebp*2]
  418f3f:	aaa    
  418f40:	mov    ecx,0xf8a19040
  418f45:	mov    edx,cs
  418f47:	mov    ecx,0xe3d92d9d
  418f4c:	adc    DWORD PTR [edx-0x5cd3c689],ebp
  418f52:	mov    al,0x3d
  418f54:	add    DWORD PTR [eax],ecx
  418f56:	xchg   ebx,eax
  418f57:	xchg   bh,bl
  418f59:	fst    QWORD PTR [edx+0x3e6ce266]
  418f5f:	xor    al,0x51
  418f61:	in     eax,dx
  418f62:	adc    cl,BYTE PTR [edx-0x5b5c3c9b]
  418f68:	lods   eax,DWORD PTR fs:[esi]
  418f6a:	out    0x7a,al
  418f6c:	out    dx,al
  418f6d:	je     0x418f68
  418f6f:	int3   
  418f70:	and    DWORD PTR [ebx],ebx
  418f72:	cmp    BYTE PTR [eax+0x308ce294],dl
  418f78:	push   es
  418f79:	inc    esp
  418f7a:	stos   DWORD PTR es:[edi],eax
  418f7b:	cmp    bl,0xfd
  418f7e:	cmp    bl,BYTE PTR [eax-0x76]
  418f81:	loope  0x418f08
  418f83:	out    0xf7,al
  418f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f86:	(bad)  
  418f87:	(bad)
  418f8c:	lods   al,BYTE PTR ds:[esi]
  418f8d:	push   ecx
  418f8e:	retf   
  418f8f:	inc    DWORD PTR [ecx+0x385e8234]
  418f95:	xchg   ebp,eax
  418f96:	ds mov esp,edi
  418f99:	in     al,dx
  418f9a:	scas   al,BYTE PTR es:[edi]
  418f9b:	(bad)  
  418f9c:	dec    edi
  418f9d:	dec    ebp
  418f9e:	stos   BYTE PTR es:[edi],al
  418f9f:	or     bl,ch
  418fa1:	cmp    al,cl
  418fa3:	lods   al,BYTE PTR ds:[esi]
  418fa4:	ret    
  418fa5:	daa    
  418fa6:	mov    DWORD PTR [ebx-0x58],0x81c75a88
  418fad:	cmp    DWORD PTR [ecx],0x99e2812c
  418fb3:	loop   0x418f4e
  418fb5:	jb     0x419012
  418fb7:	stos   BYTE PTR es:[edi],al
  418fb8:	call   0x5a0c:0x136e9193
  418fbf:	icebp  
  418fc0:	dec    eax
  418fc1:	adc    al,0x2a
  418fc3:	push   ecx
  418fc4:	xchg   ebp,eax
  418fc5:	xor    DWORD PTR [ecx*4-0x288742a],ebx
  418fcc:	jl     0x418fdf
  418fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fcf:	mov    ds:0x13ace5b8,eax
  418fd4:	sbb    BYTE PTR es:[edx+ebp*2+0xc],dh
  418fd9:	gs sub cl,dl
  418fdc:	sti    
  418fdd:	pop    edx
  418fde:	aaa    
  418fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fe0:	lahf   
  418fe1:	ins    DWORD PTR es:[edi],dx
  418fe2:	mov    ah,0x36
  418fe4:	mov    DWORD PTR [ecx],ebx
  418fe6:	sbb    eax,0xdf04b2b6
  418feb:	aad    0x1f
  418fed:	and    al,0x57
  418fef:	push   ds
  418ff0:	dec    ecx
  418ff1:	fs inc esi
  418ff3:	leave  
  418ff4:	pop    esi
  418ff5:	or     esi,DWORD PTR [ebp-0x19c8490c]
  418ffb:	dec    ecx
  418ffc:	stc    
  418ffd:	test   DWORD PTR [ecx-0x684e8bda],eax
  419003:	adc    ch,BYTE PTR [ebx+0x34]
  419006:	xchg   DWORD PTR [ebp-0x79704c90],ebx
  41900c:	retf   0xbf47
  41900f:	or     DWORD PTR [ecx-0x44492ebe],esp
  419015:	sbb    edx,ebx
  419017:	inc    ebp
  419018:	push   eax
  419019:	add    edi,DWORD PTR [edx-0x71aa180d]
  41901f:	fwait
  419020:	out    0xf0,al
  419022:	adc    al,0x89
  419024:	call   0x8a4:0x254f6c4c
  41902b:	cmp    al,0x3e
  41902d:	dec    edx
  41902e:	add    edi,DWORD PTR [eax-0x42]
  419031:	mov    cl,0x67
  419033:	pop    ebp
  419034:	clc    
  419035:	(bad)  
  419036:	ss out 0xbe,eax
  419039:	jg     0x41902f
  41903b:	adc    eax,0x7dedb536
  419040:	stc    
  419041:	push   es
  419042:	adc    eax,esi
  419044:	jns    0x418fe1
  419046:	adc    al,BYTE PTR [ecx]
  419048:	dec    edx
  419049:	clc    
  41904a:	xchg   esp,eax
  41904b:	adc    cl,cl
  41904d:	aaa    
  41904e:	jmp    0x419093
  419050:	xor    al,0x19
  419052:	dec    esp
  419053:	sbb    ebp,DWORD PTR [ecx+0x55dd1e21]
  419059:	imul   esp,DWORD PTR fs:[ebp+ebp*1-0x4f],0x3f416a0c
  419062:	pop    ecx
  419063:	sub    eax,0xf32c72fb
  419068:	or     DWORD PTR [eax+0x7af40bae],0xcc1be1f
  419072:	in     eax,dx
  419073:	inc    esp
  419074:	cmp    ebx,DWORD PTR [ecx+esi*1+0x338a0b85]
  41907b:	mov    ebp,ecx
  41907d:	mov    al,0x6f
  41907f:	sbb    bl,dl
  419081:	cmp    BYTE PTR [edx-0x46fb7e37],bl
  419087:	adc    BYTE PTR [edi-0x7f2fbcc3],bl
  41908d:	(bad)  
  41908e:	jo     0x4190e8
  419090:	out    dx,al
  419091:	mov    eax,ds:0x47521791
  419096:	cmp    edi,edi
  419098:	mov    ecx,eax
  41909a:	je     0x41910a
  41909c:	jg     0x4190fb
  41909e:	das    
  41909f:	pop    esp
  4190a0:	dec    edi
  4190a1:	add    al,0xf2
  4190a3:	jg     0x4190cc
  4190a5:	xchg   ecx,eax
  4190a6:	or     cl,BYTE PTR [ebp+0x9]
  4190a9:	mov    dh,0x7e
  4190ab:	mov    eax,0x7f93eba4
  4190b0:	bound  edx,QWORD PTR [ecx+0x33]
  4190b3:	sub    al,0xe8
  4190b5:	mov    ebp,edi
  4190b7:	sbb    eax,0x7132f28b
  4190bc:	sbb    esi,eax
  4190be:	loope  0x419131
  4190c0:	jno    0xb8bba565
  4190c6:	int    0x45
  4190c8:	sbb    al,0x6f
  4190ca:	add    DWORD PTR [ebx-0xb4f54c6],esp
  4190d0:	or     DWORD PTR [edx],0xb64df632
  4190d6:	icebp  
  4190d7:	cs mov bl,0x3a
  4190da:	sub    eax,0x2f072a18
  4190df:	and    ch,ah
  4190e1:	iret   
  4190e2:	sbb    BYTE PTR [edx+0x2],bh
  4190e5:	jbe    0x419095
  4190e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e8:	popa   
  4190e9:	jo     0x419168
  4190eb:	jmp    0x21bea887
  4190f0:	dec    BYTE PTR [edx-0x2c4d8060]
  4190f6:	xchg   BYTE PTR [ebx],cl
  4190f8:	cmp    bh,bh
  4190fa:	sbb    al,0x29
  4190fc:	sbb    dl,cl
  4190fe:	retf   
  4190ff:	(bad)  
  419100:	std    
  419101:	mov    al,0x76
  419103:	sbb    dl,cl
  419105:	dec    edx
  419106:	mov    ch,0xa6
  419108:	xor    eax,0x6126df3e
  41910d:	popf   
  41910e:	push   ecx
  41910f:	jge    0x41916a
  419111:	cli    
  419112:	xchg   ecx,eax
  419113:	pop    ebx
  419114:	add    DWORD PTR [edi+edi*8-0x21],edx
  419118:	push   0xaddd2d6f
  41911d:	fidivr DWORD PTR [ebx+0x20]
  419120:	(bad)  
  419121:	std    
  419122:	sbb    edi,DWORD PTR [ebx]
  419124:	pop    eax
  419125:	inc    ecx
  419126:	xor    esp,eax
  419128:	dec    ebx
  419129:	je     0x4190fc
  41912b:	dec    eax
  41912c:	pop    ebx
  41912d:	paddusb mm4,QWORD PTR [edi+0x6]
  419131:	or     eax,0xfa37a0dd
  419136:	rcl    esp,0xb7
  419139:	inc    edx
  41913a:	dec    ebp
  41913b:	imul   eax,DWORD PTR [esi+eax*8-0x31],0x50
  419140:	cs cmp ecx,0x680c4492
  419147:	inc    ecx
  419148:	or     al,0x5f
  41914a:	mov    al,ds:0xf850383f
  41914f:	jne    0x4190fe
  419151:	xchg   ebx,eax
  419152:	push   esi
  419153:	je     0x4191a3
  419155:	xor    esp,edx
  419157:	shl    DWORD PTR [ecx-0x1af8fe56],0x23
  41915e:	stos   DWORD PTR es:[edi],eax
  41915f:	outs   dx,DWORD PTR ds:[esi]
  419160:	jge    0x419152
  419162:	push   0xa80c229f
  419167:	cmp    al,BYTE PTR [ebp-0x556adadc]
  41916d:	outs   dx,BYTE PTR ds:[esi]
  41916e:	jle    0x419108
  419170:	ret    0xa965
  419173:	dec    ebx
  419174:	stos   DWORD PTR es:[edi],eax
  419175:	adc    dh,dl
  419177:	cs cmp ebp,edx
  41917a:	jl     0x4191f1
  41917c:	adc    al,0x9
  41917e:	(bad)  
  41917f:	sbb    ebx,DWORD PTR [ebp-0x23]
  419182:	sub    al,0x18
  419184:	mov    cl,0x8
  419186:	cmp    DWORD PTR [ebx+0x228a529f],edi
  41918c:	sbb    ebp,DWORD PTR [edi]
  41918e:	in     al,0x73
  419190:	sub    ah,BYTE PTR [edx]
  419192:	lods   al,BYTE PTR ds:[esi]
  419193:	mov    edx,0x71cb160e
  419198:	inc    ecx
  419199:	push   DWORD PTR [eax]
  41919b:	inc    esi
  41919c:	(bad)  
  41919d:	jnp    0x41919c
  41919f:	in     eax,dx
  4191a0:	pop    eax
  4191a1:	mov    ecx,0x7cbd0c90
  4191a6:	pop    eax
  4191a7:	stos   DWORD PTR es:[edi],eax
  4191a8:	aad    0x40
  4191aa:	bound  edi,QWORD PTR [edi+0x3f]
  4191ad:	bnd ret 
  4191af:	lods   eax,DWORD PTR ds:[esi]
  4191b0:	std    
  4191b1:	shl    DWORD PTR [esi-0x555854bd],0xf0
  4191b8:	ror    DWORD PTR [esi+0x7f],0xdf
  4191bc:	xor    ch,BYTE PTR [esi+esi*2]
  4191bf:	xor    edi,ebp
  4191c1:	ror    DWORD PTR [ebp-0x538ad974],1
  4191c7:	arpl   ax,di
  4191c9:	jnp    0x41916e
  4191cb:	add    DWORD PTR [ecx-0x21],ecx
  4191ce:	jo     0x419243
  4191d0:	inc    eax
  4191d1:	mov    bl,0xcb
  4191d3:	jg     0x4191bc
  4191d5:	mov    al,0x74
  4191d7:	sbb    al,dl
  4191d9:	adc    edx,eax
  4191db:	mov    edx,0x213da619
  4191e0:	repnz inc esi
  4191e2:	adc    DWORD PTR [edx],esi
  4191e4:	out    dx,eax
  4191e5:	jge    0x419203
  4191e7:	pop    ebx
  4191e8:	imul   ebx,DWORD PTR [eax-0x6aa0c084],0x3a
  4191ef:	stos   DWORD PTR es:[edi],eax
  4191f0:	adc    DWORD PTR [eax+0x24],0xffffffd0
  4191f4:	into   
  4191f5:	shl    DWORD PTR [ecx],0xb2
  4191f8:	ins    DWORD PTR es:[edi],dx
  4191f9:	sbb    ebx,DWORD PTR [ebx]
  4191fb:	inc    ecx
  4191fc:	mov    dl,BYTE PTR [edi+0x35]
  4191ff:	sub    BYTE PTR [eax+0x3c82c797],0x25
  419206:	ret    0x952f
  419209:	pusha  
  41920a:	shr    ah,0x91
  41920d:	aaa    
  41920e:	pop    ds
  41920f:	sbb    DWORD PTR [esi+esi*8+0x7a],edx
  419213:	add    BYTE PTR [edx-0x1],0x19
  419217:	ins    BYTE PTR es:[edi],dx
  419218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419219:	cmp    bl,ah
  41921b:	push   ecx
  41921c:	(bad)  
  41921f:	add    esi,DWORD PTR [ebx+0x79]
  419222:	xchg   dh,dl
  419224:	out    dx,al
  419225:	xor    al,0x70
  419227:	or     al,0x6
  419229:	pop    ebx
  41922a:	mov    dh,0xe1
  41922c:	aas    
  41922d:	sub    al,0x10
  41922f:	dec    BYTE PTR [ebp-0x5a]
  419232:	lea    esp,[edx+0x73]
  419235:	jp     0x4191e1
  419237:	jno    0x41923a
  419239:	inc    esp
  41923a:	cmp    BYTE PTR [eax+edx*2],bl
  41923d:	cld    
  41923e:	in     eax,dx
  41923f:	(bad)  
  419241:	jp     0x41925f
  419243:	not    DWORD PTR [esi]
  419245:	push   edx
  419246:	hlt    
  419247:	fwait
  419248:	pop    ss
  419249:	push   ebp
  41924a:	not    DWORD PTR [edx+ebx*4]
  41924d:	ins    DWORD PTR es:[edi],dx
  41924e:	jp     0x419247
  419250:	inc    edi
  419251:	add    BYTE PTR [edi-0x595d3b37],0xcf
  419258:	and    bh,BYTE PTR [eax-0x544e3a9]
  41925e:	pop    esp
  41925f:	out    dx,eax
  419260:	addr16 inc ebx
  419262:	pop    es
  419263:	or     al,0x6b
  419265:	mov    WORD PTR [edi+0x383788d0],es
  41926b:	inc    ebp
  41926c:	mov    edx,0x5d9b1bc3
  419271:	pslld  mm4,QWORD PTR [ebx+0x6b]
  419275:	cli    
  419276:	movups xmm5,xmm7
  419279:	mov    esi,0xdc218f9d
  41927e:	pushf  
  41927f:	adc    BYTE PTR [edi+ebp*1],cl
  419282:	mov    dl,0x30
  419284:	push   DWORD PTR [edx+0x69c9b1de]
  41928a:	ret    
  41928b:	jne    0x41930b
  41928d:	mov    al,0x14
  41928f:	adc    esp,DWORD PTR [edi-0x75]
  419292:	pop    ebx
  419293:	dec    ecx
  419294:	rol    BYTE PTR [ecx+ebx*8+0x18],0x6a
  419299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41929a:	xlat   BYTE PTR ds:[ebx]
  41929b:	mov    ebp,0x35ebabc0
  4192a0:	inc    ebx
  4192a1:	cwde   
  4192a2:	fldcw  WORD PTR [ebx-0x2f1d9b33]
  4192a8:	jl     0x41931f
  4192aa:	sbb    al,0x9e
  4192ac:	lods   al,BYTE PTR ds:[esi]
  4192ad:	adc    ah,BYTE PTR [edx]
  4192af:	or     BYTE PTR [eax+0x26],bh
  4192b2:	inc    edx
  4192b3:	xchg   esi,eax
  4192b4:	fisttp WORD PTR [esi-0x5a536fc3]
  4192ba:	pusha  
  4192bb:	jne    0x4192d8
  4192bd:	fist   DWORD PTR [ebx+0x2eda1526]
  4192c3:	daa    
  4192c4:	fs test al,0xd2
  4192c7:	retf   
  4192c8:	xchg   dh,dh
  4192ca:	pop    ebx
  4192cb:	leave  
  4192cc:	or     bl,BYTE PTR [eax-0x693bfb2f]
  4192d2:	add    eax,DWORD PTR [edi-0x7fc3dc4a]
  4192d8:	(bad)  
  4192d9:	cmp    eax,0x4c485da7
  4192de:	push   cs
  4192df:	or     al,0x1d
  4192e1:	or     bh,BYTE PTR [esi]
  4192e3:	sbb    edx,DWORD PTR [ebx-0x17beffd2]
  4192e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192ea:	or     dl,dl
  4192ec:	sub    dh,BYTE PTR [ecx+0x26b0ab06]
  4192f2:	mov    bl,0xe5
  4192f4:	xchg   ebp,eax
  4192f5:	test   BYTE PTR [ebx-0x4cf42731],0xaf
  4192fc:	sub    BYTE PTR [esi-0x1],al
  4192ff:	fmul   st,st(7)
  419301:	mul    DWORD PTR [ebx-0x772aafc5]
  419307:	bound  ebp,QWORD PTR [esi+edi*2-0x43bb7655]
  41930e:	dec    DWORD PTR [ecx-0x18]
  419311:	sbb    eax,0xf02efed6
  419316:	scas   eax,DWORD PTR es:[edi]
  419317:	pop    edi
  419318:	xchg   BYTE PTR [ebx+0x4],dl
  41931b:	dec    DWORD PTR [ebp+0xa]
  41931e:	out    0x80,al
  419320:	mov    ch,0xc7
  419322:	sub    BYTE PTR [ecx],ch
  419324:	call   0x14e23a2c
  419329:	jg     0x4192c2
  41932b:	pop    esi
  41932c:	data16 or al,0x43
  41932f:	push   edx
  419330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419331:	sub    DWORD PTR [ebx+0x5cfac975],eax
  419337:	scas   al,BYTE PTR es:[edi]
  419338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419339:	sti    
  41933a:	cmp    esi,esi
  41933c:	dec    esp
  41933d:	mov    eax,esi
  41933f:	mov    BYTE PTR [eax],ah
  419341:	mov    dl,BYTE PTR [ebx+0x1f]
  419344:	and    ah,BYTE PTR ds:0xf96a6064
  41934a:	push   esi
  41934b:	push   es
  41934c:	adc    eax,0x587f41af
  419351:	and    BYTE PTR [eax+0x4eeaedf],dh
  419357:	cmp    eax,0x510c8325
  41935c:	fidivr DWORD PTR [edx+0x3d]
  41935f:	dec    esi
  419360:	ss cmp eax,0x303ded1f
  419366:	and    DWORD PTR [esi+0x6d],0xffffffcb
  41936a:	lods   eax,DWORD PTR ds:[esi]
  41936b:	mov    ebx,0x3fdf1d07
  419370:	pop    edx
  419371:	or     eax,0x682641e6
  419376:	mov    dl,0xb3
  419378:	arpl   WORD PTR [edi],bx
  41937a:	lahf   
  41937b:	in     al,dx
  41937c:	xchg   edx,eax
  41937d:	stos   DWORD PTR es:[edi],eax
  41937e:	jmp    0x36b6:0x3aea98f2
  419385:	retf   
  419386:	cmp    bl,cl
  419388:	in     al,0xa2
  41938a:	iret   
  41938b:	(bad)  
  41938c:	scas   al,BYTE PTR es:[edi]
  41938d:	lahf   
  41938e:	jecxz  0x419369
  419390:	mov    dh,0xd1
  419392:	inc    esi
  419393:	push   ebp
  419394:	int3   
  419395:	aam    0x16
  419397:	mov    ebp,0x5727339d
  41939c:	sbb    al,0x2
  41939e:	scas   eax,DWORD PTR es:[edi]
  41939f:	bnd jg 0x41932a
  4193a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a3:	sub    bl,dh
  4193a5:	push   ebx
  4193a6:	jb     0x41936b
  4193a8:	mov    bl,0x29
  4193aa:	pusha  
  4193ab:	les    ecx,FWORD PTR [eax-0xf194256]
  4193b1:	mov    al,ds:0x9633bf6a
  4193b6:	(bad)  
  4193b7:	cwde   
  4193b8:	fwait
  4193b9:	mov    esi,0x322202ae
  4193be:	icebp  
  4193bf:	lods   eax,DWORD PTR ds:[esi]
  4193c0:	sti    
  4193c1:	scas   al,BYTE PTR es:[edi]
  4193c2:	push   edx
  4193c3:	xor    dh,BYTE PTR [esi-0x4dd4b689]
  4193c9:	pop    ecx
  4193ca:	out    dx,eax
  4193cb:	and    bh,bl
  4193cd:	les    ebp,FWORD PTR [eax+edi*1-0x41dc893a]
  4193d4:	jecxz  0x41941e
  4193d6:	mov    ebp,0xd82dfc9a
  4193db:	out    0x97,al
  4193dd:	cld    
  4193de:	ds add eax,0xa42465cf
  4193e4:	pop    edx
  4193e5:	push   es
  4193e6:	(bad)
  4193eb:	mov    edx,0x2da89f82
  4193f0:	cs cli 
  4193f2:	sub    DWORD PTR [ebx+0x4a],esp
  4193f5:	adc    al,0xc1
  4193f7:	jl     0x419386
  4193f9:	or     DWORD PTR [esi],0xe21a390b
  4193ff:	jb     0x41944b
  419401:	xchg   ebx,eax
  419402:	xchg   ecx,eax
  419403:	data16 xor BYTE PTR [ebx+0x41],dl
  419407:	mov    ds:0x65ad442b,al
  41940c:	(bad)  
  41940d:	fsubr  QWORD PTR [ebp+0x5a]
  419410:	inc    edx
  419411:	cwde   
  419412:	adc    dh,BYTE PTR [edi*1+0x55eb50a8]
  419419:	or     al,0x1b
  41941b:	mov    edi,0x67afc06
  419420:	mov    ebx,0x3b007e21
  419425:	int    0x59
  419427:	adc    ecx,DWORD PTR [ecx+eiz*4]
  41942a:	xchg   esi,eax
  41942b:	or     DWORD PTR [ecx+0x49],ebx
  41942e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942f:	push   0xdef8f0fe
  419434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419435:	inc    ebx
  419436:	and    bh,BYTE PTR [edi-0x80]
  419439:	or     eax,0xf7b2920a
  41943e:	and    BYTE PTR [edx],0xa8
  419441:	sub    al,0xa2
  419443:	push   ebx
  419444:	push   ss
  419445:	pop    ecx
  419446:	mov    edi,0x4be4c904
  41944b:	jo     0x419406
  41944d:	pop    edi
  41944e:	iret   
  41944f:	pop    edx
  419450:	mov    al,ds:0xe245cbd7
  419455:	clc    
  419456:	and    BYTE PTR [edx-0x2f],bh
  419459:	hlt    
  41945a:	imul   esi,ecx,0x1a1393b4
  419460:	cli    
  419461:	xor    cl,bh
  419463:	jae    0x419476
  419465:	mov    WORD PTR [esi+0x22c61f02],gs
  41946b:	xlat   BYTE PTR ds:[ebx]
  41946c:	mov    cl,0xf3
  41946e:	pop    ds
  41946f:	ficom  WORD PTR ds:0x4c22a38f
  419475:	imul   ecx,DWORD PTR [edx+0x3d],0x9d2fc4cf
  41947c:	cli    
  41947d:	xor    bl,BYTE PTR [eax-0x701c5efa]
  419483:	xchg   edx,eax
  419484:	mov    edx,DWORD PTR [edx-0x23]
  419487:	stos   BYTE PTR es:[edi],al
  419488:	into   
  419489:	sti    
  41948a:	cld    
  41948b:	retf   0x9426
  41948e:	int    0x92
  419490:	jmp    0x41949b
  419492:	icebp  
  419493:	rcr    edi,1
  419495:	jmp    0x419478
  419497:	xor    bh,BYTE PTR [edx+0x2bfb3b34]
  41949d:	mov    dl,0xe0
  41949f:	fdivr  st(4),st
  4194a1:	ja     0x419521
  4194a3:	retf   
  4194a4:	repz xchg bl,cl
  4194a7:	inc    ebx
  4194a8:	push   edx
  4194a9:	mov    ecx,edx
  4194ab:	and    ebp,DWORD PTR [ebx+0x2425176b]
  4194b1:	pop    ss
  4194b2:	not    BYTE PTR [ecx-0x18b028d6]
  4194b8:	adc    cl,dh
  4194ba:	inc    esp
  4194bb:	out    dx,eax
  4194bc:	add    DWORD PTR [ebp-0x57],edi
  4194bf:	out    dx,al
  4194c0:	loopne 0x419532
  4194c2:	jle    0x419525
  4194c4:	pop    ds
  4194c5:	and    BYTE PTR [ebp+eax*2+0x5bc793c0],0x4f
  4194cd:	lods   al,BYTE PTR ds:[esi]
  4194ce:	arpl   WORD PTR [eax],ax
  4194d0:	(bad)  
  4194d1:	pop    eax
  4194d2:	jecxz  0x419454
  4194d4:	jg     0x419551
  4194d6:	mov    al,ds:0x2ed53242
  4194db:	sbb    BYTE PTR [eax],dl
  4194dd:	test   al,bh
  4194df:	lods   eax,DWORD PTR ds:[esi]
  4194e0:	dec    eax
  4194e1:	xchg   ebx,eax
  4194e2:	sbb    DWORD PTR [ebp-0x676632ea],edi
  4194e8:	mov    ah,BYTE PTR [edi]
  4194ea:	or     BYTE PTR [edx+ebx*1],al
  4194ed:	fwait
  4194ee:	sti    
  4194ef:	fstp   st(6)
  4194f1:	and    BYTE PTR [esi],bh
  4194f3:	stos   BYTE PTR es:[edi],al
  4194f4:	cmp    ebp,esp
  4194f6:	cli    
  4194f7:	scas   eax,DWORD PTR es:[edi]
  4194f8:	sub    al,0x5e
  4194fa:	xchg   ecx,ecx
  4194fc:	daa    
  4194fd:	sbb    DWORD PTR [ebx+0x6c],edi
  419500:	xor    al,0xd6
  419502:	aam    0x7b
  419504:	in     al,dx
  419505:	cdq    
  419506:	fcmovb st,st(6)
  419508:	push   0x58
  41950a:	enter  0x9dd9,0x61
  41950e:	or     DWORD PTR ds:[eax-0x26e2a952],esi
  419515:	ins    DWORD PTR es:[edi],dx
  419516:	jle    0x4194f7
  419518:	repnz push es
  41951a:	mov    ebx,0x7322b627
  41951f:	lods   eax,DWORD PTR ds:[esi]
  419520:	fucom  st(5)
  419522:	sub    BYTE PTR [eax-0x2dbd9907],cl
  419528:	pop    ebx
  419529:	jns    0x4194ce
  41952b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952c:	and    eax,DWORD PTR [eax+ebp*1-0x41]
  419530:	xchg   edi,eax
  419531:	js     0x41957e
  419533:	arpl   WORD PTR [eax-0x77],bx
  419536:	sti    
  419537:	icebp  
  419538:	lods   al,BYTE PTR ds:[esi]
  419539:	clc    
  41953a:	push   ss
  41953b:	xchg   edi,eax
  41953c:	dec    esp
  41953d:	(bad)  
  41953e:	(bad)  
  419540:	push   ebx
  419541:	or     cl,BYTE PTR [ebx+eax*8+0x28]
  419545:	mov    ebx,0x30e395a1
  41954a:	popf   
  41954b:	mov    esi,0x18bab132
  419550:	rol    DWORD PTR [eax+0x17c613df],cl
  419556:	or     DWORD PTR [eax+0x59],edx
  419559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41955a:	icebp  
  41955b:	or     al,0xa9
  41955d:	add    BYTE PTR [esi+0x2632aeae],0xf7
  419564:	ja     0x419545
  419566:	xlat   BYTE PTR ds:[ebx]
  419567:	shr    DWORD PTR ds:0x8834a503,cl
  41956d:	ffreep st(3)
  41956f:	mov    bh,0x21
  419571:	stos   BYTE PTR es:[edi],al
  419572:	int3   
  419573:	sbb    al,0x93
  419575:	xor    eax,0x96a06ee2
  41957a:	ret    
  41957b:	mov    esi,0xb624624
  419580:	jmp    0x994:0xc2fc534b
  419587:	(bad)  
  419588:	mov    cl,0xb9
  41958a:	jp     0x41958f
  41958c:	fldenv [ecx+0x75880010]
  419592:	and    bl,cl
  419594:	mov    BYTE PTR [ecx+0x67931661],dh
  41959a:	jo     0x419530
  41959c:	sbb    eax,0xdce59575
  4195a1:	mov    cl,0x2e
  4195a3:	dec    ebx
  4195a4:	dec    esp
  4195a5:	mov    ds:0xcca56da9,al
  4195aa:	fadd   QWORD PTR [edx+0x78]
  4195ad:	repnz sti 
  4195af:	push   esi
  4195b0:	imul   dh
  4195b2:	icebp  
  4195b3:	dec    esp
  4195b4:	mov    ah,0xb5
  4195b6:	fbstp  TBYTE PTR [edi]
  4195b8:	jle    0x419575
  4195ba:	mov    bl,0xf8
  4195bc:	mov    dl,0x2f
  4195be:	cmp    esp,edx
  4195c0:	xchg   esp,eax
  4195c1:	in     al,dx
  4195c2:	shl    BYTE PTR [eax-0x9],0x79
  4195c6:	push   es
  4195c7:	(bad)  [ebp-0x23d8f3a7]
  4195cd:	imul   edx,DWORD PTR [eax],0xf
  4195d0:	xchg   ecx,eax
  4195d1:	lods   eax,DWORD PTR ds:[esi]
  4195d2:	adc    eax,DWORD PTR [bp+si]
  4195d5:	pop    esp
  4195d6:	addr16 mov ebx,0xadb5db62
  4195dc:	mov    ecx,0xc41181e7
  4195e1:	or     esp,ecx
  4195e3:	loop   0x4195b3
  4195e5:	xor    ebx,DWORD PTR [edx+0x10]
  4195e8:	call   0xd6f42915
  4195ed:	ja     0x419637
  4195ef:	(bad)  
  4195f1:	push   ss
  4195f2:	inc    esp
  4195f3:	int    0x4
  4195f5:	imul   esi,DWORD PTR [edi-0x79d7a260],0x120f9db8
  4195ff:	jno    0x41962a
  419601:	inc    ebp
  419602:	div    BYTE PTR [edx]
  419604:	cmp    eax,0xd4dfd8e8
  419609:	stc    
  41960a:	mov    ecx,0x5c3cd9e
  41960f:	push   esi
  419610:	lods   eax,DWORD PTR ds:[esi]
  419611:	inc    ecx
  419612:	mov    ah,0xcb
  419614:	sub    esi,DWORD PTR [eax+eax*8]
  419617:	loopne 0x419640
  419619:	push   es
  41961a:	mov    dl,0xb2
  41961c:	lock jne 0x419663
  41961f:	jbe    0x419600
  419621:	dec    edi
  419622:	ins    DWORD PTR es:[edi],dx
  419623:	jp     0x4195e4
  419625:	pop    esi
  419626:	ins    BYTE PTR es:[edi],dx
  419627:	sbb    cl,cl
  419629:	fsubr  QWORD PTR [eax-0x4e]
  41962c:	push   esp
  41962d:	arpl   WORD PTR [eax+0x50],dx
  419630:	xor    eax,0x5a0c3a15
  419635:	retf   0x6844
  419638:	mov    eax,0xa938027e
  41963d:	fsub   QWORD PTR [esi]
  41963f:	mov    ecx,0x4fd486cd
  419644:	retf   0xf605
  419647:	sahf   
  419648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419649:	jmp    0x82f63c69
  41964e:	(bad)  
  419650:	pop    ds
  419651:	inc    ebp
  419652:	daa    
  419653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419654:	in     al,0xa3
  419656:	pop    esp
  419657:	in     eax,dx
  419658:	add    ebx,DWORD PTR [edx-0x11]
  41965b:	lds    ebx,FWORD PTR [edx-0x1c2d111c]
  419661:	daa    
  419662:	data16 and ah,0x71
  419666:	popf   
  419667:	pop    eax
  419668:	cmp    al,0x4a
  41966a:	mov    edx,0xdf09072e
  41966f:	and    ecx,0xffffffa1
  419672:	imul   ebp,DWORD PTR [edx+0x2d],0xffffffb5
  419676:	cmp    DWORD PTR [edx],esi
  419678:	jle    0x419632
  41967a:	inc    DWORD PTR [eax-0x3c]
  41967d:	and    al,0xb7
  41967f:	pop    ebp
  419680:	outs   dx,DWORD PTR ds:[esi]
  419681:	imul   edx,DWORD PTR [ebx],0x24
  419684:	out    dx,al
  419685:	jno    0x419664
  419687:	popa   
  419688:	pop    eax
  419689:	mov    ch,0xac
  41968b:	ja     0x4196d2
  41968d:	loopne 0x41967b
  41968f:	sar    DWORD PTR [edi],0x1d
  419692:	jne    0x419697
  419694:	outs   dx,BYTE PTR ds:[esi]
  419695:	mov    ebx,0x18316da5
  41969a:	xor    ah,dh
  41969c:	sbb    DWORD PTR [edi],ecx
  41969e:	xor    DWORD PTR [edx+0x4cb9a766],edi
  4196a4:	xlat   BYTE PTR ds:[ebx]
  4196a5:	adc    ah,bl
  4196a7:	inc    ebx
  4196a8:	or     BYTE PTR [edx],cl
  4196aa:	pop    ds
  4196ab:	out    dx,al
  4196ac:	inc    ebx
  4196ad:	pop    ecx
  4196ae:	mov    ah,0x4
  4196b0:	mov    dl,al
  4196b2:	push   esp
  4196b3:	daa    
  4196b4:	(bad)  
  4196b5:	jg     0x41964e
  4196b7:	xlat   BYTE PTR ds:[ebx]
  4196b8:	pop    ecx
  4196b9:	in     al,0x85
  4196bb:	(bad)  
  4196bc:	(bad)  
  4196bd:	mov    ch,0xa9
  4196bf:	xor    ebx,edi
  4196c1:	(bad)  
  4196c2:	ficom  WORD PTR [edi]
  4196c4:	xchg   DWORD PTR [ecx+ebx*1],esp
  4196c7:	dec    esi
  4196c8:	xor    al,0xc4
  4196ca:	pop    ss
  4196cb:	and    ah,al
  4196cd:	pop    ebx
  4196ce:	in     eax,dx
  4196cf:	jns    0x41974c
  4196d1:	dec    di
  4196d3:	xor    BYTE PTR [edx],0xbe
  4196d6:	push   esi
  4196d7:	bnd jno 0x4196fe
  4196da:	cmp    BYTE PTR [edi+edi*4+0x1c],bh
  4196de:	jg     0x419721
  4196e0:	xchg   ebp,eax
  4196e1:	imul   ecx
  4196e3:	ret    
  4196e4:	ds in  al,0xf8
  4196e7:	and    eax,0x41ae9b4d
  4196ec:	mov    dh,0x2e
  4196ee:	stos   DWORD PTR es:[edi],eax
  4196ef:	pop    ebx
  4196f0:	mov    ds,WORD PTR [ecx+0x2617b1d4]
  4196f6:	push   edi
  4196f7:	xor    BYTE PTR [ecx+ecx*1-0xb],ch
  4196fb:	imul   esp,DWORD PTR [ecx-0x5b266bac],0xffffff97
  419702:	enter  0xa826,0x2c
  419706:	enter  0xe5ea,0xc3
  41970a:	add    edx,ebp
  41970c:	sbb    ah,BYTE PTR [eax+0x13f30439]
  419712:	je     0x4196e8
  419714:	xchg   ecx,eax
  419715:	or     eax,0xb07bd693
  41971a:	mov    al,ds:0x48b6d096
  41971f:	dec    esi
  419720:	push   esi
  419721:	pop    esi
  419722:	inc    edx
  419723:	adc    cl,BYTE PTR [ecx]
  419725:	sub    ebx,DWORD PTR [ecx*1-0x77957e6a]
  41972c:	sar    BYTE PTR [edx],0xd8
  41972f:	dec    edi
  419730:	pop    ebx
  419731:	loopne 0x419717
  419733:	fwait
  419734:	fwait
  419735:	hlt    
  419736:	fnsetpm(287 only) 
  419738:	cmp    eax,eax
  41973a:	data16 jnp 0x419786
  41973d:	dec    esi
  41973e:	test   eax,0x7356ec5f
  419743:	cli    
  419744:	inc    edx
  419745:	dec    ebp
  419746:	iret   
  419747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419748:	adc    al,0xda
  41974a:	fdiv   QWORD PTR [eax+0x7bfe1816]
  419750:	or     bl,BYTE PTR [ebx+0x2eb9fc57]
  419756:	xlat   BYTE PTR ds:[ebx]
  419757:	xchg   edi,eax
  419758:	push   edx
  419759:	adc    DWORD PTR [edx],ecx
  41975b:	add    eax,0x316ddc16
  419760:	adc    edi,edx
  419762:	and    ebx,ebp
  419764:	inc    ebp
  419765:	gs pop edx
  419767:	pop    ecx
  419768:	adc    eax,0x5c36e195
  41976d:	sub    eax,0x66ba96eb
  419772:	dec    edx
  419773:	xchg   esp,eax
  419774:	cwde   
  419775:	into   
  419776:	ins    DWORD PTR es:[edi],dx
  419777:	jp     0x4197b2
  419779:	aaa    
  41977a:	push   0xf54875a
  41977f:	imul   BYTE PTR [ecx]
  419781:	and    eax,DWORD PTR [edi+0x40355dbb]
  419787:	inc    eax
  419788:	les    ebp,FWORD PTR [edi-0x10]
  41978b:	jmp    0xfe19:0xc9420cbc
  419792:	outs   dx,DWORD PTR ds:[esi]
  419793:	mov    esi,0x3bcc26f4
  419798:	jmp    0x419747
  41979a:	or     ecx,DWORD PTR [esp+eax*1+0x64ef41f2]
  4197a1:	jno    0x419805
  4197a3:	jo     0x4197d1
  4197a5:	pop    ecx
  4197a6:	dec    edi
  4197a7:	dec    edi
  4197a8:	mov    ecx,0x565ceaa
  4197ad:	dec    eax
  4197ae:	es xchg esp,eax
  4197b0:	xor    BYTE PTR [edx],ch
  4197b2:	mov    ebx,0x9dac1f68
  4197b7:	mov    ebx,0x669dd4a2
  4197bc:	jno    0x41980c
  4197be:	inc    eax
  4197bf:	sbb    BYTE PTR [edx-0x20af05b2],ch
  4197c5:	push   esi
  4197c6:	loop   0x4197d5
  4197c8:	add    cl,cl
  4197ca:	loope  0x41974e
  4197cc:	cwde   
  4197cd:	add    al,0x23
  4197cf:	and    al,0x5f
  4197d1:	jp     0x4197ea
  4197d3:	pop    ss
  4197d4:	ror    edx,cl
  4197d6:	push   esp
  4197d7:	cs out dx,eax
  4197d9:	pop    edi
  4197da:	xor    eax,0xea6d08c6
  4197df:	adc    al,0x14
  4197e1:	ds loope 0x419786
  4197e4:	gs mov eax,0xedbd1db7
  4197ea:	sub    dl,dl
  4197ec:	mov    ah,0xa0
  4197ee:	outs   dx,DWORD PTR ds:[esi]
  4197ef:	(bad)  
  4197f0:	cli    
  4197f1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4197f3:	inc    esi
  4197f4:	mov    edx,0x74bfa883
  4197f9:	adc    al,0x76
  4197fb:	(bad)  
  4197fc:	outs   dx,DWORD PTR ds:[esi]
  4197fd:	jnp    0x4197e8
  4197ff:	add    ch,ch
  419801:	mov    eax,ds:0x6607199b
  419806:	xlat   BYTE PTR ds:[ebx]
  419807:	sub    DWORD PTR [edi+0x72],esp
  41980a:	jmp    0x32f8917d
  41980f:	inc    ebp
  419810:	add    al,0xea
  419812:	dec    ebp
  419813:	iret   
  419814:	mov    DWORD PTR [eax+0x3a],edx
  419817:	out    0xd5,eax
  419819:	sub    ebx,edx
  41981b:	aad    0xdb
  41981d:	push   ebp
  41981e:	test   ebx,esi
  419820:	jecxz  0x419812
  419822:	call   FWORD PTR [ebp-0x11fd3f81]
  419828:	cdq    
  419829:	add    eax,0x7792cfd0
  41982e:	push   ecx
  41982f:	imul   ebx,ecx,0xffffffd7
  419832:	call   0x85c:0x7df4276b
  419839:	fsubr  DWORD PTR [esi-0x44]
  41983c:	inc    edi
  41983d:	data16 jae 0x419857
  419840:	ds inc edi
  419842:	popa   
  419843:	int3   
  419844:	push   eax
  419845:	xchg   BYTE PTR [ebx],dl
  419847:	(bad)  
  419849:	and    BYTE PTR [edx-0x6c210dad],cl
  41984f:	inc    ecx
  419850:	xor    BYTE PTR [ebx+ecx*2-0x2],dh
  419854:	(bad)  
  419855:	ficomp WORD PTR [ebx]
  419857:	outs   dx,BYTE PTR ds:[esi]
  419858:	jne    0x4198a4
  41985a:	pop    esi
  41985b:	pop    edi
  41985c:	mov    esp,0xe6af8b24
  419861:	add    edx,ebx
  419863:	pop    esi
  419864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419865:	jo     0x4197fc
  419867:	xor    bh,BYTE PTR [edi+ecx*4+0x717613c6]
  41986e:	out    dx,al
  41986f:	adc    ch,BYTE PTR [ecx-0x6e]
  419872:	mov    BYTE PTR [esi],dl
  419874:	add    esi,DWORD PTR [esi]
  419876:	mov    bh,0x97
  419878:	inc    ebp
  419879:	sbb    DWORD PTR [edx],0x8a3714ff
  41987f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419880:	push   ebx
  419881:	mov    ebp,0x69540d0a
  419886:	and    edi,ecx
  419888:	add    bl,cl
  41988a:	push   ebx
  41988b:	push   ebx
  41988c:	fcomp  QWORD PTR [ebp-0x62]
  41988f:	ror    BYTE PTR ds:0xa1274e58,1
  419895:	mov    ecx,0x62233a31
  41989a:	add    ch,BYTE PTR [ecx-0xe]
  41989d:	retf   
  41989e:	xor    eax,0x853ac71b
  4198a3:	inc    esi
  4198a4:	push   esp
  4198a5:	adc    al,0x49
  4198a7:	in     eax,dx
  4198a8:	imul   ebx,ecx,0x239348e
  4198ae:	dec    esp
  4198af:	mov    dh,0x3
  4198b1:	icebp  
  4198b2:	out    dx,eax
  4198b3:	js     0x419877
  4198b5:	xchg   ecx,eax
  4198b6:	mov    ds:0x4852843d,al
  4198bb:	fiadd  WORD PTR [ecx-0x73a504bb]
  4198c1:	into   
  4198c2:	pushf  
  4198c3:	outs   dx,BYTE PTR ds:[esi]
  4198c4:	pop    edi
  4198c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c6:	sub    DWORD PTR [esi-0x4187b77b],ecx
  4198cc:	pop    ss
  4198cd:	test   DWORD PTR [edi],ebp
  4198cf:	pop    edx
  4198d0:	ret    
  4198d1:	lahf   
  4198d2:	fwait
  4198d3:	jns    0x419927
  4198d5:	cmp    DWORD PTR [edx+0x311bf773],esi
  4198db:	arpl   WORD PTR [edx+0x55baa722],bx
  4198e1:	fst    st(2)
  4198e3:	gs dec edx
  4198e5:	ins    BYTE PTR es:[edi],dx
  4198e6:	sbb    ecx,DWORD PTR [ecx-0x7d]
  4198e9:	mov    ebp,DWORD PTR [edx-0x1a56a79b]
  4198ef:	(bad)  
  4198f0:	iret   
  4198f1:	inc    ecx
  4198f2:	dec    ebx
  4198f3:	cmc    
  4198f4:	jge    0x41990c
  4198f6:	in     eax,0x8
  4198f8:	pop    edx
  4198f9:	fdiv   DWORD PTR [eax]
  4198fb:	pop    esp
  4198fc:	rcl    ebx,1
  4198fe:	imul   ebx,DWORD PTR [eax-0x52b2186],0x1db73be2
  419908:	sub    dh,al
  41990a:	jmp    0xae3d:0x922289
  419911:	idiv   DWORD PTR [ecx-0x35]
  419914:	mov    bl,0x54
  419916:	inc    edx
  419917:	test   al,0x53
  419919:	xor    ebp,DWORD PTR [eax+0x3a]
  41991c:	push   ecx
  41991d:	mov    bl,0x31
  41991f:	sub    cl,BYTE PTR [eax-0x7719c41c]
  419925:	test   eax,0x569589db
  41992a:	icebp  
  41992b:	sti    
  41992c:	rol    eax,cl
  41992e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41992f:	jmp    0x235a34fc
  419934:	jno    0x41997b
  419936:	mov    edx,DWORD PTR [ebp-0x4d]
  419939:	scas   al,BYTE PTR es:[edi]
  41993a:	stos   DWORD PTR es:[edi],eax
  41993b:	push   ecx
  41993c:	mov    ds:0x1bbedf66,al
  419941:	xor    eax,0xc4160812
  419946:	sub    eax,0xe9ca3332
  41994b:	jae    0x419901
  41994d:	xchg   BYTE PTR [edx+0x52e73b9e],ch
  419953:	stc    
  419954:	inc    esi
  419955:	lock stc 
  419957:	hlt    
  419958:	add    al,0xe2
  41995a:	div    DWORD PTR [eax]
  41995c:	aam    0x83
  41995e:	ds retf 0x4d20
  419962:	fdivr  QWORD PTR [ebx+0x2675e85c]
  419968:	jg     0x4198ed
  41996a:	cs mov dh,0x6a
  41996d:	popa   
  41996e:	push   ebp
  41996f:	popa   
  419970:	cdq    
  419971:	mov    edi,0x113864ef
  419976:	or     bl,bh
  419978:	xor    ecx,eax
  41997a:	lahf   
  41997b:	pmulhuw mm0,QWORD PTR ds:0xcf0232c0
  419982:	(bad)  
  419983:	adc    esi,DWORD PTR [edi]
  419985:	lods   al,BYTE PTR ds:[esi]
  419986:	mov    ecx,0x4b127e02
  41998b:	lahf   
  41998c:	inc    edx
  41998d:	dec    BYTE PTR [ebp+0x24e04238]
  419993:	dec    ebx
  419994:	jne    0x4199dc
  419996:	xchg   edx,eax
  419997:	and    dh,BYTE PTR [ebx]
  419999:	ja     0x41993a
  41999b:	fnstsw WORD PTR [eax+eax*1]
  41999e:	and    DWORD PTR [ecx-0xf5f6e],esp
  4199a4:	lahf   
  4199a5:	mov    al,ds:0x914d4e62
  4199aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ab:	in     al,dx
  4199ac:	fcomp  QWORD PTR [edi-0x45cdcc82]
  4199b2:	adc    al,0x68
  4199b4:	and    al,0xe
  4199b6:	sub    dl,BYTE PTR [eax+0x7127489a]
  4199bc:	inc    edi
  4199bd:	out    0x86,al
  4199bf:	adc    ch,ch
  4199c1:	jae    0x4199ae
  4199c3:	fisttp DWORD PTR [esi+edi*2+0x7e]
  4199c7:	sbb    ebx,DWORD PTR [eax+edi*1+0x27]
  4199cb:	xor    BYTE PTR [ebp-0x49],ch
  4199ce:	mov    dh,0x78
  4199d0:	(bad)  
  4199d1:	add    BYTE PTR [ecx],ch
  4199d3:	sub    edx,DWORD PTR [edi]
  4199d5:	aam    0xe9
  4199d7:	xor    dh,BYTE PTR ds:0x3c655b99
  4199dd:	call   0xc063:0x8bb2f1e4
  4199e4:	inc    esi
  4199e5:	jns    0x4199f6
  4199e7:	mov    cl,0xa
  4199e9:	test   al,0xd7
  4199eb:	dec    edx
  4199ec:	sbb    al,0xc7
  4199ee:	jmp    0x832c:0x3e292bfd
  4199f5:	xor    DWORD PTR [ebp+0x4f],eax
  4199f8:	add    al,0xe8
  4199fa:	add    esi,edi
  4199fc:	mul    DWORD PTR [edi-0x54bb6891]
  419a02:	mov    ch,0xbf
  419a04:	jmp    0x960a915f
  419a09:	jecxz  0x4199ce
  419a0b:	mul    DWORD PTR [esi]
  419a0d:	je     0x419a5f
  419a0f:	(bad)  
  419a10:	loopne 0x419a11
  419a12:	out    dx,eax
  419a13:	mov    al,0x11
  419a15:	jo     0x4199a2
  419a17:	stos   BYTE PTR es:[edi],al
  419a18:	jp     0x4199a8
  419a1a:	mov    eax,ecx
  419a1c:	jns    0x4199fe
  419a1e:	inc    ecx
  419a1f:	sub    BYTE PTR [esi-0x74],ah
  419a22:	jge    0x419a9b
  419a24:	dec    esp
  419a25:	rcr    DWORD PTR [ebp-0x2f],0x13
  419a29:	mov    esi,0xcd49480c
  419a2e:	push   edi
  419a2f:	or     BYTE PTR [edx-0x79623929],bh
  419a35:	dec    eax
  419a36:	aad    0x28
  419a38:	test   DWORD PTR [eax],eax
  419a3a:	popf   
  419a3b:	jo     0x419aac
  419a3d:	fcomp  DWORD PTR [ebp+0x25]
  419a40:	pop    eax
  419a41:	mov    ebx,DWORD PTR [esi-0x6096b445]
  419a47:	ja     0x419a24
  419a49:	or     BYTE PTR [ebx],cl
  419a4b:	pop    ecx
  419a4c:	or     bh,dh
  419a4e:	outs   dx,DWORD PTR ds:[esi]
  419a4f:	sub    DWORD PTR [ecx+ebp*8],esi
  419a52:	mov    ds:0x9cd5f060,al
  419a57:	inc    ebp
  419a58:	xchg   esp,eax
  419a59:	mov    dl,0xd6
  419a5b:	mov    ebx,0x92a11f83
  419a60:	arpl   WORD PTR ds:0x1f1ac2f4,bp
  419a66:	sbb    BYTE PTR [edx+eax*4],dh
  419a69:	mov    bl,bl
  419a6b:	mov    ebp,0xbf4e6fd0
  419a70:	call   0x9379:0x92502097
  419a77:	int    0xb6
  419a79:	mov    eax,0x7201fc14
  419a7e:	dec    edi
  419a7f:	xchg   ecx,eax
  419a80:	xchg   ebx,eax
  419a81:	int3   
  419a82:	jmp    0x48f1:0x6d8c3f2e
  419a89:	dec    esp
  419a8a:	add    al,0x59
  419a8c:	int3   
  419a8d:	mov    cl,0xbd
  419a8f:	stos   DWORD PTR es:[edi],eax
  419a90:	sbb    ebp,DWORD PTR [eax-0x3]
  419a93:	test   al,0xa6
  419a95:	fldenv [edi+eiz*1+0xe5c614a]
  419a9c:	loop   0x419a9b
  419a9e:	cmp    eax,0xf376b74c
  419aa3:	inc    ebx
  419aa4:	mov    bh,0xf3
  419aa6:	pop    esp
  419aa7:	cmp    BYTE PTR [edi],dl
  419aa9:	call   FWORD PTR [esi-0x376e43b2]
  419aaf:	mov    ah,bh
  419ab1:	dec    eax
  419ab2:	jecxz  0x419a84
  419ab4:	cmp    edi,ebp
  419ab6:	mov    dh,0x11
  419ab8:	call   0x2f5d8a9e
  419abd:	fbstp  TBYTE PTR ds:0x2e475151
  419ac3:	test   BYTE PTR [ecx+0x7a],cl
  419ac6:	cs inc edi
  419ac8:	sub    ecx,DWORD PTR [ebx*2-0x39176b0c]
  419acf:	mov    ebp,0x7cd949e2
  419ad4:	jb     0x419af6
  419ad6:	call   0xc11:0x5993016b
  419add:	and    eax,0xa69c1be4
  419ae2:	imul   eax,DWORD PTR [esi],0xd4a58c73
  419ae8:	gs inc edi
  419aea:	fst    DWORD PTR [edi]
  419aec:	sbb    DWORD PTR [eax-0x56ceb77c],esp
  419af2:	(bad)  
  419af3:	cmp    BYTE PTR [ebx-0x2a],ch
  419af6:	mov    ds:0x96b9bf09,eax
  419afb:	(bad)  
  419afc:	mov    esi,0x7989bf86
  419b01:	pop    edi
  419b02:	add    edx,ecx
  419b04:	inc    eax
  419b05:	stc    
  419b06:	into   
  419b07:	mov    ebp,0x76f0121e
  419b0c:	sub    BYTE PTR [esi],dl
  419b0e:	es jmp 0x4d8ce332
  419b14:	neg    DWORD PTR [edi+ecx*1+0x79]
  419b18:	call   0x7b8e1718
  419b1d:	call   0xea6a:0x8f7b73db
  419b24:	lods   al,BYTE PTR ds:[esi]
  419b25:	test   dh,bh
  419b27:	pop    esp
  419b28:	jnp    0x419abd
  419b2a:	outs   dx,BYTE PTR ds:[esi]
  419b2b:	add    al,0x18
  419b2d:	mov    dh,0x96
  419b2f:	inc    ecx
  419b30:	cli    
  419b31:	in     eax,dx
  419b32:	xchg   ebp,esp
  419b34:	cmp    ah,BYTE PTR [ecx+0x53]
  419b37:	scas   eax,DWORD PTR es:[edi]
  419b38:	jae    0x419b7b
  419b3a:	outs   dx,BYTE PTR ds:[esi]
  419b3b:	jg     0x419adb
  419b3d:	(bad)  
  419b3e:	ror    bl,0xe7
  419b41:	sbb    eax,0xd398384f
  419b46:	dec    ecx
  419b47:	das    
  419b48:	ret    0x5ca0
  419b4b:	mov    WORD PTR [esi+0x369e5640],cs
  419b51:	ds inc ebp
  419b53:	push   cs
  419b54:	sub    edx,ecx
  419b56:	push   esi
  419b57:	or     al,0x75
  419b59:	jmp    0x419b3e
  419b5b:	xor    eax,0xf3199093
  419b60:	cmp    ebx,esp
  419b62:	sahf   
  419b63:	test   esp,ecx
  419b65:	dec    edi
  419b66:	xor    DWORD PTR [ecx+0x3038e368],edi
  419b6c:	sub    DWORD PTR [ecx],eax
  419b6e:	xlat   BYTE PTR ds:[ebx]
  419b6f:	push   ss
  419b70:	lock add ah,BYTE PTR [ebx]
  419b73:	imul   esp,DWORD PTR [edi],0xd161b16
  419b79:	pop    ss
  419b7a:	mov    esi,0x4608adf0
  419b7f:	ss pop esi
  419b81:	mov    ds:0xcbfbb1e9,al
  419b86:	(bad)  
  419b87:	mov    bl,0x24
  419b89:	nop
  419b8a:	fnstenv [ebp+ebp*8+0x5f746036]
  419b91:	or     esp,DWORD PTR [edx-0x7b66a716]
  419b97:	push   ds
  419b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b99:	push   ss
  419b9a:	mov    ecx,0xfd8f98d2
  419b9f:	mov    al,0xbf
  419ba1:	test   eax,0x21e64d5e
  419ba6:	setb   BYTE PTR [ebx+0x7e]
  419baa:	dec    esp
  419bab:	arpl   cx,cx
  419bad:	ins    DWORD PTR es:[edi],dx
  419bae:	in     eax,0x2b
  419bb0:	ds fs adc eax,0xebccde2e
  419bb7:	inc    ebx
  419bb8:	or     eax,0x4c52e3f4
  419bbd:	pushf  
  419bbe:	popf   
  419bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc0:	xchg   ebp,eax
  419bc1:	xchg   ebp,eax
  419bc2:	bnd jp 0x5826260
  419bc9:	pop    ecx
  419bca:	imul   ebx,edx,0x45
  419bcd:	mov    esi,0xa7c046d7
  419bd2:	sub    dh,0x71
  419bd5:	cmp    al,0xe1
  419bd7:	test   BYTE PTR [edi+0x40eb9d37],0xd0
  419bde:	dec    esi
  419bdf:	lock lods al,BYTE PTR ds:[esi]
  419be1:	div    DWORD PTR [ecx+edx*1-0xd8c8f9]
  419be8:	data16 mov fs,WORD PTR [ebx+0x5e3401bf]
  419bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bf0:	add    ebx,DWORD PTR [ecx-0x5f]
  419bf3:	lea    edx,[edx]
  419bf5:	test   edx,ecx
  419bf7:	hlt    
  419bf8:	xchg   ebp,eax
  419bf9:	pop    edx
  419bfa:	das    
  419bfb:	fild   WORD PTR [edx+0x20]
  419bfe:	cmp    al,0x59
  419c00:	lahf   
  419c01:	inc    ecx
  419c02:	inc    esp
  419c03:	cmp    bh,BYTE PTR [ecx+0x69]
  419c06:	js     0x419be8
  419c08:	cmp    al,0x75
  419c0b:	or     dh,ch
  419c0d:	(bad)  
  419c0e:	sbb    ebp,DWORD PTR [esi+0x1fa27d0b]
  419c14:	add    BYTE PTR [ebp+0x289ead97],bh
  419c1a:	push   edi
  419c1b:	mov    ebx,0x70ae1c89
  419c20:	repnz adc esi,esp
  419c23:	out    0xcf,al
  419c25:	cmc    
  419c26:	rcl    DWORD PTR [esp+edi*4],1
  419c29:	(bad)  
  419c2a:	mov    bh,0xd1
  419c2c:	adc    eax,0xed97c0d3
  419c31:	fwait
  419c32:	cs iret 
  419c34:	retf   0xdf29
  419c37:	sahf   
  419c38:	in     eax,dx
  419c39:	pop    esi
  419c3a:	jno    0x419cbb
  419c3c:	mov    ch,0x9b
  419c3e:	cmp    ah,dh
  419c40:	sbb    eax,0x210ef44f
  419c45:	lods   al,BYTE PTR ds:[esi]
  419c46:	scas   al,BYTE PTR es:[edi]
  419c47:	cli    
  419c48:	and    BYTE PTR [eax],al
  419c4a:	enter  0xc302,0xb8
  419c4e:	jle    0x419c3d
  419c50:	dec    esp
  419c51:	in     eax,dx
  419c52:	pop    ebp
  419c53:	and    DWORD PTR ss:[ecx-0x6d4717fc],esi
  419c5a:	jmp    0xa8ab71f9
  419c5f:	push   ebp
  419c60:	fst    QWORD PTR ds:0x3ef448c5
  419c66:	retf   0xb1d1
  419c69:	aad    0xc1
  419c6b:	fbstp  TBYTE PTR [ecx+0x1f0bfbc5]
  419c71:	cmc    
  419c72:	and    eax,0x14edd7bb
  419c77:	(bad)  
  419c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c79:	(bad)  
  419c7b:	push   ecx
  419c7c:	jmp    0x419c69
  419c7e:	mov    eax,ds:0x70ee5898
  419c83:	cmp    cl,ch
  419c85:	inc    esi
  419c86:	(bad)  
  419c88:	mov    dh,0x9f
  419c8a:	fnsetpm(287 only) 
  419c8c:	mov    esp,eax
  419c8e:	jbe    0x419cce
  419c90:	loopne 0x419c3b
  419c92:	jl     0x419c6c
  419c94:	cmp    al,0x8f
  419c96:	sub    ebx,DWORD PTR [ebx+0x32]
  419c99:	bound  edx,QWORD PTR [ebx]
  419c9b:	jnp    0x419c38
  419c9d:	lds    edx,FWORD PTR [edi]
  419c9f:	ror    BYTE PTR [eax+ebx*4],1
  419ca2:	pop    edi
  419ca3:	dec    edi
  419ca4:	leave  
  419ca5:	mov    eax,ds:0xa07fa613
  419caa:	mov    al,0x0
  419cac:	or     DWORD PTR [esi],ebp
  419cae:	xlat   BYTE PTR ds:[ebx]
  419caf:	jne    0x419c62
  419cb1:	push   esp
  419cb2:	aad    0x36
  419cb4:	(bad)  
  419cb5:	test   al,0xec
  419cb7:	push   ds
  419cb8:	pop    ebp
  419cb9:	in     eax,0xb9
  419cbb:	xchg   al,al
  419cbd:	sahf   
  419cbe:	fs inc esi
  419cc0:	pusha  
  419cc1:	push   ss
  419cc2:	adc    DWORD PTR ds:[edx],eax
  419cc5:	push   cs
  419cc6:	fiadd  DWORD PTR [edx]
  419cc8:	jle    0x419cdd
  419cca:	test   al,ch
  419ccc:	adc    bl,0xdb
  419ccf:	in     ax,dx
  419cd1:	push   0xa
  419cd3:	adc    edi,ebx
  419cd5:	dec    edx
  419cd6:	pop    edi
  419cd7:	xchg   edi,eax
  419cd8:	ret    0xcd4a
  419cdb:	and    esi,DWORD PTR [ebp-0x4]
  419cde:	push   es
  419cdf:	pop    es
  419ce0:	adc    esi,DWORD PTR [eax]
  419ce2:	hlt    
  419ce3:	or     bh,BYTE PTR [eax]
  419ce5:	or     bl,BYTE PTR [ebp+0x50]
  419ce8:	mov    eax,0xd24d86d7
  419ced:	lds    ebx,FWORD PTR [esi-0x26]
  419cf0:	sub    BYTE PTR [ebx+0x3056310f],bl
  419cf6:	mov    al,0x71
  419cf8:	lods   eax,DWORD PTR ds:[esi]
  419cf9:	into   
  419cfa:	push   edi
  419cfb:	outs   dx,BYTE PTR ds:[esi]
  419cfc:	xor    BYTE PTR [edx+0x38],ch
  419cff:	test   eax,0x26deb22
  419d04:	mov    ebp,edx
  419d06:	adc    BYTE PTR es:[ecx+eax*4+0x6d],bh
  419d0b:	shr    DWORD PTR [edx-0x31],1
  419d0e:	fsubr  DWORD PTR [eax-0x4522f38]
  419d14:	fdivrp st(6),st
  419d16:	ror    BYTE PTR [edx],0x98
  419d19:	fwait
  419d1a:	push   0x2e9a420c
  419d1f:	xchg   edi,eax
  419d20:	add    BYTE PTR [ebx+0x3c],dl
  419d23:	js     0x419d73
  419d25:	jne    0x419d5c
  419d27:	adc    bl,bl
  419d29:	cmp    esp,ebx
  419d2b:	test   DWORD PTR [ecx+0x69],ebp
  419d2e:	sti    
  419d2f:	sub    eax,DWORD PTR [ebx]
  419d31:	and    ebx,DWORD PTR [esi]
  419d33:	imul   edi,esi,0x2
  419d36:	enter  0xcb78,0xf2
  419d3a:	jno    0x419d73
  419d3c:	rol    BYTE PTR [ebx-0x6b],1
  419d3f:	outs   dx,DWORD PTR ds:[esi]
  419d40:	mov    bl,0xe2
  419d42:	dec    edx
  419d43:	jl     0x419db8
  419d45:	jne    0x419cf1
  419d47:	ins    BYTE PTR es:[edi],dx
  419d48:	aam    0x73
  419d4a:	ja     0x419cec
  419d4c:	hlt    
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	xchg   edi,eax
  419d4f:	popa   
  419d50:	test   BYTE PTR [edx],ch
  419d52:	pop    ebp
  419d53:	popf   
  419d54:	test   eax,0xd69d85e0
  419d59:	push   0x44
  419d5b:	(bad)  
  419d5d:	out    0x7f,al
  419d5f:	sub    cl,BYTE PTR [ebp+0x1de18f18]
  419d65:	(bad)  
  419d66:	rcl    DWORD PTR [ecx],1
  419d68:	out    0x28,eax
  419d6a:	(bad)  
  419d6b:	cmp    al,0x44
  419d6d:	dec    esp
  419d6e:	ja     0x419ddf
  419d70:	stos   BYTE PTR es:[edi],al
  419d71:	push   edx
  419d72:	push   ebx
  419d73:	ret    
  419d74:	sbb    eax,esp
  419d76:	fadd   QWORD PTR [esp+ebp*1+0x76]
  419d7a:	repnz mov es,WORD PTR [edx]
  419d7d:	mov    dl,0xdf
  419d7f:	mov    edi,DWORD PTR [ebx+0x23]
  419d82:	adc    cl,BYTE PTR [esp+edx*4]
  419d85:	dec    esp
  419d86:	loope  0x419d23
  419d88:	js     0x419d46
  419d8a:	into   
  419d8b:	pusha  
  419d8c:	lahf   
  419d8d:	push   ss
  419d8e:	enter  0x13cd,0x85
  419d92:	inc    esi
  419d93:	mov    ebp,0x92f9eb10
  419d98:	cmp    esi,0x5e
  419d9b:	stos   BYTE PTR es:[edi],al
  419d9c:	sub    eax,0xe4b0327e
  419da1:	xchg   ebp,eax
  419da2:	mov    bl,BYTE PTR [ecx]
  419da4:	sub    BYTE PTR [esi],ah
  419da6:	imul   ecx,ebx,0x90ed18f5
  419dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dad:	je     0x419dec
  419daf:	daa    
  419db0:	sbb    edi,esp
  419db2:	sub    al,0x57
  419db4:	(bad)  
  419db5:	pop    ds
  419db6:	xor    ebp,DWORD PTR [eax]
  419db8:	adc    eax,DWORD PTR [ecx+0x5e]
  419dbb:	fbstp  TBYTE PTR [edi+ecx*1+0x2f]
  419dbf:	push   es
  419dc0:	js     0x419e10
  419dc2:	sbb    al,0xc1
  419dc4:	repnz lods al,BYTE PTR ds:[esi]
  419dc6:	pop    es
  419dc7:	jnp    0x419dec
  419dc9:	xor    eax,0x60cfd5e4
  419dce:	scas   eax,DWORD PTR es:[edi]
  419dcf:	ja     0x419de4
  419dd1:	or     eax,DWORD PTR [esi+0x2cd1c31a]
  419dd7:	outs   dx,DWORD PTR ds:[esi]
  419dd8:	fs mov bh,0xd
  419ddb:	xchg   esi,eax
  419ddc:	mov    ecx,ecx
  419dde:	ret    0x61f9
  419de1:	mov    al,0x7
  419de3:	push   0x28
  419de5:	dec    ebx
  419de6:	sub    ebp,DWORD PTR [edx]
  419de8:	add    DWORD PTR [edi],esi
  419dea:	pop    ebp
  419deb:	neg    DWORD PTR [edi-0x583ad850]
  419df1:	jae    0x419dee
  419df3:	pusha  
  419df4:	dec    ecx
  419df5:	std    
  419df6:	mov    esi,0x6bde9e75
  419dfb:	nop
  419dfc:	mov    dl,0xe2
  419dfe:	xchg   esp,eax
  419dff:	ja     0x419d90
  419e01:	daa    
  419e02:	adc    DWORD PTR [ebx],esi
  419e04:	add    DWORD PTR [edi+ebp*1+0x58],ebp
  419e08:	popa   
  419e09:	mov    ah,0xa4
  419e0b:	sub    edx,DWORD PTR [edi-0x60]
  419e0e:	arpl   WORD PTR [esi+ebp*1+0x18dde146],dx
  419e15:	jl     0x419d9b
  419e17:	(bad)
  419e1a:	ret    0x5d4d
  419e1d:	(bad)  
  419e1e:	mov    al,gs:0x252c350a
  419e24:	(bad)  
  419e26:	or     eax,DWORD PTR [ecx]
  419e28:	in     eax,dx
  419e29:	jbe    0x419de9
  419e2b:	add    eax,0x5bb7ba29
  419e30:	or     DWORD PTR [esi+0x78],eax
  419e33:	xchg   ebp,eax
  419e34:	int    0xb6
  419e36:	and    dl,bl
  419e38:	in     eax,0x2b
  419e3a:	mov    cl,0x5b
  419e3c:	out    dx,al
  419e3d:	dec    ebp
  419e3e:	(bad)  
  419e3f:	enter  0x36cd,0x77
  419e43:	mov    ebx,0x987330ac
  419e48:	call   0x5a54ec3a
  419e4d:	sbb    BYTE PTR [ebx+0x71fc25ba],0xad
  419e54:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e56:	xchg   ecx,eax
  419e57:	data16 sbb BYTE PTR [edi+0x665cde7c],cl
  419e5e:	scas   eax,DWORD PTR es:[edi]
  419e5f:	pop    eax
  419e60:	(bad)  
  419e61:	dec    esi
  419e62:	push   cs
  419e63:	push   ebp
  419e64:	daa    
  419e65:	call   0x4f1baf6e
  419e6a:	mov    ebx,0x63ebb4c5
  419e6f:	fs inc esp
  419e71:	dec    edi
  419e72:	jae    0x419ec8
  419e74:	lods   eax,DWORD PTR ds:[esi]
  419e75:	pop    ds
  419e76:	mov    esi,0x3ed7ea07
  419e7b:	xchg   esp,eax
  419e7c:	stos   DWORD PTR es:[edi],eax
  419e7d:	jo     0x419e8f
  419e7f:	pop    ss
  419e80:	mov    ?,WORD PTR [ebp+0x6b]
  419e83:	adc    ebp,ebp
  419e85:	outs   dx,DWORD PTR ds:[esi]
  419e86:	sub    al,0x49
  419e88:	inc    ebp
  419e89:	in     al,dx
  419e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e8b:	pop    edi
  419e8c:	ins    BYTE PTR es:[edi],dx
  419e8d:	mov    ebx,0x326d0fd4
  419e92:	sub    BYTE PTR [edx+0x3],ah
  419e95:	jae    0x419ed4
  419e97:	test   eax,0x846f4f87
  419e9c:	loopne 0x419e3b
  419e9e:	pop    es
  419e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea0:	pop    edi
  419ea1:	push   esp
  419ea2:	rcr    BYTE PTR [ebx+0xf],cl
  419ea5:	inc    edx
  419ea6:	lock mov cl,BYTE PTR [eax+0x74]
  419eaa:	jae    0x419e49
  419eac:	imul   edi,DWORD PTR [ebx],0x78
  419eaf:	retf   
  419eb0:	les    ebx,FWORD PTR [ebx+0x28]
  419eb3:	pop    eax
  419eb4:	inc    edi
  419eb5:	inc    esi
  419eb6:	sahf   
  419eb7:	(bad)  
  419eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eb9:	fistp  QWORD PTR [edx]
  419ebb:	cmp    eax,0x5d051b2
  419ec0:	xchg   DWORD PTR [ecx-0x59],esi
  419ec3:	mov    dh,0x6c
  419ec5:	and    DWORD PTR [esi],esi
  419ec7:	jno    0x419f28
  419ec9:	jp     0x419f2b
  419ecb:	push   es
  419ecc:	loope  0x419ecf
  419ece:	jle    0x419e94
  419ed0:	xchg   edi,eax
  419ed1:	push   edi
  419ed2:	shl    al,cl
  419ed4:	call   0xd031:0x27f0fe07
  419edb:	pusha  
  419edc:	inc    ebp
  419edd:	or     eax,0x393a3523
  419ee2:	outs   dx,BYTE PTR gs:[esi]
  419ee4:	sub    esi,DWORD PTR [ecx+edi*1]
  419ee7:	sub    eax,0x680337a
  419eec:	xchg   esp,eax
  419eed:	add    BYTE PTR [eax],al
  419eef:	inc    eax
  419ef0:	int3   
  419ef1:	jae    0x419ef7
  419ef3:	mov    ch,0x5
  419ef5:	call   0x9a5a1067
  419efa:	retf   0xaedc
  419efd:	sub    al,0x22
  419eff:	(bad)  [edx]
  419f01:	(bad)  [edi-0x15]
  419f04:	lods   eax,DWORD PTR ds:[esi]
  419f05:	out    0x23,eax
  419f07:	stos   BYTE PTR es:[edi],al
  419f08:	jle    0x419ea4
  419f0a:	xor    DWORD PTR [edi],eax
  419f0c:	or     al,0xa1
  419f0e:	hlt    
  419f0f:	stos   BYTE PTR es:[edi],al
  419f10:	or     dl,BYTE PTR [edi]
  419f12:	icebp  
  419f13:	(bad)  
  419f15:	sbb    edx,DWORD PTR [eax+0x7e]
  419f18:	add    BYTE PTR [ebp+0x2590d678],bl
  419f1e:	inc    ecx
  419f1f:	xlat   BYTE PTR ds:[ebx]
  419f20:	push   ebx
  419f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f22:	mov    ah,0x95
  419f24:	mov    dh,0x5e
  419f26:	mov    esi,0x20c045ba
  419f2b:	(bad)  
  419f2c:	or     DWORD PTR [edi-0x186a8229],ebx
  419f32:	mov    al,BYTE PTR [ecx]
  419f34:	lock je 0x419f41
  419f37:	xor    edi,edx
  419f39:	xor    DWORD PTR [eax],0xead7d089
  419f3f:	hlt    
  419f40:	mov    dl,0xf4
  419f42:	adc    BYTE PTR [esi-0x3f],0x7d
  419f46:	dec    esi
  419f47:	cmp    al,0x62
  419f49:	outs   dx,DWORD PTR ds:[esi]
  419f4a:	ds imul ecx,ebx,0xddd5eb2b
  419f51:	and    BYTE PTR [ecx+0x4de57d4d],dl
  419f57:	add    cl,BYTE PTR [ecx+edx*2]
  419f5a:	mov    esp,0x14e556c
  419f5f:	add    al,0xf0
  419f61:	sub    eax,0xfbd635f4
  419f66:	std    
  419f67:	lahf   
  419f68:	retf   
  419f69:	lea    esi,[esi-0x6d]
  419f6c:	or     BYTE PTR [ebx],al
  419f6e:	push   ebx
  419f6f:	mov    eax,ds:0xe2f83a8b
  419f74:	ret    0x6700
  419f77:	push   ecx
  419f78:	dec    eax
  419f79:	cld    
  419f7a:	xchg   edx,eax
  419f7b:	jbe    0x419fb8
  419f7d:	add    edx,DWORD PTR [esi-0x5a]
  419f80:	popa   
  419f81:	mov    bl,BYTE PTR [ecx-0x2b]
  419f84:	arpl   sp,ax
  419f86:	frstor [ebx+0x443c7542]
  419f8c:	ret    0xbcfe
  419f8f:	jne    0x419fc8
  419f91:	ds mov ebx,0xb8ebae5a
  419f97:	inc    edi
  419f98:	test   BYTE PTR [ecx+0x6c41e582],bl
  419f9e:	stos   DWORD PTR es:[edi],eax
  419f9f:	inc    ecx
  419fa0:	daa    
  419fa1:	rcr    DWORD PTR [eax],1
  419fa3:	or     DWORD PTR [ecx-0x293d161b],edx
  419fa9:	cs xchg esp,eax
  419fab:	sub    al,BYTE PTR [edi]
  419fad:	ins    BYTE PTR es:[edi],dx
  419fae:	mov    esp,0xbe86a649
  419fb3:	dec    esi
  419fb4:	retf   
  419fb5:	cmc    
  419fb6:	or     ebp,edi
  419fb8:	add    eax,0x70fc6254
  419fbd:	add    DWORD PTR [ebx],eax
  419fbf:	adc    DWORD PTR [esi+ebx*2-0x38a4a153],esp
  419fc6:	jg     0x41a027
  419fc8:	sub    bh,dh
  419fca:	in     al,dx
  419fcb:	pop    ds
  419fcc:	jmp    0xc263c5ae
  419fd1:	cwde   
  419fd2:	sub    eax,0x794b0e3
  419fd7:	jo     0x41a01d
  419fd9:	test   BYTE PTR [ebp-0x25337616],0x4f
  419fe0:	gs pop edi
  419fe2:	loopne 0x419f97
  419fe4:	xlat   BYTE PTR ds:[ebx]
  419fe5:	pop    ebx
  419fe6:	sub    bh,0x5b
  419fe9:	or     DWORD PTR [ecx],esp
  419feb:	dec    eax
  419fec:	xor    eax,DWORD PTR [ecx]
  419fee:	in     al,0x59
  419ff0:	enter  0x3e55,0xcb
  419ff4:	push   edi
  419ff5:	repnz sbb DWORD PTR [eax+0x1b],esi
  419ff9:	dec    edi
  419ffa:	int    0x37
  419ffc:	clc    
  419ffd:	xor    al,0x31
  419fff:	mov    edi,0x72af4ca4
  41a004:	mov    bl,0x3f
  41a006:	dec    edx
  41a007:	push   ebp
  41a008:	pop    edi
  41a009:	scas   al,BYTE PTR es:[edi]
  41a00a:	dec    eax
  41a00b:	cld    
  41a00c:	mov    al,ds:0xf00443ce
  41a011:	mov    al,ds:0x428a533f
  41a016:	lods   eax,DWORD PTR ds:[esi]
  41a017:	jns    0x419ff5
  41a019:	nop
  41a01a:	add    ecx,DWORD PTR [ecx-0xf]
  41a01d:	pop    ebp
  41a01e:	(bad)  
  41a01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a020:	lods   al,BYTE PTR ds:[esi]
  41a021:	add    BYTE PTR [eax-0x60],dl
  41a024:	lahf   
  41a025:	dec    esp
  41a026:	push   edi
  41a027:	popf   
  41a028:	call   0x5a85:0xdb939c82
  41a02f:	test   cl,dh
  41a031:	xchg   esi,eax
  41a032:	lods   ax,WORD PTR ds:[esi]
  41a034:	mov    bh,0x4e
  41a036:	sbb    al,0xf6
  41a038:	jb     0x41a08e
  41a03a:	mov    ds:0x4c7e70f3,eax
  41a03f:	lock inc esi
  41a041:	xchg   ecx,eax
  41a042:	sbb    DWORD PTR [eax-0x6b],0xefb3b240
  41a049:	jo     0x41a06e
  41a04b:	call   0x26bcda32
  41a050:	xchg   ebp,eax
  41a051:	mov    esi,edx
  41a053:	push   ebx
  41a054:	push   ecx
  41a055:	daa    
  41a056:	pop    edi
  41a057:	in     al,dx
  41a058:	mov    al,ds:0xcbd1cb40
  41a05d:	test   eax,0xa50ff8b5
  41a062:	aam    0x36
  41a064:	ret    0x38f6
  41a067:	es mov ch,0x4b
  41a06a:	and    ecx,DWORD PTR [esi]
  41a06c:	call   DWORD PTR [esp+ebx*2]
  41a06f:	or     ah,BYTE PTR [eax+esi*4+0xf]
  41a073:	lods   al,BYTE PTR ds:[esi]
  41a074:	addr16 iret 
  41a076:	xor    esp,DWORD PTR [ebx-0x196a4b74]
  41a07c:	in     al,dx
  41a07d:	cmp    al,BYTE PTR [edx]
  41a07f:	sub    ebp,DWORD PTR [ebp+eax*4-0x5dd2e06e]
  41a086:	out    0x5c,al
  41a088:	daa    
  41a089:	sub    dl,bl
  41a08b:	arpl   dx,ax
  41a08d:	push   ss
  41a08e:	int3   
  41a08f:	dec    edx
  41a090:	loope  0x41a10d
  41a092:	mov    eax,0xa34a6a67
  41a097:	or     dh,BYTE PTR [esi-0x47b44c29]
  41a09d:	lds    ebx,FWORD PTR [edx-0x2d]
  41a0a0:	ins    BYTE PTR es:[edi],dx
  41a0a1:	outs   dx,DWORD PTR ds:[esi]
  41a0a2:	js     0x41a07a
  41a0a4:	call   0xfea12153
  41a0a9:	jp     0x41a058
  41a0ab:	sbb    BYTE PTR [ecx+0x17],dh
  41a0ae:	sub    BYTE PTR [edi+0x28],ah
  41a0b1:	push   ebx
  41a0b2:	add    al,0xb3
  41a0b4:	in     eax,0xcf
  41a0b6:	pushf  
  41a0b7:	xchg   ecx,eax
  41a0b8:	adc    eax,0x1939f86d
  41a0bd:	push   ebp
  41a0be:	rcr    BYTE PTR [esi+0x34],0xba
  41a0c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c3:	add    DWORD PTR [ecx],eax
  41a0c5:	pop    ebx
  41a0c6:	cmp    ebx,DWORD PTR [ecx+eax*2+0x446f2630]
  41a0cd:	cmp    al,BYTE PTR [ecx+eiz*8+0x69]
  41a0d1:	jecxz  0x41a10e
  41a0d3:	cdq    
  41a0d4:	mov    edx,0x4f312f41
  41a0d9:	mov    esi,0xbc13547a
  41a0de:	int3   
  41a0df:	jg     0x41a0be
  41a0e1:	cwde   
  41a0e2:	mov    eax,0x427479be
  41a0e7:	aad    0x54
  41a0e9:	pop    ecx
  41a0ea:	ror    BYTE PTR es:[edi+edx*8-0x4a89c7f],cl
  41a0f2:	xchg   edi,eax
  41a0f3:	jecxz  0x41a0ca
  41a0f5:	and    eax,0xa7515027
  41a0fa:	fcomp  QWORD PTR [edx+0x37fcf93a]
  41a100:	jmp    0xe88e:0xe3b7dcb4
  41a107:	jmp    0xecc93ad0
  41a10c:	sbb    bh,BYTE PTR [esi+0x1e]
  41a10f:	mov    ecx,edx
  41a111:	rol    ebp,1
  41a113:	ins    DWORD PTR es:[edi],dx
  41a114:	xchg   DWORD PTR [ebp-0x6c],edi
  41a117:	mov    al,0xcf
  41a119:	dec    edi
  41a11a:	mov    esi,0x1e1f4c78
  41a11f:	std    
  41a120:	xchg   ebp,eax
  41a121:	vmwrite eax,DWORD PTR [ebx-0x7f]
  41a125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a126:	cmp    DWORD PTR [edi+0x1d],edi
  41a129:	cli    
  41a12a:	or     al,0x54
  41a12c:	sbb    dl,bl
  41a12e:	add    eax,0xa9be3050
  41a133:	fwait
  41a134:	cmc    
  41a135:	inc    edi
  41a136:	jo     0x41a19e
  41a138:	or     eax,0xd2e8666d
  41a13d:	or     BYTE PTR [edi],ah
  41a13f:	xchg   BYTE PTR [ecx+edx*1],ah
  41a142:	pushf  
  41a143:	fnstsw WORD PTR [ebx]
  41a145:	pop    ss
  41a146:	int3   
  41a147:	xchg   ecx,eax
  41a148:	xchg   edi,eax
  41a149:	push   esp
  41a14a:	xchg   DWORD PTR [ecx-0x1c732071],esi
  41a150:	mov    dl,0x1c
  41a152:	add    BYTE PTR [eax+0x69],bh
  41a155:	sub    eax,ebx
  41a157:	and    eax,0x9a26888c
  41a15c:	sub    ebp,DWORD PTR ds:0xc3b86c31
  41a162:	mov    BYTE PTR [eax-0x3c],cl
  41a165:	jge    0x41a14f
  41a167:	jle    0x41a107
  41a169:	lahf   
  41a16a:	gs jne 0x41a10d
  41a16d:	push   ds
  41a16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a16f:	and    ebp,DWORD PTR [ecx-0x65]
  41a172:	repz mov dl,0xfb
  41a175:	mov    ah,0xab
  41a177:	rep ins DWORD PTR es:[edi],dx
  41a179:	mov    edi,0xee7aa9a7
  41a17e:	and    BYTE PTR [ebx+0x1ae9f48c],0xd4
  41a185:	test   DWORD PTR [edx+edx*8-0x6ac5c930],eax
  41a18c:	inc    ecx
  41a18d:	dec    eax
  41a18e:	xor    DWORD PTR [edx+0x3d5f49cc],edi
  41a194:	(bad)  
  41a195:	cmp    al,0x9a
  41a197:	cmc    
  41a198:	jns    0x41a187
  41a19a:	mov    DWORD PTR ds:0xc896155d,eax
  41a1a0:	push   0x25
  41a1a2:	fwait
  41a1a3:	or     DWORD PTR [eax-0x9],ebp
  41a1a6:	adc    BYTE PTR [esi-0x5a22ad96],dl
  41a1ac:	xlat   BYTE PTR ds:[ebx]
  41a1ad:	inc    edi
  41a1ae:	dec    esp
  41a1af:	cli    
  41a1b0:	int3   
  41a1b1:	bswap  ecx
  41a1b3:	xor    al,0xa8
  41a1b5:	imul   ebx,DWORD PTR [esi],0x19
  41a1b8:	xor    DWORD PTR [ecx+0xd],ebp
  41a1bb:	mov    al,ds:0x5cd44eb1
  41a1c0:	test   BYTE PTR [ebx+0x469744b3],0x76
  41a1c7:	jg     0x41a19c
  41a1c9:	dec    ecx
  41a1ca:	mov    eax,0xe7423acd
  41a1cf:	fist   WORD PTR [edi-0x7e5df2ee]
  41a1d5:	jne    0x41a216
  41a1d7:	ret    
  41a1d8:	sbb    dh,dh
  41a1da:	adc    BYTE PTR [ecx],ch
  41a1dc:	lods   al,BYTE PTR ds:[esi]
  41a1dd:	sub    DWORD PTR [ebp+0x34f9d412],esp
  41a1e3:	mov    ds:0x969ad749,eax
  41a1e8:	stos   BYTE PTR es:[edi],al
  41a1e9:	or     al,BYTE PTR [edi-0x6f]
  41a1ec:	das    
  41a1ed:	inc    esi
  41a1ee:	mov    al,0x67
  41a1f0:	cld    
  41a1f1:	sub    al,0xdc
  41a1f3:	and    ecx,ecx
  41a1f5:	and    bx,WORD PTR [ebp+0x25]
  41a1f9:	jne    0x41a255
  41a1fb:	rcr    dh,1
  41a1fd:	mov    al,0x8a
  41a1ff:	(bad)  
  41a200:	loop   0x41a20c
  41a202:	mov    edi,0x2cc8a138
  41a207:	dec    dh
  41a209:	sub    dh,BYTE PTR [edx+0x68f02909]
  41a20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a210:	shl    DWORD PTR [edi+0x69],cl
  41a213:	mov    edi,0xfe429774
  41a218:	inc    BYTE PTR [eax-0x7e]
  41a21b:	into   
  41a21c:	jp     0x41a205
  41a21e:	pushf  
  41a21f:	mov    dh,bl
  41a221:	push   ss
  41a222:	imul   eax,DWORD PTR [esi],0x7cbf7818
  41a228:	sub    al,0xdd
  41a22a:	adc    esi,eax
  41a22c:	aas    
  41a22d:	nop
  41a22e:	sbb    eax,0x5cf3d732
  41a233:	cdq    
  41a234:	pop    ecx
  41a235:	(bad)  
  41a236:	fnsave [ebp-0x2f]
  41a239:	retf   
  41a23a:	add    BYTE PTR ds:0xd6a6f721,dl
  41a240:	nop
  41a241:	push   0xe4d842a8
  41a246:	or     al,BYTE PTR [esp+ebx*4]
  41a249:	imul   ebx,DWORD PTR [ecx],0x36
  41a24c:	adc    bh,BYTE PTR [ebp+0x76]
  41a24f:	add    DWORD PTR [ecx+eiz*2],eax
  41a252:	jecxz  0x41a28b
  41a254:	mov    esp,0x5744e2bb
  41a259:	test   al,0xb
  41a25b:	pop    eax
  41a25c:	outs   dx,BYTE PTR ds:[esi]
  41a25d:	xor    BYTE PTR [ecx+0x2c],cl
  41a260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a261:	imul   edi,DWORD PTR [ebp-0x6e],0x76
  41a265:	cmc    
  41a266:	(bad)  
  41a267:	pushf  
  41a268:	das    
  41a269:	popa   
  41a26a:	jecxz  0x41a1f2
  41a26c:	mov    esp,0x2d214147
  41a271:	jno    0x41a251
  41a273:	repnz inc ebp
  41a275:	pop    edx
  41a276:	mov    bh,0xd5
  41a278:	jp     0x41a2a4
  41a27a:	pop    ecx
  41a27b:	fcom   DWORD PTR [ebx+ebx*8+0x57]
  41a27f:	call   0xc53e77ec
  41a284:	cmp    DWORD PTR [ecx],0x26
  41a287:	jno    0x41a20e
  41a289:	sub    ch,BYTE PTR [bp+di+0x6dc2]
  41a28e:	push   ss
  41a28f:	(bad)  
  41a290:	cdq    
  41a291:	mov    edi,0xcb5893dc
  41a296:	jns    0x41a291
  41a298:	add    DWORD PTR [ebx-0x28cc9f66],0x80e40821
  41a2a2:	enter  0x479b,0xf
  41a2a6:	fnsave [ebp-0x20]
  41a2a9:	mov    esp,0xbd8603d5
  41a2ae:	outs   dx,BYTE PTR ds:[esi]
  41a2af:	repz cmp esp,DWORD PTR [eax+0x51]
  41a2b3:	sub    eax,0xc9575ecb
  41a2b8:	mov    fs,esp
  41a2ba:	xor    bh,al
  41a2bc:	ds lahf 
  41a2be:	dec    ebp
  41a2bf:	xchg   dh,cl
  41a2c1:	fs adc eax,0x9c173825
  41a2c7:	in     al,dx
  41a2c8:	push   edx
  41a2c9:	test   eax,0x488bd461
  41a2ce:	mov    al,ds:0xafb86051
  41a2d3:	mov    edx,0xeb2f9565
  41a2d8:	scas   al,BYTE PTR es:[edi]
  41a2d9:	pop    ebp
  41a2da:	scas   al,BYTE PTR es:[edi]
  41a2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2dc:	mov    ds:0x42ca9f96,eax
  41a2e1:	popf   
  41a2e2:	push   cs
  41a2e3:	pop    esi
  41a2e4:	jns    0x41a301
  41a2e6:	test   eax,0x2464eef2
  41a2eb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a2ed:	add    ah,ah
  41a2ef:	cmp    al,0xf5
  41a2f1:	mov    edx,0x23bd37d0
  41a2f6:	cs or  bl,ch
  41a2f9:	das    
  41a2fa:	add    ebx,DWORD PTR ds:0x7af4b010
  41a300:	(bad)  
  41a301:	mov    ebp,edi
  41a303:	(bad)  
  41a304:	xchg   ebx,eax
  41a305:	push   0xfffffff0
  41a307:	loopne 0x41a32d
  41a309:	test   DWORD PTR [ebx+0x4f535e70],edx
  41a30f:	(bad)  
  41a310:	jns    0x41a383
  41a312:	test   DWORD PTR [ebx-0x74],ecx
  41a315:	adc    bh,dh
  41a317:	mov    esi,0x4ea62dd8
  41a31c:	and    BYTE PTR [eax],0x8e
  41a31f:	mov    al,0xf4
  41a321:	xchg   ecx,eax
  41a322:	jnp    0x41a31d
  41a324:	jg     0x41a2ea
  41a326:	loope  0x41a310
  41a328:	outs   dx,BYTE PTR ds:[esi]
  41a329:	push   ebp
  41a32a:	add    ch,BYTE PTR [ebx+0xe]
  41a32d:	fimul  DWORD PTR [edx+0x6ba30ca6]
  41a333:	sbb    al,0xc9
  41a335:	fisttp WORD PTR [eax+0x19]
  41a338:	data16 cmp BYTE PTR [ebp-0x2b07dc8a],ah
  41a33f:	sub    eax,0x7eed3670
  41a344:	push   ebp
  41a345:	loope  0x41a3b0
  41a347:	in     al,dx
  41a348:	imul   esp,DWORD PTR [ecx+eax*4],0xffffffda
  41a34c:	xchg   ecx,eax
  41a34d:	adc    bl,al
  41a34f:	test   eax,0x30b5b65c
  41a354:	mov    cl,0xb1
  41a356:	pushf  
  41a357:	ret    0xc6fa
  41a35a:	sbb    eax,0xe7dcb0fa
  41a35f:	sub    BYTE PTR [ebx],0xb3
  41a362:	in     eax,dx
  41a363:	xor    BYTE PTR [ecx+0x6637673f],cl
  41a369:	mov    bl,BYTE PTR [ecx+0x34]
  41a36c:	dec    ecx
  41a36d:	cmc    
  41a36e:	sbb    BYTE PTR [ecx-0x25],dh
  41a371:	xchg   ebp,ecx
  41a373:	xchg   edx,eax
  41a374:	mov    al,BYTE PTR [eax+0x23]
  41a377:	sbb    eax,0x9bc54613
  41a37c:	jae    0x41a320
  41a37e:	loop   0x41a363
  41a380:	jg     0x41a35a
  41a382:	cdq    
  41a383:	xor    BYTE PTR [esi+edi*8],ch
  41a386:	js     0x41a386
  41a388:	mov    ah,cl
  41a38a:	sbb    eax,0x65aaea5f
  41a38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a390:	test   ebx,ebp
  41a392:	(bad)  
  41a393:	std    
  41a394:	scas   al,BYTE PTR es:[edi]
  41a395:	add    DWORD PTR [eax+0x69],edx
  41a398:	ret    
  41a399:	cmc    
  41a39a:	mov    gs,WORD PTR [ebx+eiz*4+0xa]
  41a39e:	lahf   
  41a39f:	mov    cl,0x36
  41a3a1:	xor    bl,al
  41a3a3:	push   0x20
  41a3a5:	call   0x86130b2f
  41a3aa:	popf   
  41a3ab:	sar    BYTE PTR [eax+edi*4+0x3c],0xbf
  41a3b0:	mov    edi,?
  41a3b2:	add    eax,0xa518432b
  41a3b7:	mov    ebx,0xe5d910c6
  41a3bc:	mov    ds:0xf283fa6d,eax
  41a3c1:	inc    ebx
  41a3c2:	outs   dx,BYTE PTR ds:[esi]
  41a3c3:	jbe    0x41a37e
  41a3c5:	idiv   bl
  41a3c7:	sar    DWORD PTR ss:[esp+eiz*4-0x73],cl
  41a3cc:	add    DWORD PTR [ebp+0x6a],edi
  41a3cf:	dec    ecx
  41a3d0:	shl    ebp,cl
  41a3d2:	inc    esp
  41a3d3:	mov    ebp,esi
  41a3d5:	sub    BYTE PTR [edi],dh
  41a3d7:	jle    0x41a404
  41a3d9:	cmc    
  41a3da:	mov    ebx,0x1c9a61bb
  41a3df:	adc    ch,BYTE PTR [esi-0x5a]
  41a3e2:	nop
  41a3e3:	sbb    DWORD PTR ds:0x1e8dfb8,edx
  41a3e9:	repnz inc esp
  41a3eb:	rcl    BYTE PTR ds:0x2907e8c6,cl
  41a3f1:	stos   BYTE PTR es:[edi],al
  41a3f2:	lock sub ah,dl
  41a3f5:	(bad)
  41a3fa:	fwait
  41a3fb:	stos   BYTE PTR es:[edi],al
  41a3fc:	lahf   
  41a3fd:	loopne 0x41a3b9
  41a3ff:	int    0xf2
  41a401:	sub    al,0x3b
  41a403:	loope  0x41a3da
  41a405:	imul   DWORD PTR [eax]
  41a407:	in     eax,0xd8
  41a409:	outs   dx,DWORD PTR ds:[esi]
  41a40a:	jae    0x41a44c
  41a40c:	xchg   esi,eax
  41a40d:	(bad)  
  41a40f:	out    0x42,eax
  41a411:	or     al,0x14
  41a413:	push   edi
  41a414:	retf   0xca66
  41a417:	xor    DWORD PTR [ecx],ecx
  41a419:	fcmovne st,st(4)
  41a41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41c:	call   0xf839:0xe88990cb
  41a423:	jg     0x41a3d6
  41a425:	lock push ebp
  41a427:	mov    edx,0xe3397dd2
  41a42c:	ss enter 0x9c25,0x80
  41a431:	dec    edx
  41a432:	xchg   al,bh
  41a434:	addr16 mov esp,0x6abd2ce3
  41a43a:	mov    al,0x8d
  41a43c:	les    ecx,FWORD PTR [ecx-0x3]
  41a43f:	sub    bh,cl
  41a441:	jae    0x41a4c2
  41a443:	ss dec eax
  41a445:	mov    ch,0xad
  41a447:	(bad)  
  41a448:	aaa    
  41a449:	mov    esi,0xdf143ec2
  41a44e:	dec    edx
  41a44f:	jo     0x41a3e7
  41a451:	test   eax,0x9a3ca02
  41a456:	xchg   ebp,eax
  41a457:	cmp    al,0xc2
  41a459:	rcr    eax,1
  41a45b:	push   0x88d1b8a4
  41a460:	push   es
  41a461:	je     0x41a3e5
  41a463:	xor    eax,0xde55158
  41a468:	sahf   
  41a469:	mov    DWORD PTR [ebp+0x1b3ba09],0x2554a228
  41a473:	push   ebp
  41a474:	cmp    al,0xed
  41a476:	cli    
  41a477:	repnz mov eax,0xf4622f97
  41a47d:	retf   
  41a47e:	mov    BYTE PTR [bx+si+0x1a0f],dl
  41a483:	dec    esp
  41a484:	xchg   ebp,eax
  41a485:	std    
  41a486:	lods   al,BYTE PTR ds:[esi]
  41a487:	and    BYTE PTR [eax+0x6c],cl
  41a48a:	mov    dl,0x50
  41a48c:	sub    BYTE PTR [ebp-0x23abc29b],bh
  41a492:	xor    BYTE PTR [ebx-0x8c3df2e],dh
  41a498:	mov    es,esi
  41a49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a49b:	inc    ebx
  41a49c:	arpl   WORD PTR [ebp+0x52],sp
  41a49f:	pushf  
  41a4a0:	or     eax,0x76fc3d12
  41a4a5:	(bad)  
  41a4a6:	lahf   
  41a4a7:	fbstp  TBYTE PTR [esi+0x10997309]
  41a4ad:	repz inc esi
  41a4af:	sub    cl,BYTE PTR [edi-0x1df4e82e]
  41a4b5:	(bad)  
  41a4b6:	fnstsw WORD PTR [edx]
  41a4b8:	mov    eax,ds:0x753e366
  41a4bd:	xchg   edx,eax
  41a4be:	xchg   esi,eax
  41a4bf:	jl     0x41a4ca
  41a4c1:	push   ebp
  41a4c2:	lods   eax,DWORD PTR ds:[esi]
  41a4c3:	adc    BYTE PTR [ecx-0x4a],ah
  41a4c6:	retf   
  41a4c7:	cmp    al,0xe7
  41a4c9:	pop    edi
  41a4ca:	xor    esp,DWORD PTR [ecx]
  41a4cc:	lds    esp,FWORD PTR [edi+0x31]
  41a4cf:	dec    esi
  41a4d0:	loopne 0x41a471
  41a4d2:	mov    DWORD PTR [ecx+ecx*1-0x5f],ecx
  41a4d6:	jnp    0x41a48e
  41a4d8:	call   0x6bc9:0x8d1f86c6
  41a4df:	jp     0x41a46d
  41a4e1:	imul   ebp,DWORD PTR [ebx+eax*8-0x61],0x2184b5db
  41a4e9:	mov    ah,0x70
  41a4eb:	sub    BYTE PTR [ecx-0xeeeff95],dl
  41a4f1:	fwait
  41a4f2:	xor    al,0x74
  41a4f4:	inc    esi
  41a4f5:	inc    esp
  41a4f6:	pop    es
  41a4f7:	adc    eax,0x9db33e8d
  41a4fc:	mov    al,ds:0xa35f67fd
  41a501:	cs pop esp
  41a503:	dec    edx
  41a504:	pop    edx
  41a505:	xchg   edx,eax
  41a506:	mov    ch,BYTE PTR [esi]
  41a508:	pop    ebx
  41a509:	push   ebx
  41a50a:	inc    edi
  41a50b:	addr16 jmp 0x41a51a
  41a50e:	jmp    0xee954d14
  41a513:	or     BYTE PTR [edi-0x6a833049],bl
  41a519:	and    edx,DWORD PTR [eax-0x4199459]
  41a51f:	jecxz  0x41a55a
  41a521:	stos   BYTE PTR es:[edi],al
  41a522:	(bad)  
  41a523:	imul   esi,DWORD PTR [ecx],0xffffffd0
  41a526:	(bad)  [ecx+0x28]
  41a529:	enter  0xad85,0xc9
  41a52d:	add    cl,BYTE PTR [ebx+0x2af3bf48]
  41a533:	dec    ebx
  41a534:	fist   WORD PTR [esp+edx*2+0x2e176f8f]
  41a53b:	popf   
  41a53c:	das    
  41a53d:	lea    ebx,[esi+0x2d7353ed]
  41a543:	adc    al,0xc1
  41a545:	std    
  41a546:	out    dx,eax
  41a547:	out    0x76,al
  41a549:	lahf   
  41a54a:	in     eax,dx
  41a54b:	adc    dh,BYTE PTR [ebx+0x74]
  41a54e:	pop    ecx
  41a54f:	movzx  edi,ah
  41a552:	inc    esp
  41a553:	cmp    edx,ebx
  41a555:	jne    0x41a528
  41a557:	xchg   DWORD PTR [eax-0x678e2d99],edi
  41a55d:	dec    edi
  41a55e:	arpl   WORD PTR [ebp+0x249a6a27],dx
  41a564:	pop    es
  41a565:	test   eax,0xcdd93094
  41a56a:	xor    al,0x46
  41a56c:	arpl   WORD PTR ds:0x7e006754,sp
  41a572:	mov    al,ds:0xd7f47d80
  41a577:	add    BYTE PTR [ebx+0x488acdc8],dl
  41a57d:	push   es
  41a57e:	mov    edi,0x8a7650eb
  41a583:	sub    DWORD PTR [eax+0x3d],edx
  41a586:	rcr    ah,0xc
  41a589:	loope  0x41a5af
  41a58b:	enter  0xb34c,0x1e
  41a58f:	lahf   
  41a590:	jne    0x41a5aa
  41a592:	cwde   
  41a593:	test   DWORD PTR cs:[ebx-0x5b],edx
  41a597:	mov    edx,0x61525c2f
  41a59c:	jnp    0x41a564
  41a59e:	fxch   st(6)
  41a5a0:	mov    edi,0x54331d47
  41a5a5:	lea    eax,[edi+eax*2]
  41a5a8:	test   BYTE PTR [edi+0x2c6c02a1],al
  41a5ae:	xchg   DWORD PTR [esi-0x2b],esi
  41a5b1:	cmp    al,0xc2
  41a5b3:	xchg   esi,eax
  41a5b4:	hlt    
  41a5b5:	xlat   BYTE PTR ds:[ebx]
  41a5b6:	lods   al,BYTE PTR ds:[esi]
  41a5b7:	sub    edi,ebp
  41a5b9:	and    ebp,eax
  41a5bb:	test   al,0x75
  41a5bd:	push   edx
  41a5be:	jmp    0xef21:0xd2606d36
  41a5c5:	or     dl,BYTE PTR [ebp-0x2a40aaf6]
  41a5cb:	mov    ah,0x4a
  41a5cd:	and    cl,BYTE PTR [edx]
  41a5cf:	jns    0x41a555
  41a5d1:	sub    al,BYTE PTR [esi+esi*2-0x62]
  41a5d5:	xor    BYTE PTR [edx+0x1a1fd3fa],0x38
  41a5dc:	cdq    
  41a5dd:	dec    esi
  41a5de:	adc    eax,0x1f55aca9
  41a5e3:	sub    eax,0xc1c7ef22
  41a5e8:	sar    DWORD PTR [ebp+0x27cfd355],1
  41a5ee:	push   ds
  41a5ef:	jnp    0x41a65c
  41a5f1:	xchg   bl,bl
  41a5f3:	or     eax,edx
  41a5f5:	fldenv [esi]
  41a5f7:	sub    al,0x1f
  41a5f9:	clc    
  41a5fa:	inc    ebp
  41a5fb:	mov    eax,cs
  41a5fd:	pop    edi
  41a5fe:	or     bh,ch
  41a600:	mov    bl,0x15
  41a602:	dec    eax
  41a603:	daa    
  41a604:	jge    0x41a679
  41a606:	mov    ah,0x1a
  41a608:	jl     0x41a5b2
  41a60a:	dec    edx
  41a60b:	(bad)  
  41a60c:	int3   
  41a60d:	push   ss
  41a60e:	inc    ecx
  41a60f:	mov    edi,0x71ec72f9
  41a614:	or     cl,BYTE PTR [edi+0x440a2ae]
  41a61a:	test   cl,ah
  41a61c:	imul   esp,DWORD PTR [ecx-0x518bcb23],0x4c
  41a623:	gs pop esp
  41a625:	mov    dh,0xb0
  41a627:	or     al,0x99
  41a629:	lods   eax,DWORD PTR ds:[esi]
  41a62a:	fwait
  41a62b:	lahf   
  41a62c:	sbb    DWORD PTR [esi+ebx*4-0x40],edi
  41a630:	xor    DWORD PTR [eax],esp
  41a632:	out    dx,al
  41a633:	jecxz  0x41a693
  41a635:	mov    DWORD PTR [ebp-0x2c],ecx
  41a638:	add    al,0xa9
  41a63a:	fst    DWORD PTR [ecx+esi*2-0x14bbd22b]
  41a641:	jmp    0x5f63:0x4aa3d51b
  41a648:	and    eax,0xaba81fac
  41a64d:	jmp    0x1cf58efc
  41a652:	pop    eax
  41a653:	test   DWORD PTR [edx],0x1dc85af5
  41a659:	jle    0x41a699
  41a65b:	xor    DWORD PTR [edi-0x4a],0xffffffab
  41a65f:	sub    al,0x48
  41a661:	pop    edx
  41a662:	or     cl,BYTE PTR [edx-0x27]
  41a665:	adc    ch,0xc6
  41a668:	inc    esp
  41a669:	mov    edx,0x680d88b5
  41a66e:	dec    esp
  41a66f:	in     al,0x85
  41a671:	int3   
  41a672:	pop    ss
  41a673:	and    edx,DWORD PTR [eax]
  41a675:	or     bl,BYTE PTR [edi-0x640f729]
  41a67b:	sub    DWORD PTR [edi-0x5817f4c4],0xb15cebd2
  41a685:	jnp    0x41a631
  41a687:	pop    ss
  41a688:	scas   eax,DWORD PTR es:[edi]
  41a689:	or     BYTE PTR [esi-0x29],ch
  41a68c:	jae    0x41a67e
  41a68e:	mov    esp,0x38e6cde9
  41a693:	test   al,0xd1
  41a695:	add    DWORD PTR [esi-0x1a7acef1],esi
  41a69b:	push   esp
  41a69c:	add    al,0xd2
  41a69e:	mov    ebx,0xa56cb56
  41a6a3:	jne    0x41a706
  41a6a5:	or     esi,ebx
  41a6a7:	cmovbe eax,DWORD PTR [esi-0x4c]
  41a6ab:	je     0x41a70c
  41a6ad:	add    DWORD PTR [edx+0x4eb49a7],0x3b655db1
  41a6b7:	outs   dx,DWORD PTR ds:[esi]
  41a6b8:	fiadd  WORD PTR [edi+0x72]
  41a6bb:	popa   
  41a6bc:	stos   BYTE PTR es:[edi],al
  41a6bd:	lea    dx,[edi]
  41a6c0:	push   ss
  41a6c1:	loope  0x41a725
  41a6c3:	mov    bh,BYTE PTR gs:[eax+0x6d]
  41a6c7:	data16 fndisi(8087 only) 
  41a6ca:	inc    ebx
  41a6cb:	mov    edi,DWORD PTR [edi-0x72]
  41a6ce:	(bad)  
  41a6d0:	pop    ecx
  41a6d1:	jno    0x41a719
  41a6d3:	jecxz  0x41a718
  41a6d5:	push   0xffffff9e
  41a6d7:	lds    esp,FWORD PTR [edx-0x7fb00167]
  41a6dd:	cmp    BYTE PTR [eax+0x1af7ef5e],bh
  41a6e3:	mov    dl,BYTE PTR [ecx+0x357c01d4]
  41a6e9:	loopne 0x41a6ee
  41a6eb:	inc    edi
  41a6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ed:	aaa    
  41a6ee:	or     al,0x6e
  41a6f1:	inc    ebp
  41a6f2:	mov    eax,0x9365fc0a
  41a6f7:	mov    ebp,0xe1e410a5
  41a6fc:	mov    dl,0xda
  41a6fe:	xchg   bh,al
  41a700:	in     eax,0xf0
  41a702:	mov    esi,0xa233564
  41a707:	xor    dh,bh
  41a709:	mov    es,WORD PTR [eax]
  41a70b:	xor    BYTE PTR [eax+ebx*1+0x7d],bh
  41a70f:	daa    
  41a710:	lock xor ebp,ebx
  41a713:	mov    eax,0xa8545072
  41a718:	cmp    ch,BYTE PTR [ecx]
  41a71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a71b:	cdq    
  41a71c:	sti    
  41a71d:	pop    ecx
  41a71e:	ret    0x967f
  41a721:	js     0x41a6f1
  41a723:	ror    BYTE PTR [ebx+0x43],cl
  41a726:	test   dl,dh
  41a728:	mov    ebp,0xc6da7a11
  41a72d:	xchg   BYTE PTR [esi],ah
  41a72f:	dec    ecx
  41a730:	mov    edx,0x7113911d
  41a735:	inc    ebp
  41a736:	mov    ecx,0xafd3c05b
  41a73b:	arpl   WORD PTR [edi],sp
  41a73d:	jle    0x41a6de
  41a73f:	sub    DWORD PTR [ebx],ecx
  41a741:	stc    
  41a742:	lds    esi,FWORD PTR [edi-0x2c50cf95]
  41a748:	lods   eax,DWORD PTR ds:[esi]
  41a749:	sub    DWORD PTR [edx],edx
  41a74b:	jmp    0x7f21:0x4c5c8e3d
  41a752:	pushf  
  41a753:	or     DWORD PTR cs:[eax-0x5d8e1daf],edx
  41a75a:	imul   esi,DWORD PTR [esi+0x3d47b04f],0x2ca30c97
  41a764:	fdivrp st(5),st
  41a766:	mov    eax,0x7bbf0db9
  41a76b:	mov    ecx,0x1498bd25
  41a770:	jecxz  0x41a76c
  41a772:	mov    eax,ds:0xace464b1
  41a777:	mov    edx,DWORD PTR [edi]
  41a779:	(bad)  
  41a77a:	rol    DWORD PTR [ecx-0x4c345aea],0x3
  41a781:	mov    dh,0x10
  41a783:	jecxz  0x41a741
  41a785:	sub    BYTE PTR [esp+edi*1],al
  41a788:	es jge 0x41a765
  41a78b:	or     eax,0x6cdc60c9
  41a790:	gs push ss
  41a792:	aam    0xd
  41a794:	push   cs
  41a795:	clc    
  41a796:	mov    dl,0x44
  41a798:	push   eax
  41a799:	ins    BYTE PTR es:[edi],dx
  41a79a:	aad    0xe
  41a79c:	dec    esi
  41a79d:	scas   al,BYTE PTR es:[edi]
  41a79e:	cwde   
  41a79f:	ds xor al,0x57
  41a7a2:	sub    bl,BYTE PTR [edx-0x2d]
  41a7a5:	cmp    edi,DWORD PTR [edx+0x601f8242]
  41a7ab:	push   ecx
  41a7ac:	dec    ecx
  41a7ad:	cmp    eax,0xae936260
  41a7b2:	inc    esi
  41a7b3:	xchg   BYTE PTR [eax+edi*2+0x1cefc3d],dl
  41a7ba:	adc    BYTE PTR [edi+0x5a561f83],cl
  41a7c0:	push   esp
  41a7c1:	pop    ebp
  41a7c2:	cmp    ebx,DWORD PTR [ebx-0x8c05dc9]
  41a7c8:	sti    
  41a7c9:	scas   eax,DWORD PTR es:[edi]
  41a7ca:	and    ecx,esi
  41a7cc:	aas    
  41a7cd:	in     al,0xfe
  41a7cf:	ss in  eax,dx
  41a7d1:	adc    al,0xfb
  41a7d3:	mov    ch,BYTE PTR [ebx-0x5a]
  41a7d6:	enter  0xc6,0xaf
  41a7da:	and    al,dh
  41a7dc:	adc    al,0xa4
  41a7de:	fisttp QWORD PTR [ebp-0x282992a5]
  41a7e4:	addr16 icebp 
  41a7e6:	adc    ebp,DWORD PTR [eax-0x7d]
  41a7e9:	cmp    ah,BYTE PTR [ecx+0x1f536b97]
  41a7ef:	bound  eax,QWORD PTR [eax+0x40b1e461]
  41a7f5:	xchg   ebp,eax
  41a7f6:	call   0x3f11244c
  41a7fb:	ds inc ecx
  41a7fd:	mov    ah,0x96
  41a7ff:	and    ebp,DWORD PTR [ebx]
  41a801:	(bad)  
  41a802:	jmp    0x66437c56
  41a807:	stc    
  41a808:	call   0xdb10:0x82d2f1a3
  41a80f:	and    eax,0xcedfecd1
  41a814:	iret   
  41a815:	cli    
  41a816:	lds    ecx,FWORD PTR [edi+edi*1]
  41a819:	jae    0x41a82b
  41a81b:	lods   al,BYTE PTR ds:[esi]
  41a81c:	pop    ss
  41a81d:	fcomp  DWORD PTR [eax+0xd9962f2]
  41a823:	in     eax,0x91
  41a825:	(bad)  
  41a826:	adc    bh,dl
  41a828:	in     al,dx
  41a829:	dec    eax
  41a82a:	sub    esp,DWORD PTR [edi+0x22]
  41a82d:	xchg   esp,eax
  41a82e:	adc    al,0x23
  41a830:	inc    ebp
  41a831:	mov    edx,0x73baead7
  41a836:	and    DWORD PTR [ecx-0x637d6d16],edx
  41a83c:	inc    ecx
  41a83d:	add    al,0xec
  41a83f:	cmc    
  41a840:	and    BYTE PTR [edx-0x22],ah
  41a843:	add    esp,ecx
  41a845:	mov    DWORD PTR [ebp+0xd4a92b4],esp
  41a84b:	test   dh,cl
  41a84d:	pop    eax
  41a84e:	shl    BYTE PTR [edi],cl
  41a850:	mov    ch,0x81
  41a852:	cmp    al,dh
  41a854:	add    ebp,DWORD PTR [eax+ebx*2-0x50]
  41a858:	add    DWORD PTR [eax+ebp*8],eax
  41a85b:	xchg   DWORD PTR [ecx],edi
  41a85d:	xchg   ebp,eax
  41a85e:	addr16 aam 0x7d
  41a861:	xchg   edx,eax
  41a862:	jle    0x41a839
  41a864:	inc    ebx
  41a865:	stc    
  41a866:	and    eax,0xe882cc95
  41a86b:	sbb    DWORD PTR [eax+0x1d],eax
  41a86e:	mov    ch,al
  41a870:	fwait
  41a871:	(bad)  
  41a872:	ficom  DWORD PTR [ebp+0x1498d99e]
  41a878:	(bad)  
  41a879:	out    dx,eax
  41a87a:	loop   0x41a827
  41a87c:	int3   
  41a87d:	test   edx,edx
  41a87f:	bound  esi,QWORD PTR [edi-0x11]
  41a882:	ja     0x41a8ce
  41a884:	shl    BYTE PTR [esi-0x2],1
  41a887:	cmp    bh,BYTE PTR [eax-0x23a3008a]
  41a88d:	lea    eax,[ebx]
  41a88f:	and    cl,BYTE PTR [eax+0x6a1fbc8a]
  41a895:	jge    0x41a823
  41a897:	pop    edx
  41a898:	(bad)  [edx-0x14e2a35]
  41a89e:	popf   
  41a89f:	out    dx,eax
  41a8a0:	adc    ebp,DWORD PTR [esi]
  41a8a2:	retf   0x4ff8
  41a8a5:	inc    esp
  41a8a6:	mov    bl,0xf8
  41a8a8:	int3   
  41a8a9:	and    dl,ch
  41a8ab:	jne    0x41a893
  41a8ad:	stos   DWORD PTR es:[edi],eax
  41a8ae:	loop   0x41a8b6
  41a8b0:	(bad)  
  41a8b2:	inc    esi
  41a8b3:	in     eax,0x55
  41a8b5:	inc    edi
  41a8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b7:	loopne 0x41a91e
  41a8b9:	xchg   edx,eax
  41a8ba:	std    
  41a8bb:	adc    cl,bl
  41a8bd:	ja     0x41a846
  41a8bf:	push   ds
  41a8c0:	and    cl,bl
  41a8c2:	mov    ?,WORD PTR [edi]
  41a8c4:	mov    dl,0xde
  41a8c6:	push   ds
  41a8c7:	mov    dh,0x63
  41a8c9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a8cb:	out    0x23,eax
  41a8cd:	pop    esp
  41a8ce:	stos   DWORD PTR es:[edi],eax
  41a8cf:	pop    ecx
  41a8d0:	xor    BYTE PTR [edi],ah
  41a8d2:	push   esp
  41a8d3:	aas    
  41a8d4:	add    ebx,0x1bc80290
  41a8da:	retf   0xcb30
  41a8dd:	xchg   esi,eax
  41a8de:	(bad)  
  41a8df:	(bad)  
  41a8e0:	sbb    bl,BYTE PTR [edi+ecx*8]
  41a8e3:	xchg   ebx,eax
  41a8e4:	xchg   edi,eax
  41a8e5:	pop    ss
  41a8e6:	fwait
  41a8e7:	dec    edi
  41a8e8:	pop    ebx
  41a8e9:	jge    0x41a903
  41a8eb:	pop    ebp
  41a8ec:	imul   eax
  41a8ee:	pushf  
  41a8ef:	out    dx,eax
  41a8f0:	pushf  
  41a8f1:	rcl    BYTE PTR [edi-0x1500fd9c],1
  41a8f7:	or     eax,0xe4528209
  41a8fc:	arpl   WORD PTR [edi+0x14],sp
  41a8ff:	stos   DWORD PTR es:[edi],eax
  41a900:	call   0x22b7dd63
  41a905:	icebp  
  41a906:	sbb    DWORD PTR [esi],0x5b
  41a909:	mov    ds:0x629b7bdc,al
  41a90e:	push   cs
  41a90f:	nop
  41a910:	pop    ecx
  41a911:	iret   
  41a912:	rcr    ebx,1
  41a914:	inc    edx
  41a915:	imul   edx,DWORD PTR cs:[ebp-0x5],0x41
  41a91a:	mov    ebp,0x5449974c
  41a91f:	sahf   
  41a920:	inc    edi
  41a921:	xlat   BYTE PTR ds:[ebx]
  41a922:	mov    eax,ds:0xbf6dd367
  41a927:	loope  0x41a983
  41a929:	lock sub ecx,eax
  41a92c:	adc    dl,ch
  41a92e:	pop    eax
  41a92f:	sub    ah,BYTE PTR [eax-0x62fcdff9]
  41a935:	stos   DWORD PTR es:[edi],eax
  41a936:	sti    
  41a937:	or     al,0xc6
  41a939:	dec    edi
  41a93a:	out    dx,al
  41a93b:	push   ds
  41a93c:	jmp    0xb440325e
  41a941:	add    cl,bl
  41a943:	not    BYTE PTR [esi-0x5c]
  41a946:	fdivr  DWORD PTR [esi+edi*8]
  41a949:	rol    BYTE PTR [edi],cl
  41a94b:	(bad)  
  41a94c:	sbb    dl,bl
  41a94e:	test   DWORD PTR [edx-0x25],esi
  41a951:	iret   
  41a952:	or     BYTE PTR [eax],0x3c
  41a955:	mov    edi,0x850ec4ea
  41a95a:	ficom  DWORD PTR [edi+0x7e16e4a0]
  41a960:	lods   al,BYTE PTR ds:[esi]
  41a961:	scas   eax,DWORD PTR es:[edi]
  41a962:	push   esp
  41a963:	push   es
  41a964:	mov    ss,eax
  41a966:	fst    DWORD PTR [edx]
  41a968:	mov    esp,0xc6e8dcdf
  41a96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96f:	pop    esi
  41a970:	addr16 inc ecx
  41a972:	pop    es
  41a973:	lock adc esp,DWORD PTR [ebp+0x505be2e3]
  41a97a:	dec    ebx
  41a97b:	sub    BYTE PTR [ebx],bh
  41a97d:	call   0xc79c:0xe49e4490
  41a984:	stos   BYTE PTR es:[edi],al
  41a985:	(bad)  [eax]
  41a987:	out    dx,al
  41a988:	or     cl,dh
  41a98a:	sar    dh,0xbd
  41a98d:	ja     0x41a9c3
  41a98f:	fcomip st,st(4)
  41a991:	leave  
  41a992:	imul   edi,esi,0xee6ff921
  41a998:	pop    ebx
  41a999:	sub    BYTE PTR [edi+0x79d79858],bh
  41a99f:	dec    edi
  41a9a0:	or     dl,BYTE PTR [ecx+0x3c0cfac6]
  41a9a6:	mov    esp,0x69406da9
  41a9ab:	fimul  WORD PTR [esi+0x6d]
  41a9ae:	dec    ebp
  41a9af:	xor    al,0xf3
  41a9b1:	mov    ds:0x4c697988,eax
  41a9b6:	(bad)  
  41a9b7:	dec    ebp
  41a9b8:	fistp  WORD PTR [esi+0x6acc001e]
  41a9be:	in     al,dx
  41a9bf:	xchg   edx,eax
  41a9c0:	imul   edi,DWORD PTR [eax],0xa4db5dac
  41a9c6:	push   esp
  41a9c7:	lahf   
  41a9c8:	inc    esi
  41a9c9:	repnz in al,dx
  41a9cb:	bound  ecx,QWORD PTR cs:[ecx]
  41a9ce:	jae    0x41aa4f
  41a9d0:	imul   DWORD PTR [ebx]
  41a9d2:	stos   DWORD PTR es:[edi],eax
  41a9d3:	stos   DWORD PTR es:[edi],eax
  41a9d4:	test   cl,bh
  41a9d6:	imul   ebp,DWORD PTR [esi+eiz*4-0x377bdf28],0xf61ab5d5
  41a9e1:	fstp   QWORD PTR [esi]
  41a9e3:	mov    dh,0x7b
  41a9e5:	pusha  
  41a9e6:	sub    edx,DWORD PTR [esi+0x77c8f53e]
  41a9ec:	mov    esp,0x1889c597
  41a9f1:	outs   dx,BYTE PTR ds:[esi]
  41a9f2:	push   ds
  41a9f3:	fidiv  WORD PTR [ecx+0x1a96aa22]
  41a9f9:	push   esi
  41a9fa:	inc    edx
  41a9fb:	pushf  
  41a9fc:	lods   eax,DWORD PTR ds:[esi]
  41a9fd:	pop    ebp
  41a9fe:	adc    DWORD PTR [esi],eax
  41aa00:	ret    0x6b17
  41aa03:	jmp    0xad22e45a
  41aa08:	mov    ch,0x5a
  41aa0a:	jg     0x41a9bd
  41aa0c:	js     0x41a992
  41aa0e:	mov    ah,0xe7
  41aa10:	repz add al,0x1b
  41aa13:	jae    0x41aa15
  41aa15:	retf   
  41aa16:	cld    
  41aa17:	test   eax,0x98bc80d1
  41aa1c:	fbstp  TBYTE PTR [ebx+0x14]
  41aa1f:	inc    edx
  41aa20:	daa    
  41aa21:	mov    esp,0x49d09c43
  41aa26:	jno    0x41a9d7
  41aa28:	mov    bl,0x45
  41aa2a:	xchg   ecx,ebx
  41aa2c:	mov    dl,al
  41aa2e:	push   ss
  41aa2f:	out    0xd3,eax
  41aa31:	lea    ebp,[edx+0x71]
  41aa34:	jns    0x41aa65
  41aa36:	fdiv   QWORD PTR [ecx+0x4b]
  41aa39:	les    eax,FWORD PTR ds:0x9a3abaa8
  41aa3f:	mov    esi,0xcb7c1a0
  41aa44:	push   ecx
  41aa45:	push   edx
  41aa46:	arpl   WORD PTR [ebx+edi*1],di
  41aa49:	sub    DWORD PTR [edx+0x25],edx
  41aa4c:	cmp    DWORD PTR [eax+0x7f214164],ebp
  41aa52:	xchg   ebx,eax
  41aa53:	sub    bl,BYTE PTR [edi+eax*2]
  41aa56:	inc    edx
  41aa57:	jae    0x41aa85
  41aa59:	call   0xa4ef:0xcbfd3aa0
  41aa60:	not    BYTE PTR [ebx-0x80]
  41aa63:	arpl   bp,cx
  41aa65:	adc    al,0x89
  41aa67:	daa    
  41aa68:	imul   esi,DWORD PTR [esi-0x710eefde],0x83fd3f93
  41aa72:	adc    eax,DWORD PTR [eax+0x4e]
  41aa75:	popf   
  41aa76:	in     al,0x25
  41aa78:	js     0x41aa30
  41aa7a:	cli    
  41aa7b:	pop    ds
  41aa7c:	dec    ebx
  41aa7d:	shr    BYTE PTR [eax+0x1a],1
  41aa80:	mov    DWORD PTR [edx+0x7c],edi
  41aa83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa84:	xor    eax,0x7d0ffc28
  41aa89:	dec    BYTE PTR [edx+edx*4+0x17]
  41aa8d:	jl     0x41aa6b
  41aa8f:	and    al,0x3e
  41aa91:	pop    edx
  41aa92:	cwde   
  41aa93:	std    
  41aa94:	push   0x78
  41aa96:	pop    es
  41aa97:	sub    ebp,DWORD PTR [eax+eiz*4-0x9]
  41aa9b:	or     eax,0x159c0d3c
  41aaa0:	sub    DWORD PTR [ebx-0x7dc4dda3],eax
  41aaa6:	xor    edi,esp
  41aaa8:	push   0x6495abb
  41aaad:	inc    esp
  41aaae:	(bad)  
  41aaaf:	sti    
  41aab0:	out    0x31,al
  41aab2:	(bad)  
  41aab3:	clc    
  41aab4:	pop    esp
  41aab5:	pop    ebx
  41aab6:	inc    edx
  41aab7:	cmc    
  41aab8:	jbe    0x41ab29
  41aaba:	call   0x3fe5dcf7
  41aabf:	push   ds
  41aac0:	mov    edi,0x5b49b7d1
  41aac5:	out    0x2c,al
  41aac7:	jae    0x41ab36
  41aac9:	jl     0x41aab9
  41aacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aacc:	neg    BYTE PTR [edi+0x60707a93]
  41aad2:	or     eax,0x5ae0e8cb
  41aad7:	cmovge edi,DWORD PTR [edi]
  41aada:	mov    esp,0x9055c9e3
  41aadf:	adc    edx,edi
  41aae1:	rol    ch,cl
  41aae3:	jmp    0x41aa86
  41aae5:	fidivr DWORD PTR [eax+0x77053919]
  41aaeb:	xor    BYTE PTR [ebp+ecx*1+0x47],cl
  41aaef:	mov    esi,DWORD PTR [edx+edi*8]
  41aaf2:	xchg   esp,eax
  41aaf3:	imul   esp,DWORD PTR fs:[esi+edi*2+0x334020ce],0x19
  41aafc:	adc    esi,eax
  41aafe:	loop   0x41aac2
  41ab00:	adc    DWORD PTR ds:0x283318d0,esp
  41ab06:	call   0x87b3bc58
  41ab0b:	mov    eax,ebp
  41ab0d:	dec    eax
  41ab0e:	enter  0x1d48,0x8b
  41ab12:	or     dl,BYTE PTR [eax+esi*8]
  41ab15:	push   edx
  41ab16:	jmp    0x41aaad
  41ab18:	stos   BYTE PTR es:[edi],al
  41ab19:	and    eax,0xdeacdb05
  41ab1e:	jne    0x41ab95
  41ab20:	dec    ebx
  41ab21:	mov    edi,0x29dcbe9e
  41ab26:	jmp    0x392703f0
  41ab2b:	rol    DWORD PTR [ecx],1
  41ab2d:	inc    DWORD PTR [edi+edi*8-0x58]
  41ab31:	pop    esp
  41ab32:	int3   
  41ab33:	retf   0x2ef4
  41ab36:	out    dx,al
  41ab37:	sbb    DWORD PTR [edx-0x3b],0x31
  41ab3b:	ret    0x965
  41ab3e:	scas   eax,DWORD PTR es:[edi]
  41ab3f:	lea    ebp,[ebx]
  41ab41:	lds    edi,FWORD PTR [ebx]
  41ab43:	call   0xa137:0xa6e3d099
  41ab4a:	add    eax,0x2d41ef64
  41ab4f:	jle    0x41ab38
  41ab51:	cmp    BYTE PTR [ecx],bl
  41ab53:	sahf   
  41ab54:	or     BYTE PTR [ebp+0x68],0x94
  41ab58:	mov    WORD PTR [ebp+0x13fa13e7],ds
  41ab5e:	stos   DWORD PTR es:[edi],eax
  41ab5f:	mov    eax,ds:0xc491b986
  41ab64:	dec    ebp
  41ab65:	call   0x38baa3d7
  41ab6a:	lods   al,BYTE PTR ds:[esi]
  41ab6b:	or     al,0x4a
  41ab6d:	icebp  
  41ab6e:	test   DWORD PTR [edx],0xe1dc59b6
  41ab74:	xchg   BYTE PTR [ebp-0xf2012aa],ch
  41ab7a:	xchg   edx,eax
  41ab7b:	pop    ebp
  41ab7c:	cwde   
  41ab7d:	fisttp DWORD PTR [eax+edx*4-0xc]
  41ab81:	int    0x66
  41ab83:	push   ss
  41ab84:	mov    edx,0x4ebea2a6
  41ab89:	popa   
  41ab8a:	test   eax,0xf6a45d61
  41ab8f:	imul   esi,DWORD PTR cs:[esi+0x31],0x7008838
  41ab97:	outs   dx,DWORD PTR ds:[esi]
  41ab98:	or     eax,0x28077de4
  41ab9d:	jmp    0x8772b05b
  41aba2:	int    0x40
  41aba4:	jle    0x41ab43
  41aba6:	sahf   
  41aba7:	dec    ebp
  41aba8:	bound  esp,QWORD PTR [edi+0x3e867a1e]
  41abae:	xor    ch,BYTE PTR [esi]
  41abb0:	int3   
  41abb1:	mov    cs,WORD PTR [ecx+0x2c]
  41abb4:	and    BYTE PTR [edi],dl
  41abb6:	mov    dl,0xf9
  41abb8:	mov    al,0xd2
  41abba:	xor    al,0xee
  41abbc:	pop    edx
  41abbd:	pop    edi
  41abbe:	in     eax,dx
  41abbf:	scas   al,BYTE PTR es:[edi]
  41abc0:	jae    0x41abc1
  41abc2:	add    cl,BYTE PTR [edx]
  41abc4:	std    
  41abc5:	cmp    al,0x0
  41abc7:	and    bl,BYTE PTR [edi]
  41abc9:	mov    ebp,0x1aa3a15b
  41abce:	gs xchg ecx,eax
  41abd0:	inc    esi
  41abd1:	push   ebx
  41abd2:	iret   
  41abd3:	sub    BYTE PTR [esi],al
  41abd5:	dec    edi
  41abd6:	add    BYTE PTR [ecx],0x4e
  41abd9:	out    dx,eax
  41abda:	or     DWORD PTR [esi-0x38],eax
  41abdd:	gs aas 
  41abdf:	mov    BYTE PTR [edx+0x7a7324e],cl
  41abe5:	enter  0x9ab2,0xe0
  41abe9:	sbb    eax,0x314afc86
  41abee:	push   ss
  41abef:	cli    
  41abf0:	add    ebx,DWORD PTR [eax+0x610752ed]
  41abf6:	mov    ?,WORD PTR ds:0xc2a349d8
  41abfc:	and    eax,0x5c51659a
  41ac01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac02:	xor    eax,0xe85190a0
  41ac07:	fistp  QWORD PTR es:[ebp-0x27]
  41ac0b:	repz cmp BYTE PTR [ecx-0x13],0x20
  41ac10:	jg     0x41ac79
  41ac12:	xchg   ebx,eax
  41ac13:	push   ecx
  41ac14:	sbb    bh,BYTE PTR [eax]
  41ac16:	adc    BYTE PTR [ebx],ah
  41ac18:	jle    0x41ac16
  41ac1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1b:	mov    BYTE PTR [ecx-0x8],ah
  41ac1e:	pop    ds
  41ac1f:	jbe    0x41aba2
  41ac21:	jne    0x41ac20
  41ac23:	xor    bh,BYTE PTR [edi-0x44]
  41ac26:	lock jae 0x41ac9f
  41ac29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2a:	xor    eax,0x17af67fa
  41ac2f:	pop    ds
  41ac30:	push   esp
  41ac31:	xor    al,0x6
  41ac33:	arpl   WORD PTR [ebp-0x8],cx
  41ac36:	jbe    0x41ac28
  41ac38:	das    
  41ac39:	mov    dh,0x63
  41ac3b:	dec    esi
  41ac3c:	mov    al,0x28
  41ac3e:	lock mov esp,0xe784d355
  41ac44:	(bad)  
  41ac45:	fiadd  DWORD PTR [edx+eax*4]
  41ac48:	add    cl,bh
  41ac4a:	loope  0x41ac84
  41ac4c:	mov    WORD PTR [edi],fs
  41ac4e:	sub    DWORD PTR [ebx],eax
  41ac50:	in     al,dx
  41ac51:	in     al,dx
  41ac52:	adc    DWORD PTR [edi+0x73],eax
  41ac55:	(bad)  
  41ac56:	mov    ebx,0x1c595809
  41ac5b:	sub    BYTE PTR [ebp+0x7f],ch
  41ac5e:	sub    dh,al
  41ac60:	jle    0x41abfd
  41ac62:	cmp    eax,0x8c74b909
  41ac67:	enter  0x7cea,0xe9
  41ac6b:	and    eax,0xc2cf836e
  41ac70:	mov    dh,0x82
  41ac72:	or     eax,0x3c851e5b
  41ac77:	pop    esp
  41ac78:	outs   dx,BYTE PTR ds:[esi]
  41ac79:	xchg   ebp,eax
  41ac7a:	sub    dh,cl
  41ac7c:	clc    
  41ac7d:	push   ds
  41ac7e:	mov    bh,0xad
  41ac80:	sub    bh,BYTE PTR ds:[edi+edi*2-0x74b12b30]
  41ac88:	sbb    cl,cl
  41ac8a:	mov    BYTE PTR [ecx+0x6d61adae],0xa2
  41ac91:	push   cs
  41ac92:	(bad)  
  41ac93:	sub    al,0x43
  41ac95:	(bad)
  41ac99:	push   0xe
  41ac9b:	lock dec eax
  41ac9d:	sub    edi,edx
  41ac9f:	mov    ebx,0x1145c5be
  41aca4:	sahf   
  41aca5:	sahf   
  41aca6:	mov    WORD PTR [ebx],es
  41aca8:	dec    edi
  41aca9:	lods   al,BYTE PTR ds:[esi]
  41acaa:	pop    ecx
  41acab:	stos   DWORD PTR es:[edi],eax
  41acac:	test   DWORD PTR [ebx+0x62],esp
  41acaf:	and    DWORD PTR [edx-0x51accb09],ebx
  41acb5:	mov    eax,0x9e43ec7c
  41acba:	mov    esp,0xd658d761
  41acbf:	cmp    al,0xe
  41acc1:	pusha  
  41acc2:	or     eax,0x87e4db5d
  41acc7:	fstp   DWORD PTR [esi+0x1ba9a4ca]
  41accd:	scas   al,BYTE PTR es:[edi]
  41acce:	(bad)  
  41accf:	jbe    0x41ad3c
  41acd1:	cs jecxz 0x41aca9
  41acd4:	rol    esp,0xac
  41acd7:	mov    bh,0xb4
  41acd9:	jae    0x41acdb
  41acdb:	repz cdq 
  41acdd:	mov    cl,0xb2
  41acdf:	sahf   
  41ace0:	sahf   
  41ace1:	popa   
  41ace2:	sub    eax,0x35d12db4
  41ace7:	stos   DWORD PTR es:[edi],eax
  41ace8:	or     bl,BYTE PTR [ecx]
  41acea:	test   DWORD PTR [esi],esi
  41acec:	loop   0x41ad18
  41acee:	lods   al,BYTE PTR ds:[esi]
  41acef:	xor    eax,0xf83c160e
  41acf4:	pop    edi
  41acf5:	sub    eax,0x1d72b5a0
  41acfa:	pop    es
  41acfb:	inc    edi
  41acfc:	aad    0xb0
  41acfe:	scas   eax,DWORD PTR es:[edi]
  41acff:	popa   
  41ad00:	dec    esp
  41ad01:	jg     0x41acd5
  41ad03:	outs   dx,BYTE PTR ds:[esi]
  41ad04:	ins    DWORD PTR es:[edi],dx
  41ad05:	sbb    edi,DWORD PTR [ecx-0x64]
  41ad08:	sbb    BYTE PTR [edx-0x19],ch
  41ad0b:	push   eax
  41ad0c:	daa    
  41ad0d:	imul   DWORD PTR [ebx-0x2e]
  41ad10:	ss shl al,cl
  41ad13:	jmp    0xc9bd6de0
  41ad18:	aam    0xa1
  41ad1a:	inc    ecx
  41ad1b:	or     eax,DWORD PTR [ebx-0x67]
  41ad1e:	cmp    bl,BYTE PTR [eax]
  41ad20:	add    DWORD PTR ds:0x9112260c,ebp
  41ad26:	(bad)  
  41ad27:	cmp    eax,0x8eeb74f5
  41ad2c:	sbb    esp,DWORD PTR [ecx-0x66159c06]
  41ad32:	enter  0x8a6,0x33
  41ad36:	xchg   ebp,esp
  41ad38:	pop    ecx
  41ad39:	and    BYTE PTR [esi-0x115ed72e],cl
  41ad3f:	dec    ebp
  41ad40:	push   esp
  41ad41:	sub    DWORD PTR ds:[ebx+0x7c],0x20a53bad
  41ad49:	and    dl,BYTE PTR [edx-0x74d39a6]
  41ad4f:	and    bl,BYTE PTR [edx*8-0x3924caf]
  41ad56:	jecxz  0x41ad98
  41ad58:	fnstsw WORD PTR [eax+0x46]
  41ad5b:	push   edi
  41ad5c:	adc    esp,ebx
  41ad5e:	aam    0xdc
  41ad60:	jg     0x41acfd
  41ad62:	cmp    edx,DWORD PTR [ebp-0x54e2519a]
  41ad68:	mov    ebx,0xe9b80acd
  41ad6d:	mov    ?,WORD PTR [ebp+0x1cf1694f]
  41ad73:	and    DWORD PTR [ebx-0x16],ebp
  41ad76:	enter  0x8174,0x62
  41ad7a:	int    0xff
  41ad7c:	xor    DWORD PTR [ebx],ecx
  41ad7e:	in     al,0x87
  41ad80:	retf   0x5e98
  41ad83:	mov    ecx,0xaa6fad64
  41ad88:	add    bh,BYTE PTR [ebp+0x5ae7a816]
  41ad8e:	cmp    BYTE PTR [ebp+ecx*1-0x1d64987a],bl
  41ad95:	xchg   BYTE PTR [ebx+0x2e198710],al
  41ad9b:	mov    al,0xe8
  41ad9d:	jmp    0x41adb1
  41ad9f:	fwait
  41ada0:	sahf   
  41ada1:	retf   
  41ada2:	dec    edi
  41ada3:	imul   ecx,esi,0x7f
  41ada6:	movaps xmm1,XMMWORD PTR [ebx-0x7f98dea8]
  41adad:	repz inc edx
  41adaf:	mov    ebp,DWORD PTR [edx]
  41adb1:	(bad)  
  41adb3:	inc    edi
  41adb4:	or     DWORD PTR [ebx],0xecbb7d4a
  41adba:	into   
  41adbb:	xchg   ecx,eax
  41adbc:	jnp    0x41ae33
  41adbe:	loop   0x41ad5f
  41adc0:	dec    edx
  41adc1:	mov    esi,0xf924bb29
  41adc6:	jno    0x41ae31
  41adc8:	xchg   ebp,eax
  41adc9:	mov    al,0x24
  41adcb:	in     eax,dx
  41adcc:	(bad)  
  41adcd:	mov    WORD PTR [edx+0x257c4d15],es
  41add3:	xchg   esi,eax
  41add4:	aas    
  41add5:	jecxz  0x41ae2c
  41add7:	inc    eax
  41add8:	mov    edi,0x1acc0570
  41addd:	out    dx,eax
  41adde:	mov    edx,ds
  41ade0:	add    esi,ebp
  41ade2:	add    al,0xcf
  41ade4:	fwait
  41ade5:	lods   eax,DWORD PTR ds:[esi]
  41ade6:	or     BYTE PTR [ebx-0x125aeca7],cl
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c56
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ad6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cde
  41afcc:	mov    ecx,DWORD PTR ds:0x421a4e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x423892
  41b017:	push   0x423812
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c56
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237ed
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423804
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c76
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bcc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423962
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ab1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d6a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c56
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423982
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c56
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e72
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c56
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42384f
  41bc20:	push   0x423883
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e72,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c56
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238ce
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423883
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423946
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c56
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421ada,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d2e,eax
  41c15b:	mov    eax,ds:0x421ada
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c56
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d2e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421ada
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c56
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c56
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c56
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cda,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cd2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c56
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237e2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a86
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423938
  41c5ea:	push   0x42389d
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423913
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x4238fe
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a34
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x34d7ebdc
  41ccad:	adc    al,0xbc
  41ccaf:	fst    QWORD PTR [edi+0x3c6261fc]
  41ccb5:	pop    edi
  41ccb6:	bound  esp,QWORD PTR [edx-0x78]
  41ccb9:	sub    esp,edx
  41ccbb:	jo     0x41cccc
  41ccbd:	lahf   
  41ccbe:	or     al,dh
  41ccc0:	je     0x41cceb
  41ccc2:	adc    BYTE PTR [ecx+0x69],0xc3
  41ccc6:	fild   DWORD PTR [eax+0x7115a0b3]
  41cccc:	jns    0x41cc91
  41ccce:	cmp    BYTE PTR [edx-0x13],dh
  41ccd1:	dec    ebp
  41ccd2:	out    dx,eax
  41ccd3:	dec    edx
  41ccd4:	rol    DWORD PTR [eax-0x5d],0x70
  41ccd8:	xor    ch,al
  41ccda:	aam    0x70
  41ccdc:	clc    
  41ccdd:	aaa    
  41ccde:	clc    
  41ccdf:	neg    BYTE PTR [esi+0x5c]
  41cce2:	iret   
  41cce3:	mov    eax,0xe2e24d02
  41cce8:	push   0x67
  41ccea:	xchg   edi,eax
  41cceb:	jns    0x41cc72
  41cced:	into   
  41ccee:	ret    
  41ccef:	jbe    0x41ccc4
  41ccf1:	lods   al,BYTE PTR ds:[esi]
  41ccf2:	cmp    esp,DWORD PTR [ebx+0x25]
  41ccf5:	int    0xdf
  41ccf7:	add    dh,BYTE PTR [edi+0x28]
  41ccfa:	jnp    0x41cd5f
  41ccfc:	(bad)  
  41ccfd:	aam    0xbc
  41ccff:	mov    cl,0x9
  41cd01:	push   ss
  41cd02:	aas    
  41cd03:	adc    esp,ebp
  41cd05:	ror    BYTE PTR [ecx],1
  41cd07:	or     BYTE PTR [edi-0x3d],0x5b
  41cd0b:	sbb    ecx,DWORD PTR [edx+0x7f09507e]
  41cd11:	mov    ah,0x43
  41cd13:	jnp    0x41ccb6
  41cd15:	hlt    
  41cd16:	push   es
  41cd17:	or     edx,DWORD PTR [ebx-0x62]
  41cd1a:	cmp    eax,0xb2906f03
  41cd1f:	into   
  41cd20:	iret   
  41cd21:	pop    ebp
  41cd22:	xchg   ebx,eax
  41cd23:	ret    0xc00b
  41cd26:	xor    dl,BYTE PTR [edi-0x401e2582]
  41cd2c:	leave  
  41cd2d:	mov    ah,BYTE PTR ds:0x84cc
  41cd32:	addr16 push 0xffffffc3
  41cd35:	xor    BYTE PTR [eax],dl
  41cd37:	aaa    
  41cd38:	dec    edi
  41cd39:	pop    ebp
  41cd3a:	xchg   ebx,eax
  41cd3b:	mov    es,WORD PTR [edi-0x7d18502b]
  41cd41:	(bad)  
  41cd42:	dec    esi
  41cd43:	sub    DWORD PTR [edi+0x1c01425d],edx
  41cd49:	cs call 0x3dcd:0x877604e7
  41cd51:	test   DWORD PTR ds:0x61368635,ebx
  41cd57:	imul   esp,edx,0x98c71db6
  41cd5d:	xchg   edx,eax
  41cd5e:	add    cl,ch
  41cd60:	dec    eax
  41cd61:	popf   
  41cd62:	je     0x41cdb6
  41cd64:	lods   al,BYTE PTR ds:[esi]
  41cd65:	scas   eax,DWORD PTR es:[edi]
  41cd66:	jmp    0xe1b3ca5b
  41cd6b:	dec    ebp
  41cd6c:	mov    dh,BYTE PTR [eax-0x76d801c2]
  41cd72:	jmp    0xd60a4889
  41cd77:	xchg   esp,eax
  41cd78:	and    bh,BYTE PTR [ebx]
  41cd7a:	out    0x4d,eax
  41cd7c:	fimul  WORD PTR [ebp*1+0x2cb66233]
  41cd83:	dec    ecx
  41cd84:	(bad)  
  41cd85:	stc    
  41cd86:	leave  
  41cd87:	xchg   ebx,eax
  41cd88:	dec    ebp
  41cd89:	cdq    
  41cd8a:	mov    cl,dh
  41cd8c:	leave  
  41cd8d:	cs pop ebx
  41cd8f:	add    eax,0xe6df2c5a
  41cd94:	les    esi,FWORD PTR [edi]
  41cd96:	fbld   TBYTE PTR ds:0xff238a11
  41cd9c:	push   ecx
  41cd9d:	outs   dx,DWORD PTR ds:[esi]
  41cd9e:	pushf  
  41cd9f:	adc    al,0xbb
  41cda1:	leave  
  41cda2:	push   esp
  41cda3:	(bad)  
  41cda4:	cmp    DWORD PTR [edx-0x74],esi
  41cda7:	push   eax
  41cda8:	test   eax,0x7f282f56
  41cdad:	add    DWORD PTR [ebx-0x58],eax
  41cdb0:	sbb    al,0xe6
  41cdb2:	enter  0x6b2e,0x91
  41cdb6:	cmp    BYTE PTR ds:0x538744,bh
  41cdbc:	ret    
  41cdbd:	jb     0x41cdb9
  41cdbf:	mov    gs,WORD PTR [esi+eiz*1+0x36]
  41cdc3:	es out dx,al
  41cdc5:	sub    al,0xf
  41cdc7:	push   ds
  41cdc8:	pop    eax
  41cdc9:	fdiv   QWORD PTR [esi]
  41cdcb:	popf   
  41cdcc:	scas   eax,DWORD PTR es:[edi]
  41cdcd:	shl    DWORD PTR [ecx-0x1ec04f51],cl
  41cdd3:	iret   
  41cdd4:	and    BYTE PTR [ecx],0x43
  41cdd7:	or     BYTE PTR [edi+ecx*4],ah
  41cdda:	xor    ebp,DWORD PTR [eax]
  41cddc:	add    al,0xc
  41cdde:	pop    ds
  41cddf:	repz or eax,0x1a673d78
  41cde5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cde6:	and    esi,esi
  41cde8:	leave  
  41cde9:	xchg   edi,eax
  41cdea:	cdq    
  41cdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdec:	sti    
  41cded:	dec    esp
  41cdee:	jnp    0x41ce48
  41cdf0:	sar    BYTE PTR [eax-0x6e],0x8d
  41cdf4:	adc    DWORD PTR [esi],edx
  41cdf6:	adc    esi,0xffffffd5
  41cdf9:	outs   dx,BYTE PTR ds:[esi]
  41cdfa:	jno    0x41cdf6
  41cdfc:	inc    ebx
  41cdfd:	scas   al,BYTE PTR es:[edi]
  41cdfe:	icebp  
  41cdff:	jo     0x41ce4c
  41ce01:	xor    al,0x46
  41ce04:	(bad)  
  41ce05:	addr16 sahf 
  41ce07:	cmp    ah,dl
  41ce09:	mov    bl,0xf9
  41ce0b:	or     cl,BYTE PTR [eax-0x78b2d4f2]
  41ce11:	sub    dh,0xcf
  41ce14:	mov    cl,0x5f
  41ce16:	inc    esp
  41ce17:	loop   0x41ce39
  41ce19:	not    dh
  41ce1b:	inc    esi
  41ce1c:	push   eax
  41ce1d:	xor    BYTE PTR [esp+ebx*4+0x6153725e],dh
  41ce24:	jno    0x41ce25
  41ce26:	jmp    0x41ce40
  41ce28:	sbb    eax,0x2d3d7e9a
  41ce2d:	test   BYTE PTR [esp+ebx*4],ah
  41ce30:	or     al,BYTE PTR ds:0x1398f0fa
  41ce36:	pop    eax
  41ce37:	and    edi,eax
  41ce39:	aaa    
  41ce3a:	or     edi,DWORD PTR [ebp+0x3]
  41ce3d:	loope  0x41ce42
  41ce3f:	add    al,0xb4
  41ce41:	inc    ebp
  41ce42:	fsubr  DWORD PTR [eax-0x2aa8cc40]
  41ce48:	cmc    
  41ce49:	and    dl,BYTE PTR ds:0x8ecb577
  41ce4f:	out    dx,al
  41ce50:	add    eax,0x72e6248f
  41ce55:	loop   0x41ce20
  41ce57:	getsec 
  41ce59:	jg     0x41ce57
  41ce5b:	rol    al,0x1e
  41ce5e:	xor    BYTE PTR [eax-0x10a116ea],al
  41ce64:	pop    esp
  41ce65:	cmp    eax,0xb6e73375
  41ce6a:	sti    
  41ce6b:	cli    
  41ce6c:	std    
  41ce6d:	inc    ebp
  41ce6e:	jae    0x41ce81
  41ce70:	adc    esi,edx
  41ce72:	add    BYTE PTR [ebp-0x679f9ea5],0xcc
  41ce79:	xor    al,0x1c
  41ce7b:	pop    esp
  41ce7c:	add    BYTE PTR [edx],dl
  41ce7e:	int3   
  41ce7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce80:	push   eax
  41ce81:	xchg   esi,eax
  41ce82:	ss into 
  41ce84:	adc    eax,0x1af01da6
  41ce89:	jmp    DWORD PTR [ecx+0x5f]
  41ce8c:	cmp    al,0x47
  41ce8e:	cmp    eax,0x7e48d12e
  41ce93:	push   cs
  41ce94:	or     al,0xee
  41ce96:	in     eax,0x35
  41ce98:	lods   al,BYTE PTR ds:[esi]
  41ce99:	jbe    0x41ce80
  41ce9b:	xchg   BYTE PTR [esi],ah
  41ce9d:	shr    BYTE PTR [edx-0x13],1
  41cea0:	in     al,0xcc
  41cea2:	rcl    BYTE PTR [ecx+0x3c78527d],0xc7
  41cea9:	mov    ecx,0x87802806
  41ceae:	fdiv   st(3),st
  41ceb0:	jb     0x41ce57
  41ceb2:	mov    eax,0x22f11f78
  41ceb7:	jae    0x41ceec
  41ceb9:	icebp  
  41ceba:	sbb    al,0xb2
  41cebc:	jbe    0x41cf08
  41cebe:	add    eax,0xd05c2309
  41cec3:	jecxz  0x41ce53
  41cec5:	jno    0x41ce98
  41cec7:	mov    WORD PTR [ebx-0x6b],cs
  41ceca:	fs lahf 
  41cecc:	mov    edx,0xba091f02
  41ced1:	mov    ds:0xe2adf7af,al
  41ced6:	rcr    BYTE PTR [ebp-0x38],cl
  41ced9:	retf   0xc57
  41cedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cedd:	retw   0x6a46
  41cee1:	(bad)  
  41cee2:	mov    edx,0x371227aa
  41cee7:	jbe    0x41cf40
  41cee9:	inc    esi
  41ceea:	stos   BYTE PTR es:[edi],al
  41ceeb:	sub    ebp,DWORD PTR [esi+eax*8]
  41ceee:	outs   dx,DWORD PTR ds:[esi]
  41ceef:	pushf  
  41cef0:	mov    dl,0x49
  41cef2:	mov    al,ds:0xaed809c4
  41cef7:	xchg   ch,ch
  41cef9:	push   eax
  41cefa:	dec    edi
  41cefb:	in     al,0xb3
  41cefd:	add    al,0x52
  41ceff:	outs   dx,DWORD PTR ds:[esi]
  41cf00:	das    
  41cf01:	fs ja  0x41ceb6
  41cf04:	inc    edi
  41cf05:	dec    eax
  41cf06:	mov    al,BYTE PTR [ecx+eax*2-0x31]
  41cf0a:	cmp    edx,eax
  41cf0c:	mov    ds:0x4fa5024d,eax
  41cf11:	inc    edi
  41cf12:	sbb    edx,DWORD PTR [edi]
  41cf14:	cmp    dl,dl
  41cf16:	daa    
  41cf17:	outs   dx,BYTE PTR ds:[esi]
  41cf18:	in     eax,0x4
  41cf1a:	scas   eax,DWORD PTR es:[edi]
  41cf1b:	mov    ch,0xf2
  41cf1d:	sbb    BYTE PTR [eax],ch
  41cf1f:	adc    BYTE PTR [edx+0x68],dh
  41cf22:	add    al,0xe
  41cf24:	clc    
  41cf25:	jo     0x41cfa4
  41cf27:	mov    al,ds:0x839d109a
  41cf2c:	adc    BYTE PTR [ebx],0x56
  41cf2f:	xchg   DWORD PTR [ecx-0x5cf92cd2],ebp
  41cf35:	mov    edi,0x5666377b
  41cf3a:	(bad)  
  41cf3b:	xlat   BYTE PTR ds:[ebx]
  41cf3c:	shl    DWORD PTR [esi-0x74cbeff],cl
  41cf42:	mov    BYTE PTR [eax+0x2d],cl
  41cf45:	hlt    
  41cf46:	mov    esp,DWORD PTR [esi-0x6eab9bf4]
  41cf4c:	imul   ecx,DWORD PTR [edi-0x48],0x68
  41cf50:	mov    ecx,DWORD PTR [ecx]
  41cf52:	add    ch,BYTE PTR [edi-0x70]
  41cf55:	xchg   DWORD PTR [eax],ebx
  41cf57:	or     BYTE PTR [ecx+ecx*2],bh
  41cf5a:	loope  0x41cf6b
  41cf5c:	adc    BYTE PTR [ebp+0x51ad7afd],al
  41cf62:	arpl   WORD PTR [ecx+0x16],bx
  41cf65:	add    eax,0x4c046bb2
  41cf6a:	jb     0x41cf0a
  41cf6c:	cli    
  41cf6d:	xchg   edi,eax
  41cf6e:	aas    
  41cf6f:	dec    edx
  41cf70:	in     al,0xbe
  41cf72:	clc    
  41cf73:	jb     0x41cf8c
  41cf75:	cmp    eax,0x7a9018ab
  41cf7a:	jae    0x41cf76
  41cf7c:	xor    DWORD PTR [edx-0x39],0x57
  41cf80:	ins    DWORD PTR es:[edi],dx
  41cf81:	lahf   
  41cf82:	or     ebx,DWORD PTR [esi+0x51d78ac0]
  41cf88:	adc    esp,DWORD PTR [edx+edx*4-0x76]
  41cf8c:	out    0xe7,al
  41cf8e:	jecxz  0x41cf6d
  41cf90:	in     eax,0x8
  41cf92:	mov    ds:0x991c499e,al
  41cf97:	(bad)  [edi-0x74c7e11f]
  41cf9d:	push   esp
  41cf9e:	adc    bl,cl
  41cfa0:	dec    edi
  41cfa1:	cdq    
  41cfa2:	jnp    0x41cf2e
  41cfa4:	daa    
  41cfa5:	gs jp  0x41cfea
  41cfa8:	int3   
  41cfa9:	dec    ebp
  41cfaa:	fnsave [ebp+esi*4-0x75]
  41cfae:	and    eax,0xda1b4e49
  41cfb3:	out    0x60,eax
  41cfb5:	and    bl,0xdd
  41cfb8:	jno    0x41cf8a
  41cfba:	cmp    eax,0xb76567be
  41cfbf:	mov    ch,0x87
  41cfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc2:	outs   dx,DWORD PTR ds:[esi]
  41cfc3:	dec    edi
  41cfc4:	xor    al,0xac
  41cfc6:	adc    edi,DWORD PTR [edi-0x49]
  41cfc9:	(bad)  
  41cfcb:	out    0x4c,eax
  41cfcd:	je     0x41cf68
  41cfcf:	push   ds
  41cfd0:	and    DWORD PTR [eax],esi
  41cfd2:	sbb    ah,al
  41cfd4:	adc    eax,0x738de96
  41cfd9:	mov    dl,0xfe
  41cfdb:	stc    
  41cfdc:	push   ebp
  41cfdd:	aas    
  41cfde:	fadd   QWORD PTR [ebx+ecx*4+0x40]
  41cfe2:	mov    dh,0x1e
  41cfe4:	inc    ecx
  41cfe5:	pop    ebx
  41cfe6:	sub    eax,0xf9823528
  41cfeb:	jb     0x41d009
  41cfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfee:	mov    dl,0x7f
  41cff0:	ss aas 
  41cff2:	add    eax,0x37b1a7bf
  41cff7:	adc    bl,dl
  41cff9:	add    al,0x2
  41cffb:	fmul   st,st(4)
  41cffd:	sti    
  41cffe:	shl    DWORD PTR [ebx-0x7b8bea97],0x78
  41d005:	adc    DWORD PTR [eax+0x3f],ebx
  41d008:	inc    eax
  41d009:	jmp    0xbeae:0x7e07e6fe
  41d010:	(bad)  
  41d011:	ins    BYTE PTR es:[edi],dx
  41d012:	out    dx,eax
  41d013:	in     eax,0xa3
  41d015:	mov    dh,0xac
  41d017:	mov    ebp,0xf6e71d01
  41d01c:	or     al,0xcd
  41d01e:	xchg   edx,eax
  41d01f:	std    
  41d020:	adc    al,cl
  41d022:	push   ds
  41d023:	int3   
  41d024:	out    0x4f,eax
  41d026:	sbb    DWORD PTR [edi+ebx*4-0x70a195b3],ebx
  41d02d:	xor    al,0xab
  41d02f:	mov    eax,0x4915eea9
  41d034:	dec    esi
  41d035:	out    dx,eax
  41d036:	repz jl 0x41cfc3
  41d039:	xchg   ebx,eax
  41d03a:	mov    ecx,0x5901c552
  41d03f:	ret    
  41d040:	push   ds
  41d041:	rcr    DWORD PTR [ecx+eax*4+0x11],cl
  41d045:	lods   eax,DWORD PTR ds:[esi]
  41d046:	test   ch,ch
  41d048:	push   ecx
  41d049:	cmp    eax,0x28197259
  41d04e:	cmp    ah,BYTE PTR [esi-0x6d97abde]
  41d054:	nop
  41d055:	mov    BYTE PTR [ebx-0x49933ee5],dh
  41d05b:	dec    eax
  41d05c:	(bad)  
  41d05d:	(bad)  
  41d05e:	mov    dh,0x1
  41d060:	repnz shl DWORD PTR [edx+eax*8],cl
  41d064:	inc    esi
  41d065:	test   al,0x3d
  41d067:	arpl   WORD PTR [edi+0x44],dx
  41d06a:	and    eax,0x737ddd5f
  41d06f:	jp     0x41d0c8
  41d071:	sbb    al,0x90
  41d073:	cmp    dl,BYTE PTR [esi+0x21]
  41d076:	or     bh,bl
  41d078:	inc    eax
  41d079:	in     eax,dx
  41d07a:	pop    edi
  41d07b:	addr16 mov di,0x7d19
  41d080:	loopne 0x41d079
  41d082:	scas   al,BYTE PTR es:[edi]
  41d083:	or     dl,al
  41d085:	and    BYTE PTR [eax],ch
  41d087:	aad    0x5b
  41d089:	pop    ebp
  41d08a:	call   0x4b97:0xe9b29623
  41d091:	aam    0xd8
  41d093:	shr    bh,0x72
  41d096:	push   edx
  41d097:	sti    
  41d098:	xchg   edx,eax
  41d099:	xchg   BYTE PTR [edi],dh
  41d09b:	pop    ss
  41d09c:	adc    BYTE PTR [ebx-0x40],ch
  41d09f:	mov    ch,0x32
  41d0a1:	and    eax,edx
  41d0a3:	stos   BYTE PTR es:[edi],al
  41d0a4:	fmul   st,st(7)
  41d0a6:	into   
  41d0a7:	dec    ebp
  41d0a8:	xchg   BYTE PTR [ebx-0x38653d7b],ch
  41d0ae:	cs mov esi,0xe8b68088
  41d0b4:	jno    0x41d0b8
  41d0b6:	out    0x1c,al
  41d0b8:	in     al,0x8f
  41d0ba:	cmc    
  41d0bb:	push   edi
  41d0bc:	xor    BYTE PTR [edi],ah
  41d0be:	pop    es
  41d0bf:	mov    bh,0x53
  41d0c1:	test   eax,0xf20e7dd6
  41d0c6:	in     eax,dx
  41d0c7:	addr16 ja 0x41d057
  41d0ca:	mov    cl,0xd8
  41d0cc:	pusha  
  41d0cd:	sub    al,0xd2
  41d0cf:	and    BYTE PTR [ecx+0x16],dl
  41d0d2:	call   0x27d:0xd18488fe
  41d0d9:	push   0xf0c8bef2
  41d0de:	sbb    bl,BYTE PTR [edx+0xf66efd6]
  41d0e4:	mov    eax,0x8045a85b
  41d0e9:	jae    0x41d15e
  41d0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ec:	jl     0x41d113
  41d0ee:	ins    BYTE PTR es:[edi],dx
  41d0ef:	mov    DWORD PTR [ecx+0x6e],ebx
  41d0f2:	das    
  41d0f3:	hlt    
  41d0f4:	add    edi,DWORD PTR ds:0xf84f892b
  41d0fa:	popf   
  41d0fb:	sub    BYTE PTR [ebp+edi*2-0x5a316af0],cl
  41d102:	out    dx,al
  41d103:	mov    dl,0x95
  41d105:	fdiv   QWORD PTR [edi+0x25683439]
  41d10b:	xchg   esp,eax
  41d10c:	sar    BYTE PTR [ebx],cl
  41d10e:	push   edx
  41d10f:	fsub   QWORD PTR [esi]
  41d111:	pushf  
  41d112:	aaa    
  41d113:	ficom  WORD PTR [ebx-0x775e8189]
  41d119:	leave  
  41d11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d11b:	repnz test al,0xf
  41d11e:	dec    ecx
  41d11f:	add    al,0x64
  41d122:	gs push cs
  41d124:	in     eax,dx
  41d125:	lea    esp,[esi]
  41d127:	out    dx,eax
  41d128:	dec    ebp
  41d129:	mov    cl,0xc7
  41d12b:	shr    dl,1
  41d12d:	in     al,0x99
  41d12f:	adc    esp,DWORD PTR [esi]
  41d131:	mov    dh,0xc3
  41d133:	mov    cl,bl
  41d135:	adc    WORD PTR [eax],bp
  41d138:	mov    ah,0x54
  41d13a:	inc    ecx
  41d13b:	pop    edx
  41d13c:	pop    edx
  41d13d:	aad    0xa9
  41d13f:	adc    dh,BYTE PTR [ecx-0x65]
  41d142:	dec    ebp
  41d143:	sub    ebx,ecx
  41d145:	test   ax,0xb397
  41d149:	fdivr  QWORD PTR [ecx]
  41d14b:	jnp    0x41d0ee
  41d14d:	dec    eax
  41d14e:	and    edi,0xffffffba
  41d151:	xchg   esp,eax
  41d152:	fldcw  WORD PTR [ecx+0x1152d010]
  41d158:	enter  0xb314,0x56
  41d15c:	xlat   BYTE PTR ds:[ebx]
  41d15d:	dec    eax
  41d15e:	mov    esi,0xbc6717d5
  41d163:	mov    dl,0x57
  41d165:	jnp    0x41d19a
  41d167:	(bad)  
  41d168:	pop    ebp
  41d169:	jno    0x41d166
  41d16b:	es dec esp
  41d16d:	inc    eax
  41d16e:	out    dx,eax
  41d16f:	inc    edx
  41d170:	(bad)  
  41d171:	dec    DWORD PTR [esi+0x6d]
  41d174:	shl    al,1
  41d176:	mov    ds:0x5375d6d3,al
  41d17b:	xchg   esp,eax
  41d17c:	push   cs
  41d17d:	inc    ebx
  41d17e:	mov    edx,0x1f9cde37
  41d183:	inc    edx
  41d184:	test   DWORD PTR [ebx-0x36be488d],edx
  41d18a:	mov    cl,0xae
  41d18c:	or     BYTE PTR [ecx+0x7d1f19e5],al
  41d192:	pusha  
  41d193:	jb     0x41d1e8
  41d195:	pusha  
  41d196:	fst    QWORD PTR [ecx]
  41d198:	xor    eax,edi
  41d19a:	dec    edi
  41d19b:	bound  eax,QWORD PTR [ecx+esi*8+0x3fdfb521]
  41d1a2:	outs   dx,DWORD PTR ds:[esi]
  41d1a3:	pop    edi
  41d1a4:	push   esp
  41d1a5:	cmp    eax,0xca80f39d
  41d1aa:	mov    ebp,0x5b5af343
  41d1af:	ins    DWORD PTR es:[edi],dx
  41d1b0:	(bad)  
  41d1b1:	call   0xa77e:0x9c12d766
  41d1b8:	inc    edx
  41d1b9:	inc    edi
  41d1ba:	mov    edi,0x611866ba
  41d1bf:	imul   esi,DWORD PTR [ecx],0xe9a07219
  41d1c5:	ins    DWORD PTR es:[edi],dx
  41d1c6:	and    BYTE PTR [esp+esi*1-0xc],0x49
  41d1cb:	mov    edi,fs
  41d1cd:	mul    edi
  41d1cf:	fwait
  41d1d0:	mov    dl,0x3e
  41d1d2:	je     0x41d20d
  41d1d4:	outs   dx,BYTE PTR ds:[esi]
  41d1d5:	push   cs
  41d1d6:	call   0x4617bea7
  41d1db:	inc    edx
  41d1dc:	pop    ss
  41d1dd:	pushf  
  41d1de:	or     al,0x9d
  41d1e0:	lahf   
  41d1e1:	push   esp
  41d1e2:	adc    eax,0xa1b047d1
  41d1e7:	call   0xc1c:0x2e8afe69
  41d1ee:	jp     0x41d188
  41d1f0:	mov    ds:0x67b97bc3,al
  41d1f5:	xor    bl,dl
  41d1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f8:	mov    ebx,0x75d5bd31
  41d1fd:	int    0x5c
  41d1ff:	push   edi
  41d200:	outs   dx,BYTE PTR ds:[esi]
  41d201:	leave  
  41d202:	xchg   edx,eax
  41d203:	aad    0xf8
  41d205:	sub    ah,BYTE PTR [eax]
  41d207:	add    DWORD PTR [ebp+0x70],0xf
  41d20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d20c:	pop    ebx
  41d20d:	in     al,0xc5
  41d20f:	fdivp  st(4),st
  41d211:	gs pop es
  41d213:	ins    BYTE PTR es:[edi],dx
  41d214:	push   ebx
  41d215:	mov    ebx,0x710e5aca
  41d21a:	inc    edi
  41d21c:	mov    ebp,0xb8a3df88
  41d221:	or     eax,0x68693be7
  41d226:	shr    DWORD PTR [eax+edx*1+0x103f2ee],0xfb
  41d22e:	push   esp
  41d22f:	pop    ds
  41d230:	xchg   edi,eax
  41d231:	xchg   DWORD PTR ds:0x243738d8,esp
  41d237:	ins    BYTE PTR es:[edi],dx
  41d238:	pusha  
  41d239:	mov    ds:0x7bb0bf9a,eax
  41d23e:	inc    ebp
  41d23f:	mov    ebp,0x8a6e43dc
  41d244:	(bad)  
  41d245:	out    0xa8,eax
  41d247:	pop    es
  41d248:	cmp    ch,BYTE PTR [ebx-0x7a82db58]
  41d24e:	int3   
  41d24f:	push   edx
  41d250:	enter  0x9490,0x4c
  41d254:	bound  esp,QWORD PTR [esi+0x2]
  41d257:	call   0xb012fdce
  41d25c:	lea    eax,[edx+0x64bd6ad1]
  41d262:	xchg   ecx,eax
  41d263:	inc    eax
  41d264:	and    al,0x2f
  41d266:	arpl   WORD PTR [eax-0xfdf31aa],sp
  41d26c:	mov    eax,ds:0xee8345fc
  41d271:	in     eax,dx
  41d272:	cmp    al,0x10
  41d274:	fidiv  DWORD PTR [edx]
  41d276:	and    ecx,eax
  41d278:	cmp    edi,DWORD PTR [eax]
  41d27a:	xor    al,0x34
  41d27c:	cdq    
  41d27d:	mov    ecx,0x6fa17a12
  41d282:	fadd   QWORD PTR [edi+ecx*2-0x4772f4b8]
  41d289:	fist   WORD PTR [ebp-0x43275d3]
  41d28f:	stos   BYTE PTR es:[edi],al
  41d290:	xor    DWORD PTR [ecx+0x20],ebp
  41d293:	test   esp,edx
  41d295:	int    0x10
  41d297:	daa    
  41d298:	mov    ds:0x28fd6f32,eax
  41d29d:	and    BYTE PTR [ecx*2+0x50ac0072],bh
  41d2a4:	cmp    BYTE PTR [edx+ebp*8+0x3e],al
  41d2a8:	shl    ah,1
  41d2aa:	shl    eax,0x3a
  41d2ad:	ror    DWORD PTR [ebp-0x34f62296],1
  41d2b3:	dec    esi
  41d2b4:	scas   eax,DWORD PTR es:[edi]
  41d2b5:	dec    esp
  41d2b6:	aam    0x78
  41d2b8:	(bad)  
  41d2b9:	rcr    DWORD PTR [edx],cl
  41d2bb:	fwait
  41d2bc:	cld    
  41d2bd:	outs   dx,BYTE PTR ds:[esi]
  41d2be:	cmp    eax,0xf98238dd
  41d2c3:	or     bl,BYTE PTR [ecx-0x3c8f25a4]
  41d2c9:	dec    ebp
  41d2ca:	push   DWORD PTR [ecx]
  41d2cc:	pop    ss
  41d2cd:	and    BYTE PTR ds:0x2dd4b6d8,dl
  41d2d3:	and    dl,BYTE PTR [edi+ebx*2-0x1b]
  41d2d7:	add    bh,bl
  41d2d9:	xor    DWORD PTR [ebp-0x7cb2d9f],ebp
  41d2df:	inc    ebp
  41d2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e1:	in     eax,0xf9
  41d2e3:	fwait
  41d2e4:	jae    0x41d362
  41d2e6:	mov    esi,0x9ade20ef
  41d2eb:	retf   
  41d2ec:	inc    ecx
  41d2ed:	loopne 0x41d2ca
  41d2ef:	mov    ebx,0x8ff8c4a6
  41d2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f5:	shl    bh,cl
  41d2f7:	loop   0x41d318
  41d2f9:	pop    ds
  41d2fa:	push   ebx
  41d2fb:	test   dh,dl
  41d2fd:	cdq    
  41d2fe:	clc    
  41d2ff:	imul   esi,edx,0xb586c8db
  41d305:	pop    ebp
  41d306:	adc    dl,BYTE PTR [si+0x5e]
  41d30a:	mov    cl,0x5
  41d30c:	out    0xa4,eax
  41d30e:	add    DWORD PTR [edx],eax
  41d310:	sbb    eax,0x4b3f512c
  41d315:	enter  0x46e4,0x40
  41d319:	lahf   
  41d31a:	iret   
  41d31b:	add    DWORD PTR [esi-0x71],0x69
  41d31f:	cs pop ebx
  41d321:	push   0xffffffc8
  41d323:	mov    ecx,0xd9583b34
  41d328:	push   ebx
  41d329:	pop    ss
  41d32a:	rep outs dx,BYTE PTR ds:[esi]
  41d32c:	push   ebp
  41d32d:	mov    cl,0x9a
  41d32f:	dec    edi
  41d330:	lods   eax,DWORD PTR ds:[esi]
  41d331:	push   ecx
  41d332:	push   cs
  41d333:	add    BYTE PTR [ebx+0x73],ah
  41d336:	ficom  DWORD PTR [ecx]
  41d338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d339:	outs   dx,DWORD PTR ds:[esi]
  41d33a:	add    DWORD PTR [edi+0x33],esp
  41d33d:	push   edi
  41d33e:	call   0x943828ad
  41d343:	icebp  
  41d344:	xor    al,0x84
  41d346:	aad    0x93
  41d348:	out    0xbf,al
  41d34a:	xor    dl,BYTE PTR [edx-0x4f]
  41d34d:	ins    BYTE PTR es:[edi],dx
  41d34e:	sub    BYTE PTR [ebp+0x1d24ba53],dl
  41d354:	jo     0x41d2ff
  41d356:	mov    ds:0x64c9ef6b,eax
  41d35b:	mov    cl,0xe6
  41d35d:	(bad)  
  41d35e:	(bad)  
  41d35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d360:	stos   BYTE PTR es:[edi],al
  41d361:	sub    esi,DWORD PTR [ebp-0xe5995f0]
  41d367:	jg     0x41d37d
  41d369:	add    ebp,DWORD PTR [ebp-0x65bcc006]
  41d36f:	outs   dx,DWORD PTR ds:[esi]
  41d370:	mov    dh,BYTE PTR [esi]
  41d372:	add    al,0x1c
  41d374:	fstp   QWORD PTR [esi-0x4f]
  41d377:	mov    ?,WORD PTR [ecx+0x3034bd84]
  41d37d:	aaa    
  41d37e:	add    DWORD PTR [ebp-0x46],0xd
  41d382:	mov    dl,0x1b
  41d384:	xlat   BYTE PTR ds:[ebx]
  41d385:	scas   eax,DWORD PTR es:[edi]
  41d386:	(bad)  
  41d387:	jp     0x41d32e
  41d389:	mov    ecx,0x5d943553
  41d38e:	push   ecx
  41d38f:	or     BYTE PTR [edi-0x58109348],ah
  41d395:	cmp    eax,0x542a07f7
  41d39a:	(bad)  
  41d39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d39c:	arpl   WORD PTR [esi],ax
  41d39e:	mov    esi,0xa492ba8f
  41d3a3:	sub    al,dh
  41d3a5:	inc    ebp
  41d3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3a7:	aad    0x9c
  41d3a9:	cmp    ecx,DWORD PTR [esi-0x164ba40d]
  41d3af:	daa    
  41d3b0:	sub    eax,0x5333ae9
  41d3b5:	cmp    esp,edi
  41d3b7:	xchg   edx,eax
  41d3b8:	repnz or DWORD PTR [edx+0x5a],eax
  41d3bc:	in     al,dx
  41d3bd:	call   0xd28c:0xdd08b593
  41d3c4:	xor    DWORD PTR [eax-0x3c],ecx
  41d3c7:	add    DWORD PTR [edi-0x60e79eb8],ebp
  41d3cd:	pop    esp
  41d3ce:	cmc    
  41d3cf:	sbb    al,0x6d
  41d3d2:	inc    ebp
  41d3d3:	xchg   DWORD PTR [ebp-0x3c],ecx
  41d3d6:	gs addr16 cdq 
  41d3d9:	adc    ebx,DWORD PTR [eax+0x31]
  41d3dc:	add    BYTE PTR [eax],ah
  41d3de:	push   cs
  41d3df:	je     0x41d436
  41d3e1:	sbb    DWORD PTR [esi],edx
  41d3e3:	ret    0x34d5
  41d3e6:	xor    bh,BYTE PTR [ecx]
  41d3e8:	or     ebp,DWORD PTR [eax]
  41d3ea:	loop   0x41d382
  41d3ec:	mov    ah,BYTE PTR [ebx+0x48a1b106]
  41d3f2:	jge    0x41d442
  41d3f4:	adc    al,0x45
  41d3f6:	ins    DWORD PTR es:[edi],dx
  41d3f7:	jle    0x41d40e
  41d3f9:	cmp    DWORD PTR [ecx-0x1aaf2b80],0x38f2b269
  41d403:	pushf  
  41d404:	call   0x773:0x60c25fe9
  41d40b:	js     0x41d3f7
  41d40d:	repz xor ebx,DWORD PTR [ebx]
  41d410:	jg     0x41d3d8
  41d412:	or     ecx,DWORD PTR [ebp+ebp*8+0x7b]
  41d416:	sbb    ch,BYTE PTR [edx-0x28]
  41d419:	ror    DWORD PTR [ecx+0x2d],cl
  41d41c:	into   
  41d41d:	mov    al,0xbb
  41d41f:	and    ebp,DWORD PTR [eax*4-0x1571d775]
  41d426:	pop    ds
  41d427:	sub    al,ah
  41d429:	mov    edx,0x957c8969
  41d42e:	aas    
  41d42f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d431:	xor    ebx,DWORD PTR [ebp+edx*1-0x3a]
  41d435:	test   BYTE PTR [ecx],0x95
  41d438:	cmp    ecx,DWORD PTR [esi]
  41d43a:	mov    dl,0x6
  41d43c:	mov    WORD PTR [eax+edi*2+0x45],?
  41d440:	add    ecx,esp
  41d442:	xchg   ebp,eax
  41d443:	push   0xffffffda
  41d445:	xor    al,0x3
  41d447:	sbb    ebx,DWORD PTR [ecx+esi*2-0x3b]
  41d44b:	inc    esp
  41d44c:	inc    ebx
  41d44d:	xchg   BYTE PTR [ebx],al
  41d44f:	pop    edx
  41d450:	je     0x41d4c2
  41d452:	xor    eax,ebp
  41d454:	cmc    
  41d455:	scas   al,BYTE PTR es:[edi]
  41d456:	cmp    eax,0x6a388ee3
  41d45b:	jb     0x41d431
  41d45d:	cs xor eax,0xaccf56df
  41d463:	imul   BYTE PTR [ebx-0xf]
  41d466:	xchg   ebp,eax
  41d467:	push   ds
  41d468:	repz daa 
  41d46a:	fadd   DWORD PTR [eax+0x4b]
  41d46d:	push   ds
  41d46e:	stos   BYTE PTR es:[edi],al
  41d46f:	icebp  
  41d470:	repnz imul ecx,DWORD PTR [eax+ebx*4],0x65
  41d475:	cld    
  41d476:	dec    edx
  41d477:	or     BYTE PTR [edx-0x3],bl
  41d47a:	out    0xfe,al
  41d47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d47d:	pop    ebx
  41d47e:	bound  ebp,QWORD PTR [ecx]
  41d480:	cmp    al,0xff
  41d482:	mov    bh,0x4
  41d484:	in     al,0xd4
  41d486:	stos   DWORD PTR es:[edi],eax
  41d487:	test   al,0x25
  41d489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d48a:	cmc    
  41d48b:	pop    ecx
  41d48c:	mov    bl,0xf7
  41d48e:	xor    eax,0x641a8c79
  41d493:	(bad)  
  41d494:	jmp    0x59f0:0x54bd27b4
  41d49b:	std    
  41d49c:	xchg   esi,eax
  41d49d:	mov    ah,0xa6
  41d49f:	dec    esp
  41d4a0:	mov    DWORD PTR [edx],esp
  41d4a2:	(bad)  
  41d4a3:	xchg   ebp,eax
  41d4a4:	push   ebp
  41d4a5:	fisubr WORD PTR [ecx]
  41d4a7:	dec    edx
  41d4a8:	cmp    al,0x6c
  41d4aa:	test   DWORD PTR [edx],esi
  41d4ac:	inc    esp
  41d4ad:	ins    BYTE PTR es:[edi],dx
  41d4ae:	enter  0xbc6a,0x9
  41d4b2:	iret   
  41d4b3:	jbe    0x41d4e8
  41d4b5:	mov    WORD PTR [ebx],?
  41d4b7:	stos   DWORD PTR es:[edi],eax
  41d4b8:	stc    
  41d4b9:	dec    edx
  41d4ba:	add    eax,0x8b1f1489
  41d4bf:	les    edx,FWORD PTR [edi]
  41d4c1:	jecxz  0x41d448
  41d4c3:	dec    ebx
  41d4c4:	(bad)  [esi+0x2a15d700]
  41d4ca:	in     eax,dx
  41d4cb:	xchg   edx,eax
  41d4cc:	mov    cl,ch
  41d4ce:	inc    ebp
  41d4cf:	(bad)  [esi+0x1e97c400]
  41d4d5:	outs   dx,DWORD PTR ds:[esi]
  41d4d6:	adc    al,0x5d
  41d4d8:	imul   edx,edx,0x36b02a2d
  41d4de:	(bad)  
  41d4df:	mov    bl,0x3f
  41d4e1:	xor    DWORD PTR [esi-0x54330f15],edi
  41d4e7:	stos   BYTE PTR es:[edi],al
  41d4e8:	retf   
  41d4e9:	shl    BYTE PTR [ecx+0x55833be1],0x72
  41d4f0:	mov    cl,0x9b
  41d4f2:	ds mov esp,0xb3183d06
  41d4f8:	sti    
  41d4f9:	dec    ebp
  41d4fa:	jmp    0x60c8c42b
  41d4ff:	push   ds
  41d500:	cs xor eax,0x5bfcf45
  41d506:	outs   dx,BYTE PTR ds:[esi]
  41d507:	repnz fcomp DWORD PTR [esi+ebx*4]
  41d50b:	xor    DWORD PTR [ebp-0x45],0x4639a8b2
  41d512:	mov    cl,0xa7
  41d514:	mov    eax,ds:0x1a5b8b8c
  41d519:	cli    
  41d51a:	sbb    DWORD PTR [esi],esi
  41d51c:	jmp    0xaba3691c
  41d521:	in     al,0xd5
  41d523:	aam    0x9
  41d525:	mov    edi,0x1595cc0d
  41d52a:	mov    al,ds:0x1cdfe903
  41d52f:	mov    ds:0x63286c21,al
  41d534:	sub    esp,DWORD PTR [ebx-0xd]
  41d537:	add    eax,0x22d30f3a
  41d53c:	ss in  al,dx
  41d53e:	dec    esi
  41d53f:	lods   eax,DWORD PTR ds:[esi]
  41d540:	icebp  
  41d541:	ficom  WORD PTR [eax+edx*8-0x2c]
  41d545:	pushf  
  41d546:	repz jp 0x41d4e8
  41d549:	push   0x7f
  41d54b:	rcl    ch,0xba
  41d54e:	mov    eax,ds:0xe734b464
  41d553:	in     al,0x40
  41d555:	add    DWORD PTR ds:0x799a08c3,ecx
  41d55b:	lock call 0xdb18:0x3a37d561
  41d563:	mov    eax,0x8dd55d4e
  41d568:	inc    edi
  41d569:	mov    al,ds:0x17f48278
  41d56e:	add    edi,DWORD PTR [eax-0x52]
  41d571:	cmc    
  41d572:	(bad)  
  41d574:	or     DWORD PTR [esi-0x55],0xffffffd5
  41d578:	xor    eax,0xea8f8fb3
  41d57d:	push   edi
  41d57e:	(bad)  
  41d57f:	sub    BYTE PTR [esi+0x6a7602e4],ah
  41d585:	mov    ah,0xe
  41d587:	arpl   WORD PTR [ebx-0x40b1c1ff],bp
  41d58d:	jp     0x41d572
  41d58f:	and    dh,ah
  41d591:	mov    esi,DWORD PTR [edx]
  41d593:	push   ebp
  41d594:	push   edx
  41d595:	pusha  
  41d596:	and    al,0x5a
  41d598:	adc    BYTE PTR [edx+0x30],0x6
  41d59c:	sub    eax,0x5ec5c33e
  41d5a1:	repz out 0x9f,eax
  41d5a4:	out    dx,eax
  41d5a5:	test   al,0x52
  41d5a7:	out    dx,al
  41d5a8:	hlt    
  41d5a9:	fadd   QWORD PTR [esi+0x559734f6]
  41d5af:	in     al,0xbb
  41d5b1:	shl    BYTE PTR [eax+0x210ce2],0xdf
  41d5b8:	xlat   BYTE PTR ds:[ebx]
  41d5b9:	ds cmp cl,dh
  41d5bc:	mul    BYTE PTR [ebp+edx*2-0x62]
  41d5c0:	inc    eax
  41d5c1:	push   edi
  41d5c2:	jno    0x41d5aa
  41d5c4:	in     al,dx
  41d5c5:	fldcw  WORD PTR [eax-0x24]
  41d5c8:	inc    esp
  41d5c9:	pop    esp
  41d5ca:	push   eax
  41d5cb:	inc    ebx
  41d5cc:	xor    eax,0xfa3c0b91
  41d5d1:	fucomip st,st(6)
  41d5d3:	pop    ecx
  41d5d4:	push   ss
  41d5d5:	mov    ds:0x632eaf6d,al
  41d5da:	lock push esp
  41d5dc:	mov    esp,0x36d87479
  41d5e1:	mov    DWORD PTR [ebx],edx
  41d5e3:	int3   
  41d5e4:	cmovno edx,DWORD PTR [esp+eax*8-0x4c6aa358]
  41d5ec:	ins    DWORD PTR es:[edi],dx
  41d5ed:	dec    ebx
  41d5ee:	push   es
  41d5ef:	int3   
  41d5f0:	ds dec esi
  41d5f2:	scas   eax,DWORD PTR es:[edi]
  41d5f3:	push   ebx
  41d5f4:	inc    edx
  41d5f5:	or     ah,BYTE PTR [ebp+0x4f]
  41d5f8:	mov    ds:0xeedaa2d7,al
  41d5fd:	pusha  
  41d5fe:	xlat   BYTE PTR ds:[ebx]
  41d5ff:	jmp    0x41d5b3
  41d601:	push   ecx
  41d602:	daa    
  41d603:	scas   eax,DWORD PTR es:[edi]
  41d604:	imul   ebx,DWORD PTR [ecx],0x5df8cb9
  41d60a:	lahf   
  41d60b:	test   al,0xb8
  41d60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d60e:	test   al,0xed
  41d610:	xchg   DWORD PTR [ecx-0x657d401c],ebx
  41d616:	sti    
  41d617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d618:	pop    edi
  41d619:	arpl   WORD PTR [esi+0x7784c54e],bx
  41d61f:	popa   
  41d620:	or     BYTE PTR [eax],dl
  41d622:	(bad)  
  41d623:	mov    ds:0x388120d6,eax
  41d628:	jle    0x41d695
  41d62a:	arpl   WORD PTR [ebp+edx*2+0x45acd051],si
  41d631:	add    ch,bl
  41d633:	inc    ebp
  41d634:	or     esi,DWORD PTR [ebp-0x31]
  41d637:	das    
  41d638:	in     al,0xec
  41d63a:	cmp    eax,0x5899ceba
  41d63f:	push   0x1f
  41d641:	jne    0x41d6c1
  41d643:	daa    
  41d644:	mov    dh,BYTE PTR [eax-0xed8dff6]
  41d64a:	outs   dx,DWORD PTR ds:[esi]
  41d64b:	(bad)  
  41d64c:	ins    BYTE PTR es:[edi],dx
  41d64d:	std    
  41d64e:	jb     0x41d620
  41d650:	adc    esi,eax
  41d652:	mov    eax,0xa5a87ea6
  41d657:	std    
  41d658:	(bad)  
  41d659:	xor    edx,DWORD PTR [edi-0x7]
  41d65c:	or     DWORD PTR [ebp-0x6330d22f],esi
  41d662:	in     eax,dx
  41d663:	ret    0x3c82
  41d666:	mov    ah,0x96
  41d668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d669:	outs   dx,BYTE PTR ds:[si]
  41d66b:	shl    DWORD PTR [ebp-0x6d],0x37
  41d66f:	and    DWORD PTR [ebp-0xf],ebx
  41d672:	rcr    DWORD PTR [ebx+0x7d],0xd9
  41d676:	push   eax
  41d677:	(bad)  
  41d678:	sbb    edi,DWORD PTR [ebx-0x52365cca]
  41d67e:	mov    ds:0x24d1b5bb,al
  41d683:	add    eax,0x14cc959f
  41d688:	or     eax,0x3b9354d4
  41d68d:	mov    ecx,ss
  41d68f:	xchg   ebp,eax
  41d690:	fisub  WORD PTR [ebx+0x51438442]
  41d696:	push   es
  41d697:	and    eax,0x9e2772b8
  41d69c:	xchg   esp,eax
  41d69d:	or     edi,edi
  41d69f:	cwde   
  41d6a0:	inc    edi
  41d6a1:	push   ds
  41d6a2:	jnp    0x41d630
  41d6a4:	ror    BYTE PTR [ebx+0x6f2f2d6f],1
  41d6aa:	in     al,0xa4
  41d6ac:	out    dx,eax
  41d6ad:	(bad)  ds:0xaf04dde7
  41d6b3:	push   es
  41d6b4:	cdq    
  41d6b5:	sbb    BYTE PTR [ebx],bh
  41d6b7:	outs   dx,DWORD PTR ds:[esi]
  41d6b8:	aaa    
  41d6b9:	in     eax,0xe5
  41d6bb:	rcl    BYTE PTR [ebx],1
  41d6bd:	and    BYTE PTR [ebx-0x18ce069e],bh
  41d6c3:	mov    WORD PTR [ecx+eax*4],ds
  41d6c6:	push   ss
  41d6c7:	and    eax,0x944a679
  41d6cc:	cmc    
  41d6cd:	add    DWORD PTR [esi-0x5df6cbe9],0xffffff90
  41d6d4:	jnp    0x41d73c
  41d6d6:	pop    ebx
  41d6d7:	sbb    al,0xbc
  41d6d9:	out    0x6a,eax
  41d6db:	inc    DWORD PTR [edi+0x5c4e78d7]
  41d6e1:	vmulss xmm1,xmm3,xmm5
  41d6e5:	push   ds
  41d6e6:	dec    DWORD PTR [esp+ebp*4]
  41d6e9:	jo     0x41d712
  41d6eb:	leave  
  41d6ec:	ja     0x41d69d
  41d6ee:	and    al,0x15
  41d6f0:	cli    
  41d6f1:	aad    0xd7
  41d6f3:	mov    ds:0xb7eea023,al
  41d6f8:	jbe    0x41d6ed
  41d6fa:	adc    cl,BYTE PTR [ebx-0x3f06d0b9]
  41d700:	xor    esp,eax
  41d702:	inc    esp
  41d703:	jns    0x41d71e
  41d705:	pop    ss
  41d706:	or     al,0xf8
  41d708:	push   ds
  41d709:	test   DWORD PTR [ebp-0xc],ebp
  41d70c:	imul   esp,DWORD PTR [ebx+edx*8-0x3db1d3a1],0x74
  41d714:	movaps xmm7,XMMWORD PTR [edi]
  41d717:	jmp    0xf33e7da5
  41d71c:	sub    esp,DWORD PTR [eax]
  41d71e:	inc    edx
  41d71f:	and    BYTE PTR [esi+0x447b563e],dl
  41d725:	ins    DWORD PTR es:[edi],dx
  41d726:	sahf   
  41d727:	aad    0x60
  41d729:	jmp    0xfc5:0x95eb744a
  41d730:	jne    0x41d6e8
  41d732:	push   eax
  41d733:	bound  ecx,QWORD PTR [ecx]
  41d735:	lds    eax,FWORD PTR [esi-0x5448d774]
  41d73b:	push   cs
  41d73c:	and    ebx,DWORD PTR [esi-0x80]
  41d73f:	jle    0x41d6f5
  41d741:	dec    esi
  41d742:	cwde   
  41d743:	push   ebx
  41d744:	pop    ebx
  41d745:	sub    BYTE PTR [edx+edi*2],al
  41d748:	repz push ebx
  41d74a:	cvtdq2ps xmm3,xmm3
  41d74d:	push   0xd8b2090f
  41d752:	loop   0x41d7b1
  41d754:	push   esp
  41d755:	ja     0x41d780
  41d757:	leave  
  41d758:	popf   
  41d759:	inc    ecx
  41d75a:	push   cs
  41d75b:	sbb    bl,BYTE PTR [esi+0x43b8256d]
  41d761:	bswap  ebp
  41d763:	sbb    eax,0x3a0afc72
  41d768:	dec    eax
  41d769:	cmp    BYTE PTR [edi-0x2ff42e73],dl
  41d76f:	pop    ss
  41d770:	or     DWORD PTR [ecx],esi
  41d772:	sbb    BYTE PTR [edi+0x4d],ch
  41d775:	imul   esi,edi,0xffffff93
  41d778:	mov    ecx,ebx
  41d77a:	outs   dx,BYTE PTR ds:[esi]
  41d77b:	sbb    BYTE PTR [ebx],cl
  41d77d:	sahf   
  41d77e:	push   cs
  41d77f:	mov    al,0xbb
  41d781:	out    dx,eax
  41d782:	adc    BYTE PTR [ebp+0x408a5efa],ah
  41d788:	jg     0x41d71f
  41d78a:	mov    ebx,0xb448a3cc
  41d78f:	pop    ebp
  41d790:	pop    ebx
  41d791:	outs   dx,BYTE PTR ds:[esi]
  41d792:	dec    ebx
  41d793:	jge    0x41d80c
  41d795:	inc    esp
  41d796:	sbb    BYTE PTR [ebp-0x42cf15ac],dl
  41d79c:	repz jne 0x41d72d
  41d79f:	and    dh,BYTE PTR [esi-0x1395af5e]
  41d7a5:	and    ah,BYTE PTR [esi]
  41d7a7:	xor    DWORD PTR [edi+0x76a0f6c7],0xfffffffb
  41d7ae:	push   ss
  41d7af:	stos   BYTE PTR es:[edi],al
  41d7b0:	inc    esp
  41d7b1:	xor    eax,ebp
  41d7b3:	xchg   ecx,eax
  41d7b4:	inc    esp
  41d7b5:	fldcw  WORD PTR [esi]
  41d7b7:	jnp    0x41d755
  41d7b9:	shr    BYTE PTR [esi+0x4c0e3c5e],cl
  41d7bf:	fidiv  DWORD PTR [eax+0x44f97024]
  41d7c5:	or     ch,BYTE PTR [ecx+0x398dfde9]
  41d7cb:	pop    esi
  41d7cc:	ret    0xb789
  41d7cf:	mov    esi,0xfc54a3d6
  41d7d4:	push   cs
  41d7d5:	jl     0x41d779
  41d7d7:	push   ecx
  41d7d8:	and    bl,BYTE PTR [ebp+0x57]
  41d7db:	adc    dl,BYTE PTR [edx+0x78]
  41d7de:	xchg   esi,eax
  41d7df:	cdq    
  41d7e0:	pop    ebx
  41d7e1:	call   0xe697:0x94f9da5f
  41d7e8:	dec    ebx
  41d7e9:	out    dx,eax
  41d7ea:	imul   DWORD PTR [ebx-0xf51cfa5]
  41d7f0:	jmp    0xdc01:0x663bdfc8
  41d7f7:	inc    ebp
  41d7f8:	iret   
  41d7f9:	cmp    eax,0x1dcc2b1e
  41d7fe:	or     al,0xc9
  41d800:	and    edx,DWORD PTR [ebp-0x36ec77d8]
  41d806:	cs jb  0x41d84a
  41d809:	je     0x41d852
  41d80b:	bswap  ebp
  41d80d:	arpl   WORD PTR [edi],ax
  41d80f:	xor    BYTE PTR [edi+0x3dc78a2f],dl
  41d815:	xchg   ebp,eax
  41d816:	sub    al,0x20
  41d818:	xor    ch,bl
  41d81a:	(bad)  
  41d81b:	jmp    0x41d7de
  41d81d:	mov    edi,0xad55ef11
  41d822:	cmp    al,0xd0
  41d824:	or     dl,BYTE PTR [eax+0x281e098]
  41d82a:	aas    
  41d82b:	jae    0x41d83b
  41d82d:	scas   al,BYTE PTR es:[edi]
  41d82e:	fst    QWORD PTR [edx-0xc]
  41d831:	inc    ebx
  41d832:	stc    
  41d833:	jno    0x41d7ef
  41d835:	ret    0x6811
  41d838:	in     al,dx
  41d839:	adc    DWORD PTR [eax-0x799e3c91],ebx
  41d83f:	pop    ss
  41d840:	test   DWORD PTR [ebp+0x416a3561],0xb933259e
  41d84a:	and    BYTE PTR [edx],bh
  41d84c:	push   ds
  41d84d:	mov    esp,0x4d353f40
  41d852:	mov    bh,0xfb
  41d854:	or     ecx,esp
  41d856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d857:	ret    
  41d858:	adc    eax,0xd6f36366
  41d85d:	int3   
  41d85e:	sbb    dh,al
  41d860:	xor    al,0xd9
  41d862:	imul   esi,DWORD PTR [ecx-0x5a62701a],0xffffffa1
  41d869:	lahf   
  41d86a:	test   DWORD PTR [ecx-0x17b8e412],eax
  41d870:	sbb    al,0x13
  41d872:	jno    0x41d8ea
  41d874:	aaa    
  41d875:	and    BYTE PTR [esi+0x385cb27c],bh
  41d87b:	scas   eax,DWORD PTR es:[edi]
  41d87c:	mov    esi,0xb3f6d0c7
  41d881:	xchg   edi,eax
  41d882:	sysenter 
  41d884:	adc    DWORD PTR [esi+0x39833ce6],ebx
  41d88a:	ret    
  41d88b:	(bad)  
  41d88d:	out    0x80,al
  41d88f:	mov    ebx,0xb822ba1b
  41d894:	aas    
  41d895:	sar    dh,cl
  41d897:	popf   
  41d898:	sub    esp,DWORD PTR [esi+0x800197f]
  41d89e:	(bad)  
  41d89f:	(bad)  [eax]
  41d8a1:	out    dx,eax
  41d8a2:	imul   ebp,eax,0x3dddb126
  41d8a8:	int    0x2a
  41d8aa:	jne    0x41d923
  41d8ac:	jae    0x41d8cf
  41d8ae:	out    0x47,eax
  41d8b0:	call   0x1944aac
  41d8b5:	popf   
  41d8b6:	mov    edi,0x845d0298
  41d8bb:	xor    bh,ah
  41d8bd:	cli    
  41d8be:	rcl    BYTE PTR [eax-0x5],cl
  41d8c1:	jbe    0x41d91c
  41d8c3:	pusha  
  41d8c4:	inc    esp
  41d8c5:	or     bh,BYTE PTR [ebp-0x74046c65]
  41d8cb:	shl    DWORD PTR [ecx+0x11],1
  41d8ce:	pop    esp
  41d8cf:	fmul   st,st(4)
  41d8d1:	xor    BYTE PTR [edx-0x8c9b9bb],ch
  41d8d7:	adc    sp,ax
  41d8da:	pushf  
  41d8db:	mov    ecx,0x6810703d
  41d8e0:	or     eax,esp
  41d8e2:	(bad)  
  41d8e3:	pushw  ds
  41d8e5:	jnp    0x41d88f
  41d8e7:	add    al,0xc7
  41d8e9:	ficomp DWORD PTR [ebp-0x7e]
  41d8ec:	cmp    BYTE PTR [ebx-0xf],bl
  41d8ef:	aas    
  41d8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f1:	cmp    DWORD PTR [ebx+0x1b],0xffffffb7
  41d8f5:	imul   esi,esp,0x2b
  41d8f8:	hlt    
  41d8f9:	dec    esp
  41d8fa:	mov    edi,0x39522450
  41d8ff:	data16 into 
  41d901:	stc    
  41d902:	retf   0x1119
  41d905:	stos   BYTE PTR es:[edi],al
  41d906:	mul    DWORD PTR [ebx+0x68]
  41d909:	stos   BYTE PTR es:[edi],al
  41d90a:	int3   
  41d90b:	pop    ebx
  41d90c:	mov    db3,ecx
  41d90f:	jns    0x41d8c4
  41d911:	pop    esi
  41d912:	icebp  
  41d913:	mov    ch,0x38
  41d915:	pusha  
  41d916:	inc    edi
  41d917:	(bad)  
  41d918:	leave  
  41d919:	and    BYTE PTR [ebx],bl
  41d91b:	xor    bl,BYTE PTR [edx+0x5c]
  41d91e:	lods   eax,DWORD PTR ds:[esi]
  41d91f:	jne    0x41d8b4
  41d921:	(bad)  
  41d922:	pop    edx
  41d923:	ret    0xaa4e
  41d926:	add    DWORD PTR [ecx],0x5a
  41d929:	pop    eax
  41d92a:	mov    al,0x3e
  41d92c:	addr16 xor al,0xf4
  41d92f:	in     eax,0x9
  41d931:	xor    DWORD PTR [eax+0x39043f1f],0xf
  41d938:	fdiv   DWORD PTR [edx+edi*8-0x3e5a6b7b]
  41d93f:	mov    ds:0x4cc27387,eax
  41d944:	js     0x41d915
  41d946:	outs   dx,BYTE PTR ds:[esi]
  41d947:	ss bnd jbe 0x41d9c9
  41d94b:	mov    dh,0xdb
  41d94d:	add    ch,BYTE PTR [esi]
  41d94f:	mov    ch,BYTE PTR [eax-0x78]
  41d952:	rol    DWORD PTR [eax-0x53],0x1
  41d956:	mov    edx,DWORD PTR [ecx]
  41d958:	stc    
  41d959:	push   esp
  41d95a:	lds    ebp,FWORD PTR [eax-0x5a76f494]
  41d960:	adc    bh,BYTE PTR [eax+eax*8+0x4f]
  41d964:	je     0x41d9ca
  41d966:	scas   eax,DWORD PTR es:[edi]
  41d967:	push   es
  41d968:	(bad)  
  41d969:	loope  0x41d94e
  41d96b:	cmp    al,BYTE PTR [ebx-0x1a]
  41d96e:	sub    dl,0x46
  41d971:	shr    ah,1
  41d973:	(bad)  
  41d975:	rol    BYTE PTR [ebx],1
  41d977:	dec    eax
  41d978:	aas    
  41d979:	mov    DWORD PTR [ebx+0x5821ffc5],0xd56f3985
  41d983:	pushf  
  41d984:	xchg   edx,eax
  41d985:	cli    
  41d986:	xor    al,0xd
  41d988:	pop    ebx
  41d989:	jnp    0x41d94d
  41d98b:	pop    esp
  41d98c:	jne    0x41d918
  41d98e:	scas   eax,DWORD PTR es:[edi]
  41d98f:	aam    0xa2
  41d991:	push   ebx
  41d992:	jmp    0x41d96e
  41d994:	inc    ebx
  41d995:	mov    gs,WORD PTR [ebx]
  41d997:	gs inc ebx
  41d999:	jae    0x41d91d
  41d99b:	(bad)  [eax+0x4a]
  41d99e:	mov    al,0x32
  41d9a0:	jnp    0x41da15
  41d9a2:	mov    bl,0x9c
  41d9a4:	mov    DWORD PTR [eax],esp
  41d9a6:	fcomp  QWORD PTR [ecx+0x7a]
  41d9a9:	scas   al,BYTE PTR es:[edi]
  41d9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ab:	hlt    
  41d9ac:	jns    0x41d99f
  41d9ae:	or     eax,0x127b6f88
  41d9b3:	jb     0x41d9eb
  41d9b5:	scas   al,BYTE PTR es:[edi]
  41d9b6:	(bad)  
  41d9b7:	cld    
  41d9b8:	dec    edx
  41d9b9:	jle    0x41da03
  41d9bb:	adc    ah,0x26
  41d9be:	jge    0x41da37
  41d9c0:	jle    0x41da14
  41d9c2:	adc    BYTE PTR [edx-0x6d184a67],bh
  41d9c8:	mov    BYTE PTR [esi],bl
  41d9ca:	ret    0x26dd
  41d9cd:	or     al,0x20
  41d9cf:	sub    eax,0xcfbdc44e
  41d9d4:	inc    eax
  41d9d5:	cmp    esi,DWORD PTR [ebx+edi*2+0x34c2763f]
  41d9dc:	sahf   
  41d9dd:	pop    edi
  41d9de:	dec    esp
  41d9df:	xor    ecx,edi
  41d9e1:	pop    edx
  41d9e2:	fsubrp st(4),st
  41d9e4:	jmp    0x5742c866
  41d9e9:	jnp    0x41d9ec
  41d9eb:	pop    eax
  41d9ec:	sbb    ah,dh
  41d9ee:	dec    ebx
  41d9ef:	pop    ss
  41d9f0:	pop    edx
  41d9f1:	jmp    0xd801:0x4d9c1073
  41d9f8:	xchg   DWORD PTR [ecx],ecx
  41d9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9fb:	pinsrw mm7,WORD PTR [esi+0x3ad05e25],0x8a
  41da03:	test   DWORD PTR [eax],ebx
  41da05:	xchg   edx,eax
  41da06:	sub    eax,DWORD PTR ds:0x37c1ac62
  41da0c:	sbb    eax,DWORD PTR [esi+esi*8-0x21]
  41da10:	inc    ebp
  41da11:	and    DWORD PTR [ecx+0x63],0xaa651384
  41da18:	cmp    al,0x26
  41da1a:	sbb    ebx,ebp
  41da1c:	aaa    
  41da1d:	mov    esp,db7
  41da20:	mov    ah,0x75
  41da22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da23:	inc    eax
  41da24:	push   ebp
  41da25:	lock inc esp
  41da27:	out    0x35,eax
  41da29:	jmp    0x41d9c5
  41da2b:	xchg   edi,eax
  41da2c:	sub    DWORD PTR [ebx+0x3d2a83a3],esp
  41da32:	leave  
  41da33:	dec    edi
  41da34:	repz push 0xd5ab110b
  41da3a:	lea    esp,[eax]
  41da3c:	nop
  41da3d:	sub    ebp,edx
  41da3f:	push   0x7a
  41da41:	mov    edi,0x5cd1da64
  41da46:	mov    ecx,0x2546a707
  41da4b:	lods   eax,DWORD PTR ds:[esi]
  41da4c:	pop    ebx
  41da4d:	stc    
  41da4e:	es inc edx
  41da50:	cmp    BYTE PTR ds:0xdd286ac9,ch
  41da56:	xchg   esp,eax
  41da57:	clc    
  41da58:	push   ebp
  41da59:	and    BYTE PTR [ebx],0x7a
  41da5c:	(bad)  
  41da5d:	ins    DWORD PTR es:[edi],dx
  41da5e:	mov    eax,edx
  41da60:	mov    DWORD PTR [ecx+0x79bf6b66],edi
  41da66:	dec    ebx
  41da67:	pop    esp
  41da68:	xor    eax,0x305aa868
  41da6d:	or     DWORD PTR [edi+0x72],ecx
  41da70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da71:	call   0x7594:0xe8ddae9e
  41da78:	int    0xea
  41da7a:	scas   al,BYTE PTR es:[edi]
  41da7b:	pop    esi
  41da7c:	ss xchg ah,dh
  41da7f:	ds data16 and al,0x52
  41da83:	cmp    edx,DWORD PTR [edx]
  41da85:	xor    al,0xf1
  41da87:	sub    bh,al
  41da89:	dec    BYTE PTR [ecx-0x153f5cd0]
  41da8f:	icebp  
  41da90:	ror    eax,0xa7
  41da93:	cmc    
  41da94:	mov    WORD PTR [ebp-0x55e3f0d7],fs
  41da9a:	add    dh,BYTE PTR [ecx+0x3e]
  41da9d:	pop    eax
  41da9e:	xchg   edi,eax
  41da9f:	clc    
  41daa0:	sbb    dl,bh
  41daa2:	mov    esp,0x48c4f389
  41daa7:	es push ecx
  41daa9:	jmp    0x2765a4cd
  41daae:	mov    dh,0x8
  41dab0:	js     0x41da8a
  41dab2:	pop    edi
  41dab3:	inc    esp
  41dab4:	add    al,0x8d
  41dab6:	dec    ebp
  41dab7:	dec    esp
  41dab8:	dec    ebx
  41dab9:	cmp    dh,bh
  41dabb:	jmp    0xf5d1:0x29efe1b4
  41dac2:	mov    edx,0x542165e9
  41dac7:	dec    edi
  41dac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dac9:	pop    esi
  41daca:	fild   QWORD PTR [esi+ebx*2-0x7d4093de]
  41dad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dad2:	shr    DWORD PTR fs:[edx],0x35
  41dad6:	outs   dx,BYTE PTR ds:[esi]
  41dad7:	fld    QWORD PTR [ebp-0x11]
  41dada:	jmp    0x41da9e
  41dadc:	jbe    0x41db3d
  41dade:	out    dx,eax
  41dadf:	sub    eax,0xe81bb407
  41dae4:	es aam 0x3c
  41dae7:	mov    ch,0x7b
  41dae9:	call   0x51ad:0xc421bbfa
  41daf0:	pop    edi
  41daf1:	push   ss
  41daf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daf3:	pop    ds
  41daf4:	and    edx,DWORD PTR [ecx+0x2]
  41daf7:	fwait
  41daf8:	sbb    al,0x1c
  41dafa:	push   edx
  41dafb:	add    eax,DWORD PTR [ecx-0x38]
  41dafe:	out    0x8,eax
  41db00:	pop    esp
  41db01:	mov    al,ds:0x51c805bf
  41db06:	adc    al,0x37
  41db08:	fisttp DWORD PTR [ecx]
  41db0a:	or     DWORD PTR [edx+0x5a50bed0],ebp
  41db10:	mov    esi,0xe75c2b9b
  41db15:	or     al,0x31
  41db17:	sub    bl,0xc8
  41db1a:	aam    0x53
  41db1c:	cmp    al,0x98
  41db1e:	(bad)  
  41db1f:	jb     0x41db9a
  41db21:	dec    ebx
  41db22:	fwait
  41db23:	inc    eax
  41db24:	aad    0xa5
  41db26:	outs   dx,DWORD PTR ds:[esi]
  41db27:	xchg   esp,eax
  41db28:	mov    edx,0xc4f3876f
  41db2d:	call   0xcee9:0x33aff347
  41db34:	pop    edx
  41db35:	clc    
  41db36:	and    edx,DWORD PTR [edx-0x54]
  41db39:	mov    ecx,0x7994cbf5
  41db3e:	xlat   BYTE PTR ds:[ebx]
  41db3f:	dec    esp
  41db40:	test   al,0x54
  41db42:	repnz test eax,0x4ccae651
  41db48:	jle    0x41db00
  41db4a:	(bad)  
  41db4b:	in     al,0xcd
  41db4d:	xchg   DWORD PTR [ebx-0x6e],eax
  41db50:	adc    ecx,esp
  41db52:	or     eax,0xaacea859
  41db57:	popa   
  41db58:	jle    0x41db71
  41db5a:	popf   
  41db5b:	outs   dx,BYTE PTR ds:[esi]
  41db5c:	push   ecx
  41db5d:	mov    edx,0xa242bace
  41db62:	jae    0x41db37
  41db64:	jae    0x41db9a
  41db66:	or     BYTE PTR [edi-0x478949cc],ch
  41db6c:	fnsave [eax-0x74]
  41db6f:	imul   BYTE PTR [eax]
  41db71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db72:	pop    ecx
  41db73:	(bad)  
  41db74:	mov    ch,0xaf
  41db76:	mov    edx,0x4af2ca0f
  41db7b:	jo     0x41dbdd
  41db7d:	jle    0x41dbda
  41db7f:	pop    edx
  41db80:	mov    BYTE PTR [ebp-0x376d4db0],dh
  41db86:	and    eax,0xd294083f
  41db8b:	add    BYTE PTR [edx],dl
  41db8d:	push   ds
  41db8e:	xlat   BYTE PTR ds:[ebx]
  41db8f:	dec    esi
  41db90:	fisubr WORD PTR [ebx+ecx*4+0x7dcb623a]
  41db97:	pop    esp
  41db98:	stos   DWORD PTR es:[edi],eax
  41db99:	and    BYTE PTR [ebx],dl
  41db9b:	les    esp,FWORD PTR [edi+ebp*2-0x1bceaf9]
  41dba2:	into   
  41dba3:	inc    eax
  41dba4:	jmp    0x324d:0xf7ea6da6
  41dbab:	in     al,0xcd
  41dbad:	ins    DWORD PTR es:[edi],dx
  41dbae:	sub    eax,0x57004447
  41dbb3:	das    
  41dbb4:	mov    eax,0xcdfbc2d4
  41dbb9:	enter  0x6e7e,0xd6
  41dbbd:	pop    esi
  41dbbe:	mov    ecx,0x473f7ab6
  41dbc3:	cmp    eax,0x97679964
  41dbc8:	scas   al,BYTE PTR es:[edi]
  41dbc9:	scas   al,BYTE PTR es:[edi]
  41dbca:	jbe    0x41dc46
  41dbcc:	hlt    
  41dbcd:	ret    0xec1f
  41dbd0:	inc    ebx
  41dbd1:	cmovns ebx,DWORD PTR [edx-0x46]
  41dbd5:	les    eax,FWORD PTR [edi]
  41dbd7:	lock fisubr DWORD PTR [ebx]
  41dbda:	lods   al,BYTE PTR ds:[esi]
  41dbdb:	loope  0x41dbc5
  41dbdd:	adc    DWORD PTR [esp+ecx*2+0x67],ecx
  41dbe1:	in     eax,0x52
  41dbe3:	xchg   BYTE PTR [esi-0x714c60d2],bl
  41dbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbea:	jnp    0x41dba2
  41dbec:	jmp    0xfa24944d
  41dbf1:	inc    ebp
  41dbf2:	push   0xffffffb9
  41dbf4:	ror    edx,1
  41dbf6:	lds    ecx,FWORD PTR [edx+0x4c]
  41dbf9:	inc    ebx
  41dbfa:	not    DWORD PTR [eax]
  41dbfc:	or     DWORD PTR [ebx-0x2b],ecx
  41dbff:	push   ebp
  41dc00:	or     al,0x31
  41dc02:	cmp    bl,bh
  41dc04:	in     al,dx
  41dc05:	cs sti 
  41dc07:	mov    edi,0xb253ee07
  41dc0c:	mov    eax,ds:0x34fd3da
  41dc11:	in     al,dx
  41dc12:	daa    
  41dc13:	mov    dl,0x4c
  41dc15:	or     DWORD PTR [esi],ecx
  41dc17:	sbb    eax,0xb0018fac
  41dc1c:	aad    0x97
  41dc1e:	dec    ebx
  41dc1f:	mov    ah,0x65
  41dc21:	jnp    0x41dc0c
  41dc23:	and    ecx,DWORD PTR [eax+eiz*8-0x63]
  41dc27:	inc    ebx
  41dc28:	pop    esp
  41dc29:	lods   al,BYTE PTR ds:[esi]
  41dc2a:	sub    eax,0x44d7367d
  41dc2f:	mov    eax,0x9b93ecc2
  41dc34:	cs loop 0x41dbd7
  41dc37:	cli    
  41dc38:	sbb    ch,BYTE PTR [edi+0x5e340584]
  41dc3e:	sar    bl,1
  41dc40:	or     DWORD PTR [edi+0x2ccfbbfd],eax
  41dc46:	mov    al,0x87
  41dc48:	sbb    BYTE PTR [ecx],0x23
  41dc4b:	retf   
  41dc4c:	wrmsr  
  41dc4e:	push   ebp
  41dc4f:	aas    
  41dc50:	sub    al,0x78
  41dc52:	xchg   ebp,eax
  41dc53:	mov    esi,0xf36ff9ba
  41dc58:	inc    ebx
  41dc59:	xor    bl,BYTE PTR [eax+0x6]
  41dc5c:	mul    BYTE PTR [edx]
  41dc5e:	es jecxz 0x41dc1a
  41dc61:	fxch   st(5)
  41dc63:	sub    eax,ecx
  41dc65:	add    DWORD PTR [ebp+ecx*2-0x2db66b5f],eax
  41dc6c:	rcl    DWORD PTR [ebp-0xb],0x67
  41dc70:	xor    BYTE PTR [eax],0xc4
  41dc73:	xchg   esp,ebx
  41dc75:	mov    ebp,DWORD PTR ds:0x703efff9
  41dc7b:	inc    esp
  41dc7c:	sbb    BYTE PTR [esi+0x5f9a496f],dh
  41dc82:	add    DWORD PTR [ecx+0x6b],0x28
  41dc86:	loope  0x41dc7d
  41dc88:	push   esi
  41dc89:	loope  0x41dcf9
  41dc8b:	push   ss
  41dc8c:	push   edi
  41dc8d:	mov    cl,0xf6
  41dc8f:	stos   DWORD PTR es:[edi],eax
  41dc90:	inc    edi
  41dc91:	jnp    0x41dc3b
  41dc93:	int3   
  41dc94:	lds    ebx,FWORD PTR [bx+0x19]
  41dc98:	ja     0x41dcfc
  41dc9a:	and    DWORD PTR [esi-0x618a2e7d],esi
  41dca0:	ffree  st(2)
  41dca2:	into   
  41dca3:	sub    BYTE PTR [edi+eiz*8],0x79
  41dca7:	jbe    0x41dc82
  41dca9:	pop    esp
  41dcaa:	rol    DWORD PTR [edx+0x18f41a50],1
  41dcb0:	cld    
  41dcb1:	and    dh,al
  41dcb3:	lahf   
  41dcb4:	cli    
  41dcb5:	cli    
  41dcb6:	hlt    
  41dcb7:	outs   dx,BYTE PTR ds:[esi]
  41dcb8:	(bad)  
  41dcb9:	(bad)
  41dcbd:	into   
  41dcbe:	cmp    esi,DWORD PTR [ebx]
  41dcc0:	fs js  0x41dcf7
  41dcc3:	arpl   WORD PTR [edi-0x144d9ff6],bp
  41dcc9:	mov    ds,WORD PTR [edx]
  41dccb:	aam    0xc9
  41dccd:	out    0xdb,eax
  41dccf:	sub    eax,0xe1ef72eb
  41dcd4:	into   
  41dcd5:	mov    edx,ss
  41dcd7:	ins    DWORD PTR es:[edi],dx
  41dcd8:	es pop edi
  41dcda:	pop    edi
  41dcdb:	es out dx,eax
  41dcdd:	rep outs dx,BYTE PTR ds:[esi]
  41dcdf:	aam    0xfc
  41dce1:	cmp    BYTE PTR [ecx],cl
  41dce3:	rol    dl,0x50
  41dce6:	test   eax,0xc5c4f255
  41dceb:	push   ss
  41dcec:	inc    ebp
  41dced:	xor    dh,BYTE PTR [ebx+0x1c]
  41dcf0:	sbb    al,0xd4
  41dcf2:	les    ebp,FWORD PTR [eax-0x26]
  41dcf5:	fld    QWORD PTR [ebx+ebp*2]
  41dcf8:	icebp  
  41dcf9:	mov    ebx,0x8b2a5aa5
  41dcfe:	test   DWORD PTR [ebx],esp
  41dd00:	mov    ch,0xd6
  41dd02:	pop    ebp
  41dd03:	repz and dh,al
  41dd06:	push   cs
  41dd07:	pop    edi
  41dd08:	call   0x73ec:0x905aa248
  41dd0f:	mov    ebx,0x159e5c77
  41dd14:	push   es
  41dd15:	test   DWORD PTR [esi-0x5b8bce34],eax
  41dd1b:	or     eax,0x675187fe
  41dd20:	or     eax,0xabdc121b
  41dd25:	sub    BYTE PTR ds:0xf9d05976,ah
  41dd2b:	lods   eax,DWORD PTR ds:[esi]
  41dd2c:	pop    edx
  41dd2d:	ins    BYTE PTR es:[edi],dx
  41dd2e:	loop   0x41dced
  41dd30:	out    0xcc,al
  41dd32:	or     edx,esp
  41dd34:	(bad)  
  41dd35:	jae    0x41dceb
  41dd37:	out    dx,eax
  41dd38:	pop    es
  41dd39:	js     0x41dd42
  41dd3b:	lods   eax,DWORD PTR ds:[esi]
  41dd3c:	pop    edx
  41dd3d:	in     eax,0x9a
  41dd3f:	int    0x0
  41dd41:	fsub   st(2),st
  41dd43:	cmp    al,0xb5
  41dd45:	mov    al,0x35
  41dd47:	lods   al,BYTE PTR ds:[esi]
  41dd48:	js     0x41dda6
  41dd4a:	pop    es
  41dd4b:	jge    0x41dd49
  41dd4d:	pop    eax
  41dd4e:	hlt    
  41dd4f:	inc    eax
  41dd50:	pop    ebp
  41dd51:	sar    DWORD PTR [edi-0x1b92008c],1
  41dd57:	jg     0x41dd6a
  41dd59:	arpl   WORD PTR [ebx+0x30],bp
  41dd5c:	mov    al,BYTE PTR [edx+0x33b410af]
  41dd62:	mov    ds:0x6d543f3e,eax
  41dd67:	adc    dl,BYTE PTR [ebx-0x10]
  41dd6a:	or     eax,0x36031300
  41dd6f:	mov    ds:0x51209ab6,al
  41dd74:	inc    eax
  41dd75:	pop    ebp
  41dd76:	mov    al,ds:0x74402ca
  41dd7b:	stos   BYTE PTR es:[edi],al
  41dd7c:	dec    ecx
  41dd7d:	jb     0x41dd30
  41dd7f:	je     0x41dd46
  41dd81:	in     eax,0x32
  41dd83:	mov    ds:0x533ac39a,al
  41dd88:	pop    ss
  41dd89:	mov    BYTE PTR [ebx-0x6d054daa],bl
  41dd8f:	popf   
  41dd90:	rcl    DWORD PTR [ebp-0x3e4e248b],cl
  41dd96:	inc    edi
  41dd97:	mov    cl,0xb2
  41dd99:	mov    edx,DWORD PTR [edi+0x137ff9e6]
  41dd9f:	jl     0x41de1e
  41dda1:	cmp    DWORD PTR [esi-0x6e],ecx
  41dda4:	inc    edi
  41dda5:	lea    edi,[edx+0x249ffd50]
  41ddab:	mov    esi,0xcce6cf2c
  41ddb0:	xchg   ecx,eax
  41ddb1:	fmul   st,st(3)
  41ddb3:	jmp    0x5a73e6a1
  41ddb8:	xchg   BYTE PTR [esp+ebx*2],ch
  41ddbb:	les    ecx,FWORD PTR [ecx+0x2007df2]
  41ddc1:	jb     0x41dd4b
  41ddc3:	jnp    0x41ddd7
  41ddc5:	dec    di
  41ddc7:	mov    WORD PTR [ebx],es
  41ddc9:	adc    BYTE PTR [edx+ecx*4+0x57],ah
  41ddcd:	aaa    
  41ddce:	push   0x13
  41ddd0:	icebp  
  41ddd1:	cmp    eax,0x7f82ada5
  41ddd6:	xchg   ecx,eax
  41ddd7:	pop    esp
  41ddd8:	fnstsw WORD PTR [ecx+0x6dfcada7]
  41ddde:	das    
  41dddf:	mov    ds:0x2f0204ae,eax
  41dde4:	xchg   edx,eax
  41dde5:	push   ebp
  41dde6:	xor    esi,DWORD PTR fs:[eax-0x7e]
  41ddea:	mov    esi,0x87878535
  41ddef:	jmp    0xc08b:0xea873214
  41ddf6:	scas   al,BYTE PTR es:[edi]
  41ddf7:	rol    BYTE PTR [ebx+ebx*2],0x8
  41ddfb:	test   ebx,edx
  41ddfd:	pop    edx
  41ddfe:	cmp    bh,BYTE PTR [esp+ebx*2+0x5]
  41de02:	mov    cl,0xfa
  41de04:	outs   dx,BYTE PTR ds:[esi]
  41de05:	xchg   edx,eax
  41de06:	cmp    dl,dh
  41de08:	pop    edi
  41de09:	in     al,0x57
  41de0b:	clc    
  41de0c:	dec    ecx
  41de0d:	out    0x7,al
  41de0f:	and    eax,0x8eb678a
  41de14:	push   ebp
  41de15:	mov    edi,0x6f126c9d
  41de1a:	test   eax,0x93cf61dc
  41de1f:	rcl    DWORD PTR [edx-0x76],1
  41de22:	pop    ecx
  41de23:	dec    esp
  41de24:	xchg   edi,eax
  41de25:	push   ebx
  41de26:	push   cs
  41de27:	ror    BYTE PTR [ebp+ebx*1+0x753e9572],0x0
  41de2f:	int    0x3a
  41de31:	sub    edx,DWORD PTR [eax-0x63]
  41de34:	xchg   ebp,eax
  41de35:	sbb    bl,BYTE PTR [edx]
  41de37:	imul   edx,DWORD PTR [esi+ebx*2-0x49fc4806],0x4d79d839
  41de42:	sbb    eax,0x2a589d64
  41de47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de48:	dec    DWORD PTR [eax+0x6d3276cf]
  41de4e:	push   es
  41de4f:	mov    cl,0xf4
  41de51:	(bad)  
  41de53:	(bad)
  41de57:	retf   0xb258
  41de5a:	inc    edx
  41de5b:	imul   DWORD PTR [edx]
  41de5d:	jmp    0x41de9d
  41de5f:	xor    eax,0x7bb92830
  41de64:	cmp    eax,0xde7cfd
  41de69:	mov    dl,0xf7
  41de6b:	mov    cl,0xdb
  41de6d:	adc    cl,BYTE PTR [ebp+edi*8-0x4e181b49]
  41de74:	icebp  
  41de75:	pushf  
  41de76:	repz fsub st(3),st
  41de79:	jb     0x41de93
  41de7b:	dec    edi
  41de7c:	pop    esi
  41de7d:	das    
  41de7e:	cmp    esp,esp
  41de80:	xrelease mov DWORD PTR [edi],esp
  41de83:	cdq    
  41de84:	(bad)  
  41de85:	dec    esp
  41de86:	ss push ebx
  41de88:	test   BYTE PTR [eax],ah
  41de8a:	(bad)  
  41de8b:	mov    cl,0xce
  41de8d:	pop    DWORD PTR [eax+0x50]
  41de90:	jnp    0x41df09
  41de92:	pop    ebx
  41de93:	test   BYTE PTR [esi+0x1e13bf0e],0x18
  41de9a:	xor    eax,ecx
  41de9c:	pop    ebx
  41de9d:	xor    eax,0x805e03dc
  41dea2:	xor    ebp,ecx
  41dea4:	xlat   BYTE PTR ds:[ebx]
  41dea5:	(bad)  
  41dea6:	clc    
  41dea7:	mov    esi,0x4f3e8657
  41deac:	out    dx,al
  41dead:	int3   
  41deae:	lods   eax,DWORD PTR ds:[esi]
  41deaf:	adc    DWORD PTR ds:0x95826df7,0xffffffbe
  41deb6:	push   edx
  41deb7:	cmp    ch,BYTE PTR gs:[edi-0x5e]
  41debb:	sti    
  41debc:	xchg   bl,dh
  41debe:	cmp    ebx,ebx
  41dec0:	xchg   esp,eax
  41dec1:	mov    esi,0x8b6e1b09
  41dec6:	popa   
  41dec7:	push   es
  41dec8:	jno    0x41df20
  41deca:	push   0xffffffd5
  41decc:	mov    cl,0x9d
  41dece:	dec    edi
  41decf:	sti    
  41ded0:	xchg   BYTE PTR ds:0x36e2b9ae,dl
  41ded6:	pop    es
  41ded7:	mov    ch,0xf7
  41ded9:	fld    QWORD PTR [ecx]
  41dedb:	sub    ecx,DWORD PTR [ecx]
  41dedd:	jmp    0x2eeed019
  41dee2:	mov    ah,0x89
  41dee4:	inc    esi
  41dee5:	scas   al,BYTE PTR es:[edi]
  41dee6:	popf   
  41dee7:	mov    esp,0xad4f01ad
  41deec:	sub    edi,DWORD PTR [edi]
  41deee:	fwait
  41deef:	lea    esi,[ebx]
  41def1:	add    eax,0x21e2442d
  41def6:	retf   
  41def7:	pop    esp
  41def8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def9:	xor    DWORD PTR [ebx+0x58],eax
  41defc:	mov    ss:0x9cada850,eax
  41df02:	inc    eax
  41df03:	lock push ecx
  41df05:	js     0x41df2c
  41df07:	xor    al,cl
  41df09:	(bad)  
  41df0a:	mov    dh,0x45
  41df0c:	jmp    0x4b909895
  41df11:	mov    bh,BYTE PTR [ebx-0x2ac486bb]
  41df17:	out    0x4e,eax
  41df19:	dec    edx
  41df1a:	mov    ah,0x3a
  41df1c:	ret    
  41df1d:	aas    
  41df1e:	mov    ah,0xd2
  41df20:	mov    edx,DWORD PTR [ebp+ebx*8+0x63]
  41df24:	adc    ah,BYTE PTR [eax]
  41df26:	xor    al,0x9d
  41df28:	inc    ebx
  41df29:	pop    ds
  41df2a:	or     BYTE PTR [esi+0x4c9cbeea],ch
  41df30:	lods   al,BYTE PTR ds:[esi]
  41df31:	mov    gs,ebp
  41df33:	adc    BYTE PTR [ebp+0x3c517c49],al
  41df39:	das    
  41df3a:	sub    al,ah
  41df3c:	mov    esi,ecx
  41df3e:	icebp  
  41df3f:	cmp    BYTE PTR [ecx+0x74],dl
  41df42:	test   BYTE PTR [edx+0x726bbd33],0x23
  41df49:	sbb    dl,cl
  41df4b:	fst    QWORD PTR [ecx]
  41df4d:	lods   eax,DWORD PTR ds:[esi]
  41df4e:	mov    ds:0x92a856a5,eax
  41df53:	push   ss
  41df54:	cmp    edi,esi
  41df56:	jns    0x41df62
  41df58:	test   BYTE PTR [edi],0xc1
  41df5b:	mov    bl,0x5a
  41df5d:	xlat   BYTE PTR ds:[ebx]
  41df5e:	or     edi,DWORD PTR [edi+0x429f6fe]
  41df64:	jno    0x41df7a
  41df66:	loope  0x41df55
  41df68:	test   al,0x45
  41df6a:	ret    0xa7ae
  41df6d:	inc    esi
  41df6e:	scas   eax,DWORD PTR es:[edi]
  41df6f:	pop    ds
  41df70:	jne    0x41df96
  41df72:	push   edi
  41df73:	test   eax,0x2ffe6f06
  41df78:	(bad)  
  41df79:	jnp    0x41df6f
  41df7b:	aam    0xd7
  41df7d:	iret   
  41df7e:	dec    ebx
  41df7f:	int    0x1f
  41df81:	lods   al,BYTE PTR ds:[esi]
  41df82:	dec    ebp
  41df83:	mov    ds:0x6526de2c,al
  41df88:	xchg   ecx,eax
  41df89:	es (bad) 
  41df8b:	dec    ebp
  41df8c:	fnstsw WORD PTR [edx-0x2d]
  41df8f:	out    0x64,al
  41df91:	and    ah,BYTE PTR [eax+0x60a6f90c]
  41df97:	jmp    0x1e86:0x359ad564
  41df9e:	cdq    
  41df9f:	cmp    DWORD PTR ds:0xc16edc5c,esi
  41dfa5:	or     al,0x63
  41dfa7:	and    DWORD PTR [ebp+0x5ee8df74],edx
  41dfad:	jmp    0x7faa:0x5a54d72c
  41dfb4:	imul   esi,DWORD PTR [ebp+eax*1-0x1c42b442],0xb8e38796
  41dfbf:	pop    ebp
  41dfc0:	mov    edi,0xb23ca744
  41dfc5:	loop   0x41dfba
  41dfc7:	inc    esi
  41dfc8:	mov    ds:0x8994e814,al
  41dfcd:	sbb    eax,0xf5482228
  41dfd2:	outs   dx,BYTE PTR ds:[esi]
  41dfd3:	sbb    eax,0x97f6afea
  41dfd8:	mov    cl,0x51
  41dfda:	and    DWORD PTR [edx],eax
  41dfdc:	cld    
  41dfdd:	lock add BYTE PTR [eax-0x2504d48c],al
  41dfe4:	fild   WORD PTR [eax+0x11]
  41dfe7:	in     eax,dx
  41dfe8:	dec    ebp
  41dfe9:	cli    
  41dfea:	push   edx
  41dfeb:	push   edx
  41dfec:	jnp    0x41e06d
  41dfee:	ud0    edx,esp
  41dff1:	inc    esp
  41dff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff3:	dec    ecx
  41dff4:	mov    dl,0xe6
  41dff6:	mov    edi,0x771705c2
  41dffb:	mov    ebp,0xa865975
  41e000:	sbb    al,0x9b
  41e002:	dec    bp
  41e004:	(bad)  
  41e005:	jo     0x41dfbe
  41e007:	es into 
  41e009:	mov    esi,0x2d483c39
  41e00e:	not    BYTE PTR [ebx]
  41e010:	xor    al,0xc7
  41e012:	mov    ds:0xf80fec01,al
  41e017:	push   es
  41e018:	cdq    
  41e019:	daa    
  41e01a:	lods   al,BYTE PTR ds:[esi]
  41e01b:	push   edx
  41e01c:	int3   
  41e01d:	mov    eax,ds:0x3ec93e3d
  41e022:	js     0x41dfcc
  41e024:	dec    edi
  41e025:	fst    QWORD PTR [ebp-0x6f90d5c5]
  41e02b:	ss cmc 
  41e02d:	je     0x41e03f
  41e02f:	shr    BYTE PTR [ecx-0x41],0x1
  41e033:	addr16 push ss
  41e035:	inc    ebp
  41e036:	sar    DWORD PTR [esi],0x52
  41e039:	lods   eax,DWORD PTR ds:[esi]
  41e03a:	ret    
  41e03b:	hlt    
  41e03c:	mov    dl,0xb1
  41e03e:	lea    edi,[edx+ebp*8]
  41e041:	jo     0x41e019
  41e043:	sbb    al,0xc6
  41e045:	push   ebp
  41e046:	sbb    DWORD PTR [eax+0x16],edx
  41e049:	inc    eax
  41e04a:	dec    esp
  41e04b:	pop    esi
  41e04c:	cmp    ebp,ebx
  41e04e:	scas   al,BYTE PTR es:[edi]
  41e04f:	jne    0x41e0a9
  41e051:	fisttp WORD PTR [ecx+0x54]
  41e054:	int    0x6e
  41e056:	retf   0xc569
  41e059:	dec    esp
  41e05a:	clc    
  41e05b:	pop    es
  41e05c:	sar    BYTE PTR [ecx],1
  41e05e:	mov    esi,DWORD PTR [ebx+0x52]
  41e061:	fidivr WORD PTR [edi+eiz*1]
  41e064:	pop    esi
  41e065:	adc    DWORD PTR [eax-0x3e407246],ebp
  41e06b:	pop    ecx
  41e06c:	cld    
  41e06d:	fmulp  st(1),st
  41e06f:	aas    
  41e070:	js     0x41e0d7
  41e072:	lahf   
  41e073:	bound  ebx,QWORD PTR [esi]
  41e075:	sti    
  41e076:	loopne 0x41e03b
  41e078:	cmc    
  41e079:	je     0x41e0e6
  41e07b:	arpl   WORD PTR [esp+ecx*8],di
  41e07e:	mov    WORD PTR [ecx+0x6dcffb1a],?
  41e084:	shl    BYTE PTR [ebx],cl
  41e086:	dec    ebp
  41e087:	adc    al,0x8a
  41e089:	test   eax,0xec47576
  41e08e:	sub    al,0x2e
  41e090:	inc    ebp
  41e091:	mov    dl,0x3c
  41e093:	mov    edx,0xdd814870
  41e098:	and    dl,BYTE PTR [ecx+0x2aa17333]
  41e09e:	pop    edx
  41e09f:	out    0x5f,eax
  41e0a1:	stos   BYTE PTR es:[edi],al
  41e0a2:	dec    ebp
  41e0a3:	jl     0x41e06e
  41e0a5:	jge    0x41e100
  41e0a7:	fnstsw WORD PTR [ebx]
  41e0a9:	mov    bh,0x24
  41e0ab:	adc    DWORD PTR [edx],ebx
  41e0ad:	daa    
  41e0ae:	jnp    0x41e0de
  41e0b0:	xchg   ebx,eax
  41e0b1:	(bad)  
  41e0b2:	jbe    0x41e0b4
  41e0b4:	retf   
  41e0b5:	out    dx,eax
  41e0b6:	scas   eax,DWORD PTR es:[edi]
  41e0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b8:	stc    
  41e0b9:	pop    ebx
  41e0ba:	aaa    
  41e0bb:	cmp    bl,BYTE PTR [ebx+0x1e]
  41e0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0bf:	rcl    cl,cl
  41e0c1:	retf   0x5d89
  41e0c4:	out    0x66,eax
  41e0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c7:	xor    BYTE PTR gs:[edx+0x2f],0x10
  41e0cc:	in     al,0xe
  41e0ce:	cwde   
  41e0cf:	ja     0x41e11f
  41e0d1:	imul   ebx,edx,0x5a
  41e0d4:	pop    ebp
  41e0d5:	ja     0x41e10b
  41e0d7:	pop    ds
  41e0d8:	inc    ecx
  41e0d9:	btc    esi,0x34
  41e0dd:	loop   0x41e0b1
  41e0df:	mov    eax,0xf3281afe
  41e0e4:	call   0x7d434f77
  41e0e9:	sub    DWORD PTR [ebx],eax
  41e0eb:	mov    eax,0x29a01962
  41e0f0:	cld    
  41e0f1:	fist   WORD PTR [ebx+0x10e45aae]
  41e0f7:	jge    0x41e093
  41e0f9:	xor    al,0xbe
  41e0fb:	mov    esi,0xe7f4589d
  41e100:	(bad)  
  41e101:	push   0xffffffab
  41e103:	jb     0x41e109
  41e105:	adc    dl,BYTE PTR [ebp-0xa]
  41e108:	aad    0x91
  41e10a:	push   eax
  41e10b:	fdivp  st(5),st
  41e10d:	xchg   ebp,eax
  41e10e:	lds    ecx,FWORD PTR [edi-0x74]
  41e111:	lods   al,BYTE PTR ds:[esi]
  41e112:	dec    ebp
  41e113:	(bad)  
  41e114:	xor    DWORD PTR [esi+0x30f67027],edx
  41e11a:	fist   DWORD PTR [ecx-0x1]
  41e11d:	imul   esp,DWORD PTR [edi+0x43dec0a3],0xffffff9c
  41e124:	inc    ecx
  41e125:	xchg   esp,eax
  41e126:	sub    dl,BYTE PTR [ebx]
  41e128:	ja     0x41e14c
  41e12a:	fs dec ebx
  41e12c:	imul   edx,DWORD PTR [edi-0x4f1eb120],0xffffff90
  41e133:	add    esp,DWORD PTR [eax+ecx*8+0x47]
  41e137:	arpl   WORD PTR [edi-0xa],dx
  41e13a:	call   0x5913:0x78660ce3
  41e141:	inc    ecx
  41e142:	stc    
  41e143:	inc    ecx
  41e144:	sub    al,0xd2
  41e146:	pop    ebx
  41e147:	xchg   esi,eax
  41e148:	or     BYTE PTR [ebp+0x36a4bdf6],al
  41e14e:	xor    al,0x1f
  41e150:	inc    edi
  41e151:	lock fbld TBYTE PTR [esi-0x4f]
  41e155:	and    BYTE PTR [ebp-0x4bb19799],dl
  41e15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15c:	enter  0xfee2,0x58
  41e160:	pop    edi
  41e161:	sub    bh,BYTE PTR [eax-0x5d]
  41e164:	pop    ds
  41e165:	(bad)  
  41e166:	(bad)  
  41e167:	jmp    0xc10975b
  41e16c:	push   edi
  41e16d:	jmp    0xc52d369f
  41e172:	jbe    0x41e13e
  41e174:	pop    DWORD PTR [ecx+eax*4+0x65]
  41e178:	jg     0x41e1c0
  41e17a:	mov    ebp,0x73be0d2e
  41e17f:	dec    edi
  41e180:	inc    edi
  41e181:	div    ecx
  41e183:	pop    ebp
  41e184:	ja     0x41e1f0
  41e186:	in     eax,dx
  41e187:	add    eax,0x498ed597
  41e18c:	sub    BYTE PTR [eax],bl
  41e18e:	int    0x53
  41e190:	mov    bh,0xf1
  41e192:	ins    DWORD PTR es:[edi],dx
  41e193:	jae    0x41e209
  41e195:	xor    ebx,esi
  41e197:	mov    ah,al
  41e199:	adc    al,0x5
  41e19b:	jmp    0x7211ae2
  41e1a0:	(bad)  
  41e1a1:	outs   dx,DWORD PTR ds:[esi]
  41e1a2:	es mov ecx,0xbba37fc5
  41e1a8:	arpl   WORD PTR [eax+0x5dcc2f7b],sp
  41e1ae:	mov    dh,0x8e
  41e1b0:	not    DWORD PTR [edx]
  41e1b2:	iret   
  41e1b3:	xchg   edi,eax
  41e1b4:	xchg   ebp,eax
  41e1b5:	icebp  
  41e1b6:	ins    DWORD PTR es:[edi],dx
  41e1b7:	test   DWORD PTR [edx-0x42],edx
  41e1ba:	imul   esi,edx,0xc4b2e96
  41e1c0:	fwait
  41e1c1:	bnd jno 0x41e226
  41e1c4:	cli    
  41e1c5:	addr16 ss dec ebp
  41e1c8:	inc    ecx
  41e1c9:	out    0x50,eax
  41e1cb:	xchg   edi,eax
  41e1cc:	bound  esp,QWORD PTR [ebx]
  41e1ce:	adc    bh,BYTE PTR [ecx]
  41e1d0:	mov    ebx,0x6b08306d
  41e1d5:	pop    ebp
  41e1d6:	out    dx,eax
  41e1d7:	xor    BYTE PTR [ebx+0x40ff7937],bh
  41e1dd:	adc    edi,DWORD PTR [ecx]
  41e1df:	sar    DWORD PTR [ebp-0x524d4ad1],1
  41e1e5:	dec    DWORD PTR [eax+0x2e]
  41e1e8:	lock call 0x7e96:0xdc8aff7e
  41e1f0:	jle    0x41e1d5
  41e1f2:	icebp  
  41e1f3:	xor    al,BYTE PTR [edx-0x1dd49557]
  41e1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1fa:	leave  
  41e1fb:	jg     0x41e242
  41e1fd:	mov    gs,WORD PTR [esi+0x27b43338]
  41e203:	and    eax,0x3c449126
  41e208:	pop    esi
  41e209:	push   0xfffffff4
  41e20b:	mov    edx,0xca1c8a76
  41e210:	mov    bh,al
  41e212:	in     eax,0x62
  41e214:	inc    esi
  41e215:	lods   eax,DWORD PTR ds:[esi]
  41e216:	cmc    
  41e217:	mov    bl,0x21
  41e219:	cmp    BYTE PTR [edi+eax*8+0x3727a121],0x8f
  41e221:	xor    ebx,DWORD PTR [ebp+0x2d]
  41e224:	or     edi,edx
  41e226:	loopne 0x41e1e9
  41e228:	dec    eax
  41e229:	in     eax,0xdc
  41e22b:	popa   
  41e22c:	push   es
  41e22d:	pop    ds
  41e22e:	mov    bl,0xc8
  41e230:	adc    BYTE PTR [esi],ah
  41e232:	fsubr  DWORD PTR [edx+0x10738bbf]
  41e238:	lea    eax,[ecx]
  41e23a:	daa    
  41e23b:	(bad)  [eax-0x2c492744]
  41e241:	es mov ch,0x2b
  41e244:	hlt    
  41e245:	popa   
  41e246:	ds adc BYTE PTR cs:[edi],dl
  41e24a:	stos   BYTE PTR es:[edi],al
  41e24b:	or     eax,0x3c2f6f68
  41e250:	call   0x8d7784e6
  41e255:	sbb    al,0x4d
  41e257:	push   0xc78166b5
  41e25c:	sub    bl,BYTE PTR [edx+edx*8+0x186f9e02]
  41e263:	js     0x41e20f
  41e265:	adc    ebp,DWORD PTR [ecx-0x10]
  41e268:	jae    0x41e2a0
  41e26a:	push   edx
  41e26b:	aaa    
  41e26c:	sub    ebp,DWORD PTR [ebx-0x630a7072]
  41e272:	push   ds
  41e273:	dec    esp
  41e274:	add    al,0x47
  41e276:	mov    DWORD PTR [esi+0x3041b8cb],esp
  41e27c:	(bad)  
  41e27d:	cmp    al,BYTE PTR [ecx+ebx*8-0x7e4886fa]
  41e284:	out    dx,al
  41e285:	pushf  
  41e286:	mov    ch,BYTE PTR [ebx+edx*1-0xdcd8999]
  41e28d:	mov    dl,0x16
  41e28f:	test   DWORD PTR [edi+0xae1fe46],ebx
  41e295:	adc    ch,ch
  41e297:	or     cl,BYTE PTR [ecx+0x1e]
  41e29a:	mov    bh,0x83
  41e29c:	test   BYTE PTR [ecx+0xc83c9b7],bh
  41e2a2:	xchg   edi,eax
  41e2a3:	jge    0x41e2bc
  41e2a5:	inc    esi
  41e2a6:	inc    BYTE PTR [edx]
  41e2a8:	cdq    
  41e2a9:	mov    ecx,0xd11bfd3a
  41e2ae:	jbe    0x41e236
  41e2b0:	mov    ah,0xf7
  41e2b2:	gs in  al,dx
  41e2b4:	div    BYTE PTR [edx-0x7f]
  41e2b7:	(bad)  
  41e2b8:	sti    
  41e2b9:	dec    ebx
  41e2ba:	imul   esp,esp,0x9643431f
  41e2c0:	and    dh,BYTE PTR [esi+0x4b]
  41e2c3:	shl    dl,0x19
  41e2c6:	pop    edx
  41e2c7:	scas   eax,DWORD PTR es:[edi]
  41e2c8:	mov    ds:0xec436d8b,eax
  41e2cd:	test   BYTE PTR cs:[eax+0x2a],bh
  41e2d1:	in     al,0x53
  41e2d3:	mov    ecx,0xe82594cf
  41e2d8:	adc    eax,0xd8727f09
  41e2dd:	cdq    
  41e2de:	mov    ds:0x9892740a,al
  41e2e3:	xlat   BYTE PTR cs:[ebx]
  41e2e5:	out    0xb0,eax
  41e2e7:	fiadd  WORD PTR [edx]
  41e2e9:	cmc    
  41e2ea:	cmp    cl,bh
  41e2ec:	push   0x4a13a167
  41e2f1:	adc    eax,0xe0f3bce8
  41e2f6:	and    eax,0xebe9d492
  41e2fb:	add    eax,0x1c4fd6bf
  41e300:	std    
  41e301:	sbb    DWORD PTR [ebx-0x5f],edi
  41e304:	fisttp DWORD PTR ds:0xb13ef065
  41e30a:	sub    al,0xf8
  41e30c:	xchg   BYTE PTR [esi-0x4f2b450c],ah
  41e312:	mov    ah,0x12
  41e314:	arpl   bx,si
  41e316:	in     eax,0xed
  41e318:	andps  xmm5,XMMWORD PTR [ebx+ebp*8]
  41e31c:	mov    al,0x8b
  41e31e:	and    edi,edi
  41e320:	cmp    esi,DWORD PTR [ebp-0x55]
  41e323:	inc    esi
  41e324:	add    bh,al
  41e326:	test   eax,0x1459daad
  41e32b:	adc    eax,0x52bdd75a
  41e330:	pop    ds
  41e331:	pop    es
  41e332:	xor    ebx,DWORD PTR [ebx+0x44593416]
  41e338:	sbb    eax,0xfb957ccf
  41e33d:	ds (bad) 
  41e33f:	imul   DWORD PTR [edi+ebp*4-0x2d12b858]
  41e346:	cmp    BYTE PTR [ebx-0x59b1809b],cl
  41e34c:	jle    0x41e305
  41e34e:	sahf   
  41e34f:	push   edi
  41e350:	rol    BYTE PTR [esi-0x13],cl
  41e353:	xchg   DWORD PTR [eax],edi
  41e355:	daa    
  41e356:	nop
  41e357:	inc    ecx
  41e358:	les    eax,FWORD PTR [ebx-0x1a]
  41e35b:	push   ss
  41e35c:	jbe    0x41e2eb
  41e35e:	xchg   esp,eax
  41e35f:	mov    edi,0x8350802e
  41e364:	xor    dh,BYTE PTR [esi+0x54191192]
  41e36a:	call   0x10027076
  41e36f:	retf   0x84cf
  41e372:	sub    DWORD PTR [ebx+edi*8+0x6f],esp
  41e376:	out    dx,al
  41e377:	neg    DWORD PTR [esi+0x65]
  41e37a:	cmp    cl,al
  41e37c:	jae    0x41e3e0
  41e37e:	(bad)  
  41e37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e380:	push   esp
  41e381:	mov    esi,0x6df80ec9
  41e386:	cmp    al,0x77
  41e388:	es jne 0x41e394
  41e38b:	(bad)  
  41e38c:	push   edx
  41e38d:	jne    0x41e326
  41e38f:	mov    eax,0x9a280242
  41e394:	call   0xa99fa220
  41e399:	mov    dl,0x75
  41e39b:	cmc    
  41e39c:	mov    al,ds:0x70186e29
  41e3a1:	loopne 0x41e3ad
  41e3a3:	(bad)  
  41e3a4:	and    al,0x3e
  41e3a6:	gs inc eax
  41e3a8:	xchg   edx,eax
  41e3a9:	dec    edi
  41e3aa:	rcl    DWORD PTR [ecx-0x58b0e84f],cl
  41e3b0:	std    
  41e3b1:	in     eax,0x8
  41e3b3:	ins    BYTE PTR es:[edi],dx
  41e3b4:	inc    esp
  41e3b5:	std    
  41e3b6:	or     BYTE PTR [ecx+ebp*4],bh
  41e3b9:	lds    esp,FWORD PTR [ecx-0x3973b41f]
  41e3bf:	sbb    eax,DWORD PTR [esi+0x2f0eac5a]
  41e3c5:	dec    esp
  41e3c6:	and    edi,ecx
  41e3c8:	cmp    BYTE PTR [edx-0x32],dl
  41e3cb:	(bad)  
  41e3cc:	ficomp DWORD PTR [ebx-0x7f856737]
  41e3d2:	in     al,dx
  41e3d3:	sahf   
  41e3d4:	push   ebp
  41e3d5:	jno    0x41e3e4
  41e3d7:	adc    ebp,0xffffffcf
  41e3da:	int3   
  41e3db:	mov    esi,0x6cb9c136
  41e3e0:	or     ebx,eax
  41e3e2:	xchg   DWORD PTR [ecx-0xf],ebp
  41e3e5:	xchg   DWORD PTR [edi-0x6f794eb8],ebx
  41e3eb:	ins    DWORD PTR es:[edi],dx
  41e3ec:	xchg   esp,eax
  41e3ed:	mov    ebp,0xf34e88d3
  41e3f2:	mov    ebp,0xf17c729a
  41e3f7:	loope  0x41e3a5
  41e3f9:	loopne 0x41e3ea
  41e3fb:	mov    ds:0xddf9a779,eax
  41e400:	loope  0x41e448
  41e402:	fdivr  DWORD PTR [ecx-0x73a62579]
  41e408:	hlt    
  41e409:	xchg   esi,eax
  41e40a:	je     0x41e401
  41e40c:	inc    ecx
  41e40d:	or     al,0x52
  41e40f:	cs ret 
  41e411:	pop    esi
  41e412:	test   DWORD PTR [ecx],ecx
  41e414:	cli    
  41e415:	bound  ebx,QWORD PTR [ecx]
  41e417:	mov    esi,0xd984bd0f
  41e41c:	or     DWORD PTR [edx-0x5863d74f],ebx
  41e422:	sub    ebx,0x5f18930a
  41e428:	mov    bl,BYTE PTR [edx-0x7b]
  41e42b:	jae    0x41e48c
  41e42d:	cmp    BYTE PTR [esp+ebp*2+0x24],dl
  41e431:	and    BYTE PTR [edi],0x5c
  41e434:	test   eax,0xb33b8759
  41e439:	(bad)  
  41e43a:	or     DWORD PTR [ebx-0x44],esp
  41e43d:	push   ebp
  41e43e:	sub    bl,BYTE PTR [ecx+eax*8]
  41e441:	mov    ds:0x529efff4,al
  41e446:	jl     0x41e3fd
  41e448:	pop    ebx
  41e449:	sub    al,0x51
  41e44b:	ficomp DWORD PTR [ebx-0x56]
  41e44e:	sbb    al,0x96
  41e450:	dec    esi
  41e451:	xor    bh,BYTE PTR [edx+edi*2-0x2]
  41e455:	in     al,dx
  41e456:	add    edx,esi
  41e458:	add    al,0xe1
  41e45a:	inc    ebp
  41e45b:	fisubr DWORD PTR [esi-0x34]
  41e45e:	popf   
  41e45f:	pusha  
  41e460:	pop    edi
  41e461:	jnp    0x41e45e
  41e463:	push   0x89828bcf
  41e468:	push   ds
  41e469:	xor    dh,BYTE PTR [eax-0x595b713e]
  41e46f:	sahf   
  41e470:	fstp   TBYTE PTR [edi+0x30]
  41e473:	xchg   esp,eax
  41e474:	aad    0xa8
  41e476:	sub    eax,0x67d2460d
  41e47b:	mov    bl,0x2
  41e47d:	adc    al,0x79
  41e47f:	lea    ebp,[ecx+0x75]
  41e482:	dec    edi
  41e483:	adc    BYTE PTR [ebx],dh
  41e485:	xchg   DWORD PTR cs:[ebx],ecx
  41e488:	and    BYTE PTR [edx*4-0x12007dc2],dl
  41e48f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e490:	into   
  41e491:	pop    es
  41e492:	test   DWORD PTR ds:0x6d6835e1,0x7fa3c459
  41e49c:	cs jne 0x41e481
  41e49f:	int3   
  41e4a0:	mov    al,0x19
  41e4a2:	xchg   DWORD PTR [edi+ebp*1],esp
  41e4a5:	jae    0x41e4b3
  41e4a7:	test   al,0xb8
  41e4a9:	push   ebx
  41e4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ab:	lods   eax,DWORD PTR ds:[esi]
  41e4ac:	ficomp DWORD PTR [esi+0x2d3b7416]
  41e4b2:	sbb    bl,BYTE PTR [edx+edx*4]
  41e4b5:	mov    al,0xd4
  41e4b7:	cmp    DWORD PTR [eax-0x5e],ebp
  41e4ba:	pop    es
  41e4bb:	mov    dl,0xeb
  41e4bd:	(bad)  
  41e4bf:	cmp    DWORD PTR [ecx],ebx
  41e4c1:	and    BYTE PTR [edx],ch
  41e4c3:	inc    esp
  41e4c4:	pop    ss
  41e4c5:	sub    edx,DWORD PTR [edx-0x20]
  41e4c8:	mov    esp,0x450556
  41e4cd:	jae    0x41e460
  41e4cf:	mov    ds:0xa895dd69,al
  41e4d4:	adc    DWORD PTR [ecx-0x29],ebx
  41e4d7:	out    0x32,al
  41e4d9:	cli    
  41e4da:	in     al,dx
  41e4db:	xchg   esi,eax
  41e4dc:	mov    WORD PTR [esi],?
  41e4de:	rol    BYTE PTR [eax],cl
  41e4e0:	test   BYTE PTR [ecx+0x13ca22dd],ch
  41e4e6:	jno    0x41e542
  41e4e8:	int3   
  41e4e9:	mov    ebp,0xb5e0a7d7
  41e4ee:	jbe    0x41e485
  41e4f0:	and    dl,BYTE PTR [ecx]
  41e4f2:	fsub   DWORD PTR [ebp-0x3]
  41e4f5:	fwait
  41e4f6:	add    al,0x79
  41e4f8:	or     eax,0x2d5c5ee0
  41e4fd:	jge    0x41e4c6
  41e4ff:	xor    edx,DWORD PTR ds:0x6f9e902c
  41e505:	arpl   WORD PTR [ebp-0x32bab39e],bx
  41e50b:	push   ebp
  41e50c:	cwde   
  41e50d:	lds    edi,FWORD PTR [edx+0x4f]
  41e510:	fistp  QWORD PTR [edx]
  41e512:	pop    DWORD PTR [edi]
  41e514:	jbe    0x41e587
  41e516:	push   si
  41e518:	retf   0x3f14
  41e51b:	or     edx,DWORD PTR [ebp+0x28]
  41e51e:	xchg   edx,eax
  41e51f:	pop    ss
  41e520:	inc    esp
  41e521:	sub    dl,BYTE PTR [ebx-0x6c3c7759]
  41e527:	(bad)  
  41e529:	hlt    
  41e52a:	(bad)  
  41e52b:	daa    
  41e52c:	sub    eax,0xc948f0d4
  41e531:	jmp    0x38ab:0x7ca92075
  41e538:	jb     0x41e596
  41e53a:	stc    
  41e53b:	pushf  
  41e53c:	popa   
  41e53d:	outs   dx,DWORD PTR ds:[esi]
  41e53e:	mov    ds:0x4f247d3a,al
  41e543:	or     dl,BYTE PTR [esi+0x6b]
  41e546:	xor    DWORD PTR [ebx],edx
  41e548:	scas   al,BYTE PTR es:[edi]
  41e549:	int3   
  41e54a:	xor    eax,0x7f63ae2a
  41e54f:	nop
  41e550:	mov    ebx,0x21d03ac7
  41e555:	adc    ch,al
  41e557:	outs   dx,BYTE PTR ds:[esi]
  41e558:	(bad)  
  41e559:	test   esi,0x73199a5
  41e55f:	push   edi
  41e560:	pop    ecx
  41e561:	ins    BYTE PTR es:[edi],dx
  41e562:	(bad)  
  41e563:	pop    ecx
  41e564:	dec    ebx
  41e565:	push   esi
  41e566:	xor    al,0xc7
  41e568:	xchg   ebx,eax
  41e569:	sbb    eax,0x23535f72
  41e56e:	retf   
  41e56f:	or     al,0xec
  41e571:	and    edi,DWORD PTR [ecx]
  41e573:	fimul  WORD PTR [edi+0x4a]
  41e576:	sbb    BYTE PTR [ebx],0xd0
  41e579:	xor    al,0xc3
  41e57b:	cdq    
  41e57c:	in     eax,0xa3
  41e57e:	pop    ebx
  41e57f:	or     DWORD PTR [ebp+0x51],ecx
  41e582:	das    
  41e583:	jp     0x41e5d3
  41e585:	adc    al,BYTE PTR [ecx]
  41e587:	enter  0xd538,0xa9
  41e58b:	or     DWORD PTR [edx],0x3d
  41e58e:	cmp    eax,0xd6273cab
  41e593:	lock mov edi,0x7325c5f1
  41e599:	fcom   QWORD PTR [esi]
  41e59b:	popa   
  41e59c:	fcmovnbe st,st(2)
  41e59e:	rol    DWORD PTR [eax-0x44],1
  41e5a1:	mov    ebp,0x3db9b47a
  41e5a6:	enter  0xa8d9,0x46
  41e5aa:	mul    DWORD PTR [esi+esi*8-0x51]
  41e5ae:	lds    edi,FWORD PTR [ecx+ebp*4+0x77a62839]
  41e5b5:	aad    0x52
  41e5b7:	push   es
  41e5b8:	add    al,0x0
  41e5ba:	lahf   
  41e5bb:	rol    BYTE PTR [ecx+ebx*1-0x2981512a],cl
  41e5c2:	fsub   DWORD PTR ds:0x4b22211f
  41e5c8:	in     eax,dx
  41e5c9:	inc    ecx
  41e5ca:	inc    eax
  41e5cb:	test   eax,0xa54cd0a2
  41e5d0:	mov    cl,BYTE PTR [ecx]
  41e5d2:	jo     0x41e615
  41e5d4:	adc    eax,0x5b4aaf10
  41e5d9:	and    DWORD PTR [ebx+0x3725a616],ebp
  41e5df:	jno    0xdf6cfc94
  41e5e5:	nop
  41e5e6:	rcr    ah,0xe3
  41e5e9:	inc    ebp
  41e5ea:	push   0x65
  41e5ec:	int3   
  41e5ed:	mov    bh,0xb4
  41e5ef:	add    eax,0xd311299
  41e5f4:	dec    ebp
  41e5f5:	and    al,0x4e
  41e5f7:	loopne 0x41e642
  41e5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5fa:	adc    edi,ecx
  41e5fc:	dec    ebp
  41e5fd:	jbe    0x41e639
  41e5ff:	dec    esi
  41e600:	add    DWORD PTR [edi+0x17],0xffffff8e
  41e604:	inc    ebp
  41e605:	cli    
  41e606:	sbb    BYTE PTR [edx+0x76],dl
  41e609:	mov    ah,0xd0
  41e60b:	and    al,0xb4
  41e60d:	in     eax,0xf3
  41e60f:	xchg   esp,eax
  41e610:	pop    ss
  41e611:	mov    bh,0xe4
  41e613:	out    0x9,eax
  41e615:	inc    ecx
  41e616:	loop   0x41e602
  41e618:	lahf   
  41e619:	mov    esi,gs
  41e61b:	(bad)  
  41e61c:	pop    eax
  41e61d:	test   eax,0x8ea778fa
  41e622:	adc    BYTE PTR [eax-0xd],bh
  41e625:	mov    ebx,ebx
  41e627:	xor    BYTE PTR [eax],bl
  41e629:	or     DWORD PTR [edi+0x270d0c0b],ecx
  41e62f:	xchg   esi,eax
  41e630:	lahf   
  41e631:	or     BYTE PTR [ebp+0x61],bl
  41e634:	mov    edx,0x26159af0
  41e63a:	sbb    ah,bl
  41e63c:	pop    ebx
  41e63d:	mov    ecx,DWORD PTR [eax+0x93661d3]
  41e643:	mov    al,ds:0xd1593f9d
  41e648:	dec    esi
  41e649:	adc    BYTE PTR [ecx],cl
  41e64b:	mov    bl,BYTE PTR [ebx+ebx*2+0x257427f5]
  41e652:	mov    bl,0xb0
  41e654:	arpl   WORD PTR [edx+eiz*8+0x53],bx
  41e658:	in     eax,0x6c
  41e65a:	fnclex 
  41e65c:	test   eax,0x63e13079
  41e661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e662:	aad    0x62
  41e664:	mov    ah,0x3a
  41e666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e667:	dec    ecx
  41e668:	int    0xfc
  41e66a:	sti    
  41e66b:	mov    edx,0xc812c5c
  41e670:	add    al,BYTE PTR [esi+0x5e]
  41e673:	sahf   
  41e674:	ja     0x41e613
  41e676:	(bad)  
  41e677:	fucom  st(7)
  41e679:	pop    edx
  41e67a:	sub    BYTE PTR [ecx+0x3a1c3a06],bl
  41e680:	loopne 0x41e6f5
  41e682:	repz jmp 0x41e701
  41e685:	mov    edi,0x403300e3
  41e68a:	sbb    dl,BYTE PTR [eax]
  41e68c:	cmp    cl,BYTE PTR [ebx-0x23]
  41e68f:	fisttp DWORD PTR [edi-0x54]
  41e692:	sub    BYTE PTR [ecx+0x7a],0x50
  41e696:	jg     0x41e6a3
  41e698:	adc    DWORD PTR [ebx+0xdab82f5],ebx
  41e69e:	dec    esi
  41e69f:	cmp    dh,dh
  41e6a1:	xor    ah,ch
  41e6a3:	pop    eax
  41e6a4:	mov    fs,WORD PTR [edx]
  41e6a6:	out    0xe9,al
  41e6a8:	pop    ds
  41e6a9:	bound  edx,QWORD PTR [esi]
  41e6ab:	jmp    0x41e68b
  41e6ad:	cmp    edi,DWORD PTR [ecx]
  41e6af:	arpl   WORD PTR [ecx],dx
  41e6b1:	int3   
  41e6b2:	fld    DWORD PTR ds:0x8e1471fb
  41e6b8:	mov    al,0x5d
  41e6ba:	sub    bl,BYTE PTR [ebx+0x3c]
  41e6bd:	jno    0x41e6d9
  41e6bf:	xchg   edx,eax
  41e6c0:	scas   eax,DWORD PTR es:[edi]
  41e6c1:	push   esp
  41e6c2:	outs   dx,DWORD PTR ds:[esi]
  41e6c3:	jne    0x41e737
  41e6c5:	call   0x3354:0xa73d4c37
  41e6cc:	cdq    
  41e6cd:	xchg   dh,al
  41e6cf:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e6d1:	xor    eax,0x985de010
  41e6d6:	inc    esp
  41e6d7:	or     cl,0x5a
  41e6da:	xor    al,0xda
  41e6dc:	in     eax,dx
  41e6dd:	xchg   esi,eax
  41e6de:	fnsave [eax]
  41e6e0:	loopne 0x41e689
  41e6e2:	stos   BYTE PTR es:[edi],al
  41e6e3:	out    dx,al
  41e6e4:	stos   BYTE PTR es:[edi],al
  41e6e5:	int3   
  41e6e6:	mov    ebp,0x5dee991d
  41e6eb:	mov    WORD PTR [esi+0xfdac5c],ss
  41e6f1:	push   edx
  41e6f2:	rol    dl,0x93
  41e6f5:	stos   DWORD PTR es:[edi],eax
  41e6f6:	ss jb  0x41e742
  41e6f9:	sbb    al,0x6b
  41e6fb:	dec    esp
  41e6fc:	fdivr  QWORD PTR [ebx]
  41e6fe:	adc    BYTE PTR ds:0x25453003,dl
  41e704:	dec    edi
  41e705:	stos   BYTE PTR es:[edi],al
  41e706:	or     esp,DWORD PTR [ebp+0x62]
  41e709:	mov    eax,0xa6b90e5b
  41e70e:	jecxz  0x41e6b5
  41e710:	xchg   ebx,eax
  41e711:	ret    
  41e712:	lea    esi,[edx+0xa]
  41e715:	pop    esi
  41e716:	out    0x8,al
  41e718:	xor    eax,0x365295f8
  41e71d:	push   esp
  41e71e:	cmp    eax,0x1a0f5e7e
  41e723:	retf   
  41e724:	data16 sahf 
  41e726:	iret   
  41e727:	and    DWORD PTR [eax+0x69],0x6c
  41e72b:	cli    
  41e72c:	mov    ebx,0xc305e84f
  41e731:	rcr    BYTE PTR [ebp+0x190ad144],cl
  41e737:	xor    BYTE PTR [ebx-0xc],dh
  41e73a:	dec    edi
  41e73b:	push   ss
  41e73c:	sti    
  41e73d:	cwde   
  41e73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73f:	imul   ebx,DWORD PTR [ecx],0x13
  41e742:	stos   DWORD PTR es:[edi],eax
  41e743:	jmp    0x41e73a
  41e745:	xor    dl,BYTE PTR [ecx-0x236481c5]
  41e74b:	ins    DWORD PTR es:[edi],dx
  41e74c:	push   eax
  41e74d:	cmp    eax,0x9948d2bc
  41e752:	sub    bh,dl
  41e754:	fwait
  41e755:	cld    
  41e756:	add    edi,esi
  41e758:	out    dx,al
  41e759:	mov    al,ds:0xa7ef9d58
  41e75e:	mov    bh,0x97
  41e760:	fdivr  DWORD PTR [ebx+ebp*1]
  41e763:	nop
  41e764:	cdq    
  41e765:	enter  0x105,0xd5
  41e769:	rep outs dx,BYTE PTR ds:[esi]
  41e76b:	je     0x41e78e
  41e76d:	push   ebp
  41e76e:	ret    0xebd1
  41e771:	repnz gs push cs
  41e774:	sbb    ebx,DWORD PTR [edi+0x5]
  41e777:	and    dl,BYTE PTR [ebp-0x459b2abd]
  41e77d:	adc    al,0xa9
  41e77f:	inc    esp
  41e780:	mov    al,0xe0
  41e782:	scas   al,BYTE PTR es:[edi]
  41e783:	cmc    
  41e784:	test   edx,ecx
  41e786:	mov    bh,0x56
  41e788:	sub    esp,DWORD PTR [esp+eiz*8+0x33894395]
  41e78f:	cwde   
  41e790:	outs   dx,BYTE PTR ds:[esi]
  41e791:	jo     0x99fc20f9
  41e797:	adc    al,dl
  41e799:	sub    eax,0x1edbddfd
  41e79e:	nop
  41e79f:	int3   
  41e7a0:	lea    esi,[edx+0x2]
  41e7a3:	cmp    al,0x71
  41e7a5:	dec    esp
  41e7a6:	aaa    
  41e7a7:	mov    al,0x54
  41e7a9:	scas   eax,DWORD PTR es:[edi]
  41e7aa:	sbb    al,0x52
  41e7ac:	xchg   esi,eax
  41e7ad:	in     al,dx
  41e7ae:	call   FWORD PTR [ebp+ebp*4-0x7af31c1d]
  41e7b5:	sar    BYTE PTR [ecx-0xd],cl
  41e7b8:	inc    esp
  41e7b9:	int    0x32
  41e7bb:	mov    edx,esp
  41e7bd:	ins    DWORD PTR es:[edi],dx
  41e7be:	mov    ebx,0x2c067ea1
  41e7c3:	dec    eax
  41e7c4:	xchg   ebx,eax
  41e7c5:	sbb    eax,0x247fa464
  41e7ca:	stos   DWORD PTR es:[edi],eax
  41e7cb:	jge    0x41e7ff
  41e7cd:	inc    esp
  41e7ce:	or     esi,0xffffffa0
  41e7d1:	in     eax,dx
  41e7d2:	dec    eax
  41e7d3:	js     0x41e7cf
  41e7d5:	pop    esi
  41e7d6:	neg    DWORD PTR [ebx]
  41e7d8:	outs   dx,BYTE PTR ds:[esi]
  41e7d9:	cmp    dl,BYTE PTR [eax]
  41e7db:	inc    ebp
  41e7dc:	xchg   edi,eax
  41e7dd:	mov    edi,0x97614a80
  41e7e2:	jmp    0xd55e:0x9063ea65
  41e7e9:	int3   
  41e7ea:	or     al,0x1c
  41e7ec:	inc    edi
  41e7ed:	jns    0x41e825
  41e7ef:	inc    esp
  41e7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f1:	pusha  
  41e7f2:	mov    esi,0xd233c6b9
  41e7f7:	pop    es
  41e7f8:	ja     0x41e86a
  41e7fa:	call   0x8e784141
  41e7ff:	test   eax,0x936ddf53
  41e804:	pop    ss
  41e805:	inc    edi
  41e806:	outs   dx,DWORD PTR ds:[esi]
  41e807:	add    DWORD PTR [esi-0x52],ebx
  41e80a:	ja     0x41e873
  41e80c:	stos   BYTE PTR es:[edi],al
  41e80d:	and    eax,0x4efd3bbb
  41e812:	fidivr WORD PTR ds:0x970400e7
  41e818:	inc    ebp
  41e819:	push   ss
  41e81a:	xor    esp,DWORD PTR [edi+0x626c7e0]
  41e820:	pop    edx
  41e821:	lahf   
  41e822:	push   ss
  41e823:	test   eax,0x33cb300b
  41e828:	call   FWORD PTR [ebx]
  41e82a:	mov    ds:0xe89bf052,al
  41e82f:	retf   0x51b9
  41e832:	sbb    BYTE PTR [edx],ah
  41e834:	lahf   
  41e835:	xchg   edx,eax
  41e836:	test   eax,0xad12890b
  41e83b:	cmp    DWORD PTR [edi],ecx
  41e83d:	lds    ecx,FWORD PTR [edi+ecx*4]
  41e840:	mov    al,ds:0xf0db7fd2
  41e845:	mov    cl,0xdd
  41e847:	mov    ds:0xe1d55e60,eax
  41e84c:	adc    DWORD PTR [ebx],edi
  41e84e:	mov    eax,ds:0x19642582
  41e853:	mov    DWORD PTR [esi],ebp
  41e855:	xlat   BYTE PTR ds:[ebx]
  41e856:	xchg   ebp,eax
  41e857:	hlt    
  41e858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e859:	ficom  DWORD PTR [ebp+0x305e5078]
  41e85f:	mov    ah,0xfc
  41e861:	xchg   esi,eax
  41e862:	inc    edx
  41e863:	out    0xa8,eax
  41e865:	mov    DWORD PTR [edx+eax*2+0x61],eax
  41e869:	popa   
  41e86a:	mov    gs,WORD PTR [ebx+ebp*1]
  41e86d:	sbb    bl,dh
  41e86f:	clc    
  41e870:	add    ebx,ebx
  41e872:	inc    edi
  41e873:	xor    al,0xb5
  41e875:	in     eax,dx
  41e876:	dec    ebp
  41e877:	adc    al,0x97
  41e879:	loope  0x41e8f5
  41e87b:	and    al,0x9a
  41e87d:	sbb    ch,BYTE PTR [ebx+0x52]
  41e880:	push   ss
  41e881:	dec    edx
  41e882:	bound  ecx,QWORD PTR es:[esp+esi*1+0x29]
  41e887:	fidiv  DWORD PTR [edx+0x78]
  41e88a:	pop    edi
  41e88b:	push   ds
  41e88c:	ds push eax
  41e88e:	mov    ds:0xf6b55a9c,eax
  41e893:	sbb    ecx,DWORD PTR ds:0x9a3fa445
  41e899:	out    0x1d,eax
  41e89b:	and    ah,dh
  41e89d:	pop    edx
  41e89e:	out    dx,eax
  41e89f:	add    eax,0x2d7ffe79
  41e8a4:	sbb    al,0x40
  41e8a6:	dec    ebx
  41e8a7:	sub    al,0xe1
  41e8a9:	or     eax,0x62650819
  41e8ae:	dec    esi
  41e8af:	cmp    eax,0xd94326fc
  41e8b4:	pop    ds
  41e8b5:	nop
  41e8b6:	adc    al,0xee
  41e8b8:	sahf   
  41e8b9:	mov    eax,ds:0xb8a3f16e
  41e8be:	ror    BYTE PTR [esi+0x74],1
  41e8c1:	lock stc 
  41e8c3:	dec    DWORD PTR [edi-0x6e]
  41e8c6:	dec    ebp
  41e8c7:	mov    BYTE PTR [edx+0x33b78066],ah
  41e8cd:	jo     0x41e897
  41e8cf:	jmp    0xc887:0x64fa9bd6
  41e8d6:	stos   DWORD PTR es:[edi],eax
  41e8d7:	je     0x41e8fb
  41e8d9:	mov    bl,0xd3
  41e8db:	mov    eax,ds:0xa6e15782
  41e8e0:	push   es
  41e8e1:	addr16 push ds
  41e8e3:	outs   dx,DWORD PTR ds:[esi]
  41e8e4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e8e6:	imul   esi,DWORD PTR [esi],0xffffffbe
  41e8e9:	cmc    
  41e8ea:	add    dh,dh
  41e8ec:	pusha  
  41e8ed:	cmpxchg al,ah
  41e8f0:	dec    ebx
  41e8f1:	test   eax,0x2d6e1460
  41e8f6:	and    eax,0xce80e46f
  41e8fb:	aaa    
  41e8fc:	retf   
  41e8fd:	ds icebp 
  41e8ff:	in     eax,0x7c
  41e901:	test   eax,0x32f175dc
  41e906:	pop    es
  41e907:	cmp    eax,0x8232f66d
  41e90c:	aam    0x7c
  41e90e:	add    eax,0xba88d246
  41e913:	jmp    0x41e95a
  41e915:	call   0xfe45:0x424d0183
  41e91c:	lea    ecx,[esi]
  41e91e:	xor    al,0x3f
  41e920:	int    0xd6
  41e922:	add    dh,BYTE PTR [eax-0x67]
  41e925:	push   es
  41e926:	daa    
  41e927:	jle    0x41e8be
  41e929:	push   eax
  41e92a:	mov    edi,0xb5b00fce
  41e92f:	add    eax,0xcd0d2d95
  41e934:	jmp    0xcdc96924
  41e939:	repz pop ds
  41e93b:	cvtpi2ps xmm0,QWORD PTR [ecx+esi*4+0x40ee671b]
  41e943:	adc    ch,BYTE PTR [ebx]
  41e945:	cmp    ebp,DWORD PTR [ebx-0x22]
  41e948:	int3   
  41e949:	fcos   
  41e94b:	(bad)  
  41e94c:	in     eax,dx
  41e94d:	fwait
  41e94e:	and    BYTE PTR [ebx],dl
  41e950:	(bad)  
  41e951:	sar    ah,0xd8
  41e954:	dec    esi
  41e955:	xchg   DWORD PTR [edx-0x59],eax
  41e958:	mov    es,ebp
  41e95a:	add    ebx,DWORD PTR [eax]
  41e95c:	les    esi,FWORD PTR [edx-0x19d11ccc]
  41e962:	mov    DWORD PTR [esi],ebx
  41e964:	repnz mov al,0xb0
  41e967:	pop    edx
  41e968:	xchg   ecx,eax
  41e969:	call   0xdbfc:0xb8ba7bbe
  41e970:	cli    
  41e971:	cmp    eax,0x51bb041a
  41e976:	into   
  41e977:	pop    edx
  41e978:	(bad)  
  41e979:	and    ecx,DWORD PTR ds:0xabf0fb97
  41e97f:	fwait
  41e980:	adc    al,0x26
  41e982:	imul   ebp,edx,0xffffffb7
  41e985:	addr16 int 0x89
  41e988:	pop    ebx
  41e989:	int    0xc0
  41e98b:	and    ch,al
  41e98d:	dec    eax
  41e98e:	mov    fs,WORD PTR [bx+si]
  41e991:	mov    dh,0x7f
  41e993:	das    
  41e994:	enter  0x535b,0x71
  41e998:	push   0xffffff9e
  41e99a:	xor    al,0x8d
  41e99c:	ds in  al,0x56
  41e99f:	dec    ebx
  41e9a0:	adc    al,BYTE PTR [esi-0x6ec75e1d]
  41e9a6:	inc    ebx
  41e9a7:	xlat   BYTE PTR ds:[ebx]
  41e9a8:	dec    esi
  41e9a9:	mov    edx,0xb50bb86f
  41e9ae:	xchg   ebx,eax
  41e9af:	sbb    DWORD PTR [edi+ebx*1+0x1c],esi
  41e9b3:	stos   DWORD PTR es:[edi],eax
  41e9b4:	sbb    al,0xe0
  41e9b6:	pop    esi
  41e9b7:	and    BYTE PTR [ebp-0x6d1640f6],0x97
  41e9be:	pop    edx
  41e9bf:	inc    ebp
  41e9c0:	mov    edx,0xaf726314
  41e9c5:	nop
  41e9c6:	das    
  41e9c7:	pop    eax
  41e9c8:	cli    
  41e9c9:	inc    edi
  41e9ca:	adc    eax,DWORD PTR [ebx+0x39368d66]
  41e9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9d1:	push   edx
  41e9d2:	lods   al,BYTE PTR ds:[esi]
  41e9d3:	das    
  41e9d4:	inc    esi
  41e9d5:	and    al,0xc4
  41e9d7:	int    0x9e
  41e9d9:	in     eax,0x3c
  41e9db:	inc    eax
  41e9dc:	test   DWORD PTR [edi+0x1f],edx
  41e9df:	cli    
  41e9e0:	ins    BYTE PTR es:[edi],dx
  41e9e1:	les    edx,FWORD PTR [edx-0x15]
  41e9e4:	(bad)  
  41e9e5:	fadd   DWORD PTR [edx]
  41e9e7:	(bad)  
  41e9e8:	or     al,0xeb
  41e9ea:	sbb    al,BYTE PTR [ebp+eiz*4-0x43]
  41e9ee:	outs   dx,BYTE PTR ds:[esi]
  41e9ef:	mov    ecx,0xc0a46cde
  41e9f4:	xchg   ecx,eax
  41e9f5:	leave  
  41e9f6:	push   eax
  41e9f7:	inc    esp
  41e9f8:	clc    
  41e9f9:	and    eax,0x98548e3b
  41e9fe:	adc    bh,BYTE PTR cs:[ebx+0x71]
  41ea02:	xlat   BYTE PTR ds:[ebx]
  41ea03:	iret   
  41ea04:	ins    DWORD PTR es:[edi],dx
  41ea05:	mov    dl,al
  41ea07:	inc    edi
  41ea08:	pop    es
  41ea09:	fnsave [esi+eiz*8+0x117a6dcb]
  41ea10:	adc    DWORD PTR [edx+0x74],ecx
  41ea13:	xor    dh,dl
  41ea15:	inc    ebp
  41ea16:	mov    ds:0x5b6c9afa,al
  41ea1b:	mov    edi,0xe572cc1
  41ea20:	mov    ebx,0xf41aee36
  41ea25:	pop    edx
  41ea26:	outs   dx,DWORD PTR ds:[esi]
  41ea27:	xchg   edi,eax
  41ea28:	mov    al,ds:0x781b865f
  41ea2d:	loop   0x41eaaa
  41ea2f:	push   ebx
  41ea30:	(bad)  
  41ea31:	cli    
  41ea32:	cld    
  41ea33:	or     BYTE PTR ds:0x4410ae9c,dl
  41ea39:	dec    edx
  41ea3a:	cld    
  41ea3b:	(bad)  
  41ea3c:	cs jle 0x41ea59
  41ea3f:	repz jne 0x41e9db
  41ea42:	xchg   ecx,eax
  41ea43:	add    eax,0xa604ea33
  41ea48:	inc    edx
  41ea49:	push   ebx
  41ea4a:	sub    eax,0xf5ccebbf
  41ea4f:	xor    al,0xaa
  41ea51:	idiv   BYTE PTR [ebx]
  41ea53:	aaa    
  41ea54:	jp     0x41ea49
  41ea56:	int3   
  41ea57:	sbb    ebp,ecx
  41ea59:	hlt    
  41ea5a:	mov    esi,0xa88c28dc
  41ea5f:	xchg   ebp,eax
  41ea60:	(bad)  
  41ea61:	cmp    al,0xb9
  41ea63:	sbb    al,0x9f
  41ea65:	stc    
  41ea66:	cmp    al,0xde
  41ea68:	pop    esi
  41ea69:	idiv   BYTE PTR [ecx+0x2f265d19]
  41ea6f:	pop    ebp
  41ea70:	aas    
  41ea71:	out    0x1c,al
  41ea73:	cld    
  41ea74:	sti    
  41ea75:	dec    ecx
  41ea76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea77:	inc    ebp
  41ea78:	inc    esp
  41ea79:	mov    bl,0x68
  41ea7b:	outs   dx,DWORD PTR ds:[esi]
  41ea7c:	js     0x41ea55
  41ea7e:	(bad)  
  41ea7f:	and    DWORD PTR [edi+0x2f],edi
  41ea82:	(bad)  
  41ea83:	jmp    0x41ea68
  41ea85:	jle    0x41ea68
  41ea87:	(bad)  
  41ea88:	adc    esp,DWORD PTR [ecx-0x65]
  41ea8b:	mov    ecx,0xf2d8762a
  41ea90:	mov    edx,0xb9f27cbf
  41ea95:	scas   al,BYTE PTR es:[edi]
  41ea96:	ret    
  41ea97:	inc    esi
  41ea98:	int3   
  41ea99:	push   eax
  41ea9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea9b:	push   0xffffff96
  41ea9d:	ret    0xba2e
  41eaa0:	and    ebx,DWORD PTR [esi-0x73]
  41eaa3:	(bad)  
  41eaa4:	in     al,0x3e
  41eaa6:	push   esi
  41eaa7:	xor    ah,BYTE PTR [ebx-0x21]
  41eaaa:	aam    0xbc
  41eaac:	pop    ss
  41eaad:	jg     0x41ea37
  41eaaf:	out    0x4c,eax
  41eab1:	(bad)  
  41eab2:	inc    esp
  41eab3:	aaa    
  41eab4:	add    BYTE PTR [ebp+0x74545f45],0x5a
  41eabb:	ins    DWORD PTR es:[edi],dx
  41eabc:	or     eax,ebx
  41eabe:	stos   DWORD PTR es:[edi],eax
  41eabf:	fild   DWORD PTR [ebx]
  41eac1:	ss ret 0xed0a
  41eac5:	push   es
  41eac6:	mov    eax,ds:0xc78169a9
  41eacb:	dec    edi
  41eacc:	push   edx
  41eacd:	nop
  41eace:	into   
  41eacf:	inc    ebx
  41ead0:	out    0x42,eax
  41ead2:	jmp    0x41eae7
  41ead4:	push   eax
  41ead5:	mov    ah,BYTE PTR [ebp+0x3f91ac9b]
  41eadb:	xchg   edx,eax
  41eadc:	repnz pop ss
  41eade:	dec    ecx
  41eadf:	out    dx,al
  41eae0:	and    bl,BYTE PTR [edi+0x47cc63ea]
  41eae6:	ficomp DWORD PTR [ebp+0x6]
  41eae9:	jnp    0x41eafb
  41eaeb:	or     eax,0xa9588821
  41eaf0:	xchg   ebp,eax
  41eaf1:	xchg   ecx,eax
  41eaf2:	ins    BYTE PTR es:[edi],dx
  41eaf3:	jmp    DWORD PTR [edi+0x6c]
  41eaf6:	retf   0x8787
  41eaf9:	js     0x41eae3
  41eafb:	pop    es
  41eafc:	in     eax,dx
  41eafd:	ins    BYTE PTR es:[edi],dx
  41eafe:	pop    ds
  41eaff:	neg    DWORD PTR [ecx+edx*4]
  41eb02:	call   0x7d4c234f
  41eb07:	loop   0x41eae5
  41eb09:	push   ebx
  41eb0a:	cmp    al,0xc0
  41eb0c:	jno    0x41eb2f
  41eb0e:	das    
  41eb0f:	xor    BYTE PTR [esi],ch
  41eb11:	(bad)  
  41eb12:	(bad)  
  41eb13:	aas    
  41eb14:	(bad)
  41eb17:	lds    esi,FWORD PTR [ecx-0x5ed6d148]
  41eb1d:	xchg   ebx,eax
  41eb1e:	cmp    al,0xa7
  41eb20:	adc    ecx,DWORD PTR [edi+0x3f]
  41eb23:	or     DWORD PTR [ecx],ecx
  41eb25:	ja     0x41eb58
  41eb27:	iret   
  41eb28:	sar    BYTE PTR [edx+0x1892480d],cl
  41eb2e:	sub    al,0xa8
  41eb30:	clc    
  41eb31:	clc    
  41eb32:	sub    DWORD PTR [edx],edi
  41eb34:	aam    0x3f
  41eb36:	retf   
  41eb37:	repnz test esp,edi
  41eb3a:	inc    esp
  41eb3b:	jne    0x41eac4
  41eb3d:	push   edx
  41eb3e:	push   0xfa4663e3
  41eb43:	ds addr16 jae 0x41eaf0
  41eb47:	push   ecx
  41eb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb49:	adc    BYTE PTR [ecx+0x34],ch
  41eb4c:	mov    ch,0x3e
  41eb4e:	sbb    BYTE PTR [esi],0xc
  41eb51:	add    al,0x39
  41eb53:	enter  0x1b2,0xe3
  41eb57:	lock mov edx,0x26192131
  41eb5d:	dec    esp
  41eb5e:	push   cs
  41eb5f:	push   ebx
  41eb60:	je     0x41eb3c
  41eb62:	(bad)  
  41eb63:	pop    es
  41eb64:	je     0x41ebaa
  41eb66:	lods   eax,DWORD PTR ds:[esi]
  41eb67:	xor    dl,BYTE PTR [eax+0x71]
  41eb6a:	xor    eax,edi
  41eb6c:	sbb    dl,BYTE PTR [ecx+ecx*8-0x3f]
  41eb70:	aaa    
  41eb71:	sub    BYTE PTR [eax+ebx*8+0x1e],bl
  41eb75:	fsubr  st(1),st
  41eb77:	ja     0x41eafb
  41eb79:	add    BYTE PTR [edi],ah
  41eb7b:	cmp    eax,0x24b2a3f0
  41eb80:	jnp    0x41eb05
  41eb82:	lea    edx,[esi+0x62432cbe]
  41eb88:	inc    edi
  41eb89:	(bad)  
  41eb8b:	dec    eax
  41eb8c:	icebp  
  41eb8d:	fimul  WORD PTR [ebx-0x7d4fe527]
  41eb93:	pop    ebp
  41eb94:	cmp    DWORD PTR [ecx],esi
  41eb96:	or     DWORD PTR [ebx],esp
  41eb98:	fisub  WORD PTR [ecx]
  41eb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9b:	ret    
  41eb9c:	xchg   edi,eax
  41eb9d:	dec    esp
  41eb9e:	adc    ax,0x7833
  41eba2:	ficomp DWORD PTR [ebp-0x69]
  41eba5:	pushf  
  41eba6:	stc    
  41eba7:	pmulhw mm1,QWORD PTR [ebx+0xf]
  41ebab:	sub    eax,0x19507c66
  41ebb0:	sub    ebp,DWORD PTR [esi+0x31a78bc9]
  41ebb6:	icebp  
  41ebb7:	dec    esp
  41ebb8:	sub    al,0xa5
  41ebba:	jns    0x41ebaa
  41ebbc:	add    ecx,DWORD PTR [eax-0x7e]
  41ebbf:	(bad)  
  41ebc0:	pushf  
  41ebc1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebc3:	xor    eax,0x4ada92f
  41ebc8:	inc    ecx
  41ebc9:	clc    
  41ebca:	shl    BYTE PTR [edx+0x25],cl
  41ebcd:	adc    ebx,DWORD PTR [edx+0x0]
  41ebd0:	ds pushf 
  41ebd2:	mov    esi,0x3db63be2
  41ebd7:	outs   dx,DWORD PTR ds:[esi]
  41ebd8:	mov    esp,0x1960976b
  41ebdd:	cmp    eax,0xf4e3d4f9
  41ebe2:	imul   eax,DWORD PTR [esi-0x21],0x314dac3e
  41ebe9:	call   0xada4:0x55ac5ffe
  41ebf0:	in     al,dx
  41ebf1:	jecxz  0x41ec33
  41ebf3:	pop    ecx
  41ebf4:	mov    eax,0x5c2561a5
  41ebf9:	mov    DWORD PTR ds:0x38fb0c88,0xaf56e281
  41ec03:	jo     0x41ec07
  41ec05:	mov    dh,0xa4
  41ec07:	mov    esi,0x3e69f02c
  41ec0c:	adc    BYTE PTR [edx+0x50],cl
  41ec0f:	sub    al,0xb2
  41ec11:	out    0xde,al
  41ec13:	aam    0xec
  41ec15:	mov    ch,0xfc
  41ec17:	mov    ds:0x35621d4b,al
  41ec1c:	xchg   esp,eax
  41ec1d:	aaa    
  41ec1e:	sti    
  41ec1f:	pop    ebx
  41ec20:	sbb    al,0x66
  41ec22:	jbe    0x41ec86
  41ec24:	push   ss
  41ec25:	xor    DWORD PTR [edx+ebp*2],edi
  41ec28:	aam    0x65
  41ec2a:	add    eax,0xef2d792
  41ec2f:	mov    dl,0xbb
  41ec31:	adc    eax,0x2d8b2ec0
  41ec36:	cli    
  41ec37:	(bad)  
  41ec39:	inc    edi
  41ec3a:	jmp    0x34a4bb37
  41ec3f:	push   es
  41ec40:	pop    ss
  41ec41:	adc    DWORD PTR [eax-0x4620fb7e],esp
  41ec47:	cmp    eax,0x8ef9d6d3
  41ec4c:	aad    0x63
  41ec4e:	lods   eax,DWORD PTR ds:[esi]
  41ec4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec50:	(bad)  
  41ec51:	fisttp DWORD PTR [edx-0x36bf6b26]
  41ec57:	inc    ebp
  41ec58:	dec    esp
  41ec59:	jecxz  0x41ebfd
  41ec5b:	sub    DWORD PTR [edx+eax*1],esp
  41ec5e:	sub    al,0x8b
  41ec60:	dec    esi
  41ec61:	jo     0x41ec4c
  41ec63:	(bad)  
  41ec64:	je     0x41ec27
  41ec66:	(bad)  
  41ec67:	(bad)  
  41ec68:	pop    ecx
  41ec69:	(bad)  
  41ec6a:	adc    eax,esi
  41ec6c:	loope  0x41ecd8
  41ec6e:	popf   
  41ec6f:	pop    edx
  41ec70:	or     ebx,DWORD PTR [edx]
  41ec72:	cmc    
  41ec73:	adc    BYTE PTR fs:[ecx+edi*2],dl
  41ec77:	repz inc edi
  41ec79:	jmp    0x814:0x468d6972
  41ec80:	(bad)  
  41ec81:	and    eax,0x56ce302b
  41ec86:	add    al,0xbf
  41ec88:	mov    ah,BYTE PTR [eax+ecx*8]
  41ec8b:	inc    esp
  41ec8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec8d:	(bad)  
  41ec8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8f:	mov    esp,0x2a30716b
  41ec94:	and    ebx,DWORD PTR [edx]
  41ec96:	jb     0x41ec1f
  41ec98:	js     0x41ec20
  41ec9a:	sub    BYTE PTR [ebp-0x16],ch
  41ec9d:	je     0x41ecb7
  41ec9f:	inc    esi
  41eca0:	mov    esi,DWORD PTR [eax+edi*1+0x12]
  41eca4:	or     ah,BYTE PTR [edx+ebp*2+0x9db19e4]
  41ecab:	push   es
  41ecac:	jne    0x41ed29
  41ecae:	popa   
  41ecaf:	xor    BYTE PTR [ebp+0x5],0xa0
  41ecb3:	lods   al,BYTE PTR ds:[esi]
  41ecb4:	popa   
  41ecb5:	shl    eax,cl
  41ecb7:	sbb    dl,cl
  41ecb9:	sub    DWORD PTR [esi],esp
  41ecbb:	dec    ecx
  41ecbc:	je     0x41ec6c
  41ecbe:	inc    edx
  41ecbf:	shr    dh,1
  41ecc1:	stos   DWORD PTR es:[edi],eax
  41ecc2:	in     al,0xbe
  41ecc4:	lock nop
  41ecc6:	js     0x41ec71
  41ecc8:	adc    eax,0xd4235296
  41eccd:	clc    
  41ecce:	push   esp
  41eccf:	hlt    
  41ecd0:	xor    ecx,ecx
  41ecd2:	(bad)  
  41ecd3:	sub    ah,BYTE PTR [esi]
  41ecd5:	adc    eax,0xffa0476c
  41ecda:	xchg   esi,eax
  41ecdb:	xchg   ebx,eax
  41ecdc:	jle    0x41ec6a
  41ecde:	sub    ebp,DWORD PTR [esi]
  41ece0:	mov    cl,0x73
  41ece2:	das    
  41ece3:	jae    0x41ed07
  41ece5:	out    0x5,eax
  41ece7:	sbb    DWORD PTR [ebp+ebx*4+0x1b],0x31
  41ecec:	ds cmp dl,al
  41ecef:	push   ebp
  41ecf0:	mov    ss,WORD PTR [eax]
  41ecf2:	test   eax,0x55938569
  41ecf7:	mov    cl,ah
  41ecf9:	rcl    DWORD PTR [esi],0xc7
  41ecfc:	cmc    
  41ecfd:	xchg   esi,eax
  41ecfe:	jl     0x41ec85
  41ed00:	xor    esp,DWORD PTR [ebp-0xb]
  41ed03:	jmp    0x91a0:0xe8af37c
  41ed0a:	jle    0x41eca6
  41ed0c:	into   
  41ed0d:	lea    edi,[edx+0x6370982e]
  41ed13:	mov    bl,0x70
  41ed15:	add    DWORD PTR [edi-0x1127fbc],ebp
  41ed1b:	adc    dl,ah
  41ed1d:	mov    ch,0xcb
  41ed1f:	jne    0x41eca3
  41ed21:	ds sub al,0xe2
  41ed24:	imul   esi,DWORD PTR [esi],0xfc16f738
  41ed2a:	cmp    al,0x5e
  41ed2c:	clc    
  41ed2d:	xor    al,0xdd
  41ed2f:	jmp    0x648260e9
  41ed34:	(bad)  
  41ed35:	aam    0xb4
  41ed37:	daa    
  41ed38:	and    DWORD PTR [ebx],ecx
  41ed3a:	dec    eax
  41ed3b:	pop    ss
  41ed3c:	rcl    BYTE PTR [edi+0x575da027],0x69
  41ed43:	stos   DWORD PTR es:[edi],eax
  41ed44:	cs jecxz 0x41edc6
  41ed47:	xlat   BYTE PTR ds:[ebx]
  41ed48:	mov    dh,0xcb
  41ed4a:	xor    al,0x8a
  41ed4c:	imul   esp,DWORD PTR [edx-0x5bb63d33],0xffffff90
  41ed53:	cmp    esi,DWORD PTR [esp+ebp*4]
  41ed56:	or     al,0x17
  41ed58:	or     BYTE PTR [esi+ecx*8],0x5c
  41ed5c:	loopne 0x41edb5
  41ed5e:	sub    bh,BYTE PTR [edi-0x6892ade0]
  41ed64:	out    0x84,eax
  41ed66:	xchg   ebp,eax
  41ed67:	xchg   eax,esp
  41ed69:	adc    BYTE PTR [ecx+ebx*1],bl
  41ed6c:	shl    dl,cl
  41ed6e:	xchg   ebp,eax
  41ed6f:	add    al,0x4c
  41ed71:	and    al,0x6f
  41ed73:	jae    0x41ed9f
  41ed75:	xor    eax,0x31f2852a
  41ed7a:	cmp    eax,DWORD PTR [esi+esi*1]
  41ed7d:	fisub  WORD PTR [eax-0x16d88339]
  41ed83:	xchg   esi,eax
  41ed84:	dec    ebp
  41ed85:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41ed87:	mov    BYTE PTR [edx-0x8],cl
  41ed8a:	fistp  QWORD PTR [edi+0x2d5a0208]
  41ed90:	(bad)  
  41ed91:	mov    esp,0xb5acd32
  41ed96:	imul   eax,DWORD PTR [ecx+0x43],0xbc35ad72
  41ed9d:	xchg   DWORD PTR [eax-0x3cefc8d5],esi
  41eda3:	jnp    0x41ed4b
  41eda5:	inc    esi
  41eda6:	cmp    eax,DWORD PTR [ecx-0x4c]
  41eda9:	mov    WORD PTR [ebx],ds
  41edab:	sbb    BYTE PTR [ecx+0x5b],bl
  41edae:	lea    edx,ss:[edx]
  41edb1:	mov    al,0x85
  41edb3:	sub    DWORD PTR [ebx],ebx
  41edb5:	cmp    eax,0xf7832d1c
  41edba:	push   edx
  41edbb:	imul   esi,DWORD PTR [ebp+0x45],0xe6d76ea0
  41edc2:	cmp    al,0x80
  41edc4:	stos   BYTE PTR es:[edi],al
  41edc5:	xlat   BYTE PTR ds:[ebx]
  41edc6:	femms  
  41edc8:	jmp    0x41ee06
  41edca:	push   edx
  41edcb:	sbb    al,0x70
  41edcd:	inc    edi
  41edce:	rcr    DWORD PTR [ebp+0x3],0xa1
  41edd2:	std    
  41edd3:	sbb    eax,0xab697c0f
  41edd8:	out    0x11,eax
  41edda:	std    
  41eddb:	inc    ecx
  41eddc:	cwde   
  41eddd:	aad    0x4c
  41eddf:	jns    0x41ee20
  41ede1:	pop    es
  41ede2:	dec    ebx
  41ede3:	push   eax
  41ede4:	rol    BYTE PTR [edx+0x1f],1
  41ede7:	mov    al,ds:0x48e4e8e0
  41edec:	mov    ecx,0xc4047308
  41edf1:	cmc    
  41edf2:	scas   al,BYTE PTR es:[edi]
  41edf3:	sbb    eax,0xcafbb37
  41edf8:	(bad)  
  41edf9:	in     al,0xb9
  41edfb:	pop    edx
  41edfc:	(bad)  
  41edfd:	mov    eax,ds:0xae0ed543
  41ee02:	adc    eax,esi
  41ee04:	cmp    cl,BYTE PTR [edx+0x4fd1d248]
  41ee0a:	int    0xa5
  41ee0c:	daa    
  41ee0d:	ss mov edx,ds
  41ee10:	pop    esp
  41ee11:	sbb    bl,0xf7
  41ee14:	cmp    al,0x47
  41ee16:	cmp    ch,BYTE PTR [edi+0x7c]
  41ee19:	pushf  
  41ee1a:	and    eax,0x8bdb3af2
  41ee1f:	sub    BYTE PTR [ecx],al
  41ee21:	ret    
  41ee22:	cmp    eax,eax
  41ee24:	pop    eax
  41ee25:	popf   
  41ee26:	je     0x41ee74
  41ee28:	and    DWORD PTR [eax],edi
  41ee2a:	push   0xffffffe4
  41ee2c:	lea    ebx,[esi-0x14]
  41ee2f:	loop   0x41ee58
  41ee31:	mov    WORD PTR [ebx+0x436f0f33],es
  41ee37:	aaa    
  41ee38:	fst    DWORD PTR [ebx]
  41ee3a:	daa    
  41ee3b:	inc    edx
  41ee3c:	cdq    
  41ee3d:	lahf   
  41ee3e:	or     eax,DWORD PTR [edi-0x6c]
  41ee41:	jmp    0x5384:0x70e775e
  41ee48:	ffreep st(2)
  41ee4a:	outs   dx,BYTE PTR ds:[esi]
  41ee4b:	cmc    
  41ee4c:	fsubp  st(0),st
  41ee4e:	add    dl,ch
  41ee50:	(bad)  
  41ee51:	loop   0x41ee05
  41ee53:	sti    
  41ee54:	adc    ebx,ebx
  41ee56:	xchg   ebx,eax
  41ee57:	and    DWORD PTR [esi],0xffffffab
  41ee5a:	clc    
  41ee5b:	jae    0x41ee03
  41ee5d:	push   esp
  41ee5e:	adc    al,0xe2
  41ee60:	pop    esp
  41ee61:	mov    al,0x63
  41ee63:	shl    BYTE PTR [ecx+0x72ade9b],0x3f
  41ee6a:	test   al,0xfd
  41ee6c:	xchg   edi,eax
  41ee6d:	jnp    0x41ee56
  41ee6f:	mov    ds:0x3385884e,al
  41ee74:	pushf  
  41ee75:	enter  0x6f9c,0x2f
  41ee79:	ins    DWORD PTR es:[edi],dx
  41ee7a:	sbb    bl,ch
  41ee7c:	mov    fs,esp
  41ee7e:	test   esi,ecx
  41ee80:	hlt    
  41ee81:	daa    
  41ee82:	push   0xf68dc8c8
  41ee87:	int3   
  41ee88:	pushf  
  41ee89:	dec    ecx
  41ee8a:	jmp    0x41eeee
  41ee8c:	in     al,dx
  41ee8d:	sub    eax,0x2c6a603d
  41ee92:	or     BYTE PTR [esi+eiz*1+0x47aa7879],al
  41ee99:	rol    DWORD PTR [eax+edx*4],cl
  41ee9c:	das    
  41ee9d:	lods   eax,DWORD PTR ds:[esi]
  41ee9e:	or     ebx,DWORD PTR [esi]
  41eea0:	aas    
  41eea1:	mov    DWORD PTR [ecx+0x48],ecx
  41eea4:	lock sub DWORD PTR [ebp+0x2],esp
  41eea8:	ds dec eax
  41eeaa:	or     dl,al
  41eeac:	jns    0x41ef26
  41eeae:	aad    0xde
  41eeb0:	push   edi
  41eeb1:	out    dx,al
  41eeb2:	cmp    esp,DWORD PTR [edx]
  41eeb4:	xchg   BYTE PTR [edx+0x23],al
  41eeb7:	sub    ebx,DWORD PTR [esi-0x5dedc347]
  41eebd:	addr16 jns 0x41ee57
  41eec0:	ficomp DWORD PTR [edx]
  41eec2:	ret    
  41eec3:	mov    ds:0x23d01b03,eax
  41eec8:	inc    edx
  41eec9:	pop    ebp
  41eeca:	enter  0x5bac,0x34
  41eece:	mov    esp,0x95b4d433
  41eed3:	jns    0x41ee80
  41eed5:	jg     0x41eeaf
  41eed7:	xchg   esp,eax
  41eed8:	imul   ebp,DWORD PTR [edx-0x6aabd7c0],0xffffff96
  41eedf:	jbe    0x41eeb6
  41eee1:	test   eax,0x1332f850
  41eee6:	into   
  41eee7:	retf   0xbaf9
  41eeea:	aam    0x60
  41eeec:	fcmovu st,st(1)
  41eeee:	in     al,dx
  41eeef:	ins    DWORD PTR es:[edi],dx
  41eef0:	and    eax,0xabef5fa2
  41eef5:	adc    al,0xf4
  41eef7:	fdiv   QWORD PTR [ecx-0x33c8065f]
  41eefd:	or     BYTE PTR [esi+ebp*4-0x58e9b255],0x5b
  41ef05:	dec    edi
  41ef06:	dec    edi
  41ef07:	dec    ecx
  41ef08:	call   0x567911b1
  41ef0d:	pop    edi
  41ef0e:	cmp    dl,BYTE PTR ds:0x91ee3ef4
  41ef14:	xchg   edx,ecx
  41ef16:	add    edi,0x72
  41ef19:	add    ebx,0x2a4cc89e
  41ef1f:	fld    DWORD PTR [esi+0x75710a0e]
  41ef25:	(bad)  
  41ef26:	jmp    0x52dc:0x60cd51f
  41ef2d:	mov    ah,0xab
  41ef2f:	in     eax,0x4f
  41ef31:	lock hlt 
  41ef33:	data16 adc BYTE PTR [eax],dh
  41ef36:	add    ebx,ebp
  41ef38:	sbb    al,0x82
  41ef3a:	mov    al,ds:0x746d463f
  41ef3f:	pop    es
  41ef40:	xor    BYTE PTR [ecx-0x3b],bl
  41ef43:	fwait
  41ef44:	xor    dh,BYTE PTR [esi-0x1384c846]
  41ef4a:	repnz imul ecx,DWORD PTR [esi-0x68],0xe7ac554c
  41ef52:	mov    ds:0xeacb332a,al
  41ef57:	xchg   ebp,eax
  41ef58:	or     al,al
  41ef5a:	xor    eax,0x74b5824c
  41ef5f:	dec    ecx
  41ef60:	shl    DWORD PTR [edi-0x2b],0x55
  41ef64:	inc    eax
  41ef65:	adc    bh,0x7
  41ef68:	outs   dx,DWORD PTR ds:[esi]
  41ef69:	cmp    BYTE PTR [ebx+0x725ccb3c],dl
  41ef6f:	jecxz  0x41eefd
  41ef71:	das    
  41ef72:	lahf   
  41ef73:	test   BYTE PTR [ebp*1-0x32af73ed],dl
  41ef7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef7b:	out    0xf5,al
  41ef7d:	pop    eax
  41ef7e:	stos   DWORD PTR es:[edi],eax
  41ef7f:	pop    esi
  41ef80:	adc    al,0x5
  41ef82:	loop   0x41ef5b
  41ef84:	mov    bh,0x2b
  41ef86:	cmp    dh,BYTE PTR [esi-0x57ea329c]
  41ef8c:	jg     0x41efa9
  41ef8e:	jp     0x41ef43
  41ef90:	inc    ebx
  41ef91:	cdq    
  41ef92:	retf   0xdc30
  41ef95:	mov    cl,0x4e
  41ef97:	jne    0x41ef74
  41ef99:	mov    dl,0x7c
  41ef9b:	mov    WORD PTR [ecx+0x6115bc09],?
  41efa1:	les    ecx,FWORD PTR [ebx]
  41efa3:	in     al,dx
  41efa4:	cmp    ah,al
  41efa6:	mov    bh,0x70
  41efa8:	test   al,0x74
  41efaa:	pop    esi
  41efab:	(bad)  
  41efac:	dec    esi
  41efad:	out    dx,eax
  41efae:	dec    esi
  41efaf:	sbb    cl,BYTE PTR [edx-0x66e2e969]
  41efb5:	push   edx
  41efb6:	pushf  
  41efb7:	sbb    edx,edx
  41efb9:	mov    eax,ds:0x89847ff1
  41efbe:	mov    gs,esi
  41efc0:	inc    esp
  41efc1:	js     0x41ef9a
  41efc3:	hlt    
  41efc4:	les    ecx,FWORD PTR [eax]
  41efc6:	sbb    edx,DWORD PTR [ecx+0x7c439be8]
  41efcc:	addr16 jnp 0x41efa3
  41efcf:	mov    cl,0x43
  41efd1:	popa   
  41efd2:	cwde   
  41efd3:	jmp    esp
  41efd5:	jecxz  0x41ef8f
  41efd7:	xor    DWORD PTR [ebx-0xa],edx
  41efda:	outs   dx,DWORD PTR ds:[esi]
  41efdb:	adc    eax,0x18fa2ff6
  41efe0:	xor    cl,BYTE PTR [ebx]
  41efe2:	xor    eax,DWORD PTR [esi]
  41efe4:	ja     0x41efd7
  41efe6:	bound  edx,QWORD PTR [edx]
  41efe8:	sbb    ch,BYTE PTR [esi+0x2ac37019]
  41efee:	push   esi
  41efef:	cmp    al,0xfa
  41eff1:	sar    DWORD PTR [ebx],1
  41eff3:	xor    bh,cl
  41eff5:	daa    
  41eff6:	jg     0x41efa7
  41eff8:	pop    ebx
  41eff9:	add    BYTE PTR [edi],dh
  41effb:	mov    esi,0xc8334cfc
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x3c136403
  41f0bf:	cmp    al,0xd9
  41f0c1:	push   ecx
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx-0x6e]
  41f0ca:	rcl    dh,1
  41f0cc:	mov    ah,0xc
  41f0ce:	sub    BYTE PTR [ebx],ch
  41f0d0:	ins    DWORD PTR es:[edi],dx
  41f0d1:	mov    edx,0x416c709d
  41f0d6:	jb     0x41f073
  41f0d8:	mov    ebp,0x17087419
  41f0dd:	outs   dx,BYTE PTR ds:[esi]
  41f0de:	cmp    al,0xce
  41f0e0:	add    eax,ebp
  41f0e2:	je     0x41f0cf
  41f0e4:	cld    
  41f0e5:	mov    ah,0xe3
  41f0e7:	jl     0x41f108
  41f0e9:	or     eax,edi
  41f0eb:	inc    ebp
  41f0ec:	inc    eax
  41f0ed:	mov    gs,WORD PTR [edx-0x17b7edc3]
  41f0f3:	adc    ah,ah
  41f0f5:	sahf   
  41f0f6:	ja     0x41f0e0
  41f0f8:	call   0xb2c5:0x76438e27
  41f0ff:	lahf   
  41f100:	xchg   ebp,eax
  41f101:	lds    edi,FWORD PTR [ecx]
  41f103:	xor    DWORD PTR ds:0x5c116fc3,ecx
  41f109:	sbb    DWORD PTR [ecx],edx
  41f10b:	jl     0x41f0c6
  41f10d:	jmp    0xb2d8:0x83ec5c7
  41f114:	sub    al,0xdd
  41f116:	inc    ebx
  41f117:	or     dh,ch
  41f119:	stos   BYTE PTR es:[edi],al
  41f11a:	dec    eax
  41f11b:	mov    al,0x3
  41f11d:	mov    eax,DWORD PTR [eax-0x6d6a541b]
  41f123:	test   BYTE PTR [edx],cl
  41f125:	test   ah,bl
  41f127:	jb     0x41f0e6
  41f129:	mov    ecx,0x920c8b73
  41f12e:	gs lock bound esi,QWORD PTR fs:[edi]
  41f133:	mov    bl,0x25
  41f135:	and    esp,DWORD PTR [edi]
  41f137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f138:	(bad)  
  41f139:	dec    esp
  41f13a:	or     edx,ecx
  41f13c:	inc    esi
  41f13d:	les    ecx,FWORD PTR [edi-0x284fb820]
  41f143:	add    ecx,edx
  41f145:	mov    ds:0xaafc82fa,al
  41f14a:	mov    BYTE PTR [esi],bh
  41f14c:	xchg   BYTE PTR [edx],al
  41f14e:	mov    WORD PTR [ebx-0x3773f5ce],ds
  41f154:	jae    0x41f151
  41f156:	sbb    DWORD PTR [eax],esp
  41f158:	outs   dx,DWORD PTR ds:[esi]
  41f159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f15a:	adc    BYTE PTR [esi],bl
  41f15c:	test   DWORD PTR [edi],0x57db7fb6
  41f162:	scas   al,BYTE PTR es:[edi]
  41f163:	adc    DWORD PTR [edi+0x23753cd5],edx
  41f169:	test   BYTE PTR [ebp+ecx*2-0x31493065],0x93
  41f171:	fisttp WORD PTR [esi-0x634ad9a4]
  41f177:	addr16 gs aas 
  41f17a:	aas    
  41f17b:	inc    DWORD PTR [ecx+edi*1]
  41f17e:	pop    ds
  41f17f:	pop    esp
  41f180:	cmp    BYTE PTR ds:0x2e22de53,cl
  41f186:	jg     0x41f201
  41f188:	push   es
  41f189:	fild   WORD PTR [eax+0x5e]
  41f18c:	test   al,0x83
  41f18e:	adc    al,0xa4
  41f190:	mov    eax,0xec8c547a
  41f195:	xlat   BYTE PTR ds:[ebx]
  41f196:	inc    eax
  41f197:	adc    cl,dh
  41f199:	xchg   esi,eax
  41f19a:	rep ins BYTE PTR es:[edi],dx
  41f19c:	sub    BYTE PTR [ebx-0x46c4ee5c],ch
  41f1a2:	retf   
  41f1a3:	cli    
  41f1a4:	xor    BYTE PTR [ecx-0x60fa1153],ah
  41f1aa:	dec    eax
  41f1ab:	cmp    ecx,DWORD PTR [ebp+0x1b]
  41f1ae:	loope  0x41f137
  41f1b0:	xchg   ebp,eax
  41f1b1:	jle    0x41f1dc
  41f1b3:	push   ebp
  41f1b4:	enter  0xc436,0xcb
  41f1b8:	ret    
  41f1b9:	adc    eax,0x8bcad84b
  41f1be:	jmp    DWORD PTR [ecx-0x435c6a42]
  41f1c4:	adc    eax,0xba46e315
  41f1c9:	xchg   ebp,eax
  41f1ca:	push   es
  41f1cb:	jge    0x41f1a5
  41f1cd:	loope  0x41f248
  41f1cf:	mov    cl,0x68
  41f1d1:	xchg   esp,eax
  41f1d2:	sbb    DWORD PTR [eax-0x5f],esi
  41f1d5:	push   edx
  41f1d6:	and    DWORD PTR [ecx+0x4aa998d7],0xfffffff9
  41f1dd:	cmp    bl,bl
  41f1df:	aas    
  41f1e0:	stos   BYTE PTR es:[edi],al
  41f1e1:	fistp  DWORD PTR [edi+0x3b]
  41f1e4:	mov    cl,0xc1
  41f1e6:	cmp    al,0x2
  41f1e8:	jno    0x41f1d3
  41f1ea:	stos   DWORD PTR es:[edi],eax
  41f1eb:	add    dh,ah
  41f1ed:	fldcw  WORD PTR [eax-0x22]
  41f1f0:	clc    
  41f1f1:	out    dx,al
  41f1f2:	hlt    
  41f1f3:	inc    ebp
  41f1f4:	ins    DWORD PTR es:[edi],dx
  41f1f5:	pop    ebx
  41f1f6:	push   ds
  41f1f7:	inc    ebp
  41f1f8:	or     bl,0xee
  41f1fb:	add    al,0xa
  41f1fd:	cmp    eax,DWORD PTR [edi+0x2f]
  41f200:	mov    ch,0xce
  41f202:	pop    esi
  41f203:	test   BYTE PTR [edi-0x58182656],0xa7
  41f20a:	pop    edx
  41f20b:	inc    esp
  41f20c:	stos   BYTE PTR es:[edi],al
  41f20d:	pusha  
  41f20e:	call   0xa81a1616
  41f213:	jnp    0x41f1b9
  41f215:	mov    al,ds:0x4fcc401f
  41f21a:	jmp    0xbff8:0xa91bf6fe
  41f221:	sub    bh,ah
  41f223:	lods   eax,DWORD PTR ds:[esi]
  41f224:	xchg   edi,eax
  41f225:	adc    bl,BYTE PTR [edi+ecx*8]
  41f228:	enter  0xb889,0x31
  41f22c:	jb     0x41f229
  41f22e:	xlat   BYTE PTR ds:[ebx]
  41f22f:	cmp    DWORD PTR [edi],0xffffff9d
  41f232:	repnz lea edx,[ebp-0x641d310]
  41f239:	inc    ecx
  41f23a:	(bad)
  41f23e:	jg     0x41f278
  41f240:	pop    ds
  41f241:	xor    dl,bh
  41f243:	mov    ch,0x51
  41f245:	add    eax,0x5172a7d3
  41f24a:	stos   DWORD PTR es:[edi],eax
  41f24b:	adc    edx,esp
  41f24d:	addr16 icebp 
  41f24f:	ds adc edi,ebx
  41f252:	aad    0xe4
  41f254:	mov    ecx,0x69f27883
  41f259:	xchg   ecx,eax
  41f25a:	fidiv  WORD PTR [edi-0x18]
  41f25d:	imul   BYTE PTR [esi+0x3]
  41f260:	aas    
  41f261:	test   al,0xd0
  41f263:	inc    eax
  41f264:	jmp    0x41f24d
  41f266:	les    eax,FWORD PTR [ebx-0x1a]
  41f269:	add    ecx,eax
  41f26b:	xchg   ebp,eax
  41f26c:	loop   0x41f2e1
  41f26e:	fsubr  QWORD PTR [edx+ebx*2+0x1e]
  41f272:	inc    ecx
  41f273:	mov    dl,0xde
  41f275:	cmp    ebp,DWORD PTR [ecx+ebx*2]
  41f278:	outs   dx,BYTE PTR ds:[esi]
  41f279:	jge    0x41f2d5
  41f27b:	mov    dl,0x16
  41f27d:	pop    eax
  41f27e:	jg     0x41f264
  41f280:	jmp    0xa435:0x3e2a4b4a
  41f287:	mov    ah,0x6a
  41f289:	jb     0x41f2b9
  41f28b:	fwait
  41f28c:	xor    ebx,DWORD PTR [edi+0x3f31d351]
  41f292:	or     eax,0x5cae99e2
  41f297:	repnz ins DWORD PTR es:[edi],dx
  41f299:	test   eax,0xefb3ffef
  41f29e:	outs   dx,BYTE PTR ds:[esi]
  41f29f:	(bad)  
  41f2a0:	lods   al,BYTE PTR ds:[esi]
  41f2a1:	out    dx,eax
  41f2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a3:	xor    eax,0x138f374c
  41f2a8:	add    ecx,0x4c
  41f2ab:	jmp    0x41f2bf
  41f2ad:	setno  BYTE PTR [edi]
  41f2b0:	add    al,BYTE PTR [edi]
  41f2b2:	loop   0x41f2c8
  41f2b4:	adc    ebp,ecx
  41f2b6:	cmp    bh,bl
  41f2b8:	lock mov eax,0xdc9204bb
  41f2be:	cmc    
  41f2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c0:	mov    eax,ds:0x1cd338ed
  41f2c5:	mov    dl,0x40
  41f2c7:	ror    DWORD PTR ds:0xdbc504b8,1
  41f2cd:	fst    DWORD PTR [eax]
  41f2cf:	dec    esi
  41f2d0:	gs xchg edi,eax
  41f2d2:	sbb    eax,0x8ccb0081
  41f2d7:	dec    ecx
  41f2d8:	sbb    DWORD PTR [eax],esp
  41f2da:	xchg   edx,eax
  41f2db:	aam    0x4a
  41f2dd:	xchg   DWORD PTR [eax-0x7c],esi
  41f2e0:	sbb    eax,ebx
  41f2e2:	and    BYTE PTR ds:[ebx+0x36],ch
  41f2e6:	call   0x9c79:0x4160c9f9
  41f2ed:	jl     0x41f344
  41f2ef:	jb     0x41f2bc
  41f2f1:	jp     0x41f335
  41f2f3:	cmp    DWORD PTR [edx+0x71],eax
  41f2f6:	retf   
  41f2f7:	dec    esp
  41f2f8:	mov    ch,0xf3
  41f2fa:	fbstp  TBYTE PTR [ecx+0x70a1a3ff]
  41f300:	cmc    
  41f301:	pop    ebp
  41f302:	xlat   BYTE PTR ds:[ebx]
  41f303:	or     al,0x5c
  41f305:	sbb    ebx,0x2f454df6
  41f30b:	fild   DWORD PTR [ebp+0x47]
  41f30e:	add    edi,DWORD PTR [edx-0x71]
  41f311:	int3   
  41f312:	repz fs pop es
  41f315:	sahf   
  41f316:	(bad)  
  41f318:	loop   0x41f29f
  41f31a:	(bad)  
  41f31b:	int    0x61
  41f31d:	mov    ebp,0x2399728b
  41f322:	in     al,dx
  41f323:	inc    eax
  41f324:	xchg   ebp,eax
  41f325:	jmp    0x41f360
  41f327:	fiadd  WORD PTR [eax-0x3a01714f]
  41f32d:	jne    0x41f323
  41f32f:	adc    al,0x2f
  41f331:	cmp    DWORD PTR [edi-0x63],esi
  41f334:	push   es
  41f335:	mov    dl,0xdb
  41f337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f338:	push   ebx
  41f339:	add    al,0x6e
  41f33b:	sub    ebx,eax
  41f33d:	cld    
  41f33e:	aam    0x65
  41f340:	arpl   cx,cx
  41f342:	test   DWORD PTR [eax],eax
  41f344:	jnp    0x41f36f
  41f346:	into   
  41f347:	stos   BYTE PTR es:[edi],al
  41f348:	sar    BYTE PTR [eax],1
  41f34a:	xor    al,0x78
  41f34c:	jmp    0xdb4e283d
  41f351:	jo     0x41f303
  41f353:	(bad)  
  41f354:	and    eax,0x6eaa75ad
  41f359:	xor    ah,bh
  41f35b:	fucomp st(1)
  41f35d:	or     al,0xf
  41f35f:	sub    BYTE PTR [ebx-0x3c],ah
  41f362:	clc    
  41f363:	xor    DWORD PTR [ecx-0x3a],ebp
  41f366:	in     al,dx
  41f367:	pop    ss
  41f368:	clc    
  41f369:	fsub   QWORD PTR [edx+0x4542a261]
  41f36f:	mov    al,ds:0x597561fd
  41f374:	ret    0x77ca
  41f377:	daa    
  41f378:	ins    DWORD PTR es:[edi],dx
  41f379:	sbb    DWORD PTR [edx-0x26e7c5b2],ebx
  41f37f:	lock and bh,bl
  41f382:	jge    0x41f341
  41f384:	mov    edx,0x36fae43f
  41f389:	and    BYTE PTR [ebx],cl
  41f38b:	mov    bh,0x6a
  41f38d:	fisttp WORD PTR [edi+0x61464d41]
  41f393:	lock mov dh,0x2e
  41f396:	adc    BYTE PTR [ecx+ebp*2],bl
  41f399:	sbb    eax,0x228b0f60
  41f39e:	out    dx,eax
  41f39f:	sub    DWORD PTR [esi+0x7e],edx
  41f3a2:	mov    ch,0xf5
  41f3a4:	adc    DWORD PTR [eax-0x5f],esp
  41f3a7:	cmp    al,BYTE PTR [edi+0x1e]
  41f3aa:	adc    esp,0x4f
  41f3ad:	int3   
  41f3ae:	(bad)  
  41f3b0:	pop    esi
  41f3b1:	aas    
  41f3b2:	nop
  41f3b3:	fwait
  41f3b4:	into   
  41f3b5:	lock or DWORD PTR [eax-0x69],esp
  41f3b9:	out    dx,al
  41f3ba:	sahf   
  41f3bb:	(bad)  
  41f3bc:	mov    ds:0xa08312d6,eax
  41f3c1:	rol    BYTE PTR [edx-0x6e],cl
  41f3c4:	mov    al,ds:0x5756bb71
  41f3c9:	xchg   edx,eax
  41f3ca:	retf   
  41f3cb:	clc    
  41f3cc:	cmp    dl,BYTE PTR [edx]
  41f3ce:	call   0xf9d0a792
  41f3d3:	mov    bl,0xc6
  41f3d5:	icebp  
  41f3d6:	fs dec eax
  41f3d8:	into   
  41f3d9:	inc    esi
  41f3da:	and    al,0xca
  41f3dc:	daa    
  41f3dd:	(bad)  
  41f3de:	imul   ecx,DWORD PTR [edi+0x4],0xb
  41f3e2:	loop   0x41f3eb
  41f3e4:	data16 mov BYTE PTR [edi+0x280b6ea8],cl
  41f3eb:	and    eax,0x753be446
  41f3f0:	xchg   BYTE PTR [eax+0x614d72bc],bh
  41f3f6:	jns    0x41f416
  41f3f8:	iret   
  41f3f9:	jne    0x41f38d
  41f3fb:	hlt    
  41f3fc:	jg     0x41f472
  41f3fe:	std    
  41f3ff:	scas   eax,DWORD PTR es:[edi]
  41f400:	lods   al,BYTE PTR ds:[esi]
  41f401:	ss add al,0x75
  41f404:	(bad)  
  41f405:	fiadd  DWORD PTR [edx-0x68a6fb69]
  41f40b:	mov    fs,esp
  41f40d:	pop    ebp
  41f40e:	xor    eax,0x1bc15807
  41f413:	xchg   ebx,eax
  41f414:	or     bh,cl
  41f416:	ret    0x359d
  41f419:	jno    0x41f400
  41f41b:	add    dh,BYTE PTR [edx+0x1d]
  41f41e:	inc    edi
  41f41f:	loope  0x41f419
  41f421:	inc    ecx
  41f422:	rol    DWORD PTR [ebx+0x5c],1
  41f425:	add    edx,DWORD PTR [esi]
  41f427:	jle    0x41f470
  41f429:	mov    DWORD PTR [ecx],edi
  41f42b:	pop    ecx
  41f42c:	inc    edi
  41f42d:	ret    
  41f42e:	(bad)  [edx+0x7f]
  41f431:	sar    BYTE PTR [edx+0x408d4d51],1
  41f437:	(bad)  
  41f438:	gs mov bh,0x23
  41f43b:	add    BYTE PTR [esi-0x347998c2],ah
  41f441:	leave  
  41f442:	mov    al,ds:0xb28610cb
  41f447:	stc    
  41f448:	sbb    bh,dl
  41f44a:	pop    ds
  41f44b:	xchg   edi,eax
  41f44c:	nop
  41f44d:	adc    eax,0xd271e14d
  41f452:	push   ebp
  41f453:	mov    esi,0xee450e20
  41f458:	push   es
  41f459:	cmp    dl,0xc7
  41f45c:	mov    edx,0x52675fa1
  41f461:	je     0x41f49d
  41f463:	outs   dx,DWORD PTR ds:[esi]
  41f464:	out    dx,eax
  41f465:	mov    eax,ecx
  41f467:	mov    eax,0xf3fd1d8d
  41f46c:	pop    esi
  41f46d:	stos   DWORD PTR es:[edi],eax
  41f46e:	mov    bh,BYTE PTR [eax-0x76]
  41f471:	cmp    ch,BYTE PTR [edx-0x33a1d02b]
  41f477:	repnz fldcw WORD PTR [edx+0x66]
  41f47b:	inc    edi
  41f47c:	(bad)  
  41f47d:	(bad)  
  41f47e:	clc    
  41f47f:	stos   BYTE PTR es:[edi],al
  41f480:	mov    esp,0x1a57ad2a
  41f485:	cmp    eax,DWORD PTR [esi+0x7d]
  41f488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f489:	fsubr  st,st(1)
  41f48b:	mov    bh,BYTE PTR [ebx-0x15d62469]
  41f491:	lods   eax,DWORD PTR ds:[esi]
  41f492:	es inc esi
  41f494:	cwde   
  41f495:	sub    BYTE PTR [edx-0x3e913bc4],cl
  41f49b:	(bad)  
  41f49c:	adc    DWORD PTR [edx-0x5399ef06],esp
  41f4a2:	sub    BYTE PTR [edx+ecx*4],al
  41f4a5:	movaps xmm1,XMMWORD PTR [edx]
  41f4a8:	pop    es
  41f4a9:	mov    edx,0x1e14e90
  41f4ae:	xor    esp,DWORD PTR [esi-0x47a82b7a]
  41f4b4:	out    dx,al
  41f4b5:	pop    ds
  41f4b6:	enter  0xe066,0x47
  41f4ba:	push   es
  41f4bb:	(bad)  
  41f4bd:	nop
  41f4be:	div    DWORD PTR [eax]
  41f4c0:	dec    ebp
  41f4c1:	pop    DWORD PTR [eax]
  41f4c3:	dec    eax
  41f4c4:	jbe    0x41f4af
  41f4c6:	cli    
  41f4c7:	add    BYTE PTR [ebx],ah
  41f4c9:	mov    edi,0x97f08850
  41f4ce:	popf   
  41f4cf:	fbstp  TBYTE PTR [edi]
  41f4d1:	cld    
  41f4d2:	into   
  41f4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d4:	and    BYTE PTR [edi],ah
  41f4d6:	dec    edx
  41f4d7:	cmp    eax,0xe403e8b6
  41f4dc:	lock in eax,0x9b
  41f4df:	mov    ds:0x77cc5fcb,al
  41f4e4:	cmp    dl,cl
  41f4e6:	pop    ecx
  41f4e7:	xchg   esi,eax
  41f4e8:	adc    DWORD PTR [esi],ebx
  41f4ea:	jmp    0x41f47f
  41f4ec:	pop    edi
  41f4ed:	sub    edx,edi
  41f4ef:	dec    eax
  41f4f0:	push   edx
  41f4f1:	jns    0x41f4e4
  41f4f3:	(bad)  
  41f4f4:	jl     0x41f498
  41f4f6:	(bad)  ds:[edx-0xb0fc950]
  41f4fd:	aad    0x9d
  41f4ff:	mov    al,ds:0x4ea8fcdf
  41f504:	data16 aaa 
  41f506:	xor    DWORD PTR [esp+ebp*2],eax
  41f509:	es in  eax,0x69
  41f50c:	add    dl,BYTE PTR [edx-0x3b]
  41f50f:	push   es
  41f510:	pop    ebx
  41f511:	xor    BYTE PTR [ecx+edi*2-0x5ae9e316],0xf2
  41f519:	pop    eax
  41f51a:	xchg   ecx,eax
  41f51b:	neg    esp
  41f51d:	sbb    BYTE PTR [esi+0xd],bh
  41f520:	add    BYTE PTR [edx-0x7588e33e],al
  41f526:	imul   eax,DWORD PTR ds:0x85cbc562,0x5dc13ea2
  41f530:	or     DWORD PTR [eax+eiz*4-0x30],0xffffffda
  41f535:	jae    0x41f58a
  41f537:	cdq    
  41f538:	pop    es
  41f539:	les    edx,FWORD PTR [ecx+eiz*4-0xe]
  41f53d:	in     al,dx
  41f53e:	push   ebx
  41f53f:	mov    dh,0x76
  41f541:	cmp    edi,DWORD PTR [edi-0x14]
  41f544:	or     dh,cl
  41f546:	inc    ecx
  41f547:	inc    edx
  41f548:	xchg   edx,eax
  41f549:	lea    ebx,[esi+0x1a80b3be]
  41f54f:	mov    ds:0x694bfd93,eax
  41f554:	shl    DWORD PTR [ebx-0x2c5c3484],1
  41f55a:	pop    edi
  41f55b:	add    DWORD PTR [edx],ebx
  41f55d:	ja     0x41f4ed
  41f55f:	ins    BYTE PTR es:[edi],dx
  41f560:	adc    al,0xd
  41f562:	jns    0x41f59c
  41f564:	and    dl,BYTE PTR [esi-0x3a]
  41f567:	sub    BYTE PTR [eax+0x70],ah
  41f56a:	cmp    ecx,DWORD PTR [ecx+0x2f3976ff]
  41f570:	mov    ecx,0x6a5993e7
  41f575:	push   ss
  41f576:	mov    edi,0x26938077
  41f57b:	int    0x6a
  41f57d:	mov    BYTE PTR [ebx-0x6f3625e1],al
  41f583:	add    al,0xf4
  41f585:	popf   
  41f586:	cmc    
  41f587:	sub    dh,ah
  41f589:	sbb    edi,ecx
  41f58b:	stc    
  41f58c:	mov    esp,0xce9c8ffd
  41f591:	inc    esi
  41f592:	stos   BYTE PTR es:[edi],al
  41f593:	dec    ecx
  41f594:	repz sahf 
  41f596:	jge    0x41f5ab
  41f598:	sbb    eax,edx
  41f59a:	test   al,0xcf
  41f59c:	f2xm1  
  41f59e:	xchg   ebx,eax
  41f59f:	(bad)  
  41f5a0:	das    
  41f5a1:	xchg   edi,eax
  41f5a2:	xor    eax,0x2f1dc698
  41f5a7:	jmp    0xb3f4472f
  41f5ac:	retf   0xfc39
  41f5af:	cmp    al,0xb3
  41f5b1:	inc    ecx
  41f5b2:	in     eax,dx
  41f5b3:	mov    eax,ds:0x38846732
  41f5b8:	xor    DWORD PTR [ecx+eiz*8],ecx
  41f5bb:	or     BYTE PTR ds:0x88eba8b8,dl
  41f5c1:	xlat   BYTE PTR ds:[ebx]
  41f5c2:	jg     0x41f5fc
  41f5c4:	rcl    BYTE PTR [eax-0x10431d2b],1
  41f5ca:	inc    eax
  41f5cb:	xchg   ch,bh
  41f5cd:	ret    
  41f5ce:	xlat   BYTE PTR ds:[ebx]
  41f5cf:	pop    edi
  41f5d0:	fwait
  41f5d1:	xchg   cl,ah
  41f5d3:	nop
  41f5d4:	ss test eax,0x266cc5d1
  41f5da:	mov    bl,0xb
  41f5dc:	fcmovnu st,st(0)
  41f5de:	imul   ecx,ebx,0xc75346aa
  41f5e4:	cmp    esi,DWORD PTR [esi]
  41f5e6:	sar    DWORD PTR [eax+0x6115b56e],cl
  41f5ec:	jmp    0x6af29dec
  41f5f1:	xor    eax,0x9e23da7f
  41f5f6:	ja     0x41f5e9
  41f5f8:	nop
  41f5f9:	outs   dx,BYTE PTR ds:[esi]
  41f5fa:	xchg   ecx,eax
  41f5fb:	jle    0x41f57e
  41f5fd:	ret    0xe0dc
  41f600:	pcmpeqw mm3,QWORD PTR [edx+0x62]
  41f604:	mov    edx,0xa859273f
  41f609:	xor    bh,bh
  41f60b:	add    DWORD PTR [edi-0x38f347b6],edi
  41f611:	and    al,0xf5
  41f613:	xor    al,0x36
  41f615:	and    eax,0x1e9353a8
  41f61a:	shl    BYTE PTR [esi],0xcd
  41f61d:	adc    esi,DWORD PTR [ecx-0x3b214493]
  41f623:	js     0x41f638
  41f625:	mov    edx,0x913cb88f
  41f62a:	mov    ebp,0xe6c2002e
  41f62f:	xchg   esp,eax
  41f630:	mov    ebp,0x7bfee854
  41f635:	test   al,0x12
  41f637:	pop    es
  41f638:	push   ebx
  41f639:	das    
  41f63a:	mov    eax,ds:0x48a23e05
  41f63f:	popf   
  41f640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f641:	mov    dh,0xd2
  41f643:	lock stc 
  41f645:	mov    ebx,0x4063384a
  41f64a:	ja     0x41f650
  41f64c:	and    al,ch
  41f64e:	push   ds
  41f64f:	adc    DWORD PTR [eax-0x1ed9f096],edi
  41f655:	mov    ch,0xde
  41f657:	dec    ecx
  41f658:	scas   al,BYTE PTR es:[edi]
  41f659:	lock adc BYTE PTR [edx+0x1956ac3c],dh
  41f660:	call   0xc332:0xd24b800e
  41f667:	or     ch,0x44
  41f66a:	inc    edi
  41f66b:	inc    eax
  41f66c:	pop    esp
  41f66d:	popa   
  41f66e:	out    dx,al
  41f66f:	std    
  41f670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f671:	dec    esi
  41f672:	mov    dh,0x2a
  41f674:	inc    edi
  41f675:	loopne 0x41f631
  41f677:	sub    eax,0xb65c7d0d
  41f67c:	pop    ebx
  41f67d:	ins    BYTE PTR es:[edi],dx
  41f67e:	inc    edi
  41f67f:	xor    eax,0x4be0e2c6
  41f684:	sti    
  41f685:	sbb    edx,edi
  41f687:	cs mov ecx,0xa9aca0ae
  41f68d:	stos   BYTE PTR es:[edi],al
  41f68e:	dec    esi
  41f68f:	mov    bl,0x1
  41f691:	xchg   ecx,eax
  41f692:	das    
  41f693:	pusha  
  41f694:	ja     0x41f67a
  41f696:	xchg   esi,eax
  41f697:	xchg   DWORD PTR [edi],ebx
  41f699:	pop    esi
  41f69a:	mov    eax,ds:0x709190ca
  41f69f:	rol    DWORD PTR [ecx],0xa4
  41f6a2:	or     DWORD PTR ds:0x5c239d77,edi
  41f6a8:	pop    ebx
  41f6a9:	pop    esp
  41f6aa:	pusha  
  41f6ab:	es aas 
  41f6ad:	sar    BYTE PTR [eax+0x705a28fd],cl
  41f6b3:	sub    al,0xdf
  41f6b5:	scas   eax,DWORD PTR es:[edi]
  41f6b6:	add    BYTE PTR [esp+esi*8+0x4f],bl
  41f6ba:	lods   eax,DWORD PTR ds:[esi]
  41f6bb:	or     cl,dh
  41f6bd:	(bad)  
  41f6be:	cli    
  41f6bf:	xlat   BYTE PTR ds:[ebx]
  41f6c0:	add    cl,BYTE PTR [ebx+0x4a3a3043]
  41f6c6:	xchg   edi,eax
  41f6c7:	ds mov cl,0x40
  41f6ca:	test   DWORD PTR [edx-0x4f],eax
  41f6cd:	rdtsc  
  41f6cf:	popa   
  41f6d0:	addr16 lock inc ebp
  41f6d3:	pushf  
  41f6d4:	adc    DWORD PTR [ecx],0x51100948
  41f6da:	pop    ss
  41f6db:	push   ebx
  41f6dc:	cli    
  41f6dd:	fimul  WORD PTR [edx-0xbfb606]
  41f6e3:	(bad)  
  41f6e4:	(bad)  
  41f6e6:	mov    bl,BYTE PTR [ebx+ebx*1]
  41f6e9:	and    ah,0xa6
  41f6ec:	and    BYTE PTR [edx+0x2f],0x79
  41f6f0:	xor    al,0xeb
  41f6f2:	push   ss
  41f6f3:	(bad)  
  41f6f4:	out    0xf7,al
  41f6f6:	pop    ebx
  41f6f7:	pop    ds
  41f6f8:	mov    ds:0xf019a74b,al
  41f6fd:	mov    bl,0x1f
  41f6ff:	(bad)  
  41f701:	mov    ds:0x53f3d189,al
  41f706:	lods   eax,DWORD PTR ds:[esi]
  41f707:	loopne 0x41f744
  41f709:	inc    esp
  41f70a:	or     ecx,DWORD PTR [edi+0x48]
  41f70d:	and    BYTE PTR [edi+0x2502f324],al
  41f713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f714:	stos   DWORD PTR es:[edi],eax
  41f715:	mov    BYTE PTR [ebx-0x2b],bh
  41f718:	mov    ch,0xa6
  41f71a:	dec    esi
  41f71b:	or     ebp,edi
  41f71d:	add    eax,0x319de93
  41f722:	inc    edx
  41f723:	sbb    DWORD PTR [ebp-0x26d58b58],esp
  41f729:	mov    edx,0xe81e5c33
  41f72e:	cmp    ch,BYTE PTR [eax-0x79]
  41f731:	jg     0x41f71d
  41f733:	fcmovne st,st(4)
  41f735:	mov    ch,BYTE PTR [ecx+0x5e0c0955]
  41f73b:	mov    eax,ds:0x5df6206a
  41f740:	shr    DWORD PTR [ebx+0x64a541c9],cl
  41f746:	sar    BYTE PTR [eax+0x7d6ec239],1
  41f74c:	jae    0x41f726
  41f74e:	jp     0x41f75e
  41f750:	xor    BYTE PTR [edi+0x35],al
  41f753:	adc    eax,0xf915ff00
  41f758:	popf   
  41f759:	or     esi,edx
  41f75b:	adc    ecx,DWORD PTR [esi-0x3ec47129]
  41f761:	mov    bh,0x19
  41f763:	leave  
  41f764:	call   0x8936:0x1e6ac67e
  41f76b:	mov    dl,dh
  41f76d:	sub    bl,0x68
  41f770:	lock or edi,edi
  41f773:	in     eax,0xd7
  41f775:	retf   
  41f776:	push   0x8202aa18
  41f77b:	and    eax,0x35eda028
  41f780:	fucomp st(3)
  41f782:	pop    edx
  41f783:	jb     0x41f804
  41f785:	jae    0x41f78a
  41f787:	mov    ah,0xcf
  41f789:	xor    bh,BYTE PTR [esi]
  41f78b:	mov    edi,esi
  41f78d:	outs   dx,BYTE PTR ds:[esi]
  41f78e:	call   0x2825f6a6
  41f793:	cmp    al,0x64
  41f795:	mov    cs,WORD PTR [edx-0x42]
  41f798:	mov    ds:0xce015dcc,eax
  41f79d:	xchg   edx,eax
  41f79e:	xchg   ebp,eax
  41f79f:	js     0x41f7a3
  41f7a1:	test   al,0x24
  41f7a3:	mov    bl,0xa9
  41f7a5:	rol    BYTE PTR [ebx+0x41],cl
  41f7a8:	fcom   QWORD PTR [edx+0x73]
  41f7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ac:	mov    dh,BYTE PTR [ebp+ebp*2-0x6ce39c62]
  41f7b3:	(bad)  
  41f7b4:	fucomip st,st(5)
  41f7b6:	ja     0x41f7d3
  41f7b8:	push   cs
  41f7b9:	test   BYTE PTR [ebx],dh
  41f7bb:	mov    ch,0xc1
  41f7bd:	gs and al,0xfe
  41f7c0:	(bad)  
  41f7c3:	in     al,0x92
  41f7c5:	popa   
  41f7c6:	add    DWORD PTR [eax-0x45],0xffffffe3
  41f7ca:	test   dl,cl
  41f7cc:	pusha  
  41f7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ce:	rcr    dl,0x7c
  41f7d1:	fwait
  41f7d2:	cmp    eax,0x2be227f0
  41f7d7:	fiadd  WORD PTR [ebx-0x68306f6d]
  41f7dd:	and    eax,0xbcc9f01d
  41f7e2:	push   es
  41f7e3:	add    cl,BYTE PTR ds:0x2ffab014
  41f7e9:	push   0xffffffbf
  41f7eb:	test   al,0x54
  41f7ed:	test   BYTE PTR [edi-0x708707a],al
  41f7f3:	pop    edx
  41f7f4:	push   ss
  41f7f5:	mov    esi,0x20b6139b
  41f7fa:	fist   DWORD PTR [edx-0x35]
  41f7fd:	mov    bl,0xeb
  41f7ff:	(bad)  
  41f800:	lods   eax,DWORD PTR ds:[esi]
  41f801:	fbstp  TBYTE PTR [eax+0x76]
  41f804:	shl    BYTE PTR [edi+0x52fddf6e],cl
  41f80a:	out    0xca,al
  41f80c:	je     0x41f7ff
  41f80e:	xor    DWORD PTR [eax+0x63],esi
  41f811:	in     eax,dx
  41f812:	test   al,0xad
  41f814:	cmp    BYTE PTR [di],bh
  41f817:	cdq    
  41f818:	bound  edx,QWORD PTR [esi-0x5886213a]
  41f81e:	les    esi,FWORD PTR [ebp-0x2463f26e]
  41f824:	mov    al,0x15
  41f826:	pop    edi
  41f827:	(bad)
  41f82b:	mov    edi,0xba2bef5c
  41f830:	inc    ecx
  41f831:	lahf   
  41f832:	or     bh,BYTE PTR [esi+ebp*2-0x396f43de]
  41f839:	inc    ebx
  41f83a:	imul   ecx,DWORD PTR ds:0xc62ad3da,0xffffffde
  41f841:	gs mov dl,0xa
  41f844:	sub    DWORD PTR [esi],esp
  41f846:	mov    eax,ds:0x411820f1
  41f84b:	scas   eax,DWORD PTR es:[edi]
  41f84c:	pop    esi
  41f84d:	and    BYTE PTR [eax+ebp*8+0x48132680],al
  41f854:	jle    0x41f878
  41f856:	lds    edx,FWORD PTR [edx+0x76291609]
  41f85c:	loopne 0x41f7f0
  41f85e:	add    eax,0x66dcc9f3
  41f863:	sub    esp,DWORD PTR [eax+esi*1]
  41f866:	leave  
  41f867:	sbb    al,0x1d
  41f869:	push   ss
  41f86a:	stc    
  41f86b:	das    
  41f86c:	hlt    
  41f86d:	outs   dx,BYTE PTR ds:[esi]
  41f86e:	mov    bl,0xb8
  41f870:	arpl   WORD PTR [eax+0x79],si
  41f873:	cwde   
  41f874:	xchg   BYTE PTR [edx+0x7a],dl
  41f877:	stc    
  41f878:	push   ebp
  41f879:	cmp    al,0x94
  41f87b:	fistp  WORD PTR [bx+di-0x6136]
  41f880:	int    0xd2
  41f882:	fs mov edx,0xd4fffe9b
  41f888:	mov    dl,0xc7
  41f88a:	add    dl,dl
  41f88c:	(bad)  
  41f88d:	push   ecx
  41f88e:	(bad)  
  41f88f:	jmp    0x22318f02
  41f894:	dec    edi
  41f895:	jo     0x41f820
  41f897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f898:	inc    eax
  41f899:	(bad)  
  41f89a:	jo     0x41f8c5
  41f89c:	dec    ebx
  41f89d:	fsub   QWORD PTR [edi-0x6c]
  41f8a0:	aas    
  41f8a1:	mov    ds:0x74c2ead8,eax
  41f8a6:	jl     0x41f912
  41f8a8:	cmp    DWORD PTR [ebp-0x707aff4d],edi
  41f8ae:	xchg   ch,bh
  41f8b0:	nop
  41f8b1:	fsub   DWORD PTR [edi+ebx*8+0x76]
  41f8b5:	aad    0xee
  41f8b7:	push   0x8081958a
  41f8bc:	sub    eax,0xbc1982a9
  41f8c1:	add    al,0x90
  41f8c3:	and    eax,0xf33dedca
  41f8c8:	and    eax,0xd1dccdc2
  41f8cd:	mov    bh,0x11
  41f8cf:	cmp    eax,0x4e4657c1
  41f8d4:	mov    WORD PTR [esi],?
  41f8d6:	mov    ah,0xbd
  41f8d8:	sar    BYTE PTR [edi-0x36],0x28
  41f8dc:	xor    BYTE PTR [ebx],al
  41f8de:	xor    eax,0x4cce5ce1
  41f8e3:	sti    
  41f8e4:	cmp    ebx,DWORD PTR ds:0x5784e002
  41f8ea:	sub    cl,BYTE PTR [edx]
  41f8ec:	cmp    eax,0xb39df2fe
  41f8f1:	push   ds
  41f8f2:	jecxz  0x41f892
  41f8f4:	clc    
  41f8f5:	inc    ebx
  41f8f6:	(bad)  
  41f8f7:	xchg   ebx,eax
  41f8f8:	adc    ch,BYTE PTR [esi-0x5beeae85]
  41f8fe:	stos   BYTE PTR es:[edi],al
  41f8ff:	call   FWORD PTR [edi]
  41f901:	inc    esp
  41f902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f903:	push   0xffffffe7
  41f905:	inc    ecx
  41f906:	je     0x41f980
  41f908:	push   ebp
  41f909:	mov    ebp,0x2e71886
  41f90e:	call   0xfd7b:0x3eb8142a
  41f915:	push   edi
  41f916:	jp     0x41f8ee
  41f918:	out    dx,eax
  41f919:	or     DWORD PTR [ecx],edx
  41f91b:	xor    edi,DWORD PTR [ebx-0x40]
  41f91e:	xor    eax,0x72b29c4
  41f923:	mov    ebx,0x3046869e
  41f928:	jge    0x41f90d
  41f92a:	iret   
  41f92b:	push   cs
  41f92c:	ins    DWORD PTR es:[edi],dx
  41f92d:	jmp    FWORD PTR [ecx]
  41f92f:	mov    edi,0x40d7af9c
  41f934:	jmp    0x7bc2:0x6b600c62
  41f93b:	cwde   
  41f93c:	mov    bh,0x95
  41f93e:	push   ebp
  41f93f:	test   BYTE PTR [edx],0xb8
  41f942:	push   ds
  41f943:	sbb    eax,0xbb922895
  41f948:	jae    0x41f9c3
  41f94a:	div    DWORD PTR [edi+0x6aa61c7b]
  41f950:	(bad)  
  41f951:	push   esp
  41f952:	mov    edi,0x2c10eec
  41f957:	mov    ebx,0xe97569d0
  41f95c:	jnp    0x41f96d
  41f95e:	mov    al,ds:0xcba29b3
  41f963:	cli    
  41f964:	pop    edx
  41f965:	jge    0x41f98f
  41f967:	inc    edx
  41f968:	add    eax,0xff2f86fa
  41f96d:	(bad)  
  41f96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96f:	daa    
  41f970:	shrd   DWORD PTR [ebx+ebx*2+0x68],edx,0x3f
  41f976:	xchg   DWORD PTR [ecx+edi*8-0x830d642],esp
  41f97d:	jo     0x41f9d8
  41f97f:	iret   
  41f980:	loope  0x41f989
  41f982:	lea    esi,[ebx-0x77]
  41f985:	mov    esi,0x194c187a
  41f98a:	xchg   ecx,eax
  41f98b:	nop
  41f98c:	fmulp  st(3),st
  41f98e:	hlt    
  41f98f:	fwait
  41f990:	bound  ebp,QWORD PTR [eax+0x61]
  41f993:	test   al,0x47
  41f995:	rcl    DWORD PTR [esi+0x5f],1
  41f998:	xchg   ebx,eax
  41f999:	out    dx,al
  41f99a:	mov    eax,ds:0x76e295d0
  41f99f:	in     al,dx
  41f9a0:	std    
  41f9a1:	mov    ah,0xa3
  41f9a3:	mov    esi,0x5f19fcaa
  41f9a8:	in     eax,0xc3
  41f9aa:	loop   0x41f944
  41f9ac:	(bad)  
  41f9ad:	out    dx,eax
  41f9ae:	xchg   ebx,eax
  41f9af:	pop    ebp
  41f9b0:	lock fcmovnb st,st(4)
  41f9b3:	stos   DWORD PTR es:[edi],eax
  41f9b4:	dec    esi
  41f9b5:	stc    
  41f9b6:	rol    BYTE PTR [ecx+ebp*8-0x52],cl
  41f9ba:	cmp    al,0x87
  41f9bc:	cmp    DWORD PTR [esi-0x65],esp
  41f9bf:	arpl   WORD PTR [esi+0x23],cx
  41f9c2:	adc    eax,0xeafd6439
  41f9c7:	popf   
  41f9c8:	push   ebx
  41f9c9:	dec    esi
  41f9ca:	pop    edx
  41f9cb:	repnz fs mov ch,0x55
  41f9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9d0:	inc    eax
  41f9d1:	xchg   esi,eax
  41f9d2:	push   ss
  41f9d3:	add    DWORD PTR [edx+0x73],0x471af606
  41f9da:	jb     0x41f983
  41f9dc:	pop    esi
  41f9dd:	mov    ah,0x23
  41f9df:	mov    ds:0xbf9d34b1,eax
  41f9e4:	iret   
  41f9e5:	xor    al,BYTE PTR [ecx-0x45145fe0]
  41f9eb:	dec    ebx
  41f9ec:	push   esi
  41f9ed:	inc    ecx
  41f9ee:	push   ebp
  41f9ef:	dec    eax
  41f9f0:	rcl    DWORD PTR [edx+ebp*1+0x1d46988d],0x69
  41f9f8:	push   ss
  41f9f9:	out    dx,al
  41f9fa:	cmp    dl,BYTE PTR [edx+0x6b0e3911]
  41fa00:	lock (bad) 
  41fa02:	(bad)  
  41fa03:	ins    BYTE PTR es:[edi],dx
  41fa04:	sahf   
  41fa05:	stos   DWORD PTR es:[edi],eax
  41fa06:	sti    
  41fa07:	mov    esp,DWORD PTR fs:[ebx+0x42]
  41fa0b:	enter  0x3cef,0xca
  41fa0f:	jp     0x41fa81
  41fa11:	daa    
  41fa12:	xchg   esp,eax
  41fa13:	jmp    0x41fa08
  41fa15:	dec    edx
  41fa16:	dec    esi
  41fa17:	div    BYTE PTR [edx+0x19]
  41fa1a:	sub    al,0x15
  41fa1c:	or     BYTE PTR [edi],0x14
  41fa1f:	mov    ebx,0x9bfacfc6
  41fa24:	outs   dx,BYTE PTR ds:[esi]
  41fa25:	int    0x9a
  41fa27:	jecxz  0x41f9cc
  41fa29:	sub    eax,0xae236d6f
  41fa2e:	mov    al,0xcd
  41fa30:	shr    BYTE PTR [ebx],1
  41fa32:	mov    ebp,DWORD PTR [esi+0x60]
  41fa35:	(bad)  
  41fa36:	lods   al,BYTE PTR ds:[esi]
  41fa37:	cmp    bh,dh
  41fa39:	call   0x8ef00920
  41fa3e:	xchg   edx,eax
  41fa3f:	stos   BYTE PTR es:[edi],al
  41fa40:	loopne 0x41f9ff
  41fa42:	outs   dx,BYTE PTR ds:[esi]
  41fa43:	int3   
  41fa44:	fcmovb st,st(0)
  41fa46:	xchg   DWORD PTR [edx],ecx
  41fa48:	cmp    DWORD PTR [ebp+0xc],ecx
  41fa4b:	mov    bh,0x2d
  41fa4d:	aam    0xa8
  41fa4f:	or     BYTE PTR [edx+edx*1+0x33],ah
  41fa53:	pop    edi
  41fa54:	or     al,0x7a
  41fa56:	xchg   esi,eax
  41fa57:	cmp    eax,0xdaa2bded
  41fa5c:	retf   
  41fa5d:	jecxz  0x41fa7a
  41fa5f:	inc    esi
  41fa60:	in     eax,dx
  41fa61:	mov    ebx,DWORD PTR [eax]
  41fa63:	fldenv [ebx+0x54]
  41fa66:	loop   0x41fae4
  41fa68:	push   0x337857cb
  41fa6d:	mov    ecx,gs
  41fa6f:	addr16 inc edi
  41fa71:	aaa    
  41fa72:	sub    al,0x23
  41fa74:	out    0x52,al
  41fa76:	repz add al,0x7
  41fa79:	mov    cl,0x78
  41fa7b:	loopne 0x41faf3
  41fa7d:	retf   
  41fa7e:	jmp    0x688d88f2
  41fa83:	(bad)  
  41fa84:	loopne 0x41fa8c
  41fa86:	adc    BYTE PTR [ecx+0x77399438],bl
  41fa8c:	jb     0x41faea
  41fa8e:	mov    al,0x25
  41fa90:	in     eax,dx
  41fa91:	pop    ebx
  41fa92:	pop    esi
  41fa93:	mov    cl,0x1c
  41fa95:	adc    BYTE PTR [eax+0x34],bh
  41fa98:	ds jp  0x41fb14
  41fa9b:	mov    bl,0xc7
  41fa9d:	or     eax,0x5adf7cbd
  41faa2:	pop    edx
  41faa3:	or     bh,BYTE PTR [edx-0x52]
  41faa6:	(bad)  
  41faa8:	adc    cl,BYTE PTR [esi-0x54620759]
  41faae:	xchg   BYTE PTR [ebx-0x19],ah
  41fab1:	out    dx,al
  41fab2:	or     eax,0x6067759e
  41fab7:	pop    esi
  41fab8:	dec    ebp
  41fab9:	into   
  41faba:	xor    dh,BYTE PTR [edx+0x39064146]
  41fac0:	sub    DWORD PTR [ecx],ebx
  41fac2:	lods   eax,DWORD PTR ds:[esi]
  41fac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac4:	pop    ss
  41fac5:	jbe    0x41fa60
  41fac7:	out    0x3a,eax
  41fac9:	imul   ah
  41facb:	sub    DWORD PTR [eax],eax
  41facd:	loop   0x41fa4f
  41facf:	xor    al,0x17
  41fad1:	fist   WORD PTR [esi-0x80]
  41fad4:	outs   dx,DWORD PTR ds:[esi]
  41fad5:	push   eax
  41fad6:	fdivr  st(0),st
  41fad8:	mov    esi,0x56b3f6c6
  41fadd:	inc    edi
  41fade:	repz fmul QWORD PTR [esi]
  41fae1:	aaa    
  41fae2:	or     eax,0xde01ccec
  41fae7:	neg    BYTE PTR [edx-0x57]
  41faea:	stos   BYTE PTR es:[edi],al
  41faeb:	and    eax,0x8abe6a71
  41faf0:	jae    0x41faca
  41faf2:	cmp    BYTE PTR [edx+0x5f8348f3],bh
  41faf8:	mov    eax,0x4dd661db
  41fafd:	mov    eax,0xa13cd0fc
  41fb02:	xor    DWORD PTR [ebp-0x71],0x35
  41fb06:	push   ebx
  41fb07:	xchg   edi,eax
  41fb08:	pop    ebp
  41fb09:	lahf   
  41fb0a:	lea    esi,[ebx]
  41fb0c:	add    BYTE PTR [edi],bh
  41fb0e:	fs sahf 
  41fb10:	xchg   edx,eax
  41fb11:	fnsave [ecx+0x4f064f46]
  41fb17:	arpl   WORD PTR [ecx],bp
  41fb19:	push   ecx
  41fb1a:	pop    ecx
  41fb1b:	jne    0x41faec
  41fb1d:	clc    
  41fb1e:	loope  0x41fb0c
  41fb20:	cs inc ebp
  41fb22:	loope  0x41fad6
  41fb24:	jnp    0x41fabe
  41fb26:	cmp    edx,DWORD PTR [ebp+ebp*8+0x62]
  41fb2a:	out    0xb6,al
  41fb2c:	push   ss
  41fb2d:	pop    ds
  41fb2e:	dec    ebx
  41fb2f:	or     DWORD PTR [eax],0xf25c67c6
  41fb35:	xchg   edi,eax
  41fb36:	ret    0x7366
  41fb39:	fwait
  41fb3a:	mov    dh,BYTE PTR [edi-0xb]
  41fb3d:	mov    esp,0xd804658e
  41fb42:	rcr    BYTE PTR [eax+eiz*4],0xb
  41fb46:	lods   al,BYTE PTR ds:[esi]
  41fb47:	lds    ebp,FWORD PTR [eax+0x7c483f2d]
  41fb4d:	xor    eax,0x8923155e
  41fb52:	cld    
  41fb53:	movnti DWORD PTR [eax-0x650c9c67],edx
  41fb5a:	dec    edx
  41fb5b:	push   ebp
  41fb5c:	jmp    0x94c1b7
  41fb61:	cmp    BYTE PTR [ecx-0x58c16ba5],ah
  41fb67:	mov    ds:0xf7fa0e64,al
  41fb6c:	jp     0x41fafd
  41fb6e:	lods   al,BYTE PTR gs:[esi]
  41fb70:	xchg   ah,ah
  41fb72:	jg     0x41fb53
  41fb74:	or     ebp,ecx
  41fb76:	inc    eax
  41fb77:	cmp    ecx,DWORD PTR [edx]
  41fb79:	pop    esi
  41fb7a:	outs   dx,DWORD PTR ds:[esi]
  41fb7b:	fld    TBYTE PTR [edx]
  41fb7d:	sti    
  41fb7e:	pop    edx
  41fb7f:	lahf   
  41fb80:	mov    eax,ds:0x97ea6118
  41fb85:	ss jne 0x41fbb9
  41fb88:	cli    
  41fb89:	adc    dh,BYTE PTR [eax+0x13]
  41fb8c:	nop
  41fb8d:	out    dx,al
  41fb8e:	xchg   cl,ch
  41fb90:	sub    al,0xf4
  41fb92:	push   edx
  41fb93:	ja     0x41fb55
  41fb95:	pushf  
  41fb96:	ins    DWORD PTR es:[edi],dx
  41fb97:	retf   0xc109
  41fb9a:	jno    0x41fbcd
  41fb9c:	push   eax
  41fb9d:	pop    ebp
  41fb9e:	aas    
  41fb9f:	mov    bh,0x63
  41fba1:	repnz xchg esi,eax
  41fba3:	mov    gs:0x8b0f89,al
  41fba9:	fld    DWORD PTR [edx-0x4a9bfd23]
  41fbaf:	int    0x81
  41fbb1:	cmp    DWORD PTR [esi-0x15],esi
  41fbb4:	mov    ebx,0xc9bb77f2
  41fbb9:	fmulp  st(3),st
  41fbbb:	push   eax
  41fbbc:	cwde   
  41fbbd:	add    DWORD PTR [ecx+0x7b10078f],0xcca97b86
  41fbc7:	jg     0x41fb8a
  41fbc9:	or     BYTE PTR [ebx],bl
  41fbcb:	fdivr  QWORD PTR [ecx]
  41fbcd:	jmp    0x28c8:0x2418d5e5
  41fbd4:	pop    esi
  41fbd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbd6:	mov    eax,ds:0x92445e22
  41fbdb:	sub    dl,BYTE PTR [edx]
  41fbdd:	jbe    0x41fbb4
  41fbdf:	(bad)  
  41fbe0:	pop    edx
  41fbe1:	fbld   TBYTE PTR [ecx]
  41fbe3:	fistp  WORD PTR [edi-0x60]
  41fbe6:	fs in  al,dx
  41fbe8:	and    ecx,esp
  41fbea:	inc    ebx
  41fbeb:	pop    ebx
  41fbec:	xor    dh,dl
  41fbee:	add    DWORD PTR [ebp+esi*4+0x0],0x8f6e68c1
  41fbf6:	mov    dh,0x3f
  41fbf8:	test   eax,0x61c7836f
  41fbfd:	or     DWORD PTR [ecx+0x1be715d6],0x59
  41fc04:	cmp    ecx,DWORD PTR [edi-0x2dfb0354]
  41fc0a:	mov    esi,0x8bd0c81b
  41fc0f:	int3   
  41fc10:	push   esp
  41fc11:	or     al,0xdf
  41fc13:	inc    esi
  41fc14:	in     al,0xed
  41fc16:	mov    ebx,0x3d46bb81
  41fc1b:	push   ecx
  41fc1c:	mov    ah,0x1a
  41fc1e:	dec    eax
  41fc1f:	mov    al,0xb7
  41fc21:	ins    DWORD PTR es:[edi],dx
  41fc22:	mov    eax,0x7c172bed
  41fc27:	mov    dh,0x66
  41fc29:	cmp    ebx,DWORD PTR [edx-0xea645ac]
  41fc2f:	inc    esi
  41fc30:	aas    
  41fc31:	cmp    al,0x7d
  41fc33:	stc    
  41fc34:	mov    bh,0xdf
  41fc36:	xor    BYTE PTR [ebx-0x46ec8e91],dl
  41fc3c:	in     eax,dx
  41fc3d:	and    BYTE PTR [edx+0x532ef86f],dl
  41fc43:	xlat   BYTE PTR ds:[ebx]
  41fc44:	adc    edi,DWORD PTR [ecx]
  41fc46:	mov    bh,0xdd
  41fc48:	cs sbb eax,0x753e5580
  41fc4e:	push   0x18
  41fc50:	jecxz  0x41fc2d
  41fc52:	pop    es
  41fc53:	or     BYTE PTR [esi+0x2e],dl
  41fc56:	icebp  
  41fc57:	push   esp
  41fc58:	je     0x41fc5e
  41fc5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc5b:	xchg   ebx,eax
  41fc5c:	aam    0xc9
  41fc5e:	jge    0x41fc38
  41fc60:	or     esp,DWORD PTR gs:[ebx-0x2a]
  41fc64:	std    
  41fc65:	mov    esi,DWORD PTR [esi-0x5254edda]
  41fc6b:	outs   dx,DWORD PTR ds:[si]
  41fc6d:	cs cld 
  41fc6f:	pop    es
  41fc70:	or     ch,dl
  41fc72:	xor    DWORD PTR [ecx+eiz*4-0x4f263805],0xf05471cd
  41fc7d:	ror    BYTE PTR [ebp+0x6691a376],1
  41fc83:	dec    edi
  41fc84:	fstp   DWORD PTR [ecx]
  41fc86:	out    dx,eax
  41fc87:	(bad)  
  41fc88:	retf   
  41fc89:	sar    BYTE PTR [eax+0x7cb1bbb4],cl
  41fc8f:	ins    DWORD PTR es:[edi],dx
  41fc90:	push   ss
  41fc91:	xchg   esi,esi
  41fc93:	pop    ecx
  41fc94:	jl     0x41fcb6
  41fc96:	cmp    eax,0x1f84c8da
  41fc9b:	add    BYTE PTR [esi],ch
  41fc9d:	sbb    al,0xa6
  41fc9f:	lahf   
  41fca0:	inc    ebp
  41fca1:	test   eax,0x56c87ec7
  41fca6:	inc    ebp
  41fca7:	jo     0x41fc2d
  41fca9:	pop    es
  41fcaa:	push   es
  41fcab:	loope  0x41fcde
  41fcad:	dec    ecx
  41fcae:	fs pop es
  41fcb0:	xchg   ebx,eax
  41fcb1:	(bad)  
  41fcb2:	adc    eax,0xbf4a8b7a
  41fcb7:	fcomp  DWORD PTR [edx]
  41fcb9:	std    
  41fcba:	adc    DWORD PTR [eax+0x6f],ecx
  41fcbd:	jmp    0xd4b9c778
  41fcc2:	sub    BYTE PTR [esi-0x6a],dh
  41fcc5:	or     BYTE PTR [esi+0x77d78ec1],dl
  41fccb:	xor    dh,BYTE PTR [esi]
  41fccd:	ret    0x204
  41fcd0:	ss data16 (bad) 
  41fcd3:	fidiv  DWORD PTR [ecx-0x25]
  41fcd6:	fwait
  41fcd7:	popf   
  41fcd8:	sub    dh,bh
  41fcda:	fidivr WORD PTR [esi-0x22fcaae8]
  41fce0:	repz and DWORD PTR [esi-0x63c6f9a3],0xffffffe4
  41fce8:	into   
  41fce9:	add    cl,BYTE PTR [ebp-0x1f6e3810]
  41fcef:	jmp    0x1694:0x3d0dbc1a
  41fcf6:	jnp    0x41fd37
  41fcf8:	jge    0x41fcf4
  41fcfa:	lea    eax,[eax]
  41fcfc:	push   edi
  41fcfd:	div    BYTE PTR [edx+0x5c825209]
  41fd03:	ret    0xaa71
  41fd06:	mov    ah,0x90
  41fd08:	xchg   ecx,eax
  41fd09:	and    BYTE PTR [edi],0xb
  41fd0c:	test   al,0x8a
  41fd0e:	mov    al,ds:0x469f012d
  41fd13:	out    0xaa,al
  41fd15:	je     0x41fd34
  41fd17:	sbb    bl,ah
  41fd19:	sub    ecx,0xbc9e41cb
  41fd1f:	inc    ebx
  41fd20:	repnz gs pop ebx
  41fd23:	stc    
  41fd24:	(bad)  
  41fd25:	push   esi
  41fd26:	not    BYTE PTR [ebp+0xf16de37]
  41fd2c:	sahf   
  41fd2d:	and    edi,DWORD PTR [ebx]
  41fd2f:	gs pop eax
  41fd31:	aaa    
  41fd32:	loope  0x41fcc3
  41fd34:	outs   dx,BYTE PTR ds:[esi]
  41fd35:	mov    edi,0xcd1a2350
  41fd3a:	ins    BYTE PTR es:[edi],dx
  41fd3b:	daa    
  41fd3c:	pop    edx
  41fd3d:	int3   
  41fd3e:	jl     0x41fcde
  41fd40:	dec    ebx
  41fd41:	stos   DWORD PTR es:[edi],eax
  41fd42:	adc    eax,0x67402ac4
  41fd47:	mov    al,ds:0xbe0d2760
  41fd4c:	fcmovnb st,st(3)
  41fd4e:	push   esi
  41fd4f:	mov    ecx,DWORD PTR fs:[ebp+0x4be1c09b]
  41fd56:	or     ah,BYTE PTR ds:0xfe6b2ad6
  41fd5c:	cmp    edi,DWORD PTR [edi+0x2f]
  41fd5f:	ss scas al,BYTE PTR es:[edi]
  41fd61:	nop
  41fd62:	or     BYTE PTR [ebx+0x5a],0x40
  41fd66:	xlat   BYTE PTR ds:[ebx]
  41fd67:	mov    BYTE PTR [edx+0x50d22836],dl
  41fd6d:	sar    DWORD PTR [ebx-0x53],1
  41fd70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd71:	(bad)  
  41fd72:	addr16 sti 
  41fd74:	add    al,0xf6
  41fd76:	xchg   esp,eax
  41fd77:	sub    ecx,DWORD PTR [esi]
  41fd79:	pop    ebp
  41fd7a:	in     eax,0x4a
  41fd7c:	xchg   BYTE PTR [edx-0x55],ch
  41fd7f:	mov    ds:0x56ce26dd,eax
  41fd84:	dec    ecx
  41fd85:	and    cl,BYTE PTR [esi]
  41fd87:	inc    edx
  41fd88:	push   ecx
  41fd89:	les    esi,FWORD PTR [edx-0x53]
  41fd8c:	jnp    0x41fd36
  41fd8e:	dec    edi
  41fd8f:	and    BYTE PTR es:[ebp+0x6a],al
  41fd93:	pop    di
  41fd95:	mov    ebp,0xa6366b3b
  41fd9a:	mov    BYTE PTR [edi],cl
  41fd9c:	and    eax,0xccd6a9de
  41fda1:	inc    eax
  41fda2:	mov    ah,0xbf
  41fda4:	cmp    al,0xbd
  41fda6:	xor    cl,BYTE PTR [eax-0x1966be7f]
  41fdac:	or     al,0xcb
  41fdae:	retf   0x26c2
  41fdb1:	loopne 0x41fe09
  41fdb3:	sub    al,BYTE PTR [edi]
  41fdb5:	sub    eax,0x84b5478e
  41fdba:	or     edx,ecx
  41fdbc:	push   esp
  41fdbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdbe:	dec    esi
  41fdbf:	jmp    0x3493:0xeae48405
  41fdc6:	sub    al,BYTE PTR [eax]
  41fdc8:	mov    DWORD PTR [edx-0x2430c05c],edi
  41fdce:	xor    eax,0x27a93cef
  41fdd3:	(bad)  
  41fdd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdd5:	mov    edx,0x758ebb84
  41fdda:	popa   
  41fddb:	and    dl,bh
  41fddd:	mov    ebp,DWORD PTR [edx-0x6e]
  41fde0:	test   al,0x82
  41fde2:	add    DWORD PTR [ebx+0x28a093b8],eax
  41fde8:	dec    ebx
  41fde9:	xor    BYTE PTR [eax+0x36],dl
  41fdec:	mov    eax,0xa93b7b20
  41fdf1:	mov    ch,0xff
  41fdf3:	pop    edi
  41fdf4:	add    ch,BYTE PTR [ecx+edx*4+0x2f2eed0d]
  41fdfb:	loop   0x41fd9a
  41fdfd:	inc    ebp
  41fdfe:	jno    0x41fdb6
  41fe00:	imul   edi,esi,0x30323e4f
  41fe06:	mov    al,0xa5
  41fe08:	jmp    0x6672a4a0
  41fe0d:	lahf   
  41fe0e:	cdq    
  41fe0f:	fwait
  41fe10:	call   0x859920d
  41fe15:	dec    edi
  41fe16:	cli    
  41fe17:	mov    ebp,0x75eca8cc
  41fe1c:	sub    bh,BYTE PTR [eax+0x667ae119]
  41fe22:	mov    eax,ds:0x28008e18
  41fe27:	clc    
  41fe28:	scas   ax,WORD PTR es:[edi]
  41fe2a:	pop    es
  41fe2b:	xor    DWORD PTR [ecx],esp
  41fe2d:	mov    bh,0xd
  41fe2f:	icebp  
  41fe30:	lods   eax,DWORD PTR ds:[esi]
  41fe31:	lods   al,BYTE PTR ds:[esi]
  41fe32:	mov    dl,0x84
  41fe34:	in     eax,dx
  41fe35:	add    al,0x27
  41fe37:	shr    BYTE PTR [esi-0x562bd6b7],1
  41fe3d:	pop    ebp
  41fe3e:	push   cs
  41fe3f:	pop    eax
  41fe40:	mov    dh,BYTE PTR [edx-0x1d78e605]
  41fe46:	ja     0x41fe68
  41fe48:	mov    ah,0xb4
  41fe4a:	mov    cl,0x5b
  41fe4c:	stc    
  41fe4d:	add    al,0x6b
  41fe4f:	pop    edi
  41fe50:	jle    0x41fe04
  41fe52:	pusha  
  41fe53:	ja     0x41fe2d
  41fe55:	and    DWORD PTR [edx],0x754c059d
  41fe5b:	mov    ebx,0x55fb7a5
  41fe60:	push   edx
  41fe61:	xor    ah,BYTE PTR [ebx+0x75]
  41fe64:	div    BYTE PTR [ecx-0x69]
  41fe67:	lock cld 
  41fe69:	dec    ebx
  41fe6a:	cmp    cl,bh
  41fe6c:	mov    ebp,DWORD PTR [bp-0x2f]
  41fe70:	loop   0x41feb2
  41fe72:	mov    ebx,0xfd7b522f
  41fe77:	xor    bl,BYTE PTR [eax+0x1]
  41fe7a:	sub    BYTE PTR [ecx+0x47baefe2],cl
  41fe80:	outs   dx,BYTE PTR ds:[esi]
  41fe81:	inc    ebp
  41fe82:	jno    0x41fef9
  41fe84:	mov    bl,0xee
  41fe86:	mov    ecx,0xa0f4e400
  41fe8b:	test   BYTE PTR ds:0xefe698a0,0x64
  41fe92:	lock mov edx,0xfc8b362a
  41fe98:	in     eax,dx
  41fe99:	or     bh,BYTE PTR [esi+0x4df127f6]
  41fe9f:	mov    esp,0xefe50526
  41fea4:	cmp    BYTE PTR [edx],ah
  41fea6:	outs   dx,DWORD PTR ds:[esi]
  41fea7:	jae    0x41fe71
  41fea9:	out    0x58,eax
  41feab:	test   eax,0x68b3b070
  41feb0:	lods   al,BYTE PTR ds:[esi]
  41feb1:	jecxz  0x41fedb
  41feb3:	inc    ebp
  41feb4:	or     eax,0x6d513290
  41feb9:	jnp    0x41fed4
  41febb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41febc:	mov    ah,0xb5
  41febe:	test   eax,0x838546fb
  41fec3:	jns    0x41ff3d
  41fec5:	push   edx
  41fec6:	sub    BYTE PTR [esi],dh
  41fec8:	or     ah,BYTE PTR [edx+0x3d9959ce]
  41fece:	lds    eax,FWORD PTR [edi+0x61]
  41fed1:	dec    ebx
  41fed2:	loopne 0x41fe79
  41fed4:	or     DWORD PTR ds:0x5992bcf6,ecx
  41feda:	pusha  
  41fedb:	and    BYTE PTR [ebp+0x79825af6],bh
  41fee1:	aas    
  41fee2:	stos   DWORD PTR es:[edi],eax
  41fee3:	fcmovbe st,st(7)
  41fee5:	cmp    al,0xf5
  41fee7:	mov    al,ds:0xf38e7bef
  41feec:	and    bh,BYTE PTR [ebp+0x63]
  41feef:	xchg   edi,eax
  41fef0:	loop   0x41ff2e
  41fef2:	inc    esi
  41fef3:	ret    0x9545
  41fef6:	mov    esp,0x111cccbc
  41fefb:	lods   eax,DWORD PTR ds:[esi]
  41fefc:	outs   dx,DWORD PTR ds:[esi]
  41fefd:	jecxz  0x41ff74
  41feff:	cmc    
  41ff00:	hlt    
  41ff01:	in     al,dx
  41ff02:	pusha  
  41ff03:	lock mov ebx,0x7d1fffb7
  41ff09:	cmp    eax,0xe7179f0
  41ff0e:	aas    
  41ff0f:	jae    0x41ff2b
  41ff11:	dec    eax
  41ff12:	dec    eax
  41ff13:	or     ebx,edx
  41ff15:	mov    eax,ds:0xdf61742d
  41ff1a:	push   ebp
  41ff1b:	outs   dx,DWORD PTR ds:[esi]
  41ff1c:	mov    cl,0x13
  41ff1e:	test   eax,0xc4be5d5
  41ff23:	bound  eax,QWORD PTR [ebp-0x43]
  41ff26:	mov    al,ds:0x21f85198
  41ff2b:	test   BYTE PTR [ebp-0x561b7cd7],al
  41ff31:	push   ds
  41ff32:	jne    0x41ff17
  41ff34:	mov    BYTE PTR [edi],cl
  41ff36:	sti    
  41ff37:	cmp    BYTE PTR [edi-0x5e],0xee
  41ff3b:	dec    eax
  41ff3c:	pop    ebp
  41ff3d:	lds    esp,FWORD PTR [ebp+0x4f18107]
  41ff43:	mov    edx,0x12d4de45
  41ff48:	mov    ds:0xc244ea79,eax
  41ff4d:	xor    al,0xe6
  41ff4f:	rol    BYTE PTR [edx-0x12],1
  41ff52:	jae    0x41fed9
  41ff54:	ret    0x3395
  41ff57:	xchg   ebp,eax
  41ff58:	push   esi
  41ff59:	ds enter 0xf1b3,0xef
  41ff5e:	add    eax,0xfbc4b1bb
  41ff63:	mov    ecx,0x5998fadd
  41ff68:	pushf  
  41ff69:	push   ds
  41ff6a:	jb     0x41ffb5
  41ff6c:	lea    esp,fs:[edx]
  41ff6f:	mov    eax,ds:0xd1708ffa
  41ff74:	cli    
  41ff75:	push   es
  41ff76:	repnz ficomp WORD PTR [eax-0x73]
  41ff7a:	and    al,0xe5
  41ff7c:	js     0x41ff84
  41ff7e:	nop
  41ff7f:	inc    edx
  41ff80:	xchg   ecx,eax
  41ff81:	(bad)  
  41ff82:	sbb    al,0x70
  41ff84:	cs clc 
  41ff86:	shl    ebx,cl
  41ff88:	cmp    esi,DWORD PTR gs:[edx-0x40]
  41ff8c:	sub    BYTE PTR [ebp+0x518ead61],0x8
  41ff93:	sbb    al,0x38
  41ff95:	pop    ds
  41ff96:	mov    ch,BYTE PTR [edi]
  41ff98:	pop    eax
  41ff99:	ret    
  41ff9a:	sbb    bh,bl
  41ff9c:	inc    ebx
  41ff9d:	call   FWORD PTR [ebx-0x5cccc092]
  41ffa3:	pusha  
  41ffa4:	dec    ecx
  41ffa5:	push   DWORD PTR [esp+edx*1+0xd2c14bd]
  41ffac:	rol    edi,cl
  41ffae:	pushf  
  41ffaf:	not    DWORD PTR [ebp+0x61]
  41ffb2:	push   ss
  41ffb3:	fist   DWORD PTR [ecx]
  41ffb5:	add    eax,0xa067e35e
  41ffba:	std    
  41ffbb:	mov    eax,ds:0x17910a18
  41ffc0:	daa    
  41ffc1:	push   ebx
  41ffc2:	mov    ebx,0xd54a1c06
  41ffc7:	dec    esp
  41ffc8:	cmp    ah,BYTE PTR [ebp+0x5ec79e40]
  41ffce:	imul   esp,DWORD PTR [ecx+0x52c3cf71],0x6c5655d1
  41ffd8:	nop
  41ffd9:	fistp  WORD PTR [eax-0x62]
  41ffdc:	cli    
  41ffdd:	xchg   BYTE PTR [ebp+0x5b],al
  41ffe0:	cmp    al,BYTE PTR [edi]
  41ffe2:	pop    edx
  41ffe3:	push   esp
  41ffe4:	jb     0x41ff74
  41ffe6:	int    0x10
  41ffe8:	lods   al,BYTE PTR ds:[esi]
  41ffe9:	jle    0x41ffb3
  41ffeb:	cld    
  41ffec:	clc    
  41ffed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffee:	ror    BYTE PTR [ecx+0x5786c8eb],1
  41fff4:	xchg   ecx,eax
  41fff5:	add    al,0xd9
  41fff7:	pop    ecx
  41fff8:	xchg   esp,eax
  41fff9:	dec    ecx
  41fffa:	shl    BYTE PTR [edi],cl
  41fffc:	fcom   QWORD PTR [ebp+0x6ebb772a]
  420002:	mov    edi,0x78118302
  420007:	fsubr  st(1),st
  420009:	lods   eax,DWORD PTR ds:[esi]
  42000a:	add    cl,BYTE PTR [edi-0x143c7d70]
  420010:	(bad)  
  420012:	mov    dl,BYTE PTR [eax+0x47f472c7]
  420018:	iret   
  420019:	repz mov ?,ecx
  42001c:	pop    edi
  42001d:	lock repz push 0x709415d4
  420024:	ret    0x1ba1
  420027:	xor    DWORD PTR [esi-0x552a0161],edi
  42002d:	dec    eax
  42002e:	pop    ebp
  42002f:	mov    ss,WORD PTR [ecx-0xa13ea98]
  420035:	push   ebx
  420036:	inc    bp
  420038:	aad    0xdf
  42003a:	ret    0xd015
  42003d:	cdq    
  42003e:	cmp    ah,bh
  420040:	pop    ss
  420041:	and    DWORD PTR [edx+0x31],0x308809a3
  420048:	pop    ebp
  420049:	pusha  
  42004a:	or     dl,ah
  42004c:	es popf 
  42004e:	add    al,0xac
  420050:	mov    ah,BYTE PTR [eax+0x11]
  420053:	pop    edx
  420054:	bound  eax,QWORD PTR [eax-0x56f9939d]
  42005a:	push   cs
  42005b:	fstp   TBYTE PTR [edx-0x7a]
  42005e:	mov    ebp,0x8f4d2193
  420063:	(bad)  
  420065:	fidiv  DWORD PTR [edx-0x336f541e]
  42006b:	vdivps ymm7,ymm0,YMMWORD PTR [eax-0x5a6d8ff1]
  420073:	mov    al,ds:0x4350ebef
  420078:	jae    0x4200e8
  42007a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42007b:	jmp    0x312a:0xd687de23
  420082:	js     0x4200b9
  420084:	outs   dx,DWORD PTR ds:[esi]
  420085:	(bad)  
  420086:	imul   ecx,DWORD PTR [esi-0x7d4f91c5],0x8af820f2
  420090:	mov    dl,0xeb
  420092:	lock ins DWORD PTR es:[edi],dx
  420094:	iret   
  420095:	ja     0x420096
  420097:	ja     0x4200fe
  420099:	(bad)  
  42009a:	mov    edx,0x2f1d0361
  42009f:	imul   ebx,DWORD PTR ds:0xf792eb10,0x72
  4200a6:	pop    ecx
  4200a7:	mov    ah,0xf2
  4200a9:	adc    eax,0xb08ccef0
  4200ae:	push   ecx
  4200af:	retf   
  4200b0:	clc    
  4200b1:	icebp  
  4200b2:	or     ch,BYTE PTR [eax]
  4200b4:	mov    bh,BYTE PTR [edi*1+0x7651cd3b]
  4200bb:	mul    BYTE PTR [esi-0x3aa57340]
  4200c1:	hlt    
  4200c2:	and    eax,DWORD PTR ds:0xacd28c1e
  4200c8:	sar    DWORD PTR [eax-0xbcad455],0x91
  4200cf:	mov    ds:0xff6a7043,eax
  4200d4:	adc    esp,eax
  4200d6:	jmp    0x524f84d8
  4200db:	sub    BYTE PTR [edx-0x4a2300],cl
  4200e1:	test   cl,ah
  4200e3:	xchg   edx,eax
  4200e4:	mov    WORD PTR [edx],ds
  4200e6:	adc    ch,BYTE PTR [esi+eax*8+0x2]
  4200ea:	dec    edi
  4200eb:	cmp    BYTE PTR [eax-0x6446f9d5],ch
  4200f1:	pusha  
  4200f2:	xchg   edx,eax
  4200f3:	or     eax,0xeb720b6d
  4200f8:	inc    ebp
  4200f9:	or     bl,BYTE PTR [edi+0x1c96bf46]
  4200ff:	imul   ebx,DWORD PTR [edi],0xffc1337b
  420105:	inc    edi
  420106:	or     eax,0x39c3a47b
  42010b:	arpl   si,bp
  42010d:	into   
  42010e:	push   esp
  42010f:	push   0x7785e5ab
  420114:	je     0x420169
  420116:	outs   dx,BYTE PTR ds:[esi]
  420117:	cmp    ch,BYTE PTR [esi-0x75]
  42011a:	sub    eax,0x2b3be30c
  42011f:	in     eax,0x4f
  420121:	hlt    
  420122:	nop
  420123:	add    ebp,DWORD PTR [eax+0x123e4fa7]
  420129:	retf   
  42012a:	lods   eax,DWORD PTR ds:[esi]
  42012b:	loope  0x420141
  42012d:	mov    ebp,0xbb6db28
  420132:	jle    0x420189
  420134:	in     eax,dx
  420135:	fnsetpm(287 only) 
  420137:	dec    ebp
  420138:	mov    edx,0x3019e9b3
  42013d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42013e:	es pop ds
  420140:	and    ebx,esp
  420142:	(bad)  
  420143:	pusha  
  420144:	xor    edx,DWORD PTR [eax]
  420146:	push   0xfffffffa
  420148:	nop
  420149:	popf   
  42014a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42014b:	dec    ebp
  42014c:	pop    edi
  42014d:	(bad)  
  42014e:	std    
  42014f:	hlt    
  420150:	mov    DWORD PTR [edx],edx
  420152:	out    dx,al
  420153:	push   ebp
  420154:	bound  esi,QWORD PTR [ebx+edi*8-0x611a0c8f]
  42015b:	mov    ah,0xaf
  42015d:	jp     0x420184
  42015f:	xor    BYTE PTR [ebp+0x38],bh
  420162:	or     BYTE PTR [edi],bh
  420164:	aam    0x8
  420166:	dec    edi
  420167:	fwait
  420168:	mov    al,ds:0x231483ab
  42016d:	and    al,0xce
  42016f:	xchg   edi,eax
  420170:	pop    ebx
  420171:	xchg   edx,eax
  420172:	xor    edi,DWORD PTR [edi+0x84720fa]
  420178:	sar    DWORD PTR [edx+eiz*8],0x86
  42017c:	lods   al,BYTE PTR ds:[esi]
  42017d:	adc    cl,ah
  42017f:	jmp    0x4201c3
  420181:	or     dh,BYTE PTR [ecx+0x6d2b82d6]
  420187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420188:	imul   edx,DWORD PTR [edi],0xd295b9f1
  42018e:	nop
  42018f:	nop
  420190:	mov    dh,0x31
  420192:	add    ecx,DWORD PTR [edi+0x1f1e00ba]
  420198:	jmp    0xa0be:0x9ea7fa8a
  42019f:	pop    ss
  4201a0:	inc    eax
  4201a1:	xchg   edi,eax
  4201a2:	sub    ah,dl
  4201a4:	inc    ecx
  4201a5:	sbb    ecx,DWORD PTR [edx+0xa]
  4201a8:	fwait
  4201a9:	retf   0x8d53
  4201ac:	pusha  
  4201ad:	xchg   esp,eax
  4201ae:	pop    eax
  4201af:	idiv   BYTE PTR [eax+0x22]
  4201b2:	scas   al,BYTE PTR es:[edi]
  4201b3:	adc    DWORD PTR [ebx-0x61e12af3],ebx
  4201b9:	mov    DWORD PTR [esi],eax
  4201bb:	arpl   WORD PTR [ecx-0x43ab8d28],dx
  4201c1:	outs   dx,BYTE PTR ds:[esi]
  4201c2:	mov    edi,0x32495e23
  4201c7:	out    dx,al
  4201c8:	jnp    0x4201a5
  4201ca:	iret   
  4201cb:	clc    
  4201cc:	daa    
  4201cd:	fist   WORD PTR [esi+0x5637240e]
  4201d3:	mov    eax,ds:0xae08b450
  4201d8:	jge    0x420208
  4201da:	sbb    DWORD PTR [ecx+0x68d95080],ecx
  4201e0:	or     DWORD PTR [eax-0x1],esp
  4201e3:	add    edx,DWORD PTR [ecx-0x4a7e5925]
  4201e9:	aam    0x7
  4201eb:	sbb    al,0x7a
  4201ed:	or     BYTE PTR [eax],bh
  4201ef:	ins    DWORD PTR es:[edi],dx
  4201f0:	jno    0x420236
  4201f2:	arpl   di,cx
  4201f4:	pushf  
  4201f5:	mov    ds:0x4699f969,eax
  4201fa:	fs es jge 0x4201ab
  4201fe:	inc    eax
  4201ff:	xor    DWORD PTR [edi],ebp
  420201:	push   ebp
  420202:	sub    eax,0x358bbcb3
  420207:	mov    ds:0xbd86a26d,al
  42020c:	mov    ebx,0xe421b206
  420211:	mov    ecx,0xd1ca3486
  420216:	sti    
  420217:	and    al,0x2
  420219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42021a:	push   ss
  42021b:	mov    eax,ds:0x6c1a22b2
  420220:	popf   
  420221:	mov    ah,BYTE PTR [ecx-0x27]
  420224:	jne    0x420213
  420226:	dec    ecx
  420227:	pop    esi
  420228:	test   al,0xcf
  42022a:	fld    TBYTE PTR [esp+edx*8]
  42022d:	xor    al,0x82
  42022f:	dec    ebp
  420230:	(bad)  
  420231:	sub    al,0x49
  420233:	push   esi
  420234:	mov    ch,0xdb
  420236:	push   cs
  420237:	rcr    BYTE PTR [edx],cl
  420239:	int    0xe
  42023b:	cmp    DWORD PTR ds:0xf278af75,edi
  420241:	out    dx,al
  420242:	mov    cs,WORD PTR [edi-0x22077bab]
  420248:	xchg   edi,eax
  420249:	xor    DWORD PTR [eax+ecx*8+0x5f],0x3c1391d6
  420251:	cmc    
  420252:	leave  
  420253:	cmp    dl,cl
  420255:	jmp    0x42026e
  420257:	jg     0x420283
  420259:	(bad)  
  42025a:	push   0x820dd23e
  42025f:	lods   al,BYTE PTR ds:[esi]
  420260:	(bad)  
  420261:	lock mov cl,0xc3
  420264:	mov    bh,0x81
  420266:	in     eax,0xc2
  420268:	push   cs
  420269:	cli    
  42026a:	xor    edi,ebp
  42026c:	sbb    al,0xb7
  42026e:	aas    
  42026f:	test   al,0xa4
  420271:	push   ebp
  420272:	jb     0x420298
  420274:	out    dx,eax
  420275:	push   0x63
  420277:	inc    esi
  420278:	mov    ebp,0x1077717
  42027d:	pushf  
  42027e:	dec    ecx
  42027f:	inc    edx
  420280:	lahf   
  420281:	and    cl,BYTE PTR [ecx+0x5d]
  420284:	imul   ecx,esp,0xffffffa6
  420287:	and    al,0x52
  420289:	mov    ?,WORD PTR [edi+eax*8+0x4d]
  42028d:	dec    edi
  42028e:	loopne 0x4202b4
  420290:	sbb    bh,ah
  420292:	inc    DWORD PTR [edx+0x21f023d]
  420298:	icebp  
  420299:	into   
  42029a:	arpl   di,sp
  42029c:	sub    edi,DWORD PTR [esi-0xb7d3652]
  4202a2:	cli    
  4202a3:	and    al,0x2e
  4202a5:	jns    0x420323
  4202a7:	inc    esp
  4202a8:	jne    0x420289
  4202aa:	int3   
  4202ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ac:	and    dl,BYTE PTR [ebx-0x6ceb9dfa]
  4202b2:	add    BYTE PTR [edi-0x28c0b893],0xdd
  4202b9:	leave  
  4202ba:	or     ebp,DWORD PTR [ecx-0x433bc490]
  4202c0:	push   0x5f
  4202c2:	aam    0x19
  4202c4:	fstp   DWORD PTR [edi+0x4131b4c5]
  4202ca:	push   edx
  4202cb:	push   ebx
  4202cc:	std    
  4202cd:	out    0xfd,al
  4202cf:	ds inc esp
  4202d1:	or     eax,0xeffb5d32
  4202d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d7:	fbstp  TBYTE PTR ds:0xc56d8cd
  4202dd:	mov    ch,dh
  4202df:	mov    WORD PTR [ecx],cs
  4202e1:	push   0xffffffe0
  4202e3:	sbb    DWORD PTR [eax-0x507f831b],ebp
  4202e9:	int    0x35
  4202eb:	mov    edx,0x96d8d93d
  4202f0:	push   cs
  4202f1:	mov    edx,0x2e289ab
  4202f6:	fnstcw WORD PTR [ecx]
  4202f8:	pop    es
  4202f9:	inc    edi
  4202fa:	enter  0xc2a8,0xf4
  4202fe:	jno    0x420321
  420300:	sar    BYTE PTR ds:0x9215b8d1,cl
  420306:	neg    BYTE PTR [ebx]
  420308:	push   edx
  420309:	scas   al,BYTE PTR es:[edi]
  42030a:	add    dh,bl
  42030c:	outs   dx,DWORD PTR ds:[esi]
  42030d:	repz loop 0x420300
  420310:	push   0x68c284e7
  420315:	into   
  420316:	(bad)  [edx-0x53]
  420319:	mov    DWORD PTR [ecx-0x3c8b57e7],esi
  42031f:	mov    ds:0x2f043004,al
  420324:	and    DWORD PTR [ecx],0xdb0c8e0b
  42032a:	adc    BYTE PTR [eax+0x22],0x9a
  42032e:	sti    
  42032f:	sub    BYTE PTR [edi-0x3e898a1c],dl
  420335:	jcxz   0x420396
  420338:	or     DWORD PTR [edx+0x34c61d0a],esp
  42033e:	push   edx
  42033f:	mov    eax,ds:0x8e6bcdb1
  420344:	sbb    esp,DWORD PTR ds:0x330a2e98
  42034a:	cli    
  42034b:	call   0xee8a:0x71dd407f
  420352:	pop    ss
  420353:	cmp    DWORD PTR [ecx-0x9],ebx
  420356:	add    dl,BYTE PTR [esp+ebx*1]
  420359:	das    
  42035a:	jge    0x42039b
  42035c:	call   0xa0be:0x8f578dd
  420363:	pop    ss
  420364:	scas   al,BYTE PTR es:[edi]
  420365:	ins    DWORD PTR es:[edi],dx
  420366:	shr    DWORD PTR [edx+0xa7df94b],cl
  42036c:	mov    cl,0x70
  42036e:	shl    DWORD PTR [esi-0x126ecc14],cl
  420374:	sub    ah,ch
  420376:	adc    al,0xd6
  420378:	xchg   DWORD PTR [edi-0x29],ebp
  42037b:	aad    0x70
  42037d:	add    eax,0x10c768de
  420382:	pop    ecx
  420383:	xchg   edi,eax
  420384:	adc    eax,0x4b0754b2
  420389:	dec    ebx
  42038a:	add    al,0x56
  42038c:	mov    ah,0x43
  42038e:	inc    ebp
  42038f:	pop    edi
  420390:	in     al,0x67
  420392:	sub    ecx,DWORD PTR [ebp-0xc]
  420395:	mov    eax,ds:0xbe611a
  42039a:	(bad)  
  42039b:	in     eax,dx
  42039c:	xchg   BYTE PTR [eax-0x13],bl
  42039f:	jmp    0x4203c8
  4203a1:	int    0x72
  4203a3:	pusha  
  4203a4:	pop    ebp
  4203a5:	out    0x48,eax
  4203a7:	sub    al,0x88
  4203a9:	push   ss
  4203aa:	sbb    eax,0xbecc7b1
  4203af:	(bad)  
  4203b0:	aaa    
  4203b1:	(bad)  
  4203b2:	aaa    
  4203b3:	mov    ch,0x7d
  4203b6:	jb     0x420338
  4203b8:	pop    esp
  4203b9:	mov    ebx,0xb71b9367
  4203be:	push   esp
  4203bf:	arpl   WORD PTR ds:0x8214f0e5,cx
  4203c5:	pop    ecx
  4203c6:	mov    edi,0x50e21fdf
  4203cb:	scas   al,BYTE PTR es:[edi]
  4203cc:	mul    BYTE PTR [eax+edi*1]
  4203cf:	test   DWORD PTR [ebx+0x6b2d6915],0x470a7bbf
  4203d9:	fdiv   DWORD PTR [ecx-0x3d]
  4203dc:	arpl   WORD PTR [esi+0x5fc05a1e],dx
  4203e2:	shl    BYTE PTR [edi+0x7b764b95],cl
  4203e8:	pavgusb mm5,QWORD PTR [edi]
  4203ec:	stc    
  4203ed:	mov    BYTE PTR [ebp+0x6b9aa63c],dh
  4203f3:	mov    esi,0xb88e1597
  4203f8:	in     eax,dx
  4203f9:	out    dx,eax
  4203fa:	addr16 das 
  4203fc:	xor    edi,DWORD PTR [eax+0x4e489f03]
  420402:	mov    BYTE PTR [eax+0x52],bh
  420405:	enter  0xdf5d,0xee
  420409:	xchg   esp,eax
  42040a:	fistp  DWORD PTR [bx+si-0x3660]
  42040f:	fwait
  420410:	das    
  420411:	fsubr  QWORD PTR [ecx-0x45]
  420414:	loopne 0x4203cb
  420416:	pushf  
  420417:	and    edx,ebp
  420419:	mov    cl,0x13
  42041b:	sbb    dh,bl
  42041d:	(bad)  
  42041e:	add    al,BYTE PTR [edx]
  420420:	xchg   ebp,eax
  420421:	cli    
  420422:	outs   dx,BYTE PTR ds:[esi]
  420423:	dec    ebp
  420424:	adc    eax,0x885f26a2
  420429:	jge    0x4203ef
  42042b:	neg    BYTE PTR ss:[ecx-0x47]
  42042f:	xor    al,0x64
  420431:	pop    edi
  420432:	repnz pop DWORD PTR [edi+0x2]
  420436:	sbb    ecx,DWORD PTR [ebp-0x3efe6422]
  42043c:	jmp    0x4203f0
  42043e:	xor    BYTE PTR [ebp-0x45],dl
  420441:	jl     0x42041d
  420443:	stos   BYTE PTR es:[edi],al
  420444:	dec    eax
  420445:	inc    ebp
  420446:	sbb    DWORD PTR [ecx-0xd],ebx
  420449:	lea    edx,[edi]
  42044b:	xchg   esi,eax
  42044c:	push   ebx
  42044d:	call   0x369de857
  420452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420453:	cwde   
  420454:	ficomp WORD PTR [ebp+ebp*4-0x43]
  420458:	arpl   WORD PTR [esi+0x2da64c21],ax
  42045e:	xor    eax,ebx
  420460:	push   ss
  420461:	test   BYTE PTR [eax+0x49],0xf6
  420465:	adc    DWORD PTR [edx+0x74],ecx
  420468:	jne    0x4203ee
  42046a:	mov    ebp,0x780c6a45
  42046f:	imul   ebp,DWORD PTR [ebx+ecx*1-0x4e07297d],0x1f
  420477:	push   0xbc2afd77
  42047c:	mov    edx,DWORD PTR [eax]
  42047e:	dec    ebx
  42047f:	pop    edi
  420480:	sub    esi,DWORD PTR [edx-0x2b]
  420483:	in     al,dx
  420484:	and    DWORD PTR [edi-0x4a],edi
  420487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420488:	and    al,0xc8
  42048a:	fs jns 0x4204cd
  42048d:	jbe    0x420495
  42048f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420490:	(bad)  
  420491:	mov    edi,0xcc6f291
  420496:	inc    BYTE PTR [ecx-0x790fcc2c]
  42049c:	add    al,0xdd
  42049e:	adc    bl,dl
  4204a0:	and    BYTE PTR [ebx-0x45321507],dl
  4204a6:	scas   eax,DWORD PTR es:[edi]
  4204a7:	loop   0x4204d5
  4204a9:	dec    eax
  4204aa:	pop    es
  4204ab:	xchg   ebx,eax
  4204ac:	repnz sub bh,BYTE PTR [esi]
  4204af:	test   eax,0x878dd9e1
  4204b4:	lock ret 0x38d4
  4204b8:	icebp  
  4204b9:	gs mov edx,0x54c6af5
  4204bf:	sub    edx,ebp
  4204c1:	xchg   ecx,eax
  4204c2:	ss ins DWORD PTR es:[edi],dx
  4204c4:	mov    dh,0x1
  4204c6:	mov    eax,ds:0x45e42a5a
  4204cb:	dec    esp
  4204cc:	sub    esi,DWORD PTR [edx+esi*1-0x222755f1]
  4204d3:	mov    es,esi
  4204d5:	inc    ecx
  4204d6:	xchg   BYTE PTR [ecx],al
  4204d8:	aaa    
  4204d9:	cmp    DWORD PTR [ebp+0x34],ebx
  4204dc:	adc    BYTE PTR [ebx-0x52],ah
  4204df:	add    al,0xb0
  4204e1:	call   0xbdf3:0xdb9d859e
  4204e8:	push   ss
  4204e9:	push   esp
  4204ea:	cmp    BYTE PTR [edx+edi*2+0x12],bh
  4204ee:	addr16 dec esp
  4204f0:	lock lods al,BYTE PTR ds:[esi]
  4204f2:	jmp    0x3281:0x64496f18
  4204f9:	sahf   
  4204fa:	(bad)  [edx]
  4204fc:	and    DWORD PTR ds:0x23d8136c,ebp
  420502:	ins    DWORD PTR es:[edi],dx
  420503:	(bad)  
  420504:	mov    eax,ds:0xc61a42de
  420509:	loopne 0x42057e
  42050b:	pusha  
  42050c:	sub    al,0x58
  42050e:	jg     0x42055b
  420510:	mov    bl,0x5e
  420512:	int3   
  420513:	pop    es
  420514:	aad    0xf4
  420516:	sbb    ecx,DWORD PTR [edx+0x775ff78d]
  42051c:	add    ecx,DWORD PTR [esi+0x17e0f7c1]
  420522:	test   al,0xa
  420524:	jb     0x4204ea
  420526:	test   al,0xee
  420528:	add    ecx,DWORD PTR [ecx-0xe]
  42052b:	cli    
  42052c:	xchg   esp,eax
  42052d:	inc    esp
  42052e:	sbb    DWORD PTR [esi+0x7],ecx
  420531:	dec    BYTE PTR [eax]
  420533:	outs   dx,BYTE PTR ds:[esi]
  420534:	xor    eax,0xde64400d
  420539:	push   esi
  42053a:	or     BYTE PTR [ebx+ebp*4],dh
  42053d:	popf   
  42053e:	fmul   QWORD PTR [ebx-0x6e27aaa0]
  420544:	mov    dl,BYTE PTR [edx+0x35]
  420547:	push   eax
  420548:	mov    ebx,0x2546f7f2
  42054d:	dec    ecx
  42054e:	adc    ebp,edx
  420550:	pop    ebp
  420551:	imul   edi,DWORD PTR [edx-0x25e8e678],0x8f9c32ec
  42055b:	xchg   esp,eax
  42055c:	adc    edx,DWORD PTR [ebx]
  42055e:	or     al,0x31
  420560:	xor    DWORD PTR [ebp-0x4705c7d0],esi
  420566:	scas   al,BYTE PTR es:[edi]
  420567:	es jne 0x420574
  42056a:	(bad)  
  42056b:	mov    ah,0xff
  42056d:	(bad)  
  42056e:	fwait
  42056f:	cmp    eax,0xada02e98
  420574:	jmp    0xf756871b
  420579:	es inc ecx
  42057b:	(bad)  
  42057c:	sub    DWORD PTR [eax+0x280da156],ecx
  420582:	imul   eax,DWORD PTR [esi+0x6d],0x17
  420586:	test   ebx,ebp
  420588:	fdiv   st,st(3)
  42058a:	sub    esi,ebp
  42058c:	push   0xd339019b
  420591:	loopne 0x420551
  420593:	add    ebx,DWORD PTR [edi]
  420595:	call   0x8638:0x8fa33302
  42059c:	xchg   DWORD PTR [ebp-0x6d],eax
  42059f:	adc    ah,BYTE PTR gs:[esi+0x45]
  4205a3:	xlat   BYTE PTR ds:[ebx]
  4205a4:	xor    al,BYTE PTR [ecx]
  4205a6:	jmp    0xf1142a33
  4205ab:	mov    ds:0x4f4c37ec,eax
  4205b0:	pop    ecx
  4205b1:	and    al,0x18
  4205b3:	mov    ds:0x5ddb5824,al
  4205b8:	ja     0x42062e
  4205ba:	(bad)
  4205bd:	mov    eax,ds:0xda526de3
  4205c2:	xchg   ecx,eax
  4205c3:	and    al,0x55
  4205c5:	mov    ecx,0x557b1ac8
  4205ca:	mov    ebp,0x315f59c7
  4205cf:	(bad)  
  4205d1:	shl    DWORD PTR [edx+0x53dd0b9b],1
  4205d7:	stos   BYTE PTR es:[edi],al
  4205d8:	test   eax,0x69cff228
  4205dd:	test   bl,ah
  4205df:	or     ebp,eax
  4205e1:	xchg   ebx,eax
  4205e2:	stos   BYTE PTR es:[edi],al
  4205e3:	adc    ebp,DWORD PTR [ebx+0xb]
  4205e6:	inc    esp
  4205e7:	repz jnp 0x42059f
  4205ea:	pop    esp
  4205eb:	push   ss
  4205ec:	mov    gs,WORD PTR [esi]
  4205ee:	sbb    BYTE PTR [edi+0x4dd9a640],bl
  4205f4:	test   DWORD PTR [esi-0x4f661d5f],edx
  4205fa:	xchg   BYTE PTR [edx-0x134b6664],bh
  420600:	mov    WORD PTR [eax-0x140bf3],?
  420606:	pusha  
  420607:	(bad)  
  420608:	adc    DWORD PTR [ebx],esi
  42060a:	jo     0x420621
  42060c:	sub    eax,0xfb050dc8
  420611:	cmc    
  420612:	in     eax,0xc4
  420614:	imul   ecx,DWORD PTR [esi],0xffffff89
  420617:	mov    ebp,0xe268a3d4
  42061c:	pop    ecx
  42061d:	(bad)  
  42061e:	sbb    BYTE PTR [ecx+0x14],cl
  420621:	loop   0x420686
  420623:	sub    DWORD PTR [esi+edx*1-0x1f3842b],edi
  42062a:	sub    esi,edi
  42062c:	(bad)
  42062f:	stc    
  420630:	rcr    DWORD PTR [edi],cl
  420632:	pop    ds
  420633:	imul   eax,DWORD PTR [ebp+eax*1-0x38],0xffffff8d
  420638:	jae    0x42060c
  42063a:	push   cs
  42063b:	rcr    esp,1
  42063d:	jp     0x42062e
  42063f:	dec    bh
  420641:	mov    eax,ds:0x6c1e1a0f
  420646:	dec    ebx
  420647:	pop    esp
  420648:	ffreep st(2)
  42064a:	cli    
  42064b:	add    DWORD PTR [esi],0xd0c0139
  420651:	push   ebp
  420652:	sbb    DWORD PTR [ebx],edi
  420654:	dec    ecx
  420655:	test   eax,0x9efde3d7
  42065a:	pop    eax
  42065b:	enter  0xede7,0x45
  42065f:	inc    BYTE PTR [esi+esi*8-0x1b]
  420663:	push   esp
  420664:	mov    bl,0x7b
  420666:	jb     0x420690
  420668:	cli    
  420669:	mov    ds:0x5b22dd00,al
  42066e:	push   0x9dee0d1b
  420673:	(bad)  
  420674:	frstor [edx]
  420676:	fs ja  0x420678
  420679:	mov    bl,0xd3
  42067b:	int3   
  42067c:	jnp    0x420601
  42067e:	loopne 0x420637
  420680:	mov    esi,0xdb8318d2
  420685:	loope  0x420610
  420687:	lods   eax,DWORD PTR ds:[esi]
  420688:	lods   al,BYTE PTR ds:[esi]
  420689:	and    DWORD PTR [edx],esp
  42068b:	fwait
  42068c:	lods   al,BYTE PTR ds:[esi]
  42068d:	mov    dl,0x3
  42068f:	dec    edx
  420690:	pop    ebp
  420691:	(bad)  
  420692:	aas    
  420693:	mov    edi,0x721ed655
  420698:	cmc    
  420699:	xor    BYTE PTR [ebx+0x1e],bh
  42069c:	mov    ebx,0x905c737f
  4206a1:	rcl    BYTE PTR ds:0x346f5c3d,0x57
  4206a8:	and    BYTE PTR [ebx+0x25],bl
  4206ab:	push   ecx
  4206ac:	sti    
  4206ad:	xchg   ecx,eax
  4206ae:	pop    ss
  4206af:	sub    esi,edi
  4206b1:	and    al,0xc3
  4206b3:	out    dx,eax
  4206b4:	cli    
  4206b5:	adc    DWORD PTR [esi+0x258860a3],esp
  4206bb:	ror    DWORD PTR [ebx],1
  4206bd:	and    al,0x69
  4206bf:	inc    esi
  4206c0:	loop   0x4206d8
  4206c2:	push   ds
  4206c3:	pop    esi
  4206c4:	fldcw  WORD PTR ds:[bp-0x80]
  4206c9:	call   0xed59:0x1ad4fc03
  4206d0:	dec    ebx
  4206d1:	add    BYTE PTR [esi+esi*4+0x5390ee4],al
  4206d8:	push   esi
  4206d9:	pop    edi
  4206da:	inc    eax
  4206db:	jg     0x42066e
  4206dd:	in     eax,dx
  4206de:	pusha  
  4206df:	data16 xchg BYTE PTR [esi+0x40d6b186],bh
  4206e6:	call   FWORD PTR [ebx]
  4206e8:	mov    ds,WORD PTR [esi]
  4206ea:	out    dx,eax
  4206eb:	mov    ebx,0x1cc7ba27
  4206f0:	or     ecx,DWORD PTR [ecx]
  4206f2:	pop    ss
  4206f3:	push   0x857d7999
  4206f8:	adc    al,BYTE PTR [eax]
  4206fa:	mov    ?,WORD PTR [esi-0x18]
  4206fd:	push   ss
  4206fe:	xchg   ebx,eax
  4206ff:	push   es
  420700:	xor    al,0xd3
  420702:	xchg   ah,cl
  420704:	call   0x2f71e115
  420709:	loopne 0x42071a
  42070b:	sub    ebp,esi
  42070d:	lea    ecx,[ebx-0x4b]
  420710:	adc    al,0x23
  420712:	push   esp
  420713:	mov    eax,0x3d3c9932
  420718:	mov    eax,ds:0xcabe7858
  42071d:	in     eax,0xd5
  42071f:	mov    bh,0xe6
  420721:	das    
  420722:	xor    ah,BYTE PTR [ebx+eiz*8-0x25]
  420726:	call   FWORD PTR [esi]
  420728:	and    DWORD PTR [esi-0x3d],ecx
  42072b:	jae    0x420743
  42072d:	xchg   DWORD PTR [esi-0x281ca018],edi
  420733:	mov    ds:0x2accf37,al
  420738:	push   edx
  420739:	js     0x4207b5
  42073b:	popf   
  42073c:	or     DWORD PTR [ecx+0x78408ed],esp
  420742:	jecxz  0x4206e9
  420744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420745:	das    
  420746:	cwde   
  420747:	jno    0x420716
  420749:	pop    ds
  42074a:	jg     0x4207c1
  42074c:	ss push ss
  42074e:	pop    esp
  42074f:	mov    edx,0xb8d17867
  420754:	test   BYTE PTR [ebp+eax*8+0x7d],dl
  420758:	fsubrp st(2),st
  42075a:	pop    ds
  42075b:	cmp    al,0xc0
  42075d:	add    al,0xda
  42075f:	adc    BYTE PTR [esi+0x16c22dae],ch
  420765:	or     bl,dl
  420767:	imul   esp,DWORD PTR [edi+edx*4],0xffffffd8
  42076b:	aas    
  42076c:	push   esi
  42076d:	push   ds
  42076e:	sar    DWORD PTR [edi+0x51a4324a],cl
  420774:	punpckhdq mm0,mm7
  420777:	ret    
  420778:	mov    ebp,0x7037c88
  42077d:	mov    al,0xe7
  42077f:	fistp  QWORD PTR [esi]
  420781:	inc    edi
  420782:	cmp    DWORD PTR [esi+esi*8],esi
  420785:	nop
  420786:	jb     0x42070e
  420788:	cld    
  420789:	or     BYTE PTR [eax+0x3c],bl
  42078c:	pop    edx
  42078d:	cmp    ebp,DWORD PTR [edi+0x1ea3e2e8]
  420793:	adc    BYTE PTR [esi-0x14ca621d],dh
  420799:	inc    ebx
  42079a:	fld    QWORD PTR [edx-0x65ca3e3a]
  4207a0:	dec    edx
  4207a1:	push   esi
  4207a2:	aas    
  4207a3:	stos   BYTE PTR es:[edi],al
  4207a4:	jmp    0x70a0:0xecf675a9
  4207ab:	dec    ebp
  4207ac:	arpl   dx,bp
  4207ae:	lock pop ebx
  4207b0:	bound  eax,QWORD PTR [eax-0x2e419a86]
  4207b6:	jge    0x4207f7
  4207b8:	sbb    BYTE PTR [ebp+0x3b7a5f9a],dl
  4207be:	jns    0x4207df
  4207c0:	dec    esp
  4207c1:	sbb    DWORD PTR [edi+0x36],esi
  4207c4:	xchg   esp,eax
  4207c5:	cdq    
  4207c6:	inc    ecx
  4207c7:	pop    ebx
  4207c8:	and    DWORD PTR [edi+esi*4-0x5b],esi
  4207cc:	nop
  4207cd:	aaa    
  4207ce:	das    
  4207cf:	shl    DWORD PTR [eax+0x1],1
  4207d2:	jmp    0x420754
  4207d4:	out    0x8e,al
  4207d6:	call   0x7b51:0xf877fc9a
  4207dd:	sbb    bh,BYTE PTR [ecx]
  4207df:	cmp    DWORD PTR [edx],edi
  4207e1:	cs inc esi
  4207e3:	fisub  DWORD PTR [eax-0x63]
  4207e6:	cmp    cl,BYTE PTR [edx+ebp*4]
  4207e9:	xor    eax,0xa52d504a
  4207ee:	adc    dh,BYTE PTR [esi+0x24]
  4207f1:	test   DWORD PTR [edi-0x4c],0x22ba7fb0
  4207f8:	ja     0x4207a0
  4207fa:	shl    dl,1
  4207fc:	ins    BYTE PTR es:[edi],dx
  4207fd:	in     eax,0xcb
  4207ff:	mov    ?,WORD PTR [ebp-0x2a63cb2a]
  420805:	clc    
  420806:	cmp    eax,0x5a2ab4a1
  42080b:	lds    eax,FWORD PTR [ebp+0x7]
  42080e:	(bad)  
  42080f:	mov    ds:0xd7c7163c,eax
  420814:	mov    ebp,0xd807dd5a
  420819:	add    edi,DWORD PTR [ebp+0x75b038fa]
  42081f:	add    BYTE PTR [ecx-0x53029907],0x57
  420826:	xchg   edx,eax
  420827:	setns  BYTE PTR [edx-0xe]
  42082b:	in     eax,dx
  42082c:	int3   
  42082d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42082e:	arpl   WORD PTR ds:0x9a88187d,di
  420834:	rcr    BYTE PTR [ecx+0x4d34c8cf],1
  42083a:	mov    edi,esp
  42083c:	mov    cl,0xd1
  42083e:	into   
  42083f:	repnz pusha 
  420841:	sbb    eax,0xcef49b36
  420846:	dec    edi
  420847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420848:	jne    0x420876
  42084a:	push   edx
  42084b:	xor    al,BYTE PTR [edx]
  42084d:	icebp  
  42084e:	repnz lahf 
  420850:	fisubr DWORD PTR [eax-0x52ce825d]
  420856:	mul    DWORD PTR [edx-0x17]
  420859:	mov    ?,WORD PTR [eax-0x52]
  42085c:	add    DWORD PTR [esi-0x321a9256],esi
  420862:	pop    ebx
  420863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420864:	pop    ecx
  420865:	cmp    cl,BYTE PTR [ebx]
  420867:	xor    eax,0x159f4ec7
  42086c:	mov    ds:0x92b7ec50,eax
  420871:	cld    
  420872:	fdiv   st(2),st
  420874:	sbb    DWORD PTR [esi+0x459df5ba],eax
  42087a:	pop    ecx
  42087b:	dec    esp
  42087c:	inc    esi
  42087d:	sar    BYTE PTR [eax],1
  42087f:	cmp    BYTE PTR [ecx],dh
  420881:	mov    eax,DWORD PTR ds:[edx+0x50]
  420885:	dec    ebp
  420886:	test   eax,0xa9f08739
  42088b:	shr    bh,cl
  42088d:	lods   eax,DWORD PTR ds:[esi]
  42088e:	out    0x98,al
  420890:	jo     0x420864
  420892:	lock (bad) 
  420894:	mov    edi,0xe39832b4
  420899:	sub    al,cl
  42089b:	adc    DWORD PTR [ebp-0x5d40997f],ebx
  4208a1:	jae    0x42091d
  4208a3:	cmp    al,BYTE PTR [edi]
  4208a5:	fnstsw WORD PTR [edi]
  4208a7:	jmp    0xb4ab:0x21282877
  4208ae:	call   0x11b9fd9a
  4208b3:	rcl    DWORD PTR [edx],1
  4208b5:	xchg   ebp,eax
  4208b6:	sub    DWORD PTR [ebp-0x71944b2d],ecx
  4208bc:	sbb    eax,0x5ab70d84
  4208c1:	xlat   BYTE PTR ds:[ebx]
  4208c2:	loope  0x42093b
  4208c4:	sbb    dh,BYTE PTR [eax]
  4208c6:	fcomp  DWORD PTR [edi-0x4f]
  4208c9:	pop    ss
  4208ca:	mov    ebp,0x66d62611
  4208cf:	and    bh,BYTE PTR ds:0x6b0c1592
  4208d5:	xchg   ecx,eax
  4208d6:	adc    eax,0x2b54fdae
  4208db:	pop    es
  4208dc:	scas   al,BYTE PTR es:[edi]
  4208dd:	in     eax,0xd3
  4208df:	mov    BYTE PTR [esi-0x3e7efe0a],bl
  4208e5:	jbe    0x420874
  4208e7:	retf   
  4208e8:	mov    dl,0x15
  4208ea:	out    0x7e,eax
  4208ec:	dec    ebp
  4208ed:	pop    eax
  4208ee:	pushf  
  4208ef:	cdq    
  4208f0:	shr    BYTE PTR [esi-0x2f],1
  4208f3:	and    eax,0x761f0b14
  4208f8:	lds    esi,FWORD PTR [ecx+edx*2-0x59]
  4208fc:	sub    BYTE PTR [ecx],ch
  4208fe:	dec    esi
  4208ff:	push   ds
  420900:	jge    0x420901
  420902:	ror    DWORD PTR [edx+0x63],cl
  420905:	int    0x76
  420907:	jl     0x42089e
  420909:	adc    al,0x74
  42090b:	dec    ebx
  42090c:	mov    ebp,DWORD PTR [ebx-0x4cd72e24]
  420912:	push   edi
  420913:	jbe    0x4208df
  420915:	pcmpeqb mm0,QWORD PTR [edx+0x26382cf1]
  42091c:	xor    edx,DWORD PTR [ecx]
  42091e:	dec    esi
  42091f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420920:	rcr    BYTE PTR [ebx+0x46],0x65
  420924:	mov    ebp,fs
  420926:	mov    ds:0x66e92da3,eax
  42092b:	hlt    
  42092c:	xchg   esp,eax
  42092d:	(bad)  [edi-0x2f]
  420930:	shl    ebx,cl
  420932:	pop    DWORD PTR [edx]
  420934:	iret   
  420935:	cmp    eax,0xffffff9f
  420938:	push   esi
  420939:	sahf   
  42093a:	lea    ebx,[edi]
  42093c:	dec    esp
  42093d:	mov    edx,0xc528e264
  420942:	or     BYTE PTR ds:0xe6a175b6,bh
  420949:	das    
  42094a:	repnz dec ebp
  42094c:	adc    BYTE PTR [eax+0x68],0x71
  420950:	jno    0x420991
  420952:	adc    ah,al
  420954:	cdq    
  420955:	push   edx
  420956:	adc    edi,edi
  420958:	mov    bh,0x1f
  42095a:	adc    DWORD PTR [ebx-0x9b6a4eb],esp
  420960:	pop    edx
  420961:	sbb    al,bh
  420963:	dec    ebx
  420964:	dec    esp
  420965:	mov    eax,DWORD PTR [esi-0x309b49c]
  42096b:	mov    ebp,0x9cb3eefb
  420970:	test   BYTE PTR [edi+ebx*8],dh
  420973:	arpl   WORD PTR [eax],di
  420975:	(bad)
  420979:	data16 mov bh,0xea
  42097c:	pop    ss
  42097d:	and    ebx,0xffffffdb
  420980:	pop    ebx
  420981:	nop
  420982:	es mov edx,0x5fdb163e
  420988:	stos   BYTE PTR es:[edi],al
  420989:	hlt    
  42098a:	xchg   ebp,eax
  42098b:	xor    ebx,DWORD PTR [ebx+0x4916f82e]
  420991:	mov    al,ds:0xf3cc006
  420996:	push   0xffffff92
  420998:	cmovne ebx,DWORD PTR [ecx-0x4f1ede09]
  42099f:	test   al,0x5b
  4209a1:	fwait
  4209a2:	add    al,0xdf
  4209a4:	jb     0x420a20
  4209a6:	mov    edx,0x8662a3bd
  4209ab:	popa   
  4209ac:	addr16 mov ds:0x7a16,al
  4209b0:	jg     0x420a01
  4209b2:	dec    eax
  4209b3:	ins    DWORD PTR es:[edi],dx
  4209b4:	lds    ebp,FWORD PTR [eax-0x47]
  4209b7:	sbb    DWORD PTR [ebx+0x24],0x5d
  4209bb:	retf   0x39a4
  4209be:	push   ebx
  4209bf:	add    DWORD PTR [edx-0x12],esi
  4209c2:	(bad)  
  4209c3:	shl    BYTE PTR [esi-0x25],1
  4209c6:	push   ebx
  4209c7:	push   es
  4209c8:	cmp    ah,BYTE PTR [eax+0x3f5a50a1]
  4209ce:	(bad)  
  4209cf:	mov    esi,0x5d90c37e
  4209d4:	inc    esp
  4209d5:	cs xchg ecx,eax
  4209d7:	imul   eax,ebx,0x55
  4209da:	jns    0x4209d7
  4209dc:	sbb    DWORD PTR [ebx+0x3b29ebba],ecx
  4209e2:	push   DWORD PTR [edx+0x7d]
  4209e5:	pop    ebp
  4209e6:	and    BYTE PTR [ebx+0x4cf0a1e0],0x3d
  4209ed:	rcl    ebp,1
  4209ef:	push   ss
  4209f0:	stc    
  4209f1:	xchg   ch,dh
  4209f3:	push   ebp
  4209f4:	inc    esp
  4209f5:	pop    ss
  4209f6:	out    0xf8,eax
  4209f8:	data16 fst QWORD PTR ds:0xddf8b34b
  4209ff:	test   BYTE PTR [edi+0x3b],dl
  420a02:	dec    ebx
  420a03:	pop    es
  420a04:	lods   al,BYTE PTR ds:[esi]
  420a05:	outs   dx,DWORD PTR ds:[esi]
  420a06:	cli    
  420a07:	ss aam 0xf4
  420a0a:	jbe    0x420a31
  420a0c:	pop    edx
  420a0d:	fs cmp dh,ah
  420a10:	out    0x3a,al
  420a12:	adc    bl,BYTE PTR [eax-0x9be7ab3]
  420a18:	push   esi
  420a19:	fcomp  DWORD PTR [edx]
  420a1b:	loop   0x420a7b
  420a1d:	int    0x5e
  420a1f:	add    ah,BYTE PTR [ecx+ebx*1+0x20]
  420a23:	jo     0x420a2a
  420a25:	ret    
  420a26:	jle    0x420a4f
  420a28:	pushf  
  420a29:	mov    ebp,0x2435b74d
  420a2e:	jle    0x4209bb
  420a30:	lahf   
  420a31:	cmp    al,0x5e
  420a33:	mov    eax,0x6e688a2b
  420a38:	loope  0x4209f7
  420a3a:	sub    al,0x4e
  420a3c:	out    0x54,al
  420a3e:	das    
  420a3f:	lods   al,BYTE PTR ds:[esi]
  420a40:	mov    DWORD PTR [ebx-0x13],ebp
  420a43:	and    al,0xb2
  420a45:	in     eax,dx
  420a46:	adc    eax,0xd0d57389
  420a4b:	fidivr WORD PTR [ebp+0x21fe0564]
  420a51:	cmp    dl,al
  420a53:	inc    BYTE PTR [eax+0x2a]
  420a56:	mov    ebp,0xb94f5677
  420a5b:	mov    ch,0xba
  420a5d:	clc    
  420a5e:	jmp    0x6928:0x31795f7a
  420a65:	dec    ebp
  420a66:	pop    esp
  420a67:	jo     0x420aca
  420a69:	test   BYTE PTR [ebp+0x40],0x1d
  420a6d:	xor    dh,BYTE PTR fs:[ebp+0x778d75d8]
  420a74:	lea    ebx,[eax+0x24d77e62]
  420a7a:	mov    WORD PTR cs:[eax],fs
  420a7d:	sbb    DWORD PTR [edx],ebp
  420a7f:	fistp  QWORD PTR [edi+eax*8-0x4]
  420a83:	inc    ebp
  420a84:	mov    WORD PTR [ebx+0x39ab7335],?
  420a8a:	xchg   edi,eax
  420a8b:	out    0xe8,al
  420a8d:	not    ebx
  420a8f:	rcr    DWORD PTR [esi-0x42],0xcf
  420a93:	mov    ah,0xb5
  420a95:	(bad)  
  420a96:	(bad)  
  420a97:	and    BYTE PTR [edi+0x398a179c],bl
  420a9d:	div    DWORD PTR [eax-0x7ea1ae06]
  420aa3:	pop    esp
  420aa4:	sub    DWORD PTR [eax],edx
  420aa6:	rcl    BYTE PTR cs:[ebp+0x40],0xa0
  420aab:	inc    ebx
  420aac:	push   edi
  420aad:	dec    eax
  420aae:	push   ds
  420aaf:	sub    al,0xf8
  420ab1:	outs   dx,BYTE PTR ds:[esi]
  420ab2:	pop    edx
  420ab3:	inc    esi
  420ab4:	das    
  420ab5:	mov    al,0x5f
  420ab7:	repnz adc al,0x5c
  420aba:	push   esp
  420abb:	es add al,0x81
  420abe:	jne    0x420aa4
  420ac0:	xor    bh,BYTE PTR [esi+0x1e]
  420ac3:	fist   WORD PTR [eax]
  420ac5:	inc    edx
  420ac6:	adc    ch,BYTE PTR [ebx-0x3cfb38fb]
  420acc:	cdq    
  420acd:	(bad)  
  420ace:	leave  
  420acf:	jge    0x420ad9
  420ad1:	lods   al,BYTE PTR ds:[esi]
  420ad2:	arpl   WORD PTR [eax-0x3b30dc4f],si
  420ad8:	ds push ebx
  420ada:	cwde   
  420adb:	mov    al,0xe6
  420add:	ret    
  420ade:	test   DWORD PTR [ecx],esi
  420ae0:	jmp    0x286f:0x5e48a9cd
  420ae7:	int3   
  420ae8:	jae    0x420a99
  420aea:	jge    0x420b58
  420aec:	inc    edx
  420aed:	jne    0x420b5e
  420aef:	lds    eax,FWORD PTR cs:[ebx+0x6ed399e7]
  420af6:	icebp  
  420af7:	inc    edx
  420af8:	repnz pop edi
  420afa:	mov    al,ds:0x3edc909c
  420aff:	mov    ah,0xa5
  420b01:	pop    ds
  420b02:	pop    esp
  420b03:	ret    
  420b04:	outs   dx,DWORD PTR ds:[esi]
  420b05:	inc    ebx
  420b06:	out    0x12,eax
  420b08:	push   edx
  420b09:	pop    ecx
  420b0a:	dec    esp
  420b0b:	dec    ebp
  420b0c:	or     ah,dh
  420b0e:	xor    cl,BYTE PTR ds:0x18e778b2
  420b14:	int    0x5d
  420b16:	mov    ds:0x123ab56e,eax
  420b1b:	xor    eax,0xa3e02811
  420b20:	in     eax,dx
  420b21:	mov    ebp,0xcd099e43
  420b26:	out    dx,eax
  420b27:	icebp  
  420b28:	sub    DWORD PTR [edx+0x9],eax
  420b2b:	and    ecx,DWORD PTR [ebx+0x514afa24]
  420b31:	xchg   ecx,eax
  420b32:	jecxz  0x420af6
  420b34:	mov    bh,0x73
  420b36:	sbb    bh,dh
  420b38:	pop    ebx
  420b39:	sub    al,0x40
  420b3b:	sub    al,0x46
  420b3d:	or     cl,bh
  420b3f:	push   ebx
  420b40:	out    dx,al
  420b41:	and    DWORD PTR [eax-0x13],edx
  420b44:	test   al,0x5d
  420b46:	sub    al,0xb3
  420b48:	pop    edx
  420b49:	adc    al,0x78
  420b4c:	sti    
  420b4d:	cmp    esi,DWORD PTR [ecx-0x2c731032]
  420b53:	cmp    ecx,DWORD PTR [ecx]
  420b55:	fdivr  DWORD PTR [edx-0x560fdf73]
  420b5b:	fwait
  420b5c:	out    0x79,al
  420b5e:	pop    esp
  420b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b60:	cmp    ebp,DWORD PTR [eax+0x4c]
  420b63:	(bad)  
  420b65:	or     ebp,edx
  420b67:	add    al,0x4
  420b69:	adc    eax,0x7634e7f3
  420b6e:	or     BYTE PTR [ebx],bh
  420b70:	pusha  
  420b71:	(bad)
  420b74:	ja     0x420be7
  420b76:	mov    ch,0x59
  420b78:	int3   
  420b79:	(bad)
  420b7d:	dec    ebp
  420b7e:	fisttp QWORD PTR [edx-0x5b958ade]
  420b84:	sbb    al,0x1b
  420b86:	inc    ebp
  420b87:	fisubr WORD PTR [edi-0x62519349]
  420b8d:	xor    eax,0xcfc0dea3
  420b92:	adc    DWORD PTR [eax+0x33017b29],esp
  420b98:	retf   
  420b99:	div    BYTE PTR [esi-0x74]
  420b9c:	data16 fidivr DWORD PTR [eax]
  420b9f:	int    0xd9
  420ba1:	push   es
  420ba2:	adc    cl,bl
  420ba4:	ss in  eax,dx
  420ba6:	push   esp
  420ba7:	mov    ch,BYTE PTR [esi+0x19]
  420baa:	xchg   ecx,eax
  420bab:	mov    ebp,0x4650066b
  420bb0:	scas   eax,DWORD PTR es:[edi]
  420bb1:	clc    
  420bb2:	outs   dx,DWORD PTR ds:[esi]
  420bb3:	add    cl,ch
  420bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb6:	mov    eax,0x4b6636c6
  420bbb:	pop    esp
  420bbc:	mov    bl,BYTE PTR [ecx]
  420bbe:	push   ecx
  420bbf:	jle    0x420b4e
  420bc1:	fst    DWORD PTR [edi+0x43]
  420bc4:	adc    al,0x29
  420bc6:	std    
  420bc7:	clc    
  420bc8:	retf   0x66a0
  420bcb:	fisttp WORD PTR [ecx-0x2cff556a]
  420bd1:	cmp    al,0xc6
  420bd3:	mov    ebp,0xb3570929
  420bd8:	cmp    BYTE PTR [eax+0xe],dh
  420bdb:	call   0xd54f6c97
  420be0:	mov    al,0xd1
  420be2:	add    BYTE PTR [esi+0xc],dh
  420be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420be6:	add    eax,0xc9560bff
  420beb:	repz scas al,BYTE PTR es:[edi]
  420bed:	pop    ds
  420bee:	enter  0x1072,0x10
  420bf2:	(bad)  
  420bf3:	mov    eax,ds:0xf21e5f42
  420bf8:	sbb    eax,0xb42a281f
  420bfd:	cmp    al,0x1
  420bff:	mov    esi,0x29fcca20
  420c04:	(bad)  
  420c05:	mov    ecx,0xcb6b2f5c
  420c0a:	add    DWORD PTR [edi+0x45],esi
  420c0d:	push   ecx
  420c0e:	push   ebp
  420c0f:	xchg   esi,eax
  420c10:	jae    0x420c37
  420c12:	xlat   BYTE PTR ds:[ebx]
  420c13:	ins    BYTE PTR es:[edi],dx
  420c14:	sub    BYTE PTR [edi-0x21],ah
  420c17:	int    0x70
  420c19:	iret   
  420c1a:	fist   DWORD PTR [ecx+0x34176681]
  420c20:	jne    0x420c51
  420c22:	mov    ecx,0xd7258ab7
  420c27:	bound  eax,QWORD PTR [eax+ebp*4-0x52]
  420c2b:	jecxz  0x420bd2
  420c2d:	sub    al,0x6a
  420c2f:	int    0x89
  420c31:	nop
  420c32:	adc    dh,0xac
  420c35:	push   ebp
  420c36:	test   DWORD PTR [eax-0x61],0xbdfe1181
  420c3d:	dec    esi
  420c3e:	mov    ah,cl
  420c40:	(bad)  
  420c41:	daa    
  420c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c43:	daa    
  420c44:	dec    ecx
  420c45:	retf   
  420c46:	loopne 0x420bea
  420c48:	jb     0x420c64
  420c4a:	mov    bh,0x2d
  420c4c:	cdq    
  420c4d:	shl    ch,0xf5
  420c50:	scas   eax,DWORD PTR es:[edi]
  420c51:	sbb    al,0x17
  420c53:	sub    al,0xe5
  420c55:	test   eax,0xfe453938
  420c5a:	pop    edx
  420c5b:	and    DWORD PTR [esi-0x57f03b4f],0x54
  420c62:	or     eax,0x88691c1
  420c67:	loope  0x420c92
  420c69:	cmp    al,0xbd
  420c6b:	jmp    0xd84a:0x1f4704be
  420c72:	cmp    al,BYTE PTR [edx]
  420c74:	(bad)  
  420c75:	adc    DWORD PTR [ecx+0x7a4a82a3],ecx
  420c7b:	jecxz  0x420ce3
  420c7d:	cmc    
  420c7e:	mov    ds:0xd369e697,eax
  420c83:	cmp    esp,DWORD PTR [eax-0x67]
  420c86:	dec    ebx
  420c87:	jno    0x420c43
  420c89:	push   ebp
  420c8a:	add    DWORD PTR [ebx],ebx
  420c8c:	xchg   ebx,eax
  420c8d:	jns    0x420c65
  420c8f:	pop    esp
  420c90:	iret   
  420c91:	ins    BYTE PTR es:[edi],dx
  420c92:	test   ch,dh
  420c94:	inc    ecx
  420c95:	in     eax,0x66
  420c97:	dec    eax
  420c98:	jae    0x420c6e
  420c9a:	cs xchg esi,eax
  420c9c:	pop    esp
  420c9d:	div    DWORD PTR [edi+edi*1]
  420ca0:	push   ds
  420ca1:	push   esi
  420ca2:	dec    eax
  420ca3:	pop    ebp
  420ca4:	mov    ebx,0x56c24ae6
  420ca9:	pop    ecx
  420caa:	or     ah,BYTE PTR [ebp-0x64bf0e66]
  420cb0:	jecxz  0x420ce2
  420cb2:	addr16 mov ch,0x54
  420cb5:	pop    ss
  420cb6:	adc    ebp,edx
  420cb8:	xchg   ebx,eax
  420cb9:	int    0x4
  420cbb:	fnstenv [edi]
  420cbd:	loop   0x420c44
  420cbf:	ds ins DWORD PTR es:[edi],dx
  420cc1:	repnz push edi
  420cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cc4:	mov    edi,0x9635201c
  420cc9:	outs   dx,BYTE PTR ds:[esi]
  420cca:	mov    eax,DWORD PTR [edi-0x30265927]
  420cd0:	xchg   ebx,eax
  420cd1:	mov    esp,edx
  420cd3:	push   esp
  420cd4:	pop    edi
  420cd5:	mov    ds:0xf6fa456d,eax
  420cda:	cmp    dh,BYTE PTR [eax-0x13]
  420cdd:	out    0x8e,al
  420cdf:	mov    WORD PTR [esi+0x32],?
  420ce2:	pop    esp
  420ce3:	xor    bh,BYTE PTR [ebx-0x62ec3b2b]
  420ce9:	sbb    BYTE PTR [esi+0x6d],cl
  420cec:	stos   BYTE PTR es:[edi],al
  420ced:	fld    TBYTE PTR [eax+0x155d7334]
  420cf3:	jbe    0x420c7a
  420cf5:	rol    DWORD PTR [edx+eiz*2],cl
  420cf8:	test   eax,0xccc6f54d
  420cfd:	and    ecx,DWORD PTR [ecx-0x1d0bcfe3]
  420d03:	ret    0x3d4
  420d06:	push   esi
  420d07:	repnz sub al,0xc2
  420d0a:	(bad)  
  420d0b:	sbb    edi,DWORD PTR [ebx]
  420d0d:	xchg   DWORD PTR [ecx],esp
  420d0f:	cmp    eax,0x7157aac7
  420d14:	xchg   esp,eax
  420d15:	test   al,0x2d
  420d17:	pusha  
  420d18:	hlt    
  420d19:	icebp  
  420d1a:	test   BYTE PTR [edx+0x66126307],cl
  420d20:	mov    bl,0x62
  420d22:	jae    0x420cda
  420d24:	(bad)  
  420d25:	push   cs
  420d26:	sahf   
  420d27:	call   0xa91f:0xbb15cbf3
  420d2e:	ret    
  420d2f:	out    0xf9,al
  420d31:	test   eax,0xa748621a
  420d36:	jne    0x420d34
  420d38:	fisttp QWORD PTR [eax+ebp*1-0x157ef74]
  420d3f:	xchg   esi,eax
  420d40:	leave  
  420d41:	pop    ds
  420d42:	in     eax,0x45
  420d44:	and    BYTE PTR [ebx+0x59],0x6d
  420d48:	nop
  420d49:	loope  0x420d38
  420d4b:	mov    BYTE PTR [ecx],al
  420d4d:	mov    esp,gs
  420d4f:	dec    ebp
  420d50:	loopne 0x420db1
  420d52:	pop    edx
  420d53:	ja     0x420ceb
  420d55:	ret    0x40be
  420d58:	mov    bh,0xd3
  420d5a:	mov    bh,0x7f
  420d5c:	aas    
  420d5d:	jg     0x420d5b
  420d5f:	xor    ebp,DWORD PTR [edx+0x4561f658]
  420d65:	sub    BYTE PTR [edi],cl
  420d67:	cld    
  420d68:	data16 lods al,BYTE PTR ds:[esi]
  420d6a:	in     eax,dx
  420d6b:	sar    DWORD PTR [edx-0x61e843dd],0x61
  420d72:	shl    DWORD PTR [edi+0x3ca7043c],1
  420d78:	push   edx
  420d79:	jp     0x420dcb
  420d7b:	sti    
  420d7c:	ins    BYTE PTR es:[edi],dx
  420d7d:	push   ebx
  420d7e:	add    BYTE PTR [ecx-0xebb2c23],al
  420d84:	mov    bh,0x1d
  420d86:	xor    bl,BYTE PTR [ecx+0x76]
  420d89:	dec    esp
  420d8a:	cli    
  420d8b:	inc    ecx
  420d8c:	retf   
  420d8d:	inc    DWORD PTR [ecx+0x1a80e14b]
  420d93:	or     dh,BYTE PTR [bp+si]
  420d96:	mov    ebx,0xb9123dcf
  420d9b:	std    
  420d9c:	push   esi
  420d9d:	jle    0x420d43
  420d9f:	popa   
  420da0:	dec    ebp
  420da1:	dec    ecx
  420da2:	mov    eax,ds:0xe7b1d19d
  420da7:	xchg   esi,eax
  420da8:	jne    0x420de5
  420daa:	aaa    
  420dab:	jno    0x420da5
  420dad:	xor    DWORD PTR ds:0x8f875d50,edi
  420db3:	cs popa 
  420db5:	or     BYTE PTR [edi+0x43],bl
  420db8:	dec    edx
  420db9:	jecxz  0x420d7b
  420dbb:	jnp    0x420dc0
  420dbd:	cli    
  420dbe:	fisub  DWORD PTR [esp+ebp*4+0x22]
  420dc2:	hlt    
  420dc3:	or     DWORD PTR [edi+0x2d],ebx
  420dc6:	aaa    
  420dc7:	bound  esp,QWORD PTR [esi]
  420dc9:	cwde   
  420dca:	mov    fs,WORD PTR [edx+0x79]
  420dcd:	adc    ebp,DWORD PTR [edi+0x5f]
  420dd0:	xchg   ebp,eax
  420dd1:	mov    ds,WORD PTR [esi+0x140ed9c]
  420dd7:	pop    ebx
  420dd8:	fs add edx,ecx
  420ddb:	jns    0x420d86
  420ddd:	add    al,0x5a
  420ddf:	mov    eax,0xdc455c3c
  420de4:	pop    ecx
  420de5:	push   ebx
  420de6:	fisttp QWORD PTR [eax]
  420de8:	inc    ebx
  420de9:	add    DWORD PTR [edi+0x43d77435],esp
  420def:	sbb    bh,BYTE PTR [ebx-0xc]
  420df2:	inc    ebx
  420df3:	jnp    0x420e10
  420df5:	jb     0x420e0a
  420df7:	call   0xc5d32953
  420dfc:	lods   al,BYTE PTR ds:[esi]
  420dfd:	xchg   ah,ah
  420dff:	mov    dh,0x8e
  420e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e02:	scas   al,BYTE PTR es:[edi]
  420e03:	add    ebx,DWORD PTR [ecx-0x6ef74a6]
  420e09:	shr    BYTE PTR [edi-0x21],0xdd
  420e0d:	(bad)  
  420e0e:	cld    
  420e0f:	sahf   
  420e10:	push   ds
  420e11:	repz add DWORD PTR [eax],0x11467ba0
  420e18:	lds    ebp,FWORD PTR [esp+edi*8-0x2]
  420e1c:	arpl   WORD PTR [eax],bx
  420e1e:	in     eax,0x8d
  420e20:	test   eax,0x51a02016
  420e25:	xchg   edi,eax
  420e26:	cmp    eax,0xc0c07892
  420e2b:	push   esp
  420e2c:	jno    0x420e2e
  420e2e:	push   esp
  420e2f:	dec    eax
  420e30:	lock mov WORD PTR [bx+di],?
  420e34:	fcomp  DWORD PTR [ebp+0x4b]
  420e37:	xor    dh,ah
  420e39:	pop    es
  420e3a:	fisttp QWORD PTR [edx-0x6a580988]
  420e40:	out    dx,al
  420e41:	and    BYTE PTR [ecx],0xb6
  420e44:	adc    ch,BYTE PTR [ebp+0x22]
  420e47:	dec    eax
  420e48:	dec    ebx
  420e49:	xchg   esi,eax
  420e4a:	inc    esi
  420e4b:	mov    ebp,0x4eac8874
  420e50:	ja     0x420e83
  420e52:	xor    eax,0x19437cf9
  420e57:	pop    ds
  420e58:	push   ss
  420e59:	jmp    0x5849c418
  420e5e:	or     al,0xbc
  420e60:	dec    esp
  420e61:	cmc    
  420e62:	pop    edi
  420e63:	mov    eax,0xd4e73396
  420e68:	popf   
  420e69:	or     edi,esi
  420e6b:	and    al,0xb
  420e6d:	imul   BYTE PTR [edi+0x1b9b2de0]
  420e73:	dec    esp
  420e74:	in     al,0xd4
  420e76:	sahf   
  420e77:	lock cmc 
  420e79:	jno    0x420e47
  420e7b:	mov    al,ds:0x98dc5594
  420e80:	mov    edx,0x4be91dd3
  420e85:	retf   0x2f6a
  420e88:	lock fsubr st(1),st
  420e8b:	fsubr  DWORD PTR [edi+ecx*2-0x21]
  420e8f:	daa    
  420e90:	adc    esp,DWORD PTR [esi]
  420e92:	out    dx,eax
  420e93:	dec    eax
  420e94:	jns    0x420ee6
  420e96:	outs   dx,DWORD PTR ds:[esi]
  420e97:	test   BYTE PTR [ebp-0x7d],bl
  420e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e9b:	ret    0x456d
  420e9e:	dec    edx
  420e9f:	rcr    DWORD PTR [ecx],cl
  420ea1:	hlt    
  420ea2:	and    BYTE PTR fs:[ebx-0x740cf528],bh
  420ea9:	mov    DWORD PTR [eax],ebx
  420eab:	retf   
  420eac:	pop    ebp
  420ead:	ins    BYTE PTR es:[edi],dx
  420eae:	mov    eax,ebp
  420eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb1:	imul   eax,DWORD PTR [ebx-0x6e4de7f4],0xf85ccac6
  420ebb:	cmc    
  420ebc:	add    al,0x66
  420ebe:	pusha  
  420ebf:	and    bh,dl
  420ec1:	pop    eax
  420ec2:	iret   
  420ec3:	cdq    
  420ec4:	or     bl,BYTE PTR [edi+eax*8-0x5347b871]
  420ecb:	pop    ds
  420ecc:	and    DWORD PTR [edx-0x2b],edx
  420ecf:	adc    edi,eax
  420ed1:	mov    ch,ch
  420ed3:	inc    edi
  420ed4:	inc    edx
  420ed5:	add    eax,0xf7e867c5
  420eda:	mov    ds:0xb26fbda3,eax
  420edf:	xor    al,0x8f
  420ee1:	adc    eax,esp
  420ee3:	dec    eax
  420ee4:	or     al,0x1
  420ee6:	dec    edi
  420ee7:	(bad)  
  420ee8:	call   0xf4fe9243
  420eed:	xchg   esi,eax
  420eee:	mov    ds:0xa7945eba,al
  420ef3:	pop    esp
  420ef4:	xchg   ch,cl
  420ef6:	pop    ecx
  420ef7:	xor    DWORD PTR [ecx*8-0x465e625b],0xc448fb0b
  420f02:	sub    edi,DWORD PTR [esi+0x12134277]
  420f08:	cld    
  420f09:	fiadd  WORD PTR [ebx+0x7231590]
  420f0f:	cmp    ebx,DWORD PTR [esi+0x26]
  420f12:	xlat   BYTE PTR ds:[ebx]
  420f13:	xchg   esp,eax
  420f14:	dec    edi
  420f15:	add    eax,0x8ff1a765
  420f1a:	mov    ebx,0x248b47fa
  420f1f:	enter  0x7362,0x7e
  420f23:	sbb    ah,dl
  420f25:	sbb    al,0x4f
  420f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f28:	sub    BYTE PTR ds:0x42637230,0xd7
  420f30:	pop    edi
  420f31:	push   0x9
  420f33:	add    ebx,DWORD PTR [ecx+0x52438e5e]
  420f39:	inc    ecx
  420f3a:	and    dl,dh
  420f3c:	jecxz  0x420f6b
  420f3e:	lahf   
  420f3f:	xlat   BYTE PTR ds:[ebx]
  420f40:	inc    ecx
  420f41:	pop    eax
  420f42:	mov    ds:0x51e9879,al
  420f47:	adc    ah,bh
  420f49:	push   esi
  420f4a:	enter  0xc0ba,0xa3
  420f4e:	popf   
  420f4f:	mov    BYTE PTR ds:0xc939c3b1,al
  420f55:	ret    
  420f56:	pop    ebx
  420f57:	pop    esp
  420f58:	adc    al,0x55
  420f5a:	ja     0x420f91
  420f5c:	xchg   ebp,eax
  420f5d:	lock rol DWORD PTR [esi],0x96
  420f61:	mov    bl,0xe7
  420f63:	pop    esi
  420f64:	(bad)
  420f67:	mov    eax,0xfb5b48bf
  420f6c:	pop    edx
  420f6d:	adc    esi,DWORD PTR [edi]
  420f6f:	cli    
  420f70:	fstp   QWORD PTR [esi-0x18]
  420f73:	mov    DWORD PTR ds:0x6786d559,esp
  420f79:	jg     0x420f86
  420f7b:	xor    eax,0x87aca759
  420f80:	pop    edi
  420f81:	icebp  
  420f82:	sub    al,BYTE PTR [ecx-0x37a89fc0]
  420f88:	mov    dl,dl
  420f8a:	pop    edi
  420f8b:	push   cs
  420f8c:	dec    ebp
  420f8d:	hlt    
  420f8e:	hlt    
  420f8f:	push   edx
  420f90:	and    al,0xbd
  420f92:	int    0x6e
  420f94:	out    0x28,eax
  420f96:	adc    dl,ah
  420f98:	scas   eax,DWORD PTR es:[edi]
  420f99:	jmp    0x5753cb25
  420f9e:	mov    ch,0x65
  420fa0:	sub    al,BYTE PTR [ebx-0x63964a42]
  420fa6:	adc    BYTE PTR [edi],0x1
  420fa9:	(bad)  [ebx+0x7b26c162]
  420faf:	out    0x9c,al
  420fb1:	and    eax,0x43216b9d
  420fb6:	adc    esp,DWORD PTR [ecx]
  420fb8:	fwait
  420fb9:	and    DWORD PTR [edx],esi
  420fbb:	adc    DWORD PTR [ebx-0x33],eax
  420fbe:	ss mov esi,0x19cd8ce3
  420fc4:	(bad)  
  420fc6:	xchg   ebx,eax
  420fc7:	push   ds
  420fc8:	call   0x2336:0x8efe2148
  420fcf:	shl    dh,cl
  420fd1:	xchg   ebp,eax
  420fd2:	dec    ebx
  420fd3:	mov    ch,0x10
  420fd5:	xchg   BYTE PTR [edi+0x1e],cl
  420fd8:	sub    DWORD PTR [edx-0x3640c34e],edx
  420fde:	pop    ecx
  420fdf:	cmc    
  420fe0:	adc    eax,0xb26ea16f
  420fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fe6:	lock dec edi
  420fe8:	js     0x42104a
  420fea:	imul   edx,DWORD PTR [edx],0xfffffffb
  420fed:	and    BYTE PTR [eax],cl
  420fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff0:	in     eax,0x6d
  420ff2:	pop    ebp
  420ff3:	push   0x3d
  420ff5:	inc    esp
  420ff6:	xchg   edx,eax
  420ff7:	not    BYTE PTR [ebp+0x133f476e]
  420ffd:	mov    ecx,0xfef2a07b
  421002:	fimul  WORD PTR [ecx+0x6a]
  421005:	adc    al,0x8e
  421007:	(bad)  
  421008:	lahf   
  421009:	jmp    0x421005
  42100b:	pop    eax
  42100c:	xchg   edi,eax
  42100d:	call   FWORD PTR [edi]
  42100f:	je     0x421073
  421011:	push   ss
  421012:	sub    DWORD PTR [eax],eax
  421014:	in     eax,0xc
  421016:	jl     0x420fb9
  421018:	test   al,0x9c
  42101a:	add    al,0xdb
  42101c:	ss mov bh,0xc5
  42101f:	sbb    bh,ah
  421021:	mov    dl,0x81
  421023:	rcl    BYTE PTR [edx+0x52164656],1
  421029:	bound  esp,QWORD PTR [ebp+edx*8-0x242486b2]
  421030:	inc    edi
  421031:	std    
  421032:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  421034:	mov    eax,ds:0x27efe875
  421039:	inc    ecx
  42103a:	mov    ebx,0xe138dc86
  42103f:	cwde   
  421040:	inc    ecx
  421041:	cmp    eax,0x11f2d112
  421046:	pop    ecx
  421047:	fcomp  DWORD PTR [edi+ecx*4+0x55a2cde7]
  42104e:	pop    es
  42104f:	je     0x42109b
  421051:	cdq    
  421052:	dec    edi
  421053:	es mov edx,0x156fc388
  421059:	cwde   
  42105a:	loopne 0x42102c
  42105c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105d:	aaa    
  42105e:	xor    BYTE PTR [edx],bl
  421060:	adc    al,0x3f
  421062:	fisttp WORD PTR [edx]
  421064:	dec    eax
  421065:	enter  0xc9a9,0x42
  421069:	sti    
  42106a:	mov    eax,0xf1bc2fcc
  42106f:	inc    ebx
  421070:	mov    dh,0x64
  421072:	clc    
  421073:	pop    ebx
  421074:	and    DWORD PTR [ebx-0x78],ecx
  421077:	(bad)  
  421078:	mov    edi,gs
  42107a:	mov    DWORD PTR [esi-0x5],eax
  42107d:	adc    ebp,eax
  42107f:	sub    edx,ebp
  421081:	imul   edx,DWORD PTR [edx],0x12de2ac9
  421087:	and    esi,edx
  421089:	test   ebp,esi
  42108b:	in     eax,dx
  42108c:	aas    
  42108d:	sbb    al,0x36
  42108f:	sbb    eax,0x89457414
  421094:	xchg   edi,eax
  421095:	loope  0x4210eb
  421097:	mov    ds:0x181ab360,eax
  42109c:	aad    0xc2
  42109e:	lds    ebp,FWORD PTR [ebx+0x4e]
  4210a1:	pop    es
  4210a2:	ds pop ss
  4210a4:	push   ds
  4210a5:	lods   eax,DWORD PTR ds:[esi]
  4210a6:	push   edx
  4210a7:	ins    BYTE PTR es:[edi],dx
  4210a8:	imul   esi,DWORD PTR [esi-0x14c217a8],0xffffff8b
  4210af:	lods   eax,DWORD PTR ds:[esi]
  4210b0:	sahf   
  4210b1:	xor    DWORD PTR [esp+eiz*2-0x27],0x75f7e7bd
  4210b9:	sbb    BYTE PTR [ebp-0x16],dl
  4210bc:	ret    0xc81b
  4210bf:	mov    ebp,0x798781c8
  4210c4:	sti    
  4210c5:	mov    esp,0xfba4a71e
  4210ca:	sbb    ebx,0xedd95983
  4210d0:	iret   
  4210d1:	dec    ebx
  4210d2:	push   edx
  4210d3:	inc    esp
  4210d4:	cdq    
  4210d5:	mov    eax,0xe3f47d82
  4210da:	dec    eax
  4210db:	(bad)  
  4210dc:	aad    0x18
  4210de:	add    eax,0x727b2232
  4210e3:	sub    BYTE PTR [ebp-0x18],0x91
  4210e7:	mov    ecx,0xb88d8537
  4210ec:	arpl   WORD PTR ds:0x77370332,bp
  4210f2:	pop    ecx
  4210f3:	dec    esi
  4210f4:	cmp    BYTE PTR [ebx],0x2b
  4210f7:	nop
  4210f8:	mov    edi,DWORD PTR [eax]
  4210fa:	pop    es
  4210fb:	ror    esp,cl
  4210fd:	push   edx
  4210fe:	cmp    eax,0xfdd065dc
  421103:	pop    ds
  421104:	test   edi,eax
  421106:	jb     0x421182
  421108:	sbb    al,0xff
  42110a:	js     0x421153
  42110c:	ret    
  42110d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42110e:	fs push cs
  421110:	and    BYTE PTR [esi],al
  421112:	cmc    
  421113:	jo     0x42111a
  421115:	out    0x91,al
  421117:	out    0x85,al
  421119:	ret    
  42111a:	shr    cl,cl
  42111c:	push   0xffffffb5
  42111e:	sbb    ecx,DWORD PTR [esi-0x40]
  421121:	push   0xacadcbec
  421126:	scas   eax,DWORD PTR es:[edi]
  421127:	ret    
  421128:	test   BYTE PTR [edx+0x3bf03436],bl
  42112e:	pop    fs
  421130:	dec    ebx
  421131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421132:	lea    eax,[eiz*4+0x308033f7]
  421139:	mov    edx,0xaf18aaa3
  42113e:	push   esi
  42113f:	and    esp,DWORD PTR [ecx+0x6eb6c9ac]
  421145:	loope  0x42115e
  421147:	les    esp,FWORD PTR [ebx-0x7c49dc86]
  42114d:	mov    WORD PTR [ecx-0x5baff27d],ds
  421153:	xchg   esi,eax
  421154:	mov    esp,0xf37edba2
  421159:	and    bl,ah
  42115b:	jns    0x42113b
  42115d:	mov    ch,0xfe
  42115f:	pusha  
  421160:	xchg   esi,eax
  421161:	adc    eax,0x24ba9f3d
  421166:	stos   BYTE PTR es:[edi],al
  421167:	call   0xfaa3:0x3eb5fbfb
  42116e:	mov    esp,0xc3596b35
  421173:	jecxz  0x4211d5
  421175:	cmp    al,0x12
  421177:	xor    DWORD PTR ds:0xa3cab758,0xcc387052
  421181:	add    ebp,ecx
  421183:	jmp    0xf0ae7276
  421188:	cdq    
  421189:	push   ds
  42118a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118b:	add    al,0xe3
  42118d:	jno    0x4211f0
  42118f:	xchg   ecx,eax
  421190:	sbb    DWORD PTR [eax+0x2ebab062],ecx
  421196:	loop   0x421141
  421198:	into   
  421199:	lds    esp,FWORD PTR [edx]
  42119b:	test   DWORD PTR [ebp-0x2d],ecx
  42119e:	adc    dh,BYTE PTR [ecx-0x73]
  4211a1:	test   BYTE PTR [edi+0x92f26bb],dl
  4211a7:	pavgw  mm0,QWORD PTR [edx]
  4211aa:	cmp    BYTE PTR [ecx-0x66e6e1cd],dl
  4211b0:	sub    BYTE PTR [edi+0x13a1e16],0x6f
  4211b7:	mov    esp,0xab45e310
  4211bc:	imul   edx,DWORD PTR [eax+0x67],0x4a
  4211c0:	or     BYTE PTR [ebx-0x6d],bh
  4211c3:	dec    ecx
  4211c4:	ret    
  4211c5:	in     al,0x9b
  4211c7:	add    al,0xe8
  4211c9:	enter  0xceca,0xc5
  4211cd:	or     esi,DWORD PTR [ecx]
  4211cf:	imul   ebx,DWORD PTR [esi],0x3a83da17
  4211d5:	sbb    eax,0x5c05608
  4211da:	and    eax,0x7412d2a7
  4211df:	dec    ebx
  4211e0:	jns    0x4211d1
  4211e2:	add    al,0xc2
  4211e4:	out    0x4e,al
  4211e6:	or     al,BYTE PTR [ebx]
  4211e8:	sub    BYTE PTR [edx],cl
  4211ea:	fsub   st,st(2)
  4211ec:	mov    bh,0xbb
  4211ee:	adc    DWORD PTR [ebp-0x4d2f3a34],esp
  4211f4:	jecxz  0x421271
  4211f6:	sbb    cl,cl
  4211f8:	inc    ebx
  4211f9:	push   ecx
  4211fa:	cmp    al,0x48
  4211fc:	fcomip st,st(6)
  4211fe:	and    BYTE PTR [edx-0x1ce0ebb2],al
  421204:	jg     0x4211c9
  421206:	call   0xcc78d9ee
  42120b:	into   
  42120c:	inc    esi
  42120d:	mov    ebx,0xa8545ad9
  421212:	mov    ecx,0x7f4e2a82
  421217:	push   ds
  421218:	fstp   QWORD PTR [edx-0xc6479ec]
  42121e:	cmp    eax,0x3c2d0108
  421223:	pop    ss
  421224:	and    al,0x2f
  421226:	cwde   
  421227:	pop    edi
  421228:	fstp   st(1)
  42122a:	xchg   edi,eax
  42122b:	mov    eax,ds:0xf2ef6d78
  421230:	clc    
  421231:	jp     0x421296
  421233:	add    eax,0xabefb3db
  421238:	sbb    ch,BYTE PTR [edi]
  42123a:	add    al,0xf8
  42123c:	sub    DWORD PTR [edx+0x32],esp
  42123f:	mov    al,ds:0xb5496062
  421244:	outs   dx,DWORD PTR ds:[esi]
  421245:	aam    0x3b
  421247:	fneni(8087 only) 
  421249:	jnp    0x4212c9
  42124b:	(bad)  
  42124c:	loope  0x4211f9
  42124e:	popf   
  42124f:	int    0xbf
  421251:	cmp    al,0xea
  421253:	ja     0x4212a4
  421255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421256:	lods   al,BYTE PTR ds:[esi]
  421257:	cmc    
  421258:	mov    ch,0x45
  42125a:	dec    edi
  42125b:	inc    edx
  42125c:	ins    BYTE PTR es:[edi],dx
  42125d:	and    edi,DWORD PTR [eax+0x1534809]
  421263:	not    DWORD PTR [eax]
  421265:	loopne 0x4211fc
  421267:	jle    0x421200
  421269:	adc    DWORD PTR [ebx-0x3f3a9cff],ebx
  42126f:	add    al,0xf1
  421271:	xor    ch,BYTE PTR [ebx]
  421273:	jnp    0x42125e
  421275:	je     0x421272
  421277:	fistp  WORD PTR [edx+0x63]
  42127a:	jg     0x421223
  42127c:	clc    
  42127d:	mov    esp,0xbcc576f4
  421282:	add    ecx,edi
  421284:	inc    edx
  421285:	mov    ebx,esp
  421287:	add    BYTE PTR [ecx],ch
  421289:	add    BYTE PTR [ebp+edx*1+0x75],0xab
  42128e:	jbe    0x4212fa
  421290:	repz int3 
  421292:	xor    eax,0x3d17680b
  421297:	(bad)  
  421298:	fnstsw WORD PTR [ecx-0x4c]
  42129b:	ins    DWORD PTR es:[edi],dx
  42129c:	retf   
  42129d:	repnz sub DWORD PTR [esi-0x60],edi
  4212a1:	iret   
  4212a2:	gs sbb esi,ebp
  4212a5:	fucomp st(5)
  4212a7:	sub    edx,edi
  4212a9:	and    DWORD PTR ds:0x16e0c8a1,ecx
  4212af:	xchg   ebx,eax
  4212b0:	sahf   
  4212b1:	(bad)  
  4212b2:	cmc    
  4212b3:	mov    ebp,0x1c54eb42
  4212b8:	ret    
  4212b9:	or     BYTE PTR [edx-0x17],al
  4212bc:	jle    0x42128c
  4212be:	in     eax,dx
  4212bf:	mov    bl,0xfc
  4212c1:	xchg   bh,ah
  4212c3:	add    BYTE PTR ds:0x2c5062b6,al
  4212c9:	cmp    eax,0xf142a9af
  4212ce:	inc    esp
  4212cf:	cs sbb dh,bh
  4212d2:	imul   esi,DWORD PTR [edi],0xfee49d6c
  4212d8:	shl    DWORD PTR [ebx+0x5a],1
  4212db:	or     BYTE PTR [esi-0x58],bh
  4212de:	push   0x950242f9
  4212e3:	push   eax
  4212e4:	jge    0x4212aa
  4212e6:	xor    DWORD PTR [ecx+0x15],0xb4bfd5d
  4212ed:	push   edi
  4212ee:	mov    edx,0x8b34be3f
  4212f3:	shr    DWORD PTR [ecx],cl
  4212f5:	leave  
  4212f6:	test   BYTE PTR [eax+0x3e463430],0x8e
  4212fd:	dec    edx
  4212fe:	dec    esi
  4212ff:	mov    esp,0xe41b4e95
  421304:	adc    dh,dh
  421306:	xchg   BYTE PTR [edx+0x4d],cl
  421309:	dec    esi
  42130a:	sbb    ch,cl
  42130c:	loope  0x42136c
  42130e:	pop    esi
  42130f:	in     eax,dx
  421310:	repnz mov esp,0x57f984b3
  421316:	ins    BYTE PTR es:[edi],dx
  421317:	and    ebx,DWORD PTR [ecx-0x6e]
  42131a:	cmp    al,0x17
  42131c:	pop    ds
  42131d:	lods   al,BYTE PTR ds:[esi]
  42131e:	and    eax,0xe3a7133f
  421323:	add    al,0x16
  421325:	lea    esi,[esi-0x1230704f]
  42132b:	fiadd  WORD PTR [ebx-0x22969054]
  421331:	jg     0x421380
  421333:	mov    ecx,0x9eb4f7fc
  421338:	jb     0x4213ae
  42133a:	fwait
  42133b:	(bad)  
  42133c:	sub    DWORD PTR gs:[esi],0x5a
  421340:	and    DWORD PTR [eax+0x55],0x36d3d3c3
  421347:	dec    ebx
  421348:	or     DWORD PTR [esi-0x15],0xffffffd7
  42134c:	ins    BYTE PTR es:[edi],dx
  42134d:	lods   eax,DWORD PTR ds:[esi]
  42134e:	dec    eax
  42134f:	rcr    BYTE PTR [edx],cl
  421351:	retf   0x9df1
  421354:	outs   dx,BYTE PTR ds:[esi]
  421355:	(bad)  
  421356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421357:	ret    
  421358:	sub    DWORD PTR [eax+0x30],ecx
  42135b:	ins    DWORD PTR es:[edi],dx
  42135c:	mov    gs,WORD PTR [edx]
  42135e:	jle    0x42131c
  421360:	jmp    0xbc25:0xe25ca483
  421367:	or     al,0xab
  421369:	mov    ecx,0xc10fe817
  42136e:	sti    
  42136f:	mov    ebx,0x46140789
  421374:	into   
  421375:	aad    0xf9
  421377:	cmp    ecx,DWORD PTR [edx]
  421379:	xor    ebx,eax
  42137b:	mov    ds:0x513ec297,eax
  421380:	cwde   
  421381:	mov    ebp,0xeb712130
  421386:	xor    bl,cl
  421388:	fxam   
  42138a:	xor    BYTE PTR [esi-0x65a41c1d],ch
  421390:	pop    ds
  421391:	ret    0x84d1
  421394:	and    eax,0xe878b4d7
  421399:	add    eax,0xea47d13e
  42139e:	ficom  WORD PTR [ebx+0x56]
  4213a1:	ss std 
  4213a3:	scas   eax,DWORD PTR es:[edi]
  4213a4:	in     eax,0xf2
  4213a6:	loop   0x4213bb
  4213a8:	imul   esi,esi,0x5d19ff2e
  4213ae:	cli    
  4213af:	jp     0x421424
  4213b1:	(bad)  
  4213b2:	jmp    0xab645f88
  4213b7:	dec    ebp
  4213b8:	and    DWORD PTR [ebx+ebp*8+0x7],ebp
  4213bc:	stos   DWORD PTR es:[edi],eax
  4213bd:	stos   BYTE PTR es:[edi],al
  4213be:	dec    edi
  4213bf:	dec    esi
  4213c0:	push   ebx
  4213c1:	hlt    
  4213c2:	das    
  4213c3:	pop    es
  4213c4:	mov    ecx,0xb79a37e
  4213c9:	fmul   st(0),st
  4213cb:	sbb    eax,DWORD PTR [eax]
  4213cd:	mov    dh,0xd4
  4213cf:	das    
  4213d0:	mov    ecx,0x2ac1e398
  4213d5:	dec    edx
  4213d6:	xchg   DWORD PTR [edi],ecx
  4213d8:	xchg   ebp,eax
  4213d9:	mov    ch,0xef
  4213db:	sbb    al,0xd1
  4213dd:	pop    es
  4213de:	add    esi,ebx
  4213e0:	sbb    edi,DWORD PTR [ebp+0x1eb3dddc]
  4213e6:	or     al,0xf4
  4213e8:	nop    esi
  4213eb:	xchg   esp,edi
  4213ed:	push   bp
  4213ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213f0:	or     bl,dl
  4213f2:	push   0xd
  4213f4:	cmp    BYTE PTR [esi+0x5],dl
  4213f7:	push   esi
  4213f8:	ins    BYTE PTR es:[edi],dx
  4213f9:	jl     0x4213f5
  4213fb:	scas   al,BYTE PTR es:[edi]
  4213fc:	ror    BYTE PTR [ebp+ebx*2-0x1ef31931],cl
  421403:	add    cl,bh
  421405:	fst    QWORD PTR [esp+edx*1]
  421408:	pop    ebx
  421409:	in     al,0xbe
  42140b:	hlt    
  42140c:	not    bh
  42140e:	xchg   edi,eax
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0x781c88e2
  42147c:	and    eax,0x1cd7781
  421481:	add    BYTE PTR [edx+0x0],ah
  421484:	add    BYTE PTR [eax],al
  421486:	outs   dx,DWORD PTR ds:[esi]
  421487:	jg     0x4214bf
  421489:	or     al,0xab
  42148b:	cmp    bl,cl
  42148d:	push   ds
  42148e:	cli    
  42148f:	pusha  
  421490:	jbe    0x42144d
  421492:	popa   
  421493:	xchg   ebx,eax
  421494:	mov    WORD PTR [ebp-0x1f7f5787],cs
  42149a:	mov    edx,0xd1be2578
  42149f:	adc    dh,BYTE PTR [ebp+eiz*8-0x129a0beb]
  4214a6:	xchg   edx,eax
  4214a7:	lods   al,BYTE PTR ds:[esi]
  4214a8:	fidivr DWORD PTR [ebp-0x28]
  4214ab:	test   al,0xa7
  4214ad:	pushf  
  4214ae:	fisub  DWORD PTR [edx+0x2d]
  4214b1:	imul   ebx,DWORD PTR [edx+0x5ed28a16],0x43
  4214b8:	in     al,dx
  4214b9:	pop    ecx
  4214ba:	and    al,0x8e
  4214bc:	gs push esp
  4214be:	sub    ebp,DWORD PTR [ecx]
  4214c0:	lea    edi,[eax+0x5b]
  4214c3:	dec    edi
  4214c4:	ja     0x421467
  4214c6:	lods   eax,DWORD PTR ds:[esi]
  4214c7:	adc    DWORD PTR [ecx],ecx
  4214c9:	and    edi,edx
  4214cb:	jae    0x4214ea
  4214cd:	inc    ecx
  4214ce:	jmp    0x342f:0x172b4300
  4214d5:	cmp    DWORD PTR [ebp+0x12274d88],0x5c324bac
  4214df:	cmp    al,0x25
  4214e1:	and    edi,0x4ccdae46
  4214e7:	add    BYTE PTR es:[eax],al
  4214ea:	add    BYTE PTR [eax],al
  4214ec:	add    BYTE PTR [eax],al
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x87ac99fd
  4214fe:	fxch   st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	bound  eax,QWORD PTR [eax]
  421504:	add    BYTE PTR [eax],al
  421506:	psrld  mm3,QWORD PTR [ebp+0x4901b888]
  42150d:	mov    al,0x65
  42150f:	fdiv   QWORD PTR ds:0xf61ad24e
  421515:	sub    ebp,DWORD PTR [ebx]
  421517:	mov    esi,0xb66efb8c
  42151c:	or     eax,DWORD PTR [ebp+0xf]
  42151f:	out    0x33,al
  421521:	sub    DWORD PTR [ebp*2-0x7798c4aa],ecx
  421528:	bound  edi,QWORD PTR [ebx+0x62]
  42152b:	bound  esp,QWORD PTR [ecx]
  42152d:	test   eax,0x75f51ff8
  421532:	sub    esp,0xc3b26696
  421538:	inc    edx
  421539:	pop    ebp
  42153a:	mov    ah,0xdc
  42153c:	mov    cl,0x59
  42153e:	popa   
  42153f:	xlat   BYTE PTR ds:[ebx]
  421540:	jo     0x4215b3
  421542:	xchg   esi,eax
  421543:	dec    edx
  421544:	clc    
  421545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421546:	outs   dx,BYTE PTR ds:[esi]
  421547:	icebp  
  421548:	add    esp,ebx
  42154a:	sbb    BYTE PTR [ecx-0xedc7ffa],ah
  421550:	test   BYTE PTR [edi-0x69438b1b],bh
  421556:	aas    
  421557:	loope  0x421511
  421559:	inc    edi
  42155a:	mov    bh,0x85
  42155c:	scas   eax,DWORD PTR es:[edi]
  42155d:	inc    ecx
  42155e:	mov    gs,WORD PTR ds:0x658c8cc1
  421564:	inc    ebp
  421565:	cld    
  421566:	popf   
  421567:	lds    eax,FWORD PTR [eax]
  421569:	add    BYTE PTR [eax],al
  42156b:	add    BYTE PTR [eax],al
  42156d:	add    BYTE PTR [edi],bl
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0x729f6b80],0x3b
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	bound  eax,QWORD PTR [eax]
  421584:	add    BYTE PTR [eax],al
  421586:	and    BYTE PTR [ebx-0x44],0x95
  42158a:	mov    ds:0x6c691b17,eax
  42158f:	jg     0x421562
  421591:	icebp  
  421592:	mov    edi,0x9731a30c
  421597:	or     ch,BYTE PTR [esi+eiz*1-0x4c]
  42159b:	ins    DWORD PTR es:[edi],dx
  42159c:	hlt    
  42159d:	mov    DWORD PTR [ebx+0x7ff1e5d0],esp
  4215a3:	outs   dx,DWORD PTR ds:[esi]
  4215a4:	lock aam 0xbf
  4215a7:	and    edx,DWORD PTR [edi-0x57]
  4215aa:	jecxz  0x421602
  4215ac:	inc    edi
  4215ad:	fucomip st,st(5)
  4215af:	test   BYTE PTR [eax+0x7e],dh
  4215b2:	sbb    DWORD PTR [edx+0x58],edx
  4215b5:	pop    ecx
  4215b6:	cmp    ecx,esi
  4215b8:	dec    ebx
  4215b9:	fnop   
  4215bb:	out    0x0,al
  4215bd:	inc    edi
  4215be:	cmp    BYTE PTR [ebp+0x56],0xbe
  4215c2:	mov    al,0x70
  4215c4:	fdivr  DWORD PTR [edi+0xe922767]
  4215ca:	adc    BYTE PTR [edi],dh
  4215cc:	scas   eax,DWORD PTR es:[edi]
  4215cd:	mov    ebx,0xce8bdbdb
  4215d2:	js     0x4215e4
  4215d4:	push   edi
  4215d5:	jecxz  0x42155b
  4215d7:	in     al,dx
  4215d8:	pop    esi
  4215d9:	jp     0x42155f
  4215db:	aaa    
  4215dc:	in     eax,0xa3
  4215de:	std    
  4215df:	(bad)
  4215e3:	and    cl,BYTE PTR [ecx+ebp*4+0x7d]
  4215e7:	mov    ds:0x0,eax
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	or     eax,0x9d5d9819
  4215ff:	into   
  421600:	add    DWORD PTR [eax],eax
  421602:	bound  eax,QWORD PTR [eax]
  421604:	add    BYTE PTR [eax],al
  421606:	cmc    
  421607:	sbb    DWORD PTR [edi+0x302f815e],ebx
  42160d:	jbe    0x421619
  42160f:	pop    edx
  421610:	sar    BYTE PTR [ebx+ebx*8+0x715c9dda],cl
  421617:	(bad)  
  421618:	adc    DWORD PTR [ecx+ebx*4],esi
  42161b:	xlat   BYTE PTR ds:[ebx]
  42161c:	and    al,0xbc
  42161e:	adc    dl,dh
  421620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421621:	add    ah,BYTE PTR [eax+0x57213280]
  421627:	mov    dh,BYTE PTR [ebx]
  421629:	lea    edx,[ebx-0x5e]
  42162c:	sbb    ebp,DWORD PTR [esp+eax*4+0x24]
  421630:	adc    esp,DWORD PTR [ecx]
  421632:	mov    gs,WORD PTR [esi]
  421634:	xchg   esi,eax
  421635:	sub    DWORD PTR [ecx-0x3a],edx
  421638:	sub    dl,cl
  42163a:	sar    BYTE PTR [ebx+ebp*4],0x7b
  42163e:	test   al,0x76
  421640:	or     DWORD PTR [esi+edi*2+0x7f],0x15
  421645:	mov    cs,WORD PTR [eax-0x37]
  421648:	mov    ch,0x72
  42164a:	lods   al,BYTE PTR ds:[esi]
  42164b:	jmp    0xcaaa9bfe
  421650:	adc    eax,0x617aadfc
  421655:	in     eax,0xa
  421657:	int3   
  421658:	pop    ebx
  421659:	pop    es
  42165a:	jo     0x42160a
  42165c:	ud0    ecx,DWORD PTR [esi-0x653a769e]
  421663:	adc    DWORD PTR [esi-0x45],edx
  421666:	and    bh,cl
  421668:	add    BYTE PTR [eax],al
  42166a:	add    BYTE PTR [eax],al
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x869e1c2c,al
  42167e:	dec    esi
  421680:	add    DWORD PTR [eax],eax
  421682:	bound  eax,QWORD PTR [eax]
  421684:	add    BYTE PTR [eax],al
  421686:	pop    esi
  421687:	pop    ecx
  421688:	push   ecx
  421689:	inc    ecx
  42168a:	int3   
  42168b:	or     al,dl
  42168d:	inc    edi
  42168e:	mov    ds:0x7742fa7a,al
  421693:	jno    0x42169e
  421695:	mov    ebx,edi
  421697:	dec    edx
  421698:	sub    DWORD PTR [ebx-0x11],0xffffffce
  42169c:	inc    eax
  42169d:	xor    eax,0x215ed4a6
  4216a2:	adc    ebx,esp
  4216a4:	jl     0x4216bb
  4216a6:	loope  0x4216ad
  4216a8:	lods   al,BYTE PTR ds:[esi]
  4216a9:	sub    DWORD PTR [edx+0x7a7c5502],ecx
  4216af:	shr    DWORD PTR [edi],1
  4216b1:	jge    0x421718
  4216b3:	aad    0xd6
  4216b5:	inc    ebp
  4216b6:	mov    ebx,0xea86060f
  4216bb:	in     al,0x54
  4216bd:	xchg   ebx,eax
  4216be:	std    
  4216bf:	mov    eax,0x6fc73309
  4216c4:	pop    esp
  4216c5:	popa   
  4216c6:	push   ecx
  4216c7:	xchg   ecx,eax
  4216c8:	jno    0x421733
  4216ca:	mov    al,0x25
  4216cc:	or     eax,0x90286011
  4216d1:	inc    eax
  4216d2:	and    DWORD PTR [ecx+0x2a],eax
  4216d5:	and    DWORD PTR [edx*1+0x6328a671],ecx
  4216dc:	inc    ecx
  4216dd:	and    DWORD PTR [ebx+0x61579fb2],edi
  4216e3:	inc    edx
  4216e4:	sub    al,0xa7
  4216e6:	jnp    0x421747
  4216e8:	add    BYTE PTR [eax],al
  4216ea:	add    BYTE PTR [eax],al
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	retf   
  4216fb:	(bad)  
  4216fc:	imul   esp,DWORD PTR [ecx+0x61],0x620001cf
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [ebp-0x32b02478],ah
  42170b:	setle  ah
  42170e:	mov    ?,WORD PTR [ebp-0x4d]
  421711:	icebp  
  421712:	fimul  WORD PTR [ebp+0x40]
  421715:	cdq    
  421716:	xor    DWORD PTR [ecx+0x3c],0x95737d70
  42171d:	dec    eax
  42171e:	mov    dl,0xe1
  421720:	push   esi
  421721:	or     eax,0x6e658e98
  421726:	mov    dh,0x6a
  421728:	mov    ecx,0x34b0fe74
  42172d:	sbb    eax,0xadb8de48
  421732:	call   0x92b62655
  421737:	loop   0x4216fc
  421739:	xchg   esp,eax
  42173a:	push   cs
  42173b:	call   0xc814cbde
  421740:	xor    al,0x74
  421742:	adc    al,0xe8
  421744:	jb     0x4216fd
  421746:	(bad)  
  421747:	xor    eax,0x2ae510fa
  42174c:	mov    esi,0xa82d3485
  421751:	mov    bh,BYTE PTR [edx-0x4]
  421754:	ret    0x9096
  421757:	xchg   edx,eax
  421758:	cmp    BYTE PTR [esi-0x95b7423],al
  42175e:	pop    edx
  42175f:	gs xchg ecx,eax
  421761:	mov    ah,0xd0
  421763:	ins    DWORD PTR es:[edi],dx
  421764:	iret   
  421765:	mov    bh,0x54
  421767:	pop    esi
  421768:	add    BYTE PTR [eax],al
  42176a:	add    BYTE PTR [eax],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x186a4e09
  42177b:	nop
  42177c:	mov    edi,DWORD PTR [edi-0x3d]
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	bound  eax,QWORD PTR [eax]
  421784:	add    BYTE PTR [eax],al
  421786:	mov    WORD PTR [esi+0x4b26a763],?
  42178c:	(bad)  [edi-0x64121731]
  421792:	inc    esi
  421793:	popa   
  421794:	add    al,0x73
  421796:	jmp    0x4217b0
  421798:	test   BYTE PTR [ebx],al
  42179a:	dec    edx
  42179b:	das    
  42179c:	in     eax,0x27
  42179e:	gs ss and al,0xea
  4217a3:	mov    edx,0x732d04f9
  4217a8:	in     al,dx
  4217a9:	nop
  4217aa:	xor    eax,0x54c909a6
  4217af:	sbb    eax,0x38aad933
  4217b4:	ret    0x58eb
  4217b7:	adc    DWORD PTR [ebx+eax*2],0xffffffc1
  4217bb:	pop    esp
  4217bc:	mov    bh,0xe4
  4217be:	xor    DWORD PTR ds:0x55f72533,ebx
  4217c4:	stos   BYTE PTR es:[edi],al
  4217c5:	retf   0x7ca4
  4217c8:	add    al,0xea
  4217ca:	test   BYTE PTR ds:0x13dd6624,bl
  4217d0:	adc    al,0xbf
  4217d2:	sub    dl,BYTE PTR [esi-0x22]
  4217d5:	or     eax,DWORD PTR [eax+0x51]
  4217d8:	pop    ebx
  4217d9:	repz or bl,dh
  4217dc:	and    DWORD PTR [esp+eax*2+0x61110b52],0x9
  4217e4:	hlt    
  4217e5:	test   edx,ecx
  4217e7:	das    
  4217e8:	add    BYTE PTR [eax],al
  4217ea:	add    BYTE PTR [eax],al
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	(bad)  
  4217fb:	pop    ecx
  4217fc:	push   ss
  4217fd:	mov    ecx,0x1e285
  421802:	bound  eax,QWORD PTR [eax]
  421804:	add    BYTE PTR [eax],al
  421806:	loop   0x42187b
  421808:	loopne 0x4217ad
  42180a:	js     0x4217c8
  42180c:	adc    DWORD PTR [edx],eax
  42180e:	clc    
  42180f:	jmp    0x4217c2
  421811:	in     al,dx
  421812:	mov    esi,ebx
  421814:	ds push ebp
  421816:	jmp    0x421814
  421818:	pop    ss
  421819:	push   edx
  42181a:	addr16 xchg edx,eax
  42181c:	jge    0x4217d0
  42181e:	add    esi,ecx
  421820:	dec    edx
  421821:	loop   0x4217ee
  421823:	or     eax,DWORD PTR [ecx-0x3]
  421826:	mov    ecx,0x85cd4856
  42182b:	int3   
  42182c:	mov    esi,0xb1e6ab1e
  421831:	mov    edi,0x530f5315
  421836:	arpl   WORD PTR [edx-0x7e],bp
  421839:	int    0xb5
  42183b:	(bad)  
  42183c:	lock pop ebp
  42183e:	xchg   esp,eax
  42183f:	(bad)  
  421840:	pop    edx
  421841:	scas   eax,DWORD PTR es:[edi]
  421842:	cdq    
  421843:	je     0x421838
  421845:	out    0x7a,eax
  421847:	cmp    DWORD PTR [edx+0x45154af6],edx
  42184d:	bnd jge 0x4217d6
  421850:	aas    
  421851:	push   ebp
  421852:	cmp    eax,0xbe916297
  421857:	xor    eax,DWORD PTR [ecx+0xf042eea]
  42185d:	mov    edx,0x46eeb592
  421862:	lods   al,BYTE PTR ds:[esi]
  421863:	and    al,0x37
  421865:	push   eax
  421866:	js     0x42186e
  421868:	add    BYTE PTR [eax],al
  42186a:	add    BYTE PTR [eax],al
  42186c:	add    BYTE PTR [eax],al
  42186e:	dec    ecx
  42186f:	inc    esi
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	ss dec ecx
  42187c:	or     eax,0x1e2e719
  421881:	add    BYTE PTR [edx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	aaa    
  421887:	mov    ebp,DWORD PTR [eax+0x4e]
  42188a:	gs cmp al,0xec
  42188d:	sub    al,0x86
  42188f:	enter  0xa98a,0x58
  421893:	mov    ds:0xc6b1b6ac,al
  421898:	adc    BYTE PTR [eax-0x3b5e60e8],cl
  42189e:	push   esp
  42189f:	jnp    0x421851
  4218a1:	outs   dx,DWORD PTR ds:[esi]
  4218a2:	pop    ds
  4218a3:	pop    esp
  4218a4:	xor    BYTE PTR [edi-0x1e3dbe5c],bl
  4218aa:	mov    bh,0x34
  4218ac:	int    0xad
  4218ae:	dec    esi
  4218af:	xchg   bp,ax
  4218b1:	jnp    0x4218d9
  4218b3:	inc    edi
  4218b4:	sbb    ch,BYTE PTR [ebp-0x25]
  4218b7:	xor    dl,BYTE PTR [ecx]
  4218b9:	inc    edx
  4218ba:	sub    esp,DWORD PTR [edx+esi*1+0x58502c44]
  4218c1:	and    eax,0x8ae90c19
  4218c6:	xor    BYTE PTR [edi-0xb],al
  4218c9:	mov    ah,BYTE PTR [esi]
  4218cb:	mov    bl,0xcf
  4218cd:	pop    ecx
  4218ce:	idiv   DWORD PTR [eax]
  4218d0:	cmp    ch,BYTE PTR [eax]
  4218d2:	mov    bh,0xf7
  4218d4:	out    dx,al
  4218d5:	dec    ecx
  4218d6:	fld    TBYTE PTR [esi-0x13b097e9]
  4218dc:	in     al,0xf6
  4218de:	inc    edx
  4218df:	add    al,0x87
  4218e1:	call   0xafa:0x3dc0ad22
  4218e8:	add    BYTE PTR [eax],al
  4218ea:	add    BYTE PTR [eax],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	addr16 (bad) 
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0xf569da72
  4218fc:	xchg   esi,eax
  4218fd:	add    al,0x49
  4218ff:	jecxz  0x421902
  421901:	add    BYTE PTR [edx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	aam    0x4f
  421908:	jge    0x421915
  42190a:	mov    esp,0xf9c0033a
  42190f:	je     0x4218e4
  421911:	jb     0x42196c
  421913:	outs   dx,BYTE PTR ds:[esi]
  421914:	jle    0x4218d9
  421916:	pop    eax
  421917:	out    dx,al
  421918:	and    BYTE PTR [edi-0x5a],cl
  42191b:	xchg   edx,eax
  42191c:	mov    esi,0xc2350d1
  421921:	scas   eax,DWORD PTR es:[edi]
  421922:	int3   
  421923:	(bad)  
  421924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421925:	fwait
  421926:	js     0x421914
  421928:	js     0x421984
  42192a:	syscall 
  42192c:	aaa    
  42192d:	sbb    ah,BYTE PTR [edx+0x7f]
  421930:	pop    eax
  421931:	bound  ebx,QWORD PTR [ebp+0x35]
  421934:	mov    BYTE PTR [ebx+0x5f],al
  421937:	mov    al,ds:0x2bfbdc70
  42193c:	(bad)  
  42193d:	or     esp,DWORD PTR [esi+ecx*4+0x1b]
  421941:	std    
  421942:	push   ss
  421943:	mov    ch,0xde
  421945:	jbe    0x42193a
  421947:	or     eax,0x94c302cc
  42194c:	xlat   BYTE PTR ds:[ebx]
  42194d:	sub    bl,BYTE PTR [ebx-0x1c]
  421950:	lahf   
  421951:	retf   
  421952:	stos   DWORD PTR es:[edi],eax
  421953:	lea    esp,[ecx+0x3d]
  421956:	mov    ecx,0x6b5d7db8
  42195b:	push   ss
  42195c:	rcr    BYTE PTR [esi+edi*1+0x64],1
  421960:	lock sar esi,cl
  421963:	xor    edx,0x23
  421966:	rol    BYTE PTR ds:0x0,1
  42196c:	add    BYTE PTR [eax],al
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x84f49347,eax
  42197d:	leave  
  42197e:	stos   DWORD PTR es:[edi],eax
  42197f:	jecxz  0x421982
  421981:	add    BYTE PTR [edx+0x0],ah
  421984:	add    BYTE PTR [eax],al
  421986:	imul   edx,DWORD PTR [eax-0x72],0xf3be2e3e
  42198d:	scas   eax,DWORD PTR es:[edi]
  42198e:	mov    ah,0x77
  421990:	push   ebx
  421991:	adc    eax,0x3c737b31
  421996:	ja     0x421980
  421998:	imul   ebx,edx,0x8
  42199b:	xchg   ecx,eax
  42199c:	aam    0xf5
  42199e:	ins    BYTE PTR es:[edi],dx
  42199f:	xchg   edi,eax
  4219a0:	fdiv   st,st(1)
  4219a2:	cmp    DWORD PTR [esi+0x6e70c226],0xffffff9a
  4219a9:	dec    ebx
  4219aa:	test   DWORD PTR [ebx-0x4c],eax
  4219ad:	and    al,0x89
  4219af:	jbe    0x421a28
  4219b1:	sub    DWORD PTR [edx+0x765f3520],esp
  4219b7:	cmp    DWORD PTR [ebx+0x7a],esp
  4219ba:	in     al,0x71
  4219bc:	or     eax,0x9d00bdb8
  4219c1:	into   
  4219c2:	xchg   BYTE PTR [edi],ch
  4219c4:	cmp    bl,bh
  4219c6:	or     BYTE PTR [edi],bh
  4219c8:	(bad)  
  4219c9:	out    dx,al
  4219ca:	pop    ss
  4219cb:	add    bh,ah
  4219cd:	outs   dx,BYTE PTR ds:[esi]
  4219ce:	adc    ah,0x1a
  4219d1:	adc    al,0xf6
  4219d3:	aas    
  4219d4:	dec    esi
  4219d5:	ja     0x421986
  4219d7:	js     0x4219ed
  4219d9:	push   ecx
  4219da:	call   0x41ca:0xf7784dc8
  4219e1:	lds    esi,FWORD PTR [ecx+0x45]
  4219e4:	(bad)  
  4219e5:	push   cs
  4219e6:	pop    ds
  4219e7:	xchg   ecx,eax
  4219e8:	add    BYTE PTR [eax],al
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    BYTE PTR [eax],al
  4219ee:	fld    st(2)
  4219f0:	add    eax,0xddcf1f49
  4219f5:	ror    al,cl
  4219f7:	outs   dx,DWORD PTR ds:[esi]
  4219f8:	clc    
  4219f9:	shr    dl,cl
  4219fb:	xor    BYTE PTR [edi-0x36],bl
  4219fe:	or     eax,0x470001e4
  421a03:	add    BYTE PTR [eax],al
  421a05:	add    bl,cl
  421a07:	cld    
  421a08:	adc    eax,0x20238b26
  421a0d:	dec    dh
  421a0f:	push   cs
  421a10:	sbb    ebx,DWORD PTR [ecx+0x24]
  421a13:	or     DWORD PTR [ebp-0x77],0xffffffa8
  421a17:	aad    0x3d
  421a19:	imul   ebx,DWORD PTR [ecx-0x69],0x773ebaa3
  421a20:	jae    0x421a34
  421a22:	pop    ds
  421a23:	hlt    
  421a24:	aad    0x85
  421a26:	loop   0x421a5c
  421a28:	lahf   
  421a29:	aad    0xd3
  421a2b:	std    
  421a2c:	loop   0x4219fb
  421a2e:	and    eax,0x2a9f40ce
  421a33:	mov    al,ds:0xffade6e2
  421a38:	fs adc eax,0x15fe0274
  421a3e:	cmp    DWORD PTR [eax],0x75741a52
  421a44:	cmp    ebx,0xffffff81
  421a47:	cdq    
  421a48:	in     eax,dx
  421a49:	pop    edx
  421a4a:	mov    eax,0x1437
  421a4f:	nop
  421a50:	inc    edx
  421a51:	add    BYTE PTR [eax+edx*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	nop
  421a58:	inc    edx
  421a59:	add    BYTE PTR [eax+edx*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,ds:0xa0040042
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,ds:0xa00c0042
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,ds:0xa0140042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,ds:0xa01c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],al
  421a8f:	mov    al,0x42
  421a91:	add    BYTE PTR [eax+esi*4],al
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],cl
  421a97:	mov    al,0x42
  421a99:	add    BYTE PTR [eax+esi*4],cl
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],dl
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],dl
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],bl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],bl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax+0x66],bh
  421ab0:	ins    BYTE PTR es:[edi],dx
  421ab1:	jp     0x421b0a
  421ab3:	jbe    0x421afc
  421ab5:	ja     0x421afa
  421ab7:	js     0x421b01
  421ab9:	jno    0x421b1e
  421abb:	inc    edx
  421abc:	inc    bx
  421abe:	push   ebp
  421abf:	jno    0x421b37
  421ac1:	ja     0x421b2a
  421ac3:	dec    edi
  421ac4:	dec    esp
  421ac5:	dec    ebp
  421ac6:	inc    edx
  421ac7:	jno    0x421b3a
  421ac9:	jae    0x421b1e
  421acb:	push   eax
  421acc:	arpl   WORD PTR [ebx+0x76],dx
  421acf:	push   ds
  421ad0:	inc    edx
  421ad1:	add    BYTE PTR [esi+0x1e],bh
  421ad4:	inc    edx
  421ad5:	add    BYTE PTR [esi],dl
  421ad7:	sbb    eax,0xbef0042
  421adc:	mov    dl,0xe
  421ade:	jns    0x421b2e
  421ae0:	xor    BYTE PTR [esi-0x79],cl
  421ae3:	dec    edi
  421ae4:	cmp    eax,0x3e4faf4e
  421ae9:	dec    esi
  421aea:	js     0x421b3a
  421aec:	cmp    ecx,DWORD PTR [esi-0x64]
  421aef:	dec    edi
  421af0:	inc    esp
  421af1:	dec    esi
  421af2:	jae    0x421b42
  421af4:	inc    ecx
  421af5:	dec    esi
  421af6:	xor    BYTE PTR [esi+0x40],cl
  421af9:	dec    esi
  421afa:	pop    esp
  421afb:	pop    ebp
  421afc:	pop    edi
  421afd:	push   edx
  421afe:	cmp    DWORD PTR [esi+0x79],ecx
  421b01:	dec    esi
  421b02:	xor    BYTE PTR [esi-0x79],cl
  421b05:	dec    edi
  421b06:	cmp    eax,0x3e4faf4e
  421b0b:	dec    esi
  421b0c:	js     0x421b5c
  421b0e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b11:	dec    edi
  421b12:	inc    esp
  421b13:	dec    esi
  421b14:	mov    DWORD PTR [edi+0x41],ecx
  421b17:	dec    esi
  421b18:	xor    BYTE PTR [esi+0x40],cl
  421b1b:	dec    esi
  421b1c:	pop    esp
  421b1d:	ins    DWORD PTR es:[edi],dx
  421b1e:	pop    edi
  421b1f:	bound  edi,QWORD PTR [ecx]
  421b21:	dec    esi
  421b22:	jns    0x421b72
  421b24:	xor    BYTE PTR [esi-0x80],cl
  421b27:	dec    edi
  421b28:	cmp    eax,0x394e734e
  421b2d:	dec    esi
  421b2e:	mov    ds:0x304e3a4f,al
  421b33:	dec    esi
  421b34:	inc    esi
  421b35:	dec    esi
  421b36:	pop    esp
  421b37:	jge    0x421b98
  421b39:	jb     0x421baa
  421b3b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b3f:	xchg   ebx,eax
  421b40:	jns    0x421ad2
  421b42:	aas    
  421b43:	dec    esi
  421b44:	test   BYTE PTR [edi+0x30],cl
  421b47:	dec    esi
  421b48:	test   BYTE PTR [edi+0x3c],cl
  421b4b:	dec    esi
  421b4c:	mov    ds:0x734e394f,al
  421b51:	dec    esi
  421b52:	inc    ebp
  421b53:	dec    esi
  421b54:	xor    BYTE PTR [esi+0x44],cl
  421b57:	dec    esi
  421b58:	pop    esp
  421b59:	lea    ebx,[edi-0x7e]
  421b5c:	outs   dx,DWORD PTR ds:[esi]
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	xchg   ebx,eax
  421b60:	jle    0x421b05
  421b62:	jns    0x421b04
  421b64:	aas    
  421b65:	dec    esi
  421b66:	test   BYTE PTR [edi+0x30],cl
  421b69:	dec    esi
  421b6a:	test   BYTE PTR [edi+0x3c],cl
  421b6d:	dec    esi
  421b6e:	mov    ds:0x894e394f,al
  421b73:	dec    edi
  421b74:	inc    ebp
  421b75:	dec    esi
  421b76:	xor    BYTE PTR [esi+0x44],cl
  421b79:	dec    esi
  421b7a:	pop    esp
  421b7b:	popf   
  421b7c:	pop    edi
  421b7d:	xchg   edx,eax
  421b7e:	outs   dx,DWORD PTR ds:[esi]
  421b7f:	mov    ds:0xb37ea36e,al
  421b84:	jns    0x421b36
  421b86:	aas    
  421b87:	dec    esi
  421b88:	mov    cs,WORD PTR [edi+0x30]
  421b8b:	dec    esi
  421b8c:	lods   al,BYTE PTR ds:[esi]
  421b8d:	dec    edi
  421b8e:	cmp    eax,0x394e734e
  421b93:	dec    esi
  421b94:	mov    eax,ds:0x304e3a4f
  421b99:	dec    esi
  421b9a:	inc    esp
  421b9b:	dec    esi
  421b9c:	pop    esp
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    edi
  421b9f:	mov    ds:0xb36eb26f,al
  421ba4:	jle    0x421b69
  421ba6:	jns    0x421b68
  421ba8:	aas    
  421ba9:	dec    esi
  421baa:	mov    cs,WORD PTR [edi+0x30]
  421bad:	dec    esi
  421bae:	lods   al,BYTE PTR ds:[esi]
  421baf:	dec    edi
  421bb0:	cmp    eax,0x394e7e4e
  421bb5:	dec    esi
  421bb6:	lahf   
  421bb7:	dec    edi
  421bb8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bbb:	dec    esi
  421bbc:	inc    ebp
  421bbd:	dec    esi
  421bbe:	pop    esp
  421bbf:	mov    ebp,0xc26fb25f
  421bc4:	outs   dx,BYTE PTR ds:[esi]
  421bc5:	ret    
  421bc6:	jle    0x421b9b
  421bc8:	jns    0x421b9a
  421bca:	aas    
  421bcb:	dec    esi
  421bcc:	mov    cs,WORD PTR [edi+0x30]
  421bcf:	dec    esi
  421bd0:	lods   al,BYTE PTR ds:[esi]
  421bd1:	dec    edi
  421bd2:	cmp    eax,0x394f804e
  421bd7:	dec    esi
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	dec    edi
  421bda:	cmp    cl,BYTE PTR [esi+0x30]
  421bdd:	dec    esi
  421bde:	inc    esi
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	int    0x5f
  421be3:	ret    0xd26f
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	sar    DWORD PTR [esi-0x1d],cl
  421bea:	jns    0x421bcc
  421bec:	aas    
  421bed:	dec    esi
  421bee:	mov    cs,WORD PTR [edi+0x30]
  421bf1:	dec    esi
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	dec    edi
  421bf4:	cmp    eax,0x394f834e
  421bf9:	dec    esi
  421bfa:	mov    ds:0x304e3a4f,al
  421bff:	dec    esi
  421c00:	inc    esp
  421c01:	dec    esi
  421c02:	pop    esp
  421c03:	fstp   QWORD PTR [edi-0x2e]
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	loop   0x421c77
  421c09:	jecxz  0x421c89
  421c0b:	repz jns 0x421bfe
  421c0e:	aas    
  421c0f:	dec    esi
  421c10:	lea    ecx,[edi+0x30]
  421c13:	dec    esi
  421c14:	lahf   
  421c15:	dec    edi
  421c16:	cmp    eax,0x3c4fa04e
  421c1b:	dec    esi
  421c1c:	xor    BYTE PTR [esi+0x3f],cl
  421c1f:	dec    esi
  421c20:	pop    esp
  421c21:	in     eax,dx
  421c22:	pop    edi
  421c23:	loop   0x421c94
  421c25:	repnz outs dx,BYTE PTR ds:[esi]
  421c27:	repz jle 0x421c2d
  421c2a:	jns    0x421c2c
  421c2c:	jle    0x421c41
  421c2e:	jns    0x421c40
  421c30:	cmp    al,0x4e
  421c32:	jg     0x421c82
  421c34:	xor    BYTE PTR [esi-0x65],cl
  421c37:	dec    edi
  421c38:	xor    cl,BYTE PTR [esi-0x80]
  421c3b:	dec    edi
  421c3c:	cmp    al,0x4e
  421c3e:	lods   eax,DWORD PTR ds:[esi]
  421c3f:	dec    edi
  421c40:	cmp    ecx,DWORD PTR [esi+0x30]
  421c43:	dec    esi
  421c44:	inc    ebp
  421c45:	dec    esi
  421c46:	pop    esp
  421c47:	or     eax,0x126f025f
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	adc    edi,DWORD PTR [esi+0x23]
  421c50:	jns    0x421c72
  421c52:	aas    
  421c53:	dec    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	ficomp WORD PTR [edx]
  421c58:	inc    edx
  421c59:	add    dl,dl
  421c5b:	sbb    al,0x42
  421c5d:	add    dl,bl
  421c5f:	sbb    al,0x42
  421c61:	add    BYTE PTR [edx-0x11ffbde2],al
  421c67:	sbb    eax,0x1e720042
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [edx-0x41ffbde4],bh
  421c73:	sbb    al,0x42
  421c75:	add    BYTE PTR [esi+0x1e],ch
  421c78:	inc    edx
  421c79:	add    BYTE PTR [edx],ah
  421c7b:	sbb    eax,0xa90d0042
  421c80:	pushf  
  421c81:	clc    
  421c82:	ss mov edx,0x1cd6f89c
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi-0x45ffbde3],ah
  421c8f:	sbb    eax,0x1dc60042
  421c94:	inc    edx
  421c95:	add    dh,dl
  421c97:	sbb    eax,0x1d0e0042
  421c9c:	inc    edx
  421c9d:	add    dl,bl
  421c9f:	sbb    al,BYTE PTR [edx+0x0]
  421ca2:	cs sbb eax,0x1d1e0042
  421ca8:	inc    edx
  421ca9:	add    BYTE PTR [esi-0x49ffbde2],al
  421caf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cb6:	loop   0x421cd4
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esp+ebx*1],dl
  421cbc:	push   ss
  421cbd:	or     DWORD PTR [eax],0x7050d
  421cc3:	add    BYTE PTR [eax+0x0],al
  421cc6:	cmp    al,BYTE PTR [edx+0x3e]
  421cc9:	ds enter 0x4279,0x0
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	push   ebp
  421cd0:	inc    esp
  421cd1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cd7:	in     eax,dx
  421cd8:	inc    BYTE PTR [edi]
  421cda:	aas    
  421cdb:	cli    
  421cdc:	mov    ds:0x421cca05,eax
  421ce1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ce7:	xchg   esi,eax
  421ce8:	pushf  
  421ce9:	clc    
  421cea:	mov    ah,0x95
  421cec:	pushf  
  421ced:	clc    
  421cee:	mov    ebx,0xbaf89c95
  421cf3:	xchg   ebp,eax
  421cf4:	pushf  
  421cf5:	clc    
  421cf6:	mov    ecx,0xb8f89c95
  421cfb:	xchg   ebp,eax
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    edi,0xbef89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ebp,0xa6f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	jmp    0x421a:0xd26003f9
  421d15:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d19:	add    BYTE PTR [ebx+0x77],dl
  421d1c:	jbe    0x421d6e
  421d1e:	mov    dh,0x85
  421d20:	pushf  
  421d21:	clc    
  421d22:	sbb    ecx,ebp
  421d24:	push   eax
  421d25:	pop    es
  421d26:	sbb    BYTE PTR [ebx],cl
  421d28:	add    BYTE PTR [eax],al
  421d2a:	into   
  421d2b:	sbb    al,BYTE PTR [edx+0x0]
  421d2e:	sbb    ecx,DWORD PTR [ebx]
  421d30:	add    al,0xe
	...
  421d62:	ins    BYTE PTR es:[edi],dx
  421d63:	inc    eax
  421d64:	inc    edx
  421d65:	add    BYTE PTR [esi+0x66f89c85],dh
  421d6b:	add    BYTE PTR [edx+0x0],ch
  421d6e:	add    BYTE PTR [si+0x0],ah
  421d72:	push   0x64006700
  421d77:	add    BYTE PTR [esi+0x0],ah
  421d7a:	push   0x0
  421d7c:	push   0x66006400
  421d81:	add    BYTE PTR [edi+0x0],ah
  421d84:	push   0x0
  421d86:	push   0x66006700
  421d8b:	add    BYTE PTR [eax+0x0],ch
  421d8e:	add    BYTE PTR [bp+0x0],ah
  421d92:	push   0x66006700
	...
  421d9f:	add    BYTE PTR [eax],al
  421da1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421da7:	dec    edi
  421da8:	lahf   
  421da9:	dec    edi
  421daa:	mov    ds:0x9f4fa64f,al
  421daf:	dec    edi
  421db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db1:	dec    edi
  421db2:	ins    DWORD PTR es:[edi],dx
  421db3:	dec    esi
  421db4:	bound  ecx,QWORD PTR [esi+0x30]
  421db7:	dec    esi
  421db8:	add    BYTE PTR [eax],al
  421dba:	cdq    
  421dbb:	dec    edi
  421dbc:	pushf  
  421dbd:	dec    edi
  421dbe:	fwait
  421dbf:	dec    edi
  421dc0:	ins    DWORD PTR es:[edi],dx
  421dc1:	dec    esi
  421dc2:	bound  ecx,QWORD PTR [esi+0x30]
  421dc5:	dec    esi
  421dc6:	scas   eax,DWORD PTR es:[edi]
  421dc7:	dec    edi
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	dec    edi
  421dca:	lahf   
  421dcb:	dec    edi
  421dcc:	mov    ds:0x624e6d4f,al
  421dd1:	dec    esi
  421dd2:	xor    BYTE PTR [esi+0x0],cl
  421dd5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ddb:	dec    edi
  421ddc:	test   eax,0xa04f934f
  421de1:	dec    edi
  421de2:	fwait
  421de3:	dec    edi
  421de4:	xor    BYTE PTR [esi+0x0],cl
  421de7:	add    BYTE PTR [eax],al
  421de9:	add    BYTE PTR [eax],al
  421deb:	add    BYTE PTR [eax],al
  421ded:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421df4:	mov    WORD PTR [ebp-0x32734274],gs
  421dfa:	mov    ebp,ds
  421dfc:	mov    ebp,gs
  421dfe:	mov    ebp,?
  421e00:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e06:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e0c:	mov    WORD PTR [edx-0x74],?
  421e0f:	jae    0x421d9d
  421e11:	jo     0x421d9f
  421e13:	jno    0x421da1
  421e15:	jbe    0x421da3
  421e17:	ja     0x421da5
  421e19:	je     0x421da7
  421e1b:	jne    0x421da9
  421e1d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e24:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e2a:	lods   al,BYTE PTR ds:[esi]
  421e2b:	jge    0x421de9
  421e2d:	jge    0x421dcd
  421e2f:	(bad)  
  421e30:	jns    0x421ea5
  421e32:	mov    ecx,0x7d738cb1
  421e37:	ins    DWORD PTR es:[edi],dx
  421e38:	enter  0x9fc6,0x26
  421e3c:	jb     0x421e41
  421e3e:	test   eax,0xb956bb17
  421e43:	hlt    
  421e44:	test   al,0x37
  421e46:	test   al,0x7e
  421e48:	fnstenv [ecx-0x6a]
  421e4b:	mov    cl,0x6a
  421e4d:	push   0xffffffce
  421e4f:	or     BYTE PTR [edx],bl
  421e51:	xlat   BYTE PTR ds:[ebx]
  421e52:	out    dx,eax
  421e53:	add    eax,0x9321d7aa
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	adc    DWORD PTR [esi],esp
  421e5b:	jge    0x421e80
  421e5d:	fidiv  WORD PTR [edi]
  421e5f:	leave  
  421e60:	hlt    
  421e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e62:	cmp    ax,0x1fc8
  421e66:	mov    dh,cl
  421e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e69:	(bad)  
  421e6a:	and    DWORD PTR [eax],ebx
  421e6c:	and    DWORD PTR [ecx-0x18],esi
  421e6f:	(bad)  [ebx+0x7]
  421e72:	cmc    
  421e73:	enter  0x301a,0x14
  421e77:	inc    eax
  421e78:	inc    edx
  421e79:	add    BYTE PTR [ecx+0x66],dh
  421e7c:	jp     0x421eec
  421e7e:	ret    0x421c
  421e81:	add    BYTE PTR [esi],ah
  421e83:	sbb    eax,0xed080042
  421e88:	adc    al,BYTE PTR [edi]
  421e8a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e91:	ins    BYTE PTR es:[edi],dx
  421e92:	push   0x49657557
  421e97:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e9d:	push   edi
  421e9e:	jp     0x421f1a
  421ea0:	dec    ebp
  421ea1:	push   esi
  421ea2:	arpl   WORD PTR gs:[ecx+0x45],si
  421ea6:	dec    edx
  421ea7:	dec    esi
  421ea8:	data16 ja 0x421ef9
  421eab:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ec6:	inc    ebp
  421ec7:	push   edx
  421ec8:	jb     0x421f3e
  421eca:	inc    esi
  421ecb:	je     0x421f0e
  421ecd:	inc    esi
  421ece:	jae    0x421f46
  421ed0:	dec    ebx
  421ed1:	gs dec ecx
  421ed3:	dec    ebp
  421ed4:	dec    ebp
  421ed5:	pop    edx
  421ed6:	jp     0x421f32
  421ed8:	jbe    0x421f20
  421eda:	pop    ecx
  421edb:	jo     0x421f55
  421edd:	inc    edi
  421ede:	gs ins BYTE PTR es:[edi],dx
  421ee0:	dec    esp
  421ee1:	js     0x421f4b
  421ee3:	inc    edx
  421ee4:	js     0x421f2c
  421ee6:	dec    eax
  421ee7:	inc    ebp
  421ee8:	inc    esp
  421ee9:	inc    esp
  421eea:	push   ecx
  421eeb:	dec    edx
  421eec:	ins    BYTE PTR es:[edi],dx
  421eed:	dec    ebx
  421eee:	jbe    0x421f5e
  421ef0:	pop    eax
  421ef1:	jbe    0x421f3e
  421ef3:	inc    ecx
  421ef4:	fs gs jno 0x421f65
  421ef8:	push   ebx
  421ef9:	inc    ecx
  421efa:	add    BYTE PTR [eax],al
  421efc:	inc    ebx
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f02:	push   edx
  421f03:	push   ecx
  421f04:	push   0x74000064
  421f09:	jne    0x421f80
  421f0b:	ins    DWORD PTR es:[edi],dx
  421f0c:	push   ecx
  421f0d:	push   eax
  421f0e:	jo     0x421f8a
  421f10:	addr16 jo 0x421f69
  421f13:	pop    eax
  421f14:	add    BYTE PTR [eax],al
  421f16:	push   ecx
  421f17:	pop    ecx
  421f18:	inc    ebx
  421f19:	inc    edx
  421f1a:	outs   dx,BYTE PTR ds:[esi]
  421f1b:	popa   
  421f1c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f20:	jne    0x421f90
  421f22:	dec    ebx
  421f23:	je     0x421f88
  421f25:	bound  esp,QWORD PTR [edi+0x0]
  421f28:	jns    0x421f6f
  421f2a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f2d:	dec    ecx
  421f2e:	ja     0x421f75
  421f30:	dec    eax
  421f31:	inc    ebp
  421f32:	inc    edx
  421f33:	push   ebx
  421f34:	add    BYTE PTR [eax],al
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	inc    edi
  421f38:	dec    esi
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ecx
  421f3b:	inc    edi
  421f3c:	jb     0x421f85
  421f3e:	jns    0x421fb6
  421f40:	inc    ecx
  421f41:	pop    eax
  421f42:	dec    esp
  421f43:	add    BYTE PTR [eax+0x48],bh
  421f46:	bound  edx,QWORD PTR [ebx+0x43]
  421f49:	pop    eax
  421f4a:	outs   dx,DWORD PTR ds:[esi]
  421f4b:	push   0x4355
  421f50:	dec    esp
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	inc    edx
  421f53:	push   0x76666a73
  421f58:	inc    edx
  421f59:	jo     0x421f5b
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	add    BYTE PTR [edi+0x6d],ah
  421f60:	je     0x421fa9
  421f62:	ins    BYTE PTR es:[edi],dx
  421f63:	jae    0x421fcf
  421f65:	inc    esi
  421f66:	ins    DWORD PTR es:[edi],dx
  421f67:	je     0x421fbf
  421f69:	push   0x56584178
  421f6e:	push   ebx
  421f6f:	addr16 dec edx
  421f71:	jo     0x421fe5
  421f73:	js     0x421fe4
  421f75:	pop    eax
  421f76:	dec    ebx
  421f77:	push   esp
  421f78:	dec    esp
  421f79:	jns    0x421fc6
  421f7b:	js     0x421ff5
  421f7d:	outs   dx,BYTE PTR ds:[esi]
  421f7e:	pop    ecx
  421f7f:	jae    0x421fef
  421f81:	push   0x43644448
  421f86:	arpl   WORD PTR [edx+0x55],sp
  421f89:	push   0x42504e67
  421f8e:	push   ebp
  421f8f:	je     0x422006
  421f91:	addr16 dec edi
  421f93:	dec    esp
  421f94:	inc    edx
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	inc    esi
  421f97:	inc    esi
  421f98:	inc    esi
  421f99:	arpl   WORD PTR [edx+0x47],bx
  421f9c:	push   ebp
  421f9d:	inc    ebx
  421f9e:	popa   
  421f9f:	push   edx
  421fa0:	dec    esp
  421fa1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fa8:	push   ecx
  421fa9:	push   ebx
  421faa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fb1:	dec    edx
  421fb2:	jns    0x42201d
  421fb4:	push   edx
  421fb5:	inc    ebx
  421fb6:	jo     0x42202d
  421fb8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fbc:	fs push ebx
  421fbe:	inc    ebx
  421fbf:	push   ebp
  421fc0:	push   eax
  421fc1:	ja     0x421ffe
  421fc3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fc7:	mov    ebp,0xa53ddffb
  421fcc:	js     0x421f87
  421fce:	data16 int3 
  421fd0:	inc    ebx
  421fd1:	sbb    DWORD PTR [ecx],ecx
  421fd3:	xlat   BYTE PTR ds:[ebx]
  421fd4:	add    DWORD PTR [eax],eax
  421fd6:	bound  eax,QWORD PTR [eax]
  421fd8:	add    BYTE PTR [eax],al
  421fda:	jp     0x421f63
  421fdc:	in     eax,dx
  421fdd:	adc    al,0xab
  421fdf:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe1:	sub    BYTE PTR [ebp-0x7874b4cf],dh
  421fe7:	mov    ds:0xbcbf089d,eax
  421fec:	out    0x49,al
  421fee:	shr    DWORD PTR [edi-0x32],1
  421ff1:	inc    esi
  421ff2:	cwde   
  421ff3:	mov    ds:0x6e2f5656,al
  421ff8:	and    ah,BYTE PTR [edx+0x717fa2ef]
  421ffe:	xor    al,0xe9
  422000:	shl    DWORD PTR [ecx],0x3
  422003:	rcr    ecx,1
  422005:	dec    esi
  422006:	(bad)  
  422007:	push   0x82e575e5
  42200c:	in     eax,dx
  42200d:	test   al,0xe4
  42200f:	mov    esi,0x347520e7
  422014:	mov    DWORD PTR [edi+eax*1-0x52bd79d1],0x1f2a54
  42201f:	push   ss
  422020:	lods   eax,DWORD PTR ds:[esi]
  422021:	addr16 aam 0x28
  422024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422025:	ins    DWORD PTR es:[edi],dx
  422026:	mov    WORD PTR [ebp+0x56c7c0b0],fs
  42202c:	jb     0x42209d
  42202e:	into   
  42202f:	aam    0x42
  422031:	inc    eax
  422032:	in     eax,dx
  422033:	nop
  422034:	adc    eax,0x9f3ea727
  422039:	cs push ecx
  42203b:	xlat   BYTE PTR ds:[ebx]
  42203c:	add    BYTE PTR [eax],al
  42203e:	add    BYTE PTR [eax],al
  422040:	add    BYTE PTR [eax],al
  422042:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422048:	(bad)  
  422049:	cli    
  42204a:	jl     0x4220b0
  42204c:	xlat   BYTE PTR ds:[ebx]
  42204d:	push   esi
  42204e:	test   al,0xdd
  422050:	ds jmp 0x62:0x1d76b
  422058:	add    BYTE PTR [eax],al
  42205a:	dec    esp
  42205b:	dec    ebx
  42205c:	aaa    
  42205d:	xchg   edx,eax
  42205e:	adc    edi,eax
  422060:	cmp    DWORD PTR [esi],ecx
  422062:	fidiv  DWORD PTR [ecx+esi*1]
  422065:	jl     0x4220b8
  422067:	xor    eax,0x50a84877
  42206c:	or     cl,ah
  42206e:	imul   ebp,eax,0x39
  422071:	dec    esi
  422072:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422074:	retf   0x3906
  422077:	punpcklbw mm4,DWORD PTR [ebp+0x3e]
  42207b:	popa   
  42207c:	pop    ss
  42207d:	cmp    DWORD PTR [ecx+0x77],esp
  422080:	sbb    BYTE PTR [edx+0x47f4c3af],bh
  422086:	cmp    ebx,ecx
  422088:	xor    BYTE PTR [ebp+0x47f8a3b1],dh
  42208e:	mov    dh,0x4b
  422090:	pop    ebp
  422091:	cmp    DWORD PTR [edi],0x5b
  422094:	in     al,dx
  422095:	sbb    bl,BYTE PTR [edx]
  422097:	and    ebx,DWORD PTR [ebx+ebp*1-0x2d]
  42209b:	jmp    0x7051:0x1e8d5697
  4220a2:	mov    ds:0xce3be0ff,al
  4220a7:	icebp  
  4220a8:	in     eax,dx
  4220a9:	sub    al,0x6e
  4220ab:	pop    eax
  4220ac:	xor    BYTE PTR [esi-0x793fcc2f],ch
  4220b2:	push   ecx
  4220b3:	inc    edx
  4220b4:	xlat   BYTE PTR ds:[ebx]
  4220b5:	mov    cl,0xa4
  4220b7:	jle    0x422096
  4220b9:	mov    esp,ss
  4220bb:	sahf   
  4220bc:	add    BYTE PTR [eax],al
  4220be:	add    BYTE PTR [eax],al
  4220c0:	add    BYTE PTR [eax],al
  4220c2:	mov    bl,0x55
  4220c4:	jg     0x422047
  4220c6:	jmp    FWORD PTR [ebx-0x69418801]
  4220cc:	push   0xaff74757
  4220d1:	and    cl,ch
  4220d3:	xlat   BYTE PTR ds:[ebx]
  4220d4:	add    DWORD PTR [eax],eax
  4220d6:	bound  eax,QWORD PTR [eax]
  4220d8:	add    BYTE PTR [eax],al
  4220da:	jmp    0x8d71:0xc997186e
  4220e1:	mov    edx,0xe1a2e311
  4220e6:	sub    al,0x16
  4220e8:	xchg   BYTE PTR ds:0x3e1f117d,bl
  4220ee:	add    BYTE PTR [esi-0x7356aee9],bl
  4220f4:	fcmovnu st,st(6)
  4220f6:	pop    ebx
  4220f7:	inc    edi
  4220f8:	mov    ecx,DWORD PTR [ebx-0x3a]
  4220fb:	(bad)  
  4220fc:	rcl    DWORD PTR [ecx],1
  4220fe:	and    esp,DWORD PTR [ecx+0x2c]
  422101:	out    0x17,al
  422103:	xor    al,0x9f
  422105:	xor    al,0xf0
  422107:	add    bh,al
  422109:	js     0x4220d9
  42210b:	jo     0x422174
  42210d:	and    ch,BYTE PTR [edx-0x5b]
  422110:	xchg   edx,eax
  422111:	in     al,dx
  422112:	sbb    DWORD PTR [edi+0x39],esp
  422115:	aam    0x5a
  422117:	jp     0x4220cb
  422119:	xor    eax,DWORD PTR [ecx]
  42211b:	mov    ch,0x6d
  42211d:	mov    ss,edx
  42211f:	xchg   DWORD PTR [ebx-0x7ad7c9d4],ebp
  422125:	adc    eax,0xa4e83251
  42212a:	jp     0x42210b
  42212c:	push   0x6b
  42212e:	add    edi,edx
  422130:	rol    bl,cl
  422132:	push   cs
  422133:	int3   
  422134:	(bad)  
  422135:	(bad)  
  422136:	stc    
  422137:	jae    0x4221a6
  422139:	retf   0x7dd
  42213c:	add    BYTE PTR [eax],al
  42213e:	add    BYTE PTR [eax],al
  422140:	add    BYTE PTR [eax],al
  422142:	cmp    dh,dl
  422144:	cmp    ah,BYTE PTR [esi+edi*8]
  422147:	in     al,dx
  422148:	fimul  WORD PTR ds:[edi+0x1eac6bd5]
  42214f:	fisubr DWORD PTR [edx-0x7b]
  422152:	das    
  422153:	fadd   DWORD PTR [ecx]
  422155:	add    BYTE PTR [edx+0x0],ah
  422158:	add    BYTE PTR [eax],al
  42215a:	je     0x42210a
  42215c:	aam    0xe1
  42215e:	mov    al,ds:0x2a96a20b
  422163:	(bad)  
  422164:	jns    0x4221d9
  422166:	push   0x2c56bec6
  42216b:	(bad)  
  42216c:	cs dec esi
  42216e:	lahf   
  42216f:	pop    ss
  422170:	jle    0x42212f
  422172:	and    eax,0x585e353b
  422177:	mov    bh,0x24
  422179:	jg     0x42218a
  42217b:	std    
  42217c:	push   edi
  42217d:	jb     0x4221d1
  42217f:	retf   0xa242
  422182:	test   al,0xc
  422184:	mov    ds:0x70a8c054,al
  422189:	mov    al,0x50
  42218b:	js     0x4221ae
  42218d:	sbb    eax,0xffc02332
  422192:	dec    esi
  422193:	xchg   DWORD PTR [edi],ebp
  422195:	adc    BYTE PTR [edi+0x2ed53859],bh
  42219b:	int    0xfc
  42219d:	or     BYTE PTR [ecx],0x4
  4221a0:	add    cl,bl
  4221a2:	xlat   BYTE PTR ds:[ebx]
  4221a3:	rcr    ebp,cl
  4221a5:	mov    edi,0x96fdcddc
  4221aa:	mov    eax,ds:0x87327672
  4221af:	mov    ah,0x8
  4221b1:	mov    eax,0x79ab33b4
  4221b6:	xor    al,0x30
  4221b8:	loopne 0x4221b8
  4221ba:	nop
  4221bb:	ja     0x4221bd
  4221bd:	add    BYTE PTR [eax],al
  4221bf:	add    BYTE PTR [eax],al
  4221c1:	add    cl,bl
  4221c3:	mov    dh,0x66
  4221c5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221c8:	std    
  4221c9:	neg    BYTE PTR [esi]
  4221cb:	sub    esp,DWORD PTR [ebx-0x23]
  4221ce:	inc    ebp
  4221cf:	jb     0x42216b
  4221d1:	xchg   ebp,eax
  4221d2:	xchg   ecx,eax
  4221d3:	fadd   DWORD PTR [ecx]
  4221d5:	add    BYTE PTR [edx+0x0],ah
  4221d8:	add    BYTE PTR [eax],al
  4221da:	mov    edi,0xfe9a1f56
  4221df:	dec    esp
  4221e0:	fld    DWORD PTR [edi]
  4221e2:	mov    bl,dl
  4221e4:	push   eax
  4221e5:	mov    ebx,0x5626f128
  4221ea:	inc    edi
  4221eb:	pushf  
  4221ec:	lds    eax,FWORD PTR [edi+0x2123109e]
  4221f2:	outs   dx,DWORD PTR ds:[esi]
  4221f3:	repnz jecxz 0x422255
  4221f6:	jmp    0xaaecab1e
  4221fb:	push   esp
  4221fc:	iret   
  4221fd:	sar    BYTE PTR [edi+esi*2+0x3a],1
  422201:	retf   
  422202:	mov    dl,0x71
  422204:	arpl   WORD PTR [edi+ebp*1],cx
  422207:	pop    esi
  422208:	in     eax,dx
  422209:	inc    eax
  42220a:	sar    BYTE PTR [ecx-0x1d1f39ac],0x3d
  422211:	(bad)  
  422212:	je     0x4221b9
  422214:	inc    eax
  422215:	jns    0x4221db
  422217:	xchg   BYTE PTR [edx],al
  422219:	inc    ebx
  42221a:	ds ss add edx,edi
  42221e:	aas    
  42221f:	jo     0x422222
  422221:	xor    cl,BYTE PTR [edi+ecx*4+0x0]
  422225:	in     al,dx
  422226:	push   ebp
  422227:	mov    cl,0xe3
  422229:	xchg   edx,eax
  42222a:	nop
  42222b:	pop    edi
  42222c:	push   esi
  42222d:	sbb    ebp,esi
  42222f:	fdiv   DWORD PTR [edx]
  422231:	clc    
  422232:	mov    ah,0x4e
  422234:	pop    es
  422235:	ins    DWORD PTR es:[edi],dx
  422236:	sub    esp,DWORD PTR [ebx+0x4f]
  422239:	mov    eax,0x57d0
  42223e:	add    BYTE PTR [eax],al
  422240:	add    BYTE PTR [eax],al
  422242:	fidiv  DWORD PTR [edx]
  422244:	xchg   edi,eax
  422245:	mov    bh,bh
  422247:	scas   eax,DWORD PTR es:[edi]
  422248:	fbstp  TBYTE PTR [edx+0x3]
  42224b:	inc    ebp
  42224c:	mov    ds:0x6bd47f5c,eax
  422251:	(bad)  
  422252:	repz fadd DWORD PTR [ecx]
  422255:	add    BYTE PTR [edx+0x0],ah
  422258:	add    BYTE PTR [eax],al
  42225a:	(bad)  
  42225b:	adc    cl,BYTE PTR [ecx+ebx*2]
  42225e:	(bad)  
  42225f:	xor    eax,DWORD PTR [eax+0x3e]
  422262:	xor    DWORD PTR [edx+edx*1],edi
  422265:	mov    bh,0xf5
  422267:	xchg   edi,eax
  422268:	(bad)  
  422269:	les    ebx,FWORD PTR [esi]
  42226b:	repnz scas eax,DWORD PTR es:[edi]
  42226d:	pusha  
  42226e:	jbe    0x422278
  422270:	push   ss
  422271:	push   ss
  422272:	mov    BYTE PTR [edi+0x492bd768],al
  422278:	push   edi
  422279:	jnp    0x422273
  42227b:	or     ch,ch
  42227d:	iret   
  42227e:	popa   
  42227f:	pop    ebx
  422280:	aas    
  422281:	xor    eax,0x46a8ffdf
  422286:	pusha  
  422287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422288:	push   ebp
  422289:	imul   esi,DWORD PTR [eax-0x15f99f4c],0x73
  422290:	call   0x70b31d88
  422295:	mov    ebp,0x7a064cac
  42229a:	sahf   
  42229b:	sub    eax,0x40ae21db
  4222a0:	jecxz  0x422290
  4222a2:	or     DWORD PTR [edx],ebx
  4222a4:	icebp  
  4222a5:	jg     0x4222af
  4222a7:	data16 fwait
  4222a9:	mov    al,ds:0x5431d525
  4222ae:	(bad)  
  4222af:	fild   QWORD PTR [edx-0x13]
  4222b2:	std    
  4222b3:	add    ecx,DWORD PTR [edi-0x39]
  4222b6:	dec    ebp
  4222b7:	out    dx,eax
  4222b8:	or     eax,DWORD PTR [ebx]
  4222ba:	xchg   BYTE PTR [esi+0x0],ch
  4222bd:	add    BYTE PTR [eax],al
  4222bf:	add    BYTE PTR [eax],al
  4222c1:	add    BYTE PTR [eax-0x1c],cl
  4222c4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222ca:	pop    esi
  4222cb:	sub    BYTE PTR [eax+0x1d5d6b8f],bl
  4222d1:	enter  0xd955,0x1
  4222d5:	add    BYTE PTR [edx+0x0],ah
  4222d8:	add    BYTE PTR [eax],al
  4222da:	inc    eax
  4222db:	fistp  DWORD PTR [ecx+0x76]
  4222de:	push   edx
  4222df:	mov    ecx,0x975eb27b
  4222e4:	mov    ecx,0xe126ed8a
  4222e9:	and    al,0x27
  4222eb:	mov    esi,DWORD PTR [ebx]
  4222ed:	xchg   edx,eax
  4222ee:	es stos BYTE PTR es:[edi],al
  4222f0:	sub    al,0xf
  4222f2:	inc    esp
  4222f3:	push   0x858394a2
  4222f8:	jmp    0x148b:0x3046aa18
  4222ff:	mov    ecx,0x98840576
  422304:	jo     0x42237e
  422306:	jb     0x4222ef
  422308:	int3   
  422309:	push   edi
  42230a:	sbb    si,WORD PTR [eax+0x4b]
  42230e:	push   ds
  42230f:	in     al,0xf1
  422311:	outs   dx,BYTE PTR ds:[esi]
  422312:	into   
  422313:	jnp    0x422296
  422315:	test   edi,0x531a093e
  42231b:	sbb    dh,bh
  42231d:	jp     0x422303
  42231f:	daa    
  422320:	loop   0x422352
  422322:	push   edi
  422323:	and    eax,0xd3f3f7c5
  422328:	mov    ch,0x6e
  42232a:	rcl    BYTE PTR [edi-0x4f],0xab
  42232e:	ror    DWORD PTR [ecx-0x3e],1
  422331:	mov    ds:0x9bea6335,al
  422336:	pop    edx
  422337:	test   eax,0x7ed8471e
  42233c:	add    BYTE PTR [eax],al
  42233e:	add    BYTE PTR [eax],al
  422340:	add    BYTE PTR [eax],al
  422342:	push   edx
  422343:	add    al,0xa2
  422345:	xor    dh,0xa6
  422348:	jb     0x42231e
  42234a:	ins    DWORD PTR es:[edi],dx
  42234b:	xor    dh,BYTE PTR [edx]
  42234d:	and    eax,0xbe023751
  422352:	mov    bh,0xd9
  422354:	add    DWORD PTR [eax],eax
  422356:	bound  eax,QWORD PTR [eax]
  422358:	add    BYTE PTR [eax],al
  42235a:	and    al,0xe7
  42235c:	rcl    BYTE PTR [eax],cl
  42235e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42235f:	pusha  
  422360:	xchg   DWORD PTR [esi],edx
  422362:	and    ecx,DWORD PTR [ecx-0x64]
  422365:	or     eax,0xbfc44983
  42236a:	dec    edx
  42236b:	pop    ebp
  42236c:	and    ch,dl
  42236e:	scas   al,BYTE PTR es:[edi]
  42236f:	int3   
  422370:	rol    DWORD PTR [ebx+0x448898b5],0x84
  422377:	in     al,dx
  422378:	repnz fisub WORD PTR [edx]
  42237b:	jmp    0x42233a
  42237d:	mov    esp,0xbd4478eb
  422382:	aad    0x2c
  422384:	cmp    BYTE PTR [ebx-0x52],dh
  422387:	fucom  st(1)
  422389:	sub    BYTE PTR ds:0x2d021df5,ch
  42238f:	or     DWORD PTR [esi+0x3e2ac703],eax
  422395:	cmp    esp,DWORD PTR [ecx+0x1a8c543c]
  42239b:	fisttp WORD PTR [esi-0xb]
  42239e:	push   ebx
  42239f:	ficomp WORD PTR es:[ebx]
  4223a2:	mov    cl,0x19
  4223a4:	dec    ebx
  4223a5:	fcom   DWORD PTR [ebx+0x104bcb92]
  4223ab:	cmp    cl,BYTE PTR [ecx]
  4223ad:	add    bl,dl
  4223af:	bound  esi,QWORD PTR [ecx-0x432a4cdd]
  4223b5:	in     eax,0x97
  4223b7:	or     dl,BYTE PTR [ebp+0x4050b0]
  4223bd:	add    BYTE PTR [eax],al
  4223bf:	add    BYTE PTR [eax],al
  4223c1:	add    BYTE PTR [eax],bh
  4223c3:	push   0xffffff96
  4223c5:	add    edx,esi
  4223c7:	(bad)  
  4223c8:	mov    ebp,0xdb4ef67b
  4223cd:	out    0xca,eax
  4223cf:	or     esp,DWORD PTR [ecx+ebp*8]
  4223d2:	sbb    edx,ebx
  4223d4:	add    DWORD PTR [eax],eax
  4223d6:	bound  eax,QWORD PTR [eax]
  4223d8:	add    BYTE PTR [eax],al
  4223da:	aam    0x3c
  4223dc:	sbb    al,0x60
  4223de:	shr    esp,cl
  4223e0:	xchg   edx,eax
  4223e1:	mov    ah,0x13
  4223e3:	outs   dx,BYTE PTR ds:[esi]
  4223e4:	pop    ss
  4223e5:	test   DWORD PTR ds:0x32152c1a,edi
  4223eb:	imul   ebp,DWORD PTR [esi],0xc789f992
  4223f1:	jge    0x4223a5
  4223f3:	ss js  0x422390
  4223f6:	(bad)  
  4223f7:	fidiv  DWORD PTR [edi]
  4223f9:	test   BYTE PTR [edi+eiz*1-0x2f],bh
  4223fd:	mov    al,ds:0xb9b96547
  422402:	push   esi
  422403:	pop    ebp
  422404:	sub    bl,ah
  422406:	call   0x183a:0x790be08a
  42240d:	ror    BYTE PTR [esi],0x5b
  422410:	int    0x79
  422412:	rol    DWORD PTR [edi+0x12],1
  422415:	das    
  422416:	mov    ch,0x8f
  422418:	push   cs
  422419:	jmp    0x1c5e6821
  42241e:	stc    
  42241f:	js     0x422470
  422421:	mov    esp,DWORD PTR [ecx+ecx*8-0x4c5ff423]
  422428:	stc    
  422429:	ins    DWORD PTR es:[edi],dx
  42242a:	mov    ebx,0x7869a4d3
  42242f:	jb     0x4223bd
  422431:	sbb    BYTE PTR cs:[edx-0x2fea6ed6],dl
  422438:	inc    edi
  422439:	jecxz  0x422426
  42243b:	sbb    al,BYTE PTR [eax]
  42243d:	add    BYTE PTR [eax],al
  42243f:	add    BYTE PTR [eax],al
  422441:	add    cl,ch
  422443:	mov    ecx,0xf37a307a
  422448:	jmp    0x422443
  42244a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42244e:	cmp    edi,DWORD PTR [ecx-0x2584808f]
  422454:	add    DWORD PTR [eax],eax
  422456:	bound  eax,QWORD PTR [eax]
  422458:	add    BYTE PTR [eax],al
  42245a:	jl     0x422403
  42245c:	jns    0x42243f
  42245e:	or     al,0xa5
  422460:	add    BYTE PTR [ecx],al
  422462:	(bad)  
  422464:	ret    
  422465:	pusha  
  422466:	mov    al,0x5b
  422468:	add    al,0x30
  42246a:	das    
  42246b:	mov    ah,0xbe
  42246d:	retf   0xd824
  422470:	icebp  
  422471:	iret   
  422472:	mov    ebx,0xc5076cf1
  422477:	mov    edx,0x49286bf1
  42247c:	mov    esi,0x95f84a6f
  422481:	mov    BYTE PTR [esi-0x69dded9],dh
  422487:	ss cs mov esi,0xa862d7b4
  42248e:	inc    edx
  42248f:	shl    dh,1
  422491:	sbb    ch,al
  422493:	jecxz  0x4224d8
  422495:	loopne 0x4224f5
  422497:	pop    edi
  422498:	mov    ch,0xd
  42249a:	push   ss
  42249b:	inc    ebp
  42249c:	sub    al,0x6d
  42249e:	inc    esi
  42249f:	into   
  4224a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a1:	cmp    al,0xfb
  4224a3:	nop
  4224a4:	in     al,0x73
  4224a6:	or     eax,0xe5d4bae0
  4224ab:	imul   ebp,ebx,0x1a984dcb
  4224b1:	push   ecx
  4224b2:	stos   BYTE PTR es:[edi],al
  4224b3:	mov    DWORD PTR fs:[ebx+0xe68788e],esp
  4224ba:	inc    ebp
  4224bb:	dec    esi
  4224bc:	add    BYTE PTR [eax],al
  4224be:	add    BYTE PTR [eax],al
  4224c0:	add    BYTE PTR [eax],al
  4224c2:	pop    ebx
  4224c3:	inc    ecx
  4224c4:	pop    ebx
  4224c5:	iret   
  4224c6:	pop    ebx
  4224c7:	(bad)  
  4224c9:	aad    0xf
  4224cb:	ss dec esp
  4224cd:	dec    esi
  4224ce:	cmp    edx,eax
  4224d0:	adc    cl,dh
  4224d2:	fstp   st(2)
  4224d4:	add    DWORD PTR [eax],eax
  4224d6:	bound  eax,QWORD PTR [eax]
  4224d8:	add    BYTE PTR [eax],al
  4224da:	jbe    0x422461
  4224dc:	rol    BYTE PTR [ecx],0xb5
  4224df:	stos   BYTE PTR es:[edi],al
  4224e0:	xor    ah,BYTE PTR [edx]
  4224e2:	pop    ss
  4224e3:	push   ebx
  4224e4:	dec    edi
  4224e5:	and    BYTE PTR ds:0x7e9f8bb0,dl
  4224eb:	in     eax,0x30
  4224ed:	dec    esi
  4224ee:	gs add eax,0xc812f861
  4224f4:	fwait
  4224f5:	jle    0x422546
  4224f7:	adc    BYTE PTR [ebx-0x6ea479eb],0xf1
  4224fe:	xchg   DWORD PTR [ebp-0x63],eax
  422501:	shl    BYTE PTR [ebx],cl
  422503:	inc    edi
  422504:	out    dx,eax
  422505:	scas   eax,DWORD PTR es:[edi]
  422506:	mov    dh,0xca
  422508:	pop    edx
  422509:	inc    ebx
  42250a:	(bad)  
  42250b:	cmc    
  42250c:	xor    al,0x3b
  42250e:	or     eax,0xf4942ebf
  422513:	xchg   ebp,eax
  422514:	aad    0x6
  422516:	cmp    ah,dh
  422518:	dec    ebp
  422519:	ret    0x721f
  42251c:	pop    esi
  42251d:	std    
  42251e:	adc    al,0x30
  422520:	loopne 0x4224e2
  422522:	xchg   ecx,eax
  422523:	inc    esp
  422524:	push   es
  422525:	in     eax,dx
  422526:	inc    eax
  422527:	xchg   edx,eax
  422528:	pop    es
  422529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42252a:	push   eax
  42252b:	sar    DWORD PTR ds:0xedb06e34,1
  422531:	add    esi,esp
  422533:	sar    ebx,0x93
  422536:	inc    esi
  422537:	pop    ss
  422538:	dec    ebp
  422539:	jle    0x422589
  42253b:	adc    eax,0x0
  422540:	add    BYTE PTR [eax],al
  422542:	fwait
  422543:	test   DWORD PTR [ebp+0x3c],esp
  422546:	jg     0x422544
  422548:	(bad)  [edi-0x65be08a1]
  42254e:	aaa    
  42254f:	pop    ecx
  422550:	add    ebp,DWORD PTR [edi+edi*1-0x25]
  422554:	add    DWORD PTR [eax],eax
  422556:	bound  eax,QWORD PTR [eax]
  422558:	add    BYTE PTR [eax],al
  42255a:	mov    ds:0xc218836,al
  42255f:	pop    ecx
  422560:	add    ebx,ebp
  422562:	mov    ebx,0xfb705dda
  422567:	xor    edi,0xffffff9b
  42256a:	mov    ecx,0x687153e
  42256f:	pop    eax
  422570:	sbb    cl,ch
  422572:	sbb    al,0x29
  422574:	dec    esi
  422575:	dec    ecx
  422576:	imul   edx,DWORD PTR [esi+0x36],0x339db9e9
  42257d:	into   
  42257e:	mov    al,ds:0xbaa43eb0
  422583:	ficom  DWORD PTR [ebx]
  422585:	cs pop eax
  422587:	(bad)  
  422588:	sbb    eax,0xc905c6d2
  42258d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258e:	or     dh,ah
  422590:	mov    es,WORD PTR [eax+0x1ee90054]
  422596:	push   ebx
  422597:	dec    ecx
  422598:	bound  ebp,QWORD PTR [edx+0x6a3f7acc]
  42259e:	retf   
  42259f:	fs loopne 0x422607
  4225a2:	mov    al,0x7c
  4225a4:	and    cl,ch
  4225a6:	mov    ch,0xa2
  4225a8:	add    dl,al
  4225aa:	lods   eax,DWORD PTR ds:[esi]
  4225ab:	mov    edx,0x9deb6b5e
  4225b0:	ins    DWORD PTR es:[edi],dx
  4225b1:	imul   eax,DWORD PTR [ebx+ebp*8],0x68
  4225b5:	jbe    0x422571
  4225b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b8:	icebp  
  4225b9:	inc    edi
  4225ba:	test   al,0xbb
  4225bc:	add    BYTE PTR [eax],al
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	jae    0x4225b5
  4225c5:	retf   0xcbfd
  4225c8:	jle    0x4225c1
  4225ca:	repz xor eax,0xff488ce9
  4225d0:	stc    
  4225d1:	leave  
  4225d2:	mov    eax,ds:0x620001db
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    BYTE PTR [ebx-0x5],al
  4225dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dd:	cmp    esp,DWORD PTR [ebx+0x1a4a0e3c]
  4225e3:	xor    al,0x30
  4225e5:	jns    0x4225f4
  4225e7:	and    al,0x6
  4225e9:	das    
  4225ea:	cmp    edx,ebx
  4225ec:	adc    esi,DWORD PTR [ebp+edi*2-0x68]
  4225f0:	lods   eax,DWORD PTR ds:[esi]
  4225f1:	add    al,BYTE PTR [esi+0xc]
  4225f4:	mov    ah,0xb2
  4225f6:	xchg   edx,eax
  4225f7:	sbb    esp,DWORD PTR [ecx-0x57]
  4225fa:	dec    eax
  4225fb:	into   
  4225fc:	and    esp,ebx
  4225fe:	imul   eax,edx,0xffffffeb
  422601:	cmp    dh,BYTE PTR [esp+edx*2-0x39199062]
  422608:	ins    DWORD PTR es:[edi],dx
  422609:	jp     0x422612
  42260b:	mov    ebx,0x3984c5f2
  422610:	xlat   BYTE PTR ds:[ebx]
  422611:	dec    edi
  422612:	int    0xc2
  422614:	ret    
  422615:	add    BYTE PTR [eax+0x65],ah
  422618:	cs aam 0x37
  42261b:	mov    al,ds:0x3d151cec
  422620:	sbb    ah,cl
  422622:	dec    DWORD PTR ds:[ebp+0x1fe0759b]
  422629:	jmp    0x4226a0
  42262b:	sti    
  42262c:	mov    eax,ds:0x2743dc82
  422631:	and    DWORD PTR [ebx+0x3f94f217],ebx
  422637:	push   esi
  422638:	mov    al,0x31
  42263a:	add    DWORD PTR [esi+0x0],ebp
  42263d:	add    BYTE PTR [eax],al
  42263f:	add    BYTE PTR [eax],al
  422641:	add    ch,dh
  422643:	adc    al,0xae
  422645:	adc    ebp,edi
  422647:	mov    ebx,0x84e6f6fd
  42264c:	lds    ebp,FWORD PTR [edx+0x1d4a5a2f]
  422652:	add    ebx,esp
  422654:	add    DWORD PTR [eax],eax
  422656:	bound  eax,QWORD PTR [eax]
  422658:	add    BYTE PTR [eax],al
  42265a:	inc    esi
  42265b:	loope  0x4225f0
  42265d:	scas   al,BYTE PTR es:[edi]
  42265e:	mov    bl,0xb
  422660:	sbb    al,0xa9
  422662:	cmc    
  422663:	sbb    esp,DWORD PTR ds:0x1efc3927
  422669:	pop    es
  42266a:	lahf   
  42266b:	jmp    edx
  42266d:	ror    DWORD PTR [edi+0x29],0xc5
  422671:	dec    ecx
  422672:	data16 js 0x422608
  422675:	ins    DWORD PTR es:[edi],dx
  422676:	mov    al,ds:0x193705d
  42267b:	fld    QWORD PTR [esi-0x6]
  42267e:	not    DWORD PTR [eax]
  422680:	and    ah,dh
  422682:	enter  0x49ca,0x34
  422686:	jo     0x42266c
  422688:	fidiv  DWORD PTR [eax-0x327ff61c]
  42268e:	cmp    eax,0xe98d4aaf
  422693:	mov    al,0x4a
  422695:	mov    edi,DWORD PTR [edi+eiz*4-0x147063cf]
  42269c:	jle    0x422704
  42269e:	and    BYTE PTR [eax-0x6d],bl
  4226a1:	daa    
  4226a2:	sbb    eax,0x20ca121e
  4226a7:	es mov ch,ah
  4226aa:	call   0xc9d0:0x699e334d
  4226b1:	jb     0x42268c
  4226b3:	mov    edx,DWORD PTR [ebp-0xdd577e]
  4226b9:	push   ebx
  4226ba:	rcr    BYTE PTR [ecx],0x0
  4226bd:	add    BYTE PTR [eax],al
  4226bf:	add    BYTE PTR [eax],al
  4226c1:	add    BYTE PTR [ebx],bh
  4226c3:	mov    cl,0x57
  4226c5:	lock fcomip st,st(6)
  4226c8:	mov    edi,0xbb1c16fb
  4226cd:	rcr    BYTE PTR [ebx],0xfe
  4226d0:	cs repnz fadd QWORD PTR gs:[ecx]
  4226d5:	add    BYTE PTR [edx+0x0],ah
  4226d8:	add    BYTE PTR [eax],al
  4226da:	sar    DWORD PTR [esi+0x6e],0xd1
  4226de:	dec    esi
  4226df:	jecxz  0x422759
  4226e1:	retf   
  4226e2:	add    DWORD PTR [ebp-0x24],edi
  4226e5:	pop    ds
  4226e6:	shl    DWORD PTR [ebp+ebp*1-0x265dae56],cl
  4226ed:	imul   BYTE PTR [ebx+ebp*4]
  4226f0:	ror    BYTE PTR [edx+0x30b8c4b],cl
  4226f6:	jae    0x422708
  4226f8:	push   es
  4226f9:	out    dx,eax
  4226fa:	in     al,dx
  4226fb:	not    dl
  4226fd:	(bad)  
  4226fe:	sbb    dh,dh
  422700:	out    dx,eax
  422701:	sbb    ebp,DWORD PTR [edi]
  422703:	arpl   bx,bp
  422705:	adc    ecx,DWORD PTR [esi]
  422707:	pop    esp
  422708:	jae    0x4226e5
  42270a:	into   
  42270b:	pop    ss
  42270c:	inc    eax
  42270d:	adc    BYTE PTR ss:[esi+esi*2+0x5e4612f4],ah
  422715:	sub    BYTE PTR [ecx-0x71a85a93],0x6e
  42271c:	mov    BYTE PTR ds:0xfbe9b278,0xa
  422723:	mov    eax,ds:0x9d45545d
  422728:	jmp    0x422745
  42272a:	fcmovne st,st(3)
  42272c:	stos   BYTE PTR es:[edi],al
  42272d:	fistp  WORD PTR [edi+0x4b020958]
  422733:	daa    
  422734:	frstor [eax]
  422736:	xor    cl,BYTE PTR [ecx+0x358772bd]
  42273c:	add    BYTE PTR [eax],al
  42273e:	add    BYTE PTR [eax],al
  422740:	add    BYTE PTR [eax],al
  422742:	aam    0xf
  422744:	push   ecx
  422745:	lock (bad) 
  422748:	cmc    
  422749:	das    
  42274a:	sbb    BYTE PTR [eax],cl
  42274c:	xchg   ebx,eax
  42274d:	iret   
  42274e:	cmp    DWORD PTR [esi-0x23383d3c],edx
  422754:	add    DWORD PTR [eax],eax
  422756:	bound  eax,QWORD PTR [eax]
  422758:	add    BYTE PTR [eax],al
  42275a:	sub    ecx,DWORD PTR [ebp+0x1b882bb4]
  422760:	mov    ds:0x81334db2,eax
  422765:	fld    QWORD PTR [esi+0x3d]
  422768:	adc    al,0x9b
  42276a:	mov    eax,0x6c8016c2
  42276f:	mov    ds:0xc340e7d8,al
  422774:	sahf   
  422775:	fbstp  TBYTE PTR [edi-0x7a67bc20]
  42277b:	leave  
  42277c:	push   cs
  42277d:	jbe    0x422726
  42277f:	dec    esi
  422780:	adc    DWORD PTR [eax+0x19d114e3],ecx
  422786:	hlt    
  422787:	mov    es,WORD PTR [edx]
  422789:	pop    esp
  42278a:	inc    eax
  42278b:	sub    BYTE PTR [ecx-0x7a],dl
  42278e:	into   
  42278f:	mov    al,0xef
  422791:	cs jge 0x422804
  422794:	dec    ecx
  422795:	sub    eax,0x39874d36
  42279a:	stc    
  42279b:	fnstsw WORD PTR [ecx+0x221d03a3]
  4227a1:	test   BYTE PTR [ecx],cl
  4227a3:	mov    eax,ds:0x5d3fbd61
  4227a8:	mov    eax,ds:0x2008fba1
  4227ad:	ins    DWORD PTR es:[edi],dx
  4227ae:	lea    ebp,[ebp+0x1cdf12e7]
  4227b4:	in     eax,0xde
  4227b6:	xchg   edx,eax
  4227b7:	jne    0x4227f0
  4227b9:	nop
  4227ba:	pop    edx
  4227bc:	add    BYTE PTR [eax],al
  4227be:	add    BYTE PTR [eax],al
  4227c0:	add    BYTE PTR [eax],al
  4227c2:	int    0x2d
  4227c4:	xchg   ebp,eax
  4227c5:	inc    ebx
  4227c6:	cmc    
  4227c7:	sti    
  4227c8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ce:	hlt    
  4227cf:	push   ebx
  4227d0:	daa    
  4227d1:	xor    al,0x29
  4227d3:	fld    QWORD PTR [ecx]
  4227d5:	add    BYTE PTR [edx+0x0],ah
  4227d8:	add    BYTE PTR [eax],al
  4227da:	xchg   ecx,eax
  4227db:	push   ss
  4227dc:	push   ebp
  4227dd:	mov    bl,al
  4227df:	nop
  4227e0:	mov    edi,0x33095e42
  4227e5:	add    eax,0x2a4f04bc
  4227ea:	sbb    bl,BYTE PTR [edx-0xc0c36d4]
  4227f0:	lods   al,BYTE PTR ds:[esi]
  4227f1:	sbb    DWORD PTR [ecx-0x11aae855],ebx
  4227f7:	out    0x9d,eax
  4227f9:	sahf   
  4227fa:	sti    
  4227fb:	rcr    BYTE PTR [bp+si+0x3446],cl
  422800:	gs sbb al,0x84
  422803:	jge    0x4227a0
  422805:	adc    DWORD PTR ds:0x40097804,ebx
  42280b:	or     BYTE PTR [edi-0x47],bh
  42280e:	sbb    BYTE PTR [esi-0x3b],ch
  422811:	lods   al,BYTE PTR ds:[esi]
  422812:	xchg   edi,eax
  422813:	add    DWORD PTR [eax-0x5a],eax
  422816:	dec    ebx
  422817:	adc    eax,0xaadf4950
  42281c:	jno    0x42286e
  42281e:	fcom   DWORD PTR [edi]
  422820:	push   esi
  422821:	cmp    al,0xd7
  422823:	fnstsw WORD PTR [esi+0x7bec236b]
  422829:	aam    0xa9
  42282b:	and    DWORD PTR [edx+0x4fd98fa4],esp
  422831:	pop    es
  422832:	shr    BYTE PTR [ebx+0x12],1
  422835:	xor    al,0xbe
  422837:	push   ecx
  422838:	in     al,0x8e
  42283a:	setbe  BYTE PTR [eax]
  42283d:	add    BYTE PTR [eax],al
  42283f:	add    BYTE PTR [eax],al
  422841:	add    BYTE PTR [ebx],dl
  422843:	fs out 0xb,eax
  422846:	test   DWORD PTR [ebx-0xce58301],0xae14cfc
  422850:	sub    eax,0x1dd8b4f
  422855:	add    BYTE PTR [edx+0x0],ah
  422858:	add    BYTE PTR [eax],al
  42285a:	jnp    0x4228a6
  42285c:	sbb    dl,BYTE PTR [ecx+0x6b]
  42285f:	push   ds
  422860:	mov    al,0x8c
  422862:	dec    esi
  422863:	pop    esi
  422864:	aas    
  422865:	inc    ecx
  422866:	ret    
  422867:	cmp    ebx,edi
  422869:	pop    ds
  42286a:	dec    esp
  42286b:	(bad)  
  42286c:	stos   DWORD PTR es:[edi],eax
  42286d:	aaa    
  42286e:	not    ebx
  422870:	jb     0x422896
  422872:	sub    BYTE PTR [ecx+0x5c42da38],0xb5
  422879:	(bad)  
  42287a:	ds (bad) 
  42287c:	das    
  42287d:	jge    0x42280a
  42287f:	and    al,0x6d
  422881:	js     0x4228fd
  422883:	idiv   DWORD PTR [edx+0xea92b45]
  422889:	test   eax,edx
  42288b:	es dec ebx
  42288d:	jne    0x4228a7
  42288f:	push   cs
  422890:	test   al,0x81
  422893:	xchg   edi,eax
  422894:	int3   
  422895:	shr    BYTE PTR [ecx-0x1a],1
  422898:	adc    dl,0xeb
  42289b:	inc    ecx
  42289c:	loop   0x422880
  42289e:	push   esi
  42289f:	int    0x3
  4228a1:	mov    edi,esp
  4228a3:	xor    al,0xb1
  4228a5:	bsf    esi,DWORD PTR [ebx]
  4228a8:	cwde   
  4228a9:	sub    al,0x80
  4228ab:	mov    ecx,0x24358278
  4228b0:	sub    edi,ebp
  4228b2:	out    dx,al
  4228b3:	aaa    
  4228b4:	or     eax,0x7536a1db
  4228b9:	fs lahf 
  4228bb:	imul   eax,DWORD PTR [eax],0x0
  4228be:	add    BYTE PTR [eax],al
  4228c0:	add    BYTE PTR [eax],al
  4228c2:	add    dl,BYTE PTR ss:[ebp+0xc]
  4228c6:	jne    0x422927
  4228c8:	jg     0x422904
  4228ca:	clc    
  4228cb:	cs aas 
  4228cd:	push   0x983e3084
  4228d2:	and    eax,0x620001d0
  4228d7:	add    BYTE PTR [eax],al
  4228d9:	add    BYTE PTR [ecx],bh
  4228db:	mov    bl,0x77
  4228dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228de:	fmul   DWORD PTR [esi]
  4228e0:	push   esp
  4228e1:	std    
  4228e2:	mov    dh,dl
  4228e4:	push   cs
  4228e5:	arpl   WORD PTR [edi+0x52],si
  4228e8:	ss xor al,0x91
  4228eb:	aam    0xe2
  4228ed:	scas   al,BYTE PTR es:[edi]
  4228ee:	je     0x4228c6
  4228f0:	sbb    bl,BYTE PTR [ebx+0x6ff268e]
  4228f6:	lock pusha 
  4228f8:	xchg   esi,eax
  4228f9:	sbb    DWORD PTR [esi+0x5560961],esi
  4228ff:	sbb    BYTE PTR [edi-0x28],dh
  422902:	mov    esi,DWORD PTR [ebx-0x19]
  422905:	dec    edx
  422906:	pop    ecx
  422907:	lods   eax,DWORD PTR ds:[esi]
  422908:	aad    0x9a
  42290a:	jo     0x4228c9
  42290c:	jmp    0x4228e4
  42290e:	push   0xffffffdb
  422910:	out    0x25,al
  422912:	and    eax,ecx
  422914:	out    dx,al
  422915:	shr    ebp,1
  422917:	rcr    DWORD PTR [esi+0x52],0x8d
  42291b:	push   ebp
  42291c:	scas   al,BYTE PTR es:[edi]
  42291d:	out    dx,eax
  42291e:	pop    edx
  42291f:	arpl   WORD PTR [ebp-0x6c],di
  422922:	imul   BYTE PTR [ecx+0x1a]
  422925:	std    
  422926:	dec    esp
  422927:	pushf  
  422928:	or     ch,dl
  42292a:	push   esp
  42292b:	outs   dx,DWORD PTR ds:[esi]
  42292c:	or     al,0xc0
  42292e:	mov    ds:0x1f2bd76,eax
  422933:	mov    ds:0xbdf6ee7c,al
  422938:	push   ebx
  422939:	dec    ebx
  42293a:	repnz scas eax,DWORD PTR es:[edi]
  42293c:	add    BYTE PTR [eax],al
  42293e:	add    BYTE PTR [eax],al
  422940:	add    BYTE PTR [eax],al
  422942:	or     BYTE PTR [ecx-0x404c48e],dh
  422948:	dec    ecx
  422949:	mov    bl,0x94
  42294b:	je     0x422924
  42294d:	call   0xd087:0x9d062ec9
  422954:	add    DWORD PTR [eax],eax
  422956:	bound  eax,QWORD PTR [eax]
  422958:	add    BYTE PTR [eax],al
  42295a:	mov    gs,WORD PTR [ebx]
  42295c:	push   0xffffffcc
  42295e:	dec    edi
  42295f:	cmp    BYTE PTR ds:0x1172ac96,0x6c
  422966:	call   0xc10:0x9434f671
  42296d:	inc    ebx
  42296e:	call   DWORD PTR [ecx-0x59]
  422971:	and    eax,0x2a634aa7
  422976:	dec    ebp
  422977:	xchg   edi,eax
  422978:	mov    edi,0xd26f5f31
  42297d:	dec    ecx
  42297e:	mov    al,ds:0x8d566729
  422983:	pop    esi
  422984:	inc    edx
  422985:	pause  
  422987:	push   esi
  422988:	mov    DWORD PTR [ebx],eax
  42298a:	fdivp  st(6),st
  42298c:	(bad)  
  42298d:	cli    
  42298e:	mov    eax,0x6b3b9c21
  422993:	mov    WORD PTR [edi+0x6d],fs
  422996:	int3   
  422997:	lds    edi,FWORD PTR [esp+edx*2]
  42299a:	inc    esp
  42299b:	ss xchg ah,ah
  42299e:	xor    ecx,DWORD PTR [eax-0x7f400858]
  4229a4:	out    dx,al
  4229a5:	(bad)  
  4229a6:	fdivr  DWORD PTR ds:0x316cec6b
  4229ac:	repnz mov edx,0x5c191930
  4229b2:	in     al,dx
  4229b3:	sbb    bh,dh
  4229b5:	sbb    DWORD PTR [edx],0x51
  4229b8:	outs   dx,DWORD PTR ds:[esi]
  4229b9:	xor    DWORD PTR [ebx+0x6e],edx
  4229bc:	add    BYTE PTR [eax],al
  4229be:	add    BYTE PTR [eax],al
  4229c0:	add    BYTE PTR [eax],al
  4229c2:	fist   WORD PTR [ebx-0x4e]
  4229c5:	dec    edi
  4229c6:	mov    esi,0x67d3ffef
  4229cb:	xchg   ecx,edi
  4229cd:	adc    al,0x4e
  4229cf:	dec    DWORD PTR [eax+0x1d0e953]
  4229d5:	add    BYTE PTR [edx+0x0],ah
  4229d8:	add    BYTE PTR [eax],al
  4229da:	pushf  
  4229db:	mov    dl,0xfd
  4229dd:	jecxz  0x422a0e
  4229df:	nop    DWORD PTR [edx]
  4229e2:	sti    
  4229e3:	fsub   QWORD PTR [edx+eax*8-0x24]
  4229e7:	sti    
  4229e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e9:	cmc    
  4229ea:	out    0x7e,eax
  4229ec:	shr    DWORD PTR [eax+0x3b5d88d4],cl
  4229f2:	inc    eax
  4229f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f4:	jmp    0x422a1f
  4229f6:	loopne 0x422979
  4229f8:	shl    bh,0xcf
  4229fb:	popf   
  4229fc:	pushf  
  4229fd:	mov    dh,0xc3
  4229ff:	in     eax,dx
  422a00:	push   cs
  422a01:	adc    eax,ecx
  422a03:	sub    eax,0x8aaf9d4
  422a08:	jae    0x422a1a
  422a0a:	or     al,bl
  422a0c:	dec    edi
  422a0d:	mov    edi,0x3d5d3a36
  422a12:	xchg   esi,eax
  422a13:	lock inc edi
  422a15:	call   0x637d:0x5291ff4f
  422a1c:	adc    al,0x94
  422a1e:	(bad)  
  422a1f:	fdivr  st(5),st
  422a21:	and    al,0xb9
  422a23:	inc    ebp
  422a24:	ds jmp 0x422a53
  422a27:	xor    DWORD PTR ds:0x2eb9559,ebx
  422a2d:	adc    DWORD PTR [ecx+0x4a],esp
  422a30:	hlt    
  422a31:	and    eax,0x63af6993
  422a36:	test   BYTE PTR [eax-0x679dfe1e],ah
  422a3c:	add    BYTE PTR [eax],al
  422a3e:	add    BYTE PTR [eax],al
  422a40:	add    BYTE PTR [eax],al
  422a42:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a45:	fcmovu st,st(3)
  422a47:	fisttp WORD PTR [edi+0x640ccb5d]
  422a4d:	push   ss
  422a4e:	mov    ebp,0x4bb7b011
  422a53:	rol    DWORD PTR [ecx],1
  422a55:	add    BYTE PTR [edx+0x0],ah
  422a58:	add    BYTE PTR [eax],al
  422a5a:	and    ch,bl
  422a5c:	shr    DWORD PTR [edx+0x55950280],0x51
  422a63:	loopne 0x422a22
  422a65:	sbb    DWORD PTR [esi-0x5ebd7ee1],edi
  422a6b:	jg     0x422a42
  422a6d:	sbb    BYTE PTR [ebx],0xfd
  422a70:	jmp    0x422a3d
  422a72:	scas   eax,DWORD PTR es:[edi]
  422a73:	fstp   QWORD PTR [edx+0x15]
  422a76:	pop    ds
  422a77:	jmp    0x9b9f:0x4b98a635
  422a7e:	shl    DWORD PTR [edi+0x6a],cl
  422a81:	lahf   
  422a82:	sbb    eax,0x5b414ad1
  422a87:	push   0x840f7fd
  422a8c:	adc    al,0x39
  422a8e:	retf   
  422a8f:	ret    0xef6d
  422a92:	xchg   ebx,ebp
  422a94:	jne    0x422a3b
  422a96:	add    ah,BYTE PTR [esi]
  422a98:	pop    edx
  422a99:	sub    ah,dl
  422a9b:	fadd   st,st(3)
  422a9d:	jbe    0x422a3f
  422a9f:	iret   
  422aa0:	and    ch,BYTE PTR [ebp-0x10]
  422aa3:	std    
  422aa4:	mov    eax,0x448be251
  422aa9:	fs push 0x2c
  422aac:	add    DWORD PTR [ecx-0x7f047a47],ebp
  422ab2:	int3   
  422ab3:	icebp  
  422ab4:	lds    ecx,FWORD PTR [ecx]
  422ab6:	fild   QWORD PTR [ecx+0x155294a6]
  422abc:	add    BYTE PTR [eax],al
  422abe:	add    BYTE PTR [eax],al
  422ac0:	add    BYTE PTR [eax],al
  422ac2:	lahf   
  422ac3:	arpl   WORD PTR [ebp+0x72],cx
  422ac6:	std    
  422ac7:	jle    0x422a88
  422ac9:	out    dx,eax
  422aca:	sbb    edi,esp
  422acc:	mov    BYTE PTR [edi+edx*1-0x52c6b918],dh
  422ad3:	rol    DWORD PTR [ecx],1
  422ad5:	add    BYTE PTR [edx+0x0],ah
  422ad8:	add    BYTE PTR [eax],al
  422ada:	mov    dl,0x4d
  422adc:	sbb    ch,BYTE PTR [eax]
  422ade:	and    bl,BYTE PTR [ebp+0x64]
  422ae1:	call   0xcbb6:0xc38e17ac
  422ae8:	xor    DWORD PTR [ebx],edi
  422aea:	sub    DWORD PTR [esi-0x85e5857],esp
  422af0:	adc    DWORD PTR [ebp+0x14ddb526],edi
  422af6:	ds stc 
  422af8:	out    dx,al
  422af9:	and    eax,0x10f91240
  422afe:	mov    WORD PTR ds:0xfa034dea,ss
  422b04:	shl    esp,1
  422b06:	loop   0x422aba
  422b08:	xchg   esp,eax
  422b09:	xchg   edx,eax
  422b0a:	mov    DWORD PTR [edi+ecx*8-0x6f],ebp
  422b0e:	call   0x91e9dbd0
  422b13:	mov    cl,0xab
  422b15:	or     esi,ebp
  422b17:	jecxz  0x422b0e
  422b19:	adc    al,0xfd
  422b1b:	das    
  422b1c:	xchg   esi,eax
  422b1d:	data16 or BYTE PTR [ecx+0x39],0xa6
  422b22:	xchg   ebp,eax
  422b23:	xor    cl,ah
  422b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b26:	cmp    eax,0x9a0abef3
  422b2b:	mov    edx,DWORD PTR [esi]
  422b2d:	dec    ebp
  422b2e:	ins    BYTE PTR es:[edi],dx
  422b2f:	arpl   WORD PTR [eax],cx
  422b31:	fmulp  st(7),st
  422b33:	lds    ebp,FWORD PTR [edx+0x2b]
  422b36:	test   eax,0x6fc4a584
  422b3b:	xor    BYTE PTR [eax],al
  422b3d:	add    BYTE PTR [eax],al
  422b3f:	add    BYTE PTR [eax],al
  422b41:	add    BYTE PTR [eax+0x23],dh
  422b44:	and    eax,0x7c6f7769
  422b49:	cmp    esp,DWORD PTR [eax+0x13bcee1c]
  422b4f:	sbb    edi,DWORD PTR [edx-0xa]
  422b52:	psrld  mm0,QWORD PTR [ecx]
  422b55:	add    BYTE PTR [edx+0x0],ah
  422b58:	add    BYTE PTR [eax],al
  422b5a:	push   0xacfe48e2
  422b5f:	dec    esp
  422b60:	fwait
  422b61:	and    al,0x47
  422b63:	leave  
  422b64:	cmp    al,0x84
  422b66:	rcl    DWORD PTR [eax-0x61],0xa8
  422b6a:	pop    es
  422b6b:	or     ebp,ebp
  422b6d:	jmp    0x422bde
  422b6f:	cmc    
  422b70:	sub    DWORD PTR [esi-0x53],ebp
  422b73:	fst    QWORD PTR [ebp+ebx*8-0x7e23718a]
  422b7a:	adc    al,0x64
  422b7c:	sub    BYTE PTR [ebp+ebx*4+0x7f],al
  422b80:	xor    BYTE PTR [edx],bh
  422b82:	jp     0x422b52
  422b84:	push   es
  422b85:	xor    DWORD PTR [ebx-0x761fb7cd],ecx
  422b8b:	xchg   esi,eax
  422b8c:	add    al,0xc6
  422b8e:	lea    edx,[edi]
  422b90:	retf   
  422b91:	or     ch,al
  422b93:	and    eax,0x53765f0a
  422b98:	and    ah,dl
  422b9a:	mov    al,0x46
  422b9c:	sub    cl,al
  422b9e:	adc    eax,0x4e8e90d5
  422ba3:	jbe    0x422b80
  422ba5:	ret    
  422ba6:	add    eax,0xfce9e5f7
  422bab:	inc    ecx
  422bac:	cmp    BYTE PTR [ebp+0x1bd4c505],dl
  422bb2:	and    ecx,esi
  422bb4:	cli    
  422bb5:	(bad)  
  422bb6:	sub    al,ch
  422bb8:	(bad)  
  422bb9:	pop    ebx
  422bba:	fcom   DWORD PTR [edx]
  422bbc:	add    BYTE PTR [eax],al
  422bbe:	add    BYTE PTR [eax],al
  422bc0:	add    BYTE PTR [eax],al
  422bc2:	xchg   esp,eax
  422bc3:	nop
  422bc4:	ffree  st(0)
  422bc6:	(bad)  
  422bc8:	popf   
  422bc9:	aam    0x57
  422bcb:	(bad)
  422bcf:	cmc    
  422bd0:	or     al,0x4c
  422bd2:	jno    0x422ba6
  422bd4:	add    DWORD PTR [eax],eax
  422bd6:	bound  eax,QWORD PTR [eax]
  422bd8:	add    BYTE PTR [eax],al
  422bda:	aad    0xce
  422bdc:	mov    eax,0x4a31661c
  422be1:	push   ebp
  422be2:	cmp    DWORD PTR [eax+0x76],ecx
  422be5:	pop    ebp
  422be6:	mov    dl,0x33
  422be8:	das    
  422be9:	sub    esp,DWORD PTR [esi]
  422beb:	dec    esi
  422bec:	cwde   
  422bed:	xlat   BYTE PTR ds:[ebx]
  422bee:	mov    ds:0x77a299f7,al
  422bf3:	lea    esp,[esi-0x5a]
  422bf6:	cmp    eax,0x7019d95a
  422bfb:	sbb    DWORD PTR [eax-0x5f],ebx
  422bfe:	xchg   ebp,eax
  422bff:	cli    
  422c00:	repz (bad) 
  422c02:	mov    ch,0x13
  422c04:	and    eax,0xd11f2d61
  422c09:	sub    dh,0x5e
  422c0c:	or     DWORD PTR [ebp-0x5716abea],0xbae87108
  422c16:	fmul   QWORD PTR [ecx]
  422c18:	mov    BYTE PTR [edi-0x20],0x39
  422c1c:	arpl   WORD PTR [esi+0x42a7df02],ax
  422c22:	rcl    DWORD PTR [ebp-0x6d],1
  422c25:	(bad)  
  422c26:	sbb    ch,ah
  422c28:	rol    esi,0x70
  422c2b:	mov    eax,ds:0xcaa1f217
  422c30:	xor    ch,BYTE PTR [ebx+0x83fe68b]
  422c36:	into   
  422c37:	pushf  
  422c38:	adc    DWORD PTR ds:0xd47a,0x0
  422c3f:	add    BYTE PTR [eax],al
  422c41:	add    ah,dh
  422c43:	mov    dl,0x32
  422c45:	(bad)  
  422c46:	jbe    0x422c1e
  422c48:	hlt    
  422c49:	mov    dl,0xb1
  422c4b:	and    al,0xfe
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4f:	jmp    0x1:0xd2d38f28
  422c56:	bound  eax,QWORD PTR [eax]
  422c58:	add    BYTE PTR [eax],al
  422c5a:	inc    ebx
  422c5b:	push   eax
  422c5c:	or     al,0xce
  422c5e:	and    ch,cl
  422c60:	lods   eax,DWORD PTR ds:[esi]
  422c61:	lds    esi,FWORD PTR ds:0xc26be2b5
  422c67:	fistp  QWORD PTR [eax+eax*1-0x6e]
  422c6b:	adc    eax,0xce55cf95
  422c70:	xchg   edx,eax
  422c71:	inc    DWORD PTR [edi-0x62]
  422c74:	scas   eax,DWORD PTR es:[edi]
  422c75:	test   BYTE PTR [ecx+edx*8-0x13af525c],dh
  422c7c:	aaa    
  422c7d:	xchg   ecx,eax
  422c7e:	add    eax,0x8ac63a9b
  422c83:	les    ebp,FWORD PTR [edx]
  422c85:	cmc    
  422c86:	dec    ebp
  422c87:	mov    ecx,DWORD PTR [ecx+0x4a]
  422c8a:	mov    BYTE PTR [edx],bh
  422c8c:	xor    bl,al
  422c8e:	(bad)  
  422c90:	aad    0x71
  422c92:	sbb    edx,edx
  422c94:	enter  0xee4f,0x31
  422c98:	cmp    al,0x96
  422c9a:	xchg   esi,eax
  422c9b:	sub    cl,BYTE PTR [edx+ebx*2+0x62]
  422c9f:	adc    ch,ch
  422ca1:	cs pop edi
  422ca3:	xchg   DWORD PTR [eax],ebp
  422ca5:	or     ch,dl
  422ca7:	dec    ebx
  422ca8:	inc    esp
  422ca9:	push   ebp
  422caa:	stos   DWORD PTR es:[edi],eax
  422cab:	test   DWORD PTR [ecx],ebx
  422cad:	arpl   dx,di
  422caf:	lds    edi,FWORD PTR [ebp+0x251ab8c6]
  422cb5:	pop    edx
  422cb6:	xor    al,bl
  422cb8:	std    
  422cb9:	clc    
  422cba:	inc    ebp
  422cbb:	push   esp
  422cbc:	add    BYTE PTR [eax],al
  422cbe:	add    BYTE PTR [eax],al
  422cc0:	add    BYTE PTR [eax],al
  422cc2:	xor    dl,bl
  422cc4:	into   
  422cc5:	mov    ds:0xd37ebfef,al
  422cca:	sub    edi,DWORD PTR [esi]
  422ccc:	out    0x3f,eax
  422cce:	dec    edx
  422ccf:	outs   dx,DWORD PTR ds:[si]
  422cd1:	push   ebx
  422cd2:	xor    eax,0x620001d3
  422cd7:	add    BYTE PTR [eax],al
  422cd9:	add    bh,dh
  422cdb:	pop    ds
  422cdc:	jmp    0x422d37
  422cde:	inc    esp
  422cdf:	int3   
  422ce0:	fisubr DWORD PTR [eax-0xb]
  422ce3:	in     al,0x3e
  422ce5:	mov    bh,0x5c
  422ce7:	xor    al,0x1d
  422ce9:	cmp    DWORD PTR [eax+edi*2-0x1527e28a],edi
  422cf0:	loop   0x422d55
  422cf2:	mov    bl,0x7a
  422cf4:	xor    al,0xd9
  422cf6:	jne    0x422cd7
  422cf8:	or     al,0x9
  422cfa:	in     al,0xc6
  422cfc:	add    edi,DWORD PTR [ebp-0x28]
  422cff:	jmp    0x906ecf0c
  422d04:	sbb    bl,BYTE PTR [ecx+0x65]
  422d07:	mov    cx,0x3f76
  422d0b:	jbe    0x422cf5
  422d0d:	add    ax,0xc530
  422d11:	and    bl,cl
  422d13:	scas   al,BYTE PTR es:[edi]
  422d14:	adc    eax,0x49b74b23
  422d19:	sub    al,0x57
  422d1b:	fucom  st(4)
  422d1d:	jo     0x422caa
  422d1f:	mov    bh,0xce
  422d21:	push   esp
  422d22:	ss cmp eax,0x4ec05691
  422d28:	jg     0x422d86
  422d2a:	test   DWORD PTR [edi+0x56172adc],eax
  422d30:	xor    DWORD PTR ds:0xf74267ee,ebx
  422d36:	das    
  422d37:	cwde   
  422d38:	sahf   
  422d39:	shl    bl,cl
  422d3b:	xchg   ebp,eax
  422d3c:	add    BYTE PTR [eax],al
  422d3e:	add    BYTE PTR [eax],al
  422d40:	add    BYTE PTR [eax],al
  422d42:	fucomi st,st(5)
  422d44:	outs   dx,BYTE PTR ds:[esi]
  422d45:	and    bh,BYTE PTR [esi-0x5d]
  422d48:	(bad)  
  422d4a:	pop    esi
  422d4b:	(bad)  
  422d4c:	mov    DWORD PTR [ebp+0x27814c03],ecx
  422d52:	xchg   edi,eax
  422d53:	rol    DWORD PTR [ecx],cl
  422d55:	add    BYTE PTR [edx+0x0],ah
  422d58:	add    BYTE PTR [eax],al
  422d5a:	and    al,0x3b
  422d5c:	ror    DWORD PTR [eax+0x1b206dce],cl
  422d62:	test   al,0x31
  422d64:	sub    al,0x1e
  422d66:	cs stc 
  422d68:	ins    BYTE PTR es:[edi],dx
  422d69:	pop    ecx
  422d6a:	xor    ebp,ebp
  422d6c:	out    0xb9,eax
  422d6e:	sbb    dl,BYTE PTR [edi-0x2bd3d41]
  422d74:	lahf   
  422d75:	mov    WORD PTR [esi+0x6a],ss
  422d78:	sub    eax,0x41b7cf14
  422d7d:	sbb    al,0x10
  422d7f:	jmp    0xe8eb:0xf511cf38
  422d86:	adc    BYTE PTR [ecx+0x2bf0ed97],bl
  422d8c:	aaa    
  422d8d:	sub    ebx,esi
  422d8f:	mov    bl,0x54
  422d91:	jle    0x422d64
  422d93:	jp     0x422db7
  422d95:	xchg   ebx,eax
  422d96:	cmp    dl,BYTE PTR [ebp+0x34]
  422d99:	push   edi
  422d9a:	jmp    0x422dd2
  422d9c:	(bad)  
  422d9d:	jmp    0x13b:0x31de1a9a
  422da4:	or     eax,0x9370bf66
  422da9:	mov    eax,0xb4246ce9
  422dae:	pushf  
  422daf:	inc    eax
  422db0:	ror    DWORD PTR ds:0xbe8da9f9,1
  422db6:	(bad)  
  422db8:	push   ds
  422db9:	pop    es
  422dba:	dec    ebx
  422dbb:	adc    DWORD PTR [eax],eax
  422dbd:	add    BYTE PTR [eax],al
  422dbf:	add    BYTE PTR [eax],al
  422dc1:	add    BYTE PTR ds:0x6f976b22,al
  422dc7:	(bad)  
  422dc9:	mov    dl,0x66
  422dcb:	and    BYTE PTR [esi-0x4ae63096],ah
  422dd1:	inc    esp
  422dd2:	stc    
  422dd3:	rol    DWORD PTR [ecx],cl
  422dd5:	add    BYTE PTR [edx+0x0],ah
  422dd8:	add    BYTE PTR [eax],al
  422dda:	rcl    BYTE PTR [ebx+0x39],0x35
  422dde:	mov    eax,ds:0x6ed76850
  422de3:	and    DWORD PTR [esi],eax
  422de5:	xchg   edx,eax
  422de6:	mov    eax,0xc4843b95
  422deb:	xchg   edx,eax
  422dec:	out    dx,eax
  422ded:	cs shl eax,cl
  422df0:	dec    ecx
  422df1:	xor    DWORD PTR [edi],edi
  422df3:	out    dx,al
  422df4:	pop    edx
  422df5:	sbb    ebx,esi
  422df7:	sar    BYTE PTR [edi-0x5e9b50df],1
  422dfd:	retf   
  422dfe:	ds mov ah,0x41
  422e01:	jne    0x422e0d
  422e03:	sub    ecx,DWORD PTR ds:0x3a32cb7d
  422e09:	xchg   edx,eax
  422e0a:	into   
  422e0b:	cdq    
  422e0c:	mov    dh,0x64
  422e0e:	xchg   edx,eax
  422e0f:	mov    cl,0x52
  422e11:	mov    ebx,0xe456fc3a
  422e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e17:	pop    edx
  422e18:	mov    esp,0xb232cdda
  422e1d:	add    ecx,DWORD PTR [edi-0x30]
  422e20:	jmp    DWORD PTR [ebx-0x3c]
  422e23:	inc    esp
  422e24:	pop    ebp
  422e25:	daa    
  422e26:	outs   dx,BYTE PTR ds:[esi]
  422e27:	xor    ch,dl
  422e29:	std    
  422e2a:	mov    dl,BYTE PTR [eax]
  422e2c:	jne    0x422e89
  422e2e:	ds ror esi,1
  422e31:	cmp    dh,cl
  422e33:	cs in  eax,0x17
  422e36:	ins    BYTE PTR es:[edi],dx
  422e37:	jns    0x422e24
  422e39:	pop    ds
  422e3a:	out    0x43,eax
  422e3c:	add    BYTE PTR [eax],al
  422e3e:	add    BYTE PTR [eax],al
  422e40:	add    BYTE PTR [eax],al
  422e42:	mov    edx,esp
  422e44:	and    al,0xd9
  422e46:	jg     0x422e41
  422e48:	call   esi
  422e4a:	into   
  422e4b:	inc    ebp
  422e4c:	mov    bh,0x11
  422e4e:	gs xchg ebx,eax
  422e50:	(bad)  
  422e51:	mov    bl,BYTE PTR [ebx-0x2c]
  422e54:	add    DWORD PTR [eax],eax
  422e56:	bound  eax,QWORD PTR [eax]
  422e58:	add    BYTE PTR [eax],al
  422e5a:	inc    eax
  422e5b:	mov    bh,0x12
  422e5d:	xor    ecx,edi
  422e5f:	ins    BYTE PTR es:[edi],dx
  422e60:	mov    BYTE PTR [esi+0x33],bh
  422e63:	hlt    
  422e64:	pop    es
  422e65:	jg     0x422ea5
  422e67:	sub    BYTE PTR gs:[ebx+ebp*1],bh
  422e6b:	aas    
  422e6c:	pushf  
  422e6d:	jbe    0x422def
  422e6f:	push   eax
  422e70:	adc    al,0x6
  422e72:	mov    esi,gs
  422e74:	push   esi
  422e75:	(bad)  
  422e76:	push   0xac8806e2
  422e7b:	ficom  DWORD PTR ds:0x450fe43d
  422e81:	xor    cl,BYTE PTR [ecx+esi*2+0x38ba0f37]
  422e88:	sti    
  422e89:	cmp    bh,ch
  422e8b:	jl     0x422eaa
  422e8d:	outs   dx,BYTE PTR ds:[esi]
  422e8e:	mov    edx,0x1d81912a
  422e93:	(bad)  
  422e94:	retf   0xf1f0
  422e97:	sbb    al,0x49
  422e99:	popa   
  422e9a:	mov    esi,DWORD PTR [eax+0x49f86cd8]
  422ea0:	cmp    ah,al
  422ea2:	jbe    0x422e95
  422ea4:	je     0x422f08
  422ea6:	sbb    eax,0xd0989fb5
  422eab:	adc    eax,0x86b2bc89
  422eb0:	out    0xfd,eax
  422eb2:	adc    edx,eax
  422eb4:	push   cs
  422eb5:	scas   eax,DWORD PTR es:[edi]
  422eb6:	dec    ebp
  422eb7:	pop    eax
  422eb8:	scas   eax,DWORD PTR es:[edi]
  422eb9:	add    dh,dl
  422ebb:	and    BYTE PTR [eax],al
  422ebd:	add    BYTE PTR [eax],al
  422ebf:	add    BYTE PTR [eax],al
  422ec1:	add    dh,bl
  422ec3:	sub    DWORD PTR [eax-0x210c002e],ebx
  422ec9:	sub    eax,0x4af35f6
  422ece:	stos   DWORD PTR es:[edi],eax
  422ecf:	xchg   DWORD PTR [esp+edx*1+0x1d4bd],ebx
  422ed6:	bound  eax,QWORD PTR [eax]
  422ed8:	add    BYTE PTR [eax],al
  422eda:	pop    ecx
  422edb:	shl    BYTE PTR [ebp+0x268f8ca0],1
  422ee1:	out    dx,eax
  422ee2:	int3   
  422ee3:	fistp  WORD PTR [ebx+eax*2+0x25c0758f]
  422eea:	sbb    eax,0x7ed29557
  422eef:	fnstenv ds:0xc153fa05
  422ef5:	sub    eax,DWORD PTR [esi-0x3f]
  422ef8:	jne    0x422f19
  422efa:	sub    DWORD PTR [ebp-0x29],esi
  422efd:	in     eax,0x2c
  422eff:	jb     0x422ef6
  422f01:	xor    edi,DWORD PTR [edx*8+0x4bab21eb]
  422f08:	fdivr  st(2),st
  422f0a:	aad    0x65
  422f0c:	mov    bl,0x72
  422f0e:	les    ebx,FWORD PTR [ebx]
  422f10:	fcmovnb st,st(4)
  422f12:	loop   0x422f03
  422f14:	xchg   edi,eax
  422f15:	inc    eax
  422f16:	inc    esi
  422f17:	sub    al,0x1e
  422f19:	or     DWORD PTR [ebx+0x257ae781],eax
  422f1f:	cmp    al,0x5
  422f21:	pop    esi
  422f22:	mov    ch,0xc8
  422f24:	fdivr  st,st(3)
  422f26:	stos   DWORD PTR es:[edi],eax
  422f27:	cmp    eax,DWORD PTR [ebx-0x4d]
  422f2a:	mov    ch,0x91
  422f2c:	js     0x422f3a
  422f2e:	or     edx,DWORD PTR [edx]
  422f30:	mov    ds:0xcaf47727,eax
  422f35:	ret    0xf86b
  422f38:	push   eax
  422f39:	push   ebx
  422f3a:	jg     0x422f7d
  422f3c:	add    BYTE PTR [eax],al
  422f3e:	add    BYTE PTR [eax],al
  422f40:	add    BYTE PTR [eax],al
  422f42:	dec    esi
  422f43:	aas    
  422f44:	int3   
  422f45:	sbb    eax,0x7fdffffd
  422f4a:	out    dx,eax
  422f4b:	loopne 0x422f63
  422f4d:	lods   al,BYTE PTR ds:[esi]
  422f4e:	and    ebx,DWORD PTR [ebx+eiz*4+0x1d51f27]
  422f55:	add    BYTE PTR [edx+0x0],ah
  422f58:	add    BYTE PTR [eax],al
  422f5a:	hlt    
  422f5b:	mov    ss,WORD PTR [ebx+0x21]
  422f5e:	imul   ebp
  422f60:	outs   dx,BYTE PTR ds:[esi]
  422f61:	sub    ecx,DWORD PTR [eax-0x18ccd25f]
  422f67:	in     eax,dx
  422f68:	dec    eax
  422f69:	jns    0x422fb1
  422f6b:	sbb    DWORD PTR [ebp-0x73],esp
  422f6e:	add    edx,ecx
  422f70:	adc    ecx,edx
  422f72:	dec    ebp
  422f73:	test   ah,dh
  422f75:	loopne 0x422f82
  422f77:	(bad)  
  422f78:	adc    eax,0xfdeb4a6c
  422f7d:	jbe    0x422f97
  422f7f:	mov    edi,?
  422f81:	dec    ebx
  422f82:	out    dx,al
  422f83:	data16 sahf 
  422f85:	ret    0x66c7
  422f88:	les    ebp,FWORD PTR [edx]
  422f8a:	push   cs
  422f8b:	push   ss
  422f8c:	jmp    0xbe1c:0x3ded759
  422f93:	inc    ecx
  422f94:	fistp  DWORD PTR [edi]
  422f96:	inc    edx
  422f97:	jnp    0x422f57
  422f99:	jmp    0xe8db:0xe2398ba2
  422fa0:	mov    ds:0xc42a223a,eax
  422fa5:	out    dx,eax
  422fa6:	imul   edi,DWORD PTR [ebx-0x5],0x7d
  422faa:	xlat   BYTE PTR ds:[ebx]
  422fab:	inc    edi
  422fac:	xor    BYTE PTR [edi-0x27],0x4d
  422fb0:	fidivr WORD PTR [esi+0x5da94713]
  422fb6:	add    dl,bl
  422fb8:	fsub   QWORD PTR [esi-0x6]
  422fbb:	pop    DWORD PTR [eax]
  422fbd:	add    BYTE PTR [eax],al
  422fbf:	add    BYTE PTR [eax],al
  422fc1:	add    BYTE PTR [esi],bl
  422fc3:	test   eax,0x7ff735f6
  422fc8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fce:	test   DWORD PTR [esi-0x2a7eda4a],esi
  422fd4:	add    DWORD PTR [eax],eax
  422fd6:	bound  eax,QWORD PTR [eax]
  422fd8:	add    BYTE PTR [eax],al
  422fda:	mov    ebp,DWORD PTR [esi-0x30]
  422fdd:	jmp    0x879c5dd0
  422fe2:	lods   al,BYTE PTR ds:[esi]
  422fe3:	push   ebp
  422fe4:	iret   
  422fe5:	xchg   ecx,eax
  422fe6:	imul   edi,eax,0xffffffdf
  422fe9:	cmc    
  422fea:	xchg   esi,eax
  422feb:	iret   
  422fec:	jno    0x423053
  422fee:	xchg   ebx,eax
  422fef:	lea    ebp,[ecx-0x2d]
  422ff2:	inc    edx
  422ff3:	je     0x42304a
  422ff5:	push   cs
  422ff6:	mov    eax,ds:0xa26391ff
  422ffb:	jne    0x422fcd
  422ffd:	popf   
  422ffe:	and    DWORD PTR [ebp+eiz*1-0x2740938],edi
  423005:	push   esp
  423006:	shl    eax,0x97
  423009:	mov    al,0x1a
  42300b:	mov    edx,0xab043082
  423010:	jecxz  0x422fc7
  423012:	bound  ebx,QWORD PTR [edx+0x4e]
  423015:	mov    al,0x39
  423017:	enter  0xf72,0x2d
  42301b:	jg     0x422fee
  42301d:	push   ds
  42301e:	out    dx,eax
  42301f:	fcom   DWORD PTR [esi+0x17]
  423022:	or     edi,DWORD PTR ds:0x21a72eb1
  423028:	std    
  423029:	leave  
  42302a:	adc    al,0x2f
  42302c:	retf   0xd46d
  42302f:	sub    DWORD PTR [esi-0x627144ca],edi
  423035:	addr16 sub esp,edi
  423038:	sahf   
  423039:	fisubr DWORD PTR [edx]
  42303b:	adc    eax,0x0
  423040:	add    BYTE PTR [eax],al
  423042:	fwait
  423043:	loope  0x4230b2
  423045:	sub    eax,0xf7dbad7f
  42304a:	sar    BYTE PTR [ebx],cl
  42304c:	(bad)  
  42304d:	add    BYTE PTR [ecx-0x1ce0772d],dh
  423053:	aad    0x1
  423055:	add    BYTE PTR [edx+0x0],ah
  423058:	add    BYTE PTR [eax],al
  42305a:	dec    edx
  42305b:	mov    esi,0x871ef333
  423060:	cli    
  423061:	xor    ebp,DWORD PTR [edx]
  423063:	into   
  423064:	retf   
  423065:	sbb    eax,0xe5013c8e
  42306a:	ret    0x99cb
  42306d:	lods   eax,DWORD PTR ds:[esi]
  42306e:	mov    ds:0x9ae26857,al
  423073:	cmp    eax,0x1eab97b3
  423078:	adc    eax,0x91d35da0
  42307d:	add    al,BYTE PTR [edi-0x43]
  423080:	aad    0x30
  423082:	jg     0x423038
  423084:	mov    WORD PTR [ecx],?
  423086:	xchg   ch,bh
  423088:	stos   DWORD PTR es:[edi],eax
  423089:	xor    ebp,DWORD PTR [ecx-0x31]
  42308c:	js     0x4230d5
  42308e:	xchg   BYTE PTR [ebp-0x39],dl
  423091:	mov    BYTE PTR [ecx-0x2d],dh
  423094:	int3   
  423095:	scas   al,BYTE PTR es:[edi]
  423096:	fadd   st(4),st
  423098:	shl    DWORD PTR [edi-0x23],0x6d
  42309c:	xor    eax,0xe0d8ec13
  4230a1:	sub    dl,BYTE PTR [ebp+ebx*1+0x7daf961e]
  4230a8:	in     al,0x40
  4230aa:	imul   ebx,DWORD PTR [ebx+0x7c306750],0x75
  4230b1:	test   al,0x36
  4230b3:	in     eax,0x19
  4230b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b6:	push   edi
  4230b7:	cmp    DWORD PTR [esi+0x2f],0x8a43
  4230be:	add    BYTE PTR [eax],al
  4230c0:	add    BYTE PTR [eax],al
  4230c2:	or     bh,dh
  4230c4:	ja     0x423110
  4230c6:	dec    edx
  4230c8:	cmp    eax,0x2e8eedf7
  4230cd:	dec    eax
  4230ce:	push   0x45cda8f8
  4230d3:	(bad)  
  4230d4:	add    DWORD PTR [eax],eax
  4230d6:	bound  eax,QWORD PTR [eax]
  4230d8:	add    BYTE PTR [eax],al
  4230da:	stos   DWORD PTR es:[edi],eax
  4230db:	cmp    eax,0xf7206835
  4230e0:	shr    BYTE PTR [ecx],cl
  4230e2:	push   0xcb968abb
  4230e7:	dec    ebx
  4230e8:	fldcw  WORD PTR [edi]
  4230ea:	sub    eax,0x80fa66e1
  4230ef:	sahf   
  4230f0:	mov    al,0xa8
  4230f2:	stc    
  4230f3:	mov    bl,0x66
  4230f5:	lods   al,BYTE PTR ds:[esi]
  4230f6:	xchg   ebp,eax
  4230f7:	dec    edx
  4230f8:	and    bh,ch
  4230fa:	cmp    eax,ebx
  4230fc:	lds    eax,FWORD PTR [eax-0x46569864]
  423102:	ja     0x4230db
  423104:	mov    bh,0x2b
  423106:	add    cl,0xfc
  423109:	(bad)  
  42310a:	push   eax
  42310b:	test   BYTE PTR [eax-0x4c912c64],dl
  423111:	in     al,dx
  423112:	xor    eax,0x33904511
  423117:	pusha  
  423118:	push   0xdffabeaa
  42311d:	and    bl,BYTE PTR [ecx-0x504f97da]
  423123:	xor    DWORD PTR [eax+0x73a15021],ebx
  423129:	or     al,0xb4
  42312b:	push   es
  42312c:	in     eax,0x56
  42312e:	xchg   esp,eax
  42312f:	fs adc al,0x65
  423132:	nop
  423133:	mul    BYTE PTR [eax+0x904cc1c]
  423139:	div    DWORD PTR [edi]
  42313b:	mov    esp,0x0
  423140:	add    BYTE PTR [eax],al
  423142:	arpl   WORD PTR ss:[eax-0x10],bp
  423146:	jge    0x423143
  423148:	mov    esi,0x8c7853e7
  42314d:	daa    
  42314e:	gs add al,0xbd
  423151:	mov    cl,0xa7
  423153:	(bad)  
  423154:	add    DWORD PTR [eax],eax
  423156:	bound  eax,QWORD PTR [eax]
  423158:	add    BYTE PTR [eax],al
  42315a:	and    edx,0x3dae40c1
  423160:	push   ds
  423161:	mov    edi,ss
  423163:	js     0x423172
  423165:	aad    0x2d
  423167:	inc    eax
  423168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423169:	adc    BYTE PTR [eax-0x62c73542],cl
  42316f:	mov    ds:0x491f3697,al
  423174:	mov    WORD PTR [ebx+0x48],fs
  423177:	push   esi
  423178:	mov    bh,0xad
  42317a:	data16 out dx,al
  42317c:	sub    ebp,ebx
  42317e:	jo     0x423155
  423180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423181:	xor    al,0xd0
  423183:	jmp    FWORD PTR [eax+0x18]
  423186:	outs   dx,DWORD PTR ds:[esi]
  423187:	ds xchg edi,eax
  423189:	add    ebp,DWORD PTR [ebp+0x73e81dcf]
  42318f:	xor    eax,0xe8308e71
  423194:	dec    ebp
  423195:	mov    al,ds:0x35d7bb08
  42319a:	adc    eax,0x5e8af387
  42319f:	jbe    0x4231c4
  4231a1:	aaa    
  4231a2:	bound  ebx,QWORD PTR [edx+eax*2+0x34]
  4231a6:	es xor ebx,ecx
  4231a9:	out    dx,eax
  4231aa:	xlat   BYTE PTR ds:[ebx]
  4231ab:	(bad)  
  4231ac:	cmp    DWORD PTR [esi-0x162c189a],ebx
  4231b2:	repnz xor eax,ecx
  4231b5:	hlt    
  4231b6:	lods   al,BYTE PTR ds:[esi]
  4231b7:	dec    edi
  4231b8:	mov    eax,ds:0xa1aef5
  4231bd:	add    BYTE PTR [eax],al
  4231bf:	add    BYTE PTR [eax],al
  4231c1:	add    BYTE PTR [edi],ah
  4231c3:	push   ecx
  4231c4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231ce:	and    BYTE PTR [eax-0x4d],0x49
  4231d2:	in     eax,dx
  4231d3:	fld    QWORD PTR [ecx]
  4231d5:	add    BYTE PTR [edx+0x0],ah
  4231d8:	add    BYTE PTR [eax],al
  4231da:	xchg   BYTE PTR [esi],cl
  4231dc:	and    ebx,DWORD PTR [esi]
  4231de:	cmc    
  4231df:	mov    BYTE PTR [eax+eax*2-0x754327c1],cl
  4231e6:	loopne 0x42324c
  4231e8:	clc    
  4231e9:	dec    edx
  4231ea:	aad    0x29
  4231ec:	dec    esi
  4231ed:	ins    BYTE PTR es:[edi],dx
  4231ee:	jmp    FWORD PTR [eax]
  4231f0:	imul   ecx,DWORD PTR [ecx],0x32d16587
  4231f6:	pop    edx
  4231f7:	adc    ch,bl
  4231f9:	(bad)  
  4231fa:	dec    ebp
  4231fb:	loopne 0x42319d
  4231fd:	push   ss
  4231fe:	pop    esi
  4231ff:	shl    edx,cl
  423201:	push   edx
  423202:	add    eax,0x976e08b1
  423207:	mov    BYTE PTR [edi-0x12],ch
  42320a:	icebp  
  42320b:	(bad)  
  42320c:	mov    bh,0xc5
  42320e:	pop    eax
  42320f:	repz pop ecx
  423211:	or     dh,BYTE PTR [edx]
  423213:	test   BYTE PTR [ebx-0x2a],0x27
  423217:	lock inc edi
  423219:	lds    edx,FWORD PTR [edi+0xd]
  42321c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42321d:	inc    ebx
  42321e:	xchg   ebp,eax
  42321f:	out    dx,eax
  423220:	xchg   ebx,eax
  423221:	repnz xor DWORD PTR [ebx+0x62719ff2],ebx
  423228:	mov    eax,ds:0xb0eee069
  42322d:	shl    BYTE PTR [eax+0x6ea91c2e],1
  423233:	das    
  423234:	mov    esp,0x2a1eb235
  423239:	retf   0x182e
  42323c:	add    BYTE PTR [eax],al
  42323e:	add    BYTE PTR [eax],al
  423240:	add    BYTE PTR [eax],al
  423242:	daa    
  423243:	ss lahf 
  423245:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42324b:	and    eax,0xa4ad075b
  423250:	push   esp
  423251:	jg     0x4232a2
  423253:	fiadd  WORD PTR [ecx]
  423255:	add    BYTE PTR [edx+0x0],ah
  423258:	add    BYTE PTR [eax],al
  42325a:	pusha  
  42325b:	xor    ebx,edx
  42325d:	icebp  
  42325e:	dec    edx
  42325f:	jmp    DWORD PTR [ebx-0x6a0db0bc]
  423265:	or     al,0x62
  423267:	nop
  423268:	adc    esi,DWORD PTR [ecx-0xc4cf6fd]
  42326e:	iret   
  42326f:	call   FWORD PTR [esi-0x3a0174e4]
  423275:	(bad)  [ebx]
  423277:	mov    eax,ds:0x830f2b8c
  42327c:	(bad)  
  42327d:	and    bl,BYTE PTR [esi-0x7a735a40]
  423283:	out    0xd1,ax
  423286:	rcl    BYTE PTR [eax+ebx*8-0x591a40d0],cl
  42328d:	repz mov edx,0x9574e0f8
  423293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423294:	jle    0x4232a4
  423296:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  423298:	push   ds
  423299:	cwde   
  42329a:	leave  
  42329b:	push   esi
  42329c:	cwde   
  42329d:	jno    0x42325f
  42329f:	ds nop
  4232a1:	pop    ss
  4232a2:	cmp    eax,0xb128033a
  4232a7:	lods   eax,DWORD PTR ds:[esi]
  4232a8:	(bad)  
  4232a9:	outs   dx,BYTE PTR ds:[esi]
  4232aa:	sar    DWORD PTR [edi+0x53],1
  4232ad:	test   eax,0xa85b6a26
  4232b2:	outs   dx,DWORD PTR ds:[esi]
  4232b3:	in     al,dx
  4232b4:	xchg   ebx,eax
  4232b5:	xchg   edi,eax
  4232b6:	inc    ecx
  4232b7:	mov    esp,0x9f795278
  4232bc:	add    BYTE PTR [eax],al
  4232be:	add    BYTE PTR [eax],al
  4232c0:	add    BYTE PTR [eax],al
  4232c2:	aaa    
  4232c3:	(bad)  
  4232c4:	out    0xc2,eax
  4232c6:	mul    ebx
  4232c8:	aaa    
  4232c9:	cmc    
  4232ca:	xchg   ecx,eax
  4232cb:	call   0xac6b:0x35e3eef4
  4232d2:	mov    cl,0xde
  4232d4:	add    DWORD PTR [eax],eax
  4232d6:	bound  eax,QWORD PTR [eax]
  4232d8:	add    BYTE PTR [eax],al
  4232da:	out    0x2a,al
  4232dc:	dec    ecx
  4232dd:	cmp    cl,BYTE PTR [eax+0x10]
  4232e0:	fisttp DWORD PTR [ecx+0x6c720792]
  4232e6:	ins    DWORD PTR es:[edi],dx
  4232e7:	scas   eax,DWORD PTR es:[edi]
  4232e8:	sbb    al,0x9c
  4232ea:	and    BYTE PTR [ebp+ecx*2-0x49a12f2f],ch
  4232f1:	mov    ebp,0xec0574ce
  4232f6:	lds    edi,FWORD PTR [eax+0x6e]
  4232f9:	dec    eax
  4232fa:	(bad)  
  4232fb:	(bad)  
  4232fc:	fcompp 
  4232ff:	push   ebp
  423300:	pop    edx
  423301:	dec    ecx
  423302:	push   ds
  423303:	ret    
  423304:	clc    
  423305:	mov    dh,0x4
  423307:	cmp    ch,BYTE PTR [ebx-0x1d]
  42330a:	inc    esi
  42330b:	adc    eax,0x4567a714
  423310:	push   es
  423311:	xor    eax,DWORD PTR [esi+0x22]
  423314:	inc    edx
  423315:	add    DWORD PTR [esi+0x4903b12e],ebp
  42331b:	xor    ch,BYTE PTR [esi]
  42331d:	test   DWORD PTR [ebx],ecx
  42331f:	dec    esi
  423320:	cmp    al,0x7d
  423322:	mov    ebx,0x23066357
  423327:	js     0x42339e
  423329:	outs   dx,BYTE PTR ds:[esi]
  42332a:	xor    ecx,DWORD PTR [ebp+0x68]
  42332d:	xor    DWORD PTR [esi],edx
  42332f:	cmp    edi,DWORD PTR cs:[edx-0x65c48ca]
  423336:	cli    
  423337:	mov    esp,0xb1a885c6
  42333c:	add    BYTE PTR [eax],al
  42333e:	add    BYTE PTR [eax],al
  423340:	add    BYTE PTR [eax],al
  423342:	push   ss
  423343:	aad    0xdf
  423345:	out    dx,eax
  423346:	fucomip st,st(7)
  423348:	ss std 
  42334a:	cmp    BYTE PTR [esi+0x13385f3a],al
  423350:	push   edi
  423351:	cmp    BYTE PTR [ebx],dl
  423353:	fild   WORD PTR [ecx]
  423355:	add    BYTE PTR [edx+0x0],ah
  423358:	add    BYTE PTR [eax],al
  42335a:	jl     0x4233c3
  42335c:	and    ebp,DWORD PTR [eax+0x35]
  42335f:	adc    BYTE PTR ss:[esi],ch
  423362:	mov    eax,ds:0x6570c58b
  423367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423368:	and    eax,0xd1ee3750
  42336d:	inc    eax
  42336e:	adc    dl,BYTE PTR [esi+0x2af4e55c]
  423374:	repnz xor eax,0x4932472e
  42337a:	jg     0x42337a
  42337c:	mov    eax,ds
  42337e:	mov    bh,0x65
  423380:	mov    cl,BYTE PTR [eax]
  423382:	mov    ecx,0x4cfdd4a9
  423387:	shl    DWORD PTR [ebp+0x2f],1
  42338a:	aam    0xa5
  42338c:	mov    ch,0xad
  42338e:	or     BYTE PTR [eax-0x31ffba4a],cl
  423394:	in     eax,dx
  423395:	inc    esp
  423396:	adc    eax,0x72b7db9
  42339b:	fs pop edx
  42339d:	sti    
  42339e:	gs das 
  4233a0:	(bad)  
  4233a1:	scas   eax,DWORD PTR es:[edi]
  4233a2:	adc    al,0x8f
  4233a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233a5:	jge    0x423352
  4233a7:	jmp    0x423371
  4233a9:	mov    dl,0x3c
  4233ab:	(bad)  
  4233ac:	imul   DWORD PTR [ebp-0x13]
  4233af:	and    al,0x6e
  4233b1:	mov    edi,0x9f83e73a
  4233b6:	shl    bl,cl
  4233b8:	dec    esi
  4233b9:	push   es
  4233ba:	aaa    
  4233bb:	stos   BYTE PTR es:[edi],al
  4233bc:	add    BYTE PTR [eax],al
  4233be:	add    BYTE PTR [eax],al
  4233c0:	add    BYTE PTR [eax],al
  4233c2:	outs   dx,BYTE PTR ds:[esi]
  4233c3:	jbe    0x4233a9
  4233c5:	retf   0xdafc
  4233c8:	outs   dx,BYTE PTR ds:[esi]
  4233c9:	neg    BYTE PTR [eax]
  4233cb:	xchg   edx,eax
  4233cc:	xchg   DWORD PTR [edi+0x5461fb4b],edx
  4233d2:	jne    0x4233b3
  4233d4:	add    DWORD PTR [eax],eax
  4233d6:	bound  eax,QWORD PTR [eax]
  4233d8:	add    BYTE PTR [eax],al
  4233da:	sar    ebx,cl
  4233dc:	inc    ebp
  4233dd:	inc    edi
  4233de:	sbb    ebx,DWORD PTR [ebp-0x54cf177b]
  4233e4:	into   
  4233e5:	xor    DWORD PTR [ecx-0x77],edx
  4233e8:	xchg   DWORD PTR [eax+0x3c85e70e],ebx
  4233ee:	and    BYTE PTR [esp+eiz*8],al
  4233f1:	ja     0x42340a
  4233f3:	fld    QWORD PTR [esi]
  4233f5:	mov    ebp,0x4933a8c4
  4233fa:	shl    DWORD PTR [ebp-0x55805783],cl
  423400:	ss es sub bh,0x0
  423405:	push   eax
  423406:	pop    edi
  423407:	push   0xc8e93235
  42340c:	rcl    DWORD PTR [ebp+0x40e2d7a0],cl
  423412:	dec    esp
  423413:	mov    ah,0x16
  423415:	mov    dh,BYTE PTR [ebx+0x2d]
  423418:	cwde   
  423419:	push   ebp
  42341a:	cmp    BYTE PTR [ebx-0x41e2fad9],bh
  423420:	xchg   ebx,eax
  423421:	loop   0x423444
  423423:	or     BYTE PTR [esi-0x7c],al
  423426:	push   ds
  423427:	adc    DWORD PTR [ebp+0x1892bd4e],edi
  42342d:	or     ebx,esp
  42342f:	xchg   cl,bl
  423431:	addr16 push es
  423433:	rol    DWORD PTR [ecx-0x7b96803d],1
  423439:	in     al,0x60
  42343b:	or     al,BYTE PTR [eax]
  42343d:	add    BYTE PTR [eax],al
  42343f:	add    BYTE PTR [eax],al
  423441:	add    BYTE PTR [edx],bh
  423443:	push   edx
  423444:	les    ecx,FWORD PTR [edi]
  423446:	in     al,dx
  423447:	lahf   
  423448:	sti    
  423449:	ja     0x423441
  42344b:	rcl    DWORD PTR [eax-0xb1d002d],1
  423451:	loop   0x42342a
  423453:	fild   WORD PTR [ecx]
  423455:	add    BYTE PTR [edx+0x0],ah
  423458:	add    BYTE PTR [eax],al
  42345a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42345b:	or     DWORD PTR [ebx],eax
  42345d:	or     esp,DWORD PTR [eax*1-0xaedf31d]
  423464:	jl     0x423460
  423466:	mov    al,ds:0x507541c5
  42346b:	dec    esp
  42346c:	cld    
  42346d:	(bad)  
  42346e:	cmp    esi,esp
  423470:	push   cs
  423471:	ret    0xde74
  423474:	and    dh,cl
  423476:	and    eax,0x47894594
  42347b:	test   BYTE PTR [ebx-0x72],ah
  42347e:	cmp    BYTE PTR [esi-0x1b047207],ah
  423484:	and    eax,0x312c53f6
  423489:	jbe    0x4234df
  42348b:	imul   ebx,DWORD PTR [edi+0x2a],0xffffffe8
  42348f:	call   0xeececa96
  423494:	call   0x3a53:0xdba832ce
  42349b:	jns    0x42348c
  42349d:	inc    edx
  42349e:	push   0xc23a06f3
  4234a3:	cs cwde 
  4234a5:	jge    0x423490
  4234a7:	xor    BYTE PTR [esi+edi*2-0x3a],cl
  4234ab:	js     0x423511
  4234ad:	scas   al,BYTE PTR es:[edi]
  4234ae:	mov    ch,0x97
  4234b0:	ja     0x423482
  4234b2:	pusha  
  4234b3:	push   esi
  4234b4:	mov    ch,0x1f
  4234b6:	mov    ebp,0xb81bd21a
  4234bb:	jb     0x4234bd
  4234bd:	add    BYTE PTR [eax],al
  4234bf:	add    BYTE PTR [eax],al
  4234c1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234c7:	jle    0x42349c
  4234c9:	call   DWORD PTR [eax-0x20]
  4234cc:	cli    
  4234cd:	call   0xe039:0x90e71525
  4234d4:	add    DWORD PTR [eax],eax
  4234d6:	bound  eax,QWORD PTR [eax]
  4234d8:	add    BYTE PTR [eax],al
  4234da:	ret    
  4234db:	addr16 rcl dh,cl
  4234de:	mov    ss,ecx
  4234e0:	push   ebp
  4234e1:	xchg   ebp,eax
  4234e2:	ds aam 0x9a
  4234e5:	cmp    eax,0x7c977ebb
  4234ea:	sub    al,0x38
  4234ec:	adc    esi,DWORD PTR [esi]
  4234ee:	call   0xd7c611ed
  4234f3:	push   ds
  4234f4:	add    ebp,DWORD PTR [edx-0x7e]
  4234f7:	jp     0x423555
  4234f9:	mov    ecx,0xae4fd303
  4234fe:	ss inc esp
  423500:	aad    0x50
  423502:	es mov bl,0xf1
  423505:	inc    edx
  423506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423507:	xor    esp,DWORD PTR [edi+0x53278985]
  42350d:	(bad)  
  42350e:	inc    ebx
  42350f:	xor    eax,0x527711c1
  423514:	jmp    0xf830:0x27a295fb
  42351b:	jge    0x4234a0
  42351d:	push   0xffffffb0
  42351f:	in     eax,0x30
  423521:	push   0x4c9ea501
  423526:	inc    edx
  423527:	mov    dh,0x7c
  423529:	outs   dx,BYTE PTR ds:[esi]
  42352a:	inc    ecx
  42352b:	stc    
  42352c:	and    eax,0x70f65c21
  423531:	or     eax,0xff380de9
  423536:	mov    eax,0x1c9ac65a
  42353b:	xchg   esi,eax
  42353c:	add    BYTE PTR [eax],al
  42353e:	add    BYTE PTR [eax],al
  423540:	add    BYTE PTR [eax],al
  423542:	(bad)  
  423544:	test   eax,0xddffeef7
  42354a:	and    al,0x1
  42354c:	pop    ebp
  42354d:	dec    edi
  42354e:	adc    edx,eax
  423550:	shr    DWORD PTR [ecx],0x9b
  423553:	loopne 0x423556
  423555:	add    BYTE PTR [edx+0x0],ah
  423558:	add    BYTE PTR [eax],al
  42355a:	cmp    al,0x81
  42355c:	cmp    eax,0xad614946
  423561:	sub    ch,dh
  423563:	jg     0x423550
  423565:	stc    
  423566:	mov    eax,ds:0x84cc7266
  42356b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42356d:	cmp    ah,BYTE PTR [edi+0x54]
  423570:	jo     0x423587
  423572:	or     al,0x4a
  423574:	mov    bl,0x72
  423576:	test   al,0x3f
  423578:	pop    eax
  423579:	(bad)  [eax]
  42357b:	mov    ebp,0x9ff2a5dc
  423580:	ins    BYTE PTR es:[edi],dx
  423581:	lods   al,BYTE PTR ds:[esi]
  423582:	popa   
  423583:	mov    edx,0x8ac3f4e3
  423588:	ret    0xcfbc
  42358b:	adc    al,0x78
  42358d:	mov    al,ds:0xc6b5b58
  423592:	adc    al,BYTE PTR [ebx-0x64c2b7e8]
  423598:	jne    0x42354c
  42359a:	ja     0x4235b2
  42359c:	imul   edi,DWORD PTR [esi],0x6a6b8421
  4235a2:	fld    QWORD PTR [esp+ebp*4]
  4235a5:	and    BYTE PTR [eax+0x6d],dl
  4235a8:	or     ecx,esp
  4235aa:	femms  
  4235ac:	fcmovnb st,st(1)
  4235ae:	or     ah,ah
  4235b0:	ror    DWORD PTR [esp+0x18],0x59
  4235b5:	retf   0xae66
  4235b8:	mov    dh,0x82
  4235ba:	enter  0xc0,0x0
  4235be:	add    BYTE PTR [eax],al
  4235c0:	add    BYTE PTR [eax],al
  4235c2:	outs   dx,DWORD PTR ds:[esi]
  4235c3:	mov    ds:0x7edd2ad4,al
  4235c8:	jmp    edi
  4235ca:	push   edx
  4235cb:	fcmovu st,st(5)
  4235cd:	in     eax,0x95
  4235cf:	mov    ebp,0xe0fdbe9b
  4235d4:	add    DWORD PTR [eax],eax
  4235d6:	bound  eax,QWORD PTR [eax]
  4235d8:	add    BYTE PTR [eax],al
  4235da:	scas   eax,DWORD PTR es:[edi]
  4235db:	and    ebp,eax
  4235dd:	ds push esp
  4235df:	popa   
  4235e0:	imul   edi,edx,0xffffffea
  4235e3:	(bad)  
  4235e4:	fld    TBYTE PTR [esi+0x41]
  4235e7:	add    bl,BYTE PTR [ebp-0x52]
  4235ea:	sub    DWORD PTR [esp+edx*2-0x48],ecx
  4235ee:	ss dec eax
  4235f0:	mov    esi,0xef180c07
  4235f5:	push   cs
  4235f6:	or     eax,0x2c761427
  4235fb:	gs out 0xab,ax
  4235ff:	mov    esp,0xc7713992
  423604:	(bad)  
  423605:	outs   dx,DWORD PTR ds:[esi]
  423606:	ins    BYTE PTR es:[edi],dx
  423607:	push   eax
  423608:	std    
  423609:	pushf  
  42360a:	xor    bl,cl
  42360c:	nop
  42360d:	lahf   
  42360e:	popa   
  42360f:	push   cs
  423610:	scas   eax,DWORD PTR es:[edi]
  423611:	shr    DWORD PTR [edi-0x44],1
  423614:	lds    edi,FWORD PTR [esi+0x4492c72a]
  42361a:	push   edx
  42361b:	xor    BYTE PTR [eax+esi*4],ch
  42361e:	jp     0x42361b
  423620:	fwait
  423621:	adc    eax,eax
  423623:	dec    edx
  423624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423625:	js     0x4235c6
  423627:	in     eax,dx
  423628:	xor    ebp,DWORD PTR [eax]
  42362a:	jle    0x4235fa
  42362c:	xor    ebx,0xce46b556
  423632:	cmc    
  423633:	shl    DWORD PTR [ebx],1
  423635:	jmp    0x271a01f5
  42363a:	inc    BYTE PTR [esi+0x0]
  42363d:	add    BYTE PTR [eax],al
  42363f:	add    BYTE PTR [eax],al
  423641:	add    cl,bh
  423643:	sbb    al,al
  423645:	inc    esi
  423646:	jecxz  0x423626
  423648:	(bad)  
  423649:	mov    edi,0xe1f1bc83
  42364e:	rol    DWORD PTR [eax-0x1ea0c0cd],1
  423654:	add    DWORD PTR [eax],eax
  423656:	bound  eax,QWORD PTR [eax]
  423658:	add    BYTE PTR [eax],al
  42365a:	mov    ebx,0x1cc555d1
  42365f:	mov    cl,0x4b
  423661:	imul   esi,DWORD PTR [eax+0x4],0x57d78c5c
  423668:	sahf   
  423669:	mov    eax,0x9fcdd13f
  42366e:	(bad)  
  423670:	pop    eax
  423671:	cmp    ah,ch
  423673:	pushf  
  423674:	xchg   esp,eax
  423675:	jp     0x42365c
  423677:	jmp    0xd23d7c42
  42367c:	sbb    al,0x91
  42367e:	pusha  
  42367f:	xchg   BYTE PTR [ecx+ebx*2-0x347d04c],ch
  423686:	lock add ecx,0xbf74394d
  42368d:	jnp    0x42367f
  42368f:	mov    cs,WORD PTR [esi+0x19b23260]
  423695:	jmp    0x30855d9f
  42369a:	mov    ecx,DWORD PTR [ebp-0x59832493]
  4236a0:	push   ds
  4236a1:	cmp    dl,dl
  4236a3:	mov    ch,0x7a
  4236a5:	stos   DWORD PTR es:[edi],eax
  4236a6:	cs lahf 
  4236a8:	int    0x5f
  4236aa:	(bad)  
  4236ab:	sbb    BYTE PTR [ecx],cl
  4236ad:	jl     0x4236ac
  4236af:	ja     0x423703
  4236b1:	nop
  4236b2:	cmc    
  4236b3:	stos   BYTE PTR es:[edi],al
  4236b4:	cwde   
  4236b5:	dec    ebp
  4236b6:	or     al,0x41
  4236b8:	cld    
  4236b9:	pop    edx
  4236ba:	in     eax,0xe4
  4236bc:	add    BYTE PTR [eax],al
  4236be:	add    BYTE PTR [eax],al
  4236c0:	add    BYTE PTR [eax],al
  4236c2:	mov    eax,ds:0x3e8336b9
  4236c7:	(bad)  
  4236c8:	mov    ch,0xbb
  4236ca:	icebp  
  4236cb:	and    eax,0xc9a28c27
  4236d0:	std    
  4236d1:	and    eax,ecx
  4236d3:	loope  0x4236d6
  4236d5:	add    BYTE PTR [edx+0x0],ah
  4236d8:	add    BYTE PTR [eax],al
  4236da:	daa    
  4236db:	lods   eax,DWORD PTR ds:[esi]
  4236dc:	aam    0xda
  4236de:	fs push edi
  4236e0:	push   ebx
  4236e1:	adc    eax,0x3f9df16b
  4236e6:	ins    DWORD PTR es:[edi],dx
  4236e7:	fsubr  DWORD PTR [eax+edi*1-0x52]
  4236eb:	xchg   edx,eax
  4236ec:	push   ecx
  4236ed:	mov    eax,0x13779a05
  4236f2:	add    bl,BYTE PTR [esi+0xd]
  4236f5:	pop    ss
  4236f6:	stos   DWORD PTR es:[edi],eax
  4236f7:	dec    esi
  4236f8:	test   BYTE PTR [ebp+0x6b615361],bl
  4236fe:	loopne 0x4236b4
  423700:	gs pushf 
  423702:	enter  0x31bb,0xc5
  423706:	or     BYTE PTR [edx-0x2d],al
  423709:	add    al,0x7
  42370b:	sub    al,dl
  42370d:	out    dx,eax
  42370e:	cld    
  42370f:	xchg   esi,eax
  423710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423711:	gs nop
  423713:	clc    
  423714:	adc    esi,DWORD PTR [esi]
  423716:	or     al,0xd7
  423718:	ror    DWORD PTR [ebx-0x2a],1
  42371b:	and    esp,DWORD PTR [ebx-0x4a]
  42371e:	pop    ds
  42371f:	pop    edi
  423720:	mov    WORD PTR [edi+0x72],?
  423723:	lea    edx,[ebp-0x4a5eae44]
  423729:	add    al,0xd4
  42372b:	leave  
  42372c:	mov    ecx,0xb28f80ba
  423731:	cmp    esp,edi
  423733:	jle    0x423789
  423735:	and    al,0xd4
  423737:	into   
  423738:	es es xor dh,ah
  42373c:	add    BYTE PTR [eax],al
  42373e:	add    BYTE PTR [eax],al
  423740:	add    BYTE PTR [eax],al
  423742:	adc    dl,bh
  423744:	repz or esi,edi
  423747:	das    
  423748:	cli    
  423749:	fist   WORD PTR [ecx]
  42374b:	dec    ebx
  42374c:	es nop
  42374e:	leave  
  42374f:	add    DWORD PTR [eax+0x1e22352],esp
  423755:	add    BYTE PTR [edx+0x0],ah
  423758:	add    BYTE PTR [eax],al
  42375a:	ins    BYTE PTR es:[edi],dx
  42375b:	ins    DWORD PTR es:[edi],dx
  42375c:	imul   edi,DWORD PTR [ebx+ebx*2],0xffffffcd
  423760:	push   esi
  423761:	cmp    al,0x63
  423763:	stos   DWORD PTR es:[edi],eax
  423764:	push   0x8392266c
  423769:	lea    ecx,[edx]
  42376b:	lea    esi,gs:[ecx-0x7f]
  42376f:	cmp    edi,DWORD PTR [eax]
  423771:	loope  0x4237df
  423773:	mov    dl,0xb5
  423775:	push   ebp
  423776:	pushf  
  423777:	adc    bl,0x40
  42377a:	cmp    ecx,0xe50200ab
  423780:	repz jno 0x423715
  423783:	jno    0x4237ef
  423785:	adc    dl,BYTE PTR [edx]
  423787:	mov    al,0x6d
  423789:	push   edx
  42378a:	mov    eax,0xe7af6c06
  42378f:	push   ecx
  423790:	cs call 0x16c7fcca
  423796:	lock and DWORD PTR [ecx+0x6b40f444],esp
  42379d:	jle    0x4237cb
  42379f:	mov    ebp,DWORD PTR [edi]
  4237a1:	xor    BYTE PTR [esi+0x41],al
  4237a4:	mov    dh,0xf0
  4237a6:	pop    edx
  4237a7:	adc    cl,dh
  4237a9:	fiadd  WORD PTR [esp+eax*4]
  4237ac:	mov    esi,0x30efeb7b
  4237b1:	imul   ebp,edx,0x490b38ec
  4237b7:	inc    eax
  4237b8:	enter  0x5c7,0x45
  4237bc:	add    BYTE PTR [eax],al
  4237be:	add    BYTE PTR [eax],al
  4237c0:	add    BYTE PTR [eax],al
  4237c2:	add    al,al
  4237c4:	inc    edx
  4237c5:	add    BYTE PTR [eax+eax*8],al
  4237c8:	inc    edx
  4237c9:	add    BYTE PTR [eax],cl
  4237cb:	rol    BYTE PTR [edx+0x0],0xc
  4237cf:	rol    BYTE PTR [edx+0x0],0x10
  4237d3:	rol    BYTE PTR [edx+0x0],0x14
  4237d7:	rol    BYTE PTR [edx+0x0],0x18
  4237db:	rol    BYTE PTR [edx+0x0],0x1c
  4237df:	rol    BYTE PTR [edx+0x0],0x57
  4237e3:	inc    edi
  4237e4:	cmp    DWORD PTR [edi+0x41],ebx
  4237e7:	pop    eax
  4237e8:	ss push esi
  4237ea:	pop    edi
  4237eb:	cmp    BYTE PTR [eax],al
  4237ed:	inc    ebx
  4237ee:	inc    ebp
  4237ef:	dec    esp
  4237f0:	pop    edi
  4237f1:	pop    eax
  4237f2:	push   edi
  4237f3:	dec    eax
  4237f4:	inc    edx
  4237f5:	add    BYTE PTR [edi+0x50],dl
  4237f8:	xor    eax,0x4641365f
  4237fd:	cmp    DWORD PTR [edx],esi
  4237ff:	xor    ebx,DWORD PTR [edi+0x32]
  423802:	aaa    
  423803:	add    BYTE PTR [eax+0x48],dl
  423806:	xor    BYTE PTR [edi+0x58],bl
  423809:	push   esp
  42380a:	inc    ecx
  42380b:	dec    ebp
  42380c:	push   ecx
  42380d:	pop    edi
  42380e:	inc    esi
  42380f:	push   ebp
  423810:	cmp    DWORD PTR [eax],eax
  423812:	push   edi
  423813:	push   ebp
  423814:	inc    ecx
  423815:	xor    dh,BYTE PTR [ebx]
  423817:	xor    ebx,DWORD PTR [edi+0x4e]
  42381a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42381e:	cmp    DWORD PTR [edi+0x38],ebx
  423821:	dec    ecx
  423822:	cmp    DWORD PTR [edx+0x36],ebx
  423825:	pop    edi
  423826:	dec    edx
  423827:	xor    BYTE PTR [edx+0x34],cl
  42382a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42382e:	xor    esi,DWORD PTR [eax]
  423830:	pop    edi
  423831:	inc    edx
  423832:	dec    ebx
  423833:	pop    eax
  423834:	pop    eax
  423835:	xor    eax,0x51414d00
  42383a:	pop    edi
  42383b:	inc    ecx
  42383c:	xor    al,BYTE PTR [ebp+0x5f]
  42383f:	inc    ecx
  423840:	dec    ebx
  423841:	cmp    DWORD PTR ds:0x5a003939,esi
  423847:	inc    ebp
  423848:	cmp    BYTE PTR [edi+0x4d],bl
  42384b:	ss dec eax
  42384d:	dec    ebx
  42384e:	add    BYTE PTR [ebp+0x57],al
  423851:	xor    DWORD PTR [edi+0x31],ebx
  423854:	dec    ebx
  423855:	xor    eax,DWORD PTR [ecx+0x30]
  423858:	push   ebx
  423859:	add    BYTE PTR [edx+esi*1+0x36],al
  42385d:	aaa    
  42385e:	pop    edi
  42385f:	push   edx
  423860:	dec    eax
  423861:	dec    ebp
  423862:	cmp    BYTE PTR [edi+0x37],bl
  423865:	inc    esi
  423866:	xor    eax,0x43355500
  42386b:	pop    edi
  42386c:	pop    ecx
  42386d:	dec    ecx
  42386e:	push   ebx
  42386f:	xor    bl,BYTE PTR [edi+0x52]
  423872:	add    BYTE PTR [eax+0x55],dl
  423875:	dec    ecx
  423876:	xor    BYTE PTR [edi+0x43],bl
  423879:	ss inc ebp
  42387b:	xor    bl,BYTE PTR [edi+0x4d]
  42387e:	xor    al,0x4a
  423880:	push   edx
  423881:	push   ebp
  423882:	add    BYTE PTR [esi+0x39],cl
  423885:	push   eax
  423886:	pop    edi
  423887:	push   ebp
  423888:	cmp    DWORD PTR [esi],esi
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    edi
  42388e:	dec    esi
  42388f:	push   esp
  423890:	cmp    BYTE PTR [eax],al
  423892:	dec    esp
  423893:	xor    al,0x44
  423895:	xor    DWORD PTR [edi+0x4b],ebx
  423898:	xor    DWORD PTR [ebp+0x5f],eax
  42389b:	pop    edx
  42389c:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238a0:	pop    edi
  4238a1:	inc    edx
  4238a2:	xor    dh,BYTE PTR [ecx]
  4238a4:	push   ebx
  4238a5:	xor    DWORD PTR [ecx],edi
  4238a7:	inc    edx
  4238a8:	add    BYTE PTR [edi+0x45],al
  4238ab:	xor    al,0x38
  4238ad:	xor    BYTE PTR [eax],dh
  4238af:	pop    edi
  4238b0:	dec    edx
  4238b1:	dec    ebx
  4238b2:	xor    eax,0x33345f4d
  4238b7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238bb:	pop    edi
  4238bc:	aaa    
  4238bd:	push   esi
  4238be:	dec    ebx
  4238bf:	push   edx
  4238c0:	pop    edi
  4238c1:	inc    ebx
  4238c2:	add    BYTE PTR [edx+0x35],bl
  4238c5:	dec    ebp
  4238c6:	pop    edi
  4238c7:	inc    edi
  4238c8:	dec    esi
  4238c9:	xor    al,0x49
  4238cb:	xor    eax,0x54590035
  4238d0:	push   edx
  4238d1:	pop    edi
  4238d2:	push   esp
  4238d3:	inc    ebx
  4238d4:	inc    ecx
  4238d5:	pop    edi
  4238d6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238d9:	push   ebp
  4238da:	pop    edi
  4238db:	push   ebp
  4238dc:	inc    ebp
  4238dd:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238e1:	pop    edi
  4238e2:	pop    eax
  4238e3:	dec    edx
  4238e4:	inc    edx
  4238e5:	inc    edi
  4238e6:	add    BYTE PTR [edx+0x36],al
  4238e9:	inc    ebx
  4238ea:	pop    edi
  4238eb:	xor    BYTE PTR ds:0x36464b,dh
  4238f1:	dec    ebx
  4238f2:	cmp    DWORD PTR [esi+0x37],eax
  4238f5:	xor    ebx,DWORD PTR [edi+0x35]
  4238f8:	ss inc edi
  4238fa:	pop    ecx
  4238fb:	dec    eax
  4238fc:	pop    ecx
  4238fd:	add    BYTE PTR [ebp+0x35],cl
  423900:	push   eax
  423901:	xor    BYTE PTR [edi+0x4f],bl
  423904:	pop    ecx
  423905:	xor    cl,BYTE PTR [edi+0x0]
  423908:	pop    ecx
  423909:	xor    DWORD PTR [esi+0x5f],ecx
  42390c:	xor    al,BYTE PTR [edx+0x30]
  42390f:	push   esi
  423910:	push   esp
  423911:	inc    ebp
  423912:	add    BYTE PTR [edi+0x37],al
  423915:	push   esi
  423916:	xor    DWORD PTR [edi+0x49],ebx
  423919:	xor    al,BYTE PTR [esi+0x30]
  42391c:	pop    edi
  42391d:	ss dec esi
  42391f:	cmp    BYTE PTR [eax],al
  423921:	pop    edx
  423922:	xor    eax,0x445f334b
  423927:	xor    BYTE PTR [eax],bh
  423929:	push   ecx
  42392a:	push   esi
  42392b:	xor    al,0x0
  42392d:	push   ebp
  42392e:	pop    eax
  42392f:	inc    edi
  423930:	xor    DWORD PTR [edi+0x39],ebx
  423933:	push   esp
  423934:	inc    ebx
  423935:	aaa    
  423936:	inc    esp
  423937:	add    BYTE PTR [edi+0x39],dl
  42393a:	ss pop edi
  42393c:	dec    eax
  42393d:	pop    edx
  42393e:	pop    ecx
  42393f:	inc    edi
  423940:	push   ebp
  423941:	pop    edi
  423942:	push   eax
  423943:	dec    eax
  423944:	inc    ebx
  423945:	add    BYTE PTR [ebp+0x0],dl
  423948:	xor    al,0x0
  42394a:	dec    edi
  42394b:	add    BYTE PTR [edi+0x0],bl
  42394e:	cmp    BYTE PTR [eax],al
  423950:	xor    al,BYTE PTR [eax]
  423952:	inc    ebx
  423953:	add    BYTE PTR [edx+0x0],bl
  423956:	inc    ebx
  423957:	add    BYTE PTR [edi],dh
  423959:	add    BYTE PTR [edi+0x0],bl
  42395c:	inc    ebx
  42395d:	add    BYTE PTR [eax+eax*1+0x0],al
  423961:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423965:	add    BYTE PTR [edx],dh
  423967:	add    BYTE PTR [edi+0x0],bl
  42396a:	cmp    BYTE PTR [eax],al
  42396c:	dec    esp
  42396d:	add    BYTE PTR [esi+0x0],dl
  423970:	pop    edi
  423971:	add    BYTE PTR [ecx+0x0],bl
  423974:	push   edx
  423975:	add    BYTE PTR [esi+0x0],dl
  423978:	xor    al,BYTE PTR [eax]
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	pop    edi
  42397d:	add    BYTE PTR [edx+0x0],cl
  423980:	add    BYTE PTR [eax],al
  423982:	inc    edx
  423983:	add    BYTE PTR [eax+eax*1+0x46],cl
  423987:	add    BYTE PTR [edi+0x0],bl
  42398a:	xor    eax,DWORD PTR [eax]
  42398c:	inc    ebp
  42398d:	add    BYTE PTR [ecx+0x0],cl
  423990:	push   edx
  423991:	add    BYTE PTR [ecx],bh
  423993:	add    BYTE PTR [esi+0x0],dl
  423996:	add    BYTE PTR [eax],al
  423998:	dec    ebp
  423999:	add    BYTE PTR [edi],dh
  42399b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42399f:	add    BYTE PTR [edx+0x0],cl
  4239a2:	pop    eax
  4239a3:	add    BYTE PTR [ebx],dh
  4239a5:	add    BYTE PTR [ecx],dh
  4239a7:	add    BYTE PTR [ebx+0x0],al
  4239aa:	add    BYTE PTR [eax],al
  4239ac:	dec    edi
  4239ad:	add    BYTE PTR [esi],dh
  4239af:	add    BYTE PTR [eax+0x0],cl
  4239b2:	pop    edi
  4239b3:	add    BYTE PTR [eax],dh
  4239b5:	add    BYTE PTR [edi],dh
  4239b7:	add    BYTE PTR [ecx],dh
  4239b9:	add    BYTE PTR [edx+0x0],dl
  4239bc:	xor    eax,0x55000000
  4239c1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239c5:	add    BYTE PTR [edi+0x0],bl
  4239c8:	push   esp
  4239c9:	add    BYTE PTR [ecx+0x0],al
  4239cc:	cmp    DWORD PTR [eax],eax
  4239ce:	pop    edi
  4239cf:	add    BYTE PTR [ebx],dh
  4239d1:	add    BYTE PTR [eax],dh
  4239d3:	add    BYTE PTR [eax],bh
  4239d5:	add    BYTE PTR [edi+0x0],cl
  4239d8:	inc    ebx
  4239d9:	add    BYTE PTR ds:0x4d000000,dh
  4239df:	add    BYTE PTR [esi+0x0],cl
  4239e2:	inc    ebp
  4239e3:	add    BYTE PTR [edi+0x0],bl
  4239e6:	push   esp
  4239e7:	add    BYTE PTR [esi+0x0],al
  4239ea:	cmp    BYTE PTR [eax],al
  4239ec:	push   ebx
  4239ed:	add    BYTE PTR [edx+0x0],bl
  4239f0:	pop    edi
  4239f1:	add    BYTE PTR [eax],dh
  4239f3:	add    BYTE PTR [eax],bh
  4239f5:	add    BYTE PTR [eax+0x0],cl
  4239f8:	add    BYTE PTR [eax],al
  4239fa:	dec    esi
  4239fb:	add    BYTE PTR [edi+0x0],cl
  4239fe:	pop    edx
  4239ff:	add    BYTE PTR [edi+0x0],bl
  423a02:	add    BYTE PTR ss:[ecx+0x0],bl
  423a06:	dec    ebp
  423a07:	add    BYTE PTR [esi],dh
  423a09:	add    BYTE PTR [ebx],dh
  423a0b:	add    BYTE PTR [edi+0x0],bl
  423a0e:	xor    al,0x0
  423a10:	dec    esi
  423a11:	add    BYTE PTR [edx],dh
  423a13:	add    BYTE PTR [esi],dh
  423a15:	add    BYTE PTR [ecx],dh
  423a17:	add    BYTE PTR [eax],al
  423a19:	add    BYTE PTR [ebx+0x0],cl
  423a1c:	dec    eax
  423a1d:	add    BYTE PTR [eax],bh
  423a1f:	add    BYTE PTR [edi+0x0],bl
  423a22:	inc    esi
  423a23:	add    BYTE PTR [esi+0x0],al
  423a26:	push   esp
  423a27:	add    BYTE PTR [edi],dh
  423a29:	add    BYTE PTR [esi],dh
  423a2b:	add    BYTE PTR [edi+0x0],bl
  423a2e:	dec    esp
  423a2f:	add    BYTE PTR [ecx+0x0],bl
  423a32:	add    BYTE PTR [eax],al
  423a34:	push   ebx
  423a35:	add    BYTE PTR [ecx+0x0],bl
  423a38:	xor    BYTE PTR [eax],al
  423a3a:	pop    edi
  423a3b:	add    BYTE PTR [ecx],bh
  423a3d:	add    BYTE PTR [edx+0x0],dl
  423a40:	dec    eax
  423a41:	add    BYTE PTR [ecx+0x0],bl
  423a44:	xor    al,BYTE PTR [eax]
  423a46:	pop    edi
  423a47:	add    BYTE PTR [eax],dh
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [edx+0x0],al
  423a4e:	dec    edx
  423a4f:	add    BYTE PTR [esi+0x0],cl
  423a52:	xor    al,BYTE PTR [eax]
  423a54:	pop    edi
  423a55:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a59:	add    BYTE PTR [edx+0x0],dl
  423a5c:	xor    al,0x0
  423a5e:	dec    eax
  423a5f:	add    BYTE PTR [eax],al
  423a61:	add    BYTE PTR [ebp+0x0],dl
  423a64:	add    BYTE PTR ss:[ebp+0x0],cl
  423a68:	xor    DWORD PTR [eax],eax
  423a6a:	pop    edi
  423a6b:	add    BYTE PTR [esi],dh
  423a6d:	add    BYTE PTR [ecx+0x0],bl
  423a70:	push   ebp
  423a71:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a75:	add    BYTE PTR [edi+0x0],cl
  423a78:	inc    esp
  423a79:	add    BYTE PTR [edi+0x0],dl
  423a7c:	push   ebx
  423a7d:	add    BYTE PTR [eax],al
  423a7f:	add    BYTE PTR [edx+0x0],bl
  423a82:	inc    ebx
  423a83:	add    BYTE PTR [ebp+0x0],dl
  423a86:	pop    edi
  423a87:	add    BYTE PTR [ecx],dh
  423a89:	add    BYTE PTR [ebp+0x0],al
  423a8c:	push   esp
  423a8d:	add    BYTE PTR [eax],dh
  423a8f:	add    BYTE PTR [eax],al
  423a91:	add    BYTE PTR [eax],al
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax-0x7ffbffbe],al
  423a9b:	inc    edx
  423a9c:	add    BYTE PTR [eax],cl
  423a9e:	add    BYTE PTR [edx+0x0],0xc
  423aa2:	add    BYTE PTR [edx+0x0],0x10
  423aa6:	add    BYTE PTR [edx+0x0],0x14
  423aaa:	add    BYTE PTR [edx+0x0],0x18
  423aae:	add    BYTE PTR [edx+0x0],0x1c
  423ab2:	add    BYTE PTR [edx+0x0],0x20
  423ab6:	add    BYTE PTR [edx+0x0],0x24
  423aba:	add    BYTE PTR [edx+0x0],0x28
  423abe:	add    BYTE PTR [edx+0x0],0x0
	...
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    bh,BYTE PTR [ebx]
  423ade:	add    al,BYTE PTR [eax]
  423ae0:	add    DWORD PTR [eax],eax
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	add    DWORD PTR [eax],eax
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	add    DWORD PTR [eax],eax
  423aea:	add    BYTE PTR [eax],al
  423aec:	clc    
  423aed:	cmp    al,BYTE PTR [edx]
  423aef:	add    ah,bh
  423af1:	cmp    al,BYTE PTR [edx]
  423af3:	add    BYTE PTR [eax],al
  423af5:	cmp    eax,DWORD PTR [edx]
  423af7:	add    BYTE PTR [esi-0x31],al
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   cs
  423afd:	cmp    eax,DWORD PTR [edx]
  423aff:	add    BYTE PTR [eax],al
  423b01:	add    BYTE PTR [edi+0x6f],dl
  423b04:	jb     0x423b6a
  423b06:	push   edi
  423b07:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b0e:	aas    
  423b0f:	inc    ebp
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	jne    0x423b80
  423b13:	push   edi
  423b14:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b1b:	popa   
  423b1c:	je     0x423b87
  423b1e:	outs   dx,DWORD PTR ds:[esi]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	jae    0x423b75
  423b22:	je     0x423b85
  423b24:	.byte 0x74
