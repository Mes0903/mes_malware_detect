
ac375978b92a99231accdd0694bd6564f33a3e87a8588082580e2e868d5a63e6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0xdf6f26e7
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	xor    al,0x65
  402d0a:	cmp    ax,0x6a63
  402d0e:	push   0x69
  402d10:	xor    al,cl
  402d12:	fdivr  st,st(5)
  402d14:	ins    BYTE PTR es:[edi],dx
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	pop    ds
  402da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da4:	sbb    DWORD PTR [esi],esp
  402da6:	stc    
  402da7:	popf   
  402da8:	xchg   ebp,eax
  402da9:	xchg   ebx,eax
  402daa:	imul   esp,DWORD PTR [esi-0x1e],0x2e
  402dae:	mov    DWORD PTR [esi+eax*4-0x9388087],esi
  402db5:	xchg   edx,eax
  402db6:	inc    esp
  402db7:	xchg   DWORD PTR ds:0xd2840774,ebp
  402dbd:	add    eax,0x94b84dca
  402dc2:	ffreep st(4)
  402dc4:	in     al,0x71
  402dc6:	inc    eax
  402dc7:	loop   0x402d70
  402dc9:	and    DWORD PTR [edi-0x3e],eax
  402dcc:	jl     0x402d83
  402dce:	sbb    DWORD PTR [ecx],eax
  402dd0:	jmp    0xf4e8:0x1fcfd4f9
  402dd7:	enter  0xeeeb,0x7d
  402ddb:	repz pop esp
  402ddd:	int    0x38
  402ddf:	je     0x402da9
  402de1:	xor    DWORD PTR [edx+eax*4],edi
  402de4:	aam    0x76
  402de6:	fldcw  WORD PTR [ebp-0x7d]
  402de9:	or     DWORD PTR [ecx],edi
  402deb:	les    edi,FWORD PTR [ecx+esi*8-0x5796eb88]
  402df2:	(bad)  
  402df3:	fdiv   DWORD PTR [edx+ecx*8+0x141ec8c6]
  402dfa:	cmc    
  402dfb:	cmc    
  402dfc:	or     al,0x64
  402dfe:	mov    dh,0x1b
  402e00:	lods   al,BYTE PTR ds:[esi]
  402e01:	repnz dec ebp
  402e03:	push   eax
  402e04:	fbld   TBYTE PTR [edi]
  402e06:	add    dh,BYTE PTR [ebx]
  402e08:	sar    ecx,cl
  402e0a:	sar    DWORD PTR [ecx-0x18],1
  402e0d:	inc    eax
  402e0e:	jmp    0xde3f5a66
  402e13:	xor    edi,DWORD PTR [esi+0x4b]
  402e16:	in     eax,0x66
  402e18:	fld    QWORD PTR [edx]
  402e1a:	fisttp DWORD PTR [eax+ecx*8]
  402e1d:	test   DWORD PTR [edi+ecx*1-0x2c],ebp
  402e21:	mov    dl,0x48
  402e23:	clc    
  402e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e25:	jg     0x402e6a
  402e27:	idiv   BYTE PTR [edi-0x2]
  402e2a:	lods   al,BYTE PTR ds:[esi]
  402e2b:	add    al,0x2c
  402e2d:	rcl    ecx,0xe9
  402e30:	xchg   esi,eax
  402e31:	ins    BYTE PTR es:[edi],dx
  402e32:	test   BYTE PTR [edi+ecx*1-0x271c757c],al
  402e39:	(bad)  
  402e3a:	mov    ah,0xb9
  402e3c:	cmp    DWORD PTR [edx-0x6],eax
  402e3f:	mov    bl,BYTE PTR [ecx+edi*2-0x5c]
  402e43:	xor    edi,DWORD PTR [ecx+0x11]
  402e46:	cdq    
  402e47:	lea    eax,[edi-0x3cb96d47]
  402e4d:	ret    0xf16a
  402e50:	loopne 0x402df7
  402e52:	sub    eax,0x68499318
  402e57:	sbb    DWORD PTR [ebp+0x64],edx
  402e5a:	sbb    ecx,ebx
  402e5c:	sbb    eax,0xf57d8bd1
  402e61:	cli    
  402e62:	jmp    0x8f8bdd29
  402e67:	inc    esp
  402e68:	(bad)  
  402e69:	sub    cl,bl
  402e6b:	out    0x7d,eax
  402e6d:	aaa    
  402e6e:	lods   eax,DWORD PTR ds:[esi]
  402e6f:	(bad)  
  402e71:	mov    ds:0x5f0bc436,eax
  402e76:	outs   dx,BYTE PTR ds:[esi]
  402e77:	(bad)  
  402e78:	push   edi
  402e79:	hlt    
  402e7a:	xor    al,0x26
  402e7c:	out    0xde,eax
  402e7e:	mov    DWORD PTR [ecx+edi*2],0xd87b19d7
  402e85:	lahf   
  402e86:	mov    WORD PTR [edx-0x1bb19ad3],cs
  402e8c:	daa    
  402e8d:	mov    ebp,0x8cedf427
  402e92:	pop    ecx
  402e93:	rcr    DWORD PTR [eax+0x37360bd7],cl
  402e99:	scas   eax,DWORD PTR es:[edi]
  402e9a:	fisub  WORD PTR [ecx+0x4c688e60]
  402ea0:	or     BYTE PTR [esi-0x7663a2f1],ah
  402ea6:	push   es
  402ea7:	add    cl,BYTE PTR [edx]
  402ea9:	sbb    dl,BYTE PTR [ebx-0x27]
  402eac:	fcom   st(5)
  402eae:	or     DWORD PTR [ebp-0x132eac7a],esi
  402eb4:	mov    cl,0x46
  402eb6:	dec    esp
  402eb7:	aaa    
  402eb8:	call   FWORD PTR [esi+0x4]
  402ebb:	sbb    eax,0xe76bbfe5
  402ec0:	or     bh,BYTE PTR [edi-0x507bf5be]
  402ec6:	popa   
  402ec7:	inc    ebx
  402ec8:	rcr    ah,cl
  402eca:	mov    ebp,0xd7409db1
  402ecf:	add    BYTE PTR [eax+0x28],bl
  402ed2:	sub    al,BYTE PTR [edx+ebp*4]
  402ed5:	das    
  402ed6:	jno    0x402e93
  402ed8:	fnstenv [eax-0x17cbd001]
  402ede:	aad    0x9e
  402ee0:	aad    0x37
  402ee2:	scas   al,BYTE PTR es:[edi]
  402ee3:	mov    ch,bl
  402ee5:	and    al,0xb2
  402ee7:	fbstp  TBYTE PTR [ecx]
  402ee9:	jns    0x402edc
  402eeb:	aaa    
  402eec:	xor    BYTE PTR [eax+0x23ff78c9],bh
  402ef2:	jmp    0x263a315e
  402ef7:	and    DWORD PTR [ecx+0x68],0x343a7d88
  402efe:	aas    
  402eff:	or     al,0x67
  402f01:	sub    dh,BYTE PTR [esi+0x60]
  402f04:	jbe    0x402f2d
  402f06:	jne    0x402f3d
  402f08:	mov    esp,0x62c3c693
  402f0d:	mov    ss,WORD PTR [edi-0x16]
  402f10:	sbb    ch,BYTE PTR [ecx-0x64]
  402f13:	imul   ebx,DWORD PTR [edi],0x6b
  402f16:	cmp    esi,esi
  402f18:	aaa    
  402f19:	ss pop ebx
  402f1b:	adc    bl,BYTE PTR [ebp-0x22addb45]
  402f21:	xchg   ebx,eax
  402f22:	cmp    ecx,DWORD PTR [eax+0x46]
  402f25:	mov    bh,BYTE PTR [edi+0x21072be0]
  402f2b:	sub    DWORD PTR [eax-0x288b393b],esp
  402f31:	push   ebx
  402f32:	mov    ch,0x82
  402f34:	enter  0xc2e3,0x56
  402f38:	pop    ss
  402f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f3a:	(bad)  
  402f3b:	fnstenv [esi-0x646e4871]
  402f41:	gs inc ebx
  402f43:	and    eax,edi
  402f45:	pop    es
  402f46:	mov    eax,0xdd76b6e3
  402f4b:	fisubr DWORD PTR [ecx]
  402f4d:	xor    DWORD PTR [ecx+ebx*1],esp
  402f50:	in     al,0x5c
  402f52:	aam    0xd
  402f54:	and    ebp,esi
  402f56:	in     eax,0x11
  402f58:	lock jmp 0x402fa4
  402f5b:	and    eax,0x830f819f
  402f60:	clc    
  402f61:	jmp    0x402ee3
  402f63:	cli    
  402f64:	or     edx,esp
  402f66:	cdq    
  402f67:	mov    ecx,0xdaa731bc
  402f6c:	gs mov ebx,0x96d413af
  402f72:	mov    ecx,0xbdf51edf
  402f77:	push   esp
  402f78:	jmp    0x117dbb60
  402f7d:	sbb    BYTE PTR [edi+0x1daa5bff],dh
  402f83:	pushf  
  402f84:	jge    0x402f15
  402f86:	push   0x1ab1f69d
  402f8b:	add    edi,eax
  402f8d:	(bad)  
  402f8f:	mov    edx,0x2eb40990
  402f94:	ins    BYTE PTR es:[edi],dx
  402f95:	cli    
  402f96:	cmp    ecx,DWORD PTR ds:[esi]
  402f99:	add    eax,0x9ece45cb
  402f9e:	or     al,0x4c
  402fa0:	(bad)  
  402fa1:	xlat   BYTE PTR ds:[ebx]
  402fa2:	jp     0x402fa7
  402fa4:	sub    eax,0xd66fbca
  402fa9:	retf   
  402faa:	cmp    eax,0xce49e698
  402faf:	jle    0x403006
  402fb1:	push   0x41aa4776
  402fb6:	xor    al,dh
  402fb8:	loopne 0x402f90
  402fba:	mov    edx,0x67376601
  402fbf:	pop    esp
  402fc0:	mov    BYTE PTR [eax+0x1695c05b],0x93
  402fc7:	mov    ah,0xf7
  402fc9:	mov    ebp,0xe38d149f
  402fce:	lahf   
  402fcf:	add    al,0xa9
  402fd1:	and    BYTE PTR [esi+0x3b3213cb],bh
  402fd7:	(bad)  
  402fd8:	adc    BYTE PTR [ebx],cl
  402fda:	add    BYTE PTR [esp+edx*8+0x6e],0x63
  402fdf:	into   
  402fe0:	loop   0x402fb2
  402fe2:	push   ss
  402fe3:	xor    dh,ch
  402fe5:	pop    ebx
  402fe6:	and    al,ch
  402fe8:	add    ebx,DWORD PTR [eax+0x7b8f238a]
  402fee:	push   ss
  402fef:	jl     0x402fc0
  402ff1:	mov    dh,0x6e
  402ff3:	jmp    0x40305a
  402ff5:	fld    TBYTE PTR [edx+0x5b6aec02]
  402ffb:	cdq    
  402ffc:	loope  0x402fc8
  402ffe:	mov    al,ds:0x601ebd19
  403003:	hlt    
  403004:	(bad)  
  403005:	dec    ebp
  403006:	and    BYTE PTR [ebx-0x280c2d61],dl
  40300c:	inc    edi
  40300d:	xchg   BYTE PTR [ebx],dh
  40300f:	jp     0x402ff9
  403011:	sub    ah,cl
  403013:	cmc    
  403014:	lahf   
  403015:	sbb    eax,0x39249065
  40301a:	lods   al,BYTE PTR ds:[esi]
  40301b:	xlat   BYTE PTR ds:[ebx]
  40301c:	mov    esp,0x50cfdf68
  403021:	rcr    BYTE PTR [esi+edi*2+0x1],0xbf
  403026:	inc    ebp
  403027:	les    edi,FWORD PTR [eax]
  403029:	nop
  40302a:	and    ebx,DWORD PTR [ebp-0x7030d263]
  403030:	inc    ecx
  403031:	jmp    0x402fd5
  403033:	jg     0x403023
  403035:	inc    edx
  403036:	adc    ah,BYTE PTR [ecx-0x23196b28]
  40303c:	sbb    ch,BYTE PTR [edi-0x5259e66c]
  403042:	pop    ecx
  403043:	jmp    0xd81b:0x25e7618
  40304a:	mov    dh,al
  40304c:	mov    gs,WORD PTR [ecx+eax*8]
  40304f:	mov    bl,0xdc
  403051:	adc    ebx,DWORD PTR ds:[ecx-0x40]
  403055:	sbb    al,0x25
  403057:	ja     0x403053
  403059:	mov    al,ds:0x4451d751
  40305e:	call   0x28b2a90f
  403063:	lods   al,BYTE PTR ds:[esi]
  403064:	sar    BYTE PTR [eax],cl
  403066:	xchg   edx,eax
  403067:	add    al,0x8f
  403069:	loope  0x403095
  40306b:	mov    al,0xea
  40306d:	(bad)  
  40306e:	(bad)  
  40306f:	and    edx,DWORD PTR [eax-0x242a0e77]
  403075:	loopne 0x40307f
  403077:	pop    ebx
  403078:	xchg   edx,eax
  403079:	pop    ss
  40307a:	iret   
  40307b:	dec    edx
  40307c:	push   edi
  40307d:	jo     0x40304c
  40307f:	jae    0x4030ef
  403081:	out    dx,al
  403082:	lods   al,BYTE PTR ds:[esi]
  403083:	jecxz  0x40308c
  403085:	inc    ebp
  403086:	xor    DWORD PTR [esp],esp
  403089:	adc    edx,DWORD PTR [ecx+ebp*8-0x1e]
  40308d:	mov    esp,0x842452d5
  403092:	repz iret 
  403094:	cli    
  403095:	sbb    eax,0x3e0a1872
  40309a:	jno    0x4030ef
  40309c:	loop   0x40309d
  40309e:	add    bl,BYTE PTR [edi-0x3a]
  4030a1:	push   ebp
  4030a2:	imul   esp,DWORD PTR [ebx],0x5d
  4030a5:	mov    ds:0x3d83990e,al
  4030aa:	pop    ebx
  4030ab:	xchg   BYTE PTR [ecx],bl
  4030ad:	je     0x403037
  4030af:	cdq    
  4030b0:	push   ecx
  4030b1:	sbb    DWORD PTR [edx-0x3f],0xffffffdd
  4030b5:	and    esi,DWORD PTR [ebx-0x1]
  4030b8:	cmp    esi,esp
  4030ba:	cmp    al,0x6e
  4030bc:	les    esp,FWORD PTR [eax-0x35]
  4030bf:	enter  0x8695,0xae
  4030c3:	call   0x9ca5c16b
  4030c8:	icebp  
  4030c9:	sbb    eax,0x940db7c3
  4030ce:	mov    ds:0x1de96da5,eax
  4030d3:	repz fmul DWORD PTR [edi-0x730be264]
  4030da:	inc    esp
  4030db:	adc    al,0xa4
  4030dd:	jl     0x403089
  4030df:	push   edx
  4030e0:	cli    
  4030e1:	popf   
  4030e2:	mov    WORD PTR [ecx+0x4726be60],?
  4030e8:	ds mov esp,0x14d1f1a5
  4030ee:	dec    esp
  4030ef:	pop    ebp
  4030f0:	fsub   QWORD PTR ss:[esp+ebp*1+0xd]
  4030f5:	gs (bad) 
  4030f7:	sti    
  4030f8:	pop    edx
  4030f9:	das    
  4030fa:	inc    edi
  4030fb:	sub    eax,0xcf53e456
  403100:	cmp    BYTE PTR [eax-0x2f31b0fd],bl
  403106:	ret    0xa085
  403109:	inc    edi
  40310a:	cmp    eax,0xe710313d
  40310f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403110:	mov    ebp,0x2cde4d5f
  403115:	adc    ebp,eax
  403117:	stc    
  403118:	sub    al,0x81
  40311a:	pop    esp
  40311b:	mov    edi,0x3a0ea6e4
  403120:	in     al,0x21
  403122:	inc    ebp
  403123:	mov    gs,ecx
  403125:	xor    al,0x4a
  403127:	dec    edx
  403128:	push   0xffffffcc
  40312a:	jmp    0x40318b
  40312c:	jge    0x40313c
  40312e:	std    
  40312f:	and    esi,ecx
  403131:	repz and BYTE PTR [eax+0x9e228a6],dl
  403138:	jmp    0x38ea:0x1ef27d26
  40313f:	jnp    0x40314e
  403141:	into   
  403142:	adc    eax,0x17e00d93
  403147:	scas   al,BYTE PTR es:[edi]
  403148:	or     al,dh
  40314a:	addps  xmm7,xmm1
  40314d:	jae    0x40318d
  40314f:	iret   
  403150:	push   ebp
  403151:	jecxz  0x403155
  403153:	int    0x6c
  403155:	leave  
  403156:	rcl    BYTE PTR [esi-0x7238722b],1
  40315c:	jns    0x4031bf
  40315e:	adc    eax,0x34a69049
  403163:	arpl   WORD PTR [ebx-0x6f],si
  403166:	jge    0x40311e
  403168:	dec    eax
  403169:	ret    
  40316a:	and    BYTE PTR [eax-0x368b73e4],ch
  403170:	adc    BYTE PTR [ecx+0x5d],0x6e
  403174:	sub    ah,dh
  403176:	(bad)  [edx+0x49]
  403179:	repz imul ecx,DWORD PTR [ecx],0xc418202c
  403180:	icebp  
  403181:	test   al,0xf5
  403183:	sbb    dl,BYTE PTR [eax]
  403185:	inc    ebp
  403186:	dec    al
  403188:	add    BYTE PTR [eax+0x39],cl
  40318b:	cmp    eax,0x67034c3f
  403190:	sbb    esp,DWORD PTR [ebp+0x43a35862]
  403196:	mov    al,0xa5
  403198:	adc    al,0x4
  40319a:	repnz inc eax
  40319c:	stos   DWORD PTR es:[edi],eax
  40319d:	mov    eax,DWORD PTR [eax]
  40319f:	imul   DWORD PTR [eax]
  4031a1:	jmp    0x8893bf20
  4031a6:	push   ds
  4031a7:	mov    ch,0xd0
  4031a9:	ffree  st(7)
  4031ab:	lock jmp 0x75fa:0x282abec6
  4031b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b4:	call   0xaf0725c0
  4031b9:	xlat   BYTE PTR ds:[ebx]
  4031ba:	jg     0x4031e9
  4031bc:	pop    esi
  4031bd:	in     eax,dx
  4031be:	add    ecx,DWORD PTR [edi]
  4031c0:	repnz mov esi,ecx
  4031c3:	add    al,0x9a
  4031c5:	pop    esi
  4031c6:	sti    
  4031c7:	ds mov edi,0xdf2402e2
  4031cd:	xor    BYTE PTR [ecx-0x8],bh
  4031d0:	add    BYTE PTR [ecx+0x7a975c06],al
  4031d6:	retf   0x241a
  4031d9:	or     BYTE PTR [ebp-0x5e],ch
  4031dc:	pusha  
  4031dd:	icebp  
  4031de:	push   ebp
  4031df:	xor    bh,BYTE PTR [edi-0x2216fad]
  4031e5:	imul   DWORD PTR [ecx-0x52e8bd5c]
  4031eb:	sbb    al,al
  4031ed:	pop    edx
  4031ee:	inc    eax
  4031ef:	imul   ecx,DWORD PTR [edi-0x45],0x5a2c1100
  4031f6:	(bad)  [ecx+0x48cd773b]
  4031fc:	add    edx,DWORD PTR [ebx+0x324810b7]
  403202:	cmp    dl,bl
  403204:	mov    al,ds:0x30731b74
  403209:	ficom  DWORD PTR [ecx-0x2c]
  40320c:	js     0x40320e
  40320e:	fs push edx
  403210:	lods   al,BYTE PTR ds:[esi]
  403211:	mov    ebx,0x7ab5d033
  403216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403217:	mov    cl,0xf9
  403219:	in     al,0x8c
  40321b:	xor    dl,BYTE PTR [ebp+0x27198381]
  403221:	aad    0xee
  403223:	loope  0x40323c
  403225:	(bad)  
  403226:	in     al,dx
  403227:	daa    
  403228:	iret   
  403229:	loope  0x403232
  40322b:	leave  
  40322c:	imul   eax,DWORD PTR [esi-0x44],0xefbe26f6
  403233:	maskmovq mm4,(bad)
  403234:	mul    DWORD PTR [ebx-0x55ca2d7a]
  40323a:	adc    eax,0x64d38c39
  40323f:	mul    BYTE PTR [edi-0x45000733]
  403245:	(bad)  
  403246:	out    dx,eax
  403247:	js     0x4031fc
  403249:	xchg   edx,eax
  40324a:	sbb    BYTE PTR [edx],ah
  40324c:	repz (bad) 
  403250:	fild   QWORD PTR [esi+0x3]
  403253:	daa    
  403254:	in     eax,0xcc
  403256:	pop    ecx
  403257:	popf   
  403258:	mov    eax,ds:0x1aa6583e
  40325d:	loope  0x40328d
  40325f:	(bad)  
  403260:	adc    al,0xfd
  403262:	je     0x40321f
  403264:	cmp    dh,BYTE PTR [ebp+0x43]
  403267:	iret   
  403268:	lods   eax,DWORD PTR ds:[esi]
  403269:	cmp    eax,0x4a65be4a
  40326e:	push   ds
  40326f:	imul   esi,DWORD PTR [edx],0x7395416c
  403275:	add    BYTE PTR [edx-0x22],0xf4
  403279:	cmc    
  40327a:	dec    eax
  40327b:	and    DWORD PTR [esi+0x24f87801],eax
  403281:	loop   0x40325d
  403283:	push   cs
  403284:	push   eax
  403285:	pop    ecx
  403286:	xchg   esp,eax
  403287:	stos   BYTE PTR es:[edi],al
  403288:	dec    eax
  403289:	popa   
  40328a:	sbb    al,0xe
  40328c:	int3   
  40328d:	push   esi
  40328e:	pusha  
  40328f:	je     0x4032e3
  403291:	(bad)  
  403292:	and    ebx,DWORD PTR [eax-0x724b026]
  403298:	xchg   ecx,eax
  403299:	es mov ebp,0x4c827e48
  40329f:	arpl   di,sp
  4032a1:	jmp    0x77f4:0x5710cdeb
  4032a8:	in     al,dx
  4032a9:	jecxz  0x403322
  4032ab:	aam    0x2f
  4032ad:	in     eax,dx
  4032ae:	xor    BYTE PTR [eax+eax*8+0xc],dl
  4032b2:	repnz lods al,BYTE PTR ds:[esi]
  4032b4:	inc    ecx
  4032b5:	dec    ebx
  4032b6:	mov    al,ds:0xaaa22f65
  4032bb:	sbb    al,0x6e
  4032bd:	push   es
  4032be:	jns    0x403312
  4032c0:	mov    edi,0x28077886
  4032c5:	stc    
  4032c6:	scas   eax,DWORD PTR es:[edi]
  4032c7:	mov    al,ds:0x7f58098e
  4032cc:	sbb    cl,dl
  4032ce:	mov    ah,0x81
  4032d0:	pop    ebx
  4032d1:	push   esp
  4032d2:	dec    ebx
  4032d3:	test   al,0x56
  4032d5:	xchg   cl,al
  4032d7:	push   esi
  4032d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d9:	clc    
  4032da:	dec    edi
  4032db:	call   0x9312db5
  4032e0:	dec    esp
  4032e1:	mov    ch,0x8a
  4032e3:	xchg   BYTE PTR [eax+0x66],al
  4032e6:	push   es
  4032e7:	lods   al,BYTE PTR ds:[esi]
  4032e8:	(bad)  
  4032e9:	fwait
  4032ea:	test   eax,0x20d1d5b1
  4032ef:	outs   dx,BYTE PTR ds:[esi]
  4032f0:	mov    esi,0xf96c65ab
  4032f5:	cmp    al,0x0
  4032f7:	dec    esi
  4032f8:	mov    ebp,0xbc57f201
  4032fd:	and    BYTE PTR [edi-0x51],al
  403300:	jbe    0x40337e
  403302:	pop    ebx
  403303:	maxps  xmm2,XMMWORD PTR [edi+0x399c08c7]
  40330a:	jge    0x4032d6
  40330c:	popf   
  40330d:	cli    
  40330e:	pop    esi
  40330f:	jg     0x4032c1
  403311:	(bad)  
  403313:	mov    ds:0x6438eb25,eax
  403318:	call   0xa7882502
  40331d:	push   0xab862f05
  403322:	mov    ecx,0x86cb9ca3
  403327:	fmul   st,st(5)
  403329:	in     al,dx
  40332a:	fs loop 0x4032b1
  40332d:	mov    edx,0x85033dff
  403332:	cmp    edi,DWORD PTR [ecx-0x1fa4e92d]
  403338:	sub    DWORD PTR [edx],0x6
  40333b:	inc    ebx
  40333c:	fimul  WORD PTR [ebp+0x20]
  40333f:	xchg   ebp,eax
  403340:	cmp    edx,DWORD PTR ds:0xd19569e6
  403346:	cmp    BYTE PTR [esp+edx*8+0x65109a6c],cl
  40334d:	cld    
  40334e:	bound  ebp,QWORD PTR gs:[ecx+0x2abb9b41]
  403355:	cwde   
  403356:	sbb    eax,0x783635f5
  40335b:	cmp    edi,ebx
  40335d:	pushf  
  40335e:	dec    esp
  40335f:	pop    es
  403360:	adc    eax,0x48a31a73
  403365:	das    
  403366:	imul   ecx,esp,0x68a093d6
  40336c:	iret   
  40336d:	add    al,0x65
  40336f:	enter  0xb45b,0xb9
  403373:	adc    esp,DWORD PTR [eax-0x59]
  403376:	lahf   
  403377:	or     DWORD PTR [ecx],edx
  403379:	into   
  40337a:	sub    al,BYTE PTR [ecx]
  40337c:	aaa    
  40337d:	fwait
  40337e:	or     al,0x8f
  403380:	outs   dx,BYTE PTR ds:[esi]
  403381:	adc    eax,0xd6327b21
  403386:	add    ah,BYTE PTR ds:[eax+0x5491500f]
  40338d:	jne    0x4033ce
  40338f:	cld    
  403390:	fucomip st,st(0)
  403392:	popa   
  403393:	test   eax,0xbeeaac4b
  403398:	test   eax,0x7f864c02
  40339d:	or     BYTE PTR [ebp-0x74edcdc1],0x32
  4033a4:	mov    ah,0x4f
  4033a6:	dec    ecx
  4033a7:	out    0x47,al
  4033a9:	jne    0x40339f
  4033ab:	daa    
  4033ac:	adc    BYTE PTR [edx-0x1b],bh
  4033af:	call   0x8dbf3224
  4033b4:	mov    bh,0x19
  4033b6:	pandn  mm3,QWORD PTR [edi+0x58]
  4033ba:	retf   0x85a1
  4033bd:	mov    ch,ch
  4033bf:	sub    al,0x2c
  4033c1:	fadd   st(4),st
  4033c3:	push   ss
  4033c4:	stc    
  4033c5:	xlat   BYTE PTR ds:[ebx]
  4033c6:	inc    edi
  4033c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c8:	sub    BYTE PTR [ecx+0x1d16717a],cl
  4033ce:	and    DWORD PTR [ecx],esi
  4033d0:	clc    
  4033d1:	pop    ss
  4033d2:	and    ch,BYTE PTR [bx+di-0x56]
  4033d6:	int    0xc6
  4033d8:	jne    0x403360
  4033da:	iret   
  4033db:	in     eax,0x2
  4033dd:	rcl    BYTE PTR [ebx+0x4a3346],0x1f
  4033e4:	bound  edi,QWORD PTR [eax+0xb]
  4033e7:	(bad)  
  4033e8:	mov    ah,0x2
  4033ea:	dec    ebx
  4033eb:	stc    
  4033ec:	imul   ebx,DWORD PTR [edx],0xffffffc1
  4033ef:	mov    ebx,0xdfc09666
  4033f4:	loopne 0x40344a
  4033f6:	dec    edi
  4033f7:	adc    DWORD PTR [ecx],edx
  4033f9:	jo     0x40337e
  4033fb:	add    eax,0xafbc4732
  403400:	bound  ecx,QWORD PTR [edx+edx*2+0x5c]
  403404:	call   0xc734:0x4def534e
  40340b:	push   edi
  40340c:	mov    ah,0xc0
  40340e:	sub    eax,0x57f392c6
  403413:	sbb    al,0x5f
  403415:	xchg   ebp,eax
  403416:	mov    fs,edi
  403418:	add    edx,eax
  40341a:	push   0xfffffff5
  40341c:	fcom   DWORD PTR [eax-0x23304734]
  403422:	ja     0x403456
  403424:	mov    al,ds:0x7a562f0a
  403429:	(bad)
  40342c:	mov    ds:0x4dc68d25,eax
  403431:	outs   dx,DWORD PTR ds:[esi]
  403432:	push   ebx
  403433:	xchg   ebp,eax
  403434:	(bad)
  403438:	push   ecx
  403439:	dec    edx
  40343a:	out    dx,eax
  40343b:	xor    ah,cl
  40343d:	das    
  40343e:	cld    
  40343f:	jp     0x40348b
  403441:	lods   al,BYTE PTR ds:[esi]
  403442:	aas    
  403443:	fst    st(5)
  403445:	push   esi
  403446:	repz hlt 
  403448:	out    dx,al
  403449:	imul   eax,ebp,0xffffff85
  40344c:	int    0x18
  40344e:	test   eax,0xe13b5c9f
  403453:	add    al,0x68
  403455:	mov    bh,0x47
  403457:	adc    BYTE PTR [edi+esi*1+0x6f646fd6],0x10
  40345f:	outs   dx,DWORD PTR ds:[esi]
  403460:	adc    al,0x26
  403462:	test   eax,0x8756631d
  403467:	fistp  QWORD PTR [ebp+edx*1-0x4d5845c8]
  40346e:	mov    edi,0x680d09d0
  403473:	cs and eax,0x570a2cd7
  403479:	nop
  40347a:	ja     0x40349c
  40347c:	xor    bh,BYTE PTR [edi+0x6ef9cd06]
  403482:	push   ss
  403483:	and    al,0x74
  403485:	inc    ebx
  403486:	mov    DWORD PTR [ebx],0x3fce27cd
  40348c:	sti    
  40348d:	loop   0x4034e7
  40348f:	fisub  DWORD PTR [edx]
  403491:	int    0x99
  403493:	data16 sub ch,BYTE PTR [eax]
  403496:	push   0x541f9adf
  40349b:	adc    eax,0xd3a48357
  4034a0:	xor    BYTE PTR [ecx+ecx*4+0x35f7f56f],bl
  4034a7:	scas   eax,DWORD PTR es:[edi]
  4034a8:	jb     0x4034b6
  4034aa:	mov    edi,0x8155f3fd
  4034af:	cmp    ebp,DWORD PTR [ebx+0x345644fe]
  4034b5:	xchg   esp,eax
  4034b6:	jge    0x40348c
  4034b8:	pop    ecx
  4034b9:	sub    eax,0xfe07d19c
  4034be:	and    eax,0x2f4a4a79
  4034c3:	rol    BYTE PTR [esi+0x34],0xc
  4034c7:	add    DWORD PTR [ebx-0x5029ef2e],0x3e2f75d7
  4034d1:	fisttp QWORD PTR [ebx-0x3c]
  4034d4:	js     0x40347c
  4034d6:	push   0x9b6bba6b
  4034db:	(bad)  
  4034dd:	xor    eax,0xdeac5160
  4034e2:	mov    al,0xfa
  4034e4:	jle    0x4034cf
  4034e6:	push   ecx
  4034e7:	cmp    ch,dh
  4034e9:	in     al,dx
  4034ea:	lods   al,BYTE PTR ds:[esi]
  4034eb:	popa   
  4034ec:	dec    ecx
  4034ed:	sbb    BYTE PTR [ebp+0x14cd8d2b],al
  4034f3:	pop    ecx
  4034f4:	mov    cl,ch
  4034f6:	xor    BYTE PTR [ecx-0x4a],cl
  4034f9:	and    eax,DWORD PTR [esp+edi*8-0x36]
  4034fd:	mov    dl,0x21
  4034ff:	inc    eax
  403500:	mov    ecx,0x63e8e6fc
  403506:	and    BYTE PTR [ebp+0x1b508d38],ah
  40350c:	mov    esp,DWORD PTR [esi+ebx*4]
  40350f:	cmp    edi,DWORD PTR [ebx-0x48e15792]
  403515:	cmc    
  403516:	push   edi
  403517:	outs   dx,DWORD PTR ds:[esi]
  403518:	aas    
  403519:	cmp    eax,0xbaf8c4de
  40351e:	test   BYTE PTR [edi-0x4c],dl
  403521:	push   edi
  403522:	mov    ds:0x4436562d,al
  403527:	jo     0x40357e
  403529:	pop    esp
  40352a:	push   edx
  40352b:	stos   DWORD PTR es:[edi],eax
  40352c:	inc    edi
  40352d:	(bad)  
  40352e:	cld    
  40352f:	nop
  403530:	mov    ah,0x36
  403532:	add    DWORD PTR [ecx+0x43],0x50
  403536:	push   ebp
  403537:	lods   eax,DWORD PTR ds:[esi]
  403538:	sub    al,0xf7
  40353a:	pusha  
  40353b:	(bad)  [eax]
  40353d:	mov    bh,0x1b
  40353f:	sub    bh,BYTE PTR [ebx-0x42]
  403542:	jmp    0x2278715b
  403547:	or     al,0xaa
  403549:	pop    edx
  40354a:	int    0xf9
  40354c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354d:	or     DWORD PTR ds:0xc91d6dc4,ecx
  403553:	gs inc ebp
  403555:	loopne 0x40358c
  403557:	inc    edi
  403558:	je     0x40358a
  40355a:	je     0x40356a
  40355c:	je     0x40359b
  40355e:	and    BYTE PTR [eax+eax*1+0x5c899780],0x58
  403566:	scas   eax,DWORD PTR es:[edi]
  403567:	sub    BYTE PTR [esi],ah
  403569:	cld    
  40356a:	mov    eax,ds:0xadec96bb
  40356f:	adc    al,0x3e
  403571:	add    dh,BYTE PTR [edi-0x6b6d344a]
  403577:	arpl   WORD PTR [ebx-0x940d8a1],bp
  40357d:	or     ebp,edx
  40357f:	mov    ebp,0x33358a48
  403584:	dec    ecx
  403585:	test   al,0xe
  403587:	xor    BYTE PTR [edi-0x44b646c],dh
  40358d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40358e:	sbb    edi,DWORD PTR [ecx+ecx*1+0x9]
  403592:	das    
  403593:	and    al,cl
  403595:	ror    BYTE PTR [esi],1
  403597:	repz xchg ebx,eax
  403599:	fcmovnbe st,st(4)
  40359b:	jno    0x4035c9
  40359d:	add    BYTE PTR [eax],ah
  40359f:	retf   
  4035a0:	push   cs
  4035a1:	not    ebp
  4035a3:	(bad)
  4035a7:	add    DWORD PTR [ebp-0x1af850fc],esp
  4035ad:	int    0xa4
  4035af:	cwde   
  4035b0:	dec    esi
  4035b1:	inc    ebp
  4035b2:	push   edx
  4035b3:	mov    eax,0xcb155b1a
  4035b8:	mov    fs,WORD PTR [ebp*8+0x299fbfb8]
  4035bf:	test   DWORD PTR [ebp+0x7cb05e44],edx
  4035c5:	push   cs
  4035c6:	jbe    0x40358a
  4035c8:	push   esi
  4035c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ca:	aad    0xbb
  4035cc:	in     al,0x1c
  4035ce:	push   ecx
  4035cf:	fstp   st(0)
  4035d1:	xchg   esp,edx
  4035d3:	aad    0x5a
  4035d5:	jns    0x4035fa
  4035d7:	mov    edi,0xf3e8550d
  4035dc:	mov    cs,WORD PTR [edi]
  4035de:	repnz idiv BYTE PTR [ecx+0x3386e5a2]
  4035e5:	stc    
  4035e6:	lods   eax,DWORD PTR fs:[esi]
  4035e8:	loope  0x403602
  4035ea:	popa   
  4035eb:	adc    ecx,edi
  4035ed:	scas   al,BYTE PTR es:[edi]
  4035ee:	xchg   BYTE PTR [ecx-0x6c],dh
  4035f1:	xchg   esp,eax
  4035f2:	push   edi
  4035f3:	lea    edx,[ecx+0x5ef7236e]
  4035f9:	inc    ecx
  4035fa:	mov    ch,0xb9
  4035fc:	ret    0x62b5
  4035ff:	push   0xfffffff6
  403601:	add    eax,0x39cdfdf2
  403606:	in     eax,dx
  403607:	push   ss
  403608:	outs   dx,BYTE PTR ds:[esi]
  403609:	lock xor DWORD PTR [esi+0x47b541b4],0xffffff9d
  403611:	mov    ebx,0x35bfaa4b
  403616:	pop    edx
  403617:	or     DWORD PTR [edx-0x39],esi
  40361a:	and    eax,0x886770e2
  40361f:	jmp    FWORD PTR [edx]
  403621:	je     0x403644
  403623:	gs pop esp
  403625:	sub    eax,DWORD PTR [eax+ebx*8-0x4e]
  403629:	mov    esp,0x8648fabc
  40362e:	jo     0x403660
  403630:	xchg   ebp,eax
  403631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403632:	dec    eax
  403633:	pop    edx
  403634:	or     al,0x25
  403636:	sub    BYTE PTR [edx],dh
  403638:	(bad)  
  403639:	dec    edi
  40363a:	out    dx,al
  40363b:	mov    cl,0x77
  40363d:	out    dx,eax
  40363e:	xchg   esi,eax
  40363f:	pop    ds
  403640:	jge    0x403654
  403642:	ins    DWORD PTR es:[edi],dx
  403643:	retf   
  403644:	dec    edx
  403645:	jmp    0xef53e6ba
  40364a:	in     eax,0x87
  40364c:	push   es
  40364d:	leave  
  40364e:	in     al,0xf4
  403650:	test   dh,0x79
  403653:	cmp    dh,dl
  403655:	fdiv   DWORD PTR [ebx+eax*2]
  403658:	sub    bl,cl
  40365a:	sub    edx,DWORD PTR gs:[esi-0x16]
  40365e:	stos   BYTE PTR es:[edi],al
  40365f:	xor    DWORD PTR [esi-0x46],0xa3f6a8b5
  403666:	mov    dl,BYTE PTR [ecx-0x1f]
  403669:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40366b:	or     eax,0xcc7a23b7
  403670:	cmc    
  403671:	mov    al,ds:0x9316ab7a
  403676:	jno    0x4036d2
  403678:	int    0x77
  40367a:	sub    edi,DWORD PTR [edi]
  40367c:	pop    es
  40367d:	arpl   WORD PTR ds:0x664ea1c5,bx
  403683:	dec    ecx
  403684:	test   DWORD PTR [esp+edx*8],eax
  403687:	jl     0x40368f
  403689:	dec    ebp
  40368a:	mov    eax,0xb89c4828
  40368f:	aaa    
  403690:	hlt    
  403691:	or     DWORD PTR [ebp+0x5c],eax
  403694:	aad    0xa2
  403696:	xor    eax,0xbd3b136d
  40369b:	pop    edi
  40369c:	daa    
  40369d:	adc    DWORD PTR [esi-0x27],esp
  4036a0:	or     eax,0xf5998ec5
  4036a5:	mov    dl,0x46
  4036a7:	add    eax,0x6265f24a
  4036ac:	pminub mm7,QWORD PTR [esi-0x37]
  4036b0:	adc    BYTE PTR [eax],bh
  4036b2:	cmp    bh,BYTE PTR [edi+0x6d]
  4036b5:	push   ecx
  4036b6:	mov    eax,ds:0xb273facc
  4036bb:	or     eax,ebx
  4036bd:	cmp    dh,al
  4036bf:	icebp  
  4036c0:	dec    esp
  4036c1:	jecxz  0x403736
  4036c3:	inc    ebx
  4036c4:	(bad)  
  4036c5:	(bad)  
  4036c6:	adc    al,0x15
  4036c8:	addr16 addr16 int 0x31
  4036cc:	fsubr  QWORD PTR [ecx+ebx*2+0x3f]
  4036d0:	jnp    0x403684
  4036d2:	popf   
  4036d3:	scas   al,BYTE PTR es:[edi]
  4036d4:	(bad)  
  4036d6:	fwait
  4036d7:	aam    0x8e
  4036d9:	sbb    eax,0xcc8e1224
  4036de:	inc    ecx
  4036df:	adc    eax,0xb4e92bd4
  4036e4:	popa   
  4036e5:	jp     0x40371f
  4036e7:	dec    ebp
  4036e8:	push   edx
  4036e9:	jmp    0x4036b6
  4036eb:	cmp    DWORD PTR [ebp+0x41],ebx
  4036ee:	or     esi,DWORD PTR [edx-0x39]
  4036f1:	pop    edi
  4036f2:	or     DWORD PTR [esi],edx
  4036f4:	jle    0x403676
  4036f6:	mov    ecx,0x4b2dd304
  4036fb:	and    ch,dh
  4036fd:	test   BYTE PTR [ebp+0x62b0bf06],bh
  403703:	icebp  
  403704:	mov    al,0x50
  403706:	dec    eax
  403707:	add    ch,BYTE PTR [ebx]
  403709:	dec    edx
  40370a:	cmc    
  40370b:	retf   
  40370c:	inc    edi
  40370d:	sahf   
  40370e:	(bad)  
  40370f:	cmp    al,0x86
  403711:	add    al,0x6c
  403713:	dec    edx
  403714:	int    0xf0
  403716:	pop    edx
  403717:	bound  ebx,QWORD PTR [edx-0x52]
  40371a:	jmp    0x403727
  40371c:	rcl    DWORD PTR [ebp-0x79],cl
  40371f:	jae    0x403791
  403721:	sahf   
  403722:	mov    dh,0xeb
  403724:	leave  
  403725:	jmp    0xa54038ec
  40372a:	es cmp eax,0x90fa3b1d
  403730:	mov    edi,0xc3e243c2
  403735:	repnz mov al,0xcb
  403738:	pop    edx
  403739:	mov    esi,DWORD PTR [ebx+0x7]
  40373c:	mov    ds:0x7704571,al
  403741:	(bad)  
  403742:	daa    
  403743:	arpl   WORD PTR [ebx+0x4bd51b84],ax
  403749:	(bad)
  40374c:	sbb    bl,ch
  40374e:	sbb    BYTE PTR [edx],cl
  403750:	inc    esp
  403751:	xor    esi,eax
  403753:	add    al,0xa5
  403755:	jns    0x403722
  403757:	sbb    ecx,DWORD PTR [ebp+0x2ac1c120]
  40375d:	sub    al,0xbe
  40375f:	jl     0x403700
  403761:	bound  esi,QWORD PTR [edi]
  403763:	pop    ds
  403764:	dec    esi
  403765:	pop    ebx
  403766:	dec    esi
  403767:	in     al,0x33
  403769:	inc    eax
  40376a:	pop    edx
  40376b:	scas   eax,DWORD PTR es:[edi]
  40376c:	or     al,BYTE PTR [ebp-0x207178f5]
  403772:	dec    ebp
  403773:	push   ebx
  403774:	scas   al,BYTE PTR es:[edi]
  403775:	retf   
  403776:	addr16 out 0x89,eax
  403779:	sbb    eax,DWORD PTR [edx+0x17]
  40377c:	mov    edx,0x7a57b46f
  403781:	in     eax,0x42
  403783:	inc    BYTE PTR [ebx+0x79]
  403786:	or     al,0x5a
  403788:	cmp    eax,0x1d48f560
  40378d:	xor    BYTE PTR [ebp+0x3b],ah
  403790:	test   BYTE PTR [ecx-0x66f58930],0x6b
  403797:	cwde   
  403798:	call   0xf0ae:0x396ce59c
  40379f:	xchg   eax,ebp
  4037a1:	out    dx,al
  4037a2:	and    edi,esp
  4037a4:	mov    dl,0x1b
  4037a6:	jp     0x403819
  4037a8:	xor    eax,0x75c38dcf
  4037ad:	dec    edx
  4037ae:	and    ecx,DWORD PTR [esi]
  4037b0:	push   0x8c3e1a7f
  4037b5:	cs inc ebp
  4037b7:	js     0x403778
  4037b9:	popf   
  4037ba:	mov    eax,0x76f2c2bc
  4037bf:	mov    esp,ebp
  4037c1:	mov    cl,0x2e
  4037c3:	scas   al,BYTE PTR es:[edi]
  4037c4:	jno    0x40381b
  4037c6:	(bad)  
  4037c7:	ficom  DWORD PTR [ecx]
  4037c9:	lock popf 
  4037cb:	outs   dx,DWORD PTR ds:[esi]
  4037cc:	or     DWORD PTR [edi-0x45],eax
  4037cf:	ins    BYTE PTR es:[edi],dx
  4037d0:	out    0x94,eax
  4037d2:	sbb    BYTE PTR [ebp-0x1522cf6b],bl
  4037d8:	test   DWORD PTR [ebp-0x7e1b93d6],ebx
  4037de:	mov    dl,0xe6
  4037e0:	mov    edi,0x5f5b7a96
  4037e5:	mov    edx,0x92bbc3ba
  4037ea:	retf   0xdb4c
  4037ed:	jb     0x40379d
  4037ef:	jg     0x40382b
  4037f1:	jb     0x403863
  4037f3:	popa   
  4037f4:	mov    edi,0x80629ee4
  4037f9:	jne    0x403818
  4037fb:	icebp  
  4037fc:	xchg   ecx,eax
  4037fd:	mov    ch,0x60
  4037ff:	retw   0xc3ac
  403803:	(bad)  
  403804:	leave  
  403805:	sub    BYTE PTR [edx-0x52],dh
  403808:	push   esp
  403809:	and    ecx,ebx
  40380b:	(bad)  
  40380c:	jg     0x403825
  40380e:	fst    QWORD PTR [ebx-0x3]
  403811:	dec    esi
  403812:	mov    edx,0xfcdb474e
  403817:	sub    al,0x2b
  403819:	ins    BYTE PTR es:[edi],dx
  40381a:	xor    edx,ebp
  40381c:	or     DWORD PTR [ebx+0x55],eax
  40381f:	mov    ch,0xca
  403821:	and    eax,0x7dd05390
  403826:	dec    esi
  403827:	aaa    
  403828:	push   ebp
  403829:	adc    al,0x24
  40382b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40382c:	(bad)  
  40382d:	cmp    eax,0xc7e348d5
  403832:	enter  0xf72e,0x17
  403836:	ds int3 
  403838:	es popf 
  40383a:	aad    0xe
  40383c:	stc    
  40383d:	fcmovu st,st(7)
  40383f:	mov    edx,0x83ade436
  403844:	inc    esi
  403845:	mov    bh,0x75
  403847:	inc    esp
  403848:	push   cs
  403849:	xchg   ecx,eax
  40384a:	pusha  
  40384b:	shl    DWORD PTR [esp+ebp*2+0x28bc118a],0x9f
  403853:	call   0xc7e5:0x301ac2da
  40385a:	dec    edx
  40385b:	icebp  
  40385c:	fist   DWORD PTR [esi]
  40385e:	sub    cl,BYTE PTR [ebx-0x7c6af87b]
  403864:	in     ax,dx
  403866:	jle    0x403812
  403868:	cs mov esi,0x5812ea9f
  40386e:	or     BYTE PTR ds:0x912e86ba,al
  403874:	inc    edx
  403875:	gs push esi
  403877:	mov    esi,0xb4b57eaa
  40387c:	dec    edx
  40387d:	in     eax,dx
  40387e:	xor    DWORD PTR [ebx-0x1d],esp
  403881:	dec    esi
  403882:	mov    al,0x98
  403884:	pop    edi
  403885:	ret    
  403886:	pop    ds
  403887:	ds mov dh,0xb3
  40388a:	pusha  
  40388b:	push   ebp
  40388c:	xchg   edx,eax
  40388d:	jbe    0x40390a
  40388f:	lahf   
  403890:	stos   BYTE PTR es:[edi],al
  403891:	(bad)  
  403893:	cmp    BYTE PTR ds:0xbd9423da,dl
  403899:	dec    ecx
  40389a:	mov    al,ds:0xa6dd1c70
  40389f:	and    BYTE PTR [ebx+0x6bfb9d0a],ch
  4038a5:	(bad)  
  4038a6:	daa    
  4038a7:	inc    ebx
  4038a8:	jge    0x4038c4
  4038aa:	mov    DWORD PTR [edx+0x7fff68b1],edi
  4038b0:	or     al,0xa7
  4038b2:	shl    BYTE PTR [edi+0x201f2128],cl
  4038b8:	xchg   esp,eax
  4038b9:	pusha  
  4038ba:	jbe    0x4038ff
  4038bc:	xchg   BYTE PTR [edi],ch
  4038be:	sti    
  4038bf:	add    BYTE PTR ds:[ebp+edi*1+0x2ba2e70b],dh
  4038c7:	data16 jmp 0x4038c4
  4038ca:	fsubr  st(7),st
  4038cc:	pop    ebx
  4038cd:	icebp  
  4038ce:	adc    edi,DWORD PTR [ebx+0x23]
  4038d1:	lock ret 0x19a5
  4038d5:	and    ch,0x16
  4038d8:	sahf   
  4038d9:	pop    ss
  4038da:	mov    ds,WORD PTR [edx+0x24131820]
  4038e0:	jl     0x4038ef
  4038e2:	xchg   esi,eax
  4038e3:	jge    0x40387b
  4038e5:	cmp    DWORD PTR [eax+0x14],ecx
  4038e8:	mov    ecx,0x5ad02a88
  4038ed:	push   0x4c
  4038ef:	addr16 mov eax,0xd689a697
  4038f5:	add    eax,DWORD PTR [ebp+0x20]
  4038f8:	xchg   edx,eax
  4038f9:	mov    bl,0x71
  4038fb:	adc    al,0xa6
  4038fd:	(bad)  
  4038fe:	(bad)  [edi]
  403900:	sbb    eax,0x1eb3490f
  403905:	or     al,0xf6
  403907:	push   ds
  403908:	xor    edi,edi
  40390a:	enter  0x3f0a,0xef
  40390e:	fmul   QWORD PTR [ebx+0x3d3b547b]
  403914:	popf   
  403915:	das    
  403916:	shl    BYTE PTR [esi],1
  403918:	xchg   DWORD PTR [esi-0x423cb545],esp
  40391e:	pavgb  mm4,mm1
  403921:	int3   
  403922:	mov    ecx,0x8b5ba5be
  403927:	outs   dx,DWORD PTR ds:[esi]
  403928:	and    BYTE PTR [eax],dl
  40392a:	sub    dl,cl
  40392c:	or     eax,0x17427f75
  403931:	adc    dh,BYTE PTR [eax+ebx*8+0x76610cf]
  403938:	inc    edx
  403939:	ds imul esp,ebp,0xa68eaeb0
  403940:	jne    0x403976
  403942:	push   ebx
  403943:	cli    
  403944:	mov    esp,0x58062ef1
  403949:	in     eax,0xde
  40394b:	bound  edi,QWORD PTR [edi+0x74]
  40394e:	leave  
  40394f:	cmp    BYTE PTR [ebx+0x5d],cl
  403952:	fisubr DWORD PTR [ebp-0x46e8d43]
  403958:	test   BYTE PTR [edi+edi*4+0x11],ch
  40395c:	and    BYTE PTR [ecx-0x35],0x54
  403960:	rcl    dh,cl
  403962:	jo     0x40398d
  403964:	xchg   ecx,eax
  403965:	sub    eax,0x2106730c
  40396a:	daa    
  40396b:	call   0x95826d12
  403970:	and    ecx,DWORD PTR [esi-0x69]
  403973:	mov    bl,0x5
  403975:	ds dec edi
  403977:	inc    DWORD PTR [edx+edx*8-0x3d73b8da]
  40397e:	sbb    al,0xcc
  403980:	mov    edi,0xe491250a
  403985:	push   ebp
  403986:	bound  ecx,QWORD PTR [ebp+0x483b1754]
  40398c:	xor    ah,bl
  40398e:	adc    BYTE PTR [eax+0x44],al
  403991:	xor    edx,DWORD PTR [ecx]
  403993:	xor    BYTE PTR [edi],ah
  403995:	sar    DWORD PTR [edx],0x76
  403998:	sbb    DWORD PTR [eax+0x64],esp
  40399b:	pusha  
  40399c:	sub    DWORD PTR [esi-0x36ddcef4],esi
  4039a2:	in     eax,dx
  4039a3:	adc    BYTE PTR [ebx-0x1bc4d471],ah
  4039a9:	dec    edi
  4039aa:	sysexit 
  4039ac:	in     eax,0x2f
  4039ae:	or     al,0xc9
  4039b0:	into   
  4039b1:	cmp    BYTE PTR [eax-0x6c],dh
  4039b4:	xchg   edx,esp
  4039b6:	in     al,0xc0
  4039b8:	bound  edx,QWORD PTR [edx+0x792f8f0a]
  4039be:	jg     0x40396e
  4039c0:	mov    eax,ds:0x3e3fc4b0
  4039c5:	es es cmp eax,0xa74591f7
  4039cc:	ins    BYTE PTR es:[edi],dx
  4039cd:	shl    BYTE PTR [ebp-0x4b],0xf5
  4039d1:	push   esp
  4039d2:	inc    edi
  4039d3:	lahf   
  4039d4:	dec    BYTE PTR [ecx]
  4039d6:	and    al,0xbc
  4039d8:	sbb    eax,0xd887b0e6
  4039dd:	push   esi
  4039de:	or     DWORD PTR [ebx],0x761dbd5d
  4039e4:	jge    0x403996
  4039e6:	pop    es
  4039e7:	clc    
  4039e8:	push   ebp
  4039e9:	push   edx
  4039ea:	imul   edi,DWORD PTR [edi],0x194cdb89
  4039f0:	lods   al,BYTE PTR ds:[esi]
  4039f1:	or     DWORD PTR [ebx-0x6e],esi
  4039f4:	jg     0x4039d7
  4039f6:	cmp    dl,al
  4039f8:	and    edx,DWORD PTR [ecx]
  4039fa:	or     al,0xe2
  4039fc:	lds    edi,FWORD PTR [edi]
  4039fe:	(bad)  
  4039ff:	xchg   ecx,eax
  403a00:	push   DWORD PTR ds:0x250481cd
  403a06:	call   0xe519:0xf50c7cef
  403a0d:	test   al,0xfe
  403a0f:	jl     0x40399d
  403a11:	xchg   ecx,eax
  403a12:	int    0x2b
  403a14:	lea    edi,[eax]
  403a16:	jecxz  0x403a43
  403a18:	ret    
  403a19:	fidiv  DWORD PTR [ebx]
  403a1b:	xchg   esp,eax
  403a1c:	or     dl,BYTE PTR [esi-0x76e21c5e]
  403a22:	(bad)  
  403a23:	jns    0x403a7d
  403a25:	xor    DWORD PTR [ecx-0x237513bb],0x884726a6
  403a2f:	dec    ebx
  403a30:	pop    edi
  403a31:	inc    esi
  403a32:	outs   dx,DWORD PTR ds:[esi]
  403a33:	jp     0x403a16
  403a35:	xchg   DWORD PTR [edx],edx
  403a37:	aam    0x97
  403a39:	pop    esp
  403a3a:	sbb    eax,0xc49722e2
  403a3f:	pop    ss
  403a40:	and    eax,0x9c5a7976
  403a45:	sahf   
  403a46:	mov    edx,0x7f256102
  403a4b:	lods   eax,DWORD PTR ds:[esi]
  403a4c:	cmp    BYTE PTR [esi],al
  403a4e:	mov    eax,DWORD PTR [edx+ecx*1-0x6aa23738]
  403a55:	nop
  403a56:	inc    DWORD PTR [ebp+0x7c58c595]
  403a5c:	loopne 0x403ab1
  403a5e:	fsubr  DWORD PTR [esi]
  403a60:	icebp  
  403a61:	fimul  DWORD PTR [edx+0x734a4e0c]
  403a67:	or     dl,BYTE PTR [ebx+eax*1+0x62]
  403a6b:	push   esp
  403a6c:	sub    edi,DWORD PTR [edx-0x76ad6e49]
  403a72:	(bad)  
  403a73:	push   esp
  403a74:	clc    
  403a75:	test   al,0xdd
  403a77:	jnp    0x403a66
  403a79:	xchg   ebx,eax
  403a7a:	xor    BYTE PTR [ebx-0x7af2430b],0x6d
  403a81:	ror    BYTE PTR [ebp+0x50],cl
  403a84:	push   ecx
  403a85:	pop    ebx
  403a86:	mov    esi,0xf85b70ff
  403a8b:	mov    DWORD PTR [ecx+edx*1-0x6],esp
  403a8f:	sbb    bh,ch
  403a91:	in     al,0x69
  403a93:	(bad)  
  403a94:	arpl   bp,cx
  403a96:	test   DWORD PTR [ebp+0x5b9fa750],esp
  403a9c:	adc    BYTE PTR [eax+eax*1+0x7c8966af],dl
  403aa3:	add    al,0x5a
  403aa5:	dec    esi
  403aa6:	mov    al,0x94
  403aa8:	mov    ds:0x2b8f3fae,eax
  403aad:	arpl   WORD PTR [ebp+ebp*1+0x38],bp
  403ab1:	ror    DWORD PTR [eax-0x4c],0xeb
  403ab5:	xchg   ebx,eax
  403ab6:	mov    bh,0x34
  403ab8:	dec    ecx
  403ab9:	xor    eax,0xbc8537c1
  403abe:	fadd   st,st(7)
  403ac0:	xor    DWORD PTR [eax+0x37],0xc7104d51
  403ac7:	pop    es
  403ac8:	jae    0x403a9a
  403aca:	fucomi st,st(0)
  403acc:	lahf   
  403acd:	jmp    0xd7ec:0x552f01f5
  403ad4:	sub    ebx,DWORD PTR [edx-0x157a3e40]
  403ada:	repnz fisttp QWORD PTR [esi+0x8]
  403ade:	(bad)  
  403adf:	test   al,0xf3
  403ae1:	add    bl,BYTE PTR [edx]
  403ae3:	or     eax,0xf5951083
  403ae8:	ffreep st(5)
  403aea:	out    dx,al
  403aeb:	jle    0x403ae0
  403aed:	fisttp DWORD PTR ds:0x534a14e7
  403af3:	or     DWORD PTR [ebx-0x60b6171c],eax
  403af9:	or     al,BYTE PTR [edi-0x43d468e8]
  403aff:	call   0xcdcdef05
  403b04:	(bad)
  403b08:	in     eax,dx
  403b09:	or     ah,BYTE PTR [edx+0x40]
  403b0c:	repnz inc ecx
  403b0e:	out    dx,eax
  403b0f:	fmul   QWORD PTR [ebp+0x78c9be14]
  403b15:	icebp  
  403b16:	cli    
  403b17:	xchg   edi,eax
  403b18:	pushf  
  403b19:	cmp    ebp,DWORD PTR [edx]
  403b1b:	adc    esi,DWORD PTR [ecx+0x6306da97]
  403b21:	mov    ds:0xa25fb6aa,eax
  403b26:	sbb    edi,esp
  403b28:	and    dl,BYTE PTR [edx-0x1a]
  403b2b:	xor    bh,bl
  403b2d:	xchg   edx,esp
  403b2f:	inc    esp
  403b30:	dec    esi
  403b31:	or     edx,esi
  403b33:	dec    esp
  403b34:	retf   0x9a74
  403b37:	sahf   
  403b38:	add    ah,bl
  403b3a:	push   esi
  403b3b:	lahf   
  403b3c:	loop   0x403aec
  403b3e:	ja     0x403b80
  403b40:	rol    DWORD PTR [ebx],0x2a
  403b43:	sub    DWORD PTR [esi+ecx*8+0xfa8f395],esp
  403b4a:	add    BYTE PTR [ecx],cl
  403b4c:	and    eax,0xdcb1b56b
  403b51:	add    BYTE PTR [ebp+0x64],bh
  403b54:	ret    
  403b55:	inc    edx
  403b56:	mov    DWORD PTR [ecx-0x20b9384b],edi
  403b5c:	outs   dx,DWORD PTR ds:[esi]
  403b5d:	push   edx
  403b5e:	in     al,dx
  403b5f:	cmp    BYTE PTR [ecx],ch
  403b61:	inc    esp
  403b62:	aas    
  403b63:	std    
  403b64:	sar    DWORD PTR [esi],cl
  403b66:	add    DWORD PTR [edi+0x27],esp
  403b69:	fdivr  st,st(5)
  403b6b:	or     eax,0xdea7cdcb
  403b70:	jae    0x403b5c
  403b72:	or     DWORD PTR [eax-0x4abcee00],ebx
  403b78:	(bad)  
  403b79:	enter  0x1346,0xe1
  403b7d:	outs   dx,BYTE PTR ds:[esi]
  403b7e:	push   esi
  403b7f:	and    DWORD PTR [edx],0x74be84c
  403b85:	or     BYTE PTR [ecx+ebx*1-0x31],ch
  403b89:	test   DWORD PTR [esp+ebp*8],edi
  403b8c:	cli    
  403b8d:	rcr    edx,1
  403b8f:	arpl   WORD PTR [edi-0x6d65ff81],si
  403b95:	les    esp,FWORD PTR [edi+0x1f95291]
  403b9b:	lods   al,BYTE PTR ds:[esi]
  403b9c:	iret   
  403b9d:	ror    DWORD PTR [esi],0x8d
  403ba0:	cdq    
  403ba1:	pop    ebp
  403ba2:	std    
  403ba3:	shr    dh,cl
  403ba5:	sub    BYTE PTR [edi],0x27
  403ba8:	pusha  
  403ba9:	ds jbe 0x403be4
  403bac:	and    eax,0xec550475
  403bb1:	pushw  ds
  403bb3:	jns    0x403b6c
  403bb5:	adc    DWORD PTR [edi],ebx
  403bb7:	xor    al,0x74
  403bb9:	xor    BYTE PTR [eax+0x402b234a],bh
  403bbf:	mov    dh,0xf0
  403bc1:	inc    esi
  403bc2:	and    esi,DWORD PTR [edi]
  403bc4:	xchg   edx,eax
  403bc5:	or     DWORD PTR [eax-0x6134e1d9],esi
  403bcb:	sbb    ah,dh
  403bcd:	lods   eax,DWORD PTR ds:[esi]
  403bce:	mov    dh,0x53
  403bd0:	stos   BYTE PTR es:[edi],al
  403bd1:	ss pop eax
  403bd3:	jae    0x403be0
  403bd5:	jb     0x403c00
  403bd7:	js     0x403b5e
  403bd9:	neg    BYTE PTR [edx-0x68cc493b]
  403bdf:	jb     0x403c5e
  403be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be2:	adc    eax,0x71644270
  403be7:	cld    
  403be8:	aas    
  403be9:	repnz rcl BYTE PTR [esi-0x31247acd],0x96
  403bf1:	jg     0x403c29
  403bf3:	(bad)  
  403bf4:	rol    DWORD PTR [eax+0x41],cl
  403bf7:	push   ecx
  403bf8:	xchg   esp,eax
  403bf9:	retf   0x50c1
  403bfc:	pop    esi
  403bfd:	push   esp
  403bfe:	add    bl,BYTE PTR [edi+ebp*8-0x1b78aa8c]
  403c05:	in     al,dx
  403c06:	push   edi
  403c07:	jnp    0x403c54
  403c09:	push   ebp
  403c0a:	addr16 pop eax
  403c0c:	cmc    
  403c0d:	inc    esi
  403c0e:	out    0xea,eax
  403c10:	adc    al,0xf
  403c12:	loopne 0x403b9f
  403c14:	push   esi
  403c15:	push   0x294617f4
  403c1a:	or     esp,eax
  403c1c:	add    edi,eax
  403c1e:	add    eax,0x1d803e6e
  403c23:	dec    esp
  403c24:	pop    edx
  403c25:	inc    esi
  403c26:	repnz sahf 
  403c28:	test   BYTE PTR [edx+0x1086b659],dl
  403c2e:	stc    
  403c2f:	pop    edi
  403c30:	xchg   ebp,eax
  403c31:	inc    ebx
  403c32:	mov    eax,0x48331c93
  403c37:	mov    edi,ecx
  403c39:	pop    ss
  403c3a:	lods   al,BYTE PTR ds:[esi]
  403c3b:	ins    DWORD PTR es:[edi],dx
  403c3c:	(bad)  
  403c3d:	fwait
  403c3e:	stos   DWORD PTR es:[edi],eax
  403c3f:	add    DWORD PTR [edx+0x5c0f7680],0x75
  403c46:	aad    0x85
  403c48:	loopne 0x403c2d
  403c4a:	cmp    ch,BYTE PTR [bx+si]
  403c4d:	jmp    0x5ea4:0xab7b9eb0
  403c54:	jmp    0xff60:0xb836397b
  403c5b:	int3   
  403c5c:	(bad)  
  403c5d:	lea    edx,[eax-0x658067da]
  403c63:	sbb    BYTE PTR [eax],cl
  403c65:	fwait
  403c66:	xchg   ebp,eax
  403c67:	xor    dl,BYTE PTR [ebx+0x1b]
  403c6a:	inc    esp
  403c6b:	addr16 popa 
  403c6d:	es mov bl,0x63
  403c70:	cwde   
  403c71:	dec    edx
  403c72:	sbb    al,0x93
  403c74:	jne    0x403c40
  403c76:	jge    0x403cef
  403c78:	adc    DWORD PTR [edi],ecx
  403c7a:	xchg   edx,eax
  403c7b:	ss cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c7e:	lea    eax,[esi+ebx*1-0x62]
  403c82:	ret    0x95b7
  403c85:	imul   ebp,DWORD PTR [edx-0x4a],0x90971927
  403c8c:	ror    BYTE PTR [esi+0x554973aa],1
  403c92:	jbe    0x403c47
  403c94:	scas   eax,DWORD PTR es:[edi]
  403c95:	dec    ecx
  403c96:	mov    bh,0xc0
  403c98:	into   
  403c99:	push   ss
  403c9a:	fs mov cl,0x5a
  403c9d:	or     al,0x35
  403c9f:	loop   0x403c7c
  403ca1:	add    BYTE PTR [eax+0x6b7605ea],ch
  403ca7:	and    BYTE PTR [ecx],0xa
  403caa:	adc    esp,DWORD PTR [edi+ebp*4]
  403cad:	loop   0x403cdb
  403caf:	xor    dh,BYTE PTR [edx+0x3cd740df]
  403cb5:	pop    ebx
  403cb6:	add    dh,BYTE PTR [edx]
  403cb8:	out    0x45,eax
  403cba:	adc    BYTE PTR [ecx],bl
  403cbc:	daa    
  403cbd:	lahf   
  403cbe:	cmp    al,0x3d
  403cc0:	mov    bh,0x3b
  403cc2:	das    
  403cc3:	imul   esp,DWORD PTR [edx],0xfffffff3
  403cc6:	(bad)  
  403cc7:	jp     0x403d28
  403cc9:	xchg   ecx,eax
  403cca:	jne    0x403d3d
  403ccc:	retf   0x4845
  403ccf:	and    al,0xdd
  403cd1:	dec    esi
  403cd2:	xchg   esi,eax
  403cd3:	or     al,0x73
  403cd5:	or     DWORD PTR [eax+0x39e300bd],0xffffff8b
  403cdc:	sub    al,0x0
  403cde:	aas    
  403cdf:	mov    eax,0x2fa4098
  403ce4:	pop    ebx
  403ce5:	add    esi,esi
  403ce7:	mov    dl,0xd
  403ce9:	mov    dl,0x23
  403ceb:	fsub   QWORD PTR [edx]
  403ced:	mov    dh,0x63
  403cef:	sbb    al,0x71
  403cf1:	mov    ds:0xa621fbe7,eax
  403cf6:	adc    BYTE PTR [edx],cl
  403cf8:	clc    
  403cf9:	mov    esi,0xe6846266
  403cfe:	cli    
  403cff:	pop    esi
  403d00:	and    DWORD PTR [eax-0x4665566d],0x67
  403d07:	pop    edi
  403d08:	jge    0x403d61
  403d0a:	push   esp
  403d0b:	or     BYTE PTR gs:[ebp+0x7a12e485],dh
  403d12:	xor    dh,BYTE PTR [edi]
  403d14:	sub    BYTE PTR [ecx+eax*4-0x7b],bl
  403d18:	xchg   edx,eax
  403d19:	add    BYTE PTR [eax],al
  403d1b:	cmp    cl,bh
  403d1d:	lods   al,BYTE PTR ds:[esi]
  403d1e:	xchg   edi,eax
  403d1f:	daa    
  403d20:	xchg   ebx,eax
  403d21:	sahf   
  403d22:	add    eax,0x8c4e8c69
  403d27:	or     bl,al
  403d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d2a:	daa    
  403d2b:	pop    esi
  403d2c:	ins    DWORD PTR es:[edi],dx
  403d2d:	clc    
  403d2e:	test   DWORD PTR [ebp+0x7ef899b6],edi
  403d34:	sbb    eax,0x9e94abae
  403d39:	les    esp,FWORD PTR [ecx]
  403d3b:	(bad)  
  403d3c:	add    esi,DWORD PTR fs:[ebx]
  403d3f:	stos   DWORD PTR es:[edi],eax
  403d40:	jne    0x403d15
  403d42:	lock cmp dh,BYTE PTR [edx]
  403d45:	push   esp
  403d46:	cmp    BYTE PTR [edx-0x56c36dd7],0x1e
  403d4d:	push   cs
  403d4e:	pop    ds
  403d4f:	and    BYTE PTR [ecx],0xe7
  403d52:	push   edi
  403d53:	inc    edx
  403d54:	fbld   TBYTE PTR [eax]
  403d56:	and    BYTE PTR [ebp+ebp*1+0x7f],0xec
  403d5b:	ins    DWORD PTR es:[edi],dx
  403d5c:	push   eax
  403d5d:	pop    eax
  403d5e:	into   
  403d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d60:	xchg   esp,eax
  403d61:	mov    ds:0xd406316d,eax
  403d66:	sub    eax,0xff509c16
  403d6b:	jmp    0x364b7234
  403d70:	xchg   edi,eax
  403d71:	out    dx,al
  403d72:	rol    ebx,1
  403d74:	cli    
  403d75:	push   ebp
  403d76:	sbb    bh,BYTE PTR [edx]
  403d78:	call   0x6db0555
  403d7d:	(bad)  
  403d7e:	loopne 0x403d97
  403d80:	in     eax,dx
  403d81:	cmp    BYTE PTR [edi-0x1224cfa1],dl
  403d87:	outs   dx,BYTE PTR ds:[esi]
  403d88:	faddp  st(2),st
  403d8a:	mov    ?,WORD PTR [edx-0x2b]
  403d8d:	mov    esp,0xe226fc8b
  403d92:	sbb    BYTE PTR [ecx+eax*1-0x29],0x1
  403d97:	mov    dl,bl
  403d99:	outs   dx,DWORD PTR ds:[esi]
  403d9a:	pop    ebp
  403d9b:	pop    ebp
  403d9c:	sbb    BYTE PTR [ebp-0x7716caae],ch
  403da2:	jge    0x403de0
  403da4:	cld    
  403da5:	fs inc edi
  403da7:	or     BYTE PTR [ebp+0x3e],cl
  403daa:	(bad)  
  403dab:	aad    0xa0
  403dad:	test   al,0xca
  403daf:	arpl   WORD PTR [eax+0x35],si
  403db2:	outs   dx,DWORD PTR ds:[esi]
  403db3:	push   edx
  403db4:	sub    al,0x63
  403db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db7:	fmul   st(3),st
  403db9:	ss cmp eax,0x9a5e8c5f
  403dbf:	cmp    al,dl
  403dc1:	dec    edx
  403dc2:	xchg   DWORD PTR [ecx],edx
  403dc4:	sti    
  403dc5:	bound  eax,QWORD PTR [edx]
  403dc7:	jb     0x403df0
  403dc9:	imul   esp,DWORD PTR [esi+ebp*8],0xcad98315
  403dd0:	out    dx,eax
  403dd1:	popf   
  403dd2:	sbb    al,0x67
  403dd4:	dec    ebp
  403dd5:	in     al,0x5e
  403dd7:	ror    BYTE PTR [esi+0x3519e114],0x82
  403dde:	jo     0x403e46
  403de0:	in     al,0xa7
  403de2:	cmp    eax,0xc803d405
  403de7:	xchg   esi,eax
  403de8:	sar    DWORD PTR [eax+0x7],0x41
  403dec:	push   ebx
  403ded:	fwait
  403dee:	lods   eax,DWORD PTR ds:[esi]
  403def:	dec    edi
  403df0:	addr16 dec edi
  403df2:	sbb    ah,BYTE PTR ds:0x1a1195c5
  403df8:	xchg   esp,eax
  403df9:	stc    
  403dfa:	hlt    
  403dfb:	fst    DWORD PTR fs:[eax]
  403dfe:	rol    DWORD PTR [eax+ecx*8+0x3f0086ac],1
  403e05:	dec    ebp
  403e06:	iret   
  403e07:	lods   eax,DWORD PTR ds:[esi]
  403e08:	push   es
  403e09:	jl     0x403e3d
  403e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e0c:	mov    cl,0xd8
  403e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e0f:	pop    ds
  403e10:	mov    edx,?
  403e12:	lds    esp,FWORD PTR ds:0x999337d8
  403e18:	das    
  403e19:	pop    eax
  403e1a:	sar    DWORD PTR [edx-0x2244c122],cl
  403e20:	cmc    
  403e21:	mov    cl,0xa8
  403e23:	cmp    cl,BYTE PTR [eax-0x29]
  403e26:	fstp   DWORD PTR [edx+0x26]
  403e29:	pop    edx
  403e2a:	inc    esi
  403e2b:	sbb    BYTE PTR [ecx-0x18278376],bh
  403e31:	sub    dl,BYTE PTR [esi]
  403e33:	scas   al,BYTE PTR es:[edi]
  403e34:	push   0xe5056dc6
  403e39:	push   edi
  403e3a:	inc    edi
  403e3b:	stos   BYTE PTR es:[edi],al
  403e3c:	gs add ch,dl
  403e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e40:	pop    ecx
  403e41:	sub    edi,ebp
  403e43:	sub    eax,0x2d0629e9
  403e48:	add    ah,al
  403e4a:	xchg   ebx,eax
  403e4b:	lock cwde 
  403e4d:	sti    
  403e4e:	fnstcw WORD PTR [ebp+0x718a4f91]
  403e54:	adc    ebp,DWORD PTR [edx]
  403e56:	xchg   esp,eax
  403e57:	jnp    0x403e7c
  403e59:	daa    
  403e5a:	xor    al,0x6d
  403e5c:	push   ebp
  403e5d:	mov    bh,0x2c
  403e5f:	dec    ecx
  403e60:	(bad)  
  403e61:	mov    edi,0x919d07c1
  403e66:	sub    DWORD PTR [esi],esi
  403e68:	jno    0x403df6
  403e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e6b:	not    DWORD PTR [edx+0x66]
  403e6e:	xor    DWORD PTR [esi+0x3c],0xffffff85
  403e72:	adc    eax,eax
  403e74:	mov    edi,edx
  403e76:	dec    ebp
  403e77:	push   eax
  403e78:	into   
  403e79:	or     al,al
  403e7b:	push   ebp
  403e7c:	dec    eax
  403e7d:	mov    ebp,0xccdd1e39
  403e82:	dec    ebx
  403e83:	add    al,0xe4
  403e85:	mov    eax,0x1307549e
  403e8a:	mov    eax,ds:0x45b671be
  403e8f:	push   ds
  403e90:	inc    esp
  403e91:	adc    eax,0xae5d9802
  403e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e97:	adc    eax,0x52a70952
  403e9c:	and    al,dh
  403e9e:	cmp    al,BYTE PTR [esi+0x4a]
  403ea1:	test   DWORD PTR [edx-0x550cf70e],eax
  403ea7:	inc    eax
  403ea8:	dec    edi
  403ea9:	daa    
  403eaa:	jl     0x403eac
  403eac:	push   edi
  403ead:	xor    BYTE PTR [ecx],al
  403eaf:	mov    DWORD PTR [edx+ebx*4],ebx
  403eb2:	test   BYTE PTR [edi],al
  403eb4:	fisttp QWORD PTR ds:[eax]
  403eb7:	sahf   
  403eb8:	add    ecx,DWORD PTR [esi]
  403eba:	ret    
  403ebb:	jecxz  0x403ec0
  403ebd:	(bad)  
  403ebe:	and    al,0xd6
  403ec0:	dec    esp
  403ec1:	call   0x9d3c:0xf74df78a
  403ec8:	push   eax
  403ec9:	sar    esi,0x1b
  403ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ecd:	pop    esi
  403ece:	gs scas eax,DWORD PTR es:[edi]
  403ed0:	add    ebp,DWORD PTR [ecx+0x43817f3b]
  403ed6:	mov    bl,0xe1
  403ed8:	push   es
  403ed9:	out    dx,eax
  403eda:	sub    ecx,eax
  403edc:	jbe    0x403f18
  403ede:	ficom  DWORD PTR [edx-0x2a]
  403ee1:	or     ebp,ebx
  403ee3:	cdq    
  403ee4:	stos   DWORD PTR es:[edi],eax
  403ee5:	mov    edx,0xe653c4ef
  403eea:	mov    al,ds:0xfd93ef77
  403eef:	fisttp QWORD PTR [edx+edx*2+0x41]
  403ef3:	push   es
  403ef4:	or     BYTE PTR ds:0xca5c7e54,bl
  403efa:	dec    eax
  403efb:	shl    BYTE PTR [ecx],1
  403efd:	dec    ebx
  403efe:	mov    ecx,0xee4cd6d7
  403f03:	(bad)  
  403f06:	sub    BYTE PTR ds:0xb426ece5,bh
  403f0c:	sar    DWORD PTR [edi+0x675286a9],cl
  403f12:	fwait
  403f13:	ror    DWORD PTR [esi],1
  403f15:	push   eax
  403f16:	outs   dx,DWORD PTR ds:[esi]
  403f17:	aas    
  403f18:	push   cs
  403f19:	pop    ss
  403f1a:	mov    esp,0x1c8e914b
  403f1f:	xchg   edi,eax
  403f20:	pop    ecx
  403f21:	xor    cl,BYTE PTR [ebx-0x5eb93f9d]
  403f27:	scas   eax,DWORD PTR es:[edi]
  403f28:	inc    ecx
  403f29:	pop    esp
  403f2a:	cs in  eax,dx
  403f2c:	add    al,0x4a
  403f2e:	pop    ebx
  403f2f:	xor    eax,ecx
  403f31:	mov    bl,0x2d
  403f33:	mov    edx,0xf0ba7d44
  403f38:	sub    DWORD PTR [ebp+0x46],eax
  403f3b:	xchg   BYTE PTR [esi],dh
  403f3d:	je     0x403f04
  403f3f:	jmp    FWORD PTR [ebx]
  403f41:	(bad)  
  403f42:	mov    edx,0x1968ebff
  403f47:	rcr    BYTE PTR [edi+eax*4+0x326d58af],1
  403f4e:	pop    esp
  403f4f:	jle    0x403f1f
  403f51:	popa   
  403f52:	repz lahf 
  403f54:	and    al,0xcb
  403f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f57:	mov    cl,0xf4
  403f59:	js     0x905c0999
  403f5f:	xchg   esi,eax
  403f60:	stc    
  403f61:	enter  0x7faf,0xfe
  403f65:	cmp    BYTE PTR [eax+0x3142c8d8],dh
  403f6b:	ds out 0xa3,eax
  403f6e:	les    eax,FWORD PTR es:[ebp-0x67]
  403f72:	and    al,0xe6
  403f74:	outs   dx,DWORD PTR ds:[esi]
  403f75:	lods   eax,DWORD PTR ds:[esi]
  403f76:	test   DWORD PTR [eax-0x79],ecx
  403f79:	int    0x3
  403f7b:	arpl   WORD PTR [ecx],sp
  403f7d:	xor    cl,BYTE PTR [eax-0x284b7da2]
  403f83:	imul   edi,DWORD PTR [ecx+0x6a],0x8fd9270a
  403f8a:	mov    edi,0xd146f6f4
  403f8f:	pop    ds
  403f90:	lds    edx,FWORD PTR [edi-0x379a905d]
  403f96:	js     0x403fca
  403f98:	cmp    bl,ah
  403f9a:	sub    esp,DWORD PTR [eax]
  403f9c:	pusha  
  403f9d:	call   0xaef7:0xed847927
  403fa4:	inc    esp
  403fa5:	cmc    
  403fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa7:	cld    
  403fa8:	call   0xbdcf:0xcd2679f1
  403faf:	mov    ecx,0x2a5d0623
  403fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fb5:	dec    ebp
  403fb6:	fwait
  403fb7:	push   edx
  403fb8:	retf   
  403fb9:	icebp  
  403fba:	mov    dl,0x7e
  403fbc:	lahf   
  403fbd:	dec    eax
  403fbe:	inc    edx
  403fbf:	inc    ecx
  403fc0:	pop    eax
  403fc1:	mov    bl,0xb8
  403fc3:	mov    cl,0x22
  403fc5:	push   es
  403fc6:	or     esi,ebx
  403fc8:	jl     0x40402e
  403fca:	xor    al,0x31
  403fcc:	and    dh,cl
  403fce:	jae    0x404042
  403fd0:	lea    ebx,[esi]
  403fd2:	imul   DWORD PTR [edx]
  403fd4:	stos   DWORD PTR es:[edi],eax
  403fd5:	das    
  403fd6:	div    BYTE PTR ds:0xdc66cdc
  403fdc:	hlt    
  403fdd:	mov    ecx,0xeff7ff
  403fe2:	rcl    edx,1
  403fe4:	sbb    al,0x83
  403fe6:	fnstcw WORD PTR [ebx-0x20f6f459]
  403fec:	inc    edx
  403fed:	loope  0x403fcb
  403fef:	xchg   ebx,eax
  403ff0:	inc    esp
  403ff1:	inc    ecx
  403ff2:	mov    dh,0xf6
  403ff4:	xor    ah,BYTE PTR [esi]
  403ff6:	inc    ebp
  403ff7:	jge    0x404020
  403ff9:	fdivr  st,st(1)
  403ffb:	loopne 0x404037
  403ffd:	push   esi
  403ffe:	pop    ds
  403fff:	bound  edi,QWORD PTR [ebp+0x74]
  404002:	dec    esi
  404003:	shr    DWORD PTR [ecx+edx*8+0x15],1
  404007:	lock cmp BYTE PTR [edx-0x5557d92],dl
  40400e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400f:	adc    ch,BYTE PTR [ebp+0x123400b3]
  404015:	(bad)  [edx-0x1c]
  404018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404019:	pop    eax
  40401a:	repnz aaa 
  40401c:	fidiv  DWORD PTR [edi+eax*2]
  40401f:	cmp    DWORD PTR [ecx+0x78],0xffffffc5
  404023:	sbb    eax,0x1d83ed50
  404028:	int3   
  404029:	xor    BYTE PTR [esi+0x37b1d95b],dh
  40402f:	xor    DWORD PTR [ebx],ebx
  404031:	das    
  404032:	push   0xffffffb3
  404034:	out    0x1b,eax
  404036:	sbb    eax,0xf489e04d
  40403b:	sub    eax,0xc80ab9f3
  404040:	adc    cl,0xfd
  404043:	dec    ecx
  404044:	out    0xc,al
  404046:	dec    edx
  404047:	sub    al,0x49
  404049:	(bad)  
  40404b:	mov    ds:0x95ecdaec,eax
  404050:	fwait
  404051:	scas   al,BYTE PTR es:[edi]
  404052:	adc    bl,BYTE PTR [ebx+0x24850110]
  404058:	lock jno 0x404039
  40405b:	push   0x5c
  40405d:	arpl   WORD PTR [edx],bp
  40405f:	sub    ebx,ebp
  404061:	int    0xbe
  404063:	imul   edx,DWORD PTR [edi+0x10f182ec],0x1d
  40406a:	(bad)  
  40406b:	pop    ss
  40406c:	aaa    
  40406d:	aas    
  40406e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40406f:	mov    cl,0xb9
  404071:	or     eax,0xaa8292e1
  404076:	faddp  st(6),st
  404078:	das    
  404079:	inc    ebp
  40407a:	push   edx
  40407b:	(bad)  
  40407c:	loopne 0x4040be
  40407e:	test   eax,0x535bb06e
  404083:	pop    eax
  404084:	jmp    0x404051
  404086:	or     bl,BYTE PTR gs:[esi+0x290680b1]
  40408d:	sar    BYTE PTR [esi+0x75d5ef56],1
  404093:	pop    ebx
  404094:	lds    ebp,FWORD PTR [ebx-0x2f73ae49]
  40409a:	ins    BYTE PTR es:[edi],dx
  40409b:	pop    es
  40409c:	pusha  
  40409d:	ds sub ebp,ebp
  4040a0:	fwait
  4040a1:	gs aaa 
  4040a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a4:	repnz push edi
  4040a6:	ret    0xf0cd
  4040a9:	test   BYTE PTR ss:[ebx+0x15],al
  4040ad:	dec    BYTE PTR [esi-0x47eaf666]
  4040b3:	js     0x404102
  4040b5:	adc    al,0x57
  4040b7:	cmp    al,0xdf
  4040b9:	push   ds
  4040ba:	mov    DWORD PTR [ecx+0x30064125],edx
  4040c0:	in     eax,0x5e
  4040c2:	cs loopne 0x4040ba
  4040c5:	cmp    DWORD PTR [ecx+eiz*1-0x5d79a7d1],0x100d7aee
  4040d0:	cmp    DWORD PTR [edi-0x4ace60e0],edi
  4040d6:	adc    esi,0x52255ed4
  4040dc:	jo     0x404123
  4040de:	popa   
  4040df:	and    al,0x44
  4040e1:	loope  0x404093
  4040e3:	cmp    DWORD PTR [ebx+0x131436ef],esi
  4040e9:	lods   al,BYTE PTR ds:[esi]
  4040ea:	push   edi
  4040eb:	pop    esi
  4040ec:	jo     0x404100
  4040ee:	sar    ah,cl
  4040f0:	jp     0x404115
  4040f2:	gs push ss
  4040f4:	aaa    
  4040f5:	xchg   ebx,eax
  4040f6:	mov    ah,0x10
  4040f8:	mov    ch,ah
  4040fa:	jecxz  0x4040cb
  4040fc:	sbb    al,0xfb
  4040fe:	xchg   ebx,eax
  4040ff:	(bad)  [ebx]
  404101:	pop    ebx
  404102:	sub    al,0xf4
  404104:	xor    eax,0x52cb3b38
  404109:	ret    0x9d0a
  40410c:	(bad)  
  40410d:	cmp    al,0xca
  40410f:	stos   DWORD PTR es:[edi],eax
  404110:	inc    esi
  404111:	cmp    ch,BYTE PTR [esp+ecx*4+0x274f4945]
  404118:	or     dh,BYTE PTR [esp+edi*1-0x28]
  40411c:	inc    ebp
  40411d:	dec    esp
  40411e:	inc    ebx
  40411f:	cmc    
  404120:	add    dh,BYTE PTR [edx]
  404122:	xchg   edx,eax
  404123:	sbb    eax,0xe374a752
  404129:	xor    DWORD PTR [edx],edx
  40412b:	arpl   WORD PTR [edi+0x35],ax
  40412e:	ficom  DWORD PTR [ebx]
  404130:	fs jge 0x404135
  404133:	(bad)  
  404135:	mov    edi,0xbccbc4c0
  40413a:	adc    eax,DWORD PTR [eax]
  40413c:	push   ebp
  40413d:	pop    esp
  40413e:	and    bl,BYTE PTR [eax]
  404140:	call   0x62c5:0x2ca5aa15
  404147:	sbb    ah,dl
  404149:	aad    0x61
  40414b:	xchg   edi,eax
  40414c:	imul   edi,DWORD PTR [ecx+0x14790caf],0xffffff9a
  404153:	sbb    ebx,DWORD PTR gs:[bx+di]
  404157:	ss add eax,0xdae687aa
  40415d:	mov    esi,0x8d991362
  404162:	and    al,0x21
  404164:	xor    al,0x99
  404166:	adc    BYTE PTR [esi],0x21
  404169:	test   BYTE PTR [esi-0x159a2bb9],bh
  40416f:	jne    0x404164
  404171:	bound  ecx,QWORD PTR [ebx]
  404173:	mov    ch,0xca
  404175:	jnp    0x40419d
  404177:	and    eax,0x988c46d1
  40417c:	dec    esp
  40417d:	outs   dx,BYTE PTR ds:[esi]
  40417e:	mov    al,0x12
  404180:	cmp    edi,DWORD PTR [ebx+0x79663e3b]
  404186:	and    BYTE PTR [ecx+0x6a09ce04],dl
  40418c:	jnp    0x4041bd
  40418e:	jmp    0x74cb:0x67740a7f
  404195:	mov    ebx,0x892b7d4f
  40419a:	jmp    0xdde5:0x2e5fd9ec
  4041a1:	stos   DWORD PTR es:[edi],eax
  4041a2:	pop    eax
  4041a3:	in     eax,dx
  4041a4:	jg     0x404225
  4041a6:	dec    edx
  4041a7:	adc    BYTE PTR [ecx+0x6a],ah
  4041aa:	fbld   TBYTE PTR [ecx+0x54]
  4041ad:	lods   al,BYTE PTR ds:[esi]
  4041ae:	jmp    0x40419b
  4041b0:	mov    ds:0x84aae7f6,al
  4041b5:	jo     0x404157
  4041b7:	in     eax,dx
  4041b8:	out    0x33,al
  4041ba:	stc    
  4041bb:	jg     0x4041b6
  4041bd:	test   BYTE PTR [edx],ah
  4041bf:	inc    edx
  4041c0:	xor    eax,0xb96bf4cf
  4041c5:	xbegin 0xf24f69be
  4041cb:	mov    BYTE PTR [edi+edi*4-0x358fbda8],ah
  4041d2:	cld    
  4041d3:	lock jne 0x40417f
  4041d6:	jne    0x40424a
  4041d8:	jg     0x404168
  4041da:	pop    esi
  4041db:	iret   
  4041dc:	sti    
  4041dd:	jl     0x404223
  4041df:	stos   DWORD PTR es:[edi],eax
  4041e0:	dec    edx
  4041e1:	into   
  4041e2:	cli    
  4041e3:	leave  
  4041e4:	out    0xb5,al
  4041e6:	pop    ebp
  4041e7:	icebp  
  4041e8:	mov    ebx,0xe61fbd64
  4041ed:	or     al,0x5b
  4041ef:	add    BYTE PTR [esi],ah
  4041f1:	mov    ah,dh
  4041f3:	imul   ebx,DWORD PTR ds:0xc9cc5c8e,0x46
  4041fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041fb:	dec    esp
  4041fc:	aaa    
  4041fd:	sub    BYTE PTR [edi-0x58],dh
  404200:	fwait
  404201:	pop    ss
  404202:	xor    BYTE PTR [esi-0x37],dh
  404205:	je     0x404215
  404207:	jp     0x404207
  404209:	shr    dl,1
  40420b:	cmp    BYTE PTR [ebx+0x687e86ba],bl
  404211:	xchg   edx,eax
  404212:	mov    bl,0x85
  404214:	sbb    bh,BYTE PTR [edi-0x28d9f55e]
  40421a:	or     ah,bh
  40421c:	xchg   edi,eax
  40421d:	fmul   QWORD PTR [edi-0x36e93b83]
  404223:	mov    bl,0xdf
  404225:	xchg   ecx,eax
  404226:	or     esp,esp
  404228:	xchg   ebx,eax
  404229:	or     al,0xa9
  40422b:	pop    eax
  40422c:	leave  
  40422d:	dec    ebp
  40422e:	push   edx
  40422f:	mov    DWORD PTR [esi-0x22],edx
  404232:	loopne 0x404201
  404234:	pop    DWORD PTR [edx+0x620dc7e9]
  40423a:	mov    al,BYTE PTR [esi+0x32]
  40423d:	or     al,0x3d
  40423f:	add    ecx,ecx
  404241:	push   0xffffff99
  404243:	jge    0x404251
  404245:	or     eax,0x4feebbaa
  40424a:	and    eax,0xa20ceed
  40424f:	mov    dl,0xbe
  404251:	in     al,dx
  404252:	mov    esp,0x7a4a4902
  404257:	mov    edx,esp
  404259:	jb     0x40425b
  40425b:	adc    dl,BYTE PTR [ecx-0x7c]
  40425e:	fmul   QWORD PTR [ebx-0x4]
  404261:	rcl    DWORD PTR [esi+eax*2+0x38381348],1
  404268:	and    ebp,0x1f
  40426b:	imul   ebp,edx,0x9c0fa138
  404271:	push   0x7131d637
  404276:	pop    ss
  404277:	jle    0x40422b
  404279:	in     al,0x9a
  40427b:	pop    ebp
  40427c:	inc    esp
  40427d:	inc    ebx
  40427e:	sbb    BYTE PTR [ecx],0x44
  404281:	ret    0xd046
  404284:	lds    ebp,FWORD PTR [ebx+0x2ee0f8dc]
  40428a:	xor    edi,edi
  40428c:	add    cl,ah
  40428e:	inc    ebx
  40428f:	outs   dx,DWORD PTR ds:[esi]
  404290:	sub    al,0x73
  404292:	inc    ebx
  404293:	add    al,0xd1
  404295:	mov    ecx,0xf25864eb
  40429a:	hlt    
  40429b:	arpl   WORD PTR [eax+edx*1],bp
  40429e:	fidivr DWORD PTR [eax-0x3b]
  4042a1:	lods   eax,DWORD PTR ds:[esi]
  4042a2:	(bad)  
  4042a4:	cmp    DWORD PTR [edx+edi*4],0x3b687e4a
  4042ab:	cwde   
  4042ac:	sbb    DWORD PTR [edi+0x3aa20997],edx
  4042b2:	sbb    al,0xfd
  4042b4:	cmp    dh,ch
  4042b6:	gs hlt 
  4042b8:	test   BYTE PTR [eax-0x68],cl
  4042bb:	test   BYTE PTR [edx],ah
  4042bd:	xchg   esi,eax
  4042be:	sbb    BYTE PTR [ebx],cl
  4042c0:	adc    eax,ecx
  4042c2:	inc    ebp
  4042c3:	pop    ebp
  4042c4:	inc    ebp
  4042c5:	inc    edi
  4042c6:	dec    ebx
  4042c7:	imul   ebx,DWORD PTR [esi+0xc],0x6d
  4042cb:	fbld   TBYTE PTR [edi+0x75]
  4042ce:	add    eax,DWORD PTR [ebp+ebx*2+0x4]
  4042d2:	out    dx,eax
  4042d3:	repz imul esp,DWORD PTR [ebx],0xe7df924c
  4042da:	cdq    
  4042db:	mov    esp,0x19eb570c
  4042e0:	ins    BYTE PTR es:[edi],dx
  4042e1:	dec    ebp
  4042e2:	int3   
  4042e3:	ret    0x322c
  4042e6:	dec    ebx
  4042e7:	inc    edx
  4042e8:	fisubr DWORD PTR [eax+0x77bc92f4]
  4042ee:	adc    ecx,DWORD PTR ds:0x14802fed
  4042f4:	or     BYTE PTR [eax+esi*4+0x76bc8bd8],cl
  4042fb:	cmc    
  4042fc:	imul   ebx,DWORD PTR [ecx-0x73],0xffbfb85a
  404303:	add    BYTE PTR ds:0xe1b3e0bc,al
  404309:	jecxz  0x404303
  40430b:	out    dx,eax
  40430c:	push   ebx
  40430d:	cmp    BYTE PTR [edx],dl
  40430f:	jle    0x404362
  404311:	es out 0x3f,eax
  404314:	fwait
  404315:	mov    DWORD PTR [edx-0x6c5ccf66],0x4bd7c8d
  40431f:	adc    dl,dl
  404321:	cdq    
  404322:	rcr    BYTE PTR [ebx+0x54],0xb6
  404326:	mov    ds:0x1ed456a4,al
  40432b:	pop    edi
  40432c:	sbb    ebp,esi
  40432e:	jb     0x40431b
  404330:	aas    
  404331:	loopne 0x404369
  404333:	sbb    BYTE PTR [ecx+0xb699f5b],dl
  404339:	pusha  
  40433a:	xor    BYTE PTR [edx+0x32],bh
  40433d:	jmp    0x2155053c
  404342:	or     eax,0x2e03f533
  404347:	(bad)  [edx]
  404349:	(bad)  
  40434a:	loopne 0x4042f3
  40434c:	shl    BYTE PTR [ebp-0x37],cl
  40434f:	gs stos BYTE PTR es:[edi],al
  404351:	mov    edx,0xb35893b9
  404356:	test   al,0xf6
  404358:	and    ecx,DWORD PTR [edx]
  40435a:	mov    esp,0xe27d35c4
  40435f:	cmp    eax,0x39d5d37d
  404364:	cmp    BYTE PTR [edi],dh
  404366:	sbb    eax,0x430157e2
  40436b:	adc    BYTE PTR [edx],dl
  40436d:	jg     0x404309
  40436f:	dec    ebx
  404370:	fcomp  QWORD PTR [ebx]
  404372:	lock jmp 0x404310
  404375:	std    
  404376:	fdiv   QWORD PTR [eax]
  404378:	das    
  404379:	add    eax,0xffffff8d
  40437c:	pushf  
  40437d:	push   cs
  40437e:	js     0x4043ef
  404380:	push   cs
  404381:	lock mov ch,0x8d
  404384:	out    dx,al
  404385:	lea    esp,[edx+0x450d5667]
  40438b:	and    BYTE PTR [ebx+edi*8],ah
  40438e:	data16 adc al,0xee
  404391:	xor    ebx,DWORD PTR [ecx]
  404393:	js     0x404406
  404395:	cmp    eax,esp
  404397:	daa    
  404398:	xchg   edx,eax
  404399:	cld    
  40439a:	int    0x15
  40439c:	popa   
  40439d:	fs mov cl,0x5a
  4043a0:	xor    eax,0x6ce03ee8
  4043a5:	sbb    ch,BYTE PTR [ebx]
  4043a7:	lods   al,BYTE PTR ds:[esi]
  4043a8:	loopne 0x4043e1
  4043aa:	or     eax,0xa6fc608c
  4043af:	scas   eax,DWORD PTR es:[edi]
  4043b0:	dec    esi
  4043b1:	push   esi
  4043b2:	shr    dl,cl
  4043b4:	jae    0x404341
  4043b6:	inc    ebx
  4043b7:	xchg   ecx,ebp
  4043b9:	dec    ebp
  4043ba:	sbb    BYTE PTR fs:[ebp-0x4],ah
  4043be:	retf   0x39dd
  4043c1:	and    al,dh
  4043c3:	inc    edi
  4043c4:	mov    dl,0x9f
  4043c6:	or     eax,edx
  4043c8:	imul   esi,DWORD PTR [esi],0x3c
  4043cb:	sbb    dh,BYTE PTR [ecx]
  4043cd:	les    ebp,FWORD PTR [ebx-0x7f34c92a]
  4043d3:	xlat   BYTE PTR ds:[ebx]
  4043d4:	sub    al,0xa2
  4043d6:	ffreep st(1)
  4043d8:	fistp  DWORD PTR [eax-0x17f231a5]
  4043de:	pop    ebx
  4043df:	imul   esi,DWORD PTR [ecx+0x183eed97],0xffffffc8
  4043e6:	cdq    
  4043e7:	jmp    0x1db82fe0
  4043ec:	daa    
  4043ed:	in     eax,dx
  4043ee:	jnp    0x4043a1
  4043f0:	or     al,0x35
  4043f2:	lock jp 0x4043e6
  4043f5:	pop    esi
  4043f6:	cwde   
  4043f7:	cmp    bh,BYTE PTR [eax+0x18]
  4043fa:	sub    al,0xe3
  4043fc:	fistp  WORD PTR [edi-0x49f10be5]
  404402:	mov    edx,0x34944161
  404407:	in     al,dx
  404408:	add    BYTE PTR [ebx-0x6c9da3ce],dl
  40440e:	inc    ecx
  40440f:	and    bl,dl
  404411:	bound  ecx,QWORD PTR [edi+0x76016d70]
  404417:	jns    0x4043a1
  404419:	add    al,0xec
  40441b:	dec    esi
  40441c:	push   edi
  40441d:	mov    esp,0x994001c2
  404422:	icebp  
  404423:	pop    eax
  404424:	or     al,0x7f
  404426:	stos   DWORD PTR es:[edi],eax
  404427:	cmp    ecx,eax
  404429:	sbb    esi,DWORD PTR [ebx]
  40442b:	mov    eax,0xdbac54d7
  404430:	jne    0x40447b
  404432:	push   eax
  404433:	repnz add DWORD PTR [ecx+0x31],esp
  404437:	loope  0x4044a6
  404439:	adc    esp,DWORD PTR [eax+0x232b149b]
  40443f:	test   eax,0x70c4a45d
  404444:	mov    edx,0x3b82e1e9
  404449:	mov    ch,0x61
  40444b:	int    0x86
  40444d:	add    dh,BYTE PTR [edi+0x18d60093]
  404453:	scas   al,BYTE PTR es:[edi]
  404454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404455:	(bad)  
  404456:	mov    esi,0x3de9c15e
  40445b:	xchg   ecx,eax
  40445c:	arpl   WORD PTR [ebx-0x3a52039b],sp
  404462:	out    dx,eax
  404463:	mov    edi,0xc28cded6
  404468:	push   esp
  404469:	addr16 ret 
  40446b:	sub    BYTE PTR [ebp+ecx*2-0x4484834a],cl
  404472:	push   ecx
  404473:	inc    edi
  404474:	pop    esi
  404475:	inc    esi
  404476:	call   0x8f20:0x5869b282
  40447d:	lods   al,BYTE PTR ds:[esi]
  40447e:	xor    dl,BYTE PTR [edi+0x64156052]
  404484:	repz int3 
  404486:	pop    edi
  404487:	cmp    al,0x0
  404489:	mov    ds:0xa5376b18,al
  40448e:	data16 cmp dh,BYTE PTR [edx+0xfc6277]
  404495:	arpl   WORD PTR gs:[ebx-0x51],dx
  404499:	cwde   
  40449a:	mov    ecx,0x8003efcd
  40449f:	xchg   BYTE PTR [eax+0x5af39c01],ah
  4044a5:	jb     0x40442d
  4044a7:	addr16 mov dh,0xff
  4044aa:	mov    fs,ecx
  4044ac:	inc    esi
  4044ad:	in     eax,0x20
  4044af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044b0:	sub    BYTE PTR [eax+0x3751e972],dl
  4044b6:	push   esi
  4044b7:	jl     0x4044c2
  4044b9:	fs (bad) 
  4044bc:	test   DWORD PTR [esi],0x4ff57419
  4044c2:	cmp    esi,0xffffff9f
  4044c5:	push   ebp
  4044c6:	pop    es
  4044c7:	out    dx,al
  4044c8:	iret   
  4044c9:	dec    edx
  4044ca:	mov    ebx,0x431dc5d4
  4044cf:	(bad)  
  4044d0:	pusha  
  4044d1:	dec    eax
  4044d2:	mov    dh,0x6c
  4044d4:	xor    ebp,ebp
  4044d6:	dec    eax
  4044d7:	mov    ds:0xd8077837,eax
  4044dc:	stc    
  4044dd:	xor    ch,BYTE PTR [edi+edi*2-0x5b]
  4044e1:	add    eax,0x5e032f4a
  4044e6:	or     cl,BYTE PTR [ebx]
  4044e8:	cdq    
  4044e9:	inc    ebx
  4044ea:	push   cx
  4044ec:	sbb    al,BYTE PTR [ebx+0x664a27e4]
  4044f2:	les    ebx,FWORD PTR [edx+0xaf3b120]
  4044f8:	or     dl,dl
  4044fa:	mov    al,ah
  4044fc:	jo     0x404507
  4044fe:	out    dx,al
  4044ff:	dec    esp
  404500:	les    esp,FWORD PTR [ecx-0x61]
  404503:	int3   
  404504:	lods   eax,DWORD PTR ds:[esi]
  404505:	jmp    0x4feb0162
  40450a:	(bad)
  40450e:	out    0x8,eax
  404510:	iret   
  404511:	dec    ebx
  404512:	loop   0x404574
  404514:	das    
  404515:	pop    edi
  404516:	sub    al,0x5d
  404518:	push   ss
  404519:	ror    ch,cl
  40451b:	adc    al,BYTE PTR [eax+edx*1]
  40451e:	dec    edx
  40451f:	or     BYTE PTR [edi+eax*4-0x23e5851b],ah
  404526:	js     0x404594
  404528:	clc    
  404529:	iret   
  40452a:	add    eax,0x6b7ee6f8
  40452f:	sti    
  404530:	mov    ah,BYTE PTR [esi-0x4f]
  404533:	lock fstp QWORD PTR [eax-0x443ac20]
  40453a:	inc    edx
  40453b:	loop   0x4044db
  40453d:	push   0x80c49ece
  404542:	xor    al,0x38
  404544:	jmp    0x4045a6
  404546:	inc    ebx
  404547:	cs pop eax
  404549:	xchg   esi,eax
  40454a:	repnz std 
  40454c:	push   cs
  40454d:	loop   0x40452d
  40454f:	fadd   DWORD PTR [eax]
  404551:	test   eax,0x71028d64
  404556:	adc    ecx,DWORD PTR [eax-0x15face55]
  40455c:	xor    al,dh
  40455e:	lods   eax,DWORD PTR ds:[esi]
  40455f:	sbb    eax,0x2472e28d
  404564:	sub    eax,0x2c0d189c
  404569:	(bad)  
  40456a:	or     al,0x92
  40456c:	xchg   ch,al
  40456e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456f:	add    esp,DWORD PTR [edx-0x42]
  404572:	das    
  404573:	mov    edi,DWORD PTR [esi]
  404575:	and    BYTE PTR [edx-0x23de7b1],0xa9
  40457c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40457d:	shr    BYTE PTR [esi],0x40
  404580:	scas   eax,DWORD PTR es:[edi]
  404581:	jmp    0x40452d
  404583:	test   DWORD PTR [edx],ebp
  404585:	push   ebx
  404586:	rol    esi,cl
  404588:	xor    DWORD PTR [ebx+edx*1],esi
  40458b:	jp     0x40457d
  40458d:	icebp  
  40458e:	fist   DWORD PTR [ebx]
  404590:	inc    ecx
  404591:	xchg   BYTE PTR [ecx],bh
  404593:	sub    eax,0xe7e6c9bd
  404598:	ror    BYTE PTR [ebp+0x14],1
  40459b:	push   eax
  40459c:	sti    
  40459d:	xchg   esp,eax
  40459e:	sbb    esp,edx
  4045a0:	idiv   esp
  4045a2:	data16 or cl,BYTE PTR [esi+0x25]
  4045a6:	test   DWORD PTR [ebp+ebp*4+0x7a],ebp
  4045aa:	pusha  
  4045ab:	inc    edi
  4045ac:	mov    bh,0x11
  4045ae:	mov    eax,ds:0x8ba09c76
  4045b3:	mov    ah,0x6
  4045b5:	add    BYTE PTR [edx+0x6a],cl
  4045b8:	add    BYTE PTR [edi],ah
  4045ba:	fadd   DWORD PTR [esi-0x6c97ecc1]
  4045c0:	mov    eax,ds:0x8284ac70
  4045c5:	dec    ebp
  4045c6:	cmc    
  4045c7:	das    
  4045c8:	inc    esi
  4045c9:	sbb    ebp,DWORD PTR [ebx-0x2b]
  4045cc:	pop    esp
  4045cd:	jp     0x404624
  4045cf:	adc    eax,0x2a77df21
  4045d4:	lea    ebp,[edi-0x37033e2a]
  4045da:	outs   dx,BYTE PTR ds:[esi]
  4045db:	in     eax,dx
  4045dc:	test   BYTE PTR [edi-0x2c],ch
  4045df:	scas   al,BYTE PTR es:[edi]
  4045e0:	mov    esi,0x8c5be9e8
  4045e5:	cdq    
  4045e6:	in     eax,dx
  4045e7:	add    bl,BYTE PTR [ebp-0x49]
  4045ea:	xchg   esp,esp
  4045ec:	enter  0x14b,0xec
  4045f0:	lea    esp,[edi-0x3a]
  4045f3:	call   DWORD PTR [eax+0x659b567c]
  4045fa:	(bad)  
  4045fc:	test   ecx,esi
  4045fe:	push   edx
  4045ff:	and    ch,BYTE PTR [edx]
  404601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404602:	or     bl,dl
  404604:	popa   
  404605:	xor    al,0xc1
  404607:	cli    
  404608:	mov    bh,BYTE PTR [edx]
  40460a:	dec    eax
  40460b:	stos   BYTE PTR es:[edi],al
  40460c:	in     eax,dx
  40460d:	vpminsw xmm2,xmm6,xmm2
  404611:	add    bh,BYTE PTR [ebx]
  404613:	or     esp,ecx
  404615:	pop    ebx
  404616:	xor    eax,0x3be37e3e
  40461b:	ds sub dh,bl
  40461e:	(bad)  
  40461f:	jge    0x4045df
  404621:	nop
  404622:	mov    bp,0x4358
  404626:	jg     0x404669
  404628:	fistp  WORD PTR [ebx-0x13]
  40462b:	dec    DWORD PTR [edx]
  40462d:	outs   dx,BYTE PTR ds:[esi]
  40462e:	icebp  
  40462f:	mov    ch,0xcb
  404631:	pslld  mm7,QWORD PTR [eax+0x121c42aa]
  404638:	xor    ebp,DWORD PTR [ecx-0x22cbae9f]
  40463e:	xor    eax,0x6c06be18
  404643:	popa   
  404644:	icebp  
  404645:	lods   eax,DWORD PTR ds:[esi]
  404646:	adc    BYTE PTR [edi],al
  404648:	inc    esi
  404649:	int    0xcb
  40464b:	adc    eax,0x6ea58c0f
  404650:	add    DWORD PTR [esi+eiz*4+0x45],eax
  404654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404655:	mov    bh,0xbf
  404657:	adc    BYTE PTR [ecx+0x64],0xc5
  40465b:	xor    eax,0xcba17bc5
  404660:	or     eax,0xf81fc394
  404665:	les    ecx,FWORD PTR [edi+eax*8]
  404668:	fisubr WORD PTR [ebx+0x427c793d]
  40466e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466f:	in     al,0x61
  404671:	mov    eax,ds:0x75f31891
  404676:	sub    BYTE PTR cs:[esi],dh
  404679:	cdq    
  40467a:	mov    bl,0x59
  40467c:	sbb    al,0xda
  40467e:	fbld   TBYTE PTR [ecx+0x75897e27]
  404684:	sbb    al,0x6
  404686:	into   
  404687:	jmp    0xa440374e
  40468c:	and    bh,BYTE PTR [ebp-0x4df56c5]
  404692:	icebp  
  404693:	push   ebp
  404694:	hlt    
  404695:	rcr    DWORD PTR [ebx+0x7],0x1d
  404699:	pop    ecx
  40469a:	adc    ebx,DWORD PTR [ebx]
  40469c:	push   esi
  40469d:	test   eax,0x6784e8f9
  4046a2:	pop    ebp
  4046a3:	xor    al,0xdc
  4046a5:	outs   dx,BYTE PTR ds:[esi]
  4046a6:	dec    ebx
  4046a7:	push   DWORD PTR [esi]
  4046a9:	and    dl,BYTE PTR [ebp+0x1a]
  4046ac:	jb     0x40463b
  4046ae:	adc    eax,0x5699abbc
  4046b3:	or     al,0xb6
  4046b5:	pop    eax
  4046b6:	(bad)  
  4046b7:	clc    
  4046b8:	leave  
  4046b9:	sub    al,0x5b
  4046bb:	or     esi,DWORD PTR [edi-0x22]
  4046be:	bnd ret 
  4046c0:	dec    edx
  4046c1:	add    al,0x8d
  4046c3:	xchg   esi,eax
  4046c4:	mov    cl,0x2c
  4046c6:	fs repnz xchg edx,eax
  4046c9:	fistp  WORD PTR [edi+0x78481d0b]
  4046cf:	repnz cmp esi,ecx
  4046d2:	loope  0x4046b6
  4046d4:	pop    ebx
  4046d5:	in     al,dx
  4046d6:	mov    es,WORD PTR [eax]
  4046d8:	mov    ah,cl
  4046da:	dec    esi
  4046db:	in     eax,dx
  4046dc:	push   edx
  4046dd:	jmp    0x56132f7d
  4046e2:	push   0xffffff9f
  4046e4:	add    al,0x39
  4046e6:	xchg   ebp,eax
  4046e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e8:	jp     0x404726
  4046ea:	jg     0x404731
  4046ec:	(bad)  
  4046ee:	loopne 0x404753
  4046f0:	outs   dx,DWORD PTR ds:[esi]
  4046f1:	inc    ebx
  4046f2:	mov    esp,eax
  4046f4:	mov    ds:0x1eef4056,eax
  4046f9:	xchg   esp,eax
  4046fa:	sbb    BYTE PTR [ebp+0x13ba487f],dh
  404700:	fistp  WORD PTR [ebx-0x2f]
  404703:	sbb    al,0x7c
  404705:	adc    DWORD PTR [ebx+eax*4+0x3d],0xea421c1c
  40470d:	and    esi,DWORD PTR [esi]
  40470f:	scas   al,BYTE PTR es:[edi]
  404710:	aad    0x5d
  404712:	cmp    al,0x7e
  404714:	cmc    
  404715:	xchg   ecx,eax
  404716:	es sti 
  404718:	add    al,0xe3
  40471a:	adc    dl,BYTE PTR [edx+0x5c]
  40471d:	mov    al,0x99
  40471f:	jp     0x4046a5
  404721:	push   edx
  404722:	icebp  
  404723:	push   ds
  404724:	cwde   
  404725:	sahf   
  404726:	or     BYTE PTR [edi+0x20daa818],dl
  40472c:	fisubr WORD PTR [esi-0x8]
  40472f:	fwait
  404730:	pop    ebx
  404731:	adc    esi,edi
  404733:	call   ecx
  404735:	add    al,0xce
  404737:	inc    eax
  404738:	sbb    al,ch
  40473a:	iret   
  40473b:	jge    0x4047ae
  40473d:	sahf   
  40473e:	mov    ebx,0xfb63c059
  404743:	imul   edx,DWORD PTR [eax-0x143bc769],0x2
  40474a:	mov    DWORD PTR [ecx],edi
  40474c:	xchg   esp,eax
  40474d:	retf   
  40474e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40474f:	and    al,0xd5
  404751:	enter  0xeadb,0x24
  404755:	outs   dx,BYTE PTR ds:[esi]
  404756:	nop
  404757:	and    esi,DWORD PTR ss:[eax]
  40475a:	leave  
  40475b:	adc    eax,0x4a6ac9a5
  404760:	pop    esi
  404761:	mov    ah,0xaf
  404763:	sbb    dh,BYTE PTR [edx+edi*4+0x5f9c5073]
  40476a:	shr    BYTE PTR [ebp-0x1debb695],1
  404770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404771:	xor    ecx,edi
  404773:	fisttp DWORD PTR [ecx+edi*2+0x46]
  404777:	rcl    BYTE PTR ds:0xf36e8534,1
  40477d:	sbb    eax,0x70b97fbb
  404782:	mov    dh,0xb
  404784:	mov    edi,0x7a914f5f
  404789:	xchg   esp,eax
  40478a:	mov    ds:0x3d033f82,eax
  40478f:	pop    ebp
  404790:	mov    al,ah
  404792:	sub    al,0xad
  404794:	adc    DWORD PTR [edi+0x78],0x4a
  404798:	ret    
  404799:	cmc    
  40479a:	in     eax,dx
  40479b:	fidivr WORD PTR [esi]
  40479d:	xor    ah,BYTE PTR [edi]
  40479f:	fadd   st,st(4)
  4047a1:	push   edx
  4047a2:	lahf   
  4047a3:	mov    eax,0x84ab0c0
  4047a8:	out    0xeb,eax
  4047aa:	adc    al,0x95
  4047ac:	call   DWORD PTR ds:0x60a883d5
  4047b2:	jmp    0x831fadf6
  4047b7:	mov    dl,0xf3
  4047b9:	xor    al,0x7d
  4047bb:	push   ss
  4047bc:	imul   ebx,ebp,0xf38054f6
  4047c2:	dec    esi
  4047c3:	mov    ss:0x38f0486f,eax
  4047c9:	enter  0x9d35,0x50
  4047cd:	retf   
  4047ce:	xchg   DWORD PTR [ecx+0x5f],ecx
  4047d1:	inc    edx
  4047d2:	pusha  
  4047d3:	add    al,0xcb
  4047d5:	popf   
  4047d6:	cs (bad) 
  4047d8:	cmp    BYTE PTR [ecx-0x45941bd3],ch
  4047de:	and    edx,DWORD PTR [eax+0x5a]
  4047e1:	mov    esi,0xaab54d82
  4047e6:	mov    ds:0xeb4d27dd,eax
  4047eb:	lahf   
  4047ec:	std    
  4047ed:	mov    bh,0x11
  4047ef:	push   eax
  4047f0:	jb     0x404824
  4047f2:	into   
  4047f3:	(bad)  
  4047f4:	(bad)  
  4047f5:	daa    
  4047f6:	ss call 0x7c828206
  4047fc:	xlat   BYTE PTR ds:[ebx]
  4047fd:	jno    0x40482d
  4047ff:	es jb  0x4047f5
  404802:	cli    
  404803:	fwait
  404804:	push   ds
  404805:	bnd jle 0x4047a9
  404808:	xchg   ebx,eax
  404809:	mov    DWORD PTR [esi],ebp
  40480b:	imul   esp,DWORD PTR [edx+ebx*8],0x62
  40480f:	popa   
  404810:	jmp    0x165aef26
  404815:	cmp    eax,0x18935ca
  40481a:	sub    BYTE PTR [edx+ebx*4+0x3978f5aa],0xb3
  404822:	mov    esi,0x60322f16
  404827:	xchg   esi,eax
  404828:	clc    
  404829:	pushf  
  40482a:	outs   dx,DWORD PTR ds:[esi]
  40482b:	mov    ah,0xcc
  40482d:	jecxz  0x404810
  40482f:	test   al,0xa7
  404831:	outs   dx,DWORD PTR ds:[esi]
  404832:	xchg   esp,eax
  404833:	sar    ah,0xd0
  404836:	clc    
  404837:	sub    BYTE PTR [edx+edi*4+0x1fb462a7],dl
  40483e:	mov    cs,WORD PTR [edx+0x69]
  404841:	and    al,0xdb
  404843:	push   esp
  404844:	adc    BYTE PTR [ecx-0x12],dl
  404847:	xor    bl,ch
  404849:	cs in  eax,dx
  40484b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40484c:	add    esp,DWORD PTR [ecx]
  40484e:	hlt    
  40484f:	sbb    eax,DWORD PTR [edi+edx*4]
  404852:	jmp    0x9142ea34
  404857:	shl    DWORD PTR [eax-0x34],cl
  40485a:	les    esp,FWORD PTR ds:0x7a895bf
  404860:	cmp    al,0x30
  404862:	fnstcw WORD PTR [eax+0x4c]
  404865:	test   eax,0x3fccd5f6
  40486a:	xor    BYTE PTR [ebx+0x20],0x3
  40486e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40486f:	les    edi,FWORD PTR [eax]
  404871:	mul    bl
  404873:	jg     0x404838
  404875:	aaa    
  404876:	sbb    BYTE PTR [edi+0x33c5c48],ah
  40487c:	pop    esi
  40487d:	push   esi
  40487e:	sbb    DWORD PTR [edx-0x3159e6b9],esi
  404884:	bound  esp,QWORD PTR [esi+esi*1+0x54]
  404888:	fcomp  QWORD PTR [ecx]
  40488a:	test   eax,0x15edae92
  40488f:	ds xchg ecx,eax
  404891:	enter  0x5c0b,0xd0
  404895:	neg    DWORD PTR [ecx-0x52]
  404898:	add    al,BYTE PTR [ecx+0x1c]
  40489b:	call   0x2f48:0x1804db93
  4048a2:	loopne 0x404877
  4048a4:	pop    edi
  4048a5:	retf   
  4048a6:	pushf  
  4048a7:	lods   eax,DWORD PTR ds:[esi]
  4048a8:	mov    esi,0x34e0b2d1
  4048ad:	xor    al,0x31
  4048af:	sbb    ah,BYTE PTR [ebp-0x53]
  4048b2:	iret   
  4048b3:	mov    ch,0x60
  4048b5:	shl    dl,cl
  4048b7:	das    
  4048b8:	(bad)  
  4048b9:	mov    dl,0x86
  4048bb:	int3   
  4048bc:	dec    esi
  4048bd:	bound  ebp,QWORD PTR ds:0x7a4585c4
  4048c3:	mov    al,ds:0xe02a38a1
  4048c8:	or     al,0xde
  4048ca:	in     al,dx
  4048cb:	das    
  4048cc:	dec    edx
  4048cd:	jl     0x40488c
  4048cf:	push   ebp
  4048d0:	push   ds
  4048d1:	sub    DWORD PTR [eax],edx
  4048d3:	add    esp,DWORD PTR [edx-0x79ab08ee]
  4048d9:	xchg   ecx,eax
  4048da:	sbb    ebp,ebp
  4048dc:	mov    bl,0xda
  4048de:	test   DWORD PTR [ebp+0x6143e407],0xb4efd43c
  4048e8:	jmp    0x404965
  4048ea:	push   es
  4048eb:	cmc    
  4048ec:	dec    ebp
  4048ed:	inc    eax
  4048ee:	sbb    eax,0x31168508
  4048f3:	adc    eax,0xd22e3179
  4048f8:	in     al,dx
  4048f9:	sub    al,0x55
  4048fb:	jmp    0x2319b187
  404900:	and    eax,0x8036e141
  404905:	jmp    0x4048c5
  404907:	js     0x404967
  404909:	loop   0x4048c2
  40490b:	or     ah,dl
  40490d:	mov    ds:0xe8677083,al
  404912:	xor    al,0x28
  404914:	je     0x404933
  404916:	pop    esi
  404917:	add    ch,dh
  404919:	xlat   BYTE PTR ds:[ebx]
  40491a:	cmc    
  40491b:	ficomp WORD PTR [edi-0x6ad151d0]
  404921:	push   ecx
  404922:	inc    edx
  404923:	pushf  
  404924:	xchg   edx,eax
  404925:	ins    DWORD PTR es:[edi],dx
  404926:	inc    esi
  404927:	vmwrite esi,DWORD PTR [esi]
  40492a:	rcl    DWORD PTR [edi+0x395ad8d3],1
  404930:	aas    
  404931:	inc    ebx
  404932:	or     eax,0xbd101661
  404937:	xor    DWORD PTR [ebx+0x26],ecx
  40493a:	sbb    al,0x58
  40493c:	and    eax,0x8023f078
  404941:	cmp    edx,esp
  404943:	ror    DWORD PTR [eax+0x11b0f3eb],cl
  404949:	call   0xd2b8a851
  40494e:	sbb    BYTE PTR [eax-0x16f1b0a1],bh
  404954:	loop   0x404902
  404956:	fisubr DWORD PTR [esi-0x8c00ef3]
  40495c:	mov    bl,0xb
  40495e:	xchg   edi,eax
  40495f:	shl    BYTE PTR [edi+0x45bc4d5c],cl
  404965:	ja     0x4049db
  404967:	fwait
  404968:	mov    cl,0xe3
  40496a:	pextrw ebx,mm7,0xb6
  40496e:	cmp    ecx,ecx
  404970:	nop
  404971:	adc    edx,DWORD PTR [ebx-0x218b5d25]
  404977:	les    esi,FWORD PTR [ecx+0xc]
  40497a:	arpl   bp,bx
  40497c:	inc    esi
  40497d:	outs   dx,BYTE PTR ds:[esi]
  40497e:	gs mov dh,0x7e
  404981:	dec    edi
  404982:	(bad)  
  404983:	pop    ecx
  404984:	(bad)  
  404985:	jle    0x404977
  404987:	pusha  
  404988:	mov    ds:0x1cec9d79,eax
  40498d:	repnz bound ebp,QWORD PTR [ecx+0x1c]
  404991:	mov    bh,dh
  404993:	push   0x562cd92f
  404998:	inc    esi
  404999:	mov    bh,0xc6
  40499b:	add    ebx,DWORD PTR [esi-0x15]
  40499e:	ret    
  40499f:	add    al,0x29
  4049a1:	mov    ss,WORD PTR [ebp+edx*1-0x64634f6b]
  4049a8:	fs fs dec ebx
  4049ab:	sub    al,0x21
  4049ad:	pop    esp
  4049ae:	mov    dl,0xed
  4049b0:	cmp    ah,bl
  4049b2:	and    BYTE PTR [eax],dh
  4049b4:	jmp    0x2636:0x467a508b
  4049bb:	mov    ds:0xbc698ce,al
  4049c0:	cmp    DWORD PTR [edx+0x6255237e],0xffffff8e
  4049c7:	mov    ecx,0xfb603695
  4049cc:	sub    BYTE PTR [eiz*2-0x6473fef8],bh
  4049d3:	sbb    edx,DWORD PTR [ebp+edi*1-0x18]
  4049d7:	call   0xcb09:0x31db1c2d
  4049de:	test   eax,0xf596d7cc
  4049e3:	cdq    
  4049e4:	addr16 pop ss
  4049e6:	test   DWORD PTR [ebx-0x6e],ebp
  4049e9:	sbb    al,0xd5
  4049eb:	xchg   edx,eax
  4049ec:	retf   
  4049ed:	jns    0x40499d
  4049ef:	loope  0x4049ff
  4049f1:	xchg   ecx,eax
  4049f2:	(bad)  
  4049f3:	ds iret 
  4049f5:	add    al,0x60
  4049f7:	ds sbb dl,bl
  4049fa:	imul   edi,DWORD PTR [edi],0xffffffb5
  4049fd:	cmp    ebp,DWORD PTR [edi+0x628e25c6]
  404a03:	pop    edi
  404a04:	fidiv  DWORD PTR [ebx]
  404a06:	add    eax,DWORD PTR [ebp+ecx*2+0x40]
  404a0a:	(bad)  
  404a0b:	outs   dx,BYTE PTR ds:[esi]
  404a0c:	out    dx,eax
  404a0d:	xor    dh,BYTE PTR [ecx-0x29042373]
  404a13:	stos   DWORD PTR es:[edi],eax
  404a14:	xchg   esp,eax
  404a15:	clc    
  404a16:	jns    0x404a2e
  404a18:	lods   al,BYTE PTR ds:[esi]
  404a19:	shl    BYTE PTR [ecx+0x78],1
  404a1c:	ret    
  404a1d:	cmp    BYTE PTR [esi],bl
  404a1f:	gs mov ebp,0x42d98d4c
  404a25:	(bad)  
  404a26:	and    al,0x5e
  404a28:	add    dh,BYTE PTR ds:0x54d6586c
  404a2e:	(bad)  
  404a2f:	enter  0xbbbd,0x7
  404a33:	xchg   bh,al
  404a35:	adc    bh,0xdc
  404a38:	pop    eax
  404a39:	sub    ch,bh
  404a3b:	ds mov ecx,0x8622841a
  404a41:	nop
  404a42:	aaa    
  404a43:	stos   BYTE PTR es:[edi],al
  404a44:	push   edi
  404a45:	pushf  
  404a46:	aad    0xa2
  404a48:	clc    
  404a49:	scas   eax,DWORD PTR es:[edi]
  404a4a:	arpl   WORD PTR [eax+0x1e],si
  404a4d:	dec    edi
  404a4e:	mov    ebx,0x45f12e6b
  404a53:	mov    esp,0x46927045
  404a58:	sbb    BYTE PTR [edx-0x26],dh
  404a5b:	adc    al,0x6d
  404a5d:	xchg   ebp,eax
  404a5e:	loopne 0x4049f3
  404a60:	mov    al,0x9b
  404a62:	push   0xd98039c0
  404a67:	outs   dx,DWORD PTR ds:[esi]
  404a68:	mov    ds:0x97c8ccc9,al
  404a6d:	jmp    0xdee8:0xe9105957
  404a74:	xor    DWORD PTR [edx+0x7e],edx
  404a77:	push   cs
  404a78:	lahf   
  404a79:	imul   ecx,DWORD PTR [edi-0x23],0xac660955
  404a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a81:	cld    
  404a82:	jp     0x404a4c
  404a84:	in     al,0x14
  404a86:	adc    eax,esp
  404a88:	adc    eax,0xd08fd108
  404a8d:	out    dx,eax
  404a8e:	arpl   WORD PTR fs:[ecx-0x7ce5fa7d],bp
  404a95:	aam    0x5f
  404a97:	imul   esi,DWORD PTR [ecx],0xffffff9b
  404a9a:	add    al,ah
  404a9c:	aas    
  404a9d:	sub    eax,0x30292518
  404aa2:	mov    DWORD PTR [ecx],edi
  404aa4:	mov    bh,0x60
  404aa6:	sub    BYTE PTR [ecx+0x172589c9],0xd8
  404aad:	fld    st(4)
  404aaf:	(bad)  
  404ab0:	adc    eax,0xb337878
  404ab5:	jnp    0x404a7e
  404ab7:	sbb    BYTE PTR [ebx+esi*2-0x3ee482a1],ah
  404abe:	ds std 
  404ac0:	inc    ebx
  404ac1:	xchg   esi,eax
  404ac2:	inc    edx
  404ac3:	and    bh,dh
  404ac5:	ror    BYTE PTR [ebx+eax*8-0x53],0x7
  404aca:	das    
  404acb:	out    dx,eax
  404acc:	adc    ebp,DWORD PTR [eax-0x2e35ebc9]
  404ad2:	shl    DWORD PTR [edi-0x25],cl
  404ad5:	and    eax,0x639471a0
  404ada:	scas   eax,DWORD PTR es:[edi]
  404adb:	sbb    eax,0x6303a047
  404ae0:	arpl   WORD PTR [edi+edi*2],di
  404ae3:	aas    
  404ae4:	jns    0x404ac9
  404ae6:	adc    ch,BYTE PTR [edx]
  404ae8:	test   DWORD PTR [edx],eax
  404aea:	test   al,0x9e
  404aec:	lods   eax,DWORD PTR ds:[esi]
  404aed:	into   
  404aee:	xor    esi,DWORD PTR [eax]
  404af0:	frstor [esp+edi*1]
  404af3:	pushf  
  404af4:	repnz cmp DWORD PTR [ebx],esp
  404af7:	aam    0xed
  404af9:	push   cs
  404afa:	or     al,0xdb
  404afc:	adc    edi,DWORD PTR [ebp+0x52bb2e75]
  404b02:	sbb    DWORD PTR [eax+0x5001705c],0x7b2e3e6d
  404b0c:	sbb    eax,0xbdc39df5
  404b11:	jo     0x404b18
  404b13:	cmc    
  404b14:	call   0xd00d:0x7d119170
  404b1b:	cdq    
  404b1c:	mov    edx,0xee687447
  404b21:	xchg   esp,eax
  404b22:	ja     0x404b13
  404b24:	icebp  
  404b25:	(bad)  
  404b26:	jne    0x404abf
  404b28:	cld    
  404b29:	aam    0xb8
  404b2b:	test   dl,cl
  404b2d:	lods   eax,DWORD PTR ds:[esi]
  404b2e:	dec    esi
  404b2f:	push   eax
  404b30:	es dec edi
  404b32:	(bad)  
  404b33:	sub    cl,dl
  404b35:	mov    bl,0x65
  404b37:	xchg   ecx,eax
  404b38:	jo     0x404b8e
  404b3a:	add    eax,0x586a3ef9
  404b3f:	pop    ebp
  404b40:	pusha  
  404b41:	jge    0x404b9e
  404b43:	dec    DWORD PTR [esi+0x5fded738]
  404b49:	adc    ebp,eax
  404b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4c:	sbb    DWORD PTR [esi],ebx
  404b4e:	fs retf 0x5c3d
  404b52:	jae    0x404bb7
  404b54:	mov    ebx,0xf77bc922
  404b59:	iret   
  404b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b5b:	cwde   
  404b5c:	jb     0x404bc6
  404b5e:	mov    ebp,0x9aa9e7d0
  404b63:	mov    DWORD PTR [ebx+0x1ed2c3b2],edx
  404b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6a:	sbb    eax,edi
  404b6c:	push   esp
  404b6d:	jb     0x404b88
  404b6f:	and    ebx,ebx
  404b71:	mov    ebp,0x6744ca98
  404b76:	mov    edx,0x62470f14
  404b7b:	push   ds
  404b7c:	pop    eax
  404b7d:	mov    eax,0xc33fe6b8
  404b82:	mov    eax,ds:0x3d12c566
  404b87:	adc    ecx,ecx
  404b89:	pop    ecx
  404b8a:	mov    bh,0xcb
  404b8c:	les    ecx,FWORD PTR [edi+0x3845cc61]
  404b92:	call   0xff0750f
  404b97:	test   eax,0xa15f49de
  404b9c:	jb     0x404c12
  404b9e:	mov    ecx,0x1387fce6
  404ba3:	sbb    al,0x37
  404ba5:	xor    ebp,esp
  404ba7:	and    esi,DWORD PTR [esi-0x63]
  404baa:	mov    ecx,0x58a4337d
  404bb0:	jbe    0x404bec
  404bb2:	test   eax,edi
  404bb4:	lock call 0x54b790d3
  404bba:	mov    ebx,DWORD PTR [edi]
  404bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbd:	sbb    ah,BYTE PTR [ebx]
  404bbf:	test   al,0xe8
  404bc1:	xchg   edx,eax
  404bc2:	add    dl,BYTE PTR [edx+ebx*4-0x428181bd]
  404bc9:	or     al,ch
  404bcb:	or     ch,dl
  404bcd:	rol    bh,0x40
  404bd0:	cmp    ebx,edx
  404bd2:	ret    0xc99c
  404bd5:	iret   
  404bd6:	jecxz  0x404bbf
  404bd8:	inc    edi
  404bd9:	lods   eax,DWORD PTR ds:[esi]
  404bda:	xchg   ecx,eax
  404bdb:	xor    dl,cl
  404bdd:	addr16 inc edi
  404bdf:	ja     0x404b7d
  404be1:	fiadd  WORD PTR [ecx]
  404be3:	dec    eax
  404be4:	adc    bl,bh
  404be6:	add    al,0x31
  404be8:	mov    edx,0x777b03fc
  404bed:	aam    0xdc
  404bef:	mov    esp,0xd9f598dd
  404bf4:	push   edx
  404bf5:	outs   dx,DWORD PTR ds:[esi]
  404bf6:	mov    al,0xfb
  404bf8:	retf   0xb3ff
  404bfb:	inc    ecx
  404bfc:	cmp    bh,BYTE PTR [ecx-0x1e]
  404bff:	jmp    0xb3d5577e
  404c04:	add    al,0x28
  404c06:	not    dh
  404c08:	test   BYTE PTR [bp+si],dl
  404c0b:	mov    esp,0x6fe2732c
  404c10:	loope  0x404bc1
  404c12:	pop    esi
  404c13:	rcl    DWORD PTR [ebp+0x29],cl
  404c16:	push   esi
  404c17:	scas   al,BYTE PTR es:[edi]
  404c18:	jmp    0x404c62
  404c1a:	aam    0x62
  404c1c:	(bad)  
  404c1e:	and    cl,BYTE PTR [esi]
  404c20:	mov    eax,ds:0xd15d932f
  404c25:	xor    al,0x83
  404c27:	adc    eax,0x3d4b1f61
  404c2c:	aas    
  404c2d:	fcmovu st,st(6)
  404c2f:	das    
  404c30:	test   bh,dh
  404c32:	jle    0x404c0a
  404c34:	pop    ebp
  404c35:	xlat   BYTE PTR ds:[ebx]
  404c36:	cmp    al,0xd8
  404c38:	add    dh,BYTE PTR ds:0xf4d2c22c
  404c3e:	ins    BYTE PTR es:[edi],dx
  404c3f:	xor    BYTE PTR [ebx+0x1c],dh
  404c42:	mov    esp,0x12b11192
  404c47:	je     0x404c70
  404c49:	add    eax,0x1e918287
  404c4e:	out    0x21,eax
  404c50:	mov    ah,0xba
  404c52:	repnz push esp
  404c54:	int    0x26
  404c56:	cmp    ebp,DWORD PTR [eax+0x5f586726]
  404c5c:	neg    DWORD PTR [esi+ebx*8+0x63f5eb03]
  404c63:	cmp    esi,DWORD PTR [ebx]
  404c65:	xor    BYTE PTR [ebx-0x1c],dl
  404c68:	jmp    0x2860c300
  404c6d:	loopne 0x404ce5
  404c6f:	popf   
  404c70:	inc    edi
  404c71:	mov    ebx,0x47dbb3fd
  404c76:	test   BYTE PTR [ebp-0xde41d10],dl
  404c7c:	mov    eax,ds:0xbe565e72
  404c81:	mov    eax,0xd90044a0
  404c86:	xchg   DWORD PTR [ebp-0x1c],esi
  404c89:	add    DWORD PTR [ebp+0x2d],ebx
  404c8c:	pop    edx
  404c8d:	stc    
  404c8e:	ins    BYTE PTR es:[edi],dx
  404c8f:	mov    edx,0xe5f1c3f9
  404c94:	mov    ah,0x5
  404c96:	push   ecx
  404c97:	push   esp
  404c98:	inc    esp
  404c99:	call   0x9ad6b7c0
  404c9e:	arpl   WORD PTR [edi+0x4a5685d2],sp
  404ca4:	mov    ecx,ebx
  404ca6:	mov    dl,0xb7
  404ca8:	repnz mul BYTE PTR [eax]
  404cab:	retf   
  404cac:	jmp    0x4c5c:0x694f00a7
  404cb3:	in     al,0x46
  404cb5:	jne    0x404c9d
  404cb7:	cmp    eax,0x89973c68
  404cbc:	frstor [esi+0x49]
  404cbf:	xor    DWORD PTR [ecx+0x36],ebx
  404cc2:	and    BYTE PTR [edx],bl
  404cc4:	jl     0x404cb5
  404cc6:	pop    edx
  404cc7:	jl     0x404d2b
  404cc9:	inc    eax
  404cca:	rol    DWORD PTR [esi-0x5c],1
  404ccd:	pop    ebx
  404cce:	pusha  
  404ccf:	pop    es
  404cd0:	sub    BYTE PTR [ebx],0x85
  404cd3:	and    ebx,DWORD PTR [ebx-0x1c4d1f5a]
  404cd9:	aaa    
  404cda:	pop    edx
  404cdb:	or     BYTE PTR [edx-0x44],0x5a
  404cdf:	cmp    DWORD PTR [edi+0x65],ecx
  404ce2:	cld    
  404ce3:	sub    DWORD PTR ds:0x48f80d90,0x94558147
  404ced:	call   0x2baa:0x894c5284
  404cf4:	pop    ebx
  404cf5:	leave  
  404cf6:	xchg   ebx,eax
  404cf7:	dec    ebp
  404cf8:	mov    al,ds:0x33aa4c5
  404cfd:	mov    cl,0x8d
  404cff:	ins    BYTE PTR es:[edi],dx
  404d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d01:	(bad)  
  404d02:	into   
  404d03:	psrld  xmm0,XMMWORD PTR [edi+eiz*1]
  404d08:	push   0x17
  404d0a:	inc    edx
  404d0b:	cdq    
  404d0c:	test   DWORD PTR [ecx],edi
  404d0e:	stos   BYTE PTR es:[edi],al
  404d0f:	inc    edx
  404d10:	xor    al,0xc3
  404d12:	push   eax
  404d13:	imul   esi,DWORD PTR [ebx+0x7],0x53
  404d17:	(bad)  
  404d18:	push   esp
  404d19:	std    
  404d1a:	dec    BYTE PTR [esi]
  404d1c:	inc    edi
  404d1d:	enter  0x1e49,0x54
  404d21:	div    BYTE PTR [ecx+0x6fdfe09b]
  404d27:	push   edx
  404d28:	lods   al,BYTE PTR ds:[esi]
  404d29:	xchg   esp,eax
  404d2a:	das    
  404d2b:	(bad)  
  404d2c:	mov    al,0x37
  404d2e:	rcl    BYTE PTR [bp+di],cl
  404d31:	sar    BYTE PTR [esi+0x7c],1
  404d34:	xor    al,0x1
  404d36:	inc    eax
  404d37:	repnz mov edi,DWORD PTR [eax-0x1b]
  404d3b:	(bad)  
  404d3c:	adc    BYTE PTR [bx+si],dl
  404d3f:	pop    ecx
  404d40:	cmp    eax,0x5b81f4f2
  404d45:	push   ds
  404d46:	or     bh,cl
  404d48:	repnz sub eax,esi
  404d4b:	loope  0x404cff
  404d4d:	popf   
  404d4e:	mov    esp,DWORD PTR [ebp+0x59725c67]
  404d54:	cs add ah,ch
  404d57:	jo     0x404da8
  404d59:	adc    eax,DWORD PTR [eax-0x77]
  404d5c:	or     DWORD PTR [edi+0xb],eax
  404d5f:	mov    dh,0x81
  404d61:	jne    0x404d22
  404d63:	sbb    BYTE PTR [ebx+0x5e85f6c1],bh
  404d69:	xchg   edi,eax
  404d6a:	mov    ch,0x84
  404d6c:	mov    esp,0xe7e3ae2c
  404d71:	push   ds
  404d72:	mov    bl,0x8
  404d74:	sahf   
  404d75:	adc    dh,BYTE PTR [esi+ecx*8-0x15456096]
  404d7c:	(bad)  [esi-0x25]
  404d7f:	mov    dl,0x39
  404d81:	push   ebx
  404d82:	(bad)
  404d85:	pop    ecx
  404d86:	test   al,0x51
  404d88:	(bad)  
  404d89:	int    0x39
  404d8b:	pop    es
  404d8c:	mov    edi,DWORD PTR [ebx-0x1ec91278]
  404d92:	test   al,0x6c
  404d94:	(bad)  
  404d95:	lock xchg edx,eax
  404d97:	and    al,0xf7
  404d99:	mov    ebx,0xa4146783
  404d9e:	and    DWORD PTR [esi+0x36],eax
  404da1:	in     eax,dx
  404da2:	push   ebp
  404da3:	test   BYTE PTR [eax],dh
  404da5:	add    ecx,edi
  404da7:	bound  edx,QWORD PTR [esp+edx*8-0x31]
  404dab:	jb     0x404d40
  404dad:	cdq    
  404dae:	mov    eax,ds:0xc1b29915
  404db3:	push   0x4301da56
  404db8:	push   edx
  404db9:	cmp    esp,DWORD PTR ss:[edi-0x6b]
  404dbd:	(bad)  
  404dbe:	hlt    
  404dbf:	mov    BYTE PTR [edx-0x86fb024],ah
  404dc5:	ds sub eax,eax
  404dc8:	mov    ebp,?
  404dca:	int    0x1a
  404dcc:	sbb    ecx,DWORD PTR [ebp+0x7425a63]
  404dd2:	fist   DWORD PTR [edi-0x14]
  404dd5:	jbe    0x404d6a
  404dd7:	pushf  
  404dd8:	mov    esp,DWORD PTR [ebp-0x4]
  404ddb:	ss and cl,0x1
  404ddf:	jne    0x404dd5
  404de1:	imul   edi,DWORD PTR [ebp+0x16],0x25
  404de5:	lea    edx,[ebp+0x53737f]
  404deb:	stc    
  404dec:	xchg   esi,eax
  404ded:	xor    DWORD PTR [edi+0x71],esp
  404df0:	popf   
  404df1:	clc    
  404df2:	imul   ebp,DWORD PTR [esi-0x2ef1f241],0x12c52b5
  404dfc:	jge    0x404e19
  404dfe:	sbb    DWORD PTR [ecx],0xffffffdb
  404e01:	hlt    
  404e02:	sbb    al,0x5f
  404e05:	loope  0x404e1d
  404e07:	aas    
  404e08:	in     eax,0xf8
  404e0a:	jno    0x404e7f
  404e0c:	in     eax,dx
  404e0d:	jmp    FWORD PTR [ebp-0x21]
  404e10:	xor    BYTE PTR [edx],dh
  404e12:	into   
  404e13:	stos   BYTE PTR es:[edi],al
  404e14:	jae    0x404e79
  404e16:	in     eax,dx
  404e17:	loop   0x404df3
  404e19:	fnstcw WORD PTR [ecx]
  404e1b:	jecxz  0x404dc0
  404e1d:	out    0x8a,al
  404e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e20:	fist   WORD PTR [edi-0x78c2037]
  404e26:	retf   0x11fe
  404e29:	jnp    0x404dc0
  404e2b:	xor    dh,0xd0
  404e2e:	ss cmc 
  404e30:	loop   0x404e7f
  404e32:	outs   dx,BYTE PTR ds:[esi]
  404e33:	pop    ecx
  404e34:	into   
  404e35:	jle    0x404e38
  404e37:	into   
  404e38:	inc    esi
  404e39:	sub    dl,BYTE PTR [ecx+0x2c196e6e]
  404e3f:	jno    0x404ea5
  404e41:	scas   al,BYTE PTR es:[edi]
  404e42:	cmp    BYTE PTR [ecx-0x48],dl
  404e45:	mov    edx,0x33144c96
  404e4a:	mov    bh,0x6
  404e4c:	jle    0x404dd9
  404e4e:	sbb    ch,BYTE PTR [eax+ecx*8]
  404e51:	dec    ebp
  404e52:	les    edi,FWORD PTR [eax+0x6149bfd6]
  404e58:	(bad)  
  404e59:	es dec ebx
  404e5b:	xchg   esp,eax
  404e5c:	(bad)  
  404e5e:	fmul   QWORD PTR [ebx+edi*1]
  404e61:	sbb    ch,BYTE PTR [edx]
  404e63:	retf   
  404e64:	cdq    
  404e65:	push   cs
  404e66:	add    bh,BYTE PTR [di]
  404e69:	push   esi
  404e6a:	repz imul eax,ebp,0xffffffeb
  404e6e:	push   ebx
  404e6f:	jo     0x404e64
  404e71:	push   edi
  404e72:	aam    0x36
  404e74:	int3   
  404e75:	aam    0x48
  404e77:	mov    esi,0x35ac9f02
  404e7c:	mov    eax,0xd762c859
  404e81:	dec    ebx
  404e82:	sbb    esi,DWORD PTR [esi+0x56d5b570]
  404e88:	icebp  
  404e89:	xor    DWORD PTR [ebx-0x27],0xffffff80
  404e8d:	mov    ds:0x6bd4611e,al
  404e92:	xchg   edx,eax
  404e93:	mov    ds:0x31c00a5e,eax
  404e98:	imul   ecx,DWORD PTR [edi+edx*2+0x6af83e32],0xd8d55664
  404ea3:	lods   al,BYTE PTR ds:[esi]
  404ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea5:	jbe    0x404ece
  404ea7:	mov    ds:0x8761556f,eax
  404eac:	in     eax,dx
  404ead:	jno    0x404eaf
  404eaf:	push   edi
  404eb0:	and    eax,0x98d5a495
  404eb5:	push   ebx
  404eb6:	pop    esp
  404eb7:	dec    ebx
  404eb8:	push   ss
  404eb9:	jmp    0xcfc37ceb
  404ebe:	xor    DWORD PTR [ebx+0x4154f9c9],ecx
  404ec4:	das    
  404ec5:	rol    BYTE PTR [eax-0x66],cl
  404ec8:	test   ebp,edx
  404eca:	hlt    
  404ecb:	out    dx,al
  404ecc:	mov    esp,0xad4dca64
  404ed1:	mov    edi,0x481d0702
  404ed6:	fistp  WORD PTR [ecx+ebx*2]
  404ed9:	sub    al,0x8f
  404edb:	and    al,0xa7
  404edd:	cmp    BYTE PTR [eax+0x63],ah
  404ee0:	push   ebx
  404ee1:	js     0x404f34
  404ee3:	sbb    edx,DWORD PTR [esi-0x3a]
  404ee6:	(bad)  
  404ee7:	cmp    al,0x2a
  404ee9:	inc    edx
  404eea:	dec    edi
  404eeb:	je     0x404e97
  404eed:	jns    0x404ec5
  404eef:	xchg   edx,eax
  404ef0:	clc    
  404ef1:	dec    edi
  404ef2:	pop    esi
  404ef3:	outs   dx,DWORD PTR ds:[esi]
  404ef4:	(bad)  
  404ef5:	std    
  404ef6:	mov    ebx,0xe8569dae
  404efb:	pop    eax
  404efc:	(bad)  
  404efd:	xchg   ebp,eax
  404efe:	adc    BYTE PTR [ecx-0x6f],0xe9
  404f02:	or     dl,BYTE PTR [eax+eiz*4]
  404f05:	int    0x8b
  404f07:	iret   
  404f08:	arpl   WORD PTR [eax+0x39856d9c],si
  404f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f0f:	ret    0xc4a1
  404f12:	jb     0x404f6b
  404f14:	xor    BYTE PTR [ebx],cl
  404f16:	mov    ch,BYTE PTR [ebx-0x3b2bdfc]
  404f1c:	ror    ecx,cl
  404f1e:	xor    esi,DWORD PTR [edx+eiz*2-0x2b]
  404f22:	dec    edx
  404f23:	inc    ebx
  404f24:	in     eax,dx
  404f25:	xor    al,0x55
  404f27:	add    eax,0x4563220a
  404f2c:	ficomp WORD PTR [ebx+eiz*1]
  404f2f:	(bad)  
  404f30:	mov    eax,ds:0x91ce4be6
  404f35:	sahf   
  404f36:	aas    
  404f37:	(bad)  
  404f38:	retf   
  404f39:	fcomip st,st(5)
  404f3b:	(bad)  
  404f3c:	fdivp  st(6),st
  404f3e:	aaa    
  404f3f:	inc    ecx
  404f40:	ins    BYTE PTR es:[edi],dx
  404f41:	jns    0x404efd
  404f43:	pop    esi
  404f44:	inc    eax
  404f45:	in     eax,0xcb
  404f47:	mov    WORD PTR [ebp-0x55],?
  404f4a:	push   edx
  404f4b:	pop    esp
  404f4c:	sbb    DWORD PTR [ebx],edi
  404f4e:	jmp    0x694fed32
  404f53:	adc    DWORD PTR [esi],esi
  404f55:	xor    BYTE PTR [ecx-0x577a6ca2],ch
  404f5b:	retf   0xcb22
  404f5e:	lock xor eax,0x5ac5be47
  404f64:	push   esi
  404f65:	adc    ch,bl
  404f67:	dec    ecx
  404f68:	stos   BYTE PTR es:[edi],al
  404f69:	mov    ?,edi
  404f6b:	shr    DWORD PTR [edi-0x42b94b56],1
  404f71:	push   ecx
  404f72:	in     eax,dx
  404f73:	push   0x8fd3c8f5
  404f78:	cmp    DWORD PTR [ecx-0x6039c18d],ebx
  404f7e:	ins    BYTE PTR es:[edi],dx
  404f7f:	jg     0x404f52
  404f81:	dec    DWORD PTR [edi-0x75]
  404f84:	sub    ah,ah
  404f86:	xchg   ebx,eax
  404f87:	lods   eax,DWORD PTR ds:[esi]
  404f88:	xlat   BYTE PTR ds:[ebx]
  404f89:	loopne 0x404feb
  404f8b:	pop    eax
  404f8c:	outs   dx,DWORD PTR ds:[esi]
  404f8d:	lods   al,BYTE PTR ds:[esi]
  404f8e:	sub    al,0x36
  404f90:	fdivp  st(7),st
  404f92:	cs xchg esi,eax
  404f94:	xlat   BYTE PTR ds:[ebx]
  404f95:	and    edi,esp
  404f97:	fld    DWORD PTR [eax-0x7b6ec938]
  404f9d:	rol    DWORD PTR [esi+ecx*8],cl
  404fa0:	mov    BYTE PTR [eax-0x72a6e56b],bh
  404fa6:	rcl    edx,0x15
  404fa9:	mov    ds:0xa5df9d91,eax
  404fae:	xor    al,0x31
  404fb0:	ss inc eax
  404fb2:	int3   
  404fb3:	xchg   ebx,eax
  404fb4:	push   DWORD PTR [ebx+edi*8+0xf]
  404fb8:	push   ebp
  404fb9:	jg     0x404fe2
  404fbb:	repnz in al,dx
  404fbd:	or     DWORD PTR [esi],esp
  404fbf:	xchg   ecx,eax
  404fc0:	xchg   esp,eax
  404fc1:	inc    edx
  404fc2:	add    eax,0x9c58e841
  404fc7:	dec    edi
  404fc8:	inc    edi
  404fc9:	je     0x404fac
  404fcb:	add    eax,0x1832ec90
  404fd0:	sub    eax,0x766dfd54
  404fd5:	int    0x5f
  404fd7:	arpl   bp,bp
  404fd9:	jmp    DWORD PTR [edx]
  404fdb:	leave  
  404fdc:	jmp    0xdc75bff6
  404fe1:	jecxz  0x405015
  404fe3:	mov    al,ds:0xcbc3c41f
  404fe8:	adc    DWORD PTR [ecx],edi
  404fea:	dec    ebp
  404feb:	xor    eax,DWORD PTR [ebx]
  404fed:	fild   WORD PTR [ebp-0x39]
  404ff0:	mov    WORD PTR [eax+0x476444ad],cs
  404ff6:	out    0xa3,al
  404ff8:	cli    
  404ff9:	dec    edi
  404ffa:	les    esi,FWORD PTR [ebx+0x5]
  404ffd:	sub    eax,esp
  404fff:	icebp  
  405000:	cld    
  405001:	cld    
  405002:	jle    0x404f97
  405004:	iret   
  405005:	mov    eax,0x63cdc679
  40500a:	push   edi
  40500b:	mov    ebx,0xdb9b6a28
  405010:	mov    cl,0x43
  405012:	mov    BYTE PTR [ebx+ecx*4-0x68786de6],al
  405019:	cld    
  40501a:	outs   dx,BYTE PTR ds:[esi]
  40501b:	pop    esi
  40501c:	sar    BYTE PTR [esi],0xf5
  40501f:	pop    ds
  405020:	popf   
  405021:	shr    dh,0x56
  405024:	jns    0x405066
  405026:	out    dx,eax
  405027:	inc    ebp
  405028:	xchg   edx,eax
  405029:	fcom   QWORD PTR [di+0x488a]
  40502e:	ret    0x6e01
  405031:	pop    eax
  405032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405033:	dec    edx
  405034:	pop    esp
  405035:	out    0x94,al
  405037:	rol    DWORD PTR [edi],1
  405039:	cmp    ecx,eax
  40503b:	je     0x40528b
  405041:	add    DWORD PTR ds:0x42b018,0x42c008
  40504b:	push   DWORD PTR [ebp-0x14]
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	inc    edx
  405660:	jecxz  0x4056af
  405662:	xor    BYTE PTR es:[edi+0x7a],bl
  405666:	jp     0x40564d
  405668:	pop    edi
  405669:	jp     0x4056e5
  40566b:	imul   esp,DWORD PTR [eax+ebx*1],0xc85a061e
  405672:	pop    ss
  405673:	mov    dh,0xe0
  405675:	mov    ds,edx
  405677:	cmp    bl,al
  405679:	sbb    BYTE PTR [edi],dh
  40567b:	sar    BYTE PTR [eax+0x610727c9],1
  405681:	(bad)  
  405682:	out    0xcb,eax
  405684:	xor    al,0xb8
  405686:	jmp    0x40561a
  405688:	and    cl,BYTE PTR [ecx]
  40568a:	mov    WORD PTR ds:0xafa0d8b4,cs
  405690:	lds    edi,FWORD PTR [ecx+0x5d]
  405693:	jae    0x4056c7
  405695:	inc    esi
  405696:	and    eax,0x2e67c9c
  40569b:	cmp    ebx,edx
  40569d:	aam    0xfe
  40569f:	lock xchg edi,eax
  4056a1:	jns    0x405711
  4056a3:	ja     0x4056d4
  4056a5:	sub    eax,0x5de58827
  4056aa:	cmp    DWORD PTR [ecx+0x79],esp
  4056ad:	push   0xffffffc0
  4056af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b0:	rcr    BYTE PTR [eax],cl
  4056b2:	cmp    eax,0xbc681b3
  4056b7:	outs   dx,BYTE PTR ds:[esi]
  4056b8:	shl    BYTE PTR [ecx+esi*1+0x4943892b],cl
  4056bf:	push   0x6cea4b47
  4056c4:	mov    eax,ds:0x66e8634
  4056c9:	fdiv   st(7),st
  4056cb:	sub    esp,esi
  4056cd:	sub    DWORD PTR [ebx+0x5738bae8],0x3f
  4056d4:	retf   0xe301
  4056d7:	arpl   WORD PTR [edi-0x283e3a08],ax
  4056dd:	stos   DWORD PTR es:[edi],eax
  4056de:	mul    ebx
  4056e0:	and    BYTE PTR [ebx+edi*8+0x50d2a203],dl
  4056e7:	lods   eax,DWORD PTR ds:[esi]
  4056e8:	nop
  4056e9:	mov    dl,0x1e
  4056eb:	push   ss
  4056ec:	dec    eax
  4056ed:	mov    dh,0x6b
  4056ef:	outs   dx,BYTE PTR ds:[esi]
  4056f0:	in     eax,dx
  4056f1:	and    BYTE PTR [eax+esi*2-0x459d3a5c],bl
  4056f8:	mov    ch,0x17
  4056fa:	mov    dl,0xe7
  4056fc:	(bad)  
  4056fd:	adc    esp,DWORD PTR [ecx]
  4056ff:	addr16 mov ebx,ebp
  405702:	mov    bh,0xcf
  405704:	jne    0x40570b
  405706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405707:	sub    eax,0xf382aa89
  40570c:	ror    BYTE PTR [ebx],cl
  40570e:	icebp  
  40570f:	js     0x40575d
  405711:	pop    ebp
  405712:	xor    DWORD PTR [ecx+esi*1-0x16],ebp
  405716:	mov    al,0xda
  405718:	cld    
  405719:	stos   BYTE PTR es:[edi],al
  40571a:	nop
  40571b:	loopne 0x40575d
  40571d:	sub    bh,bl
  40571f:	lods   al,BYTE PTR ds:[esi]
  405720:	adc    al,BYTE PTR [ecx+edi*2+0x37e6fb0c]
  405727:	(bad)  
  405728:	pop    ss
  405729:	jecxz  0x405722
  40572b:	ret    0x88fd
  40572e:	ret    0x4172
  405731:	dec    esp
  405732:	outs   dx,DWORD PTR ds:[esi]
  405733:	mov    BYTE PTR [eax+0x76],dh
  405736:	ss out 0xb0,eax
  405739:	dec    ebp
  40573a:	xchg   edi,eax
  40573b:	push   es
  40573c:	sub    BYTE PTR [ebp+0x2f020dc7],dh
  405742:	cmp    al,0x9e
  405744:	push   es
  405745:	and    al,0x2
  405747:	xor    DWORD PTR [eax],0x26
  40574a:	fisttp QWORD PTR [eax]
  40574c:	ds xchg edx,eax
  40574e:	pop    ds
  40574f:	push   edi
  405750:	pop    edx
  405751:	and    esp,DWORD PTR cs:[esi+0x6e8ee5a5]
  405758:	dec    edx
  405759:	xchg   ebx,ecx
  40575b:	int3   
  40575c:	xchg   ebx,eax
  40575d:	xchg   ebx,eax
  40575e:	fsub   DWORD PTR [ebp+edi*2-0x21ae1469]
  405765:	sub    eax,0xe86f5672
  40576a:	div    DWORD PTR [eax+0x2892e00d]
  405770:	cmp    DWORD PTR [ebx+0x6c7bbc9d],ebp
  405776:	inc    eax
  405777:	enter  0x9e60,0xf1
  40577b:	dec    edx
  40577c:	cmp    edx,DWORD PTR [edx+eax*1+0x3ddc0661]
  405783:	test   BYTE PTR [ebx],ch
  405785:	mov    ds:0x7c5b7e3d,eax
  40578a:	xchg   ecx,eax
  40578b:	add    eax,DWORD PTR [ebx+0x397c5ae6]
  405791:	push   edx
  405792:	pop    eax
  405793:	fstp   DWORD PTR [edi+0x5f17971f]
  405799:	stos   BYTE PTR es:[edi],al
  40579a:	rcr    bl,1
  40579c:	inc    ebx
  40579d:	push   ebx
  40579e:	rcr    DWORD PTR [edi+0x31],0x5f
  4057a2:	sbb    eax,DWORD PTR [edi]
  4057a4:	mov    bl,0x2e
  4057a6:	std    
  4057a7:	es rcl dl,cl
  4057aa:	mov    ds:0x34de5afd,eax
  4057af:	in     al,dx
  4057b0:	xor    esi,ecx
  4057b2:	stc    
  4057b3:	xchg   ecx,eax
  4057b4:	outs   dx,DWORD PTR fs:[esi]
  4057b6:	mov    bl,0xa8
  4057b8:	pop    edx
  4057b9:	mov    edi,0x6cebcce6
  4057be:	ins    DWORD PTR es:[edi],dx
  4057bf:	cli    
  4057c0:	sar    DWORD PTR [edi+0x7e],cl
  4057c3:	mov    edi,0x39089d33
  4057c8:	in     eax,0xcb
  4057ca:	out    dx,al
  4057cb:	xchg   esi,eax
  4057cc:	inc    esp
  4057cd:	sub    eax,0x6f3b312c
  4057d2:	mov    esp,0xc369c7fd
  4057d7:	in     al,dx
  4057d8:	loope  0x4057fa
  4057da:	inc    ebx
  4057db:	adc    ebx,edx
  4057dd:	retf   0xc6c3
  4057e0:	int3   
  4057e1:	fild   WORD PTR [esi]
  4057e3:	cmp    eax,0x839f3e6a
  4057e8:	push   es
  4057e9:	dec    edi
  4057ea:	pop    ss
  4057eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ec:	out    dx,al
  4057ed:	jl     0x405849
  4057ef:	int    0x84
  4057f1:	ins    BYTE PTR es:[edi],dx
  4057f2:	dec    ebx
  4057f3:	xchg   esi,eax
  4057f4:	xchg   ebx,eax
  4057f5:	in     al,dx
  4057f6:	sbb    ecx,DWORD PTR [ebp+edi*8+0x3d]
  4057fa:	pop    ds
  4057fb:	or     BYTE PTR [esp+edi*4],ah
  4057fe:	mov    ecx,0x94c6e0f
  405803:	xor    ch,cl
  405805:	sub    al,0xeb
  405807:	jbe    0x40583b
  405809:	xchg   bh,dh
  40580b:	hlt    
  40580c:	lock dec esi
  40580e:	or     al,0xf6
  405810:	retf   
  405811:	sub    BYTE PTR [esi],0x19
  405814:	repz rol DWORD PTR [ecx],cl
  405817:	push   ebx
  405818:	enter  0xc8a5,0xec
  40581c:	add    edx,0x8e1ef2d6
  405822:	outs   dx,BYTE PTR ds:[esi]
  405823:	push   edi
  405824:	cld    
  405825:	rcr    DWORD PTR [ebp-0x11],1
  405828:	cmp    al,0x4c
  40582a:	mov    al,ds:0xac947d9d
  40582f:	jb     0x4057f8
  405831:	pop    edx
  405832:	je     0x405832
  405834:	and    edi,ecx
  405836:	repz xchg edx,eax
  405838:	add    bl,bh
  40583a:	iret   
  40583b:	fst    QWORD PTR [edi-0xe41459e]
  405841:	cdq    
  405842:	mov    ah,0x1b
  405844:	jp     0x40582c
  405846:	repz hlt 
  405848:	neg    BYTE PTR [esi-0x53466300]
  40584e:	ret    
  40584f:	pop    ds
  405850:	inc    DWORD PTR [eax-0x521e289]
  405856:	pop    ss
  405857:	jmp    0x1cc0:0x303b7d88
  40585e:	mov    bl,bh
  405860:	and    al,0x2f
  405862:	das    
  405863:	retf   
  405864:	adc    ebp,eax
  405866:	xchg   DWORD PTR [ebp-0x578ec8ae],ebx
  40586c:	push   eax
  40586d:	and    al,ch
  40586f:	ficomp WORD PTR [eax-0x27825431]
  405875:	iret   
  405876:	and    edi,DWORD PTR [eax+ecx*1+0x24a6aee5]
  40587d:	imul   esi,DWORD PTR [edx+0x46],0x98439386
  405884:	xor    BYTE PTR ds:0x840a1aa5,cl
  40588a:	mov    edx,0x3f5c2d07
  40588f:	sbb    edi,edi
  405891:	sub    edx,0x42f59aa3
  405897:	nop
  405898:	or     edi,DWORD PTR [edx+edi*4]
  40589b:	test   eax,0xf5fbbb23
  4058a0:	outs   dx,BYTE PTR ds:[esi]
  4058a1:	pop    ds
  4058a2:	hlt    
  4058a3:	add    DWORD PTR [ebp+0x1e5be170],edi
  4058a9:	or     DWORD PTR [edi-0x68],0xffffffc2
  4058ad:	jbe    0x405846
  4058af:	fdivr  st,st(1)
  4058b1:	icebp  
  4058b2:	jg     0x405873
  4058b4:	mov    eax,ebp
  4058b6:	cmp    BYTE PTR [eax+0x2239d720],dl
  4058bc:	xchg   edi,eax
  4058bd:	pop    eax
  4058be:	lea    eax,[eax+0x28]
  4058c1:	out    dx,eax
  4058c2:	scas   eax,DWORD PTR es:[edi]
  4058c3:	cdq    
  4058c4:	(bad)  
  4058c5:	jge    0x405906
  4058c7:	inc    BYTE PTR [ebx+0x45cc9978]
  4058cd:	sti    
  4058ce:	xor    ecx,DWORD PTR fs:[eax-0x5046662]
  4058d5:	stmxcsr DWORD PTR [esi+0x5f9f14bc]
  4058dc:	jae    0x405889
  4058de:	jnp    0x4058eb
  4058e0:	sub    BYTE PTR [esi+esi*8-0x2],ah
  4058e4:	arpl   WORD PTR [eax],di
  4058e6:	imul   eax,DWORD PTR [eax+esi*2+0x47287b80],0x14
  4058ee:	mov    edi,?
  4058f0:	fld    TBYTE PTR [esi]
  4058f2:	push   es
  4058f3:	adc    al,0xc7
  4058f5:	repnz ficom DWORD PTR [ecx]
  4058f8:	fs int3 
  4058fa:	dec    ebx
  4058fb:	std    
  4058fc:	inc    edx
  4058fd:	mov    edi,DWORD PTR [edi-0x57124996]
  405903:	mov    edx,ebx
  405905:	hlt    
  405906:	push   ds
  405907:	cmc    
  405908:	jecxz  0x4058f0
  40590a:	loop   0x405976
  40590c:	adc    ecx,ebp
  40590e:	out    dx,eax
  40590f:	test   eax,0x9a70adbf
  405914:	call   0xea865dd9
  405919:	rol    DWORD PTR [edx],1
  40591b:	lods   eax,DWORD PTR ds:[esi]
  40591c:	xor    DWORD PTR [ecx+0x5ca0ab07],0x2f5f3a9b
  405926:	scas   al,BYTE PTR es:[edi]
  405927:	fst    QWORD PTR [ebx+ebx*2]
  40592a:	pop    edx
  40592b:	test   edx,ebx
  40592d:	(bad)  
  40592e:	in     eax,0x1d
  405930:	adc    eax,0x42618486
  405935:	and    esi,esi
  405937:	pop    eax
  405938:	sti    
  405939:	not    BYTE PTR [edi]
  40593b:	inc    edi
  40593c:	mov    ch,0xb5
  40593e:	push   ebp
  40593f:	imul   esi,eax,0x14
  405942:	stos   DWORD PTR es:[edi],eax
  405943:	mov    eax,ds:0x2f60a535
  405948:	outs   dx,BYTE PTR ds:[esi]
  405949:	dec    ecx
  40594a:	pop    ebx
  40594b:	stos   DWORD PTR es:[edi],eax
  40594c:	lods   eax,DWORD PTR ds:[esi]
  40594d:	aaa    
  40594e:	and    dh,BYTE PTR [edx-0x67]
  405951:	cmp    al,0x20
  405953:	hlt    
  405954:	and    BYTE PTR [edi],cl
  405956:	mov    dh,BYTE PTR [eax+edx*8-0x42c7343a]
  40595d:	xlat   BYTE PTR ds:[ebx]
  40595e:	pop    ds
  40595f:	xchg   esp,eax
  405960:	push   ds
  405961:	adc    DWORD PTR [ebp+0x15c171c5],ebx
  405967:	push   ecx
  405968:	aad    0x68
  40596a:	sub    ebp,DWORD PTR [ebp-0x10cc7957]
  405970:	test   BYTE PTR [ebp+eiz*2+0x59],bl
  405974:	(bad)
  405977:	push   edx
  405978:	bound  esp,QWORD PTR [ebp+0x89ee7bf]
  40597e:	lea    ebx,[edi-0x12]
  405981:	cdq    
  405982:	imul   ecx,DWORD PTR [esi+0x57],0xffffffbd
  405986:	mov    ecx,0x8c604527
  40598b:	paddq  xmm7,xmm4
  40598f:	out    0x92,al
  405991:	cmp    eax,0x93ecbbe5
  405996:	dec    ebx
  405997:	enter  0xf130,0xd5
  40599b:	pushf  
  40599c:	pop    edx
  40599d:	imul   esp,DWORD PTR [ebp-0x7d5ee6a0],0xc
  4059a4:	fucomi st,st(5)
  4059a6:	shl    BYTE PTR [ebx+0x6c],0x6b
  4059aa:	pop    ss
  4059ab:	(bad)  
  4059ac:	sbb    ecx,DWORD PTR [ebx-0x68]
  4059af:	ret    
  4059b0:	pusha  
  4059b1:	push   DWORD PTR [esi-0x7addaaab]
  4059b7:	sbb    dl,BYTE PTR [edx+0x61934eb]
  4059bd:	je     0x4059d6
  4059bf:	jbe    0x4059e5
  4059c1:	mov    al,0xd1
  4059c3:	and    eax,0x58d3d2db
  4059c8:	loop   0x405959
  4059ca:	call   0x66b1bdc9
  4059cf:	inc    eax
  4059d0:	std    
  4059d1:	xor    ch,BYTE PTR [edx]
  4059d3:	xor    al,0x83
  4059d5:	cvttps2pi mm2,QWORD PTR [ebx+eax*2+0x3b]
  4059da:	stc    
  4059db:	or     DWORD PTR [ecx+0x23],0xf1fdc61f
  4059e2:	cwde   
  4059e3:	enter  0x1cfe,0xb0
  4059e7:	cwde   
  4059e8:	xor    DWORD PTR [ecx],eax
  4059ea:	and    dl,BYTE PTR [edi+eax*4-0x57e2175e]
  4059f1:	mov    bl,dl
  4059f3:	retf   
  4059f4:	(bad)  
  4059f5:	push   ss
  4059f6:	cdq    
  4059f7:	iret   
  4059f8:	ror    DWORD PTR [esp+eax*1-0x5b],0x47
  4059fd:	in     al,0xfb
  4059ff:	sbb    eax,0x4988e9a0
  405a04:	imul   eax,DWORD PTR [ebx+0x77],0x5d912483
  405a0b:	rcr    BYTE PTR [ebx-0x5b],cl
  405a0e:	out    dx,eax
  405a0f:	push   esp
  405a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a11:	shr    BYTE PTR ds:0x1931f54a,cl
  405a17:	pop    ebp
  405a18:	or     BYTE PTR [edi-0x2b8b6362],bh
  405a1e:	lods   eax,DWORD PTR ds:[esi]
  405a1f:	in     al,0x22
  405a21:	adc    BYTE PTR [eax+0x9],ch
  405a24:	dec    ebx
  405a25:	scas   al,BYTE PTR es:[edi]
  405a26:	mov    dh,0x97
  405a28:	mov    bl,BYTE PTR [edi+esi*1+0xbfdcea1]
  405a2f:	jecxz  0x4059e6
  405a31:	andps  xmm0,xmm6
  405a34:	push   esp
  405a35:	stc    
  405a36:	pop    ebp
  405a37:	loop   0x405ab6
  405a39:	neg    esp
  405a3b:	rol    al,0x35
  405a3e:	das    
  405a3f:	sub    ah,BYTE PTR [ebp-0x26791706]
  405a45:	bound  edi,QWORD PTR [edi]
  405a47:	pushf  
  405a48:	cs (bad) 
  405a4a:	test   DWORD PTR [ebp+0x7d],ecx
  405a4d:	(bad)  
  405a4e:	push   edi
  405a4f:	inc    ecx
  405a50:	sub    al,0xec
  405a52:	ficom  WORD PTR [esi]
  405a54:	iret   
  405a55:	ficom  DWORD PTR [ecx-0x6a]
  405a58:	ja     0x4059f5
  405a5a:	fwait
  405a5b:	js     0x405a5a
  405a5d:	int3   
  405a5e:	iret   
  405a5f:	inc    ebx
  405a60:	mov    bp,0x5e20
  405a64:	stos   BYTE PTR es:[edi],al
  405a65:	mov    ah,0x52
  405a67:	pmulhuw mm1,QWORD PTR [ebp+0x34]
  405a6b:	or     eax,0x2cd0a6bc
  405a70:	imul   ebp,DWORD PTR [edx+0xb],0xffffffe1
  405a74:	pop    eax
  405a75:	imul   BYTE PTR [eax+0x1b9ffdb2]
  405a7b:	cmc    
  405a7c:	div    DWORD PTR [ecx+edi*4+0x48]
  405a80:	aaa    
  405a81:	sbb    DWORD PTR [ebx+0x2d246187],0xca1411b3
  405a8b:	ja     0x405a8e
  405a8d:	leave  
  405a8e:	pop    ds
  405a8f:	xchg   BYTE PTR [esi],dh
  405a91:	mov    ds:0x41d92491,al
  405a96:	inc    ecx
  405a97:	xor    DWORD PTR [esi-0x4d],0xffffffba
  405a9b:	aam    0x21
  405a9d:	push   edi
  405a9e:	shl    bl,cl
  405aa0:	inc    edi
  405aa1:	push   cs
  405aa2:	cmp    al,cl
  405aa4:	pop    eax
  405aa5:	add    al,0x60
  405aa7:	mov    edx,eax
  405aa9:	out    0x26,eax
  405aab:	das    
  405aac:	mov    esi,DWORD PTR [edx]
  405aae:	test   al,0x16
  405ab0:	sbb    DWORD PTR [esi+0x326490f9],esp
  405ab6:	js     0x405ac8
  405ab8:	pop    edi
  405ab9:	in     eax,0xef
  405abb:	clc    
  405abc:	dec    ebx
  405abd:	xor    bh,BYTE PTR [ecx+0x2a]
  405ac0:	adc    al,0x59
  405ac2:	add    dl,ch
  405ac4:	push   edi
  405ac5:	and    esp,DWORD PTR [edx-0x7956b1ae]
  405acb:	pop    eax
  405acc:	cmc    
  405acd:	ds ins DWORD PTR es:[edi],dx
  405acf:	loop   0x405ad4
  405ad1:	or     DWORD PTR [ebp-0x8],edx
  405ad4:	mov    esp,0x91151ec4
  405ad9:	je     0x405b15
  405adb:	pop    esi
  405adc:	je     0x405a67
  405ade:	pop    esp
  405adf:	sbb    al,bl
  405ae1:	add    bh,BYTE PTR [ebp+0x7d]
  405ae4:	aad    0x56
  405ae6:	ins    DWORD PTR es:[edi],dx
  405ae7:	sub    esp,DWORD PTR [ebx-0x66eb4e56]
  405aed:	cs pop esp
  405aef:	xlat   BYTE PTR ds:[ebx]
  405af0:	test   DWORD PTR [edi+0x55],esi
  405af3:	int3   
  405af4:	shl    BYTE PTR [ecx],0x1d
  405af7:	loopne 0x405aa5
  405af9:	daa    
  405afa:	je     0x405b2b
  405afc:	gs mov al,0xce
  405aff:	jb     0x405b3f
  405b01:	outs   dx,BYTE PTR ds:[esi]
  405b02:	fisttp QWORD PTR [ebx]
  405b04:	lahf   
  405b05:	out    0x8d,eax
  405b07:	mov    DWORD PTR [ecx],eax
  405b09:	mov    ch,0x39
  405b0b:	adc    edx,0x4a53e3d7
  405b11:	xchg   esp,eax
  405b12:	push   ds
  405b13:	fisub  DWORD PTR [ecx-0x3]
  405b16:	jl     0x405b5d
  405b18:	push   edx
  405b1a:	dec    edi
  405b1b:	mov    ah,0xc
  405b1d:	xor    BYTE PTR [ecx+0x5e911771],ah
  405b23:	xor    al,BYTE PTR [ebp+0x5a]
  405b26:	ror    esp,0x43
  405b29:	std    
  405b2a:	mov    dl,0xf3
  405b2c:	add    ch,BYTE PTR [ecx]
  405b2e:	add    ebp,DWORD PTR [esi-0x5582dc50]
  405b34:	rcl    BYTE PTR [edi],0x60
  405b37:	xchg   edi,eax
  405b38:	push   es
  405b39:	lds    ecx,FWORD PTR [ebx-0x73]
  405b3c:	jne    0x405b2c
  405b3e:	std    
  405b3f:	fstp   QWORD PTR [ebp-0xd141f1b]
  405b45:	stos   DWORD PTR es:[edi],eax
  405b46:	addr16 mov esi,0x4af1d63c
  405b4c:	(bad)  
  405b4d:	out    0xeb,eax
  405b4f:	outs   dx,BYTE PTR ds:[esi]
  405b50:	xchg   ecx,eax
  405b51:	or     BYTE PTR [esp+ecx*1-0x423036da],0xd2
  405b59:	scas   eax,DWORD PTR es:[edi]
  405b5a:	push   esi
  405b5b:	or     al,0xce
  405b5d:	test   eax,0x610a1a48
  405b62:	or     al,BYTE PTR [ecx+ebx*2+0x28]
  405b66:	jmp    0x2bf2:0x62bd628
  405b6d:	sbb    BYTE PTR [ebx-0x216b2fc9],dl
  405b73:	push   es
  405b74:	data16 cmp al,0xdc
  405b77:	sub    DWORD PTR [edx],eax
  405b79:	ja     0x405b13
  405b7b:	repnz cmp DWORD PTR [edi],eax
  405b7e:	pop    ebx
  405b7f:	jbe    0x405b91
  405b81:	hlt    
  405b82:	push   ss
  405b83:	outs   dx,BYTE PTR ds:[esi]
  405b84:	call   0x319d:0x70f2cb9a
  405b8b:	jb     0x405b2d
  405b8d:	rdpmc  
  405b8f:	out    0x6d,al
  405b91:	mov    ebp,0xc35a1777
  405b96:	(bad)  
  405b97:	ffreep st(2)
  405b99:	les    edx,FWORD PTR [eax+0x62584e31]
  405b9f:	sahf   
  405ba0:	mov    ds:0x73193821,al
  405ba5:	jg     0x405b7f
  405ba7:	inc    ebp
  405ba8:	js     0x405b73
  405baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bab:	mov    es,WORD PTR [esi+0x13]
  405bae:	fdivr  st(4),st
  405bb0:	cmp    edi,DWORD PTR [eax-0x2a01df6f]
  405bb6:	cmp    ah,BYTE PTR [esi]
  405bb8:	sbb    bh,BYTE PTR [edx]
  405bba:	out    0xc,eax
  405bbc:	loop   0x405c37
  405bbe:	push   ebx
  405bbf:	or     al,0x18
  405bc1:	shl    BYTE PTR [ebp+0x1c],0x54
  405bc5:	xchg   esp,eax
  405bc6:	out    0x7e,eax
  405bc8:	es xchg edx,eax
  405bca:	popa   
  405bcb:	mov    esp,0xa21ad86e
  405bd0:	mov    dl,0x4b
  405bd2:	cmp    al,BYTE PTR [edi+0x367cf49]
  405bd8:	mov    ebp,0x5502da35
  405bdd:	gs ja  0x405c52
  405be0:	es scas eax,DWORD PTR es:[edi]
  405be2:	aas    
  405be3:	mov    ebp,0xaafa3666
  405be8:	test   BYTE PTR [ebx-0x80],al
  405beb:	or     eax,0xe102930d
  405bf0:	mov    ecx,0xe0859192
  405bf5:	cmc    
  405bf6:	push   ecx
  405bf7:	pop    ebx
  405bf8:	retf   
  405bf9:	add    DWORD PTR [edx],0x28
  405bfc:	pop    ecx
  405bfd:	fs xchg ecx,eax
  405bff:	loope  0x405bdf
  405c01:	stc    
  405c02:	mov    DWORD PTR [edi-0x75615e9d],ebx
  405c08:	icebp  
  405c09:	test   DWORD PTR [ebx],esi
  405c0b:	ins    BYTE PTR es:[edi],dx
  405c0c:	rcr    DWORD PTR ds:0x30796ff9,cl
  405c12:	pop    esi
  405c13:	mov    ch,0x1
  405c15:	adc    al,0xca
  405c17:	mov    ebx,esi
  405c19:	mov    ecx,0xe5f1df1c
  405c1e:	ret    
  405c1f:	call   0x14d13bef
  405c24:	jo     0x405c09
  405c26:	aam    0x8c
  405c28:	sar    esi,cl
  405c2a:	fwait
  405c2b:	imul   edi,DWORD PTR [ecx+ebp*8-0x46edbe44],0xb1481010
  405c36:	push   0x5
  405c38:	fidiv  WORD PTR [ebx+0x67]
  405c3b:	xchg   edx,eax
  405c3c:	sub    dh,BYTE PTR [ecx+0x50]
  405c3f:	pop    eax
  405c40:	(bad)  [eax-0x7c079815]
  405c46:	sub    eax,0x873311bf
  405c4b:	ja     0x405c23
  405c4d:	sub    BYTE PTR [edx+0x5ffa37e2],0x7c
  405c54:	pop    edx
  405c55:	popa   
  405c56:	mov    cl,0x6
  405c58:	jl     0x405c01
  405c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c5b:	xor    BYTE PTR [ebx-0x1819da92],ah
  405c61:	jbe    0x405cce
  405c63:	es cmc 
  405c65:	rcr    DWORD PTR [esi-0x6],1
  405c68:	sti    
  405c69:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c6b:	xchg   ecx,eax
  405c6c:	cmc    
  405c6d:	leave  
  405c6e:	je     0x405cdc
  405c70:	xchg   ecx,eax
  405c71:	mov    ?,WORD PTR [ebp+0x45]
  405c74:	inc    ebx
  405c75:	mov    ecx,0x177da8b8
  405c7a:	ror    dl,0x87
  405c7d:	cmp    bh,dh
  405c7f:	in     eax,dx
  405c80:	xor    bl,BYTE PTR [ebx+0x1c]
  405c83:	xchg   edi,eax
  405c84:	cld    
  405c85:	inc    esi
  405c86:	in     al,0x2d
  405c88:	jp     0x405c70
  405c8a:	ret    0xef6f
  405c8d:	stos   DWORD PTR es:[edi],eax
  405c8e:	push   es
  405c8f:	shl    BYTE PTR [ecx-0x3f604ae8],0xd4
  405c96:	inc    eax
  405c97:	test   eax,0xb75a674c
  405c9c:	jnp    0x405c9d
  405c9e:	aas    
  405c9f:	rcl    bh,1
  405ca1:	call   0xe032:0x2d0d256d
  405ca8:	mov    ds:0x542c6285,al
  405cad:	cmp    ebx,DWORD PTR [esi+0x7d3aee8d]
  405cb3:	and    dh,BYTE PTR [ecx]
  405cb5:	loope  0x405c3d
  405cb7:	mov    al,ds:0x4f8da09c
  405cbc:	cdq    
  405cbd:	mov    ah,0xc
  405cbf:	daa    
  405cc0:	loop   0x405d08
  405cc2:	jbe    0x405cf3
  405cc4:	jp     0x405ce5
  405cc6:	(bad)  
  405cc7:	(bad)  
  405cc8:	ror    DWORD PTR [eax-0x53],cl
  405ccb:	and    ebx,DWORD PTR [ecx+0x76]
  405cce:	cmp    DWORD PTR [esp+eax*2],edx
  405cd1:	pushf  
  405cd2:	add    eax,0x305c43d4
  405cd7:	or     eax,0xa8a8a098
  405cdc:	push   0x95ef1b67
  405ce1:	sbb    al,0x11
  405ce3:	sbb    edi,DWORD PTR [ecx]
  405ce5:	mov    dl,0xf1
  405ce7:	scas   eax,DWORD PTR es:[edi]
  405ce8:	out    dx,eax
  405ce9:	test   BYTE PTR [edi+0x43d1d3a],0x24
  405cf0:	data16 out 0x8b,al
  405cf3:	loop   0x405cb9
  405cf5:	dec    ecx
  405cf6:	dec    ebx
  405cf7:	out    0x81,eax
  405cf9:	out    dx,eax
  405cfa:	enter  0x4029,0x3e
  405cfe:	rcr    DWORD PTR [ebp-0xa],cl
  405d01:	mov    WORD PTR [ebx-0x3],ss
  405d04:	mov    ch,0xf0
  405d06:	mov    al,0xde
  405d08:	adc    DWORD PTR ds:0xf836103,ebx
  405d0e:	aas    
  405d0f:	pop    esi
  405d10:	jbe    0x405d7f
  405d12:	xor    ebp,ebp
  405d14:	xor    BYTE PTR [edi+0x64],al
  405d17:	or     eax,0x65fa8384
  405d1c:	js     0x405d87
  405d1e:	stc    
  405d1f:	lahf   
  405d20:	lds    esi,FWORD PTR [ebx]
  405d22:	test   DWORD PTR [esp+esi*2+0x74e7cf50],eax
  405d29:	inc    edx
  405d2a:	retf   0x7f23
  405d2d:	scas   eax,DWORD PTR es:[edi]
  405d2e:	test   al,0xaa
  405d30:	dec    ebp
  405d31:	mov    WORD PTR [ebx-0x7d],es
  405d34:	(bad)  
  405d35:	ins    BYTE PTR es:[edi],dx
  405d36:	std    
  405d37:	mov    eax,0x109dfaa8
  405d3c:	or     BYTE PTR [ebx-0xf89169e],ah
  405d42:	in     al,dx
  405d43:	jl     0x405dbe
  405d45:	scas   eax,DWORD PTR es:[edi]
  405d46:	add    DWORD PTR [ebp+eax*2-0x7500669e],0xc
  405d4e:	enter  0x5a7d,0xd2
  405d52:	loopne 0x405d12
  405d54:	loope  0x405d7b
  405d56:	jmp    0x405d6b
  405d58:	ret    0x4fed
  405d5b:	into   
  405d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5d:	int    0xd6
  405d5f:	cmp    ah,BYTE PTR [ebx+0x3e]
  405d62:	in     al,0x4c
  405d64:	dec    ecx
  405d65:	mov    BYTE PTR [ecx],0x55
  405d68:	jl     0x405cfc
  405d6a:	jmp    0x8669:0x454cac7f
  405d71:	arpl   WORD PTR [ebx],cx
  405d73:	jge    0x405d73
  405d75:	xchg   esi,eax
  405d76:	iret   
  405d77:	add    BYTE PTR [ecx],bh
  405d79:	std    
  405d7a:	xor    eax,0xab3691b5
  405d7f:	mov    dh,0x23
  405d81:	jp     0x405df8
  405d83:	std    
  405d84:	int3   
  405d85:	addr16 adc bl,dh
  405d88:	jno    0x405d8f
  405d8a:	mov    ebx,0xff250aab
  405d8f:	add    esp,DWORD PTR [edx+ebx*1+0x143fdc20]
  405d96:	xchg   ebp,eax
  405d97:	mov    esi,0xac1af0f1
  405d9c:	or     BYTE PTR [ebx-0x2d],dh
  405d9f:	xor    eax,0xd1d3b5a0
  405da4:	jb     0x405d37
  405da6:	daa    
  405da7:	and    DWORD PTR [edx-0x4],ebp
  405daa:	in     eax,dx
  405dab:	in     al,0x1f
  405dad:	out    0x95,al
  405daf:	xchg   ebp,eax
  405db0:	dec    ebx
  405db1:	repnz leave 
  405db3:	adc    ecx,DWORD PTR [edi+edi*8+0x6d]
  405db7:	dec    eax
  405db8:	pop    ebx
  405db9:	int    0xcf
  405dbb:	out    0x1e,eax
  405dbd:	sbb    al,0x60
  405dbf:	loope  0x405dc6
  405dc1:	leave  
  405dc2:	in     al,0x3d
  405dc4:	inc    esp
  405dc5:	mov    dh,BYTE PTR [eax+0x7577bc1]
  405dcb:	jbe    0x405e26
  405dcd:	or     BYTE PTR [edi-0x12c819e2],ah
  405dd3:	jmp    0x814449e4
  405dd8:	or     ch,BYTE PTR [esi+0x2a]
  405ddb:	stos   BYTE PTR es:[edi],al
  405ddc:	sub    edx,DWORD PTR [ebx-0x625bf1d9]
  405de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405de3:	ds pop edi
  405de5:	inc    esi
  405de6:	mov    dh,0x73
  405de8:	mov    al,0xc5
  405dea:	div    esi
  405dec:	out    0x69,al
  405dee:	xchg   esi,eax
  405def:	and    eax,DWORD PTR [ebx]
  405df1:	xor    cl,BYTE PTR [eax-0x8]
  405df4:	ret    
  405df5:	xchg   esp,eax
  405df6:	mov    dh,0x7
  405df8:	push   edx
  405df9:	call   0x818b199e
  405dfe:	mov    WORD PTR [esi],fs
  405e00:	loop   0x405e74
  405e02:	mov    al,0x9e
  405e04:	mov    cl,0xa7
  405e06:	push   ebx
  405e07:	add    DWORD PTR [edi+ecx*2-0x68bec51f],eax
  405e0e:	aas    
  405e0f:	out    dx,al
  405e10:	pop    esp
  405e11:	imul   esp,DWORD PTR [ebx],0x775bdc17
  405e17:	mov    bl,0x9e
  405e19:	mov    esp,DWORD PTR [edx+0x37782af0]
  405e1f:	pop    es
  405e20:	rcl    BYTE PTR [esi+eiz*8-0x249d5dd0],cl
  405e27:	adc    BYTE PTR [ebp+0x7ae85768],bh
  405e2d:	int    0xc6
  405e2f:	jbe    0x405e22
  405e31:	sar    DWORD PTR [edx+edx*8],0xa4
  405e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e36:	stos   DWORD PTR es:[edi],eax
  405e37:	push   esi
  405e38:	dec    edx
  405e39:	daa    
  405e3a:	push   ds
  405e3b:	cmp    BYTE PTR ds:0x3932bce8,bh
  405e41:	retf   0xb330
  405e44:	daa    
  405e45:	xchg   edi,eax
  405e46:	cmp    DWORD PTR [ecx+0x71],ecx
  405e49:	aaa    
  405e4a:	sbb    esp,esi
  405e4c:	aaa    
  405e4d:	mov    dh,0xa5
  405e4f:	stos   BYTE PTR es:[edi],al
  405e50:	imul   esp,DWORD PTR [esi],0xffffff9f
  405e53:	sub    eax,0x6b7f56e1
  405e58:	sub    esp,ecx
  405e5a:	add    al,0x30
  405e5c:	test   dh,0xed
  405e5f:	ds lock imul ecx,esi,0x43
  405e64:	out    dx,al
  405e65:	cwde   
  405e66:	jb     0x405e37
  405e68:	daa    
  405e69:	inc    ebx
  405e6a:	test   al,0x59
  405e6d:	or     ah,bh
  405e6f:	push   edx
  405e70:	cli    
  405e71:	jge    0x405e5a
  405e73:	jecxz  0x405e63
  405e75:	and    DWORD PTR [esi-0x3e],edx
  405e78:	sbb    BYTE PTR [edx+0x3e],bl
  405e7b:	icebp  
  405e7c:	mov    ds:0xedf04d82,al
  405e81:	test   BYTE PTR [ecx],0xf4
  405e84:	jmp    0x405edd
  405e86:	pop    edx
  405e87:	sub    ah,bh
  405e89:	dec    esi
  405e8a:	cld    
  405e8b:	xor    BYTE PTR [esi-0x1233e14],0x19
  405e92:	stos   BYTE PTR es:[edi],al
  405e93:	inc    eax
  405e94:	push   0x24d98390
  405e99:	ja     0x405f02
  405e9b:	and    eax,0xf5330b4b
  405ea0:	mov    eax,0x9806b34a
  405ea5:	xor    eax,esi
  405ea7:	mov    al,ds:0xd017d515
  405eac:	jp     0x405e35
  405eae:	daa    
  405eaf:	jb     0x405e45
  405eb1:	setns  BYTE PTR [ecx+0x3a]
  405eb5:	dec    esp
  405eb6:	cmp    ch,BYTE PTR [edx+0x59192698]
  405ebc:	pushf  
  405ebd:	in     al,0x68
  405ebf:	(bad)  
  405ec0:	cmp    ecx,0x630faef7
  405ec6:	push   sp
  405ec8:	sbb    bh,al
  405eca:	pop    esp
  405ecb:	push   ss
  405ecc:	xor    bh,BYTE PTR [ecx+0x6bc13b05]
  405ed2:	js     0x405e6e
  405ed4:	fcom   DWORD PTR [edi-0x51b884fe]
  405eda:	aaa    
  405edb:	mov    eax,ds:0x503bb33c
  405ee0:	mov    WORD PTR [eax+ebx*2+0x45],es
  405ee4:	stc    
  405ee5:	pusha  
  405ee6:	pop    ss
  405ee7:	mov    ebx,0xe488aa3
  405eec:	xchg   esi,eax
  405eed:	xchg   edx,eax
  405eee:	hlt    
  405eef:	test   al,0x33
  405ef1:	out    dx,eax
  405ef2:	call   0xd10d36bc
  405ef7:	mov    WORD PTR [ecx-0x34],es
  405efa:	and    al,0x34
  405efc:	fwait
  405efd:	stc    
  405efe:	xor    dl,BYTE PTR [edi+0x18cd7925]
  405f04:	stos   DWORD PTR es:[edi],eax
  405f05:	sub    al,0x3b
  405f07:	lahf   
  405f08:	and    esp,edx
  405f0a:	push   ds
  405f0b:	mov    WORD PTR [edx-0x17],gs
  405f0e:	sbb    DWORD PTR [ebx+0x79ce7a73],ecx
  405f14:	xchg   dh,ch
  405f16:	dec    edi
  405f17:	sahf   
  405f18:	(bad)  
  405f19:	out    0xc1,eax
  405f1b:	shl    BYTE PTR [ebx+0x4c010d5e],0x35
  405f22:	xor    al,BYTE PTR [eax]
  405f24:	add    al,0x6a
  405f26:	out    dx,al
  405f27:	mov    DWORD PTR [edx-0x7a],edx
  405f2a:	pop    ecx
  405f2b:	imul   eax,DWORD PTR [ecx-0x60],0x2
  405f2f:	fsub   QWORD PTR [ecx-0x6d]
  405f32:	dec    edi
  405f33:	test   ah,dh
  405f35:	pop    ecx
  405f36:	xchg   ecx,eax
  405f37:	cmp    eax,0x7adf50f1
  405f3c:	lea    eax,[esi-0x7f9e0db3]
  405f42:	fcmovnb st,st(4)
  405f44:	imul   esi,DWORD PTR [esi],0x96fa29cc
  405f4a:	mov    ds:0xd31f7318,eax
  405f4f:	pop    esp
  405f50:	scas   al,BYTE PTR es:[edi]
  405f51:	push   ds
  405f52:	sub    edx,ecx
  405f54:	out    0x22,eax
  405f56:	cmp    edi,DWORD PTR [ebp-0x68]
  405f59:	das    
  405f5a:	les    ecx,FWORD PTR [eax+0x1c6755de]
  405f60:	mov    ebx,0x5f6d47b6
  405f65:	in     eax,dx
  405f66:	jmp    0x1322:0xe6bda275
  405f6d:	adc    bl,dh
  405f6f:	hlt    
  405f70:	(bad)  
  405f71:	out    dx,eax
  405f72:	arpl   WORD PTR [ecx],cx
  405f74:	push   0xe92607c6
  405f79:	jno    0x405f82
  405f7b:	scas   eax,DWORD PTR es:[edi]
  405f7c:	les    ebp,FWORD PTR [ecx+ecx*1-0x3d]
  405f80:	int3   
  405f81:	mov    ds,WORD PTR [eax-0x27]
  405f84:	rol    BYTE PTR [esi+0x6bcbc31c],0xd8
  405f8b:	test   BYTE PTR [edx+0x76],ch
  405f8e:	mov    ds:0xf6c50065,al
  405f93:	inc    esi
  405f94:	aam    0xf7
  405f96:	sub    al,0x13
  405f98:	stos   DWORD PTR es:[edi],eax
  405f99:	sbb    DWORD PTR [edi-0x2aacb96e],0x45
  405fa0:	and    eax,0x77f94b35
  405fa5:	jno    0x405f52
  405fa7:	cld    
  405fa8:	push   eax
  405fa9:	int    0xf4
  405fab:	jl     0x405f73
  405fad:	adc    cl,BYTE PTR [ecx+ebp*4]
  405fb0:	jnp    0x405ff7
  405fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb3:	pusha  
  405fb4:	enter  0x578b,0xe
  405fb8:	rol    BYTE PTR [edx+0x54],cl
  405fbb:	push   es
  405fbc:	ja     0x406019
  405fbe:	or     bh,ah
  405fc0:	out    dx,al
  405fc1:	mov    ecx,0xf1177681
  405fc6:	ins    DWORD PTR es:[edi],dx
  405fc7:	iret   
  405fc8:	sub    al,0xee
  405fca:	gs mov bl,0x40
  405fcd:	mov    ebp,0xdbb8ebec
  405fd2:	or     edx,ebp
  405fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd5:	adc    esi,DWORD PTR [ebp-0x35]
  405fd8:	std    
  405fd9:	sahf   
  405fda:	sub    eax,0x6513a71d
  405fdf:	mov    al,ds:0x14c94c70
  405fe4:	jne    0x406032
  405fe6:	add    ah,bl
  405fe8:	(bad)  
  405fe9:	(bad)  [ebx+0x6c]
  405fec:	outs   dx,DWORD PTR ds:[esi]
  405fed:	retf   0x42e9
  405ff0:	adc    edi,esi
  405ff2:	popf   
  405ff3:	jns    0x405f9e
  405ff5:	sbb    eax,0x9eda8f02
  405ffa:	pushf  
  405ffb:	xchg   edx,eax
  405ffc:	xchg   ebx,eax
  405ffd:	dec    ebx
  405ffe:	nop
  405fff:	jmp    0x474b:0xa45ebba3
  406006:	(bad)  
  406007:	(bad)  
  406008:	mov    ecx,0x3477eaf8
  40600d:	mov    al,0x4d
  40600f:	cmp    al,0xab
  406011:	pop    eax
  406012:	popa   
  406013:	popa   
  406014:	cmp    cl,BYTE PTR [esi+ebx*1+0x6b]
  406018:	push   esp
  406019:	int3   
  40601a:	push   ecx
  40601b:	mov    ah,0xbe
  40601d:	arpl   WORD PTR [eax+eiz*1-0x43d69bc7],ax
  406024:	sub    al,0x80
  406026:	sbb    DWORD PTR [ecx-0x6a],ecx
  406029:	clc    
  40602a:	inc    esp
  40602b:	jmp    0x321:0x7c7cbc5
  406032:	ret    0x178e
  406035:	dec    ecx
  406036:	ja     0x40600c
  406038:	in     eax,0xd5
  40603a:	mov    al,ds:0x8c8bf49d
  40603f:	not    dl
  406041:	mov    bl,0x12
  406043:	inc    esi
  406044:	retf   
  406045:	inc    ebx
  406046:	xor    dh,dh
  406048:	sahf   
  406049:	pop    ebp
  40604a:	cwde   
  40604b:	mov    DWORD PTR [eax],edx
  40604d:	add    DWORD PTR [esi-0x4c],edx
  406050:	into   
  406051:	jge    0x406062
  406053:	cs add eax,0x4bbf9da5
  406059:	mov    ds:0x6aab53d0,al
  40605e:	dec    ebx
  40605f:	pop    ebp
  406060:	daa    
  406061:	popa   
  406062:	iret   
  406063:	dec    ebx
  406064:	icebp  
  406065:	jbe    0x406034
  406067:	pusha  
  406068:	dec    edx
  406069:	out    0x37,al
  40606b:	pop    ecx
  40606c:	push   ecx
  40606d:	push   0x51
  40606f:	cmp    bl,ch
  406071:	xchg   ebx,eax
  406072:	xor    dl,0x69
  406075:	pop    edx
  406076:	xchg   ebx,eax
  406077:	pop    eax
  406078:	das    
  406079:	fs inc ecx
  40607b:	(bad)  
  40607c:	stos   DWORD PTR es:[edi],eax
  40607d:	sbb    BYTE PTR [edx+esi*8],bl
  406080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406081:	out    0xad,al
  406083:	ja     0x406033
  406085:	imul   esp,eax,0xffffff98
  406088:	add    esp,DWORD PTR [esi-0x4]
  40608b:	xchg   DWORD PTR [edx],esi
  40608d:	cmc    
  40608e:	loopne 0x4060e0
  406090:	call   0x6cf2e3ed
  406095:	lds    esp,FWORD PTR [ebx]
  406097:	shl    ecx,1
  406099:	xlat   BYTE PTR ds:[ebx]
  40609a:	aaa    
  40609b:	adc    ch,BYTE PTR [esi+0x7d]
  40609e:	dec    esp
  40609f:	mov    cl,0x42
  4060a1:	push   es
  4060a2:	push   eax
  4060a3:	vminps xmm5,xmm7,XMMWORD PTR fs:[edi+0x53]
  4060a9:	scas   al,BYTE PTR es:[edi]
  4060aa:	ss add al,0xc1
  4060ad:	jne    0x406110
  4060af:	ror    DWORD PTR [esi],cl
  4060b1:	icebp  
  4060b2:	(bad)  
  4060b3:	push   esp
  4060b4:	ffree  st(0)
  4060b6:	mov    ds:0xa0481500,eax
  4060bb:	in     al,0xb1
  4060bd:	jle    0x40605e
  4060bf:	loope  0x4060ea
  4060c1:	add    eax,0xc146a924
  4060c6:	aas    
  4060c7:	xor    bl,BYTE PTR ds:0x5135451e
  4060cd:	stos   BYTE PTR es:[edi],al
  4060ce:	stos   BYTE PTR es:[edi],al
  4060cf:	ins    DWORD PTR es:[edi],dx
  4060d0:	enter  0x343c,0xda
  4060d4:	mov    ecx,0x662caa55
  4060d9:	iret   
  4060da:	sti    
  4060db:	jno    0x4060eb
  4060dd:	daa    
  4060de:	lods   al,BYTE PTR ds:[esi]
  4060df:	cli    
  4060e0:	push   edi
  4060e1:	test   BYTE PTR ds:0x2b391272,dh
  4060e7:	int    0x32
  4060e9:	adc    al,0xd4
  4060eb:	push   0xe18423d7
  4060f0:	push   cs
  4060f1:	test   DWORD PTR [ecx+0x7823d4],ebp
  4060f7:	(bad)
  4060fb:	imul   edx,DWORD PTR [edx+0x257398da],0xffffffd0
  406102:	clc    
  406103:	out    dx,eax
  406104:	jg     0x4060e1
  406106:	(bad)  
  406107:	cmp    esi,DWORD PTR [esi-0x4c8ad344]
  40610d:	(bad)  
  40610e:	enter  0x4501,0x26
  406112:	xchg   esi,eax
  406113:	cmp    eax,ebp
  406115:	push   cs
  406116:	mov    al,ds:0x2abf00de
  40611b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40611c:	sbb    BYTE PTR [edi-0x74],0xbb
  406120:	jmp    0x89696b33
  406125:	cmp    BYTE PTR [esi+0x4680f3f0],bl
  40612b:	xchg   ebp,eax
  40612c:	pop    edx
  40612d:	dec    DWORD PTR [esi]
  40612f:	hlt    
  406130:	add    ch,BYTE PTR [edi-0x10]
  406133:	call   0xd3f5:0x6d928a78
  40613a:	push   es
  40613b:	jmp    0x5425a78f
  406140:	and    eax,0x3811ab4
  406145:	xor    cl,bl
  406147:	sub    BYTE PTR [edi],cl
  406149:	test   BYTE PTR [eax+0x77afdaf4],al
  40614f:	les    eax,FWORD PTR [edx-0x55ce76fa]
  406155:	mov    dl,0x72
  406157:	icebp  
  406158:	dec    ebp
  406159:	pop    DWORD PTR [ecx+0x3e]
  40615c:	aaa    
  40615d:	loopne 0x4060df
  40615f:	dec    ecx
  406160:	pusha  
  406161:	sahf   
  406162:	outs   dx,BYTE PTR ds:[esi]
  406163:	mul    BYTE PTR [eax]
  406165:	inc    esi
  406166:	aas    
  406167:	adc    DWORD PTR [edx+0x3],eax
  40616a:	push   ebx
  40616b:	jne    0x4061b9
  40616d:	cli    
  40616e:	and    al,0x54
  406170:	or     eax,0x5867a391
  406175:	in     eax,dx
  406176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406177:	sbb    ah,al
  406179:	push   esp
  40617a:	call   0x928:0xd7a9
  406180:	ins    DWORD PTR es:[edi],dx
  406181:	data16 cmp cl,BYTE PTR [edx-0x63]
  406185:	loop   0x406193
  406187:	inc    ebp
  406188:	dec    ebx
  406189:	repnz adc al,0xab
  40618c:	lock push 0xcd62a9b4
  406192:	ret    
  406193:	iret   
  406194:	pop    edi
  406195:	les    edx,FWORD PTR [edi]
  406197:	cmp    BYTE PTR [edx-0x80],dh
  40619a:	xor    al,0xbd
  40619c:	scas   al,BYTE PTR es:[edi]
  40619d:	jno    0x406182
  40619f:	(bad)  
  4061a0:	dec    edi
  4061a1:	jg     0x406134
  4061a3:	jae    0x4061e0
  4061a5:	fcomp  QWORD PTR [edx*1-0x2ed1f4cc]
  4061ac:	xor    dl,bh
  4061ae:	cmp    BYTE PTR [eax+edi*4+0x77504f14],dh
  4061b5:	sub    al,0xa1
  4061b7:	inc    ebp
  4061b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b9:	pop    edx
  4061ba:	icebp  
  4061bb:	cs mov eax,0x5c6d4985
  4061c1:	push   esp
  4061c2:	sub    eax,0x7608f498
  4061c7:	mov    bh,0xce
  4061c9:	and    eax,0xd14978e5
  4061ce:	xchg   esp,eax
  4061cf:	sbb    ebp,DWORD PTR [ecx-0x29]
  4061d2:	loope  0x406248
  4061d4:	out    0xe0,eax
  4061d6:	fld    QWORD PTR [ebx+0x5f2e3bf9]
  4061dc:	xchg   esp,eax
  4061dd:	sbb    al,0x6c
  4061df:	mov    BYTE PTR [ecx],ah
  4061e1:	lea    edx,[esi-0x4642c07]
  4061e7:	jp     0x4061a3
  4061e9:	lods   eax,DWORD PTR ds:[esi]
  4061ea:	fsub   DWORD PTR [edi]
  4061ec:	jbe    0x4061b1
  4061ee:	adc    ch,BYTE PTR [ebp-0xec01f1e]
  4061f4:	mov    edx,0x8cfb882
  4061f9:	dec    edx
  4061fa:	mov    dh,0x84
  4061fc:	xchg   esp,eax
  4061fd:	das    
  4061fe:	inc    BYTE PTR [ebp+ebx*8-0x6]
  406202:	sub    eax,0x5c996e69
  406207:	inc    edx
  406208:	ins    DWORD PTR es:[edi],dx
  406209:	pusha  
  40620a:	inc    esp
  40620b:	mov    dl,0x9d
  40620d:	and    edx,edi
  40620f:	sub    esi,edi
  406211:	iret   
  406212:	and    esp,DWORD PTR [edi+0xe055a87]
  406218:	push   ss
  406219:	mov    ecx,ebx
  40621b:	shl    BYTE PTR [edi+edi*8+0x33],1
  40621f:	es mov dh,0x2c
  406222:	outs   dx,DWORD PTR ds:[esi]
  406223:	imul   ecx,ebp,0x83f62738
  406229:	or     eax,edx
  40622b:	xor    BYTE PTR [ebx-0x64],ah
  40622e:	pop    edx
  40622f:	inc    edi
  406230:	sub    al,0xda
  406232:	imul   ebx,DWORD PTR [edi-0xdddeaa2],0x5f984464
  40623c:	or     eax,0x236f9dbf
  406241:	adc    cl,BYTE PTR [edx]
  406243:	repnz scas al,BYTE PTR es:[edi]
  406245:	xchg   ecx,eax
  406246:	icebp  
  406247:	mov    ebp,ecx
  406249:	xchg   esp,eax
  40624a:	dec    esp
  40624b:	sbb    DWORD PTR [ebx+0x6a],0xffffffff
  40624f:	push   es
  406250:	out    0xc4,al
  406252:	pop    ds
  406253:	xchg   edx,eax
  406254:	pop    ebp
  406255:	bound  edi,QWORD PTR [esi+ebp*4-0xf]
  406259:	clc    
  40625a:	ja     0x40624b
  40625c:	adc    DWORD PTR [ecx-0x38924868],esi
  406262:	push   esi
  406263:	inc    BYTE PTR [edx+eiz*8]
  406266:	ins    BYTE PTR es:[edi],dx
  406267:	test   DWORD PTR ds:0xad3716e6,esi
  40626d:	and    al,0x38
  40626f:	and    ebp,ebp
  406271:	ds enter 0xea85,0x6d
  406276:	adc    eax,0x53e15911
  40627b:	lods   eax,DWORD PTR ds:[esi]
  40627c:	ss in  eax,0x47
  40627f:	ss push ecx
  406281:	pop    esp
  406282:	dec    ebp
  406283:	aam    0x8b
  406285:	xor    eax,DWORD PTR [eax]
  406287:	pop    eax
  406288:	mov    al,ds:0x72f5521e
  40628d:	pusha  
  40628e:	popa   
  40628f:	jbe    0x406286
  406291:	mov    ecx,0xb34cab17
  406296:	lods   al,BYTE PTR ds:[esi]
  406297:	push   ds
  406298:	inc    ebp
  406299:	mov    esi,0x27799bdf
  40629e:	lea    edi,[eax-0xa68a31]
  4062a4:	fdivrp st(5),st
  4062a6:	test   eax,0xc5b311a
  4062ab:	mov    ch,0x38
  4062ad:	scas   al,BYTE PTR es:[edi]
  4062ae:	int3   
  4062af:	into   
  4062b0:	adc    ecx,DWORD PTR [ebx-0x68]
  4062b3:	cwde   
  4062b4:	bsr    edi,edx
  4062b7:	xchg   ebx,eax
  4062b8:	(bad)  
  4062b9:	inc    ebx
  4062ba:	cmp    dh,BYTE PTR [esi-0x73]
  4062bd:	xor    ah,bl
  4062bf:	jp     0x4062c5
  4062c1:	fistp  DWORD PTR [edi+0x3df2e017]
  4062c7:	addr16 inc edx
  4062c9:	inc    eax
  4062ca:	sbb    eax,0xf4b1eda4
  4062cf:	mov    ebp,0x3cd7bddb
  4062d4:	ror    DWORD PTR [edi],1
  4062d6:	sub    dl,BYTE PTR [ebx+0x667214fd]
  4062dc:	dec    eax
  4062dd:	mov    bl,0x99
  4062df:	pushf  
  4062e0:	dec    ebp
  4062e1:	loop   0x40626e
  4062e3:	int3   
  4062e4:	cmp    al,BYTE PTR [esi+0x6e742458]
  4062ea:	and    al,0x96
  4062ec:	inc    ebx
  4062ed:	mov    al,ds:0xe3260fb9
  4062f2:	mov    ds:0x49b92d9a,eax
  4062f7:	icebp  
  4062f8:	dec    esp
  4062f9:	push   es
  4062fa:	out    0xb7,eax
  4062fc:	es rcr edi,1
  4062ff:	add    ebx,DWORD PTR [ebx]
  406301:	push   eax
  406302:	test   BYTE PTR [edi],0x1d
  406305:	sbb    al,0xbd
  406307:	scas   al,BYTE PTR es:[edi]
  406308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406309:	cli    
  40630a:	fdiv   QWORD PTR [edi]
  40630c:	mov    ecx,0x9b049917
  406311:	cmp    BYTE PTR [ecx],al
  406313:	jae    0x406348
  406315:	(bad)  
  406316:	and    al,BYTE PTR [ecx+0x2d1ef1c5]
  40631c:	mov    dl,0x6a
  40631e:	push   edx
  40631f:	es mov ebp,0xa09476c0
  406325:	adc    dh,BYTE PTR [edi+0x176da026]
  40632b:	cld    
  40632c:	js     0x406385
  40632e:	mov    edi,DWORD PTR [ebp+esi*1+0x613a5130]
  406335:	pop    es
  406336:	xor    BYTE PTR [eax-0x23],bl
  406339:	and    edx,eax
  40633b:	and    eax,0xcd8a487d
  406340:	jmp    0x9c76:0x1d82a43f
  406347:	cmp    eax,0xea0f51df
  40634c:	fisubr DWORD PTR [esi+0x535fe24b]
  406352:	mov    WORD PTR [eax+0x4c],es
  406355:	pop    ss
  406356:	pop    edx
  406357:	sub    BYTE PTR [edx+esi*2-0x46],0x25
  40635c:	mov    ah,0x45
  40635e:	ins    DWORD PTR es:[edi],dx
  40635f:	inc    edx
  406360:	xchg   esi,eax
  406361:	xchg   edx,eax
  406362:	or     eax,0x19f6021
  406367:	push   ds
  406368:	lea    esi,[eax-0xdc25f4a]
  40636e:	inc    DWORD PTR [ebp+0x5d]
  406371:	xor    DWORD PTR [eax-0x14ed7da1],0x5f
  406378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406379:	jecxz  0x40637e
  40637b:	mov    dl,0xf0
  40637d:	sbb    al,ah
  40637f:	mov    eax,0xf9b7448b
  406384:	mov    ebp,0xd4bde4b3
  406389:	xor    eax,DWORD PTR [edx-0x22133f36]
  40638f:	data16 outs dx,BYTE PTR ds:[esi]
  406391:	jmp    0x67f:0x2087da81
  406398:	add    DWORD PTR [ecx],ebx
  40639a:	aaa    
  40639b:	mov    eax,ds:0x537b1c9a
  4063a0:	sbb    eax,0x1bcad7a0
  4063a5:	inc    ebp
  4063a6:	or     eax,0x3d97d078
  4063ab:	xor    cl,BYTE PTR [eax-0x5e99f63e]
  4063b1:	mov    ebx,DWORD PTR [ebx]
  4063b3:	idiv   edi
  4063b5:	stc    
  4063b6:	(bad)  
  4063b7:	sub    eax,0x5ebfd7cf
  4063bc:	mov    esp,0x77646037
  4063c1:	and    DWORD PTR [ecx-0x756d2342],esi
  4063c7:	inc    edi
  4063c8:	xchg   esp,eax
  4063c9:	xlat   BYTE PTR ds:[ebx]
  4063ca:	retf   0x3f29
  4063cd:	mov    ch,0xa6
  4063cf:	ror    BYTE PTR [edi-0x40],1
  4063d2:	cwde   
  4063d3:	repz push esp
  4063d5:	xor    DWORD PTR [eax],0xffffffca
  4063d8:	shr    BYTE PTR [ebp+0x311225d5],cl
  4063de:	lods   eax,DWORD PTR ds:[esi]
  4063df:	neg    DWORD PTR [edx]
  4063e1:	push   edi
  4063e2:	pop    es
  4063e3:	xchg   DWORD PTR [eax+ebp*8],eax
  4063e6:	adc    al,0x5d
  4063e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e9:	jp     0x4063ec
  4063eb:	cld    
  4063ec:	sahf   
  4063ed:	mov    esi,0x1a71be30
  4063f2:	loope  0x4063c5
  4063f4:	or     DWORD PTR [eax-0x29e97842],0x36
  4063fb:	mov    ebx,0x60b74307
  406400:	push   ds
  406401:	gs stc 
  406403:	sahf   
  406404:	jp     0x40638d
  406406:	push   ecx
  406407:	(bad)  
  406408:	sub    eax,0x1df3a5e7
  40640d:	mov    ah,0xe3
  40640f:	out    0x2f,eax
  406411:	push   cs
  406412:	mov    WORD PTR [eax],gs
  406414:	scas   eax,DWORD PTR es:[edi]
  406415:	lahf   
  406416:	xor    al,BYTE PTR [eax-0x337327df]
  40641c:	pop    edx
  40641d:	adc    ecx,DWORD PTR [esi+eax*4]
  406420:	pop    ss
  406421:	sbb    dh,BYTE PTR [esi]
  406423:	or     edx,DWORD PTR [ebx]
  406425:	ret    
  406426:	xchg   esi,eax
  406427:	cmp    eax,0xd7665f18
  40642c:	cmp    eax,0x7ea6dd52
  406431:	test   eax,0x73b32dd9
  406436:	and    DWORD PTR [eax+edx*2],edx
  406439:	push   es
  40643a:	ret    
  40643b:	je     0x406455
  40643d:	mov    esi,0x65a6ab59
  406442:	pop    ebp
  406443:	addr16 cmp esp,edx
  406446:	and    DWORD PTR [edi],ebx
  406448:	imul   ebx,DWORD PTR [esi-0x2bb66904],0xffffffc4
  40644f:	int3   
  406450:	push   ds
  406451:	xor    ch,BYTE PTR [edi-0x11ebfbf4]
  406457:	(bad)  
  406458:	sub    dl,BYTE PTR [ebx-0x5b]
  40645b:	cmp    edx,DWORD PTR [esi+0x59]
  40645e:	xchg   DWORD PTR ds:0xacd078aa,edi
  406464:	fsubr  DWORD PTR [ebp+0x64353e75]
  40646a:	jmp    0xe1464539
  40646f:	(bad)  
  406470:	lock inc esi
  406472:	rol    cl,cl
  406474:	out    dx,eax
  406475:	call   0xf5c351ab
  40647a:	aad    0x2f
  40647c:	es xor al,0x67
  40647f:	xchg   ebp,eax
  406480:	pusha  
  406481:	mov    eax,0xb07a3995
  406486:	or     eax,0x92280a01
  40648b:	xchg   esp,eax
  40648c:	xchg   edx,eax
  40648d:	fcom   DWORD PTR [edx+esi*2]
  406490:	test   eax,0x2e42b3
  406495:	fwait
  406496:	jne    0x406434
  406498:	mov    edx,0xb21f35c6
  40649d:	mov    ds:0xaeead479,al
  4064a2:	mov    ah,BYTE PTR [ebx]
  4064a4:	xchg   BYTE PTR [edx-0x74ec7786],dh
  4064aa:	jmp    0x4064b8
  4064ac:	popf   
  4064ad:	test   cl,ch
  4064af:	popf   
  4064b0:	scas   al,BYTE PTR es:[edi]
  4064b1:	mov    bh,0x31
  4064b3:	sbb    bl,BYTE PTR [edi*4+0x23cf9243]
  4064ba:	cmp    al,0x2d
  4064bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064bd:	lahf   
  4064be:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4064c0:	sub    DWORD PTR [ecx+edi*1-0x234e218a],ecx
  4064c7:	push   ecx
  4064c8:	out    0xb,eax
  4064ca:	gs ror esp,0xb3
  4064ce:	repz mov bl,0x9c
  4064d1:	xlat   BYTE PTR ds:[ebx]
  4064d2:	xchg   esi,eax
  4064d3:	mov    esi,0x2369241a
  4064d8:	(bad)  
  4064d9:	ins    BYTE PTR es:[edi],dx
  4064da:	inc    esp
  4064db:	imul   BYTE PTR [eax+0x510a54d7]
  4064e1:	add    eax,0x6833ccdc
  4064e6:	xor    eax,0xc90f769e
  4064eb:	ins    DWORD PTR es:[edi],dx
  4064ec:	and    BYTE PTR [esi],0x24
  4064ef:	call   0x2e0958b3
  4064f4:	mov    ch,0x4b
  4064f6:	pop    eax
  4064f7:	(bad)  
  4064f9:	inc    eax
  4064fa:	imul   edi,DWORD PTR [edx],0x3e
  4064fd:	out    0xf6,al
  4064ff:	xchg   ecx,eax
  406500:	xchg   ebx,eax
  406501:	out    dx,al
  406502:	push   edx
  406503:	xchg   esi,eax
  406504:	inc    esi
  406505:	lds    ecx,FWORD PTR [edi-0x41]
  406508:	retf   
  406509:	pop    ebx
  40650a:	es data16 out 0xa9,al
  40650e:	xchg   esi,eax
  40650f:	addr16 dec ebp
  406511:	inc    eax
  406512:	cmp    al,0xf0
  406514:	call   0x4750:0xe730a181
  40651b:	mov    ch,0xa4
  40651d:	sub    BYTE PTR [edi],ch
  40651f:	mov    bl,0xc1
  406521:	data16 (bad) 
  406523:	jns    0x406545
  406525:	xchg   esp,eax
  406526:	lods   al,BYTE PTR ds:[esi]
  406527:	adc    ebx,DWORD PTR [ebp-0x69b51865]
  40652d:	adc    edx,ecx
  40652f:	and    ecx,DWORD PTR [ebp-0x7ad453c]
  406535:	inc    ebp
  406536:	mov    bl,0x8
  406538:	pop    ebp
  406539:	aam    0x1a
  40653b:	scas   eax,DWORD PTR es:[edi]
  40653c:	or     eax,edx
  40653e:	outs   dx,BYTE PTR ds:[esi]
  40653f:	mov    ebp,0x960c5f8a
  406544:	outs   dx,BYTE PTR ds:[esi]
  406545:	hlt    
  406546:	mov    esi,0xb1cffa02
  40654b:	add    cl,BYTE PTR [ebx]
  40654d:	jle    0x406598
  40654f:	gs mov ah,0x16
  406552:	adc    al,0xa3
  406554:	mov    DWORD PTR [esp+ecx*1+0x4c67e99c],edi
  40655b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40655c:	mov    esp,0xdbf7de4a
  406561:	int3   
  406562:	fwait
  406563:	cmp    bh,BYTE PTR [edi]
  406565:	mov    DWORD PTR [edx-0x18],edx
  406568:	mov    ds:0x5f7b870f,eax
  40656d:	pop    ds
  40656e:	sub    al,0xf9
  406570:	pop    edx
  406571:	js     0x40650e
  406573:	adc    BYTE PTR [ecx+0x2ec70441],dl
  406579:	ins    DWORD PTR es:[edi],dx
  40657a:	xchg   edx,eax
  40657b:	inc    ecx
  40657c:	sbb    edi,DWORD PTR [edi+esi*8-0xe]
  406580:	pop    ebx
  406581:	int    0x4c
  406583:	inc    BYTE PTR [edi+0x7d]
  406586:	jno    0x4065d3
  406588:	mov    al,0x7b
  40658a:	stos   BYTE PTR es:[edi],al
  40658b:	sbb    BYTE PTR [ecx+0x75bd6b7f],cl
  406591:	bound  ebp,QWORD PTR [ecx+0x6fa4a3cf]
  406597:	and    eax,0x279aa0c4
  40659c:	or     BYTE PTR [esi+0x7e72ad0e],cl
  4065a2:	test   BYTE PTR ss:[ebp+0x7c026d1f],al
  4065a9:	call   0xfba6a66c
  4065ae:	or     eax,0x70065524
  4065b3:	loopne 0x4065f5
  4065b5:	and    ax,0xee29
  4065b9:	mov    edx,0x6c476389
  4065be:	inc    esi
  4065bf:	out    dx,al
  4065c0:	shl    dh,0x1
  4065c3:	test   eax,0x144a8204
  4065c8:	xchg   ecx,eax
  4065c9:	cmp    dh,BYTE PTR [ecx]
  4065cb:	(bad)  
  4065cd:	mov    ah,0xa2
  4065cf:	dec    esp
  4065d0:	enter  0x2efd,0xc6
  4065d4:	lock mov ebp,0xb9783b74
  4065da:	add    al,0x83
  4065dc:	pusha  
  4065dd:	push   ds
  4065de:	dec    ebx
  4065df:	test   al,0x24
  4065e1:	sti    
  4065e2:	ds dec esp
  4065e4:	push   es
  4065e5:	or     al,0x83
  4065e7:	scas   eax,DWORD PTR es:[edi]
  4065e8:	cmp    al,0xd8
  4065ea:	stos   BYTE PTR es:[edi],al
  4065eb:	xor    al,0x45
  4065ed:	lods   eax,DWORD PTR ds:[esi]
  4065ee:	sar    ch,cl
  4065f0:	loope  0x406597
  4065f2:	sbb    al,0x7c
  4065f5:	or     edi,DWORD PTR [ecx*2+0x7438548d]
  4065fc:	push   0xaa9e256d
  406601:	dec    edx
  406602:	mov    ch,0x49
  406604:	xchg   ebp,eax
  406605:	push   edx
  406606:	fwait
  406607:	jmp    0xf67eda6c
  40660c:	mov    al,ds:0x48ffe417
  406611:	test   DWORD PTR [ecx],ebp
  406613:	outs   dx,DWORD PTR ds:[esi]
  406614:	sub    dl,0x2
  406617:	fs sub eax,0x242b838c
  40661d:	xlat   BYTE PTR ds:[ebx]
  40661e:	push   edx
  40661f:	lahf   
  406620:	push   edi
  406621:	pop    esp
  406622:	daa    
  406623:	sub    edi,0x8592c73f
  406629:	ret    0x75a4
  40662c:	xchg   edx,eax
  40662d:	mov    ebp,0x4829778c
  406632:	inc    ebp
  406633:	and    dl,dh
  406635:	xchg   ebx,eax
  406636:	cwde   
  406637:	out    0x50,al
  406639:	mov    bh,0x74
  40663b:	xor    ecx,ebp
  40663d:	add    eax,ebp
  40663f:	adc    bl,bh
  406641:	call   DWORD PTR [esi+0x42734a96]
  406647:	cmp    BYTE PTR [ebp-0x217d4e91],ah
  40664d:	or     DWORD PTR [ebp-0x5f],ebx
  406650:	push   es
  406651:	ds xor al,0xf4
  406654:	xchg   ecx,eax
  406655:	cmp    BYTE PTR [ebx-0x2f],ah
  406658:	loope  0x406655
  40665a:	sub    edi,DWORD PTR [ecx]
  40665c:	pop    ebp
  40665d:	mov    bl,0x7c
  40665f:	sbb    BYTE PTR [edx],bl
  406661:	mov    ecx,0x4951bf2b
  406666:	fild   QWORD PTR [eax-0x409eee44]
  40666c:	jmp    0x29ba4844
  406671:	call   DWORD PTR [edx+eax*8-0x6c]
  406675:	add    BYTE PTR [esi-0x3e],ch
  406678:	out    0xd,eax
  40667a:	mov    al,ds:0x4beb0bf2
  40667f:	ror    DWORD PTR [edi+0x1d57f6cc],1
  406685:	add    DWORD PTR [edi-0x2c],ecx
  406688:	mov    al,ds:0xcadd4b83
  40668d:	fldcw  WORD PTR [eax]
  40668f:	adc    edx,DWORD PTR [edi+0xe1ba9a]
  406695:	add    DWORD PTR [ecx+0xc1d94ff],ecx
  40669b:	xchg   edi,eax
  40669c:	sbb    DWORD PTR [eax],0xffffff80
  40669f:	mov    al,ds:0x749a0dbf
  4066a4:	js     0x406642
  4066a6:	dec    esp
  4066a7:	fcom   st(7)
  4066a9:	mov    ebx,ecx
  4066ab:	fisub  DWORD PTR [eax-0x1e]
  4066ae:	cmc    
  4066af:	pop    ebx
  4066b0:	jmp    0x406731
  4066b2:	cmp    BYTE PTR [ecx],ah
  4066b4:	xor    BYTE PTR [edi-0x3a],0xf3
  4066b8:	fld    DWORD PTR [ebp-0x3b78837b]
  4066be:	and    edx,DWORD PTR [ebp+eax*1-0x75]
  4066c2:	adc    al,BYTE PTR [ecx+0x4802d44d]
  4066c8:	xor    eax,0xd5e5e606
  4066cd:	test   eax,0x867a9aeb
  4066d2:	xor    ah,BYTE PTR [esi]
  4066d4:	add    bh,bh
  4066d6:	adc    BYTE PTR [edi+0x72390da8],ch
  4066dc:	cs (bad) 
  4066de:	adc    edi,DWORD PTR [eax-0x25]
  4066e1:	pop    es
  4066e2:	sub    BYTE PTR [edi+0x6f],ah
  4066e5:	mov    eax,0x3f67dbb2
  4066ea:	push   esi
  4066eb:	outs   dx,DWORD PTR ds:[esi]
  4066ec:	push   cs
  4066ed:	or     DWORD PTR [ebx+0x78],edi
  4066f0:	inc    edx
  4066f1:	xor    DWORD PTR [eax-0x64],ebx
  4066f4:	in     eax,0xe0
  4066f6:	xchg   ebx,eax
  4066f7:	nop
  4066f8:	shr    DWORD PTR [ebx+0x53],1
  4066fb:	sub    BYTE PTR [esi+0x46],dh
  4066fe:	lods   al,BYTE PTR ds:[esi]
  4066ff:	sti    
  406700:	inc    esp
  406701:	pop    ebp
  406702:	push   ss
  406703:	ret    
  406704:	or     ebx,DWORD PTR [ecx+0x52c11c6d]
  40670a:	dec    edx
  40670b:	sub    DWORD PTR ds:0xd784397f,edi
  406711:	mov    ecx,0x46e9f795
  406716:	pop    ecx
  406717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406718:	or     eax,0x733d146a
  40671d:	fidivr WORD PTR [edi*8-0x5677a486]
  406724:	xor    ebx,DWORD PTR [eax+0x5ea3418a]
  40672a:	outs   dx,DWORD PTR ds:[esi]
  40672b:	dec    ebx
  40672c:	pop    es
  40672d:	cmp    ch,BYTE PTR [edi-0x77]
  406730:	mov    ebx,0xd98e03c7
  406735:	xchg   edi,eax
  406736:	cmp    eax,0x42639872
  40673b:	in     al,dx
  40673c:	stos   DWORD PTR es:[edi],eax
  40673d:	mov    ebp,0x157d2c58
  406742:	mov    dl,0xf
  406744:	pusha  
  406745:	cld    
  406746:	xchg   DWORD PTR ds:0xf1d6efc1,ecx
  40674c:	mov    fs:0xe980abc,eax
  406752:	jo     0x406782
  406754:	mov    bl,0x6d
  406756:	xlat   BYTE PTR ds:[ebx]
  406757:	mov    al,BYTE PTR [edi+0x293cc556]
  40675d:	(bad)  
  40675e:	retf   
  40675f:	pop    esp
  406760:	pop    ss
  406761:	into   
  406762:	test   BYTE PTR [esi+0x26],dh
  406765:	mov    edx,0x846c87fe
  40676a:	mov    ecx,0xc12eaf9b
  40676f:	(bad)  
  406770:	cdq    
  406771:	in     eax,0x78
  406773:	sbb    DWORD PTR [ecx-0x45],0xffffff87
  406777:	xor    dh,BYTE PTR [esi]
  406779:	in     al,0xe2
  40677b:	xor    eax,0x982fc963
  406780:	push   0xffffff81
  406782:	cmp    al,0xcc
  406784:	lock stc 
  406786:	(bad)  
  406787:	sbb    eax,0x999a6535
  40678c:	jmp    0x27f271d
  406791:	shl    DWORD PTR ds:0x120fd481,cl
  406797:	mov    ds:0x674a7193,eax
  40679c:	in     al,0xf3
  40679e:	jge    0x406736
  4067a0:	mov    dh,0xc0
  4067a2:	fadd   st(2),st
  4067a4:	fidivr WORD PTR [ecx+0x14]
  4067a7:	sub    eax,0xbcdf48c5
  4067ac:	jb     0x406756
  4067ae:	jbe    0x406731
  4067b0:	shl    BYTE PTR [eax],cl
  4067b2:	setle  BYTE PTR [esi-0x7c]
  4067b6:	adc    ch,bh
  4067b8:	and    cl,BYTE PTR [edx+ecx*4-0x549d90cf]
  4067bf:	scas   al,BYTE PTR es:[edi]
  4067c0:	xchg   edx,eax
  4067c1:	add    eax,0x4008ee87
  4067c6:	and    ah,BYTE PTR [edx+0x37cc990e]
  4067cc:	mov    eax,0x5b435032
  4067d1:	inc    esp
  4067d2:	popf   
  4067d3:	xchg   ebx,eax
  4067d4:	lods   eax,DWORD PTR ds:[esi]
  4067d5:	stos   BYTE PTR es:[edi],al
  4067d6:	stos   BYTE PTR es:[edi],al
  4067d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d8:	nop
  4067d9:	or     eax,0x4dd92d96
  4067de:	sti    
  4067df:	jmp    0x5472:0x6e906b31
  4067e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067e7:	loopne 0x406853
  4067e9:	add    BYTE PTR [esi+0x3d0c1244],bh
  4067ef:	xchg   edi,eax
  4067f0:	shl    DWORD PTR [eax],cl
  4067f2:	cmp    BYTE PTR [eax+ecx*4-0x3fbeaf81],dl
  4067f9:	das    
  4067fa:	in     eax,dx
  4067fb:	cli    
  4067fc:	cli    
  4067fd:	mov    esp,0xfa7f56f9
  406802:	imul   ebp,DWORD PTR [ebp-0x4f],0xfffffffb
  406806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406807:	mov    edx,0xe9fcb441
  40680c:	xor    al,BYTE PTR [edi-0xbe5a1f8]
  406812:	cmp    eax,0xf5afb8de
  406817:	ins    BYTE PTR es:[edi],dx
  406818:	fnstsw WORD PTR [ebx-0x6b5dfa99]
  40681e:	hlt    
  40681f:	icebp  
  406820:	sub    bl,dh
  406822:	aaa    
  406823:	cmp    DWORD PTR [ecx-0x39],0x37
  406827:	ds or  eax,0xd96d31c1
  40682d:	loop   0x40685d
  40682f:	add    eax,0xc68403d9
  406834:	(bad)  
  406835:	mov    ecx,0xa41d09e4
  40683a:	xchg   bh,ch
  40683c:	jo     0x406873
  40683e:	out    dx,al
  40683f:	pop    esp
  406840:	ja     0x1633cafb
  406846:	loope  0x4067ee
  406848:	and    edi,DWORD PTR [ebp+ebx*4+0x7d]
  40684c:	in     al,0x5a
  40684e:	repnz loop 0x40680c
  406851:	sub    BYTE PTR [esi+ebp*1],cl
  406854:	fwait
  406855:	inc    edx
  406856:	adc    dl,dh
  406858:	or     DWORD PTR gs:[ecx-0x5e77679e],esp
  40685f:	retf   0xebd6
  406862:	cli    
  406863:	mov    ch,0x51
  406865:	or     ebx,eax
  406867:	inc    ebp
  406868:	shr    DWORD PTR [ebp-0x78],cl
  40686b:	lahf   
  40686c:	test   BYTE PTR [ebx+0x4f6237b2],0xe2
  406873:	dec    esp
  406874:	sbb    BYTE PTR [edi-0x1],bh
  406877:	lock arpl WORD PTR [eax],cx
  40687a:	gs mov ebp,0x85415c54
  406880:	sub    al,0x4
  406882:	and    eax,0x220bc633
  406887:	jg     0x406815
  406889:	jg     0x406865
  40688b:	mov    dh,0xee
  40688d:	sub    BYTE PTR [edi],dl
  40688f:	scas   eax,DWORD PTR es:[edi]
  406890:	add    eax,0xac2f0005
  406895:	(bad)  
  406896:	leave  
  406897:	scas   al,BYTE PTR es:[edi]
  406898:	mov    eax,0x3214598e
  40689d:	adc    edx,DWORD PTR [eax]
  40689f:	pop    ebp
  4068a0:	hlt    
  4068a1:	ins    BYTE PTR es:[edi],dx
  4068a2:	ret    0x57f4
  4068a5:	arpl   WORD PTR [ecx-0x5d],si
  4068a8:	push   esp
  4068a9:	sti    
  4068aa:	mov    cl,0xbf
  4068ac:	sub    DWORD PTR [ebx-0x49],esp
  4068af:	das    
  4068b0:	(bad)  
  4068b1:	cmp    eax,0xf2f46c09
  4068b6:	mov    esi,0x3413a921
  4068bb:	dec    edx
  4068bc:	stos   BYTE PTR es:[edi],al
  4068bd:	sub    bl,BYTE PTR [esi+0x325d1518]
  4068c3:	ror    DWORD PTR [ebx],cl
  4068c5:	lods   eax,DWORD PTR ds:[esi]
  4068c6:	jo     0x406905
  4068c8:	pop    esi
  4068c9:	mov    dl,BYTE PTR [edx-0x78]
  4068cc:	and    BYTE PTR [ecx+ebp*4+0x2],ch
  4068d0:	or     esi,DWORD PTR [edx-0x3dc6596d]
  4068d6:	mov    ebp,0x1435b016
  4068db:	cmp    dh,BYTE PTR [ecx+0x14]
  4068de:	jecxz  0x4068f3
  4068e0:	jne    0x406887
  4068e2:	lahf   
  4068e3:	in     eax,0x37
  4068e5:	inc    ebx
  4068e6:	sbb    al,0x85
  4068e8:	pop    ebp
  4068e9:	push   0x32958567
  4068ee:	inc    esi
  4068ef:	mov    esp,0x5d97fbc5
  4068f4:	aas    
  4068f5:	xchg   ebx,eax
  4068f6:	adc    DWORD PTR [esi],0x554d94bb
  4068fc:	cld    
  4068fd:	mov    esi,0xcfa6e93a
  406902:	adc    BYTE PTR [edx+0x14],dh
  406905:	movaps xmm4,XMMWORD PTR [ecx]
  406908:	push   esi
  406909:	ja     0x406939
  40690b:	pop    ds
  40690c:	jmp    0x23a5:0x6be438d6
  406913:	ja     0x406993
  406915:	jae    0x4068ae
  406917:	call   DWORD PTR [edi+0x42b604da]
  40691d:	dec    ecx
  40691e:	fsubr  st(1),st
  406920:	std    
  406921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406922:	ret    
  406923:	pop    ds
  406924:	or     al,0xed
  406926:	inc    ecx
  406927:	adc    ebx,0x525d9156
  40692d:	pop    es
  40692e:	mov    edx,0xd787a5db
  406933:	cmp    cl,BYTE PTR [esi+0x7d]
  406936:	dec    eax
  406937:	mov    fs,WORD PTR [esi-0x33]
  40693a:	aaa    
  40693b:	add    al,0xe2
  40693d:	fld    st(7)
  40693f:	inc    eax
  406940:	mov    DWORD PTR [ebx],ebx
  406942:	push   ecx
  406943:	call   0x3497d19e
  406948:	(bad)
  40694c:	je     0x4068ed
  40694e:	daa    
  40694f:	jae    0x406910
  406951:	jae    0x406967
  406953:	int3   
  406954:	jnp    0x406975
  406956:	cmp    DWORD PTR [ebp+0x3],esi
  406959:	cmp    ecx,DWORD PTR [ebx+0x9]
  40695c:	push   ds
  40695d:	mov    dh,0xa
  40695f:	pop    eax
  406960:	retf   0xe80a
  406963:	(bad)  
  406964:	jne    0x4069cb
  406966:	leave  
  406967:	inc    ebx
  406968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406969:	mov    ecx,DWORD PTR [edx-0x2]
  40696c:	out    dx,al
  40696d:	std    
  40696e:	daa    
  40696f:	popf   
  406970:	int3   
  406971:	not    bl
  406973:	js     0x40693e
  406975:	mov    ebx,0xb5f64cee
  40697a:	jbe    0x406928
  40697c:	int    0xd5
  40697e:	dec    edi
  40697f:	bound  esp,QWORD PTR [ebp-0x44]
  406982:	pop    esp
  406983:	sbb    ch,ah
  406985:	les    esp,FWORD PTR [eax+0x54]
  406988:	or     al,0x7f
  40698a:	xchg   BYTE PTR [ecx],bl
  40698c:	icebp  
  40698d:	jae    0x406984
  40698f:	ins    DWORD PTR es:[edi],dx
  406990:	test   DWORD PTR [edi],0x47ace98c
  406996:	inc    ecx
  406997:	push   es
  406998:	inc    edx
  406999:	rol    DWORD PTR [ebx+0x19944aa6],cl
  40699f:	fdiv   QWORD PTR [ecx-0x4d]
  4069a2:	sub    cl,BYTE PTR [esi-0x11]
  4069a5:	mov    dl,0x5e
  4069a7:	popa   
  4069a8:	int    0x46
  4069aa:	add    BYTE PTR [ecx-0x2cb4e96b],al
  4069b0:	cwde   
  4069b1:	jecxz  0x40693b
  4069b3:	aaa    
  4069b4:	rol    DWORD PTR [eax],1
  4069b6:	imul   edx,DWORD PTR [edi-0x7dfa7485],0x68
  4069bd:	lahf   
  4069be:	fdivr  QWORD PTR [ebx+0x24]
  4069c1:	push   edi
  4069c2:	sub    bl,ch
  4069c4:	loop   0x406a2a
  4069c6:	and    ah,dl
  4069c8:	mov    BYTE PTR [edx],cl
  4069ca:	gs into 
  4069cc:	and    BYTE PTR [edx+0xb],ch
  4069cf:	xchg   ebp,eax
  4069d0:	and    ecx,DWORD PTR [ebx]
  4069d2:	fiadd  DWORD PTR ds:0x3a29addd
  4069d8:	in     al,0xfa
  4069da:	pusha  
  4069db:	loop   0x4069dd
  4069dd:	xor    eax,0x92aea353
  4069e2:	stos   DWORD PTR es:[edi],eax
  4069e3:	les    edx,FWORD PTR [eax+0x6a]
  4069e6:	pop    ds
  4069e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e8:	and    edx,edi
  4069ea:	nop
  4069eb:	(bad)  
  4069ec:	inc    ecx
  4069ed:	xor    al,0x79
  4069ef:	daa    
  4069f0:	dec    edx
  4069f1:	push   esp
  4069f2:	cmp    DWORD PTR ss:[ebp-0x16],esi
  4069f6:	jbe    0x406a22
  4069f8:	lods   al,BYTE PTR ds:[esi]
  4069f9:	mov    BYTE PTR [edx+ecx*8],dl
  4069fc:	sbb    eax,0x83fc314d
  406a01:	fst    DWORD PTR [ecx]
  406a03:	pop    ds
  406a04:	jbe    0x406a82
  406a06:	pop    esp
  406a07:	out    dx,eax
  406a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a09:	inc    eax
  406a0a:	fwait
  406a0b:	inc    DWORD PTR [ecx+0x73]
  406a0e:	pop    edi
  406a0f:	xor    bh,BYTE PTR [ecx-0x5d]
  406a12:	cmp    al,0xb0
  406a14:	xchg   BYTE PTR [edi+0x4d],bl
  406a17:	sbb    ecx,DWORD PTR [eax+0x25273220]
  406a1d:	mov    eax,ds:0x580a90b8
  406a22:	cmp    al,0xfc
  406a24:	retf   0xe533
  406a27:	xchg   esp,eax
  406a28:	push   0x612c7027
  406a2d:	gs stos DWORD PTR es:[edi],eax
  406a2f:	int    0x98
  406a31:	mov    al,0xe6
  406a33:	or     eax,0x56b436bc
  406a38:	ss pop edi
  406a3a:	adc    bl,ah
  406a3c:	cmp    al,0xdd
  406a3e:	adc    DWORD PTR [edx],0xfffffffb
  406a41:	aad    0xe4
  406a43:	adc    esi,esp
  406a45:	ins    BYTE PTR es:[edi],dx
  406a46:	stc    
  406a47:	pushf  
  406a48:	mov    bl,BYTE PTR [ebx+0x372e52eb]
  406a4e:	scas   al,BYTE PTR es:[edi]
  406a4f:	jp     0x406a79
  406a51:	cmp    DWORD PTR [esi+edi*2-0x30b6f4f6],esi
  406a58:	pop    eax
  406a59:	jle    0x406a6f
  406a5b:	cmp    esi,edi
  406a5d:	loopne 0x406a42
  406a5f:	sub    al,0xd3
  406a61:	add    eax,0x46c46c20
  406a66:	pop    es
  406a67:	scas   al,BYTE PTR es:[edi]
  406a68:	inc    esi
  406a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a6a:	ins    BYTE PTR es:[edi],dx
  406a6b:	scas   eax,DWORD PTR es:[edi]
  406a6c:	ja     0x406a97
  406a6e:	jb     0x406a04
  406a70:	mov    ds:0x72885314,eax
  406a75:	pop    ds
  406a76:	retf   
  406a77:	scas   al,BYTE PTR es:[edi]
  406a78:	fstp   DWORD PTR [ecx+0x1b6ab66]
  406a7e:	std    
  406a7f:	lea    esi,[esi+0x2bc861f4]
  406a85:	inc    esp
  406a86:	mov    ds:0xc227617e,eax
  406a8b:	aam    0x6
  406a8d:	sbb    esi,edi
  406a8f:	jp     0x406a3f
  406a91:	and    eax,eax
  406a93:	pusha  
  406a94:	jbe    0x406b09
  406a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a97:	sub    eax,ebp
  406a99:	jecxz  0x406a74
  406a9b:	nop
  406a9c:	mov    edx,0xddf32630
  406aa1:	cdq    
  406aa2:	(bad)  
  406aa3:	or     al,0xc7
  406aa5:	retf   
  406aa6:	jb     0x406ae5
  406aa8:	(bad)  
  406aa9:	pop    ecx
  406aaa:	jp     0x406a3a
  406aac:	std    
  406aad:	push   ecx
  406aae:	neg    DWORD PTR [edi+0x16a6b901]
  406ab4:	out    dx,al
  406ab5:	clc    
  406ab6:	xchg   ebx,eax
  406ab7:	je     0x406aa0
  406ab9:	inc    ebx
  406aba:	(bad)  
  406abb:	addr16 dec ebp
  406abd:	into   
  406abe:	stos   BYTE PTR es:[edi],al
  406abf:	push   0x979fc7af
  406ac4:	xchg   esp,eax
  406ac5:	xchg   ebp,eax
  406ac6:	xor    BYTE PTR [edi+edx*8],dh
  406ac9:	(bad)  
  406aca:	out    dx,al
  406acb:	xchg   ecx,eax
  406acc:	cs inc si
  406acf:	repnz push ecx
  406ad1:	mov    eax,0xd1b1d47e
  406ad6:	or     ch,BYTE PTR [esp+edi*8+0x1a10efa4]
  406add:	test   cl,0x5
  406ae0:	adc    edi,DWORD PTR [eax-0x2d]
  406ae3:	xchg   ebx,eax
  406ae4:	(bad)  
  406ae5:	cmp    eax,0xad0d165e
  406aea:	push   ecx
  406aeb:	test   eax,0x9cc83db7
  406af0:	mov    WORD PTR [ecx+ebp*8],?
  406af3:	dec    esi
  406af4:	add    DWORD PTR [edi],ebx
  406af6:	jmp    0x406b58
  406af8:	pushf  
  406af9:	fild   QWORD PTR [ebx]
  406afb:	shl    esi,0xcb
  406afe:	push   eax
  406aff:	cmp    al,0xec
  406b01:	mov    DWORD PTR ds:0x891bc467,0x84bdd2cc
  406b0b:	cmp    dl,BYTE PTR [ebp-0x69dd9909]
  406b11:	ja     0x406b15
  406b13:	xor    al,0x79
  406b15:	dec    ecx
  406b16:	xchg   esp,eax
  406b17:	outs   dx,DWORD PTR ds:[esi]
  406b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b19:	pop    edx
  406b1a:	stos   BYTE PTR es:[edi],al
  406b1b:	and    bh,bh
  406b1d:	lods   eax,DWORD PTR ds:[esi]
  406b1e:	mov    eax,ebx
  406b20:	aam    0xc
  406b22:	mov    edx,0xb950c9fc
  406b27:	imul   edx,DWORD PTR [eax+0x2b],0xffffffb4
  406b2b:	int    0x43
  406b2d:	psadbw mm1,QWORD PTR [ecx]
  406b30:	(bad)  
  406b31:	dec    eax
  406b32:	xchg   edx,eax
  406b33:	icebp  
  406b34:	icebp  
  406b35:	(bad)  
  406b36:	cli    
  406b37:	sti    
  406b38:	pop    ebx
  406b39:	pop    esi
  406b3a:	lods   al,BYTE PTR ds:[esi]
  406b3b:	mov    eax,ds:0x669c7503
  406b40:	and    BYTE PTR [ecx-0xecf6e27],bh
  406b46:	call   0x7120:0x196c62f7
  406b4d:	jb     0x406bc2
  406b4f:	add    al,0xe8
  406b51:	ret    0xac2f
  406b54:	pop    ds
  406b55:	scas   eax,DWORD PTR es:[edi]
  406b56:	(bad)  
  406b57:	shr    BYTE PTR [edi+0x39],1
  406b5a:	and    bl,bl
  406b5c:	cdq    
  406b5d:	inc    esp
  406b5e:	xor    eax,0x83c6145f
  406b63:	push   ebx
  406b64:	or     ebx,ebp
  406b66:	lahf   
  406b67:	sub    esi,DWORD PTR [ebp-0x3fb3504e]
  406b6d:	adc    eax,0x878b4664
  406b72:	popf   
  406b73:	or     BYTE PTR [edi+0x79b82d65],0x8e
  406b7a:	mov    eax,0xe40ce009
  406b7f:	sub    eax,0xfcfb6171
  406b84:	enter  0x243b,0xb4
  406b88:	adc    DWORD PTR [ebp-0x1d33bb01],0xffffff87
  406b8f:	fs mov bl,0x1
  406b92:	xchg   esp,eax
  406b93:	sahf   
  406b94:	fcomp  DWORD PTR [edi+ecx*1]
  406b97:	jmp    0xf5c6:0x7a2a5466
  406b9e:	xor    bl,0x4c
  406ba1:	xchg   edi,eax
  406ba2:	(bad)
  406ba6:	sbb    al,0xc5
  406ba8:	add    BYTE PTR [edx],0x8e
  406bab:	xchg   edi,eax
  406bac:	xchg   ecx,eax
  406bad:	jle    0x406bce
  406baf:	mov    bh,0xa0
  406bb1:	jle    0x406bf7
  406bb3:	out    0x3,eax
  406bb5:	inc    esp
  406bb6:	in     al,dx
  406bb7:	dec    ebx
  406bb8:	adc    DWORD PTR [ecx+edx*1+0x5c],0x69f1a554
  406bc0:	(bad)  
  406bc1:	jecxz  0x406c26
  406bc3:	mov    ds,eax
  406bc5:	test   eax,0x9a810da0
  406bca:	cli    
  406bcb:	adc    al,0x3a
  406bcd:	data16 je 0x406c12
  406bd0:	lea    ebp,[ebp-0x17]
  406bd3:	mov    esi,ecx
  406bd5:	push   edx
  406bd6:	xor    DWORD PTR [ecx],0x83df18d9
  406bdc:	aas    
  406bdd:	pop    ecx
  406bde:	adc    bh,BYTE PTR [esp+edx*8+0x5a]
  406be2:	or     edx,DWORD PTR [ecx-0x7b6cfed4]
  406be8:	es int3 
  406bea:	pop    ecx
  406beb:	(bad)  
  406bec:	iret   
  406bed:	lds    esp,FWORD PTR [esi+0x6b]
  406bf0:	sbb    DWORD PTR [esi],esi
  406bf2:	arpl   WORD PTR [eax-0x5b],di
  406bf5:	dec    edx
  406bf6:	or     al,0x2c
  406bf8:	add    BYTE PTR [ebx],dh
  406bfa:	fimul  WORD PTR [esi+ecx*8+0x72fc53c4]
  406c01:	jo     0x406bb7
  406c03:	pop    ebx
  406c04:	shl    BYTE PTR [edx+ebp*4+0x12217389],0xb7
  406c0c:	mov    al,ds:0x7f39a3d7
  406c11:	call   0x87cc0948
  406c16:	pop    esp
  406c17:	imul   edx,DWORD PTR [esi-0x54675777],0x78
  406c1e:	mov    esi,0xb33d86f7
  406c23:	sahf   
  406c24:	lock stos DWORD PTR es:[edi],eax
  406c26:	or     bl,BYTE PTR ds:0xc1bf28e0
  406c2c:	push   0x34
  406c2e:	pop    esp
  406c2f:	aaa    
  406c30:	push   esp
  406c31:	(bad)  
  406c32:	and    edi,DWORD PTR [ebp-0xc]
  406c35:	pop    ss
  406c36:	mov    ebx,0xe9f9198
  406c3b:	lods   eax,DWORD PTR ds:[esi]
  406c3c:	ins    DWORD PTR es:[edi],dx
  406c3d:	mov    esi,0x44532e50
  406c42:	int    0xaa
  406c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c45:	jl     0x406c09
  406c47:	not    BYTE PTR [edx]
  406c49:	ficom  WORD PTR [ebp+ebx*8-0x3725577d]
  406c50:	push   ss
  406c51:	adc    edi,0xdbf42ca9
  406c57:	jno    0x406cd1
  406c59:	fdiv   QWORD PTR [ecx+0x568d9ea1]
  406c5f:	mov    bl,0xd6
  406c61:	and    ch,ah
  406c63:	inc    eax
  406c64:	adc    ah,BYTE PTR [edx+edi*1-0x4e]
  406c68:	inc    esp
  406c69:	xor    esi,DWORD PTR [esi-0x80]
  406c6c:	mov    ?,WORD PTR [esi-0x6829430d]
  406c72:	out    dx,eax
  406c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c74:	or     al,0x73
  406c76:	pop    ebx
  406c77:	pop    ebx
  406c78:	dec    edx
  406c79:	ret    
  406c7a:	pushf  
  406c7b:	mov    bl,0xf4
  406c7d:	push   edx
  406c7e:	sub    DWORD PTR [edi],eax
  406c80:	push   es
  406c81:	rcl    BYTE PTR [edx-0x62],0x83
  406c85:	outs   dx,BYTE PTR ds:[esi]
  406c86:	mov    dl,BYTE PTR [edx+edx*4-0x2055d5e8]
  406c8d:	daa    
  406c8e:	inc    ecx
  406c8f:	or     eax,0x619d5de3
  406c94:	rcl    BYTE PTR [ebx],1
  406c96:	and    eax,0xf620546d
  406c9b:	pop    ds
  406c9c:	adc    eax,0x115c2638
  406ca1:	xchg   ecx,eax
  406ca2:	jne    0x406cc6
  406ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ca5:	cmp    eax,0x3f5e270e
  406caa:	(bad)  
  406cab:	mov    edx,0x869cd7aa
  406cb0:	sahf   
  406cb1:	aam    0x48
  406cb3:	test   BYTE PTR [edx],dh
  406cb5:	mov    bh,0xa7
  406cb7:	pop    ds
  406cb8:	jo     0x406c78
  406cba:	inc    edi
  406cbb:	ins    BYTE PTR es:[edi],dx
  406cbc:	and    eax,0x32be35d
  406cc1:	mov    cl,0x5d
  406cc3:	jo     0x406d0d
  406cc5:	cmp    eax,0x2adcd0b9
  406cca:	sub    esi,DWORD PTR [ebp+eiz*2+0x45]
  406cce:	shl    DWORD PTR [eax-0x5b],0x9e
  406cd2:	inc    ebp
  406cd3:	mov    ecx,edi
  406cd5:	int3   
  406cd6:	adc    al,0x6b
  406cd8:	leave  
  406cd9:	adc    eax,0xa5db6a27
  406cde:	or     al,0x7f
  406ce0:	add    eax,0x4b931ce9
  406ce5:	inc    ebp
  406ce6:	dec    ecx
  406ce7:	mov    esp,0xdd233b1b
  406cec:	mov    ecx,ecx
  406cee:	es add al,0x7e
  406cf1:	leave  
  406cf2:	mov    esp,DWORD PTR [esi-0x2f]
  406cf5:	es in  al,0x44
  406cf8:	outs   dx,BYTE PTR ds:[esi]
  406cf9:	in     al,0x70
  406cfb:	jmp    0x406d3e
  406cfd:	fwait
  406cfe:	dec    ebp
  406cff:	pushf  
  406d00:	daa    
  406d01:	jne    0x406cfb
  406d03:	mov    edx,0xb265bf0c
  406d08:	std    
  406d09:	jmp    0x756e:0xa6d7c5c5
  406d10:	rcr    BYTE PTR [eax-0x41c62864],0x9b
  406d17:	lock sub BYTE PTR [eax-0x6d4851a9],dh
  406d1e:	cli    
  406d1f:	xor    esi,DWORD PTR [edx]
  406d21:	lds    ebp,FWORD PTR [esi-0x10]
  406d24:	int3   
  406d25:	xor    ah,BYTE PTR [ebx-0x65]
  406d28:	mov    ecx,0x9bc96ac1
  406d2d:	cwde   
  406d2e:	aad    0xcf
  406d30:	out    0xed,eax
  406d32:	jae    0x406d97
  406d34:	repz pop ss
  406d36:	clc    
  406d37:	sbb    eax,0xb7f9e597
  406d3c:	popa   
  406d3d:	adc    dl,dl
  406d3f:	and    BYTE PTR [edx],0x35
  406d42:	sub    BYTE PTR ds:0xee16cd97,bl
  406d48:	push   ebx
  406d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d4a:	adc    esi,DWORD PTR [ebx-0x32]
  406d4d:	daa    
  406d4e:	clc    
  406d4f:	mov    dh,0x8c
  406d51:	mov    ecx,0x86a69ef9
  406d56:	jne    0x406d1f
  406d58:	sub    BYTE PTR ds:0x5d983b86,ah
  406d5e:	xchg   ebx,eax
  406d5f:	sti    
  406d60:	pop    ebp
  406d61:	mov    esi,0xecfec9cc
  406d66:	mov    edx,0x6fa33dfe
  406d6b:	rcr    ebp,0x26
  406d6e:	mov    eax,ds:0xb9260b7f
  406d73:	das    
  406d74:	fidivr WORD PTR ds:0x976c0d45
  406d7a:	(bad)  
  406d7b:	mul    BYTE PTR [edx+ecx*2+0xa]
  406d7f:	inc    edi
  406d80:	not    DWORD PTR [esi-0x33]
  406d83:	in     eax,0xac
  406d85:	and    al,0x31
  406d87:	call   0x6202:0xa8704632
  406d8e:	dec    edi
  406d8f:	xor    al,0x40
  406d91:	jne    0x406dc7
  406d93:	mov    ecx,0x1aef2c83
  406d98:	mov    ebp,0x77f020e2
  406d9d:	(bad)  
  406d9e:	aad    0xb2
  406da0:	or     al,0x59
  406da2:	jb     0x406d6e
  406da4:	sbb    al,0xe8
  406da6:	jl     0x406d94
  406da8:	mov    eax,0xa0e26952
  406dad:	xchg   ecx,eax
  406dae:	mul    DWORD PTR [eax]
  406db0:	mov    ebp,0xd507f08
  406db5:	adc    bh,BYTE PTR [eax]
  406db7:	daa    
  406db8:	mov    cl,0x2c
  406dba:	mov    bh,ch
  406dbc:	inc    ebx
  406dbd:	mov    ch,BYTE PTR [edi]
  406dbf:	je     0x406d5e
  406dc1:	test   al,0x67
  406dc3:	sbb    esp,DWORD PTR [ebx-0x165301fb]
  406dc9:	add    DWORD PTR [edi+eax*8],ecx
  406dcc:	fsub   DWORD PTR [ebp+0x6e]
  406dcf:	pop    esp
  406dd0:	pop    es
  406dd1:	xor    edx,edx
  406dd3:	cli    
  406dd4:	(bad)  
  406dd5:	(bad)  
  406dd6:	jbe    0x406e01
  406dd8:	loope  0x406ddd
  406dda:	and    DWORD PTR [ecx],ebp
  406ddc:	mov    bh,0x9e
  406dde:	ret    0x6a50
  406de1:	into   
  406de2:	fdiv   QWORD PTR [ebx-0xcb3273c]
  406de8:	sub    edi,DWORD PTR [edi-0x3b8da1b2]
  406dee:	lods   al,BYTE PTR ds:[esi]
  406def:	popa   
  406df0:	or     ecx,esp
  406df2:	xchg   ecx,eax
  406df3:	dec    ebp
  406df4:	(bad)
  406df8:	in     eax,dx
  406df9:	lock add eax,0x80593390
  406dff:	outs   dx,BYTE PTR ds:[esi]
  406e00:	(bad)  
  406e01:	pop    esi
  406e02:	inc    ebx
  406e03:	mov    ds:0x9bc63210,al
  406e08:	jmp    0x406e7e
  406e0a:	in     al,dx
  406e0b:	(bad)  
  406e0c:	push   ebx
  406e0d:	jno    0x406e3a
  406e0f:	sub    eax,DWORD PTR [edi+0x44ab8613]
  406e15:	jmp    0x6259:0x1390d979
  406e1c:	sbb    eax,ebp
  406e1e:	ds inc esp
  406e20:	into   
  406e21:	aam    0xfb
  406e23:	or     dl,dh
  406e25:	xchg   BYTE PTR [ecx-0x1b],ah
  406e28:	xchg   edi,eax
  406e29:	arpl   WORD PTR [eax+0x57],sp
  406e2c:	and    DWORD PTR [ecx-0x6b],ebp
  406e2f:	shl    BYTE PTR [edi*2-0x794a0d8],1
  406e36:	adc    esi,edi
  406e38:	jp     0x406e5c
  406e3a:	pop    eax
  406e3b:	aaa    
  406e3c:	jle    0x406dc6
  406e3e:	mov    cl,0xfd
  406e40:	pop    edx
  406e41:	xor    al,0xdc
  406e43:	test   edi,ebp
  406e45:	dec    edx
  406e46:	gs or  al,0xc0
  406e49:	arpl   WORD PTR [edx-0x3fd9d78c],sp
  406e4f:	ins    DWORD PTR es:[edi],dx
  406e50:	enter  0x8b7b,0x77
  406e54:	or     DWORD PTR [eax+ebx*2+0x1c],edx
  406e58:	adc    al,0x84
  406e5a:	out    dx,al
  406e5b:	lea    ebp,[edi-0x5e]
  406e5e:	mov    BYTE PTR [eax+0x3999a29c],ch
  406e64:	push   esi
  406e65:	retf   0x570e
  406e68:	fs xchg ebx,eax
  406e6a:	dec    ebp
  406e6b:	mov    ecx,0xa422fda6
  406e70:	add    dx,dx
  406e73:	xchg   edx,eax
  406e74:	cwde   
  406e75:	jo     0x406e75
  406e77:	add    esi,DWORD PTR [esi+0x9]
  406e7a:	retf   0x8d1e
  406e7d:	cld    
  406e7e:	sub    al,0x94
  406e80:	push   edi
  406e81:	jl     0x406e92
  406e83:	jmp    0x43264e9
  406e88:	cdq    
  406e89:	ror    DWORD PTR [ecx+eax*4+0x486d0bfe],cl
  406e90:	aaa    
  406e91:	lods   eax,DWORD PTR ds:[esi]
  406e92:	and    al,ch
  406e94:	xor    DWORD PTR ds:0x34a38155,esi
  406e9a:	cmp    ah,BYTE PTR [ebp+edi*4-0x71]
  406e9e:	xor    eax,0xc2332623
  406ea3:	push   edi
  406ea4:	in     al,dx
  406ea5:	jno    0x406e9b
  406ea7:	cmc    
  406ea8:	mov    edi,0x2d548334
  406ead:	jnp    0x406f13
  406eaf:	add    ecx,0xa550b21d
  406eb5:	dec    esp
  406eb6:	mov    ebx,0xd81a892a
  406ebb:	xchg   DWORD PTR [edi+ebx*8],esi
  406ebe:	cmp    al,0x44
  406ec0:	sbb    al,0xcd
  406ec2:	out    0xd8,al
  406ec4:	sbb    BYTE PTR [ecx+0x59ef4ed5],ch
  406eca:	mov    dh,0x7d
  406ecc:	or     BYTE PTR [esi+0x13],cl
  406ecf:	pop    esp
  406ed0:	sbb    eax,0xcc80a9e8
  406ed5:	pop    eax
  406ed6:	jne    0x406f0c
  406ed8:	stc    
  406ed9:	xor    eax,0xbb74f2c3
  406ede:	rol    BYTE PTR [ebx+0x1c1daa1d],1
  406ee4:	popa   
  406ee5:	adc    cl,BYTE PTR [edi+eiz*2+0x22]
  406ee9:	sub    al,0xab
  406eeb:	or     dl,dh
  406eed:	clc    
  406eee:	nop
  406eef:	pop    ebp
  406ef0:	shr    DWORD PTR [eax],1
  406ef2:	push   ebp
  406ef3:	inc    ebx
  406ef4:	sub    cl,BYTE PTR [edi-0x6c]
  406ef7:	jp     0x406e87
  406ef9:	add    DWORD PTR [esi+ecx*1],edi
  406efc:	out    0xac,eax
  406efe:	je     0x406f65
  406f00:	fisub  WORD PTR [edi]
  406f02:	jge    0x406f35
  406f04:	and    al,0xd8
  406f06:	gs jo  0x406ea9
  406f09:	add    bh,BYTE PTR [ebx+0x2c]
  406f0c:	cmp    cl,bl
  406f0e:	xor    BYTE PTR [edx-0x4d4a47ff],al
  406f14:	clc    
  406f15:	fstp   DWORD PTR [ecx]
  406f17:	push   ss
  406f18:	scas   eax,DWORD PTR es:[edi]
  406f19:	ret    0xc7e4
  406f1c:	push   ebx
  406f1d:	xchg   edi,eax
  406f1e:	cli    
  406f1f:	mov    bh,0x88
  406f21:	push   cs
  406f22:	into   
  406f23:	push   eax
  406f24:	ret    0x6fe4
  406f27:	stos   DWORD PTR es:[edi],eax
  406f28:	pop    edx
  406f29:	mov    esi,0x4209e7d1
  406f2e:	or     BYTE PTR [edi-0x2e232b82],0xb0
  406f35:	add    al,0x51
  406f37:	and    edx,DWORD PTR [ecx]
  406f39:	push   es
  406f3a:	cs xor al,bh
  406f3d:	neg    BYTE PTR [eax-0x49]
  406f40:	mov    bl,0x48
  406f42:	ins    DWORD PTR es:[edi],dx
  406f43:	xchg   edx,eax
  406f44:	xlat   BYTE PTR ds:[ebx]
  406f45:	jbe    0x406f8f
  406f47:	push   es
  406f48:	ins    BYTE PTR es:[edi],dx
  406f49:	sbb    DWORD PTR [ebp-0x5ae57f3a],esi
  406f4f:	idiv   BYTE PTR [esi+eiz*8]
  406f52:	rcr    DWORD PTR [esi-0x56],0x5f
  406f56:	adc    BYTE PTR [edi+0x53f673a1],bh
  406f5c:	mov    DWORD PTR [ecx],eax
  406f5e:	leave  
  406f5f:	imul   esp,DWORD PTR [edi],0xe834cdc7
  406f65:	lahf   
  406f66:	mov    DWORD PTR [edi],ecx
  406f68:	fidivr WORD PTR [eax-0x6a18265]
  406f6e:	push   esp
  406f6f:	xor    al,0x56
  406f71:	add    dh,bh
  406f73:	mov    eax,?
  406f75:	lds    esp,FWORD PTR [edi+0x63]
  406f78:	fimul  WORD PTR [ecx+0x2cd7ec44]
  406f7e:	pop    ecx
  406f7f:	fs push ebx
  406f81:	sub    eax,0xd38f9fd0
  406f86:	stc    
  406f87:	mov    eax,0xfc7d9dc2
  406f8c:	test   al,0x19
  406f8e:	pop    edi
  406f8f:	dec    ebp
  406f90:	test   al,0xa6
  406f92:	pop    esi
  406f93:	out    dx,eax
  406f94:	dec    eax
  406f95:	adc    DWORD PTR [ebx+0x7a],ebx
  406f98:	fwait
  406f99:	xor    eax,ebp
  406f9b:	jno    0x406f25
  406f9d:	pop    edx
  406f9e:	es pop esp
  406fa0:	fstp   QWORD PTR ss:[edx+eax*4-0x58]
  406fa5:	mov    edx,0x5aca44ea
  406faa:	rol    BYTE PTR [ebp-0x76],cl
  406fad:	fwait
  406fae:	aas    
  406faf:	cmc    
  406fb0:	shl    BYTE PTR [ecx+0x64b9adf3],0xf9
  406fb7:	pop    esi
  406fb8:	dec    edi
  406fb9:	pusha  
  406fba:	xchg   ebx,eax
  406fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fbc:	pop    ebx
  406fbd:	mov    ah,0xb5
  406fbf:	cmp    ecx,esi
  406fc1:	mov    ds:0xe310aea6,al
  406fc6:	sar    DWORD PTR [edx-0x39b87496],1
  406fcc:	imul   BYTE PTR [edx-0x7d6fb926]
  406fd2:	push   cs
  406fd3:	sub    ebp,DWORD PTR [esi]
  406fd5:	xor    al,0x6b
  406fd7:	push   ebp
  406fd8:	or     edi,DWORD PTR [eax-0x5735fcb5]
  406fde:	loope  0x406ff9
  406fe0:	and    ebp,DWORD PTR ds:0xb05ab1d2
  406fe6:	or     al,0xa1
  406fe8:	mov    esp,DWORD PTR [edx]
  406fea:	aad    0x17
  406fec:	outs   dx,BYTE PTR ds:[esi]
  406fed:	outs   dx,DWORD PTR ds:[esi]
  406fee:	ss sub al,0x9f
  406ff1:	leave  
  406ff2:	inc    ebp
  406ff3:	mov    edx,0x31873c0a
  406ff8:	add    bl,dl
  406ffa:	rol    BYTE PTR [edi-0x7b9292d7],cl
  407000:	inc    ebx
  407001:	arpl   bp,sp
  407003:	fistp  QWORD PTR ds:0x8fe89651
  407009:	fwait
  40700a:	bound  ebx,QWORD PTR [ecx+edx*2+0x7e16b2bd]
  407011:	sahf   
  407012:	dec    esi
  407013:	ds hlt 
  407015:	xor    DWORD PTR [ebx+0x30788565],0xbc1891be
  40701f:	jo     0x40702b
  407021:	mov    dh,0xda
  407023:	sbb    bh,BYTE PTR [ebp+0x1c]
  407026:	cmp    DWORD PTR [ecx+0x4e],ecx
  407029:	jbe    0x407001
  40702b:	cdq    
  40702c:	out    0xd2,al
  40702e:	sbb    bh,BYTE PTR [edi+0x77]
  407031:	pop    esp
  407032:	cld    
  407033:	fs add al,0x57
  407036:	mov    ebp,0xd1d66171
  40703b:	test   DWORD PTR [edx+0x153a5e3e],ebp
  407041:	mov    bh,BYTE PTR [edx]
  407043:	fdivr  DWORD PTR [edx]
  407045:	adc    al,0x1
  407047:	enter  0xfe3a,0xb1
  40704b:	xlat   BYTE PTR ds:[ebx]
  40704c:	or     eax,0x370b8630
  407051:	sti    
  407052:	mov    edx,ds
  407054:	rol    BYTE PTR [edi+0x4a272427],0x17
  40705b:	in     al,0xe
  40705d:	sbb    ebp,0xffffffb5
  407060:	xor    ch,BYTE PTR [ebp-0x43616a97]
  407066:	inc    ebx
  407067:	into   
  407068:	sbb    DWORD PTR [ecx],ecx
  40706a:	sbb    dh,ch
  40706c:	xchg   ebp,eax
  40706d:	sar    DWORD PTR [eax-0x5d24f970],1
  407073:	and    BYTE PTR [edx+0x626d4a65],bh
  407079:	sbb    BYTE PTR [edx-0x1aeccf4c],dl
  40707f:	mov    al,0xab
  407081:	icebp  
  407082:	das    
  407083:	add    DWORD PTR [eax],edi
  407085:	pop    ebx
  407086:	and    al,0x43
  407088:	nop
  407089:	mov    DWORD PTR [ecx+0x57],ebp
  40708c:	je     0x4070cc
  40708e:	cld    
  40708f:	aaa    
  407090:	aaa    
  407091:	sbb    ah,cl
  407093:	inc    esi
  407094:	pop    esp
  407095:	mov    dh,BYTE PTR [ecx]
  407097:	push   ebx
  407098:	push   cs
  407099:	dec    ecx
  40709a:	add    al,0xbd
  40709c:	shr    ecx,cl
  40709e:	cmc    
  40709f:	out    dx,eax
  4070a0:	dec    eax
  4070a1:	cmp    BYTE PTR [ebx-0x1],ah
  4070a4:	test   eax,0xb9aa7640
  4070a9:	sub    ebp,ecx
  4070ab:	sub    edx,DWORD PTR [ebx+0x2d]
  4070ae:	out    dx,eax
  4070af:	pop    ebx
  4070b0:	mov    esi,0x8c1b752f
  4070b5:	mov    ch,0x74
  4070b7:	popa   
  4070b8:	adc    dl,BYTE PTR [ebx+0x7b]
  4070bb:	cmc    
  4070bc:	mov    ch,0xf6
  4070be:	popf   
  4070bf:	pop    esp
  4070c0:	enter  0x7e7d,0x60
  4070c4:	loop   0x4070bc
  4070c6:	jae    0x40712b
  4070c8:	scas   eax,DWORD PTR es:[edi]
  4070c9:	adc    eax,0x190c4674
  4070ce:	paddsb mm7,QWORD PTR [edx]
  4070d1:	add    ecx,edx
  4070d3:	lods   eax,DWORD PTR ds:[esi]
  4070d4:	hlt    
  4070d5:	jecxz  0x40713d
  4070d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d8:	mov    edx,0x1074a19b
  4070dd:	cmp    esp,DWORD PTR [ebx-0x20]
  4070e0:	jmp    0x51d1:0xd2369e32
  4070e7:	arpl   bx,cx
  4070e9:	mov    ecx,0x13e7c634
  4070ee:	jecxz  0x4070c4
  4070f0:	mov    al,ds:0x75650041
  4070f5:	js     0x4070ee
  4070f7:	jo     0x407176
  4070f9:	imul   ebp,DWORD PTR [edx-0x6e],0xfffffffc
  4070fd:	xor    eax,0x29978b85
  407102:	dec    ebx
  407103:	xchg   DWORD PTR [esi-0x7315b48d],ebp
  407109:	xor    DWORD PTR [esp+ebx*2-0x65],0xffffffdb
  40710e:	sub    edi,0xffffffe8
  407111:	sub    DWORD PTR [ebx],edx
  407113:	xchg   ebp,eax
  407114:	arpl   ax,si
  407116:	fsub   DWORD PTR [edi-0x4322b42f]
  40711c:	mov    ah,0x1b
  40711e:	push   esp
  40711f:	push   ss
  407120:	jbe    0x4070d5
  407122:	je     0x4070aa
  407124:	out    0x0,eax
  407126:	jae    0x407106
  407128:	pop    edi
  407129:	rcl    BYTE PTR [esi],1
  40712b:	cld    
  40712c:	mov    eax,0x7c70e5e5
  407131:	adc    edi,DWORD PTR [esi-0x42217931]
  407137:	and    ah,BYTE PTR [ebp-0x4e]
  40713a:	xor    ch,ch
  40713c:	fdivr  QWORD PTR [edx]
  40713e:	inc    esi
  40713f:	lods   al,BYTE PTR ds:[esi]
  407140:	stc    
  407141:	rcl    DWORD PTR [eax-0x1d],cl
  407144:	xchg   ebx,eax
  407145:	shl    cl,0xdf
  407148:	js     0x4071a2
  40714a:	test   al,0x6e
  40714c:	repz out dx,eax
  40714e:	dec    edi
  40714f:	mov    WORD PTR [ecx],ss
  407151:	int    0x4e
  407153:	es add eax,0xa95a5be
  407159:	data16 mov bh,0x3a
  40715c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715d:	mov    edi,0x644fe0d6
  407162:	stos   DWORD PTR es:[edi],eax
  407163:	jecxz  0x4071e1
  407165:	mov    ebx,0x1e3fd734
  40716a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40716b:	mov    edi,0xd953ee4f
  407170:	out    0x39,al
  407172:	shl    BYTE PTR [edx+0x75],0x7f
  407176:	xchg   esp,eax
  407177:	sahf   
  407178:	inc    eax
  407179:	shr    DWORD PTR [ecx],1
  40717b:	adc    dl,BYTE PTR ds:0x9c16965b
  407181:	dec    ebp
  407182:	fld    QWORD PTR ds:0x10ff8c16
  407188:	lahf   
  407189:	push   eax
  40718a:	cwde   
  40718b:	push   esp
  40718c:	in     al,0xe
  40718e:	push   ebx
  40718f:	leave  
  407190:	mov    edx,0x37d2eab9
  407195:	repnz or esi,esi
  407198:	push   cs
  407199:	fbld   TBYTE PTR [edx-0x645af0b9]
  40719f:	dec    ebx
  4071a0:	jnp    0x407129
  4071a2:	cdq    
  4071a3:	retf   
  4071a4:	cmp    al,0xde
  4071a6:	push   eax
  4071a7:	xor    BYTE PTR [ebx],dh
  4071a9:	aam    0xa9
  4071ab:	inc    edx
  4071ac:	leave  
  4071ad:	jnp    0x40718a
  4071af:	fwait
  4071b0:	lea    ebp,[esi+0x7e]
  4071b3:	(bad)  
  4071b4:	outs   dx,BYTE PTR ds:[esi]
  4071b5:	int    0xff
  4071b7:	hlt    
  4071b8:	(bad)  
  4071b9:	push   ebx
  4071ba:	dec    esi
  4071bb:	mov    edi,0x92223267
  4071c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c1:	jl     0x4071aa
  4071c3:	scas   eax,DWORD PTR es:[edi]
  4071c4:	call   0x4d1bd6fc
  4071c9:	add    DWORD PTR [edi-0x76a596f4],edi
  4071cf:	ins    DWORD PTR es:[edi],dx
  4071d0:	stos   DWORD PTR es:[edi],eax
  4071d1:	lahf   
  4071d2:	jmp    0xbb8be3b9
  4071d7:	retf   0x4ed8
  4071da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071db:	popf   
  4071dc:	imul   esi,DWORD PTR [ebx+0x64],0x65
  4071e0:	fnstenv ds:0xbe4a4633
  4071e6:	jge    0x4071a6
  4071e8:	push   ecx
  4071e9:	sti    
  4071ea:	xor    cl,0x84
  4071ed:	test   DWORD PTR ds:0x8e3425a5,ebx
  4071f3:	add    BYTE PTR [eax],al
  4071f5:	data16 ins BYTE PTR es:[edi],dx
  4071f7:	pop    DWORD PTR [eax]
  4071f9:	dec    ebx
  4071fa:	repnz std 
  4071fc:	xchg   ebp,eax
  4071fd:	mov    dh,0x83
  4071ff:	enter  0xf1d6,0xbb
  407203:	adc    BYTE PTR [edi+edx*1],ch
  407206:	bound  edx,QWORD PTR [eax+0x6b702b7c]
  40720c:	cdq    
  40720d:	or     eax,DWORD PTR [ebp-0x3ec54415]
  407213:	out    0x3a,al
  407215:	mov    edx,0xcb56abc8
  40721a:	arpl   WORD PTR [ecx-0x79],dx
  40721d:	cwde   
  40721e:	mov    al,ds:0x6f896c98
  407223:	and    BYTE PTR [edi+0x30],0xae
  407227:	jp     0x40729f
  407229:	or     DWORD PTR [ebx+ecx*8+0x7a],0x7bcb77b1
  407231:	outs   dx,DWORD PTR ds:[esi]
  407232:	jae    0x407228
  407234:	jne    0x407289
  407236:	mov    bh,0xdf
  407238:	pop    es
  407239:	adc    al,BYTE PTR [ecx]
  40723b:	dec    eax
  40723c:	pop    ebp
  40723d:	xchg   edi,eax
  40723f:	or     dh,al
  407241:	sti    
  407242:	mov    al,ds:0x4343aa40
  407248:	jmp    0x407214
  40724a:	cmp    al,BYTE PTR ds:0xaa6255da
  407251:	mov    ds:0xbeb3e5f5,al
  407256:	into   
  407257:	dec    eax
  407258:	inc    ecx
  407259:	adc    bl,BYTE PTR [ecx-0x6d25fd0a]
  40725f:	xchg   ebp,eax
  407260:	inc    eax
  407261:	or     bh,dh
  407263:	mov    eax,ds:0x9953bb73
  407268:	cmp    cl,ah
  40726a:	sbb    DWORD PTR [edi],0x24
  40726d:	push   edx
  40726e:	adc    al,0xeb
  407270:	test   eax,0x6009bc82
  407275:	nop
  407276:	mov    edx,0x1d95ed23
  40727b:	sbb    ch,BYTE PTR [bp+si]
  40727e:	hlt    
  40727f:	adc    BYTE PTR [edi-0x41],ch
  407282:	aaa    
  407283:	stos   BYTE PTR es:[edi],al
  407284:	jmp    0x9e13:0x74b9944d
  40728b:	cld    
  40728c:	mov    es,WORD PTR [esi]
  40728e:	cmp    BYTE PTR [eax],bl
  407290:	jns    0x407259
  407292:	jmp    DWORD PTR [eax+0xe]
  407295:	cmc    
  407296:	sub    al,0xef
  407298:	xor    DWORD PTR [edi-0x5140226c],eax
  40729e:	or     DWORD PTR [esi+0x1d],esi
  4072a1:	inc    edi
  4072a2:	(bad)  
  4072a3:	mov    WORD PTR [ecx+0x47273ca],ds
  4072a9:	scas   eax,DWORD PTR es:[edi]
  4072aa:	mov    ds:0x6bd7292d,al
  4072af:	sub    DWORD PTR [esp+esi*8],0x3e858d5a
  4072b6:	icebp  
  4072b7:	(bad)  
  4072b8:	iret   
  4072b9:	popa   
  4072ba:	scas   eax,DWORD PTR es:[edi]
  4072bb:	mov    edx,0xee966621
  4072c0:	icebp  
  4072c1:	sbb    BYTE PTR [esi+ebp*4-0x47],al
  4072c5:	dec    eax
  4072c6:	push   0xffffffcb
  4072c8:	cmp    al,0xb7
  4072ca:	pop    edx
  4072cb:	mov    WORD PTR [esi+0x7d730d8],ss
  4072d1:	jno    0x407323
  4072d3:	push   0x62
  4072d5:	pop    esp
  4072d6:	dec    ebp
  4072d7:	enter  0x4a12,0x78
  4072db:	fwait
  4072dc:	or     ecx,edi
  4072de:	jb     0x407302
  4072e0:	pushf  
  4072e1:	and    eax,0x93fdc367
  4072e6:	add    BYTE PTR ds:0x9577cae,al
  4072ec:	test   DWORD PTR [ebx],0xca11f845
  4072f2:	xchg   BYTE PTR [edx],ah
  4072f4:	push   ds
  4072f5:	shl    dh,cl
  4072f7:	mov    ah,0xac
  4072f9:	mov    dl,0x81
  4072fb:	mov    ds:0xd6f2cf39,eax
  407300:	mov    dh,0xb7
  407302:	pop    ecx
  407303:	mov    esp,0xd7d9da2b
  407308:	push   ecx
  407309:	xor    al,BYTE PTR [esi+edx*2]
  40730c:	and    DWORD PTR [eax+ebx*4-0x7de7eb19],esp
  407313:	les    esp,FWORD PTR [edx+0x1e]
  407316:	mov    eax,ds:0x2c3b5cb1
  40731b:	and    al,0x1b
  40731d:	int    0xbb
  40731f:	mov    bh,0x71
  407321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407322:	aad    0x3b
  407324:	stc    
  407325:	fistp  DWORD PTR [esi-0x587b43a0]
  40732b:	sbb    DWORD PTR [edi],esi
  40732d:	sub    al,0x94
  40732f:	mov    edi,0x77f4884b
  407334:	sahf   
  407335:	dec    esp
  407336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407337:	ins    DWORD PTR es:[edi],dx
  407338:	sub    bl,bh
  40733a:	(bad)  
  40733b:	mov    edx,0x1fa46605
  407340:	dec    edi
  407341:	test   eax,0x2c8f0ce1
  407346:	ja     0x407350
  407348:	shl    DWORD PTR [ebp-0x46ee9d63],0xb8
  40734f:	xchg   esi,eax
  407350:	pop    ebp
  407351:	sbb    al,0x6b
  407353:	push   es
  407354:	sbb    DWORD PTR [ebp+0x20707fcd],esp
  40735a:	(bad)  
  40735b:	hlt    
  40735c:	add    eax,0xcb572a34
  407361:	jmp    0x69bc:0xe1e9914d
  407368:	ds aas 
  40736a:	push   ebx
  40736b:	fxch   st(5)
  40736d:	jl     0x407346
  40736f:	mov    ebx,es
  407371:	adc    DWORD PTR ds:0x16c5eda,ebp
  407377:	leave  
  407378:	gs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40737b:	imul   esi
  40737d:	idiv   BYTE PTR [ecx-0x4bcb1cda]
  407383:	lods   eax,DWORD PTR ds:[esi]
  407384:	adc    eax,0x690dce40
  407389:	dec    ecx
  40738a:	mov    ebx,0x2d6955be
  40738f:	sub    BYTE PTR [ecx+0x1b34965d],dh
  407395:	xchg   ebp,eax
  407396:	sbb    al,0x7
  407398:	ffree  st(4)
  40739a:	ret    
  40739b:	aad    0xe0
  40739d:	cdq    
  40739e:	add    eax,0x726f27a
  4073a3:	and    bl,BYTE PTR [ebp+0x3a]
  4073a6:	cmp    BYTE PTR [edi-0xbfb19f],dh
  4073ac:	dec    edx
  4073ad:	mov    eax,0x9771a016
  4073b2:	enter  0xf39,0x26
  4073b6:	mov    al,ds:0x15efdcd8
  4073bb:	sbb    bl,cl
  4073bd:	xor    al,0xfb
  4073bf:	fadd   QWORD PTR [ebx+eax*4-0x4024a5f0]
  4073c6:	fisttp QWORD PTR [ebx]
  4073c8:	or     eax,0xd0d81dcc
  4073cd:	imul   ebx,DWORD PTR [edx+esi*1],0x25b7c16b
  4073d4:	mov    edx,0xa6e0b84a
  4073d9:	into   
  4073da:	add    BYTE PTR [ebp+0x7],al
  4073dd:	push   edi
  4073de:	xchg   BYTE PTR [edi+0x60adf99d],ch
  4073e4:	add    eax,0x79364d76
  4073e9:	xor    DWORD PTR [eax+0x4fb4dcea],eax
  4073ef:	sub    eax,DWORD PTR [ecx-0x66d16206]
  4073f5:	nop
  4073f6:	pop    ecx
  4073f7:	stc    
  4073f8:	sub    al,0xa1
  4073fa:	(bad)  
  4073fb:	mov    edx,0x29cac490
  407400:	loop   0x407388
  407402:	jne    0x4073c6
  407404:	add    esi,esi
  407406:	pushf  
  407407:	dec    ecx
  407408:	int    0xfd
  40740a:	ins    DWORD PTR es:[edi],dx
  40740b:	sub    bl,ch
  40740d:	fst    QWORD PTR [edi-0x76c5595d]
  407413:	pop    edi
  407414:	test   eax,0x758c6b0b
  407419:	jmp    0x4073d5
  40741b:	fld    TBYTE PTR ds:0xd6d51fb8
  407421:	or     dh,BYTE PTR [edx-0x3e]
  407424:	dec    edx
  407425:	cmp    edi,esi
  407427:	mov    edi,0xe2f455a8
  40742c:	rcl    BYTE PTR [ebp+0x4c869f6f],cl
  407432:	and    ebp,0xf7e1361e
  407438:	cmp    al,0xe1
  40743a:	xchg   ebp,eax
  40743b:	push   edi
  40743c:	idiv   DWORD PTR [ebx-0x58]
  40743f:	xor    ecx,DWORD PTR [eax-0x1f6078c3]
  407445:	jecxz  0x407406
  407447:	inc    ebp
  407448:	pop    ds
  407449:	mov    ebp,0x396d2896
  40744e:	jle    0x40748e
  407450:	dec    ebx
  407451:	xchg   edx,eax
  407452:	ins    DWORD PTR es:[edi],dx
  407453:	setae  BYTE PTR [ebx-0x3698f3a6]
  40745a:	cmp    DWORD PTR [edx+0x45],edi
  40745d:	sub    BYTE PTR [ebp+edi*4+0x60526fa],ah
  407464:	jecxz  0x407430
  407466:	xor    ecx,DWORD PTR [esi-0x38]
  407469:	jbe    0x4073f0
  40746b:	sahf   
  40746c:	jle    0x40747f
  40746e:	int3   
  40746f:	mov    al,ds:0x8a67544
  407474:	xor    dh,BYTE PTR [esi-0x1b6a8a7f]
  40747a:	mov    edi,0xe52ecb5c
  40747f:	lock mov eax,0x7a2c2aa1
  407485:	loopne 0x40741e
  407487:	xchg   ecx,eax
  407488:	sub    dh,bh
  40748a:	inc    esi
  40748b:	data16 cld 
  40748d:	inc    esp
  40748e:	inc    ebx
  40748f:	ficomp WORD PTR [ecx]
  407491:	ds gs push esp
  407494:	fsubr  st(5),st
  407496:	test   al,0x88
  407498:	setl   BYTE PTR [eax]
  40749b:	imul   edx,DWORD PTR [esi+0x1c253a46],0x63dfe07e
  4074a5:	mov    bh,0x79
  4074a7:	add    DWORD PTR [edi],esi
  4074a9:	ret    
  4074aa:	aaa    
  4074ab:	xor    dl,BYTE PTR ds:0x850a1c26
  4074b1:	mov    ds:0xd8f0bc2e,al
  4074b6:	sti    
  4074b7:	dec    bx
  4074b9:	cdq    
  4074ba:	es jmp 0xac204aec
  4074c0:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c2:	adc    cl,BYTE PTR [esi-0x443ee47]
  4074c8:	jo     0x407548
  4074ca:	cld    
  4074cb:	inc    edi
  4074cc:	sbb    BYTE PTR [ecx-0x54],0xa9
  4074d0:	das    
  4074d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d2:	dec    edi
  4074d3:	xor    eax,0xe915f2a1
  4074d8:	es push eax
  4074da:	repz xchg esi,eax
  4074dc:	cwde   
  4074dd:	addr16 repnz inc edx
  4074e0:	(bad)  
  4074e1:	dec    edx
  4074e2:	mov    eax,0x56583ca1
  4074e7:	mov    ecx,0xfc14cc38
  4074ec:	mov    eax,ds:0xee121ff1
  4074f1:	sbb    al,0x46
  4074f3:	sbb    al,0xc7
  4074f5:	xor    bh,dh
  4074f7:	pop    ecx
  4074f8:	jmp    0x26992896
  4074fd:	stos   DWORD PTR es:[edi],eax
  4074fe:	dec    ebx
  4074ff:	in     al,dx
  407500:	or     al,0x68
  407502:	aam    0x34
  407504:	movups xmm0,XMMWORD PTR [ebp+ebx*2+0x734e58ce]
  40750c:	(bad)  
  40750e:	fwait
  40750f:	dec    esi
  407510:	mov    WORD PTR [ecx],ss
  407512:	xor    DWORD PTR [eax-0x5394dbaa],edx
  407518:	call   0x4990:0xb3b77150
  40751f:	xor    BYTE PTR [eax-0x21],cl
  407522:	push   ds
  407523:	dec    esi
  407524:	in     eax,0x29
  407526:	rcr    BYTE PTR [ecx+0x40],1
  407529:	out    dx,eax
  40752a:	and    al,0x67
  40752c:	push   ebp
  40752d:	mov    ds:0xd42051c,eax
  407532:	sahf   
  407533:	mov    al,0xe
  407535:	inc    esi
  407536:	inc    esp
  407537:	push   cs
  407538:	test   bl,cl
  40753a:	push   ebx
  40753b:	fs push es
  40753d:	sbb    bl,cl
  40753f:	std    
  407540:	and    DWORD PTR [eax],0x7e1454f0
  407546:	jae    0x4074c8
  407548:	test   ebx,esi
  40754a:	jno    0x4074eb
  40754c:	push   ss
  40754d:	icebp  
  40754e:	outs   dx,DWORD PTR ds:[esi]
  40754f:	movq   QWORD PTR [ecx-0x7d],mm6
  407553:	ins    BYTE PTR es:[edi],dx
  407554:	push   eax
  407555:	data16 xor ch,ah
  407558:	jns    0x40753a
  40755a:	pop    ds
  40755b:	xor    DWORD PTR [ebx+0x5efa8d96],ecx
  407561:	fwait
  407562:	dec    esi
  407563:	pop    esp
  407564:	aas    
  407565:	in     eax,0xd9
  407567:	mov    ds,WORD PTR [ecx-0x5]
  40756a:	(bad)  
  40756c:	bound  edx,QWORD PTR [esi+0x57fc71e2]
  407572:	cwde   
  407573:	ja     0x4075c3
  407575:	adc    DWORD PTR [esi+esi*1-0x72],0x62d67690
  40757d:	mov    WORD PTR [ebx+0x2d2a4c9d],ss
  407583:	hlt    
  407584:	div    BYTE PTR [ecx-0x6452f86e]
  40758a:	lock je 0x4075fd
  40758d:	repnz loopne 0x407528
  407590:	fcmove st,st(1)
  407592:	popf   
  407593:	movd   mm3,ebp
  407596:	or     bl,ch
  407598:	(bad)  
  407599:	lahf   
  40759a:	popa   
  40759b:	jge    0x4075a2
  40759d:	clc    
  40759e:	sub    DWORD PTR [ebx+0x61],ebp
  4075a1:	test   eax,0xf69bb61f
  4075a6:	icebp  
  4075a7:	xchg   DWORD PTR [ecx+0x438afccf],ecx
  4075ad:	sbb    al,0x66
  4075af:	int    0x1c
  4075b1:	add    edi,DWORD PTR [edx]
  4075b3:	xor    ch,ah
  4075b5:	push   ss
  4075b6:	ror    DWORD PTR [edi],1
  4075b8:	pop    ebp
  4075b9:	(bad)  
  4075ba:	out    dx,al
  4075bb:	jmp    0x63ee:0x91ff7808
  4075c2:	(bad)  
  4075c5:	js     0x407622
  4075c7:	out    0xf7,eax
  4075c9:	cs jno 0x4075c8
  4075cc:	leave  
  4075cd:	push   esp
  4075ce:	loopne 0x407637
  4075d0:	std    
  4075d1:	mov    ebp,0x278d776e
  4075d6:	outs   dx,BYTE PTR ds:[esi]
  4075d7:	mov    DWORD PTR [ecx+0x3e5004fc],esi
  4075dd:	(bad)
  4075e0:	das    
  4075e1:	pop    DWORD PTR [ebp-0x5d]
  4075e4:	nop
  4075e5:	outs   dx,BYTE PTR ds:[esi]
  4075e6:	xchg   edx,eax
  4075e7:	scas   eax,DWORD PTR es:[edi]
  4075e8:	shl    DWORD PTR [ebx+0x3],cl
  4075eb:	xchg   esi,eax
  4075ec:	stos   BYTE PTR es:[edi],al
  4075ed:	ds pop esp
  4075ef:	push   edx
  4075f0:	bswap  eax
  4075f2:	jns    0x407642
  4075f4:	pop    eax
  4075f5:	dec    esi
  4075f6:	outs   dx,BYTE PTR ds:[esi]
  4075f7:	icebp  
  4075f8:	bound  ecx,QWORD PTR [esi]
  4075fa:	mov    eax,ds:0x92602619
  4075ff:	cdq    
  407600:	mov    ch,0xe2
  407602:	mov    ebp,0xfce71219
  407607:	ds inc eax
  407609:	scas   eax,DWORD PTR es:[edi]
  40760a:	mov    dl,0x3c
  40760c:	or     eax,0x8391bf51
  407611:	cmp    al,0x92
  407614:	mov    ecx,0x2207f2ed
  407619:	lods   eax,DWORD PTR ds:[esi]
  40761a:	xor    esp,DWORD PTR [esi]
  40761c:	int3   
  40761d:	lods   eax,DWORD PTR ds:[esi]
  40761e:	and    DWORD PTR [ecx+edx*8+0x77],0x4f
  407623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407624:	inc    ebx
  407625:	jge    0x4075f1
  407627:	lock or al,0x50
  40762a:	push   esi
  40762b:	frstor [edi]
  40762d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40762e:	push   edi
  40762f:	fild   WORD PTR [edi+0x2f99819a]
  407635:	enter  0x730c,0xb9
  407639:	push   esi
  40763a:	push   ecx
  40763b:	loopne 0x407674
  40763d:	and    DWORD PTR es:[edi+0x51],edi
  407641:	dec    ebp
  407642:	pop    edi
  407643:	inc    esi
  407644:	retf   
  407645:	aas    
  407646:	add    cl,BYTE PTR [ebx-0x557ab04b]
  40764c:	jl     0x40767e
  40764e:	mov    al,0x7b
  407650:	and    ebx,esp
  407652:	fisttp DWORD PTR [esi-0xc]
  407655:	xchg   ebp,eax
  407656:	sub    al,0xa0
  407658:	data16 jge 0x4076bb
  40765b:	stos   BYTE PTR es:[edi],al
  40765c:	add    DWORD PTR [eax],edi
  40765e:	adc    bl,al
  407660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407661:	daa    
  407662:	out    dx,al
  407663:	(bad)  
  407664:	or     eax,0x73bb9155
  407669:	dec    edi
  40766a:	mov    ds:0xe9666329,al
  40766f:	lahf   
  407670:	div    DWORD PTR [esp+edx*1-0x18c7b1fc]
  407677:	int3   
  407678:	and    BYTE PTR [ebx+0x437ee32b],ch
  40767e:	jl     0x407689
  407680:	dec    ecx
  407681:	fst    QWORD PTR [eax+0xf5656e0]
  407687:	xchg   edi,eax
  407688:	sbb    eax,0x5851741a
  40768d:	or     eax,0x53622b2f
  407692:	xlat   BYTE PTR ds:[ebx]
  407693:	sub    al,0x9b
  407695:	jmp    ebp
  407697:	ja     0x4076ae
  407699:	rcl    BYTE PTR [ebx-0xb1d437b],1
  40769f:	push   ds
  4076a0:	in     eax,0x5b
  4076a2:	test   eax,0x208a1046
  4076a7:	xchg   edx,eax
  4076a8:	test   BYTE PTR [esi],al
  4076aa:	daa    
  4076ab:	in     eax,dx
  4076ac:	adc    ecx,DWORD PTR [edi-0x6f5f3832]
  4076b2:	push   ecx
  4076b3:	stc    
  4076b4:	or     al,0x4e
  4076b6:	shl    BYTE PTR [esi],cl
  4076b8:	lods   al,BYTE PTR ds:[esi]
  4076b9:	push   eax
  4076ba:	push   0x9463ab6c
  4076bf:	sbb    BYTE PTR [esi+0x8],dh
  4076c2:	mov    ds:0x3d69bb12,eax
  4076c7:	xchg   BYTE PTR [ebx+0x3ead0db1],ah
  4076cd:	mov    ebx,0xc10bc70d
  4076d2:	hlt    
  4076d3:	nop
  4076d4:	scas   al,BYTE PTR es:[edi]
  4076d5:	jo     0x407756
  4076d7:	stos   BYTE PTR es:[edi],al
  4076d8:	ret    
  4076d9:	test   DWORD PTR [eax],ecx
  4076db:	pop    ebp
  4076dc:	test   al,0x3c
  4076de:	(bad)  
  4076df:	test   al,0x60
  4076e1:	pop    es
  4076e2:	(bad)  
  4076e3:	rcr    BYTE PTR [edx-0x77],0xc7
  4076e7:	add    BYTE PTR [eax],0xa2
  4076ea:	ds (bad) 
  4076ec:	retf   0x6089
  4076ef:	add    BYTE PTR [edx],dl
  4076f1:	sbb    DWORD PTR [edx+0x51],esp
  4076f4:	xchg   DWORD PTR [ebx-0x25f59bbd],esp
  4076fa:	adc    ch,bh
  4076fc:	mov    al,ds:0x9e1428d0
  407701:	mov    eax,ds:0xf1e4ee99
  407706:	xchg   ebp,eax
  407707:	ror    DWORD PTR [eax],0x28
  40770a:	daa    
  40770b:	leave  
  40770c:	fnstcw WORD PTR [eax+0xd]
  40770f:	adc    BYTE PTR [ebx],dl
  407711:	mov    esp,0x4f089918
  407716:	ret    
  407717:	scas   eax,DWORD PTR es:[edi]
  407718:	fimul  WORD PTR [edx+esi*2]
  40771b:	mov    fs,WORD PTR [eax-0x5f2152ea]
  407721:	iret   
  407722:	and    ch,dh
  407724:	nop
  407725:	cmc    
  407726:	push   ecx
  407727:	not    dh
  407729:	out    dx,al
  40772a:	pop    esp
  40772b:	stos   DWORD PTR es:[edi],eax
  40772c:	pop    ebp
  40772d:	leave  
  40772e:	sub    bl,ah
  407730:	test   BYTE PTR [esi+0x3892d504],ch
  407736:	into   
  407737:	cmp    dh,BYTE PTR [edi+0x73]
  40773a:	addps  xmm0,XMMWORD PTR [ebx+0xa649ea]
  407741:	and    al,0x64
  407743:	cwde   
  407744:	scas   eax,DWORD PTR es:[edi]
  407745:	fnstcw WORD PTR [esi]
  407747:	mov    esi,0x9cbcc40b
  40774c:	dec    BYTE PTR [esp+ebx*4]
  40774f:	and    ah,dh
  407751:	xchg   ecx,eax
  407752:	test   eax,0x47f0ec0d
  407757:	cs cmc 
  407759:	ret    0xebb
  40775c:	push   edx
  40775d:	ins    BYTE PTR es:[edi],dx
  40775e:	loopne 0x4076e5
  407760:	xlat   BYTE PTR ds:[ebx]
  407761:	scas   al,BYTE PTR es:[edi]
  407762:	mov    fs,WORD PTR [ebp-0xe]
  407765:	sbb    DWORD PTR [ecx+eiz*1+0x78c900ef],eax
  40776c:	mov    ds:0xc3f7d656,eax
  407771:	mov    ?,WORD PTR [edx+0x34a66b34]
  407777:	or     edi,DWORD PTR [edx]
  407779:	pushf  
  40777a:	xchg   edi,eax
  40777b:	sbb    eax,0x5ab159d
  407780:	fidiv  WORD PTR [ebp+0x6b]
  407783:	imul   ecx,DWORD PTR [ecx+0x7d],0x57165e41
  40778a:	fiadd  WORD PTR [eax]
  40778c:	out    dx,al
  40778d:	cli    
  40778e:	mov    ebp,DWORD PTR [edi]
  407790:	aam    0x91
  407792:	jae    0x407802
  407794:	lds    ebp,FWORD PTR ds:0x328fae83
  40779a:	xor    eax,0x82347f9d
  40779f:	xor    DWORD PTR gs:[ebp+0x70f30a47],0x33887678
  4077aa:	stos   BYTE PTR es:[edi],al
  4077ab:	int3   
  4077ac:	add    edx,DWORD PTR [ebx+0x2d]
  4077af:	mov    edx,DWORD PTR [ecx+0x42]
  4077b2:	ins    BYTE PTR es:[edi],dx
  4077b3:	xchg   BYTE PTR [edi],dl
  4077b5:	adc    al,0xcc
  4077b7:	sbb    al,0xec
  4077b9:	mov    DWORD PTR [edx-0x392171fc],0xa872d852
  4077c3:	push   ebp
  4077c4:	sub    DWORD PTR [edi-0x72],edx
  4077c7:	mov    dl,ah
  4077c9:	mov    eax,ds:0x5eb6485b
  4077ce:	dec    esp
  4077cf:	xor    ecx,DWORD PTR [edi]
  4077d1:	pop    edx
  4077d2:	lods   al,BYTE PTR ds:[esi]
  4077d3:	lods   al,BYTE PTR ss:[esi]
  4077d5:	retf   
  4077d6:	ret    0xb111
  4077d9:	dec    edx
  4077da:	cmp    eax,0xddf57320
  4077df:	pop    eax
  4077e0:	in     eax,0xe1
  4077e2:	mov    bh,cl
  4077e4:	mov    WORD PTR [esp+edx*8-0x6bcdf687],ss
  4077eb:	dec    eax
  4077ec:	jo     0x407796
  4077ee:	or     DWORD PTR [ebx+0x60c7118],ebp
  4077f4:	popa   
  4077f5:	sub    dl,BYTE PTR [esi-0x38660e38]
  4077fb:	scas   al,BYTE PTR es:[edi]
  4077fc:	pushw  ds
  4077fe:	xor    al,0x57
  407800:	fs data16 or al,0x7b
  407804:	lahf   
  407805:	out    0xe2,eax
  407807:	fcom   DWORD PTR [ecx+0x60]
  40780a:	cmp    al,0x7a
  40780c:	clc    
  40780d:	icebp  
  40780e:	or     ch,cl
  407810:	aad    0x76
  407812:	cli    
  407813:	inc    edx
  407814:	jecxz  0x4077b1
  407816:	fwait
  407817:	dec    ecx
  407818:	clc    
  407819:	fdiv   QWORD PTR [ecx-0x3987784a]
  40781f:	xchg   DWORD PTR [ebx-0x56041ce9],ebx
  407825:	call   0xd1f80f35
  40782a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40782b:	fidiv  WORD PTR [esi+ebx*8-0x5815a866]
  407832:	mov    cl,0x6c
  407834:	fdivrp st(5),st
  407836:	int    0xbb
  407838:	fidiv  DWORD PTR [edx]
  40783a:	push   0x4a6e9cf0
  40783f:	shl    BYTE PTR [ecx+0x31],1
  407842:	mov    dl,0x99
  407844:	std    
  407845:	dec    esi
  407846:	bound  eax,QWORD PTR [edx-0x125622a4]
  40784c:	aad    0xca
  40784e:	mov    ?,WORD PTR [edi]
  407850:	mov    BYTE PTR [ebx+0x2906c977],al
  407856:	fcmovb st,st(5)
  407858:	imul   ecx,DWORD PTR [edi-0xbccc36d],0xd6929e82
  407862:	xor    BYTE PTR gs:[edi+0x61a320bf],ch
  407869:	inc    eax
  40786a:	test   DWORD PTR [ebx],ecx
  40786c:	mov    bh,0x82
  40786e:	xor    al,0x61
  407870:	out    0x68,al
  407872:	jo     0x407881
  407874:	hlt    
  407875:	out    0xfb,eax
  407877:	sti    
  407878:	and    bh,bh
  40787a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40787b:	xor    dh,BYTE PTR [ecx]
  40787d:	xchg   edx,eax
  40787e:	repz pop eax
  407880:	push   edi
  407881:	mov    ah,0x8d
  407883:	mov    BYTE PTR [esi-0x3e],dh
  407886:	imul   eax,DWORD PTR [edi],0x3b2b64ac
  40788c:	adc    eax,0xb2eb7528
  407891:	cs enter 0x99a3,0xa9
  407896:	push   ecx
  407897:	push   0xffffffdf
  407899:	jne    0x40786c
  40789b:	int3   
  40789c:	pop    esp
  40789d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40789e:	cmp    ch,al
  4078a0:	xor    ah,bh
  4078a2:	addr16 in al,0x83
  4078a5:	jge    0x407921
  4078a7:	pop    esi
  4078a8:	call   0x3ac1f48b
  4078ad:	daa    
  4078ae:	call   0x8a600649
  4078b3:	std    
  4078b4:	mov    fs,WORD PTR [ebx-0x17]
  4078b7:	fwait
  4078b8:	or     al,0x99
  4078ba:	call   0xcd661d10
  4078bf:	addr16 inc ecx
  4078c1:	mov    ?,WORD PTR [edi]
  4078c3:	xchg   bh,ah
  4078c5:	sahf   
  4078c6:	pop    ebx
  4078c7:	mov    cl,0x95
  4078c9:	add    al,0xdd
  4078cb:	mov    ds:0xefd5d314,al
  4078d0:	in     al,0x7b
  4078d2:	xchg   edx,eax
  4078d3:	(bad)  
  4078d4:	out    0xbd,al
  4078d6:	inc    ecx
  4078d7:	add    BYTE PTR [ebp+0x71],al
  4078da:	sbb    ch,BYTE PTR [esi-0xd]
  4078dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078de:	dec    esp
  4078df:	test   DWORD PTR [esi-0x620d1af9],0x77a11424
  4078e9:	xor    edx,esi
  4078eb:	mov    ch,0xf2
  4078ed:	fdivrp st(2),st
  4078ef:	jnp    0x40790d
  4078f1:	test   eax,0xac0b5751
  4078f6:	cmc    
  4078f7:	or     al,0x12
  4078fa:	jl     0x40789c
  4078fc:	(bad)
  4078ff:	call   0xc4db0d16
  407904:	cmp    al,0xd
  407906:	pop    ebp
  407907:	test   DWORD PTR [esi+edi*8+0x62],0x2b023de
  40790f:	mov    bh,0x14
  407911:	cmp    eax,0x384259a0
  407916:	pop    ss
  407917:	adc    eax,ebx
  407919:	xor    ch,BYTE PTR [ebx]
  40791b:	into   
  40791c:	in     al,0x57
  40791e:	imul   eax,DWORD PTR [ecx],0x63
  407921:	ins    DWORD PTR es:[edi],dx
  407922:	iret   
  407923:	fsub   QWORD PTR [edx-0x2c]
  407926:	fbstp  TBYTE PTR [edx-0x3c774da4]
  40792c:	jb     0x407970
  40792e:	imul   ecx,ebp,0xffffff9f
  407931:	push   ecx
  407932:	mov    ch,0x3f
  407934:	pop    ecx
  407935:	out    dx,eax
  407936:	or     al,0xff
  407938:	mov    edx,0xb34faf70
  40793d:	in     al,0x69
  40793f:	sbb    ebx,DWORD PTR [eax+ecx*8]
  407942:	(bad)  
  407943:	jl     0x4078eb
  407945:	adc    bh,bl
  407947:	push   es
  407948:	push   ds
  407949:	jmp    0x5832:0x1faca158
  407950:	mov    eax,edx
  407952:	add    eax,0x64e5ecc7
  407957:	(bad)  
  407958:	xlat   BYTE PTR ds:[ebx]
  407959:	push   ebx
  40795a:	xchg   esp,eax
  40795b:	or     BYTE PTR [ecx+0x3244f1b7],cl
  407961:	imul   edx,DWORD PTR [ecx],0xc7b67fc2
  407967:	sub    esi,DWORD PTR [ecx-0xfd11c36]
  40796d:	cmp    edi,ebp
  40796f:	mov    eax,0x301c0637
  407974:	xor    DWORD PTR [edi+0x61],0xffffffaa
  407978:	mov    ebp,0x9ac6a05a
  40797d:	mov    ch,0x60
  40797f:	fdiv   DWORD PTR [esi+0x5e6cf0fd]
  407985:	bound  edx,QWORD PTR [edi]
  407987:	xor    eax,0xbac64556
  40798c:	retf   
  40798d:	fld    st(3)
  40798f:	cmovp  edx,DWORD PTR [eax+0x3d60501f]
  407996:	inc    ebx
  407997:	out    0xf3,al
  407999:	shl    DWORD PTR [ebp+0x345b718c],0xbf
  4079a0:	pop    ds
  4079a1:	mov    WORD PTR [ebx],ss
  4079a3:	in     al,dx
  4079a4:	mov    ecx,eax
  4079a6:	hlt    
  4079a7:	or     eax,0xbf34dde3
  4079ac:	dec    esi
  4079ad:	rcr    edi,0xf2
  4079b0:	cdq    
  4079b1:	sub    ebx,DWORD PTR [eax]
  4079b3:	mov    al,ds:0x5c3ebf45
  4079b8:	xchg   ecx,eax
  4079b9:	jmp    DWORD PTR [ebx-0x6d]
  4079bc:	jmp    DWORD PTR [esi-0x1f30fbfa]
  4079c2:	push   edx
  4079c3:	xlat   BYTE PTR ds:[ebx]
  4079c4:	cwde   
  4079c5:	orps   xmm6,XMMWORD PTR [eax]
  4079c8:	and    dl,BYTE PTR [edi-0x7abd4d]
  4079ce:	test   eax,0x773edd7
  4079d3:	mov    ch,0x5c
  4079d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d6:	push   ss
  4079d7:	dec    eax
  4079d8:	clc    
  4079d9:	mov    cl,0xc0
  4079db:	mov    ebx,0x423c7a8b
  4079e0:	std    
  4079e1:	popf   
  4079e2:	shl    BYTE PTR [eax],cl
  4079e4:	enter  0x933f,0x27
  4079e8:	rcl    esi,0x5
  4079eb:	pop    ss
  4079ec:	mov    eax,0xe6291b45
  4079f1:	aam    0xbb
  4079f3:	enter  0x6036,0xba
  4079f7:	mov    bl,0x8b
  4079f9:	inc    ebp
  4079fa:	hlt    
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x1137e350
  407a58:	push   ecx
  407a59:	mov    ecx,0x7a3ca3d1
  407a5e:	jp     0x407a45
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	jbe    0x407a25
  407a65:	les    eax,FWORD PTR [edx]
  407a67:	jae    0x407a24
  407a69:	retf   
  407a6a:	cwde   
  407a6b:	sbb    DWORD PTR [edi-0x17666b5f],ebp
  407a71:	xchg   ecx,eax
  407a72:	leave  
  407a73:	xor    BYTE PTR [edx],0x73
  407a76:	pop    ecx
  407a77:	sub    DWORD PTR ds:0xd4aaf4db,0x17
  407a7e:	mov    ds:0x1cbd49e4,al
  407a83:	fwait
  407a84:	not    DWORD PTR [ebp-0x259d0030]
  407a8a:	inc    esi
  407a8b:	or     eax,0xc6dcd3aa
  407a90:	cmp    al,0xfb
  407a92:	retf   
  407a93:	push   es
  407a94:	adc    al,0xc1
  407a96:	cmp    bh,BYTE PTR [esi-0x4]
  407a99:	popa   
  407a9a:	and    eax,0x13f53a
  407a9f:	or     BYTE PTR [ebp+0x4127e203],al
  407aa5:	sub    edx,DWORD PTR [ecx+edi*4]
  407aa8:	mov    ds:0x57df6aec,al
  407aad:	xor    DWORD PTR [edi-0x34],ebp
  407ab0:	dec    edi
  407ab1:	mov    ecx,0xbde0d851
  407ab6:	adc    dl,BYTE PTR ds:0xfebae3b0
  407abc:	mov    ecx,0xfdb6c05e
  407ac1:	in     eax,0xde
  407ac3:	ins    DWORD PTR es:[edi],dx
  407ac4:	in     eax,dx
  407ac5:	xor    BYTE PTR [esp+eiz*4-0x3392b9eb],cl
  407acc:	cli    
  407acd:	push   esi
  407ace:	retf   
  407acf:	clc    
  407ad0:	jmp    0x1138c4a4
  407ad5:	mov    bh,0x49
  407ad7:	cld    
  407ad8:	dec    esi
  407ad9:	idiv   DWORD PTR [edi]
  407adb:	sbb    esp,DWORD PTR [ecx-0x58f69e70]
  407ae1:	push   ds
  407ae2:	inc    esp
  407ae3:	test   al,0xb8
  407ae5:	jge    0x407ae2
  407ae7:	sub    esi,DWORD PTR [edi+edx*1+0x61]
  407aeb:	xchg   edi,eax
  407aec:	pop    es
  407aed:	inc    esp
  407aee:	mov    al,0x13
  407af0:	dec    eax
  407af1:	clc    
  407af2:	mov    ebp,eax
  407af4:	dec    edi
  407af5:	jle    0x407a8c
  407af7:	mov    ebp,0x1dc7378d
  407afc:	adc    BYTE PTR [esi-0x20],cl
  407aff:	test   al,0x66
  407b01:	adc    ebp,esp
  407b03:	in     eax,0xfa
  407b05:	sub    eax,0x37f57849
  407b0a:	dec    edi
  407b0b:	mov    ebp,0x772bde53
  407b10:	mov    cl,0xf0
  407b12:	mov    edx,0x118d9295
  407b17:	xor    BYTE PTR [esp+eiz*8-0x509517a8],0x46
  407b1f:	cld    
  407b20:	and    BYTE PTR [ebx-0x56],ch
  407b23:	lods   eax,DWORD PTR ds:[esi]
  407b24:	xor    eax,0x962bf3a3
  407b29:	stc    
  407b2a:	jmp    0xfc4c246
  407b2f:	mov    ecx,0xda7e959d
  407b34:	repz pushf 
  407b36:	and    eax,0x4fcd6a9f
  407b3b:	push   esi
  407b3c:	scas   al,BYTE PTR es:[edi]
  407b3d:	cmp    eax,0x5763785f
  407b42:	push   0x71
  407b44:	fimul  WORD PTR [ecx-0x7b01b1c3]
  407b4a:	mov    bh,0x7b
  407b4c:	inc    esp
  407b4d:	mov    BYTE PTR [eax+0x3d],dl
  407b50:	pop    edx
  407b51:	xor    edi,DWORD PTR [esi]
  407b53:	jbe    0x407b66
  407b55:	mov    ebp,0x2e60ea1f
  407b5a:	jae    0x407b49
  407b5c:	or     DWORD PTR [edx],ebp
  407b5e:	xor    al,0x6a
  407b60:	mov    WORD PTR [esi-0x41c4dad4],fs
  407b66:	adc    cl,ah
  407b68:	(bad)  [esi-0x58]
  407b6b:	adc    DWORD PTR [edi],0x33de7b91
  407b71:	leave  
  407b72:	lea    edx,[edx]
  407b74:	test   al,0xdf
  407b76:	scas   al,BYTE PTR es:[edi]
  407b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b78:	pop    esp
  407b79:	into   
  407b7a:	inc    ebx
  407b7b:	das    
  407b7c:	(bad)  
  407b7d:	push   edx
  407b7e:	pushf  
  407b7f:	repz mov ds:0x4b6daecf,eax
  407b85:	and    cl,BYTE PTR [esi]
  407b87:	retf   0xd0cf
  407b8a:	push   ds
  407b8b:	in     al,0x55
  407b8d:	fdiv   DWORD PTR [edi]
  407b8f:	jae    0x407b53
  407b91:	push   0x3508bd1d
  407b96:	aas    
  407b97:	adc    DWORD PTR [ecx+0x3],ecx
  407b9a:	sahf   
  407b9b:	push   ecx
  407b9c:	and    cl,BYTE PTR ds:[esi]
  407b9f:	mov    edi,0xdd2e6f12
  407ba4:	mov    bh,0x48
  407ba6:	or     esi,edi
  407ba8:	ss sbb eax,0x9189ef49
  407bae:	out    dx,al
  407baf:	xchg   esp,eax
  407bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb1:	xor    al,0x74
  407bb3:	mov    eax,ds:0x7670fcad
  407bb8:	arpl   WORD PTR [edi],bp
  407bba:	fcmovb st,st(1)
  407bbc:	and    BYTE PTR ds:0x1bf9bc80,dl
  407bc2:	sub    BYTE PTR [eax+0x1682547b],bl
  407bc8:	add    BYTE PTR [edi-0x60],ch
  407bcb:	or     cl,BYTE PTR [esi-0x6d4178c7]
  407bd1:	jb     0x407c0c
  407bd3:	out    dx,eax
  407bd4:	xchg   bl,dl
  407bd6:	cmc    
  407bd7:	cmp    esi,0x34
  407bda:	add    DWORD PTR [ebx+0x74],edi
  407bdd:	outs   dx,BYTE PTR ds:[esi]
  407bde:	pop    esp
  407bdf:	jne    0x407c60
  407be1:	push   cs
  407be2:	js     0x407ba6
  407be4:	xlat   BYTE PTR ds:[ebx]
  407be5:	out    0x61,al
  407be7:	lock cmc 
  407be9:	int    0x3c
  407beb:	nop
  407bec:	inc    ebx
  407bed:	stc    
  407bee:	call   FWORD PTR [ecx+0x21]
  407bf1:	ret    0x8b64
  407bf4:	arpl   WORD PTR [eax],bp
  407bf6:	(bad)
  407bfa:	sbb    esp,DWORD PTR [edx-0x7f92f799]
  407c00:	loop   0x407c17
  407c02:	add    DWORD PTR [ecx+0x138d806],ebp
  407c08:	dec    ebp
  407c09:	xchg   ecx,eax
  407c0a:	sub    ch,BYTE PTR [eax+0xe16c34b]
  407c10:	data16 fstp QWORD PTR ds:0x8769156c
  407c17:	mov    ds:0xd56be16f,al
  407c1c:	out    dx,al
  407c1d:	push   ebp
  407c1e:	mov    esp,0x2d1fc05d
  407c23:	test   ch,bh
  407c25:	xchg   esp,eax
  407c26:	mov    ebx,0x927b1969
  407c2b:	shl    BYTE PTR [esi],cl
  407c2d:	push   DWORD PTR [edx+eiz*8+0x61]
  407c31:	mov    ah,0xa4
  407c33:	call   0x2eb5:0xb4688466
  407c3a:	push   ss
  407c3b:	mov    BYTE PTR [ecx+0x5f],cl
  407c3e:	ja     0x407ca9
  407c40:	mov    ebp,0x3f027e7e
  407c45:	outs   dx,BYTE PTR ds:[esi]
  407c46:	adc    ch,BYTE PTR [ebx-0x1ec12007]
  407c4c:	ret    
  407c4d:	frstor [ebp+0x64]
  407c50:	mov    edi,0xa86c9de8
  407c55:	gs xchg edi,eax
  407c57:	push   0xffffffb1
  407c59:	mov    ecx,ebx
  407c5b:	sub    dh,BYTE PTR [ebx+0x223dbc60]
  407c61:	pop    ebp
  407c62:	dec    edi
  407c63:	in     eax,0x18
  407c65:	mov    ds:0x59462be8,eax
  407c6a:	arpl   WORD PTR [ebx-0x24],dx
  407c6d:	addr16 xor eax,0xc907f176
  407c73:	mov    esp,DWORD PTR [ebx]
  407c75:	mov    cs,esi
  407c77:	or     BYTE PTR [edx],bh
  407c79:	pushf  
  407c7a:	fdiv   DWORD PTR [esi]
  407c7c:	imul   edx,DWORD PTR [edi-0x3fe9de84],0x6ea4f5a3
  407c86:	dec    ebx
  407c87:	nop
  407c88:	pop    eax
  407c89:	mov    eax,0x98362d38
  407c8e:	pushf  
  407c8f:	mov    ah,0xf7
  407c91:	fistp  WORD PTR [edx]
  407c93:	out    0x17,eax
  407c95:	jmp    0xda3f:0xb4add424
  407c9c:	imul   esp,eax,0x55
  407c9f:	and    al,0x93
  407ca1:	out    dx,al
  407ca2:	jg     0x407c69
  407ca4:	popa   
  407ca5:	in     al,dx
  407ca6:	xlat   BYTE PTR ds:[ebx]
  407ca7:	jmp    0x7d6b:0xbcb270df
  407cae:	sub    eax,0x70da45c6
  407cb3:	push   esi
  407cb4:	or     BYTE PTR ds:0x8a376462,bh
  407cba:	out    0xdb,eax
  407cbc:	call   0x4155:0x833032dd
  407cc3:	xchg   esi,eax
  407cc4:	lods   al,BYTE PTR ds:[esi]
  407cc5:	cld    
  407cc6:	ret    
  407cc7:	loopne 0x407cd5
  407cc9:	mov    edx,0x25d58ad3
  407cce:	sbb    eax,0xa336fa78
  407cd3:	fs fs loop 0x407cf2
  407cd7:	out    dx,al
  407cd8:	jp     0x407d2f
  407cda:	ret    
  407cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cdc:	shr    DWORD PTR [esi+0x3971d9ab],cl
  407ce2:	push   ds
  407ce3:	push   ds
  407ce4:	add    al,0xff
  407ce6:	mov    ss,eax
  407ce8:	cmp    BYTE PTR [esi-0x7b],bl
  407ceb:	std    
  407cec:	push   0x32
  407cee:	jo     0x407ca3
  407cf0:	fst    DWORD PTR [eax]
  407cf2:	cs data16 int 0x1d
  407cf6:	sbb    BYTE PTR [ebp-0x74],dh
  407cf9:	and    DWORD PTR [eax+eax*1-0x7e],edx
  407cfd:	sar    DWORD PTR [ebx-0xd66eba4],0x39
  407d04:	xchg   ebp,eax
  407d05:	inc    esp
  407d06:	or     esi,edx
  407d08:	or     DWORD PTR [edi],edi
  407d0a:	shl    BYTE PTR [ecx-0x1e],1
  407d0d:	pop    edi
  407d0e:	cmc    
  407d0f:	lods   al,BYTE PTR ds:[esi]
  407d10:	addr16 inc ebx
  407d12:	add    DWORD PTR [edi],0x493a997
  407d18:	jp     0x407d19
  407d1a:	mov    dh,0xe0
  407d1c:	loopne 0x407ca0
  407d1e:	lods   al,BYTE PTR ds:[esi]
  407d1f:	rol    BYTE PTR [ebx],0x53
  407d22:	or     al,BYTE PTR [ebx+0x43]
  407d25:	xchg   esp,eax
  407d26:	retf   
  407d27:	punpckhdq mm0,QWORD PTR [edx-0x48]
  407d2b:	cmp    ch,al
  407d2d:	aad    0x63
  407d2f:	cmp    DWORD PTR [eax-0x150d9c7f],0x4a749c6b
  407d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d3a:	out    dx,eax
  407d3b:	pop    esi
  407d3c:	cli    
  407d3d:	cmc    
  407d3e:	sbb    BYTE PTR [ecx],bh
  407d40:	js     0x407d82
  407d42:	xor    al,0x6e
  407d44:	aas    
  407d45:	or     ebx,DWORD PTR [eax]
  407d47:	inc    ebx
  407d48:	cmp    dl,BYTE PTR [esi+0xafdd19a]
  407d4e:	push   cs
  407d4f:	push   cs
  407d50:	sbb    eax,esi
  407d52:	adc    bh,BYTE PTR [ebp+0x7302b2e1]
  407d58:	mov    ebx,ecx
  407d5a:	je     0x407d0f
  407d5c:	pop    esp
  407d5d:	out    dx,eax
  407d5e:	sbb    DWORD PTR [esi-0x46],eax
  407d61:	sbb    DWORD PTR [ebp-0x2a],edi
  407d64:	mov    edx,0xef84b0ed
  407d69:	jbe    0x407d4d
  407d6b:	dec    esi
  407d6c:	xor    bl,ch
  407d6e:	mov    ah,0x92
  407d70:	nop
  407d71:	repz jne 0x407d65
  407d74:	xor    eax,0x2512f003
  407d79:	xor    eax,0xd0f21614
  407d7e:	rcl    DWORD PTR [edx-0x4069b469],1
  407d84:	mov    cs,WORD PTR [esi-0x6287683d]
  407d8a:	jmp    DWORD PTR [esi]
  407d8c:	xchg   edi,eax
  407d8d:	mov    ecx,ebx
  407d8f:	pop    edi
  407d90:	cmp    ebx,DWORD PTR [eax-0xfcd632a]
  407d96:	fmulp  st(6),st
  407d98:	icebp  
  407d99:	mov    ebx,DWORD PTR [ebx+0x7cd84eb8]
  407d9f:	add    eax,0xe501055c
  407da4:	loope  0x407d67
  407da6:	aam    0xb7
  407da8:	stos   DWORD PTR es:[edi],eax
  407da9:	rol    BYTE PTR [edx+ebx*1-0x72],1
  407dad:	shr    BYTE PTR [ecx-0x1da89cc3],cl
  407db3:	lds    edi,FWORD PTR [ecx+0x38a5573d]
  407db9:	xchg   esp,eax
  407dba:	fld    DWORD PTR [ebx+0x2a87ab3]
  407dc0:	jl     0x407dd9
  407dc2:	adc    DWORD PTR [ebx+edi*4-0x54],edx
  407dc6:	adc    DWORD PTR [edx+0x53f9d720],esp
  407dcc:	(bad)  [edi-0x64]
  407dcf:	imul   esp,DWORD PTR [esp+ebx*4-0x7a],0x1d5c39ff
  407dd7:	mov    esi,0xeab55ca8
  407ddc:	mov    ecx,eax
  407dde:	jp     0x407db6
  407de0:	mov    al,ds:0xc0b185de
  407de5:	jge    0x407dbe
  407de7:	ret    0x1e7b
  407dea:	push   cs
  407deb:	adc    eax,0x40e4daac
  407df0:	test   DWORD PTR [ecx-0x551aceb1],eax
  407df6:	cmp    al,0x1f
  407df8:	out    dx,al
  407df9:	out    0x3,eax
  407dfb:	push   es
  407dfc:	dec    edx
  407dfd:	loope  0x407dd4
  407dff:	push   eax
  407e00:	xlat   BYTE PTR ds:[ebx]
  407e01:	out    dx,eax
  407e02:	out    0x59,eax
  407e04:	mov    ?,esi
  407e06:	ds arpl sp,bp
  407e09:	out    dx,eax
  407e0a:	cdq    
  407e0b:	xchg   ebx,eax
  407e0c:	fisub  WORD PTR [esi]
  407e0e:	je     0x407d9d
  407e10:	(bad)  
  407e11:	cmc    
  407e12:	data16 mov WORD PTR [ebx+0x520df2f5],cs
  407e19:	ja     0x407e83
  407e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e1c:	stos   BYTE PTR es:[edi],al
  407e1d:	pop    edi
  407e1e:	add    BYTE PTR [eax-0xd],dh
  407e21:	fild   DWORD PTR [edi-0x2e]
  407e24:	push   cs
  407e25:	add    dh,BYTE PTR [esi-0x54]
  407e28:	push   cs
  407e29:	fist   DWORD PTR [edi-0x6215cef3]
  407e2f:	out    0x61,al
  407e31:	ret    
  407e32:	stc    
  407e33:	push   es
  407e34:	call   0x7a4:0x4d267de9
  407e3b:	leave  
  407e3c:	xchg   esp,eax
  407e3d:	jbe    0x407e15
  407e3f:	rcl    DWORD PTR [edx],cl
  407e41:	fistp  DWORD PTR [esi]
  407e43:	icebp  
  407e44:	mov    ecx,DWORD PTR [ebx]
  407e46:	(bad)  
  407e47:	cmp    al,0xa1
  407e49:	into   
  407e4a:	and    dl,BYTE PTR [edi+0x79b89026]
  407e50:	mov    ds:0x2e405d90,eax
  407e55:	mov    cl,0x6e
  407e57:	sbb    bh,dh
  407e59:	addr16 pop es
  407e5b:	test   eax,0x86b34e62
  407e60:	and    al,0xc8
  407e62:	int3   
  407e63:	pop    ss
  407e64:	jp     0x407e99
  407e66:	jns    0x407e4e
  407e68:	into   
  407e69:	and    BYTE PTR [edi],ch
  407e6b:	mov    eax,ds:0x8380e598
  407e70:	sbb    BYTE PTR [ebx-0x7efcc335],cl
  407e76:	dec    edx
  407e77:	std    
  407e78:	stos   DWORD PTR es:[edi],eax
  407e79:	or     edx,DWORD PTR [esi+0x4c48e30d]
  407e7f:	repz jp 0x407e7f
  407e82:	pop    edi
  407e83:	jnp    0x407e68
  407e85:	sbb    al,0x4e
  407e87:	jns    0x407e4a
  407e89:	lahf   
  407e8a:	imul   eax,DWORD PTR ds:0x11f75a38,0xffffffe8
  407e91:	mov    ch,0x30
  407e93:	cdq    
  407e94:	repnz call FWORD PTR [edx+0x50]
  407e98:	mov    bl,0x46
  407e9a:	mov    DWORD PTR [edx],ebp
  407e9c:	and    al,0x9f
  407e9e:	ret    0x55a7
  407ea1:	pop    ss
  407ea2:	js     0x407e72
  407ea4:	mov    ?,WORD PTR [ecx-0x38]
  407ea7:	cdq    
  407ea8:	sahf   
  407ea9:	hlt    
  407eaa:	ret    0x6031
  407ead:	xchg   ebp,eax
  407eae:	jns    0x407f25
  407eb0:	(bad)  
  407eb1:	retf   
  407eb2:	xchg   ecx,eax
  407eb3:	dec    esi
  407eb4:	jg     0x407e6e
  407eb6:	(bad)  
  407eb7:	jge    0x407f33
  407eb9:	ja     0x407e44
  407ebb:	sub    DWORD PTR [ecx-0x63],esp
  407ebe:	sub    DWORD PTR [ebx-0x3],0x63
  407ec2:	push   eax
  407ec3:	sub    eax,0xf4b441d8
  407ec8:	sub    DWORD PTR [ecx-0x4d48edf0],0xe3f5766d
  407ed2:	mov    ah,BYTE PTR [ecx-0x60]
  407ed5:	xchg   edi,eax
  407ed6:	xor    ebp,edi
  407ed8:	jo     0x407e5b
  407eda:	fisttp WORD PTR [edx-0xad0e27c]
  407ee0:	mov    esi,0xf2b02d
  407ee5:	push   0x19
  407ee7:	xor    eax,0xfbd64532
  407eec:	push   esi
  407eed:	js     0x407f5c
  407eef:	add    eax,0x7579f554
  407ef4:	dec    eax
  407ef5:	fild   QWORD PTR es:[edi+0x7529e9f8]
  407efc:	xor    al,0xad
  407efe:	or     eax,0x6bf2c117
  407f03:	and    DWORD PTR [ecx],0x64
  407f06:	xchg   edi,eax
  407f07:	and    al,0x98
  407f09:	xchg   cl,bl
  407f0b:	mov    bl,0x0
  407f0d:	xor    eax,0xb371e75b
  407f12:	push   edi
  407f13:	sub    BYTE PTR [ecx-0x3d3110c7],bl
  407f19:	jae    0x407f3e
  407f1b:	add    BYTE PTR [ebp+0x75a346d8],bl
  407f21:	inc    edx
  407f22:	push   0xffffffcd
  407f24:	lea    eax,[ebx-0x54]
  407f27:	inc    edi
  407f28:	or     DWORD PTR [esi+0x5f05fed5],edx
  407f2e:	mov    esp,DWORD PTR [edi-0x5a3f3913]
  407f34:	add    BYTE PTR [ecx-0x79120e07],ch
  407f3a:	push   esi
  407f3b:	xor    bh,bh
  407f3d:	pop    esi
  407f3e:	jne    0x407f3c
  407f40:	push   esi
  407f41:	les    ebx,FWORD PTR [ebp+ebx*1+0x62]
  407f45:	dec    ecx
  407f46:	cmp    eax,eax
  407f48:	xor    al,0x36
  407f4a:	stc    
  407f4b:	cwde   
  407f4c:	cwde   
  407f4d:	out    dx,al
  407f4e:	mov    al,ds:0x185b5b0d
  407f53:	push   ss
  407f54:	(bad)  
  407f55:	push   DWORD PTR [ebx-0x80]
  407f58:	lea    esi,[edi]
  407f5a:	(bad)  
  407f5b:	xor    DWORD PTR [ecx+0x45],edi
  407f5e:	daa    
  407f5f:	inc    esi
  407f60:	sub    al,0x7a
  407f62:	and    DWORD PTR [ecx],ebp
  407f64:	stos   BYTE PTR es:[edi],al
  407f65:	mov    dl,0x3d
  407f67:	fimul  WORD PTR [eax]
  407f69:	js     0x407fe3
  407f6b:	sbb    DWORD PTR [ecx],edi
  407f6d:	ss mov esp,0xbea2597b
  407f73:	dec    ebx
  407f74:	jmp    0x9272c7cd
  407f79:	add    eax,0x6ecd3277
  407f7e:	ss js  0x407f59
  407f81:	fild   DWORD PTR [eax+0x639646c9]
  407f87:	cmp    BYTE PTR [esi],cl
  407f89:	jle    0x407fd8
  407f8b:	jl     0x408005
  407f8d:	leave  
  407f8e:	repz sub dl,BYTE PTR [eax]
  407f91:	mov    WORD PTR [eax],es
  407f93:	out    0x8,al
  407f95:	loopne 0x407f1a
  407f97:	pushf  
  407f98:	(bad)  
  407f9a:	adc    esp,DWORD PTR [ebx-0x482d8fa]
  407fa0:	xor    edx,DWORD PTR [ebx]
  407fa2:	rcr    DWORD PTR [ebp+0x2579cb73],1
  407fa8:	in     al,dx
  407fa9:	inc    ecx
  407faa:	mov    eax,ds:0xc7585cfa
  407faf:	nop
  407fb0:	mov    al,ds:0xd540e46c
  407fb5:	mov    WORD PTR [ecx],es
  407fb7:	scas   al,BYTE PTR es:[edi]
  407fb8:	cli    
  407fb9:	xor    DWORD PTR [esi+0x32a89b],eax
  407fbf:	ret    
  407fc0:	iret   
  407fc1:	fs xor eax,0xe2747399
  407fc7:	pop    esp
  407fc8:	dec    ecx
  407fc9:	icebp  
  407fca:	xor    al,0x4d
  407fcc:	jle    0x407f63
  407fce:	fdiv   DWORD PTR [eax+0x38]
  407fd1:	in     al,0x3f
  407fd3:	mov    ebx,0xe551c69c
  407fd8:	hlt    
  407fd9:	jle    0x407fae
  407fdb:	in     eax,dx
  407fdc:	int    0x0
  407fde:	bound  esi,QWORD PTR [ebx]
  407fe0:	mov    al,0xee
  407fe2:	mov    ah,0xcb
  407fe4:	mov    eax,0x60a81f5
  407fe9:	and    eax,0xcbd5c003
  407fee:	cmp    ebx,esp
  407ff0:	mov    ah,0x4d
  407ff2:	mov    WORD PTR [edi-0xf],?
  407ff5:	(bad)  [edx+ebp*2]
  407ff8:	rcr    BYTE PTR [esi+0x4006e347],cl
  407ffe:	fadd   QWORD PTR [eax]
  408000:	call   0x8f6c:0x22ee8f82
  408007:	mov    ebx,0xa294386b
  40800c:	push   eax
  40800d:	xchg   ebx,eax
  40800e:	aas    
  40800f:	jmp    0xd673:0x12c9b120
  408016:	add    ch,BYTE PTR [ecx-0x5016a600]
  40801c:	popf   
  40801d:	dec    edx
  40801e:	and    ah,BYTE PTR [eax+eax*4-0x7d]
  408022:	mov    ecx,0x47eda7c2
  408027:	out    dx,eax
  408028:	push   es
  408029:	push   0xffffffeb
  40802b:	pushf  
  40802c:	mov    eax,ds:0xaa7e503e
  408031:	cld    
  408032:	push   ebp
  408033:	push   ds
  408034:	je     0x408022
  408036:	cmp    al,ah
  408038:	into   
  408039:	loopne 0x407ffc
  40803b:	shr    esp,0xd4
  40803e:	mov    BYTE PTR [edx-0xc],ch
  408041:	and    ah,al
  408043:	jae    0x40808d
  408045:	dec    edx
  408046:	add    ah,BYTE PTR [ecx+0x19]
  408049:	adc    BYTE PTR [edx+0x2b],al
  40804c:	es sti 
  40804e:	fsub   DWORD PTR [edx-0x66]
  408051:	fcom   DWORD PTR [edi]
  408053:	mov    cl,0xcf
  408055:	stos   DWORD PTR es:[edi],eax
  408056:	hlt    
  408057:	mov    DWORD PTR [edx+0x2267f70c],edi
  40805d:	xor    bl,BYTE PTR [eax+ebp*2-0x21a40aa2]
  408064:	add    edx,ebx
  408066:	jl     0x40802f
  408068:	lahf   
  408069:	or     esp,DWORD PTR [edx+0x3f]
  40806c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40806d:	rol    DWORD PTR [esi+0x61],1
  408070:	ret    
  408071:	jb     0x4080b2
  408073:	stos   BYTE PTR es:[edi],al
  408074:	or     edi,0xffffffe6
  408077:	(bad)  
  408078:	mov    dl,0x2b
  40807a:	fdivr  st(2),st
  40807c:	cmp    edi,DWORD PTR [edx]
  40807e:	stc    
  40807f:	(bad)  
  408080:	xor    ah,BYTE PTR [eax-0x2381da5b]
  408086:	lods   al,BYTE PTR ds:[esi]
  408087:	and    ch,0x90
  40808a:	in     eax,0x61
  40808c:	js     0x408109
  40808e:	pushf  
  40808f:	mov    BYTE PTR [edi+0x903f97],bh
  408095:	jp     0x4080c9
  408097:	sbb    DWORD PTR [esi-0x1ee6aa0c],esi
  40809d:	sub    edx,DWORD PTR [ebp+0x3302df2a]
  4080a3:	add    BYTE PTR [esi+ebp*4],0xcf
  4080a7:	dec    ebp
  4080a8:	outs   dx,BYTE PTR ds:[esi]
  4080a9:	loopne 0x40809e
  4080ab:	sbb    ah,BYTE PTR [edx-0x4b]
  4080ae:	sub    eax,0xb63a091e
  4080b3:	adc    edi,DWORD PTR [ebp-0x3e]
  4080b6:	pop    edx
  4080b7:	sbb    edx,DWORD PTR [edx]
  4080b9:	xchg   esp,eax
  4080ba:	sahf   
  4080bb:	mov    DWORD PTR [ebx-0x29],ecx
  4080be:	or     BYTE PTR [ecx],0x7b
  4080c1:	jmp    0x40811a
  4080c3:	pop    ds
  4080c4:	icebp  
  4080c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080c6:	mov    ebp,0x46eb22b0
  4080cb:	ins    BYTE PTR es:[edi],dx
  4080cc:	mov    ah,al
  4080ce:	lea    edx,[eax+0x31]
  4080d1:	popa   
  4080d2:	xchg   edx,eax
  4080d3:	stos   DWORD PTR es:[edi],eax
  4080d4:	jge    0x40813a
  4080d6:	in     eax,0xad
  4080d8:	icebp  
  4080d9:	pusha  
  4080da:	add    al,0xbe
  4080dc:	push   edi
  4080dd:	mov    cl,0x6c
  4080df:	in     al,0xa0
  4080e1:	out    dx,eax
  4080e2:	ins    DWORD PTR es:[edi],dx
  4080e3:	pop    ds
  4080e4:	ret    
  4080e5:	inc    eax
  4080e6:	add    cl,dh
  4080e8:	mov    bl,0x53
  4080ea:	into   
  4080eb:	mov    edi,0x5b54a59
  4080f0:	fcomip st,st(3)
  4080f2:	jmp    0x408110
  4080f4:	dec    ecx
  4080f5:	out    dx,al
  4080f6:	push   es
  4080f7:	cld    
  4080f8:	icebp  
  4080f9:	scas   eax,DWORD PTR es:[edi]
  4080fa:	pop    ebx
  4080fb:	xor    eax,DWORD PTR [edi-0x7c]
  4080fe:	add    eax,0xf80317df
  408103:	mov    ebp,0x504df13f
  408108:	(bad)  
  408109:	sar    DWORD PTR [ebx-0x1a634f85],cl
  40810f:	fimul  DWORD PTR [esi]
  408111:	ss ret 
  408113:	mov    ebp,eax
  408115:	mov    eax,0x4d1f4120
  40811a:	(bad)  
  40811b:	mov    ebx,0xe2ba1c95
  408120:	xor    bl,BYTE PTR [esi+eiz*1]
  408123:	dec    edi
  408124:	out    0x82,al
  408126:	cmp    edx,DWORD PTR [ebx+0x6db22701]
  40812c:	popa   
  40812d:	inc    edi
  40812e:	push   eax
  40812f:	shr    BYTE PTR [edx+0x29],1
  408132:	fist   DWORD PTR [ecx+0x14]
  408135:	add    bh,ch
  408137:	call   0xe3c9d942
  40813c:	mov    ah,0x1a
  40813e:	adc    eax,0x4c83b69
  408143:	cdq    
  408144:	iret   
  408145:	xor    eax,0x600ed1a1
  40814a:	xlat   BYTE PTR ds:[ebx]
  40814b:	mov    dl,0x8a
  40814d:	mov    dh,al
  40814f:	inc    eax
  408150:	push   esi
  408151:	xor    eax,0xd5a287df
  408156:	pop    ds
  408157:	ror    dh,cl
  408159:	jecxz  0x408123
  40815b:	jo     0x40815c
  40815d:	mov    esi,0xcff86a8f
  408162:	mov    esi,0x6847b468
  408167:	shl    BYTE PTR [edx-0x7c],cl
  40816a:	mov    eax,DWORD PTR [ecx+eax*4-0x39591491]
  408171:	jo     0x4081b6
  408173:	loopne 0x408113
  408175:	xchg   ecx,eax
  408176:	sub    al,0x37
  408178:	retf   0x3f44
  40817b:	out    0x31,eax
  40817d:	mov    BYTE PTR [edx-0x18a96a30],dh
  408183:	pushf  
  408184:	addr16 (bad) 
  408186:	add    al,BYTE PTR [esi-0x30]
  408189:	adc    ebx,DWORD PTR [ebx-0x6ddbb4f6]
  40818f:	mov    dl,BYTE PTR [edx-0x55b91700]
  408195:	push   ebx
  408196:	scas   eax,DWORD PTR es:[edi]
  408197:	sbb    eax,0xfdefdbe6
  40819c:	and    al,0xb
  40819e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819f:	pushf  
  4081a0:	push   edx
  4081a1:	enter  0x2782,0x2e
  4081a5:	inc    eax
  4081a6:	add    DWORD PTR [edi-0x75],0x6d
  4081aa:	jo     0x40813f
  4081ac:	rol    BYTE PTR [esi],cl
  4081ae:	aaa    
  4081af:	mov    eax,ds:0x664a3e38
  4081b4:	rcl    esp,cl
  4081b6:	lds    edx,FWORD PTR [edi]
  4081b8:	or     dh,cl
  4081ba:	data16 xor al,0x4a
  4081bd:	cmp    bl,bl
  4081bf:	push   0x3d
  4081c1:	not    BYTE PTR [ecx+0x54b4dae3]
  4081c7:	cmp    eax,0xbcb45a1a
  4081cc:	(bad)  
  4081cd:	cmp    BYTE PTR [edi],bh
  4081cf:	fiadd  WORD PTR [ebp+ecx*4-0x4e]
  4081d3:	cmc    
  4081d4:	enter  0xd406,0x7b
  4081d8:	and    eax,0xe33a0f4f
  4081dd:	cmp    al,0xc4
  4081df:	inc    esp
  4081e0:	fidiv  WORD PTR [esi+0x6206e336]
  4081e6:	fucomip st,st(7)
  4081e8:	aas    
  4081e9:	stos   DWORD PTR es:[edi],eax
  4081ea:	ins    DWORD PTR es:[edi],dx
  4081eb:	pop    ds
  4081ec:	out    0x35,eax
  4081ee:	xchg   esi,eax
  4081ef:	std    
  4081f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081f1:	adc    BYTE PTR [eax+0x50],0x80
  4081f5:	lods   al,BYTE PTR ds:[esi]
  4081f6:	dec    esi
  4081f7:	lods   eax,DWORD PTR fs:[esi]
  4081f9:	push   esi
  4081fa:	xor    al,0x72
  4081fc:	dec    esp
  4081fd:	mov    ebx,0x40a1c499
  408202:	jne    0x40823f
  408204:	adc    eax,DWORD PTR [eax-0x6f]
  408207:	or     esi,DWORD PTR [edx-0x25a0b7f9]
  40820d:	dec    eax
  40820e:	pop    ecx
  40820f:	lods   eax,DWORD PTR ds:[esi]
  408210:	cli    
  408211:	and    ah,BYTE PTR [esi+eiz*8-0x5a]
  408215:	test   dh,dl
  408217:	sub    edx,DWORD PTR [eax+0x630a34e3]
  40821d:	dec    esi
  40821e:	cdq    
  40821f:	cdq    
  408220:	mov    ch,dl
  408222:	in     eax,0xd8
  408224:	pop    es
  408225:	mov    edx,0x50d08461
  40822a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822b:	adc    al,0xce
  40822d:	xlat   BYTE PTR ds:[ebx]
  40822e:	ds mov ch,0xd0
  408231:	mov    dl,0x1d
  408233:	sar    DWORD PTR [ebp+0x5f],cl
  408236:	(bad)  
  408237:	in     al,0x1a
  408239:	pop    ecx
  40823a:	mov    DWORD PTR [ecx],ebx
  40823c:	sbb    DWORD PTR [edx],ecx
  40823e:	inc    ecx
  40823f:	xchg   esp,eax
  408240:	in     eax,0x4d
  408242:	xchg   ecx,eax
  408243:	mov    ch,0xa1
  408245:	aam    0xe6
  408247:	scas   al,BYTE PTR es:[edi]
  408248:	stc    
  408249:	jp     0x4082aa
  40824b:	push   ebp
  40824c:	idiv   DWORD PTR [ebx-0x73d94e5e]
  408252:	sbb    ebp,edx
  408254:	in     al,0x38
  408256:	popa   
  408257:	sub    al,0x97
  408259:	dec    eax
  40825a:	push   0xcc28bd18
  40825f:	out    0xff,al
  408261:	xchg   edx,eax
  408262:	fs (bad) 
  408264:	jp     0x4082c7
  408266:	div    BYTE PTR [esi]
  408268:	fiadd  DWORD PTR [ecx+eax*8+0x6d3f21db]
  40826f:	or     DWORD PTR [esi],ebx
  408271:	mov    dl,dl
  408273:	push   ebp
  408274:	addr16 in eax,0x12
  408277:	daa    
  408278:	scas   eax,DWORD PTR es:[edi]
  408279:	pop    es
  40827a:	xchg   esp,eax
  40827b:	adc    eax,0x8128059f
  408280:	out    0x6a,al
  408282:	pop    ss
  408283:	mov    dl,0xc6
  408285:	jg     0x4082fc
  408287:	cli    
  408288:	mov    edx,0xeae07f09
  40828d:	xor    eax,0x92884c0c
  408292:	add    al,0x5f
  408294:	repnz pop es
  408296:	arpl   WORD PTR [edx],bp
  408298:	mov    edx,0x27fb1629
  40829d:	sbb    al,0x7a
  40829f:	mov    ds:0xffabfed,eax
  4082a4:	jg     0x408293
  4082a6:	push   es
  4082a7:	jle    0x408286
  4082a9:	add    al,0x95
  4082ab:	cs dec esi
  4082ad:	lods   eax,DWORD PTR ds:[esi]
  4082ae:	sub    DWORD PTR ds:0x8a751b35,ebx
  4082b4:	call   0x904c3739
  4082b9:	imul   ebx,DWORD PTR [edx],0x49
  4082bc:	xchg   ebx,eax
  4082bd:	inc    esi
  4082be:	xor    ebp,ecx
  4082c0:	sub    BYTE PTR [ebx-0x4f01e52b],ch
  4082c6:	enter  0x3b76,0x59
  4082ca:	out    dx,eax
  4082cb:	add    BYTE PTR [ecx-0x290de94f],al
  4082d1:	inc    edx
  4082d2:	pop    edx
  4082d3:	inc    edx
  4082d4:	inc    ebp
  4082d5:	js     0x408340
  4082d7:	fcmovnbe st,st(2)
  4082d9:	dec    ebp
  4082db:	adc    DWORD PTR [eax],ebx
  4082dd:	test   BYTE PTR [esi+edx*2+0x5a],ch
  4082e1:	sbb    al,0xe3
  4082e3:	jne    0x408296
  4082e5:	adc    BYTE PTR [esi-0x223fff68],bh
  4082eb:	mov    ebp,0x27983def
  4082f0:	sahf   
  4082f1:	je     0x408293
  4082f3:	sub    DWORD PTR [edi+0x27],edx
  4082f6:	in     eax,0x72
  4082f8:	out    0xd0,al
  4082fa:	jmp    0x4082ff
  4082fc:	inc    ebx
  4082fd:	xchg   ebx,eax
  4082fe:	test   eax,0xf38a92fe
  408303:	out    dx,eax
  408304:	pusha  
  408305:	mov    bh,0x57
  408307:	or     esp,DWORD PTR [eax]
  408309:	repnz cmp DWORD PTR [ecx+esi*2+0x36],esp
  40830e:	fdivp  st(6),st
  408310:	stos   DWORD PTR es:[edi],eax
  408311:	std    
  408312:	inc    edx
  408313:	add    bl,dl
  408315:	xchg   esp,eax
  408316:	and    ah,BYTE PTR [ecx+edi*1]
  408319:	xor    al,0x66
  40831b:	mov    ebx,0xc99d36d4
  408320:	lahf   
  408321:	xor    eax,0x79e7aa1e
  408326:	retf   0x922e
  408329:	ds aam 0x27
  40832c:	cmc    
  40832d:	push   es
  40832e:	mov    bh,0x96
  408330:	jb     0x40830f
  408332:	(bad)  
  408333:	pop    esi
  408334:	mov    al,0x30
  408336:	jnp    0x408334
  408338:	inc    ecx
  408339:	pop    esp
  40833a:	mov    al,ds:0x1b87842a
  40833f:	and    DWORD PTR [edi-0x6a27d4bd],0x5a
  408346:	out    0xab,eax
  408348:	test   DWORD PTR [ebp+esi*8-0x22],edi
  40834c:	mov    BYTE PTR [ebx-0x5ae6a75f],cl
  408352:	and    bh,0x85
  408355:	popf   
  408356:	(bad)  
  408357:	aas    
  408358:	jns    0x408362
  40835a:	lods   ax,WORD PTR ds:[esi]
  40835c:	xchg   esp,eax
  40835d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40835e:	adc    cl,0x92
  408361:	dec    ebx
  408362:	adc    DWORD PTR [eax+eiz*2],ebx
  408365:	sbb    bh,ch
  408367:	out    dx,eax
  408368:	inc    ebp
  408369:	or     DWORD PTR ds:0x931cbace,0x75e4a2c5
  408373:	ror    BYTE PTR [eax+0x448cd3ba],0x60
  40837a:	in     eax,0xe4
  40837c:	mov    BYTE PTR [esi*4+0x680c07b0],ah
  408383:	inc    esi
  408384:	dec    esp
  408385:	pop    es
  408386:	inc    ecx
  408387:	dec    edx
  408388:	xchg   eax,esp
  40838a:	inc    ebx
  40838b:	push   cs
  40838c:	push   ebp
  40838d:	loopne 0x4083aa
  40838f:	or     DWORD PTR [ecx+ebp*4-0x40],edi
  408393:	xchg   esi,eax
  408394:	xchg   edx,eax
  408395:	jecxz  0x408411
  408397:	jne    0x40833a
  408399:	push   ebp
  40839a:	sahf   
  40839b:	adc    bh,BYTE PTR [eax-0x48bc7364]
  4083a1:	jle    0x408351
  4083a3:	jne    0x40837a
  4083a5:	jl     0x408377
  4083a7:	adc    al,0x8a
  4083a9:	pusha  
  4083aa:	and    al,0x30
  4083ac:	ss test esi,ebx
  4083af:	pop    ebx
  4083b0:	dec    edx
  4083b1:	sub    eax,0x455aa0c
  4083b6:	mov    ecx,DWORD PTR [ecx+0x13]
  4083b9:	sbb    BYTE PTR [ebx],0xac
  4083bc:	loope  0x408436
  4083be:	dec    ecx
  4083bf:	stos   DWORD PTR es:[edi],eax
  4083c0:	dec    eax
  4083c1:	and    eax,0x38e4ef9f
  4083c6:	add    al,0x28
  4083c8:	add    DWORD PTR [ebx-0x6],0xffffffd6
  4083cc:	add    ah,BYTE PTR [ebx-0x2db84783]
  4083d2:	sub    al,BYTE PTR [ebp+edi*8+0x60aea6ec]
  4083d9:	sbb    eax,0xa6be328b
  4083de:	mov    BYTE PTR [edi+eiz*4+0x18e9e573],0x3f
  4083e6:	jmp    0x8b09:0xf0095488
  4083ed:	retf   0x8658
  4083f0:	fldcw  WORD PTR [edx-0x2]
  4083f3:	out    dx,al
  4083f4:	lea    esi,[esi+0x578e2715]
  4083fa:	cli    
  4083fb:	daa    
  4083fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083fd:	pop    ss
  4083fe:	jbe    0x408446
  408400:	mov    WORD PTR [esi-0x37],cs
  408403:	retf   
  408404:	jl     0x408484
  408406:	cld    
  408407:	inc    esi
  408408:	sbb    al,al
  40840a:	mov    dh,0xe1
  40840c:	es in  eax,0xd2
  40840f:	je     0x408432
  408411:	lock aas 
  408413:	out    dx,al
  408414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408415:	xchg   edi,edi
  408417:	dec    ebx
  408418:	pop    ss
  408419:	loopne 0x408429
  40841b:	stos   BYTE PTR es:[edi],al
  40841c:	pop    ebx
  40841d:	add    ebx,DWORD PTR [ebx+0x7cb19e9d]
  408423:	loop   0x408473
  408425:	out    dx,eax
  408426:	test   eax,0x1ce1057a
  40842b:	(bad)  
  40842c:	in     eax,0xec
  40842e:	enter  0x6c9b,0x87
  408432:	mov    ds:0x59d669f8,eax
  408437:	or     al,0x45
  408439:	inc    ebp
  40843a:	fcmovbe st,st(1)
  40843c:	cmp    al,0xf8
  40843e:	ds retf 
  408440:	ins    DWORD PTR es:[edi],dx
  408441:	sub    ebx,esp
  408443:	mov    ebx,DWORD PTR [edi]
  408445:	ret    0xf311
  408448:	fbstp  TBYTE PTR [ebp+0x71ec1536]
  40844e:	(bad)  
  40844f:	out    0xef,eax
  408451:	jne    0x408440
  408453:	dec    BYTE PTR [ebp-0xe]
  408456:	in     eax,dx
  408457:	into   
  408458:	inc    eax
  408459:	cwde   
  40845a:	xchg   ebp,eax
  40845b:	scas   al,BYTE PTR es:[di]
  40845d:	pop    edi
  40845e:	aam    0xeb
  408460:	ret    0x5be0
  408463:	add    eax,0x400fb54e
  408468:	jo     0x408491
  40846a:	xchg   bh,ah
  40846c:	cdq    
  40846d:	sub    dl,BYTE PTR [esi+0x652231ee]
  408473:	ror    edi,0x73
  408476:	pop    es
  408477:	dec    esi
  408478:	call   0x839b60df
  40847d:	sub    BYTE PTR [esi-0x1b4e04d7],bl
  408483:	and    al,0x28
  408485:	and    al,0xe
  408487:	mov    edx,0xd602d556
  40848c:	mov    bl,BYTE PTR [edx+0x4]
  40848f:	js     0x408450
  408491:	inc    ebx
  408492:	out    0xc,al
  408494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408495:	test   al,0x3b
  408497:	xchg   edx,eax
  408498:	inc    ebp
  408499:	dec    esp
  40849a:	(bad)  
  40849b:	cmp    DWORD PTR [eax+0x5f],edx
  40849e:	jmp    0x4084fb
  4084a0:	dec    edi
  4084a1:	push   es
  4084a2:	fst    DWORD PTR [edi+0x71e254b2]
  4084a8:	push   ecx
  4084a9:	pop    ds
  4084aa:	inc    edx
  4084ab:	loope  0x40847d
  4084ad:	loope  0x40844d
  4084af:	mov    esi,0xb4edee3e
  4084b4:	iret   
  4084b5:	sbb    eax,0xf1c91b35
  4084ba:	(bad)  
  4084bb:	jmp    0x7ffb:0x9cc24087
  4084c2:	scas   al,BYTE PTR es:[edi]
  4084c3:	cs mov dh,0x44
  4084c6:	cmp    BYTE PTR [eax-0xa],ah
  4084c9:	sbb    edx,DWORD PTR [esi+0x32]
  4084cc:	pop    eax
  4084cd:	ror    BYTE PTR [esp+edi*8],cl
  4084d0:	js     0x408549
  4084d2:	jae    0x4084ba
  4084d4:	push   eax
  4084d5:	imul   eax,DWORD PTR [edx-0x4f],0x8da67e57
  4084dc:	mov    al,ds:0xe4eb07e6
  4084e1:	add    al,0xeb
  4084e3:	out    0x67,al
  4084e5:	push   ebx
  4084e6:	mov    ebp,0xf2d3394c
  4084eb:	scas   eax,DWORD PTR es:[edi]
  4084ec:	xor    ch,BYTE PTR [edx]
  4084ee:	xchg   esi,eax
  4084ef:	jecxz  0x408477
  4084f1:	xlat   BYTE PTR ds:[ebx]
  4084f2:	les    ebx,FWORD PTR [edx]
  4084f4:	and    ebp,DWORD PTR [ecx+0x6fc8aaba]
  4084fa:	dec    esp
  4084fb:	ss pop edx
  4084fd:	cwde   
  4084fe:	pop    ebx
  4084ff:	rcr    BYTE PTR [esi-0x6f8c01d4],1
  408505:	adc    esp,esi
  408507:	push   ebx
  408508:	adc    edx,0x45
  40850b:	cmc    
  40850c:	popf   
  40850d:	mov    bh,0xfe
  40850f:	xchg   ebx,eax
  408510:	loop   0x408571
  408512:	pop    eax
  408513:	xchg   BYTE PTR [ecx],dl
  408515:	js     0x4084c5
  408517:	es jb  0x40850a
  40851a:	(bad)  
  40851b:	jle    0x40853a
  40851d:	ds pop esp
  40851f:	sbb    DWORD PTR [edi+0x73],ecx
  408522:	jge    0x4084f9
  408524:	nop    DWORD PTR [edx]
  408527:	les    ecx,FWORD PTR [ecx]
  408529:	push   eax
  40852a:	pop    edi
  40852b:	daa    
  40852c:	into   
  40852d:	push   ds
  40852e:	or     ebp,DWORD PTR [ecx-0x1a]
  408531:	bound  esp,QWORD PTR [edi-0x65bbd517]
  408537:	xlat   BYTE PTR ds:[ebx]
  408538:	mov    al,ds:0xa775b42c
  40853d:	jns    0x40850f
  40853f:	and    ch,bh
  408541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408542:	(bad)  
  408543:	cmc    
  408544:	xchg   ebx,eax
  408545:	dec    ebx
  408546:	jns    0x40853b
  408548:	les    edi,FWORD PTR [edx]
  40854a:	xchg   edx,ebx
  40854c:	pop    ebp
  40854d:	fistp  QWORD PTR [edi]
  40854f:	xor    eax,0x2572b593
  408554:	fistp  QWORD PTR [eax+0x5b]
  408557:	dec    esi
  408558:	(bad)  
  408559:	adc    al,0xeb
  40855b:	shl    dl,cl
  40855d:	inc    edi
  40855e:	inc    ecx
  40855f:	pop    es
  408560:	mov    esi,0xd70db8e1
  408565:	stos   BYTE PTR es:[edi],al
  408566:	jae    0x4084f1
  408568:	js     0x408566
  40856a:	popa   
  40856b:	add    eax,0xe4311021
  408570:	jns    0x4084f7
  408572:	jg     0x4085a4
  408574:	pop    edx
  408575:	ficomp WORD PTR [ebp-0x28]
  408578:	mov    edi,0xac14b67d
  40857d:	xchg   ebp,eax
  40857e:	mov    edi,0xf777171e
  408583:	lock scas al,BYTE PTR es:[edi]
  408585:	loop   0x4085df
  408587:	idiv   dl
  408589:	repnz rcl esi,cl
  40858c:	imul   esi,DWORD PTR [ebx-0x3050b875],0x6d
  408593:	out    dx,al
  408594:	mov    bh,0x3f
  408596:	enter  0x9e3c,0x59
  40859a:	xor    BYTE PTR [edx],dh
  40859c:	enter  0x8ffe,0x45
  4085a0:	sar    BYTE PTR [ecx+edx*8+0xb],0xd8
  4085a5:	mov    dh,al
  4085a7:	mov    edx,0x1103afcf
  4085ac:	and    BYTE PTR [esi+0x8b8154e],0x28
  4085b3:	fucomp st(5)
  4085b5:	jae    0x40859e
  4085b7:	push   ecx
  4085b8:	sub    DWORD PTR [eax],ebp
  4085ba:	mov    bl,0x13
  4085bc:	jne    0x4085cc
  4085be:	or     eax,0x1beda9fa
  4085c3:	push   ebp
  4085c4:	cli    
  4085c5:	sbb    dl,BYTE PTR [edx-0x6d]
  4085c8:	mov    al,ds:0x4c21eb19
  4085cd:	push   esp
  4085ce:	outs   dx,BYTE PTR ds:[esi]
  4085cf:	ror    DWORD PTR [esi-0x5a],cl
  4085d2:	inc    edi
  4085d3:	loop   0x4085e6
  4085d5:	ja     0x4085b5
  4085d7:	je     0x408610
  4085d9:	outs   dx,DWORD PTR ds:[esi]
  4085da:	mov    bh,0xf5
  4085dc:	lea    edx,[edi+eax*8]
  4085df:	add    eax,0xeb08dbef
  4085e4:	inc    esp
  4085e5:	or     DWORD PTR [ebx-0x21828da1],0x4f70dad9
  4085ef:	mov    cl,0x85
  4085f1:	mov    bh,0x9f
  4085f3:	fild   WORD PTR [ebp-0x56e6580c]
  4085f9:	lock mov cl,0x22
  4085fc:	scas   al,BYTE PTR es:[edi]
  4085fd:	(bad)  
  4085fe:	in     al,0xe3
  408600:	les    edi,FWORD PTR [edi-0x199be084]
  408606:	(bad)  
  408608:	mov    bl,0x65
  40860a:	cli    
  40860b:	mov    ecx,ss
  40860d:	ja     0x408661
  40860f:	inc    ebx
  408610:	jmp    0xbf251db4
  408615:	push   edx
  408616:	sub    BYTE PTR [ecx+0x61],ah
  408619:	xor    al,0x25
  40861b:	dec    ecx
  40861c:	adc    edi,DWORD PTR [ebp+0x30]
  40861f:	mov    bl,0x39
  408621:	sbb    ah,BYTE PTR ds:0x5c6b07ae
  408627:	ret    
  408628:	cmc    
  408629:	scas   al,BYTE PTR es:[edi]
  40862a:	test   BYTE PTR [edx],al
  40862c:	jnp    0x4086aa
  40862e:	push   esi
  40862f:	jmp    0x408648
  408631:	out    0xb8,al
  408633:	ins    BYTE PTR es:[edi],dx
  408634:	or     BYTE PTR [ecx],0x20
  408637:	xchg   edx,eax
  408638:	adc    ecx,ebx
  40863a:	pop    ebp
  40863b:	add    DWORD PTR [ecx-0x30c8872d],esi
  408641:	mov    eax,0x7534162
  408646:	xor    DWORD PTR gs:[edx+ecx*2+0x2e],0x85b284ff
  40864f:	push   esi
  408650:	and    edx,DWORD PTR [edx+0x57]
  408653:	pop    esp
  408654:	jl     0x40861c
  408656:	in     al,dx
  408657:	fwait
  408658:	inc    ebx
  408659:	or     BYTE PTR [ebx-0x36b992a1],ah
  40865f:	rcr    BYTE PTR [ecx],cl
  408661:	sub    dh,BYTE PTR [eax]
  408663:	ins    BYTE PTR es:[edi],dx
  408664:	push   ecx
  408665:	popa   
  408666:	scas   al,BYTE PTR es:[edi]
  408667:	addr16 pop ebp
  408669:	mov    eax,0x50d25081
  40866e:	aaa    
  40866f:	push   esp
  408670:	sub    DWORD PTR [ecx+0x16],esi
  408673:	mov    ah,BYTE PTR [ecx-0x67]
  408676:	xchg   edx,eax
  408677:	div    esp
  408679:	and    eax,0xd0f77f4b
  40867e:	jge    0x40864f
  408680:	jne    0x4086de
  408682:	das    
  408683:	not    DWORD PTR [edx]
  408685:	mov    eax,ds:0xe67f4620
  40868a:	out    dx,al
  40868b:	mov    cl,0x4c
  40868d:	mov    cl,0x4b
  40868f:	shl    bh,1
  408691:	daa    
  408692:	clc    
  408693:	ja     0x4086af
  408695:	shl    DWORD PTR [ecx-0x4901897d],0x7b
  40869c:	pop    ebx
  40869d:	mov    ds:0x5d7589fe,eax
  4086a2:	mov    eax,ds:0x129dc466
  4086a7:	pop    ds
  4086a8:	int    0xf3
  4086aa:	int3   
  4086ab:	outs   dx,BYTE PTR ds:[esi]
  4086ac:	xlat   BYTE PTR ds:[ebx]
  4086ad:	lahf   
  4086ae:	sbb    dl,ah
  4086b0:	cmp    dh,al
  4086b2:	mov    ah,0xc5
  4086b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b5:	pop    esp
  4086b6:	inc    esi
  4086b7:	mov    al,ch
  4086b9:	shl    DWORD PTR [eax],1
  4086bb:	sbb    edi,DWORD PTR [ecx-0x1e4543cb]
  4086c1:	in     eax,0x72
  4086c3:	cli    
  4086c4:	inc    ebx
  4086c5:	out    0x6d,eax
  4086c7:	aad    0xa2
  4086c9:	out    0x95,al
  4086cb:	sbb    al,BYTE PTR [edx]
  4086cd:	arpl   WORD PTR [edi],bx
  4086cf:	jp     0x4086d2
  4086d1:	cmp    esi,DWORD PTR [edx-0x4aefb115]
  4086d7:	sahf   
  4086d8:	iret   
  4086d9:	sbb    al,bh
  4086db:	cmp    BYTE PTR [ebp+0xd63dd95],cl
  4086e1:	add    eax,0xe255d5f4
  4086e6:	cmp    al,0xd9
  4086e8:	inc    eax
  4086e9:	cmp    eax,0x3f24b1a1
  4086ee:	and    BYTE PTR [ecx-0x5d],cl
  4086f1:	lea    esi,[ecx+0x1b]
  4086f4:	and    dh,0x4b
  4086f7:	rcr    BYTE PTR [ecx],1
  4086f9:	sub    dh,ah
  4086fb:	sub    DWORD PTR [edx],ebx
  4086fd:	xchg   esp,eax
  4086fe:	test   al,0xd0
  408700:	add    al,0x43
  408702:	jae    0x408704
  408704:	popa   
  408705:	ss inc ebx
  408707:	sbb    esp,ecx
  408709:	pop    esp
  40870a:	adc    edi,DWORD PTR [ecx-0x47]
  40870d:	pop    ds
  40870e:	add    DWORD PTR ds:[ebx],ebx
  408711:	imul   BYTE PTR [ebp+ebp*1+0x76]
  408715:	pop    ebp
  408716:	push   0x50
  408718:	mov    ecx,0xd84a96e6
  40871d:	ss sbb cl,al
  408720:	retf   0x24f3
  408723:	dec    edi
  408724:	sbb    eax,0xbe63efb8
  408729:	hlt    
  40872a:	and    ah,dh
  40872c:	adc    al,0x29
  40872e:	xchg   ecx,eax
  40872f:	or     edx,esi
  408731:	fld    DWORD PTR [ecx+ecx*4+0x2c]
  408735:	dec    esi
  408736:	clc    
  408737:	cmp    DWORD PTR [ecx+0x13],ebp
  40873a:	xchg   edi,eax
  40873b:	sbb    eax,0x859e28a3
  408740:	out    0xa4,eax
  408742:	gs in  al,0xd0
  408745:	arpl   WORD PTR [esi],si
  408747:	idiv   DWORD PTR [edi]
  408749:	inc    ebx
  40874a:	cs or  eax,0x9a5d3b33
  408750:	xor    DWORD PTR [ebp-0x73bccca5],0xf8c392c5
  40875a:	xchg   dh,al
  40875c:	out    dx,eax
  40875d:	add    eax,0x64ed3d2a
  408762:	es pop esp
  408764:	xor    ebx,eax
  408766:	jecxz  0x408777
  408768:	shr    DWORD PTR [eax-0x53],cl
  40876b:	(bad)  
  40876d:	xor    eax,0xf9038121
  408772:	test   BYTE PTR [eax],bh
  408774:	call   0xa624:0x64524e02
  40877b:	push   0xfffffffa
  40877d:	out    dx,eax
  40877e:	sub    al,dl
  408780:	inc    esp
  408781:	inc    esi
  408782:	data16 mov ds:0x481b1e19,al
  408788:	test   BYTE PTR [edx+0x24530457],dl
  40878e:	test   DWORD PTR [esi+0x72],edi
  408791:	pop    edx
  408792:	fld    QWORD PTR [edx]
  408794:	inc    ecx
  408795:	loope  0x4087e0
  408797:	dec    edi
  408798:	repnz dec edx
  40879a:	jno    0x4087c8
  40879c:	and    BYTE PTR [eax+0xb],dh
  40879f:	jo     0x408808
  4087a1:	sbb    edx,ebp
  4087a3:	jmp    0xf653:0x60e0f218
  4087aa:	stc    
  4087ab:	data16 add BYTE PTR [ebp+0x38cefd38],ch
  4087b2:	ins    DWORD PTR es:[edi],dx
  4087b3:	push   esp
  4087b4:	cmc    
  4087b5:	mov    ds:0x5b78c10e,al
  4087ba:	imul   ecx,esp,0xffffff9f
  4087bd:	push   cs
  4087be:	jbe    0x4087ba
  4087c0:	sub    DWORD PTR [esi],0x9a89b52f
  4087c6:	aad    0x74
  4087c8:	leave  
  4087c9:	xchg   BYTE PTR [ecx+0x5c],al
  4087cc:	(bad)  ds:0x7ea9159
  4087d2:	nop
  4087d3:	mov    ebx,0xbd93b1e3
  4087d8:	xor    ecx,DWORD PTR [ebx-0x273fa048]
  4087de:	push   eax
  4087df:	popf   
  4087e0:	and    BYTE PTR [esi],dl
  4087e2:	not    BYTE PTR [edx+ebp*1-0x72603039]
  4087e9:	sbb    ah,bh
  4087eb:	cmc    
  4087ec:	pop    eax
  4087ed:	cmp    BYTE PTR [edi-0x38cad89f],bl
  4087f3:	push   cs
  4087f4:	(bad)  
  4087f5:	jno    0x4087b4
  4087f7:	cmp    dh,BYTE PTR [edx]
  4087f9:	adc    bh,0xa7
  4087fc:	cmp    bh,BYTE PTR ds:0xec0af1cc
  408802:	xchg   DWORD PTR [eax+edx*8-0x3d],edi
  408806:	out    0x13,eax
  408808:	popa   
  408809:	dec    edx
  40880a:	pop    edx
  40880b:	lods   al,BYTE PTR ds:[esi]
  40880c:	pop    edi
  40880d:	inc    ebx
  40880e:	push   ecx
  40880f:	stos   DWORD PTR es:[edi],eax
  408810:	cmp    BYTE PTR [esi+ebp*8-0x1c],0x3c
  408815:	pop    ebx
  408816:	fdivr  QWORD PTR [ebp+0x170831ae]
  40881c:	clc    
  40881d:	fsubr  DWORD PTR [ebx]
  40881f:	sbb    cl,BYTE PTR [ecx-0x75]
  408822:	xchg   ebx,eax
  408823:	scas   eax,DWORD PTR es:[edi]
  408824:	out    dx,eax
  408825:	sub    eax,0x17ccb44
  40882a:	fnstcw WORD PTR [esi+0x20]
  40882d:	sbb    eax,0x5744c12
  408832:	dec    ebp
  408833:	push   cx
  408835:	call   0x8f8cf443
  40883a:	sbb    BYTE PTR [ebp-0x1e],bl
  40883d:	mov    edx,0x7fc36185
  408842:	add    DWORD PTR [ecx-0x2c],eax
  408845:	add    cl,BYTE PTR [ebx-0x1c]
  408848:	pop    esp
  408849:	adc    al,0x27
  40884b:	sub    eax,0x25c8c414
  408850:	pop    es
  408851:	je     0x4087f6
  408853:	xchg   DWORD PTR [edx-0x57dd496],esp
  408859:	inc    edx
  40885a:	nop
  40885b:	xchg   esi,eax
  40885c:	dec    eax
  40885d:	mov    ?,WORD PTR [edi]
  40885f:	and    al,0xf
  408861:	pop    eax
  408862:	mov    DWORD PTR [edi],edx
  408864:	shl    al,0x4a
  408867:	les    esi,FWORD PTR [ebp+0x5d]
  40886a:	push   ds
  40886b:	in     eax,dx
  40886c:	into   
  40886d:	or     DWORD PTR [edi-0x345847f2],ebx
  408873:	not    cl
  408875:	out    dx,al
  408876:	jne    0x4088a4
  408878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408879:	loope  0x4088d5
  40887b:	imul   eax,DWORD PTR [esi-0x29],0x886d151e
  408882:	fcomp  DWORD PTR [edi+0x4f]
  408885:	mov    bh,0x40
  408887:	lods   eax,DWORD PTR ds:[esi]
  408888:	xor    cl,dl
  40888a:	prefetch BYTE PTR ds:0x21b35f92
  408891:	or     eax,0xe0061f67
  408896:	(bad)  
  408897:	mov    ecx,0x7b2d634a
  40889c:	ficomp WORD PTR [esi+0x3144f682]
  4088a2:	outs   dx,DWORD PTR ds:[esi]
  4088a3:	jl     0x4088b1
  4088a5:	test   DWORD PTR ds:0xe2230e83,ebx
  4088ab:	fdivrp st(0),st
  4088ad:	into   
  4088ae:	ins    DWORD PTR es:[edi],dx
  4088af:	lahf   
  4088b0:	xchg   ecx,eax
  4088b1:	cld    
  4088b2:	rcr    ch,1
  4088b4:	inc    ecx
  4088b5:	mov    DWORD PTR ds:0xd452e09e,0xaeb5cc84
  4088bf:	sub    edx,DWORD PTR [esi+0x1]
  4088c2:	and    DWORD PTR [eax+ebp*8+0x3fd681c8],esp
  4088c9:	jnp    0x408935
  4088cb:	rol    ebp,0x57
  4088ce:	jmp    0x7e22:0x7c19026f
  4088d5:	or     dl,BYTE PTR [ebp+ecx*8+0x28173782]
  4088dc:	inc    edx
  4088dd:	movnti DWORD PTR [eax+0x89ffa25],ecx
  4088e4:	fstp   DWORD PTR [edx]
  4088e6:	push   ebx
  4088e7:	lods   eax,DWORD PTR ds:[esi]
  4088e8:	sub    esp,esi
  4088ea:	repnz mov WORD PTR [esi],cs
  4088ed:	inc    edx
  4088ee:	ror    esi,cl
  4088f0:	(bad)  
  4088f1:	fsubr  QWORD PTR ds:0x471fec56
  4088f7:	mov    edi,0xd3fd17e4
  4088fc:	inc    ebp
  4088fd:	add    BYTE PTR ds:0x93965f9,dh
  408903:	dec    ecx
  408904:	xchg   ebx,eax
  408905:	les    eax,FWORD PTR fs:[edi+ecx*1-0x6b]
  40890a:	mov    bh,0xe1
  40890c:	mul    DWORD PTR [ecx+0x1f]
  40890f:	or     eax,0x95ed0292
  408914:	xchg   DWORD PTR [edx],ebp
  408916:	cmp    al,0x55
  408918:	and    ch,BYTE PTR [ecx-0x6f]
  40891b:	mov    ?,ebp
  40891d:	dec    edi
  40891e:	enter  0x7e77,0x52
  408922:	in     eax,0xa
  408924:	into   
  408925:	ss cwde 
  408927:	or     BYTE PTR [edi+0x61],cl
  40892a:	mov    bh,0x9b
  40892c:	xor    ebp,DWORD PTR [esi-0x52]
  40892f:	hlt    
  408930:	int    0x31
  408932:	out    dx,eax
  408933:	add    esi,DWORD PTR [ecx]
  408935:	inc    ebp
  408936:	and    edi,DWORD PTR [edx+eiz*8]
  408939:	sbb    DWORD PTR [esi],ebx
  40893b:	jnp    0x4089b6
  40893d:	rcr    DWORD PTR [edx],0xe0
  408940:	leave  
  408941:	cmp    esi,DWORD PTR [esi+0x47]
  408944:	xlat   BYTE PTR ds:[ebx]
  408945:	test   al,0x46
  408947:	xchg   BYTE PTR [eax-0x62],bh
  40894a:	xchg   ebx,eax
  40894b:	(bad)  
  40894c:	mov    eax,ds:0x79315718
  408951:	inc    edi
  408952:	and    DWORD PTR cs:[eax-0x61],0xc369731b
  40895a:	inc    esi
  40895b:	lods   al,BYTE PTR ds:[esi]
  40895c:	(bad)  
  40895d:	jb     0x40899b
  40895f:	hlt    
  408960:	stos   BYTE PTR es:[edi],al
  408961:	adc    al,0x7f
  408963:	mov    eax,0xd00452b0
  408968:	ins    DWORD PTR es:[edi],dx
  408969:	adc    BYTE PTR [esi+0x5d],dl
  40896c:	(bad)  
  40896d:	cld    
  40896e:	mov    bl,0xb2
  408970:	inc    edx
  408971:	push   ds
  408972:	cli    
  408973:	mov    dh,0xe5
  408975:	sbb    BYTE PTR [eax],0x66
  408978:	std    
  408979:	xchg   edx,eax
  40897a:	(bad)  
  40897b:	imul   esi,DWORD PTR [edi+0x4af7e80c],0xd1db81a5
  408985:	mov    al,BYTE PTR [ecx+0x4f]
  408988:	popa   
  408989:	sub    eax,0xddc0e2e3
  40898e:	sahf   
  40898f:	cld    
  408990:	cld    
  408991:	stc    
  408992:	jae    0x40899e
  408994:	int3   
  408995:	jo     0x408962
  408997:	ror    esi,cl
  408999:	inc    edi
  40899a:	sub    al,bl
  40899c:	ins    BYTE PTR es:[edi],dx
  40899d:	and    eax,0x22418ab5
  4089a2:	push   ss
  4089a3:	mov    DWORD PTR [ecx],0x3fdca92c
  4089a9:	or     eax,0xc62a0c9e
  4089ae:	xlat   BYTE PTR ds:[ebx]
  4089af:	popa   
  4089b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b1:	mov    dh,0x86
  4089b3:	mov    ds:0x8f07e97a,eax
  4089b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b9:	clc    
  4089ba:	aad    0x5b
  4089bc:	xchg   edi,eax
  4089bd:	jmp    0xdf85:0x17b397cd
  4089c4:	and    al,0xb7
  4089c6:	mov    ds:0x2c23e5d5,eax
  4089cb:	adc    BYTE PTR [eax],bh
  4089cd:	loope  0x408985
  4089cf:	mov    eax,ds:0xa535b55d
  4089d4:	sbb    al,BYTE PTR [edi+eiz*4+0x71]
  4089d8:	fisub  WORD PTR [ebx+eiz*1+0x6810f5f2]
  4089df:	outs   dx,BYTE PTR ds:[esi]
  4089e0:	pop    ss
  4089e1:	fs pop bx
  4089e4:	or     eax,esi
  4089e6:	push   0x214965c4
  4089eb:	shl    esp,0xfc
  4089ee:	jp     0x4089c1
  4089f0:	gs mov bh,0xd
  4089f3:	mov    eax,0xc0f67475
  4089f8:	in     eax,dx
  4089f9:	imul   ebx,esi,0x2a63a12
  4089ff:	loop   0x408a1f
  408a01:	lods   eax,DWORD PTR ds:[esi]
  408a02:	pop    eax
  408a03:	dec    esi
  408a04:	inc    eax
  408a05:	mov    al,0xec
  408a07:	fld    DWORD PTR [eax]
  408a09:	mov    WORD PTR [bp+di+0x1f2a],es
  408a0e:	or     edi,eax
  408a10:	fisub  WORD PTR [esi+0x45acdbfe]
  408a16:	sub    ebx,eax
  408a18:	sub    eax,0xb9653628
  408a1d:	in     al,dx
  408a1e:	jb     0x408a01
  408a20:	push   ss
  408a21:	fld    QWORD PTR ds:0xbc53f676
  408a27:	pop    ebx
  408a28:	fwait
  408a29:	sub    al,0x4
  408a2b:	cmp    dl,ch
  408a2d:	std    
  408a2e:	test   esi,0x6596a7b0
  408a34:	xchg   DWORD PTR [edi-0x5f644fc2],ebx
  408a3a:	and    esi,DWORD PTR [edx]
  408a3c:	cdq    
  408a3d:	mov    cl,0x72
  408a3f:	pop    ebx
  408a40:	mov    esi,0xd142f0e5
  408a45:	adc    DWORD PTR [ecx+0x3ec2d78],esp
  408a4b:	stc    
  408a4c:	xor    DWORD PTR [ebp+0x43],0x45dd9cb8
  408a53:	pushf  
  408a54:	mov    esi,0x3cf8c1e6
  408a59:	mov    esp,DWORD PTR [esi]
  408a5b:	sub    al,0xd0
  408a5d:	pop    esi
  408a5e:	inc    eax
  408a5f:	dec    ebp
  408a60:	jmp    0x3d37:0xd30804bf
  408a67:	pusha  
  408a68:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6a:	and    BYTE PTR [esi+0x5b],bh
  408a6d:	loopne 0x408a08
  408a6f:	sar    BYTE PTR [ebp+eax*1+0x1f],1
  408a73:	push   ebp
  408a74:	mov    ebp,0x3cab91ba
  408a79:	cs push cs
  408a7b:	pop    ebx
  408a7c:	jge    0x408ace
  408a7e:	mov    WORD PTR [ebx+0x6c],ds
  408a81:	dec    ecx
  408a82:	inc    edx
  408a83:	add    ebp,DWORD PTR [edi+0x500cfedf]
  408a89:	cmp    BYTE PTR es:[esi+ecx*2],ah
  408a8d:	jne    0x408ad5
  408a8f:	data16 into 
  408a91:	repnz or eax,DWORD PTR [ecx-0x18db1cdf]
  408a98:	sbb    al,0xb8
  408a9a:	pop    ebp
  408a9b:	outs   dx,BYTE PTR ds:[esi]
  408a9c:	stos   BYTE PTR es:[edi],al
  408a9d:	adc    BYTE PTR [eax-0x29],ah
  408aa0:	inc    ebp
  408aa1:	fsub   DWORD PTR [esi+0xb]
  408aa4:	or     al,0x2e
  408aa6:	je     0x408ade
  408aa8:	lods   al,BYTE PTR ds:[esi]
  408aa9:	add    dh,BYTE PTR [eax+0x41]
  408aac:	out    0x28,eax
  408aae:	pop    ebp
  408aaf:	in     eax,0x47
  408ab1:	retf   
  408ab2:	or     DWORD PTR [edi+0x61],0xc
  408ab6:	mov    BYTE PTR [esi-0x5242cda3],0x30
  408abd:	sub    DWORD PTR [ebx+esi*1+0x2622acd0],ebp
  408ac4:	adc    eax,esi
  408ac6:	out    dx,eax
  408ac7:	scas   eax,DWORD PTR es:[edi]
  408ac8:	push   ecx
  408ac9:	out    0x25,eax
  408acb:	sti    
  408acc:	sbb    cl,BYTE PTR [eax+0x59]
  408acf:	mov    edi,0x88c64859
  408ad4:	out    0xda,al
  408ad6:	xchg   esi,eax
  408ad7:	mov    ecx,0x5eb4f155
  408adc:	and    eax,0xafe96281
  408ae1:	das    
  408ae2:	sub    ebx,DWORD PTR [eax-0x743836a1]
  408ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae9:	and    BYTE PTR [edi+edx*1-0x61],dh
  408aed:	outs   dx,DWORD PTR ds:[esi]
  408aee:	or     BYTE PTR [ecx+edi*2-0x6a],ch
  408af2:	sub    BYTE PTR [edi],bl
  408af4:	add    ah,BYTE PTR [ebx-0x6a]
  408af7:	xor    BYTE PTR [edx],bh
  408af9:	js     0x408b58
  408afb:	jo     0x408ad2
  408afd:	scas   eax,DWORD PTR es:[edi]
  408afe:	sub    edi,DWORD PTR [edi+0x3bd16694]
  408b04:	adc    eax,0x64e156f1
  408b09:	push   eax
  408b0a:	dec    ecx
  408b0b:	jo     0x408b04
  408b0d:	cmc    
  408b0e:	xchg   BYTE PTR [esi+esi*4+0x35],ch
  408b12:	xor    eax,0xf0d0a377
  408b17:	cld    
  408b18:	inc    DWORD PTR [ecx+0x77809412]
  408b1e:	jg     0x408ada
  408b20:	mov    eax,ds:0x7ab6f145
  408b25:	or     eax,0xc6da9437
  408b2a:	scas   al,BYTE PTR es:[edi]
  408b2b:	jb     0x408b69
  408b2d:	xchg   edx,eax
  408b2e:	lods   eax,DWORD PTR ds:[esi]
  408b2f:	mov    dh,0xf4
  408b31:	mov    ah,0x10
  408b33:	cmp    eax,0xf9c675f1
  408b38:	inc    ecx
  408b39:	test   eax,0x3eb9c645
  408b3e:	mov    edi,0xd56f6a49
  408b43:	jmp    0x408ac6
  408b45:	ret    
  408b46:	ja     0x408b3a
  408b48:	mov    eax,0x3cd3b2a
  408b4d:	and    al,0xef
  408b4f:	xlat   BYTE PTR ds:[ebx]
  408b50:	shl    DWORD PTR [esi],1
  408b52:	outs   dx,BYTE PTR ds:[esi]
  408b53:	mov    eax,ebx
  408b55:	inc    esi
  408b56:	lods   al,BYTE PTR ds:[esi]
  408b57:	sub    eax,0xf96b85d6
  408b5c:	cmp    BYTE PTR [edi-0x40],0xc2
  408b60:	add    eax,0xa452790e
  408b65:	mov    edx,DWORD PTR [edi+esi*4-0x5c25d7a2]
  408b6c:	clc    
  408b6d:	test   BYTE PTR [eax-0x33233d61],ah
  408b73:	sbb    ebx,DWORD PTR [ebp-0x770d175d]
  408b79:	pop    ds
  408b7a:	push   ebp
  408b7b:	jle    0x408bbd
  408b7d:	jp     0x408bcd
  408b7f:	stc    
  408b80:	pop    ebx
  408b81:	daa    
  408b82:	push   edx
  408b83:	aas    
  408b84:	test   BYTE PTR [esi-0xb],ch
  408b87:	jecxz  0x408b33
  408b89:	dec    esi
  408b8a:	dec    esi
  408b8b:	mov    esp,DWORD PTR [esi+0xe]
  408b8e:	ret    0x309d
  408b91:	arpl   WORD PTR [eax-0x3d],cx
  408b94:	inc    ecx
  408b95:	pop    ebp
  408b96:	mov    esp,0x2ab7b4e4
  408b9b:	leave  
  408b9c:	push   0x928b4528
  408ba1:	jno    0x408b61
  408ba3:	xchg   esp,eax
  408ba4:	cmp    cl,BYTE PTR [ebx]
  408ba6:	pusha  
  408ba7:	scas   eax,DWORD PTR es:[edi]
  408ba8:	cmp    cl,BYTE PTR [esi+0x61]
  408bab:	in     eax,dx
  408bac:	mov    ah,0x3f
  408bae:	push   edi
  408baf:	xlat   BYTE PTR ds:[ebx]
  408bb0:	and    bl,BYTE PTR [ecx-0x7873ebd5]
  408bb6:	rcl    DWORD PTR [esi],0x45
  408bb9:	loop   0x408b99
  408bbb:	jae    0x408bea
  408bbd:	rcr    DWORD PTR [ecx+edi*2+0xfffa54e],cl
  408bc4:	xlat   BYTE PTR ds:[ebx]
  408bc5:	xchg   esi,eax
  408bc6:	hlt    
  408bc7:	retf   
  408bc8:	push   0x73
  408bca:	shr    DWORD PTR ds:0x4ef224d,0xd8
  408bd1:	popa   
  408bd2:	in     eax,dx
  408bd3:	test   BYTE PTR [ebx+0x55],dh
  408bd6:	(bad)  [eax+0x6]
  408bd9:	cmp    eax,0x3862045f
  408bde:	dec    esp
  408bdf:	xchg   esp,eax
  408be0:	cmc    
  408be1:	mov    esi,0xc577ab47
  408be6:	lahf   
  408be7:	and    dh,dh
  408be9:	pop    edi
  408bea:	or     al,0x21
  408bec:	loope  0x408bae
  408bee:	xchg   esi,eax
  408bef:	xor    al,0xbb
  408bf1:	cmp    BYTE PTR [edi+0x3c141ed5],bh
  408bf7:	mov    ebx,DWORD PTR [ecx+0x41dd8ee1]
  408bfd:	cwde   
  408bfe:	inc    eax
  408bff:	sub    ah,dh
  408c01:	mov    eax,ds:0xc6ffe80c
  408c06:	xchg   ebx,eax
  408c07:	stos   DWORD PTR es:[edi],eax
  408c08:	out    0x39,al
  408c0a:	into   
  408c0b:	fist   WORD PTR [ebp-0x14]
  408c0e:	jbe    0x408c4c
  408c10:	cmp    eax,0x50c4b52d
  408c15:	popa   
  408c16:	xchg   BYTE PTR [eax],ch
  408c18:	push   ebp
  408c19:	mov    ecx,DWORD PTR [eax+edi*8-0x71]
  408c1d:	js     0x408c32
  408c1f:	pop    ecx
  408c20:	int3   
  408c21:	daa    
  408c22:	(bad)  
  408c23:	push   cs
  408c24:	xchg   DWORD PTR ds:0xcf924cf0,ebx
  408c2a:	push   ds
  408c2b:	sub    al,0xdc
  408c2d:	psubsb mm2,QWORD PTR [edx+0x9116f86]
  408c34:	pop    ecx
  408c35:	adc    BYTE PTR [ecx],bh
  408c37:	(bad)  
  408c38:	jg     0x408bff
  408c3a:	pop    esp
  408c3b:	inc    esi
  408c3c:	in     eax,0xda
  408c3e:	aas    
  408c3f:	inc    ebx
  408c40:	sbb    al,0x55
  408c42:	dec    edi
  408c43:	add    ecx,DWORD PTR [edi+0x32]
  408c46:	js     0x408c64
  408c48:	in     al,dx
  408c49:	mov    al,ds:0x2e7cb691
  408c4e:	lahf   
  408c4f:	push   esi
  408c50:	push   edi
  408c51:	push   esi
  408c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c53:	xchg   ecx,eax
  408c54:	pop    edx
  408c55:	dec    ebx
  408c56:	adc    eax,0x42655c70
  408c5b:	jmp    0x408c94
  408c5d:	xchg   ecx,eax
  408c5e:	jl     0x408c1f
  408c60:	lods   al,BYTE PTR ds:[esi]
  408c61:	nop
  408c62:	popf   
  408c63:	fidiv  DWORD PTR [ebx]
  408c65:	jns    0x408bf8
  408c67:	aaa    
  408c68:	fdiv   DWORD PTR [edi]
  408c6a:	sti    
  408c6b:	xlat   BYTE PTR ds:[ebx]
  408c6c:	xchg   esp,eax
  408c6d:	inc    ebp
  408c6e:	mov    bl,0x7e
  408c70:	xchg   ebp,eax
  408c71:	pop    ecx
  408c72:	stos   DWORD PTR es:[edi],eax
  408c73:	add    eax,0xc7165415
  408c78:	lahf   
  408c79:	pop    ebx
  408c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7b:	ds sub edi,ebp
  408c7e:	and    eax,0x607fc8c3
  408c83:	das    
  408c84:	sbb    ebx,esi
  408c86:	pop    ecx
  408c87:	es (bad) 
  408c89:	cmp    dh,al
  408c8b:	adc    eax,0xfe771114
  408c90:	mov    al,ds:0x5dae6e2c
  408c95:	or     eax,DWORD PTR [edx-0x77]
  408c98:	je     0x408d01
  408c9a:	push   edi
  408c9b:	mov    ecx,0xf9e1526c
  408ca0:	movlps QWORD PTR [ebx+0x4e31151c],xmm0
  408ca7:	popa   
  408ca8:	or     dh,ch
  408caa:	rcl    ebp,0x3f
  408cad:	and    esi,ebp
  408caf:	mov    ah,0xe2
  408cb1:	int    0x4c
  408cb3:	popa   
  408cb4:	jno    0x408d02
  408cb6:	inc    esi
  408cb7:	out    0x1c,eax
  408cb9:	repz add esp,DWORD PTR [eax+0x2b]
  408cbd:	std    
  408cbe:	pop    es
  408cbf:	sbb    bl,bh
  408cc1:	or     ebp,ebp
  408cc3:	mov    ebp,0x94018db8
  408cc8:	mov    eax,ds:0x6cf0434f
  408ccd:	fwait
  408cce:	in     al,dx
  408ccf:	jo     0x408d12
  408cd1:	jno    0x408c64
  408cd3:	mov    ch,0xde
  408cd5:	sbb    DWORD PTR [edi-0x27],edx
  408cd8:	sub    BYTE PTR fs:[edx+0x6e0c020c],0x31
  408ce0:	mov    al,0xdd
  408ce2:	adc    DWORD PTR [ecx],esi
  408ce4:	fldenv [eax+0x765c2e4a]
  408cea:	test   eax,0xd4d7e875
  408cef:	scas   al,BYTE PTR es:[edi]
  408cf0:	cld    
  408cf1:	add    esp,DWORD PTR [edi]
  408cf3:	mov    ah,0xd1
  408cf5:	loop   0x408d34
  408cf7:	in     al,dx
  408cf8:	xchg   ecx,eax
  408cf9:	inc    eax
  408cfa:	aam    0x7
  408cfc:	mov    ds:0x6f2daa9e,al
  408d01:	sbb    ch,0xbb
  408d04:	(bad)  
  408d05:	hlt    
  408d06:	dec    ecx
  408d07:	iret   
  408d08:	(bad)  
  408d09:	mov    ebx,DWORD PTR ds:0x764b6a69
  408d0f:	lods   eax,DWORD PTR ds:[esi]
  408d10:	rol    BYTE PTR [edi-0x78],0x3f
  408d14:	push   eax
  408d15:	jp     0x408d7e
  408d17:	jp     0x408d71
  408d19:	jecxz  0x408ca2
  408d1b:	cwde   
  408d1c:	xchg   ebp,eax
  408d1d:	push   0x3e46a175
  408d22:	int    0x8b
  408d24:	ret    0xb279
  408d27:	or     eax,0xbcbb20a1
  408d2c:	push   edi
  408d2d:	xchg   ebp,eax
  408d2e:	je     0x408d06
  408d30:	addr16 pop edx
  408d32:	ss ja  0x408d79
  408d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d36:	dec    edi
  408d37:	leave  
  408d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d39:	mov    WORD PTR [edx+0x1f413712],cs
  408d3f:	dec    ebp
  408d40:	inc    ebx
  408d41:	jg     0x408cd1
  408d43:	sbb    bl,ah
  408d45:	mov    DWORD PTR [esi+eiz*8-0x414e1669],edx
  408d4c:	jecxz  0x408d6d
  408d4e:	test   al,0x37
  408d50:	xor    ebx,DWORD PTR [esi+0x77ff2e1]
  408d56:	mov    DWORD PTR gs:[eax+0x4f],esi
  408d5a:	mov    al,0xe4
  408d5c:	pop    esi
  408d5d:	mov    ah,BYTE PTR [esi-0x21cc88f3]
  408d63:	xor    eax,0xe01f05b
  408d68:	sbb    DWORD PTR [ecx+0x1d],eax
  408d6b:	jle    0x408dec
  408d6d:	xchg   BYTE PTR [ebp-0x67],bh
  408d70:	sbb    DWORD PTR [esi],eax
  408d72:	mov    al,0x3a
  408d74:	or     cl,BYTE PTR [ebx+0x60]
  408d77:	ss push ebx
  408d79:	in     eax,0xce
  408d7b:	pop    ds
  408d7c:	mov    al,ds:0x755750b6
  408d81:	stos   BYTE PTR es:[edi],al
  408d82:	pop    es
  408d83:	(bad)  
  408d84:	mov    dl,0x1f
  408d86:	jge    0x408d6e
  408d88:	mov    ds:0x92c60d4b,al
  408d8d:	mov    bh,BYTE PTR [ebp+0xb]
  408d90:	jmp    0xe3e84843
  408d95:	lock lods eax,DWORD PTR ds:[esi]
  408d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d98:	add    ch,BYTE PTR [ecx+ebp*1]
  408d9b:	mov    ds,WORD PTR cs:[edx-0x42]
  408d9f:	sbb    esi,ebp
  408da1:	sub    DWORD PTR [esi+0x36eca067],ebx
  408da7:	sbb    eax,ebx
  408da9:	test   eax,0xc3966d99
  408dae:	inc    edx
  408daf:	iret   
  408db0:	jbe    0x408dc4
  408db2:	sar    DWORD PTR ds:0x284dcb47,cl
  408db8:	dec    ebx
  408db9:	test   eax,0x7d767a61
  408dbe:	xlat   BYTE PTR ds:[ebx]
  408dbf:	mov    ds:0xc0936161,al
  408dc4:	fdecstp 
  408dc6:	sbb    dh,BYTE PTR [edi+0x2c]
  408dc9:	sbb    BYTE PTR [eax],dh
  408dcb:	cli    
  408dcc:	sbb    DWORD PTR [eax],eax
  408dce:	jl     0x408d77
  408dd0:	fcom   DWORD PTR [esi+edi*1-0x477945dd]
  408dd7:	cdq    
  408dd8:	test   eax,0xdd5d50ec
  408ddd:	idiv   BYTE PTR ds:0x4f14a2c
  408de3:	inc    ebx
  408de4:	outs   dx,DWORD PTR ds:[esi]
  408de5:	fmul   DWORD PTR [esp+edx*2+0x757aa229]
  408dec:	jne    0x408dc0
  408dee:	pop    ecx
  408def:	mov    ch,0x14
  408df1:	ficom  DWORD PTR [edi+0x71]
  408df4:	mov    DWORD PTR [eax+0x142b1b1c],eax
  408dfa:	mov    ch,0xd4
  408dfc:	stos   BYTE PTR es:[edi],al
  408dfd:	cmp    eax,0xb1d1b23e
  408e02:	push   edx
  408e03:	push   esp
  408e04:	fwait
  408e05:	in     al,0xbb
  408e07:	cmp    BYTE PTR [edi+0x4f],dh
  408e0a:	and    ecx,DWORD PTR [edx+0x3b78a470]
  408e10:	mov    cl,0x66
  408e12:	dec    ebx
  408e13:	dec    edi
  408e14:	ja     0x408e32
  408e16:	ficomp DWORD PTR [esi]
  408e18:	repnz and DWORD PTR [esi+0x6743bd44],edi
  408e1f:	mov    edx,DWORD PTR [eax+0x5ca6f332]
  408e25:	shr    BYTE PTR [edx],0xc0
  408e28:	jmp    0x19d1:0xd71df426
  408e2f:	(bad)  
  408e30:	pop    ds
  408e31:	pop    edx
  408e32:	sahf   
  408e33:	cmp    al,BYTE PTR [ecx+ecx*2-0x36]
  408e37:	ja     0x408de1
  408e39:	and    DWORD PTR [ebx],0x8b25b949
  408e3f:	and    DWORD PTR [edi],eax
  408e41:	stos   BYTE PTR es:[edi],al
  408e42:	cmp    BYTE PTR [eax],cl
  408e44:	dec    ebp
  408e45:	jno    0x408e72
  408e47:	push   esi
  408e48:	push   esp
  408e49:	ss push ds
  408e4b:	out    dx,eax
  408e4c:	ins    DWORD PTR es:[edi],dx
  408e4d:	mov    ds:0x6220afc0,eax
  408e52:	daa    
  408e53:	icebp  
  408e54:	in     eax,dx
  408e55:	lods   al,BYTE PTR ds:[esi]
  408e56:	mul    DWORD PTR [edi+0x72]
  408e59:	sbb    ah,BYTE PTR [ebx+0x76691f9f]
  408e5f:	(bad)  
  408e60:	rol    BYTE PTR [eax+ebx*1-0x2d072006],0xa7
  408e68:	mov    edx,0x859532ff
  408e6d:	scas   eax,DWORD PTR es:[edi]
  408e6e:	and    BYTE PTR [eax+0x471d7726],bh
  408e74:	retf   
  408e75:	(bad)  
  408e76:	jmp    0x408ecf
  408e78:	inc    edx
  408e79:	rcr    DWORD PTR [ebp-0x25],0x9c
  408e7d:	or     DWORD PTR [ebx+0x40f2f579],eax
  408e83:	xchg   edx,eax
  408e84:	push   edx
  408e85:	lock jp 0x408e5a
  408e88:	mov    al,ds:0xdb0f8b0f
  408e8d:	cmp    bh,BYTE PTR [ecx-0x5a]
  408e90:	xchg   edi,eax
  408e91:	mov    ebp,0x9af20108
  408e96:	out    dx,al
  408e97:	sahf   
  408e98:	call   0xf8b3:0x30eba629
  408e9f:	inc    esp
  408ea0:	icebp  
  408ea1:	out    0x95,eax
  408ea3:	pop    ebp
  408ea4:	push   0x6bd57ca0
  408ea9:	cmp    dh,al
  408eab:	ins    BYTE PTR es:[edi],dx
  408eac:	sbb    ebx,eax
  408eae:	and    al,0xe8
  408eb0:	lods   eax,DWORD PTR ds:[esi]
  408eb1:	dec    edi
  408eb2:	add    dh,bh
  408eb4:	dec    esp
  408eb5:	mov    ss,WORD PTR [esp+edx*2]
  408eb8:	dec    edx
  408eb9:	in     eax,0x66
  408ebb:	gs fs pop edx
  408ebe:	adc    ah,BYTE PTR [edi+edx*2+0x7ed8ce51]
  408ec5:	mov    ebx,0xe61adaec
  408eca:	test   eax,0x850079bf
  408ecf:	xchg   ecx,eax
  408ed0:	push   eax
  408ed1:	or     al,0xe
  408ed3:	test   eax,0x65967d3a
  408ed8:	test   BYTE PTR [ecx+ebx*8],bl
  408edb:	xchg   edi,eax
  408edc:	loop   0x408e63
  408ede:	xor    DWORD PTR [edx],ecx
  408ee0:	cmp    eax,0xad7cb8ce
  408ee5:	xchg   ecx,eax
  408ee6:	fisubr WORD PTR [eax-0x66]
  408ee9:	ds stos DWORD PTR es:[edi],eax
  408eeb:	push   esp
  408eec:	ss mov al,0x9b
  408eef:	dec    edx
  408ef0:	pop    ebx
  408ef1:	xchg   edx,eax
  408ef2:	adc    cl,ah
  408ef4:	out    dx,al
  408ef5:	xor    al,0x96
  408ef7:	enter  0x599d,0x2
  408efb:	push   esp
  408efc:	rcl    DWORD PTR [eax+0x4],cl
  408eff:	bound  edi,QWORD PTR [edi-0x3]
  408f02:	dec    edx
  408f03:	xor    ebx,edi
  408f05:	inc    ebx
  408f06:	mov    ds:0x7f1a4188,al
  408f0b:	pushf  
  408f0c:	pop    ecx
  408f0d:	pop    ecx
  408f0e:	mov    ah,0x5b
  408f10:	dec    edi
  408f11:	(bad)  
  408f15:	xchg   esi,eax
  408f16:	sub    esp,DWORD PTR [ecx-0x1f]
  408f19:	data16 clc 
  408f1b:	push   ds
  408f1c:	sbb    ah,bl
  408f1e:	sub    ah,BYTE PTR [esi-0x52]
  408f21:	pop    ecx
  408f22:	fsub   DWORD PTR [ecx+0x521d84ae]
  408f28:	fcomp  QWORD PTR [eax+ebp*1+0x491a4ba6]
  408f2f:	dec    ecx
  408f30:	mov    bl,0xc6
  408f32:	adc    dl,dh
  408f34:	inc    ecx
  408f35:	push   ebp
  408f36:	js     0x408ebc
  408f38:	test   edx,esp
  408f3a:	mov    al,0xff
  408f3c:	mov    al,BYTE PTR [edx-0x4d17d6f3]
  408f42:	retf   
  408f43:	inc    esp
  408f44:	mov    ecx,esp
  408f46:	out    0xd,eax
  408f48:	sub    DWORD PTR [ebx-0x56f2ba3f],esi
  408f4e:	icebp  
  408f4f:	xor    ch,dl
  408f51:	rcl    ch,cl
  408f53:	or     al,0x6e
  408f55:	fild   DWORD PTR [ecx-0x37]
  408f58:	sbb    eax,DWORD PTR [ecx+0x37870fa5]
  408f5e:	loop   0x408f6f
  408f60:	jg     0x408fc4
  408f62:	(bad)  
  408f63:	or     esp,DWORD PTR [edi+0x2d3e557]
  408f69:	sub    eax,0xac853136
  408f6e:	je     0x408f7d
  408f70:	ret    
  408f71:	add    eax,0xa87248e7
  408f76:	xor    ah,BYTE PTR [edx]
  408f78:	jno    0x408fb8
  408f7a:	lea    ebx,[esi-0x5b1be3d5]
  408f80:	xlat   BYTE PTR ds:[ebx]
  408f81:	hlt    
  408f82:	das    
  408f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f84:	lds    esi,FWORD PTR [eax+0x23]
  408f87:	push   ds
  408f88:	mov    ds:0xb82681e7,eax
  408f8d:	jmp    0xfb61:0xfba40078
  408f94:	lods   eax,DWORD PTR ds:[esi]
  408f95:	sahf   
  408f96:	xor    DWORD PTR [edx+0x5d9dbb12],ebp
  408f9c:	ror    BYTE PTR [ebp+eiz*1-0x3b],cl
  408fa0:	idiv   ch
  408fa2:	xchg   ecx,eax
  408fa3:	jecxz  0x408f57
  408fa5:	out    0x1c,eax
  408fa7:	lahf   
  408fa8:	imul   esp,DWORD PTR [edi+edx*1],0x9675378b
  408faf:	jl     0x408fd9
  408fb1:	add    BYTE PTR [ebp-0x127a42fd],0xbc
  408fb8:	mov    WORD PTR [ebx],?
  408fba:	cmp    dl,0xe2
  408fbd:	and    ebx,DWORD PTR [edi-0x30167cdc]
  408fc3:	bound  ebp,QWORD PTR [ebx]
  408fc5:	cmp    BYTE PTR [eax+ecx*1],0x97
  408fc9:	inc    esp
  408fca:	jge    0x408fea
  408fcc:	clc    
  408fcd:	lods   al,BYTE PTR ds:[esi]
  408fce:	test   al,0xd0
  408fd0:	scas   al,BYTE PTR es:[edi]
  408fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fd2:	lahf   
  408fd3:	push   esp
  408fd4:	lahf   
  408fd5:	add    BYTE PTR [esi+0x6df5a973],bl
  408fdb:	and    DWORD PTR [eax-0x17],ebx
  408fde:	sahf   
  408fdf:	and    esi,DWORD PTR [ecx]
  408fe1:	inc    ebp
  408fe2:	int3   
  408fe3:	(bad)  
  408fe4:	cmp    cl,BYTE PTR [edi+0x23a03c72]
  408fea:	xor    BYTE PTR [esp+ebp*8],bh
  408fed:	add    ebx,DWORD PTR [eax+ebx*4-0x5b]
  408ff1:	pop    esp
  408ff2:	std    
  408ff3:	stc    
  408ff4:	stos   BYTE PTR es:[edi],al
  408ff5:	fimul  WORD PTR ds:0x970c188c
  408ffb:	add    cl,BYTE PTR [ebx+esi*1]
  408ffe:	dec    esi
  408fff:	daa    
  409000:	jo     0x408ff1
  409002:	ret    
  409003:	adc    al,0x4
  409005:	test   edx,edx
  409007:	fld    DWORD PTR [eax]
  409009:	push   esi
  40900a:	addr16 mov ecx,0xcc1b79d7
  409010:	retf   0x3e40
  409013:	mov    al,0x1f
  409015:	jnp    0x409051
  409017:	fistp  DWORD PTR [esi+0x1]
  40901a:	jb     0x408ff8
  40901c:	pop    eax
  40901d:	mov    ds:0x7a3beba8,al
  409022:	stos   DWORD PTR es:[edi],eax
  409023:	icebp  
  409024:	jecxz  0x409093
  409026:	gs inc edi
  409028:	in     al,dx
  409029:	xchg   esp,eax
  40902a:	sahf   
  40902b:	xchg   ecx,eax
  40902c:	mov    eax,ds:0xb3e3940d
  409031:	fwait
  409032:	cmp    eax,0x580edfd2
  409037:	je     0x409014
  409039:	into   
  40903a:	pusha  
  40903b:	out    0x22,al
  40903d:	pop    ds
  40903e:	popf   
  40903f:	(bad)  
  409040:	jp     0x4090a9
  409042:	pop    ebx
  409043:	xchg   edi,eax
  409044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409045:	fucomi st,st(7)
  409047:	mov    DWORD PTR [edx+0xe],esi
  40904a:	and    ch,BYTE PTR [edi+0x7a]
  40904d:	mov    ebx,DWORD PTR [edx+0x22]
  409050:	stc    
  409051:	dec    edi
  409052:	test   al,0x57
  409054:	inc    esi
  409055:	xor    eax,0xab490492
  40905a:	test   DWORD PTR [ecx-0x8f369b2],esi
  409060:	jns    0x4090b2
  409062:	sahf   
  409063:	icebp  
  409064:	push   0x3
  409066:	or     al,0x2c
  409068:	fs pushf 
  40906a:	add    eax,0xb6411fba
  40906f:	mov    esp,0xd7b32076
  409074:	mov    ah,0x2e
  409076:	add    bl,BYTE PTR [edx+eiz*8+0x1805195]
  40907d:	mov    bh,0x4e
  40907f:	inc    ebx
  409080:	inc    BYTE PTR [eax-0x78489d25]
  409086:	lods   eax,DWORD PTR ds:[esi]
  409087:	mov    dh,BYTE PTR [ebx]
  409089:	dec    esp
  40908a:	jmp    0x296f545
  40908f:	inc    ebx
  409090:	repnz imul esi,DWORD PTR [edx-0x2d],0xb7383012
  409098:	in     eax,0xe9
  40909a:	neg    eax
  40909c:	pusha  
  40909d:	(bad)  
  40909e:	in     al,0xd1
  4090a0:	mov    bl,0xab
  4090a2:	adc    BYTE PTR [eax-0x4],bh
  4090a5:	dec    edi
  4090a6:	mov    edx,DWORD PTR [esi-0x68]
  4090a9:	xor    ecx,ebp
  4090ab:	cmp    edi,DWORD PTR [ebp+0x17]
  4090ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090af:	cs jg  0x4090de
  4090b2:	jno    0x4090ef
  4090b4:	aaa    
  4090b5:	fiadd  DWORD PTR [edx-0xf]
  4090b8:	jmp    0x8f90b987
  4090bd:	pop    ds
  4090be:	call   0x344b5c66
  4090c3:	imul   eax,DWORD PTR gs:[edx-0x17f43517],0xfa19b72d
  4090ce:	xchg   esi,eax
  4090cf:	mov    BYTE PTR [ecx+0x50d363e],al
  4090d5:	xchg   esi,eax
  4090d6:	fistp  QWORD PTR [ebx-0x6ca603f4]
  4090dc:	cwde   
  4090dd:	arpl   WORD PTR [ebx+0x10e7f8b5],bp
  4090e3:	jae    0x409071
  4090e5:	rol    DWORD PTR [esi-0x26192953],0xb1
  4090ec:	jg     0x40913c
  4090ee:	loop   0x40912d
  4090f0:	and    dh,al
  4090f2:	in     al,dx
  4090f3:	jmp    0x4090f8
  4090f5:	clc    
  4090f6:	mov    ecx,0xa01fca41
  4090fb:	add    ebp,DWORD PTR [esi-0x33b99a65]
  409101:	sub    DWORD PTR [ebp+ebp*2+0xe6a6bf0],0x48
  409109:	jno    0x40911e
  40910b:	adc    BYTE PTR [edx-0x7d444b5a],bl
  409111:	push   edi
  409112:	out    0x41,al
  409114:	leave  
  409115:	pop    edi
  409116:	pop    esi
  409117:	outs   dx,BYTE PTR ds:[esi]
  409118:	imul   eax,DWORD PTR [edi-0x1aae042c],0x41c10969
  409122:	ins    BYTE PTR es:[edi],dx
  409123:	leave  
  409124:	fmul   DWORD PTR [esi-0x58c8908a]
  40912a:	add    al,al
  40912c:	ds in  al,dx
  40912e:	stc    
  40912f:	pop    ds
  409130:	dec    ebx
  409131:	setl   dl
  409134:	cmp    DWORD PTR [ebp+0x78],0x5b3863e8
  40913b:	mov    edx,0xf2ffdeed
  409140:	sub    al,0x3f
  409142:	add    edi,DWORD PTR [ecx]
  409144:	xor    ebp,DWORD PTR [ecx+0x60512592]
  40914a:	sti    
  40914b:	in     al,dx
  40914c:	jns    0x40912b
  40914e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40914f:	inc    esp
  409150:	daa    
  409151:	push   ds
  409152:	xor    DWORD PTR [edx],esi
  409154:	mov    edx,0x8ffcafc6
  409159:	xchg   BYTE PTR [eax],dl
  40915b:	mov    bl,0xd
  40915d:	mov    ebx,0x22904111
  409162:	sbb    BYTE PTR [ebx],cl
  409164:	mov    ebp,0x520d813a
  409169:	leave  
  40916a:	out    dx,al
  40916b:	mov    WORD PTR [ebx-0x43e59233],?
  409171:	test   al,0x9
  409173:	sub    eax,0xc82dfdf9
  409178:	(bad)  
  409179:	lds    edi,FWORD PTR [edi]
  40917b:	fistp  DWORD PTR [ebx]
  40917d:	aaa    
  40917e:	sahf   
  40917f:	jbe    0x409194
  409181:	xchg   esp,eax
  409182:	cli    
  409183:	xor    DWORD PTR [edi],ecx
  409185:	or     BYTE PTR [edi],dl
  409187:	jecxz  0x4091bd
  409189:	imul   eax,DWORD PTR [eax+0x568ae962],0xc004884d
  409193:	mov    eax,ds:0x5af1d157
  409198:	cmp    dh,dh
  40919a:	sub    DWORD PTR [ebx],esp
  40919c:	in     eax,0x52
  40919e:	sbb    DWORD PTR [eax],ebx
  4091a0:	mov    ch,0x2a
  4091a2:	jle    0x4091d8
  4091a4:	xor    ah,BYTE PTR [ecx]
  4091a6:	int3   
  4091a7:	imul   esp,DWORD PTR [esi+0x14],0x32
  4091ab:	pop    esi
  4091ac:	lods   al,BYTE PTR ds:[esi]
  4091ad:	fimul  WORD PTR [edx]
  4091af:	inc    ecx
  4091b0:	and    esp,DWORD PTR [edi+0x44]
  4091b3:	mov    dh,0x45
  4091b5:	and    al,0xcb
  4091b7:	sbb    BYTE PTR [ebp-0x324ddf10],al
  4091bd:	cs inc edx
  4091bf:	push   0xb434fa78
  4091c4:	add    al,0x39
  4091c6:	dec    edi
  4091c7:	inc    ecx
  4091c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c9:	fsubr  DWORD PTR [edi+ebp*4-0x1a]
  4091cd:	std    
  4091ce:	imul   ecx,DWORD PTR [ecx+0x66873818],0x483b0795
  4091d8:	pusha  
  4091d9:	sbb    bl,BYTE PTR [ebp+0x5c]
  4091dc:	jl     0x409215
  4091de:	retf   0xbe9a
  4091e1:	inc    ebx
  4091e2:	or     ebp,DWORD PTR [ebp+ebp*1+0x6340d87b]
  4091e9:	xor    al,0x22
  4091eb:	ret    0x574c
  4091ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ef:	fdivr  QWORD PTR [eax+0x543d6775]
  4091f5:	(bad)
  4091f8:	cdq    
  4091f9:	push   esi
  4091fa:	mov    esp,0x2991d408
  4091ff:	pusha  
  409200:	xor    DWORD PTR gs:[ecx],0x12bf6a9e
  409207:	aam    0xd3
  409209:	adc    DWORD PTR [eax],edx
  40920b:	push   eax
  40920c:	mov    ebx,?
  40920e:	inc    ebx
  40920f:	sti    
  409210:	push   ss
  409211:	cdq    
  409212:	cmp    DWORD PTR [ecx-0x77e28766],ecx
  409218:	mov    cl,BYTE PTR [eax+0x248e5df1]
  40921e:	es pop eax
  409220:	out    0xef,eax
  409222:	hlt    
  409223:	mov    dh,ch
  409225:	inc    ebx
  409226:	fistp  QWORD PTR [esp+eax*8]
  409229:	dec    bx
  40922b:	xchg   edi,eax
  40922c:	retf   0x27d2
  40922f:	aad    0xb
  409231:	mov    ecx,0x16d92faa
  409236:	aaa    
  409237:	and    ch,BYTE PTR [ebx-0x2d6a37ee]
  40923d:	or     al,BYTE PTR [ebx-0x56]
  409240:	rcr    DWORD PTR [ebx+0xe0b13e],cl
  409246:	or     edx,DWORD PTR [edi-0x23]
  409249:	lahf   
  40924a:	xor    cl,dl
  40924c:	pop    ebx
  40924d:	fdivr  st,st(4)
  40924f:	ins    BYTE PTR es:[edi],dx
  409250:	jmp    0x409281
  409252:	jns    0x4091f9
  409254:	inc    edx
  409255:	rcl    BYTE PTR [eax+0x72],0x42
  409259:	xchg   esp,eax
  40925a:	repz cli 
  40925c:	in     eax,0x6c
  40925e:	into   
  40925f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409260:	gs xchg eax,ebx
  409263:	cmp    edx,DWORD PTR [esp+esi*4-0x35]
  409267:	mov    ds:0x3cb2ca56,al
  40926c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40926d:	mov    bl,0xf5
  40926f:	(bad)  
  409270:	clc    
  409271:	cwde   
  409272:	sub    ecx,DWORD PTR [esi+0x64e81650]
  409278:	jnp    0x4092ef
  40927a:	out    dx,eax
  40927b:	sbb    dl,BYTE PTR [eax+esi*8-0x13]
  40927f:	sahf   
  409280:	jns    0x40924a
  409282:	xor    DWORD PTR [ebx-0x18],eax
  409285:	mov    ebp,0xe6f0cb12
  40928a:	inc    eax
  40928b:	xor    eax,0xb9c8cfc3
  409290:	das    
  409291:	xchg   edi,eax
  409292:	scas   al,BYTE PTR es:[edi]
  409293:	js     0x4092a6
  409295:	sbb    al,0x88
  409297:	and    al,0x7e
  409299:	xchg   DWORD PTR [eax+0x2e700e19],esi
  40929f:	push   ss
  4092a0:	data16 fs int3 
  4092a3:	cdq    
  4092a4:	xchg   esi,eax
  4092a5:	ins    DWORD PTR es:[edi],dx
  4092a6:	and    al,0xcb
  4092a8:	scas   eax,DWORD PTR es:[edi]
  4092a9:	mov    ?,edi
  4092ab:	loope  0x4092aa
  4092ad:	inc    edi
  4092ae:	in     al,dx
  4092af:	and    BYTE PTR [esi],ch
  4092b1:	jmp    0x409251
  4092b3:	xor    eax,0x23ca0687
  4092b8:	pop    esp
  4092b9:	clc    
  4092ba:	xchg   ebx,eax
  4092bb:	push   edx
  4092bc:	cwde   
  4092bd:	or     ebx,DWORD PTR [ebp+0x1d]
  4092c0:	sbb    bl,BYTE PTR [ebp-0x77f53d56]
  4092c6:	test   al,0x3
  4092c8:	mov    cl,0x72
  4092ca:	xchg   edx,eax
  4092cb:	and    al,0x24
  4092cd:	sbb    ebp,DWORD PTR [ebx-0x19bc9c7f]
  4092d3:	mov    ecx,0x5fe8ce80
  4092d8:	lds    ecx,FWORD PTR [edi*8+0x29856405]
  4092df:	adc    DWORD PTR [ebx+esi*1+0x22],ecx
  4092e3:	shr    BYTE PTR [ecx],1
  4092e5:	call   0xbf36d16d
  4092ea:	in     al,dx
  4092eb:	dec    edi
  4092ec:	push   es
  4092ed:	pop    esp
  4092ee:	fisubr DWORD PTR [ebx]
  4092f0:	fldcw  WORD PTR [edi+0x54eadca8]
  4092f6:	adc    ebx,esp
  4092f8:	bound  edi,QWORD PTR [esi]
  4092fa:	pop    es
  4092fb:	pop    es
  4092fc:	test   DWORD PTR [esi+0x2d],esp
  4092ff:	fild   WORD PTR [eax]
  409301:	sbb    eax,0xc86dd43d
  409306:	and    eax,0x4b260dcf
  40930b:	sbb    ebp,ebx
  40930d:	jae    0x409293
  40930f:	fs jge 0x40930c
  409312:	sbb    al,0x14
  409314:	sbb    al,0x87
  409316:	add    ebx,ecx
  409318:	aas    
  409319:	stos   BYTE PTR es:[edi],al
  40931a:	xor    ebx,DWORD PTR [eax-0x6b]
  40931d:	push   eax
  40931e:	and    eax,0xb54bd643
  409323:	xor    eax,0x623acabd
  409328:	into   
  409329:	mov    edx,0xcbb35adf
  40932e:	outs   dx,BYTE PTR ds:[esi]
  40932f:	cwde   
  409330:	mov    ebp,0x12ed2d96
  409335:	adc    al,0x94
  409337:	out    0x64,al
  409339:	pop    esi
  40933a:	lock or eax,0x9dcca7fd
  409340:	ret    
  409341:	call   DWORD PTR [ebx+esi*2+0x6949f45a]
  409348:	push   ebp
  409349:	mov    esp,0x11baa22e
  40934e:	outs   dx,DWORD PTR ds:[esi]
  40934f:	aaa    
  409350:	fcomp  QWORD PTR [esi+0x71bfb0e6]
  409356:	lea    esp,[ebx]
  409358:	retf   0x7feb
  40935b:	cmc    
  40935c:	neg    BYTE PTR [edi]
  40935e:	(bad)  
  40935f:	aam    0xa4
  409361:	adc    al,cl
  409363:	retf   0x9b7
  409366:	cdq    
  409367:	sub    ebp,ecx
  409369:	jae    0x409302
  40936b:	mov    dl,cl
  40936d:	add    dl,ah
  40936f:	mov    cl,0xad
  409371:	pop    edx
  409372:	add    ecx,eax
  409374:	xchg   esi,eax
  409375:	stos   BYTE PTR es:[edi],al
  409376:	ror    dh,1
  409378:	push   cs
  409379:	sahf   
  40937a:	pop    ecx
  40937b:	shl    BYTE PTR [edx],0x24
  40937e:	xlat   BYTE PTR ds:[ebx]
  40937f:	jecxz  0x40932e
  409381:	lods   eax,DWORD PTR ds:[esi]
  409382:	ror    DWORD PTR [ebp-0x28],0x37
  409386:	or     dh,BYTE PTR [esi-0x4c518141]
  40938c:	loope  0x40930e
  40938e:	dec    eax
  40938f:	sbb    edi,DWORD PTR [edx+0x1fa2acb3]
  409395:	jl     0x409401
  409397:	mov    al,0xbb
  409399:	pop    es
  40939a:	xchg   ebp,eax
  40939b:	xor    al,0x7c
  40939d:	ret    0xf7dc
  4093a0:	add    eax,0xf2de2fe1
  4093a5:	loope  0x4093b5
  4093a7:	adc    eax,0xc510cf71
  4093ac:	xchg   esi,eax
  4093ad:	call   0xe384946b
  4093b2:	mov    ecx,fs
  4093b4:	retf   
  4093b5:	and    BYTE PTR [eax+0x7d3be8cd],al
  4093bb:	in     al,0x1a
  4093bd:	out    dx,al
  4093be:	test   al,0x76
  4093c0:	(bad)  [edi+0x10]
  4093c3:	mov    ecx,0x3e11d692
  4093c8:	in     al,0xaf
  4093ca:	cld    
  4093cb:	imul   eax,DWORD PTR [eax-0x28],0x6e4002c0
  4093d2:	lods   eax,DWORD PTR ds:[esi]
  4093d3:	ror    DWORD PTR [esp+ebp*8],1
  4093d6:	and    al,0x37
  4093d8:	(bad)  
  4093d9:	aad    0xd7
  4093db:	add    esi,DWORD PTR [ebx]
  4093dd:	test   BYTE PTR [esi],ah
  4093df:	mov    al,0x26
  4093e1:	les    edx,FWORD PTR [esi-0x65]
  4093e4:	ss sub cl,ah
  4093e7:	ins    DWORD PTR es:[edi],dx
  4093e8:	pop    eax
  4093e9:	jge    0x4093fd
  4093eb:	xor    eax,0x7c4ab88c
  4093f0:	not    BYTE PTR [esp+ebx*1+0x1a]
  4093f4:	sub    BYTE PTR [ecx+edi*1],bl
  4093f7:	das    
  4093f8:	stos   DWORD PTR es:[edi],eax
  4093f9:	lock rcr DWORD PTR [edi-0xc],cl
  4093fd:	dec    ebp
  4093fe:	fld    TBYTE PTR [ebp-0x246ae449]
  409404:	mov    bl,0xa1
  409406:	cmp    al,0x3b
  409408:	add    BYTE PTR [ebx+edi*8-0x63],dl
  40940c:	ins    BYTE PTR es:[edi],dx
  40940d:	pop    ds
  40940e:	xchg   ebx,ebx
  409410:	cs inc esp
  409412:	lahf   
  409413:	call   0xc31b:0xfc8e64e
  40941a:	push   ecx
  40941b:	mov    edi,0x742cc6c5
  409420:	add    eax,0x987b6464
  409425:	pop    ebp
  409426:	jmp    0xe1254f3f
  40942b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942c:	dec    ebx
  40942d:	in     eax,0xe7
  40942f:	call   0xfab1738b
  409434:	xchg   DWORD PTR [eax],ecx
  409436:	ja     0x4093cf
  409438:	div    BYTE PTR [edx]
  40943a:	loop   0x4093bd
  40943c:	ror    BYTE PTR [eax],0x6d
  40943f:	mov    DWORD PTR [esi-0x54a2c3ee],eax
  409445:	and    ch,BYTE PTR [edx]
  409447:	mov    ch,0x95
  409449:	pop    eax
  40944a:	jnp    0x409495
  40944c:	push   0x5c
  40944e:	fsubp  st(0),st
  409450:	and    al,0x1c
  409452:	xchg   ebp,eax
  409453:	into   
  409454:	add    eax,0xc87456fb
  409459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40945a:	dec    esp
  40945b:	shl    ah,0xbb
  40945e:	add    eax,0xd92255fc
  409463:	cmp    ecx,DWORD PTR [edi-0x3f4aaefc]
  409469:	gs ins DWORD PTR es:[edi],dx
  40946b:	jmp    0x40944a
  40946d:	add    DWORD PTR [edi-0x5],0xffffffea
  409471:	dec    esi
  409472:	shr    cl,1
  409474:	call   0xa581441c
  409479:	out    dx,al
  40947a:	lods   eax,DWORD PTR ds:[esi]
  40947b:	pop    ebp
  40947c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40947d:	in     al,dx
  40947e:	iret   
  40947f:	xor    eax,0x9d6531a0
  409484:	imul   edi,edx,0xffffffdf
  409487:	or     eax,0x609d459
  40948c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40948d:	mov    ss,esi
  40948f:	int    0x86
  409491:	jecxz  0x409434
  409493:	or     al,0x23
  409495:	dec    esp
  409496:	fs out 0x5a,eax
  409499:	jo     0x409489
  40949b:	mov    ch,0x4a
  40949d:	pop    eax
  40949e:	mov    ds:0x53e89c8a,eax
  4094a3:	mov    al,0xa0
  4094a5:	ins    DWORD PTR es:[edi],dx
  4094a6:	leave  
  4094a7:	inc    eax
  4094a8:	cmp    BYTE PTR [edi+ebx*1+0x62e0e951],0xac
  4094b0:	cli    
  4094b1:	retf   0x8c0a
  4094b4:	jl     0x409437
  4094b6:	push   esp
  4094b7:	inc    ebx
  4094b8:	xor    ecx,DWORD PTR [eax]
  4094ba:	sbb    al,BYTE PTR [edx+0x315cfb04]
  4094c0:	scas   eax,DWORD PTR es:[edi]
  4094c1:	shl    esi,cl
  4094c3:	shr    DWORD PTR [edx-0x69],0x58
  4094c7:	ins    DWORD PTR es:[edi],dx
  4094c8:	add    eax,0x112209bf
  4094cd:	das    
  4094ce:	in     eax,0xe6
  4094d0:	pop    ebp
  4094d1:	vpsubb xmm3,xmm0,XMMWORD PTR [esi+0x3598c2a9]
  4094d9:	xchg   ecx,eax
  4094da:	fstp   TBYTE PTR [edi-0x1b]
  4094dd:	arpl   cx,dx
  4094df:	mov    dl,ch
  4094e1:	and    edx,DWORD PTR ds:0xaa164dc8
  4094e7:	xor    DWORD PTR [esi+0x11],0x2af0d736
  4094ee:	(bad)  
  4094ef:	int    0xa7
  4094f1:	mov    cl,0xc0
  4094f3:	and    dh,BYTE PTR [ebx-0x17c75b98]
  4094f9:	add    esi,DWORD PTR [eax]
  4094fb:	arpl   WORD PTR [ebp-0x3a6c04f1],sp
  409501:	je     0x4094ef
  409503:	int    0x75
  409505:	jne    0x40956d
  409507:	(bad)  
  409508:	aad    0xcc
  40950a:	dec    eax
  40950b:	pop    ecx
  40950c:	fsub   st(1),st
  40950e:	cmc    
  40950f:	inc    ecx
  409510:	jp     0x409497
  409512:	adc    eax,DWORD PTR [esi-0x5c]
  409515:	ds in  eax,0x5d
  409518:	mov    ch,BYTE PTR [ecx+0xb141ed1]
  40951e:	mov    edx,0x43114c4f
  409523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409524:	cmp    DWORD PTR [edi-0x3d],esp
  409527:	pop    es
  409528:	mov    edi,0xde11f1d4
  40952d:	cmp    ebp,ebp
  40952f:	and    DWORD PTR [ebx],edx
  409531:	jns    0x4094e7
  409533:	mov    ah,0x5b
  409535:	imul   edi,edi,0xaf2988e8
  40953b:	or     esi,edx
  40953d:	add    al,0x9f
  40953f:	add    esp,DWORD PTR [edi+0x49]
  409542:	das    
  409543:	mov    ebp,0x5695979d
  409548:	jle    0x40951c
  40954a:	pop    esi
  40954b:	mov    eax,0x28b86fdb
  409550:	shld   DWORD PTR ds:0x80d5f103,edi,cl
  409557:	in     eax,0x5b
  409559:	inc    ebp
  40955a:	cld    
  40955b:	sahf   
  40955c:	(bad)  
  40955d:	xchg   edx,eax
  40955e:	xchg   ecx,eax
  40955f:	mov    al,ds:0xe985d0d9
  409564:	les    edx,FWORD PTR [edx+0xe3771fb]
  40956a:	xchg   ebx,eax
  40956b:	mov    bl,0xef
  40956d:	jge    0x409546
  40956f:	aad    0x1
  409571:	and    cl,BYTE PTR [ecx+0x56]
  409574:	sbb    al,0x94
  409576:	addr16 jmp 0x309b:0x2156bf50
  40957e:	add    eax,0x8afa3cf1
  409583:	sti    
  409584:	xchg   ecx,eax
  409585:	push   0x6f626f4
  40958a:	imul   edi,DWORD PTR [esi-0xb8e111],0xfffffff5
  409591:	(bad)  
  409592:	jno    0x4095d9
  409594:	mov    ds:0xc56a0578,al
  409599:	das    
  40959a:	test   al,0x89
  40959c:	sub    eax,0x17153161
  4095a1:	dec    esp
  4095a2:	and    DWORD PTR [ecx],eax
  4095a4:	inc    edx
  4095a5:	ret    0x2b3d
  4095a8:	pop    esp
  4095a9:	and    eax,0x294b12d2
  4095ae:	mov    ds:0x2c49d7d7,eax
  4095b3:	cmc    
  4095b4:	cdq    
  4095b5:	pushf  
  4095b6:	scas   al,BYTE PTR es:[edi]
  4095b7:	cmc    
  4095b8:	xchg   ebx,eax
  4095b9:	xor    ebp,DWORD PTR [ebp+0x33]
  4095bc:	repnz daa 
  4095be:	aaa    
  4095bf:	imul   eax,DWORD PTR [edx-0x70944283],0xffffffc9
  4095c6:	pop    ds
  4095c7:	adc    bl,bl
  4095c9:	xchg   esi,eax
  4095ca:	les    ecx,FWORD PTR ds:0x4a53499d
  4095d0:	cmp    eax,0x825aad94
  4095d5:	inc    ecx
  4095d6:	xchg   ebx,eax
  4095d7:	mov    BYTE PTR [eax-0x7f],ch
  4095da:	mov    edx,0x4555ce1d
  4095df:	jle    0x409644
  4095e1:	int    0x6d
  4095e3:	jo     0x40958f
  4095e5:	rcl    BYTE PTR [ebx-0x1031e77],1
  4095eb:	xlat   BYTE PTR ds:[ebx]
  4095ec:	ss test ch,ch
  4095ef:	fist   DWORD PTR ds:0x10035550
  4095f5:	jns    0x40958c
  4095f7:	mov    al,0xb0
  4095f9:	mov    al,ds:0xde3e6479
  4095fe:	add    al,0x14
  409600:	clc    
  409601:	mov    esp,DWORD PTR [ecx+0x38c16db3]
  409607:	cwde   
  409608:	sub    cl,dh
  40960a:	test   BYTE PTR [edi],0x5e
  40960d:	sub    DWORD PTR [ebx-0x69],0xffffffcf
  409611:	mov    ecx,0x6bf8d108
  409616:	loop   0x40963c
  409618:	ja     0x4095bc
  40961a:	pop    esi
  40961b:	leave  
  40961c:	pop    edi
  40961d:	or     ah,BYTE PTR [edx]
  40961f:	mov    bl,0x95
  409621:	sbb    ah,BYTE PTR [edi+edx*4]
  409624:	sbb    al,bh
  409626:	ja     0x40968b
  409628:	mov    esp,0xfda89d25
  40962d:	loop   0x4095d1
  40962f:	into   
  409630:	and    edi,DWORD PTR [ecx]
  409632:	xchg   esi,eax
  409633:	imul   ebp,eax,0x38
  409636:	fsubr  QWORD PTR [ebp-0x3f]
  409639:	mov    ebx,0x9e1e3995
  40963e:	test   BYTE PTR [esi+0x1e],0x4b
  409642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409643:	rcl    DWORD PTR [ebx],1
  409645:	mov    dh,0x2b
  409647:	add    BYTE PTR [ecx+0x5f],cl
  40964a:	sar    edx,1
  40964c:	and    ebp,DWORD PTR [esi]
  40964e:	jns    0x40966e
  409650:	mov    ah,0xb5
  409652:	push   0xffffffb1
  409654:	aas    
  409655:	lds    ebp,FWORD PTR [ebp+0x67]
  409658:	lock inc ebx
  40965a:	and    eax,0xf8308aa4
  40965f:	hlt    
  409660:	cld    
  409661:	cmp    cl,BYTE PTR [eax+0x36]
  409664:	(bad)  
  409665:	jmp    0x409605
  409667:	aad    0xa6
  409669:	lods   al,BYTE PTR ds:[esi]
  40966a:	pop    edx
  40966b:	xor    al,0xe9
  40966d:	(bad)  
  40966e:	sub    DWORD PTR [edx-0x54],edx
  409671:	jge    0x4096be
  409673:	dec    edi
  409674:	ins    DWORD PTR es:[edi],dx
  409675:	cmp    ecx,eax
  409677:	fild   WORD PTR [eax+0x13]
  40967a:	and    eax,0x956aed03
  40967f:	xchg   ecx,eax
  409680:	rcl    ch,0xff
  409683:	popa   
  409684:	add    ebp,ebp
  409686:	adc    al,0x8c
  409688:	neg    bl
  40968a:	cmp    BYTE PTR [ebp-0x2af792f],0xb6
  409691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409692:	mov    DWORD PTR [edx-0x67],eax
  409695:	test   eax,0x1c21de0f
  40969a:	xchg   esi,eax
  40969b:	xchg   ebx,eax
  40969c:	in     al,0xcd
  40969e:	and    eax,0xc427450c
  4096a3:	cmp    al,0x26
  4096a5:	xlat   BYTE PTR ds:[ebx]
  4096a6:	(bad)  
  4096a7:	sti    
  4096a8:	ins    BYTE PTR es:[edi],dx
  4096a9:	fstp   QWORD PTR [ecx+0x22]
  4096ac:	lahf   
  4096ad:	nop
  4096ae:	ins    BYTE PTR es:[edi],dx
  4096af:	repnz sbb BYTE PTR [esi-0x50f61cb6],ch
  4096b6:	popf   
  4096b7:	add    eax,DWORD PTR [ebx+0x65]
  4096ba:	outs   dx,BYTE PTR ds:[esi]
  4096bb:	ficomp WORD PTR [esi+0x5d]
  4096be:	rcl    ch,0x4c
  4096c1:	dec    eax
  4096c2:	ss repnz iret 
  4096c5:	mov    dl,0x25
  4096c7:	dec    di
  4096c9:	cli    
  4096ca:	mov    dh,BYTE PTR [ebp+0x3b558ad]
  4096d0:	xor    ebx,0x10
  4096d3:	aaa    
  4096d4:	pusha  
  4096d5:	stos   BYTE PTR es:[edi],al
  4096d6:	dec    eax
  4096d7:	jl     0x409663
  4096d9:	ins    BYTE PTR es:[edi],dx
  4096da:	ins    DWORD PTR es:[edi],dx
  4096db:	cmp    edx,ebx
  4096dd:	xlat   BYTE PTR ds:[ebx]
  4096de:	outs   dx,DWORD PTR ds:[esi]
  4096df:	xor    BYTE PTR [edi+edi*4+0x2aef793a],ch
  4096e6:	call   0x5cf63b1d
  4096eb:	xchg   ecx,eax
  4096ec:	(bad)  
  4096ed:	inc    edx
  4096ee:	add    al,0xf
  4096f0:	leave  
  4096f1:	sti    
  4096f2:	mov    dl,0xc8
  4096f4:	mov    WORD PTR ds:0xabc2220,cs
  4096fa:	mov    ah,0x59
  4096fc:	into   
  4096fd:	cmp    BYTE PTR [edi+esi*4-0xa],0xb9
  409702:	icebp  
  409703:	sub    edx,DWORD PTR [edx-0x47]
  409706:	xor    BYTE PTR [ecx-0x4292d405],bl
  40970c:	daa    
  40970d:	cli    
  40970e:	loopne 0x409771
  409710:	retf   
  409711:	in     ax,dx
  409713:	xor    ebp,0xffffffef
  409716:	push   0x5f
  409718:	push   0xffffffcc
  40971a:	xor    eax,0xb30718bf
  40971f:	cmp    ecx,DWORD PTR [ebp-0x150af5f3]
  409725:	sub    BYTE PTR [eax],0x46
  409728:	adc    ecx,ebp
  40972a:	and    BYTE PTR [ebp+ebx*1-0x32],cl
  40972e:	adc    bl,cl
  409730:	shl    BYTE PTR [edx+0x0],0x5e
  409734:	les    edi,FWORD PTR [esi+0x152ffa9]
  40973a:	pop    es
  40973b:	scas   eax,DWORD PTR es:[edi]
  40973c:	jne    0x4097bb
  40973e:	xchg   ecx,eax
  40973f:	dec    ebp
  409740:	cmp    ebp,DWORD PTR [edi-0x229775e1]
  409746:	(bad)  
  409747:	out    0x79,eax
  409749:	popf   
  40974a:	mov    bl,0x1b
  40974c:	or     al,0xe3
  40974e:	gs add cl,ch
  409751:	das    
  409752:	sbb    al,0xfd
  409754:	mov    ebx,0x33f997c6
  409759:	test   al,ch
  40975b:	push   eax
  40975d:	ss (bad) 
  40975f:	icebp  
  409760:	(bad)  
  409762:	mov    ds:0xd88c5da7,eax
  409767:	cli    
  409768:	or     al,0x33
  40976a:	ret    
  40976b:	jnp    0x40978e
  40976d:	(bad)  
  40976e:	addr16 hlt 
  409770:	aaa    
  409771:	das    
  409772:	stos   BYTE PTR es:[edi],al
  409773:	andnps xmm2,XMMWORD PTR [esi]
  409776:	cmp    al,dh
  409778:	mov    edx,ss
  40977a:	or     BYTE PTR [esi],dh
  40977c:	aad    0xee
  40977e:	mov    edx,0x69453c19
  409783:	sar    BYTE PTR [edi+0x37],0x78
  409787:	(bad)  
  409788:	in     al,0xb1
  40978a:	arpl   WORD PTR [esi],cx
  40978c:	push   esp
  40978d:	icebp  
  40978e:	mov    dh,0xe5
  409790:	enter  0xafd5,0x9e
  409794:	xchg   DWORD PTR [edx+0x21],eax
  409797:	mov    ebp,0x2a37859f
  40979c:	shr    edx,0x4a
  40979f:	adc    bh,BYTE PTR [ecx+0xa]
  4097a2:	popf   
  4097a3:	cmp    DWORD PTR [ebp+eax*4-0x7228c7a4],edi
  4097aa:	sub    eax,0x83fa8b9e
  4097af:	aam    0x1b
  4097b1:	xchg   ecx,eax
  4097b2:	(bad)  
  4097b4:	aad    0x4b
  4097b6:	push   0xffffffc1
  4097b8:	js     0x409777
  4097ba:	mov    BYTE PTR [edi-0x6f],0x11
  4097be:	mov    esp,0xd0214203
  4097c3:	in     eax,0x22
  4097c5:	push   cs
  4097c6:	popf   
  4097c7:	iret   
  4097c8:	dec    edi
  4097c9:	cmp    dh,BYTE PTR [ebx+0x97ef48d]
  4097cf:	add    eax,0xa013775d
  4097d4:	mov    al,ds:0x5fd4da3f
  4097d9:	lods   al,BYTE PTR ds:[esi]
  4097da:	loopne 0x4097b1
  4097dc:	inc    edi
  4097dd:	pop    edi
  4097de:	pop    eax
  4097df:	lds    esi,FWORD PTR [edi]
  4097e1:	cmp    eax,0x7e237147
  4097e6:	mov    al,ds:0x956eefa1
  4097eb:	sti    
  4097ec:	mov    ds:0xf013bfb5,al
  4097f1:	inc    edi
  4097f2:	fwait
  4097f3:	xlat   BYTE PTR ds:[ebx]
  4097f4:	das    
  4097f5:	xchg   edx,eax
  4097f6:	ficomp DWORD PTR [ebp-0x30bba907]
  4097fc:	cld    
  4097fd:	cmp    eax,0x5f9e2b01
  409802:	mov    dl,0xf0
  409804:	jmp    0xa409:0x9018a41a
  40980b:	cmp    BYTE PTR [eax-0x35],0x85
  40980f:	jae    0x40983d
  409811:	arpl   WORD PTR [ebx-0xf],dx
  409814:	lods   eax,DWORD PTR ds:[esi]
  409815:	(bad)  
  409816:	cli    
  409817:	pop    es
  409818:	cld    
  409819:	ins    DWORD PTR es:[edi],dx
  40981a:	loop   0x40982a
  40981c:	or     DWORD PTR ds:[edx-0xcc94176],edi
  409823:	pop    esi
  409824:	repnz mov bh,0x78
  409827:	fnstsw WORD PTR [ecx-0x1c7308cf]
  40982d:	ins    DWORD PTR es:[edi],dx
  40982e:	push   0xffffffe1
  409830:	add    al,0xd4
  409832:	mov    ah,0xc5
  409834:	lss    edi,FWORD PTR [edx-0x64]
  409838:	(bad)  
  40983a:	rol    DWORD PTR [ebp+0x69],1
  40983d:	or     eax,0x64f2fbc1
  409842:	jne    0x4097d4
  409844:	daa    
  409845:	adc    DWORD PTR [eax-0x8],ebx
  409848:	mov    ss,WORD PTR ss:[edi+0x7]
  40984c:	dec    esi
  40984d:	lock xchg ebx,eax
  40984f:	add    BYTE PTR [ebx],al
  409851:	fistp  DWORD PTR ds:0xb9019a41
  409857:	add    eax,0x1b61c77a
  40985c:	lock pminub mm6,QWORD PTR [ecx+0x41]
  409861:	mov    cl,0x3d
  409863:	jmp    0xe631423f
  409868:	adc    DWORD PTR [esi],edx
  40986a:	imul   ecx,DWORD PTR [edx-0x5],0xd5d460ee
  409871:	mov    bl,0x1a
  409873:	mov    ebp,0x4690f9b1
  409878:	and    BYTE PTR [eax+0x21],ch
  40987b:	not    BYTE PTR [ebx-0x56]
  40987e:	push   ds
  40987f:	mov    ah,0x2c
  409881:	xchg   esi,eax
  409882:	test   eax,0xac34074c
  409887:	add    edi,DWORD PTR [ecx]
  409889:	xchg   ebp,eax
  40988a:	mov    ?,WORD PTR [esi+0x78]
  40988d:	sub    bl,BYTE PTR [ecx+0x3db2c14b]
  409893:	fisubr DWORD PTR [esi-0x41]
  409896:	sub    ecx,ebx
  409898:	ficomp WORD PTR [esi-0x3f]
  40989b:	loope  0x409909
  40989d:	adc    DWORD PTR [eax+0x30],ebp
  4098a0:	or     ecx,DWORD PTR [ebx]
  4098a2:	(bad)
  4098a6:	mov    DWORD PTR ds:[ecx-0x2e],edx
  4098aa:	cmp    ebp,DWORD PTR [edi]
  4098ac:	inc    esi
  4098ad:	push   ebx
  4098ae:	add    edi,DWORD PTR ds:0xc2cb480a
  4098b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b5:	(bad)  
  4098b6:	cs push eax
  4098b8:	cmp    esp,eax
  4098ba:	test   BYTE PTR [ebp-0x7a110f28],bh
  4098c0:	cld    
  4098c1:	lahf   
  4098c2:	xchg   ebp,eax
  4098c3:	add    DWORD PTR [edi],ecx
  4098c5:	loop   0x4098eb
  4098c7:	sahf   
  4098c8:	xor    dh,bh
  4098ca:	inc    edx
  4098cb:	jb     0x409932
  4098cd:	outs   dx,DWORD PTR ds:[esi]
  4098ce:	fcom   QWORD PTR [ebp+0xde474ac]
  4098d4:	mov    es,ecx
  4098d6:	out    dx,eax
  4098d7:	cmp    eax,0xbb4d14b0
  4098dc:	jbe    0x409926
  4098de:	ss mov al,0x26
  4098e1:	mov    bl,0x9c
  4098e3:	jecxz  0x4098cb
  4098e5:	mov    gs:0xcebf45ab,eax
  4098eb:	(bad)  
  4098ec:	imul   DWORD PTR [edi]
  4098ee:	mov    fs,WORD PTR [edx+0xb3516be]
  4098f4:	lea    esp,ds:0x536f427d
  4098fa:	xor    eax,0x504741e1
  4098ff:	popf   
  409900:	and    DWORD PTR ds:0x8ce967b1,edi
  409906:	shr    DWORD PTR [edi+0x3efd07b8],0x47
  40990d:	push   esi
  40990e:	fisubr DWORD PTR [ebx+0x6f]
  409911:	pop    esi
  409912:	mov    edx,0x90285888
  409917:	mov    al,ds:0xd287e8c5
  40991c:	sbb    ebp,edi
  40991e:	stos   BYTE PTR es:[edi],al
  40991f:	imul   ebx,DWORD PTR [ecx],0x63
  409922:	pop    edx
  409923:	das    
  409924:	xchg   ebx,eax
  409925:	mov    ebx,0x8ffa18d7
  40992a:	nop
  40992b:	mov    dl,0xe2
  40992d:	out    dx,eax
  40992e:	xor    bh,BYTE PTR [eax+0xee2f5fe]
  409934:	in     al,0xf6
  409936:	sub    eax,0xd3fdfb7c
  40993b:	inc    ecx
  40993c:	xchg   esi,eax
  40993d:	pop    ebx
  40993e:	daa    
  40993f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409941:	mov    esp,es
  409943:	add    BYTE PTR [edi-0x534c1a41],dl
  409949:	and    BYTE PTR [eax-0x5d98184c],bh
  40994f:	lahf   
  409950:	mov    edx,0x1183002d
  409955:	call   0x692a:0xa7f1c58
  40995c:	into   
  40995d:	pop    esi
  40995e:	js     0x409915
  409960:	iret   
  409961:	in     eax,0x6a
  409963:	leave  
  409964:	ins    DWORD PTR es:[edi],dx
  409965:	(bad)  
  409966:	loopne 0x409920
  409968:	cwde   
  409969:	sub    dh,BYTE PTR [edi+0x6446af4c]
  40996f:	rcr    DWORD PTR [esi+0x483fbbd4],cl
  409975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409976:	call   0xd00c02b5
  40997b:	daa    
  40997c:	and    eax,0x3a01a425
  409981:	in     al,dx
  409982:	sub    ax,0x33fe
  409986:	dec    edx
  409987:	popa   
  409988:	scas   al,BYTE PTR es:[edi]
  409989:	in     al,0xff
  40998b:	aad    0x19
  40998d:	push   eax
  40998e:	mov    ch,0x76
  409990:	pop    eax
  409991:	jp     0x40998d
  409993:	sub    ebx,esp
  409995:	out    0x52,eax
  409997:	pushf  
  409998:	jecxz  0x409936
  40999a:	push   eax
  40999b:	das    
  40999c:	imul   edi,DWORD PTR [edx],0x555c216f
  4099a2:	cs dec esp
  4099a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a5:	call   0x41868e25
  4099aa:	or     DWORD PTR [edi-0x17e65550],esi
  4099b0:	fistp  DWORD PTR [ebp+0x78]
  4099b3:	pushf  
  4099b4:	in     al,0xaf
  4099b6:	retf   
  4099b7:	(bad)  
  4099b9:	lods   eax,DWORD PTR ds:[esi]
  4099ba:	sbb    DWORD PTR ds:0x148d0bae,0x88ccaf79
  4099c4:	loopne 0x4099cc
  4099c6:	mov    esi,0x2348e40f
  4099cb:	aas    
  4099cc:	jne    0x409978
  4099ce:	sbb    edi,0xffffffcc
  4099d1:	loopne 0x4099b9
  4099d3:	pop    ds
  4099d4:	retf   
  4099d5:	xlat   BYTE PTR ds:[ebx]
  4099d6:	sub    eax,0xab617770
  4099db:	inc    edx
  4099dc:	inc    ecx
  4099dd:	jnp    0x4099be
  4099df:	pop    edi
  4099e0:	mov    ebx,0x930619d
  4099e5:	ror    bl,cl
  4099e7:	dec    esi
  4099e8:	imul   ebp,ebp,0x6f
  4099eb:	jno    0x4099d4
  4099ed:	ret    
  4099ee:	jmp    0x32ac4ca7
  4099f3:	inc    eax
  4099f4:	pop    edi
  4099f5:	int3   
  4099f6:	adc    al,0xd
  4099f8:	sub    BYTE PTR [eax],0x94
  4099fb:	sub    ecx,ecx
  4099fd:	leave  
  4099fe:	out    0x4c,al
  409a00:	js     0x409a6a
  409a02:	xor    edx,DWORD PTR ds:0x3c384620
  409a08:	aad    0xd9
  409a0a:	(bad)  
  409a0b:	mov    dh,0x86
  409a0d:	mov    esp,0x770b2c0a
  409a12:	adc    eax,0x72ff3270
  409a17:	out    dx,eax
  409a18:	jo     0x409a1c
  409a1a:	add    bh,al
  409a1c:	push   es
  409a1d:	xchg   dl,bh
  409a1f:	cmp    al,BYTE PTR [ebp+0x55]
  409a22:	fdivr  DWORD PTR [edx]
  409a24:	clc    
  409a25:	call   0x62cf:0x4d879177
  409a2c:	push   DWORD PTR [edi]
  409a2e:	lea    esp,[esi-0x3733bdec]
  409a34:	lock es mov ebx,0x7c25d9a6
  409a3b:	sbb    DWORD PTR [esi+eax*1-0x2d402c25],edx
  409a42:	xchg   BYTE PTR [ebx+0x6f9b96ba],dl
  409a48:	push   esp
  409a49:	jns    0x409a06
  409a4b:	cmp    ch,dl
  409a4d:	sub    ch,dh
  409a4f:	stc    
  409a50:	lahf   
  409a51:	cdq    
  409a52:	mov    edx,0x969a0af5
  409a57:	mov    edi,0xaf154528
  409a5c:	push   edx
  409a5d:	cmp    BYTE PTR [esi],dl
  409a5f:	or     cl,bl
  409a61:	fcom   DWORD PTR [ebp+0x762dbb08]
  409a67:	sti    
  409a68:	push   ebx
  409a69:	out    dx,eax
  409a6a:	outs   dx,DWORD PTR ds:[esi]
  409a6b:	or     DWORD PTR ds:0xf99ca443,esp
  409a71:	mov    edi,0xbf5bf2f2
  409a76:	jae    0x409acb
  409a78:	ret    0x72ce
  409a7b:	and    ah,BYTE PTR [edx+ecx*4+0x5f117ad1]
  409a82:	int    0x40
  409a84:	mov    ah,0x3c
  409a86:	test   al,0x2c
  409a88:	pop    esp
  409a89:	cdq    
  409a8a:	(bad)  
  409a8c:	pop    esi
  409a8d:	nop
  409a8e:	mov    ecx,0x31d27397
  409a93:	adc    DWORD PTR [edx],0x8
  409a96:	in     al,dx
  409a97:	and    DWORD PTR [esi],eax
  409a99:	test   eax,0xd23f8838
  409a9e:	inc    edi
  409a9f:	mov    eax,ds:0xac13f867
  409aa4:	push   ebp
  409aa5:	pusha  
  409aa6:	out    dx,eax
  409aa7:	in     al,0x6a
  409aa9:	jg     0x409ac8
  409aab:	loop   0x409b1e
  409aad:	jae    0x409b16
  409aaf:	and    DWORD PTR [ebp+ebp*8-0x52ebb995],edx
  409ab6:	cmp    al,0xca
  409ab8:	jg     0x409ac2
  409aba:	test   eax,0x39a6a0b3
  409abf:	aad    0x55
  409ac1:	jbe    0x409ad4
  409ac3:	jno    0x409adc
  409ac5:	jmp    0x894a0210
  409aca:	outs   dx,BYTE PTR ds:[esi]
  409acb:	in     al,0xfc
  409acd:	add    BYTE PTR [ebp-0x8476951],al
  409ad3:	dec    ecx
  409ad4:	pop    edx
  409ad5:	data16 jp 0x409a73
  409ad8:	pop    ebp
  409ad9:	test   eax,0x212df38e
  409ade:	mov    bl,0x68
  409ae0:	mov    cl,ch
  409ae2:	and    dh,BYTE PTR [ebx+0x74dff51f]
  409ae8:	nop
  409ae9:	or     ah,BYTE PTR [ecx+eiz*1-0x78dadcf]
  409af0:	push   ecx
  409af1:	dec    eax
  409af2:	and    eax,0x250747a4
  409af7:	aam    0xdd
  409af9:	sahf   
  409afa:	jge    0x409ab1
  409afc:	dec    ebp
  409afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b00:	xchg   ebp,eax
  409b01:	dec    DWORD PTR [esi+0x16]
  409b04:	add    al,0x7d
  409b06:	loopne 0x409b71
  409b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b09:	retf   
  409b0a:	xor    eax,DWORD PTR [esi-0x2c33133e]
  409b10:	pop    ebx
  409b11:	jl     0x409b13
  409b13:	(bad)  
  409b14:	in     al,0x3d
  409b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b17:	push   ecx
  409b18:	sub    BYTE PTR [eax+0x5d],0x3
  409b1c:	adc    edi,ebp
  409b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1f:	mov    ah,dl
  409b21:	jmp    0x20b07165
  409b26:	add    eax,0x38de9ef0
  409b2b:	dec    eax
  409b2c:	into   
  409b2d:	leave  
  409b2e:	adc    ebp,DWORD PTR [edx+0x6c68cd35]
  409b34:	fldcw  WORD PTR [edi+0x3d]
  409b37:	leave  
  409b38:	xchg   edi,eax
  409b39:	fwait
  409b3a:	das    
  409b3b:	jne    0x409b44
  409b3d:	int    0x9a
  409b3f:	xchg   BYTE PTR [eax-0x73],ch
  409b42:	jmp    0xbc29bba
  409b47:	sub    ecx,DWORD PTR [edi+0x1d]
  409b4a:	inc    esp
  409b4b:	dec    esp
  409b4c:	sbb    dh,cl
  409b4e:	fadd   st,st(6)
  409b50:	into   
  409b51:	mov    dh,0xcc
  409b53:	test   DWORD PTR [edx],ebp
  409b55:	call   0x628503cd
  409b5a:	mov    ah,0x32
  409b5c:	js     0x409b6e
  409b5e:	push   es
  409b5f:	imul   esi,DWORD PTR [edx],0x3b
  409b62:	je     0x409b46
  409b64:	sbb    al,0x22
  409b66:	(bad)  
  409b67:	fcmovbe st,st(3)
  409b69:	stc    
  409b6a:	xchg   ecx,eax
  409b6b:	and    ebp,DWORD PTR [ebx+0x32]
  409b6e:	jl     0x409b58
  409b70:	inc    ebp
  409b71:	loopne 0x409aff
  409b73:	shr    DWORD PTR [eax+0x33],0x32
  409b77:	pop    edi
  409b78:	outs   dx,BYTE PTR ds:[esi]
  409b79:	or     al,0xda
  409b7b:	sub    DWORD PTR [esi+0xbe6f1a0],ebx
  409b81:	dec    BYTE PTR [esi]
  409b83:	(bad)  
  409b84:	sub    BYTE PTR [edi],ah
  409b86:	nop
  409b87:	rol    dl,1
  409b89:	retf   
  409b8a:	add    esp,edx
  409b8c:	jmp    0x409b6f
  409b8e:	mov    cs,esp
  409b90:	nop
  409b91:	sbb    ebx,DWORD PTR [eax-0x23f4fb5f]
  409b97:	push   edi
  409b98:	add    BYTE PTR [ecx-0xd369cd3],dh
  409b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b9f:	test   al,0x68
  409ba1:	jmp    0x4314:0xb608073c
  409ba8:	stos   BYTE PTR es:[edi],al
  409ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409baa:	mov    cl,0x86
  409bac:	mov    bl,0x7b
  409bae:	mov    dl,0x1e
  409bb0:	pop    esp
  409bb1:	xor    eax,0xf0adee21
  409bb6:	rcl    DWORD PTR [esi+0x6179d7c2],cl
  409bbc:	cmp    BYTE PTR [esi+0x2c8ddbd8],dl
  409bc2:	bound  edx,QWORD PTR [esi+0x6c]
  409bc5:	add    dl,al
  409bc7:	mov    cl,0x3
  409bc9:	lods   al,BYTE PTR ds:[esi]
  409bca:	cmp    eax,0x451e6efe
  409bcf:	push   0xdddf5204
  409bd4:	pushf  
  409bd5:	fincstp 
  409bd7:	je     0x409bc8
  409bd9:	dec    esp
  409bda:	mov    esi,0xf2a3bbfa
  409bdf:	(bad)  
  409be0:	retf   
  409be1:	dec    ecx
  409be2:	and    BYTE PTR [ebp-0x45200004],al
  409be8:	push   ecx
  409be9:	leave  
  409bea:	ss xchg ebx,eax
  409bec:	xchg   ebp,eax
  409bed:	pop    es
  409bee:	lock pop edx
  409bf0:	stos   BYTE PTR es:[edi],al
  409bf1:	jbe    0x409b76
  409bf3:	push   cs
  409bf4:	dec    esi
  409bf5:	or     eax,ebx
  409bf7:	inc    esi
  409bf8:	loopne 0x409bcd
  409bfa:	mov    bh,0x3e
  409bfc:	icebp  
  409bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfe:	sbb    DWORD PTR [ebp-0x78],edi
  409c01:	ss leave 
  409c03:	in     al,0x42
  409c05:	mov    BYTE PTR [ebx],ch
  409c07:	aas    
  409c08:	iret   
  409c09:	push   0x1cf33464
  409c0e:	add    DWORD PTR [ebp-0xe],edx
  409c11:	pop    ebp
  409c12:	xchg   ebp,eax
  409c13:	inc    ebp
  409c14:	xchg   esp,eax
  409c15:	jle    0x409bc3
  409c17:	dec    ebx
  409c18:	clc    
  409c19:	and    bl,bh
  409c1b:	lods   al,BYTE PTR ds:[esi]
  409c1c:	fstp   DWORD PTR [edi+eax*4]
  409c1f:	(bad)  
  409c21:	int3   
  409c22:	inc    edx
  409c23:	and    al,0xd8
  409c25:	ins    DWORD PTR es:[edi],dx
  409c26:	cmp    eax,0xd5d9e904
  409c2b:	xor    al,al
  409c2d:	mul    DWORD PTR [edx+0xa3bea8]
  409c33:	pop    eax
  409c34:	push   DWORD PTR [edi-0x48]
  409c37:	out    0xf5,eax
  409c39:	(bad)  
  409c3a:	mov    cl,0xd4
  409c3c:	sub    esi,esi
  409c3e:	inc    esi
  409c3f:	mov    al,ds:0x506a6e78
  409c44:	lock add BYTE PTR [eax+eiz*2-0x15],ch
  409c49:	ins    DWORD PTR es:[edi],dx
  409c4a:	jbe    0x409c48
  409c4c:	jae    0x409ca1
  409c4e:	pop    esi
  409c4f:	push   esp
  409c50:	xor    al,0xa8
  409c52:	es mov bl,0x1
  409c55:	shl    eax,0xc5
  409c58:	mov    es,esi
  409c5a:	aam    0xa5
  409c5c:	not    ch
  409c5e:	sub    eax,0x7a553a4d
  409c63:	xchg   ebx,eax
  409c64:	cwde   
  409c65:	stos   BYTE PTR es:[edi],al
  409c66:	fcom   QWORD PTR [edi-0x464e4d8e]
  409c6c:	dec    ebx
  409c6d:	mov    BYTE PTR [edi],al
  409c6f:	mov    DWORD PTR [ecx],ebx
  409c71:	xchg   bp,ax
  409c73:	adc    ebp,esi
  409c75:	lahf   
  409c76:	mov    ds:0x9642c523,eax
  409c7b:	adc    BYTE PTR [esp+eax*1-0x3385027e],bl
  409c82:	add    eax,DWORD PTR [ebx-0x39]
  409c85:	scas   al,BYTE PTR es:[edi]
  409c86:	xchg   esp,eax
  409c87:	adc    edi,DWORD PTR [edi-0x20]
  409c8a:	fs xchg ebp,eax
  409c8c:	push   edi
  409c8d:	and    ecx,DWORD PTR [ebx+ecx*1+0x1a0ea57b]
  409c94:	dec    esi
  409c95:	sbb    ecx,DWORD PTR [esi+0x1f]
  409c98:	lods   al,BYTE PTR ds:[esi]
  409c99:	xlat   BYTE PTR ds:[ebx]
  409c9a:	call   0xb2cf67ea
  409c9f:	mov    ch,BYTE PTR [ebx-0x4f3609eb]
  409ca5:	stos   DWORD PTR es:[edi],eax
  409ca6:	xchg   ebp,eax
  409ca7:	dec    ebp
  409ca8:	or     al,0x7e
  409caa:	jg     0x409c89
  409cac:	icebp  
  409cad:	sahf   
  409cae:	fistp  WORD PTR [esi]
  409cb0:	pop    ebx
  409cb1:	xchg   BYTE PTR [ebx-0x57f8fdc8],ah
  409cb7:	lock imul ebx,DWORD PTR [esi-0x4871dc38],0x4c
  409cbf:	ins    DWORD PTR es:[edi],dx
  409cc0:	aam    0xb0
  409cc2:	retf   0xa35e
  409cc5:	ror    DWORD PTR [ebp-0xce2e2e3],0x93
  409ccc:	adc    eax,0xe6265244
  409cd1:	sub    al,0x8c
  409cd3:	cmp    eax,0x48da9314
  409cd8:	sbb    ah,dh
  409cda:	xor    ecx,DWORD PTR [ecx-0x4e207205]
  409ce0:	outs   dx,BYTE PTR ds:[esi]
  409ce1:	add    esi,ebx
  409ce3:	mov    dl,0xf7
  409ce5:	loope  0x409cd2
  409ce7:	out    0xcb,eax
  409ce9:	pop    esp
  409cea:	mov    cl,0x79
  409cec:	or     al,BYTE PTR [ebp+0x1f]
  409cef:	cmp    al,0x8
  409cf1:	fcom   QWORD PTR [eax]
  409cf3:	ret    
  409cf4:	pop    esi
  409cf5:	fisttp WORD PTR [ecx-0xd]
  409cf8:	dec    eax
  409cf9:	arpl   WORD PTR [eax],sp
  409cfb:	popf   
  409cfc:	ds mov edi,0x641b4c2d
  409d02:	xchg   edx,eax
  409d03:	fisttp DWORD PTR [ebp+0x539b635]
  409d09:	pop    es
  409d0a:	adc    cl,BYTE PTR [ebx+0x763441e6]
  409d10:	(bad)  
  409d11:	sbb    bl,BYTE PTR [edi+0x69]
  409d14:	cs jo  0x409ca7
  409d17:	sbb    DWORD PTR [ebp+0x32],0x26
  409d1b:	or     DWORD PTR [edx-0xe7d8665],esp
  409d21:	dec    ebx
  409d22:	and    BYTE PTR [edi-0x6],bl
  409d25:	les    edx,FWORD PTR [ebx+0x7b553612]
  409d2b:	jo     0x409cd7
  409d2d:	jecxz  0x409d1b
  409d2f:	mov    dl,0xe0
  409d31:	mov    ds:0x751d2f4e,eax
  409d36:	cmp    dl,BYTE PTR [ebp+edi*1-0x7ecac906]
  409d3d:	rcl    DWORD PTR [ebx-0x15],1
  409d40:	addr16 cmp al,0x1f
  409d43:	lahf   
  409d44:	mov    dl,0x90
  409d46:	sti    
  409d47:	jle    0x409dc2
  409d49:	pop    edx
  409d4a:	loopne 0x409d28
  409d4c:	mov    ebx,0x28baee97
  409d51:	cmp    DWORD PTR [ebx],eax
  409d53:	sbb    BYTE PTR [esi-0x52ca818c],dl
  409d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d5a:	jg     0x409cee
  409d5c:	jge    0x409d90
  409d5e:	sar    DWORD PTR [ebp-0x1e],0x80
  409d62:	mov    ebp,0xaeeec9af
  409d67:	adc    ebp,DWORD PTR [edx+0x5b]
  409d6a:	(bad)  
  409d6b:	fidivr WORD PTR [edx]
  409d6d:	es in  al,dx
  409d6f:	cmp    eax,0x1ff18ef2
  409d74:	inc    esp
  409d75:	add    al,bh
  409d77:	shl    BYTE PTR [eax],1
  409d79:	sub    al,0xeb
  409d7b:	and    BYTE PTR [eax-0x4da7543b],ch
  409d81:	les    ebx,FWORD PTR [ebx]
  409d83:	in     eax,dx
  409d84:	mov    ebx,0x82883b74
  409d89:	and    bl,dl
  409d8b:	nop
  409d8c:	fnstcw WORD PTR [edx-0x3f]
  409d8f:	popf   
  409d90:	mov    ah,0xc
  409d92:	or     cl,BYTE PTR [edi-0xd]
  409d95:	nop
  409d96:	in     eax,dx
  409d97:	js     0x409d8e
  409d99:	int    0xff
  409d9b:	es je  0x409dd2
  409d9e:	push   edx
  409d9f:	jmp    0x409d79
  409da1:	mov    eax,ds:0x385bdd57
  409da6:	bound  edi,QWORD PTR [eax+0x6a6235ef]
  409dac:	sub    DWORD PTR [ecx-0x64],0xffffff9e
  409db0:	jbe    0x409d34
  409db2:	push   ecx
  409db3:	test   al,0x4c
  409db5:	xor    eax,0x340521be
  409dba:	ds loopne 0x409d6a
  409dbd:	jle    0x409dfd
  409dbf:	cmp    BYTE PTR [ebx+0x3f],ah
  409dc2:	inc    esi
  409dc3:	sbb    cl,dl
  409dc5:	(bad)
  409dc8:	sub    al,0x95
  409dca:	es (bad) 
  409dcc:	mov    esp,0x865bd2e7
  409dd1:	test   dh,al
  409dd3:	mov    edx,0xfdd42717
  409dd8:	fsub   QWORD PTR [ebx+0x3afca533]
  409dde:	arpl   WORD PTR [esi+ecx*2+0x765efde7],sp
  409de5:	loopne 0x409e37
  409de7:	lods   eax,DWORD PTR ds:[esi]
  409de8:	inc    ebx
  409de9:	mov    cl,0x76
  409deb:	inc    esi
  409dec:	jl     0x409d8a
  409dee:	sub    DWORD PTR [ecx+0x2b],ebx
  409df1:	ror    DWORD PTR [ecx+0x4d81fc45],0xfc
  409df8:	mov    esp,0x8bf89c85
  409dfd:	inc    ebp
  409dfe:	hlt    
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	idiv   ebp
  40a2fc:	jl     0x40a30b
  40a2fe:	add    BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	repnz aas 
  40a308:	scas   eax,DWORD PTR es:[edi]
  40a309:	or     al,0x32
  40a30b:	xchg   edx,eax
  40a30c:	cmp    cl,BYTE PTR [ecx+0x57370951]
  40a312:	jmp    0x70cd:0xf6320205
  40a319:	fmul   DWORD PTR [eax]
  40a31b:	push   esi
  40a31c:	jne    0x40a2b0
  40a31e:	add    DWORD PTR [esi],0xb72f5f8e
  40a324:	nop
  40a325:	bound  ecx,QWORD PTR [ebp+0x60]
  40a328:	cmp    al,ah
  40a32a:	lock sbb ecx,DWORD PTR [ebx]
  40a32d:	xor    ecx,esi
  40a32f:	push   esi
  40a330:	loopne 0x40a33a
  40a332:	int    0x14
  40a334:	dec    eax
  40a335:	sub    al,0x2
  40a337:	xchg   edi,eax
  40a338:	pop    ebp
  40a339:	cmc    
  40a33a:	cmp    bl,BYTE PTR [edi-0x4f]
  40a33d:	push   cs
  40a33e:	push   esi
  40a33f:	outs   dx,BYTE PTR ds:[esi]
  40a340:	jp     0x40a32d
  40a342:	fcomp  DWORD PTR [esi-0x522ef0f3]
  40a348:	aas    
  40a349:	jae    0x40a36e
  40a34b:	xor    ecx,esp
  40a34d:	add    al,0x66
  40a34f:	lahf   
  40a350:	add    dl,dl
  40a352:	pop    ecx
  40a353:	jae    0x40a2ec
  40a355:	bound  esi,QWORD PTR [esi-0x4d887752]
  40a35b:	test   BYTE PTR [eax+0x27],0x3b
  40a35f:	or     al,0xb2
  40a361:	push   esp
  40a362:	push   ebx
  40a363:	popa   
  40a364:	sti    
  40a365:	ins    DWORD PTR es:[edi],dx
  40a366:	gs jl  0x40a37e
  40a369:	loop   0x40a360
  40a36b:	and    dh,BYTE PTR [ecx]
  40a36d:	inc    ebp
  40a36e:	int3   
  40a36f:	stos   BYTE PTR es:[edi],al
  40a370:	dec    ebp
  40a371:	mov    fs,WORD PTR [ecx-0x7e]
  40a374:	imul   ebp,DWORD PTR [ebp-0x6c],0xa0ddde56
  40a37b:	out    0xb6,eax
  40a37d:	jo     0x40a3e0
  40a37f:	aam    0x25
  40a381:	sbb    DWORD PTR [ebx+0x34],edx
  40a384:	dec    edi
  40a385:	push   0x26394420
  40a38a:	mov    eax,0x85a2fb6e
  40a38f:	push   eax
  40a390:	push   DWORD PTR [esi+eiz*8-0x63fd099f]
  40a397:	jns    0x40a40c
  40a399:	imul   ecx,DWORD PTR [esi],0xffffff82
  40a39c:	cs ins BYTE PTR es:[edi],dx
  40a39e:	xchg   ebp,eax
  40a39f:	dec    eax
  40a3a0:	imul   DWORD PTR [ebx-0x2c3b5cf3]
  40a3a6:	lock loopne 0x40a3ba
  40a3a9:	jbe    0x40a361
  40a3ab:	scas   al,BYTE PTR es:[edi]
  40a3ac:	(bad)  
  40a3ad:	cmp    al,0x1b
  40a3af:	jge    0x40a397
  40a3b1:	ret    0x85f0
  40a3b4:	pusha  
  40a3b5:	outs   dx,DWORD PTR ds:[esi]
  40a3b6:	nop
  40a3b7:	cwde   
  40a3b8:	out    dx,eax
  40a3b9:	adc    BYTE PTR [esp+ebp*4-0x2251ef0d],cl
  40a3c0:	jae    0x40a3c1
  40a3c2:	cmp    ebp,0xffffffbc
  40a3c5:	cmc    
  40a3c6:	hlt    
  40a3c7:	(bad)  
  40a3c9:	dec    ebp
  40a3ca:	cmp    al,0x95
  40a3cc:	cmp    esi,DWORD PTR [ebp-0x3c]
  40a3cf:	xlat   BYTE PTR ds:[ebx]
  40a3d0:	mov    ss,WORD PTR [ebx+edi*4]
  40a3d3:	and    dl,BYTE PTR [esi]
  40a3d5:	sub    BYTE PTR [esi+0x6d],bl
  40a3d8:	adc    eax,0xe7ac791f
  40a3dd:	stos   BYTE PTR es:[edi],al
  40a3de:	(bad)  
  40a3df:	jb     0x40a40c
  40a3e1:	push   esi
  40a3e2:	ret    0x79d2
  40a3e5:	data16 sar dl,0x9b
  40a3e9:	pop    ds
  40a3ea:	popa   
  40a3eb:	mov    ah,0x3c
  40a3ed:	and    ebp,DWORD PTR [eax+0x10]
  40a3f0:	std    
  40a3f1:	and    esi,DWORD PTR ds:0x50e9f283
  40a3f7:	scas   al,BYTE PTR es:[edi]
  40a3f8:	rol    BYTE PTR [edi+0x76ec5213],cl
  40a3fe:	clc    
  40a3ff:	fistp  QWORD PTR [esi+0x31]
  40a402:	mov    eax,0x3ab5a66f
  40a407:	es dec ebx
  40a409:	fwait
  40a40a:	xchg   ebx,eax
  40a40b:	pop    ecx
  40a40c:	imul   eax,DWORD PTR [ecx+0x4],0x1976683d
  40a413:	cmc    
  40a414:	(bad)  
  40a415:	cmc    
  40a416:	loopne 0x40a44c
  40a418:	or     al,0xb8
  40a41a:	aad    0x3c
  40a41c:	and    BYTE PTR [edi+0x79],dh
  40a41f:	xchg   BYTE PTR [ecx-0x24e39aa9],ch
  40a425:	sti    
  40a426:	push   eax
  40a427:	ss mov ebp,0x40fa9bf1
  40a42d:	cmp    eax,0xcd653282
  40a432:	push   eax
  40a433:	push   esp
  40a434:	cld    
  40a435:	lea    ecx,[esi+0x7]
  40a438:	and    al,0x4d
  40a43a:	fimul  WORD PTR [ebx+0x24b1377f]
  40a440:	and    eax,0x62ba13bf
  40a445:	icebp  
  40a446:	shr    BYTE PTR [ebx],0x5b
  40a449:	xor    DWORD PTR [ebp+0xc1326b4],edx
  40a44f:	adc    bh,0xa2
  40a452:	or     bl,BYTE PTR [ecx-0x74e012d9]
  40a458:	lea    esi,[ecx-0x51b25690]
  40a45e:	mov    ?,WORD PTR [ebp-0x62]
  40a461:	ins    DWORD PTR es:[edi],dx
  40a462:	mov    al,0x8e
  40a464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a465:	call   0x4ec8:0x10fa4033
  40a46c:	mov    ch,0x7b
  40a46e:	in     al,0xb1
  40a470:	inc    esi
  40a471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a472:	mov    BYTE PTR [eax+0x50],0xeb
  40a476:	rep lods eax,DWORD PTR ds:[esi]
  40a478:	mov    cl,0x86
  40a47a:	inc    ebp
  40a47b:	mov    dh,0xd1
  40a47d:	cmp    BYTE PTR [ebp+0x12df1228],dh
  40a483:	loop   0x40a4de
  40a485:	lods   eax,DWORD PTR ds:[esi]
  40a486:	push   0x27
  40a488:	shl    BYTE PTR [ecx+0x44],1
  40a48b:	lock xor BYTE PTR [esi+0x4eec8c7c],dl
  40a492:	pusha  
  40a493:	sub    eax,0xccbbbfb
  40a498:	test   eax,0xdc50c607
  40a49d:	jb     0x40a4ca
  40a49f:	sahf   
  40a4a0:	add    edi,ebp
  40a4a2:	rcl    DWORD PTR [edi-0x5a25dfbe],0x65
  40a4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4aa:	mov    esp,0x90d1121a
  40a4af:	pop    esp
  40a4b0:	in     eax,0x3b
  40a4b2:	mov    DWORD PTR [edi-0xa],ecx
  40a4b5:	ja     0x40a4e2
  40a4b7:	not    DWORD PTR [edi+0x13]
  40a4ba:	scas   al,BYTE PTR es:[edi]
  40a4bb:	call   0xebd4:0x52658f08
  40a4c2:	ret    
  40a4c3:	or     dh,BYTE PTR [edi-0x2929eb1d]
  40a4c9:	mov    dl,BYTE PTR [ebp-0x5dd926b8]
  40a4cf:	push   cs
  40a4d0:	call   0xcd9c9e05
  40a4d5:	bswap  edi
  40a4d7:	adc    edx,ebp
  40a4d9:	cmp    al,0x25
  40a4db:	pop    edi
  40a4dc:	and    al,0x35
  40a4de:	jne    0x40a4d2
  40a4e0:	mov    BYTE PTR [esi-0x4a],dl
  40a4e3:	icebp  
  40a4e4:	or     eax,0xee1aebda
  40a4e9:	lods   eax,DWORD PTR ds:[esi]
  40a4ea:	sub    bl,BYTE PTR [edi+0x610f419e]
  40a4f0:	cs push ss
  40a4f2:	mov    DWORD PTR [edi+ebp*2-0x9],ecx
  40a4f6:	pop    edi
  40a4f7:	cdq    
  40a4f8:	out    dx,al
  40a4f9:	jns    0x40a543
  40a4fb:	(bad)  
  40a4fc:	jle    0x40a554
  40a4fe:	pop    esi
  40a4ff:	push   0x92fb1ed3
  40a504:	cmp    esp,ecx
  40a506:	jae    0x40a50d
  40a508:	je     0x40a535
  40a50a:	jp     0x40a4a5
  40a50c:	pusha  
  40a50d:	xchg   ebx,eax
  40a50e:	dec    ebx
  40a50f:	push   ds
  40a510:	adc    DWORD PTR [edi],esp
  40a512:	jle    0x40a4d9
  40a514:	out    0xf1,al
  40a516:	popa   
  40a517:	scas   al,BYTE PTR es:[edi]
  40a518:	xlat   BYTE PTR ds:[ebx]
  40a519:	ficom  WORD PTR [ebx+0x0]
  40a51c:	pop    ebp
  40a51d:	ins    DWORD PTR es:[edi],dx
  40a51e:	fs mov dl,0x76
  40a521:	or     cl,bl
  40a523:	int3   
  40a524:	lahf   
  40a525:	or     dh,BYTE PTR [edi-0x79]
  40a528:	sar    ch,cl
  40a52a:	addr16 or al,0xde
  40a52d:	pop    es
  40a52e:	mov    WORD PTR [ebp-0x54],fs
  40a531:	cmp    al,BYTE PTR [edx]
  40a533:	pop    esp
  40a534:	iret   
  40a535:	sti    
  40a536:	fisub  DWORD PTR [edx+0x29d45251]
  40a53c:	adc    BYTE PTR [edx+0x4b96f273],ch
  40a542:	add    DWORD PTR ds:0xdb0701e9,ebp
  40a548:	add    edx,DWORD PTR [ecx]
  40a54a:	sub    al,0x8f
  40a54c:	and    eax,0x31cccc6b
  40a551:	xchg   ebx,eax
  40a552:	jns    0x40a5c4
  40a554:	cli    
  40a555:	nop
  40a556:	xchg   edx,eax
  40a557:	adc    DWORD PTR [ecx],0xdd6e603e
  40a55d:	jg     0x40a5d5
  40a55f:	mov    edi,0xfa1bdf4a
  40a564:	rcl    BYTE PTR [edi],0xf5
  40a567:	sbb    BYTE PTR [ebx+eiz*4+0x1c18849c],ch
  40a56e:	xchg   edx,eax
  40a56f:	cdq    
  40a570:	shl    DWORD PTR [edx],0x69
  40a573:	dec    ebp
  40a574:	lds    esi,FWORD PTR [ebx]
  40a576:	mov    dh,0x4e
  40a578:	lea    esp,[edi+0x31]
  40a57b:	adc    dh,BYTE PTR [edx]
  40a57d:	scas   al,BYTE PTR es:[edi]
  40a57e:	sub    dh,BYTE PTR [ebx]
  40a580:	xor    dl,BYTE PTR [edi+ebx*8+0x59]
  40a584:	inc    edx
  40a585:	jle    0xf5d232a6
  40a58b:	inc    esp
  40a58c:	add    eax,0xda75340b
  40a591:	and    BYTE PTR [ebp-0x23495bcc],dh
  40a597:	push   ebx
  40a598:	add    eax,0xd33b2090
  40a59d:	jnp    0x40a591
  40a59f:	stos   DWORD PTR es:[edi],eax
  40a5a0:	fld    TBYTE PTR [eax]
  40a5a2:	rol    BYTE PTR [eax+0x56],cl
  40a5a5:	xchg   esp,eax
  40a5a6:	ins    BYTE PTR es:[edi],dx
  40a5a7:	gs (bad) 
  40a5a9:	xchg   edi,eax
  40a5aa:	cli    
  40a5ab:	xor    dh,ch
  40a5ad:	mov    ah,0x6e
  40a5af:	dec    esi
  40a5b0:	out    dx,al
  40a5b1:	cmp    ebx,DWORD PTR [ebp+0x54]
  40a5b4:	and    bh,dl
  40a5b6:	sub    DWORD PTR [ebx+0x75],ebp
  40a5b9:	and    BYTE PTR [edx-0x5093b415],cl
  40a5bf:	lock mov ah,0xf8
  40a5c2:	mov    ds:0x9015a484,al
  40a5c7:	fbstp  TBYTE PTR [edi+edi*4-0x70]
  40a5cb:	pushf  
  40a5cc:	and    al,0x5f
  40a5ce:	jmp    0x40a5bd
  40a5d0:	lea    edx,[ecx+0x2df7fff0]
  40a5d6:	ret    
  40a5d7:	inc    edi
  40a5d8:	out    0x46,al
  40a5da:	mov    al,0xc4
  40a5dc:	and    DWORD PTR [ecx+0x1a],0x72
  40a5e0:	ins    BYTE PTR es:[edi],dx
  40a5e1:	sub    esi,DWORD PTR [edx+0x7a]
  40a5e4:	add    ch,BYTE PTR [eax+0x639d8728]
  40a5ea:	pushf  
  40a5eb:	xchg   edi,eax
  40a5ec:	imul   esi,DWORD PTR [edi+0x6b],0xd
  40a5f0:	ds ror ecx,0x85
  40a5f4:	div    BYTE PTR [edi-0x5332edd7]
  40a5fa:	sub    dl,ch
  40a5fc:	xchg   ebx,eax
  40a5fd:	std    
  40a5fe:	popf   
  40a5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a600:	loopne 0x40a609
  40a602:	hlt    
  40a603:	(bad)  
  40a604:	fisub  DWORD PTR [edi-0x62b17819]
  40a60a:	jmp    0x40a5c0
  40a60c:	and    al,0x7c
  40a60e:	repz mov dh,BYTE PTR [ecx-0x50]
  40a612:	aaa    
  40a613:	cwde   
  40a614:	xor    al,0x7b
  40a616:	push   esi
  40a617:	ja     0x40a637
  40a619:	push   eax
  40a61a:	fcomip st,st(1)
  40a61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61d:	jno    0x40a664
  40a61f:	pusha  
  40a620:	sbb    ch,BYTE PTR [edi-0x5f184c9]
  40a626:	cwde   
  40a627:	mov    eax,fs
  40a629:	in     eax,0xbe
  40a62b:	repnz pop es
  40a62d:	out    dx,eax
  40a62e:	sub    ax,0x7545
  40a632:	adc    bl,BYTE PTR [ecx-0xd]
  40a635:	popa   
  40a636:	add    al,0x3c
  40a638:	cld    
  40a639:	mov    ecx,0x5c2699d5
  40a63e:	cs mov ch,0x36
  40a641:	xor    eax,ebx
  40a643:	sar    BYTE PTR [edi-0x3e],1
  40a646:	cmc    
  40a647:	sbb    bl,BYTE PTR [edx]
  40a649:	sub    BYTE PTR [edi],ch
  40a64b:	jo     0x40a6a3
  40a64d:	sbb    eax,0xdf23cbaa
  40a652:	fwait
  40a653:	(bad)
  40a657:	call   0x52bbdb82
  40a65c:	arpl   WORD PTR [esi-0x19811b12],cx
  40a662:	bound  edi,QWORD PTR [edi+0x15]
  40a665:	inc    esi
  40a666:	jno    0x40a669
  40a668:	cmp    esi,ecx
  40a66a:	dec    ebp
  40a66b:	jmp    0x40a6a5
  40a66d:	fldcw  WORD PTR [edx]
  40a66f:	sbb    al,0xb4
  40a671:	sub    BYTE PTR [esi+0x55],0x68
  40a675:	xor    DWORD PTR ss:[eax+0x22],edi
  40a679:	jnp    0x40a65a
  40a67b:	ds push ss
  40a67d:	iret   
  40a67e:	mov    ss,WORD PTR [edx]
  40a680:	jmp    0xe1f9:0x79fab78a
  40a687:	xchg   edx,eax
  40a688:	push   cs
  40a689:	aam    0xb1
  40a68b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a68c:	pop    ecx
  40a68d:	jg     0x40a639
  40a68f:	mov    BYTE PTR [ecx+0x22],dh
  40a692:	push   ss
  40a693:	sbb    ah,BYTE PTR [esi]
  40a695:	and    bl,BYTE PTR [ebp+0x72]
  40a698:	xchg   ebp,eax
  40a699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a69a:	jmp    0x40a70c
  40a69c:	(bad)  
  40a69d:	jmp    FWORD PTR [edx]
  40a69f:	popf   
  40a6a0:	jge    0x40a644
  40a6a2:	pop    ebp
  40a6a3:	(bad)  
  40a6a4:	hlt    
  40a6a5:	sub    BYTE PTR [ebx],0xeb
  40a6a8:	inc    esi
  40a6a9:	sub    al,ah
  40a6ab:	jbe    0x40a6ca
  40a6ad:	cs sub eax,0x2189671f
  40a6b3:	xchg   esp,eax
  40a6b4:	dec    eax
  40a6b5:	aaa    
  40a6b6:	dec    ebp
  40a6b7:	iret   
  40a6b8:	or     esi,edx
  40a6ba:	outs   dx,BYTE PTR ds:[esi]
  40a6bb:	mov    ebp,0x4121a4b
  40a6c0:	or     dh,BYTE PTR [ebp-0x5e1bc14f]
  40a6c6:	mov    ah,0xe
  40a6c8:	test   DWORD PTR [edi+0x51],edx
  40a6cb:	mov    bl,0x6e
  40a6cd:	lahf   
  40a6ce:	imul   edx,DWORD PTR [ecx],0xffffffe7
  40a6d1:	push   ds
  40a6d2:	sbb    eax,DWORD PTR [edi+0x592c3101]
  40a6d8:	dec    eax
  40a6d9:	mov    DWORD PTR [ecx-0x68ee888a],ebx
  40a6df:	or     DWORD PTR [edi+0x2a637a03],edi
  40a6e5:	lods   eax,DWORD PTR ds:[esi]
  40a6e6:	iret   
  40a6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e8:	rcl    bl,cl
  40a6ea:	in     al,dx
  40a6eb:	addr16 mov ?,ecx
  40a6ee:	jne    0x40a695
  40a6f0:	in     eax,0xfe
  40a6f2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a6f4:	scas   al,BYTE PTR es:[edi]
  40a6f5:	into   
  40a6f6:	mul    edx
  40a6f8:	push   0xa0dd539e
  40a6fd:	mov    al,BYTE PTR [eax+0x55]
  40a700:	mov    al,BYTE PTR [esi]
  40a702:	mov    ah,0x95
  40a704:	enter  0x1e16,0x69
  40a708:	rol    dh,0xb1
  40a70b:	sub    eax,0x3363bac0
  40a710:	test   al,0x44
  40a712:	aas    
  40a713:	inc    esp
  40a714:	scas   al,BYTE PTR es:[edi]
  40a715:	xchg   ebx,eax
  40a716:	not    al
  40a718:	out    0x3a,al
  40a71a:	in     eax,0x19
  40a71c:	aas    
  40a71d:	jne    0x40a730
  40a71f:	idiv   BYTE PTR [esi+0x2c1cea46]
  40a725:	push   cs
  40a726:	jge    0x40a741
  40a728:	or     ebp,ebp
  40a72a:	sbb    esi,DWORD PTR fs:[esp+eax*4-0x51]
  40a72f:	outs   dx,BYTE PTR ds:[esi]
  40a730:	pop    ds
  40a731:	(bad)  
  40a732:	jmp    0x40a6fc
  40a734:	clc    
  40a735:	cwde   
  40a736:	inc    ebx
  40a737:	das    
  40a738:	aas    
  40a739:	sub    DWORD PTR [ecx-0x37],edx
  40a73c:	xchg   cl,dl
  40a73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a73f:	or     eax,0x94598b13
  40a744:	mov    dh,0xf3
  40a746:	lea    esp,[esi]
  40a748:	dec    ebp
  40a749:	xor    al,0xc0
  40a74b:	rcr    DWORD PTR [ebp+0x3449b5d9],0x12
  40a752:	hlt    
  40a753:	sbb    bl,BYTE PTR [ebx+0x609193df]
  40a759:	push   esp
  40a75a:	pop    ds
  40a75b:	sahf   
  40a75c:	aam    0x97
  40a75e:	jbe    0x40a7c0
  40a760:	xor    eax,ebx
  40a762:	test   DWORD PTR [edx-0x51e05aec],edi
  40a768:	sub    BYTE PTR es:[ebx-0x30de19e0],ch
  40a76f:	popa   
  40a770:	fild   QWORD PTR ds:0x8dd96ca3
  40a776:	test   BYTE PTR [ecx+esi*1],bl
  40a779:	dec    eax
  40a77a:	pop    ds
  40a77b:	add    bl,BYTE PTR [ecx]
  40a77d:	imul   ebp,ebp,0xb593e9c1
  40a783:	adc    DWORD PTR [ebp+0x2c],0xb1615c9e
  40a78a:	in     al,dx
  40a78b:	stos   DWORD PTR es:[edi],eax
  40a78c:	aad    0xe0
  40a78e:	xor    BYTE PTR [ecx+ebx*2-0x68],0x1d
  40a793:	nop
  40a794:	and    ecx,DWORD PTR [esi+0x1ee1aa1c]
  40a79a:	sbb    BYTE PTR [esi-0x59a1e4d4],al
  40a7a0:	inc    edx
  40a7a1:	aad    0x1d
  40a7a3:	add    DWORD PTR [edx-0x2a],edx
  40a7a6:	(bad)  
  40a7a7:	lahf   
  40a7a8:	jle    0x40a799
  40a7aa:	cmp    al,bl
  40a7ac:	aaa    
  40a7ad:	dec    DWORD PTR [edx+0x1c46cedd]
  40a7b3:	push   esi
  40a7b4:	or     DWORD PTR [ebp+0x79],ebx
  40a7b7:	cwde   
  40a7b8:	out    0x26,al
  40a7ba:	outs   dx,BYTE PTR ds:[esi]
  40a7bb:	xchg   edi,eax
  40a7bc:	jle    0x40a7d4
  40a7be:	xor    al,0x33
  40a7c0:	pop    edi
  40a7c1:	dec    eax
  40a7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c3:	rol    BYTE PTR [esi-0x2d],0x94
  40a7c7:	fimul  DWORD PTR [esi+ebp*4+0x279572c3]
  40a7ce:	fnstenv [eax+0x56]
  40a7d1:	ret    
  40a7d2:	adc    ebp,esi
  40a7d4:	rol    BYTE PTR [edi-0x2e961ce9],1
  40a7da:	sbb    ch,BYTE PTR [edi-0x26]
  40a7dd:	pop    ebp
  40a7de:	mov    BYTE PTR [esi],bh
  40a7e0:	xchg   ecx,eax
  40a7e1:	dec    ebp
  40a7e2:	imul   ecx,DWORD PTR [edx-0x1955d474],0xb7dbc63a
  40a7ec:	ror    DWORD PTR [edx-0x9],cl
  40a7ef:	arpl   WORD PTR [eax+0x7d],cx
  40a7f2:	je     0x40a816
  40a7f4:	shl    DWORD PTR [eax],cl
  40a7f6:	ret    
  40a7f7:	stc    
  40a7f8:	and    eax,0x8768679b
  40a7fd:	lahf   
  40a7fe:	sbb    al,0xcb
  40a800:	fsub   QWORD PTR [esi]
  40a802:	lea    ecx,[eax-0x2f1eed60]
  40a808:	pop    ecx
  40a809:	push   ebp
  40a80a:	dec    ebx
  40a80b:	call   0x550e2571
  40a810:	ins    DWORD PTR es:[edi],dx
  40a811:	nop
  40a812:	inc    esi
  40a813:	pop    ds
  40a814:	cmp    eax,0xf2475733
  40a819:	mov    esp,0x1302ed82
  40a81e:	mov    ebp,0xd72ad711
  40a823:	js     0x40a7f0
  40a825:	stc    
  40a826:	mov    cl,0x82
  40a828:	ins    BYTE PTR es:[edi],dx
  40a829:	mov    edx,DWORD PTR [ecx]
  40a82b:	adc    eax,DWORD PTR [ebp+0x6a55e427]
  40a831:	ins    DWORD PTR es:[edi],dx
  40a832:	pop    esp
  40a833:	test   BYTE PTR [esi],ch
  40a835:	das    
  40a836:	mov    ch,0x30
  40a838:	dec    esp
  40a839:	xchg   edx,eax
  40a83a:	in     al,dx
  40a83b:	(bad)  
  40a83c:	mov    ecx,0x9e1c329e
  40a841:	sub    al,0xf1
  40a843:	mov    ebp,0xb5096db7
  40a848:	dec    ebx
  40a849:	lahf   
  40a84a:	xchg   ecx,eax
  40a84b:	xchg   esp,eax
  40a84c:	inc    esi
  40a84d:	pop    ecx
  40a84e:	mov    al,0x64
  40a850:	test   eax,0xc5999202
  40a855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a856:	es xor eax,0xf2582d63
  40a85c:	cmp    cl,BYTE PTR [edi]
  40a85e:	cli    
  40a85f:	push   eax
  40a860:	jb     0x40a86c
  40a862:	out    0xfe,eax
  40a864:	clc    
  40a865:	or     eax,0xc079986c
  40a86a:	xchg   edx,eax
  40a86b:	xchg   esp,eax
  40a86c:	int3   
  40a86d:	lock fstp QWORD PTR [esi+0x3f]
  40a871:	repz (bad) 
  40a873:	cmp    al,ah
  40a875:	fs pop es
  40a877:	add    al,0x4d
  40a879:	add    BYTE PTR fs:[ebx-0x116e7a7e],ch
  40a880:	int    0x3e
  40a882:	iret   
  40a883:	add    DWORD PTR [esi-0xf],0xffffffde
  40a887:	push   edx
  40a888:	mov    ds:0xb24e23ec,al
  40a88d:	or     DWORD PTR [ebp-0x4c],0xffffffa2
  40a891:	jnp    0x40a81d
  40a893:	ret    
  40a894:	jne    0x40a8a5
  40a896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a897:	jp     0x40a81c
  40a899:	out    dx,al
  40a89a:	enter  0x27b1,0xa5
  40a89e:	(bad)  
  40a8a0:	push   ecx
  40a8a1:	xor    al,0xd3
  40a8a3:	in     eax,0xaf
  40a8a5:	and    bx,WORD PTR [ebx-0x79d42a06]
  40a8ac:	jo     0x40a92a
  40a8ae:	add    esp,DWORD PTR [esi+0x31]
  40a8b1:	rcl    DWORD PTR [edx],1
  40a8b3:	clc    
  40a8b4:	sub    edi,esi
  40a8b6:	jmp    0x52d:0x825ea0d4
  40a8bd:	loopne 0x40a892
  40a8bf:	mov    ch,0xd2
  40a8c1:	je     0x40a8e7
  40a8c3:	xor    ebx,DWORD PTR [eax]
  40a8c5:	xor    al,0x1e
  40a8c7:	ror    BYTE PTR [edx],0xf8
  40a8ca:	or     DWORD PTR [ebx],ecx
  40a8cc:	mov    bl,0xa6
  40a8ce:	(bad)
  40a8d1:	jmp    0xc0f37431
  40a8d6:	in     eax,0xd5
  40a8d8:	stc    
  40a8d9:	mov    esp,0xa1eb5e8c
  40a8de:	shl    BYTE PTR [esi+0x12],1
  40a8e1:	lock ins BYTE PTR es:[edi],dx
  40a8e3:	add    al,0x6a
  40a8e5:	mov    eax,0x23ad1717
  40a8ea:	adc    eax,0x74f1bc6a
  40a8ef:	fldcw  WORD PTR [eax-0x215d176f]
  40a8f5:	push   edi
  40a8f6:	jno    0x40a92a
  40a8f8:	mov    DWORD PTR [ebp+0x4a55ebeb],edi
  40a8fe:	and    eax,0x89ff1b0d
  40a903:	inc    ebx
  40a904:	rcl    BYTE PTR [ebp+0x2c],1
  40a907:	pop    es
  40a908:	enter  0xbb7b,0x92
  40a90c:	pop    eax
  40a90d:	xchg   ah,cl
  40a90f:	mov    ecx,0x91cbcce3
  40a914:	xchg   ebp,eax
  40a915:	lahf   
  40a916:	sbb    BYTE PTR [ebp-0x656202f0],bh
  40a91c:	stc    
  40a91d:	sbb    ah,bl
  40a91f:	addr16 popa 
  40a921:	dec    edx
  40a922:	fsubr  DWORD PTR [ecx+0x2d]
  40a925:	push   ebx
  40a926:	inc    edi
  40a927:	pusha  
  40a928:	scas   al,BYTE PTR es:[edi]
  40a929:	(bad)  
  40a92a:	cli    
  40a92b:	add    DWORD PTR [ecx-0x54fa3dc8],ebp
  40a931:	les    edx,FWORD PTR [ecx-0x5fc284c7]
  40a937:	retf   
  40a938:	in     al,dx
  40a939:	add    DWORD PTR [edx+0xd],esi
  40a93c:	aas    
  40a93d:	cld    
  40a93e:	out    dx,eax
  40a93f:	pop    ss
  40a940:	sti    
  40a941:	inc    ebx
  40a942:	sbb    al,0x7f
  40a944:	or     DWORD PTR [eax+0x55],ebx
  40a947:	mov    BYTE PTR [edi],0xda
  40a94a:	or     ebx,DWORD PTR [ecx+edi*4+0x64]
  40a94e:	inc    edi
  40a94f:	pop    esi
  40a950:	outs   dx,DWORD PTR ds:[esi]
  40a951:	stc    
  40a952:	inc    ebx
  40a953:	nop    DWORD PTR [ecx+0x6b381d45]
  40a95a:	cmp    ecx,DWORD PTR [edi+0x3ef81a9b]
  40a960:	mov    edi,0x1c5463f0
  40a965:	test   eax,0x2ee63a3
  40a96a:	push   es
  40a96b:	fadd   st,st(0)
  40a96d:	inc    ebx
  40a96e:	in     eax,0x50
  40a970:	sbb    ecx,DWORD PTR [esi+edx*1]
  40a973:	pusha  
  40a974:	inc    ebx
  40a975:	and    DWORD PTR [esi+0x34],ebp
  40a978:	jno    0x40a975
  40a97a:	out    0x26,eax
  40a97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a97d:	into   
  40a97e:	pop    ds
  40a97f:	cmp    BYTE PTR [edx-0x18],bl
  40a982:	ja     0x40a967
  40a984:	imul   edi,DWORD PTR [ebx],0x42349188
  40a98a:	sbb    al,0x6d
  40a98c:	mov    ebx,DWORD PTR [ebx-0x57b5c54a]
  40a992:	out    0x13,eax
  40a994:	push   edx
  40a995:	rcl    DWORD PTR [eax+0x5b898f77],cl
  40a99b:	mov    BYTE PTR [eax+0x6e],ch
  40a99e:	inc    esp
  40a99f:	or     edi,DWORD PTR [esi*4+0x62467ff6]
  40a9a6:	add    eax,eax
  40a9a8:	mov    DWORD PTR [esi-0x15ccabb2],edi
  40a9ae:	jne    0x40a957
  40a9b0:	mov    esi,ecx
  40a9b2:	ja     0x40a9ef
  40a9b4:	sbb    BYTE PTR [edx+0x26],dl
  40a9b7:	ds dec ecx
  40a9b9:	cmp    al,0x37
  40a9bb:	push   es
  40a9bc:	sbb    esp,DWORD PTR [eax]
  40a9be:	retf   
  40a9bf:	scas   eax,DWORD PTR es:[edi]
  40a9c0:	and    ebx,esi
  40a9c2:	test   eax,0x996d2e35
  40a9c7:	lods   eax,DWORD PTR ds:[esi]
  40a9c8:	or     BYTE PTR [bp+si],dl
  40a9cb:	in     eax,dx
  40a9cc:	sahf   
  40a9cd:	sub    eax,DWORD PTR [ecx]
  40a9cf:	inc    eax
  40a9d0:	sub    al,0x18
  40a9d2:	add    dl,BYTE PTR [ecx]
  40a9d4:	scas   al,BYTE PTR es:[edi]
  40a9d5:	aas    
  40a9d6:	jle    0x40aa47
  40a9d8:	loope  0x40a988
  40a9da:	cwde   
  40a9db:	(bad)  ds:0xe571b809
  40a9e1:	xchg   edi,ebp
  40a9e3:	cmp    edi,eax
  40a9e5:	xor    DWORD PTR [edi],ebp
  40a9e7:	rcr    DWORD PTR [esi-0x2e4a9c4d],1
  40a9ed:	es push cs
  40a9ef:	ret    
  40a9f0:	pop    es
  40a9f1:	in     eax,0xc0
  40a9f3:	jp     0x40aa33
  40a9f5:	cs daa 
  40a9f7:	xchg   ebp,eax
  40a9f8:	iret   
  40a9f9:	(bad)  
  40a9fa:	cmc    
  40a9fb:	xchg   edi,eax
  40a9fc:	adc    DWORD PTR [esi+esi*2-0x2e],ebp
  40aa00:	cmp    ah,BYTE PTR [ecx+0x1d]
  40aa03:	xor    eax,0xccc39378
  40aa08:	inc    esp
  40aa09:	pop    ebx
  40aa0a:	or     eax,0x8a60923b
  40aa0f:	stc    
  40aa10:	test   al,0xff
  40aa12:	jno    0x40aa13
  40aa14:	fs es icebp 
  40aa17:	adc    bh,ch
  40aa19:	push   cs
  40aa1a:	pop    ss
  40aa1b:	mul    BYTE PTR [eax+0x64]
  40aa1e:	pusha  
  40aa1f:	inc    edi
  40aa20:	lock ret 
  40aa22:	or     BYTE PTR [ebx],dl
  40aa24:	cmp    eax,eax
  40aa26:	das    
  40aa27:	xor    esp,DWORD PTR [eax-0x5c]
  40aa2a:	add    al,0x54
  40aa2c:	mov    ah,0x4
  40aa2e:	rcr    BYTE PTR [eax+ecx*1],0xd4
  40aa32:	js     0x40a9e8
  40aa34:	adc    bl,BYTE PTR [eax]
  40aa36:	adc    al,0x8
  40aa38:	cs jl  0x40aa3c
  40aa3b:	or     eax,0x3e06b671
  40aa40:	aad    0x24
  40aa42:	sbb    ebp,eax
  40aa44:	sub    dl,BYTE PTR [eax+0x3f]
  40aa47:	jmp    0x8b1e0472
  40aa4c:	inc    ebx
  40aa4d:	adc    dh,bl
  40aa4f:	test   eax,0x276257e9
  40aa54:	lods   eax,DWORD PTR ds:[esi]
  40aa55:	fnsave [ebp-0x3da10c0b]
  40aa5b:	pop    esi
  40aa5c:	mov    WORD PTR [esi-0x5c],ds
  40aa5f:	mov    bh,0x73
  40aa61:	jnp    0x40aa53
  40aa63:	pop    edi
  40aa64:	push   ebp
  40aa65:	out    0xec,al
  40aa67:	daa    
  40aa68:	pop    ss
  40aa69:	mov    ah,BYTE PTR [eax]
  40aa6b:	dec    ecx
  40aa6c:	es mov ebx,0x4b0e9c58
  40aa72:	sbb    DWORD PTR [eax-0x2],edx
  40aa75:	mov    ds:0x313a949f,eax
  40aa7a:	pop    eax
  40aa7b:	rol    cl,1
  40aa7d:	lock and eax,ebx
  40aa80:	mov    bh,0x8
  40aa82:	shr    dh,1
  40aa84:	fbld   TBYTE PTR [edi*8-0x4c22a3e0]
  40aa8b:	or     eax,DWORD PTR [edi]
  40aa8d:	mov    ch,0xee
  40aa8f:	mov    ds:0x97d82fbb,eax
  40aa94:	xor    edx,DWORD PTR [ecx-0x7bcb98af]
  40aa9a:	imul   edx,DWORD PTR [ebx+0x5],0xffffffe9
  40aa9e:	lea    eax,[edx-0x57a5b2b9]
  40aaa4:	int    0x5b
  40aaa6:	loop   0x40aae6
  40aaa8:	cmp    DWORD PTR [esi+0x6c],esp
  40aaab:	pop    esi
  40aaac:	sahf   
  40aaad:	dec    ebx
  40aaae:	sub    BYTE PTR [ecx+0x3e],ah
  40aab1:	sbb    DWORD PTR [ebx+0x3b0a9890],edx
  40aab7:	xor    eax,0x4514c9ec
  40aabc:	dec    ecx
  40aabd:	lds    ecx,FWORD PTR [ebp-0x21c888e7]
  40aac3:	lock outs dx,DWORD PTR ds:[esi]
  40aac5:	into   
  40aac6:	loopne 0x40aad4
  40aac8:	(bad)  
  40aac9:	out    dx,eax
  40aaca:	(bad)  
  40aacb:	push   ebx
  40aacc:	fstp   QWORD PTR [esi]
  40aace:	test   BYTE PTR [esi-0x58],dl
  40aad1:	xor    bh,ah
  40aad3:	enter  0xc5b0,0x3
  40aad7:	mov    DWORD PTR [eax],eax
  40aad9:	push   ss
  40aada:	xor    esp,DWORD PTR [ebx-0x625b4cdc]
  40aae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae1:	aas    
  40aae2:	stos   DWORD PTR es:[edi],eax
  40aae3:	push   0x471c2e3f
  40aae8:	mov    ebx,0x3ec4889e
  40aaed:	push   ds
  40aaee:	clc    
  40aaef:	outs   dx,BYTE PTR ds:[esi]
  40aaf0:	push   cs
  40aaf1:	adc    BYTE PTR [esp+edx*1+0x55],ah
  40aaf5:	daa    
  40aaf6:	(bad)  
  40aaf7:	fbld   TBYTE PTR [ebp+0x64ed7961]
  40aafd:	sub    BYTE PTR [eax],ah
  40aaff:	test   DWORD PTR [ebx-0x80],esi
  40ab02:	mov    cl,BYTE PTR [edx+edi*2]
  40ab05:	or     BYTE PTR [ecx-0x11d0c581],0x10
  40ab0c:	out    0x1b,eax
  40ab0e:	mov    ecx,0x74726e4b
  40ab13:	pusha  
  40ab14:	(bad)  
  40ab15:	cmp    DWORD PTR [esi-0x6f578992],ebx
  40ab1b:	fld    QWORD PTR [ecx-0x13]
  40ab1e:	or     BYTE PTR [ebp-0x31],0xf6
  40ab22:	jne    0x40ab93
  40ab24:	dec    ecx
  40ab25:	in     eax,dx
  40ab26:	enter  0xb10,0x9b
  40ab2a:	cs mov ebx,0xd6717807
  40ab30:	loopne 0x40ab3d
  40ab32:	or     DWORD PTR [edi+0x73],0x70
  40ab36:	cmp    DWORD PTR [edx+0x5d],0x61cb7626
  40ab3d:	xlat   BYTE PTR ds:[ebx]
  40ab3e:	pop    ebx
  40ab3f:	mov    esp,0xa8b5f970
  40ab44:	cdq    
  40ab45:	out    0x1f,al
  40ab47:	push   ecx
  40ab48:	and    al,0x17
  40ab4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4b:	not    DWORD PTR [edx]
  40ab4d:	push   ds
  40ab4e:	lahf   
  40ab4f:	adc    al,bh
  40ab51:	lods   eax,DWORD PTR cs:[esi]
  40ab53:	cmp    al,0x10
  40ab55:	pop    esp
  40ab56:	mov    dh,0x42
  40ab58:	shl    DWORD PTR [esp+eax*8],1
  40ab5b:	pop    esi
  40ab5c:	mov    eax,ds:0x3f75c9c7
  40ab61:	inc    eax
  40ab62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab63:	push   ebp
  40ab64:	push   esi
  40ab65:	cmp    cl,bh
  40ab67:	pop    ebx
  40ab68:	push   es
  40ab69:	sbb    cl,BYTE PTR [esi]
  40ab6b:	jmp    0xfbb6d6ad
  40ab70:	sahf   
  40ab71:	or     BYTE PTR [edx],ch
  40ab73:	call   0xb250:0xfffa23fc
  40ab7a:	mov    bh,0x77
  40ab7c:	call   0xf34521bc
  40ab81:	adc    esp,ebx
  40ab83:	fucomi st,st(7)
  40ab85:	aam    0xa9
  40ab87:	daa    
  40ab88:	jb     0x40ab86
  40ab8a:	pop    eax
  40ab8b:	ror    BYTE PTR ds:0xdadb6a98,cl
  40ab91:	adc    esi,eax
  40ab93:	and    BYTE PTR [edx-0x6b],ch
  40ab96:	enter  0x8370,0xc6
  40ab9a:	lock vunpcklpd ymm1,ymm5,YMMWORD PTR [edi+0x1]
  40aba0:	sti    
  40aba1:	std    
  40aba2:	add    eax,0xb58696ec
  40aba7:	mov    dl,0xf1
  40aba9:	out    dx,eax
  40abaa:	int    0xee
  40abac:	rol    DWORD PTR [esp+edx*8-0x5],0xaf
  40abb1:	cmc    
  40abb2:	out    dx,al
  40abb3:	sahf   
  40abb4:	push   ebp
  40abb5:	std    
  40abb6:	add    BYTE PTR [eax+0x34],dl
  40abb9:	das    
  40abba:	and    edi,DWORD PTR [edi-0x1e]
  40abbd:	xor    DWORD PTR [edx],edx
  40abbf:	jns    0x40ab6e
  40abc1:	(bad)  
  40abc2:	sti    
  40abc3:	jnp    0x40ac32
  40abc5:	push   esp
  40abc6:	fwait
  40abc7:	mov    cl,0x24
  40abc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abca:	aam    0x7b
  40abcc:	or     ebx,ebx
  40abce:	push   esp
  40abcf:	add    BYTE PTR [eax+0xdb08c25],dh
  40abd5:	cmp    ecx,edi
  40abd7:	loope  0x40ac12
  40abd9:	and    BYTE PTR [edx+eiz*1],bh
  40abdc:	mov    al,0x80
  40abde:	pop    ebx
  40abdf:	shr    BYTE PTR [ecx-0x1127e9c7],cl
  40abe5:	(bad)  
  40abe7:	sub    al,BYTE PTR [edi+0x616096df]
  40abed:	je     0x40ac48
  40abef:	mov    edi,0x1f4594d5
  40abf4:	push   edi
  40abf5:	cld    
  40abf6:	sbb    al,0x90
  40abf8:	ja     0x40ac15
  40abfa:	jecxz  0x40ac27
  40abfc:	mov    al,ds:0x7007b670
  40ac01:	mov    edx,ecx
  40ac03:	adc    BYTE PTR [eax+0x281a4fe],bh
  40ac09:	mov    dl,0xd9
  40ac0b:	push   cs
  40ac0c:	pushf  
  40ac0d:	arpl   di,dx
  40ac0f:	rol    DWORD PTR [esi-0x71cebac5],0x7c
  40ac16:	lods   al,BYTE PTR ds:[esi]
  40ac17:	sub    eax,0x26755684
  40ac1c:	inc    esi
  40ac1d:	(bad)  [ebx-0x321af794]
  40ac23:	and    DWORD PTR [esi-0x26],esp
  40ac26:	sub    ecx,DWORD PTR [ebx]
  40ac28:	popf   
  40ac29:	adc    DWORD PTR [edx+0x71],eax
  40ac2c:	das    
  40ac2d:	adc    ebx,DWORD PTR [esi]
  40ac2f:	add    DWORD PTR [ecx],eax
  40ac31:	int3   
  40ac32:	rcl    BYTE PTR [edx],cl
  40ac34:	add    cl,BYTE PTR [edi-0x6c]
  40ac37:	xor    BYTE PTR [edi+ecx*8],cl
  40ac3a:	cmp    dh,BYTE PTR [esi+esi*4-0x43]
  40ac3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac40:	adc    edi,DWORD PTR [ecx]
  40ac42:	jmp    0x40abeb
  40ac44:	and    dl,BYTE PTR [edi+eax*8+0x2389b12d]
  40ac4b:	ds test eax,0x743a3720
  40ac51:	mov    eax,edi
  40ac53:	icebp  
  40ac54:	jo     0x40abe4
  40ac56:	xor    esi,DWORD PTR [edi]
  40ac58:	neg    DWORD PTR [eax-0xf]
  40ac5b:	jp     0x40abe8
  40ac5d:	outs   dx,DWORD PTR ds:[esi]
  40ac5e:	xchg   esi,eax
  40ac5f:	mov    dl,0x34
  40ac61:	frstor [eax+0x56310d02]
  40ac67:	clc    
  40ac68:	test   BYTE PTR [ecx+0x31],dh
  40ac6b:	rcl    edi,1
  40ac6d:	mov    BYTE PTR [eax+0x212e3b4c],bl
  40ac73:	lds    edx,FWORD PTR [ecx-0xe3811c2]
  40ac79:	adc    BYTE PTR [esi],bh
  40ac7b:	lds    eax,FWORD PTR [eax+0x43]
  40ac7e:	xchg   esp,eax
  40ac7f:	fst    DWORD PTR [ebx+0x1e03b321]
  40ac85:	push   ecx
  40ac86:	mov    dh,0xf3
  40ac88:	adc    DWORD PTR [ebx-0x416db2bb],ecx
  40ac8e:	jge    0x40accb
  40ac90:	jb     0x40acd2
  40ac92:	dec    eax
  40ac93:	sbb    dl,BYTE PTR [edi]
  40ac95:	stos   DWORD PTR es:[edi],eax
  40ac96:	int    0xe7
  40ac98:	mov    edx,0xde8889d0
  40ac9d:	inc    al
  40ac9f:	and    bh,ch
  40aca1:	adc    DWORD PTR [esp+ecx*8-0x44f7d3a1],esp
  40aca8:	or     ch,BYTE PTR [edi+esi*4]
  40acab:	test   al,bh
  40acad:	fstp   TBYTE PTR [ecx+0x63]
  40acb0:	xchg   esi,eax
  40acb1:	mov    ds:0x4ea1b2,eax
  40acb6:	call   0xb1d28223
  40acbb:	call   0x9dee:0x720fc394
  40acc2:	jmp    0x986171ef
  40acc7:	mov    ebp,0xa87ecc1e
  40accc:	mov    ds:0x9534a2de,eax
  40acd1:	inc    eax
  40acd2:	add    eax,0x607c9374
  40acd7:	mov    ecx,0x4200852e
  40acdc:	add    DWORD PTR [esi-0x77],esp
  40acdf:	bound  esi,QWORD PTR [ebx-0x55]
  40ace2:	ficom  DWORD PTR [ebx-0x47]
  40ace5:	push   DWORD PTR [ecx]
  40ace7:	and    eax,0xeccfb0f
  40acec:	popa   
  40aced:	pop    ds
  40acee:	cli    
  40acef:	add    BYTE PTR [esp+eax*4+0x2c4b5a12],al
  40acf6:	mov    BYTE PTR [ecx+0x13],dl
  40acf9:	pushf  
  40acfa:	cmp    esp,edx
  40acfc:	out    0xf3,eax
  40acfe:	gs push ebx
  40ad00:	mov    esp,0x8fbb1080
  40ad05:	(bad)  
  40ad06:	shl    DWORD PTR [edi-0x4cefff25],cl
  40ad0c:	mov    cl,0xca
  40ad0e:	loopne 0x40ad8d
  40ad10:	inc    DWORD PTR [edx+0x6c0ec69a]
  40ad16:	sbb    cl,BYTE PTR [edi+0x67]
  40ad19:	fs nop
  40ad1b:	out    dx,al
  40ad1c:	or     eax,0x70a3826d
  40ad21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad22:	cmp    al,0x18
  40ad24:	stc    
  40ad25:	fst    st(3)
  40ad27:	scas   eax,DWORD PTR es:[edi]
  40ad28:	sub    BYTE PTR [ecx-0x3d],dh
  40ad2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad2c:	not    ah
  40ad2e:	inc    edi
  40ad2f:	mov    ch,bl
  40ad31:	outs   dx,DWORD PTR ds:[esi]
  40ad32:	scas   al,BYTE PTR es:[edi]
  40ad33:	mov    esi,0x745f9697
  40ad38:	push   esi
  40ad39:	sbb    cl,BYTE PTR [esi-0x77]
  40ad3c:	pop    edx
  40ad3d:	and    al,0xed
  40ad3f:	(bad)  
  40ad40:	sbb    al,BYTE PTR [eax+0x31]
  40ad43:	sub    eax,0xc9166fd7
  40ad48:	retf   
  40ad49:	or     eax,0x4d338536
  40ad4e:	ss (bad) 
  40ad50:	aas    
  40ad51:	mov    edx,0xef0b4ac1
  40ad56:	(bad)  
  40ad57:	in     eax,0x6
  40ad59:	xchg   ebx,eax
  40ad5a:	stos   DWORD PTR es:[edi],eax
  40ad5b:	mov    bh,0x38
  40ad5d:	jno    0x40adc2
  40ad5f:	sahf   
  40ad60:	push   ss
  40ad61:	js     0x40ad5d
  40ad63:	out    0x49,eax
  40ad65:	stos   BYTE PTR es:[edi],al
  40ad66:	stos   DWORD PTR es:[edi],eax
  40ad67:	loope  0x40ad72
  40ad69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad6a:	data16 mov ds,WORD PTR [ebp+0x14894d3d]
  40ad71:	fwait
  40ad72:	add    BYTE PTR [edx-0x31],bl
  40ad75:	pop    edx
  40ad76:	daa    
  40ad77:	mov    eax,0xe75e52bb
  40ad7c:	mov    bh,0xb0
  40ad7e:	cmp    esp,DWORD PTR [esi]
  40ad80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad81:	push   0xffffffc5
  40ad83:	je     0x40adf9
  40ad85:	test   BYTE PTR [ebp+0x4c],ah
  40ad88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad89:	mov    al,ds:0x8357b446
  40ad8e:	mov    al,0x65
  40ad90:	outs   dx,DWORD PTR ds:[esi]
  40ad91:	pusha  
  40ad92:	(bad)  
  40ad93:	fcmovnb st,st(5)
  40ad95:	les    esp,FWORD PTR [esi-0x71dc00be]
  40ad9b:	or     ebx,ebx
  40ad9d:	int    0xf1
  40ad9f:	ins    DWORD PTR es:[edi],dx
  40ada0:	cmp    al,0x5
  40ada2:	repz xchg edi,eax
  40ada4:	push   esp
  40ada5:	ja     0x40ad92
  40ada7:	repnz gs lock in al,dx
  40adab:	scas   al,BYTE PTR es:[edi]
  40adac:	out    dx,ax
  40adae:	stos   DWORD PTR es:[edi],eax
  40adaf:	mov    bh,0xad
  40adb1:	sub    al,0x3f
  40adb3:	clc    
  40adb4:	ror    cl,1
  40adb6:	pop    edx
  40adb7:	mov    BYTE PTR [ecx-0x1d],al
  40adba:	xor    ebp,DWORD PTR [ecx-0x52]
  40adbd:	hlt    
  40adbe:	mov    bl,0xc7
  40adc0:	push   esi
  40adc1:	dec    esp
  40adc2:	mov    ah,dh
  40adc4:	and    DWORD PTR [esi-0x1d],0xc580a43b
  40adcb:	mov    bh,0x95
  40adcd:	js     0x40ae45
  40adcf:	imul   ebx,DWORD PTR ds:0x2280725b,0x50
  40add6:	stos   DWORD PTR es:[edi],eax
  40add7:	and    al,0x98
  40add9:	loop   0x40ad5d
  40addb:	mov    eax,ds:0xe2e4dca2
  40ade0:	adc    DWORD PTR [esi+0x79],edx
  40ade3:	push   esi
  40ade4:	ja     0x40ae5e
  40ade6:	dec    edi
  40ade7:	ret    0x7ee3
  40adea:	jne    0x40ae63
  40adec:	loop   0x40ae3b
  40adee:	(bad)  
  40adf0:	jmp    0x9c764bcb
  40adf5:	adc    cl,ch
  40adf7:	push   ds
  40adf8:	jno    0x40aded
  40adfa:	mov    esi,0xce2a9330
  40adff:	sub    al,BYTE PTR [ebp-0x700c0459]
  40ae05:	in     eax,dx
  40ae06:	inc    edx
  40ae07:	jnp    0x40add6
  40ae09:	inc    ebp
  40ae0a:	or     eax,0x1461ace
  40ae0f:	aam    0xec
  40ae11:	daa    
  40ae12:	repnz pop ds
  40ae14:	add    eax,0x9d73fdda
  40ae19:	(bad)  [eax]
  40ae1b:	mov    ch,0xa5
  40ae1d:	adc    cl,BYTE PTR [eax]
  40ae1f:	bnd jge 0x40adc0
  40ae22:	push   0x1
  40ae24:	sbb    bl,bl
  40ae26:	shl    DWORD PTR [ebx],1
  40ae28:	mov    WORD PTR [eax],?
  40ae2a:	push   es
  40ae2b:	icebp  
  40ae2c:	in     eax,dx
  40ae2d:	xchg   ebx,eax
  40ae2e:	in     al,0x18
  40ae30:	sub    ah,cl
  40ae32:	mov    DWORD PTR [ecx+ebp*1+0x1c],esi
  40ae36:	jmp    0x40ae07
  40ae38:	shr    DWORD PTR ss:[esi],0xad
  40ae3c:	mov    ss,WORD PTR [ebx]
  40ae3e:	push   ecx
  40ae3f:	lea    ebp,[eax+0x1e]
  40ae42:	adc    cl,0x6f
  40ae45:	mov    eax,0xda8189cc
  40ae4a:	dec    eax
  40ae4b:	dec    eax
  40ae4c:	call   0x9bae:0xc2443d10
  40ae53:	xchg   ecx,eax
  40ae54:	mov    ds:0x743cb31a,eax
  40ae59:	mov    esp,0xd008abfb
  40ae5e:	(bad)  [edx]
  40ae60:	xchg   ecx,eax
  40ae61:	mov    ah,0x27
  40ae63:	xchg   esi,eax
  40ae64:	or     ah,BYTE PTR [edx-0x520195a2]
  40ae6a:	cli    
  40ae6b:	add    eax,0xe651c11
  40ae70:	adc    edx,eax
  40ae72:	into   
  40ae73:	add    DWORD PTR [esi-0xa],edx
  40ae76:	push   esp
  40ae77:	inc    ecx
  40ae78:	add    esi,DWORD PTR [eax-0x74]
  40ae7b:	sbb    al,0x9b
  40ae7d:	cmp    edi,esp
  40ae7f:	lock or al,0x3f
  40ae82:	xchg   ecx,eax
  40ae83:	xchg   edi,eax
  40ae84:	sub    eax,0x29d00ded
  40ae89:	xchg   edi,eax
  40ae8a:	xor    dh,0x44
  40ae8d:	scas   eax,DWORD PTR es:[edi]
  40ae8e:	sub    eax,0x248723df
  40ae93:	lods   eax,DWORD PTR ds:[esi]
  40ae94:	jbe    0x40ae42
  40ae96:	call   0x680ba1ae
  40ae9b:	arpl   WORD PTR [eax-0x62d4378c],dx
  40aea1:	jae    0x40aeff
  40aea3:	mov    edi,0x36b38a02
  40aea8:	push   es
  40aea9:	(bad)  
  40aeaa:	cs in  al,0x4a
  40aead:	pop    eax
  40aeae:	cmc    
  40aeaf:	sbb    ebx,ebx
  40aeb1:	mov    BYTE PTR [ebp-0x2b],dh
  40aeb4:	(bad)  
  40aeb5:	fmulp  st(3),st
  40aeb7:	popf   
  40aeb8:	je     0x40aebb
  40aeba:	pop    eax
  40aebb:	mov    ah,dh
  40aebd:	je     0x40aed7
  40aebf:	pop    esi
  40aec0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40aec2:	das    
  40aec3:	popa   
  40aec4:	lea    edi,[eax]
  40aec6:	cli    
  40aec7:	dec    eax
  40aec8:	arpl   WORD PTR ds:0x5757845e,cx
  40aece:	add    eax,0x82d8f9c8
  40aed3:	pusha  
  40aed4:	lods   eax,DWORD PTR ds:[esi]
  40aed5:	and    BYTE PTR [ecx],0xa
  40aed8:	xor    eax,0xa8a42603
  40aedd:	ins    BYTE PTR es:[edi],dx
  40aede:	push   esp
  40aedf:	arpl   WORD PTR [edx+0x113123c4],cx
  40aee5:	sub    al,BYTE PTR [eax+0x29d4392a]
  40aeeb:	in     eax,0xb8
  40aeed:	(bad)  
  40aeee:	cld    
  40aeef:	cmc    
  40aef0:	and    BYTE PTR [ebx+0x7301d17b],ch
  40aef6:	scas   al,BYTE PTR es:[edi]
  40aef7:	add    dl,dh
  40aef9:	push   eax
  40aefa:	push   0xb5d1d809
  40aeff:	mov    dh,0x16
  40af01:	push   ecx
  40af02:	mov    bl,0xce
  40af04:	es pusha 
  40af06:	inc    ebx
  40af07:	mov    dl,0x3e
  40af09:	imul   edx,DWORD PTR [edx],0xca3784d2
  40af0f:	mov    eax,ds:0xee121c44
  40af14:	imul   ecx,DWORD PTR [ecx-0x26],0x66
  40af18:	popf   
  40af19:	(bad)  
  40af1a:	dec    esp
  40af1b:	retf   
  40af1c:	bnd jle 0x40af12
  40af1f:	in     al,dx
  40af20:	mov    al,ds:0xe2efbfd7
  40af25:	push   es
  40af26:	pop    ebp
  40af27:	cdq    
  40af28:	mov    ah,dl
  40af2a:	pusha  
  40af2b:	inc    esi
  40af2c:	fild   WORD PTR [ecx+0x2]
  40af2f:	jns    0x40af79
  40af31:	xchg   edx,eax
  40af32:	mov    ?,WORD PTR [ecx-0x7c7e231a]
  40af38:	ret    0x5d9e
  40af3b:	lock dec edi
  40af3d:	inc    esp
  40af3e:	int3   
  40af3f:	dec    ecx
  40af40:	jl     0x40af9d
  40af42:	mov    al,ds:0x3e7fbdd6
  40af47:	push   esp
  40af48:	ds push ecx
  40af4a:	cli    
  40af4b:	sub    eax,0x75e78c6
  40af50:	xchg   esp,eax
  40af51:	add    ch,dl
  40af53:	mov    bh,0x79
  40af55:	rol    DWORD PTR [edi+0x66],0x2d
  40af59:	inc    ebp
  40af5a:	mov    bl,BYTE PTR [ecx-0x75]
  40af5d:	mov    bl,bh
  40af5f:	or     dh,ch
  40af61:	add    BYTE PTR ds:0x43cfe52,al
  40af67:	leave  
  40af68:	jmp    FWORD PTR [edi]
  40af6a:	mov    ds:0x6f4cabe7,eax
  40af6f:	xor    DWORD PTR [edi-0x24],0xfffffff7
  40af73:	adc    bh,al
  40af75:	aam    0xe
  40af77:	jl     0x40afb5
  40af79:	int3   
  40af7a:	cmc    
  40af7b:	dec    ebx
  40af7c:	mov    ebx,0x86eb969
  40af81:	jns    0x40af95
  40af83:	xor    eax,0x5fb2c3e0
  40af88:	dec    ebp
  40af89:	mov    bh,0x87
  40af8b:	cwde   
  40af8c:	add    eax,DWORD PTR fs:[edi+0x4]
  40af90:	bound  ecx,QWORD PTR [esi+eiz*1-0x400fc4d0]
  40af97:	mov    ds:0xd021b16a,al
  40af9c:	cdq    
  40af9d:	test   ecx,esi
  40af9f:	cmp    al,0xe6
  40afa1:	out    0xc5,al
  40afa3:	sbb    al,BYTE PTR [edx-0x1d]
  40afa6:	mov    eax,0x4f1c3925
  40afab:	inc    esi
  40afac:	sbb    al,0xaf
  40afae:	mov    edi,DWORD PTR [ebp-0x7616ef9]
  40afb4:	mov    eax,0x6b3fb883
  40afb9:	xchg   ebx,eax
  40afba:	and    BYTE PTR [ebx+0xcde8381],ch
  40afc0:	(bad)  
  40afc1:	push   edx
  40afc2:	repnz popa 
  40afc4:	fcom   DWORD PTR [ebp+0x34190ac2]
  40afca:	pop    ecx
  40afcb:	push   esp
  40afcc:	xchg   BYTE PTR [edx+edx*8+0x281a0c60],ah
  40afd3:	jge    0x40b004
  40afd5:	xor    DWORD PTR [edi-0x68],edi
  40afd8:	int    0x3a
  40afda:	xchg   edi,eax
  40afdb:	inc    ebx
  40afdc:	or     ebx,DWORD PTR [ebx-0x727e52f0]
  40afe2:	cmovl  esi,DWORD PTR [edx-0x4a]
  40afe6:	xchg   edx,eax
  40afe7:	xchg   esp,eax
  40afe8:	mov    dl,0x8
  40afea:	ins    DWORD PTR es:[edi],dx
  40afeb:	(bad)  
  40afec:	cmp    BYTE PTR [ebx+0x20],ch
  40afef:	jae    0x40afb7
  40aff1:	les    esp,FWORD PTR gs:[eax+0x1b4fce61]
  40aff8:	jb     0x40b032
  40affa:	fcom   QWORD PTR [edi-0x2af6910f]
  40b000:	ss xchg ebx,eax
  40b002:	inc    edx
  40b003:	in     al,0xbb
  40b005:	jle    0x40b00e
  40b007:	rcl    edx,0x37
  40b00a:	dec    ebp
  40b00b:	punpcklbw mm0,mm2
  40b00e:	bnd jge 0x40b054
  40b011:	lock outs dx,DWORD PTR ds:[esi]
  40b013:	adc    al,0xa1
  40b015:	popa   
  40b016:	or     ah,BYTE PTR [edi]
  40b018:	out    0xba,al
  40b01a:	push   edi
  40b01b:	enter  0xb721,0x97
  40b01f:	cmp    cl,BYTE PTR [esi-0x3d712b69]
  40b025:	(bad)  
  40b026:	push   ds
  40b027:	sbb    BYTE PTR [ecx+0x291076f2],0xb
  40b02e:	fisttp QWORD PTR [edx+edx*8-0x5c]
  40b032:	scas   eax,DWORD PTR es:[edi]
  40b033:	lds    esi,FWORD PTR [ecx]
  40b035:	mov    bh,0x97
  40b037:	adc    ebp,DWORD PTR ds:0xe96284e5
  40b03d:	pop    edi
  40b03e:	jbe    0x40afcd
  40b040:	and    DWORD PTR [ebx-0x13b0fc2],ecx
  40b046:	enter  0x84e4,0xa6
  40b04a:	ss sub eax,0xa896535f
  40b050:	pop    esi
  40b051:	ins    BYTE PTR es:[edi],dx
  40b052:	dec    edi
  40b053:	popa   
  40b054:	push   es
  40b055:	dec    esp
  40b056:	push   cs
  40b057:	cli    
  40b058:	pop    ebx
  40b059:	std    
  40b05a:	xchg   esi,eax
  40b05b:	mov    dh,0x48
  40b05d:	(bad)  
  40b05e:	neg    BYTE PTR [ebx+edi*2]
  40b061:	inc    ebx
  40b062:	ror    BYTE PTR [esi-0x57],1
  40b065:	or     eax,0x708632a
  40b06a:	inc    ebx
  40b06b:	out    dx,eax
  40b06c:	dec    esp
  40b06d:	imul   edx,DWORD PTR [esi+0x3e966fd7],0x24e8af68
  40b077:	mov    ebx,esi
  40b079:	jns    0x40b087
  40b07b:	push   es
  40b07c:	pop    esp
  40b07d:	cwde   
  40b07e:	pop    ds
  40b07f:	inc    ebp
  40b080:	mov    dh,0x5f
  40b082:	lea    ecx,[eax]
  40b084:	stc    
  40b085:	dec    edi
  40b086:	popa   
  40b087:	jp     0x40b0a1
  40b089:	push   edx
  40b08a:	sbb    BYTE PTR [ebp-0x5d],dl
  40b08d:	sbb    al,0x2c
  40b08f:	loop   0x40b079
  40b091:	jecxz  0x40b07e
  40b093:	dec    edx
  40b094:	in     al,dx
  40b095:	mov    bh,0xf3
  40b097:	push   esi
  40b098:	out    dx,al
  40b099:	imul   esp,esi,0xf
  40b09c:	(bad)  [edx+0x72]
  40b09f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a0:	xchg   esi,eax
  40b0a1:	xor    cl,BYTE PTR [ebx+0x88c1871]
  40b0a7:	adc    DWORD PTR [edi],esp
  40b0a9:	push   esp
  40b0aa:	clc    
  40b0ab:	mov    edx,0x7d7621e
  40b0b0:	into   
  40b0b1:	fadd   DWORD PTR [ecx-0x4ba6e1c4]
  40b0b7:	lods   al,BYTE PTR ds:[esi]
  40b0b8:	dec    ebp
  40b0b9:	push   esp
  40b0ba:	jle    0x40b0ea
  40b0bc:	xor    eax,DWORD PTR [ebx]
  40b0be:	or     BYTE PTR [esi],bh
  40b0c0:	scas   eax,DWORD PTR es:[edi]
  40b0c1:	lods   al,BYTE PTR ds:[esi]
  40b0c2:	push   ds
  40b0c3:	daa    
  40b0c4:	pop    esi
  40b0c5:	mov    cl,0x84
  40b0c7:	daa    
  40b0c8:	(bad)
  40b0cb:	ds std 
  40b0cd:	cmp    edx,0xb46ddc63
  40b0d3:	mov    WORD PTR [ecx-0x5],es
  40b0d6:	xlat   BYTE PTR ds:[ebx]
  40b0d7:	xchg   esi,eax
  40b0d8:	and    DWORD PTR [ecx+0x57],ebp
  40b0db:	xchg   BYTE PTR [edi+0x7d2547b4],ah
  40b0e1:	mov    cl,0x16
  40b0e3:	pop    ecx
  40b0e4:	jl     0x40b121
  40b0e6:	mov    eax,ds:0xec889c3
  40b0eb:	jle    0x40b0e5
  40b0ed:	aaa    
  40b0ee:	inc    edi
  40b0ef:	jp     0x40b0cd
  40b0f1:	cmp    edx,ecx
  40b0f3:	aad    0x30
  40b0f5:	les    ebx,FWORD PTR [eax+ebp*1-0x61]
  40b0f9:	movntq QWORD PTR [ecx-0x1e72f4c5],mm0
  40b100:	aam    0x15
  40b102:	daa    
  40b103:	adc    edi,DWORD PTR [esi+0x154437d2]
  40b109:	sbb    BYTE PTR [ebx+0x3148d85c],bl
  40b10f:	sub    esp,ebx
  40b111:	adc    eax,0x3e9669c
  40b116:	and    ch,BYTE PTR [esi-0xa]
  40b119:	popf   
  40b11a:	cmp    cl,al
  40b11c:	pop    ds
  40b11d:	xor    BYTE PTR [ebp-0x64],bh
  40b120:	mov    dh,dh
  40b122:	sub    bh,al
  40b124:	sti    
  40b125:	into   
  40b126:	es pusha 
  40b128:	cmp    ecx,DWORD PTR [edi]
  40b12a:	or     ch,ah
  40b12c:	out    0x7f,al
  40b12e:	mov    ecx,edx
  40b130:	fldz   
  40b132:	pusha  
  40b133:	cmp    eax,0x85773f1e
  40b138:	or     BYTE PTR [edi+0x25],ch
  40b13b:	mov    esp,0x86ed9c95
  40b140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b141:	mov    al,ds:0xde94ed48
  40b146:	jbe    0x40b1b2
  40b148:	xor    al,0x37
  40b14a:	popf   
  40b14b:	jmp    0x40b16f
  40b14d:	sti    
  40b14e:	jae    0x40b161
  40b150:	pusha  
  40b151:	retf   0x3cee
  40b154:	sahf   
  40b155:	(bad)  
  40b156:	(bad)  
  40b157:	add    BYTE PTR [esi+0x20],0xde
  40b15b:	enter  0x69fc,0x43
  40b15f:	add    eax,0xea9c9ca5
  40b164:	and    al,0xdd
  40b166:	dec    esp
  40b167:	jno    0x40b1c0
  40b169:	cmp    esp,eax
  40b16b:	ja     0x40b0fa
  40b16d:	popa   
  40b16e:	(bad)  
  40b16f:	aam    0x77
  40b171:	pop    ebp
  40b172:	call   0xfead:0x3785cb
  40b179:	shr    BYTE PTR [esi-0x24],0x9
  40b17d:	sbb    DWORD PTR [ebx-0x62],esp
  40b180:	and    bh,0xe9
  40b183:	clc    
  40b184:	adc    eax,DWORD PTR [ebx]
  40b186:	mov    edx,0x5d9913bf
  40b18b:	xor    DWORD PTR [edi-0x77],0x99e36798
  40b192:	jmp    0x4408c4de
  40b197:	mov    ebx,0x4da49005
  40b19c:	mov    eax,0x846e67
  40b1a1:	inc    ecx
  40b1a2:	mov    esp,0x5bd22a4d
  40b1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a8:	popf   
  40b1a9:	mov    al,0xfd
  40b1ab:	sahf   
  40b1ac:	dec    edi
  40b1ad:	sub    eax,DWORD PTR [edx+edi*1]
  40b1b0:	in     al,0x51
  40b1b2:	pop    esp
  40b1b3:	ja     0x40b150
  40b1b5:	mov    bl,0xa4
  40b1b7:	adc    al,0x68
  40b1b9:	and    DWORD PTR [ebp+0x36],esp
  40b1bc:	ja     0x40b15f
  40b1be:	xchg   ebp,eax
  40b1bf:	mov    bl,0xdc
  40b1c1:	and    al,0xe3
  40b1c3:	jg     0x40b1bb
  40b1c5:	(bad)
  40b1c8:	scas   al,BYTE PTR es:[edi]
  40b1c9:	fbstp  TBYTE PTR [ebp+esi*8+0x86aa76b]
  40b1d0:	cli    
  40b1d1:	(bad)  
  40b1d2:	dec    ebp
  40b1d3:	into   
  40b1d4:	sub    DWORD PTR [edi],esi
  40b1d6:	test   BYTE PTR [ecx],ah
  40b1d8:	in     al,0xfa
  40b1da:	dec    ebp
  40b1db:	je     0x40b203
  40b1dd:	mov    fs,esp
  40b1df:	lea    ebx,[edi+0x308897b5]
  40b1e5:	push   eax
  40b1e6:	add    DWORD PTR [edx],ecx
  40b1e8:	(bad)  
  40b1e9:	xor    al,0xf4
  40b1eb:	cmp    eax,0xcb86a142
  40b1f0:	fcmovnu st,st(5)
  40b1f2:	sar    BYTE PTR [eax+0x22],1
  40b1f5:	sub    dh,BYTE PTR [eax]
  40b1f7:	mov    dl,0x20
  40b1f9:	sbb    al,0xdd
  40b1fb:	dec    edi
  40b1fc:	fcom   DWORD PTR [ebx-0x740c4b15]
  40b202:	mov    eax,0x9b122188
  40b207:	or     edi,DWORD PTR [ebx-0x7b3bc90d]
  40b20d:	push   eax
  40b20e:	mov    DWORD PTR [eax],ebx
  40b210:	cmc    
  40b211:	popf   
  40b212:	outs   dx,BYTE PTR ds:[esi]
  40b213:	call   0x84f7:0xbc2eda47
  40b21a:	and    BYTE PTR cs:[ebx-0x5e],0xcc
  40b21f:	mov    esi,0x3478c204
  40b224:	test   al,0x5e
  40b226:	add    BYTE PTR [ebx+0x33],0xad
  40b22a:	call   0xcff7:0x1bdb895b
  40b231:	jmp    0x7363:0xd246769b
  40b238:	ret    
  40b239:	mov    bl,0xc8
  40b23b:	mov    dh,0x1a
  40b23d:	xor    bl,BYTE PTR [ecx+0x6aabb8b3]
  40b243:	push   edx
  40b244:	shr    DWORD PTR [eax-0x64],1
  40b247:	mov    BYTE PTR [edx-0x4c],dh
  40b24a:	cmp    al,0x12
  40b24c:	lahf   
  40b24d:	out    0xcd,eax
  40b24f:	jo     0x40b269
  40b251:	(bad)  
  40b252:	mov    ebx,ecx
  40b254:	and    ch,ah
  40b256:	lods   al,BYTE PTR ds:[esi]
  40b257:	push   esi
  40b258:	lods   eax,DWORD PTR ds:[esi]
  40b259:	loope  0x40b237
  40b25b:	cmp    ebp,DWORD PTR [edi-0x2b706b9]
  40b261:	add    BYTE PTR [ebp-0x49],cl
  40b264:	xchg   edi,eax
  40b265:	pop    es
  40b266:	test   DWORD PTR [ebx+esi*8],ebp
  40b269:	pop    ecx
  40b26a:	clc    
  40b26b:	in     al,0x4a
  40b26d:	cmc    
  40b26e:	jl     0x40b28c
  40b270:	mov    gs,esp
  40b272:	dec    esp
  40b273:	dec    eax
  40b274:	fsub   QWORD PTR [ebp-0x634a4c02]
  40b27a:	mov    esp,0xd975e2fb
  40b27f:	ret    
  40b280:	or     bl,ch
  40b282:	jp     0x40b2f9
  40b284:	fs dec edx
  40b286:	loopne 0x40b238
  40b288:	pop    ds
  40b289:	out    0x98,eax
  40b28b:	push   ds
  40b28c:	dec    edx
  40b28d:	fwait
  40b28e:	mov    eax,0x1a1cca73
  40b293:	inc    eax
  40b294:	call   0x93d2:0xdbb1443c
  40b29b:	je     0x40b2da
  40b29d:	inc    ecx
  40b29e:	push   es
  40b29f:	out    0xc9,al
  40b2a1:	ret    
  40b2a2:	pop    edi
  40b2a3:	ja     0x40b2ee
  40b2a5:	jne    0x40b325
  40b2a7:	in     al,dx
  40b2a8:	lds    esi,FWORD PTR [ecx+0x5edbea54]
  40b2ae:	arpl   bp,bx
  40b2b0:	sbb    bh,al
  40b2b2:	das    
  40b2b3:	icebp  
  40b2b4:	test   eax,0x53036ee0
  40b2b9:	mov    ch,0x14
  40b2bb:	leave  
  40b2bc:	aas    
  40b2bd:	sti    
  40b2be:	mov    ds:0x7403e6a3,al
  40b2c3:	pop    ebp
  40b2c4:	mov    edi,0x74677dc4
  40b2c9:	pushf  
  40b2ca:	inc    edx
  40b2cb:	fwait
  40b2cc:	and    edi,DWORD PTR gs:[ebx-0x66]
  40b2d0:	(bad)  
  40b2d1:	nop
  40b2d2:	enter  0x9a95,0x7
  40b2d6:	xor    edi,esi
  40b2d8:	pop    ebp
  40b2d9:	in     al,0xc0
  40b2db:	pop    edx
  40b2dc:	and    eax,0x67b6d48b
  40b2e1:	pop    esi
  40b2e2:	inc    ebp
  40b2e3:	popf   
  40b2e4:	mov    al,0x18
  40b2e6:	sub    dh,BYTE PTR [eax-0x77]
  40b2e9:	jnp    0x40b2ac
  40b2eb:	ja     0x40b279
  40b2ed:	pop    ebp
  40b2ee:	cmp    esi,DWORD PTR [eax+0x6458a227]
  40b2f4:	aaa    
  40b2f5:	jne    0x40b2ec
  40b2f7:	sub    al,BYTE PTR [ecx+0x6237ab03]
  40b2fd:	inc    eax
  40b2fe:	xor    DWORD PTR [ebx+ebp*8+0x4611c9a5],esi
  40b305:	jbe    0x40b337
  40b307:	mov    cl,0x3
  40b309:	adc    BYTE PTR [esi],dh
  40b30b:	add    DWORD PTR [esi-0x30],0x20
  40b30f:	fidivr DWORD PTR [ebp+0x7ab1221c]
  40b315:	cs (bad) 
  40b317:	xor    DWORD PTR [esi],ecx
  40b319:	jl     0x40b2ca
  40b31b:	(bad)  
  40b31c:	sar    BYTE PTR [edx+ebp*1+0x3fb69645],0x8
  40b324:	jb     0x40b2ed
  40b326:	ja     0x40b2e7
  40b328:	mul    BYTE PTR [ecx]
  40b32a:	dec    edi
  40b32b:	xchg   ebp,eax
  40b32c:	mov    esi,DWORD PTR [edx]
  40b32e:	and    eax,0x6844734d
  40b333:	fs es cdq 
  40b336:	stos   BYTE PTR es:[edi],al
  40b337:	popa   
  40b338:	adc    al,ch
  40b33a:	icebp  
  40b33b:	imul   esp,DWORD PTR [edx+0xc0babdc],0x51
  40b342:	add    DWORD PTR [eax],edi
  40b344:	scas   eax,DWORD PTR es:[edi]
  40b345:	mov    eax,ds:0x86aa3026
  40b34a:	inc    edi
  40b34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34c:	inc    ebp
  40b34d:	sar    DWORD PTR [bp+si-0x7e],1
  40b351:	mov    ss,WORD PTR [edx-0x47f4fc5e]
  40b357:	xor    al,0x66
  40b359:	sbb    BYTE PTR [esi+0x11927b1d],dl
  40b35f:	addr16 add al,0xaf
  40b362:	push   cs
  40b363:	aam    0x2b
  40b365:	retf   
  40b366:	cs pop ss
  40b368:	out    dx,al
  40b369:	or     eax,0xb766cb1
  40b36e:	cdq    
  40b36f:	inc    esp
  40b370:	(bad)  
  40b371:	push   eax
  40b372:	dec    esi
  40b373:	pcmpgtw mm5,QWORD PTR [edi-0x51]
  40b377:	xor    eax,0x1164b95
  40b37c:	add    DWORD PTR es:[ecx-0x54],ecx
  40b380:	outs   dx,DWORD PTR ds:[esi]
  40b381:	lahf   
  40b382:	xor    eax,0x904883ed
  40b387:	shr    BYTE PTR [esi],cl
  40b389:	jmp    0x40b403
  40b38b:	or     DWORD PTR [esi+ecx*8+0x98443be],ebx
  40b392:	js     0x40b3c3
  40b394:	xchg   edi,eax
  40b395:	mov    dh,0xfc
  40b397:	sub    al,0x3f
  40b399:	fwait
  40b39a:	(bad)  
  40b39b:	xchg   esi,eax
  40b39c:	cmp    bh,BYTE PTR [eax-0x2d]
  40b39f:	mov    edx,0xb669d3cf
  40b3a4:	xchg   ebx,eax
  40b3a5:	dec    ecx
  40b3a6:	jnp    0x40b3fd
  40b3a8:	pop    es
  40b3a9:	adc    eax,0x86c5edf5
  40b3ae:	dec    bl
  40b3b0:	ins    BYTE PTR es:[edi],dx
  40b3b1:	xchg   esp,eax
  40b3b2:	jmp    0x9054def
  40b3b7:	inc    edx
  40b3b8:	inc    edx
  40b3b9:	int    0x5b
  40b3bb:	add    DWORD PTR [ebp-0x73],ecx
  40b3be:	cmp    ecx,ebx
  40b3c0:	cld    
  40b3c1:	call   0x23fc:0x542e2e94
  40b3c8:	xchg   edi,eax
  40b3c9:	les    esp,FWORD PTR [eax]
  40b3cb:	sbb    ebp,DWORD PTR [esi+0x8]
  40b3ce:	jnp    0x40b364
  40b3d0:	call   0xb6cc:0x60b8a816
  40b3d7:	add    al,0x62
  40b3d9:	sub    eax,0x78804bc5
  40b3de:	in     al,dx
  40b3df:	cmc    
  40b3e0:	ror    al,1
  40b3e2:	lea    esi,[eax+esi*1+0x177467e]
  40b3e9:	dec    eax
  40b3ea:	fisub  WORD PTR [ebx+0x35]
  40b3ed:	ficom  WORD PTR [edi+0x3ee6204b]
  40b3f3:	sbb    DWORD PTR [esi],edi
  40b3f5:	addr16 mov esi,0xae7ba837
  40b3fb:	pop    eax
  40b3fc:	inc    edx
  40b3fe:	cmp    BYTE PTR [edi-0x2202f676],ch
  40b404:	popf   
  40b405:	iret   
  40b406:	mov    dl,0xe6
  40b408:	jle    0x40b416
  40b40a:	fist   WORD PTR [edx]
  40b40c:	loope  0x40b3b6
  40b40e:	add    BYTE PTR [esi-0x6167866],0x20
  40b415:	sbb    BYTE PTR [ecx-0x4f],ah
  40b418:	mov    cl,0xcf
  40b41a:	and    DWORD PTR [ecx-0x64b6399c],0xfffffffa
  40b421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b422:	in     al,0xae
  40b424:	xor    DWORD PTR [ebx-0x2362badf],0xffffff84
  40b42b:	ret    
  40b42c:	daa    
  40b42d:	mov    ds:0xe603ef60,eax
  40b432:	sahf   
  40b433:	js     0x40b44e
  40b435:	aas    
  40b436:	mov    ecx,DWORD PTR [edi+ebp*8+0x7d7124b7]
  40b43d:	dec    esi
  40b43e:	xor    DWORD PTR [esi-0xc],ebp
  40b441:	pop    edi
  40b442:	mov    ebx,ebx
  40b444:	dec    edx
  40b445:	pop    eax
  40b446:	add    eax,0x78a2cb7f
  40b44b:	or     edi,DWORD PTR [edi-0x31]
  40b44e:	xor    DWORD PTR [ebx+0x79fc63a2],0xf03adf97
  40b458:	aas    
  40b459:	ja     0x40b3f4
  40b45b:	jp     0x40b4d9
  40b45d:	ins    BYTE PTR es:[edi],dx
  40b45e:	dec    edi
  40b45f:	sar    BYTE PTR [esp+edx*4],1
  40b462:	inc    eax
  40b463:	mov    cl,0x40
  40b465:	inc    esp
  40b466:	popa   
  40b467:	push   eax
  40b468:	mov    edx,0x7a28ecc8
  40b46d:	icebp  
  40b46e:	mov    al,0xb5
  40b470:	inc    edi
  40b471:	int3   
  40b472:	call   0x745661fd
  40b477:	mov    ds:0x5b171f1b,eax
  40b47c:	cmp    DWORD PTR [esi+0x7a],ecx
  40b47f:	sub    dl,BYTE PTR [ecx+0x20]
  40b482:	dec    ebp
  40b483:	cld    
  40b484:	and    BYTE PTR [ebx*8+0x2bd05ec5],0xa3
  40b48c:	xchg   ebp,eax
  40b48d:	in     eax,0x90
  40b48f:	imul   edi,DWORD PTR [edx+eiz*8],0xb9f3ae20
  40b496:	sub    al,BYTE PTR [ecx+ebx*4-0x3c]
  40b49a:	ds mov bh,0x29
  40b49d:	push   ebp
  40b49e:	ficomp DWORD PTR [edi]
  40b4a0:	xlat   BYTE PTR ds:[ebx]
  40b4a1:	leave  
  40b4a2:	es cmc 
  40b4a4:	ds mov esi,0xee06637d
  40b4aa:	mov    esi,0x84a4afa9
  40b4af:	ret    
  40b4b0:	sar    esp,0x83
  40b4b3:	inc    ebp
  40b4b4:	jmp    0xba1f:0x3e77a92
  40b4bb:	in     al,dx
  40b4bc:	jle    0x40b4c1
  40b4be:	leave  
  40b4bf:	mov    edx,0xfb56185a
  40b4c4:	fidivr WORD PTR [ecx+0x1b]
  40b4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4c8:	inc    esi
  40b4c9:	mov    al,0x66
  40b4cb:	inc    esp
  40b4cc:	ja     0x40b484
  40b4ce:	mov    esi,0xc47e24a4
  40b4d3:	or     edi,DWORD PTR [ecx+0x1206b2]
  40b4d9:	int3   
  40b4da:	cmp    BYTE PTR ds:0x1a6e93c0,ch
  40b4e0:	test   eax,0xd46b71f
  40b4e5:	jns    0x40b4ea
  40b4e7:	xchg   ecx,eax
  40b4e8:	mov    eax,0xd62c1b9d
  40b4ed:	hlt    
  40b4ee:	and    BYTE PTR [edx],ch
  40b4f0:	mov    dh,0xf
  40b4f2:	mov    cs,ebx
  40b4f4:	jo     0x40b50d
  40b4f6:	cs sub esi,esp
  40b4f9:	ja     0x40b514
  40b4fb:	aaa    
  40b4fc:	imul   eax,esi,0x16
  40b4ff:	stc    
  40b500:	push   esi
  40b501:	lds    esp,FWORD PTR [edi]
  40b503:	mov    esp,0xb3d7f0f0
  40b508:	add    edx,DWORD PTR [eax+0xe568739]
  40b50e:	popf   
  40b50f:	sub    al,0x2
  40b511:	fcom   DWORD PTR [ecx+0xb1a8f84]
  40b517:	in     eax,0x6e
  40b519:	cs scas eax,DWORD PTR es:[edi]
  40b51b:	xor    eax,0xf39df292
  40b520:	addr16 icebp 
  40b522:	mov    WORD PTR [edx+0x23],cs
  40b525:	gs in  al,dx
  40b527:	sbb    al,0xc3
  40b529:	jnp    0x40b5a4
  40b52b:	or     ah,bh
  40b52d:	mov    dl,0xc9
  40b52f:	push   eax
  40b530:	ss out dx,al
  40b532:	gs mov cl,0xf
  40b535:	sub    eax,ebp
  40b537:	inc    ebp
  40b538:	jmp    FWORD PTR [eax-0x2c]
  40b53b:	out    dx,al
  40b53c:	jp     0x40b4e9
  40b53e:	sbb    cl,BYTE PTR [ebx+0x28]
  40b541:	int    0x89
  40b543:	dec    ecx
  40b544:	lds    ebx,FWORD PTR [ebx+esi*1+0x4d]
  40b548:	sub    eax,0x59e2c974
  40b54d:	push   0xffffffd2
  40b54f:	mov    BYTE PTR [eax],bl
  40b551:	adc    ebp,DWORD PTR [esi]
  40b553:	push   ebp
  40b554:	cmc    
  40b555:	sub    DWORD PTR [edi+ebp*2-0x78a2baff],0xd7d8a2a5
  40b560:	push   ebp
  40b561:	das    
  40b562:	xchg   edi,eax
  40b563:	fs dec esi
  40b565:	jp     0x40b586
  40b567:	jmp    0x40b5b8
  40b569:	jno    0x40b5c9
  40b56b:	and    DWORD PTR [ecx+0x58998893],esi
  40b571:	mov    al,ds:0xb716f062
  40b576:	fdiv   DWORD PTR [ebp-0x5a]
  40b579:	mov    ebp,0x3d578dc2
  40b57e:	icebp  
  40b57f:	stc    
  40b580:	js     0x40b515
  40b582:	sub    ebx,esi
  40b584:	push   esp
  40b585:	std    
  40b586:	mov    ah,0x8
  40b588:	hlt    
  40b589:	xlat   BYTE PTR ds:[ebx]
  40b58a:	dec    ebp
  40b58b:	out    dx,al
  40b58c:	(bad)
  40b58f:	lods   eax,DWORD PTR ds:[esi]
  40b590:	inc    esp
  40b591:	jl     0x40b591
  40b593:	sbb    ecx,ebp
  40b595:	popa   
  40b596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b597:	pop    edx
  40b598:	push   edx
  40b599:	mov    dh,0x54
  40b59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b59c:	test   al,0xac
  40b59e:	aad    0xf0
  40b5a0:	xor    al,0xef
  40b5a2:	adc    eax,0xd34b83a1
  40b5a7:	sahf   
  40b5a8:	xor    DWORD PTR [ecx+0x5f80a0f3],0x480a5f4a
  40b5b2:	add    dl,0xf8
  40b5b5:	mov    bh,0x0
  40b5b7:	cmovnp ecx,DWORD PTR [esi]
  40b5ba:	in     al,0xdb
  40b5bc:	(bad)
  40b5c1:	pop    ds
  40b5c2:	hlt    
  40b5c3:	inc    esp
  40b5c4:	sub    eax,eax
  40b5c6:	(bad)  
  40b5c7:	sbb    ah,dh
  40b5c9:	dec    ebx
  40b5ca:	je     0x40b5d7
  40b5cc:	std    
  40b5cd:	mov    ah,0xbf
  40b5cf:	adc    BYTE PTR [esi],ah
  40b5d1:	mov    al,0xa0
  40b5d3:	enter  0xd82f,0x97
  40b5d7:	icebp  
  40b5d8:	test   DWORD PTR [ebx+0x75a3d23d],esp
  40b5de:	xor    eax,eax
  40b5e0:	mov    dl,0x55
  40b5e2:	or     eax,0xa86b2ba0
  40b5e7:	daa    
  40b5e8:	in     al,dx
  40b5e9:	in     eax,dx
  40b5ea:	xchg   ecx,eax
  40b5eb:	xchg   ebp,eax
  40b5ec:	ret    0x731a
  40b5ef:	test   DWORD PTR [ebx+edi*2],0x924496e8
  40b5f6:	and    ebp,DWORD PTR [ebx+0x29b7e934]
  40b5fc:	or     ebx,DWORD PTR ds:0x15921b8e
  40b602:	pop    es
  40b603:	rol    BYTE PTR [ebx],0x8d
  40b606:	cmp    edi,DWORD PTR [ebp-0x439e6b89]
  40b60c:	retf   0xf1d1
  40b60f:	or     BYTE PTR [eax-0x26],dh
  40b612:	mov    WORD PTR [ecx],ss
  40b614:	mov    eax,0xd051ff9f
  40b619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b61a:	adc    ebx,DWORD PTR [eax+0x592bdf5e]
  40b620:	adc    BYTE PTR [ebx+ebx*2+0x565e5338],ah
  40b627:	push   ebx
  40b628:	int    0x6e
  40b62a:	mov    ds:0xb973475a,eax
  40b62f:	outs   dx,DWORD PTR ds:[esi]
  40b630:	mov    al,0x8d
  40b632:	dec    esi
  40b633:	stos   BYTE PTR es:[edi],al
  40b634:	fisubr DWORD PTR [ebp+0x3]
  40b637:	or     bh,BYTE PTR [edi-0x9]
  40b63a:	add    ebx,DWORD PTR [edi-0x114b381f]
  40b640:	fimul  DWORD PTR [ebx-0x3a22e225]
  40b646:	or     DWORD PTR [edx*2+0x666dee9e],ebx
  40b64d:	lds    edx,FWORD PTR [edx+0x4136dee0]
  40b653:	mov    dl,0x16
  40b655:	sub    dl,BYTE PTR [edi]
  40b657:	mov    ch,0x48
  40b659:	jmp    0x40b6aa
  40b65b:	mov    edx,0xe8b2bbe4
  40b660:	or     dh,cl
  40b662:	test   eax,0x5536109f
  40b667:	mov    eax,ebp
  40b669:	pop    es
  40b66a:	shl    DWORD PTR [eax+0x2b9f537b],cl
  40b670:	push   es
  40b671:	xchg   edi,eax
  40b672:	sbb    BYTE PTR [esp+eiz*8-0x1d],ch
  40b676:	dec    esp
  40b677:	sub    al,0x64
  40b679:	and    DWORD PTR [ebx+0x1a],esi
  40b67c:	scas   al,BYTE PTR es:[edi]
  40b67d:	sub    eax,DWORD PTR [ebx+0x77727a64]
  40b683:	sub    BYTE PTR [ecx],dl
  40b685:	mov    ah,0x8c
  40b687:	lahf   
  40b688:	cmp    BYTE PTR [ecx],dl
  40b68a:	sub    edi,DWORD PTR [eax-0x8d833b5]
  40b690:	mov    dh,0x4e
  40b692:	mov    ebx,0x9d954287
  40b697:	inc    edi
  40b698:	mov    ch,BYTE PTR [eax+0x398459ff]
  40b69e:	aas    
  40b69f:	ins    DWORD PTR es:[edi],dx
  40b6a0:	jb     0x40b6bb
  40b6a2:	pop    eax
  40b6a3:	rol    BYTE PTR [eax],cl
  40b6a5:	xchg   esp,ebx
  40b6a7:	jecxz  0x40b699
  40b6a9:	inc    eax
  40b6aa:	lods   eax,DWORD PTR ds:[esi]
  40b6ab:	fisub  DWORD PTR [ebx-0x25596881]
  40b6b1:	retf   0x2475
  40b6b4:	add    DWORD PTR [ebp+0x1a],ecx
  40b6b7:	loop   0x40b71c
  40b6b9:	fdiv   QWORD PTR [edi]
  40b6bb:	or     DWORD PTR [edi-0x61cb413d],esi
  40b6c1:	not    ecx
  40b6c3:	sub    DWORD PTR [ebp+0x3310d397],ebp
  40b6c9:	add    eax,DWORD PTR [ebx]
  40b6cb:	cmc    
  40b6cc:	sub    eax,0xd3b69b80
  40b6d1:	jle    0x40b6fe
  40b6d3:	pop    ds
  40b6d4:	ror    BYTE PTR [ecx+edi*2],cl
  40b6d7:	cmp    bh,BYTE PTR [edi+0x663d3180]
  40b6dd:	sbb    DWORD PTR ds:0xa403d52e,eax
  40b6e3:	inc    edi
  40b6e4:	pusha  
  40b6e5:	aam    0xe9
  40b6e7:	mov    dh,0x23
  40b6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ea:	pushf  
  40b6eb:	out    0x35,eax
  40b6ed:	loope  0x40b69e
  40b6ef:	pop    edi
  40b6f0:	mov    DWORD PTR [esp+eiz*2-0x7a],esp
  40b6f4:	cmp    al,BYTE PTR [eiz*4+0x30ed3896]
  40b6fb:	adc    eax,0xea47d65
  40b700:	push   edx
  40b701:	adc    al,0x1c
  40b703:	or     DWORD PTR [edx],0x5a
  40b706:	call   0xf24c:0xc5138f
  40b70d:	sbb    esi,DWORD PTR [edx]
  40b70f:	test   BYTE PTR [edx+0x536d3df0],al
  40b715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b716:	jno    0x40b739
  40b718:	ja     0x40b701
  40b71a:	mov    bh,0xcc
  40b71c:	mov    edi,0x5105c15e
  40b721:	mov    al,ds:0xd36170e1
  40b726:	xchg   edx,eax
  40b727:	mov    edx,0x82e2c962
  40b72c:	cmp    ch,0x70
  40b72f:	cld    
  40b730:	mov    ch,0x56
  40b732:	shl    DWORD PTR [ebx-0x34],cl
  40b735:	hlt    
  40b736:	and    eax,ebx
  40b738:	push   0x6f
  40b73a:	xchg   ebp,eax
  40b73b:	jecxz  0x40b73f
  40b73d:	mov    ecx,0xe5a58af7
  40b742:	fsincos 
  40b745:	cld    
  40b746:	loope  0x40b775
  40b748:	jmp    FWORD PTR [edi-0x66ba2605]
  40b74e:	call   0x3f3688a1
  40b753:	push   0x571da9c8
  40b758:	repz push ecx
  40b75a:	mul    DWORD PTR [edx+esi*1+0x74175b0b]
  40b761:	add    BYTE PTR [edi],al
  40b763:	hlt    
  40b764:	inc    edi
  40b765:	aas    
  40b766:	pop    ebx
  40b767:	pop    edi
  40b768:	stos   DWORD PTR es:[edi],eax
  40b769:	mov    dh,0x35
  40b76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b76c:	bound  ebx,QWORD PTR [eax-0x55]
  40b76f:	sub    bh,ah
  40b771:	adc    ebp,edx
  40b773:	retf   
  40b774:	faddp  st(5),st
  40b776:	sub    al,BYTE PTR [eax-0x42]
  40b779:	out    0x8d,eax
  40b77b:	add    BYTE PTR [ebx+esi*2],ah
  40b77e:	hlt    
  40b77f:	retf   
  40b780:	loope  0x40b749
  40b782:	mov    edx,0x971d5967
  40b787:	mov    esi,DWORD PTR [edi-0x6d1105f6]
  40b78d:	jl     0x40b72f
  40b78f:	sti    
  40b790:	pop    ss
  40b791:	scas   eax,DWORD PTR es:[edi]
  40b792:	out    dx,al
  40b793:	imul   edi,esi,0x3a
  40b796:	xor    eax,0x333b3830
  40b79b:	add    ebp,DWORD PTR [edi+0x25]
  40b79e:	hlt    
  40b79f:	loopne 0x40b7df
  40b7a1:	cmp    BYTE PTR [ebx+0x16d38c41],dl
  40b7a7:	push   ds
  40b7a8:	loope  0x40b7fc
  40b7aa:	iret   
  40b7ab:	pop    ds
  40b7ac:	lahf   
  40b7ad:	adc    eax,0x1aa16867
  40b7b2:	push   ds
  40b7b3:	in     eax,0x5f
  40b7b5:	mov    dl,0x90
  40b7b7:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b7b9:	sub    eax,0x80af533e
  40b7be:	dec    ebp
  40b7bf:	test   al,0xba
  40b7c1:	adc    DWORD PTR [eax+0x57],ebp
  40b7c4:	push   0x50
  40b7c6:	inc    edi
  40b7c7:	repnz scas al,BYTE PTR es:[edi]
  40b7c9:	das    
  40b7ca:	lds    esp,FWORD PTR [ecx]
  40b7cc:	loopne 0x40b7c9
  40b7ce:	pop    edx
  40b7cf:	sub    DWORD PTR [ecx],edx
  40b7d1:	add    al,0x6f
  40b7d3:	sub    esp,DWORD PTR [esi]
  40b7d5:	and    eax,0xd30010a7
  40b7da:	sahf   
  40b7db:	cmp    ah,BYTE PTR [eax]
  40b7dd:	lods   al,BYTE PTR ds:[esi]
  40b7de:	daa    
  40b7df:	adc    ah,BYTE PTR [ebx-0x10]
  40b7e2:	cmp    al,0xa7
  40b7e4:	jp     0x40b78e
  40b7e6:	in     eax,dx
  40b7e7:	xor    BYTE PTR [edi],0x3e
  40b7ea:	sbb    eax,DWORD PTR [ebx+0x3452cf4d]
  40b7f0:	(bad)  
  40b7f1:	push   ecx
  40b7f2:	popf   
  40b7f3:	xor    BYTE PTR [edi-0x448ab059],0x8d
  40b7fa:	leave  
  40b7fb:	sbb    dl,BYTE PTR [ebx-0x7631f2aa]
  40b801:	pop    ecx
  40b802:	call   0xc18f:0x31712541
  40b809:	bound  ecx,QWORD PTR [esi-0x3b4271a8]
  40b80f:	adc    eax,0x87eec1ec
  40b814:	arpl   WORD PTR [ebx-0x1c],di
  40b817:	fsub   QWORD PTR [ebx-0x66a8d27]
  40b81d:	stc    
  40b81e:	lds    esp,FWORD PTR [ecx+0x743d19fa]
  40b824:	repnz nop
  40b826:	cmp    edi,esp
  40b828:	in     al,dx
  40b829:	push   eax
  40b82a:	aad    0x45
  40b82c:	mov    bl,0x1c
  40b82e:	in     al,0x94
  40b830:	fisttp WORD PTR [ebp+0x3fa7e6c]
  40b837:	inc    esp
  40b838:	out    dx,al
  40b839:	xchg   BYTE PTR [ecx-0x323e3a49],bh
  40b83f:	xor    BYTE PTR [ecx-0x5b8557c2],dl
  40b845:	mov    ds:0xadb0a2e4,al
  40b84a:	mov    ds:0x4ea71569,eax
  40b84f:	pop    esp
  40b850:	test   BYTE PTR [edx+0x3e],cl
  40b853:	mov    ds:0x670e72a9,al
  40b858:	imul   edx,ecx,0xffffffe5
  40b85b:	enter  0x5a6b,0xfc
  40b85f:	dec    eax
  40b860:	lds    ebx,FWORD PTR [esi]
  40b862:	test   DWORD PTR [edi+edi*1-0x48],0xfa9233d5
  40b86a:	mov    DWORD PTR [edx],ebx
  40b86c:	(bad)  
  40b86d:	sbb    ah,ch
  40b86f:	xchg   edi,eax
  40b870:	pop    ebx
  40b871:	(bad)  
  40b872:	cmp    edx,DWORD PTR [edi-0x74b39705]
  40b878:	(bad)  
  40b879:	pop    edx
  40b87a:	mov    ds:0xf3235aae,al
  40b87f:	lahf   
  40b880:	mov    esi,0x9d0df553
  40b885:	or     edx,0x8e743d11
  40b88b:	cmc    
  40b88c:	sub    eax,0x9510bc0c
  40b891:	cwde   
  40b892:	mov    bh,0x5
  40b894:	sub    al,0xfb
  40b896:	push   eax
  40b897:	xchg   ebp,eax
  40b898:	ret    0x5c10
  40b89b:	(bad)  
  40b89c:	hlt    
  40b89d:	(bad)  
  40b89e:	out    dx,al
  40b89f:	(bad)  
  40b8a0:	out    dx,al
  40b8a1:	in     eax,0x15
  40b8a3:	and    esi,DWORD PTR [ebp-0x165a03d7]
  40b8a9:	dec    edx
  40b8aa:	outs   dx,BYTE PTR ds:[esi]
  40b8ab:	pop    esi
  40b8ac:	pusha  
  40b8ad:	scas   al,BYTE PTR es:[edi]
  40b8ae:	mov    eax,ds:0xffcae3d7
  40b8b3:	stc    
  40b8b4:	mov    esp,0x70ff1b9b
  40b8b9:	or     eax,0xf44ce743
  40b8be:	pop    es
  40b8bf:	dec    edi
  40b8c0:	retf   
  40b8c1:	mov    edi,DWORD PTR [edi-0x73]
  40b8c4:	test   BYTE PTR ds:0x3b3caeb1,0xcf
  40b8cb:	jp     0x40b8dd
  40b8cd:	cmp    BYTE PTR [ebx-0x7945c455],al
  40b8d3:	cmp    BYTE PTR [esi],al
  40b8d5:	sbb    esi,DWORD PTR [ecx]
  40b8d7:	lods   eax,DWORD PTR ds:[esi]
  40b8d8:	adc    BYTE PTR ss:[edi+0x40],al
  40b8dc:	push   ebx
  40b8dd:	loopne 0x40b8ea
  40b8df:	jge    0x40b88a
  40b8e1:	xor    DWORD PTR [ecx+edi*1-0x2f],0x66
  40b8e6:	fs (bad) 
  40b8e8:	into   
  40b8e9:	iret   
  40b8ea:	ds mov dl,0x7b
  40b8ed:	inc    edi
  40b8ee:	(bad)  
  40b8ef:	sahf   
  40b8f0:	jmp    ecx
  40b8f2:	push   edi
  40b8f3:	xchg   edx,eax
  40b8f4:	je     0x40b95b
  40b8f6:	dec    esi
  40b8f7:	test   esp,eax
  40b8f9:	mov    ah,0xd0
  40b8fb:	cld    
  40b8fc:	sbb    ah,dl
  40b8fe:	ja     0x40b8a6
  40b900:	popf   
  40b901:	sub    edx,eax
  40b903:	pop    es
  40b904:	popa   
  40b905:	outs   dx,DWORD PTR ds:[esi]
  40b906:	ror    BYTE PTR [edx+0x5d],0x67
  40b90a:	pop    ebp
  40b90b:	jno    0x40b8cf
  40b90d:	repnz fldcw WORD PTR ds:0x44efa2be
  40b914:	push   ss
  40b915:	jbe    0x40b8a8
  40b917:	sub    ah,dh
  40b919:	inc    eax
  40b91a:	cmp    dh,BYTE PTR [ecx+0x16]
  40b91d:	ror    BYTE PTR [ebx+esi*8+0x40f6efcd],1
  40b924:	in     al,0xed
  40b926:	fwait
  40b927:	xchg   ebx,eax
  40b928:	outs   dx,BYTE PTR ds:[esi]
  40b929:	fwait
  40b92a:	lds    esp,FWORD PTR ds:0xbdf0f3ef
  40b930:	add    esi,DWORD PTR [esi+0x69e07c08]
  40b936:	adc    DWORD PTR [ecx-0x78],esi
  40b939:	mov    ah,0xfd
  40b93b:	sub    edi,ecx
  40b93d:	inc    esp
  40b93e:	jne    0x40b969
  40b940:	xchg   DWORD PTR [edx],esi
  40b942:	pop    ds
  40b943:	xchg   BYTE PTR [esi-0x2d],dl
  40b946:	fucomip st,st(4)
  40b948:	pop    edx
  40b949:	xchg   ebx,eax
  40b94a:	sub    al,0x42
  40b94c:	lahf   
  40b94d:	sub    esi,edi
  40b94f:	push   ebp
  40b950:	fincstp 
  40b952:	adc    DWORD PTR [esi-0x1],0x8acf035d
  40b959:	test   eax,0x2c0417db
  40b95e:	pushf  
  40b95f:	or     eax,DWORD PTR [edi*1-0x4260794e]
  40b966:	cmp    BYTE PTR [esi-0x2d],al
  40b969:	std    
  40b96a:	pop    eax
  40b96b:	leave  
  40b96c:	push   esi
  40b96d:	fsub   QWORD PTR [eax+0x71]
  40b970:	scas   eax,DWORD PTR es:[edi]
  40b971:	cmp    al,0x7
  40b973:	inc    ebp
  40b974:	mov    ds:0xbdc855c3,al
  40b979:	dec    eax
  40b97a:	and    esp,DWORD PTR [esi+eax*2+0x18]
  40b97e:	rol    DWORD PTR [ebx-0x2a],0xea
  40b982:	pushf  
  40b983:	xchg   ecx,eax
  40b984:	xchg   edi,eax
  40b985:	mov    BYTE PTR [eax+0x24],dl
  40b988:	pusha  
  40b989:	in     eax,0xb8
  40b98b:	pop    esp
  40b98c:	pop    edx
  40b98d:	xor    edi,DWORD PTR [ebp+edi*1+0x1d]
  40b991:	mov    al,ds:0xdc46dbcf
  40b996:	mov    esp,0xf4768db4
  40b99b:	icebp  
  40b99c:	iret   
  40b99d:	add    al,0xe4
  40b99f:	std    
  40b9a0:	add    edx,edi
  40b9a2:	push   ds
  40b9a3:	clc    
  40b9a4:	inc    edi
  40b9a5:	call   0x518a:0x897de5c
  40b9ac:	ja     0x40ba0b
  40b9ae:	cmp    ecx,DWORD PTR [esi-0x22b1348a]
  40b9b4:	leave  
  40b9b5:	sbb    BYTE PTR [eax+0x72],ch
  40b9b8:	rcr    BYTE PTR [ecx-0x187bd606],cl
  40b9be:	xor    al,0x2d
  40b9c0:	pop    eax
  40b9c1:	push   ecx
  40b9c2:	dec    esp
  40b9c3:	cld    
  40b9c4:	das    
  40b9c5:	nop
  40b9c6:	dec    ebx
  40b9c7:	popf   
  40b9c8:	xlat   BYTE PTR ds:[ebx]
  40b9c9:	je     0x40ba32
  40b9cb:	ror    DWORD PTR [edx+0x4e5cecd],1
  40b9d1:	call   0x1799:0x6ad4b1e2
  40b9d8:	bound  edi,QWORD PTR [edx-0x7c]
  40b9db:	xor    esi,edx
  40b9dd:	(bad)  
  40b9de:	ret    
  40b9df:	or     eax,0x86b14bae
  40b9e4:	pop    es
  40b9e5:	cwde   
  40b9e6:	xchg   BYTE PTR [eax],dl
  40b9e8:	retf   0xd3bb
  40b9eb:	mov    ds:0x3522c295,al
  40b9f0:	mov    esp,0x810979cc
  40b9f5:	jge    0x40ba06
  40b9f7:	data16 fwait
  40b9f9:	xor    esp,DWORD PTR [eax+0x75]
  40b9fc:	js     0x40b9d2
  40b9fe:	mov    eax,0x853fad36
  40ba03:	dec    ebp
  40ba04:	rcr    BYTE PTR [ecx+edx*1-0x322d55ab],1
  40ba0b:	cli    
  40ba0c:	jne    0x40b9b5
  40ba0e:	cmp    DWORD PTR [ecx+0x2a],ecx
  40ba11:	imul   ebp,ebx,0x478a166c
  40ba17:	jmp    0xff2999c9
  40ba1c:	cmp    DWORD PTR [esi+edx*8],0xffffff9f
  40ba20:	aam    0xdb
  40ba22:	mov    eax,ds:0x92875b9e
  40ba27:	mov    esp,0x482ad838
  40ba2c:	dec    esi
  40ba2d:	xor    esi,DWORD PTR [ebp+ebx*2+0x28a1cde1]
  40ba34:	rcr    BYTE PTR [eax-0x54],1
  40ba37:	mov    DWORD PTR [ebx-0x66],eax
  40ba3a:	sub    bl,BYTE PTR [esi-0x21]
  40ba3d:	ror    BYTE PTR [ebx],cl
  40ba3f:	cmp    eax,DWORD PTR [ebx+0x4f]
  40ba42:	cmp    eax,0x82ece961
  40ba47:	inc    edi
  40ba48:	repnz les edx,FWORD PTR [ebx+0x53]
  40ba4c:	js     0x40baab
  40ba4e:	xchg   ebx,eax
  40ba4f:	mov    eax,0x58500d9f
  40ba54:	int3   
  40ba55:	or     DWORD PTR [eax+eiz*1-0x6f],edi
  40ba59:	dec    ebx
  40ba5a:	scas   al,BYTE PTR es:[edi]
  40ba5b:	push   0xa
  40ba5d:	les    ecx,FWORD PTR [ecx]
  40ba5f:	fldenv [ebx]
  40ba61:	clc    
  40ba62:	and    edi,DWORD PTR [edx-0x26]
  40ba65:	add    edi,esi
  40ba67:	jno    0x40ba85
  40ba69:	pop    edx
  40ba6a:	daa    
  40ba6b:	dec    ebx
  40ba6c:	cmc    
  40ba6d:	mov    ch,0xf2
  40ba6f:	gs dec esi
  40ba71:	or     eax,DWORD PTR [ebp+0x3d51c10e]
  40ba77:	cmp    esi,DWORD PTR [edx+0xc]
  40ba7a:	bound  esi,QWORD PTR [esi-0xb]
  40ba7d:	inc    esi
  40ba7e:	xchg   ebp,eax
  40ba7f:	rcr    DWORD PTR [ecx+0x74b505d8],1
  40ba85:	sbb    edx,DWORD PTR [ecx+0x42c6cf84]
  40ba8b:	pop    esp
  40ba8c:	in     al,dx
  40ba8d:	mov    ebx,0x78eae8fa
  40ba92:	xchg   BYTE PTR [ebx+0x36006c80],ch
  40ba98:	ja     0x40bab1
  40ba9a:	xchg   BYTE PTR [edi+0x5d9e4c73],bl
  40baa0:	in     al,0xbb
  40baa2:	xlat   BYTE PTR ds:[ebx]
  40baa3:	ret    0xe840
  40baa6:	jl     0x40ba3e
  40baa8:	ins    BYTE PTR es:[edi],dx
  40baa9:	cld    
  40baaa:	loope  0x40baea
  40baac:	adc    eax,0x66f0d065
  40bab1:	retf   0xccc9
  40bab4:	add    DWORD PTR [ebx+edx*8+0x2c],ebx
  40bab8:	dec    ebp
  40bab9:	inc    eax
  40baba:	inc    edx
  40babb:	cdq    
  40babc:	adc    ch,0xa
  40babf:	js     0x40baaa
  40bac1:	cld    
  40bac2:	add    bh,BYTE PTR [edi-0x2b]
  40bac5:	imul   edi,DWORD PTR [edi+0x4cd05743],0x60360e45
  40bacf:	std    
  40bad0:	cli    
  40bad1:	jge    0x40bb0b
  40bad3:	rcl    DWORD PTR [eax],cl
  40bad5:	pusha  
  40bad6:	aas    
  40bad7:	push   es
  40bad8:	jb     0x40bb4b
  40bada:	cs inc esp
  40badc:	js     0x40bb38
  40bade:	mov    bh,0x66
  40bae0:	pop    esp
  40bae1:	out    dx,eax
  40bae2:	mov    esp,0x2f330ad6
  40bae7:	push   0xb8cacbdb
  40baec:	in     al,dx
  40baed:	inc    eax
  40baee:	in     al,0xf3
  40baf0:	jb     0x40bb54
  40baf2:	mov    ah,0xcc
  40baf4:	sti    
  40baf5:	shl    DWORD PTR [ecx],0x2b
  40baf8:	sbb    ch,BYTE PTR [eax-0x24]
  40bafb:	xor    eax,0x9788da6f
  40bb00:	push   cs
  40bb01:	and    ecx,DWORD PTR [ebx]
  40bb03:	mov    DWORD PTR [ebx],ebx
  40bb05:	xchg   ebx,eax
  40bb06:	push   esi
  40bb07:	in     eax,0x8
  40bb09:	cmp    edx,DWORD PTR [edx+0x62]
  40bb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb0d:	cmp    al,0x9d
  40bb0f:	fidivr WORD PTR [edi+0x6e]
  40bb12:	xchg   esp,eax
  40bb13:	jle    0x40ba9d
  40bb15:	int3   
  40bb16:	out    dx,al
  40bb17:	sub    DWORD PTR [esi],esp
  40bb19:	mov    esi,0xd66125fe
  40bb1e:	xchg   BYTE PTR [ecx+0x1b],ah
  40bb21:	xor    eax,0x2c41ccaa
  40bb26:	fisttp DWORD PTR [edi-0xa8c9e20]
  40bb2c:	push   ebp
  40bb2d:	dec    ecx
  40bb2e:	ret    0xd048
  40bb31:	and    DWORD PTR [ecx],0x6
  40bb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb35:	mov    dl,BYTE PTR [ecx+0x5e65aa6e]
  40bb3b:	mov    ecx,0xe82eb2df
  40bb40:	addr16 push edi
  40bb42:	mov    esi,0x9375fef9
  40bb47:	das    
  40bb48:	or     eax,DWORD PTR [ecx-0x75]
  40bb4b:	inc    ecx
  40bb4c:	xchg   DWORD PTR [edi-0x4c26188c],esi
  40bb52:	(bad)  
  40bb53:	aaa    
  40bb54:	test   DWORD PTR [edx+0x7d38d132],0xe1e6304e
  40bb5e:	bound  esi,QWORD PTR [edi]
  40bb60:	xchg   esp,eax
  40bb61:	outs   dx,BYTE PTR ds:[esi]
  40bb62:	jns    0x40bb48
  40bb64:	push   0xffffffdf
  40bb66:	xor    ah,BYTE PTR [eax]
  40bb68:	cli    
  40bb69:	xchg   cx,ax
  40bb6b:	jmp    0xa5e651df
  40bb70:	mov    ecx,esp
  40bb72:	aam    0x72
  40bb74:	dec    ebx
  40bb75:	sub    BYTE PTR [ebx],cl
  40bb77:	fadd   DWORD PTR [eax+0x171126d4]
  40bb7d:	push   eax
  40bb7e:	sbb    al,0x95
  40bb80:	mov    bl,0xf0
  40bb82:	(bad)  
  40bb83:	jns    0x40bb62
  40bb85:	iret   
  40bb86:	sbb    DWORD PTR [edi],ebp
  40bb88:	mov    ecx,0xeebe2ebf
  40bb8d:	ins    BYTE PTR es:[edi],dx
  40bb8e:	(bad)
  40bb92:	std    
  40bb93:	jge    0x40bb4f
  40bb95:	pop    esi
  40bb96:	push   esp
  40bb97:	cmp    eax,0xc36fde37
  40bb9c:	inc    esi
  40bb9d:	test   al,0x79
  40bb9f:	mov    ch,0x31
  40bba1:	dec    edi
  40bba2:	pop    edx
  40bba3:	fidiv  WORD PTR [esi-0x663e515d]
  40bba9:	push   0x26
  40bbab:	mov    dh,0x21
  40bbad:	cmp    bh,bl
  40bbaf:	inc    esi
  40bbb0:	xor    edi,DWORD PTR [eax-0x73c6bae2]
  40bbb6:	ins    DWORD PTR es:[edi],dx
  40bbb7:	mov    eax,0xb98bf289
  40bbbc:	jmp    0x3128dcaa
  40bbc1:	sub    al,0x72
  40bbc3:	ss ins DWORD PTR es:[edi],dx
  40bbc5:	mov    BYTE PTR [ebp+esi*1-0x1d38760f],ah
  40bbcc:	jle    0x40bbd6
  40bbce:	enter  0xd5c2,0x34
  40bbd2:	leave  
  40bbd3:	jnp    0x40bbae
  40bbd5:	nop
  40bbd6:	sar    DWORD PTR [eax],cl
  40bbd8:	xor    bh,BYTE PTR [esi-0x3f14745f]
  40bbde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbdf:	add    BYTE PTR [esi-0x1],bh
  40bbe2:	push   es
  40bbe3:	xchg   ebp,eax
  40bbe4:	jno    0x40bbb6
  40bbe6:	cmp    eax,0x2b21610b
  40bbeb:	xchg   edx,eax
  40bbec:	push   es
  40bbed:	mov    ebp,0x2f0fb651
  40bbf2:	mov    eax,ds:0x9d398b36
  40bbf7:	sub    DWORD PTR [ebp-0x6e479396],esi
  40bbfd:	ret    
  40bbfe:	ret    
  40bbff:	fimul  WORD PTR [eax+0x628cefcb]
  40bc05:	jbe    0x40bbc3
  40bc07:	(bad)  
  40bc08:	sbb    al,BYTE PTR [edi+0x778ba68d]
  40bc0e:	add    eax,0x8b5c8214
  40bc13:	ficom  WORD PTR [edi-0x41]
  40bc16:	add    BYTE PTR [ebp+0x51],ch
  40bc19:	sbb    eax,0x1ba52a65
  40bc1e:	and    al,0x1c
  40bc20:	cmp    DWORD PTR [ebx+esi*2],ebx
  40bc23:	inc    ebp
  40bc24:	ins    BYTE PTR es:[edi],dx
  40bc25:	adc    DWORD PTR [ebp+edi*2-0x5eac43b],0x5296d258
  40bc30:	adc    esp,DWORD PTR [ebp+edi*8+0x70a41020]
  40bc37:	xor    BYTE PTR [esi+0x5b8dca29],dl
  40bc3d:	jmp    0x40bbf3
  40bc3f:	lods   eax,DWORD PTR ds:[esi]
  40bc40:	xor    eax,0xee697cad
  40bc45:	xchg   eax,esi
  40bc47:	mov    ch,al
  40bc49:	push   edx
  40bc4a:	or     ah,BYTE PTR [edx-0x669d47bf]
  40bc50:	mov    ah,0x45
  40bc52:	push   ds
  40bc53:	js     0x40bc72
  40bc55:	sub    bl,BYTE PTR [edi+0x231cd7e5]
  40bc5b:	mov    esp,0x200d4fa8
  40bc60:	and    ebp,DWORD PTR [edx+edi*1]
  40bc63:	dec    edx
  40bc64:	dec    edi
  40bc65:	into   
  40bc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc67:	xchg   edx,eax
  40bc68:	addr16 mov ebp,0x9747ccad
  40bc6e:	mov    esp,0x9bf8d3dd
  40bc73:	mov    eax,ds:0x78e4e7eb
  40bc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc79:	outs   dx,DWORD PTR es:[esi]
  40bc7b:	dec    edx
  40bc7c:	jbe    0x40bcbe
  40bc7e:	sub    ch,BYTE PTR [edx-0x629adcb8]
  40bc84:	leave  
  40bc85:	fucom  st(4)
  40bc87:	mov    ecx,0x60daf7ee
  40bc8c:	mov    ah,0x55
  40bc8e:	lods   al,BYTE PTR ds:[esi]
  40bc8f:	test   BYTE PTR [ecx-0x13],ch
  40bc92:	mov    al,0x62
  40bc94:	mov    cl,0xe2
  40bc96:	(bad)  
  40bc97:	cmp    ebp,0xffffffe1
  40bc9a:	sub    ebp,DWORD PTR [esi-0x43]
  40bc9d:	and    DWORD PTR [esp],edx
  40bca0:	jecxz  0x40bd20
  40bca2:	das    
  40bca3:	adc    al,bh
  40bca5:	mov    eax,0xba9b3f1b
  40bcaa:	pop    esi
  40bcab:	mov    edi,0x4e60cdd4
  40bcb0:	addr16 clc 
  40bcb2:	fcomp  st(5)
  40bcb4:	lock adc eax,0xc5d60329
  40bcba:	inc    esi
  40bcbb:	cwde   
  40bcbc:	outs   dx,DWORD PTR ds:[esi]
  40bcbd:	and    esi,ebx
  40bcbf:	ds ja  0x40bc8a
  40bcc2:	sbb    DWORD PTR [edx+ebp*1+0x7a],edx
  40bcc6:	rcr    BYTE PTR [edx],0xaf
  40bcc9:	std    
  40bcca:	sub    bh,BYTE PTR [ebx-0x138dfd0b]
  40bcd0:	mov    edi,0x902afe93
  40bcd5:	ins    DWORD PTR es:[edi],dx
  40bcd6:	pop    esi
  40bcd7:	in     eax,0x99
  40bcd9:	fwait
  40bcda:	and    esp,ecx
  40bcdc:	test   BYTE PTR [eax+0x17],cl
  40bcdf:	add    eax,eax
  40bce1:	push   eax
  40bce2:	imul   esi,esi,0x8a25a68d
  40bce8:	pop    esi
  40bce9:	enter  0x55fd,0x48
  40bced:	mov    ah,0x29
  40bcef:	add    eax,0x53f4ca6d
  40bcf4:	pop    ebx
  40bcf5:	mul    esp
  40bcf7:	ins    DWORD PTR es:[edi],dx
  40bcf8:	nop    DWORD PTR [ebx+0x1a]
  40bcfc:	or     eax,0xf9c22244
  40bd01:	or     eax,0xb722ab0a
  40bd06:	and    esi,DWORD PTR [edi]
  40bd08:	jo     0x40bd87
  40bd0a:	jg     0x40bd46
  40bd0c:	adc    eax,0x9b56782c
  40bd11:	sub    BYTE PTR [edx],bh
  40bd13:	add    BYTE PTR [esi+0x23b35ad3],dh
  40bd19:	out    dx,al
  40bd1a:	clc    
  40bd1b:	(bad)  
  40bd1c:	and    al,0x7e
  40bd1e:	nop    DWORD PTR fs:[edx-0x6a87d931]
  40bd26:	pop    ecx
  40bd27:	xchg   esi,eax
  40bd28:	mov    dh,0x62
  40bd2a:	push   edi
  40bd2b:	rol    bh,0x82
  40bd2e:	and    BYTE PTR [esi-0x24],dh
  40bd31:	in     eax,0x9
  40bd33:	loopne 0x40bcd7
  40bd35:	into   
  40bd36:	(bad)  
  40bd39:	mov    dh,0x7c
  40bd3b:	pushf  
  40bd3c:	pop    edi
  40bd3d:	sbb    dh,dh
  40bd3f:	repz jno 0x40bcfd
  40bd42:	pop    eax
  40bd43:	mov    al,ds:0x91a20722
  40bd48:	or     eax,0x6a550df8
  40bd4d:	cli    
  40bd4e:	mov    cl,0xd4
  40bd50:	out    0x5,eax
  40bd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd53:	pop    eax
  40bd54:	jae    0x40bdcf
  40bd56:	pushf  
  40bd57:	sbb    al,0x58
  40bd59:	push   ds
  40bd5a:	mov    esi,0x47f7f789
  40bd5f:	jb     0x40bd93
  40bd61:	pop    ebx
  40bd62:	jp     0x40bdb0
  40bd64:	xchg   esp,eax
  40bd65:	cmp    eax,0xb8f855d4
  40bd6a:	xor    al,0xed
  40bd6c:	neg    BYTE PTR [eax]
  40bd6e:	fsubr  QWORD PTR [ecx-0x22]
  40bd71:	scas   eax,DWORD PTR es:[edi]
  40bd72:	inc    ecx
  40bd73:	outs   dx,DWORD PTR ds:[esi]
  40bd74:	lods   al,BYTE PTR ds:[esi]
  40bd75:	lods   al,BYTE PTR ds:[esi]
  40bd76:	aad    0x0
  40bd78:	in     eax,0x8
  40bd7a:	add    al,0xc8
  40bd7c:	mov    ch,0xd2
  40bd7e:	pop    esp
  40bd7f:	pop    ds
  40bd80:	in     al,dx
  40bd81:	xor    WORD PTR [edx-0x9a4cb28],bp
  40bd88:	inc    ebp
  40bd89:	sbb    bl,bh
  40bd8b:	mov    cl,0x57
  40bd8d:	xchg   edx,eax
  40bd8e:	cwd    
  40bd90:	and    cl,BYTE PTR [edx-0x2]
  40bd93:	cmp    BYTE PTR [ecx-0x71e5e357],al
  40bd99:	stos   DWORD PTR es:[edi],eax
  40bd9a:	mov    fs,WORD PTR [ecx]
  40bd9c:	call   0x44914079
  40bda1:	call   0xc76e:0xd0ef9873
  40bda8:	lahf   
  40bda9:	addr16 pop es
  40bdab:	fs push ebp
  40bdad:	neg    BYTE PTR [edx-0x3d9d6f63]
  40bdb3:	mov    edi,ecx
  40bdb5:	xor    eax,0x97c9a07e
  40bdba:	jo     0x40be37
  40bdbc:	fwait
  40bdbd:	loopne 0x40bd65
  40bdbf:	inc    edx
  40bdc0:	scas   eax,DWORD PTR es:[edi]
  40bdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc2:	mov    ebx,0xcff47dda
  40bdc7:	rol    cl,1
  40bdc9:	push   esp
  40bdca:	push   cs
  40bdcb:	mov    cl,0x82
  40bdcd:	(bad)  
  40bdce:	call   0x3d56ca77
  40bdd3:	sbb    eax,0x5386cd37
  40bdd8:	mov    WORD PTR [ebp+0x143640c4],ds
  40bdde:	test   eax,0xc5fa2fa8
  40bde3:	or     eax,0x1ad3c9e5
  40bde8:	sti    
  40bde9:	add    esi,eax
  40bdeb:	test   ecx,esi
  40bded:	ret    
  40bdee:	push   es
  40bdef:	inc    edx
  40bdf0:	ins    DWORD PTR es:[edi],dx
  40bdf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdf2:	push   edx
  40bdf3:	fidivr WORD PTR [ecx-0x2ef33e4f]
  40bdf9:	(bad)  
  40bdfb:	cmp    eax,0xcc5add93
  40be00:	fdivr  st(0),st
  40be02:	sbb    BYTE PTR [esi+0x439275b1],0xe9
  40be09:	mov    al,0xab
  40be0b:	fnstcw WORD PTR [esi]
  40be0d:	into   
  40be0e:	dec    esp
  40be0f:	sub    dh,BYTE PTR [ecx+0x446946f7]
  40be15:	and    DWORD PTR [ebx],edx
  40be17:	dec    ebp
  40be18:	cmp    DWORD PTR [ebx-0x38],0x91a11807
  40be1f:	in     eax,0x16
  40be21:	sub    eax,0x83f5f7cc
  40be26:	mov    dh,0x29
  40be28:	out    dx,eax
  40be29:	je     0x40be15
  40be2b:	xchg   ebp,eax
  40be2c:	and    BYTE PTR [edx-0xc9cba4f],dh
  40be32:	iret   
  40be33:	mov    ah,0xab
  40be35:	pop    edx
  40be36:	out    dx,al
  40be37:	jmp    0xbadc9fab
  40be3c:	xchg   ebx,eax
  40be3d:	popf   
  40be3e:	aas    
  40be3f:	mov    ecx,0xd8e1ab76
  40be45:	ins    BYTE PTR es:[edi],dx
  40be46:	cs cmp eax,0xeb56fe66
  40be4c:	inc    esi
  40be4d:	arpl   cx,dx
  40be4f:	and    BYTE PTR gs:[esi+ebx*8+0x4df1af9d],ah
  40be57:	ficomp WORD PTR [eax+0x29]
  40be5a:	pop    edx
  40be5b:	enter  0xd057,0xd3
  40be5f:	das    
  40be60:	punpckhwd mm4,mm2
  40be63:	adc    BYTE PTR [ecx+0x20],cl
  40be66:	jno    0x40be9d
  40be68:	sbb    al,al
  40be6a:	lahf   
  40be6b:	dec    ecx
  40be6c:	xor    al,0x48
  40be6e:	jge    0x40beb1
  40be70:	and    edx,DWORD PTR [edx-0x18508bb]
  40be76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be77:	shl    eax,0xa9
  40be7a:	in     al,0xe6
  40be7c:	fnstcw WORD PTR [esi-0x42f318fd]
  40be82:	pop    ebx
  40be83:	inc    esi
  40be84:	push   esp
  40be85:	pusha  
  40be86:	dec    ebx
  40be87:	adc    al,0x8a
  40be89:	outs   dx,WORD PTR ds:[esi]
  40be8b:	mov    edi,0x6759e487
  40be90:	push   edx
  40be91:	imul   DWORD PTR [eax]
  40be93:	movntps XMMWORD PTR [esi+0x5c6a4140],xmm0
  40be9a:	jo     0x40beb7
  40be9c:	fprem  
  40be9e:	sub    eax,0x7dda029
  40bea3:	addr16 out dx,al
  40bea5:	retf   0x2cdc
  40bea8:	(bad)
  40beac:	lods   al,BYTE PTR ds:[esi]
  40bead:	mov    edi,0x1b484e00
  40beb2:	test   BYTE PTR [edx+eax*2],0xbc
  40beb6:	in     eax,0xc0
  40beb8:	call   0x6e12:0xea911055
  40bebf:	jne    0x40bea5
  40bec1:	shl    BYTE PTR [eax+eax*8],0x80
  40bec5:	ins    DWORD PTR es:[edi],dx
  40bec6:	or     bl,BYTE PTR [ecx+0x22]
  40bec9:	ja     0x40bee1
  40becb:	fdivr  QWORD PTR [ebx]
  40becd:	inc    esp
  40bece:	xchg   edx,eax
  40becf:	sbb    al,BYTE PTR [esi+0x40]
  40bed2:	add    eax,0xb053984
  40bed7:	cld    
  40bed8:	fs or  eax,0x7d273387
  40bede:	in     al,0xa4
  40bee0:	pushf  
  40bee1:	push   edx
  40bee2:	ins    BYTE PTR es:[edi],dx
  40bee3:	mov    dl,0xca
  40bee5:	loop   0x40bf30
  40bee7:	mov    ebx,DWORD PTR [ebp-0x6f]
  40beea:	push   es
  40beeb:	fcmovbe st,st(6)
  40beed:	loope  0x40bed6
  40beef:	sbb    BYTE PTR [ebx],bl
  40bef1:	push   edx
  40bef2:	iret   
  40bef3:	push   eax
  40bef4:	jno    0x40bf3e
  40bef6:	std    
  40bef7:	add    DWORD PTR [ebp+ebp*8+0x57253ba4],0x28e11a07
  40bf02:	ja     0x40be9c
  40bf04:	repz mov es,WORD PTR [esi-0x1432f70a]
  40bf0b:	lahf   
  40bf0c:	cmp    ebx,DWORD PTR [ebp-0x74a8c309]
  40bf12:	pop    edi
  40bf13:	mov    ecx,0xb340c251
  40bf18:	(bad)  
  40bf19:	mov    esi,0xd6a9cc37
  40bf1e:	cmp    BYTE PTR [eax],ch
  40bf20:	mov    esp,DWORD PTR [esi]
  40bf22:	je     0x40bf83
  40bf24:	and    DWORD PTR [esi-0x4e],eax
  40bf27:	not    DWORD PTR [esi+0x38e2ab00]
  40bf2d:	shl    esi,0xe6
  40bf30:	fistp  WORD PTR [ebx-0xa]
  40bf33:	js     0x40bfa0
  40bf35:	push   es
  40bf36:	fidivr DWORD PTR [edi-0x70]
  40bf39:	mov    ds:0x6169ac6d,eax
  40bf3e:	jmp    0x2ddf75a0
  40bf43:	imul   ecx,eax,0xbed785af
  40bf49:	stos   BYTE PTR es:[edi],al
  40bf4a:	dec    ebx
  40bf4b:	push   ds
  40bf4c:	sbb    edi,DWORD PTR [ebx+0x30]
  40bf4f:	gs jno 0x40bfc8
  40bf52:	cmp    ch,bh
  40bf54:	adc    BYTE PTR [edx+0x79cbed2f],al
  40bf5a:	mov    esi,0x6b5c3117
  40bf5f:	popf   
  40bf60:	push   eax
  40bf61:	inc    edx
  40bf62:	lahf   
  40bf63:	stos   BYTE PTR es:[edi],al
  40bf64:	or     eax,0x79b618a4
  40bf69:	arpl   WORD PTR [ecx+0x5293eeec],bp
  40bf6f:	adc    al,BYTE PTR [ecx-0x556ea334]
  40bf75:	int    0xa8
  40bf77:	outs   dx,BYTE PTR ds:[esi]
  40bf78:	dec    esp
  40bf79:	xchg   BYTE PTR [eax+0x486dface],al
  40bf7f:	into   
  40bf80:	sub    bl,dh
  40bf82:	jno    0x40bffb
  40bf84:	or     al,0x6f
  40bf86:	test   al,0x5
  40bf88:	add    al,0x75
  40bf8a:	pop    ecx
  40bf8b:	lods   al,BYTE PTR ds:[esi]
  40bf8c:	dec    esp
  40bf8d:	cmp    al,0x54
  40bf8f:	xchg   ecx,eax
  40bf90:	cwde   
  40bf91:	or     al,0x76
  40bf93:	jmp    0xf9a336b1
  40bf98:	rcl    DWORD PTR [eax+0x45],0xaf
  40bf9c:	bound  bp,DWORD PTR [esi+0x4974ca0b]
  40bfa3:	cmp    al,0xaa
  40bfa5:	pop    esi
  40bfa6:	add    esi,ecx
  40bfa8:	xor    esi,DWORD PTR [ebx+ebx*2+0x59]
  40bfac:	clc    
  40bfad:	jl     0x40bf82
  40bfaf:	sahf   
  40bfb0:	sub    bl,BYTE PTR [eax-0x3d]
  40bfb3:	fsubr  st,st(3)
  40bfb5:	not    DWORD PTR [edx+0x6951d7f6]
  40bfbb:	dec    eax
  40bfbc:	repnz mov cl,0x25
  40bfbf:	cwde   
  40bfc0:	mov    ecx,0x95f0d1ca
  40bfc5:	gs xchg esp,eax
  40bfc7:	cmp    eax,0x754f1137
  40bfcc:	mov    fs,WORD PTR [eax+esi*1+0x1d714b3c]
  40bfd3:	fisub  DWORD PTR [edi]
  40bfd5:	icebp  
  40bfd6:	into   
  40bfd7:	dec    edi
  40bfd8:	sbb    ch,BYTE PTR [ebx-0x4390df01]
  40bfde:	mov    al,0xee
  40bfe0:	scas   eax,DWORD PTR es:[edi]
  40bfe1:	and    dl,dh
  40bfe3:	mov    cl,0x3f
  40bfe5:	pop    eax
  40bfe6:	push   esp
  40bfe7:	mov    ?,ebx
  40bfe9:	in     eax,dx
  40bfea:	mov    ecx,0x23b9f8b8
  40bfef:	in     al,dx
  40bff0:	push   es
  40bff1:	addr16 mov ah,0x70
  40bff4:	xchg   esp,eax
  40bff5:	xchg   esp,eax
  40bff6:	neg    BYTE PTR [ebp-0x26f3e0ee]
  40bffc:	xchg   edx,eax
  40bffd:	and    ebp,DWORD PTR [esi-0xd94bbb0]
  40c003:	jmp    0xc600534c
  40c008:	(bad)  
  40c009:	push   es
  40c00a:	xchg   ebp,eax
  40c00b:	xor    eax,esp
  40c00d:	adc    al,0xbd
  40c00f:	push   ebx
  40c010:	loopne 0x40c089
  40c012:	paddd  mm6,mm2
  40c015:	lock xor bh,bh
  40c018:	ds out 0xae,al
  40c01b:	xor    BYTE PTR [ebp+0x2],dl
  40c01e:	pop    ds
  40c01f:	retf   0xd186
  40c022:	push   esp
  40c023:	aam    0x59
  40c025:	mov    ebp,0x2cc7a322
  40c02a:	fwait
  40c02b:	repnz push cs
  40c02d:	cli    
  40c02e:	inc    edi
  40c02f:	mov    ah,0xce
  40c031:	hlt    
  40c032:	mov    al,ds:0xf2f0bf46
  40c037:	jns    0x40c012
  40c039:	ret    
  40c03a:	mov    edx,0xaef11ff
  40c03f:	rol    DWORD PTR [edx-0x36],0xcb
  40c043:	xchg   esp,eax
  40c044:	push   ebp
  40c045:	push   ds
  40c046:	push   ss
  40c047:	lds    eax,FWORD PTR [esp+esi*1]
  40c04a:	inc    edi
  40c04b:	jae    0x40bfe9
  40c04d:	add    ebp,esi
  40c04f:	mov    edi,0x216c0b27
  40c054:	xor    bh,BYTE PTR [esi]
  40c056:	jae    0x40bfe3
  40c058:	mov    cl,BYTE PTR [esi+0x1]
  40c05b:	push   esp
  40c05c:	inc    eax
  40c05d:	test   edx,ecx
  40c05f:	add    DWORD PTR [esi+0x5a],ebp
  40c062:	pop    ebx
  40c063:	addr16 inc eax
  40c065:	(bad)  
  40c066:	sbb    ebp,esi
  40c068:	or     eax,0x780f8959
  40c06d:	or     BYTE PTR [ebx],0xa6
  40c070:	lods   eax,DWORD PTR ds:[esi]
  40c071:	adc    BYTE PTR [edx+0x4c065982],ah
  40c077:	pop    esp
  40c078:	(bad)  
  40c079:	loop   0x40c0c9
  40c07b:	push   es
  40c07c:	sbb    cl,BYTE PTR [edi+0x11]
  40c07f:	fidiv  DWORD PTR [edx-0x2b]
  40c082:	test   ebx,eax
  40c084:	sub    al,0x86
  40c086:	jecxz  0x40c091
  40c088:	push   ss
  40c089:	jle    0x40c021
  40c08b:	push   0xffffffd5
  40c08d:	pop    ecx
  40c08e:	push   ds
  40c08f:	cmp    BYTE PTR [ebx-0x36],ah
  40c092:	ror    DWORD PTR [edi-0x5b],1
  40c095:	mov    WORD PTR [ecx-0x48],gs
  40c098:	sbb    BYTE PTR [edi+0x4de40cd8],0xe0
  40c09f:	fnstcw WORD PTR [ebx-0x19]
  40c0a2:	out    dx,eax
  40c0a3:	mov    cl,0x7d
  40c0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a6:	xchg   edi,eax
  40c0a7:	pop    ss
  40c0a8:	fwait
  40c0a9:	or     ch,BYTE PTR [edx-0x5e3adfe6]
  40c0af:	pop    esp
  40c0b0:	fsubr  st,st(2)
  40c0b2:	push   esi
  40c0b3:	ja     0x40c09b
  40c0b5:	mov    esi,0x5f9c7dec
  40c0ba:	sbb    esi,DWORD PTR [edx+ebx*4+0x35]
  40c0be:	and    DWORD PTR ds:0x225b63c7,0x23
  40c0c5:	pop    esi
  40c0c6:	out    dx,eax
  40c0c7:	add    edx,DWORD PTR [esp+ebp*1]
  40c0ca:	lds    esp,FWORD PTR [edi]
  40c0cc:	xchg   edx,eax
  40c0cd:	stos   DWORD PTR es:[edi],eax
  40c0ce:	lea    eax,[ecx+0x75]
  40c0d1:	repz cmp ah,BYTE PTR [edx-0x4c]
  40c0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d6:	add    ebp,DWORD PTR [eax-0x633e61d0]
  40c0dc:	jo     0x40c10b
  40c0de:	mov    bh,0xd8
  40c0e0:	pusha  
  40c0e1:	sub    ah,BYTE PTR [eax-0x5e679242]
  40c0e7:	loop   0x40c144
  40c0e9:	gs xor ebx,esp
  40c0ec:	(bad)  
  40c0ed:	(bad)  
  40c0ef:	or     al,0xb0
  40c0f1:	into   
  40c0f2:	(bad)  
  40c0f3:	mov    ebp,0x7312f43c
  40c0f8:	(bad)  
  40c0f9:	ret    
  40c0fa:	std    
  40c0fb:	lods   eax,DWORD PTR ds:[esi]
  40c0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0fd:	mov    al,ds:0xa2f8d184
  40c102:	mov    esp,edx
  40c104:	dec    esi
  40c105:	ret    0x6e05
  40c108:	mov    ecx,0xbf92c687
  40c10d:	call   0x24c30c8c
  40c112:	rol    bh,1
  40c114:	and    DWORD PTR [edx],0x98bf8f5d
  40c11a:	sbb    cl,0x51
  40c11d:	shr    BYTE PTR [ecx],1
  40c11f:	(bad)  
  40c120:	sbb    DWORD PTR [edx+0x2efd3132],esi
  40c126:	push   esp
  40c127:	jle    0x40c114
  40c129:	push   edx
  40c12a:	call   0x1c58de49
  40c12f:	cld    
  40c130:	sub    bh,BYTE PTR [ebp-0x63]
  40c133:	mov    ebp,0x8ced01c9
  40c138:	or     bl,BYTE PTR [ecx-0x5e]
  40c13b:	stos   BYTE PTR es:[edi],al
  40c13c:	dec    esp
  40c13d:	dec    edi
  40c13e:	and    BYTE PTR [edx],ah
  40c140:	int3   
  40c141:	push   esi
  40c142:	arpl   WORD PTR [ebx-0x17],bx
  40c145:	inc    eax
  40c146:	retf   0xcfe2
  40c149:	ret    
  40c14a:	icebp  
  40c14b:	mov    eax,fs:0x1080583c
  40c151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c152:	push   edi
  40c153:	dec    edx
  40c154:	and    al,0x16
  40c156:	dec    esp
  40c157:	push   edi
  40c158:	xor    eax,0xbe5ea44
  40c15d:	inc    edi
  40c15e:	gs js  0x40c0ed
  40c161:	sbb    dl,BYTE PTR [esi+0x6276e52d]
  40c167:	rol    BYTE PTR [ebx],0x32
  40c16a:	rcr    BYTE PTR [ebx-0x20e7b6cc],1
  40c170:	out    dx,al
  40c171:	test   eax,0xe6efca77
  40c176:	mov    esi,0x3318b21d
  40c17b:	push   ecx
  40c17c:	sub    DWORD PTR [ecx-0x1b],edi
  40c17f:	push   ebp
  40c180:	(bad)  
  40c182:	out    dx,al
  40c183:	fstp   TBYTE PTR ds:0x4fcde2
  40c189:	xor    dl,BYTE PTR [ebp-0x12]
  40c18c:	add    BYTE PTR [ecx+0x7c],ah
  40c18f:	xlat   BYTE PTR ds:[ebx]
  40c190:	into   
  40c191:	add    DWORD PTR [edi+0xc7e1734],ebp
  40c197:	jl     0x40c15f
  40c199:	sub    al,0x88
  40c19b:	mov    edx,0xe75b4371
  40c1a0:	jmp    0x2ad118ca
  40c1a5:	stc    
  40c1a6:	inc    edx
  40c1a7:	mov    esi,0xc157f29e
  40c1ac:	stos   BYTE PTR es:[edi],al
  40c1ad:	hlt    
  40c1ae:	or     eax,0xa6fcb979
  40c1b3:	pop    edx
  40c1b4:	dec    ecx
  40c1b5:	outs   dx,DWORD PTR ds:[esi]
  40c1b6:	mov    ebx,0xa87c96
  40c1bb:	adc    DWORD PTR [esp+0x2a8f566b],ecx
  40c1c2:	mov    ?,edi
  40c1c4:	push   esp
  40c1c5:	push   eax
  40c1c6:	scas   eax,DWORD PTR es:[edi]
  40c1c7:	call   0x60fa:0x96dadd7c
  40c1ce:	xchg   al,dh
  40c1d0:	mov    WORD PTR [ebx],?
  40c1d2:	mov    eax,0x5ad3e69d
  40c1d7:	call   0xc466:0x1ad21179
  40c1de:	push   eax
  40c1df:	loopne 0x40c260
  40c1e1:	lods   al,BYTE PTR ds:[esi]
  40c1e2:	jecxz  0x40c1cb
  40c1e4:	mov    eax,0xe293a235
  40c1e9:	jnp    0x40c25d
  40c1eb:	iret   
  40c1ec:	cmp    edx,DWORD PTR [eax+edx*1]
  40c1ef:	sbb    ebx,DWORD PTR [ebx]
  40c1f1:	iret   
  40c1f2:	fbstp  TBYTE PTR [ebx+0x52de78d4]
  40c1f8:	pop    es
  40c1f9:	out    dx,eax
  40c1fa:	mov    ebx,0x54f45721
  40c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c200:	xor    eax,0x88cbe718
  40c205:	(bad)  
  40c206:	popa   
  40c207:	(bad)  
  40c208:	push   edx
  40c209:	(bad)  
  40c20a:	sbb    ch,BYTE PTR [eax-0x20]
  40c20d:	cmp    al,0xb1
  40c20f:	repnz scas eax,DWORD PTR es:[edi]
  40c211:	pop    esp
  40c212:	jp     0x40c228
  40c214:	push   0x75
  40c216:	xchg   ebp,eax
  40c218:	das    
  40c219:	pop    edi
  40c21a:	iret   
  40c21b:	shl    DWORD PTR [edi],1
  40c21d:	jl     0x40c246
  40c21f:	jmp    0x40c216
  40c221:	clc    
  40c222:	out    0xd,al
  40c224:	inc    edx
  40c226:	nop
  40c227:	fsin   
  40c229:	and    cl,BYTE PTR [eax+0x77]
  40c22c:	cld    
  40c22d:	jmp    DWORD PTR [ecx-0x1c]
  40c230:	sub    ebp,DWORD PTR [edx+0x56]
  40c233:	mov    WORD PTR [edi-0x19],ss
  40c236:	mov    ebp,0xd269ac7e
  40c23b:	std    
  40c23c:	in     al,0x1c
  40c23e:	cli    
  40c23f:	shl    ch,cl
  40c241:	mov    BYTE PTR [edx],dh
  40c243:	fs in  eax,0x12
  40c246:	sbb    BYTE PTR [esi],ah
  40c248:	xchg   esi,eax
  40c249:	int3   
  40c24a:	int    0xa9
  40c24c:	jl     0x40c29e
  40c24e:	fsub   QWORD PTR [edi+0x5b]
  40c251:	popf   
  40c252:	nop
  40c253:	and    al,0x14
  40c255:	add    ecx,ebp
  40c257:	push   ebp
  40c258:	adc    DWORD PTR [ebp-0x7f],0xb58de19d
  40c25f:	mov    ds:0x1c4e2a6f,eax
  40c264:	cdq    
  40c265:	mov    ecx,DWORD PTR [ecx]
  40c267:	or     edi,DWORD PTR [esi]
  40c269:	test   al,dh
  40c26b:	xor    esp,DWORD PTR [esi-0x63]
  40c26e:	sbb    DWORD PTR [ebp-0x5c],0xc74046bb
  40c275:	mov    ah,BYTE PTR [edx]
  40c277:	scas   eax,DWORD PTR es:[edi]
  40c278:	jb     0x40c2f1
  40c27a:	mov    fs,edx
  40c27c:	sub    BYTE PTR ds:0xd0a27b41,0x8a
  40c283:	inc    ebp
  40c284:	pop    edx
  40c285:	(bad)  
  40c286:	inc    edi
  40c287:	push   esi
  40c288:	call   0x832d38c8
  40c28d:	inc    esp
  40c28e:	dec    ecx
  40c28f:	ins    BYTE PTR es:[edi],dx
  40c290:	std    
  40c291:	pop    es
  40c292:	test   BYTE PTR [ebx],bh
  40c294:	sub    eax,0xfc136713
  40c299:	jnp    0x40c29f
  40c29b:	jmp    0x5d1f:0x884b8608
  40c2a2:	add    BYTE PTR [ecx-0x6684facb],ah
  40c2a8:	sub    dh,bh
  40c2aa:	mov    al,ds:0xa9066adb
  40c2af:	dec    ebx
  40c2b0:	xchg   edi,eax
  40c2b1:	jne    0x40c261
  40c2b3:	xchg   edx,eax
  40c2b4:	jae    0x40c2f7
  40c2b6:	leave  
  40c2b7:	imul   cx,WORD PTR [ebp-0x17497826],0x4f
  40c2bf:	outs   dx,BYTE PTR ds:[esi]
  40c2c0:	xor    eax,0xf1c7086d
  40c2c5:	and    eax,0x44bb6dfc
  40c2ca:	sub    esi,DWORD PTR [edi+0x4d62be14]
  40c2d0:	cmp    eax,DWORD PTR [ebx-0x38]
  40c2d3:	mov    edx,0x4fcd0666
  40c2d8:	or     esp,DWORD PTR [esi-0x72]
  40c2db:	adc    BYTE PTR [edi-0x7bf1bfb9],al
  40c2e1:	stos   DWORD PTR es:[edi],eax
  40c2e2:	jbe    0x40c27e
  40c2e4:	mov    cl,0x52
  40c2e6:	mov    dl,0xfe
  40c2e8:	or     BYTE PTR [eax-0x756107f0],bh
  40c2ee:	data16 in al,dx
  40c2f0:	shr    DWORD PTR [edx+0x43],1
  40c2f3:	jb     0x40c316
  40c2f5:	pop    edx
  40c2f6:	mov    edx,0x7059d367
  40c2fb:	add    ebx,DWORD PTR [esp+edx*1]
  40c2fe:	int    0xb6
  40c300:	jae    0x40c37d
  40c302:	and    al,BYTE PTR [edi]
  40c304:	mov    dl,0xa2
  40c306:	or     DWORD PTR [ebx],esp
  40c308:	int    0x3b
  40c30a:	retf   0x6596
  40c30d:	adc    eax,0xb97350a6
  40c312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c313:	aas    
  40c314:	int    0x53
  40c316:	sbb    DWORD PTR [ecx+0x46],ecx
  40c319:	mov    ds:0xf926bb65,eax
  40c31e:	and    esi,esi
  40c320:	jo     0x40c2e8
  40c322:	jbe    0x40c2c9
  40c324:	and    al,0xc4
  40c326:	daa    
  40c327:	and    eax,0x4731c833
  40c32c:	enter  0x8cbe,0xfe
  40c330:	not    BYTE PTR [ecx]
  40c332:	jmp    0x40c2f3
  40c334:	adc    dl,BYTE PTR gs:[ecx]
  40c337:	cmp    BYTE PTR [edi-0x2b],dl
  40c33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33b:	pop    esp
  40c33c:	scas   eax,DWORD PTR es:[edi]
  40c33d:	jbe    0x40c2d5
  40c33f:	pushf  
  40c340:	xchg   ebp,eax
  40c341:	and    eax,0x8844f644
  40c346:	xchg   ebx,eax
  40c347:	adc    DWORD PTR [esi-0xb61719c],edx
  40c34d:	jl     0x40c396
  40c34f:	jae    0x40c332
  40c351:	push   ss
  40c352:	aaa    
  40c353:	push   0x2a
  40c355:	loopne 0x40c351
  40c357:	xchg   esp,eax
  40c358:	popf   
  40c359:	test   al,0x64
  40c35c:	jno    0x40c3c8
  40c35e:	adc    edx,ecx
  40c360:	lahf   
  40c361:	or     al,0x29
  40c363:	inc    ebx
  40c364:	or     BYTE PTR [eax],bh
  40c366:	(bad)  
  40c368:	sahf   
  40c369:	mov    esi,0xb0734477
  40c36e:	test   eax,0x2d14f510
  40c373:	pop    eax
  40c374:	jb     0x40c3d6
  40c376:	xor    ch,bh
  40c378:	xchg   ecx,eax
  40c379:	(bad)  
  40c37a:	mul    BYTE PTR [eax-0x3c]
  40c37d:	out    dx,eax
  40c37e:	hlt    
  40c37f:	arpl   WORD PTR [ebx+0x12],cx
  40c382:	xchg   esp,eax
  40c383:	mov    dl,0xe0
  40c385:	fidivr DWORD PTR [ecx]
  40c387:	lahf   
  40c388:	leave  
  40c389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c38a:	xchg   edi,eax
  40c38b:	neg    DWORD PTR [edi-0x66]
  40c38e:	xchg   edi,eax
  40c38f:	inc    edx
  40c390:	call   0x2b954dc6
  40c395:	mov    bl,0x50
  40c397:	add    eax,0xe035b87b
  40c39c:	lods   al,BYTE PTR ds:[esi]
  40c39d:	int3   
  40c39e:	outs   dx,DWORD PTR ds:[esi]
  40c39f:	out    0x9f,al
  40c3a1:	iret   
  40c3a2:	gs int 0x94
  40c3a5:	in     eax,0xb7
  40c3a7:	or     eax,0xf5e5c075
  40c3ac:	stos   DWORD PTR es:[edi],eax
  40c3ad:	das    
  40c3ae:	outs   dx,BYTE PTR ds:[esi]
  40c3af:	clc    
  40c3b0:	pushf  
  40c3b1:	das    
  40c3b2:	fwait
  40c3b3:	xchg   esp,eax
  40c3b4:	fs out dx,al
  40c3b6:	pushf  
  40c3b7:	xchg   edx,eax
  40c3b8:	sub    DWORD PTR ds:0x5927719a,edi
  40c3be:	sbb    BYTE PTR [ecx],dl
  40c3c0:	(bad)  
  40c3c1:	xor    al,0xa3
  40c3c3:	mov    ebp,0x787150b1
  40c3c8:	in     al,dx
  40c3c9:	mov    cl,0xb8
  40c3cb:	and    eax,0x9b404f71
  40c3d0:	das    
  40c3d1:	cmp    eax,0x2651e8e4
  40c3d6:	aas    
  40c3d7:	mov    ds:0x9cb31cc0,eax
  40c3dc:	std    
  40c3dd:	lods   eax,DWORD PTR ds:[esi]
  40c3de:	push   ebp
  40c3df:	pop    edi
  40c3e0:	into   
  40c3e1:	shl    DWORD PTR ds:0x5f475d0,cl
  40c3e7:	nop
  40c3e8:	mov    ebp,0x30eaf26
  40c3ed:	xor    al,0x48
  40c3ef:	push   ebp
  40c3f0:	xor    esp,ecx
  40c3f2:	jmp    0x40c3a6
  40c3f4:	icebp  
  40c3f5:	push   ebp
  40c3f6:	daa    
  40c3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f8:	shr    BYTE PTR [edx-0x31662b19],1
  40c3fe:	in     al,0x33
  40c400:	or     eax,0xce8dbf2e
  40c405:	jnp    0x40c3ce
  40c407:	pop    ebx
  40c408:	push   0x3ff82493
  40c40d:	xchg   ebx,eax
  40c40e:	mov    eax,0xaeba8317
  40c413:	cmp    ah,BYTE PTR [esi-0x32]
  40c416:	mov    ecx,0xa7eff4e1
  40c41b:	cld    
  40c41c:	cli    
  40c41d:	xchg   esp,eax
  40c41e:	xor    edi,DWORD PTR [esi-0x7]
  40c421:	mov    ds:0xc7dc5629,al
  40c426:	icebp  
  40c427:	inc    edx
  40c428:	dec    bp
  40c42a:	in     al,dx
  40c42b:	add    eax,0x64bbe271
  40c430:	sar    ebp,cl
  40c432:	or     esp,esp
  40c434:	popf   
  40c435:	(bad)  
  40c436:	lods   eax,DWORD PTR ds:[esi]
  40c437:	das    
  40c438:	sub    eax,0xd64dd23e
  40c43d:	loope  0x40c432
  40c43f:	mov    dl,dl
  40c441:	add    bl,BYTE PTR [edi-0x18a9723c]
  40c447:	lods   eax,DWORD PTR ds:[esi]
  40c448:	jno    0x40c453
  40c44a:	jae    0x40c49c
  40c44c:	xchg   ebx,eax
  40c44d:	jno    0x40c456
  40c44f:	push   eax
  40c450:	jae    0x40c48c
  40c452:	sub    BYTE PTR [eax],0x5f
  40c455:	mov    DWORD PTR [ebx],edx
  40c457:	lahf   
  40c458:	inc    ebx
  40c459:	push   0x6645d2c8
  40c45e:	jnp    0x40c3fd
  40c460:	bound  edx,QWORD PTR [ebx]
  40c462:	push   ebx
  40c463:	xor    eax,eax
  40c465:	sub    DWORD PTR [esi-0x631e360e],esp
  40c46b:	call   0x57e1:0xc5b9a270
  40c472:	mov    ecx,DWORD PTR [ecx-0x216b714c]
  40c478:	enter  0xb83,0xb
  40c47c:	mov    ah,0x77
  40c47e:	fld    st(7)
  40c480:	jge    0x40c461
  40c482:	(bad)  [esi-0x516f266e]
  40c488:	sbb    BYTE PTR [edi+ebp*8],bh
  40c48b:	push   ecx
  40c48c:	icebp  
  40c48d:	stos   BYTE PTR es:[edi],al
  40c48e:	in     eax,0x99
  40c490:	sbb    BYTE PTR [ebx+ecx*4+0x5eaf2b3a],0x82
  40c498:	and    BYTE PTR [ecx-0x4],cl
  40c49b:	outs   dx,DWORD PTR ds:[esi]
  40c49c:	jecxz  0x40c4ca
  40c49e:	jns    0x40c4bf
  40c4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a1:	sbb    edx,DWORD PTR [ebx-0x16fe47c7]
  40c4a7:	or     al,0xde
  40c4a9:	loope  0x40c4c8
  40c4ab:	loop   0x40c4d4
  40c4ad:	ret    0x6712
  40c4b0:	fcomip st,st(1)
  40c4b2:	jns    0x40c456
  40c4b4:	inc    edx
  40c4b5:	(bad)  
  40c4b6:	sbb    DWORD PTR [edi+0x6a0f0597],esp
  40c4bc:	popf   
  40c4bd:	cmp    BYTE PTR [ebp+0x5ca44d6c],dh
  40c4c3:	out    dx,eax
  40c4c4:	add    eax,0xd58db058
  40c4c9:	push   ebx
  40c4ca:	sbb    ch,bh
  40c4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4cd:	mov    ds:0x16b4b7e2,eax
  40c4d2:	dec    esp
  40c4d3:	sub    eax,0x35915496
  40c4d8:	add    esi,esp
  40c4da:	mov    al,BYTE PTR [edi+esi*2]
  40c4dd:	push   es
  40c4de:	fstp   QWORD PTR [ecx]
  40c4e0:	div    BYTE PTR [edi+eiz*1-0x6d755bba]
  40c4e7:	add    ecx,DWORD PTR [ecx]
  40c4e9:	ret    
  40c4ea:	xchg   edx,eax
  40c4eb:	mov    BYTE PTR [esi-0x72],al
  40c4ee:	pop    ds
  40c4ef:	stc    
  40c4f0:	xchg   edi,eax
  40c4f1:	addr16 pop edi
  40c4f3:	call   0x54bb:0x77ceeff9
  40c4fa:	lds    esp,FWORD PTR [ecx+0x5a316cc4]
  40c500:	cs mov al,0x60
  40c503:	mov    bh,BYTE PTR [ecx+ebp*2+0x38]
  40c507:	and    DWORD PTR ds:0x685f6847,edx
  40c50d:	pop    eax
  40c50e:	pop    edx
  40c50f:	hlt    
  40c510:	sahf   
  40c511:	push   ebp
  40c512:	xor    al,0xd1
  40c514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c515:	mov    ecx,0x186d8d99
  40c51a:	sub    al,0xe6
  40c51c:	jl     0x40c4d1
  40c51e:	(bad)  
  40c520:	mov    bl,0xc3
  40c522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c523:	fwait
  40c524:	push   ecx
  40c525:	jae    0x40c545
  40c527:	pop    esi
  40c528:	inc    edx
  40c529:	pop    esi
  40c52a:	leave  
  40c52b:	pop    eax
  40c52c:	les    ecx,FWORD PTR [eax+0x6c]
  40c52f:	daa    
  40c530:	mov    edi,0xa84a65e
  40c535:	imul   edx,ecx,0x22
  40c538:	mov    esp,0x16ce749a
  40c53d:	pop    esp
  40c53e:	jae    0x40c4d2
  40c540:	iret   
  40c541:	int3   
  40c542:	inc    edi
  40c543:	sub    bh,BYTE PTR [ecx+0x270d5cb0]
  40c549:	and    al,0xd9
  40c54b:	or     al,0x8e
  40c54d:	pop    esi
  40c54e:	mov    dl,BYTE PTR [eax+0x3ac8fd38]
  40c554:	(bad)  
  40c555:	ss jno 0x40c4fb
  40c558:	mov    ecx,0x3d767acd
  40c55d:	mov    cl,0x15
  40c55f:	fcmovbe st,st(4)
  40c561:	mov    ah,BYTE PTR [ecx]
  40c563:	dec    esp
  40c564:	loop   0x40c500
  40c566:	mov    esi,0x541f5b80
  40c56b:	retf   0x112b
  40c56e:	in     eax,dx
  40c56f:	or     eax,0x46df88ca
  40c574:	pop    ss
  40c575:	xchg   ecx,eax
  40c576:	xor    al,0xdb
  40c578:	dec    esi
  40c579:	lods   al,BYTE PTR ds:[esi]
  40c57a:	into   
  40c57b:	cwde   
  40c57c:	stos   DWORD PTR es:[edi],eax
  40c57d:	adc    eax,0x6cfa9274
  40c582:	push   edi
  40c583:	inc    eax
  40c584:	mov    esi,0xfbf07a16
  40c589:	xor    eax,0x21434c38
  40c58e:	inc    edx
  40c58f:	setns  BYTE PTR [ebp+0x46]
  40c593:	push   0x7ba33cee
  40c598:	sahf   
  40c599:	jno    0x40c5f9
  40c59b:	adc    eax,0xe5ea74b1
  40c5a0:	or     ah,BYTE PTR [ecx-0x62]
  40c5a3:	fninit 
  40c5a5:	mov    WORD PTR [ecx],ss
  40c5a7:	xlat   BYTE PTR ds:[ebx]
  40c5a8:	xor    eax,0x784582d8
  40c5ad:	jno    0x40c607
  40c5af:	jns    0x40c607
  40c5b1:	cwde   
  40c5b2:	jmp    0x7fb21e73
  40c5b7:	jno    0x40c5a8
  40c5b9:	cli    
  40c5ba:	rcr    DWORD PTR [eax-0x15],cl
  40c5bd:	pushf  
  40c5be:	arpl   WORD PTR [ebp+0x17],si
  40c5c1:	jmp    0xc88b90fd
  40c5c6:	pop    esp
  40c5c7:	sbb    ch,BYTE PTR [eax]
  40c5c9:	xchg   ebx,eax
  40c5ca:	ja     0x40c610
  40c5cc:	ins    DWORD PTR es:[edi],dx
  40c5cd:	push   ebx
  40c5ce:	dec    ebx
  40c5cf:	sub    DWORD PTR [edi+ebp*1-0x6e],edx
  40c5d3:	and    eax,0x10bac8b4
  40c5d8:	loope  0x40c5ff
  40c5da:	mov    al,ds:0xd86ad61d
  40c5df:	pop    edi
  40c5e0:	test   DWORD PTR [esi+0x34628a1b],0xfab00c5c
  40c5ea:	and    ebx,ecx
  40c5ec:	fbstp  TBYTE PTR [edx-0x2b]
  40c5ef:	pop    ss
  40c5f0:	jecxz  0x40c5bf
  40c5f2:	div    BYTE PTR [ebx]
  40c5f4:	ins    DWORD PTR es:[edi],dx
  40c5f5:	mov    ch,BYTE PTR [ecx*4-0x5246d892]
  40c5fc:	sub    dl,bh
  40c5fe:	xchg   ebp,eax
  40c5ff:	mov    al,0x7e
  40c601:	and    BYTE PTR [esi-0x1dfd1874],bl
  40c607:	mov    dh,0xb3
  40c609:	add    BYTE PTR [ebp+0x3dcc7d4],cl
  40c60f:	jle    0x40c614
  40c611:	mov    eax,0x2dd7fdbe
  40c616:	jmp    0x40c5fb
  40c618:	cld    
  40c619:	stos   DWORD PTR es:[edi],eax
  40c61a:	add    ebx,DWORD PTR [esi+0x7a]
  40c61d:	lods   eax,DWORD PTR ds:[esi]
  40c61e:	lds    ecx,FWORD PTR ss:[ebx]
  40c621:	jge    0x40c691
  40c623:	mov    ecx,0xf24b01d
  40c628:	leave  
  40c629:	imul   ebx,DWORD PTR [ebx-0x56b2b319],0xcee94ea0
  40c633:	sbb    DWORD PTR [ebx],esi
  40c635:	ror    DWORD PTR [ebp-0x1a3fc77c],0x64
  40c63c:	add    BYTE PTR [ebx-0x6ccf383],cl
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	sahf   
  40cc3e:	push   es
  40cc3f:	sbb    eax,0x7ae5f8d3
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	mov    bh,0xae
  40cc4b:	jp     0x40cc75
  40cc4d:	mov    dl,0x38
  40cc4f:	jle    0x40cbd6
  40cc51:	xchg   esi,eax
  40cc52:	add    al,0x12
  40cc54:	lods   eax,DWORD PTR ds:[esi]
  40cc55:	push   cs
  40cc56:	inc    edx
  40cc57:	mov    eax,0xc585fc5a
  40cc5c:	push   esp
  40cc5d:	jl     0x40cc23
  40cc5f:	push   edx
  40cc60:	pop    edi
  40cc61:	and    al,0xf6
  40cc63:	ror    DWORD PTR [esi],1
  40cc65:	dec    ebx
  40cc66:	stos   BYTE PTR es:[edi],al
  40cc67:	jae    0x40ccc3
  40cc69:	imul   esp,DWORD PTR [esi+0x36],0xf382600f
  40cc70:	je     0x40cc54
  40cc72:	jecxz  0x40cc48
  40cc74:	lods   al,BYTE PTR ds:[esi]
  40cc75:	fmul   st(5),st
  40cc77:	test   BYTE PTR [ecx],bh
  40cc79:	and    BYTE PTR [esi+eiz*8-0x38],ch
  40cc7d:	les    eax,FWORD PTR [ebx+0x44]
  40cc80:	xor    dl,BYTE PTR ds:[ebp-0x14]
  40cc84:	leave  
  40cc85:	push   ebp
  40cc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc87:	mov    esi,0x318ebf60
  40cc8c:	aad    0xdb
  40cc8e:	fnsave [edx+ecx*4+0x2e5437e2]
  40cc95:	pop    ebx
  40cc96:	jnp    0x40cd07
  40cc98:	inc    esi
  40cc99:	fdivr  DWORD PTR [eax+0x342b5e7]
  40cc9f:	int3   
  40cca0:	(bad)  
  40cca1:	or     al,0xa7
  40cca3:	push   esp
  40cca4:	lods   eax,DWORD PTR ds:[esi]
  40cca5:	int    0x88
  40cca7:	xchg   esi,eax
  40cca8:	pop    esp
  40cca9:	add    ebp,ecx
  40ccab:	dec    ecx
  40ccac:	xor    edx,DWORD PTR [ebx+0x55]
  40ccaf:	dec    ecx
  40ccb0:	mov    cl,0xd3
  40ccb2:	push   ss
  40ccb3:	test   DWORD PTR [ebx-0x4c],eax
  40ccb6:	push   cs
  40ccb7:	test   DWORD PTR [esi-0x2f],0xb2a6f5ad
  40ccbe:	jge    0x40ccdb
  40ccc0:	test   eax,0xfdc33c14
  40ccc5:	xor    eax,0xdadec148
  40ccca:	inc    esi
  40cccb:	pop    es
  40cccc:	jno    0x40cd35
  40ccce:	mov    ah,0xb2
  40ccd0:	fcomp  st(3)
  40ccd2:	mov    ebp,0x95381bbf
  40ccd7:	in     al,0xcc
  40ccd9:	xchg   esi,edi
  40ccdb:	push   eax
  40ccdc:	or     BYTE PTR [ebx],ch
  40ccde:	(bad)
  40cce2:	loope  0x40cca2
  40cce4:	or     al,0xc3
  40cce6:	xchg   DWORD PTR [ebp+0x1],ebp
  40cce9:	pop    eax
  40ccea:	(bad)  
  40cceb:	mov    ah,0x32
  40cced:	(bad)
  40ccf0:	and    al,BYTE PTR [ebx]
  40ccf2:	cmp    esi,DWORD PTR [ecx-0x39166790]
  40ccf8:	jo     0x40cd05
  40ccfa:	scas   al,BYTE PTR es:[edi]
  40ccfb:	dec    esp
  40ccfc:	dec    edx
  40ccfd:	mov    WORD PTR [eax+0x704f8a],ss
  40cd03:	mov    eax,ds:0x9dcb1fb0
  40cd08:	(bad)  
  40cd09:	loopne 0x40cce4
  40cd0b:	out    dx,al
  40cd0c:	test   ah,ah
  40cd0e:	nop
  40cd0f:	adc    al,0xa2
  40cd11:	sub    cl,BYTE PTR [eax-0x2668a958]
  40cd17:	in     al,0x12
  40cd19:	dec    edi
  40cd1a:	lds    edx,FWORD PTR [edi]
  40cd1c:	(bad)  
  40cd1d:	adc    BYTE PTR es:[esp+edx*4],0x94
  40cd22:	jge    0x40cd22
  40cd24:	repnz fcmovbe st,st(4)
  40cd27:	test   al,0x86
  40cd29:	(bad)  
  40cd2a:	or     al,0xa5
  40cd2c:	enter  0xed6d,0x6e
  40cd30:	sbb    al,0xe8
  40cd32:	jno    0x40cd13
  40cd34:	add    DWORD PTR ds:[eax],0xffffff8c
  40cd38:	add    esp,DWORD PTR es:[edx+0x6f]
  40cd3c:	jbe    0x40cd8b
  40cd3e:	(bad)  
  40cd3f:	hlt    
  40cd40:	push   edi
  40cd41:	xchg   DWORD PTR [edi],ecx
  40cd43:	cdq    
  40cd44:	sbb    ch,al
  40cd46:	dec    ecx
  40cd47:	hlt    
  40cd48:	xor    esi,DWORD PTR [ebx+0x51]
  40cd4b:	cmp    BYTE PTR es:[ebx-0x37210c8e],0xee
  40cd53:	iret   
  40cd54:	pop    eax
  40cd55:	xor    DWORD PTR [bp+0xa6],ebp
  40cd5a:	inc    esi
  40cd5b:	imul   eax,DWORD PTR [ebx-0x4e8117],0xda13e54f
  40cd65:	ror    ch,0x93
  40cd68:	iret   
  40cd69:	jmp    0x9977:0x69264ffe
  40cd70:	shr    bl,1
  40cd72:	mov    ch,0x74
  40cd74:	pop    eax
  40cd75:	repz pop ebx
  40cd77:	(bad)  
  40cd78:	cld    
  40cd79:	ins    BYTE PTR es:[edi],dx
  40cd7a:	pop    ds
  40cd7b:	in     eax,dx
  40cd7c:	add    BYTE PTR [ebx+0x7e],ch
  40cd7f:	sbb    DWORD PTR [ecx],0x90bc8d7c
  40cd85:	aam    0x93
  40cd87:	retf   0x22a
  40cd8a:	sub    eax,0xcd48fb4d
  40cd8f:	add    BYTE PTR [esi+0x75e5497d],bh
  40cd95:	dec    edx
  40cd96:	cmp    BYTE PTR [edi+0x2195d4cc],0x9f
  40cd9d:	and    DWORD PTR [eax+0x20],edx
  40cda0:	mov    dh,ah
  40cda2:	js     0x40cdac
  40cda4:	and    edx,ebx
  40cda6:	xor    eax,0x20308f40
  40cdab:	ret    
  40cdac:	jno    0x40cdc8
  40cdae:	ins    DWORD PTR es:[edi],dx
  40cdaf:	cmp    esi,0xd
  40cdb2:	fs jne 0x40cdc1
  40cdb5:	test   eax,0x9b471505
  40cdba:	dec    edi
  40cdbb:	fmul   QWORD PTR [esi]
  40cdbd:	mov    BYTE PTR [ecx+eax*4+0x2c7460c9],bh
  40cdc4:	mov    esp,0x778e2077
  40cdc9:	arpl   WORD PTR [ebp-0x1c400b1c],bp
  40cdcf:	sub    DWORD PTR [esi],edx
  40cdd1:	mov    bl,al
  40cdd3:	nop
  40cdd4:	enter  0xb3d7,0x2d
  40cdd8:	jb     0x40cde4
  40cdda:	adc    DWORD PTR [esi-0x5e22d0c3],0xa1e032c5
  40cde4:	pop    eax
  40cde5:	push   edi
  40cde6:	fsubr  QWORD PTR [ecx+0x7dfd40a5]
  40cdec:	mov    ah,0x26
  40cdee:	call   FWORD PTR [eax-0xf]
  40cdf1:	imul   esp,DWORD PTR [ebp+0x1a8d185c],0x16
  40cdf8:	stos   DWORD PTR es:[edi],eax
  40cdf9:	cmc    
  40cdfa:	push   es
  40cdfb:	adc    al,0x8e
  40cdfd:	mov    al,0xbc
  40cdff:	xor    eax,0xd0f5f9aa
  40ce04:	push   ebp
  40ce05:	sbb    al,0xe9
  40ce07:	xchg   ebx,eax
  40ce08:	pop    edx
  40ce09:	repnz mov ch,0x64
  40ce0c:	mov    cs,WORD PTR [ebx]
  40ce0e:	mov    bl,0x44
  40ce10:	mul    DWORD PTR [eax-0x2a]
  40ce13:	ret    0x8598
  40ce16:	cmp    dh,BYTE PTR [ecx]
  40ce18:	and    al,BYTE PTR [ebx-0x2]
  40ce1b:	push   esi
  40ce1c:	daa    
  40ce1d:	xor    eax,0xd1d84f77
  40ce22:	add    BYTE PTR [ecx-0x4f083e2],dh
  40ce28:	lahf   
  40ce29:	hlt    
  40ce2a:	ss adc eax,0x8b5cdaae
  40ce30:	shl    cl,cl
  40ce32:	sbb    DWORD PTR [eax-0x2824658c],esp
  40ce38:	arpl   si,bp
  40ce3a:	mov    ch,BYTE PTR [esi+0x60]
  40ce3d:	fadd   QWORD PTR [edi]
  40ce3f:	push   DWORD PTR [ebx-0x555541b6]
  40ce45:	stos   DWORD PTR es:[edi],eax
  40ce46:	xor    bh,BYTE PTR [edi+0x24ba366c]
  40ce4c:	lods   eax,DWORD PTR ds:[esi]
  40ce4d:	push   eax
  40ce4e:	or     eax,0x4bfea30c
  40ce53:	add    eax,0x3f3f5ea9
  40ce58:	inc    ecx
  40ce59:	push   ebp
  40ce5a:	fld    TBYTE PTR ds:0x122e3185
  40ce60:	sbb    al,0x1c
  40ce62:	ss ins DWORD PTR es:[edi],dx
  40ce64:	outs   dx,DWORD PTR ds:[esi]
  40ce65:	fadd   DWORD PTR [ebx+0x30]
  40ce68:	push   esi
  40ce69:	inc    edi
  40ce6a:	xor    DWORD PTR [eax+eiz*8-0x18],0xffffffdf
  40ce6f:	lods   eax,DWORD PTR ds:[esi]
  40ce70:	fs je  0x40cdf7
  40ce73:	jbe    0x40ce8d
  40ce75:	icebp  
  40ce76:	aam    0x9b
  40ce78:	sub    eax,0xfa065b65
  40ce7d:	ret    0x1eb5
  40ce80:	dec    ebp
  40ce81:	pop    esi
  40ce82:	sbb    al,0xbe
  40ce84:	cmp    ebp,DWORD PTR [edx]
  40ce86:	add    ecx,ebp
  40ce88:	test   eax,0xdc8dd78b
  40ce8d:	inc    edi
  40ce8e:	out    0x32,al
  40ce90:	in     eax,0xa6
  40ce92:	les    ebp,FWORD PTR [eax+0x75]
  40ce95:	sbb    al,0x72
  40ce97:	mov    eax,0x8b6908b5
  40ce9c:	xor    al,dh
  40ce9e:	sbb    eax,0xf94a882b
  40cea3:	add    eax,0xd19cd31b
  40cea8:	xchg   ebp,eax
  40cea9:	push   eax
  40ceaa:	sahf   
  40ceab:	fsubr  QWORD PTR [ebx+0x62d396f8]
  40ceb1:	push   es
  40ceb2:	xchg   ebp,eax
  40ceb3:	aad    0x69
  40ceb5:	int3   
  40ceb6:	jge    0x40cef0
  40ceb8:	sub    BYTE PTR [eax-0x79],bh
  40cebb:	dec    ebx
  40cebc:	mov    al,0x6
  40cebe:	push   edi
  40cebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec0:	inc    ebp
  40cec1:	cli    
  40cec2:	adc    eax,0xc62801ba
  40cec7:	add    ch,ah
  40cec9:	push   esp
  40ceca:	enter  0x6e0e,0x9b
  40cece:	arpl   WORD PTR [edi],sp
  40ced0:	cmp    al,0x62
  40ced2:	mov    ds:0x8370f469,al
  40ced7:	push   cs
  40ced8:	les    edx,FWORD PTR [edx]
  40ceda:	inc    ebx
  40cedb:	xor    eax,DWORD PTR [esp+ecx*2]
  40cede:	mov    esp,0x3ebad05f
  40cee3:	lods   eax,DWORD PTR ds:[esi]
  40cee4:	xor    al,0xe7
  40cee6:	or     ebp,eax
  40cee8:	dec    esp
  40cee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceea:	adc    eax,0xf4feb1af
  40ceef:	mov    dh,0x1f
  40cef1:	retf   0x1536
  40cef4:	mov    bh,0x96
  40cef6:	pop    edi
  40cef7:	xchg   edi,eax
  40cef8:	xchg   esi,eax
  40cef9:	inc    dl
  40cefb:	inc    eax
  40cefc:	xor    DWORD PTR [edi],ecx
  40cefe:	cmp    esp,esi
  40cf00:	leave  
  40cf01:	cdq    
  40cf02:	xchg   edi,eax
  40cf03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf04:	lea    edx,[ecx-0x22]
  40cf07:	je     0x40cf86
  40cf09:	bt     DWORD PTR [eax-0x38],eax
  40cf0d:	inc    eax
  40cf0e:	stos   BYTE PTR es:[edi],al
  40cf0f:	xchg   edi,eax
  40cf10:	sti    
  40cf11:	cld    
  40cf12:	xor    eax,0x9ceaddae
  40cf17:	gs jl  0x40ce9f
  40cf1a:	pop    esp
  40cf1b:	je     0x40cec1
  40cf1d:	dec    eax
  40cf1e:	repz mov bh,0x24
  40cf21:	imul   eax,eax,0x35f20013
  40cf27:	je     0x40cf3e
  40cf29:	mov    esp,0x7673334e
  40cf2e:	push   eax
  40cf2f:	aad    0x87
  40cf31:	pushf  
  40cf32:	popa   
  40cf33:	and    DWORD PTR [edi],ebx
  40cf35:	mov    bl,0xf0
  40cf37:	fcomp  DWORD PTR [esi]
  40cf39:	in     al,dx
  40cf3a:	ret    
  40cf3b:	pushf  
  40cf3c:	xchg   ebx,eax
  40cf3d:	cmp    DWORD PTR [ebx+0x6e8c478f],ecx
  40cf43:	mov    ds:0xd750c6e5,eax
  40cf49:	leave  
  40cf4a:	test   ecx,eax
  40cf4c:	jmp    0x89cc:0x2d40a9cd
  40cf53:	inc    esp
  40cf54:	in     eax,dx
  40cf55:	ds inc ebp
  40cf57:	gs mov bh,0xaf
  40cf5a:	xchg   DWORD PTR [eax],esi
  40cf5c:	xchg   ecx,eax
  40cf5d:	std    
  40cf5e:	adc    WORD PTR [edi+0x13],0xff8a
  40cf63:	int    0x94
  40cf65:	lods   eax,DWORD PTR ds:[esi]
  40cf66:	int3   
  40cf67:	ins    BYTE PTR es:[edi],dx
  40cf68:	shl    DWORD PTR [eax-0x3d],0xc6
  40cf6c:	in     al,0xa9
  40cf6e:	jno    0x40cfb8
  40cf70:	inc    ecx
  40cf71:	sbb    al,0x4e
  40cf73:	ins    DWORD PTR es:[edi],dx
  40cf74:	fwait
  40cf75:	pop    esp
  40cf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf77:	inc    esp
  40cf78:	dec    ebp
  40cf79:	mov    ah,0x99
  40cf7b:	dec    DWORD PTR [ecx+ebp*8-0x51]
  40cf7f:	xor    al,0xf4
  40cf81:	xchg   esi,eax
  40cf82:	mov    ds:0x858a9b5a,eax
  40cf87:	add    al,0xf1
  40cf89:	les    esi,FWORD PTR [ebp-0x4970366f]
  40cf8f:	out    0xb,eax
  40cf91:	xor    esp,DWORD PTR [esi]
  40cf93:	dec    esp
  40cf94:	sti    
  40cf95:	shl    DWORD PTR [edi-0x19ea7f36],0xf
  40cf9c:	xor    eax,0xc66aa7bb
  40cfa1:	inc    ebx
  40cfa2:	cmp    BYTE PTR [edi],dl
  40cfa4:	pop    ebp
  40cfa5:	in     eax,0x25
  40cfa7:	stos   BYTE PTR es:[edi],al
  40cfa8:	xchg   DWORD PTR [ebx-0x23a16f0e],esp
  40cfae:	outs   dx,BYTE PTR ds:[esi]
  40cfb0:	push   esp
  40cfb1:	and    eax,DWORD PTR [edi-0x2a]
  40cfb4:	mov    esi,0x57c1b96c
  40cfb9:	enter  0xfbc4,0x91
  40cfbd:	(bad)  
  40cfbe:	or     edx,DWORD PTR [ecx-0x4]
  40cfc1:	adc    al,0xc1
  40cfc3:	jge    0x40cfd0
  40cfc5:	adc    dh,0xee
  40cfc8:	scas   al,BYTE PTR es:[edi]
  40cfc9:	sbb    BYTE PTR [esi-0x5159e557],ah
  40cfcf:	push   0xffffffb5
  40cfd1:	pop    ss
  40cfd2:	lea    ebp,[edx+edx*2+0x21bfd3f3]
  40cfd9:	shl    DWORD PTR [edi],0x63
  40cfdc:	lea    esp,ds:0xb6395f29
  40cfe2:	adc    edx,DWORD PTR [esi-0x375aa407]
  40cfe8:	sbb    dh,BYTE PTR [esi+0x5cbf749a]
  40cfee:	add    dh,BYTE PTR [esi]
  40cff0:	sub    edi,DWORD PTR [ecx+0x34f324c0]
  40cff6:	sub    DWORD PTR [ebx],edx
  40cff8:	xor    BYTE PTR [ebp+0x35f644f6],0xff
  40cfff:	xor    DWORD PTR [eax-0x7c],0xd36cd3e7
  40d006:	jecxz  0x40d061
  40d008:	or     al,0xf2
  40d00a:	enter  0xcd6b,0x61
  40d00e:	mov    ebx,0xabe7703d
  40d013:	inc    edi
  40d014:	sbb    al,0x6c
  40d016:	clc    
  40d017:	jb     0x40d094
  40d019:	adc    DWORD PTR [ecx-0x65],edx
  40d01c:	mov    bl,0x27
  40d01e:	sub    BYTE PTR [ecx+0x2e],ch
  40d021:	(bad)  [ebp+0x2bd58d0d]
  40d027:	inc    ecx
  40d028:	adc    BYTE PTR ds:0xcd7df91b,al
  40d02e:	jg     0x40d0af
  40d030:	and    eax,0x8b764dd8
  40d035:	aaa    
  40d036:	jno    0x40d030
  40d038:	test   bl,ch
  40d03a:	xor    DWORD PTR [ebp+esi*2-0x30],esi
  40d03e:	test   DWORD PTR [ebx+0x6221b7b5],0x457f76c3
  40d048:	mov    dl,0xc2
  40d04a:	imul   ebp,DWORD PTR cs:[edi-0x50ebbcbb],0xece524fd
  40d055:	cdq    
  40d056:	cmp    eax,0xcd0cadf5
  40d05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d05c:	call   0x314:0x43719cf5
  40d063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d064:	pop    esp
  40d065:	cmp    DWORD PTR [ebp+0x1d],ebp
  40d068:	clc    
  40d069:	rcl    DWORD PTR [edi-0x80],cl
  40d06c:	mov    ch,0xef
  40d06e:	dec    eax
  40d06f:	dec    edx
  40d070:	sbb    bh,ch
  40d072:	add    eax,DWORD PTR [edx-0x62]
  40d075:	push   eax
  40d076:	retf   0x7779
  40d079:	jns    0x40d0b4
  40d07b:	jb     0x40d003
  40d07d:	push   esi
  40d07e:	retf   0xabfe
  40d081:	xchg   esi,eax
  40d082:	imul   edx,DWORD PTR [ebx+0x19],0x7722bc6d
  40d089:	bound  edi,QWORD PTR [esi-0xae14f10]
  40d08f:	cmc    
  40d090:	xchg   ebp,eax
  40d091:	fcmovnb st,st(3)
  40d093:	mov    ds:0xd4f8da13,al
  40d098:	push   0xb
  40d09a:	test   ebp,ebp
  40d09c:	pop    ds
  40d09d:	cmp    DWORD PTR [eax+0x48],esp
  40d0a0:	dec    ecx
  40d0a1:	mov    eax,0xa578b306
  40d0a6:	push   edi
  40d0a7:	or     al,dh
  40d0a9:	mov    ds,WORD PTR [ebx-0x575ca781]
  40d0af:	jg     0x40d10a
  40d0b1:	dec    ebx
  40d0b2:	inc    edi
  40d0b3:	out    0xa3,al
  40d0b5:	cmp    BYTE PTR [edi-0x52e93a48],0xf3
  40d0bc:	sbb    BYTE PTR [ebp+0x2b540e19],al
  40d0c2:	dec    ebp
  40d0c3:	push   edi
  40d0c4:	icebp  
  40d0c5:	mov    esp,0x93551161
  40d0ca:	sbb    eax,esp
  40d0cc:	pusha  
  40d0cd:	xchg   ecx,edi
  40d0cf:	pop    esi
  40d0d0:	pushf  
  40d0d1:	outs   dx,DWORD PTR ds:[esi]
  40d0d2:	jmp    0x27077127
  40d0d7:	mov    bl,BYTE PTR [ecx]
  40d0d9:	cld    
  40d0da:	xor    eax,ecx
  40d0dc:	out    dx,eax
  40d0dd:	not    BYTE PTR [ebx+0x3ce3e1cc]
  40d0e3:	stos   BYTE PTR es:[edi],al
  40d0e4:	lahf   
  40d0e5:	jp     0x40d0d4
  40d0e7:	or     DWORD PTR [esp+edi*2-0x696f186a],0x5c398444
  40d0f2:	ret    0xa56a
  40d0f5:	ins    DWORD PTR es:[edi],dx
  40d0f6:	out    0x3f,eax
  40d0f8:	ret    
  40d0f9:	push   ss
  40d0fa:	jae    0x40d154
  40d0fc:	mov    ah,0x35
  40d0fe:	aam    0x8b
  40d100:	pushf  
  40d101:	sbb    al,0x2c
  40d103:	pop    eax
  40d104:	pop    edi
  40d105:	sbb    eax,DWORD PTR [esi]
  40d107:	dec    esp
  40d108:	push   edx
  40d109:	sub    dh,BYTE PTR [esi+0x20]
  40d10c:	ss push edx
  40d10e:	sub    eax,0xd3cd507
  40d113:	jmp    0xada99d42
  40d118:	jae    0x40d173
  40d11a:	mov    ebx,DWORD PTR [ebp-0x12]
  40d11d:	mov    dh,0xde
  40d11f:	aas    
  40d120:	vorpd  xmm6,xmm5,XMMWORD PTR [esp]
  40d125:	xchg   edx,eax
  40d126:	retf   
  40d127:	in     al,0x66
  40d129:	xchg   esi,eax
  40d12a:	cdq    
  40d12b:	fscale 
  40d12d:	div    DWORD PTR [eax]
  40d12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d130:	sar    DWORD PTR ds:0xfbd7b1d1,cl
  40d136:	lods   eax,DWORD PTR ds:[esi]
  40d137:	pushf  
  40d138:	add    BYTE PTR [edi+0x5c],0xee
  40d13c:	aam    0xdf
  40d13e:	fnstsw WORD PTR [edi+0x1d]
  40d141:	shr    ah,1
  40d143:	adc    cl,bh
  40d145:	xor    eax,0x339d3a55
  40d14a:	xor    eax,DWORD PTR [eax+ebx*4-0x4]
  40d14e:	std    
  40d14f:	cmp    BYTE PTR [ecx-0x1a],0x75
  40d153:	call   0xceb332f4
  40d158:	add    al,0x92
  40d15a:	test   eax,0xae5526a3
  40d15f:	and    DWORD PTR [edi-0x75],esp
  40d162:	out    dx,eax
  40d163:	xor    ebx,DWORD PTR [esi]
  40d165:	xor    ah,ah
  40d167:	int3   
  40d168:	fistp  QWORD PTR [ebx+0x36]
  40d16b:	aas    
  40d16c:	pop    ds
  40d16d:	pop    edi
  40d16e:	and    bh,BYTE PTR [ebx]
  40d170:	shl    DWORD PTR [esi+0xd5b70d],cl
  40d176:	loopne 0x40d160
  40d178:	inc    edi
  40d179:	adc    ebp,DWORD PTR [eax+0x3e6c28b9]
  40d17f:	add    ebp,DWORD PTR [ebp-0xf]
  40d182:	es ret 0x8438
  40d186:	cmp    eax,0x926290a0
  40d18b:	es popf 
  40d18d:	mov    dl,0x78
  40d18f:	in     al,0x7e
  40d191:	add    edx,esi
  40d193:	in     eax,0x95
  40d195:	call   0x7ea73e7a
  40d19a:	inc    esi
  40d19b:	mov    cl,0x25
  40d19d:	jnp    0x40d1ee
  40d19f:	std    
  40d1a0:	xchg   ebx,eax
  40d1a1:	sub    esp,ecx
  40d1a3:	sub    DWORD PTR [esi],edi
  40d1a5:	inc    edx
  40d1a6:	xchg   ebp,eax
  40d1a7:	pop    ss
  40d1a8:	inc    edi
  40d1a9:	hlt    
  40d1aa:	mov    ds:0xa3ec1016,al
  40d1af:	outs   dx,BYTE PTR ds:[esi]
  40d1b0:	dec    ebp
  40d1b1:	shl    eax,1
  40d1b3:	jae    0x40d1c3
  40d1b5:	je     0x40d1dc
  40d1b7:	pop    ebp
  40d1b8:	mov    bh,0xe5
  40d1ba:	or     BYTE PTR [edx+0x42],0xb
  40d1be:	fwait
  40d1bf:	xor    bh,BYTE PTR [ebx]
  40d1c1:	loopne 0x40d1e8
  40d1c3:	sbb    esp,esp
  40d1c5:	mov    BYTE PTR [esi],cl
  40d1c7:	push   ss
  40d1c8:	pop    ecx
  40d1c9:	inc    esp
  40d1ca:	test   bl,ah
  40d1cc:	or     al,0xfc
  40d1ce:	push   ebx
  40d1cf:	xor    cl,cl
  40d1d1:	mov    ch,0x6c
  40d1d3:	ds aas 
  40d1d5:	cmp    BYTE PTR ds:0x17eed426,bh
  40d1db:	clc    
  40d1dc:	pop    esp
  40d1dd:	inc    ebx
  40d1de:	aam    0x89
  40d1e0:	ret    
  40d1e1:	xchg   esi,eax
  40d1e2:	arpl   WORD PTR [eax+0x7e278e90],si
  40d1e8:	inc    edi
  40d1e9:	sbb    eax,0x42186ad8
  40d1ee:	xchg   ebp,eax
  40d1ef:	push   ebx
  40d1f0:	stos   BYTE PTR es:[edi],al
  40d1f1:	addr16 xchg edi,eax
  40d1f3:	mov    DWORD PTR [ebx+0x7ad64a5],esp
  40d1f9:	xchg   esi,eax
  40d1fa:	pop    ebx
  40d1fb:	sahf   
  40d1fc:	sub    eax,0x1e85b9ca
  40d201:	aad    0x6a
  40d203:	inc    eax
  40d204:	sub    al,BYTE PTR [ecx+ecx*8+0x57]
  40d208:	inc    ecx
  40d209:	fsub   st,st(0)
  40d20b:	repz (bad) 
  40d20d:	cmp    al,0xf2
  40d20f:	stc    
  40d210:	and    ch,BYTE PTR [ebx]
  40d212:	xchg   edi,eax
  40d213:	jne    0x40d206
  40d215:	hlt    
  40d216:	je     0x40d1fd
  40d218:	loope  0x40d1a1
  40d21a:	push   ds
  40d21b:	adc    al,0x34
  40d21d:	loopne 0x40d268
  40d21f:	xchg   ebp,eax
  40d220:	adc    esi,eax
  40d222:	popf   
  40d223:	mov    ds:0x6dc7ed60,eax
  40d228:	pop    ds
  40d229:	sbb    DWORD PTR [ecx],0x9d613a70
  40d22f:	pop    edi
  40d230:	mov    ah,0xfd
  40d232:	repnz rcl DWORD PTR [esp+ebp*4-0x14cc5392],1
  40d23a:	dec    eax
  40d23b:	fwait
  40d23c:	jmp    0x40d2ba
  40d23e:	dec    edx
  40d23f:	sub    al,0x25
  40d241:	xchg   edx,eax
  40d242:	push   edi
  40d243:	xchg   edx,eax
  40d244:	push   ds
  40d245:	pusha  
  40d246:	repnz mov bh,0x17
  40d249:	fbld   TBYTE PTR [edi-0x28]
  40d24c:	arpl   WORD PTR [ebx+0x9],di
  40d24f:	retf   0xb839
  40d252:	dec    ebp
  40d253:	sbb    edx,eax
  40d255:	inc    esi
  40d256:	sbb    dl,cl
  40d258:	mov    ds:0xabfccddb,al
  40d25d:	cmp    ecx,DWORD PTR [edx-0x66]
  40d260:	inc    eax
  40d261:	ror    BYTE PTR [eax-0x66],cl
  40d264:	jmp    0x4a75cf4d
  40d269:	mov    WORD PTR [ebx],ds
  40d26b:	mov    DWORD PTR [edi],ebp
  40d26d:	inc    edi
  40d26e:	dec    edi
  40d26f:	pop    ecx
  40d270:	(bad)  
  40d271:	in     al,0x7b
  40d273:	xchg   ebp,eax
  40d274:	leave  
  40d275:	mov    bl,0xc6
  40d277:	add    ebp,DWORD PTR [ebx-0x1c615cc3]
  40d27d:	popf   
  40d27e:	push   ebx
  40d27f:	dec    edx
  40d280:	mov    eax,0xb326f8a
  40d285:	pop    ecx
  40d286:	loope  0x40d239
  40d288:	mov    ds:0x7a132c05,al
  40d28d:	pop    es
  40d28e:	pop    esp
  40d28f:	cmp    DWORD PTR [ebp-0x9911439],edx
  40d295:	jnp    0x40d25e
  40d297:	push   eax
  40d298:	mov    edx,0x5f5e4f88
  40d29d:	or     esp,ebp
  40d29f:	fwait
  40d2a0:	add    DWORD PTR [eax-0x71],edi
  40d2a3:	mov    BYTE PTR [esi-0x40a5d2a4],0x2
  40d2aa:	or     BYTE PTR ds:0x1e59c3c0,cl
  40d2b0:	add    eax,0xd8a32d28
  40d2b5:	ficom  DWORD PTR [ebx-0x6e19c7fc]
  40d2bb:	mov    ebx,0xf16717f6
  40d2c0:	push   esi
  40d2c1:	mov    esp,0x465af128
  40d2c6:	sbb    BYTE PTR [esi],cl
  40d2c8:	pop    ebx
  40d2c9:	lods   al,BYTE PTR ds:[esi]
  40d2ca:	dec    ebx
  40d2cb:	sbb    BYTE PTR [edx-0x6ac6b496],0x1c
  40d2d2:	retf   
  40d2d3:	jnp    0x40d303
  40d2d5:	mov    edx,DWORD PTR [ebx]
  40d2d7:	jo     0x40d262
  40d2d9:	inc    edi
  40d2da:	scas   al,BYTE PTR es:[edi]
  40d2db:	push   0xb8b0e8c1
  40d2e0:	sub    DWORD PTR [esi],esp
  40d2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e3:	cmp    al,0xc1
  40d2e5:	test   BYTE PTR [edx],al
  40d2e7:	js     0x40d271
  40d2e9:	and    cl,BYTE PTR [eax+0x683fb38a]
  40d2ef:	mov    ds:0xb8229020,al
  40d2f4:	push   ebx
  40d2f5:	sub    al,0xab
  40d2f7:	call   0x8763f31c
  40d2fc:	push   0x76
  40d2fe:	pop    edi
  40d2ff:	imul   edi,DWORD PTR [ebx+0x53e32fc5],0xffffffdb
  40d306:	mov    ah,0x67
  40d308:	dec    ebx
  40d309:	cmp    DWORD PTR [edx+eax*4-0x38],ebp
  40d30d:	push   ebp
  40d30e:	push   ebp
  40d30f:	and    DWORD PTR [ecx],eax
  40d311:	(bad)  
  40d312:	jnp    0x40d2cf
  40d314:	adc    BYTE PTR [eax+0x7ac3b0fd],dh
  40d31a:	repz inc edi
  40d31c:	push   esp
  40d31d:	xchg   BYTE PTR [ecx],ch
  40d31f:	lahf   
  40d320:	jne    0x40d305
  40d322:	in     eax,0xcd
  40d324:	ds jo  0x40d355
  40d327:	mov    dl,0x7b
  40d329:	test   ah,dl
  40d32b:	rcl    BYTE PTR [ebx-0x10],1
  40d32e:	pop    ebp
  40d32f:	ror    BYTE PTR [edi],cl
  40d331:	jne    0x40d2eb
  40d333:	xor    al,0x9
  40d335:	cmc    
  40d336:	mov    ds:0x793568f6,al
  40d33b:	jnp    0x40d388
  40d33d:	or     DWORD PTR [ecx-0x52],0x12
  40d341:	arpl   WORD PTR [edi+0x9ae3bb5],ax
  40d347:	lods   al,BYTE PTR ds:[esi]
  40d348:	int    0x5f
  40d34a:	imul   ebx,ebp,0x58843a93
  40d350:	push   esp
  40d351:	scas   eax,DWORD PTR es:[edi]
  40d352:	mov    ds:0xdc90c8cc,al
  40d357:	cmp    edx,ecx
  40d359:	mov    ds:0x9a11a8a1,eax
  40d35e:	xor    edx,esp
  40d360:	mov    ebx,0xfa6ea3a3
  40d365:	outs   dx,DWORD PTR ds:[esi]
  40d366:	iret   
  40d367:	sbb    ecx,eax
  40d369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d36a:	(bad)  
  40d36c:	sbb    dh,BYTE PTR [edi+ebp*2]
  40d36f:	mov    cl,0x5b
  40d371:	lds    edx,FWORD PTR [eax-0x5e5e7fec]
  40d377:	std    
  40d378:	push   ecx
  40d379:	mov    dh,0x3d
  40d37b:	jge    0x40d32a
  40d37d:	daa    
  40d37e:	sub    DWORD PTR [ecx],edx
  40d380:	pop    ebp
  40d381:	das    
  40d382:	sub    edi,ecx
  40d384:	daa    
  40d385:	xchg   ebp,eax
  40d386:	jle    0x40d334
  40d388:	mov    cl,0x2
  40d38a:	lods   eax,DWORD PTR ds:[esi]
  40d38b:	xchg   BYTE PTR [ecx+0x0],dh
  40d38e:	loop   0x40d333
  40d390:	retf   
  40d391:	popa   
  40d392:	push   ecx
  40d393:	mov    al,0x91
  40d395:	aaa    
  40d396:	out    dx,eax
  40d397:	mov    al,0x2d
  40d399:	jo     0x40d3d4
  40d39b:	mov    BYTE PTR [ebp-0x7815c064],ah
  40d3a1:	mov    bl,0xd6
  40d3a3:	call   0x43d2:0x38a402fc
  40d3aa:	xchg   cl,cl
  40d3ac:	je     0x40d341
  40d3ae:	ds add al,0xe8
  40d3b1:	into   
  40d3b2:	ja     0x40d37e
  40d3b4:	sbb    ecx,eax
  40d3b6:	aas    
  40d3b7:	je     0x40d3e2
  40d3b9:	pop    edx
  40d3ba:	mov    bh,0x9
  40d3bc:	rol    BYTE PTR [ebx],0x91
  40d3bf:	sbb    eax,0x545bcc85
  40d3c4:	xchg   ebx,eax
  40d3c5:	mov    bl,0xcd
  40d3c7:	pop    edx
  40d3c8:	imul   ebx,DWORD PTR [esi+eiz*1-0x30],0xffffffd8
  40d3cd:	jg     0x40d3f5
  40d3cf:	pop    eax
  40d3d0:	clc    
  40d3d1:	jg     0x40d3d9
  40d3d3:	out    dx,eax
  40d3d4:	loope  0x40d423
  40d3d6:	(bad)
  40d3d9:	ins    DWORD PTR es:[edi],dx
  40d3da:	fadd   QWORD PTR [edx-0x1b82980d]
  40d3e0:	pushf  
  40d3e1:	adc    eax,0x440bdb52
  40d3e6:	mov    dh,0xa2
  40d3e8:	sub    al,0xab
  40d3ea:	stos   DWORD PTR es:[edi],eax
  40d3eb:	adc    BYTE PTR [eax+0x45],0x5c
  40d3ef:	lods   eax,DWORD PTR ds:[esi]
  40d3f0:	imul   ebp,esp,0x1c
  40d3f3:	(bad)  
  40d3f4:	pop    eax
  40d3f5:	(bad)  
  40d3f6:	pushf  
  40d3f7:	push   cs
  40d3f8:	xchg   ecx,eax
  40d3f9:	jmp    0x40d3ed
  40d3fb:	inc    ecx
  40d3fc:	iret   
  40d3fd:	adc    DWORD PTR [edx],edx
  40d3ff:	aaa    
  40d400:	pop    ss
  40d401:	ins    DWORD PTR es:[edi],dx
  40d402:	mov    esi,0xa49d55ad
  40d407:	fimul  WORD PTR [esi-0x3c]
  40d40a:	(bad)  
  40d40b:	cmp    bl,BYTE PTR [esi-0x581d0783]
  40d411:	and    eax,0xee585b40
  40d416:	mov    dl,BYTE PTR [eax+eiz*8+0x32]
  40d41a:	mov    DWORD PTR [eax-0x66b91e01],esp
  40d420:	(bad)  
  40d421:	mov    ch,0x3f
  40d423:	sbb    bh,dl
  40d425:	fwait
  40d426:	in     eax,dx
  40d427:	push   ss
  40d428:	sub    eax,0x289349c2
  40d42d:	in     al,0xdd
  40d42f:	xchg   edi,eax
  40d430:	inc    eax
  40d431:	ds dec ebp
  40d434:	and    al,0x3e
  40d436:	mov    al,0x6f
  40d438:	mov    ah,0x97
  40d43a:	loopne 0x40d3c3
  40d43c:	dec    edx
  40d43d:	mov    ah,0xf9
  40d43f:	add    eax,0x2fd6f65
  40d444:	icebp  
  40d445:	push   es
  40d446:	push   ebp
  40d447:	mov    bh,0x62
  40d449:	(bad)  
  40d44a:	(bad)  
  40d44b:	(bad)  
  40d44d:	cmp    eax,0xfad3a127
  40d452:	push   ebp
  40d453:	jle    0x40d434
  40d455:	mov    ds:0xf368f998,eax
  40d45a:	push   eax
  40d45b:	lock jmp 0x40d47d
  40d45e:	push   cs
  40d45f:	mov    WORD PTR [eax-0x7ca82310],es
  40d465:	adc    eax,0xacdf38a
  40d46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46b:	jnp    0x40d40f
  40d46d:	jns    0x40d40d
  40d46f:	pop    eax
  40d470:	xchg   esp,eax
  40d471:	inc    edx
  40d472:	inc    esp
  40d473:	or     DWORD PTR [edi+ebx*2-0x6529d46],esi
  40d47a:	jnp    0x40d45d
  40d47c:	out    0x48,al
  40d47e:	pop    ebx
  40d47f:	adc    BYTE PTR [edi-0x85115de],ch
  40d485:	aaa    
  40d486:	aam    0x6e
  40d488:	popa   
  40d489:	mov    ds:0x75a89100,eax
  40d48e:	lods   al,BYTE PTR ds:[esi]
  40d48f:	mov    DWORD PTR [edi+0x3b4fd079],ecx
  40d495:	push   ds
  40d496:	jmp    0x40d4b3
  40d498:	stc    
  40d499:	jmp    0xcd0123dd
  40d49e:	imul   ebx,DWORD PTR [ecx+0x28],0xc9bee65a
  40d4a5:	rcl    dh,0xab
  40d4a8:	in     eax,dx
  40d4a9:	inc    ebp
  40d4aa:	stc    
  40d4ab:	cld    
  40d4ac:	ins    DWORD PTR es:[edi],dx
  40d4ad:	retf   0x1ddc
  40d4b0:	sbb    DWORD PTR [ebx],ebx
  40d4b2:	jne    0x40d501
  40d4b4:	xchg   ecx,eax
  40d4b5:	xchg   ecx,eax
  40d4b6:	jae    0x40d4ec
  40d4b8:	pop    esp
  40d4b9:	mov    al,ds:0x42a82af0
  40d4be:	outs   dx,DWORD PTR ds:[esi]
  40d4bf:	jnp    0x40d477
  40d4c1:	inc    esp
  40d4c2:	stc    
  40d4c3:	or     DWORD PTR [ebp+0x19],edx
  40d4c6:	stos   DWORD PTR es:[edi],eax
  40d4c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4c8:	xor    bh,al
  40d4ca:	push   0xd130ea97
  40d4cf:	jg     0x40d547
  40d4d1:	xor    al,0x35
  40d4d3:	push   esp
  40d4d4:	mov    bh,BYTE PTR [eax-0x7ed797f3]
  40d4da:	in     eax,dx
  40d4db:	jl     0x40d4d4
  40d4dd:	or     al,0xf1
  40d4df:	xor    eax,0x14462ff8
  40d4e4:	sbb    al,0xcb
  40d4e6:	fidivr DWORD PTR [edx-0x80]
  40d4e9:	lahf   
  40d4ea:	xor    al,0x7b
  40d4ec:	mov    cl,0xdd
  40d4ee:	call   0x3fe8:0x1e5dd993
  40d4f5:	and    BYTE PTR [edx-0x58],dh
  40d4f8:	jne    0x40d4e8
  40d4fa:	inc    eax
  40d4fb:	cmp    al,0x7e
  40d4fd:	cmp    al,0x13
  40d4ff:	bound  edi,QWORD PTR [edi]
  40d501:	fnstsw WORD PTR [ebp+0x10ca98a]
  40d507:	test   eax,0xe96b08be
  40d50c:	and    eax,0x80dcf757
  40d511:	cwde   
  40d512:	fnstenv [edx-0x6d]
  40d515:	pop    ds
  40d516:	lods   al,BYTE PTR ds:[esi]
  40d517:	jp     0x40d4f2
  40d519:	daa    
  40d51a:	adc    eax,DWORD PTR [edi+0x3fccb056]
  40d520:	or     edx,DWORD PTR [edi-0xdc226c9]
  40d526:	jbe    0x40d535
  40d528:	or     ebx,DWORD PTR ds:0x67331d51
  40d52e:	mov    ch,BYTE PTR [ebp+0x3]
  40d531:	repnz stos BYTE PTR es:[edi],al
  40d533:	fcom   DWORD PTR [ebp+eiz*4-0x14bad419]
  40d53a:	sahf   
  40d53b:	test   BYTE PTR [ebx+0x273043b8],bh
  40d541:	dec    edi
  40d542:	pushf  
  40d543:	push   ss
  40d544:	shl    di,0xad
  40d548:	dec    esi
  40d549:	lods   al,BYTE PTR ds:[esi]
  40d54a:	(bad)  
  40d54b:	push   edx
  40d54c:	ret    0x32cf
  40d54f:	dec    ebp
  40d550:	sahf   
  40d551:	xchg   ebp,eax
  40d552:	push   edi
  40d553:	adc    DWORD PTR [ecx],edi
  40d555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d557:	or     BYTE PTR [ebp-0x7e80c575],ch
  40d55d:	push   0xffffffe0
  40d55f:	imul   edi,eax,0x16
  40d562:	leave  
  40d563:	bound  ecx,QWORD PTR [edx+edx*2]
  40d566:	imul   ecx,DWORD PTR [ecx],0x53
  40d569:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d56b:	imul   esi,DWORD PTR [edx-0x64],0xffffff97
  40d56f:	iret   
  40d570:	or     esp,ebp
  40d572:	inc    ebp
  40d573:	xchg   ebx,eax
  40d574:	ins    BYTE PTR es:[edi],dx
  40d575:	adc    esp,esp
  40d577:	inc    eax
  40d578:	es in  al,0xc5
  40d57b:	mov    ebx,ecx
  40d57d:	pop    ecx
  40d57e:	dec    ebp
  40d57f:	push   0x17
  40d581:	push   esp
  40d582:	repz (bad) 
  40d584:	test   eax,0x9caac39
  40d589:	xlat   BYTE PTR ds:[ebx]
  40d58a:	jb     0x40d5b5
  40d58c:	jo     0x40d5e2
  40d58e:	mov    al,ds:0x245aa36f
  40d593:	aam    0x25
  40d595:	mov    eax,0xd7ed5c15
  40d59a:	movlps QWORD PTR [edx],xmm1
  40d59d:	push   0xed2c1e2a
  40d5a2:	or     DWORD PTR [edi+edx*8+0x31f60a01],ecx
  40d5a9:	push   edi
  40d5aa:	mov    ch,0x4d
  40d5ac:	into   
  40d5ad:	sti    
  40d5ae:	dec    ebx
  40d5af:	and    eax,0xc9c7c6eb
  40d5b4:	sub    al,0x99
  40d5b6:	retf   0xdedc
  40d5b9:	(bad)  
  40d5ba:	cld    
  40d5bb:	(bad)  
  40d5bc:	and    ebx,ebp
  40d5be:	jbe    0x40d5b6
  40d5c0:	xchg   ebx,eax
  40d5c1:	setno  BYTE PTR [esi-0x69]
  40d5c5:	adc    esp,DWORD PTR [edi-0x27]
  40d5c8:	add    esp,DWORD PTR [esi]
  40d5ca:	push   ds
  40d5cb:	and    DWORD PTR [ecx+0x76],0xffffffbe
  40d5cf:	inc    ebp
  40d5d0:	nop
  40d5d1:	pop    ds
  40d5d2:	(bad)  
  40d5d3:	mov    edi,0x1d68e6f0
  40d5d8:	idiv   DWORD PTR [ebp+0x5b]
  40d5db:	dec    edx
  40d5dc:	sub    ah,BYTE PTR [ebx]
  40d5de:	push   esp
  40d5df:	pop    esp
  40d5e0:	mov    ds:0xcfbf600b,al
  40d5e5:	pop    eax
  40d5e6:	sub    eax,0xa80b1c7e
  40d5eb:	push   0x52408d3d
  40d5f0:	in     eax,0x1a
  40d5f2:	jecxz  0x40d648
  40d5f4:	jb     0x40d5e7
  40d5f6:	out    dx,al
  40d5f7:	xchg   BYTE PTR [edx-0x22],al
  40d5fa:	loope  0x40d586
  40d5fc:	push   ebx
  40d5fd:	mov    edi,0x262be415
  40d602:	jmp    0xd192ce36
  40d607:	pop    ss
  40d608:	fild   QWORD PTR [ebx+0x37]
  40d60b:	inc    eax
  40d60c:	mov    ecx,DWORD PTR [esi]
  40d60e:	idiv   BYTE PTR [ecx-0x3ba0c7bf]
  40d614:	jge    0x40d66c
  40d616:	std    
  40d617:	adc    edx,DWORD PTR [edx+0x7c]
  40d61a:	xchg   esp,eax
  40d61b:	and    al,0x10
  40d61d:	pop    edx
  40d61e:	inc    edi
  40d61f:	aaa    
  40d620:	mov    dh,0xef
  40d622:	xor    edx,DWORD PTR ds:0x582fa921
  40d628:	ins    BYTE PTR es:[edi],dx
  40d629:	cdq    
  40d62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d62b:	ins    BYTE PTR es:[edi],dx
  40d62c:	xor    al,0x68
  40d62e:	and    eax,0xd503a1b2
  40d633:	pushf  
  40d634:	and    ah,ah
  40d636:	jbe    0x40d5dd
  40d638:	mov    esi,0xebd9f1ba
  40d63d:	inc    edx
  40d63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d63f:	jl     0x40d64e
  40d641:	in     eax,dx
  40d642:	and    dl,BYTE PTR [ebx+0x4506284f]
  40d648:	leavew 
  40d64a:	push   eax
  40d64b:	xchg   ecx,eax
  40d64c:	test   eax,0x3e32f305
  40d651:	not    BYTE PTR [esp+ebp*2+0x1]
  40d655:	add    ebp,DWORD PTR fs:[ebx+ebx*4+0x65708547]
  40d65d:	aaa    
  40d65e:	jae    0x40d653
  40d660:	call   0x5f6f:0xe5d27ab6
  40d667:	push   ss
  40d668:	sbb    edi,edi
  40d66a:	sahf   
  40d66b:	fisubr DWORD PTR [eax+0x9000680]
  40d671:	add    esp,edx
  40d673:	mov    edx,0x769ebd41
  40d678:	jecxz  0x40d68f
  40d67a:	iret   
  40d67b:	sbb    cl,ch
  40d67d:	push   ecx
  40d67e:	inc    edi
  40d67f:	pushf  
  40d680:	pop    es
  40d681:	enter  0x2ece,0x63
  40d685:	in     eax,0xb5
  40d687:	in     al,0x54
  40d689:	sub    eax,0x5d1b979b
  40d68e:	push   esi
  40d68f:	xchg   esi,eax
  40d690:	jmp    0x3c39cff3
  40d695:	(bad)  
  40d696:	sub    DWORD PTR [edi+eiz*1-0x58e44a3],eax
  40d69d:	mov    ds:0x4fbadb34,eax
  40d6a2:	inc    ecx
  40d6a3:	aad    0x9f
  40d6a5:	or     DWORD PTR ds:0xb5d1ca41,eax
  40d6ab:	ins    BYTE PTR es:[edi],dx
  40d6ac:	imul   esi,DWORD PTR [ecx],0x2b
  40d6af:	stos   DWORD PTR es:[edi],eax
  40d6b0:	mov    al,ds:0x1f7c9a4b
  40d6b5:	dec    edi
  40d6b6:	pusha  
  40d6b7:	sahf   
  40d6b8:	outs   dx,BYTE PTR ds:[esi]
  40d6b9:	ss jg  0x40d6ba
  40d6bc:	ds icebp 
  40d6be:	cdq    
  40d6bf:	jbe    0x40d6fa
  40d6c1:	inc    BYTE PTR [ecx+0xc36099]
  40d6c7:	cmp    al,0x6f
  40d6c9:	nop
  40d6ca:	ss adc eax,0xd7a936b
  40d6d0:	hlt    
  40d6d1:	jae    0x40d73c
  40d6d3:	jle    0x40d699
  40d6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d6:	push   ebp
  40d6d7:	xor    DWORD PTR [ecx-0x75c31bb],edi
  40d6dd:	jp     0x40d729
  40d6df:	pushf  
  40d6e0:	cmc    
  40d6e1:	sbb    DWORD PTR [eax],ebp
  40d6e3:	mov    ebx,0xcbc2d7f3
  40d6e8:	scas   eax,DWORD PTR es:[edi]
  40d6e9:	and    DWORD PTR [ecx+0x64],esp
  40d6ec:	jp     0x40d6d8
  40d6ee:	jle    0x40d689
  40d6f0:	sub    BYTE PTR [edi-0x57],bl
  40d6f3:	retf   
  40d6f4:	test   eax,0xada07c54
  40d6f9:	add    eax,0xaf835aab
  40d6fe:	sbb    cl,BYTE PTR [edx-0x37f90020]
  40d704:	and    BYTE PTR [ecx],dl
  40d706:	nop
  40d707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d708:	das    
  40d709:	cmp    DWORD PTR [eax+0x2379a795],0x99736dc9
  40d713:	fst    QWORD PTR [edx]
  40d715:	test   al,0xd6
  40d717:	add    esp,DWORD PTR [ecx]
  40d719:	data16 (bad) 
  40d71b:	mov    cl,0x7e
  40d71d:	push   esi
  40d71e:	in     eax,0x33
  40d720:	mov    ds:0x530aa9be,al
  40d725:	repnz add ecx,DWORD PTR [eax]
  40d728:	scas   al,BYTE PTR es:[edi]
  40d729:	les    ebp,FWORD PTR [ecx]
  40d72b:	iret   
  40d72c:	pushf  
  40d72d:	push   ebp
  40d72e:	mov    WORD PTR gs:[ebx],?
  40d731:	in     eax,0x7
  40d733:	leave  
  40d734:	stc    
  40d735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d736:	jns    0x40d780
  40d738:	dec    esi
  40d739:	rol    DWORD PTR [esi-0x155a3bff],0xd7
  40d740:	je     0x40d6dd
  40d742:	stc    
  40d743:	outs   dx,DWORD PTR ds:[esi]
  40d744:	fcmovnbe st,st(4)
  40d746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d747:	ret    
  40d748:	sbb    ecx,ecx
  40d74a:	pop    esi
  40d74b:	(bad)  
  40d74c:	aad    0x41
  40d74e:	mov    cl,0x6
  40d750:	jno    0x40d756
  40d752:	or     DWORD PTR [edx+ebx*8+0x1b2c710e],0x833c3ec7
  40d75d:	push   esi
  40d75e:	dec    esp
  40d75f:	pop    ebx
  40d760:	and    BYTE PTR ds:[edi+0xe],bl
  40d764:	sub    DWORD PTR ds:0x5879e1bb,0xfdf34533
  40d76e:	jnp    0x40d7e0
  40d770:	sbb    DWORD PTR [edi+0x3f14e078],esi
  40d776:	cmp    eax,0xb84d576a
  40d77b:	lds    edx,FWORD PTR [esi-0x1beb4df9]
  40d781:	pop    ecx
  40d782:	or     cl,BYTE PTR [ebx+0x6ecc0d59]
  40d788:	xchg   ecx,eax
  40d789:	stc    
  40d78a:	jbe    0x40d772
  40d78c:	and    dl,BYTE PTR [ebx-0x1d]
  40d78f:	or     bl,BYTE PTR [esi+ebp*4]
  40d792:	cmp    DWORD PTR [ebx-0x52],esi
  40d795:	mov    bl,0x90
  40d797:	pop    eax
  40d798:	adc    al,0x29
  40d79a:	sbb    BYTE PTR [eax+0x63],cl
  40d79d:	adc    al,0x45
  40d79f:	mov    bh,BYTE PTR [ecx+0x6]
  40d7a2:	mov    edx,0x7fbb2b9
  40d7a7:	mov    ch,0xd5
  40d7a9:	cld    
  40d7aa:	sub    cl,BYTE PTR [edx]
  40d7ac:	jg     0x40d745
  40d7ae:	sahf   
  40d7af:	call   0xdee2040
  40d7b4:	xchg   ebx,eax
  40d7b5:	call   DWORD PTR [eax+edi*1+0x1147535b]
  40d7bc:	outs   dx,BYTE PTR ds:[esi]
  40d7bd:	mov    esi,0xf415b0e4
  40d7c2:	retf   0x92d8
  40d7c5:	xchg   ebp,eax
  40d7c6:	in     eax,0xe1
  40d7c8:	or     eax,0x4249a834
  40d7cd:	in     eax,0xa9
  40d7cf:	mov    eax,0x1814ef6e
  40d7d4:	dec    eax
  40d7d5:	daa    
  40d7d6:	and    DWORD PTR [esp+edi*4],edx
  40d7d9:	jecxz  0x40d767
  40d7db:	inc    edx
  40d7dc:	jns    0x40d7c4
  40d7de:	mov    cs,WORD PTR fs:[eax]
  40d7e1:	sahf   
  40d7e2:	add    bh,BYTE PTR [esi+0x30fda0d0]
  40d7e8:	mov    al,0xb
  40d7ea:	sub    eax,0x3746ef74
  40d7ef:	mov    ebp,0xf738399e
  40d7f4:	or     DWORD PTR [ecx],ecx
  40d7f6:	daa    
  40d7f7:	jmp    0x4aad:0x56c89f38
  40d7fe:	jg     0x40d834
  40d800:	cmp    eax,0x79a59b0e
  40d805:	and    bl,BYTE PTR [eax-0x1185f63d]
  40d80b:	jb     0x40d82f
  40d80d:	mov    dl,0xbd
  40d80f:	jp     0x40d854
  40d811:	(bad)
  40d815:	inc    ebp
  40d816:	lock (bad) 
  40d819:	retf   
  40d81a:	jne    0x40d81e
  40d81c:	sbb    al,0xa7
  40d81e:	dec    eax
  40d81f:	sub    DWORD PTR [eax-0x190c2a00],edx
  40d825:	inc    ebx
  40d826:	ins    DWORD PTR es:[edi],dx
  40d827:	cmp    al,BYTE PTR [edi+0x24cb3265]
  40d82d:	repz push edx
  40d82f:	mov    WORD PTR [ebx+0x2579d6b],cs
  40d835:	xchg   esi,eax
  40d836:	xlat   BYTE PTR ds:[ebx]
  40d837:	sub    ebp,eax
  40d839:	mov    esp,0x66e7d9f8
  40d83e:	dec    edx
  40d83f:	mov    edx,0xccf4948f
  40d844:	cmp    al,0xd9
  40d846:	loop   0x40d85f
  40d848:	out    0xcd,al
  40d84a:	fistp  DWORD PTR [esi+0xd]
  40d84d:	xchg   esp,eax
  40d84e:	sbb    al,0xbe
  40d850:	inc    ebx
  40d851:	or     bl,BYTE PTR [edi-0xc]
  40d854:	es pop ss
  40d856:	dec    ecx
  40d857:	dec    edx
  40d858:	xchg   ebp,eax
  40d859:	cmp    BYTE PTR ds:0x473891b7,al
  40d85f:	pop    eax
  40d860:	inc    ebp
  40d861:	icebp  
  40d862:	mov    al,0x1d
  40d864:	lods   eax,DWORD PTR ds:[esi]
  40d865:	jo     0x40d836
  40d867:	jp     0x76bcae1f
  40d86d:	inc    edi
  40d86e:	or     dl,BYTE PTR [ecx]
  40d870:	test   DWORD PTR [ebx],edi
  40d872:	pop    es
  40d873:	cmp    eax,0x78efd8d6
  40d878:	out    dx,eax
  40d879:	jmp    DWORD PTR [eax+0x44294c69]
  40d87f:	pop    edi
  40d880:	push   0xdfbd722f
  40d885:	pop    esi
  40d886:	(bad)  
  40d887:	mov    ebp,0xd7048675
  40d88c:	ss popa 
  40d88e:	and    esp,0x7782e800
  40d894:	test   DWORD PTR [esi+0x4cdf2283],ebp
  40d89a:	ret    0x259c
  40d89d:	mov    ah,0x77
  40d8a0:	outs   dx,BYTE PTR ds:[esi]
  40d8a1:	and    BYTE PTR [edi+0x75],ah
  40d8a4:	lds    edx,FWORD PTR [ebx+0x1d]
  40d8a7:	in     eax,dx
  40d8a8:	sahf   
  40d8a9:	out    0xcb,eax
  40d8ab:	shl    BYTE PTR [eax+0x522c8532],0xf3
  40d8b2:	jne    0x40d845
  40d8b4:	and    ch,BYTE PTR [edi]
  40d8b6:	xor    DWORD PTR [ebx],0x800169f4
  40d8bc:	sub    eax,0x1bab1340
  40d8c1:	sub    bl,BYTE PTR ss:[ecx-0x54]
  40d8c5:	loope  0x40d92c
  40d8c7:	icebp  
  40d8c8:	sub    edx,esp
  40d8ca:	push   0x2669990
  40d8cf:	pop    edi
  40d8d0:	cld    
  40d8d1:	aad    0x79
  40d8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d4:	mov    edx,0x2e9fe92d
  40d8d9:	call   ebx
  40d8db:	jmp    0x8dbe1263
  40d8e0:	(bad)  
  40d8e2:	dec    esp
  40d8e3:	cmp    esi,DWORD PTR [eax+0x7250dd69]
  40d8e9:	add    ebx,DWORD PTR [ebx+0x64]
  40d8ec:	jg     0x40d916
  40d8ee:	shl    BYTE PTR [edi+0x6873ce0a],cl
  40d8f4:	repnz les edx,FWORD PTR [ebx+0x7dbb6238]
  40d8fb:	mov    ds,WORD PTR [eax]
  40d8fd:	int    0xc8
  40d8ff:	mov    ds:0xf46e9cf9,al
  40d904:	mov    edi,0x5bb6fbf4
  40d909:	out    dx,eax
  40d90a:	imul   esi,DWORD PTR [esi+0x42],0x4d281ecd
  40d911:	push   edi
  40d912:	pop    edx
  40d913:	and    ebx,DWORD PTR [eax+eax*4+0x4f]
  40d917:	push   edi
  40d918:	inc    edi
  40d919:	cmp    DWORD PTR [eax+edi*2],0x4abefbdc
  40d920:	push   ds
  40d921:	cmc    
  40d922:	je     0x40d8fe
  40d924:	xchg   ecx,eax
  40d925:	and    ecx,DWORD PTR [edx-0x35db1633]
  40d92b:	jg     0x40d8dc
  40d92d:	in     al,0x1d
  40d92f:	lea    edx,[ecx+0x44117858]
  40d935:	mov    bh,BYTE PTR [eax-0x4c34463a]
  40d93b:	dec    ebp
  40d93c:	pusha  
  40d93d:	lods   al,BYTE PTR ds:[esi]
  40d93e:	fdiv   DWORD PTR [ecx]
  40d940:	test   al,0x79
  40d942:	inc    ebx
  40d943:	mov    esp,0x8a2a6888
  40d948:	sbb    DWORD PTR [ecx-0x5434e6c5],eax
  40d94e:	int    0xcd
  40d950:	sub    eax,0xe39cd707
  40d955:	in     al,dx
  40d956:	dec    esp
  40d957:	cmp    eax,0xc8b4d2ef
  40d95c:	ja     0x40d92b
  40d95e:	retf   0xa2ee
  40d961:	sbb    ebx,edi
  40d963:	outs   dx,BYTE PTR ds:[esi]
  40d964:	xor    BYTE PTR [ebp+0x637a379a],cl
  40d96a:	out    dx,eax
  40d96b:	dec    edi
  40d96c:	das    
  40d96d:	lahf   
  40d96e:	sti    
  40d96f:	aaa    
  40d970:	(bad)  
  40d972:	std    
  40d973:	(bad)  
  40d974:	icebp  
  40d975:	rcr    DWORD PTR ds:0x35c4423e,0xd6
  40d97c:	push   0x53
  40d97e:	mov    al,0xf7
  40d980:	je     0x40d990
  40d982:	fidivr WORD PTR [esi-0x45]
  40d985:	dec    eax
  40d986:	sbb    BYTE PTR [edx-0x3c0d40e3],ah
  40d98c:	add    eax,0x524f8fbc
  40d991:	jmp    0x1a4d8eac
  40d996:	add    esp,ebx
  40d998:	mov    esi,0x94d9be58
  40d99d:	push   esi
  40d99e:	arpl   WORD PTR [edx-0x4229eec0],bx
  40d9a4:	loope  0x40da12
  40d9a6:	sbb    DWORD PTR cs:[edi],ecx
  40d9a9:	stos   DWORD PTR es:[edi],eax
  40d9aa:	arpl   WORD PTR [ecx],di
  40d9ac:	stc    
  40d9ad:	mov    eax,ds:0x3b5d22e6
  40d9b2:	in     ax,0xc5
  40d9b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b6:	fadd   DWORD PTR [edi+0x28629be0]
  40d9bc:	xchg   ecx,eax
  40d9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9be:	push   0x39
  40d9c0:	inc    ebx
  40d9c1:	inc    edx
  40d9c2:	pushf  
  40d9c3:	data16 jnp 0x40d9d1
  40d9c6:	ret    0x4b48
  40d9c9:	xor    BYTE PTR [ebx+eax*8-0x5382320c],dl
  40d9d0:	sbb    ah,cl
  40d9d2:	pop    esp
  40d9d3:	ds jge 0x40da28
  40d9d6:	sbb    eax,esp
  40d9d8:	sub    eax,0x612a7f20
  40d9dd:	sbb    bl,cl
  40d9df:	pop    edx
  40d9e0:	retf   
  40d9e1:	and    bh,bh
  40d9e3:	js     0x40da01
  40d9e5:	and    al,0x9b
  40d9e7:	cwde   
  40d9e8:	lds    edi,FWORD PTR [eax+eax*1+0x3a]
  40d9ec:	call   0x9e0d:0x300ed958
  40d9f3:	sub    eax,0xd74b5bfd
  40d9f8:	jae    0x40da22
  40d9fa:	(bad)  
  40d9fb:	adc    eax,esi
  40d9fd:	fld    QWORD PTR [eax+0x26d334f8]
  40da03:	ja     0x40d9ee
  40da05:	push   eax
  40da06:	(bad)  
  40da07:	mov    al,0xce
  40da09:	(bad)  [ebp-0x1b]
  40da0c:	push   edx
  40da0d:	xchg   ecx,eax
  40da0e:	dec    eax
  40da0f:	les    sp,DWORD PTR [eax-0x5]
  40da13:	imul   edx,DWORD PTR [esi],0x19593186
  40da19:	jb     0x40d99f
  40da1b:	cmp    BYTE PTR ds:0x577e8c22,al
  40da21:	cli    
  40da22:	mov    bl,0x98
  40da24:	lods   eax,DWORD PTR ds:[esi]
  40da25:	mov    eax,ds:0xb6676a3
  40da2a:	pop    ds
  40da2b:	and    DWORD PTR [ecx-0x2123a72b],edi
  40da31:	stos   DWORD PTR es:[edi],eax
  40da32:	daa    
  40da33:	in     al,0xda
  40da35:	cmp    edx,DWORD PTR [eax]
  40da37:	lods   al,BYTE PTR ds:[esi]
  40da38:	dec    ebp
  40da39:	sbb    BYTE PTR [ebp-0x45],0xc2
  40da3d:	sub    DWORD PTR [edx+0x49],ebx
  40da40:	scas   eax,DWORD PTR es:[edi]
  40da41:	xchg   BYTE PTR [edi-0x28],al
  40da44:	cmp    bl,ah
  40da46:	cmp    BYTE PTR [ebx+0x5d8f0da2],0x87
  40da4d:	inc    ebp
  40da4e:	pop    edx
  40da4f:	fisttp DWORD PTR [edi-0xfda22f1]
  40da55:	and    ecx,DWORD PTR [edx]
  40da57:	dec    edi
  40da58:	and    BYTE PTR [esi-0x5b69dda5],dh
  40da5e:	mov    esp,edi
  40da60:	mov    al,ds:0x20b4532
  40da65:	or     ebx,DWORD PTR [eax-0xc]
  40da68:	aad    0xa2
  40da6a:	outs   dx,BYTE PTR ds:[esi]
  40da6b:	dec    edx
  40da6c:	mov    bh,0x93
  40da6e:	jp     0x40dad6
  40da70:	or     ecx,esp
  40da72:	ss (bad) 
  40da74:	jp     0x40da73
  40da76:	pop    ebx
  40da77:	arpl   WORD PTR [ebp+0x2eeda67e],sp
  40da7d:	cdq    
  40da7e:	scas   al,BYTE PTR es:[edi]
  40da7f:	jecxz  0x40da97
  40da81:	and    eax,DWORD PTR [eax-0x72]
  40da84:	repnz dec eax
  40da86:	adc    al,0x92
  40da88:	sti    
  40da89:	mov    WORD PTR [eax],gs
  40da8b:	fsubr  st,st(4)
  40da8d:	pop    esi
  40da8e:	shl    BYTE PTR [ebp+ecx*8-0x6e932cd5],0x95
  40da96:	enter  0x5a22,0xb6
  40da9a:	outs   dx,DWORD PTR ds:[esi]
  40da9b:	jnp    0x40da7f
  40da9d:	scas   eax,DWORD PTR es:[edi]
  40da9e:	(bad)  
  40da9f:	xor    eax,DWORD PTR [ebx+ecx*2]
  40daa2:	jo     0x40da72
  40daa4:	loope  0x40da60
  40daa6:	dec    edx
  40daa7:	or     al,0x88
  40daa9:	pop    ebx
  40daaa:	cs cli 
  40daac:	sub    DWORD PTR [edi],ecx
  40daae:	mov    BYTE PTR [edx-0x2ee22776],dl
  40dab4:	sahf   
  40dab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab6:	sbb    eax,DWORD PTR [esi-0xe]
  40dab9:	pushf  
  40daba:	sbb    eax,0x99ab08b5
  40dabf:	js     0x40dab2
  40dac1:	mov    esp,0x7fade92e
  40dac6:	(bad)  
  40dac7:	mov    ds:0x92f73128,eax
  40dacc:	jle    0x40dad1
  40dace:	mov    al,ds:0x8a0e1171
  40dad3:	xchg   edi,eax
  40dad4:	add    esi,DWORD PTR [eax+ebx*4-0x4a]
  40dad8:	cmp    DWORD PTR [edx+0x38],ebp
  40dadb:	fs mov esi,esi
  40dade:	pushf  
  40dadf:	xchg   esp,eax
  40dae0:	inc    esp
  40dae1:	fadd   DWORD PTR [edi+ebx*1-0x48]
  40dae5:	data16 in al,0x16
  40dae8:	cmp    ah,dh
  40daea:	and    dl,bh
  40daec:	sahf   
  40daed:	mov    edx,0xc5d05e1
  40daf2:	cmp    cl,bh
  40daf4:	dec    eax
  40daf5:	xor    edi,eax
  40daf7:	dec    edx
  40daf8:	pop    ebp
  40daf9:	cdq    
  40dafa:	mov    esp,edx
  40dafc:	sub    BYTE PTR [esi+0x5b],ch
  40daff:	(bad)  
  40db00:	or     al,0x59
  40db02:	push   ebp
  40db03:	jbe    0x40db77
  40db05:	retf   0x716d
  40db08:	sti    
  40db09:	mov    dl,0x6a
  40db0b:	es and al,0xe0
  40db0e:	call   0x7c8e:0x86a3d7ee
  40db15:	sbb    al,ah
  40db17:	call   0x43c7:0x4951fba6
  40db1e:	mov    ch,0x32
  40db20:	pop    esp
  40db21:	imul   eax,DWORD PTR [edi-0x13cf052c],0xfe4b3133
  40db2b:	aad    0x87
  40db2d:	popf   
  40db2e:	leave  
  40db2f:	jmp    0x40db81
  40db31:	int3   
  40db32:	cmp    BYTE PTR [edi],bl
  40db34:	xor    ebp,esp
  40db36:	les    edx,FWORD PTR [edi-0x4d]
  40db39:	out    0x96,al
  40db3b:	pop    esi
  40db3c:	xor    ebp,0xffffff82
  40db3f:	in     eax,0x71
  40db41:	pop    ds
  40db42:	adc    al,0xe2
  40db44:	jmp    0x40db98
  40db46:	mov    ds:0xdbc7a5fa,al
  40db4b:	dec    edx
  40db4c:	mov    ebp,0x3e4d0b59
  40db51:	mov    bh,0x2f
  40db53:	(bad)  
  40db54:	sub    ecx,0xe5777680
  40db5a:	outs   dx,BYTE PTR ds:[esi]
  40db5b:	int    0xa1
  40db5d:	cmp    eax,0xf051a8b8
  40db62:	sub    dh,BYTE PTR [eax+0x29]
  40db65:	jb     0x40dba8
  40db67:	ins    BYTE PTR es:[edi],dx
  40db68:	repnz mov al,0xce
  40db6b:	xor    ecx,DWORD PTR [eax-0x59]
  40db6e:	pop    esi
  40db6f:	xchg   ebx,eax
  40db70:	jno    0x40db47
  40db72:	mov    DWORD PTR [ecx-0x474fd566],edx
  40db78:	mov    ds:0xde6475d5,al
  40db7d:	inc    edx
  40db7e:	add    cl,BYTE PTR [edi+0x1c3f5789]
  40db84:	enter  0x399b,0x55
  40db88:	int    0x52
  40db8a:	adc    ch,BYTE PTR [ebp+eax*8-0x7831b0b9]
  40db91:	lock fisttp DWORD PTR ds:0xd8a908db
  40db98:	mov    ds:0x36b0a918,al
  40db9d:	loopne 0x40db54
  40db9f:	push   ds
  40dba0:	ss int 0xee
  40dba3:	push   es
  40dba4:	leave  
  40dba5:	ja     0x40db7d
  40dba7:	add    DWORD PTR [ecx],ebx
  40dba9:	mov    esp,0xd58ec9ec
  40dbae:	jno    0x40dc2d
  40dbb0:	push   edi
  40dbb1:	lods   eax,DWORD PTR ds:[esi]
  40dbb2:	lds    ebp,FWORD PTR [edi-0x33]
  40dbb5:	call   0xeb51592b
  40dbba:	shl    DWORD PTR [ebp+0x6a],1
  40dbbd:	por    mm3,QWORD PTR [ebx+0x7359e29c]
  40dbc4:	mov    eax,ds:0x5b394764
  40dbc9:	(bad)  
  40dbcb:	push   0xffffffe0
  40dbcd:	jge    0x40dbcc
  40dbcf:	cmp    ch,ch
  40dbd1:	daa    
  40dbd2:	into   
  40dbd3:	sbb    ebx,eax
  40dbd5:	out    dx,eax
  40dbd6:	lock adc al,0x97
  40dbd9:	cli    
  40dbda:	test   ecx,esi
  40dbdc:	je     0x40dc04
  40dbde:	retf   0xee48
  40dbe1:	sbb    eax,0x67a3b479
  40dbe6:	mov    esi,0x1b72cdb0
  40dbeb:	mov    ds:0x4c95a123,eax
  40dbf0:	out    dx,eax
  40dbf1:	mov    bl,0x2d
  40dbf3:	jbe    0x40dc53
  40dbf5:	cli    
  40dbf6:	(bad)  [ebp-0x3]
  40dbf9:	scas   eax,DWORD PTR es:[edi]
  40dbfa:	bound  edi,QWORD PTR [ecx]
  40dbfc:	mov    ds:0x6a45313,eax
  40dc01:	cli    
  40dc02:	inc    ebx
  40dc03:	das    
  40dc04:	inc    ebp
  40dc05:	pop    ecx
  40dc06:	jle    0x40dc4a
  40dc08:	xlat   BYTE PTR ds:[ebx]
  40dc09:	mov    DWORD PTR [esi-0x2c389270],esi
  40dc0f:	nop
  40dc10:	cwde   
  40dc11:	xor    BYTE PTR [esi],bl
  40dc13:	in     eax,0x90
  40dc15:	loopne 0x40dc11
  40dc17:	lds    edx,FWORD PTR [ebp*1-0x2197e4b8]
  40dc1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc1f:	mov    edi,0x2a6fe818
  40dc24:	sub    DWORD PTR [esi-0x63],edx
  40dc27:	repz add eax,0xe70fffe5
  40dc2d:	xchg   esi,eax
  40dc2e:	cmc    
  40dc2f:	push   eax
  40dc30:	jae    0x40dc8f
  40dc32:	sar    BYTE PTR [eax],1
  40dc34:	and    al,0xe2
  40dc36:	cmp    al,0x7c
  40dc38:	jbe    0x40dbef
  40dc3a:	jl     0x40dbc8
  40dc3c:	ror    DWORD PTR [ebx],0xb9
  40dc3f:	(bad)  
  40dc41:	sub    eax,eax
  40dc43:	mov    esi,0x71da0e8a
  40dc48:	repz inc ebx
  40dc4a:	sub    eax,0x4f020891
  40dc4f:	jge    0x40dc4e
  40dc51:	dec    ebx
  40dc52:	test   ebx,edi
  40dc54:	nop
  40dc55:	jns    0x40dc3a
  40dc57:	data16 test WORD PTR [edx+eiz*8-0x4],bx
  40dc5d:	push   0xffffff9d
  40dc5f:	inc    esi
  40dc60:	repz rcr bl,cl
  40dc63:	shr    DWORD PTR [edx+0x62996976],0xd7
  40dc6a:	call   0x8f424c88
  40dc6f:	adc    eax,0x42535af9
  40dc74:	test   al,0x76
  40dc76:	or     bl,ah
  40dc78:	push   edi
  40dc79:	cmc    
  40dc7a:	fisubr WORD PTR [ebx]
  40dc7c:	mov    ds:0x846818fb,al
  40dc81:	loope  0x40dcd1
  40dc83:	(bad)  [esi-0x46]
  40dc86:	leave  
  40dc87:	inc    ebp
  40dc88:	iret   
  40dc89:	jmp    0xea6e4a18
  40dc8e:	call   0xd58cbefe
  40dc93:	push   cs
  40dc94:	retf   0xfc52
  40dc97:	cwde   
  40dc98:	outs   dx,DWORD PTR ds:[esi]
  40dc99:	xchg   DWORD PTR [ebx-0x6ddec987],esi
  40dc9f:	shr    BYTE PTR [ebx-0x56982ee3],0x9f
  40dca6:	or     eax,0x1da8fcef
  40dcab:	clc    
  40dcac:	xlat   BYTE PTR ds:[ebx]
  40dcad:	push   edi
  40dcae:	add    eax,0x1da9404d
  40dcb3:	add    DWORD PTR [edi-0xd6f9f60],ecx
  40dcb9:	dec    edx
  40dcba:	xchg   esp,eax
  40dcbb:	stc    
  40dcbc:	sahf   
  40dcbd:	xchg   esi,eax
  40dcbe:	out    0x50,eax
  40dcc0:	stos   DWORD PTR es:[edi],eax
  40dcc1:	neg    DWORD PTR [edx+edi*8]
  40dcc4:	dec    esp
  40dcc5:	add    al,0x10
  40dcc7:	pop    edx
  40dcc8:	fxch   st(2)
  40dcca:	mov    ds:0x51d76ee,eax
  40dccf:	cmp    esi,edx
  40dcd1:	stos   BYTE PTR es:[edi],al
  40dcd2:	div    DWORD PTR [eax]
  40dcd4:	shl    BYTE PTR [eax+0x7caac01d],1
  40dcda:	dec    edi
  40dcdb:	xchg   BYTE PTR [ebx],dl
  40dcdd:	test   DWORD PTR [bx+di-0x29],esi
  40dce1:	arpl   WORD PTR [edi+0xa],bx
  40dce4:	mov    esi,DWORD PTR ss:[ebp+ebp*1+0x1223af61]
  40dcec:	jge    0x40dcbf
  40dcee:	leave  
  40dcef:	push   ebx
  40dcf0:	cld    
  40dcf1:	cmp    ch,dl
  40dcf3:	sbb    BYTE PTR [eax],cl
  40dcf5:	sbb    eax,0xb5c7a7e2
  40dcfa:	dec    ebp
  40dcfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcfc:	xchg   ecx,eax
  40dcfd:	and    DWORD PTR [eax+0x43],ebx
  40dd00:	test   DWORD PTR [edx+esi*4],edi
  40dd03:	xchg   ebx,eax
  40dd04:	jl     0x40dd21
  40dd06:	or     esp,DWORD PTR [eax]
  40dd08:	xor    BYTE PTR [edx],al
  40dd0a:	in     eax,0xd5
  40dd0c:	mov    esp,DWORD PTR [ebx]
  40dd0e:	jne    0x40dd4c
  40dd10:	or     al,0x67
  40dd12:	loop   0x40dce1
  40dd14:	push   0xffffffe4
  40dd16:	cld    
  40dd17:	or     DWORD PTR [edi+0x71860657],ebp
  40dd1d:	xchg   esp,eax
  40dd1e:	xor    eax,DWORD PTR ds:0x7295f32e
  40dd24:	test   DWORD PTR [edi],ebp
  40dd26:	sbb    eax,DWORD PTR ds:0x505344e5
  40dd2c:	pop    ecx
  40dd2d:	sar    DWORD PTR [ebx+ebx*4+0x25d2911b],cl
  40dd34:	shl    DWORD PTR [ebx+0x4b],0xc6
  40dd38:	in     eax,0x74
  40dd3a:	mov    dl,0x80
  40dd3c:	mov    dh,0xef
  40dd3e:	jnp    0x40dd9e
  40dd40:	xor    BYTE PTR [ecx-0x56a34986],dh
  40dd46:	clc    
  40dd47:	loop   0x40dcf9
  40dd49:	jecxz  0x40dd44
  40dd4b:	std    
  40dd4c:	adc    al,0x2b
  40dd4e:	sbb    esp,DWORD PTR [ebp+0x78992b0f]
  40dd54:	adc    bh,dl
  40dd56:	ret    0xf878
  40dd59:	sbb    eax,0x51ad59c9
  40dd5e:	std    
  40dd5f:	sbb    DWORD PTR [ebx-0x56],0x20517bd8
  40dd66:	cmp    esp,DWORD PTR [ecx+eax*8+0x152e12dc]
  40dd6d:	inc    ebp
  40dd6e:	push   ds
  40dd6f:	outs   dx,BYTE PTR ds:[esi]
  40dd70:	xchg   ebp,eax
  40dd71:	or     esp,0x94491b8f
  40dd77:	enter  0x569a,0x85
  40dd7b:	bnd call 0x45b7a40f
  40dd81:	mov    edx,0x5c4d6904
  40dd86:	dec    esp
  40dd87:	lods   eax,DWORD PTR ds:[esi]
  40dd88:	inc    edi
  40dd89:	aas    
  40dd8a:	test   eax,0xdbf04b96
  40dd8f:	mov    cl,0x95
  40dd91:	rcl    ch,cl
  40dd93:	or     edx,DWORD PTR [ecx+0x4303506]
  40dd99:	jmp    0x40ddd4
  40dd9b:	mov    ebx,0xc38ccfb7
  40dda0:	mov    BYTE PTR [ebx+0x6d],dl
  40dda3:	adc    al,0x66
  40dda5:	mov    ecx,0x1d5e95e2
  40ddaa:	sbb    ah,al
  40ddac:	cmp    DWORD PTR [esi],esp
  40ddae:	lea    esi,[edi+ebp*8]
  40ddb1:	call   0x43ff32a8
  40ddb6:	shl    ch,1
  40ddb8:	fs cli 
  40ddba:	inc    eax
  40ddbb:	dec    eax
  40ddbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddbd:	inc    ebx
  40ddbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddbf:	cwde   
  40ddc0:	mov    ch,0xbf
  40ddc2:	ins    DWORD PTR es:[edi],dx
  40ddc3:	cmp    al,0x20
  40ddc5:	add    al,0xa1
  40ddc7:	gs add eax,0x790b8d6a
  40ddcd:	and    al,BYTE PTR [ebp+0x78fbee]
  40ddd3:	jnp    0x40ddfe
  40ddd5:	(bad)  
  40ddd6:	push   edx
  40ddd7:	jl     0x40dd81
  40ddd9:	clc    
  40ddda:	jmp    0x935e:0x91430d5f
  40dde1:	jecxz  0x40de26
  40dde3:	in     eax,dx
  40dde4:	ret    0x7a70
  40dde7:	xchg   edi,eax
  40dde8:	mov    WORD PTR [ebx],fs
  40ddea:	not    ebx
  40ddec:	sbb    ch,0xa2
  40ddef:	dec    ebp
  40ddf0:	mov    edi,0x54ab01db
  40ddf5:	pop    edi
  40ddf6:	add    al,0xfc
  40ddf8:	and    DWORD PTR [edi],ebx
  40ddfa:	cli    
  40ddfb:	xchg   edx,eax
  40ddfc:	das    
  40ddfd:	rol    BYTE PTR [esi],1
  40ddff:	xor    esi,DWORD PTR [eax+edx*2]
  40de02:	sub    al,0xb2
  40de04:	in     eax,0x43
  40de06:	(bad)  [ebx]
  40de08:	nop
  40de09:	xor    eax,0x63d8eac
  40de0e:	shr    DWORD PTR [ebx-0xf1916d8],0xde
  40de15:	dec    edx
  40de16:	test   BYTE PTR [esi+eax*1+0x59],bh
  40de1a:	inc    ebx
  40de1b:	push   esp
  40de1c:	cmp    eax,0x28c8f81d
  40de21:	inc    esi
  40de22:	pop    ss
  40de23:	repz shr BYTE PTR ds:0x805d38c5,1
  40de2a:	sbb    eax,0x27ad4495
  40de2f:	lock iret 
  40de31:	jbe    0x40dde3
  40de33:	sahf   
  40de34:	imul   esi,DWORD PTR [eax+0x4e],0x866dfeb
  40de3b:	std    
  40de3c:	cmp    BYTE PTR [ebx+0x8c9d635],bh
  40de42:	xchg   ebp,eax
  40de43:	jns    0x40de42
  40de45:	pop    ebp
  40de46:	add    bl,cl
  40de48:	data16 and al,0x11
  40de4b:	push   eax
  40de4c:	in     eax,dx
  40de4d:	out    0x69,al
  40de4f:	data16 sbb al,0x85
  40de52:	je     0x40de24
  40de54:	xchg   dh,al
  40de56:	dec    ecx
  40de57:	ret    0x748f
  40de5a:	outs   dx,BYTE PTR ds:[esi]
  40de5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de5c:	int    0xff
  40de5e:	out    0xf0,eax
  40de60:	shl    esp,1
  40de62:	inc    esp
  40de63:	adc    DWORD PTR [ecx+0x261d778a],esp
  40de69:	dec    BYTE PTR [ebp-0x5a]
  40de6c:	xchg   DWORD PTR [ecx],edx
  40de6e:	jg     0x40de20
  40de70:	push   esi
  40de71:	std    
  40de72:	xchg   esp,eax
  40de73:	and    dh,ah
  40de75:	fistp  WORD PTR [edx]
  40de77:	mov    dl,0x6b
  40de79:	daa    
  40de7a:	mov    eax,ds:0xbf7d2127
  40de7f:	out    0xac,eax
  40de81:	call   FWORD PTR [esi]
  40de83:	mov    ch,0x29
  40de85:	jge    0x40de13
  40de87:	or     dh,BYTE PTR [eax+0xe30ffc5]
  40de8d:	popf   
  40de8e:	pop    eax
  40de8f:	cli    
  40de90:	lahf   
  40de91:	ret    
  40de92:	xchg   ebp,eax
  40de93:	cmp    DWORD PTR [ebx+0x63],0x415daa77
  40de9a:	jg     0x40deb7
  40de9c:	iret   
  40de9d:	fnop   
  40de9f:	loopne 0x40ded0
  40dea1:	(bad)  
  40dea2:	iret   
  40dea3:	dec    ecx
  40dea4:	adc    dl,ch
  40dea6:	fstp   st(7)
  40dea8:	mov    eax,0x70506c97
  40dead:	test   DWORD PTR [edi+edi*4-0x6d],edx
  40deb1:	in     eax,dx
  40deb2:	adc    BYTE PTR [ebx+0x3b30fb64],bl
  40deb8:	stos   DWORD PTR es:[edi],eax
  40deb9:	lea    ebp,ds:0x205b3e17
  40debf:	pop    edi
  40dec0:	xor    BYTE PTR [eax-0x1c],0x91
  40dec4:	inc    eax
  40dec5:	xor    DWORD PTR [esi+0x1d],edi
  40dec8:	inc    ecx
  40dec9:	repnz adc eax,0xff758998
  40decf:	dec    BYTE PTR [esi-0x4b26ad88]
  40ded5:	jmp    0x5453ffee
  40deda:	daa    
  40dedb:	jmp    0x107a14af
  40dee0:	xor    eax,0x2b4c546b
  40dee5:	clc    
  40dee6:	mov    cl,0x2d
  40dee8:	mov    bh,0xfe
  40deea:	mov    edi,0x68a46aed
  40deef:	mov    al,ds:0xbed5e102
  40def4:	pop    ecx
  40def5:	mov    ds:0x5181f8b,eax
  40defa:	xchg   edi,eax
  40defb:	stos   BYTE PTR es:[edi],al
  40defc:	std    
  40defd:	hlt    
  40defe:	dec    esp
  40deff:	fdivr  DWORD PTR [eax+esi*2+0x50b461bb]
  40df06:	mov    eax,ds:0x670a2a75
  40df0b:	jecxz  0x40df25
  40df0d:	mov    dl,0x4a
  40df0f:	pop    ds
  40df10:	add    edx,DWORD PTR [edx]
  40df12:	push   0x4ed7b29d
  40df17:	sbb    DWORD PTR [eax+eax*8+0x526a26d9],0x44
  40df1f:	(bad)  
  40df20:	repz in al,dx
  40df22:	sbb    BYTE PTR [esi-0x2e2e37c4],ch
  40df28:	pop    ebp
  40df29:	mov    eax,ds:0xac8debe2
  40df2e:	jbe    0x40df17
  40df30:	mov    DWORD PTR [ebx+0x73089746],ecx
  40df36:	fmul   st(5),st
  40df38:	mov    edi,0x2b2a9bcd
  40df3d:	rcr    BYTE PTR [ebp-0x6],1
  40df40:	rcl    ah,1
  40df42:	cli    
  40df43:	dec    esp
  40df44:	mov    esp,0xbbc82f38
  40df49:	push   esi
  40df4a:	pop    esp
  40df4b:	dec    ebx
  40df4c:	or     BYTE PTR [ebp-0x7d],dl
  40df4f:	pop    esp
  40df50:	push   0x6d
  40df52:	in     eax,0xd3
  40df54:	fimul  WORD PTR [ebx]
  40df56:	jmp    0x9760cb6c
  40df5b:	sti    
  40df5c:	xor    eax,0xac33f5df
  40df61:	push   esp
  40df62:	retf   0xbbec
  40df65:	add    BYTE PTR [edx],bh
  40df67:	loopne 0x40dfc5
  40df69:	adc    al,0xcd
  40df6b:	ins    BYTE PTR es:[edi],dx
  40df6c:	ja     0x40dfa5
  40df6e:	mov    ah,0xf1
  40df70:	push   ss
  40df71:	inc    edx
  40df72:	cmp    eax,edi
  40df74:	mov    ch,0xc1
  40df76:	push   ebp
  40df77:	test   eax,0x1aae9e63
  40df7c:	mov    al,ds:0x52ddd6d6
  40df81:	shr    DWORD PTR [edi],cl
  40df83:	xchg   eax,ebp
  40df85:	push   edx
  40df86:	adc    eax,0xe8c5765f
  40df8b:	(bad)  [eax]
  40df8d:	sbb    al,BYTE PTR [esi+0x70bb940f]
  40df93:	mov    ds:0x38b6f8f5,eax
  40df98:	pop    esp
  40df99:	push   ebp
  40df9a:	out    0x5,al
  40df9c:	mov    cl,0x8f
  40df9e:	jae    0x40dfce
  40dfa0:	xchg   ecx,eax
  40dfa1:	ins    DWORD PTR es:[di],dx
  40dfa3:	ret    
  40dfa4:	repz jle 0x40dfe2
  40dfa7:	jmp    FWORD PTR [ebp-0x12]
  40dfaa:	and    DWORD PTR [edx-0x2f],ecx
  40dfad:	mov    bl,0xfc
  40dfaf:	push   cs
  40dfb0:	imul   ebx,DWORD PTR [ecx+0x31],0xc9559cef
  40dfb7:	sub    DWORD PTR [esi],0x8af009fa
  40dfbd:	imul   edi,ebp,0x7480323a
  40dfc3:	xor    ebx,DWORD PTR [eax]
  40dfc5:	xchg   DWORD PTR [eax+0x3c],ecx
  40dfc8:	in     al,dx
  40dfc9:	xor    BYTE PTR [edx],dl
  40dfcb:	dec    eax
  40dfcc:	sub    DWORD PTR [edx+eax*1],ebx
  40dfcf:	xchg   ebp,eax
  40dfd0:	call   0x195d:0x7899e968
  40dfd7:	jg     0x40df65
  40dfd9:	mov    BYTE PTR [ebx+0x3f607fcf],ah
  40dfdf:	dec    ecx
  40dfe0:	fidiv  DWORD PTR [esi]
  40dfe2:	adc    esp,esi
  40dfe4:	mov    ds:0x5b172ae0,al
  40dfe9:	daa    
  40dfea:	sub    esi,DWORD PTR [ebx+0x2d]
  40dfed:	popf   
  40dfee:	les    esi,FWORD PTR [edi+0x39de151e]
  40dff4:	repnz mov WORD PTR es:[esi],?
  40dff8:	rcl    BYTE PTR [ebx-0xde0fc3b],cl
  40dffe:	xchg   ebx,eax
  40dfff:	fwait
  40e000:	jecxz  0x40dfa2
  40e002:	pusha  
  40e003:	ja     0x40e053
  40e005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e006:	outs   dx,BYTE PTR ds:[esi]
  40e007:	mov    ebx,0x1878af8b
  40e00c:	loop   0x40e010
  40e00e:	fild   WORD PTR ds:0x32b3f6cd
  40e014:	cli    
  40e015:	aaa    
  40e016:	(bad)  
  40e017:	std    
  40e018:	cli    
  40e019:	jbe    0x40dfee
  40e01b:	lods   eax,DWORD PTR ds:[esi]
  40e01c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01e:	jns    0x40dffa
  40e020:	sub    eax,0xa3173c7
  40e025:	popa   
  40e026:	inc    ebx
  40e027:	sub    DWORD PTR [edx+0x55],edx
  40e02a:	cmp    BYTE PTR [ebp+0x41345170],bh
  40e030:	cdq    
  40e031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e033:	clc    
  40e034:	sar    DWORD PTR [eax-0x51a59c0d],cl
  40e03a:	add    ch,BYTE PTR [edi]
  40e03c:	push   esp
  40e03d:	sub    ebx,DWORD PTR [esi-0x5896abef]
  40e043:	and    DWORD PTR [ecx+0x5a],ebp
  40e046:	(bad)  
  40e047:	cmp    eax,0xe2b0a363
  40e04c:	mov    esp,0x2ff6f20b
  40e051:	adc    eax,0x1b3a525
  40e056:	cs je  0x40e0cb
  40e059:	sbb    ecx,ebp
  40e05b:	xor    ecx,DWORD PTR [esi+0x26af30aa]
  40e061:	aam    0x11
  40e063:	minps  xmm0,XMMWORD PTR [ecx+edi*2]
  40e067:	add    BYTE PTR [eax],0xfc
  40e06a:	ins    BYTE PTR es:[edi],dx
  40e06b:	add    dh,cl
  40e06d:	add    ebx,edx
  40e06f:	add    dl,dl
  40e071:	lds    esp,FWORD PTR [edi-0x66]
  40e074:	cs pop esi
  40e076:	lds    esp,FWORD PTR [eax+ecx*8+0x7de9d627]
  40e07d:	sub    al,0x6c
  40e07f:	cmp    edi,DWORD PTR ds:0x4f95c9c6
  40e086:	mov    bh,0x90
  40e088:	pop    edx
  40e089:	out    0x61,al
  40e08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08c:	push   ds
  40e08d:	enter  0x9061,0xc3
  40e091:	sbb    BYTE PTR ds:0xa1607c3f,dl
  40e097:	sbb    ch,BYTE PTR [esi-0x6b0bca11]
  40e09d:	jge    0x40e023
  40e09f:	or     BYTE PTR [eax],ah
  40e0a1:	clc    
  40e0a2:	std    
  40e0a3:	bswap  edi
  40e0a5:	aam    0x8a
  40e0a7:	mov    WORD PTR [ecx+0x56],es
  40e0aa:	sbb    ebx,esp
  40e0ac:	scas   eax,DWORD PTR es:[edi]
  40e0ad:	mov    dl,0x1
  40e0af:	xchg   edi,eax
  40e0b0:	addr16 (bad) 
  40e0b2:	jnp    0x40e0f8
  40e0b4:	cli    
  40e0b5:	fisub  WORD PTR [eax-0x5b]
  40e0b8:	sbb    bl,dl
  40e0ba:	pop    ecx
  40e0bb:	(bad)  
  40e0bd:	mov    dh,0x52
  40e0bf:	mov    ebx,0x2f796b2
  40e0c4:	mov    dh,0x98
  40e0c6:	fmul   DWORD PTR ds:[ebx+0x7f]
  40e0ca:	jb     0x40e0e4
  40e0cc:	sub    bh,BYTE PTR [ebp-0x4]
  40e0cf:	js     0x40e0c2
  40e0d1:	cdq    
  40e0d2:	clc    
  40e0d3:	fst    DWORD PTR [ecx-0x160d8721]
  40e0d9:	fidivr WORD PTR [eax]
  40e0db:	xlat   BYTE PTR ds:[ebx]
  40e0dc:	or     bl,dh
  40e0de:	aam    0x90
  40e0e0:	js     0x40e090
  40e0e2:	adc    edi,DWORD PTR [edx*1-0x1f6d0d05]
  40e0e9:	and    DWORD PTR [esp+ecx*2-0x2],esi
  40e0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0ef:	jecxz  0x40e140
  40e0f1:	fs push edx
  40e0f3:	add    esi,DWORD PTR [eax-0x1e82581a]
  40e0f9:	mov    dl,0xee
  40e0fb:	adc    al,0xe3
  40e0fd:	sub    edi,DWORD PTR [esi+0x19]
  40e100:	jp     0x40e0ba
  40e102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e103:	xchg   esi,eax
  40e104:	fwait
  40e105:	sbb    DWORD PTR [edx],ebx
  40e107:	test   al,0x70
  40e109:	pop    ss
  40e10a:	xor    al,BYTE PTR [esi+esi*2+0x63c3ceb4]
  40e111:	dec    ebx
  40e112:	xchg   edx,eax
  40e113:	jmp    0x40e168
  40e115:	daa    
  40e116:	mov    ebp,0xa3c5b849
  40e11b:	push   cs
  40e11c:	adc    ah,al
  40e11e:	add    dl,bh
  40e120:	dec    ebp
  40e121:	mov    ah,0x72
  40e123:	sub    eax,0xad069690
  40e128:	cwde   
  40e129:	(bad)  
  40e12b:	hlt    
  40e12c:	adc    DWORD PTR [edx],edx
  40e12e:	dec    ebp
  40e12f:	jno    0x40e0d4
  40e131:	jne    0x40e0f9
  40e133:	mov    ch,0x8d
  40e135:	cmp    dh,BYTE PTR [eax+0x78ed4b8c]
  40e13b:	mov    ds:0xb8345fae,eax
  40e140:	mov    ah,0x89
  40e142:	adc    DWORD PTR [edx+0x4],edi
  40e145:	mov    edi,0x14986505
  40e14a:	data16 repz (bad) 
  40e14e:	sbb    eax,0x548a2d70
  40e153:	ss pop edx
  40e155:	imul   esi,DWORD PTR [ebx],0x6d5ad7e3
  40e15b:	out    dx,eax
  40e15c:	fldl2e 
  40e15e:	stos   DWORD PTR es:[edi],eax
  40e15f:	pop    ecx
  40e160:	or     esp,edx
  40e162:	dec    edi
  40e163:	sbb    DWORD PTR [ebp-0x7627649e],edx
  40e169:	push   ebp
  40e16a:	push   es
  40e16b:	xor    eax,0x661a5367
  40e170:	jp     0x40e1dd
  40e172:	ss sub al,0x67
  40e175:	xchg   DWORD PTR [ecx+esi*2+0x58b50894],ecx
  40e17c:	cmp    BYTE PTR [edx+ebx*4-0x69],dh
  40e180:	test   BYTE PTR [edx*2-0x26a2ef29],bl
  40e187:	popf   
  40e188:	and    bl,BYTE PTR [ebp+0x1b3fb14]
  40e18e:	mov    eax,ds:0x5dad2772
  40e193:	test   eax,0x9af41922
  40e198:	mov    esi,0x7d727e12
  40e19d:	mov    BYTE PTR [eax+0x10],dh
  40e1a0:	mov    ds:0xf1e8c5c2,eax
  40e1a5:	inc    esp
  40e1a6:	jmp    0x40e1fb
  40e1a8:	xor    ch,dl
  40e1aa:	pop    esi
  40e1ab:	add    eax,0xcbf55fe4
  40e1b0:	pop    ds
  40e1b1:	mov    dl,0x48
  40e1b3:	shl    cl,0x35
  40e1b6:	push   ebp
  40e1b7:	gs push ebx
  40e1b9:	std    
  40e1ba:	fiadd  WORD PTR [edx+0x47ce2472]
  40e1c0:	add    DWORD PTR [esi],edi
  40e1c2:	cli    
  40e1c3:	mov    BYTE PTR [esi-0x7422c332],bh
  40e1c9:	call   0xab6e10aa
  40e1ce:	in     al,0x92
  40e1d0:	xchg   ebx,eax
  40e1d1:	dec    esp
  40e1d2:	add    eax,0x1354d298
  40e1d7:	loope  0x40e229
  40e1d9:	push   0x26
  40e1db:	(bad)  
  40e1dc:	jmp    0x40e22b
  40e1de:	lea    ebp,[esi]
  40e1e0:	xor    ecx,ecx
  40e1e2:	clc    
  40e1e3:	fcom   DWORD PTR cs:[eax]
  40e1e6:	mov    ch,0x2c
  40e1e8:	jno    0x40e1c4
  40e1ea:	jecxz  0x40e22a
  40e1ec:	das    
  40e1ed:	xchg   esi,eax
  40e1ee:	xor    BYTE PTR [eax+0x8],bh
  40e1f1:	xchg   ebp,eax
  40e1f2:	lds    esp,FWORD PTR [edi+0x35009438]
  40e1f8:	das    
  40e1f9:	push   edi
  40e1fa:	rol    DWORD PTR [ebp-0x4079da19],cl
  40e200:	clc    
  40e201:	sahf   
  40e202:	xchg   BYTE PTR [edi+0x33a40d70],al
  40e208:	lock mov dh,0x50
  40e20b:	jecxz  0x40e1f5
  40e20d:	and    dh,BYTE PTR [esi+0x4a855945]
  40e213:	dec    esi
  40e214:	(bad)  
  40e215:	sar    DWORD PTR [eax],1
  40e217:	jno    0x40e22f
  40e219:	adc    al,0x75
  40e21b:	pop    eax
  40e21c:	(bad)  
  40e21d:	or     dl,ch
  40e21f:	outs   dx,BYTE PTR ds:[esi]
  40e220:	xchg   ebp,eax
  40e221:	xor    DWORD PTR [ecx+0x5188459b],edi
  40e227:	or     BYTE PTR [ebx-0x6813d49c],dh
  40e22d:	mov    ecx,0x7feac867
  40e232:	cli    
  40e233:	add    ebx,ecx
  40e235:	mov    eax,ss:0xdde28a8d
  40e23b:	mov    edi,0x2f94e2a2
  40e240:	fild   WORD PTR [edi+0x7e]
  40e243:	ins    DWORD PTR es:[edi],dx
  40e244:	leave  
  40e245:	adc    BYTE PTR [ecx],dl
  40e247:	cs jb  0x40e2c1
  40e24a:	int    0xa3
  40e24c:	mov    dh,0xe0
  40e24e:	pop    ecx
  40e24f:	aas    
  40e250:	mov    WORD PTR [ecx],cs
  40e252:	pop    esi
  40e253:	mov    dl,al
  40e255:	mov    ds:0x23eab2c6,eax
  40e25a:	sbb    al,0x34
  40e25c:	cld    
  40e25d:	lods   eax,DWORD PTR ds:[esi]
  40e25e:	pop    es
  40e25f:	loopne 0x40e1e6
  40e261:	lds    esi,FWORD PTR [ebp+ecx*4-0x6af5f7ee]
  40e268:	sub    ebp,DWORD PTR [edi+0x4ceb5772]
  40e26e:	(bad)  
  40e26f:	sbb    dl,bl
  40e271:	gs add ebx,edi
  40e274:	jbe    0x40e247
  40e276:	arpl   ax,bp
  40e278:	jb     0x40e1fa
  40e27a:	sub    DWORD PTR [eax],eax
  40e27c:	pop    ss
  40e27d:	dec    esp
  40e27e:	mov    ds:0x4c5e2633,eax
  40e283:	push   esp
  40e284:	push   ebp
  40e285:	or     ch,dh
  40e287:	fiadd  WORD PTR [ebx+0x7bd4b0f6]
  40e28d:	std    
  40e28e:	cli    
  40e28f:	sbb    ebp,0xd5af61ba
  40e295:	mov    dl,0x5d
  40e297:	mov    ds:0xdc2229dc,eax
  40e29c:	pusha  
  40e29d:	arpl   WORD PTR [edx+0x89039be],ax
  40e2a3:	add    DWORD PTR es:[esi+0x75],ebp
  40e2a7:	sbb    BYTE PTR [esi+0x75],cl
  40e2aa:	cmp    BYTE PTR [ebx+0x392be475],al
  40e2b0:	mov    dh,0xf8
  40e2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b3:	mov    eax,ds:0x45510a02
  40e2b8:	mov    ds:0xd7cacbd2,al
  40e2bd:	pushf  
  40e2be:	rol    bh,0xbd
  40e2c1:	clc    
  40e2c2:	js     0x40e2d7
  40e2c4:	mov    dh,bl
  40e2c6:	inc    esp
  40e2c7:	loope  0x40e283
  40e2c9:	pop    edi
  40e2ca:	je     0x40e26c
  40e2cc:	jg     0x40e292
  40e2ce:	clc    
  40e2cf:	inc    ebx
  40e2d0:	ins    BYTE PTR es:[edi],dx
  40e2d1:	fistp  DWORD PTR [edx+0x1d4af52b]
  40e2d7:	mov    WORD PTR [edx-0x5085733],?
  40e2dd:	aad    0x11
  40e2df:	sub    BYTE PTR [edx],dh
  40e2e1:	xor    dh,BYTE PTR [ebp-0x711756ce]
  40e2e7:	or     DWORD PTR [edi-0x2cf685ff],esi
  40e2ed:	ret    0xef2c
  40e2f0:	sbb    DWORD PTR ds:0x29bc3059,edx
  40e2f6:	leave  
  40e2f7:	cmp    eax,DWORD PTR [edx+eiz*4]
  40e2fa:	push   0x67
  40e2fc:	fadd   DWORD PTR [ecx-0x32eed022]
  40e302:	inc    esp
  40e303:	fisub  DWORD PTR ds:0xebd39933
  40e309:	xchg   BYTE PTR [eax-0x5],cl
  40e30c:	(bad)
  40e310:	mov    ah,0x82
  40e312:	test   al,0x62
  40e314:	push   ebp
  40e315:	sub    al,0x24
  40e317:	cli    
  40e318:	repnz or bh,BYTE PTR [ecx+0x6c009fbf]
  40e31f:	aaa    
  40e320:	sbb    BYTE PTR [ebx+0x6d],bh
  40e323:	leave  
  40e324:	push   ss
  40e325:	cmp    esp,ecx
  40e327:	ret    0xeff4
  40e32a:	les    ecx,FWORD PTR [edx+0x43]
  40e32d:	adc    edi,esi
  40e32f:	sbb    bl,ah
  40e331:	daa    
  40e332:	mov    ds:0x475936e6,al
  40e337:	push   ebx
  40e338:	jmp    0xda556be5
  40e33d:	push   ebx
  40e33e:	cli    
  40e33f:	xchg   edx,eax
  40e340:	mov    ds:0xbd5b1460,eax
  40e345:	inc    ebx
  40e346:	dec    ebp
  40e347:	ss and al,0x7b
  40e34a:	adc    BYTE PTR [edx+0x29],dh
  40e34d:	les    edi,FWORD PTR [esi+0x186bfc47]
  40e353:	dec    edx
  40e354:	xlat   BYTE PTR ds:[ebx]
  40e355:	jmp    0x40e304
  40e357:	jp     0x40e2e1
  40e359:	mov    ch,dh
  40e35b:	adc    BYTE PTR [esi],bh
  40e35d:	shr    DWORD PTR [edi-0x47],0x38
  40e361:	mov    ds:0x20f264f0,eax
  40e366:	(bad)  
  40e367:	out    dx,eax
  40e368:	add    ah,BYTE PTR [edx+0x79]
  40e36b:	mov    cl,0xb5
  40e36d:	popf   
  40e36e:	push   edx
  40e36f:	fsubp  st(4),st
  40e371:	jns    0x40e34e
  40e373:	mov    ch,0xe1
  40e375:	popa   
  40e376:	popa   
  40e377:	pop    esi
  40e378:	xlat   BYTE PTR ds:[ebx]
  40e379:	dec    edi
  40e37a:	sbb    edi,ecx
  40e37c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e37d:	pop    eax
  40e37e:	sbb    al,0xb7
  40e380:	pop    esi
  40e381:	xor    al,0xb2
  40e383:	daa    
  40e384:	ret    
  40e385:	jo     0x40e355
  40e387:	lods   al,BYTE PTR ds:[esi]
  40e388:	and    DWORD PTR [edx-0x64],0x4287cb8c
  40e38f:	mov    bl,0x64
  40e391:	pop    ebx
  40e392:	xchg   edx,eax
  40e393:	cs adc eax,0x963a4854
  40e399:	(bad)  
  40e39b:	lea    ebp,[edx-0x18a473cb]
  40e3a1:	xchg   ebp,eax
  40e3a2:	data16 loope 0x40e3b6
  40e3a5:	mov    cl,0x26
  40e3a7:	lods   al,BYTE PTR ds:[esi]
  40e3a8:	daa    
  40e3a9:	mov    DWORD PTR [edx-0x1f],edi
  40e3ac:	cli    
  40e3ad:	jno    0x40e3b0
  40e3af:	rcr    BYTE PTR [edi+0x44],1
  40e3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b3:	int3   
  40e3b4:	jb     0x40e416
  40e3b6:	pop    ss
  40e3b7:	fnstsw WORD PTR [eax+0x71]
  40e3ba:	shr    ah,1
  40e3bc:	jb     0x40e3fd
  40e3be:	std    
  40e3bf:	jge    0x40e437
  40e3c1:	jae    0x40e3c7
  40e3c3:	imul   ebp,ecx,0x2c
  40e3c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3c7:	iret   
  40e3c8:	jl     0x40e399
  40e3ca:	addr16 xchg edi,eax
  40e3cc:	push   ebx
  40e3cd:	dec    esi
  40e3ce:	adc    dh,ah
  40e3d0:	in     al,0xd8
  40e3d2:	adc    eax,0x524b123d
  40e3d7:	cmp    ebx,ebx
  40e3d9:	aaa    
  40e3da:	dec    ebp
  40e3db:	ret    
  40e3dc:	add    BYTE PTR [ecx+0x4b5b2efc],dl
  40e3e2:	pop    ebp
  40e3e3:	test   al,0xae
  40e3e5:	mov    ch,0xda
  40e3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e8:	mov    WORD PTR [eax+0x3001782c],gs
  40e3ee:	push   esp
  40e3ef:	cli    
  40e3f0:	clc    
  40e3f1:	popa   
  40e3f2:	mov    bl,0x9d
  40e3f4:	jne    0x40e392
  40e3f6:	jae    0x40e3c1
  40e3f8:	dec    ebx
  40e3f9:	add    esp,DWORD PTR [edx+0x0]
  40e3fc:	je     0x40e46a
  40e3fe:	pop    ds
  40e3ff:	pop    ds
  40e400:	pop    eax
  40e401:	jl     0x40e423
  40e403:	jp     0x40e3ad
  40e405:	retf   
  40e406:	xor    al,0x2d
  40e408:	out    0xc2,al
  40e40a:	add    eax,0xe5752f2c
  40e40f:	inc    edi
  40e410:	or     al,0x19
  40e412:	jge    0x40e3d9
  40e414:	shr    BYTE PTR [edx],0x9e
  40e417:	test   eax,0xcce53103
  40e41c:	outs   dx,BYTE PTR ds:[esi]
  40e41d:	xor    cl,al
  40e41f:	xchg   esp,eax
  40e420:	xchg   DWORD PTR [esi-0x37],ebp
  40e423:	inc    ebx
  40e424:	dec    ecx
  40e425:	fistp  DWORD PTR [eax]
  40e427:	add    eax,0xfe357610
  40e42c:	mov    ebp,0x1d8f168f
  40e431:	sbb    DWORD PTR [edi+edx*8+0x7c],0xffffff93
  40e436:	test   eax,0x42c2a210
  40e43b:	std    
  40e43c:	out    0x87,eax
  40e43e:	loope  0x40e435
  40e440:	sbb    eax,0xb047113c
  40e445:	pop    esi
  40e446:	data16 test BYTE PTR [edx+0x58],dl
  40e44a:	cdq    
  40e44b:	or     ebp,DWORD PTR [ecx]
  40e44d:	push   ecx
  40e44e:	ds (bad) 
  40e450:	jl     0x40e3ee
  40e452:	(bad)  
  40e453:	loope  0x40e4c5
  40e455:	dec    ecx
  40e456:	and    DWORD PTR [ebp-0x40],ebp
  40e459:	push   ds
  40e45a:	dec    ebp
  40e45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e45c:	pop    ds
  40e45d:	fstp   QWORD PTR [eiz*2+0x27aff77]
  40e464:	jg     0x40e3f9
  40e466:	pop    ebx
  40e467:	xchg   edx,eax
  40e468:	add    eax,DWORD PTR [edi+0x65146921]
  40e46e:	(bad)  
  40e46f:	out    dx,eax
  40e470:	and    BYTE PTR ds:0x995315f5,0x9c
  40e477:	jbe    0x40e4c3
  40e479:	xlat   BYTE PTR ds:[ebx]
  40e47a:	lods   al,BYTE PTR ds:[esi]
  40e47b:	push   esp
  40e47c:	das    
  40e47d:	and    eax,0x2106cb6a
  40e482:	and    DWORD PTR fs:[esi+0x3e76f3d3],esi
  40e489:	stc    
  40e48a:	in     eax,dx
  40e48b:	jnp    0x40e44d
  40e48d:	or     al,0x30
  40e48f:	fld    DWORD PTR ds:0xe4a3c094
  40e495:	inc    ebx
  40e496:	jnp    0x40e488
  40e498:	shl    DWORD PTR [ebp+0x5d2081bf],0x7f
  40e49f:	fidiv  DWORD PTR [ecx-0x46]
  40e4a2:	cmp    eax,0x15ffb9ea
  40e4a7:	(bad)
  40e4aa:	repz scas al,BYTE PTR es:[edi]
  40e4ac:	rol    BYTE PTR [esi],cl
  40e4ae:	cmp    al,0x5e
  40e4b0:	inc    edi
  40e4b1:	pop    si
  40e4b3:	add    eax,0x7f47a1e1
  40e4b8:	cli    
  40e4b9:	cmp    bl,0xae
  40e4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4bd:	mov    eax,eax
  40e4bf:	or     BYTE PTR [ebp+0x4fc62c42],0x66
  40e4c6:	call   0x6d87aa66
  40e4cb:	mov    ecx,0x2cf1d6e5
  40e4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d1:	mov    dh,0x54
  40e4d3:	jle    0x40e4c7
  40e4d5:	mov    cl,0xb5
  40e4d7:	fdivr  DWORD PTR [ebx+esi*1-0x5fed2612]
  40e4de:	(bad)  
  40e4df:	mov    WORD PTR [edx],ds
  40e4e1:	push   edi
  40e4e2:	pop    esi
  40e4e3:	dec    ebp
  40e4e4:	inc    ecx
  40e4e5:	pop    eax
  40e4e6:	mov    al,ds:0xb02280f4
  40e4eb:	dec    edx
  40e4ec:	xor    BYTE PTR [ebx-0x324b6077],ch
  40e4f2:	rol    DWORD PTR [ebp-0x42],0x9d
  40e4f6:	cmc    
  40e4f7:	xchg   edx,eax
  40e4f8:	out    dx,al
  40e4f9:	pop    eax
  40e4fa:	sbb    al,0x1
  40e4fc:	push   eax
  40e4fd:	imul   DWORD PTR [eax-0x6f]
  40e500:	cmp    eax,0xc7c4f8b2
  40e505:	and    BYTE PTR [ecx],bh
  40e507:	jmp    0x83cd:0x98c7ed5b
  40e50e:	cdq    
  40e50f:	push   edi
  40e510:	repz jg 0x40e556
  40e513:	sub    ebp,ebp
  40e515:	jbe    0x40e4c1
  40e517:	cdq    
  40e518:	jo     0x40e589
  40e51a:	je     0x40e570
  40e51c:	push   esp
  40e51d:	pop    edi
  40e51e:	xchg   esp,eax
  40e51f:	add    BYTE PTR [edx+edx*4-0x4e],0xe
  40e524:	jmp    0xa9a116aa
  40e529:	and    eax,0x1c6f5a74
  40e52e:	adc    DWORD PTR [esi],ecx
  40e530:	sub    eax,0x2cc5f97f
  40e535:	clc    
  40e536:	aaa    
  40e537:	int3   
  40e538:	cmp    al,0x17
  40e53a:	add    DWORD PTR [edi+0x36],0x1e474ff0
  40e541:	in     eax,dx
  40e542:	loop   0x40e50e
  40e544:	mov    dh,0xc3
  40e546:	or     edi,DWORD PTR [ebx]
  40e548:	add    bh,BYTE PTR [edx+0x52ac5a31]
  40e54e:	cmc    
  40e54f:	jae    0x40e55d
  40e551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e552:	iret   
  40e553:	mov    WORD PTR [eax],fs
  40e555:	in     eax,0x47
  40e557:	jmp    0x40e57f
  40e559:	ret    
  40e55a:	enter  0x7780,0x49
  40e55e:	retf   0x4a9
  40e561:	out    0x75,eax
  40e563:	cmp    bl,BYTE PTR [ecx-0x6219f100]
  40e569:	jae    0x40e5ce
  40e56b:	scas   eax,DWORD PTR es:[edi]
  40e56c:	mov    eax,ds:0xa12e8945
  40e571:	jp     0x40e587
  40e573:	jge    0x40e5aa
  40e575:	mov    ch,0x15
  40e577:	mov    BYTE PTR [esi],al
  40e579:	repnz pop edi
  40e57b:	pop    esi
  40e57c:	aam    0x64
  40e57e:	mov    bl,0x2
  40e580:	imul   ecx,DWORD PTR [esi],0x77
  40e583:	xor    al,0xc2
  40e585:	gs popa 
  40e587:	xor    DWORD PTR [ebp-0x11],edx
  40e58a:	pop    edx
  40e58b:	cmp    BYTE PTR [edi+0x7867c718],al
  40e591:	bound  esp,QWORD PTR [ebp+ebx*8+0x3813b354]
  40e598:	test   DWORD PTR cs:[esi],0xec30c771
  40e59f:	mov    ds:0x4e5f9c43,eax
  40e5a4:	stc    
  40e5a5:	and    edx,DWORD PTR [eax]
  40e5a7:	add    al,cl
  40e5a9:	adc    BYTE PTR [esi+0xf092b1e],0x8
  40e5b0:	xchg   ebp,eax
  40e5b1:	in     al,dx
  40e5b2:	inc    edx
  40e5b3:	ror    bl,0x65
  40e5b6:	dec    edi
  40e5b7:	or     BYTE PTR [esi-0x13450271],0x5c
  40e5be:	lahf   
  40e5bf:	mov    al,BYTE PTR [esi+0x65]
  40e5c2:	and    edx,DWORD PTR [esi+0x45276810]
  40e5c8:	test   eax,0x200bed98
  40e5cd:	leave  
  40e5ce:	out    0xef,al
  40e5d0:	jecxz  0x40e554
  40e5d2:	(bad)  
  40e5d3:	jo     0x40e5d2
  40e5d5:	inc    edi
  40e5d6:	xor    esi,DWORD PTR [ebp+ebx*8+0x243646e1]
  40e5dd:	(bad)  
  40e5de:	push   ebp
  40e5df:	push   cs
  40e5e0:	retf   0x22b3
  40e5e3:	sbb    al,ah
  40e5e5:	mov    ecx,0xfff5335a
  40e5ea:	mov    eax,0x6ee29619
  40e5ef:	jnp    0x40e63c
  40e5f1:	mov    eax,ds:0x685ac4c7
  40e5f6:	call   0x9d3a:0x3485d876
  40e5fd:	mov    ebx,0xa094e33a
  40e602:	repz and DWORD PTR [esi-0x7c],esi
  40e606:	push   edx
  40e607:	dec    ebx
  40e608:	cmp    al,0xa0
  40e60a:	adc    di,WORD PTR ds:0x260c777d
  40e611:	add    DWORD PTR [ebp-0x26f211a9],edi
  40e617:	loopne 0x40e644
  40e619:	push   ebx
  40e61a:	and    eax,0x31cb7b38
  40e61f:	fisttp QWORD PTR [edi]
  40e621:	retf   0xf12f
  40e624:	sbb    DWORD PTR [eax-0x694166ca],edx
  40e62a:	ja     0x40e68a
  40e62c:	iret   
  40e62d:	int    0xc0
  40e62f:	inc    ebx
  40e630:	dec    ebp
  40e631:	dec    edx
  40e632:	ror    DWORD PTR [ecx-0x4af764bf],cl
  40e638:	add    DWORD PTR [edx-0x30],esi
  40e63b:	test   esp,edi
  40e63d:	adc    DWORD PTR [ebp-0x520d4c73],0xfffffffe
  40e644:	int3   
  40e645:	mov    bh,0x31
  40e647:	fxch   st(6)
  40e649:	cmp    ebx,DWORD PTR [edx-0x5c576427]
  40e64f:	xchg   edx,eax
  40e650:	mov    dl,0x4e
  40e652:	pop    ebx
  40e653:	(bad)  
  40e654:	xchg   edx,eax
  40e655:	lahf   
  40e656:	repz cmpxchg BYTE PTR [ebp-0x5a],al
  40e65b:	add    edi,DWORD PTR [edi]
  40e65d:	add    BYTE PTR [ecx+0x651a56bd],bl
  40e663:	xor    edx,DWORD PTR [edx]
  40e665:	mov    ecx,0xcc5ecdde
  40e66a:	dec    ebp
  40e66b:	sahf   
  40e66c:	in     al,dx
  40e66d:	sub    al,0x22
  40e66f:	in     al,dx
  40e670:	dec    eax
  40e671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e672:	dec    edi
  40e673:	mov    edx,0x5f5a314f
  40e678:	pop    esi
  40e679:	popa   
  40e67a:	mov    ecx,0x265c7d30
  40e67f:	fisttp WORD PTR [ebx+0xd1d32d1]
  40e685:	and    edx,eax
  40e687:	inc    edi
  40e688:	xchg   ebx,eax
  40e689:	aaa    
  40e68a:	sbb    dl,dl
  40e68c:	es stc 
  40e68e:	cmp    DWORD PTR [edi+0x25ac1478],ebx
  40e694:	adc    al,0xb7
  40e696:	adc    eax,0xb8d82b7c
  40e69b:	sahf   
  40e69c:	sbb    DWORD PTR [esi+ebp*2+0x6e945572],esi
  40e6a3:	cmp    ebp,edi
  40e6a5:	and    bh,BYTE PTR [edi+0x4d11e3b]
  40e6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6ac:	xchg   ecx,eax
  40e6ad:	leave  
  40e6ae:	jecxz  0x40e6cb
  40e6b0:	mov    dl,0xce
  40e6b2:	xor    eax,0xd5c633f3
  40e6b7:	arpl   WORD PTR [ebp-0x183e0da2],di
  40e6bd:	repz sbb eax,esi
  40e6c0:	pop    ebx
  40e6c1:	js     0x40e6ab
  40e6c3:	cmp    al,0x54
  40e6c5:	test   BYTE PTR [ecx],bh
  40e6c7:	outs   dx,DWORD PTR ds:[esi]
  40e6c8:	dec    esi
  40e6c9:	js     0x40e712
  40e6cb:	mov    ebx,DWORD PTR [ebp-0x47]
  40e6ce:	and    eax,0xaf2b8eaf
  40e6d3:	mov    ah,0x3
  40e6d5:	cmc    
  40e6d6:	inc    edx
  40e6d7:	jns    0x40e697
  40e6d9:	aas    
  40e6da:	adc    edx,DWORD PTR [esi-0x35]
  40e6dd:	push   eax
  40e6de:	out    dx,eax
  40e6df:	neg    BYTE PTR [ebp+eax*4-0x36]
  40e6e3:	jg     0x40e761
  40e6e5:	data16 mov BYTE PTR [edx-0x32605369],ch
  40e6ec:	xchg   esp,eax
  40e6ed:	jno    0x40e71f
  40e6ef:	push   eax
  40e6f0:	inc    eax
  40e6f1:	push   ecx
  40e6f2:	es dec edx
  40e6f4:	xor    eax,0x8f910f7a
  40e6f9:	jns    0x40e76e
  40e6fb:	jl     0x40e772
  40e6fd:	sub    al,0x5c
  40e6ff:	xor    eax,0x9b12c4
  40e704:	and    BYTE PTR fs:0x633ed8a9,ah
  40e70b:	jb     0x40e6e0
  40e70d:	inc    edx
  40e70e:	int3   
  40e70f:	leave  
  40e710:	es mov bh,0x4d
  40e713:	rcr    BYTE PTR [edx-0x14],cl
  40e716:	(bad)  
  40e717:	jbe    0x40e6b7
  40e719:	inc    ebp
  40e71a:	clc    
  40e71b:	inc    edx
  40e71c:	mov    ds:0xf4a26e4f,al
  40e721:	cs ret 
  40e723:	or     esp,DWORD PTR [ecx-0x53]
  40e726:	xor    DWORD PTR [esi-0x2bc5571d],edx
  40e72c:	into   
  40e72d:	test   eax,0x4039457f
  40e732:	sbb    DWORD PTR [edx-0x23],esp
  40e735:	repz call 0x364e:0x79f68f77
  40e73d:	cld    
  40e73e:	xor    bh,BYTE PTR [edi-0x427c5141]
  40e744:	fwait
  40e745:	pop    edi
  40e746:	jmp    0x7aa2:0x8011230b
  40e74d:	call   0x8289:0xb22e1d23
  40e754:	push   DWORD PTR [ecx]
  40e756:	neg    bx
  40e759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75a:	add    BYTE PTR [esp+esi*8-0x2441e2b5],ch
  40e761:	(bad)  
  40e762:	ja     0x40e765
  40e764:	jp     0x40e7d1
  40e766:	or     DWORD PTR [esp+edx*8],edx
  40e769:	(bad)  
  40e76a:	es leave 
  40e76c:	adc    BYTE PTR [edx+ecx*8+0x62d0851c],cl
  40e773:	push   0xffffffdb
  40e775:	ins    DWORD PTR es:[edi],dx
  40e776:	pop    esp
  40e777:	ins    DWORD PTR es:[edi],dx
  40e778:	lods   al,BYTE PTR ds:[esi]
  40e779:	mov    ds:0xa7bf2acb,al
  40e77e:	out    dx,al
  40e77f:	lahf   
  40e780:	add    dh,BYTE PTR [ebp-0x33a9321e]
  40e786:	lock dec edx
  40e788:	ins    BYTE PTR es:[edi],dx
  40e789:	addr16 ret 
  40e78b:	add    ch,BYTE PTR [eax]
  40e78d:	dec    eax
  40e78e:	arpl   WORD PTR [edx+0x7789174a],ax
  40e794:	add    BYTE PTR [esi-0x67],bl
  40e797:	out    dx,eax
  40e798:	pop    ecx
  40e799:	and    ecx,ebx
  40e79b:	(bad)  
  40e79c:	cmp    BYTE PTR [edx+0x14],ah
  40e79f:	pop    eax
  40e7a0:	inc    esp
  40e7a1:	ss (bad) 
  40e7a3:	and    eax,0x40b692d5
  40e7a8:	push   es
  40e7a9:	xor    al,0xe5
  40e7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7ac:	jno    0x40e809
  40e7ae:	push   0x7d
  40e7b0:	xchg   DWORD PTR [esi],ebx
  40e7b2:	inc    edi
  40e7b3:	inc    ebx
  40e7b4:	cs dec esp
  40e7b6:	mov    dl,0xd7
  40e7b8:	jb     0x40e79d
  40e7ba:	inc    DWORD PTR [ecx+0x7b]
  40e7bd:	(bad)  
  40e7be:	mov    bl,0x8e
  40e7c0:	loopne 0x40e7a2
  40e7c2:	push   ebp
  40e7c3:	sbb    DWORD PTR [edx],edx
  40e7c5:	dec    ebx
  40e7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c7:	mov    edx,0xd8b07810
  40e7cc:	call   0x261d8ea9
  40e7d1:	inc    esp
  40e7d2:	data16 sahf 
  40e7d4:	call   0x4709:0x428d1010
  40e7db:	jb     0x40e7e4
  40e7dd:	pop    eax
  40e7de:	aad    0xb8
  40e7e0:	repz aas 
  40e7e2:	push   0xf1e063a0
  40e7e7:	retf   0xc07d
  40e7ea:	sahf   
  40e7eb:	sbb    dl,bh
  40e7ed:	lea    esi,[esi+0x1c76182a]
  40e7f3:	mov    bh,0xde
  40e7f5:	gs (bad) 
  40e7f7:	jl     0x40e793
  40e7f9:	adc    DWORD PTR [edi],esp
  40e7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7fc:	pop    ebx
  40e7fd:	fiadd  DWORD PTR ds:0x96557468
  40e803:	mov    esi,0x7ab25530
  40e808:	iret   
  40e809:	xchg   esi,eax
  40e80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e80b:	sti    
  40e80c:	(bad)  
  40e80d:	pop    esi
  40e80e:	jo     0x40e885
  40e810:	cld    
  40e811:	xchg   ebp,eax
  40e812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e813:	inc    ebx
  40e814:	push   0xbcdf029e
  40e819:	xchg   edi,eax
  40e81a:	rcl    DWORD PTR [ecx+0x51],0xf5
  40e81e:	jmp    0x40e88c
  40e820:	sub    al,0xa9
  40e822:	retf   0x210d
  40e825:	dec    ebx
  40e826:	pop    ebx
  40e827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e828:	push   ecx
  40e829:	and    BYTE PTR [edx-0x73],ch
  40e82c:	sub    DWORD PTR [ebx-0x995d3e2],0xffffff93
  40e833:	jmp    0xe82bcc87
  40e838:	jl     0x40e7c4
  40e83a:	into   
  40e83b:	cmp    DWORD PTR [edi],0xffffffb8
  40e83e:	adc    eax,0xf3cc990b
  40e843:	enter  0x6816,0xf7
  40e847:	cmc    
  40e848:	push   eax
  40e849:	int    0x91
  40e84b:	push   es
  40e84c:	lock loop 0x40e887
  40e84f:	cmp    BYTE PTR [edi-0x5c873590],al
  40e855:	jmp    0x84daa658
  40e85a:	pop    eax
  40e85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e85c:	cmc    
  40e85d:	xor    ch,bl
  40e85f:	fiadd  WORD PTR ds:0xebec758e
  40e865:	imul   esp,ebp,0xc7c22d33
  40e86b:	sub    DWORD PTR [ebx-0x24],edi
  40e86e:	std    
  40e86f:	retf   0x116
  40e872:	enter  0xeb38,0x4
  40e876:	xchg   ebx,eax
  40e877:	ficomp DWORD PTR [ecx+0x511ecff0]
  40e87d:	xchg   ebp,edi
  40e87f:	cmp    al,0xbe
  40e881:	dec    eax
  40e882:	mov    DWORD PTR [ebp+0x42],edx
  40e885:	push   esi
  40e886:	cmp    al,0xaf
  40e888:	loopne 0x40e8a4
  40e88a:	push   ecx
  40e88b:	sbb    al,0x4e
  40e88d:	adc    DWORD PTR [ebx+0x76b36a8d],ecx
  40e893:	ret    
  40e894:	cmp    BYTE PTR [ebp-0x19],bl
  40e897:	gs or  eax,0x751a7cd3
  40e89d:	jne    0x40e890
  40e89f:	and    al,0x22
  40e8a1:	add    DWORD PTR [ebx+ebx*4+0x8],eax
  40e8a5:	cmp    bh,BYTE PTR [edx]
  40e8a7:	dec    esp
  40e8a9:	ret    
  40e8aa:	jbe    0x40e88b
  40e8ac:	mov    bh,0xee
  40e8ae:	add    al,0x7a
  40e8b0:	or     eax,0x23327341
  40e8b5:	jge    0x40e89b
  40e8b7:	je     0x40e8e9
  40e8b9:	sbb    eax,0xc9beea82
  40e8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8bf:	xlat   BYTE PTR ds:[ebx]
  40e8c0:	jnp    0x40e93e
  40e8c2:	ror    edx,cl
  40e8c4:	fimul  DWORD PTR [ecx+0x78abff0]
  40e8ca:	mov    ebp,0x5f556d26
  40e8cf:	jb     0x40e86c
  40e8d1:	adc    eax,0x64403ae0
  40e8d6:	(bad)  
  40e8d7:	(bad)  
  40e8d8:	jecxz  0x40e916
  40e8da:	and    esi,0xfffffff8
  40e8dd:	test   BYTE PTR [edx],dl
  40e8df:	mov    al,BYTE PTR [eax+0x74]
  40e8e2:	mov    eax,0x8199d990
  40e8e7:	jmp    0x4ec5:0xe4225131
  40e8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ef:	dec    esp
  40e8f0:	shl    DWORD PTR [eax],0xb5
  40e8f3:	xor    al,0xc1
  40e8f5:	daa    
  40e8f6:	std    
  40e8f7:	fimul  WORD PTR [ecx+0x11]
  40e8fa:	dec    edx
  40e8fb:	mov    ds:0xd705cf7d,al
  40e900:	push   ebx
  40e901:	mov    cl,0xc2
  40e903:	fdivr  st(2),st
  40e905:	pop    ss
  40e906:	xor    dh,BYTE PTR [edi-0x7323263]
  40e90c:	jo     0x40e901
  40e90e:	or     BYTE PTR [edx-0x1d],0xb4
  40e912:	mov    eax,ds:0x951bd2c1
  40e917:	add    ah,0x2e
  40e91a:	loopne 0x40e912
  40e91c:	fldl2e 
  40e91e:	mov    ah,0x89
  40e920:	push   ebx
  40e921:	pop    esp
  40e922:	je     0x40e8d3
  40e924:	sbb    DWORD PTR [ebx],esi
  40e926:	mov    ds:0x300cfc73,eax
  40e92b:	xlat   BYTE PTR ds:[ebx]
  40e92c:	push   cs
  40e92d:	cli    
  40e92e:	pop    ecx
  40e92f:	(bad)  
  40e930:	mov    ds:0x3971d6b5,eax
  40e935:	adc    al,0xec
  40e938:	sbb    eax,0xd9fdf726
  40e93d:	out    dx,eax
  40e93e:	add    esi,DWORD PTR [ecx+0x42a1fa09]
  40e944:	inc    esp
  40e945:	inc    esp
  40e946:	add    ch,BYTE PTR [eax+0x288687df]
  40e94c:	pop    edi
  40e94d:	dec    esp
  40e94e:	sub    al,bh
  40e950:	jae    0x40e94e
  40e952:	mov    ds:0x8bcf90e4,al
  40e957:	jmp    0xcbdc:0x3bb2e7b7
  40e95e:	call   0x5d61:0xa47c1fbd
  40e965:	pop    ecx
  40e966:	shl    DWORD PTR [edx-0x4154dca9],1
  40e96c:	lods   al,BYTE PTR ds:[esi]
  40e96d:	pop    es
  40e96e:	mov    es,WORD PTR [eax]
  40e970:	push   es
  40e971:	add    eax,0x7ec5fe83
  40e976:	test   eax,0xd229d9f1
  40e97b:	addr16 or esi,eax
  40e97e:	mov    ecx,ecx
  40e980:	fcmovb st,st(7)
  40e982:	test   dl,0xd6
  40e985:	cmp    dl,BYTE PTR [eax]
  40e987:	scas   eax,DWORD PTR es:[edi]
  40e988:	sub    ah,BYTE PTR [ebx]
  40e98a:	fdiv   DWORD PTR [edx-0x58]
  40e98d:	std    
  40e98e:	or     dl,BYTE PTR [ebp+0x775fbdec]
  40e994:	push   ds
  40e995:	cdq    
  40e996:	mov    ch,0xcc
  40e998:	dec    esp
  40e999:	es repz jmpw 0x4e6c
  40e99f:	mov    ebx,ebx
  40e9a1:	shl    DWORD PTR [eax],1
  40e9a3:	pushf  
  40e9a4:	fisub  WORD PTR [eax-0x20d01c92]
  40e9aa:	mov    al,ds:0x4c1ef3d6
  40e9af:	in     al,0xa1
  40e9b1:	mov    al,0x2d
  40e9b3:	stos   DWORD PTR es:[edi],eax
  40e9b4:	test   al,0x4a
  40e9b6:	call   0x393c:0x1b2992d1
  40e9bd:	aam    0xdd
  40e9bf:	out    dx,al
  40e9c0:	in     eax,0x91
  40e9c2:	sub    eax,0xbaf345bb
  40e9c7:	mov    sp,WORD PTR gs:[eax+0x6b311c18]
  40e9cf:	adc    eax,0xdfc78991
  40e9d4:	rcl    DWORD PTR [edi+0x72],0x8b
  40e9d8:	add    bh,al
  40e9da:	mov    ds:0x4a560a00,al
  40e9df:	inc    eax
  40e9e0:	enter  0x932d,0xa9
  40e9e4:	inc    edi
  40e9e5:	sbb    ebp,DWORD PTR [ebx]
  40e9e7:	cmp    BYTE PTR [ebx-0x5a],dh
  40e9ea:	mov    dh,bh
  40e9ec:	cmp    ebx,DWORD PTR [edx]
  40e9ee:	mov    eax,gs:0x46a64810
  40e9f4:	and    edx,DWORD PTR ds:0xfc24c65c
  40e9fa:	mov    al,0xa5
  40e9fc:	in     al,dx
  40e9fd:	popa   
  40e9fe:	lods   eax,DWORD PTR ds:[esi]
  40e9ff:	push   eax
  40ea00:	test   DWORD PTR [ebp-0x6d3a6166],edi
  40ea06:	(bad)  
  40ea07:	bound  ecx,QWORD PTR [edx+ecx*2]
  40ea0a:	mov    al,ds:0xc52b2296
  40ea0f:	test   BYTE PTR [eax],bl
  40ea11:	(bad)  
  40ea12:	std    
  40ea13:	dec    edi
  40ea14:	and    eax,0x3b02ee94
  40ea19:	cmp    edi,ebp
  40ea1b:	sahf   
  40ea1c:	jle    0x40ea0c
  40ea1e:	mov    edi,0xc3b40b6f
  40ea23:	loop   0x40e9b5
  40ea25:	imul   ebx,DWORD PTR [esp+edx*4],0xf35c79b3
  40ea2c:	ret    
  40ea2d:	push   ecx
  40ea2e:	mov    cl,0xf
  40ea30:	mov    WORD PTR [esi+0x227fc53c],ds
  40ea36:	fild   WORD PTR [edi]
  40ea38:	mov    al,0x68
  40ea3a:	icebp  
  40ea3b:	mov    ebx,0xca879ca7
  40ea40:	cmp    eax,0xed1420b3
  40ea45:	test   DWORD PTR [ecx+ecx*8-0x46a3037],esi
  40ea4c:	ins    BYTE PTR es:[edi],dx
  40ea4d:	nop
  40ea4e:	or     al,0xfb
  40ea50:	lds    esi,FWORD PTR [edx]
  40ea52:	inc    edi
  40ea53:	inc    edx
  40ea54:	add    BYTE PTR [edx],ah
  40ea56:	pop    ebp
  40ea57:	mov    WORD PTR [ecx],gs
  40ea59:	jmp    0xd15e:0x34f28f2b
  40ea60:	nop
  40ea61:	push   esp
  40ea62:	and    al,0xd5
  40ea64:	xchg   edi,eax
  40ea65:	pusha  
  40ea66:	push   eax
  40ea67:	adc    ecx,ebx
  40ea69:	cmp    eax,0xdf40142f
  40ea6e:	jae    0x40eaae
  40ea70:	out    dx,al
  40ea71:	push   0xffffffbc
  40ea73:	xlat   BYTE PTR ds:[ebx]
  40ea74:	mov    ebx,ss
  40ea76:	paddsw mm4,QWORD PTR [edi]
  40ea79:	rcl    BYTE PTR fs:[esi],1
  40ea7c:	jbe    0x40ea67
  40ea7e:	cld    
  40ea7f:	pop    esi
  40ea80:	mov    ch,0xec
  40ea82:	mov    bl,0xef
  40ea84:	stc    
  40ea85:	test   al,0x7b
  40ea87:	sbb    al,dh
  40ea89:	jbe    0x40ea50
  40ea8b:	pop    esp
  40ea8c:	ret    0x91b2
  40ea8f:	jno    0x40eaac
  40ea91:	cld    
  40ea92:	inc    eax
  40ea93:	imul   eax,DWORD PTR [edi],0x90478e5a
  40ea99:	and    DWORD PTR [esi+0x38f2213],esi
  40ea9f:	adc    ebp,DWORD PTR [eax+0x3e]
  40eaa2:	stos   DWORD PTR es:[edi],eax
  40eaa3:	in     al,dx
  40eaa4:	mov    al,BYTE PTR [ecx-0x79]
  40eaa7:	lds    esp,FWORD PTR [ebp+0x45]
  40eaaa:	shr    BYTE PTR [eax+0x1e8d82e5],1
  40eab0:	in     al,0x92
  40eab2:	outs   dx,BYTE PTR ds:[esi]
  40eab3:	ins    BYTE PTR es:[edi],dx
  40eab4:	mov    cl,0x4d
  40eab6:	ss inc esi
  40eab8:	push   cs
  40eab9:	push   esp
  40eaba:	push   edi
  40eabb:	jmp    0xe4b8ff12
  40eac0:	cmp    DWORD PTR [ebp-0x5b],eax
  40eac3:	dec    eax
  40eac4:	push   esi
  40eac5:	retf   
  40eac6:	fdivr  st(4),st
  40eac8:	test   eax,0xab36ed11
  40eacd:	cld    
  40eace:	jmp    0x2da0d37f
  40ead3:	mov    eax,ds:0x4278cddc
  40ead8:	dec    esi
  40ead9:	ins    BYTE PTR es:[edi],dx
  40eada:	in     al,0xa6
  40eadc:	push   esp
  40eadd:	mov    ch,BYTE PTR [ecx+0x61]
  40eae0:	push   ds
  40eae1:	cli    
  40eae2:	dec    edi
  40eae3:	into   
  40eae4:	push   es
  40eae5:	sub    ch,BYTE PTR [edx+edx*1]
  40eae8:	and    al,0xae
  40eaea:	pop    ss
  40eaeb:	call   0x87dc9e86
  40eaf0:	sbb    cl,BYTE PTR [edx+0x51]
  40eaf3:	inc    esi
  40eaf4:	test   BYTE PTR [edi+0x2546b5f1],0x15
  40eafb:	stos   BYTE PTR es:[edi],al
  40eafc:	push   ds
  40eafd:	push   edi
  40eafe:	ret    0x824c
  40eb01:	xchg   esp,eax
  40eb02:	bound  eax,QWORD PTR [esi-0x2c]
  40eb05:	mov    cl,0x4b
  40eb07:	in     al,dx
  40eb08:	repz mov al,ds:0x187d458c
  40eb0e:	jne    0x40eb74
  40eb10:	pop    esi
  40eb11:	cwde   
  40eb12:	shl    BYTE PTR [edi-0x7d142bec],cl
  40eb18:	or     edx,DWORD PTR [esp+edi*8+0x36]
  40eb1c:	aas    
  40eb1d:	retf   
  40eb1e:	dec    ecx
  40eb1f:	adc    DWORD PTR [esp+ebp*1-0x40599e6d],edx
  40eb26:	xor    al,0x6e
  40eb28:	pop    ecx
  40eb29:	out    0x62,al
  40eb2b:	mov    cl,ch
  40eb2d:	push   ss
  40eb2e:	cli    
  40eb2f:	aas    
  40eb30:	je     0x40eba7
  40eb32:	popa   
  40eb33:	inc    ecx
  40eb34:	mov    bl,BYTE PTR [edi+eax*8+0x68]
  40eb38:	rol    DWORD PTR [esi+0x18],cl
  40eb3b:	hlt    
  40eb3c:	mov    dh,0xfa
  40eb3e:	xor    ah,BYTE PTR [edx]
  40eb40:	cld    
  40eb41:	xchg   DWORD PTR [ebp+0x36],esp
  40eb44:	push   edx
  40eb45:	out    0xed,al
  40eb47:	(bad)  
  40eb48:	cmp    BYTE PTR [edx-0x4ac37438],al
  40eb4e:	ins    DWORD PTR es:[edi],dx
  40eb4f:	push   ss
  40eb50:	mov    cl,0x49
  40eb52:	out    dx,eax
  40eb53:	jg     0x40eb22
  40eb55:	mov    edx,0x8d310a72
  40eb5a:	mov    ch,0xf2
  40eb5c:	je     0x40ebaf
  40eb5e:	mov    ds:0x53f625a1,eax
  40eb63:	(bad)  
  40eb64:	std    
  40eb65:	inc    ebp
  40eb66:	push   0x53
  40eb68:	mov    cl,0x58
  40eb6a:	div    eax
  40eb6c:	lods   eax,DWORD PTR ds:[esi]
  40eb6d:	cmp    eax,0x6b9ac668
  40eb72:	(bad)  
  40eb73:	sbb    eax,0x813c32a5
  40eb78:	push   esi
  40eb79:	int3   
  40eb7a:	push   esp
  40eb7b:	out    0x45,al
  40eb7d:	stos   BYTE PTR es:[edi],al
  40eb7e:	call   0xdb5c:0x7fceff95
  40eb85:	outs   dx,BYTE PTR ds:[esi]
  40eb86:	push   ebx
  40eb87:	or     DWORD PTR [ebp-0x6648923c],esp
  40eb8d:	je     0x40eb93
  40eb8f:	lods   al,BYTE PTR ds:[esi]
  40eb90:	lea    ebx,[esi-0x3]
  40eb93:	out    dx,eax
  40eb94:	cwde   
  40eb95:	jns    0x40eb93
  40eb97:	fidiv  DWORD PTR [edi+0x557d6541]
  40eb9d:	and    BYTE PTR [esi+0x79ceab00],0xcb
  40eba4:	repz fisttp DWORD PTR [esp+ecx*1+0x13035278]
  40ebac:	dec    ebp
  40ebad:	cmp    DWORD PTR [eax+ebx*2+0x1d96dc6e],ebx
  40ebb4:	sub    al,0x61
  40ebb6:	retf   
  40ebb7:	dec    eax
  40ebb8:	sti    
  40ebb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebba:	fs add al,0xb
  40ebbd:	retf   
  40ebbe:	dec    ebp
  40ebbf:	jae    0x40eb82
  40ebc1:	mov    edx,0x67c37a9b
  40ebc6:	ror    ebx,1
  40ebc8:	jo     0x40eb63
  40ebca:	sbb    eax,0x742f9992
  40ebcf:	adc    dh,BYTE PTR [esi]
  40ebd1:	int3   
  40ebd2:	std    
  40ebd3:	push   0xdfbc683b
  40ebd8:	pop    eax
  40ebd9:	mov    edi,DWORD PTR [ebp+0x7ebc92b8]
  40ebdf:	dec    eax
  40ebe0:	push   es
  40ebe1:	into   
  40ebe2:	neg    DWORD PTR [esi]
  40ebe4:	in     al,dx
  40ebe5:	adc    eax,0x45fe3d2e
  40ebea:	xchg   ecx,eax
  40ebeb:	pop    ebp
  40ebec:	idiv   edx
  40ebee:	xor    bl,BYTE PTR [ecx+0x6c351b5b]
  40ebf4:	and    BYTE PTR [edi-0x4af6a97f],dh
  40ebfa:	add    DWORD PTR ds:0x2723db7e,ebx
  40ec00:	in     al,dx
  40ec01:	cld    
  40ec02:	pop    ds
  40ec03:	mul    esp
  40ec05:	pushf  
  40ec06:	inc    esp
  40ec07:	or     bh,BYTE PTR [esi+edi*2+0x5e82b548]
  40ec0e:	pop    es
  40ec0f:	xchg   esi,eax
  40ec10:	in     al,0x2
  40ec12:	cwde   
  40ec13:	loop   0x40ebcd
  40ec15:	or     bh,bl
  40ec17:	ret    
  40ec18:	out    0xb2,al
  40ec1a:	fsub   st,st(3)
  40ec1c:	push   edx
  40ec1d:	cwde   
  40ec1e:	cmp    cl,BYTE PTR [eax+0xc45270f]
  40ec24:	std    
  40ec25:	gs repnz dec edi
  40ec28:	test   DWORD PTR ds:0x2fb3312,eax
  40ec2e:	jl     0x40ec1f
  40ec30:	or     dl,ch
  40ec32:	pop    ss
  40ec33:	imul   ebp,DWORD PTR [ebx],0x7a0f6dbb
  40ec39:	cmp    edi,DWORD PTR [eax+0xccbfaab]
  40ec3f:	popa   
  40ec40:	ins    DWORD PTR es:[edi],dx
  40ec41:	sub    edi,DWORD PTR [ebx]
  40ec43:	in     al,0xbe
  40ec45:	fprem1 
  40ec47:	stos   DWORD PTR es:[edi],eax
  40ec48:	inc    ebp
  40ec49:	mov    edi,DWORD PTR [eax+0x5c626f32]
  40ec4f:	(bad)  [edx-0x30]
  40ec52:	cld    
  40ec53:	(bad)  
  40ec54:	push   eax
  40ec55:	mov    ebp,0x3508e697
  40ec5a:	stos   BYTE PTR es:[edi],al
  40ec5b:	xchg   edx,eax
  40ec5c:	std    
  40ec5d:	jno    0x40ec13
  40ec5f:	loope  0x40ebfb
  40ec61:	retf   
  40ec62:	fimul  WORD PTR [edi]
  40ec64:	ins    DWORD PTR es:[edi],dx
  40ec65:	sbb    cl,BYTE PTR [edi-0x1a580645]
  40ec6b:	daa    
  40ec6c:	scas   al,BYTE PTR es:[edi]
  40ec6d:	mov    ds:0x3aca348a,eax
  40ec72:	sub    esi,DWORD PTR [edx+0x8574c1c]
  40ec78:	and    ah,BYTE PTR [ecx+0x76e758fe]
  40ec7e:	or     bl,ch
  40ec80:	pop    edx
  40ec81:	cmp    BYTE PTR [ecx-0x29],bh
  40ec84:	or     ecx,DWORD PTR ds:0xe0fbb4e8
  40ec8a:	pop    ebx
  40ec8b:	jle    0x40ec54
  40ec8d:	xor    DWORD PTR [ebx+0x29],edx
  40ec90:	popf   
  40ec91:	xor    ebp,DWORD PTR [ecx]
  40ec93:	pop    edx
  40ec94:	sub    ebx,ecx
  40ec96:	mov    eax,0x624ce48e
  40ec9b:	xor    ebx,edi
  40ec9d:	arpl   WORD PTR [edx+0x1a],cx
  40eca0:	sti    
  40eca1:	mov    al,0x32
  40eca3:	push   ecx
  40eca4:	arpl   WORD PTR cs:[ebp-0x5b],sp
  40eca8:	mov    ah,0xea
  40ecaa:	jo     0x40ec4a
  40ecac:	jb     0x40ecfb
  40ecae:	push   ebx
  40ecaf:	nop
  40ecb0:	sbb    esp,DWORD PTR [ecx-0xef8b502]
  40ecb6:	pop    esp
  40ecb7:	pop    esp
  40ecb8:	jp     0x40ed1c
  40ecba:	or     BYTE PTR [edi+0x673fc7ab],ah
  40ecc0:	outs   dx,BYTE PTR ds:[esi]
  40ecc1:	push   edx
  40ecc2:	sub    eax,DWORD PTR [ebx-0x61b7721a]
  40ecc8:	popf   
  40ecc9:	mov    cx,WORD PTR [eax]
  40eccc:	pop    esi
  40eccd:	push   ss
  40ecce:	and    ch,BYTE PTR [ecx]
  40ecd0:	(bad)  
  40ecd1:	jnp    0x40ed11
  40ecd3:	sti    
  40ecd4:	inc    esi
  40ecd5:	pop    edi
  40ecd6:	pop    ds
  40ecd7:	pop    ecx
  40ecd8:	leave  
  40ecd9:	inc    eax
  40ecda:	data16 jge 0x40eccf
  40ecdd:	xor    BYTE PTR [ebp+0x26],0x6
  40ece1:	(bad)  
  40ece2:	xor    BYTE PTR [edx+0x66],dh
  40ece5:	inc    ebx
  40ece6:	jmp    0x40ed33
  40ece8:	jmp    0x40ed2f
  40ecea:	popa   
  40eceb:	and    bh,al
  40eced:	pop    ebp
  40ecee:	dec    edx
  40ecef:	cs push ds
  40ecf1:	out    0xc1,al
  40ecf3:	mov    ds:0x65e23afe,eax
  40ecf8:	xor    eax,0x7a3cd5da
  40ecfd:	unpckhps xmm6,XMMWORD PTR [esi+0x5da3880c]
  40ed04:	jns    0x40ecb1
  40ed06:	ds adc BYTE PTR ss:[edi+0x2a],bh
  40ed0b:	add    ch,BYTE PTR [edi-0x68ccd9fe]
  40ed11:	mov    bh,0xef
  40ed13:	pusha  
  40ed14:	mov    BYTE PTR [edi-0x6],0x20
  40ed18:	jne    0x40ed4e
  40ed1a:	sbb    al,0xfd
  40ed1c:	int3   
  40ed1d:	and    dh,bh
  40ed1f:	mov    ds:0x3a3b0eca,al
  40ed24:	not    BYTE PTR gs:[edx-0x6c3a5548]
  40ed2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed2c:	in     eax,0xed
  40ed2e:	push   edx
  40ed2f:	imul   edi,DWORD PTR [edx+0x39],0xf1c2cea5
  40ed36:	popf   
  40ed37:	ret    0xdb74
  40ed3a:	jge    0x40eda0
  40ed3c:	ss pop ds
  40ed3e:	(bad)  
  40ed40:	pop    ecx
  40ed41:	gs jb  0x40ed18
  40ed44:	pop    esi
  40ed45:	lock jnp 0x40ed48
  40ed48:	lahf   
  40ed49:	xchg   edi,eax
  40ed4a:	adc    BYTE PTR [ecx+0x56],bh
  40ed4d:	call   0x5050c398
  40ed52:	imul   esi,DWORD PTR [ecx-0x7692c324],0x75
  40ed59:	leave  
  40ed5a:	sub    al,0x4
  40ed5c:	es in  al,0xe5
  40ed5f:	cmp    esi,esi
  40ed61:	pop    ebx
  40ed62:	into   
  40ed63:	xor    dl,BYTE PTR [edi+eiz*8-0x160ff5a6]
  40ed6a:	sbb    al,0xd9
  40ed6c:	push   esi
  40ed6d:	jae    0x40ed1a
  40ed6f:	jle    0x40ed0e
  40ed71:	icebp  
  40ed72:	pushf  
  40ed73:	pop    esp
  40ed74:	push   ebp
  40ed75:	jmp    0x40ed6a
  40ed77:	jb     0x40edb5
  40ed79:	push   edx
  40ed7a:	xor    al,0x9a
  40ed7c:	mov    bl,0x34
  40ed7e:	cmp    eax,0xfe89c9be
  40ed83:	jle    0x40ed15
  40ed85:	dec    edx
  40ed86:	ror    DWORD PTR [ecx],cl
  40ed88:	test   eax,0x24ae4564
  40ed8d:	rcr    ah,0x3b
  40ed90:	or     ch,BYTE PTR [eax+0x30e0e149]
  40ed96:	cmp    ebx,DWORD PTR [ecx+0x2c]
  40ed99:	iret   
  40ed9a:	pop    ebp
  40ed9b:	dec    DWORD PTR [ecx]
  40ed9d:	stos   DWORD PTR es:[edi],eax
  40ed9e:	ins    BYTE PTR es:[edi],dx
  40ed9f:	pushf  
  40eda0:	outs   dx,BYTE PTR ds:[esi]
  40eda1:	jmp    0x276ca117
  40eda6:	(bad)  
  40eda7:	jecxz  0x40ed9c
  40eda9:	xchg   bh,bh
  40edab:	push   eax
  40edac:	jle    0x40ede5
  40edae:	push   eax
  40edaf:	iret   
  40edb0:	in     eax,dx
  40edb1:	xchg   esi,eax
  40edb2:	stos   BYTE PTR es:[edi],al
  40edb3:	pop    edx
  40edb4:	push   es
  40edb5:	or     al,0xc8
  40edb7:	mov    edi,DWORD PTR [ecx+0x79]
  40edba:	lea    eax,[eax+0x3036f062]
  40edc0:	mov    bh,0xba
  40edc2:	inc    ebp
  40edc3:	add    BYTE PTR ds:0x2b6f9b53,0x75
  40edca:	dec    DWORD PTR [esi+0x7f]
  40edcd:	lods   eax,DWORD PTR ds:[esi]
  40edce:	fnstsw WORD PTR [ebx]
  40edd0:	pop    es
  40edd1:	(bad)  
  40edd2:	dec    dh
  40edd4:	dec    edx
  40edd5:	add    ah,dl
  40edd7:	sbb    bl,dh
  40edd9:	cmp    BYTE PTR [edx-0x50],ah
  40eddc:	dec    ebx
  40eddd:	retf   
  40edde:	aas    
  40eddf:	sahf   
  40ede0:	xchg   edx,eax
  40ede1:	adc    DWORD PTR ds:0x3fece99e,edx
  40ede7:	push   ebx
  40ede8:	xchg   ebp,eax
  40ede9:	daa    
  40edea:	or     al,0xf9
  40edec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eded:	sub    al,0x97
  40edef:	push   esi
  40edf0:	and    cl,bh
  40edf2:	je     0x40ee32
  40edf4:	mov    ebp,0x914c79f5
  40edf9:	sub    DWORD PTR [esp+edx*1-0x78aad6ff],eax
  40ee00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee01:	adc    esp,ebx
  40ee03:	rcr    BYTE PTR [edi+ebx*8+0x3a],1
  40ee07:	mov    esp,0x16601873
  40ee0c:	sbb    al,0xa7
  40ee0e:	or     al,0x44
  40ee10:	mov    edi,0x55392980
  40ee15:	mov    ebx,0x58eb9f8d
  40ee1a:	in     eax,0x94
  40ee1c:	sahf   
  40ee1d:	mov    DWORD PTR [edi-0x7d485189],edi
  40ee23:	lds    ebp,FWORD PTR [edx-0x4]
  40ee26:	jmp    0x5f1307ce
  40ee2b:	call   0x7f705689
  40ee30:	clc    
  40ee31:	xchg   ebp,eax
  40ee32:	pop    es
  40ee33:	aam    0xdd
  40ee35:	pop    esp
  40ee36:	cdq    
  40ee37:	inc    esp
  40ee38:	pop    ebx
  40ee39:	fnstcw WORD PTR [esi]
  40ee3b:	pop    ebp
  40ee3c:	pop    esi
  40ee3d:	inc    edx
  40ee3e:	add    DWORD PTR [esi-0x2c],esi
  40ee41:	repz cli 
  40ee43:	push   esp
  40ee44:	bound  ebx,QWORD PTR [ebp+0x4b6f80eb]
  40ee4a:	retf   
  40ee4b:	sbb    DWORD PTR [edx],esi
  40ee4d:	sub    DWORD PTR [edi],esp
  40ee4f:	stc    
  40ee50:	fs push ebp
  40ee52:	mov    al,ds:0x12880f2a
  40ee57:	adc    BYTE PTR [ecx],0x8b
  40ee5a:	je     0x40eed7
  40ee5c:	fnstcw WORD PTR [ebx+0xc24fba1]
  40ee62:	mov    ?,WORD PTR [esi-0x2f]
  40ee65:	(bad)  
  40ee66:	xchg   ebp,eax
  40ee67:	cmp    eax,0x1f6819c7
  40ee6c:	fisttp QWORD PTR [ecx]
  40ee6e:	mov    bh,0xe9
  40ee70:	jmp    0xaed6:0x7e59a93e
  40ee77:	out    dx,al
  40ee78:	mov    edx,0xb8349e11
  40ee7d:	outs   dx,DWORD PTR ds:[esi]
  40ee7e:	sbb    BYTE PTR [esi],0xbd
  40ee81:	loopne 0x40eead
  40ee83:	je     0x40eeb7
  40ee85:	push   eax
  40ee86:	inc    esi
  40ee87:	adc    eax,0x3aa2a18e
  40ee8c:	and    DWORD PTR [ebx+0x38],ebp
  40ee8f:	and    DWORD PTR [edx-0x681bdf00],0x90b0eba5
  40ee99:	lods   al,BYTE PTR ds:[esi]
  40ee9a:	mov    esi,DWORD PTR [edx-0x5a]
  40ee9d:	add    BYTE PTR [esi-0x196054e9],bl
  40eea3:	sbb    al,0x85
  40eea5:	test   DWORD PTR [edi],eax
  40eea7:	ret    
  40eea8:	leave  
  40eea9:	lods   al,BYTE PTR ds:[esi]
  40eeaa:	add    cl,cl
  40eeac:	aad    0xf1
  40eeae:	push   ss
  40eeaf:	mov    eax,ds:0xb5b17ce9
  40eeb4:	mov    dl,BYTE PTR [edx+0x2d5b0a7a]
  40eeba:	frstor [edi]
  40eebc:	adc    bh,0x7f
  40eebf:	add    edx,DWORD PTR ds:0xcb257850
  40eec5:	mov    dl,0x59
  40eec7:	jecxz  0x40ef44
  40eec9:	sub    al,0xfc
  40eecb:	in     al,0x4b
  40eecd:	or     dl,ah
  40eecf:	mov    WORD PTR [ebp+0x78],ss
  40eed2:	mov    ecx,0x7e5ee0f5
  40eed7:	mov    ecx,ebx
  40eed9:	mov    ebp,esi
  40eedb:	int3   
  40eedc:	adc    al,BYTE PTR [esi]
  40eede:	xlat   BYTE PTR ds:[ebx]
  40eedf:	jp     0x40eef3
  40eee1:	pushf  
  40eee2:	fiadd  DWORD PTR [eax+0x47]
  40eee5:	sub    BYTE PTR ds:0x4b930da1,ch
  40eeeb:	sbb    eax,DWORD PTR ds:0x957c0fa3
  40eef1:	pop    edi
  40eef2:	js     0x40eeed
  40eef4:	pop    edx
  40eef5:	pop    ebx
  40eef6:	mov    edi,0x46a1b8f5
  40eefb:	xlat   BYTE PTR ds:[ebx]
  40eefc:	adc    al,0x45
  40eefe:	popf   
  40eeff:	sbb    al,0xb1
  40ef01:	popa   
  40ef02:	push   ecx
  40ef03:	(bad)  
  40ef05:	inc    esp
  40ef06:	leave  
  40ef07:	mov    ds:0x9fdce70,al
  40ef0c:	pushf  
  40ef0d:	jg     0x40eebe
  40ef0f:	xor    cl,BYTE PTR ds:0x9ce73927
  40ef15:	xor    ch,dl
  40ef17:	inc    edi
  40ef18:	pop    ss
  40ef19:	mov    BYTE PTR [edx-0x6a254076],al
  40ef1f:	adc    ch,BYTE PTR [ecx+0x2ccff915]
  40ef25:	mov    dl,cl
  40ef27:	retf   0xa410
  40ef2a:	adc    edi,ebp
  40ef2c:	inc    esi
  40ef2d:	call   0xa7c2a4c5
  40ef32:	xor    al,0x35
  40ef34:	addr16 xor eax,0x55cfffd
  40ef3a:	sub    ecx,DWORD PTR [edi+ebp*2+0x56]
  40ef3e:	jg     0x40ef75
  40ef40:	jmp    0x40ef0a
  40ef42:	mov    ebp,edx
  40ef44:	push   0xcae383c8
  40ef49:	jg     0x40eeed
  40ef4b:	pop    edx
  40ef4c:	mov    edx,0x304a90bc
  40ef51:	and    BYTE PTR [edi-0x58],dh
  40ef54:	loope  0x40efc9
  40ef56:	push   0xfffffffe
  40ef58:	les    ecx,FWORD PTR [ebx+eiz*1]
  40ef5b:	dec    ebx
  40ef5c:	mov    DWORD PTR [eax+0x5aad0085],ebp
  40ef62:	jle    0x40ef72
  40ef64:	inc    ebp
  40ef65:	mov    esp,0x1c64905b
  40ef6a:	pop    edi
  40ef6b:	bswap  eax
  40ef6d:	fiadd  DWORD PTR [ebx+eax*4]
  40ef70:	out    dx,al
  40ef71:	call   0x28b05481
  40ef76:	fwait
  40ef77:	test   DWORD PTR [esi-0x5ecf564b],edi
  40ef7d:	mov    ch,0x86
  40ef7f:	inc    edx
  40ef80:	inc    esi
  40ef81:	sbb    esp,DWORD PTR [ebp+ecx*4+0x6cb40df4]
  40ef88:	xor    BYTE PTR [eax-0x4f],ch
  40ef8b:	add    edx,DWORD PTR [ebx]
  40ef8d:	push   0xb2b8e944
  40ef92:	enter  0x3397,0x46
  40ef96:	xlat   BYTE PTR ds:[ebx]
  40ef97:	fisubr DWORD PTR [edi+0x21]
  40ef9a:	ficomp DWORD PTR [ebx-0x2804feaa]
  40efa0:	xchg   ebp,eax
  40efa1:	xlat   BYTE PTR ds:[ebx]
  40efa2:	ror    DWORD PTR [ecx-0x45],0x1
  40efa6:	gs jo  0x40f000
  40efa9:	aas    
  40efaa:	neg    BYTE PTR [edi]
  40efac:	daa    
  40efad:	shr    BYTE PTR [eax+0x53],1
  40efb0:	ror    DWORD PTR [bp+si-0xbb],cl
  40efb5:	and    DWORD PTR ds:0x429018,0x0
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x24
  40f695:	add    DWORD PTR [esp+ecx*4-0x79],esp
  40f699:	retf   0x7a7a
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f68c
  40f6a1:	fwait
  40f6a2:	in     al,0xa6
  40f6a4:	(bad)  
  40f6a5:	lock adc al,0x9f
  40f6a8:	xor    bh,dh
  40f6aa:	sub    esi,DWORD PTR [eax-0x2a]
  40f6ad:	iret   
  40f6ae:	mov    ebx,0x67b531eb
  40f6b3:	or     al,0x5b
  40f6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6b6:	push   es
  40f6b7:	loopne 0x40f68a
  40f6b9:	push   0x49fc3e07
  40f6be:	mov    ah,0x90
  40f6c0:	sub    eax,0x5d4574e1
  40f6c5:	ds stc 
  40f6c7:	adc    BYTE PTR [esi+0x2be03d12],ah
  40f6cd:	bound  eax,QWORD PTR [edi+0x39ea9034]
  40f6d3:	inc    edi
  40f6d4:	mov    ebp,0xc7f1e137
  40f6d9:	xor    ebx,DWORD PTR [edi+0x56]
  40f6dc:	dec    esi
  40f6dd:	aaa    
  40f6de:	mov    ?,WORD PTR [esi]
  40f6e0:	and    bl,BYTE PTR [eax+0x3edee244]
  40f6e6:	dec    ebp
  40f6e7:	ins    DWORD PTR es:[edi],dx
  40f6e8:	in     al,0x52
  40f6ea:	ror    BYTE PTR [eax+0x72b8a528],cl
  40f6f0:	jecxz  0x40f6e0
  40f6f2:	push   edi
  40f6f3:	adc    DWORD PTR [edi+0x7acfcf6b],esp
  40f6f9:	aam    0xe2
  40f6fb:	and    al,0x23
  40f6fd:	xor    bh,BYTE PTR [ebx-0xa3ba6f7]
  40f703:	test   DWORD PTR [eax-0x38371df0],ebp
  40f709:	push   edi
  40f70a:	mov    dh,0x2e
  40f70c:	in     eax,dx
  40f70d:	popa   
  40f70e:	test   BYTE PTR [ebp*1-0x2446ac9b],bh
  40f715:	fs aad 0xe4
  40f718:	or     eax,0xae9676f8
  40f71d:	inc    ebx
  40f71e:	fisub  WORD PTR [ecx]
  40f720:	adc    ebp,DWORD PTR [esi+ebx*1-0x18]
  40f724:	imul   ebp,edi,0xffffffde
  40f727:	add    BYTE PTR [ebp-0x5246bb28],ch
  40f72d:	repnz cmp esp,DWORD PTR [eax-0x1449796]
  40f734:	adc    BYTE PTR [ebx+0x7e],dl
  40f737:	pop    ds
  40f738:	cmp    al,0x77
  40f73a:	je     0x40f71e
  40f73c:	mov    ds:0xf3c44eef,eax
  40f741:	ins    DWORD PTR es:[edi],dx
  40f742:	pop    edx
  40f743:	data16 mov dl,0x44
  40f746:	xor    ecx,DWORD PTR [edx]
  40f748:	iret   
  40f749:	repnz data16 in al,dx
  40f74c:	and    ebx,DWORD PTR [ecx]
  40f74e:	rol    BYTE PTR [edx+0x3ebb8200],0xa4
  40f755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f756:	dec    eax
  40f757:	aam    0x1b
  40f759:	ins    BYTE PTR es:[edi],dx
  40f75a:	aas    
  40f75b:	scas   al,BYTE PTR es:[edi]
  40f75c:	imul   edx,DWORD PTR [ebx-0x3ee72179],0x9d1eb506
  40f766:	mov    esp,0xcc5f9c1d
  40f76b:	xchg   edi,eax
  40f76c:	mov    esp,0x9b44603e
  40f771:	call   0x422b:0x72e44853
  40f778:	mov    ds:0xb2c3808e,eax
  40f77d:	lds    ebp,FWORD PTR [ecx+0x37dffac2]
  40f783:	bound  edi,QWORD PTR [edi+esi*8]
  40f786:	xchg   DWORD PTR [edx],esi
  40f788:	fwait
  40f789:	mov    al,ch
  40f78b:	pop    esp
  40f78c:	outs   dx,DWORD PTR ds:[esi]
  40f78d:	int3   
  40f78e:	bnd jle 0x40f7c3
  40f791:	and    esp,edi
  40f793:	jns    0x40f7f5
  40f795:	xchg   esi,eax
  40f796:	(bad)  
  40f798:	repz scas eax,DWORD PTR es:[edi]
  40f79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f79b:	sub    al,0x96
  40f79d:	scas   eax,DWORD PTR es:[edi]
  40f79e:	rol    BYTE PTR [esi-0x6e],0x45
  40f7a2:	(bad)  
  40f7a3:	jg     0x40f7bc
  40f7a5:	sub    ah,0x99
  40f7a8:	jb     0x40f76f
  40f7aa:	xor    dl,BYTE PTR [ecx+0x6]
  40f7ad:	aad    0x82
  40f7af:	test   eax,0x81f74ddf
  40f7b4:	inc    esp
  40f7b5:	and    BYTE PTR [esp+eiz*8-0x512cb916],bh
  40f7bc:	fcom   QWORD PTR [edx+0x32]
  40f7bf:	sub    al,BYTE PTR [eax]
  40f7c1:	mov    ebp,eax
  40f7c3:	out    dx,eax
  40f7c4:	pop    edx
  40f7c5:	test   al,0xd8
  40f7c7:	and    al,dl
  40f7c9:	stos   BYTE PTR es:[edi],al
  40f7ca:	retf   
  40f7cb:	dec    ebx
  40f7cc:	push   ebx
  40f7cd:	and    eax,0xb006e9ea
  40f7d2:	int    0x43
  40f7d4:	lahf   
  40f7d5:	sbb    BYTE PTR [edx+esi*1],cl
  40f7d8:	mov    esi,0xf470f058
  40f7dd:	call   0x237f1c39
  40f7e2:	jecxz  0x40f79a
  40f7e4:	dec    esi
  40f7e5:	ins    DWORD PTR es:[edi],dx
  40f7e6:	add    BYTE PTR [eax+0x44],dh
  40f7e9:	or     eax,DWORD PTR [ebp+0x5377e5bd]
  40f7ef:	or     bl,BYTE PTR [ebp-0x73c54f5b]
  40f7f5:	jns    0x40f83e
  40f7f7:	cmp    eax,0xeb4e35c2
  40f7fc:	daa    
  40f7fd:	cmp    eax,0x42bb73d1
  40f802:	scas   al,BYTE PTR es:[edi]
  40f803:	aam    0x47
  40f805:	mov    edi,0x854b92f6
  40f80a:	mov    ah,0xe3
  40f80c:	fadd   QWORD PTR [ebp-0x27c24008]
  40f812:	leave  
  40f813:	xchg   BYTE PTR [edi],bl
  40f815:	daa    
  40f816:	and    ch,bh
  40f818:	inc    ecx
  40f819:	mov    ss,WORD PTR [edx-0x4882a55b]
  40f81f:	push   es
  40f820:	enter  0x6c8e,0xca
  40f824:	push   0xdde6e4a4
  40f829:	cmp    ecx,DWORD PTR [edx+0x74cba5f2]
  40f82f:	xor    al,0x6d
  40f831:	jae    0x40f7e4
  40f833:	sti    
  40f834:	cs into 
  40f836:	ret    0xb620
  40f839:	(bad)  
  40f83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83b:	xchg   edi,eax
  40f83c:	pop    ebp
  40f83d:	add    BYTE PTR [eax+0x2c8a249f],bh
  40f843:	mov    BYTE PTR [edx+0x1fc810f1],dh
  40f849:	jno    0x40f80a
  40f84b:	popa   
  40f84c:	mov    bl,0xd8
  40f84e:	xchg   ebx,eax
  40f84f:	push   edx
  40f850:	or     eax,0x968072da
  40f855:	mov    cl,0xde
  40f857:	rcl    dl,0x43
  40f85a:	repnz xor al,0x28
  40f85d:	mov    ebx,0x834f8648
  40f862:	ins    DWORD PTR es:[edi],dx
  40f863:	add    dh,ah
  40f865:	mov    eax,0x811efc18
  40f86a:	fwait
  40f86b:	outs   dx,DWORD PTR ds:[esi]
  40f86c:	fidiv  WORD PTR [edx-0x31]
  40f86f:	call   FWORD PTR [ebx-0x1c3635b9]
  40f875:	mov    WORD PTR ds:0x2540bf88,gs
  40f87b:	fmul   QWORD PTR [ebx]
  40f87d:	icebp  
  40f87e:	or     dh,BYTE PTR [ebx+ebp*1+0x36adbb5a]
  40f885:	dec    ebx
  40f886:	iret   
  40f887:	jg     0x40f89e
  40f889:	cmp    DWORD PTR [edx+0x19be924c],eax
  40f88f:	mov    BYTE PTR [ebx+0xc],0xa4
  40f893:	sub    DWORD PTR [eax-0x4],esi
  40f896:	shl    al,cl
  40f898:	pop    ds
  40f899:	fmul   QWORD PTR [ebx+0x749004ae]
  40f89f:	xor    eax,0xdf23b507
  40f8a4:	out    dx,al
  40f8a5:	dec    edi
  40f8a6:	xchg   esi,eax
  40f8a7:	outs   dx,DWORD PTR ds:[esi]
  40f8a8:	mov    ebx,DWORD PTR [ecx]
  40f8aa:	mov    edx,0xd3a19455
  40f8af:	cmp    eax,0x87d514f8
  40f8b4:	mov    esp,0xbd6a7c56
  40f8b9:	mov    dl,0xf
  40f8bb:	mov    bl,0xbf
  40f8bd:	imul   edx,DWORD PTR [ecx],0x4c17b5
  40f8c3:	fld    TBYTE PTR [edx+0x36]
  40f8c6:	ins    BYTE PTR es:[edi],dx
  40f8c7:	jecxz  0x40f8c0
  40f8c9:	inc    ebp
  40f8ca:	loope  0x40f8aa
  40f8cc:	or     BYTE PTR [edx-0x59],dl
  40f8cf:	xor    ebx,DWORD PTR [ebp+0x5a7ce41e]
  40f8d5:	xchg   edx,eax
  40f8d6:	test   eax,0x7fb72eb7
  40f8db:	cmp    DWORD PTR [esi+0x61],eax
  40f8de:	xor    BYTE PTR [esi+ecx*4],cl
  40f8e1:	in     al,0x9e
  40f8e3:	outs   dx,BYTE PTR ds:[esi]
  40f8e4:	adc    BYTE PTR [eax+eax*2-0x14],bh
  40f8e8:	sti    
  40f8e9:	mov    dl,0x98
  40f8eb:	mov    eax,ds:0x9aede214
  40f8f0:	jbe    0x40f92e
  40f8f2:	in     eax,dx
  40f8f3:	out    0xe4,al
  40f8f5:	iret   
  40f8f6:	jg     0x40f93d
  40f8f8:	mov    DWORD PTR gs:0xe702b361,ecx
  40f8ff:	std    
  40f900:	pop    ecx
  40f901:	xchg   edi,eax
  40f902:	mov    ah,0x2a
  40f904:	shl    esi,cl
  40f906:	imul   eax,esi,0x5c8f7fed
  40f90c:	loop   0x40f8ea
  40f90e:	inc    edi
  40f90f:	adc    DWORD PTR [ebx+0x510c31a1],eax
  40f915:	adc    DWORD PTR [esi],ebx
  40f917:	push   0xffffffea
  40f919:	mov    WORD PTR [ecx-0x6c],es
  40f91c:	sbb    dh,BYTE PTR [ecx]
  40f91e:	(bad)  
  40f91f:	adc    esp,DWORD PTR [edx-0x12]
  40f922:	cmp    dh,ch
  40f924:	scas   al,BYTE PTR es:[edi]
  40f925:	mov    esi,0xc1018e43
  40f92a:	adc    al,0x27
  40f92c:	cmc    
  40f92d:	sbb    esi,eax
  40f92f:	test   dh,dh
  40f931:	and    BYTE PTR [ecx+edx*1],dh
  40f934:	call   0x18e65c1
  40f939:	sbb    eax,0x6838daaf
  40f93e:	mov    ds:0xc9917d8b,al
  40f943:	sbb    eax,0x5df6dd7b
  40f948:	mov    gs,esi
  40f94a:	fild   QWORD PTR [ecx-0x26ffa8df]
  40f950:	popa   
  40f951:	jne    0x40f8fa
  40f953:	imul   edx,DWORD PTR [ebp-0x723657ee],0xb98858df
  40f95d:	out    dx,eax
  40f95e:	sti    
  40f95f:	fimul  WORD PTR es:[esp+eax*2]
  40f963:	div    BYTE PTR [edx-0x217aa556]
  40f969:	into   
  40f96a:	in     al,dx
  40f96b:	in     eax,dx
  40f96c:	mov    WORD PTR [esp+eax*4+0x6d28db16],ds
  40f973:	add    DWORD PTR [ecx],0x31
  40f976:	scas   eax,DWORD PTR es:[edi]
  40f977:	cld    
  40f978:	xchg   edx,eax
  40f979:	jmp    0x86b6:0x4384883f
  40f980:	add    al,BYTE PTR [ebp+0x7dcc388f]
  40f986:	sbb    eax,0x4de41125
  40f98b:	mov    ch,0x71
  40f98d:	hlt    
  40f98e:	cmp    ebx,esi
  40f990:	in     eax,0x55
  40f992:	cs cmp BYTE PTR ss:[edi+0x4],0x78
  40f998:	dec    esp
  40f999:	fmul   QWORD PTR [ecx]
  40f99b:	adc    DWORD PTR [ebx-0x2ce0a1a8],esi
  40f9a1:	inc    esi
  40f9a2:	dec    BYTE PTR [ebx-0xfc86904]
  40f9a8:	test   al,0x29
  40f9aa:	mov    BYTE PTR [edx+0x58354898],ah
  40f9b0:	repz xchg edx,eax
  40f9b2:	scas   eax,DWORD PTR es:[edi]
  40f9b3:	pusha  
  40f9b4:	and    BYTE PTR [ebx+esi*4+0x32af7192],0x53
  40f9bc:	loop   0x40fa04
  40f9be:	xchg   esp,eax
  40f9bf:	nop
  40f9c0:	and    DWORD PTR [esi-0x25],esp
  40f9c3:	iret   
  40f9c4:	or     eax,0xb6d50869
  40f9c9:	fdiv   QWORD PTR [esi+0x4410b1e6]
  40f9cf:	call   0xd6ad:0x3658ea49
  40f9d6:	(bad)  
  40f9d7:	mov    eax,ds:0x383ac27e
  40f9dc:	cmp    al,0x1e
  40f9de:	or     eax,edi
  40f9e0:	fucomip st,st(6)
  40f9e2:	(bad)  
  40f9e3:	dec    eax
  40f9e4:	bound  ebx,QWORD PTR [eax]
  40f9e6:	bound  esp,QWORD PTR [edx+0x237670b0]
  40f9ec:	pop    ebx
  40f9ed:	mov    eax,ds:0x2217584c
  40f9f2:	add    DWORD PTR ds:0x5f6c4938,edx
  40f9f8:	mov    bh,0xe7
  40f9fa:	mov    BYTE PTR [edi-0x4b828e53],ch
  40fa00:	fcmove st,st(3)
  40fa02:	outs   dx,BYTE PTR ds:[esi]
  40fa03:	mov    bh,0x2
  40fa05:	imul   eax,DWORD PTR [esi+0x58d1d80c],0xed38aa0
  40fa0f:	ret    0xb1af
  40fa12:	lea    esp,[edx-0x18]
  40fa15:	rcr    DWORD PTR [ebx],cl
  40fa17:	mov    esp,0xa25a43f2
  40fa1c:	sbb    DWORD PTR [edi+0x193d1ede],edx
  40fa22:	add    al,0xe8
  40fa24:	mov    es,ecx
  40fa26:	xchg   DWORD PTR [ebx],eax
  40fa28:	adc    al,0x92
  40fa2a:	loopne 0x40fa40
  40fa2c:	pop    ebx
  40fa2d:	push   esp
  40fa2e:	rol    eax,0x84
  40fa31:	mov    al,0x47
  40fa33:	cmc    
  40fa34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa35:	mov    ds:0x841a7922,eax
  40fa3a:	fdivr  QWORD PTR [ebp-0x20]
  40fa3d:	repnz loope 0x40f9e8
  40fa40:	test   DWORD PTR [ebp-0x27],0xd9127bea
  40fa47:	(bad)  
  40fa48:	cmc    
  40fa49:	ins    DWORD PTR es:[edi],dx
  40fa4a:	test   eax,0x310da69e
  40fa4f:	repz repnz mov ebp,eax
  40fa53:	mov    esp,0x7acb776e
  40fa58:	add    ch,BYTE PTR [esi-0x2d7adb7c]
  40fa5e:	int    0x5a
  40fa60:	imul   edx,ebp,0xffffffb6
  40fa63:	pusha  
  40fa64:	dec    esi
  40fa65:	nop
  40fa66:	add    eax,0x83c0ce51
  40fa6b:	adc    al,BYTE PTR [eax+edi*8-0x2029101e]
  40fa72:	mov    ecx,0x985d808e
  40fa77:	push   es
  40fa78:	mov    eax,ds:0x31384315
  40fa7d:	call   0x4e6:0x5a445e78
  40fa84:	push   edx
  40fa85:	push   ds
  40fa86:	add    eax,0x5d4e3e3b
  40fa8b:	dec    edx
  40fa8c:	sbb    BYTE PTR [ebp-0x1b7b87f1],ah
  40fa92:	xlat   BYTE PTR ds:[ebx]
  40fa93:	xchg   ebx,eax
  40fa94:	mov    bh,0x5d
  40fa96:	inc    edx
  40fa97:	adc    ch,BYTE PTR ds:[esi+eax*4+0x7f3e3abd]
  40fa9f:	retf   
  40faa0:	add    eax,0x9e1ccaab
  40faa5:	pop    esp
  40faa6:	and    eax,0xa074316f
  40faab:	(bad)  
  40faac:	outs   dx,DWORD PTR ds:[esi]
  40faad:	inc    ebp
  40faae:	cmp    eax,0x4a18deca
  40fab3:	popa   
  40fab4:	(bad)  
  40fab5:	ja     0x40fae1
  40fab7:	xchg   edx,eax
  40fab8:	mov    eax,ds:0x36dfd24a
  40fabd:	inc    ebx
  40fabe:	lds    edi,FWORD PTR [eax-0x5c]
  40fac1:	sub    al,0x7b
  40fac3:	in     al,dx
  40fac4:	fwait
  40fac5:	jmp    0x40faaa
  40fac7:	add    al,BYTE PTR [edi-0x45]
  40faca:	shr    cl,1
  40facc:	rcr    esi,1
  40face:	in     al,0xf6
  40fad0:	mov    al,0x9d
  40fad2:	(bad)  
  40fad3:	xor    al,BYTE PTR [ebp-0x1e054339]
  40fad9:	cdq    
  40fada:	add    BYTE PTR [eax+0x47f2e81e],dl
  40fae0:	jbe    0x40fa68
  40fae2:	into   
  40fae3:	xor    BYTE PTR [edi+0x40],0x12
  40fae7:	xchg   edi,eax
  40fae8:	test   BYTE PTR [ebx+0x4c53b406],dl
  40faee:	cmp    al,0x3d
  40faf0:	mov    dl,0x7
  40faf2:	(bad)  
  40faf3:	(bad)  
  40faf4:	mov    ebx,0x80f1212b
  40faf9:	cld    
  40fafa:	inc    edx
  40fafb:	lock arpl dx,si
  40fafe:	xchg   edx,eax
  40faff:	popf   
  40fb00:	dec    ebp
  40fb01:	jmp    0x40fb23
  40fb03:	aaa    
  40fb04:	pop    ebp
  40fb05:	inc    esi
  40fb06:	xchg   esp,eax
  40fb07:	or     ecx,DWORD PTR [edi-0x192eabab]
  40fb0d:	xchg   ah,cl
  40fb0f:	ss jb  0x40faea
  40fb12:	dec    ebp
  40fb13:	(bad)  
  40fb14:	xor    esi,DWORD PTR [edi+0x4d7eab25]
  40fb1a:	addr16 push 0x5948fe48
  40fb20:	push   0x9fb525bc
  40fb25:	call   DWORD PTR [ebx]
  40fb27:	xor    al,0xd3
  40fb29:	stc    
  40fb2a:	mov    dh,0x90
  40fb2c:	mov    WORD PTR [ebp+0x1a],ss
  40fb2f:	movq   mm0,mm1
  40fb32:	mov    bl,0x21
  40fb34:	imul   esp,DWORD PTR [esi-0x4e1ad4a],0x4c779167
  40fb3e:	das    
  40fb3f:	or     eax,0x8b5d9ee2
  40fb44:	daa    
  40fb45:	mov    BYTE PTR [edi+eax*8-0x54],al
  40fb49:	out    dx,eax
  40fb4a:	std    
  40fb4b:	aas    
  40fb4c:	adc    al,0x99
  40fb4e:	addr16 or eax,0xbd3ee420
  40fb54:	xor    esp,DWORD PTR [ebp+0x7c]
  40fb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb58:	loop   0x40fb58
  40fb5a:	xor    DWORD PTR ds:0x5a912e91,eax
  40fb60:	mul    DWORD PTR [ecx+0xd870f41]
  40fb66:	repz loop 0x40fb1f
  40fb69:	jl     0x40fb3a
  40fb6b:	pop    edi
  40fb6c:	fisub  WORD PTR [ebp-0x11b73240]
  40fb72:	int    0x2c
  40fb74:	leave  
  40fb75:	xchg   DWORD PTR ds:0x8c36a905,esi
  40fb7b:	test   al,0x58
  40fb7d:	in     eax,0x70
  40fb7f:	pop    edi
  40fb80:	adc    al,0x87
  40fb82:	imul   edx,ebx,0x37
  40fb85:	dec    ecx
  40fb86:	addr16 mov esp,0xf5bb3765
  40fb8c:	inc    eax
  40fb8d:	ret    0x2332
  40fb90:	pop    esi
  40fb91:	adc    al,0x8f
  40fb93:	out    0x46,al
  40fb95:	sub    esi,DWORD PTR [edi+ebx*2]
  40fb98:	jp     0x40fb92
  40fb9a:	xchg   esi,eax
  40fb9b:	mov    esp,0xa2816e5
  40fba0:	arpl   WORD PTR [esi],di
  40fba2:	or     esi,DWORD PTR [eax+ebx*1]
  40fba5:	xchg   DWORD PTR [edx],edi
  40fba7:	dec    esi
  40fba8:	cmc    
  40fba9:	repnz mov bl,0xb1
  40fbac:	xor    edx,ebx
  40fbae:	sub    al,0x6d
  40fbb0:	div    DWORD PTR [ecx+0x5d]
  40fbb3:	adc    BYTE PTR [esi],ah
  40fbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb6:	xchg   edi,eax
  40fbb7:	popf   
  40fbb8:	fst    QWORD PTR [ebx+ebp*4]
  40fbbb:	push   edx
  40fbbc:	out    0x96,al
  40fbbe:	lock sbb al,0xe7
  40fbc1:	test   eax,0x61b1042a
  40fbc6:	sbb    edi,edi
  40fbc8:	sbb    al,BYTE PTR [edi*4+0x53eeab91]
  40fbcf:	mov    edi,0x75d6bcc5
  40fbd4:	and    BYTE PTR [ebx+0x5d420b72],dh
  40fbda:	hlt    
  40fbdb:	test   edi,esi
  40fbdd:	fdiv   QWORD PTR [esi+ebx*4]
  40fbe0:	cwde   
  40fbe1:	mov    DWORD PTR [ebp-0x5da72138],esi
  40fbe7:	xchg   BYTE PTR [eax],al
  40fbe9:	sbb    esp,DWORD PTR [ebx]
  40fbeb:	in     eax,0x98
  40fbed:	cdq    
  40fbee:	jb     0x40fbef
  40fbf0:	dec    edi
  40fbf1:	popf   
  40fbf2:	xor    eax,0x16c0ab3
  40fbf7:	gs pop ebx
  40fbf9:	ja     0x40fc4e
  40fbfb:	mov    edi,0xae8a1384
  40fc00:	(bad)  
  40fc01:	xor    DWORD PTR [ecx+edx*1],eax
  40fc04:	ins    BYTE PTR es:[edi],dx
  40fc05:	sub    DWORD PTR [ecx+0x386a03fe],0xe0763154
  40fc0f:	cld    
  40fc10:	idiv   al
  40fc12:	not    DWORD PTR [ecx+0x551df973]
  40fc18:	out    0x6f,eax
  40fc1a:	stc    
  40fc1b:	mov    bl,0x80
  40fc1d:	mov    cl,BYTE PTR [ecx]
  40fc1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc20:	mov    edi,0xd09efbcf
  40fc25:	call   0x5cfb:0xac6de815
  40fc2c:	fmulp  st(7),st
  40fc2e:	mov    eax,0x76f1906
  40fc33:	in     eax,0x3e
  40fc35:	mov    dl,0xcc
  40fc37:	cmp    al,0x5e
  40fc39:	call   0x176a:0x478fc882
  40fc40:	add    edx,esp
  40fc42:	ss aad 0xde
  40fc45:	inc    ebx
  40fc46:	xor    si,sp
  40fc49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4a:	rcr    DWORD PTR [edx-0x24],1
  40fc4d:	out    0x57,eax
  40fc4f:	sbb    eax,0x497bcbf2
  40fc54:	mov    ah,0x1e
  40fc56:	inc    eax
  40fc57:	stos   BYTE PTR es:[edi],al
  40fc58:	retf   0x4c73
  40fc5b:	sbb    edi,DWORD PTR [ebx+edx*1-0x13614455]
  40fc62:	mov    bl,bh
  40fc64:	rcl    cl,1
  40fc66:	clc    
  40fc67:	xor    esp,DWORD PTR [edi]
  40fc69:	sbb    al,0x25
  40fc6b:	loope  0x40fc82
  40fc6d:	stos   BYTE PTR es:[edi],al
  40fc6e:	fadd   DWORD PTR [eax-0x80]
  40fc71:	rcl    BYTE PTR [ebp+0x3f],1
  40fc74:	call   0x3cd5c414
  40fc79:	xor    ecx,ebx
  40fc7b:	pop    eax
  40fc7c:	dec    esp
  40fc7d:	in     al,0x7
  40fc7f:	stc    
  40fc80:	std    
  40fc81:	(bad)  
  40fc82:	fstp   st(0)
  40fc84:	std    
  40fc85:	int    0x3d
  40fc87:	or     al,0xda
  40fc89:	dec    edi
  40fc8a:	imul   BYTE PTR [edx+0x1]
  40fc8d:	mov    dh,0xe7
  40fc8f:	mov    eax,0x71b5fb62
  40fc94:	pop    ds
  40fc95:	retf   
  40fc96:	repnz sbb dl,BYTE PTR [ecx]
  40fc99:	lahf   
  40fc9a:	jmp    0x44ff6810
  40fc9f:	pop    ss
  40fca0:	mov    ch,0xa5
  40fca2:	push   edi
  40fca3:	mov    cl,0x29
  40fca6:	test   eax,0xbe5217e0
  40fcab:	cwde   
  40fcac:	inc    edi
  40fcad:	or     DWORD PTR [ebx-0x51],ebp
  40fcb0:	mov    cs,WORD PTR [ecx]
  40fcb2:	mov    ebp,0xd341b6ef
  40fcb7:	mov    ebx,0x4c1ed0ad
  40fcbc:	inc    edx
  40fcbd:	es call 0xf5e5:0x1608f371
  40fcc5:	fld    QWORD PTR [ebx+0x27bc4162]
  40fccb:	je     0x40fc87
  40fccd:	xor    al,BYTE PTR ds:0xc5248af6
  40fcd3:	lods   eax,DWORD PTR ds:[esi]
  40fcd4:	xchg   edi,eax
  40fcd5:	mov    DWORD PTR [ecx],esi
  40fcd7:	adc    al,dh
  40fcd9:	test   al,0xc0
  40fcdb:	mov    dl,0x82
  40fcdd:	or     eax,0x1b4e986a
  40fce2:	sbb    al,0x3a
  40fce4:	cmp    eax,esi
  40fce6:	dec    edx
  40fce7:	and    BYTE PTR ds:[edx-0x17],bl
  40fceb:	mov    ebp,0x45af6f4e
  40fcf0:	sbb    eax,0xc47be59a
  40fcf5:	(bad)
  40fcfa:	shr    DWORD PTR [ecx-0x4f],0x35
  40fcfe:	(bad)  
  40fcff:	call   0x88b05ae5
  40fd04:	pusha  
  40fd05:	in     eax,dx
  40fd06:	bound  bx,DWORD PTR [ebp+0x23]
  40fd0a:	push   edi
  40fd0b:	pushf  
  40fd0c:	(bad)  
  40fd0d:	cmp    BYTE PTR [ecx],cl
  40fd0f:	add    ch,0x4c
  40fd12:	inc    ebp
  40fd13:	bound  ebx,QWORD PTR [ebp+edi*2-0x68b80882]
  40fd1a:	popf   
  40fd1b:	rcr    edi,0x98
  40fd1e:	push   ss
  40fd1f:	push   ss
  40fd20:	add    al,0x67
  40fd22:	outs   dx,BYTE PTR ds:[esi]
  40fd23:	xchg   ebx,eax
  40fd24:	and    bl,dh
  40fd26:	je     0x40fcf8
  40fd28:	lods   al,BYTE PTR ds:[esi]
  40fd29:	outs   dx,DWORD PTR ds:[esi]
  40fd2a:	mov    ah,0x6b
  40fd2c:	das    
  40fd2d:	mov    edx,0x1ea50b1d
  40fd32:	shl    DWORD PTR [edx+0x31290341],0xce
  40fd39:	or     al,0x34
  40fd3b:	adc    dl,ch
  40fd3d:	shl    DWORD PTR [ebx],0xe5
  40fd40:	jne    0x40fd47
  40fd42:	int    0x48
  40fd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd45:	pop    ebx
  40fd46:	jge    0x40fcec
  40fd48:	mov    ds:0xc449414a,al
  40fd4d:	into   
  40fd4e:	cmp    DWORD PTR [eax-0x73],eax
  40fd51:	jbe    0x40fcd8
  40fd53:	sub    eax,0x37c2107f
  40fd58:	mov    al,0x3c
  40fd5a:	ins    BYTE PTR es:[edi],dx
  40fd5b:	cmp    eax,0x71071783
  40fd60:	and    eax,0x4cf6a233
  40fd65:	mov    WORD PTR [ebp+0xef0692],?
  40fd6b:	shl    DWORD PTR [edx],cl
  40fd6d:	fsubr  DWORD PTR [edx+0x17]
  40fd70:	loop   0x40fda4
  40fd72:	cmp    BYTE PTR [edi+0x3bc0193d],dl
  40fd78:	cmc    
  40fd79:	pop    esp
  40fd7a:	ret    
  40fd7b:	mov    ecx,0xa31c5dbe
  40fd80:	push   esp
  40fd81:	pop    es
  40fd82:	pop    edi
  40fd83:	outs   dx,DWORD PTR ds:[esi]
  40fd84:	dec    ebx
  40fd85:	jg     0x40fd4b
  40fd87:	repnz dec esp
  40fd89:	adc    bl,dl
  40fd8b:	fimul  WORD PTR [esi+eax*2+0x28660a41]
  40fd92:	inc    ebp
  40fd93:	mov    bh,0xd2
  40fd95:	inc    edi
  40fd96:	adc    al,0xd9
  40fd98:	ins    BYTE PTR es:[edi],dx
  40fd99:	push   ebx
  40fd9a:	retf   
  40fd9b:	(bad)  
  40fd9c:	and    ebp,edx
  40fd9e:	clc    
  40fd9f:	sbb    eax,0xd4e74f8a
  40fda4:	out    0x25,eax
  40fda6:	repz jae 0x40fe09
  40fda9:	cld    
  40fdaa:	jle    0x40fde1
  40fdac:	mov    esi,0x7d896f1c
  40fdb1:	push   cs
  40fdb2:	and    eax,0xff67c9f
  40fdb7:	mov    al,0xb
  40fdb9:	jg     0x40fe13
  40fdbb:	fs inc ebx
  40fdbd:	push   ecx
  40fdbe:	rcl    BYTE PTR [edi],cl
  40fdc0:	jle    0x40fd43
  40fdc2:	sti    
  40fdc3:	xchg   DWORD PTR [ecx+0x37ee52c3],eax
  40fdc9:	mov    ch,0x98
  40fdcb:	push   cs
  40fdcc:	hlt    
  40fdcd:	les    esi,FWORD PTR [ebx-0x19d2f6d7]
  40fdd3:	add    bh,BYTE PTR [edi+0x1]
  40fdd6:	and    DWORD PTR [eax],ebx
  40fdd8:	fwait
  40fdd9:	cmp    eax,0x63a4ccaa
  40fdde:	clc    
  40fddf:	shl    BYTE PTR [ebp-0x23],1
  40fde2:	arpl   WORD PTR [ebx],di
  40fde4:	shl    BYTE PTR ds:0x933a9816,0xdf
  40fdeb:	int    0x98
  40fded:	nop
  40fdee:	(bad)  
  40fdef:	loopne 0x40fda3
  40fdf1:	jge    0x40fdde
  40fdf3:	and    eax,DWORD PTR ds:0xa6cc19a4
  40fdf9:	shl    BYTE PTR [esi-0x2d],1
  40fdfc:	mov    al,ds:0xb2106e03
  40fe01:	xchg   ecx,eax
  40fe02:	inc    esp
  40fe03:	sahf   
  40fe04:	rol    dl,cl
  40fe06:	jmp    0xc20011b7
  40fe0b:	rcl    DWORD PTR [ecx-0x4f87d7dc],cl
  40fe11:	mov    ebp,0xaee77a60
  40fe16:	adc    BYTE PTR [eax+0x170ce5b3],ch
  40fe1c:	lods   al,BYTE PTR ds:[esi]
  40fe1d:	and    dl,bl
  40fe1f:	out    0xd8,al
  40fe21:	pop    es
  40fe22:	cmova  esi,DWORD PTR [ecx+edx*2+0x7c]
  40fe27:	or     BYTE PTR ds:0x73e8315b,bl
  40fe2d:	push   cs
  40fe2e:	(bad)  
  40fe2f:	and    eax,0x5d57f269
  40fe34:	push   ebp
  40fe35:	gs sti 
  40fe37:	jns    0x40fe70
  40fe39:	dec    eax
  40fe3a:	jmp    0xaf746504
  40fe3f:	push   eax
  40fe40:	dec    ebp
  40fe41:	dec    eax
  40fe42:	mov    ah,0x60
  40fe44:	mov    dl,0x9f
  40fe46:	and    BYTE PTR [edi],cl
  40fe48:	sbb    DWORD PTR [eax-0x268c3302],eax
  40fe4e:	fmulp  st(4),st
  40fe50:	mov    edi,0x93cb6f9e
  40fe55:	pop    ebp
  40fe56:	jb     0x40fe12
  40fe58:	loope  0x40fe2d
  40fe5a:	clc    
  40fe5b:	in     al,dx
  40fe5c:	in     al,0x8d
  40fe5e:	cmp    edx,0xffffff8c
  40fe61:	hlt    
  40fe62:	out    0x75,al
  40fe64:	push   ss
  40fe65:	jp     0x40fdf3
  40fe67:	mov    edx,0xe5006f1a
  40fe6c:	pop    esp
  40fe6d:	scas   eax,DWORD PTR es:[edi]
  40fe6e:	cmp    DWORD PTR [esi],0x7f
  40fe71:	jp     0x40feb5
  40fe73:	jmp    0xa11a9163
  40fe78:	mov    al,ds:0xf4e96cdf
  40fe7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe7e:	gs push eax
  40fe80:	aaa    
  40fe81:	pop    esi
  40fe82:	(bad)  
  40fe84:	fcom   DWORD PTR [edx]
  40fe86:	dec    edx
  40fe87:	or     DWORD PTR [eax-0x18],esi
  40fe8a:	adc    bl,al
  40fe8c:	rol    DWORD PTR [eax+0x46fa1f94],0x99
  40fe93:	push   esi
  40fe94:	inc    ebp
  40fe95:	cmp    bl,cl
  40fe97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe98:	in     al,0xa6
  40fe9a:	jb     0x40fef2
  40fe9c:	xor    eax,ebp
  40fe9e:	sti    
  40fe9f:	add    DWORD PTR [edx],esp
  40fea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea2:	mov    al,0xd4
  40fea4:	push   eax
  40fea5:	mov    ecx,0x3e914951
  40feaa:	sub    ch,BYTE PTR [eax-0x5465ee8d]
  40feb0:	loopne 0x40fe57
  40feb2:	add    dl,BYTE PTR [edx+ebp*8-0x2c821a1c]
  40feb9:	sub    al,0xc9
  40febb:	xchg   ecx,eax
  40febc:	in     al,0x63
  40febe:	sbb    BYTE PTR [esi-0x713bdcb7],ch
  40fec4:	test   cl,al
  40fec6:	inc    ebx
  40fec7:	mov    bh,0x1a
  40fec9:	add    bh,BYTE PTR [edx-0x6b0a388e]
  40fecf:	push   ecx
  40fed0:	jnp    0x40fec6
  40fed2:	mov    edx,0xf968d868
  40fed7:	dec    esi
  40fed8:	test   BYTE PTR ds:0x543ddfb8,ch
  40fede:	dec    eax
  40fedf:	lds    edx,FWORD PTR [edi-0x5c05388d]
  40fee5:	jmp    0x918416f7
  40feea:	cmp    BYTE PTR [edi+0x3b5e590],al
  40fef0:	sub    BYTE PTR [edi+0x53],dh
  40fef3:	xor    DWORD PTR [esi-0x4d],edx
  40fef6:	popa   
  40fef7:	fucom  st(4)
  40fef9:	cmp    ebp,DWORD PTR [ecx-0x58]
  40fefc:	xchg   ebx,eax
  40fefd:	hlt    
  40fefe:	push   ebp
  40feff:	int    0xea
  40ff01:	add    al,0xe1
  40ff03:	and    bh,BYTE PTR [esi-0x53]
  40ff06:	cmp    al,0x42
  40ff08:	lods   eax,DWORD PTR ds:[esi]
  40ff09:	mov    dl,0x1c
  40ff0b:	retf   
  40ff0c:	xor    eax,0x279b6e66
  40ff11:	sbb    DWORD PTR [ebp-0x3966b24a],ebp
  40ff17:	pop    eax
  40ff18:	(bad)  
  40ff19:	lods   eax,DWORD PTR ds:[esi]
  40ff1a:	sbb    bh,BYTE PTR [esi-0x1a946ce4]
  40ff20:	fs daa 
  40ff22:	fisubr WORD PTR cs:[eax]
  40ff25:	loopne 0x40feae
  40ff27:	dec    edi
  40ff28:	add    al,0xf3
  40ff2a:	das    
  40ff2b:	inc    ebp
  40ff2c:	xor    eax,0xa21da721
  40ff31:	cmp    al,ch
  40ff33:	xlat   BYTE PTR ds:[ebx]
  40ff34:	xchg   DWORD PTR [edi+0x14],esp
  40ff37:	dec    ecx
  40ff38:	cdq    
  40ff39:	mov    ch,0xd
  40ff3b:	imul   ah
  40ff3d:	pushf  
  40ff3e:	retf   0xeb2c
  40ff41:	cmp    BYTE PTR [edi-0x79770846],bh
  40ff47:	xchg   esi,eax
  40ff48:	push   edi
  40ff49:	mov    ds:0x24d3d088,eax
  40ff4e:	xor    ecx,DWORD PTR [ecx-0x3fc2fd1c]
  40ff54:	cmp    eax,0x1320460b
  40ff59:	xchg   esp,eax
  40ff5a:	add    al,0xa4
  40ff5c:	ds popf 
  40ff5e:	call   FWORD PTR [esi]
  40ff60:	adc    al,0x39
  40ff62:	imul   esi,DWORD PTR [ebx],0xb0a7988d
  40ff68:	outs   dx,BYTE PTR ds:[esi]
  40ff69:	jl     0x40ff93
  40ff6b:	rcl    BYTE PTR [edi+eax*1],1
  40ff6e:	cwde   
  40ff6f:	aad    0xf9
  40ff71:	pop    ecx
  40ff72:	ret    
  40ff73:	jge    0x40ff31
  40ff75:	sbb    eax,0xb14a9fcd
  40ff7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7b:	adc    BYTE PTR [esi],dh
  40ff7d:	add    eax,0xc089f86b
  40ff82:	pop    esi
  40ff83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff84:	inc    ebx
  40ff85:	aaa    
  40ff86:	adc    ebp,DWORD PTR [edx]
  40ff88:	cmc    
  40ff89:	add    edi,edi
  40ff8b:	sar    DWORD PTR [ebx-0x22],cl
  40ff8e:	ror    DWORD PTR [edi+0x664e9250],0x1c
  40ff95:	sub    DWORD PTR ds:0xebff0b2f,esp
  40ff9b:	mov    al,0xec
  40ff9d:	pop    edi
  40ff9e:	sbb    cl,BYTE PTR ds:0xc53d0816
  40ffa4:	pop    esp
  40ffa5:	cli    
  40ffa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa7:	scas   al,BYTE PTR es:[edi]
  40ffa8:	mov    edx,0xb51973aa
  40ffad:	pop    es
  40ffae:	xchg   DWORD PTR [eax-0x57e05987],esi
  40ffb4:	ret    
  40ffb5:	push   esp
  40ffb6:	cmp    eax,0x91d90007
  40ffbb:	or     eax,0xbcf4d1ab
  40ffc0:	push   es
  40ffc1:	clc    
  40ffc2:	jmp    0xbf49587d
  40ffc7:	dec    edi
  40ffc8:	lods   al,BYTE PTR ds:[esi]
  40ffc9:	cmc    
  40ffca:	mov    DWORD PTR [ebp-0x3d],edi
  40ffcd:	dec    eax
  40ffce:	pop    ebp
  40ffcf:	dec    esi
  40ffd0:	inc    esi
  40ffd1:	repz (bad) 
  40ffd3:	add    esp,0xffffffa2
  40ffd6:	das    
  40ffd7:	int3   
  40ffd8:	inc    esi
  40ffd9:	ss cs adc al,0x13
  40ffdd:	cwde   
  40ffde:	sbb    esp,DWORD PTR [edx+0x18f9c7b9]
  40ffe4:	nop
  40ffe5:	jns    0x40ff9f
  40ffe7:	jl     0x40ffee
  40ffe9:	or     eax,DWORD PTR [esi+ecx*2-0x2515c5ca]
  40fff0:	rcl    ch,0x2f
  40fff3:	(bad)  
  40fff4:	xor    cl,BYTE PTR [edi]
  40fff6:	mov    dl,0xf3
  40fff8:	push   cs
  40fff9:	enter  0x2b6a,0x24
  40fffd:	rcl    edi,cl
  40ffff:	retf   0x101b
  410002:	xor    eax,0xc6e8133a
  410007:	mov    ch,0x90
  410009:	shr    ch,cl
  41000b:	mov    ah,0xbe
  41000d:	and    edi,esp
  41000f:	jne    0x410063
  410011:	sar    ah,cl
  410013:	adc    al,0x15
  410015:	arpl   bx,si
  410017:	xchg   esi,eax
  410018:	jb     0x41007e
  41001a:	out    0xec,al
  41001c:	mov    cl,0x74
  41001e:	mov    ch,al
  410020:	mov    edi,0xdd87a4d8
  410025:	mov    edx,0x954c808d
  41002a:	or     edx,DWORD PTR [ebx+0x16]
  41002d:	inc    edi
  41002e:	lea    sp,[edi]
  410031:	call   0x61ac:0xd9094460
  410038:	ins    BYTE PTR es:[edi],dx
  410039:	popf   
  41003a:	in     eax,dx
  41003b:	(bad)  
  41003c:	out    0xe0,al
  41003e:	mov    ds:0x7b0bde64,al
  410043:	data16 jle 0x40ffe0
  410046:	jp     0x41002a
  410048:	inc    esi
  410049:	push   cs
  41004a:	ds jae 0x4100ac
  41004d:	or     edi,DWORD PTR [edi+0x274c961a]
  410053:	(bad)  
  410054:	popf   
  410055:	imul   edi,DWORD PTR [ecx-0x7708a757],0x2d2c1fd7
  41005f:	add    DWORD PTR [esi+0x411d66cf],0x5792e53b
  410069:	mov    DWORD PTR [edx],edx
  41006b:	stos   BYTE PTR es:[edi],al
  41006c:	popa   
  41006d:	pushf  
  41006e:	dec    esi
  41006f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410070:	sbb    al,0xb5
  410072:	retf   
  410073:	call   DWORD PTR [ebp+edi*8+0x44]
  410077:	jb     0x410081
  410079:	sbb    eax,0x27b4ba20
  41007e:	adc    al,BYTE PTR [ebx-0x57]
  410081:	int    0x33
  410083:	dec    ebp
  410084:	fiadd  DWORD PTR [ecx+eiz*1]
  410087:	xchg   edx,eax
  410088:	loopne 0x41000a
  41008a:	xchg   esp,eax
  41008b:	jge    0x410069
  41008d:	call   0xf07c9189
  410092:	(bad)  
  410093:	fld    st(3)
  410095:	(bad)
  410098:	xchg   ebp,eax
  410099:	shl    BYTE PTR [edx],cl
  41009b:	jmp    0x3cf:0xc947babf
  4100a2:	fld    QWORD PTR [ecx]
  4100a4:	pusha  
  4100a5:	retf   
  4100a6:	aas    
  4100a7:	mov    edx,0x5c5f5706
  4100ac:	fcomp  DWORD PTR [eax]
  4100ae:	sub    bl,BYTE PTR [esp+ecx*1]
  4100b1:	add    BYTE PTR [ebx+0x11],0x66
  4100b5:	pop    eax
  4100b6:	neg    dl
  4100b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100b9:	jbe    0x41004a
  4100bb:	inc    eax
  4100bc:	pop    ss
  4100bd:	mov    BYTE PTR [esi],ah
  4100bf:	inc    cl
  4100c1:	mov    ds:0x78e9f195,eax
  4100c6:	jno    0x410102
  4100c8:	jnp    0x4100c8
  4100ca:	jmp    0x56f4d58
  4100cf:	stc    
  4100d0:	data16 icebp 
  4100d2:	das    
  4100d3:	cmp    ecx,ebx
  4100d5:	push   0x26
  4100d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d8:	push   ebp
  4100d9:	das    
  4100da:	sbb    al,0xaa
  4100dc:	lock rcr BYTE PTR [ebx+0x7c0049b5],1
  4100e3:	nop
  4100e4:	outs   dx,BYTE PTR ds:[esi]
  4100e5:	cmp    eax,0x660a0b31
  4100ea:	fwait
  4100eb:	ss popf 
  4100ed:	outs   dx,DWORD PTR ds:[esi]
  4100ee:	dec    edi
  4100ef:	or     bh,bl
  4100f1:	les    eax,FWORD PTR [ebp+0x6]
  4100f4:	push   eax
  4100f5:	dec    esp
  4100f6:	xor    dl,BYTE PTR [ebx-0x6bcf7b21]
  4100fc:	dec    ecx
  4100fd:	sbb    bl,0x72
  410100:	mov    bh,0xe2
  410102:	or     eax,0x6cd5571
  410107:	nop
  410108:	scas   al,BYTE PTR es:[edi]
  410109:	adc    esp,DWORD PTR [esi+0x31]
  41010c:	int    0x98
  41010e:	arpl   sp,si
  410110:	dec    edx
  410111:	push   ss
  410112:	sub    eax,0xa767bab1
  410117:	pop    es
  410118:	into   
  410119:	mov    eax,0x43226318
  41011e:	rcr    eax,cl
  410120:	adc    BYTE PTR [esi+0x47],al
  410123:	add    DWORD PTR [ebx+esi*2],0x83285548
  41012a:	mov    edi,0xd849a560
  41012f:	test   BYTE PTR [edi+0x5c],al
  410132:	inc    edi
  410133:	sbb    DWORD PTR [eax+0x23],eax
  410136:	inc    esp
  410137:	shl    dl,cl
  410139:	adc    DWORD PTR [eax],edi
  41013b:	and    eax,0xffffff85
  41013e:	jecxz  0x4100fd
  410140:	sbb    eax,0x700ce568
  410145:	mov    bl,ch
  410147:	loopne 0x4100f0
  410149:	push   eax
  41014a:	jg     0x4100f3
  41014c:	int3   
  41014d:	pushf  
  41014e:	shr    BYTE PTR [esi],cl
  410150:	push   edx
  410151:	add    DWORD PTR [edi+0x15],esp
  410154:	adc    ah,BYTE PTR [esi+0x8]
  410157:	xchg   edi,eax
  410158:	ins    DWORD PTR es:[edi],dx
  410159:	out    dx,eax
  41015a:	fsub   QWORD PTR [edx]
  41015c:	and    BYTE PTR ds:0xcda674b2,bh
  410162:	aam    0xe7
  410164:	cmp    al,0xbc
  410166:	in     al,dx
  410167:	out    0xf9,al
  410169:	sbb    BYTE PTR ds:0xa4176b3,ch
  41016f:	inc    edi
  410170:	add    edi,edx
  410172:	mov    ebp,0x15b99c42
  410177:	inc    eax
  410178:	sub    DWORD PTR [edx],0xfffffff2
  41017b:	mov    cl,0x6d
  41017d:	test   eax,0x1e9663dd
  410182:	clc    
  410183:	sbb    al,0x0
  410185:	xor    BYTE PTR [esi-0x3a],ch
  410188:	stos   BYTE PTR es:[edi],al
  410189:	data16 add al,dl
  41018c:	push   edi
  41018d:	(bad)  
  41018e:	(bad)  
  410190:	push   ebp
  410191:	inc    ecx
  410192:	es sahf 
  410194:	jg     0x41018b
  410196:	push   DWORD PTR [ebx-0x7bc32d9c]
  41019c:	adc    esi,edi
  41019e:	outs   dx,BYTE PTR ds:[esi]
  41019f:	ja     0x4101eb
  4101a1:	mov    eax,gs
  4101a3:	std    
  4101a4:	jge    0x410147
  4101a6:	cmp    edi,DWORD PTR [ebp-0x4b]
  4101a9:	bound  ecx,QWORD PTR [edi-0x19]
  4101ac:	or     edx,DWORD PTR [edi]
  4101ae:	add    dh,BYTE PTR [ecx-0x664178c]
  4101b4:	test   eax,0x3d722332
  4101b9:	bound  ecx,QWORD PTR [ebp-0x32]
  4101bc:	dec    eax
  4101bd:	lea    ebp,[ebx+ebx*1-0x76]
  4101c1:	in     al,0xf7
  4101c3:	jbe    0x41019e
  4101c5:	ins    BYTE PTR es:[edi],dx
  4101c6:	cmp    ebx,DWORD PTR [edi]
  4101c8:	jl     0x410214
  4101ca:	cmc    
  4101cb:	xchg   esi,eax
  4101cc:	cmp    edi,DWORD PTR [eax]
  4101ce:	dec    esp
  4101cf:	les    eax,FWORD PTR [ecx-0x13]
  4101d2:	daa    
  4101d3:	scas   al,BYTE PTR es:[edi]
  4101d4:	in     al,dx
  4101d5:	rcl    DWORD PTR [esi],1
  4101d7:	jnp    0x410216
  4101d9:	loope  0x4101fe
  4101db:	test   DWORD PTR [edx+0x53],esi
  4101de:	cmp    edi,edi
  4101e0:	mov    edx,0x8df5a467
  4101e5:	xor    al,BYTE PTR [ebx+0x16fe335d]
  4101eb:	jg     0x4101a7
  4101ed:	pop    ss
  4101ee:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f0:	sbb    BYTE PTR [ebx-0xb],0xc5
  4101f4:	scas   al,BYTE PTR es:[edi]
  4101f5:	or     DWORD PTR cs:[esi+0x39cfb920],edx
  4101fc:	les    ecx,FWORD PTR [ebp+ebp*4-0x7a233c00]
  410203:	cmp    ch,BYTE PTR [edi]
  410205:	sub    DWORD PTR [esi-0x80],esp
  410208:	pop    es
  410209:	mov    edx,0x6818493e
  41020e:	mov    eax,ds:0x8f2e7eb2
  410213:	not    BYTE PTR [ecx+0x60]
  410216:	xlat   BYTE PTR ds:[ebx]
  410217:	mov    ebp,0x235ab991
  41021c:	dec    esi
  41021d:	xchg   edi,eax
  41021e:	lahf   
  41021f:	inc    ecx
  410220:	and    al,BYTE PTR [edx]
  410222:	dec    eax
  410223:	pusha  
  410224:	cdq    
  410225:	dec    esi
  410226:	add    eax,0xbf03867
  41022b:	adc    al,0x71
  41022d:	daa    
  41022e:	retf   
  41022f:	sar    BYTE PTR [esi],1
  410231:	mov    dh,0xe0
  410233:	xchg   ebx,eax
  410234:	xor    eax,0x7f0e4891
  410239:	jmp    edi
  41023b:	sub    edi,esi
  41023d:	push   ecx
  41023e:	gs (bad) 
  410240:	cmc    
  410241:	pop    ecx
  410242:	xchg   ebp,eax
  410243:	stos   DWORD PTR es:[edi],eax
  410244:	and    ebx,DWORD PTR [esi-0xb]
  410247:	sbb    DWORD PTR [ebp-0x531ece43],esp
  41024d:	cmp    BYTE PTR [ebp+0x44f21a7c],0x93
  410254:	idiv   BYTE PTR [edi+0x2d]
  410257:	in     eax,0x8f
  410259:	jmp    0x91d5997f
  41025e:	jl     0x410282
  410260:	out    0xba,al
  410262:	cmp    al,0x86
  410264:	addr16 push ds
  410266:	ins    BYTE PTR es:[edi],dx
  410267:	pop    es
  410268:	bound  eax,QWORD PTR ds:[edi-0x6ebc4674]
  41026f:	mov    bh,0x96
  410271:	adc    edx,eax
  410273:	icebp  
  410274:	add    DWORD PTR [ebx-0x224e0f4c],esp
  41027a:	push   cs
  41027b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027c:	outs   dx,DWORD PTR ds:[esi]
  41027d:	xchg   esi,eax
  41027e:	cdq    
  41027f:	mov    al,ds:0xdea41783
  410284:	add    DWORD PTR [eax-0x40871b3d],edi
  41028a:	in     eax,0xf2
  41028c:	push   ebp
  41028d:	dec    esi
  41028e:	dec    eax
  41028f:	ds stc 
  410291:	ror    BYTE PTR [bx+di],cl
  410294:	hlt    
  410295:	and    BYTE PTR [esi+ecx*4],0xa5
  410299:	stc    
  41029a:	hlt    
  41029b:	mov    WORD PTR [edx+0x431a43d0],es
  4102a1:	inc    ebx
  4102a2:	jo     0x410273
  4102a4:	cmc    
  4102a5:	mov    ebx,0x3a170639
  4102aa:	push   ss
  4102ab:	inc    ebx
  4102ac:	arpl   si,si
  4102ae:	adc    ebx,eax
  4102b0:	push   ds
  4102b1:	call   0xbb37d89b
  4102b6:	mov    eax,ds:0xff6472ce
  4102bb:	mov    ebx,DWORD PTR [ebx+ebp*4-0x7b34c3ee]
  4102c2:	jo     0x410253
  4102c4:	push   esp
  4102c5:	fsubrp st(1),st
  4102c7:	mov    esi,0x88ebddf8
  4102cc:	xchg   edx,eax
  4102cd:	loop   0x41031c
  4102cf:	mov    al,0x29
  4102d1:	(bad)  
  4102d2:	pop    ds
  4102d3:	xor    esi,DWORD PTR [ebp-0x52]
  4102d6:	push   eax
  4102d7:	popa   
  4102d8:	jl     0x410318
  4102da:	inc    esp
  4102db:	cmp    BYTE PTR [edi+0x4c],bh
  4102de:	stos   DWORD PTR es:[edi],eax
  4102df:	lock pop es
  4102e1:	jo     0x4102a7
  4102e3:	mov    ds:0x1abb9c69,al
  4102e8:	sti    
  4102e9:	xor    cl,BYTE PTR [edx]
  4102eb:	ror    BYTE PTR [edi+0x75],0x8d
  4102ef:	mov    bh,0x88
  4102f1:	mov    ds:0xdc2901e5,eax
  4102f6:	ins    DWORD PTR es:[edi],dx
  4102f7:	inc    ebp
  4102f8:	sar    DWORD PTR [ebx-0x3d],0x85
  4102fc:	inc    edx
  4102fd:	xchg   edi,ebx
  4102ff:	into   
  410300:	xchg   esi,eax
  410301:	jne    0x410342
  410303:	inc    ebx
  410304:	jmp    0x30ff5bfc
  410309:	xor    cl,BYTE PTR [bx+si+0x5]
  41030d:	sbb    DWORD PTR [edx+0x20b36722],esp
  410313:	push   ecx
  410314:	lea    ebp,[edx-0x68d0730a]
  41031a:	stos   DWORD PTR es:[edi],eax
  41031b:	fisttp WORD PTR [esi-0x3c2f584a]
  410321:	inc    esi
  410322:	fwait
  410323:	or     DWORD PTR [ebp+0x1ab4d7b8],esp
  410329:	test   al,0xaa
  41032b:	jp     0x41036d
  41032d:	sub    dx,sp
  410330:	(bad)  
  410332:	push   ecx
  410333:	mov    WORD PTR [edx],ds
  410335:	outs   dx,BYTE PTR ds:[esi]
  410336:	push   esi
  410337:	addr16 push edx
  410339:	jmp    eax
  41033b:	xchg   ecx,eax
  41033c:	hlt    
  41033d:	sbb    al,al
  41033f:	mov    esp,0x42270f65
  410344:	jl     0x4102cd
  410346:	aaa    
  410347:	jnp    0x410346
  410349:	pop    ds
  41034a:	out    0x8f,eax
  41034c:	psubsw mm3,mm7
  41034f:	mov    edi,ebp
  410351:	jp     0x4102f4
  410353:	mov    DWORD PTR [edi+eax*8],esp
  410356:	jmp    0xab413080
  41035b:	push   0xe24cb41c
  410360:	aam    0x2c
  410362:	cmp    BYTE PTR [esi-0x12],bh
  410365:	test   BYTE PTR [edi-0x73ef9b06],0xe1
  41036c:	imul   eax,DWORD PTR [esi+0xe171212],0xffffffc6
  410373:	ret    0xb65a
  410376:	sbb    DWORD PTR [ecx+ecx*2],0xffffffbe
  41037a:	xor    ebx,esp
  41037c:	cmp    BYTE PTR [edi+0x57],dh
  41037f:	fmul   DWORD PTR [esi]
  410381:	stos   BYTE PTR es:[edi],al
  410382:	pop    edi
  410383:	ja     0x410366
  410385:	xlat   BYTE PTR ds:[ebx]
  410386:	jno    0x41032a
  410388:	pop    edi
  410389:	jne    0x4103df
  41038b:	data16 mov cs,WORD PTR [ebx]
  41038e:	cmp    esi,DWORD PTR [edx+0x2be67355]
  410394:	pop    ds
  410395:	pop    esi
  410396:	pop    edx
  410397:	sub    eax,0x97ff748b
  41039c:	cmp    edi,edx
  41039e:	jno    0x410357
  4103a0:	sbb    BYTE PTR [esi],dh
  4103a2:	adc    eax,ebp
  4103a4:	adc    dl,BYTE PTR [eax+0x906eed2]
  4103aa:	dec    edi
  4103ab:	sbb    al,0xb4
  4103ad:	xor    ecx,DWORD PTR [edi]
  4103af:	inc    edi
  4103b0:	test   bh,al
  4103b2:	(bad)  
  4103b5:	mov    ebp,0x8710aaa6
  4103ba:	ja     0x410348
  4103bc:	inc    ebx
  4103bd:	inc    ebx
  4103be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103bf:	mov    eax,?
  4103c1:	dec    esp
  4103c2:	lods   eax,DWORD PTR ds:[esi]
  4103c3:	jbe    0x4103e2
  4103c5:	es test al,0xec
  4103c8:	inc    esi
  4103c9:	add    DWORD PTR [edx],edx
  4103cb:	add    ch,BYTE PTR [edx+0x6a]
  4103ce:	sub    ah,BYTE PTR [ebp+0x27bc0f01]
  4103d4:	xchg   edx,eax
  4103d5:	out    dx,eax
  4103d6:	mov    cl,0x9b
  4103d8:	or     BYTE PTR [esi+0x25],al
  4103db:	ss cli 
  4103dd:	lahf   
  4103de:	pop    eax
  4103df:	mul    BYTE PTR [eax-0x11c1b897]
  4103e5:	add    BYTE PTR [ebp-0x7e],dl
  4103e8:	mov    bl,0xea
  4103ea:	mov    BYTE PTR [eax-0x1a6d3290],ah
  4103f0:	adc    BYTE PTR [ebx+edx*8-0x49],bl
  4103f4:	dec    esp
  4103f5:	and    eax,0x8af67120
  4103fa:	cld    
  4103fb:	xor    esi,DWORD PTR [esi]
  4103fd:	cmp    DWORD PTR es:[esi],ebp
  410400:	pusha  
  410401:	clc    
  410402:	addr16 sub eax,0x8b979fcc
  410408:	in     al,0xef
  41040a:	addr16 icebp 
  41040c:	push   edx
  41040d:	or     edx,ebx
  41040f:	and    ebp,0x6e058c90
  410415:	(bad)  
  410416:	mov    al,0x9a
  410418:	add    ch,BYTE PTR [edi]
  41041a:	(bad)  
  41041b:	loopne 0x4103f4
  41041d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41041e:	xchg   ecx,eax
  41041f:	out    0x67,eax
  410421:	test   BYTE PTR [ebx],dl
  410423:	adc    dh,BYTE PTR [eax+0x75]
  410426:	xchg   ebp,eax
  410427:	push   edx
  410428:	mov    ecx,0x78e5da44
  41042d:	fdivr  st(6),st
  41042f:	add    DWORD PTR [ecx-0x2412c784],edi
  410435:	or     eax,0x757a4646
  41043a:	inc    ecx
  41043b:	jmp    0x19dec0b0
  410440:	and    ebx,eax
  410442:	mov    eax,ds:0xee5ae8b0
  410447:	loopne 0x4104b5
  410449:	fld    QWORD PTR [ebx-0x7593200d]
  41044f:	cmp    al,0xc4
  410451:	push   esp
  410452:	mov    esp,0x6d1b7b1e
  410457:	lds    ebx,FWORD PTR [esi+0x3c]
  41045a:	dec    DWORD PTR [edi+0x693c61e2]
  410460:	repnz and bl,ch
  410463:	mov    edx,0x89339c68
  410468:	mov    dh,0x84
  41046a:	ud0    ebx,DWORD PTR [edx]
  41046d:	ja     0x410465
  41046f:	lock in al,dx
  410471:	aam    0x3b
  410473:	jne    0x41043c
  410475:	xchg   esp,eax
  410476:	pop    ds
  410477:	scas   al,BYTE PTR es:[edi]
  410478:	(bad)  
  410479:	mov    bh,BYTE PTR [ecx-0x2f362fff]
  41047f:	pop    ecx
  410480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410481:	repnz data16 mov dl,0x6f
  410485:	icebp  
  410486:	adc    ebx,DWORD PTR [ebp+0x12]
  410489:	outs   dx,BYTE PTR ds:[esi]
  41048a:	jae    0x410493
  41048c:	jae    0x4104f9
  41048e:	or     edi,ebp
  410490:	std    
  410491:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410493:	jno    0x4104fd
  410495:	fist   WORD PTR [ebp-0x5f]
  410498:	lea    edi,[esi-0x3b]
  41049b:	rcl    BYTE PTR [esp+eiz*4],cl
  41049e:	sub    eax,0x3daaa2b4
  4104a3:	adc    esi,esp
  4104a5:	push   0xc181a187
  4104aa:	ds fcmovnu st,st(5)
  4104ad:	push   0x66
  4104af:	mov    edi,0x24f2c105
  4104b4:	inc    ebp
  4104b5:	pop    ebp
  4104b6:	ss cmp edx,esi
  4104b9:	into   
  4104ba:	and    eax,0xc480b2e3
  4104bf:	pop    ebx
  4104c0:	je     0x4104fc
  4104c2:	outs   dx,BYTE PTR ds:[esi]
  4104c3:	xchg   esp,eax
  4104c4:	ret    
  4104c5:	mov    ch,0x1
  4104c7:	stos   DWORD PTR es:[edi],eax
  4104c8:	mov    ds:0x38935769,al
  4104cd:	mov    ebp,0xed68c98c
  4104d2:	psrld  mm2,QWORD PTR [eax+0x4190c885]
  4104d9:	pushf  
  4104da:	stc    
  4104db:	adc    al,0x52
  4104dd:	hlt    
  4104de:	fild   WORD PTR [eax+0x5b]
  4104e1:	enter  0xd789,0x3f
  4104e5:	outs   dx,DWORD PTR ds:[esi]
  4104e6:	or     esi,eax
  4104e8:	sbb    ebp,DWORD PTR [esi-0x19306f5f]
  4104ee:	cmp    edx,DWORD PTR [esi]
  4104f0:	mov    ds:0xf8d96ae7,eax
  4104f5:	pop    edx
  4104f6:	mov    cl,0x18
  4104f8:	jl     0x41054e
  4104fa:	cs xor eax,0x7c5895c
  410500:	stos   BYTE PTR es:[edi],al
  410501:	out    dx,eax
  410502:	mov    cl,0xea
  410504:	mov    eax,0x4dbc0671
  410509:	retf   
  41050a:	fs cmp eax,0x5ae3e60c
  410510:	xor    ah,cl
  410512:	sub    eax,DWORD PTR [edx]
  410514:	cwde   
  410515:	out    dx,eax
  410516:	mov    cl,0xde
  410518:	cs inc eax
  41051a:	jg     0x410500
  41051c:	data16 aas 
  41051e:	arpl   WORD PTR [eax-0x61],bp
  410521:	loopne 0x4104d0
  410523:	hlt    
  410524:	xor    al,al
  410526:	adc    eax,0xb093c106
  41052b:	push   ecx
  41052c:	push   es
  41052d:	push   ds
  41052e:	in     eax,dx
  41052f:	ret    0x52dc
  410532:	mov    al,0x3f
  410534:	dec    edi
  410535:	xor    eax,0xe3c8c05b
  41053a:	ret    
  41053b:	pop    es
  41053c:	imul   ebp,ecx,0x4b
  41053f:	xchg   esp,eax
  410540:	push   0x49
  410542:	push   cs
  410543:	cdq    
  410544:	or     eax,0x21d9b090
  410549:	into   
  41054a:	push   ss
  41054b:	mov    ebp,0x40dfe9b8
  410550:	pop    es
  410551:	loop   0x41051a
  410553:	jecxz  0x4105cc
  410555:	cmp    al,0xfb
  410557:	inc    esi
  410558:	adc    eax,0x6c5236a5
  41055d:	scas   eax,DWORD PTR es:[edi]
  41055e:	rcr    BYTE PTR [esi],cl
  410560:	xchg   BYTE PTR [ebp-0x4e],dl
  410563:	jo     0x41052b
  410565:	aas    
  410566:	or     al,0x3e
  410568:	dec    esp
  410569:	pop    edi
  41056a:	xchg   ebx,eax
  41056b:	xchg   ebx,eax
  41056c:	(bad)  
  41056e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41056f:	sahf   
  410570:	sbb    eax,DWORD PTR [eax]
  410572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410573:	add    eax,0x578a4390
  410578:	sub    eax,0x4d4dde13
  41057d:	and    DWORD PTR [edx],esp
  41057f:	push   esp
  410581:	loope  0x4105e6
  410583:	pop    ss
  410584:	mov    eax,ds:0x8dba5217
  410589:	dec    ebx
  41058a:	mov    esi,0xc8fadc51
  41058f:	sti    
  410590:	jmp    0x4105d2
  410592:	scas   al,BYTE PTR es:[edi]
  410593:	pop    eax
  410594:	jp     0x410565
  410596:	jne    0x410545
  410598:	jbe    0x41055d
  41059a:	jl     0x41053a
  41059c:	(bad)  
  41059d:	and    eax,0x9a56f269
  4105a2:	pop    eax
  4105a3:	inc    edi
  4105a4:	fadd   st,st(2)
  4105a6:	jno    0x41057b
  4105a8:	or     bl,dl
  4105aa:	loopne 0x4105b1
  4105ac:	shr    dh,cl
  4105ae:	add    eax,0xfffffff4
  4105b1:	jbe    0x4105b2
  4105b3:	jae    0x410589
  4105b5:	mov    edi,0xdf0c6ffc
  4105ba:	xchg   DWORD PTR [ecx+0x67],esi
  4105bd:	push   0xffffffd8
  4105bf:	sub    dh,BYTE PTR [edi]
  4105c1:	jmp    0x8ad3:0x788c5cfd
  4105c8:	adc    al,0xa
  4105ca:	jns    0x410559
  4105cc:	push   eax
  4105cd:	inc    esp
  4105ce:	push   eax
  4105cf:	je     0x4105d0
  4105d1:	ss ret 0x39c2
  4105d5:	pop    edx
  4105d6:	jbe    0x410562
  4105d8:	dec    edi
  4105d9:	mov    BYTE PTR [ebx+0x25],al
  4105dc:	(bad)  
  4105dd:	inc    ebx
  4105de:	sub    DWORD PTR [eax-0x5f],eax
  4105e1:	xor    eax,DWORD PTR [edx]
  4105e3:	adc    DWORD PTR [ecx+0x78],0xffffffc0
  4105e7:	jo     0x41062e
  4105e9:	mov    bh,0x7d
  4105eb:	stc    
  4105ec:	clc    
  4105ed:	sti    
  4105ee:	hlt    
  4105ef:	ja     0x41060b
  4105f1:	mov    ds:0xa239b328,eax
  4105f6:	les    ebp,FWORD PTR [eax-0x515e5e3e]
  4105fc:	call   0x2c31b801
  410601:	clc    
  410602:	imul   DWORD PTR [ebx+0x20dbac66]
  410608:	hlt    
  410609:	repz mov ah,0x34
  41060c:	sbb    DWORD PTR [edi+0x20e7f24],ecx
  410612:	mov    eax,ss
  410614:	(bad)  
  410615:	cmp    ah,BYTE PTR [edi+0x79]
  410618:	add    eax,ecx
  41061a:	(bad)  
  41061b:	pop    esp
  41061c:	dec    ebx
  41061d:	jmp    0x1244:0xd7e4fea3
  410624:	lods   al,BYTE PTR ds:[esi]
  410625:	push   ds
  410626:	fbld   TBYTE PTR [eax]
  410628:	push   ebp
  41062a:	dec    esi
  41062b:	jl     0x4105d4
  41062d:	sbb    DWORD PTR [edx-0x7e92038],0xffffffe4
  410634:	imul   esi,edi,0x68058137
  41063a:	(bad)  
  41063b:	inc    ecx
  41063c:	clc    
  41063d:	jge    0x4106b3
  41063f:	sahf   
  410640:	stos   BYTE PTR es:[edi],al
  410641:	mov    edx,esp
  410643:	xor    ch,ch
  410645:	test   al,0xb6
  410647:	inc    edi
  410648:	call   0x6ed4:0x1f58d022
  41064f:	inc    ecx
  410650:	fistp  WORD PTR [edi]
  410652:	or     eax,0x6ac558ca
  410657:	mov    dh,0xcc
  410659:	loopne 0x41063f
  41065b:	sub    eax,0x7a2dc60b
  410660:	aad    0x54
  410662:	popf   
  410663:	(bad)  
  410664:	xor    ebx,DWORD PTR [esi+0x65]
  410667:	cdq    
  410668:	shl    ebx,0x8a
  41066b:	lahf   
  41066c:	sar    BYTE PTR [esi+0x4a],0x3e
  410670:	cmc    
  410671:	daa    
  410672:	repz add BYTE PTR [esi],0xa5
  410676:	xchg   esp,eax
  410677:	(bad)  [ecx]
  410679:	daa    
  41067a:	popf   
  41067b:	inc    ebp
  41067c:	push   es
  41067d:	lods   eax,DWORD PTR ds:[esi]
  41067e:	dec    ecx
  41067f:	inc    edi
  410680:	popa   
  410681:	or     eax,0x5329a33f
  410686:	mov    esp,0xe7524144
  41068b:	sub    al,0x1c
  41068d:	clc    
  41068e:	pop    ds
  41068f:	pop    eax
  410690:	mov    dl,0xdd
  410692:	mov    ebp,DWORD PTR [edx+ebx*1+0x2a]
  410696:	inc    edx
  410697:	jns    0x4106ee
  410699:	test   al,0x9f
  41069b:	fistp  DWORD PTR [edi-0x66]
  41069e:	ffree  st(6)
  4106a0:	adc    dh,ch
  4106a2:	mov    ebx,0xb1206051
  4106a7:	scas   eax,DWORD PTR es:[edi]
  4106a8:	mov    al,BYTE PTR ds:0x5bc8d720
  4106ae:	int    0xf8
  4106b0:	mov    esi,0x78c70ba6
  4106b5:	sbb    BYTE PTR [esi],dh
  4106b7:	or     bh,BYTE PTR [edi]
  4106b9:	push   edx
  4106ba:	or     bh,BYTE PTR gs:[esp-0x6e]
  4106bf:	mov    eax,0x44ce3507
  4106c4:	lea    ebp,[ebx-0x29]
  4106c7:	arpl   dx,bx
  4106c9:	jg     0x410683
  4106cb:	xchg   ecx,eax
  4106cc:	(bad)  
  4106cd:	xacquire xchg BYTE PTR [ecx],ch
  4106d0:	mov    dh,0x39
  4106d2:	mov    BYTE PTR [ebx-0xe],bh
  4106d5:	(bad)  
  4106d6:	fisttp WORD PTR [ebx-0x233ae1e6]
  4106dc:	push   cs
  4106dd:	push   0x6e
  4106df:	sbb    DWORD PTR ds:0x7b22c538,edi
  4106e5:	(bad)  
  4106e6:	xchg   edi,eax
  4106e7:	hlt    
  4106e8:	and    eax,DWORD PTR [ebp-0xe7e3585]
  4106ee:	call   0xabd03a9c
  4106f3:	aam    0xce
  4106f5:	add    edi,DWORD PTR [edi-0x2f116589]
  4106fb:	or     eax,0xdd6418ba
  410700:	es inc eax
  410702:	pop    ss
  410703:	lahf   
  410704:	dec    ebx
  410705:	xor    eax,0x6e1d2f4d
  41070a:	xchg   edx,eax
  41070b:	cli    
  41070c:	pop    es
  41070d:	ins    DWORD PTR es:[edi],dx
  41070e:	das    
  41070f:	pushf  
  410710:	lds    esp,FWORD PTR [edi-0x7c]
  410713:	mov    esp,0x452e3229
  410718:	daa    
  410719:	add    DWORD PTR [ebp-0xaefb740],esp
  41071f:	cwde   
  410720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410721:	imul   esi,DWORD PTR ds:0x880f5d3d,0x3da96c87
  41072b:	setae  ch
  41072e:	(bad)  [edx+edx*4+0x62]
  410732:	popf   
  410733:	shl    DWORD PTR [eax],0x2
  410736:	dec    esp
  410737:	test   DWORD PTR [ebx-0x22],0x454392dc
  41073e:	jmp    0x7fd82547
  410743:	mov    esp,0xecc106e5
  410748:	mov    es:0xaf7edbe,eax
  41074e:	jmp    0xf3ff:0xfcbabe3f
  410755:	push   ss
  410756:	mov    bl,0xfa
  410758:	jecxz  0x41070f
  41075a:	adc    al,0xb4
  41075c:	mov    ds:0x8606c6b7,eax
  410761:	aas    
  410762:	call   0x67b8:0x67784f24
  410769:	sbb    ah,BYTE PTR [ebx*8-0x1ac45319]
  410770:	test   ecx,edx
  410772:	loop   0x41077b
  410774:	neg    ch
  410776:	and    al,0xb4
  410778:	mov    ds:0x67a4640e,eax
  41077d:	sbb    ecx,esp
  41077f:	and    eax,DWORD PTR [ebx-0x759adbb4]
  410785:	int3   
  410786:	adc    eax,0x4873499b
  41078b:	push   cs
  41078c:	pusha  
  41078d:	call   0xa05b7693
  410792:	or     ebp,DWORD PTR [edx-0x37]
  410795:	jmp    0x410771
  410797:	mov    bh,0xfd
  410799:	pop    ss
  41079a:	mov    dh,0x1b
  41079c:	jle    0x410734
  41079e:	sub    eax,0xfdf980d6
  4107a3:	ffree  st(3)
  4107a5:	push   edx
  4107a6:	and    al,0xdd
  4107a8:	stos   DWORD PTR es:[edi],eax
  4107a9:	mov    WORD PTR [ebp-0x1e],ds
  4107ac:	jb     0x4107db
  4107ae:	sub    al,BYTE PTR [ebx]
  4107b0:	xchg   BYTE PTR [eax+edx*2-0x75],al
  4107b4:	xor    BYTE PTR [ecx+ecx*2],al
  4107b7:	mov    edx,0x3a763bd7
  4107bc:	dec    esp
  4107bd:	mov    ds:0xbaac7763,al
  4107c2:	sub    edx,DWORD PTR [ebp-0x49]
  4107c5:	sbb    dl,BYTE PTR [edi]
  4107c7:	mov    ds:0xe97b569,al
  4107cc:	or     dl,BYTE PTR [eax]
  4107ce:	stos   DWORD PTR es:[edi],eax
  4107cf:	ds pop edx
  4107d1:	inc    eax
  4107d2:	push   edi
  4107d3:	scas   al,BYTE PTR es:[edi]
  4107d4:	xor    edi,ebp
  4107d6:	addr16 es adc eax,0xfa16cd68
  4107dd:	mov    bh,0x41
  4107df:	aas    
  4107e0:	xchg   ebp,eax
  4107e1:	lea    esp,[edx+0x3931d1d4]
  4107e7:	jge    0x4107c4
  4107e9:	mov    ebp,edi
  4107eb:	ret    0xcacb
  4107ee:	int3   
  4107ef:	add    al,0xcf
  4107f1:	bound  esi,QWORD PTR [esi-0x7c]
  4107f4:	mov    ah,0xe
  4107f6:	cmp    esi,esi
  4107f8:	das    
  4107f9:	fidiv  DWORD PTR [esi+0x1bc09de1]
  4107ff:	scas   eax,DWORD PTR es:[edi]
  410800:	cli    
  410801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410802:	mov    ch,0x6
  410804:	fs mov edx,0x10d0e18c
  41080a:	xchg   edx,eax
  41080b:	test   BYTE PTR [ecx],ch
  41080d:	xor    BYTE PTR [ebp-0x36cfb0d8],bl
  410813:	push   0x91a0305e
  410818:	xor    bl,BYTE PTR [ecx-0x69b4f314]
  41081e:	enter  0x9846,0x40
  410822:	push   edx
  410823:	push   0x612b7aed
  410828:	sub    eax,0xdd470121
  41082d:	jb     0x410889
  41082f:	inc    edi
  410830:	mov    ecx,0xcc1c830e
  410835:	ror    DWORD PTR [ebp-0x7c],cl
  410838:	ror    edi,cl
  41083a:	in     al,dx
  41083b:	jb     0x410896
  41083d:	add    DWORD PTR [ebx-0x3b79acee],esp
  410843:	mov    bl,0x7c
  410845:	enter  0x562c,0x47
  410849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41084a:	fsub   DWORD PTR [ebx-0x45725302]
  410850:	sahf   
  410851:	test   DWORD PTR ds:0xbc8568c,ebx
  410857:	lods   eax,DWORD PTR cs:[esi]
  410859:	mov    eax,0xd13b5812
  41085e:	xchg   esp,eax
  41085f:	dec    eax
  410860:	cdq    
  410861:	dec    ebp
  410862:	push   ss
  410863:	icebp  
  410864:	or     BYTE PTR [edx+0x47],bh
  410867:	jecxz  0x410877
  410869:	sub    al,0xe3
  41086b:	xchg   ecx,eax
  41086c:	test   BYTE PTR [ecx+0x3b531b79],dh
  410872:	out    0x2,al
  410874:	lods   al,BYTE PTR ds:[esi]
  410875:	jbe    0x410830
  410877:	xor    DWORD PTR [edi+edi*2-0x6488b9a],ebx
  41087e:	inc    ebx
  41087f:	dec    eax
  410880:	lods   al,BYTE PTR ds:[esi]
  410881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410882:	cmp    DWORD PTR [esp+esi*2-0x591e0d3e],esi
  410889:	mov    al,0x9d
  41088b:	mov    ds:0x2daa9484,eax
  410890:	pop    edx
  410891:	mov    ah,0x5f
  410893:	xchg   BYTE PTR es:[ecx],bl
  410896:	sbb    al,0xe8
  410898:	push   0x81d0894a
  41089d:	pusha  
  41089e:	push   0x71
  4108a0:	and    BYTE PTR [esi+edx*2],ah
  4108a3:	push   edi
  4108a4:	push   ebp
  4108a5:	(bad)  
  4108a6:	lods   eax,DWORD PTR ds:[esi]
  4108a7:	jo     0x4108a4
  4108a9:	inc    ecx
  4108aa:	arpl   WORD PTR [edi+0x4f],cx
  4108ad:	pop    edx
  4108ae:	add    eax,0x4c94157b
  4108b3:	mov    es,WORD PTR [esi]
  4108b5:	std    
  4108b6:	mov    ah,0xf7
  4108b8:	bnd jno 0x41088d
  4108bb:	sub    dl,BYTE PTR [esi+eax*4+0x44]
  4108bf:	int    0xe
  4108c1:	aas    
  4108c2:	inc    esp
  4108c3:	hlt    
  4108c4:	fisttp WORD PTR [edi-0x49]
  4108c7:	sbb    eax,DWORD PTR [esi]
  4108c9:	iret   
  4108ca:	pop    es
  4108cb:	add    eax,0x180aa650
  4108d0:	mov    ebp,0xb7790e8d
  4108d5:	jle    0x410863
  4108d7:	cmp    BYTE PTR [ebx],bl
  4108d9:	cmp    edi,edx
  4108db:	call   0x67527c3e
  4108e0:	les    eax,FWORD PTR es:[ebp-0x7fb6b78d]
  4108e7:	xor    esi,DWORD PTR [esi]
  4108e9:	js     0x41096a
  4108eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ec:	inc    edx
  4108ed:	pop    ebp
  4108ee:	ss mov dl,0xb4
  4108f1:	sub    esp,DWORD PTR [ecx+0x5d]
  4108f4:	xchg   ebp,eax
  4108f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108f6:	loope  0x410956
  4108f8:	jecxz  0x41093b
  4108fa:	outs   dx,DWORD PTR ds:[esi]
  4108fb:	es xchg ebx,eax
  4108fd:	dec    eax
  4108fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ff:	retf   
  410900:	jns    0x41090e
  410902:	outs   dx,BYTE PTR ds:[esi]
  410903:	mov    edx,0xe99a5840
  410908:	mov    ds:0x8da95f7b,eax
  41090d:	shr    BYTE PTR [esp+eax*1],1
  410910:	lahf   
  410911:	in     eax,0x49
  410913:	shl    DWORD PTR [esi-0x4b],1
  410916:	ret    
  410917:	setno  al
  41091a:	pop    esp
  41091b:	outs   dx,DWORD PTR ds:[esi]
  41091c:	out    0x22,al
  41091e:	dec    esp
  41091f:	and    esp,DWORD PTR [ebx+0x60]
  410922:	sar    BYTE PTR [eax+0x68],cl
  410925:	xor    BYTE PTR [ecx+0x78],bl
  410928:	mov    bh,0x60
  41092a:	enter  0x11db,0xce
  41092e:	ss lahf 
  410930:	jae    0x41095b
  410932:	dec    eax
  410933:	(bad)  [ecx-0x37]
  410936:	popf   
  410937:	cli    
  410938:	icebp  
  410939:	xchg   esi,eax
  41093a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41093b:	sbb    edx,esi
  41093d:	sbb    esi,DWORD PTR [esi+0x71718125]
  410943:	lock les ecx,FWORD PTR [ebp+0x20]
  410947:	imul   esp,DWORD PTR [edx+eax*8],0xffffff93
  41094b:	adc    DWORD PTR [ecx-0x59],ebp
  41094e:	bound  ebp,QWORD PTR [edi]
  410950:	aas    
  410951:	mov    al,0xa6
  410953:	add    eax,0x8036e26d
  410958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410959:	sbb    eax,0xc010d96
  41095e:	mov    dl,0x97
  410960:	stos   DWORD PTR es:[edi],eax
  410961:	adc    BYTE PTR [edx],0x81
  410964:	or     DWORD PTR [ebx],0x25
  410967:	xchg   edx,eax
  410968:	out    0x9e,eax
  41096a:	sbb    al,0xb6
  41096c:	adc    al,0x62
  41096e:	scas   al,BYTE PTR es:[edi]
  41096f:	cmp    DWORD PTR [edx+0x281bffd7],0x27
  410976:	ja     0x410931
  410978:	mov    eax,ds:0xac12cfa
  41097d:	setb   BYTE PTR [eax+0x1d1ccc5b]
  410984:	adc    ch,cl
  410986:	inc    esi
  410987:	test   al,0x77
  410989:	mov    bh,BYTE PTR [edx]
  41098b:	in     eax,0xc8
  41098d:	xor    ch,dl
  41098f:	loop   0x410987
  410991:	jnp    0x410991
  410993:	jbe    0x410916
  410995:	mov    eax,ds:0xe2cc2c2
  41099a:	fbld   TBYTE PTR ds:0x120ae762
  4109a0:	push   ecx
  4109a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109a2:	daa    
  4109a3:	bound  edi,QWORD PTR [edx+ecx*4+0x6d]
  4109a7:	sbb    eax,0x2fa4f8ee
  4109ac:	aas    
  4109ad:	aaa    
  4109ae:	dec    esp
  4109af:	cmp    esi,edx
  4109b1:	enter  0x3206,0x82
  4109b5:	rol    BYTE PTR [ebp-0x3a],1
  4109b8:	pop    ebp
  4109b9:	test   DWORD PTR [edi+0x14],0xeccd7d2f
  4109c0:	xchg   ecx,eax
  4109c1:	aad    0x58
  4109c3:	pop    ebx
  4109c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c5:	xlat   BYTE PTR ds:[ebx]
  4109c6:	xor    DWORD PTR ds:0xf09d67d8,esp
  4109cc:	mov    BYTE PTR [esi-0x7c],ch
  4109cf:	pop    esp
  4109d0:	inc    esp
  4109d1:	dec    esi
  4109d2:	add    ecx,DWORD PTR [ecx-0x67d90028]
  4109d8:	inc    ecx
  4109d9:	std    
  4109da:	adc    BYTE PTR [ebx],ch
  4109dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109dd:	jge    0x410a5d
  4109df:	in     eax,0x74
  4109e1:	pop    ss
  4109e2:	gs mov edi,0xc38fa9c7
  4109e8:	enter  0xc98f,0xe2
  4109ec:	push   0x14
  4109ee:	shr    BYTE PTR [esi-0x30cecf12],cl
  4109f4:	imul   ecx,ebx,0x52735018
  4109fa:	cmp    bh,BYTE PTR [ebp-0x6374f43]
  410a00:	scas   eax,DWORD PTR es:[edi]
  410a01:	dec    ebp
  410a02:	jb     0x4109fc
  410a04:	mov    eax,ds:0xa36048ef
  410a09:	xor    BYTE PTR [ebp+ecx*1-0x7f5e0f5d],ah
  410a10:	imul   esp,DWORD PTR [eax-0x1970cdd2],0xd2e851b0
  410a1a:	jp     0x410a3b
  410a1c:	adc    BYTE PTR [ebx+0x59],0x1b
  410a20:	mov    dh,0x64
  410a22:	retf   0x3d60
  410a25:	inc    edx
  410a26:	add    esp,ecx
  410a28:	pusha  
  410a29:	std    
  410a2a:	xchg   esi,eax
  410a2b:	dec    ebp
  410a2c:	add    eax,0xda8739fd
  410a31:	sti    
  410a32:	test   DWORD PTR [ebx+0x71],esp
  410a35:	or     ebp,ecx
  410a37:	sub    eax,DWORD PTR [ecx+0x4a]
  410a3a:	mov    ebx,DWORD PTR [ebp-0x7a]
  410a3d:	sbb    esp,DWORD PTR [eax]
  410a3f:	int3   
  410a40:	push   ebx
  410a41:	repz mov cl,0x72
  410a44:	push   esp
  410a45:	jno    0x4109da
  410a47:	(bad)  fs:[esp+eax*1]
  410a4b:	push   eax
  410a4c:	mov    ds:0xa3a300bd,al
  410a51:	out    0xb8,al
  410a53:	inc    esp
  410a54:	sti    
  410a55:	out    0x3a,al
  410a57:	mov    ch,0x6f
  410a59:	cmp    BYTE PTR [ebp+0x24],bh
  410a5c:	sbb    eax,0x8c8b695e
  410a61:	sub    edi,DWORD PTR [ecx+ebp*8-0x43]
  410a65:	int    0xac
  410a67:	jbe    0x410a64
  410a69:	inc    ecx
  410a6a:	mov    DWORD PTR [esi+0xd],ebp
  410a6d:	aam    0x3c
  410a6f:	pop    esi
  410a70:	push   ds
  410a71:	pushf  
  410a72:	es in  eax,dx
  410a74:	je     0x410ab8
  410a76:	cdq    
  410a77:	cdq    
  410a78:	test   BYTE PTR [ebp+0x190886d],al
  410a7e:	sar    BYTE PTR [ebx-0xa],0x69
  410a82:	push   0x5767196d
  410a87:	test   al,0x8b
  410a89:	and    ebx,ebp
  410a8b:	(bad)  
  410a8c:	ds ins DWORD PTR es:[edi],dx
  410a8e:	lds    esp,FWORD PTR [esi+0x41]
  410a91:	jne    0x410aa5
  410a93:	(bad)  
  410a94:	sbb    dh,dh
  410a96:	push   ds
  410a97:	(bad)  [ebp-0x7908f7fd]
  410a9d:	mov    cl,0x32
  410a9f:	add    DWORD PTR [edi+0x611279fd],edi
  410aa5:	mov    bh,0xeb
  410aa7:	sub    eax,0xfd3b40fa
  410aac:	setp   BYTE PTR [ecx]
  410aaf:	inc    ebp
  410ab0:	(bad)  
  410ab1:	pop    esp
  410ab2:	ins    DWORD PTR es:[edi],dx
  410ab3:	fdiv   QWORD PTR [edi]
  410ab5:	and    BYTE PTR [ebx+0x4],cl
  410ab8:	adc    DWORD PTR [edi],ecx
  410aba:	jb     0x410ae1
  410abc:	das    
  410abd:	ins    DWORD PTR es:[edi],dx
  410abe:	xchg   edx,eax
  410abf:	cs and al,0xb
  410ac2:	sub    esp,esp
  410ac4:	imul   DWORD PTR [edx-0x3e]
  410ac7:	xor    DWORD PTR [eax+0x7c0fddaf],ebp
  410acd:	dec    ecx
  410ace:	inc    ebp
  410acf:	pop    eax
  410ad0:	clc    
  410ad1:	or     eax,0xb59de523
  410ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad7:	aaa    
  410ad8:	sub    al,0xc0
  410ada:	adc    al,0xce
  410adc:	jbe    0x410a81
  410ade:	lock ja 0x410b35
  410ae1:	cmp    esi,DWORD PTR [edi+0x60]
  410ae4:	cld    
  410ae5:	ins    DWORD PTR es:[edi],dx
  410ae6:	push   cs
  410ae7:	cmp    al,0x17
  410ae9:	jle    0x410ac8
  410aeb:	jmp    0xb288:0xa4f7d707
  410af2:	std    
  410af3:	mov    ebp,0xfa1a53d5
  410af8:	dec    eax
  410af9:	xchg   edi,eax
  410afa:	adc    DWORD PTR [ecx+0x74b1b2d8],edi
  410b00:	ss push ebp
  410b02:	mov    ecx,0x109bd26a
  410b07:	rcr    dl,cl
  410b09:	fcomp  QWORD PTR ss:[edi]
  410b0c:	sub    al,0x6c
  410b0e:	mov    al,ds:0x8715dd52
  410b13:	push   es
  410b14:	ins    DWORD PTR es:[edi],dx
  410b15:	aas    
  410b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b17:	jmp    0x410aa4
  410b19:	iret   
  410b1a:	adc    BYTE PTR [ecx+edx*8-0x61d31790],dh
  410b21:	gs sbb al,0xf9
  410b24:	mov    ch,cl
  410b26:	ret    
  410b27:	pop    edx
  410b28:	mov    dh,0xef
  410b2a:	inc    esp
  410b2b:	or     DWORD PTR [ebx-0x5acb6b06],ebx
  410b31:	sbb    DWORD PTR [ebp-0x42],edx
  410b34:	pop    ecx
  410b35:	adc    esp,DWORD PTR [ebp+0x16]
  410b38:	mov    esi,ecx
  410b3a:	aam    0x2c
  410b3c:	mov    ds:0xa2e1918b,eax
  410b41:	sbb    dh,BYTE PTR [edx+0x2533cba5]
  410b47:	jp     0x410afc
  410b49:	jg     0x410ad7
  410b4b:	mov    ebx,0x817660a7
  410b50:	rcr    DWORD PTR [ebx-0x23db121e],cl
  410b56:	out    dx,al
  410b57:	mov    esi,0xa5fae2d1
  410b5c:	dec    ebx
  410b5d:	jns    0x410ae9
  410b5f:	pavgw  mm3,QWORD PTR fs:[ebx-0x4]
  410b64:	sbb    BYTE PTR [ebp+ebx*8-0x4d],cl
  410b68:	(bad)  
  410b69:	pop    ebx
  410b6a:	ret    
  410b6b:	xchg   ebp,ebx
  410b6d:	pop    ss
  410b6e:	jge    0x410bc9
  410b70:	icebp  
  410b71:	pop    ebp
  410b72:	push   edi
  410b73:	sahf   
  410b74:	jge    0x410bd5
  410b76:	lds    ebp,FWORD PTR [esp+edx*8]
  410b79:	adc    eax,0xa43c41e1
  410b7e:	leave  
  410b7f:	xor    DWORD PTR [edi-0x62],0x21
  410b83:	push   ecx
  410b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b85:	xor    esp,ebx
  410b87:	(bad)  
  410b88:	test   al,0x81
  410b8a:	add    esi,esp
  410b8c:	mov    ecx,0xf4225c47
  410b91:	sahf   
  410b92:	imul   ebx,DWORD PTR [eax+0x603d840],0x5d
  410b99:	sbb    eax,DWORD PTR [esi-0x5aae6459]
  410b9f:	fadd   QWORD PTR [ecx-0x3ed0271b]
  410ba5:	mov    BYTE PTR [ecx+edi*1+0x7bb97d61],0xd6
  410bad:	or     ebp,DWORD PTR [edi-0x2ffe4a91]
  410bb3:	(bad)  
  410bb4:	jecxz  0x410c29
  410bb6:	dec    esi
  410bb7:	mov    al,0xb5
  410bb9:	cmp    DWORD PTR [edi-0xcd82ca7],esi
  410bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc0:	shr    dl,1
  410bc2:	in     al,0xed
  410bc4:	push   cs
  410bc5:	mov    ds:0x8e272f06,eax
  410bca:	mov    dh,bl
  410bcc:	in     al,dx
  410bcd:	shl    dl,cl
  410bcf:	call   0xd1c3b96d
  410bd4:	jmp    esp
  410bd6:	pop    esi
  410bd7:	and    DWORD PTR [edx-0x2bab55c5],edx
  410bdd:	shr    edi,1
  410bdf:	aaa    
  410be0:	push   cs
  410be1:	mov    dh,0xbc
  410be3:	sbb    al,BYTE PTR [edx+0x5d]
  410be6:	outs   dx,BYTE PTR ds:[esi]
  410be7:	or     cl,BYTE PTR [ebx+0x73]
  410bea:	adc    BYTE PTR [edi],cl
  410bec:	or     BYTE PTR [edx],dl
  410bee:	jno    0x410c4d
  410bf0:	loopne 0x410c42
  410bf2:	cmp    al,0x58
  410bf4:	xchg   esp,eax
  410bf5:	lea    ecx,[ecx-0x5b]
  410bf8:	arpl   ax,dx
  410bfa:	pop    ebx
  410bfb:	push   ss
  410bfc:	scas   al,BYTE PTR es:[edi]
  410bfd:	mov    esp,0xa93397c4
  410c02:	cs xor esi,ebx
  410c05:	xchg   sp,ax
  410c07:	dec    eax
  410c08:	fmul   st(5),st
  410c0a:	sub    al,0x21
  410c0c:	call   0x58bd:0x39e2b65e
  410c13:	popf   
  410c14:	or     ebp,esi
  410c16:	mov    ?,edi
  410c18:	popa   
  410c19:	loopne 0x410c4a
  410c1b:	pop    esi
  410c1c:	inc    esp
  410c1d:	aas    
  410c1e:	mov    bh,0xde
  410c20:	xchg   esi,eax
  410c21:	jle    0x410bee
  410c23:	imul   edx,DWORD PTR [eax*8-0x552914aa],0xcdb03c5b
  410c2e:	jge    0x410c7e
  410c30:	inc    eax
  410c31:	xchg   esi,eax
  410c32:	mov    al,0xe7
  410c34:	xchg   esi,eax
  410c35:	mov    dl,0xef
  410c37:	(bad)  
  410c38:	fisubr WORD PTR [eax-0x33]
  410c3b:	sbb    al,BYTE PTR [eax+eax*1+0x43f61c66]
  410c42:	push   ss
  410c43:	xchg   esi,eax
  410c44:	lds    ebp,FWORD PTR [esi-0xa3ad8ca]
  410c4a:	push   esp
  410c4b:	or     al,ch
  410c4d:	ds dec ebp
  410c4f:	or     eax,0xc3a8d225
  410c54:	pop    edx
  410c55:	mov    eax,ds:0xfdbe8878
  410c5a:	outs   dx,BYTE PTR ds:[esi]
  410c5b:	gs dec ebx
  410c5d:	push   eax
  410c5e:	sahf   
  410c5f:	mov    eax,ds:0xbfea5a79
  410c64:	cld    
  410c65:	outs   dx,DWORD PTR ds:[esi]
  410c66:	and    DWORD PTR [ecx],edx
  410c68:	mov    edx,0x99779e7a
  410c6d:	mov    ds:0x25b982e,al
  410c72:	cmp    DWORD PTR [edx],edi
  410c74:	not    BYTE PTR [edi]
  410c76:	ror    BYTE PTR ds:0x2fa4f9e4,0xfa
  410c7d:	xchg   ebx,eax
  410c7e:	jp     0x410c1c
  410c80:	cwde   
  410c81:	lods   eax,DWORD PTR ds:[esi]
  410c82:	pop    edx
  410c83:	and    DWORD PTR [edx-0x276cc6b8],esp
  410c89:	cli    
  410c8a:	icebp  
  410c8b:	xlat   BYTE PTR ds:[ebx]
  410c8c:	cdq    
  410c8d:	retf   
  410c8e:	jbe    0x410c9c
  410c90:	mov    al,0x9f
  410c92:	sub    DWORD PTR [edi+0x3ee45d14],edx
  410c98:	push   cs
  410c99:	xor    ecx,DWORD PTR [eax]
  410c9b:	adc    DWORD PTR [ecx+eax*2+0x508d2023],0x56
  410ca3:	mov    ch,0x8a
  410ca5:	(bad)  
  410ca6:	mov    ecx,0x5b3db544
  410cab:	popa   
  410cac:	fst    DWORD PTR [eax+0x1c]
  410caf:	or     ebx,DWORD PTR [ecx+0x16]
  410cb2:	stos   BYTE PTR es:[edi],al
  410cb3:	je     0x410ca4
  410cb5:	jl     0x410c89
  410cb7:	pop    ds
  410cb8:	sub    al,0xc7
  410cba:	scas   al,BYTE PTR es:[edi]
  410cbb:	push   ds
  410cbc:	mov    esi,0x283c1ebc
  410cc1:	cld    
  410cc2:	inc    eax
  410cc3:	pop    es
  410cc4:	hlt    
  410cc5:	pop    eax
  410cc6:	(bad)  
  410cc7:	push   ebx
  410cc8:	mov    edx,0xbb89d5ad
  410ccd:	push   edx
  410cce:	add    eax,0x24311e18
  410cd3:	cli    
  410cd4:	push   cs
  410cd5:	add    al,0xd5
  410cd7:	sahf   
  410cd8:	ret    0xdb2a
  410cdb:	shl    DWORD PTR [eax+edi*4-0x4c],cl
  410cdf:	cli    
  410ce0:	out    0x78,eax
  410ce2:	inc    edx
  410ce3:	sub    al,0x20
  410ce5:	ja     0x410cbe
  410ce7:	adc    bl,BYTE PTR [ebp+0x41]
  410cea:	mov    dl,0x58
  410cec:	add    ebx,esp
  410cee:	mov    edi,0x1239cb2c
  410cf3:	ja     0x410d4a
  410cf5:	adc    BYTE PTR [eax],cl
  410cf7:	fimul  DWORD PTR [ecx+0x3b44514b]
  410cfd:	xor    BYTE PTR [edx],dh
  410cff:	retf   
  410d00:	xor    BYTE PTR [eax-0x291956d6],al
  410d06:	or     BYTE PTR [ebx],dl
  410d08:	add    eax,0x9a33c79a
  410d0d:	adc    cl,BYTE PTR [eax+0x5b]
  410d10:	push   eax
  410d11:	ss jo  0x410ccc
  410d14:	jno    0x410cee
  410d16:	mov    ds:0x338f3ff4,eax
  410d1b:	adc    al,0x2
  410d1d:	adc    DWORD PTR [edx+0x35],esp
  410d20:	push   esi
  410d21:	jns    0x410d41
  410d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d24:	enter  0x2db3,0x94
  410d28:	je     0x410cad
  410d2a:	sbb    eax,0x28934a40
  410d2f:	dec    ebp
  410d30:	in     eax,0xc6
  410d32:	dec    ebp
  410d33:	fidivr WORD PTR [esi+0x30]
  410d36:	sbb    eax,0x8f51d14d
  410d3b:	pop    DWORD PTR [esi-0x3c]
  410d3e:	clc    
  410d3f:	outs   dx,DWORD PTR ds:[esi]
  410d40:	int    0x78
  410d42:	sub    al,0xf7
  410d44:	push   cs
  410d45:	cmp    eax,0x8e22d90d
  410d4a:	ins    BYTE PTR es:[edi],dx
  410d4b:	push   esp
  410d4c:	dec    edi
  410d4d:	jp     0x410d07
  410d4f:	or     esi,DWORD PTR [ebx+0x1f]
  410d52:	repnz lea edi,[eax+0x6f]
  410d56:	mov    ebp,0xba885618
  410d5b:	fdivrp st(2),st
  410d5d:	pop    ss
  410d5e:	jmp    0x410d91
  410d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d61:	mov    eax,eax
  410d63:	jo     0x410d32
  410d65:	bound  eax,QWORD PTR [edi+0x1d]
  410d68:	add    ch,BYTE PTR [edx+0x49]
  410d6b:	ins    DWORD PTR es:[edi],dx
  410d6c:	inc    ecx
  410d6d:	mov    DWORD PTR [ebx-0xd56af57],0x6f8800f5
  410d77:	out    0xd3,eax
  410d79:	add    DWORD PTR [eax+0x77],esi
  410d7c:	inc    ebx
  410d7d:	jno    0x410d6d
  410d7f:	aaa    
  410d80:	fst    QWORD PTR [ecx]
  410d82:	sti    
  410d83:	or     DWORD PTR [ecx],ecx
  410d85:	ins    DWORD PTR es:[edi],dx
  410d86:	and    al,0x1f
  410d88:	dec    edi
  410d89:	fdiv   QWORD PTR [edi+0x1]
  410d8c:	xlat   BYTE PTR ds:[ebx]
  410d8d:	jae    0x410d8f
  410d8f:	mov    BYTE PTR [edx+0x1745a2a3],dh
  410d95:	xor    DWORD PTR [esi],ebp
  410d97:	iret   
  410d98:	push   edx
  410d99:	sub    eax,0xc4b1bb43
  410d9e:	scas   eax,DWORD PTR es:[edi]
  410d9f:	xchg   DWORD PTR [edi+ebx*8],edx
  410da2:	jp     0x410dd8
  410da4:	adc    BYTE PTR [eax+edi*8],ah
  410da7:	push   esi
  410da8:	lods   eax,DWORD PTR ds:[esi]
  410da9:	outs   dx,BYTE PTR ds:[esi]
  410daa:	mov    bh,0xce
  410dac:	retf   0xc670
  410daf:	int    0x54
  410db1:	ret    0x23c9
  410db4:	lods   eax,DWORD PTR ds:[esi]
  410db5:	mov    ebp,0xc6bd5a0
  410dba:	xchg   ebx,eax
  410dbb:	mov    cl,0xb0
  410dbd:	outs   dx,BYTE PTR ds:[esi]
  410dbe:	and    ah,BYTE PTR [edx+0x7e]
  410dc1:	sti    
  410dc2:	mov    dl,bl
  410dc4:	and    dl,BYTE PTR [ecx-0x2949dd1e]
  410dca:	cmp    dl,ch
  410dcc:	dec    edx
  410dcd:	int    0x4c
  410dcf:	(bad)  
  410dd2:	(bad)  
  410dd3:	jg     0x410d62
  410dd5:	aad    0x15
  410dd7:	adc    al,0x4c
  410dd9:	shr    DWORD PTR [edx-0x7dbe7133],0xcc
  410de0:	xor    ecx,DWORD PTR [edi]
  410de2:	xchg   edi,eax
  410de3:	out    0xde,eax
  410de5:	jnp    0x410d7d
  410de7:	inc    esi
  410de8:	jp     0x410d8e
  410dea:	mov    esp,DWORD PTR [edi-0x21]
  410ded:	loop   0x410e2f
  410def:	rcr    esp,1
  410df1:	mov    ecx,0x1aac4075
  410df6:	iret   
  410df7:	leave  
  410df8:	push   ebx
  410df9:	test   al,0xfe
  410dfb:	push   ebx
  410dfc:	pop    esi
  410dfd:	rol    esp,0x43
  410e00:	call   0xa5894468
  410e05:	stc    
  410e06:	in     al,0x40
  410e08:	dec    esi
  410e09:	pop    ebp
  410e0a:	sti    
  410e0b:	sub    al,0xc5
  410e0d:	retf   
  410e0e:	xor    dl,bh
  410e10:	div    DWORD PTR [edi-0x39]
  410e13:	add    ebx,eax
  410e15:	mov    esi,0x5fc0f06d
  410e1a:	je     0x410dc6
  410e1c:	pusha  
  410e1d:	je     0x410e2b
  410e1f:	js     0x410de7
  410e21:	jb     0x410dff
  410e23:	mov    cl,0x85
  410e25:	add    DWORD PTR [ebp-0x43efd833],ecx
  410e2b:	or     esp,eax
  410e2d:	xor    al,0x71
  410e2f:	mov    cl,0x9e
  410e31:	push   cs
  410e32:	int    0x67
  410e34:	xor    DWORD PTR [ebx-0x3b],0x4e
  410e38:	call   0x3cbb:0xc0efe1b5
  410e3f:	data16 xchg BYTE PTR [edx+0x15],bh
  410e43:	cs jo  0x410eb4
  410e46:	cwde   
  410e47:	push   ebp
  410e48:	call   0xec2d02dc
  410e4d:	sub    ebp,eax
  410e4f:	mov    edi,0xa9f3a9b8
  410e54:	jmp    0x42a9b1e
  410e59:	loop   0x410df3
  410e5b:	mov    ecx,0xd0609887
  410e60:	mov    ch,0xab
  410e62:	stos   DWORD PTR es:[edi],eax
  410e63:	dec    ebx
  410e64:	sbb    eax,0x102bcaf4
  410e69:	ss inc esp
  410e6b:	sti    
  410e6c:	aaa    
  410e6d:	sub    DWORD PTR [ebx-0xd],ecx
  410e70:	jbe    0x410eef
  410e72:	aas    
  410e73:	jo     0x410ecb
  410e75:	mov    ebx,0x9a808ba5
  410e7a:	fcmovu st,st(2)
  410e7c:	adc    dl,cl
  410e7e:	(bad)  
  410e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e80:	sub    BYTE PTR [ebp+esi*4-0x4a09dd4],0xf1
  410e88:	adc    eax,0xdf8bf252
  410e8d:	mov    eax,0x4a0b465c
  410e92:	ret    0x70c7
  410e95:	dec    esp
  410e96:	inc    esi
  410e97:	(bad)  
  410e98:	xor    al,0xe7
  410e9a:	mov    dh,0xa7
  410e9c:	mov    edx,0xa0c5d65
  410ea1:	mov    ebp,0x5b10a4fe
  410ea6:	int    0xe8
  410ea8:	or     dh,BYTE PTR [edx]
  410eaa:	outs   dx,DWORD PTR ds:[esi]
  410eab:	xchg   ecx,eax
  410eac:	pop    es
  410ead:	mov    BYTE PTR [edx*8-0x21912bd8],ch
  410eb4:	sahf   
  410eb5:	enter  0x4b63,0x9f
  410eb9:	adc    eax,0xce7594a8
  410ebe:	aas    
  410ebf:	push   ebp
  410ec0:	out    0x39,eax
  410ec2:	scas   eax,DWORD PTR es:[edi]
  410ec3:	sub    al,0x36
  410ec5:	push   edx
  410ec6:	pop    es
  410ec7:	test   eax,0xbc64573a
  410ecc:	jb     0x410f14
  410ece:	test   eax,0x3391a5e4
  410ed3:	test   BYTE PTR [ebx],bl
  410ed5:	dec    ecx
  410ed6:	push   0xfffffff2
  410ed8:	xchg   ecx,eax
  410ed9:	test   BYTE PTR [esp+eiz*8],ah
  410edc:	or     esp,DWORD PTR [ebx-0x63]
  410edf:	add    al,0xee
  410ee1:	jno    0x410f3a
  410ee3:	imul   edi,DWORD PTR [esi],0xdacdd04c
  410ee9:	cmc    
  410eea:	lock in al,dx
  410eec:	inc    ecx
  410eed:	ins    BYTE PTR es:[edi],dx
  410eee:	push   edx
  410eef:	sub    eax,0xe82adf02
  410ef4:	pop    ss
  410ef5:	sub    bl,al
  410ef7:	mov    ds:0xa3bdf61d,al
  410efc:	inc    esp
  410efd:	cs cmp al,0x79
  410f00:	ret    0xc8f6
  410f03:	push   0x2
  410f05:	lods   al,BYTE PTR ds:[esi]
  410f06:	std    
  410f07:	lods   eax,DWORD PTR ds:[esi]
  410f08:	xor    ebx,DWORD PTR [ecx-0x3d]
  410f0b:	sbb    eax,0x7cae04a6
  410f10:	jo     0x410f13
  410f12:	imul   esi
  410f14:	jne    0x410ee0
  410f16:	push   cs
  410f17:	lock stos DWORD PTR es:[edi],eax
  410f19:	push   ss
  410f1a:	clc    
  410f1b:	or     ebx,ebp
  410f1d:	mov    ebx,0x5f522a14
  410f22:	xor    dl,BYTE PTR [esi+0x6b65171b]
  410f28:	xor    al,0xda
  410f2a:	ins    BYTE PTR es:[edi],dx
  410f2b:	(bad)  
  410f2c:	(bad)  
  410f2e:	in     al,dx
  410f2f:	fchs   
  410f31:	imul   edi,DWORD PTR [eax+0x4b],0xfbcd51e1
  410f38:	or     ecx,DWORD PTR [ebx]
  410f3a:	test   BYTE PTR [edi+0x3bbc8969],0x17
  410f41:	gs scas al,BYTE PTR es:[edi]
  410f43:	mov    ch,0xb1
  410f45:	pop    ebp
  410f46:	js     0x410ecb
  410f48:	jmp    0xdea07310
  410f4d:	call   0x6945:0xeecd7c50
  410f54:	out    0xcc,eax
  410f56:	rcr    BYTE PTR [edx],1
  410f58:	dec    ecx
  410f59:	jl     0x410fd3
  410f5b:	mov    bh,0xdb
  410f5d:	pop    ebp
  410f5e:	add    cl,ch
  410f60:	mov    BYTE PTR [esi+0x6eba3f9a],dh
  410f66:	loopne 0x410fe0
  410f68:	cmp    BYTE PTR [ecx-0x4],cl
  410f6b:	sbb    al,0x66
  410f6d:	pop    esi
  410f6e:	repnz in al,dx
  410f70:	jmp    0x410fdf
  410f72:	sbb    bl,dh
  410f74:	outs   dx,DWORD PTR ds:[esi]
  410f75:	and    edi,DWORD PTR [ebx-0x54e295c4]
  410f7b:	jb     0x410f97
  410f7d:	or     DWORD PTR [ebx],ebp
  410f7f:	xchg   esp,eax
  410f80:	outs   dx,BYTE PTR ds:[esi]
  410f81:	mov    BYTE PTR cs:[edx+0x63],dh
  410f85:	fs and eax,esi
  410f88:	lahf   
  410f89:	add    al,BYTE PTR [ecx+0x39]
  410f8c:	lock jb 0x410f43
  410f8f:	icebp  
  410f90:	dec    edi
  410f91:	addr16 retf 
  410f93:	addr16 in eax,dx
  410f95:	mov    bl,0xc4
  410f97:	inc    esp
  410f98:	das    
  410f99:	fwait
  410f9a:	and    eax,0x45ef07ad
  410f9f:	push   edi
  410fa0:	mov    ds:0xd4aef1be,al
  410fa5:	pusha  
  410fa6:	lock cmp eax,0x609b794b
  410fac:	sahf   
  410fad:	fisub  WORD PTR [edx-0x73cbd0ac]
  410fb3:	ss cmc 
  410fb5:	inc    esi
  410fb6:	jecxz  0x411036
  410fb8:	ds jp  0x410fe1
  410fbb:	(bad)  [ecx-0x2c2a50fb]
  410fc1:	les    esp,FWORD PTR [ecx-0x52f35db5]
  410fc7:	or     BYTE PTR [esi+0x61d4e337],dh
  410fcd:	lds    eax,FWORD PTR [eax-0x19e59eda]
  410fd3:	xchg   BYTE PTR [esi],bh
  410fd5:	cmp    esp,eax
  410fd7:	xor    eax,0x18e51cbc
  410fdc:	hlt    
  410fdd:	xor    al,0x9c
  410fdf:	jecxz  0x410f96
  410fe1:	add    BYTE PTR ds:0x6c785828,dh
  410fe7:	cmp    al,0x6c
  410fe9:	dec    ebp
  410fea:	jno    0x410f88
  410fec:	aas    
  410fed:	mov    cl,0xbd
  410fef:	pop    esi
  410ff0:	xor    bh,dh
  410ff2:	neg    edi
  410ff4:	jae    0x410ff1
  410ff6:	xor    al,0x35
  410ff8:	xor    al,0x23
  410ffa:	outs   dx,BYTE PTR ds:[esi]
  410ffb:	repz je 0x411006
  410ffe:	add    BYTE PTR [esi+0x44386fa3],al
  411004:	mov    ?,WORD PTR [edx+0x51]
  411007:	push   edi
  411008:	and    ecx,ecx
  41100a:	pop    esp
  41100b:	adc    ebx,eax
  41100d:	lods   al,BYTE PTR ds:[esi]
  41100e:	lods   eax,DWORD PTR ds:[esi]
  41100f:	test   eax,eax
  411011:	es aaa 
  411013:	inc    eax
  411014:	add    eax,0x9eb6f139
  411019:	adc    BYTE PTR [eax],0xdd
  41101c:	add    BYTE PTR [edi+0x38],cl
  41101f:	cmp    eax,0xce61ad5f
  411024:	ins    DWORD PTR es:[edi],dx
  411025:	rol    bh,1
  411027:	(bad)  
  411029:	cmp    eax,0xb61a3af2
  41102e:	hlt    
  41102f:	fdiv   st,st(1)
  411031:	mul    DWORD PTR [esi+edi*2]
  411034:	sbb    BYTE PTR [ecx+edx*2],cl
  411037:	sub    esi,ebp
  411039:	fistp  DWORD PTR [ebx]
  41103b:	fadd   QWORD PTR [ebx-0x112f17af]
  411041:	stos   BYTE PTR es:[edi],al
  411042:	rcl    DWORD PTR es:[di+0x7e],1
  411047:	dec    ecx
  411048:	dec    eax
  411049:	cmp    ebp,DWORD PTR [esi]
  41104b:	sub    BYTE PTR [ebx],0xe1
  41104e:	xchg   edx,eax
  41104f:	fld    TBYTE PTR [ebx]
  411051:	jle    0x411026
  411053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411054:	and    esp,DWORD PTR [ebp-0x685c3192]
  41105a:	nop
  41105b:	lahf   
  41105c:	adc    esi,DWORD PTR [ebx+edi*1]
  41105f:	outs   dx,BYTE PTR ds:[esi]
  411060:	adc    eax,0xdbd63336
  411065:	sub    eax,0x7baffb55
  41106a:	inc    esi
  41106b:	xchg   esp,eax
  41106c:	cmp    eax,0xec80a5dd
  411071:	cld    
  411072:	lock sub al,0x87
  411076:	xor    DWORD PTR [esi-0x3c],0x338ba7fa
  41107d:	retf   0xf04b
  411080:	xchg   ebp,eax
  411081:	mov    esi,?
  411083:	mov    edx,0xff05ac6a
  411088:	pusha  
  411089:	and    DWORD PTR [edi-0x21],0xffffff93
  41108d:	push   edx
  41108e:	cmp    DWORD PTR [ecx+ebp*4],eax
  411091:	push   edx
  411092:	xor    al,0x87
  411094:	or     eax,0x276c7d8d
  411099:	mov    ds:0xc52a1ff5,eax
  41109e:	daa    
  41109f:	xchg   ebp,eax
  4110a0:	out    dx,eax
  4110a1:	leave  
  4110a2:	test   al,0x48
  4110a4:	sub    DWORD PTR [edx-0x39],0x1f9a36e5
  4110ab:	mov    dh,0x61
  4110ad:	inc    ecx
  4110ae:	in     eax,dx
  4110af:	loope  0x411118
  4110b1:	jne    0x411128
  4110b3:	outs   dx,BYTE PTR ds:[esi]
  4110b4:	div    BYTE PTR [edi-0x352196e]
  4110ba:	push   ss
  4110bb:	mov    eax,0x986fbc65
  4110c0:	or     DWORD PTR [edx],edi
  4110c2:	lds    ebx,FWORD PTR ds:0xae929737
  4110c8:	arpl   WORD PTR [eax+0x6a32918d],ax
  4110ce:	inc    ebp
  4110cf:	dec    edx
  4110d0:	test   eax,0x8077bd46
  4110d5:	arpl   WORD PTR [esi-0x3e],dx
  4110d8:	shl    ch,0x9e
  4110db:	pop    ecx
  4110dc:	mov    fs,WORD PTR [esi]
  4110de:	int    0x21
  4110e0:	mov    eax,cs
  4110e2:	mov    ecx,esi
  4110e4:	sbb    cl,BYTE PTR [eax+0x5ec5d12d]
  4110ea:	shl    DWORD PTR [eax+0x4c],1
  4110ed:	dec    esp
  4110ee:	push   ebx
  4110ef:	sbb    eax,0x6a1cf034
  4110f4:	push   edi
  4110f5:	cmp    al,BYTE PTR [edx]
  4110f7:	rol    DWORD PTR [ebx-0x3933a84b],cl
  4110fd:	mov    ecx,0xdaac62aa
  411102:	sbb    al,0xf3
  411104:	div    DWORD PTR [esi-0x4d24bf44]
  41110a:	cmp    BYTE PTR [ebp-0x4d58a943],dl
  411110:	lahf   
  411111:	inc    edi
  411112:	pop    esp
  411113:	(bad)  
  411114:	cmp    ebp,esi
  411116:	adc    esi,esi
  411118:	lock sbb DWORD PTR [eax],0x29
  41111c:	rcl    BYTE PTR [ebx-0x262c069a],cl
  411122:	xchg   edx,eax
  411123:	and    al,dl
  411125:	pop    esp
  411126:	or     eax,0xc0edec4
  41112b:	mov    ds:0xd60f61a5,al
  411130:	xor    eax,DWORD PTR [ebx+0x511c0817]
  411136:	popa   
  411137:	(bad)
  41113a:	hlt    
  41113b:	dec    BYTE PTR [edi+0x616c3af6]
  411141:	adc    al,0xc3
  411143:	push   eax
  411144:	sub    BYTE PTR [eax+edx*1],al
  411147:	adc    al,0xad
  411149:	fsub   st(1),st
  41114b:	xchg   edi,eax
  41114c:	adc    dl,bl
  41114e:	mov    cs,WORD PTR [edx]
  411150:	pusha  
  411151:	shl    BYTE PTR [eax-0x55dc622c],1
  411157:	dec    edi
  411158:	mov    ds:0xa177510d,eax
  41115d:	inc    ebp
  41115e:	js     0x4111aa
  411160:	sbb    edi,DWORD PTR [esi]
  411162:	adc    eax,0x98b181bc
  411167:	in     eax,0x6f
  411169:	jns    0x411162
  41116b:	mov    BYTE PTR [ebx+edx*8-0x74],dl
  41116f:	mov    eax,ds:0xa4f80e7a
  411174:	daa    
  411175:	inc    esp
  411176:	mov    DWORD PTR [ebp+0x5cab9900],esi
  41117c:	inc    ebx
  41117d:	pop    ecx
  41117e:	call   0xe759f7c0
  411183:	xchg   ebx,eax
  411184:	dec    esi
  411185:	out    dx,al
  411186:	stos   DWORD PTR es:[edi],eax
  411187:	xor    al,0xdf
  411189:	mov    ds:0x5a45f2df,eax
  41118e:	push   0x4c48a4b5
  411193:	dec    edi
  411194:	push   esp
  411195:	test   dl,bl
  411197:	dec    ebp
  411198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411199:	cwde   
  41119a:	xchg   ecx,eax
  41119b:	mov    cl,0x1d
  41119d:	out    0x44,al
  41119f:	inc    ebx
  4111a0:	loope  0x4111e2
  4111a2:	and    edi,edx
  4111a4:	sbb    edi,eax
  4111a6:	push   edx
  4111a7:	mov    edi,0xccc02372
  4111ac:	dec    esi
  4111ad:	pushf  
  4111ae:	mov    esp,0x2573518c
  4111b3:	xchg   ebx,eax
  4111b4:	adc    bl,BYTE PTR ds:0xad147fe9
  4111ba:	fnstsw WORD PTR [edx-0x536d1547]
  4111c0:	mov    bl,0xa7
  4111c2:	cdq    
  4111c3:	push   edi
  4111c4:	sar    DWORD PTR [edx+0xd92462e],1
  4111ca:	das    
  4111cb:	jae    0x4111c1
  4111cd:	loope  0x411242
  4111cf:	jle    0x4111d5
  4111d1:	out    dx,al
  4111d2:	dec    BYTE PTR [eax-0x6d]
  4111d5:	icebp  
  4111d6:	arpl   si,si
  4111d8:	mov    edi,0xbb3cabba
  4111dd:	push   ds
  4111de:	and    bh,BYTE PTR [ebx+edx*4]
  4111e1:	imul   ebx,ecx,0xffffffe3
  4111e4:	pop    esp
  4111e5:	xchg   edx,eax
  4111e6:	arpl   WORD PTR [ecx],sp
  4111e8:	push   0x55c73cbb
  4111ed:	jg     0x411259
  4111ef:	adc    ebx,edi
  4111f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111f2:	or     al,0x59
  4111f4:	cs std 
  4111f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f7:	popa   
  4111f8:	data16 add BYTE PTR [edx],bl
  4111fb:	in     al,0xf8
  4111fd:	mov    ah,0xe6
  4111ff:	add    DWORD PTR [esi],ebx
  411201:	popa   
  411202:	mov    al,ds:0xbc043094
  411207:	inc    esp
  411208:	add    DWORD PTR [eax],0xffffff9c
  41120b:	retf   
  41120c:	pop    ebp
  41120d:	sub    eax,0xee622af3
  411212:	(bad)  
  411213:	pop    ebx
  411214:	mov    esi,DWORD PTR [eax+edx*2]
  411217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411218:	sub    DWORD PTR [esi+0xa4c361b],esi
  41121e:	dec    edx
  41121f:	inc    BYTE PTR [ebp+edx*2-0x16383afd]
  411226:	sbb    DWORD PTR [eax-0x3ce6a455],0xffffffec
  41122d:	push   ebp
  41122e:	inc    ebx
  41122f:	test   DWORD PTR [ebp+0x34],0xf1cf3ab2
  411236:	jge    0x4111e6
  411238:	mov    al,ds:0xeae465e6
  41123d:	xchg   edx,eax
  41123e:	mov    bl,0x39
  411240:	jge    0x4112c0
  411242:	pop    edx
  411243:	push   0x5c8d1fbe
  411248:	sub    esp,DWORD PTR [ebp-0x4df140e1]
  41124e:	div    BYTE PTR [eax-0x26]
  411251:	mov    eax,eax
  411253:	fcom   DWORD PTR [ecx+ebx*2-0x58adb2b4]
  41125a:	clc    
  41125b:	dec    esp
  41125c:	pusha  
  41125d:	pop    es
  41125e:	sbb    ch,BYTE PTR [ebx+0x30b64b82]
  411264:	mov    esp,0x10e73244
  411269:	pop    bp
  41126b:	sub    ebp,DWORD PTR [ecx-0x3c]
  41126e:	jp     0x4112a7
  411270:	push   0xffffffb0
  411272:	xor    al,0x42
  411274:	mov    ds:0xbc901d3f,al
  411279:	and    al,0xc9
  41127b:	scas   al,BYTE PTR es:[di]
  41127d:	dec    esi
  41127e:	pop    eax
  41127f:	mov    esp,0xf530ca8d
  411284:	adc    BYTE PTR [edx-0x38],cl
  411287:	mov    bh,0xcd
  411289:	xlat   BYTE PTR ds:[ebx]
  41128a:	mov    al,ds:0xe801fde1
  41128f:	pop    es
  411290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411291:	mov    WORD PTR [eax-0x3cca6d7c],cs
  411297:	int3   
  411298:	sar    BYTE PTR [ebx],1
  41129a:	std    
  41129b:	mov    DWORD PTR [ebx+0x12],esp
  41129e:	out    dx,eax
  41129f:	dec    eax
  4112a0:	jge    0x41131a
  4112a2:	mov    cl,0x5b
  4112a4:	arpl   dx,cx
  4112a6:	or     eax,DWORD PTR [edx+0x3e]
  4112a9:	jmp    0xea16:0xb2c0500b
  4112b0:	clc    
  4112b1:	out    0x23,al
  4112b3:	cmp    BYTE PTR [edx],bh
  4112b5:	stos   DWORD PTR es:[edi],eax
  4112b6:	or     dh,BYTE PTR [ebp+0x4f490153]
  4112bc:	and    al,0xed
  4112be:	pop    eax
  4112bf:	pop    ebx
  4112c0:	or     BYTE PTR [edi-0x33],ch
  4112c3:	mov    ah,BYTE PTR [esp+edi*4+0x635b8678]
  4112ca:	sbb    bh,ch
  4112cc:	loope  0x41124e
  4112ce:	cmp    al,0x35
  4112d0:	test   dh,al
  4112d2:	pop    es
  4112d3:	sbb    eax,DWORD PTR [ebp+0x5d84b373]
  4112d9:	or     BYTE PTR ds:0xad5a7cb9,0xa6
  4112e0:	retf   
  4112e1:	stos   DWORD PTR es:[edi],eax
  4112e2:	cmp    al,0x62
  4112e4:	xor    BYTE PTR ds:[edi+0x11f541f3],bl
  4112eb:	mov    ds:0xe17a40e,al
  4112f0:	imul   ecx,DWORD PTR [edx+0x38],0x838a2fc7
  4112f7:	lods   eax,DWORD PTR ds:[esi]
  4112f8:	les    eax,FWORD PTR [eax+0x24]
  4112fb:	repnz pop ss
  4112fd:	int3   
  4112fe:	data16 (bad) 
  411300:	sub    DWORD PTR [edi+0x689ec83b],0x18
  411307:	jmp    0x66dfb798
  41130c:	mov    ah,0x3b
  41130e:	sub    eax,0x98a663e7
  411313:	ret    0x5da8
  411316:	cld    
  411317:	mov    bl,0xcc
  411319:	add    dh,bl
  41131b:	mov    ds:0x926140ce,al
  411320:	xchg   esp,eax
  411321:	jle    0x4112c1
  411323:	jmp    0x4113a2
  411325:	call   0xb77b0c38
  41132a:	and    eax,0xabb8013
  41132f:	cmp    BYTE PTR [edx-0x11],ch
  411332:	dec    ecx
  411333:	imul   esp,ebx,0xffffffc0
  411336:	or     DWORD PTR [eax+eax*1-0x6f9a8dbd],ecx
  41133d:	sub    eax,0xd5f273cb
  411342:	push   es
  411343:	push   ds
  411344:	mov    ds:0x855a025f,eax
  411349:	clc    
  41134a:	icebp  
  41134b:	ins    BYTE PTR es:[edi],dx
  41134c:	arpl   WORD PTR [ecx],sp
  41134e:	push   edi
  41134f:	out    0xc1,eax
  411351:	push   0x71
  411353:	stos   DWORD PTR es:[edi],eax
  411354:	mov    edi,0x277f5eef
  411359:	add    DWORD PTR [ecx+0x66],edx
  41135c:	xchg   esp,eax
  41135d:	aas    
  41135e:	popa   
  41135f:	out    dx,al
  411360:	inc    ebx
  411361:	paddb  mm7,QWORD PTR [ecx-0x5cf3ab0e]
  411368:	or     al,0x4b
  41136a:	repz mov dl,0x32
  41136d:	enter  0xe432,0x5
  411371:	sbb    al,0x80
  411373:	or     BYTE PTR [edi],cl
  411375:	loopne 0x4113bf
  411377:	pusha  
  411378:	loop   0x411335
  41137a:	inc    esi
  41137b:	js     0x4113a4
  41137d:	add    al,0xfb
  41137f:	and    DWORD PTR [edx+0x77],ebx
  411382:	arpl   WORD PTR [eax],si
  411384:	inc    edi
  411385:	fmul   st(2),st
  411387:	addr16 push ebp
  411389:	clc    
  41138a:	jne    0x41138f
  41138c:	rcl    BYTE PTR [ebx-0x26ad7b96],1
  411392:	fwait
  411393:	outs   dx,DWORD PTR ds:[esi]
  411394:	imul   esp,DWORD PTR [ecx],0xffffffb9
  411397:	and    eax,0xa00a3e96
  41139c:	(bad)  
  41139d:	mov    ebp,0xbabbc494
  4113a2:	or     BYTE PTR [edi+esi*1+0x4d],bl
  4113a6:	fwait
  4113a7:	inc    esi
  4113a8:	mov    al,0xa1
  4113aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ab:	mov    esp,0xdae4c2e2
  4113b0:	jg     0x41142f
  4113b2:	dec    edi
  4113b3:	sbb    DWORD PTR [ebx-0x62a42a3e],eax
  4113b9:	ins    DWORD PTR es:[edi],dx
  4113ba:	pop    ebx
  4113bb:	adc    ebp,ebp
  4113bd:	lahf   
  4113be:	fistp  DWORD PTR [ecx+0x7b]
  4113c1:	lea    edi,[ebp+0x7d]
  4113c4:	mov    al,ds:0x7b59c105
  4113c9:	xchg   esp,eax
  4113ca:	psrlq  mm4,QWORD PTR [edi+ecx*2-0x6e]
  4113cf:	stc    
  4113d0:	mov    ecx,fs
  4113d2:	addr16 inc ecx
  4113d4:	retf   
  4113d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d6:	aam    0x54
  4113d8:	shl    DWORD PTR [esi+0x68],cl
  4113db:	int3   
  4113dc:	mov    esp,0x797e3b34
  4113e1:	mov    bh,0xd1
  4113e3:	or     BYTE PTR [ecx+0x52],cl
  4113e6:	sahf   
  4113e7:	scas   eax,DWORD PTR es:[edi]
  4113e8:	data16 (bad) 
  4113ea:	cs pop eax
  4113ec:	ds dec ebp
  4113ee:	push   ecx
  4113ef:	mov    ds,WORD PTR [edi+0x6b]
  4113f2:	imul   ebx,DWORD PTR [eax-0x260fbded],0xffffff8c
  4113f9:	cmp    BYTE PTR [ebx],dh
  4113fb:	lods   eax,DWORD PTR ds:[esi]
  4113fc:	push   0x27
  4113fe:	mov    eax,ds:0x6d0b74fc
  411403:	ret    0xf704
  411406:	xor    eax,DWORD PTR [esi]
  411408:	mov    al,ds:0x441d0b76
  41140d:	mov    WORD PTR [edx-0xfc3e2da],ss
  411413:	and    DWORD PTR [eax],ecx
  411415:	int    0x3f
  411417:	fistp  WORD PTR [esi]
  411419:	adc    DWORD PTR [edi-0x38f58139],esi
  41141f:	leave  
  411420:	adc    al,0xaf
  411422:	mov    ds:0x5f003525,eax
  411427:	cs add dh,ah
  41142a:	inc    esp
  41142b:	push   0x3c
  41142d:	sub    ah,BYTE PTR [edx+0xa70ce66]
  411433:	dec    ebp
  411434:	pop    esp
  411435:	sub    DWORD PTR [esi+0x59bef72b],ecx
  41143b:	pop    ecx
  41143c:	mov    BYTE PTR [ebx+esi*2],bh
  41143f:	xchg   esi,eax
  411440:	rcr    BYTE PTR [edi-0x68f4c4a2],1
  411446:	pop    ecx
  411447:	in     al,0xc9
  411449:	imul   edx,DWORD PTR [edi-0x3e3ee751],0x209420d5
  411453:	push   0xc330cd41
  411458:	sbb    ecx,0x42fa5016
  41145e:	(bad)  
  41145f:	iret   
  411460:	jp     0x41147c
  411462:	inc    ebx
  411463:	sub    al,0x98
  411465:	inc    esp
  411466:	xchg   esp,eax
  411467:	das    
  411468:	addr16 in al,0x1
  41146b:	enter  0xd52c,0xbc
  41146f:	mov    ebp,DWORD PTR [ecx-0x13]
  411472:	pop    eax
  411473:	dec    ebp
  411474:	ins    DWORD PTR es:[edi],dx
  411475:	or     al,0xb0
  411477:	mov    bh,0x91
  411479:	mov    ch,0xee
  41147b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147c:	jg     0x411473
  41147e:	aaa    
  41147f:	les    esp,FWORD PTR [edx+0xe]
  411482:	or     eax,DWORD PTR [eax+0x64]
  411485:	mov    ds:0x4fd7f3fc,eax
  41148a:	dec    edi
  41148b:	add    dh,BYTE PTR [ebx]
  41148d:	(bad)  
  41148e:	dec    ebx
  41148f:	xlat   BYTE PTR ds:[ebx]
  411490:	lea    ebp,[ecx+0x43968796]
  411496:	push   edi
  411497:	dec    edi
  411498:	test   BYTE PTR [eax],dh
  41149a:	das    
  41149b:	adc    BYTE PTR [edx+0x4efa7d6a],bh
  4114a1:	jb     0x411431
  4114a3:	call   0x27c3d040
  4114a8:	inc    eax
  4114a9:	test   eax,0xa9409b5
  4114ae:	xchg   BYTE PTR [ebp+0x6f912d0b],bh
  4114b4:	mov    bh,0xc7
  4114b6:	pushf  
  4114b7:	push   ss
  4114b8:	retf   
  4114b9:	add    BYTE PTR [ecx-0x7da8ca9c],0x32
  4114c0:	mov    ebp,0xda3ab14b
  4114c5:	ja     0x4114d2
  4114c7:	and    BYTE PTR [esi+ebx*1],0x86
  4114cb:	outs   dx,DWORD PTR ds:[esi]
  4114cc:	aas    
  4114cd:	fadd   DWORD PTR fs:[eax+0x36]
  4114d1:	aaa    
  4114d2:	inc    edx
  4114d3:	mov    bh,0x42
  4114d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d6:	gs push edx
  4114d8:	adc    bh,dh
  4114da:	mov    al,ds:0x2547eec2
  4114df:	hlt    
  4114e0:	int    0xa8
  4114e2:	mov    ds:0x14322397,al
  4114e7:	pusha  
  4114e8:	fcmovbe st,st(4)
  4114ea:	iret   
  4114eb:	adc    al,BYTE PTR [edi]
  4114ed:	jne    0x4114e7
  4114ef:	push   esi
  4114f0:	popa   
  4114f1:	out    0x27,eax
  4114f3:	push   esi
  4114f4:	pop    esp
  4114f5:	lock mov cl,0x39
  4114f8:	inc    eax
  4114f9:	mov    BYTE PTR [eax-0x5a000f2d],0x49
  411500:	cvtpi2ps xmm4,QWORD PTR [eax]
  411503:	aaa    
  411504:	inc    ebx
  411505:	lahf   
  411506:	mov    DWORD PTR [edi-0x4aff39d8],0x3b50a504
  411510:	in     al,0xe9
  411512:	arpl   WORD PTR [esi+eax*8],si
  411515:	pusha  
  411516:	popf   
  411517:	mov    BYTE PTR [eax],ah
  411519:	not    DWORD PTR [ebp+0x47]
  41151c:	and    BYTE PTR [edi+esi*2+0x5c],ah
  411520:	xor    al,0x33
  411522:	and    al,0xa8
  411524:	mov    ebx,0x777fc64c
  411529:	pop    es
  41152a:	mov    ecx,0xc1a53ae1
  41152f:	scas   eax,DWORD PTR es:[edi]
  411530:	stc    
  411531:	loope  0x4114dd
  411533:	pop    ebp
  411534:	push   ecx
  411535:	loop   0x41157c
  411537:	int3   
  411538:	ss pop esi
  41153a:	into   
  41153b:	or     eax,0xa3b5fed6
  411540:	mov    eax,0x550a99e9
  411545:	mov    ?,WORD PTR ds:0xa27c89f9
  41154b:	cwde   
  41154c:	cmp    dl,dh
  41154e:	int3   
  41154f:	push   ebx
  411550:	out    0xb9,al
  411552:	lea    ebp,[edx-0x4ec95ad4]
  411558:	push   eax
  411559:	dec    edi
  41155a:	push   edx
  41155b:	add    BYTE PTR [edx-0x2d],ah
  41155e:	es leave 
  411560:	push   edi
  411561:	out    0x82,al
  411563:	imul   ebp,DWORD PTR [ebx+0x7a940c71],0x26a95e
  41156d:	popf   
  41156e:	xchg   edi,eax
  41156f:	xchg   esi,eax
  411570:	fcmove st,st(0)
  411572:	xor    DWORD PTR ds:0xea2d4f32,esp
  411578:	adc    BYTE PTR [ebx+0x696b238],ah
  41157e:	sbb    al,0x2d
  411580:	mov    ds:0x45665a7a,al
  411585:	loopne 0x411535
  411587:	cmp    ah,dl
  411589:	ss dec ebx
  41158b:	mov    edx,0x886af3
  411590:	inc    eax
  411591:	lods   al,BYTE PTR ds:[esi]
  411592:	xchg   esi,eax
  411593:	jno    0x4115e0
  411595:	jp     0x41160a
  411597:	stc    
  411598:	add    DWORD PTR [ebx+ebx*4-0x22d9f1de],esi
  41159f:	xchg   ebx,eax
  4115a0:	mov    edi,0xc85d9ca3
  4115a5:	scas   eax,DWORD PTR es:[edi]
  4115a6:	or     al,0x7f
  4115a8:	leave  
  4115a9:	mov    ebx,0x76f2025a
  4115ae:	bound  ecx,QWORD PTR [esi+0x5]
  4115b1:	or     dh,BYTE PTR [ebp-0x4fddede3]
  4115b7:	sub    esp,DWORD PTR [edx]
  4115b9:	pop    edx
  4115ba:	int3   
  4115bb:	mov    ah,0x4d
  4115bd:	mov    bh,0x40
  4115bf:	ret    
  4115c0:	(bad)  
  4115c2:	mov    dl,0x96
  4115c4:	cwde   
  4115c5:	mov    edx,0xdd7151af
  4115ca:	dec    ecx
  4115cb:	dec    edi
  4115cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115cd:	push   eax
  4115ce:	add    eax,0x809453f6
  4115d3:	jo     0x4115e9
  4115d5:	adc    al,0x65
  4115d7:	inc    ebx
  4115d8:	pop    ss
  4115d9:	daa    
  4115da:	push   0xc356fa36
  4115df:	sbb    BYTE PTR [ecx+0x23383298],dl
  4115e5:	mov    ebp,0x883d5cab
  4115ea:	retf   
  4115eb:	mov    al,ds:0xc1798893
  4115f0:	dec    DWORD PTR [ebx+0x69]
  4115f3:	xor    al,0xc4
  4115f5:	aad    0x45
  4115f7:	jo     0x411610
  4115f9:	xor    al,0x61
  4115fb:	icebp  
  4115fc:	jno    0x411609
  4115fe:	out    0xcd,eax
  411600:	push   esi
  411601:	mov    edi,0x3081b654
  411606:	loope  0x41167f
  411608:	shl    BYTE PTR [ecx+0x58],cl
  41160b:	adc    al,BYTE PTR [ebx+0x2f]
  41160e:	mov    ch,0x23
  411610:	sub    ecx,edx
  411612:	cmp    al,0xa3
  411614:	mov    bh,0xf9
  411616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411617:	retf   0x64e5
  41161a:	jbe    0x41165e
  41161c:	or     eax,0x81c668e3
  411621:	paddsw mm5,QWORD PTR [ecx-0x1e]
  411625:	ret    0xf011
  411628:	repnz and ah,0x68
  41162c:	stos   DWORD PTR es:[edi],eax
  41162d:	scas   eax,DWORD PTR es:[edi]
  41162e:	mov    ecx,0x8357584a
  411633:	(bad)  
  411635:	ins    DWORD PTR es:[edi],dx
  411636:	jg     0x411667
  411638:	sti    
  411639:	sbb    BYTE PTR [edx],al
  41163b:	or     bl,dh
  41163d:	xchg   ebp,eax
  41163e:	push   0xffffffc1
  411640:	out    0x54,eax
  411642:	add    BYTE PTR ds:0xc44dec42,ch
  411648:	dec    ebx
  411649:	icebp  
  41164a:	push   ebp
  41164b:	nop
  41164c:	jno    0x411665
  41164e:	push   ebx
  41164f:	mov    al,BYTE PTR [ecx-0x43079778]
  411655:	or     eax,0xf5e8fe2e
  41165a:	jp     0x411612
  41165c:	fs ja  0x41162e
  41165f:	add    edi,DWORD PTR [edi+0x4de2a1e3]
  411665:	xor    dh,BYTE PTR [ecx-0x48]
  411668:	jle    0x41162a
  41166a:	dec    ecx
  41166b:	or     al,0x88
  41166d:	retf   0x1e26
  411670:	inc    ecx
  411671:	and    ebx,0x4c60dc7f
  411677:	dec    eax
  411678:	mov    ebx,0x428dba3a
  41167d:	jno    0x41163a
  41167f:	cmp    DWORD PTR [ecx+0x512710c5],eax
  411685:	inc    ecx
  411686:	dec    esp
  411687:	shl    DWORD PTR [edi+0x2f],1
  41168a:	pop    ecx
  41168b:	pop    esp
  41168c:	mov    WORD PTR [edx+0x56],ss
  41168f:	call   0x2572783e
  411694:	fcomp  DWORD PTR [eax-0x15cbbba9]
  41169a:	mov    edx,0xc4fa95ab
  41169f:	out    dx,eax
  4116a0:	aaa    
  4116a1:	push   0x3e
  4116a3:	fist   WORD PTR [ebx]
  4116a5:	rcr    DWORD PTR [eax],cl
  4116a7:	xchg   edi,eax
  4116a8:	(bad)  
  4116a9:	lods   eax,DWORD PTR ds:[esi]
  4116aa:	xchg   edx,eax
  4116ab:	les    esp,FWORD PTR [edi]
  4116ad:	mov    esi,0xfc995dca
  4116b2:	xor    bl,BYTE PTR [esi-0x34947272]
  4116b8:	cmp    ebx,DWORD PTR [ebp+0x3fb37f74]
  4116be:	aad    0xf9
  4116c0:	in     eax,0xcb
  4116c2:	sub    al,0x9f
  4116c4:	sbb    ah,BYTE PTR [eax]
  4116c6:	lock adc BYTE PTR [edx],ah
  4116c9:	dec    esp
  4116ca:	scas   eax,DWORD PTR es:[edi]
  4116cb:	fsubp  st(6),st
  4116cd:	or     ch,al
  4116cf:	adc    al,BYTE PTR [ebp-0x9]
  4116d2:	pop    bx
  4116d4:	pushf  
  4116d5:	adc    eax,0xefe943b6
  4116da:	mov    WORD PTR [edx+0xbb6530],fs
  4116e0:	test   esi,ebp
  4116e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e3:	jbe    0x411745
  4116e5:	sub    al,0x8
  4116e7:	ins    BYTE PTR es:[edi],dx
  4116e8:	call   0x740700e6
  4116ed:	mov    ah,0xcb
  4116ef:	jg     0x41170a
  4116f1:	lds    ebx,FWORD PTR [ecx-0x22df7262]
  4116f7:	mov    eax,0xbb6da139
  4116fc:	or     ebx,esi
  4116fe:	scas   al,BYTE PTR es:[edi]
  4116ff:	stc    
  411700:	scas   eax,DWORD PTR es:[edi]
  411701:	mov    BYTE PTR [edx-0x28cb5837],0x32
  411708:	pop    ds
  411709:	xchg   ebp,eax
  41170a:	jnp    0x411700
  41170c:	jmp    0x4116d8
  41170e:	shl    BYTE PTR [edx-0x3666ef68],1
  411714:	ss shl dh,cl
  411717:	out    dx,al
  411718:	out    0xa7,eax
  41171a:	push   ebx
  41171b:	test   al,0x14
  41171d:	mov    bh,0xe4
  41171f:	je     0x41173e
  411721:	fwait
  411722:	xor    cl,dl
  411724:	mov    ecx,cs
  411726:	push   DWORD PTR [ebx+esi*1+0x6f]
  41172a:	mov    ebx,0xdcb91d03
  41172f:	mov    BYTE PTR [esi-0x4d652e30],bl
  411735:	lahf   
  411736:	ins    BYTE PTR es:[edi],dx
  411737:	add    edi,DWORD PTR fs:[ecx+0x62]
  41173b:	xchg   ecx,ebp
  41173d:	and    al,0x4e
  41173f:	push   ebp
  411740:	sub    al,0xd1
  411742:	in     al,dx
  411743:	ret    
  411744:	shl    DWORD PTR [esi+0x1a],0xe6
  411748:	push   ebp
  411749:	jmp    0xdfdccb29
  41174e:	inc    ebp
  41174f:	mov    WORD PTR [ebx],fs
  411751:	dec    BYTE PTR [eax-0x48f7008b]
  411757:	div    DWORD PTR [ebx-0x7428bc1f]
  41175d:	daa    
  41175e:	mov    bl,BYTE PTR [ebp-0x69]
  411761:	inc    ecx
  411762:	adc    edi,DWORD PTR [edi]
  411764:	fist   DWORD PTR [edx-0x2b]
  411767:	adc    ah,BYTE PTR [ebx-0x4bd6c5bc]
  41176d:	bound  ebx,QWORD PTR [esi+0x55]
  411770:	and    DWORD PTR [edi],esp
  411772:	inc    ebp
  411773:	ret    
  411774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411775:	mov    dh,0x3c
  411777:	add    al,0x6b
  411779:	jnp    0x4117e4
  41177b:	or     BYTE PTR [ebx+ebp*4-0x2a48eeb7],dh
  411782:	cdq    
  411783:	push   ecx
  411784:	icebp  
  411785:	jmp    0xd48d8247
  41178a:	std    
  41178b:	test   DWORD PTR [eax-0x266c68a],edi
  411791:	mov    esp,0x362e0f99
  411796:	sbb    eax,0xf8693f07
  41179b:	imul   esp,DWORD PTR [esi-0x48],0xffffffff
  41179f:	lods   al,BYTE PTR ds:[esi]
  4117a0:	adc    al,0xcf
  4117a2:	inc    eax
  4117a3:	fist   DWORD PTR [edx]
  4117a5:	xor    al,0x92
  4117a7:	movq   mm2,QWORD PTR [edi+0x6]
  4117ab:	add    eax,0xe3418c49
  4117b0:	jbe    0x411806
  4117b2:	mov    BYTE PTR [edx],0x1c
  4117b5:	push   0xf9d9e70d
  4117ba:	sub    DWORD PTR [eax],edi
  4117bc:	mov    eax,0x6ddc6631
  4117c1:	push   ecx
  4117c2:	pop    ecx
  4117c3:	and    edx,DWORD PTR [ecx-0x38d03e7]
  4117c9:	or     DWORD PTR [edx+ecx*8+0x7b],0x1baebc7
  4117d1:	fdivr  DWORD PTR [ebp-0x59]
  4117d4:	mov    dh,BYTE PTR ds:0xd0384805
  4117da:	repz loop 0x4117e2
  4117dd:	and    cl,BYTE PTR [eax+ebp*8-0x38081a0f]
  4117e4:	iret   
  4117e5:	jmp    0x4117d1
  4117e7:	std    
  4117e8:	sar    DWORD PTR [ebx-0x78],cl
  4117eb:	cmc    
  4117ec:	pop    ds
  4117ed:	sbb    bh,BYTE PTR [ecx]
  4117ef:	imul   ebx,DWORD PTR [ecx+ebx*8],0xffffffb9
  4117f3:	fild   DWORD PTR [ebx]
  4117f5:	mov    BYTE PTR [ebx-0x49310f96],bl
  4117fb:	mov    ?,WORD PTR [edx-0x38]
  4117fe:	dec    edx
  4117ff:	bound  ebx,QWORD PTR [edi+0x54]
  411802:	loope  0x4117a7
  411804:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411806:	ins    BYTE PTR es:[edi],dx
  411807:	pop    ecx
  411808:	sti    
  411809:	cdq    
  41180a:	dec    esp
  41180b:	mov    ebx,0x14bc2406
  411810:	sti    
  411811:	(bad)  
  411812:	pop    edi
  411813:	dec    eax
  411814:	cli    
  411815:	or     DWORD PTR [edx+0x18c9eca0],esi
  41181b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41181c:	aam    0x13
  41181e:	mov    cl,BYTE PTR [esi]
  411820:	loop   0x4117cb
  411822:	fchs   
  411824:	sub    al,0x55
  411826:	cs scas al,BYTE PTR es:[edi]
  411828:	adc    eax,0xe250230c
  41182d:	xchg   edx,eax
  41182e:	sbb    ebp,edi
  411830:	stos   BYTE PTR es:[edi],al
  411831:	mov    ebx,0x12f6bb48
  411836:	shr    BYTE PTR [ecx+ebp*4],1
  411839:	push   es
  41183a:	xor    BYTE PTR [ebx+ebx*4],bl
  41183d:	push   cs
  41183e:	nop
  41183f:	sbb    bh,dh
  411841:	mov    esp,0x4f46efc0
  411846:	jle    0x4117d0
  411848:	cwde   
  411849:	stos   BYTE PTR es:[edi],al
  41184a:	lock mov esp,0x5ada34f4
  411850:	bound  ebx,QWORD PTR [esi+ecx*1+0x49169cf8]
  411857:	or     DWORD PTR [ebx-0x1f],esp
  41185a:	pop    esi
  41185b:	sti    
  41185c:	dec    esi
  41185d:	xor    esi,DWORD PTR es:[edx+esi*4]
  411861:	shr    ebx,0x10
  411864:	scas   al,BYTE PTR es:[edi]
  411865:	ss retf 0x42a1
  411869:	loopne 0x411884
  41186b:	js     0x4117f3
  41186d:	ja     0x41180d
  41186f:	dec    ebx
  411870:	jmp    0x411826
  411872:	test   dl,bh
  411874:	or     edi,esi
  411876:	hlt    
  411877:	jns    0x4118db
  411879:	xor    BYTE PTR [edx+0x66b2cc],bl
  41187f:	arpl   WORD PTR [ebp-0x37a21cc3],sp
  411885:	fcmovu st,st(0)
  411887:	jnp    0x4118cb
  411889:	and    ebp,esi
  41188b:	and    ebp,0xffffffe0
  41188e:	xor    al,0xd9
  411890:	jno    0x411825
  411892:	add    edi,DWORD PTR [edi+0x749e50a2]
  411898:	cmp    al,dh
  41189a:	jge    0x411900
  41189c:	xor    al,0x50
  41189e:	mov    al,0x4b
  4118a0:	ds jmp 0x411870
  4118a3:	rol    BYTE PTR [edi+0x65],cl
  4118a6:	pop    esi
  4118a7:	mov    ebx,0x5b57d5a8
  4118ac:	je     0x411909
  4118ae:	adc    DWORD PTR [edx+0x1a4864e3],ebx
  4118b4:	fsub   QWORD PTR [edi-0x40]
  4118b7:	ins    DWORD PTR es:[edi],dx
  4118b8:	mov    WORD PTR [eax+0x13cc6391],es
  4118be:	hlt    
  4118bf:	(bad)  
  4118c0:	(bad)  
  4118c1:	out    0x67,eax
  4118c3:	mov    WORD PTR [ebx-0xa],fs
  4118c6:	push   esp
  4118c7:	nop
  4118c8:	mov    ah,0x58
  4118ca:	pop    ds
  4118cb:	mov    edx,0x74c3e0da
  4118d0:	push   ebx
  4118d1:	(bad)  
  4118d2:	pusha  
  4118d3:	dec    esp
  4118d4:	jno    0x4118d8
  4118d6:	test   BYTE PTR [esi],dh
  4118d8:	aaa    
  4118d9:	sbb    DWORD PTR [ebx+ebp*2+0x6523a5bf],0x25
  4118e1:	push   ebp
  4118e2:	jp     0x411897
  4118e4:	int    0x4d
  4118e6:	xchg   edx,eax
  4118e7:	imul   esi,DWORD PTR [esp+ebp*1+0x602d41ef],0x3f
  4118ef:	xor    eax,0x8915a313
  4118f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f5:	fyl2x  
  4118f7:	xor    al,BYTE PTR [edi-0x11c4d7f2]
  4118fd:	xchg   ebx,eax
  4118fe:	jl     0x411897
  411900:	gs or  eax,0x52c598b4
  411906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411907:	mov    ds:0x246581c9,eax
  41190c:	add    esp,eax
  41190e:	rcr    BYTE PTR [esi],0x1a
  411911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411912:	shl    cl,cl
  411914:	xlat   BYTE PTR ds:[ebx]
  411915:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411917:	in     al,dx
  411918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411919:	ins    DWORD PTR es:[edi],dx
  41191a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41191b:	sub    eax,0xe1abc0b4
  411920:	dec    ecx
  411921:	xor    BYTE PTR ds:0x12bf5dab,ah
  411927:	adc    eax,0x9f5f1703
  41192c:	test   al,0xb0
  41192e:	pop    ebx
  41192f:	xor    DWORD PTR [edx-0x4],edx
  411932:	or     al,0xeb
  411934:	xor    BYTE PTR [eax],0x66
  411937:	push   ds
  411938:	push   ss
  411939:	idiv   BYTE PTR [edi+0x7b705523]
  41193f:	mov    esi,DWORD PTR [ebx]
  411941:	pop    ebp
  411942:	out    dx,eax
  411943:	dec    ecx
  411944:	sbb    ch,BYTE PTR [eax+0x3c3b49b8]
  41194a:	sbb    BYTE PTR [ebx-0x6da349e3],bh
  411950:	or     ecx,DWORD PTR [edx-0x63]
  411953:	inc    ebp
  411954:	dec    esp
  411955:	iret   
  411956:	fstp   st(3)
  411958:	jl     0x411935
  41195a:	add    eax,0xb380f445
  41195f:	mov    ah,BYTE PTR [ecx]
  411961:	mov    ah,0x9
  411963:	dec    esp
  411964:	push   ss
  411965:	pop    DWORD PTR [esi-0x4a]
  411968:	xlat   BYTE PTR ds:[ebx]
  411969:	push   edx
  41196a:	repnz bswap edi
  41196d:	(bad)  [edx]
  41196f:	inc    esi
  411970:	pop    eax
  411971:	pop    edx
  411972:	mov    dl,0x81
  411974:	lock es leave 
  411977:	jno    0x411961
  411979:	cli    
  41197a:	int3   
  41197b:	loop   0x4119c2
  41197d:	mov    cl,0x23
  41197f:	inc    eax
  411980:	das    
  411981:	mov    eax,0x46131f15
  411986:	scas   al,BYTE PTR es:[edi]
  411987:	test   eax,0xf584b1a
  41198c:	mov    edx,0xc495216f
  411991:	lods   al,BYTE PTR ds:[esi]
  411992:	dec    eax
  411993:	dec    edx
  411994:	lods   al,BYTE PTR ds:[esi]
  411995:	add    BYTE PTR [esi-0x7d],ch
  411998:	mov    ebp,0xd5d365ce
  41199d:	out    0xf4,eax
  41199f:	add    ah,al
  4119a1:	ret    
  4119a2:	adc    eax,0x7dd11a32
  4119a7:	xchg   edi,eax
  4119a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a9:	xor    DWORD PTR [ebx+eiz*2-0xd],esi
  4119ad:	cmp    bl,BYTE PTR [eax-0x3829827]
  4119b3:	mov    ebp,0x8c55eac9
  4119b8:	fld    QWORD PTR [eax+0x76]
  4119bb:	xchg   esi,edi
  4119bd:	inc    bl
  4119bf:	bound  esp,QWORD PTR [ecx-0xc]
  4119c2:	sub    eax,0xb5a692a9
  4119c7:	sbb    ah,cl
  4119c9:	ret    0x469b
  4119cc:	add    BYTE PTR [edx],ch
  4119ce:	cmp    eax,0x33f81047
  4119d3:	loope  0x411a27
  4119d5:	push   edi
  4119d6:	in     al,0xfa
  4119d8:	adc    dl,BYTE PTR [eax-0x8]
  4119db:	xlat   BYTE PTR ds:[ebx]
  4119dc:	and    esi,DWORD PTR [edi-0x120f3ed0]
  4119e2:	les    esp,FWORD PTR [eax]
  4119e4:	add    esp,DWORD PTR [esp+0x1]
  4119e8:	call   0xc06c:0x3458d17e
  4119ef:	mov    eax,ds:0xe2c878a
  4119f4:	fld    QWORD PTR [ebx-0x53055c09]
  4119fa:	xor    eax,0x473fa930
  4119ff:	stos   BYTE PTR es:[edi],al
  411a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a01:	cli    
  411a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a03:	std    
  411a04:	mov    edx,0xce334409
  411a09:	mov    edx,DWORD PTR [ebp+0x8]
  411a0c:	mov    ebx,DWORD PTR [ebp-0x58]
  411a0f:	add    edx,0x5708f8
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0xcfe46eed
  411b74:	aam    0x2e
  411b76:	scas   al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b0a
  411b7e:	add    DWORD PTR [eax+0x42be7612],0x1ed7bf96
  411b88:	ficom  DWORD PTR [ecx+0x66a05fe8]
  411b8e:	js     0x411bf5
  411b90:	jb     0x411b56
  411b92:	jns    0x411bfc
  411b94:	test   BYTE PTR [edx+0x376ed34b],dh
  411b9a:	push   ecx
  411b9b:	mov    edx,0x73d91ddc
  411ba0:	lahf   
  411ba1:	mov    esp,0xc7b476d3
  411ba6:	ret    
  411ba7:	adc    edx,esp
  411ba9:	push   ebp
  411baa:	xchg   ebx,eax
  411bab:	dec    esp
  411bac:	es retf 0x19ee
  411bb0:	sbb    bl,BYTE PTR [ebx+0x62]
  411bb3:	adc    al,0x88
  411bb5:	addr16 sub dl,ah
  411bb8:	inc    edx
  411bb9:	in     al,0x27
  411bbb:	jmp    0x411bde
  411bbd:	stos   BYTE PTR es:[edi],al
  411bbe:	push   ds
  411bbf:	push   esi
  411bc0:	and    bl,bl
  411bc2:	and    BYTE PTR [esi],ah
  411bc4:	push   0x26ab96c0
  411bc9:	and    cl,BYTE PTR ds:0x9de92684
  411bcf:	add    DWORD PTR [ebx+0xa],edx
  411bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd3:	mov    al,ds:0xfe29fe2e
  411bd8:	jge    0x411c15
  411bda:	push   ds
  411bdb:	pop    es
  411bdc:	or     bl,BYTE PTR [edx-0x9ce15c2]
  411be2:	ins    DWORD PTR es:[edi],dx
  411be3:	or     edi,DWORD PTR [edx+0x74]
  411be6:	popf   
  411be7:	ja     0x411c3b
  411be9:	out    0x99,al
  411beb:	or     al,0x92
  411bed:	dec    edx
  411bee:	mov    es,WORD PTR [ebp+0x46dc935]
  411bf4:	jns    0x411c16
  411bf6:	loopne 0x411b92
  411bf8:	xor    eax,0x717c63a0
  411bfd:	dec    edx
  411bfe:	sbb    ebx,DWORD PTR [ecx-0x24]
  411c01:	push   ebp
  411c02:	(bad)  
  411c03:	mov    dl,0x78
  411c05:	cmp    eax,0x3afc4749
  411c0a:	lea    esp,[edi]
  411c0c:	imul   ecx,DWORD PTR [edi],0xffffff88
  411c0f:	mov    al,0xcb
  411c11:	in     al,dx
  411c12:	mov    DWORD PTR [esi+eax*1-0x5f],edx
  411c16:	inc    ebp
  411c17:	mov    ds:0x6666f6f3,eax
  411c1c:	sbb    eax,0xb46e0d69
  411c21:	inc    esi
  411c22:	inc    esi
  411c23:	outs   dx,BYTE PTR ds:[esi]
  411c24:	out    dx,al
  411c25:	ror    BYTE PTR [eax+0x64dbcf9c],0xd9
  411c2c:	jmp    0x411c0a
  411c2e:	(bad)  
  411c2f:	cld    
  411c30:	in     al,dx
  411c31:	cmp    esi,eax
  411c33:	inc    edi
  411c34:	bound  eax,QWORD PTR [ebp+0x195c9f64]
  411c3a:	das    
  411c3b:	dec    ecx
  411c3c:	arpl   WORD PTR [edi],dx
  411c3e:	xchg   edx,eax
  411c3f:	stos   BYTE PTR es:[edi],al
  411c40:	scas   al,BYTE PTR es:[edi]
  411c41:	pop    edi
  411c42:	adc    edx,DWORD PTR [edx+0x5d]
  411c45:	lods   al,BYTE PTR ds:[esi]
  411c46:	fmul   QWORD PTR [ecx+ecx*1-0x65]
  411c4a:	stos   BYTE PTR es:[edi],al
  411c4b:	xor    dh,al
  411c4d:	xchg   edx,eax
  411c4e:	test   eax,0x6d887454
  411c53:	push   edi
  411c54:	push   ebp
  411c55:	pop    es
  411c56:	fwait
  411c57:	cmp    al,BYTE PTR [ecx+0x4ba224aa]
  411c5d:	aaa    
  411c5e:	lea    esi,[edi-0x2f]
  411c61:	fimul  WORD PTR [ebp+ecx*1-0x69b52c41]
  411c68:	inc    ebp
  411c69:	test   eax,0x3295e587
  411c6e:	lds    ebx,FWORD PTR [ecx-0x7]
  411c71:	push   es
  411c72:	jbe    0x411c77
  411c74:	ficomp WORD PTR [ebp-0x52]
  411c77:	sub    ebp,DWORD PTR [ecx+ebx*4]
  411c7a:	add    eax,DWORD PTR [edi+0x5fea88e2]
  411c80:	cli    
  411c81:	or     BYTE PTR [esi+eiz*8+0x483ca77f],ch
  411c88:	xchg   ebx,eax
  411c89:	dec    esp
  411c8a:	cmp    al,cl
  411c8c:	and    ah,BYTE PTR [eax-0x2b217ee8]
  411c92:	(bad)  ds:0x5051f41b
  411c98:	inc    esp
  411c99:	mov    edx,0x8151c0bd
  411c9e:	push   cs
  411c9f:	mov    ebx,0x263c034d
  411ca4:	(bad)  
  411ca5:	jmp    0xb962a707
  411caa:	fcmovu st,st(3)
  411cac:	lea    ebp,ss:[esi-0xb]
  411cb0:	mov    dh,0xc1
  411cb2:	xor    ch,BYTE PTR [ebp-0x69]
  411cb5:	adc    DWORD PTR ds:0x5e901606,0x4dd03e8d
  411cbf:	xchg   esp,eax
  411cc0:	mov    ch,0x18
  411cc2:	fwait
  411cc3:	das    
  411cc4:	and    eax,0x5bf727a7
  411cc9:	jge    0x411c78
  411ccb:	in     eax,dx
  411ccc:	pushf  
  411ccd:	push   ds
  411cce:	mov    eax,ds:0x19135f80
  411cd3:	mov    al,ds:0xdc7dabb
  411cd8:	sub    DWORD PTR [esi-0x5e07fbcf],ebx
  411cde:	adc    bl,BYTE PTR fs:[eax]
  411ce1:	mov    bh,0x7a
  411ce3:	lea    ecx,[edx]
  411ce5:	sbb    dh,BYTE PTR es:[ebx+ecx*1-0x41]
  411cea:	jmp    0x4e5ea4e5
  411cef:	das    
  411cf0:	xor    edx,DWORD PTR [esi+0x21c6d7aa]
  411cf6:	call   0x7bc7:0x348bc92c
  411cfd:	imul   ecx,ebx,0xffffffeb
  411d00:	jmp    0x338a1e13
  411d05:	fucomi st,st(7)
  411d07:	xor    al,0xc3
  411d09:	xor    eax,0x94697d0d
  411d0e:	arpl   WORD PTR [ebx],ax
  411d10:	nop
  411d11:	leave  
  411d12:	and    al,0xaa
  411d14:	pop    esp
  411d15:	push   bp
  411d17:	mov    ebx,0x9c490ad9
  411d1c:	inc    edi
  411d1d:	gs inc edx
  411d1f:	ret    
  411d20:	jp     0x411d7e
  411d22:	mov    DWORD PTR [ecx],ecx
  411d24:	test   al,0x89
  411d26:	jb     0x411d07
  411d28:	js     0x411cb4
  411d2a:	pop    ebp
  411d2b:	and    BYTE PTR [edi-0x2ee7a8a2],0xe3
  411d32:	sub    al,BYTE PTR [ecx+0x2feee6a0]
  411d38:	ds in  al,dx
  411d3a:	retf   0xdb3
  411d3d:	scas   al,BYTE PTR es:[edi]
  411d3e:	and    ebx,DWORD PTR [ebx+ebp*2]
  411d41:	mov    fs,WORD PTR [eax+0x26]
  411d44:	fidiv  WORD PTR [esi-0x19423e54]
  411d4a:	adc    BYTE PTR [edx+0x25],0x99
  411d4e:	int    0xa0
  411d50:	cmc    
  411d51:	xor    cl,BYTE PTR [edx]
  411d53:	add    bl,BYTE PTR [edi+0x40568896]
  411d59:	xor    DWORD PTR [edx],0x65
  411d5c:	aam    0x9d
  411d5e:	and    BYTE PTR [ebx],ah
  411d60:	or     ecx,DWORD PTR [edi-0x32c3f9d5]
  411d66:	push   0xffffffa6
  411d68:	pop    edi
  411d69:	repnz push ebx
  411d6b:	pop    esi
  411d6c:	push   cs
  411d6d:	jno    0x411dc7
  411d6f:	push   edi
  411d70:	jl     0x411d5d
  411d72:	inc    edx
  411d73:	arpl   WORD PTR [edx],ax
  411d75:	dec    esp
  411d76:	mov    ds:0x4b63086d,al
  411d7b:	xor    al,0xd7
  411d7d:	daa    
  411d7e:	xor    BYTE PTR [ebx+ebp*4],ah
  411d81:	lahf   
  411d82:	xor    ecx,DWORD PTR [eax]
  411d84:	dec    esp
  411d85:	or     eax,0xe46ac770
  411d8a:	(bad)  
  411d8b:	call   0x2b3:0xc9aa61fe
  411d92:	adc    al,cl
  411d94:	sbb    BYTE PTR [ebx+0x71],dh
  411d97:	addr16 jne 0x411da7
  411d9a:	retf   0x2c2c
  411d9d:	repz scas eax,DWORD PTR es:[edi]
  411d9f:	imul   ebp,ebp,0xffffff9f
  411da2:	sub    al,0x23
  411da4:	mov    eax,0x10289f40
  411da9:	dec    eax
  411daa:	or     eax,0xadb9b0a7
  411daf:	inc    edi
  411db0:	push   ecx
  411db1:	dec    ecx
  411db2:	jecxz  0x411da4
  411db4:	inc    esp
  411db5:	aad    0xe
  411db7:	(bad)  
  411db8:	or     al,0xa9
  411dba:	fdivr  DWORD PTR [esi+0x71]
  411dbd:	fdivp  st(0),st
  411dbf:	(bad)  
  411dc0:	and    BYTE PTR [ecx+0x5f574818],dh
  411dc6:	pop    edi
  411dc7:	addr16 add ecx,ecx
  411dca:	sbb    BYTE PTR [eax+0x43fab8bb],bh
  411dd0:	mov    edx,0xe731d246
  411dd5:	icebp  
  411dd6:	js     0x411db1
  411dd8:	jb     0x411dd1
  411dda:	cmp    al,0xf8
  411ddc:	(bad)  
  411ddd:	mov    cl,0x55
  411ddf:	fwait
  411de0:	jno    0x411e57
  411de2:	lock dec esi
  411de4:	push   0xfffffff0
  411de6:	rcl    BYTE PTR [ecx+0x6],0x76
  411dea:	in     eax,dx
  411deb:	mov    eax,ds:0x75cab614
  411df0:	pop    edi
  411df1:	imul   ebx,DWORD PTR [ebp-0x43],0x3c
  411df5:	ja     0x411ddf
  411df7:	mov    eax,0xb8987259
  411dfc:	adc    BYTE PTR [edx],0xc0
  411dff:	lea    edx,[ecx+0x437f75e8]
  411e05:	add    ebx,DWORD PTR [ebp+ebp*1+0x2ccfee73]
  411e0c:	test   BYTE PTR [edx+0x2af1137],dh
  411e12:	xchg   ebp,eax
  411e13:	inc    eax
  411e14:	or     edx,DWORD PTR [edi]
  411e16:	sbb    esi,DWORD PTR [ebx-0x5a]
  411e19:	mov    ecx,0xa2500df3
  411e1e:	(bad)  
  411e1f:	lods   eax,DWORD PTR ds:[esi]
  411e20:	(bad)  
  411e21:	out    dx,eax
  411e22:	in     ax,0xc1
  411e25:	and    al,0xca
  411e27:	ret    0xca4d
  411e2a:	adc    BYTE PTR [edi],0x46
  411e2d:	lahf   
  411e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e2f:	cmp    esi,ecx
  411e31:	xor    ah,ah
  411e33:	mov    bh,dl
  411e35:	retf   0xe5fa
  411e38:	nop
  411e39:	mov    al,0xb
  411e3b:	fist   WORD PTR [ebp+0x43]
  411e3e:	add    eax,0xe9db3aff
  411e43:	cmp    BYTE PTR [eax],ah
  411e45:	stos   BYTE PTR es:[edi],al
  411e46:	lock xchg ebp,eax
  411e48:	jne    0x411e4e
  411e4a:	fs ret 
  411e4c:	cwde   
  411e4d:	(bad)  
  411e4e:	out    dx,eax
  411e4f:	push   0x18cbc617
  411e54:	popa   
  411e55:	(bad)  
  411e56:	xchg   esi,eax
  411e57:	jmp    0x411e07
  411e59:	mov    ebx,0xc4d94c1e
  411e5e:	daa    
  411e5f:	(bad)  
  411e60:	in     eax,dx
  411e61:	jmp    0x1d49:0x56292b0c
  411e68:	div    BYTE PTR [edi-0x68]
  411e6b:	test   BYTE PTR [ebx*4+0x48f793d6],0x98
  411e73:	je     0x411dfb
  411e75:	call   0x378d:0xf672df86
  411e7c:	xchg   ebp,eax
  411e7d:	cmp    al,ch
  411e7f:	dec    edx
  411e80:	sar    ebx,cl
  411e82:	sub    DWORD PTR [ebp+0x7f],esi
  411e85:	icebp  
  411e86:	mov    bl,0x2d
  411e88:	jmp    0xeeea1129
  411e8d:	jl     0x411e43
  411e8f:	nop
  411e90:	jae    0x411e21
  411e92:	xchg   esi,eax
  411e93:	stos   BYTE PTR es:[edi],al
  411e94:	mov    esp,0x1a95766e
  411e9a:	mov    ds:0x8238ccb0,eax
  411e9f:	sub    al,0xf0
  411ea1:	ins    BYTE PTR es:[edi],dx
  411ea2:	inc    edi
  411ea3:	fnclex 
  411ea5:	into   
  411ea6:	pop    edi
  411ea7:	jno    0x411edf
  411ea9:	lods   eax,DWORD PTR ds:[esi]
  411eaa:	das    
  411eab:	pop    eax
  411eac:	fdivr  DWORD PTR [edx-0x8]
  411eaf:	inc    esp
  411eb0:	add    al,0xfb
  411eb2:	out    dx,eax
  411eb3:	mov    edx,0x3fa95474
  411eb8:	out    dx,al
  411eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eba:	stc    
  411ebb:	pop    eax
  411ebc:	fldlg2 
  411ebe:	clc    
  411ebf:	cmp    DWORD PTR [edi-0x112aa18],0xffffff83
  411ec6:	test   al,0x5f
  411ec8:	add    dl,0x31
  411ecb:	cmp    edi,eax
  411ecd:	mov    ebp,edx
  411ecf:	fs sub ebx,ecx
  411ed2:	jp     0x411eec
  411ed4:	push   ebx
  411ed5:	fwait
  411ed6:	push   cs
  411ed7:	int    0xa1
  411ed9:	push   ds
  411eda:	inc    ebp
  411edb:	jo     0x411edf
  411edd:	push   eax
  411ede:	cmp    al,0xf4
  411ee0:	loop   0x411e64
  411ee2:	push   ebx
  411ee3:	xchg   BYTE PTR [eax-0x33],bl
  411ee6:	(bad)  
  411ee8:	mov    edx,0x8e703eb1
  411eed:	cdq    
  411eee:	rol    BYTE PTR [esi],1
  411ef0:	adc    eax,0x726a1d8d
  411ef5:	xchg   ebp,eax
  411ef6:	xor    dh,BYTE PTR [esi]
  411ef8:	jae    0x411e93
  411efa:	cmp    eax,0x1c93550e
  411eff:	stos   DWORD PTR es:[edi],eax
  411f00:	jae    0x411e91
  411f02:	and    al,0xcb
  411f04:	mov    bh,0x84
  411f06:	jns    0x411f3b
  411f08:	cwde   
  411f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0a:	adc    eax,0x7210159f
  411f0f:	frstor [eax+0x41ae9c80]
  411f15:	xor    DWORD PTR [eax-0x27],esi
  411f18:	ror    DWORD PTR [esi+0x40],1
  411f1b:	dec    ebx
  411f1c:	push   ebx
  411f1d:	pop    ebp
  411f1e:	xor    DWORD PTR [ecx+0x6a],esi
  411f21:	xor    edi,DWORD PTR [edx+0x31]
  411f24:	mov    ebp,0x8c687bd3
  411f29:	cmp    ecx,DWORD PTR [ecx-0x18]
  411f2c:	pop    ss
  411f2d:	rcr    BYTE PTR [edx-0x77],cl
  411f30:	mov    esi,0x9126e9fd
  411f35:	and    BYTE PTR ds:0x1536e1a0,ah
  411f3b:	imul   edx,ebp,0x18
  411f3e:	add    eax,0xa82fb447
  411f43:	lds    esi,FWORD PTR [esi+0x3b]
  411f46:	cdq    
  411f47:	aaa    
  411f48:	inc    esi
  411f49:	lods   eax,DWORD PTR ds:[esi]
  411f4a:	shl    BYTE PTR [esi+0x2b15d0df],cl
  411f50:	fld    TBYTE PTR [ecx]
  411f52:	fwait
  411f53:	xchg   ebp,eax
  411f54:	aam    0xcb
  411f56:	jl     0x411efa
  411f58:	and    eax,0x10f625a2
  411f5d:	int3   
  411f5e:	pop    ebx
  411f5f:	push   ss
  411f60:	mov    bh,0x5
  411f62:	mov    esp,0x7fa12040
  411f67:	mov    WORD PTR [eax],cs
  411f69:	and    al,0xe3
  411f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f6c:	adc    esi,0x223ff3b8
  411f72:	xchg   esi,eax
  411f73:	ja     0x411f61
  411f75:	leave  
  411f76:	loope  0x411f64
  411f78:	jp     0x411f38
  411f7a:	jp     0x411f7b
  411f7c:	outs   dx,DWORD PTR ds:[esi]
  411f7d:	xchg   esi,eax
  411f7e:	xlat   BYTE PTR ds:[ebx]
  411f7f:	sub    bh,dl
  411f81:	fdivr  QWORD PTR [esi+ebx*8]
  411f84:	mov    esi,0x5db69a0
  411f89:	add    al,0x5c
  411f8b:	fcmove st,st(2)
  411f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f8e:	sbb    BYTE PTR [ebx+esi*2-0x8],bh
  411f92:	idiv   DWORD PTR [edx]
  411f94:	int    0x47
  411f96:	sbb    DWORD PTR [ebx+0x5f39172e],edi
  411f9c:	jns    0x411f31
  411f9e:	inc    eax
  411f9f:	cli    
  411fa0:	push   edi
  411fa1:	inc    esp
  411fa2:	jg     0x411fd4
  411fa4:	lahf   
  411fa5:	pop    eax
  411fa6:	sbb    DWORD PTR [ebx+0x301f3a7b],0xe4699a6a
  411fb0:	cmp    DWORD PTR [eax+0x12],ecx
  411fb3:	mov    dl,0x91
  411fb5:	add    ah,BYTE PTR [edx+0x6d98ffa0]
  411fbb:	ud1    ebx,DWORD PTR [ecx]
  411fbe:	movzx  edx,dh
  411fc1:	dec    esp
  411fc2:	(bad)  
  411fc3:	fsubrp st(2),st
  411fc5:	adc    esi,ebp
  411fc7:	pop    ebp
  411fc8:	sub    edi,DWORD PTR [esi]
  411fca:	pop    esp
  411fcb:	adc    DWORD PTR [ebx+edi*2],0x3711505b
  411fd2:	xor    BYTE PTR [ecx+0x72b2912d],al
  411fd8:	ja     0x411f6e
  411fda:	daa    
  411fdb:	jmp    0x2a0d68f3
  411fe0:	dec    ecx
  411fe1:	xchg   ebp,eax
  411fe2:	mov    ds:0x874a3655,al
  411fe7:	pop    edx
  411fe8:	adc    al,0x30
  411fea:	xlat   BYTE PTR ds:[ebx]
  411feb:	loopne 0x411fee
  411fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fee:	jl     0x412030
  411ff0:	leave  
  411ff1:	sbb    al,0x78
  411ff3:	les    edx,FWORD PTR [ebx+ecx*4-0x29]
  411ff7:	adc    BYTE PTR [eax-0x2891767],ah
  411ffd:	ror    BYTE PTR [ecx-0x50],cl
  412000:	arpl   ax,ax
  412002:	add    eax,0xe2e34f3d
  412007:	adc    eax,0x91d45dd7
  41200c:	mov    WORD PTR [ebx-0x65],?
  41200f:	xor    al,0x9e
  412011:	scas   eax,DWORD PTR es:[edi]
  412012:	xchg   edx,eax
  412013:	push   0x5b917c78
  412018:	int    0x8a
  41201a:	cmp    eax,0x175ca69a
  41201f:	push   cs
  412020:	popf   
  412021:	fist   DWORD PTR [eax-0x28c0d700]
  412027:	or     al,0x19
  412029:	ss inc edx
  41202b:	lods   eax,DWORD PTR ds:[esi]
  41202c:	inc    edi
  41202d:	lahf   
  41202e:	or     BYTE PTR [ecx],ch
  412030:	or     DWORD PTR [edx],ebp
  412032:	add    dh,BYTE PTR [esi]
  412034:	jnp    0x411ff8
  412036:	outs   dx,BYTE PTR ds:[esi]
  412037:	pop    ebp
  412038:	pop    esp
  412039:	(bad)  
  41203a:	aad    0x0
  41203c:	adc    eax,0xbb9ea97b
  412041:	push   cs
  412042:	(bad)  
  412043:	sbb    eax,0xb806eed0
  412048:	out    dx,al
  412049:	std    
  41204a:	mov    cl,0x39
  41204c:	lds    esi,FWORD PTR [ecx+ebp*4+0x718d8f4d]
  412053:	add    eax,0xe793dd19
  412058:	and    eax,0x7d004d45
  41205d:	(bad)  
  41205e:	ffreep st(3)
  412060:	lods   eax,DWORD PTR ds:[esi]
  412061:	scas   eax,DWORD PTR es:[edi]
  412062:	leave  
  412063:	cs addr16 mov ecx,0x95f0c0ec
  41206a:	jbe    0x41203a
  41206c:	out    dx,eax
  41206d:	xchg   esp,eax
  41206e:	call   0x4d8f:0x64f8cd04
  412075:	xor    BYTE PTR [esi+0x5da4a284],al
  41207b:	push   ebx
  41207c:	inc    ecx
  41207e:	ja     0x4120f2
  412080:	add    eax,0x8cc523c5
  412085:	adc    eax,0x46ce1e80
  41208a:	daa    
  41208b:	jle    0x41200f
  41208d:	dec    edi
  41208e:	sbb    ecx,DWORD PTR [edi-0x726b0077]
  412094:	jne    0x4120f1
  412096:	sub    al,0xa6
  412098:	sub    ecx,0x1b05b153
  41209e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41209f:	push   ebp
  4120a0:	inc    edi
  4120a1:	and    ah,BYTE PTR [eax]
  4120a3:	dec    esp
  4120a4:	or     eax,DWORD PTR [edx+0x2b]
  4120a7:	sub    ebx,ecx
  4120a9:	test   BYTE PTR [edi+0x64abe39b],bh
  4120af:	sar    BYTE PTR [ecx-0x477da5d],1
  4120b5:	stc    
  4120b6:	push   edx
  4120b7:	add    eax,0xf01ae4df
  4120bc:	adc    al,0x8d
  4120be:	sbb    BYTE PTR [edi-0x10a0f1f7],bh
  4120c4:	dec    esp
  4120c5:	call   0x94756e82
  4120ca:	mov    esi,0x3391b3ca
  4120cf:	cmp    cl,cl
  4120d1:	addr16 popfw 
  4120d4:	(bad)  
  4120d5:	cmp    al,0x97
  4120d7:	pop    edi
  4120d8:	das    
  4120d9:	js     0x412153
  4120db:	add    al,0x8c
  4120dd:	sbb    eax,0x2f63f312
  4120e2:	popf   
  4120e3:	mov    BYTE PTR [edi+0x3c3c31e4],al
  4120e9:	call   0x34dd:0x961e7cd4
  4120f0:	push   edi
  4120f1:	cli    
  4120f2:	ret    
  4120f3:	jbe    0x4120b9
  4120f5:	xor    al,0x51
  4120f7:	mov    dl,0x2c
  4120f9:	mov    al,0x66
  4120fb:	push   esp
  4120fc:	jae    0x41210e
  4120fe:	mov    BYTE PTR [edx+0x20],ah
  412101:	(bad)  
  412102:	sbb    esp,ecx
  412104:	pop    ecx
  412105:	fstp   QWORD PTR [edi]
  412107:	sbb    al,0x4f
  412109:	(bad)  
  41210a:	fcomp  QWORD PTR [ebx-0x78f933e]
  412110:	sbb    al,0x3e
  412112:	ins    DWORD PTR es:[edi],dx
  412113:	add    eax,0xaf258187
  412118:	push   0x4b
  41211a:	and    ebp,DWORD PTR [edi]
  41211c:	add    DWORD PTR [esi+eax*8-0x20],ecx
  412120:	lock loope 0x412175
  412123:	fldcw  WORD PTR [ebx+0x21422ae4]
  412129:	imul   ebp,DWORD PTR [eax+0x4f],0x2c442b33
  412130:	mov    ebp,0x24351b0f
  412135:	ins    DWORD PTR es:[edi],dx
  412136:	push   ebp
  412137:	xor    al,0x3c
  412139:	push   es
  41213a:	cld    
  41213b:	and    edi,DWORD PTR [esi]
  41213d:	out    0x73,al
  41213f:	sbb    esp,DWORD PTR [edx+0x22a5ccbd]
  412145:	ds mov esp,0xec294563
  41214b:	aaa    
  41214c:	push   ecx
  41214d:	xor    dh,al
  41214f:	push   ebx
  412150:	fs mov ecx,0x9f1b95e8
  412156:	mov    edi,0x35aef940
  41215b:	outs   dx,DWORD PTR ds:[esi]
  41215c:	pop    ebp
  41215d:	ins    BYTE PTR es:[edi],dx
  41215e:	xchg   esp,eax
  41215f:	dec    esi
  412160:	cmp    DWORD PTR [esp+eiz*4],edi
  412163:	(bad)
  412166:	in     eax,0xc1
  412168:	jge    0x412197
  41216a:	fwait
  41216b:	sub    al,BYTE PTR [edi-0x1256af6b]
  412171:	inc    eax
  412172:	xor    al,BYTE PTR [esi+0x37a1f6a9]
  412178:	or     eax,0xfb5a58e
  41217d:	cmp    bl,dl
  41217f:	daa    
  412180:	or     esi,esi
  412182:	dec    edx
  412183:	ins    BYTE PTR es:[edi],dx
  412184:	mov    ah,0x52
  412186:	fnstsw WORD PTR [ecx]
  412188:	fistp  WORD PTR [eax]
  41218a:	stos   DWORD PTR es:[edi],eax
  41218b:	sub    al,0xa
  41218d:	xchg   ebp,eax
  41218e:	pop    es
  41218f:	mov    dl,0xcd
  412191:	push   ds
  412192:	sub    DWORD PTR [edx-0x60],esi
  412195:	jecxz  0x4121ee
  412197:	adc    al,0x1c
  412199:	(bad)  
  41219a:	fstp   DWORD PTR [edx-0x13ec9e00]
  4121a0:	xchg   BYTE PTR cs:[ebx+eiz*1-0x2e],al
  4121a5:	int3   
  4121a6:	mov    dh,0xcf
  4121a8:	push   cs
  4121a9:	mov    al,0xd5
  4121ab:	add    eax,0xee0943e9
  4121b0:	daa    
  4121b1:	xlat   BYTE PTR ds:[ebx]
  4121b2:	call   FWORD PTR [edx-0x3d743bb]
  4121b8:	dec    ebp
  4121b9:	jl     0x41219a
  4121bb:	jbe    0x4121b4
  4121bd:	rcr    ah,1
  4121bf:	xor    DWORD PTR [ecx+0x1ba79a7b],esi
  4121c5:	daa    
  4121c6:	jg     0x4121b1
  4121c8:	rcr    ebx,1
  4121ca:	jns    0x41222e
  4121cc:	fs jmp 0x1d427273
  4121d2:	test   BYTE PTR [eax],ch
  4121d4:	jnp    0x412229
  4121d6:	xchg   edi,eax
  4121d7:	cmc    
  4121d8:	dec    eax
  4121d9:	and    DWORD PTR [ecx-0x63538bc8],ecx
  4121df:	or     BYTE PTR [ecx],bl
  4121e1:	sbb    al,0x9d
  4121e3:	(bad)  
  4121e4:	xchg   ecx,eax
  4121e5:	bnd jnp 0x41221b
  4121e8:	push   cs
  4121e9:	pop    ebx
  4121ea:	xor    al,0x44
  4121ec:	or     ch,dh
  4121ee:	jg     0x4121c6
  4121f0:	les    ebx,FWORD PTR [edx]
  4121f2:	jg     0x4121d8
  4121f4:	push   edx
  4121f5:	jbe    0x41217c
  4121f7:	fwait
  4121f8:	call   0xff20494f
  4121fd:	pop    DWORD PTR [ecx-0x58]
  412200:	ror    ebp,cl
  412202:	ins    DWORD PTR es:[edi],dx
  412203:	xor    ah,BYTE PTR [ebp+0x30]
  412206:	ds std 
  412208:	ins    BYTE PTR es:[edi],dx
  412209:	out    dx,al
  41220a:	pop    ebp
  41220b:	cwde   
  41220c:	push   0xffffffc0
  41220e:	repnz leave 
  412210:	push   ebx
  412211:	stos   BYTE PTR es:[edi],al
  412212:	(bad)  
  412213:	dec    edi
  412214:	and    DWORD PTR [ebp-0x33],0xf98c011c
  41221b:	xchg   esi,eax
  41221c:	push   0xffffffcf
  41221e:	pop    edi
  41221f:	imul   edx,eax,0x43a1f3c2
  412225:	cmp    DWORD PTR [ebx+ecx*1+0x4c],esp
  412229:	push   eax
  41222a:	iret   
  41222b:	xchg   edx,eax
  41222c:	ror    DWORD PTR [ecx+0x6fed14f3],0x87
  412233:	sbb    eax,0x941553a0
  412238:	mov    al,ds:0xcb99ee17
  41223d:	push   ebx
  41223e:	sbb    dh,BYTE PTR [edi+0xf]
  412241:	lods   al,BYTE PTR ds:[esi]
  412242:	lock add DWORD PTR [eax+0x7f],edx
  412246:	cs sub eax,0x8d3711b6
  41224c:	or     BYTE PTR [edi],al
  41224e:	mov    ds:0x34d3ff2a,al
  412253:	gs jae 0x41220f
  412256:	es enter 0x6ef,0x2b
  41225b:	inc    eax
  41225c:	add    bl,BYTE PTR [esi+0x25]
  41225f:	mov    edi,0x7fcd8cda
  412264:	pop    edi
  412265:	push   ebp
  412266:	pop    ds
  412267:	lahf   
  412268:	loop   0x4122ac
  41226a:	mov    bh,0xd6
  41226c:	leave  
  41226d:	pop    ebp
  41226e:	mov    bl,0x76
  412270:	mov    eax,ds:0xbdeadf5b
  412275:	cmp    esi,0x61d632e4
  41227b:	aaa    
  41227c:	test   eax,0x5989c82b
  412281:	add    al,0x9b
  412283:	push   0x32112215
  412288:	js     0x4122e0
  41228a:	bound  ecx,QWORD PTR [edx+0x76]
  41228d:	int    0x7e
  41228f:	jg     0x4122c9
  412291:	fs dec edx
  412293:	add    BYTE PTR [esi+0x1c],dl
  412296:	xchg   esi,eax
  412297:	push   edx
  412298:	jl     0x412245
  41229a:	clc    
  41229b:	or     eax,0xf036a771
  4122a0:	fcom   QWORD PTR [ebx]
  4122a2:	mov    bh,0xac
  4122a4:	push   cs
  4122a5:	mov    ecx,0xbb11f2b5
  4122aa:	jbe    0x4122f7
  4122ac:	fiadd  DWORD PTR [eax]
  4122ae:	nop
  4122af:	ss das 
  4122b1:	loop   0x41224c
  4122b3:	ins    DWORD PTR es:[edi],dx
  4122b4:	xchg   edi,eax
  4122b5:	sbb    ebp,esi
  4122b7:	inc    edx
  4122b8:	iret   
  4122b9:	jnp    0x41227c
  4122bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bc:	jno    0x41230a
  4122be:	cmp    DWORD PTR [ebp-0x8afc9f3],esp
  4122c4:	push   edx
  4122c5:	push   edx
  4122c6:	pop    ebp
  4122c7:	fwait
  4122c8:	in     eax,dx
  4122c9:	pusha  
  4122ca:	add    bh,BYTE PTR [edi]
  4122cc:	in     al,dx
  4122cd:	into   
  4122ce:	lods   al,BYTE PTR ds:[esi]
  4122cf:	xor    al,0xc8
  4122d1:	frstor [eax]
  4122d3:	scas   al,BYTE PTR es:[edi]
  4122d4:	sbb    esi,DWORD PTR [eax+0x5cc79a39]
  4122da:	imul   ecx,DWORD PTR [esi+eax*2-0x8],0x3b478ee5
  4122e2:	shl    BYTE PTR [eax+0x4be5df76],cl
  4122e8:	nop
  4122e9:	mov    BYTE PTR [ecx+0x53496ec6],cl
  4122ef:	lahf   
  4122f0:	out    dx,eax
  4122f1:	adc    DWORD PTR [edx-0x60],esi
  4122f4:	hlt    
  4122f5:	lahf   
  4122f6:	dec    bp
  4122f8:	in     al,dx
  4122f9:	shr    DWORD PTR [ebp-0x209ca935],1
  4122ff:	mov    edx,0xf7a5e4d0
  412304:	xchg   ecx,eax
  412305:	inc    ecx
  412306:	cmp    ebp,DWORD PTR [ebx+0x7a]
  412309:	push   edi
  41230a:	sub    BYTE PTR [esi],bl
  41230c:	aam    0xc0
  41230e:	xchg   BYTE PTR [eax+0xaaf50f8],cl
  412314:	mov    edx,0xebc3aef2
  412319:	mov    ds,WORD PTR [ecx+ebx*2+0x153ec596]
  412320:	and    ebx,DWORD PTR [ebx+0x3cbd2bf7]
  412326:	add    eax,esp
  412328:	fwait
  412329:	popa   
  41232a:	daa    
  41232b:	pop    es
  41232c:	ret    0xb887
  41232f:	adc    BYTE PTR [ecx],bl
  412331:	ret    0x8143
  412334:	adc    bl,BYTE PTR [ecx-0x7b5b7998]
  41233a:	mov    DWORD PTR [ecx-0x2a4ea7a1],ecx
  412340:	bound  edi,QWORD PTR [edx-0x27944609]
  412346:	mov    gs,WORD PTR [ebp-0x714f28fd]
  41234c:	aam    0x3e
  41234e:	sub    BYTE PTR [ecx+eax*1],al
  412351:	jae    0x412312
  412353:	fist   DWORD PTR [esi+0x61]
  412356:	sbb    ebp,DWORD PTR [edi+0x7b]
  412359:	mov    ebx,0x1370ec29
  41235e:	push   cs
  41235f:	pop    es
  412360:	xchg   ebx,eax
  412361:	popa   
  412362:	pop    ss
  412363:	mov    ds:0x10760dc,al
  412368:	outs   dx,DWORD PTR ds:[esi]
  412369:	dec    edi
  41236a:	jns    0x412397
  41236c:	jg     0x412347
  41236e:	jbe    0x4122f9
  412370:	pop    esp
  412371:	mov    esp,0x9405305f
  412376:	aad    0xc2
  412378:	jb     0x4123de
  41237a:	(bad)  
  41237b:	xor    al,0x7c
  41237d:	adc    dh,BYTE PTR [esi-0x327b9e04]
  412383:	inc    esi
  412384:	xchg   ecx,eax
  412385:	pop    ecx
  412386:	clc    
  412387:	mov    esi,0x90dc33a9
  41238c:	mov    eax,ds:0x9f7aade0
  412391:	pop    ds
  412392:	adc    al,0x31
  412394:	cld    
  412395:	jno    0x4123e3
  412397:	popf   
  412398:	inc    esp
  412399:	push   ebp
  41239a:	inc    ebx
  41239b:	les    edi,FWORD PTR [ebx]
  41239d:	xchg   ebp,eax
  41239e:	cmp    al,0xfb
  4123a0:	mov    ds:0x8f51d0e6,al
  4123a5:	lock dec ebx
  4123a7:	pop    ss
  4123a8:	sbb    esi,DWORD PTR ds:0x26e4e011
  4123ae:	and    ch,BYTE PTR [ebp+0x68]
  4123b1:	test   ecx,ecx
  4123b3:	jecxz  0x4123e1
  4123b5:	or     dl,BYTE PTR [ebp+0x79b3eade]
  4123bb:	push   cs
  4123bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123bd:	add    BYTE PTR [esi-0x458b2f0a],ch
  4123c3:	das    
  4123c4:	push   ecx
  4123c5:	pop    edi
  4123c6:	call   0x89d75724
  4123cb:	pop    ecx
  4123cc:	sbb    eax,0x736ccb7c
  4123d1:	and    ebp,DWORD PTR [eax-0x14]
  4123d4:	adc    BYTE PTR [esi],0xbf
  4123d7:	inc    ebp
  4123d8:	sub    edi,DWORD PTR [ebx]
  4123da:	sub    ebx,DWORD PTR [eax-0x4c6b304c]
  4123e0:	sti    
  4123e1:	inc    eax
  4123e2:	cmp    esi,DWORD PTR [ebp+0x40]
  4123e5:	inc    ecx
  4123e6:	adc    al,0xa1
  4123e8:	out    0x4f,al
  4123ea:	bound  edx,QWORD PTR [ebx]
  4123ec:	jo     0x4123df
  4123ee:	outs   dx,DWORD PTR ds:[esi]
  4123ef:	lock push cs
  4123f1:	clc    
  4123f2:	and    eax,0x633688ca
  4123f7:	pop    es
  4123f8:	js     0x4123dd
  4123fa:	adc    eax,0x2cb55b19
  4123ff:	sbb    edx,ecx
  412401:	and    al,0x6d
  412403:	inc    ecx
  412404:	adc    esi,DWORD PTR [ebx]
  412406:	enter  0x642c,0x69
  41240a:	fcmovu st,st(1)
  41240c:	sub    dh,BYTE PTR [edi+0x76]
  41240f:	xor    bl,dl
  412411:	mov    ah,0x7a
  412413:	sub    edi,esi
  412415:	sub    al,0xd9
  412417:	push   0x596482c2
  41241c:	iret   
  41241d:	and    eax,0xcb0a8535
  412422:	sub    cl,BYTE PTR [eax+0x78d828bf]
  412428:	mov    dl,BYTE PTR [esi+0x4b068a93]
  41242e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242f:	mov    edx,0x4eab57d1
  412434:	adc    BYTE PTR [eax+0x56],bh
  412437:	mov    ah,0xdf
  412439:	jle    0x4124a6
  41243b:	stos   BYTE PTR es:[edi],al
  41243c:	shl    BYTE PTR [esi],1
  41243e:	pop    edx
  41243f:	addr16 xor al,0x4e
  412442:	lds    ebx,FWORD PTR [esi]
  412444:	mov    eax,0x9694c299
  412449:	and    eax,0x978df903
  41244e:	mov    ah,0xaa
  412450:	jmp    0xfd38:0xbe4a70ff
  412457:	xor    al,0xc8
  412459:	pop    es
  41245a:	fmul   QWORD PTR [ecx+0x41]
  41245d:	sbb    dl,dh
  41245f:	stos   DWORD PTR es:[edi],eax
  412460:	or     eax,0x38a2744e
  412465:	nop
  412466:	mov    bh,0x26
  412468:	aas    
  412469:	int3   
  41246a:	dec    edi
  41246b:	mov    eax,0x618df21a
  412470:	mov    bh,0x16
  412472:	cmp    bh,BYTE PTR [edx-0x2b]
  412475:	outs   dx,DWORD PTR ds:[esi]
  412476:	stc    
  412477:	call   0x543ebc7a
  41247c:	loope  0x4124a5
  41247e:	inc    esp
  41247f:	test   al,0xb7
  412481:	out    dx,eax
  412482:	xchg   esi,eax
  412483:	or     BYTE PTR [eax+0x60],dh
  412486:	jne    0x4124c5
  412488:	xor    ch,BYTE PTR ds:[edi]
  41248b:	push   ebp
  41248c:	call   0x31f6:0x6723fb6d
  412493:	addr16 mov ecx,0xcc72b517
  412499:	imul   esp,DWORD PTR [esi+0x2e],0xa26b6508
  4124a0:	or     eax,0x648b52ef
  4124a5:	xor    dh,BYTE PTR [ecx-0x77]
  4124a8:	int3   
  4124a9:	fidivr DWORD PTR [esi-0x4e808efe]
  4124af:	sbb    eax,0x6746a4f6
  4124b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b5:	inc    esi
  4124b6:	adc    eax,0x8b0b58ef
  4124bb:	inc    ebx
  4124bc:	inc    edi
  4124bd:	(bad)  
  4124be:	(bad)  
  4124bf:	dec    ecx
  4124c0:	mov    eax,0x36fdfb4e
  4124c5:	add    DWORD PTR [esi+0x784dc090],eax
  4124cb:	mov    bh,0xfb
  4124cd:	add    eax,esi
  4124cf:	imul   eax,DWORD PTR [esi],0x7ba2bdc4
  4124d5:	(bad)  [ecx+0x37]
  4124d8:	mov    esi,0xf1f22794
  4124dd:	scas   al,BYTE PTR es:[edi]
  4124de:	sub    BYTE PTR [ecx-0x70],ah
  4124e1:	scas   al,BYTE PTR es:[edi]
  4124e2:	sbb    BYTE PTR [edi+0x74f4e40f],al
  4124e8:	push   esp
  4124e9:	add    eax,0x39a8d9c4
  4124ee:	inc    esi
  4124ef:	arpl   WORD PTR [ecx-0x63],dx
  4124f2:	repnz and ebp,eax
  4124f5:	imul   ebx,DWORD PTR ds:0x1d48f8f6,0xffffffe2
  4124fc:	sbb    esp,DWORD PTR [ebp+0x13f1c31]
  412502:	repnz pop ebp
  412504:	mov    BYTE PTR [edx-0x3e],ch
  412507:	pop    ebx
  412508:	sbb    al,0x33
  41250a:	mov    eax,ds:0x7d102559
  41250f:	cmp    al,BYTE PTR [eax]
  412511:	test   eax,0x1b0830ee
  412516:	and    DWORD PTR [ecx],edx
  412518:	daa    
  412519:	xor    BYTE PTR [edi-0x32],0x43
  41251d:	and    BYTE PTR [ecx],ah
  41251f:	mov    al,ds:0xbf00a779
  412524:	repnz into 
  412526:	cwde   
  412527:	add    DWORD PTR [esi],esi
  412529:	jmp    0x4124e1
  41252b:	adc    eax,0x25db927c
  412530:	push   es
  412531:	inc    edi
  412532:	jge    0x412558
  412534:	jno    0x412504
  412536:	std    
  412537:	call   0xc916:0xda4c770f
  41253e:	(bad)  
  41253f:	pop    ss
  412540:	push   ds
  412541:	inc    esi
  412542:	imul   ebx,ebx,0x7677c73a
  412548:	fstp   DWORD PTR [esi]
  41254a:	push   0x33
  41254c:	fnsave [edi+ecx*8]
  41254f:	push   ebx
  412550:	and    DWORD PTR [edx],eax
  412552:	loop   0x412539
  412554:	inc    edi
  412555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412556:	loopne 0x412578
  412558:	jp     0x4124fa
  41255a:	loopne 0x412593
  41255c:	nop
  41255d:	fst    DWORD PTR [ebp-0x184195db]
  412563:	mov    ds:0x76478a36,al
  412568:	mov    eax,ds:0xa9669db8
  41256d:	stc    
  41256e:	aad    0xd1
  412570:	and    eax,0xc9745df9
  412575:	in     al,dx
  412576:	ins    DWORD PTR es:[edi],dx
  412577:	test   eax,0xee1f49f4
  41257c:	ja     0x412511
  41257e:	test   BYTE PTR [edx],ch
  412580:	in     al,0x40
  412582:	out    dx,al
  412583:	cmp    eax,0x269c2bf2
  412588:	sbb    BYTE PTR [esi+0x1d],dh
  41258b:	test   BYTE PTR [ebx+0x53],al
  41258e:	test   al,0xa2
  412590:	in     eax,dx
  412591:	ret    0xf20a
  412594:	in     al,0x56
  412596:	fwait
  412597:	cmp    BYTE PTR [ebp-0x4f],dh
  41259a:	jecxz  0x4125bb
  41259c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41259d:	(bad)  
  41259e:	jno    0x412521
  4125a0:	dec    ebp
  4125a1:	fmul   QWORD PTR gs:[esp+edx*8-0x7b5bdbcb]
  4125a9:	ss xchg ecx,eax
  4125ab:	jecxz  0x4125c4
  4125ad:	adc    DWORD PTR [ebx+0x4b],esp
  4125b0:	pop    esp
  4125b1:	and    DWORD PTR [esp+edx*2-0x37467d12],0x30
  4125b9:	leave  
  4125ba:	lods   al,BYTE PTR ds:[esi]
  4125bb:	loope  0x412552
  4125bd:	xchg   ecx,eax
  4125be:	sbb    esp,DWORD PTR [ebp+0x32efa45c]
  4125c4:	xchg   DWORD PTR [edx-0x6e31b23f],ecx
  4125ca:	loope  0x412590
  4125cc:	dec    edi
  4125cd:	mov    BYTE PTR [esi],ah
  4125cf:	xchg   esp,eax
  4125d0:	fimul  DWORD PTR [edi+edi*8+0x2e27b21c]
  4125d7:	pop    edx
  4125d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125d9:	call   0x9a65:0x5c775691
  4125e0:	inc    esp
  4125e1:	sub    ah,BYTE PTR [eax+0x7065417a]
  4125e7:	test   DWORD PTR [edi-0x72],ebx
  4125ea:	icebp  
  4125eb:	xor    eax,eax
  4125ed:	xchg   ecx,eax
  4125ee:	mov    dh,0x42
  4125f0:	mov    WORD PTR [ecx+0x7c],cs
  4125f3:	retf   0xd7d2
  4125f6:	in     al,0x4d
  4125f8:	mov    ecx,0xe82fc287
  4125fd:	jno    0x41260b
  4125ff:	fadd   st,st(7)
  412601:	jg     0x412672
  412603:	int    0xab
  412605:	lods   al,BYTE PTR ds:[esi]
  412606:	rcr    DWORD PTR [edx+0x6c],cl
  412609:	push   ebp
  41260a:	or     ch,BYTE PTR [ecx]
  41260c:	cs repz adc BYTE PTR ss:[edi],0x81
  412612:	sbb    eax,esi
  412614:	xor    al,0xc6
  412616:	mov    esi,DWORD PTR [ebx+eax*8]
  412619:	fld    TBYTE PTR ds:0x223b2fa5
  41261f:	inc    edi
  412620:	lds    ecx,FWORD PTR [esi]
  412622:	push   ss
  412623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412624:	inc    ebp
  412625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412626:	imul   esi,DWORD PTR [ebx+ebx*1],0x8bc66b7c
  41262d:	push   ds
  41262e:	fdivp  st(6),st
  412630:	xor    eax,0x9b3a38f
  412635:	mov    ah,BYTE PTR [ecx]
  412637:	mov    ds:0x5e274303,eax
  41263c:	mov    ch,0xc1
  41263e:	and    BYTE PTR [ebx],0xf2
  412641:	cmp    BYTE PTR [edi+0x24],bh
  412644:	xchg   esi,eax
  412645:	sti    
  412646:	hlt    
  412647:	mov    ebp,0x8955a7bf
  41264c:	div    BYTE PTR [eax]
  41264e:	fwait
  41264f:	jge    0x41265a
  412651:	sbb    al,0x67
  412653:	mov    edi,0x7f98677d
  412658:	(bad)  
  412659:	xor    eax,ebx
  41265b:	inc    esp
  41265c:	mov    edi,0x44156dff
  412661:	aaa    
  412662:	ret    
  412663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412664:	inc    edx
  412665:	cmp    DWORD PTR [ebx-0x3f],ecx
  412668:	add    ecx,ebp
  41266a:	jnp    0x412681
  41266c:	in     eax,dx
  41266d:	and    BYTE PTR [ebp+0x8c5d75a],cl
  412673:	repz or dl,BYTE PTR [esi+0x66b88101]
  41267a:	scas   al,BYTE PTR es:[edi]
  41267b:	cmp    ebx,0xc4386a6
  412681:	pop    ebp
  412682:	jecxz  0x412615
  412684:	ins    DWORD PTR es:[edi],dx
  412685:	std    
  412686:	test   DWORD PTR [edi+0x22ad0307],0xbb9e7e09
  412690:	out    0xab,eax
  412692:	xor    BYTE PTR es:[edx+0x1e370b45],bl
  412699:	inc    esp
  41269a:	jle    0x412640
  41269c:	popa   
  41269d:	(bad)  
  41269e:	or     dh,dh
  4126a0:	mov    edx,0x9cf667c1
  4126a5:	pop    esp
  4126a6:	paddd  mm0,mm5
  4126a9:	adc    DWORD PTR [edi-0x46c13c85],ecx
  4126af:	ret    0xe248
  4126b2:	inc    ecx
  4126b3:	(bad)  
  4126b4:	push   ds
  4126b5:	(bad)  
  4126b6:	mov    ds:0xf924864f,al
  4126bb:	(bad)  ds:0xe261da40
  4126c1:	sub    BYTE PTR [esi],cl
  4126c3:	pop    esi
  4126c4:	mov    ah,0x97
  4126c6:	inc    eax
  4126c7:	out    dx,eax
  4126c8:	lock fstp QWORD PTR [ebp+0x1efee786]
  4126cf:	(bad)  
  4126d0:	ja     0x41273f
  4126d2:	fisubr DWORD PTR ds:0x73d282ae
  4126d8:	or     eax,DWORD PTR [ebp-0x2e]
  4126db:	xor    eax,0x61fba68
  4126e0:	inc    edi
  4126e1:	retf   
  4126e2:	mov    al,ds:0x2d49c707
  4126e7:	loop   0x4126f8
  4126e9:	sub    esp,eax
  4126eb:	adc    al,0x95
  4126ed:	daa    
  4126ee:	test   BYTE PTR [esp+edi*8+0x475830d2],0x7c
  4126f6:	lods   eax,DWORD PTR ds:[esi]
  4126f7:	mov    WORD PTR [ecx-0x10],ss
  4126fa:	xor    ah,0x67
  4126fd:	ins    DWORD PTR es:[edi],dx
  4126fe:	xor    BYTE PTR [edx-0x79],dh
  412701:	pop    esp
  412702:	les    ebx,FWORD PTR [esi-0x75]
  412705:	mov    eax,ds:0x9a7087a6
  41270a:	outs   dx,BYTE PTR ds:[esi]
  41270b:	ins    BYTE PTR es:[di],dx
  41270d:	gs ffreep st(1)
  412710:	sbb    eax,0xfa93b597
  412715:	adc    dl,BYTE PTR [eax-0x1d91871a]
  41271b:	pop    edi
  41271c:	jno    0x41279c
  41271e:	gs push ebx
  412720:	mov    bh,0x66
  412722:	mov    bh,ah
  412724:	cmp    ch,dh
  412726:	(bad)  
  412727:	dec    ebp
  412728:	add    al,0xb6
  41272a:	push   ss
  41272b:	push   ss
  41272c:	and    BYTE PTR [esi-0x2666b935],ch
  412732:	out    0x9c,al
  412734:	enter  0xeb43,0x2f
  412738:	mov    edi,0x5530b49a
  41273d:	lods   al,BYTE PTR ds:[esi]
  41273e:	inc    eax
  41273f:	jle    0x4126d8
  412741:	retf   0x5c24
  412744:	std    
  412745:	push   ss
  412746:	scas   al,BYTE PTR es:[edi]
  412747:	mov    esp,0xd1fc2fa2
  41274c:	out    dx,eax
  41274d:	push   eax
  41274e:	lods   eax,DWORD PTR ds:[esi]
  41274f:	jge    0x4127a1
  412751:	lahf   
  412752:	les    ebp,FWORD PTR [ecx]
  412754:	cmovns esp,DWORD PTR [esi-0x128c517e]
  41275b:	mov    WORD PTR [ecx],?
  41275d:	adc    al,0xaf
  41275f:	div    BYTE PTR [eax-0x281054ea]
  412765:	jge    0x412730
  412767:	(bad)
  41276a:	inc    ebp
  41276b:	or     DWORD PTR [esi+0x66],ecx
  41276e:	mov    ds:0x8eb48b8,al
  412773:	fisttp QWORD PTR [ebx]
  412775:	sbb    ebx,esp
  412777:	into   
  412778:	pop    ss
  412779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277a:	ins    BYTE PTR es:[edi],dx
  41277b:	popa   
  41277c:	(bad)  
  41277d:	sar    DWORD PTR [edx+0x8480341],cl
  412783:	enter  0xd90e,0x82
  412787:	pushf  
  412788:	push   esi
  412789:	fnsave [edi]
  41278b:	in     al,dx
  41278c:	aas    
  41278d:	fild   QWORD PTR [edi]
  41278f:	mov    WORD PTR [ebx+0x2b298e60],cs
  412795:	cmp    BYTE PTR [ecx+esi*8-0x32a5f2f0],bl
  41279c:	or     cl,BYTE PTR [edx-0x3d]
  41279f:	xor    ah,BYTE PTR [ebp-0x63]
  4127a2:	adc    esp,DWORD PTR [ecx-0x18afbd96]
  4127a8:	stos   DWORD PTR es:[edi],eax
  4127a9:	cwde   
  4127aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ab:	jle    0x41279b
  4127ad:	cli    
  4127ae:	jae    0x412823
  4127b0:	data16 cmp ah,cl
  4127b3:	xor    eax,0x5a782f65
  4127b8:	out    0xfb,al
  4127ba:	mov    ch,0x77
  4127bc:	pop    ebp
  4127bd:	xlat   BYTE PTR ds:[ebx]
  4127be:	aas    
  4127bf:	mov    edx,?
  4127c1:	fadd   QWORD PTR [eax-0x1273a455]
  4127c7:	or     eax,0x4eb1522e
  4127cc:	inc    ecx
  4127cd:	sub    BYTE PTR [eax],al
  4127cf:	or     cl,BYTE PTR [esi+0x3c]
  4127d2:	and    DWORD PTR [ecx+0x62],esi
  4127d5:	cld    
  4127d6:	imul   ebp,DWORD PTR [ebx],0xffffff94
  4127d9:	push   ecx
  4127da:	shl    ebx,0x6e
  4127dd:	push   edi
  4127de:	push   0x1d
  4127e0:	push   ss
  4127e1:	push   ecx
  4127e2:	xchg   ebx,eax
  4127e3:	(bad)  
  4127e4:	or     al,0xb5
  4127e6:	xor    al,0xa9
  4127e8:	sbb    DWORD PTR [eax+0x28],esi
  4127eb:	clc    
  4127ec:	jp     0x4127bf
  4127ee:	ss icebp 
  4127f0:	or     dl,cl
  4127f2:	sub    DWORD PTR [ebx+0x5727b63d],0x77a5f544
  4127fc:	push   eax
  4127fd:	neg    DWORD PTR [esi]
  4127ff:	dec    esp
  412800:	cmp    cl,al
  412802:	inc    ebp
  412803:	xor    dl,BYTE PTR [edx+edx*4]
  412806:	mov    al,ds:0xcf7a299b
  41280b:	mov    WORD PTR [ebp+0x4f],cs
  41280e:	or     esp,edx
  412810:	cmp    eax,0xf1705482
  412815:	addr16 popa 
  412817:	add    al,0x10
  412819:	outs   dx,BYTE PTR ds:[esi]
  41281a:	pop    ds
  41281b:	inc    BYTE PTR [esi-0x52]
  41281e:	jns    0x412832
  412820:	sahf   
  412821:	and    DWORD PTR [ebx+0xbbcdb9c],0x39
  412828:	out    0xf7,al
  41282a:	fdiv   QWORD PTR [ebp+0x608eb595]
  412830:	jns    0x4127f1
  412832:	xchg   BYTE PTR [eax+0xd],bh
  412835:	imul   esi,DWORD PTR [eax+eax*8+0xb],0x8d06247
  41283d:	jae    0x412870
  41283f:	cmc    
  412840:	push   esi
  412841:	ss scas al,BYTE PTR es:[edi]
  412843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412844:	sub    BYTE PTR [edx],bl
  412846:	push   edx
  412847:	into   
  412848:	ins    DWORD PTR es:[edi],dx
  412849:	icebp  
  41284a:	(bad)  
  41284b:	ret    
  41284c:	jge    0x41289f
  41284e:	mov    ds:0xbee851bf,al
  412853:	aam    0xc3
  412855:	(bad)
  412858:	mov    edi,0xc1a3b562
  41285d:	test   bl,0xfb
  412860:	mov    eax,0xb9c939c0
  412865:	or     eax,DWORD PTR [ebx+0x37]
  412868:	pushf  
  412869:	dec    edx
  41286a:	loope  0x412863
  41286c:	sahf   
  41286d:	iret   
  41286e:	cmp    bh,dh
  412870:	xchg   ecx,eax
  412871:	cmp    cl,dl
  412873:	es pop edx
  412875:	mov    ebp,0xa8679eae
  41287a:	std    
  41287b:	nop
  41287c:	fcomp  st(6)
  41287e:	scas   eax,DWORD PTR es:[edi]
  41287f:	inc    edi
  412880:	sub    al,0x19
  412882:	xchg   esi,eax
  412883:	sub    al,0xfe
  412885:	shl    BYTE PTR [ecx+esi*1-0x36],cl
  412889:	sub    BYTE PTR [ecx],0x40
  41288c:	fdiv   st,st(4)
  41288e:	outs   dx,BYTE PTR ds:[esi]
  41288f:	mov    cl,0x41
  412891:	sbb    edx,DWORD PTR [ebx]
  412893:	or     DWORD PTR [edx+0x1c98c0cc],0xbe9a9e2d
  41289d:	icebp  
  41289e:	dec    ebp
  41289f:	repz add ebp,DWORD PTR [ebx-0x18]
  4128a3:	sub    ch,bh
  4128a5:	xchg   esp,eax
  4128a6:	sub    eax,0x2380788
  4128ab:	cmp    al,0x3f
  4128ad:	test   ebx,ebx
  4128af:	jb     0x412908
  4128b1:	fsub   st,st(5)
  4128b3:	sbb    eax,0x46f5aba0
  4128b8:	ds repnz in eax,0x11
  4128bc:	in     eax,dx
  4128bd:	in     eax,dx
  4128be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128bf:	adc    ah,BYTE PTR [esp+eiz*8]
  4128c2:	jno    0x412923
  4128c4:	fcomp  QWORD PTR [edi]
  4128c6:	ins    DWORD PTR es:[edi],dx
  4128c7:	fs inc ebx
  4128c9:	jge    0x412924
  4128cb:	dec    ebp
  4128cc:	jmp    0xc99fae11
  4128d1:	jnp    0x4128c5
  4128d3:	cs cmp al,0xba
  4128d6:	jp     0x4128dc
  4128d8:	test   BYTE PTR [esi+0x2ea5141d],cl
  4128de:	aam    0x10
  4128e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e1:	shl    BYTE PTR [esi-0x9],cl
  4128e4:	or     ebx,DWORD PTR [ebp+0x2d1ccc91]
  4128ea:	in     eax,dx
  4128eb:	pop    ss
  4128ec:	loop   0x412879
  4128ee:	outs   dx,BYTE PTR ds:[esi]
  4128ef:	mov    eax,0xfdc67a79
  4128f4:	gs leave 
  4128f6:	xchg   edx,eax
  4128f7:	sub    al,0xfc
  4128f9:	mov    ds,esp
  4128fb:	outs   dx,BYTE PTR ds:[esi]
  4128fc:	loop   0x41295a
  4128fe:	push   cs
  4128ff:	aam    0x5c
  412901:	dec    edi
  412902:	dec    esp
  412903:	pop    es
  412904:	pop    ss
  412905:	push   edi
  412906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412907:	lock push ebx
  412909:	mov    edx,0xa89468c8
  41290e:	xor    cl,bh
  412910:	mov    esp,0x790f4af
  412915:	cdq    
  412916:	es (bad) 
  412918:	out    0x6c,al
  41291a:	fbstp  TBYTE PTR [eax-0x3f]
  41291d:	mov    al,0x90
  41291f:	and    al,0x5f
  412921:	cli    
  412922:	ss inc ebx
  412924:	inc    ecx
  412925:	out    dx,eax
  412926:	sbb    edx,DWORD PTR [edx+esi*2]
  412929:	inc    esp
  41292a:	sub    bl,bl
  41292c:	or     DWORD PTR [eax],ebp
  41292e:	jno    0x41293e
  412930:	inc    esi
  412931:	sbb    DWORD PTR [ebx],eax
  412933:	adc    eax,0xc709cd11
  412938:	pop    es
  412939:	pop    ebp
  41293a:	ret    0x7191
  41293d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293e:	jmp    0x7248:0x6923a680
  412945:	icebp  
  412946:	fst    DWORD PTR [edx+eiz*2]
  412949:	cmp    DWORD PTR [ebx],eax
  41294b:	add    esp,DWORD PTR [eax]
  41294d:	jno    0x4128f5
  41294f:	inc    eax
  412950:	mov    cl,0x56
  412952:	push   cs
  412953:	sbb    al,0xee
  412955:	jb     0x412913
  412957:	push   ebx
  412958:	xchg   edx,eax
  412959:	add    ah,al
  41295b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295c:	sbb    esp,esi
  41295e:	pop    ds
  41295f:	cld    
  412960:	call   0xd60b18da
  412965:	adc    eax,0xcd883a05
  41296a:	and    BYTE PTR [ebx*1-0x764febe0],dl
  412971:	mov    cl,BYTE PTR [ebp+0x61]
  412974:	out    dx,eax
  412975:	data16 or bh,bl
  412978:	test   eax,0x61e2fabe
  41297d:	scas   al,BYTE PTR es:[edi]
  41297e:	jns    0x4129c5
  412980:	(bad)  
  412981:	int    0x1
  412983:	or     edx,ebp
  412985:	and    BYTE PTR [ebp+0x3a],dh
  412988:	or     BYTE PTR [ebp+0x2be95f4f],ch
  41298e:	cmp    ebp,eax
  412990:	in     al,dx
  412991:	jns    0x4129be
  412993:	jb     0x41293b
  412995:	arpl   ax,cx
  412997:	push   ds
  412998:	cmp    DWORD PTR [esp+ecx*8],ebx
  41299b:	add    DWORD PTR [ebp-0x5d],edx
  41299e:	sahf   
  41299f:	jne    0x4129d9
  4129a1:	dec    esp
  4129a2:	cld    
  4129a3:	jmp    0x412a22
  4129a5:	(bad)  
  4129a7:	das    
  4129a8:	shr    BYTE PTR [ebx],0xd0
  4129ab:	out    0x1c,al
  4129ad:	int    0xbf
  4129af:	ds mov dh,dl
  4129b2:	push   edx
  4129b3:	repz fdivr QWORD PTR [eax]
  4129b6:	outs   dx,BYTE PTR ds:[esi]
  4129b7:	js     0x412a0b
  4129b9:	cmp    bh,BYTE PTR [ebp-0x58482260]
  4129bf:	ror    BYTE PTR ds:0x93e9f667,1
  4129c5:	dec    ebp
  4129c6:	cmp    esi,DWORD PTR [ebp+0x65]
  4129c9:	cs out 0x7d,eax
  4129cc:	push   ecx
  4129cd:	mov    BYTE PTR [ecx],al
  4129cf:	and    eax,0xc8b92268
  4129d4:	adc    cl,bl
  4129d6:	fisub  WORD PTR [ebx-0x25]
  4129d9:	call   0x6915:0xca362481
  4129e0:	hlt    
  4129e1:	cmc    
  4129e2:	cmp    eax,0x10b15ef8
  4129e7:	xor    BYTE PTR [edx+0x17],al
  4129ea:	stos   BYTE PTR es:[edi],al
  4129eb:	or     al,0xd2
  4129ed:	stos   DWORD PTR es:[edi],eax
  4129ee:	ret    
  4129ef:	xchg   edx,eax
  4129f0:	or     ebp,ecx
  4129f2:	cdq    
  4129f3:	adc    BYTE PTR [edx-0x33959e9b],bl
  4129f9:	mov    edx,0x9317dd1f
  4129fe:	push   ecx
  4129ff:	pop    eax
  412a00:	and    BYTE PTR [edx],0x64
  412a03:	or     ebp,DWORD PTR [eax+0x12]
  412a06:	shl    bh,1
  412a08:	shl    BYTE PTR [esi-0x7b],cl
  412a0b:	sub    ebx,DWORD PTR [edx-0x63]
  412a0e:	xor    eax,0x7e00100
  412a13:	mov    ds:0x8020589d,eax
  412a18:	xor    eax,0x55a98400
  412a1d:	(bad)  
  412a1e:	adc    edx,DWORD PTR [ebx-0x710a319f]
  412a24:	push   ecx
  412a25:	loop   0x412a35
  412a27:	push   ebp
  412a28:	inc    edx
  412a29:	popa   
  412a2a:	pop    esp
  412a2b:	push   ebx
  412a2c:	xor    esi,eax
  412a2e:	lahf   
  412a2f:	int3   
  412a30:	or     ecx,DWORD PTR [esi+0x11]
  412a33:	cwde   
  412a34:	xchg   ebp,eax
  412a35:	pop    ecx
  412a36:	mov    edi,0xd3443332
  412a3b:	inc    ecx
  412a3c:	retf   0x467a
  412a3f:	sti    
  412a40:	and    ebx,DWORD PTR [esi]
  412a42:	jg     0x412a2a
  412a44:	adc    al,0x24
  412a46:	mov    WORD PTR [eax-0x60],ds
  412a49:	sbb    al,0x21
  412a4b:	jle    0x412a59
  412a4d:	mov    ebp,0x4c336bd0
  412a52:	enter  0xc180,0xe4
  412a56:	call   0x8b21:0x24638f54
  412a5d:	outs   dx,DWORD PTR ds:[esi]
  412a5e:	mov    al,0x3
  412a60:	pop    eax
  412a61:	mov    ecx,0x6af9eb49
  412a66:	add    BYTE PTR [ebx+0x6d],0xd1
  412a6a:	xchg   DWORD PTR [ecx+eax*8+0x51abc30e],edi
  412a71:	clc    
  412a72:	xchg   ebp,eax
  412a73:	cmp    al,BYTE PTR [ebx+esi*8-0x7d]
  412a77:	test   eax,0x2e3d34d0
  412a7c:	test   eax,0x32a363c8
  412a81:	sbb    ch,bl
  412a83:	dec    edi
  412a84:	imul   eax,DWORD PTR [ecx-0x47c53fc],0xe
  412a8b:	clc    
  412a8c:	shl    BYTE PTR [ebx+ecx*4-0x3f],0x0
  412a91:	sbb    bl,dl
  412a93:	iret   
  412a94:	dec    esi
  412a95:	fcom   st(4)
  412a97:	or     edx,DWORD PTR [edx+0x70]
  412a9a:	test   BYTE PTR [ebx-0x5f],al
  412a9d:	arpl   WORD PTR [ecx+eiz*8+0x4277b119],ax
  412aa4:	nop
  412aa5:	loopne 0x412ad9
  412aa7:	push   esi
  412aa8:	xor    ch,cl
  412aaa:	int3   
  412aab:	jge    0x412aa5
  412aad:	aas    
  412aae:	dec    edi
  412aaf:	jg     0x412a4f
  412ab1:	mov    edx,0xae9f23ac
  412ab6:	jb     0x412b31
  412ab8:	mov    edi,0x9a763aaf
  412abd:	jle    0x412a6f
  412abf:	jns    0x412a6e
  412ac1:	neg    BYTE PTR [ebp+0x7c824e7d]
  412ac7:	jl     0x412a67
  412ac9:	adc    al,0x68
  412acb:	in     al,0xb6
  412acd:	sti    
  412ace:	mov    dl,0x14
  412ad0:	sbb    eax,0x11e30e73
  412ad5:	xor    BYTE PTR [esi+0x1b],bh
  412ad8:	fstp   QWORD PTR [esi+ebx*2-0x4abad35f]
  412adf:	shr    DWORD PTR [ecx-0xd29f33d],1
  412ae5:	add    eax,0xd6f18c80
  412aea:	in     al,0x1c
  412aec:	fidivr DWORD PTR [eax-0x41]
  412aef:	adc    bh,BYTE PTR es:[ecx+0x1]
  412af3:	mov    edx,0x53a8f950
  412af8:	imul   ebp,DWORD PTR ds:0xe27f7187,0x7b14016d
  412b02:	mov    bh,dh
  412b04:	sub    BYTE PTR [ebx],cl
  412b06:	jns    0x412af7
  412b08:	or     BYTE PTR [esi+eiz*4],ah
  412b0b:	sbb    eax,0x30eebce7
  412b10:	add    BYTE PTR [esi+0x265d8426],ah
  412b16:	mov    ds:0xd5acf9e1,al
  412b1b:	loope  0x412ae8
  412b1d:	jns    0x412b8e
  412b1f:	test   BYTE PTR [ebx-0x6f1fb546],cl
  412b25:	ja     0x412b33
  412b27:	mov    edx,0x75bcf52e
  412b2c:	aad    0xea
  412b2e:	push   cs
  412b2f:	and    BYTE PTR [ecx+0x33],dl
  412b32:	xchg   esp,eax
  412b33:	sub    al,0xf5
  412b35:	daa    
  412b36:	inc    ebp
  412b37:	push   0xcec6d931
  412b3c:	add    eax,0x62640b2a
  412b41:	pop    ecx
  412b42:	push   ebp
  412b43:	xchg   ecx,eax
  412b44:	mov    ds:0x9619724e,eax
  412b49:	dec    edi
  412b4a:	dec    eax
  412b4b:	pop    ebp
  412b4d:	jo     0x412b3a
  412b4f:	int3   
  412b50:	repz and ebx,DWORD PTR [ecx]
  412b53:	test   DWORD PTR [ebx+0x4d],edx
  412b56:	or     eax,0x4fbf8921
  412b5b:	shr    DWORD PTR [eax-0x498b0dd6],0x9c
  412b62:	cwde   
  412b63:	out    dx,eax
  412b64:	pusha  
  412b65:	mov    al,0xc3
  412b67:	xchg   esi,esi
  412b69:	pop    es
  412b6a:	ja     0x412b43
  412b6c:	stos   BYTE PTR es:[edi],al
  412b6d:	popa   
  412b6e:	(bad)  
  412b6f:	cdq    
  412b70:	jo     0x412b83
  412b72:	rcr    DWORD PTR [esi-0x44],cl
  412b75:	sbb    al,BYTE PTR [edi-0x42]
  412b78:	daa    
  412b79:	cli    
  412b7a:	push   ebp
  412b7b:	add    BYTE PTR [edi],bl
  412b7d:	and    al,0xcf
  412b7f:	mov    bh,0xd0
  412b81:	loope  0x412b15
  412b83:	pusha  
  412b84:	bound  edx,QWORD PTR [ecx-0x75]
  412b87:	aam    0xc8
  412b89:	inc    edi
  412b8a:	ins    BYTE PTR es:[edi],dx
  412b8b:	(bad)  [ecx]
  412b8e:	cwde   
  412b8f:	arpl   WORD PTR [esi-0x1],bx
  412b92:	retf   0x4215
  412b95:	fild   QWORD PTR [edi-0x79]
  412b98:	js     0x412b4a
  412b9a:	cmc    
  412b9b:	push   ebp
  412b9c:	xchg   esi,eax
  412b9d:	(bad)  
  412b9e:	(bad)  
  412b9f:	loope  0x412bef
  412ba1:	shl    BYTE PTR [eax+0x1728d556],0x87
  412ba8:	sub    bl,bl
  412baa:	pop    ebp
  412bab:	and    eax,0x472b061b
  412bb0:	lods   eax,DWORD PTR ds:[esi]
  412bb1:	(bad)  
  412bb2:	in     al,0x4b
  412bb4:	push   ecx
  412bb5:	jl     0x412b5a
  412bb7:	sub    al,0x32
  412bb9:	loope  0x412bfd
  412bbb:	jbe    0x412b3d
  412bbd:	sbb    dl,BYTE PTR es:[ecx-0x6fb545c1]
  412bc4:	jnp    0x412b54
  412bc6:	pop    ecx
  412bc7:	cli    
  412bc8:	mov    DWORD PTR [ecx+0x123cf9b],edx
  412bce:	and    al,0x81
  412bd0:	push   cs
  412bd1:	pop    ds
  412bd2:	inc    edi
  412bd3:	xor    al,0xf4
  412bd5:	push   ss
  412bd6:	clc    
  412bd7:	dec    ecx
  412bd8:	stc    
  412bd9:	les    esi,FWORD PTR [esi+0x140d2023]
  412bdf:	sub    DWORD PTR [edi+esi*2-0x14],esp
  412be3:	add    bl,0x73
  412be6:	stos   DWORD PTR es:[edi],eax
  412be7:	pushf  
  412be8:	sub    eax,0x75a8a86f
  412bed:	push   ebp
  412bee:	push   cs
  412bef:	xlat   BYTE PTR ds:[ebx]
  412bf0:	ins    DWORD PTR es:[edi],dx
  412bf1:	jno    0x412c3d
  412bf3:	mov    ch,0x70
  412bf5:	sub    BYTE PTR [ebx],bl
  412bf7:	addr16 mov ds:0x84dd,al
  412bfb:	call   0xd24c2a07
  412c00:	loopne 0x412c23
  412c02:	stos   BYTE PTR es:[edi],al
  412c03:	(bad)  
  412c04:	cmp    eax,0x635a1fdc
  412c09:	fidiv  WORD PTR [ebx]
  412c0b:	mov    al,0xfd
  412c0d:	jno    0x412c73
  412c0f:	outs   dx,BYTE PTR ds:[esi]
  412c10:	xchg   esi,eax
  412c11:	mov    ds:0xa435f5c5,al
  412c16:	or     ecx,eax
  412c18:	mov    DWORD PTR [edx],0x787ae298
  412c1e:	hlt    
  412c1f:	ja     0x412c2c
  412c21:	cmp    DWORD PTR [eax+ebp*1+0x64],0x850ba9b
  412c29:	mov    al,ds:0xab488883
  412c2e:	push   edx
  412c2f:	mov    ds:0x3987cd96,eax
  412c34:	fcmovne st,st(1)
  412c36:	ss je  0x412c71
  412c39:	jmp    0xc77e:0x8f053224
  412c40:	mov    ch,0xfd
  412c42:	fnstsw WORD PTR [esi-0x3a]
  412c45:	xchg   ebp,eax
  412c46:	pop    ss
  412c47:	dec    ecx
  412c48:	and    BYTE PTR [esi],al
  412c4a:	mov    cl,0x18
  412c4c:	sar    BYTE PTR [edi+esi*4+0x32aae7b7],0x97
  412c54:	or     dl,BYTE PTR [esp+eax*2-0x6]
  412c58:	push   ss
  412c59:	fisub  DWORD PTR [ecx+0x0]
  412c5c:	push   cs
  412c5d:	out    0xf6,eax
  412c5f:	jp     0x412c6d
  412c61:	pop    ds
  412c62:	call   0xf0a0:0x62aeba4
  412c69:	(bad)  
  412c6a:	repnz adc ecx,DWORD PTR [edx+0x4d]
  412c6e:	call   0x8450f298
  412c73:	jmp    0x412c67
  412c75:	scas   al,BYTE PTR es:[edi]
  412c76:	add    al,0xea
  412c78:	pop    es
  412c79:	cmp    dh,BYTE PTR [edi]
  412c7b:	aam    0xae
  412c7d:	fstp   TBYTE PTR [esi+0x1d]
  412c80:	rol    BYTE PTR [ebx+0x15],1
  412c83:	or     ebp,ebp
  412c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c86:	into   
  412c87:	ja     0x412c93
  412c89:	pushf  
  412c8a:	add    eax,0x4779f09d
  412c8f:	popa   
  412c90:	fs or  al,0xd3
  412c93:	fldcw  WORD PTR [eax-0x7a]
  412c96:	jle    0x412cf0
  412c98:	lock ins DWORD PTR es:[edi],dx
  412c9a:	inc    ebp
  412c9b:	dec    ebp
  412c9c:	cli    
  412c9d:	outs   dx,DWORD PTR ds:[esi]
  412c9e:	jbe    0x412cc6
  412ca0:	xor    BYTE PTR [ebx],ah
  412ca2:	adc    eax,0x23c90ab
  412ca7:	out    0x72,eax
  412ca9:	add    ebx,DWORD PTR [ebx-0x14]
  412cac:	pop    es
  412cad:	sahf   
  412cae:	imul   esp,DWORD PTR [eax+0x763f49f1],0x89cb1abd
  412cb8:	pop    ebx
  412cb9:	fdiv   DWORD PTR [ecx]
  412cbb:	aam    0x99
  412cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cbe:	mov    dl,0x45
  412cc0:	retf   0x4482
  412cc3:	in     al,dx
  412cc4:	jle    0x412d39
  412cc6:	mov    dl,dl
  412cc8:	repz jnp 0x412cd1
  412ccb:	adc    eax,0x4fa1bd7e
  412cd0:	(bad)  
  412cd1:	xor    ch,bl
  412cd3:	test   DWORD PTR [edx],edx
  412cd5:	or     ch,ch
  412cd7:	add    eax,0x225c8d48
  412cdc:	xchg   BYTE PTR [ebx],dh
  412cde:	test   eax,0x83d8b36b
  412ce3:	inc    eax
  412ce4:	outs   dx,BYTE PTR ds:[esi]
  412ce5:	das    
  412ce6:	shr    bh,1
  412ce8:	clc    
  412ce9:	fidiv  WORD PTR es:[edi-0x2b311d61]
  412cf0:	inc    esp
  412cf1:	loop   0x412cf4
  412cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf4:	mov    ah,0xcd
  412cf6:	xlat   BYTE PTR ds:[ebx]
  412cf7:	push   ebp
  412cf8:	mov    bl,0xef
  412cfa:	dec    ecx
  412cfb:	jg     0x412d0e
  412cfd:	inc    ebx
  412cfe:	xor    ecx,DWORD PTR [ecx]
  412d00:	xchg   edi,eax
  412d01:	mov    al,BYTE PTR [edx+0x79]
  412d04:	xor    dl,BYTE PTR [eax-0x28]
  412d07:	outs   dx,BYTE PTR ds:[esi]
  412d08:	xor    al,0xc3
  412d0a:	das    
  412d0b:	push   esi
  412d0c:	dec    ecx
  412d0d:	xor    DWORD PTR [eax],0xa72a07fe
  412d13:	sub    DWORD PTR [esi+0x72e81b39],ebx
  412d19:	in     eax,dx
  412d1a:	push   es
  412d1b:	mov    ah,0x41
  412d1d:	adc    al,0x44
  412d1f:	mov    al,0x6b
  412d21:	xor    BYTE PTR [ebx],cl
  412d23:	cmp    eax,DWORD PTR [ecx+0x7192802e]
  412d29:	stos   DWORD PTR es:[edi],eax
  412d2a:	call   0xce6885d4
  412d2f:	and    eax,0xd2c48d97
  412d34:	jp     0x412cee
  412d36:	ja     0x412cd9
  412d38:	imul   ebx,DWORD PTR [ecx],0x4
  412d3b:	ret    
  412d3c:	pop    ecx
  412d3d:	mov    edi,0x913e6c7
  412d42:	jecxz  0x412d0e
  412d44:	push   cs
  412d45:	popf   
  412d46:	pop    es
  412d47:	cli    
  412d48:	aad    0x7
  412d4a:	sbb    al,0x8
  412d4c:	pop    ds
  412d4d:	push   ebx
  412d4e:	dec    eax
  412d4f:	sub    eax,DWORD PTR [esi-0x28e2295e]
  412d55:	lahf   
  412d56:	popf   
  412d57:	out    0xd,al
  412d59:	push   eax
  412d5a:	repz jns 0x412db9
  412d5d:	idiv   DWORD PTR [edx+0x2175f52b]
  412d63:	dec    ebx
  412d64:	out    dx,eax
  412d65:	cwde   
  412d66:	clc    
  412d67:	inc    esi
  412d68:	aaa    
  412d69:	es push edi
  412d6b:	inc    esi
  412d6c:	jb     0x412dd1
  412d6e:	dec    edx
  412d6f:	cmp    cl,BYTE PTR [edx-0x251c56a7]
  412d75:	fwait
  412d76:	adc    bl,BYTE PTR [edi+0x334d387d]
  412d7c:	fdiv   QWORD PTR [esi-0x34171a4c]
  412d82:	repnz sub DWORD PTR [edx],esp
  412d85:	mov    DWORD PTR [ebx+0x33eef4f2],edi
  412d8b:	cmp    eax,DWORD PTR [edx+0x1f06e1f3]
  412d91:	pop    ecx
  412d92:	push   esp
  412d93:	jnp    0x412d28
  412d95:	or     al,al
  412d97:	stos   BYTE PTR es:[edi],al
  412d98:	fwait
  412d99:	(bad)  
  412d9a:	int3   
  412d9b:	mov    cl,0x4d
  412d9d:	inc    eax
  412d9e:	imul   ecx,DWORD PTR [eax+0x27],0xffffffa2
  412da2:	ret    0xc05b
  412da5:	inc    esi
  412da6:	xchg   BYTE PTR [esi+esi*8+0x43],ch
  412daa:	loope  0x412d3c
  412dac:	add    bl,BYTE PTR [ecx+0x43]
  412daf:	sbb    eax,0xe828d3da
  412db4:	ja     0x412dd6
  412db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db7:	leave  
  412db8:	inc    ecx
  412db9:	lds    esp,FWORD PTR es:[ebx-0x62]
  412dbd:	mov    esi,0x36be89ea
  412dc2:	pushf  
  412dc3:	loop   0x412d4d
  412dc5:	xor    al,0xa6
  412dc7:	iret   
  412dc8:	sahf   
  412dc9:	gs leave 
  412dcb:	int3   
  412dcc:	add    BYTE PTR [esi],ah
  412dce:	js     0x412e3a
  412dd0:	dec    edx
  412dd1:	stc    
  412dd2:	sub    eax,0x842676a0
  412dd7:	jecxz  0x412df4
  412dd9:	xlat   BYTE PTR ds:[ebx]
  412dda:	test   eax,0x1b39552c
  412ddf:	push   eax
  412de0:	arpl   cx,di
  412de2:	sbb    eax,0x5363c97
  412de7:	xchg   DWORD PTR [eax-0x2c2997d9],edx
  412ded:	dec    edi
  412dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412def:	gs sub eax,0x1cc883ce
  412df5:	div    BYTE PTR ds:0x384c4798
  412dfb:	adc    eax,0x8701ab1d
  412e00:	rcl    DWORD PTR [ecx+0x32],0xc8
  412e04:	add    ah,BYTE PTR [eax]
  412e06:	sub    DWORD PTR [eax+ebp*8],0x3
  412e0a:	mov    ah,0x29
  412e0c:	jo     0x412e39
  412e0e:	nop
  412e0f:	xor    cl,BYTE PTR [esi]
  412e11:	sub    DWORD PTR [ebx],eax
  412e13:	mov    al,0xe8
  412e15:	stc    
  412e16:	and    DWORD PTR [ecx],0x41
  412e19:	sbb    eax,0xae0416e8
  412e1e:	push   edi
  412e1f:	(bad)  
  412e20:	mov    eax,0x9c45e3ad
  412e25:	jg     0x412e8f
  412e27:	mov    esi,0xb11be3a
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	lahf   
  412e2e:	adc    esp,DWORD PTR [ebx]
  412e30:	push   esi
  412e31:	jmp    0x382ccd97
  412e36:	stc    
  412e37:	repnz push esi
  412e39:	dec    edx
  412e3a:	pop    edx
  412e3b:	xchg   ebx,eax
  412e3c:	push   eax
  412e3d:	fsub   QWORD PTR [ebx+0x6c9a083d]
  412e43:	xchg   DWORD PTR [ebp+0x72],esi
  412e46:	sub    al,0xec
  412e48:	push   ebp
  412e49:	add    eax,0xb907bfac
  412e4e:	cmp    DWORD PTR [edi],eax
  412e50:	stos   BYTE PTR es:[edi],al
  412e51:	rol    DWORD PTR [ebx+0x6],0x11
  412e55:	cwde   
  412e56:	xchg   esp,eax
  412e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e58:	dec    edx
  412e59:	mov    al,ds:0xde4a804b
  412e5e:	xor    cl,BYTE PTR [esi+0x96d096e]
  412e64:	pop    esp
  412e65:	(bad)  [ecx+0x436698f8]
  412e6b:	mov    ebx,0x8ddfae5f
  412e70:	adc    BYTE PTR [ecx+esi*2-0x2],al
  412e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e75:	les    edi,FWORD PTR [ecx-0x4]
  412e78:	jb     0x412e3b
  412e7a:	adc    al,0x63
  412e7c:	mov    ch,0x2
  412e7e:	inc    esi
  412e7f:	lods   al,BYTE PTR ds:[esi]
  412e80:	das    
  412e81:	test   eax,0x96c1ea65
  412e86:	sub    DWORD PTR [eax+0x6d3db36e],esp
  412e8c:	sqrtps xmm3,XMMWORD PTR [edx]
  412e8f:	cmp    BYTE PTR [eax],dh
  412e91:	(bad)  
  412e92:	jl     0x412e62
  412e94:	pushf  
  412e95:	mov    dl,0x58
  412e97:	mov    esi,0x45b8f2b6
  412e9c:	fisubr DWORD PTR [eax-0x1b4a0c3f]
  412ea2:	mov    ah,0xe
  412ea4:	daa    
  412ea5:	sbb    DWORD PTR [eax],ecx
  412ea7:	mov    ah,0x9b
  412ea9:	mov    ebx,0x2ddefa44
  412eae:	add    eax,0xff87f739
  412eb3:	in     eax,dx
  412eb4:	push   es
  412eb5:	xchg   edi,eax
  412eb6:	mov    dh,0x3b
  412eb8:	dec    ebx
  412eb9:	sub    BYTE PTR [edx-0x79],0x2b
  412ebd:	ret    
  412ebe:	adc    cl,BYTE PTR [edx]
  412ec0:	mov    cl,BYTE PTR [edx+0x45]
  412ec3:	cmp    edx,ebp
  412ec5:	xor    bl,bl
  412ec7:	mov    ebp,0xe3d663ec
  412ecc:	lahf   
  412ecd:	call   0xd2ef:0xc02370e8
  412ed4:	sub    al,0x6c
  412ed6:	cli    
  412ed7:	mov    edx,0xe0e1b064
  412edc:	into   
  412edd:	dec    ebx
  412ede:	(bad)  
  412edf:	out    0x33,eax
  412ee1:	inc    ebx
  412ee2:	popa   
  412ee3:	dec    esp
  412ee4:	cmc    
  412ee5:	jmp    0xbed3:0x9b42e9dd
  412eec:	jnp    0x412f0b
  412eee:	(bad)  
  412eef:	mov    eax,0x34722a41
  412ef4:	jmp    0x412e9a
  412ef6:	mov    es,edx
  412ef8:	add    ah,BYTE PTR [ebp-0x7ea21e06]
  412efe:	push   esp
  412eff:	cmp    DWORD PTR ds:0x790962c7,0xffffffe3
  412f06:	jo     0x412efc
  412f08:	mov    cl,0xc4
  412f0a:	dec    esi
  412f0b:	xor    DWORD PTR [ecx-0x1fe2f046],ebp
  412f11:	push   cs
  412f12:	pop    edi
  412f13:	push   edx
  412f14:	push   0xf3d008f0
  412f19:	fld    TBYTE PTR [ebx+ebx*2]
  412f1c:	mov    dl,0x61
  412f1e:	sub    al,0x32
  412f20:	inc    edi
  412f21:	adc    esi,eax
  412f23:	mov    ebx,DWORD PTR [ebx+0x23fe8886]
  412f29:	loope  0x412ed3
  412f2b:	lods   eax,DWORD PTR ds:[esi]
  412f2c:	xchg   edx,eax
  412f2d:	add    BYTE PTR [ebx+0x5b],dl
  412f30:	add    BYTE PTR [ecx+0x7e],0x9
  412f34:	fld    QWORD PTR [ebp+0x2f451681]
  412f3a:	and    eax,DWORD PTR [eax-0x3e]
  412f3d:	repnz sahf 
  412f3f:	inc    edx
  412f40:	ret    
  412f41:	jo     0x412f1e
  412f43:	mov    dh,0x94
  412f45:	adc    eax,DWORD PTR [ecx-0x67731d2d]
  412f4b:	fidivr WORD PTR [eax+0x15ea83d2]
  412f51:	(bad)  
  412f52:	lds    ecx,FWORD PTR [ebx-0x9]
  412f55:	imul   BYTE PTR [eax]
  412f57:	into   
  412f58:	cmp    bl,BYTE PTR [eax]
  412f5a:	fisubr WORD PTR [ebp-0x48]
  412f5d:	jae    0x412fcf
  412f5f:	(bad)  
  412f60:	pop    eax
  412f61:	retf   0x876b
  412f64:	sub    BYTE PTR [edx],al
  412f66:	mov    ch,0x99
  412f68:	mov    edx,0xee083e9
  412f6d:	adc    eax,0xafbc3a84
  412f72:	jl     0x412fbc
  412f74:	mov    cl,BYTE PTR [edi-0x4cb11853]
  412f7a:	inc    BYTE PTR [esi+0x4c8b9a8f]
  412f80:	sub    eax,0xf5245e8
  412f85:	and    ebp,ebx
  412f87:	rcl    DWORD PTR [esi+0x202a9709],0xda
  412f8e:	mov    bh,0xf4
  412f90:	mov    edx,0x1a28bca4
  412f95:	pop    ebp
  412f96:	mov    ecx,0x1d616e7e
  412f9b:	sub    al,0xd6
  412f9d:	int3   
  412f9e:	cmc    
  412f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fa0:	enter  0xdd8c,0xfc
  412fa4:	sub    eax,eax
  412fa6:	ds (bad) 
  412fa9:	mov    edx,0x73f9ff18
  412fae:	inc    ebp
  412faf:	xor    al,0x14
  412fb1:	in     al,0x29
  412fb3:	push   esi
  412fb4:	popf   
  412fb5:	mov    ecx,0xec5da452
  412fba:	ja     0x412fc9
  412fbc:	dec    ebx
  412fbd:	loopne 0x412ffd
  412fbf:	add    al,0xe1
  412fc1:	mov    eax,0xe178eb8d
  412fc6:	lock jnp 0x41302d
  412fc9:	push   ebx
  412fca:	cmp    BYTE PTR [esi+0x7a],0x56
  412fce:	or     eax,edi
  412fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd1:	imul   edx,eax,0xffffff93
  412fd4:	aaa    
  412fd5:	xchg   ecx,eax
  412fd6:	es cmp eax,0xe84577b1
  412fdc:	ret    
  412fdd:	dec    ecx
  412fde:	inc    esi
  412fdf:	sar    ebp,0x58
  412fe2:	loop   0x41303d
  412fe4:	mov    al,ds:0x3e5b72d8
  412fe9:	mov    ebp,edi
  412feb:	(bad)  
  412fec:	cwde   
  412fed:	adc    DWORD PTR [edx+esi*8],ebx
  412ff0:	in     eax,0x5d
  412ff2:	cmc    
  412ff3:	mov    ecx,0xeff7fe87
  412ff8:	dec    edi
  412ff9:	pushf  
  412ffa:	xchg   ebp,eax
  412ffb:	ja     0x412ff9
  412ffd:	pop    eax
  412ffe:	push   edi
  412fff:	shr    BYTE PTR [ebp-0x12],0x40
  413003:	mov    BYTE PTR [edx+0x18],al
  413006:	and    al,0x7a
  413008:	push   ecx
  413009:	adc    BYTE PTR [ebx+0x20],cl
  41300c:	fbld   TBYTE PTR [esi]
  41300e:	lock pop edx
  413010:	loopne 0x413051
  413012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413013:	sbb    eax,0x41b5a262
  413018:	test   BYTE PTR [ebx],dl
  41301a:	mov    ds:0xe3abc08,al
  41301f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413020:	ins    DWORD PTR es:[edi],dx
  413021:	(bad)  
  413023:	sbb    edx,DWORD PTR [eax-0x248fef32]
  413029:	adc    al,BYTE PTR [eax-0x2c]
  41302c:	popw   ss
  41302e:	add    al,al
  413030:	pop    eax
  413031:	xor    DWORD PTR [edx+0x1442053e],edi
  413037:	mov    edx,0xbb30f4c9
  41303c:	jmp    0x4130b8
  41303e:	(bad)  
  41303f:	jne    0x41305e
  413041:	repz sbb eax,DWORD PTR [edi-0x64dbcec7]
  413048:	popa   
  413049:	inc    DWORD PTR [edi-0x34]
  41304c:	test   BYTE PTR [esi+0x64],bl
  41304f:	outs   dx,DWORD PTR ds:[esi]
  413050:	out    0x15,eax
  413052:	adc    DWORD PTR [edx+ebx*4],ebx
  413055:	or     eax,0x20936a9
  41305a:	es mov bh,0x35
  41305d:	(bad)  
  41305e:	jmp    0x41309c
  413060:	std    
  413061:	call   0x92e9:0xbdfad422
  413068:	cdq    
  413069:	jae    0x4130b7
  41306b:	nop
  41306c:	stos   BYTE PTR es:[edi],al
  41306d:	sbb    BYTE PTR [ecx-0x73],bh
  413070:	sub    ecx,DWORD PTR [eax-0x53d4979b]
  413076:	js     0x4130c3
  413078:	jmp    FWORD PTR [esi-0x69156d44]
  41307e:	jp     0x4130f5
  413080:	ins    BYTE PTR es:[edi],dx
  413081:	pusha  
  413082:	pop    ss
  413083:	xchg   ebx,eax
  413084:	adc    BYTE PTR [ecx+0x29609022],ah
  41308a:	iret   
  41308b:	jg     0x41309f
  41308d:	adc    DWORD PTR [eax+0x3ebeb332],ebp
  413093:	push   ds
  413094:	out    dx,al
  413095:	scas   al,BYTE PTR es:[edi]
  413096:	add    bl,BYTE PTR [edi-0x55eaa9a3]
  41309c:	sbb    eax,0x639635a4
  4130a1:	xchg   BYTE PTR [ebp+edx*4-0x2b],bl
  4130a5:	cwde   
  4130a6:	mov    ds:0xc3892c39,al
  4130ab:	fstp   QWORD PTR [edi+0x62c88b6b]
  4130b1:	and    BYTE PTR [ebp+0x1c],0x47
  4130b5:	xchg   edx,eax
  4130b6:	push   0x28cca017
  4130bb:	xchg   ecx,eax
  4130bc:	aad    0xab
  4130be:	call   0x53ef1569
  4130c3:	xchg   ebx,eax
  4130c4:	jg     0x4130c9
  4130c6:	sub    BYTE PTR [ebp+0x19],al
  4130c9:	pop    es
  4130ca:	mov    ah,0x3b
  4130cd:	mov    ds:0x63397082,eax
  4130d2:	aaa    
  4130d3:	mov    eax,DWORD PTR [edi+edx*2]
  4130d6:	jno    0x4130ed
  4130d8:	cwde   
  4130d9:	sub    DWORD PTR [eax-0x40a16e13],0xffffffc3
  4130e0:	aad    0x5a
  4130e2:	pop    eax
  4130e3:	pusha  
  4130e4:	test   ch,bh
  4130e6:	fnsave [edi-0x19]
  4130e9:	int3   
  4130ea:	sbb    BYTE PTR [edx+0x23],ah
  4130ed:	add    ecx,eax
  4130ef:	call   0x4395:0x8a788
  4130f6:	mov    esi,0xc989fae
  4130fb:	test   eax,0xaa8965de
  413100:	sub    eax,0xbf493ea7
  413105:	jne    0x413180
  413107:	mov    esi,0x91344edf
  41310c:	and    DWORD PTR [edi+0x39],0x9d9f6e8c
  413113:	sub    al,0x8
  413115:	and    eax,0x4e89f142
  41311a:	push   ebp
  41311b:	dec    ebp
  41311c:	fdivr  DWORD PTR [ebx-0x3d794b1]
  413122:	int    0xec
  413124:	mov    bl,0x36
  413126:	retf   0x8c00
  413129:	cmp    dl,cl
  41312b:	retf   
  41312c:	and    cl,BYTE PTR [ebx-0x6]
  41312f:	or     cl,ch
  413131:	dec    BYTE PTR cs:[eax+0x3f]
  413135:	inc    BYTE PTR ds:0x20768916
  41313b:	xchg   ecx,eax
  41313c:	leave  
  41313d:	or     BYTE PTR [edi+0x5b],dh
  413140:	rcr    DWORD PTR [ebp+0x20],0x83
  413144:	shl    DWORD PTR [edi-0x47fd22ad],0x63
  41314b:	cmp    edx,DWORD PTR [eax]
  41314d:	sub    BYTE PTR [esi+ebx*8+0x70de71fe],al
  413154:	inc    edx
  413155:	test   al,0x5d
  413157:	mov    esp,0xf77c3e22
  41315c:	pop    ds
  41315d:	js     0x4130f7
  41315f:	push   ecx
  413160:	call   0xbcbc:0xeb9f2f20
  413167:	bound  esp,QWORD PTR [ebp+0x74400a65]
  41316d:	sbb    DWORD PTR [eax],ebp
  41316f:	dec    edx
  413170:	mov    dh,0x6
  413172:	ins    DWORD PTR es:[edi],dx
  413173:	cdq    
  413174:	enter  0x81b6,0xc
  413178:	cmp    DWORD PTR [esi],edx
  41317a:	push   DWORD PTR [edx]
  41317c:	mov    ch,0x20
  41317e:	pop    DWORD PTR [eax]
  413180:	sbb    BYTE PTR [esi-0x2c91f112],bh
  413186:	hlt    
  413187:	fisubr DWORD PTR [ebp-0x42]
  41318a:	push   ebp
  41318b:	inc    esp
  41318c:	cmp    DWORD PTR [ecx],ebx
  41318e:	sub    dl,bl
  413190:	pusha  
  413191:	xor    al,0xb7
  413193:	fisub  WORD PTR [ebx+0x4d65eb6f]
  413199:	jp     0x41317f
  41319b:	add    al,0x82
  41319d:	sub    bl,BYTE PTR [ebp-0x79]
  4131a0:	sub    cl,BYTE PTR [esi+esi*1-0xb6cabd7]
  4131a7:	mov    es:0x3ae38f51,eax
  4131ad:	dec    eax
  4131ae:	imul   ecx,DWORD PTR ds:0xf4ae6360,0xffffff9e
  4131b5:	inc    esi
  4131b6:	iret   
  4131b7:	dec    esp
  4131b8:	xor    eax,0x6b45e7b4
  4131bd:	ss mov al,gs:0xa3c1c4a8
  4131c4:	mov    dh,0x77
  4131c6:	xchg   esi,eax
  4131c7:	leave  
  4131c8:	(bad)  
  4131c9:	out    dx,eax
  4131ca:	sbb    eax,0x474a2b42
  4131cf:	aam    0x2d
  4131d1:	(bad)  
  4131d2:	enter  0xe4f4,0x36
  4131d6:	dec    edi
  4131d7:	fdivr  st,st(0)
  4131d9:	call   0xb534:0x54dfb435
  4131e0:	in     eax,dx
  4131e1:	and    al,cl
  4131e3:	xchg   esp,eax
  4131e4:	xchg   DWORD PTR [edx+esi*2-0x1ec22157],ebp
  4131eb:	nop
  4131ec:	outs   dx,DWORD PTR ds:[esi]
  4131ed:	mov    WORD PTR [edi],ss
  4131ef:	int3   
  4131f0:	pop    es
  4131f1:	fwait
  4131f2:	dec    eax
  4131f3:	pusha  
  4131f4:	jecxz  0x413272
  4131f6:	sub    DWORD PTR [eax-0x33],0xdfd5b4bd
  4131fd:	neg    DWORD PTR [edi-0x521f33f]
  413203:	inc    eax
  413204:	jle    0x41325c
  413206:	fldcw  WORD PTR [ebx-0x97ade47]
  41320c:	mov    dl,0xa3
  41320e:	ror    DWORD PTR [eax],0xdb
  413211:	and    eax,0xa2f015c1
  413216:	sbb    DWORD PTR [ebx],0xdb9d0916
  41321c:	mov    esi,0xd91c6584
  413221:	ficomp WORD PTR [ebx-0x3490c648]
  413227:	scas   eax,DWORD PTR es:[edi]
  413228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413229:	push   0x46afcd29
  41322e:	sbb    DWORD PTR [ebx-0x58],esi
  413231:	fsubr  QWORD PTR [eax]
  413233:	aam    0x83
  413235:	dec    ecx
  413236:	stos   BYTE PTR es:[edi],al
  413237:	add    BYTE PTR [ebp+0x69],bl
  41323a:	jecxz  0x4131fd
  41323c:	das    
  41323d:	add    al,0x44
  41323f:	lds    ebx,FWORD PTR [esi]
  413241:	push   edi
  413242:	imul   ecx,DWORD PTR [esi-0x53a6d86e],0x6944aad8
  41324c:	lods   eax,DWORD PTR ds:[esi]
  41324d:	inc    esp
  41324e:	mov    eax,ds:0xe9958988
  413253:	fdivr  QWORD PTR ds:0x1e70c77e
  413259:	pop    edx
  41325a:	inc    ebp
  41325b:	jae    0x4132c8
  41325d:	jle    0x413276
  41325f:	jo     0x41321f
  413261:	addr16 int 0x3f
  413264:	test   DWORD PTR [edx+edi*4+0x309919a5],0xfa9084f5
  41326f:	pop    esp
  413270:	mov    eax,ds:0x5c3e39b3
  413275:	mov    ch,0xb6
  413277:	mov    ecx,0x80bae057
  41327c:	xor    DWORD PTR [ebp+0x35],eax
  41327f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413280:	mov    al,ds:0xa6b6524a
  413285:	push   ecx
  413286:	inc    BYTE PTR [ebx+esi*8]
  413289:	xchg   edi,eax
  41328a:	add    DWORD PTR [eax+0x3f364923],esi
  413290:	inc    esp
  413291:	xlat   BYTE PTR ds:[ebx]
  413292:	xor    edx,DWORD PTR [eax-0x72e9e413]
  413298:	dec    BYTE PTR [edx-0x30d73806]
  41329e:	rol    BYTE PTR [esi-0x65f9c972],cl
  4132a4:	and    al,0xff
  4132a6:	rcl    DWORD PTR [esi-0x51],1
  4132a9:	jno    0x413285
  4132ab:	add    DWORD PTR [eax],ebp
  4132ad:	addr16 addr16 pop eax
  4132b0:	push   esp
  4132b1:	test   al,0x8c
  4132b3:	addr16 pop ecx
  4132b5:	(bad)  [ecx]
  4132b7:	pop    eax
  4132b8:	test   ebp,edx
  4132ba:	xor    al,BYTE PTR [esi]
  4132bc:	xlat   BYTE PTR ds:[ebx]
  4132bd:	push   edx
  4132be:	mov    al,0xbc
  4132c0:	mov    ds:0x3ccd165f,eax
  4132c5:	lods   al,BYTE PTR ds:[esi]
  4132c6:	mov    ecx,0x56da675
  4132cb:	shr    esp,1
  4132cd:	inc    ebx
  4132ce:	cld    
  4132cf:	cmc    
  4132d0:	mov    bl,BYTE PTR [esi-0x799efe9c]
  4132d6:	cld    
  4132d7:	add    edi,DWORD PTR [ebx+0x7bfdd30d]
  4132dd:	cmp    DWORD PTR [ebx],edi
  4132df:	mov    eax,0xa17695f1
  4132e4:	xchg   ebx,eax
  4132e5:	addr16 cdq 
  4132e7:	in     eax,dx
  4132e8:	stos   DWORD PTR es:[edi],eax
  4132e9:	movlps xmm6,QWORD PTR [eax]
  4132ec:	test   DWORD PTR [ebx+edx*2],edx
  4132ef:	adc    al,0xfd
  4132f1:	cmp    ecx,ecx
  4132f3:	jbe    0x41333f
  4132f5:	ss daa 
  4132f7:	leave  
  4132f8:	jne    0x41328b
  4132fa:	rcr    BYTE PTR [edi+0x4f3ffbc1],0x3d
  413301:	cmp    ebp,DWORD PTR [ecx]
  413303:	test   BYTE PTR [ebx],0x11
  413306:	mov    al,ds:0xdb638369
  41330b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330c:	adc    DWORD PTR [esi+0x624809a0],ebp
  413312:	sbb    al,BYTE PTR [ebp+edx*8-0x8671261]
  413319:	pop    es
  41331a:	cdq    
  41331b:	push   0x2e
  41331d:	add    BYTE PTR [eax+0x79dc863d],0xc2
  413324:	pop    ecx
  413325:	mov    eax,ds:0xd47b85d1
  41332a:	push   ebx
  41332b:	sbb    DWORD PTR [edx],edi
  41332d:	dec    ecx
  41332e:	les    ebp,FWORD PTR [esi-0x2c]
  413331:	cmp    ebp,edx
  413333:	leave  
  413334:	pop    ss
  413335:	sti    
  413336:	in     al,dx
  413337:	shl    DWORD PTR [edx],1
  413339:	imul   esp,DWORD PTR [ebx+0x7c],0xad9a944a
  413340:	mov    edx,0x2630aac
  413345:	inc    ebp
  413346:	fsub   DWORD PTR fs:[eax+0x55]
  41334a:	fld    DWORD PTR [ebx+0x3a]
  41334d:	lds    esi,FWORD PTR [ecx-0x18d07c49]
  413353:	xchg   BYTE PTR [eax+ecx*4],dl
  413356:	xor    ebx,edx
  413358:	pushf  
  413359:	adc    al,0xbc
  41335b:	shr    DWORD PTR [ecx+0x1d4cffa9],0x5d
  413362:	and    BYTE PTR [ecx-0x44d7de47],bl
  413368:	icebp  
  413369:	push   0x3867dbda
  41336e:	sub    al,BYTE PTR [ebx]
  413370:	pop    ebp
  413371:	lahf   
  413372:	jns    0x41334d
  413374:	lods   al,BYTE PTR ds:[esi]
  413375:	es cmc 
  413377:	cwde   
  413378:	ret    0xd8c6
  41337b:	cld    
  41337c:	imul   edx,DWORD PTR [edi-0x48],0xffffffa5
  413380:	jecxz  0x413344
  413382:	jg     0x41333d
  413384:	cld    
  413385:	out    dx,al
  413386:	fst    DWORD PTR [edi-0x425bee77]
  41338c:	push   ecx
  41338d:	or     ecx,ebx
  41338f:	mov    ds:0x925a0b3,eax
  413394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413395:	dec    edx
  413396:	gs popf 
  413398:	popa   
  413399:	repz pop edi
  41339b:	lods   eax,DWORD PTR ds:[esi]
  41339c:	sti    
  41339d:	mov    ebx,0x1fae9a1b
  4133a2:	cmp    al,0x2c
  4133a4:	fild   DWORD PTR [edi-0x4e]
  4133a7:	inc    esp
  4133a8:	out    dx,al
  4133a9:	test   BYTE PTR [eax-0x2d],al
  4133ac:	(bad)  
  4133ad:	mov    esi,0x70a1908a
  4133b2:	fstp   TBYTE PTR [edx+edi*1]
  4133b5:	cs pop es
  4133b7:	test   BYTE PTR [ebp-0x1384957d],cl
  4133bd:	imul   BYTE PTR [edx]
  4133bf:	(bad)  
  4133c0:	sub    eax,0xfa45d59
  4133c5:	fidiv  WORD PTR [eax+eax*8]
  4133c8:	sahf   
  4133c9:	xor    al,0x6
  4133cb:	push   ds
  4133cc:	or     eax,0x2d0b577f
  4133d1:	sbb    al,BYTE PTR [eax-0x2f]
  4133d4:	cmp    al,0x59
  4133d6:	xchg   edi,eax
  4133d7:	cmp    DWORD PTR [edi-0x77],ebx
  4133da:	jb     0x4133fc
  4133dc:	dec    esp
  4133dd:	shr    BYTE PTR [ebp-0x44570a09],cl
  4133e3:	out    0x4,al
  4133e5:	pop    ebx
  4133e6:	xor    eax,0x8a0142ab
  4133eb:	mov    bl,0x51
  4133ed:	push   ecx
  4133ee:	test   eax,0xcbb2c2cd
  4133f3:	push   esp
  4133f4:	dec    ebx
  4133f5:	mov    dl,0x64
  4133f7:	sbb    al,0x4d
  4133f9:	popf   
  4133fa:	(bad)  
  4133fb:	in     al,0xa5
  4133fd:	popf   
  4133fe:	or     BYTE PTR [edx-0x67],0x5c
  413402:	(bad)  
  413404:	mov    edx,0xf7ae7a4b
  413409:	int3   
  41340a:	cmp    esp,DWORD PTR [eax]
  41340c:	jecxz  0x41343b
  41340e:	or     ecx,ecx
  413410:	outs   dx,DWORD PTR ds:[esi]
  413411:	int3   
  413412:	out    0xbf,eax
  413414:	test   DWORD PTR [esi-0x711a140f],ecx
  41341a:	jle    0x4133cc
  41341c:	test   BYTE PTR [edi-0x51c92447],0x70
  413423:	loop   0x41340d
  413425:	ins    BYTE PTR es:[edi],dx
  413426:	sub    BYTE PTR [ecx],cl
  413428:	lds    ecx,FWORD PTR [ebp+0x1a]
  41342b:	or     DWORD PTR [esi],0x22237444
  413431:	ret    
  413432:	ins    DWORD PTR es:[edi],dx
  413433:	push   0xffffffee
  413435:	lea    ecx,ss:[esi]
  413438:	das    
  413439:	inc    edx
  41343a:	icebp  
  41343b:	push   ss
  41343c:	stc    
  41343d:	mov    eax,ds:0x5ca3fd75
  413442:	jp     0x4134a7
  413444:	mov    esi,0x7909e900
  413449:	and    al,0x92
  41344b:	or     eax,0xaeef798
  413450:	cld    
  413451:	jo     0x4133ea
  413453:	xor    DWORD PTR ds:0x49f756a2,0xffffffe0
  41345a:	adc    ch,BYTE PTR [esi+0x15aae98f]
  413460:	mov    ds:0x3dcbea28,eax
  413465:	push   ss
  413466:	jo     0x4134c3
  413468:	cs imul ebx,esp,0x4a7d75aa
  41346f:	sub    eax,0x3b9dd29a
  413474:	sub    DWORD PTR [esi+0x19f21661],esp
  41347a:	sub    eax,0x99866680
  41347f:	push   eax
  413480:	lahf   
  413481:	cmp    eax,0x48583adb
  413486:	out    0x23,eax
  413488:	stc    
  413489:	push   eax
  41348a:	lods   al,BYTE PTR ds:[esi]
  41348b:	fisub  DWORD PTR [ebp+0x25]
  41348e:	out    0x3b,al
  413490:	addr16 pop ebx
  413492:	adc    al,0x3e
  413494:	jbe    0x41345b
  413496:	fstp   DWORD PTR [ebx-0x3b7b66ae]
  41349c:	fnstsw WORD PTR [edx-0x23]
  41349f:	fbstp  TBYTE PTR [edx+0x5fe1118]
  4134a5:	sub    eax,0x8d13443e
  4134aa:	pop    edx
  4134ab:	sub    BYTE PTR [ebx-0x16],cl
  4134ae:	add    al,0x97
  4134b0:	test   al,0x93
  4134b2:	aaa    
  4134b3:	shl    BYTE PTR [ebp+0x3],0xad
  4134b7:	mov    al,0x0
  4134b9:	ds mov edi,0x82e29690
  4134bf:	cmp    al,ah
  4134c1:	and    BYTE PTR [ebp-0x1d62671b],bh
  4134c7:	sbb    BYTE PTR [edx],0x34
  4134ca:	adc    ah,BYTE PTR [edx]
  4134cc:	repz test al,0x85
  4134cf:	sbb    BYTE PTR [ecx-0x32],cl
  4134d2:	scas   eax,DWORD PTR es:[edi]
  4134d3:	int    0xd0
  4134d5:	or     DWORD PTR ds:0xebbd4ae,edx
  4134db:	js     0x41353e
  4134dd:	inc    ebp
  4134de:	add    ebp,ebp
  4134e0:	call   0x4087:0x38a4510a
  4134e7:	cwde   
  4134e8:	mov    eax,ds:0xcd0fcc79
  4134ed:	(bad)  
  4134ee:	aad    0xdb
  4134f0:	fcom   QWORD PTR [edx-0x35]
  4134f3:	xor    al,0x63
  4134f5:	inc    ecx
  4134f6:	(bad)  
  4134f7:	jbe    0x413515
  4134f9:	inc    edi
  4134fa:	xchg   edi,eax
  4134fb:	sbb    edi,DWORD PTR [ecx+0x651c3e56]
  413501:	stos   BYTE PTR es:[edi],al
  413502:	mov    ecx,0x7fab8efa
  413507:	in     eax,dx
  413508:	jge    0x413546
  41350a:	retf   
  41350b:	mov    al,ds:0x447a9ed9
  413510:	dec    ebp
  413511:	pop    edi
  413512:	push   cs
  413513:	sbb    bh,BYTE PTR [ebx-0x36]
  413516:	jno    0x4134a3
  413518:	stc    
  413519:	leave  
  41351a:	addr16 in eax,dx
  41351c:	lahf   
  41351d:	push   esp
  41351e:	shl    dl,1
  413520:	or     bl,ah
  413522:	(bad)  ds:0xbfb78f1e
  413528:	inc    ecx
  413529:	and    al,0xa4
  41352b:	test   BYTE PTR [ecx+0x514ca4e2],dh
  413531:	ins    DWORD PTR es:[edi],dx
  413532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413533:	mov    ch,0x11
  413535:	ror    dl,cl
  413537:	pusha  
  413538:	std    
  413539:	es out dx,al
  41353b:	shr    DWORD PTR [esi],1
  41353d:	pop    edi
  41353e:	cvttps2pi mm6,QWORD PTR [esi-0x43]
  413542:	mov    al,0xd9
  413544:	loop   0x413582
  413546:	mov    dl,0xb5
  413548:	add    DWORD PTR [esi],ecx
  41354a:	pop    esp
  41354b:	shl    DWORD PTR [ecx],0x15
  41354e:	addr16 dec ecx
  413550:	ret    0x16f2
  413553:	xchg   esi,eax
  413554:	or     al,0xa2
  413556:	(bad)  
  413557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413558:	push   cs
  413559:	xchg   esi,eax
  41355a:	scas   eax,DWORD PTR es:[edi]
  41355b:	das    
  41355c:	xchg   ebp,eax
  41355d:	sbb    bh,BYTE PTR [eax]
  41355f:	dec    esi
  413560:	loope  0x4135be
  413562:	mov    WORD PTR [esi+eiz*2+0x58],es
  413566:	je     0x41352d
  413568:	pushf  
  413569:	sub    ah,BYTE PTR [edi+0x7a742087]
  41356f:	neg    BYTE PTR [ecx+edx*4-0x746358e8]
  413576:	pop    edx
  413577:	aaa    
  413578:	shl    BYTE PTR [eax+0x20334536],1
  41357e:	add    esi,edi
  413580:	loope  0x4135f2
  413582:	icebp  
  413583:	test   BYTE PTR [eax+eiz*8],bl
  413586:	sbb    DWORD PTR [esi],esp
  413588:	ja     0x41350e
  41358a:	loopne 0x41352c
  41358c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41358d:	lods   eax,DWORD PTR ds:[esi]
  41358e:	pop    esi
  41358f:	test   eax,0xaa2b6d73
  413594:	popa   
  413595:	lods   al,BYTE PTR ds:[esi]
  413596:	cmp    al,0x8f
  413598:	scas   al,BYTE PTR es:[edi]
  413599:	xor    al,0x75
  41359b:	mov    al,0xce
  41359d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359e:	test   eax,0xfda86232
  4135a3:	jo     0x4135a9
  4135a5:	xchg   esp,eax
  4135a6:	ss cs dec ecx
  4135a9:	pop    ebx
  4135aa:	mov    eax,DWORD PTR [eax+ebx*4-0x45]
  4135ae:	icebp  
  4135af:	lahf   
  4135b0:	xor    esi,ecx
  4135b2:	xchg   ebx,eax
  4135b3:	xchg   esp,eax
  4135b4:	inc    ecx
  4135b5:	push   0xcbfe7be6
  4135ba:	or     al,0xad
  4135bc:	mov    bl,0x70
  4135be:	adc    al,0x81
  4135c0:	dec    esp
  4135c1:	jp     0x4135ba
  4135c3:	iret   
  4135c4:	or     DWORD PTR [edi-0x78],eax
  4135c7:	push   esi
  4135c8:	jne    0x41359c
  4135ca:	dec    esi
  4135cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135cc:	push   ss
  4135cd:	in     eax,0x55
  4135cf:	and    ebx,ebx
  4135d1:	bound  esp,QWORD PTR [ebp+0x656ea07]
  4135d7:	jmp    0xea52:0x43043e9a
  4135de:	push   ebp
  4135df:	inc    ebx
  4135e0:	inc    esi
  4135e1:	das    
  4135e2:	xchg   esi,eax
  4135e3:	lds    esi,FWORD PTR [ebx+0x12ecbdfa]
  4135e9:	dec    edx
  4135ea:	(bad)  
  4135eb:	xor    BYTE PTR [ebp+ebx*2+0x73018451],dh
  4135f2:	mov    bh,0xe
  4135f4:	dec    ebp
  4135f5:	mov    bl,0xd8
  4135f7:	push   eax
  4135f8:	imul   esp,DWORD PTR [esi],0xffffff8a
  4135fb:	push   0xffffffa4
  4135fd:	test   esp,edi
  4135ff:	leave  
  413600:	xchg   DWORD PTR [edi+edx*8-0x4127f7d9],eax
  413607:	test   eax,0x47161b7
  41360c:	int3   
  41360d:	pop    ss
  41360e:	mov    WORD PTR [edx],ss
  413610:	ret    
  413611:	add    al,0x27
  413613:	loopne 0x4135c2
  413615:	hlt    
  413616:	mov    cl,dh
  413618:	dec    ebp
  413619:	psubw  mm2,QWORD PTR [edx]
  41361c:	loop   0x4135d8
  41361e:	out    0xd4,eax
  413620:	lock mov al,0x3e
  413623:	pop    esi
  413624:	dec    eax
  413625:	cmc    
  413626:	mov    ch,0x19
  413628:	jnp    0x413640
  41362a:	and    eax,0xe56adda1
  41362f:	pop    es
  413630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413631:	dec    esi
  413632:	mov    ecx,0xa7c16b2
  413637:	adc    edi,DWORD PTR [ebx]
  413639:	or     eax,0x97e5e2d
  41363e:	xchg   ebx,eax
  41363f:	xchg   edx,eax
  413640:	fcomp  QWORD PTR [ebx-0x46]
  413643:	cld    
  413644:	mov    al,0x73
  413646:	add    eax,0xa9671fad
  41364b:	mov    eax,ds:0x6bde99a7
  413650:	mov    ch,0x2d
  413652:	pop    esi
  413653:	aaa    
  413654:	(bad)  
  413655:	push   ss
  413656:	add    DWORD PTR [esi+edi*1+0x768d1880],0xffffff89
  41365e:	adc    esp,ebp
  413660:	enter  0x97ae,0x78
  413664:	je     0x41364a
  413666:	test   ebp,esp
  413668:	imul   BYTE PTR [ecx+0x6d6d724d]
  41366e:	mov    dl,0x3d
  413670:	test   DWORD PTR [esi],ecx
  413672:	popa   
  413673:	rcr    eax,cl
  413675:	push   es
  413676:	mov    ebp,DWORD PTR [edi-0x280f664d]
  41367c:	xchg   DWORD PTR [edx-0x5f],ebx
  41367f:	mov    al,BYTE PTR [ecx+0x38c78ab5]
  413685:	imul   edi,DWORD PTR [esi+0x44],0xffffffed
  413689:	add    BYTE PTR [ebp+0x33],cl
  41368c:	div    DWORD PTR [eax+0x4]
  41368f:	xor    DWORD PTR [edx],edx
  413691:	in     eax,dx
  413692:	loope  0x41368b
  413694:	jae    0x41361a
  413696:	push   ds
  413697:	sub    al,0x31
  413699:	or     DWORD PTR [edi],0x1791c1a3
  41369f:	shl    al,0x75
  4136a2:	cdq    
  4136a3:	or     esi,DWORD PTR [ebx]
  4136a5:	xchg   DWORD PTR [ecx+0x3e],edi
  4136a8:	sub    al,0x2b
  4136aa:	sbb    dh,BYTE PTR [ebp-0x13464bca]
  4136b0:	mov    WORD PTR [esi+0x6b],?
  4136b3:	jo     0x41366e
  4136b5:	in     eax,0x89
  4136b7:	add    dl,ch
  4136b9:	(bad)
  4136bc:	clc    
  4136bd:	dec    ebp
  4136be:	inc    ecx
  4136bf:	mov    bh,0x4c
  4136c1:	(bad)  
  4136c2:	out    dx,al
  4136c3:	push   esp
  4136c4:	jae    0x413742
  4136c6:	jp     0x4136e8
  4136c8:	sub    dl,BYTE PTR [ebp-0x77ca32ef]
  4136ce:	lods   al,BYTE PTR ds:[esi]
  4136cf:	ins    DWORD PTR es:[edi],dx
  4136d0:	clc    
  4136d1:	mov    ebp,DWORD PTR [ecx-0x5d]
  4136d4:	inc    eax
  4136d5:	pushf  
  4136d6:	mov    ds:0x27f11043,eax
  4136db:	in     eax,0x52
  4136dd:	mov    ecx,0x446268e2
  4136e2:	nop
  4136e3:	jecxz  0x413705
  4136e5:	int    0x92
  4136e7:	push   es
  4136e8:	xchg   ebx,eax
  4136e9:	jae    0x41374d
  4136eb:	fcom   QWORD PTR ds:0x22783a77
  4136f1:	push   ecx
  4136f2:	xlat   BYTE PTR ds:[ebx]
  4136f3:	adc    ebp,ebp
  4136f5:	or     DWORD PTR [edi],esi
  4136f7:	jmp    0x5a3d2bd1
  4136fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136fd:	imul   esp,DWORD PTR [ebx],0xffffffea
  413700:	adc    eax,0x921749ee
  413705:	lods   eax,DWORD PTR ds:[esi]
  413706:	jae    0x41373c
  413708:	mov    ch,0x52
  41370a:	leave  
  41370b:	inc    ebx
  41370c:	add    al,0x41
  41370e:	xor    eax,0x265a2833
  413713:	push   esi
  413714:	jmp    0xcfdb2d68
  413719:	std    
  41371a:	push   esi
  41371b:	xchg   ecx,eax
  41371c:	int    0xe
  41371e:	or     bl,bh
  413720:	pop    ecx
  413721:	ins    BYTE PTR es:[edi],dx
  413722:	cmc    
  413723:	sub    eax,0xc55c6f5e
  413728:	sbb    dh,BYTE PTR [ecx+0x19]
  41372b:	jg     0x413763
  41372d:	outs   dx,BYTE PTR fs:[esi]
  41372f:	xchg   edi,eax
  413730:	sbb    DWORD PTR [edx+0x1137ca8],esi
  413736:	sar    eax,1
  413738:	add    bl,0xc4
  41373b:	dec    eax
  41373c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373d:	std    
  41373e:	je     0x4137bc
  413740:	popa   
  413741:	mov    ecx,0x52820d0d
  413746:	test   eax,0xf8876cb4
  41374b:	mov    esi,0xd39a0829
  413750:	into   
  413751:	xor    BYTE PTR [edi+ecx*4],ch
  413754:	add    edx,0x60
  413757:	loop   0x4137c2
  413759:	test   DWORD PTR [esi+0x18],0xba1d9bd2
  413760:	mov    cl,0x10
  413762:	or     eax,0xe167ca37
  413767:	pop    ds
  413768:	imul   ebx,DWORD PTR ds:0x7392ab77,0xffffff93
  41376f:	push   eax
  413770:	cmp    esp,ecx
  413772:	fnsave [ecx]
  413774:	out    0x94,eax
  413776:	add    DWORD PTR [ebp-0x2b],0x45
  41377a:	into   
  41377b:	clc    
  41377c:	ja     0x413740
  41377e:	xchg   esi,eax
  41377f:	pusha  
  413780:	out    dx,al
  413781:	mov    edx,0x22e52bf3
  413786:	loope  0x413720
  413788:	aas    
  413789:	not    BYTE PTR [edi]
  41378b:	(bad)  
  41378c:	jne    0x41377b
  41378e:	ins    DWORD PTR es:[edi],dx
  41378f:	pop    es
  413790:	sahf   
  413791:	push   esp
  413792:	or     ch,BYTE PTR [ebp-0x5358207]
  413798:	fist   WORD PTR [edi-0x3a268875]
  41379e:	pop    es
  41379f:	jno    0x4137a9
  4137a1:	stos   BYTE PTR es:[edi],al
  4137a2:	sti    
  4137a3:	ins    DWORD PTR es:[edi],dx
  4137a4:	ja     0x41381d
  4137a6:	adc    ah,cl
  4137a8:	sahf   
  4137a9:	dec    edx
  4137aa:	shl    bl,cl
  4137ac:	repz mov bh,0xdd
  4137af:	pop    eax
  4137b0:	fst    QWORD PTR [ebx-0x4c1fb34d]
  4137b6:	push   eax
  4137b7:	imul   edi,DWORD PTR [ecx-0x1312d42d],0x3608e52a
  4137c1:	push   edi
  4137c2:	or     ecx,DWORD PTR [ebx]
  4137c4:	jo     0x41375e
  4137c6:	aas    
  4137c7:	push   ebx
  4137c8:	icebp  
  4137c9:	test   ch,dl
  4137cb:	cmp    eax,0x6648af75
  4137d0:	stc    
  4137d1:	jge    0x4137f0
  4137d3:	jb     0x4137c8
  4137d5:	sbb    ch,ah
  4137d7:	jl     0x413847
  4137d9:	loop   0x4137db
  4137db:	punpckhwd mm2,QWORD PTR [edx-0x763c8a71]
  4137e2:	or     bl,cl
  4137e4:	sahf   
  4137e5:	push   ds
  4137e6:	les    edi,FWORD PTR [esi+0x8]
  4137e9:	test   eax,0xc0de4497
  4137ee:	sbb    al,BYTE PTR [edi+esi*8-0x40]
  4137f2:	pushf  
  4137f3:	ins    DWORD PTR es:[edi],dx
  4137f4:	shl    BYTE PTR [esi+0x2a881834],0x8b
  4137fb:	pop    esi
  4137fc:	icebp  
  4137fd:	in     eax,dx
  4137fe:	xchg   edx,eax
  4137ff:	or     ecx,ebx
  413801:	jmp    0x4137bf
  413803:	shr    BYTE PTR [ecx-0x22],1
  413806:	int    0xc7
  413808:	add    eax,0xf60afeb6
  41380d:	push   es
  41380e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380f:	ret    0x63bb
  413812:	popf   
  413813:	imul   ebp,ecx,0xffffffa0
  413816:	adc    BYTE PTR ds:[si+0x500],ah
  41381c:	dec    edi
  41381d:	push   ebx
  41381e:	rsm    
  413820:	ins    BYTE PTR es:[edi],dx
  413821:	dec    esp
  413822:	push   0xf37c8645
  413827:	mov    DWORD PTR [ebx-0xf919bd],edx
  41382d:	mov    al,0xf9
  41382f:	and    eax,0xcc852221
  413834:	jo     0x4137e1
  413836:	fmul   QWORD PTR [edi-0x7e]
  413839:	and    esp,edx
  41383b:	push   edx
  41383c:	pop    ebx
  41383d:	lea    ecx,[edi-0x41babf5e]
  413843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413844:	adc    BYTE PTR [edi],ch
  413846:	adc    ch,ch
  413848:	push   ebx
  413849:	addr16 xchg ebx,eax
  41384b:	(bad)  
  41384c:	call   0x4ca04634
  413851:	das    
  413852:	sahf   
  413853:	add    eax,0xcd300e4e
  413858:	xchg   edx,eax
  413859:	dec    eax
  41385a:	in     al,0x6f
  41385c:	xor    cl,al
  41385e:	jo     0x4137e8
  413860:	xchg   esp,eax
  413861:	lods   eax,DWORD PTR ds:[esi]
  413862:	xchg   ecx,eax
  413863:	call   DWORD PTR [ebx-0x2d]
  413866:	dec    ebx
  413867:	les    esi,FWORD PTR [ecx-0x3513a197]
  41386d:	out    0xaa,eax
  41386f:	bound  ebx,QWORD PTR [eax+0x3c]
  413872:	sub    edx,DWORD PTR [ebp-0xd]
  413875:	and    eax,0x500e3ba1
  41387a:	xor    DWORD PTR [eax-0x15],ebx
  41387d:	sti    
  41387e:	das    
  41387f:	hlt    
  413880:	pop    esi
  413881:	xlat   BYTE PTR ds:[ebx]
  413882:	add    DWORD PTR [eax],edi
  413884:	call   0x9241abb7
  413889:	in     eax,dx
  41388a:	repnz rol DWORD PTR [edi+ecx*2],cl
  41388e:	xor    BYTE PTR [ecx],dh
  413890:	loope  0x41385a
  413892:	test   DWORD PTR [ebp+0x1b],edi
  413895:	pop    esp
  413896:	inc    edi
  413897:	jmp    0x413881
  413899:	shl    DWORD PTR [ecx-0x31039320],0x32
  4138a0:	aam    0x91
  4138a2:	nop
  4138a3:	pop    ebp
  4138a4:	sub    BYTE PTR [ebx],0x5e
  4138a7:	jns    0x4138b9
  4138a9:	mov    al,0xc3
  4138ab:	mov    edx,DWORD PTR [eax-0x13]
  4138ae:	mov    dl,BYTE PTR [ebp+0x46]
  4138b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b2:	mov    esp,0x2e167ccd
  4138b7:	adc    ecx,DWORD PTR [edi]
  4138b9:	popa   
  4138ba:	sahf   
  4138bb:	jnp    0x4138e6
  4138bd:	sbb    eax,0x5f08704d
  4138c2:	ror    BYTE PTR [eax],cl
  4138c4:	jge    0x4138a8
  4138c6:	xchg   esp,eax
  4138c7:	fild   WORD PTR [ecx-0x71d4d93f]
  4138cd:	mov    ds:0xf39729f1,al
  4138d2:	fmul   QWORD PTR [edx+0x7d8185ad]
  4138d8:	xchg   edi,eax
  4138d9:	and    cl,ah
  4138db:	iret   
  4138dc:	push   ebp
  4138dd:	(bad)  
  4138de:	mov    WORD PTR ds:[esi],cs
  4138e1:	inc    edx
  4138e2:	inc    ebp
  4138e3:	dec    ebp
  4138e4:	sub    eax,0xc256df0a
  4138e9:	jo     0x41394b
  4138eb:	add    dl,BYTE PTR [edx-0x1040794]
  4138f1:	rol    DWORD PTR [edi],0xbb
  4138f4:	je     0x4138b4
  4138f6:	lods   al,BYTE PTR ds:[esi]
  4138f7:	lock lds eax,FWORD PTR [edi+edx*4+0x28]
  4138fc:	test   DWORD PTR [ebx],esp
  4138fe:	mov    ch,0xb8
  413900:	loope  0x4138a4
  413902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413903:	jno    0x41396b
  413905:	das    
  413906:	push   es
  413907:	pop    edi
  413908:	shr    DWORD PTR [ecx-0x59],1
  41390b:	cs mov eax,0x7f6fd138
  413911:	or     bl,ch
  413913:	dec    ecx
  413914:	mov    ebx,0x8201d0bf
  413919:	sbb    eax,0xc071f1f9
  41391e:	fs push cs
  413920:	les    ebx,FWORD PTR [esi+esi*8+0x32345626]
  413927:	mov    al,ds:0xb8043652
  41392c:	mov    al,ds:0xdf0fc356
  413931:	shl    DWORD PTR [edx-0x46301a01],1
  413937:	jmp    0x43e3:0xc23453e7
  41393e:	lods   eax,DWORD PTR ds:[esi]
  41393f:	mov    dl,0xc9
  413941:	push   ds
  413942:	pusha  
  413943:	push   ebx
  413944:	pop    esi
  413945:	jge    0x41399f
  413947:	jnp    0x4139b7
  413949:	add    BYTE PTR [ecx+0x7d],0xf5
  41394d:	retf   
  41394e:	or     al,0x27
  413950:	data16 mov al,0xd4
  413953:	sub    cl,al
  413955:	out    dx,eax
  413956:	ret    0x18e6
  413959:	in     al,dx
  41395a:	adc    BYTE PTR [ebx],0xa6
  41395d:	jno    0x4139d1
  41395f:	fcom   st(0)
  413961:	push   ds
  413962:	xchg   DWORD PTR ds:0xb162f808,edx
  413968:	pop    ebp
  413969:	mov    dl,0x51
  41396b:	ins    DWORD PTR es:[edi],dx
  41396c:	or     al,0x6
  41396e:	retf   
  41396f:	test   DWORD PTR ds:0x90e08a55,0x8320bcf7
  413979:	add    DWORD PTR [ebp-0x11c70450],esp
  41397f:	clc    
  413980:	lahf   
  413981:	and    dh,BYTE PTR [esi+0x5]
  413984:	mov    esi,0x51ead29e
  413989:	jo     0x413950
  41398b:	int3   
  41398c:	jbe    0x4139a8
  41398e:	stc    
  41398f:	cs daa 
  413991:	xor    dh,al
  413993:	jbe    0x413930
  413995:	test   DWORD PTR [edi],0x5109877e
  41399b:	jb     0x413954
  41399d:	jl     0x413991
  41399f:	xchg   edi,eax
  4139a0:	jge    0x413922
  4139a2:	imul   edi,ebp,0x1afaa64e
  4139a8:	jle    0x4139c9
  4139aa:	test   eax,0x111ea277
  4139af:	sub    edx,DWORD PTR [edx+0x35]
  4139b2:	xchg   esi,eax
  4139b3:	cmp    BYTE PTR [edi+ebp*4],dh
  4139b6:	pop    ebx
  4139b7:	stos   BYTE PTR es:[edi],al
  4139b8:	dec    edi
  4139b9:	and    eax,esp
  4139bb:	sbb    al,0x71
  4139bd:	loop   0x4139a1
  4139bf:	cmp    eax,0x6fc254ee
  4139c4:	mov    bl,bl
  4139c6:	jns    0x4139dd
  4139c8:	add    esi,DWORD PTR [ecx]
  4139ca:	add    dh,BYTE PTR [ecx-0x2870792d]
  4139d0:	cmp    BYTE PTR [edx],bl
  4139d2:	dec    ebx
  4139d3:	xchg   cl,cl
  4139d5:	or     ecx,esi
  4139d7:	jae    0x413989
  4139d9:	in     al,0xec
  4139db:	cwde   
  4139dc:	cmc    
  4139dd:	dec    esi
  4139de:	retf   
  4139df:	pop    ebx
  4139e0:	loop   0x413a14
  4139e2:	cli    
  4139e3:	(bad)  
  4139e4:	adc    dh,bh
  4139e6:	mov    esp,0xe0cf2934
  4139eb:	sbb    bl,bh
  4139ed:	and    DWORD PTR [ecx+ebp*1-0x3f8fcf8a],ecx
  4139f4:	dec    edx
  4139f5:	sar    BYTE PTR [edx-0x3868bcd7],cl
  4139fb:	popf   
  4139fc:	fcom   QWORD PTR ds:0x687f1052
  413a02:	lods   eax,DWORD PTR ds:[esi]
  413a03:	dec    ebp
  413a04:	sbb    ebp,edi
  413a06:	xchg   cl,bh
  413a08:	cdq    
  413a09:	jnp    0x413a39
  413a0b:	add    dl,BYTE PTR [esp+edi*4]
  413a0e:	inc    esp
  413a0f:	mov    bh,0x59
  413a11:	clc    
  413a12:	nop
  413a13:	add    cl,dh
  413a15:	fst    DWORD PTR [edi+0x44]
  413a18:	retf   
  413a19:	mov    bl,0xfa
  413a1b:	mov    eax,ds:0x1cf3670e
  413a20:	cmp    dl,BYTE PTR [eax-0x52989d90]
  413a26:	add    edi,esi
  413a28:	iret   
  413a29:	into   
  413a2a:	mov    dl,0xc4
  413a2c:	xor    cl,BYTE PTR [edx-0x5343a968]
  413a32:	jnp    0x413a31
  413a34:	out    0x4b,al
  413a36:	stos   BYTE PTR es:[edi],al
  413a37:	call   0xe8bef4ba
  413a3c:	xchg   ecx,eax
  413a3d:	ret    0x901d
  413a40:	inc    edi
  413a41:	push   esi
  413a42:	lds    eax,FWORD PTR [edi]
  413a44:	pop    edx
  413a45:	dec    esp
  413a46:	push   edi
  413a47:	mov    ch,0x29
  413a49:	aad    0x65
  413a4b:	inc    edi
  413a4c:	jmp    0x692f2e75
  413a51:	mov    cl,0x3e
  413a53:	nop
  413a54:	scas   al,BYTE PTR es:[edi]
  413a55:	cwde   
  413a56:	adc    eax,0xbf2a7fa9
  413a5b:	jmp    0xfee79731
  413a60:	xlat   BYTE PTR ds:[ebx]
  413a61:	push   edi
  413a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a63:	retf   
  413a64:	loopne 0x413ac7
  413a66:	cs xchg eax,edx
  413a69:	push   esp
  413a6a:	test   eax,0xbdcb669
  413a6f:	mov    cl,0x1f
  413a71:	sar    ch,0x68
  413a74:	cmp    DWORD PTR [ebp+0x1f],ebp
  413a77:	cmp    eax,0xafe99cac
  413a7c:	ficomp WORD PTR [eax-0xdc421af]
  413a82:	ffree  st(6)
  413a84:	mov    edi,0x306940bc
  413a89:	fs mov dl,0x18
  413a8c:	out    0x49,al
  413a8e:	scas   al,BYTE PTR es:[edi]
  413a8f:	sbb    al,0x88
  413a91:	adc    dh,BYTE PTR [ecx-0xe]
  413a94:	(bad)  
  413a95:	out    0xd6,al
  413a97:	pushf  
  413a98:	mov    ebp,0xd7db2c4a
  413a9d:	icebp  
  413a9e:	jmp    0xe33c0f2a
  413aa3:	and    ah,dh
  413aa5:	cld    
  413aa6:	out    0x73,al
  413aa8:	sbb    eax,DWORD PTR [ebp-0x1]
  413aab:	inc    edx
  413aac:	(bad)  
  413aad:	mov    al,0x37
  413aaf:	push   esi
  413ab0:	adc    ch,BYTE PTR [edx+0x29c9c486]
  413ab6:	mov    ebp,0xc1b247c3
  413abb:	add    edx,edi
  413abd:	pop    edi
  413abe:	dec    eax
  413abf:	sbb    DWORD PTR [eax],eax
  413ac1:	xor    eax,0x1ca1953e
  413ac6:	mov    ebp,0x5cffd0af
  413acb:	pop    ss
  413acc:	cmp    ah,BYTE PTR [edx]
  413ace:	and    ah,BYTE PTR [ebx+0x7ac89faa]
  413ad4:	test   esp,edx
  413ad6:	mov    DWORD PTR [edi],esi
  413ad8:	sbb    eax,0xa03634bf
  413add:	jge    0x413aca
  413adf:	xor    eax,0x220b76e9
  413ae4:	adc    dh,bh
  413ae6:	pop    ebx
  413ae7:	add    BYTE PTR [ecx-0x49a5bb5f],dh
  413aed:	pop    ebx
  413aee:	cmp    eax,0x69c5373c
  413af3:	mov    eax,?
  413af5:	mov    ecx,0x71095713
  413afa:	push   es
  413afb:	xchg   esi,eax
  413afc:	mov    al,0xb7
  413afe:	aas    
  413aff:	fdivr  QWORD PTR [esi+0x38ada88c]
  413b05:	xor    dh,BYTE PTR [esi+0x3bcff01e]
  413b0b:	dec    esi
  413b0c:	jmp    FWORD PTR [ebp-0x1dbd60d]
  413b12:	inc    ecx
  413b13:	je     0x413b94
  413b15:	xor    edx,esi
  413b17:	fmul   QWORD PTR [edx]
  413b19:	mov    edi,0x93283278
  413b1e:	sub    al,0xf6
  413b20:	xlat   BYTE PTR ds:[ebx]
  413b21:	js     0x413b31
  413b23:	stos   DWORD PTR es:[edi],eax
  413b24:	daa    
  413b25:	xor    al,0x40
  413b27:	and    edx,DWORD PTR [eax-0x38818b74]
  413b2d:	mov    al,ds:0x592a829e
  413b32:	(bad)  
  413b35:	les    edi,FWORD PTR [ecx-0x2d3fe930]
  413b3b:	repnz in eax,dx
  413b3d:	push   ebx
  413b3e:	lock adc BYTE PTR [esi],ah
  413b41:	xchg   esi,eax
  413b42:	retf   
  413b43:	jbe    0x413b70
  413b45:	gs mov esi,0xa244cb00
  413b4b:	test   DWORD PTR [ebx],ecx
  413b4d:	rcl    ah,1
  413b4f:	sub    edi,DWORD PTR [esi+0x1780ffb1]
  413b55:	add    al,0x7f
  413b57:	jnp    0x413b70
  413b59:	add    dl,BYTE PTR [edi+0x64d293b6]
  413b5f:	call   0x8f45f8f0
  413b64:	nop
  413b65:	outs   dx,BYTE PTR ds:[esi]
  413b66:	dec    esp
  413b67:	xchg   esp,eax
  413b68:	inc    ebp
  413b69:	add    BYTE PTR [esi+0x57],al
  413b6c:	int3   
  413b6d:	mov    al,0x90
  413b6f:	push   eax
  413b70:	pop    ebp
  413b71:	sahf   
  413b72:	jbe    0x413b77
  413b74:	push   esi
  413b75:	jns    0x413b6c
  413b77:	cmp    edx,DWORD PTR [ebp-0x17cd77a4]
  413b7d:	loopne 0x413ba1
  413b7f:	aas    
  413b80:	iret   
  413b81:	(bad)  
  413b82:	jns    0x413be6
  413b84:	call   FWORD PTR [ebp+0x19]
  413b87:	aad    0x71
  413b89:	fisub  WORD PTR [ebp-0x546fac9a]
  413b8f:	les    edx,FWORD PTR [ebx+0x48bd921]
  413b95:	and    ah,0x8b
  413b98:	imul   edi,DWORD PTR [esi+0x7dd0c1d0],0xe3e89f9c
  413ba2:	loopne 0x413b62
  413ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba5:	ds aaa 
  413ba7:	fdiv   QWORD PTR [esi]
  413ba9:	mov    BYTE PTR [esi],dl
  413bab:	pushf  
  413bac:	data16 add BYTE PTR [ecx+0x9c547d0],dl
  413bb3:	fucomp st(7)
  413bb5:	mov    WORD PTR [edx+0x5d],ss
  413bb8:	leave  
  413bb9:	add    al,0x14
  413bbb:	inc    esi
  413bbc:	shl    BYTE PTR [eax+0x1fe96d03],0x25
  413bc3:	repz push 0xd46da00e
  413bc9:	mov    esp,ebp
  413bcb:	mov    esi,0xc4150c3
  413bd0:	dec    ebp
  413bd1:	jmp    0xee0d85a9
  413bd6:	outs   dx,BYTE PTR ds:[esi]
  413bd7:	mov    esi,DWORD PTR [eax+0x74091b8a]
  413bdd:	test   BYTE PTR [edi],ah
  413bdf:	dec    edx
  413be0:	sub    bl,BYTE PTR [eax]
  413be2:	imul   esp,DWORD PTR [ebp-0x2509cae8],0x3d
  413be9:	stos   DWORD PTR es:[edi],eax
  413bea:	add    BYTE PTR [ebp+0x315a8955],0x18
  413bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf2:	das    
  413bf3:	mov    ebp,0xf7c1da71
  413bf8:	sbb    DWORD PTR [esp+ebx*2+0x25],0x626c4da9
  413c00:	adc    eax,DWORD PTR [edi]
  413c02:	pop    ecx
  413c03:	jbe    0x413be1
  413c05:	cs push 0xc6efa328
  413c0b:	mov    esp,0xcb905fcf
  413c10:	nop
  413c11:	mov    ds:0x5967719a,eax
  413c16:	mov    bh,0x9b
  413c18:	mov    esp,0xa37852e3
  413c1d:	jmp    0xb922b8eb
  413c22:	bound  edx,QWORD PTR [ebx+0x41f70f8f]
  413c28:	daa    
  413c29:	xchg   ebp,eax
  413c2a:	xchg   ebx,eax
  413c2b:	jno    0x413c45
  413c2d:	mov    dl,0x61
  413c2f:	adc    BYTE PTR [eax+0x1f],dh
  413c32:	mov    bh,0x8b
  413c34:	rcr    BYTE PTR [esp+ebx*2+0x51c29105],1
  413c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3c:	cmp    edi,DWORD PTR [ebx+0x63]
  413c3f:	div    BYTE PTR [ebx-0x457c7672]
  413c45:	inc    edi
  413c46:	jle    0x413c31
  413c48:	sub    BYTE PTR [edi-0x3d],dh
  413c4b:	pushf  
  413c4c:	inc    ebp
  413c4d:	aas    
  413c4e:	push   ss
  413c4f:	fisubr WORD PTR [ebp+eax*1-0x5b]
  413c53:	cwde   
  413c54:	stos   BYTE PTR es:[edi],al
  413c55:	dec    ebx
  413c56:	mov    dh,0xb0
  413c58:	fsubrp st(0),st
  413c5a:	mov    ds:0x8c5fd92f,eax
  413c5f:	retf   
  413c60:	test   al,0x18
  413c62:	or     al,0x11
  413c64:	jp     0x413cd6
  413c66:	pop    es
  413c67:	mov    edi,0x7d91f2ac
  413c6c:	or     dh,cl
  413c6e:	add    al,0x7e
  413c70:	pop    esi
  413c71:	pop    eax
  413c72:	add    eax,0x326bb2fc
  413c77:	bound  edi,QWORD PTR [edx-0x33dcaf74]
  413c7d:	lods   al,BYTE PTR ds:[esi]
  413c7e:	add    cl,BYTE PTR [ecx-0x78]
  413c81:	and    al,0x81
  413c83:	jb     0x413ca6
  413c85:	std    
  413c86:	cmp    al,0x38
  413c88:	ret    
  413c89:	out    dx,al
  413c8a:	ror    BYTE PTR [edi+0x54],1
  413c8d:	inc    edi
  413c8e:	jmp    0x413cd9
  413c90:	xchg   ecx,eax
  413c91:	mov    dh,ch
  413c93:	push   eax
  413c94:	les    eax,FWORD PTR [ebp+0x78]
  413c97:	ins    BYTE PTR es:[edi],dx
  413c98:	xor    al,0xcf
  413c9a:	mov    ch,0xab
  413c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9d:	(bad)  
  413c9e:	dec    ecx
  413c9f:	jge    0x413c25
  413ca1:	in     al,0xf2
  413ca3:	xor    ebx,ecx
  413ca5:	jb     0x413d1f
  413ca7:	aaa    
  413ca8:	dec    edi
  413ca9:	xor    al,0x56
  413cab:	and    DWORD PTR gs:[ecx],ebp
  413cae:	pop    ebp
  413caf:	enter  0x3f02,0xff
  413cb3:	leave  
  413cb4:	cwde   
  413cb5:	lods   al,BYTE PTR ds:[esi]
  413cb6:	mov    esp,0xc8b69c16
  413cbb:	stos   DWORD PTR es:[edi],eax
  413cbc:	push   cs
  413cbd:	sub    al,0xf9
  413cbf:	out    dx,eax
  413cc0:	cli    
  413cc1:	fbld   TBYTE PTR [ecx]
  413cc3:	xor    bh,BYTE PTR [esi-0x3e]
  413cc6:	ja     0x413c5b
  413cc8:	out    dx,al
  413cc9:	(bad)  
  413cca:	je     0x413cd5
  413ccc:	mov    bl,0xc0
  413cce:	dec    esp
  413ccf:	add    DWORD PTR [ebx],0x4a6a7596
  413cd5:	mov    edx,0x3188e6f7
  413cda:	fmul   st(7),st
  413cdc:	mov    eax,0xcf688afa
  413ce1:	stos   DWORD PTR es:[edi],eax
  413ce2:	push   ebp
  413ce3:	inc    edi
  413ce4:	in     al,0x3b
  413ce6:	xchg   eax,eax
  413ce8:	(bad)  
  413ce9:	idiv   DWORD PTR [ebp-0x89c20d5]
  413cef:	or     BYTE PTR [ecx],ah
  413cf1:	or     edx,edx
  413cf3:	and    DWORD PTR [edx-0x62f40930],esi
  413cf9:	pusha  
  413cfa:	jmp    0x413ce2
  413cfc:	mov    ds:0x5bf78681,eax
  413d01:	and    eax,ebx
  413d03:	jge    0x413d36
  413d05:	or     dl,BYTE PTR [esi]
  413d07:	xor    eax,0xd7755f30
  413d0c:	loop   0x413cf2
  413d0e:	adc    BYTE PTR [ecx+0x125265de],dh
  413d14:	mov    DWORD PTR [ebp+edi*1+0x1162b495],ebx
  413d1b:	cs shl edx,0xb2
  413d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d20:	dec    ebp
  413d21:	push   ebp
  413d22:	add    al,0xa5
  413d24:	push   edx
  413d25:	mov    ebp,0x6c4f9d0f
  413d2a:	push   esp
  413d2b:	xor    al,0xf6
  413d2d:	and    al,0x58
  413d2f:	or     eax,0xeb5b64ba
  413d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d35:	add    esi,DWORD PTR [eax+0x6e]
  413d38:	rcr    DWORD PTR [esi],cl
  413d3a:	icebp  
  413d3b:	mov    ch,0x63
  413d3d:	sahf   
  413d3e:	or     ebx,ebp
  413d40:	adc    al,0x14
  413d42:	cmp    eax,0x72f0c78e
  413d47:	lea    edx,[esi-0x51]
  413d4a:	gs pop ecx
  413d4c:	test   BYTE PTR [edx+0x9],dh
  413d4f:	leave  
  413d50:	mov    ds:0x1a288447,al
  413d55:	fidiv  WORD PTR ds:0x6bfb0386
  413d5b:	jns    0x413d0b
  413d5d:	or     DWORD PTR [edi],0xba2c499
  413d63:	js     0x413cf1
  413d65:	rol    WORD PTR [esi+ecx*2],0xe4
  413d6a:	mov    bl,0x9e
  413d6c:	js     0x413dba
  413d6e:	mov    eax,DWORD PTR [edx-0x62cfd490]
  413d74:	xor    edi,DWORD PTR [ecx+0x12e83943]
  413d7a:	ja     0x413db7
  413d7c:	jecxz  0x413dab
  413d7e:	mov    ecx,0x661c6c9e
  413d83:	sbb    ch,al
  413d85:	(bad)  
  413d86:	sti    
  413d87:	shl    bh,1
  413d89:	inc    eax
  413d8a:	push   edx
  413d8b:	shl    BYTE PTR [edx],cl
  413d8d:	pop    ds
  413d8e:	sub    ebp,esp
  413d90:	mov    bl,0x6
  413d92:	mov    ds:0x1784d4b6,al
  413d97:	sbb    BYTE PTR [edi-0x3b],0x86
  413d9b:	mov    ch,0x2d
  413d9d:	pop    ebx
  413d9e:	and    ah,BYTE PTR [esi-0x3e3c457d]
  413da4:	ins    DWORD PTR es:[edi],dx
  413da5:	or     bh,BYTE PTR [edi+ebp*8+0x42e20436]
  413dac:	sar    DWORD PTR [edx+0x4e8fdbd8],cl
  413db2:	lea    esi,[edx+edi*8-0x21]
  413db6:	mov    ?,WORD PTR [edx+0x54]
  413db9:	cld    
  413dba:	ins    DWORD PTR es:[edi],dx
  413dbb:	lods   al,BYTE PTR ds:[esi]
  413dbc:	sub    DWORD PTR [edi],edx
  413dbe:	pop    esp
  413dbf:	sbb    cl,BYTE PTR [edx]
  413dc1:	xor    al,0x6d
  413dc3:	cwde   
  413dc4:	ror    DWORD PTR fs:[ebp-0xb],cl
  413dc8:	lahf   
  413dc9:	and    dl,BYTE PTR [ebx]
  413dcb:	push   cs
  413dcc:	psrlw  mm0,QWORD PTR [ecx]
  413dcf:	pop    edi
  413dd0:	aaa    
  413dd1:	mov    ch,0xbb
  413dd3:	(bad)  
  413dd4:	mov    eax,0xe4dde284
  413dd9:	out    dx,eax
  413dda:	sub    DWORD PTR [esi-0x10],edx
  413ddd:	fcom   DWORD PTR [ecx+0x36]
  413de0:	mov    al,ch
  413de2:	inc    edi
  413de3:	not    bh
  413de5:	adc    edx,ecx
  413de7:	push   esi
  413de8:	add    eax,0x7d369119
  413ded:	pop    esi
  413dee:	pop    esi
  413def:	jo     0x413d74
  413df1:	inc    ebx
  413df2:	imul   ebx,DWORD PTR [eax],0xffffffea
  413df5:	test   al,0x48
  413df7:	cmp    bh,0xcc
  413dfa:	lahf   
  413dfb:	add    bl,BYTE PTR [ecx]
  413dfd:	(bad)  
  413dfe:	shl    DWORD PTR [edx-0x67],cl
  413e01:	pop    es
  413e02:	jle    0x413e6b
  413e04:	sub    DWORD PTR [esi],edx
  413e06:	xor    DWORD PTR [esp+edx*2],edi
  413e09:	push   edx
  413e0a:	lock nop
  413e0c:	sub    esi,DWORD PTR [edx+0xf]
  413e0f:	mov    bh,0xa9
  413e11:	or     al,0x77
  413e13:	lods   eax,DWORD PTR ds:[esi]
  413e14:	in     al,0x78
  413e16:	test   dh,0x18
  413e19:	xchg   edx,edx
  413e1b:	inc    eax
  413e1c:	and    BYTE PTR [ebx+0x25],bl
  413e1f:	imul   DWORD PTR [ecx]
  413e21:	stos   DWORD PTR es:[edi],eax
  413e22:	outs   dx,DWORD PTR ds:[esi]
  413e23:	cli    
  413e24:	and    ecx,eax
  413e26:	ret    0xb028
  413e29:	push   ebx
  413e2a:	adc    bl,bh
  413e2c:	jb     0x413e86
  413e2e:	imul   eax,DWORD PTR [ebp+0x3ac97ce9],0x9d1391c
  413e38:	ins    DWORD PTR es:[edi],dx
  413e39:	hlt    
  413e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3b:	cld    
  413e3c:	std    
  413e3d:	iret   
  413e3e:	mov    ds:0x349208ca,eax
  413e43:	(bad)  
  413e45:	fisttp WORD PTR [edi-0x80]
  413e48:	mov    ds:0x4a670352,eax
  413e4d:	cmp    BYTE PTR [ebx],0x6d
  413e50:	xor    DWORD PTR [edi+esi*2-0x67eaad23],esp
  413e57:	jne    0x413ec9
  413e59:	clc    
  413e5a:	jmp    0xa162:0x624e092a
  413e61:	stos   DWORD PTR es:[edi],eax
  413e62:	and    ebp,DWORD PTR [edi]
  413e64:	pop    esp
  413e65:	mov    ah,0x19
  413e67:	stc    
  413e68:	sub    ch,BYTE PTR [esi]
  413e6a:	jl     0x413ee3
  413e6c:	bound  edi,QWORD PTR [edx]
  413e6e:	in     eax,dx
  413e6f:	in     al,dx
  413e70:	popf   
  413e71:	xchg   BYTE PTR [edx-0x4f],dl
  413e74:	mov    ch,0x79
  413e76:	inc    esi
  413e77:	sub    al,0x35
  413e79:	mov    ds:0x26532c34,eax
  413e7e:	lods   eax,DWORD PTR ds:[esi]
  413e7f:	bound  edi,QWORD PTR [eax+0x65]
  413e82:	aaa    
  413e83:	cmc    
  413e84:	mov    ah,0x5a
  413e86:	fcom   QWORD PTR [eax+0x38]
  413e89:	data16 arpl WORD PTR [ebp-0x4a7d9c3b],cx
  413e90:	mov    eax,ds:0xa40dfb54
  413e95:	xchg   edx,eax
  413e96:	aaa    
  413e97:	out    dx,eax
  413e98:	jg     0x413f09
  413e9a:	pop    eax
  413e9b:	xor    al,0xb2
  413e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9e:	mov    esi,0x486dc82b
  413ea3:	sbb    cl,BYTE PTR [ebx+0x6956a58e]
  413ea9:	loopne 0x413eb2
  413eab:	jb     0x413e2e
  413ead:	pushf  
  413eae:	test   DWORD PTR [ebx+0x34],ebx
  413eb1:	cli    
  413eb2:	or     BYTE PTR [edi],0x3c
  413eb5:	jp     0x413ef8
  413eb7:	or     al,0xa4
  413eb9:	mov    al,0x33
  413ebb:	mov    ecx,0xc254a64
  413ec0:	iret   
  413ec1:	dec    ecx
  413ec2:	sbb    bl,BYTE PTR [ecx-0x23]
  413ec5:	imul   edi,DWORD PTR [edi-0x4d],0xffffff8c
  413ec9:	mov    dh,0x59
  413ecb:	jp     0x413e76
  413ecd:	add    al,0x31
  413ecf:	cmc    
  413ed0:	xor    BYTE PTR [eax],dl
  413ed2:	mov    edi,0x71e69665
  413ed7:	or     ah,BYTE PTR [edi]
  413ed9:	and    DWORD PTR [esi+eax*2+0x63],edi
  413edd:	mov    bl,0x69
  413edf:	out    dx,eax
  413ee0:	icebp  
  413ee1:	mov    edx,0x58da4412
  413ee6:	mov    edx,DWORD PTR [ebp-0x14]
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [ebp+0x5c],cl
  413f26:	adc    BYTE PTR [edi+0x7a7a73b5],cl
  413f2c:	add    DWORD PTR [edi+0x7a],ebx
  413f2f:	jp     0x413edb
  413f31:	leave  
  413f32:	and    ebx,DWORD PTR [ebp+0x1ac7454]
  413f38:	mov    cl,0x28
  413f3a:	iret   
  413f3b:	cmc    
  413f3c:	xchg   DWORD PTR [ecx-0xe],ebx
  413f3f:	inc    ebx
  413f40:	pop    es
  413f41:	dec    esp
  413f42:	jle    0x413fb0
  413f44:	push   ebx
  413f45:	test   al,0x54
  413f47:	mov    ecx,esi
  413f49:	aam    0xd1
  413f4b:	hlt    
  413f4c:	mov    bl,0x27
  413f4e:	(bad)  
  413f4f:	inc    esi
  413f50:	xlat   BYTE PTR ds:[ebx]
  413f51:	cs pop ecx
  413f53:	aas    
  413f54:	sti    
  413f55:	aas    
  413f56:	stos   DWORD PTR es:[edi],eax
  413f57:	push   0x5dd87d02
  413f5c:	in     al,dx
  413f5d:	xlat   BYTE PTR ds:[ebx]
  413f5e:	in     eax,0x1e
  413f60:	loope  0x413f92
  413f62:	repnz inc ecx
  413f64:	call   0x7e3c:0x5563adb3
  413f6b:	push   edx
  413f6c:	pop    ecx
  413f6d:	mov    al,ah
  413f6f:	inc    esi
  413f70:	sub    ecx,esp
  413f72:	add    ah,ah
  413f74:	rol    DWORD PTR [ebx+0x36fd80c7],1
  413f7a:	lods   al,BYTE PTR ds:[esi]
  413f7b:	outs   dx,BYTE PTR ds:[esi]
  413f7c:	add    eax,0x4f6e1384
  413f81:	push   ecx
  413f82:	aam    0x9f
  413f84:	xchg   esp,eax
  413f85:	pop    ebx
  413f86:	jecxz  0x413ff5
  413f88:	outs   dx,DWORD PTR ds:[esi]
  413f89:	icebp  
  413f8a:	dec    edi
  413f8b:	jmp    0x8265:0x37b11f2d
  413f92:	xchg   BYTE PTR [edi-0x12],bl
  413f95:	push   ss
  413f96:	icebp  
  413f97:	sbb    al,0x2d
  413f99:	cli    
  413f9a:	int3   
  413f9b:	cmp    al,0xae
  413f9d:	sbb    bh,BYTE PTR [esi+ebp*1-0xc7d9e7d]
  413fa4:	hlt    
  413fa5:	mov    edi,0xc29a532b
  413faa:	push   esp
  413fab:	dec    esp
  413fac:	loopne 0x413f8c
  413fae:	scas   al,BYTE PTR es:[edi]
  413faf:	in     eax,0xc5
  413fb1:	shl    DWORD PTR [ebx+0x37371bb2],cl
  413fb7:	bound  ecx,QWORD PTR [ebx-0x61]
  413fba:	and    eax,0x4ec51274
  413fbf:	or     DWORD PTR [edi-0x25cd5b99],edx
  413fc5:	mov    DWORD PTR ds:0x6a37af43,edi
  413fcb:	mov    ebx,0x6a58c814
  413fd0:	cmp    ch,BYTE PTR [esi]
  413fd2:	or     ecx,edi
  413fd4:	push   ebx
  413fd5:	popf   
  413fd6:	xor    al,0xd7
  413fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd9:	jb     0x413fdc
  413fdb:	xchg   edx,eax
  413fdc:	fdivr  QWORD PTR [eax+0x4d]
  413fdf:	cmp    DWORD PTR [ebx+0x3d7a127b],0x5d9d8ba8
  413fe9:	inc    edx
  413fea:	into   
  413feb:	add    DWORD PTR [edi],ecx
  413fed:	nop    eax
  413ff0:	xchg   esi,eax
  413ff1:	push   ecx
  413ff2:	pop    edi
  413ff3:	and    DWORD PTR [ebp-0x5f20a0d9],ecx
  413ff9:	push   esi
  413ffa:	retf   
  413ffb:	int    0x85
  413ffd:	stos   DWORD PTR es:[edi],eax
  413ffe:	mov    al,0x8a
  414000:	or     ch,BYTE PTR [ebp+0x14]
  414003:	or     edi,ebp
  414005:	pop    ecx
  414006:	leave  
  414007:	shl    dh,cl
  414009:	jns    0x413fee
  41400b:	inc    edi
  41400c:	out    0x6a,al
  41400e:	fwait
  41400f:	cdq    
  414010:	mov    ecx,0xb12afee6
  414015:	jle    0x41402e
  414017:	fisub  WORD PTR [ebp-0x72e15a6c]
  41401d:	(bad)  
  41401f:	dec    ebp
  414020:	adc    DWORD PTR [ebp+0x6a],edi
  414023:	jne    0x413fd4
  414025:	and    BYTE PTR [edx-0x6539624],bh
  41402b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41402c:	lods   al,BYTE PTR ds:[esi]
  41402d:	adc    cl,bl
  41402f:	or     BYTE PTR [ebx+ecx*4],bh
  414032:	inc    esp
  414033:	ret    0xbb96
  414036:	or     eax,0xb595722e
  41403b:	in     eax,0xf2
  41403d:	retf   0xeac4
  414040:	cmc    
  414041:	(bad)  
  414042:	cli    
  414043:	dec    ebx
  414044:	fwait
  414045:	push   ebp
  414046:	sub    al,0xe8
  414048:	jbe    0x414039
  41404a:	fnstenv [eax+ebx*1-0x3c]
  41404e:	jp     0x414008
  414050:	inc    ebp
  414051:	cmp    BYTE PTR [ebx+0x47],dh
  414054:	out    0x29,al
  414056:	dec    esp
  414057:	fisubr WORD PTR [esi+0xea7c9e3]
  41405d:	in     eax,dx
  41405e:	int3   
  41405f:	jmp    0x414078
  414061:	pop    ecx
  414062:	sub    BYTE PTR [edx-0x79],bh
  414065:	enter  0x2da1,0xce
  414069:	sti    
  41406a:	sbb    ch,bh
  41406c:	or     al,al
  41406e:	xchg   edx,eax
  41406f:	sahf   
  414070:	cld    
  414071:	icebp  
  414072:	push   ebp
  414073:	adc    dh,BYTE PTR [ebx+0x3]
  414076:	inc    ebx
  414077:	sar    BYTE PTR [esi+0x2631129c],cl
  41407d:	mov    BYTE PTR [ebx+0x3429d723],dl
  414083:	jns    0x414009
  414085:	mov    ebp,0x2ce20ffe
  41408a:	xchg   BYTE PTR [edi+edi*8+0x3b3988aa],ch
  414091:	rcl    DWORD PTR [edi+ebx*2],cl
  414094:	dec    esi
  414095:	cmp    al,BYTE PTR [ebx+0x4b]
  414098:	sub    al,0x31
  41409a:	mov    edi,0x856e35ff
  41409f:	mov    ch,0x5f
  4140a1:	imul   eax,DWORD PTR [ebx],0x7a25a66c
  4140a7:	cmp    eax,0x1fa00134
  4140ac:	push   ebp
  4140ad:	mov    WORD PTR [edx+0x7e],es
  4140b0:	cmp    al,0x27
  4140b2:	ret    0xb017
  4140b5:	cmp    dl,BYTE PTR [edi+0x28]
  4140b8:	loopne 0x41410e
  4140ba:	fisub  DWORD PTR [esi-0x3d929915]
  4140c0:	ds mov ch,0xd
  4140c3:	and    eax,0x108890c3
  4140c8:	adc    esi,ebp
  4140ca:	inc    ecx
  4140cb:	adc    ecx,edx
  4140cd:	arpl   WORD PTR [esp+eiz*8-0x53],si
  4140d1:	push   eax
  4140d2:	stos   BYTE PTR es:[edi],al
  4140d3:	pop    esi
  4140d4:	sub    eax,DWORD PTR [ebx+eax*4]
  4140d7:	aad    0x36
  4140d9:	enter  0x68ce,0x30
  4140dd:	data16 jp 0x41412b
  4140e0:	pop    ecx
  4140e1:	jg     0x41413f
  4140e3:	jmp    0x46612fd6
  4140e8:	or     eax,0x48722620
  4140ed:	mov    BYTE PTR [esp+ebp*8],al
  4140f0:	inc    ecx
  4140f1:	xor    al,0xe7
  4140f3:	scas   al,BYTE PTR es:[edi]
  4140f4:	pop    esi
  4140f5:	std    
  4140f6:	mov    bl,0xd2
  4140f8:	mov    ds:0x8d0191e7,eax
  4140fd:	mov    ebp,0x3e23de36
  414102:	push   esi
  414103:	mov    ecx,0xb39dcbe8
  414108:	jbe    0x41408f
  41410a:	or     al,0x2e
  41410c:	lahf   
  41410d:	lods   eax,DWORD PTR ds:[esi]
  41410e:	fs (bad) 
  414110:	inc    al
  414112:	retf   0x8b6d
  414115:	pop    eax
  414116:	cwde   
  414117:	lods   eax,DWORD PTR ds:[esi]
  414118:	je     0x4140c5
  41411a:	sbb    cl,BYTE PTR [esi]
  41411c:	xchg   ebp,eax
  41411d:	shl    BYTE PTR [edx+ebp*2+0x1e],1
  414121:	sub    BYTE PTR [ecx+0x7b1ec77c],dl
  414127:	out    0x75,eax
  414129:	xor    edx,DWORD PTR [edx-0x75]
  41412c:	loope  0x41415d
  41412e:	sub    eax,0x1b4cb5d2
  414133:	test   BYTE PTR [esi],bl
  414135:	pop    ebp
  414136:	mov    dl,0x84
  414138:	xchg   esp,eax
  414139:	cmp    BYTE PTR [eax-0x1e],bl
  41413c:	or     edx,0xb771df63
  414142:	mov    bl,0x18
  414144:	shl    edx,0xd6
  414147:	sub    esi,DWORD PTR [edx]
  414149:	je     0x414196
  41414b:	(bad)  
  41414c:	int3   
  41414d:	adc    esi,eax
  41414f:	inc    ebx
  414150:	outs   dx,BYTE PTR ds:[esi]
  414151:	mov    ah,0xc0
  414153:	pop    ebp
  414154:	dec    eax
  414155:	dec    ecx
  414156:	inc    edi
  414157:	popa   
  414158:	(bad)  
  41415a:	jne    0x414162
  41415c:	pop    es
  41415d:	push   esp
  41415e:	push   ds
  41415f:	(bad)  
  414160:	call   0x25735f12
  414165:	in     eax,dx
  414166:	add    BYTE PTR [edx-0x1dedeab5],0xf1
  41416d:	mov    BYTE PTR ds:0xaf5c2fc6,bh
  414173:	push   ecx
  414174:	sti    
  414175:	sub    esi,DWORD PTR [edx+0x1d]
  414178:	mov    ch,0x40
  41417a:	clc    
  41417b:	aad    0x65
  41417d:	xchg   ebp,eax
  41417e:	ror    BYTE PTR [edx-0x3ee04d15],0x47
  414185:	adc    ch,bl
  414187:	out    0x8f,al
  414189:	in     eax,dx
  41418a:	jmp    0xa8c1:0x56422b9b
  414191:	cmp    DWORD PTR ds:0xad6994ca,esp
  414197:	jp     0x414131
  414199:	and    eax,0x7963510
  41419e:	aaa    
  41419f:	xor    ecx,DWORD PTR [ebx-0x33]
  4141a2:	mov    al,0xb9
  4141a4:	jle    0x4141a6
  4141a6:	jmp    0x4141fc
  4141a8:	arpl   sp,bp
  4141aa:	test   al,0x65
  4141ac:	xor    DWORD PTR [ecx+eax*2],edx
  4141af:	adc    eax,0x2a87728
  4141b4:	add    DWORD PTR [eax+0x5c0216d1],ebp
  4141ba:	inc    edi
  4141bb:	cmp    DWORD PTR [edi+0x6b],0x4e
  4141bf:	push   ebp
  4141c0:	retf   0x7f66
  4141c3:	je     0x4141ba
  4141c5:	ficom  WORD PTR [ebp+edx*8-0x259016b7]
  4141cc:	push   esp
  4141cd:	mov    ebp,0x5f48bc68
  4141d2:	mov    ecx,0x173b770
  4141d7:	xchg   esi,eax
  4141d8:	mov    bh,BYTE PTR [ecx-0x7d]
  4141db:	add    al,0x70
  4141dd:	int3   
  4141de:	scas   eax,DWORD PTR es:[edi]
  4141df:	jae    0x414250
  4141e1:	jns    0x4141b0
  4141e3:	or     al,0x86
  4141e5:	sub    BYTE PTR [edx-0x13],0x53
  4141e9:	or     DWORD PTR [esi-0x20561164],ebx
  4141ef:	les    ebx,FWORD PTR [esi+0x290a3caa]
  4141f5:	ret    
  4141f6:	pop    eax
  4141f7:	aam    0xf9
  4141f9:	sbb    eax,0x1bac47c6
  4141fe:	test   eax,0x6c99bcd2
  414203:	cmp    al,BYTE PTR [edx+edi*1-0x80]
  414207:	fmul   st(4),st
  414209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41420a:	push   esi
  41420b:	in     al,dx
  41420c:	fild   DWORD PTR [ecx+0x56]
  41420f:	enter  0xefbb,0x30
  414213:	shl    edx,1
  414215:	js     0x414287
  414217:	add    eax,0xd1202a6e
  41421c:	dec    esp
  41421d:	cld    
  41421e:	jle    0x414267
  414220:	imul   esp,DWORD PTR [esi+0x690bb6b7],0xffffffcf
  414227:	jno    0x4141b7
  414229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41422a:	hlt    
  41422b:	mov    ebp,0x157092c3
  414230:	and    eax,0xfaa2d6aa
  414235:	xor    ebx,DWORD PTR [esi]
  414237:	pusha  
  414238:	in     eax,dx
  414239:	mov    edx,0xbf6e95d6
  41423e:	push   esi
  41423f:	imul   esi,DWORD PTR [edx],0x739e2705
  414245:	push   esp
  414246:	rol    DWORD PTR [eax+0x6b],1
  414249:	sbb    al,0x8a
  41424b:	and    DWORD PTR [esi+0x6d5f409a],esi
  414251:	pop    edi
  414252:	adc    ch,BYTE PTR [edx+ebx*4+0xd06518a]
  414259:	mov    cl,0xc3
  41425b:	adc    ecx,DWORD PTR [ebx-0x6aeadab9]
  414261:	aaa    
  414262:	add    bl,BYTE PTR [esi+0x3c]
  414265:	inc    edx
  414266:	addr16 in al,dx
  414268:	outs   dx,DWORD PTR ds:[esi]
  414269:	in     al,dx
  41426a:	ins    BYTE PTR es:[edi],dx
  41426b:	jl     0x414231
  41426d:	cmc    
  41426e:	sbb    DWORD PTR [edx+0x616d4db4],eax
  414274:	xchg   ebx,eax
  414275:	pusha  
  414276:	sub    eax,0xedb977b2
  41427b:	and    DWORD PTR [ecx],0xffffffb8
  41427e:	imul   eax,ecx,0x5c
  414281:	adc    edx,ebx
  414283:	inc    edi
  414284:	iret   
  414285:	adc    al,0xba
  414287:	pop    esp
  414288:	xchg   esp,eax
  414289:	loop   0x414247
  41428b:	jmp    0x8f8e546
  414290:	xor    BYTE PTR [edx+0x1b],dh
  414293:	cdq    
  414294:	fst    QWORD PTR [eax+eax*4+0x71cd50fd]
  41429b:	das    
  41429c:	mov    ecx,DWORD PTR [esi]
  41429e:	xchg   edi,eax
  41429f:	and    eax,0x6b749d50
  4142a4:	dec    edx
  4142a5:	xor    BYTE PTR [ebx],bl
  4142a7:	ins    DWORD PTR es:[edi],dx
  4142a8:	or     cl,ch
  4142aa:	sbb    BYTE PTR [edi+0x1f1582fc],dh
  4142b0:	cmp    BYTE PTR [ebp+0x30cd48a4],al
  4142b6:	fld    TBYTE PTR [ebx]
  4142b8:	xchg   DWORD PTR [eax],esp
  4142ba:	mov    gs:0x9c738eaa,eax
  4142c0:	push   esi
  4142c1:	iret   
  4142c2:	repz mov al,ds:0xc863301a
  4142c8:	mov    gs,WORD PTR ds:[edi+eax*4+0x77]
  4142cd:	sub    BYTE PTR [eax+0x7cd2c913],al
  4142d3:	ret    0xbcc0
  4142d6:	iret   
  4142d7:	lods   eax,DWORD PTR ds:[esi]
  4142d8:	imul   edx,ecx,0x2f2a7ae8
  4142de:	and    edi,DWORD PTR [ebx]
  4142e0:	pop    edx
  4142e1:	arpl   WORD PTR [ecx-0x41],bx
  4142e4:	jg     0x4142c9
  4142e6:	mov    esi,ebx
  4142e8:	bound  ebp,QWORD PTR [ecx]
  4142ea:	pusha  
  4142eb:	iret   
  4142ec:	push   ebp
  4142ed:	call   0x8f96:0x483d5ad8
  4142f4:	test   DWORD PTR [esi-0x6df32219],esp
  4142fa:	xchg   esp,eax
  4142fb:	dec    ebx
  4142fc:	ins    BYTE PTR es:[edi],dx
  4142fd:	dec    ecx
  4142fe:	xor    al,0x50
  414300:	add    BYTE PTR [edx-0x4417ddc7],bl
  414306:	sbb    al,0x68
  414308:	dec    eax
  414309:	imul   edx,DWORD PTR [edi-0x59],0x4c61e779
  414310:	aaa    
  414311:	stos   DWORD PTR es:[edi],eax
  414312:	mov    dh,0xa9
  414314:	push   edi
  414315:	xchg   esp,eax
  414316:	mov    dl,BYTE PTR [edi-0x5c3c2d02]
  41431c:	inc    edi
  41431d:	mov    ?,WORD PTR [ebp-0x49]
  414320:	xchg   ecx,eax
  414321:	pop    edi
  414322:	push   ss
  414323:	push   ecx
  414324:	int3   
  414325:	mov    ah,0x4f
  414327:	push   ds
  414328:	outs   dx,BYTE PTR ds:[esi]
  414329:	ret    
  41432a:	adc    eax,DWORD PTR [esi+0x42e1896d]
  414330:	push   eax
  414331:	push   ebx
  414332:	inc    ecx
  414333:	push   ss
  414334:	test   BYTE PTR [edx+0xe],bh
  414337:	pop    ds
  414338:	dec    esi
  414339:	(bad)  
  41433a:	mov    gs,ebx
  41433c:	xchg   ecx,eax
  41433d:	lahf   
  41433e:	xor    BYTE PTR [ecx-0x39ef457a],dh
  414344:	popf   
  414345:	ds (bad) 
  414347:	fistp  WORD PTR [esi+0x54]
  41434a:	arpl   WORD PTR [eax],bp
  41434c:	sub    ch,BYTE PTR [edi]
  41434e:	push   ds
  41434f:	fwait
  414350:	xor    bl,BYTE PTR [edx+0x2fd01714]
  414356:	pop    esi
  414357:	outs   dx,DWORD PTR ds:[esi]
  414358:	or     WORD PTR [edi-0x2],si
  41435c:	and    al,0x54
  41435e:	ret    
  41435f:	out    dx,al
  414360:	cld    
  414361:	cs mov ecx,0x974fd190
  414367:	out    0x4b,eax
  414369:	xor    al,0xd7
  41436b:	pusha  
  41436c:	jns    0x414354
  41436e:	xchg   edi,eax
  41436f:	imul   eax,DWORD PTR [edi],0xffffffd9
  414372:	test   DWORD PTR [edx],ebx
  414374:	outs   dx,DWORD PTR gs:[esi]
  414376:	adc    ebx,DWORD PTR ds:0x5779532d
  41437c:	pop    edx
  41437d:	and    al,0x57
  41437f:	dec    esi
  414380:	pop    esi
  414381:	clc    
  414382:	pop    ds
  414383:	sub    DWORD PTR [esi+0x78],esp
  414386:	gs sub al,0x9
  414389:	jbe    0x414347
  41438b:	mov    edi,0x92f6527b
  414390:	retf   0xac52
  414393:	aas    
  414394:	mov    al,dh
  414396:	push   edi
  414397:	inc    ebx
  414398:	pop    ebp
  414399:	ret    
  41439a:	inc    esi
  41439b:	loop   0x414403
  41439d:	sar    bl,0xc0
  4143a0:	jns    0x414337
  4143a2:	push   ebx
  4143a3:	push   ss
  4143a4:	inc    ecx
  4143a5:	xor    esp,DWORD PTR [edi+edi*4]
  4143a8:	sbb    cl,BYTE PTR [ecx-0x24]
  4143ab:	out    dx,al
  4143ac:	ja     0x41439e
  4143ae:	pop    ebx
  4143af:	and    edx,DWORD PTR [edi]
  4143b1:	mov    ch,0x85
  4143b3:	or     DWORD PTR ds:0x9d439e27,eax
  4143b9:	lds    esi,FWORD PTR [edx]
  4143bb:	loope  0x414386
  4143bd:	jbe    0x414395
  4143bf:	cmc    
  4143c0:	mov    al,0xe
  4143c2:	in     eax,0xdc
  4143c4:	jne    0x414357
  4143c6:	xchg   edx,eax
  4143c7:	aad    0xc5
  4143c9:	in     al,0xf1
  4143cb:	mov    eax,0xa3e689e7
  4143d0:	inc    eax
  4143d1:	pop    ds
  4143d2:	pop    esp
  4143d3:	shl    BYTE PTR [esi],cl
  4143d5:	aam    0xbf
  4143d7:	retf   0x3c91
  4143da:	stos   BYTE PTR es:[edi],al
  4143db:	cmp    al,0x22
  4143dd:	(bad)  
  4143de:	jg     0x41445e
  4143e0:	outs   dx,BYTE PTR gs:[esi]
  4143e2:	clc    
  4143e3:	sbb    eax,ebp
  4143e5:	std    
  4143e6:	(bad)  
  4143e7:	cmp    BYTE PTR [eax+0x1e],ah
  4143ea:	inc    ebx
  4143eb:	ins    BYTE PTR es:[edi],dx
  4143ec:	daa    
  4143ed:	sti    
  4143ee:	dec    eax
  4143ef:	arpl   WORD PTR [ebx+esi*4+0x52309787],di
  4143f6:	adc    DWORD PTR [eax-0x19],0x26
  4143fa:	add    bl,BYTE PTR [edx]
  4143fc:	push   cs
  4143fd:	outs   dx,DWORD PTR ds:[esi]
  4143fe:	aas    
  4143ff:	push   ecx
  414400:	mov    DWORD PTR [ebx+0x2d],ebp
  414403:	and    al,0x6b
  414405:	mov    bh,0xef
  414407:	mov    esp,cs
  414409:	in     al,0x3
  41440b:	dec    edx
  41440c:	add    esp,DWORD PTR [ebp+0x34]
  41440f:	push   cs
  414410:	dec    ebx
  414411:	cmp    BYTE PTR [edi],al
  414413:	xchg   esp,eax
  414414:	clc    
  414415:	pop    es
  414416:	fadd   st,st(7)
  414418:	jne    0x41440f
  41441a:	sub    al,BYTE PTR [ebx]
  41441c:	or     ebx,DWORD PTR [edi]
  41441e:	call   0x823a:0xb65b5abb
  414425:	mov    BYTE PTR [edi-0x995ad5a],bh
  41442b:	outs   dx,BYTE PTR ds:[esi]
  41442c:	scas   al,BYTE PTR es:[edi]
  41442d:	cmp    BYTE PTR [ebp+0x4e3c829b],dl
  414433:	add    esi,DWORD PTR [ebx+0x4a]
  414436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414437:	sar    esp,0xf6
  41443a:	mov    eax,0xc38acf7d
  41443f:	pop    eax
  414440:	pop    edi
  414441:	lods   al,BYTE PTR ds:[esi]
  414442:	add    DWORD PTR [esi+0x6db7fe75],0xdc70c64a
  41444c:	in     eax,dx
  41444d:	mov    WORD PTR [esi],fs
  41444f:	lea    esp,[eax]
  414451:	add    DWORD PTR [edx],0x6
  414454:	or     bh,BYTE PTR [ebx+0x28]
  414457:	pop    edi
  414458:	(bad)  
  414459:	leave  
  41445a:	frstor [eax-0x2b]
  41445d:	or     eax,0xd45ce13e
  414462:	mov    ds:0x9ab90e3b,eax
  414467:	jmp    0xb66cc75f
  41446c:	push   ecx
  41446d:	lea    esp,[edx+0x5c]
  414470:	xlat   BYTE PTR ds:[ebx]
  414471:	ins    BYTE PTR es:[edi],dx
  414472:	jno    0x4143fb
  414474:	jg     0x41440c
  414476:	das    
  414477:	jmp    0x41443f
  414479:	xlat   BYTE PTR ds:[ebx]
  41447a:	js     0x41445d
  41447c:	push   esp
  41447d:	xchg   BYTE PTR [edi+0x9],bl
  414480:	dec    ebx
  414481:	or     BYTE PTR [ebp+0x37],cl
  414484:	imul   edx,ebx,0x364a44de
  41448a:	mov    fs,edi
  41448c:	push   esi
  41448d:	xchg   edx,eax
  41448e:	test   al,cl
  414490:	fimul  WORD PTR [ebp+0x45c2881]
  414496:	retf   
  414497:	jnp    0x41443c
  414499:	pusha  
  41449a:	ror    ebp,0xe4
  41449d:	pop    es
  41449e:	ins    DWORD PTR es:[edi],dx
  41449f:	adc    DWORD PTR ds:0x883575c1,esi
  4144a5:	test   al,0x92
  4144a7:	mov    dh,0xc4
  4144a9:	sub    eax,0xde87b1db
  4144ae:	ror    BYTE PTR [ebp+0x11],cl
  4144b1:	jae    0x414497
  4144b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b4:	inc    ebx
  4144b5:	ja     0x414456
  4144b7:	pusha  
  4144b8:	jmp    0xc990:0xbff1fa1c
  4144bf:	xlat   BYTE PTR ds:[ebx]
  4144c0:	aam    0x31
  4144c2:	sub    eax,DWORD PTR [edx+0x2]
  4144c5:	jmp    0x414498
  4144c7:	mov    dh,0xe4
  4144c9:	xchg   al,al
  4144cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144cc:	cdq    
  4144cd:	jmp    0x931e4cb2
  4144d2:	inc    esi
  4144d3:	(bad)  
  4144d4:	fsub   DWORD PTR [ebp-0x2ecdc6bf]
  4144da:	aad    0xe9
  4144dc:	(bad)  
  4144de:	push   0x120758da
  4144e3:	lahf   
  4144e4:	or     BYTE PTR [ebp-0x78a14b7d],bl
  4144ea:	adc    bl,BYTE PTR [esi+0x30]
  4144ed:	stos   DWORD PTR es:[edi],eax
  4144ee:	in     al,0x7
  4144f0:	adc    eax,0x2d3c734f
  4144f5:	xor    DWORD PTR [eax-0x6b],edi
  4144f8:	jle    0x41453d
  4144fa:	pusha  
  4144fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fc:	jnp    0x41454e
  4144fe:	cs mov ebp,0xf068fa11
  414504:	lods   al,BYTE PTR ds:[esi]
  414505:	rcr    ebx,cl
  414507:	hlt    
  414508:	test   BYTE PTR [ebx+0x4da10b],al
  41450e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41450f:	das    
  414510:	pop    eax
  414511:	pusha  
  414512:	jg     0x4144b9
  414514:	(bad)  
  414515:	aad    0xe9
  414517:	leave  
  414518:	out    dx,al
  414519:	fisub  WORD PTR [esi-0x17bb2945]
  41451f:	jg     0x4144c5
  414521:	xchg   edi,eax
  414522:	lods   al,BYTE PTR ds:[esi]
  414523:	ss (bad) 
  414526:	(bad)  
  414527:	mov    edx,0xc7a646fb
  41452c:	aad    0x2e
  41452e:	lahf   
  41452f:	inc    edx
  414530:	cli    
  414531:	in     eax,dx
  414532:	call   0x5f99:0x821d817b
  414539:	ds and ebp,ecx
  41453c:	pop    ebx
  41453d:	(bad)  
  41453e:	hlt    
  41453f:	push   0x4f
  414541:	jmp    0x35dcaf5d
  414546:	cli    
  414547:	add    bh,dh
  414549:	inc    ebp
  41454a:	imul   edx,DWORD PTR [edx-0x719f7dfd],0xffffffac
  414551:	das    
  414552:	ds push esp
  414554:	call   0xeb34fcd9
  414559:	and    dl,BYTE PTR ds:0x132b1397
  41455f:	mov    dl,0x9e
  414561:	int3   
  414562:	push   eax
  414563:	push   edi
  414564:	jae    0x414532
  414566:	pop    ebp
  414567:	jb     0x41453e
  414569:	inc    ebx
  41456a:	fcmovnu st,st(5)
  41456c:	leave  
  41456d:	and    dh,BYTE PTR [eax+0x1689a6c5]
  414573:	div    esp
  414575:	jb     0x41459a
  414577:	pop    ecx
  414578:	(bad)  
  414579:	mov    ebp,0xf6a12907
  41457e:	lahf   
  41457f:	sbb    al,0xe2
  414581:	sbb    dl,BYTE PTR [ecx+ebp*8-0x5d8ad3b8]
  414588:	(bad)  
  414589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41458a:	dec    bx
  41458c:	mov    ebp,0x3269b86c
  414591:	push   esi
  414592:	adc    ebx,DWORD PTR [edi+eiz*1-0x1cc57115]
  414599:	mov    al,0x15
  41459b:	call   0xab96:0x52b8cc24
  4145a2:	in     al,0xae
  4145a4:	cmp    BYTE PTR [ebp-0x4a],bl
  4145a7:	mov    bh,cl
  4145a9:	mov    eax,0xa331b05e
  4145ae:	xchg   edi,eax
  4145af:	fstp   DWORD PTR [ecx+0x39]
  4145b2:	call   0x879d:0x357afb56
  4145b9:	inc    edx
  4145ba:	push   ebx
  4145bb:	jbe    0x4145c6
  4145bd:	scas   eax,DWORD PTR es:[edi]
  4145be:	mov    ?,esp
  4145c0:	dec    DWORD PTR [edi+eax*8+0x51]
  4145c4:	pop    edx
  4145c5:	cld    
  4145c6:	repz in al,0x55
  4145c9:	rcr    BYTE PTR [ebx+0x0],0xc3
  4145cd:	pop    es
  4145ce:	adc    eax,0x5331efdd
  4145d3:	inc    ebx
  4145d4:	hlt    
  4145d5:	mov    ebx,DWORD PTR [ebx-0x6b]
  4145d8:	mov    WORD PTR [esi-0x60],gs
  4145db:	mov    eax,0x8e4ea3a8
  4145e0:	cmp    bh,cl
  4145e2:	mov    cl,0x49
  4145e4:	fild   WORD PTR [ebx]
  4145e6:	in     eax,0xfe
  4145e8:	mov    bh,0x93
  4145ea:	push   0xdc8c6c3f
  4145ef:	fdivr  QWORD PTR [edx-0xc4fcefa]
  4145f5:	gs mov al,0xac
  4145f8:	popf   
  4145f9:	add    eax,0x2c79b6e0
  4145fe:	push   es
  4145ff:	jnp    0x414674
  414601:	out    dx,al
  414602:	xchg   ebx,eax
  414603:	mov    dh,0x7f
  414605:	mov    bh,0x65
  414607:	xor    ecx,edi
  414609:	jp     0x4145f7
  41460b:	imul   ebx,DWORD PTR [ecx+0x76],0x20756d44
  414612:	sahf   
  414613:	addr16 ja 0x4145c0
  414616:	mov    esi,0x728c735
  41461b:	xor    esp,ecx
  41461d:	jg     0x414650
  41461f:	sub    BYTE PTR [eax+0x7d5f0303],cl
  414625:	leave  
  414626:	mov    bl,0x60
  414628:	push   0x5f
  41462a:	data16 fndisi(8087 only) 
  41462d:	adc    dl,BYTE PTR [ebx+ebx*8+0x2]
  414631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414632:	sbb    BYTE PTR [edx],al
  414634:	and    al,0xb
  414636:	enter  0x5cfc,0xb
  41463a:	xchg   ebp,eax
  41463b:	inc    edi
  41463c:	fadd   DWORD PTR [eax+ebx*8+0x70b4440a]
  414643:	push   esi
  414644:	xchg   edi,eax
  414645:	pop    ebx
  414646:	sbb    eax,0x3a4a2e74
  41464b:	mov    edx,0x75fb8954
  414650:	fbstp  TBYTE PTR [esi-0x3876d9c]
  414656:	push   esi
  414657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414658:	scas   al,BYTE PTR es:[edi]
  414659:	ds pop esi
  41465b:	cdq    
  41465c:	in     al,0xa3
  41465e:	adc    ecx,DWORD PTR [eax-0x28]
  414661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414662:	sbb    BYTE PTR [ecx+0x6a9a29ca],ch
  414668:	jnp    0x41467e
  41466a:	lea    edi,[eax]
  41466c:	inc    ecx
  41466d:	cwde   
  41466e:	stc    
  41466f:	cmp    DWORD PTR [edi-0x6],edi
  414672:	int    0x82
  414674:	hlt    
  414675:	ds fs mov ch,0xc2
  414679:	sbb    bh,dh
  41467b:	aam    0xd5
  41467d:	in     eax,dx
  41467e:	cmp    DWORD PTR ds:0x5821a7fa,eax
  414684:	xchg   edx,eax
  414685:	mov    ch,0xd1
  414687:	mov    cl,BYTE PTR gs:[ebx+0x45e2f491]
  41468e:	loopne 0x4146f3
  414690:	sbb    al,0x31
  414692:	test   bh,0x46
  414695:	or     BYTE PTR [ecx+0x46],bh
  414698:	leave  
  414699:	je     0x4146b2
  41469b:	adc    ch,ah
  41469d:	div    cl
  41469f:	test   al,0xe8
  4146a1:	aam    0xcf
  4146a3:	push   esi
  4146a4:	mov    ebp,0x43ffbc35
  4146a9:	push   edx
  4146aa:	fdiv   QWORD PTR [esi]
  4146ac:	(bad)  [edi+esi*2-0x4686b6d7]
  4146b3:	ss jbe 0x41463c
  4146b6:	(bad)  
  4146b7:	out    0x87,al
  4146b9:	mov    esi,DWORD PTR [ecx]
  4146bb:	inc    eax
  4146bc:	std    
  4146bd:	cmp    DWORD PTR [edi+0x5c],eax
  4146c0:	stos   DWORD PTR es:[edi],eax
  4146c1:	adc    DWORD PTR [ebx-0x11],ecx
  4146c4:	xor    eax,0x917e30f4
  4146c9:	jmp    0x47a17a25
  4146ce:	or     al,BYTE PTR [ebx-0x25]
  4146d1:	mov    fs,WORD PTR [edx]
  4146d3:	out    dx,al
  4146d4:	inc    eax
  4146d5:	out    dx,eax
  4146d6:	inc    edx
  4146d7:	in     al,0x6d
  4146d9:	cmp    eax,0xce0fe8a8
  4146de:	cld    
  4146df:	push   cs
  4146e0:	mul    dh
  4146e2:	ss scas al,BYTE PTR es:[edi]
  4146e4:	lods   eax,DWORD PTR ds:[esi]
  4146e5:	add    ebx,ebp
  4146e7:	pop    ecx
  4146e8:	fdivr  QWORD PTR [edi]
  4146ea:	jb     0x41471b
  4146ec:	xchg   edi,eax
  4146ed:	mov    eax,0x7d2199f
  4146f2:	adc    eax,0xcd68b2b8
  4146f7:	fnsave [esi-0x13627ad9]
  4146fd:	pop    esi
  4146fe:	cmp    ah,BYTE PTR [edx+ecx*1+0x6d27f06f]
  414705:	sar    ch,cl
  414707:	(bad)  
  414708:	stc    
  414709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41470a:	jns    0x41474c
  41470c:	push   ebx
  41470d:	push   0xb1d66e5b
  414712:	xor    al,0xe7
  414714:	add    BYTE PTR [ecx+0x1d],ch
  414717:	dec    ebx
  414718:	mov    ds:0x9ef58157,eax
  41471d:	xchg   esp,eax
  41471e:	jmp    0xa9a25700
  414723:	retf   
  414724:	cmp    eax,0x7c7c9418
  414729:	jl     0x4146fd
  41472b:	int3   
  41472c:	dec    edi
  41472d:	jmp    0x4146f8
  41472f:	sbb    DWORD PTR [esi],ebx
  414731:	sbb    esi,edi
  414733:	adc    ecx,ebx
  414735:	aad    0xcb
  414737:	shl    DWORD PTR ds:0xb4e91318,cl
  41473d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41473e:	repnz sub dl,bh
  414741:	mov    eax,0x59ca725b
  414746:	adc    al,0xe4
  414748:	push   ebp
  414749:	pop    ebp
  41474a:	aas    
  41474b:	xor    esi,0xffffffa1
  41474e:	test   DWORD PTR [edx-0x3f],ebx
  414751:	test   al,0x94
  414753:	test   bl,bh
  414755:	lds    eax,FWORD PTR [edx-0x5958e89]
  41475b:	push   edx
  41475c:	lahf   
  41475d:	test   eax,0x7b313e50
  414762:	jb     0x4147cb
  414764:	retf   
  414765:	mov    dh,BYTE PTR [ecx-0x6b63e8a2]
  41476b:	loope  0x41477b
  41476d:	xchg   edx,ecx
  41476f:	pop    es
  414770:	dec    esp
  414771:	fnsave [esi-0x65]
  414774:	pop    ds
  414775:	inc    edi
  414776:	(bad)  
  414777:	lods   eax,DWORD PTR ds:[esi]
  414778:	xor    eax,0xe36f50d3
  41477d:	push   ss
  41477e:	pop    ds
  41477f:	repz and bl,BYTE PTR [esi-0x72531167]
  414786:	jmp    0x414719
  414788:	xlat   BYTE PTR ds:[ebx]
  414789:	mov    WORD PTR [eax-0x3ede92ab],si
  414790:	sub    cl,BYTE PTR ds:[ecx-0x46]
  414794:	add    DWORD PTR [edi+0x48],ecx
  414797:	pop    ebp
  414798:	cmp    ecx,DWORD PTR [eax]
  41479a:	movzx  esi,sp
  41479d:	cmp    al,0x7f
  41479f:	dec    esi
  4147a0:	sar    DWORD PTR [ecx-0x1d],0xc9
  4147a4:	or     DWORD PTR [esi],ecx
  4147a6:	jge    0x414824
  4147a8:	add    eax,0x2454921e
  4147ad:	inc    esp
  4147ae:	mov    eax,0xc7b5c18b
  4147b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147b4:	and    BYTE PTR [ecx-0x6349e46],cl
  4147ba:	es std 
  4147bc:	je     0x414744
  4147be:	cmp    eax,0x2057ae6c
  4147c3:	cmp    al,0xaf
  4147c5:	push   0x616b3305
  4147ca:	dec    edx
  4147cb:	jmp    0xca2e9d7f
  4147d0:	xor    al,0x41
  4147d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d3:	mov    ah,0xfe
  4147d5:	and    ch,BYTE PTR [ebp+0x72]
  4147d8:	mov    ebx,0x7861dabf
  4147dd:	fwait
  4147de:	out    0x6f,al
  4147e0:	sbb    eax,0x7e77d676
  4147e5:	(bad)  
  4147e6:	pop    ds
  4147e7:	jne    0x4147ed
  4147e9:	jmp    0x95cf:0x6ffbb26f
  4147f0:	mov    ecx,0x8e720b3e
  4147f5:	lods   al,BYTE PTR ds:[esi]
  4147f6:	outs   dx,DWORD PTR ds:[esi]
  4147f7:	mov    ebx,0x9b2e1218
  4147fc:	aad    0x2e
  4147fe:	repnz xchg ebx,eax
  414800:	fst    DWORD PTR [ebx+0x4d]
  414803:	and    eax,edx
  414805:	test   BYTE PTR [edi+0x55],al
  414808:	out    dx,eax
  414809:	sub    esp,DWORD PTR [edx+0x14]
  41480c:	push   ebx
  41480d:	adc    al,0xce
  414810:	inc    esi
  414811:	into   
  414812:	mov    edi,0x76d8c824
  414817:	mov    eax,ds:0xa4f614a3
  41481c:	or     edi,DWORD PTR [ebx-0x3ae300ca]
  414822:	pop    ss
  414823:	push   0xfffffffd
  414825:	lock jbe 0x414809
  414828:	ds jb  0x414892
  41482b:	sbb    ch,BYTE PTR [ebx+0x13857c34]
  414831:	and    eax,DWORD PTR [ecx]
  414833:	jge    0x4147dc
  414835:	arpl   WORD PTR [edi+0x19],ax
  414838:	mov    bl,0x86
  41483a:	les    ebx,FWORD PTR [edx]
  41483c:	iret   
  41483d:	xchg   BYTE PTR [ebp-0x4d],bh
  414840:	stos   DWORD PTR es:[edi],eax
  414841:	push   ss
  414842:	not    DWORD PTR [ebx]
  414844:	xlat   BYTE PTR ds:[ebx]
  414845:	fs dec ebp
  414847:	adc    edx,edx
  414849:	push   esi
  41484a:	xchg   esp,eax
  41484b:	mov    esp,0x8902761d
  414850:	sti    
  414851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414852:	mov    cs,edi
  414854:	pop    ebp
  414855:	outs   dx,DWORD PTR ds:[esi]
  414856:	ins    BYTE PTR es:[edi],dx
  414857:	xor    ebx,esi
  414859:	pushf  
  41485a:	mov    ebx,ebx
  41485c:	mov    esp,0xb7ed5afb
  414861:	pop    esi
  414862:	ret    0x15ee
  414865:	push   esp
  414866:	sub    DWORD PTR [eax],0xffffff8d
  414869:	adc    ah,BYTE PTR [edi]
  41486b:	cdq    
  41486c:	xor    eax,0x1afb1e0e
  414871:	pusha  
  414872:	(bad)  
  414873:	stos   BYTE PTR es:[edi],al
  414874:	or     al,0x1a
  414876:	ins    DWORD PTR es:[edi],dx
  414877:	xor    DWORD PTR ds:0x5eb93c18,edx
  41487d:	inc    eax
  41487e:	pop    ss
  41487f:	sub    DWORD PTR [ebp+0x6a4379af],ebp
  414885:	or     dh,ch
  414887:	(bad)  
  414888:	lock cmp al,0x6d
  41488b:	xor    cl,dl
  41488d:	sub    esi,DWORD PTR [edi]
  41488f:	pop    ds
  414890:	dec    ebp
  414891:	sbb    al,BYTE PTR ds:0x32d105b1
  414897:	jl     0x4148b3
  414899:	adc    eax,DWORD PTR [ebx+0x38]
  41489c:	(bad)  
  41489d:	adc    BYTE PTR [ebp+0x60f278ce],bh
  4148a3:	add    DWORD PTR [esi-0x3c45bc86],ebp
  4148a9:	jnp    0x414908
  4148ab:	lahf   
  4148ac:	or     ebx,DWORD PTR [ebx]
  4148ae:	in     al,0x97
  4148b0:	jb     0x4148d3
  4148b2:	pop    edx
  4148b3:	daa    
  4148b4:	jnp    0x414876
  4148b6:	mov    eax,DWORD PTR [edi]
  4148b8:	in     eax,0xec
  4148ba:	fwait
  4148bb:	pop    ebx
  4148bc:	jecxz  0x4148e6
  4148be:	ffreep st(6)
  4148c0:	push   edx
  4148c1:	xchg   ecx,eax
  4148c2:	rcr    BYTE PTR ss:0x41a9614e,0x9a
  4148ca:	cmp    al,0xb3
  4148cc:	pushf  
  4148cd:	test   BYTE PTR [ebx+0x1a],cl
  4148d0:	push   ds
  4148d1:	jno    0x414894
  4148d3:	push   cs
  4148d4:	scas   eax,DWORD PTR es:[edi]
  4148d5:	jns    0x414884
  4148d7:	pop    ds
  4148d8:	and    dh,BYTE PTR [edi+0x49]
  4148db:	sbb    cl,dl
  4148dd:	out    dx,eax
  4148de:	lods   al,BYTE PTR ds:[esi]
  4148df:	jns    0x4148e7
  4148e1:	cmp    eax,0xf003f5fe
  4148e6:	fild   WORD PTR [ebp+0x1a]
  4148e9:	cmp    bl,BYTE PTR [esi]
  4148eb:	jno    0x414962
  4148ed:	leave  
  4148ee:	nop
  4148ef:	xor    al,0x76
  4148f1:	add    eax,0x9490c503
  4148f6:	push   0xffffff8a
  4148f8:	nop
  4148f9:	inc    ebp
  4148fa:	shl    DWORD PTR [ecx],cl
  4148fc:	mov    bh,0x25
  4148fe:	or     eax,0xca471e3e
  414903:	or     eax,0xf5b355c7
  414908:	push   dx
  41490a:	sbb    BYTE PTR [edx+0xf],dl
  41490d:	sbb    ecx,esi
  41490f:	les    ebx,FWORD PTR [ecx+edi*1+0x65]
  414913:	jno    0x4148b5
  414915:	add    al,0x24
  414917:	mul    BYTE PTR [ecx]
  414919:	in     eax,0xce
  41491b:	push   ebx
  41491c:	push   edi
  41491d:	mov    dh,0xef
  41491f:	pop    es
  414920:	sbb    eax,0x720c9826
  414925:	scas   eax,DWORD PTR es:[edi]
  414926:	ret    
  414927:	xchg   ecx,eax
  414928:	sbb    al,0x21
  41492a:	push   ecx
  41492b:	ret    0xf321
  41492e:	jno    0x41490a
  414930:	out    dx,eax
  414931:	mov    ebx,0xa94a7b56
  414936:	xchg   ebx,eax
  414937:	test   al,0xe5
  414939:	pop    edi
  41493a:	pushf  
  41493b:	das    
  41493c:	or     BYTE PTR [edi+0x5d],ah
  41493f:	sbb    ch,BYTE PTR [eax+edx*4]
  414942:	fld    st(5)
  414944:	ins    BYTE PTR es:[edi],dx
  414945:	push   0x77
  414947:	push   0x735542e5
  41494c:	mov    dh,0x7c
  41494e:	mov    DWORD PTR [ecx],ebp
  414950:	dec    ecx
  414951:	and    eax,0x2130c8b6
  414956:	pop    ss
  414957:	fld    DWORD PTR [ebp+ecx*2-0x37]
  41495b:	cmc    
  41495c:	jns    0x41494f
  41495e:	rcr    BYTE PTR [ecx-0x14],cl
  414961:	fwait
  414962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414963:	out    dx,eax
  414964:	sub    al,BYTE PTR [ecx+ebx*1-0x12cb8d4b]
  41496b:	in     al,0x50
  41496d:	add    eax,0x9b816571
  414972:	push   0x55
  414974:	sbb    edi,ebp
  414976:	mov    dh,0x83
  414978:	fnstenv [ecx+0x665b0ea9]
  41497e:	fsubr  st,st(4)
  414980:	clc    
  414981:	cli    
  414982:	jmp    0x414982
  414984:	jne    0x4149dd
  414986:	jbe    0x4149ba
  414988:	nop
  414989:	jo     0x414957
  41498b:	jecxz  0x4149a5
  41498d:	(bad)  
  41498e:	in     al,0x4e
  414990:	in     eax,0x52
  414992:	out    dx,eax
  414993:	fld    TBYTE PTR [ecx+0x785bf47c]
  414999:	mov    esi,0xe010b5e
  41499e:	das    
  41499f:	add    BYTE PTR [edx+0xf],al
  4149a2:	inc    eax
  4149a3:	iret   
  4149a4:	repz popa 
  4149a6:	lods   eax,DWORD PTR ds:[esi]
  4149a7:	aas    
  4149a8:	jmp    0x14ff:0x8f328010
  4149af:	sbb    dh,BYTE PTR [esi+0x28245180]
  4149b5:	inc    edx
  4149b6:	popa   
  4149b7:	(bad)  
  4149b8:	pushf  
  4149b9:	push   ebp
  4149ba:	add    al,0x4
  4149bc:	cdq    
  4149bd:	lahf   
  4149be:	add    DWORD PTR [ebx],edi
  4149c0:	call   0x75edd028
  4149c5:	out    0xdb,al
  4149c7:	inc    ebp
  4149c8:	(bad)
  4149cb:	retf   
  4149cc:	je     0x414a25
  4149ce:	xchg   edx,eax
  4149d0:	xchg   BYTE PTR [ebp+edi*8-0x5f0c3838],ah
  4149d7:	into   
  4149d8:	in     eax,dx
  4149d9:	or     ebp,DWORD PTR [edx+eax*1]
  4149dc:	xchg   esp,ecx
  4149de:	dec    ecx
  4149df:	or     ch,BYTE PTR [esi]
  4149e1:	jo     0x414a22
  4149e3:	push   0xffffffa3
  4149e5:	js     0x41497a
  4149e7:	cs sub edx,edi
  4149ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149eb:	ins    BYTE PTR es:[edi],dx
  4149ec:	mov    ds:0xc0c20457,al
  4149f1:	nop
  4149f2:	mov    bl,0x43
  4149f4:	out    0x16,eax
  4149f6:	push   ebp
  4149f7:	sub    eax,0xe4b6b833
  4149fc:	in     eax,0x10
  4149fe:	test   BYTE PTR [edi-0x7710be61],0x2c
  414a05:	mov    eax,cs
  414a07:	or     eax,0xb2915124
  414a0c:	in     eax,0x7e
  414a0e:	pop    ebx
  414a0f:	mov    edx,DWORD PTR [esi+ecx*8-0xc11d6c2]
  414a16:	xor    eax,0xd30a6511
  414a1b:	or     BYTE PTR [edx-0x458b5736],ch
  414a21:	aad    0x10
  414a23:	adc    al,BYTE PTR [ebx-0x614e1e97]
  414a29:	test   eax,0x40c8caf6
  414a2e:	dec    esi
  414a2f:	ins    DWORD PTR es:[edi],dx
  414a30:	stc    
  414a31:	sub    DWORD PTR [esi-0x62],0x46a727a7
  414a38:	mov    ah,0xfd
  414a3a:	inc    eax
  414a3b:	jo     0x4149e4
  414a3d:	mov    esi,0xe9b1a512
  414a42:	add    al,0xdc
  414a44:	sub    cl,BYTE PTR ds:0x1ec2c2e8
  414a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a4b:	sub    DWORD PTR [edx],0x16ba43c8
  414a51:	imul   esp,edi,0x32
  414a54:	aaa    
  414a55:	jmp    0x53:0xb4b220cc
  414a5c:	sbb    BYTE PTR [eax],ah
  414a5e:	das    
  414a5f:	jns    0x414a6e
  414a61:	and    al,0x89
  414a63:	jl     0x414a35
  414a65:	loop   0x414aa8
  414a67:	test   esp,esp
  414a69:	sete   al
  414a6c:	hlt    
  414a6d:	sar    BYTE PTR [esi-0x3d0d9d16],0xb1
  414a74:	xchg   edi,eax
  414a75:	mov    ah,dh
  414a77:	imul   ebp,DWORD PTR [edx],0x7d
  414a7a:	bound  edx,QWORD PTR [edi]
  414a7c:	or     bl,BYTE PTR [ebp-0x2c79f894]
  414a82:	pop    ebx
  414a83:	gs inc ecx
  414a85:	mov    eax,0xe07182d6
  414a8a:	sub    ah,BYTE PTR [edi]
  414a8c:	ins    DWORD PTR es:[edi],dx
  414a8d:	stos   BYTE PTR es:[edi],al
  414a8e:	push   ecx
  414a8f:	sbb    DWORD PTR [edi-0x46],ebx
  414a92:	jecxz  0x414a85
  414a94:	bound  esi,QWORD PTR [ebp+0x51de7f99]
  414a9a:	mov    esi,0x7995a881
  414a9f:	sbb    eax,0x631b024f
  414aa4:	jl     0x414aac
  414aa6:	fld    DWORD PTR [ebp+0x26]
  414aa9:	hlt    
  414aaa:	les    ebx,FWORD PTR [eax]
  414aac:	fs push eax
  414aae:	stos   BYTE PTR es:[edi],al
  414aaf:	mov    esi,0xee8720cd
  414ab4:	cmp    BYTE PTR ss:[edi+0x12],0xc2
  414ab9:	mov    DWORD PTR [esi+0x6acf639],ecx
  414abf:	xchg   esi,eax
  414ac0:	(bad)  
  414ac1:	and    edi,DWORD PTR [edi+ecx*8]
  414ac4:	test   DWORD PTR [esp+edx*1],esp
  414ac7:	pusha  
  414ac8:	inc    eax
  414ac9:	rol    cl,1
  414acb:	jnp    0x414afd
  414acd:	xchg   ecx,eax
  414ace:	out    dx,al
  414acf:	(bad)  
  414ad0:	cmc    
  414ad1:	push   eax
  414ad2:	fld    QWORD PTR [edx+0x27]
  414ad5:	pop    edx
  414ad6:	arpl   WORD PTR [edx-0x6e5f2957],sp
  414adc:	mov    dl,0x8e
  414ade:	jp     0x414b2a
  414ae0:	pop    esi
  414ae1:	xchg   DWORD PTR [edx+0x3d],ebx
  414ae4:	ins    DWORD PTR es:[edi],dx
  414ae5:	retf   
  414ae6:	adc    eax,0x9afe0905
  414aeb:	push   esp
  414aec:	(bad)
  414aef:	ja     0x414b36
  414af1:	dec    ebp
  414af2:	pop    ecx
  414af3:	dec    ebp
  414af4:	stc    
  414af5:	mov    dl,0xfe
  414af7:	ret    0x8aa4
  414afa:	aaa    
  414afb:	out    0x36,eax
  414afd:	fidivr DWORD PTR [ecx+0x6b]
  414b00:	aam    0x41
  414b02:	imul   esp,DWORD PTR [ecx-0x728e61a],0x60d40b14
  414b0c:	rcr    DWORD PTR [ecx+0x50f02a6],0x3f
  414b13:	shr    ch,cl
  414b15:	cwde   
  414b16:	mov    cl,0xa5
  414b18:	fadd   st(3),st
  414b1a:	clc    
  414b1b:	jge    0x414b62
  414b1d:	mov    cl,BYTE PTR [ecx+0x40]
  414b20:	ss addr16 cli 
  414b23:	enter  0x44cf,0x55
  414b27:	inc    edi
  414b28:	jns    0x414b06
  414b2a:	mov    esi,0x9ae87a13
  414b2f:	xor    eax,0x5c60f389
  414b34:	ror    BYTE PTR [eax+0x4f],0x79
  414b38:	into   
  414b39:	add    edi,DWORD PTR [esi]
  414b3b:	(bad)  
  414b3c:	sbb    eax,0x4e98bbe0
  414b41:	push   0x63
  414b43:	inc    edx
  414b44:	cmp    ah,BYTE PTR [edx]
  414b46:	lock and eax,0xfe926a77
  414b4c:	push   cs
  414b4d:	sub    al,0xa7
  414b4f:	add    bh,BYTE PTR [ecx-0x47c3c1b9]
  414b55:	and    ecx,ebp
  414b57:	add    eax,0xe3b2c3a6
  414b5c:	and    al,0xe
  414b5e:	jge    0x414afe
  414b60:	out    dx,al
  414b61:	aad    0xf8
  414b63:	cmp    al,0x2f
  414b65:	das    
  414b66:	or     edx,DWORD PTR [edx+0x4b]
  414b69:	mov    bl,0x89
  414b6b:	fiadd  DWORD PTR [eax]
  414b6d:	cmp    edx,esp
  414b6f:	xor    DWORD PTR [edx-0x2b99ff51],0x98ac0de5
  414b79:	mov    ch,0xdf
  414b7b:	out    dx,eax
  414b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b7d:	fucom  st(6)
  414b7f:	push   ds
  414b80:	iret   
  414b81:	fimul  WORD PTR [esi-0x75]
  414b84:	(bad)  
  414b86:	idiv   BYTE PTR [ebp-0x1864b928]
  414b8c:	sbb    esp,DWORD PTR [edi]
  414b8e:	or     DWORD PTR ds:0xbf8b777,eax
  414b94:	sbb    al,0x11
  414b96:	ror    DWORD PTR [ebx-0x18],cl
  414b99:	popf   
  414b9a:	mov    ah,0xe7
  414b9c:	xor    BYTE PTR [edi+0x17],0xbb
  414ba0:	repnz fmul DWORD PTR [edx+eiz*1+0x4e201a1c]
  414ba8:	es inc edx
  414baa:	mov    esp,0x9ec2d673
  414baf:	or     BYTE PTR ds:[ebx+esi*4+0x36a2a42c],dl
  414bb7:	es push esp
  414bb9:	not    ch
  414bbb:	adc    DWORD PTR [esi-0x5d],edi
  414bbe:	test   eax,0xd40b9ab0
  414bc3:	imul   ebx,esi,0x6a
  414bc6:	sbb    BYTE PTR [esi-0x30],ah
  414bc9:	in     eax,dx
  414bca:	jbe    0x414c00
  414bcc:	adc    al,0x8c
  414bce:	sub    bl,dh
  414bd0:	mov    ds:0xc55b1c7b,eax
  414bd5:	sbb    BYTE PTR [ecx],0x12
  414bd8:	sbb    al,0x81
  414bda:	sbb    bh,bl
  414bdc:	test   DWORD PTR [ebp+0x179e8c8d],edi
  414be2:	xor    ebp,DWORD PTR [edi+0x26]
  414be5:	gs pop ss
  414be7:	aas    
  414be8:	(bad)  
  414be9:	outs   dx,BYTE PTR ds:[esi]
  414bea:	mov    ds:0xc688faa5,al
  414bef:	in     al,0x59
  414bf1:	xor    al,0xd7
  414bf3:	das    
  414bf4:	je     0x414c1d
  414bf6:	dec    edi
  414bf7:	enter  0x8921,0x54
  414bfb:	stos   BYTE PTR es:[edi],al
  414bfc:	inc    esi
  414bfd:	shl    DWORD PTR [esi+0x2bc07193],0xba
  414c04:	ins    BYTE PTR es:[edi],dx
  414c05:	adc    esi,DWORD PTR [esi+0x3]
  414c08:	and    bh,bl
  414c0a:	aaa    
  414c0b:	fist   WORD PTR [ebp+0x3d24a555]
  414c11:	mov    al,0xa5
  414c13:	adc    DWORD PTR [esi-0x6f],ebp
  414c16:	lahf   
  414c17:	sbb    edi,0x57adbe6e
  414c1d:	dec    esp
  414c1e:	sbb    bl,BYTE PTR [edi+0x6b]
  414c21:	pop    ecx
  414c22:	xchg   edx,eax
  414c23:	push   eax
  414c24:	fld    QWORD PTR [ebp+0x50e52b3c]
  414c2a:	je     0x414c7d
  414c2c:	mov    WORD PTR [edx-0x20ca026a],cs
  414c32:	mov    ds:0xf3f60959,al
  414c37:	pop    edi
  414c38:	lock out 0x5f,al
  414c3b:	scas   eax,DWORD PTR es:[edi]
  414c3c:	ins    BYTE PTR es:[edi],dx
  414c3d:	test   eax,0xd972db48
  414c42:	mov    ebp,0x6af9422
  414c47:	data16 inc BYTE PTR [ebx]
  414c4a:	xor    DWORD PTR [edx],edx
  414c4c:	add    eax,ecx
  414c4e:	cmp    eax,0x7aa53ea7
  414c53:	mov    WORD PTR [esi+0x26eb0cfc],cs
  414c59:	fwait
  414c5a:	nop
  414c5b:	cdq    
  414c5c:	xchg   ebp,eax
  414c5d:	mov    dh,0xac
  414c5f:	xor    dh,BYTE PTR [esi]
  414c61:	or     eax,0x7aac91d9
  414c66:	pop    esi
  414c67:	cmp    ch,ah
  414c69:	out    0x92,al
  414c6b:	cld    
  414c6c:	icebp  
  414c6d:	pop    eax
  414c6e:	repnz dec ecx
  414c70:	xchg   DWORD PTR [ebx+0x3b],eax
  414c73:	cmp    BYTE PTR [ebx-0x7],ch
  414c76:	clc    
  414c77:	outs   dx,BYTE PTR ds:[esi]
  414c78:	mov    esi,0xbbd5db68
  414c7d:	mov    dh,0x37
  414c7f:	(bad)  
  414c81:	jnp    0x414cc1
  414c83:	or     eax,0xbd728327
  414c88:	fbstp  TBYTE PTR [eax]
  414c8a:	in     eax,dx
  414c8b:	mov    ch,0xa7
  414c8d:	out    0xd7,eax
  414c8f:	ret    0xb4fd
  414c92:	stc    
  414c93:	mov    esi,0xcc3b8b9
  414c98:	mov    DWORD PTR [ecx+ebp*4],ecx
  414c9b:	mov    bh,0x47
  414c9d:	rol    DWORD PTR [eax-0x57],0x43
  414ca1:	sub    esp,DWORD PTR ds:0x42384db2
  414ca7:	ja     0x414c98
  414ca9:	dec    esp
  414caa:	fcom   st(6)
  414cac:	in     al,dx
  414cad:	inc    eax
  414cae:	lea    ebx,[ecx-0x1e]
  414cb1:	dec    ecx
  414cb2:	(bad)  
  414cb3:	or     eax,0xc4813a77
  414cb8:	add    al,0x10
  414cba:	lods   al,BYTE PTR ds:[esi]
  414cbb:	and    DWORD PTR [eax],edi
  414cbd:	add    eax,0x99833aae
  414cc2:	mov    esp,ecx
  414cc4:	or     BYTE PTR [esi],0xe3
  414cc7:	adc    esi,ebp
  414cc9:	es push ebx
  414ccb:	mov    eax,0x22cf4886
  414cd0:	nop
  414cd1:	jg     0x414c56
  414cd3:	inc    edx
  414cd4:	adc    ecx,DWORD PTR [edx]
  414cd6:	mov    edx,esp
  414cd8:	jae    0x414c76
  414cda:	test   BYTE PTR [edi-0x6d],dl
  414cdd:	adc    ch,ch
  414cdf:	sub    al,0x14
  414ce1:	mov    al,ds:0x799cc758
  414ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce7:	sbb    ebp,DWORD PTR [esi]
  414ce9:	(bad)  
  414cea:	xchg   esi,eax
  414ceb:	xor    BYTE PTR [edx],cl
  414ced:	sbb    DWORD PTR [ecx+0x2b8f81ba],0xffffff96
  414cf4:	and    al,0x39
  414cf6:	stos   DWORD PTR es:[edi],eax
  414cf7:	sbb    al,BYTE PTR [edx+edx*2+0x339de46]
  414cfe:	ss call 0xcd744553
  414d04:	pop    esi
  414d05:	push   0xab5626d
  414d0a:	mov    edi,DWORD PTR [edi]
  414d0c:	jmp    DWORD PTR [esi]
  414d0e:	stos   DWORD PTR es:[edi],eax
  414d0f:	xchg   ebp,eax
  414d10:	push   es
  414d11:	push   ss
  414d12:	scas   al,BYTE PTR es:[edi]
  414d13:	in     eax,dx
  414d14:	loope  0x414d1c
  414d16:	aam    0xd4
  414d18:	jae    0x414d51
  414d1a:	pop    esp
  414d1b:	adc    DWORD PTR [edx],esi
  414d1d:	das    
  414d1e:	adc    ebp,eax
  414d20:	ror    al,1
  414d22:	add    edx,edi
  414d24:	loop   0x414cc1
  414d26:	stos   BYTE PTR es:[edi],al
  414d27:	hlt    
  414d28:	dec    eax
  414d29:	in     eax,0x8e
  414d2b:	imul   esp,DWORD PTR [ebx],0x65
  414d2e:	cmp    edx,DWORD PTR [esi]
  414d30:	inc    ebx
  414d31:	cli    
  414d32:	fadd   QWORD PTR [edx]
  414d34:	les    ebp,FWORD PTR ds:0x552559c7
  414d3a:	xchg   esp,eax
  414d3b:	enter  0xdfc8,0x92
  414d3f:	cmc    
  414d40:	add    ebx,DWORD PTR ds:0x2540eb3e
  414d46:	test   al,0x34
  414d48:	repnz mov esi,0x987baf7f
  414d4e:	dec    ebp
  414d4f:	das    
  414d50:	xchg   edi,eax
  414d51:	popf   
  414d52:	mov    eax,0xd83b9470
  414d57:	popa   
  414d58:	sub    edi,DWORD PTR [edi+0x0]
  414d5b:	cld    
  414d5c:	scas   eax,DWORD PTR es:[edi]
  414d5d:	scas   eax,DWORD PTR es:[edi]
  414d5e:	ret    
  414d5f:	xor    dh,BYTE PTR [edi+0x43]
  414d62:	sub    dh,0x20
  414d65:	lods   eax,DWORD PTR ds:[esi]
  414d66:	and    bh,BYTE PTR [edx+edi*8-0x7]
  414d6a:	mov    eax,0xa14ed1d0
  414d6f:	cmc    
  414d70:	test   BYTE PTR [esi],0x31
  414d73:	fs xchg ebx,eax
  414d75:	les    eax,FWORD PTR [ebp-0xd9df900]
  414d7b:	cmp    eax,DWORD PTR [eax+0x1c]
  414d7e:	jns    0x414d99
  414d80:	push   eax
  414d81:	mov    edi,0x77df98b3
  414d86:	mov    ds:0xf70cbdb7,al
  414d8b:	jg     0x414d10
  414d8d:	cld    
  414d8e:	mov    bh,0x5
  414d90:	mov    BYTE PTR [eax],bl
  414d92:	cmp    BYTE PTR [ebp+0x24aac0cb],ch
  414d98:	sub    al,0x18
  414d9a:	jne    0xd1b9ab6
  414da0:	mov    ch,0xd6
  414da2:	test   BYTE PTR [ecx],bl
  414da4:	jae    0x414d43
  414da6:	sub    dl,ch
  414da8:	or     BYTE PTR [ebx],ah
  414daa:	stos   DWORD PTR es:[edi],eax
  414dab:	xlat   BYTE PTR ds:[ebx]
  414dac:	sub    dl,BYTE PTR [ecx-0x57cf8bc0]
  414db2:	enter  0x6f9d,0xfa
  414db6:	ret    0xd17
  414db9:	xor    al,0xb3
  414dbb:	pop    ecx
  414dbc:	test   BYTE PTR [eax],ch
  414dbe:	sti    
  414dbf:	call   0x6c1d:0xee67bee0
  414dc6:	(bad)  
  414dc7:	test   eax,0xb9df968e
  414dcc:	or     al,BYTE PTR [esi-0x4a4886c8]
  414dd2:	inc    DWORD PTR [ebx+0x70]
  414dd5:	inc    ecx
  414dd6:	in     eax,dx
  414dd7:	icebp  
  414dd8:	rcr    DWORD PTR [edx+0x38],1
  414ddb:	ds call 0xfece73b9
  414de1:	jle    0x414dbe
  414de3:	push   ss
  414de4:	jp     0x414d9b
  414de6:	jge    0x414e65
  414de8:	or     BYTE PTR [ecx],dh
  414dea:	fwait
  414deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dec:	test   eax,0xefc24834
  414df1:	jp     0x414d7b
  414df3:	xchg   esp,eax
  414df4:	(bad)  
  414df5:	in     eax,dx
  414df6:	mov    edi,0xffb99f57
  414dfb:	xor    DWORD PTR [ebx-0x1389e341],edx
  414e01:	or     dh,BYTE PTR ds:0x4d7196e0
  414e07:	sbb    BYTE PTR fs:[ecx+0x56],bh
  414e0b:	pop    esi
  414e0c:	jcxz   0x414dc2
  414e0f:	dec    esp
  414e10:	push   cs
  414e11:	and    BYTE PTR [ebp+eiz*4-0x6],cl
  414e15:	dec    ebp
  414e16:	mov    bh,0xd1
  414e18:	or     DWORD PTR [edi+edx*2+0x70],eax
  414e1c:	inc    esp
  414e1d:	pop    ss
  414e1e:	aas    
  414e1f:	loopne 0x414e41
  414e21:	imul   ebp,DWORD PTR [ebx-0x7770a410],0x990dc587
  414e2b:	dec    eax
  414e2c:	test   al,0x24
  414e2e:	mov    ch,0x1a
  414e30:	xor    dl,BYTE PTR [edi+0x3a8e7c7e]
  414e36:	xor    al,0x5f
  414e38:	pop    ebx
  414e39:	jecxz  0x414e5c
  414e3b:	push   eax
  414e3c:	arpl   WORD PTR [esi],bx
  414e3e:	sbb    ch,dl
  414e40:	ret    
  414e41:	in     eax,dx
  414e42:	rol    DWORD PTR [ebx],0xe8
  414e45:	jb     0x414ea3
  414e47:	mov    esp,0x30705dc2
  414e4c:	fwait
  414e4d:	lea    eax,[ebp-0x51408901]
  414e53:	pop    ds
  414e54:	adc    eax,0xaf626425
  414e59:	adc    ah,BYTE PTR ds:[edx]
  414e5c:	pop    ebx
  414e5d:	hlt    
  414e5e:	mov    bh,0xc1
  414e60:	or     DWORD PTR [ecx-0x7c9a4f5d],ecx
  414e66:	cmp    bh,bl
  414e68:	sbb    BYTE PTR [ebx],dl
  414e6a:	add    esi,DWORD PTR ds:0xa2335cb9
  414e70:	or     BYTE PTR [edx-0x1217f7b6],al
  414e76:	or     dl,BYTE PTR ds:0xbb973a32
  414e7c:	mov    eax,0xcf4aaa31
  414e81:	(bad)  
  414e83:	daa    
  414e84:	add    esi,DWORD PTR [ebx]
  414e86:	mov    ebx,0x63ae179e
  414e8b:	or     esp,ecx
  414e8d:	dec    esp
  414e8e:	add    bh,ch
  414e90:	mov    esi,0x6ada3026
  414e95:	daa    
  414e96:	xor    cl,ah
  414e98:	test   BYTE PTR [ebp-0x76],dh
  414e9b:	(bad)  
  414e9c:	mov    WORD PTR [eax-0x73c64263],es
  414ea2:	sysexit 
  414ea4:	in     al,dx
  414ea5:	sub    ebx,edi
  414ea7:	jp     0x414eb6
  414ea9:	mov    ch,0x2
  414eab:	scas   al,BYTE PTR es:[edi]
  414eac:	repnz out 0x36,al
  414eaf:	pop    edx
  414eb0:	xchg   ebx,eax
  414eb1:	pop    esi
  414eb2:	nop
  414eb3:	xor    DWORD PTR [edi-0x399ea81f],edi
  414eb9:	rol    BYTE PTR [eax+0x2454ef97],0x5f
  414ec0:	mov    ebx,0x30eaccb3
  414ec5:	retf   
  414ec6:	or     al,0x33
  414ec8:	and    ah,bh
  414eca:	cmp    dl,0x8d
  414ecd:	sbb    DWORD PTR [eax+0x3545343d],0x1f
  414ed4:	push   0x26
  414ed6:	aas    
  414ed7:	(bad)  
  414ed8:	cmp    eax,0x3353a584
  414edd:	aaa    
  414ede:	mov    al,0xec
  414ee0:	loop   0x414e71
  414ee2:	jnp    0x414f0a
  414ee4:	std    
  414ee5:	mov    dl,0xdd
  414ee7:	xor    DWORD PTR [ebx],esp
  414ee9:	pop    eax
  414eea:	pop    ebx
  414eeb:	xchg   BYTE PTR [esi-0x7746b18e],ch
  414ef1:	(bad)  
  414ef2:	icebp  
  414ef3:	bound  ebp,QWORD PTR [esi-0x9]
  414ef6:	add    bl,BYTE PTR [eax+0x7]
  414ef9:	(bad)  
  414efa:	lock pop esi
  414efc:	push   edi
  414efd:	xchg   edi,eax
  414efe:	in     eax,0x1f
  414f00:	sbb    BYTE PTR [ebx+ecx*2-0x3a],ch
  414f04:	adc    dh,cl
  414f06:	mov    bh,0x87
  414f08:	jecxz  0x414f2d
  414f0a:	or     edi,ebp
  414f0c:	and    ebx,DWORD PTR [eax+ebp*8-0x786641e4]
  414f13:	stos   DWORD PTR es:[edi],eax
  414f14:	or     esp,ebp
  414f16:	jno    0x414f21
  414f18:	pop    DWORD PTR [ecx-0x72c02687]
  414f1e:	xchg   ecx,eax
  414f1f:	jle    0x414f38
  414f21:	dec    ebx
  414f22:	nop
  414f23:	xchg   edx,eax
  414f24:	or     ebp,DWORD PTR [edi+0x44f63e23]
  414f2a:	mov    dh,0xaa
  414f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f2d:	test   DWORD PTR [esi+0x75],ebx
  414f30:	sub    al,0x9
  414f32:	into   
  414f33:	cdq    
  414f34:	(bad)  
  414f36:	mov    al,ds:0xf10752f3
  414f3b:	loop   0x414fbb
  414f3d:	mov    ecx,0xbb599457
  414f42:	jg     0x414fb6
  414f44:	jno    0x414f1a
  414f46:	in     eax,dx
  414f47:	and    DWORD PTR [edx+0xd],eax
  414f4a:	adc    edx,DWORD PTR [ebp+esi*4-0x130958e]
  414f51:	push   0xb88554d1
  414f56:	push   ebx
  414f57:	lods   al,BYTE PTR ds:[esi]
  414f58:	push   ecx
  414f59:	mov    ebx,DWORD PTR [edi-0x33]
  414f5c:	in     eax,dx
  414f5d:	scas   al,BYTE PTR es:[edi]
  414f5e:	inc    esi
  414f5f:	aam    0x9e
  414f61:	add    eax,DWORD PTR [eax+0x5d8ceb07]
  414f67:	and    al,0x94
  414f69:	out    0xd2,al
  414f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f6c:	cmp    ebx,DWORD PTR [edi]
  414f6e:	imul   edx,DWORD PTR [ebx+eax*2+0x59],0x30
  414f73:	adc    DWORD PTR [ebp+0x3b],esp
  414f76:	mov    esi,0x29dddd33
  414f7b:	faddp  st(0),st
  414f7d:	lea    eax,[edi]
  414f7f:	(bad)  
  414f80:	cmc    
  414f81:	dec    edx
  414f82:	loope  0x414f06
  414f84:	add    al,0x96
  414f86:	jle    0x414f0f
  414f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f89:	inc    ebp
  414f8a:	inc    esi
  414f8b:	jo     0x414f9a
  414f8d:	into   
  414f8e:	cld    
  414f8f:	in     al,dx
  414f90:	repnz in al,0x69
  414f93:	shl    DWORD PTR [eax+0x85edbe0],1
  414f99:	or     eax,DWORD PTR [ebx]
  414f9b:	xchg   esp,eax
  414f9c:	shl    DWORD PTR [ebx-0x63],0x1e
  414fa0:	das    
  414fa1:	xchg   ebp,eax
  414fa2:	mov    al,ds:0x41c78c3
  414fa7:	mov    ecx,0xf7a53c0f
  414fac:	pusha  
  414fad:	pop    ecx
  414fae:	mov    BYTE PTR [ebp-0x3a],bl
  414fb1:	push   0xffffffad
  414fb3:	leave  
  414fb4:	loope  0x414fb5
  414fb6:	pop    ss
  414fb7:	pop    eax
  414fb8:	jle    0x41500b
  414fba:	ret    0x8ac
  414fbd:	test   eax,0x95c886a
  414fc2:	stos   BYTE PTR es:[edi],al
  414fc3:	pop    ebx
  414fc4:	aas    
  414fc5:	xchg   edx,eax
  414fc6:	jmp    0x415040
  414fc8:	rcl    ch,1
  414fca:	mov    WORD PTR [eiz*8-0x58d3ee71],?
  414fd1:	fcmovne st,st(2)
  414fd3:	mov    ecx,0xd0369060
  414fd8:	ret    
  414fd9:	jno    0x41500f
  414fdb:	mov    dh,BYTE PTR [edi+0x2d]
  414fde:	xor    DWORD PTR [eax],edi
  414fe0:	xchg   DWORD PTR [esp+ebx*2],ebp
  414fe3:	nop
  414fe4:	inc    ebx
  414fe5:	xor    ah,BYTE PTR [ecx+0x5e]
  414fe8:	ret    
  414fe9:	jbe    0x414ffd
  414feb:	push   eax
  414fec:	fprem  
  414fee:	lea    eax,[eax+0x79]
  414ff1:	sar    DWORD PTR [ecx+ebp*4],1
  414ff4:	push   esi
  414ff5:	mov    al,ds:0xa2f4e10
  414ffa:	xor    BYTE PTR [edx-0x70c04d80],bh
  415000:	inc    ebx
  415001:	fmul   DWORD PTR [esi+0x28]
  415004:	dec    eax
  415005:	retf   0x9f4d
  415008:	or     eax,DWORD PTR [ecx+0x45c47634]
  41500e:	inc    ebx
  41500f:	add    edx,esi
  415011:	mov    eax,0xce155656
  415016:	(bad)  
  415018:	and    eax,0xa5b436b0
  41501d:	lods   al,BYTE PTR ds:[esi]
  41501e:	imul   esi,DWORD PTR [ecx],0x8ced02b3
  415024:	add    edx,DWORD PTR [ebp-0x70]
  415027:	xchg   esi,eax
  415028:	mov    al,ds:0xc43e6bb2
  41502d:	(bad)  
  41502e:	fisubr DWORD PTR [edx-0x351be82e]
  415034:	pop    esi
  415035:	ds push ds
  415037:	inc    esi
  415038:	fscale 
  41503a:	pop    edx
  41503b:	dec    edx
  41503c:	mov    ch,BYTE PTR [ebx+0x5ad84841]
  415042:	xchg   edi,eax
  415043:	push   esp
  415044:	clc    
  415045:	pop    ecx
  415046:	loopne 0x415003
  415048:	push   0xfffffffe
  41504a:	and    BYTE PTR [ebx],0xe8
  41504d:	sbb    al,BYTE PTR [esi+0x4674ccec]
  415053:	ret    
  415054:	and    BYTE PTR [edx],al
  415056:	mov    esi,0xe1e5e29
  41505b:	xchg   edx,eax
  41505c:	mov    ds:0xeabeec28,eax
  415061:	jmp    0x40f8d630
  415066:	and    ah,BYTE PTR [ebx+ebp*8-0x4a]
  41506a:	in     eax,dx
  41506b:	or     BYTE PTR [ecx-0x68],cl
  41506e:	shl    dl,1
  415070:	xchg   ebx,ebx
  415072:	jo     0x41500c
  415074:	fs cld 
  415076:	ds push cs
  415078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415079:	out    dx,al
  41507a:	xchg   DWORD PTR gs:[edi+0x3dedf569],edi
  415081:	inc    edi
  415082:	cdq    
  415083:	mov    ch,0x76
  415085:	dec    edx
  415086:	cmp    edi,ecx
  415088:	or     esp,DWORD PTR [eax]
  41508a:	adc    al,ch
  41508c:	sbb    eax,0x12806527
  415091:	rol    DWORD PTR [ebx+0x6a4888],0x82
  415098:	jnp    0x41510d
  41509a:	cmc    
  41509b:	mov    al,ds:0x2f1aeed0
  4150a0:	mov    dl,BYTE PTR ds:0x6d7e3e20
  4150a6:	in     eax,0x41
  4150a8:	push   eax
  4150a9:	aas    
  4150aa:	push   eax
  4150ab:	aaa    
  4150ac:	lahf   
  4150ad:	or     edx,ecx
  4150af:	pusha  
  4150b0:	cdq    
  4150b1:	adc    al,0x63
  4150b3:	xchg   DWORD PTR [edi+0x66514e8a],esp
  4150b9:	loopne 0x4150e7
  4150bb:	mov    ah,cl
  4150bd:	cmp    esp,DWORD PTR [edx+0x1f]
  4150c0:	push   edi
  4150c1:	ja     0x41510d
  4150c3:	add    eax,0xad131980
  4150c8:	mov    edx,0x3c35f4ca
  4150cd:	mov    bh,0xe7
  4150cf:	sub    ah,dh
  4150d1:	adc    dh,BYTE PTR [ebp+eiz*1+0x412dc7a3]
  4150d8:	fisubr WORD PTR [eax+0x6e]
  4150db:	std    
  4150dc:	data16 fdivp st(0),st
  4150df:	retf   
  4150e0:	cs jmp 0x6ed3:0xaaf673a1
  4150e8:	inc    edx
  4150e9:	add    bh,BYTE PTR ds:0xaa13745c
  4150ef:	stc    
  4150f0:	pop    ds
  4150f1:	sbb    BYTE PTR [ecx+0x1d77a3f7],dh
  4150f7:	sbb    eax,DWORD PTR [esi+0x6e550827]
  4150fd:	sbb    eax,0xf19c3c68
  415102:	ret    0x816a
  415105:	hlt    
  415106:	push   edi
  415107:	(bad)  
  415108:	push   0xffffffe8
  41510a:	fstp   QWORD PTR [ecx+0x1bd07cd3]
  415110:	imul   esp,ecx,0xffffffb9
  415113:	or     ecx,DWORD PTR [ecx-0x3836bca8]
  415119:	or     eax,0xfdba797e
  41511e:	ret    
  41511f:	and    al,0x39
  415121:	sub    DWORD PTR [esi+eiz*2-0x6a],edx
  415125:	pop    esi
  415126:	push   cs
  415127:	popf   
  415128:	ja     0x41515e
  41512a:	add    ah,BYTE PTR [ecx+0x12]
  41512d:	add    BYTE PTR [ecx-0x5d],dh
  415130:	dec    eax
  415131:	mov    ah,0xa4
  415133:	xchg   ebx,eax
  415134:	fstp   st(4)
  415136:	test   DWORD PTR [esi],0xbe4a41c5
  41513c:	mov    cl,0x37
  41513e:	xchg   ebp,eax
  41513f:	pop    ebx
  415140:	pop    ebp
  415141:	or     DWORD PTR [edx+0x5392b4b9],esi
  415147:	jae    0x4150d9
  415149:	jecxz  0x415111
  41514b:	pop    ds
  41514c:	xchg   edi,eax
  41514d:	inc    ecx
  41514e:	pop    ebx
  41514f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415150:	dec    ebx
  415151:	dec    esi
  415152:	pop    eax
  415153:	cmc    
  415154:	jbe    0x415116
  415156:	jno    0x4150eb
  415158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415159:	je     0x415132
  41515b:	cmp    eax,0x5fc86027
  415160:	inc    ebx
  415161:	je     0x415116
  415163:	sub    eax,0xf9eeadfd
  415168:	inc    esp
  415169:	fnstsw WORD PTR [edx+0x338940c8]
  41516f:	shl    DWORD PTR [ecx+0x6b78e9ac],cl
  415175:	jp     0x4151a9
  415177:	inc    esi
  415178:	test   eax,0x3ee48bb3
  41517d:	push   eax
  41517e:	dec    eax
  41517f:	add    eax,0xc89fbdb4
  415184:	xor    ebp,DWORD PTR [eax-0x567840e4]
  41518a:	inc    ebx
  41518b:	push   0x6d0f9ddb
  415190:	cmp    cl,BYTE PTR [esi]
  415192:	popa   
  415193:	daa    
  415194:	pusha  
  415195:	scas   eax,DWORD PTR es:[edi]
  415196:	inc    ebx
  415197:	scas   al,BYTE PTR es:[edi]
  415198:	arpl   WORD PTR [edi],sp
  41519a:	aas    
  41519b:	stc    
  41519c:	adc    bh,BYTE PTR [edi+0x1b]
  41519f:	jecxz  0x4151b3
  4151a1:	cmp    al,0xfc
  4151a3:	adc    BYTE PTR [eax],bl
  4151a5:	mov    BYTE PTR [ebp-0x60],ch
  4151a8:	and    edx,edx
  4151aa:	(bad)  
  4151ab:	sbb    al,0x64
  4151ad:	dec    eax
  4151ae:	clc    
  4151af:	or     DWORD PTR [edx],0xf0e269ca
  4151b5:	test   BYTE PTR [edi+ecx*4],0xdc
  4151b9:	and    al,0x2b
  4151bb:	mov    fs,ebx
  4151bd:	ficomp WORD PTR [ebx+0x29]
  4151c0:	loopne 0x415194
  4151c2:	pop    es
  4151c3:	mov    dl,0x68
  4151c5:	leave  
  4151c6:	sar    BYTE PTR [ebp-0x2da5f419],0x4a
  4151cd:	fxtract 
  4151cf:	cld    
  4151d0:	sub    esi,DWORD PTR [ebp+ebp*4+0x41e6966c]
  4151d7:	or     al,0xd8
  4151d9:	(bad)
  4151dc:	xchg   DWORD PTR ds:0xf7204113,edi
  4151e2:	cmp    DWORD PTR [eiz*1-0x456c1a8b],ecx
  4151e9:	mov    ebx,0xdc6e21d6
  4151ee:	pop    edi
  4151ef:	mov    WORD PTR [eax+0x15392997],?
  4151f5:	pop    esi
  4151f6:	(bad)  
  4151f8:	repnz into 
  4151fa:	fdivp  st(0),st
  4151fc:	retf   
  4151fd:	or     eax,0x1dc30d32
  415202:	loope  0x4151a7
  415204:	fisub  DWORD PTR [edx+0x74ae55ec]
  41520a:	(bad)  
  41520b:	mov    ds:0x7b27b3,al
  415210:	sbb    ecx,0x11
  415213:	push   ebp
  415214:	cmp    ecx,DWORD PTR [edx]
  415216:	add    al,0x7c
  415218:	jmp    0x415213
  41521a:	pop    esp
  41521b:	leave  
  41521c:	int    0x97
  41521e:	popf   
  41521f:	enter  0x5c5c,0x6c
  415223:	fucom  st(0)
  415225:	fucomi st,st(5)
  415227:	xchg   edi,eax
  415228:	adc    ecx,ebx
  41522a:	mov    ah,0xbe
  41522c:	sub    edi,DWORD PTR [ebx-0x463e0190]
  415232:	pop    ecx
  415233:	xchg   edi,eax
  415234:	push   ebx
  415235:	push   es
  415236:	gs push edi
  415238:	ins    DWORD PTR es:[edi],dx
  415239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41523a:	scas   al,BYTE PTR es:[edi]
  41523b:	sbb    eax,0xdc042c52
  415240:	iret   
  415241:	add    eax,0xaf1a3472
  415246:	or     DWORD PTR [edx],edi
  415248:	pop    edi
  415249:	dec    esp
  41524a:	xchg   esi,eax
  41524b:	out    0x4a,eax
  41524d:	fdiv   QWORD PTR [edx]
  41524f:	mov    ch,0x81
  415251:	je     0x415247
  415253:	sti    
  415254:	sub    dl,0x9b
  415257:	enter  0xefb7,0xd8
  41525b:	(bad)  
  41525c:	adc    dl,BYTE PTR [ebx]
  41525e:	fwait
  41525f:	and    BYTE PTR [edx-0x1a150f99],ch
  415265:	jp     0x415205
  415267:	repz push es
  415269:	cs ins DWORD PTR es:[edi],dx
  41526b:	sub    al,bl
  41526d:	add    bh,BYTE PTR [ebp-0x391ddee4]
  415273:	out    dx,eax
  415274:	cmp    edi,0x7f251d84
  41527a:	push   cs
  41527b:	out    dx,eax
  41527c:	rcr    ecx,1
  41527e:	or     al,0x1b
  415280:	xor    ebx,DWORD PTR [esp+ecx*8-0x1d8fb107]
  415287:	dec    eax
  415288:	aas    
  415289:	push   eax
  41528a:	out    0x81,eax
  41528c:	imul   ebp,ecx,0x279317cc
  415292:	xor    bh,BYTE PTR [ebp-0x63]
  415295:	pop    esp
  415296:	nop
  415297:	das    
  415298:	js     0x415229
  41529a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41529b:	ror    BYTE PTR [eax-0x34890a06],0x25
  4152a2:	cmp    eax,0x6c19d012
  4152a7:	push   es
  4152a8:	mov    dh,0x9b
  4152aa:	xor    eax,0x17c79c8
  4152af:	daa    
  4152b0:	(bad)  
  4152b1:	out    0x33,eax
  4152b3:	add    eax,DWORD PTR [esi+0x21]
  4152b6:	fcmovu st,st(0)
  4152b8:	adc    edx,esp
  4152ba:	pop    edi
  4152bb:	or     eax,0x4c12174f
  4152c0:	aam    0xa
  4152c2:	add    DWORD PTR [eax-0x472a246e],ecx
  4152c8:	mov    bl,0xfd
  4152ca:	outs   dx,BYTE PTR ds:[esi]
  4152cb:	fsubr  QWORD PTR [esi-0x19299054]
  4152d1:	leave  
  4152d2:	call   0xa239:0x7e64924d
  4152d9:	mov    ebp,0xb06d5db4
  4152de:	scas   eax,DWORD PTR es:[edi]
  4152df:	mov    ah,0x2b
  4152e1:	mov    al,0x85
  4152e3:	xchg   ebx,eax
  4152e4:	sbb    DWORD PTR [eax-0x45],0x95dfe9a0
  4152eb:	loop   0x4152fc
  4152ed:	push   edx
  4152ee:	jge    0x415329
  4152f0:	or     DWORD PTR [edi+0x24a618cd],esi
  4152f6:	xchg   edx,eax
  4152f7:	or     BYTE PTR [edx+0x7f],ah
  4152fa:	ins    DWORD PTR es:[edi],dx
  4152fb:	mov    ecx,0x215772b0
  415300:	lea    esi,[esp+edx*1+0x7]
  415304:	or     eax,0x7aa5d9b4
  415309:	or     BYTE PTR [edi+0x401c7270],0x12
  415310:	jbe    0x415355
  415312:	clc    
  415313:	dec    eax
  415314:	aaa    
  415315:	jmp    DWORD PTR [esi+0x195629b8]
  41531b:	loopne 0x41532b
  41531d:	loop   0x4152c4
  41531f:	mov    bl,0x64
  415321:	cmp    al,0x8a
  415323:	cli    
  415324:	cmp    DWORD PTR [edx+edi*8-0x4d939db0],ebp
  41532b:	xchg   ebx,eax
  41532c:	mov    edi,0x274ad6a
  415331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415332:	loope  0x415368
  415334:	adc    ah,bh
  415336:	ds push ebp
  415338:	mov    ebx,0x34a788fd
  41533d:	sbb    eax,0x61d34ea5
  415342:	sbb    BYTE PTR [edx],bh
  415344:	std    
  415345:	stos   DWORD PTR es:[edi],eax
  415346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415347:	aam    0x7
  415349:	cmp    esi,DWORD PTR [eax-0x537b5833]
  41534f:	aaa    
  415350:	mov    WORD PTR [ebx+0x2c],fs
  415353:	pop    esi
  415354:	call   FWORD PTR [edi-0x37]
  415357:	mov    eax,0xf7db722a
  41535c:	and    DWORD PTR [ebx+0x2e],esp
  41535f:	adc    eax,0xb03dc45e
  415364:	pop    edi
  415365:	mov    ss,WORD PTR [edi+0x4d]
  415368:	xchg   esi,eax
  415369:	sbb    ecx,ebx
  41536b:	arpl   WORD PTR [edi+0x44cae33d],di
  415371:	pop    ebx
  415372:	div    DWORD PTR [edi]
  415374:	daa    
  415375:	cmp    al,0xae
  415377:	fisttp DWORD PTR [edi+0x5]
  41537a:	adc    ecx,edx
  41537c:	sar    DWORD PTR [esi-0x79],cl
  41537f:	pop    ss
  415380:	xchg   BYTE PTR [esi],bl
  415382:	ret    0xf9a6
  415385:	push   esp
  415386:	popf   
  415387:	scas   al,BYTE PTR es:[edi]
  415388:	sti    
  415389:	imul   ecx,DWORD PTR [edi],0x9a2b461d
  41538f:	clc    
  415390:	mov    al,0x1
  415392:	lods   al,BYTE PTR ds:[esi]
  415393:	or     al,0x88
  415395:	mov    ebx,0xd781d65f
  41539a:	enter  0xca5,0xfc
  41539e:	out    0xa2,eax
  4153a0:	icebp  
  4153a1:	ins    BYTE PTR es:[edi],dx
  4153a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a3:	adc    al,0x4a
  4153a5:	push   ds
  4153a6:	in     al,dx
  4153a7:	xor    al,BYTE PTR [ebx-0x3d]
  4153aa:	mov    bh,0xe9
  4153ac:	push   eax
  4153ad:	mov    cl,0x5f
  4153af:	daa    
  4153b0:	(bad)  
  4153b1:	lods   eax,DWORD PTR ds:[esi]
  4153b2:	scas   al,BYTE PTR es:[edi]
  4153b3:	ret    
  4153b4:	fidivr WORD PTR [eax]
  4153b6:	popa   
  4153b7:	jns    0x415382
  4153b9:	and    BYTE PTR [esi+0x6a96a0c3],bl
  4153bf:	cmp    eax,0x26e27a4f
  4153c4:	jmp    0x20a6b6ef
  4153c9:	sahf   
  4153ca:	pop    esi
  4153cb:	xor    ebx,0xffffffe9
  4153ce:	jne    0x41539e
  4153d0:	xlat   BYTE PTR ds:[ebx]
  4153d1:	xor    ah,dl
  4153d3:	das    
  4153d4:	and    eax,0x87aad07d
  4153d9:	sub    al,0xe6
  4153db:	jnp    0x415420
  4153dd:	sub    BYTE PTR [esi-0x1e],ch
  4153e0:	cmp    eax,esp
  4153e2:	fisubr WORD PTR ds:0x188c98
  4153e8:	adc    ebx,DWORD PTR [eax-0x410ae3e0]
  4153ee:	add    dl,ch
  4153f0:	out    dx,eax
  4153f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f2:	inc    ebx
  4153f3:	bound  esi,QWORD PTR [eax-0x5a]
  4153f6:	push   ebp
  4153f7:	call   0xd1a3:0xbabdf36
  4153fe:	inc    ebx
  4153ff:	or     eax,0xec5e6a28
  415404:	rol    DWORD PTR [ecx+0x7f28c294],1
  41540a:	sbb    DWORD PTR [esi],ebp
  41540c:	ss push ebx
  41540e:	dec    esp
  41540f:	fsubr  DWORD PTR [edi]
  415411:	and    ah,ch
  415413:	ret    
  415414:	je     0x415468
  415416:	mov    eax,0xeef4bf1e
  41541b:	push   cs
  41541c:	fmul   DWORD PTR [edi]
  41541e:	push   edi
  41541f:	(bad)  
  415420:	sub    ebp,ecx
  415422:	inc    esp
  415423:	pop    ds
  415424:	das    
  415425:	and    esi,0x2989f2a4
  41542b:	add    al,0x87
  41542d:	fcompp 
  41542f:	lea    eax,[eax+0x772c3b0c]
  415435:	mov    ch,0x55
  415437:	mov    ebx,0x8a88f9e3
  41543c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41543d:	adc    DWORD PTR [ebx],edx
  41543f:	inc    edx
  415440:	call   0xf597:0xbd4f1e59
  415447:	(bad)  [ebx-0x186ed128]
  41544d:	mov    eax,ds:0xda8047a6
  415452:	dec    eax
  415453:	mov    ah,0xf
  415455:	addr16 je 0x4153de
  415458:	pushf  
  415459:	adc    BYTE PTR [ebx],dh
  41545b:	mov    ebp,0xbd4ab7af
  415460:	add    DWORD PTR [ebx+0x535c59a9],edx
  415466:	jl     0x4154a4
  415468:	dec    ebp
  415469:	nop
  41546a:	in     al,dx
  41546b:	fcomp  st(1)
  41546d:	cmp    eax,0xafd087f5
  415472:	mov    ah,BYTE PTR [esi+ebx*1-0x4f]
  415476:	cs pop ebx
  415478:	fdivr  st,st(5)
  41547a:	popf   
  41547b:	push   ebp
  41547c:	dec    ebx
  41547d:	push   0xc4b67ffd
  415482:	daa    
  415483:	jno    0x415495
  415485:	aas    
  415486:	je     0x4154ce
  415488:	test   al,0xa9
  41548a:	mov    ds:0xc780174b,eax
  41548f:	iret   
  415490:	ins    DWORD PTR es:[edi],dx
  415491:	inc    ebx
  415492:	push   ds
  415493:	push   esp
  415494:	outs   dx,BYTE PTR ds:[esi]
  415495:	sbb    al,al
  415497:	out    0x7f,eax
  415499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41549a:	pop    edx
  41549b:	add    ah,al
  41549d:	scas   eax,DWORD PTR es:[edi]
  41549e:	rcr    DWORD PTR [eax+0x7b],cl
  4154a1:	outs   dx,BYTE PTR ds:[esi]
  4154a2:	sahf   
  4154a3:	sub    eax,0xd4dcf4a4
  4154a8:	inc    edx
  4154a9:	mov    edi,0x1c616480
  4154ae:	push   edx
  4154af:	adc    DWORD PTR [ebx+ebp*1-0x6a],esp
  4154b3:	scas   al,BYTE PTR es:[edi]
  4154b4:	rol    esi,cl
  4154b6:	(bad)  
  4154b7:	jg     0x4154c2
  4154b9:	dec    esp
  4154ba:	test   DWORD PTR [ebp-0x52],ecx
  4154bd:	jge    0x4154f7
  4154bf:	neg    BYTE PTR [ebx]
  4154c1:	lea    ecx,[edx+0x65]
  4154c4:	(bad)  
  4154c5:	sahf   
  4154c6:	sbb    DWORD PTR [eax+0x3c],ecx
  4154c9:	imul   ecx,DWORD PTR [eax+0xa],0xffffffa1
  4154cd:	dec    ecx
  4154ce:	ins    DWORD PTR es:[edi],dx
  4154cf:	fninit 
  4154d1:	sahf   
  4154d2:	mov    eax,ds:0x93c7e790
  4154d7:	rol    BYTE PTR [ebx+0x34],cl
  4154da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154dc:	mov    ebx,DWORD PTR [ecx]
  4154de:	lock inc ebp
  4154e0:	push   0xffffff82
  4154e2:	dec    ebx
  4154e3:	in     eax,0x5b
  4154e5:	outs   dx,DWORD PTR ds:[esi]
  4154e6:	aam    0xb0
  4154e8:	mov    fs,WORD PTR [ecx]
  4154ea:	sbb    edx,DWORD PTR [ecx]
  4154ec:	jg     0x4154b6
  4154ee:	rol    BYTE PTR [ebp-0x1a83f166],1
  4154f4:	pop    edi
  4154f5:	jno    0x4154d0
  4154f7:	js     0x41549b
  4154f9:	dec    eax
  4154fa:	mov    esp,DWORD PTR [ecx+0x4b4c191d]
  415500:	jmp    0xada04278
  415505:	inc    ecx
  415506:	mov    ch,bh
  415508:	out    dx,al
  415509:	pop    esp
  41550a:	mov    ch,BYTE PTR [edx-0x3ff52303]
  415510:	xor    bl,cl
  415512:	add    eax,0xcb92f961
  415517:	mov    esi,0x35e6f117
  41551c:	sbb    ebx,esp
  41551e:	jae    0x415552
  415520:	push   cs
  415521:	and    al,BYTE PTR [edx]
  415523:	xor    eax,0x608afaf7
  415528:	out    dx,eax
  415529:	div    ch
  41552b:	mov    bh,0x4e
  41552d:	lea    ebx,[ecx]
  41552f:	adc    ah,cl
  415531:	mov    dh,0xf3
  415533:	or     cl,0x4
  415536:	sub    eax,0x153bb8ce
  41553b:	repz pop esi
  41553d:	cmp    eax,0x10
  415540:	jmp    0x4155a6
  415542:	cmp    edi,ebx
  415544:	add    edx,DWORD PTR [edx]
  415546:	mov    esp,0x79c0b1ac
  41554b:	add    bl,BYTE PTR [ebp+0x7a5ee1f1]
  415551:	xchg   esi,eax
  415552:	mov    bh,0x39
  415554:	lods   eax,DWORD PTR ds:[esi]
  415555:	mov    ah,0xb7
  415557:	dec    edi
  415558:	mov    al,ds:0x70eb068d
  41555d:	mov    dl,0x79
  41555f:	inc    ebx
  415560:	in     eax,dx
  415561:	mov    BYTE PTR [ebx-0x66f7560e],dh
  415567:	mov    cl,BYTE PTR [ebp-0x26b35bbd]
  41556d:	mov    dh,0x5
  41556f:	scas   al,BYTE PTR es:[edi]
  415570:	hlt    
  415571:	retf   0xf0ae
  415574:	dec    esp
  415575:	adc    BYTE PTR [edx+0x61],dl
  415578:	inc    ecx
  415579:	add    edx,DWORD PTR [ebp+0x798359c5]
  41557f:	mov    WORD PTR [ebx-0x52],gs
  415582:	sbb    edi,ecx
  415584:	push   edi
  415585:	mov    ds:0x384a5f00,eax
  41558a:	fsubr  DWORD PTR [ebx]
  41558c:	cmp    BYTE PTR [ecx],ch
  41558e:	fcomp  st(6)
  415590:	fist   DWORD PTR [ebx-0x6763a1e3]
  415596:	lods   al,BYTE PTR ds:[esi]
  415597:	ret    
  415598:	sahf   
  415599:	out    0x50,eax
  41559b:	add    BYTE PTR [ebx+eiz*1+0x50],ah
  41559f:	adc    DWORD PTR [eax+0x4a],ecx
  4155a2:	iret   
  4155a3:	xor    BYTE PTR [ecx+0x3efb3a6b],0xf7
  4155aa:	add    al,BYTE PTR [edi-0x6b4f62d0]
  4155b0:	sub    eax,0xb6b3261f
  4155b5:	dec    ecx
  4155b6:	(bad)  
  4155b7:	out    0xb0,al
  4155b9:	mov    al,0xca
  4155bb:	enter  0xbae0,0xc2
  4155bf:	sub    al,0x15
  4155c1:	ds adc eax,0xd0b9aae2
  4155c7:	mov    esp,0x6651431f
  4155cc:	xchg   ebx,eax
  4155cd:	jae    0x415609
  4155cf:	xchg   esp,eax
  4155d0:	and    bh,bh
  4155d2:	jo     0x41560e
  4155d4:	es inc esp
  4155d6:	add    DWORD PTR [esi+edx*2-0x35d9aea3],esp
  4155dd:	fiadd  WORD PTR [ecx-0x326e6d19]
  4155e3:	call   0x9c6f1ea2
  4155e8:	popa   
  4155e9:	cmp    DWORD PTR [esi-0x524517a],eax
  4155ef:	xor    eax,ebx
  4155f1:	scas   eax,DWORD PTR es:[edi]
  4155f2:	lods   al,BYTE PTR ds:[esi]
  4155f3:	popf   
  4155f4:	and    al,0x2c
  4155f6:	or     DWORD PTR [edi-0x7a],eax
  4155f9:	xor    al,0x72
  4155fb:	aas    
  4155fc:	jmp    FWORD PTR [ecx-0x5b]
  4155ff:	rcl    DWORD PTR [ebx],0xc0
  415602:	lods   eax,DWORD PTR ds:[esi]
  415603:	inc    edi
  415604:	(bad)  
  415605:	dec    edi
  415606:	xchg   ebx,eax
  415607:	sahf   
  415608:	(bad)  
  415609:	cmp    bl,BYTE PTR [ecx-0x78e93f55]
  41560f:	icebp  
  415610:	fadd   QWORD PTR [ebx+0x41]
  415613:	cmp    DWORD PTR [edx+eax*8],ecx
  415616:	cli    
  415617:	fwait
  415618:	pop    ebp
  415619:	mov    cl,0xe5
  41561b:	cmp    eax,0x5ac52ed7
  415620:	sub    ah,BYTE PTR [ebx]
  415622:	arpl   WORD PTR [eax],dx
  415624:	lods   eax,DWORD PTR ds:[esi]
  415625:	repz enter 0xc5bc,0x95
  41562a:	std    
  41562b:	mov    ebx,0x3111ec5d
  415630:	push   edx
  415631:	outs   dx,DWORD PTR ds:[esi]
  415632:	add    esp,esp
  415634:	aaa    
  415635:	in     al,0x6b
  415637:	btr    DWORD PTR [ebx+0x2],esp
  41563b:	lods   al,BYTE PTR ds:[esi]
  41563c:	xchg   ebp,eax
  41563d:	les    edx,FWORD PTR [edi-0x30]
  415640:	sub    eax,0xc1699887
  415645:	push   ds
  415646:	popf   
  415647:	push   0xffffffd8
  415649:	outs   dx,BYTE PTR ds:[esi]
  41564a:	or     al,0xab
  41564c:	mov    ebp,0x72c40b72
  415651:	fadd   st(7),st
  415653:	dec    edi
  415654:	mov    esi,0x4a6a3fbb
  415659:	ret    0xab10
  41565c:	aaa    
  41565d:	loop   0x4156db
  41565f:	inc    ebp
  415660:	xchg   edx,eax
  415661:	icebp  
  415662:	rol    DWORD PTR [ebx-0x2b],0x4e
  415666:	scas   al,BYTE PTR es:[edi]
  415667:	fcom   DWORD PTR [edi]
  415669:	repz ror ecx,0xa3
  41566d:	das    
  41566e:	in     eax,0xe0
  415670:	mov    BYTE PTR [ecx+0x3d],bh
  415673:	das    
  415674:	cs xchg edx,eax
  415676:	inc    eax
  415677:	mov    eax,0xc096ceb2
  41567c:	and    eax,0x13fce19d
  415681:	shl    DWORD PTR [esi-0x8],0x6d
  415685:	sti    
  415686:	repnz adc ebx,ebp
  415689:	jne    0x41565f
  41568b:	xor    ch,ah
  41568d:	xor    esi,DWORD PTR [ebx+0xc1a3e6]
  415693:	mov    ebx,0x15a7cd19
  415698:	mov    al,0xaf
  41569a:	cdq    
  41569b:	mov    bh,0xc2
  41569d:	lea    edi,[ecx]
  41569f:	gs jecxz 0x4156fa
  4156a2:	mov    DWORD PTR cs:[ecx+0x7e97daff],ebp
  4156a9:	sar    DWORD PTR [ebp+ebx*4-0x6bb17c18],1
  4156b0:	sbb    DWORD PTR [ebp+edi*8-0x4],ecx
  4156b4:	pop    eax
  4156b5:	xchg   ecx,eax
  4156b6:	aaa    
  4156b7:	xor    ch,BYTE PTR [ecx-0x80]
  4156ba:	retf   0x3e35
  4156bd:	fbstp  TBYTE PTR [edx-0x66e088c0]
  4156c3:	mov    ebx,0x18c62569
  4156c8:	or     edx,DWORD PTR [ebp+0x19]
  4156cb:	pop    ss
  4156cc:	lods   al,BYTE PTR ds:[esi]
  4156cd:	lea    edx,[ecx-0x73]
  4156d0:	shl    DWORD PTR [edi+0x5c],1
  4156d3:	mov    eax,ds:0xba7eadb7
  4156d8:	push   esp
  4156d9:	mov    al,ds:0xfe2c19f3
  4156de:	sbb    DWORD PTR ds:0x494d0dd3,edi
  4156e4:	enter  0xd890,0x4a
  4156e8:	imul   eax,DWORD PTR [ebx-0x6f],0x73
  4156ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ed:	pop    eax
  4156ee:	aas    
  4156ef:	push   cs
  4156f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156f1:	repnz or DWORD PTR [ebx-0x1b264808],esi
  4156f8:	add    eax,DWORD PTR [edi-0x7d]
  4156fb:	in     eax,0x5f
  4156fd:	push   ebp
  4156fe:	imul   esp,DWORD PTR [edi],0xfffffffa
  415701:	mov    bl,0xfd
  415703:	shr    DWORD PTR [ebp-0x1d],1
  415706:	imul   ebp,DWORD PTR [edx-0x57],0x45c427c7
  41570d:	xchg   esp,eax
  41570e:	jge    0x415786
  415710:	stos   DWORD PTR es:[edi],eax
  415711:	sbb    al,0xc4
  415713:	or     eax,0x82a51a4e
  415718:	inc    ecx
  415719:	push   es
  41571a:	repnz sub BYTE PTR [ecx],bl
  41571d:	test   eax,0x43da1e51
  415722:	(bad)  
  415723:	lods   al,BYTE PTR ds:[esi]
  415724:	lods   al,BYTE PTR ds:[esi]
  415725:	icebp  
  415726:	sbb    DWORD PTR [ecx+edx*2+0x24b6715b],edi
  41572d:	lahf   
  41572e:	test   DWORD PTR [ecx],esi
  415730:	clc    
  415731:	xlat   BYTE PTR ds:[ebx]
  415732:	pusha  
  415733:	sbb    DWORD PTR [edi+0x353c36fa],edx
  415739:	daa    
  41573a:	fwait
  41573b:	jns    0x4156d5
  41573d:	ds loop 0x415724
  415740:	dec    eax
  415741:	scas   al,BYTE PTR es:[edi]
  415742:	std    
  415743:	cmp    eax,0x1a4edc64
  415748:	daa    
  415749:	stc    
  41574a:	push   cs
  41574b:	mov    esi,0xd21b358a
  415750:	popf   
  415751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415752:	cmp    al,0x2a
  415754:	arpl   WORD PTR [ebp+0x5aa4cb78],di
  41575a:	and    al,BYTE PTR [ebx-0x5b99eee1]
  415760:	or     al,0x6b
  415762:	mov    cl,0x53
  415764:	push   0xf2a06ed0
  415769:	retf   0x51e7
  41576c:	pop    edi
  41576d:	pop    esi
  41576e:	jae    0x415796
  415770:	xchg   ecx,eax
  415771:	daa    
  415772:	dec    edi
  415773:	mov    esi,0x1f3ed959
  415778:	mov    WORD PTR [esi+0x6d],?
  41577b:	adc    DWORD PTR [ebx],0xffffffd3
  41577e:	xor    esi,DWORD PTR [ecx-0x615cc2af]
  415784:	mov    dl,0xf
  415786:	mov    al,ds:0x32b577f1
  41578b:	adc    al,0xef
  41578d:	imul   ebp,DWORD PTR [edx+0x48],0x3c
  415791:	cmp    esi,ebx
  415793:	sub    edi,DWORD PTR [edx]
  415795:	and    eax,0x77fe3c03
  41579a:	fwait
  41579b:	loop   0x4157ad
  41579d:	jg     0x415774
  41579f:	xchg   dl,al
  4157a1:	call   0xe0b5:0xd9a221e0
  4157a8:	ret    0x25fc
  4157ab:	inc    esp
  4157ac:	arpl   WORD PTR [edi-0x1d],bx
  4157af:	jb     0x41579f
  4157b1:	lock int 0x17
  4157b4:	mov    ecx,DWORD PTR [edi+0xdbbf1b8]
  4157ba:	and    eax,0xe294531f
  4157bf:	cdq    
  4157c0:	xchg   ebx,eax
  4157c1:	pop    ebx
  4157c2:	xchg   edx,eax
  4157c3:	and    DWORD PTR [edi-0x4e],esi
  4157c6:	cs out dx,al
  4157c8:	fild   QWORD PTR [ebx+0x32b5a497]
  4157ce:	dec    esp
  4157cf:	stos   BYTE PTR es:[edi],al
  4157d0:	cmp    esi,DWORD PTR [esi]
  4157d2:	repnz adc al,0xa0
  4157d5:	jmp    0x64d5:0x9b547105
  4157dc:	imul   esi,DWORD PTR [eax-0x56c1d612],0xffffffbd
  4157e3:	jns    0x4157d8
  4157e5:	scas   eax,DWORD PTR es:[edi]
  4157e6:	shl    DWORD PTR ds:0x3aff9d0,cl
  4157ec:	hlt    
  4157ed:	inc    edi
  4157ee:	lds    ecx,FWORD PTR [edi+eax*1-0x2caa604b]
  4157f5:	jg     0x415866
  4157f7:	repz call 0x8e77:0xf1ecde12
  4157ff:	imul   edx,ebx,0xffffffb0
  415802:	repz xchg edx,eax
  415804:	stc    
  415805:	push   es
  415806:	mov    BYTE PTR [edx+eax*8+0x42],dl
  41580a:	addr16 push esp
  41580c:	fstp   st(2)
  41580e:	xchg   esp,eax
  41580f:	adc    BYTE PTR [esi],0x1c
  415812:	and    al,0x57
  415814:	sbb    DWORD PTR ds:0x6ff02bd1,eax
  41581a:	cmp    al,0xb4
  41581c:	(bad)  
  41581d:	fstp   st(7)
  41581f:	pop    eax
  415820:	sbb    BYTE PTR [edi],0xd7
  415823:	aaa    
  415824:	add    al,0x81
  415826:	mov    ebp,0xe8ef073e
  41582b:	sbb    al,0x8b
  41582d:	inc    eax
  41582e:	dec    esi
  41582f:	mov    ebp,0xf626320
  415834:	in     al,dx
  415835:	in     eax,0xd5
  415837:	sbb    eax,0x60af4a88
  41583c:	mov    al,ds:0x71e984d6
  415841:	loopne 0x415825
  415843:	mov    ebx,edi
  415845:	xchg   ebp,eax
  415846:	std    
  415847:	mov    al,0xe2
  415849:	fistp  WORD PTR [eax-0x3d]
  41584c:	lahf   
  41584d:	or     DWORD PTR [ebp-0x2f39ed5e],eax
  415853:	ror    DWORD PTR [esi-0x1a],cl
  415856:	xor    eax,0x12131da7
  41585b:	cwde   
  41585c:	adc    DWORD PTR [ebx-0x30],eax
  41585f:	inc    eax
  415860:	inc    edx
  415861:	inc    edi
  415862:	imul   ecx,DWORD PTR [ebp-0x78800936],0xffffffd3
  415869:	push   edi
  41586a:	cli    
  41586b:	xchg   esp,eax
  41586c:	loope  0x41585c
  41586e:	xchg   edi,eax
  41586f:	xor    ebp,DWORD PTR [ebp-0x6e]
  415872:	dec    esi
  415873:	es ret 0x7ada
  415877:	fistp  WORD PTR [eax]
  415879:	xlat   BYTE PTR ds:[ebx]
  41587a:	adc    edi,DWORD PTR [eax+0x1a]
  41587d:	loop   0x4158cc
  41587f:	xchg   edi,eax
  415880:	or     ebp,DWORD PTR [eax+0x0]
  415883:	shr    BYTE PTR [ecx+0x1a109b05],1
  415889:	(bad)  
  41588a:	and    al,0xad
  41588c:	and    DWORD PTR ds:0xf5afe938,ecx
  415892:	and    eax,0x4322d3b2
  415897:	enter  0x4822,0x5c
  41589b:	or     DWORD PTR ds:0x682278e7,edx
  4158a1:	sub    al,0x90
  4158a3:	ja     0x4158be
  4158a5:	(bad)  
  4158a6:	(bad)  
  4158a7:	out    0x84,al
  4158a9:	mov    eax,ds:0xad4e0114
  4158ae:	test   al,0x7
  4158b0:	xor    BYTE PTR [eax-0x71],ah
  4158b3:	mov    al,0x7b
  4158b5:	outs   dx,DWORD PTR ds:[esi]
  4158b6:	ret    
  4158b7:	xchg   ebp,eax
  4158b8:	outs   dx,DWORD PTR ds:[esi]
  4158b9:	or     BYTE PTR [edi-0x4f9deb65],ch
  4158bf:	push   esp
  4158c0:	sub    eax,0xcdbfe516
  4158c5:	stc    
  4158c6:	cmp    BYTE PTR [ebp-0x1e],dl
  4158c9:	inc    ebp
  4158ca:	sub    ebp,DWORD PTR [edi+0x49]
  4158cd:	adc    BYTE PTR [ecx+0x2f4f6024],al
  4158d3:	dec    ebp
  4158d4:	ret    
  4158d5:	addr16 mov ebx,ebp
  4158d8:	call   0x27ec587e
  4158dd:	adc    ch,BYTE PTR [esi+0x41]
  4158e0:	mov    esi,0x95fc1d0
  4158e5:	pop    esp
  4158e6:	(bad)  
  4158e7:	jae    0x4158e2
  4158e9:	xor    BYTE PTR [ecx+esi*4-0x316ac025],bl
  4158f0:	test   BYTE PTR [edx+ebx*4-0x4a],dh
  4158f4:	cwde   
  4158f5:	call   0x48e35cd5
  4158fa:	(bad)  
  4158fb:	scas   eax,DWORD PTR es:[edi]
  4158fc:	aas    
  4158fd:	or     eax,0xfd328192
  415902:	div    DWORD PTR [esp+edx*4-0x7d]
  415906:	mov    ?,ebp
  415908:	into   
  415909:	sar    BYTE PTR [ecx],cl
  41590b:	scas   eax,DWORD PTR es:[edi]
  41590c:	call   0xbe2e044e
  415911:	or     ah,BYTE PTR [edx-0x7c]
  415914:	call   0xeb1c:0x97d070e
  41591b:	outs   dx,BYTE PTR ds:[esi]
  41591c:	dec    ecx
  41591d:	dec    eax
  41591e:	lfs    eax,FWORD PTR [esp+ebx*8]
  415922:	outs   dx,DWORD PTR ds:[esi]
  415923:	nop
  415924:	jmp    0xabc9:0x3a337abe
  41592b:	cdq    
  41592c:	in     al,dx
  41592d:	adc    eax,0x161f377f
  415932:	js     0x41599f
  415934:	ins    BYTE PTR es:[edi],dx
  415935:	adc    DWORD PTR [ebp+ebx*8+0x56],eax
  415939:	adc    ah,al
  41593b:	add    dl,0x94
  41593e:	test   eax,0x1c643990
  415943:	and    DWORD PTR ds:0xa9a05947,ebx
  415949:	loopne 0x415901
  41594b:	ins    BYTE PTR es:[edi],dx
  41594c:	sar    ch,1
  41594e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594f:	mov    BYTE PTR [esi],ah
  415951:	mov    esi,DWORD PTR [esi+0x1cf86b08]
  415957:	leave  
  415958:	ja     0x41597a
  41595a:	lods   al,BYTE PTR ds:[esi]
  41595b:	xchg   BYTE PTR [ecx-0x7fc53c96],cl
  415961:	outs   dx,BYTE PTR ds:[esi]
  415962:	cld    
  415963:	mov    DWORD PTR [edx],eax
  415965:	imul   esi,DWORD PTR [ebp+0x6aee5c02],0x4c
  41596c:	aas    
  41596d:	popf   
  41596e:	stc    
  41596f:	(bad)  
  415971:	jae    0x4159e4
  415973:	sahf   
  415974:	les    ebp,FWORD PTR [ebx+0x6b0a1c08]
  41597a:	ins    BYTE PTR es:[edi],dx
  41597b:	dec    esp
  41597c:	inc    edi
  41597d:	inc    ebp
  41597e:	mov    edx,0x899414d3
  415983:	pushf  
  415984:	sbb    BYTE PTR [edi+0x1e],bl
  415987:	xchg   ecx,eax
  415988:	push   edi
  415989:	mov    ebp,DWORD PTR [ebx-0x3f]
  41598c:	loop   0x4159dd
  41598e:	pop    edi
  41598f:	cs xchg ebp,edi
  415992:	(bad)  
  415993:	int3   
  415994:	sub    eax,0x77c6b236
  415999:	test   BYTE PTR [edx+0x12a0a83e],0x1e
  4159a0:	push   ebp
  4159a1:	lds    esi,FWORD PTR [edx-0x550c6228]
  4159a7:	sub    BYTE PTR [esi+edx*4-0x582f409b],bl
  4159ae:	mov    edx,DWORD PTR [ecx-0x4c7fc9cf]
  4159b4:	inc    ebx
  4159b5:	jmp    0xa6d2:0x23b25087
  4159bc:	add    al,0x43
  4159be:	sub    dh,BYTE PTR [edx-0x38]
  4159c1:	pop    es
  4159c2:	jns    0x415a3d
  4159c4:	xchg   ebp,eax
  4159c5:	repnz adc DWORD PTR [esi],ecx
  4159c8:	or     ecx,DWORD PTR [ebx-0x7e54ce8d]
  4159ce:	ficomp DWORD PTR [esp+esi*2+0x7477d64e]
  4159d5:	repnz mov al,0x26
  4159d8:	(bad)  
  4159d9:	fstp   QWORD PTR [eax]
  4159db:	sbb    DWORD PTR [esi+0x21739e3e],ebp
  4159e1:	lea    edi,[ecx-0x3b]
  4159e4:	mov    esi,0x6d80ad
  4159e9:	call   0xbbea:0x5abc715f
  4159f0:	popf   
  4159f1:	outs   dx,DWORD PTR ds:[esi]
  4159f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f3:	ss adc dl,ah
  4159f6:	mov    ch,0xc4
  4159f8:	push   ss
  4159f9:	sbb    DWORD PTR [esp+ecx*8],esp
  4159fc:	addr16 aas 
  4159fe:	sub    BYTE PTR [ebx+eax*8-0x54],0x3e
  415a03:	sbb    ch,BYTE PTR [edi-0x2e0c5a85]
  415a09:	cmp    BYTE PTR [edi-0xf],ah
  415a0c:	mov    ds:0x82f150ed,al
  415a11:	jbe    0x4159df
  415a13:	adc    BYTE PTR [si-0x5c80],0x6f
  415a19:	add    ah,dl
  415a1b:	or     dh,BYTE PTR [ecx+0x4b]
  415a1e:	das    
  415a1f:	or     al,0xa0
  415a21:	push   cs
  415a22:	inc    esi
  415a23:	jno    0x4159ec
  415a25:	cdq    
  415a26:	xor    dh,bl
  415a28:	and    dl,BYTE PTR [ecx+0x21]
  415a2b:	sbb    eax,0x8f5508e5
  415a30:	js     0x415a83
  415a32:	cmc    
  415a33:	or     al,0x93
  415a35:	adc    edi,edx
  415a37:	mov    esi,0x4cc5eb9b
  415a3c:	jo     0x4159d3
  415a3e:	or     DWORD PTR [edx+edx*1-0x5b6aab3c],eax
  415a45:	inc    edi
  415a46:	pop    eax
  415a47:	xor    dl,ch
  415a49:	push   ebp
  415a4a:	test   al,0x86
  415a4c:	(bad)  
  415a4d:	and    esp,ecx
  415a4f:	dec    esi
  415a50:	push   esi
  415a51:	mov    al,ds:0xd532f41e
  415a56:	add    cl,0x79
  415a59:	outs   dx,BYTE PTR ds:[esi]
  415a5a:	xchg   edx,eax
  415a5b:	xchg   edx,eax
  415a5c:	inc    eax
  415a5d:	xor    DWORD PTR [eax-0x4c852962],ebp
  415a63:	fwait
  415a64:	mov    ah,0x9f
  415a66:	retf   
  415a67:	repnz rcl DWORD PTR [ecx+0x41],1
  415a6b:	clc    
  415a6c:	in     al,dx
  415a6d:	lahf   
  415a6e:	add    bh,BYTE PTR [ecx-0x45fd734]
  415a74:	(bad)  
  415a75:	jo     0x415a23
  415a77:	add    bl,bl
  415a79:	cmp    DWORD PTR [ebx-0x2d],esp
  415a7c:	popa   
  415a7d:	and    al,0x5d
  415a7f:	inc    ecx
  415a80:	jmp    0x4965e836
  415a85:	xchg   ecx,eax
  415a86:	inc    ecx
  415a87:	dec    eax
  415a88:	int    0x95
  415a8a:	and    al,0x2b
  415a8c:	or     edx,DWORD PTR [ebp+0x4bb0b8aa]
  415a92:	mov    dh,0x63
  415a94:	loop   0x415abd
  415a96:	push   edx
  415a97:	std    
  415a98:	fldenv [edi+0x5fb56a13]
  415a9e:	mov    eax,0xb6923152
  415aa3:	and    al,0xce
  415aa5:	cmp    bh,BYTE PTR [edx+0xa]
  415aa8:	xor    eax,0x73b2bbbc
  415aad:	jmp    0x415a3f
  415aaf:	push   ss
  415ab0:	(bad)  
  415ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab2:	mov    ch,0x1f
  415ab4:	mov    ds:0xb50e444b,al
  415ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aba:	mov    eax,ds:0x3ba8df5a
  415abf:	repnz outs dx,DWORD PTR ds:[esi]
  415ac1:	aam    0x70
  415ac3:	sar    DWORD PTR ds:0x629a61c,1
  415ac9:	daa    
  415aca:	xor    BYTE PTR [ecx],0x85
  415acd:	stc    
  415ace:	repz pushf 
  415ad0:	sub    al,0x97
  415ad2:	aaa    
  415ad3:	jp     0x415b49
  415ad5:	mov    eax,0x90afdae6
  415ada:	rcr    BYTE PTR [ebp-0x35cedc77],0xfa
  415ae1:	sub    BYTE PTR [edi],0xc4
  415ae4:	fldcw  WORD PTR [ebx-0x4959097b]
  415aea:	lea    ecx,[eax-0x5ad7653d]
  415af0:	adc    bh,cl
  415af2:	mov    DWORD PTR [esi],esp
  415af4:	out    0x4e,al
  415af6:	mov    edx,DWORD PTR [esi+0x78]
  415af9:	xchg   DWORD PTR [ebp-0x42515134],esi
  415aff:	or     al,0x93
  415b01:	ret    
  415b02:	dec    ebx
  415b03:	pop    ebp
  415b04:	push   esi
  415b05:	pusha  
  415b06:	repnz ror ch,cl
  415b09:	mov    edx,0xfc0c02af
  415b0e:	jno    0x415abf
  415b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b11:	mov    al,0x84
  415b13:	les    ebp,FWORD PTR [eax-0x13695114]
  415b19:	push   edi
  415b1a:	push   cs
  415b1b:	jns    0x415b1c
  415b1d:	sub    bl,BYTE PTR [ebx]
  415b1f:	es jecxz 0x415b0c
  415b22:	sub    DWORD PTR [ebx-0x1b06a0b5],esp
  415b28:	mov    eax,ds:0x7af65770
  415b2d:	fsubrp st(0),st
  415b2f:	or     al,0x78
  415b31:	jmp    0x4c380675
  415b36:	mov    ch,0xc9
  415b38:	pop    ebp
  415b39:	adc    eax,0x8d70ee31
  415b3e:	rcl    DWORD PTR [edi-0x67993e6d],cl
  415b44:	loope  0x415aca
  415b46:	ja     0x415b36
  415b48:	in     eax,dx
  415b49:	loop   0x415b6e
  415b4b:	xchg   ebx,eax
  415b4c:	mov    ch,0x94
  415b4e:	dec    esi
  415b4f:	popa   
  415b50:	adc    ebp,esi
  415b52:	mov    bh,BYTE PTR [ebx-0x7]
  415b55:	jge    0x415aed
  415b57:	sbb    bl,BYTE PTR [eax-0x478a882a]
  415b5d:	dec    esp
  415b5e:	sbb    BYTE PTR [eax-0x32],al
  415b61:	imul   DWORD PTR [ebp+0x260c79c0]
  415b67:	push   esp
  415b68:	and    al,0x2
  415b6a:	jl     0x415bab
  415b6c:	imul   edi,DWORD PTR [ebx],0x3d
  415b6f:	mov    dh,0x8b
  415b71:	or     esp,DWORD PTR [ebx+0x76be323c]
  415b77:	push   0x9
  415b79:	and    DWORD PTR ds:0x51dd22e8,esi
  415b7f:	jae    0x415b9b
  415b81:	stos   BYTE PTR es:[edi],al
  415b82:	inc    ecx
  415b83:	gs pop ebp
  415b85:	or     dh,BYTE PTR [edx+0x4e496b93]
  415b8b:	jg     0x415bf5
  415b8d:	(bad)  
  415b8e:	push   edi
  415b8f:	dec    ebp
  415b90:	mov    ch,0x72
  415b92:	or     BYTE PTR [ebx-0x6b],bh
  415b95:	(bad)  
  415b96:	out    dx,al
  415b97:	jp     0x415b47
  415b99:	mov    ebx,0x897d16c3
  415b9e:	repnz xor dh,BYTE PTR [eax+edx*1]
  415ba2:	(bad)  
  415ba3:	inc    esi
  415ba4:	cmp    edx,0x71
  415ba7:	outs   dx,DWORD PTR ds:[esi]
  415ba8:	push   es
  415ba9:	pusha  
  415baa:	aam    0xd9
  415bac:	adc    esp,DWORD PTR [esp+eiz*2+0x5b]
  415bb0:	jnp    0x415bdc
  415bb2:	popa   
  415bb3:	fild   QWORD PTR [edi-0xe]
  415bb6:	loope  0x415bd4
  415bb8:	call   DWORD PTR [edi+0x7f]
  415bbb:	lods   eax,DWORD PTR ds:[esi]
  415bbc:	dec    edx
  415bbd:	jbe    0x415b8d
  415bbf:	cmp    al,0x97
  415bc1:	popa   
  415bc2:	iret   
  415bc3:	mov    bl,0x2c
  415bc5:	dec    eax
  415bc6:	fistp  QWORD PTR [esi+0x49]
  415bc9:	cmc    
  415bca:	cdq    
  415bcb:	aad    0xbe
  415bcd:	jne    0x415bc1
  415bcf:	jg     0x415b51
  415bd1:	add    BYTE PTR [esi],ch
  415bd3:	sti    
  415bd4:	jle    0x415be4
  415bd6:	push   edi
  415bd7:	popa   
  415bd8:	out    dx,eax
  415bd9:	cmp    eax,0x9567bcbe
  415bde:	mov    edx,0xeb2cd9be
  415be3:	add    eax,0xfb488689
  415be8:	in     eax,0xc8
  415bea:	sub    eax,0xd6e8c4ae
  415bef:	mov    ss:0xdb949dbf,al
  415bf5:	sbb    edx,ecx
  415bf7:	sbb    bh,ah
  415bf9:	aad    0x6e
  415bfb:	ins    DWORD PTR es:[edi],dx
  415bfc:	dec    edx
  415bfd:	in     al,0x2b
  415bff:	sub    al,0x42
  415c01:	and    edi,DWORD PTR [eax]
  415c03:	(bad)  
  415c04:	scas   eax,DWORD PTR es:[edi]
  415c05:	or     al,BYTE PTR [esi+0x7f]
  415c08:	pop    ss
  415c09:	in     eax,dx
  415c0a:	xchg   edx,eax
  415c0b:	out    0x8f,al
  415c0d:	mov    edx,0x44e8701f
  415c12:	xchg   esi,eax
  415c13:	ins    BYTE PTR es:[edi],dx
  415c14:	xchg   DWORD PTR [ecx+0x70],esi
  415c17:	dec    esp
  415c18:	or     BYTE PTR [ecx*1+0x1e7f776],0xc5
  415c20:	imul   ecx,edi,0xffffff91
  415c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c24:	push   ebx
  415c25:	sub    esi,DWORD PTR [ecx]
  415c27:	sub    BYTE PTR [esi],cl
  415c29:	and    al,0xc2
  415c2b:	inc    ebx
  415c2c:	mov    cl,0xd
  415c2e:	icebp  
  415c2f:	jge    0x415c13
  415c31:	fcom   DWORD PTR [eax+0x4f]
  415c34:	jns    0x415c61
  415c36:	add    dh,BYTE PTR [edx-0x9]
  415c39:	and    bl,al
  415c3b:	add    al,0xc4
  415c3d:	sbb    eax,0x70cf303e
  415c42:	jg     0x415c92
  415c44:	je     0x415c33
  415c46:	iret   
  415c47:	out    0xbc,eax
  415c49:	jl     0x415c93
  415c4b:	stos   DWORD PTR es:[edi],eax
  415c4c:	outs   dx,DWORD PTR ds:[esi]
  415c4d:	shr    DWORD PTR [edx+0x1d],0xef
  415c51:	push   cs
  415c52:	cmp    eax,0x86f39197
  415c57:	xchg   ecx,eax
  415c58:	retf   0x9cbc
  415c5b:	or     edx,ebx
  415c5d:	das    
  415c5e:	ins    BYTE PTR es:[edi],dx
  415c5f:	dec    esp
  415c60:	pop    edi
  415c61:	lods   eax,DWORD PTR ds:[esi]
  415c62:	in     al,dx
  415c63:	fadd   DWORD PTR [ecx+0x6b8e4661]
  415c69:	inc    ebx
  415c6a:	arpl   WORD PTR [edx+0xf1b6976],di
  415c70:	cmp    eax,DWORD PTR [eax+0x43fa3adc]
  415c76:	add    dl,BYTE PTR [ecx+edi*4-0x76c45c2f]
  415c7d:	mov    bl,0xc3
  415c7f:	in     al,dx
  415c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c81:	jmp    0x42d9:0x51d7bf12
  415c88:	pop    ebp
  415c89:	inc    ebp
  415c8a:	sub    BYTE PTR [ecx-0x3484f924],al
  415c90:	jbe    0x415c13
  415c92:	fsubr  QWORD PTR [edi]
  415c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c95:	jp     0x415c72
  415c97:	in     al,0xcd
  415c99:	mov    ebx,0x46323081
  415c9e:	retf   0x7f72
  415ca1:	fisubr DWORD PTR [esi-0x35dff2c3]
  415ca7:	daa    
  415ca8:	sub    al,dh
  415caa:	daa    
  415cab:	scas   al,BYTE PTR es:[edi]
  415cac:	cwde   
  415cad:	inc    edx
  415cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415caf:	cwde   
  415cb0:	xor    eax,0x418c1f2f
  415cb5:	or     bh,ah
  415cb7:	retf   
  415cb8:	in     al,0x91
  415cba:	jmp    0xd0b36d83
  415cbf:	xchg   ebx,eax
  415cc0:	div    BYTE PTR [edi+0x43]
  415cc3:	(bad)  
  415cc4:	ins    BYTE PTR es:[edi],dx
  415cc5:	push   ebp
  415cc6:	in     eax,dx
  415cc7:	dec    edx
  415cc8:	hlt    
  415cc9:	cmp    ebp,esp
  415ccb:	jecxz  0x415c68
  415ccd:	pop    esp
  415cce:	imul   esp,DWORD PTR [ecx],0xd2046520
  415cd4:	imul   esp,DWORD PTR ds:0x731671bb,0x1d645e24
  415cde:	icebp  
  415cdf:	clc    
  415ce0:	adc    BYTE PTR [esi+0x37],cl
  415ce3:	lds    esp,FWORD PTR [esp+eax*8-0x4c775356]
  415cea:	pop    ebx
  415ceb:	pop    ss
  415cec:	cli    
  415ced:	lods   eax,DWORD PTR ds:[esi]
  415cee:	sbb    ch,BYTE PTR ds:[edx+eiz*8-0x3c]
  415cf3:	and    cl,dl
  415cf5:	fwait
  415cf6:	push   ss
  415cf7:	test   al,0x16
  415cf9:	js     0x415d38
  415cfb:	stos   DWORD PTR es:[edi],eax
  415cfc:	pop    esi
  415cfd:	ins    BYTE PTR es:[edi],dx
  415cfe:	xchg   edx,eax
  415cff:	sub    esi,DWORD PTR [edi-0x697dd17f]
  415d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d06:	stos   DWORD PTR es:[edi],eax
  415d07:	stc    
  415d08:	jno    0x415cad
  415d0a:	push   ebp
  415d0b:	imul   esp,ebp,0x30ff178c
  415d11:	add    al,BYTE PTR [edi]
  415d13:	lock mov gs,WORD PTR [ebp+edi*2+0x24]
  415d18:	sbb    bh,BYTE PTR [eax]
  415d1a:	xchg   ebx,eax
  415d1b:	stc    
  415d1c:	inc    edi
  415d1d:	ins    DWORD PTR es:[edi],dx
  415d1e:	pop    eax
  415d1f:	lds    eax,FWORD PTR [ebx-0x2272730]
  415d25:	in     al,dx
  415d26:	stos   BYTE PTR es:[edi],al
  415d27:	lock mov dl,0x1a
  415d2a:	sbb    al,BYTE PTR [edx]
  415d2c:	jo     0x415d83
  415d2e:	xor    DWORD PTR [edi-0x3c8ca4d4],esp
  415d34:	adc    al,0xcc
  415d36:	or     DWORD PTR [ebx],edx
  415d38:	mov    dl,0x97
  415d3a:	int    0x5d
  415d3c:	xlat   BYTE PTR ds:[ebx]
  415d3d:	lea    ecx,[esi+ebx*2-0x7e]
  415d41:	push   ecx
  415d42:	fisttp QWORD PTR ds:0x3857dc13
  415d48:	push   edx
  415d49:	lock fnsave [ebx-0x7a]
  415d4d:	(bad)  
  415d4e:	or     DWORD PTR [ecx+0x69dbda45],ebx
  415d54:	(bad)  
  415d55:	ret    
  415d56:	leave  
  415d57:	inc    BYTE PTR [ecx+0x3b]
  415d5a:	int3   
  415d5b:	cmp    BYTE PTR [eax-0x5b],ah
  415d5e:	dec    esi
  415d5f:	imul   BYTE PTR ds:0xd51e9b1a
  415d65:	adc    DWORD PTR [esi+0x38],eax
  415d68:	cmp    BYTE PTR [edi-0x1f7ff330],bl
  415d6e:	into   
  415d6f:	cmc    
  415d70:	test   al,0x7d
  415d72:	fstp   QWORD PTR [ebx]
  415d74:	fdivrp st(2),st
  415d76:	push   ebx
  415d77:	aad    0xa6
  415d79:	into   
  415d7a:	cli    
  415d7b:	out    0x18,eax
  415d7d:	stos   DWORD PTR es:[edi],eax
  415d7e:	sbb    BYTE PTR [edi-0x7e],cl
  415d81:	sbb    eax,0x5e014e3e
  415d86:	ins    DWORD PTR es:[edi],dx
  415d87:	gs (bad) 
  415d89:	popa   
  415d8a:	inc    ebx
  415d8b:	jne    0x415da7
  415d8d:	jle    0x415d41
  415d8f:	sub    edi,edi
  415d91:	mov    DWORD PTR [ecx],esi
  415d93:	add    eax,0x7d94d411
  415d98:	xor    ebx,DWORD PTR [edx-0x5b]
  415d9b:	shr    DWORD PTR [ebp-0x40cac411],cl
  415da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415da2:	mov    WORD PTR [eax-0x306cc923],ds
  415da8:	sbb    dh,BYTE PTR [eax+0x66]
  415dab:	sub    al,0xae
  415dad:	(bad)  
  415dae:	scas   al,BYTE PTR es:[edi]
  415daf:	hlt    
  415db0:	jecxz  0x415d50
  415db2:	and    ah,dh
  415db4:	rcr    DWORD PTR [ecx],0x61
  415db7:	jl     0x415daf
  415db9:	and    eax,0x66ca5269
  415dbe:	push   ss
  415dbf:	mov    bh,0xbd
  415dc1:	and    esi,ebp
  415dc3:	inc    edi
  415dc4:	std    
  415dc5:	dec    ebx
  415dc6:	sbb    cl,al
  415dc8:	ror    DWORD PTR [edi+ebp*4+0x4],0x4c
  415dcd:	ror    ah,cl
  415dcf:	bound  ebp,QWORD PTR [ebp-0x6b]
  415dd2:	lods   al,BYTE PTR ds:[esi]
  415dd3:	jno    0x415d5c
  415dd5:	stc    
  415dd6:	inc    ebp
  415dd7:	repz cmp BYTE PTR [edx-0x78d83fe3],0x20
  415ddf:	out    dx,al
  415de0:	xor    DWORD PTR ds:0x915dc647,ebx
  415de6:	mov    esp,0x73c7da5a
  415deb:	mov    DWORD PTR [ecx+0x2c],ecx
  415dee:	or     eax,0x87409722
  415df3:	or     DWORD PTR [edx-0x3b17bd68],esi
  415df9:	push   ebx
  415dfa:	mov    dl,0x18
  415dfc:	xchg   ecx,eax
  415dfd:	stos   BYTE PTR es:[edi],al
  415dfe:	int3   
  415dff:	fstp   QWORD PTR [edi]
  415e01:	cdq    
  415e02:	mov    edx,0x791facc4
  415e07:	ja     0x415da9
  415e09:	jmp    0x90a8:0xf9b9e5ef
  415e10:	adc    BYTE PTR [ebx-0x6ff80cf0],bh
  415e16:	shr    ebx,0x3d
  415e19:	push   edx
  415e1a:	js     0x415e26
  415e1c:	pushf  
  415e1d:	fidiv  WORD PTR [ecx]
  415e1f:	cld    
  415e20:	mov    al,ds:0xbd947f92
  415e25:	in     al,dx
  415e26:	adc    al,0x33
  415e28:	sti    
  415e29:	adc    BYTE PTR [edx+ebp*2],ah
  415e2c:	mov    BYTE PTR [edx],bl
  415e2e:	xor    edx,DWORD PTR [ecx]
  415e30:	or     al,0x24
  415e32:	dec    ecx
  415e33:	scas   eax,DWORD PTR es:[edi]
  415e34:	int3   
  415e35:	or     DWORD PTR [ebx-0x2d],edi
  415e38:	mov    bl,0xcd
  415e3a:	mov    BYTE PTR [esp+edi*4-0x31571536],dh
  415e41:	cmp    BYTE PTR [edi],dh
  415e43:	dec    DWORD PTR [esi+ecx*2]
  415e46:	jns    0x415e78
  415e48:	xchg   ecx,eax
  415e49:	fisub  WORD PTR [edx-0x73]
  415e4c:	test   al,ch
  415e4e:	sub    BYTE PTR [ebx-0x39],0x37
  415e52:	mov    ds:0x76f18e5c,eax
  415e57:	loope  0x415e57
  415e59:	ret    
  415e5a:	daa    
  415e5b:	mov    dl,0xed
  415e5d:	dec    ebx
  415e5e:	pop    ebp
  415e5f:	adc    eax,0x655f1307
  415e64:	ss xchg edx,eax
  415e66:	aad    0xf
  415e68:	inc    eax
  415e69:	and    eax,0xadf95fb3
  415e6e:	sub    eax,0x5c14b8b4
  415e73:	sub    eax,0x5a31ae8c
  415e78:	jmp    0xbf75:0x185cb2f0
  415e7f:	and    bl,BYTE PTR [ebx]
  415e81:	cmp    al,0xfa
  415e83:	add    dh,0x7
  415e86:	cdq    
  415e87:	out    0xfe,al
  415e89:	in     al,dx
  415e8a:	loopne 0x415e83
  415e8c:	push   edx
  415e8d:	outs   dx,DWORD PTR ds:[esi]
  415e8e:	pop    ebx
  415e8f:	arpl   WORD PTR [edi+edx*1-0x699a5a72],ax
  415e96:	leave  
  415e97:	inc    esi
  415e98:	ret    
  415e99:	clc    
  415e9a:	cmp    al,0x7c
  415e9c:	add    al,0xeb
  415e9e:	push   edx
  415e9f:	ds jns 0x415e6a
  415ea2:	es aaa 
  415ea4:	ds inc ecx
  415ea6:	mov    edi,ecx
  415ea8:	int    0xc5
  415eaa:	inc    esp
  415eab:	inc    ebx
  415eac:	fistp  WORD PTR [ebx+0x7082bc7f]
  415eb2:	fst    st(2)
  415eb4:	scas   eax,DWORD PTR es:[edi]
  415eb5:	sub    DWORD PTR ds:0x9e992184,esp
  415ebb:	iret   
  415ebc:	loopne 0x415ea6
  415ebe:	dec    esi
  415ebf:	fimul  WORD PTR [ebx-0x2a3425fd]
  415ec5:	inc    edi
  415ec6:	dec    esi
  415ec7:	(bad)  
  415ec9:	outs   dx,BYTE PTR ds:[esi]
  415eca:	mov    edx,0x2fe9305d
  415ecf:	add    ch,al
  415ed1:	dec    esi
  415ed2:	pop    es
  415ed3:	in     al,dx
  415ed4:	jecxz  0x415f07
  415ed6:	enter  0xba35,0x51
  415eda:	cmp    eax,0x5f607121
  415edf:	add    ebx,edi
  415ee1:	adc    al,0xae
  415ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee4:	mov    DWORD PTR [eax-0x2aedb117],esi
  415eea:	ror    DWORD PTR [edi+eax*1-0xacf4c1c],1
  415ef1:	sbb    eax,0xbc62b854
  415ef6:	sbb    esi,ecx
  415ef8:	xchg   esi,eax
  415ef9:	lahf   
  415efa:	jo     0x415ebf
  415efc:	and    eax,0x28be2564
  415f01:	fcomp  DWORD PTR [edi+0x39765c0f]
  415f07:	int3   
  415f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f09:	pop    ecx
  415f0a:	dec    ebx
  415f0b:	fidivr DWORD PTR [ebx+0x28]
  415f0e:	dec    esp
  415f0f:	scas   al,BYTE PTR es:[edi]
  415f10:	add    BYTE PTR [esi+0x6c392460],al
  415f16:	gs cld 
  415f18:	jle    0x415f24
  415f1a:	ret    
  415f1b:	mov    ebp,0xdbe7b9a5
  415f20:	hlt    
  415f21:	and    al,0x86
  415f23:	(bad)  
  415f24:	mov    ds:0x1ba5dc87,eax
  415f29:	xor    al,0x85
  415f2b:	cmp    ebp,DWORD PTR [edi+ecx*1+0x19]
  415f2f:	aas    
  415f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f31:	mov    eax,0x9a0460d0
  415f36:	addr16 dec edx
  415f38:	mov    esi,0xc3b27aed
  415f3d:	mov    ecx,0xaf029686
  415f42:	jb     0x415f7b
  415f44:	cmp    ecx,edi
  415f46:	jmp    0x415fa4
  415f48:	jl     0x415f7c
  415f4a:	ret    0x9dcc
  415f4d:	inc    esp
  415f4e:	clc    
  415f4f:	or     edi,DWORD PTR [edi-0x52]
  415f52:	xor    BYTE PTR [ecx],dh
  415f54:	je     0x415f74
  415f56:	inc    ebp
  415f57:	hlt    
  415f58:	dec    eax
  415f59:	cdq    
  415f5a:	sbb    ebp,esp
  415f5c:	add    eax,0xc1e94879
  415f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f62:	cmp    eax,0x35377afd
  415f67:	xchg   ebp,eax
  415f68:	addr16 cwde 
  415f6a:	cmp    eax,0xd93d221a
  415f6f:	pushf  
  415f70:	fucomip st,st(6)
  415f72:	mov    esp,0xc7180d88
  415f77:	fmul   DWORD PTR [edx+ebp*8+0x56]
  415f7b:	rcr    BYTE PTR [edi-0x12286824],cl
  415f81:	inc    esi
  415f82:	leave  
  415f83:	xchg   esp,eax
  415f84:	lds    esp,FWORD PTR [esp+edx*8+0x5a3ccd26]
  415f8b:	mov    edi,0xab3e4a6d
  415f90:	cmp    al,0x56
  415f92:	jno    0x415f7e
  415f94:	sbb    DWORD PTR [edx-0x7919bf53],edx
  415f9a:	pop    es
  415f9b:	inc    ebx
  415f9c:	cmp    eax,0xa1b20eda
  415fa1:	push   cs
  415fa2:	push   es
  415fa3:	push   ss
  415fa4:	and    BYTE PTR [esi-0x5b082791],bl
  415faa:	cmp    al,0x85
  415fac:	daa    
  415fad:	pop    edx
  415fae:	sub    eax,DWORD PTR [edi-0x62]
  415fb1:	dec    esi
  415fb2:	pushf  
  415fb3:	je     0x415f44
  415fb5:	int    0x5b
  415fb7:	ds jae 0x415ff9
  415fba:	xchg   esi,eax
  415fbb:	jnp    0x415ffd
  415fbd:	mov    bh,0xda
  415fbf:	clc    
  415fc0:	test   DWORD PTR [edx+0x6bc1ef92],esp
  415fc6:	pop    ecx
  415fc7:	push   ebp
  415fc8:	jne    0x416013
  415fca:	inc    ebp
  415fcb:	loop   0x416019
  415fcd:	in     eax,dx
  415fce:	fwait
  415fcf:	aaa    
  415fd0:	sar    DWORD PTR [ebx+0xe],1
  415fd3:	dec    ebp
  415fd4:	test   BYTE PTR [edi-0x435a2418],dh
  415fda:	les    ebx,FWORD PTR [ecx+0xe0f5f1b]
  415fe0:	out    dx,eax
  415fe1:	jnp    0x415fa6
  415fe3:	xchg   esp,eax
  415fe4:	cld    
  415fe5:	retf   0xac73
  415fe8:	xchg   esp,eax
  415fe9:	daa    
  415fea:	ror    BYTE PTR [esi+0x509bf133],0x12
  415ff1:	lods   eax,DWORD PTR ds:[esi]
  415ff2:	xchg   ebx,eax
  415ff3:	in     al,dx
  415ff4:	mov    es,WORD PTR [edi-0x4c]
  415ff7:	fld    DWORD PTR [ecx+0x0]
  415ffa:	or     ah,dl
  415ffc:	leave  
  415ffd:	imul   eax,DWORD PTR [edi+0x54],0x6a
  416001:	out    0xbb,al
  416003:	xor    ebx,ebp
  416005:	jbe    0x41607c
  416007:	jnp    0x41601a
  416009:	dec    eax
  41600a:	jno    0x416076
  41600c:	rcr    BYTE PTR [ebx+edi*4],1
  41600f:	retf   0xa7c
  416012:	adc    eax,0x5aeef2ae
  416017:	cmp    DWORD PTR [eax+0x7e],edi
  41601a:	int3   
  41601b:	cld    
  41601c:	xor    al,0xa
  41601e:	xchg   dh,dl
  416020:	test   DWORD PTR ss:[edi-0x17],eax
  416024:	xor    al,0x43
  416026:	jne    0x415fd2
  416028:	push   cs
  416029:	mov    bh,0x6c
  41602b:	sti    
  41602c:	shl    BYTE PTR [edi-0xe],cl
  41602f:	arpl   WORD PTR [ebp+0x67],bx
  416032:	mov    edi,0x5e528406
  416037:	jo     0x415fd2
  416039:	mov    bl,0x1
  41603b:	cmp    ah,0xa5
  41603e:	cli    
  41603f:	inc    edx
  416040:	js     0x415fc6
  416042:	cmc    
  416043:	xchg   edi,eax
  416044:	popf   
  416045:	xchg   esp,eax
  416046:	leave  
  416047:	imul   esi,DWORD PTR [ebp-0x1e],0xae83639
  41604e:	inc    ebx
  41604f:	push   ecx
  416050:	or     BYTE PTR [edx+ebp*2],dh
  416053:	mov    bh,0xea
  416055:	stc    
  416056:	das    
  416057:	pop    ebx
  416058:	cs xor al,0x44
  41605b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41605c:	add    BYTE PTR [edx-0x49],cl
  41605f:	jne    0x416036
  416061:	mov    esp,0xf0de67b0
  416066:	(bad)  
  416068:	in     eax,0xbf
  41606a:	pop    ebp
  41606b:	dec    edi
  41606c:	pop    ecx
  41606d:	cld    
  41606e:	in     eax,dx
  41606f:	and    edi,DWORD PTR [ebx+0xf]
  416072:	xchg   edx,eax
  416073:	mov    esp,DWORD PTR [eax]
  416075:	loopne 0x416097
  416077:	mov    esi,0x4aadcd56
  41607d:	cmp    ebx,0x25
  416080:	(bad)  
  416082:	or     al,0x42
  416084:	mov    ah,0x75
  416086:	dec    ebp
  416087:	mov    ecx,0xc600fc1d
  41608c:	mov    eax,0x52cf7aec
  416091:	xor    ebx,esp
  416093:	cmp    eax,0x950daf37
  416098:	mov    cl,0xbb
  41609a:	cmp    al,0xc3
  41609c:	mov    dh,0x13
  41609e:	mov    bh,0x0
  4160a0:	push   cs
  4160a1:	jecxz  0x416098
  4160a3:	icebp  
  4160a4:	mov    bh,0x4c
  4160a6:	dec    ebx
  4160a7:	adc    al,0x33
  4160a9:	add    bh,bl
  4160ab:	dec    edi
  4160ac:	dec    edx
  4160ad:	inc    esp
  4160ae:	(bad)  
  4160af:	test   DWORD PTR [edi-0x66],0x5ee958ac
  4160b6:	(bad)  
  4160b8:	add    ebx,DWORD PTR ds:0x8cbcb5d4
  4160be:	aam    0xd7
  4160c0:	sub    edi,DWORD PTR [ebx]
  4160c2:	mov    WORD PTR [esp+ebx*4-0x2a],?
  4160c6:	mov    dh,0xe0
  4160c8:	out    dx,al
  4160c9:	aad    0x2c
  4160cb:	cmp    eax,DWORD PTR [ebx+edx*8+0x4cec49ba]
  4160d2:	mov    ebp,DWORD PTR [edx-0x64]
  4160d5:	rcl    DWORD PTR [edi],cl
  4160d7:	lods   al,BYTE PTR ds:[esi]
  4160d8:	sub    ebx,DWORD PTR [eax+0x11]
  4160db:	(bad)  
  4160dc:	dec    esi
  4160dd:	inc    edi
  4160de:	mov    edx,0x3d396bf5
  4160e3:	mov    ?,WORD PTR [ebx]
  4160e5:	inc    esp
  4160e6:	or     ah,BYTE PTR [eax-0x62]
  4160e9:	push   0x933156bd
  4160ee:	sub    eax,0xb1bdb52f
  4160f3:	cmp    eax,0x47b12217
  4160f8:	test   al,0x8d
  4160fa:	int    0x20
  4160fc:	or     DWORD PTR [edi],0xffffffdc
  4160ff:	and    DWORD PTR [esi+edx*2+0x1d],0xffffff8c
  416104:	lahf   
  416105:	pop    edi
  416106:	lods   al,BYTE PTR ds:[esi]
  416107:	fld    DWORD PTR [esi+0x7f0c21db]
  41610d:	mov    bl,0xb6
  41610f:	xchg   BYTE PTR [edx-0x3bf3fbb6],ah
  416115:	ja     0x4160bc
  416117:	aam    0x4f
  416119:	inc    eax
  41611a:	das    
  41611b:	sub    edi,edi
  41611d:	cmp    ebp,ebp
  41611f:	shr    esi,cl
  416121:	jae    0x416108
  416123:	pop    eax
  416124:	mov    ds:0x7afba8d9,eax
  416129:	cmp    DWORD PTR [ebx],edi
  41612b:	bnd jp 0x41619c
  41612e:	aas    
  41612f:	jns    0x416101
  416131:	pop    ebp
  416132:	jmp    0xddc0:0x2dceeb27
  416139:	xchg   BYTE PTR [ebx+0x8928cb8],bh
  41613f:	pop    eax
  416140:	add    esp,DWORD PTR fs:[edi-0x18]
  416144:	dec    edi
  416145:	test   al,0x1
  416148:	pop    edi
  416149:	ds sti 
  41614b:	outs   dx,DWORD PTR ds:[esi]
  41614c:	cmp    eax,0x5a35eac0
  416151:	ror    BYTE PTR [edi],0xa9
  416154:	out    0x7d,eax
  416156:	sbb    edx,esp
  416158:	in     eax,0xd1
  41615a:	jb     0x4160dd
  41615c:	push   0x59239c87
  416161:	cmc    
  416162:	js     0x4161c4
  416164:	hlt    
  416165:	xor    edx,DWORD PTR [esi+0x3e06579d]
  41616b:	jno    0x416124
  41616d:	push   ebp
  41616e:	push   0x41a33a73
  416173:	fisttp DWORD PTR [esi+ebx*2-0x5095163e]
  41617a:	shr    DWORD PTR [eax],cl
  41617c:	fs das 
  41617e:	pop    esp
  41617f:	test   al,0x53
  416181:	inc    edi
  416182:	ret    0xe9d9
  416185:	jo     0x416107
  416187:	jmp    DWORD PTR [ecx-0x37]
  41618a:	dec    esp
  41618b:	mov    BYTE PTR [edx+0x30],bh
  41618e:	adc    al,0xb
  416190:	dec    ebp
  416191:	jae    0x416198
  416193:	das    
  416194:	sti    
  416195:	test   eax,0xda54df4f
  41619a:	adc    eax,0x82c627df
  41619f:	icebp  
  4161a0:	xor    DWORD PTR [edx+0x78],0x33485c45
  4161a7:	std    
  4161a8:	imul   esp,DWORD PTR es:[esi-0x2212b3db],0x5044982d
  4161b3:	and    eax,0x75f71b58
  4161b8:	adc    esp,ecx
  4161ba:	daa    
  4161bb:	ficom  DWORD PTR [eax+ebx*8-0x29]
  4161bf:	imul   ebx,edx,0xffffff93
  4161c2:	shl    bh,1
  4161c4:	dec    esi
  4161c5:	pop    esi
  4161c6:	in     eax,dx
  4161c7:	into   
  4161c8:	(bad)  
  4161c9:	int3   
  4161ca:	sub    BYTE PTR [esi+0x1821fa94],al
  4161d0:	cmp    eax,0x33d8dfd4
  4161d5:	fisttp DWORD PTR [edi]
  4161d7:	inc    esp
  4161d8:	dec    esi
  4161d9:	clc    
  4161da:	inc    esp
  4161db:	push   esi
  4161dc:	ret    
  4161dd:	hlt    
  4161de:	jle    0x4161f3
  4161e0:	xchg   ecx,eax
  4161e1:	mov    WORD PTR [esi+0x38f12453],fs
  4161e7:	cmp    eax,0xe2a2d13c
  4161ec:	xchg   edi,eax
  4161ed:	scas   al,BYTE PTR es:[edi]
  4161ee:	addr16 add ah,0xdf
  4161f2:	push   eax
  4161f3:	mov    esi,0xa4989893
  4161f8:	shufps xmm2,XMMWORD PTR [ebp-0x21],0xd4
  4161fd:	(bad)  
  4161fe:	fist   DWORD PTR [edi+0x7871cf19]
  416204:	push   0xffffff83
  416206:	push   edx
  416207:	ds js  0x41620c
  41620a:	je     0x41621e
  41620c:	inc    edi
  41620d:	xchg   ebp,eax
  41620e:	fsubrp st(1),st
  416210:	add    ch,BYTE PTR [ebx-0xd89dd06]
  416216:	push   esp
  416217:	stc    
  416218:	cld    
  416219:	mov    ds:0xe5b7b229,ax
  41621f:	or     ebx,DWORD PTR [ebx]
  416221:	cmc    
  416222:	cvttps2pi mm5,QWORD PTR [edi+0x2c964eca]
  416229:	outs   dx,BYTE PTR ds:[esi]
  41622a:	(bad)  
  41622b:	jl     0x4161db
  41622d:	loopne 0x41627b
  41622f:	inc    ebp
  416230:	mov    eax,ds:0xb1e4c46c
  416235:	mov    eax,DWORD PTR [ecx]
  416237:	aam    0xba
  416239:	cmc    
  41623a:	jp     0x416230
  41623c:	ret    0x716d
  41623f:	sar    DWORD PTR [eax-0xe],cl
  416242:	popf   
  416243:	dec    ebx
  416244:	inc    ebp
  416245:	(bad)  
  416246:	xchg   ebp,eax
  416247:	leave  
  416248:	dec    esi
  416249:	(bad)  
  41624b:	test   DWORD PTR [eax],ebp
  41624d:	add    edi,DWORD PTR [esi-0x16]
  416250:	outs   dx,DWORD PTR ds:[esi]
  416251:	pop    ecx
  416252:	es inc esp
  416254:	cmp    eax,0xf94975c
  416259:	inc    esp
  41625a:	popa   
  41625b:	mov    al,0x46
  41625d:	mov    ebp,0x9ca60b26
  416262:	inc    edi
  416263:	imul   edx,ebx,0x25
  416266:	jle    0x4162b5
  416268:	pop    esi
  416269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41626a:	in     al,0xab
  41626c:	cld    
  41626d:	int    0x9b
  41626f:	inc    edx
  416270:	jno    0x4162c4
  416272:	or     DWORD PTR [bx+di],ecx
  416275:	pop    edx
  416276:	mov    DWORD PTR [ebx],eax
  416278:	ret    
  416279:	xchg   esp,eax
  41627a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41627b:	pop    ss
  41627c:	xor    BYTE PTR [eiz*8-0x7d2a7d1b],0x2b
  416284:	out    0x6d,al
  416286:	loopne 0x41624f
  416288:	fistp  DWORD PTR [esi+edi*2-0x55]
  41628c:	pusha  
  41628d:	iret   
  41628e:	jo     0x41622b
  416290:	inc    ebp
  416291:	adc    ebx,DWORD PTR [ebp-0x31]
  416294:	gs mov ah,0xf3
  416297:	or     al,0x5b
  416299:	mov    DWORD PTR [ebp-0x58],edx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0xd5,eax
  416394:	pop    ds
  416395:	mov    esi,0x79575c39
  41639a:	jp     0x41639d
  41639c:	pop    edi
  41639d:	jp     0x416419
  41639f:	fst    st(3)
  4163a1:	and    ch,BYTE PTR [edx-0x4]
  4163a4:	xor    esi,0xd
  4163a7:	and    ecx,0x54
  4163aa:	push   ecx
  4163ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ac:	cmp    esi,DWORD PTR [ebp+0xe8d89a8]
  4163b2:	or     DWORD PTR [ecx+0x9],ebp
  4163b5:	jne    0x41636a
  4163b7:	in     al,0x80
  4163b9:	outs   dx,DWORD PTR ds:[esi]
  4163ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163bb:	push   ecx
  4163bc:	mov    dl,BYTE PTR [ebp+0x1]
  4163bf:	sbb    ah,al
  4163c1:	cmp    ecx,DWORD PTR [edx-0x205970d6]
  4163c7:	sub    eax,0xc054994
  4163cc:	cmp    eax,0x94c458c3
  4163d1:	adc    DWORD PTR [ebx+0x76],esi
  4163d4:	push   0x24d1713a
  4163d9:	sub    al,0xc4
  4163db:	sub    BYTE PTR [eax],ch
  4163dd:	mov    dl,0xaa
  4163df:	arpl   WORD PTR [ecx+0x6761d032],bx
  4163e5:	mov    cl,0x4e
  4163e7:	out    0xc8,eax
  4163e9:	repz inc esi
  4163eb:	push   ecx
  4163ec:	or     ecx,esp
  4163ee:	dec    esp
  4163ef:	gs icebp 
  4163f1:	dec    esp
  4163f2:	out    dx,al
  4163f3:	fdiv   DWORD PTR [ebp+ebp*8+0x63]
  4163f7:	ss jne 0x416404
  4163fa:	push   ebp
  4163fb:	out    dx,al
  4163fc:	js     0x416382
  4163fe:	push   ebx
  4163ff:	inc    ebx
  416400:	repz dec edx
  416402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416403:	inc    ebp
  416404:	cmp    eax,DWORD PTR [edx]
  416406:	lea    ebx,[eax-0x8]
  416409:	xor    al,0xa
  41640b:	rol    BYTE PTR [ebx+0x2f],cl
  41640e:	popa   
  41640f:	mov    edi,0x947af621
  416414:	into   
  416415:	xor    ah,BYTE PTR [ebx+0x597bce77]
  41641b:	adc    DWORD PTR [ebx-0x80],ebx
  41641e:	xchg   edi,eax
  41641f:	scas   al,BYTE PTR es:[edi]
  416420:	outs   dx,DWORD PTR ds:[esi]
  416421:	and    al,0xe3
  416423:	dec    edx
  416424:	pop    esi
  416425:	jne    0x4163bb
  416427:	jle    0x416493
  416429:	mov    ebp,0x18093753
  41642e:	dec    esp
  41642f:	icebp  
  416430:	ret    
  416431:	sbb    esi,DWORD PTR [eax+0x64]
  416434:	cmp    eax,0x73027571
  416439:	and    al,0x1f
  41643b:	adc    ecx,0x67
  41643e:	in     eax,dx
  41643f:	mov    ebp,0x33fd6471
  416444:	adc    eax,0xb6f62c82
  416449:	in     eax,0x59
  41644b:	xchg   ebp,eax
  41644c:	push   esp
  41644d:	test   DWORD PTR [edx-0x7f],esi
  416450:	pop    ebp
  416451:	shl    DWORD PTR [edi],0xe8
  416454:	jo     0x416461
  416456:	in     eax,dx
  416457:	adc    BYTE PTR [edx-0x22],bl
  41645a:	xchg   esi,eax
  41645b:	aam    0x16
  41645d:	cwde   
  41645e:	leave  
  41645f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416460:	pusha  
  416461:	or     al,BYTE PTR [ebp-0x35]
  416464:	ins    DWORD PTR es:[edi],dx
  416465:	mul    cl
  416467:	call   0x9f8aadb8
  41646c:	fst    QWORD PTR [edi+eiz*1+0x6a]
  416470:	(bad)  
  416472:	xor    DWORD PTR [esi+0x39],esp
  416475:	or     al,0x30
  416477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416478:	fdivr  QWORD PTR [esi+ecx*2-0x17]
  41647c:	stc    
  41647d:	jl     0x416423
  41647f:	pop    esi
  416480:	and    eax,0x37d300a7
  416485:	jmp    0xc0a4:0x9269d907
  41648c:	rol    DWORD PTR [eax-0xb],cl
  41648f:	push   esp
  416490:	(bad)  
  416491:	xor    ch,BYTE PTR [ebx+ecx*4]
  416494:	add    ecx,DWORD PTR [ebx-0x6a]
  416497:	rep lods eax,DWORD PTR ds:[si]
  41649a:	icebp  
  41649b:	mov    ds:0xd405ed4e,al
  4164a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a1:	cli    
  4164a2:	out    0x8b,al
  4164a4:	(bad)  
  4164a5:	ret    0xb4d6
  4164a8:	(bad)  
  4164a9:	retf   0xa565
  4164ac:	sbb    eax,0xd1688676
  4164b1:	add    eax,0x3fc675f4
  4164b6:	or     al,0x7c
  4164b8:	mov    ch,0xb0
  4164ba:	fcmovu st,st(3)
  4164bc:	in     al,0x42
  4164be:	cs ins BYTE PTR es:[edi],dx
  4164c0:	cmc    
  4164c1:	(bad)  
  4164c2:	rcl    BYTE PTR [esi],cl
  4164c4:	(bad)  
  4164c5:	aam    0x69
  4164c7:	scas   eax,DWORD PTR es:[edi]
  4164c8:	fmul   DWORD PTR [edi+esi*2+0x6b7bbbca]
  4164cf:	or     DWORD PTR [edi-0x52782751],edx
  4164d5:	hlt    
  4164d6:	cdq    
  4164d7:	cmp    DWORD PTR [eax+0x116fb0ff],ebp
  4164dd:	popf   
  4164de:	xor    BYTE PTR [esi+0x5],bl
  4164e1:	aam    0x96
  4164e3:	xor    eax,0xb28273b1
  4164e8:	mov    ecx,0xaff057ed
  4164ed:	test   al,0xb5
  4164ef:	mov    dl,0xb
  4164f1:	das    
  4164f2:	gs mov ch,0x1f
  4164f5:	ins    BYTE PTR es:[edi],dx
  4164f6:	loopne 0x41649a
  4164f8:	sub    DWORD PTR [ebp-0x1e6bd232],esi
  4164fe:	ret    0x5e63
  416501:	mov    dh,BYTE PTR [eax+0x7]
  416504:	mov    eax,ds:0x1a581af1
  416509:	dec    eax
  41650a:	popa   
  41650b:	rol    BYTE PTR [edx],1
  41650d:	popf   
  41650e:	dec    esi
  41650f:	push   ebx
  416510:	xchg   ebx,eax
  416511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416512:	arpl   si,di
  416514:	rcr    DWORD PTR [eax+0x78],0xb4
  416518:	mov    ah,BYTE PTR [esi]
  41651a:	dec    ebp
  41651b:	mov    esi,0xea7f6371
  416520:	stos   DWORD PTR es:[edi],eax
  416521:	xchg   ecx,eax
  416522:	or     al,0x2e
  416524:	push   esp
  416525:	rcl    DWORD PTR [edx+edi*4+0x3988dee2],0x63
  41652d:	cdq    
  41652e:	test   eax,0x68f4698b
  416533:	fdiv   st,st(7)
  416535:	adc    al,0xf1
  416537:	bound  ebp,QWORD PTR [ebx]
  416539:	sbb    dh,BYTE PTR [ecx+0x2a1f7d9]
  41653f:	fdiv   QWORD PTR [edx]
  416541:	jmp    FWORD PTR [edi]
  416543:	mov    ds:0x45140906,eax
  416548:	dec    esi
  416549:	jmp    0x2a9dfe85
  41654e:	rcl    BYTE PTR [esi+0x366dd5a3],1
  416554:	loopne 0x416599
  416556:	sub    DWORD PTR [esi-0x1a89c790],esp
  41655c:	pop    edi
  41655d:	in     al,0x5a
  41655f:	mov    ds:0xe4798f92,eax
  416564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416565:	jg     0x416531
  416567:	mov    al,ds:0x896a31ff
  41656c:	xchg   edi,eax
  41656d:	xor    al,0xc3
  41656f:	mov    edi,0x4f3a29d7
  416574:	data16 idiv BYTE PTR [ebp+ebp*2-0x66]
  416579:	inc    ebx
  41657a:	pop    edx
  41657b:	mov    bl,0xd3
  41657d:	rcl    BYTE PTR [edi+0x69],cl
  416580:	btc    WORD PTR [ebx+0x5dd25841],dx
  416588:	(bad)  
  416589:	jne    0x416566
  41658b:	lods   al,BYTE PTR ds:[esi]
  41658c:	jmp    0xeace:0x4cb374cb
  416593:	pushf  
  416594:	xchg   ecx,eax
  416595:	aam    0x5d
  416597:	add    BYTE PTR [edi+0x5ec36bb1],al
  41659d:	push   ds
  41659e:	test   eax,0xcbc19fdc
  4165a3:	adc    ebp,0xab034f83
  4165a9:	add    al,0xaa
  4165ab:	jmp    0x99d1:0x51ecab3f
  4165b2:	adc    al,0x51
  4165b4:	sub    ebp,DWORD PTR [ecx+ebx*2-0x7a]
  4165b8:	imul   ebx,edx,0x14
  4165bb:	push   edi
  4165bc:	loop   0x416602
  4165be:	add    eax,0xe92acfc3
  4165c3:	jb     0x41654d
  4165c5:	add    eax,0xf7cb306a
  4165ca:	inc    ebp
  4165cb:	shl    BYTE PTR [edi*1-0x28e1c364],0x7b
  4165d3:	cdq    
  4165d4:	es ret 0xcc5f
  4165d8:	xor    edx,esp
  4165da:	push   ss
  4165db:	mov    al,0x15
  4165dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165de:	std    
  4165df:	inc    esp
  4165e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e1:	jnp    0x4165c0
  4165e3:	mov    dh,0x31
  4165e5:	outs   dx,BYTE PTR ds:[esi]
  4165e6:	(bad)  
  4165e7:	call   0x4ab0:0x35d504ec
  4165ee:	retf   0x9d6e
  4165f1:	xchg   esi,eax
  4165f2:	cdq    
  4165f3:	xchg   edi,eax
  4165f4:	stos   DWORD PTR es:[edi],eax
  4165f5:	int    0xed
  4165f7:	cmp    DWORD PTR [ebx-0x48],0xfffffffc
  4165fb:	and    bh,BYTE PTR [ebp-0x65361816]
  416601:	mov    bh,BYTE PTR [eax-0x3214ad93]
  416607:	lods   eax,DWORD PTR ds:[esi]
  416608:	or     al,0x75
  41660a:	xchg   ch,cl
  41660c:	(bad)  
  41660e:	repnz mov eax,0x43caaf03
  416614:	mov    eax,0xc6e09804
  416619:	inc    edi
  41661a:	jl     0x41665e
  41661c:	adc    dl,0xd0
  41661f:	mov    bh,BYTE PTR [edx-0x28]
  416622:	mov    WORD PTR [esi+0x21],?
  416625:	jbe    0x416636
  416627:	ins    BYTE PTR es:[edi],dx
  416628:	jb     0x41663f
  41662a:	gs dec ecx
  41662c:	lods   al,BYTE PTR ds:[esi]
  41662d:	mov    ch,0x74
  41662f:	call   0xb97e:0xccc954da
  416636:	pop    esp
  416637:	cmc    
  416638:	inc    ebx
  416639:	add    eax,0x8b9edc43
  41663e:	mov    bl,BYTE PTR [ecx+edx*1-0x69106085]
  416645:	leave  
  416646:	and    DWORD PTR [esp+ecx*2+0x2b],0x74f067c2
  41664e:	fmul   DWORD PTR [esi-0x19e73ba5]
  416654:	arpl   WORD PTR [esi],cx
  416656:	pop    esi
  416657:	xor    ebp,DWORD PTR [edi+0x67330b97]
  41665d:	mov    dh,0x11
  41665f:	(bad)  
  416660:	or     DWORD PTR [ebp-0x2b],eax
  416663:	mov    DWORD PTR [ebx-0x39f3463b],edx
  416669:	adc    DWORD PTR [eax+0x6cdd461f],0x12
  416670:	mov    cl,0xa8
  416672:	test   DWORD PTR [esp+esi*2],0x30922146
  416679:	adc    ah,dh
  41667b:	aad    0x98
  41667d:	call   0xcebd:0x82c1c276
  416684:	idiv   DWORD PTR [edx+0x1d]
  416687:	(bad)  
  416688:	xor    cl,BYTE PTR [esi+edx*8+0x28d67868]
  41668f:	xor    bh,al
  416691:	mov    dh,cl
  416693:	gs xor dl,al
  416696:	fadd   DWORD PTR [edx+0x4734dc6f]
  41669c:	in     al,0xeb
  41669e:	and    eax,0x4c55a2fe
  4166a3:	das    
  4166a4:	dec    esi
  4166a5:	(bad)  
  4166a6:	lock inc esi
  4166a8:	fs jecxz 0x4166af
  4166ab:	fild   WORD PTR [ecx+ecx*1+0x15f22fec]
  4166b2:	jne    0x41668d
  4166b4:	(bad)  
  4166b5:	pop    ss
  4166b6:	inc    eax
  4166b7:	cmp    eax,ecx
  4166b9:	aaa    
  4166ba:	pop    ss
  4166bb:	pop    edi
  4166bc:	push   edx
  4166bd:	jo     0x41669f
  4166bf:	ror    DWORD PTR [ebx-0x3205db51],cl
  4166c5:	aad    0xf6
  4166c7:	and    ah,BYTE PTR [edx-0x4c]
  4166ca:	and    BYTE PTR [edx+0x33],dl
  4166cd:	cwde   
  4166ce:	ret    
  4166cf:	mov    dh,0x2c
  4166d1:	lock shl DWORD PTR [edx],cl
  4166d4:	and    ah,BYTE PTR [edx-0x58]
  4166d7:	in     al,dx
  4166d8:	imul   ebp,DWORD PTR [edx],0x51
  4166db:	popf   
  4166dc:	imul   edi,edx,0xd628de80
  4166e2:	mov    eax,ds:0x3bbff582
  4166e7:	in     al,dx
  4166e8:	push   ecx
  4166e9:	stos   DWORD PTR es:[edi],eax
  4166ea:	cwde   
  4166eb:	retf   
  4166ec:	adc    DWORD PTR [eax+ecx*8-0x2c],0x6df04e00
  4166f4:	mov    ?,WORD PTR [ecx+ebp*1]
  4166f7:	and    BYTE PTR [esi+esi*8-0xb],ah
  4166fb:	xor    BYTE PTR [edi-0x40],cl
  4166fe:	ss dec edi
  416700:	nop
  416701:	call   0x9cd:0x7f8b06fc
  416708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416709:	add    ch,dl
  41670b:	mov    edx,0x7da89239
  416710:	xor    eax,esi
  416712:	je     0x41678e
  416714:	sub    DWORD PTR [eax+0x4ef85b94],esp
  41671a:	mov    es:0xfb78e60a,eax
  416720:	cmp    esi,DWORD PTR [ecx-0x1]
  416723:	xor    eax,ebx
  416725:	jle    0x4166b6
  416727:	outs   dx,BYTE PTR ds:[esi]
  416728:	repnz (bad) 
  41672a:	outs   dx,DWORD PTR ds:[esi]
  41672b:	out    dx,eax
  41672c:	test   al,0xfa
  41672e:	push   ecx
  41672f:	sbb    eax,0xa075531f
  416734:	scas   eax,DWORD PTR es:[edi]
  416735:	int    0x77
  416737:	and    BYTE PTR [esi-0x452b72df],0x81
  41673e:	fwait
  41673f:	and    al,0x8a
  416741:	lahf   
  416742:	call   0x5372b8f
  416747:	es adc ch,ch
  41674a:	cmp    ch,dh
  41674c:	pop    ecx
  41674d:	jmp    0x41674a
  41674f:	push   ss
  416750:	xchg   ebx,eax
  416751:	fist   WORD PTR [edx+edx*8+0x7302e740]
  416758:	or     BYTE PTR [ebx+eax*2],dh
  41675b:	adc    DWORD PTR ds:0x62361d73,esi
  416761:	mov    ebp,0xf4e28420
  416766:	pop    edx
  416767:	mov    esi,0x8eb0ac14
  41676c:	mov    edx,0xef450279
  416771:	ficomp WORD PTR [bp+di+0x1416]
  416776:	out    dx,eax
  416777:	cmc    
  416778:	mov    ds:0x83c81585,eax
  41677d:	cmp    BYTE PTR [edi],bh
  41677f:	mov    ch,0x94
  416781:	mov    eax,ds:0x93808c99
  416786:	xchg   edi,eax
  416787:	sbb    ah,BYTE PTR [edi+0x4d]
  41678a:	sbb    al,0xd1
  41678c:	xchg   ebp,eax
  41678d:	mov    ah,0x8f
  41678f:	mov    BYTE PTR [ebp+0x32692ff2],al
  416795:	mov    esi,0x53441505
  41679a:	or     al,0x8f
  41679c:	pop    eax
  41679d:	(bad)  [edx]
  41679f:	pop    ds
  4167a0:	cmp    edx,DWORD PTR [edx]
  4167a2:	pop    ebp
  4167a3:	arpl   WORD PTR [edi+edx*2+0x37d98df5],bx
  4167aa:	pop    esp
  4167ab:	cld    
  4167ac:	mov    ds:0x94ca808c,al
  4167b1:	test   al,0xf9
  4167b3:	scas   eax,DWORD PTR es:[edi]
  4167b4:	add    dl,0xa1
  4167b7:	mov    es,WORD PTR [ecx]
  4167b9:	dec    ecx
  4167ba:	adc    ch,BYTE PTR ds:0xf73061fe
  4167c0:	pushf  
  4167c1:	jecxz  0x416790
  4167c3:	xor    BYTE PTR [edx],bl
  4167c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c7:	or     DWORD PTR [ecx],eax
  4167c9:	mov    al,ds:0x1151a2ac
  4167ce:	enter  0x3f38,0x19
  4167d2:	mov    edx,0xff30be18
  4167d7:	mov    BYTE PTR [edi-0x31],bl
  4167da:	in     eax,0xe3
  4167dc:	pop    ss
  4167dd:	addr16 push es
  4167df:	dec    esp
  4167e0:	lock inc edx
  4167e2:	xchg   BYTE PTR [edi+ebx*1-0x5a],ah
  4167e6:	ss mov eax,es
  4167e9:	dec    edx
  4167ea:	sub    dl,BYTE PTR [ecx]
  4167ec:	dec    ecx
  4167ed:	sub    DWORD PTR es:[ecx*2+0x5d003047],esi
  4167f5:	int    0x1
  4167f7:	jns    0x416837
  4167f9:	pop    esi
  4167fa:	adc    eax,DWORD PTR [ebx-0x5f2ef5c]
  416800:	(bad)  
  416802:	mov    WORD PTR [eax-0x5e80c88e],cs
  416808:	xchg   esp,eax
  416809:	pop    ebx
  41680a:	pop    ecx
  41680b:	in     al,0x27
  41680d:	lods   eax,DWORD PTR ds:[esi]
  41680e:	xchg   edx,eax
  41680f:	push   es
  416810:	jmp    0xf19:0xe77fe023
  416817:	dec    edi
  416818:	(bad)  
  41681a:	in     eax,dx
  41681b:	jecxz  0x41689c
  41681d:	sar    bh,0xc9
  416820:	pop    ecx
  416821:	mov    ds:0x7d092a65,eax
  416826:	push   esi
  416827:	fadd   DWORD PTR [eax]
  416829:	adc    al,ah
  41682b:	test   eax,0xdef54e71
  416830:	fsub   QWORD PTR [esi+0xa]
  416833:	rcr    DWORD PTR [edi+esi*1-0x5c57cb89],cl
  41683a:	into   
  41683b:	stos   BYTE PTR es:[edi],al
  41683c:	xor    cl,BYTE PTR [ebx]
  41683e:	mov    esp,0xedef22b3
  416843:	outs   dx,DWORD PTR ds:[esi]
  416844:	test   al,0xfd
  416846:	ja     0x416856
  416848:	xchg   esp,eax
  416849:	or     al,0xcc
  41684b:	inc    ebp
  41684c:	sti    
  41684d:	jle    0x416878
  41684f:	gs inc edi
  416851:	es sbb eax,0xc3b37034
  416857:	(bad)  
  416858:	(bad)  
  41685a:	push   ecx
  41685b:	adc    BYTE PTR [ebx+0x5e],0x1c
  41685f:	data16 ror BYTE PTR [ecx+0x64],1
  416863:	(bad)  
  416865:	das    
  416866:	pop    edi
  416867:	sahf   
  416868:	mov    bl,0xc6
  41686a:	int3   
  41686b:	push   esp
  41686c:	nop
  41686d:	loopne 0x4168cf
  41686f:	out    dx,al
  416870:	int3   
  416871:	mov    ecx,0xf2fe3f1d
  416876:	pop    edi
  416877:	inc    edi
  416878:	mov    dl,0x18
  41687a:	mov    eax,0x615f23b0
  41687f:	dec    ebx
  416880:	xchg   ebx,eax
  416881:	bound  ebx,QWORD PTR [edx-0x5a]
  416884:	xlat   BYTE PTR ds:[ebx]
  416885:	jle    0x41686c
  416887:	push   ds
  416888:	not    BYTE PTR [edi-0x2d5318b4]
  41688e:	fidiv  WORD PTR [ebx]
  416890:	cld    
  416891:	ins    DWORD PTR es:[edi],dx
  416892:	iret   
  416893:	call   0xf791:0x67d470ce
  41689a:	adc    al,0xa5
  41689c:	test   DWORD PTR [edx+ebp*1-0x4c],edx
  4168a0:	jl     0x41682b
  4168a2:	js     0x4168f4
  4168a4:	ret    
  4168a5:	shl    DWORD PTR [esi-0x62a25587],0x12
  4168ac:	(bad)  
  4168ad:	and    ch,BYTE PTR [esi]
  4168af:	add    BYTE PTR [ebx-0x70],dh
  4168b2:	and    DWORD PTR [ecx],ebp
  4168b4:	sbb    bl,bh
  4168b6:	shl    DWORD PTR [edi-0x123f3e58],0xc6
  4168bd:	popf   
  4168be:	or     DWORD PTR [edx+0x7459aa9a],edx
  4168c4:	xchg   ebx,eax
  4168c5:	in     eax,0x2e
  4168c7:	dec    edi
  4168c8:	mov    ds:0x3ed41092,al
  4168cd:	cmc    
  4168ce:	jbe    0x41687b
  4168d0:	test   al,0x71
  4168d2:	cmp    BYTE PTR [eax-0x59],bl
  4168d5:	sub    eax,0x85fff462
  4168da:	mov    ch,0x9f
  4168dc:	pop    ds
  4168dd:	jo     0x416943
  4168df:	popa   
  4168e0:	or     DWORD PTR [ebx-0x21b336cb],edx
  4168e6:	inc    BYTE PTR [eax+0x3a]
  4168e9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4168eb:	outs   dx,DWORD PTR ds:[esi]
  4168ec:	fcmovnb st,st(5)
  4168ee:	add    al,0xa2
  4168f0:	cwde   
  4168f1:	(bad)  
  4168f2:	xchg   edi,eax
  4168f3:	sti    
  4168f4:	pop    esi
  4168f5:	dec    esi
  4168f6:	ret    
  4168f7:	ja     0x416952
  4168f9:	sub    al,0x38
  4168fb:	lahf   
  4168fc:	gs call 0xeed347c0
  416902:	push   cs
  416903:	ds test al,0xea
  416906:	ss cmp dl,BYTE PTR cs:[ebx+0x18436c19]
  41690e:	in     al,0x7d
  416910:	inc    edi
  416911:	rol    DWORD PTR [edx-0x75c673d0],1
  416917:	cdq    
  416918:	ret    
  416919:	jnp    0x4168e5
  41691b:	cmp    al,bl
  41691d:	xlat   BYTE PTR ds:[ebx]
  41691e:	dec    ebx
  41691f:	dec    esi
  416920:	xor    cl,BYTE PTR [eax+0x4c]
  416923:	test   al,0xc0
  416925:	rol    BYTE PTR [edx],1
  416927:	dec    ecx
  416928:	js     0x416938
  41692a:	stos   BYTE PTR es:[edi],al
  41692b:	cmp    dh,0xf0
  41692e:	mov    eax,ds:0xb3167326
  416933:	in     eax,dx
  416934:	jmp    0x4d3b6abc
  416939:	xchg   BYTE PTR [eax-0x24],ah
  41693c:	add    al,0x31
  41693e:	or     BYTE PTR [esi],0x67
  416941:	out    dx,al
  416942:	pop    edi
  416943:	enter  0xcbb4,0x12
  416947:	jp     0x4169a3
  416949:	test   al,0x60
  41694b:	int    0x67
  41694d:	xchg   ecx,eax
  41694e:	mov    ds:0x4cd6b080,al
  416953:	int    0xa3
  416955:	ds jne 0x4168ef
  416958:	stc    
  416959:	or     cl,BYTE PTR [eax-0x45]
  41695c:	int3   
  41695d:	leave  
  41695e:	or     al,0xec
  416960:	mov    edi,esi
  416962:	push   esp
  416963:	push   ebp
  416964:	xor    al,BYTE PTR [edi+0x61]
  416967:	stos   BYTE PTR es:[edi],al
  416968:	and    eax,0x7a8f5712
  41696d:	(bad)  
  41696e:	sub    al,ah
  416970:	fcom   QWORD PTR [esi-0x4f]
  416973:	xor    al,dh
  416975:	mov    ebp,0x3e030a96
  41697a:	inc    edi
  41697b:	test   ebp,ebp
  41697d:	repnz push ecx
  41697f:	sub    DWORD PTR [edx],0xf4438b43
  416985:	shl    BYTE PTR [edx-0x5bf3c196],1
  41698b:	add    DWORD PTR [ecx-0x3e734f74],ebp
  416991:	cmp    ah,BYTE PTR [edi+0x5c]
  416994:	mov    ebx,0x3ac657ea
  416999:	jne    0x416a08
  41699b:	repz jl 0x416985
  41699e:	mov    esi,DWORD PTR [edx+edi*8]
  4169a1:	mov    edx,0xcf1209b2
  4169a6:	test   DWORD PTR [ecx-0x1ca754ea],eax
  4169ac:	mov    ebx,DWORD PTR [ecx]
  4169ae:	neg    BYTE PTR [esi+ebx*2]
  4169b1:	xchg   esp,eax
  4169b2:	pop    ecx
  4169b3:	outs   dx,DWORD PTR ds:[esi]
  4169b4:	fnstsw WORD PTR [ecx+0x4a]
  4169b7:	cs aam 0xda
  4169ba:	xor    eax,0x67d440f1
  4169bf:	jne    0x4169c8
  4169c1:	ss push esi
  4169c3:	xchg   esi,eax
  4169c4:	nop
  4169c5:	stc    
  4169c6:	loop   0x4169c8
  4169c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c9:	ss stos DWORD PTR es:[edi],eax
  4169cb:	sar    BYTE PTR [edx-0x523e949b],0xa5
  4169d2:	into   
  4169d3:	into   
  4169d4:	mov    eax,0xc915b2ba
  4169d9:	pop    ebp
  4169da:	pop    edi
  4169dc:	and    al,0xfd
  4169de:	ins    DWORD PTR es:[edi],dx
  4169df:	add    ebx,DWORD PTR [edi]
  4169e1:	xor    cl,BYTE PTR [edx-0x52]
  4169e4:	ins    BYTE PTR es:[edi],dx
  4169e5:	cli    
  4169e6:	mov    ebp,0xdc9993b4
  4169eb:	repnz mov ch,0x55
  4169ee:	add    al,0x87
  4169f0:	cdq    
  4169f1:	sbb    BYTE PTR [eax+0x67],ah
  4169f4:	imul   ebp,DWORD PTR [ebx+0x42],0x5b
  4169f8:	js     0x416a1a
  4169fa:	push   esp
  4169fb:	push   edx
  4169fc:	fisubr WORD PTR ds:0x70dbcb93
  416a02:	or     DWORD PTR [esi+0x3a418f30],0x6d3d8bb7
  416a0c:	xor    DWORD PTR [edi-0x5b8958d6],0xb8116818
  416a16:	jno    0x4169da
  416a18:	mov    ch,0x80
  416a1a:	push   esp
  416a1b:	loopne 0x416a78
  416a1d:	or     al,0x27
  416a1f:	aad    0xc6
  416a21:	xor    eax,0xdb825d6f
  416a26:	or     ebx,DWORD PTR [eax+0x323abdc7]
  416a2c:	lock fistp QWORD PTR [ecx-0x3]
  416a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a31:	rcl    DWORD PTR [ecx],cl
  416a33:	mov    edi,DWORD PTR [edi+0x1a]
  416a36:	sub    BYTE PTR [edi+0x239a4938],al
  416a3c:	push   cs
  416a3d:	data16 test al,0xb4
  416a40:	adc    al,0x3f
  416a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a43:	daa    
  416a44:	les    esp,FWORD PTR [ebx-0x54]
  416a47:	and    BYTE PTR [edx-0xe705ca4],bl
  416a4d:	mov    ds:0xfbcbc389,eax
  416a52:	imul   ebp,DWORD PTR [esi-0x5e54b1f3],0xfffffff6
  416a59:	aam    0x83
  416a5b:	and    DWORD PTR [ecx+ecx*2-0x1b],esi
  416a5f:	mov    esi,?
  416a61:	mov    eax,ds:0x44755989
  416a66:	mov    edi,0xc2007392
  416a6b:	mov    bl,0x1d
  416a6d:	pop    eax
  416a6e:	aas    
  416a6f:	pop    esi
  416a70:	inc    esi
  416a71:	inc    ecx
  416a72:	pop    edx
  416a73:	jmp    0x416a3c
  416a75:	xor    al,0x1f
  416a77:	or     eax,0xb8e77d73
  416a7c:	jb     0x416ae9
  416a7e:	mov    al,ds:0x1ca27e00
  416a83:	pop    edi
  416a84:	push   eax
  416a85:	cmp    BYTE PTR [ebx-0x112ecf63],cl
  416a8b:	xor    ecx,DWORD PTR [edi+0x3f1d6507]
  416a91:	fwait
  416a92:	sti    
  416a93:	and    eax,0xd406ea0b
  416a98:	ds push eax
  416a9a:	pop    esp
  416a9b:	(bad)  
  416a9c:	repnz and BYTE PTR [ecx-0x4958b38a],bh
  416aa3:	jl     0x416a26
  416aa5:	jae    0x416a33
  416aa7:	ret    
  416aa8:	(bad)  
  416aa9:	dec    esp
  416aaa:	push   edx
  416aab:	xlat   BYTE PTR ds:[ebx]
  416aac:	sbb    al,0x6c
  416aae:	cdq    
  416aaf:	arpl   WORD PTR [edi-0x50],di
  416ab2:	cmp    dh,BYTE PTR [ebx+eax*2]
  416ab5:	jle    0x416a70
  416ab7:	retf   0xffaf
  416aba:	adc    eax,0x128745f5
  416abf:	nop
  416ac0:	jle    0x416aa4
  416ac2:	inc    ebp
  416ac3:	jns    0x416ae4
  416ac5:	jle    0x416a5e
  416ac7:	inc    esp
  416ac8:	add    DWORD PTR [edx+0xb],esp
  416acb:	cs pop ebp
  416acd:	jp     0x416a61
  416acf:	and    eax,0xc6206bad
  416ad4:	xor    eax,0xb7a78f10
  416ad9:	dec    cl
  416adb:	jbe    0x416aeb
  416add:	sub    DWORD PTR [edi],eax
  416adf:	lahf   
  416ae0:	ror    DWORD PTR [edi+0x24ea4ca5],1
  416ae6:	loop   0x416a71
  416ae8:	mov    al,0xc0
  416aea:	push   0xd42a34b4
  416aef:	pop    ds
  416af0:	mov    ds:0x31979719,eax
  416af5:	jge    0x416b0c
  416af7:	dec    edx
  416af8:	leave  
  416af9:	or     esp,DWORD PTR [ebp+esi*2+0x26]
  416afd:	pop    ebx
  416afe:	or     dh,BYTE PTR [edx]
  416b00:	add    BYTE PTR [edx-0x19],bl
  416b03:	fsincos 
  416b05:	mov    edx,0x94b1eb60
  416b0a:	xor    BYTE PTR [edx+0x0],0x7b
  416b0e:	les    ecx,FWORD PTR [esi+0x407d84af]
  416b14:	push   bx
  416b16:	inc    ebx
  416b17:	mov    BYTE PTR [esp+edi*1],bh
  416b1a:	cdq    
  416b1b:	xchg   ebx,eax
  416b1c:	mov    dl,0x26
  416b1e:	das    
  416b1f:	out    0xa8,al
  416b21:	cmc    
  416b22:	mov    ecx,0xf8df6626
  416b27:	fstp   TBYTE PTR [ebx+0x36911d9e]
  416b2d:	mov    bh,0xbf
  416b2f:	sub    ebp,ebp
  416b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b32:	iret   
  416b33:	hlt    
  416b34:	sub    dl,dh
  416b36:	pusha  
  416b37:	call   0x3059:0xd6f6bbc2
  416b3e:	jl     0x416ac1
  416b40:	std    
  416b41:	xchg   esi,eax
  416b42:	out    dx,eax
  416b43:	inc    eax
  416b44:	retf   0xa20b
  416b47:	mov    eax,ds:0xb02d528e
  416b4c:	xchg   edx,eax
  416b4d:	addr16 pop esp
  416b4f:	mov    ebp,0xcd632666
  416b54:	cwde   
  416b55:	mov    ebx,0xe129c8b7
  416b5a:	pop    ds
  416b5b:	mov    ebp,0xbd356abc
  416b60:	loope  0x416aff
  416b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b63:	xchg   ebx,eax
  416b64:	ret    
  416b65:	jg     0x416bb7
  416b67:	mov    ecx,0xb0d49778
  416b6c:	out    dx,eax
  416b6d:	add    DWORD PTR [ebp-0x8e5740],eax
  416b73:	jle    0x416b0b
  416b75:	adc    esi,DWORD PTR [eax+ebx*8]
  416b78:	sbb    al,0x9
  416b7a:	jl     0x416bdd
  416b7c:	cmp    al,0x6d
  416b7e:	popa   
  416b7f:	scas   eax,DWORD PTR es:[edi]
  416b80:	push   edx
  416b81:	pop    es
  416b82:	pop    esp
  416b83:	mov    bl,0x81
  416b85:	clc    
  416b86:	push   esp
  416b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b88:	mov    ds:0x98c91cfa,al
  416b8d:	adc    ch,BYTE PTR [edi-0x7091905]
  416b93:	adc    BYTE PTR [esi-0xccf2f3c],bh
  416b99:	rcr    DWORD PTR [edi+0x14884038],0x71
  416ba0:	cmp    al,0xd2
  416ba2:	mov    ah,0xf0
  416ba4:	sbb    eax,0xf6376fc0
  416ba9:	inc    edi
  416baa:	data16 and BYTE PTR [edx-0x5503572b],bl
  416bb1:	outs   dx,DWORD PTR ds:[esi]
  416bb2:	xor    eax,0x60807457
  416bb7:	push   eax
  416bb8:	sbb    bl,BYTE PTR [ebx]
  416bba:	xor    ebx,DWORD PTR [edx-0x4159e9a0]
  416bc0:	xchg   ecx,eax
  416bc1:	mov    al,ds:0x6eda8adb
  416bc6:	inc    ebx
  416bc7:	dec    edi
  416bc8:	mov    ebx,DWORD PTR [eax]
  416bca:	nop
  416bcb:	xchg   ecx,eax
  416bcc:	sub    BYTE PTR [edx],ch
  416bce:	int    0x95
  416bd0:	dec    ebx
  416bd1:	in     al,0x1c
  416bd3:	(bad)  
  416bd5:	lea    edx,[edx-0x1b]
  416bd8:	xor    al,0x14
  416bda:	sbb    eax,0xcf082a2b
  416bdf:	mov    al,0x8d
  416be1:	sub    edx,DWORD PTR [eax-0x25]
  416be4:	mov    ds:0x167c8c44,eax
  416be9:	xor    al,0x50
  416beb:	icebp  
  416bec:	sub    eax,0xded1d2c5
  416bf1:	sbb    BYTE PTR [edx],al
  416bf3:	or     edx,edi
  416bf5:	imul   esp,DWORD PTR [ecx-0x66f07b31],0x2c
  416bfc:	sub    ecx,DWORD PTR [ebx-0x7]
  416bff:	sbb    al,0x0
  416c01:	push   edi
  416c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c03:	enter  0x54d6,0x7b
  416c07:	mov    ah,BYTE PTR [esi+ebp*4+0x59175524]
  416c0e:	cdq    
  416c0f:	fidiv  DWORD PTR [ebp+0x328e07fa]
  416c15:	inc    esp
  416c16:	and    dl,BYTE PTR [edx-0x1ba9fd5c]
  416c1c:	and    DWORD PTR [edi],edi
  416c1e:	in     al,0x35
  416c20:	push   0xffffff94
  416c22:	xchg   edx,eax
  416c23:	mov    ?,WORD PTR ss:[eax-0x28036bc]
  416c2a:	inc    eax
  416c2b:	jmp    0x416bd2
  416c2d:	sub    al,0x68
  416c2f:	shl    BYTE PTR [ebx-0x48],1
  416c32:	or     DWORD PTR [esi+eiz*4+0x436aa2d3],ebp
  416c39:	loope  0x416c54
  416c3b:	outs   dx,BYTE PTR ds:[esi]
  416c3c:	pop    ds
  416c3d:	jb     0x416c0f
  416c3f:	sub    eax,0x63a6bdc0
  416c44:	or     BYTE PTR [edi-0x1c],dh
  416c47:	scas   al,BYTE PTR es:[edi]
  416c48:	fmul   DWORD PTR [eax+ebx*4+0x79a34932]
  416c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c50:	adc    BYTE PTR [esi],0x56
  416c53:	adc    eax,0xb300cb53
  416c58:	lds    esi,FWORD PTR [eax]
  416c5a:	out    dx,al
  416c5b:	xor    eax,0x9348b965
  416c60:	jne    0x416c9c
  416c62:	lds    esi,FWORD PTR [edi-0x73854109]
  416c68:	into   
  416c69:	mov    ah,0xc2
  416c6b:	lock inc ecx
  416c6d:	push   ebp
  416c6e:	xor    BYTE PTR [edi],dl
  416c70:	cwde   
  416c71:	lods   al,BYTE PTR ds:[esi]
  416c72:	push   0xffffff8e
  416c74:	adc    dh,BYTE PTR [ebx+0x42]
  416c77:	and    ecx,esp
  416c79:	sbb    al,0x4a
  416c7b:	mov    ebp,0x61c9cd85
  416c80:	and    esp,edx
  416c82:	cmp    bh,BYTE PTR [esi+0x12]
  416c85:	repnz cmp eax,0x2c3c6ec1
  416c8b:	pop    esi
  416c8c:	ret    0xbd10
  416c8f:	sbb    DWORD PTR [edx],ecx
  416c91:	jmp    0xbd62:0xad23e8f7
  416c98:	sub    al,0x94
  416c9a:	add    ch,BYTE PTR [ecx-0x32e60b46]
  416ca0:	or     al,0xa
  416ca2:	xchg   edi,eax
  416ca3:	xchg   edx,eax
  416ca4:	jle    0x416c55
  416ca6:	jbe    0x416cce
  416ca8:	ja     0x416d0d
  416caa:	stos   DWORD PTR es:[edi],eax
  416cab:	push   esp
  416cac:	fild   DWORD PTR [eax]
  416cae:	call   0xc431:0x140aac98
  416cb5:	sbb    esi,0x7b
  416cb8:	popa   
  416cb9:	mov    dl,0xb4
  416cbb:	jns    0x416d27
  416cbd:	mov    esp,0xe40ac53f
  416cc2:	push   esi
  416cc3:	(bad)  
  416cc4:	cmc    
  416cc5:	xor    DWORD PTR [esi],0xe41f292b
  416ccb:	xchg   ebp,eax
  416ccc:	inc    ecx
  416ccd:	dec    ebp
  416cce:	les    esp,FWORD PTR [edx]
  416cd0:	jae    0x416c6e
  416cd2:	icebp  
  416cd3:	push   ds
  416cd4:	stos   BYTE PTR es:[edi],al
  416cd5:	pushf  
  416cd6:	shl    DWORD PTR [edx-0x25887c5],1
  416cdc:	mov    al,0x7
  416cde:	fwait
  416cdf:	cmp    ebx,eax
  416ce1:	out    dx,al
  416ce2:	adc    eax,0x415dbd4c
  416ce7:	rcl    ch,0xc2
  416cea:	fist   DWORD PTR [ebp-0x67d56342]
  416cf0:	mov    eax,ds:0x1dcb53a7
  416cf5:	inc    ecx
  416cf6:	push   es
  416cf7:	sbb    bh,ch
  416cf9:	and    DWORD PTR [edi-0x6d],edx
  416cfc:	jmp    edx
  416cfe:	mov    ecx,0xb9a750e3
  416d03:	or     edi,DWORD PTR [edx-0x14f27beb]
  416d09:	imul   esi,edx,0x705a6849
  416d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d10:	aas    
  416d11:	cmp    BYTE PTR [edi+eiz*1],dl
  416d14:	push   ebx
  416d15:	add    BYTE PTR [ecx-0x56],dh
  416d18:	fld    DWORD PTR [eax+0x78]
  416d1b:	sub    ch,BYTE PTR [esi]
  416d1d:	pushf  
  416d1e:	fbld   TBYTE PTR [edx]
  416d20:	fs das 
  416d22:	test   edi,ebx
  416d24:	mov    bh,0x92
  416d26:	cmp    dl,BYTE PTR cs:[ebx+0x2983696]
  416d2d:	jle    0x416cfa
  416d2f:	fsub   DWORD PTR [ebx-0x4cbe92c0]
  416d35:	xchg   esi,ebp
  416d37:	jmp    0xee44b50e
  416d3c:	mov    dl,0xfb
  416d3e:	push   edx
  416d3f:	cmp    BYTE PTR [ebp-0x44],0x98
  416d43:	pop    es
  416d44:	jmp    0xd40e:0x80605a47
  416d4b:	fs mov ebx,0x1c7b5ba6
  416d51:	mov    ds:0xca1e8bd8,al
  416d56:	jnp    0x416d74
  416d58:	sub    edx,DWORD PTR [ecx]
  416d5a:	xchg   edi,eax
  416d5b:	int    0x82
  416d5d:	xlat   BYTE PTR ds:[ebx]
  416d5e:	and    DWORD PTR [edi-0x610aecc8],ebp
  416d64:	test   eax,0x63abd276
  416d69:	or     esp,DWORD PTR [ecx+0x7734f7ba]
  416d6f:	pop    esp
  416d70:	in     al,dx
  416d71:	rol    BYTE PTR [edi-0x13c6b03],0x41
  416d78:	pop    es
  416d79:	outs   dx,BYTE PTR ds:[esi]
  416d7a:	fcomi  st,st(2)
  416d7c:	(bad)  
  416d7d:	jecxz  0x416d58
  416d7f:	outs   dx,BYTE PTR ds:[esi]
  416d80:	dec    ebp
  416d81:	or     eax,0x8700c59d
  416d86:	js     0x416d09
  416d88:	sub    BYTE PTR [ecx+0x1c371633],bh
  416d8e:	lds    esi,FWORD PTR [ebx]
  416d90:	rol    ebp,0x2f
  416d93:	jo     0x416db5
  416d95:	scas   eax,DWORD PTR es:[edi]
  416d96:	outs   dx,DWORD PTR ds:[esi]
  416d97:	adc    DWORD PTR [eax],ecx
  416d99:	ins    DWORD PTR es:[edi],dx
  416d9a:	jg     0x416db2
  416d9c:	rcr    DWORD PTR [edx],cl
  416d9e:	sub    BYTE PTR [ecx],bh
  416da0:	dec    ecx
  416da1:	repnz bound edx,QWORD PTR [ebx]
  416da4:	bnd jo 0x416dbf
  416da7:	push   ds
  416da8:	sub    al,0xdb
  416daa:	div    edx
  416dac:	test   al,0xa0
  416dae:	and    DWORD PTR [eax+0x52],esp
  416db1:	rcl    DWORD PTR [ebx+0x177cd512],cl
  416db7:	sbb    BYTE PTR [ecx+0x204afcca],ch
  416dbd:	xor    DWORD PTR [ebx+ecx*1],ebx
  416dc0:	(bad)  
  416dc1:	and    ebx,DWORD PTR [edx]
  416dc3:	leave  
  416dc4:	add    ebp,esp
  416dc6:	pop    ds
  416dc7:	out    0x3e,al
  416dc9:	pop    edx
  416dca:	out    0x2a,al
  416dcc:	add    ebx,edx
  416dce:	int3   
  416dcf:	fidivr WORD PTR [edx]
  416dd1:	nop
  416dd2:	bound  edi,QWORD PTR es:[edi]
  416dd5:	leave  
  416dd6:	ror    BYTE PTR [edi+0x410f1f29],1
  416ddc:	adc    BYTE PTR [ecx],0x3b
  416ddf:	jnp    0x416dd8
  416de1:	pop    ebx
  416de2:	sbb    bh,dl
  416de4:	int    0xe1
  416de6:	sub    esi,esi
  416de8:	(bad)  
  416dea:	sbb    eax,DWORD PTR [edi]
  416dec:	lea    ecx,[edi-0x35]
  416def:	adc    edi,DWORD PTR [edi]
  416df1:	mov    ds:0x6409679d,eax
  416df6:	(bad)
  416dfa:	adc    eax,DWORD PTR [edx-0x19a12f28]
  416e00:	fdiv   st,st(2)
  416e02:	sub    ebp,DWORD PTR [ecx-0x5fa6f12a]
  416e08:	cmp    esi,esp
  416e0a:	stos   DWORD PTR es:[edi],eax
  416e0b:	ret    
  416e0c:	repz jno 0x416e73
  416e0f:	aaa    
  416e10:	daa    
  416e11:	dec    ecx
  416e12:	loope  0x416e87
  416e14:	jns    0x416df1
  416e16:	dec    esp
  416e17:	aad    0x7b
  416e19:	sub    eax,0x48acf4c3
  416e1e:	push   ebx
  416e1f:	jnp    0x416dbf
  416e21:	jae    0x416e31
  416e23:	jecxz  0x416e5d
  416e25:	aaa    
  416e26:	dec    eax
  416e27:	ret    
  416e28:	shr    al,1
  416e2a:	push   ebx
  416e2b:	fwait
  416e2c:	out    dx,eax
  416e2d:	xchg   esp,eax
  416e2e:	adc    dh,BYTE PTR [edx-0x30]
  416e31:	jo     0x416e1b
  416e33:	jns    0x416e4d
  416e35:	inc    esi
  416e36:	xchg   edx,eax
  416e37:	or     esp,DWORD PTR [edi-0x5ac988f4]
  416e3d:	sbb    ecx,DWORD PTR [edx+0x24]
  416e40:	jg     0x416e0a
  416e42:	fisub  WORD PTR [ebp+edi*1+0x4f6f23ba]
  416e49:	and    dl,BYTE PTR [ecx]
  416e4b:	sbb    al,0x17
  416e4d:	iret   
  416e4e:	leave  
  416e4f:	xchg   dl,dl
  416e51:	shl    BYTE PTR [edi+0x3882d119],cl
  416e57:	mov    edx,0xb8b72325
  416e5c:	push   ebp
  416e5d:	cmp    edx,DWORD PTR [edi]
  416e5f:	adc    DWORD PTR [ecx-0x1a52ed65],ecx
  416e65:	aad    0xfa
  416e67:	mov    dh,0x91
  416e69:	sbb    DWORD PTR [esi],0x8b7eeab
  416e6f:	xchg   esp,eax
  416e70:	les    edi,FWORD PTR [edx+0x29]
  416e73:	arpl   di,bp
  416e75:	mov    ebx,esp
  416e77:	sbb    DWORD PTR [ebp+esi*8+0x4],edi
  416e7b:	xchg   edi,eax
  416e7c:	adc    cl,BYTE PTR [ecx-0x7e]
  416e7f:	loopne 0x416ef3
  416e81:	mov    cl,0xf9
  416e83:	lea    eax,[edi+0x6a29defc]
  416e89:	add    DWORD PTR [edi+0x36ad1cf9],esi
  416e8f:	sbb    BYTE PTR [edx-0x49],cl
  416e92:	mov    edi,0xf05a97e0
  416e97:	cmp    al,0x77
  416e99:	std    
  416e9a:	scas   eax,DWORD PTR es:[edi]
  416e9b:	out    0xe3,eax
  416e9d:	mov    ch,0xb7
  416e9f:	ffree  st(4)
  416ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea2:	push   eax
  416ea3:	or     edx,DWORD PTR [ecx]
  416ea5:	mov    esi,0x50f025a3
  416eaa:	icebp  
  416eab:	ror    BYTE PTR [edx-0x4e9aa501],1
  416eb1:	outs   dx,DWORD PTR ds:[esi]
  416eb2:	sti    
  416eb3:	ins    BYTE PTR es:[edi],dx
  416eb4:	fmul   DWORD PTR [edx-0x193f243a]
  416eba:	(bad)  
  416ebb:	aas    
  416ebc:	rcr    ebx,cl
  416ebe:	dec    edx
  416ebf:	imul   eax,DWORD PTR ds:0xb84bfe57,0x77
  416ec6:	out    dx,al
  416ec7:	seta   bl
  416eca:	and    DWORD PTR [ebx],edi
  416ecc:	and    eax,0x473fdeae
  416ed1:	and    al,0x88
  416ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ed4:	xor    dh,ah
  416ed6:	jp     0x416e9e
  416ed8:	addr16 mov dh,0x78
  416edb:	fstp   QWORD PTR [ecx+0x3c704358]
  416ee1:	and    eax,0xbc6aaef7
  416ee6:	jb     0x416e90
  416ee8:	scas   eax,DWORD PTR es:[edi]
  416ee9:	mov    WORD PTR [ebx+0x5d],gs
  416eec:	mov    ch,0xfa
  416eee:	imul   eax,ebp,0x58
  416ef1:	inc    esi
  416ef2:	push   es
  416ef3:	inc    esi
  416ef4:	dec    ebx
  416ef5:	test   al,0x76
  416ef7:	sti    
  416ef8:	ins    BYTE PTR es:[edi],dx
  416ef9:	and    al,0xdb
  416efb:	adc    al,0x12
  416efd:	inc    ebx
  416efe:	dec    esi
  416eff:	xlat   BYTE PTR ds:[ebx]
  416f00:	icebp  
  416f01:	data16 and dl,bh
  416f04:	(bad)  
  416f05:	pop    esi
  416f06:	push   ss
  416f07:	sub    DWORD PTR [edi+0x78fcc885],0xffffff9a
  416f0e:	adc    DWORD PTR [esi],esp
  416f10:	test   BYTE PTR [ecx+0x6e5b4849],bl
  416f16:	fstp   TBYTE PTR [edi-0x2c]
  416f19:	outs   dx,DWORD PTR ds:[esi]
  416f1a:	mov    bh,0xb7
  416f1c:	aaa    
  416f1d:	push   ebp
  416f1e:	jl     0x416ecf
  416f20:	pop    esi
  416f21:	pop    eax
  416f22:	retf   
  416f23:	jp     0x416f7d
  416f25:	loop   0x416f3c
  416f27:	cdq    
  416f28:	pop    ebx
  416f29:	repnz xor eax,0x163d88da
  416f2f:	mov    dl,BYTE PTR [edi-0x26]
  416f32:	mov    edx,0x2264223d
  416f37:	out    dx,al
  416f38:	stc    
  416f39:	mov    ebp,0xd07eee4
  416f3e:	mov    cl,0xa5
  416f40:	dec    eax
  416f41:	push   cs
  416f42:	sbb    DWORD PTR [ecx+0x74],ebp
  416f45:	test   al,0x5c
  416f47:	enterw 0x3964,0xd
  416f4c:	test   eax,0x5c51fd06
  416f51:	out    dx,al
  416f52:	pusha  
  416f53:	out    0x86,eax
  416f55:	mov    ah,0xec
  416f57:	shl    dl,1
  416f59:	xlat   BYTE PTR ds:[ebx]
  416f5a:	ins    DWORD PTR es:[edi],dx
  416f5b:	mov    dl,0x25
  416f5d:	sub    al,0x35
  416f5f:	mov    eax,0x2e52f285
  416f64:	shr    DWORD PTR [edx-0x7d],0xd5
  416f68:	call   0xb2bf:0x5bd11700
  416f6f:	mov    ah,0x8f
  416f71:	loopne 0x416f4c
  416f73:	sbb    ch,BYTE PTR [edx+0x46]
  416f76:	mov    al,0xd0
  416f78:	daa    
  416f79:	mov    dh,0xed
  416f7b:	xlat   BYTE PTR ds:[ebx]
  416f7c:	in     al,0x58
  416f7e:	jne    0x416f09
  416f80:	icebp  
  416f81:	jp     0x416fca
  416f83:	push   ecx
  416f84:	xor    esi,DWORD PTR [edi+0x7f1a6897]
  416f8a:	jmp    0x416f71
  416f8c:	ret    
  416f8d:	sbb    edx,DWORD PTR [eax]
  416f8f:	push   esi
  416f90:	mov    eax,0xeb2336e7
  416f95:	out    0xd4,al
  416f97:	retf   0xc28c
  416f9a:	cmp    ebp,DWORD PTR [eax]
  416f9c:	adc    BYTE PTR [esi-0xd],cl
  416f9f:	sbb    ecx,edi
  416fa1:	mov    ds:0x441c1c43,al
  416fa6:	cmp    ecx,edx
  416fa8:	sti    
  416fa9:	mov    ebx,0x8f2d3df4
  416fae:	call   0xb6a3:0xe0ec67b4
  416fb5:	scas   al,BYTE PTR es:[edi]
  416fb6:	and    BYTE PTR [ebp-0x2d],bl
  416fb9:	sahf   
  416fba:	mov    dh,0xb4
  416fbc:	mov    esi,0x4caeea9c
  416fc1:	adc    BYTE PTR [edi-0x44b8d27c],0xaa
  416fc8:	dec    DWORD PTR [eax-0x72]
  416fcb:	in     eax,0x26
  416fcd:	retf   0x2c4a
  416fd0:	and    eax,0xc0e30498
  416fd5:	aam    0x33
  416fd7:	sti    
  416fd8:	inc    ecx
  416fd9:	mov    WORD PTR [eax+0x8c1b26f],cs
  416fdf:	dec    ebx
  416fe0:	or     dl,cl
  416fe2:	outs   dx,DWORD PTR ds:[esi]
  416fe3:	inc    edi
  416fe4:	(bad)  
  416fe6:	dec    edi
  416fe7:	or     DWORD PTR [ebp+0x51],edi
  416fea:	or     BYTE PTR [ecx+0x7e10255d],0xf
  416ff1:	and    ebp,DWORD PTR [ebp-0x4]
  416ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff5:	stos   BYTE PTR es:[edi],al
  416ff6:	jg     0x417068
  416ff8:	(bad)  
  416ff9:	mov    esi,0x20c0bdf9
  416ffe:	inc    edi
  416fff:	loopne 0x417033
  417001:	push   esp
  417002:	xlat   BYTE PTR ds:[ebx]
  417003:	dec    ebp
  417004:	push   ss
  417005:	popa   
  417006:	stos   BYTE PTR es:[edi],al
  417007:	scas   al,BYTE PTR es:[edi]
  417008:	or     BYTE PTR [ecx-0x158ec9b8],ch
  41700e:	mov    eax,ds:0x6fe0d4a5
  417013:	cmc    
  417014:	mov    bl,0x5f
  417016:	or     edi,DWORD PTR [esi]
  417018:	xor    al,0x8c
  41701a:	mov    ds:0xfe269551,al
  41701f:	stos   DWORD PTR es:[edi],eax
  417020:	sbb    al,0xb0
  417022:	clc    
  417023:	push   edi
  417025:	mov    bl,0x5a
  417027:	xchg   edi,eax
  417028:	fild   WORD PTR [esi]
  41702a:	stos   DWORD PTR es:[edi],eax
  41702b:	sub    BYTE PTR [edx],dh
  41702d:	adc    dh,bl
  41702f:	xlat   BYTE PTR ds:[ebx]
  417030:	scas   eax,DWORD PTR es:[edi]
  417031:	or     BYTE PTR [ebx],ah
  417033:	fdivrp st(4),st
  417035:	adc    al,0xf6
  417037:	cwde   
  417038:	and    ch,BYTE PTR [ecx]
  41703a:	mov    DWORD PTR [ebp+0x33],ebx
  41703d:	or     ebx,eax
  41703f:	fnstcw WORD PTR [ebx-0x64]
  417042:	adc    eax,0x19ea1822
  417047:	jo     0x41704b
  417049:	xor    eax,0x78e206b0
  41704e:	lods   al,BYTE PTR ds:[esi]
  41704f:	sub    dl,al
  417051:	pop    eax
  417052:	cld    
  417053:	jnp    0x417031
  417055:	dec    ebp
  417056:	enter  0x3b13,0xc0
  41705a:	and    al,0xdd
  41705c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41705d:	in     al,dx
  41705e:	pop    ecx
  41705f:	in     eax,0x45
  417061:	test   al,0xfe
  417063:	adc    eax,ecx
  417065:	mov    eax,ds:0x62da6a9c
  41706a:	adc    dl,BYTE PTR [edx+0x3b]
  41706d:	jp     0x4170ee
  41706f:	int3   
  417070:	xchg   ecx,eax
  417071:	outs   dx,DWORD PTR ds:[esi]
  417072:	scas   al,BYTE PTR es:[edi]
  417073:	dec    esp
  417074:	repz cmc 
  417076:	nop
  417077:	in     eax,0x35
  417079:	leave  
  41707a:	js     0x417059
  41707c:	add    al,0x77
  41707e:	jb     0x417070
  417080:	addr16 aaa 
  417082:	outs   dx,DWORD PTR ds:[esi]
  417083:	add    eax,0xfb15bf8f
  417088:	je     0x417029
  41708a:	mov    al,ds:0x31ba5603
  41708f:	fdiv   QWORD PTR [esi]
  417091:	sub    DWORD PTR [esi+0xc],esi
  417094:	or     eax,esi
  417096:	clc    
  417097:	jns    0x41705c
  417099:	push   cs
  41709a:	in     al,0x1d
  41709c:	add    BYTE PTR [edi-0x60df4be4],al
  4170a2:	jno    0x41704b
  4170a4:	adc    BYTE PTR [esi-0x6a],ch
  4170a7:	mov    ch,0xc5
  4170a9:	sub    DWORD PTR [esp+esi*4+0x67728526],edx
  4170b0:	jnp    0x417041
  4170b2:	xor    eax,0xbdf51536
  4170b7:	fisttp QWORD PTR [ebx+0x69]
  4170ba:	and    BYTE PTR [edx],bl
  4170bc:	sbb    ah,0x8b
  4170bf:	aaa    
  4170c0:	push   ebx
  4170c1:	inc    ebx
  4170c2:	push   ebx
  4170c3:	jp     0x4170fd
  4170c5:	and    DWORD PTR [ecx-0x8],esp
  4170c8:	sbb    ebp,DWORD PTR [eax-0x4aea82c6]
  4170ce:	xchg   edi,eax
  4170cf:	inc    esp
  4170d0:	xlat   BYTE PTR ds:[ebx]
  4170d1:	push   ss
  4170d2:	nop
  4170d3:	xchg   ebx,eax
  4170d4:	popa   
  4170d5:	shl    BYTE PTR ds:0xe0e0e6d1,0x87
  4170dc:	jl     0x417104
  4170de:	inc    edx
  4170df:	pop    ebx
  4170e0:	bound  ebp,QWORD PTR [ebp+eax*8+0x67393a18]
  4170e7:	aam    0x4a
  4170e9:	cs xor eax,0x344ab27e
  4170ef:	mov    ah,0x44
  4170f1:	mov    al,ds:0xc64729c9
  4170f6:	sub    BYTE PTR [ebx-0x1a2dcf8],cl
  4170fc:	mov    esp,0x4a8cd012
  417101:	int    0xda
  417103:	aad    0x78
  417105:	lods   al,BYTE PTR ds:[esi]
  417106:	xor    eax,0x4ee44c96
  41710b:	pusha  
  41710c:	frstor [esi]
  41710e:	adc    DWORD PTR fs:[esi],eax
  417111:	adc    al,0xe6
  417113:	in     al,0x19
  417115:	dec    eax
  417116:	mov    eax,DWORD PTR [eax+0x59]
  417119:	push   esp
  41711a:	es pop esp
  41711c:	je     0x4170c0
  41711e:	xchg   al,ah
  417120:	adc    bl,dh
  417122:	cli    
  417123:	icebp  
  417124:	test   DWORD PTR [esi-0x3719bd7c],ebx
  41712a:	mov    cl,0xcb
  41712c:	xchg   edx,eax
  41712d:	sar    DWORD PTR [ecx+0x3172c90e],0x70
  417134:	adc    BYTE PTR [ebx+edi*8-0x2fea00f3],bh
  41713b:	sar    ecx,cl
  41713d:	mov    al,0xe1
  41713f:	jns    0x41711a
  417141:	hlt    
  417142:	aam    0x93
  417144:	mov    ecx,0x318ce7f
  417149:	mov    bl,0x59
  41714b:	dec    eax
  41714c:	jmp    0xfe395d77
  417151:	inc    ecx
  417152:	or     DWORD PTR [edx],0x6c32adb4
  417158:	mov    edi,0xc689ebc9
  41715d:	sub    al,0xa6
  41715f:	dec    eax
  417160:	ror    BYTE PTR [eax+ecx*8+0x67],1
  417164:	jg     0x4170ec
  417166:	xchg   edx,eax
  417167:	dec    eax
  417168:	pop    esi
  417169:	adc    al,0x35
  41716b:	sub    eax,0x121578f2
  417170:	cmp    bl,BYTE PTR fs:[edi+0x5e]
  417174:	out    dx,al
  417175:	jecxz  0x4171ad
  417177:	fwait
  417178:	jmp    0x13ff904d
  41717d:	mov    esp,0xe76a9511
  417182:	fisttp DWORD PTR [ecx+edi*2-0x7d3f5d14]
  417189:	add    eax,0x242211ae
  41718e:	mov    ss,WORD PTR [ebx+0x62dd397f]
  417194:	mov    ds:0x9ca85d3e,eax
  417199:	mov    al,ds:0x5b005f11
  41719e:	push   0x7e
  4171a0:	jge    0x417152
  4171a2:	push   edi
  4171a3:	pop    ds
  4171a4:	jl     0x417209
  4171a6:	cld    
  4171a7:	frstor [ebx-0xd]
  4171aa:	and    eax,DWORD PTR [esi+esi*1]
  4171ad:	aas    
  4171ae:	push   edi
  4171af:	xchg   BYTE PTR [ecx],ah
  4171b1:	nop
  4171b2:	add    ebp,DWORD PTR [ebp-0x37]
  4171b5:	sbb    BYTE PTR [esi-0x6dac94d2],ah
  4171bb:	mov    ch,0x8f
  4171bd:	inc    ebp
  4171be:	(bad)  
  4171bf:	cwde   
  4171c0:	clc    
  4171c1:	dec    eax
  4171c2:	stos   DWORD PTR es:[edi],eax
  4171c3:	rol    BYTE PTR [esi+0x4a],cl
  4171c6:	jns    0x417194
  4171c8:	(bad)  
  4171c9:	std    
  4171ca:	out    0xa5,eax
  4171cc:	dec    esp
  4171cd:	jp     0x4171ff
  4171cf:	jecxz  0x4171dd
  4171d1:	stos   DWORD PTR es:[edi],eax
  4171d2:	retf   0x312c
  4171d5:	lea    ebx,[esi]
  4171d7:	imul   ecx,DWORD PTR [ebx+eax*4+0x4d095c69],0xabf570f5
  4171e2:	(bad)  
  4171e3:	popf   
  4171e4:	js     0x41724f
  4171e6:	(bad)  
  4171e7:	data16 (bad) 
  4171e9:	mov    esi,0x7fd6b543
  4171ee:	or     BYTE PTR [eax],bh
  4171f0:	or     DWORD PTR [ecx],ecx
  4171f2:	pushf  
  4171f3:	neg    cl
  4171f5:	(bad)  
  4171f6:	mov    al,ds:0x88e3a1f
  4171fb:	cmp    eax,0x1a1144e4
  417200:	mov    ah,0x92
  417202:	mov    esi,0x2d3e959d
  417207:	bound  esp,QWORD PTR [ebx+0x57]
  41720a:	mov    edi,0x25ae2aab
  41720f:	push   cs
  417210:	or     dh,ch
  417212:	mov    ah,bh
  417214:	adc    ch,bh
  417216:	mov    al,ds:0x80768f21
  41721b:	push   edi
  41721c:	(bad)  
  41721d:	data16 fabs 
  417220:	sbb    al,0xb4
  417222:	xchg   ecx,eax
  417223:	loop   0x4171c5
  417225:	jge    0x41720b
  417227:	test   DWORD PTR [ecx],esp
  417229:	push   0x3c
  41722b:	pop    ss
  41722c:	test   DWORD PTR ds:0x4f164788,esp
  417232:	xor    eax,0xc20c0b3b
  417237:	pop    eax
  417238:	mov    esp,0xfcac398b
  41723d:	cmp    al,0xe2
  41723f:	cmp    ch,BYTE PTR [ebx]
  417241:	push   ss
  417242:	jnp    0x4172a8
  417244:	call   0xd6f3:0x7129db21
  41724b:	add    edi,DWORD PTR [eax-0x71]
  41724e:	pusha  
  41724f:	and    al,0xa4
  417251:	stos   DWORD PTR es:[edi],eax
  417252:	mov    ds:0x732cf30b,al
  417257:	mov    ds:0x61eaf7e8,al
  41725c:	shl    DWORD PTR [ebx-0x77],0x9d
  417260:	mov    edx,0x6e9d4c44
  417265:	scas   eax,DWORD PTR es:[edi]
  417266:	or     ebp,DWORD PTR [di-0x14]
  41726a:	outs   dx,DWORD PTR ds:[si]
  41726c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41726d:	adc    eax,0xa4ed6104
  417272:	mov    bh,0x91
  417274:	and    al,0xb4
  417276:	xor    eax,0x1bfd460a
  41727b:	je     0x417244
  41727d:	pushf  
  41727e:	mov    ebp,0x4589d754
  417283:	add    dl,0xda
  417286:	mov    eax,cs:0x78556ebe
  41728c:	bound  edi,QWORD PTR [edi]
  41728e:	cmc    
  41728f:	jl     0x4172eb
  417291:	fstp   st(0)
  417293:	les    eax,FWORD PTR [edx]
  417295:	sbb    DWORD PTR [esi],edi
  417297:	lahf   
  417298:	hlt    
  417299:	or     esp,DWORD PTR [edi+ebx*1]
  41729c:	lds    ebx,FWORD PTR [edi+0x1270998d]
  4172a2:	shl    DWORD PTR [eax-0x93cfb9a],0xe2
  4172a9:	jg     0x41731e
  4172ab:	dec    ebp
  4172ac:	xchg   esi,eax
  4172ad:	inc    ebx
  4172ae:	imul   edx,esi,0x3901aa29
  4172b4:	sbb    BYTE PTR [edi-0x7bf718fd],0x7
  4172bb:	(bad)  
  4172bc:	xor    DWORD PTR [esi],ebx
  4172be:	mov    ch,cl
  4172c0:	sbb    eax,0x32f796b
  4172c5:	mov    esp,ebx
  4172c7:	mov    eax,0x5e198b6e
  4172cc:	ins    DWORD PTR es:[edi],dx
  4172cd:	dec    edi
  4172ce:	jbe    0x417257
  4172d0:	arpl   WORD PTR [ebx],di
  4172d2:	repnz sub eax,0xc56f6a72
  4172d8:	jbe    0x417273
  4172da:	xchg   esp,eax
  4172db:	mov    ah,BYTE PTR [edi+0x1b98b83]
  4172e1:	pop    edx
  4172e2:	inc    esp
  4172e3:	xor    al,0x92
  4172e5:	pop    esi
  4172e6:	jl     0x4172b8
  4172e8:	bound  esp,QWORD PTR [ebx-0x3275066f]
  4172ee:	cmp    bl,BYTE PTR [esi+0x52bfa206]
  4172f4:	xor    al,0x16
  4172f6:	dec    edx
  4172f7:	lock repz lds ecx,FWORD PTR [edx]
  4172fb:	jp     0x417318
  4172fd:	sub    BYTE PTR [eax-0x7657b285],bl
  417303:	sub    DWORD PTR [ecx+0x29],ebx
  417306:	mov    edi,0xcf776bec
  41730b:	ds mov ebx,0x97868220
  417311:	and    al,0xfd
  417313:	mov    edi,0xb364a39c
  417318:	jmp    0x417335
  41731a:	add    eax,0xda4577fc
  41731f:	add    eax,DWORD PTR [edi-0x1d63d7d5]
  417325:	pop    esp
  417326:	sbb    bh,BYTE PTR es:[ebp-0x2c73de2d]
  41732d:	mov    ecx,es
  41732f:	(bad)  
  417331:	icebp  
  417332:	stos   DWORD PTR es:[edi],eax
  417333:	(bad)  
  417335:	pop    DWORD PTR [ebx+eax*1+0x3c3c34f5]
  41733c:	sub    al,0xdc
  41733e:	mov    ch,0xde
  417340:	sub    ah,BYTE PTR [ebp-0x16]
  417343:	lods   eax,DWORD PTR ds:[esi]
  417344:	stc    
  417345:	stos   BYTE PTR es:[edi],al
  417346:	ins    BYTE PTR es:[edi],dx
  417347:	add    dh,0x2d
  41734a:	jnp    0x41730e
  41734c:	adc    ecx,DWORD PTR [edi+ebp*1-0x2cb3fa9]
  417353:	(bad)  
  417354:	push   edi
  417355:	sahf   
  417356:	(bad)  
  417359:	xlat   BYTE PTR ds:[ebx]
  41735a:	ret    
  41735b:	cmc    
  41735c:	adc    al,0x58
  41735e:	test   eax,0x7523447b
  417363:	jge    0x417373
  417365:	fwait
  417366:	repnz dec esi
  417368:	ja     0x4173db
  41736a:	xchg   ebx,eax
  41736b:	cmp    DWORD PTR [eax],0x7664a3a8
  417371:	inc    eax
  417372:	cwde   
  417373:	inc    edx
  417374:	jp     0x4173c5
  417376:	mov    ah,0xca
  417378:	stos   BYTE PTR es:[edi],al
  417379:	scas   al,BYTE PTR es:[edi]
  41737a:	cmp    edi,esp
  41737c:	dec    ecx
  41737d:	cmp    bh,dl
  41737f:	repnz mov ch,0x9a
  417382:	push   ecx
  417383:	imul   ecx,DWORD PTR [eax+eax*2+0x44],0xbeb06ee7
  41738b:	adc    eax,0x78d99a99
  417390:	addr16 push cs
  417392:	lock outs dx,DWORD PTR ds:[esi]
  417394:	pop    es
  417395:	mov    DWORD PTR [ebx],esi
  417397:	mov    ebx,DWORD PTR [eax]
  417399:	adc    dl,ch
  41739b:	in     al,dx
  41739c:	ror    DWORD PTR [edx+0x3d30ace8],0x1d
  4173a3:	fisubr WORD PTR [ebp+0x203b2620]
  4173a9:	adc    eax,0xfd0996df
  4173ae:	cmp    eax,0x3f68beb6
  4173b3:	iret   
  4173b4:	adc    ah,BYTE PTR [ebx*8+0x30719e1a]
  4173bb:	cmc    
  4173bc:	sar    BYTE PTR [edi+0x39],cl
  4173bf:	in     al,0xc1
  4173c1:	add    BYTE PTR [esi+0x13],0xbf
  4173c5:	sti    
  4173c6:	mov    cl,bh
  4173c8:	sahf   
  4173c9:	sub    ch,BYTE PTR [ebx+0x3]
  4173cc:	cmp    DWORD PTR [edx-0x23],ecx
  4173cf:	xchg   ebx,eax
  4173d0:	mov    DWORD PTR [esi],edi
  4173d2:	loopne 0x41737a
  4173d4:	fstp   DWORD PTR [ecx+0x67908cbc]
  4173da:	or     ecx,edx
  4173dc:	mov    ecx,0x6855b14f
  4173e1:	mov    gs,WORD PTR fs:[edi]
  4173e4:	mov    es,WORD PTR [ecx]
  4173e6:	or     BYTE PTR [eax],dl
  4173e8:	mov    fs,WORD PTR [esi-0x1f37940e]
  4173ee:	push   cs
  4173ef:	fiadd  WORD PTR [ebx-0x413ae0f0]
  4173f5:	xor    eax,0x5d55551
  4173fa:	pop    ebx
  4173fb:	test   ch,0x21
  4173fe:	pop    ds
  4173ff:	dec    eax
  417400:	or     esp,DWORD PTR [ebx]
  417402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417403:	push   esp
  417404:	adc    ebp,DWORD PTR [ebp+0x6aaa7779]
  41740a:	out    0xc2,eax
  41740c:	push   es
  41740d:	sub    BYTE PTR [ebx-0x5edca743],dl
  417413:	sub    ah,bh
  417415:	ror    DWORD PTR [edi-0xf],cl
  417418:	or     al,0x6c
  41741a:	sbb    edi,DWORD PTR ds:0x6337809c
  417420:	mov    edx,0xb49890d1
  417425:	(bad)  
  417426:	fadd   DWORD PTR [esi]
  417428:	mov    ebx,DWORD PTR [edx-0x3c]
  41742b:	outs   dx,BYTE PTR ds:[esi]
  41742c:	xchg   ebx,eax
  41742d:	pushf  
  41742e:	or     ch,BYTE PTR [edx]
  417430:	(bad)  
  417432:	mov    ebx,0xf2b5a98d
  417437:	dec    esp
  417438:	cld    
  417439:	mov    bl,0xee
  41743b:	pop    eax
  41743c:	fcom   DWORD PTR [ecx+0x3bbc075c]
  417442:	outs   dx,DWORD PTR ds:[esi]
  417443:	or     al,0xb
  417445:	and    dh,ch
  417447:	sbb    dh,BYTE PTR [esi]
  417449:	cli    
  41744a:	or     bl,BYTE PTR [esi+0x4a3319e4]
  417450:	inc    esi
  417451:	push   edi
  417452:	push   0x1e
  417454:	adc    dh,BYTE PTR ds:0x61887b92
  41745a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745b:	add    BYTE PTR [edx+0x41468fe8],bh
  417461:	ret    
  417462:	inc    esi
  417463:	jmp    0xb821c076
  417468:	fmul   QWORD PTR [edi-0x3090876e]
  41746e:	ins    DWORD PTR es:[edi],dx
  41746f:	cmp    DWORD PTR [ebx-0x46],esi
  417472:	inc    esp
  417473:	and    al,0xd8
  417475:	push   edx
  417476:	xchg   ecx,eax
  417477:	mov    ah,0x4
  417479:	in     al,dx
  41747a:	add    BYTE PTR [eax+0x9],cl
  41747d:	(bad)  
  41747e:	int    0x43
  417480:	ins    BYTE PTR es:[edi],dx
  417481:	repnz dec esi
  417483:	pop    ecx
  417484:	jb     0x41747f
  417486:	cmp    dh,BYTE PTR [eax]
  417488:	outs   dx,BYTE PTR ds:[esi]
  417489:	or     DWORD PTR [edx-0x35],ecx
  41748c:	pop    edx
  41748d:	mov    eax,ds:0x1ec24a51
  417492:	jg     0x417476
  417494:	dec    edx
  417495:	xchg   edx,eax
  417496:	sub    esi,ebp
  417498:	std    
  417499:	dec    edx
  41749a:	jle    0x417472
  41749c:	jno    0x417501
  41749e:	pop    esi
  41749f:	xor    al,0x90
  4174a1:	and    BYTE PTR [edx+0x262197c3],dl
  4174a7:	popf   
  4174a8:	push   esi
  4174a9:	jp     0x417488
  4174ab:	xchg   esi,eax
  4174ac:	aam    0x24
  4174ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174af:	(bad)  
  4174b0:	fidivr DWORD PTR [ecx-0x91749ce]
  4174b6:	das    
  4174b7:	cld    
  4174b8:	jae    0x417484
  4174ba:	outs   dx,BYTE PTR ds:[esi]
  4174bb:	out    dx,al
  4174bc:	xor    al,0x2e
  4174be:	mov    ebx,0xd6de81fe
  4174c3:	inc    eax
  4174c4:	jecxz  0x417519
  4174c6:	inc    ebx
  4174c7:	xchg   ebx,eax
  4174c8:	xchg   ecx,eax
  4174c9:	out    0x7,al
  4174cb:	div    DWORD PTR [edi+0x260a7d23]
  4174d1:	cld    
  4174d2:	call   0x6926ebfc
  4174d7:	fdivr  QWORD PTR [ebx-0x5e670495]
  4174dd:	or     al,BYTE PTR [esp+edi*4-0x50]
  4174e1:	pop    esi
  4174e2:	stos   DWORD PTR es:[edi],eax
  4174e3:	scas   eax,DWORD PTR es:[edi]
  4174e4:	dec    edx
  4174e5:	repnz adc DWORD PTR [ebx],0xffffffb8
  4174e9:	es adc edi,eax
  4174ec:	or     BYTE PTR [ebx+0x37],0x2b
  4174f0:	bound  ecx,QWORD PTR [ebx-0x7eb0758f]
  4174f6:	xor    edi,ecx
  4174f8:	dec    edi
  4174f9:	jmp    0x417550
  4174fb:	mov    eax,0xc5339aac
  417500:	mov    eax,DWORD PTR [eax+0x2edb2adb]
  417506:	pop    eax
  417507:	setg   BYTE PTR [eax+0x2b]
  41750b:	push   ss
  41750c:	push   es
  41750d:	adc    bl,0x27
  417510:	fisttp QWORD PTR [ebp+0x4fee356e]
  417516:	(bad)  
  417517:	dec    edi
  417518:	push   0x46
  41751a:	sub    al,bh
  41751c:	push   0x31
  41751e:	dec    edi
  41751f:	dec    ebp
  417520:	cmc    
  417521:	sub    ebx,edi
  417523:	mov    esp,0xc4d8868b
  417528:	clc    
  417529:	adc    BYTE PTR [eax+ecx*4],ch
  41752c:	jmp    0x41750b
  41752e:	pop    esi
  41752f:	(bad)  
  417530:	and    ch,bh
  417532:	mov    ch,0xc
  417534:	mov    bl,0x85
  417536:	sti    
  417537:	inc    esi
  417538:	push   cs
  417539:	inc    ebx
  41753a:	xor    ebp,ebx
  41753c:	test   DWORD PTR [esi],ecx
  41753e:	and    esi,edx
  417540:	retf   
  417541:	push   ecx
  417542:	sub    DWORD PTR [eax],ebx
  417544:	xor    DWORD PTR [ecx],0x906d466c
  41754a:	aas    
  41754b:	mov    DWORD PTR [ecx+0x3a298f36],edi
  417551:	js     0x417545
  417553:	mov    al,0x57
  417555:	sub    DWORD PTR [ebx+0x2ff34154],esp
  41755b:	dec    ebp
  41755c:	add    al,0xfb
  41755e:	push   ss
  41755f:	data16 mov ds:0x4ae9a628,al
  417565:	daa    
  417566:	push   cs
  417567:	add    BYTE PTR [ebx],ah
  417569:	retf   0x2bfb
  41756c:	popa   
  41756d:	ins    BYTE PTR es:[edi],dx
  41756e:	pop    esi
  41756f:	xor    edx,esi
  417571:	loop   0x41755f
  417573:	out    0xe8,al
  417575:	or     al,0xef
  417577:	rcr    ebx,0x47
  41757a:	jmp    0x6d90:0xd685a871
  417581:	in     eax,0x34
  417583:	cs ret 
  417585:	cmp    edi,esi
  417587:	popa   
  417588:	fistp  QWORD PTR [edi]
  41758a:	cmp    eax,0x6c17b120
  41758f:	and    DWORD PTR [esi+0x23],esp
  417592:	xor    esp,ebx
  417594:	scas   eax,DWORD PTR es:[edi]
  417595:	iret   
  417596:	xchg   DWORD PTR [edi+ecx*4],ebp
  417599:	mov    bl,ch
  41759b:	dec    esp
  41759c:	pop    edi
  41759d:	and    BYTE PTR [ecx],cl
  41759f:	repnz sub al,0xdf
  4175a2:	imul   ecx,DWORD PTR [edi-0x2b0c2e76],0xffffff91
  4175a9:	jb     0x4175b8
  4175ab:	xor    al,0x18
  4175ad:	lahf   
  4175ae:	push   0x9f14b5e7
  4175b3:	mov    bh,0xd7
  4175b5:	push   edx
  4175b6:	adc    DWORD PTR [edi-0xf],esi
  4175b9:	xchg   edx,eax
  4175ba:	adc    DWORD PTR [ebx-0x48],edx
  4175bd:	sbb    al,0xca
  4175bf:	mov    ebp,0x3b10604b
  4175c4:	out    0xf7,al
  4175c6:	sub    DWORD PTR [edx-0x3b],ecx
  4175c9:	cmp    eax,0x26283672
  4175ce:	mov    ds:0x1f77c6e5,al
  4175d3:	cmp    BYTE PTR [eax-0x27],dl
  4175d6:	sbb    BYTE PTR ds:0x367c7493,ch
  4175dc:	mov    es,WORD PTR [esi-0x6a94681a]
  4175e2:	xchg   edi,eax
  4175e3:	mov    ebx,0x8c519ad3
  4175e8:	enter  0xf6cb,0x1a
  4175ec:	mov    ebx,0x4b528001
  4175f1:	retf   0xbd52
  4175f4:	jb     0x417581
  4175f6:	adc    ch,BYTE PTR [ebp-0x55]
  4175f9:	js     0x417597
  4175fb:	dec    edx
  4175fc:	gs jns 0x417656
  4175ff:	enter  0x1966,0x6e
  417603:	pop    esi
  417604:	push   0xc37aa42f
  417609:	daa    
  41760a:	push   ecx
  41760b:	or     al,0x2d
  41760d:	lds    eax,FWORD PTR [ebx+0x63]
  417610:	xor    eax,0xba683586
  417615:	mov    ebp,0xe3286aba
  41761a:	adc    al,0xab
  41761c:	xor    edx,ebx
  41761e:	bound  eax,QWORD PTR [ebx+0x9]
  417621:	leave  
  417622:	outs   dx,BYTE PTR ds:[esi]
  417623:	mov    bl,0x28
  417625:	das    
  417626:	idiv   BYTE PTR ds:0x4c0420ba
  41762c:	dec    ebp
  41762d:	jae    0x417675
  41762f:	jo     0x4176a7
  417631:	pop    ss
  417632:	xor    BYTE PTR [eax+0x52],bh
  417635:	jl     0x41761f
  417637:	pop    ds
  417638:	fisttp WORD PTR fs:[ebx+0x4c]
  41763c:	out    dx,eax
  41763d:	mov    edx,0xe532071c
  417642:	or     eax,0x4802b03c
  417647:	xchg   esi,eax
  417648:	ins    BYTE PTR es:[edi],dx
  417649:	push   es
  41764a:	call   0xd17a:0xb47786fb
  417651:	test   eax,0xfac4ad24
  417656:	sbb    edi,DWORD PTR ss:[esi]
  417659:	and    BYTE PTR [edx-0x694c06f3],dh
  41765f:	push   edi
  417660:	mov    bh,0xbd
  417662:	sahf   
  417663:	mov    al,ds:0x87cb5f49
  417668:	fiadd  DWORD PTR [ecx+0x29]
  41766b:	loopne 0x41768a
  41766d:	xor    al,0x24
  41766f:	das    
  417670:	das    
  417671:	out    dx,eax
  417672:	push   ds
  417673:	nop
  417674:	mov    cs,WORD PTR [eax+0x6f2b5052]
  41767a:	enter  0x4bf1,0xcc
  41767e:	ins    BYTE PTR es:[edi],dx
  41767f:	sti    
  417680:	call   0x1947b6e1
  417685:	test   eax,0xf3687a96
  41768a:	popf   
  41768b:	push   edi
  41768c:	fistp  DWORD PTR [ebx]
  41768e:	xlat   BYTE PTR ds:[ebx]
  41768f:	mov    ebp,0x96005272
  417694:	inc    bh
  417696:	xor    DWORD PTR [eax+ecx*8+0x4f],edx
  41769a:	sahf   
  41769b:	inc    eax
  41769c:	in     eax,0x47
  41769e:	fidivr DWORD PTR ds:0x90bf5c0d
  4176a4:	gs jnp 0x4176d7
  4176a7:	inc    esi
  4176a8:	xchg   DWORD PTR [ebx-0x5],esi
  4176ab:	adc    BYTE PTR [edi-0x6a61fb6f],0x10
  4176b2:	sbb    DWORD PTR [eax],ecx
  4176b4:	jmp    0x417668
  4176b6:	jge    0x417666
  4176b8:	arpl   WORD PTR [edx+0x103b6bd2],ax
  4176be:	and    al,0xc4
  4176c0:	fadd   DWORD PTR [edx+0x67]
  4176c3:	jecxz  0x4176cf
  4176c5:	bound  edx,QWORD PTR ds:0xbeade481
  4176cb:	loop   0x4176fb
  4176cd:	repz fdivr st(3),st
  4176d0:	jl     0x417683
  4176d2:	and    ebp,DWORD PTR [eax]
  4176d4:	bound  esi,QWORD PTR [edi+eiz*8-0x6d]
  4176d8:	loopne 0x417707
  4176da:	cld    
  4176db:	dec    eax
  4176dc:	lds    esi,FWORD PTR [esi-0x551321f5]
  4176e2:	mov    dl,0x51
  4176e4:	jp     0x417700
  4176e6:	cli    
  4176e7:	mov    esi,0xc77599cb
  4176ec:	(bad)
  4176ef:	cdq    
  4176f0:	add    al,0xb5
  4176f2:	sar    DWORD PTR [edx+0x7c],0x3a
  4176f6:	nop
  4176f7:	imul   ecx,DWORD PTR [ecx+edi*8],0x9e04c654
  4176fe:	(bad)  
  4176ff:	cmp    BYTE PTR [edi-0x7ec3484f],bh
  417705:	mov    eax,0xb03ebfb9
  41770a:	js     0x417745
  41770c:	adc    DWORD PTR [ecx-0x1069ae18],ebx
  417712:	push   edx
  417713:	cmp    bh,bh
  417715:	push   esp
  417716:	pop    ebp
  417717:	push   cs
  417718:	aaa    
  417719:	mov    ebx,0x63952b8c
  41771e:	(bad)  
  41771f:	push   ss
  417720:	mov    ebx,0x5aad87a4
  417725:	mov    al,0xcb
  417727:	xor    DWORD PTR [edx],edx
  417729:	jmp    0x417794
  41772b:	cmp    eax,DWORD PTR [ebx-0x2f5fe28e]
  417731:	push   ebp
  417732:	sub    BYTE PTR [edi+0x64],dh
  417735:	in     eax,0xa2
  417737:	cdq    
  417738:	inc    ebp
  417739:	test   ch,dh
  41773b:	and    BYTE PTR [eax+0xabecff4],ah
  417741:	bound  ecx,QWORD PTR [ecx]
  417743:	(bad)  
  417745:	into   
  417746:	lahf   
  417747:	or     ah,dl
  417749:	(bad)  
  41774a:	in     al,dx
  41774b:	test   al,0x94
  41774d:	fs (bad) 
  41774f:	mov    ebx,eax
  417751:	outs   dx,BYTE PTR ds:[esi]
  417752:	or     esp,DWORD PTR [ebx-0x32]
  417755:	ja     0x417773
  417757:	lock retw 0xd0bf
  41775c:	rcr    BYTE PTR [ecx+eax*4-0x677d16fc],1
  417763:	jnp    0x417792
  417765:	pop    ds
  417766:	loope  0x417713
  417768:	jge    0x4177e6
  41776a:	fisub  WORD PTR [eax-0x71]
  41776d:	mov    BYTE PTR [eax-0x8],dh
  417770:	xchg   edi,eax
  417771:	sub    BYTE PTR [esi+0x2d41e6e5],dh
  417777:	and    DWORD PTR [ebx-0x4e],esi
  41777a:	lock jnp 0x4177a0
  41777d:	sub    BYTE PTR [ebx-0x34834da5],dl
  417783:	adc    DWORD PTR [edx-0x58],edi
  417786:	iret   
  417787:	xchg   ebp,eax
  417788:	call   FWORD PTR [edx-0x12]
  41778b:	lods   al,BYTE PTR ds:[esi]
  41778c:	mov    esp,0x290b49f8
  417791:	cwde   
  417792:	lods   al,BYTE PTR ds:[esi]
  417793:	mov    al,0x3a
  417795:	or     al,0x60
  417797:	jo     0x417744
  417799:	mov    ?,WORD PTR [eax+0x78e7e66c]
  41779f:	outs   dx,DWORD PTR ds:[esi]
  4177a0:	pushf  
  4177a1:	push   es
  4177a2:	ret    0x6e38
  4177a5:	cmp    al,0xf6
  4177a7:	inc    edx
  4177a8:	icebp  
  4177a9:	xchg   ecx,eax
  4177aa:	jle    0x41774b
  4177ac:	push   0x10
  4177ae:	ds icebp 
  4177b0:	and    DWORD PTR [edx+0x272f282a],esi
  4177b6:	mov    BYTE PTR [esi-0x37],ch
  4177b9:	and    BYTE PTR [edx-0x386f4374],cl
  4177bf:	sbb    al,0xd9
  4177c1:	sar    BYTE PTR [ebx-0x1676a808],0xd2
  4177c8:	out    dx,al
  4177c9:	jne    0x417786
  4177cb:	push   ebp
  4177cc:	jecxz  0x417829
  4177ce:	pop    ecx
  4177cf:	push   ds
  4177d0:	jno    0x4177b7
  4177d2:	mov    al,0xff
  4177d4:	leave  
  4177d5:	imul   BYTE PTR [edx]
  4177d7:	mov    edi,0x6faeadf1
  4177dc:	lock pop eax
  4177de:	xchg   esp,eax
  4177df:	ds dec edi
  4177e1:	add    ah,bh
  4177e3:	imul   esi,DWORD PTR [esi],0x28
  4177e6:	mov    bh,0xda
  4177e8:	and    edi,DWORD PTR [edi+0x24]
  4177eb:	mov    eax,0xa7546d1b
  4177f0:	leave  
  4177f1:	xchg   edi,eax
  4177f2:	fcmovnbe st,st(6)
  4177f4:	adc    ecx,DWORD PTR [edi-0x7268f0b6]
  4177fa:	ss test al,0x26
  4177fd:	ja     0x41779f
  4177ff:	mov    dh,0xdc
  417801:	sbb    ebp,DWORD PTR [eax-0x46b44ea9]
  417807:	dec    edi
  417808:	mov    edx,0x1180b1b5
  41780d:	push   ebx
  41780e:	push   0xffffff9d
  417810:	adc    cl,BYTE PTR [esp+eax*4+0x13]
  417814:	popa   
  417815:	mov    al,0x22
  417817:	adc    ebx,DWORD PTR [edi-0x69]
  41781a:	dec    edi
  41781b:	push   ds
  41781c:	mov    ?,WORD PTR [ebp-0x5b]
  41781f:	clc    
  417820:	bnd call 0x4f5d05bb
  417826:	test   al,0x27
  417828:	fisttp DWORD PTR [ecx+ecx*8-0x312d4dd0]
  41782f:	scas   eax,DWORD PTR es:[edi]
  417830:	pop    ds
  417831:	or     al,0x1b
  417833:	lods   eax,DWORD PTR ds:[esi]
  417834:	xchg   ecx,eax
  417835:	icebp  
  417836:	sti    
  417837:	scas   al,BYTE PTR es:[edi]
  417838:	test   eax,0xe9d841b0
  41783d:	pusha  
  41783e:	(bad)  
  41783f:	adc    al,0x9d
  417841:	and    eax,0x416a4148
  417846:	sar    DWORD PTR [ebx],0x55
  417849:	jb     0x4177de
  41784b:	stos   DWORD PTR es:[edi],eax
  41784c:	fs pop esi
  41784e:	arpl   WORD PTR ds:0x1b3d0f31,ax
  417854:	lds    ecx,FWORD PTR [ebx+ecx*4+0x6d]
  417858:	(bad)  
  417859:	jb     0x417856
  41785b:	adc    dl,BYTE PTR [eax-0x14]
  41785e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785f:	(bad)  
  417861:	ror    BYTE PTR [ecx+edx*4],0x96
  417865:	mov    ecx,edx
  417867:	loopne 0x4178d8
  417869:	popa   
  41786a:	adc    al,0x6d
  41786c:	call   0x77019332
  417871:	stc    
  417872:	into   
  417873:	dec    ecx
  417874:	or     esp,ecx
  417876:	add    dl,BYTE PTR [ecx+ebp*1+0x2b]
  41787a:	xchg   edi,eax
  41787b:	in     eax,0x52
  41787d:	lahf   
  41787e:	outs   dx,DWORD PTR ds:[esi]
  41787f:	pop    ds
  417880:	jbe    0x4178c7
  417882:	iret   
  417883:	mov    esi,ebx
  417885:	mov    eax,0xd46736cc
  41788a:	inc    edi
  41788b:	in     eax,0xd
  41788d:	daa    
  41788e:	rcl    BYTE PTR [esi-0x2fecc161],1
  417894:	xlat   BYTE PTR ds:[ebx]
  417895:	out    0x69,al
  417897:	and    al,0xd7
  417899:	xchg   ebx,eax
  41789a:	xchg   ecx,eax
  41789b:	jecxz  0x4178ae
  41789d:	and    al,0x39
  41789f:	outs   dx,DWORD PTR ds:[esi]
  4178a0:	ja     0x41785c
  4178a2:	arpl   WORD PTR [edx],cx
  4178a4:	fwait
  4178a5:	sbb    DWORD PTR [ecx],edx
  4178a7:	mov    bh,0x65
  4178a9:	inc    ecx
  4178aa:	fnstsw WORD PTR [ebx+0x7b]
  4178ad:	int    0x3b
  4178af:	in     eax,0x80
  4178b1:	pop    ss
  4178b2:	push   es
  4178b3:	loop   0x417897
  4178b5:	in     al,dx
  4178b6:	sub    DWORD PTR [edi+0x2b],esi
  4178b9:	call   0x5711:0x24722e1a
  4178c0:	repz mov bl,0x96
  4178c3:	cmp    al,0xaa
  4178c5:	pushf  
  4178c6:	sbb    ecx,DWORD PTR [edx]
  4178c8:	jecxz  0x4178a6
  4178ca:	and    DWORD PTR [esi+ecx*8-0xe409720],esi
  4178d1:	jnp    0x417879
  4178d3:	jae    0x4178a8
  4178d5:	pop    esi
  4178d6:	sub    BYTE PTR es:[ebx-0x31a89fce],ah
  4178dd:	shl    ch,1
  4178df:	adc    BYTE PTR [ecx-0x4451f256],dh
  4178e5:	ret    0x5a53
  4178e8:	mov    ch,0xfd
  4178ea:	cmp    eax,0x31e69488
  4178ef:	loopne 0x417884
  4178f1:	inc    edx
  4178f2:	test   BYTE PTR [ebx],bl
  4178f4:	sbb    cl,dl
  4178f6:	push   es
  4178f7:	adc    esp,esp
  4178f9:	mov    BYTE PTR [esi],ch
  4178fb:	pop    ss
  4178fc:	adc    bl,0xae
  4178ff:	mov    dl,0x61
  417901:	mov    ?,WORD PTR [esi-0x5d]
  417904:	mov    dl,0x23
  417906:	or     BYTE PTR [eax],0x7
  417909:	clc    
  41790a:	out    0x3e,al
  41790c:	mov    BYTE PTR [ecx-0x4099dd1d],cl
  417912:	adc    eax,0x7bf725a3
  417917:	ret    
  417918:	cmp    al,0x3b
  41791a:	pop    esi
  41791b:	pusha  
  41791c:	jge    0x41793d
  41791e:	cmc    
  41791f:	jecxz  0x41790f
  417921:	inc    esi
  417922:	dec    eax
  417923:	into   
  417924:	sub    edx,DWORD PTR [edx+0x68]
  417927:	stos   DWORD PTR es:[edi],eax
  417928:	cmp    bl,BYTE PTR [esp+ebx*8+0x6223ad42]
  41792f:	dec    ebx
  417930:	cmp    al,0x96
  417932:	data16 sub al,0xea
  417935:	test   DWORD PTR [esi-0x1e],esi
  417938:	mov    ds:0x404e2363,al
  41793d:	xchg   edi,eax
  41793e:	(bad)  
  417941:	push   esi
  417942:	xchg   bh,cl
  417944:	stc    
  417945:	jno    0x4179b0
  417947:	call   0x77d34601
  41794c:	ds mov dh,0xda
  41794f:	fnstenv [edx]
  417951:	sahf   
  417952:	rcr    DWORD PTR ds:[esi-0x23d6a54c],1
  417959:	and    al,0xad
  41795b:	hlt    
  41795c:	mov    BYTE PTR [esp+edx*1-0x48d6d8a],ch
  417963:	xor    edi,DWORD PTR [ecx]
  417965:	and    cl,BYTE PTR [edx+0x10a3b7e0]
  41796b:	(bad)  
  41796c:	lock out 0x91,al
  41796f:	stc    
  417970:	out    0x7d,eax
  417972:	mov    ch,0xf9
  417974:	xchg   ecx,eax
  417975:	jb     0x417962
  417977:	rcl    DWORD PTR [ebx+0x3a],1
  41797a:	int    0x9d
  41797c:	sub    al,BYTE PTR [eax+0x6]
  41797f:	mov    ecx,0x6143fc41
  417984:	jns    0x41795d
  417986:	sub    ax,0x2e71
  41798a:	into   
  41798b:	inc    esp
  41798c:	(bad)  
  41798d:	mov    ds:0xfbff5b06,al
  417992:	scas   al,BYTE PTR es:[edi]
  417993:	test   BYTE PTR [edi],bh
  417995:	lds    edi,FWORD PTR [di]
  417998:	(bad)  [eax]
  41799a:	jbe    0x4179d8
  41799c:	mov    bh,0x48
  41799e:	cld    
  41799f:	mov    DWORD PTR [ebp-0x50ee9cee],0x7dc075a1
  4179a9:	pop    DWORD PTR [ebx-0x36]
  4179ac:	add    al,0x68
  4179ae:	les    esp,FWORD PTR [ecx+0x75]
  4179b1:	aad    0xdb
  4179b3:	push   0xcbbdcb4d
  4179b8:	cmp    eax,0x94a499a3
  4179bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179be:	mov    bh,al
  4179c0:	xchg   ebp,eax
  4179c1:	add    edx,ebx
  4179c3:	repz in al,dx
  4179c5:	adc    DWORD PTR [eax-0x6b],edi
  4179c8:	jge    0x417a06
  4179ca:	and    ebx,edi
  4179cc:	and    BYTE PTR [esi+0x3eb8cd],dl
  4179d2:	test   al,ch
  4179d4:	mov    dh,0x92
  4179d6:	fcom   DWORD PTR [eax-0x6e]
  4179d9:	mov    ds,WORD PTR [edi+eiz*2]
  4179dc:	in     eax,0x5b
  4179de:	je     0x417998
  4179e0:	gs cs dec edx
  4179e3:	xchg   esp,eax
  4179e4:	retf   0xc432
  4179e7:	test   BYTE PTR [ebx-0x41923064],0xa7
  4179ee:	xchg   ebx,eax
  4179ef:	add    BYTE PTR [ebx+0x2fec34ef],dl
  4179f5:	loop   0x417a71
  4179f7:	or     BYTE PTR [ebp-0x684c060c],dh
  4179fd:	jns    0x4179e1
  4179ff:	or     dh,bh
  417a01:	ss xor al,0xc5
  417a05:	fisttp WORD PTR ds:0xbf9e540c
  417a0b:	add    al,0x68
  417a0d:	sbb    eax,0x879160c9
  417a12:	adc    edx,eax
  417a14:	mov    al,ds:0x2f9d50e
  417a19:	cmp    edi,DWORD PTR [esi-0x554cd4d0]
  417a1f:	dec    edx
  417a20:	adc    ebx,eax
  417a22:	push   ebp
  417a23:	sub    eax,edi
  417a25:	push   0xffffffc5
  417a27:	(bad)  [esi]
  417a29:	xchg   esi,eax
  417a2a:	dec    edi
  417a2b:	adc    al,0x6b
  417a2d:	imul   edi,DWORD PTR [ecx+0x5fbb0944],0x6828be18
  417a37:	pop    ebp
  417a38:	mov    ebx,0x616e1151
  417a3d:	sub    ebx,DWORD PTR [esi-0x32]
  417a40:	js     0x417aad
  417a42:	push   edi
  417a43:	aam    0x86
  417a45:	leave  
  417a46:	mov    esp,0x1fd6fa8c
  417a4c:	hlt    
  417a4d:	xchg   edi,eax
  417a4e:	push   0x75
  417a50:	add    DWORD PTR [ebx],0xf98b9f8
  417a56:	into   
  417a57:	adc    al,0xa6
  417a59:	xchg   esp,eax
  417a5a:	nop
  417a5b:	test   al,0x3b
  417a5e:	out    dx,al
  417a5f:	inc    ebx
  417a60:	popa   
  417a61:	test   al,0x9e
  417a63:	or     eax,0xfa0772b9
  417a68:	mov    ebx,ebp
  417a6a:	and    BYTE PTR ds:0x4b31fff3,ah
  417a70:	fdivr  QWORD PTR [ecx+0x37768f0]
  417a76:	xchg   DWORD PTR [ecx],esi
  417a78:	xlat   BYTE PTR ds:[ebx]
  417a79:	and    bl,BYTE PTR [esi-0x660d793]
  417a7f:	pop    ss
  417a80:	dec    edi
  417a81:	dec    ax
  417a83:	in     al,dx
  417a84:	leave  
  417a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a86:	mov    WORD PTR ds:0xc6008148,fs
  417a8c:	ficom  WORD PTR [esi]
  417a8e:	mov    ds:0x3448b4e6,eax
  417a93:	fadd   st,st(3)
  417a95:	add    al,BYTE PTR [edi]
  417a97:	xchg   edi,eax
  417a98:	jmp    0x417a93
  417a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a9b:	(bad)  
  417a9c:	rcl    BYTE PTR [eax-0x1821709b],0xfa
  417aa3:	inc    ecx
  417aa4:	push   ebx
  417aa5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417aa7:	push   ss
  417aa8:	pop    esp
  417aa9:	xchg   ecx,eax
  417aaa:	call   0x9f246444
  417aaf:	push   cs
  417ab0:	aas    
  417ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab2:	mov    eax,0x895fd8d5
  417ab7:	jmp    0xa1e3f5f9
  417abc:	or     BYTE PTR [edx+0x4d10408d],ah
  417ac2:	lahf   
  417ac3:	lock jns 0x417b04
  417ac6:	retf   0xbb6a
  417ac9:	jb     0x417a8e
  417acb:	imul   eax,DWORD PTR [ecx],0x4
  417ace:	adc    BYTE PTR [ebx-0x6a],dh
  417ad1:	retf   
  417ad2:	in     eax,dx
  417ad3:	xor    esp,DWORD PTR [esi+0x22221de1]
  417ad9:	sbb    bl,ch
  417adb:	jne    0x417b21
  417add:	imul   edi,DWORD PTR [ecx],0xb95304ff
  417ae3:	pop    ds
  417ae4:	fld    DWORD PTR [ebp-0x3d]
  417ae7:	xchg   BYTE PTR [eax+0x26619049],cl
  417aed:	mov    ?,esp
  417aef:	fcomp  DWORD PTR [eax]
  417af1:	inc    esp
  417af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af3:	nop
  417af4:	imul   ebp,DWORD PTR cs:[edx+0x6],0x8d2b35c9
  417afc:	dec    ecx
  417afd:	mov    bl,dh
  417aff:	(bad)  
  417b00:	pop    ss
  417b01:	mov    dl,0x30
  417b03:	push   edx
  417b04:	out    dx,al
  417b05:	imul   BYTE PTR [edx+0x27]
  417b08:	out    0xae,eax
  417b0a:	xchg   DWORD PTR [ecx],eax
  417b0c:	mov    WORD PTR [ecx-0x48],ss
  417b0f:	inc    edx
  417b10:	mov    ds:0x25a2d3ca,al
  417b15:	add    eax,0xf6c2b9b6
  417b1a:	inc    eax
  417b1b:	or     esi,DWORD PTR [eax]
  417b1d:	adc    esp,DWORD PTR [ecx+eax*2]
  417b20:	ficomp DWORD PTR [edx-0x5efb1f81]
  417b26:	mov    ch,0x7b
  417b28:	cmp    eax,0xbef440d3
  417b2d:	jp     0x417ac2
  417b2f:	mov    bh,0xd0
  417b31:	xchg   ecx,eax
  417b32:	or     ebx,DWORD PTR [edx-0x4eb6c4fa]
  417b38:	or     eax,0xa5cb889f
  417b3d:	cmp    DWORD PTR ds:0x96da0cc3,edx
  417b43:	clc    
  417b44:	pop    ds
  417b45:	rol    bl,0xa
  417b48:	popa   
  417b49:	xor    DWORD PTR [eax+ebp*8+0xc356336],ebp
  417b50:	push   0x142e70ae
  417b55:	mov    BYTE PTR [ecx+0x2b49f4cd],ah
  417b5b:	cdq    
  417b5c:	shr    BYTE PTR [esi+eiz*8],0x59
  417b60:	or     DWORD PTR [esi-0x4e25ff29],ebx
  417b66:	(bad)  
  417b68:	pop    eax
  417b69:	pop    ss
  417b6a:	out    0x60,eax
  417b6c:	hlt    
  417b6d:	fsub   DWORD PTR [edx-0x27]
  417b70:	das    
  417b71:	adc    ah,BYTE PTR [edi]
  417b73:	inc    ebx
  417b74:	dec    ebp
  417b75:	mov    bl,0x2d
  417b77:	xchg   ecx,eax
  417b78:	mov    edx,DWORD PTR [ebp+0x3c]
  417b7b:	and    al,0xae
  417b7d:	int    0xbc
  417b7f:	mov    ecx,0x2ab9d582
  417b84:	mov    esp,0x673c0e8a
  417b89:	into   
  417b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b8b:	xchg   ecx,eax
  417b8c:	inc    esi
  417b8d:	mov    ah,0x8c
  417b8f:	test   DWORD PTR [ebx+0xb],edx
  417b92:	xchg   ebp,eax
  417b93:	push   0xfffffff0
  417b95:	retf   
  417b96:	mov    ch,0x8e
  417b98:	jne    0x417b62
  417b9a:	mov    esp,0x136d3b48
  417b9f:	out    dx,eax
  417ba0:	test   al,0xa
  417ba2:	je     0x417c04
  417ba4:	pop    ds
  417ba5:	and    BYTE PTR [ebp-0x80bdf45],dh
  417bab:	clc    
  417bac:	xor    esp,esp
  417bae:	mov    bl,0x4
  417bb0:	mov    bh,0x70
  417bb2:	jno    0x417bf5
  417bb4:	cmp    al,bl
  417bb6:	mov    ch,0xab
  417bb8:	nop
  417bb9:	cmp    eax,0xbd5ed0cf
  417bbe:	mov    esp,0xfbc26bf6
  417bc3:	test   eax,0xa99f0e9e
  417bc8:	jl     0x417b9f
  417bca:	cmp    DWORD PTR [ebx],0xc24f20f6
  417bd0:	(bad)  
  417bd1:	xor    ch,BYTE PTR [ebx]
  417bd3:	pop    edi
  417bd4:	cwde   
  417bd5:	aas    
  417bd6:	arpl   bx,si
  417bd8:	pop    esp
  417bd9:	xchg   BYTE PTR [eax+0x78891084],bl
  417bdf:	add    BYTE PTR [ebx],dl
  417be1:	fcom   st(3)
  417be3:	jns    0x417bb2
  417be5:	sub    eax,DWORD PTR [edx+0x1dc2b6fe]
  417beb:	mov    ds:0xdfd39fa7,eax
  417bf0:	inc    esp
  417bf1:	xor    eax,DWORD PTR [edi]
  417bf3:	mov    gs,WORD PTR [ebx+eax*4-0x1f187669]
  417bfa:	enter  0x909b,0xac
  417bfe:	(bad)  
  417c00:	mov    dh,dl
  417c02:	ja     0x417c1b
  417c04:	jo     0x417bf9
  417c06:	push   ecx
  417c07:	jb     0x417be7
  417c09:	test   BYTE PTR [esi+0x7d1a6093],dh
  417c0f:	dec    esp
  417c10:	mov    ch,0xdc
  417c12:	jno    0x417c67
  417c14:	hlt    
  417c15:	dec    eax
  417c16:	xchg   esi,eax
  417c17:	mov    bl,BYTE PTR [ebp-0x5f]
  417c1a:	and    al,0x52
  417c1c:	jg     0x417c4c
  417c1e:	mov    edx,0x46b3ead3
  417c23:	jns    0x417c40
  417c25:	pop    eax
  417c26:	div    BYTE PTR [ebp+0x7e]
  417c29:	adc    al,0xcc
  417c2b:	shl    DWORD PTR [ecx],0x59
  417c2e:	lahf   
  417c2f:	pushf  
  417c30:	adc    ch,BYTE PTR [esp+ecx*1-0x9]
  417c34:	test   al,0x5a
  417c36:	popf   
  417c37:	fild   WORD PTR [ecx+edx*8-0x6f]
  417c3b:	in     eax,dx
  417c3c:	mov    bl,0xa9
  417c3e:	out    dx,al
  417c3f:	cli    
  417c40:	clc    
  417c41:	hlt    
  417c42:	inc    esi
  417c43:	xchg   ebp,eax
  417c44:	jl     0x417c21
  417c46:	pop    es
  417c47:	mov    eax,0xd0723652
  417c4c:	scas   al,BYTE PTR es:[edi]
  417c4d:	jmp    0x417ccd
  417c4f:	jp     0x417c84
  417c51:	cmp    DWORD PTR fs:[edx],0xb8f859be
  417c58:	cmp    al,0xef
  417c5a:	hlt    
  417c5b:	xor    al,0x81
  417c5d:	xchg   edx,eax
  417c5e:	add    al,0x33
  417c60:	push   esp
  417c61:	test   al,0x42
  417c63:	loope  0x417ccd
  417c65:	pop    es
  417c66:	jnp    0x417c65
  417c68:	(bad)  
  417c69:	hlt    
  417c6a:	pop    ebp
  417c6b:	sti    
  417c6c:	sbb    DWORD PTR [eax+edx*4-0x50],0xffffffeb
  417c71:	pop    ebp
  417c72:	push   ebp
  417c73:	and    DWORD PTR [ebx],0xffffff80
  417c76:	ficom  DWORD PTR [ebp-0x22922dd7]
  417c7c:	dec    ebp
  417c7d:	ret    0x129d
  417c80:	int3   
  417c81:	jo     0x417c2e
  417c83:	cld    
  417c84:	cmp    BYTE PTR [ecx+eax*4+0x602df806],cl
  417c8b:	std    
  417c8c:	aad    0xbc
  417c8e:	sub    DWORD PTR [ebx],0xd48f06c0
  417c94:	xor    BYTE PTR [edx-0x3d],ah
  417c97:	adc    DWORD PTR [edx+0x4fa5f133],ebp
  417c9d:	pop    edx
  417c9e:	jp     0x417c68
  417ca0:	(bad)  
  417ca1:	ins    BYTE PTR es:[edi],dx
  417ca2:	jle    0x417cb3
  417ca4:	(bad)  
  417ca6:	out    0xf5,al
  417ca8:	cmc    
  417ca9:	daa    
  417caa:	mov    al,0x7c
  417cac:	retf   
  417cad:	mov    BYTE PTR [esi+edi*4+0x7c],dl
  417cb1:	xor    al,0xf0
  417cb3:	addr16 xchg edi,eax
  417cb5:	jns    0x417ca3
  417cb7:	ret    
  417cb8:	scas   eax,DWORD PTR es:[edi]
  417cb9:	test   al,0x30
  417cbb:	inc    eax
  417cbc:	push   DWORD PTR [ebx-0x21]
  417cbf:	xchg   BYTE PTR [ebp+0x2e],dh
  417cc2:	mov    cl,0x64
  417cc4:	dec    esp
  417cc5:	inc    ebp
  417cc6:	fistp  DWORD PTR ds:0x1c09144b
  417ccc:	inc    esi
  417ccd:	xor    eax,0xd660f5bd
  417cd2:	aad    0x10
  417cd4:	dec    ecx
  417cd5:	fs push ebp
  417cd7:	mov    esi,DWORD PTR [eax+0x71]
  417cda:	iret   
  417cdb:	jnp    0x417cf1
  417cdd:	jns    0x417ca9
  417cdf:	or     eax,0xbb16f4ef
  417ce4:	and    al,0xda
  417ce6:	mov    bl,0x50
  417ce8:	push   cs
  417ce9:	adc    dl,al
  417ceb:	je     0x417cf3
  417ced:	sbb    al,0x20
  417cef:	jne    0x417d42
  417cf1:	jle    0x417c9a
  417cf3:	imul   edx,DWORD PTR [bp+si]
  417cf7:	int    0xe3
  417cf9:	fs loopne 0x417cf8
  417cfc:	mov    eax,ds:0x78338a49
  417d01:	out    0xd0,eax
  417d03:	push   0xb833d894
  417d08:	aaa    
  417d09:	mov    dl,BYTE PTR [esi-0x7b]
  417d0c:	mov    BYTE PTR [ebx],bl
  417d0e:	pop    ebp
  417d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d10:	mov    esp,0xfbc5c386
  417d15:	retf   
  417d16:	outs   dx,BYTE PTR ds:[esi]
  417d17:	es jmp 0x7c90ce01
  417d1d:	stos   BYTE PTR es:[edi],al
  417d1e:	push   eax
  417d1f:	mov    ds:0x7549e67a,al
  417d24:	xrelease xchg DWORD PTR [edx-0x188b1e55],esi
  417d2b:	ins    DWORD PTR es:[edi],dx
  417d2c:	mov    cl,0x78
  417d2e:	mov    ?,WORD PTR [edx-0x70]
  417d31:	push   ss
  417d32:	pushf  
  417d33:	push   ds
  417d34:	ins    DWORD PTR es:[edi],dx
  417d35:	sahf   
  417d36:	cmc    
  417d37:	pop    ds
  417d38:	pushf  
  417d39:	jl     0x417cc5
  417d3b:	jo     0x417d7e
  417d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d3e:	aas    
  417d3f:	inc    ebx
  417d40:	fadd   QWORD PTR [edx+ecx*8-0x3f4852bb]
  417d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d48:	adc    eax,0xe1f71a10
  417d4d:	jne    0x417d64
  417d4f:	packsswb mm6,QWORD PTR [esi+0x5de0a56c]
  417d56:	sbb    dh,al
  417d58:	mov    eax,ds:0x9e735b59
  417d5d:	pop    ds
  417d5e:	jbe    0x417cfd
  417d60:	inc    esi
  417d61:	cmp    BYTE PTR [edi],ch
  417d63:	das    
  417d64:	dec    ecx
  417d65:	adc    BYTE PTR [edi+edx*8-0x783f3c65],ah
  417d6c:	sbb    DWORD PTR [eax-0x21d331a3],esi
  417d72:	push   es
  417d73:	rol    ah,1
  417d75:	or     eax,eax
  417d77:	inc    edx
  417d78:	push   ds
  417d79:	(bad)  
  417d7a:	cld    
  417d7b:	outs   dx,DWORD PTR ds:[esi]
  417d7c:	pusha  
  417d7d:	jno    0x417dfd
  417d7f:	xchg   esp,eax
  417d80:	cmp    al,0xf2
  417d82:	dec    eax
  417d83:	or     al,0x0
  417d85:	fcom   DWORD PTR ds:0x548e7cc9
  417d8b:	ret    0xd004
  417d8e:	push   eax
  417d8f:	iret   
  417d90:	mov    al,0xc0
  417d92:	or     eax,0x9f961859
  417d97:	cmp    ebp,DWORD PTR [ebx-0x7d4ba9cc]
  417d9d:	ss dec ecx
  417d9f:	in     eax,0x6f
  417da1:	sbb    DWORD PTR [edi-0x4706e52a],0x5325e61c
  417dab:	jg     0x417e09
  417dad:	fst    DWORD PTR ds:0x71b952e2
  417db3:	jnp    0x417de1
  417db5:	and    eax,DWORD PTR [esi-0x9af2e96]
  417dbb:	int3   
  417dbc:	pop    esi
  417dbd:	mov    ebx,0x2664c95c
  417dc2:	pusha  
  417dc3:	xchg   ebx,eax
  417dc4:	fwait
  417dc5:	popf   
  417dc6:	jo     0x417dc4
  417dc8:	push   ebx
  417dc9:	add    dh,BYTE PTR [esp+edi*2+0x6086e5ef]
  417dd0:	pop    edx
  417dd1:	pop    es
  417dd2:	cwde   
  417dd3:	adc    eax,0xa3043e76
  417dd8:	push   ebp
  417dd9:	cdq    
  417dda:	enter  0x455c,0x33
  417dde:	mov    ecx,0xc80c029c
  417de3:	mov    edi,0xa877d13d
  417de8:	scas   eax,DWORD PTR es:[edi]
  417de9:	jo     0x417e5d
  417deb:	sbb    ch,BYTE PTR [eax]
  417ded:	sbb    eax,0xbdee0613
  417df2:	jl     0x417ddb
  417df4:	loope  0x417e55
  417df6:	mov    esp,DWORD PTR [ebp-0x1d]
  417df9:	inc    ebx
  417dfa:	pop    esi
  417dfb:	addr16 xchg ebx,eax
  417dfd:	and    eax,esi
  417dff:	xor    cl,cl
  417e01:	dec    esi
  417e02:	imul   esi,ebp,0x2d
  417e05:	jp     0x417e08
  417e07:	sub    bh,cl
  417e09:	dec    edi
  417e0b:	mov    dh,0x58
  417e0d:	call   0xc8a6:0xa8fe8cdd
  417e14:	push   edx
  417e15:	retf   
  417e16:	xchg   edx,eax
  417e17:	(bad)  
  417e18:	mov    WORD PTR [ecx+0x4e7e87a6],?
  417e1e:	sbb    cl,BYTE PTR [edi+ecx*1+0x307c8f3]
  417e25:	sbb    eax,ebx
  417e27:	sar    DWORD PTR [ebp+edx*1+0xd],0x66
  417e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2d:	cmp    esi,DWORD PTR [esi]
  417e2f:	and    DWORD PTR ds:0x12fc7825,ebp
  417e35:	(bad)  
  417e36:	repnz call 0xec49:0x63c1959e
  417e3e:	jae    0x417e18
  417e40:	adc    BYTE PTR [edx+ebx*8],al
  417e43:	mul    DWORD PTR [esi]
  417e45:	pusha  
  417e46:	jp     0x417eb1
  417e48:	ins    BYTE PTR es:[edi],dx
  417e49:	cld    
  417e4a:	js     0x417e79
  417e4c:	xchg   sp,ax
  417e4e:	add    al,0xfa
  417e50:	in     al,dx
  417e51:	adc    ah,dh
  417e53:	sub    esp,DWORD PTR [bp-0x9]
  417e57:	sbb    ecx,DWORD PTR [esi-0x4103e6f3]
  417e5d:	aas    
  417e5e:	retf   0xf984
  417e61:	ret    
  417e62:	ss jno 0x417e63
  417e65:	cmp    ch,BYTE PTR [eax]
  417e67:	jnp    0x417eb2
  417e69:	sbb    al,0x83
  417e6b:	mov    ebp,0x91c15e98
  417e70:	adc    cl,BYTE PTR [edx]
  417e72:	cmp    esi,edi
  417e74:	inc    ebp
  417e75:	pop    ss
  417e76:	push   ss
  417e77:	dec    edi
  417e78:	push   esi
  417e79:	enter  0xd7af,0x39
  417e7d:	sbb    DWORD PTR [edi+0x47a12a88],0x68d41299
  417e87:	jl     0x417e30
  417e89:	cmp    al,0x24
  417e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e8c:	outs   dx,BYTE PTR ds:[esi]
  417e8d:	mov    al,0xd2
  417e8f:	cmc    
  417e90:	js     0x417e2f
  417e92:	cld    
  417e93:	dec    edx
  417e94:	lahf   
  417e95:	dec    BYTE PTR [edi+0x56]
  417e98:	dec    ebx
  417e99:	or     BYTE PTR [esi-0x9bc9235],bh
  417e9f:	mov    ds:0xa41fb6f8,al
  417ea4:	(bad)  
  417ea5:	pop    edx
  417ea6:	mov    cs,WORD PTR [ebx-0xaa72ad4]
  417eac:	addr16 pop edi
  417eae:	xchg   edx,eax
  417eaf:	dec    esi
  417eb0:	push   ecx
  417eb1:	repz arpl di,di
  417eb4:	cmp    al,0xb3
  417eb6:	pop    ecx
  417eb7:	dec    ecx
  417eb8:	and    al,0x11
  417eba:	push   fs
  417ebc:	ja     0x417ed0
  417ebe:	adc    eax,0x2444913b
  417ec3:	and    BYTE PTR [esi],bl
  417ec5:	adc    BYTE PTR ds:[esi],bl
  417ec8:	xlat   BYTE PTR ds:[ebx]
  417ec9:	ins    BYTE PTR es:[edi],dx
  417eca:	adc    al,BYTE PTR [edi-0x57]
  417ecd:	xchg   edx,eax
  417ece:	fstp   DWORD PTR ds:[eax]
  417ed1:	ds pop ds
  417ed3:	outs   dx,DWORD PTR ds:[esi]
  417ed4:	jge    0x417e77
  417ed6:	mov    BYTE PTR [esi],al
  417ed8:	out    dx,eax
  417ed9:	mov    ss,WORD PTR [edx-0x52]
  417edc:	pushf  
  417edd:	pop    esp
  417ede:	add    ah,bl
  417ee0:	mov    ecx,0xbe0a7c17
  417ee5:	(bad)  
  417ee6:	pop    ebp
  417ee7:	pop    es
  417ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ee9:	fs cwde 
  417eeb:	jo     0x417f2a
  417eed:	and    al,BYTE PTR [ebx+edx*1+0x23e8e34a]
  417ef4:	mul    BYTE PTR [ebp-0x7a]
  417ef7:	lods   al,BYTE PTR ds:[esi]
  417ef8:	lods   eax,DWORD PTR ds:[esi]
  417ef9:	cmp    ecx,DWORD PTR [ecx-0xe]
  417efc:	cmp    dl,BYTE PTR [edx]
  417efe:	das    
  417eff:	adc    edx,ebp
  417f01:	xlat   BYTE PTR ds:[ebx]
  417f02:	pop    eax
  417f03:	les    ebx,FWORD PTR [ecx+0x4bcade38]
  417f09:	sbb    DWORD PTR [ecx-0x25599fdb],esp
  417f0f:	test   eax,0x45e9bddb
  417f14:	xor    eax,0x1d4cbfbb
  417f19:	hlt    
  417f1a:	xchg   esp,eax
  417f1b:	jg     0x59a7f30e
  417f21:	mov    esi,0xc389bb4c
  417f26:	lods   al,BYTE PTR ds:[esi]
  417f27:	fist   DWORD PTR [ebx+0x2b]
  417f2a:	lock fiadd DWORD PTR [eax+0x64]
  417f2e:	fwait
  417f2f:	lock ret 
  417f31:	leave  
  417f32:	jl     0x417f3f
  417f34:	add    al,0xc1
  417f36:	stos   BYTE PTR es:[edi],al
  417f37:	sbb    DWORD PTR [ebx+0xb148b4],edi
  417f3d:	xlat   BYTE PTR ds:[ebx]
  417f3e:	dec    ecx
  417f3f:	pop    esp
  417f40:	cdq    
  417f41:	jg     0x417fa2
  417f43:	cmp    BYTE PTR [edx-0x3178d454],ah
  417f49:	push   eax
  417f4a:	mov    cl,0x65
  417f4c:	mov    ah,0xb8
  417f4e:	div    DWORD PTR [edx]
  417f50:	and    bl,BYTE PTR [edx+0x63]
  417f53:	call   0x1356853f
  417f58:	sub    BYTE PTR [ecx],0x9c
  417f5b:	jmp    0x417f26
  417f5d:	cld    
  417f5e:	ja     0x417fcf
  417f60:	jg     0x417fd7
  417f62:	imul   ecx,DWORD PTR [ebx],0xc5b7f667
  417f68:	mov    ebx,DWORD PTR [edi+ebx*1-0x42e2419]
  417f6f:	inc    edi
  417f70:	out    0xee,al
  417f72:	push   esp
  417f73:	xor    DWORD PTR [ebx+0x61a1e3ae],0x728d2f84
  417f7d:	ds std 
  417f7f:	bound  ebx,QWORD PTR [edi]
  417f81:	mov    ?,edi
  417f83:	mov    ebx,0xca13b9dd
  417f88:	cmp    BYTE PTR [edi],ah
  417f8a:	adc    eax,0x52e4a55d
  417f8f:	dec    edx
  417f90:	enter  0x6122,0x2a
  417f94:	dec    esp
  417f95:	sbb    al,0xf8
  417f97:	mov    bh,0x24
  417f99:	push   0x23
  417f9b:	ds sub esp,ebx
  417f9e:	cmp    BYTE PTR [eax-0x76fc31a7],al
  417fa4:	inc    ebx
  417fa5:	js     0x417fb2
  417fa7:	rcl    BYTE PTR [esi-0x3d0f0478],0xda
  417fae:	cli    
  417faf:	push   ebx
  417fb0:	repnz xchg esi,eax
  417fb2:	sub    al,0x79
  417fb4:	outs   dx,DWORD PTR ds:[esi]
  417fb5:	les    eax,FWORD PTR [eax]
  417fb7:	addr16 push 0x742842d1
  417fbd:	lea    esi,[ebx]
  417fbf:	push   cs
  417fc0:	(bad)  
  417fc1:	aam    0xa8
  417fc3:	(bad)  
  417fc4:	dec    edx
  417fc5:	push   es
  417fc6:	push   ds
  417fc7:	jnp    0x417f9a
  417fc9:	adc    al,0xaa
  417fcb:	fiadd  WORD PTR [edi+ebx*2]
  417fce:	cmp    esp,ecx
  417fd0:	pop    edx
  417fd1:	and    BYTE PTR [esi],ch
  417fd3:	cli    
  417fd4:	push   0x60
  417fd6:	mov    edi,0x8d8e6da
  417fdb:	push   ss
  417fdc:	(bad)  
  417fdd:	jae    0x41805a
  417fdf:	jno    0x417ffb
  417fe1:	dec    edx
  417fe2:	sub    BYTE PTR [esi+ebp*8-0xbc86e54],dh
  417fe9:	icebp  
  417fea:	push   0x4f
  417fec:	idiv   DWORD PTR [edi]
  417fee:	in     eax,dx
  417fef:	mov    edx,0x6e15414c
  417ff4:	mov    al,ds:0xb24ad6e
  417ff9:	imul   eax,esi,0x1b
  417ffc:	mov    BYTE PTR [ecx-0x54],dh
  417fff:	lods   eax,DWORD PTR ds:[esi]
  418000:	sbb    eax,0xe15c5ea1
  418005:	imul   esi,DWORD PTR [esi-0x1a],0xffffff8c
  418009:	inc    esp
  41800a:	daa    
  41800b:	xchg   edx,eax
  41800c:	aad    0x38
  41800e:	and    al,bh
  418010:	out    dx,eax
  418011:	fisubr WORD PTR [ebx]
  418013:	jp     0x41807d
  418015:	mov    edi,0xa2491b91
  41801a:	xchg   edx,eax
  41801b:	(bad)  
  41801c:	cdq    
  41801d:	and    esi,DWORD PTR [eax+0x27e0f064]
  418023:	or     eax,0x3c2eab6a
  418028:	mov    dl,0x91
  41802a:	sbb    al,BYTE PTR [edx-0x7f59e4c8]
  418030:	cwde   
  418031:	or     al,0xe8
  418033:	rcl    BYTE PTR [esi+0x46],1
  418036:	dec    ebp
  418037:	mov    ecx,0xa9e23b03
  41803c:	repnz pop edx
  41803e:	iret   
  41803f:	jns    0x418026
  418041:	icebp  
  418042:	xlat   BYTE PTR ds:[ebx]
  418043:	rcl    DWORD PTR [eax-0x4c],0xc9
  418047:	icebp  
  418048:	lds    ebx,FWORD PTR [edx-0x2]
  41804b:	ss cs push cs
  41804e:	out    0xb2,eax
  418050:	loop   0x4180c2
  418052:	sahf   
  418053:	(bad)  
  418054:	sbb    ebx,DWORD PTR [esi+0x4]
  418057:	div    BYTE PTR [edx]
  418059:	add    bl,BYTE PTR [eax+0x24130234]
  41805f:	or     al,0x2
  418061:	dec    ebp
  418062:	aas    
  418063:	sti    
  418064:	push   esp
  418065:	xor    edx,DWORD PTR [edi+0x237958d4]
  41806b:	ins    BYTE PTR es:[edi],dx
  41806c:	loop   0x41804b
  41806e:	mov    WORD PTR [eax-0x14],gs
  418071:	add    eax,0x72b9af60
  418076:	and    DWORD PTR [eax],ecx
  418078:	jno    0x4180d5
  41807a:	pop    eax
  41807b:	xor    bl,BYTE PTR [esi+0x5a]
  41807e:	aas    
  41807f:	loop   0x418015
  418081:	add    ah,al
  418083:	pushf  
  418084:	push   es
  418085:	out    0xb2,eax
  418087:	imul   ebx,DWORD PTR [esi-0x5be8f0eb],0x4050863a
  418091:	cmp    eax,0x106a7868
  418096:	mov    ecx,0xdb85abb3
  41809b:	popf   
  41809c:	mov    edx,0xad1c2b6
  4180a1:	fldenv [edi]
  4180a3:	jnp    0x4180ea
  4180a5:	addr16 in eax,0x69
  4180a8:	jno    0x418071
  4180aa:	cmc    
  4180ab:	fs and al,0x85
  4180ae:	iret   
  4180af:	adc    BYTE PTR [esi],bh
  4180b1:	dec    esp
  4180b2:	sbb    eax,0xc5448bfd
  4180b7:	sub    al,0xdd
  4180b9:	js     0x41809d
  4180bb:	or     dh,0x8f
  4180be:	call   0xe5d3932e
  4180c3:	rcr    DWORD PTR [esi],cl
  4180c5:	dec    ecx
  4180c6:	add    eax,0x4d4733f
  4180cb:	jle    0x418085
  4180cd:	xchg   esi,eax
  4180ce:	jmp    0x2c18:0x8e1b1298
  4180d5:	jge    0x41807f
  4180d7:	push   esi
  4180d8:	push   ebx
  4180d9:	inc    eax
  4180da:	xchg   ebx,eax
  4180db:	fisttp WORD PTR [ecx]
  4180dd:	shl    DWORD PTR [esi+0x4e5e3973],cl
  4180e3:	xchg   DWORD PTR [ecx],esi
  4180e5:	test   BYTE PTR [edx-0x27],bh
  4180e8:	cs jle 0x41815d
  4180eb:	mov    ah,0x2
  4180ed:	(bad)  [ecx+0x2c]
  4180f0:	imul   DWORD PTR cs:[edi+0x5f]
  4180f4:	imul   eax,edx,0xe4b3128f
  4180fa:	icebp  
  4180fb:	adc    BYTE PTR [ebp+0x380b3c60],bh
  418101:	and    edx,DWORD PTR [ecx-0x4c11b701]
  418107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418108:	jo     0x41816c
  41810a:	mov    BYTE PTR [edi+eax*8+0x4351543f],cl
  418111:	lea    esi,[edx+edx*2-0x776f9cbd]
  418118:	out    0x26,eax
  41811a:	not    DWORD PTR ds:0x7369f217
  418120:	xchg   ecx,eax
  418121:	daa    
  418122:	add    al,BYTE PTR [ebx-0x7c]
  418125:	push   ebp
  418126:	(bad)
  418129:	xor    DWORD PTR [ecx],ebp
  41812b:	shl    DWORD PTR [ebx+eax*4],1
  41812e:	mov    ds:0x581b67ae,al
  418133:	shl    DWORD PTR [ecx-0x230d8f8a],0x3a
  41813a:	ja     0x418101
  41813c:	out    0x61,al
  41813e:	xchg   edi,eax
  41813f:	push   ss
  418140:	inc    eax
  418141:	mov    esp,esp
  418143:	cs inc eax
  418145:	popa   
  418146:	enter  0x577e,0x33
  41814a:	imul   esi,edx,0xa019337b
  418150:	and    ch,BYTE PTR [esi]
  418152:	mov    DWORD PTR [edi-0x4f131562],edi
  418158:	pop    ss
  418159:	call   0xe425:0xf4c9f3d6
  418160:	push   ebp
  418161:	mov    ebx,0x8e12f1d
  418166:	adc    al,dh
  418168:	hlt    
  418169:	out    0x83,eax
  41816b:	dec    esp
  41816c:	mov    bh,bh
  41816e:	in     eax,dx
  41816f:	shl    DWORD PTR [eax-0x60be5107],0x32
  418176:	addr16 push ebp
  418178:	add    edx,edi
  41817a:	sub    eax,0xda63122b
  41817f:	pop    esi
  418180:	pop    edi
  418181:	inc    ecx
  418182:	push   esi
  418183:	pop    ebx
  418184:	mov    al,al
  418186:	sbb    DWORD PTR [ebx+0x7d9f7a8d],ecx
  41818c:	or     eax,0x20ca304f
  418191:	or     DWORD PTR [eax],ebx
  418193:	pop    ds
  418194:	jbe    0x418137
  418196:	enter  0x789a,0x68
  41819a:	sbb    eax,0xe6fa67a6
  41819f:	dec    ebp
  4181a0:	in     eax,0x5d
  4181a2:	retf   0x8bdb
  4181a5:	pop    eax
  4181a6:	add    al,0x90
  4181a8:	scas   al,BYTE PTR es:[edi]
  4181a9:	cdq    
  4181aa:	mov    bh,0x62
  4181ac:	fwait
  4181ad:	in     eax,0xd0
  4181af:	das    
  4181b0:	bound  esi,QWORD PTR [eax+0x64]
  4181b3:	popa   
  4181b4:	cmp    DWORD PTR [edx],0xffffffd9
  4181b7:	xchg   BYTE PTR [ebp+0x60],ah
  4181ba:	(bad)  
  4181bb:	push   eax
  4181bc:	add    dl,BYTE PTR [edi]
  4181be:	stc    
  4181bf:	adc    BYTE PTR [ecx],0x79
  4181c2:	clc    
  4181c3:	outs   dx,BYTE PTR ds:[esi]
  4181c4:	enter  0x5646,0x25
  4181c8:	sahf   
  4181c9:	fcomip st,st(3)
  4181cb:	test   BYTE PTR [ecx-0x69159490],ch
  4181d1:	xchg   DWORD PTR [esi],ebp
  4181d3:	jb     0x418186
  4181d5:	clc    
  4181d6:	(bad)  
  4181d7:	cmp    cl,BYTE PTR ds:0x482f6e91
  4181dd:	sbb    BYTE PTR [ebp+edx*2-0x748974c8],bl
  4181e4:	mov    edi,0xca73b89e
  4181e9:	jnp    0x4181c7
  4181eb:	outs   dx,DWORD PTR ds:[esi]
  4181ec:	add    ch,ch
  4181ee:	sbb    bl,cl
  4181f0:	jmp    0x55e5cbd1
  4181f5:	mov    esi,0x3a08799
  4181fa:	rep ins BYTE PTR es:[edi],dx
  4181fc:	fwait
  4181fd:	mov    cl,0xa0
  4181ff:	mov    bh,BYTE PTR [eax+ecx*2]
  418202:	jno    0x41820a
  418204:	xchg   edx,eax
  418205:	outs   dx,BYTE PTR ds:[esi]
  418206:	shr    edi,1
  418208:	pop    eax
  418209:	aas    
  41820a:	jne    0x4181a3
  41820c:	test   esp,ebx
  41820e:	mov    eax,0xae1aeae8
  418213:	add    DWORD PTR [ecx],0x14e833e1
  418219:	stos   BYTE PTR es:[edi],al
  41821a:	xor    ebx,edx
  41821c:	dec    ebp
  41821d:	(bad)
  418221:	mov    esi,0xdad4c14c
  418226:	sbb    edi,DWORD PTR [edx+0x402596fa]
  41822c:	xchg   esp,eax
  41822d:	mov    al,0x1d
  41822f:	fcmovnbe st,st(5)
  418231:	push   0xffffff81
  418233:	fsubr  st,st(3)
  418235:	sbb    BYTE PTR [esi-0x112953ad],ch
  41823b:	test   al,0x32
  41823d:	bnd jge 0x4182b2
  418240:	pushf  
  418241:	rcl    BYTE PTR [edx],cl
  418243:	inc    ecx
  418244:	and    edi,DWORD PTR [eax]
  418246:	cs dec ecx
  418248:	pop    ecx
  418249:	imul   DWORD PTR [edx-0x408d047a]
  41824f:	loope  0x418279
  418251:	jnp    0x418283
  418253:	lock dec eax
  418255:	push   cs
  418256:	out    0x83,eax
  418258:	pushf  
  418259:	cmp    DWORD PTR [eax+eiz*1],ebx
  41825c:	mov    ebx,fs
  41825e:	ds mov ecx,0x3ef9d92a
  418264:	es adc edi,esi
  418267:	sbb    ch,BYTE PTR [edx+0x56]
  41826a:	jg     0x4182d6
  41826c:	jbe    0x4182ad
  41826e:	cld    
  41826f:	xchg   ecx,eax
  418270:	stos   DWORD PTR es:[edi],eax
  418271:	jbe    0x418283
  418273:	jle    0x4182cd
  418275:	xchg   edi,eax
  418276:	xor    dl,bh
  418278:	xor    edi,DWORD PTR [ebx+0x6dd93731]
  41827e:	mov    ds:0x181f3b17,eax
  418283:	jne    0x4182dd
  418285:	inc    eax
  418286:	sbb    cl,cl
  418288:	xor    eax,0x656e04e1
  41828d:	xchg   ecx,eax
  41828e:	mov    eax,ds:0x81ae2fe4
  418293:	retf   0x2773
  418296:	push   ds
  418297:	mov    ebp,0x2e012659
  41829c:	cdq    
  41829d:	sti    
  41829e:	dec    ecx
  41829f:	adc    DWORD PTR [ebx-0x44],edi
  4182a2:	cmp    BYTE PTR [esi-0x2e],ch
  4182a5:	out    0x1f,eax
  4182a7:	cmp    edi,DWORD PTR fs:[esi+0x67]
  4182ab:	sbb    eax,0xfb0b3fed
  4182b0:	retf   
  4182b1:	lods   al,BYTE PTR ds:[esi]
  4182b2:	mov    ds:0xb8323afc,al
  4182b7:	mov    cl,0x0
  4182b9:	xor    al,0x37
  4182bb:	jecxz  0x4182e1
  4182bd:	ret    0x23d3
  4182c0:	ret    0x836c
  4182c3:	(bad)  
  4182c4:	jo     0x418318
  4182c6:	mov    ch,0xb4
  4182c8:	loopne 0x418313
  4182ca:	retf   
  4182cb:	cmp    al,0xac
  4182cd:	aas    
  4182ce:	or     ah,BYTE PTR ds:0x4a044c8f
  4182d4:	test   BYTE PTR [eax-0x5bd6d374],ah
  4182da:	outs   dx,DWORD PTR ds:[esi]
  4182db:	sub    edi,DWORD PTR [edx]
  4182dd:	idiv   DWORD PTR [edi]
  4182df:	hlt    
  4182e0:	xchg   esp,eax
  4182e1:	xchg   edx,eax
  4182e2:	sub    al,0xfa
  4182e4:	pop    es
  4182e5:	cmp    edx,DWORD PTR es:[edi+0x21e385b9]
  4182ec:	sti    
  4182ed:	fimul  WORD PTR [ebx-0x594a1ab2]
  4182f3:	inc    edx
  4182f4:	cmp    al,0xcf
  4182f6:	and    bl,BYTE PTR [ebp+0x6c]
  4182f9:	pop    ecx
  4182fa:	jno    0x418303
  4182fc:	sbb    eax,0xdf4164d1
  418301:	pop    edi
  418302:	mov    al,cs:0xaba1b933
  418308:	push   0xf337b6ae
  41830d:	xor    al,0x9d
  41830f:	sbb    bl,BYTE PTR [esi]
  418311:	stos   DWORD PTR es:[edi],eax
  418312:	cmc    
  418313:	ds mov edx,0xd122cced
  418319:	(bad)  
  41831a:	jno    0x41830a
  41831c:	out    dx,eax
  41831d:	aam    0x51
  41831f:	icebp  
  418320:	fs xor al,0x3e
  418323:	iret   
  418324:	hlt    
  418325:	jecxz  0x4182dd
  418327:	mov    esi,0x4f1f1789
  41832c:	pop    esp
  41832d:	add    ebx,DWORD PTR [edx-0x92eb9dc]
  418333:	cmp    BYTE PTR [ecx],bh
  418335:	cmp    BYTE PTR [eax-0x799ac0e9],cl
  41833b:	pop    edi
  41833c:	sbb    al,0x31
  41833e:	pushf  
  41833f:	xlat   BYTE PTR ds:[ebx]
  418340:	in     al,dx
  418341:	push   ebp
  418342:	jae    0x418355
  418344:	imul   ecx,DWORD PTR [ebp+ebx*8-0x62],0xb2d03a9c
  41834c:	dec    esi
  41834d:	add    cl,bh
  41834f:	adc    esi,DWORD PTR [eax+0x65]
  418352:	ins    DWORD PTR es:[edi],dx
  418353:	add    ch,cl
  418355:	int    0x46
  418357:	ret    
  418358:	jb     0x4182fe
  41835a:	cmp    eax,DWORD PTR [edi-0x1a]
  41835d:	rcr    BYTE PTR [ebx+0x40],0x46
  418361:	fsub   QWORD PTR [ebp+0x6b]
  418364:	inc    ebp
  418365:	std    
  418366:	retf   
  418367:	outs   dx,DWORD PTR ds:[esi]
  418368:	mov    WORD PTR [eax-0x65],gs
  41836b:	sub    BYTE PTR [edx-0x53d62960],bl
  418371:	out    dx,al
  418372:	ins    BYTE PTR es:[edi],dx
  418373:	lods   eax,DWORD PTR ds:[esi]
  418374:	xor    cl,bh
  418376:	pop    es
  418377:	popa   
  418378:	and    dh,ah
  41837a:	jno    0x41835a
  41837c:	test   DWORD PTR [esi],ebp
  41837e:	into   
  41837f:	imul   ecx,ecx,0xefd9c46d
  418385:	loop   0x41834d
  418387:	push   ecx
  418388:	cmp    DWORD PTR [bp+di],ebp
  41838b:	or     dl,BYTE PTR [ecx+0x691f5a72]
  418391:	xor    BYTE PTR [ebx],al
  418393:	out    0xf3,eax
  418395:	std    
  418396:	ja     0x41840d
  418398:	in     al,dx
  418399:	push   es
  41839a:	sub    eax,0x7311fa9c
  41839f:	dec    edi
  4183a0:	dec    ebx
  4183a1:	jae    0x4183c1
  4183a3:	outs   dx,DWORD PTR ds:[esi]
  4183a4:	add    eax,0xaafc98f5
  4183a9:	arpl   WORD PTR [esi],bp
  4183ab:	sub    eax,DWORD PTR [edx+0x15]
  4183ae:	push   eax
  4183af:	cmp    BYTE PTR ds:0x7fcfc3eb,ch
  4183b5:	mov    cl,0xc
  4183b7:	out    dx,eax
  4183b8:	adc    BYTE PTR [esi],al
  4183ba:	cmp    DWORD PTR [esi+0x5d],edi
  4183bd:	out    dx,eax
  4183be:	mov    ebp,esi
  4183c0:	lods   al,BYTE PTR ds:[esi]
  4183c1:	gs cdq 
  4183c3:	inc    ebx
  4183c4:	into   
  4183c5:	pop    ecx
  4183c6:	inc    ebx
  4183c7:	xlat   BYTE PTR ds:[ebx]
  4183c8:	xchg   esi,eax
  4183c9:	es int3 
  4183cb:	aaa    
  4183cc:	scas   eax,DWORD PTR es:[edi]
  4183cd:	inc    ebp
  4183ce:	fstp   TBYTE PTR [esi+0x4e]
  4183d1:	and    esi,0x809a6164
  4183d7:	adc    BYTE PTR [ecx],ah
  4183d9:	mov    gs,WORD PTR [ecx]
  4183db:	mov    dl,0xd0
  4183dd:	ja     0x418392
  4183df:	adc    esp,ebx
  4183e1:	jae    0x4183d9
  4183e3:	adc    BYTE PTR [ecx-0x50],0x2c
  4183e7:	out    dx,eax
  4183e8:	and    eax,0x2421d64
  4183ed:	sub    DWORD PTR [ebx+0x702cd92c],ebx
  4183f3:	add    eax,0xf33bf4d9
  4183f8:	cmp    edi,DWORD PTR [esi-0x5c]
  4183fb:	nop
  4183fc:	sti    
  4183fd:	jmp    0x41841b
  4183ff:	sub    DWORD PTR [ebx+eiz*8-0x3c680e0a],0xffffffeb
  418407:	jns    0x4183fd
  418409:	mov    DWORD PTR [edi],ebx
  41840b:	jp     0x4183a8
  41840d:	or     DWORD PTR [esp+eax*4],ebp
  418410:	push   edi
  418411:	jne    0x41845a
  418413:	jmp    0xfa221ac6
  418418:	ins    BYTE PTR es:[edi],dx
  418419:	leave  
  41841a:	cmp    ebx,edi
  41841c:	inc    ecx
  41841d:	push   edi
  41841e:	inc    esi
  41841f:	xchg   edi,eax
  418420:	pop    edi
  418421:	iret   
  418422:	cmp    DWORD PTR [edx+edi*2-0x6f],0xfe3c974a
  41842a:	sub    ebx,DWORD PTR [ecx+0x456a8523]
  418430:	fwait
  418431:	dec    ebx
  418432:	mov    esi,0x4d0fe010
  418437:	pop    ds
  418438:	jmp    0x418430
  41843a:	out    dx,eax
  41843b:	jmp    0xde27:0xd52c6499
  418442:	xchg   ebp,eax
  418443:	neg    DWORD PTR [edi+0x2b749d91]
  418449:	lods   eax,DWORD PTR ds:[esi]
  41844b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844c:	mov    ebx,0xddb38771
  418451:	pushf  
  418452:	(bad)  
  418453:	cli    
  418454:	pop    edi
  418455:	and    edi,esp
  418457:	(bad)  
  418459:	ret    
  41845a:	jmp    0x418429
  41845c:	aam    0x6b
  41845e:	js     0x4184d6
  418460:	popa   
  418461:	mov    cl,0xc
  418463:	stos   DWORD PTR es:[edi],eax
  418464:	mov    dl,BYTE PTR [ebp+ebx*1-0x3f041044]
  41846b:	jl     0x418432
  41846d:	pop    ds
  41846e:	push   edi
  41846f:	test   BYTE PTR [edi+0x12],dl
  418472:	fsubr  DWORD PTR [edi+0x45df5ba2]
  418478:	enter  0x7640,0x3e
  41847c:	call   0x29a0:0xb8526bf7
  418483:	hlt    
  418484:	mov    esi,DWORD PTR [eax+0x33]
  418487:	inc    edx
  418488:	aaa    
  418489:	jno    0x418433
  41848b:	mov    edx,0x4cf53118
  418490:	dec    edi
  418491:	mov    es:0x3896ea30,al
  418497:	jb     0x418439
  418499:	mov    dl,0x79
  41849b:	cs xchg ebp,eax
  41849d:	dec    edx
  41849e:	mov    ds:0x82882c20,eax
  4184a3:	sub    edx,0xee3f6417
  4184a9:	call   0x3c35:0xfd9e4c81
  4184b0:	or     al,0xfa
  4184b2:	pop    esp
  4184b3:	pop    es
  4184b4:	aaa    
  4184b5:	ds sbb esi,eax
  4184b8:	fsub   QWORD PTR [ebp-0x55]
  4184bb:	sub    esi,DWORD PTR [ebp+0x57b6660]
  4184c1:	das    
  4184c2:	adc    ecx,DWORD PTR [esi+0x1b]
  4184c5:	fcom   QWORD PTR ds:0xb0141c9d
  4184cb:	stos   DWORD PTR es:[edi],eax
  4184cc:	call   0xbb2a5780
  4184d1:	test   al,0x1
  4184d3:	adc    al,0x84
  4184d5:	nop
  4184d6:	or     al,al
  4184d8:	and    DWORD PTR [eax],esp
  4184da:	jne    0x418478
  4184dc:	mov    es:0x20dcb682,eax
  4184e2:	scas   eax,DWORD PTR es:[edi]
  4184e3:	popf   
  4184e4:	or     ebx,0xffffffb0
  4184e7:	xchg   ecx,eax
  4184e8:	jno    0x41848c
  4184ea:	dec    edx
  4184eb:	outs   dx,BYTE PTR ds:[esi]
  4184ec:	mov    edi,0x45961560
  4184f1:	jae    0x41853f
  4184f3:	or     ebp,DWORD PTR [ebp*4+0x1f196e67]
  4184fa:	jbe    0x4184fb
  4184fc:	dec    eax
  4184fd:	inc    edx
  4184fe:	lahf   
  4184ff:	jge    0x418511
  418501:	push   0x52d04700
  418506:	mov    al,0x1c
  418508:	call   0xec1b:0x950677e5
  41850f:	jl     0x418495
  418511:	ror    BYTE PTR [esi],0x67
  418514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418515:	inc    esp
  418516:	mov    dh,0xe9
  418518:	pop    ebx
  418519:	mov    dl,0xa2
  41851b:	call   0x1360:0xd01adfe0
  418522:	sub    BYTE PTR [ebp+0x10],0x2a
  418526:	int3   
  418527:	stos   BYTE PTR es:[edi],al
  418528:	pop    ds
  418529:	enter  0x38fa,0xb0
  41852d:	stos   DWORD PTR es:[edi],eax
  41852e:	jle    0x418580
  418530:	adc    DWORD PTR [ecx+0x42],ebp
  418533:	inc    ecx
  418534:	mov    BYTE PTR [ecx],bl
  418536:	sub    bl,BYTE PTR ds:[eax+0x66]
  41853a:	fisubr WORD PTR [ebx-0x5d]
  41853d:	es push 0x41c4ddcb
  418543:	pop    esi
  418544:	dec    ebp
  418545:	jg     0x41858f
  418547:	fwait
  418548:	imul   ecx,DWORD PTR [eax-0x53800ac0],0xfd67435d
  418552:	cmp    DWORD PTR [ebx],eax
  418554:	xchg   ebx,eax
  418555:	xor    al,0x38
  418557:	(bad)  
  418558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418559:	stos   BYTE PTR es:[edi],al
  41855a:	and    BYTE PTR [ebp+0x3b],bl
  41855d:	ret    0x19e4
  418560:	jns    0x41853e
  418562:	repz sbb al,0xa0
  418565:	inc    ebp
  418566:	sub    ebp,DWORD PTR [ecx]
  418568:	imul   ecx,DWORD PTR [edx],0x38e03c0
  41856e:	pop    ds
  41856f:	les    ebp,FWORD PTR [edx]
  418571:	jl     0x41852f
  418573:	xchg   esp,eax
  418574:	mov    edi,0x799e712f
  418579:	and    esp,0xf2670baf
  41857f:	cmc    
  418580:	xchg   edx,eax
  418581:	ja     0x418540
  418583:	xor    dl,bh
  418585:	ss out 0x81,eax
  418588:	mov    ch,0x83
  41858a:	test   ebp,eax
  41858c:	pop    es
  41858d:	dec    ecx
  41858e:	scas   al,BYTE PTR es:[edi]
  41858f:	ja     0x4185b2
  418591:	sbb    DWORD PTR [edx],edi
  418593:	xchg   esp,eax
  418594:	sar    ch,0x6b
  418597:	jge    0x41858a
  418599:	push   ebx
  41859a:	rep outs dx,BYTE PTR ds:[esi]
  41859c:	stc    
  41859d:	lock mov cl,0xba
  4185a0:	jmp    0x2e19:0x7175a80e
  4185a7:	cmp    eax,0x266bd309
  4185ac:	sub    esp,esp
  4185ae:	je     0x418611
  4185b0:	xchg   esp,eax
  4185b1:	lods   eax,DWORD PTR ds:[esi]
  4185b2:	ins    DWORD PTR es:[edi],dx
  4185b3:	sub    BYTE PTR [ecx],cl
  4185b5:	mov    edx,db3
  4185b8:	in     al,dx
  4185b9:	mov    bl,0x9f
  4185bb:	cwde   
  4185bc:	mov    eax,0x57fec120
  4185c1:	sub    ah,BYTE PTR [eax-0x41]
  4185c4:	mov    ch,0xf1
  4185c6:	pop    es
  4185c7:	inc    esp
  4185c8:	xchg   ecx,eax
  4185c9:	add    eax,0x299e2ddc
  4185ce:	or     eax,0x21a6ce7e
  4185d3:	push   ss
  4185d4:	icebp  
  4185d5:	int3   
  4185d6:	jmp    0x418599
  4185d8:	or     bh,BYTE PTR [edi+edi*2-0x7e]
  4185dc:	push   eax
  4185dd:	std    
  4185de:	call   0x6568:0x7800164f
  4185e5:	les    edx,FWORD PTR [ebx-0x8]
  4185e8:	jo     0x418622
  4185ea:	adc    eax,0x7514c23a
  4185ef:	fs out dx,eax
  4185f1:	pop    esp
  4185f2:	aad    0x5e
  4185f4:	and    dl,cl
  4185f6:	lea    ecx,[ecx-0x1e]
  4185f9:	in     eax,0x1b
  4185fb:	cli    
  4185fc:	jge    0x4185c3
  4185fe:	repz cld 
  418600:	mov    ebp,ss
  418602:	xchg   esi,eax
  418603:	pop    ecx
  418604:	call   0x962:0xd4c33142
  41860b:	cmp    DWORD PTR [ecx-0xc],ebx
  41860e:	xchg   ebp,eax
  41860f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418610:	mov    gs,WORD PTR [ebx-0x6527e5f3]
  418616:	test   esp,0x99919e7a
  41861c:	xor    bl,bh
  41861e:	mov    ah,0x90
  418620:	dec    ebp
  418621:	ror    DWORD PTR fs:[esi+0x595f8b5d],0x1
  418629:	popf   
  41862a:	adc    esp,esp
  41862c:	out    dx,al
  41862d:	push   ecx
  41862e:	add    BYTE PTR [ebx+0x4c],cl
  418631:	aaa    
  418632:	adc    DWORD PTR [esi+0x49],ebx
  418635:	add    BYTE PTR [ecx],0x19
  418638:	mov    esp,DWORD PTR [esi]
  41863a:	pusha  
  41863b:	lods   al,BYTE PTR ds:[esi]
  41863c:	out    dx,al
  41863d:	push   ebp
  41863e:	loope  0x41866c
  418640:	or     al,0xc6
  418642:	fs add al,0x46
  418645:	scas   al,BYTE PTR es:[edi]
  418646:	jmp    0x4539:0xcf62db1b
  41864d:	push   0x481f2566
  418652:	(bad)  
  418653:	fild   QWORD PTR [ebx+0x31e13191]
  418659:	adc    BYTE PTR [edi],dl
  41865b:	out    dx,eax
  41865c:	mov    ch,0x1c
  41865e:	pop    esi
  41865f:	xchg   ebx,eax
  418660:	xchg   edx,eax
  418661:	push   edx
  418662:	scas   eax,DWORD PTR es:[edi]
  418663:	sub    al,0x85
  418665:	xor    al,0x2d
  418667:	les    ebp,FWORD PTR [ebx-0x37]
  41866a:	mov    ch,BYTE PTR [edx]
  41866c:	sbb    eax,0xf83f5755
  418671:	and    dl,BYTE PTR [edx+0x58]
  418674:	call   0xbe69e067
  418679:	push   esi
  41867a:	dec    esp
  41867b:	and    bl,BYTE PTR [edx]
  41867d:	(bad)  
  41867f:	in     al,0xd
  418681:	test   BYTE PTR [edi+eiz*1],ch
  418684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418685:	mov    ds:0x563f2531,eax
  41868a:	mov    al,ds:0x7dd03935
  41868f:	push   edx
  418690:	push   ebp
  418691:	in     al,0x31
  418693:	sub    bh,BYTE PTR [edx+esi*4-0x5d780e71]
  41869a:	mov    bh,0x1b
  41869c:	xchg   BYTE PTR [ebx-0x7b],ah
  41869f:	mov    ss,eax
  4186a1:	adc    BYTE PTR [edx+0xde6673b],cl
  4186a7:	push   ss
  4186a8:	adc    eax,0xaa0792bf
  4186ad:	ja     0x418635
  4186af:	mov    esi,0xc5fa7da8
  4186b4:	stos   DWORD PTR es:[edi],eax
  4186b5:	jbe    0x4186a1
  4186b7:	in     al,0x55
  4186b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ba:	repnz pop ds
  4186bc:	or     BYTE PTR [eiz*2-0x18f459dd],cl
  4186c3:	jp     0x4186e2
  4186c5:	and    al,0x66
  4186c7:	in     eax,0xd5
  4186c9:	add    DWORD PTR [ecx],ebp
  4186cb:	dec    edi
  4186cc:	mov    DWORD PTR [ebx],ebx
  4186ce:	bound  ecx,QWORD PTR [esi]
  4186d0:	lock mov eax,0x10a71b88
  4186d6:	enter  0x81fe,0xf7
  4186da:	ss leave 
  4186dc:	sbb    edi,DWORD PTR [esi+esi*2-0x4e]
  4186e0:	fadd   QWORD PTR [edi-0x184f04d3]
  4186e6:	fidiv  DWORD PTR [edx]
  4186e8:	mov    ah,dl
  4186ea:	xor    BYTE PTR [eax-0x6c71fccb],cl
  4186f0:	repnz sti 
  4186f2:	imul   esi,DWORD PTR [ebx],0x27956d8c
  4186f8:	pop    es
  4186f9:	jp     0x4186e4
  4186fb:	mov    DWORD PTR [ebp-0xc],esp
  4186fe:	inc    edx
  4186ff:	fistp  WORD PTR [esi]
  418701:	sbb    DWORD PTR ds:0x4b10b745,esi
  418707:	adc    eax,0x948dd033
  41870c:	sbb    ah,al
  41870e:	jb     0x418742
  418710:	add    BYTE PTR [ecx+0x558bf455],cl
  418716:	lock xor edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	dec    eax
  4187e2:	addr16 inc ebx
  4187e4:	shr    bl,1
  4187e6:	xor    al,0x79
  4187e8:	jp     0x4187eb
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	mov    cl,0x86
  4187ef:	ja     0x418860
  4187f1:	and    DWORD PTR ds:0xacdff1a6,eax
  4187f7:	mov    ebx,0xb4508986
  4187fc:	mov    esi,0x5837198f
  418801:	xchg   esi,eax
  418802:	das    
  418803:	add    eax,0x314501f8
  418808:	sbb    ecx,ecx
  41880a:	jle    0x4187b5
  41880c:	sbb    eax,0xf8be4049
  418811:	mov    bh,0xc2
  418813:	add    al,0xfe
  418815:	or     al,0xdf
  418817:	or     DWORD PTR [ebp+0x19],ebx
  41881a:	dec    eax
  41881b:	fisttp QWORD PTR [ecx+0x2109e4f9]
  418821:	mov    dh,0x7
  418823:	das    
  418824:	jb     0x41881e
  418826:	inc    esp
  418827:	jne    0x418868
  418829:	call   0x73d7:0x93536989
  418830:	in     eax,0xea
  418832:	outs   dx,BYTE PTR ds:[esi]
  418833:	ja     0x4187dd
  418835:	sub    al,0xd2
  418837:	fsubr  DWORD PTR [esi]
  418839:	cmp    DWORD PTR [edx-0x271b190d],eax
  41883f:	adc    eax,0x974bdce1
  418844:	retf   0x4017
  418847:	xchg   DWORD PTR [edx+0x46c81e39],esi
  41884d:	dec    esi
  41884e:	aam    0xbb
  418850:	mov    ds:0x31c5a34c,eax
  418855:	mov    edx,0x6e866e0f
  41885a:	into   
  41885b:	inc    eax
  41885c:	ret    0xc442
  41885f:	aad    0xe0
  418861:	or     eax,0xb8538891
  418866:	in     al,dx
  418867:	sbb    edx,DWORD PTR [ebx-0x70]
  41886a:	cdq    
  41886b:	xchg   esp,eax
  41886c:	sub    BYTE PTR [edi-0x5f],al
  41886f:	sar    DWORD PTR gs:[ecx+eiz*1-0xa],cl
  418874:	mov    al,ds:0x373cffde
  418879:	xlat   BYTE PTR ds:[ebx]
  41887a:	or     BYTE PTR [ebx-0x3],0x8b
  41887e:	pavgb  mm3,mm0
  418881:	dec    ecx
  418882:	mov    ah,0x7c
  418884:	lds    eax,FWORD PTR [edi]
  418886:	mov    ds,WORD PTR [eax+0x22]
  418889:	jne    0x418878
  41888b:	inc    edx
  41888c:	sub    esi,DWORD PTR [ebx-0x45]
  41888f:	mov    ds:0xd89673d9,eax
  418894:	outs   dx,DWORD PTR ds:[esi]
  418895:	shr    DWORD PTR [edi+esi*8-0x67],1
  418899:	add    DWORD PTR [eax+0x39e67fc4],ecx
  41889f:	aaa    
  4188a0:	push   cs
  4188a1:	loopne 0x418855
  4188a3:	jne    0x4188da
  4188a5:	adc    al,0x6d
  4188a7:	push   esi
  4188a8:	outs   dx,BYTE PTR ds:[esi]
  4188a9:	mov    ebp,0x5d2534ad
  4188ae:	call   0x85dd6550
  4188b3:	mov    esp,0xb9d24189
  4188b8:	xor    esp,DWORD PTR cs:[eax-0x5b10a3db]
  4188bf:	bound  ebp,QWORD PTR [eax+0x56]
  4188c2:	jns    0x418878
  4188c4:	xchg   edx,eax
  4188c5:	pop    es
  4188c6:	or     ecx,DWORD PTR [edx+0x48]
  4188c9:	jmp    0xba3f:0xca43fed7
  4188d0:	adc    esp,DWORD PTR [ebp+0x18bc4519]
  4188d6:	push   cs
  4188d7:	pop    esi
  4188d8:	in     eax,dx
  4188d9:	push   esi
  4188da:	add    BYTE PTR [ebx+ebp*1+0x34129dc4],0x16
  4188e2:	pop    edx
  4188e3:	pop    ebx
  4188e4:	cmp    ah,dh
  4188e6:	leave  
  4188e7:	cmc    
  4188e8:	cmp    DWORD PTR [edx+0x3e224234],ecx
  4188ee:	sub    BYTE PTR [edx-0x7be791d],bl
  4188f4:	fwait
  4188f5:	pop    ecx
  4188f6:	imul   ebx,DWORD PTR [ebx+0xe23fe81],0x23
  4188fd:	test   BYTE PTR [edi+edx*8+0x145f90ac],bh
  418904:	mov    BYTE PTR [ecx],al
  418906:	fmul   QWORD PTR [ecx-0x6affa0e3]
  41890c:	outs   dx,DWORD PTR ds:[esi]
  41890d:	push   ss
  41890e:	cmp    ah,BYTE PTR [ecx+0x137d7cea]
  418914:	cli    
  418915:	and    BYTE PTR fs:[ebx+0x6e837cc5],cl
  41891c:	and    eax,0xcd887af0
  418921:	xlat   BYTE PTR ds:[ebx]
  418922:	test   al,0x90
  418924:	stos   BYTE PTR es:[edi],al
  418925:	pushf  
  418926:	adc    ebp,DWORD PTR [edx]
  418928:	pop    ss
  418929:	loope  0x4189a3
  41892b:	or     ebx,DWORD PTR [esp+esi*4]
  41892e:	pop    edx
  41892f:	inc    esp
  418930:	xchg   ebx,eax
  418931:	and    DWORD PTR [ecx],0xffffff9b
  418934:	(bad)  
  418935:	out    0x63,al
  418937:	push   ds
  418938:	mov    eax,ds:0x544d497c
  41893d:	out    dx,eax
  41893e:	sti    
  41893f:	scas   eax,DWORD PTR es:[edi]
  418940:	rcr    DWORD PTR [ebx+0x1eebe4de],1
  418946:	jge    0x4189b9
  418948:	mov    cl,0xdf
  41894a:	bound  edi,QWORD PTR [edi+0x28]
  41894d:	mov    ch,0x85
  41894f:	mov    BYTE PTR [eax+0x7a23356f],dh
  418955:	mov    al,ds:0x981d0cf2
  41895a:	push   ecx
  41895b:	call   0xee70:0xe3fb4815
  418962:	jecxz  0x418964
  418964:	mov    BYTE PTR ds:0x8b4e463c,bl
  41896a:	rep stos BYTE PTR es:[edi],al
  41896c:	cld    
  41896d:	inc    esp
  41896e:	stc    
  41896f:	cli    
  418970:	ss pop ds
  418972:	pop    ebp
  418973:	int    0x37
  418975:	pushf  
  418976:	cmp    eax,edx
  418978:	push   edi
  418979:	jb     0x418940
  41897b:	jge    0x418969
  41897d:	inc    ebx
  41897e:	mov    esp,0x16ed9192
  418983:	mov    ds:0xa03f570b,al
  418988:	sbb    esi,ecx
  41898a:	xchg   ebx,eax
  41898b:	sbb    cl,al
  41898d:	iret   
  41898e:	sub    BYTE PTR [esi],cl
  418990:	cmc    
  418991:	(bad)  
  418992:	jmp    0x4189c8
  418994:	ds test al,0x9a
  418997:	mov    esp,0xcf8bcce4
  41899c:	in     eax,dx
  41899d:	mov    eax,0x35b4dcad
  4189a2:	jns    0x4189ea
  4189a4:	jmp    0xbcc8:0x45940b48
  4189ab:	push   es
  4189ac:	jmp    DWORD PTR [ecx+0x29]
  4189af:	pop    ecx
  4189b0:	jb     0x4189cb
  4189b2:	unpckhps xmm6,xmm4
  4189b5:	push   eax
  4189b6:	xchg   ah,dh
  4189b8:	dec    esi
  4189b9:	mov    BYTE PTR [eax+0x58],ah
  4189bc:	mov    ebp,DWORD PTR [edi+0x65]
  4189bf:	inc    ebp
  4189c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c1:	sar    edi,1
  4189c3:	outs   dx,BYTE PTR ds:[esi]
  4189c4:	int    0xad
  4189c6:	pop    esi
  4189c7:	ins    DWORD PTR es:[edi],dx
  4189c8:	mov    bl,0x2e
  4189ca:	loope  0x418954
  4189cc:	xor    DWORD PTR [ebx+0x2],esp
  4189cf:	mov    eax,ds:0xaf759835
  4189d4:	repz sbb esp,ecx
  4189d7:	lea    ebp,[esi+0x57]
  4189da:	stos   BYTE PTR es:[edi],al
  4189db:	push   esi
  4189dc:	das    
  4189dd:	push   eax
  4189de:	pop    edx
  4189df:	jnp    0x41899b
  4189e1:	aad    0x8
  4189e3:	retf   
  4189e4:	std    
  4189e5:	iret   
  4189e6:	daa    
  4189e7:	mov    esi,0x1f0a659f
  4189ec:	sub    al,0x76
  4189ee:	test   DWORD PTR [ebp-0x80],edx
  4189f1:	mov    bl,0xd0
  4189f3:	(bad)  
  4189f5:	sbb    eax,0x3cd27423
  4189fa:	push   eax
  4189fb:	fdiv   DWORD PTR [esi+eiz*1+0x1d]
  4189ff:	rol    esi,0xab
  418a02:	pop    ebp
  418a03:	pop    ss
  418a04:	dec    ebp
  418a05:	or     al,0x57
  418a07:	pop    edi
  418a08:	cmp    eax,0x129f6560
  418a0d:	push   edi
  418a0e:	fs cmp eax,0xdd9d3873
  418a14:	xor    ebp,DWORD PTR [edi+edi*4+0x1668eb27]
  418a1b:	xor    ebp,esp
  418a1d:	fwait
  418a1e:	test   DWORD PTR [esi],eax
  418a20:	jne    0x418a94
  418a22:	sub    al,0xa8
  418a24:	int    0x4b
  418a26:	mov    esp,0x5d4800a3
  418a2b:	dec    edi
  418a2c:	inc    ecx
  418a2d:	dec    ebp
  418a2e:	xlat   BYTE PTR ds:[ebx]
  418a2f:	push   es
  418a30:	dec    edx
  418a31:	popf   
  418a32:	dec    esp
  418a33:	sub    ah,BYTE PTR [ebp-0x33dcc85f]
  418a39:	stos   BYTE PTR es:[edi],al
  418a3a:	dec    esp
  418a3b:	lds    esi,FWORD PTR [esi]
  418a3d:	lods   eax,DWORD PTR ds:[esi]
  418a3e:	fisttp QWORD PTR [edx+0x1c5992a8]
  418a44:	aaa    
  418a45:	data16 jl 0x4189ec
  418a48:	fst    QWORD PTR [ebx+0x34ada567]
  418a4e:	xchg   BYTE PTR [edi+0x4dee548d],dl
  418a54:	popf   
  418a55:	push   ebx
  418a56:	inc    ebx
  418a57:	das    
  418a58:	scas   eax,DWORD PTR es:[edi]
  418a59:	dec    ebx
  418a5a:	call   FWORD PTR [edi+0x12]
  418a5d:	loope  0x418a61
  418a5f:	popa   
  418a60:	outs   dx,DWORD PTR ds:[esi]
  418a61:	dec    edx
  418a62:	mov    edx,DWORD PTR [ecx+0x4c34730a]
  418a68:	pop    es
  418a69:	xchg   edi,eax
  418a6a:	fsub   DWORD PTR [ecx]
  418a6c:	xor    BYTE PTR [edi+0x41bfd060],0x1d
  418a73:	mov    al,0x7f
  418a75:	rol    DWORD PTR [edx+0x27],0xff
  418a79:	jle    0x418a67
  418a7b:	shl    ch,1
  418a7d:	int3   
  418a7e:	xchg   edi,eax
  418a7f:	push   eax
  418a80:	xor    al,BYTE PTR [edx+0x4c]
  418a83:	call   0xb88f:0x87e5e949
  418a8a:	cmp    dl,BYTE PTR [eax-0x4a6aed95]
  418a90:	dec    edx
  418a91:	scas   eax,DWORD PTR es:[edi]
  418a92:	mov    dh,0x7d
  418a94:	lds    edx,FWORD PTR [edx-0x55]
  418a97:	sbb    DWORD PTR [ebx],ecx
  418a99:	imul   ebx,DWORD PTR [eax+0x6a726a88],0x26ab5c4f
  418aa3:	stos   BYTE PTR es:[edi],al
  418aa4:	xchg   BYTE PTR [ebx-0x41],ah
  418aa7:	mov    cl,BYTE PTR [eax+0x79]
  418aaa:	std    
  418aab:	inc    esi
  418aac:	adc    bl,dl
  418aae:	outs   dx,BYTE PTR ds:[esi]
  418aaf:	leave  
  418ab0:	ss xchg ebp,eax
  418ab2:	out    dx,al
  418ab3:	and    al,0xc2
  418ab5:	cmp    DWORD PTR [ecx-0x32],esp
  418ab8:	les    esp,FWORD PTR [ecx+0x42323dc6]
  418abe:	fisub  DWORD PTR [ebx]
  418ac0:	imul   eax,ecx,0x61
  418ac3:	or     edx,DWORD PTR [eax+0x1ee8c21c]
  418ac9:	icebp  
  418aca:	mov    edi,0x2ae012f4
  418acf:	xchg   ebx,eax
  418ad0:	imul   ecx,DWORD PTR [edx+0x2c],0xffffffcf
  418ad4:	mov    ebx,0xe79ccb78
  418ad9:	add    eax,0x7e29c557
  418ade:	imul   ebx,edx,0xffffffe9
  418ae1:	push   ds
  418ae2:	cld    
  418ae3:	(bad)  
  418ae4:	iret   
  418ae5:	std    
  418ae6:	xlat   BYTE PTR ds:[ebx]
  418ae7:	scas   al,BYTE PTR es:[edi]
  418ae8:	mov    dl,0x5f
  418aea:	or     al,0x92
  418aec:	leave  
  418aed:	icebp  
  418aee:	in     al,dx
  418aef:	ins    BYTE PTR es:[edi],dx
  418af0:	cmp    dh,dl
  418af2:	call   0x414ba384
  418af7:	or     bh,al
  418af9:	outs   dx,BYTE PTR ds:[esi]
  418afa:	dec    ebp
  418afb:	adc    eax,DWORD PTR [ecx]
  418afd:	test   DWORD PTR [edi-0x4d],0x6de29fce
  418b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b05:	ret    
  418b06:	mov    bl,0x44
  418b08:	(bad)  [ecx+eax*2-0x15f439f2]
  418b0f:	out    0x62,al
  418b11:	scas   eax,DWORD PTR es:[edi]
  418b12:	push   ebp
  418b13:	jle    0x418a9d
  418b15:	inc    edx
  418b16:	std    
  418b17:	adc    BYTE PTR [ebx+0x4c08536d],0xaa
  418b1e:	mov    esi,0x68fee8c6
  418b23:	fwait
  418b24:	mov    bh,0x72
  418b26:	inc    ebx
  418b27:	repnz xchg edx,eax
  418b29:	mov    esi,0x2c2b3735
  418b2e:	(bad)  
  418b2f:	jmp    0x418b07
  418b31:	repnz aas 
  418b33:	xor    bh,dl
  418b35:	or     al,0x70
  418b37:	leave  
  418b38:	sbb    DWORD PTR [esi+0x239e378c],edi
  418b3e:	fcmove st,st(6)
  418b40:	ins    BYTE PTR es:[edi],dx
  418b41:	sub    esi,DWORD PTR [ecx-0x24d4fbca]
  418b47:	pop    ecx
  418b48:	cmp    al,0x19
  418b4a:	add    esp,ecx
  418b4c:	out    0x44,eax
  418b4e:	in     al,0x9b
  418b50:	dec    eax
  418b51:	push   0xd4794302
  418b56:	sbb    al,0x2e
  418b58:	cmp    eax,0xabd8eb24
  418b5d:	ss jecxz 0x418bb7
  418b60:	dec    edx
  418b61:	repnz cmp al,0xd
  418b64:	fnstenv [edx-0x38c48185]
  418b6a:	add    DWORD PTR [ecx+ebx*4+0x4e],edx
  418b6e:	inc    eax
  418b6f:	popf   
  418b70:	mov    ch,0xd1
  418b72:	inc    eax
  418b73:	nop
  418b74:	mov    ah,0x66
  418b76:	or     cl,BYTE PTR [esp+ecx*2]
  418b79:	sar    DWORD PTR [edi],1
  418b7b:	jge    0x418b5b
  418b7d:	or     ch,BYTE PTR [ebp-0x28571ecc]
  418b83:	dec    ebp
  418b84:	mov    al,ds:0xe856dd02
  418b89:	xlat   BYTE PTR ds:[ebx]
  418b8a:	aam    0x5a
  418b8c:	jl     0x418bc0
  418b8e:	push   edx
  418b8f:	sub    ebx,ebx
  418b91:	mov    ds,WORD PTR [edi-0x4e130e09]
  418b97:	jg     0x418b29
  418b99:	push   ecx
  418b9a:	aas    
  418b9b:	mov    dh,0x5f
  418b9d:	imul   edx,DWORD PTR [esi],0x3d
  418ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba1:	mov    dh,0x6d
  418ba3:	xchg   ecx,eax
  418ba4:	xor    BYTE PTR [ecx+0x5c],al
  418ba7:	aaa    
  418ba8:	push   0x52eacf0a
  418bad:	or     BYTE PTR [edx+ebx*8+0x187bf0e2],bh
  418bb4:	xor    BYTE PTR [edi],0x1e
  418bb7:	xor    edi,DWORD PTR [esi+0x54c14c26]
  418bbd:	aad    0x10
  418bbf:	dec    esp
  418bc0:	dec    edx
  418bc1:	out    0x9f,eax
  418bc3:	cdq    
  418bc4:	add    edx,DWORD PTR [edi+0x5099cf8e]
  418bca:	pushf  
  418bcb:	push   ecx
  418bcc:	test   BYTE PTR [eax+0x2e0bbce],dh
  418bd2:	push   ds
  418bd3:	retf   0x589
  418bd6:	sbb    eax,0xb3501feb
  418bdb:	scas   al,BYTE PTR es:[edi]
  418bdc:	cs inc esp
  418bde:	enter  0xa279,0x10
  418be2:	push   0xffffff90
  418be4:	test   ebp,esi
  418be6:	and    DWORD PTR [esi+0x5d684d75],0x53
  418bed:	loopne 0x418c00
  418bef:	jnp    0x418c0e
  418bf1:	leave  
  418bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf4:	jb     0x418c0f
  418bf6:	xchg   ebp,eax
  418bf7:	in     al,dx
  418bf8:	in     eax,0x95
  418bfa:	sub    ecx,DWORD PTR [eax-0x6a]
  418bfd:	xchg   edi,eax
  418bfe:	cmp    ah,bh
  418c00:	loopne 0x418c66
  418c02:	out    dx,al
  418c03:	pop    es
  418c04:	and    eax,0xed55265a
  418c09:	icebp  
  418c0a:	ja     0x418be3
  418c0c:	jo     0x418c43
  418c0e:	jo     0x418bb7
  418c10:	or     al,0x6c
  418c12:	xor    ah,BYTE PTR [ecx-0x4a]
  418c15:	jae    0x418c33
  418c17:	jg     0x418c75
  418c19:	lds    edi,FWORD PTR ds:[ecx+0x47]
  418c1d:	mov    eax,ds:0x9cc6fd9f
  418c22:	stos   BYTE PTR es:[edi],al
  418c23:	out    dx,eax
  418c24:	xor    ecx,DWORD PTR [edx+ebx*8+0x47]
  418c28:	mov    esp,0x22ee220c
  418c2d:	retf   
  418c2e:	push   ss
  418c2f:	stos   DWORD PTR es:[edi],eax
  418c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c31:	fstp   DWORD PTR [ebx+0x39b8bc5e]
  418c37:	mov    bl,0xd8
  418c39:	dec    esp
  418c3a:	stc    
  418c3b:	dec    esi
  418c3c:	inc    ecx
  418c3d:	xlat   BYTE PTR ds:[ebx]
  418c3e:	iret   
  418c3f:	jb     0x418c35
  418c41:	out    0xb3,eax
  418c43:	repz seto BYTE PTR [esi]
  418c47:	add    al,0x42
  418c49:	loope  0x418bde
  418c4b:	xor    al,BYTE PTR [esi]
  418c4d:	push   edi
  418c4e:	dec    esi
  418c4f:	(bad)  
  418c51:	mov    cl,BYTE PTR [ebx-0x63]
  418c54:	mov    edx,0x42444416
  418c59:	dec    ebx
  418c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5b:	xchg   esp,eax
  418c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c5d:	mov    BYTE PTR [esi+0x5aa5e770],dl
  418c63:	mov    esi,0xea3915bc
  418c68:	or     eax,DWORD PTR [esi]
  418c6a:	jl     0x418c00
  418c6c:	inc    edi
  418c6d:	fsub   st,st(2)
  418c6f:	rcr    BYTE PTR [edx],cl
  418c71:	mov    ch,0xb4
  418c73:	dec    eax
  418c74:	sbb    al,0x9d
  418c76:	sub    cl,BYTE PTR [ecx+0x6b421b44]
  418c7c:	and    al,0x1b
  418c7e:	int3   
  418c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c80:	sbb    ebx,edx
  418c82:	push   edx
  418c83:	(bad)
  418c86:	scas   eax,DWORD PTR es:[edi]
  418c87:	pop    ecx
  418c88:	das    
  418c89:	(bad)  
  418c8b:	pop    es
  418c8c:	lea    edx,[ecx]
  418c8e:	mov    edx,0xb739e068
  418c93:	(bad)  
  418c94:	mov    edi,0xbdbff212
  418c99:	pop    esi
  418c9a:	cwde   
  418c9b:	pop    esp
  418c9c:	pop    esp
  418c9d:	dec    edi
  418c9e:	scas   al,BYTE PTR es:[edi]
  418c9f:	in     eax,dx
  418ca0:	loope  0x418d13
  418ca2:	push   0x17
  418ca4:	adc    dh,dh
  418ca6:	stos   DWORD PTR es:[edi],eax
  418ca7:	in     al,dx
  418ca8:	pop    ebp
  418ca9:	push   sp
  418cab:	hlt    
  418cac:	popf   
  418cad:	in     eax,0x8b
  418caf:	rol    BYTE PTR [ebx],1
  418cb1:	in     al,0xbd
  418cb3:	sub    BYTE PTR [esi+0x75],0xf3
  418cb7:	mov    esp,0x3daea4e3
  418cbc:	fimul  DWORD PTR [esi+ecx*1-0x34]
  418cc0:	hlt    
  418cc1:	fldenv [esi-0x20f0b7ae]
  418cc7:	mov    ds:0x60987d0c,eax
  418ccc:	jg     0x418c8a
  418cce:	mov    edi,DWORD PTR [ebx+0x1]
  418cd1:	mov    esi,DWORD PTR [edi+edx*4+0x74]
  418cd5:	pop    edi
  418cd6:	stos   DWORD PTR es:[edi],eax
  418cd7:	fstp   TBYTE PTR [eax-0x2f038f70]
  418cdd:	dec    esp
  418cde:	les    edi,FWORD PTR ds:[ecx+eiz*4]
  418ce2:	jg     0x418d30
  418ce4:	lea    esi,ds:0x326b05c
  418cea:	jecxz  0x418d61
  418cec:	dec    ebx
  418ced:	in     al,0x9
  418cef:	std    
  418cf0:	jne    0x418c73
  418cf2:	and    BYTE PTR [ebx],al
  418cf4:	mov    ch,0x39
  418cf6:	imul   esi,DWORD PTR [ebx+0x2d],0xffffff81
  418cfa:	inc    ebp
  418cfb:	stc    
  418cfc:	arpl   cx,sp
  418cfe:	mov    ah,0xb2
  418d00:	into   
  418d01:	dec    ebp
  418d02:	mov    ds:0xa759d65a,eax
  418d07:	rol    bh,cl
  418d09:	cmp    dh,bh
  418d0b:	xchg   dh,al
  418d0d:	test   eax,0xbfe8b7b9
  418d12:	jmp    0x418cde
  418d14:	push   ecx
  418d15:	pop    edx
  418d16:	rol    DWORD PTR [edx+0x2b],cl
  418d19:	das    
  418d1a:	sub    eax,DWORD PTR [ecx+0x13b9acf5]
  418d20:	sbb    eax,0x5e37024e
  418d25:	sub    eax,edx
  418d27:	xor    ebx,DWORD PTR [ebp+0x4]
  418d2a:	mov    esp,0x857f2ae5
  418d2f:	cmp    ch,dl
  418d31:	iret   
  418d32:	enter  0x25f2,0xb7
  418d36:	jne    0x418d33
  418d38:	pop    ecx
  418d39:	mov    dh,0xca
  418d3b:	dec    ebx
  418d3c:	mov    WORD PTR [ebx],gs
  418d3e:	push   ecx
  418d3f:	js     0x418d04
  418d41:	pop    ds
  418d42:	xor    ch,dh
  418d44:	mov    DWORD PTR [esp+ecx*8+0x61e827aa],esp
  418d4b:	lahf   
  418d4c:	test   al,0x78
  418d4e:	mov    eax,0x7ddeb8c1
  418d53:	ret    0x11af
  418d56:	inc    esi
  418d57:	bnd ret 
  418d59:	mov    ah,BYTE PTR [edx]
  418d5b:	iret   
  418d5c:	dec    eax
  418d5d:	retf   0xc8a6
  418d60:	dec    edi
  418d61:	xchg   esi,eax
  418d62:	sub    eax,0x9aa60b7f
  418d67:	add    eax,0xb818899b
  418d6c:	mov    bl,0x98
  418d6e:	mov    dl,BYTE PTR [eax]
  418d70:	cmp    BYTE PTR [edi+0x73f5f58e],0xce
  418d77:	sti    
  418d78:	pop    es
  418d79:	pop    edx
  418d7a:	stos   BYTE PTR es:[edi],al
  418d7b:	pop    esp
  418d7c:	push   eax
  418d7d:	jp     0x418d3a
  418d7f:	sub    dl,0x1e
  418d82:	and    bl,al
  418d84:	jg     0x418d41
  418d86:	cwde   
  418d87:	or     ebp,DWORD PTR [esi-0xb]
  418d8a:	jg     0x418dfb
  418d8c:	loopne 0x418d98
  418d8e:	icebp  
  418d8f:	cmp    esi,esp
  418d91:	ins    DWORD PTR es:[edi],dx
  418d92:	or     eax,eax
  418d94:	mov    cl,0xbb
  418d96:	aaa    
  418d97:	pop    edx
  418d98:	ins    BYTE PTR es:[edi],dx
  418d99:	aad    0xd9
  418d9b:	push   edi
  418d9c:	pop    eax
  418d9d:	sbb    BYTE PTR [esi+0x51b2ea96],0xec
  418da4:	enter  0xd86a,0x49
  418da8:	push   ebp
  418da9:	push   es
  418daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dab:	sub    bh,ah
  418dad:	push   0x35
  418daf:	fnstsw WORD PTR [esi+ebp*1+0x3c]
  418db3:	cs ja  0x418d65
  418db6:	pop    esi
  418db7:	mov    eax,0xfb2fee09
  418dbc:	jge    0x418d99
  418dbe:	mov    ds:0xa0a53827,eax
  418dc3:	xor    eax,0xef78614f
  418dc8:	mov    ecx,0x366a0f40
  418dcd:	or     ah,BYTE PTR [edx+edi*4-0x1a]
  418dd1:	lea    esi,[edi+0x798f4003]
  418dd7:	je     0x418e55
  418dd9:	hlt    
  418dda:	mov    dl,0xad
  418ddc:	push   ds
  418ddd:	jl     0x418e49
  418ddf:	inc    esi
  418de0:	jnp    0x418da9
  418de2:	imul   ebp,DWORD PTR [ecx+0x46],0x204a34e7
  418de9:	bound  ecx,QWORD PTR [eax+0xb]
  418dec:	jl     0x418de8
  418dee:	or     eax,0x4ab52403
  418df3:	pop    ss
  418df4:	js     0x418dd1
  418df6:	push   eax
  418df7:	hlt    
  418df8:	inc    esp
  418df9:	mov    edi,0x4e6d96a3
  418dfe:	xlat   BYTE PTR ds:[ebx]
  418dff:	xchg   esp,eax
  418e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e01:	aas    
  418e02:	cmp    bh,BYTE PTR [ecx]
  418e04:	sahf   
  418e05:	iret   
  418e06:	xchg   ebp,eax
  418e07:	pop    ebx
  418e08:	test   BYTE PTR [edi+0x11],bh
  418e0b:	je     0x418e69
  418e0d:	fistp  DWORD PTR [ecx-0x7e]
  418e10:	jp     0x418e52
  418e12:	out    dx,eax
  418e13:	dec    esi
  418e14:	mov    eax,0xac49e4b0
  418e19:	rol    dl,0x13
  418e1c:	pusha  
  418e1d:	xchg   DWORD PTR [edx],ebx
  418e1f:	cs (bad) 
  418e21:	(bad)  
  418e22:	push   edx
  418e23:	popa   
  418e24:	mov    edi,0xf415c0a3
  418e29:	push   ss
  418e2a:	mov    esi,0x21200bcd
  418e2f:	pushf  
  418e30:	or     ah,BYTE PTR fs:[ebx]
  418e33:	dec    ebx
  418e34:	in     al,dx
  418e35:	sub    eax,0x2e40a9fb
  418e3a:	or     ch,BYTE PTR [edi]
  418e3c:	lods   al,BYTE PTR ds:[esi]
  418e3d:	jle    0x418dd2
  418e3f:	popf   
  418e40:	mov    BYTE PTR [edi-0x62],0x24
  418e44:	jp     0x418e45
  418e46:	fwait
  418e47:	loop   0x418e57
  418e49:	lods   eax,DWORD PTR ds:[esi]
  418e4a:	xlat   BYTE PTR ds:[ebx]
  418e4b:	test   BYTE PTR [edx+eiz*4+0x25da513e],ch
  418e52:	inc    ecx
  418e53:	call   0x330c9b10
  418e58:	push   es
  418e59:	cdq    
  418e5a:	outs   dx,DWORD PTR ds:[esi]
  418e5b:	push   0x6f33a556
  418e60:	mov    edx,?
  418e62:	das    
  418e63:	adc    eax,0xa8d634e2
  418e68:	inc    ecx
  418e69:	aaa    
  418e6a:	jb     0x418e74
  418e6c:	sub    ebx,DWORD PTR [edx+0x5a]
  418e6f:	call   0x53b907d2
  418e74:	jmp    0x418e13
  418e76:	mov    esp,0xcb50ef9f
  418e7b:	or     dh,ch
  418e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e7e:	jge    0x418e36
  418e80:	das    
  418e81:	retf   
  418e82:	jbe    0x418ea4
  418e84:	scas   al,BYTE PTR es:[edi]
  418e85:	clc    
  418e86:	lahf   
  418e87:	(bad)  
  418e88:	ficomp WORD PTR [edx+0x2f6753f9]
  418e8e:	imul   esp,eax,0xffffffd8
  418e91:	sub    eax,0xa6e004fb
  418e96:	pop    esp
  418e97:	repz inc ebp
  418e99:	mov    eax,ds:0xed04e53e
  418e9e:	test   DWORD PTR [eax+0x18],esp
  418ea1:	sti    
  418ea2:	retf   0x4625
  418ea5:	pop    ss
  418ea6:	jno    0x418ee4
  418ea8:	lahf   
  418ea9:	hlt    
  418eaa:	or     ebx,ebx
  418eac:	dec    ecx
  418ead:	inc    ebp
  418eae:	cmp    al,0xc1
  418eb0:	imul   ecx,DWORD PTR [eax+ebp*1-0x45],0x4d9ad718
  418eb8:	leave  
  418eb9:	push   ecx
  418eba:	repnz mov ecx,0x38f76eaa
  418ec0:	jne    0x418ece
  418ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec3:	into   
  418ec4:	jne    0x418f14
  418ec6:	aas    
  418ec7:	fcom   st(3)
  418ec9:	pop    ecx
  418eca:	pop    esp
  418ecb:	mov    eax,ds:0x68a4114d
  418ed0:	jge    0x418f00
  418ed2:	or     eax,0x7467e623
  418ed7:	push   ebp
  418ed8:	push   es
  418ed9:	xor    BYTE PTR [ecx+0x2a],bh
  418edc:	xchg   BYTE PTR [eax],bl
  418ede:	dec    edi
  418edf:	mov    eax,0x953f66dd
  418ee4:	or     BYTE PTR [ebp-0x7756db0],bl
  418eea:	or     al,0xe6
  418eec:	xor    eax,0x73a7cfba
  418ef1:	add    eax,0x19c28fee
  418ef6:	jne    0x418efa
  418ef8:	jo     0x418e7b
  418efa:	test   eax,0x22e292fa
  418eff:	jmp    0xf9cc1903
  418f04:	push   cs
  418f05:	cli    
  418f06:	sub    al,0x56
  418f08:	aas    
  418f09:	xor    eax,0x94d5033b
  418f0e:	or     al,0x3e
  418f10:	lahf   
  418f11:	and    eax,0xcdb92c8e
  418f16:	xchg   esi,eax
  418f17:	icebp  
  418f18:	sub    BYTE PTR [edi+0x63],bh
  418f1b:	out    dx,eax
  418f1c:	mov    ds:0x46b13e72,al
  418f21:	add    DWORD PTR [ebx],edi
  418f23:	mov    esp,0xac3f5601
  418f28:	cmp    bh,cl
  418f2a:	(bad)  
  418f2b:	cmp    DWORD PTR [eax],eax
  418f2d:	sbb    DWORD PTR [esi+0x4e897c7],edx
  418f33:	pop    ebp
  418f34:	sub    eax,0xf78cf901
  418f39:	mov    ebx,0x62581e35
  418f3e:	in     eax,dx
  418f3f:	(bad)  
  418f40:	push   ebx
  418f41:	and    BYTE PTR [esi-0x190de1bc],dh
  418f47:	pop    edi
  418f48:	add    bl,bh
  418f4a:	pop    es
  418f4b:	inc    esp
  418f4c:	xchg   ebp,eax
  418f4d:	stc    
  418f4e:	add    DWORD PTR [eax+0x1000768],esi
  418f54:	out    0x75,eax
  418f56:	fisubr WORD PTR [edi]
  418f58:	(bad)  
  418f59:	es mov al,0x15
  418f5c:	and    eax,0x8774e5cb
  418f61:	mov    dl,0x1a
  418f63:	rcl    edi,1
  418f65:	pop    edi
  418f66:	lods   eax,DWORD PTR ds:[esi]
  418f67:	mov    ds:0xc6aeb381,eax
  418f6c:	dec    eax
  418f6d:	pop    ds
  418f6e:	stos   BYTE PTR es:[edi],al
  418f6f:	ss addr16 or edi,eax
  418f73:	les    ebx,FWORD PTR ds:0xc99e8064
  418f79:	and    cl,ah
  418f7b:	call   0x5176368a
  418f80:	in     al,0x6b
  418f82:	inc    ebx
  418f83:	jne    0x418f88
  418f85:	into   
  418f86:	push   cs
  418f87:	xor    ah,ah
  418f89:	(bad)  [ecx]
  418f8b:	ss jecxz 0x418fa1
  418f8e:	(bad)  
  418f8f:	mov    ds:0x57238afa,eax
  418f94:	outs   dx,BYTE PTR ds:[esi]
  418f95:	(bad)  
  418f96:	mov    ds:0x6a8d62ae,eax
  418f9b:	test   al,0xbf
  418f9d:	pusha  
  418f9e:	xchg   ecx,eax
  418f9f:	mov    cl,0xbd
  418fa1:	int    0x28
  418fa3:	iret   
  418fa4:	aam    0x3b
  418fa6:	push   eax
  418fa7:	js     0x418f47
  418fa9:	xor    dh,BYTE PTR [eax-0x256da9d1]
  418faf:	dec    ecx
  418fb0:	fdivr  st,st(3)
  418fb2:	sbb    al,0x2
  418fb4:	mov    dh,0x16
  418fb7:	push   ds
  418fb8:	bound  edi,QWORD PTR ds:0xc05a7dd0
  418fbe:	pop    DWORD PTR [ebp+0x16d9bfc]
  418fc4:	in     al,0x65
  418fc6:	mov    ds:0xc9e2672b,al
  418fcb:	xchg   esi,ecx
  418fcd:	sub    eax,0xadb3d8ac
  418fd2:	dec    ebp
  418fd3:	and    eax,DWORD PTR [ebp+edx*4-0x322f0241]
  418fda:	lock retf 0x5b3a
  418fde:	add    BYTE PTR [ebx-0x61ac8aab],cl
  418fe4:	(bad)  
  418fe5:	ds sub dl,bl
  418fe8:	lea    ecx,[ebp-0x37]
  418feb:	pusha  
  418fec:	shl    DWORD PTR ds:0x68e643e7,0x6c
  418ff3:	ficomp DWORD PTR [esi+0x6d95332b]
  418ff9:	dec    esi
  418ffa:	jmp    0x4403:0x75ff6e95
  419001:	cmp    eax,0xfd0b1de9
  419006:	add    al,0x55
  419008:	inc    edx
  419009:	out    0x3b,eax
  41900b:	push   ds
  41900c:	mov    esi,0xc0f6711a
  419011:	ja     0x41908c
  419013:	lds    edi,FWORD PTR [esi+0xd]
  419016:	xchg   edx,eax
  419017:	inc    ecx
  419018:	xchg   BYTE PTR [edi-0x1223f36b],bl
  41901e:	aad    0xb6
  419020:	sub    edx,esi
  419022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419023:	and    DWORD PTR [esi],edx
  419025:	clc    
  419026:	(bad)  
  419027:	mov    eax,ds:0xca8723d2
  41902c:	nop
  41902d:	sahf   
  41902e:	cmp    BYTE PTR [edx-0x366c3eb0],ah
  419034:	xor    eax,0xe5324353
  419039:	dec    esi
  41903a:	lock mov dh,0x3f
  41903d:	sbb    ebx,DWORD PTR [ecx+0x3e]
  419040:	ja     0x418fc4
  419042:	popf   
  419043:	sar    BYTE PTR [ebx-0x642ecf22],cl
  419049:	jmp    0x4190b8
  41904b:	std    
  41904c:	dec    eax
  41904d:	dec    ecx
  41904e:	pushf  
  41904f:	(bad)  
  419050:	mov    al,0x61
  419052:	arpl   WORD PTR [ebx+0x5b18824],bx
  419058:	jnp    0x418fef
  41905a:	jecxz  0x419073
  41905c:	add    BYTE PTR [eax+eax*1+0x7fc9f067],0xf2
  419064:	loopne 0x41905a
  419066:	xor    dl,bh
  419068:	in     al,dx
  419069:	mov    ds:0x32e34fa0,eax
  41906e:	and    cl,dh
  419070:	or     al,0xe2
  419072:	rcl    ebp,cl
  419074:	jo     0x4190d9
  419076:	(bad)  
  419077:	(bad)  
  419078:	fild   QWORD PTR [edx]
  41907a:	ret    
  41907b:	dec    ecx
  41907c:	cwde   
  41907d:	xor    BYTE PTR [eax+0x700eccfa],dl
  419083:	adc    cl,BYTE PTR [ebx-0x28]
  419086:	retf   0x548c
  419089:	mul    BYTE PTR [esi+0x27]
  41908c:	sbb    al,0x86
  41908e:	mov    edi,ebp
  419090:	fwait
  419091:	dec    eax
  419092:	imul   ebp
  419094:	fnstcw WORD PTR [edi]
  419096:	adc    dl,BYTE PTR [ecx-0x51]
  419099:	adc    al,0xfa
  41909b:	outs   dx,DWORD PTR ds:[esi]
  41909c:	xchg   ebx,eax
  41909d:	sbb    BYTE PTR [edx-0x5],ah
  4190a0:	adc    al,0xf5
  4190a2:	mov    ah,0xef
  4190a4:	mov    esi,esi
  4190a6:	jge    0x41905b
  4190a8:	and    dl,BYTE PTR [ebp+0x75bf3854]
  4190ae:	out    dx,eax
  4190af:	xchg   al,ah
  4190b1:	rcl    dl,cl
  4190b3:	mov    edx,ecx
  4190b5:	or     eax,0x320e5120
  4190ba:	cmp    BYTE PTR [ebp-0x9],0x1
  4190be:	fs push eax
  4190c0:	test   dh,bh
  4190c2:	retf   
  4190c3:	ins    DWORD PTR es:[edi],dx
  4190c4:	mov    ebp,0x395b020d
  4190c9:	mov    WORD PTR [edi-0x61],?
  4190cc:	nop
  4190cd:	scas   al,BYTE PTR es:[edi]
  4190ce:	xchg   ebp,eax
  4190cf:	aad    0xc
  4190d1:	jle    0x41912d
  4190d3:	cdq    
  4190d4:	inc    edx
  4190d5:	mov    al,0x8b
  4190d7:	xor    ah,BYTE PTR [ebx-0x35]
  4190da:	out    dx,eax
  4190db:	pop    edi
  4190dc:	in     al,0x7b
  4190de:	or     eax,0xf1ecf9d7
  4190e3:	adc    BYTE PTR [esi-0x38],dl
  4190e6:	das    
  4190e7:	mov    al,ds:0xaa82cf98
  4190ec:	cmp    BYTE PTR [edx+0x54],0x73
  4190f0:	jp     0x4190d4
  4190f2:	imul   esp,DWORD PTR [ebp+0x73],0xf392f6bb
  4190f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190fa:	outs   dx,BYTE PTR ds:[esi]
  4190fb:	add    eax,0x277d5632
  419100:	mov    ecx,0x4437ea68
  419105:	in     al,dx
  419106:	or     BYTE PTR [ebx+esi*2+0x3eb53945],0x20
  41910e:	inc    eax
  41910f:	(bad)  
  419110:	push   0xb3d9795b
  419115:	mov    bh,0xd4
  419117:	inc    edx
  419118:	pop    edx
  419119:	cli    
  41911a:	mov    ch,cl
  41911c:	inc    ebp
  41911d:	xor    dl,al
  41911f:	mov    cs,WORD PTR [ebx-0x218af2e3]
  419125:	pop    esi
  419126:	cmc    
  419127:	es pop ds
  419129:	and    ch,BYTE PTR [ecx+0x5f6b5fbd]
  41912f:	push   0xc26b382b
  419134:	sahf   
  419135:	fstp   QWORD PTR [ecx+0xb9ca7e2]
  41913b:	lds    edi,FWORD PTR [eax+0x24]
  41913e:	dec    esi
  41913f:	ror    BYTE PTR [ebx+0x48],0xb8
  419143:	mov    ebp,0xfbf340e0
  419148:	jle    0x41918e
  41914a:	dec    esi
  41914b:	mov    gs,WORD PTR [ebp+eiz*2-0x61]
  41914f:	sbb    eax,0xab7f9a8b
  419154:	aaa    
  419155:	add    bl,dh
  419157:	aas    
  419158:	cmp    BYTE PTR [eax+0x38889e6a],0x66
  41915f:	pop    ds
  419160:	shl    BYTE PTR [edi],1
  419162:	test   eax,0x666d9a51
  419167:	jl     0x4191ca
  419169:	mov    ebx,0xe234c6b6
  41916e:	cs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  419171:	mov    ebp,DWORD PTR [eax-0x24]
  419174:	ins    DWORD PTR es:[edi],dx
  419175:	(bad)  
  419176:	std    
  419177:	sbb    eax,0xd1867320
  41917c:	or     ebx,DWORD PTR [ebp-0x1b]
  41917f:	xchg   ecx,eax
  419180:	adc    dh,BYTE PTR [esi-0xd19ee89]
  419186:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419188:	ins    BYTE PTR es:[edi],dx
  419189:	sbb    dh,ah
  41918b:	xor    DWORD PTR [ecx-0x6332cf4c],ecx
  419191:	rcr    DWORD PTR [eax+esi*1-0x4f],cl
  419195:	out    dx,eax
  419196:	fcomp  DWORD PTR [eax-0x1eb19fad]
  41919c:	push   es
  41919d:	out    dx,eax
  41919e:	inc    DWORD PTR [ecx+0x377edceb]
  4191a4:	dec    eax
  4191a5:	stc    
  4191a6:	jp     0x419159
  4191a8:	jg     0x4191bf
  4191aa:	les    eax,FWORD PTR [edx+esi*4]
  4191ad:	and    bl,ah
  4191af:	push   ds
  4191b0:	int3   
  4191b1:	in     al,0xdd
  4191b3:	sbb    al,BYTE PTR [eax]
  4191b5:	scas   al,BYTE PTR es:[edi]
  4191b6:	rcl    BYTE PTR [edx+ecx*8],1
  4191b9:	sub    BYTE PTR [edi+0x3b3fc6b5],ch
  4191bf:	popf   
  4191c0:	xchg   ebx,eax
  4191c1:	adc    al,0xe5
  4191c3:	fldcw  WORD PTR [esi+ecx*4]
  4191c6:	mov    bl,0x62
  4191c8:	dec    edi
  4191c9:	xchg   ebp,eax
  4191ca:	test   al,0xa2
  4191cc:	cmp    esp,DWORD PTR [edx+ebx*4+0x79]
  4191d0:	in     eax,0x7a
  4191d2:	int    0xaf
  4191d4:	lods   al,BYTE PTR ds:[esi]
  4191d5:	xor    dl,BYTE PTR [ecx]
  4191d7:	ins    BYTE PTR es:[edi],dx
  4191d8:	mov    ebp,DWORD PTR [esi+0x2e]
  4191db:	mov    ebp,0xc83caa0b
  4191e0:	sub    eax,DWORD PTR [edi]
  4191e2:	dec    esi
  4191e3:	retf   0xc734
  4191e6:	ret    
  4191e7:	cmp    BYTE PTR [edx+0x7b8d44d4],cl
  4191ed:	aas    
  4191ee:	call   0xd22:0x95875374
  4191f5:	sbb    ecx,DWORD PTR [edx+0x60]
  4191f8:	daa    
  4191f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fa:	inc    eax
  4191fb:	jbe    0x419258
  4191fd:	retf   0x6880
  419200:	cmp    ah,ah
  419202:	xchg   BYTE PTR [ecx-0x15],ch
  419205:	pop    ebp
  419206:	cmp    DWORD PTR [eax-0x2f92e9e9],0x79
  41920d:	cmp    esi,edx
  41920f:	jbe    0x419199
  419211:	push   esp
  419212:	mov    ch,0x36
  419214:	pop    eax
  419215:	aas    
  419216:	sub    DWORD PTR [eax-0x372d83e4],eax
  41921c:	xchg   BYTE PTR [ecx+eax*1],al
  41921f:	or     al,0xf0
  419221:	retf   
  419222:	mov    WORD PTR [ecx+0x38144052],?
  419228:	in     eax,0x3c
  41922a:	mov    cl,0xed
  41922c:	in     al,dx
  41922d:	sub    al,0x45
  41922f:	cmp    bl,BYTE PTR [ebx]
  419231:	mov    eax,ds:0x88972fa9
  419236:	sub    DWORD PTR [eax],0xffffff9b
  419239:	mov    ecx,DWORD PTR [ecx]
  41923b:	int3   
  41923c:	psllq  mm6,mm5
  41923f:	jecxz  0x41927b
  419241:	inc    edx
  419242:	scas   eax,DWORD PTR es:[edi]
  419243:	out    dx,al
  419244:	xor    bl,dl
  419246:	es ds enter 0xfd00,0x5c
  41924c:	stos   BYTE PTR es:[edi],al
  41924d:	inc    edi
  41924e:	mov    es,WORD PTR [ebx]
  419250:	sub    al,BYTE PTR [edi+0x17]
  419253:	lea    ecx,[ecx+edx*2-0x4f]
  419257:	dec    eax
  419258:	sub    DWORD PTR [eax-0xfd7b409],edi
  41925e:	jmp    0x99e9376c
  419263:	mov    edx,ecx
  419265:	dec    edi
  419266:	sbb    bh,BYTE PTR [ecx+eiz*4]
  419269:	loopne 0x4192ea
  41926b:	xchg   edi,eax
  41926c:	and    BYTE PTR [ebp-0x747f4999],0xcc
  419273:	add    DWORD PTR [ebx],edx
  419275:	ins    BYTE PTR es:[edi],dx
  419276:	mov    WORD PTR [eax+eax*4-0x6f28266],?
  41927d:	push   eax
  41927e:	jns    0x4192c2
  419280:	stc    
  419281:	or     BYTE PTR [ecx+0x21],ah
  419284:	fucomp st(1)
  419286:	(bad)  
  419287:	out    0x47,eax
  419289:	adc    DWORD PTR [edx-0x4b],esp
  41928c:	lods   eax,DWORD PTR ds:[esi]
  41928d:	sub    al,BYTE PTR ds:0xd55ac734
  419293:	lea    esp,[ecx]
  419295:	mov    al,0xd5
  419297:	xchg   DWORD PTR [edx+0x40],ebp
  41929a:	(bad)  
  41929b:	mov    ecx,0x9fc70e4d
  4192a0:	cmc    
  4192a1:	repnz std 
  4192a3:	sbb    ecx,esi
  4192a5:	push   edi
  4192a6:	mov    ds:0x7e478ffd,eax
  4192ab:	xlat   BYTE PTR ds:[ebx]
  4192ac:	pop    es
  4192ad:	aam    0xc4
  4192af:	jge    0x419286
  4192b1:	and    al,0x7f
  4192b3:	mov    dl,0x79
  4192b5:	adc    DWORD PTR [ebp+0x10e7594e],0xbadcded2
  4192bf:	lock enter 0xc728,0x40
  4192c4:	pop    ss
  4192c5:	pop    ebp
  4192c6:	adc    al,0x4e
  4192c8:	mov    edx,0x93ec7d3
  4192cd:	dec    esp
  4192ce:	cld    
  4192cf:	add    BYTE PTR [edx+0x741ea23a],bl
  4192d5:	pop    ss
  4192d6:	int3   
  4192d7:	in     al,0x62
  4192d9:	lea    ebp,[edi+edx*2+0x8b6b51c]
  4192e0:	test   BYTE PTR [ebx+0x447713c],cl
  4192e6:	inc    edi
  4192e7:	scas   eax,DWORD PTR es:[edi]
  4192e8:	inc    esi
  4192e9:	sbb    eax,0x89ceed86
  4192ee:	mov    WORD PTR [edx+0x57ac112b],fs
  4192f4:	sub    DWORD PTR [edx-0x39],0xdc569677
  4192fb:	into   
  4192fc:	sti    
  4192fd:	mov    esp,0x63158c52
  419302:	retf   0x3abd
  419305:	rcl    BYTE PTR [esi-0x4fcdca12],1
  41930b:	add    al,0xb7
  41930d:	sub    al,0x24
  41930f:	outs   dx,DWORD PTR ds:[esi]
  419310:	(bad)  
  419311:	push   ebx
  419312:	pop    ss
  419313:	xchg   edx,eax
  419314:	lock pusha 
  419316:	retf   
  419317:	dec    edx
  419318:	shl    BYTE PTR [edx+0x16],cl
  41931b:	mov    WORD PTR [edi+0x2c],ds
  41931e:	imul   esi,DWORD PTR [edi+edi*8-0x20],0xfffffff0
  419323:	pop    ebx
  419324:	dec    ebp
  419325:	sar    DWORD PTR [esi+edi*1],0xb2
  419329:	je     0x41934b
  41932b:	pop    ebp
  41932c:	lods   eax,DWORD PTR ds:[esi]
  41932d:	jge    0x419349
  41932f:	(bad)  
  419330:	adc    eax,0x47908ff1
  419335:	and    bl,BYTE PTR [eax-0x60]
  419338:	popf   
  419339:	mov    al,0xcc
  41933b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41933c:	cwde   
  41933d:	sahf   
  41933e:	test   esi,0xc4b41446
  419344:	jo     0x41931b
  419346:	ret    
  419347:	or     ah,bh
  419349:	push   eax
  41934a:	outs   dx,DWORD PTR ds:[esi]
  41934b:	mov    ds:0xb433a7fc,al
  419350:	push   ds
  419351:	cmp    al,0x3a
  419353:	jnp    0x419363
  419355:	mov    WORD PTR [ecx],es
  419357:	add    BYTE PTR [edx],bl
  419359:	cld    
  41935a:	cmp    ebp,DWORD PTR ds:0x41aa165a
  419360:	aad    0x88
  419362:	cld    
  419363:	mov    ecx,0xa0b14e35
  419368:	(bad)  
  419369:	fcmovu st,st(6)
  41936b:	inc    esi
  41936c:	fsub   DWORD PTR [esi-0x535600a9]
  419372:	cmp    al,0x12
  419374:	sub    dh,BYTE PTR [eax]
  419376:	dec    ebx
  419377:	sub    bl,BYTE PTR [eax+esi*2+0x23]
  41937b:	ins    BYTE PTR es:[edi],dx
  41937c:	pop    es
  41937d:	xor    al,0xe1
  41937f:	cwde   
  419380:	jae    0x419369
  419382:	jp     0x4193e9
  419384:	imul   edi,DWORD PTR [esi-0x1289084a],0xffffffdf
  41938b:	cmp    ch,BYTE PTR [edi+ecx*2]
  41938e:	mov    bl,0xfb
  419390:	popf   
  419391:	das    
  419392:	test   eax,0x26d50bec
  419397:	and    ebx,DWORD PTR [esi]
  419399:	sub    al,0x20
  41939b:	add    al,0xed
  41939d:	cmp    edi,esp
  41939f:	mov    ecx,0xf22ac204
  4193a4:	pop    ss
  4193a5:	xchg   edi,eax
  4193a6:	loopne 0x4193d8
  4193a8:	sbb    ah,dh
  4193aa:	and    eax,0x38c87f02
  4193af:	ret    0x9628
  4193b2:	add    eax,0x21bdc3
  4193b7:	cmp    DWORD PTR ds:0x7dcd2f1a,edx
  4193bd:	ret    0x9657
  4193c0:	ficomp WORD PTR [eax]
  4193c2:	mov    al,ds:0x856dec2f
  4193c7:	add    al,0x66
  4193c9:	add    esp,edi
  4193cb:	mov    bh,0x19
  4193cd:	mov    BYTE PTR [edi],dl
  4193cf:	test   eax,0xff1393cd
  4193d4:	mov    dl,0x87
  4193d6:	shl    BYTE PTR [ebx-0x77],cl
  4193d9:	cdq    
  4193da:	dec    edi
  4193db:	and    al,0xb5
  4193dd:	and    bl,bl
  4193df:	aaa    
  4193e0:	dec    BYTE PTR [ebx]
  4193e2:	cdq    
  4193e3:	pushf  
  4193e4:	lahf   
  4193e5:	aas    
  4193e6:	(bad)  
  4193e7:	in     al,0x76
  4193e9:	adc    DWORD PTR [eax-0x30],eax
  4193ec:	clc    
  4193ed:	test   eax,0xb7c22caa
  4193f2:	xchg   ebx,eax
  4193f3:	inc    ebx
  4193f4:	jne    0x4193f9
  4193f6:	sub    eax,DWORD PTR [ebx]
  4193f8:	cmp    eax,0xc8b7fadd
  4193fd:	fnstsw WORD PTR [edi-0x2b]
  419400:	daa    
  419401:	xchg   DWORD PTR [edi+eax*4],esp
  419404:	inc    ebx
  419405:	mov    bh,0xf4
  419407:	mov    al,0xa0
  419409:	sub    al,0xa7
  41940b:	mov    ecx,0x43cb2fa6
  419410:	popa   
  419411:	sub    al,0x57
  419413:	(bad)  
  419414:	inc    ebx
  419415:	add    ah,BYTE PTR ds:0x9dac96f7
  41941b:	into   
  41941c:	in     al,0x8b
  41941e:	(bad)  
  41941f:	sub    al,0x3a
  419421:	fwait
  419422:	(bad)  
  419423:	jns    0x419426
  419425:	jnp    0x4194a0
  419427:	push   edi
  419428:	fdiv   QWORD PTR [esi-0x53]
  41942b:	mov    edi,0xab61cc4f
  419430:	test   eax,0xe75d1082
  419435:	mov    ch,0xa4
  419437:	arpl   WORD PTR [ebx-0x4f],ax
  41943a:	mov    ebp,0x31256bce
  41943f:	inc    edx
  419440:	mov    WORD PTR [ebx+0x5f],es
  419443:	test   al,dh
  419445:	inc    ecx
  419446:	inc    edx
  419447:	pop    ss
  419448:	icebp  
  419449:	mov    eax,ds:0x6dca17a0
  41944e:	fcom   DWORD PTR [ebx+0x63a1886]
  419454:	ja     0x419499
  419456:	add    cl,dl
  419458:	add    al,0x86
  41945a:	mov    ds:0x68f1f4cd,eax
  41945f:	push   esi
  419460:	mov    al,ds:0xcfe4c5eb
  419465:	pop    edx
  419466:	std    
  419467:	out    dx,eax
  419468:	xor    dl,bh
  41946a:	push   edi
  41946b:	out    dx,eax
  41946c:	sub    esp,ecx
  41946e:	xchg   ebx,eax
  41946f:	xor    dl,BYTE PTR [eax+0x72]
  419472:	jp     0x41943d
  419474:	xchg   DWORD PTR [eax+edi*1+0x7f632eb4],ecx
  41947b:	loopne 0x419419
  41947d:	shr    bl,0x87
  419480:	stc    
  419481:	xor    DWORD PTR [edx+0x7f750729],edi
  419487:	mov    ds:0x8052a960,eax
  41948c:	retf   
  41948d:	repnz sub DWORD PTR [ecx+0x7563c306],ebp
  419494:	sub    esi,edi
  419496:	sub    esp,DWORD PTR [eax]
  419498:	fwait
  419499:	ds shl ebx,0x8e
  41949d:	sub    ecx,DWORD PTR [eax]
  41949f:	pop    ecx
  4194a0:	icebp  
  4194a1:	out    dx,al
  4194a2:	out    0xaa,al
  4194a4:	inc    ebp
  4194a5:	das    
  4194a6:	out    0xe1,al
  4194a8:	xor    ebx,DWORD PTR [esi+edx*4]
  4194ab:	xchg   BYTE PTR [edi+0x7a],ch
  4194ae:	popf   
  4194af:	sbb    DWORD PTR [ecx],edi
  4194b1:	cld    
  4194b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b3:	int    0xaa
  4194b5:	push   0xaa004d1a
  4194ba:	adc    DWORD PTR [ecx],edi
  4194bc:	jp     0x419538
  4194be:	jae    0x41947b
  4194c0:	pop    ecx
  4194c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c2:	imul   eax,DWORD PTR [edi+0x4d2b6663],0xfffffffc
  4194c9:	loopne 0x4194f5
  4194cb:	sub    eax,ecx
  4194cd:	hlt    
  4194ce:	fstp   QWORD PTR [esp+eiz*4]
  4194d1:	xchg   esi,eax
  4194d2:	cmp    DWORD PTR ds:0xb69cddce,ebx
  4194d8:	shl    BYTE PTR [edx-0x48eac6bc],cl
  4194de:	mov    ds:0x8ef8573e,eax
  4194e3:	lea    ebp,[ebx-0x2f1a02cb]
  4194e9:	add    eax,0xf11ec20c
  4194ef:	hlt    
  4194f0:	mov    ds:0x5d2274b4,al
  4194f5:	and    ebp,DWORD PTR [ecx]
  4194f7:	in     eax,0x76
  4194f9:	mov    ds:0x1cd1ee78,al
  4194fe:	pushf  
  4194ff:	mov    eax,0xe412d677
  419504:	inc    ebp
  419505:	ins    DWORD PTR es:[edi],dx
  419506:	aad    0x67
  419508:	ret    
  419509:	mov    ah,0xdc
  41950b:	scas   al,BYTE PTR es:[edi]
  41950c:	and    eax,DWORD PTR [eax]
  41950e:	std    
  41950f:	bound  esp,QWORD PTR [esi-0x7f]
  419512:	mov    cx,0xaf6a
  419516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419517:	xchg   edi,eax
  419518:	sbb    edx,DWORD PTR [ecx-0x4a]
  41951b:	inc    ebp
  41951c:	push   edx
  41951d:	xlat   BYTE PTR ds:[ebx]
  41951e:	push   ebx
  41951f:	mov    ah,0x59
  419521:	cmp    eax,0x4a62b9eb
  419526:	xchg   ebx,eax
  419527:	add    esp,esp
  419529:	xchg   ebx,eax
  41952a:	xchg   ebx,eax
  41952b:	lahf   
  41952c:	ss daa 
  41952e:	mov    DWORD PTR [edi-0x1f],ebp
  419531:	outs   dx,BYTE PTR ds:[esi]
  419532:	sbb    eax,0x72536a4b
  419537:	lds    esi,FWORD PTR [edx+edx*4+0x46]
  41953b:	xchg   ebx,eax
  41953c:	dec    ecx
  41953d:	dec    ebp
  41953e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41953f:	rcr    BYTE PTR [ecx],1
  419541:	sub    eax,0x7a9cb1d9
  419546:	jns    0x419523
  419548:	out    0xf2,ax
  41954b:	mov    esp,0x8430aab7
  419550:	dec    eax
  419551:	test   eax,0x17f69f2a
  419556:	add    ecx,DWORD PTR [edi-0x587ab6ef]
  41955c:	fbld   TBYTE PTR [eax]
  41955e:	lea    ebx,[ebx+0x7462ce3]
  419564:	add    DWORD PTR [ecx-0x673f02fb],ebp
  41956a:	dec    ebx
  41956b:	cmp    ch,al
  41956d:	mov    ebx,0x1e60aa73
  419572:	and    esi,eax
  419574:	push   eax
  419575:	mov    edx,ebp
  419577:	call   0xd019:0x10d801d8
  41957e:	shl    DWORD PTR cs:[ebx+0x6d5b44bc],cl
  419585:	mov    edx,0xeb015b73
  41958a:	in     eax,0x41
  41958c:	dec    edi
  41958d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41958e:	popa   
  41958f:	jge    0x419513
  419591:	xor    eax,0xb1afc5b2
  419596:	daa    
  419597:	nop
  419598:	inc    ecx
  419599:	xchg   esp,eax
  41959a:	inc    ebp
  41959b:	mov    eax,0x8a95bef1
  4195a0:	arpl   WORD PTR [edx-0x7b],bp
  4195a3:	imul   esp,DWORD PTR [edi+0x7a368853],0x4e
  4195aa:	daa    
  4195ab:	dec    ebp
  4195ac:	mov    ch,0xf5
  4195ae:	fild   QWORD PTR [edi]
  4195b0:	sub    al,0xa9
  4195b2:	cmc    
  4195b3:	jno    0x419625
  4195b5:	sub    dl,ch
  4195b7:	sub    ebp,DWORD PTR [edi-0x7167dff1]
  4195bd:	cld    
  4195be:	pop    esi
  4195bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195c0:	adc    ebx,ebx
  4195c2:	mov    ecx,eax
  4195c4:	test   BYTE PTR [eax],0x82
  4195c7:	fisttp QWORD PTR [ebx]
  4195c9:	lods   eax,DWORD PTR ds:[esi]
  4195ca:	loopne 0x4195ba
  4195cc:	retf   
  4195cd:	mov    edx,ebx
  4195cf:	pop    eax
  4195d0:	enter  0xb9b9,0x2d
  4195d4:	or     BYTE PTR [ebp-0x8],bl
  4195d7:	sahf   
  4195d8:	lahf   
  4195d9:	cmp    cl,BYTE PTR [edx]
  4195db:	pusha  
  4195dc:	xchg   ebp,edi
  4195de:	inc    esp
  4195df:	stc    
  4195e0:	mov    eax,0xd1d91108
  4195e5:	lahf   
  4195e6:	repz mov ebx,0x377c05ae
  4195ec:	popf   
  4195ed:	(bad)  
  4195ef:	add    al,0x8c
  4195f1:	pop    es
  4195f2:	in     al,dx
  4195f3:	sbb    BYTE PTR [ebx],ch
  4195f5:	push   ebx
  4195f6:	jns    0x4195d8
  4195f8:	mov    esi,0xd098cb3f
  4195fd:	retf   0x7381
  419600:	add    al,0xd8
  419602:	fdivr  DWORD PTR [ecx]
  419604:	out    0xd6,al
  419606:	cmp    al,0x2a
  419608:	(bad)  
  419609:	sbb    al,0x97
  41960b:	shl    DWORD PTR [edx-0x33],0xf4
  41960f:	cmp    ch,BYTE PTR [eax]
  419611:	ins    BYTE PTR es:[edi],dx
  419612:	mov    fs,WORD PTR [esi+0x66]
  419615:	push   ebx
  419616:	xchg   ebp,eax
  419617:	fstp   st(2)
  419619:	out    dx,al
  41961a:	outs   dx,DWORD PTR ds:[esi]
  41961b:	mov    bl,0x4a
  41961d:	fs stos DWORD PTR es:[edi],eax
  41961f:	push   esp
  419620:	jbe    0x419660
  419622:	mov    al,0xce
  419624:	stos   DWORD PTR es:[edi],eax
  419625:	sbb    DWORD PTR [ebp+0x1c],0x22
  419629:	pop    ebx
  41962a:	in     eax,0x37
  41962c:	inc    edx
  41962d:	and    edi,DWORD PTR [edx-0x25e28d88]
  419633:	xor    bh,BYTE PTR [edi+0x67e4cb0e]
  419639:	sbb    al,0x5f
  41963b:	push   cs
  41963c:	test   DWORD PTR [ebx],edx
  41963e:	pusha  
  41963f:	sub    cl,BYTE PTR [edx+0x29ff0c58]
  419645:	lock lahf 
  419647:	and    eax,0x89e05f51
  41964c:	daa    
  41964d:	cmp    BYTE PTR [edi],ch
  41964f:	or     edx,DWORD PTR [ecx]
  419651:	sub    cl,dh
  419653:	mov    bl,0x5e
  419655:	test   eax,0xa17877e6
  41965a:	sub    dh,ch
  41965c:	xchg   edi,eax
  41965d:	inc    ebx
  41965e:	mov    edx,DWORD PTR [edx+0x2b6092cc]
  419664:	sbb    DWORD PTR [ecx],ebx
  419666:	je     0x419669
  419668:	out    dx,al
  419669:	mov    edi,es
  41966b:	out    0x0,eax
  41966d:	cmp    DWORD PTR [edx+edi*1+0x15],edi
  419671:	dec    ebx
  419672:	mov    ah,0x9d
  419674:	jg     0x4196d5
  419676:	retf   
  419677:	out    dx,eax
  419678:	(bad)  
  419679:	icebp  
  41967a:	add    ah,0x8d
  41967d:	mov    ?,WORD PTR [ebx-0x5]
  419680:	enter  0x2c3c,0x12
  419684:	imul   eax,DWORD PTR [edi+0x34],0xffffffb8
  419688:	out    0x80,al
  41968a:	or     al,0x7e
  41968c:	dec    ebx
  41968d:	stos   BYTE PTR es:[edi],al
  41968e:	dec    ebp
  41968f:	or     eax,0xcca49a4c
  419694:	mov    edx,0x1312caaf
  419699:	sbb    eax,DWORD PTR [eax+eiz*1]
  41969c:	inc    eax
  41969d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41969e:	sahf   
  41969f:	xchg   BYTE PTR [ebx-0x61280090],dh
  4196a5:	xchg   BYTE PTR [esi-0x644b1d89],dl
  4196ab:	lock dec ecx
  4196ad:	into   
  4196ae:	rcr    DWORD PTR [edi-0x5c],cl
  4196b1:	test   eax,0x9206cae7
  4196b6:	gs ja  0x4196cb
  4196b9:	mov    ds:0xdda98a43,eax
  4196be:	aam    0x91
  4196c0:	cmp    bh,BYTE PTR [edi+ecx*1-0x1cdc3905]
  4196c7:	jno    0x4196eb
  4196c9:	sbb    edx,ebx
  4196cb:	ds pop ebp
  4196cd:	sbb    al,0x2f
  4196cf:	int    0xff
  4196d1:	mov    bl,0xba
  4196d3:	mov    ebp,0xcb1a5852
  4196d8:	inc    edx
  4196d9:	repnz cmp ax,0xc561
  4196de:	jno    0x41971b
  4196e0:	xchg   ebx,eax
  4196e1:	sub    esp,DWORD PTR [ebx]
  4196e3:	jo     0x419694
  4196e5:	xchg   BYTE PTR [edi+0x3d],al
  4196e8:	add    BYTE PTR [ecx+0x6f],cl
  4196eb:	sub    DWORD PTR [esi-0x1ba1ef5b],edx
  4196f1:	adc    BYTE PTR [eax-0x37],0xcf
  4196f5:	cld    
  4196f6:	jp     0x419755
  4196f8:	adc    eax,0xc6945590
  4196fd:	in     al,0x5e
  4196ff:	xor    BYTE PTR [esi-0x73bc822],ch
  419705:	cdq    
  419706:	loopne 0x4196f0
  419708:	ret    0x221d
  41970b:	out    0x91,al
  41970d:	dec    edx
  41970e:	pop    ds
  41970f:	test   BYTE PTR [eax],dh
  419711:	pop    ebp
  419712:	add    eax,DWORD PTR [edi]
  419714:	mov    ds:0x3cf0a573,al
  419719:	xor    edx,DWORD PTR [ebp+0x75]
  41971c:	sbb    esp,DWORD PTR [ebp+eax*4+0x5]
  419720:	or     BYTE PTR [ecx],dh
  419722:	shl    BYTE PTR [edi+0x3b],1
  419725:	leave  
  419726:	inc    ebp
  419727:	andnps xmm2,xmm6
  41972a:	add    eax,0xb4959486
  41972f:	in     eax,0xe0
  419731:	fdiv   QWORD PTR fs:[eax-0x7407272]
  419738:	mov    esp,0x7bb5838d
  41973d:	out    dx,eax
  41973e:	into   
  41973f:	push   edx
  419740:	enter  0xf01d,0xa5
  419744:	lock xor BYTE PTR [edi-0x7d],0x26
  419749:	fiadd  WORD PTR [edi]
  41974b:	in     al,0x6f
  41974d:	and    eax,0x6c6943a4
  419752:	cli    
  419753:	(bad)  
  419754:	mov    DWORD PTR [edi],ebp
  419756:	clc    
  419757:	pop    esi
  419758:	fidivr DWORD PTR [esi-0x68b02d4c]
  41975e:	mov    al,ds:0x6cef5d6
  419763:	mov    ebp,0xf1a9b765
  419768:	fimul  WORD PTR [esi+0x13c097c2]
  41976e:	retf   
  41976f:	sbb    al,0xff
  419771:	cld    
  419772:	mov    eax,ds:0x2ff01ad5
  419777:	sub    esp,DWORD PTR [ecx+0x11]
  41977a:	ins    DWORD PTR es:[edi],dx
  41977b:	or     eax,0xef55314c
  419780:	pop    ecx
  419781:	ja     0x419716
  419783:	adc    DWORD PTR [ecx-0x28d5547a],ecx
  419789:	xor    DWORD PTR [edi],edi
  41978b:	sub    esi,eax
  41978d:	mov    cl,0x75
  41978f:	in     eax,dx
  419790:	mov    eax,0x411f8e7c
  419795:	xchg   BYTE PTR [edi+0x1743dadf],dl
  41979b:	sbb    eax,0x574dc5a0
  4197a0:	mov    esi,esp
  4197a2:	xlat   BYTE PTR ds:[ebx]
  4197a3:	popf   
  4197a4:	inc    ecx
  4197a5:	imul   edi,DWORD PTR gs:[ebp+0x4c76b41b],0x1fdfcce7
  4197b0:	scas   al,BYTE PTR es:[edi]
  4197b1:	sub    BYTE PTR cs:[edx+0x18],dh
  4197b5:	xchg   BYTE PTR [ecx+0x60],ah
  4197b8:	out    0xf1,eax
  4197ba:	test   al,0x8
  4197bc:	int    0x1a
  4197be:	cmp    BYTE PTR [ebp+0x50],ch
  4197c1:	sbb    DWORD PTR [edx],0x8
  4197c4:	(bad)  
  4197c5:	fstp   QWORD PTR [ecx]
  4197c7:	push   ds
  4197c8:	mov    eax,0xd684375d
  4197cd:	lds    eax,FWORD PTR gs:[esi+ebx*4+0x11da4c8f]
  4197d5:	cs mov eax,0x2d0c15ef
  4197db:	popf   
  4197dc:	cmp    eax,DWORD PTR [esi]
  4197de:	lea    ebx,[eax+0x173e9623]
  4197e4:	sub    ebx,ebx
  4197e6:	loope  0x4197b3
  4197e8:	push   ds
  4197e9:	lock mov ebx,0x33ed9f87
  4197ef:	cmp    edx,esi
  4197f1:	test   al,0xf2
  4197f3:	imul   ebp,DWORD PTR [edi+0x700f0197],0xe524fcec
  4197fd:	pushf  
  4197fe:	retf   0xcd2e
  419801:	xchg   edx,eax
  419803:	icebp  
  419804:	cli    
  419805:	cdq    
  419806:	test   al,0x71
  419808:	adc    esi,DWORD PTR [ebx+esi*4]
  41980b:	mov    esp,0x8b3dd11e
  419810:	sbb    ecx,DWORD PTR [ebp+0x4b]
  419813:	xchg   dl,dl
  419815:	pop    ebp
  419816:	in     al,0x38
  419818:	and    ch,0x8d
  41981b:	jp     0x4197bf
  41981d:	jnp    0x4197c4
  41981f:	xchg   edx,eax
  419820:	push   ebx
  419821:	cmp    al,0x83
  419823:	lods   al,BYTE PTR ds:[esi]
  419824:	inc    ecx
  419825:	sub    esp,ebx
  419827:	push   ebx
  419828:	xchg   edx,eax
  419829:	cmp    dl,BYTE PTR [edi+0x651c8291]
  41982f:	cmp    DWORD PTR [ebp-0x6add43ba],esp
  419835:	cmp    al,0x8d
  419837:	dec    edx
  419838:	dec    eax
  419839:	fisttp DWORD PTR [ebx]
  41983b:	mov    bh,0xcf
  41983d:	ja     0x419863
  41983f:	mov    ebp,0x132a49a6
  419844:	(bad)  [edx-0x31]
  419847:	jb     0x419834
  419849:	jb     0x4198c7
  41984b:	cmp    al,0x39
  41984d:	pusha  
  41984e:	pop    edi
  41984f:	ret    0x6f12
  419852:	fwait
  419853:	pop    ebp
  419854:	jge    0x4198b4
  419856:	jne    0x4198cf
  419858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419859:	enter  0xa13c,0x81
  41985d:	test   BYTE PTR [edx+0x20271d5f],bl
  419863:	daa    
  419864:	inc    ebx
  419865:	les    ebp,FWORD PTR [edx]
  419867:	add    ch,dh
  419869:	rcl    DWORD PTR [eax+edx*1-0x1afd0dc7],1
  419870:	mov    ebp,0x38f848e7
  419875:	add    al,0xf2
  419877:	dec    ebx
  419878:	sysexit 
  41987a:	ret    
  41987b:	out    dx,al
  41987c:	push   ss
  41987d:	push   ebp
  41987e:	or     DWORD PTR [ebx],ebp
  419880:	ret    0xb401
  419883:	fstp   DWORD PTR [eax-0x77]
  419886:	mov    ds:0xdc152314,eax
  41988b:	mov    eax,ecx
  41988d:	call   0xbc5d:0x3e161f65
  419894:	stos   BYTE PTR es:[edi],al
  419895:	(bad)  
  419896:	fcmovu st,st(3)
  419898:	sub    BYTE PTR [edx+0x1c],ch
  41989b:	ins    DWORD PTR es:[edi],dx
  41989c:	ret    
  41989d:	lods   al,BYTE PTR ds:[esi]
  41989e:	xchg   dl,ch
  4198a0:	out    dx,eax
  4198a1:	jae    0x41984f
  4198a3:	cmp    edx,DWORD PTR [ecx-0x45]
  4198a6:	and    eax,0x4be55c0
  4198ab:	inc    ebx
  4198ac:	pop    si
  4198ae:	pop    edx
  4198af:	out    dx,al
  4198b0:	lock or ebp,DWORD PTR [ebx]
  4198b3:	xchg   esi,eax
  4198b4:	cmc    
  4198b5:	cmp    BYTE PTR [ebp-0x4f6a73a],al
  4198bb:	or     ecx,DWORD PTR [edi+0x39]
  4198be:	data16 repz stc 
  4198c1:	ficomp WORD PTR [ebx-0x31]
  4198c4:	push   ecx
  4198c5:	xchg   ebp,eax
  4198c6:	and    dh,bh
  4198c8:	daa    
  4198c9:	adc    DWORD PTR [ecx],esp
  4198cb:	cmp    dl,BYTE PTR [ecx+0x75]
  4198ce:	test   al,0x7
  4198d0:	pop    ss
  4198d1:	push   esp
  4198d2:	or     DWORD PTR [edx+0x3f],ebp
  4198d5:	cwde   
  4198d6:	push   ecx
  4198d7:	arpl   bp,si
  4198d9:	xchg   edx,eax
  4198da:	shl    DWORD PTR [edi+eax*1],1
  4198dd:	gs je  0x4198cf
  4198e0:	jae    0x41995a
  4198e2:	or     ch,ah
  4198e4:	aam    0xa5
  4198e6:	call   edx
  4198e8:	fiadd  WORD PTR [esi-0x31]
  4198eb:	mov    ebp,ebx
  4198ed:	adc    eax,0xd44d848f
  4198f2:	mov    ebx,0xc6894e02
  4198f7:	and    al,0x4f
  4198f9:	lds    eax,FWORD PTR [eax]
  4198fb:	xchg   edi,eax
  4198fc:	xor    BYTE PTR [edx-0x3af65473],0xc
  419903:	mov    DWORD PTR [ebx+0x2bf02d6f],ebx
  419909:	mov    ds:0x8aadad81,eax
  41990e:	dec    edi
  41990f:	and    al,al
  419911:	dec    esi
  419912:	aaa    
  419913:	call   0x8909fad4
  419918:	xor    DWORD PTR ds:0x1b748316,esi
  41991e:	ins    DWORD PTR es:[edi],dx
  41991f:	add    ebx,DWORD PTR [ebx+0x47550e39]
  419925:	es data16 jg 0x419936
  419929:	sub    BYTE PTR [edx],cl
  41992b:	repnz xor esp,0x1ad8d52f
  419932:	sbb    bl,ch
  419934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419935:	cdq    
  419936:	clc    
  419937:	lds    ebx,FWORD PTR [ecx-0x3bf83c1e]
  41993d:	sub    eax,DWORD PTR [eax]
  41993f:	or     BYTE PTR [edi+0x38916147],ch
  419945:	xor    DWORD PTR [edi],eax
  419947:	cwde   
  419948:	pop    ebx
  419949:	imul   eax,DWORD PTR [edi-0x6c],0x7f377f9f
  419950:	arpl   WORD PTR [edi-0x2e],dx
  419953:	mov    DWORD PTR [edx-0x80],ecx
  419956:	xchg   ecx,eax
  419957:	lds    ecx,FWORD PTR [edi+0x1d]
  41995a:	sbb    BYTE PTR [ecx-0x79],ch
  41995d:	add    ebp,ecx
  41995f:	cwd    
  419961:	retf   0xdd20
  419964:	(bad)  
  419965:	loopne 0x419905
  419967:	call   0xae0c5618
  41996c:	in     eax,dx
  41996d:	sahf   
  41996e:	pop    es
  41996f:	push   esi
  419970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419971:	or     al,0xc7
  419973:	or     edi,DWORD PTR [esi]
  419975:	pop    ss
  419976:	std    
  419977:	enter  0x18ed,0xdc
  41997b:	mov    WORD PTR [ebp+0x5a],ds
  41997e:	xchg   DWORD PTR [eax+esi*2+0x707e3b53],esp
  419985:	push   ebp
  419986:	add    BYTE PTR [ebx+0x3be9ffc3],cl
  41998c:	jae    0x4199a2
  41998e:	inc    ebp
  41998f:	into   
  419990:	jl     0x4199ef
  419992:	jl     0x4199ce
  419994:	or     bl,BYTE PTR [edi+0x2e]
  419997:	fcomp  st(5)
  419999:	iret   
  41999a:	cmp    BYTE PTR [ebx+0x507b20a6],cl
  4199a0:	loope  0x419931
  4199a2:	(bad)  
  4199a3:	mov    al,0x4
  4199a5:	fist   DWORD PTR [ebx-0x64]
  4199a8:	push   edx
  4199a9:	lds    eax,FWORD PTR [edx]
  4199ab:	xchg   edx,eax
  4199ac:	sub    esp,ecx
  4199ae:	pop    ebx
  4199af:	(bad)  
  4199b0:	je     0x419985
  4199b2:	sub    al,0xc2
  4199b4:	fisttp QWORD PTR [edx+ebp*1+0x51848838]
  4199bb:	hlt    
  4199bc:	cmp    ecx,DWORD PTR [edx+0x19]
  4199bf:	or     ah,BYTE PTR [ebx]
  4199c1:	leave  
  4199c2:	push   ebp
  4199c3:	mov    ch,0xd8
  4199c5:	adc    al,0xfb
  4199c7:	leave  
  4199c8:	(bad)  
  4199c9:	and    DWORD PTR [edi],esi
  4199cb:	out    0xee,eax
  4199cd:	(bad)  
  4199ce:	mov    eax,DWORD PTR [esi+0x16]
  4199d1:	mov    ecx,0x272385d2
  4199d6:	or     DWORD PTR [ecx+ecx*4],ebx
  4199d9:	inc    ebp
  4199da:	frstor [ebp+0x7d]
  4199dd:	loopne 0x419a3f
  4199df:	pop    es
  4199e0:	out    0xae,eax
  4199e2:	pop    ebx
  4199e3:	scas   eax,DWORD PTR es:[edi]
  4199e4:	notrack jmp DWORD PTR [ecx]
  4199e7:	mov    WORD PTR [ecx+ebp*2+0x7e],ss
  4199eb:	mov    edi,0x5d760a1b
  4199f0:	pop    ecx
  4199f1:	mov    bh,dl
  4199f3:	xchg   ebp,eax
  4199f4:	imul   edi,DWORD PTR [ecx+0x8],0x1
  4199f8:	inc    esi
  4199f9:	jb     0x41997c
  4199fb:	and    DWORD PTR [edx-0x39],edi
  4199fe:	(bad)  
  4199ff:	pop    ss
  419a00:	add    dh,BYTE PTR [edi]
  419a02:	scas   eax,DWORD PTR es:[edi]
  419a03:	sub    edi,ebp
  419a05:	add    DWORD PTR [esi+0x2d312ce0],esi
  419a0b:	mov    ds:0xa068e5fe,al
  419a10:	lock (bad) 
  419a12:	fcmovb st,st(2)
  419a14:	xlat   BYTE PTR ds:[ebx]
  419a15:	pop    edi
  419a16:	jnp    0x419a23
  419a18:	shl    DWORD PTR [ecx-0x2ce9f5d5],0x35
  419a1f:	lock cli 
  419a21:	mov    ebx,ss
  419a23:	mov    WORD PTR [esi-0x6540d0b8],fs
  419a29:	pop    esp
  419a2a:	adc    BYTE PTR [ebx],0x78
  419a2d:	and    BYTE PTR [edx],ch
  419a2f:	fisttp DWORD PTR ss:[edi+0x51]
  419a33:	push   ss
  419a34:	mov    ds:0x5a9cfe12,al
  419a39:	sahf   
  419a3a:	stos   BYTE PTR es:[edi],al
  419a3b:	xchg   edi,eax
  419a3c:	dec    ecx
  419a3d:	mov    WORD PTR [ecx+0xa],fs
  419a40:	add    ebp,DWORD PTR [edi+0x76fb50a2]
  419a46:	out    0x7c,eax
  419a48:	jmp    0x886c:0xf985d51c
  419a4f:	popa   
  419a50:	out    dx,al
  419a51:	nop
  419a52:	adc    esp,esi
  419a54:	adc    BYTE PTR [eax],0x63
  419a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a58:	adc    BYTE PTR [edi-0x36],dl
  419a5b:	fwait
  419a5c:	jo     0x419ad4
  419a5e:	test   eax,0x458186fd
  419a63:	mov    ah,0x1f
  419a65:	mov    ebx,0x46298108
  419a6a:	not    DWORD PTR ds:0x2120e8ee
  419a70:	in     al,0xd7
  419a72:	aad    0xb6
  419a74:	push   ebx
  419a75:	mov    edi,0x1276f891
  419a7a:	mov    al,0xba
  419a7c:	loop   0x419af2
  419a7e:	xchg   edx,eax
  419a7f:	mov    ?,WORD PTR [ecx-0x5d31f02e]
  419a85:	mov    edi,0x7a116f46
  419a8a:	and    dh,BYTE PTR [eax-0x1b]
  419a8d:	mov    cl,0xe9
  419a8f:	lock ja 0x419aac
  419a92:	(bad)
  419a95:	mov    ebx,0xf2903fdf
  419a9a:	inc    eax
  419a9b:	push   ebx
  419a9c:	pop    edi
  419a9d:	dec    edi
  419a9e:	xchg   ebp,eax
  419a9f:	popf   
  419aa0:	or     eax,0xaddc8492
  419aa5:	push   ss
  419aa6:	xor    edi,DWORD PTR [ebp-0x37]
  419aa9:	arpl   WORD PTR [esi+0x49],si
  419aac:	mov    bh,0x8f
  419aae:	xchg   edx,eax
  419aaf:	push   esp
  419ab0:	imul   ebp,DWORD PTR [ebp+0x1],0xe9851dae
  419ab7:	das    
  419ab8:	pop    ebx
  419ab9:	call   0xf5c72ce
  419abe:	inc    esp
  419abf:	adc    al,al
  419ac1:	push   es
  419ac2:	push   esi
  419ac3:	scas   al,BYTE PTR es:[edi]
  419ac4:	jmp    0x25ea:0xfa86f843
  419acb:	stos   BYTE PTR es:[edi],al
  419acc:	jmp    0x419ac5
  419ace:	rcr    DWORD PTR [eax+0xf],0xc4
  419ad2:	hlt    
  419ad3:	std    
  419ad4:	lods   eax,DWORD PTR ds:[esi]
  419ad5:	fld    DWORD PTR ds:[esi-0x62]
  419ad9:	cmc    
  419ada:	rcr    DWORD PTR [esi-0x35],cl
  419add:	retf   0x6de6
  419ae0:	in     al,0x75
  419ae2:	jp     0x419a8b
  419ae4:	pop    ebp
  419ae5:	ins    DWORD PTR es:[edi],dx
  419ae6:	out    dx,eax
  419ae7:	sti    
  419ae8:	pop    ds
  419ae9:	mov    al,0xf9
  419aeb:	sbb    bl,dh
  419aed:	std    
  419aee:	arpl   WORD PTR fs:[ecx+0x7246094],cx
  419af5:	xchg   edi,eax
  419af6:	pop    ss
  419af7:	sbb    dh,cl
  419af9:	jp     0x419b5c
  419afb:	xor    ah,cl
  419afd:	fst    DWORD PTR [eax+0x1d]
  419b00:	scas   eax,DWORD PTR es:[edi]
  419b01:	pop    ebp
  419b02:	je     0x419adc
  419b04:	sub    cl,BYTE PTR [edx+0x67]
  419b07:	aam    0x39
  419b09:	mov    esp,0xfb172160
  419b0e:	int    0xbe
  419b10:	in     al,dx
  419b11:	mov    dh,ch
  419b13:	dec    ecx
  419b14:	cmp    ecx,DWORD PTR [ebx+0x21]
  419b17:	sub    al,0xb9
  419b19:	fdivp  st(7),st
  419b1b:	cs pushf 
  419b1d:	pop    ebx
  419b1e:	xchg   esp,eax
  419b1f:	ret    0x81e1
  419b22:	adc    al,0xab
  419b24:	fs jo  0x419b6a
  419b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b28:	out    dx,eax
  419b29:	rcl    DWORD PTR [ecx-0x3e],cl
  419b2c:	call   0xa4db1ddc
  419b31:	lds    esi,FWORD PTR [edx+ebp*1]
  419b34:	mov    al,0xa0
  419b36:	push   edi
  419b37:	test   eax,0xa86732f
  419b3c:	push   ss
  419b3d:	and    ebp,DWORD PTR [esp+ebx*8-0x627e9eb4]
  419b44:	into   
  419b45:	inc    esi
  419b46:	adc    al,BYTE PTR [edi-0x15b254af]
  419b4c:	xchg   esi,eax
  419b4d:	mov    ecx,0x948c036b
  419b52:	test   eax,0xb2575276
  419b57:	mov    cl,0xd4
  419b59:	jmp    0x419ae9
  419b5b:	dec    esp
  419b5c:	ds rcl bl,0x79
  419b60:	std    
  419b61:	inc    eax
  419b62:	out    0x55,eax
  419b64:	inc    ebx
  419b65:	sbb    eax,0xf7643ee7
  419b6a:	jecxz  0x419bc4
  419b6c:	mov    bl,0x87
  419b6e:	mov    eax,0x8edd909a
  419b73:	adc    DWORD PTR [ecx+0x78],esp
  419b76:	stc    
  419b77:	int    0xc4
  419b79:	mov    ebp,0xdb284e8d
  419b7e:	sbb    esi,DWORD PTR [esp+eax*4-0x80]
  419b82:	fidivr WORD PTR [edi+0x65]
  419b85:	and    ch,BYTE PTR [ecx]
  419b87:	fadd   st(4),st
  419b89:	mov    BYTE PTR [ebx-0x3f7a8528],ah
  419b8f:	fild   QWORD PTR [ebp+0x2c]
  419b92:	out    0x5f,al
  419b94:	sti    
  419b95:	jbe    0x419bd1
  419b97:	shl    BYTE PTR [eax+0x3e],cl
  419b9a:	test   BYTE PTR [ecx+0x21bcc038],0xec
  419ba1:	dec    eax
  419ba2:	pop    ecx
  419ba3:	ret    
  419ba4:	and    eax,0x180122c9
  419ba9:	jge    0x419bc2
  419bab:	xor    eax,esi
  419bad:	mov    esp,0xd7b4f50d
  419bb2:	arpl   WORD PTR ds:0x49794533,bp
  419bb8:	(bad)  
  419bb9:	es sbb dh,ch
  419bbc:	xchg   esi,eax
  419bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bbe:	sbb    eax,0xadb54985
  419bc3:	pop    edx
  419bc4:	pop    ss
  419bc5:	pop    edx
  419bc6:	shl    BYTE PTR [esi+0x58d280d1],cl
  419bcc:	mov    edx,0x9a4ebe3c
  419bd1:	sub    ebx,DWORD PTR [esi]
  419bd3:	sub    DWORD PTR [eax+edx*8+0x2841647],0xc8bf7b3b
  419bde:	jns    0x419bf2
  419be0:	(bad)  
  419be1:	inc    ebx
  419be2:	sbb    eax,0x144e47fa
  419be7:	mov    ebp,0x5cc21f5d
  419bec:	(bad)  
  419bed:	jcxz   0x419c67
  419bf0:	loopne 0x419b79
  419bf2:	int    0xc6
  419bf4:	push   cs
  419bf5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf7:	ja     0x419b84
  419bf9:	xchg   ebp,eax
  419bfa:	push   ebx
  419bfb:	fidiv  WORD PTR [edx]
  419bfd:	std    
  419bfe:	out    dx,al
  419bff:	sub    al,0xaa
  419c01:	mov    bh,BYTE PTR [esi+0x249d1654]
  419c07:	retf   
  419c08:	out    0x98,al
  419c0a:	stos   DWORD PTR es:[edi],eax
  419c0b:	xchg   edx,eax
  419c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c0d:	cmp    esi,DWORD PTR [ebp-0x14d6a2fa]
  419c13:	pop    DWORD PTR [ebx+eax*1+0x1f]
  419c17:	cwde   
  419c18:	mov    ah,0xd6
  419c1a:	mov    DWORD PTR ds:0xec014c28,esp
  419c20:	mov    bh,0xac
  419c22:	mov    cl,0x16
  419c24:	jns    0x419c05
  419c26:	cwde   
  419c27:	scas   al,BYTE PTR es:[edi]
  419c28:	dec    edi
  419c29:	std    
  419c2a:	inc    ecx
  419c2b:	cmp    BYTE PTR [edi+0x2c6bcf75],0x18
  419c32:	adc    DWORD PTR [edx-0x7e],ebp
  419c35:	xchg   esi,eax
  419c36:	push   esp
  419c37:	xchg   ebp,eax
  419c38:	push   0xffffffdd
  419c3a:	(bad)
  419c3d:	xchg   BYTE PTR [esi+0x2326c080],bh
  419c43:	mov    ebx,0x1135e217
  419c48:	sti    
  419c49:	and    edi,DWORD PTR [esi-0x7f]
  419c4c:	(bad)  
  419c4d:	fisubr DWORD PTR [esp+esi*2]
  419c50:	enter  0xc6f7,0x2a
  419c54:	in     eax,dx
  419c55:	idiv   DWORD PTR [edi]
  419c57:	xor    al,0x6c
  419c59:	(bad)
  419c5d:	cmc    
  419c5e:	xor    BYTE PTR [edx-0x2a22ad62],dh
  419c64:	fcom   QWORD PTR [esi-0x28]
  419c67:	retfw  0x71a6
  419c6b:	cmp    BYTE PTR [ecx],0xf8
  419c6e:	jmp    0xb0ba5134
  419c73:	std    
  419c74:	sbb    bl,BYTE PTR [eax+0x14]
  419c77:	sub    ah,BYTE PTR gs:[eax]
  419c7a:	mov    esi,0x88280197
  419c7f:	pusha  
  419c80:	inc    edi
  419c81:	jo     0x419c99
  419c83:	pop    edi
  419c84:	retf   0xcf9c
  419c87:	out    0x94,al
  419c89:	jmp    0x67f5:0xe8406ef5
  419c90:	fimul  DWORD PTR [ecx-0x1a]
  419c93:	sub    DWORD PTR [edi],esi
  419c95:	xor    ebp,DWORD PTR [ebp-0x9e77c4]
  419c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9c:	rol    ecx,0x9b
  419c9f:	jo     0x419d0d
  419ca1:	shr    ah,cl
  419ca3:	cmp    DWORD PTR [ebx+0x41],edx
  419ca6:	ret    0x5579
  419ca9:	sub    esp,ecx
  419cab:	lock jb 0x419c64
  419cae:	vpunpckhbw ymm5,ymm7,YMMWORD PTR [eax]
  419cb2:	mov    eax,ds:0x5fdca66c
  419cb7:	cld    
  419cb8:	fist   WORD PTR [ecx+0x2a]
  419cbb:	push   es
  419cbc:	ret    
  419cbd:	and    al,0xb3
  419cbf:	daa    
  419cc0:	sub    eax,0x60f5463d
  419cc5:	outs   dx,DWORD PTR ds:[esi]
  419cc6:	inc    ebp
  419cc7:	test   al,0x65
  419cc9:	dec    ebx
  419cca:	inc    ecx
  419ccb:	icebp  
  419ccc:	or     eax,0x3e87ce24
  419cd1:	aam    0xa5
  419cd3:	loopne 0x419d51
  419cd5:	pop    es
  419cd6:	mov    esp,0x75c8eab9
  419cdb:	sbb    BYTE PTR [eax-0x8b63e0d],al
  419ce1:	add    eax,DWORD PTR [edi+ecx*2-0x6a4417dc]
  419ce8:	xchg   esi,eax
  419ce9:	lea    edi,[ebx+edx*4-0x56]
  419ced:	ret    0x329e
  419cf0:	(bad)  
  419cf1:	jge    0x419d02
  419cf3:	inc    ebp
  419cf4:	sub    ebp,DWORD PTR [ebx]
  419cf6:	adc    al,0x67
  419cf8:	bound  esp,QWORD PTR [edx-0xc1ec003]
  419cfe:	adc    dl,ch
  419d00:	mov    dh,0xe6
  419d02:	mov    dh,0x65
  419d04:	ret    
  419d05:	fldcw  WORD PTR [edx]
  419d07:	test   eax,0x4e9c8e72
  419d0c:	push   eax
  419d0d:	pop    ecx
  419d0e:	adc    eax,0x8fa7aa9c
  419d13:	cmp    eax,0x6357329b
  419d18:	or     BYTE PTR [ebp+0xc600df7],ah
  419d1e:	call   0xe19e0d85
  419d23:	jno    0x419cbe
  419d25:	jle    0x419d0d
  419d27:	pop    ebp
  419d28:	lods   eax,DWORD PTR ds:[esi]
  419d29:	jno    0x419d39
  419d2b:	mov    ebp,0xf0d71d0
  419d30:	test   al,0x68
  419d32:	xchg   edx,eax
  419d33:	pop    edx
  419d34:	pop    edi
  419d35:	outs   dx,BYTE PTR ds:[esi]
  419d36:	xchg   esi,eax
  419d37:	jmp    0xce18:0x95bba31a
  419d3e:	add    al,BYTE PTR [ebx-0x6dd1fb54]
  419d44:	push   ecx
  419d45:	fidiv  DWORD PTR [edi]
  419d47:	cs push esp
  419d49:	xor    BYTE PTR ds:0xfc184038,bh
  419d4f:	mov    ds:0x54398fc5,eax
  419d54:	add    DWORD PTR [ebx+0x4a021fe4],esi
  419d5a:	adc    ebx,DWORD PTR [edi+0x49]
  419d5d:	mov    edx,0xc637ce81
  419d62:	jmp    FWORD PTR [edx-0x132657da]
  419d68:	push   0x81eb4a8e
  419d6d:	jle    0x419d32
  419d6f:	mov    edi,0x6652fa31
  419d74:	push   ss
  419d75:	dec    edi
  419d76:	push   ss
  419d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d78:	rol    DWORD PTR [edi],cl
  419d7a:	test   DWORD PTR [ecx+0x2563ebf2],0x117ffb36
  419d84:	or     DWORD PTR [eax-0x72],ebp
  419d87:	pop    edi
  419d88:	dec    edi
  419d89:	nop
  419d8a:	pop    ds
  419d8b:	inc    esp
  419d8c:	xchg   edx,eax
  419d8d:	push   esi
  419d8e:	icebp  
  419d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d90:	mov    eax,0xa5c9df70
  419d95:	out    dx,al
  419d96:	sub    edx,esi
  419d98:	out    0x9b,eax
  419d9a:	pop    esi
  419d9b:	bound  ebx,QWORD PTR [ebx-0x67]
  419d9e:	lods   al,BYTE PTR ds:[esi]
  419d9f:	xor    DWORD PTR [edi],eax
  419da1:	push   edx
  419da2:	popa   
  419da3:	mov    eax,0x9f6003f1
  419da8:	(bad)  
  419daa:	sbb    bl,BYTE PTR [esi+eiz*1]
  419dad:	mov    ebx,0x2c5be35d
  419db2:	cmp    DWORD PTR [ebx+0x49],ecx
  419db5:	bound  edx,QWORD PTR [eax-0x9]
  419db8:	or     dl,BYTE PTR [ebp+0x5538fe37]
  419dbe:	call   0xe4b2:0x83123e49
  419dc5:	fisttp WORD PTR [edi+0x528f785e]
  419dcb:	jno    0x419de4
  419dcd:	mov    WORD PTR [edx],es
  419dcf:	jmp    0x8353:0x28f82953
  419dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd7:	imul   edx,DWORD PTR [ecx+0x1c],0x73
  419ddb:	shl    BYTE PTR [esp+edx*2-0x5eb41579],0x21
  419de3:	fdivrp st(2),st
  419de5:	dec    edi
  419de6:	test   BYTE PTR [edi+0xdd73c74],dh
  419dec:	jmp    0x113308b4
  419df1:	cdq    
  419df2:	dec    edi
  419df3:	in     al,dx
  419df4:	sbb    eax,0x1d57120a
  419df9:	xchg   BYTE PTR [eax],bl
  419dfb:	cwde   
  419dfc:	adc    DWORD PTR [edi+0x73403bea],ebp
  419e02:	shr    BYTE PTR [ebp-0x12],cl
  419e05:	push   cs
  419e06:	popf   
  419e07:	xor    edi,DWORD PTR [ebp-0x4a018e0f]
  419e0d:	dec    esp
  419e0e:	scas   al,BYTE PTR es:[edi]
  419e0f:	or     ah,ch
  419e11:	es jle 0x419da7
  419e14:	or     DWORD PTR [esi],ebx
  419e16:	add    esp,DWORD PTR [esi-0x375cf488]
  419e1c:	pop    ebp
  419e1d:	mov    ds:0x86341d03,eax
  419e22:	jbe    0x419e53
  419e24:	and    al,dh
  419e26:	add    ebx,eax
  419e28:	je     0x419e8b
  419e2a:	pop    ebp
  419e2b:	mov    bh,dh
  419e2d:	(bad)  
  419e2f:	push   edi
  419e30:	inc    esp
  419e31:	dec    edi
  419e32:	not    dh
  419e34:	popf   
  419e35:	add    WORD PTR [ebx],bx
  419e38:	fcmove st,st(6)
  419e3a:	or     edi,edi
  419e3c:	ins    BYTE PTR es:[edi],dx
  419e3d:	mov    eax,0x7310b0ac
  419e42:	mov    eax,ds:0xc569982a
  419e47:	push   edi
  419e48:	fld    DWORD PTR [edx]
  419e4a:	das    
  419e4b:	je     0x419e9a
  419e4d:	jl     0x419df7
  419e4f:	or     DWORD PTR [eax],0x17943ca0
  419e55:	mov    bh,0x59
  419e57:	mov    eax,0xb0399941
  419e5c:	xor    cl,cl
  419e5e:	dec    esi
  419e5f:	and    ebx,edx
  419e61:	mov    ebp,0xf7e0d274
  419e66:	and    BYTE PTR [edx+0x23],dl
  419e69:	cs (bad) 
  419e6b:	sbb    BYTE PTR [edi-0x76e382e9],bl
  419e71:	jl     0x419e76
  419e73:	or     bh,0x48
  419e76:	call   0x57d63a58
  419e7b:	(bad)  
  419e7c:	ror    BYTE PTR [ebx+0x17],0x59
  419e80:	and    dl,BYTE PTR [ecx-0x79105204]
  419e86:	jno    0x419e0f
  419e88:	test   eax,0x93877e27
  419e8d:	mov    ds:0xa54338dd,eax
  419e92:	lds    edx,FWORD PTR [ebx+0x64]
  419e95:	jmp    0xf88caafd
  419e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e9b:	pop    esp
  419e9c:	cli    
  419e9d:	in     eax,0xf4
  419e9f:	clc    
  419ea0:	aas    
  419ea1:	mov    eax,0xfb2686fc
  419ea6:	jge    0x419e2c
  419ea8:	sbb    cl,BYTE PTR [edi+edi*1]
  419eab:	pop    esp
  419eac:	jg     0x419e77
  419eae:	push   ebx
  419eaf:	pushf  
  419eb0:	jne    0x419e8a
  419eb2:	and    ebp,esp
  419eb4:	pop    ebx
  419eb5:	and    eax,0xcf173e6
  419eba:	ror    DWORD PTR [edi],cl
  419ebc:	mov    dh,0xd0
  419ebe:	outs   dx,DWORD PTR ds:[esi]
  419ebf:	(bad)  
  419ec0:	outs   dx,BYTE PTR ds:[esi]
  419ec1:	mov    bl,0x5b
  419ec3:	les    eax,FWORD PTR [ebp+0x2836ed4c]
  419ec9:	sbb    ah,BYTE PTR [ebp+edi*4-0x3d]
  419ecd:	stc    
  419ece:	rcl    BYTE PTR [edi],1
  419ed0:	add    dh,BYTE PTR [edi+0x7accfae1]
  419ed6:	jno    0x419e7f
  419ed8:	push   ds
  419ed9:	rol    bl,1
  419edb:	paddusb mm0,QWORD PTR [edx]
  419ede:	stos   BYTE PTR es:[edi],al
  419edf:	jp     0x419f38
  419ee1:	push   es
  419ee2:	(bad)  
  419ee4:	xor    bh,bl
  419ee6:	pop    es
  419ee7:	xchg   edx,eax
  419ee8:	push   0x20
  419eea:	jge    0x419ee2
  419eec:	mov    DWORD PTR [ebx],esp
  419eee:	dec    edx
  419eef:	scas   eax,DWORD PTR es:[edi]
  419ef0:	pop    esp
  419ef1:	sar    DWORD PTR [ecx],1
  419ef3:	mov    eax,0x91c12d47
  419ef8:	out    0xfc,eax
  419efa:	je     0x419ec5
  419efc:	lds    ebx,FWORD PTR [ebx+0x605e4e69]
  419f02:	stos   BYTE PTR es:[edi],al
  419f03:	jmp    0x7e784292
  419f08:	fmul   DWORD PTR [edx+0x2cb5ed01]
  419f0e:	pop    ebx
  419f0f:	jne    0x419f6b
  419f11:	outs   dx,BYTE PTR ds:[esi]
  419f12:	outs   dx,BYTE PTR ds:[esi]
  419f13:	mov    eax,ds:0x3efadd5
  419f18:	es and eax,0xd6aac0dc
  419f1e:	inc    esp
  419f1f:	xor    al,0x33
  419f21:	popf   
  419f22:	or     eax,0x65156629
  419f27:	fstp   TBYTE PTR [ecx]
  419f29:	stos   DWORD PTR es:[edi],eax
  419f2a:	in     al,0x23
  419f2c:	cs cmp al,0x82
  419f2f:	test   al,0xc8
  419f31:	push   edx
  419f32:	add    cl,BYTE PTR [ecx+0x64]
  419f35:	ins    BYTE PTR es:[edi],dx
  419f36:	mov    DWORD PTR [esi],0x9206b539
  419f3c:	mov    ds:0x2662e85,al
  419f41:	popa   
  419f42:	mov    bh,0x4b
  419f44:	pushf  
  419f45:	(bad)  
  419f46:	ret    
  419f47:	jmp    0xc090cad1
  419f4c:	fdiv   st(2),st
  419f4e:	mov    esi,0x491c68d8
  419f53:	xor    bh,BYTE PTR [edx]
  419f55:	sub    al,0xe1
  419f57:	xchg   ebx,esp
  419f59:	sbb    BYTE PTR [ebx],ah
  419f5b:	clc    
  419f5c:	pushf  
  419f5d:	push   ds
  419f5e:	cmp    al,0xc0
  419f60:	hlt    
  419f61:	in     al,0xf0
  419f63:	lahf   
  419f64:	pop    esp
  419f65:	out    0x4e,al
  419f67:	idiv   ch
  419f69:	dec    ebx
  419f6a:	mov    bh,BYTE PTR [ecx-0x59]
  419f6d:	jmp    0x59a7:0x2bed40f5
  419f74:	inc    esp
  419f75:	add    eax,0x94ab47d4
  419f7a:	mov    bh,0x8a
  419f7c:	lods   eax,DWORD PTR ds:[esi]
  419f7d:	add    BYTE PTR [ebx+0x761b78e4],bl
  419f83:	add    BYTE PTR [eax+0x6675e15a],ah
  419f89:	adc    DWORD PTR [esp+ecx*2-0xd0ecc39],ebx
  419f90:	(bad)  
  419f91:	jmp    0x1b162f69
  419f96:	xchg   ebx,eax
  419f97:	add    DWORD PTR [eax+0x0],eax
  419f9a:	leave  
  419f9b:	add    DWORD PTR [esi+0x3d4957c6],edx
  419fa1:	or     ah,dh
  419fa3:	mov    eax,0x3ce20ea1
  419fa8:	sbb    dh,bl
  419faa:	or     esi,ebp
  419fac:	push   edi
  419fad:	loope  0x419f9a
  419faf:	mov    al,ds:0x8ab626d
  419fb4:	jmp    0x419fdd
  419fb6:	mov    al,0x3c
  419fb8:	gs jecxz 0x419f6c
  419fbb:	test   DWORD PTR cs:[ecx-0x3c4da080],0x200ab4d9
  419fc6:	inc    ebx
  419fc7:	aaa    
  419fc8:	and    esp,0x2e90a6c9
  419fce:	dec    eax
  419fcf:	test   BYTE PTR [edx],bl
  419fd1:	clc    
  419fd2:	popa   
  419fd3:	cmp    edi,ebx
  419fd5:	dec    esp
  419fd6:	inc    edi
  419fd7:	cmp    BYTE PTR [ecx-0x21839a0f],0x65
  419fde:	outs   dx,BYTE PTR ds:[esi]
  419fdf:	addr16 xor eax,ebx
  419fe2:	mov    edi,0xf7a44dcd
  419fe7:	push   es
  419fe8:	push   edi
  419fe9:	repz pop es
  419feb:	std    
  419fec:	mov    cl,0x4d
  419fee:	xor    edi,edx
  419ff0:	ss (bad) 
  419ff2:	xor    BYTE PTR [eax],bh
  419ff4:	mov    ds:0xe6678cd7,al
  419ff9:	imul   edx,DWORD PTR [edi],0xe6b4d924
  419fff:	jbe    0x41a056
  41a001:	sub    ebx,DWORD PTR [edi-0x308a6b42]
  41a007:	ss push ds
  41a009:	pusha  
  41a00a:	outs   dx,DWORD PTR ds:[esi]
  41a00b:	inc    edx
  41a00c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00d:	in     al,dx
  41a00e:	adc    DWORD PTR [ecx+0xb017e71],esp
  41a014:	mov    al,ds:0x2b10216a
  41a019:	mov    bl,0x65
  41a01b:	and    edx,DWORD PTR [esi+eiz*8+0x38367a6c]
  41a022:	outs   dx,BYTE PTR ds:[esi]
  41a023:	cmp    BYTE PTR [edi-0x6d],0xd7
  41a027:	clc    
  41a028:	adc    DWORD PTR [eax-0x6d118463],edi
  41a02e:	mov    dh,0x9f
  41a030:	fst    QWORD PTR [esi]
  41a032:	push   0xffffffaa
  41a034:	ins    BYTE PTR es:[edi],dx
  41a035:	mov    ah,0x84
  41a037:	jno    0x419fbe
  41a039:	outs   dx,DWORD PTR ds:[esi]
  41a03a:	dec    edx
  41a03b:	jo     0x41a095
  41a03d:	jae    0x41a0bd
  41a03f:	xchg   DWORD PTR [ebx+ebp*4+0x3fde5dbb],edi
  41a046:	inc    ecx
  41a047:	jnp    0x419fea
  41a049:	mov    ch,0x42
  41a04b:	in     al,0x26
  41a04d:	mov    ebp,0x10ac0b21
  41a052:	stos   BYTE PTR es:[edi],al
  41a053:	lods   eax,DWORD PTR ds:[esi]
  41a054:	scas   al,BYTE PTR es:[edi]
  41a055:	lods   eax,DWORD PTR ds:[esi]
  41a056:	jbe    0x41a070
  41a058:	(bad)  
  41a059:	ret    
  41a05a:	push   ds
  41a05b:	fsubr  DWORD PTR [ecx+0x790a20ee]
  41a061:	mov    eax,0xa01907ba
  41a066:	loope  0x41a02a
  41a068:	pop    ecx
  41a069:	inc    edi
  41a06a:	mov    DWORD PTR [ebx-0x6c8c332b],ecx
  41a070:	aad    0x91
  41a072:	xchg   ebp,eax
  41a073:	in     eax,dx
  41a074:	push   edi
  41a075:	adc    al,0x74
  41a077:	adc    bh,BYTE PTR [eax]
  41a079:	add    BYTE PTR [eax-0x4d55b2f3],al
  41a07f:	dec    ebp
  41a080:	ins    BYTE PTR es:[edi],dx
  41a081:	xchg   BYTE PTR [ecx+0x5c],ch
  41a084:	pop    eax
  41a085:	or     edx,ebx
  41a087:	add    ch,BYTE PTR [edx+ebp*2-0x17]
  41a08b:	fisttp WORD PTR [ebp-0x628d233c]
  41a091:	jmp    0x378:0x59932c2c
  41a098:	hlt    
  41a099:	push   0xffffffca
  41a09b:	mov    ss,WORD PTR [edx-0x2861e9f1]
  41a0a1:	cmp    ah,0xe6
  41a0a4:	or     ecx,DWORD PTR [esi+0x2cbf5ce]
  41a0aa:	sti    
  41a0ab:	cmp    DWORD PTR [ebx-0x7f351e81],0x5d4ac266
  41a0b5:	sbb    DWORD PTR [ebp+0x11],esp
  41a0b8:	dec    ecx
  41a0b9:	std    
  41a0ba:	jne    0x41a068
  41a0bc:	out    dx,al
  41a0bd:	repz fpatan 
  41a0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c1:	mov    eax,0xd1308958
  41a0c6:	xchg   BYTE PTR [esi+0x189bf6f2],al
  41a0cc:	repnz cmc 
  41a0ce:	push   ecx
  41a0cf:	adc    al,0x66
  41a0d1:	jno    0x41a10b
  41a0d3:	pop    ecx
  41a0d4:	mov    BYTE PTR [esi+esi*1],bh
  41a0d7:	xchg   edi,eax
  41a0d8:	fld    DWORD PTR [esi]
  41a0da:	xor    BYTE PTR [edi+0x3a],cl
  41a0dd:	int    0xf7
  41a0df:	pop    edi
  41a0e0:	jge    0x41a0f3
  41a0e2:	jne    0x41a131
  41a0e4:	fdiv   st,st(2)
  41a0e6:	xor    edx,DWORD PTR [edx+0x487d17c2]
  41a0ec:	pop    ss
  41a0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ee:	inc    esp
  41a0ef:	cld    
  41a0f0:	in     eax,dx
  41a0f1:	add    DWORD PTR [ebp-0x386b8d98],eax
  41a0f7:	jg     0x41a118
  41a0f9:	cld    
  41a0fa:	xchg   ebx,eax
  41a0fb:	std    
  41a0fc:	xor    bl,BYTE PTR [esi-0x27]
  41a0ff:	push   cs
  41a100:	iret   
  41a101:	call   0xff21922f
  41a106:	ins    BYTE PTR es:[edi],dx
  41a107:	or     BYTE PTR [ebx],dl
  41a109:	xlat   BYTE PTR ds:[ebx]
  41a10a:	cmp    ebx,eax
  41a10c:	or     dh,BYTE PTR [ebx-0x11]
  41a10f:	mov    esi,DWORD PTR [ebx]
  41a111:	leave  
  41a112:	inc    edi
  41a113:	cli    
  41a114:	fisttp QWORD PTR [edi-0x798a542c]
  41a11a:	push   0x2e
  41a11c:	sbb    eax,0x28b0310b
  41a121:	add    al,0xec
  41a123:	sbb    bh,al
  41a125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a126:	mov    bh,0xb8
  41a128:	push   es
  41a129:	cmp    eax,0x7ece96c7
  41a12e:	xlat   BYTE PTR ds:[ebx]
  41a12f:	paddd  mm6,mm1
  41a132:	xor    DWORD PTR [edx-0x424a7614],eax
  41a138:	mov    ah,BYTE PTR [eax-0x24dfb91f]
  41a13e:	aas    
  41a13f:	mov    gs,esi
  41a141:	jno    0x41a16e
  41a143:	in     al,0x40
  41a145:	(bad)  
  41a146:	push   ds
  41a147:	mov    ds,WORD PTR [eax-0x3a]
  41a14a:	(bad)  
  41a14b:	pusha  
  41a14c:	clc    
  41a14d:	adc    eax,0x77ed05c8
  41a152:	aad    0xa2
  41a154:	dec    ebp
  41a155:	push   edi
  41a156:	mov    ds:0xca1c7f8c,eax
  41a15b:	sbb    ebx,ecx
  41a15d:	loopne 0x41a144
  41a15f:	or     edi,DWORD PTR [edi]
  41a161:	test   ah,ch
  41a163:	pushf  
  41a164:	les    edx,FWORD PTR [ebx+ebx*4+0xa9a9a2c]
  41a16b:	(bad)
  41a16e:	sub    dl,BYTE PTR ds:0xb9274b32
  41a174:	or     DWORD PTR ds:0xf6024057,0xffffffbd
  41a17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a17c:	scas   al,BYTE PTR es:[edi]
  41a17d:	adc    eax,0x1be44cae
  41a182:	mov    bl,0x61
  41a184:	sub    esp,ebp
  41a186:	push   ecx
  41a187:	push   ds
  41a188:	bound  ebx,QWORD PTR [esi-0x1a7d441d]
  41a18e:	push   ss
  41a18f:	pop    esi
  41a190:	inc    eax
  41a191:	xchg   ebx,eax
  41a192:	lahf   
  41a193:	arpl   WORD PTR [esi-0x34cf0891],dx
  41a199:	(bad)  
  41a19a:	rol    DWORD PTR ds:0xbeea2b57,cl
  41a1a0:	lea    ecx,[ebx-0xd75008d]
  41a1a6:	jmp    0x5e61:0xc4ca69c
  41a1ad:	fdiv   QWORD PTR [edi-0x30d34081]
  41a1b3:	or     dl,BYTE PTR [esi+eiz*1]
  41a1b6:	inc    eax
  41a1b7:	repnz sar BYTE PTR [esi+eax*4+0x52],cl
  41a1bc:	aas    
  41a1bd:	popa   
  41a1be:	inc    ecx
  41a1bf:	xchg   esp,eax
  41a1c0:	jns    0x41a23f
  41a1c2:	es adc al,0x80
  41a1c5:	mov    bl,0x99
  41a1c7:	imul   ecx,DWORD PTR [esi+0x0],0x60
  41a1cb:	pop    ss
  41a1cc:	enter  0xea33,0x6b
  41a1d0:	mov    eax,0x4b3d3c00
  41a1d5:	mov    eax,0xf35b0da8
  41a1da:	cmp    eax,0x2b703866
  41a1df:	stc    
  41a1e0:	adc    DWORD PTR [edx+0x756705f3],ecx
  41a1e6:	mov    dh,0x6d
  41a1e8:	xor    DWORD PTR [ebx-0x5a],0x1bd1ba9c
  41a1ef:	mov    eax,ds:0x28ff8065
  41a1f4:	test   eax,0x68829103
  41a1f9:	cwde   
  41a1fa:	hlt    
  41a1fb:	cmp    al,0x7b
  41a1fd:	mov    BYTE PTR [eax+0x60],dl
  41a200:	fistp  WORD PTR [esi-0x28]
  41a203:	mov    al,ds:0x11b7c67f
  41a208:	icebp  
  41a209:	test   BYTE PTR [edi+0x945ee3a],dh
  41a20f:	in     eax,0x9e
  41a211:	into   
  41a212:	pop    ebp
  41a213:	jmp    0x41a1d4
  41a215:	lds    edx,FWORD PTR [ecx+esi*8-0x2c]
  41a219:	cmp    edx,DWORD PTR [esi+0x424a6eae]
  41a21f:	and    eax,0x2720bc9
  41a224:	jno    0x41a242
  41a226:	arpl   WORD PTR [eax-0x5e],cx
  41a229:	test   DWORD PTR [edx-0x608588aa],ebp
  41a22f:	adc    BYTE PTR [edx+0x37],bh
  41a232:	sti    
  41a233:	mov    edx,0xc3b878e3
  41a238:	and    DWORD PTR [ebx+0x58d0fd5c],edx
  41a23e:	cmp    esi,DWORD PTR [eax+eiz*8-0x40b7679f]
  41a245:	jns    0x41a210
  41a247:	cwde   
  41a248:	loopne 0x41a20d
  41a24a:	add    eax,DWORD PTR [esi]
  41a24c:	mov    WORD PTR [ebp+0x41],es
  41a24f:	jle    0x41a280
  41a251:	pop    ebp
  41a252:	push   ecx
  41a253:	cld    
  41a254:	imul   eax,DWORD PTR [eax-0x7fa8facd],0x5b
  41a25b:	mov    ecx,0xdb468066
  41a260:	popf   
  41a261:	in     al,dx
  41a262:	push   ss
  41a263:	or     edi,eax
  41a265:	aas    
  41a266:	aad    0x4d
  41a268:	jge    0x41a2c0
  41a26a:	push   esi
  41a26b:	mov    bl,0x60
  41a26d:	xchg   ecx,eax
  41a26e:	xchg   edx,eax
  41a26f:	inc    eax
  41a270:	xlat   BYTE PTR ds:[ebx]
  41a271:	mov    eax,0x268fede
  41a276:	adc    ecx,DWORD PTR [ebx]
  41a278:	test   esp,ebp
  41a27a:	cmp    al,0xa1
  41a27c:	daa    
  41a27d:	mov    esi,esi
  41a27f:	mul    BYTE PTR [ecx-0x283d7996]
  41a285:	push   esp
  41a286:	jo     0x41a300
  41a288:	jno    0x41a288
  41a28a:	pop    eax
  41a28b:	mov    ah,0x64
  41a28d:	add    bh,BYTE PTR [eax-0x3bd31fc9]
  41a293:	xor    BYTE PTR [eax-0x70ac2581],cl
  41a299:	in     al,dx
  41a29a:	out    dx,eax
  41a29b:	(bad)  
  41a29c:	in     eax,0xd9
  41a29e:	sbb    eax,0xa3f3f82f
  41a2a4:	call   0xd311:0x83e25f33
  41a2ab:	mov    bh,0x3a
  41a2ad:	in     al,0x98
  41a2af:	cmp    BYTE PTR [esp+ebx*1-0x6af80767],bh
  41a2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b7:	outs   dx,BYTE PTR ds:[esi]
  41a2b8:	mov    eax,0xc024aa82
  41a2bd:	pop    eax
  41a2be:	into   
  41a2bf:	fwait
  41a2c0:	ret    
  41a2c1:	cdq    
  41a2c2:	(bad)  
  41a2c3:	sbb    esi,DWORD PTR [edx-0x79]
  41a2c6:	inc    eax
  41a2c7:	jnp    0x41a29c
  41a2c9:	sub    BYTE PTR [edx-0x1aed7566],ah
  41a2cf:	sub    al,0xfd
  41a2d1:	(bad)  
  41a2d2:	or     eax,edx
  41a2d4:	cmp    eax,0xddec5771
  41a2d9:	hlt    
  41a2da:	fs pop ebx
  41a2dc:	in     eax,0xc9
  41a2de:	mov    eax,ds:0xb209caaf
  41a2e3:	add    ch,bh
  41a2e5:	cwde   
  41a2e6:	and    eax,0x8a46f58
  41a2eb:	(bad)  
  41a2ec:	sbb    al,0x22
  41a2ee:	pop    eax
  41a2ef:	jecxz  0x41a31a
  41a2f1:	pop    ecx
  41a2f2:	inc    esi
  41a2f3:	ret    
  41a2f4:	ss and edx,esp
  41a2f7:	gs jg  0x41a289
  41a2fa:	and    eax,0x28ac837c
  41a2ff:	repz cmp eax,0xe848622f
  41a305:	(bad)  
  41a306:	push   esi
  41a307:	arpl   di,ax
  41a309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30a:	shl    DWORD PTR [esi+0x42293c47],cl
  41a310:	sub    al,0xbf
  41a312:	jbe    0x41a34a
  41a314:	outs   dx,BYTE PTR ds:[esi]
  41a315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a316:	xor    al,0x43
  41a318:	fimul  DWORD PTR [esi-0x7d]
  41a31b:	dec    eax
  41a31c:	adc    DWORD PTR [edx-0x1f],ebx
  41a31f:	(bad)  
  41a320:	bound  ebp,QWORD PTR [edx]
  41a322:	mov    esi,0xb757808d
  41a327:	daa    
  41a328:	ds mov bh,0x69
  41a32b:	ss retf 0xa255
  41a32f:	sub    esp,DWORD PTR [edx-0x7c]
  41a332:	lahf   
  41a333:	pop    ebx
  41a334:	sar    DWORD PTR [ecx-0x75],1
  41a337:	leave  
  41a338:	lds    esp,FWORD PTR [edx]
  41a33a:	sbb    BYTE PTR [edi+edx*4+0x7c],bh
  41a33e:	cmp    eax,0x6e740d23
  41a343:	scas   al,BYTE PTR es:[edi]
  41a344:	jae    0x41a326
  41a346:	out    0xb0,eax
  41a348:	mov    edi,0xe988a322
  41a34d:	repz sub al,0x62
  41a350:	dec    ecx
  41a351:	(bad)
  41a355:	push   es
  41a356:	int3   
  41a357:	popa   
  41a358:	and    esi,ebp
  41a35a:	cmova  eax,DWORD PTR [ebp+0x26]
  41a35e:	mov    edx,0x5805c51e
  41a363:	gs data16 es mov ch,0xd
  41a368:	cs pop ss
  41a36a:	inc    eax
  41a36b:	pop    ecx
  41a36c:	xor    eax,0xc4f07a0a
  41a371:	xlat   BYTE PTR ds:[ebx]
  41a372:	daa    
  41a373:	jo     0x41a35f
  41a375:	sub    dh,BYTE PTR [ebx+0x19]
  41a378:	sbb    eax,0x4a7b1465
  41a37d:	and    ecx,ebx
  41a37f:	mov    ebp,0x3bae0e4d
  41a384:	dec    esi
  41a385:	sub    ch,bh
  41a387:	or     BYTE PTR [esi+0x48db0d23],bh
  41a38d:	sbb    esi,DWORD PTR [ebx+0x4fcd32a9]
  41a393:	or     DWORD PTR [esi+0x66ff81ee],ebx
  41a399:	jmp    0xf4a5:0x7777c47c
  41a3a0:	int    0xe8
  41a3a2:	fwait
  41a3a3:	cli    
  41a3a4:	lds    ebx,FWORD PTR [esi]
  41a3a6:	xor    DWORD PTR [edi+0x2d],0xccb00824
  41a3ad:	sbb    BYTE PTR [eax],al
  41a3af:	xor    DWORD PTR [ebx+0x13],edi
  41a3b2:	cmc    
  41a3b3:	mov    BYTE PTR [eax-0x682e6a11],dh
  41a3b9:	mov    esi,0x40229a80
  41a3be:	mov    ds:0xde689fd1,al
  41a3c3:	test   al,0xb2
  41a3c5:	arpl   si,bx
  41a3c7:	push   es
  41a3c8:	nop
  41a3c9:	ficomp WORD PTR [ebx+0x3ecd30f6]
  41a3cf:	push   0x76a1c526
  41a3d4:	cld    
  41a3d5:	jno    0x41a454
  41a3d7:	mov    BYTE PTR [ebx+0x39],al
  41a3da:	mul    BYTE PTR [esi+0x63941d41]
  41a3e0:	push   esp
  41a3e1:	cli    
  41a3e2:	jb     0x41a3f9
  41a3e4:	or     ch,bl
  41a3e6:	mov    al,0x84
  41a3e8:	push   esp
  41a3e9:	aas    
  41a3ea:	(bad)
  41a3ee:	fistp  QWORD PTR [esi+0x4]
  41a3f1:	or     eax,DWORD PTR [ebp-0x72]
  41a3f4:	hlt    
  41a3f5:	and    edi,DWORD PTR [ebx+0x48]
  41a3f8:	sbb    BYTE PTR [edx-0x23],ch
  41a3fb:	out    0xd4,eax
  41a3fd:	inc    esi
  41a3fe:	push   edx
  41a3ff:	inc    eax
  41a400:	popfw  
  41a402:	out    dx,eax
  41a403:	or     BYTE PTR [ebp+0x259086d7],ch
  41a409:	orps   xmm7,xmm5
  41a40c:	(bad)  
  41a40e:	adc    edx,DWORD PTR [edx-0x8cd7708]
  41a414:	std    
  41a415:	jne    0x41a42f
  41a417:	leave  
  41a418:	mov    bl,0x35
  41a41a:	mov    cs,WORD PTR [ecx]
  41a41c:	xor    ah,0x16
  41a41f:	mov    ebp,gs
  41a421:	mov    al,ds:0x40e94b2b
  41a426:	inc    ebp
  41a427:	xchg   edx,eax
  41a428:	rep stos DWORD PTR es:[edi],eax
  41a42a:	xchg   edx,eax
  41a42b:	enter  0x284f,0x85
  41a42f:	and    al,0x17
  41a431:	scas   al,BYTE PTR es:[edi]
  41a432:	adc    eax,0x8d9ac074
  41a437:	dec    ebx
  41a438:	add    DWORD PTR [eax+0x5c5ef55a],ebx
  41a43e:	(bad)  
  41a43f:	cmp    esi,DWORD PTR [edx-0x2075ca47]
  41a445:	inc    edx
  41a446:	fwait
  41a447:	push   es
  41a448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a449:	jbe    0x41a3ee
  41a44b:	popf   
  41a44c:	xchg   ebp,eax
  41a44d:	dec    ebp
  41a44e:	dec    ebx
  41a44f:	inc    ebx
  41a450:	push   cs
  41a451:	std    
  41a452:	dec    esp
  41a453:	adc    al,0x39
  41a455:	and    eax,DWORD PTR [eax]
  41a457:	nop
  41a458:	and    DWORD PTR ds:0x61897561,esi
  41a45e:	jo     0x41a469
  41a460:	inc    esi
  41a461:	dec    edx
  41a462:	lods   eax,DWORD PTR ds:[esi]
  41a463:	not    DWORD PTR [edx-0x704231bd]
  41a469:	mov    ds,ebx
  41a46b:	sbb    al,0x2d
  41a46d:	jmp    0x288110eb
  41a472:	add    dh,BYTE PTR [eax+edi*4-0x61]
  41a476:	xchg   dh,ah
  41a478:	pop    eax
  41a479:	fbld   TBYTE PTR [eax+ebp*8-0x60]
  41a47d:	cmp    al,0x60
  41a47f:	push   ebx
  41a480:	xchg   ebp,eax
  41a481:	dec    esp
  41a482:	pop    edx
  41a483:	sti    
  41a484:	aam    0x60
  41a486:	push   ebp
  41a487:	cld    
  41a488:	pop    ebp
  41a489:	mov    al,bl
  41a48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a48c:	xchg   ecx,eax
  41a48e:	sbb    BYTE PTR [edi],0x91
  41a491:	fstp   DWORD PTR [eax]
  41a493:	jmp    0x4f10:0x1d81b89a
  41a49a:	adc    ch,ah
  41a49c:	(bad)
  41a4a0:	or     BYTE PTR [ebx+eax*4+0x6d],bh
  41a4a4:	cli    
  41a4a5:	out    dx,eax
  41a4a6:	fld    TBYTE PTR [ecx]
  41a4a8:	inc    ecx
  41a4a9:	repnz (bad) 
  41a4ab:	dec    ebx
  41a4ac:	in     al,0x9a
  41a4ae:	mov    dh,0xb0
  41a4b0:	dec    esi
  41a4b1:	data16 sti 
  41a4b3:	(bad)  
  41a4b4:	mov    bh,0x64
  41a4b6:	push   ebx
  41a4b7:	jno    0x41a46a
  41a4b9:	fwait
  41a4ba:	retf   0x7943
  41a4bd:	out    dx,al
  41a4be:	lods   eax,DWORD PTR ds:[esi]
  41a4bf:	sub    eax,0x1b055761
  41a4c4:	scas   al,BYTE PTR es:[edi]
  41a4c5:	test   DWORD PTR [eax-0x4b],eax
  41a4c8:	xor    dl,BYTE PTR [eax+0xb258ea7]
  41a4ce:	mov    bh,cl
  41a4d0:	stos   BYTE PTR es:[edi],al
  41a4d1:	sahf   
  41a4d2:	sti    
  41a4d3:	push   ss
  41a4d4:	xchg   edx,ebp
  41a4d6:	add    al,0xdd
  41a4d8:	xor    eax,0xa72a8a9e
  41a4dd:	pop    edx
  41a4de:	and    ch,BYTE PTR [ecx+ebp*4+0x16]
  41a4e2:	aad    0x70
  41a4e4:	mov    eax,0xd57cc473
  41a4e9:	push   0xced681df
  41a4ee:	sti    
  41a4ef:	fmul   DWORD PTR [esi-0x7efdf5ad]
  41a4f5:	jae    0x41a4dc
  41a4f7:	inc    ecx
  41a4f8:	mov    fs,WORD PTR [eax-0x660aafaf]
  41a4fe:	lock enter 0xd846,0xf5
  41a503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a504:	vandps xmm7,xmm3,XMMWORD PTR [eax]
  41a508:	jnp    0x41a50c
  41a50a:	mov    esp,0x5b298fda
  41a50f:	rcr    BYTE PTR [edx-0x35],1
  41a512:	sub    BYTE PTR [esi+0x46],dh
  41a515:	clc    
  41a516:	and    bl,BYTE PTR [esi+edx*1+0x6]
  41a51a:	je     0x41a573
  41a51c:	push   ds
  41a51d:	arpl   WORD PTR [eax-0x6be43700],bp
  41a523:	fstp   TBYTE PTR [ecx-0x12c5aadf]
  41a529:	xor    cl,BYTE PTR [esi-0x62]
  41a52c:	retf   0xe048
  41a52f:	imul   esp,DWORD PTR [ebx+0x776f7d57],0x52
  41a536:	mov    ss,WORD PTR [ecx-0x63]
  41a539:	fs addr16 leave 
  41a53c:	data16 std 
  41a53e:	dec    BYTE PTR [edx-0x2a282f4b]
  41a544:	xchg   ebp,eax
  41a545:	xor    BYTE PTR [ebx],dl
  41a547:	(bad)  
  41a548:	bnd jg 0x41a527
  41a54b:	popf   
  41a54c:	ins    DWORD PTR es:[edi],dx
  41a54d:	pop    es
  41a54e:	out    dx,eax
  41a54f:	jecxz  0x41a5c7
  41a551:	jp     0x41a537
  41a553:	jp     0x41a57d
  41a555:	xor    al,0xec
  41a557:	vpermq ymm0{k6}{z},ymm3,YMMWORD PTR [ebp+esi*8-0xe20]
  41a55f:	dec    edx
  41a560:	fnstcw WORD PTR [edi]
  41a562:	xchg   BYTE PTR [ecx+0x73932a90],cl
  41a568:	pop    edx
  41a569:	xchg   BYTE PTR [edi+0x79cee3cf],al
  41a56f:	jbe    0x41a549
  41a571:	pop    ss
  41a572:	mov    DWORD PTR [ebp+0x27],ebp
  41a575:	test   DWORD PTR [esi-0x7c0fa5ac],esp
  41a57b:	loope  0x41a532
  41a57d:	lock mov DWORD PTR [ebx-0x6c],ebx
  41a581:	stc    
  41a582:	es jne 0x41a57f
  41a585:	test   ebp,edi
  41a587:	call   0x7ec6813f
  41a58c:	out    dx,al
  41a58d:	aaa    
  41a58e:	mov    esi,0xae2a9582
  41a593:	ret    
  41a594:	enter  0xf203,0xdc
  41a598:	push   esi
  41a599:	dec    ebx
  41a59a:	mov    al,0x3c
  41a59c:	pusha  
  41a59d:	leave  
  41a59e:	mov    bl,0x5e
  41a5a0:	test   edi,ebp
  41a5a2:	arpl   WORD PTR [edi],di
  41a5a4:	dec    edi
  41a5a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a6:	fnstenv [ebp-0x50]
  41a5a9:	sub    al,0x39
  41a5ab:	jmp    0xa3dd2fd5
  41a5b0:	jle    0x41a561
  41a5b2:	xor    DWORD PTR ds:0xb38553ef,ecx
  41a5b8:	(bad)  
  41a5b9:	fisubr DWORD PTR ds:0x4a30c22c
  41a5bf:	pop    ebp
  41a5c0:	mov    fs,eax
  41a5c2:	inc    edx
  41a5c3:	mov    esi,DWORD PTR [ebp+0x4d2ae2c8]
  41a5c9:	xchg   edi,eax
  41a5ca:	loopne 0x41a5cf
  41a5cc:	mov    esp,0xdb9f492b
  41a5d1:	out    dx,al
  41a5d2:	stos   BYTE PTR es:[edi],al
  41a5d3:	jns    0x41a599
  41a5d5:	ror    BYTE PTR [edi-0x7efe0c7b],0xca
  41a5dc:	xchg   esp,eax
  41a5dd:	sub    al,0x98
  41a5df:	cmp    al,0x99
  41a5e1:	je     0x41a5da
  41a5e3:	(bad)  
  41a5e4:	repz jnp 0x41a582
  41a5e7:	sub    DWORD PTR [edx+0x5],esi
  41a5ea:	add    al,0x2
  41a5ec:	xchg   esp,eax
  41a5ed:	das    
  41a5ee:	mov    bh,0x38
  41a5f0:	bound  edx,QWORD PTR [ebx]
  41a5f2:	ja     0x41a59d
  41a5f4:	xchg   edi,eax
  41a5f5:	add    esp,DWORD PTR [ebx-0x2c]
  41a5f8:	mov    esi,0xd2ac235e
  41a5fd:	mov    bh,0x3a
  41a5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a600:	fst    DWORD PTR ds:0x740db2df
  41a606:	sbb    esi,DWORD PTR [ebx+0x50afe5de]
  41a60c:	cmp    edi,DWORD PTR [eax]
  41a60e:	mov    DWORD PTR [ecx+esi*8],esp
  41a611:	mov    ebp,0x9729bdcc
  41a616:	sbb    DWORD PTR [eax+edi*4-0x55],edi
  41a61a:	xor    al,0xe8
  41a61c:	scas   al,BYTE PTR es:[edi]
  41a61d:	mov    ch,0x5a
  41a61f:	ss jo  0x41a5f2
  41a622:	sbb    esi,DWORD PTR [ebx]
  41a624:	mov    esi,0x5030c2f5
  41a629:	and    DWORD PTR [edi+0x397ba40b],esp
  41a62f:	pop    esi
  41a630:	cs mov ah,0x1a
  41a633:	xor    dl,BYTE PTR [edx]
  41a635:	loop   0x41a619
  41a637:	xor    ebx,ebp
  41a639:	push   esi
  41a63a:	outs   dx,BYTE PTR ds:[esi]
  41a63b:	jp     0x41a5d8
  41a63d:	(bad)  
  41a63e:	popa   
  41a63f:	rol    BYTE PTR [ebx+0x4bc202b7],1
  41a645:	dec    edi
  41a646:	stos   DWORD PTR es:[edi],eax
  41a647:	dec    ebp
  41a648:	cmp    BYTE PTR [esi-0x3c],bh
  41a64b:	retf   
  41a64c:	cwde   
  41a64d:	stos   DWORD PTR es:[edi],eax
  41a64e:	sar    DWORD PTR [eax],1
  41a650:	mov    esp,DWORD PTR [ecx+0x71cd270c]
  41a656:	shl    bh,1
  41a658:	js     0x41a5ff
  41a65a:	sbb    BYTE PTR [eax+0x68b289b8],al
  41a660:	ficom  WORD PTR [ecx+eiz*4]
  41a663:	dec    edx
  41a664:	push   ecx
  41a665:	xor    al,0xa0
  41a667:	pop    es
  41a668:	sub    cl,ch
  41a66a:	ins    DWORD PTR es:[edi],dx
  41a66b:	add    al,BYTE PTR [ecx+0x7aa2e4b]
  41a671:	cdq    
  41a672:	mov    dh,0xe6
  41a674:	(bad)  
  41a675:	dec    ebx
  41a676:	scas   eax,DWORD PTR es:[edi]
  41a677:	test   BYTE PTR [ecx-0x19a550b8],cl
  41a67d:	clc    
  41a67e:	pop    eax
  41a67f:	push   0x43469976
  41a684:	mov    esp,0x59187933
  41a689:	sbb    BYTE PTR [ebx],al
  41a68b:	xlat   BYTE PTR ds:[ebx]
  41a68c:	and    dl,BYTE PTR [eax+0x65]
  41a68f:	in     eax,0xdf
  41a691:	jg     0x41a648
  41a693:	jl     0x41a636
  41a695:	pop    edx
  41a696:	and    bl,ch
  41a698:	fsubr  QWORD PTR [eax-0x55b94bc9]
  41a69e:	mov    dh,0xc7
  41a6a0:	sub    al,0xc5
  41a6a2:	lds    eax,FWORD PTR [esi+0x139fcacb]
  41a6a8:	adc    ebp,edi
  41a6aa:	mov    edi,esi
  41a6ac:	mov    ds:0xca266f1b,eax
  41a6b1:	xchg   BYTE PTR [ebp-0x788ebaa9],ch
  41a6b7:	pop    ds
  41a6b8:	icebp  
  41a6b9:	mov    al,ds:0x5212eacd
  41a6be:	jb     0x41a6ab
  41a6c0:	std    
  41a6c1:	jne    0x41a73f
  41a6c3:	mov    al,ds:0x5c10dfe7
  41a6c8:	adc    DWORD PTR [esp+edi*8-0x77],esp
  41a6cc:	jne    0x41a6fb
  41a6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6cf:	stos   BYTE PTR es:[edi],al
  41a6d0:	ja     0x41a680
  41a6d2:	js     0x41a662
  41a6d4:	push   esi
  41a6d5:	jmp    ecx
  41a6d7:	inc    eax
  41a6d8:	jbe    0x41a6f4
  41a6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6db:	adc    al,0xfa
  41a6dd:	sbb    ebx,DWORD PTR [edi+0x30a116cb]
  41a6e3:	iret   
  41a6e4:	xchg   ecx,eax
  41a6e5:	stos   BYTE PTR es:[edi],al
  41a6e6:	pop    ds
  41a6e7:	add    eax,0x1cd288bd
  41a6ec:	adc    dl,BYTE PTR ds:0x8263ad86
  41a6f2:	imul   esp,edx,0x5ab293fd
  41a6f8:	sti    
  41a6f9:	dec    ebp
  41a6fa:	mov    eax,0xbac3d96f
  41a6ff:	add    BYTE PTR [esi],cl
  41a701:	pop    ss
  41a702:	dec    edx
  41a703:	test   eax,0x553e497c
  41a708:	jl     0x41a693
  41a70a:	dec    edx
  41a70b:	sbb    bl,BYTE PTR [ecx]
  41a70d:	pop    esp
  41a70e:	jmp    0x5a5a:0x6b95bb73
  41a715:	ins    BYTE PTR es:[edi],dx
  41a716:	add    ah,BYTE PTR [edi+esi*1+0x1f]
  41a71a:	sti    
  41a71b:	daa    
  41a71c:	mov    al,0xcd
  41a71e:	sahf   
  41a71f:	pop    ds
  41a720:	mov    esp,0x3e1f3974
  41a725:	add    al,0xe
  41a727:	push   ds
  41a728:	dec    edi
  41a729:	add    al,0x68
  41a72b:	daa    
  41a72c:	jp     0x41a798
  41a72e:	test   DWORD PTR [edi-0x54],edi
  41a731:	out    0x85,eax
  41a733:	pusha  
  41a734:	pextrw eax,(bad),0xc5
  41a736:	pop    es
  41a737:	sub    eax,0xc61f52c4
  41a73c:	ja     0x41a764
  41a73e:	inc    ebp
  41a73f:	iret   
  41a740:	clc    
  41a741:	push   ss
  41a742:	inc    esi
  41a743:	loop   0x41a796
  41a745:	or     dh,dl
  41a747:	outs   dx,DWORD PTR ds:[esi]
  41a748:	in     al,0x14
  41a74a:	(bad)  
  41a74b:	call   0xecf4b1ec
  41a750:	push   0xffffffc9
  41a752:	and    DWORD PTR [ecx+0x79],ebx
  41a755:	shr    ecx,0x10
  41a758:	mov    ebp,0x4e158a6f
  41a75d:	pop    ecx
  41a75e:	aaa    
  41a75f:	pop    ebp
  41a760:	lock mov gs,eax
  41a763:	mov    ds:0xd464c2d4,eax
  41a768:	mov    bl,0xa8
  41a76a:	(bad)  
  41a76b:	int    0x87
  41a76d:	inc    edi
  41a76e:	fcmovbe st,st(3)
  41a770:	jmp    0x41a797
  41a772:	or     al,dh
  41a774:	ss std 
  41a776:	sbb    al,0x2c
  41a778:	xchg   esp,eax
  41a779:	pop    ebp
  41a77a:	cmp    dl,BYTE PTR [eax]
  41a77c:	mov    fs,WORD PTR [ebp-0x39]
  41a77f:	not    DWORD PTR [ecx-0x3b1f9315]
  41a785:	fcmove st,st(0)
  41a787:	bound  esp,QWORD PTR [esi-0x2da3b2d5]
  41a78d:	jle    0x41a7c4
  41a78f:	imul   cl
  41a791:	out    0xd9,eax
  41a793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a794:	int    0xec
  41a796:	cli    
  41a797:	scas   al,BYTE PTR es:[edi]
  41a798:	or     BYTE PTR [edi],0xf4
  41a79b:	pop    bx
  41a79d:	ja     0x41a81b
  41a79f:	popf   
  41a7a0:	sbb    eax,0xf1bf0fdb
  41a7a5:	rcr    DWORD PTR ds:0x5b0c941,0xab
  41a7ac:	mov    edi,0x4126978e
  41a7b1:	push   ecx
  41a7b2:	jge    0x41a7b6
  41a7b4:	or     ebp,DWORD PTR [edi+0x77]
  41a7b7:	sub    al,0x4b
  41a7b9:	dec    esi
  41a7ba:	cld    
  41a7bb:	neg    cl
  41a7bd:	aas    
  41a7be:	jae    0x41a773
  41a7c0:	xor    dl,cl
  41a7c2:	mov    esi,0x1e852cca
  41a7c7:	or     ch,dl
  41a7c9:	pop    ecx
  41a7ca:	test   al,0x15
  41a7cc:	inc    BYTE PTR [ecx-0x642acbfd]
  41a7d2:	inc    esp
  41a7d3:	imul   esp,DWORD PTR [ecx-0x69],0xfcf3f56e
  41a7da:	push   ss
  41a7db:	int    0xad
  41a7dd:	push   ecx
  41a7de:	in     al,0xf8
  41a7e0:	mov    ebx,0x252d868d
  41a7e5:	std    
  41a7e6:	cwde   
  41a7e7:	xchg   esi,eax
  41a7e8:	aas    
  41a7e9:	inc    ebx
  41a7ea:	hlt    
  41a7eb:	pop    edx
  41a7ec:	mov    ds:0x229bbe99,al
  41a7f1:	ds pop ss
  41a7f3:	repnz (bad) 
  41a7f6:	and    DWORD PTR [edx-0x66],0xffffffde
  41a7fa:	cs pop ds
  41a7fc:	lea    ebp,[edi-0x43]
  41a7ff:	sbb    al,0xfe
  41a801:	or     BYTE PTR [ebx-0x4a5aa172],0x44
  41a808:	push   ebp
  41a809:	cmp    DWORD PTR [edi+0xa708cc9],esp
  41a80f:	enter  0x4d21,0xa
  41a813:	in     al,0x20
  41a815:	int3   
  41a816:	sbb    BYTE PTR [edx],bl
  41a818:	mov    esi,0x58bf6216
  41a81d:	ror    ebp,cl
  41a81f:	push   ebp
  41a820:	imul   ebx,DWORD PTR [eax+edi*1+0x2c],0x4b979d80
  41a828:	repnz rcl DWORD PTR [edx+eiz*4+0x44],cl
  41a82d:	push   ebx
  41a82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a830:	mov    ecx,ebx
  41a832:	repnz sti 
  41a834:	inc    ebx
  41a835:	mov    bh,0xdd
  41a837:	dec    ebx
  41a838:	lock outs dx,BYTE PTR ds:[esi]
  41a83a:	mov    ds:0xa31ea22b,al
  41a83f:	loope  0x41a826
  41a841:	loope  0x41a884
  41a843:	mov    ds:0x8b580e18,eax
  41a848:	add    eax,0x731ae338
  41a84d:	lock les eax,FWORD PTR [eax]
  41a850:	stos   BYTE PTR es:[edi],al
  41a851:	mov    edi,0xd91391d6
  41a856:	jg     0x41a816
  41a858:	mov    dh,BYTE PTR [ebp-0x417cec20]
  41a85e:	xchg   ebp,eax
  41a85f:	push   esi
  41a860:	mov    ah,0xb0
  41a862:	mov    eax,ds:0x60d73b87
  41a867:	inc    esi
  41a868:	xchg   edx,eax
  41a869:	pop    edx
  41a86a:	push   ebp
  41a86b:	daa    
  41a86c:	jo     0x41a84a
  41a86e:	sbb    DWORD PTR [ebx+0x5a],edi
  41a871:	cmc    
  41a872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a873:	ins    BYTE PTR es:[edi],dx
  41a874:	mov    BYTE PTR [ecx],dh
  41a876:	daa    
  41a877:	gs ja  0x41a841
  41a87a:	icebp  
  41a87b:	bound  ecx,QWORD PTR [ebx-0x42cf5428]
  41a881:	push   ebx
  41a882:	pushf  
  41a883:	mov    dl,0x5d
  41a885:	sub    bl,BYTE PTR [edx]
  41a887:	(bad)  
  41a888:	out    0x34,eax
  41a88a:	rol    BYTE PTR [eax+0x14e90105],0xd1
  41a891:	or     DWORD PTR [edi],ecx
  41a893:	imul   esp,DWORD PTR [edi+0x6524dcf],0xd421eff7
  41a89d:	repz into 
  41a89f:	pop    ebp
  41a8a0:	xor    dl,dl
  41a8a2:	dec    ecx
  41a8a3:	in     al,dx
  41a8a4:	mov    edx,DWORD PTR [esi+edx*4]
  41a8a7:	in     eax,dx
  41a8a8:	arpl   WORD PTR [edx-0x7176d507],si
  41a8ae:	xchg   DWORD PTR [ebx],ebx
  41a8b0:	nop
  41a8b1:	xor    DWORD PTR [ebp-0xa734ba4],ebx
  41a8b7:	addr16 test eax,0x8a21c237
  41a8bd:	xor    bh,cl
  41a8bf:	pushf  
  41a8c0:	cwde   
  41a8c1:	mov    edx,0xf009b99f
  41a8c6:	sbb    bh,bl
  41a8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8c9:	add    DWORD PTR [edi+0x46e42773],ebx
  41a8cf:	or     DWORD PTR [edi+0x19a657ae],esp
  41a8d5:	fisub  DWORD PTR [ecx+eax*2]
  41a8d8:	sbb    ebp,DWORD PTR [ebp-0x749fdfc5]
  41a8de:	jb     0x41a95f
  41a8e0:	add    al,0xd2
  41a8e2:	lahf   
  41a8e3:	pop    es
  41a8e4:	fisttp WORD PTR ds:0x6fc33d65
  41a8ea:	fnsave [ebx+0x7b]
  41a8ed:	xor    esi,DWORD PTR [edx]
  41a8ef:	sub    bl,dl
  41a8f1:	ja     0x41a95f
  41a8f3:	sbb    ch,bl
  41a8f5:	repz or eax,0xc4344f4c
  41a8fb:	popf   
  41a8fc:	dec    ebp
  41a8fd:	sti    
  41a8fe:	xor    eax,0x9d4a3d24
  41a903:	cdq    
  41a904:	jmp    0x7f05a849
  41a909:	mov    ah,0xd9
  41a90b:	or     eax,0xcd3cdcc0
  41a910:	xchg   ecx,eax
  41a911:	mov    ebp,DWORD PTR [ebx+0x4d105e6d]
  41a917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a918:	clc    
  41a919:	sbb    ebp,DWORD PTR [ebx-0x1f3afd2d]
  41a91f:	xor    BYTE PTR [eax+ecx*4-0x14aaece1],bl
  41a926:	or     esp,DWORD PTR [esi]
  41a928:	mov    ch,0x6a
  41a92a:	sbb    eax,0x414364d9
  41a92f:	outs   dx,BYTE PTR ds:[esi]
  41a930:	inc    edi
  41a931:	(bad)  
  41a932:	inc    BYTE PTR [esi+0x5e]
  41a935:	inc    esp
  41a936:	sahf   
  41a937:	data16 das 
  41a939:	sbb    ah,BYTE PTR [ebp+0x47f23559]
  41a93f:	aaa    
  41a940:	inc    ecx
  41a941:	or     eax,0xb0990c6d
  41a946:	xchg   ecx,eax
  41a947:	test   DWORD PTR [edi+ecx*2-0x7c],ebx
  41a94b:	cmc    
  41a94c:	pop    edi
  41a94d:	pop    esi
  41a94e:	daa    
  41a94f:	popa   
  41a950:	test   edi,edx
  41a952:	mov    edx,0x88e5f0ea
  41a957:	in     al,0x9a
  41a959:	inc    esp
  41a95a:	es pop ss
  41a95c:	jg     0x41a8ff
  41a95e:	lds    esp,FWORD PTR [edi-0x6b]
  41a961:	mov    edi,0x84a9a213
  41a966:	outs   dx,BYTE PTR ds:[esi]
  41a967:	mov    edx,DWORD PTR [edi-0x29]
  41a96a:	lods   al,BYTE PTR es:[esi]
  41a96c:	xlat   BYTE PTR ds:[ebx]
  41a96d:	scas   al,BYTE PTR es:[edi]
  41a96e:	cmp    ebp,DWORD PTR [ecx-0x71e5a695]
  41a974:	hlt    
  41a975:	dec    edx
  41a976:	sub    edx,eax
  41a978:	scas   eax,DWORD PTR es:[edi]
  41a979:	add    eax,0x1e5b68ca
  41a97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97f:	xor    cl,BYTE PTR [ecx]
  41a981:	or     eax,0x82b9d996
  41a986:	loope  0x41a93d
  41a988:	scas   eax,DWORD PTR es:[edi]
  41a989:	mov    WORD PTR [ecx],gs
  41a98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a98c:	pop    edx
  41a98d:	push   esi
  41a98e:	(bad)  
  41a98f:	mov    esi,0x2daa1b8e
  41a994:	aas    
  41a995:	fstp   TBYTE PTR [edx-0x50]
  41a998:	ret    
  41a999:	out    dx,eax
  41a99a:	cs dec ecx
  41a99c:	jno    0x41a991
  41a99e:	pop    edi
  41a99f:	adc    ebx,ebx
  41a9a1:	pusha  
  41a9a2:	ret    0xbedb
  41a9a5:	jp     0x21cb5051
  41a9ab:	retf   
  41a9ac:	pop    ebp
  41a9ad:	into   
  41a9ae:	mov    dh,0xc9
  41a9b0:	add    eax,0x6e80dcac
  41a9b5:	lea    ecx,[ebx-0x69f5b17f]
  41a9bb:	mov    DWORD PTR [ecx+0x4992980c],edx
  41a9c1:	adc    eax,0x8859dbb7
  41a9c6:	add    BYTE PTR [ecx+0xc],al
  41a9c9:	jle    0x41aa3b
  41a9cb:	and    eax,0xaaf4fe7c
  41a9d0:	or     al,BYTE PTR [esi]
  41a9d2:	repz mov ds:0x559781f0,al
  41a9d8:	fsubr  DWORD PTR [ecx-0x44]
  41a9db:	jae    0x41a9b7
  41a9dd:	fwait
  41a9de:	cmc    
  41a9df:	push   ecx
  41a9e0:	sub    ebx,edi
  41a9e2:	cmc    
  41a9e3:	jmp    0x41a97d
  41a9e5:	mov    fs,WORD PTR [edx+0x62]
  41a9e8:	mov    edx,DWORD PTR [ebx-0x80]
  41a9eb:	dec    BYTE PTR [edx+edx*4]
  41a9ee:	aam    0x81
  41a9f0:	aam    0xe0
  41a9f2:	(bad)  
  41a9f4:	fidiv  WORD PTR [edi]
  41a9f6:	bound  ebp,QWORD PTR [ebx]
  41a9f8:	iret   
  41a9f9:	mov    edi,0x52c97d92
  41a9fe:	pop    ebx
  41a9ff:	xlat   BYTE PTR ds:[ebx]
  41aa00:	add    bh,ch
  41aa02:	push   0xffffffc5
  41aa04:	and    al,0xe2
  41aa06:	xchg   ebp,eax
  41aa07:	xchg   DWORD PTR [esi+0x26be3f33],ebx
  41aa0d:	sub    al,0x49
  41aa0f:	mov    edi,0xf4a7fe1d
  41aa14:	loopne 0x41aa42
  41aa16:	push   ebx
  41aa17:	or     ah,BYTE PTR [ebx]
  41aa19:	mov    edi,0x93130550
  41aa1e:	cs (bad) {k3}
  41aa24:	dec    esi
  41aa25:	add    BYTE PTR [edx],al
  41aa27:	xchg   esi,eax
  41aa28:	daa    
  41aa29:	push   esi
  41aa2a:	nop
  41aa2b:	jp     0x41aa28
  41aa2d:	add    DWORD PTR [edi-0x5a],ebx
  41aa30:	cli    
  41aa31:	pop    edx
  41aa32:	push   eax
  41aa33:	push   0xffffff9c
  41aa35:	imul   eax,DWORD PTR [eax],0x5f
  41aa38:	hlt    
  41aa39:	adc    al,0x7b
  41aa3b:	sub    DWORD PTR [ebx+0x67a0acda],esp
  41aa41:	mov    ch,0x25
  41aa43:	and    BYTE PTR [eax],cl
  41aa45:	cmp    BYTE PTR [eax-0x4c],dh
  41aa48:	stc    
  41aa49:	mov    ds:0xa3cbf825,al
  41aa4e:	dec    ecx
  41aa4f:	fldenv [ecx]
  41aa51:	push   ecx
  41aa52:	retf   0x1c7a
  41aa55:	imul   eax,DWORD PTR [ecx+ebx*4],0xffffffe5
  41aa59:	cmp    eax,0x24378d18
  41aa5e:	mov    ch,BYTE PTR [ebx]
  41aa60:	rcl    DWORD PTR [edx-0x5d],cl
  41aa63:	dec    esi
  41aa64:	or     eax,0xaec9f78a
  41aa69:	pop    eax
  41aa6a:	test   DWORD PTR [edx],ecx
  41aa6c:	xchg   DWORD PTR [eax],esp
  41aa6e:	popf   
  41aa6f:	sub    bl,BYTE PTR ds:0xa8ce309
  41aa75:	xchg   ecx,eax
  41aa76:	mov    ebp,0x9628704f
  41aa7b:	fndisi(8087 only) 
  41aa7d:	or     al,0x71
  41aa7f:	push   ebp
  41aa80:	mov    dl,0x41
  41aa82:	xchg   esi,eax
  41aa83:	and    BYTE PTR [esi-0x2e],bl
  41aa86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa87:	out    dx,eax
  41aa88:	dec    esi
  41aa89:	xor    BYTE PTR [eax+eiz*2],0xd6
  41aa8d:	fisttp QWORD PTR [ebp+0x7d6ee547]
  41aa93:	and    al,0x8a
  41aa95:	and    bl,bh
  41aa97:	dec    esp
  41aa98:	call   0x5aed6b39
  41aa9d:	sbb    eax,0x1b654ec7
  41aaa2:	imul   esp,eax,0xefb6afe4
  41aaa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa9:	(bad)  
  41aaaa:	jg     0x41aaa1
  41aaac:	pop    eax
  41aaad:	imul   BYTE PTR ds:0xaadf062c
  41aab3:	int    0xef
  41aab5:	dec    ebx
  41aab6:	hlt    
  41aab7:	sti    
  41aab8:	mov    edx,DWORD PTR [esp+ebp*8-0x29]
  41aabc:	gs sbb al,0x39
  41aabf:	jae    0x41ab14
  41aac1:	add    eax,0xb77989b9
  41aac6:	cld    
  41aac7:	jle    0x41aab4
  41aac9:	daa    
  41aaca:	push   es
  41aacb:	sbb    DWORD PTR [esi+0x6f37e02a],ebp
  41aad1:	out    0xd2,al
  41aad3:	leave  
  41aad4:	push   ebx
  41aad5:	sti    
  41aad6:	xchg   esp,eax
  41aad7:	outs   dx,DWORD PTR ds:[esi]
  41aad8:	jmp    0x1a4e1a23
  41aadd:	int3   
  41aade:	and    eax,0x1811119c
  41aae3:	lods   al,BYTE PTR ds:[esi]
  41aae4:	fstp   TBYTE PTR [edx+eiz*8+0x47]
  41aae8:	add    al,0xef
  41aaea:	jg     0x41aade
  41aaec:	push   eax
  41aaed:	mov    esi,0x67383ddf
  41aaf2:	(bad)  
  41aaf3:	icebp  
  41aaf4:	push   es
  41aaf5:	add    ecx,ebx
  41aaf7:	fnsave [ebx]
  41aaf9:	pop    edi
  41aafa:	fistp  QWORD PTR [ebx-0xdc87ca2]
  41ab00:	cs mov al,0x68
  41ab03:	call   0xede5958c
  41ab08:	push   edi
  41ab09:	int    0x57
  41ab0b:	mov    esi,esi
  41ab0d:	into   
  41ab0e:	sbb    esi,ebx
  41ab10:	xor    ecx,DWORD PTR [ecx]
  41ab12:	bound  edi,QWORD PTR [edx-0x24c0357a]
  41ab18:	fsub   st,st(1)
  41ab1a:	push   ebp
  41ab1b:	addr16 data16 add al,0x32
  41ab1f:	int3   
  41ab20:	pop    edi
  41ab21:	mov    edx,ss
  41ab23:	mov    esi,0x4cde23
  41ab28:	rep outs dx,DWORD PTR ds:[esi]
  41ab2a:	push   eax
  41ab2b:	jmp    0x41ab13
  41ab2d:	mov    ds:0x2c740a8f,al
  41ab32:	cmp    ah,BYTE PTR [edi+ebp*1+0x42219217]
  41ab39:	cwde   
  41ab3a:	pop    esp
  41ab3b:	push   ecx
  41ab3c:	xor    esp,DWORD PTR [eax-0x3f]
  41ab3f:	dec    esp
  41ab40:	jnp    0x41ab5c
  41ab42:	hlt    
  41ab43:	(bad)  
  41ab44:	dec    esp
  41ab45:	adc    DWORD PTR [esi+0x1758ec87],edx
  41ab4b:	int    0x74
  41ab4d:	not    DWORD PTR [eax]
  41ab4f:	mov    ebp,DWORD PTR [edx-0x2d]
  41ab52:	dec    ecx
  41ab53:	xchg   ecx,eax
  41ab54:	pop    ds
  41ab55:	inc    DWORD PTR [ecx+0x5708f8c1]
  41ab5b:	add    BYTE PTR [edi],cl
  41ab5d:	scas   eax,DWORD PTR es:[edi]
  41ab5e:	retf   0x4d89
  41ab61:	test   al,0x8b
  41ab63:	dec    ebp
  41ab64:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41ab6a:	(bad)  
  41ab6c:	add    BYTE PTR fs:[ebx],cl
  41ab6f:	retf   0x4d89
  41ab72:	lods   al,BYTE PTR ds:[esi]
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	dec    edi
  41acb5:	call   0x2f1a0b31
  41acba:	adc    ecx,DWORD PTR [ebx-0x5c]
  41acbd:	inc    ebx
  41acbe:	retf   
  41acbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc0:	mov    edx,0x17b2b39
  41acc5:	add    BYTE PTR [eax],al
  41acc7:	add    BYTE PTR [ebx+0x3a],al
  41acca:	pop    esp
  41accb:	inc    ebx
  41accc:	jne    0x41ad40
  41acce:	jb     0x41ad35
  41acd0:	outs   dx,BYTE PTR ds:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp+0x7a3c916e],0xbf
  41e48b:	jge    0x41e485
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   BYTE PTR [edx],al
  41e492:	add    BYTE PTR [eax],al
  41e494:	push   ebx
  41e495:	fs scas al,BYTE PTR es:[edi]
  41e497:	jg     0x41e4ea
  41e499:	inc    edx
  41e49a:	fst    QWORD PTR [edi-0x15337cb9]
  41e4a0:	push   ebp
  41e4a1:	loopne 0x41e46c
  41e4a3:	por    mm1,QWORD PTR [eax+0x2690250b]
  41e4aa:	jecxz  0x41e4cf
  41e4ac:	sub    eax,0x37340c9d
  41e4b1:	je     0x41e516
  41e4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b4:	(bad)  
  41e4b5:	in     al,0x4c
  41e4b7:	data16 or ah,BYTE PTR ds:[ebx-0xc2ee0eb]
  41e4bf:	jo     0x41e469
  41e4c1:	sub    bl,BYTE PTR [edi]
  41e4c3:	outs   dx,DWORD PTR ds:[esi]
  41e4c4:	int3   
  41e4c5:	cmp    ebx,DWORD PTR [ebp-0x73]
  41e4c8:	cdq    
  41e4c9:	sbb    ch,BYTE PTR [esi]
  41e4cb:	jmp    0x41e4b6
  41e4cd:	out    dx,al
  41e4ce:	sbb    bh,BYTE PTR [ebx]
  41e4d0:	and    BYTE PTR [edi],bl
  41e4d2:	scas   al,BYTE PTR es:[edi]
  41e4d3:	clc    
  41e4d4:	xchg   ecx,eax
  41e4d5:	nop
  41e4d6:	nop
  41e4d7:	push   eax
  41e4d8:	repnz push edi
  41e4da:	cld    
  41e4db:	mov    ecx,0x73e74101
  41e4e0:	jb     0x41e516
  41e4e2:	scas   eax,DWORD PTR es:[edi]
  41e4e3:	or     ebx,DWORD PTR ds:0x8dc72ac6
  41e4e9:	push   esp
  41e4ea:	int3   
  41e4eb:	les    ecx,FWORD PTR [edx-0x43]
  41e4ee:	and    al,BYTE PTR [ecx]
  41e4f0:	push   ss
  41e4f1:	push   eax
  41e4f2:	fnstcw WORD PTR ds:0x24db51d5
  41e4f8:	retf   0xc876
  41e4fb:	mov    ds:0xd2f94faa,al
  41e500:	sbb    eax,0xbde88ffc
  41e505:	push   fs
  41e507:	mov    edi,fs
  41e509:	mov    WORD PTR [di-0x57c1],ss
  41e50e:	icebp  
  41e50f:	xchg   ebx,eax
  41e510:	in     eax,dx
  41e511:	push   esi
  41e512:	cmc    
  41e513:	sbb    esp,DWORD PTR [ebx+0x7772a9ab]
  41e519:	or     esi,DWORD PTR [edi+0x12]
  41e51c:	xchg   esp,eax
  41e51d:	sar    DWORD PTR [ecx+0x4f],cl
  41e520:	stos   BYTE PTR es:[edi],al
  41e521:	adc    edx,DWORD PTR [eax-0x24ea4d2d]
  41e527:	sub    BYTE PTR [esi+ecx*1-0x14452946],ch
  41e52e:	and    al,BYTE PTR [esi-0x3e602587]
  41e534:	jne    0x41e596
  41e536:	inc    edi
  41e537:	stos   DWORD PTR es:[edi],eax
  41e538:	out    0xb2,al
  41e53a:	dec    ebp
  41e53b:	fist   WORD PTR [ecx-0x4f]
  41e53e:	mov    ebp,0x90f4b45c
  41e543:	sub    BYTE PTR ds:0xa33842db,dl
  41e549:	mov    ecx,0x1fd4c3a0
  41e54e:	cmp    edi,esi
  41e550:	ror    BYTE PTR [ebx+ebx*4-0x4912fe71],1
  41e557:	sub    ebp,edi
  41e559:	loop   0x41e558
  41e55b:	leave  
  41e55c:	cmpxchg BYTE PTR [eax-0xe],cl
  41e560:	test   BYTE PTR [ebx-0x5c],dh
  41e563:	push   eax
  41e564:	inc    ebx
  41e565:	mov    ah,0x3f
  41e567:	jle    0x41e5b4
  41e569:	xchg   ebx,eax
  41e56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e56b:	jl     0x41e535
  41e56d:	cld    
  41e56e:	ja     0x41e500
  41e570:	(bad)  
  41e571:	out    0xff,eax
  41e573:	imul   esp,DWORD PTR [edx-0x4c7db1cc],0x7d681ef9
  41e57d:	mov    BYTE PTR [ecx-0x4a586cf1],dh
  41e583:	push   ebp
  41e584:	(bad)  
  41e585:	aam    0x39
  41e587:	shl    BYTE PTR [esi+eiz*8-0x73],1
  41e58b:	ins    DWORD PTR es:[edi],dx
  41e58c:	mov    esi,0xff228e86
  41e591:	retf   
  41e592:	sbb    BYTE PTR [ecx],ch
  41e594:	(bad)  
  41e595:	cmp    BYTE PTR [eax+0x22],cl
  41e598:	sub    edi,DWORD PTR [ebx+0x39081c30]
  41e59e:	test   al,0x91
  41e5a0:	xor    edx,esi
  41e5a2:	mov    eax,0x22aa5156
  41e5a7:	loopne 0x41e580
  41e5a9:	mov    ah,0x38
  41e5ab:	add    eax,0x12473f4a
  41e5b0:	add    edx,DWORD PTR [ebx+0x5d2d909e]
  41e5b6:	repz js 0x41e5fd
  41e5b9:	shl    ebx,cl
  41e5bb:	pop    ss
  41e5bc:	daa    
  41e5bd:	cmp    ebp,DWORD PTR [esi+0x5a24bafb]
  41e5c3:	arpl   WORD PTR [ebp+0x40],cx
  41e5c6:	nop
  41e5c7:	repnz sar BYTE PTR ds:0x4f22ee18,0x91
  41e5cf:	les    esi,FWORD PTR [ecx-0x12]
  41e5d2:	stc    
  41e5d3:	clc    
  41e5d4:	jmp    0x350aaf11
  41e5d9:	push   edi
  41e5da:	cs (bad) 
  41e5dc:	fidivr DWORD PTR [eax]
  41e5de:	dec    ecx
  41e5df:	pop    esi
  41e5e0:	xchg   esi,eax
  41e5e1:	aad    0x24
  41e5e3:	push   0xffffff8e
  41e5e5:	inc    edx
  41e5e6:	std    
  41e5e7:	xor    eax,0x7c3fa277
  41e5ec:	psubusw mm3,QWORD PTR [edx+0x3f]
  41e5f0:	in     al,0x6d
  41e5f2:	dec    ebp
  41e5f3:	es fwait
  41e5f5:	into   
  41e5f6:	or     esi,eax
  41e5f8:	xor    esi,DWORD PTR [edi+ebp*8]
  41e5fb:	and    eax,edi
  41e5fd:	jmp    0x41e59b
  41e5ff:	or     ebx,ebx
  41e601:	adc    ebp,DWORD PTR [esi+0x72]
  41e604:	xor    al,0xb2
  41e606:	and    ecx,DWORD PTR [ecx]
  41e608:	xchg   edi,eax
  41e609:	inc    ebp
  41e60a:	or     al,0xf2
  41e60c:	sti    
  41e60d:	outs   dx,DWORD PTR ds:[esi]
  41e60e:	xchg   edi,eax
  41e60f:	int3   
  41e610:	dec    esi
  41e611:	add    al,0xd1
  41e613:	cli    
  41e614:	sub    BYTE PTR cs:[ecx],dl
  41e617:	mov    ebx,0xbeb3e932
  41e61c:	std    
  41e61d:	fwait
  41e61e:	sar    DWORD PTR [edx-0x50e6133e],1
  41e624:	loop   0x41e679
  41e626:	mov    ch,0x9e
  41e628:	mov    bh,0x72
  41e62a:	dec    esp
  41e62b:	out    0xa5,al
  41e62d:	into   
  41e62e:	add    al,0x66
  41e630:	mov    dh,0xff
  41e632:	pop    esp
  41e633:	mov    ?,WORD PTR ds:0xc2ae01ee
  41e639:	xchg   esp,eax
  41e63a:	mov    BYTE PTR [ebx+edx*4],ah
  41e63d:	mov    eax,0x87a88e35
  41e642:	(bad)  
  41e643:	pop    eax
  41e644:	stos   DWORD PTR es:[edi],eax
  41e645:	out    0xab,eax
  41e647:	cwde   
  41e648:	fninit 
  41e64a:	mov    edx,DWORD PTR fs:[eax]
  41e64d:	ror    DWORD PTR [eax],cl
  41e64f:	jge    0x41e615
  41e651:	fld1   
  41e653:	pusha  
  41e654:	fstp   QWORD PTR [ebx-0x535a0522]
  41e65a:	or     DWORD PTR [ecx+0x714d95c7],edi
  41e660:	sub    BYTE PTR [eax+0x59],al
  41e663:	xor    eax,0xe31eeb64
  41e668:	mov    edi,0x380d9cff
  41e66d:	sbb    eax,0xd5b83d66
  41e672:	cmp    al,0x1
  41e674:	inc    esp
  41e675:	(bad)
  41e678:	out    0xf0,eax
  41e67a:	ins    DWORD PTR es:[edi],dx
  41e67b:	lahf   
  41e67c:	pusha  
  41e67d:	adc    ch,BYTE PTR [esi+0x36246e8]
  41e683:	fimul  WORD PTR fs:[edx]
  41e686:	and    ah,dh
  41e688:	and    ecx,DWORD PTR [ebx-0x7c]
  41e68b:	pusha  
  41e68c:	xor    eax,0xea535c40
  41e691:	add    DWORD PTR [edi],ebx
  41e693:	sar    DWORD PTR [ecx+0x1ac2ec9d],cl
  41e699:	adc    ecx,DWORD PTR [edi+esi*2]
  41e69c:	dec    esp
  41e69d:	call   0x86972d6b
  41e6a2:	bound  eax,QWORD PTR [ecx-0x1d]
  41e6a5:	fs je  0x41e6cf
  41e6a8:	cmp    bl,BYTE PTR [ebx+0x7fa20e12]
  41e6ae:	in     eax,0xe1
  41e6b0:	xchg   esi,eax
  41e6b1:	daa    
  41e6b2:	mov    bl,0x73
  41e6b4:	iret   
  41e6b5:	mov    esi,0xaf8fda1b
  41e6ba:	jmp    0x9e243b73
  41e6bf:	dec    eax
  41e6c0:	mov    ch,0x23
  41e6c2:	push   ecx
  41e6c3:	or     edi,DWORD PTR [ecx+0x26dae51]
  41e6c9:	repnz (bad) 
  41e6cb:	dec    eax
  41e6cc:	dec    eax
  41e6cd:	dec    esi
  41e6ce:	fmulp  st(0),st
  41e6d0:	jl     0x41e6c5
  41e6d2:	daa    
  41e6d3:	fnstsw WORD PTR [eax]
  41e6d5:	xchg   ebx,eax
  41e6d6:	mov    dh,0xc5
  41e6d8:	cmc    
  41e6d9:	mov    bl,0xe1
  41e6db:	(bad)  
  41e6dc:	psubsb mm7,QWORD PTR [edi-0x7]
  41e6e0:	add    dh,cl
  41e6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e3:	mov    bh,0xd5
  41e6e5:	int3   
  41e6e6:	out    0x3,al
  41e6e8:	outs   dx,DWORD PTR ds:[esi]
  41e6e9:	push   0x31
  41e6eb:	nop
  41e6ec:	push   eax
  41e6ed:	iret   
  41e6ee:	add    DWORD PTR [ecx+0x3c],0xffffff9f
  41e6f2:	xchg   edi,eax
  41e6f3:	rcl    BYTE PTR [edi+ebp*4-0x22],0x8a
  41e6f8:	push   ebx
  41e6f9:	les    edi,FWORD PTR [eax-0x51f5435d]
  41e6ff:	fs aad 0xd3
  41e702:	aam    0xc5
  41e704:	repz retf 
  41e706:	popf   
  41e707:	xchg   ebp,eax
  41e708:	pop    esp
  41e709:	pop    ebx
  41e70a:	jae    0x41e6bb
  41e70c:	push   edi
  41e70d:	cmp    al,0x7e
  41e70f:	mov    cl,0x37
  41e711:	data16 jne 0x41e697
  41e714:	popf   
  41e715:	and    eax,0xe65d5749
  41e71a:	add    BYTE PTR [eax],al
  41e71c:	ja     0x41e76a
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	jmp    0x41e714
  41e72a:	sahf   
  41e72b:	addr16 jle 0x41e792
  41e72e:	add    DWORD PTR [eax],eax
  41e730:	xchg   BYTE PTR [edx],al
  41e732:	add    BYTE PTR [eax],al
  41e734:	mov    ebx,0xc1a746f8
  41e739:	cwde   
  41e73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e73b:	les    ebx,FWORD PTR ds:0x6ed6e529
  41e741:	inc    esp
  41e742:	dec    ebx
  41e743:	sub    DWORD PTR [eax-0x5a131257],edi
  41e749:	ins    DWORD PTR es:[edi],dx
  41e74a:	cli    
  41e74b:	adc    BYTE PTR [edx],al
  41e74d:	pop    ds
  41e74e:	pop    ebx
  41e74f:	pop    esi
  41e750:	scas   al,BYTE PTR es:[edi]
  41e751:	push   0x3b890278
  41e756:	in     eax,0x7
  41e758:	mov    ebx,0xb5c6218d
  41e75d:	rol    DWORD PTR [eax+0x18],cl
  41e760:	fdiv   QWORD PTR [ebx+0x7511adf2]
  41e766:	js     0x41e78d
  41e768:	cmp    bl,BYTE PTR [edi]
  41e76a:	out    0xb7,eax
  41e76c:	jnp    0x41e710
  41e76e:	lods   eax,DWORD PTR ds:[esi]
  41e76f:	and    esp,ebx
  41e771:	xor    edx,ecx
  41e773:	and    BYTE PTR [edx-0x7090fdcc],0x60
  41e77a:	push   esp
  41e77b:	nop
  41e77c:	mov    esp,0xa5bf77e7
  41e781:	mov    bl,0xd0
  41e783:	cmp    ecx,DWORD PTR [esi]
  41e785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e786:	fcmovnbe st,st(0)
  41e788:	add    DWORD PTR [eax],0x72
  41e78b:	sbb    ecx,edi
  41e78d:	jmp    0x41e75c
  41e78f:	test   eax,0xc7313393
  41e794:	dec    ebp
  41e795:	jecxz  0x41e76a
  41e797:	je     0x41e75c
  41e799:	mov    al,0x90
  41e79b:	jmp    0x53e787da
  41e7a0:	icebp  
  41e7a1:	es (bad) 
  41e7a3:	adc    eax,0xd610b9c9
  41e7a8:	push   eax
  41e7a9:	aam    0xe2
  41e7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7ac:	rol    DWORD PTR [ecx],1
  41e7ae:	ins    BYTE PTR es:[edi],dx
  41e7af:	mov    dl,0xbd
  41e7b1:	adc    ecx,esp
  41e7b3:	mov    ds:0x36a293b6,al
  41e7b8:	mov    bh,0x4b
  41e7ba:	(bad)  
  41e7bc:	rol    DWORD PTR [ebp+0x67],cl
  41e7bf:	xor    al,0xe5
  41e7c1:	adc    al,0x85
  41e7c3:	dec    esp
  41e7c4:	int    0xe
  41e7c6:	imul   BYTE PTR [ecx]
  41e7c8:	sbb    ecx,DWORD PTR [eax]
  41e7ca:	int3   
  41e7cb:	cmp    edx,DWORD PTR [ebx+ecx*8-0x37]
  41e7cf:	ret    0xf46
  41e7d2:	sar    DWORD PTR [eax-0x5c],cl
  41e7d5:	pop    ss
  41e7d6:	cdq    
  41e7d7:	sbb    dl,BYTE PTR [eax-0x23]
  41e7da:	push   ds
  41e7db:	inc    esp
  41e7dc:	rcr    DWORD PTR [ebp+esi*1+0x64],1
  41e7e0:	or     BYTE PTR [eax+edi*1],al
  41e7e3:	lds    ecx,FWORD PTR [ebp+eiz*8+0x586e8b5]
  41e7ea:	mov    eax,ds:0xf714a047
  41e7ef:	pop    edx
  41e7f0:	lahf   
  41e7f1:	cld    
  41e7f2:	add    al,0x36
  41e7f4:	xchg   BYTE PTR [ecx+0x2f],ch
  41e7f7:	sahf   
  41e7f8:	pop    ebp
  41e7f9:	push   ecx
  41e7fa:	aas    
  41e7fb:	and    DWORD PTR [ebx+edx*1-0x14506291],esi
  41e802:	push   edx
  41e803:	add    eax,0x179697af
  41e808:	jp     0x41e878
  41e80a:	or     eax,0x117c060
  41e80f:	lock ds mov esi,0x6d5505d1
  41e816:	gs stc 
  41e818:	and    BYTE PTR [edi],0x37
  41e81b:	shr    dh,1
  41e81d:	fisttp DWORD PTR [ebx-0x2d5b5262]
  41e823:	iret   
  41e824:	repz imul DWORD PTR [esi]
  41e827:	shl    BYTE PTR [edx+0x52e22608],1
  41e82d:	or     al,BYTE PTR [ebp-0x53]
  41e830:	leave  
  41e831:	xchg   esi,eax
  41e832:	sub    ah,ch
  41e834:	inc    eax
  41e835:	push   0x8d869684
  41e83a:	push   ss
  41e83b:	fdivr  DWORD PTR [ecx-0x20b7f66e]
  41e841:	fild   DWORD PTR [edi]
  41e843:	sbb    al,0x99
  41e845:	retf   0x54ca
  41e848:	outs   dx,BYTE PTR ds:[esi]
  41e849:	fldcw  WORD PTR [edi]
  41e84b:	mov    ch,al
  41e84d:	inc    edx
  41e84e:	stos   DWORD PTR es:[edi],eax
  41e84f:	fild   DWORD PTR cs:0xcc656247
  41e856:	add    al,0x8f
  41e858:	sti    
  41e859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e85a:	daa    
  41e85b:	cmp    ch,BYTE PTR [esi]
  41e85d:	js     0x41e817
  41e85f:	dec    ebp
  41e860:	aas    
  41e861:	iret   
  41e862:	push   edi
  41e863:	pop    esi
  41e864:	push   ecx
  41e865:	and    al,0x6e
  41e867:	push   ebp
  41e868:	adc    eax,0x905d5287
  41e86d:	inc    edx
  41e86e:	in     al,dx
  41e86f:	push   ecx
  41e870:	repz out 0x64,al
  41e873:	mov    dl,0xa7
  41e875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e876:	es inc esp
  41e878:	and    ebx,DWORD PTR ds:0x5e1446a2
  41e87e:	pop    ds
  41e87f:	int3   
  41e880:	(bad)  
  41e881:	outs   dx,DWORD PTR ds:[esi]
  41e882:	push   eax
  41e883:	and    eax,0x101aff48
  41e888:	loopne 0x41e8b7
  41e88a:	add    cl,BYTE PTR [edi-0x4c]
  41e88d:	push   ebp
  41e88e:	pop    es
  41e88f:	jg     0x41e882
  41e891:	and    eax,0x607b4467
  41e896:	mov    al,ds:0x33256ee2
  41e89b:	shl    eax,0x3b
  41e89e:	sahf   
  41e89f:	or     bl,ah
  41e8a1:	cmp    ecx,edi
  41e8a3:	scas   eax,DWORD PTR es:[edi]
  41e8a4:	sub    edi,DWORD PTR [esi-0x43]
  41e8a7:	test   eax,0x410ec220
  41e8ad:	or     eax,0x569e765e
  41e8b2:	mov    eax,0xb35faffb
  41e8b7:	ret    0x9068
  41e8ba:	add    eax,0x1c55722a
  41e8bf:	and    al,0xbc
  41e8c1:	push   esi
  41e8c2:	sub    al,0x9
  41e8c4:	imul   esp,DWORD PTR [edx],0xbb0e833b
  41e8ca:	ret    0xf39e
  41e8cd:	add    al,0x3c
  41e8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d0:	and    al,0x6b
  41e8d2:	out    dx,al
  41e8d3:	out    0x96,al
  41e8d5:	dec    esi
  41e8d6:	out    dx,al
  41e8d7:	mov    DWORD PTR [ecx-0x69af71e8],edx
  41e8dd:	pushf  
  41e8de:	cmp    ecx,ecx
  41e8e0:	imul   ebx,DWORD PTR [edi],0x54
  41e8e3:	dec    ecx
  41e8e4:	jmp    0xd678:0x5aa465d8
  41e8eb:	inc    ebx
  41e8ec:	add    al,0xce
  41e8ee:	mov    bh,0x11
  41e8f0:	and    al,0x89
  41e8f2:	add    al,0x7
  41e8f4:	test   DWORD PTR [esp+ecx*2-0x4f],ebp
  41e8f8:	inc    eax
  41e8f9:	and    BYTE PTR [ebx-0x753120d1],al
  41e8ff:	add    BYTE PTR [eax-0x556bc91c],0x5b
  41e906:	cmp    esi,edx
  41e908:	xchg   esi,eax
  41e909:	mov    eax,0x975adc5f
  41e90e:	add    ebx,DWORD PTR [ebp-0x2c7cd27e]
  41e914:	pop    esp
  41e915:	pop    eax
  41e916:	jbe    0x41e969
  41e918:	lahf   
  41e919:	and    eax,0xc7c1dcb9
  41e91e:	test   al,0x35
  41e920:	jmp    0x1a5b:0xcf22f2e5
  41e927:	fadd   QWORD PTR [eax]
  41e929:	xchg   esp,eax
  41e92a:	push   ss
  41e92b:	xor    ch,ah
  41e92d:	jg     0x41e94a
  41e92f:	or     al,0xe5
  41e931:	lock div DWORD PTR [esi-0x6f]
  41e935:	cmp    eax,0x4a0f4602
  41e93a:	aad    0x9a
  41e93c:	sub    eax,0x7a3fb446
  41e941:	pop    ss
  41e942:	pop    edi
  41e943:	sbb    esp,esi
  41e945:	inc    esi
  41e946:	push   0xffffffa5
  41e948:	sub    DWORD PTR [ecx+esi*1],esi
  41e94b:	or     esi,DWORD PTR [esi+0x40449903]
  41e951:	add    esp,DWORD PTR [edx+0x41b0d9ef]
  41e957:	inc    esp
  41e958:	sub    eax,esi
  41e95a:	jno    0x41e941
  41e95c:	sub    esp,DWORD PTR [edi+edi*8-0x5c57138a]
  41e963:	push   es
  41e964:	pop    eax
  41e965:	xor    ah,BYTE PTR [edi]
  41e967:	inc    edi
  41e968:	sti    
  41e969:	fsubr  st(0),st
  41e96b:	jmp    0x82adf38a
  41e970:	add    cl,dl
  41e972:	add    eax,0xe22ec409
  41e977:	add    DWORD PTR [ebx+0x1d06e8a9],0x101c9cda
  41e981:	or     eax,0x292a58a6
  41e986:	cmp    bh,BYTE PTR [eax-0x3c]
  41e989:	loop   0x41e99a
  41e98b:	ret    0x9539
  41e98e:	mov    ds:0x3fb67cd,al
  41e993:	fwait
  41e994:	in     al,0x15
  41e996:	or     al,0x38
  41e998:	scas   al,BYTE PTR es:[edi]
  41e999:	inc    edi
  41e99a:	ficomp WORD PTR [ebx]
  41e99c:	in     al,0x8e
  41e99e:	push   eax
  41e99f:	xlat   BYTE PTR ds:[ebx]
  41e9a0:	or     dh,cl
  41e9a2:	cmp    cl,BYTE PTR ds:0xeb277245
  41e9a8:	jp     0x41e946
  41e9aa:	add    al,0x25
  41e9ac:	sbb    ch,BYTE PTR [ecx+0x225738cc]
  41e9b2:	mov    esp,0x42019360
  41e9b7:	dec    eax
  41e9b8:	rcr    BYTE PTR [edx],0x0
  41e9bb:	add    BYTE PTR [edi],al
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x6274a7d0
  41e9cb:	xchg   BYTE PTR [edi+eiz*2],al
  41e9ce:	add    DWORD PTR [eax],eax
  41e9d0:	xchg   BYTE PTR [edx],al
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	scas   eax,DWORD PTR es:[edi]
  41e9d5:	xor    edx,ebx
  41e9d7:	or     DWORD PTR [edi+0x27eb8f00],ecx
  41e9dd:	cmp    DWORD PTR [eax+0x23],ebp
  41e9e0:	jmp    0x41ea22
  41e9e2:	stos   DWORD PTR es:[edi],eax
  41e9e3:	sbb    esp,DWORD PTR [eax+0x2ffc76d8]
  41e9e9:	cld    
  41e9ea:	outs   dx,BYTE PTR ds:[esi]
  41e9eb:	lea    esi,[ecx-0xa]
  41e9ee:	jbe    0x41e9e7
  41e9f0:	aad    0x9f
  41e9f2:	sbb    eax,0xac9294ff
  41e9f7:	mov    WORD PTR [edx],es
  41e9f9:	cmp    eax,0x4e02043c
  41e9fe:	dec    edi
  41e9ff:	jae    0x41ea17
  41ea01:	paddsb mm1,QWORD PTR [ebx-0x6f]
  41ea05:	mov    ah,0x94
  41ea07:	btr    DWORD PTR [edi],0xae
  41ea0b:	mov    eax,ds:0x2b950874
  41ea10:	ret    
  41ea11:	add    BYTE PTR [ebp-0x10b21f1f],0xcb
  41ea18:	stos   BYTE PTR es:[edi],al
  41ea19:	scas   al,BYTE PTR es:[edi]
  41ea1a:	ja     0x41e9c5
  41ea1c:	test   BYTE PTR [eax-0x8],bh
  41ea1f:	adc    edi,DWORD PTR [ebp+esi*8+0x313517e9]
  41ea26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea27:	xchg   esp,eax
  41ea28:	jl     0x41ea0e
  41ea2a:	cmc    
  41ea2b:	dec    ebp
  41ea2c:	jg     0x41ea53
  41ea2e:	ret    
  41ea2f:	pop    ecx
  41ea30:	push   ebx
  41ea31:	xchg   ecx,eax
  41ea32:	inc    ebp
  41ea33:	dec    edi
  41ea34:	fistp  QWORD PTR gs:[edi]
  41ea37:	ins    DWORD PTR es:[edi],dx
  41ea38:	push   ebp
  41ea39:	jge    0x41ea87
  41ea3b:	cmp    al,0xfd
  41ea3d:	inc    edx
  41ea3e:	cwde   
  41ea3f:	jb     0x41ea22
  41ea41:	add    BYTE PTR [ecx+edx*4],ah
  41ea44:	in     al,dx
  41ea45:	jne    0x41ea94
  41ea47:	enter  0xa85c,0xa7
  41ea4b:	and    al,0x5b
  41ea4d:	test   BYTE PTR [ecx-0x14],dh
  41ea50:	cdq    
  41ea51:	jmp    0x8f6e:0xbacf1633
  41ea58:	cmp    DWORD PTR [ecx],ebx
  41ea5a:	test   al,0x62
  41ea5c:	push   esp
  41ea5d:	shr    edi,cl
  41ea5f:	mov    cl,0x8b
  41ea61:	ins    DWORD PTR es:[edi],dx
  41ea62:	or     DWORD PTR [edx],0xb23c4ecc
  41ea68:	push   edx
  41ea69:	shl    BYTE PTR [ecx+0x3],1
  41ea6c:	sbb    edx,0x53d13abf
  41ea72:	stc    
  41ea73:	iret   
  41ea74:	push   edi
  41ea75:	pop    eax
  41ea76:	xchg   ebx,eax
  41ea77:	add    eax,0x8fa7b664
  41ea7c:	jo     0x6a4f955e
  41ea82:	dec    esp
  41ea83:	mov    ah,al
  41ea85:	repnz push edi
  41ea87:	popf   
  41ea88:	dec    ebp
  41ea89:	cdq    
  41ea8a:	outs   dx,BYTE PTR ds:[esi]
  41ea8b:	fmul   QWORD PTR [ebp+0x21]
  41ea8e:	jbe    0x41ead6
  41ea90:	rol    bl,cl
  41ea92:	sub    esi,DWORD PTR [edx]
  41ea94:	xchg   edi,eax
  41ea95:	ja     0x41eac4
  41ea97:	rcr    BYTE PTR ds:0xec465ad4,cl
  41ea9d:	or     bh,al
  41ea9f:	sar    DWORD PTR [eax],0x66
  41eaa2:	ins    DWORD PTR es:[edi],dx
  41eaa3:	mov    edi,esp
  41eaa5:	push   ss
  41eaa6:	adc    eax,DWORD PTR [edx+0x68]
  41eaa9:	or     BYTE PTR [esi-0x4aa13e39],dl
  41eaaf:	mov    ds:0x61aadfae,al
  41eab4:	push   0xf5cc7efe
  41eab9:	mov    ebx,0xd26615d0
  41eabe:	out    0x1d,eax
  41eac0:	cmp    eax,0x677f5f78
  41eac5:	jmp    0x2120580e
  41eaca:	sahf   
  41eacb:	mov    dh,0xdc
  41eacd:	retf   0x5c43
  41ead0:	fcomp  DWORD PTR [edx-0x80]
  41ead3:	ficomp WORD PTR [esi+0xa]
  41ead6:	push   ds
  41ead7:	push   0x4
  41ead9:	hlt    
  41eada:	ss (bad) 
  41eadc:	std    
  41eadd:	das    
  41eade:	inc    edx
  41eadf:	lahf   
  41eae0:	mov    ds:0x5e73a43,eax
  41eae5:	xlat   BYTE PTR ds:[ebx]
  41eae6:	out    0x16,al
  41eae8:	mov    esi,0xefd87e7d
  41eaed:	inc    esp
  41eaee:	stc    
  41eaef:	push   ss
  41eaf0:	sub    ah,BYTE PTR [edi]
  41eaf2:	prefetchnta BYTE PTR [edi-0x3be7b15e]
  41eaf9:	add    BYTE PTR [esi+0x5d],0x5a
  41eafd:	xor    al,0x4b
  41eaff:	adc    dl,BYTE PTR [ebx-0x1b19b043]
  41eb05:	leave  
  41eb06:	push   0xffffffdb
  41eb08:	in     eax,dx
  41eb09:	sub    al,0x84
  41eb0b:	mov    ?,edi
  41eb0d:	xor    BYTE PTR [ecx],bl
  41eb0f:	cmp    BYTE PTR [ebx],al
  41eb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb12:	sti    
  41eb13:	dec    eax
  41eb14:	jecxz  0x41eb0d
  41eb16:	outs   dx,BYTE PTR ds:[esi]
  41eb17:	shl    BYTE PTR [edi],cl
  41eb19:	lds    edi,FWORD PTR [eax+ecx*2-0x11bbb74]
  41eb20:	mov    eax,es:0xfb8a0307
  41eb26:	test   BYTE PTR [eax+0xa0f9fc0],ch
  41eb2c:	scas   al,BYTE PTR es:[edi]
  41eb2d:	lea    esp,[esi-0x42359440]
  41eb33:	mov    eax,ds:0x41d82486
  41eb38:	fisubr DWORD PTR [esi]
  41eb3a:	shl    bh,1
  41eb3c:	std    
  41eb3d:	xor    DWORD PTR [ebp+ebx*1+0x29],edx
  41eb41:	js     0x41eb97
  41eb43:	gs js  0x41eb18
  41eb46:	test   esi,edi
  41eb48:	mov    edi,0x7be884f2
  41eb4d:	dec    edi
  41eb4e:	popf   
  41eb4f:	jnp    0x41eb01
  41eb51:	add    eax,ebp
  41eb53:	bound  edi,QWORD PTR [eax+0x1c80705f]
  41eb59:	pop    edi
  41eb5a:	cmp    DWORD PTR [edx],edi
  41eb5c:	ss stc 
  41eb5e:	push   ebx
  41eb5f:	adc    bh,dh
  41eb61:	jo     0x41eb64
  41eb63:	xor    eax,0x1ccec915
  41eb68:	es test al,0x5f
  41eb6b:	loop   0x41ebc6
  41eb6d:	dec    edx
  41eb6e:	test   DWORD PTR [ebx],eax
  41eb70:	idiv   BYTE PTR [edi]
  41eb72:	(bad)  
  41eb74:	daa    
  41eb75:	loope  0x41eb61
  41eb77:	sub    BYTE PTR [ebx+0x13b66e48],ch
  41eb7d:	xchg   ecx,eax
  41eb7e:	push   ecx
  41eb7f:	xchg   ebp,eax
  41eb80:	je     0x41ebb6
  41eb82:	test   DWORD PTR [edx],edx
  41eb84:	mov    ebx,DWORD PTR [ebx+0x3d7cf9f7]
  41eb8a:	scas   eax,DWORD PTR es:[edi]
  41eb8b:	dec    esp
  41eb8c:	shl    DWORD PTR [eax],cl
  41eb8e:	(bad)  
  41eb90:	(bad)  
  41eb91:	(bad)  
  41eb92:	and    eax,0x28417e04
  41eb97:	push   ebx
  41eb98:	push   esp
  41eb99:	sbb    eax,0x7e2db625
  41eb9e:	jb     0x41eb8b
  41eba0:	bswap  ecx
  41eba2:	neg    BYTE PTR [edx]
  41eba4:	cwde   
  41eba5:	pop    ds
  41eba6:	aaa    
  41eba7:	iret   
  41eba8:	pop    ds
  41eba9:	mov    esi,0x735a1aeb
  41ebae:	ins    BYTE PTR es:[edi],dx
  41ebaf:	imul   edx,ecx,0xffffffd0
  41ebb2:	dec    edx
  41ebb3:	dec    ecx
  41ebb4:	bound  esp,QWORD PTR [esi-0x199bc069]
  41ebba:	pop    esp
  41ebbb:	jmp    0x2be0:0xe1d04b47
  41ebc2:	mov    ds:0x198f035a,al
  41ebc7:	xor    al,0x9d
  41ebc9:	mov    BYTE PTR [ebx+0x17],ch
  41ebcc:	cmp    bl,BYTE PTR [edx-0x3b]
  41ebcf:	lods   al,BYTE PTR ds:[esi]
  41ebd0:	mov    ah,0x70
  41ebd2:	add    al,0xee
  41ebd4:	xlat   BYTE PTR ds:[ebx]
  41ebd5:	ins    BYTE PTR es:[edi],dx
  41ebd6:	call   0xe115184
  41ebdb:	push   ecx
  41ebdc:	lods   al,BYTE PTR ds:[esi]
  41ebdd:	test   DWORD PTR [eax-0x34c09db4],edi
  41ebe3:	dec    eax
  41ebe4:	cmc    
  41ebe5:	xor    eax,0xa98d6c5b
  41ebea:	xchg   esp,eax
  41ebeb:	mov    ecx,DWORD PTR [ebx]
  41ebed:	int3   
  41ebee:	dec    eax
  41ebef:	loop   0x41ec60
  41ebf1:	cs inc edx
  41ebf3:	repnz mov dh,0x42
  41ebf6:	mov    edx,DWORD PTR [edx]
  41ebf8:	shl    DWORD PTR [ebp-0x6c1727e7],0xaa
  41ebff:	dec    ecx
  41ec00:	jnp    0x41ec53
  41ec02:	xor    ebp,ebp
  41ec04:	loopne 0x41ebf8
  41ec06:	enter  0x7a4e,0x70
  41ec0a:	xor    dh,BYTE PTR [edx]
  41ec0c:	loopne 0x41ec62
  41ec0e:	arpl   WORD PTR [edx+ebp*4],ax
  41ec11:	loopne 0x41ec80
  41ec13:	mov    fs,WORD PTR [esi-0x24]
  41ec16:	mov    al,ds:0x4e87bba1
  41ec1b:	and    eax,0xb7d48346
  41ec20:	loopne 0x41ebd4
  41ec22:	daa    
  41ec23:	aas    
  41ec24:	push   ebx
  41ec26:	pop    ebp
  41ec27:	(bad)  
  41ec28:	das    
  41ec29:	in     al,dx
  41ec2a:	sbb    BYTE PTR [ecx],cl
  41ec2c:	pusha  
  41ec2d:	jno    0x41ec2a
  41ec2f:	cmp    BYTE PTR [ebx+0x22],bh
  41ec32:	jno    0x41ec31
  41ec34:	push   edx
  41ec35:	jmp    0x41ebda
  41ec37:	mov    eax,ds:0x9ccbad46
  41ec3c:	inc    ecx
  41ec3d:	(bad)  
  41ec3e:	inc    edx
  41ec3f:	hlt    
  41ec40:	sbb    al,0xf
  41ec42:	idiv   ebp
  41ec44:	out    0x1,eax
  41ec46:	add    eax,DWORD PTR [esi]
  41ec48:	mov    bl,0x88
  41ec4a:	jmp    FWORD PTR [esi]
  41ec4c:	(bad)  
  41ec4d:	imul   eax,DWORD PTR [eax+0x3e6ed7ff],0xffffff9f
  41ec54:	cld    
  41ec55:	ds jecxz 0x41ecd3
  41ec58:	lods   eax,DWORD PTR ds:[esi]
  41ec59:	or     DWORD PTR [eax],eax
  41ec5b:	add    BYTE PTR [esi],bl
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	dec    esp
  41ec69:	out    0x2e,eax
  41ec6b:	bound  ecx,QWORD PTR [edx-0x79fffe97]
  41ec71:	add    al,BYTE PTR [eax]
  41ec73:	add    BYTE PTR [ebx],bh
  41ec75:	fiadd  DWORD PTR [edx]
  41ec77:	jno    0x41ecb5
  41ec79:	mov    ch,0xfc
  41ec7b:	test   BYTE PTR [esi-0x212ed751],bl
  41ec81:	and    BYTE PTR [ecx+0x6e4fe797],cl
  41ec87:	jne    0x41ec59
  41ec89:	or     DWORD PTR [esi],esp
  41ec8b:	sar    BYTE PTR [esi-0x70],0xb1
  41ec8f:	out    dx,ax
  41ec91:	cmp    al,0xe0
  41ec93:	loop   0x41ecfb
  41ec95:	xor    dl,BYTE PTR [edx+0x3d0b4a3e]
  41ec9b:	cmp    ebp,DWORD PTR [edi]
  41ec9d:	mov    esi,0x8cbce4dd
  41eca2:	ret    0xaf0a
  41eca5:	pushf  
  41eca6:	aaa    
  41eca7:	adc    al,0xce
  41eca9:	leave  
  41ecaa:	int3   
  41ecab:	add    eax,0xfe5bcc8d
  41ecb0:	inc    ebp
  41ecb1:	and    BYTE PTR [ebx+0x742484d],ch
  41ecb7:	jle    0x41ec3d
  41ecb9:	push   edi
  41ecba:	xor    al,0xb7
  41ecbc:	jmp    0x18a62794
  41ecc1:	retf   0x4baa
  41ecc4:	or     BYTE PTR ds:0x376cdfdb,bl
  41ecca:	sbb    al,0xf8
  41eccc:	add    eax,0x27c94f09
  41ecd1:	in     al,dx
  41ecd2:	pop    ecx
  41ecd3:	xchg   BYTE PTR [edi],bl
  41ecd5:	sub    DWORD PTR ds:0x25d3d5a7,edi
  41ecdb:	mov    ebp,ebx
  41ecdd:	mov    ch,0xa2
  41ecdf:	dec    edi
  41ece0:	data16 xlat BYTE PTR ds:[ebx]
  41ece2:	pushf  
  41ece3:	call   0x152385ef
  41ece8:	stc    
  41ece9:	mov    ebx,0x664d263a
  41ecee:	leave  
  41ecef:	add    ah,bh
  41ecf1:	or     bh,BYTE PTR [ebx+ecx*1-0x5d]
  41ecf5:	pop    ebp
  41ecf6:	jo     0x41ec93
  41ecf8:	sub    ecx,edx
  41ecfa:	xor    BYTE PTR [eax-0x45],al
  41ecfd:	gs push 0xffffffad
  41ed00:	cmp    edi,DWORD PTR [edx]
  41ed02:	sbb    dh,dh
  41ed04:	jo     0x41ed6b
  41ed06:	sbb    BYTE PTR [eax],dl
  41ed08:	call   0x77d:0x34e9825
  41ed0f:	inc    edi
  41ed10:	pushf  
  41ed11:	shr    DWORD PTR [edx],1
  41ed13:	cwde   
  41ed14:	in     al,dx
  41ed15:	dec    edi
  41ed16:	cmp    eax,0x8a08760b
  41ed1b:	call   DWORD PTR [ecx-0x4d668372]
  41ed21:	out    dx,eax
  41ed22:	add    dl,BYTE PTR [ebx-0x63]
  41ed25:	jbe    0x41ed5e
  41ed27:	cmp    BYTE PTR [ecx+ebx*2-0x4b],0x5f
  41ed2c:	das    
  41ed2d:	pusha  
  41ed2e:	lods   al,BYTE PTR ds:[esi]
  41ed2f:	inc    edx
  41ed30:	iret   
  41ed31:	mov    ah,0x74
  41ed33:	mov    dh,0x7f
  41ed35:	push   0xffffffc5
  41ed37:	or     BYTE PTR [edx-0x45],bh
  41ed3a:	push   es
  41ed3b:	cmp    edi,DWORD PTR [ecx]
  41ed3d:	sbb    eax,0x9a28b7b3
  41ed42:	jns    0x41ecec
  41ed44:	inc    ecx
  41ed45:	xchg   BYTE PTR [edx+0x29],dh
  41ed48:	mov    edx,0xfe09016f
  41ed4d:	into   
  41ed4e:	ret    
  41ed4f:	mov    esp,DWORD PTR [ebp+0x53ee622c]
  41ed55:	xchg   ecx,eax
  41ed56:	mov    DWORD PTR [ecx],edi
  41ed58:	mov    ds:0x1c5ddb08,al
  41ed5d:	aaa    
  41ed5e:	mov    ch,0xb3
  41ed60:	xor    eax,0x52b07094
  41ed65:	repz or esp,DWORD PTR [esi+0x81fc7e1]
  41ed6c:	inc    esi
  41ed6d:	mov    al,ds:0x9c2935f6
  41ed72:	push   ss
  41ed73:	sub    DWORD PTR [ebx+0x33],ebx
  41ed76:	loop   0x41ede1
  41ed78:	inc    ebp
  41ed79:	push   0x2e
  41ed7b:	pop    eax
  41ed7c:	leave  
  41ed7d:	inc    ecx
  41ed7e:	jl     0x41edf5
  41ed80:	(bad)  
  41ed81:	(bad)  
  41ed82:	xchg   sp,ax
  41ed84:	push   eax
  41ed85:	pop    eax
  41ed86:	jge    0x41ee06
  41ed88:	add    eax,0x814a05d7
  41ed8d:	loope  0x41edfd
  41ed8f:	and    ebp,DWORD PTR [edi+0x4c]
  41ed92:	sti    
  41ed93:	mov    al,0x6e
  41ed95:	push   0xd3eb39c8
  41ed9a:	popf   
  41ed9b:	ret    
  41ed9c:	cmc    
  41ed9d:	adc    BYTE PTR [esi-0x3c],0xba
  41eda1:	stc    
  41eda2:	rcr    BYTE PTR [ebx],1
  41eda4:	push   ds
  41eda5:	pop    edx
  41eda6:	xchg   ebx,eax
  41eda7:	mov    al,0x71
  41eda9:	fisubr DWORD PTR [ebp+eiz*8-0x27]
  41edad:	(bad)  
  41edae:	cli    
  41edaf:	mov    ch,0x55
  41edb1:	test   BYTE PTR [eax+0x4e394a2f],0x45
  41edb8:	inc    edx
  41edb9:	push   ebx
  41edba:	outs   dx,DWORD PTR ds:[esi]
  41edbb:	lahf   
  41edbc:	mov    dl,0x37
  41edbe:	add    DWORD PTR [edi-0xdb55c8],edi
  41edc4:	jb     0x41ee45
  41edc6:	adc    DWORD PTR [eax],edx
  41edc8:	aad    0x64
  41edca:	mov    dh,BYTE PTR [edi]
  41edcc:	xchg   esp,eax
  41edcd:	in     eax,dx
  41edce:	neg    DWORD PTR [edi+esi*8]
  41edd1:	and    BYTE PTR [edx+0x8],bl
  41edd4:	lahf   
  41edd5:	cwde   
  41edd6:	mov    esi,0x38da912f
  41eddb:	pop    esp
  41eddc:	sbb    edx,DWORD PTR [esi-0x59]
  41eddf:	xor    esp,DWORD PTR [ebx+ecx*4+0x3fd49b24]
  41ede6:	(bad)  [ecx]
  41ede8:	sub    al,0xf5
  41edea:	xchg   edi,eax
  41edeb:	out    dx,al
  41edec:	cmp    BYTE PTR [edi-0x5a],0x9c
  41edf0:	(bad)  
  41edf2:	ds push cs
  41edf4:	mov    ah,0x5
  41edf6:	shl    BYTE PTR [eax],1
  41edf8:	mov    ecx,0x1bbdf8a9
  41edfd:	push   ebx
  41edfe:	xor    ebx,edi
  41ee00:	and    dl,BYTE PTR [esi+0x3b]
  41ee03:	inc    esp
  41ee04:	(bad)  
  41ee05:	mov    DWORD PTR [ecx+0x7b],ebp
  41ee08:	mov    ds:0x11bbb27,eax
  41ee0d:	fs cmc 
  41ee0f:	cmp    al,0x51
  41ee11:	shr    BYTE PTR [edx],cl
  41ee13:	in     al,dx
  41ee14:	cli    
  41ee15:	ret    0x1307
  41ee18:	imul   ebx,DWORD PTR [edx*2-0x3f3a4831],0xffffffba
  41ee20:	ins    DWORD PTR es:[edi],dx
  41ee21:	sub    eax,0xb74dd543
  41ee26:	fidivr WORD PTR [edi+0x4]
  41ee29:	clc    
  41ee2a:	(bad)  
  41ee2b:	sub    DWORD PTR [ebp+0x21],edi
  41ee2e:	test   BYTE PTR [ebp+0xf],dl
  41ee31:	loopne 0x41ee4e
  41ee33:	sub    al,0xc6
  41ee35:	sub    ebx,esp
  41ee37:	jge    0x41ee79
  41ee39:	adc    dl,al
  41ee3b:	inc    esp
  41ee3c:	mov    BYTE PTR [ebx-0x70],al
  41ee3f:	pop    ss
  41ee40:	pop    edi
  41ee41:	lea    edx,[eax-0x62]
  41ee44:	mov    ah,0xf9
  41ee46:	mov    gs,WORD PTR [eax-0x68c4561f]
  41ee4c:	cmp    DWORD PTR [ebp+0x4496694a],edx
  41ee52:	xchg   BYTE PTR [edx-0x3917751e],ah
  41ee58:	inc    ecx
  41ee59:	xchg   ebx,eax
  41ee5a:	shl    DWORD PTR [edx-0x78],1
  41ee5d:	lds    esi,FWORD PTR [ebx+0x1b763e9c]
  41ee63:	mov    ebx,0x84389a13
  41ee68:	gs enter 0x52dc,0x48
  41ee6d:	xchg   edi,eax
  41ee6e:	push   0x3cca7538
  41ee73:	ss pop eax
  41ee75:	fs inc esi
  41ee77:	sub    eax,0xab399d92
  41ee7c:	dec    ebp
  41ee7d:	cmp    cl,bl
  41ee7f:	sub    ecx,eax
  41ee81:	sbb    DWORD PTR [ebx-0x48],edx
  41ee84:	fild   WORD PTR [ebx-0x4d]
  41ee87:	xchg   edx,eax
  41ee88:	out    0x26,al
  41ee8a:	mov    dl,0xf4
  41ee8c:	lods   eax,DWORD PTR ds:[esi]
  41ee8d:	push   ebp
  41ee8e:	popf   
  41ee8f:	loop   0x41eec5
  41ee91:	adc    cl,dl
  41ee93:	leave  
  41ee94:	cli    
  41ee95:	outs   dx,DWORD PTR ds:[esi]
  41ee96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee97:	mov    cl,0xd3
  41ee99:	cmp    DWORD PTR [ebp+0x33],0xffffffdd
  41ee9d:	push   dx
  41ee9f:	out    dx,al
  41eea0:	adc    al,0xb8
  41eea2:	imul   esp,edx,0xffffffc1
  41eea5:	push   esi
  41eea6:	dec    edx
  41eea7:	lods   al,BYTE PTR ds:[esi]
  41eea8:	(bad)  
  41eea9:	sub    BYTE PTR ds:0xe10fe2ba,ah
  41eeaf:	fcomp  DWORD PTR cs:0x8dede7e2
  41eeb6:	outs   dx,DWORD PTR ds:[esi]
  41eeb7:	je     0x41ee82
  41eeb9:	(bad)  
  41eeba:	adc    eax,0x71314116
  41eebf:	jmp    0x41ee5a
  41eec1:	mov    cl,0x75
  41eec3:	nop
  41eec4:	rcr    BYTE PTR [bx+di],cl
  41eec7:	push   edi
  41eec8:	dec    eax
  41eec9:	push   cs
  41eeca:	and    DWORD PTR [esi-0x17ced146],eax
  41eed0:	xor    eax,0x6e
  41eed3:	ret    0x4c96
  41eed6:	loope  0x41ef33
  41eed8:	xor    ebx,edx
  41eeda:	stc    
  41eedb:	sbb    eax,0x46542a23
  41eee0:	and    bh,BYTE PTR [esp+ebp*4-0x39]
  41eee4:	cs xchg ebx,eax
  41eee6:	stos   BYTE PTR es:[edi],al
  41eee7:	addr16 pop ebx
  41eee9:	inc    ebx
  41eeea:	add    BYTE PTR [esi+0x13],bl
  41eeed:	sbb    eax,0x22a24b85
  41eef2:	call   0x33cf08f7
  41eef7:	or     al,0x76
  41eef9:	add    DWORD PTR [eax],0x0
  41eefc:	js     0x41ee87
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x55],ebp
  41ef09:	cli    
  41ef0a:	test   al,0x3f
  41ef0c:	adc    BYTE PTR [ecx+eax*1+0x0],ch
  41ef10:	xchg   BYTE PTR [edx],al
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	inc    esp
  41ef15:	mov    dh,0x92
  41ef17:	jge    0x41ef6c
  41ef19:	cwde   
  41ef1a:	inc    edx
  41ef1b:	dec    ebx
  41ef1c:	xchg   DWORD PTR [ebx-0x6c6d305c],esp
  41ef22:	nop
  41ef23:	pop    ecx
  41ef24:	sbb    al,0xe0
  41ef26:	adc    esp,eax
  41ef28:	dec    ebx
  41ef29:	enter  0x3065,0x8f
  41ef2d:	in     eax,0xd4
  41ef2f:	imul   ecx,DWORD PTR [ebx+0x7e],0xfffffff4
  41ef33:	sub    DWORD PTR [edx+0x48],0xffffffc4
  41ef37:	leave  
  41ef38:	mov    dl,0x67
  41ef3a:	xchg   esi,eax
  41ef3b:	xchg   edi,eax
  41ef3c:	lea    esp,cs:[edi+0x9b2822]
  41ef43:	repz arpl WORD PTR [eax-0x2db20269],dx
  41ef4a:	mul    DWORD PTR [esi+0x41]
  41ef4d:	gs sti 
  41ef4f:	mov    al,0x92
  41ef51:	adc    DWORD PTR [edx+0x68],ebp
  41ef54:	or     bh,bl
  41ef56:	push   es
  41ef57:	mov    eax,ds:0x5e3ae921
  41ef5c:	push   0xf24c064e
  41ef61:	push   cs
  41ef62:	push   ss
  41ef63:	pusha  
  41ef64:	add    bh,0xdf
  41ef67:	fiadd  DWORD PTR [eax-0x6]
  41ef6a:	pop    ebx
  41ef6b:	lock bound edi,QWORD PTR [ebp+0x59a05419]
  41ef72:	inc    eax
  41ef73:	fbstp  TBYTE PTR [ebx]
  41ef75:	jo     0x41ef74
  41ef77:	xor    BYTE PTR [esi+0x70eeaa6f],bh
  41ef7d:	jge    0x41efa6
  41ef7f:	mov    ah,0x60
  41ef81:	loopne 0x41f002
  41ef83:	inc    ecx
  41ef84:	es inc ebp
  41ef86:	push   esi
  41ef87:	js     0x41ef16
  41ef89:	mov    edi,0x16c1b5a3
  41ef8e:	jns    0x41f000
  41ef90:	mov    ebx,0xcc9b33a7
  41ef95:	rol    DWORD PTR [ebp+0x492e594e],0x4f
  41ef9c:	cmp    esi,esp
  41ef9e:	jg     0x41f007
  41efa0:	mov    BYTE PTR [edi+0x25cef941],cl
  41efa6:	dec    ebp
  41efa7:	sub    esp,DWORD PTR [eax+0x60]
  41efaa:	scas   al,BYTE PTR es:[edi]
  41efab:	stc    
  41efac:	in     al,dx
  41efad:	jnp    0x41eff9
  41efaf:	pminub mm3,QWORD PTR [edi+0x2153760a]
  41efb6:	sub    DWORD PTR [ebp+0x3e],ebx
  41efb9:	mov    DWORD PTR [edi],esi
  41efbb:	sbb    dl,BYTE PTR [edi-0x335c8e96]
  41efc1:	loopne 0x41f029
  41efc3:	xchg   esi,eax
  41efc4:	add    ecx,esp
  41efc6:	jl     0x41f044
  41efc8:	push   0xbb76ad5c
  41efcd:	das    
  41efce:	push   ebp
  41efcf:	and    ch,BYTE PTR [ebp-0x3b5abeb]
  41efd5:	outs   dx,BYTE PTR ds:[esi]
  41efd6:	shl    edi,0xdd
  41efd9:	xchg   edi,eax
  41efda:	fs or  dh,al
  41efdd:	shr    DWORD PTR [esi+0x33],cl
  41efe0:	or     eax,0x7c1d2b27
  41efe5:	and    dh,BYTE PTR gs:[esi]
  41efe8:	jl     0x41efbd
  41efea:	ja     0x41efd9
  41efec:	push   edi
  41efed:	push   ss
  41efee:	sti    
  41efef:	pop    ecx
  41eff0:	ja     0x41efcb
  41eff2:	xlat   BYTE PTR ds:[ebx]
  41eff3:	addr16 retf 
  41eff5:	loop   0x41effa
  41eff7:	xor    dl,cl
  41eff9:	lea    esp,[ebx]
  41effb:	add    DWORD PTR [ebp-0x6a3ad5f6],0x58744a15
  41f005:	int3   
  41f006:	mov    eax,0x30acecd3
  41f00b:	sahf   
  41f00c:	call   0xce40:0xb156ff0e
  41f013:	into   
  41f014:	lock push ebp
  41f016:	adc    BYTE PTR [edi+0x5d],dl
  41f019:	jle    0x41efd9
  41f01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f01c:	jge    0x41efac
  41f01e:	push   esi
  41f01f:	jmp    0xbc679cdb
  41f024:	popf   
  41f025:	or     dl,BYTE PTR [eax-0x47bdfe06]
  41f02b:	dec    esi
  41f02c:	sti    
  41f02d:	xchg   edx,eax
  41f02e:	ret    
  41f02f:	enter  0x4a16,0x64
  41f033:	push   edx
  41f034:	jnp    0x41f017
  41f036:	jge    0x41f04e
  41f038:	jecxz  0x41f053
  41f03a:	sbb    al,BYTE PTR gs:[eax+eiz*8-0xfdd0f9f]
  41f042:	sbb    ebp,0x6c229a7f
  41f048:	rol    BYTE PTR [ebx-0x32],1
  41f04b:	inc    ecx
  41f04c:	or     al,0x39
  41f04e:	fist   DWORD PTR [eax-0x5e]
  41f051:	adc    bh,BYTE PTR [edx-0x644c108f]
  41f057:	push   0x8f0aad46
  41f05c:	iret   
  41f05d:	retf   0x3ea3
  41f060:	in     al,dx
  41f061:	dec    ebx
  41f062:	cmp    ah,0x39
  41f065:	add    dh,BYTE PTR [ebx]
  41f067:	cmp    eax,0xfa4091b0
  41f06c:	cdq    
  41f06d:	and    cl,BYTE PTR [edi]
  41f06f:	xor    al,0x58
  41f071:	in     eax,0x6d
  41f073:	mov    ebx,0xe7cc0ef9
  41f078:	sbb    al,0xf8
  41f07a:	lea    esp,[ebx+0x37]
  41f07d:	add    DWORD PTR [eax],ebp
  41f07f:	xor    eax,0x10f941a
  41f084:	ss aaa 
  41f086:	sub    esi,DWORD PTR [eax]
  41f088:	push   cs
  41f089:	mov    dh,0xf5
  41f08b:	pop    ss
  41f08c:	ins    DWORD PTR es:[edi],dx
  41f08d:	mov    ebx,0x28874ed
  41f092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f093:	ret    0x82a8
  41f096:	inc    eax
  41f097:	xchg   BYTE PTR [edx-0x31bd2646],bh
  41f09d:	sbb    edi,DWORD PTR [esi-0x16]
  41f0a0:	push   cs
  41f0a1:	imul   ebx,DWORD PTR [edi-0x51],0xe391f155
  41f0a8:	pop    edx
  41f0a9:	(bad)  
  41f0ab:	(bad)  
  41f0ad:	mov    dh,0x15
  41f0af:	cmp    DWORD PTR [edi+0x16],0xfffffff5
  41f0b3:	mov    ebx,0x4b400df2
  41f0b8:	call   FWORD PTR [ebp+0x1c4319e1]
  41f0be:	push   edi
  41f0bf:	icebp  
  41f0c0:	or     dl,BYTE PTR [ebp+0x57]
  41f0c3:	push   cs
  41f0c4:	or     esp,DWORD PTR [ecx+edi*8]
  41f0c7:	(bad)  
  41f0c8:	pusha  
  41f0c9:	dec    ebx
  41f0ca:	xchg   ebp,eax
  41f0cb:	mov    dh,0x1e
  41f0cd:	rcr    BYTE PTR [edx+0x1b],1
  41f0d0:	cdq    
  41f0d1:	jp     0x41f074
  41f0d3:	jb     0x41f0c9
  41f0d5:	mov    al,ds:0x5eb98329
  41f0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0db:	jle    0x41f137
  41f0dd:	push   cs
  41f0de:	inc    BYTE PTR [ecx]
  41f0e0:	mov    BYTE PTR [esi],dl
  41f0e2:	mov    dh,0x26
  41f0e4:	pop    esi
  41f0e5:	pop    edx
  41f0e6:	inc    esi
  41f0e7:	cs data16 jecxz 0x41f150
  41f0eb:	int3   
  41f0ec:	jmp    0x5f14b198
  41f0f1:	or     eax,0xe0fc813a
  41f0f6:	scas   eax,DWORD PTR es:[edi]
  41f0f7:	push   ss
  41f0f8:	jne    0x41f162
  41f0fa:	ins    DWORD PTR es:[edi],dx
  41f0fb:	ja     0x41f15d
  41f0fd:	cdq    
  41f0fe:	in     eax,dx
  41f0ff:	lock xchg bp,ax
  41f102:	mov    ch,0x5f
  41f104:	fdiv   DWORD PTR [esi-0x9]
  41f107:	jle    0x41f13a
  41f109:	push   0x69
  41f10b:	es sub eax,0x52f85157
  41f111:	pusha  
  41f112:	and    dh,BYTE PTR ds:[ecx+0x5b]
  41f116:	sbb    DWORD PTR [edx-0x615537a6],edx
  41f11c:	xchg   ch,al
  41f11e:	out    dx,al
  41f11f:	mov    ds:0x9ed6f3de,al
  41f124:	fbstp  TBYTE PTR [eax]
  41f126:	jbe    0x41f15d
  41f128:	(bad)  
  41f129:	ror    DWORD PTR [esi-0x333b908],1
  41f12f:	cwde   
  41f130:	dec    ebp
  41f131:	push   cs
  41f132:	cmp    ch,bh
  41f134:	enter  0x1595,0xff
  41f138:	xchg   esp,eax
  41f139:	rcl    DWORD PTR [edx-0xc],1
  41f13c:	cmc    
  41f13d:	out    dx,al
  41f13e:	and    esp,DWORD PTR [edx+0xa4665e8]
  41f144:	outs   dx,BYTE PTR ds:[esi]
  41f145:	fisub  WORD PTR [edi-0x20068e10]
  41f14b:	dec    esi
  41f14c:	jbe    0x41f169
  41f14e:	iret   
  41f14f:	and    al,0x58
  41f151:	rcr    DWORD PTR [eax],1
  41f153:	cmp    al,0x38
  41f155:	mov    edi,0x52022f7a
  41f15a:	outs   dx,DWORD PTR ds:[esi]
  41f15b:	xchg   esp,eax
  41f15c:	(bad)  
  41f15d:	loopne 0x41f1d4
  41f15f:	scas   al,BYTE PTR es:[edi]
  41f160:	repnz lea eax,[edi+0x73]
  41f164:	(bad)  
  41f165:	sbb    eax,0x97387447
  41f16a:	push   eax
  41f16b:	mov    BYTE PTR [edx+0x53],bh
  41f16e:	cmp    BYTE PTR [ebx-0x68b59280],dh
  41f174:	in     eax,0xe4
  41f176:	mov    eax,0x7d29aec2
  41f17b:	mov    ds:0x2c784941,eax
  41f180:	std    
  41f181:	retf   
  41f182:	call   0x8045:0x4c88a1cd
  41f189:	inc    edi
  41f18a:	mov    ds:0x1ffb33d2,eax
  41f18f:	push   0xffffff8b
  41f191:	push   ebp
  41f192:	ror    cl,1
  41f194:	or     DWORD PTR [ebp+0x56f9099d],ebp
  41f19a:	add    BYTE PTR [eax],al
  41f19c:	pop    esp
  41f19d:	mov    dh,BYTE PTR [edi-0x23800895]
  41f1a3:	mov    edi,0xd9de0759
  41f1a8:	dec    edi
  41f1a9:	sbb    edi,edx
  41f1ab:	lea    edx,[esi-0x79fffe92]
  41f1b1:	add    al,BYTE PTR [eax]
  41f1b3:	add    BYTE PTR [eax+0x29],bh
  41f1b6:	or     BYTE PTR [esi+0x3c],0x3c
  41f1ba:	out    0x6c,eax
  41f1bc:	fist   WORD PTR [edx-0x38c55620]
  41f1c2:	xor    edx,edi
  41f1c4:	push   0x960f6d06
  41f1c9:	pop    es
  41f1ca:	mov    esi,0x533325da
  41f1cf:	(bad)  
  41f1d0:	call   0x32bed8f9
  41f1d5:	jecxz  0x41f201
  41f1d7:	adc    DWORD PTR [eax+0xb],ebx
  41f1da:	push   edx
  41f1db:	mov    ecx,0x585e7fce
  41f1e0:	xlat   BYTE PTR ds:[ebx]
  41f1e1:	jnp    0x41f1f0
  41f1e3:	outs   dx,BYTE PTR ds:[esi]
  41f1e4:	push   0xffffffca
  41f1e6:	mov    al,0x8c
  41f1e8:	aas    
  41f1e9:	dec    eax
  41f1ea:	je     0x41f1f6
  41f1ec:	jne    0x41f1b3
  41f1ee:	(bad)  
  41f1f0:	jo     0x41f1c4
  41f1f2:	lds    ebx,FWORD PTR [esi+0x1b55cfb7]
  41f1f8:	lods   al,BYTE PTR ds:[esi]
  41f1f9:	fbld   TBYTE PTR [edx-0x2b]
  41f1fc:	mov    eax,0x12ddb8aa
  41f201:	mov    ch,0xd8
  41f203:	adc    eax,0x55b7728c
  41f208:	sub    eax,0x69174a91
  41f20d:	adc    DWORD PTR [ecx-0x1105aabc],0x20
  41f214:	xchg   ebx,eax
  41f215:	out    dx,eax
  41f216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f217:	inc    edx
  41f218:	cli    
  41f219:	(bad)
  41f21c:	jge    0x41f288
  41f21e:	clc    
  41f21f:	pop    ss
  41f220:	xchg   edi,eax
  41f221:	(bad)  
  41f223:	mov    eax,ds:0xaed008cb
  41f228:	dec    edx
  41f229:	mov    bl,BYTE PTR [edx+0x77]
  41f22c:	dec    ebx
  41f22d:	jae    0x41f1bd
  41f22f:	call   0x374c:0x2a17ebb0
  41f236:	adc    ebx,DWORD PTR [edi+0x31]
  41f239:	rol    DWORD PTR [edx+0x74],1
  41f23c:	xchg   esi,eax
  41f23d:	jmp    0x41f1e5
  41f23f:	cdq    
  41f240:	ror    bl,0x45
  41f243:	repnz stos BYTE PTR es:[edi],al
  41f245:	test   DWORD PTR [eax],ebp
  41f247:	and    ch,0xd0
  41f24a:	retf   
  41f24b:	and    dl,cl
  41f24d:	mov    al,0xc9
  41f24f:	dec    ecx
  41f250:	pusha  
  41f251:	sbb    ch,bh
  41f253:	rol    ch,cl
  41f255:	ret    0xd534
  41f258:	mov    bl,0xa0
  41f25a:	or     BYTE PTR [esi+0x288b0b90],ah
  41f260:	cmp    eax,0x1ed66862
  41f265:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f268:	out    0x63,al
  41f26a:	ds and eax,0x1dd6207c
  41f270:	mov    WORD PTR [edx+0xf015553],gs
  41f276:	dec    ebx
  41f277:	(bad)  
  41f278:	std    
  41f279:	(bad)  
  41f27a:	jns    0x41f202
  41f27c:	xchg   BYTE PTR [ecx+ecx*8-0x33a27177],ch
  41f283:	gs xor al,0x29
  41f286:	enter  0xd791,0x22
  41f28a:	mov    ch,0x9f
  41f28c:	icebp  
  41f28d:	xchg   esp,esp
  41f28f:	mov    ds:0xb9f6f22c,eax
  41f294:	test   DWORD PTR [ecx+0x73],0x2f04cc53
  41f29b:	add    eax,DWORD PTR [edx-0x63a87ec2]
  41f2a1:	(bad)  
  41f2a2:	mov    ah,0xba
  41f2a4:	mov    ds:0xcdd057c7,al
  41f2a9:	out    0xf4,eax
  41f2ab:	test   ecx,esi
  41f2ad:	cmc    
  41f2ae:	imul   ecx,DWORD PTR [ecx],0x6c
  41f2b1:	(bad)  
  41f2b2:	jg     0x41f324
  41f2b4:	in     al,dx
  41f2b5:	cmp    DWORD PTR [eax+edx*2],esi
  41f2b8:	adc    DWORD PTR [esi+ecx*8-0x5],ecx
  41f2bc:	mov    ecx,0x29dd02e0
  41f2c1:	fst    QWORD PTR [edx]
  41f2c3:	out    0x40,eax
  41f2c5:	inc    edx
  41f2c6:	mov    dh,0xc
  41f2c8:	push   esi
  41f2c9:	adc    BYTE PTR [ebx+ecx*2],al
  41f2cc:	adc    eax,0x1f00207
  41f2d1:	lahf   
  41f2d2:	leave  
  41f2d3:	jecxz  0x41f2f7
  41f2d5:	mov    al,ds:0x26cbf50e
  41f2da:	dec    ebp
  41f2db:	adc    DWORD PTR [ebp+0x54],eax
  41f2de:	xchg   DWORD PTR [ebx+0x66],esp
  41f2e1:	xchg   BYTE PTR [edx-0x1f5e8d1b],ch
  41f2e7:	push   ds
  41f2e8:	push   ss
  41f2e9:	(bad)  
  41f2ea:	xchg   esp,eax
  41f2eb:	and    edi,DWORD PTR [edi+0x44]
  41f2ee:	inc    edi
  41f2ef:	inc    esi
  41f2f0:	sbb    BYTE PTR [edi+0x10],0xb2
  41f2f4:	add    eax,0x1b1a7c83
  41f2f9:	push   esp
  41f2fa:	outs   dx,DWORD PTR ds:[esi]
  41f2fb:	push   eax
  41f2fc:	repnz push 0xffffffb7
  41f2ff:	mov    bl,0x4d
  41f301:	(bad)  
  41f302:	fld    st(4)
  41f304:	lea    eax,[ebp-0x28f2dcd7]
  41f30a:	daa    
  41f30b:	mov    ds,esi
  41f30d:	inc    ebp
  41f30e:	sbb    eax,0x5fed0f45
  41f313:	dec    ecx
  41f314:	rol    DWORD PTR [ebp-0x44],1
  41f317:	scas   eax,DWORD PTR es:[edi]
  41f318:	xor    al,0xa7
  41f31a:	jns    0x41f2f5
  41f31c:	mov    cl,0xbe
  41f31e:	add    esp,edi
  41f320:	(bad)  
  41f321:	jmp    0x8aff:0xacb76411
  41f328:	push   ebx
  41f329:	dec    esp
  41f32a:	aad    0x97
  41f32c:	jns    0x41f2b5
  41f32e:	cmp    al,0x34
  41f330:	into   
  41f331:	mov    edi,DWORD PTR [ebp-0x63]
  41f334:	int3   
  41f335:	add    al,0xd9
  41f337:	push   eax
  41f338:	inc    ebp
  41f339:	test   eax,0xddb2a4d0
  41f33e:	and    DWORD PTR [ebx-0xd31713],esi
  41f344:	cmc    
  41f345:	daa    
  41f346:	add    BYTE PTR ds:0xbc49c939,cl
  41f34c:	aas    
  41f34d:	test   BYTE PTR [edx-0x42d5699a],ah
  41f353:	out    dx,eax
  41f354:	xchg   ecx,eax
  41f355:	mov    esi,DWORD PTR [ebx+eiz*2-0x1e5cc236]
  41f35c:	(bad)  
  41f35d:	enter  0x4623,0x7a
  41f361:	jne    0x41f30f
  41f363:	sbb    al,0x49
  41f365:	push   ecx
  41f366:	loope  0x41f2f1
  41f368:	lahf   
  41f369:	sub    DWORD PTR [edx-0x11b50986],esp
  41f36f:	mov    edx,0x235f3caa
  41f374:	lods   al,BYTE PTR ds:[esi]
  41f375:	push   ecx
  41f376:	cmp    BYTE PTR [edx],al
  41f378:	(bad)  
  41f379:	loop   0x41f3c7
  41f37b:	xor    eax,0x9718647f
  41f380:	push   ecx
  41f381:	rol    DWORD PTR [ebx],1
  41f383:	push   ds
  41f384:	sbb    DWORD PTR [ecx+edx*8-0x11f3a120],edi
  41f38b:	inc    eax
  41f38c:	inc    esp
  41f38d:	lahf   
  41f38e:	and    BYTE PTR [edx-0x51],bl
  41f391:	or     DWORD PTR [edi],0xc34a2d01
  41f397:	sahf   
  41f398:	push   ecx
  41f399:	(bad)  
  41f39a:	jge    0x41f3a6
  41f39c:	lods   al,BYTE PTR ds:[esi]
  41f39d:	shl    DWORD PTR [ebx],0x4d
  41f3a0:	inc    ecx
  41f3a1:	mov    esi,esi
  41f3a3:	pusha  
  41f3a4:	iret   
  41f3a5:	add    eax,0x72322444
  41f3aa:	std    
  41f3ab:	push   eax
  41f3ac:	mov    al,ds:0x7884f129
  41f3b1:	cld    
  41f3b2:	sub    al,0x43
  41f3b4:	add    bx,ax
  41f3b7:	add    eax,0x1708d65c
  41f3bc:	icebp  
  41f3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3be:	jb     0x41f360
  41f3c0:	addr16 retf 0xf38
  41f3c4:	adc    DWORD PTR [esi],esi
  41f3c6:	push   esp
  41f3c7:	lods   al,BYTE PTR ds:[esi]
  41f3c8:	mov    eax,ds:0x19e25e9e
  41f3cd:	pop    esi
  41f3ce:	jp     0x41f434
  41f3d0:	add    BYTE PTR [edx+0x250fa603],dh
  41f3d6:	out    0xe,al
  41f3d8:	(bad)  
  41f3d9:	popf   
  41f3da:	fcomp  QWORD PTR [ecx+0x8b4aed8]
  41f3e0:	mov    esi,0xa338888e
  41f3e5:	test   BYTE PTR [edx+0x28],0xbf
  41f3e9:	fisttp WORD PTR [edx]
  41f3eb:	test   BYTE PTR [ecx+0x3b],0xe6
  41f3ef:	idiv   BYTE PTR [ecx+0x5a733a40]
  41f3f5:	jecxz  0x41f45f
  41f3f7:	push   ebp
  41f3f8:	ins    BYTE PTR es:[edi],dx
  41f3f9:	(bad)  
  41f3fb:	lahf   
  41f3fc:	mov    ecx,0x8f171c08
  41f401:	outs   dx,DWORD PTR ds:[esi]
  41f402:	inc    edx
  41f403:	loopne 0x41f3c8
  41f405:	(bad)  
  41f406:	imul   ebx,DWORD PTR [esi-0x44fbe871],0xffffffe6
  41f40d:	retf   0xf288
  41f410:	dec    edi
  41f411:	aam    0xd3
  41f413:	dec    edi
  41f414:	jns    0x41f47e
  41f416:	push   esi
  41f417:	push   edi
  41f418:	jmp    0xfa93dd93
  41f41d:	ins    DWORD PTR es:[edi],dx
  41f41e:	pop    ebx
  41f41f:	outs   dx,DWORD PTR ds:[esi]
  41f420:	mov    bh,0xa1
  41f422:	(bad)  
  41f423:	jmp    0x1fc7:0x2d18c9da
  41f42a:	vsubsd xmm4,xmm0,QWORD PTR [edi+0x388279d7]
  41f432:	xchg   esi,eax
  41f433:	pop    ds
  41f434:	aaa    
  41f435:	daa    
  41f436:	les    ebx,FWORD PTR [edi-0x28]
  41f439:	fiadd  WORD PTR [eax]
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	or     DWORD PTR [ebp+0x711c7702],edx
  41f44e:	add    DWORD PTR [eax],eax
  41f450:	xchg   BYTE PTR [edx],al
  41f452:	add    BYTE PTR [eax],al
  41f454:	imul   edi,DWORD PTR ds:0x94da741b,0x878db26a
  41f45e:	pop    esi
  41f45f:	fxch   st(6)
  41f461:	stos   BYTE PTR es:[edi],al
  41f462:	or     al,0xeb
  41f464:	xor    ebx,DWORD PTR [ebx-0x1d644db4]
  41f46a:	out    0x12,al
  41f46c:	mov    ebx,0x8ddb64be
  41f471:	mov    WORD PTR [esi],ss
  41f473:	leave  
  41f474:	xchg   edi,eax
  41f475:	cs and eax,0x65da4ef9
  41f47b:	int    0xa8
  41f47d:	retf   0x8693
  41f480:	imul   edx,DWORD PTR [esi-0x7b],0xe9f4818
  41f487:	cmp    DWORD PTR [esi+0x4b],edx
  41f48a:	leave  
  41f48b:	daa    
  41f48c:	(bad)  
  41f48d:	mov    edx,0xdf648e56
  41f492:	cmp    eax,0xb99f3044
  41f497:	lock ins DWORD PTR es:[edi],dx
  41f499:	loop   0x41f41b
  41f49b:	push   esp
  41f49c:	cs clc 
  41f49e:	lock rol DWORD PTR [ecx],cl
  41f4a1:	(bad)  
  41f4a2:	push   0xc8896f77
  41f4a7:	imul   edi,eax,0xef47bb4d
  41f4ad:	loop   0x41f4ef
  41f4af:	sti    
  41f4b0:	std    
  41f4b1:	scas   al,BYTE PTR es:[edi]
  41f4b2:	add    esi,0xffffff90
  41f4b5:	aad    0x9a
  41f4b7:	mov    esp,0xbc195c6e
  41f4bc:	mov    ds:0xdcad53b5,al
  41f4c1:	lods   eax,DWORD PTR ds:[esi]
  41f4c2:	cmp    al,0x79
  41f4c4:	jp     0x41f4b0
  41f4c6:	xchg   ebx,eax
  41f4c7:	ins    BYTE PTR es:[edi],dx
  41f4c8:	inc    eax
  41f4c9:	mov    ebx,0xda67498e
  41f4ce:	or     BYTE PTR [ebp-0x40],cl
  41f4d1:	in     al,dx
  41f4d2:	ret    
  41f4d3:	pop    ebx
  41f4d4:	iret   
  41f4d5:	std    
  41f4d6:	push   esi
  41f4d7:	and    eax,0xa4d46bf2
  41f4dc:	and    DWORD PTR [ebx-0xa42671],ebp
  41f4e2:	lds    ecx,FWORD PTR [edi+0x39a4bcf5]
  41f4e8:	fs nop
  41f4ea:	mov    ebp,0x117c37a2
  41f4ef:	fs repnz (bad) 
  41f4f2:	and    eax,0x4635f53
  41f4f7:	add    al,0xc6
  41f4f9:	std    
  41f4fa:	pop    esi
  41f4fb:	cmp    esi,DWORD PTR ds:0x8ac01a2d
  41f501:	sbb    ah,BYTE PTR [esi+0x2d]
  41f504:	and    DWORD PTR [esi+eiz*4-0x15],edx
  41f508:	and    ebp,DWORD PTR [edi+0x77]
  41f50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50c:	adc    dl,BYTE PTR [edi]
  41f50e:	and    eax,0xf1cbba8b
  41f513:	out    dx,eax
  41f514:	pop    ds
  41f515:	cmc    
  41f516:	shl    DWORD PTR [ebx+0x18ecbb9e],0x4c
  41f51d:	inc    edi
  41f51e:	shl    ah,1
  41f520:	inc    edi
  41f521:	xchg   ebp,eax
  41f522:	lock sbb ebp,DWORD PTR [edx]
  41f525:	lock fwait
  41f527:	imul   edi,esi,0xa118a9a7
  41f52d:	shl    DWORD PTR [ebx],0x3e
  41f530:	push   cs
  41f531:	cs mov al,0x66
  41f534:	hlt    
  41f535:	int    0x73
  41f537:	inc    ecx
  41f538:	ss leave 
  41f53a:	ret    0xab9c
  41f53d:	push   0xb44595c
  41f542:	add    dl,BYTE PTR [edi]
  41f544:	ret    
  41f545:	jns    0x41f4e2
  41f547:	fdivp  st(1),st
  41f549:	cld    
  41f54a:	retf   
  41f54b:	xchg   ebp,eax
  41f54c:	jle    0x41f553
  41f54e:	sub    eax,0xd9d475dc
  41f553:	fiadd  WORD PTR [eax+0x3aaf9d25]
  41f559:	mov    al,0x66
  41f55b:	jmp    0x41f57d
  41f55d:	fmul   DWORD PTR [ebx+0x7f]
  41f560:	jnp    0x41f551
  41f562:	fldenv [ebp+edi*1-0x69791bc1]
  41f569:	lds    ebx,FWORD PTR [eax+0x29]
  41f56c:	xchg   esp,ebp
  41f56e:	cmp    bl,BYTE PTR [ebx]
  41f570:	dec    ebx
  41f571:	cmp    eax,DWORD PTR [edi+0x645ed904]
  41f577:	(bad)  ds:0x8d3515a2
  41f57d:	test   BYTE PTR [eax+0x54],bl
  41f580:	or     eax,DWORD PTR [edx+0x56]
  41f583:	pop    ss
  41f584:	xor    eax,0xc0ff382
  41f589:	sub    eax,0x12a9b74f
  41f58e:	enter  0x1841,0x9a
  41f592:	dec    edx
  41f593:	jmp    0x41f5f6
  41f595:	pop    esp
  41f596:	xor    DWORD PTR [eax],esp
  41f598:	adc    al,0xa5
  41f59a:	inc    ebp
  41f59b:	xor    bh,dl
  41f59d:	(bad)  
  41f59e:	dec    ebp
  41f59f:	(bad)
  41f5a4:	scas   al,BYTE PTR es:[edi]
  41f5a5:	push   esi
  41f5a6:	std    
  41f5a7:	scas   eax,DWORD PTR es:[edi]
  41f5a8:	retf   0x522c
  41f5ab:	inc    esi
  41f5ac:	sub    eax,0xfdb78a74
  41f5b1:	retf   
  41f5b2:	push   es
  41f5b3:	not    ch
  41f5b5:	mov    eax,ds:0xdafac617
  41f5ba:	scas   eax,DWORD PTR es:[edi]
  41f5bb:	test   eax,0x94904614
  41f5c0:	out    0xe2,eax
  41f5c2:	mov    eax,0xbfb8def0
  41f5c7:	or     eax,DWORD PTR [edx]
  41f5c9:	lahf   
  41f5ca:	pop    es
  41f5cb:	mov    eax,0x272b7acc
  41f5d0:	mov    edx,0xccf11377
  41f5d5:	rcl    DWORD PTR [eax],cl
  41f5d7:	mov    edx,0x9e3ec003
  41f5dc:	dec    ebx
  41f5dd:	adc    edx,DWORD PTR [ebx+0x72]
  41f5e0:	mov    ss,WORD PTR [ecx-0x5deb3b40]
  41f5e6:	aaa    
  41f5e7:	fnstsw WORD PTR [edi+eax*4]
  41f5ea:	inc    ebp
  41f5eb:	popf   
  41f5ec:	aaa    
  41f5ed:	enter  0x729b,0x93
  41f5f1:	mov    ds:0x9b477a7b,al
  41f5f6:	rol    DWORD PTR [eax-0x4f],0xcc
  41f5fa:	das    
  41f5fb:	aaa    
  41f5fc:	stc    
  41f5fd:	jo     0x41f584
  41f5ff:	ds cmp al,0xb4
  41f602:	mov    al,0x95
  41f604:	add    eax,0xc86b799b
  41f609:	dec    eax
  41f60a:	jmp    0x41f610
  41f60c:	xor    BYTE PTR [esi+0x1d],0xd9
  41f610:	ror    BYTE PTR [eax-0x10],1
  41f613:	lods   al,BYTE PTR ds:[esi]
  41f614:	jb     0x41f608
  41f616:	bound  edx,QWORD PTR [eax-0x69ed7295]
  41f61c:	mov    ebx,0xe65381bb
  41f621:	retf   
  41f622:	jae    0x41f633
  41f624:	add    DWORD PTR [ecx],ecx
  41f626:	and    ecx,DWORD PTR [esi-0x2d]
  41f629:	jb     0x41f694
  41f62b:	loop   0x41f615
  41f62d:	call   0xcf207820
  41f632:	ins    BYTE PTR es:[edi],dx
  41f633:	sbb    al,0x57
  41f635:	out    0xc3,eax
  41f637:	adc    BYTE PTR [esi+ebp*8],ch
  41f63a:	outs   dx,BYTE PTR ds:[esi]
  41f63b:	dec    ecx
  41f63c:	push   ecx
  41f63d:	mov    al,ds:0x656aa6c7
  41f642:	loop   0x41f5eb
  41f644:	enter  0xb47,0x8f
  41f648:	mov    ecx,0x570067fb
  41f64d:	fild   QWORD PTR [ebx+edi*1+0x13]
  41f651:	test   ch,0xa9
  41f654:	pusha  
  41f655:	repnz sbb dh,BYTE PTR es:[esi+0x72]
  41f65a:	inc    ecx
  41f65b:	dec    ecx
  41f65c:	mov    edi,esp
  41f65e:	scas   eax,DWORD PTR es:[edi]
  41f65f:	jbe    0x41f629
  41f661:	sbb    eax,0x8caf1c4d
  41f666:	or     al,ch
  41f668:	xchg   edx,eax
  41f669:	mov    WORD PTR [edi],ds
  41f66b:	imul   ebp,DWORD PTR [eax-0x14],0x62afcb75
  41f672:	loop   0x41f60f
  41f674:	jle    0x41f660
  41f676:	or     BYTE PTR [ecx+0x24291ff1],bl
  41f67c:	sar    BYTE PTR [ebx],0x8c
  41f67f:	hlt    
  41f680:	sub    al,0xae
  41f682:	bound  ecx,QWORD PTR [eax]
  41f684:	and    ecx,DWORD PTR [edx+0x76]
  41f687:	xor    BYTE PTR ds:0xfee46909,0x27
  41f68e:	mov    ah,0xdf
  41f690:	jp     0x41f61e
  41f692:	adc    ebp,DWORD PTR [ebp+0x76]
  41f695:	in     al,dx
  41f696:	mov    esi,0x61ef978c
  41f69b:	jbe    0x41f662
  41f69d:	pop    edx
  41f69e:	es pushf 
  41f6a0:	add    BYTE PTR [edx],dl
  41f6a2:	imul   BYTE PTR [ebp-0x7b]
  41f6a5:	stos   BYTE PTR es:[edi],al
  41f6a6:	bnd jo 0x41f63a
  41f6a9:	xor    BYTE PTR [esi+0x35],ah
  41f6ac:	test   BYTE PTR [esi-0x45],ah
  41f6af:	loopne 0x41f6ee
  41f6b1:	fs cdq 
  41f6b3:	ret    
  41f6b4:	jp     0x41f734
  41f6b6:	call   0xc9bc1910
  41f6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6bc:	xor    eax,0xce69ca69
  41f6c1:	data16 xor al,0x95
  41f6c4:	jmp    0x3114:0xb41beb82
  41f6cb:	adc    esp,eax
  41f6cd:	shr    BYTE PTR [eax+0x4f],0x24
  41f6d1:	push   ss
  41f6d2:	test   eax,0xa6ef018c
  41f6d7:	das    
  41f6d8:	fcomp  QWORD PTR [eax]
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	popf   
  41f6dd:	paddd  mm4,QWORD PTR [esi+edi*8-0x6c0200b]
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	dec    edx
  41f6e9:	call   0x1:0x73a21e3c
  41f6f0:	xchg   BYTE PTR [edx],al
  41f6f2:	add    BYTE PTR [eax],al
  41f6f4:	scas   eax,DWORD PTR es:[edi]
  41f6f5:	loopne 0x41f726
  41f6f7:	xor    DWORD PTR [edx+esi*2],ecx
  41f6fa:	clc    
  41f6fb:	xchg   ebx,eax
  41f6fc:	(bad)  
  41f6fd:	inc    ebp
  41f6fe:	mov    al,ds:0xbdcc1d2a
  41f703:	ds pop es
  41f705:	cmp    DWORD PTR [esi],ebp
  41f707:	adc    bh,bl
  41f709:	daa    
  41f70a:	fcom   QWORD PTR [edx+0x4da15e48]
  41f710:	dec    esi
  41f711:	pshufw mm1,mm4,0x23
  41f715:	pop    eax
  41f716:	push   edx
  41f717:	mov    BYTE PTR [esi-0x60dc04a5],cl
  41f71d:	jae    0x41f6ad
  41f71f:	pop    es
  41f720:	inc    edi
  41f721:	mov    ch,0x2f
  41f723:	in     al,0xf6
  41f725:	sub    eax,esp
  41f727:	je     0x41f6ae
  41f729:	pop    edx
  41f72a:	aam    0x44
  41f72c:	cmp    DWORD PTR [esi],eax
  41f72e:	push   ss
  41f72f:	fwait
  41f730:	jge    0x41f793
  41f732:	imul   edx,DWORD PTR [esi+0x47],0x67d88385
  41f739:	fmul   DWORD PTR [ebx-0x5f]
  41f73c:	fstp   DWORD PTR [eax+ebp*1]
  41f73f:	iret   
  41f740:	add    bl,cl
  41f742:	cmp    edi,DWORD PTR [edx-0x5c]
  41f745:	aaa    
  41f746:	adc    ebx,DWORD PTR [bx-0x67e7]
  41f74b:	outs   dx,DWORD PTR ds:[esi]
  41f74c:	jo     0x41f7a5
  41f74e:	xchg   ecx,eax
  41f74f:	ss inc edx
  41f751:	pop    ebp
  41f752:	cmp    ecx,edi
  41f754:	inc    ebx
  41f755:	sbb    ecx,ecx
  41f757:	data16 cmc 
  41f759:	or     al,0xd3
  41f75b:	sbb    BYTE PTR [edx+0xa028a19],dl
  41f761:	mov    bl,0x14
  41f763:	pop    es
  41f764:	dec    ecx
  41f765:	repz push ecx
  41f767:	aaa    
  41f768:	sahf   
  41f769:	xor    eax,0xde7e0211
  41f76e:	hlt    
  41f76f:	fisubr WORD PTR [edx+esi*2]
  41f772:	jmp    0x41f7d8
  41f774:	ds fwait
  41f776:	xor    BYTE PTR [ecx],ah
  41f778:	ss aas 
  41f77a:	add    eax,0x6c8bf8e5
  41f77f:	repnz repnz push esi
  41f782:	dec    ebp
  41f783:	stos   DWORD PTR es:[edi],eax
  41f784:	add    eax,eax
  41f786:	cmp    cl,dh
  41f788:	cmp    BYTE PTR [edx-0x48],bh
  41f78b:	fild   QWORD PTR [edx-0x54]
  41f78e:	sbb    ch,BYTE PTR [ecx]
  41f790:	js     0x41f7bb
  41f792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f793:	and    dl,BYTE PTR [eax+0x35]
  41f796:	sahf   
  41f797:	dec    esi
  41f798:	fstp   TBYTE PTR [edi-0x7ecc77e7]
  41f79e:	stc    
  41f79f:	push   0xffffffbf
  41f7a1:	out    dx,al
  41f7a2:	shr    BYTE PTR [eax],0x6
  41f7a5:	fld    QWORD PTR [edi+eax*4+0x25]
  41f7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7aa:	ins    BYTE PTR es:[edi],dx
  41f7ab:	in     al,dx
  41f7ac:	pushf  
  41f7ad:	push   edi
  41f7ae:	xor    al,bl
  41f7b0:	into   
  41f7b1:	fwait
  41f7b2:	jns    0x41f7f7
  41f7b4:	pop    esi
  41f7b5:	jae    0x41f7ad
  41f7b7:	xor    esp,0x6acbaf82
  41f7bd:	icebp  
  41f7be:	popw   ds
  41f7c0:	mov    edi,0xd092e1fb
  41f7c5:	cmc    
  41f7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c7:	and    eax,0x3291489a
  41f7cc:	fyl2x  
  41f7ce:	call   0x38cbbeaf
  41f7d3:	dec    ebx
  41f7d4:	int    0x9f
  41f7d6:	ja     0x41f7c5
  41f7d8:	mov    BYTE PTR [ebp-0x62f45218],cl
  41f7de:	fwait
  41f7df:	outs   dx,DWORD PTR ds:[esi]
  41f7e0:	jns    0x41f81a
  41f7e2:	pop    ss
  41f7e3:	mov    ah,0x2d
  41f7e5:	ins    DWORD PTR es:[edi],dx
  41f7e6:	mov    ebp,0x2a30f667
  41f7eb:	jo     0x41f857
  41f7ed:	mov    esi,DWORD PTR [ebp+eax*1+0x3ca1ffaf]
  41f7f4:	mov    ch,0x44
  41f7f6:	adc    edx,DWORD PTR [esi+0x7d]
  41f7f9:	mov    ds,WORD PTR [ebx]
  41f7fb:	outs   dx,BYTE PTR ds:[esi]
  41f7fc:	cdq    
  41f7fd:	xchg   ebx,eax
  41f7fe:	loope  0x41f864
  41f800:	es inc eax
  41f802:	jmp    0x41f7e1
  41f804:	xchg   edi,eax
  41f805:	ret    0x5a77
  41f808:	mov    eax,ds:0xbb429f7c
  41f80d:	sbb    dh,0x21
  41f810:	pop    ebx
  41f811:	outs   dx,BYTE PTR ds:[esi]
  41f812:	leave  
  41f813:	(bad)  
  41f814:	push   0x19
  41f816:	sbb    eax,0x5c12c9d3
  41f81b:	cdq    
  41f81c:	out    dx,eax
  41f81d:	pop    ds
  41f81e:	cmp    al,0x2b
  41f820:	push   ss
  41f821:	test   al,0x2c
  41f823:	inc    edi
  41f824:	data16 stc 
  41f826:	push   ebp
  41f827:	ficom  WORD PTR ds:0x8836e95d
  41f82d:	(bad)  [ebx+0x2]
  41f830:	cmp    ch,ch
  41f832:	shr    dh,cl
  41f834:	fisttp WORD PTR [edi-0x7c]
  41f837:	inc    edi
  41f838:	sbb    bl,al
  41f83a:	inc    ebp
  41f83b:	ins    DWORD PTR es:[edi],dx
  41f83c:	inc    eax
  41f83d:	gs dec esi
  41f83f:	nop
  41f840:	mov    ds:0xf5186955,eax
  41f845:	loope  0x41f864
  41f847:	inc    ecx
  41f848:	and    esi,esp
  41f84a:	out    0x31,al
  41f84c:	(bad)  
  41f84d:	xchg   edi,eax
  41f84e:	cmp    ah,ah
  41f850:	mov    ch,0xa3
  41f852:	pop    esi
  41f853:	test   al,0x4f
  41f855:	std    
  41f856:	inc    esp
  41f857:	push   0xffffffa2
  41f859:	mov    dh,0x99
  41f85b:	jb     0x41f860
  41f85d:	leave  
  41f85e:	(bad)  
  41f860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f861:	aad    0xf2
  41f863:	mov    bl,0x63
  41f865:	ins    BYTE PTR es:[edi],dx
  41f866:	inc    ebp
  41f867:	dec    esi
  41f868:	dec    esp
  41f869:	out    dx,al
  41f86a:	cs mov bh,0xc8
  41f86d:	ret    0xc2b6
  41f870:	call   0xbbda:0x3d03b4b6
  41f877:	pop    edi
  41f878:	mov    al,0x43
  41f87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f87b:	mov    esi,0x42356d82
  41f880:	push   es
  41f881:	adc    ecx,edi
  41f883:	or     dl,BYTE PTR [eax+esi*2-0x5e]
  41f887:	mov    dl,ah
  41f889:	ss jle 0x41f8c0
  41f88c:	sub    BYTE PTR [eax],dh
  41f88e:	hlt    
  41f88f:	add    ebp,DWORD PTR [edx]
  41f891:	outs   dx,BYTE PTR ds:[esi]
  41f892:	adc    ebx,DWORD PTR [edx+0x6a]
  41f895:	cmp    BYTE PTR [edx-0x5c521f7a],bh
  41f89b:	pop    esp
  41f89c:	or     bl,ch
  41f89e:	fs dec ebp
  41f8a0:	fstp   QWORD PTR [eax+edi*1-0x3bc21596]
  41f8a7:	mov    ch,0x62
  41f8a9:	jp     0x41f8b1
  41f8ab:	adc    BYTE PTR [esi+0x455b6880],dl
  41f8b1:	mov    esp,0x2f9ddf3d
  41f8b6:	ja     0x41f921
  41f8b8:	sbb    al,0x10
  41f8ba:	out    dx,al
  41f8bb:	cmp    DWORD PTR [ecx+edx*2+0x5f],edi
  41f8bf:	mov    eax,0xa3099d9c
  41f8c4:	cmp    eax,0x192c0e33
  41f8c9:	jge    0x41f92d
  41f8cb:	inc    ebp
  41f8cc:	pop    edx
  41f8cd:	ja     0x41f8bd
  41f8cf:	js     0x41f8f3
  41f8d1:	jg     0x41f889
  41f8d3:	rcl    DWORD PTR [esi-0x7b70c610],cl
  41f8d9:	repnz adc al,al
  41f8dc:	dec    esp
  41f8dd:	adc    DWORD PTR [ecx-0x4ab04cd5],esi
  41f8e3:	mov    ebx,0x464c42a6
  41f8e8:	gs mov edi,0x7d7b69f5
  41f8ee:	int    0xe6
  41f8f0:	lock cld 
  41f8f2:	(bad)  
  41f8f4:	sbb    eax,0x19aac5c6
  41f8f9:	push   ecx
  41f8fa:	sbb    eax,0xac171684
  41f8ff:	xchg   edi,eax
  41f900:	adc    DWORD PTR [ecx+edi*4],0x4d
  41f904:	or     eax,0x38c2ab4e
  41f909:	shl    esp,1
  41f90b:	scas   eax,DWORD PTR es:[edi]
  41f90c:	mov    ebx,0x541ceed6
  41f912:	push   esi
  41f913:	xor    eax,DWORD PTR [edi]
  41f915:	or     ah,cl
  41f917:	repnz sub edx,DWORD PTR [ecx-0x1b8f6fad]
  41f91e:	sti    
  41f91f:	jns    0x41f8bc
  41f921:	ds or  dh,bl
  41f924:	push   es
  41f925:	lock mov ah,0xce
  41f928:	xor    BYTE PTR [esi-0x44],0xee
  41f92c:	mov    BYTE PTR [edi-0x1b481f4],bl
  41f932:	mov    edx,0x5c5929ce
  41f937:	xchg   ebp,eax
  41f938:	xchg   ecx,eax
  41f939:	jle    0x41f9b1
  41f93b:	mov    al,0xaf
  41f93d:	mov    al,ds:0xe83f2ea9
  41f942:	or     DWORD PTR [edi],eax
  41f944:	xchg   esp,eax
  41f945:	(bad)  
  41f946:	sub    esi,DWORD PTR [edx+0x2764c3bd]
  41f94c:	retf   
  41f94d:	dec    esp
  41f94e:	loop   0x41f978
  41f950:	sahf   
  41f951:	push   0x5a9353e5
  41f956:	pop    edx
  41f957:	xor    ah,BYTE PTR [esi-0x61]
  41f95a:	jns    0x41f96e
  41f95c:	jno    0x41f9cb
  41f95e:	xor    ch,BYTE PTR [ecx+0x47215151]
  41f964:	arpl   WORD PTR [ecx+eax*8+0x169a21af],dx
  41f96b:	xchg   edx,esi
  41f96d:	mov    bl,cl
  41f96f:	push   ebp
  41f970:	ret    
  41f971:	inc    edi
  41f972:	out    0x96,al
  41f974:	sahf   
  41f975:	xor    eax,0x604b796b
  41f97a:	add    BYTE PTR [eax],al
  41f97c:	and    BYTE PTR [esi],dl
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	mov    esi,0x284f7b72
  41f98d:	jbe    0x41f990
  41f98f:	add    BYTE PTR [esi+0x11000002],al
  41f995:	cwde   
  41f996:	data16 jno 0x41f936
  41f999:	hlt    
  41f99a:	out    0x70,eax
  41f99c:	daa    
  41f99d:	jo     0x41f9e9
  41f99f:	les    edx,FWORD PTR [edi-0x59]
  41f9a2:	inc    esp
  41f9a3:	mov    ds:0x1cdc1c9,al
  41f9a8:	pop    ds
  41f9a9:	adc    ecx,ebx
  41f9ab:	hlt    
  41f9ac:	lods   al,BYTE PTR ds:[esi]
  41f9ad:	loopne 0x41f9c1
  41f9af:	push   ebp
  41f9b0:	cmp    bh,BYTE PTR [ebx+ebx*4-0x344c2cb8]
  41f9b7:	call   0xdc01dbe8
  41f9bc:	cmc    
  41f9bd:	mov    ebx,0xfc9dfaed
  41f9c2:	out    0x1e,al
  41f9c4:	and    BYTE PTR [edi+0x16],bh
  41f9c7:	test   DWORD PTR [esi-0x3c8515bd],ecx
  41f9cd:	test   al,0xbc
  41f9cf:	jb     0x41fa34
  41f9d1:	xchg   ebp,eax
  41f9d2:	cli    
  41f9d3:	push   eax
  41f9d4:	push   ecx
  41f9d5:	mov    ch,0x53
  41f9d7:	add    al,0x97
  41f9d9:	jge    0x41f984
  41f9db:	and    eax,0xe571c28a
  41f9e0:	and    eax,0xf6022e83
  41f9e5:	shr    eax,0x42
  41f9e8:	loopne 0x41f9f2
  41f9ea:	rol    DWORD PTR [eax-0x19],1
  41f9ed:	cmp    DWORD PTR [esi+0x17],edx
  41f9f0:	pop    ebp
  41f9f1:	sub    eax,DWORD PTR [esi+0x10]
  41f9f4:	add    eax,0x6b6037e4
  41f9f9:	int3   
  41f9fa:	stc    
  41f9fb:	mov    edi,ecx
  41f9fd:	xchg   edx,eax
  41f9fe:	jge    0x41f9b3
  41fa00:	mov    edi,0xfbab9d2
  41fa05:	stos   DWORD PTR es:[edi],eax
  41fa06:	push   cs
  41fa07:	xchg   BYTE PTR [edx],ah
  41fa09:	pop    esp
  41fa0a:	loopne 0x41f9c8
  41fa0c:	mov    ds:0xca2f4ad9,al
  41fa11:	lds    eax,FWORD PTR [ecx+0x3b5b2262]
  41fa17:	adc    DWORD PTR [ebx],ebx
  41fa19:	mov    edx,0xceb25279
  41fa1e:	jb     0x41f9ee
  41fa20:	lock mov ds:0xd18ce4d4,al
  41fa26:	mov    ah,0x30
  41fa28:	leave  
  41fa29:	lea    ebx,[ecx+0xe]
  41fa2c:	enterw 0x39ae,0x93
  41fa31:	mov    cl,0xe0
  41fa33:	add    DWORD PTR [edi-0x2a],eax
  41fa36:	and    eax,0x12663666
  41fa3b:	jmp    DWORD PTR ss:[edx+0x154ec04]
  41fa42:	es mov ebx,0x9c26176c
  41fa48:	jne    0x41fa45
  41fa4a:	out    0x99,al
  41fa4c:	out    0x38,eax
  41fa4e:	jo     0x41faca
  41fa50:	cwde   
  41fa51:	in     al,dx
  41fa52:	sub    al,0x3b
  41fa54:	(bad)  
  41fa55:	sbb    eax,0x8502526c
  41fa5a:	mov    esi,0xdc9abb1
  41fa5f:	adc    dl,BYTE PTR [esi+ebx*8+0x3e7e6743]
  41fa66:	xchg   esp,eax
  41fa67:	xor    al,BYTE PTR [edx-0x2cd3bf15]
  41fa6d:	sub    eax,0xe7f0ddf
  41fa72:	xlat   BYTE PTR ds:[ebx]
  41fa73:	inc    eax
  41fa74:	cwde   
  41fa75:	popf   
  41fa76:	fxch   st(5)
  41fa78:	fldenv [eax]
  41fa7a:	shr    BYTE PTR [ebx+ebp*2],cl
  41fa7d:	fldcw  WORD PTR [ebx+0x39]
  41fa80:	cdq    
  41fa81:	xor    esp,DWORD PTR [ebp+0x10]
  41fa84:	and    al,0x12
  41fa86:	adc    dh,BYTE PTR [edx+eiz*4-0x3cee54be]
  41fa8d:	add    ecx,DWORD PTR [ebx-0x183881fe]
  41fa93:	mov    al,0x12
  41fa95:	arpl   WORD PTR [ecx-0x3d],cx
  41fa98:	inc    BYTE PTR [edi]
  41fa9a:	mov    ds:0xbce56334,al
  41fa9f:	xlat   BYTE PTR ds:[ebx]
  41faa0:	test   al,0x3d
  41faa2:	cmp    ecx,ebx
  41faa4:	aam    0xcc
  41faa6:	inc    ebp
  41faa7:	cmp    eax,0x57ae7dd2
  41faac:	or     eax,0xe00fa36f
  41fab1:	aam    0x44
  41fab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab4:	(bad)
  41fab7:	shr    BYTE PTR [ebx-0x735f040c],0xb0
  41fabe:	imul   esi,DWORD PTR [ebp+eax*4-0x69ea82e7],0xffffffa9
  41fac6:	imul   ecx,DWORD PTR [esi-0x1838d2da],0x28
  41facd:	repnz sub ecx,DWORD PTR [esi*1+0x3111f257]
  41fad5:	mov    edi,DWORD PTR [esi+0x1f]
  41fad8:	dec    edx
  41fad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fada:	neg    BYTE PTR [ecx+eax*2-0x5b]
  41fade:	and    BYTE PTR [eax+0x7f],0xfa
  41fae2:	pushf  
  41fae3:	xor    cl,dl
  41fae5:	call   0x4a19c483
  41faea:	pop    eax
  41faeb:	or     ebp,eax
  41faed:	add    ah,ch
  41faef:	mov    eax,ds:0xb4ee224
  41faf4:	in     eax,0xcb
  41faf6:	loope  0x41fabb
  41faf8:	mov    bl,0x11
  41fafa:	sbb    eax,0x7efafb50
  41faff:	call   0xfdaa:0x10ca7078
  41fb06:	sub    al,0xa8
  41fb08:	les    ecx,FWORD PTR [eax+0x39]
  41fb0b:	or     BYTE PTR [edx],cl
  41fb0d:	ins    DWORD PTR es:[edi],dx
  41fb0e:	push   eax
  41fb0f:	shr    DWORD PTR [ebx+0xf],cl
  41fb12:	or     BYTE PTR [ebp-0x70],0x14
  41fb16:	xor    ecx,DWORD PTR [eax-0x3e]
  41fb19:	adc    BYTE PTR [esi+edx*4-0x759e95c3],al
  41fb20:	not    BYTE PTR [edx+ecx*1-0x50]
  41fb24:	pop    ss
  41fb25:	inc    edx
  41fb26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb27:	xchg   ecx,eax
  41fb28:	and    al,0xbd
  41fb2a:	(bad)  
  41fb2b:	scas   eax,DWORD PTR es:[edi]
  41fb2c:	ins    BYTE PTR es:[edi],dx
  41fb2d:	jecxz  0x41fb54
  41fb2f:	icebp  
  41fb30:	ret    0xb7c2
  41fb33:	ret    0xcfea
  41fb36:	out    0xd3,al
  41fb38:	mov    edi,0xe0524416
  41fb3d:	xchg   edi,eax
  41fb3e:	pop    ebp
  41fb3f:	pop    ebp
  41fb40:	mov    esp,0x94ab9458
  41fb45:	lods   eax,DWORD PTR ds:[esi]
  41fb46:	bnd jo 0x41fb49
  41fb49:	xor    eax,ebx
  41fb4b:	stc    
  41fb4c:	or     eax,0xffe71a11
  41fb51:	xor    BYTE PTR [edi],bh
  41fb53:	xchg   esp,eax
  41fb54:	push   ecx
  41fb55:	pop    ds
  41fb56:	out    dx,al
  41fb57:	inc    eax
  41fb58:	jmp    0x7f3d:0x9f236215
  41fb5f:	mov    esp,0x96d6c0b4
  41fb64:	lea    edi,[edi]
  41fb66:	and    eax,0xd326de37
  41fb6b:	std    
  41fb6c:	jp     0x41fbd1
  41fb6e:	rcr    DWORD PTR [ebx-0x7a9837e3],1
  41fb74:	(bad)  
  41fb75:	lds    esi,FWORD PTR [ebx-0x5011b0dd]
  41fb7b:	jg     0x41fbe2
  41fb7d:	adc    eax,0xe9a37aae
  41fb82:	mov    eax,0xd2e8f613
  41fb87:	or     BYTE PTR [ecx+0x3a],ch
  41fb8a:	retf   0xb6e5
  41fb8d:	mov    ch,0x4e
  41fb8f:	push   es
  41fb90:	jo     0x41fbad
  41fb92:	inc    esi
  41fb93:	jbe    0x41fb41
  41fb95:	jge    0x41fb4c
  41fb97:	stc    
  41fb98:	and    BYTE PTR [eax],0x72
  41fb9b:	test   al,0xbd
  41fb9d:	cmp    ch,BYTE PTR ds:0x1454de5
  41fba3:	xchg   BYTE PTR [edx+0x4f4a38e5],bh
  41fba9:	cmc    
  41fbaa:	sbb    BYTE PTR [edx],0x4e
  41fbad:	fisub  WORD PTR [esi+0x40]
  41fbb0:	lea    ebx,[ecx]
  41fbb2:	pop    edx
  41fbb3:	and    DWORD PTR [eax-0x17],ebx
  41fbb6:	cdq    
  41fbb7:	enter  0x1978,0x4e
  41fbbb:	popa   
  41fbbc:	fisttp QWORD PTR [edi*4+0x184af4c9]
  41fbc3:	push   ds
  41fbc4:	sub    cl,BYTE PTR [ecx+edi*8-0x23]
  41fbc8:	pop    esi
  41fbc9:	adc    eax,0x983d1119
  41fbce:	test   BYTE PTR ds:0x766b,0xfc
  41fbd4:	(bad)  
  41fbd5:	pop    ss
  41fbd6:	jmp    0xb4f5c3d2
  41fbdb:	popa   
  41fbdc:	in     eax,0xd7
  41fbde:	jmp    0x41fbea
  41fbe0:	fdiv   QWORD PTR [edx+0x6aa0232]
  41fbe6:	dec    edi
  41fbe7:	xchg   ecx,eax
  41fbe8:	mov    eax,0xa170c2a4
  41fbed:	out    0x38,al
  41fbef:	xchg   ebx,eax
  41fbf0:	sahf   
  41fbf1:	(bad)  
  41fbf2:	add    bh,bl
  41fbf4:	aaa    
  41fbf5:	scas   eax,DWORD PTR es:[edi]
  41fbf6:	push   ss
  41fbf7:	addr16 mov ebx,0xf5d10ab5
  41fbfd:	sbb    al,0xa7
  41fbff:	pop    ebp
  41fc00:	fild   QWORD PTR [ebx]
  41fc02:	xchg   edi,eax
  41fc03:	mov    esi,0xf7ecd1b3
  41fc08:	push   0xfffffffa
  41fc0a:	and    al,0x42
  41fc0c:	xor    al,0xb3
  41fc0e:	mov    eax,0x232a3c72
  41fc13:	popf   
  41fc14:	add    dh,BYTE PTR [edx+eiz*4]
  41fc17:	pop    ss
  41fc18:	(bad)
  41fc1b:	add    BYTE PTR [eax-0x4456c5cd],dh
  41fc21:	test   eax,0xb7853bb3
  41fc26:	mov    esi,0xdbaa3a0c
  41fc2b:	outs   dx,BYTE PTR ds:[esi]
  41fc2c:	scas   al,BYTE PTR es:[edi]
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [esi-0x3afffffe],al
  41fc35:	inc    edx
  41fc36:	push   0xffffffd4
  41fc38:	adc    ebp,edi
  41fc3a:	pop    ss
  41fc3b:	push   ds
  41fc3c:	xor    al,0x72
  41fc3e:	push   0xffffff93
  41fc40:	mov    ah,0xe
  41fc42:	inc    esp
  41fc43:	gs sub eax,0xfd6d1c89
  41fc49:	xchg   ecx,eax
  41fc4a:	(bad)  
  41fc4b:	imul   edi,ebx,0x833b7542
  41fc51:	push   esi
  41fc52:	or     al,0xde
  41fc54:	adc    edi,DWORD PTR [edi-0x75191cb2]
  41fc5a:	mov    bl,al
  41fc5c:	out    dx,eax
  41fc5d:	cvtps2pd xmm0,QWORD PTR ds:0xe7dc24d5
  41fc64:	adc    ebp,DWORD PTR [eax+eiz*2]
  41fc67:	mov    bh,0xe8
  41fc69:	pop    ecx
  41fc6a:	cmp    esp,DWORD PTR ds:0xda20394f
  41fc70:	popa   
  41fc71:	sub    ch,BYTE PTR [eax+0x45]
  41fc74:	es dec ebx
  41fc76:	pop    ebp
  41fc77:	or     DWORD PTR ds:0x49b07c4f,ecx
  41fc7d:	mov    ds:0xd523b470,eax
  41fc82:	jb     0x41fcc1
  41fc84:	(bad)  
  41fc86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc87:	mov    al,ds:0x2c9fff77
  41fc8c:	jp     0x41fc7a
  41fc8e:	push   ebx
  41fc8f:	retf   
  41fc90:	and    edx,DWORD PTR [ecx]
  41fc92:	les    eax,FWORD PTR [edi-0x7d]
  41fc95:	repnz or esi,edi
  41fc98:	jp     0x41fc9f
  41fc9a:	xchg   BYTE PTR [esi+0x2a],dh
  41fc9d:	fstp   TBYTE PTR [ebx]
  41fc9f:	call   0x3b2f9466
  41fca4:	dec    edx
  41fca5:	adc    DWORD PTR [edx],0xffffffdc
  41fca8:	cmp    eax,0x92bee16e
  41fcad:	pop    eax
  41fcae:	arpl   WORD PTR [edx+0x11],ax
  41fcb1:	push   esi
  41fcb2:	jmp    0x41fc36
  41fcb4:	out    0x8f,al
  41fcb6:	ficom  WORD PTR [esi]
  41fcb8:	add    eax,0x32ddec81
  41fcbd:	mov    DWORD PTR [ebp-0x5734f4c3],0xdb89feda
  41fcc7:	stos   BYTE PTR es:[edi],al
  41fcc8:	or     bl,BYTE PTR [eax-0x671fb214]
  41fcce:	jle    0x41fd47
  41fcd0:	xchg   esp,eax
  41fcd1:	retf   0x600a
  41fcd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd5:	ss aaa 
  41fcd7:	jmp    DWORD PTR [eax]
  41fcd9:	stc    
  41fcda:	jbe    0x41fccc
  41fcdc:	sbb    DWORD PTR [edx-0x143fd36c],ecx
  41fce2:	or     ah,dh
  41fce4:	mov    bl,0xd6
  41fce6:	jno    0x41fcb2
  41fce8:	and    bh,0x35
  41fceb:	int    0xa8
  41fced:	mov    ds:0x2982cad7,al
  41fcf2:	xor    DWORD PTR [eax-0x73],esi
  41fcf5:	pusha  
  41fcf6:	ss inc edx
  41fcf8:	sub    dh,bh
  41fcfa:	cs pop eax
  41fcfc:	ss sub al,0x99
  41fcff:	into   
  41fd00:	stos   BYTE PTR es:[edi],al
  41fd01:	xor    al,0x26
  41fd03:	and    dl,bl
  41fd05:	(bad)  
  41fd06:	mov    edx,0x8aebb858
  41fd0b:	xchg   edx,eax
  41fd0c:	gs cdq 
  41fd0e:	(bad)  
  41fd0f:	mov    DWORD PTR [eax+eiz*1],eax
  41fd12:	stos   BYTE PTR es:[edi],al
  41fd13:	xchg   ebp,eax
  41fd14:	sahf   
  41fd15:	mov    eax,?
  41fd17:	lds    ecx,FWORD PTR [ebp+0x8]
  41fd1a:	aad    0x36
  41fd1c:	out    dx,al
  41fd1d:	fstp   DWORD PTR [ebp-0x1a]
  41fd20:	push   edx
  41fd21:	out    dx,eax
  41fd22:	or     dl,BYTE PTR ds:0x90045e4a
  41fd28:	xchg   ecx,eax
  41fd29:	inc    esi
  41fd2a:	inc    esi
  41fd2b:	and    al,0x7c
  41fd2d:	dec    ecx
  41fd2e:	mov    bl,0xe
  41fd30:	jge    0x41fd2d
  41fd32:	call   0xf728:0x12bc63cb
  41fd39:	(bad)  [eax+0x7]
  41fd3c:	pop    edx
  41fd3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd3f:	pushf  
  41fd40:	jl     0x41fd7a
  41fd42:	pop    ds
  41fd43:	jge    0x41fd1a
  41fd45:	in     eax,0xfc
  41fd47:	sbb    DWORD PTR [edx-0x3445259c],edx
  41fd4d:	or     ah,BYTE PTR [edx-0x36]
  41fd50:	adc    al,BYTE PTR [edx+0x5c]
  41fd53:	jnp    0x41fd5c
  41fd55:	add    al,0x1
  41fd57:	dec    esp
  41fd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd5a:	and    BYTE PTR [eax+edx*2],dh
  41fd5d:	mov    bh,0x94
  41fd5f:	stos   BYTE PTR es:[edi],al
  41fd60:	out    0x8c,eax
  41fd62:	xchg   ecx,eax
  41fd63:	mov    BYTE PTR [edi+0x20b5ac2a],dh
  41fd69:	loop   0x41fd4f
  41fd6b:	imul   edx,DWORD PTR [eax-0x3564e97c],0x34
  41fd72:	lods   al,BYTE PTR ds:[esi]
  41fd73:	jno    0x41fdad
  41fd75:	adc    al,0xbc
  41fd77:	sub    BYTE PTR ds:0x850a6d95,0xd9
  41fd7e:	loopne 0x41fd18
  41fd80:	das    
  41fd81:	inc    esp
  41fd82:	cmc    
  41fd83:	in     eax,0x7c
  41fd85:	push   cs
  41fd86:	mov    ch,0xf9
  41fd89:	dec    ecx
  41fd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd8b:	and    eax,0xb03f308a
  41fd90:	sbb    eax,0xcc9f4c3f
  41fd95:	mov    bh,bl
  41fd97:	popf   
  41fd98:	lods   eax,DWORD PTR ds:[esi]
  41fd99:	xor    eax,0xd7369b72
  41fd9e:	std    
  41fd9f:	lods   eax,DWORD PTR ds:[esi]
  41fda0:	xchg   ecx,eax
  41fda1:	cli    
  41fda2:	adc    BYTE PTR [esi-0x5c0f9ba0],bl
  41fda8:	sub    cl,BYTE PTR [ebp+0x28]
  41fdab:	dec    edx
  41fdac:	(bad)  
  41fdad:	sub    eax,0xc12a2186
  41fdb2:	pop    ebp
  41fdb3:	pop    ss
  41fdb4:	hlt    
  41fdb5:	push   0xc8e34919
  41fdba:	loop   0x41fd44
  41fdbc:	adc    ch,BYTE PTR [edx]
  41fdbe:	adc    DWORD PTR [ebx],0x94111175
  41fdc4:	lods   eax,DWORD PTR ds:[esi]
  41fdc5:	mov    dl,0x68
  41fdc7:	fcomp  QWORD PTR [esi-0x2f]
  41fdca:	lahf   
  41fdcb:	jmp    0x4fa4:0xd827395e
  41fdd2:	push   ebp
  41fdd3:	mov    ebx,0x8e520801
  41fdd8:	mov    bl,0x82
  41fdda:	push   ebp
  41fddb:	mov    edx,0x6693a185
  41fde0:	outs   dx,DWORD PTR ds:[esi]
  41fde1:	jne    0x41fe56
  41fde3:	stos   DWORD PTR es:[edi],eax
  41fde4:	and    eax,0xd4f13674
  41fde9:	test   DWORD PTR [ebp-0x69],ebp
  41fdec:	test   dl,ah
  41fdee:	xor    ax,0x5105
  41fdf2:	out    0xad,eax
  41fdf4:	mov    gs,WORD PTR [edx]
  41fdf6:	mov    BYTE PTR [edi+edx*2],dl
  41fdf9:	retf   0x24a8
  41fdfc:	mov    edi,DWORD PTR [ecx+0x3a786345]
  41fe02:	cli    
  41fe03:	test   edi,ebp
  41fe05:	lock sbb DWORD PTR [edx-0x3da84bc0],ebp
  41fe0c:	fs and al,0x45
  41fe0f:	adc    eax,0x5547cbbd
  41fe14:	ficom  DWORD PTR [edi]
  41fe16:	es push cs
  41fe18:	shr    DWORD PTR [eax-0x60],cl
  41fe1b:	leave  
  41fe1c:	xchg   ebx,eax
  41fe1d:	mov    esp,0x4972c2f4
  41fe22:	(bad)  
  41fe23:	out    0xcc,al
  41fe25:	push   0x1f9a9f7c
  41fe2a:	xor    ecx,esi
  41fe2c:	mov    bl,0x4e
  41fe2e:	sub    al,0x92
  41fe30:	lea    ebp,[esi]
  41fe32:	(bad)  
  41fe33:	xor    esi,DWORD PTR [edi]
  41fe35:	fldcw  WORD PTR [eax]
  41fe37:	sbb    BYTE PTR [eax+eiz*1-0x6a483463],ch
  41fe3e:	sahf   
  41fe3f:	sar    BYTE PTR [esi+0x79],cl
  41fe42:	sbb    eax,0x41cbabf
  41fe47:	or     BYTE PTR [esi+0x7b],dl
  41fe4a:	loop   0x41fe30
  41fe4c:	icebp  
  41fe4d:	cmc    
  41fe4e:	data16 sub BYTE PTR [edi+edx*4],bh
  41fe52:	mov    dh,0x67
  41fe54:	loope  0x41fe99
  41fe56:	or     BYTE PTR [ecx*1-0x69446465],dl
  41fe5d:	in     eax,0xf3
  41fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe60:	repz repnz mov cl,BYTE PTR [edx-0x44]
  41fe65:	pop    ds
  41fe66:	sbb    al,0xe4
  41fe68:	mov    ds:0x153a7f4,al
  41fe6d:	jb     0x41fecf
  41fe6f:	stos   DWORD PTR es:[edi],eax
  41fe70:	mov    ebp,0xfe68a72a
  41fe75:	push   ecx
  41fe76:	mov    al,0x45
  41fe78:	sbb    dl,BYTE PTR [ecx-0x18]
  41fe7b:	lods   eax,DWORD PTR ds:[esi]
  41fe7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe7d:	call   0x4569:0x1edac42d
  41fe84:	fidiv  DWORD PTR [eax+0x42]
  41fe87:	ficomp WORD PTR [eax-0x1ee61048]
  41fe8d:	in     eax,0x16
  41fe8f:	mov    bl,ah
  41fe91:	xor    al,BYTE PTR [ebx]
  41fe93:	xchg   esi,eax
  41fe94:	je     0x41fe6b
  41fe96:	stos   DWORD PTR es:[edi],eax
  41fe97:	mov    cl,0xc3
  41fe99:	ficom  WORD PTR [edi+0xc79f7b4]
  41fe9f:	sub    eax,0x8e71992
  41fea4:	jmp    0x41fed6
  41fea6:	fs retf 
  41fea8:	sub    esp,esi
  41feaa:	xchg   edi,eax
  41feab:	inc    ecx
  41feac:	jo     0x41fec2
  41feae:	dec    ecx
  41feaf:	jne    0x41feab
  41feb1:	test   eax,0x693387f8
  41feb6:	jb     0x41fe6c
  41feb8:	fstp   DWORD PTR [edi+0x0]
  41febb:	add    BYTE PTR [ecx-0x6b36a2],ch
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	fwait
  41fec9:	pop    esp
  41feca:	rep ins DWORD PTR es:[edi],dx
  41fecc:	xor    al,0x7b
  41fece:	add    DWORD PTR [eax],eax
  41fed0:	xchg   BYTE PTR [edx],al
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	mov    DWORD PTR [edi-0xf487d27],eax
  41feda:	xchg   ecx,eax
  41fedb:	jecxz  0x41fe7b
  41fedd:	push   ss
  41fede:	inc    ebp
  41fedf:	add    al,0xe1
  41fee1:	outs   dx,DWORD PTR ds:[esi]
  41fee2:	adc    eax,0xd806cbcf
  41fee7:	adc    eax,0x867fec82
  41feec:	ds or  al,0xa7
  41feef:	pop    edx
  41fef0:	lods   eax,DWORD PTR ds:[esi]
  41fef1:	pusha  
  41fef2:	arpl   cx,ax
  41fef4:	ss leave 
  41fef6:	(bad)  
  41fef7:	in     eax,dx
  41fef8:	pop    ebp
  41fef9:	push   ds
  41fefa:	sub    eax,0x4a44c0ad
  41feff:	popa   
  41ff00:	pop    ebx
  41ff01:	aaa    
  41ff02:	dec    ebp
  41ff03:	add    al,0x1
  41ff05:	inc    ebp
  41ff06:	pop    ds
  41ff07:	in     al,dx
  41ff08:	loop   0x41fefe
  41ff0a:	pop    es
  41ff0b:	test   eax,0x6058b59e
  41ff10:	lahf   
  41ff11:	jb     0x41ff2f
  41ff13:	adc    eax,0x491dc73f
  41ff18:	fnop   
  41ff1a:	xor    edx,DWORD PTR [edx+0x722e2746]
  41ff20:	out    0x59,eax
  41ff22:	mov    esp,0x85c49ad3
  41ff27:	mov    al,ds:0x2c34cfd0
  41ff2c:	inc    ebp
  41ff2d:	pop    ebx
  41ff2e:	mov    cl,BYTE PTR [edx+0x52]
  41ff31:	sbb    bl,BYTE PTR [edi]
  41ff33:	lock mov eax,ds:0xc022c55d
  41ff39:	fild   QWORD PTR [edx+eiz*8]
  41ff3c:	sbb    eax,0x8be1a48b
  41ff41:	cli    
  41ff42:	xchg   edx,eax
  41ff43:	ins    DWORD PTR es:[edi],dx
  41ff44:	pusha  
  41ff45:	cs lahf 
  41ff47:	push   0x7e
  41ff49:	stos   DWORD PTR es:[edi],eax
  41ff4a:	je     0x41ff44
  41ff4c:	(bad)  
  41ff4e:	or     bh,BYTE PTR [esi+edx*1-0x2abec73a]
  41ff55:	fimul  DWORD PTR [edx]
  41ff57:	jb     0x41ff16
  41ff59:	jl     0x41ff0a
  41ff5b:	pop    ss
  41ff5c:	mov    ecx,0xe9ccaa1b
  41ff61:	cwde   
  41ff62:	sbb    al,0x23
  41ff64:	jb     0x41ff4e
  41ff66:	(bad)  
  41ff68:	and    BYTE PTR [eax],cl
  41ff6a:	lods   eax,DWORD PTR ds:[esi]
  41ff6b:	mov    ds:0x515c966e,eax
  41ff70:	mov    ds:0x8e63fc23,eax
  41ff75:	lock mov cl,0x5d
  41ff78:	shl    BYTE PTR [ebx+edx*4-0x394146d6],1
  41ff7f:	push   es
  41ff80:	push   eax
  41ff81:	jno    0x41ff3a
  41ff83:	das    
  41ff84:	das    
  41ff85:	loopne 0x41ffa6
  41ff87:	retf   0x44e
  41ff8a:	mov    cl,bh
  41ff8c:	jge    0x41ffed
  41ff8e:	mov    WORD PTR [esi-0x7b],cs
  41ff91:	imul   DWORD PTR [esi+0x8]
  41ff94:	jp     0x41ffd3
  41ff96:	outs   dx,DWORD PTR ds:[esi]
  41ff97:	je     0x41ffb0
  41ff99:	cld    
  41ff9a:	daa    
  41ff9b:	add    al,0xf8
  41ff9d:	aam    0x6a
  41ff9f:	or     esi,DWORD PTR [edi]
  41ffa1:	cli    
  41ffa2:	push   edi
  41ffa3:	inc    ebp
  41ffa4:	and    bl,BYTE PTR [ebx]
  41ffa6:	and    ah,bl
  41ffa8:	jle    0x41ff45
  41ffaa:	and    ecx,DWORD PTR [eax+edx*8-0x4]
  41ffae:	mov    al,ds:0xd78494e5
  41ffb3:	jp     0x72ac101a
  41ffb9:	icebp  
  41ffba:	mov    eax,ds:0xf45a0ecd
  41ffbf:	lods   al,BYTE PTR ds:[esi]
  41ffc0:	pop    esp
  41ffc1:	mov    dl,0xea
  41ffc3:	bound  esi,QWORD PTR [edx+0x154dc61d]
  41ffc9:	stos   DWORD PTR es:[edi],eax
  41ffca:	arpl   sp,si
  41ffcc:	sub    DWORD PTR ds:[ecx-0xb62ecb7],esi
  41ffd3:	adc    DWORD PTR [eax+0x43fb07b4],edi
  41ffd9:	std    
  41ffda:	or     dl,dh
  41ffdc:	push   0x1e086de2
  41ffe1:	lea    esp,[edi]
  41ffe3:	cmp    cl,BYTE PTR [eax-0x2]
  41ffe6:	das    
  41ffe7:	xor    BYTE PTR ds:0xb7e3cac5,0x97
  41ffee:	(bad)  
  41fff0:	mov    ebx,0xa2fe00b3
  41fff5:	stos   DWORD PTR es:[edi],eax
  41fff6:	data16 fadd DWORD PTR [ebx-0x6c85d953]
  41fffd:	clc    
  41fffe:	jnp    0x420039
  420000:	lds    eax,FWORD PTR [esi-0x16b63dad]
  420006:	cmp    al,0x72
  420008:	ds inc edi
  42000a:	xchg   edx,eax
  42000b:	adc    ah,dl
  42000d:	iret   
  42000e:	ficom  DWORD PTR [ebp+0xc]
  420011:	sbb    eax,0xfe5f4480
  420016:	inc    esi
  420017:	scas   al,BYTE PTR es:[edi]
  420018:	xchg   esi,eax
  420019:	mov    ds:0xed01cf8b,al
  42001e:	cwde   
  42001f:	mov    ebx,0x5603ccc4
  420024:	stos   BYTE PTR es:[edi],al
  420025:	sbb    edx,esp
  420027:	sub    dl,BYTE PTR [esi-0x42]
  42002a:	das    
  42002b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42002c:	adc    BYTE PTR [eax+0x8],cl
  42002f:	retf   
  420030:	jecxz  0x41ffeb
  420032:	fistp  WORD PTR [ebx]
  420034:	aas    
  420035:	sub    ebp,DWORD PTR [ebp-0x72]
  420038:	add    DWORD PTR [ebx],edx
  42003a:	cdq    
  42003b:	xchg   edi,eax
  42003c:	mov    bl,0x3e
  42003e:	in     eax,dx
  42003f:	out    dx,eax
  420040:	stos   DWORD PTR es:[edi],eax
  420041:	aad    0x53
  420043:	jne    0x42002c
  420045:	pop    eax
  420046:	clc    
  420047:	xchg   DWORD PTR [ecx-0x1e3af023],ebp
  42004d:	mov    cl,0xf3
  42004f:	scas   eax,DWORD PTR es:[edi]
  420050:	jno    0x420051
  420052:	mov    cl,0xc8
  420054:	adc    BYTE PTR [ebx-0x3d],bl
  420057:	frstor [edx]
  420059:	daa    
  42005a:	jo     0x420076
  42005c:	lds    ebx,FWORD PTR [eax-0x23]
  42005f:	ss dec edi
  420061:	xchg   DWORD PTR [eax-0x1b],esp
  420064:	mov    esi,0xece6b579
  420069:	popf   
  42006a:	push   eax
  42006b:	ret    0xb64b
  42006e:	dec    ecx
  42006f:	mov    dl,0x6d
  420071:	aas    
  420072:	and    BYTE PTR [ebx-0x66983f2a],dl
  420078:	dec    esp
  420079:	and    eax,0xeeeda621
  42007e:	cmp    DWORD PTR [edi+ebp*8-0x75],edx
  420082:	pop    ds
  420083:	push   es
  420084:	mov    al,ds:0xfb12c2c
  420089:	je     0x420105
  42008b:	pop    edx
  42008c:	scas   al,BYTE PTR es:[edi]
  42008d:	retf   
  42008e:	arpl   WORD PTR [edx-0x62],ax
  420091:	test   eax,0xbf5bee7f
  420096:	cld    
  420097:	sub    BYTE PTR [ebp+0x11],dh
  42009a:	adc    eax,0x228ed573
  42009f:	push   edx
  4200a0:	add    BYTE PTR [eax],bh
  4200a2:	jno    0x42002d
  4200a4:	jecxz  0x4200b6
  4200a6:	add    dh,al
  4200a8:	xchg   edx,eax
  4200a9:	xchg   esi,eax
  4200aa:	mov    eax,0x8a1dc668
  4200af:	xchg   esp,eax
  4200b0:	popa   
  4200b1:	xchg   esp,eax
  4200b2:	ror    ch,0x6a
  4200b5:	in     al,0xee
  4200b7:	sbb    DWORD PTR [eax],esp
  4200b9:	in     al,dx
  4200ba:	sbb    eax,0xe153e728
  4200bf:	scas   eax,DWORD PTR es:[edi]
  4200c0:	addr16 das 
  4200c2:	out    0x2a,al
  4200c4:	lea    esi,[ebp+0x45b896fd]
  4200ca:	stos   DWORD PTR es:[edi],eax
  4200cb:	lds    ebp,FWORD PTR [eax-0x6cc84c9]
  4200d1:	or     bl,bh
  4200d3:	ret    0x16be
  4200d6:	gs ret 
  4200d8:	xchg   bh,ah
  4200da:	(bad)  
  4200db:	out    0x3f,eax
  4200dd:	pop    esi
  4200de:	sbb    DWORD PTR [ebx],edi
  4200e0:	add    dl,BYTE PTR [ecx]
  4200e2:	mov    ds:0x3a05f3e5,al
  4200e7:	xor    BYTE PTR [ebp+0x2c],ch
  4200ea:	icebp  
  4200eb:	ins    BYTE PTR es:[edi],dx
  4200ec:	imul   BYTE PTR [ecx+eiz*4+0x4785474e]
  4200f3:	push   cs
  4200f4:	jae    0x420135
  4200f6:	stc    
  4200f7:	stc    
  4200f8:	daa    
  4200f9:	cld    
  4200fa:	je     0x4200dc
  4200fc:	sub    ebp,DWORD PTR [edx+0xa]
  4200ff:	xor    eax,0x438ac7e9
  420104:	loop   0x42012a
  420106:	fsub   st(4),st
  420108:	(bad)  
  42010a:	ret    
  42010b:	pop    ebp
  42010c:	ins    BYTE PTR es:[edi],dx
  42010d:	arpl   WORD PTR [edx+ecx*4+0x1afc975d],ax
  420114:	adc    BYTE PTR [ebx+0x64],dh
  420117:	xor    BYTE PTR [ecx+esi*2-0x73],dl
  42011b:	xchg   esp,eax
  42011c:	out    dx,al
  42011d:	mov    ds:0x59f825f9,eax
  420122:	outs   dx,DWORD PTR ds:[esi]
  420123:	sbb    eax,0xa58a6831
  420128:	out    dx,al
  420129:	in     al,0x63
  42012b:	adc    bh,ch
  42012d:	or     dh,ch
  42012f:	jp     0x420125
  420131:	mov    bh,0xa5
  420133:	std    
  420134:	mov    esi,0xf96bc0f4
  420139:	out    dx,eax
  42013a:	xchg   DWORD PTR [edi-0xf],edx
  42013d:	in     al,0x7
  42013f:	mov    eax,DWORD PTR [ecx-0x7d962575]
  420145:	outs   dx,BYTE PTR ds:[esi]
  420146:	cmp    al,0xd5
  420148:	mov    bh,0x26
  42014a:	fild   DWORD PTR [eax-0x47]
  42014d:	or     ah,dh
  42014f:	cmp    BYTE PTR [edx+0x716c1373],bl
  420155:	js     0x4201b1
  420157:	gs push eax
  420159:	add    DWORD PTR [eax],0x0
  42015c:	mov    ebx,0x7d7539cf
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi-0x5830c1f1]
  42016b:	bound  edi,QWORD PTR [edx-0x79fffe83]
  420171:	add    al,BYTE PTR [eax]
  420173:	add    BYTE PTR [ebx+0x13],ah
  420176:	dec    ebx
  420177:	mov    ah,BYTE PTR [ecx]
  420179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42017a:	hlt    
  42017b:	pop    ds
  42017c:	dec    ebx
  42017d:	pop    edi
  42017e:	mov    ah,0x45
  420180:	sub    DWORD PTR [esi+ecx*8-0x70],edx
  420184:	jne    0x4201bd
  420186:	mov    ecx,0xa57e4a1a
  42018b:	sbb    BYTE PTR [eax],0x4f
  42018e:	mov    ds:0x8ceab14d,eax
  420193:	repz jb 0x4201cf
  420196:	adc    eax,0x2d68f8f3
  42019b:	test   esp,eax
  42019d:	cmp    al,0x3
  42019f:	mov    dl,0xfc
  4201a1:	pop    ecx
  4201a2:	cmovs  eax,DWORD PTR [ebx+0xc5da36a]
  4201a9:	pop    ecx
  4201aa:	and    DWORD PTR [eax],edx
  4201ac:	in     al,0x5
  4201ae:	cs js  0x420185
  4201b1:	adc    cx,WORD PTR [ecx]
  4201b4:	ins    BYTE PTR es:[edi],dx
  4201b5:	rcl    esp,1
  4201b7:	or     DWORD PTR [esi],edi
  4201b9:	jmp    0x4cf4:0xe60ea079
  4201c0:	enter  0x134b,0xa1
  4201c4:	clc    
  4201c5:	pop    edi
  4201c6:	push   ebp
  4201c7:	popf   
  4201c8:	outs   dx,BYTE PTR ds:[esi]
  4201c9:	inc    esp
  4201ca:	cmp    ah,dh
  4201cc:	push   eax
  4201cd:	sbb    eax,0xbd9d07fc
  4201d2:	test   al,0xbd
  4201d4:	adc    edi,esp
  4201d6:	dec    eax
  4201d7:	ins    DWORD PTR es:[edi],dx
  4201d8:	cmp    eax,0xe28f4153
  4201dd:	lds    esp,FWORD PTR [edi+0x32]
  4201e0:	dec    esp
  4201e1:	adc    DWORD PTR [esi-0x39e12d0c],edx
  4201e7:	mov    esp,0x40a7e01a
  4201ec:	mov    edx,0xa3e9a44b
  4201f1:	into   
  4201f2:	into   
  4201f3:	and    bh,BYTE PTR [ecx-0x1129e974]
  4201f9:	xor    BYTE PTR [ebx],bl
  4201fb:	stos   BYTE PTR es:[edi],al
  4201fc:	fcomi  st,st(7)
  4201fe:	push   ss
  4201ff:	push   ebp
  420200:	lea    esi,[esi-0x17]
  420203:	cwde   
  420204:	push   ss
  420205:	mov    cl,0x97
  420207:	push   cs
  420208:	mov    cl,0xe7
  42020a:	jns    0x4201a5
  42020c:	pop    edi
  42020d:	and    BYTE PTR [ecx+edx*1-0x3c0289e4],0xb0
  420215:	mov    cl,0xee
  420217:	jle    0x420200
  420219:	jb     0x4201d6
  42021b:	pop    ebx
  42021c:	xor    al,0xfd
  42021e:	repz inc eax
  420220:	sub    al,0x24
  420222:	jmp    0x42020d
  420224:	xor    BYTE PTR [eax+0x4135d66b],0x5a
  42022b:	shl    DWORD PTR [ebx-0x74],0x0
  42022f:	xlat   BYTE PTR ds:[ebx]
  420230:	mov    ah,0xf0
  420232:	aam    0x85
  420234:	xlat   BYTE PTR ds:[ebx]
  420235:	mov    dh,0x67
  420237:	dec    ebx
  420238:	aaa    
  420239:	enter  0x98cf,0xec
  42023d:	daa    
  42023e:	add    BYTE PTR es:[ecx],ah
  420241:	xor    DWORD PTR [ebx+0x97d111f],ecx
  420247:	mov    edx,0x53e321
  42024c:	test   DWORD PTR [ecx+0x72049b4f],edi
  420252:	or     al,0x5
  420254:	rol    DWORD PTR [ecx+0x2722bebe],1
  42025a:	jmp    0x5fe4bed4
  42025f:	ins    BYTE PTR es:[edi],dx
  420260:	mov    edi,0x9f37fad
  420265:	dec    esi
  420266:	loopne 0x42023d
  420268:	push   ebx
  420269:	mov    dh,0xa3
  42026b:	ja     0x420264
  42026d:	push   eax
  42026e:	xchg   BYTE PTR ds:0xd4f1861e,dh
  420274:	(bad)  
  420276:	cdq    
  420277:	ja     0x4202ea
  420279:	(bad)  
  42027a:	cmp    esp,DWORD PTR [esi+esi*4-0x4c]
  42027e:	cmp    al,0x66
  420280:	aas    
  420281:	adc    edx,esp
  420283:	cmp    ebx,DWORD PTR [eax]
  420285:	bound  esi,QWORD PTR [edx+0x53]
  420288:	or     edx,DWORD PTR [edi]
  42028a:	xor    al,0x4e
  42028c:	jb     0x4202ed
  42028e:	pop    ebp
  42028f:	or     DWORD PTR [ebx],0x2a
  420292:	ret    
  420293:	loope  0x42029f
  420295:	scas   al,BYTE PTR es:[edi]
  420296:	adc    al,0x91
  420298:	xchg   ecx,eax
  420299:	mov    ch,0x1b
  42029b:	fnstenv [ebx+edx*2+0x46f79e98]
  4202a2:	sub    al,0x82
  4202a4:	test   DWORD PTR [edi],edi
  4202a6:	cmp    al,0x26
  4202a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202a9:	scas   eax,DWORD PTR es:[edi]
  4202aa:	dec    esi
  4202ab:	fmul   DWORD PTR [esi+0x46]
  4202ae:	mov    al,0xad
  4202b0:	sbb    DWORD PTR [ecx+0x3357bf7e],0x27
  4202b7:	push   edx
  4202b8:	cmp    al,0x89
  4202ba:	and    ebx,DWORD PTR [esi-0xa98b43d]
  4202c0:	mov    dh,0x4a
  4202c2:	bound  eax,QWORD PTR [esi-0x41750360]
  4202c8:	sbb    BYTE PTR [eax-0x46244ad3],dl
  4202ce:	sub    bl,BYTE PTR [esi-0x281de3ac]
  4202d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d5:	ficomp DWORD PTR [esi]
  4202d7:	xchg   BYTE PTR [ebp-0x3c],bl
  4202da:	xor    DWORD PTR ds:0x68095333,0xffffffe5
  4202e1:	jne    0x420294
  4202e3:	outs   dx,DWORD PTR gs:[esi]
  4202e5:	ins    BYTE PTR es:[edi],dx
  4202e6:	cmp    DWORD PTR ds:0x24169a74,esp
  4202ec:	mov    DWORD PTR [eax+0x74fa9a8d],esi
  4202f2:	sub    edi,DWORD PTR [ecx+0x591911ff]
  4202f8:	cdq    
  4202f9:	mov    eax,ds:0x60e6f3e2
  4202fe:	loope  0x4202e4
  420300:	lock fistp QWORD PTR [ebx+0x60f127a0]
  420307:	stos   DWORD PTR es:[edi],eax
  420308:	xchg   esp,eax
  420309:	ret    0xd23f
  42030c:	hlt    
  42030d:	sbb    BYTE PTR [esi+0x4702c7c7],bh
  420313:	pop    esi
  420314:	scas   al,BYTE PTR es:[edi]
  420315:	xor    al,dh
  420317:	in     eax,0xcc
  420319:	jmp    0x6f6e92a3
  42031e:	icebp  
  42031f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420320:	and    al,dl
  420322:	in     al,dx
  420323:	jge    0x420362
  420325:	in     eax,dx
  420326:	(bad)  
  420328:	xor    al,0xca
  42032a:	cmp    DWORD PTR [edi+0x4d3091f2],0xff031f0c
  420334:	mov    ebp,0xbdcaff0e
  420339:	in     eax,dx
  42033a:	inc    ebx
  42033b:	pop    eax
  42033c:	jl     0x420342
  42033e:	les    edi,FWORD PTR [eax-0x47a28f98]
  420344:	xor    dl,BYTE PTR ds:0xdb101522
  42034a:	not    BYTE PTR [edi]
  42034c:	add    ebx,eax
  42034e:	dec    edi
  42034f:	xlat   BYTE PTR ds:[ebx]
  420350:	repnz stc 
  420352:	mov    bl,0xbe
  420354:	or     al,0x11
  420356:	sub    eax,0x25e080e9
  42035b:	xor    ebp,ecx
  42035d:	push   ebx
  42035e:	mov    cl,0x8e
  420360:	jmp    0x23da:0x35031d89
  420367:	daa    
  420368:	aas    
  420369:	mov    cl,0x7b
  42036b:	sahf   
  42036c:	sbb    al,0xf6
  42036e:	pop    ecx
  42036f:	hlt    
  420370:	sar    DWORD PTR [esi-0x19],1
  420373:	sub    DWORD PTR [eax+0x12],esi
  420376:	cmc    
  420377:	mov    ah,0xd2
  420379:	(bad)  
  42037a:	jbe    0x4203cb
  42037c:	hlt    
  42037d:	jb     0x42030c
  42037f:	popa   
  420380:	add    BYTE PTR [edx-0x27],dh
  420383:	xor    BYTE PTR ds:0xd40c51e2,al
  420389:	popf   
  42038a:	fadd   QWORD PTR [edi]
  42038c:	sub    al,0x37
  42038e:	cli    
  42038f:	pusha  
  420390:	sub    BYTE PTR [ebx-0x20],bh
  420393:	bound  esp,QWORD PTR [edx-0x49]
  420396:	out    dx,al
  420397:	or     DWORD PTR [ebp+0x23b58320],esp
  42039d:	repnz mov ecx,0xba49c6ee
  4203a3:	test   al,0xf4
  4203a5:	in     al,dx
  4203a6:	mov    cl,0x48
  4203a8:	mov    WORD PTR [ebx],cs
  4203aa:	js     0x4203a8
  4203ac:	pop    ebp
  4203ad:	jnp    0x420412
  4203af:	inc    edx
  4203b0:	ds cdq 
  4203b2:	xchg   ebp,eax
  4203b3:	das    
  4203b4:	dec    edx
  4203b5:	and    DWORD PTR [ecx+ebx*1-0x6b12d46f],ecx
  4203bc:	xchg   BYTE PTR [ecx+ebx*2],bl
  4203bf:	out    0x7a,eax
  4203c1:	popa   
  4203c2:	pop    edi
  4203c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c4:	(bad)  
  4203c5:	cld    
  4203c6:	leave  
  4203c7:	xor    eax,0xecc9fad7
  4203cc:	adc    eax,0x5ab21f97
  4203d1:	(bad)  [edi-0x1629ac33]
  4203d7:	push   ds
  4203d8:	test   ch,ch
  4203da:	loopne 0x4203b8
  4203dc:	add    al,0xdd
  4203de:	mov    cl,0x7c
  4203e0:	mov    esp,edx
  4203e2:	loop   0x42037c
  4203e4:	sbb    al,dl
  4203e6:	ret    
  4203e7:	shl    DWORD PTR [ebp-0x732e343a],1
  4203ed:	jmp    0xece7:0xfa45a871
  4203f4:	call   0xb8f83b1f
  4203f9:	pop    es
  4203fa:	add    BYTE PTR [eax],al
  4203fc:	out    dx,al
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0xf110bf37
  42040b:	inc    esp
  42040c:	inc    eax
  42040d:	add    BYTE PTR [ecx],0x0
  420410:	xchg   BYTE PTR [edx],al
  420412:	add    BYTE PTR [eax],al
  420414:	arpl   WORD PTR [ebx+0x7db7ff9a],bx
  42041a:	xlat   BYTE PTR ds:[ebx]
  42041b:	add    BYTE PTR [eax-0x40],0xd0
  42041f:	fsubr  QWORD PTR [esi+0x6e61f321]
  420425:	in     al,dx
  420426:	mov    ah,0x87
  420428:	add    eax,0x81e94233
  42042d:	cli    
  42042e:	adc    BYTE PTR [ecx+0x5],ch
  420431:	mov    ecx,0xfa52a2da
  420436:	mov    edi,0x9977da67
  42043b:	mov    al,0xca
  42043d:	cli    
  42043e:	sbb    BYTE PTR [ecx-0x2f],bh
  420441:	add    ecx,esi
  420443:	loop   0x420457
  420445:	aam    0xf9
  420447:	aas    
  420448:	lahf   
  420449:	imul   edx,edx,0xffffffe8
  42044c:	test   al,0x42
  42044e:	jge    0x420447
  420450:	test   eax,0xfbe536ba
  420455:	mov    dh,0x74
  420457:	test   eax,0xe788bf98
  42045c:	push   esp
  42045d:	pusha  
  42045e:	xor    eax,0xaccf971f
  420463:	xor    ecx,DWORD PTR [ecx+0x31874a69]
  420469:	jecxz  0x42043f
  42046b:	mul    DWORD PTR [edx-0x6b]
  42046e:	ror    DWORD PTR [ecx-0x3db0d8cc],0x68
  420475:	pop    edx
  420476:	icebp  
  420477:	sbb    DWORD PTR [edx+0x3954308],0xffffff9c
  42047e:	inc    edi
  42047f:	imul   eax,DWORD PTR [edi-0x63],0xfffffff0
  420483:	je     0x420438
  420485:	xchg   ecx,eax
  420486:	inc    esp
  420487:	or     ch,BYTE PTR [ecx+eax*1]
  42048a:	(bad)  
  42048b:	or     ecx,DWORD PTR [edx]
  42048d:	mov    dl,0x26
  42048f:	iret   
  420490:	fchs   
  420492:	dec    esp
  420493:	sbb    bl,BYTE PTR [eax+0x45e616dc]
  420499:	lock (bad) 
  42049b:	aam    0x10
  42049d:	scas   al,BYTE PTR es:[edi]
  42049e:	pop    edx
  42049f:	retf   0x57c9
  4204a2:	push   ss
  4204a3:	mov    ds:0x8bbf0b63,al
  4204a8:	xchg   edi,eax
  4204a9:	fcom   QWORD PTR [eax-0x63]
  4204ac:	xor    DWORD PTR [esi],ebp
  4204ae:	adc    edx,DWORD PTR [eax-0x22]
  4204b1:	mov    esi,0x95fe8e4d
  4204b6:	fmul   QWORD PTR [eax]
  4204b8:	mov    edx,0xe81076c2
  4204bd:	inc    esi
  4204be:	pop    ebp
  4204bf:	test   ch,dh
  4204c1:	je     0x4204dd
  4204c3:	push   0x67
  4204c5:	inc    esp
  4204c6:	test   eax,0x6efc18ca
  4204cb:	jmp    FWORD PTR [ebx-0x60]
  4204ce:	mov    al,ds:0xde3ea451
  4204d3:	call   0x5b82c189
  4204d8:	cmp    ah,BYTE PTR [edx+ebx*4-0x28]
  4204dc:	xchg   edx,eax
  4204dd:	retf   
  4204de:	jge    0x4204ca
  4204e0:	adc    bh,BYTE PTR [ecx+0x52]
  4204e3:	into   
  4204e4:	pop    ss
  4204e5:	pop    ebx
  4204e6:	js     0x4204e9
  4204e8:	ret    0x3887
  4204eb:	fistp  QWORD PTR [ebx+0x6]
  4204ee:	lods   al,BYTE PTR ds:[esi]
  4204ef:	fbld   TBYTE PTR [eax]
  4204f1:	out    0xac,al
  4204f3:	cmp    BYTE PTR [edi+0x1a065030],bl
  4204f9:	fcomi  st,st(5)
  4204fb:	imul   esi,DWORD PTR [edi],0xaff4ddbe
  420501:	out    0x2d,al
  420503:	mov    dl,0xa1
  420505:	ss and eax,0x41aba889
  42050b:	jecxz  0x420529
  42050d:	sti    
  42050e:	mov    esi,0xcba6f280
  420513:	and    eax,0xb29e6d94
  420518:	lods   al,BYTE PTR ds:[esi]
  420519:	inc    esi
  42051a:	mov    edx,0x16fb5d4a
  42051f:	retf   
  420520:	jmp    0xc78482e1
  420525:	xchg   BYTE PTR [ebx+0x7f58e1d5],dh
  42052b:	xor    ebx,DWORD PTR [edx+0x353aa4d6]
  420531:	add    bl,ch
  420533:	repz popf 
  420535:	xor    eax,0x901a2ac7
  42053a:	sub    DWORD PTR [ecx+eiz*8+0x23],eax
  42053e:	in     eax,dx
  42053f:	dec    esp
  420540:	mov    ebx,0x200fe97e
  420545:	jge    0x420576
  420547:	jge    0x42058b
  420549:	add    DWORD PTR [ecx+ecx*1],ebx
  42054c:	mov    ebx,0x20c5ab0a
  420551:	or     al,0xa6
  420553:	add    ebx,ebx
  420555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420556:	or     ebp,DWORD PTR [edi+0x7010bded]
  42055c:	or     eax,0xfc7245c9
  420561:	mov    ch,0x37
  420563:	jb     0x4205df
  420565:	les    edi,FWORD PTR [ebx]
  420567:	xchg   ebp,eax
  420568:	jge    0x420522
  42056a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056b:	mov    esp,DWORD PTR [eax+ebp*8]
  42056e:	addr16 inc edi
  420570:	jecxz  0x42059c
  420572:	pusha  
  420573:	pop    esi
  420574:	inc    edx
  420575:	ret    
  420576:	mov    bh,0x64
  420578:	push   esp
  420579:	in     eax,0x8b
  42057b:	ret    
  42057c:	push   ecx
  42057d:	mov    cl,0xca
  42057f:	lock sahf 
  420581:	mov    ds:0x9065d64b,eax
  420586:	ds aad 0x54
  420589:	pop    ecx
  42058a:	jmp    0x42052f
  42058c:	sbb    ah,ch
  42058e:	pop    edi
  42058f:	sub    al,0xb8
  420591:	or     BYTE PTR [ecx],dl
  420593:	cdq    
  420594:	out    0x62,eax
  420596:	scas   al,BYTE PTR es:[edi]
  420597:	ins    DWORD PTR es:[edi],dx
  420598:	std    
  420599:	shl    DWORD PTR [eax],1
  42059b:	es adc ch,al
  42059e:	test   al,0xec
  4205a0:	retf   
  4205a1:	clc    
  4205a2:	das    
  4205a3:	retf   
  4205a4:	lods   al,BYTE PTR ds:[esi]
  4205a5:	out    0x1c,al
  4205a7:	shr    edx,1
  4205a9:	pop    ecx
  4205aa:	lods   al,BYTE PTR ds:[esi]
  4205ab:	dec    ecx
  4205ac:	in     al,0x36
  4205ae:	fs inc ecx
  4205b0:	imul   ecx,DWORD PTR [ebp+0x65],0xffffffda
  4205b4:	in     eax,dx
  4205b5:	pop    ss
  4205b6:	scas   eax,DWORD PTR es:[edi]
  4205b7:	push   ds
  4205b8:	cmp    al,0xd7
  4205ba:	and    BYTE PTR [edx+eax*8+0x5d],al
  4205be:	mov    es,WORD PTR [ebp+eax*4+0x1e]
  4205c2:	iret   
  4205c3:	(bad)  
  4205c4:	push   edx
  4205c5:	adc    esi,DWORD PTR [edx+0x29bd3270]
  4205cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205cc:	jmp    0xcf1f:0x51134857
  4205d3:	fistp  QWORD PTR [ecx+0x14]
  4205d6:	mov    ?,esi
  4205d8:	outs   dx,BYTE PTR ds:[esi]
  4205d9:	pop    ebx
  4205da:	rcr    BYTE PTR [eax],cl
  4205dc:	and    al,cl
  4205de:	fisttp WORD PTR [eax]
  4205e0:	push   ds
  4205e1:	in     eax,dx
  4205e2:	cli    
  4205e3:	loop   0x420567
  4205e5:	jno    0x42059b
  4205e7:	es jmp 0xb09a7aa8
  4205ed:	xor    esp,edi
  4205ef:	dec    ebp
  4205f0:	call   0x3c6994ed
  4205f5:	xchg   esi,ecx
  4205f7:	inc    esp
  4205f8:	xor    edi,ebp
  4205fa:	cdq    
  4205fb:	cwde   
  4205fc:	sub    DWORD PTR [esi-0x41],eax
  4205ff:	loop   0x42064c
  420601:	and    DWORD PTR [edi],0x11
  420604:	std    
  420605:	cmp    DWORD PTR [edx],ebx
  420607:	not    DWORD PTR [esi-0x577d971d]
  42060d:	xchg   edx,eax
  42060e:	sti    
  42060f:	ja     0x42067c
  420611:	jne    0x420663
  420613:	xor    dl,dh
  420615:	test   al,0xe7
  420617:	inc    edx
  420618:	out    dx,eax
  420619:	(bad)  
  42061b:	stos   DWORD PTR es:[edi],eax
  42061c:	inc    esi
  42061d:	cmp    eax,0x61431f49
  420622:	sahf   
  420623:	es loopne 0x42069a
  420626:	mov    al,ds:0x70a5a4e0
  42062b:	xor    ch,BYTE PTR [ebp+edx*8-0xd]
  42062f:	mov    esp,0xb774e336
  420634:	mov    BYTE PTR [eax+0x8],0xe8
  420638:	arpl   WORD PTR [ebp-0x4c],bx
  42063b:	aas    
  42063c:	xchg   edi,eax
  42063d:	fimul  WORD PTR [edi-0x572c7678]
  420643:	sub    al,0x20
  420645:	dec    edi
  420646:	das    
  420647:	stos   BYTE PTR es:[edi],al
  420648:	inc    ecx
  420649:	fcmovne st,st(4)
  42064b:	jo     0x420619
  42064d:	mov    ds:0x5041d507,al
  420652:	iret   
  420653:	sub    eax,0x441f4698
  420658:	aaa    
  420659:	and    al,BYTE PTR [edi]
  42065b:	shr    DWORD PTR [edi+0x4d],0x8e
  42065f:	clc    
  420660:	dec    eax
  420661:	data16 aaa 
  420663:	scas   eax,DWORD PTR es:[edi]
  420664:	jns    0x4206ce
  420666:	push   eax
  420667:	mov    ebx,0x6787c8f0
  42066c:	adc    eax,0xc207b2b3
  420671:	pusha  
  420672:	mov    BYTE PTR [ebx],0xb9
  420675:	dec    ebx
  420676:	push   0xffffffdb
  420678:	idiv   BYTE PTR [ecx-0x64]
  42067b:	mov    esi,0xfb538741
  420680:	rcr    DWORD PTR [ecx-0x1fd54167],1
  420686:	and    BYTE PTR [ebp-0xe6a2302],ch
  42068c:	push   ecx
  42068d:	pop    esi
  42068e:	imul   ecx,ebp,0xca6bf691
  420694:	ins    DWORD PTR es:[edi],dx
  420695:	repz sti 
  420697:	test   eax,0xda90
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82c6:0xf09a2190
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   BYTE PTR [edx],al
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	test   DWORD PTR [ebx+0x6],esp
  4206b7:	leave  
  4206b8:	xor    dl,0x35
  4206bb:	test   DWORD PTR [eax+ecx*8-0x10],eax
  4206bf:	inc    ecx
  4206c0:	(bad)  
  4206c1:	mov    ds:0xccc818fd,al
  4206c6:	dec    ebx
  4206c7:	jns    0x420652
  4206c9:	add    DWORD PTR ds:0xb4cd6b39,edi
  4206cf:	sub    eax,0x16a5adc2
  4206d4:	push   esi
  4206d5:	jmp    FWORD PTR [ecx+0x50]
  4206d8:	inc    di
  4206da:	xchg   esp,eax
  4206db:	pop    ebp
  4206dc:	adc    bl,cl
  4206de:	sbb    ch,bh
  4206e0:	jp     0x420700
  4206e2:	shl    esp,1
  4206e4:	mov    esp,0x9ff057c5
  4206e9:	or     bh,bh
  4206eb:	xor    cl,BYTE PTR [ebp-0x7fd3f8e8]
  4206f1:	call   0xf51ecf9f
  4206f6:	and    BYTE PTR [edi+0x2ec05fce],dh
  4206fc:	xchg   ebp,eax
  4206fd:	mov    dh,0xe
  4206ff:	and    ah,al
  420701:	jl     0x420726
  420703:	push   esi
  420704:	frstor cs:[edi-0x4416b0d6]
  42070b:	cld    
  42070c:	rcr    BYTE PTR [edx-0x57],cl
  42070f:	push   edi
  420710:	or     al,0x5d
  420712:	jnp    0x420757
  420714:	mov    edi,0x6d1ca3e9
  420719:	jmp    0x7311:0xf8bb8e68
  420720:	(bad)  [ebx+eiz*8+0x25]
  420724:	nop    DWORD PTR [eax]
  420727:	cmp    eax,0x7e68be58
  42072c:	inc    ebp
  42072d:	dec    esp
  42072e:	popa   
  42072f:	xor    cl,BYTE PTR [edi]
  420731:	dec    eax
  420732:	js     0x4206f6
  420734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420735:	push   esp
  420736:	mov    ah,0xdc
  420738:	adc    bh,cl
  42073a:	pop    esp
  42073b:	inc    DWORD PTR [eax+0x6]
  42073e:	ins    BYTE PTR es:[edi],dx
  42073f:	inc    edi
  420740:	enter  0x7a8a,0x12
  420744:	xchg   edi,eax
  420745:	sbb    ebp,DWORD PTR [ecx+esi*1-0x69a9eb5d]
  42074c:	add    bh,bh
  42074e:	fist   DWORD PTR [edi+eax*8-0x77]
  420752:	shl    BYTE PTR [eax+0x4c656942],0x47
  420759:	fld    QWORD PTR [ebx+0x70778ccd]
  42075f:	jns    0x4207a8
  420761:	popf   
  420762:	aam    0xf2
  420764:	dec    esp
  420765:	dec    esi
  420766:	cmp    dh,0x5c
  420769:	dec    eax
  42076a:	test   DWORD PTR [ebp-0x798cafbe],edx
  420770:	mov    edi,0x191f7368
  420775:	test   BYTE PTR [ecx+0x1e],dl
  420778:	adc    ah,BYTE PTR [edi+0x6155d244]
  42077e:	mov    edx,0x420610c1
  420783:	push   cs
  420784:	hlt    
  420785:	inc    eax
  420786:	loope  0x420710
  420788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420789:	outs   dx,BYTE PTR ds:[esi]
  42078a:	xchg   esi,eax
  42078b:	aad    0x72
  42078d:	sub    al,0xf2
  42078f:	aaa    
  420790:	call   0xd085:0x3a91d24f
  420797:	pusha  
  420798:	leave  
  420799:	or     BYTE PTR [ebx+0x5d],ch
  42079c:	pop    esp
  42079d:	pop    eax
  42079e:	repz pop esi
  4207a0:	and    BYTE PTR [ebx+0x6d],dh
  4207a3:	sub    DWORD PTR [ebx-0x69],edx
  4207a6:	stos   DWORD PTR es:[edi],eax
  4207a7:	xor    esp,DWORD PTR ds:[eax+ebp*8]
  4207ab:	dec    edi
  4207ac:	sub    BYTE PTR [edi+0x6846ce92],0x72
  4207b3:	push   ebx
  4207b4:	loop   0x4207ca
  4207b6:	jb     0x420800
  4207b8:	jecxz  0x42079d
  4207ba:	sahf   
  4207bb:	xor    eax,0x1af379f5
  4207c0:	(bad)  
  4207c1:	jmp    0x792f9e54
  4207c6:	cmp    dh,BYTE PTR [ebx+0x7c]
  4207c9:	jmp    0x9750:0xece4381f
  4207d0:	sbb    DWORD PTR [edi-0x7c16e163],eax
  4207d6:	test   cl,bh
  4207d8:	in     al,0x3e
  4207da:	add    al,0x38
  4207dc:	mov    ch,0xec
  4207de:	pop    eax
  4207df:	push   ds
  4207e0:	add    al,0xd2
  4207e2:	mov    ds:0x930db1a2,eax
  4207e7:	mov    fs,WORD PTR [edx+0x5549a7f8]
  4207ed:	cli    
  4207ee:	adc    ebx,edi
  4207f0:	mov    ds:0x2dc61121,eax
  4207f5:	jne    0x4207ff
  4207f7:	pushf  
  4207f8:	or     DWORD PTR [edi-0x1a],ebx
  4207fb:	das    
  4207fc:	pop    eax
  4207fd:	call   DWORD PTR [esi]
  4207ff:	adc    DWORD PTR [eax-0xa],edx
  420802:	adc    al,bh
  420804:	(bad)  
  420805:	clc    
  420806:	mov    ecx,0xd1a1ce11
  42080b:	daa    
  42080c:	add    DWORD PTR [esi-0x4d781607],edx
  420812:	cmp    eax,0x805a0fb3
  420817:	dec    ebp
  420818:	jnp    0x42084b
  42081a:	dec    edx
  42081b:	fwait
  42081c:	loope  0x4207b0
  42081e:	ror    BYTE PTR [edi-0x7ac2a367],0xd
  420825:	call   0x6056:0xa4c57306
  42082c:	lds    ecx,FWORD PTR ds:0x11616fad
  420832:	mov    WORD PTR [edi],ss
  420834:	outs   dx,DWORD PTR ds:[esi]
  420835:	inc    ecx
  420836:	(bad)  
  420838:	adc    BYTE PTR [eax],ah
  42083a:	ret    0x5246
  42083d:	fst    DWORD PTR [esi]
  42083f:	and    BYTE PTR [eax],dl
  420841:	add    ah,BYTE PTR [eax]
  420843:	jno    0x420811
  420845:	pusha  
  420846:	inc    esi
  420847:	clc    
  420848:	lock add dl,bl
  42084b:	xchg   BYTE PTR [esp+edx*2+0xbb2f5eb],ch
  420852:	lds    ebx,FWORD PTR [ecx+0x737585d6]
  420858:	ds ds xchg edx,eax
  42085b:	fadd   DWORD PTR [ecx-0x369dc3ea]
  420861:	pop    esp
  420862:	xor    BYTE PTR [ebx-0x15],al
  420865:	dec    BYTE PTR [ebx+edi*4]
  420868:	dec    edx
  420869:	jp     0x4207f5
  42086b:	push   ss
  42086c:	jo     0x420818
  42086e:	lahf   
  42086f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420870:	push   ss
  420871:	retf   0x665e
  420874:	push   ds
  420875:	pop    edi
  420876:	nop
  420877:	jle    0x42088e
  420879:	cmp    dh,BYTE PTR [edi+0x3aca1ddb]
  42087f:	pusha  
  420880:	mov    ebx,0x812d96e5
  420885:	or     eax,0x29bda1fe
  42088a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088b:	mov    esi,0x53cfc299
  420890:	mov    eax,ds:0x3eae4cb
  420895:	mov    eax,0xae112e6e
  42089a:	sbb    DWORD PTR [ecx+0x450bcabf],0x6b58cfd7
  4208a4:	popa   
  4208a5:	inc    esi
  4208a6:	or     cl,ah
  4208a8:	or     dl,BYTE PTR [ecx]
  4208aa:	out    dx,eax
  4208ab:	add    ebp,DWORD PTR [ebx+ebp*4-0x614ec0d5]
  4208b2:	push   eax
  4208b3:	xor    BYTE PTR [edx+0x55fccb43],cl
  4208b9:	lods   eax,DWORD PTR ds:[esi]
  4208ba:	pop    esi
  4208bc:	and    al,0x7b
  4208be:	mov    ebp,gs
  4208c0:	push   0x1aaf7aba
  4208c5:	sbb    dh,BYTE PTR [esi+0x66975697]
  4208cb:	adc    eax,0x95c8ac8d
  4208d0:	lea    esi,[edi+0x1a]
  4208d3:	(bad)  
  4208d4:	cmp    BYTE PTR [eax-0x2f],ch
  4208d7:	jnp    0x420950
  4208d9:	mov    dl,0xea
  4208db:	mov    BYTE PTR [ecx],ah
  4208dd:	rcr    ebx,1
  4208df:	push   0xffffff8f
  4208e1:	rcl    ebp,cl
  4208e3:	sub    bh,bh
  4208e5:	push   edx
  4208e6:	xchg   esi,eax
  4208e7:	call   0xe420de67
  4208ec:	ins    BYTE PTR es:[edi],dx
  4208ed:	pop    ecx
  4208ee:	xor    al,0x2b
  4208f0:	or     edi,DWORD PTR [ecx+eax*2-0x59]
  4208f4:	scas   al,BYTE PTR es:[edi]
  4208f5:	xchg   esp,eax
  4208f6:	dec    ebx
  4208f7:	adc    BYTE PTR [edi+0x3c720933],al
  4208fd:	or     al,0xcc
  4208ff:	xchg   edi,eax
  420900:	stc    
  420901:	pusha  
  420902:	(bad)  
  420904:	call   0xb6849e91
  420909:	xchg   ebp,eax
  42090a:	cmp    bl,BYTE PTR [ebx+eiz*4]
  42090d:	fimul  WORD PTR [ebp-0x7b]
  420910:	mov    ebp,0x4dba7a7a
  420915:	ins    BYTE PTR es:[edi],dx
  420916:	mov    eax,0xee3faba0
  42091b:	jmp    0x50c1:0x8a51aa82
  420922:	or     al,0xce
  420924:	pop    esi
  420925:	sbb    BYTE PTR [edx-0x6f2e3bc4],dh
  42092b:	mov    ebx,0xcf282534
  420930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420931:	sub    eax,0x8b11a4b4
  420936:	std    
  420937:	retf   0x5ca9
  42093a:	add    BYTE PTR [eax],al
  42093c:	adc    DWORD PTR [esi],ecx
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x6830fbda]
  420949:	mov    ds:0x854c5b51,eax
  42094e:	add    DWORD PTR [eax],eax
  420950:	xchg   BYTE PTR [edx],al
  420952:	add    BYTE PTR [eax],al
  420954:	outs   dx,BYTE PTR ds:[esi]
  420955:	test   edi,edx
  420957:	xchg   esi,eax
  420958:	out    dx,eax
  420959:	mov    ?,WORD PTR ds:0x58d93d5f
  42095f:	in     eax,0xa3
  420961:	sub    dl,al
  420963:	pop    ebp
  420964:	bound  ebp,QWORD PTR [eax+0x25]
  420967:	mov    eax,ds:0xafb2473b
  42096c:	fyl2x  
  42096e:	pslld  mm5,QWORD PTR [esi-0x41393e6e]
  420975:	mov    esi,0xab524ecc
  42097a:	pop    esp
  42097b:	fdiv   DWORD PTR [edi-0x6d]
  42097e:	xchg   ecx,eax
  42097f:	retf   
  420980:	test   al,0x9c
  420982:	push   0x3
  420984:	xchg   DWORD PTR [edi+0xb],edx
  420987:	pop    ss
  420988:	add    BYTE PTR [ebp-0x2729e964],0x79
  42098f:	or     eax,0x19dd4a0d
  420994:	inc    ebp
  420995:	push   es
  420996:	ins    BYTE PTR es:[edi],dx
  420997:	aas    
  420998:	lea    esp,[esi+0x73fd8915]
  42099e:	mov    al,0xe0
  4209a0:	jo     0x4209ab
  4209a2:	stos   BYTE PTR es:[edi],al
  4209a3:	dec    ebp
  4209a4:	mov    esi,0xd13f9042
  4209a9:	shrd   DWORD PTR [edx],eax,0x7a
  4209ad:	mov    bh,0xcd
  4209af:	dec    ebp
  4209b0:	shl    DWORD PTR es:[esi+edi*1],0x81
  4209b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b6:	mov    bh,0x3a
  4209b8:	and    eax,0x7fc0915d
  4209bd:	jge    0x420a32
  4209bf:	and    al,0xd4
  4209c1:	rol    esp,cl
  4209c3:	mov    ebp,DWORD PTR [ecx+0x35a79bd0]
  4209c9:	push   ecx
  4209ca:	and    DWORD PTR [ebx+0x57ff7895],0x3a
  4209d1:	std    
  4209d2:	adc    ch,BYTE PTR [ecx+0x46]
  4209d5:	mov    ch,0x31
  4209d7:	stos   DWORD PTR es:[edi],eax
  4209d8:	test   BYTE PTR [eax+0x3c1234f0],cl
  4209de:	ins    BYTE PTR es:[edi],dx
  4209df:	mov    BYTE PTR [esi+0x61],0xbd
  4209e3:	pop    ebp
  4209e4:	adc    eax,0xd108d66
  4209e9:	xchg   edx,eax
  4209ea:	cli    
  4209eb:	sub    BYTE PTR es:[eax-0x62d30c99],cl
  4209f2:	js     0x420a1f
  4209f4:	test   ebp,eax
  4209f6:	cmp    ebp,ecx
  4209f8:	out    0x17,al
  4209fa:	xor    ah,BYTE PTR [esi]
  4209fc:	xor    DWORD PTR [ebp+0x78],esi
  4209ff:	lock sub dl,dh
  420a02:	lahf   
  420a03:	add    DWORD PTR [eax+0x78],edi
  420a06:	inc    esp
  420a07:	cmp    DWORD PTR [ebx-0x78],esi
  420a0a:	adc    BYTE PTR [edx-0x64cb04c8],dh
  420a10:	inc    edx
  420a11:	cli    
  420a12:	fistp  QWORD PTR [edi+0x1f29fc83]
  420a18:	mov    BYTE PTR [esi],dh
  420a1a:	std    
  420a1b:	xor    al,0xf6
  420a1d:	fisttp QWORD PTR [ebp-0x4f]
  420a20:	aam    0xac
  420a22:	xchg   edi,eax
  420a23:	mov    esi,0xe6d54f2f
  420a28:	mov    ebx,0x74b63e1c
  420a2d:	fld    st(5)
  420a2f:	jb     0x420a25
  420a31:	mov    al,BYTE PTR [ecx+0x4b935ea8]
  420a37:	mov    ecx,DWORD PTR [ebx+ebx*4]
  420a3a:	add    BYTE PTR [edi],0x7
  420a3d:	push   0xb37f3b70
  420a42:	mov    bl,0xdf
  420a44:	fst    DWORD PTR [ebp-0x16]
  420a47:	std    
  420a48:	fisub  WORD PTR [edi]
  420a4a:	sar    BYTE PTR [esi+ebx*4],1
  420a4d:	mov    edx,0xd0f68136
  420a52:	ss std 
  420a54:	cmp    eax,0x827e2749
  420a59:	cmp    eax,DWORD PTR [ebp+0x4da28525]
  420a5f:	lods   eax,DWORD PTR ds:[esi]
  420a60:	xchg   cl,cl
  420a62:	pusha  
  420a63:	retf   
  420a64:	adc    bl,ch
  420a66:	sbb    esp,edi
  420a68:	sbb    al,0xcf
  420a6a:	stos   DWORD PTR es:[edi],eax
  420a6b:	mov    bh,0x9d
  420a6d:	inc    ebp
  420a6e:	cmc    
  420a6f:	mov    bl,0xa1
  420a71:	pop    ebx
  420a72:	rol    esi,cl
  420a74:	fucom  st(4)
  420a76:	add    BYTE PTR [esi+0x7c09cd1d],0x4d
  420a7d:	mul    BYTE PTR [ecx+0x31]
  420a80:	inc    ebx
  420a81:	inc    cx
  420a83:	dec    edx
  420a84:	mov    al,0x7c
  420a86:	aas    
  420a87:	push   0xab65977e
  420a8c:	dec    esp
  420a8d:	adc    ecx,DWORD PTR es:[ebx]
  420a90:	out    0xc5,al
  420a92:	fisub  WORD PTR [ecx-0x51831c0c]
  420a98:	(bad)  
  420a99:	outs   dx,BYTE PTR ds:[esi]
  420a9a:	sub    BYTE PTR [edi-0x6e],dl
  420a9d:	fs push 0x3e
  420aa0:	lea    edi,[eax-0x54cbbc23]
  420aa6:	sbb    dl,bh
  420aa8:	gs sub al,dh
  420aab:	mov    dl,BYTE PTR es:[ebx+0x38b839b0]
  420ab2:	or     eax,0x5389b57b
  420ab7:	jne    0x420a5d
  420ab9:	les    ebx,FWORD PTR [ecx+0x3]
  420abc:	shr    DWORD PTR [edi],cl
  420abe:	dec    esi
  420abf:	pusha  
  420ac0:	(bad)  
  420ac1:	and    DWORD PTR [edi+edi*1],ebx
  420ac4:	mov    ds:0x5dcbdb00,al
  420ac9:	push   esi
  420aca:	push   ds
  420acb:	jmp    0x1b9e:0x5aba6c5e
  420ad2:	fdivr  QWORD PTR [ebx-0x6a]
  420ad5:	ret    0x5698
  420ad8:	(bad)  [eax+edi*8]
  420adb:	and    DWORD PTR [ebx+0x37feafaf],esp
  420ae1:	and    esi,DWORD PTR [eax]
  420ae3:	mov    bh,0x8d
  420ae5:	les    ebx,FWORD PTR [esi-0x5e1e0259]
  420aeb:	push   ss
  420aec:	push   ss
  420aed:	mov    bl,0x91
  420aef:	add    al,0xf4
  420af1:	push   ecx
  420af2:	push   edx
  420af3:	out    dx,eax
  420af4:	ja     0x420aba
  420af6:	(bad)  
  420af7:	push   edx
  420af8:	sbb    BYTE PTR [ecx-0x5d],bh
  420afb:	idiv   BYTE PTR [eax+0x2932620e]
  420b01:	cmp    al,0x96
  420b03:	sub    ebp,DWORD PTR [edx+0x25deefda]
  420b09:	test   DWORD PTR [esi+0x8c79272],esi
  420b0f:	leave  
  420b10:	push   ecx
  420b11:	scas   al,BYTE PTR es:[edi]
  420b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b13:	mov    DWORD PTR ds:0xe37406a9,0x275e5f1d
  420b1d:	or     bl,BYTE PTR [eax+0x20]
  420b20:	inc    esi
  420b21:	mov    ss,WORD PTR [edx]
  420b23:	and    DWORD PTR [edx*4+0x447d9159],eax
  420b2a:	sahf   
  420b2b:	push   0x53
  420b2d:	fisttp DWORD PTR [esi]
  420b2f:	(bad)  
  420b30:	int    0x89
  420b32:	mov    edx,?
  420b34:	ret    
  420b35:	pop    ds
  420b36:	inc    ebp
  420b37:	mov    bh,0x71
  420b39:	xor    edi,edi
  420b3b:	fistp  QWORD PTR [edi+eiz*4]
  420b3e:	xchg   ebp,eax
  420b3f:	xchg   DWORD PTR [ebp-0x5e51791f],eax
  420b45:	mov    ds:0x549c4be6,eax
  420b4a:	adc    esi,DWORD PTR [eax-0x32]
  420b4d:	mov    edx,0x1d0b3301
  420b52:	fistp  QWORD PTR [eax+0x5608b5b7]
  420b58:	mov    esi,0xe3c0667b
  420b5d:	dec    eax
  420b5e:	fs cmp edi,ecx
  420b61:	cmp    al,0x24
  420b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b64:	xchg   ebx,eax
  420b65:	xlat   BYTE PTR ds:[ebx]
  420b66:	js     0x420bc7
  420b68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b69:	ret    
  420b6a:	xchg   ebx,eax
  420b6b:	ds stos BYTE PTR es:[edi],al
  420b6d:	ret    
  420b6e:	shl    BYTE PTR [edx-0x172e7f4c],0x84
  420b75:	push   ecx
  420b76:	inc    ebx
  420b77:	ss inc edx
  420b79:	ja     0x420b06
  420b7b:	fcomp  DWORD PTR [eax]
  420b7d:	ficomp DWORD PTR [ecx]
  420b7f:	daa    
  420b80:	xchg   edx,eax
  420b81:	jb     0x420b52
  420b83:	ret    0xf1bc
  420b86:	cld    
  420b87:	or     bh,BYTE PTR [edx+0x5caeb1d]
  420b8d:	icebp  
  420b8e:	jge    0x420be9
  420b90:	nop
  420b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b92:	xor    eax,DWORD PTR [edi-0x29b8e185]
  420b98:	aam    0x11
  420b9a:	adc    BYTE PTR ds:0x1fcb8053,bh
  420ba0:	sbb    esp,esi
  420ba2:	pop    esp
  420ba3:	and    DWORD PTR [ebx+ecx*1+0x4783bd3],ecx
  420baa:	clc    
  420bab:	scas   eax,DWORD PTR es:[edi]
  420bac:	push   edi
  420bad:	fsubp  st(3),st
  420baf:	mov    ebp,0x38d31080
  420bb4:	int    0xeb
  420bb6:	frstor [ebp+ecx*2+0x6f]
  420bba:	inc    esi
  420bbb:	loope  0x420b49
  420bbd:	or     BYTE PTR [edx+edi*4-0x59],dh
  420bc1:	mov    ch,0xc0
  420bc3:	nop
  420bc4:	shl    DWORD PTR [ecx-0x59],cl
  420bc7:	push   ss
  420bc8:	push   ss
  420bc9:	mov    ecx,0x711cbaf
  420bce:	dec    esp
  420bcf:	dec    eax
  420bd0:	xor    al,0xa2
  420bd2:	jmp    0xc4a4757f
  420bd7:	jge    0x420b86
  420bd9:	cld    
  420bda:	add    BYTE PTR [eax],al
  420bdc:	leave  
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fadd   st,st(5)
  420be9:	jp     0x420be3
  420beb:	fst    st(2)
  420bed:	xchg   DWORD PTR [ecx],eax
  420bef:	add    BYTE PTR [esi+0x16000002],al
  420bf5:	inc    esi
  420bf6:	xor    al,0x47
  420bf8:	sub    BYTE PTR [edi+0x7],dh
  420bfb:	stc    
  420bfc:	pop    eax
  420bfd:	out    0x62,eax
  420bff:	xchg   ecx,eax
  420c00:	imul   edx,DWORD PTR [esi+0x3e29567a],0x632c4ae1
  420c0a:	sub    ch,bl
  420c0c:	rep lods eax,DWORD PTR ds:[esi]
  420c0e:	sub    BYTE PTR [esi+edi*8+0x5d],0xd7
  420c13:	jns    0x420c65
  420c15:	(bad)  
  420c17:	fs sbb esp,ebx
  420c1a:	in     eax,dx
  420c1b:	jmp    0x6320:0xbe4829ae
  420c22:	mov    edx,DWORD PTR [edx+0x7d9591e3]
  420c28:	cwde   
  420c29:	test   BYTE PTR [ecx+0x63b78ba3],bl
  420c2f:	aam    0xb3
  420c31:	aas    
  420c32:	fidiv  DWORD PTR [ecx-0x67]
  420c35:	jno    0x420bef
  420c37:	and    BYTE PTR [ecx-0x20f3decf],al
  420c3d:	pop    eax
  420c3e:	stos   BYTE PTR es:[edi],al
  420c3f:	sub    ecx,DWORD PTR [eax]
  420c41:	jmp    0x420c60
  420c43:	mul    DWORD PTR [ebp+0x187de648]
  420c49:	test   BYTE PTR [ecx],0x6b
  420c4c:	fst    QWORD PTR [eax+0x4b]
  420c4f:	imul   eax,DWORD PTR [esi+ebp*8-0x787ff9fd],0xa2a1ab25
  420c5a:	or     eax,DWORD PTR [ebx]
  420c5c:	mov    al,ds:0x2ffbfdba
  420c61:	push   ds
  420c62:	gs jmp 0x7e0b:0x51a1546d
  420c6a:	sbb    al,0xcb
  420c6c:	xchg   BYTE PTR [edx+0x27],ah
  420c6f:	add    DWORD PTR [ecx-0x6a96ae4],ebx
  420c75:	mov    eax,0x3d54b3d4
  420c7a:	add    dh,0x2e
  420c7d:	outs   dx,BYTE PTR ds:[esi]
  420c7e:	clc    
  420c7f:	mov    bh,BYTE PTR [edi-0x135f4b4b]
  420c85:	stos   DWORD PTR es:[edi],eax
  420c86:	cli    
  420c87:	mov    edi,0xdd7a2879
  420c8c:	sub    eax,0xdf921705
  420c91:	leave  
  420c92:	dec    esp
  420c93:	outs   dx,BYTE PTR ds:[esi]
  420c94:	dec    edx
  420c95:	mov    ds:0xa0d5dadb,eax
  420c9a:	scas   al,BYTE PTR es:[edi]
  420c9b:	pusha  
  420c9c:	mov    DWORD PTR [edi-0x50],0xdcec2ab4
  420ca3:	pop    ds
  420ca4:	fwait
  420ca5:	repz jnp 0x420c3e
  420ca8:	push   ds
  420ca9:	add    al,0x29
  420cab:	push   0x610a53a2
  420cb0:	aam    0x9b
  420cb2:	pop    ebx
  420cb3:	ret    
  420cb4:	xor    DWORD PTR [edx],esi
  420cb6:	inc    edx
  420cb7:	into   
  420cb8:	fild   DWORD PTR [edi-0x73ddb03d]
  420cbe:	mov    dh,0x99
  420cc0:	pushw  ds
  420cc2:	jne    0x420c6e
  420cc4:	fwait
  420cc5:	sub    esp,edi
  420cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc8:	data16 mov al,bh
  420ccb:	mov    cl,BYTE PTR [ebx-0x1e48ceaa]
  420cd1:	sub    esp,ebp
  420cd3:	adc    ebp,esi
  420cd5:	std    
  420cd6:	and    dl,BYTE PTR [edi-0x2454f4bd]
  420cdc:	mov    ebx,0x37d5a349
  420ce1:	cs call 0xc301:0x27de1e59
  420ce9:	fistp  QWORD PTR [edx-0x80]
  420cec:	stos   DWORD PTR es:[edi],eax
  420ced:	adc    al,0xd0
  420cef:	scas   eax,DWORD PTR es:[edi]
  420cf0:	push   0x33222394
  420cf5:	adc    ebx,DWORD PTR [esi+0x32]
  420cf8:	and    BYTE PTR [ecx+0x7c86f21b],dh
  420cfe:	dec    edi
  420cff:	adc    BYTE PTR [ebx],al
  420d01:	push   cs
  420d02:	in     eax,0x56
  420d04:	rcl    BYTE PTR [ebx+0x2a7036aa],cl
  420d0a:	in     eax,0xa1
  420d0c:	mov    esp,DWORD PTR [ebp+0x2d9ad201]
  420d12:	mov    ds:0x1f2451c7,eax
  420d17:	js     0x420d77
  420d19:	ret    0x6556
  420d1c:	jg     0x420d6a
  420d1e:	push   ss
  420d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d20:	xchg   ebx,edx
  420d22:	jmp    0x14677c64
  420d27:	lock ja 0x420d93
  420d2a:	xchg   esp,eax
  420d2b:	jne    0x420d02
  420d2d:	sbb    dh,bh
  420d2f:	sbb    al,0x38
  420d31:	addr16 push ecx
  420d33:	sub    eax,0xabf4445b
  420d38:	or     al,0x0
  420d3a:	retf   
  420d3b:	cmp    al,0xdf
  420d3d:	sbb    DWORD PTR [esi+edi*2-0x3d],ebp
  420d41:	xor    ah,al
  420d43:	push   esp
  420d44:	mov    dl,0x69
  420d46:	jae    0x420dbe
  420d48:	jl     0x420dc4
  420d4a:	lock pop eax
  420d4c:	ret    0xee70
  420d4f:	push   ecx
  420d50:	ror    DWORD PTR [ebp-0x1e65f],0x52
  420d57:	adc    al,0xd1
  420d59:	lods   eax,DWORD PTR ds:[esi]
  420d5a:	retf   
  420d5b:	jns    0x420d07
  420d5d:	sub    ch,BYTE PTR fs:[ebp+0x6e]
  420d61:	jb     0x420da9
  420d63:	sub    bl,bh
  420d65:	xchg   DWORD PTR [ecx-0x47300c21],esi
  420d6b:	adc    ecx,DWORD PTR [ebp-0x49]
  420d6e:	arpl   WORD PTR [ebx+0x24b4eb11],bp
  420d74:	or     ebx,ebx
  420d76:	sahf   
  420d77:	ins    BYTE PTR es:[edi],dx
  420d78:	test   BYTE PTR [ebx-0x3e],bh
  420d7b:	mov    bl,0x19
  420d7d:	mov    esp,0x74da4a88
  420d82:	lock cmovs esp,DWORD PTR [esi+esi*2]
  420d87:	sbb    DWORD PTR [esi+0x6a599adf],edi
  420d8d:	xchg   ebx,eax
  420d8e:	and    ebp,DWORD PTR [ebp+0x7]
  420d91:	xor    DWORD PTR [edi+0x2ff748d0],ebx
  420d97:	adc    DWORD PTR [esi],edx
  420d99:	scas   eax,DWORD PTR es:[edi]
  420d9a:	mov    dh,0xb8
  420d9c:	inc    esp
  420d9d:	and    DWORD PTR [ecx+edi*8-0x25],edi
  420da1:	dec    edx
  420da2:	dec    ebp
  420da3:	mov    dh,0xd2
  420da5:	imul   edx,DWORD PTR [ecx-0x5c7310c7],0x3b
  420dac:	sti    
  420dad:	ror    DWORD PTR [esi+eiz*1-0x231329c7],0xc7
  420db5:	bound  ecx,QWORD PTR [esi]
  420db7:	pop    esp
  420db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420db9:	mov    ebp,0xf43115d2
  420dbe:	xor    esi,0xffffffbf
  420dc1:	or     DWORD PTR [ebx-0x1996afac],ecx
  420dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc8:	xor    al,0x7
  420dca:	ror    BYTE PTR [ebp+eiz*4+0x4e],cl
  420dce:	xchg   edx,eax
  420dcf:	mov    esp,0x7d019340
  420dd4:	adc    ebx,DWORD PTR [ebx-0x2da98a69]
  420dda:	jno    0x420e36
  420ddc:	lahf   
  420ddd:	sti    
  420dde:	jle    0x420e12
  420de0:	gs pop edx
  420de2:	jns    0x420d97
  420de4:	pop    ss
  420de5:	add    BYTE PTR [edi+eiz*8-0x21b40e68],0x9e
  420ded:	gs adc dl,cl
  420df0:	imul   edi,DWORD PTR [esi+0x39],0xffffffef
  420df4:	mov    dl,0x93
  420df6:	dec    esi
  420df7:	jns    0x420de3
  420df9:	lock or eax,0x276160e9
  420dff:	mov    ebx,0xefb40c92
  420e04:	dec    edi
  420e05:	mov    ch,0xc
  420e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e08:	dec    esp
  420e09:	in     al,dx
  420e0a:	or     ch,bh
  420e0c:	add    dh,BYTE PTR [edx+0x368aafc6]
  420e12:	inc    esi
  420e13:	into   
  420e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e15:	rol    bl,0xcc
  420e18:	ficomp WORD PTR ds:0x2e38ac7e
  420e1e:	push   esi
  420e1f:	adc    bh,BYTE PTR [esi-0x7f]
  420e22:	sbb    bh,cl
  420e24:	cld    
  420e25:	sbb    DWORD PTR [edi+esi*1+0x4199f7b9],0x3a
  420e2d:	add    dl,bl
  420e2f:	jnp    0x420e81
  420e31:	es test eax,0x1fdaedab
  420e37:	aaa    
  420e38:	mov    bl,0x49
  420e3a:	mov    ebp,0x12f50385
  420e3f:	stos   BYTE PTR es:[edi],al
  420e40:	inc    ebp
  420e41:	ja     0x420ea4
  420e43:	dec    edi
  420e44:	cmc    
  420e45:	cld    
  420e46:	dec    ebx
  420e47:	loope  0x420df7
  420e49:	ror    bh,cl
  420e4b:	jbe    0x420e22
  420e4d:	cmp    eax,0xd096d42d
  420e52:	xchg   ebx,eax
  420e53:	mov    esp,0xff3a617
  420e58:	out    0x6f,eax
  420e5a:	sbb    eax,DWORD PTR [edx]
  420e5c:	aam    0x47
  420e5e:	inc    eax
  420e5f:	lock dec edx
  420e61:	push   ebp
  420e62:	inc    esp
  420e63:	stc    
  420e64:	mov    ds:0x3882d63d,eax
  420e69:	sub    bl,BYTE PTR [ebx-0x32538de3]
  420e6f:	scas   al,BYTE PTR es:[edi]
  420e70:	mov    dl,0xfc
  420e72:	add    esp,ebp
  420e74:	aam    0xb0
  420e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e77:	shl    cl,0x5
  420e7a:	add    BYTE PTR [eax],al
  420e7c:	dec    eax
  420e7d:	out    dx,eax
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	jo     0x420eee
  420e8a:	aad    0x56
  420e8c:	pop    eax
  420e8d:	mov    al,BYTE PTR [ecx]
  420e8f:	add    BYTE PTR [esi+0x25000002],al
  420e95:	in     eax,dx
  420e96:	add    eax,0x52747361
  420e9b:	cli    
  420e9c:	jne    0x420f0f
  420e9e:	xchg   ebx,eax
  420e9f:	stos   BYTE PTR es:[edi],al
  420ea0:	(bad)  
  420ea2:	sbb    ch,BYTE PTR [eax]
  420ea4:	test   eax,0x3f1dd4c4
  420ea9:	les    esi,FWORD PTR [edi+0xf]
  420eac:	out    0x5,eax
  420eae:	js     0x420e9f
  420eb0:	and    ecx,0x1a
  420eb3:	lods   eax,DWORD PTR ds:[esi]
  420eb4:	or     al,0x1
  420eb6:	inc    esp
  420eb7:	and    eax,0x6a675dfc
  420ebc:	dec    esp
  420ebd:	xchg   esp,eax
  420ebe:	into   
  420ebf:	in     eax,0xe4
  420ec1:	retf   
  420ec2:	fstp   TBYTE PTR [ebx-0x5c5b174f]
  420ec8:	pop    esp
  420ec9:	jns    0x420f37
  420ecb:	pop    ecx
  420ecc:	clc    
  420ecd:	and    BYTE PTR [edi],ah
  420ecf:	add    edx,DWORD PTR [edx]
  420ed1:	inc    ecx
  420ed2:	mov    cl,0x9a
  420ed4:	pop    edx
  420ed5:	mov    edi,0x67f5a137
  420eda:	fwait
  420edb:	mov    edi,ebx
  420edd:	repz sti 
  420edf:	in     eax,dx
  420ee0:	sti    
  420ee1:	sbb    eax,DWORD PTR [ebx]
  420ee3:	mov    esp,0xf94fb9d5
  420ee8:	cmp    BYTE PTR [di-0x20],dl
  420eec:	fadd   QWORD PTR [ecx+0x55]
  420eef:	inc    edx
  420ef0:	imul   ebp,DWORD PTR [eax-0xfedddcc],0xcce2af66
  420efa:	and    al,0x11
  420efc:	xor    BYTE PTR ds:0xf61fa9a6,bh
  420f02:	leave  
  420f03:	dec    esi
  420f04:	dec    edx
  420f05:	rol    DWORD PTR [ebp+0x5e],cl
  420f08:	dec    ecx
  420f09:	add    DWORD PTR [eax],esi
  420f0b:	popa   
  420f0c:	jle    0x420edd
  420f0e:	ret    
  420f0f:	fnstsw WORD PTR [eax-0x61]
  420f12:	into   
  420f13:	mov    DWORD PTR [ebx+0x67],0x17dd8868
  420f1a:	and    eax,0xcf453cfd
  420f1f:	inc    ecx
  420f20:	inc    ebx
  420f21:	outs   dx,BYTE PTR ds:[esi]
  420f22:	pushf  
  420f23:	dec    esp
  420f24:	mov    cl,0x1b
  420f26:	adc    DWORD PTR ds:[edi],ecx
  420f29:	and    BYTE PTR [edx-0x27],ah
  420f2c:	imul   ebx,DWORD PTR [ebp-0x80],0xa9bd68a2
  420f33:	nop
  420f34:	mov    cl,0x6e
  420f36:	rcr    DWORD PTR [esi+0x6959c768],cl
  420f3c:	inc    ecx
  420f3d:	pusha  
  420f3e:	imul   edi,ebp,0xffffff9a
  420f41:	jge    0x420f7a
  420f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f44:	mov    ecx,0x4f307750
  420f49:	aad    0xd5
  420f4b:	ss dec ecx
  420f4d:	adc    dh,BYTE PTR [eax]
  420f4f:	jo     0x420ee1
  420f51:	jb     0x420fb4
  420f53:	ret    0x90b6
  420f56:	lahf   
  420f57:	mov    ebx,0xd5658be2
  420f5c:	or     al,0x75
  420f5e:	lock (bad) ds:0xa4fd6831
  420f65:	test   DWORD PTR [eax-0x1e],ebp
  420f68:	es cmp al,0xfb
  420f6b:	or     eax,0x74c94e55
  420f70:	adc    al,0xbc
  420f72:	(bad)  
  420f73:	inc    esi
  420f74:	mul    BYTE PTR [edx]
  420f76:	jg     0x420fb1
  420f78:	push   eax
  420f79:	adc    eax,0x5a795dd
  420f7e:	push   0x58
  420f80:	stos   BYTE PTR es:[edi],al
  420f81:	xlat   BYTE PTR ds:[ebx]
  420f82:	adc    edx,DWORD PTR [edx]
  420f84:	repz leave 
  420f86:	mov    dl,0xd3
  420f88:	xchg   BYTE PTR [esi],ah
  420f8a:	ret    
  420f8b:	out    0x43,eax
  420f8d:	dec    ecx
  420f8e:	mov    bl,0x32
  420f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f91:	sub    esp,DWORD PTR [edx+0x2f9fd0d0]
  420f97:	push   cs
  420f98:	jle    0x420fae
  420f9a:	xchg   ebp,eax
  420f9b:	xchg   edi,eax
  420f9c:	call   0x81cd:0xc1226065
  420fa3:	sti    
  420fa4:	int    0xfa
  420fa6:	enter  0xda68,0x55
  420faa:	outs   dx,BYTE PTR ds:[esi]
  420fab:	jl     0x420fcc
  420fad:	mov    ds:0xadaebf6,eax
  420fb2:	in     eax,0xd
  420fb4:	add    DWORD PTR [ecx],esp
  420fb6:	(bad)  [esi+eax*4]
  420fb9:	loopne 0x420f66
  420fbb:	arpl   bp,si
  420fbd:	sbb    al,0x73
  420fbf:	test   BYTE PTR [ebp+0x266607ec],bl
  420fc5:	jmp    0x420f9f
  420fc7:	fs mov bh,0xd7
  420fca:	fimul  WORD PTR [ebp+0x67]
  420fcd:	fidiv  WORD PTR [ebx+edi*2+0x1e33338e]
  420fd4:	mov    ds:0x3bdb68d1,eax
  420fd9:	mov    ebx,0x22865da7
  420fde:	push   edx
  420fdf:	retf   
  420fe0:	sbb    DWORD PTR [edi-0x45fd9760],esi
  420fe6:	jbe    0x421030
  420fe8:	and    al,0x72
  420fea:	dec    esi
  420feb:	rcl    cl,1
  420fed:	enter  0x5c2,0xed
  420ff1:	mov    al,ds:0x986b6926
  420ff6:	mov    WORD PTR [esi-0x6f],?
  420ff9:	les    edx,FWORD PTR [esi]
  420ffb:	inc    ebx
  420ffc:	rol    DWORD PTR [esi+0x3a],1
  420fff:	add    DWORD PTR [ecx+0x173ebc7b],esp
  421005:	inc    edx
  421006:	nop
  421007:	sbb    DWORD PTR [ebp+0x288b3f72],edi
  42100d:	or     bh,BYTE PTR [ecx+0x1ee196ec]
  421013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421014:	std    
  421015:	daa    
  421016:	xor    eax,0x29a95da0
  42101b:	jmp    0xf10d01f
  421020:	ss mov dh,0xe8
  421023:	mov    al,ds:0xaaed8268
  421028:	iret   
  421029:	xlat   BYTE PTR ds:[ebx]
  42102a:	(bad)  
  42102b:	aam    0x13
  42102d:	adc    eax,0x7b7a0213
  421032:	cdq    
  421033:	ret    0x1905
  421036:	(bad)  
  421037:	out    0xaf,al
  421039:	(bad)  
  42103a:	lahf   
  42103b:	ins    BYTE PTR es:[edi],dx
  42103c:	dec    ebp
  42103d:	xor    DWORD PTR [edi-0x4d],esp
  421040:	jle    0x421064
  421042:	mov    edi,0x43ab933
  421047:	dec    ebx
  421048:	loope  0x421031
  42104a:	xlat   BYTE PTR ds:[ebx]
  42104b:	sub    bh,BYTE PTR [ebx+esi*4+0x4fbe08ba]
  421052:	dec    eax
  421053:	jbe    0x42105f
  421055:	jo     0x42105b
  421057:	xchg   BYTE PTR [ebx+0x56],cl
  42105a:	out    0x19,al
  42105c:	dec    edx
  42105d:	pop    es
  42105e:	jbe    0x42109a
  421060:	out    0x2b,al
  421062:	or     eax,0xd12dc4e2
  421067:	in     al,0xcf
  421069:	sbb    al,0x98
  42106b:	pop    eax
  42106c:	xlat   BYTE PTR ds:[ebx]
  42106d:	fist   WORD PTR [eax+0x43008ce9]
  421073:	aam    0xa3
  421075:	enter  0xbd2,0xde
  421079:	mov    ds:0x51377370,eax
  42107e:	in     eax,0x22
  421080:	push   ebx
  421081:	adc    bl,BYTE PTR [eax+0x64]
  421084:	icebp  
  421085:	shr    DWORD PTR [edx],1
  421087:	repz aam 0xc4
  42108a:	loope  0x421016
  42108c:	jmp    0xd48:0xcd52f870
  421093:	fisubr WORD PTR [edx+0xb]
  421096:	aaa    
  421097:	mov    ds:0x99c986a9,eax
  42109c:	adc    al,BYTE PTR [eax+0xe451910]
  4210a2:	lods   al,BYTE PTR ds:[esi]
  4210a3:	push   0xffffffba
  4210a5:	(bad)
  4210a8:	mov    edi,0xc57c236e
  4210ad:	je     0x4210da
  4210af:	pop    ebx
  4210b0:	sbb    eax,DWORD PTR [ecx+0x46e7234b]
  4210b6:	jmp    0x4851a050
  4210bb:	cmp    ecx,DWORD PTR [eax]
  4210bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210be:	shr    BYTE PTR [edi+0x6d],1
  4210c1:	cld    
  4210c2:	sub    bh,BYTE PTR ds:0x66a03a46
  4210c8:	es ja  0x4210b7
  4210cb:	adc    ebx,esi
  4210cd:	mov    ds:0x12ebceb6,al
  4210d2:	in     al,dx
  4210d3:	js     0x4210a6
  4210d5:	jmp    0x4210b9
  4210d7:	lea    ecx,[esi+0x16ce4228]
  4210dd:	cmp    ch,BYTE PTR [edi]
  4210df:	or     dh,BYTE PTR [ebx+ecx*2+0x48a73e0c]
  4210e6:	in     eax,0xb9
  4210e8:	fld    DWORD PTR [esi-0x6a]
  4210eb:	mov    cl,0xe2
  4210ed:	cmp    dl,BYTE PTR [edi]
  4210ef:	inc    esi
  4210f0:	inc    edx
  4210f1:	push   es
  4210f2:	dec    esp
  4210f3:	jle    0x4210e9
  4210f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210f6:	mov    bh,0xfa
  4210f8:	jecxz  0x421085
  4210fa:	ss js  0x421088
  4210fd:	add    edi,DWORD PTR [ecx]
  4210ff:	adc    ebp,DWORD PTR [eax-0xe9f9d2e]
  421105:	and    bl,BYTE PTR [ebx-0x64]
  421108:	push   es
  421109:	shl    DWORD PTR [esi],1
  42110b:	cmp    ch,BYTE PTR [eax-0x75b9428]
  421111:	jo     0x4210c4
  421113:	loopne 0x421113
  421115:	mov    dl,0x79
  421117:	pop    edx
  421118:	in     eax,dx
  421119:	and    DWORD PTR [eax],eax
  42111b:	add    BYTE PTR [eax+0x5be35ae3],dh
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [ecx-0x60],edx
  42112a:	fstp   QWORD PTR [eax+0x18cde]
  421130:	xchg   BYTE PTR [edx],al
  421132:	add    BYTE PTR [eax],al
  421134:	push   ebx
  421135:	ins    BYTE PTR es:[edi],dx
  421136:	and    edi,DWORD PTR [eax+0x65]
  421139:	rol    DWORD PTR [ebp+0x31],0x47
  42113d:	fst    DWORD PTR [edi+edx*1]
  421140:	add    DWORD PTR [edi-0x32ae3c83],esp
  421146:	push   cs
  421147:	jno    0x42117a
  421149:	neg    DWORD PTR [esi+0x20c4c733]
  42114f:	cmp    DWORD PTR [edi],eax
  421151:	data16 and al,0x4b
  421154:	sub    DWORD PTR [edi],edi
  421156:	jmp    0xcaf89484
  42115b:	in     eax,dx
  42115c:	adc    bx,WORD PTR [bx+di]
  421160:	jecxz  0x4211a9
  421162:	int3   
  421163:	jl     0x4211b7
  421165:	sbb    eax,0x8d9bfd80
  42116a:	ds imul ebp,ebp,0x77
  42116e:	outs   dx,BYTE PTR ds:[esi]
  42116f:	add    DWORD PTR [eax],esp
  421171:	fnstcw WORD PTR [ecx]
  421173:	cmp    eax,0xd49ea23
  421178:	mov    ds:0xa89ddd62,al
  42117d:	and    cl,BYTE PTR [ebx]
  42117f:	mov    ch,0x4
  421181:	and    ebx,ebp
  421183:	xchg   edi,eax
  421184:	mov    ah,0x29
  421186:	pop    ss
  421187:	add    BYTE PTR [ecx+ecx*8],ch
  42118a:	mov    ch,0x47
  42118c:	out    0xc5,al
  42118e:	repnz cmp dh,cl
  421191:	iret   
  421192:	sbb    cl,BYTE PTR [ecx]
  421194:	sub    ebx,DWORD PTR [ecx-0x6c]
  421197:	out    dx,al
  421198:	test   DWORD PTR [eax+0x69],eax
  42119b:	sbb    al,0xb3
  42119d:	mov    al,0x93
  42119f:	add    bl,al
  4211a1:	adc    edx,DWORD PTR [ecx-0x4e]
  4211a4:	mov    ss,WORD PTR [ebx+0x7f0763a9]
  4211aa:	xor    eax,0x2e079458
  4211af:	cdq    
  4211b0:	call   DWORD PTR [eax-0x11]
  4211b3:	fnstcw WORD PTR [edi+0x1be7cb5d]
  4211b9:	inc    edi
  4211ba:	in     eax,dx
  4211bb:	sub    dh,BYTE PTR gs:[ebp-0x4e]
  4211bf:	xchg   BYTE PTR [ebx+edi*1+0x7032c31e],ch
  4211c6:	push   esp
  4211c7:	or     eax,0x2eee82b5
  4211cc:	adc    BYTE PTR [ebx-0x56],bh
  4211cf:	(bad)  
  4211d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d1:	mov    bl,0x27
  4211d3:	ds cld 
  4211d5:	int3   
  4211d6:	call   0xf299:0x35c347e6
  4211dd:	int3   
  4211de:	mov    ebp,DWORD PTR [eax-0x57b1c7b5]
  4211e4:	gs jno 0x4211ca
  4211e7:	xchg   edi,eax
  4211e8:	xchg   ah,ch
  4211ea:	ror    BYTE PTR [eax+0x46],0x1c
  4211ee:	std    
  4211ef:	mov    eax,ds:0xdfc803e3
  4211f4:	sbb    dl,BYTE PTR [ebx]
  4211f6:	lods   eax,DWORD PTR ds:[esi]
  4211f7:	xor    BYTE PTR [edx+ecx*8],0x39
  4211fb:	gs cld 
  4211fd:	pop    ebx
  4211fe:	pop    eax
  4211ff:	sbb    bl,al
  421201:	jge    0x421273
  421203:	push   0x9163964
  421208:	xor    BYTE PTR [edi],dl
  42120a:	nop
  42120b:	lahf   
  42120c:	mov    al,ds:0x1dfc8c95
  421211:	add    al,0xd4
  421213:	(bad)  
  421215:	mov    esp,0xf072b8fd
  42121a:	imul   esp,DWORD PTR [edx+edx*2-0x66],0x3f726da5
  421222:	mov    eax,0xa059aadb
  421227:	mov    WORD PTR [ebp+0x3fcbb04a],?
  42122d:	xor    eax,0xa0b4367e
  421232:	dec    edi
  421233:	xchg   dh,bh
  421235:	pop    ebx
  421236:	xchg   ebx,eax
  421237:	std    
  421238:	(bad)  
  421239:	and    bh,BYTE PTR [esi]
  42123b:	adc    esp,DWORD PTR [ecx-0x21c7c7f5]
  421241:	repnz stc 
  421243:	cdq    
  421244:	xor    DWORD PTR [edx-0x29],eax
  421247:	dec    esp
  421248:	into   
  421249:	sub    edi,DWORD PTR [ecx]
  42124b:	vpmovzxbw zmm7{k5}{z},ymm1
  421251:	aaa    
  421252:	out    dx,al
  421253:	ret    0xd942
  421256:	sub    cl,BYTE PTR [ebp-0x25e16909]
  42125c:	jo     0x42120c
  42125e:	call   0x84b26911
  421263:	or     eax,0xe2a214a0
  421268:	sub    eax,0x76731d53
  42126d:	or     al,0xf7
  42126f:	add    DWORD PTR [esi],0x5a
  421272:	inc    edx
  421273:	dec    ebx
  421274:	aam    0x58
  421276:	aas    
  421277:	dec    ebx
  421278:	femms  
  42127a:	sub    eax,0xafa29b5d
  42127f:	push   0x56
  421281:	push   ss
  421282:	mov    DWORD PTR [edi],edx
  421284:	sub    eax,0xb8495888
  421289:	sbb    BYTE PTR [ebp-0x4c7d952b],cl
  42128f:	out    0xc4,eax
  421291:	hlt    
  421292:	test   eax,0x2fcb2d7e
  421297:	sbb    dl,dl
  421299:	sti    
  42129a:	push   ebp
  42129b:	or     al,0xe4
  42129d:	and    al,0x2d
  42129f:	cmc    
  4212a0:	inc    edx
  4212a1:	imul   ebp,DWORD PTR [eax+0x1b17c5bd],0x6d
  4212a8:	(bad)  
  4212a9:	pop    ebp
  4212aa:	xchg   edx,esi
  4212ac:	mov    dl,BYTE PTR [ecx+0xd06e6ed]
  4212b2:	popa   
  4212b3:	in     al,0x74
  4212b5:	push   cs
  4212b6:	inc    ebp
  4212b7:	mov    ds:0xe254c7f4,al
  4212bc:	iret   
  4212bd:	adc    DWORD PTR [edi-0x27ec65c5],ecx
  4212c3:	add    eax,DWORD PTR [esi]
  4212c5:	or     al,BYTE PTR [ebp-0x14]
  4212c8:	es jmp 0x421292
  4212cb:	in     al,dx
  4212cc:	sar    DWORD PTR [ebx-0x5bdcf58f],0x72
  4212d3:	sbb    BYTE PTR [ebx+0x54c62cba],dh
  4212d9:	out    0x88,eax
  4212db:	inc    ebp
  4212dc:	out    0xdc,eax
  4212de:	test   BYTE PTR [esp+ecx*8-0x549c4708],ah
  4212e5:	test   DWORD PTR [ecx-0x73],edx
  4212e8:	xor    BYTE PTR [edx],bl
  4212ea:	adc    ch,BYTE PTR [esi]
  4212ec:	sahf   
  4212ed:	sbb    al,0xf1
  4212ef:	ret    
  4212f0:	mov    cl,0xd5
  4212f2:	outs   dx,DWORD PTR ds:[esi]
  4212f3:	xchg   esp,eax
  4212f4:	jp     0x4212a5
  4212f6:	movlps QWORD PTR [edi+0x57ba17c4],xmm6
  4212fd:	addr16 dec edi
  4212ff:	ss mov edx,0x986f065d
  421305:	mov    ch,0xc2
  421307:	mov    eax,0xc65d59d2
  42130c:	add    DWORD PTR [ebx],0xe8d18a6a
  421312:	add    DWORD PTR [ecx-0x508e0a25],ebx
  421318:	push   ebx
  421319:	dec    edi
  42131a:	enter  0x78c5,0x69
  42131e:	shr    DWORD PTR [eax+0x16684cf1],0xef
  421325:	loope  0x4212ef
  421327:	mov    ?,WORD PTR [ebp-0x7a]
  42132a:	cmp    esi,DWORD PTR [eax+0x3b]
  42132d:	dec    esi
  42132e:	mov    ch,bh
  421330:	push   ss
  421331:	pop    esi
  421332:	and    ch,BYTE PTR [ecx]
  421334:	retf   
  421335:	iret   
  421336:	mov    bl,0x48
  421338:	jecxz  0x42135f
  42133a:	scas   eax,DWORD PTR es:[edi]
  42133b:	nop
  42133c:	add    ebx,DWORD PTR ds:0xe01b1d0a
  421342:	(bad)  
  421343:	int3   
  421344:	pop    ebx
  421345:	xor    eax,DWORD PTR [ebx+ecx*4+0x2074b4dd]
  42134c:	iret   
  42134d:	es lock push ebx
  421350:	push   esi
  421351:	push   ss
  421352:	bound  edx,QWORD PTR [ebx]
  421354:	jnp    0x4212ea
  421356:	dec    esi
  421357:	test   al,0x3c
  421359:	(bad)  [ebp-0x3bedad71]
  42135f:	mov    dh,0x92
  421361:	mov    eax,DWORD PTR [eax+0x693d1906]
  421367:	fld    DWORD PTR [ebx-0x528289cd]
  42136d:	test   al,0xd5
  42136f:	mov    al,ds:0x8bbc5458
  421374:	das    
  421375:	sbb    al,0x6f
  421377:	push   edi
  421378:	push   ds
  421379:	jbe    0x421371
  42137b:	sbb    ch,BYTE PTR ds:0x665a401d
  421381:	sti    
  421382:	and    BYTE PTR [ebp+ebx*8-0x1c],0x24
  421387:	mov    WORD PTR [esp+esi*4-0x77],ss
  42138b:	out    dx,eax
  42138c:	iret   
  42138d:	xchg   edi,eax
  42138e:	and    eax,0xef96655f
  421393:	je     0x421339
  421395:	push   0xc41e6eb8
  42139a:	xlat   BYTE PTR ds:[ebx]
  42139b:	mov    WORD PTR [ebp+edx*2-0x4a5fcb2d],ds
  4213a2:	imul   ebx,DWORD PTR [eax+0x2d],0xddf28012
  4213a9:	inc    ebp
  4213aa:	sub    eax,0x7ce8b0be
  4213af:	(bad)  
  4213b0:	dec    BYTE PTR [esp+ecx*4-0x14]
  4213b4:	inc    esp
  4213b5:	aam    0xe2
  4213b7:	add    DWORD PTR [edx],esi
  4213b9:	sti    
  4213ba:	add    BYTE PTR [eax],al
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0xe0d72bd6
  4213cc:	pop    DWORD PTR fs:[ecx]
  4213cf:	add    BYTE PTR [esi+0x5b000002],al
  4213d5:	inc    eax
  4213d6:	xchg   ebp,eax
  4213d7:	jb     0x42143d
  4213d9:	jbe    0x421360
  4213db:	repz mov dl,0x4
  4213de:	pop    es
  4213df:	xchg   ebp,eax
  4213e0:	call   0x1e337a1c
  4213e5:	mov    ?,WORD PTR [ecx]
  4213e7:	mov    esp,0xb116d9cd
  4213ec:	xchg   ebx,eax
  4213ed:	sar    DWORD PTR [eax],cl
  4213ef:	dec    edi
  4213f0:	popa   
  4213f1:	and    ebp,DWORD PTR [ecx]
  4213f3:	xchg   ecx,eax
  4213f4:	jnp    0x421420
  4213f6:	inc    edi
  4213f7:	hlt    
  4213f8:	push   es
  4213f9:	mov    BYTE PTR [edx],dl
  4213fb:	jne    0x42145b
  4213fd:	mov    cl,BYTE PTR [edi-0x6edf8582]
  421403:	in     al,dx
  421404:	jns    0x421447
  421406:	iret   
  421407:	pop    es
  421408:	mov    esp,0xecab22b0
  42140d:	(bad)  
  42140e:	adc    eax,0xad805797
  421413:	jmp    0xc196d9a6
  421418:	aas    
  421419:	sti    
  42141a:	stos   BYTE PTR es:[edi],al
  42141b:	jle    0x421438
  42141d:	mov    DWORD PTR [edi+0xb],esi
  421420:	mov    WORD PTR [edx+ebx*8-0x4a1f2ec8],gs
  421427:	mov    cl,0xa6
  421429:	retf   
  42142a:	dec    ebp
  42142b:	jne    0x4213ec
  42142d:	pusha  
  42142e:	xor    BYTE PTR [ebx+ebp*1-0x4428b111],al
  421435:	mov    al,ds:0x306437f0
  42143a:	addr16 inc edi
  42143c:	pop    ss
  42143d:	fbld   TBYTE PTR [eax]
  42143f:	or     DWORD PTR [esi],edi
  421441:	mov    ah,BYTE PTR [edx-0x386cac01]
  421447:	sub    edx,ebx
  421449:	loope  0x4213df
  42144b:	or     BYTE PTR [ecx],bh
  42144d:	daa    
  42144e:	and    DWORD PTR [ebp-0x55],ebp
  421451:	or     ch,BYTE PTR [esi]
  421453:	dec    ebp
  421454:	adc    DWORD PTR [edx-0x5f1e3322],ecx
  42145a:	mov    WORD PTR [esi],gs
  42145c:	mov    edx,0x9673eb88
  421461:	push   es
  421462:	push   ecx
  421463:	adc    cl,BYTE PTR [eax-0x5a]
  421466:	aad    0xb
  421468:	lahf   
  421469:	ret    0xfb42
  42146c:	enter  0x3f1b,0xe5
  421470:	dec    ebx
  421471:	jmp    0x7defd313
  421476:	arpl   WORD PTR [edx+0x4cf8fdda],ax
  42147c:	mov    ds:0x84c1a08a,eax
  421481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421482:	mov    ebx,DWORD PTR [edx+0x1dca3712]
  421488:	outs   dx,BYTE PTR ds:[esi]
  421489:	pop    eax
  42148a:	xor    edx,DWORD PTR [esi]
  42148c:	mov    bh,0x7
  42148e:	mov    esi,0x1c93abf8
  421493:	inc    ecx
  421494:	sbb    ah,BYTE PTR [ecx+0x16]
  421497:	stc    
  421498:	imul   ebp,DWORD PTR [ebp-0xc],0xffffffea
  42149c:	ss and eax,0x9428c863
  4214a2:	ds lahf 
  4214a4:	lahf   
  4214a5:	xchg   ebx,eax
  4214a6:	mov    ecx,0x9abe106
  4214ab:	cs push cs
  4214ad:	dec    ebx
  4214ae:	hlt    
  4214af:	sbb    eax,0x73a4c778
  4214b4:	popf   
  4214b5:	shl    DWORD PTR [eax-0x3],0x6b
  4214b9:	in     al,0xd4
  4214bb:	push   edi
  4214bc:	mov    ds:0x1c961267,al
  4214c1:	dec    edx
  4214c2:	loopne 0x4214e0
  4214c4:	clc    
  4214c5:	mov    dh,0xf3
  4214c7:	xor    ebx,ebp
  4214c9:	shl    dh,0x73
  4214cc:	jb     0x42152e
  4214ce:	pop    ds
  4214cf:	sub    eax,0xbdb42e65
  4214d4:	jmp    0xed3550f8
  4214d9:	enter  0xb53c,0x2a
  4214dd:	fsub   DWORD PTR [edi+0x5479f07]
  4214e3:	dec    ebp
  4214e4:	ret    
  4214e5:	jge    0x42148c
  4214e7:	xchg   esi,eax
  4214e8:	shl    BYTE PTR [eax+0x4c28e0e7],1
  4214ee:	test   eax,0x5264ece5
  4214f3:	jg     0x421551
  4214f5:	pop    ebx
  4214f6:	cli    
  4214f7:	pop    edx
  4214f8:	adc    dh,bl
  4214fa:	or     cl,BYTE PTR [esp+edx*1+0x6e7465df]
  421501:	mov    DWORD PTR [ecx],eax
  421503:	cmp    DWORD PTR [eax],0xb9bc3328
  421509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42150a:	fistp  WORD PTR [edx+0x63691946]
  421510:	xchg   edx,eax
  421511:	sbb    DWORD PTR [edi+0x3c6da591],ebx
  421517:	mov    ch,0x65
  421519:	shl    DWORD PTR [edx],0xb2
  42151c:	popa   
  42151d:	int3   
  42151e:	pop    ds
  42151f:	imul   esi,DWORD PTR ds:0xf6878c99,0x12
  421526:	pop    ecx
  421527:	pop    eax
  421528:	bound  ebx,QWORD PTR [eax+0xa4b651c]
  42152e:	mov    DWORD PTR [ecx],edx
  421530:	xchg   edx,eax
  421531:	ins    DWORD PTR es:[edi],dx
  421532:	jb     0x4214c3
  421534:	push   es
  421535:	fdiv   DWORD PTR [edx]
  421537:	xchg   esi,eax
  421538:	stc    
  421539:	test   eax,0xe5a3c6c7
  42153e:	fadd   DWORD PTR [edi+0x540d0238]
  421544:	je     0x4214e1
  421546:	or     ch,0xb8
  421549:	jmp    0x79692c62
  42154e:	jae    0x42150d
  421550:	int3   
  421551:	xchg   edi,eax
  421552:	inc    esp
  421553:	or     eax,0xdac514b4
  421558:	pop    edi
  421559:	mov    cl,0xf3
  42155b:	daa    
  42155c:	add    BYTE PTR [edi-0x6b6013a6],bl
  421562:	sbb    al,BYTE PTR [edi+0x2]
  421565:	aas    
  421566:	ret    0x54db
  421569:	xchg   al,dh
  42156b:	jge    0x4215d8
  42156d:	mov    esi,0x1847b35
  421572:	sbb    BYTE PTR [ecx+ebx*1],bl
  421575:	adc    cl,BYTE PTR [ebx+0x3f]
  421578:	sub    BYTE PTR [ebx],bh
  42157a:	inc    eax
  42157b:	dec    eax
  42157c:	test   DWORD PTR [ebp-0x11dd335e],ebp
  421582:	fwait
  421583:	mov    edi,0xeff8faf6
  421588:	(bad)
  42158b:	stos   DWORD PTR es:[edi],eax
  42158c:	test   eax,0x7dd8e599
  421591:	mov    al,ds:0x12804bc1
  421596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421597:	stc    
  421598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421599:	mov    ecx,0xcb07c319
  42159e:	ins    BYTE PTR es:[edi],dx
  42159f:	jae    0x4215c4
  4215a1:	and    bh,BYTE PTR [ecx-0x7ab89898]
  4215a7:	nop
  4215a8:	aam    0x32
  4215aa:	xor    DWORD PTR [edx+0x27],ebx
  4215ad:	push   cs
  4215ae:	mov    esp,0xa11aea9b
  4215b3:	pop    ebp
  4215b4:	outs   dx,BYTE PTR ds:[esi]
  4215b5:	sbb    bl,BYTE PTR [ebp+0x3f]
  4215b8:	in     eax,0xfe
  4215ba:	cmp    al,0x73
  4215bc:	out    0x5,eax
  4215be:	fsub   st(3),st
  4215c0:	push   ebp
  4215c1:	fisubr DWORD PTR [ebp-0x49e893c4]
  4215c7:	xchg   DWORD PTR [ebx+0x40],edx
  4215ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215cb:	imul   esi,edx,0x35
  4215ce:	in     al,0x2d
  4215d0:	pop    ss
  4215d1:	mov    ds:0x97d676c8,eax
  4215d6:	add    BYTE PTR [esi],bl
  4215d8:	ja     0x42161e
  4215da:	mov    dh,0x83
  4215dc:	rol    DWORD PTR [esi],1
  4215de:	add    edx,DWORD PTR [ebp-0x1bc8fc7d]
  4215e4:	rol    BYTE PTR ds:0x51e7620c,cl
  4215ea:	add    dh,BYTE PTR [edi-0x57f2b82b]
  4215f0:	test   BYTE PTR [esi+0x58f13d33],0xc1
  4215f7:	sub    DWORD PTR [esi-0x10caceca],esi
  4215fd:	xchg   cx,ax
  4215ff:	pop    eax
  421600:	mov    ah,0xe7
  421602:	js     0x42167c
  421604:	inc    esi
  421605:	iret   
  421606:	jae    0x42163e
  421608:	repz inc eax
  42160a:	adc    DWORD PTR [esi+0x35],edi
  42160d:	lods   al,BYTE PTR ds:[esi]
  42160e:	pop    ds
  42160f:	int3   
  421610:	dec    edi
  421611:	cld    
  421612:	or     eax,0x81026163
  421617:	mov    ecx,0xcb419105
  42161c:	sub    al,0xe8
  42161e:	or     al,0xe5
  421620:	fwait
  421621:	call   FWORD PTR ds:0x2950fef0
  421627:	or     eax,0x2d766fdf
  42162c:	dec    ebx
  42162d:	shl    DWORD PTR [ebp+0x561905e5],cl
  421633:	push   esp
  421634:	mov    cl,ch
  421636:	mov    BYTE PTR es:[eax],al
  421639:	sbb    eax,0x553b3fca
  42163e:	adc    ebx,DWORD PTR [esi]
  421640:	jne    0x421656
  421642:	mul    BYTE PTR [ecx+0x3d]
  421645:	inc    DWORD PTR [ebx+0x7ea62cd0]
  42164b:	dec    esi
  42164c:	ret    0x53dd
  42164f:	xchg   BYTE PTR [ebx+esi*8+0x46],dl
  421653:	test   BYTE PTR [esi-0x7d4a9f3a],al
  421659:	mov    bh,0x0
  42165b:	add    cl,bh
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	push   cs
  421669:	int    0x96
  42166b:	in     eax,0xea
  42166d:	xchg   ecx,eax
  42166e:	add    DWORD PTR [eax],eax
  421670:	xchg   BYTE PTR [edx],al
  421672:	add    BYTE PTR [eax],al
  421674:	sbb    esp,DWORD PTR [ebp-0x1e]
  421677:	sbb    eax,0x688ffab0
  42167c:	dec    esi
  42167d:	repz cs addr16 ret 
  421681:	rcl    BYTE PTR [ecx+0x7d],cl
  421684:	shl    DWORD PTR [ecx+0x7d5ef9b],0x41
  42168b:	jae    0x4216df
  42168d:	add    esi,DWORD PTR [ecx-0x1a1acf4b]
  421693:	(bad)  
  421694:	in     eax,0x8e
  421696:	fidiv  WORD PTR [ebx]
  421698:	loope  0x4216df
  42169a:	cwde   
  42169b:	rcl    BYTE PTR [ecx+edx*1+0x7203f019],0x54
  4216a3:	jne    0x4216c4
  4216a5:	not    BYTE PTR [ebp+0x65d8064e]
  4216ab:	sti    
  4216ac:	out    0xb5,eax
  4216ae:	retf   
  4216af:	ss nop
  4216b1:	rol    BYTE PTR [eax-0x6202d8d3],1
  4216b7:	mov    eax,0xb26c4a6f
  4216bc:	jmp    FWORD PTR [esp+ebp*2-0xfcc13a0]
  4216c3:	cmp    eax,0x9a23b565
  4216c8:	out    dx,al
  4216c9:	push   ds
  4216ca:	or     eax,0x375f53aa
  4216cf:	pop    ds
  4216d0:	jne    0x4216d6
  4216d2:	xchg   edi,eax
  4216d3:	xchg   edi,eax
  4216d4:	and    bl,BYTE PTR [esi]
  4216d6:	xlat   BYTE PTR ds:[ebx]
  4216d7:	cmp    al,BYTE PTR [edi-0x22]
  4216da:	jbe    0x421739
  4216dc:	pop    ebx
  4216dd:	mov    eax,0xcc72a095
  4216e2:	repnz pop esp
  4216e4:	dec    edi
  4216e5:	jp     0x4216b4
  4216e7:	(bad)  
  4216e8:	rcr    BYTE PTR [edx],1
  4216ea:	retf   
  4216eb:	enter  0xcdae,0x1
  4216ef:	dec    esi
  4216f0:	test   DWORD PTR [edx-0x1b6c7ee1],ebp
  4216f6:	pop    es
  4216f7:	int3   
  4216f8:	rcr    BYTE PTR [ecx+0x3f3399],0x28
  4216ff:	pop    esp
  421700:	mov    dh,0x46
  421702:	fistp  DWORD PTR [eax+ebp*2-0x41]
  421706:	or     bl,BYTE PTR [edx]
  421708:	add    dh,BYTE PTR [esp+esi*4]
  42170b:	jnp    0x4216e6
  42170d:	adc    ch,ch
  42170f:	arpl   WORD PTR [esp+edi*2-0x6aac5943],ax
  421716:	cmp    edx,eax
  421718:	jg     0x42176d
  42171a:	mov    ebx,0xe32fdb9c
  42171f:	adc    eax,0xd595eff3
  421724:	scas   eax,DWORD PTR es:[edi]
  421725:	cwde   
  421726:	imul   esi,DWORD PTR [esi-0x2ddbb9bd],0x63
  42172d:	adc    eax,0xda39a7ad
  421732:	xor    DWORD PTR ds:0x30b97daf,ecx
  421738:	into   
  421739:	or     eax,0x460ff28c
  42173e:	jge    0x4216f1
  421740:	enter  0x8462,0x7a
  421744:	sub    eax,0x2ee4c583
  421749:	cli    
  42174a:	aam    0xc8
  42174c:	push   0x34
  42174e:	adc    ecx,DWORD PTR [edi-0x6afed99c]
  421754:	add    ch,BYTE PTR [ebx-0x40cfbea0]
  42175a:	sub    dh,BYTE PTR [ebx]
  42175c:	jmp    0xe016cf0b
  421761:	add    eax,0x39bf1e1d
  421766:	xchg   ecx,eax
  421767:	inc    ebx
  421768:	pop    ds
  421769:	idiv   DWORD PTR [ebx-0x4b2a0c21]
  42176f:	popa   
  421770:	ja     0x42174f
  421772:	or     dl,BYTE PTR [edi]
  421774:	mov    cl,0xf
  421776:	add    BYTE PTR [edx+0x614f5ad2],al
  42177c:	push   ss
  42177d:	test   dh,0x47
  421780:	sub    al,0x16
  421782:	mov    esi,0x138ad7ed
  421787:	mov    ds,ebp
  421789:	cmp    dl,cl
  42178b:	push   ss
  42178c:	xchg   ecx,eax
  42178d:	add    esi,esp
  42178f:	xchg   ecx,eax
  421790:	or     BYTE PTR [esi-0x31d8f229],ch
  421796:	fwait
  421797:	xchg   edi,eax
  421798:	loope  0x42172e
  42179a:	ficomp DWORD PTR [eax]
  42179c:	retf   0x2c6e
  42179f:	(bad)  
  4217a0:	xor    eax,0xa46489bf
  4217a5:	mov    esp,0x5f1c5197
  4217aa:	xlat   BYTE PTR ss:[ebx]
  4217ac:	dec    ecx
  4217ad:	shl    BYTE PTR [ecx],cl
  4217af:	cmp    al,0x9
  4217b1:	inc    ebx
  4217b2:	test   eax,0xbcf96d96
  4217b7:	cmc    
  4217b8:	push   es
  4217b9:	sbb    dh,BYTE PTR [edx]
  4217bb:	xchg   ebp,eax
  4217bc:	and    dh,BYTE PTR [esi-0x44d69605]
  4217c2:	or     DWORD PTR [esi],ebp
  4217c4:	adc    DWORD PTR [ebx+0x66],ecx
  4217c7:	icebp  
  4217c8:	push   ebp
  4217c9:	push   cs
  4217ca:	inc    eax
  4217cb:	adc    DWORD PTR [edx+ecx*2-0x38],0x76
  4217d0:	retf   
  4217d1:	pop    eax
  4217d2:	rcl    DWORD PTR ds:0x9a915d91,1
  4217d8:	shl    DWORD PTR [edi],0x15
  4217db:	ret    
  4217dc:	(bad)  
  4217dd:	jne    0x4217d9
  4217df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217e0:	gs jnp 0x4217d5
  4217e3:	cmp    eax,0xf3643b78
  4217e8:	dec    esi
  4217e9:	xchg   esi,eax
  4217ea:	dec    ebx
  4217eb:	xchg   ebp,eax
  4217ec:	mov    ?,WORD PTR [ebp-0x9]
  4217ef:	sahf   
  4217f0:	dec    edx
  4217f1:	(bad)  
  4217f2:	in     eax,dx
  4217f3:	add    eax,0x5759a8d6
  4217f8:	xchg   ecx,eax
  4217f9:	mov    ebp,0xb9199920
  4217fe:	push   es
  4217ff:	retf   
  421800:	and    BYTE PTR [esi-0x6dec5837],bh
  421806:	or     ebx,DWORD PTR [eax-0x56f5b787]
  42180c:	dec    eax
  42180d:	mov    edi,0xa5eb8e3c
  421812:	xchg   bl,dl
  421814:	xchg   ecx,eax
  421815:	and    DWORD PTR [edi-0x12],0x28da0fba
  42181c:	scas   al,BYTE PTR es:[edi]
  42181d:	into   
  42181e:	rol    BYTE PTR [ebx],0xcb
  421821:	push   cs
  421822:	test   al,0x17
  421824:	push   ss
  421825:	(bad)  
  421826:	sub    DWORD PTR [ecx-0x12d5d7d5],edi
  42182c:	cmp    DWORD PTR [ecx+0x55900d1c],edi
  421832:	frstor [ecx-0x628d3ce]
  421838:	mov    al,0xde
  42183a:	jmp    0x8324:0x75a53ace
  421841:	push   eax
  421842:	pop    esp
  421843:	inc    esp
  421844:	scas   eax,DWORD PTR es:[edi]
  421845:	aaa    
  421846:	xor    al,BYTE PTR [esi-0x4f]
  421849:	rol    BYTE PTR [edi-0x71],cl
  42184c:	das    
  42184d:	iret   
  42184e:	mov    WORD PTR [ecx-0x4b12a12d],cs
  421854:	jbe    0x42185c
  421856:	lods   eax,DWORD PTR ds:[esi]
  421857:	out    0x5e,al
  421859:	leave  
  42185a:	dec    esp
  42185b:	and    eax,esi
  42185d:	clc    
  42185e:	sbb    BYTE PTR [ecx-0x4e],al
  421861:	cli    
  421862:	or     ebp,DWORD PTR [ecx+0x40]
  421865:	add    edx,esp
  421867:	push   ebx
  421868:	jecxz  0x4217f3
  42186a:	and    eax,0xf4b00573
  42186f:	loopne 0x421825
  421871:	pusha  
  421872:	loop   0x421819
  421874:	(bad)  
  421875:	jb     0x42189a
  421877:	mov    dl,0x97
  421879:	add    BYTE PTR [eax+0x69],bl
  42187c:	dec    esi
  42187d:	into   
  42187e:	inc    ebp
  42187f:	clc    
  421880:	push   0xffffffc2
  421882:	jmp    0x42180e
  421884:	int    0xb2
  421886:	fneni(8087 only) 
  421888:	scas   al,BYTE PTR es:[edi]
  421889:	test   al,0xe0
  42188b:	lahf   
  42188c:	fimul  DWORD PTR [ebx+0x2777b8b0]
  421892:	(bad)  
  421893:	pop    ss
  421894:	shr    DWORD PTR [edi+0x58684532],cl
  42189a:	add    ecx,DWORD PTR [ecx-0xdebe855]
  4218a0:	add    esi,DWORD PTR [edx+0x9]
  4218a3:	mov    ecx,0xd70cf938
  4218a8:	or     al,0x32
  4218aa:	sbb    BYTE PTR [ebx],0x71
  4218ad:	jnp    0x42183d
  4218af:	loopne 0x4218ab
  4218b1:	adc    DWORD PTR cs:[edx-0x78],ebp
  4218b5:	nop
  4218b6:	pop    ds
  4218b7:	inc    esp
  4218b8:	push   eax
  4218b9:	and    dl,BYTE PTR [edi+0x11dcadf9]
  4218bf:	xor    DWORD PTR [esi],0x863643c4
  4218c5:	(bad)  
  4218c6:	arpl   WORD PTR [eax+ebx*1],di
  4218c9:	je     0x42185a
  4218cb:	mov    ds:0xcccd80ce,al
  4218d0:	cmp    eax,0xc64bacef
  4218d5:	mov    ds:0xbc449696,eax
  4218da:	cmp    ah,bl
  4218dc:	out    0xc5,eax
  4218de:	rcl    edx,cl
  4218e0:	fistp  DWORD PTR [esi+0x297e984f]
  4218e6:	and    DWORD PTR [esi-0x138118d3],edx
  4218ec:	pop    esp
  4218ed:	in     al,dx
  4218ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ef:	(bad)  
  4218f0:	mov    BYTE PTR [edx],dh
  4218f2:	inc    ebp
  4218f3:	xor    ecx,eax
  4218f5:	sub    eax,0xddff33cc
  4218fa:	add    BYTE PTR [eax],al
  4218fc:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	movd   DWORD PTR [edx-0x12],mm1
  42190b:	push   0x19470
  421910:	xchg   BYTE PTR [edx],al
  421912:	add    BYTE PTR [eax],al
  421914:	mov    esi,0x8c92c2bc
  421919:	mov    eax,0x3403acde
  42191e:	inc    edx
  42191f:	in     eax,0x97
  421921:	xchg   edx,eax
  421922:	in     al,dx
  421923:	lahf   
  421924:	ss mov ebp,0xbca38396
  42192a:	sbb    BYTE PTR [ecx],cl
  42192c:	fwait
  42192d:	mov    esi,0xe63ffd47
  421932:	mov    ebp,0x6d82b8b
  421937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421938:	(bad)  
  421939:	mov    dh,0x3
  42193b:	jg     0x42196a
  42193d:	rcr    DWORD PTR [ecx],0xa0
  421940:	cmp    eax,0x434b1581
  421945:	mov    esi,0xfa5ddce9
  42194a:	adc    DWORD PTR [esi+0x2ca427df],edi
  421950:	adc    cl,BYTE PTR [ecx+eiz*8-0x5d9174d8]
  421957:	mov    eax,0xdab26d2c
  42195c:	mov    al,ds:0x20b71733
  421961:	xchg   esi,eax
  421962:	lock arpl sp,sp
  421965:	inc    ebx
  421966:	inc    ebp
  421967:	repnz iret 
  421969:	lds    esp,FWORD PTR [edx]
  42196b:	mov    ch,0xf6
  42196d:	lea    ecx,[edx]
  42196f:	fidiv  WORD PTR [edi-0x12]
  421972:	mov    ch,0x4e
  421974:	jne    0x4219e6
  421976:	xchg   DWORD PTR [ebx+ebp*1],ebp
  421979:	(bad)  [edx-0x4]
  42197c:	fld    TBYTE PTR [esi+0x6c]
  42197f:	jmp    0x4219b3
  421981:	push   es
  421982:	sub    al,0x1e
  421984:	pop    ss
  421985:	pop    eax
  421986:	dec    esp
  421987:	pushf  
  421988:	nop
  421989:	push   esi
  42198a:	push   cs
  42198b:	mov    ebx,0x94d52cf8
  421990:	nop
  421991:	(bad)  
  421992:	fs push 0xffffffef
  421995:	push   0x29
  421997:	jnp    0x42196a
  421999:	aaa    
  42199a:	push   ecx
  42199b:	imul   ebp,ebp,0xe91d94f3
  4219a1:	retf   0xdd5b
  4219a4:	imul   ebx,ebx,0xefaba2dc
  4219aa:	aas    
  4219ab:	call   0x99c1602
  4219b0:	(bad)  [ebx-0x40]
  4219b3:	mov    ds:0x7ddd2a34,al
  4219b8:	adc    BYTE PTR [edx+0x376037d6],0x3f
  4219bf:	sbb    dl,BYTE PTR [eax+0x785afc10]
  4219c5:	gs pushf 
  4219c7:	or     ebx,DWORD PTR [eax]
  4219c9:	sub    al,0xa2
  4219cb:	adc    eax,0xa0c7d410
  4219d0:	and    ebx,0xffffffc5
  4219d3:	mov    esp,0x2fafe963
  4219d8:	cdq    
  4219d9:	rcr    ch,cl
  4219db:	retf   0xbb7f
  4219de:	fcmovbe st,st(5)
  4219e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219e1:	mov    DWORD PTR [edi+0x4d1456c8],ebx
  4219e7:	xor    BYTE PTR [esi-0x2c],bh
  4219ea:	xor    BYTE PTR [edx+0x23eb67e6],dh
  4219f0:	push   ebx
  4219f1:	xor    ah,dl
  4219f3:	inc    edx
  4219f4:	gs jg  0x421a6b
  4219f7:	cdq    
  4219f8:	retf   
  4219f9:	stos   DWORD PTR es:[edi],eax
  4219fa:	cli    
  4219fb:	cdq    
  4219fc:	scas   al,BYTE PTR es:[edi]
  4219fd:	dec    ebx
  4219fe:	out    dx,al
  4219ff:	repz push 0x717ac626
  421a05:	xchg   ebp,eax
  421a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a07:	push   0x54af60dd
  421a0c:	fidiv  WORD PTR [edx]
  421a0e:	jle    0x421a1d
  421a10:	sahf   
  421a11:	(bad)  
  421a12:	xor    DWORD PTR fs:[ecx+0x13c412a0],eax
  421a19:	pop    ss
  421a1a:	pusha  
  421a1b:	mov    edi,0x59ce1df0
  421a20:	aad    0x73
  421a22:	or     eax,0x5fc584a1
  421a27:	nop
  421a28:	pop    esp
  421a29:	xchg   esp,eax
  421a2a:	inc    ebx
  421a2b:	cdq    
  421a2c:	arpl   bx,bp
  421a2e:	jge    0x421a3d
  421a30:	outs   dx,DWORD PTR ds:[esi]
  421a31:	mov    bl,0xa6
  421a33:	test   al,0x8b
  421a35:	aam    0x4a
  421a37:	aad    0x1f
  421a39:	loopne 0x421a8f
  421a3b:	cmp    al,0xc3
  421a3d:	pop    edi
  421a3e:	mov    eax,ds:0x4f1f284a
  421a43:	int3   
  421a44:	and    DWORD PTR [ebp*4+0xabce2df],0x126a3f7f
  421a4f:	packssdw mm4,QWORD PTR [edi+0x1089c568]
  421a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a57:	sub    al,0x77
  421a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a5a:	xchg   ecx,eax
  421a5b:	push   cs
  421a5c:	out    0x9d,al
  421a5e:	jb     0x421a31
  421a60:	stos   BYTE PTR es:[edi],al
  421a61:	ret    
  421a62:	das    
  421a63:	inc    ebx
  421a64:	add    ebx,DWORD PTR [ebp+0x62134598]
  421a6a:	shr    DWORD PTR [ecx],cl
  421a6c:	inc    ebp
  421a6d:	jmp    0x421ae1
  421a6f:	lea    esi,[edi]
  421a71:	(bad)  
  421a72:	mul    BYTE PTR [esi+0x3a]
  421a75:	sbb    edi,DWORD PTR [esi-0x68]
  421a78:	outs   dx,BYTE PTR ds:[esi]
  421a79:	inc    edx
  421a7a:	xchg   ecx,eax
  421a7b:	pop    ebx
  421a7c:	xchg   esi,eax
  421a7d:	dec    eax
  421a7e:	xor    DWORD PTR [ecx],esp
  421a80:	add    al,0x37
  421a82:	scas   al,BYTE PTR es:[edi]
  421a83:	cmp    BYTE PTR [ecx-0x5856d04f],0x94
  421a8a:	mov    dl,0x5a
  421a8c:	dec    ebp
  421a8d:	fcmovnu st,st(4)
  421a8f:	cmp    BYTE PTR [ebx-0x7236316c],dh
  421a95:	cmp    BYTE PTR [edx-0x42cfa1c],cl
  421a9b:	out    dx,eax
  421a9c:	mov    dl,0xc0
  421a9e:	cwde   
  421a9f:	add    ecx,ecx
  421aa1:	mov    DWORD PTR [eax-0x62],ebx
  421aa4:	push   ebp
  421aa5:	imul   esp,DWORD PTR [edi+0x4b],0xffffffec
  421aa9:	pop    ebx
  421aaa:	mov    esi,0x5213ac97
  421aaf:	and    dl,BYTE PTR [eax-0x306b04a6]
  421ab5:	sbb    bl,BYTE PTR [edx-0x47]
  421ab8:	aad    0xfe
  421aba:	icebp  
  421abb:	fsubr  QWORD PTR [ecx]
  421abd:	jecxz  0x421b21
  421abf:	test   BYTE PTR [eax-0xa7f7e1b],0x79
  421ac6:	jmp    0x421ac9
  421ac8:	mov    BYTE PTR [edi],al
  421aca:	xchg   ebx,eax
  421acb:	add    bl,cl
  421acd:	lock test DWORD PTR [ebx+ebp*8],eax
  421ad1:	sar    BYTE PTR [ebx],1
  421ad3:	mov    bl,0x43
  421ad5:	sbb    al,0xf4
  421ad7:	mov    ch,0xf
  421ad9:	ret    0xec41
  421adc:	ret    0x3716
  421adf:	xchg   ecx,eax
  421ae0:	out    dx,al
  421ae1:	aad    0x67
  421ae3:	aad    0xea
  421ae5:	mov    ebx,0x9f52a216
  421aea:	pushf  
  421aeb:	mov    bl,0xb9
  421aed:	inc    ebp
  421aee:	cmp    BYTE PTR [eax+0x37],bh
  421af1:	inc    edx
  421af2:	adc    bl,al
  421af4:	ins    DWORD PTR es:[edi],dx
  421af5:	out    dx,eax
  421af6:	leave  
  421af7:	push   0x2e
  421af9:	jl     0x421b44
  421afb:	sbb    al,0xc9
  421afd:	retf   
  421afe:	(bad)  
  421aff:	xchg   esp,eax
  421b00:	es mov edi,0x5be3262e
  421b06:	jns    0x421b27
  421b08:	mov    ebx,esp
  421b0a:	pop    ss
  421b0b:	aad    0xae
  421b0d:	xlat   BYTE PTR ds:[ebx]
  421b0e:	sar    BYTE PTR [ecx-0x1a1ec64a],1
  421b14:	push   0xb8b99fe9
  421b19:	(bad)  
  421b1a:	out    0x88,eax
  421b1c:	pop    edi
  421b1d:	out    0xc2,eax
  421b1f:	jmp    0x8ee75eb0
  421b24:	pop    esi
  421b25:	in     al,dx
  421b26:	push   cs
  421b27:	adc    dl,BYTE PTR [edx-0x3bffd480]
  421b2d:	pop    edx
  421b2e:	mov    ds:0xcd6262d6,eax
  421b33:	dec    edx
  421b34:	inc    eax
  421b35:	repnz xchg ecx,eax
  421b37:	fbstp  TBYTE PTR [eax]
  421b39:	mov    al,0x36
  421b3b:	clc    
  421b3c:	(bad)  
  421b3d:	xchg   edx,eax
  421b3e:	cmc    
  421b3f:	int3   
  421b40:	push   edi
  421b41:	aaa    
  421b42:	sbb    DWORD PTR [esi+ebp*8-0x729bf704],edx
  421b49:	add    DWORD PTR [edi+0xb],ebp
  421b4c:	ins    BYTE PTR es:[edi],dx
  421b4d:	out    0xc6,eax
  421b4f:	mov    cl,0xfe
  421b51:	or     dh,BYTE PTR [eax]
  421b53:	adc    eax,0xeec8f87c
  421b58:	mov    ?,ecx
  421b5a:	or     eax,esp
  421b5c:	xlat   BYTE PTR ds:[ebx]
  421b5d:	pop    ebp
  421b5e:	add    BYTE PTR [ebx-0x4],bl
  421b61:	out    dx,eax
  421b62:	pop    ss
  421b63:	sub    edi,ecx
  421b65:	xchg   ecx,eax
  421b66:	dec    edx
  421b67:	mov    ah,BYTE PTR [eax]
  421b69:	(bad)  
  421b6a:	hlt    
  421b6b:	mov    eax,ds:0xae7a8eb8
  421b70:	xor    dl,bh
  421b72:	jmp    0x5e54:0x53a04008
  421b79:	lock and al,BYTE PTR [eax+ebp*4-0x5c]
  421b7e:	xchg   esp,eax
  421b7f:	lea    eax,[edx+0x322fd7a8]
  421b85:	cli    
  421b86:	in     eax,dx
  421b87:	retf   0x2b9
  421b8a:	mov    ebp,0x75cfe0be
  421b8f:	fld    QWORD PTR [ecx-0x925ee41]
  421b95:	adc    dh,BYTE PTR [edx+0xf681ff]
  421b9b:	add    BYTE PTR [ebx+0x41],al
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [ecx-0x60],bl
  421baa:	or     BYTE PTR [ecx-0xa],dl
  421bad:	xchg   esi,eax
  421bae:	add    DWORD PTR [eax],eax
  421bb0:	xchg   BYTE PTR [edx],al
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	push   0xffffffe1
  421bb6:	and    al,0x6a
  421bb8:	add    DWORD PTR ds:[eax+0x1abdc3fd],0xc1380ba0
  421bc3:	aas    
  421bc4:	or     edi,DWORD PTR ds:[edx+0x3]
  421bc8:	sti    
  421bc9:	loope  0x421b85
  421bcb:	call   0x60f45f9b
  421bd0:	push   0x6d
  421bd2:	add    al,0x46
  421bd4:	test   eax,0x6836d187
  421bd9:	xor    eax,0x4d0e2e63
  421bde:	stc    
  421bdf:	sbb    al,0x54
  421be1:	sar    BYTE PTR [ebx-0x7c],0x5e
  421be5:	xor    eax,0x2dbe5b12
  421bea:	js     0x421c1e
  421bec:	ds or  eax,0xb70bf253
  421bf2:	push   cs
  421bf3:	int3   
  421bf4:	push   ebp
  421bf5:	ins    BYTE PTR es:[edi],dx
  421bf6:	cmp    DWORD PTR [eax],0x37
  421bf9:	out    dx,eax
  421bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bfb:	jge    0x421c0f
  421bfd:	das    
  421bfe:	push   es
  421bff:	mov    fs,esi
  421c01:	xchg   edx,eax
  421c02:	xor    eax,ebp
  421c04:	shr    BYTE PTR [esi],0x44
  421c07:	rol    DWORD PTR [edi],0x40
  421c0a:	mov    al,0x53
  421c0c:	arpl   WORD PTR ds:0x5d643163,bx
  421c12:	paddsb mm5,mm2
  421c15:	pop    esp
  421c16:	mov    esi,0xad95b0e6
  421c1b:	mov    ds:0x7581e95d,al
  421c20:	mov    ebp,0x718f9322
  421c25:	cmp    eax,DWORD PTR [esi+0x7d]
  421c28:	mov    al,ds:0x3e88f5c5
  421c2d:	lock jl 0x421c07
  421c30:	add    eax,0x619fd76d
  421c35:	mov    bl,0x3e
  421c37:	fsubr  QWORD PTR [edi]
  421c39:	scas   al,BYTE PTR es:[edi]
  421c3a:	jl     0x421c8d
  421c3c:	jle    0x421c75
  421c3e:	fistp  QWORD PTR [ebp+0x5d]
  421c41:	xor    bl,BYTE PTR [eax]
  421c43:	jno    0x421c96
  421c45:	jbe    0x421bdc
  421c47:	in     eax,0x29
  421c49:	mov    BYTE PTR [edi+0x58554190],bh
  421c4f:	sub    cl,BYTE PTR [ebp+0x40]
  421c52:	or     al,0x16
  421c54:	dec    edi
  421c55:	loop   0x421cd1
  421c57:	push   ebx
  421c58:	inc    edi
  421c59:	pushf  
  421c5a:	mov    bh,0x9b
  421c5c:	xchg   edi,eax
  421c5d:	aaa    
  421c5e:	jle    0x421cb4
  421c60:	mov    cl,0x1e
  421c62:	xor    BYTE PTR [ebx-0x3e7fe4cc],0x4c
  421c69:	push   edi
  421c6a:	repz xor al,0xa6
  421c6d:	add    BYTE PTR [ebx-0x317d48a5],0x94
  421c74:	lahf   
  421c75:	jmp    0x36f3:0x2bf561ff
  421c7c:	mov    edx,0xd10223fe
  421c81:	popa   
  421c82:	lods   eax,DWORD PTR ds:[esi]
  421c83:	scas   eax,DWORD PTR es:[edi]
  421c84:	(bad)  
  421c85:	fisub  DWORD PTR [eax+0x13]
  421c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c89:	je     0x421c35
  421c8b:	cmp    dl,ah
  421c8d:	xchg   edi,eax
  421c8e:	call   0xed9c5d30
  421c93:	scas   al,BYTE PTR es:[edi]
  421c94:	mov    dl,0xdf
  421c96:	fdivr  QWORD PTR [ebx+0x29]
  421c99:	jle    0x421c2e
  421c9b:	data16 cld 
  421c9d:	pop    esp
  421c9e:	and    BYTE PTR [ecx],bl
  421ca0:	push   ds
  421ca1:	stos   DWORD PTR es:[edi],eax
  421ca2:	add    al,0x46
  421ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ca5:	into   
  421ca6:	clc    
  421ca7:	cmp    edi,DWORD PTR [edi+0x5bc3cecb]
  421cad:	jnp    0x421ca7
  421caf:	dec    edx
  421cb0:	jnp    0x421cd5
  421cb2:	(bad)  
  421cb3:	and    ebp,DWORD PTR [ecx]
  421cb5:	pop    ds
  421cb6:	popa   
  421cb7:	inc    ebp
  421cb8:	ins    BYTE PTR es:[edi],dx
  421cb9:	xor    BYTE PTR [esi],ah
  421cbb:	fild   QWORD PTR [edx]
  421cbd:	dec    eax
  421cbe:	sub    bh,cl
  421cc0:	xor    BYTE PTR [edi+0x7bc67e53],bh
  421cc6:	sub    ecx,DWORD PTR [ebx+eiz*4-0x37045420]
  421ccd:	mov    eax,0x56a0496f
  421cd2:	scas   eax,DWORD PTR es:[edi]
  421cd3:	fcom   DWORD PTR [edx+0x17d95ac4]
  421cd9:	push   cs
  421cda:	xor    al,0x82
  421cdc:	pop    esp
  421cdd:	gs lahf 
  421cdf:	leave  
  421ce0:	cwde   
  421ce1:	push   ss
  421ce2:	push   es
  421ce3:	push   edi
  421ce4:	stos   DWORD PTR es:[edi],eax
  421ce5:	frstor [edi]
  421ce7:	sub    ebx,DWORD PTR [ebp+0x2bb5f477]
  421ced:	outs   dx,DWORD PTR ds:[esi]
  421cee:	xor    BYTE PTR [ecx-0x4521f1ba],ch
  421cf4:	sub    ecx,esi
  421cf6:	stos   DWORD PTR es:[edi],eax
  421cf7:	sbb    eax,0xe9c002a5
  421cfc:	add    DWORD PTR [ecx-0x51],esp
  421cff:	iret   
  421d00:	lahf   
  421d01:	std    
  421d02:	popf   
  421d03:	mov    ecx,0x5cc6f633
  421d08:	jb     0x421cbf
  421d0a:	mov    al,0x6c
  421d0c:	ins    BYTE PTR es:[edi],dx
  421d0d:	jl     0x421d72
  421d0f:	inc    ecx
  421d10:	or     al,0x25
  421d12:	cli    
  421d13:	sbb    BYTE PTR [edi],cl
  421d15:	mov    cl,0xc8
  421d17:	aam    0xc
  421d19:	jnp    0x421d3e
  421d1b:	das    
  421d1c:	mov    BYTE PTR [ecx],bh
  421d1e:	pop    esp
  421d1f:	rcl    BYTE PTR [eax],cl
  421d21:	add    eax,0xf95d6932
  421d26:	xchg   edx,eax
  421d27:	or     al,0xa4
  421d29:	dec    ebx
  421d2a:	inc    ecx
  421d2b:	mov    esp,0xb29794e3
  421d30:	mov    edx,0x1d433731
  421d35:	test   al,0xa8
  421d37:	loop   0x421d6f
  421d39:	outs   dx,DWORD PTR ds:[esi]
  421d3a:	push   ds
  421d3b:	out    0x31,al
  421d3d:	in     eax,dx
  421d3e:	ins    DWORD PTR es:[edi],dx
  421d3f:	push   cs
  421d40:	mov    esp,eax
  421d42:	push   ebp
  421d43:	mov    ebp,0x28bedf15
  421d48:	add    BYTE PTR [ebp+0x1117cc6d],dh
  421d4e:	je     0x421d91
  421d50:	inc    esi
  421d51:	ds clc 
  421d53:	es xchg esi,esi
  421d56:	enter  0x762a,0xf7
  421d5a:	adc    eax,0xb9cbb99d
  421d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d60:	mov    esi,DWORD PTR [edi]
  421d62:	mov    esp,DWORD PTR [edx]
  421d64:	repnz lds ebx,FWORD PTR [edi+0x13]
  421d68:	sbb    al,0x7e
  421d6a:	xor    eax,0xd3aac18e
  421d6f:	and    al,0xbd
  421d71:	sbb    esi,DWORD PTR [esi+0x63]
  421d74:	dec    esi
  421d75:	and    DWORD PTR [ecx+0x9],eax
  421d78:	pop    edi
  421d79:	ja     0x421de3
  421d7b:	sub    DWORD PTR [edi+eax*1],esp
  421d7e:	in     eax,0xec
  421d80:	dec    ecx
  421d81:	mov    eax,ds:0x89134138
  421d86:	repnz out 0xd3,eax
  421d89:	and    DWORD PTR [ebx-0x10f12e4],ecx
  421d8f:	adc    esi,DWORD PTR [eax-0x25f5ff4e]
  421d95:	sub    ch,dl
  421d97:	dec    esi
  421d98:	dec    ebx
  421d99:	or     ecx,DWORD PTR [ecx]
  421d9b:	cmovs  edx,esi
  421d9e:	xchg   esi,eax
  421d9f:	mov    BYTE PTR [ebp-0x1f177ced],dh
  421da5:	inc    eax
  421da6:	jb     0x421d9f
  421da8:	sub    DWORD PTR [ecx+ecx*2-0x14],ebp
  421dac:	push   edi
  421dad:	sbb    eax,0x57586d7a
  421db2:	sti    
  421db3:	cwde   
  421db4:	sbb    BYTE PTR [esi+0x6],ch
  421db7:	cli    
  421db8:	test   BYTE PTR [ecx],dl
  421dba:	dec    eax
  421dbb:	ss push edi
  421dbd:	adc    dl,0xcb
  421dc0:	outs   dx,DWORD PTR ds:[esi]
  421dc1:	push   0x5e
  421dc3:	and    al,0xef
  421dc5:	out    dx,eax
  421dc6:	loopne 0x421e46
  421dc8:	pop    edx
  421dc9:	mov    eax,edi
  421dcb:	shld   esp,esi,cl
  421dce:	push   ss
  421dcf:	repnz mov ds:0x97d35ab5,eax
  421dd5:	clc    
  421dd6:	mov    edi,0x1f3c480
  421ddb:	jne    0x421dd4
  421ddd:	mov    ebp,edx
  421ddf:	addr16 inc edx
  421de1:	dec    ebp
  421de2:	inc    ebx
  421de3:	mov    bh,0xc8
  421de5:	jge    0x421dd7
  421de7:	js     0x421dfd
  421de9:	adc    al,ah
  421deb:	cmp    DWORD PTR [ebx+0x56],edx
  421dee:	mov    eax,ds:0x505d1364
  421df3:	mov    bh,0x28
  421df5:	cdq    
  421df6:	cmp    eax,0xbf997b86
  421dfb:	mov    ebp,0x9dc8af5b
  421e00:	pop    esp
  421e01:	imul   ebp,DWORD PTR [ecx],0x3bf340df
  421e07:	out    dx,eax
  421e08:	and    DWORD PTR [eax-0x5ef876a2],eax
  421e0e:	je     0x421e44
  421e10:	pop    edi
  421e11:	sbb    eax,0xb979073f
  421e16:	add    al,0xb9
  421e18:	lods   al,BYTE PTR ds:[esi]
  421e19:	xchg   ebp,eax
  421e1a:	adc    BYTE PTR [edi],dl
  421e1c:	int    0xce
  421e1e:	add    al,0x5a
  421e20:	adc    ah,BYTE PTR [eax-0x29]
  421e23:	mul    DWORD PTR [ebp+0x6c28314d]
  421e29:	pop    ss
  421e2a:	push   es
  421e2b:	fadd   QWORD PTR [eax+0x6e]
  421e2e:	jnp    0x421dbb
  421e30:	fld    TBYTE PTR [eax-0x4365d207]
  421e36:	sbb    eax,0x68d1c5
  421e3b:	add    BYTE PTR [ebx-0xce42c16],cl
  421e41:	cmp    ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421e43
  421e49:	cmp    BYTE PTR [ecx],al
  421e4b:	out    dx,eax
  421e4c:	jl     0x421de7
  421e4e:	add    DWORD PTR [eax],eax
  421e50:	xchg   BYTE PTR [edx],al
  421e52:	add    BYTE PTR [eax],al
  421e54:	in     al,0xee
  421e56:	mov    bh,0x6e
  421e58:	mov    esi,0xc827ed20
  421e5d:	or     BYTE PTR [eax],al
  421e5f:	cmc    
  421e60:	in     al,dx
  421e61:	mov    cl,0x9
  421e63:	inc    esi
  421e64:	sbb    bh,BYTE PTR [ebp+0x67]
  421e67:	xchg   edx,eax
  421e68:	adc    dl,BYTE PTR [ebx-0x4b]
  421e6b:	(bad)  
  421e6c:	mov    eax,ds:0x2446620e
  421e71:	fldcw  WORD PTR [edi]
  421e73:	or     dl,BYTE PTR [edx+0x4949a1b3]
  421e79:	xchg   BYTE PTR [ecx-0x22],cl
  421e7c:	inc    edi
  421e7d:	or     ebp,DWORD PTR [ebx+0x7b3e8841]
  421e83:	sub    cl,BYTE PTR ds:0x80104098
  421e89:	clc    
  421e8a:	pusha  
  421e8b:	xchg   BYTE PTR [ebp+0x67],al
  421e8e:	mov    bh,0x5c
  421e90:	or     eax,0xf2af7243
  421e95:	scas   eax,DWORD PTR es:[edi]
  421e96:	sub    BYTE PTR [edi+0x6f4f1510],0xa
  421e9d:	push   0x68
  421e9f:	lock mov esi,eax
  421ea2:	stos   DWORD PTR es:[edi],eax
  421ea3:	add    eax,0x4caaec2e
  421ea8:	imul   ecx,esi,0xe4b78bce
  421eae:	dec    esp
  421eaf:	shr    DWORD PTR [ecx+edx*4],0x4b
  421eb3:	cmp    al,0xc9
  421eb5:	or     cl,BYTE PTR [ebp*1+0x59daad3f]
  421ebc:	test   BYTE PTR [ebx],0x6c
  421ebf:	add    al,0x89
  421ec1:	sub    eax,0x773777c6
  421ec6:	sub    DWORD PTR [edi+esi*8-0x241aea93],ebp
  421ecd:	jo     0x421e5e
  421ecf:	mov    esi,0xe6db84a5
  421ed4:	jle    0x421eeb
  421ed6:	sub    edx,ebp
  421ed8:	cmp    ecx,esi
  421eda:	or     eax,0xdebfbb97
  421edf:	and    al,0xdc
  421ee1:	and    edx,DWORD PTR [edi+0x72cca250]
  421ee7:	ret    0xfc85
  421eea:	cmp    BYTE PTR [eax+edx*1],dl
  421eed:	scas   al,BYTE PTR es:[edi]
  421eee:	shl    BYTE PTR [esi+0x18c40556],0x2d
  421ef5:	xchg   edi,eax
  421ef6:	out    0xfc,al
  421ef8:	outs   dx,BYTE PTR ds:[esi]
  421ef9:	sbb    eax,0xb3ad528f
  421efe:	fst    QWORD PTR [edx-0x50162ed2]
  421f04:	loop   0x421f74
  421f06:	out    dx,eax
  421f07:	fwait
  421f08:	mov    ebx,0x869f9138
  421f0d:	or     ecx,esi
  421f0f:	jb     0x421ed0
  421f11:	mov    al,ds:0xb3533c02
  421f16:	pop    eax
  421f17:	inc    edi
  421f18:	add    al,0xca
  421f1b:	dec    esi
  421f1c:	xor    al,0x84
  421f1e:	ret    
  421f1f:	adc    BYTE PTR [edx],bl
  421f21:	mov    al,ds:0x2d1dfee2
  421f26:	or     ebp,DWORD PTR [ebp+0x130fe19d]
  421f2c:	stos   DWORD PTR es:[edi],eax
  421f2d:	(bad)  
  421f2e:	mov    ecx,0x6aa25e9d
  421f33:	lock pop es
  421f35:	and    al,0xc6
  421f37:	and    bh,bl
  421f39:	aas    
  421f3a:	fstp   DWORD PTR [ebx]
  421f3c:	(bad)  
  421f3d:	adc    BYTE PTR [ebx+0x52],ch
  421f40:	bound  ecx,QWORD PTR [eax-0x14563f10]
  421f46:	sub    esi,DWORD PTR [esi+0xae2fb4b]
  421f4c:	bound  ebp,QWORD PTR [edx]
  421f4e:	test   DWORD PTR [ebx-0x58],ebx
  421f51:	call   0xf15b:0xd83ad4f9
  421f58:	xlat   BYTE PTR ds:[ebx]
  421f59:	das    
  421f5a:	adc    al,al
  421f5c:	(bad)  
  421f5d:	(bad)  
  421f5e:	div    DWORD PTR [ebx]
  421f60:	out    0x53,eax
  421f62:	and    eax,0x448fa18d
  421f67:	xchg   DWORD PTR [edx+0x23],esi
  421f6a:	mov    ?,ebx
  421f6c:	adc    bh,dh
  421f6e:	stos   DWORD PTR es:[edi],eax
  421f6f:	sbb    ecx,DWORD PTR [ebx]
  421f71:	(bad)  [esp+edi*4+0x52f1e58e]
  421f78:	ja     0x421fb9
  421f7a:	scas   al,BYTE PTR es:[edi]
  421f7b:	or     DWORD PTR [edx],0x78
  421f7e:	push   0xd98b25f
  421f83:	cdq    
  421f84:	(bad)  
  421f85:	push   esi
  421f86:	dec    ecx
  421f87:	and    al,0xf
  421f89:	pop    ds
  421f8a:	outs   dx,DWORD PTR ds:[esi]
  421f8b:	jmp    0x984a:0x4f3e3dd8
  421f92:	xor    BYTE PTR ds:0x387cd42,cl
  421f98:	inc    edx
  421f99:	in     al,dx
  421f9a:	inc    esi
  421f9b:	cdq    
  421f9c:	lods   al,BYTE PTR ds:[esi]
  421f9d:	jo     0x422012
  421f9f:	inc    eax
  421fa0:	or     eax,0xd39592c
  421fa5:	or     ah,dl
  421fa7:	push   ss
  421fa8:	repz pushf 
  421faa:	mov    esp,0x25316c1e
  421faf:	retf   
  421fb0:	pop    ss
  421fb1:	push   ds
  421fb2:	outs   dx,DWORD PTR ds:[esi]
  421fb3:	pop    es
  421fb4:	push   ecx
  421fb5:	mov    esp,0x56c70399
  421fba:	sbb    BYTE PTR [ecx],al
  421fbc:	scas   eax,DWORD PTR es:[edi]
  421fbd:	paddw  mm7,QWORD PTR [edx]
  421fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fc1:	mov    ds:0x8eb615a4,eax
  421fc6:	int    0x74
  421fc8:	push   ecx
  421fc9:	addr16 jmp 0x4f77:0xc4470189
  421fd1:	imul   ecx,DWORD PTR [ecx+edx*2+0x6e],0xffffffca
  421fd6:	cmc    
  421fd7:	dec    ebp
  421fd8:	mov    BYTE PTR [ecx-0xb86291e],ah
  421fde:	and    dh,BYTE PTR [edx-0xf9ad286]
  421fe4:	mov    ah,0xae
  421fe6:	hlt    
  421fe7:	(bad)  
  421fe8:	test   eax,0xca0d112b
  421fed:	xor    ebp,esp
  421fef:	lea    esi,[ecx]
  421ff1:	pop    eax
  421ff2:	scas   al,BYTE PTR es:[edi]
  421ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ff4:	rcr    BYTE PTR [edx],0x86
  421ff7:	iret   
  421ff8:	aad    0x2c
  421ffa:	jmp    0x422010
  421ffc:	or     bh,dh
  421ffe:	or     eax,0x6424135
  422003:	inc    esp
  422004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422005:	les    ebx,FWORD PTR [edx+ecx*2-0xd6f272d]
  42200c:	out    0xae,eax
  42200e:	aad    0x90
  422010:	out    0x8a,eax
  422012:	push   es
  422013:	jmp    0x46b40216
  422018:	jae    0x421ffd
  42201a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42201b:	shr    BYTE PTR [edx],1
  42201d:	xchg   esp,eax
  42201e:	add    al,0xa4
  422020:	imul   eax,DWORD PTR ds:0x15efd9a0,0x5a4e18b2
  42202a:	jbe    0x42208c
  42202c:	push   es
  42202d:	mov    edx,0xee2868eb
  422032:	fmul   st,st(1)
  422034:	jo     0x421fd4
  422036:	outs   dx,BYTE PTR ds:[esi]
  422037:	loopne 0x421fe2
  422039:	or     al,0x1
  42203b:	push   ebp
  42203c:	fcom   DWORD PTR [ebp+ecx*8+0x1c]
  422040:	fstp   DWORD PTR [edx]
  422042:	add    bh,BYTE PTR [eax]
  422044:	jl     0x422013
  422046:	cmp    eax,0x6f249fbb
  42204b:	xor    dh,BYTE PTR [eax+edx*2-0x4de16cd8]
  422052:	fimul  WORD PTR [ebp-0x676f885c]
  422058:	adc    al,0x99
  42205a:	push   esp
  42205b:	sbb    DWORD PTR [ecx],ebp
  42205d:	jmp    0x422043
  42205f:	cs das 
  422061:	pop    esp
  422062:	mov    dh,0xf7
  422064:	fsubr  QWORD PTR gs:[ebp+0x60]
  422068:	inc    esi
  422069:	add    BYTE PTR ds:0x58ec565e,ah
  42206f:	or     eax,0x28ff7a3e
  422074:	(bad)  
  422075:	dec    eax
  422076:	xchg   esp,eax
  422077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422078:	jl     0x4220db
  42207a:	xor    esp,DWORD PTR [edi]
  42207c:	ret    
  42207d:	sar    BYTE PTR fs:[ebp-0x78],1
  422081:	inc    esi
  422082:	lds    ecx,FWORD PTR [ebx]
  422084:	nop
  422085:	add    ebx,DWORD PTR [edx+0x163f4e4c]
  42208b:	test   BYTE PTR [esp+esi*4-0x300c314e],al
  422092:	and    BYTE PTR [edx-0x33],ch
  422095:	sbb    ch,ch
  422097:	std    
  422098:	fdivr  st,st(1)
  42209a:	jmp    DWORD PTR [edi]
  42209c:	addr16 dec esp
  42209e:	xor    al,0x65
  4220a0:	das    
  4220a1:	pop    ds
  4220a2:	imul   edi,DWORD PTR [esi+0x3e7f46f5],0x6777839f
  4220ac:	adc    eax,0xe950b238
  4220b1:	mov    bh,0x66
  4220b3:	(bad)  
  4220b4:	inc    DWORD PTR [esi+ebx*4]
  4220b7:	call   0x1f1c3903
  4220bc:	jo     0x4220de
  4220be:	in     al,dx
  4220bf:	pushf  
  4220c0:	aas    
  4220c1:	in     al,dx
  4220c2:	stos   BYTE PTR es:[edi],al
  4220c3:	dec    ebp
  4220c4:	adc    BYTE PTR [edx],bh
  4220c6:	mov    eax,ds:0xb9591d2e
  4220cb:	jo     0x422149
  4220cd:	hlt    
  4220ce:	call   0xa40e7039
  4220d3:	loop   0x42207c
  4220d5:	sahf   
  4220d6:	sbb    BYTE PTR [edx+edi*8-0x2dffff21],al
  4220dd:	and    dl,BYTE PTR [esi-0x21410966]
  4220e3:	push   0x52
  4220e5:	push   ds
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    bh,BYTE PTR [esi]
  4220e9:	ss pop ebp
  4220eb:	out    dx,eax
  4220ec:	add    bl,BYTE PTR [ecx+eax*1+0x28600]
  4220f3:	add    BYTE PTR [ecx],cl
  4220f5:	repz add al,0x23
  4220f8:	mov    al,ds:0xea044180
  4220fd:	xor    ch,BYTE PTR ds:0x75d16398
  422103:	jno    0x4220a7
  422105:	push   eax
  422106:	das    
  422107:	push   es
  422108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422109:	mov    dh,0x2f
  42210b:	test   al,0xf3
  42210d:	bound  esp,QWORD PTR ds:0xabe45c4a
  422113:	clc    
  422114:	mov    ch,0x69
  422116:	pop    ds
  422117:	or     ch,cl
  422119:	or     ch,BYTE PTR [ebp-0x4420064e]
  42211f:	data16 test BYTE PTR gs:[ebx+ebx*4-0x5cc25568],cl
  422128:	sbb    bl,ah
  42212a:	adc    bh,bh
  42212c:	jne    0x422163
  42212e:	test   BYTE PTR [esi-0x6c],al
  422131:	sbb    DWORD PTR [edi],ebp
  422133:	xor    eax,0x8b324668
  422138:	xchg   esp,eax
  422139:	mov    ebp,0xbc74d2c9
  42213e:	or     esi,edx
  422140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422141:	pop    ss
  422142:	cmp    ebp,ecx
  422144:	pop    es
  422145:	data16 (bad) 
  422147:	jno    0x42212d
  422149:	outs   dx,DWORD PTR ds:[esi]
  42214a:	shr    DWORD PTR [ebx+0x4b],cl
  42214d:	scas   eax,DWORD PTR es:[edi]
  42214e:	push   es
  42214f:	rcr    DWORD PTR [edx+0x6009a4bb],cl
  422155:	dec    ebp
  422156:	into   
  422157:	cmp    dh,dl
  422159:	xor    eax,0xeee63dea
  42215e:	mov    eax,0x5fc95d68
  422163:	xchg   esp,eax
  422164:	popf   
  422165:	ja     0x422149
  422167:	dec    ebx
  422168:	dec    edi
  422169:	ins    WORD PTR es:[edi],dx
  42216b:	and    eax,0x445c2fa4
  422170:	xor    edx,DWORD PTR [eax-0xb]
  422173:	jne    0x42218c
  422175:	push   0xa
  422177:	and    cl,BYTE PTR [si+0x7a]
  42217b:	dec    ebp
  42217c:	shl    DWORD PTR [edx-0x2f],cl
  42217f:	stos   DWORD PTR es:[edi],eax
  422180:	or     BYTE PTR [ebx-0x56],dh
  422183:	lods   eax,DWORD PTR ds:[esi]
  422184:	sub    edi,DWORD PTR [eax]
  422186:	sub    BYTE PTR [eax+0x37004483],cl
  42218c:	and    eax,DWORD PTR [ebx-0x16]
  42218f:	imul   edx,DWORD PTR [eax-0x46],0xffffffec
  422193:	js     0x4221b3
  422195:	les    esp,FWORD PTR [ecx-0x53f45a07]
  42219b:	out    0xff,al
  42219d:	and    ebp,DWORD PTR [edx+0x66]
  4221a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a1:	jl     0x4221ae
  4221a3:	(bad)  
  4221a4:	hlt    
  4221a5:	scas   eax,DWORD PTR es:[edi]
  4221a6:	stos   DWORD PTR es:[edi],eax
  4221a7:	inc    ebp
  4221a8:	scas   al,BYTE PTR es:[edi]
  4221a9:	cdq    
  4221aa:	sub    eax,0x45140f63
  4221af:	popf   
  4221b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b1:	dec    ebp
  4221b2:	repnz pop ds
  4221b4:	mov    dl,0x7a
  4221b6:	and    DWORD PTR [eax+esi*2],edi
  4221b9:	in     al,dx
  4221ba:	pop    ecx
  4221bb:	gs pop edi
  4221bd:	ret    0xbdec
  4221c0:	ror    al,cl
  4221c2:	push   edx
  4221c3:	sti    
  4221c4:	push   ebx
  4221c5:	and    al,0x33
  4221c7:	test   DWORD PTR [ecx-0x2239a7fc],ebx
  4221cd:	fstp   DWORD PTR [ecx-0x53f7b811]
  4221d3:	sti    
  4221d4:	rol    BYTE PTR [esi-0x40399971],1
  4221da:	and    BYTE PTR ds:0x81bf3b29,bh
  4221e0:	push   es
  4221e1:	jmp    0x42217c
  4221e3:	iret   
  4221e4:	shl    BYTE PTR [eax+0x72391203],cl
  4221ea:	stc    
  4221eb:	mov    eax,ds:0xef8be10d
  4221f0:	and    DWORD PTR [ebp-0x23a5f2d2],ebp
  4221f6:	clc    
  4221f7:	mov    eax,es
  4221f9:	jmp    0xd223:0x391ea884
  422200:	mov    bl,0xda
  422202:	cwde   
  422203:	sar    BYTE PTR [ebp-0x25],1
  422206:	inc    eax
  422207:	inc    esi
  422208:	xor    eax,0x5d864d87
  42220d:	cmp    eax,0x64cbabbb
  422212:	pop    es
  422213:	push   ebp
  422214:	mov    edi,0xc8fdc98f
  422219:	ins    DWORD PTR es:[edi],dx
  42221a:	and    al,0xa2
  42221c:	popf   
  42221d:	pop    esi
  42221e:	(bad)  
  42221f:	rcl    DWORD PTR [ebx],0x1a
  422222:	push   esi
  422223:	xchg   edx,eax
  422224:	sbb    BYTE PTR [ecx+eax*8],cl
  422227:	sub    eax,0xfe30e105
  42222c:	inc    ecx
  42222d:	fild   DWORD PTR [ecx-0x17]
  422230:	sub    DWORD PTR [ebx+0x28],esi
  422233:	loope  0x422203
  422235:	mov    ecx,0x4bd5408c
  42223a:	adc    al,0xfc
  42223c:	mov    ah,0x97
  42223e:	pop    ebp
  42223f:	add    DWORD PTR [edx+eiz*8],0xffffff8e
  422243:	mov    esi,0x84866398
  422248:	mov    esp,0x1c6aafdd
  42224d:	lea    ecx,[edi+eax*4]
  422250:	or     eax,0x54721cf9
  422255:	sbb    al,0x38
  422257:	leave  
  422258:	aaa    
  422259:	in     al,dx
  42225a:	inc    ebp
  42225b:	inc    esp
  42225c:	test   al,0xce
  42225e:	inc    esi
  42225f:	add    DWORD PTR [edi-0x12],eax
  422262:	in     al,0x75
  422264:	xor    BYTE PTR [edi+0x3a14dbed],ah
  42226a:	icebp  
  42226b:	mov    eax,0xac667984
  422270:	pusha  
  422271:	sbb    dh,BYTE PTR [eax+0x78]
  422274:	and    al,0xd7
  422276:	bound  esi,QWORD PTR [edx+ecx*1-0x3a]
  42227a:	jmp    0x42228a
  42227c:	pop    edi
  42227d:	bound  ebx,QWORD PTR [ebx]
  42227f:	test   BYTE PTR [eax-0x121de877],dl
  422285:	inc    edi
  422286:	hlt    
  422287:	mov    esp,?
  422289:	scas   al,BYTE PTR es:[edi]
  42228a:	xchg   esp,eax
  42228b:	pop    edx
  42228c:	or     DWORD PTR [ebp-0x41],edi
  42228f:	dec    ecx
  422290:	call   0x36f4:0xbd62a2ad
  422297:	mov    al,ds:0xc8f1177
  42229c:	jno    0x422273
  42229e:	sbb    bl,BYTE PTR [eax-0x1d33e5ce]
  4222a4:	int3   
  4222a5:	xchg   ebx,eax
  4222a6:	mov    cl,0x7d
  4222a8:	jae    0x422327
  4222aa:	adc    esp,edi
  4222ac:	cli    
  4222ad:	jne    0x42225e
  4222af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222b0:	sbb    DWORD PTR [ebp+ebp*8+0x6d94d0f4],esi
  4222b7:	jo     0x4222df
  4222b9:	jmp    0x422299
  4222bb:	cmp    BYTE PTR [edx],bl
  4222bd:	jecxz  0x4222cd
  4222bf:	xor    DWORD PTR [esp+edi*8-0x30],edi
  4222c3:	cld    
  4222c4:	pop    es
  4222c5:	rol    esi,1
  4222c7:	jle    0x4222b9
  4222c9:	stos   BYTE PTR es:[edi],al
  4222ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222cb:	add    BYTE PTR ss:[esi+0x78],dh
  4222cf:	jmp    0x3eef55f7
  4222d4:	xchg   ebp,eax
  4222d5:	push   0x28
  4222d7:	sub    al,0x7e
  4222d9:	fild   WORD PTR [edx]
  4222db:	(bad)  
  4222dc:	pop    ebp
  4222dd:	mov    bh,BYTE PTR [ecx]
  4222df:	(bad)  
  4222e0:	push   esp
  4222e1:	std    
  4222e2:	lahf   
  4222e3:	cld    
  4222e4:	and    al,0xa7
  4222e6:	or     eax,0x1b03781b
  4222eb:	or     eax,0xd2861020
  4222f0:	jbe    0x42230c
  4222f2:	xchg   esp,eax
  4222f3:	pusha  
  4222f4:	fsub   DWORD PTR [ebp+esi*8-0xc]
  4222f8:	mov    eax,0x5425908e
  4222fd:	outs   dx,DWORD PTR ds:[esi]
  4222fe:	cmc    
  4222ff:	and    edx,0x87c46710
  422305:	ins    DWORD PTR es:[edi],dx
  422306:	mov    edi,0xa342d445
  42230b:	jno    0x422346
  42230d:	stos   DWORD PTR es:[edi],eax
  42230e:	call   0xdd33:0xe9f84acb
  422315:	sbb    BYTE PTR [ebp-0x2a7e9d2d],dh
  42231b:	gs nop
  42231d:	out    0x9d,eax
  42231f:	(bad)  ds:0x77ea71aa
  422325:	cli    
  422326:	pop    ds
  422327:	mov    cs,WORD PTR [esi+0x34d1af46]
  42232d:	xchg   DWORD PTR [ecx+0x24326ec6],ecx
  422333:	xor    al,0x42
  422335:	xchg   edx,eax
  422336:	push   ds
  422337:	es arpl bp,sp
  42233a:	sub    esi,DWORD PTR [esi]
  42233c:	mov    dl,0xce
  42233e:	shl    DWORD PTR [esi+0x55],1
  422341:	adc    DWORD PTR [eax],esi
  422343:	(bad)  
  422344:	fisubr WORD PTR [ebx-0x146bd9c5]
  42234a:	je     0x4222ef
  42234c:	lods   eax,DWORD PTR ds:[esi]
  42234d:	aam    0xb2
  42234f:	and    BYTE PTR [esp+eiz*8],dh
  422352:	ins    BYTE PTR es:[edi],dx
  422353:	leave  
  422354:	clc    
  422355:	out    0x1c,al
  422357:	das    
  422358:	mov    ch,0xc3
  42235a:	mul    DWORD PTR [eax+0x71]
  42235d:	inc    eax
  42235e:	xor    dl,bl
  422360:	enter  0x15c0,0xd3
  422364:	push   ebp
  422365:	fadd   QWORD PTR [edx]
  422367:	outs   dx,DWORD PTR ds:[esi]
  422368:	mov    ecx,0xe952cd68
  42236d:	mul    DWORD PTR [eax-0x19766130]
  422373:	mov    dh,0x3f
  422375:	call   DWORD PTR [esi+0x6aec26]
  42237b:	add    ch,bl
  42237d:	cmp    al,0x8f
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp-0x3345723f]
  42238a:	jne    0x422399
  42238c:	mov    BYTE PTR [esi+0x2860001],bl
  422392:	add    BYTE PTR [eax],al
  422394:	(bad)  
  422395:	sbb    bl,BYTE PTR [esi]
  422397:	adc    ebx,ebx
  422399:	dec    edi
  42239a:	sbb    DWORD PTR [ebx-0x1f2cf75e],edi
  4223a0:	sti    
  4223a1:	repz sub esp,DWORD PTR [ebp+0x76a7dac9]
  4223a8:	or     al,0xd0
  4223aa:	fcomp  DWORD PTR [eax+0x4f]
  4223ad:	(bad)
  4223b0:	lea    ebx,[esi]
  4223b2:	shl    cl,cl
  4223b4:	popf   
  4223b5:	je     0x42240c
  4223b7:	mov    al,ds:0xe382ea9b
  4223bc:	call   0x36d1e368
  4223c1:	(bad)  
  4223c2:	call   0x291f4e4c
  4223c7:	mov    cl,0x48
  4223c9:	xlat   BYTE PTR ds:[ebx]
  4223ca:	fs jmp 0xbf8a:0x7c696887
  4223d2:	add    dl,ah
  4223d4:	call   0xad6d:0xe1e77761
  4223db:	adc    BYTE PTR [ecx+0x31a1d8ec],ch
  4223e1:	mov    eax,ds:0x54bcfdc1
  4223e6:	jae    0x422426
  4223e8:	and    BYTE PTR [eax-0x44],0x3a
  4223ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ed:	push   ds
  4223ee:	call   0xf64c6b70
  4223f3:	hlt    
  4223f4:	sub    BYTE PTR [esi],0xed
  4223f7:	push   ecx
  4223f8:	xchg   ecx,eax
  4223f9:	out    dx,eax
  4223fa:	cmp    ebp,DWORD PTR [ebx+0x5545f999]
  422400:	dec    eax
  422401:	cs xchg ebp,eax
  422403:	mul    DWORD PTR [esi+0x5da260cc]
  422409:	xor    edi,esi
  42240b:	inc    ecx
  42240c:	test   BYTE PTR [edx+0x7a],0x8b
  422410:	pop    es
  422411:	add    al,0x11
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	popa   
  422415:	mov    bh,0x3b
  422417:	es retf 
  422419:	push   ds
  42241a:	xor    ebp,edx
  42241c:	call   0xc00cc661
  422421:	(bad)  
  422422:	mov    ebp,0x5c9354b1
  422427:	(bad)  
  422428:	repz hlt 
  42242a:	and    ebx,DWORD PTR ss:[edx]
  42242d:	test   al,0xb9
  42242f:	xchg   ecx,eax
  422430:	dec    edx
  422431:	push   cs
  422432:	repnz push eax
  422434:	les    edi,FWORD PTR [ecx-0x60]
  422437:	mov    esp,0x45137d64
  42243c:	push   ebp
  42243d:	das    
  42243e:	fnstenv [edi]
  422440:	test   BYTE PTR [eax+0x2a38c87b],0xf8
  422447:	jno    0x42244e
  422449:	pop    esp
  42244a:	cmp    dh,dh
  42244c:	push   eax
  42244d:	mov    DWORD PTR [eax-0x6998f670],edi
  422453:	cmp    al,dh
  422455:	in     al,dx
  422456:	and    esi,ebx
  422458:	inc    ebx
  422459:	xor    DWORD PTR [edi+0x266958e4],0x99515730
  422463:	sar    BYTE PTR [ecx+edx*1-0x49],1
  422467:	lock stc 
  422469:	jns    0x4223fe
  42246b:	add    ecx,DWORD PTR [ebx]
  42246d:	jno    0x4224dd
  42246f:	adc    eax,0x4841c1db
  422474:	xchg   edx,eax
  422475:	mov    esp,0xf273b3c8
  42247a:	add    eax,0xbcf046f5
  42247f:	dec    ecx
  422480:	imul   eax,DWORD PTR [edi-0x50],0x7587a12c
  422487:	inc    ebp
  422488:	inc    esi
  422489:	mov    esp,0xa3b248ea
  42248e:	in     al,dx
  42248f:	inc    edx
  422490:	push   edi
  422491:	loope  0x4224b5
  422493:	div    ah
  422495:	mov    edi,0xe77eefc3
  42249a:	cmp    BYTE PTR [ebp+0xb72ba41],al
  4224a0:	and    BYTE PTR [eax],al
  4224a2:	sbb    BYTE PTR [eax+0x1cd453d7],dl
  4224a8:	add    edi,DWORD PTR [ebp-0x1a]
  4224ab:	pop    ecx
  4224ac:	inc    edx
  4224ad:	push   ebx
  4224ae:	mov    dl,dh
  4224b0:	pop    esp
  4224b1:	jge    0x4224b3
  4224b3:	shl    esi,cl
  4224b5:	mov    ch,0x29
  4224b7:	ss cmp al,0xda
  4224ba:	sub    ecx,edi
  4224bc:	(bad)  
  4224bd:	cli    
  4224be:	add    BYTE PTR [edx+0x1e76a],cl
  4224c4:	inc    ebp
  4224c5:	(bad)  
  4224c6:	cmp    dh,BYTE PTR [edx+edi*8-0x187f69e3]
  4224cd:	ficomp DWORD PTR ss:[ebp+0x52]
  4224d2:	into   
  4224d3:	dec    ebx
  4224d4:	gs fld st(6)
  4224d7:	cmp    eax,0xf65a68e8
  4224dc:	add    eax,0x2a8d9c22
  4224e1:	int3   
  4224e2:	call   0x9fda:0x36ea64b3
  4224e9:	jl     0x422536
  4224eb:	in     al,dx
  4224ec:	inc    esp
  4224ed:	cmp    DWORD PTR [ebx+0x582f804c],ebp
  4224f3:	test   BYTE PTR [ecx],dl
  4224f5:	or     DWORD PTR [ebp-0x2c],0xffffffb3
  4224f9:	std    
  4224fa:	ror    DWORD PTR [eax+esi*8],0xce
  4224fe:	cli    
  4224ff:	push   ebx
  422500:	gs pop edi
  422502:	mov    ?,WORD PTR [edi-0x6749a14b]
  422508:	mov    BYTE PTR [ebp+eiz*1-0x34],bl
  42250c:	in     al,0xb9
  42250e:	out    0x5f,al
  422510:	popf   
  422511:	fsub   st(7),st
  422513:	fucomi st,st(0)
  422515:	inc    ebx
  422516:	xchg   ebp,eax
  422517:	neg    DWORD PTR [edx-0x2]
  42251a:	add    eax,0x9322ed29
  42251f:	das    
  422520:	sub    eax,0x2aee507c
  422525:	push   edi
  422526:	xchg   esi,eax
  422527:	cmp    bl,dh
  422529:	repz mov edi,0x26f6ea57
  42252f:	inc    edi
  422530:	ins    BYTE PTR es:[edi],dx
  422531:	in     al,dx
  422532:	jmp    DWORD PTR ds:0x677d7806
  422538:	push   0x8f341e65
  42253d:	cdq    
  42253e:	sbb    BYTE PTR [ecx+0x1c],ah
  422541:	ror    al,1
  422543:	stos   BYTE PTR es:[edi],al
  422544:	pop    edi
  422545:	sbb    al,0xd0
  422547:	lock xor edi,0x287f5cf3
  42254e:	push   ebp
  42254f:	not    BYTE PTR [ebx]
  422551:	(bad)  
  422552:	aam    0xd1
  422554:	xor    BYTE PTR [ebx+0x18],0x1
  422558:	and    al,0xcb
  42255a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42255b:	pop    ebx
  42255c:	(bad)  
  42255d:	xchg   ecx,eax
  42255e:	addr16 test al,0x9
  422561:	jmp    0xd8f7:0xacf2aa2
  422568:	inc    ecx
  422569:	inc    esi
  42256a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42256b:	imul   esp,DWORD PTR [esi-0x26a4ef0d],0xb47cb4c5
  422575:	cmp    eax,0x8c178aa4
  42257a:	push   es
  42257b:	or     eax,0xd2671fd
  422580:	cli    
  422581:	repnz push 0xffffffad
  422584:	mov    edi,0x21dcc0a0
  422589:	push   0x5f
  42258b:	pop    ds
  42258c:	push   ss
  42258d:	test   DWORD PTR [eax+ebx*4+0x5247883],ebp
  422594:	pop    esi
  422595:	ret    0x191b
  422598:	fisttp WORD PTR [edx-0x2d]
  42259b:	jg     0x42261b
  42259d:	out    0x94,eax
  42259f:	shl    DWORD PTR [ebx-0x70],0x74
  4225a3:	pop    esi
  4225a4:	call   0x5eea58e
  4225a9:	add    al,0xe5
  4225ab:	mov    cs,WORD PTR [eax-0x45fc1505]
  4225b1:	mov    ebp,0x98fe586f
  4225b6:	shl    eax,cl
  4225b8:	cmp    al,0xeb
  4225ba:	fcomp  QWORD PTR [edi]
  4225bc:	mov    ds:0xebd63c19,eax
  4225c1:	pop    ebp
  4225c2:	jp     0x4225a5
  4225c4:	imul   esp,DWORD PTR [edx+edi*4-0x44],0xffffff98
  4225c9:	adc    eax,0xa3072f04
  4225ce:	nop
  4225cf:	mov    BYTE PTR [ecx],ch
  4225d1:	in     eax,dx
  4225d2:	sub    eax,DWORD PTR ds:0x78ea70ac
  4225d8:	aam    0x58
  4225da:	test   BYTE PTR [ecx+0x2228d1af],0x79
  4225e1:	mov    ds:0x4ecceeef,al
  4225e6:	cwde   
  4225e7:	sub    eax,0x7554d076
  4225ec:	pop    eax
  4225ed:	es pop ss
  4225ef:	push   cs
  4225f0:	aas    
  4225f1:	out    dx,eax
  4225f2:	add    al,0x55
  4225f4:	inc    DWORD PTR [edx-0x2ef9560c]
  4225fa:	lds    eax,FWORD PTR [ebp+ebx*4+0x1d]
  4225fe:	pop    esi
  4225ff:	dec    eax
  422600:	and    DWORD PTR [ecx-0x6d15e7b0],ebx
  422606:	data16 jge 0x4225fe
  422609:	xor    ah,cl
  42260b:	enter  0x514a,0x78
  42260f:	dec    esi
  422610:	loopne 0x4225ae
  422612:	into   
  422613:	mov    ch,0x6a
  422615:	jg     0x4225a6
  422617:	cmp    DWORD PTR [esi-0x5e],esp
  42261a:	add    BYTE PTR [eax],al
  42261c:	mov    dh,0xdf
  42261e:	fwait
  42261f:	add    bh,bl
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0xa6a831f2
  42262c:	push   cs
  42262d:	mov    eax,ds:0x2860001
  422632:	add    BYTE PTR [eax],al
  422634:	push   es
  422635:	cmp    eax,0x9be6f2b4
  42263a:	and    eax,0xf7c3adcc
  42263f:	imul   esi,esp,0x37935f5e
  422645:	push   edi
  422646:	adc    eax,DWORD PTR [ebx-0x4]
  422649:	aas    
  42264a:	mov    eax,ds:0xfea621
  42264f:	pop    edx
  422650:	push   ebp
  422651:	and    ah,0xdb
  422654:	call   0x3017:0x405a1e7f
  42265b:	jge    0x4226ad
  42265d:	das    
  42265e:	mov    esp,0x6603f106
  422663:	popf   
  422664:	xchg   ebx,eax
  422665:	or     esi,DWORD PTR [ebp+0x5e]
  422668:	ret    
  422669:	mov    bh,0x7c
  42266b:	pop    esp
  42266c:	xor    dh,BYTE PTR [ebx+0x1cf0cfc5]
  422672:	or     al,0xd5
  422674:	loopne 0x4226ad
  422676:	jae    0x422612
  422678:	aas    
  422679:	xlat   BYTE PTR ds:[ebx]
  42267a:	ja     0x4226e1
  42267c:	or     BYTE PTR [esi-0x6497748a],bl
  422682:	pop    eax
  422683:	cmp    ebp,DWORD PTR [edi-0x5665171]
  422689:	mov    esp,0xaf60c71f
  42268e:	in     al,0x4c
  422690:	jmp    0x422679
  422692:	mov    cl,0xb5
  422694:	int    0xb2
  422696:	mov    gs,esi
  422698:	retf   
  422699:	lock sahf 
  42269b:	call   0xbe90c0bf
  4226a0:	in     eax,0x1a
  4226a2:	loop   0x4226c8
  4226a4:	out    0x8b,eax
  4226a6:	lods   al,BYTE PTR ds:[esi]
  4226a7:	mov    bh,0x1b
  4226a9:	push   ss
  4226aa:	ret    
  4226ab:	fistp  DWORD PTR [eax-0x469b8eab]
  4226b1:	xor    DWORD PTR [edi-0xc],esp
  4226b4:	ficomp WORD PTR [edx-0xb5b7197]
  4226ba:	pushf  
  4226bb:	mov    ds:0xc8e8b838,al
  4226c0:	aas    
  4226c1:	inc    edi
  4226c2:	mov    ch,0x6a
  4226c4:	les    esp,FWORD PTR [esi-0x5afb75aa]
  4226ca:	into   
  4226cb:	ins    DWORD PTR es:[edi],dx
  4226cc:	pop    esp
  4226cd:	les    esp,FWORD PTR ds:0x6ea2482a
  4226d3:	cmp    esi,ecx
  4226d5:	and    al,0x55
  4226d7:	rol    DWORD PTR [ecx+0x311044ce],0xdd
  4226de:	push   esp
  4226df:	fst    DWORD PTR [edx+0x47]
  4226e2:	jp     0x4226a0
  4226e4:	fdivr  QWORD PTR [eax]
  4226e6:	shr    BYTE PTR [eax+0x3],1
  4226e9:	jno    0x42272d
  4226eb:	ins    BYTE PTR es:[edi],dx
  4226ec:	jmp    0x3ed237f
  4226f1:	int3   
  4226f2:	or     BYTE PTR [ebp-0x47],0x63
  4226f6:	push   ebp
  4226f7:	mov    bh,0x83
  4226f9:	dec    esi
  4226fa:	cdq    
  4226fb:	das    
  4226fc:	inc    ebx
  4226fd:	or     al,0x52
  4226ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422700:	mov    ah,0x98
  422702:	(bad)  
  422703:	fwait
  422704:	pop    ecx
  422705:	push   edx
  422706:	rol    DWORD PTR [ecx+0x88a6944],cl
  42270c:	mov    bl,0x92
  42270e:	ror    DWORD PTR [edx+eiz*4+0x75],cl
  422712:	out    0xd6,al
  422714:	push   es
  422715:	je     0x422785
  422717:	aaa    
  422718:	adc    ecx,DWORD PTR [ecx-0x41]
  42271b:	ja     0x4226d9
  42271d:	add    al,0x32
  42271f:	sub    BYTE PTR [edx+ecx*1+0x2],0xde
  422724:	fxtract 
  422726:	mul    dh
  422728:	jae    0x422717
  42272a:	jne    0x422707
  42272c:	xor    DWORD PTR [ecx-0x1370d4a2],0x9fc3950a
  422736:	pop    ebp
  422737:	xchg   ecx,eax
  422738:	cmp    ebx,DWORD PTR [esi]
  42273a:	pushf  
  42273b:	or     ah,BYTE PTR [ebx-0x9524dd8]
  422741:	std    
  422742:	push   edi
  422743:	mov    al,ds:0x717d33a7
  422748:	or     DWORD PTR [ebx-0x235325a1],eax
  42274e:	push   es
  42274f:	stos   DWORD PTR es:[edi],eax
  422750:	mov    ds:0x4890b872,al
  422755:	icebp  
  422756:	popf   
  422757:	loope  0x4226db
  422759:	stos   DWORD PTR es:[edi],eax
  42275a:	aaa    
  42275b:	dec    sp
  42275d:	rcr    BYTE PTR [edi-0x7a],0xd7
  422761:	add    al,0x4a
  422763:	jmp    0x4ee5d1f2
  422768:	cdq    
  422769:	jnp    0x422764
  42276b:	xor    al,0x32
  42276d:	jbe    0x422750
  42276f:	inc    edx
  422770:	push   ebp
  422771:	in     al,dx
  422772:	fisub  DWORD PTR [edi]
  422774:	out    dx,al
  422775:	hlt    
  422776:	jo     0x422796
  422778:	in     al,0x51
  42277a:	jle    0x4227b6
  42277c:	call   DWORD PTR ss:[esp+eax*2]
  422780:	mov    cl,0x4
  422782:	mov    dh,0x95
  422784:	or     DWORD PTR ds:0xb2399509,ebp
  42278a:	int3   
  42278b:	fld    DWORD PTR [ecx-0x147255e5]
  422791:	cmp    al,0x9b
  422793:	dec    ebx
  422794:	add    ecx,edx
  422796:	sar    DWORD PTR [eax],1
  422798:	push   eax
  422799:	call   0xc1d5:0x29779905
  4227a0:	or     BYTE PTR [ecx-0x1a],ch
  4227a3:	cmp    ch,BYTE PTR [esi+0x20]
  4227a6:	rcr    BYTE PTR [esi],cl
  4227a8:	add    BYTE PTR [ecx],ah
  4227aa:	loopne 0x42280e
  4227ac:	jmp    0x422768
  4227ae:	ret    
  4227af:	jp     0x42281b
  4227b1:	scas   eax,DWORD PTR es:[edi]
  4227b2:	dec    ecx
  4227b3:	adc    edi,DWORD PTR [ecx+ecx*2+0x6f]
  4227b7:	outs   dx,DWORD PTR ds:[esi]
  4227b8:	scas   eax,DWORD PTR es:[edi]
  4227b9:	inc    edi
  4227ba:	mov    WORD PTR [edx-0x36],cs
  4227bd:	lods   eax,DWORD PTR ds:[esi]
  4227be:	test   al,0x74
  4227c0:	push   eax
  4227c1:	stos   BYTE PTR es:[edi],al
  4227c2:	imul   esp,DWORD PTR [eax],0x5b
  4227c5:	push   cs
  4227c6:	call   0xb7f6184
  4227cb:	mov    dl,0x82
  4227cd:	mov    dl,0x8f
  4227cf:	call   0x4f423be8
  4227d4:	leave  
  4227d5:	sbb    ebx,DWORD PTR [ecx]
  4227d7:	pop    edi
  4227d8:	mov    edi,0x3ea56a61
  4227dd:	pop    di
  4227df:	and    edx,DWORD PTR ss:[ecx+0x2c2d293d]
  4227e6:	pop    ebx
  4227e7:	ret    0x3557
  4227ea:	clc    
  4227eb:	jbe    0x422785
  4227ed:	xchg   BYTE PTR [edi-0x21],ah
  4227f0:	jne    0x422846
  4227f2:	jb     0x42280a
  4227f4:	jmp    0x422872
  4227f6:	sahf   
  4227f7:	ds mov ebx,0xb5eda7f7
  4227fd:	pop    edx
  4227fe:	xchg   ecx,eax
  4227ff:	dec    edx
  422800:	fsub   DWORD PTR [eax-0x428e8579]
  422806:	dec    edi
  422807:	mov    al,0xbb
  422809:	pop    esp
  42280a:	fcom   DWORD PTR [ebx-0x6]
  42280d:	mov    ch,0x7f
  42280f:	scas   al,BYTE PTR es:[edi]
  422810:	shr    BYTE PTR [ecx+eiz*1+0x43e72311],cl
  422817:	(bad)  
  422819:	es retf 0x10ca
  42281d:	adc    ch,bh
  42281f:	sbb    BYTE PTR [edx+eiz*2-0x5d],dl
  422823:	xchg   ebx,eax
  422824:	sbb    bh,BYTE PTR [esi*2+0x3e3e607c]
  42282b:	xchg   edi,eax
  42282c:	in     al,0xa2
  42282e:	mov    esi,DWORD PTR [esi+eax*2-0xb]
  422832:	xor    edx,DWORD PTR [ebx+0x4cefd8d3]
  422838:	shl    BYTE PTR [edi],1
  42283a:	mov    cl,0x57
  42283c:	cmc    
  42283d:	and    eax,0x4b89700f
  422842:	stc    
  422843:	loop   0x4228a0
  422845:	aaa    
  422846:	ret    0x8f8b
  422849:	xchg   ecx,eax
  42284a:	adc    BYTE PTR [ebp+0xc30ccaf],ch
  422850:	pop    es
  422851:	aaa    
  422852:	lea    eax,[ecx-0x78]
  422855:	std    
  422856:	adc    eax,0xf0e1c535
  42285b:	repnz pop edx
  42285d:	cwde   
  42285e:	dec    esp
  42285f:	push   ebp
  422860:	inc    ecx
  422861:	jl     0x422870
  422863:	ss adc eax,0xb48a742f
  422869:	jae    0x42289a
  42286b:	sar    BYTE PTR [ebp-0x4a],1
  42286e:	mov    bl,0x11
  422870:	dec    eax
  422871:	sub    eax,0x523e440a
  422876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422877:	aas    
  422878:	rcl    BYTE PTR [edx-0x76],0xe
  42287c:	lock mov esi,0xcc15299
  422882:	jg     0x4228d0
  422884:	mov    ds:0xf2693767,eax
  422889:	(bad)  
  42288a:	loop   0x422871
  42288c:	jp     0x4228ab
  42288e:	leave  
  42288f:	fild   DWORD PTR [edi]
  422891:	pushf  
  422892:	mov    ds:0x454caae1,al
  422897:	fdiv   st,st(1)
  422899:	pop    ebx
  42289a:	popf   
  42289b:	dec    eax
  42289c:	sub    cl,bh
  42289e:	cmp    BYTE PTR [edi-0x791cbe4f],bl
  4228a4:	xor    eax,0x79db6694
  4228a9:	cmp    dl,BYTE PTR [eax]
  4228ab:	jnp    0x42289a
  4228ad:	popf   
  4228ae:	lds    esp,FWORD PTR [eax-0x3f44043c]
  4228b4:	jp     0x42288e
  4228b6:	shr    DWORD PTR [esp+edi*2],cl
  4228b9:	sbb    al,0x0
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0x73]
  4228c9:	and    DWORD PTR [esi+0x1a394d5],eax
  4228cf:	add    BYTE PTR [esi+0x2000002],al
  4228d5:	lds    edi,FWORD PTR [edx]
  4228d7:	xor    ecx,edi
  4228d9:	pop    ss
  4228da:	and    BYTE PTR [edi-0x2f],bh
  4228dd:	retf   
  4228de:	xchg   DWORD PTR [esi+0x59],esp
  4228e1:	imul   ebp,DWORD PTR ds:0x2eeeccc6,0x91ad72de
  4228eb:	ins    DWORD PTR es:[edi],dx
  4228ec:	inc    esi
  4228ed:	(bad)  [edi]
  4228ef:	xchg   edx,eax
  4228f0:	xor    al,0xd6
  4228f2:	shl    edx,0xdb
  4228f5:	scas   eax,DWORD PTR es:[edi]
  4228f6:	rcr    BYTE PTR [esi+ebp*2-0x68dead76],0xb9
  4228fe:	rcr    DWORD PTR [edi-0x68],cl
  422901:	sub    esp,DWORD PTR [esi+0x32c3495b]
  422907:	jnp    0x422988
  422909:	and    dl,BYTE PTR [edx-0x43]
  42290c:	inc    ebx
  42290d:	outs   dx,DWORD PTR ds:[esi]
  42290e:	into   
  42290f:	lods   eax,DWORD PTR ds:[esi]
  422910:	dec    esp
  422911:	sti    
  422912:	pop    ss
  422913:	pop    es
  422914:	idiv   BYTE PTR [edx+0x3f]
  422917:	inc    ecx
  422918:	dec    edi
  422919:	jge    0x4228c2
  42291b:	and    BYTE PTR [edi],ah
  42291d:	clc    
  42291e:	dec    esi
  42291f:	stos   BYTE PTR es:[edi],al
  422920:	jecxz  0x42294f
  422922:	test   eax,0xb7ed4d9f
  422927:	push   ebx
  422928:	xchg   ah,ah
  42292a:	xchg   esi,esp
  42292c:	mov    edx,0x7d630654
  422931:	push   esp
  422932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422934:	sahf   
  422935:	xchg   ch,bl
  422937:	pop    ebp
  422938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422939:	and    BYTE PTR [ecx-0x30],bh
  42293c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42293d:	icebp  
  42293e:	sub    cl,BYTE PTR [edi]
  422940:	das    
  422941:	cmp    al,0x1e
  422943:	int    0x27
  422945:	dec    edi
  422946:	in     eax,dx
  422947:	inc    ebp
  422948:	(bad)  
  422949:	loope  0x422923
  42294b:	clc    
  42294c:	cli    
  42294d:	dec    ecx
  42294e:	or     ecx,DWORD PTR [esi]
  422950:	aaa    
  422951:	pop    eax
  422952:	std    
  422953:	aam    0x72
  422955:	mov    bh,0x96
  422957:	pushf  
  422958:	int3   
  422959:	push   bp
  42295b:	jb     0x422937
  42295d:	cwde   
  42295e:	sub    eax,0x1f9b6556
  422963:	jg     0x42294a
  422965:	add    BYTE PTR [edi+0xa],0xb2
  422969:	mov    dh,0xc5
  42296b:	repnz inc ebx
  42296d:	in     al,0xc
  42296f:	mov    eax,ebx
  422971:	popf   
  422972:	inc    edi
  422973:	mov    dl,BYTE PTR [eax+0x23]
  422976:	mov    cl,0x49
  422978:	cli    
  422979:	hlt    
  42297a:	(bad)  
  42297b:	retf   0x4bf8
  42297e:	jg     0x422901
  422980:	sub    eax,0x830a4cc5
  422985:	mov    ch,BYTE PTR [edx]
  422987:	into   
  422988:	(bad)  
  422989:	sub    edi,DWORD PTR [edi+0x5c02c2b8]
  42298f:	test   DWORD PTR ds:0xfb905f26,ecx
  422995:	mov    al,0xc0
  422997:	push   ebp
  422998:	mov    bl,0xa9
  42299a:	jp     0x4229ca
  42299c:	cmp    ch,ch
  42299e:	int3   
  42299f:	or     bh,BYTE PTR [ebp-0x1b71728e]
  4229a5:	pop    ecx
  4229a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229a7:	icebp  
  4229a8:	jmp    0x4229c5
  4229aa:	inc    DWORD PTR [ebx+eiz*8]
  4229ad:	outs   dx,BYTE PTR ds:[esi]
  4229ae:	sbb    eax,0xa1967071
  4229b3:	inc    ebp
  4229b4:	cdq    
  4229b5:	int3   
  4229b6:	xor    al,0xef
  4229b8:	ja     0x4229a5
  4229ba:	pop    eax
  4229bb:	cli    
  4229bc:	add    esp,esp
  4229be:	and    cl,al
  4229c0:	mov    ecx,ss
  4229c2:	push   edx
  4229c3:	and    edx,DWORD PTR [eax-0x6acdfa5f]
  4229c9:	stc    
  4229ca:	js     0x42299c
  4229cc:	inc    esi
  4229cd:	imul   ebp,DWORD PTR [esi],0x87a798f1
  4229d3:	inc    edi
  4229d4:	ss mov ebp,0xeaf52c31
  4229da:	jmp    0xe191:0xa3fe7ff
  4229e1:	mov    bh,cl
  4229e3:	inc    edi
  4229e4:	push   ds
  4229e5:	leave  
  4229e6:	test   BYTE PTR [ebx-0x7b],bl
  4229e9:	pop    esp
  4229ea:	lods   eax,DWORD PTR ds:[esi]
  4229eb:	test   cl,ah
  4229ed:	mov    al,0x9
  4229ef:	mov    BYTE PTR [edx-0x6e],bh
  4229f2:	out    0x13,eax
  4229f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f5:	hlt    
  4229f6:	out    dx,al
  4229f7:	lock push es
  4229f9:	rcl    BYTE PTR [ebp+edx*1-0x1bbb083d],cl
  422a00:	pop    esp
  422a01:	adc    bh,BYTE PTR [ecx+esi*4+0x6c8b60f3]
  422a08:	std    
  422a09:	mov    esi,0x4c3e37c
  422a0e:	mov    ecx,0xd365d40b
  422a13:	xor    cl,BYTE PTR [edi+esi*2]
  422a16:	and    ch,dh
  422a18:	cli    
  422a19:	and    al,0x95
  422a1b:	pop    esp
  422a1c:	outs   dx,DWORD PTR ds:[esi]
  422a1d:	pop    eax
  422a1e:	mov    bl,al
  422a20:	je     0x422a9b
  422a22:	int    0x7e
  422a24:	repz test DWORD PTR [ecx-0x80],edx
  422a28:	call   0xfcc2:0xda0880e3
  422a2f:	clc    
  422a30:	(bad)  
  422a31:	lods   eax,DWORD PTR ds:[esi]
  422a32:	mov    WORD PTR [ebx],ss
  422a34:	inc    esp
  422a35:	out    dx,al
  422a36:	mov    dh,0x9c
  422a38:	xchg   ecx,eax
  422a39:	stos   DWORD PTR es:[edi],eax
  422a3a:	or     ebp,DWORD PTR fs:[ebx]
  422a3d:	(bad)  
  422a3f:	mov    ecx,0x991b79f3
  422a44:	rcl    DWORD PTR [edi],1
  422a46:	test   DWORD PTR [edx+0x80a0366],edx
  422a4c:	xlat   BYTE PTR ds:[ebx]
  422a4d:	mov    al,0x4c
  422a4f:	out    0xd9,eax
  422a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a52:	sbb    DWORD PTR [edx+edx*8],edx
  422a55:	inc    eax
  422a56:	pop    ebp
  422a57:	mov    ebx,ebp
  422a59:	je     0x422a1e
  422a5b:	mov    edx,0xbbf203a1
  422a60:	inc    esp
  422a61:	mov    edi,0xc25c0e5e
  422a66:	and    ebx,DWORD PTR [ecx-0x43901b3c]
  422a6c:	mov    ds:0xeeaa9b0f,al
  422a71:	and    eax,0x506d8a27
  422a76:	mov    ebp,0x22c093b1
  422a7b:	and    BYTE PTR [ebp-0x16],dh
  422a7e:	ss dec edi
  422a80:	retf   
  422a81:	fwait
  422a82:	scas   al,BYTE PTR es:[edi]
  422a83:	into   
  422a84:	mov    ebp,eax
  422a86:	sbb    eax,0xfdbd5119
  422a8b:	xor    al,0xed
  422a8d:	mov    edi,0x53693e44
  422a92:	push   0x7ba54f6a
  422a97:	cmp    dh,0x5f
  422a9a:	test   BYTE PTR [edx+edx*1+0x5d48ffe8],ch
  422aa1:	sbb    eax,DWORD PTR [edx]
  422aa3:	call   0x635e:0xf6d32654
  422aaa:	rol    DWORD PTR [eax+0x3cb21690],0xb2
  422ab1:	pop    ebx
  422ab2:	mov    edx,0xc370118b
  422ab7:	ret    
  422ab8:	cwde   
  422ab9:	add    DWORD PTR [ecx+ecx*4-0x3d],ebx
  422abd:	dec    eax
  422abe:	jnp    0x422ab7
  422ac0:	add    DWORD PTR [eax+0x105c70c5],esp
  422ac6:	ins    BYTE PTR es:[edi],dx
  422ac7:	xchg   ebx,eax
  422ac8:	mov    ds,WORD PTR [esi+0x31]
  422acb:	or     esp,DWORD PTR [esi-0x6b]
  422ace:	push   esp
  422acf:	mov    ebx,0xfd77cd2b
  422ad4:	ja     0x422a95
  422ad6:	faddp  st(2),st
  422ad8:	sub    al,0x7f
  422ada:	fdivr  DWORD PTR [eax]
  422adc:	test   DWORD PTR [edx-0x75],0x7b633fc6
  422ae3:	dec    eax
  422ae4:	stos   BYTE PTR es:[edi],al
  422ae5:	push   edi
  422ae6:	xchg   DWORD PTR [esi],edi
  422ae8:	inc    BYTE PTR [ecx-0x74bcc53f]
  422aee:	pop    eax
  422aef:	int    0xdd
  422af1:	xor    eax,0xd190ea28
  422af6:	in     al,dx
  422af7:	hlt    
  422af8:	jmp    0x422b31
  422afa:	sbb    DWORD PTR [eax+ecx*1],esp
  422afd:	sub    esp,DWORD PTR [edx-0x41]
  422b00:	aas    
  422b01:	mov    ch,0xa4
  422b03:	ss out dx,eax
  422b05:	in     al,dx
  422b06:	sahf   
  422b07:	fld    QWORD PTR ds:0x43926916
  422b0d:	xchg   ecx,eax
  422b0e:	cmp    ecx,ecx
  422b10:	sub    DWORD PTR [ebx+0x242b7693],eax
  422b16:	add    al,0x4b
  422b18:	aaa    
  422b19:	outs   dx,BYTE PTR ds:[esi]
  422b1a:	in     eax,dx
  422b1b:	mov    bh,0x45
  422b1d:	rcr    DWORD PTR [ebx+edi*1-0x20fdaa1e],1
  422b24:	es mov edx,0x77e758f2
  422b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b2b:	mov    edi,0xd3005fed
  422b30:	mov    esi,0x73035a80
  422b35:	push   ebp
  422b36:	(bad)  
  422b37:	hlt    
  422b38:	push   0xa0f22766
  422b3d:	push   edi
  422b3e:	cmp    ebx,0x22
  422b41:	cmp    eax,0x82b8110e
  422b46:	ret    
  422b47:	out    dx,eax
  422b48:	push   eax
  422b49:	push   esp
  422b4b:	hlt    
  422b4c:	imul   DWORD PTR [edi-0xc]
  422b4f:	inc    esp
  422b50:	jge    0x422b9f
  422b52:	(bad)  
  422b53:	xor    BYTE PTR [edi+0x13],dl
  422b56:	pushf  
  422b57:	arpl   WORD PTR [esi],bp
  422b59:	lods   eax,DWORD PTR ds:[esi]
  422b5a:	add    BYTE PTR [eax],al
  422b5c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	cmp    DWORD PTR ds:0x1afef286,0x860001a6
  422b71:	add    al,BYTE PTR [eax]
  422b73:	add    bh,dh
  422b75:	cmp    al,0xc8
  422b77:	retfw  
  422b79:	xor    al,0xdd
  422b7b:	in     eax,dx
  422b7c:	test   DWORD PTR [ebx+0x1b],0x88d426e9
  422b83:	push   edx
  422b84:	mov    eax,0x2e6c4713
  422b89:	mov    DWORD PTR [edx],ebx
  422b8b:	in     al,dx
  422b8c:	jmp    0x7a45d997
  422b91:	std    
  422b92:	jmp    0xcd4e:0x537fcae3
  422b99:	es mov dh,0x98
  422b9c:	mov    ds:0xca050033,al
  422ba1:	(bad)  
  422ba2:	xlat   BYTE PTR ds:[ebx]
  422ba3:	dec    edi
  422ba4:	shl    DWORD PTR [edi+0x5b],cl
  422ba7:	icebp  
  422ba8:	pop    edi
  422ba9:	ror    DWORD PTR ds:0x63f963fe,0x72
  422bb0:	mov    bl,0x7a
  422bb2:	lds    ebp,FWORD PTR [edx]
  422bb4:	jp     0x422b9e
  422bb6:	imul   esp,DWORD PTR [edx+0x5163c924],0x22
  422bbd:	jmp    0x422c0b
  422bbf:	das    
  422bc0:	in     al,dx
  422bc1:	xchg   edi,eax
  422bc2:	cli    
  422bc3:	and    al,0x13
  422bc5:	or     dh,BYTE PTR [ebp-0x125d3ec4]
  422bcb:	es adc eax,0x99df97b1
  422bd1:	dec    edx
  422bd2:	shr    BYTE PTR [ebp+0x201b96cf],1
  422bd8:	inc    esi
  422bd9:	test   DWORD PTR [eax],ecx
  422bdb:	popa   
  422bdc:	ja     0x422bd9
  422bde:	xchg   edi,eax
  422bdf:	sub    DWORD PTR [ebp+0x2d],esp
  422be2:	cli    
  422be3:	imul   BYTE PTR [ecx+edx*8]
  422be6:	lock mov dl,0x4d
  422be9:	loope  0x422bbb
  422beb:	out    0x45,eax
  422bed:	pop    esp
  422bee:	sbb    al,0xb8
  422bf0:	pusha  
  422bf1:	mov    ebp,0x13222d68
  422bf6:	push   esp
  422bf7:	push   0xffffffdc
  422bf9:	jb     0x422c72
  422bfb:	and    al,0xd2
  422bfd:	addr16 adc ebp,ebx
  422c00:	mov    ebp,0x74346e93
  422c05:	dec    edi
  422c06:	loop   0x422c61
  422c08:	mul    ecx
  422c0a:	sub    DWORD PTR [eax+0x6222fa25],esi
  422c10:	js     0x422bd2
  422c12:	inc    ecx
  422c13:	les    esp,FWORD PTR [ecx]
  422c15:	pop    ecx
  422c16:	mov    edi,0x49a86884
  422c1b:	push   ds
  422c1c:	popf   
  422c1d:	clc    
  422c1e:	adc    BYTE PTR [ebx+0x578be1d2],ch
  422c24:	retf   
  422c25:	aam    0x1d
  422c27:	icebp  
  422c28:	pop    ds
  422c29:	inc    edx
  422c2a:	call   0x8a56:0xb74a546
  422c31:	lods   eax,DWORD PTR ds:[esi]
  422c32:	jmp    0x97ad:0x60b79b0a
  422c39:	sbb    ah,BYTE PTR [ebp-0x56]
  422c3c:	jmp    0x94476069
  422c41:	mov    ebp,0xb55edff1
  422c46:	pushf  
  422c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c48:	adc    eax,0xc67dae01
  422c4d:	shr    ebp,cl
  422c4f:	dec    esi
  422c50:	pop    ebp
  422c51:	enter  0x112d,0x7e
  422c55:	iret   
  422c56:	or     BYTE PTR [edi-0x17],ch
  422c59:	and    al,BYTE PTR ds:0x49cc5799
  422c5f:	sahf   
  422c60:	aam    0xaf
  422c62:	xor    al,0xdc
  422c64:	mov    dl,0xc9
  422c66:	mov    BYTE PTR [edi],cl
  422c68:	popf   
  422c69:	pop    es
  422c6a:	add    eax,ecx
  422c6c:	jo     0x422c92
  422c6e:	jg     0x422c0b
  422c70:	mov    ?,WORD PTR [edi-0x64a0729e]
  422c76:	pusha  
  422c77:	sar    DWORD PTR [esp+ebp*2-0x4a32a1ce],1
  422c7e:	cmp    al,bl
  422c80:	push   ebp
  422c81:	jno    0x422cf2
  422c83:	outs   dx,BYTE PTR ds:[esi]
  422c84:	mov    ebx,0xd5bcee7f
  422c89:	mov    BYTE PTR es:[ebx],al
  422c8c:	pop    edi
  422c8d:	gs gs call 0xe1da:0x3cae502e
  422c96:	call   0xbf3a6b14
  422c9b:	pop    ebx
  422c9c:	sub    bh,ah
  422c9e:	dec    esi
  422c9f:	shl    ecx,cl
  422ca1:	ins    DWORD PTR es:[edi],dx
  422ca2:	jl     0x422c27
  422ca4:	sti    
  422ca5:	push   esp
  422ca6:	into   
  422ca7:	fcmovne st,st(1)
  422ca9:	mov    ebp,0x91e789db
  422cae:	jae    0x422d2a
  422cb0:	pop    ebp
  422cb1:	mov    esi,edi
  422cb3:	xor    cl,0xfc
  422cb6:	fsubrp st(6),st
  422cb8:	mov    dx,es
  422cbb:	jmp    0x422c5c
  422cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cbe:	push   es
  422cbf:	sbb    bl,BYTE PTR [eax+0x29]
  422cc2:	or     al,0xe2
  422cc4:	push   esi
  422cc5:	jmp    0x325f6fab
  422cca:	dec    edx
  422ccb:	pop    ecx
  422ccc:	cmp    eax,0x63ed55aa
  422cd1:	lea    ecx,[ecx-0x50]
  422cd4:	je     0x422d3d
  422cd6:	jb     0x422d32
  422cd8:	inc    ebp
  422cd9:	test   esp,0x4642d855
  422cdf:	addr16 (bad) 
  422ce1:	jo     0x422cd2
  422ce3:	fstp   QWORD PTR [ebp-0x51b80731]
  422ce9:	ins    BYTE PTR es:[edi],dx
  422cea:	mov    ebx,0x3db1a9b9
  422cef:	pop    esi
  422cf0:	loop   0x422ce6
  422cf2:	test   bh,ch
  422cf4:	std    
  422cf5:	cmc    
  422cf6:	and    eax,0xd5bfbdc
  422cfb:	(bad)  
  422cfc:	in     al,0x9f
  422cfe:	imul   edx,edi,0xffffff81
  422d01:	sub    eax,0x40c02df
  422d06:	jl     0x422d81
  422d08:	das    
  422d09:	mov    DWORD PTR [ebx],edx
  422d0b:	retf   0xae95
  422d0e:	lods   eax,DWORD PTR ds:[esi]
  422d0f:	in     al,0x66
  422d11:	idiv   BYTE PTR [ecx-0x62]
  422d14:	gs inc ebp
  422d16:	nop
  422d17:	clc    
  422d18:	jne    0x422d99
  422d1a:	xchg   esi,eax
  422d1b:	add    al,0x37
  422d1d:	mov    esp,0xccf41251
  422d22:	adc    BYTE PTR [eax-0x1c],bh
  422d25:	push   0x25
  422d27:	add    eax,0x3803de0e
  422d2c:	int    0x38
  422d2e:	(bad)  
  422d2f:	cmp    eax,0x53c1ae79
  422d34:	cmp    WORD PTR [ecx-0x1c0465af],0x1
  422d3c:	shr    BYTE PTR [ebp+0x1064052],1
  422d42:	fld    DWORD PTR [ebp+0x6b77f06b]
  422d48:	sbb    edi,DWORD PTR [ebx]
  422d4a:	add    esi,DWORD PTR [eax+0x789f2431]
  422d50:	mov    esp,0x4eeafa32
  422d55:	xchg   ebx,eax
  422d56:	std    
  422d57:	ret    0x875
  422d5a:	shr    bh,1
  422d5c:	dec    ecx
  422d5d:	mov    ebx,0x674571fb
  422d62:	sub    ch,cl
  422d64:	(bad)  
  422d65:	push   cs
  422d66:	cmp    eax,0xc2c8b7f9
  422d6b:	out    0xf6,al
  422d6d:	sub    al,BYTE PTR [ebp+0x6e]
  422d70:	mov    eax,ds:0x9e1b09b6
  422d75:	mov    esi,DWORD PTR [ebp-0x5d24745d]
  422d7b:	add    al,0xc7
  422d7d:	out    0x77,al
  422d7f:	es ja  0x422dad
  422d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d83:	pusha  
  422d84:	and    BYTE PTR [esi],0xc6
  422d87:	mov    dh,0xfa
  422d89:	imul   ebx,DWORD PTR [edx*2-0x6d5ec0e2],0xffffffa8
  422d91:	mov    al,ds:0x816cfaae
  422d96:	in     al,0xdb
  422d98:	fst    QWORD PTR [ebx]
  422d9a:	addr16 loopne 0x422df8
  422d9d:	fldcw  WORD PTR [ebx]
  422d9f:	paddq  mm7,QWORD PTR [eax-0x45cf58f5]
  422da6:	jle    0x422e15
  422da8:	inc    esi
  422da9:	retf   0xbce
  422dac:	fcmovu st,st(6)
  422dae:	jecxz  0x422e1f
  422db0:	jmp    0x95eb0d11
  422db5:	sub    edi,DWORD PTR [ebp-0x40509c98]
  422dbb:	push   esi
  422dbc:	cdq    
  422dbd:	pop    edi
  422dbe:	xor    eax,0xbac4fada
  422dc3:	push   0x31536ccd
  422dc8:	arpl   WORD PTR [esi],sp
  422dca:	cmc    
  422dcb:	pop    esi
  422dcc:	mov    eax,ds:0x34fec665
  422dd1:	outs   dx,DWORD PTR ds:[esi]
  422dd2:	push   eax
  422dd3:	out    0x4d,eax
  422dd5:	mov    WORD PTR [ecx+0x5dc8bf2],cs
  422ddb:	pop    es
  422ddc:	mov    eax,0x37fa01d0
  422de1:	ss sbb dl,cl
  422de4:	fmul   st(0),st
  422de6:	imul   eax,ebx,0xffffffba
  422de9:	mov    al,al
  422deb:	pop    ds
  422dec:	mov    BYTE PTR [ebx-0x69825a87],bl
  422df2:	jae    0x422e62
  422df4:	inc    ecx
  422df5:	xchg   edx,eax
  422df6:	cld    
  422df7:	sbb    al,0x78
  422df9:	cdq    
  422dfa:	add    BYTE PTR [eax],al
  422dfc:	gs mov ah,0x18
  422dff:	fcompp 
  422e01:	(bad)  
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	mul    bl
  422e09:	ins    DWORD PTR es:[edi],dx
  422e0a:	sub    ah,BYTE PTR [ecx+0x1a8a0]
  422e10:	xchg   BYTE PTR [edx],al
  422e12:	add    BYTE PTR [eax],al
  422e14:	je     0x422dc2
  422e16:	jge    0x422e8d
  422e18:	mov    BYTE PTR [ebp+0x6e90396],cl
  422e1e:	fwait
  422e1f:	stc    
  422e20:	dec    ecx
  422e21:	jl     0x422dcb
  422e23:	imul   eax,DWORD PTR [edx-0xa],0x250b563a
  422e2a:	push   cs
  422e2b:	sbb    DWORD PTR [edi+edi*2+0x5fc88963],0x27
  422e33:	ss imul ecx,DWORD PTR cs:[eax+edi*1],0xcc7d17aa
  422e3c:	fmul   DWORD PTR [eax-0x1101e4ae]
  422e42:	or     eax,0xb2ca1c14
  422e47:	pop    edi
  422e48:	mov    edi,0xcc9f3360
  422e4d:	shl    dh,cl
  422e4f:	sub    al,0x6b
  422e51:	fmul   st(6),st
  422e53:	dec    ecx
  422e54:	mov    edi,0x664a0c48
  422e59:	jecxz  0x422e0d
  422e5b:	xor    eax,0x4a313d11
  422e60:	mov    dl,0x9b
  422e62:	sbb    bh,BYTE PTR ds:0xb5ddcc8e
  422e68:	mov    bl,0x38
  422e6a:	mov    ebp,0x92bd9fa6
  422e6f:	inc    ecx
  422e70:	push   ecx
  422e71:	int3   
  422e72:	inc    esp
  422e73:	mov    al,0x9d
  422e75:	out    dx,eax
  422e76:	outs   dx,DWORD PTR ds:[esi]
  422e77:	jle    0x422e8e
  422e79:	pop    edi
  422e7a:	push   eax
  422e7b:	xchg   ebx,eax
  422e7c:	sub    ah,BYTE PTR [ebp-0x7dddff8]
  422e82:	les    esp,FWORD PTR [ecx-0x206e86d7]
  422e88:	pop    esi
  422e89:	mov    ah,0xf8
  422e8b:	mov    eax,ds:0x4f3db452
  422e90:	add    eax,DWORD PTR [ebx+0x71]
  422e93:	lock js 0x422ed0
  422e96:	bound  ebp,QWORD PTR [esi+edi*2]
  422e99:	pop    ebp
  422e9a:	fidivr DWORD PTR [edx-0x24388fbb]
  422ea0:	mov    eax,ds:0x5f1b727e
  422ea5:	lods   eax,DWORD PTR ds:[esi]
  422ea6:	jecxz  0x422efe
  422ea8:	push   ebp
  422ea9:	repnz inc ebp
  422eab:	aaa    
  422eac:	iret   
  422ead:	lea    esi,[ecx]
  422eaf:	mov    ebx,0x3ab7f47b
  422eb4:	out    0xfc,al
  422eb6:	push   cs
  422eb7:	test   eax,0xef6ae1c3
  422ebc:	out    dx,eax
  422ebd:	stos   DWORD PTR es:[edi],eax
  422ebe:	jne    0x422ead
  422ec0:	pop    ds
  422ec1:	fiadd  DWORD PTR [esi]
  422ec4:	nop
  422ec5:	mov    BYTE PTR [eax-0x15e16609],ah
  422ecb:	inc    esp
  422ecc:	xchg   ebp,eax
  422ecd:	push   edi
  422ece:	ss dec cx
  422ed1:	ja     0x422e78
  422ed3:	inc    ecx
  422ed4:	dec    DWORD PTR [ebp+0x6270830e]
  422eda:	mov    ah,BYTE PTR [ebx]
  422edc:	jmp    0x422f31
  422ede:	inc    eax
  422edf:	inc    edi
  422ee0:	idiv   BYTE PTR [ecx]
  422ee2:	mov    eax,0x4d229b73
  422ee7:	cmp    bl,dl
  422ee9:	or     ah,BYTE PTR [esi-0x1b6f7167]
  422eef:	mov    edx,0xb7d3c17a
  422ef4:	int    0x3f
  422ef6:	(bad)  
  422ef8:	dec    sp
  422efa:	xor    BYTE PTR [eax-0x3cab97b0],ah
  422f00:	xchg   esi,eax
  422f01:	jge    0x422ee5
  422f03:	int    0x54
  422f05:	popf   
  422f06:	xor    ebx,DWORD PTR [edx]
  422f08:	fst    DWORD PTR [ebp+0x133f212c]
  422f0e:	std    
  422f0f:	or     eax,0xda17f8ea
  422f14:	jle    0x422ea1
  422f16:	jle    0x422ea8
  422f18:	xor    ecx,DWORD PTR [esi-0x2e]
  422f1b:	mov    edi,0x79bab5ab
  422f20:	jmp    0x54b8794f
  422f25:	fadd   QWORD PTR [edi]
  422f27:	xchg   esp,eax
  422f28:	add    al,BYTE PTR [eax+esi*2+0x34]
  422f2c:	sub    BYTE PTR [ecx-0x2c4b0104],ah
  422f32:	sbb    DWORD PTR [esi-0x3ef23797],edi
  422f38:	and    ebx,DWORD PTR [ebp+0x15]
  422f3b:	fiadd  WORD PTR [ebp-0x39145a90]
  422f41:	and    ecx,DWORD PTR [eiz*4-0x131774b3]
  422f48:	inc    eax
  422f49:	(bad)  
  422f4b:	retf   0x2ba5
  422f4e:	frstor [ebp-0x1a]
  422f51:	mov    bp,cx
  422f54:	xor    eax,0x60311bd8
  422f59:	loopne 0x422f75
  422f5b:	xor    dl,BYTE PTR ss:[ecx+0x20]
  422f5f:	sbb    BYTE PTR [ecx-0x80],bh
  422f62:	xchg   edi,eax
  422f63:	mov    bp,0xa0a5
  422f67:	js     0x422f2b
  422f69:	xchg   ecx,eax
  422f6a:	cs and esi,esp
  422f6d:	dec    esi
  422f6e:	inc    esp
  422f6f:	mov    ch,BYTE PTR [ebx+0x508d7c3e]
  422f75:	fwait
  422f76:	pop    esp
  422f77:	ja     0x422fd1
  422f79:	fwait
  422f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f7b:	or     cl,BYTE PTR [edi+0x28ca5b31]
  422f81:	xchg   ecx,eax
  422f82:	adc    DWORD PTR [ecx],ecx
  422f84:	mov    dl,0x59
  422f86:	in     eax,dx
  422f87:	xor    bh,cl
  422f89:	ds loop 0x422fe8
  422f8c:	adc    BYTE PTR [esi+0x3a],al
  422f8f:	push   ecx
  422f90:	adc    BYTE PTR [edx+0x759eb32b],ah
  422f96:	mov    cl,0xd6
  422f98:	cmp    eax,0x26279ba3
  422f9d:	mov    cs,WORD PTR [ecx+0x76a4df71]
  422fa3:	(bad)  
  422fa4:	pop    ebx
  422fa5:	pop    ecx
  422fa6:	leave  
  422fa7:	shl    DWORD PTR [ebx-0x241eda53],1
  422fad:	cld    
  422fae:	jbe    0x422f4f
  422fb0:	dec    ecx
  422fb1:	mov    al,0x23
  422fb3:	repnz std 
  422fb5:	mov    WORD PTR [esi-0x1d4a4947],fs
  422fbb:	jge    0x422f42
  422fbd:	mov    esp,0xeca16c7b
  422fc2:	or     al,0x75
  422fc4:	ror    BYTE PTR [ecx],cl
  422fc6:	mov    ecx,DWORD PTR [ecx]
  422fc8:	add    al,al
  422fca:	fwait
  422fcb:	adc    dh,dl
  422fcd:	inc    ecx
  422fce:	push   0x6fd55163
  422fd3:	les    edi,FWORD PTR [ecx]
  422fd5:	test   dl,bl
  422fd7:	pop    ebp
  422fd8:	arpl   si,sp
  422fda:	aad    0x4
  422fdc:	loopne 0x422ff5
  422fde:	push   esi
  422fdf:	out    dx,al
  422fe0:	clc    
  422fe1:	adc    eax,0x23e894b8
  422fe6:	gs scas eax,DWORD PTR es:[edi]
  422fe8:	in     eax,dx
  422fe9:	mov    ebp,DWORD PTR [edi+0x17d6ae43]
  422fef:	mov    esp,ebp
  422ff1:	xchg   BYTE PTR ds:[edi-0x2],ah
  422ff5:	inc    ebp
  422ff6:	inc    edi
  422ff7:	sbb    ebp,DWORD PTR [ebx+edx*4]
  422ffa:	mov    cs,WORD PTR [ebp-0x11]
  422ffd:	xor    eax,0xaf01e089
  423002:	cmc    
  423003:	mov    bh,0x97
  423005:	fidiv  DWORD PTR [eax+0x4e597b8a]
  42300b:	xor    al,0xd
  42300d:	lea    ebx,[ebx]
  42300f:	mov    dl,0xb7
  423011:	out    dx,al
  423012:	dec    ebx
  423013:	int3   
  423014:	ja     0x422fa9
  423016:	mov    eax,ds:0x412af661
  42301b:	aam    0x34
  42301d:	popa   
  42301e:	pop    edi
  42301f:	mov    bh,0x61
  423021:	scas   al,BYTE PTR es:[edi]
  423022:	ret    0xdf43
  423025:	retf   0x4313
  423028:	inc    ecx
  423029:	cmp    esi,DWORD PTR [ebx+esi*8-0x5e]
  42302d:	out    0xc3,al
  42302f:	or     al,0xf4
  423031:	jmp    0x423026
  423033:	mov    esi,0x790d7f9c
  423038:	out    dx,al
  423039:	or     dl,BYTE PTR [ecx-0x59]
  42303c:	add    bh,dl
  42303e:	repnz hlt 
  423040:	mov    ah,0x4f
  423042:	add    BYTE PTR [eax-0x77638ddd],dl
  423048:	loop   0x423067
  42304a:	dec    eax
  42304b:	and    BYTE PTR [ebx+0x40bc2bc4],ah
  423051:	xor    al,0xc
  423053:	xor    esi,0x6664d2e
  423059:	ins    BYTE PTR es:[edi],dx
  42305a:	sub    bl,bl
  42305c:	inc    esp
  42305d:	loop   0x423078
  42305f:	call   0xb63c:0x19c954fa
  423066:	fs push esp
  423068:	mov    cl,0xec
  42306a:	mov    ah,0x36
  42306c:	push   0x8120ca80
  423071:	enter  0xb407,0x31
  423075:	jne    0x42305e
  423077:	pop    esp
  423078:	push   cs
  423079:	scas   al,BYTE PTR es:[edi]
  42307a:	call   0xfb05:0x7883bcb6
  423081:	neg    DWORD PTR [ebx+0x2c]
  423084:	loopne 0x423032
  423086:	jmp    0xa60a90d8
  42308b:	push   eax
  42308c:	xor    DWORD PTR [esi+0x6c],esp
  42308f:	fild   QWORD PTR ds:0x69300d55
  423095:	jmp    0x0:0xf9732273
  42309c:	adc    bl,al
  42309e:	arpl   WORD PTR [edx-0x15],si
  4230a1:	sti    
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx+0x233988f7]
  4230aa:	mov    esp,0x1ab26c6
  4230af:	add    BYTE PTR [esi-0x4ffffffe],al
  4230b5:	or     eax,0x8183b6eb
  4230ba:	sbb    BYTE PTR [eax+0x7c],cl
  4230bd:	std    
  4230be:	sbb    eax,0x5963cf75
  4230c3:	dec    edi
  4230c4:	and    dl,cl
  4230c6:	das    
  4230c7:	xor    ah,BYTE PTR [edx+0x5b]
  4230ca:	ret    
  4230cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230cc:	in     al,0xea
  4230ce:	sbb    al,0x27
  4230d0:	(bad)  
  4230d1:	push   ebx
  4230d2:	mov    ebx,0xeef8fbd6
  4230d7:	(bad)
  4230da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230db:	aas    
  4230dc:	int    0xcf
  4230de:	and    DWORD PTR [eax],ecx
  4230e0:	repz cmc 
  4230e2:	dec    esi
  4230e3:	inc    ebx
  4230e4:	xlat   BYTE PTR ds:[ebx]
  4230e5:	leave  
  4230e6:	xor    esi,DWORD PTR [edi-0x5908c16b]
  4230ec:	jb     0x42314c
  4230ee:	push   es
  4230ef:	test   DWORD PTR [ecx+0x11d85ea4],0x86cb583f
  4230f9:	fistp  DWORD PTR [ecx-0x1d]
  4230fc:	mov    eax,0x378d4ba5
  423101:	sbb    dh,BYTE PTR [eax-0x50]
  423104:	inc    ebp
  423105:	hlt    
  423106:	dec    esp
  423107:	jbe    0x42317b
  423109:	fsub   QWORD PTR [ebx]
  42310b:	adc    eax,0x398a02ae
  423110:	into   
  423111:	push   edx
  423112:	cmp    DWORD PTR [esi+0x39ba5e6f],eax
  423118:	pop    ebx
  423119:	arpl   di,si
  42311b:	(bad)  [eax+ecx*8-0x36bc3478]
  423122:	idiv   DWORD PTR [ebx-0x62]
  423125:	mov    gs,WORD PTR fs:[di+0x1d]
  42312a:	fprem1 
  42312c:	shrd   DWORD PTR [eax],esi,0x76
  423130:	pushf  
  423131:	dec    edx
  423132:	mov    fs,WORD PTR [ebx+0x68997641]
  423138:	add    BYTE PTR [ecx],cl
  42313a:	xchg   esi,eax
  42313b:	push   0xd51c1afc
  423140:	mov    edi,0xaba6e6eb
  423145:	fwait
  423146:	aaa    
  423147:	push   0x80c10c03
  42314c:	js     0x423146
  42314e:	lahf   
  42314f:	pop    ecx
  423150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423151:	sbb    DWORD PTR [edi-0x1187c909],ebx
  423157:	sbb    sp,WORD PTR [eax-0x23]
  42315b:	mov    ds:0x58753bdf,eax
  423160:	mov    edi,DWORD PTR ds:0x52603c4c
  423166:	pop    eax
  423167:	sbb    DWORD PTR [edx+ecx*2+0x33],edi
  42316b:	sti    
  42316c:	cwde   
  42316d:	sbb    esi,ebp
  42316f:	pop    ebp
  423170:	push   edi
  423171:	in     eax,0xc4
  423173:	sub    bh,BYTE PTR [esp+edi*2+0x40]
  423177:	(bad)  [edx]
  423179:	xchg   esi,eax
  42317a:	sbb    bh,BYTE PTR ds:0x2a06bf94
  423180:	mov    ss,WORD PTR [edi]
  423182:	push   ss
  423183:	inc    esi
  423184:	sbb    DWORD PTR [ebp+0x76],edx
  423187:	cmc    
  423188:	adc    eax,0x15be005c
  42318d:	mov    esi,0x7c81c2cf
  423192:	push   0xffffff85
  423194:	repz and eax,0x7c13f76b
  42319a:	std    
  42319b:	dec    ebx
  42319c:	push   es
  42319d:	aam    0xf6
  42319f:	add    ah,ah
  4231a1:	retf   0x9ee5
  4231a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231a5:	inc    ecx
  4231a6:	mov    al,ds:0x752df5fc
  4231ab:	mov    bl,0xc2
  4231ad:	pop    ss
  4231ae:	sbb    edi,eax
  4231b0:	jmp    0x42315e
  4231b2:	les    ecx,FWORD PTR [ecx+edx*2+0xa2d6c84]
  4231b9:	retf   0x5ee1
  4231bc:	icebp  
  4231bd:	push   es
  4231be:	shl    DWORD PTR [ecx],cl
  4231c0:	pop    ecx
  4231c1:	sbb    ecx,eax
  4231c3:	push   edi
  4231c4:	push   ss
  4231c5:	sbb    ch,bh
  4231c7:	inc    esi
  4231c8:	mov    cl,BYTE PTR [esi]
  4231ca:	dec    esp
  4231cb:	neg    bh
  4231cd:	stc    
  4231ce:	mov    al,0xe
  4231d0:	mov    ebp,0xcf976109
  4231d5:	scas   eax,DWORD PTR es:[edi]
  4231d6:	mov    esp,0x58c43fa0
  4231db:	les    edx,FWORD PTR [edx]
  4231dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231de:	imul   esi,DWORD PTR [edx-0x58],0xffffff8e
  4231e2:	retf   
  4231e3:	lds    edi,FWORD PTR [ebp-0x4d]
  4231e6:	imul   esi,ebx,0xffffffb3
  4231e9:	in     eax,0x43
  4231eb:	lock xor al,0x61
  4231ee:	hlt    
  4231ef:	sub    DWORD PTR [edi],ebp
  4231f1:	pop    ecx
  4231f2:	fnstenv [eax]
  4231f4:	push   ebx
  4231f5:	stc    
  4231f6:	shl    cl,0x41
  4231f9:	xchg   esp,eax
  4231fa:	mov    dh,0xb9
  4231fc:	retf   
  4231fd:	aam    0x58
  4231ff:	xchg   edi,eax
  423200:	push   eax
  423201:	je     0x4231c6
  423203:	nop
  423204:	loop   0x4231b6
  423206:	or     al,al
  423208:	inc    eax
  423209:	or     DWORD PTR [ebx+ebp*2+0x638680ca],ecx
  423210:	mov    ss,WORD PTR [esi+edi*4-0x76e95b2a]
  423217:	ds jne 0x4231ea
  42321a:	sub    esi,edi
  42321c:	clc    
  42321d:	push   ebx
  42321e:	(bad)  [edx-0x58]
  423221:	sbb    eax,0x84cd1334
  423226:	xchg   ecx,eax
  423227:	int    0xb5
  423229:	sbb    esi,esp
  42322b:	mov    DWORD PTR [edx-0x33],esi
  42322e:	shl    DWORD PTR [esi],1
  423230:	or     cl,al
  423232:	sub    dl,BYTE PTR [edi]
  423234:	and    BYTE PTR [eax-0x2f],cl
  423237:	mov    ds:0xb78d72ed,eax
  42323c:	adc    al,0x9
  42323e:	cmp    BYTE PTR [edx],dh
  423240:	out    dx,eax
  423241:	cmp    eax,0xb4dabfc2
  423246:	into   
  423247:	js     0x4231cc
  423249:	xchg   ecx,eax
  42324a:	call   0xbf25d79c
  42324f:	inc    cx
  423251:	mov    bh,0x96
  423253:	mov    al,0xf8
  423255:	push   esp
  423256:	adc    ecx,ebx
  423258:	adc    cl,BYTE PTR [esi+0x7f86f8bc]
  42325e:	xor    al,0x67
  423260:	inc    esp
  423261:	pop    edi
  423262:	xchg   ebx,eax
  423263:	aaa    
  423264:	shl    BYTE PTR [ebp-0x54],1
  423267:	dec    bp
  423269:	popf   
  42326a:	out    0x88,al
  42326c:	dec    edi
  42326d:	arpl   WORD PTR [ecx],si
  42326f:	daa    
  423270:	jecxz  0x4232c9
  423272:	adc    DWORD PTR [eax+0x51],0x75
  423276:	test   esp,ebx
  423278:	pusha  
  423279:	daa    
  42327a:	push   0x7d
  42327c:	or     BYTE PTR [esp+ecx*2-0x65],cl
  423280:	outs   dx,DWORD PTR ds:[esi]
  423281:	xor    BYTE PTR [ecx+0x5e67dd05],cl
  423287:	int3   
  423288:	nop
  423289:	in     al,dx
  42328a:	adc    ecx,DWORD PTR [ecx+0x2e]
  42328d:	fcomp  DWORD PTR [edi+0x5e654004]
  423293:	neg    DWORD PTR [ebx]
  423295:	out    dx,al
  423296:	loopne 0x4232b2
  423298:	xor    esi,DWORD PTR ds:0x919f2f3
  42329e:	xchg   edx,eax
  42329f:	mov    edi,0xd8b631c4
  4232a4:	fisubr DWORD PTR [ecx+0x1eba59ae]
  4232aa:	or     dh,dl
  4232ac:	das    
  4232ad:	adc    esp,DWORD PTR [esi]
  4232af:	sbb    BYTE PTR [edi-0xe],al
  4232b2:	gs inc edx
  4232b4:	cmp    al,0xc9
  4232b6:	and    edi,ebp
  4232b8:	cmp    bl,BYTE PTR [edx]
  4232ba:	add    DWORD PTR [ebx-0x74a3f2e5],eax
  4232c0:	je     0x423282
  4232c2:	dec    esp
  4232c3:	outs   dx,BYTE PTR ds:[esi]
  4232c4:	in     eax,dx
  4232c5:	and    al,BYTE PTR [edi-0x4b]
  4232c8:	pop    ss
  4232c9:	push   0x4a
  4232cb:	in     eax,0xfa
  4232cd:	shr    DWORD PTR [ebx+edi*2-0x69],1
  4232d1:	xor    DWORD PTR [ecx+0x7f90390a],edx
  4232d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232d8:	in     al,dx
  4232d9:	adc    al,0xf8
  4232db:	call   0x81b201f7
  4232e0:	add    edi,DWORD PTR [edi]
  4232e2:	test   al,0x5f
  4232e4:	fadd   DWORD PTR [edi+0x74b3cfc2]
  4232ea:	icebp  
  4232eb:	jmp    0xa5f:0x5ca84b0d
  4232f2:	out    dx,al
  4232f3:	push   ebx
  4232f4:	pusha  
  4232f5:	js     0x4232fc
  4232f7:	leave  
  4232f8:	out    0x4a,al
  4232fa:	push   ds
  4232fb:	xor    al,0xf1
  4232fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232fe:	mov    ah,0x55
  423300:	shr    DWORD PTR [edx],cl
  423302:	mov    ebx,fs
  423304:	mov    fs,edx
  423306:	dec    ebp
  423307:	xor    eax,ebx
  423309:	(bad)  
  42330a:	xchg   ebx,eax
  42330b:	loope  0x42335c
  42330d:	cmc    
  42330e:	xchg   ebp,eax
  42330f:	cli    
  423310:	sub    DWORD PTR [ebx+0x42b428d],esp
  423316:	rcr    al,0xc6
  423319:	dec    ebp
  42331a:	and    BYTE PTR [esi],bl
  42331c:	fwait
  42331d:	pop    es
  42331e:	loopne 0x423305
  423320:	sar    edx,cl
  423322:	sti    
  423323:	xchg   edx,eax
  423324:	push   edx
  423325:	cwde   
  423326:	push   ebp
  423327:	add    bh,BYTE PTR [esi+0x5]
  42332a:	aad    0xc
  42332c:	out    dx,eax
  42332d:	xor    ecx,DWORD PTR [eax+0x18]
  423330:	in     eax,dx
  423331:	xchg   esi,eax
  423332:	dec    edx
  423333:	stos   BYTE PTR es:[edi],al
  423334:	mov    ah,0x8c
  423336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423337:	xchg   DWORD PTR [edi],esi
  423339:	xchg   esi,eax
  42333a:	add    BYTE PTR [eax],al
  42333c:	push   cs
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx-0x4f6d7643],edx
  423349:	mov    esi,0xadac4906
  42334e:	add    DWORD PTR [eax],eax
  423350:	xchg   BYTE PTR [edx],al
  423352:	add    BYTE PTR [eax],al
  423354:	cmp    ah,BYTE PTR cs:[ecx-0x6b]
  423358:	and    BYTE PTR [eax+0xe162d8],cl
  42335e:	fdiv   st,st(2)
  423360:	int3   
  423361:	(bad)  
  423363:	push   bp
  423365:	addr16 (bad) 
  423367:	cmc    
  423368:	or     ch,BYTE PTR [edx+0x7b09255d]
  42336e:	dec    edx
  42336f:	adc    eax,0xdde15105
  423374:	pop    es
  423375:	ret    0xe301
  423378:	stos   DWORD PTR es:[edi],eax
  423379:	sbb    DWORD PTR [edx+0x56],ebp
  42337c:	adc    DWORD PTR [ebp+0x5f],ebp
  42337f:	jo     0x4233f5
  423381:	popf   
  423382:	in     eax,0x43
  423384:	cld    
  423385:	daa    
  423386:	or     eax,0x50807d2d
  42338b:	or     ecx,DWORD PTR [esi+0x24]
  42338e:	inc    ecx
  42338f:	bound  esi,QWORD PTR [ebx-0x78]
  423392:	inc    esp
  423393:	mov    WORD PTR [edi],?
  423395:	popa   
  423396:	inc    esi
  423397:	(bad)  
  423398:	pop    eax
  423399:	xchg   esp,eax
  42339a:	call   0x24da74ff
  42339f:	mov    ebp,0xf23ae40d
  4233a4:	xor    eax,0x101a3540
  4233a9:	hlt    
  4233aa:	clc    
  4233ab:	aaa    
  4233ac:	xor    DWORD PTR [eax-0x23],ebp
  4233af:	pop    esp
  4233b0:	neg    ah
  4233b2:	dec    ecx
  4233b3:	mov    DWORD PTR [ecx],esi
  4233b5:	nop
  4233b6:	std    
  4233b7:	jge    0x4233b1
  4233b9:	xchg   edi,eax
  4233ba:	jg     0x423376
  4233bc:	ins    DWORD PTR es:[edi],dx
  4233bd:	arpl   di,di
  4233bf:	int    0xa
  4233c1:	mov    ds:0x3941def0,eax
  4233c6:	xchg   esp,eax
  4233c7:	push   ecx
  4233c8:	jb     0x423433
  4233ca:	repz rcl DWORD PTR [eax+0x431e680],1
  4233d1:	stos   DWORD PTR es:[edi],eax
  4233d2:	mov    WORD PTR [ebx+ecx*4+0x19ce250a],?
  4233d9:	lahf   
  4233da:	xchg   esi,eax
  4233db:	and    BYTE PTR [ebx-0x1308ef79],dl
  4233e1:	mov    ebx,0x53b999aa
  4233e6:	stos   BYTE PTR es:[edi],al
  4233e7:	push   edx
  4233e8:	mov    dl,0x4b
  4233ea:	jecxz  0x4233e5
  4233ec:	faddp  st(3),st
  4233ee:	cmp    edi,DWORD PTR [esi+eiz*8+0x3]
  4233f2:	xchg   edx,eax
  4233f3:	mov    dh,BYTE PTR [edi+0x26a7987b]
  4233f9:	xchg   esp,eax
  4233fa:	dec    esp
  4233fb:	xor    esi,edi
  4233fd:	jb     0x423445
  4233ff:	ss and eax,0x1651000a
  423405:	or     BYTE PTR [edi+0x3c79878a],ah
  42340b:	mov    dh,0x93
  42340d:	fst    QWORD PTR [ecx-0x55]
  423410:	mov    edx,0x43819e94
  423415:	(bad)  
  423416:	mov    esi,0x777c8450
  42341b:	(bad)  
  42341c:	ds cs adc al,0xa4
  423420:	gs jle 0x4233f3
  423423:	fld    DWORD PTR [ebp-0x20]
  423426:	jp     0x42340d
  423428:	gs mov ah,0x84
  42342b:	(bad)  
  42342c:	or     DWORD PTR [ecx],ecx
  42342e:	and    BYTE PTR [edx],bh
  423430:	out    0xcc,eax
  423432:	aam    0x7c
  423434:	cmp    BYTE PTR [ebp-0x36],dh
  423437:	lods   eax,DWORD PTR ds:[esi]
  423438:	and    al,0x59
  42343a:	push   cs
  42343b:	cmp    eax,0xb3a9da37
  423440:	mov    al,0xb9
  423442:	add    cl,BYTE PTR [edx+0x72873191]
  423448:	jnp    0x4234c3
  42344a:	pop    ebx
  42344b:	int3   
  42344c:	popa   
  42344d:	push   ds
  42344e:	add    ch,BYTE PTR [edi+0x13aaed34]
  423454:	(bad)  
  423455:	lods   al,BYTE PTR ds:[esi]
  423456:	bound  esi,QWORD PTR [ecx]
  423458:	cmp    eax,0x1bb58e65
  42345d:	mov    cl,0x98
  42345f:	test   BYTE PTR [eax+ebp*4-0x599ee44d],al
  423466:	lods   al,BYTE PTR ds:[esi]
  423467:	rcr    al,cl
  423469:	inc    ebx
  42346a:	mov    ds,WORD PTR [ebx+0xd]
  42346d:	adc    eax,0x9bb1a6f6
  423472:	leave  
  423473:	jnp    0x4234e3
  423475:	sub    al,0x57
  423477:	dec    edi
  423478:	or     eax,0x891ef90c
  42347d:	daa    
  42347e:	add    eax,0xf9fe9347
  423483:	push   esp
  423484:	mov    ch,0x2b
  423486:	and    esp,ebp
  423488:	outs   dx,DWORD PTR ds:[esi]
  423489:	popf   
  42348a:	test   BYTE PTR [ebx-0x3a],dl
  42348d:	ficomp DWORD PTR [edx+0x4a]
  423490:	int3   
  423491:	repnz jmp 0x509e:0x175f1801
  423499:	or     DWORD PTR [ecx-0x66],0xf2229943
  4234a0:	mov    DWORD PTR [ebp-0x24fe276e],edi
  4234a6:	(bad)  
  4234a7:	adc    ch,ch
  4234a9:	bound  ebx,QWORD PTR [edi+0x4132c012]
  4234af:	gs cld 
  4234b1:	test   eax,0xf8cba07d
  4234b6:	sub    BYTE PTR [eax-0x4e],al
  4234b9:	mov    dh,0x5b
  4234bb:	cmp    esi,esi
  4234bd:	shl    DWORD PTR [esi+0x10fca0cf],1
  4234c3:	mov    al,ds:0xda5c6e79
  4234c8:	cld    
  4234c9:	enter  0x8216,0x6b
  4234cd:	xchg   ebx,eax
  4234ce:	adc    DWORD PTR [ecx],ebx
  4234d0:	push   cs
  4234d1:	fstp   st(4)
  4234d3:	ficomp DWORD PTR [eax+0x2a861776]
  4234d9:	cdq    
  4234da:	aam    0xd8
  4234dc:	cld    
  4234dd:	push   0xffffff9d
  4234df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234e0:	adc    ch,BYTE PTR [edx-0x57943392]
  4234e6:	je     0x4234c2
  4234e8:	ret    
  4234e9:	mov    DWORD PTR [esi-0x7b],edx
  4234ec:	sbb    ecx,DWORD PTR [ecx]
  4234ee:	mov    edx,0x712dcc69
  4234f3:	hlt    
  4234f4:	mov    ch,0xe8
  4234f6:	test   eax,0xbd6ee820
  4234fb:	(bad)  
  4234fc:	(bad)  
  4234fd:	jmp    0xa91a:0xd3b14578
  423504:	adc    esi,DWORD PTR [eax]
  423506:	(bad)  
  423507:	jns    0x42354e
  423509:	sti    
  42350a:	mov    eax,ds:0xf30df25e
  42350f:	jns    0x4234ad
  423511:	lds    esp,FWORD PTR [eax-0x5df5284b]
  423517:	iret   
  423518:	ja     0x423536
  42351a:	xchg   ebp,eax
  42351b:	push   esi
  42351c:	add    cl,cl
  42351e:	pop    es
  42351f:	sub    eax,0xbf2d764b
  423524:	enter  0x786b,0xb2
  423528:	push   ss
  423529:	pop    esp
  42352a:	stc    
  42352b:	shl    BYTE PTR [eax],0x83
  42352e:	inc    eax
  42352f:	push   0xffffffcb
  423531:	lods   eax,DWORD PTR ds:[esi]
  423532:	mov    bh,0x37
  423534:	pop    ebp
  423535:	sub    BYTE PTR [ebx+0x31],bh
  423538:	add    al,0x7c
  42353a:	pop    esi
  42353b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42353c:	loope  0x423559
  42353e:	mov    fs,WORD PTR ds:0xff0c92d2
  423544:	pop    es
  423545:	push   esp
  423546:	lods   al,BYTE PTR ds:[esi]
  423547:	push   ebx
  423548:	mov    dl,0x2
  42354a:	cmc    
  42354b:	sbb    ah,BYTE PTR [ecx-0x5d]
  42354e:	or     al,0xe8
  423550:	add    dh,BYTE PTR [ebx-0x19]
  423553:	(bad)  
  423554:	sbb    ch,cl
  423556:	(bad)  
  423557:	mov    eax,0x9b61780f
  42355c:	pusha  
  42355d:	add    cl,BYTE PTR [eax]
  42355f:	push   eax
  423560:	pop    DWORD PTR [ebp-0x2c]
  423563:	fsubr  QWORD PTR [eax+0x26]
  423566:	xor    BYTE PTR [esi],bh
  423568:	mov    esi,0xafdb9a76
  42356d:	(bad)  [edx+0x57]
  423570:	push   eax
  423571:	jge    0x42352c
  423573:	adc    DWORD PTR [ecx-0x287da5e0],edi
  423579:	call   0x2172:0x9ec2b909
  423580:	dec    esp
  423581:	add    al,0x34
  423583:	mov    al,0xbc
  423585:	mov    dl,al
  423587:	iret   
  423588:	out    0xe8,eax
  42358a:	lds    esp,FWORD PTR [ecx+0x49]
  42358d:	mov    ds:0x468475ee,eax
  423592:	fidivr DWORD PTR [edi-0x425ae670]
  423598:	xchg   esp,eax
  423599:	mov    bh,0xdf
  42359b:	xchg   ebp,eax
  42359c:	or     DWORD PTR [edi-0x2401714a],esp
  4235a2:	loope  0x42354a
  4235a4:	inc    edx
  4235a5:	das    
  4235a6:	xchg   ecx,eax
  4235a7:	repz rcr DWORD PTR [edx+0x7b],1
  4235ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ac:	stc    
  4235ad:	in     al,0x59
  4235af:	ror    DWORD PTR [esi+ecx*8-0x3e692da0],cl
  4235b6:	ror    DWORD PTR [edi-0x3e],cl
  4235b9:	loopne 0x423598
  4235bb:	sbb    bl,bl
  4235bd:	cmp    ebp,edi
  4235bf:	xchg   edx,eax
  4235c0:	fs inc esp
  4235c2:	xor    al,0x8d
  4235c4:	lods   al,BYTE PTR ds:[esi]
  4235c5:	and    al,0x73
  4235c7:	dec    esp
  4235c8:	jb     0x423587
  4235ca:	ds into 
  4235cc:	ins    BYTE PTR es:[edi],dx
  4235cd:	lahf   
  4235ce:	pop    edx
  4235cf:	mov    eax,0xb49dd424
  4235d4:	mov    bh,0xaa
  4235d6:	ret    
  4235d7:	and    ch,ch
  4235d9:	sti    
  4235da:	add    BYTE PTR [eax],al
  4235dc:	pop    esp
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0xd17c851d
  4235eb:	add    dh,BYTE PTR [edx]
  4235ed:	mov    al,0x1
  4235ef:	add    BYTE PTR [esi+0x2f000002],al
  4235f5:	cli    
  4235f6:	mov    bh,0x8a
  4235f8:	mov    edi,0x732e625a
  4235fd:	lods   eax,DWORD PTR ds:[esi]
  4235fe:	lahf   
  4235ff:	mov    ah,0x13
  423601:	retf   
  423602:	or     DWORD PTR [esi+0x55],edi
  423605:	fwait
  423606:	outs   dx,DWORD PTR ds:[esi]
  423607:	pop    ecx
  423608:	dec    ebx
  423609:	cwde   
  42360a:	mov    ecx,0xf0e6a10
  42360f:	(bad)  
  423610:	(bad)  
  423611:	xor    DWORD PTR [esi+ebx*8+0x79],edx
  423615:	test   DWORD PTR [ebx-0x62af30f5],edi
  42361b:	sub    DWORD PTR [ebx-0x1710dff9],ecx
  423621:	push   edi
  423622:	xchg   ebp,eax
  423623:	fwait
  423624:	mov    ?,WORD PTR [ecx+0x3e]
  423627:	inc    esi
  423628:	test   BYTE PTR [ebx+0x26],dl
  42362b:	rol    BYTE PTR [ecx+0x5cf8f4e3],0xdd
  423632:	(bad)  
  423633:	(bad)  
  423634:	jge    0x423659
  423636:	jecxz  0x4236a4
  423638:	add    DWORD PTR [esi-0x43],ecx
  42363b:	mov    ds:0x21bbff5,eax
  423640:	and    dl,ch
  423642:	lods   eax,DWORD PTR ds:[esi]
  423643:	jns    0x423645
  423645:	jo     0x42367b
  423647:	add    DWORD PTR [esi+ecx*1],edx
  42364a:	push   0xffffff8c
  42364c:	daa    
  42364d:	repz pushf 
  42364f:	fcomp  DWORD PTR [eax-0x46]
  423652:	dec    ebx
  423653:	cmp    DWORD PTR [edx-0x12],ecx
  423656:	cli    
  423657:	mov    edx,0xc912e378
  42365c:	jae    0x4235ef
  42365e:	int3   
  42365f:	push   ds
  423660:	gs xor al,0xcb
  423663:	xchg   al,dh
  423665:	ins    BYTE PTR es:[edi],dx
  423666:	scas   al,BYTE PTR es:[edi]
  423667:	jo     0x423645
  423669:	xchg   DWORD PTR [edi+0x22e52fa4],edi
  42366f:	scas   eax,DWORD PTR es:[edi]
  423670:	mov    cl,ah
  423672:	sub    DWORD PTR [esi],ebx
  423674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423675:	or     bl,dl
  423677:	adc    eax,0x4dd31fa7
  42367c:	lock mov edi,DWORD PTR [ebx]
  42367f:	xchg   esp,eax
  423680:	adc    eax,DWORD PTR [eax+ebx*2]
  423683:	stos   BYTE PTR es:[edi],al
  423684:	sbb    al,0x6f
  423686:	push   cs
  423687:	fiadd  WORD PTR [eax+ebp*4]
  42368a:	push   edi
  42368b:	push   0x3881af82
  423690:	xchg   ebx,eax
  423691:	sbb    al,0xc0
  423693:	xor    eax,0xfe97fa4f
  423698:	gs and ebp,edx
  42369b:	inc    eax
  42369c:	xor    bh,bh
  42369e:	and    eax,0x957ef740
  4236a3:	repnz hlt 
  4236a5:	xchg   edi,eax
  4236a6:	ins    BYTE PTR es:[edi],dx
  4236a7:	fs dec ecx
  4236a9:	push   gs
  4236ab:	and    al,BYTE PTR [ecx]
  4236ad:	sub    DWORD PTR [esi],edx
  4236af:	pop    esp
  4236b0:	xchg   ebx,eax
  4236b1:	(bad)  
  4236b2:	ins    BYTE PTR es:[edi],dx
  4236b3:	sbb    BYTE PTR [ebp-0x80],ch
  4236b6:	test   al,0x88
  4236b8:	pushf  
  4236b9:	or     edx,DWORD PTR [edx-0x35]
  4236bc:	cmp    ebx,DWORD PTR [ebx+0x3699d1c1]
  4236c2:	ret    
  4236c3:	jb     0x42371f
  4236c5:	cmc    
  4236c6:	mov    dh,0x7a
  4236c8:	jl     0x4236dd
  4236ca:	and    esi,edx
  4236cc:	repz retf 0xb482
  4236d0:	jmp    0x1d3dc021
  4236d5:	mov    esp,DWORD PTR [edi+0x6043bf1]
  4236db:	jb     0x423665
  4236dd:	repz ret 0xd0f3
  4236e1:	jmp    0x8166:0x8a9e0521
  4236e8:	xor    al,0xa2
  4236ea:	outs   dx,BYTE PTR ds:[esi]
  4236eb:	xchg   ecx,eax
  4236ec:	push   ds
  4236ed:	cmp    BYTE PTR [ecx],dh
  4236ef:	out    0x0,al
  4236f1:	sbb    al,0x74
  4236f3:	adc    ebx,DWORD PTR [ebx-0xe945dfd]
  4236f9:	dec    ebx
  4236fa:	or     ebx,DWORD PTR [ebx+0x11]
  4236fd:	or     DWORD PTR [ebx],0x57a203d5
  423703:	adc    al,0xa6
  423705:	xchg   edx,eax
  423706:	pop    eax
  423707:	jmp    0xbd56:0xaebcbace
  42370e:	xchg   edx,eax
  42370f:	pusha  
  423710:	jb     0x4236c0
  423712:	mov    ecx,0x2dfbe4b3
  423717:	js     0x423700
  423719:	push   esp
  42371a:	rcr    DWORD PTR [ebx],cl
  42371c:	pop    ebp
  42371d:	jmp    0x5cb5:0xbe9b2c53
  423724:	sub    eax,0x5bf9bae1
  423729:	add    bl,BYTE PTR [ebx-0x5b]
  42372c:	pop    esp
  42372d:	pop    ebx
  42372e:	dec    ebp
  42372f:	lock xchg ebp,eax
  423731:	aad    0x36
  423733:	mov    WORD PTR [ecx+0xb367b05],gs
  423739:	cmp    al,0x2d
  42373b:	das    
  42373c:	repnz xor eax,0xafd94033
  423742:	int    0xd3
  423744:	sahf   
  423745:	dec    edi
  423746:	cmp    BYTE PTR [ecx],dl
  423748:	add    eax,0x647a36
  42374d:	lds    eax,FWORD PTR [edi+edx*8+0x185d8cea]
  423754:	loopne 0x4236f6
  423756:	shr    DWORD PTR [eax],0xd3
  423759:	mov    esi,0xa84dffb
  42375e:	ficomp WORD PTR [ebp-0x6083705]
  423764:	push   ebp
  423765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423766:	mov    ecx,fs
  423768:	retf   
  423769:	(bad)  
  42376a:	ins    DWORD PTR es:[edi],dx
  42376b:	inc    eax
  42376c:	ds shl ecx,0xaa
  423770:	jl     0x42370d
  423772:	imul   ecx,DWORD PTR es:[esi+0x6273d9d2],0xffffff89
  42377a:	dec    esi
  42377b:	pop    ss
  42377c:	cmp    eax,0x8556a09
  423781:	(bad)  
  423782:	mov    ebx,0x9327f6e6
  423787:	call   0x2d5912b2
  42378c:	out    0x0,al
  42378e:	pop    ss
  42378f:	loopne 0x4237ce
  423791:	add    eax,0xe3d6abd1
  423796:	out    0x8d,al
  423798:	mov    eax,ds:0x30516d1
  42379d:	push   ebp
  42379e:	icebp  
  42379f:	fldcw  WORD PTR [edx]
  4237a2:	fnstenv [ebx-0x98bfcfc]
  4237a8:	popa   
  4237a9:	jge    0x42381c
  4237ab:	mov    edi,0x346fc8a6
  4237b0:	fsubr  QWORD PTR [ebp+0x4c]
  4237b3:	dec    eax
  4237b4:	sub    DWORD PTR [edx-0x41664baa],edi
  4237ba:	and    DWORD PTR [ebx-0x4f],ebx
  4237bd:	xchg   edi,eax
  4237be:	lods   eax,DWORD PTR ds:[esi]
  4237bf:	mov    al,0xae
  4237c1:	xlat   BYTE PTR ds:[ebx]
  4237c2:	pop    esp
  4237c3:	and    cl,ah
  4237c5:	fst    QWORD PTR [ebx-0x70]
  4237c8:	xor    ah,cl
  4237ca:	out    dx,al
  4237cb:	cmp    ecx,eax
  4237cd:	sbb    cl,bh
  4237cf:	jmp    0xf626f8a0
  4237d4:	sbb    dh,BYTE PTR [ebp+0x20]
  4237d7:	sub    edx,DWORD PTR [edi]
  4237d9:	fdiv   QWORD PTR [esi]
  4237db:	mov    al,0xf6
  4237dd:	mov    dh,0x6a
  4237df:	fld    TBYTE PTR fs:[ebx]
  4237e2:	es mov esi,0x10a9b5cf
  4237e8:	push   ecx
  4237e9:	fs in  eax,0x5b
  4237ec:	pop    es
  4237ed:	lea    ebx,[edi+0x404059e6]
  4237f3:	in     eax,dx
  4237f4:	test   eax,edx
  4237f6:	pop    edi
  4237f7:	or     al,0x82
  4237f9:	in     eax,0x3b
  4237fb:	sbb    cl,BYTE PTR [ecx]
  4237fd:	adc    esi,DWORD PTR [edi*8-0x17442c24]
  423804:	jmp    0x3731a87a
  423809:	and    ch,BYTE PTR [esi-0x7]
  42380c:	cmp    edi,DWORD PTR [edi+esi*4+0x5c0a65c5]
  423813:	push   ebx
  423814:	pop    esp
  423815:	rol    BYTE PTR [ebx-0x30d7ca5e],0x6f
  42381c:	jecxz  0x423803
  42381e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42381f:	inc    ecx
  423820:	pop    ds
  423821:	out    dx,al
  423822:	mov    ebx,DWORD PTR ds:0x92dcbc47
  423828:	or     eax,0x93fd401d
  42382d:	mov    dh,0x32
  42382f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423830:	jb     0x423878
  423832:	cld    
  423833:	dec    esp
  423834:	mov    eax,ds:0x5d6e57db
  423839:	jnp    0x423899
  42383b:	ror    DWORD PTR [ebp-0x6a582b07],1
  423841:	sub    bl,BYTE PTR [edx-0xd06c70e]
  423847:	pop    ecx
  423848:	lahf   
  423849:	fs adc eax,0xc8ced1f3
  42384f:	sbb    ch,BYTE PTR [ecx]
  423851:	stos   BYTE PTR es:[edi],al
  423852:	aam    0xa1
  423854:	mov    DWORD PTR [esi+0x3],0x72eb458b
  42385b:	sbb    DWORD PTR [ecx-0x43],ebp
  42385e:	push   ds
  42385f:	xchg   edi,eax
  423860:	rol    BYTE PTR [edx],1
  423862:	pop    ds
  423863:	hlt    
  423864:	dec    edi
  423865:	mov    ah,0x54
  423867:	inc    edi
  423868:	xlat   BYTE PTR ds:[ebx]
  423869:	rol    ebx,cl
  42386b:	push   es
  42386c:	inc    ecx
  42386e:	mov    edi,0x8e27b714
  423873:	sub    DWORD PTR [edx-0x349256fc],esp
  423879:	mov    cl,0x0
  42387b:	add    BYTE PTR [ebx+0x55],al
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx-0x55bca93d]
  423889:	(bad)  
  42388a:	popf   
  42388b:	cmp    BYTE PTR [eax-0x79fffe4e],0x2
  423892:	add    BYTE PTR [eax],al
  423894:	in     eax,0xd0
  423896:	sbb    eax,0x71e1cfdc
  42389b:	cmp    dh,ah
  42389d:	gs (bad) 
  42389f:	fistp  WORD PTR [edi]
  4238a1:	sti    
  4238a2:	xor    al,0x32
  4238a4:	xchg   ebp,eax
  4238a5:	pop    ebx
  4238a6:	ja     0x423916
  4238a8:	or     dh,BYTE PTR [esi]
  4238aa:	fcmovnb st,st(0)
  4238ac:	movd   mm7,DWORD PTR [ecx]
  4238af:	and    edx,DWORD PTR [eax]
  4238b1:	sahf   
  4238b2:	adc    BYTE PTR [edi-0x39923224],bl
  4238b8:	cdq    
  4238b9:	mov    al,0x1d
  4238bb:	xchg   ebp,eax
  4238bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238bd:	push   esp
  4238be:	ins    BYTE PTR es:[edi],dx
  4238bf:	aas    
  4238c0:	pop    ss
  4238c1:	mov    esi,0x53870513
  4238c6:	and    edx,DWORD PTR ds:0x13eeffdb
  4238cc:	mov    al,ds:0x9fba62b4
  4238d1:	adc    BYTE PTR [ebx-0x427d97a4],al
  4238d7:	inc    eax
  4238d8:	iret   
  4238d9:	aam    0x39
  4238db:	jl     0x4238cd
  4238dd:	jo     0x4238d7
  4238df:	pop    eax
  4238e0:	sbb    bl,ch
  4238e2:	nop
  4238e3:	xchg   edx,eax
  4238e4:	lods   al,BYTE PTR ds:[esi]
  4238e5:	add    ebp,DWORD PTR [ebp+0xc2cf]
  4238eb:	push   eax
  4238ec:	mov    al,0x7f
  4238ee:	(bad)
  4238f2:	sub    dh,BYTE PTR [edi-0x8]
  4238f5:	pushf  
  4238f6:	aad    0x3e
  4238f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238fa:	or     DWORD PTR [ebp-0x75748701],0x2ba1e7a1
  423904:	mov    ch,0x23
  423906:	shr    ebx,cl
  423908:	into   
  423909:	xchg   ebp,eax
  42390a:	pop    esp
  42390b:	sbb    edi,ebp
  42390d:	leave  
  42390e:	pop    ebp
  42390f:	out    dx,al
  423910:	push   0xf817cdf6
  423915:	jmp    0x42394a
  423917:	fsub   QWORD PTR [esi+0x21]
  42391a:	fistp  WORD PTR [edx-0xa7bfd8a]
  423920:	adc    DWORD PTR [eax-0x76df9581],edi
  423926:	mov    ebp,0xf3609ba0
  42392b:	dec    ebx
  42392c:	dec    ecx
  42392d:	int3   
  42392e:	(bad)  
  423930:	jnp    0x423992
  423932:	in     eax,dx
  423933:	retf   
  423934:	icebp  
  423935:	cmp    dl,BYTE PTR [esi]
  423937:	mov    edx,0x733747ae
  42393c:	inc    edi
  42393d:	mul    DWORD PTR [eax-0x130476fc]
  423943:	cli    
  423944:	sbb    BYTE PTR [ebp+0x44],dh
  423947:	in     eax,0x1b
  423949:	js     0x4239ca
  42394b:	out    dx,eax
  42394c:	jmp    0x2274:0xce1de3cc
  423953:	xchg   BYTE PTR [esi+0x447d3aec],ch
  423959:	jo     0x4239a6
  42395b:	addr16 pop edi
  42395d:	into   
  42395e:	(bad)  
  42395f:	xor    bl,al
  423961:	sub    al,0xe5
  423963:	inc    ebx
  423964:	add    BYTE PTR [ebp+0x25],cl
  423967:	push   ecx
  423968:	shl    BYTE PTR [ebx],0x39
  42396b:	mov    ecx,0x6889d536
  423970:	fild   WORD PTR [esi+esi*2+0x18]
  423974:	popa   
  423975:	fs cmp esp,ebp
  423978:	xchg   esi,eax
  423979:	xchg   esp,eax
  42397a:	repnz push es
  42397c:	xor    al,0x18
  42397e:	mov    BYTE PTR ss:[edx+0x773aeb3a],cl
  423985:	add    eax,DWORD PTR [ebx]
  423987:	sar    BYTE PTR [ecx+0x60],1
  42398a:	repnz test DWORD PTR [edi+0x5e],esp
  42398e:	in     eax,dx
  42398f:	fucomip st,st(1)
  423991:	iret   
  423992:	inc    edi
  423993:	pushf  
  423994:	push   es
  423995:	jge    0x4239e6
  423997:	jecxz  0x423a0c
  423999:	loopne 0x42393e
  42399b:	bound  esi,QWORD PTR [ebx+eiz*4-0x2f]
  42399f:	iret   
  4239a0:	add    edi,edx
  4239a2:	test   BYTE PTR [ebp-0x38a866],dl
  4239a8:	add    ebp,DWORD PTR [edx-0x6a]
  4239ab:	xchg   DWORD PTR [edi-0x5da0a208],ecx
  4239b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b2:	cmp    BYTE PTR [ecx+0x171c2347],bh
  4239b8:	mov    cl,0xfb
  4239ba:	inc    esp
  4239bb:	popa   
  4239bc:	push   cs
  4239bd:	adc    eax,0x3099d521
  4239c2:	je     0x423955
  4239c4:	sar    dl,0xbb
  4239c7:	jbe    0x4239ec
  4239c9:	ror    DWORD PTR [eax-0x6edc081c],1
  4239cf:	daa    
  4239d0:	jne    0x4239f9
  4239d2:	daa    
  4239d3:	mov    cs,WORD PTR [edx]
  4239d5:	adc    al,0xe6
  4239d7:	pop    ds
  4239d8:	jns    0x423a2b
  4239da:	rol    ebx,cl
  4239dc:	mov    cl,BYTE PTR [edx+0x7d]
  4239df:	popa   
  4239e0:	sub    al,0x75
  4239e2:	mov    ebx,0x9248bbd0
  4239e7:	xchg   ch,bl
  4239e9:	sub    eax,0xa6bcf0a9
  4239ee:	sub    esi,0xf
  4239f1:	sub    DWORD PTR [eax-0x50f817fe],0x1b
  4239f8:	retf   
  4239f9:	jl     0x4239af
  4239fb:	jmp    0x423a49
  4239fd:	push   eax
  4239fe:	cmp    dl,BYTE PTR [eax+0x70]
  423a01:	(bad)  
  423a02:	sar    BYTE PTR [ebx+0x3e12bf14],1
  423a08:	icebp  
  423a09:	and    dl,bh
  423a0b:	add    DWORD PTR [edi],0x5d5e5faf
  423a11:	jae    0x423a4b
  423a13:	(bad)  
  423a14:	das    
  423a15:	push   ss
  423a16:	xchg   BYTE PTR [eax+ecx*4],dh
  423a19:	xor    al,dh
  423a1b:	scas   al,BYTE PTR es:[edi]
  423a1c:	inc    ebx
  423a1d:	and    DWORD PTR [esi+0x1a],esi
  423a20:	je     0x4239ed
  423a22:	outs   dx,DWORD PTR ds:[esi]
  423a23:	mov    BYTE PTR [edi-0x6fbc3b53],bh
  423a29:	retf   
  423a2a:	js     0x4239ff
  423a2c:	add    DWORD PTR [eax+0x4d84aeb7],ebp
  423a32:	scas   al,BYTE PTR es:[edi]
  423a33:	mov    ebx,0x48f33442
  423a38:	imul   ebp,DWORD PTR [esi-0x24],0x6846d47a
  423a3f:	sbb    eax,0x6d022618
  423a44:	add    BYTE PTR [esi-0x41],ch
  423a47:	dec    eax
  423a48:	je     0x423a05
  423a4a:	test   eax,0xa0d0e553
  423a4f:	int    0xeb
  423a51:	in     al,0xc8
  423a53:	jg     0x423a83
  423a55:	jge    0x423acd
  423a57:	xchg   DWORD PTR [esi],ebx
  423a59:	jno    0x4239e9
  423a5b:	xchg   edi,eax
  423a5c:	add    dh,bh
  423a5e:	xor    BYTE PTR [edi],dl
  423a60:	nop
  423a61:	jns    0x423a66
  423a63:	sahf   
  423a64:	lock dec ebx
  423a66:	jo     0x423a84
  423a68:	repnz xchg ecx,eax
  423a6a:	xchg   ecx,eax
  423a6b:	sub    DWORD PTR [ebx+0x60],0xb98b02ef
  423a72:	dec    ebx
  423a73:	mov    esp,0x267f1126
  423a78:	xchg   ebp,eax
  423a79:	into   
  423a7a:	xchg   esi,eax
  423a7b:	(bad)  
  423a7c:	(bad)  
  423a7d:	push   es
  423a7e:	cwde   
  423a7f:	adc    al,0x78
  423a81:	mov    BYTE PTR [eax+0x1e65858b],ch
  423a87:	iret   
  423a88:	pop    es
  423a89:	mov    dl,0x8f
  423a8b:	imul   esp,DWORD PTR [edi+0x6ede4a0d],0xbe87d593
  423a95:	dec    edx
  423a96:	and    ah,BYTE PTR [ebx]
  423a98:	ins    BYTE PTR es:[edi],dx
  423a99:	test   ah,ah
  423a9b:	pop    ds
  423a9c:	cmp    al,0x78
  423a9e:	out    dx,al
  423a9f:	dec    eax
  423aa0:	loope  0x423b0f
  423aa2:	cmc    
  423aa3:	(bad)  
  423aa6:	retf   0x6843
  423aa9:	or     edi,DWORD PTR [edx]
  423aab:	mov    ah,0x63
  423aad:	adc    DWORD PTR [edx-0x2d],esp
  423ab0:	jno    0x423ad8
  423ab2:	loop   0x423b22
  423ab4:	adc    eax,0xec74f4fc
  423ab9:	mov    ebp,0x72613c7e
  423abe:	cmp    DWORD PTR [edx+0x2097153e],ebx
  423ac4:	scas   al,BYTE PTR es:[edi]
  423ac5:	aam    0x8e
  423ac7:	call   0x1df7ca56
  423acc:	adc    BYTE PTR [ecx],ch
  423ace:	(bad)  
  423acf:	cmp    esi,DWORD PTR [edx]
  423ad1:	stos   DWORD PTR es:[edi],eax
  423ad2:	mov    dl,0x48
  423ad4:	pop    es
  423ad5:	in     eax,0xe
  423ad7:	jecxz  0x423b27
  423ad9:	cmp    al,0x6e
  423adb:	mov    edi,0xd23402f8
  423ae0:	pop    ecx
  423ae1:	xor    ebx,DWORD PTR [ebp-0x16]
  423ae4:	jge    0x423adf
  423ae6:	outs   dx,DWORD PTR ds:[esi]
  423ae7:	rcl    dh,0xf3
  423aea:	ds imul esi,ecx,0xa9fc0b45
  423af1:	jb     0x423a8e
  423af3:	arpl   WORD PTR [eax-0x5fb1ae01],ax
  423af9:	or     al,0x90
  423afb:	mov    BYTE PTR [esi+0x61],ah
  423afe:	pop    ebx
  423aff:	cmp    dh,dl
  423b01:	nop
  423b02:	dec    eax
  423b03:	sbb    al,0x91
  423b05:	loopne 0x423aed
  423b07:	and    al,0x8e
  423b09:	aad    0x4e
  423b0b:	dec    BYTE PTR [ecx]
  423b0d:	cmp    DWORD PTR [esi],0x5d
  423b10:	mov    bh,0x15
  423b12:	add    eax,0x9a5f9ef1
  423b17:	push   edi
  423b18:	mov    ch,0x35
  423b1a:	add    BYTE PTR [eax],al
  423b1c:	push   edi
  423b1d:	sub    eax,0xba7f9a07
  423b22:	fucomip st,st(5)
  423b24:	ficom  WORD PTR [ebp+0x41]
  423b27:	adc    al,0x79
  423b29:	call   0xb580f9eb
  423b2e:	add    DWORD PTR [eax],eax
  423b30:	xchg   BYTE PTR [edx],al
  423b32:	add    BYTE PTR [eax],al
  423b34:	sbb    BYTE PTR [ebp-0x65],cl
  423b37:	aam    0x42
  423b39:	fucom  st(3)
  423b3b:	inc    edx
  423b3c:	rcr    DWORD PTR cs:[ecx+0x2d],cl
  423b40:	sub    ebp,esp
  423b42:	xchg   esi,eax
  423b43:	call   0x6609:0x7bffad15
  423b4a:	test   eax,0x35f9cc62
  423b4f:	out    0x19,eax
  423b51:	push   edx
  423b52:	inc    edi
  423b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b54:	jg     0x423ae9
  423b56:	in     eax,dx
  423b57:	cmp    ebx,DWORD PTR [ecx]
  423b59:	cmp    BYTE PTR [eax+0x44828e40],ah
  423b5f:	mov    eax,ds:0x15fb611c
  423b64:	ret    0xde10
  423b67:	push   esp
  423b68:	push   eax
  423b69:	push   ds
  423b6a:	fstp   TBYTE PTR [edx+edx*2]
  423b6d:	jae    0x423b0f
  423b6f:	lock xchg esi,eax
  423b71:	jmp    0x903dc6c0
  423b76:	push   0x2f933746
  423b7b:	xor    DWORD PTR [ecx+0x4bcb7e8e],edx
  423b81:	sbb    al,0x4b
  423b83:	mov    esp,0x3f46a745
  423b88:	bound  edi,QWORD PTR [edx+ebx*4+0x13]
  423b8c:	cmp    DWORD PTR [edi+0xdbfcd8f],ebp
  423b92:	mov    bh,BYTE PTR [eax+0x55]
  423b95:	mov    ecx,0xaacd2de4
  423b9a:	or     esi,DWORD PTR [ebx]
  423b9c:	mov    ds:0x95cebd47,eax
  423ba1:	xchg   edi,eax
  423ba2:	sbb    ebp,edx
  423ba4:	mov    esi,0xd32a06bb
  423ba9:	jg     0x423bbe
  423bab:	ret    
  423bac:	das    
  423bad:	jle    0x423bd5
  423baf:	shl    esp,0xf2
  423bb2:	jbe    0x423b63
  423bb4:	ror    DWORD PTR [ecx],0xee
  423bb7:	ins    BYTE PTR es:[edi],dx
  423bb8:	jge    0x423be6
  423bba:	jmp    0x423bfe
  423bbc:	sub    al,0xce
  423bbe:	xchg   edi,eax
  423bbf:	cmp    BYTE PTR [edx-0x13140733],0x83
  423bc6:	xchg   ecx,eax
  423bc7:	push   0x72
  423bc9:	or     edi,DWORD PTR [eax-0x79f1f37d]
  423bcf:	loope  0x423bf0
  423bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bd2:	push   edi
  423bd3:	out    dx,eax
  423bd4:	mov    ebp,0xdcde2a32
  423bd9:	sti    
  423bda:	ret    0x45c9
  423bdd:	mov    ds:0xf4ac6b84,eax
  423be2:	jge    0x423b64
  423be4:	outs   dx,BYTE PTR ds:[esi]
  423be5:	es jo  0x423c4f
  423be8:	cli    
  423be9:	xchg   BYTE PTR [ebx],dl
  423beb:	pop    ebx
  423bec:	cmp    BYTE PTR [ecx-0xe],ch
  423bef:	mov    ds:0x33134bd,al
  423bf4:	cld    
  423bf5:	in     eax,dx
  423bf6:	add    cl,bl
  423bf8:	inc    edx
  423bf9:	enter  0xdbb3,0x3c
  423bfd:	mov    ecx,0xfd99c622
  423c02:	dec    esp
  423c03:	data16 mov dl,0xc7
  423c06:	sbb    edi,ebx
  423c08:	mov    dl,BYTE PTR [ecx]
  423c0a:	daa    
  423c0b:	mov    BYTE PTR ds:0xae8452bb,0xda
  423c12:	pushf  
  423c13:	fcom   DWORD PTR [ebp+0x4a]
  423c16:	aam    0x5a
  423c18:	int    0x56
  423c1a:	mov    al,ds:0x71cb25a3
  423c1f:	lods   eax,DWORD PTR ds:[esi]
  423c20:	jge    0x423bf2
  423c22:	in     eax,0x68
  423c24:	mov    ?,WORD PTR [ecx-0x5cfc0d93]
  423c2a:	retf   
  423c2b:	psubd  mm7,QWORD PTR [eax]
  423c2e:	sub    edx,DWORD PTR [ecx+0x679eb73b]
  423c34:	jne    0x423be8
  423c36:	ret    
  423c37:	enter  0x4aab,0x74
  423c3b:	pop    edi
  423c3c:	and    DWORD PTR [esi],ebp
  423c3e:	popf   
  423c3f:	adc    BYTE PTR fs:[edx-0x7cabf4e7],cl
  423c46:	sar    BYTE PTR [esi+ebx*1-0x760758a9],1
  423c4d:	data16 add BYTE PTR [ecx+0x76e162c8],bh
  423c54:	in     eax,dx
  423c55:	jnp    0x423c39
  423c57:	repnz mov ebx,0x8b764a77
  423c5d:	pop    edi
  423c5e:	js     0x423cca
  423c60:	(bad)  
  423c61:	pop    eax
  423c62:	jae    0x423c6b
  423c64:	mov    edi,0x10001b6d
  423c69:	out    dx,eax
  423c6a:	or     eax,0xac381899
  423c6f:	push   ebx
  423c70:	lds    eax,FWORD PTR [ecx+ebx*8]
  423c73:	inc    eax
  423c74:	pusha  
  423c75:	iret   
  423c76:	clc    
  423c77:	inc    esi
  423c79:	ins    DWORD PTR es:[edi],dx
  423c7a:	jbe    0x423c4e
  423c7c:	jb     0x423c2f
  423c7e:	dec    ebp
  423c7f:	xchg   BYTE PTR [edx-0x137fbe7],al
  423c85:	xchg   ebp,eax
  423c86:	inc    esi
  423c87:	adc    al,0x4d
  423c89:	call   0xecfad85d
  423c8e:	or     dh,BYTE PTR [eax+0x1f]
  423c91:	push   cs
  423c92:	pop    edx
  423c93:	push   edx
  423c94:	or     dl,dh
  423c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c97:	inc    edi
  423c98:	xor    ch,BYTE PTR [esi+0x3]
  423c9b:	dec    ecx
  423c9c:	(bad)  
  423c9d:	jmp    DWORD PTR [ebp+0x18]
  423ca0:	cli    
  423ca1:	mov    bl,BYTE PTR [ecx-0xb589b8c]
  423ca7:	scas   eax,DWORD PTR es:[edi]
  423ca8:	xor    ch,BYTE PTR [edi-0x6d]
  423cab:	sub    DWORD PTR [eax-0x1b3be389],ebx
  423cb1:	mov    ah,0x75
  423cb3:	test   DWORD PTR [esi],ecx
  423cb5:	add    DWORD PTR [ebx-0x6e91006d],edx
  423cbb:	adc    al,0xe4
  423cbd:	xor    eax,DWORD PTR [ecx+0x29c1e56a]
  423cc3:	scas   eax,DWORD PTR es:[edi]
  423cc4:	and    edi,DWORD PTR [edx-0xd05bb31]
  423cca:	add    eax,0xde71274a
  423ccf:	push   edx
  423cd0:	fst    DWORD PTR [edx+0x58f47054]
  423cd6:	outs   dx,BYTE PTR ds:[esi]
  423cd7:	shl    bl,cl
  423cd9:	test   eax,0x52d1b2fc
  423cde:	push   ecx
  423cdf:	cmp    BYTE PTR [ebx-0x2d],bl
  423ce2:	pop    ebx
  423ce3:	or     DWORD PTR [ebx-0x1f],ecx
  423ce6:	fs in  al,dx
  423ce8:	sub    DWORD PTR [ebx-0x23],esi
  423ceb:	ror    edi,1
  423ced:	inc    edi
  423cee:	xor    DWORD PTR [edi+0x3e435817],eax
  423cf4:	enter  0xbded,0xea
  423cf8:	inc    esp
  423cf9:	fsub   st,st(3)
  423cfb:	dec    BYTE PTR [ebx]
  423cfd:	push   0xffffffef
  423cff:	push   0x6
  423d01:	jb     0x423ce8
  423d03:	jae    0x423c8c
  423d05:	or     BYTE PTR [ebp-0x7d7cf5b9],al
  423d0b:	inc    esi
  423d0c:	sbb    DWORD PTR [edx+0x5f],eax
  423d0f:	pop    esp
  423d10:	sub    al,0xd0
  423d12:	into   
  423d13:	cmp    BYTE PTR [ecx+ecx*4+0x6670bb0],al
  423d1a:	or     eax,0x4fbdf562
  423d1f:	jg     0x423d22
  423d21:	sbb    ebp,0xd965598b
  423d27:	ins    DWORD PTR es:[edi],dx
  423d28:	mov    DWORD PTR [ebx],esp
  423d2a:	mov    dh,0xf2
  423d2c:	test   eax,0x56ef4e99
  423d31:	in     al,0x5e
  423d33:	out    0x52,eax
  423d35:	dec    esp
  423d36:	dec    edi
  423d37:	rcl    BYTE PTR [ebx+ebp*8+0x1a2b0b4b],1
  423d3e:	stos   DWORD PTR es:[edi],eax
  423d3f:	int    0x20
  423d41:	cmp    ecx,eax
  423d43:	sar    BYTE PTR [edx],cl
  423d45:	pop    ss
  423d46:	mov    edi,0xa1cd1639
  423d4b:	out    0xfe,eax
  423d4d:	aaa    
  423d4e:	loop   0x423da0
  423d50:	inc    esp
  423d51:	jl     0x423dd0
  423d53:	mov    dh,0x9e
  423d55:	sub    ch,BYTE PTR [ecx+0x58]
  423d58:	addr16 cmc 
  423d5a:	inc    ecx
  423d5b:	push   ebx
  423d5c:	stos   BYTE PTR es:[edi],al
  423d5d:	test   DWORD PTR [ebp+0x2b],edi
  423d60:	dec    ecx
  423d61:	sbb    DWORD PTR [edi+0xf],eax
  423d64:	mov    ah,BYTE PTR [esi-0x353ee5d]
  423d6a:	adc    esp,ebp
  423d6c:	xchg   ecx,eax
  423d6d:	jne    0x423dd9
  423d6f:	or     BYTE PTR [esi],0xb9
  423d72:	xor    ah,BYTE PTR [ebx-0xe]
  423d75:	xchg   BYTE PTR [ebx+0x75d810ee],al
  423d7b:	mov    ebx,0x607e3655
  423d80:	rol    BYTE PTR [ebx],0x33
  423d83:	in     al,0x0
  423d85:	in     eax,dx
  423d86:	retf   
  423d87:	in     al,dx
  423d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d89:	mov    ebx,0xb71287b2
  423d8e:	xchg   edi,eax
  423d8f:	xor    DWORD PTR [eax+0xa],esp
  423d92:	adc    DWORD PTR [eax],edx
  423d94:	jnp    0x423d5a
  423d96:	xor    BYTE PTR [ebx+0x4e],dh
  423d99:	mov    ds:0x587f7358,eax
  423d9e:	add    ebp,DWORD PTR ds:0x3db1b44f
  423da4:	imul   edx,DWORD PTR [edi+edx*8-0x60],0xffffffed
  423da9:	out    dx,eax
  423daa:	cmp    eax,eax
  423dac:	das    
  423dad:	loope  0x423e09
  423daf:	sub    al,0xda
  423db1:	in     al,dx
  423db2:	sub    eax,0x1ac49443
  423db7:	leave  
  423db8:	pusha  
  423db9:	mov    edx,0x2a6c0000
  423dbe:	sub    esp,DWORD PTR [esi]
  423dc0:	outs   dx,DWORD PTR ds:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    esp,DWORD PTR [esi]
  423dc9:	pop    ebp
  423dca:	jne    0x423dcc
  423dcc:	les    esi,FWORD PTR [edi+0x2860001]
  423dd2:	add    BYTE PTR [eax],al
  423dd4:	(bad)  
  423dd5:	adc    BYTE PTR [ebp+0x7697f5c6],dh
  423ddb:	mov    cl,0x83
  423ddd:	ficom  WORD PTR [eax-0x25]
  423de0:	ds inc edi
  423de2:	xchg   esi,eax
  423de3:	ins    BYTE PTR es:[edi],dx
  423de4:	jge    0x423db9
  423de6:	mov    dh,0x84
  423de8:	ds jl  0x423d7e
  423deb:	mov    al,0x17
  423ded:	lea    edx,[esi]
  423def:	cmp    al,0xeb
  423df1:	xchg   esi,eax
  423df2:	int    0xa0
  423df4:	push   ecx
  423df5:	lock rcl ebx,1
  423df8:	sub    edx,DWORD PTR [edi+0x48]
  423dfb:	mov    ebx,0xc319418e
  423e00:	sbb    BYTE PTR [ecx],cl
  423e02:	pop    ecx
  423e03:	or     BYTE PTR [esi],cl
  423e05:	jae    0x423dbf
  423e07:	xchg   ecx,eax
  423e08:	dec    edi
  423e09:	inc    ecx
  423e0a:	jo     0x423e21
  423e0c:	pushf  
  423e0d:	adc    ecx,ecx
  423e0f:	add    cl,ch
  423e11:	xchg   esp,eax
  423e12:	data16 jbe 0x423d95
  423e15:	pop    ds
  423e16:	int    0x59
  423e18:	fsub   st(6),st
  423e1a:	or     dl,0x8
  423e1d:	aas    
  423e1e:	xchg   esp,eax
  423e1f:	sub    BYTE PTR [ebx],bl
  423e21:	and    DWORD PTR [eax+0x1e],0xa3a628eb
  423e28:	retf   
  423e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e2a:	popa   
  423e2b:	dec    ecx
  423e2c:	in     al,0x13
  423e2e:	ja     0x423db4
  423e30:	(bad)  
  423e32:	dec    edi
  423e33:	in     eax,0x48
  423e35:	loope  0x423e20
  423e37:	mov    esi,0x230805f3
  423e3c:	pop    edi
  423e3d:	loop   0x423dd7
  423e3f:	imul   esp,DWORD PTR [ebp-0x5a],0xa2908b8c
  423e46:	push   ecx
  423e47:	pop    ebx
  423e48:	loop   0x423e83
  423e4a:	ins    DWORD PTR es:[edi],dx
  423e4b:	sub    dl,dh
  423e4d:	inc    ecx
  423e4e:	jl     0x423e62
  423e50:	shl    dl,0x59
  423e53:	lea    eax,[eax-0x6cf55e38]
  423e59:	mov    DWORD PTR [edi],edi
  423e5b:	rol    BYTE PTR [esi-0xf384663],cl
  423e61:	out    0x4b,eax
  423e63:	repnz imul ebx,DWORD PTR [ebx+0x76],0xf45c9b86
  423e6b:	jp     0x423df8
  423e6d:	jae    0x423dfa
  423e6f:	or     eax,0x7390d7
  423e74:	lahf   
  423e75:	jmp    0x423e84
  423e77:	into   
  423e78:	and    edx,DWORD PTR [edx-0x4dda003f]
  423e7e:	push   0x24
  423e80:	sub    DWORD PTR [ebp-0x73],edx
  423e83:	add    ebp,edx
  423e85:	data16 js 0x423ee9
  423e88:	rcr    DWORD PTR [ebx+0x46eacd31],cl
  423e8e:	xor    ah,bl
  423e90:	imul   esp,ecx,0xee04bfd5
  423e96:	aad    0xcd
  423e98:	pop    esi
  423e99:	xchg   ecx,eax
  423e9a:	xchg   edx,eax
  423e9b:	ins    BYTE PTR es:[edi],dx
  423e9c:	inc    esp
  423e9d:	ins    DWORD PTR es:[edi],dx
  423e9e:	xchg   esi,eax
  423e9f:	xchg   esp,eax
  423ea0:	jge    0x423e59
  423ea2:	jge    0x423e6e
  423ea4:	mov    ds:0x1d891c78,eax
  423ea9:	imul   ebx,esp,0x1c
  423eac:	dec    esi
  423ead:	lods   eax,DWORD PTR ds:[esi]
  423eae:	stos   DWORD PTR es:[edi],eax
  423eaf:	sbb    eax,0xcac3de47
  423eb4:	and    BYTE PTR [esi-0x2c073fd3],0x4e
  423ebb:	not    DWORD PTR [ecx]
  423ebd:	fadd   DWORD PTR [ecx]
  423ebf:	sub    BYTE PTR [ebx+edx*1],bl
  423ec2:	cmp    eax,0x22a084ad
  423ec7:	test   al,0xde
  423ec9:	or     ebp,DWORD PTR [edx+0x586d9dca]
  423ecf:	push   es
  423ed0:	sub    bh,BYTE PTR [esi-0x17]
  423ed3:	jb     0x423ea3
  423ed5:	js     0x423ecc
  423ed7:	push   0x2d
  423ed9:	fcom   QWORD PTR [ecx]
  423edb:	sahf   
  423edc:	or     DWORD PTR [ebx+0x19],esi
  423edf:	fcom   QWORD PTR [edi+ebx*2-0x9668b0f]
  423ee6:	mov    ecx,0xf6df1d14
  423eeb:	adc    DWORD PTR [ebx],edx
  423eed:	imul   ecx,edi,0xffffffb0
  423ef0:	inc    edi
  423ef1:	sbb    cl,BYTE PTR [eax]
  423ef3:	icebp  
  423ef4:	pop    edx
  423ef5:	xor    BYTE PTR [eax],bl
  423ef7:	xchg   esp,eax
  423ef8:	iret   
  423ef9:	sub    BYTE PTR [esi+ebp*4],ch
  423efc:	jg     0x423f0a
  423efe:	rcr    DWORD PTR [ecx],1
  423f00:	fdivp  st(2),st
  423f02:	rcr    edi,1
  423f04:	pushf  
  423f05:	call   0x53f08b89
  423f0a:	add    DWORD PTR [esi],0xd6de2a3c
  423f10:	ins    DWORD PTR es:[edi],dx
  423f11:	dec    edx
  423f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f13:	and    DWORD PTR [ebx],0x2e
  423f16:	pop    ss
  423f17:	test   al,0x35
  423f19:	loope  0x423ea8
  423f1b:	push   ebx
  423f1c:	mov    ds:0x24d2f71d,al
  423f21:	ins    BYTE PTR es:[edi],dx
  423f22:	lods   al,BYTE PTR ds:[esi]
  423f23:	in     al,dx
  423f24:	leave  
  423f25:	jbe    0x423eb9
  423f27:	sbb    eax,0xad2234a9
  423f2c:	repz rcr DWORD PTR [edx],cl
  423f2f:	sti    
  423f30:	iret   
  423f31:	or     al,0xa7
  423f33:	push   cs
  423f34:	sub    DWORD PTR [esi-0x1c],esp
  423f37:	std    
  423f38:	shl    DWORD PTR [edx],1
  423f3a:	and    eax,edx
  423f3c:	jnp    0x423f08
  423f3e:	js     0x423f5a
  423f40:	xor    edi,DWORD PTR [ecx+eax*8]
  423f43:	sub    BYTE PTR [ecx+edx*2+0x44],al
  423f47:	sbb    al,0x25
  423f49:	add    dh,BYTE PTR [ebx]
  423f4b:	das    
  423f4c:	setnp  BYTE PTR [eax+0x7a]
  423f50:	ret    
  423f51:	mov    bh,0x1f
  423f53:	call   0xff80e614
  423f58:	popa   
  423f59:	push   ebp
  423f5a:	aam    0x77
  423f5c:	shr    BYTE PTR [ecx+edi*4+0x54],1
  423f60:	fsubr  DWORD PTR [ecx+0x4c]
  423f63:	xor    DWORD PTR [ebp+0x6f],edx
  423f66:	jmp    0x8773:0x20a5cd4e
  423f6d:	cmp    BYTE PTR [esi+0x2f334a81],0xd
  423f74:	aam    0xc4
  423f76:	cmp    DWORD PTR [esi+0x17e791f5],ebp
  423f7c:	and    al,0x75
  423f7e:	jnp    0x423f91
  423f80:	sbb    BYTE PTR [eax+eiz*4+0xc50772a],bh
  423f87:	sar    DWORD PTR [ebx-0x7e0a591d],1
  423f8d:	into   
  423f8e:	pop    ecx
  423f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f90:	or     ah,al
  423f92:	inc    esp
  423f93:	cmp    BYTE PTR [ecx+0x21],bl
  423f96:	fs mov ecx,0xd9f53ff3
  423f9c:	and    al,0xd5
  423f9e:	rcr    DWORD PTR [edx-0x3f],0x63
  423fa2:	sub    BYTE PTR [ebx],bl
  423fa4:	mov    dl,0x83
  423fa6:	cmp    al,0x9d
  423fa8:	lods   al,BYTE PTR ds:[esi]
  423fa9:	and    ah,BYTE PTR [ebp-0x68384e8c]
  423faf:	outs   dx,DWORD PTR ds:[esi]
  423fb0:	adc    al,0x8b
  423fb2:	xchg   ebx,eax
  423fb3:	es aaa 
  423fb5:	push   edi
  423fb6:	and    DWORD PTR [esp+edx*2],edx
  423fb9:	or     bl,BYTE PTR [edi+eax*1-0x71]
  423fbd:	scas   al,BYTE PTR es:[edi]
  423fbe:	cs mov dh,0xa8
  423fc1:	ss sbb ah,ch
  423fc4:	gs adc esp,ecx
  423fc7:	mov    edx,cs
  423fc9:	inc    edi
  423fca:	push   cs
  423fcb:	pop    esi
  423fcc:	out    0xd2,al
  423fce:	dec    ecx
  423fcf:	scas   eax,DWORD PTR es:[edi]
  423fd0:	lods   al,BYTE PTR ds:[esi]
  423fd1:	(bad)  
  423fd3:	xor    bh,BYTE PTR [esi+0x8]
  423fd6:	ret    0x39cc
  423fd9:	add    DWORD PTR [ebp+0x3a],esp
  423fdc:	pop    ss
  423fdd:	xchg   edx,eax
  423fde:	adc    eax,0xc5fb6df7
  423fe3:	jae    0x423fd3
  423fe5:	sbb    ebp,0x7c2b320e
  423feb:	dec    edx
  423fec:	or     BYTE PTR [ecx+0x6f],bh
  423fef:	pop    edi
  423ff0:	bnd ja 0x424049
  423ff3:	daa    
  423ff4:	sbb    ebp,eax
  423ff6:	inc    esi
  423ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff8:	mov    bh,0xb3
  423ffa:	inc    esi
  423ffb:	inc    ecx
  423ffc:	ret    
  423ffd:	dec    edi
  423ffe:	lock push 0x2
  424001:	es loopne 0x423ffc
  424004:	fbstp  TBYTE PTR [edi+0x70]
  424007:	and    eax,0xff077549
  42400c:	mov    WORD PTR [edx-0x3211100c],ss
  424012:	pop    esi
  424013:	ja     0x42404d
  424015:	outs   dx,DWORD PTR ds:[esi]
  424017:	inc    edx
  424018:	leave  
  424019:	fdiv   QWORD PTR [edi]
  42401b:	fiadd  WORD PTR [edi]
  42401d:	push   ecx
  42401e:	pop    es
  42401f:	(bad)  
  424020:	cmp    BYTE PTR [eax],bl
  424022:	mov    bh,0x27
  424024:	imul   edi,DWORD PTR [esi+0x6d],0xda8444c8
  42402b:	add    edi,DWORD PTR [eax]
  42402d:	or     bl,BYTE PTR [ecx+0x3a]
  424030:	xchg   edi,eax
  424031:	(bad)  
  424032:	es ds pusha 
  424035:	sbb    eax,0xa1c7d28d
  42403a:	mov    edi,0xdb3ca5a8
  42403f:	rcl    BYTE PTR [edi-0x28d25df3],1
  424045:	lods   eax,DWORD PTR ds:[esi]
  424046:	jae    0x423ff4
  424048:	test   DWORD PTR [eax+0x3b],ebp
  42404b:	cmp    dl,BYTE PTR [edx+ecx*4-0x45]
  42404f:	mov    eax,0x4052eb45
  424054:	dec    esi
  424055:	out    dx,al
  424056:	(bad)  
  424057:	ds mov esp,0x430000a5
  42405d:	lea    ebx,[edi]
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx+0x73b42710],dl
  42406a:	pmullw mm1,QWORD PTR [edx-0x46]
  42406e:	add    DWORD PTR [eax],eax
  424070:	xchg   BYTE PTR [edx],al
  424072:	add    BYTE PTR [eax],al
  424074:	jmp    0x4240c0
  424076:	call   0xb7d9:0xae645c94
  42407d:	fnstcw WORD PTR [esp+ebp*1+0x12]
  424081:	or     ch,BYTE PTR [edi-0x31]
  424084:	jnp    0x4240fb
  424086:	les    edi,FWORD PTR [esi+0x38c9e1df]
  42408c:	mov    edx,0x23c34d7b
  424091:	retf   
  424092:	dec    esp
  424093:	std    
  424094:	jg     0x42407a
  424096:	and    eax,0x30fdee7c
  42409b:	sbb    ch,0xcb
  42409e:	jl     0x424090
  4240a0:	inc    edi
  4240a1:	xchg   esp,eax
  4240a2:	fistp  DWORD PTR [eax+0x22]
  4240a5:	sti    
  4240a6:	arpl   WORD PTR [ebx+0x73],si
  4240a9:	mov    cl,0x84
  4240ab:	sahf   
  4240ac:	test   esp,eax
  4240ae:	adc    DWORD PTR [ecx-0x5],edi
  4240b1:	andnps xmm0,xmm7
  4240b4:	ds pusha 
  4240b6:	pushw  0xd2a6
  4240ba:	cmp    BYTE PTR [ecx],bl
  4240bc:	and    bl,al
  4240be:	(bad)  
  4240c0:	adc    DWORD PTR [edx+0x130655e5],eax
  4240c6:	imul   esp,DWORD PTR [eax+ecx*2],0x4e1f968a
  4240cd:	pop    ds
  4240ce:	rol    DWORD PTR [ecx+esi*1+0x67],1
  4240d2:	dec    esp
  4240d3:	out    0x42,eax
  4240d5:	cwde   
  4240d6:	sub    DWORD PTR [ebx],ebx
  4240d8:	(bad)  [edi]
  4240da:	mov    esi,0x42c13305
  4240df:	fbld   TBYTE PTR [edx+0x67]
  4240e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240e3:	ss xor BYTE PTR gs:[edi],dh
  4240e7:	ret    
  4240e8:	jl     0x424164
  4240ea:	push   0x5a2eec39
  4240ef:	arpl   WORD PTR [edx],di
  4240f1:	push   0xffffff8b
  4240f3:	cmp    eax,ebx
  4240f5:	dec    edx
  4240f6:	aam    0x13
  4240f8:	pop    ecx
  4240f9:	lds    ebp,FWORD PTR [esi-0x30]
  4240fc:	(bad)  
  4240fd:	loope  0x4240fa
  4240ff:	sbb    al,0xa9
  424101:	cwde   
  424102:	sahf   
  424103:	cmp    eax,0x7015e05
  424108:	(bad)  
  424109:	out    dx,al
  42410a:	xor    DWORD PTR [eax],esp
  42410c:	adc    esp,DWORD PTR [ebx-0x6db8ba0f]
  424112:	jbe    0x4240d4
  424114:	add    cl,BYTE PTR [eax]
  424116:	pop    ss
  424117:	out    dx,eax
  424118:	dec    edx
  424119:	jnp    0x42411d
  42411b:	jecxz  0x42418c
  42411d:	loop   0x4240a6
  42411f:	test   BYTE PTR [esi+0x1c],bh
  424122:	mov    ecx,cs
  424124:	repz leave 
  424126:	cld    
  424127:	mov    dl,0x6e
  424129:	std    
  42412a:	je     0x42413d
  42412c:	iret   
  42412d:	inc    edi
  42412e:	sar    DWORD PTR [eax-0x735413e5],cl
  424134:	adc    DWORD PTR [ebp-0x1c6c9f30],esi
  42413a:	nop
  42413b:	bound  esp,QWORD PTR [ebx+edi*4-0x66]
  42413f:	repz fnsavew [esi-0x6f]
  424144:	mov    al,bl
  424146:	cdq    
  424147:	jae    0x4241c6
  424149:	jl     0x424111
  42414b:	int3   
  42414c:	and    eax,0xff36e61f
  424151:	cwde   
  424152:	xlat   BYTE PTR ds:[ebx]
  424153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424154:	or     DWORD PTR [esi],ebx
  424156:	idiv   bl
  424158:	cli    
  424159:	out    0xdd,al
  42415b:	adc    al,bl
  42415d:	push   ebx
  42415e:	sti    
  42415f:	int3   
  424160:	jmp    0x5498c8c2
  424165:	mov    esp,0xfaf007b9
  42416a:	sti    
  42416b:	bnd jo 0x4241e0
  42416e:	push   ds
  42416f:	pop    eax
  424170:	mov    DWORD PTR [edx+esi*8-0x26a916b5],0x1afe9de1
  42417b:	test   DWORD PTR [edi+0x50],esp
  42417e:	lea    edi,[esi-0x5c]
  424181:	sbb    BYTE PTR [edx-0x5f],bl
  424184:	out    0x77,eax
  424186:	mov    ah,0x44
  424188:	cmp    al,0x62
  42418a:	push   ecx
  42418b:	add    bh,ah
  42418d:	jns    0x42413d
  42418f:	fistp  DWORD PTR [eax-0x74]
  424192:	out    0x5f,eax
  424194:	inc    esp
  424195:	pushf  
  424196:	push   es
  424197:	nop
  424198:	xchg   esp,eax
  424199:	cmc    
  42419a:	xlat   BYTE PTR ds:[ebx]
  42419b:	cli    
  42419c:	inc    ebp
  42419d:	mov    eax,ds:0x5c7c2245
  4241a2:	jno    0x42413e
  4241a4:	int3   
  4241a5:	clc    
  4241a6:	jno    0x424152
  4241a8:	out    dx,al
  4241a9:	popa   
  4241aa:	arpl   WORD PTR [edi+0x2ff392a6],bx
  4241b0:	test   al,0xb2
  4241b2:	push   ss
  4241b3:	cld    
  4241b4:	sbb    cl,BYTE PTR [ecx]
  4241b6:	pop    ebp
  4241b7:	loopne 0x4241c5
  4241b9:	xor    al,ch
  4241bb:	xchg   DWORD PTR [ecx+ebp*2-0x7edfeed3],ebx
  4241c2:	retf   0x3bb
  4241c5:	inc    esi
  4241c6:	mov    ds:0x7b188b1b,al
  4241cb:	adc    eax,0xed34f7cf
  4241d0:	mov    BYTE PTR [ecx],ah
  4241d2:	inc    edx
  4241d3:	pusha  
  4241d4:	lods   al,BYTE PTR ds:[esi]
  4241d5:	add    ebx,ebx
  4241d7:	daa    
  4241d8:	or     cl,BYTE PTR [edi]
  4241da:	sub    al,0xf0
  4241dc:	(bad)  
  4241dd:	in     al,0xaa
  4241df:	xchg   edi,eax
  4241e0:	xor    ch,ah
  4241e2:	dec    esi
  4241e3:	cmp    cl,BYTE PTR [edx+0x57]
  4241e6:	dec    ecx
  4241e7:	sub    esi,ebp
  4241e9:	or     bl,cl
  4241eb:	push   esi
  4241ec:	xor    BYTE PTR [eax+ebp*8-0x30126f45],ch
  4241f3:	cmp    al,0x1c
  4241f5:	enter  0xed6,0xab
  4241f9:	mov    dh,0xc8
  4241fb:	adc    esi,DWORD PTR gs:[ebp-0x2e]
  4241ff:	fmul   DWORD PTR [ebx-0x2e]
  424202:	aaa    
  424203:	mov    dh,0x62
  424205:	pop    ebx
  424206:	sbb    ah,cl
  424208:	mov    edi,0x495e8d08
  42420d:	sbb    DWORD PTR [ebp+ebp*4-0x7c],ebx
  424211:	ret    
  424212:	inc    ecx
  424213:	pushf  
  424214:	dec    ecx
  424215:	jle    0x42419f
  424217:	mov    ds:0xedacf184,eax
  42421c:	js     0x424289
  42421e:	mov    cl,0x48
  424220:	jmp    0x25837a47
  424225:	mov    ebx,0x1f10d80a
  42422a:	push   edi
  42422b:	sbb    ebp,DWORD PTR [edi+0x1c]
  42422e:	(bad)  
  424230:	mov    al,0x39
  424232:	sub    al,cl
  424234:	ja     0x4241ea
  424236:	jmp    0x4bfc501a
  42423b:	push   cs
  42423c:	ret    
  42423d:	mov    BYTE PTR [esi+esi*8],0x33
  424241:	jl     0x424265
  424243:	mov    dl,0x58
  424245:	inc    esp
  424246:	push   eax
  424247:	xchg   BYTE PTR [edx],dh
  424249:	imul   ebp,ebp,0x64
  42424c:	push   0x73
  42424e:	scas   al,BYTE PTR es:[edi]
  42424f:	aad    0x53
  424251:	jns    0x424210
  424253:	adc    cl,dh
  424255:	sub    al,0x8d
  424257:	loop   0x424202
  424259:	add    dh,BYTE PTR [edx]
  42425b:	iret   
  42425c:	sub    al,0x0
  42425e:	and    DWORD PTR [ebx],ecx
  424260:	pop    edi
  424261:	or     eax,DWORD PTR [edx-0x5c3a4b8b]
  424267:	(bad)  
  424268:	mov    esi,0x679a756d
  42426d:	xchg   ebp,eax
  42426e:	je     0x4241fe
  424270:	adc    dh,bh
  424272:	cdq    
  424273:	sbb    eax,0xf68bcdcd
  424278:	or     dl,bl
  42427a:	mov    eax,0x90b014ae
  42427f:	dec    edi
  424280:	jns    0x4242f2
  424282:	mov    bl,0x22
  424284:	cmp    edx,DWORD PTR [esi+0x5420b9f8]
  42428a:	popf   
  42428b:	jne    0x4242c9
  42428d:	xchg   ebx,eax
  42428e:	cmp    DWORD PTR es:[edi+0x61],ebp
  424292:	mov    edx,0x470219e4
  424297:	loop   0x424309
  424299:	scas   eax,DWORD PTR es:[edi]
  42429a:	(bad)  [eax]
  42429c:	pop    ds
  42429d:	mov    BYTE PTR [ebx-0x5c],cl
  4242a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242a1:	in     eax,0x2b
  4242a3:	out    0xf5,al
  4242a5:	call   FWORD PTR [edx]
  4242a7:	add    al,0x71
  4242a9:	ja     0x42429d
  4242ab:	pushf  
  4242ac:	cmp    al,0x14
  4242ae:	cmp    al,ch
  4242b0:	pusha  
  4242b1:	sub    ebx,edx
  4242b3:	mov    esi,0xbb4c56fd
  4242b8:	fs cld 
  4242ba:	(bad)
  4242bd:	scas   eax,DWORD PTR es:[edi]
  4242be:	in     eax,0xa4
  4242c0:	enter  0x283f,0x89
  4242c4:	sub    DWORD PTR [edx-0x72],ecx
  4242c7:	ret    
  4242c8:	dec    edi
  4242c9:	push   ss
  4242ca:	or     eax,0x7d899fb1
  4242cf:	daa    
  4242d0:	inc    esp
  4242d1:	test   eax,esi
  4242d3:	lock in al,0x21
  4242d6:	ja     0x4242df
  4242d8:	mov    DWORD PTR [esi-0x66],ebp
  4242db:	mov    ds:0xfdc4bbf,al
  4242e0:	xchg   ecx,eax
  4242e1:	stos   BYTE PTR es:[edi],al
  4242e2:	sbb    ah,BYTE PTR [esi+0x46]
  4242e5:	cwde   
  4242e6:	adc    DWORD PTR [edx+0x11ea2f64],0xe810718e
  4242f0:	xor    al,0xeb
  4242f2:	(bad)  
  4242f3:	cmp    BYTE PTR [edx-0x48],ah
  4242f6:	push   cs
  4242f7:	in     al,dx
  4242f8:	mov    esp,0xf400007c
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	pusha  
  424309:	shl    BYTE PTR [esi+0x1bcd01f],1
  42430f:	add    BYTE PTR [esi-0x4efffffe],al
  424315:	sub    edi,DWORD PTR [ebx-0x63886aa7]
  42431b:	(bad)  
  42431c:	cmp    bl,BYTE PTR [ebx+0x3f65a27f]
  424322:	xchg   esp,eax
  424323:	lahf   
  424324:	inc    eax
  424325:	fild   QWORD PTR [ecx+eax*1]
  424328:	inc    esp
  424329:	mov    ds:0xf246a7ef,eax
  42432e:	cmp    al,0xe
  424330:	xchg   ecx,eax
  424331:	not    BYTE PTR [ecx-0x1654303b]
  424337:	add    eax,DWORD PTR [ebp-0x67]
  42433a:	and    bh,0x54
  42433d:	ja     0x424351
  42433f:	das    
  424340:	test   BYTE PTR gs:[edi],cl
  424343:	pushf  
  424344:	xchg   ebp,eax
  424345:	mov    ch,BYTE PTR [esp+edi*8]
  424348:	loop   0x42432b
  42434a:	mov    ebx,0x1ff18c22
  42434f:	call   0xd68c:0x27eeddf4
  424356:	pop    ebp
  424357:	and    BYTE PTR [eax],cl
  424359:	and    esp,DWORD PTR [edx]
  42435b:	cdq    
  42435c:	mov    ds:0xa594ea2d,eax
  424361:	sbb    eax,DWORD PTR [eax+eiz*1-0x1a86ed2e]
  424368:	adc    dh,BYTE PTR [eax+ebp*1+0x78ccd5d8]
  42436f:	cmp    dh,BYTE PTR [ecx-0x54]
  424372:	dec    ebx
  424373:	iret   
  424374:	xchg   edi,eax
  424375:	mov    ds:0x4e33fd72,al
  42437a:	scas   eax,DWORD PTR es:[edi]
  42437b:	outs   dx,DWORD PTR ds:[esi]
  42437c:	sbb    al,0x48
  42437e:	sti    
  42437f:	adc    BYTE PTR [edx],0x41
  424382:	mov    bh,0x13
  424384:	rol    DWORD PTR [ecx-0x53],cl
  424387:	dec    ecx
  424388:	mul    BYTE PTR [ebp+0x7d4c96a3]
  42438e:	mov    BYTE PTR [ebp-0x65],0xcc
  424392:	dec    edx
  424393:	xor    DWORD PTR [esi-0x5ffba62a],ebp
  424399:	mov    ebp,0x6cb4cb2a
  42439e:	mov    edx,0x79d41af6
  4243a3:	je     0x424343
  4243a5:	pushf  
  4243a6:	js     0x424361
  4243a8:	(bad)  
  4243aa:	cmp    ebp,DWORD PTR [eax+0x4e24ca63]
  4243b0:	push   ss
  4243b1:	xchg   edi,eax
  4243b2:	aaa    
  4243b3:	sbb    ebx,DWORD PTR [ebp+0x4c929523]
  4243b9:	mov    ds:0xc0a798d2,al
  4243be:	jns    0x424378
  4243c0:	aas    
  4243c1:	pop    edx
  4243c2:	dec    ebx
  4243c3:	sub    al,0x3
  4243c5:	push   ds
  4243c6:	arpl   WORD PTR [ecx-0x58182551],sp
  4243cc:	retf   0xea4e
  4243cf:	jp     0x42441e
  4243d1:	enter  0x1b23,0x38
  4243d5:	in     al,0x68
  4243d7:	pop    ebp
  4243d8:	or     ecx,DWORD PTR [esi+ebx*1]
  4243db:	sub    esp,edi
  4243dd:	icebp  
  4243de:	mov    eax,0xc168d32b
  4243e3:	xchg   ecx,eax
  4243e4:	or     ch,BYTE PTR [edx-0x5f0ca8fa]
  4243ea:	iret   
  4243eb:	and    ecx,DWORD PTR [ebx+0x53]
  4243ee:	push   ss
  4243ef:	push   ebp
  4243f0:	mov    dh,0x4d
  4243f2:	stos   BYTE PTR es:[edi],al
  4243f3:	mov    ds:0x1c1a484b,eax
  4243f8:	ror    DWORD PTR [eax],1
  4243fa:	cmp    edi,DWORD PTR [ebx-0x623ce59b]
  424400:	ds sub eax,0x3cc98ebf
  424406:	scas   al,BYTE PTR es:[edi]
  424407:	jmp    0x4243be
  424409:	mov    bl,0x14
  42440b:	sbb    BYTE PTR [eax+0x89e1f27],al
  424411:	pop    ecx
  424412:	gs adc ebx,esi
  424415:	inc    esp
  424416:	aam    0xad
  424418:	leave  
  424419:	xchg   ebx,eax
  42441a:	stc    
  42441b:	xor    eax,0xe8eb02a9
  424420:	adc    BYTE PTR [ebx],bl
  424422:	jnp    0x424462
  424424:	outs   dx,DWORD PTR ds:[esi]
  424425:	dec    ebp
  424426:	push   esi
  424427:	mov    dh,0x24
  424429:	jb     0x424466
  42442b:	sbb    al,0xc7
  42442d:	mov    bl,0xf
  42442f:	xchg   esi,eax
  424430:	ins    BYTE PTR es:[edi],dx
  424431:	cmp    eax,0x59bee413
  424436:	fcom   DWORD PTR [esi]
  424438:	leave  
  424439:	and    ebx,DWORD PTR ds:0xb41ec345
  42443f:	jne    0x424426
  424441:	xchg   edx,eax
  424442:	ins    DWORD PTR es:[edi],dx
  424443:	iret   
  424444:	sbb    BYTE PTR [eax],0x57
  424447:	in     eax,0xf0
  424449:	xor    al,0xf9
  42444b:	jns    0x424469
  42444d:	rcl    DWORD PTR [edx-0x4eec620c],1
  424453:	add    bl,BYTE PTR [edi+0x24]
  424456:	dec    ebx
  424457:	adc    ch,BYTE PTR [edx+ebx*1-0x32]
  42445b:	retw   0xd949
  42445f:	mov    ds:0xa1c2392d,eax
  424464:	imul   edi,esi,0xf28f2ca0
  42446a:	fwait
  42446b:	cmp    esp,DWORD PTR [ecx]
  42446d:	pop    ss
  42446e:	mov    esp,0x6da1bed1
  424473:	stc    
  424474:	loopne 0x4244e8
  424476:	push   esi
  424477:	dec    ebx
  424478:	jns    0x42441c
  42447a:	cmp    al,0x1b
  42447c:	std    
  42447d:	cmp    BYTE PTR [ecx+eiz*4-0x78],0x9b
  424482:	cdq    
  424483:	xor    al,0x1a
  424485:	sub    DWORD PTR [eax+ebx*2-0x5c0d98f2],edi
  42448c:	dec    ebp
  42448d:	fwait
  42448e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42448f:	jp     0x4244d8
  424491:	mov    WORD PTR [ebp+0x6d9dd1b],ss
  424497:	mov    cs,WORD PTR [ebp-0x2e]
  42449a:	sbb    eax,0xf2dbae89
  42449f:	jmp    0xbc364da4
  4244a4:	jle    0x42447c
  4244a6:	inc    ebx
  4244a7:	(bad)  
  4244a8:	pop    ds
  4244a9:	or     bh,ah
  4244ab:	aaa    
  4244ac:	add    al,0x41
  4244ae:	jne    0x42452b
  4244b0:	jb     0x424441
  4244b2:	pop    esi
  4244b3:	dec    edx
  4244b4:	(bad)  
  4244b5:	cmp    DWORD PTR [ecx],edx
  4244b7:	xor    DWORD PTR [ecx-0x77],ebx
  4244ba:	scas   eax,DWORD PTR es:[edi]
  4244bb:	jb     0x4244eb
  4244bd:	push   edx
  4244be:	or     ebx,edi
  4244c0:	repnz dec esp
  4244c2:	pop    ebp
  4244c3:	cli    
  4244c4:	mov    dh,BYTE PTR [esi]
  4244c6:	cmp    ch,al
  4244c8:	popf   
  4244c9:	xchg   ebx,eax
  4244ca:	push   DWORD PTR [ebp+0x605a2209]
  4244d0:	retf   
  4244d1:	xchg   edi,eax
  4244d2:	sti    
  4244d3:	(bad)  
  4244d4:	repnz (bad) 
  4244d6:	sub    eax,0x8f73172e
  4244db:	clc    
  4244dc:	dec    ecx
  4244dd:	mov    BYTE PTR [edx-0x36],cl
  4244e0:	and    al,0xad
  4244e2:	in     al,dx
  4244e3:	mov    ds:0xb0a1de09,eax
  4244e8:	cmp    ecx,DWORD PTR [ebx-0x11]
  4244eb:	(bad)  
  4244ec:	in     al,0xec
  4244ee:	sbb    DWORD PTR [edx+0x27f34035],edx
  4244f4:	lods   al,BYTE PTR ds:[esi]
  4244f5:	dec    edx
  4244f6:	clc    
  4244f7:	ficom  WORD PTR [ecx-0x61]
  4244fa:	cmp    BYTE PTR [esi-0x6e],dh
  4244fd:	aas    
  4244fe:	inc    BYTE PTR [edx]
  424500:	popf   
  424501:	(bad)
  424504:	xlat   BYTE PTR ds:[ebx]
  424505:	dec    ebx
  424506:	inc    esp
  424507:	shl    BYTE PTR [ecx-0x21611c69],1
  42450d:	adc    esp,ebp
  42450f:	std    
  424510:	popf   
  424511:	pop    esi
  424512:	pop    edx
  424513:	mov    BYTE PTR [eax+eax*1+0x1ca38905],al
  42451a:	pop    eax
  42451b:	mov    bl,0x26
  42451d:	inc    ebx
  42451f:	pusha  
  424520:	push   edi
  424521:	add    eax,0xacf14a98
  424526:	push   ebx
  424527:	sar    DWORD PTR [eax+0x16],0x78
  42452b:	mov    WORD PTR [edx],gs
  42452d:	and    edx,DWORD PTR [esi]
  42452f:	pop    eax
  424530:	mov    edi,0x57c4eff0
  424535:	int    0x16
  424537:	stos   BYTE PTR es:[edi],al
  424538:	or     al,0xdf
  42453a:	and    ecx,eax
  42453c:	sbb    BYTE PTR [esi+0xb],0x7
  424540:	pusha  
  424541:	sbb    DWORD PTR [esi-0x17e7b753],ebx
  424547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424548:	mov    ebx,0x5dec38bb
  42454d:	fild   DWORD PTR [edx+0x3c32f061]
  424553:	test   eax,0xeb0413fb
  424558:	in     al,0xf
  42455a:	ins    BYTE PTR es:[edi],dx
  42455b:	loopne 0x42452b
  42455d:	outs   dx,DWORD PTR ds:[esi]
  42455e:	ins    DWORD PTR es:[edi],dx
  42455f:	xor    BYTE PTR [edx],dh
  424561:	sbb    cl,0x6f
  424564:	enter  0xa7ca,0x4f
  424568:	into   
  424569:	xor    DWORD PTR [edx],eax
  42456b:	sti    
  42456c:	arpl   WORD PTR [eax-0x4],si
  42456f:	jae    0x4245a4
  424571:	lods   al,BYTE PTR ds:[esi]
  424572:	daa    
  424573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424574:	icebp  
  424575:	frstor [ecx+0x40ee7ae2]
  42457b:	mov    bh,0x6f
  42457d:	jg     0x424596
  42457f:	jmp    0x3a5b0617
  424584:	pop    ebx
  424585:	inc    ecx
  424586:	cmp    al,0x8d
  424588:	jne    0x424517
  42458a:	cld    
  42458b:	(bad)  [ecx]
  42458d:	stc    
  42458e:	push   edx
  42458f:	sbb    DWORD PTR [ebx],esp
  424591:	add    esi,DWORD PTR [edi+0x55]
  424594:	arpl   bx,dx
  424596:	sbb    eax,0xbb736
  42459b:	add    BYTE PTR [esi+edi*1+0x24],dl
  42459f:	sbb    DWORD PTR [esi+0x1b],ebp
  4245a2:	jge    0x424623
  4245a4:	(bad)  
  4245a5:	mov    eax,0x35decfc0
  4245aa:	shr    BYTE PTR [ebx+0x56],0xbf
  4245ae:	add    DWORD PTR [eax],eax
  4245b0:	xchg   BYTE PTR [edx],al
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	dec    eax
  4245b5:	fdiv   DWORD PTR [ebx-0x7]
  4245b8:	jae    0x4245f8
  4245ba:	pop    esi
  4245bb:	pop    edi
  4245bc:	or     bh,BYTE PTR ds:0xde3666dd
  4245c2:	add    DWORD PTR [ebp+0x1a9cc11d],ebp
  4245c8:	and    edi,DWORD PTR [ebx-0x49]
  4245cb:	dec    edx
  4245cc:	add    ch,BYTE PTR [eax-0x2a]
  4245cf:	icebp  
  4245d0:	mov    edi,0x8f548551
  4245d5:	in     al,0xa2
  4245d7:	xor    DWORD PTR [ebp-0x4a4d4807],ebp
  4245dd:	mov    ?,WORD PTR [eax+ebx*2+0x61]
  4245e1:	inc    ebx
  4245e2:	leave  
  4245e3:	mov    ebx,0x46e49be8
  4245e8:	cmp    edi,eax
  4245ea:	sub    dh,BYTE PTR [esi-0x59]
  4245ed:	mov    BYTE PTR [ecx+eax*2-0x43],dh
  4245f1:	(bad)  
  4245f2:	sbb    DWORD PTR [edi-0x23],edi
  4245f5:	std    
  4245f6:	mov    WORD PTR [ecx-0x34],fs
  4245f9:	fldenv [edx+0x79]
  4245fc:	push   ds
  4245fd:	stos   DWORD PTR es:[edi],eax
  4245fe:	xlat   BYTE PTR ds:[ebx]
  4245ff:	push   ebx
  424600:	pop    edx
  424601:	inc    eax
  424602:	xchg   edi,eax
  424603:	jge    0x42467a
  424605:	mov    ds:0xcc1a9d12,eax
  42460a:	pop    eax
  42460b:	add    BYTE PTR [edx],dh
  42460d:	call   0xa7f3:0x42e3219e
  424614:	dec    edx
  424615:	cmp    al,BYTE PTR [esi+0x5b]
  424618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424619:	or     eax,0x7689bda6
  42461e:	sbb    eax,0xed8fbda5
  424623:	psubsw mm6,QWORD PTR [eax]
  424626:	xor    eax,0x722adfb2
  42462b:	scas   eax,DWORD PTR es:[edi]
  42462c:	push   cs
  42462d:	mov    al,ds:0xd80e99bb
  424632:	in     eax,0x5a
  424634:	sub    al,0x32
  424636:	(bad)  
  424638:	pop    edi
  424639:	and    BYTE PTR [eax],dh
  42463b:	in     ax,0x7e
  42463e:	mov    esp,0x82aa8733
  424643:	jno    0x424629
  424645:	push   0xb313962d
  42464a:	stc    
  42464b:	push   ebp
  42464c:	loop   0x4246ca
  42464e:	sbb    al,bh
  424650:	push   esp
  424651:	(bad)  
  424652:	(bad)  
  424653:	fisubr DWORD PTR [edi]
  424655:	inc    esi
  424656:	push   ebx
  424657:	cmp    esi,ebx
  424659:	jmp    0x7fba244b
  42465e:	jae    0x4246d4
  424660:	popa   
  424661:	not    BYTE PTR [eax+0x7b]
  424664:	pop    ebp
  424665:	(bad)  [edx-0x2c5d69d4]
  42466b:	fld    st(4)
  42466d:	rcr    DWORD PTR [esi-0x51b9a937],1
  424673:	dec    esi
  424674:	push   ebx
  424675:	(bad)  
  424676:	lock (bad) 
  424678:	jnp    0x42460d
  42467a:	cs rol eax,1
  42467d:	lods   eax,DWORD PTR ds:[esi]
  42467e:	repz xchg edi,eax
  424680:	sbb    BYTE PTR [ebx],0x18
  424683:	jge    0x42469e
  424685:	adc    BYTE PTR [esi],dl
  424687:	ins    DWORD PTR es:[edi],dx
  424688:	fstp   DWORD PTR [ebx-0x14]
  42468b:	loope  0x4246b1
  42468d:	scas   al,BYTE PTR es:[edi]
  42468e:	mov    dh,0x29
  424690:	sub    BYTE PTR ds:0x59ce155,bh
  424696:	adc    BYTE PTR [edi+eax*2+0x6c115001],0xa8
  42469e:	out    0x67,al
  4246a0:	lods   al,BYTE PTR ds:[esi]
  4246a1:	sbb    eax,0x893fc2cd
  4246a6:	inc    ecx
  4246a7:	push   eax
  4246a8:	(bad)  
  4246a9:	pop    esp
  4246aa:	test   BYTE PTR [ebx-0x16],ch
  4246ad:	test   DWORD PTR [edi-0x1e92ffa0],ebp
  4246b3:	clc    
  4246b4:	fst    QWORD PTR [esi]
  4246b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246b7:	into   
  4246b8:	aas    
  4246b9:	retf   
  4246ba:	jmp    0x42464b
  4246bc:	js     0x424652
  4246be:	mov    ch,0x1d
  4246c0:	xchg   ecx,eax
  4246c1:	sbb    DWORD PTR [edi-0x46338818],ecx
  4246c7:	sbb    bl,BYTE PTR [esi+ebp*2-0x699c8376]
  4246ce:	rcr    BYTE PTR [esi+0x74],0x99
  4246d2:	push   ds
  4246d3:	stos   DWORD PTR es:[edi],eax
  4246d4:	xchg   ecx,eax
  4246d5:	dec    ebp
  4246d6:	adc    esp,0xe
  4246d9:	sub    eax,0xe1b2932d
  4246de:	jp     0x4246d3
  4246e0:	xchg   edx,eax
  4246e1:	pop    edx
  4246e2:	mov    edx,cs
  4246e4:	adc    al,BYTE PTR [ebp-0x2928d20b]
  4246ea:	ins    DWORD PTR es:[edi],dx
  4246eb:	inc    eax
  4246ec:	out    dx,al
  4246ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246ee:	shl    BYTE PTR [edi+0x5c16cee5],cl
  4246f4:	jbe    0x4246a1
  4246f6:	inc    eax
  4246f7:	pushf  
  4246f8:	loopne 0x4246ea
  4246fa:	xchg   ebx,eax
  4246fb:	lods   eax,DWORD PTR ds:[esi]
  4246fc:	aas    
  4246fd:	sti    
  4246fe:	jmp    0x45310d12
  424703:	inc    edi
  424704:	push   ss
  424705:	add    BYTE PTR [esi+edx*2],bh
  424708:	dec    esi
  424709:	dec    edx
  42470a:	jno    0x42470a
  42470c:	stos   DWORD PTR es:[edi],eax
  42470d:	xor    BYTE PTR ds:0xe8664991,bh
  424713:	mov    ecx,0x186b9d6f
  424718:	cmp    eax,0xafadf16e
  42471d:	cmp    eax,0x842d1764
  424722:	into   
  424723:	and    eax,0xcbdd246c
  424728:	push   ebp
  424729:	mov    al,BYTE PTR [ebx+0x30a06b62]
  42472f:	icebp  
  424730:	pop    esi
  424731:	and    eax,0x7a853e89
  424736:	mov    ebp,0x49488be4
  42473b:	and    BYTE PTR ds:0xea23ed1d,dh
  424741:	sbb    edi,DWORD PTR [esi+0x16264426]
  424747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424748:	jbe    0x424735
  42474a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42474b:	into   
  42474c:	icebp  
  42474d:	jnp    0x4246d8
  42474f:	sete   BYTE PTR [edi]
  424752:	dec    edx
  424753:	pop    edi
  424754:	gs inc esi
  424756:	nop
  424757:	fcmove st,st(0)
  424759:	int3   
  42475a:	cmp    al,0x84
  42475c:	ret    
  42475d:	push   ecx
  42475e:	mov    eax,0x3482c219
  424763:	sti    
  424764:	sbb    al,0xca
  424766:	mov    ch,0xa7
  424768:	jns    0x4246ee
  42476a:	iret   
  42476b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42476c:	(bad)  
  42476d:	jb     0x4247e7
  42476f:	push   edi
  424770:	xchg   cl,dl
  424772:	aaa    
  424773:	dec    edi
  424774:	out    0x7,eax
  424776:	adc    DWORD PTR [edx+0x3485faf2],ecx
  42477c:	jno    0x424785
  42477e:	sbb    ah,BYTE PTR [ecx]
  424780:	ds xor eax,0x586e79f0
  424786:	nop
  424787:	test   BYTE PTR [ecx+0x7e],ah
  42478a:	xchg   edi,eax
  42478b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42478c:	sar    DWORD PTR [ebx-0x7a3189a1],0xc1
  424793:	push   edi
  424794:	adc    BYTE PTR [edx-0x4f977233],al
  42479a:	pop    ecx
  42479b:	sub    eax,0x46eb82ba
  4247a0:	cmc    
  4247a1:	jne    0x42474d
  4247a3:	mov    ch,0x59
  4247a5:	mov    cl,bl
  4247a7:	rol    DWORD PTR [edx],cl
  4247a9:	daa    
  4247aa:	lock push es
  4247ac:	mov    esp,0xc3e1c545
  4247b1:	nop
  4247b2:	pop    es
  4247b3:	(bad)  
  4247b5:	pop    edi
  4247b6:	out    dx,eax
  4247b7:	and    al,0x6e
  4247b9:	pop    ds
  4247ba:	mov    ds:0x3666a589,al
  4247bf:	cld    
  4247c0:	or     esi,DWORD PTR [ecx]
  4247c2:	ss cli 
  4247c4:	inc    ebx
  4247c5:	aam    0x14
  4247c7:	imul   ebx,DWORD PTR [edx],0x73e8962
  4247cd:	scas   al,BYTE PTR es:[edi]
  4247ce:	jmp    0x115c:0xa40d7bce
  4247d5:	mov    bh,0x41
  4247d7:	push   edi
  4247d8:	xchg   edx,eax
  4247d9:	cs loop 0x4247d8
  4247dc:	out    0x67,ax
  4247df:	stos   DWORD PTR es:[edi],eax
  4247e0:	mov    bh,0x83
  4247e2:	xchg   ecx,eax
  4247e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247e4:	jmp    0x4247bb
  4247e6:	jmp    FWORD PTR [edx+0x7f0017ae]
  4247ec:	jp     0x424810
  4247ee:	std    
  4247ef:	jb     0x4247eb
  4247f1:	adc    BYTE PTR [ecx-0x5],0x72
  4247f5:	addr16 into 
  4247f7:	xor    DWORD PTR [edi+0x25696260],edx
  4247fd:	sahf   
  4247fe:	inc    ebp
  4247ff:	repz addr16 jne 0x4247ee
  424803:	or     al,0x17
  424805:	repnz std 
  424807:	pop    ebp
  424808:	and    BYTE PTR [edx+0x3b7de5c9],dh
  42480e:	xchg   esp,eax
  42480f:	sub    DWORD PTR [edx+0x6f],esp
  424812:	nop
  424813:	push   0xd74f84c6
  424818:	mov    ds:0xf03d8aef,al
  42481d:	xchg   edx,eax
  42481e:	into   
  42481f:	cmp    DWORD PTR [edx],ecx
  424821:	sbb    BYTE PTR [ebx-0x56],dh
  424824:	jecxz  0x424895
  424826:	dec    edi
  424827:	jl     0x42488d
  424829:	pop    eax
  42482a:	adc    al,0xe7
  42482c:	int3   
  42482d:	mov    DWORD PTR [ebx],ebx
  42482f:	int    0xc0
  424831:	add    bh,BYTE PTR [edx+eiz*2+0x5572ca85]
  424838:	jmp    0x74ea:0xbe000012
  42483f:	out    dx,eax
  424840:	je     0x424841
  424842:	mov    edi,0x98b349fb
  424847:	xor    dl,BYTE PTR [ecx-0x5d]
  42484a:	popa   
  42484b:	adc    al,0xdc
  42484d:	rol    DWORD PTR [ecx],0x0
  424850:	xchg   BYTE PTR [edx],al
  424852:	add    BYTE PTR [eax],al
  424854:	int    0xfb
  424856:	shr    BYTE PTR [edi],0x4b
  424859:	int    0x4a
  42485b:	mov    ds:0xdb7c7f75,al
  424860:	xor    eax,0x29eff22d
  424865:	dec    DWORD PTR [ecx+0x2fb7aa05]
  42486b:	mov    al,0x72
  42486d:	mov    bh,0x91
  42486f:	repnz pop edi
  424871:	sbb    ecx,ecx
  424873:	jae    0x424880
  424875:	pop    ds
  424876:	or     al,BYTE PTR [edx+ebx*8]
  424879:	int    0x6
  42487b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42487c:	cli    
  42487d:	xor    DWORD PTR [edi+ebx*4+0x3839af25],ebp
  424884:	jmp    DWORD PTR [ecx+edx*1-0x4e9d2f5e]
  42488b:	jg     0x424830
  42488d:	cdq    
  42488e:	cmp    eax,0x5f436866
  424893:	sub    eax,0xd45cd293
  424898:	jg     0x4248f7
  42489a:	fisub  WORD PTR [ebp+0x56]
  42489d:	mov    edx,0x6249d091
  4248a2:	ret    0xd76f
  4248a5:	sub    ch,BYTE PTR [ecx-0x1887b39c]
  4248ab:	aas    
  4248ac:	ror    ah,cl
  4248ae:	push   esp
  4248af:	std    
  4248b0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248b2:	pop    es
  4248b3:	xchg   ecx,eax
  4248b4:	stos   BYTE PTR es:[edi],al
  4248b5:	ss jne 0x42488e
  4248b8:	retf   0x9e6
  4248bb:	dec    esi
  4248bc:	xor    bh,BYTE PTR [esi]
  4248be:	fbld   TBYTE PTR [ebx-0x7648f24c]
  4248c4:	(bad)  
  4248c5:	mul    BYTE PTR [ebp-0x2c]
  4248c8:	dec    ebp
  4248c9:	fs adc eax,0x117e5a82
  4248cf:	mov    eax,0x7a952d3b
  4248d4:	ins    BYTE PTR es:[edi],dx
  4248d5:	fs pop esi
  4248d7:	fild   WORD PTR [edx-0x44]
  4248da:	arpl   WORD PTR [eax+eax*2+0x78059fe9],sp
  4248e1:	or     eax,0xfbb1b070
  4248e6:	cli    
  4248e7:	stos   BYTE PTR es:[edi],al
  4248e8:	mov    ebp,0xab65a06f
  4248ed:	popf   
  4248ee:	fld    QWORD PTR [esp+ebp*2]
  4248f1:	inc    eax
  4248f2:	xor    al,0x9c
  4248f4:	jns    0x4248a4
  4248f6:	add    BYTE PTR [eax],dl
  4248f8:	out    dx,eax
  4248f9:	repz js 0x42494a
  4248fc:	jns    0x4248cd
  4248fe:	and    dh,BYTE PTR [ebx+0x538c102]
  424904:	fst    DWORD PTR [ecx]
  424906:	push   es
  424907:	mov    ah,bl
  424909:	lock test BYTE PTR [eax+edx*8],al
  42490d:	imul   esp,edx,0xbad91dbd
  424913:	xor    edx,DWORD PTR [ecx+0x503dfe84]
  424919:	adc    BYTE PTR [ecx],ch
  42491b:	std    
  42491c:	ficomp WORD PTR [eax]
  42491e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42491f:	fisttp QWORD PTR [eax-0x66]
  424922:	and    eax,0x613bb292
  424927:	sub    ah,BYTE PTR [edi]
  424929:	lods   al,BYTE PTR ds:[esi]
  42492a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42492b:	jle    0x4248d6
  42492d:	xor    bl,BYTE PTR ds:0xee4f35d8
  424933:	mov    ebp,0x488f8c6
  424938:	repz test eax,0xccd670d0
  42493e:	mov    dh,0x30
  424940:	pop    ebx
  424941:	pop    esp
  424942:	push   ebx
  424943:	stos   DWORD PTR es:[edi],eax
  424944:	(bad)  
  424946:	xchg   edi,eax
  424947:	mov    ch,0xd7
  424949:	out    0xa1,al
  42494b:	call   0xe3cdcfbb
  424950:	vpsubusw xmm4,xmm1,XMMWORD PTR [ecx]
  424954:	pop    esi
  424955:	add    dh,BYTE PTR [ebx-0x58]
  424958:	xor    ch,BYTE PTR [ebx]
  42495a:	pop    esp
  42495b:	(bad)  
  42495c:	hlt    
  42495d:	adc    eax,0xab337d6d
  424962:	stc    
  424963:	pop    ebx
  424964:	adc    eax,0x29fe227e
  424969:	mov    al,0xa
  42496b:	cmp    BYTE PTR [ecx-0x78],0x1c
  42496f:	ja     0x4248f6
  424971:	inc    edx
  424972:	lahf   
  424973:	add    al,0xa6
  424975:	add    DWORD PTR [edx+0x1a],esi
  424978:	pop    ecx
  424979:	into   
  42497a:	and    eax,0xdc0b7abf
  42497f:	(bad)  
  424980:	test   eax,0x5796af00
  424985:	push   esp
  424986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424987:	jmp    0x30bf5d65
  42498c:	test   BYTE PTR [esi+0x42fdab37],ch
  424992:	shr    BYTE PTR [eax-0x2ce8553b],cl
  424998:	outs   dx,DWORD PTR ds:[esi]
  424999:	jp     0x424983
  42499b:	xchg   edx,eax
  42499c:	lock sbb eax,0x102115bb
  4249a2:	jge    0x42493a
  4249a4:	ret    0x6dc7
  4249a7:	push   edi
  4249a8:	shr    BYTE PTR [edx-0x12],cl
  4249ab:	xchg   edi,eax
  4249ac:	xor    BYTE PTR [ecx+0x1c],0xdb
  4249b0:	push   cs
  4249b1:	mov    edi,0x51d08e84
  4249b6:	pop    ss
  4249b7:	sbb    eax,0xcc91a406
  4249bc:	adc    al,0x7d
  4249be:	sub    BYTE PTR [edi-0x20],dh
  4249c1:	shr    DWORD PTR [ebx-0x3e],cl
  4249c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249c5:	imul   DWORD PTR [edi]
  4249c7:	retf   
  4249c8:	cmc    
  4249c9:	cmp    dh,bl
  4249cb:	in     eax,0xe3
  4249cd:	stos   DWORD PTR es:[edi],eax
  4249ce:	cmp    ch,dh
  4249d0:	sbb    dh,BYTE PTR [ebp-0x6a]
  4249d3:	imul   DWORD PTR [edx+edi*2]
  4249d6:	adc    DWORD PTR [ebx+0x6708451d],ebp
  4249dc:	ror    BYTE PTR [ecx],cl
  4249de:	int3   
  4249df:	cmp    eax,0xa3c8e787
  4249e4:	xchg   ebp,eax
  4249e5:	and    DWORD PTR ds:0xefd213f1,ecx
  4249eb:	sub    DWORD PTR ds:0x1a85b466,eax
  4249f1:	icebp  
  4249f2:	into   
  4249f3:	ss ror bl,cl
  4249f6:	das    
  4249f7:	inc    ebp
  4249f8:	out    dx,al
  4249f9:	in     al,dx
  4249fa:	cmp    dh,BYTE PTR [esi]
  4249fc:	call   0xde029179
  424a01:	lods   al,BYTE PTR ds:[esi]
  424a02:	aaa    
  424a03:	cmp    eax,0x88ab2139
  424a08:	shr    DWORD PTR [esi+0x3f0f9d39],0xe4
  424a0f:	or     al,0xfd
  424a11:	mov    BYTE PTR [ecx+0x22],bl
  424a14:	adc    al,0x64
  424a17:	popf   
  424a18:	sbb    DWORD PTR [ebp+0x3c],esp
  424a1b:	shr    bh,1
  424a1d:	add    BYTE PTR [edi],cl
  424a1f:	(bad)  
  424a20:	pop    esp
  424a21:	push   edi
  424a22:	inc    ecx
  424a23:	imul   ecx,ebp,0x40a28df7
  424a29:	lahf   
  424a2a:	stos   BYTE PTR es:[edi],al
  424a2b:	cmp    eax,ebp
  424a2d:	mov    dl,0x3e
  424a2f:	stos   BYTE PTR es:[edi],al
  424a30:	jp     0x4249ed
  424a32:	xchg   DWORD PTR ds:0x5e621457,edi
  424a38:	idiv   edi
  424a3a:	pop    eax
  424a3b:	enter  0x30b8,0xf6
  424a3f:	and    ebx,DWORD PTR [ebx]
  424a41:	dec    ebp
  424a42:	mov    bl,0xd2
  424a44:	lods   al,BYTE PTR ds:[esi]
  424a45:	cmp    al,0x4e
  424a47:	xchg   edx,ebx
  424a49:	pop    eax
  424a4a:	aas    
  424a4b:	rcl    bl,cl
  424a4d:	stos   DWORD PTR es:[edi],eax
  424a4e:	mov    ah,0xb6
  424a50:	sub    al,BYTE PTR [eax-0x1a]
  424a53:	jbe    0x424a89
  424a55:	popf   
  424a56:	fwait
  424a57:	ins    BYTE PTR es:[edi],dx
  424a58:	out    dx,al
  424a59:	outs   dx,DWORD PTR ds:[esi]
  424a5a:	cmp    DWORD PTR [edx],0x68
  424a5d:	mov    ss:0x3985c42f,al
  424a63:	int3   
  424a64:	and    eax,0x4f70211f
  424a69:	(bad)  
  424a6a:	cld    
  424a6b:	(bad)  
  424a6c:	add    eax,0x214c47ef
  424a71:	iret   
  424a72:	ins    DWORD PTR es:[edi],dx
  424a73:	mov    WORD PTR [ebx+0x320ee097],ds
  424a79:	adc    eax,0x48a0501a
  424a7e:	scas   eax,DWORD PTR es:[edi]
  424a7f:	leave  
  424a80:	sub    ecx,DWORD PTR [eax+0x1c]
  424a83:	pusha  
  424a84:	cmc    
  424a85:	test   DWORD PTR [ebp-0x65],edi
  424a88:	adc    DWORD PTR [ebx-0x13],ebx
  424a8b:	dec    esp
  424a8c:	sub    DWORD PTR [ebp+0x29c3a9dd],esp
  424a92:	or     DWORD PTR [edi+0x7c],0x43
  424a96:	jmp    0x724b:0x7e7f5ec3
  424a9d:	ret    
  424a9e:	inc    esp
  424a9f:	xchg   ecx,eax
  424aa0:	lods   al,BYTE PTR ds:[esi]
  424aa1:	(bad)  
  424aa2:	out    dx,eax
  424aa3:	cmp    al,0xd3
  424aa5:	or     ecx,eax
  424aa7:	sar    bh,cl
  424aa9:	(bad)  
  424aaa:	lea    edx,[ecx+0x3b1f87d5]
  424ab0:	inc    ebp
  424ab1:	push   ds
  424ab2:	push   ecx
  424ab3:	cmp    al,0x81
  424ab5:	push   edi
  424ab6:	mov    ds:0xd579bef3,al
  424abb:	adc    eax,0x17371dd8
  424ac0:	sahf   
  424ac1:	sub    al,BYTE PTR [ecx+0x334f6c35]
  424ac7:	mov    DWORD PTR [ecx-0x55d4741e],esp
  424acd:	mov    ebp,ds
  424acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ad0:	scas   al,BYTE PTR es:[edi]
  424ad1:	jae    0x37156d9
  424ad7:	lahf   
  424ad8:	in     eax,0xf
  424ada:	add    BYTE PTR [eax],al
  424adc:	dec    ebx
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    DWORD PTR [esi+0x6d],ecx
  424aea:	retf   
  424aeb:	push   edi
  424aec:	(bad)  
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [esi-0x62fffffe],al
  424af5:	bound  ebp,QWORD PTR [ecx+0x34c4f970]
  424afb:	(bad)  
  424afc:	aaa    
  424afd:	cmp    DWORD PTR [ebp-0x267f04e8],eax
  424b03:	xlat   BYTE PTR ds:[ebx]
  424b04:	stos   BYTE PTR es:[edi],al
  424b05:	mov    cl,0xfc
  424b07:	mov    ch,0x31
  424b09:	mov    edx,DWORD PTR [eax+0x25]
  424b0c:	xor    DWORD PTR [edi+0x173ea04b],edi
  424b12:	sub    BYTE PTR [eax],dl
  424b14:	daa    
  424b15:	ror    BYTE PTR [edi],cl
  424b17:	lods   eax,DWORD PTR ds:[esi]
  424b18:	mov    bh,0x54
  424b1a:	scas   al,BYTE PTR es:[edi]
  424b1b:	add    dl,0xe
  424b1e:	test   dh,ah
  424b20:	push   ss
  424b21:	aas    
  424b22:	mov    ds:0xc2c93d83,eax
  424b27:	dec    ebp
  424b28:	push   0x58c85a09
  424b2d:	leave  
  424b2e:	pushf  
  424b2f:	test   eax,0x687c25c2
  424b34:	inc    ebp
  424b35:	imul   edi,DWORD PTR [ebp+0x75],0x264902d0
  424b3c:	jne    0x424b7f
  424b3e:	push   esp
  424b3f:	repnz in eax,dx
  424b41:	popa   
  424b42:	adc    ah,al
  424b44:	test   BYTE PTR [eax-0x53],0xa8
  424b48:	rdtsc  
  424b4a:	fisttp WORD PTR [ebp-0x272834ef]
  424b50:	mov    esp,0x2a4a604c
  424b55:	inc    edi
  424b56:	sbb    dl,BYTE PTR [eax-0x3d]
  424b59:	cdq    
  424b5a:	mov    eax,ds:0xc745d205
  424b5f:	std    
  424b60:	hlt    
  424b61:	(bad)  
  424b63:	or     eax,0xee087f1d
  424b68:	jno    0x424b32
  424b6a:	scas   eax,DWORD PTR es:[edi]
  424b6b:	or     al,0x2d
  424b6d:	hlt    
  424b6e:	fldcw  WORD PTR ds:0x5e145c1b
  424b74:	call   0xb1a2:0x854f9c9
  424b7b:	inc    esp
  424b7c:	jmp    0x424b47
  424b7e:	iret   
  424b7f:	jne    0x424b42
  424b81:	or     cl,0x43
  424b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b85:	sub    al,0xb9
  424b87:	xor    al,dh
  424b89:	loopne 0x424b4f
  424b8b:	push   ss
  424b8c:	inc    esp
  424b8d:	mov    dl,0x84
  424b8f:	push   es
  424b90:	nop
  424b91:	aas    
  424b92:	xor    al,0x4a
  424b94:	pop    edi
  424b95:	xchg   ecx,eax
  424b96:	imul   edi,DWORD PTR [eax],0xfffffff1
  424b99:	sti    
  424b9a:	dec    ebp
  424b9b:	unpcklps xmm5,xmm2
  424b9e:	lahf   
  424b9f:	adc    al,BYTE PTR [edi]
  424ba1:	mov    ebx,0xbe2d3fee
  424ba6:	xchg   edx,eax
  424ba7:	push   0x1fcd3604
  424bac:	sub    BYTE PTR [edx+0x26a2f2e3],0xc
  424bb3:	inc    ebp
  424bb4:	mov    ebp,0xa31b6a60
  424bb9:	int3   
  424bba:	inc    esp
  424bbb:	(bad)  
  424bbc:	push   ebx
  424bbd:	fwait
  424bbe:	call   0xbfaf:0x72c6d4b1
  424bc5:	add    BYTE PTR [ebp+0x262d502b],0x2b
  424bcc:	addr16 push ebx
  424bce:	push   edx
  424bcf:	aam    0xbb
  424bd1:	enter  0xae8a,0x3e
  424bd5:	jle    0x424bbd
  424bd7:	pop    ecx
  424bd8:	xor    DWORD PTR [ecx-0x37d881d],ebx
  424bde:	xchg   DWORD PTR [edx*1+0x1f631e28],ebx
  424be5:	sar    BYTE PTR [ebx-0x1d],1
  424be8:	pop    eax
  424be9:	sahf   
  424bea:	loop   0x424b8b
  424bec:	shl    BYTE PTR [eax-0xd],0x27
  424bf0:	pop    ds
  424bf1:	in     al,0xfe
  424bf3:	pop    ebx
  424bf4:	rcl    ebp,1
  424bf6:	leave  
  424bf7:	int    0xb9
  424bf9:	xchg   edx,eax
  424bfa:	ds jg  0x424bdc
  424bfd:	xchg   ecx,eax
  424bfe:	in     al,dx
  424bff:	outs   dx,DWORD PTR ds:[esi]
  424c00:	sub    DWORD PTR [edx],ebp
  424c02:	pop    ebp
  424c03:	sbb    eax,0x5ea2d587
  424c08:	push   edi
  424c09:	xchg   ebp,eax
  424c0a:	int    0x8
  424c0c:	clc    
  424c0d:	inc    ebp
  424c0e:	mov    ds:0xd57ee7b,eax
  424c13:	lods   al,BYTE PTR ds:[esi]
  424c14:	inc    DWORD PTR [ebx+esi*8]
  424c17:	push   ecx
  424c18:	xlat   BYTE PTR ds:[ebx]
  424c19:	mov    edx,0x1da20857
  424c1e:	jns    0x424c2c
  424c20:	sbb    DWORD PTR [edi+0x285fb5e8],ebx
  424c26:	and    al,0xd0
  424c28:	sbb    DWORD PTR [eax+0x3f],ebx
  424c2b:	mov    edi,0x11c4bc63
  424c30:	enter  0x65a7,0xec
  424c34:	jg     0x424bff
  424c36:	ja     0x424c3a
  424c38:	dec    esp
  424c39:	popa   
  424c3a:	jge    0x424c99
  424c3c:	pushf  
  424c3d:	sub    BYTE PTR [ebp+0x60],cl
  424c40:	pop    edi
  424c41:	pop    WORD PTR [eax+0x4b]
  424c45:	mov    esp,DWORD PTR [ecx-0x46558d43]
  424c4b:	fisub  WORD PTR [edx]
  424c4d:	scas   al,BYTE PTR es:[edi]
  424c4e:	inc    esp
  424c4f:	xchg   DWORD PTR [edi+0x708f4c24],esp
  424c55:	push   es
  424c56:	sub    al,0xbb
  424c58:	lods   al,BYTE PTR ds:[esi]
  424c59:	stc    
  424c5a:	jmp    0x6b556e2
  424c5f:	cmp    eax,DWORD PTR [eax+ebp*1+0x4022f20b]
  424c66:	(bad)  
  424c68:	push   esp
  424c69:	test   ch,0x6d
  424c6c:	mov    WORD PTR [edx],es
  424c6e:	mov    eax,ds:0xcdd57bdf
  424c73:	std    
  424c74:	test   DWORD PTR [esi-0x69],edx
  424c77:	ins    DWORD PTR es:[edi],dx
  424c78:	ja     0x424cc3
  424c7a:	jg     0x424c90
  424c7c:	(bad)  
  424c7d:	out    dx,eax
  424c7e:	dec    edi
  424c7f:	mov    esp,0x20ae0cfe
  424c84:	sub    eax,0x4af9b8d1
  424c89:	dec    ecx
  424c8a:	adc    DWORD PTR [edx-0x3a],0xffffff8f
  424c8e:	xchg   DWORD PTR [edx],eax
  424c90:	mov    al,ds:0x71a0f8f5
  424c95:	xchg   edi,eax
  424c96:	adc    eax,0x8e0d7a6
  424c9b:	das    
  424c9c:	and    esi,DWORD PTR [ecx-0x56]
  424c9f:	cmp    al,0x15
  424ca1:	jns    0x424cec
  424ca3:	push   eax
  424ca4:	cmp    al,0xad
  424ca6:	push   ds
  424ca7:	jne    0x424c32
  424ca9:	inc    ecx
  424caa:	jnp    0x424c30
  424cac:	sbb    DWORD PTR [ecx-0x1f66768e],ecx
  424cb2:	fmul   DWORD PTR [edx+0x2b]
  424cb5:	clc    
  424cb6:	or     DWORD PTR [ebp+0x5fd91ffd],ebp
  424cbc:	xchg   edx,eax
  424cbd:	(bad)
  424cc1:	rol    DWORD PTR [ecx+0x2fb1fd0f],cl
  424cc7:	jnp    0x424ce2
  424cc9:	pop    es
  424cca:	nop
  424ccb:	inc    ebx
  424ccc:	sbb    al,0x8b
  424cce:	push   eax
  424ccf:	jns    0x424c95
  424cd1:	cmc    
  424cd2:	iret   
  424cd3:	mov    ecx,0x6a505918
  424cd8:	jb     0x424d4a
  424cda:	adc    al,0x65
  424cdc:	sub    eax,0xffffffad
  424cdf:	pop    eax
  424ce0:	fild   DWORD PTR [edx-0x1b]
  424ce3:	xor    DWORD PTR [eax-0xb],ecx
  424ce6:	xchg   esi,eax
  424ce7:	pop    eax
  424ce8:	ja     0x424cc9
  424cea:	(bad)  
  424ceb:	aaa    
  424cec:	cs aam 0x46
  424cef:	loop   0x424ceb
  424cf1:	lds    esp,FWORD PTR [eax-0x73]
  424cf4:	mov    esp,0x80008091
  424cf9:	scas   al,BYTE PTR es:[edi]
  424cfa:	push   edi
  424cfb:	es in  al,dx
  424cfd:	(bad)  
  424cfe:	stc    
  424cff:	dec    esi
  424d00:	mov    al,0x86
  424d02:	mov    dl,BYTE PTR [edx-0x63]
  424d05:	mov    dl,0x41
  424d07:	and    esi,DWORD PTR [edi+0x6a]
  424d0a:	fistp  WORD PTR [esi]
  424d0c:	rcr    DWORD PTR [ecx+0x3f0606d4],1
  424d12:	repnz lock in eax,0x74
  424d16:	in     eax,dx
  424d17:	rcr    BYTE PTR [eax+edx*2-0x4d62f0ad],0x86
  424d1f:	loopne 0x424d84
  424d21:	xchg   edi,eax
  424d22:	aad    0x40
  424d24:	inc    DWORD PTR [ebx+0x6e]
  424d27:	mov    ds:0xfe511185,eax
  424d2c:	scas   al,BYTE PTR es:[edi]
  424d2d:	xchg   ebx,eax
  424d2e:	rol    ebx,cl
  424d30:	(bad)  
  424d32:	inc    edx
  424d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d34:	sub    DWORD PTR [esi+0x5e6e35aa],edi
  424d3a:	mov    ebx,0x83443f8f
  424d3f:	bound  ecx,QWORD PTR [ebx]
  424d41:	and    BYTE PTR [ebx],dl
  424d43:	stc    
  424d44:	gs xor ebx,ecx
  424d47:	mov    edi,0xd82df917
  424d4c:	jbe    0x424d30
  424d4e:	aam    0xb7
  424d50:	mov    es,esp
  424d52:	arpl   WORD PTR [ecx+eax*4-0x72e45e91],sp
  424d59:	mov    al,0xad
  424d5b:	(bad)  
  424d5c:	sti    
  424d5d:	pop    ds
  424d5e:	xor    dh,BYTE PTR [ecx+0x3a]
  424d61:	mov    bl,0x56
  424d63:	mov    ebp,0x61b14bb3
  424d68:	add    bl,BYTE PTR [ebx-0x36]
  424d6b:	lock dec ecx
  424d6d:	stc    
  424d6e:	in     al,dx
  424d6f:	and    eax,0xe2621150
  424d74:	js     0x424d7e
  424d76:	in     eax,0x3e
  424d78:	ret    0x64
  424d7b:	add    BYTE PTR [edx-0x5b61f90],ch
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424da4
  424d89:	ret    0x2189
  424d8c:	call   0x86424f57
  424d91:	add    al,BYTE PTR [eax]
  424d93:	add    BYTE PTR [edx+0x54],bl
  424d96:	outs   dx,BYTE PTR ds:[esi]
  424d97:	sbb    eax,DWORD PTR [edx]
  424d99:	fsub   QWORD PTR [edx+eiz*8]
  424d9c:	es aaa 
  424d9e:	pushf  
  424d9f:	pop    ebx
  424da0:	iret   
  424da1:	fwait
  424da2:	pop    es
  424da3:	and    DWORD PTR [eax+edi*2],esp
  424da6:	push   ebp
  424da7:	(bad)  
  424da8:	jle    0x424d46
  424daa:	jg     0x424e0f
  424dac:	rep lock stos DWORD PTR es:[edi],eax
  424daf:	imul   ebx,DWORD PTR [esi+0x75],0xffffff8a
  424db3:	outs   dx,DWORD PTR ds:[esi]
  424db4:	les    edx,FWORD PTR [ecx]
  424db6:	pop    ds
  424db7:	es or  bh,dl
  424dba:	sar    ch,0xc2
  424dbd:	enter  0x38b3,0x22
  424dc1:	fldenv [ecx+ebx*1-0x16]
  424dc5:	sahf   
  424dc6:	xchg   ebp,eax
  424dc7:	adc    al,0xb5
  424dc9:	or     DWORD PTR [ebp+0x369882fb],esp
  424dcf:	rcr    BYTE PTR [eax+edx*4-0x48],cl
  424dd3:	inc    esi
  424dd4:	xor    eax,0x6e602b5
  424dd9:	xchg   BYTE PTR [edi+0x77],dh
  424ddc:	jle    0x424dac
  424dde:	and    BYTE PTR [ebp+0x64776a18],ah
  424de4:	popa   
  424de5:	setnp  BYTE PTR [ebp-0x67ad08a4]
  424dec:	cmp    BYTE PTR [ecx+0x32],cl
  424def:	test   al,0xd6
  424df1:	xor    DWORD PTR [esp+ebx*8+0x78],edi
  424df5:	push   cs
  424df6:	xchg   ebp,eax
  424df7:	pop    eax
  424df8:	or     eax,0xd412ec17
  424dfd:	cmp    al,0x21
  424dff:	test   edx,esi
  424e01:	or     al,al
  424e03:	(bad)  
  424e04:	shr    ebx,cl
  424e06:	jnp    0x424db7
  424e08:	fyl2xp1 
  424e0a:	enter  0x6cd5,0x34
  424e0e:	scas   eax,DWORD PTR es:[edi]
  424e0f:	sbb    eax,0xdc9320a9
  424e14:	ss xor al,0x96
  424e17:	jl     0x424de5
  424e19:	jge    0x424e06
  424e1b:	cmp    edx,DWORD PTR ds:0xbed5bf4d
  424e21:	pop    ecx
  424e22:	xchg   esi,eax
  424e23:	sar    dh,1
  424e25:	push   ebx
  424e26:	jne    0x424ddd
  424e28:	sbb    BYTE PTR [eax+0x5d],bl
  424e2b:	rol    BYTE PTR [ebx],0x1f
  424e2e:	and    ebp,ebx
  424e30:	or     BYTE PTR [ecx+ecx*1],ch
  424e33:	ss inc ebp
  424e35:	pusha  
  424e36:	ins    DWORD PTR es:[edi],dx
  424e37:	inc    ecx
  424e38:	sub    DWORD PTR ds:0x375c0c71,edi
  424e3e:	aaa    
  424e3f:	push   es
  424e40:	add    edx,edi
  424e42:	test   DWORD PTR [ebp-0x57754f1],ebp
  424e48:	ds dec ebp
  424e4a:	push   0xffffffc6
  424e4c:	test   eax,0x2be14ce5
  424e51:	and    al,0x6b
  424e53:	cmc    
  424e54:	jo     0x424e2f
  424e56:	(bad)  [ebx+0x52]
  424e59:	xlat   BYTE PTR ds:[ebx]
  424e5a:	(bad)  
  424e5b:	xchg   esp,eax
  424e5c:	ja     0x424e4a
  424e5e:	pushf  
  424e5f:	xchg   edi,eax
  424e60:	dec    esi
  424e61:	xchg   ecx,eax
  424e62:	adc    al,0x49
  424e64:	rcr    esp,0x47
  424e67:	ja     0x424e03
  424e69:	push   cs
  424e6a:	cmp    al,0x48
  424e6c:	test   dh,bl
  424e6e:	test   DWORD PTR [esi-0x10],eax
  424e71:	xchg   ebp,eax
  424e72:	inc    ebp
  424e73:	xor    DWORD PTR [esp+ebx*4],0x304bf1fa
  424e7a:	jp     0x424eda
  424e7c:	js     0x424e72
  424e7e:	mov    ds:0x3e671378,al
  424e83:	sti    
  424e84:	jb     0x424eb2
  424e86:	rol    DWORD PTR [ecx],cl
  424e88:	jb     0x424eb2
  424e8a:	fstp   QWORD PTR [ebp+0x470a484e]
  424e90:	cli    
  424e91:	out    0xc4,eax
  424e93:	jle    0x424f00
  424e95:	retf   
  424e96:	(bad)  
  424e97:	or     BYTE PTR [esi],dl
  424e99:	push   esi
  424e9a:	aas    
  424e9b:	int    0x2d
  424e9d:	(bad)  
  424e9e:	outs   dx,DWORD PTR ds:[esi]
  424e9f:	cwde   
  424ea0:	jb     0x424ef6
  424ea2:	sbb    al,0xc4
  424ea4:	out    dx,eax
  424ea5:	outs   dx,BYTE PTR ds:[esi]
  424ea6:	mov    dh,0x91
  424ea8:	retf   
  424ea9:	sbb    BYTE PTR [ebp-0x320c944d],0x9a
  424eb0:	retf   0xec01
  424eb3:	into   
  424eb4:	and    DWORD PTR [ebx-0xfe74276],0x6a
  424ebb:	sbb    al,0x8f
  424ebd:	sbb    BYTE PTR [ecx],cl
  424ebf:	mov    esi,0x37501c27
  424ec4:	sub    al,0x97
  424ec6:	or     BYTE PTR [ecx-0x1a],ch
  424ec9:	cmp    BYTE PTR [eax-0x40],dh
  424ecc:	jle    0x424eab
  424ece:	pop    ecx
  424ecf:	repz fidiv DWORD PTR es:[ebx]
  424ed3:	xchg   edi,eax
  424ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ed5:	pop    ss
  424ed6:	ror    BYTE PTR [esi+0x74],cl
  424ed9:	dec    esp
  424eda:	int3   
  424edb:	out    dx,al
  424edc:	jo     0x424ee7
  424ede:	cmc    
  424edf:	(bad)  
  424ee0:	mov    edx,DWORD PTR [ecx+0x12]
  424ee3:	pushf  
  424ee4:	cmp    ebp,DWORD PTR [eax-0xeb7b065]
  424eea:	adc    eax,0x9ffc56a1
  424eef:	and    BYTE PTR [esp+edi*2],0xe7
  424ef3:	push   ds
  424ef4:	call   DWORD PTR [ebp+0x78]
  424ef7:	mov    eax,ds:0xb8bcf242
  424efc:	push   0xdd023fc0
  424f01:	lock adc BYTE PTR [edx+0x3a],ch
  424f05:	add    DWORD PTR [edi],0x53
  424f08:	aaa    
  424f09:	mov    ?,WORD PTR [edx-0x2e3f5071]
  424f0f:	cmp    eax,DWORD PTR [eax+eax*8-0x6f04953d]
  424f16:	mov    eax,ebp
  424f18:	or     DWORD PTR [ebx+eiz*2-0xe],esp
  424f1c:	xchg   edx,edx
  424f1e:	frstor [edx-0x11b43f7c]
  424f24:	cdq    
  424f25:	sbb    al,0x4
  424f27:	push   sp
  424f29:	stos   BYTE PTR es:[edi],al
  424f2a:	fwait
  424f2b:	jmp    0xfa74:0x8645be57
  424f32:	(bad)
  424f37:	lahf   
  424f38:	push   ss
  424f39:	pop    ebx
  424f3a:	add    bl,BYTE PTR [eax-0x8e8e70f]
  424f40:	shl    DWORD PTR [edx+0x163835],1
  424f46:	mov    edx,0x6dd4bb8
  424f4b:	les    ecx,FWORD PTR [ebx]
  424f4d:	mov    edx,DWORD PTR [ecx-0x1d5d1a66]
  424f53:	es push cs
  424f55:	xor    al,0x8b
  424f57:	dec    bp
  424f59:	xchg   edi,eax
  424f5a:	pop    ebp
  424f5b:	mov    cl,ah
  424f5d:	xchg   DWORD PTR [eax],ebx
  424f5f:	jp     0x424f16
  424f61:	in     al,dx
  424f62:	addr16 mov ah,0xd
  424f65:	mov    esp,0x24224bbb
  424f6a:	mov    ah,0x89
  424f6c:	fldenv [eax+eiz*1+0x101ec33f]
  424f73:	test   al,0xcf
  424f75:	and    ah,bh
  424f77:	adc    al,0x7f
  424f79:	fs mov dh,0x2e
  424f7c:	mov    BYTE PTR [ebx],bh
  424f7e:	loop   0x424f3e
  424f80:	cmc    
  424f81:	pop    bp
  424f83:	(bad)  
  424f84:	aam    0x48
  424f86:	inc    esi
  424f87:	outs   dx,BYTE PTR ds:[esi]
  424f88:	mov    bl,0x49
  424f8a:	jo     0x424f7a
  424f8c:	xchg   edi,eax
  424f8d:	xchg   ecx,eax
  424f8e:	xor    BYTE PTR fs:[esi+0x159097b8],bh
  424f95:	daa    
  424f96:	push   ebp
  424f97:	dec    edx
  424f98:	fdiv   QWORD PTR [esi-0x51]
  424f9b:	add    eax,0xb02445f
  424fa0:	popf   
  424fa1:	stos   BYTE PTR es:[edi],al
  424fa2:	mov    esi,0xe9c4df49
  424fa7:	clc    
  424fa8:	inc    edx
  424fa9:	adc    eax,0x8a4ce42a
  424fae:	stos   BYTE PTR es:[edi],al
  424faf:	fs pop edi
  424fb1:	fstp   TBYTE PTR [edx-0x708188c9]
  424fb7:	ror    DWORD PTR [edi+ecx*1-0x4c135744],cl
  424fbe:	cs add bh,dl
  424fc1:	sub    eax,0xc528cbda
  424fc6:	mov    WORD PTR [eax+ebp*4],ds
  424fc9:	mov    ds:0x825800ae,al
  424fce:	sbb    eax,0x1bb26b3c
  424fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fd4:	pop    esp
  424fd5:	sahf   
  424fd6:	or     al,0x69
  424fd8:	dec    ebp
  424fd9:	xlat   BYTE PTR ds:[ebx]
  424fda:	jne    0x425046
  424fdc:	mov    DWORD PTR [ecx-0x51],ecx
  424fdf:	xor    eax,0x220daa10
  424fe4:	sbb    BYTE PTR [esi-0x5b],dl
  424fe7:	hlt    
  424fe8:	add    DWORD PTR [eax*1+0x46d2d696],0x78b0a263
  424ff3:	jge    0x42504d
  424ff5:	adc    eax,0x77168704
  424ffa:	inc    edx
  424ffb:	repnz jecxz 0x424ffa
  424ffe:	bound  esi,QWORD PTR [edi]
  425000:	cs or  al,0x6d
  425003:	cli    
  425004:	outs   dx,DWORD PTR ds:[esi]
  425005:	sbb    eax,0xb9444305
  42500a:	repz retf 0x82ad
  42500e:	push   edx
  42500f:	fistp  DWORD PTR [ebp+0x1cbcd1c5]
  425015:	faddp  st(4),st
  425017:	ja     0x424f9f
  425019:	dec    edx
  42501a:	add    BYTE PTR [eax],al
  42501c:	dec    edx
  42501d:	xchg   DWORD PTR [edx+0x4c],edx
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x1e7cd7df
  42502c:	outs   dx,BYTE PTR ds:[esi]
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   BYTE PTR [edx],al
  425032:	add    BYTE PTR [eax],al
  425034:	mov    BYTE PTR [esp+edx*8-0x14],bl
  425038:	pop    eax
  425039:	adc    esp,DWORD PTR [eax-0x7]
  42503c:	(bad)  
  42503d:	fldenv [edi+0x73afb9e6]
  425043:	jo     0x424fce
  425045:	aas    
  425046:	dec    eax
  425047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425048:	mov    al,0x42
  42504a:	jnp    0x425057
  42504c:	xor    eax,0xaf73d7cd
  425051:	cmp    eax,0x70200d31
  425056:	stc    
  425057:	or     eax,0xc43413e1
  42505c:	inc    ecx
  42505d:	add    ecx,DWORD PTR [edi]
  42505f:	rcl    BYTE PTR [ebp-0x113d9d2d],1
  425065:	add    DWORD PTR [ecx+0x57983727],ebp
  42506b:	daa    
  42506c:	inc    esp
  42506d:	aad    0xe3
  42506f:	cmp    ecx,eax
  425071:	jl     0x4250b4
  425073:	sub    ebx,ebx
  425075:	cmp    BYTE PTR [ebx-0x32],cl
  425078:	pop    esi
  425079:	jb     0x4250d7
  42507b:	les    ecx,FWORD PTR [ebx]
  42507d:	call   0xcb42:0x6c114f
  425084:	mov    esp,DWORD PTR [ecx+0x1583fdf0]
  42508a:	inc    edi
  42508b:	jne    0x425042
  42508d:	fisub  WORD PTR es:[edi+0x6f4afff1]
  425094:	push   edi
  425095:	jo     0x4250d8
  425097:	fdivr  QWORD PTR [esi]
  425099:	lea    edi,[esi+0xce671ef]
  42509f:	stos   DWORD PTR es:[edi],eax
  4250a0:	add    ah,dh
  4250a2:	sbb    bh,dl
  4250a4:	fs xchg ebp,eax
  4250a6:	into   
  4250a7:	call   0x15f548bf
  4250ac:	inc    esp
  4250ad:	rol    DWORD PTR [edx-0x2c75ca5],cl
  4250b3:	pop    ebx
  4250b4:	mov    bh,0x7d
  4250b6:	js     0x425081
  4250b8:	jecxz  0x4250c2
  4250ba:	and    edi,DWORD PTR [eax]
  4250bc:	inc    eax
  4250bd:	les    eax,FWORD PTR [ebp-0x6b]
  4250c0:	(bad)  
  4250c1:	sbb    bl,dh
  4250c3:	inc    ebx
  4250c4:	std    
  4250c5:	daa    
  4250c6:	and    eax,0x8cd216e9
  4250cb:	js     0x425081
  4250cd:	cwde   
  4250ce:	mov    dl,0x1
  4250d0:	mov    eax,0x101f3f7b
  4250d5:	(bad)  
  4250d6:	dec    esi
  4250d7:	pop    ebx
  4250d8:	shl    BYTE PTR [ebp-0x4fa5591b],1
  4250de:	pop    edi
  4250df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250e0:	push   esi
  4250e1:	pop    ds
  4250e2:	mov    edi,cs
  4250e4:	push   eax
  4250e5:	ficom  DWORD PTR [esi+esi*2+0x4a5a3511]
  4250ec:	in     eax,0xbb
  4250ee:	and    eax,0xcadf5eee
  4250f3:	mov    dl,0x1
  4250f5:	ret    0x6791
  4250f8:	or     DWORD PTR [ebp-0x50],ecx
  4250fb:	xor    BYTE PTR ds:0xd76299ff,bl
  425101:	out    0xa,al
  425103:	retf   0x77f3
  425106:	mov    edx,0xc5723199
  42510b:	jno    0x4250dd
  42510d:	jns    0x425184
  42510f:	pop    esp
  425110:	das    
  425111:	mov    BYTE PTR [ebp+0x45],bl
  425114:	or     al,0xb5
  425116:	bound  edi,QWORD PTR [edi+edx*8]
  425119:	and    eax,0x55ff0ef6
  42511e:	dec    ebp
  42511f:	push   0xffffffff
  425121:	mov    dh,0x73
  425123:	lods   eax,DWORD PTR ds:[esi]
  425124:	sbb    eax,0x1f00f62d
  425129:	imul   ebp,esi,0xabc5753b
  42512f:	cmp    al,0xd
  425131:	jmp    0x7c1b:0x3a3788e7
  425138:	dec    esp
  425139:	xchg   esi,eax
  42513a:	sub    al,BYTE PTR [esi-0x19]
  42513d:	ja     0x4251b3
  42513f:	xchg   esp,eax
  425140:	lock xchg ebx,eax
  425142:	psadbw mm3,QWORD PTR [eax+0x3bed1cae]
  425149:	adc    ebx,esi
  42514b:	mov    ah,0x78
  42514d:	sbb    al,al
  42514f:	sub    ch,BYTE PTR [ebx-0x289c5804]
  425155:	push   ss
  425156:	cmp    BYTE PTR [edx-0x7ad6396e],al
  42515c:	es pop ecx
  42515e:	mov    DWORD PTR [edi+eax*8],ecx
  425161:	rcr    ebp,1
  425163:	cmc    
  425164:	(bad)  
  425165:	mov    WORD PTR [eax+0x1e],es
  425168:	or     BYTE PTR [edi],ch
  42516a:	cmp    al,0xe5
  42516c:	es xor al,0x41
  42516f:	(bad)  
  425170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425171:	ins    BYTE PTR es:[edi],dx
  425172:	in     eax,0x11
  425174:	outs   dx,BYTE PTR ds:[esi]
  425175:	sti    
  425176:	push   ecx
  425177:	cwde   
  425178:	(bad)  
  425179:	aad    0x7c
  42517b:	push   eax
  42517c:	add    DWORD PTR [esi+0x59],esi
  42517f:	clc    
  425180:	setge  BYTE PTR [edi]
  425183:	mov    bl,0x23
  425185:	mov    ds:0x1f183a19,eax
  42518a:	imul   ebx,esi,0x93d88783
  425190:	jmp    0xe84e6975
  425195:	sbb    eax,0x69e03ad1
  42519a:	ins    DWORD PTR es:[edi],dx
  42519b:	sbb    dl,al
  42519d:	push   0xee06b104
  4251a2:	xor    esi,0x74b55005
  4251a8:	jle    0x425222
  4251aa:	mov    eax,ds:0x2a6d684
  4251af:	retf   
  4251b0:	adc    ebp,esp
  4251b2:	mov    ebx,0x350b4fca
  4251b7:	xchg   ebp,eax
  4251b8:	(bad)  
  4251b9:	and    eax,0xa29dc13c
  4251be:	test   DWORD PTR [ebx+0x696989a5],0x886e7e66
  4251c8:	in     al,dx
  4251c9:	jo     0x4251b3
  4251cb:	adc    cl,ah
  4251cd:	sub    BYTE PTR [edi-0x20],0x69
  4251d1:	cmp    cl,BYTE PTR [ebp-0x41ac5d5b]
  4251d7:	adc    al,0x91
  4251d9:	or     DWORD PTR ds:0xbbf03cdf,edx
  4251df:	call   DWORD PTR [ecx+0x521c3a3e]
  4251e5:	dec    edi
  4251e6:	and    esp,DWORD PTR [eax+edi*8-0x461f42f5]
  4251ed:	pop    ds
  4251ee:	test   BYTE PTR [ecx],ah
  4251f0:	xchg   ebx,ecx
  4251f2:	or     bh,BYTE PTR [eax]
  4251f4:	mov    edx,esi
  4251f6:	popa   
  4251f7:	and    eax,0x9fafb79d
  4251fc:	or     DWORD PTR [ecx+0xc6fcf88],edx
  425202:	fbstp  TBYTE PTR [ebp+0x76dd0787]
  425208:	jle    0x425232
  42520a:	scas   al,BYTE PTR es:[edi]
  42520b:	pop    esp
  42520c:	lahf   
  42520d:	push   esi
  42520e:	lock mov ah,0xa0
  425211:	or     dl,BYTE PTR [ecx-0x17]
  425214:	mov    esp,0xdf4042f5
  425219:	cmp    DWORD PTR [ebp-0x6b],ebx
  42521c:	push   cs
  42521d:	ins    DWORD PTR es:[edi],dx
  42521e:	inc    esi
  42521f:	adc    BYTE PTR [edi+0x1bcb7acf],ch
  425225:	(bad)  
  425226:	loopne 0x4251e0
  425228:	out    0x50,eax
  42522a:	jmp    0x425280
  42522c:	mov    dh,0x60
  42522e:	mov    al,0x22
  425230:	or     ch,BYTE PTR [ebx]
  425232:	call   0x5e9dbd94
  425237:	mov    ds:0x471f2e3d,al
  42523c:	jb     0x42528e
  42523e:	push   ebp
  42523f:	jmp    0xe87cd3bf
  425244:	jo     0x4251cb
  425246:	jmp    0x425270
  425248:	aas    
  425249:	sub    bh,BYTE PTR [esi+0x4f]
  42524c:	inc    ebx
  42524d:	popf   
  42524e:	xor    al,0x34
  425250:	lds    edx,FWORD PTR [edi+0x601a48b6]
  425256:	out    dx,eax
  425257:	shr    BYTE PTR [esi-0xf6e5624],0x85
  42525e:	mov    ah,0x98
  425260:	sbb    al,0x6e
  425262:	mov    bh,BYTE PTR [edi]
  425264:	inc    esi
  425265:	pusha  
  425266:	pop    ecx
  425267:	shl    DWORD PTR [eax],1
  425269:	jmp    0x6d8cfc28
  42526e:	xor    dh,ch
  425270:	addr16 int3 
  425272:	or     ecx,ecx
  425274:	adc    al,0xd1
  425276:	les    esi,FWORD PTR [eax+0x22]
  425279:	cld    
  42527a:	push   0x1
  42527c:	pushf  
  42527d:	hlt    
  42527e:	pop    edx
  42527f:	push   0xe56745a0
  425284:	fld    st(3)
  425286:	push   ebp
  425287:	sti    
  425288:	mov    BYTE PTR [eax],dl
  42528a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42528b:	pop    esp
  42528c:	lea    eax,[edi]
  42528e:	inc    esp
  42528f:	mov    cl,0xbd
  425291:	popf   
  425292:	xchg   esi,eax
  425293:	in     al,dx
  425294:	cdq    
  425295:	sbb    dl,BYTE PTR [ebp+ecx*8-0x62]
  425299:	out    dx,al
  42529a:	rcl    BYTE PTR [edi+0x5d519c5a],cl
  4252a0:	push   esp
  4252a1:	jge    0x4252c5
  4252a3:	daa    
  4252a4:	(bad)  
  4252a5:	or     ah,cl
  4252a7:	pop    es
  4252a8:	cdq    
  4252a9:	dec    esi
  4252aa:	int3   
  4252ab:	jne    0x4252d4
  4252ad:	enter  0x17f,0x23
  4252b1:	mov    DWORD PTR ds:0xf789a24a,edx
  4252b7:	pop    esi
  4252b8:	push   esp
  4252b9:	pop    es
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	or     dl,BYTE PTR [edx-0x3c684]
  4252c2:	dec    edi
  4252c3:	mov    bl,0xec
  4252c5:	jo     0x42527e
  4252c7:	lea    edi,[ebx+0x18]
  4252ca:	sar    DWORD PTR [edi],0xf4
  4252cd:	retf   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	xchg   BYTE PTR [edx],al
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	(bad)  
  4252d5:	(bad)  
  4252d6:	pop    ds
  4252d7:	int    0xe0
  4252d9:	pusha  
  4252da:	nop
  4252db:	jnp    0x4252ee
  4252dd:	int    0x75
  4252df:	stos   BYTE PTR es:[edi],al
  4252e0:	dec    esi
  4252e1:	ss push esp
  4252e3:	push   ecx
  4252e4:	jmp    0xf939:0x4e7dc89
  4252eb:	stc    
  4252ec:	imul   eax,DWORD PTR fs:[esi-0x6c],0xeb1e3868
  4252f4:	push   ebp
  4252f5:	cwde   
  4252f6:	cmp    ebx,eax
  4252f8:	mov    ecx,0xbfab0acd
  4252fd:	adc    bl,BYTE PTR [ebp+0x6a]
  425300:	inc    eax
  425301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425302:	push   edx
  425303:	push   eax
  425304:	cmp    BYTE PTR [edx],ch
  425306:	shl    edi,0x2d
  425309:	cmp    al,0x29
  42530b:	xor    eax,0xb2d84c80
  425310:	in     eax,0x61
  425312:	jge    0x425365
  425314:	mov    ebp,0x2a64a0ad
  425319:	leave  
  42531a:	das    
  42531b:	jp     0x4252a8
  42531d:	icebp  
  42531e:	inc    edi
  42531f:	pushf  
  425320:	sysexit 
  425322:	test   ebp,0x2cf74663
  425328:	lahf   
  425329:	pop    esi
  42532a:	arpl   WORD PTR [edi],di
  42532c:	cli    
  42532d:	pop    ecx
  42532e:	imul   ebx,DWORD PTR [esi],0xffffffa4
  425331:	cmp    eax,0x7446eaad
  425336:	xchg   esp,eax
  425337:	mov    ebp,DWORD PTR [esi+ecx*1-0x66]
  42533b:	pop    ss
  42533c:	pushf  
  42533d:	idiv   DWORD PTR [ebx+0x2dea0db5]
  425343:	add    al,0x60
  425345:	leave  
  425346:	test   BYTE PTR [eax+ebx*4],ch
  425349:	rcl    edx,0xf
  42534c:	xor    BYTE PTR [esi+0x44],0xbe
  425350:	and    dl,BYTE PTR [esi+0x59]
  425353:	sahf   
  425354:	(bad)  
  425355:	and    al,0x8d
  425357:	call   0x1fd32a03
  42535c:	adc    DWORD PTR [ecx-0x5cd2e72f],esp
  425362:	push   ss
  425363:	jae    0x42534d
  425365:	out    0xe5,eax
  425367:	add    ebx,DWORD PTR [edx-0x5eaef211]
  42536d:	or     BYTE PTR [ebx+edi*4],ah
  425370:	pop    esi
  425371:	mov    dh,0x61
  425373:	fadd   QWORD PTR [esi+0x1]
  425376:	test   BYTE PTR [edx+0x39],bl
  425379:	mov    dh,al
  42537b:	inc    eax
  42537c:	xlat   BYTE PTR ds:[ebx]
  42537d:	repnz dec edi
  42537f:	lea    esp,[esi+0x12]
  425382:	ds aad 0x50
  425385:	sbb    BYTE PTR [esi+0xa6a87c9],al
  42538b:	xchg   ebx,eax
  42538c:	cmp    ah,BYTE PTR [edi-0x28]
  42538f:	shl    BYTE PTR [esi-0x54],1
  425392:	dec    ecx
  425393:	jecxz  0x425337
  425395:	mov    edi,0xc64a40bd
  42539a:	not    DWORD PTR [eax-0x66]
  42539d:	adc    DWORD PTR [eax+ebp*8+0x1f],esp
  4253a1:	pop    es
  4253a2:	cdq    
  4253a3:	dec    esp
  4253a4:	aad    0x34
  4253a6:	inc    edx
  4253a7:	inc    edx
  4253a8:	(bad)  
  4253a9:	enter  0x996c,0x28
  4253ad:	push   edx
  4253ae:	repz fisubr WORD PTR [edx-0x35964c7d]
  4253b5:	mov    ds:0x4aae006a,al
  4253ba:	es sti 
  4253bc:	mov    ch,0xdb
  4253be:	cmp    al,0xc1
  4253c0:	jecxz  0x425412
  4253c2:	test   al,al
  4253c4:	or     BYTE PTR [esi],ah
  4253c6:	inc    esi
  4253c7:	pop    edi
  4253c8:	xlat   BYTE PTR ds:[ebx]
  4253c9:	cmp    edi,esi
  4253cb:	sub    al,0x5
  4253cd:	add    al,0x6a
  4253cf:	and    DWORD PTR [esi-0x75],0xffffff81
  4253d3:	call   0x1b0fa0c4
  4253d8:	dec    esp
  4253d9:	xchg   BYTE PTR [ebp-0x68],bh
  4253dc:	sbb    bl,bh
  4253de:	enter  0xd8c0,0xbf
  4253e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253e3:	popa   
  4253e4:	enter  0x12e3,0x60
  4253e8:	mov    al,bh
  4253ea:	xlat   BYTE PTR ds:[ebx]
  4253eb:	xchg   esi,eax
  4253ec:	xchg   ebx,eax
  4253ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253ee:	enter  0x2eca,0x53
  4253f2:	mov    ebx,0xd27fa9f3
  4253f7:	ins    DWORD PTR es:[edi],dx
  4253f8:	gs or  al,0x7e
  4253fb:	int3   
  4253fc:	fucomp st(7)
  4253fe:	bswap  esi
  425400:	je     0x9738e878
  425406:	hlt    
  425407:	adc    dl,BYTE PTR [ecx+0x64]
  42540a:	(bad)  
  42540b:	adc    eax,0xbc023101
  425410:	loop   0x425453
  425412:	ins    BYTE PTR es:[edi],dx
  425413:	inc    esp
  425414:	adc    DWORD PTR [ecx+0xb],edi
  425417:	sar    bh,cl
  425419:	in     eax,dx
  42541a:	arpl   si,bp
  42541c:	or     BYTE PTR [ebx-0x1d],al
  42541f:	pop    ss
  425420:	stos   DWORD PTR es:[edi],eax
  425421:	or     eax,0xabe49010
  425426:	jl     0x4253bb
  425428:	repnz dec eax
  42542a:	dec    edi
  42542b:	pop    edx
  42542c:	call   0x688c:0x267c7599
  425433:	cmp    ch,BYTE PTR [eax+0x28]
  425436:	mov    eax,ds:0x549a98e3
  42543b:	inc    eax
  42543c:	push   edi
  42543d:	neg    BYTE PTR [ebx]
  42543f:	pop    edx
  425440:	add    edx,DWORD PTR [ebp-0x748d0c3a]
  425446:	xacquire xchg BYTE PTR [eax],ah
  425449:	jae    0x425404
  42544b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42544c:	mov    es,eax
  42544e:	push   es
  42544f:	or     eax,0x390e6ae6
  425454:	jb     0x425402
  425456:	data16 aas 
  425458:	popa   
  425459:	imul   edi,DWORD PTR [edi-0x40360060],0xffffff9a
  425460:	and    DWORD PTR [edi+0x75],0x26de1179
  425467:	out    0xd4,eax
  425469:	xchg   DWORD PTR [esp+esi*1],edx
  42546c:	cld    
  42546d:	sub    eax,0x6048eb52
  425472:	mov    ds:0xfd05478,eax
  425477:	push   ecx
  425478:	stc    
  425479:	cmc    
  42547a:	jl     0x425417
  42547c:	pop    ecx
  42547d:	or     eax,0x54055d5e
  425482:	push   edx
  425483:	inc    edi
  425484:	sub    al,BYTE PTR [ebx+0x25]
  425487:	add    esi,edx
  425489:	je     0x4254fa
  42548b:	or     BYTE PTR [ebx-0x4],dh
  42548e:	and    eax,0x83f3d757
  425493:	inc    eax
  425494:	dec    edi
  425495:	repz sti 
  425497:	jo     0x425437
  425499:	lds    edi,FWORD PTR [edi-0x7d]
  42549c:	adc    dh,BYTE PTR [edx-0x4d41f4ff]
  4254a2:	cmp    al,0x28
  4254a4:	sbb    eax,0xeffe3149
  4254a9:	cs sahf 
  4254ab:	pop    edi
  4254ac:	loopne 0x42546d
  4254ae:	add    eax,0xf52d55f6
  4254b3:	inc    ecx
  4254b4:	inc    ebp
  4254b5:	sbb    eax,0x93d1a01c
  4254ba:	mov    al,ds:0xdb0f9620
  4254bf:	pop    esi
  4254c0:	jle    0x425500
  4254c2:	jp     0x425459
  4254c4:	pop    edx
  4254c5:	inc    ecx
  4254c6:	arpl   di,bp
  4254c8:	jns    0x4254a6
  4254ca:	aad    0xc2
  4254cc:	dec    edx
  4254cd:	xor    DWORD PTR [eax-0x33e15845],esp
  4254d3:	push   ecx
  4254d4:	mov    fs,WORD PTR [esi]
  4254d6:	lods   al,BYTE PTR ds:[esi]
  4254d7:	das    
  4254d8:	call   0xd1d48c8e
  4254dd:	sub    esi,DWORD PTR [ebx-0x62]
  4254e0:	push   ebp
  4254e1:	inc    edx
  4254e2:	imul   esi,DWORD PTR [edi-0x5d],0xffffffbb
  4254e6:	fwait
  4254e7:	jns    0x42550e
  4254e9:	mov    edi,0xe686e1b5
  4254ee:	pop    ds
  4254ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254f0:	jae    0x425561
  4254f2:	mov    bl,0x4e
  4254f4:	in     eax,dx
  4254f5:	mov    bh,0xdb
  4254f7:	out    0xf1,al
  4254f9:	jb     0x425517
  4254fb:	inc    esi
  4254fc:	xor    al,0x88
  4254fe:	sub    bl,dl
  425500:	pop    ecx
  425501:	aaa    
  425502:	mov    ch,0x97
  425504:	mov    ds:0x2dda7112,al
  425509:	mov    ebx,0x69757446
  42550e:	xor    ch,BYTE PTR [ecx+0x1f]
  425511:	out    dx,al
  425512:	rol    BYTE PTR [edi+0x64e4b91],0x73
  425519:	jl     0x425565
  42551b:	out    0xa4,eax
  42551d:	repz dec eax
  42551f:	daa    
  425520:	dec    esp
  425521:	fucomp st(4)
  425523:	or     eax,esp
  425525:	mov    edi,0x80342efa
  42552a:	and    al,0x4c
  42552c:	dec    ecx
  42552e:	out    0x93,eax
  425530:	mov    ch,0x85
  425532:	lahf   
  425533:	sahf   
  425534:	sbb    bh,BYTE PTR [edi]
  425536:	clc    
  425537:	dec    eax
  425538:	stos   BYTE PTR es:[edi],al
  425539:	rcr    DWORD PTR [ebp+0x5a533a3f],cl
  42553f:	mov    ebx,0xf8346f23
  425544:	call   0x6ecacd1a
  425549:	data16 arpl WORD PTR [edx+0x11],bx
  42554d:	not    edi
  42554f:	dec    esp
  425550:	jp     0x42557f
  425552:	jbe    0x4255bf
  425554:	cli    
  425555:	sbb    eax,0x7942ece3
  42555a:	add    BYTE PTR [eax],al
  42555c:	ret    
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	leave  
  425569:	pop    eax
  42556a:	addr16 fs jp 0x42553c
  42556e:	add    DWORD PTR [eax],eax
  425570:	xchg   BYTE PTR [edx],al
  425572:	add    BYTE PTR [eax],al
  425574:	aas    
  425575:	jmp    0xc447:0xcf482717
  42557c:	dec    esp
  42557d:	int3   
  42557e:	push   0x5c
  425580:	(bad)
  425584:	sub    edx,DWORD PTR [ebx+eax*8+0x3e8b7189]
  42558b:	and    BYTE PTR [esp+ebx*2],bh
  42558e:	ss xor bl,bh
  425591:	jae    0x425553
  425593:	cwde   
  425594:	mov    al,ds:0xf2623b86
  425599:	fidivr WORD PTR [edi-0x16c41853]
  42559f:	sbb    eax,0xbb6dcfef
  4255a4:	sub    al,0x48
  4255a6:	test   eax,0xa201c50c
  4255ab:	inc    ecx
  4255ac:	add    dl,BYTE PTR [eax+0x25]
  4255af:	daa    
  4255b0:	test   bh,ah
  4255b2:	(bad)  
  4255b3:	aam    0x79
  4255b5:	dec    ebx
  4255b6:	push   0x2
  4255b8:	mov    bl,0x45
  4255ba:	inc    edx
  4255bb:	cld    
  4255bc:	cli    
  4255bd:	xchg   ebp,eax
  4255be:	loopne 0x4255aa
  4255c0:	repnz stos DWORD PTR es:[edi],eax
  4255c2:	aas    
  4255c3:	add    cl,BYTE PTR [esi-0x44]
  4255c6:	outs   dx,DWORD PTR ds:[esi]
  4255c7:	adc    ebx,edi
  4255c9:	mov    bl,0xe8
  4255cb:	leave  
  4255cc:	push   0x68752aa4
  4255d1:	mov    WORD PTR [ebx+0x47c894dc],cs
  4255d7:	dec    edx
  4255d8:	sbb    DWORD PTR [ebx+0x68],ebp
  4255db:	enter  0xc799,0x57
  4255df:	js     0x4255d1
  4255e1:	shl    BYTE PTR [esp+edx*4+0x63],1
  4255e5:	jge    0x425601
  4255e7:	pop    edx
  4255e8:	sbb    al,0xac
  4255ea:	sub    edi,DWORD PTR [ecx]
  4255ec:	or     bh,BYTE PTR [edx+ebx*2+0x12e44eac]
  4255f3:	out    dx,eax
  4255f4:	and    esi,esi
  4255f6:	bts    ebp,eax
  4255f9:	lahf   
  4255fa:	lds    edx,FWORD PTR [esi-0x5]
  4255fd:	mov    edi,DWORD PTR ss:[ecx+eax*8]
  425601:	test   BYTE PTR [esi-0xb],dl
  425604:	mov    ss,WORD PTR [ebx+0x5c]
  425607:	push   0x76
  425609:	inc    ecx
  42560a:	lds    esp,FWORD PTR [ecx]
  42560c:	and    al,0x1e
  42560e:	mov    bh,BYTE PTR [ecx+0x6e8580a2]
  425614:	fdiv   DWORD PTR [eax+esi*4]
  425617:	or     ebp,edx
  425619:	pop    ds
  42561a:	cmp    BYTE PTR [ecx],dl
  42561c:	scas   eax,DWORD PTR es:[edi]
  42561d:	pop    eax
  42561e:	cmp    DWORD PTR [ebp+ebp*8+0x56],edi
  425622:	(bad)  
  425623:	in     eax,0x41
  425625:	inc    edi
  425626:	dec    ebp
  425627:	adc    DWORD PTR [ecx+ebp*2-0x4bb1df3e],esi
  42562e:	repnz sahf 
  425630:	stc    
  425631:	call   0x44b3:0x45992354
  425638:	inc    eax
  425639:	call   0x9298:0xaacccf83
  425640:	outs   dx,BYTE PTR ds:[esi]
  425641:	cli    
  425642:	rcl    DWORD PTR [edx-0x63996fdc],cl
  425648:	push   edi
  425649:	or     BYTE PTR [esi],dl
  42564b:	mov    dl,0x15
  42564d:	pushf  
  42564e:	add    edx,DWORD PTR [ecx-0x31]
  425651:	inc    eax
  425652:	sub    al,BYTE PTR [eax]
  425654:	cmp    al,0xdc
  425656:	out    dx,eax
  425657:	pop    ebx
  425658:	stos   DWORD PTR es:[edi],eax
  425659:	lock or eax,0xca90f9e9
  42565f:	push   esp
  425660:	(bad)  
  425661:	or     ebp,DWORD PTR [ebx+ebx*8-0x26637829]
  425668:	jbe    0x425661
  42566a:	mov    esi,0xeb7bf87e
  42566f:	jbe    0x42562e
  425671:	jne    0x4256e5
  425673:	mov    ebp,0xcb23088a
  425678:	push   ebp
  425679:	int3   
  42567a:	adc    eax,0x7670414c
  42567f:	jmp    0x4256d9
  425681:	retf   
  425682:	ins    BYTE PTR es:[edi],dx
  425683:	ret    0xad29
  425686:	cmp    ebp,eax
  425688:	jnp    0x425634
  42568a:	ins    BYTE PTR es:[edi],dx
  42568b:	jmp    0xe9e6:0x467ed7a2
  425692:	sahf   
  425693:	xchg   ecx,eax
  425694:	outs   dx,DWORD PTR ds:[esi]
  425695:	mov    ebp,0xbbed82e7
  42569a:	push   ebp
  42569b:	jle    0x425712
  42569d:	or     al,0xc4
  42569f:	hlt    
  4256a0:	int3   
  4256a1:	(bad)  
  4256a2:	je     0x425635
  4256a4:	sub    ecx,DWORD PTR [esi+0x7bb8c542]
  4256aa:	(bad)  
  4256ab:	in     eax,dx
  4256ac:	cmp    eax,0x9387483d
  4256b1:	sti    
  4256b2:	and    bl,bl
  4256b4:	jecxz  0x425666
  4256b6:	or     eax,0xabffae67
  4256bb:	sbb    ebx,0xf75bc519
  4256c1:	pop    es
  4256c2:	jmp    0x5b1a:0x9643cafc
  4256c9:	faddp  st(6),st
  4256cb:	push   ss
  4256cc:	in     al,0x7f
  4256ce:	push   0x298a4ba3
  4256d3:	fild   DWORD PTR [esi-0x2e4d64aa]
  4256d9:	lds    eax,FWORD PTR [ebp-0x7e938105]
  4256df:	dec    edx
  4256e0:	sar    BYTE PTR [ebx+0x4e],0xf9
  4256e4:	mov    al,0x92
  4256e6:	or     ecx,esi
  4256e8:	jmp    0x5383:0xb9bd73f7
  4256ef:	xchg   edi,eax
  4256f0:	sbb    cl,bh
  4256f2:	push   0xec3e289e
  4256f7:	push   es
  4256f8:	jbe    0x425738
  4256fa:	lock ret 
  4256fc:	jns    0x4256c3
  4256fe:	test   al,0xc5
  425700:	aad    0xce
  425702:	retf   
  425703:	push   ds
  425704:	and    eax,0xd6a87526
  425709:	push   edi
  42570a:	mov    ebx,0x73883e6d
  42570f:	push   0x7c3356ba
  425714:	fadd   st,st(1)
  425716:	shl    bh,0x17
  425719:	mov    cl,0xff
  42571b:	fs cmc 
  42571d:	repnz ffreep st(2)
  425720:	imul   ebp,DWORD PTR [edx],0x2d4b34e8
  425726:	or     eax,0xd05a1459
  42572b:	add    BYTE PTR [esi],0xa8
  42572e:	sub    eax,DWORD PTR [esi]
  425730:	hlt    
  425731:	push   ss
  425732:	hlt    
  425733:	sub    BYTE PTR [ebp-0x12],ch
  425736:	push   0xe55fe49b
  42573b:	sub    edi,ebp
  42573d:	xlat   BYTE PTR ds:[ebx]
  42573e:	je     0x42574e
  425740:	inc    ebx
  425741:	dec    ebx
  425742:	push   eax
  425743:	enter  0x8323,0x43
  425747:	ja     0x42578a
  425749:	xor    cl,BYTE PTR [edx-0x4d6c0990]
  42574f:	inc    edx
  425750:	xor    ch,dh
  425752:	dec    ecx
  425753:	jns    0x4257bc
  425755:	mov    eax,ds:0x6493faa
  42575a:	bound  ecx,QWORD PTR [ebp-0x63e04406]
  425760:	mov    BYTE PTR [esi+0x6ed67a8a],ch
  425766:	jmp    0x49e0:0xd0dfc541
  42576d:	call   0xeecd:0x24b63433
  425774:	(bad)  
  425775:	dec    esp
  425776:	push   0xdf3efb72
  42577b:	add    al,0x48
  42577d:	cmp    al,0xb8
  42577f:	pop    eax
  425780:	add    BYTE PTR [eax-0x1a8e8d87],dh
  425786:	and    eax,0x670a0f94
  42578b:	adc    eax,0x6f564ee0
  425790:	push   esi
  425791:	inc    esp
  425792:	or     bh,ah
  425794:	stc    
  425795:	outs   dx,DWORD PTR ds:[esi]
  425796:	in     al,dx
  425797:	in     al,dx
  425798:	sub    BYTE PTR [ecx],bh
  42579a:	pop    ecx
  42579b:	pushw  0xffe6
  42579e:	pop    DWORD PTR [edi-0x44dcee88]
  4257a4:	icebp  
  4257a5:	mov    ds:0x24924df7,al
  4257aa:	test   esi,eax
  4257ac:	jmp    0x42574a
  4257ae:	(bad)  
  4257af:	and    al,0x1d
  4257b1:	adc    DWORD PTR [ebp+0x6415ddae],0x492e3ab2
  4257bb:	rol    BYTE PTR [ecx+0x3e],cl
  4257be:	xor    bh,BYTE PTR [edx+edi*4+0x45]
  4257c2:	mov    ah,0xee
  4257c4:	sti    
  4257c5:	fwait
  4257c6:	(bad)  
  4257c7:	pushf  
  4257c8:	ret    
  4257c9:	fdivr  st,st(5)
  4257cb:	sub    esi,DWORD PTR [esi-0x25b54abb]
  4257d1:	add    al,BYTE PTR [edi-0x231b7108]
  4257d7:	sub    DWORD PTR [ebx+0x21],0x2811123a
  4257de:	push   ds
  4257df:	inc    eax
  4257e0:	push   ecx
  4257e1:	fild   DWORD PTR ds:0x70438621
  4257e7:	jne    0x42581b
  4257e9:	mov    eax,ds:0xa348c9ec
  4257ee:	test   DWORD PTR [esp+esi*1-0x1b],eax
  4257f2:	fiadd  DWORD PTR [ebx+0x7026fe9e]
  4257f8:	cld    
  4257f9:	outs   dx,BYTE PTR ds:[esi]
  4257fa:	add    BYTE PTR [eax],al
  4257fc:	call   0x9eff:0xefe9ef59
  425803:	jnp    0x425848
  425805:	pop    ebp
  425806:	pop    esp
  425807:	mov    cl,0xf7
  425809:	jb     0x425888
  42580b:	and    eax,DWORD PTR [eax]
  42580d:	rol    DWORD PTR [ecx],1
  42580f:	add    BYTE PTR [esi-0x1cfffffe],al
  425815:	push   ss
  425816:	in     al,0x80
  425818:	and    al,0x9b
  42581a:	loop   0x425841
  42581c:	clc    
  42581d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42581e:	sbb    ebp,DWORD PTR [eax]
  425820:	out    0xe3,al
  425822:	mov    cs,eax
  425824:	enter  0x7f06,0x79
  425828:	pop    esp
  425829:	dec    esp
  42582a:	cmp    al,0xf3
  42582c:	dec    edx
  42582d:	fs aam 0xed
  425830:	sub    eax,0x8b305778
  425835:	enter  0xffd4,0xb5
  425839:	cmp    eax,DWORD PTR [edx-0x73]
  42583c:	jne    0x42580f
  42583e:	dec    esp
  42583f:	mov    bh,0xeb
  425841:	popf   
  425842:	aas    
  425843:	xlat   BYTE PTR ds:[ebx]
  425844:	push   ds
  425845:	push   ebp
  425846:	sub    al,0xc3
  425848:	inc    BYTE PTR [edx]
  42584a:	jmp    0x6a52f1c0
  42584f:	or     edx,DWORD PTR [eax]
  425851:	cmp    ch,BYTE PTR [eax+0x60a8349a]
  425857:	xchg   ebx,eax
  425858:	push   cs
  425859:	xchg   edx,eax
  42585a:	dec    edx
  42585b:	mov    al,ds:0xc0f6afbe
  425860:	cmp    ebx,esp
  425862:	pop    eax
  425863:	aas    
  425864:	loop   0x4258c9
  425866:	jbe    0x425802
  425868:	adc    eax,0x238c6650
  42586d:	xor    al,0x8d
  42586f:	xor    al,0x2b
  425871:	jno    0x4258d3
  425873:	mov    BYTE PTR [eax],0x37
  425876:	retf   0xeb75
  425879:	call   0xeaf7:0xe10e3453
  425880:	push   edi
  425881:	and    dh,bl
  425883:	mov    eax,ds:0x398597ed
  425888:	push   0xa1390406
  42588d:	adc    edi,DWORD PTR [edx]
  42588f:	cli    
  425890:	inc    edx
  425891:	loopne 0x425889
  425893:	scas   al,BYTE PTR es:[edi]
  425894:	ror    BYTE PTR [edi+0x5f],1
  425897:	cmp    BYTE PTR [ebx],dl
  425899:	xor    edx,DWORD PTR [esi+0x3f383b9b]
  42589f:	outs   dx,BYTE PTR ds:[esi]
  4258a0:	mov    WORD PTR [ebx+0xb715494],gs
  4258a6:	inc    edx
  4258a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258a8:	pop    es
  4258a9:	sub    DWORD PTR [eax-0x2500e1ad],esi
  4258af:	int    0xa1
  4258b1:	imul   esi,edi,0xffffffa1
  4258b4:	xchg   DWORD PTR [edi-0x24a9def8],eax
  4258ba:	sub    al,0xcf
  4258bc:	test   DWORD PTR [edi+0x28fed98c],eax
  4258c2:	jns    0x42591a
  4258c4:	loop   0x425875
  4258c6:	(bad)  
  4258c7:	pop    esp
  4258c8:	inc    esi
  4258c9:	call   0xb9c04cf4
  4258ce:	hlt    
  4258cf:	and    ebx,0xffffffc5
  4258d2:	sbb    BYTE PTR [eax],dh
  4258d4:	inc    DWORD PTR [esi]
  4258d6:	xchg   esp,eax
  4258d7:	lods   eax,DWORD PTR ds:[esi]
  4258d8:	lods   eax,DWORD PTR ds:[esi]
  4258d9:	in     eax,dx
  4258da:	enter  0x3e30,0x36
  4258de:	mov    bl,0x2a
  4258e0:	pop    ds
  4258e1:	test   al,0x39
  4258e3:	ins    DWORD PTR es:[edi],dx
  4258e4:	xor    al,0xe0
  4258e6:	popf   
  4258e7:	aaa    
  4258e8:	lods   eax,DWORD PTR ds:[esi]
  4258e9:	inc    ebp
  4258ea:	xchg   edi,eax
  4258eb:	push   ebp
  4258ec:	push   edx
  4258ed:	popf   
  4258ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258ef:	and    eax,0x3d72eb16
  4258f4:	xlat   BYTE PTR ds:[ebx]
  4258f5:	inc    edi
  4258f6:	mov    bl,0x9a
  4258f8:	mov    edx,0x62f1158d
  4258fd:	push   esi
  4258fe:	add    BYTE PTR [edi],bh
  425900:	cmp    al,BYTE PTR [esi]
  425902:	sbb    BYTE PTR [ebx],al
  425904:	adc    al,dh
  425906:	jge    0x4258ac
  425908:	adc    eax,0x8fa84021
  42590d:	adc    al,0x18
  42590f:	pop    edi
  425910:	jecxz  0x42593d
  425912:	(bad)
  425915:	sbb    BYTE PTR [ebx-0xcf03fd0],al
  42591b:	clc    
  42591c:	shr    dh,1
  42591e:	nop
  42591f:	lock daa 
  425921:	retf   
  425922:	fs lock inc ebp
  425925:	arpl   WORD PTR [edx-0x1],si
  425928:	push   esi
  425929:	push   0xffffffd0
  42592b:	push   0x93c09b03
  425930:	rcl    BYTE PTR [esi],1
  425932:	(bad)  
  425933:	cdq    
  425934:	mov    al,0xcd
  425936:	jns    0x425922
  425938:	xor    BYTE PTR [edx],cl
  42593a:	pusha  
  42593b:	push   eax
  42593c:	dec    eax
  42593d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42593e:	ret    0xe9be
  425941:	retf   0xccdc
  425944:	call   0x4de7ed8c
  425949:	(bad)  
  42594b:	into   
  42594c:	and    esp,DWORD PTR ds:0x9b2c85df
  425952:	scas   eax,DWORD PTR es:[edi]
  425953:	xor    BYTE PTR [ecx],dl
  425955:	and    esp,DWORD PTR [esi+0x27]
  425958:	jno    0x425984
  42595a:	push   esp
  42595b:	(bad)  
  42595c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42595e:	test   ebx,0xd9ff76ab
  425964:	call   0x2e6:0x24864803
  42596b:	out    dx,eax
  42596c:	in     al,0xf5
  42596e:	out    dx,al
  42596f:	dec    BYTE PTR [ecx+0x7731fd89]
  425975:	mov    ebp,0x26c806e8
  42597a:	jne    0x4259b0
  42597c:	stos   DWORD PTR es:[edi],eax
  42597d:	lock ins DWORD PTR es:[edi],dx
  42597f:	pushf  
  425980:	mov    bl,0xfd
  425982:	push   ss
  425983:	inc    edi
  425984:	jnp    0x42595c
  425986:	add    al,0x9f
  425988:	repnz mov al,0xcb
  42598b:	arpl   WORD PTR [ebx],ax
  42598d:	or     al,0x40
  42598f:	test   ebx,edx
  425991:	test   eax,0xf86dd71d
  425996:	xchg   edi,eax
  425997:	inc    ebp
  425998:	mov    ds,WORD PTR [ebx+0x47]
  42599b:	mov    dh,0x60
  42599d:	push   ds
  42599e:	fnstenv ds:0xd98e17d1
  4259a4:	jae    0x425957
  4259a6:	shl    DWORD PTR [eax-0x60],0xc0
  4259aa:	mov    es,WORD PTR [ebp+0x694d91d1]
  4259b0:	xchg   ebp,eax
  4259b1:	cmp    DWORD PTR [ebx],0x17aed164
  4259b7:	xor    DWORD PTR [ecx-0x39],edx
  4259ba:	out    dx,eax
  4259bb:	pop    ss
  4259bc:	ret    0xa01b
  4259bf:	and    eax,0x2919fda
  4259c4:	(bad)  
  4259c6:	jg     0x425982
  4259c8:	and    cl,BYTE PTR [edx-0x515a1bc0]
  4259ce:	mov    ch,0x39
  4259d0:	xchg   ebp,eax
  4259d1:	cmc    
  4259d2:	fadd   QWORD PTR [esi-0x31]
  4259d5:	std    
  4259d6:	mov    esi,0x532dc2fa
  4259db:	cs pushf 
  4259dd:	and    eax,0xc75ce1fb
  4259e2:	xor    al,0xe9
  4259e4:	sbb    eax,0x7728f06c
  4259e9:	push   edi
  4259ea:	mov    cl,0x4f
  4259ec:	lods   eax,DWORD PTR ds:[esi]
  4259ed:	push   ebx
  4259ee:	add    al,0x1d
  4259f0:	cmp    DWORD PTR [esi],ecx
  4259f2:	jae    0x425a68
  4259f4:	loopne 0x425a2c
  4259f6:	mov    ch,0x35
  4259f8:	stos   DWORD PTR es:[edi],eax
  4259f9:	int    0xb1
  4259fb:	mov    cl,0x6
  4259fd:	push   edi
  4259fe:	add    ecx,DWORD PTR [ecx-0x150188dc]
  425a04:	xor    BYTE PTR [edx+0xe3b949d],0xda
  425a0b:	into   
  425a0c:	xchg   esp,eax
  425a0d:	ds std 
  425a0f:	retf   
  425a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a11:	enter  0x8064,0x5d
  425a15:	mov    bl,0x6
  425a17:	mov    ch,BYTE PTR [ecx]
  425a19:	shl    DWORD PTR [eax],cl
  425a1b:	repz mov al,0x2d
  425a1e:	jbe    0x425a4c
  425a20:	pop    ss
  425a21:	stos   DWORD PTR es:[edi],eax
  425a22:	xlat   BYTE PTR ds:[ebx]
  425a23:	jne    0x425a22
  425a25:	dec    esp
  425a26:	mov    al,ds:0x5b662ea4
  425a2b:	xor    eax,0xdf0b5cf3
  425a30:	sbb    ch,BYTE PTR [esi]
  425a32:	adc    cl,dh
  425a34:	sbb    ch,BYTE PTR [esi+edi*8-0x74]
  425a38:	rol    bl,cl
  425a3a:	popa   
  425a3b:	mov    esi,0x8f79e1b2
  425a40:	pusha  
  425a41:	hlt    
  425a42:	dec    edx
  425a43:	dec    esi
  425a44:	push   edi
  425a45:	pop    eax
  425a46:	fild   WORD PTR [edi+0x4f]
  425a49:	fdivr  DWORD PTR [edx+ebx*4+0x4f836966]
  425a50:	jg     0x425a7d
  425a52:	(bad)  [esp+ebx*8]
  425a55:	xor    al,0xb7
  425a57:	mov    eax,DWORD PTR [ebx-0x4478921b]
  425a5d:	cmp    eax,0x2c9fc335
  425a62:	jae    0x425a6e
  425a64:	ss pop esp
  425a66:	xor    dh,BYTE PTR [ecx+0x65]
  425a69:	jmp    DWORD PTR [ecx+0x39]
  425a6c:	mov    ch,0x70
  425a6e:	ins    BYTE PTR es:[edi],dx
  425a6f:	mov    dh,0x2a
  425a71:	ins    DWORD PTR es:[edi],dx
  425a72:	(bad)
  425a75:	inc    ecx
  425a76:	xchg   edx,eax
  425a77:	int3   
  425a78:	dec    eax
  425a79:	outs   dx,DWORD PTR ds:[esi]
  425a7a:	fcmovnu st,st(2)
  425a7c:	mov    esp,0x44bb4f1d
  425a81:	sub    eax,0xedbe9562
  425a86:	inc    edx
  425a87:	push   cs
  425a88:	test   al,0xc2
  425a8a:	inc    esp
  425a8b:	in     eax,0x55
  425a8d:	or     BYTE PTR [edi-0x5034a19b],0xbe
  425a94:	push   ebx
  425a95:	xor    DWORD PTR [edi],0x45185f
  425a9b:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fld    QWORD PTR [esi]
  425aa9:	and    BYTE PTR [edx+0x1d38602],dh
  425aaf:	add    BYTE PTR [esi-0x7cfffffe],al
  425ab5:	clc    
  425ab6:	push   ebp
  425ab7:	aad    0x12
  425ab9:	fwait
  425aba:	aad    0x98
  425abc:	inc    eax
  425abd:	xor    ch,al
  425abf:	mov    BYTE PTR [edx-0x5159d0f2],dl
  425ac5:	and    BYTE PTR [esi+eiz*8],ah
  425ac8:	stc    
  425ac9:	aam    0xa8
  425acb:	jmp    0xa051:0x9d48a2eb
  425ad2:	cmp    BYTE PTR [edi+0x54],cl
  425ad5:	nop
  425ad6:	enter  0x554a,0x2a
  425ada:	addr16 xchg edx,eax
  425adc:	popa   
  425add:	mov    edx,0xb241a1d3
  425ae2:	mov    edx,0x68f56746
  425ae7:	outs   dx,BYTE PTR ds:[esi]
  425ae8:	pop    es
  425ae9:	sahf   
  425aea:	pop    es
  425aeb:	mov    bl,0xd6
  425aed:	xor    dh,BYTE PTR [ecx+0x27f64d76]
  425af3:	scas   al,BYTE PTR es:[edi]
  425af4:	dec    ebx
  425af5:	xchg   ecx,eax
  425af6:	cmp    esp,DWORD PTR [eax+ecx*1]
  425af9:	pop    ss
  425afa:	(bad)  
  425afb:	jns    0x425b5a
  425afd:	out    dx,eax
  425afe:	push   es
  425aff:	adc    eax,0xc536c415
  425b04:	pop    ecx
  425b05:	data16 mov dl,0xd9
  425b08:	sbb    al,BYTE PTR [ebx]
  425b0a:	int    0xda
  425b0c:	int    0xd9
  425b0e:	hlt    
  425b0f:	sub    ah,BYTE PTR [edi+0x5709d43b]
  425b15:	push   cs
  425b16:	aam    0x58
  425b18:	scas   al,BYTE PTR es:[edi]
  425b19:	push   edx
  425b1a:	lea    edx,[ebx+0x5f9e1435]
  425b20:	add    ch,dl
  425b22:	arpl   WORD PTR [esi+ecx*1-0x72],bx
  425b26:	in     eax,0xf6
  425b28:	lds    eax,FWORD PTR [edx+edi*2-0x49]
  425b2c:	mov    ds:0xee2282ad,al
  425b31:	mov    ah,0xdb
  425b33:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  425b35:	inc    esp
  425b36:	scas   eax,DWORD PTR es:[edi]
  425b37:	test   eax,0xf784341d
  425b3c:	or     DWORD PTR [ecx-0x28],esi
  425b3f:	jmp    0x425b72
  425b41:	int3   
  425b42:	sbb    BYTE PTR [edx],cl
  425b44:	fwait
  425b45:	push   ds
  425b46:	sbb    al,0x3d
  425b48:	(bad)  
  425b4a:	ins    DWORD PTR es:[edi],dx
  425b4b:	retf   
  425b4c:	xlat   BYTE PTR ds:[ebx]
  425b4d:	rol    DWORD PTR [ecx],0x1f
  425b50:	xor    bl,BYTE PTR [edi+0x58]
  425b53:	add    eax,0x757ecdc9
  425b58:	imul   edx,DWORD PTR [edx+0x1a486c21],0x13
  425b5f:	push   ds
  425b60:	addr16 int3 
  425b62:	push   ebp
  425b63:	jg     0x425bd9
  425b65:	bound  esp,QWORD PTR [edi-0x489bf692]
  425b6b:	pusha  
  425b6c:	add    BYTE PTR [ebp-0x58ce814d],al
  425b72:	mov    ebx,0x1d2ef1e8
  425b77:	fisubr DWORD PTR [esi+0x7a]
  425b7a:	push   esi
  425b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b7c:	push   edi
  425b7d:	mov    eax,ds:0xe90dbff6
  425b82:	fs pusha 
  425b84:	xor    cl,BYTE PTR [esi+0x3f]
  425b87:	and    BYTE PTR [ecx],ah
  425b89:	(bad)  
  425b8a:	xchg   esp,eax
  425b8b:	or     DWORD PTR [edi-0x16],0xffffffc8
  425b8f:	in     eax,0x49
  425b91:	jl     0x425b3f
  425b93:	gs repz push edx
  425b96:	xchg   ebx,eax
  425b97:	xor    DWORD PTR ds:0x4d468ce9,edi
  425b9d:	add    eax,0xc75ac593
  425ba2:	popf   
  425ba3:	mov    ecx,0x6d082744
  425ba8:	int3   
  425ba9:	jnp    0x425bc9
  425bab:	xlat   BYTE PTR ds:[ebx]
  425bac:	jge    0x425bcb
  425bae:	jge    0x425bd4
  425bb0:	push   0x78
  425bb2:	ret    
  425bb3:	and    DWORD PTR [edx-0x60e3efdb],eax
  425bb9:	jl     0x425beb
  425bbb:	fld    DWORD PTR [esi-0x18]
  425bbe:	mov    esp,0xe88373ff
  425bc3:	data16 sti 
  425bc5:	out    0x18,al
  425bc7:	push   eax
  425bc8:	cmc    
  425bc9:	outs   dx,BYTE PTR ds:[si]
  425bcb:	test   BYTE PTR [edi+0x35],0x1c
  425bcf:	in     al,0x7f
  425bd1:	mov    esi,0x8b48b351
  425bd6:	into   
  425bd7:	mov    DWORD PTR [edx-0x1d54f2d0],edi
  425bdd:	repz pop edi
  425bdf:	mov    bh,0x0
  425be1:	dec    BYTE PTR [eax-0x77]
  425be4:	add    al,0x86
  425be6:	jae    0x425c41
  425be8:	idiv   DWORD PTR cs:[bx+di+0x33]
  425bed:	mov    edx,0x298a101e
  425bf2:	sbb    eax,0x916e3025
  425bf7:	nop
  425bf8:	mov    ebx,0xedff2f3b
  425bfd:	push   ecx
  425bfe:	clc    
  425bff:	and    bh,BYTE PTR [ebx]
  425c01:	sub    BYTE PTR [ebx+0x7a5d99b0],bl
  425c07:	and    DWORD PTR [esi],edi
  425c09:	je     0x425bc7
  425c0b:	aad    0x12
  425c0d:	xchg   esp,eax
  425c0e:	pop    ebp
  425c0f:	std    
  425c10:	pushf  
  425c11:	and    cl,BYTE PTR [ebx-0x47]
  425c14:	std    
  425c15:	pop    ecx
  425c16:	into   
  425c17:	push   0xa61e0c46
  425c1c:	ficom  WORD PTR [eax+esi*4-0x19a75786]
  425c23:	mov    WORD PTR [ecx+0x3d539bb4],ds
  425c29:	cmp    al,0xfd
  425c2b:	fdivr  st(5),st
  425c2d:	adc    dl,BYTE PTR [ebp+0x1f69318]
  425c33:	(bad)  
  425c34:	ficom  WORD PTR [esi]
  425c36:	push   ebp
  425c37:	ins    BYTE PTR es:[edi],dx
  425c38:	lods   eax,DWORD PTR ds:[esi]
  425c39:	add    ebx,edi
  425c3b:	cwde   
  425c3c:	xor    edi,edi
  425c3e:	push   esp
  425c3f:	imul   edi,DWORD PTR [edx],0xffffffa1
  425c42:	push   ebx
  425c43:	adc    BYTE PTR [esi+0x4],ch
  425c46:	js     0x425cac
  425c48:	pop    edi
  425c49:	lods   al,BYTE PTR ds:[esi]
  425c4a:	in     eax,0x8f
  425c4c:	out    dx,eax
  425c4d:	push   0x5db43693
  425c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c53:	sub    cl,BYTE PTR [ebp*4-0x2b721d12]
  425c5a:	imul   edi,DWORD PTR [eax+0x6c],0x81d6ee4c
  425c61:	push   ss
  425c62:	push   edi
  425c63:	out    dx,al
  425c64:	test   al,0xbd
  425c66:	mov    dl,0x7
  425c68:	sub    BYTE PTR [ebx],dh
  425c6a:	test   dl,dh
  425c6c:	arpl   ax,sp
  425c6e:	xor    BYTE PTR [ebx+0x31e88d27],al
  425c74:	jae    0x425caf
  425c76:	loope  0x425bfe
  425c78:	rcr    BYTE PTR [esi+edx*2-0x31],1
  425c7c:	cdq    
  425c7d:	shr    DWORD PTR [edx+eax*8-0x29562398],1
  425c84:	xor    DWORD PTR [eax],edx
  425c86:	hlt    
  425c87:	mov    eax,ds:0x7ab3a66a
  425c8c:	les    ebp,FWORD PTR ds:0x3fc1658b
  425c92:	fiadd  WORD PTR [ebx]
  425c94:	or     BYTE PTR ds:0x9f61a944,0xac
  425c9b:	int    0xc
  425c9d:	rol    DWORD PTR [ebx+ebx*8-0x7e8801fa],cl
  425ca4:	jp     0x425d04
  425ca6:	sbb    BYTE PTR [ebx],dh
  425ca8:	or     eax,0xee6fe0cd
  425cad:	and    ah,BYTE PTR [ebx]
  425caf:	scas   eax,DWORD PTR es:[edi]
  425cb0:	sar    DWORD PTR ds:0xb024,1
  425cb5:	xor    ah,BYTE PTR [eax]
  425cb7:	mov    bh,0x30
  425cb9:	sbb    BYTE PTR [ebp+0x6c99de6b],0x16
  425cc0:	push   edx
  425cc1:	jg     0x425c5f
  425cc3:	imul   ecx,DWORD PTR [eax-0x3],0x40
  425cc7:	pusha  
  425cc8:	mov    cl,BYTE PTR [eax+0x3b82887f]
  425cce:	(bad)  
  425ccf:	jmp    0x5e2fe612
  425cd4:	ins    DWORD PTR es:[edi],dx
  425cd5:	mov    edi,esi
  425cd7:	in     al,0x72
  425cd9:	fistp  DWORD PTR [esi+0x4b092673]
  425cdf:	iret   
  425ce0:	mov    edi,0x9ae45f3b
  425ce5:	lock div DWORD PTR [edx]
  425ce8:	bound  ecx,QWORD PTR [ecx+0x654ee470]
  425cee:	popa   
  425cef:	mov    ds:0x67cef08b,al
  425cf4:	jmp    0x476acb3
  425cf9:	cmp    DWORD PTR [eax],esi
  425cfb:	hlt    
  425cfc:	sbb    bh,0x19
  425cff:	adc    al,0x5
  425d01:	scas   eax,DWORD PTR es:[edi]
  425d02:	or     al,0x2e
  425d04:	rcl    esi,0x33
  425d07:	sbb    eax,0xb32df795
  425d0c:	cmp    BYTE PTR [ecx+0x39],al
  425d0f:	jl     0x425cb1
  425d11:	or     ch,BYTE PTR [esi*4+0xa9e51dd]
  425d18:	dec    edi
  425d19:	scas   al,BYTE PTR es:[edi]
  425d1a:	mov    ds,WORD PTR [bp+si-0x52]
  425d1e:	jmp    0x425cb5
  425d20:	jne    0x425d67
  425d22:	aad    0x3d
  425d24:	test   BYTE PTR ss:[ecx],bh
  425d27:	scas   al,BYTE PTR es:[edi]
  425d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d29:	cmp    ebp,DWORD PTR [eax-0x5a9daa4c]
  425d2f:	inc    DWORD PTR ds:0x92dbe3bb
  425d35:	mov    bl,0x2b
  425d37:	rcl    BYTE PTR [eax-0x4fffff05],cl
  425d3d:	mov    ch,al
  425d3f:	cmp    edx,0x62bbf9e3
  425d45:	and    BYTE PTR [ecx+ebx*4],ah
  425d48:	inc    edx
  425d49:	test   eax,0xd60cd45f
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	xchg   BYTE PTR [edx],al
  425d52:	add    BYTE PTR [eax],al
  425d54:	or     al,0xf
  425d56:	pop    edi
  425d57:	pushf  
  425d58:	inc    ebx
  425d59:	in     al,dx
  425d5a:	ds pushf 
  425d5c:	lods   al,BYTE PTR ds:[esi]
  425d5d:	fstp   DWORD PTR [ebp+0x3a87d69e]
  425d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d64:	outs   dx,BYTE PTR ds:[esi]
  425d65:	adc    al,0x19
  425d67:	sub    ebp,0x3b
  425d6a:	cmp    DWORD PTR [ebx+0x74543a0d],0x71168e50
  425d74:	adc    esp,edx
  425d76:	sbb    esi,eax
  425d78:	scas   eax,DWORD PTR es:[edi]
  425d79:	fst    QWORD PTR [ebp+edx*4+0x21f20848]
  425d80:	inc    esp
  425d81:	fiadd  WORD PTR [ebx+0x71]
  425d84:	inc    esp
  425d85:	inc    ebx
  425d86:	ret    
  425d87:	jno    0x425dbd
  425d89:	in     al,dx
  425d8a:	pop    ss
  425d8b:	sub    ecx,DWORD PTR ds:0x969c41df
  425d91:	js     0x425de9
  425d93:	ret    
  425d94:	pop    ss
  425d95:	or     BYTE PTR [ebp-0x47e9198d],cl
  425d9b:	fcom   DWORD PTR [ecx]
  425d9d:	fldcw  WORD PTR [eax+0x520ed6d8]
  425da3:	arpl   dx,ax
  425da5:	push   edi
  425da6:	cmp    DWORD PTR [ebx+ebx*8+0x201e73a7],esi
  425dad:	ret    0x9ff1
  425db0:	cmc    
  425db1:	repnz fcmovbe st,st(6)
  425db4:	push   es
  425db5:	xor    DWORD PTR [eax],esi
  425db7:	and    dl,al
  425db9:	(bad)  
  425dba:	rcl    BYTE PTR [edx+0x5968b235],1
  425dc0:	sbb    DWORD PTR [esi+0x2],esp
  425dc3:	jno    0x425d50
  425dc5:	(bad)  
  425dc6:	loope  0x425e2f
  425dc8:	pushf  
  425dc9:	(bad)  
  425dca:	lea    ebx,[esi]
  425dcc:	push   ebx
  425dcd:	ret    0x770e
  425dd0:	ret    
  425dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dd2:	pop    ecx
  425dd3:	and    BYTE PTR [esi+0x637aad45],dl
  425dd9:	call   0x44b593e8
  425dde:	adc    dh,BYTE PTR [eax-0x65e7081d]
  425de4:	add    al,BYTE PTR [esi]
  425de6:	mov    esp,edi
  425de8:	xor    edx,edx
  425dea:	das    
  425deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dec:	out    dx,al
  425ded:	jmp    0x87bf00fb
  425df2:	cmp    DWORD PTR es:[ecx],ecx
  425df5:	xlat   BYTE PTR ds:[ebx]
  425df6:	mov    dh,0x5a
  425df8:	dec    esi
  425df9:	pop    ds
  425dfa:	dec    edx
  425dfb:	jne    0x425e4d
  425dfd:	add    dh,BYTE PTR [ecx+ebp*8-0xa]
  425e01:	jmp    0xad21:0xe5f6fdb0
  425e08:	in     eax,dx
  425e09:	mov    BYTE PTR [edx-0x66],ch
  425e0c:	inc    ebx
  425e0d:	mov    esp,0xf30935fc
  425e12:	cld    
  425e13:	mov    ecx,0x96a92976
  425e18:	push   ss
  425e19:	cli    
  425e1a:	cli    
  425e1b:	mov    ss,WORD PTR [edx-0x80]
  425e1e:	fs pop edx
  425e20:	in     eax,0x87
  425e22:	xor    eax,0xcb53fa11
  425e27:	push   edi
  425e28:	pcmpeqb mm4,QWORD PTR [ebx]
  425e2b:	rcr    bh,cl
  425e2d:	inc    eax
  425e2e:	sub    BYTE PTR [esi+ecx*1],0x2b
  425e32:	jne    0x425e95
  425e34:	icebp  
  425e35:	cmc    
  425e36:	shl    DWORD PTR [ebp-0x39],1
  425e39:	aas    
  425e3a:	retf   0xef03
  425e3d:	loope  0x425e0f
  425e3f:	sbb    al,0xc0
  425e41:	jae    0x425dc5
  425e43:	ror    bl,cl
  425e45:	ins    BYTE PTR es:[edi],dx
  425e46:	xchg   esi,eax
  425e47:	iret   
  425e48:	and    BYTE PTR [esi-0x13],dh
  425e4b:	dec    edi
  425e4c:	lock xor BYTE PTR [ebx],al
  425e4f:	xor    BYTE PTR [ecx+ebx*4-0x2432a980],dh
  425e56:	jmp    0x484aa88b
  425e5b:	jecxz  0x425e69
  425e5d:	ret    0xa5ce
  425e60:	fisubr WORD PTR [eax]
  425e62:	dec    eax
  425e63:	arpl   WORD PTR [eax+edx*1],di
  425e66:	sub    al,0xc4
  425e68:	cwde   
  425e69:	outs   dx,DWORD PTR ds:[esi]
  425e6a:	mov    al,ds:0x7e690572
  425e6f:	push   esi
  425e70:	scas   al,BYTE PTR es:[edi]
  425e71:	mov    dl,0xa4
  425e73:	int    0x1d
  425e75:	js     0x425e2f
  425e77:	cld    
  425e78:	or     DWORD PTR [edx+ecx*1+0x3e],ebp
  425e7c:	push   esi
  425e7d:	out    0x9,eax
  425e7f:	xlat   BYTE PTR ds:[ebx]
  425e80:	sahf   
  425e81:	fistp  WORD PTR [ecx]
  425e83:	loopne 0x425eab
  425e85:	or     BYTE PTR [ebx+0x48],ch
  425e88:	add    eax,0x1b06d499
  425e8d:	jl     0x425ee1
  425e8f:	add    DWORD PTR [ecx+0x1e],0xf
  425e93:	call   0xbc57737c
  425e98:	scas   al,BYTE PTR es:[edi]
  425e99:	mov    al,0xf9
  425e9b:	dec    ebx
  425e9c:	ret    0x3b7e
  425e9f:	bound  ebp,QWORD PTR [edx]
  425ea1:	and    DWORD PTR [ebp+ecx*4-0xfed15ce],ebp
  425ea8:	pop    es
  425ea9:	mov    DWORD PTR [ebx+ebp*4],ebx
  425eac:	jp     0x425ea5
  425eae:	mov    ds:0xdbf3a279,al
  425eb3:	arpl   WORD PTR [edi],bx
  425eb5:	adc    al,0xbf
  425eb7:	mov    ds:0x18fd4271,al
  425ebc:	pop    es
  425ebd:	repnz and BYTE PTR ss:[edi],ah
  425ec1:	int    0x5b
  425ec3:	push   esp
  425ec4:	out    dx,eax
  425ec5:	sub    DWORD PTR [ebx],edi
  425ec7:	add    eax,0xa9ad3d2d
  425ecc:	mov    bh,0xe4
  425ece:	and    eax,0xf4757322
  425ed3:	(bad)  
  425ed4:	imul   ebp,DWORD PTR [ebx+0x2],0x68
  425ed8:	popf   
  425ed9:	jno    0x425e80
  425edb:	cli    
  425edc:	sbb    al,0x21
  425ede:	outs   dx,BYTE PTR ds:[esi]
  425edf:	jne    0x425e89
  425ee1:	xchg   edi,eax
  425ee2:	retf   
  425ee3:	inc    edx
  425ee4:	lock repnz adc ecx,0xff5c063d
  425eec:	arpl   dx,bp
  425eee:	pushf  
  425eef:	in     al,0x67
  425ef1:	inc    eax
  425ef2:	cdq    
  425ef3:	stos   BYTE PTR es:[edi],al
  425ef4:	ret    
  425ef5:	stos   BYTE PTR es:[edi],al
  425ef6:	jl     0x425eda
  425ef8:	adc    dh,bh
  425efa:	inc    edx
  425efb:	push   cs
  425efc:	iret   
  425efd:	loop   0x425f22
  425eff:	mov    esp,0x56ec1fdf
  425f04:	xchg   DWORD PTR [ebp+0x72],ebx
  425f07:	xor    al,0xb2
  425f09:	and    eax,0xcdb6f4ed
  425f0e:	addr16 fs inc ecx
  425f11:	xor    ebp,ebp
  425f13:	xchg   esp,ebx
  425f15:	or     ah,bl
  425f17:	stos   DWORD PTR es:[edi],eax
  425f18:	mov    dh,0x52
  425f1a:	and    eax,0x18700825
  425f1f:	lahf   
  425f20:	enter  0x1c4d,0x32
  425f24:	jae    0x425f4f
  425f26:	sub    DWORD PTR [edx-0x2be51938],ebx
  425f2c:	ss dec esp
  425f2e:	xor    al,BYTE PTR ds:0x9a02d7df
  425f34:	mov    dl,0xc2
  425f36:	pop    ss
  425f37:	xchg   ebp,eax
  425f38:	loope  0x425f22
  425f3a:	fwait
  425f3b:	xor    ebx,edi
  425f3d:	enter  0xdba,0xb6
  425f41:	jg     0x425fc1
  425f43:	sti    
  425f44:	adc    eax,0x65f35fd4
  425f49:	sbb    esi,eax
  425f4b:	cli    
  425f4c:	and    al,0xe5
  425f4e:	sub    DWORD PTR [ebx+0x7cb38931],ecx
  425f54:	outs   dx,BYTE PTR ds:[esi]
  425f55:	jbe    0x425f1c
  425f57:	sahf   
  425f58:	mov    ah,0x2e
  425f5a:	push   ds
  425f5b:	and    al,0xe6
  425f5d:	push   edi
  425f5e:	jae    0x425fd4
  425f60:	xlat   BYTE PTR ds:[ebx]
  425f61:	mov    al,0x2
  425f63:	shl    DWORD PTR [ebp-0x1bb58e58],1
  425f69:	sub    eax,0x69d2489f
  425f6e:	(bad)  
  425f6f:	dec    edi
  425f70:	out    0x3b,eax
  425f72:	cmp    DWORD PTR [edi],ebx
  425f74:	push   ebp
  425f75:	or     BYTE PTR [edx],bh
  425f77:	jle    0x425fe1
  425f79:	test   BYTE PTR [eax-0x55],0xdd
  425f7d:	pop    eax
  425f7e:	adc    al,0x38
  425f80:	call   0x2fff:0xfafd70d6
  425f87:	mov    ecx,0xaaf0e4ec
  425f8c:	clc    
  425f8d:	out    0x9f,al
  425f8f:	scas   al,BYTE PTR es:[edi]
  425f90:	fdiv   st(5),st
  425f92:	xor    BYTE PTR [ebx+eiz*8],bl
  425f95:	sub    al,0x3f
  425f97:	pusha  
  425f98:	jecxz  0x425fb9
  425f9a:	loopne 0x425f1c
  425f9c:	ss cmp eax,0xfda663ef
  425fa2:	imul   ebp,DWORD PTR [esi],0x4
  425fa5:	gs in  eax,0x24
  425fa8:	push   edx
  425fa9:	mov    edx,0xae146f11
  425fae:	xrelease xchg DWORD PTR [ecx+0x29],esi
  425fb2:	hlt    
  425fb3:	pop    ebx
  425fb4:	ret    0x1dae
  425fb7:	imul   edi,DWORD PTR [eax+0x40],0xf
  425fbb:	jmp    0xb3292d22
  425fc0:	sub    eax,0xca04cfb1
  425fc5:	push   ss
  425fc6:	push   edx
  425fc7:	das    
  425fc8:	sub    BYTE PTR ds:0x30b5f192,bh
  425fce:	add    DWORD PTR [esp+ebp*4-0x5baaa3f5],edi
  425fd5:	(bad)  
  425fd6:	sub    ecx,DWORD PTR [ebp+0x71c7]
  425fdc:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  425fe3:	fsubr  st(7),st
  425fe5:	sub    DWORD PTR [ecx],0xffffff8c
  425fe8:	adc    dh,BYTE PTR [ebp-0x276d031e]
  425fee:	add    DWORD PTR [eax],eax
  425ff0:	xchg   BYTE PTR [edx],al
  425ff2:	add    BYTE PTR [eax],al
  425ff4:	xchg   ebp,eax
  425ff5:	push   0x6f
  425ff7:	ja     0x425fba
  425ff9:	or     BYTE PTR [ecx+0x6e],cl
  425ffc:	jge    0x42607a
  425ffe:	jecxz  0x425fcf
  426000:	inc    esp
  426001:	mov    esi,0xd2df52f5
  426006:	shrd   DWORD PTR [ecx-0x61b55480],esp,cl
  42600d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42600e:	and    ah,BYTE PTR [ebx]
  426010:	push   eax
  426011:	ja     0x426029
  426013:	inc    eax
  426014:	stos   DWORD PTR es:[edi],eax
  426015:	sub    ah,BYTE PTR [ebp+0x33]
  426018:	rcr    eax,1
  42601a:	ins    DWORD PTR es:[edi],dx
  42601b:	cmovge ebx,edx
  42601e:	jmp    0x426033
  426020:	mov    ds:0xcb824ad1,eax
  426025:	lock push eax
  426027:	fdiv   QWORD PTR [edx+0xc]
  42602a:	adc    BYTE PTR [eax],cl
  42602c:	iret   
  42602d:	add    DWORD PTR ds:0x80978f60,ebx
  426033:	dec    esi
  426034:	jmp    0x2c63:0x90b047a6
  42603b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42603c:	jl     0x425fd9
  42603e:	cmp    esi,DWORD PTR [eax+0x41]
  426041:	call   DWORD PTR [ebp+0x7ad3e403]
  426047:	mov    ebp,0x1c4aed06
  42604c:	popa   
  42604d:	adc    al,0x22
  42604f:	mov    ebp,0x78295d62
  426054:	in     al,dx
  426055:	jne    0x4260d1
  426057:	xchg   esp,eax
  426058:	and    DWORD PTR [eax-0x56de4915],esp
  42605e:	fwait
  42605f:	push   ebx
  426060:	iret   
  426061:	ds int3 
  426063:	mov    al,ah
  426065:	(bad)  
  426067:	xor    eax,0x1bc80f7b
  42606c:	adc    esp,ebp
  42606e:	lods   eax,DWORD PTR ds:[esi]
  42606f:	sbb    edi,DWORD PTR [edx]
  426071:	scas   eax,DWORD PTR es:[edi]
  426072:	sub    eax,0x36429a2d
  426077:	pop    esi
  426078:	push   ebp
  426079:	push   ecx
  42607a:	sbb    al,ah
  42607c:	fs jns 0x426039
  42607f:	or     dl,ch
  426081:	and    BYTE PTR [edx+0x652a75c5],dl
  426087:	cmp    al,0x57
  426089:	pop    esp
  42608a:	mov    DWORD PTR [ecx+edx*4],eax
  42608d:	jo     0x426083
  42608f:	mov    esi,0x9b01661b
  426094:	xlat   BYTE PTR ds:[ebx]
  426095:	pop    edi
  426096:	sbb    bh,BYTE PTR [ebp+ebx*1-0x263c293f]
  42609d:	push   0x7458bb38
  4260a2:	stos   DWORD PTR es:[edi],eax
  4260a3:	call   0x5431:0xfe04ed2c
  4260aa:	pop    ebp
  4260ab:	pop    edi
  4260ac:	nop
  4260ad:	mov    ch,0x11
  4260af:	test   eax,0xc612e67a
  4260b4:	sti    
  4260b5:	xchg   edx,eax
  4260b6:	mov    esi,0xe59728fe
  4260bb:	sbb    eax,0xe60d0169
  4260c0:	ja     0x4260a1
  4260c2:	outs   dx,BYTE PTR ds:[esi]
  4260c3:	bound  ecx,QWORD PTR [ecx+0x51]
  4260c6:	and    ebx,DWORD PTR [ecx-0x3a]
  4260c9:	das    
  4260ca:	jns    0x426065
  4260cc:	test   BYTE PTR [edx],bl
  4260ce:	mov    ah,0xb7
  4260d0:	sbb    esp,DWORD PTR [esi-0x1e]
  4260d3:	je     0x4260ea
  4260d5:	retf   0xb831
  4260d8:	bound  ecx,QWORD PTR [edi+eax*8]
  4260db:	adc    al,0x8b
  4260dd:	pop    edx
  4260de:	pop    esi
  4260df:	je     0x42608a
  4260e1:	icebp  
  4260e2:	mov    esp,0x5e6fee19
  4260e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260e8:	pop    esi
  4260e9:	pop    ds
  4260ea:	push   esp
  4260eb:	sub    eax,0xc967bdbc
  4260f0:	lods   eax,DWORD PTR ds:[esi]
  4260f1:	rcr    ebx,1
  4260f3:	psllw  mm1,mm7
  4260f6:	sbb    ch,BYTE PTR [ebx]
  4260f8:	repz inc esi
  4260fa:	sub    cl,BYTE PTR ds:0x3df61add
  426101:	(bad)  
  426102:	lahf   
  426103:	xor    DWORD PTR [ecx+0xc760f6f],ebx
  426109:	mov    ecx,0x1e2b0d99
  42610e:	scas   eax,DWORD PTR es:[edi]
  42610f:	mov    edi,0xed3a7198
  426114:	in     al,dx
  426115:	sbb    al,0x4c
  426117:	dec    eax
  426118:	jg     0x426172
  42611a:	or     BYTE PTR [esi],bl
  42611c:	push   0x92057888
  426121:	jns    0x426121
  426123:	mov    esp,DWORD PTR [eax+0x55]
  426126:	arpl   WORD PTR [ebp+0x4a],ax
  426129:	mov    gs,eax
  42612b:	inc    edx
  42612c:	xchg   edi,eax
  42612d:	pushf  
  42612e:	and    dh,BYTE PTR [eax]
  426130:	push   ebp
  426131:	cwde   
  426132:	icebp  
  426133:	or     esp,DWORD PTR [ebx-0x5e]
  426136:	cmp    DWORD PTR [edx+edx*8-0x6a],edi
  42613a:	bnd jno 0x426146
  42613d:	adc    ch,ch
  42613f:	fimul  WORD PTR [eax+0x3e273ee7]
  426145:	xchg   esp,eax
  426146:	push   esp
  426147:	stos   BYTE PTR es:[edi],al
  426148:	pusha  
  426149:	outs   dx,BYTE PTR ds:[esi]
  42614a:	(bad)  
  42614c:	imul   ebp,DWORD PTR [ecx+0x56d8c769],0x97c54486
  426156:	pusha  
  426157:	xchg   esp,eax
  426158:	adc    DWORD PTR [ebp+0x20],esp
  42615b:	hlt    
  42615c:	lea    esp,[edx]
  42615e:	mov    al,0x58
  426160:	cmp    al,0xba
  426162:	inc    eax
  426163:	shl    ch,1
  426165:	adc    al,0x14
  426167:	bound  ecx,QWORD PTR [edx+0x59]
  42616a:	jmp    0xda80:0x6c93ba82
  426171:	push   ss
  426172:	cwde   
  426173:	in     al,0xa6
  426175:	fsqrt  
  426177:	arpl   WORD PTR [edi],sp
  426179:	mov    bl,0x39
  42617b:	repnz loope 0x4261c9
  42617e:	xor    eax,DWORD PTR [eax-0x701f595d]
  426184:	add    al,0xbc
  426186:	xchg   BYTE PTR [ebx-0x32de95e],cl
  42618c:	sub    DWORD PTR [ebx-0x10d6197b],ecx
  426192:	fs mov edi,0x42361427
  426198:	add    dh,0xe2
  42619b:	add    ch,BYTE PTR [ebp-0x17]
  42619e:	pmuludq mm0,QWORD PTR [esi]
  4261a1:	pop    ebx
  4261a2:	(bad)  [ebp-0x53ebd040]
  4261a8:	mov    ecx,ebx
  4261aa:	xchg   ebx,eax
  4261ab:	fmul   DWORD PTR [ebp+0x10435362]
  4261b1:	xlat   BYTE PTR ds:[ebx]
  4261b2:	dec    esi
  4261b3:	xor    al,0x64
  4261b5:	jle    0x426218
  4261b7:	mov    ds:0xd7f056fd,al
  4261bc:	aas    
  4261bd:	sub    esp,DWORD PTR [ebx]
  4261bf:	loopne 0x42621d
  4261c1:	jb     0x42621b
  4261c3:	addr16 push es
  4261c5:	sbb    ecx,DWORD PTR [ebx+eax*1-0x3cc4a3d4]
  4261cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261cd:	mov    edi,0xd5073777
  4261d2:	retf   0xb343
  4261d5:	mov    dh,0x23
  4261d7:	out    dx,eax
  4261d8:	fidiv  WORD PTR [edx+0x20]
  4261db:	mov    edx,0xd6969f8e
  4261e0:	xchg   DWORD PTR [edx+0x14],ebx
  4261e3:	test   BYTE PTR [ebp-0x3c],al
  4261e6:	and    al,BYTE PTR [eax+ebp*1]
  4261e9:	add    eax,0x87969c35
  4261ee:	xchg   ebx,eax
  4261ef:	cmp    DWORD PTR [esi+0x6d],eax
  4261f2:	cmp    DWORD PTR [eax],ecx
  4261f4:	or     ebp,0xda6d05e9
  4261fa:	iret   
  4261fb:	out    dx,eax
  4261fc:	leave  
  4261fd:	scas   eax,DWORD PTR es:[edi]
  4261fe:	std    
  4261ff:	arpl   WORD PTR ds:0xc2483275,ax
  426205:	xlat   BYTE PTR ds:[ebx]
  426206:	cwde   
  426207:	fsubr  QWORD PTR [eax-0x28]
  42620a:	jmp    0x5b1bb8cd
  42620f:	jae    0x4261e7
  426211:	fwait
  426212:	xor    esi,DWORD PTR [eax-0x4f]
  426215:	shl    BYTE PTR [ebx-0x7d201cc8],0xde
  42621c:	xlat   BYTE PTR ds:[ebx]
  42621d:	jae    0x4261e3
  42621f:	xor    al,0x74
  426221:	and    al,0x80
  426223:	lock cmp ebx,DWORD PTR [eax+edx*2-0x79]
  426228:	imul   ebp,DWORD PTR [edi+0x6d],0x1b928ce6
  42622f:	shr    BYTE PTR [esi+0x12b74c8b],1
  426235:	(bad)
  426238:	(bad)  
  426239:	in     al,dx
  42623a:	inc    edx
  42623b:	lahf   
  42623c:	jo     0x4261ee
  42623e:	sbb    al,0xd
  426240:	les    ecx,FWORD PTR [eax+0x15d0055d]
  426246:	add    eax,0x489e9171
  42624b:	retf   
  42624c:	and    ebp,DWORD PTR [edx]
  42624e:	push   cs
  42624f:	xchg   DWORD PTR [ebp+0x5e62581],ecx
  426255:	xor    eax,DWORD PTR [esi-0x5ec46894]
  42625b:	loopne 0x4262b1
  42625d:	mov    bl,cl
  42625f:	(bad)  
  426261:	cmp    edx,eax
  426263:	dec    esi
  426264:	clc    
  426265:	les    esi,FWORD PTR [esi+0x7c46b8b]
  42626b:	mov    ebx,0xa015e679
  426270:	out    dx,eax
  426271:	iret   
  426272:	mov    ecx,0x355f9260
  426277:	leave  
  426278:	jmp    0x4262ef
  42627a:	add    BYTE PTR [eax],al
  42627c:	inc    eax
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0xdd63:0xe6c0e400
  42628c:	sbb    bl,bl
  42628e:	add    DWORD PTR [eax],eax
  426290:	xchg   BYTE PTR [edx],al
  426292:	add    BYTE PTR [eax],al
  426294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426295:	mov    dh,0x31
  426297:	mov    ch,0xbb
  426299:	cmc    
  42629a:	add    dl,cl
  42629c:	loopne 0x42631d
  42629e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42629f:	sbb    DWORD PTR [ebx+esi*1-0x5f],0x50
  4262a4:	lea    ecx,[esi+0x6b68cc6b]
  4262aa:	icebp  
  4262ab:	jne    0x426275
  4262ad:	int    0xa4
  4262af:	out    0x53,eax
  4262b1:	int3   
  4262b2:	push   0xdcfa0aab
  4262b7:	test   al,0x55
  4262ba:	fdiv   st,st(0)
  4262bc:	mov    al,ds:0x9331aff2
  4262c1:	ret    0xb3e5
  4262c4:	jmp    0xc0909ca9
  4262c9:	mov    dl,0xec
  4262cb:	mov    ebp,0x9617d9a5
  4262d0:	mov    BYTE PTR [ecx+eiz*4+0x61],ch
  4262d4:	mov    al,ds:0xa7ed0f76
  4262d9:	sbb    al,0x91
  4262db:	sbb    BYTE PTR [edi-0x76],cl
  4262de:	rcr    DWORD PTR [edx],1
  4262e0:	rol    BYTE PTR [eax+0xe],0xcd
  4262e4:	pop    ebx
  4262e5:	and    al,0x3c
  4262e8:	dec    ebx
  4262e9:	lds    ebp,FWORD PTR [edi+0x30fd766f]
  4262ef:	js     0x426352
  4262f1:	mov    DWORD PTR [edx-0x534e5051],ecx
  4262f7:	shl    DWORD PTR [ebp+0x30e86d03],0xa0
  4262fe:	sahf   
  4262ff:	push   esp
  426300:	stos   BYTE PTR es:[edi],al
  426301:	stos   BYTE PTR es:[edi],al
  426302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426303:	pop    ds
  426304:	out    0x80,al
  426306:	ins    DWORD PTR es:[edi],dx
  426307:	jne    0x42637c
  426309:	cmp    bh,BYTE PTR [ecx-0x362ed666]
  42630f:	mov    ecx,0x3ed15db8
  426314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426315:	and    DWORD PTR [ebp-0x28d8aa4b],ecx
  42631b:	lock lahf 
  42631d:	scas   al,BYTE PTR es:[edi]
  42631e:	test   BYTE PTR [edi-0x18fc46e6],al
  426324:	sbb    al,0x64
  426326:	lahf   
  426327:	and    edx,ebx
  426329:	adc    DWORD PTR [esp-0x44b067a8],ebp
  426330:	rep outs dx,DWORD PTR ds:[esi]
  426333:	sub    ah,bh
  426335:	(bad)  
  426337:	xor    al,0x31
  426339:	xchg   edi,eax
  42633a:	or     BYTE PTR [ebx+0xbb6c495],bl
  426340:	mov    ebx,0x1ab62bdf
  426345:	mov    esi,0xbc5f083f
  42634a:	jle    0x426369
  42634c:	add    eax,esp
  42634e:	push   ebp
  42634f:	jg     0x426377
  426351:	out    0xdc,al
  426353:	push   edi
  426354:	fistp  DWORD PTR [edx-0x3610dd14]
  42635a:	adc    edi,eax
  42635c:	addr16 dec esi
  42635e:	(bad)  
  42635f:	repnz (bad) 
  426361:	movnti DWORD PTR [ebp+0x76],esi
  426365:	out    dx,al
  426366:	and    DWORD PTR [edi-0x42],ebx
  426369:	push   cs
  42636a:	inc    ecx
  42636b:	out    0x50,eax
  42636d:	in     al,dx
  42636e:	dec    edx
  42636f:	mov    al,ds:0x42e68302
  426374:	xchg   edx,eax
  426375:	lahf   
  426376:	stos   BYTE PTR es:[edi],al
  426377:	mov    ds:0xa8c6557d,al
  42637c:	mov    dl,0x29
  42637e:	mov    al,0xc3
  426380:	xchg   DWORD PTR [ebx+0x396fb69b],ebp
  426386:	das    
  426387:	mov    ecx,0x603b907f
  42638c:	in     al,dx
  42638d:	xor    eax,0x9698f35e
  426392:	sub    edx,esi
  426394:	xchg   ecx,eax
  426395:	cmp    al,0xc6
  426397:	inc    ecx
  426398:	inc    ebx
  426399:	js     0x4263e7
  42639b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42639c:	mov    edx,0x81f72308
  4263a1:	pop    ecx
  4263a2:	sbb    BYTE PTR [esp+edx*1+0x35],dh
  4263a6:	test   DWORD PTR gs:0x53071e68,edi
  4263ad:	lods   eax,DWORD PTR ds:[esi]
  4263ae:	and    eax,0x3fa84e4d
  4263b3:	pop    edi
  4263b4:	outs   dx,DWORD PTR ds:[esi]
  4263b5:	addps  xmm6,XMMWORD PTR [ebx]
  4263b8:	or     bl,bl
  4263ba:	mov    ebx,0x83dfb330
  4263bf:	pop    edx
  4263c0:	mov    eax,DWORD PTR ds:0x508affe6
  4263c6:	dec    eax
  4263c7:	pop    ebp
  4263c8:	or     eax,0x8e930e05
  4263cd:	mov    ebp,0x682a9fa1
  4263d2:	retf   0xb39a
  4263d5:	pop    eax
  4263d6:	rol    edi,1
  4263d8:	cld    
  4263d9:	jecxz  0x426409
  4263db:	or     BYTE PTR [esi+0xd],ah
  4263de:	push   ds
  4263df:	push   ecx
  4263e0:	rdtsc  
  4263e2:	push   edx
  4263e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263e4:	pop    esi
  4263e5:	jns    0x2187e853
  4263eb:	cs aam 0x22
  4263ee:	popa   
  4263ef:	das    
  4263f0:	popf   
  4263f1:	mov    BYTE PTR [edx-0x602d3a79],bh
  4263f7:	fmul   QWORD PTR [ecx-0x7e]
  4263fa:	sar    BYTE PTR [ebp+0x79],0xe8
  4263fe:	xchg   BYTE PTR [ecx-0x44642ba8],bl
  426404:	loop   0x426484
  426406:	adc    al,0xc7
  426408:	aam    0x48
  42640a:	arpl   WORD PTR [ebx],bx
  42640c:	xor    BYTE PTR [esi+0x7712bc85],al
  426412:	sbb    al,0x3f
  426414:	sub    DWORD PTR [ebp+0x1b],esp
  426417:	por    mm1,QWORD PTR [ebp+edx*4-0x6]
  42641c:	jb     0x42643a
  42641e:	repnz mov al,ds:0x596acaef
  426424:	or     cl,ch
  426426:	int3   
  426427:	mov    ds:0x85c22f6c,al
  42642c:	das    
  42642d:	pop    ecx
  42642e:	jl     0x42646d
  426430:	mov    dl,BYTE PTR [ecx+0x34]
  426433:	push   eax
  426434:	sar    BYTE PTR [ebx-0x39],0x18
  426438:	imul   esi,DWORD PTR [ebx],0xffffffbb
  42643b:	dec    eax
  42643c:	jecxz  0x4263c7
  42643e:	inc    ebp
  42643f:	push   ecx
  426440:	cmc    
  426441:	jb     0x4264b3
  426443:	dec    esi
  426444:	adc    eax,0x18accf32
  426449:	sar    DWORD PTR [esi-0x6],0x8e
  42644d:	call   0x1a12:0xa681863b
  426454:	jle    0x42646e
  426456:	shl    edx,cl
  426458:	and    ebx,DWORD PTR ds:0x1a3f4fb3
  42645e:	mov    edi,0xe97d331c
  426463:	xchg   BYTE PTR [edi+eax*8+0x275ca2be],ah
  42646a:	loope  0x42649f
  42646c:	shl    DWORD PTR [ecx],1
  42646e:	cmp    DWORD PTR [ecx-0x851ea25],ebp
  426474:	xchg   ecx,eax
  426475:	cdq    
  426476:	cmp    DWORD PTR [esi],ebp
  426478:	push   ecx
  426479:	xor    bl,cl
  42647b:	(bad)  
  42647c:	dec    esp
  42647d:	aas    
  42647e:	hlt    
  42647f:	in     eax,dx
  426480:	bound  ebx,QWORD PTR [eax+0x17]
  426483:	sbb    esi,DWORD PTR [ebx+0x8]
  426486:	fistp  DWORD PTR [ebp+0x48a377c8]
  42648c:	xchg   esp,eax
  42648d:	xchg   dl,ah
  42648f:	fldenv [eax+0x5e6cbbf4]
  426495:	rcl    BYTE PTR [ebx+edx*2+0x42],0xc
  42649a:	sbb    DWORD PTR [esi-0x22],0xffffffc2
  42649e:	sbb    DWORD PTR [edx],ebx
  4264a0:	jge    0x4264a7
  4264a2:	popf   
  4264a3:	cmc    
  4264a4:	scas   al,BYTE PTR es:[edi]
  4264a5:	lds    esp,FWORD PTR [ebx+0x68]
  4264a8:	mov    bl,0x55
  4264aa:	cwde   
  4264ab:	push   edx
  4264ac:	(bad)  
  4264ad:	jmp    0xeeea:0x9445fc53
  4264b4:	dec    edi
  4264b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264b6:	clc    
  4264b7:	test   eax,0xdc5c787a
  4264bc:	icebp  
  4264bd:	aad    0xc6
  4264bf:	xchg   edi,eax
  4264c0:	dec    ecx
  4264c1:	es dec esp
  4264c3:	js     0x426475
  4264c5:	lds    eax,FWORD PTR ds:0x15e4fc3e
  4264cb:	out    0x9f,eax
  4264cd:	cmp    ecx,ebp
  4264cf:	cs jecxz 0x426520
  4264d2:	jmp    0x42645e
  4264d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264d5:	in     eax,0xb5
  4264d7:	addr16 cwde 
  4264d9:	jl     0x4264f8
  4264db:	cmp    ebx,ebx
  4264dd:	pop    eax
  4264de:	mov    ebp,cs
  4264e0:	fbstp  TBYTE PTR [esi]
  4264e2:	fst    QWORD PTR [ebx+0x7]
  4264e5:	popf   
  4264e6:	push   ebp
  4264e7:	adc    eax,0xcf30a0aa
  4264ec:	pop    esp
  4264ed:	xor    edi,eax
  4264ef:	in     al,dx
  4264f0:	mov    edi,esp
  4264f2:	push   es
  4264f3:	jg     0x426543
  4264f5:	es jb  0x42648e
  4264f8:	cmp    BYTE PTR [ecx+esi*4+0x131255ec],0x79
  426500:	mov    esi,0xf6ec00a
  426505:	imul   ecx,DWORD PTR [esi+0x41],0xffffff9e
  426509:	cmp    edx,DWORD PTR [edi]
  42650b:	aaa    
  42650c:	adc    esp,eax
  42650e:	cmp    eax,0xd0146ffa
  426513:	xchg   esp,eax
  426514:	pushf  
  426515:	shl    BYTE PTR [esi-0x70],cl
  426518:	push   0xb600008e
  42651d:	in     al,0xd7
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0x8c894bdd
  42652c:	sahf   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [esi+0x77000002],al
  426535:	jb     0x4264f3
  426537:	mov    BYTE PTR [ecx-0x61],bh
  42653a:	xor    eax,DWORD PTR [ebp+0x25]
  42653d:	jo     0x4264d5
  42653f:	mov    eax,ds:0x904bafcc
  426544:	mov    al,0xa3
  426546:	ror    DWORD PTR [esi],cl
  426548:	dec    ebx
  426549:	rcl    ebp,cl
  42654b:	(bad)  
  42654d:	out    0xbd,al
  42654f:	and    al,0x41
  426551:	fisttp WORD PTR [edi+esi*2]
  426554:	pop    eax
  426555:	mov    WORD PTR [edi+0x76],?
  426558:	xchg   BYTE PTR [ebp-0x2c5eff92],cl
  42655e:	mov    ebx,0xaf3025d6
  426563:	sub    eax,ebp
  426565:	daa    
  426566:	into   
  426567:	jns    0x42656b
  426569:	sub    al,BYTE PTR [esi+0x3afcebe3]
  42656f:	push   ds
  426570:	lods   eax,DWORD PTR ds:[esi]
  426571:	adc    BYTE PTR [edi+0x6c],dh
  426574:	fstp   st(3)
  426576:	test   DWORD PTR [edi],edi
  426578:	(bad)  
  426579:	(bad)  
  42657a:	push   esp
  42657b:	jae    0x426586
  42657d:	sub    eax,0x7522f8b4
  426582:	mov    dh,BYTE PTR [edx]
  426584:	add    eax,0x38b3fe4
  426589:	sar    DWORD PTR [ebx+esi*8+0x370a4152],0x3e
  426591:	out    0x2,eax
  426593:	dec    DWORD PTR [edi+0x4e8e8fdd]
  426599:	push   es
  42659a:	mov    ebx,0xf0ade750
  42659f:	jo     0x426533
  4265a1:	dec    ecx
  4265a2:	jmp    FWORD PTR [edi+0x1f805dfd]
  4265a8:	jne    0x426629
  4265aa:	xor    BYTE PTR [edi-0x72de4b33],bl
  4265b0:	mov    cl,ah
  4265b2:	jmp    0xc89c:0x65e3ff6
  4265b9:	and    DWORD PTR [edx-0x18],0x74
  4265bd:	pop    ds
  4265be:	xor    dl,BYTE PTR ds:0x1fa2da32
  4265c4:	lahf   
  4265c5:	ins    DWORD PTR es:[edi],dx
  4265c6:	xor    bl,cl
  4265c8:	xchg   BYTE PTR [bx],ch
  4265cb:	cwde   
  4265cc:	inc    eax
  4265cd:	sub    edx,ebp
  4265cf:	outs   dx,BYTE PTR ds:[esi]
  4265d0:	sbb    eax,ebx
  4265d2:	mov    ebp,DWORD PTR [edi+0x76531f25]
  4265d8:	cmp    eax,0xf01c22f8
  4265dd:	and    eax,0x6c25a326
  4265e2:	jp     0x42663d
  4265e4:	lods   al,BYTE PTR ds:[esi]
  4265e5:	mov    ebx,0x76115578
  4265ea:	jne    0x4265a7
  4265ec:	ds push 0xa394981d
  4265f2:	dec    ebp
  4265f3:	inc    eax
  4265f4:	dec    ebx
  4265f5:	jae    0x426625
  4265f7:	mov    eax,ds:0x54ed9625
  4265fc:	adc    eax,0x1c3acc19
  426601:	or     al,0x83
  426603:	mov    bh,BYTE PTR [ebx-0x6551ceeb]
  426609:	jo     0x4265dd
  42660b:	adc    DWORD PTR [ebp+0x26bca076],esi
  426611:	pop    es
  426612:	xchg   esi,eax
  426613:	arpl   WORD PTR [eax-0x55],bx
  426616:	jle    0x426672
  426618:	imul   eax,DWORD PTR [edi],0x15260ca5
  42661e:	jne    0x4265e7
  426620:	sbb    BYTE PTR [ecx-0x48d0812f],0xe0
  426627:	mov    cs,WORD PTR [ebp+0x76]
  42662a:	pop    esi
  42662b:	xor    al,ch
  42662d:	outs   dx,BYTE PTR ds:[esi]
  42662e:	pop    edi
  42662f:	add    al,0xd4
  426631:	dec    ebp
  426632:	cmp    DWORD PTR [edx],edi
  426634:	sbb    ecx,DWORD PTR [edx]
  426636:	lahf   
  426637:	bound  edi,QWORD PTR [edx-0x2cb28527]
  42663d:	loop   0x42661b
  42663f:	jmp    0x5196:0xed3913e2
  426646:	dec    ebx
  426647:	push   ebp
  426648:	inc    edx
  426649:	add    edi,esp
  42664b:	push   edi
  42664c:	pop    ebx
  42664d:	dec    edi
  42664e:	jge    0x4266b1
  426650:	ret    
  426651:	js     0x42665d
  426653:	mov    esp,0xd184b33b
  426658:	test   DWORD PTR [edx+0x19],0x5720b504
  42665f:	fiadd  DWORD PTR [edi+esi*1]
  426662:	clc    
  426663:	jmp    0xd27d8b07
  426668:	imul   ebp,DWORD PTR [ecx],0x2b9819df
  42666e:	dec    esp
  42666f:	out    dx,al
  426670:	inc    edi
  426671:	sbb    esi,esp
  426673:	push   ss
  426674:	xchg   ecx,eax
  426675:	push   ds
  426676:	push   edx
  426677:	xor    ch,BYTE PTR [ebx+esi*4-0x26]
  42667b:	cmp    ebp,DWORD PTR [ecx+0x7427ebbe]
  426681:	loop   0x426695
  426683:	xchg   ebp,eax
  426684:	pop    edi
  426685:	or     al,BYTE PTR [ecx+0x60]
  426688:	sbb    al,0x27
  42668a:	enter  0xae1b,0x8e
  42668e:	popa   
  42668f:	and    al,0xbd
  426691:	xor    ebx,esp
  426693:	test   al,0x63
  426695:	xchg   bh,ah
  426697:	sbb    bh,BYTE PTR [ebx*4+0x5950ea7]
  42669e:	out    dx,al
  42669f:	and    DWORD PTR [edi],edi
  4266a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a2:	pusha  
  4266a3:	inc    eax
  4266a4:	xor    ecx,esp
  4266a6:	in     al,0x75
  4266a8:	ret    
  4266a9:	popa   
  4266aa:	lds    ebx,FWORD PTR [edi-0x21]
  4266ad:	mov    cs,WORD PTR [esi-0x9]
  4266b0:	lods   al,BYTE PTR ds:[esi]
  4266b1:	sub    eax,0xe3701aa5
  4266b6:	aaa    
  4266b7:	aas    
  4266b8:	mov    edx,0x51b0831b
  4266bd:	in     al,dx
  4266be:	push   ecx
  4266bf:	in     eax,0xec
  4266c1:	int3   
  4266c2:	scas   eax,DWORD PTR es:[edi]
  4266c3:	fs cld 
  4266c5:	xchg   edx,eax
  4266c6:	mov    eax,ds:0x6ba3de35
  4266cb:	stos   DWORD PTR es:[edi],eax
  4266cc:	dec    ebp
  4266cd:	mov    bh,0x40
  4266cf:	nop
  4266d0:	test   al,0xb8
  4266d2:	shl    BYTE PTR [edi+0x79],cl
  4266d5:	adc    ch,BYTE PTR [esi]
  4266d7:	iret   
  4266d8:	ror    BYTE PTR [edx],cl
  4266da:	aas    
  4266db:	ds mov esi,0x296000c5
  4266e1:	mov    cl,BYTE PTR [edi]
  4266e3:	add    DWORD PTR [edx],ecx
  4266e5:	lods   eax,DWORD PTR ds:[esi]
  4266e6:	inc    esi
  4266e7:	adc    BYTE PTR [eax-0x1d1c4d54],bl
  4266ed:	sti    
  4266ee:	mov    DWORD PTR [esi-0x5b3e6673],ebx
  4266f4:	mov    edi,0xf04c00b1
  4266f9:	push   ecx
  4266fa:	fisubr WORD PTR [ecx+0x75927371]
  426700:	ror    ch,1
  426702:	pop    ebp
  426703:	push   cs
  426704:	jno    0x42669e
  426706:	ret    0x3394
  426709:	sub    ebx,DWORD PTR [eax-0x71]
  42670c:	lds    ebp,FWORD PTR [edx+edi*8]
  42670f:	sub    edx,DWORD PTR [ebx+ecx*4]
  426712:	lods   al,BYTE PTR ds:[esi]
  426713:	pop    ds
  426714:	inc    eax
  426715:	out    dx,al
  426716:	loope  0x42673a
  426718:	pop    esp
  426719:	push   0xffffffd2
  42671b:	mov    bl,0xa3
  42671d:	inc    ebx
  42671e:	sti    
  42671f:	lods   al,BYTE PTR gs:[esi]
  426721:	push   ss
  426722:	test   BYTE PTR [edx],ah
  426724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426725:	pop    esi
  426726:	sahf   
  426727:	xchg   BYTE PTR [ecx+0x20],cl
  42672a:	mov    ds:0x2146e540,al
  42672f:	ds and al,0x59
  426732:	pusha  
  426733:	rol    DWORD PTR [eax],0xf7
  426736:	xchg   esi,eax
  426737:	mov    al,0x9f
  426739:	mov    bh,0x6f
  42673b:	lds    edx,FWORD PTR [esi]
  42673d:	bound  ebx,QWORD PTR [edx]
  42673f:	sbb    esi,DWORD PTR [eax]
  426741:	adc    esp,ecx
  426743:	or     al,0xa2
  426745:	test   al,0x6b
  426747:	push   es
  426748:	int3   
  426749:	idiv   cl
  42674b:	adc    edx,DWORD PTR [eax]
  42674d:	add    BYTE PTR [eax-0x28],cl
  426750:	jno    0x42671f
  426752:	test   DWORD PTR [ebx],0x10bddeb4
  426758:	das    
  426759:	lahf   
  42675a:	mov    ebp,0x17059397
  42675f:	test   eax,0x3c92108a
  426764:	xor    bh,BYTE PTR [edi-0x1437b1a6]
  42676a:	inc    esp
  42676b:	mov    cl,0xb7
  42676d:	jle    0x4266ff
  42676f:	popf   
  426770:	clc    
  426771:	je     0x4266f4
  426773:	ds pop eax
  426775:	fcom   QWORD PTR [esi]
  426777:	inc    edx
  426778:	xor    dh,dh
  42677a:	mov    eax,0x40bfc0e7
  42677f:	(bad)  
  426780:	pop    ebp
  426781:	pop    esp
  426782:	mov    BYTE PTR [edx-0x36e8882f],bh
  426788:	hlt    
  426789:	cmp    eax,0x80427544
  42678e:	dec    edi
  42678f:	sub    ch,ah
  426791:	mov    al,0xb4
  426793:	pop    edx
  426794:	sub    BYTE PTR [eax],cl
  426796:	test   al,0xdc
  426798:	mov    esp,0xa5d295e2
  42679d:	lods   al,BYTE PTR ds:[esi]
  42679e:	sahf   
  42679f:	and    bl,BYTE PTR [ecx+0x692a53f]
  4267a5:	push   ss
  4267a6:	retf   
  4267a7:	mov    bh,0xc7
  4267a9:	cdq    
  4267aa:	and    BYTE PTR [edx+edx*1-0x42e54591],dh
  4267b1:	dec    esi
  4267b2:	in     eax,dx
  4267b3:	repnz hlt 
  4267b5:	xor    cl,al
  4267b7:	leave  
  4267b8:	fist   WORD PTR [ecx+0x0]
  4267bb:	add    dl,bh
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xef1c7bfe
  4267c9:	call   0xe0667e03
  4267ce:	add    DWORD PTR [eax],eax
  4267d0:	xchg   BYTE PTR [edx],al
  4267d2:	add    BYTE PTR [eax],al
  4267d4:	push   edi
  4267d5:	into   
  4267d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267d7:	mov    ds:0xae8be31c,eax
  4267dc:	or     eax,0x5550e5fd
  4267e1:	xor    al,0x9f
  4267e3:	dec    edx
  4267e4:	test   DWORD PTR [edx+0x21ec185b],esp
  4267ea:	xchg   esp,eax
  4267eb:	mov    eax,ds:0x66227ec5
  4267f0:	xor    eax,0x69555739
  4267f5:	in     eax,0xed
  4267f7:	jmp    0x87dd:0xa2356c79
  4267fe:	sub    ebp,DWORD PTR [ebp+0x0]
  426801:	jo     0x426872
  426803:	clc    
  426804:	sub    ah,BYTE PTR [esi]
  426806:	jmp    0x2059:0xdf77070
  42680d:	add    eax,0x899291b1
  426812:	retf   0x7bf2
  426815:	cmovbe ecx,DWORD PTR [esi+0x59716e5d]
  42681c:	stos   BYTE PTR es:[edi],al
  42681d:	ficomp WORD PTR [esi+0x7c]
  426820:	pushf  
  426821:	stos   DWORD PTR es:[edi],eax
  426822:	and    eax,0x8423d614
  426827:	xchg   esp,eax
  426828:	sbb    bl,BYTE PTR [ebx]
  42682a:	push   ecx
  42682b:	les    ecx,FWORD PTR ds:0x539b74c7
  426831:	jg     0x426807
  426833:	mov    BYTE PTR [ebp-0x52],dl
  426836:	xor    dh,BYTE PTR [eax-0x11a0d33c]
  42683c:	jp     0x4267e4
  42683e:	mov    ebp,0x69fc69b3
  426843:	or     al,0x9f
  426845:	and    al,ah
  426847:	xor    BYTE PTR es:[ebx+0x4f],al
  42684b:	jns    0x4267df
  42684d:	in     al,0x7c
  42684f:	pusha  
  426850:	ins    DWORD PTR es:[edi],dx
  426851:	push   0x3f
  426853:	inc    eax
  426854:	push   edx
  426855:	and    al,0x9e
  426857:	arpl   bp,dx
  426859:	adc    dl,BYTE PTR [eax+0x27a4ae7c]
  42685f:	mov    ebx,0x6afda1db
  426864:	out    dx,eax
  426865:	add    eax,0x43d367d1
  42686a:	push   0xffffffb6
  42686c:	pusha  
  42686d:	jle    0x4268c6
  42686f:	aaa    
  426870:	pop    ecx
  426871:	push   0x4ee414cb
  426876:	(bad)  
  426877:	out    dx,eax
  426878:	ret    0xe9b
  42687b:	push   edi
  42687c:	and    al,0xd5
  42687e:	jns    0x42681f
  426880:	sbb    eax,edx
  426882:	mov    dh,0x3c
  426884:	mov    edx,0x93c2f905
  426889:	jmp    0xb898:0x9b2bc21d
  426890:	(bad)  
  426891:	mov    al,ds:0xc0ed0bf7
  426896:	adc    ebx,DWORD PTR [ebp+ebp*1+0x10]
  42689a:	jmp    0x4f70:0x33ae2782
  4268a1:	aas    
  4268a2:	xchg   ebp,eax
  4268a3:	pushf  
  4268a4:	pop    edx
  4268a5:	aam    0xe
  4268a7:	mov    edx,0x77777305
  4268ac:	nop
  4268ad:	rcl    DWORD PTR [edx-0x67c2c1f3],0x43
  4268b4:	pop    ebx
  4268b5:	mov    esi,0xad235a1c
  4268ba:	and    BYTE PTR [ecx+eax*4-0xa],ah
  4268be:	mov    ds:0xe25edd77,eax
  4268c3:	mov    ebx,0x71150597
  4268c8:	xchg   esp,eax
  4268c9:	xor    edx,ebp
  4268cb:	in     al,dx
  4268cc:	cmc    
  4268cd:	mov    ebx,0x274767de
  4268d2:	cli    
  4268d3:	ins    BYTE PTR es:[edi],dx
  4268d4:	data16 jle 0x4268be
  4268d7:	retf   0x4531
  4268da:	jp     0x4268ab
  4268dc:	das    
  4268dd:	or     ax,0xde58
  4268e1:	inc    esp
  4268e2:	lahf   
  4268e3:	mov    dh,0x8e
  4268e5:	xchg   ebp,eax
  4268e6:	mov    al,ds:0xa5e83b99
  4268eb:	push   ss
  4268ec:	sub    BYTE PTR [esi],dl
  4268ee:	fld    TBYTE PTR [ebp+0x2a56655e]
  4268f4:	jl     0x426918
  4268f6:	jbe    0x42692d
  4268f8:	jp     0x4268c8
  4268fa:	adc    BYTE PTR [esi+eax*1-0x1f],dh
  4268fe:	mov    ds:0x245576fc,eax
  426903:	mov    esp,0xb3a1510c
  426908:	jle    0x42692d
  42690a:	ficom  DWORD PTR [ebx]
  42690c:	cdq    
  42690d:	adc    ebp,DWORD PTR [esi-0x40164d88]
  426913:	aam    0x17
  426915:	ret    0xc25e
  426918:	inc    eax
  426919:	mov    esp,0x5f22b629
  42691e:	lods   al,BYTE PTR ds:[esi]
  42691f:	cmc    
  426920:	or     DWORD PTR [esi+0x1d],esp
  426923:	pusha  
  426924:	push   edi
  426925:	xchg   DWORD PTR [ebx-0x28eaae9e],ebp
  42692b:	test   DWORD PTR [esi-0x6f],0xae5a85e1
  426932:	aaa    
  426933:	loope  0x426956
  426935:	jl     0x426960
  426937:	call   0x7e440d82
  42693c:	ds pop edx
  42693e:	jmp    0x9fda2e53
  426943:	sar    DWORD PTR [esi-0x6929aa7],0x43
  42694a:	jle    0x426980
  42694c:	xchg   esi,eax
  42694d:	mov    al,ds:0x13a5de6b
  426952:	in     al,0x39
  426954:	inc    esi
  426955:	cdq    
  426956:	push   esp
  426957:	imul   ecx,DWORD PTR [ebp+0x210ef352],0xab0d350e
  426961:	inc    ecx
  426962:	aam    0xcc
  426964:	cs and cl,0x23
  426968:	xchg   esp,eax
  426969:	shr    DWORD PTR [esi+0x6277b6e],0xad
  426970:	dec    edx
  426971:	jmp    ebx
  426973:	je     0x426918
  426975:	scas   eax,DWORD PTR es:[edi]
  426976:	stc    
  426977:	sbb    BYTE PTR [eax-0x7b9e16ac],dh
  42697d:	add    DWORD PTR [edx+0x40],0x6670ce8a
  426984:	pop    ss
  426985:	jecxz  0x426978
  426987:	inc    edi
  426988:	mov    eax,0x4793155b
  42698d:	xor    al,0xac
  42698f:	lock cli 
  426991:	mov    DWORD PTR [edx+esi*8-0x24f3ae4a],edx
  426998:	and    edx,DWORD PTR [edx]
  42699a:	mov    bl,0x4b
  42699c:	push   esp
  42699d:	sar    DWORD PTR [ecx],0xbe
  4269a0:	push   edi
  4269a1:	fwait
  4269a2:	cli    
  4269a3:	add    DWORD PTR [edi+0x8],eax
  4269a6:	int3   
  4269a7:	lods   eax,DWORD PTR ds:[esi]
  4269a8:	jmp    0xd170:0x42c231f1
  4269af:	jae    0x42699f
  4269b1:	sub    ax,0x3972
  4269b5:	repnz stc 
  4269b7:	test   al,dh
  4269b9:	(bad)  
  4269bb:	mov    ah,0x68
  4269bd:	call   0x7390:0x7f1d0b0e
  4269c4:	push   0xffffffa1
  4269c6:	sahf   
  4269c7:	aad    0x6f
  4269c9:	and    BYTE PTR [edx-0x27],dh
  4269cc:	ss ins DWORD PTR es:[edi],dx
  4269ce:	cld    
  4269cf:	into   
  4269d0:	pop    edi
  4269d1:	inc    edi
  4269d2:	outs   dx,BYTE PTR ds:[esi]
  4269d3:	ins    BYTE PTR es:[edi],dx
  4269d4:	jnp    0x426a4b
  4269d6:	push   eax
  4269d7:	test   DWORD PTR [ecx+ebp*4+0x4e6eda5c],esi
  4269de:	fs mov ecx,0xe780960b
  4269e4:	out    0x2,al
  4269e6:	mov    bl,0x14
  4269e8:	and    ecx,ebx
  4269ea:	cmp    eax,0xb5e5af4
  4269ef:	retf   
  4269f0:	sbb    al,0xbd
  4269f2:	mov    bh,0xb6
  4269f4:	rcr    BYTE PTR [ecx-0x7f6d67ad],1
  4269fa:	dec    ecx
  4269fb:	icebp  
  4269fc:	add    edi,ebp
  4269fe:	pop    esp
  4269ff:	retf   0xde2f
  426a02:	push   cs
  426a03:	stos   BYTE PTR es:[edi],al
  426a04:	sbb    al,0x42
  426a06:	jne    0x4269e1
  426a08:	cli    
  426a09:	fsub   QWORD PTR [edi]
  426a0b:	sub    esp,DWORD PTR [ecx-0x56]
  426a0e:	add    edx,esp
  426a10:	jg     0x426a3f
  426a12:	outs   dx,BYTE PTR ds:[esi]
  426a13:	or     ah,0xf1
  426a16:	jnp    0x4269c2
  426a18:	dec    eax
  426a19:	gs out 0x1e,eax
  426a1c:	lock cmp ah,BYTE PTR [edi+0x2ac85517]
  426a23:	mov    ebp,ebx
  426a25:	xchg   BYTE PTR [eax],al
  426a27:	test   DWORD PTR [esi+0x2],ebp
  426a2a:	in     al,0x7
  426a2c:	sub    al,0xb9
  426a2e:	neg    DWORD PTR [eax+esi*8+0x2b]
  426a32:	adc    ch,BYTE PTR [ebp+eiz*8-0x30fee3c]
  426a39:	sbb    al,0x71
  426a3b:	sub    DWORD PTR [eax+0x4c7e6b17],ebp
  426a41:	xor    eax,0xc9332698
  426a46:	mov    dl,0x6d
  426a48:	xchg   esi,eax
  426a49:	call   0x6676:0x390c0541
  426a50:	je     0x426a5d
  426a52:	add    al,0x37
  426a54:	fstp   TBYTE PTR [esi]
  426a56:	loop   0x426a38
  426a58:	xlat   BYTE PTR ds:[ebx]
  426a59:	in     al,0x0
  426a5b:	add    bh,cl
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	xchg   DWORD PTR [ebx],ebp
  426a6a:	push   edx
  426a6b:	jl     0x426a17
  426a6d:	loop   0x426a70
  426a6f:	add    BYTE PTR [esi+0x2b000002],al
  426a75:	(bad)  [ecx-0xa]
  426a78:	cdq    
  426a79:	call   DWORD PTR [edx+0x8]
  426a7c:	stc    
  426a7d:	pop    esp
  426a7e:	data16 mov bh,0xbc
  426a81:	pop    edx
  426a82:	mov    bl,0xd3
  426a84:	outs   dx,DWORD PTR ds:[esi]
  426a85:	in     ax,dx
  426a87:	ficom  WORD PTR [ecx]
  426a89:	jecxz  0x426a36
  426a8b:	push   ecx
  426a8c:	jno    0x426a95
  426a8e:	clc    
  426a8f:	(bad)  
  426a90:	xchg   edi,eax
  426a91:	mov    ebx,0xb77f8f4e
  426a96:	repnz sbb al,0x6e
  426a99:	int3   
  426a9a:	inc    ebp
  426a9b:	arpl   WORD PTR [ebp+0x3f],sp
  426a9e:	lds    ebp,FWORD PTR [eax]
  426aa0:	add    ebx,ecx
  426aa2:	popa   
  426aa3:	dec    esi
  426aa4:	fst    st(0)
  426aa6:	ret    0xde51
  426aa9:	int3   
  426aaa:	mov    ah,0xa
  426aac:	and    al,0x1b
  426aae:	pop    ebx
  426aaf:	(bad)  
  426ab0:	jp     0x426a67
  426ab2:	hlt    
  426ab3:	bound  ebp,QWORD PTR [eax+0x5133241e]
  426ab9:	ret    
  426aba:	sbb    edx,DWORD PTR [edx+0x409f7512]
  426ac0:	or     dh,BYTE PTR [eax-0x6b]
  426ac3:	pop    esp
  426ac4:	pop    eax
  426ac5:	sbb    ecx,DWORD PTR [edx-0x2576e050]
  426acb:	xchg   edx,eax
  426acc:	xor    BYTE PTR [ebx+0x2e36851d],dh
  426ad2:	cmp    cl,BYTE PTR [esi-0x2eb129bd]
  426ad8:	push   esp
  426ad9:	inc    esp
  426ada:	cmp    ecx,ebx
  426adc:	mov    ah,0xc2
  426ade:	pop    edx
  426adf:	xchg   esi,eax
  426ae0:	push   0x4bbd2d7e
  426ae5:	inc    esp
  426ae6:	nop
  426ae7:	iret   
  426ae8:	shl    eax,1
  426aea:	jno    0x426ab8
  426aec:	cmp    ah,BYTE PTR [ebx-0x74d23b79]
  426af2:	jmp    0x426ada
  426af4:	cmp    DWORD PTR [ecx+0x7690fc7a],esi
  426afa:	cmp    eax,0xd9b6ef1a
  426aff:	je     0x426ab8
  426b01:	sub    edx,DWORD PTR [edi+0x2c35fa47]
  426b07:	cmp    BYTE PTR [esi+0x1a],dl
  426b0a:	mov    BYTE PTR [ebp-0x38],dl
  426b0d:	xchg   ebp,eax
  426b0e:	adc    al,0x7
  426b10:	mov    edx,DWORD PTR [ebp+edx*8+0x3e8f7370]
  426b17:	retf   
  426b18:	scas   al,BYTE PTR es:[edi]
  426b19:	das    
  426b1a:	or     edi,DWORD PTR [edi]
  426b1c:	mov    al,0x1c
  426b1e:	push   edi
  426b1f:	lea    esp,[ecx]
  426b21:	je     0x426af7
  426b23:	push   es
  426b24:	je     0x426b22
  426b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b27:	fsub   DWORD PTR [ebx]
  426b29:	mov    al,BYTE PTR [edi-0x68]
  426b2c:	cmp    DWORD PTR [eax+0x3c6a7a0c],0x8f38ec01
  426b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b37:	adc    bl,BYTE PTR [ebp+0x45]
  426b3a:	dec    ebx
  426b3b:	int3   
  426b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b3d:	mov    DWORD PTR [edi-0x4baca291],0x32ec74eb
  426b47:	cmp    cl,bh
  426b49:	fcmove st,st(4)
  426b4b:	lods   eax,DWORD PTR ds:[esi]
  426b4c:	test   eax,0x3c0781
  426b51:	rol    DWORD PTR [esi+0x331d8c83],1
  426b57:	inc    eax
  426b58:	xchg   ebx,eax
  426b59:	jl     0x426bb1
  426b5b:	push   edi
  426b5c:	jbe    0x426ae5
  426b5e:	jno    0x426bdb
  426b60:	pop    ebx
  426b61:	pushf  
  426b62:	jb     0x426b4f
  426b64:	xor    BYTE PTR [ebp+ebx*4-0x6b],0x42
  426b69:	jne    0x426aee
  426b6b:	pop    ecx
  426b6c:	dec    eax
  426b6d:	mov    bl,0xb8
  426b6f:	(bad)  
  426b71:	push   0x49
  426b73:	mov    edx,DWORD PTR [ecx+eiz*4-0x72]
  426b77:	lds    eax,FWORD PTR [ecx+esi*4+0x338e5684]
  426b7e:	add    al,0x2d
  426b80:	out    0x1b,eax
  426b82:	rcr    dh,0x35
  426b85:	inc    esi
  426b86:	xor    eax,DWORD PTR [ebx]
  426b88:	inc    ebx
  426b89:	pop    eax
  426b8a:	int3   
  426b8b:	and    bh,BYTE PTR [edx-0x2f3f881d]
  426b91:	jae    0x426c0f
  426b93:	xchg   esp,eax
  426b94:	jmp    0xfc89:0xca6c9553
  426b9b:	jecxz  0x426b2c
  426b9d:	sub    cl,BYTE PTR [edx-0x5f]
  426ba0:	retf   
  426ba1:	push   edi
  426ba2:	add    eax,0xf58eab0b
  426ba7:	adc    eax,0xe17e61a2
  426bac:	fisttp WORD PTR [esp+eax*4+0x7b]
  426bb0:	mov    ah,0xa7
  426bb2:	nop
  426bb3:	jge    0x426b7a
  426bb5:	rcr    BYTE PTR [ecx+ebx*8+0x73b465bf],cl
  426bbc:	in     al,dx
  426bbd:	daa    
  426bbe:	add    eax,edi
  426bc0:	xchg   esp,eax
  426bc1:	jg     0x426b6d
  426bc3:	add    al,0x96
  426bc5:	imul   edx,DWORD PTR [eax+eax*4+0x56],0xa37021e5
  426bcd:	(bad)  
  426bce:	dec    ebp
  426bcf:	add    DWORD PTR [edi],ecx
  426bd1:	(bad)  
  426bd2:	sti    
  426bd3:	lahf   
  426bd4:	add    eax,0xde00a67a
  426bd9:	(bad)  
  426bda:	int    0x7f
  426bdc:	pop    ds
  426bdd:	(bad)  
  426bde:	xlat   BYTE PTR ds:[ebx]
  426bdf:	pushf  
  426be0:	pop    eax
  426be1:	jnp    0x426c5d
  426be3:	push   0x645b26bc
  426be8:	push   esp
  426be9:	inc    ecx
  426bea:	lds    eax,FWORD PTR [ecx+0x712b0219]
  426bf0:	inc    eax
  426bf1:	pop    es
  426bf2:	aaa    
  426bf3:	sbb    BYTE PTR [ecx+0x52],al
  426bf6:	push   eax
  426bf7:	arpl   dx,si
  426bf9:	mov    dl,0x50
  426bfb:	xor    BYTE PTR [edx],cl
  426bfd:	fldenv [ebx+0x6fbecd81]
  426c03:	mov    dl,BYTE PTR ds:0x3debd701
  426c09:	dec    edi
  426c0a:	mov    ah,0xb9
  426c0c:	enter  0xfe64,0x78
  426c10:	mov    gs,WORD PTR [ecx-0x68]
  426c13:	or     al,0x1
  426c15:	sbb    DWORD PTR [esp+ecx*1],ebp
  426c18:	mov    ecx,DWORD PTR [esi]
  426c1a:	inc    esi
  426c1b:	dec    ecx
  426c1c:	sub    al,0x2f
  426c1e:	cmc    
  426c1f:	out    dx,eax
  426c20:	int3   
  426c21:	out    dx,al
  426c22:	push   ebp
  426c23:	push   es
  426c24:	das    
  426c25:	add    edi,DWORD PTR [eax+0x607428cd]
  426c2b:	pusha  
  426c2c:	rol    BYTE PTR [ecx],1
  426c2e:	sbb    BYTE PTR [ecx],ah
  426c30:	mov    bl,0x6
  426c32:	jmp    0x4d6e:0xca597d60
  426c39:	setl   BYTE PTR ds:0x7e06379f
  426c40:	inc    edx
  426c41:	push   esp
  426c42:	mov    ebx,0xa0d01298
  426c47:	cs pop edi
  426c49:	test   eax,0xbc2dcdbc
  426c4e:	hlt    
  426c4f:	int    0xc6
  426c51:	nop
  426c52:	mov    dh,0x1
  426c54:	mov    dl,0xd7
  426c56:	mov    ch,0x84
  426c58:	push   ecx
  426c59:	inc    esi
  426c5a:	sahf   
  426c5b:	pop    edx
  426c5c:	xor    ebx,ecx
  426c5e:	inc    eax
  426c5f:	adc    dl,dh
  426c61:	mov    esp,0x34875a8e
  426c66:	xor    eax,0xa1b28e7d
  426c6b:	pop    ebx
  426c6c:	jne    0x426c93
  426c6e:	sbb    DWORD PTR [ebp+eiz*2-0x10],ecx
  426c72:	dec    edx
  426c73:	imul   eax,esi,0x294d1384
  426c79:	xor    eax,0xc626233
  426c7e:	loope  0x426cc3
  426c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c81:	xchg   edx,eax
  426c82:	stos   DWORD PTR es:[edi],eax
  426c83:	add    edx,DWORD PTR [ebx+edi*1+0x4417cbdc]
  426c8a:	cwde   
  426c8b:	mov    bh,0xa1
  426c8d:	gs dec ebx
  426c8f:	fstp   st(2)
  426c91:	sub    dl,0xc9
  426c94:	test   BYTE PTR [ebx],al
  426c96:	not    DWORD PTR [ebp-0x50f8bc41]
  426c9c:	retf   
  426c9d:	adc    eax,0x62eb98e3
  426ca2:	push   0x98dc4b64
  426ca7:	mov    ebx,0x71035b98
  426cac:	sub    BYTE PTR [ebx+0x1191a372],0x87
  426cb3:	pop    ebx
  426cb4:	pop    esi
  426cb5:	sub    BYTE PTR [edi+0x7dff07b3],0x22
  426cbc:	inc    esi
  426cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cbe:	add    edi,DWORD PTR [ebp-0x42e99f67]
  426cc4:	pop    esp
  426cc5:	daa    
  426cc6:	pop    edx
  426cc7:	pop    es
  426cc8:	dec    ecx
  426cc9:	adc    al,0x64
  426ccb:	cmp    eax,0x850071
  426cd0:	cmp    edx,esp
  426cd2:	es push ebx
  426cd4:	pop    edi
  426cd5:	aaa    
  426cd6:	sbb    edi,DWORD PTR [edi+0x34597a63]
  426cdc:	rcr    DWORD PTR [esi-0x6c],0x4a
  426ce0:	mov    esp,cs
  426ce2:	mov    esp,0xac4f125e
  426ce7:	dec    ebx
  426ce8:	fldenv [esp+ebx*1]
  426ceb:	xchg   edi,eax
  426cec:	sub    eax,0x5e172b1c
  426cf1:	adc    al,0xd9
  426cf3:	mov    ebp,0x459e24c8
  426cf8:	mov    bh,0x99
  426cfa:	add    BYTE PTR [eax],al
  426cfc:	push   0x6f1e2d23
  426d01:	push   ds
  426d02:	jnp    0x426d7b
  426d04:	fisub  WORD PTR [ebp-0x7ec34fca]
  426d0a:	mov    WORD PTR [ecx],es
  426d0c:	xor    ch,ah
  426d0e:	add    DWORD PTR [eax],eax
  426d10:	xchg   BYTE PTR [edx],al
  426d12:	add    BYTE PTR [eax],al
  426d14:	ss adc eax,0x36b59f68
  426d1a:	out    0xe1,al
  426d1c:	in     eax,dx
  426d1d:	adc    eax,0xb7a4b8d7
  426d22:	xor    BYTE PTR [edx],0x51
  426d25:	(bad)  
  426d26:	pop    ecx
  426d27:	dec    edi
  426d28:	es jo  0x426d4d
  426d2b:	rcr    DWORD PTR [edi-0x6b],1
  426d2e:	push   ecx
  426d2f:	jbe    0x426ceb
  426d31:	sbb    BYTE PTR [esi+ebp*4+0x0],ah
  426d35:	adc    ecx,DWORD PTR [ebx-0x22]
  426d38:	scas   eax,DWORD PTR es:[edi]
  426d39:	sti    
  426d3a:	cmc    
  426d3b:	leave  
  426d3c:	xchg   esi,eax
  426d3d:	push   ebx
  426d3e:	add    ecx,ebx
  426d40:	data16 sti 
  426d42:	cmp    DWORD PTR [ecx-0x3b],ebp
  426d45:	dec    edi
  426d46:	sub    DWORD PTR [ebx],0x9bbb1316
  426d4c:	adc    DWORD PTR [edx],eax
  426d4e:	push   ebx
  426d4f:	xchg   BYTE PTR [edi+0xad5928d],cl
  426d55:	cmp    al,0xd
  426d57:	mov    WORD PTR [edx+0x5d],?
  426d5a:	cmc    
  426d5b:	mov    al,ds:0x503152d9
  426d60:	jne    0x426daa
  426d62:	sub    ebp,DWORD PTR [esi+0x56]
  426d65:	gs push ebp
  426d67:	lock xchg DWORD PTR [ecx],ecx
  426d6a:	cmp    eax,0x4e05c5b6
  426d6f:	out    dx,eax
  426d70:	aas    
  426d71:	rol    BYTE PTR [ecx-0x23],0x68
  426d75:	retf   0x287
  426d78:	lea    edx,[edi+0x2e0bd61]
  426d7e:	pop    ds
  426d7f:	retf   0x1ce0
  426d82:	test   eax,0x6147d16f
  426d87:	call   0x32cc72d1
  426d8c:	inc    ecx
  426d8d:	outs   dx,BYTE PTR ds:[esi]
  426d8e:	mov    DWORD PTR [ecx+0xd],edi
  426d91:	mov    ecx,0x5a35ce03
  426d96:	gs (bad) 
  426d98:	lods   al,BYTE PTR ds:[esi]
  426d99:	sbb    eax,DWORD PTR [eax+eiz*2-0x27fe2c29]
  426da0:	shl    BYTE PTR [edx-0x46],0x30
  426da4:	in     eax,0xda
  426da6:	(bad)  
  426da7:	cmp    DWORD PTR [eax+0x2f],edx
  426daa:	or     ebp,ebx
  426dac:	not    DWORD PTR ds:0x1f140d35
  426db2:	add    BYTE PTR [edx+0x73],al
  426db5:	gs xor al,0xf7
  426db8:	and    al,0x19
  426dba:	xlat   BYTE PTR ds:[ebx]
  426dbb:	cmp    bl,BYTE PTR [esi-0x4d20587a]
  426dc1:	retf   
  426dc2:	js     0x426d53
  426dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dc5:	test   DWORD PTR [ecx+0x5f5c099d],ebp
  426dcb:	cmp    DWORD PTR [esi+0x311b60c7],0x54
  426dd2:	ins    BYTE PTR es:[edi],dx
  426dd3:	add    bl,ah
  426dd5:	std    
  426dd6:	xchg   ah,cl
  426dd8:	cwde   
  426dd9:	add    BYTE PTR [ebx],dl
  426ddb:	cs xor al,0xd7
  426dde:	mov    ebp,0xac17cf78
  426de3:	xchg   esi,eax
  426de4:	rcl    DWORD PTR [edx-0x79],cl
  426de7:	xlat   BYTE PTR ds:[ebx]
  426de8:	in     al,dx
  426de9:	mov    es:0xf4c35585,eax
  426def:	mov    WORD PTR [edx+0x71],?
  426df2:	ins    DWORD PTR es:[edi],dx
  426df3:	add    eax,0x9782609e
  426df8:	push   edx
  426df9:	in     al,0xb2
  426dfb:	jmp    0xdf1a1411
  426e00:	mov    edi,?
  426e02:	pop    ebx
  426e03:	add    ebp,esp
  426e05:	inc    ebp
  426e06:	xor    cl,ah
  426e08:	loope  0x426df4
  426e0a:	xor    bh,BYTE PTR [edi+0xb84edcf]
  426e10:	add    esi,DWORD PTR [ecx]
  426e12:	xor    BYTE PTR [ecx-0x7b],ch
  426e15:	and    ebx,DWORD PTR [ebx+ebx*2]
  426e18:	into   
  426e19:	(bad)  
  426e1b:	jle    0x426e34
  426e1d:	sbb    edi,ecx
  426e1f:	add    al,bh
  426e21:	cmp    ah,BYTE PTR [edx+0x100fad00]
  426e27:	icebp  
  426e28:	push   ds
  426e29:	push   ds
  426e2a:	jo     0x426e65
  426e2c:	xchg   esp,eax
  426e2d:	adc    al,0x6a
  426e2f:	js     0x426e14
  426e31:	int3   
  426e32:	outs   dx,BYTE PTR ds:[esi]
  426e33:	aas    
  426e34:	sahf   
  426e35:	test   BYTE PTR [ecx],ah
  426e37:	pop    ebp
  426e38:	gs cmp al,0xc9
  426e3b:	fs mov esi,0x568cfbde
  426e41:	push   ebx
  426e42:	mov    dh,0x1f
  426e44:	and    DWORD PTR [ecx-0x3c],ebx
  426e47:	inc    ebp
  426e48:	test   DWORD PTR [esi],edi
  426e4a:	or     eax,0xc8b49697
  426e4f:	dec    edi
  426e50:	das    
  426e51:	mov    al,0x96
  426e53:	jmp    FWORD PTR [ecx]
  426e55:	je     0x426e46
  426e57:	out    0xc0,al
  426e59:	xchg   edi,eax
  426e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e5b:	ror    BYTE PTR [esi],cl
  426e5d:	icebp  
  426e5e:	aas    
  426e5f:	or     ebx,ebp
  426e61:	sbb    eax,0x79713dcc
  426e66:	iret   
  426e67:	pop    ecx
  426e68:	pop    eax
  426e69:	(bad)  
  426e6a:	(bad)  
  426e6b:	mov    bl,0x86
  426e6d:	bound  ecx,QWORD PTR [esi+0x17]
  426e70:	call   0xa986:0xc8ebc06a
  426e77:	push   edi
  426e78:	sub    al,0x5e
  426e7a:	fxch   st(0)
  426e7c:	shr    DWORD PTR [edi],0x71
  426e7f:	(bad)  
  426e80:	sti    
  426e81:	data16 jle 0x426e93
  426e84:	mov    dl,0x93
  426e86:	ds aas 
  426e88:	aam    0x89
  426e8a:	ins    DWORD PTR es:[edi],dx
  426e8b:	push   esp
  426e8c:	pop    DWORD PTR [eax]
  426e8e:	or     al,bh
  426e90:	sahf   
  426e91:	ins    DWORD PTR es:[edi],dx
  426e92:	add    DWORD PTR [edi],edx
  426e94:	add    dh,BYTE PTR [edx+0x42e7e049]
  426e9a:	mov    ah,0x47
  426e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e9d:	adc    BYTE PTR [ebp+edi*1+0x5b149172],0x77
  426ea5:	out    dx,al
  426ea6:	jo     0x426ebf
  426ea8:	jno    0x426eca
  426eaa:	clc    
  426eab:	test   eax,0x15130325
  426eb0:	mov    ah,0x89
  426eb2:	and    al,0x58
  426eb4:	push   esi
  426eb5:	(bad)  
  426eb6:	sub    bl,BYTE PTR [ebp+0x1e]
  426eb9:	mul    DWORD PTR [eax]
  426ebb:	dec    edx
  426ebc:	sub    BYTE PTR [edi-0x27],dl
  426ebf:	mov    ecx,0xdf4cc52f
  426ec4:	jecxz  0x426eee
  426ec6:	shl    DWORD PTR [ebp+0x5],0x54
  426eca:	pop    ss
  426ecb:	mov    ds:0x53434007,eax
  426ed0:	sub    eax,eax
  426ed2:	in     al,0xfe
  426ed4:	add    eax,0x821ff0c2
  426ed9:	mov    ch,0xc4
  426edb:	shl    DWORD PTR ds:0xc43381cf,0xaf
  426ee2:	pop    esi
  426ee3:	jmp    0xe1f3:0xb6cae76e
  426eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eeb:	in     eax,dx
  426eec:	lds    ecx,FWORD PTR [ecx+0x4c]
  426eef:	cmp    al,0xfe
  426ef1:	icebp  
  426ef2:	popa   
  426ef3:	xor    cl,BYTE PTR [edx+0xe]
  426ef6:	sbb    ch,ah
  426ef8:	pushf  
  426ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426efa:	(bad)  
  426efb:	mov    ch,0x50
  426efd:	loope  0x426ede
  426eff:	mov    edi,0xf717d21
  426f04:	dec    ebp
  426f05:	mov    esp,0xa2c293e1
  426f0a:	gs test eax,0x6684291e
  426f10:	fisttp DWORD PTR [edx+0x44]
  426f13:	mov    cl,bl
  426f15:	out    0x12,al
  426f17:	xlat   BYTE PTR ds:[ebx]
  426f18:	sbb    DWORD PTR [ecx+0xbfd8cf6],edi
  426f1e:	jno    0x426ee2
  426f20:	int    0x30
  426f22:	(bad)  
  426f23:	popf   
  426f24:	sub    eax,0xff3f6a87
  426f29:	xchg   ecx,eax
  426f2a:	icebp  
  426f2b:	add    BYTE PTR [edi],dh
  426f2d:	or     al,0x40
  426f30:	and    ch,BYTE PTR [edx]
  426f32:	cdq    
  426f33:	and    ch,BYTE PTR [edx-0x76c370a4]
  426f39:	fcompp 
  426f3b:	pushf  
  426f3c:	adc    DWORD PTR [ebx+0xb],0xffffff9d
  426f40:	mov    WORD PTR [edx+eiz*2+0x533f3db7],cs
  426f47:	inc    esp
  426f48:	inc    esp
  426f49:	pop    eax
  426f4a:	xlat   BYTE PTR ds:[ebx]
  426f4b:	in     eax,dx
  426f4c:	js     0x426ee0
  426f4e:	loop   0x426f7a
  426f50:	jbe    0x426f78
  426f52:	ins    BYTE PTR es:[edi],dx
  426f53:	inc    ebx
  426f54:	out    dx,eax
  426f55:	pop    ss
  426f56:	aaa    
  426f57:	add    BYTE PTR [esi+0x52],ah
  426f5a:	packssdw mm6,QWORD PTR [ecx-0x23]
  426f5e:	in     al,0x4
  426f60:	pop    eax
  426f61:	push   ss
  426f62:	pop    ebx
  426f63:	das    
  426f64:	push   0x9b45181d
  426f69:	mov    eax,ds:0x46ca2af
  426f6e:	std    
  426f6f:	dec    eax
  426f70:	dec    BYTE PTR [edi-0x17cd437c]
  426f76:	inc    edx
  426f77:	shl    DWORD PTR [ebx-0x38252a72],cl
  426f7d:	mov    ah,BYTE PTR ds:[ecx+0x35]
  426f81:	fwait
  426f82:	jmp    0x3ec1:0x89694116
  426f89:	inc    ecx
  426f8a:	xor    BYTE PTR [ebp-0x8],bh
  426f8d:	jp     0x426f21
  426f8f:	xchg   edi,eax
  426f90:	in     al,0x23
  426f92:	aas    
  426f93:	fwait
  426f94:	and    esi,DWORD PTR [edi]
  426f96:	mov    edx,0xbea290
  426f9b:	add    BYTE PTR [ecx-0x6600738],bl
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	shr    esp,cl
  426faa:	or     DWORD PTR [edi+0x1e7b6],eax
  426fb0:	xchg   BYTE PTR [edx],al
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	ds xchg esp,eax
  426fb6:	ins    DWORD PTR es:[edi],dx
  426fb7:	push   ebp
  426fb8:	inc    esp
  426fb9:	cmp    ch,ch
  426fbb:	xlat   BYTE PTR ds:[ebx]
  426fbc:	pop    ebx
  426fbd:	rol    BYTE PTR [esi+0x3773ca6b],1
  426fc3:	xchg   esp,eax
  426fc4:	fldcw  WORD PTR [ecx+0x6d]
  426fc7:	sti    
  426fc8:	outs   dx,BYTE PTR ds:[esi]
  426fc9:	push   ebp
  426fca:	jbe    0x426f7d
  426fcc:	sub    DWORD PTR [ecx+0x4f],esi
  426fcf:	mov    ah,0x55
  426fd1:	or     DWORD PTR [ecx-0x38cf7a6a],esi
  426fd7:	dec    esp
  426fd8:	add    edx,DWORD PTR fs:0x2499d10d
  426fdf:	call   0xef443a37
  426fe4:	add    DWORD PTR [edi],ebp
  426fe6:	ins    BYTE PTR es:[edi],dx
  426fe7:	and    BYTE PTR [ebx],ah
  426fe9:	adc    BYTE PTR [ebx+0x8cca116],cl
  426fef:	jp     0x427026
  426ff1:	shl    bl,cl
  426ff3:	inc    edi
  426ff4:	or     ebp,eax
  426ff6:	ds jo  0x426ff4
  426ff9:	push   edx
  426ffa:	les    eax,FWORD PTR [edi]
  426ffc:	aaa    
  426ffd:	add    eax,0x301cb6eb
  427002:	cmp    esi,DWORD PTR [eax-0x6606ba02]
  427008:	daa    
  427009:	or     al,ch
  42700b:	push   ss
  42700c:	jno    0x426fda
  42700e:	push   ds
  42700f:	xor    bh,BYTE PTR [edx+0x5b]
  427012:	jo     0x427024
  427014:	jle    0x42700e
  427016:	scas   al,BYTE PTR es:[edi]
  427017:	adc    dl,bl
  427019:	push   cs
  42701a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42701b:	gs int3 
  42701d:	mov    WORD PTR [edi+0x1aa781a2],?
  427023:	adc    ebx,edx
  427025:	pop    ss
  427026:	ja     0x42702a
  427028:	pop    esp
  427029:	cmp    esp,DWORD PTR [ecx+0x28]
  42702c:	outs   dx,DWORD PTR ds:[esi]
  42702d:	dec    edi
  42702e:	mov    BYTE PTR [esi+0x28],al
  427031:	sub    dl,bl
  427033:	sub    al,0xfd
  427035:	mov    ds:0x2eb20f51,eax
  42703a:	xlat   BYTE PTR ds:[ebx]
  42703b:	in     eax,dx
  42703c:	aam    0x80
  42703e:	push   ss
  42703f:	mov    esi,0xf19aaf69
  427044:	push   esp
  427045:	mov    ch,BYTE PTR [ebp+0x42]
  427048:	xor    DWORD PTR [edx],ebp
  42704a:	jp     0x4270bf
  42704c:	pop    ds
  42704d:	sti    
  42704e:	pop    ecx
  42704f:	gs mov dl,bh
  427052:	sbb    BYTE PTR [eax-0x9],bh
  427055:	mov    dl,0xd6
  427057:	xor    bl,BYTE PTR [ebx]
  427059:	in     al,0xb7
  42705b:	add    eax,0x70c2d3f4
  427060:	hlt    
  427061:	push   ss
  427062:	ins    DWORD PTR es:[edi],dx
  427063:	push   eax
  427064:	mov    al,0x65
  427066:	xchg   esi,eax
  427067:	add    DWORD PTR [ebp+0x5ebdc091],edi
  42706d:	inc    esi
  42706e:	add    eax,ecx
  427070:	int    0xa2
  427072:	imul   esp,DWORD PTR [ebx+0x5c],0x29
  427076:	jmp    0x8ae05ee1
  42707b:	stos   DWORD PTR es:[edi],eax
  42707c:	sbb    esp,ebp
  42707e:	jo     0x42703a
  427080:	rol    DWORD PTR [ebx+esi*8-0xe],cl
  427084:	hlt    
  427085:	jge    0x427067
  427087:	xor    al,0x8c
  427089:	cmp    edi,DWORD PTR [edi+0x3c]
  42708c:	gs jno 0x42708e
  42708f:	pop    ebx
  427090:	adc    DWORD PTR [ecx],edx
  427092:	jnp    0x427085
  427094:	jne    0x4270c6
  427096:	adc    DWORD PTR [eax+0x56],eax
  427099:	(bad)  
  42709a:	(bad)  
  42709b:	fbld   TBYTE PTR [edx-0x10dab28c]
  4270a1:	jb     0x4270c5
  4270a3:	gs (bad) 
  4270a5:	mov    esp,0xddc95ca8
  4270aa:	fadd   st(7),st
  4270ac:	push   0x30
  4270ae:	push   0xffffff83
  4270b0:	cmp    eax,0x860fb47e
  4270b5:	mov    WORD PTR [ecx],?
  4270b7:	test   DWORD PTR [ebx-0x7d],edx
  4270ba:	jmp    0x427135
  4270bc:	jge    0x427045
  4270be:	pop    ebp
  4270bf:	nop
  4270c0:	pop    ecx
  4270c1:	shr    DWORD PTR ds:0x8ad3f1e1,1
  4270c7:	dec    edi
  4270c8:	fbld   TBYTE PTR [ebp+0x499fdff4]
  4270ce:	shl    al,0x69
  4270d1:	or     eax,0xc37ab728
  4270d6:	xor    al,0xce
  4270d8:	sbb    DWORD PTR [edx+0x3e],esp
  4270db:	sbb    dh,BYTE PTR [ebp+0x1e]
  4270de:	neg    BYTE PTR [ebx]
  4270e0:	xor    cl,BYTE PTR [ebp-0x3e]
  4270e3:	mov    BYTE PTR [edx+0x5f9c4739],bh
  4270e9:	icebp  
  4270ea:	ret    
  4270eb:	in     al,dx
  4270ec:	pop    edi
  4270ed:	adc    BYTE PTR [ebx-0x1a],bl
  4270f0:	push   eax
  4270f1:	aam    0x91
  4270f3:	mov    WORD PTR [edx+0x3d],ds
  4270f6:	loop   0x427149
  4270f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270f9:	push   es
  4270fa:	inc    BYTE PTR [ebp-0x74]
  4270fd:	cwde   
  4270fe:	and    al,0x14
  427100:	sub    al,0xd4
  427102:	or     al,0x22
  427104:	sahf   
  427105:	mov    edi,0xbf1d115
  42710a:	add    DWORD PTR [ecx-0x1ee05a09],ebx
  427110:	les    ebx,FWORD PTR [ebp+0x3d]
  427113:	or     DWORD PTR [ecx+0x60],ecx
  427116:	mov    al,ds:0x28db868a
  42711b:	or     BYTE PTR [esi+0x250d3267],bl
  427121:	retf   
  427122:	or     esi,DWORD PTR [ebp-0x72dc951b]
  427128:	pop    ss
  427129:	pop    esp
  42712a:	fld    st(1)
  42712c:	ja     0x42717f
  42712e:	(bad)  
  42712f:	pop    esi
  427130:	mov    eax,0xd119f038
  427135:	pop    ecx
  427136:	mov    esi,0x485b3916
  42713b:	cmp    eax,0x8f5f733f
  427140:	icebp  
  427141:	lods   al,BYTE PTR ds:[esi]
  427142:	push   ds
  427143:	push   ds
  427144:	pop    esi
  427145:	lock dec esi
  427147:	(bad)  [edi]
  427149:	mov    bl,0xe1
  42714b:	pop    es
  42714c:	dec    ecx
  42714d:	int3   
  42714e:	mov    ebp,0x2b3339ac
  427153:	dec    esi
  427154:	sub    BYTE PTR [edx+esi*2+0x17],al
  427158:	cwde   
  427159:	nop
  42715a:	cmp    bh,BYTE PTR [edx]
  42715c:	fsubr  QWORD PTR [esi]
  42715e:	aaa    
  42715f:	mov    edx,0x30aed204
  427164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427165:	mov    edx,ecx
  427167:	sbb    ebp,DWORD PTR [esp+eax*4]
  42716a:	xlat   BYTE PTR ds:[ebx]
  42716b:	clc    
  42716c:	in     al,dx
  42716d:	popf   
  42716e:	dec    ebx
  42716f:	test   DWORD PTR [ebp-0x2f],ecx
  427172:	ins    BYTE PTR es:[edi],dx
  427173:	out    dx,al
  427174:	or     ch,BYTE PTR [esi+0x28]
  427177:	push   eax
  427178:	test   edi,ebx
  42717a:	push   0x10
  42717c:	aad    0x12
  42717e:	xchg   ebp,eax
  42717f:	sbb    eax,0x37cf052
  427184:	fsub   DWORD PTR [edx-0x27]
  427187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427188:	mov    bh,0xb5
  42718a:	dec    esp
  42718b:	popf   
  42718c:	or     eax,DWORD PTR [ebx-0x60]
  42718f:	in     eax,dx
  427190:	xor    DWORD PTR [ebx],edi
  427192:	neg    DWORD PTR [eax-0x73]
  427195:	repnz retf 
  427197:	rcl    BYTE PTR [esi-0x40124740],0x84
  42719e:	stos   BYTE PTR es:[edi],al
  42719f:	adc    esi,DWORD PTR [eax]
  4271a1:	jle    0x42712d
  4271a3:	out    dx,al
  4271a4:	ins    DWORD PTR es:[edi],dx
  4271a5:	sbb    cl,ch
  4271a7:	dec    esp
  4271a8:	sbb    al,0xb0
  4271aa:	out    0xe6,al
  4271ac:	dec    ebx
  4271ad:	addr16 add esp,edx
  4271b0:	cmp    al,0x53
  4271b2:	sub    esi,DWORD PTR [edi+0x27]
  4271b5:	jno    0x427143
  4271b7:	add    cl,al
  4271b9:	mov    edi,0xb5fac4f5
  4271be:	sub    edi,DWORD PTR [esi]
  4271c0:	popf   
  4271c1:	enter  0x8ec7,0x8e
  4271c5:	ss xor eax,0x83f81827
  4271cb:	ret    0xa2d1
  4271ce:	daa    
  4271cf:	fist   DWORD PTR [eax*8-0x4f29aec]
  4271d6:	add    al,BYTE PTR [edx]
  4271d8:	mov    esp,0x6d4744da
  4271dd:	sub    BYTE PTR [eax-0x44],bl
  4271e0:	out    0x11,eax
  4271e2:	loope  0x42717e
  4271e4:	xchg   edx,eax
  4271e5:	shr    DWORD PTR [esi],0x97
  4271e8:	mov    esp,0x8b053a0
  4271ed:	sub    BYTE PTR [edi-0x60b8e702],ch
  4271f3:	inc    edi
  4271f4:	xchg   edi,eax
  4271f5:	cmp    bh,BYTE PTR [esi-0x56]
  4271f8:	lahf   
  4271f9:	mov    ah,0xd8
  4271fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271fc:	pusha  
  4271fd:	clc    
  4271fe:	and    DWORD PTR [eax-0x30],edi
  427201:	clc    
  427202:	test   BYTE PTR [edi-0x36328abb],ch
  427208:	dec    esp
  427209:	mov    DWORD PTR [edi-0x28],esp
  42720c:	ds ds aaa 
  42720f:	test   DWORD PTR [ebp-0x3bf73449],esi
  427215:	int3   
  427216:	jae    0x4271e7
  427218:	inc    edx
  427219:	sub    edx,DWORD PTR [esi+0x2e]
  42721c:	jae    0x4271c3
  42721e:	out    dx,eax
  42721f:	in     eax,dx
  427220:	sbb    esi,DWORD PTR [esi]
  427222:	pop    edi
  427223:	jno    0x427221
  427225:	add    al,0x2
  427227:	in     al,0xfd
  427229:	cmp    eax,0x3455f2d2
  42722e:	nop
  42722f:	aad    0x4e
  427231:	pop    ss
  427232:	cwde   
  427233:	repnz mov WORD PTR [ebx],ss
  427236:	lock scas eax,DWORD PTR es:[edi]
  427238:	mov    DWORD PTR [edx+0xa790000],ecx
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	cmp    DWORD PTR [ecx+0x4],0x1ea3c04
  42724f:	add    BYTE PTR [esi+0xd000002],al
  427255:	pushf  
  427256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427257:	jnp    0x4271e4
  427259:	mov    ecx,0xfb33eeef
  42725e:	(bad)  
  42725f:	jns    0x427298
  427261:	add    DWORD PTR [ebx+edx*8-0x54],ebx
  427265:	outs   dx,DWORD PTR ds:[esi]
  427266:	adc    al,ah
  427268:	repz out 0x2c,eax
  42726b:	pusha  
  42726c:	xchg   ebp,eax
  42726d:	jmp    0x427289
  42726f:	(bad)  
  427270:	push   ebp
  427271:	xchg   esi,eax
  427272:	mov    ds:0x56d1b8b8,al
  427277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427278:	or     al,0xe9
  42727a:	std    
  42727b:	mov    bl,0xeb
  42727d:	jle    0x427276
  42727f:	(bad)  
  427280:	sbb    ebx,DWORD PTR [ecx+eiz*2-0x47d2e666]
  427287:	psubsw mm2,QWORD PTR [edi+0x2590be82]
  42728e:	test   BYTE PTR [ebx-0xe],bl
  427291:	xchg   edi,eax
  427292:	pop    ss
  427293:	lds    ecx,FWORD PTR [ebx+0x2cb394b6]
  427299:	jbe    0x4272b4
  42729b:	push   ds
  42729c:	loope  0x42726e
  42729e:	out    dx,al
  42729f:	push   ds
  4272a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272a1:	jecxz  0x4272db
  4272a3:	rcr    DWORD PTR [esi+0x248090af],0x22
  4272aa:	lea    ebp,[ebp+0x48]
  4272ad:	jo     0x42723f
  4272af:	adc    DWORD PTR [edi+0x4d],0x752a1a3c
  4272b6:	dec    edi
  4272b7:	add    BYTE PTR [eax+edx*2+0x1796ed63],bh
  4272be:	sbb    al,0x65
  4272c0:	push   ebx
  4272c1:	jmp    0x427281
  4272c3:	jns    0x4272ee
  4272c5:	push   ecx
  4272c6:	ficom  WORD PTR [ebp+ecx*4-0x27e1c383]
  4272cd:	add    al,0xdc
  4272cf:	jp     0x4272c9
  4272d1:	ins    DWORD PTR es:[edi],dx
  4272d2:	ins    BYTE PTR es:[edi],dx
  4272d3:	aam    0x78
  4272d5:	jmp    0x4272e8
  4272d7:	je     0x42727d
  4272d9:	fisttp DWORD PTR es:[ebp+edx*1+0x5b]
  4272de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272df:	fdiv   QWORD PTR [eax+0x4ae5cb7d]
  4272e5:	add    esp,DWORD PTR [ebp-0x53401540]
  4272eb:	fldenv [edx+0x34f78cb8]
  4272f1:	adc    al,0x2f
  4272f3:	fwait
  4272f4:	pusha  
  4272f5:	sub    bl,BYTE PTR [eax-0x36fbb182]
  4272fb:	sub    dh,BYTE PTR [eax-0x616def7c]
  427301:	cmp    DWORD PTR [ebx-0x43],0x959a3846
  427308:	push   ebx
  427309:	cli    
  42730a:	test   eax,0x57c5dbd2
  42730f:	daa    
  427310:	mov    edx,DWORD PTR [esi+0x6417b953]
  427316:	and    bh,BYTE PTR [ebp+0x78f2c659]
  42731c:	push   es
  42731d:	bound  eax,QWORD PTR [ebp-0x8]
  427320:	or     al,0x8e
  427322:	push   edx
  427323:	pop    esi
  427324:	pushf  
  427325:	ds mov ah,0x5f
  427328:	xor    BYTE PTR [edi+0x6],bl
  42732b:	shr    BYTE PTR [eax-0x80],cl
  42732e:	dec    eax
  42732f:	cmp    al,0xa8
  427331:	lea    edi,[ecx]
  427333:	cmp    eax,0x69acef6b
  427338:	cmc    
  427339:	loope  0x427328
  42733b:	std    
  42733c:	fsubr  st,st(2)
  42733e:	fisttp WORD PTR [ecx]
  427340:	nop
  427341:	add    al,0x9
  427343:	stos   DWORD PTR es:[edi],eax
  427344:	cmp    al,0x32
  427346:	dec    esp
  427347:	mov    bl,0xe1
  427349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42734a:	mov    bh,0xd4
  42734c:	push   ecx
  42734d:	call   0x61ca:0x4a5f015e
  427354:	(bad)  
  427355:	loop   0x4273ce
  427357:	fwait
  427358:	add    DWORD PTR [ebp-0x39],edi
  42735b:	jge    0x427371
  42735d:	pushf  
  42735e:	int3   
  42735f:	enter  0x4d90,0x7b
  427363:	jo     0x4273b9
  427365:	sbb    eax,0xbb391d2f
  42736a:	bound  ecx,QWORD PTR [esi-0x6220fb84]
  427370:	or     ebp,DWORD PTR [edx+0x55]
  427373:	loope  0x4273a9
  427375:	push   edx
  427376:	cli    
  427377:	cld    
  427378:	nop
  427379:	add    eax,0x5c4509d0
  42737e:	bnd jg 0x42739a
  427381:	cmp    DWORD PTR [eax],edi
  427383:	ja     0x427400
  427385:	out    0x6,eax
  427387:	shl    BYTE PTR [edi],0x64
  42738a:	ret    0x6c04
  42738d:	inc    esi
  42738e:	(bad)  
  42738f:	mov    edx,0x6575b0e6
  427394:	fisub  WORD PTR [edx]
  427396:	sub    al,0x64
  427398:	inc    ecx
  427399:	xor    eax,0xf2554d57
  42739e:	xor    eax,0x24dadf80
  4273a3:	mov    ebp,0xd6a4b20e
  4273a8:	cwde   
  4273a9:	jae    0x4273f0
  4273ab:	mov    ah,0x43
  4273ad:	sbb    eax,0xaea7a7cf
  4273b2:	mov    WORD PTR [ecx+ebx*2+0x6],fs
  4273b6:	push   ebx
  4273b7:	mov    eax,ds:0xc045615
  4273bc:	or     BYTE PTR [edi+ebp*8+0x6da0ee6c],ah
  4273c3:	jmp    0x427379
  4273c5:	out    0xa7,eax
  4273c7:	sbb    al,0x12
  4273c9:	adc    eax,DWORD PTR ds:0xbd56dfd4
  4273cf:	shr    BYTE PTR [esi],1
  4273d1:	dec    ebx
  4273d2:	sub    al,bl
  4273d4:	xchg   esp,eax
  4273d5:	outs   dx,BYTE PTR ds:[esi]
  4273d6:	aam    0xb
  4273d8:	sub    eax,0xd33b69e9
  4273dd:	push   ebp
  4273de:	aam    0x1c
  4273e0:	scas   al,BYTE PTR es:[edi]
  4273e1:	jle    0x427391
  4273e3:	mov    ecx,es
  4273e5:	rol    BYTE PTR [ebx-0x60092c76],0x47
  4273ec:	out    dx,eax
  4273ed:	pop    esi
  4273ee:	push   0x57eb5e96
  4273f3:	pusha  
  4273f4:	sahf   
  4273f5:	(bad)  
  4273f6:	jle    0x427390
  4273f8:	je     0x42742f
  4273fa:	int    0x70
  4273fc:	and    esi,DWORD PTR [edx+eax*2+0x3b]
  427400:	jne    0x427400
  427402:	inc    edi
  427403:	repz pop es
  427405:	leave  
  427406:	push   0x2d304d67
  42740b:	pop    ds
  42740c:	call   DWORD PTR [ebx]
  42740e:	dec    ebp
  42740f:	das    
  427410:	es jb  0x42745f
  427413:	jns    0x4273eb
  427415:	ror    DWORD PTR [ebp-0x39e7823c],0x7a
  42741c:	out    0xbb,al
  42741e:	jns    0x427437
  427420:	xchg   ecx,eax
  427421:	mov    eax,ds:0x12c27fb8
  427426:	or     edx,edi
  427428:	rol    DWORD PTR [ecx],0xfc
  42742b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42742d:	jb     0x4273e0
  42742f:	mov    ebp,fs
  427431:	and    ebx,ebx
  427433:	call   0xee3e:0xbe253e6
  42743a:	and    dl,BYTE PTR [esi]
  42743c:	repnz push 0xcc2ce41
  427442:	outs   dx,BYTE PTR ds:[esi]
  427443:	add    ch,BYTE PTR fs:[edx+ebp*2-0x39a4ec2]
  42744b:	cld    
  42744c:	lods   eax,DWORD PTR ds:[esi]
  42744d:	jle    0x427438
  42744f:	(bad)  
  427450:	sbb    bh,BYTE PTR [edi-0x55]
  427453:	lahf   
  427454:	xlat   BYTE PTR ds:[ebx]
  427455:	pop    ebp
  427456:	inc    eax
  427457:	ja     0x427489
  427459:	outs   dx,BYTE PTR ds:[esi]
  42745a:	add    ah,BYTE PTR [ebx-0xfa990e1]
  427460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427461:	pop    esi
  427462:	lods   eax,DWORD PTR ds:[esi]
  427463:	cwde   
  427464:	xlat   BYTE PTR ds:[ebx]
  427465:	test   eax,0x14e7a5c2
  42746a:	mov    ah,0xc5
  42746c:	mov    ds:0x38a8cd0a,al
  427471:	push   es
  427472:	dec    edx
  427473:	scas   eax,DWORD PTR es:[edi]
  427474:	jmp    0xd211:0x229d3db6
  42747b:	push   0x5cb291f2
  427480:	popf   
  427481:	xchg   esi,eax
  427482:	xchg   esp,eax
  427483:	mov    ds:0xe572fe59,al
  427488:	or     bh,al
  42748a:	mov    bl,0xed
  42748c:	je     0x427492
  42748e:	xchg   esi,eax
  42748f:	fs pop ebp
  427491:	mov    al,ds:0x450ffc2
  427496:	sbb    al,0xb7
  427498:	pop    eax
  427499:	mov    edx,0x629df293
  42749e:	dec    esi
  42749f:	popf   
  4274a0:	adc    ecx,DWORD PTR [ecx+0x7459e7ce]
  4274a6:	fmul   st(6),st
  4274a8:	and    eax,DWORD PTR [ecx-0x2ae3b21d]
  4274ae:	push   esp
  4274af:	mov    eax,ds:0x579ddfe9
  4274b4:	stos   BYTE PTR es:[edi],al
  4274b5:	push   edx
  4274b6:	sbb    ch,bl
  4274b8:	(bad)  [edx]
  4274ba:	mov    WORD PTR [edi],?
  4274bc:	adc    edi,esi
  4274be:	call   0xb395:0x887ab583
  4274c5:	aad    0xfb
  4274c7:	iret   
  4274c8:	std    
  4274c9:	lods   eax,DWORD PTR ds:[esi]
  4274ca:	add    DWORD PTR [edi-0x3b],ebx
  4274cd:	js     0x42750e
  4274cf:	or     eax,0x5efb7e38
  4274d4:	scas   eax,DWORD PTR es:[edi]
  4274d5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274d7:	push   ss
  4274d8:	lods   eax,DWORD PTR ds:[esi]
  4274d9:	mov    ah,0x0
  4274db:	add    BYTE PTR [ecx+0x3],bl
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi+0x4beb3eba]
  4274ea:	pusha  
  4274eb:	inc    edx
  4274ec:	ret    0x1ec
  4274ef:	add    BYTE PTR [esi+0x79000002],al
  4274f5:	shr    ebp,0xa3
  4274f8:	add    eax,0x6fd2c71f
  4274fd:	mov    ah,0x81
  4274ff:	bound  esi,QWORD PTR [ecx+esi*2-0x21]
  427503:	add    al,0x3f
  427505:	or     al,0x58
  427507:	inc    ebx
  427508:	ins    BYTE PTR es:[edi],dx
  427509:	pop    ds
  42750a:	popf   
  42750b:	ss jge 0x42758b
  42750e:	(bad)
  427512:	jae    0x427512
  427514:	out    0x29,eax
  427516:	arpl   cx,si
  427518:	xchg   ebp,ebp
  42751a:	lock sub BYTE PTR [esi-0x30df9068],cl
  427521:	in     eax,dx
  427522:	sbb    dh,0x1
  427525:	mov    al,0x42
  427527:	pop    ebp
  427528:	cdq    
  427529:	aam    0xcf
  42752b:	mov    bh,0xdf
  42752d:	sbb    ah,bh
  42752f:	mov    ss,WORD PTR [esi]
  427531:	push   eax
  427532:	icebp  
  427533:	or     ch,dh
  427535:	xchg   BYTE PTR [edi+0x19],ah
  427538:	rcr    BYTE PTR [edx+0x29],0x55
  42753c:	popf   
  42753d:	inc    ebx
  42753e:	push   edi
  42753f:	lods   al,BYTE PTR ds:[esi]
  427540:	and    BYTE PTR [edx+eax*8-0x354c24b2],0x32
  427548:	sbb    ecx,DWORD PTR [esi]
  42754a:	mov    eax,ds:0x77e5f318
  42754f:	sbb    DWORD PTR [edi-0x52d633e7],esi
  427555:	xchg   esi,eax
  427556:	xor    BYTE PTR [edx+esi*2-0x45],0x90
  42755b:	inc    ecx
  42755c:	call   0x6cbe2e30
  427561:	outs   dx,BYTE PTR ds:[esi]
  427562:	or     esi,ebx
  427564:	pop    edx
  427565:	mov    dh,0x1
  427567:	into   
  427568:	push   0x6f
  42756a:	jb     0x42756a
  42756c:	aas    
  42756d:	or     al,0xf0
  42756f:	les    edi,FWORD PTR [edi+0x35]
  427572:	sub    DWORD PTR [eax-0x74],esp
  427575:	mov    eax,ds:0x67acdb54
  42757a:	ins    BYTE PTR es:[edi],dx
  42757b:	mov    cl,0xb
  42757d:	dec    ebp
  42757e:	mov    ebp,0x10bec3e
  427583:	sub    eax,0x6efd8990
  427588:	into   
  427589:	add    esp,esp
  42758b:	or     BYTE PTR [ebx],dl
  42758d:	shr    BYTE PTR [ebp+0x3f],1
  427590:	xchg   edi,eax
  427591:	mov    eax,ds:0xde619651
  427596:	pop    eax
  427597:	and    dh,BYTE PTR ds:0x663b4e11
  42759d:	gs retf 0x4658
  4275a1:	jge    0x42754c
  4275a3:	mov    ds:0xebb24a2a,eax
  4275a8:	lods   al,BYTE PTR ds:[esi]
  4275a9:	popa   
  4275aa:	add    al,0x9b
  4275ac:	retf   
  4275ad:	vpaddusw ymm3,ymm3,YMMWORD PTR [ebp-0x3c]
  4275b2:	repnz push 0x75069c03
  4275b8:	dec    ecx
  4275b9:	call   0x52040bc7
  4275be:	xchg   ebp,eax
  4275bf:	cmp    ebx,0xffffff93
  4275c2:	stos   BYTE PTR es:[edi],al
  4275c3:	sub    DWORD PTR [esi+0x59],0x4c
  4275c7:	popa   
  4275c8:	cmp    ebx,esp
  4275ca:	gs scas eax,DWORD PTR es:[edi]
  4275cc:	dec    ecx
  4275cd:	push   ecx
  4275ce:	pop    esi
  4275cf:	repnz or esi,esp
  4275d2:	and    ecx,DWORD PTR [esi+ebx*1+0x182c7ec9]
  4275d9:	rcl    BYTE PTR [ebp+0x51],cl
  4275dc:	jmp    0xa703:0xc0737423
  4275e3:	stc    
  4275e4:	out    0xd2,al
  4275e6:	aas    
  4275e7:	shl    ebx,0xf9
  4275ea:	lods   eax,DWORD PTR ds:[esi]
  4275eb:	and    cl,bh
  4275ed:	add    ch,0xe3
  4275f0:	mov    edi,0x7ca8aa07
  4275f5:	xlat   BYTE PTR ds:[ebx]
  4275f6:	bound  edi,QWORD PTR [ebp-0x1]
  4275f9:	fcom   QWORD PTR [ebp-0x3]
  4275fc:	ins    DWORD PTR es:[edi],dx
  4275fd:	mov    ds:0xeb7df353,eax
  427602:	sti    
  427603:	out    dx,al
  427604:	leave  
  427605:	into   
  427606:	mov    ecx,0x5ad87e09
  42760b:	sahf   
  42760c:	pop    esi
  42760d:	shl    DWORD PTR [eax-0x56007fef],cl
  427613:	jmp    DWORD PTR [ebp+0x9]
  427616:	and    al,0x94
  427618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427619:	retf   
  42761a:	sbb    BYTE PTR [esp],ch
  42761d:	mov    bh,0x4
  42761f:	sub    eax,0xb07539e
  427624:	inc    eax
  427625:	ret    
  427626:	inc    esi
  427627:	xor    dh,BYTE PTR [ebx-0x2cceed60]
  42762d:	aam    0x19
  42762f:	leave  
  427630:	or     bh,0xcc
  427633:	xchg   esp,eax
  427634:	daa    
  427635:	bound  ecx,QWORD PTR [esi+0x22]
  427638:	fsubp  st(1),st
  42763a:	push   cs
  42763b:	mov    edx,0x606ddda6
  427640:	ds dec ecx
  427642:	int3   
  427643:	gs sub al,0x52
  427646:	in     al,0x5b
  427648:	lock sbb BYTE PTR [eax],cl
  42764b:	push   ebx
  42764c:	je     0x427667
  42764e:	xchg   ebx,eax
  42764f:	mov    BYTE PTR [edx-0x6c1ae499],bl
  427655:	push   ebp
  427656:	lds    edx,FWORD PTR [eax+edx*4-0xa]
  42765a:	inc    esi
  42765b:	mov    esi,0xc86788e1
  427660:	xor    bl,0x56
  427663:	and    eax,0xae091fd5
  427668:	jb     0x427649
  42766a:	stos   BYTE PTR es:[edi],al
  42766b:	mov    al,0xff
  42766d:	sahf   
  42766e:	sbb    BYTE PTR [edx],ah
  427670:	cld    
  427671:	outs   dx,BYTE PTR ds:[esi]
  427672:	or     BYTE PTR [eax],dh
  427674:	stc    
  427675:	dec    edx
  427676:	cmp    ah,BYTE PTR [edx-0x11]
  427679:	and    BYTE PTR [edi+ebx*4],ah
  42767c:	push   ecx
  42767d:	bound  ebx,QWORD PTR [esi]
  42767f:	xchg   ecx,eax
  427680:	sub    eax,0xb4b4aa16
  427685:	repnz mov dh,0x47
  427688:	(bad)  
  427689:	test   al,0xb3
  42768b:	push   ds
  42768c:	xor    ch,BYTE PTR [edi+0x57]
  42768f:	leave  
  427690:	pop    ecx
  427691:	mov    ch,0x9e
  427693:	les    edi,FWORD PTR [eax]
  427695:	fdiv   QWORD PTR [esp+ecx*2]
  427698:	jo     0x427697
  42769a:	sub    ch,BYTE PTR [ebx+0x67df0b8c]
  4276a0:	adc    eax,DWORD PTR [ebp-0xfd4f41a]
  4276a6:	pusha  
  4276a7:	sub    eax,0x9245b4c
  4276ac:	dec    esp
  4276ad:	int    0xdb
  4276af:	inc    eax
  4276b0:	out    0x24,al
  4276b2:	and    ebx,edx
  4276b4:	push   0xffffffdd
  4276b6:	cmp    bl,bh
  4276b8:	clc    
  4276b9:	hlt    
  4276ba:	jmp    0x427672
  4276bc:	cdq    
  4276bd:	les    ecx,FWORD PTR [ecx+0x5b]
  4276c0:	nop
  4276c1:	lds    esp,FWORD PTR [ecx+edi*8+0x7e813112]
  4276c8:	popf   
  4276c9:	pop    ss
  4276ca:	add    eax,0x84b76d70
  4276cf:	mov    dl,BYTE PTR [edx]
  4276d1:	cld    
  4276d2:	lea    esi,[edi]
  4276d4:	pop    ebp
  4276d5:	push   0xffffffa5
  4276d7:	inc    esp
  4276d8:	mov    ah,0x5f
  4276da:	push   edx
  4276db:	mov    eax,0xb8db1384
  4276e0:	(bad)
  4276e3:	dec    ebx
  4276e4:	or     DWORD PTR [edi],eax
  4276e6:	lods   eax,DWORD PTR ds:[esi]
  4276e7:	mov    al,0x50
  4276e9:	int3   
  4276ea:	or     eax,0xda1d449f
  4276ef:	loopne 0x42771b
  4276f1:	repz dec ebx
  4276f3:	ja     0x427739
  4276f5:	push   ebx
  4276f6:	das    
  4276f7:	pop    ecx
  4276f8:	fmulp  st(4),st
  4276fa:	mov    cl,0x4f
  4276fc:	ss push es
  4276fe:	adc    BYTE PTR [edi],0xf9
  427701:	das    
  427702:	push   edi
  427703:	mov    ecx,0xe772ed3f
  427708:	mov    esi,0xdd75be90
  42770d:	jbe    0x42773a
  42770f:	add    DWORD PTR [edi-0x1e3db2b8],ebx
  427715:	int3   
  427716:	inc    DWORD PTR [ebx-0x14]
  427719:	xchg   esp,eax
  42771a:	bound  ebx,QWORD PTR [ebp+eiz*8-0x7f]
  42771e:	xor    BYTE PTR [ecx+0x78],cl
  427721:	or     BYTE PTR ds:0x4d44b675,0xd2
  427728:	pop    ebp
  427729:	sbb    DWORD PTR [esi+0x47],0x9f1eb97d
  427730:	ins    DWORD PTR es:[edi],dx
  427731:	cs stos DWORD PTR es:[edi],eax
  427733:	psrld  mm4,QWORD PTR [edi+0x6f16375]
  42773a:	test   BYTE PTR [eax+0x635bb041],al
  427740:	jne    0x427753
  427742:	push   0x6f53d59f
  427747:	mov    cl,0x84
  427749:	pop    esp
  42774a:	add    BYTE PTR [edx+esi*1-0x27],bh
  42774e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774f:	popa   
  427750:	sbb    eax,0x35cfe983
  427755:	push   0xffffff85
  427757:	out    0x7c,eax
  427759:	mov    ebp,ebx
  42775b:	out    0x1,eax
  42775d:	xchg   BYTE PTR [esi+0x5f034a1a],ch
  427763:	dec    edi
  427764:	clc    
  427765:	add    ebx,DWORD PTR [esi+0x7fd0c9e2]
  42776b:	ins    BYTE PTR es:[edi],dx
  42776c:	jmp    0x427727
  42776e:	jg     0x42771e
  427770:	sub    edx,DWORD PTR [ecx]
  427772:	out    0x7,eax
  427774:	push   eax
  427775:	ss jo  0x427776
  427778:	cmp    eax,0x1b000046
  42777d:	daa    
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	aad    0x51
  42778a:	test   BYTE PTR [ecx+0x1ef48],cl
  427790:	xchg   BYTE PTR [edx],al
  427792:	add    BYTE PTR [eax],al
  427794:	mov    ebp,0x57edfaa8
  427799:	push   cs
  42779a:	ficomp WORD PTR [eax-0x1e]
  42779d:	daa    
  42779e:	mov    WORD PTR [ecx],ss
  4277a0:	stc    
  4277a1:	dec    esp
  4277a2:	inc    edx
  4277a3:	(bad)  
  4277a4:	sar    BYTE PTR [ebp-0x8],1
  4277a7:	mov    cl,0x4f
  4277a9:	pop    edx
  4277aa:	push   ecx
  4277ab:	rol    BYTE PTR [esi+esi*8-0x40],1
  4277af:	cmp    bl,BYTE PTR [ebp+0x56]
  4277b2:	int    0x66
  4277b4:	stos   BYTE PTR es:[edi],al
  4277b5:	or     al,0x68
  4277b7:	mov    bl,0x7b
  4277b9:	mov    ds:0x2ee00fe3,al
  4277be:	pop    edi
  4277bf:	jle    0x427819
  4277c1:	mov    al,BYTE PTR [edi]
  4277c3:	jbe    0x4277f1
  4277c5:	xchg   esi,eax
  4277c6:	cli    
  4277c7:	sahf   
  4277c8:	xchg   ebx,eax
  4277c9:	daa    
  4277ca:	call   0x4498f32f
  4277cf:	imul   ebx,DWORD PTR [ecx+0x9171521],0x5c
  4277d6:	jb     0x4277dd
  4277d8:	mov    dh,0x24
  4277da:	sub    eax,0xfe6d04ed
  4277df:	iret   
  4277e0:	mov    al,0x6
  4277e2:	sahf   
  4277e3:	arpl   WORD PTR [esi+0x3f29e6d4],bp
  4277e9:	add    ebp,ebx
  4277eb:	dec    ebp
  4277ec:	jno    0x427802
  4277ee:	shl    cl,1
  4277f0:	sbb    BYTE PTR [edi+0x17],ch
  4277f3:	adc    BYTE PTR [edx-0x4100db68],0xf4
  4277fa:	mov    eax,ds:0x3c44c21f
  4277ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427800:	inc    edx
  427801:	inc    esi
  427802:	mov    esp,0xd3f9c4f4
  427807:	add    al,0x29
  427809:	push   0x40
  42780b:	mov    ecx,0xf7f30a2d
  427810:	cmp    ebp,esp
  427812:	or     DWORD PTR [edi-0x482a54e9],eax
  427818:	repnz das 
  42781a:	in     al,dx
  42781b:	cmp    bl,BYTE PTR [edi-0x5b0d3267]
  427821:	outs   dx,BYTE PTR ds:[esi]
  427822:	les    edx,FWORD PTR [ebp-0x23]
  427825:	mov    ah,BYTE PTR [edx+0xd]
  427828:	sbb    DWORD PTR [esi-0x30],edx
  42782b:	out    0x81,al
  42782d:	clc    
  42782e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42782f:	inc    eax
  427830:	push   edi
  427831:	fwait
  427832:	mov    dh,0xd4
  427834:	inc    ebx
  427835:	aas    
  427836:	(bad)  [ecx+ebx*1+0x22795d67]
  42783d:	(bad)  
  42783e:	sahf   
  42783f:	sbb    DWORD PTR [edi-0x57],edi
  427842:	cmovae ebx,DWORD PTR [ebx-0x5693a8c3]
  427849:	sbb    edx,DWORD PTR [eax+ebp*1+0x6771a6cf]
  427850:	adc    ebx,DWORD PTR [esi-0x5f4016de]
  427856:	fs test al,0x49
  427859:	mov    dh,0x2
  42785b:	push   ebx
  42785c:	push   ebx
  42785d:	sti    
  42785e:	push   edi
  42785f:	int    0xaf
  427861:	inc    edi
  427862:	popf   
  427863:	adc    eax,0x7797c0d4
  427868:	cmp    DWORD PTR [ecx+ebx*1-0x25bf854],ebp
  42786f:	pop    ebp
  427870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427871:	jl     0x4278d8
  427873:	cmp    DWORD PTR [eax-0x342cfe96],ebx
  427879:	cmc    
  42787a:	mov    edx,0x5336e7cd
  42787f:	mov    edi,0x1689593
  427884:	add    DWORD PTR [esi+0x336b7e66],edx
  42788a:	jo     0x427855
  42788c:	mov    dl,0xbf
  42788e:	stos   BYTE PTR es:[edi],al
  42788f:	lds    eax,FWORD PTR [ebp+0x19b94d2c]
  427895:	ror    edi,0x2f
  427898:	sub    eax,0xffffffc8
  42789b:	push   edx
  42789c:	lods   eax,DWORD PTR ds:[esi]
  42789d:	and    eax,DWORD PTR [esi]
  42789f:	pop    eax
  4278a0:	call   0x506fb6d7
  4278a5:	sub    DWORD PTR ds:0xe6354baa,ebp
  4278ab:	and    eax,0xd7268b93
  4278b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278b1:	sbb    BYTE PTR [edi],0xe3
  4278b4:	sbb    BYTE PTR [edx],cl
  4278b6:	test   BYTE PTR ds:0x3d1f850f,ah
  4278bc:	jmp    0x7e84:0x70014154
  4278c3:	dec    esi
  4278c4:	fs xchg esi,eax
  4278c6:	sub    eax,0x87d323dd
  4278cb:	sbb    ah,BYTE PTR [ecx]
  4278cd:	cmp    BYTE PTR [ebx+esi*1+0x2200952d],dh
  4278d4:	xchg   esp,eax
  4278d5:	fild   WORD PTR [ecx+0x271323f6]
  4278db:	in     eax,0xe7
  4278dd:	lock xor DWORD PTR [ecx-0x52849845],ebx
  4278e4:	mov    ecx,0x13b8e41c
  4278e9:	cmp    al,0x38
  4278eb:	fwait
  4278ec:	mov    ch,0x9d
  4278ee:	cli    
  4278ef:	pop    esp
  4278f0:	fimul  WORD PTR [edx+0x24]
  4278f3:	pushf  
  4278f4:	cmp    BYTE PTR [edx],dh
  4278f6:	fidiv  WORD PTR [ebx+ebx*1-0x8dae27f]
  4278fd:	mov    cl,0x18
  4278ff:	sub    edi,DWORD PTR [ecx-0xb]
  427902:	ret    0xc294
  427905:	mov    ah,0x88
  427907:	sbb    ah,dh
  427909:	sub    eax,0x27b53892
  42790e:	adc    BYTE PTR [eax+esi*8],ch
  427911:	stos   DWORD PTR es:[edi],eax
  427912:	rcl    al,cl
  427914:	(bad)  
  427915:	test   eax,0xa167a844
  42791a:	scas   eax,DWORD PTR es:[edi]
  42791b:	pop    eax
  42791c:	ins    BYTE PTR es:[edi],dx
  42791d:	push   es
  42791e:	cmp    eax,0x6bbbc6d1
  427923:	dec    ebp
  427924:	sub    eax,0x99b07d79
  427929:	stos   BYTE PTR es:[edi],al
  42792a:	pop    esp
  42792b:	inc    ebp
  42792c:	push   0x53d3c829
  427931:	cmp    DWORD PTR [esi+0x5f9f835e],0xffffffd3
  427938:	jno    0x427917
  42793a:	aaa    
  42793b:	pop    ebp
  42793c:	retf   0xa95c
  42793f:	adc    bh,BYTE PTR [ecx+ecx*4-0x3bab6403]
  427946:	clc    
  427947:	imul   edi,DWORD PTR [eax+ebx*2],0x53
  42794b:	repnz cmp eax,0x7874e2be
  427951:	lea    edi,[esi]
  427953:	add    ebp,edi
  427955:	inc    edx
  427956:	out    0xa8,eax
  427958:	call   0xc5a7:0xf6161672
  42795f:	or     ebp,DWORD PTR [edx-0x1a129105]
  427965:	clc    
  427966:	pop    edx
  427967:	cli    
  427968:	lahf   
  427969:	sub    BYTE PTR [esi],ch
  42796b:	ss retf 
  42796d:	std    
  42796e:	push   eax
  42796f:	mov    ds:0xb4a998db,eax
  427974:	(bad)  
  427975:	in     eax,0xea
  427977:	cmp    ebx,DWORD PTR [eax+0x136d86d2]
  42797d:	je     0x4279d4
  42797f:	loope  0x4279f7
  427981:	inc    edi
  427982:	mov    ebp,0xf7c6b307
  427987:	popa   
  427988:	pop    ss
  427989:	pop    ebx
  42798a:	sbb    al,0xcd
  42798c:	adc    BYTE PTR [ecx+eax*1+0x56],0x6e
  427991:	xor    ecx,DWORD PTR [esi+ebx*1]
  427994:	dec    esi
  427995:	repnz mov ebx,0x713ddb22
  42799b:	mov    esp,0xc4116b1f
  4279a0:	xchg   edx,eax
  4279a1:	dec    edx
  4279a2:	cmp    eax,0xe9e2022f
  4279a7:	ret    0xf5fc
  4279aa:	(bad)  
  4279ab:	xor    dh,BYTE PTR [edx+0x4d]
  4279ae:	xchg   edx,eax
  4279af:	mov    edx,0xfb7a3cc0
  4279b4:	jp     0x4279c0
  4279b6:	call   0x4bb0a881
  4279bb:	data16 in al,dx
  4279bd:	stc    
  4279be:	mov    ebp,0xb8e561b2
  4279c3:	dec    esi
  4279c4:	inc    ebp
  4279c5:	cmp    dl,BYTE PTR [eax+esi*1-0x12]
  4279c9:	jae    0x4279f1
  4279cb:	mov    edx,0xfae47f02
  4279d0:	out    dx,al
  4279d1:	pop    eax
  4279d2:	sub    dl,BYTE PTR [eax]
  4279d4:	fcom   DWORD PTR [ebp+0x23]
  4279d7:	in     eax,0xcb
  4279d9:	scas   al,BYTE PTR es:[edi]
  4279da:	pop    si
  4279dc:	push   edi
  4279dd:	jnp    0x427a09
  4279df:	jg     0x4279ec
  4279e1:	inc    ebp
  4279e2:	xchg   esi,eax
  4279e3:	in     eax,dx
  4279e4:	and    ebx,ebx
  4279e6:	out    dx,al
  4279e7:	scas   eax,DWORD PTR es:[edi]
  4279e8:	dec    esi
  4279e9:	xor    DWORD PTR ds:0xa2e833de,ebp
  4279ef:	adc    esi,DWORD PTR [ecx-0x63f198a9]
  4279f5:	loope  0x4279a9
  4279f7:	mov    ah,0x4a
  4279f9:	push   esp
  4279fa:	cmp    ebx,DWORD PTR [ebx+ecx*1+0x11]
  4279fe:	popf   
  4279ff:	call   0xd594:0x58359f6a
  427a06:	hlt    
  427a07:	dec    edx
  427a08:	or     al,0x3b
  427a0a:	rcl    DWORD PTR [ecx+0x45],1
  427a0d:	jg     0x427a00
  427a0f:	das    
  427a10:	sbb    al,0xe0
  427a12:	mov    edx,0xc6d1c7c0
  427a17:	sbb    al,0xb9
  427a19:	cli    
  427a1a:	add    BYTE PTR [eax],al
  427a1c:	call   0xdafe:0xfef82244
  427a23:	bound  di,DWORD PTR [eax-0xc718b8b]
  427a2a:	dec    eax
  427a2b:	sub    ecx,esi
  427a2d:	icebp  
  427a2e:	add    DWORD PTR [eax],eax
  427a30:	xchg   BYTE PTR [edx],al
  427a32:	add    BYTE PTR [eax],al
  427a34:	scas   eax,DWORD PTR es:[edi]
  427a35:	sub    ebx,DWORD PTR [edx-0x5f]
  427a38:	xor    ecx,DWORD PTR [edx]
  427a3a:	leave  
  427a3b:	xor    bl,BYTE PTR [edx+0x323a0dcb]
  427a41:	cmp    eax,0xc0a11d03
  427a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a47:	and    DWORD PTR [edx-0x549fd784],ebx
  427a4d:	push   edx
  427a4e:	fsubr  DWORD PTR [ebx-0x72]
  427a51:	push   ecx
  427a52:	mov    dl,0xe6
  427a54:	push   0xe05d41ff
  427a59:	mov    edi,0xfc280891
  427a5e:	ret    
  427a5f:	push   eax
  427a60:	(bad)  
  427a61:	sti    
  427a62:	mov    bh,0x2
  427a64:	lahf   
  427a65:	xor    al,0xd8
  427a67:	(bad)  
  427a69:	adc    BYTE PTR [eax],0x86
  427a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a6d:	xchg   esp,eax
  427a6e:	mov    ch,0xaf
  427a70:	sar    ebx,1
  427a72:	test   al,0xd4
  427a74:	dec    ebx
  427a75:	jmp    0x9dbe:0x474bef3
  427a7c:	sub    ebp,0xffffffd5
  427a7f:	jb     0x427ab1
  427a81:	adc    al,0x5c
  427a83:	inc    ebx
  427a84:	nop
  427a85:	mov    ah,al
  427a87:	and    ah,dl
  427a89:	sub    eax,0x4d4e55ef
  427a8e:	jge    0x427a7f
  427a90:	pusha  
  427a91:	mov    ah,0xa1
  427a93:	addr16 std 
  427a95:	pop    ss
  427a96:	in     eax,dx
  427a97:	sbb    eax,0x766aa144
  427a9c:	das    
  427a9d:	fmul   DWORD PTR [ebx+0x18]
  427aa0:	repz cmp BYTE PTR [ecx],dl
  427aa3:	push   ebp
  427aa4:	xlat   BYTE PTR ds:[ebx]
  427aa5:	mov    ch,BYTE PTR [ebx+0x3681c095]
  427aab:	(bad)  
  427aac:	and    eax,0xaafc7e79
  427ab1:	pushf  
  427ab2:	out    dx,al
  427ab3:	pop    es
  427ab4:	dec    ecx
  427ab5:	pop    ebx
  427ab6:	mov    ds:0x8e7cdf6d,al
  427abb:	ins    DWORD PTR es:[edi],dx
  427abc:	bound  ecx,QWORD PTR [edi+0x7d]
  427abf:	inc    ecx
  427ac0:	retf   
  427ac1:	xchg   ebp,eax
  427ac2:	or     al,dl
  427ac4:	retf   
  427ac5:	xor    DWORD PTR [ebx],edi
  427ac7:	pop    esi
  427ac8:	nop
  427ac9:	xor    dh,BYTE PTR [edx-0x66]
  427acc:	mov    esi,0x4b042eda
  427ad1:	fs pop ebx
  427ad3:	scas   eax,DWORD PTR es:[edi]
  427ad4:	inc    bh
  427ad6:	and    DWORD PTR [ecx+0x50dcc2ed],edx
  427adc:	fistp  QWORD PTR [edi-0x1f]
  427adf:	arpl   WORD PTR [eax+0x249cceef],ax
  427ae5:	test   BYTE PTR [eax+0x214c62f],dl
  427aeb:	xchg   BYTE PTR [edi+0x1bb24d3],al
  427af1:	jae    0x427ada
  427af3:	jmp    0xc09d:0xc636f57a
  427afa:	pop    ecx
  427afb:	mov    al,0x51
  427afd:	xchg   esi,eax
  427afe:	mov    eax,ds:0x9d474a6d
  427b03:	push   eax
  427b04:	test   al,dl
  427b06:	nop
  427b07:	lods   al,BYTE PTR ds:[esi]
  427b08:	xor    BYTE PTR [ecx],0xf8
  427b0b:	pop    es
  427b0c:	mov    WORD PTR [esp+esi*8-0x40d6362c],?
  427b13:	mov    fs,WORD PTR [ebp-0x1893a83e]
  427b19:	sub    ebp,DWORD PTR [ebx-0x2f2cf70f]
  427b1f:	cwde   
  427b20:	mov    edx,DWORD PTR ds:0x15834b0
  427b26:	pushf  
  427b27:	cmp    edi,ecx
  427b29:	xchg   BYTE PTR [ecx],dl
  427b2b:	jo     0x427b5b
  427b2d:	adc    ebp,DWORD PTR [ecx-0x55f8c719]
  427b33:	mov    WORD PTR [esi+0x76a37126],?
  427b39:	repnz repnz ins DWORD PTR es:[edi],dx
  427b3c:	inc    ebp
  427b3d:	xchg   ecx,eax
  427b3e:	idiv   DWORD PTR [ebp-0x5c34d828]
  427b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b45:	sbb    edi,ecx
  427b47:	dec    esp
  427b48:	in     eax,dx
  427b49:	cmp    ah,BYTE PTR [ebx]
  427b4b:	hlt    
  427b4c:	xor    ecx,DWORD PTR [edi-0x6]
  427b4f:	and    al,0x6a
  427b51:	mov    al,ds:0x385e9bd1
  427b56:	jb     0x427b4d
  427b58:	mov    ebx,0x907a7d5d
  427b5d:	pop    ss
  427b5e:	push   esi
  427b5f:	leave  
  427b60:	retf   0x83d4
  427b63:	push   edi
  427b64:	adc    eax,0x23849f8c
  427b69:	mov    ds:0xd201093a,eax
  427b6e:	sbb    ch,BYTE PTR [eax+0x2dd60b96]
  427b74:	popa   
  427b75:	and    ebp,ecx
  427b77:	inc    edx
  427b78:	push   cs
  427b79:	add    eax,0x89fb3f36
  427b7e:	fstp   TBYTE PTR [edi]
  427b80:	das    
  427b81:	(bad)  
  427b82:	aad    0x76
  427b84:	popf   
  427b85:	push   esp
  427b86:	push   es
  427b87:	push   esp
  427b88:	mov    esi,0x6e5c717c
  427b8d:	icebp  
  427b8e:	mov    edx,0x9cd663d1
  427b93:	cmp    esi,DWORD PTR [ecx]
  427b95:	sbb    al,0x4c
  427b97:	mov    ecx,0xfd84c49
  427b9c:	inc    eax
  427b9d:	dec    ebp
  427b9e:	sub    BYTE PTR [edx],al
  427ba0:	(bad)  
  427ba2:	les    eax,FWORD PTR [eax]
  427ba4:	stos   BYTE PTR es:[edi],al
  427ba5:	fsub   QWORD PTR [edi+0x3f9ec06d]
  427bab:	dec    ecx
  427bac:	std    
  427bad:	xchg   edx,eax
  427bae:	pop    ecx
  427baf:	adc    ecx,ebp
  427bb1:	adc    BYTE PTR [esi],bl
  427bb3:	dec    ecx
  427bb4:	mov    ebp,0xbe18fb99
  427bb9:	adc    DWORD PTR [ecx-0x6b218d6d],ecx
  427bbf:	cwde   
  427bc0:	scas   eax,DWORD PTR es:[edi]
  427bc1:	xchg   esi,eax
  427bc2:	add    DWORD PTR [ecx+ebp*1],edx
  427bc5:	in     al,dx
  427bc6:	mov    sp,bx
  427bc9:	sbb    BYTE PTR [edx],dh
  427bcb:	mov    cl,0x55
  427bcd:	mov    ds:0xfeac8b53,eax
  427bd2:	ret    0xf015
  427bd5:	cmp    BYTE PTR [edi],bl
  427bd7:	ins    BYTE PTR es:[edi],dx
  427bd8:	push   edx
  427bd9:	mov    ebx,0x45725967
  427bde:	aad    0x9a
  427be0:	sub    dh,BYTE PTR [eax-0x61e382f1]
  427be6:	xchg   BYTE PTR [esi-0x2],dl
  427be9:	mov    ah,0x65
  427beb:	test   BYTE PTR [esi-0x2c4cf0d],cl
  427bf1:	sar    dh,0x52
  427bf4:	xor    dh,BYTE PTR [ebx+0x25]
  427bf7:	or     al,0x45
  427bf9:	out    0xa5,eax
  427bfb:	inc    ebx
  427bfc:	imul   edx,ebx,0x71
  427bff:	mov    eax,DWORD PTR [ebx-0x4d]
  427c02:	jg     0x427be0
  427c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c05:	xchg   al,bl
  427c07:	rcr    eax,1
  427c09:	aas    
  427c0a:	jl     0x427c36
  427c0c:	push   0x11fafa15
  427c11:	outs   dx,BYTE PTR ds:[esi]
  427c12:	mov    al,ds:0x28cb06cf
  427c17:	pop    es
  427c18:	mov    edx,0xca6fd26b
  427c1d:	jecxz  0x427bad
  427c1f:	xor    al,0x62
  427c21:	push   es
  427c22:	dec    esp
  427c23:	mov    dl,0xf9
  427c25:	ror    BYTE PTR [ecx+0x4598adb8],1
  427c2b:	ds sbb eax,0xaf8410a5
  427c31:	call   0xb0eae4a2
  427c36:	mov    esp,0x4068c837
  427c3b:	jbe    0x427c35
  427c3d:	sti    
  427c3e:	call   0x8867ae41
  427c43:	repnz loop 0x427bdb
  427c46:	addr16 pusha 
  427c48:	mov    dl,0xf7
  427c4a:	add    dl,BYTE PTR [edx+ebp*4]
  427c4d:	les    ebx,FWORD PTR [ebp-0x6d]
  427c50:	cmp    BYTE PTR [ebp+0x1],dl
  427c53:	mov    dh,0x24
  427c55:	int    0xa9
  427c57:	push   ebx
  427c58:	ins    DWORD PTR es:[edi],dx
  427c59:	sub    eax,0x197341e4
  427c5e:	or     DWORD PTR [ebp+0x400266e1],0xfa9b8525
  427c68:	push   ebx
  427c69:	and    eax,0x1f4dfa0b
  427c6e:	inc    ebp
  427c6f:	adc    eax,0xaff55314
  427c74:	scas   al,BYTE PTR es:[edi]
  427c75:	and    DWORD PTR [ebx+0x47],edx
  427c78:	scas   al,BYTE PTR es:[edi]
  427c79:	test   DWORD PTR [ebx],esp
  427c7b:	jbe    0x427cb5
  427c7d:	inc    eax
  427c7e:	push   esp
  427c7f:	adc    al,ch
  427c81:	in     al,0xdc
  427c83:	iret   
  427c84:	int    0x26
  427c86:	xchg   edi,eax
  427c87:	adc    eax,0x20214ee8
  427c8c:	stos   DWORD PTR es:[edi],eax
  427c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c8e:	jge    0x427c38
  427c90:	and    eax,0x29284192
  427c95:	ror    ebx,0x21
  427c98:	or     DWORD PTR [ecx-0x11],0x31856725
  427c9f:	push   esp
  427ca0:	ret    0xb31a
  427ca3:	je     0x427cd2
  427ca5:	ins    BYTE PTR es:[edi],dx
  427ca6:	jl     0x427c7e
  427ca8:	fld    QWORD PTR [ebp+0xd]
  427cab:	(bad)  
  427cac:	cld    
  427cad:	test   BYTE PTR [ebp+0x7d],0x9b
  427cb1:	shl    BYTE PTR [edx+0x1a],1
  427cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cb5:	(bad)  
  427cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cb7:	inc    ebp
  427cb8:	sbb    dl,ch
  427cba:	add    BYTE PTR [eax],al
  427cbc:	nop
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	dec    esp
  427cc9:	daa    
  427cca:	adc    esp,0x54
  427ccd:	hlt    
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	xchg   BYTE PTR [edx],al
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	(bad)  
  427cd5:	icebp  
  427cd6:	dec    eax
  427cd7:	or     ebx,DWORD PTR [edx]
  427cd9:	int    0x1
  427cdb:	xchg   esp,eax
  427cdc:	pop    ebx
  427cdd:	test   ebx,ebx
  427cdf:	adc    al,0x37
  427ce1:	fsub   QWORD PTR [eax-0x12]
  427ce4:	sub    ah,BYTE PTR [edx+0x7d]
  427ce7:	push   0xfffffff9
  427ce9:	add    eax,0x3d67e7d
  427cee:	lahf   
  427cef:	shr    BYTE PTR [eax],1
  427cf1:	in     al,dx
  427cf2:	sar    DWORD PTR [edi-0x14623355],1
  427cf8:	mov    bh,0x9
  427cfa:	test   al,0xbb
  427cfc:	int3   
  427cfd:	clc    
  427cfe:	add    BYTE PTR [edx+0x32],cl
  427d01:	scas   al,BYTE PTR es:[edi]
  427d02:	jle    0x427d60
  427d04:	stos   BYTE PTR es:[edi],al
  427d05:	add    ah,BYTE PTR [ebp-0x42]
  427d08:	jbe    0x427d07
  427d0a:	dec    esi
  427d0b:	push   ss
  427d0c:	lea    edx,[edx-0x426bf7bd]
  427d12:	mov    bh,BYTE PTR [ecx+0x7207efb3]
  427d18:	je     0x427cf3
  427d1a:	ret    
  427d1b:	adc    dl,BYTE PTR [edi]
  427d1d:	pop    edi
  427d1e:	mov    esi,0xa4b4431e
  427d23:	gs out dx,al
  427d25:	jnp    0x427d7f
  427d27:	out    dx,al
  427d28:	(bad)  
  427d2a:	mov    dl,0xe8
  427d2c:	cdq    
  427d2d:	pop    es
  427d2e:	hlt    
  427d2f:	push   0x51
  427d31:	cmp    al,0xea
  427d33:	loop   0x427d31
  427d35:	fbld   TBYTE PTR [ecx-0x61ce5879]
  427d3b:	xchg   BYTE PTR [eax+0x3bbb93bc],ah
  427d41:	je     0x427d83
  427d43:	test   al,0xff
  427d45:	cld    
  427d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d47:	aam    0x0
  427d49:	cwde   
  427d4a:	out    dx,al
  427d4b:	loop   0x427dc9
  427d4d:	push   cs
  427d4e:	xchg   ecx,eax
  427d4f:	or     esp,esi
  427d51:	xchg   ebp,eax
  427d52:	out    0x8,al
  427d54:	xor    edx,0x185d3bd8
  427d5a:	pop    es
  427d5b:	cmp    DWORD PTR [ebp+0x3b],edx
  427d5e:	and    ch,bh
  427d60:	ja     0x427ce7
  427d62:	mov    ah,al
  427d64:	jmp    0x427cfe
  427d66:	add    esp,ebx
  427d68:	xor    ch,BYTE PTR [edx-0x4248c8de]
  427d6e:	adc    al,BYTE PTR gs:[edx]
  427d71:	call   0x415035d7
  427d76:	ficom  WORD PTR [esi-0xfcfd6cb]
  427d7c:	mov    ah,0x59
  427d7e:	fsub   st,st(6)
  427d80:	push   esi
  427d81:	inc    ebp
  427d82:	(bad)  
  427d83:	sti    
  427d84:	ret    0x66a4
  427d87:	in     eax,dx
  427d88:	sub    al,0xef
  427d8a:	adc    al,0x63
  427d8c:	mov    edi,0xc518470f
  427d91:	and    al,BYTE PTR [edx+0x73]
  427d94:	push   ecx
  427d95:	pop    ds
  427d96:	adc    bh,bh
  427d98:	cmc    
  427d99:	icebp  
  427d9a:	adc    al,BYTE PTR [ecx+0x2be211ac]
  427da0:	cmp    bl,BYTE PTR [ebp-0x2f]
  427da3:	mov    eax,ds:0x148f347b
  427da8:	call   0xb1a:0xafbfb5de
  427daf:	(bad)  
  427db1:	jmp    0xbb2e8e63
  427db6:	in     eax,dx
  427db7:	stc    
  427db8:	push   0x60
  427dba:	xchg   ebx,eax
  427dbb:	iret   
  427dbc:	jecxz  0x427d65
  427dbe:	fld    QWORD PTR [esp+edx*4]
  427dc1:	push   ebp
  427dc2:	aaa    
  427dc3:	dec    esp
  427dc4:	push   0xffffffab
  427dc6:	sahf   
  427dc7:	push   edx
  427dc8:	jmp    0x427d9d
  427dca:	sub    dl,BYTE PTR [ebx+0x6343872d]
  427dd0:	adc    cl,bh
  427dd2:	mul    cl
  427dd4:	aaa    
  427dd5:	les    esi,FWORD PTR [ebx+0x39]
  427dd8:	and    ecx,DWORD PTR [edi]
  427dda:	mov    dl,0xa8
  427ddc:	cmp    DWORD PTR ds:0xc2a9b993,ebp
  427de2:	outs   dx,DWORD PTR ds:[esi]
  427de3:	sbb    al,0xb
  427de5:	sbb    BYTE PTR [ebx+ebp*4-0x70],bl
  427de9:	jge    0x427d95
  427deb:	test   esi,esi
  427ded:	aad    0xaa
  427def:	retf   
  427df0:	pop    ds
  427df1:	pop    ecx
  427df2:	add    BYTE PTR ds:0xee9b786b,0x9f
  427df9:	inc    esp
  427dfa:	les    esi,FWORD PTR [esi]
  427dfc:	dec    edi
  427dfd:	xchg   BYTE PTR [esi+0x3d],ah
  427e00:	ret    
  427e01:	iret   
  427e02:	inc    edx
  427e03:	push   es
  427e04:	jl     0x427e22
  427e06:	mov    ebx,DWORD PTR [ebx-0x19e5174a]
  427e0c:	inc    ebx
  427e0d:	jbe    0x427e06
  427e0f:	inc    esp
  427e10:	rol    BYTE PTR [edx-0x7d],1
  427e13:	xor    esi,DWORD PTR [si-0x26]
  427e17:	popa   
  427e18:	jl     0x427dea
  427e1a:	cmp    eax,0x7d5e46fc
  427e1f:	add    BYTE PTR [ecx-0x38],al
  427e22:	jecxz  0x427df9
  427e24:	xor    ebx,ecx
  427e26:	repz loop 0x427dec
  427e29:	aas    
  427e2a:	sub    ebx,DWORD PTR [ecx]
  427e2c:	dec    edx
  427e2d:	dec    edi
  427e2e:	or     DWORD PTR [esi+0x59],ecx
  427e31:	sar    BYTE PTR [edi+0x7c],cl
  427e34:	popf   
  427e35:	jmp    0x427e0e
  427e37:	jne    0x427de5
  427e39:	test   eax,0xc6d9afbe
  427e3e:	fmulp  st(6),st
  427e40:	loop   0x427e06
  427e42:	(bad)  [ebp+0x54]
  427e45:	sub    ch,al
  427e47:	add    esi,DWORD PTR [eax]
  427e49:	jle    0x427e6b
  427e4b:	out    0xea,al
  427e4d:	mov    bh,0xb3
  427e4f:	fstp   DWORD PTR [eax-0x63]
  427e52:	es cmp al,0xcd
  427e55:	pop    eax
  427e56:	les    esp,FWORD PTR [edi+0x4b]
  427e59:	stos   BYTE PTR es:[edi],al
  427e5a:	add    BYTE PTR [edx-0x43f7975f],bl
  427e60:	and    al,0x42
  427e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e63:	stos   DWORD PTR es:[edi],eax
  427e64:	or     BYTE PTR [edi],ch
  427e66:	mov    BYTE PTR [ecx-0x14],cl
  427e69:	ret    0xb488
  427e6c:	in     eax,dx
  427e6d:	jno    0x427e3c
  427e6f:	xlat   BYTE PTR ds:[bx]
  427e71:	cmp    eax,0x9f21b465
  427e76:	int3   
  427e77:	or     dl,bh
  427e79:	or     BYTE PTR [edx+0x22],bh
  427e7c:	retf   
  427e7d:	ret    0xd0f6
  427e80:	jbe    0x427e51
  427e82:	mov    dx,0xde8f
  427e86:	int3   
  427e87:	jae    0x427e3f
  427e89:	push   DWORD PTR [esi+0x3f7abb3e]
  427e8f:	pushf  
  427e90:	test   al,0x8d
  427e92:	sub    al,0x40
  427e94:	leave  
  427e95:	imul   ebx,edi,0xffffffb2
  427e98:	sub    DWORD PTR [esi],ecx
  427e9a:	jecxz  0x427e9a
  427e9c:	ja     0x427f04
  427e9e:	ret    
  427e9f:	sub    ecx,0xffffffc8
  427ea2:	jnp    0x427ef0
  427ea4:	cli    
  427ea5:	inc    ecx
  427ea6:	je     0x427e35
  427ea8:	push   esi
  427ea9:	test   DWORD PTR [edi],esp
  427eab:	fdivr  DWORD PTR [edx+0x123d930a]
  427eb1:	or     eax,0x673e195a
  427eb6:	mov    ds:0xc8bc59b2,al
  427ebb:	dec    esp
  427ebc:	and    edx,DWORD PTR [eax+0x13abab90]
  427ec2:	push   esp
  427ec3:	or     DWORD PTR [eax-0x44],ecx
  427ec6:	dec    edi
  427ec7:	shl    BYTE PTR [ebp+0x20],0x9
  427ecb:	adc    DWORD PTR [ebp+esi*2+0x60523879],esp
  427ed2:	mov    gs,WORD PTR [eax-0x25e72260]
  427ed8:	or     DWORD PTR [ebp+0x1f],ecx
  427edb:	pop    esi
  427edc:	adc    edi,DWORD PTR [ebx-0x40fd10cc]
  427ee2:	fdiv   DWORD PTR [edx]
  427ee4:	xchg   ebx,eax
  427ee5:	xor    dh,BYTE PTR [ebx+0x5b]
  427ee8:	call   0xd1fd:0x45bc38a6
  427eef:	jmp    0x427f64
  427ef1:	xchg   ebx,eax
  427ef2:	dec    edi
  427ef3:	in     eax,dx
  427ef4:	xchg   esp,eax
  427ef5:	cmp    al,0x57
  427ef7:	sub    edi,DWORD PTR cs:[edi+ecx*4]
  427efb:	dec    edx
  427efc:	sbb    al,0xc4
  427efe:	xchg   edx,eax
  427eff:	dec    ebp
  427f00:	push   edi
  427f01:	adc    al,0x29
  427f03:	sahf   
  427f04:	jb     0x427e8c
  427f06:	mov    ds:0xbd8dd510,al
  427f0b:	nop
  427f0c:	mov    ebx,0x55e41bf8
  427f11:	push   edi
  427f12:	adc    eax,0xa70b612
  427f17:	clc    
  427f18:	lods   al,BYTE PTR ds:[esi]
  427f19:	lods   eax,DWORD PTR ds:[esi]
  427f1a:	lea    esi,[esi-0x58d04d55]
  427f20:	lahf   
  427f21:	jge    0x427ecb
  427f23:	dec    edx
  427f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f25:	mov    bl,0xa5
  427f27:	xlat   BYTE PTR ds:[ebx]
  427f28:	and    eax,0x31621d8a
  427f2d:	push   es
  427f2e:	push   ebx
  427f2f:	push   eax
  427f30:	call   0xcf72e316
  427f35:	push   ebp
  427f36:	rcr    dl,0x97
  427f39:	repz jo 0x427f95
  427f3c:	sbb    BYTE PTR [eax+0x3a],cl
  427f3f:	lea    ebx,[esi]
  427f41:	inc    esp
  427f42:	cwde   
  427f43:	fldenv [ebp-0x75]
  427f46:	add    eax,0x6df0b87
  427f4b:	dec    esi
  427f4c:	sub    ah,BYTE PTR [esi]
  427f4e:	sbb    ecx,DWORD PTR [ebx+0x18d8241]
  427f54:	inc    esp
  427f55:	ret    
  427f56:	test   eax,0x17c542
  427f5b:	add    ch,bh
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	mov    ebp,0xdaeac423
  427f6d:	test   BYTE PTR [ecx],0x0
  427f70:	outs   dx,BYTE PTR ds:[esi]
  427f71:	add    al,BYTE PTR [eax]
  427f73:	add    BYTE PTR [edx-0x28],dh
  427f76:	pop    es
  427f77:	nop
  427f78:	or     eax,0x5541b1fe
  427f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f7e:	cmp    esi,0x33
  427f81:	xchg   ebp,eax
  427f82:	mov    WORD PTR [esi],cs
  427f84:	pop    ds
  427f85:	mov    ds:0x5166090d,al
  427f8a:	jmp    0x427fe8
  427f8c:	cmp    al,0x94
  427f8e:	test   BYTE PTR [ebp+0x2a],al
  427f91:	sbb    DWORD PTR [edx-0x1f],ebp
  427f94:	and    DWORD PTR ds:0xf88bb3eb,0x6ddc8ce1
  427f9e:	and    eax,0xde980b7d
  427fa3:	xor    BYTE PTR [ebx-0x237f4933],0x94
  427faa:	inc    ebx
  427fab:	lods   al,BYTE PTR ds:[esi]
  427fac:	push   edx
  427fad:	dec    BYTE PTR [edx]
  427faf:	dec    esi
  427fb0:	pushf  
  427fb1:	daa    
  427fb2:	sbb    ecx,DWORD PTR [esp+esi*8]
  427fb5:	outs   dx,BYTE PTR ds:[esi]
  427fb6:	mov    ds:0x40d363fa,al
  427fbb:	xchg   esp,eax
  427fbc:	push   ecx
  427fbd:	test   DWORD PTR [edi-0x5902c09c],0x5747746a
  427fc7:	inc    edx
  427fc8:	ror    DWORD PTR [ecx-0x41],0x35
  427fcc:	pop    esi
  427fcd:	dec    ch
  427fcf:	xchg   BYTE PTR [ecx-0x77],bl
  427fd2:	or     DWORD PTR [eax],edi
  427fd4:	rcr    esi,cl
  427fd6:	jecxz  0x427fef
  427fd8:	arpl   WORD PTR es:[edx-0x7f299a4a],bp
  427fdf:	imul   edi,DWORD PTR [ecx+0x39],0xd0466204
  427fe6:	adc    ebp,ecx
  427fe8:	sbb    BYTE PTR [ecx+0x4f],cl
  427feb:	adc    DWORD PTR [edx+0x2a],esi
  427fee:	pop    es
  427fef:	imul   eax,DWORD PTR [esi-0x6f],0x7d9ef11c
  427ff6:	jnp    0x427fc5
  427ff8:	sbb    BYTE PTR [eax+0x2f],ah
  427ffb:	popf   
  427ffc:	cmc    
  427ffd:	std    
  427ffe:	repz clc 
  428000:	shr    DWORD PTR [edi+0x41],0x4f
  428004:	scas   eax,DWORD PTR es:[edi]
  428005:	sbb    edi,esi
  428007:	es pop ebp
  428009:	aad    0xb7
  42800b:	cmp    BYTE PTR [esi],ch
  42800d:	outs   dx,DWORD PTR ds:[esi]
  42800e:	cmc    
  42800f:	sub    DWORD PTR [ecx],edi
  428011:	add    al,0x5
  428013:	nop
  428014:	cmp    edx,DWORD PTR [ebx]
  428016:	sub    al,0xc6
  428018:	or     al,0xc1
  42801a:	hlt    
  42801b:	sbb    BYTE PTR [ebx],bh
  42801d:	mov    eax,0x98cce3a9
  428022:	cmp    BYTE PTR [ecx],ch
  428024:	stos   BYTE PTR es:[edi],al
  428025:	jnp    0x427fd9
  428027:	cdq    
  428028:	push   eax
  428029:	mov    ah,0x69
  42802b:	pushf  
  42802c:	pop    es
  42802d:	jmp    0x2341e7b5
  428032:	pop    ecx
  428033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428034:	pop    edx
  428035:	fistp  WORD PTR [ecx+0x5f73f8fd]
  42803b:	xor    eax,0xc93f0f80
  428040:	dec    ebp
  428041:	mov    ebp,0x34a1d6ad
  428046:	xor    al,0xaf
  428048:	and    eax,DWORD PTR [eax]
  42804a:	aam    0x21
  42804c:	fiadd  WORD PTR ds:[edi-0xf]
  428050:	sub    eax,0x5758513e
  428055:	test   ch,0xb3
  428058:	int3   
  428059:	jae    0x428071
  42805b:	std    
  42805c:	enter  0xde43,0xd2
  428060:	in     eax,dx
  428061:	aas    
  428062:	pop    ss
  428063:	and    BYTE PTR [eax+eax*4+0x67f2a444],dh
  42806a:	(bad)  
  42806b:	jmp    0xa0c8:0x36c4829d
  428072:	enter  0x6fd3,0x3d
  428076:	mov    ds:0x124eb78e,eax
  42807b:	idiv   DWORD PTR [edi+0x3488cf9a]
  428081:	sbb    eax,0x13e0acfd
  428086:	jecxz  0x42806e
  428088:	xchg   ebp,eax
  428089:	push   es
  42808a:	loopne 0x428027
  42808c:	mov    esp,0xc739b0fe
  428091:	lods   al,BYTE PTR ds:[esi]
  428092:	ins    BYTE PTR es:[edi],dx
  428093:	inc    esp
  428094:	das    
  428095:	sub    BYTE PTR [edi-0x43],bh
  428098:	adc    eax,0x3a968a9
  42809d:	mov    ch,dh
  42809f:	jecxz  0x42809d
  4280a1:	nop
  4280a2:	jecxz  0x428032
  4280a4:	jae    0x4280dd
  4280a6:	push   esp
  4280a7:	sbb    bh,ah
  4280a9:	push   ds
  4280aa:	fiadd  WORD PTR [ecx+0x26]
  4280ad:	stos   DWORD PTR es:[edi],eax
  4280ae:	jmp    FWORD PTR ds:[ebx-0x18853437]
  4280b5:	jno    0x428070
  4280b7:	mul    esi
  4280b9:	xchg   edi,eax
  4280ba:	cmp    edx,DWORD PTR [ebx-0x78f6e3e2]
  4280c0:	xor    BYTE PTR [edi+0x51c99331],0xb7
  4280c7:	aam    0x9f
  4280c9:	push   0xffffffab
  4280cb:	add    DWORD PTR [ebx-0x230f4f29],ecx
  4280d1:	dec    eax
  4280d2:	pop    ds
  4280d3:	xlat   BYTE PTR ds:[ebx]
  4280d4:	sbb    al,0x29
  4280d6:	jle    0x428138
  4280d8:	not    BYTE PTR [eax]
  4280da:	js     0x42809f
  4280dc:	and    al,0xa2
  4280de:	out    dx,eax
  4280df:	inc    ebp
  4280e0:	pop    esp
  4280e1:	and    al,0xdd
  4280e3:	jb     0x428092
  4280e5:	repz or eax,0xb70ce01d
  4280eb:	shl    BYTE PTR [eax],1
  4280ed:	into   
  4280ee:	xchg   ebp,eax
  4280ef:	daa    
  4280f0:	jne    0x428079
  4280f2:	shl    DWORD PTR [esi],0x2e
  4280f5:	jecxz  0x428100
  4280f7:	mov    BYTE PTR ds:0xc1e22608,cl
  4280fd:	jmp    0x911a:0xb8db93d1
  428104:	cdq    
  428105:	push   ebx
  428106:	xchg   edi,eax
  428107:	add    ch,ah
  428109:	ret    0x968b
  42810c:	cmp    edi,ecx
  42810e:	jne    0x4280bd
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	adc    BYTE PTR [edi+esi*2+0x33],ch
  428115:	mov    bl,0xe8
  428117:	out    dx,al
  428118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428119:	adc    eax,0x48d55528
  42811e:	adc    eax,ebp
  428120:	dec    edi
  428121:	cs push esp
  428123:	idiv   ch
  428125:	cmp    DWORD PTR [ecx],0xedeb5f15
  42812b:	outs   dx,DWORD PTR ds:[esi]
  42812c:	mov    esp,0xab1bbed1
  428131:	popa   
  428132:	bound  ebx,QWORD PTR [edi+eax*2]
  428135:	inc    eax
  428136:	inc    edx
  428137:	fcomip st,st(0)
  428139:	mov    edi,0x2ba282ed
  42813e:	jmp    FWORD PTR [esi+0x37]
  428141:	imul   ebx,DWORD PTR [ebx],0x4df1c678
  428147:	js     0x42813d
  428149:	lods   al,BYTE PTR ds:[esi]
  42814a:	fdivr  DWORD PTR [ebx-0x61ee6ef8]
  428150:	in     eax,0x3d
  428152:	inc    DWORD PTR [ecx+0x30]
  428155:	retf   0xc7cf
  428158:	in     al,0xa8
  42815a:	jp     0x4281cc
  42815c:	cmp    esi,DWORD PTR [ebx+0x73]
  42815f:	xchg   ebx,eax
  428160:	add    ebx,DWORD PTR [eax]
  428162:	mov    edi,0x729a04c8
  428167:	ds and eax,0x1eaa4e52
  42816d:	inc    ebp
  42816e:	inc    esi
  42816f:	or     eax,0xaa0d8675
  428174:	sqrtps xmm6,xmm0
  428177:	lahf   
  428178:	inc    esp
  428179:	sbb    dh,BYTE PTR [eax]
  42817b:	mov    bh,0xee
  42817d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42817e:	sub    ebp,DWORD PTR [ebp-0xf]
  428181:	pop    ss
  428182:	push   esp
  428183:	js     0x4281fd
  428185:	cld    
  428186:	mov    al,ds:0x5bc3c04b
  42818b:	add    eax,0x9ef38eca
  428190:	xor    DWORD PTR [edx-0x418e5044],edi
  428196:	aas    
  428197:	enter  0x7b39,0xfd
  42819b:	sub    al,0x3c
  42819d:	int    0xa0
  42819f:	das    
  4281a0:	enter  0xceb1,0x69
  4281a4:	je     0x4281f4
  4281a6:	inc    esi
  4281a7:	or     DWORD PTR [esi],0xf7c7ee66
  4281ad:	out    0x35,eax
  4281af:	in     eax,dx
  4281b0:	lea    ebx,[esi+eax*8]
  4281b3:	retf   0xab46
  4281b6:	push   es
  4281b7:	mov    DWORD PTR [edx+ebx*4+0x35683768],edx
  4281be:	test   DWORD PTR [esi],ecx
  4281c0:	and    eax,0x16e618ec
  4281c5:	cli    
  4281c6:	push   ebp
  4281c7:	mov    WORD PTR [ebx+0x14331156],gs
  4281cd:	xchg   esp,eax
  4281ce:	test   eax,0xed8dd169
  4281d3:	fadd   DWORD PTR [ecx]
  4281d5:	and    dh,cl
  4281d7:	cmovs  ecx,DWORD PTR [ecx-0x5a002832]
  4281de:	and    DWORD PTR [ecx+0x52],ebp
  4281e1:	or     BYTE PTR [eax],al
	...
